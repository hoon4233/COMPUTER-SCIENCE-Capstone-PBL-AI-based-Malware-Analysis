sub
jl
and
add
cli
scas
add
add
add
push
add
mov
sub
mov
leave
jmp
xchg
(bad)
sti
pop
mov
mov
je
mov
lahf
popf
pop
add
add
push
call
and
or
in
mov
call
push
add
pop
int3
add
cmp
arpl
mov
mov
add
(bad)
mov
pop
or
hlt
push
or
sub
push
or
xor
ja
pop
in
and
pop
pop
sbb
cmp
imul
add
dec
push
and
ret
fstp
mov
outs
loopne
mov
mov
(bad)
iret
out
bound
mov
outs
dec
jb
sbb
adc
push
jmp
add
pushf
mov
lea
mov
mov
hlt
pop
and
mov
pop
jnp
or
inc
or
lock
mov
add
cmp
mov
sub
adc
add
std
mov
or
pop
xor
add
pop
pop
ret
mov
cmp
xchg
push
pop
cmp
mov
rcr
sbb
pusha
or
mov
shr
out
fnstsw
xor
icebp
add
inc
push
or
test
sar
les
adc
or
sub
or
(bad)
pop
jo
out
nop
add
jl
jg
pusha
mov
mov
and
mov
movs
test
mov
cmp
or
out
add
mov
cmp
es
mov
ret
nop
nop
nop
pop
adc
clc
inc
outs
in
or
push
adc
sbb
addr16
shl
add
adc
pop
popf
fcmovnu
sti
jo
push
adc
xor
adc
cmp
or
adc
push
xor
push
add
dec
data16
sti
sahf
or
sbb
fbld
adc
add
add
arpl
adc
mov
push
adc
add
and
add
outs
wrmsr
adc
and
lods
inc
pop
stos
je
add
push
(bad)
es
xchg
push
lods
mov
jl
lock
and
pop
aaa
jbe
out
or
sub
dec
mov
add
mov
mov
in
adc
lock
setl
test
adc
jmp
mov
adc
mov
loopne
in
inc
lock
daa
xor
cld
(bad)
or
xchg
mov
and
cmp
setle
pusha
xor
sbb
add
lock
in
(bad)
fstp
ror
push
lock
sub
mov
imul
pop
ja
sub
add
call
fadd
loopne
mov
fstp
add
shl
jg
mov
loop
jmp
sbb
fnstsw
add
mov
add
xchg
push
or
leave
ret
inc
loope
aad
push
outs
mov
mov
pop
shl
leave
jge
add
adc
lea
lods
fcomp
xor
jmp
and
push
pop
pop
daa
xchg
(bad)
mov
jmp
adc
cmp
jg
outs
mov
mov
leave
push
movzx
movs
outs
sub
in
(bad)
imul
repz
push
aam
popw
jp
xor
mov
scas
fs
aaa
push
jecxz
jmp
mov
lods
or
adc
dec
call
jg
clc
pop
js
cli
pop
mov
ret
mov
(bad)
pop
and
mov
or
xchg
popf
data16
icebp
pusha
js
sbb
outs
fdiv
pusha
add
add
js
sbb
jb
jp
jecxz
cmp
and
xchg
stos
xchg
hlt
ins
add
cmps
sbb
fisub
xchg
push
dec
shl
ds
jne
push
push
cmps
adc
mov
or
fld
jbe
adc
xchg
xlat
inc
add
adc
xor
adc
rcl
mov
adc
or
sbb
hlt
or
lahf
pop
add
inc
add
lea
xor
pop
push
ror
jg
pop
mov
and
and
or
push
std
jbe
cmps
fmul
push
imul
(bad)
xor
mov
or
jg
fwait
or
adc
dec
in
dec
fiadd
push
fimul
adc
(bad)
or
out
in
jbe
ffreep
pop
adc
or
add
and
lea
lock
inc
movs
xlat
or
xchg
mov
pop
mov
push
lods
push
loopne
jle
nop
movs
xor
jge
je
add
add
adc
push
(bad)
in
mov
fld
pop
test
jae
pop
or
enter
mov
retf
ret
xchg
push
retf
popa
outs
sbb
ss
or
and
push
jnp
movs
dec
movs
enter
push
or
int3
enter
mov
jbe
fist
loope
and
pop
inc
adc
pop
push
iret
ja
out
vpminsw
dec
mov
ins
test
and
inc
test
std
out
sti
add
or
inc
push
fmul
pop
xchg
js
xlat
push
inc
movs
sub
or
jo
xchg
push
jbe
adc
or
sbb
mov
jbe
aaa
jmp
fs
std
add
and
enter
hlt
ss
mov
and
(bad)
fadd
or
call
or
and
add
inc
or
and
imul
adc
or
mov
movzx
rcr
out
or
outs
push
pop
jl
adc
addr16
iret
icebp
test
or
fild
outs
aaa
popa
test
fst
stos
adc
mov
test
adc
fisttp
push
mov
mov
ss
test
cmp
adc
or
(bad)
mov
inc
cmc
add
adc
js
jmp
pop
adc
inc
stos
adc
ins
or
sbb
adc
test
data16
cs
sti
and
cwde
push
fidiv
ret
pop
cmp
das
fdiv
dec
hlt
sub
mov
fucomi
ud2
pop
js
push
xchg
ja
jo
sbb
adc
dec
shr
add
fst
(bad)
and
inc
in
push
add
shl
add
mov
xor
cwde
xchg
mov
ss
jbe
jmp
adc
sbb
add
adc
adc
mov
hlt
jle
ins
sub
xor
dec
fs
cmp
test
mov
jo
inc
(bad)
std
dec
cmp
pop
pop
in
pop
jge
call
pusha
not
pop
inc
jmp
ins
jl
fadd
rol
or
xchg
ins
and
or
adc
adc
pop
jl
xchg
adc
pusha
sbb
js
adc
jnp
sbb
add
pushf
adc
fnstenv
xchg
mov
lea
ret
hlt
jmp
aad
into
mov
pusha
cmp
push
rcl
xor
push
or
sbb
cld
(bad)
or
adc
aad
or
or
rol
inc
cld
ja
xor
aad
in
add
cmp
xlat
inc
nop
cs
add
loope
lock
adc
rol
ss
(bad)
jo
dec
cld
add
dec
(bad)
mov
test
or
sub
adc
movs
daa
loopne
xchg
adc
sbb
lock
movnti
fwait
push
sbb
out
dec
cli
push
adc
cwde
sti
mov
stc
push
popa
adc
xchg
push
mov
or
pop
shl
ds
es
jp
or
jl
sub
mov
push
loopne
adc
ret
(bad)
icebp
or
jo
push
in
jmp
popa
jo
add
cmps
inc
add
in
jecxz
adc
xor
and
stos
mov
adc
out
or
xor
and
push
pop
cmps
fcom
xor
inc
mov
and
mov
aaa
sub
js
mov
push
mov
push
inc
pop
jb
mov
inc
aad
mov
mov
mov
pop
(bad)
leave
mov
add
adc
stc
sbb
inc
retf
not
xor
xor
in
dec
sbb
int
add
fadd
push
push
outs
adc
push
inc
and
cwde
xor
rcl
add
xchg
cmp
jle
mov
jbe
mov
dec
loopne
fdivr
jle
sbb
and
jg
loop
adc
(bad)
ins
sbb
mov
jne
je
aad
adc
add
push
(bad)
fldenv
dec
dec
pop
cmovb
mov
push
add
or
or
lock
cld
or
dec
std
lea
(bad)
inc
jb
inc
movs
shl
test
addr16
jae
sbb
pushf
stc
iret
push
sbb
jmp
and
add
xchg
jne
jnp
cs
test
aas
or
aas
popa
out
add
adc
sbb
rcl
add
mov
and
aas
and
pop
lods
push
inc
ss
mov
or
push
sbb
inc
fistp
add
aam
sbb
lock
jg
pop
cmovp
scas
xor
xor
imul
ror
push
xchg
rcr
loopne
test
push
and
hlt
out
mov
inc
jp
xchg
adc
fdiv
popa
adc
out
sar
jl
adc
adc
imul
xor
xor
fsubr
fadd
fsubr
pop
shl
lea
je
clc
fcomp
scas
xlat
call
push
and
xor
sahf
dec
push
icebp
retf
or
movs
mov
scas
inc
sbb
adc
xor
test
jb
adc
adc
mov
call
sbb
or
jge
xchg
xchg
test
mov
or
ror
ret
sub
add
(bad)
push
aas
adc
jecxz
das
out
movs
mov
rcr
ror
out
jne
adc
mov
int
cmp
xor
mov
daa
xlat
sar
clc
push
mov
fadd
jo
push
xchg
test
bound
cli
sub
es
or
push
pop
sbb
sti
lea
dec
dec
jae
push
push
mov
or
ja
push
lds
mov
int
dec
dec
(bad)
push
or
addr16
addr16
cmps
xor
sub
mov
or
push
sbb
ret
mov
push
inc
(bad)
mov
mov
inc
enter
lock
or
and
mov
mov
add
mov
xor
or
jge
pop
push
xor
add
outs
or
div
mov
in
test
xor
adc
inc
pop
inc
in
or
mov
or
add
loope
sub
push
jle
cdq
jle
clc
inc
push
or
xchg
lock
cmp
fnstsw
arpl
cmp
int
out
push
(bad)
or
mov
or
push
lock
loopne
mov
ss
jmp
mov
pop
xor
dec
icebp
outs
mov
mov
pop
ret
aas
jmp
dec
push
jo
cmp
jge
lea
add
jecxz
mov
pop
cld
adc
adc
jmp
lods
js
out
sub
sub
jmp
mov
sub
sar
and
in
xchg
or
mov
sub
push
int
(bad)
neg
ins
ret
pop
push
push
sbb
stos
and
and
(bad)
push
add
fbstp
pop
or
lea
cmp
ja
jnp
pop
call
add
mov
inc
adc
mov
or
or
mov
ret
pop
pop
cli
push
mov
push
loop
dec
add
mov
mov
(bad)
outs
cwde
push
pop
jne
pop
adc
call
pop
and
rcr
outs
bound
sbb
jne
lods
dec
pop
xor
jle
pop
adc
and
adc
dec
xor
mov
lea
jae
mov
sbb
je
cmp
cmp
jne
sub
das
shl
inc
sbb
xor
and
frstor
xor
pop
jb
cmp
fisub
dec
jo
imul
jb
ret
fucomip
neg
add
jne
cmp
cmp
ja
or
mov
push
lock
popf
and
fwait
loope
mov
(bad)
push
je
or
mov
xor
adc
add
push
call
test
mov
cmp
fimul
or
and
adc
sub
cmp
inc
dec
outs
popa
lds
jle
inc
lods
loop
fld
add
fistp
adc
popf
int
dec
cmp
fstp
push
je
shr
ins
outs
pop
xor
push
test
pop
cmp
add
jne
or
push
adc
test
icebp
sar
mov
add
(bad)
test
push
jmp
pop
and
mov
dec
mov
lea
stc
or
imul
pop
mov
jmp
ins
mov
xor
rol
cmp
mov
sub
sbb
in
dec
cmp
retf
iret
pop
lahf
int3
ins
retf
mov
leave
jmp
nop
je
pop
push
sbb
and
xor
repnz
mov
lock
repnz
fisttp
test
jle
pop
sbb
mov
jg
pop
push
and
ret
out
pop
popa
xor
jle
and
dec
dec
out
ret
push
push
push
pop
or
outs
sub
ja
test
cmp
cmp
lea
loop
sub
in
outs
xchg
test
jb
dec
xchg
retf
test
cmp
les
jmp
fsub
imul
or
lods
je
sub
mov
shl
stos
and
mov
adc
mov
nop
adc
cwde
or
jecxz
test
adc
rcr
xor
xor
call
test
mov
cmp
popa
leave
jge
and
movs
enter
jne
mov
cmps
push
inc
jecxz
jbe
test
mov
call
pop
or
enter
add
lods
lock
test
mov
xor
loope
popf
dec
out
cmp
jne
jmp
pop
pop
jle
adc
mov
ins
pop
add
mov
jmp
(bad)
loop
lods
scas
sbb
jne
mov
std
ja
jne
xchg
jmp
mov
iret
jo
xchg
ret
mov
mov
ins
mov
xor
aas
mov
mov
mov
cmp
jg
rcr
sbb
or
push
clc
pop
(bad)
clc
or
mov
mov
dec
repz
jne
add
movs
sar
maxps
cs
cmp
je
mov
mov
sub
jp
mov
jno
sub
push
jg
rcr
fisttp
inc
xor
xor
adc
cmp
sub
xchg
mov
lds
mov
js
clc
add
pop
inc
jecxz
push
pop
sub
jae
add
xor
pop
mov
inc
cmps
aad
sub
mov
scas
mov
sbb
or
sbb
xchg
mov
jmp
cmp
jne
lea
xor
adc
xlat
and
mov
les
cmp
adc
push
jno
jge
mov
xor
dec
dec
mov
es
es
and
push
inc
add
xchg
xor
pop
dec
data16
mov
pop
test
je
in
shl
retf
or
mov
mov
add
sti
cmp
and
add
xor
or
push
add
and
jmp
jg
nop
lock
sahf
jae
std
cli
push
fmul
push
xchg
fcom
push
pop
sub
push
add
ja
mov
add
add
call
mov
mov
add
mov
and
in
cs
mov
cmp
pop
(bad)
mov
fs
lock
mov
ret
test
mov
mov
(bad)
lods
inc
js
cmp
pop
cmp
icebp
mov
pop
imul
sbb
jg
mov
mov
mov
(bad)
dec
fxch
add
mov
cmp
cmp
or
sub
pop
add
sub
and
jge
pop
or
stc
mov
adc
xor
mov
or
push
add
rcl
fldlg2
xchg
sub
xor
mov
cmps
das
dec
fbld
leave
sar
test
push
mov
push
or
pop
fwait
outs
aaa
fidiv
pop
dec
mov
je
mov
xor
loopne
and
arpl
dec
jbe
dec
dec
lods
adc
das
data16
rcl
loop
(bad)
int3
and
in
xchg
jmp
mov
rcl
inc
and
jge
popa
sbb
mov
lahf
add
sbb
mov
test
push
dec
sbb
inc
lock
xor
outs
and
sar
inc
imul
retf
(bad)
call
mov
cmp
mov
ss
xchg
lods
movs
mov
pop
ins
ret
add
(bad)
or
pop
fsubr
and
das
xchg
or
pop
jmp
mov
or
imul
loop
cmp
mov
dec
xor
push
sbb
rcr
xor
push
test
inc
xor
nop
icebp
pop
xor
sbb
or
mov
sti
outs
sub
in
or
sub
mov
mov
gs
in
rol
retf
sbb
vcvttsd2si
mov
shr
mov
mov
pop
jbe
icebp
frstor
mov
adc
retf
fwait
ret
xchg
outs
add
daa
in
cmp
and
bound
jne
xchg
repnz
xchg
clc
(bad)
cmps
mov
and
daa
push
fsub
adc
jg
mov
out
inc
adc
jbe
rcr
shl
mov
push
dec
xor
(bad)
xor
iret
cmp
cli
ss
in
and
cmp
inc
fwait
pop
sub
(bad)
fs
cmp
sbb
test
shr
ja
cmp
je
xor
cs
add
sub
cmp
xor
jne
movs
fadd
and
outs
sub
push
and
adc
idiv
mov
jnp
xor
sbb
sbb
pusha
or
inc
pop
jb
or
push
jmp
ss
dec
and
rol
dec
sar
ins
mul
push
jo
push
cmp
adc
gs
mov
jmp
mov
test
inc
fadd
mov
add
adc
fisttp
xor
inc
push
test
add
pop
rol
cmc
jne
loopne
xchg
mov
sub
add
fdiv
pusha
inc
or
push
mov
daa
inc
add
imul
mov
cli
leave
add
mov
jb
je
jle
out
push
test
sbb
inc
push
or
pushf
adc
add
or
das
test
jge
xchg
dec
push
pusha
xor
and
nop
test
add
add
les
push
dec
test
push
pusha
or
leave
and
ret
jne
mov
xlat
add
mov
dec
cmp
imul
lea
fs
and
push
push
sbb
sbb
sbb
and
add
sbb
int
sar
xor
jbe
not
add
or
or
and
scas
push
dec
(bad)
sub
adc
cwde
call
movs
xor
dec
mov
jmp
mov
xchg
sub
ret
push
mov
inc
movs
sbb
nop
jne
push
mov
sub
je
je
aas
popf
les
jne
inc
and
adc
xor
jbe
and
pop
or
or
mov
push
rol
sub
mov
pop
adc
xchg
in
sub
mov
outs
inc
fdivr
mov
lds
ins
dec
stc
aad
push
fdiv
pop
add
stos
or
dec
jmp
out
sbb
(bad)
(bad)
das
xlat
fsub
ret
ror
xor
jo
xor
pop
push
ror
jmp
push
xor
ror
loope
aam
mov
cmc
lea
add
scas
lock
call
add
dec
out
dec
ret
mov
or
mov
push
cmp
jne
xor
add
xor
mov
js
fild
int
jp
in
clc
cmp
or
mov
or
nop
call
dec
jb
adc
pop
lea
inc
mov
popa
mov
mov
ret
sbb
mov
fnstenv
imul
addr16
sub
iret
fadd
cdq
sub
cmp
push
fsub
lea
pop
loopne
sub
(bad)
or
xchg
and
lahf
jb
ins
xchg
cmp
add
int3
test
mov
je
dec
sti
pop
movs
fisttp
add
push
inc
je
cmp
lods
sbb
popa
lds
sub
in
pshufw
add
pop
jo
adc
es
add
push
je
inc
jne
outs
fwait
mov
dec
cmp
pop
cli
add
push
xor
jne
jl
push
or
mov
stos
test
fabs
pop
jo
and
pusha
jo
clc
test
xor
adc
jbe
arpl
div
lock
xchg
je
mov
loope
daa
and
or
pop
dec
imul
fsubr
cmp
stc
(bad)
icebp
test
or
pop
js
jge
in
push
retf
dec
js
shr
fcomp
mov
xchg
nop
add
add
sub
dec
xchg
mov
ror
nop
mov
js
jnp
mov
ins
adc
ins
add
ins
loopne
lea
mov
xor
loopne
ins
jne
sbb
(bad)
adc
in
imul
inc
int
mov
mov
push
xchg
xchg
test
and
cmps
scas
pop
push
je
loopne
test
bound
cmp
xlat
mov
(bad)
out
jmp
push
mov
mov
lahf
cmp
in
sbb
or
nop
(bad)
(bad)
mov
inc
add
mov
pusha
pop
sub
js
sbb
je
push
mov
into
lea
sbb
pop
mov
outs
xchg
mov
add
xor
nop
fild
in
jmp
call
adc
fidiv
push
inc
xchg
mov
mov
fsub
outs
xchg
lea
pop
dec
jne
cmp
call
lahf
imul
mov
fistp
mov
sub
sub
mov
adc
movs
pop
(bad)
mov
stc
dec
jo
sbb
sbb
clc
cmp
je
cmp
xor
or
or
add
mov
dec
add
out
cmp
cmp
dec
lock
fs
jne
mov
frndint
jge
mov
clc
xor
jmp
jg
test
js
iret
inc
sub
sub
js
dec
and
xchg
push
sub
xchg
loopne
std
mov
arpl
test
add
add
nop
in
mov
pop
mov
add
test
pop
loope
sub
cdq
xchg
jmp
add
ja
pop
pop
(bad)
aas
lock
xchg
inc
pop
out
fcmovnu
repnz
ficomp
push
or
dec
or
mov
jp
mov
jp
mov
adc
ins
fdivp
(bad)
out
loopne
jnp
inc
pop
out
test
mov
dec
bound
mov
out
pop
lock
or
and
jbe
inc
iret
jae
jbe
mov
int
push
add
add
mov
jns
push
popa
and
add
jbe
cmps
pusha
pop
dec
or
sbb
push
das
xor
sbb
mov
mov
imul
in
jl
adc
bound
nop
fcom
dec
je
mov
das
xor
add
cmp
mov
in
xor
cmp
and
xchg
int3
(bad)
cmps
dec
loopne
inc
(bad)
cmp
inc
ror
mov
sub
add
or
mov
sbb
loope
ret
jp
mov
and
xor
xchg
test
retf
or
sbb
jnp
popa
mov
push
pop
sbb
aas
inc
ret
cmps
popf
jmp
add
xor
jae
movs
push
ret
add
scas
adc
scas
sbb
inc
add
push
mov
mov
jbe
or
repz
jne
sub
push
leave
jmp
ins
ins
stos
add
sub
mov
(bad)
outs
push
adc
add
je
sub
or
retf
leave
pusha
dec
shl
imul
inc
call
retf
fcomp
test
jg
rcr
inc
jne
xlat
xor
inc
es
(bad)
dec
jl
jle
inc
jns
jmp
push
jl
fisub
push
lea
retf
xor
and
and
ret
pop
fnstsw
jmp
das
mov
adc
dec
cwde
shl
movs
mov
add
cmp
xor
xor
popf
adc
cmp
fucomip
add
fs
popa
das
sub
or
dec
mov
xor
push
adc
cmp
in
arpl
sbb
imul
mov
ins
and
mov
ret
mov
xor
mov
push
mov
xchg
jae
cmp
mov
mov
or
xchg
mov
test
push
call
shl
sub
fadd
outs
mov
push
jmp
adc
ins
iret
adc
ins
add
adc
mov
in
mov
in
push
xor
dec
adc
ins
cmp
pop
dec
add
adc
adc
jl
cmp
shr
fld
add
pop
loop
fcmovnbe
mov
xor
sub
xor
clc
add
or
adc
je
fld
outs
cmp
in
in
xchg
pop
dec
mov
cwde
outs
xchg
mov
sub
aaa
sahf
mov
dec
cmps
or
not
ja
das
or
dec
xor
bound
fs
jne
push
nop
adc
out
sub
pop
sub
sub
pop
hlt
jmp
add
xor
xor
ror
adc
iret
es
into
retf
jge
pop
cmp
xor
pop
jne
retf
jge
add
imul
jp
std
pop
add
fdiv
or
pop
sub
or
adc
es
and
dec
call
mov
cmp
cli
(bad)
mov
adc
inc
add
jne
mov
test
mov
fs
pop
and
mov
mov
mov
popf
in
jmp
adc
(bad)
in
add
fld
push
or
sbb
or
(bad)
out
das
jbe
loop
or
pop
aaa
mov
fucomi
sbb
push
add
cmp
mov
mov
pop
mov
cmp
cli
and
sti
jne
mov
mov
repnz
or
fucom
popf
call
sub
sbb
xor
mov
lahf
int
adc
add
xchg
and
scas
retf
inc
mov
repnz
dec
rol
call
int3
jne
xor
mov
mov
cmp
add
and
mov
fisubr
and
(bad)
gs
sbb
add
and
xor
xor
inc
jle
inc
sub
xor
xchg
sub
pop
sub
das
sub
add
shl
lahf
inc
lea
pop
in
mov
lds
push
inc
add
or
or
fadd
js
je
pop
pop
fstp
mov
fdivr
sub
or
mov
ret
add
inc
add
push
mov
test
mov
or
mov
leave
adc
sbb
rol
add
sbb
mov
arpl
or
inc
and
add
(bad)
jge
js
jo
popa
add
mov
mov
movs
dec
cmp
dec
mov
in
inc
add
fidiv
jne
jmp
in
add
loopne
stos
mov
or
xchg
dec
clc
and
or
cmc
es
fbstp
push
mov
sbb
sbb
mov
or
and
jne
jbe
imul
arpl
push
ds
fdiv
call
sbb
mov
dec
dec
push
ftst
cmp
push
cmp
sbb
xchg
dec
in
ss
loopne
pop
test
cmp
arpl
jne
imul
mul
sti
or
sub
repz
imul
or
fwait
sbb
mov
inc
adc
into
jg
jnp
lds
add
push
in
test
adc
mov
mov
stc
adc
lahf
dec
xlat
shl
test
xor
je
mov
cmp
push
inc
inc
jbe
cmp
adc
push
xor
ss
lds
test
(bad)
loope
shr
or
aas
sbb
inc
(bad)
into
repnz
and
movs
inc
(bad)
ins
pusha
lea
sqrtps
jecxz
xor
inc
or
cdq
sub
ins
(bad)
fsubr
jo
imul
test
dec
cmp
cmps
inc
test
jmp
fcomp
pop
call
jbe
inc
jbe
fld
add
add
pop
sbb
cmp
ss
nop
enter
pop
rol
add
loopne
cmp
fadd
pop
push
out
nop
and
arpl
sub
cmc
dec
retf
mov
xchg
je
mov
fnsave
sbb
and
mov
pop
mov
jb
jns
test
loopne
adc
aas
mov
xor
add
jmp
pop
aas
push
add
test
bound
out
sbb
mov
cmp
push
add
ret
jbe
aaa
ins
jmp
mov
cs
int3
sub
ins
xor
dec
shr
mov
inc
sbb
mov
mov
mov
outs
cmp
mov
push
cmp
lock
mov
jge
add
adc
dec
(bad)
adc
test
sbb
xlat
mov
push
add
das
push
jle
mov
das
mov
jmp
stc
cmp
jle
sti
inc
push
xchg
mov
cmp
jmp
test
jle
push
push
dec
sbb
ret
adc
idiv
or
inc
jb
fucomi
mov
add
jbe
pop
mov
jno
daa
test
and
sub
ins
sub
xor
mov
or
pusha
fs
add
fiadd
jp
iret
cmp
add
fsubrp
and
call
add
or
fild
popf
and
mov
sub
mov
cmp
out
cs
mov
mov
fxch
adc
div
retf
adc
cli
imul
sbb
xlat
add
sbb
enter
push
fidivr
outs
inc
mov
lds
dec
movs
push
jae
xchg
xor
inc
adc
mov
mov
repnz
jo
mov
jmp
or
ja
or
loope
mov
inc
pop
mov
lea
cmc
jecxz
sub
add
mov
sbb
xor
in
pop
int
or
push
sbb
push
in
daa
or
stos
icebp
mov
cdq
ds
mov
xor
rcl
mov
push
shl
sbb
sub
cmp
and
pop
es
mov
push
push
push
call
lods
lock
fild
or
fwait
iret
mov
enter
push
sub
xor
xchg
pusha
punpckhwd
add
fist
jp
shl
adc
mov
push
pushf
push
pop
jg
pop
test
popf
mov
pop
mov
pop
imul
popa
mov
mov
cld
cmp
stos
test
es
ins
fmul
nop
mov
cmp
mov
push
ja
cmp
or
ds
das
sbb
sub
movs
add
adc
pop
add
pop
call
call
xchg
pop
dec
std
mov
idiv
jmp
fst
cmp
adc
or
add
call
add
adc
int3
sub
pop
int
iret
lock
or
pop
inc
adc
rcl
(bad)
mov
mov
pushf
mov
xchg
push
outs
loopne
inc
inc
add
mov
add
movs
loop
add
arpl
fld
aaa
jbe
je
pop
mov
dec
test
add
push
sbb
add
test
fcmovnu
jns
fsub
add
sub
pushf
fs
push
jne
std
stos
sbb
pop
and
xchg
or
push
and
mov
retf
fdiv
inc
xchg
outs
dec
push
mov
xchg
bound
dec
mov
add
push
jecxz
cmp
lods
jle
dec
push
mov
jmp
shl
dec
adc
inc
imul
mov
movs
stos
loope
mov
dec
dec
or
test
lea
stc
mov
adc
push
shl
mov
fsubr
test
add
div
shl
hlt
stc
add
inc
or
jmp
jg
xchg
shl
jno
xor
dec
adc
ja
or
jbe
sbb
lea
loope
jmp
jo
ja
bound
mov
push
mov
add
sbb
sub
xchg
add
frstor
jno
mov
shl
ja
pusha
add
je
xor
(bad)
inc
js
push
fstp
rol
inc
movs
outs
outs
cmp
in
adc
cmp
adc
xor
add
mov
in
fdivr
dec
jne
(bad)
jne
(bad)
push
add
mov
ds
jb
and
xor
or
ror
and
inc
adc
(bad)
pusha
mov
fcom
adc
cmps
push
sbb
in
ret
shl
dec
adc
pop
gs
xor
pop
or
ins
add
mov
imul
rcr
or
jmp
(bad)
and
cdq
cmc
mov
je
mov
xor
inc
je
mov
lods
mov
fcmovb
or
ja
cs
xrelease
(bad)
pusha
jbe
cld
bound
test
or
icebp
int
add
cmp
mov
pop
mov
not
push
and
cdq
xlat
aam
jecxz
leave
and
xor
jge
das
ret
pop
pmaxub
mov
add
jmp
setg
or
xor
push
jmp
mov
or
mov
mov
mov
or
loopne
(bad)
or
or
adc
iret
sub
mov
addr16
push
fistp
add
jne
fistp
jae
sub
sbb
dec
stc
sbb
daa
mov
jnp
adc
adc
adc
mov
push
mov
pop
inc
imul
jne
and
dec
jg
sbb
lods
or
outs
hlt
mov
and
fwait
int
push
mov
push
xchg
add
xchg
push
test
int
adc
add
hlt
pop
or
pop
sub
jp
mov
pop
jbe
or
xor
sbb
sub
mov
mov
test
mov
xor
and
dec
or
rcl
ret
test
sbb
stc
loop
out
fsub
call
enter
fistp
test
adc
pop
mov
mov
xchg
mov
psrad
add
xchg
unpckhps
test
cmp
or
push
cmp
push
mov
lock
mov
lock
jnp
loopne
dec
mov
loop
ror
les
inc
mov
(bad)
push
test
icebp
jo
sub
retf
mov
add
loopne
loopne
or
jge
or
or
jp
and
push
test
or
pop
mov
cmp
js
cmps
or
test
inc
lods
pop
lock
mov
mov
dec
push
mov
xchg
inc
aas
mov
sub
push
and
add
push
in
ins
out
lds
inc
or
fcomp
add
push
push
or
cmp
jne
cmp
pop
mov
(bad)
xor
mov
fstp
cmp
out
pusha
jmp
enter
pop
inc
rcl
mov
push
lea
out
add
loopne
nop
lea
les
es
mov
cdq
lea
pop
mov
(bad)
fstp
lea
and
adc
or
aam
inc
sar
call
mov
pop
ins
sar
(bad)
push
push
jnp
or
add
nop
(bad)
gs
test
test
push
test
sbb
and
push
jge
push
shl
pushf
xchg
inc
cwde
test
mov
cwde
sub
rol
add
mov
scas
mov
gs
mov
mov
mov
neg
pop
adc
mov
mov
and
ret
jbe
cld
jmp
mov
inc
add
sbb
psraw
xor
mov
xor
out
ja
sar
sub
mov
mov
lods
push
retf
xor
mov
out
sub
ret
xchg
add
mov
push
loop
aam
mov
sbb
dec
aaa
shl
and
ficom
or
push
rol
dec
ins
leave
adc
sbb
mov
jo
aad
enter
idiv
jmp
jl
adc
push
fdivr
pusha
fadd
push
add
mov
sub
mov
mov
xchg
xchg
rol
lahf
je
pop
test
pop
jmp
add
xor
adc
movs
and
adc
adc
dec
call
adc
arpl
bound
mov
add
add
and
xchg
pop
idiv
jmp
mov
cmp
pop
mov
and
xchg
sbb
adc
add
jmp
cmc
push
mov
int
xor
sbb
ins
loopne
cmp
std
add
push
(bad)
jns
and
dec
jno
add
int
pop
aad
push
dec
push
dec
rcl
mov
sahf
add
and
adc
mov
pop
sub
aas
lock
jge
shl
loope
mov
in
outs
test
call
out
mov
and
inc
mov
in
movs
jno
je
mov
adc
das
jge
test
(bad)
inc
cwde
mov
(bad)
mov
cmp
je
popa
add
lock
push
les
inc
push
rcr
sbb
jecxz
rcl
jge
and
mov
aam
sbb
add
xor
jb
adc
aam
push
movs
fidiv
sti
sbb
add
and
or
loop
push
sub
mov
sbb
or
je
cmp
add
push
loopne
stos
stos
inc
ds
and
jmp
jnp
add
push
add
nop
sbb
push
hlt
adc
inc
inc
cli
push
xor
loope
sbb
cmc
je
xchg
pop
ins
sbb
inc
dec
or
add
xor
ror
stos
leave
jge
dec
or
jmp
js
(bad)
sub
xchg
cmp
mov
jbe
mov
inc
mov
add
mov
loop
mov
out
mov
xor
dec
iret
leave
stos
lods
add
loopne
or
rol
xchg
add
pop
popa
test
iret
sti
into
sub
push
je
je
inc
das
add
pop
pop
jmp
ret
inc
pop
inc
inc
and
sbb
mov
pop
xor
mov
adc
add
dec
mov
sbb
push
inc
nop
adc
xor
push
stos
in
ret
push
and
iret
add
add
push
dec
leave
ret
arpl
or
pop
push
adc
or
pop
int3
and
push
vunpckhps
rcl
or
add
cmp
or
add
or
pop
mov
add
pop
add
mov
cld
inc
daa
test
cmp
mov
out
bound
stos
dec
push
lock
lock
in
add
sub
pop
add
mov
sub
aas
aas
mov
or
in
add
or
sti
or
fist
ror
or
je
int
ret
sub
add
cmp
ss
lock
and
add
mov
test
in
adc
ins
and
outs
jmp
stos
mov
sbb
push
xor
inc
push
popf
or
pop
mov
adc
test
sbb
pop
or
sbb
jns
add
ret
sbb
enter
push
add
or
or
and
fs
aaa
shr
and
jne
ins
cmp
push
jbe
jns
ins
js
cmp
adc
sbb
sub
cdq
or
aad
sbb
jmp
bound
dec
adc
(bad)
clc
pop
mov
cld
(bad)
rol
retf
or
pop
out
inc
sahf
je
add
outs
nop
jge
adc
mov
and
and
enter
icebp
add
iret
test
adc
jne
js
arpl
daa
je
sbb
add
outs
inc
sub
xor
leave
add
popa
pop
shl
je
outs
push
div
jecxz
adc
mov
inc
aam
shr
enter
push
xor
xchg
stos
aam
inc
cmp
jmp
xchg
enter
movs
cli
pop
pop
lods
jg
add
ror
sub
inc
add
test
je
pop
popa
popa
out
lods
push
sub
imul
fimul
or
push
jle
mov
xor
push
mov
dec
jne
mov
(bad)
rol
movs
pop
mov
cli
mov
push
test
test
imul
jae
inc
add
mov
rcr
or
icebp
cmp
mov
je
inc
sub
or
je
dec
addr16
pop
test
faddp
or
jmp
inc
punpckhbw
test
lea
dec
mov
pop
test
adc
das
cli
cs
cmp
lock
stc
js
add
clc
sub
lea
adc
mov
loopne
xor
xor
test
jo
sahf
ins
jbe
jge
fisttp
and
outs
xchg
or
mov
je
xor
mov
sldt
mov
xchg
add
push
inc
ficom
adc
add
stos
or
pop
jmp
pop
cmp
sti
ja
(bad)
(bad)
and
or
adc
por
add
mov
lods
push
mov
jmp
cld
outs
js
mov
mov
jmp
or
mov
inc
fiadd
addr16
leave
jmp
shl
add
push
adc
sub
popf
add
inc
movs
push
push
mov
(bad)
jmp
(bad)
push
adc
pop
stos
push
mov
lock
dec
adc
je
aas
ins
mov
or
jmp
cmp
adc
mov
mov
add
jne
adc
test
je
pop
repnz
mov
test
retf
push
outs
call
cmp
call
outs
adc
fistp
lea
aas
out
(bad)
fsubr
outs
or
dec
add
mov
adc
mov
pop
xchg
pusha
fild
aas
cmc
fninit
pop
ret
movzx
fidiv
adc
cmp
cwde
pop
popa
clc
into
pusha
out
enter
(bad)
js
inc
or
pushf
push
xchg
je
mov
mov
pop
test
rol
xchg
jbe
xor
ss
rcl
aad
add
add
sub
fcomip
add
jb
dec
jl
xor
jae
dec
mov
ret
or
cmp
pop
ss
pop
push
add
(bad)
ja
add
inc
xchg
push
outs
xor
jo
jmp
pop
pop
inc
mov
jb
(bad)
pop
cld
aas
js
push
outs
std
fucomi
and
xchg
inc
pop
je
mov
sub
mov
aaa
icebp
add
add
adc
popa
mov
ficomp
adc
addr16
mov
push
add
add
test
sbb
sar
ret
mov
add
add
mov
sbb
or
js
shl
xor
mov
pop
mov
push
nop
or
pop
pop
adc
lea
mov
pop
ret
scas
add
adc
addr16
inc
pop
ret
add
pop
push
or
pop
inc
rol
(bad)
or
retf
jle
push
mov
pop
ret
(bad)
dec
pusha
test
outs
dec
dec
sbb
(bad)
popf
xor
(bad)
push
jb
or
sub
cmp
mov
icebp
ror
fistp
xor
mov
mov
test
in
cmp
xor
push
inc
ret
adc
or
outs
scas
sub
adc
nop
pop
pop
mov
jp
pop
or
fcmovnb
lds
push
push
je
xor
pop
pop
jne
inc
outs
cwde
push
jmp
pop
bound
adc
sbb
scas
aad
xchg
xor
in
mov
aas
outs
xor
test
mov
or
mov
bound
xchg
test
mov
je
add
jne
ds
icebp
mov
enter
retf
aaa
mov
leave
mov
jmp
mov
mov
mov
mov
lds
mov
adc
pop
pop
add
pop
comiss
pop
mov
push
mov
mov
ins
mov
out
xor
adc
stos
sub
add
shr
add
sbb
xchg
pushf
inc
pop
push
add
loope
cmp
out
inc
inc
or
mov
jmp
cld
mov
je
inc
(bad)
xchg
xchg
ds
dec
(bad)
inc
xchg
push
jp
dec
and
mov
cmp
sbb
push
arpl
mov
jo
mov
adc
dec
cmp
stos
int3
dec
jmp
mov
push
jno
clc
fild
mov
cmp
jno
xor
and
jle
test
pusha
or
loope
retf
mov
jne
sub
push
lods
int
mov
mov
sub
jge
js
xor
pop
call
jne
or
cwde
mov
adc
xchg
jno
jmp
fild
push
xor
fsubr
inc
inc
jo
adc
sbb
pop
push
test
jns
popf
call
gs
lahf
add
mov
lahf
or
(bad)
cmp
sbb
jne
sbb
xor
repnz
iret
scas
mov
daa
je
mov
inc
and
popa
ins
bound
cmp
xchg
mov
popf
cmp
mov
lods
call
data16
cmp
and
js
fisttp
fdiv
in
xor
jmp
popa
ins
mov
xor
mov
dec
lea
adc
adc
push
shl
push
jl
push
dec
aam
ds
inc
xor
mov
loopne
out
test
push
ror
inc
or
adc
mov
pop
mov
aad
cmp
jne
sbb
push
fs
ret
jp
xor
mov
jmp
cmp
aam
call
ds
das
and
rcr
adc
and
xchg
mov
push
(bad)
and
lahf
jmp
mov
into
jg
mov
mov
dec
inc
xchg
jg
mov
push
sahf
fmul
or
je
and
scas
mul
daa
test
inc
cdq
pop
push
push
mov
lahf
gs
or
xor
sbb
cwde
inc
adc
cmp
inc
mov
xor
test
(bad)
sub
pop
movs
xor
and
mov
not
xor
ret
loopne
test
mov
add
pop
je
pop
adc
mov
pop
enter
pop
loopne
jmp
mov
dec
push
popf
leave
ret
js
push
mov
movs
js
push
add
mov
iret
dec
pop
mov
jge
lds
adc
mov
dec
jne
or
mov
pop
stos
aam
mov
xor
jnp
adc
pop
cmp
push
js
pusha
mov
outs
mov
or
and
popa
out
mov
and
rcl
sub
inc
xchg
or
and
push
test
ret
outs
mov
jo
popa
inc
push
sbb
popa
xor
or
sub
lahf
mov
mov
add
mov
add
lahf
or
push
sti
or
mov
inc
or
fistp
daa
sub
or
or
mov
xor
xor
push
mov
popa
mov
dec
out
(bad)
xor
out
mov
cmp
push
ins
and
nop
mov
jne
mov
mov
and
mov
pop
inc
or
outs
cld
loopne
and
or
div
mov
mov
sysexit
je
add
and
mov
adc
sbb
(bad)
add
inc
jmp
mov
add
jmp
mov
dec
xor
push
mov
cmp
push
jb
or
js
aad
ja
sub
adc
push
repnz
loop
fcos
and
enter
lock
clc
inc
push
cmp
add
cmp
push
sbb
sub
or
fs
inc
sub
and
nop
inc
push
sbb
cmp
dec
dec
daa
pop
sbb
mov
fs
enter
shl
enter
pushf
mov
and
and
aam
or
enter
je
xor
and
xor
and
and
and
fadd
pop
push
mov
iret
inc
aaa
cmp
adc
(bad)
neg
add
loop
add
jo
sbb
pusha
(bad)
pcmpeqw
cmp
push
inc
mov
inc
shl
xor
sub
or
push
jg
add
add
das
ja
xor
inc
mov
lahf
pusha
jecxz
or
mov
ins
sub
ret
pop
(bad)
cli
fadd
mov
lock
cmp
shr
dec
not
and
xor
push
dec
inc
jmp
adc
pop
and
mov
mov
sbb
leave
test
(bad)
fisubr
or
nop
aas
loopne
or
inc
shl
and
jae
loope
retf
adc
mov
stc
inc
xor
das
jge
repnz
add
fidivr
pop
add
pop
hlt
xchg
je
call
mov
es
add
add
xchg
cli
shr
retf
push
nop
or
mov
scas
jnp
sbb
mov
pop
sbb
(bad)
les
or
cmps
xchg
call
ret
in
or
or
pop
push
pop
mov
pop
adc
mov
mov
shl
or
bound
enter
pop
pop
cmp
xchg
push
cmp
jbe
lea
fst
mov
xor
inc
mov
je
xor
aas
sbb
call
loop
shl
add
or
test
js
add
push
mov
xor
add
push
jnp
adc
fsubr
adc
loopne
test
mov
(bad)
pusha
iret
mov
(bad)
outs
mov
not
add
pop
xor
sub
ins
add
pop
loopne
ret
sub
mov
and
jb
jno
mov
mov
in
ja
dec
retf
sbb
cmp
xor
xchg
(bad)
aas
sbb
les
shr
and
cmp
outs
mov
sub
popa
jo
and
sbb
sti
mov
jecxz
add
das
je
or
je
bound
xor
xor
or
jl
or
sbb
pop
or
cmp
ret
outs
fisttp
or
shl
adc
fdiv
push
adc
pop
ror
push
or
pop
mov
add
mov
jne
iret
sbb
enter
out
loopne
popa
and
cs
mov
mov
cmc
jae
add
push
in
mov
mov
mov
add
es
mov
test
cmp
inc
mov
jns
mov
xchg
mov
aas
inc
nop
js
pusha
jecxz
pop
fucomi
cvttps2pi
push
and
mov
mov
and
jecxz
fist
jge
ficomp
pop
clc
(bad)
pop
sub
and
mov
cmp
out
bnd
inc
mov
aas
aas
pop
push
adc
sar
xchg
sti
cld
je
mov
mul
movsx
or
mov
ja
adc
mov
mov
add
jge
hlt
fimul
sub
mov
hlt
inc
(bad)
out
loopne
inc
push
movs
icebp
test
inc
call
gs
popa
dec
adc
add
loop
rol
xchg
dec
adc
pop
sbb
pop
ret
mov
xchg
jp
mov
sbb
ret
outs
add
and
dec
mov
jne
sub
outs
pop
sbb
push
mov
outs
push
test
or
sbb
or
and
in
sbb
push
mov
adc
push
sbb
int
ins
inc
push
xor
ret
xchg
(bad)
outs
sub
mov
xchg
mov
mov
xchg
or
xor
dec
push
dec
sbb
push
das
adc
jmp
mov
add
jg
add
pop
enter
test
loopne
or
js
aam
out
daa
ins
enter
in
fdivr
clc
daa
ds
lahf
cmp
cld
shl
sbb
scas
pop
xor
or
sti
dec
les
addr16
test
adc
popa
mov
loop
pop
or
popf
lods
cmp
bound
mov
push
sbb
fiadd
sbb
and
ins
xchg
push
sub
xor
or
mov
(bad)
jbe
or
adc
sub
sub
and
test
cmp
(bad)
jae
xchg
inc
dec
and
push
dec
or
dec
lods
pop
es
or
sub
pop
dec
sub
mov
data16
inc
ins
push
add
inc
and
jnp
mov
nop
push
mov
xchg
mov
sbb
in
add
imul
mov
test
push
jbe
repnz
or
mov
xor
jbe
add
or
sar
mov
inc
mov
add
call
fistp
jbe
paddw
adc
adc
jmp
and
shl
add
xor
mov
mov
fst
inc
add
push
cmp
std
push
leave
add
dec
scas
mov
xchg
fadd
mov
outs
xor
mov
push
dec
arpl
fwait
or
cdq
hlt
adc
call
sub
push
out
in
(bad)
shl
adc
jne
call
dec
and
popf
jo
mov
and
and
sub
adc
adc
add
add
rcl
orps
sub
push
out
jle
out
addr16
rcr
imul
inc
push
aam
imul
pop
jno
inc
add
mov
push
or
push
jl
enter
bound
lahf
gs
mov
sbb
inc
inc
inc
pop
mov
adc
es
xor
adc
pop
inc
sbb
test
mov
maxps
push
sbb
or
and
fcomp
mov
test
cmp
mov
inc
jo
xchg
mov
add
xor
js
and
push
pop
xor
icebp
mov
cmp
sbb
add
dec
jle
inc
jnp
xor
jnp
and
inc
jnp
xchg
cmp
mov
fld
jp
jne
mov
jmp
mov
xchg
cmp
adc
mov
push
lea
popf
pop
adc
in
push
dec
enter
jb
fidiv
mov
mul
ficom
jns
inc
and
push
dec
or
pop
enter
jno
cdq
push
push
push
push
lods
pop
jo
sbb
xchg
pop
or
xchg
and
jg
or
les
pop
outs
sets
or
dec
inc
push
cmp
or
aaa
jle
je
in
add
inc
adc
or
enter
or
jo
mov
test
pushf
nop
js
dec
pop
sub
iret
sub
dec
and
mov
popa
outs
das
dec
mov
ins
int3
mov
mov
enter
pop
push
adc
add
nop
int3
int3
fdivr
scas
ja
pop
lods
push
push
adc
leave
test
in
mov
sbb
dec
mov
push
in
inc
leave
cmp
add
nop
addr16
inc
or
ins
add
push
add
test
es
leave
ret
fstp
repnz
inc
lds
xchg
adc
movs
or
adc
sub
sbb
xor
shl
inc
and
sbb
lahf
movs
addr16
inc
cmp
test
es
inc
pop
out
iret
int3
push
shl
xchg
pop
add
inc
sub
xchg
mov
arpl
adc
push
push
cld
jge
mov
pop
rep
mov
mov
mov
lods
outs
mov
lds
je
fild
add
mov
mov
adc
shr
push
inc
adc
inc
push
and
call
test
jne
sbb
jmp
repz
rcl
inc
(bad)
shr
stc
add
push
or
inc
mov
dec
lds
mov
push
ins
dec
or
jns
push
jp
aad
push
ja
add
test
sub
sub
retf
ror
push
add
test
sub
cmp
retf
shl
xor
cmp
inc
dec
mov
jecxz
cmp
inc
lods
jae
and
add
push
push
sbb
(bad)
or
add
je
and
mov
add
jle
test
in
or
pop
xlat
add
sbb
je
(bad)
or
pop
test
and
test
test
mov
pop
ror
mov
inc
std
cmp
push
and
sbb
test
xchg
adc
mov
mov
or
ret
rol
les
mov
adc
shr
pushf
adc
(bad)
pop
ficomp
test
repz
pop
loope
mov
pop
jmp
test
xor
loopne
arpl
xor
cmp
movs
xor
add
jnp
adc
jecxz
mov
add
xchg
mov
mov
cld
dec
fild
pop
xor
xor
aad
mov
mov
cmp
ja
ins
outs
add
mov
jbe
loop
mov
cmp
pop
std
repnz
call
dec
into
jecxz
sub
pop
adc
push
jg
(bad)
je
mov
repz
sub
shr
mov
fild
and
sbb
inc
fbstp
jecxz
inc
push
cmp
retf
enter
call
xchg
or
fild
mov
sub
enter
(bad)
jg
inc
shl
js
repz
mov
pusha
mov
inc
push
scas
aad
call
cwde
adc
dec
jmp
pop
or
in
push
call
mov
das
cmp
mov
dec
add
add
push
pop
inc
nop
mov
add
arpl
test
add
sbb
push
or
xchg
xor
pop
add
sbb
jg
or
inc
shl
push
push
in
outs
mov
xor
test
fdiv
leave
cmp
xor
jb
sbb
(bad)
popa
pop
inc
dec
xor
inc
xor
outs
add
or
adc
sbb
jb
mov
leave
iret
int3
call
adc
sub
mov
ret
xor
add
ins
arpl
addr16
adc
sub
adc
ja
sbb
pop
lahf
sbb
jmp
fmul
inc
jmp
and
movs
pop
stos
call
or
jb
mov
mov
mov
das
push
mov
mov
add
shr
dec
pusha
rcl
jae
test
jp
enter
pop
dec
sar
pop
rol
and
xor
je
xchg
ins
add
add
movs
sbb
push
cmp
dec
and
loope
dec
pushf
outs
push
xor
add
or
sub
aaa
sub
pop
out
je
adc
adc
or
jp
cwde
call
adc
xchg
add
push
scas
ins
mov
lahf
pop
mov
enter
ret
jg
adc
dec
cmp
imul
mov
pop
iret
xchg
and
ins
mov
push
test
adc
adc
mov
inc
retf
sub
pop
icebp
movs
push
das
cmp
mov
test
inc
enter
ror
test
ret
add
xor
inc
cmps
adc
(bad)
outs
and
xor
inc
enter
push
add
ret
loop
retf
stc
and
xor
in
sysexit
sbb
dec
push
aas
cli
mov
add
neg
jmp
jg
xor
push
xchg
lea
lock
scas
mov
fdivr
mov
inc
push
inc
inc
push
dec
inc
sbb
mov
movs
cmovs
mov
prefetchnta
push
sbb
mov
ret
xchg
add
sbb
cmps
push
test
lods
push
adc
or
mov
stos
and
das
adc
mov
cmp
mov
lahf
test
add
dec
sub
loopne
call
pop
cwde
mov
test
add
dec
rcl
jbe
push
das
add
(bad)
dec
stos
bound
lea
push
les
movs
enter
test
sbb
ins
push
lods
sbb
adc
xor
xchg
jge
mov
cli
in
std
and
push
cmps
test
mov
sbb
or
es
or
and
lahf
add
sbb
test
mov
or
jne
mov
pop
mov
ja
adc
sbb
mov
add
into
adc
jno
(bad)
sti
movs
xchg
(bad)
xor
pop
sbb
not
add
and
sub
push
in
aas
mov
fcmovb
es
xchg
ins
add
es
sbb
adc
adc
mov
je
add
pop
xor
scas
cmps
mov
pop
xchg
push
inc
dec
test
idiv
pop
pop
xchg
neg
bound
(bad)
dec
sub
enter
sbb
mov
jl
stc
mov
mov
fisttp
outs
icebp
add
mov
repz
mov
add
cmp
or
add
inc
cli
repnz
add
inc
adc
sbb
imul
adc
add
nop
sub
ror
int
cmc
jmp
aas
(bad)
mov
out
sub
xor
les
add
mov
xor
mov
mov
add
out
xor
lahf
loop
mov
adc
and
js
jnp
or
jge
sub
inc
jle
or
ret
mov
jns
mov
les
out
cmp
and
ds
mov
lea
jno
mov
dec
rol
adc
or
or
sub
mov
and
sub
repnz
push
movs
popa
sub
cdq
or
cld
ja
not
xor
add
xor
(bad)
pop
lock
inc
xchg
mov
mov
add
outs
and
sub
add
pop
xor
loopne
les
mov
mov
dec
retf
xor
adc
out
ror
nop
dec
imul
jmp
xor
jmp
jne
mov
std
(bad)
(bad)
jmp
or
push
add
iret
test
and
dec
add
fild
ror
mov
jo
mov
and
sbb
add
test
or
inc
xor
xchg
pushf
lods
push
(bad)
mov
add
cwde
lods
xchg
inc
mov
and
inc
or
inc
cwde
ror
mov
adc
and
ret
loopne
fld
nop
push
mov
cmp
sar
add
add
aad
mov
pop
test
int
add
add
fbstp
wbinvd
and
mov
bound
enter
pop
push
lsl
adc
ins
arpl
push
adc
mov
dec
mov
add
call
push
and
xor
jge
push
(bad)
jmp
sub
xor
and
xor
and
xor
sub
and
aas
adc
and
push
test
jmp
cmc
adc
adc
dec
pop
nop
add
sbb
(bad)
aas
gs
jp
adc
dec
cmc
ins
rcl
add
inc
stos
fadd
push
pop
(bad)
(bad)
lods
scas
mov
int
mov
push
jb
addr16
ins
jmp
jmp
arpl
outs
outs
je
bound
jb
outs
and
inc
dec
push
and
fs
fmul
and
nop
mov
inc
icebp
loopne
add
fs
cmp
frstor
loope
push
pop
pop
ins
dec
fs
jnp
inc
out
and
imul
fs
sahf
dec
das
sbb
test
pushf
dec
pop
push
adc
adc
cmp
mov
or
cmp
xor
loope
das
or
cmp
dec
pop
fsubr
adc
loopne
hlt
mov
push
inc
add
not
add
pop
push
mov
inc
call
add
xor
push
adc
ret
cmps
jl
push
cs
js
ret
je
lahf
push
mov
pusha
cs
popa
je
or
pop
sti
sbb
add
add
clc
or
mov
mov
daa
ror
arpl
jmp
out
add
pusha
dec
mov
ins
outs
sub
add
daa
call
outs
push
mov
das
aam
xor
push
mov
or
add
ss
pop
xchg
call
out
mov
push
push
es
daa
mov
clc
sbb
dec
add
fist
pop
add
inc
popa
clc
push
call
or
fistp
rol
adc
inc
add
fs
sbb
mov
and
adc
add
xadd
mov
bound
fisttp
xor
adc
(bad)
mov
or
pop
call
neg
sahf
pop
leave
ret
cdq
jne
mov
xchg
mov
mov
dec
mov
cmp
aad
cmp
dec
dec
sbb
aaa
jle
mov
xchg
pop
push
call
mov
mov
imul
pop
mov
mov
cmp
ret
push
lods
cmp
adc
sbb
sbb
or
jns
out
and
stc
popa
sub
jmp
xor
fnstcw
xchg
sbb
call
mov
ret
addr16
mov
mov
add
sub
dec
dec
dec
dec
push
push
sub
mov
push
push
push
push
push
fidivr
mov
inc
push
pop
call
push
and
adc
or
sahf
sub
mov
pop
sbb
xchg
xchg
mov
sub
cmp
leave
leave
enter
out
sub
leave
leave
leave
loope
rcr
leave
leave
leave
lds
or
cmp
enter
lea
adc
dec
pop
mov
nop
(bad)
mov
mov
add
or
jo
mov
mov
xor
(bad)
pop
add
shl
pop
(bad)
fisttp
fldenv
pop
inc
xor
mov
aam
imul
shl
stc
add
cmp
push
push
fmulp
call
mov
push
or
imul
or
mov
hlt
scas
fdivr
iret
call
xor
pop
pop
ins
call
mov
(bad)
pop
cld
popf
cmp
nop
fdiv
add
mov
(bad)
ret
mov
lea
push
popa
push
inc
jnp
add
adc
or
push
mov
lock
leave
aas
test
push
jbe
lea
sahf
call
mov
mov
iret
pushf
(bad)
enter
test
xchg
clc
call
ss
or
xor
mov
push
or
scas
ins
out
out
add
call
mov
inc
pop
inc
dec
in
ss
or
sti
jne
fst
and
aaa
pop
and
or
pop
in
lock
sub
fisubr
int
mov
(bad)
jmp
push
add
test
mov
jl
outs
xor
sbb
pop
cmp
xor
mov
xor
push
jl
push
ret
loopne
jmp
call
cmps
test
rcr
imul
(bad)
int3
sbb
mov
xchg
push
mov
push
mov
xchg
mov
imul
jne
push
ret
ins
or
xchg
or
fiadd
pop
xchg
push
or
mov
push
cmp
out
pop
mov
(bad)
jg
retf
add
push
push
loopne
adc
inc
test
pop
sar
lods
inc
arpl
add
fidivr
mov
add
repnz
ins
int3
or
or
jo
fst
push
sbb
ins
jp
je
ror
sub
mov
cmps
fstp
pop
mov
pop
push
adc
rcr
or
into
call
cmp
mov
idiv
add
cmp
jne
push
pop
mov
mov
shr
inc
shr
sbb
shl
icebp
cmp
jb
mov
imul
maskmovq
imul
add
rol
std
fnstsw
inc
push
jae
cmp
jne
lahf
mov
xchg
call
xlat
sub
int3
xchg
mov
mov
mov
aaa
and
xor
call
mov
in
call
inc
pusha
mov
push
mov
cmp
outs
sub
fstp
mov
push
arpl
fcomp
pushf
gs
xor
cmps
popa
movs
mov
test
call
dec
rol
(bad)
leave
push
ror
test
lods
mov
cmp
dec
or
test
xchg
addr16
mov
inc
dec
mov
shld
add
or
push
lock
fistp
jo
add
clc
and
xor
std
hlt
imul
test
adc
cs
mov
add
in
jno
adc
nop
dec
cmp
test
mov
cmp
mov
add
cmp
jmp
rol
dec
stos
push
mov
imul
pop
add
repz
mov
fldcw
outs
mov
out
xchg
mov
cmp
call
fst
jl
rcr
mov
fs
cmp
(bad)
retf
pop
add
pop
adc
push
pop
scas
aam
or
add
xchg
or
fwait
or
ja
xchg
cld
jnp
ja
jmp
mov
into
pop
jmp
pop
or
stos
mov
sti
mov
ins
fdiv
inc
sbb
jmp
sub
cmp
aam
shr
scas
mov
sub
je
cs
add
shl
aas
push
or
inc
mov
mov
je
jmp
out
or
data16
mov
mov
push
mov
pop
mov
inc
cmp
repz
mov
or
jne
sbb
std
mov
je
adc
pusha
call
je
pop
jbe
shr
mov
stc
aaa
push
jg
ins
adc
mov
outs
xor
cmp
iret
ja
mov
jmp
inc
nop
test
stos
fiadd
add
call
rol
(bad)
xchg
add
clc
call
pop
mov
ficom
lods
sbb
adc
adc
xor
nop
jns
push
xor
call
push
sub
jle
jno
jecxz
shl
jnp
add
sub
in
loopne
dec
stos
or
jbe
mov
call
(bad)
or
hlt
and
or
push
adc
push
push
or
out
mov
mov
(bad)
or
jmp
push
fmul
iret
mov
add
fisub
cdq
dec
sub
mov
sbb
adc
inc
xchg
repnz
or
adc
adc
jle
adc
add
sbb
test
mov
mov
pop
inc
or
int3
fadd
cmp
pop
pop
loopne
push
test
sub
call
ss
lds
push
cmp
pusha
cmp
rcl
inc
movs
mov
push
jae
push
test
ret
shl
mov
cmp
lds
mov
cwde
add
and
xchg
cli
ins
(bad)
xor
dec
push
or
jne
dec
push
jb
pop
aaa
cs
or
and
add
push
sub
mov
mov
add
mov
push
int
xchg
cmp
retf
add
stos
pop
pop
xor
outs
adc
jo
lahf
ror
dec
jne
and
mov
jnp
lock
or
adc
es
xor
or
pusha
xor
fstp
fcmovb
ret
mov
push
sub
cmp
pop
mov
inc
or
push
gs
ins
sbb
sub
or
jge
stos
cmp
js
jne
(bad)
adc
(bad)
and
lea
in
sbb
push
sbb
push
rol
sbb
cs
in
jnp
cmp
pop
add
pop
adc
mov
mov
adc
popa
pusha
sbb
add
sti
ins
movs
cmps
ds
cld
call
ss
scas
and
mov
xlat
pop
pop
xchg
push
push
inc
data16
mov
cmp
or
mov
lds
sar
add
mov
adc
jmp
imul
push
pop
inc
pop
adc
sahf
into
(bad)
push
push
xchg
leave
outs
add
(bad)
vmwrite
lea
pop
mov
ret
fdiv
jmp
jne
push
mov
fadd
cmp
lea
rcr
loopne
imul
stc
pop
or
test
or
push
mov
or
not
je
xor
dec
repz
add
mov
and
cmp
dec
ja
sbb
mov
sub
xchg
rcl
jo
mov
push
(bad)
sub
push
sub
push
push
push
sub
outs
pop
pop
xor
sbb
mov
push
(bad)
pop
adc
mov
xor
pop
pop
outs
test
push
mov
or
loopne
or
push
retf
fsub
push
jp
xchg
add
div
sbb
ret
sub
clc
rcl
das
add
or
mov
pop
test
or
outs
and
data16
push
ss
sub
push
ss
ds
ucomisd
les
jbe
jp
push
add
mov
jbe
push
sbb
or
inc
inc
(bad)
sub
dec
sub
out
jbe
fld
push
leave
push
sub
add
fcomp
xchg
jo
loop
pop
add
ja
inc
mov
jle
mov
jo
add
hlt
pop
push
push
pop
sub
mov
sbb
pusha
jbe
mov
dec
jno
adc
jmp
inc
xor
fadd
je
push
cmp
daa
sar
rcr
push
inc
xchg
mov
(bad)
xor
dec
mov
jmp
jl
or
push
cmp
mov
dec
inc
les
add
push
out
pop
push
pop
scas
push
call
pushf
jne
or
add
mov
xor
(bad)
stc
and
scas
dec
enter
call
cmp
out
jg
lds
jbe
push
out
ss
arpl
aam
les
jo
loopne
int3
fistp
jb
or
and
lods
mov
dec
ficom
add
add
xchg
rcr
das
test
push
mov
add
adc
mov
sti
xlat
xor
fisubr
pop
push
loopne
jecxz
call
clc
fcomp
hlt
data16
in
mov
pop
daa
cmp
out
out
adc
jae
mov
retf
out
stos
push
or
loopne
dec
pop
mov
and
and
jo
dec
xor
lea
loop
test
mov
daa
loopne
jle
jmp
lods
sbb
mov
jmp
fdiv
sbb
mov
enter
int3
xchg
and
rcl
cmps
aam
ret
push
add
jl
inc
imul
fisub
inc
mov
ss
or
(bad)
add
stos
push
dec
pusha
mov
pop
pop
sbb
xlat
fcom
and
call
sub
xlat
mov
and
push
push
xchg
mov
jo
mov
or
sbb
shl
sub
inc
ret
shl
pop
add
cmp
aam
sub
cmp
xor
test
dec
xor
ds
nop
mov
jmp
sbb
sbb
xchg
inc
inc
push
cmp
sub
xor
cmp
sub
add
push
pop
popa
inc
mov
aas
pop
pusha
loope
inc
outs
inc
cld
xor
cwde
xchg
aaa
xchg
std
sub
rdpmc
leave
cmp
je
lea
xor
jl
cmp
push
mov
test
cmp
(bad)
dec
sub
in
mov
hlt
inc
lods
push
nop
push
mov
aam
in
xchg
test
call
inc
push
stos
leave
cmp
imul
movs
pop
fmul
cmp
xor
inc
add
fs
mov
mov
clc
sbb
movs
dec
fs
ins
push
das
addr16
cmp
and
mov
xor
imul
mov
nop
mov
sbb
sub
and
pop
in
or
mov
dec
inc
ret
popf
mov
jne
mov
dec
jnp
das
pop
or
or
call
push
or
add
jne
cld
mov
call
push
icebp
aad
fdiv
call
sub
inc
cdq
nop
outs
inc
or
pop
and
adc
pop
pushf
push
inc
add
sbb
lock
push
fmul
and
inc
das
inc
data16
cli
cmp
(bad)
call
add
dec
inc
mov
jmp
push
and
mov
dec
pop
or
stc
and
scas
stc
hlt
(bad)
(bad)
jmp
pushf
or
or
cmp
or
retf
mov
and
sbb
cmp
cmp
adc
or
je
in
xchg
or
pop
add
and
std
mov
and
add
jmp
fsubr
add
(bad)
jp
leave
cmps
mov
sbb
cli
sbb
pop
cld
cmc
add
push
lock
mov
sbb
sub
adc
add
or
inc
cmp
xchg
jns
xchg
fiadd
fwait
repnz
out
(bad)
pop
(bad)
rcr
clc
push
icebp
adc
xor
jle
jle
(bad)
mov
jbe
cwde
into
movs
adc
inc
cmp
sbb
jl
push
icebp
sbb
lods
out
xor
jmp
xor
dec
inc
inc
inc
sbb
cmp
lods
ins
mov
mov
movs
or
push
and
xor
and
scas
mov
jl
sub
add
pop
inc
pop
cmp
pop
sub
jns
jle
(bad)
or
mov
inc
add
inc
ja
jno
sti
je
inc
je
push
jns
ret
mov
call
sbb
std
(bad)
call
adc
in
call
dec
je
call
xor
aaa
push
push
sbb
mov
test
xlat
inc
or
sub
push
push
call
push
leave
pusha
dec
stos
adc
adc
xor
xor
(bad)
mov
(bad)
jmp
add
pop
mov
cmp
pop
rcl
xor
ret
(bad)
jecxz
mov
cmp
jne
push
or
and
stc
(bad)
in
mov
aam
or
std
dec
aaa
xchg
or
out
inc
mov
mov
hlt
push
push
mov
inc
push
or
aam
lds
ffree
or
mov
inc
pop
or
push
dec
push
sub
sbb
loop
push
pusha
lods
in
fdiv
mov
in
push
popa
ror
lods
and
or
cwde
inc
sub
dec
push
pop
mov
mov
fs
push
adc
retf
int
aaa
push
sbb
cmp
or
sbb
cld
scas
sti
mov
fs
pop
test
stc
mov
cmps
push
xchg
(bad)
push
and
imul
mov
mov
or
jo
(bad)
push
or
and
inc
or
and
and
xor
xchg
rcl
push
and
xor
ins
movs
xlat
add
push
mov
jo
xor
mov
push
es
adc
rol
lods
std
inc
and
std
mov
inc
or
mov
or
fst
sbb
push
scas
popf
cld
mov
sti
sahf
retf
pop
aam
add
push
sbb
call
xor
test
adc
neg
mov
cmp
hlt
push
mov
mov
daa
repnz
call
adc
repnz
pop
scas
fmul
jle
stos
int
jge
movs
add
add
xlat
jbe
pop
fcom
fcomp
push
rcl
add
mov
add
jmp
push
push
shl
shr
fsub
inc
sbb
mov
fcomp
pop
loopne
push
dec
jmp
call
adc
add
adc
sbb
ret
popa
enter
add
dec
sahf
pop
cmc
sub
push
xor
out
inc
in
or
mov
std
inc
in
ja
adc
lea
adc
inc
daa
sub
adc
or
adc
lods
in
add
fadd
fcmovnu
ins
loopne
push
add
push
mov
inc
or
add
daa
adc
dec
dec
cmp
push
cdq
sub
cmp
push
outs
mov
cmp
jae
or
fsubrp
push
adc
rol
inc
xor
inc
lds
jns
shr
push
mov
inc
and
mov
test
push
jne
test
ror
pop
lea
sub
fsub
scas
retf
in
xor
in
or
leave
dec
push
xor
stos
movs
push
imul
cmp
enter
outs
loope
add
or
ret
(bad)
inc
push
inc
adc
ja
push
and
or
add
inc
sub
sbb
and
scas
sbb
popf
adc
dec
or
mov
stc
sub
mov
add
jle
or
or
cdq
fild
add
jne
test
rol
data16
mov
push
pop
mov
or
jae
inc
fistp
mov
jge
pop
aam
sbb
jno
movs
shl
or
ret
mov
inc
pop
cmps
sbb
adc
add
jmp
jmp
push
push
sub
or
rcl
jns
jnp
cmp
shl
pop
jl
add
bound
dec
jne
sbb
pop
fdiv
out
(bad)
mov
sub
jge
and
(bad)
push
and
jmp
aas
add
push
sbb
jmp
xchg
mov
aam
inc
clc
mov
fcom
test
imul
movs
lea
jb
cs
mov
sub
push
mov
lahf
lock
adc
or
mov
xor
jmp
loop
jmp
(bad)
inc
cmps
jmp
sar
sub
std
in
mov
and
bsf
add
(bad)
cmp
pop
jns
or
push
add
mov
sbb
lods
stc
or
push
or
add
mov
loopne
and
adc
and
das
pop
jbe
mov
mov
inc
jo
fcomip
pop
add
ja
mov
inc
int
test
cs
imul
pop
push
fadd
clc
inc
sahf
js
mov
add
pop
lods
bound
jne
add
adc
mov
adc
mov
lds
mov
jnp
mov
movs
scas
push
add
ds
(bad)
je
push
jae
sub
call
dec
xchg
adc
in
jo
jmp
cmc
mul
push
push
pop
imul
mov
jne
pop
mov
dec
or
hlt
stos
fistp
scas
mov
call
xchg
adc
jecxz
add
(bad)
jmp
or
inc
and
mov
or
cmp
shr
pushf
mov
and
jae
push
lahf
(bad)
fdiv
sub
call
(bad)
sbb
scas
popf
cmp
jae
fnstsw
sbb
pushf
test
(bad)
inc
ss
aam
ret
push
pusha
inc
ins
adc
lods
mov
test
mov
call
xchg
mov
pop
add
sbb
sbb
retf
popa
test
(bad)
int
pop
(bad)
clc
jge
(bad)
jmp
push
loopne
test
ins
leave
jo
adc
mov
xchg
push
sbb
into
mov
xchg
jo
xchg
test
xchg
test
cmp
xor
inc
daa
or
jge
rcl
or
rol
fidivr
sub
dec
push
jns
fst
(bad)
adc
sti
add
push
shr
mov
mov
and
xchg
aam
cld
fidivr
jmp
sub
hlt
xor
xchg
jmp
(bad)
sub
cwde
fcom
shl
ds
imul
add
cmp
pop
push
adc
dec
jns
sub
repnz
sbb
and
pop
jae
lea
push
aam
fdiv
fistp
ins
sar
push
mov
mov
dec
sub
retf
mov
and
test
les
cmp
clc
js
ja
mov
add
add
outs
scas
lea
or
dec
pusha
rol
jmp
stos
xchg
cmp
fsub
sub
sub
lock
outs
shl
mov
aas
add
cmp
add
cmps
push
or
call
inc
sbb
(bad)
dec
xor
dec
in
ins
cmp
adc
aam
call
jl
mov
daa
dec
es
push
xor
inc
and
xchg
cmc
loopne
push
aaa
call
and
cmp
test
inc
dec
cmp
jne
sub
xor
aaa
int3
(bad)
shr
jnp
push
mov
inc
jmp
cmp
adc
adc
push
ja
and
cmp
jl
inc
bound
daa
ret
xchg
call
in
cmovno
add
outs
mov
mov
dec
push
and
enter
or
in
inc
jmp
jge
pop
ja
add
gs
inc
adc
fcom
shl
sub
sub
sti
cmp
or
xor
shr
fcmovnu
rol
inc
inc
mov
mov
add
adc
sub
add
add
cli
sub
pop
pop
cmc
cmp
push
or
push
movzx
not
shl
or
pop
js
or
push
cmp
mov
xor
dec
jne
outs
pop
and
ja
adc
popa
adc
pop
jle
inc
add
and
mov
push
or
fdivr
xor
hlt
jne
push
inc
sub
clc
scas
jmp
inc
jge
jmp
xchg
push
mov
clc
adc
inc
lock
inc
icebp
push
or
cmp
add
test
sbb
or
cdq
push
inc
mov
jl
aam
jl
cwde
sbb
ja
jb
mov
cpuid
sub
clc
sbb
dec
pop
jo
lock
push
sbb
mov
xlat
arpl
gs
mov
xor
pop
xchg
ss
cmp
movs
sbb
clc
adc
dec
call
mov
adc
xlat
fist
(bad)
jo
call
xchg
mov
loope
adc
add
aad
ret
mov
mov
jbe
pop
pushf
or
iret
or
mov
dec
pushf
mov
std
or
xchg
add
push
mov
mov
mov
jl
shl
dec
add
and
or
add
lea
rol
add
sbb
not
and
and
enter
cli
out
inc
fbld
mov
mov
or
enter
xlat
mov
and
rcl
clc
or
jl
mov
and
iret
lsl
mov
test
pop
jns
js
test
xchg
adc
into
mov
mov
mov
cli
mov
and
or
push
dec
cli
je
or
cld
add
sbb
fcomip
sar
push
mov
mov
in
sbb
and
mov
imul
or
cmp
inc
xor
mov
not
sbb
fnstcw
fldcw
mov
sub
add
(bad)
mov
stc
sbb
jmp
fdiv
shl
mov
idiv
and
mov
fdiv
scas
test
call
shl
mov
push
or
mov
cmp
loopne
xlat
sbb
cld
jno
out
cld
sbb
test
aaa
stc
in
ins
fcom
mov
jae
and
nop
imul
mov
xor
xchg
in
jae
xchg
jno
fsubr
add
div
cld
inc
fmul
div
je
lock
cmps
jl
into
ins
bound
clc
push
and
hlt
lods
sar
int
repz
mov
mov
clc
inc
icebp
fst
sbb
mov
imul
add
jae
mov
rol
inc
mov
ror
cli
push
inc
ins
or
sbb
cli
pop
push
pop
pop
es
push
cmp
and
stc
ret
jle
mov
mov
xchg
(bad)
jle
xlat
cmp
inc
fdivr
addr16
pop
adc
(bad)
cmp
call
and
loopne
push
adc
add
jnp
or
mov
test
mov
loopne
inc
(bad)
hlt
enter
out
out
iret
(bad)
pop
ror
and
fdivr
out
fdiv
mov
loope
cmc
ss
or
xchg
int3
popf
push
sub
not
pop
aaa
ret
jp
je
rol
push
fnsave
aad
jb
xlat
daa
shr
mov
fsubr
in
adc
inc
je
not
xchg
jge
sar
mov
test
jecxz
cld
and
mov
int3
push
clc
mov
xchg
jns
inc
aam
fld
outs
enter
addr16
dec
cmp
xor
int3
pusha
pop
cli
xlat
mov
sbb
xor
fld
outs
jnp
div
popa
or
adc
(bad)
xor
pop
and
ins
pop
adc
fdivp
xor
lock
or
in
mov
pop
or
inc
jmp
push
pop
sub
lea
rol
out
mov
xor
xor
mov
add
mov
cmp
xor
fistp
push
mov
enter
clc
mov
sbb
cmc
cmp
jle
sub
adc
rcr
stc
inc
pop
pop
cli
daa
mov
neg
mov
sbb
mov
pop
test
out
aam
call
sti
xor
mov
rcl
jae
daa
add
pop
(bad)
xor
adc
mov
cmp
aam
push
cmp
sub
popa
popa
jecxz
xor
cdq
(bad)
shr
fidiv
je
mov
(bad)
jl
pop
push
cli
adc
cmp
fdivp
rcr
push
lods
les
sbb
mov
mov
and
xadd
loopne
push
push
fist
ja
repz
jnp
pop
xor
or
xlat
sub
mov
and
repnz
inc
fbld
cld
or
ficomp
ret
pop
pop
gs
out
cmp
xchg
int3
or
mov
pop
loopne
sbb
pop
mov
xchg
int
fmul
test
hlt
jae
jnp
loopne
sub
push
pop
pop
sar
or
jns
inc
add
adc
dec
ror
inc
sub
(bad)
shr
add
push
div
push
xor
or
retf
fsub
imul
mov
retf
(bad)
and
cmp
(bad)
enter
pop
mov
fdiv
dec
push
mov
jg
xchg
rol
(bad)
push
fiadd
pop
in
inc
mov
ss
pop
mov
sub
sbb
aam
mov
and
push
mov
jle
mov
call
push
pop
inc
and
pop
mov
sbb
aam
sar
add
add
sbb
lea
rol
imul
cmp
jae
inc
adc
mov
add
sub
cmp
jb
push
mov
sub
movs
push
xchg
clc
mov
je
jg
ret
aas
jmp
mov
sbb
sbb
dec
inc
out
cmp
jb
rol
es
or
push
cmp
aam
ins
push
push
dec
mov
and
pop
sbb
push
jbe
dec
jle
push
jmp
mov
cmp
xchg
das
jb
js
sub
push
dec
mov
xchg
push
xor
outs
out
push
psubsb
or
inc
pop
push
out
mov
push
call
push
sbb
jl
cli
jno
test
dec
push
popf
push
stos
pop
cmp
xlat
(bad)
rep
cdq
add
push
lock
ins
xor
cmps
jmp
xlat
test
pop
add
das
(bad)
enter
cs
fild
ret
add
pop
mov
mov
clc
jmp
jge
add
inc
dec
or
clc
ret
pop
add
sti
cs
enter
xor
push
inc
adc
mov
jb
mov
in
fistp
(bad)
sar
int3
data16
outs
or
shr
call
xlat
into
into
sbb
add
call
pop
aaa
lock
adc
pop
jg
jno
in
pop
fsub
in
mov
mov
adc
sub
data16
cmp
or
push
xor
movs
rol
or
jnp
xlat
or
mov
fldenv
xor
pop
jmp
jmp
or
mov
sbb
test
cmp
push
jbe
popa
pop
popa
jno
aaa
ficomp
jno
push
sub
xor
xchg
lock
in
adc
dec
icebp
lock
jmp
jg
hlt
in
adc
pusha
or
ins
or
xor
mov
sti
sbb
push
dec
push
lea
ret
hlt
imul
mov
loope
sub
in
test
fwait
push
push
clc
sub
xor
int3
(bad)
inc
cmp
fisubr
jnp
test
sub
add
call
mov
and
mov
or
popf
push
xchg
pop
rcl
rol
ret
(bad)
xchg
pop
inc
mov
mov
loopne
fiadd
mov
xor
aad
clc
push
sbb
xchg
mov
hlt
and
jmp
loope
inc
add
ret
add
mov
out
and
xor
jbe
push
push
out
ret
mov
shr
nop
add
mov
sbb
inc
mov
call
mov
mov
pop
inc
sub
call
push
test
inc
in
arpl
movs
cmp
xor
dec
enter
and
cmp
jbe
push
js
sti
cmc
aam
aam
dec
enter
sbb
ds
loopne
call
aam
and
stos
dec
or
sub
add
call
enter
enter
jp
or
pop
in
test
fs
push
xor
call
inc
fcmovnbe
int
lock
pop
jb
out
repnz
fs
loop
cmp
inc
inc
dec
dec
nop
enter
and
imul
inc
pop
outs
and
fs
inc
es
aam
fcom
inc
push
sub
das
out
dec
enter
add
enter
repnz
leave
push
ret
adc
cmp
and
cmp
and
pop
or
test
jge
adc
test
dec
mov
pop
xchg
inc
dec
inc
es
and
fs
add
push
and
jmp
pop
fiadd
xchg
shl
pushf
lods
mov
ror
shl
xchg
icebp
inc
mov
add
xor
mov
add
xchg
test
or
idiv
push
xchg
call
sbb
mov
out
dec
pop
push
adc
mul
pop
inc
out
mov
or
sar
fdivr
inc
popa
dec
dec
stos
mov
cmps
and
pop
(bad)
nop
and
sahf
inc
ins
test
inc
jg
and
add
lds
in
sbb
and
and
mov
inc
(bad)
or
dec
adc
ins
fld
dec
push
push
ficom
outs
in
pushf
es
call
jns
daa
cli
stc
data16
inc
jb
arpl
inc
mov
or
mov
inc
das
or
jo
aad
xor
pushf
js
or
into
pop
mov
push
jo
dec
mov
jbe
mov
push
mov
idiv
inc
or
js
inc
(bad)
dec
(bad)
aam
in
or
int
push
test
mov
pusha
adc
and
xchg
hlt
pusha
pop
pop
jne
mov
test
in
retf
or
inc
iret
sysenter
and
push
frstor
xor
popa
adc
push
adc
add
mov
xor
or
and
retf
add
call
loope
pop
pop
mov
ja
ret
xchg
mov
xor
mov
dec
adc
push
cmp
and
fbstp
sbb
fsubr
and
push
pop
lods
fstp
clc
mov
pop
push
je
inc
shufps
rcl
or
bound
mov
jmp
shl
lods
jl
add
sbb
outs
nop
ret
call
or
mov
and
daa
pop
adc
cmp
push
sub
jle
adc
push
sub
int
enter
leave
in
inc
pop
pop
mov
push
gs
jg
push
mov
clc
fisubr
aaa
or
adc
jae
push
xchg
mov
ret
sub
je
nop
xlat
xchg
shr
inc
sahf
or
clc
movaps
jns
mov
cld
mov
mov
adc
xchg
and
lods
cmovnp
mov
loop
lock
std
mov
inc
call
inc
push
mov
enter
dec
imul
or
movs
mov
add
loop
push
pop
push
mov
mov
and
sbb
cmp
push
aam
jo
add
pop
mov
mov
push
and
inc
bound
pop
jbe
adc
ja
daa
sub
sub
sbb
add
inc
add
test
(bad)
push
jo
stos
add
pop
js
int
imul
adc
pusha
or
adc
xor
stc
and
xor
fimul
sbb
lods
and
mov
dec
push
cmp
adc
push
push
and
(bad)
daa
ins
or
sub
test
rdtsc
fcom
push
bound
or
cmps
sbb
lea
cmc
sub
sti
or
push
mov
sbb
push
add
clc
mov
ins
mov
stos
sub
or
xor
cmp
or
int
aam
push
mov
aaa
leave
pop
pop
jmp
rol
inc
cli
sbb
add
test
fidiv
sbb
mul
daa
imul
mov
add
dec
mov
inc
xor
sahf
movs
(bad)
push
mov
mov
aaa
lods
or
retf
inc
and
repz
sqrtps
mov
sbb
push
inc
xor
jo
call
out
cmps
add
sbb
pop
rcl
mov
fwait
int3
xor
dec
dec
push
mov
data16
shr
inc
push
xor
and
pushf
rcr
push
pop
(bad)
(bad)
(bad)
rcl
mov
sbb
push
dec
aad
in
cmp
and
jo
in
inc
mov
push
jns
pushf
into
into
ficomp
in
push
sub
push
add
lock
loopne
call
jmp
push
push
or
repz
retf
jle
push
jl
inc
jmp
lock
pop
pop
out
dec
ror
leave
push
or
jge
inc
or
sub
and
leave
test
ds
xchg
or
push
mov
add
cmp
xlat
jmp
enter
imul
popa
mov
hlt
pop
(bad)
cli
mul
mov
jl
in
lock
push
xchg
cmp
outs
push
sar
lahf
jne
adc
xchg
es
rcr
push
inc
adc
mov
xor
pop
sbb
add
push
push
out
push
mov
loopne
push
das
jl
add
add
repz
add
mov
pop
sbb
cmp
mov
pop
add
dec
repz
sub
adc
jb
pop
data16
inc
ret
fs
lods
inc
adc
in
xor
ret
xlat
clc
sub
mov
mov
xor
mov
jne
loopne
inc
push
jne
mov
repz
(bad)
retf
hlt
or
jb
adc
or
popa
fdivr
dec
add
sbb
sbb
repz
cmps
mov
push
pop
shl
je
push
cmp
ins
test
test
or
imul
pop
scas
test
sub
adc
shr
cmp
adc
in
xor
jb
sub
clc
and
shl
(bad)
xor
add
dec
mov
sub
jmp
ins
mov
and
dec
push
leave
add
unpcklps
call
cmp
mov
cld
add
rcr
jnp
add
dec
neg
or
mov
fs
lods
xor
cmps
or
or
leave
pusha
mov
mov
sub
loope
xchg
call
pop
ror
into
push
inc
pushf
ja
jnp
imul
dec
test
sub
(bad)
sbb
pop
xor
xor
add
xor
or
cs
sbb
jmp
sbb
inc
ss
cmp
xchg
push
and
(bad)
into
mov
xor
rcl
ds
sub
frstor
sbb
mov
inc
cld
pop
mov
fnstsw
cld
sbb
mov
sub
xor
loopne
call
fisttp
dec
je
add
dec
pop
les
jge
xor
jmp
in
adc
pusha
push
mov
adc
push
sub
mov
push
les
shl
mov
add
lods
xor
inc
cli
jb
in
add
xchg
and
les
dec
push
push
ins
inc
adc
add
push
and
addr16
mov
es
sbb
mov
and
inc
shr
mov
sub
mov
inc
xor
fiadd
mov
in
fs
dec
sbb
pop
clc
push
neg
mov
adc
js
inc
mov
adc
test
push
add
jo
mov
psubq
fwait
lock
mov
mov
fsubr
dec
repnz
or
js
and
ret
mov
addr16
out
mov
lea
cmp
jg
cmp
or
ret
shr
cmp
ret
jge
xor
cmp
or
mov
sub
mov
test
adc
in
ret
push
test
rol
xchg
mov
and
adc
and
test
icebp
inc
lea
call
jmp
cld
outs
aam
mov
mov
fdivr
add
pop
xchg
or
dec
push
ret
push
push
adc
dec
aam
gs
adc
inc
dec
xor
inc
mov
inc
xor
inc
sub
loop
jp
add
xlat
or
add
loop
je
xchg
loopne
xor
in
les
iret
test
add
setge
psubq
lea
lock
(bad)
call
loopne
jp
or
xor
add
fst
and
or
div
aam
sbb
push
sbb
sbb
in
repnz
je
xor
je
stos
or
hlt
and
cmp
pop
push
sar
xchg
out
pop
das
ret
push
neg
hlt
cmp
sbb
add
mov
add
add
cmp
call
mov
mov
add
cmc
dec
and
sbb
sub
mov
push
lock
xor
add
xchg
scas
inc
cli
fnstcw
dec
mov
inc
inc
ret
add
or
mov
or
jno
aam
jge
ins
add
dec
jbe
stos
xor
sub
cwde
(bad)
dec
push
pop
sub
jp
(bad)
adc
jne
cmp
xchg
add
xchg
mov
mov
jmp
adc
xor
adc
inc
adc
push
jns
xchg
fbld
mov
mov
push
adc
adc
inc
jnp
and
push
push
test
push
les
adc
push
rol
dec
sti
add
leave
push
pop
mov
sub
movs
jbe
sbb
(bad)
mov
inc
add
mov
int
pushf
and
outs
sbb
sbb
push
push
ret
inc
or
jns
cmp
call
adc
mov
ss
pop
pop
push
rcr
shl
mov
clc
fstp
and
inc
ret
inc
retf
sub
push
dec
dec
dec
movs
adc
pop
sahf
test
(bad)
adc
inc
popa
adc
add
adc
inc
push
dec
and
push
or
mov
cdq
pop
add
loop
mov
icebp
sub
or
and
inc
jmp
jp
fsub
loop
mov
adc
sub
mov
cmps
jb
adc
fdivr
add
lea
ret
int3
clc
mov
sbb
push
and
add
xor
nop
sar
jne
test
or
movzx
sbb
jmp
sbb
mov
inc
adc
(bad)
les
sbb
mov
pop
jmp
push
push
pop
xchg
test
push
jmp
add
fadd
mov
xor
das
sar
in
pop
retf
cmp
dec
out
mov
adc
je
add
fisub
sub
shl
shr
adc
sbb
push
cmp
ins
push
add
mov
sbb
js
add
push
inc
dec
(bad)
fild
inc
ret
retf
push
jno
ret
mov
or
jmp
mov
push
push
xor
inc
jmp
sar
lahf
sub
cdq
or
(bad)
or
test
mov
mov
or
data16
mov
not
(bad)
cmp
out
cmp
in
int3
push
cmp
int3
xor
xor
dec
xor
iret
and
or
adc
inc
fild
xchg
icebp
ret
mov
push
sbb
and
cli
jnp
outs
xor
and
ds
lods
push
cmc
or
stos
add
adc
retf
or
loopne
test
adc
mov
cmp
adc
mul
push
mov
xchg
jl
je
icebp
xor
fmul
or
push
loopne
or
or
hlt
nop
int3
mov
xchg
push
cmp
add
add
dec
inc
aaa
inc
(bad)
mov
ins
loopne
xchg
es
sub
or
adc
fldcw
fwait
adc
ret
add
mov
sub
add
cld
xor
add
mov
xor
xor
xor
mov
push
popa
dec
in
pop
sbb
xor
pop
cld
add
jmp
add
je
arpl
sub
dec
sbb
mov
push
sbb
fcmovu
and
and
adc
dec
in
add
sbb
xchg
or
cld
idiv
(bad)
aas
push
in
dec
mov
or
je
inc
sub
pop
lds
xor
inc
cwde
mov
stos
loopne
or
push
cmp
sbb
mov
pusha
dec
cmc
inc
sbb
test
scas
fdivr
dec
mov
add
adc
pop
jl
int
mov
or
push
inc
movs
addr16
fsub
and
jmp
xchg
or
cmp
aam
pop
pop
ja
bnd
jb
scas
or
push
call
inc
(bad)
pop
rol
mov
sbb
cli
inc
ror
pop
dec
scas
jmp
sahf
sub
adc
push
mul
(bad)
or
mov
ffreep
mov
pop
test
mov
push
and
mov
xor
ffreep
mov
mov
adc
mov
fmul
and
mov
xor
push
add
leave
xor
daa
pop
push
xor
pop
xor
stos
shr
jo
cmp
sub
inc
push
arpl
adc
cmp
je
clc
mov
jno
inc
push
push
add
pop
addr16
pop
js
pop
dec
or
pop
cdq
aam
pushf
or
dec
xor
pop
dec
dec
adc
stos
push
call
sar
or
sbb
inc
mov
xor
push
pop
mov
call
push
mov
pop
dec
je
js
and
jg
sub
je
sub
loop
mov
inc
cwde
call
mov
and
test
push
les
push
lea
or
cmp
sbb
mov
lock
adc
sub
adc
not
pusha
popa
and
push
retf
jno
push
pushf
or
jecxz
or
add
sbb
add
add
or
inc
mov
cmp
push
sub
fisttp
mov
add
inc
sub
inc
push
fs
ret
mov
adc
mov
ins
stos
jb
or
movs
cmp
and
jo
xchg
fsub
mov
jecxz
sahf
jns
mov
pop
ror
jle
dec
dec
fdivr
xor
mov
test
ss
ja
imul
test
call
mov
adc
dec
add
dec
push
and
and
imul
movs
or
loope
pop
call
and
cmp
push
mov
jle
data16
outs
add
xor
adc
cmp
sub
sbb
dec
mov
call
sbb
sbb
out
or
dec
jne
jle
cmp
fcmovnbe
gs
fs
mov
inc
sbb
cmp
mov
xchg
test
lods
ja
retf
push
sbb
imul
test
ds
sar
mov
jne
mov
mov
je
xor
xor
lods
sbb
inc
or
add
enter
inc
jl
dec
jo
(bad)
call
test
sbb
mov
ja
inc
cld
ins
call
dec
ficom
mov
mov
adc
xchg
mov
cld
dec
cmp
icebp
sub
test
jno
aam
pusha
pop
dec
add
je
out
mov
or
or
cmps
mov
mov
mov
sbb
jne
fwait
dec
out
ret
ret
inc
lods
or
call
int3
mov
hlt
add
test
sbb
clc
sub
add
sbb
retf
cmp
inc
dec
or
add
inc
push
mov
(bad)
sbb
push
es
movs
pusha
mov
jl
push
push
inc
push
and
pop
mov
pop
les
mov
and
pop
adc
aas
mov
sub
sbb
adc
addr16
(bad)
loop
pop
inc
push
retf
mov
push
sbb
repnz
sbb
sbb
adc
inc
or
adc
test
or
loope
fsubr
inc
loopne
cmp
je
and
sub
loopne
(bad)
out
pop
jmp
mov
daa
and
imul
xchg
add
scas
loope
test
pop
ret
adc
(bad)
or
add
test
sti
into
push
test
fadd
sbb
mov
and
jmp
shl
arpl
test
imul
mov
ret
call
je
sub
fbld
fnstenv
daa
or
enter
jle
push
adc
popf
adc
adc
(bad)
mov
fdiv
cmp
or
popa
and
adc
das
inc
je
and
mov
inc
retf
cmc
dec
mov
xor
push
ja
mov
push
mov
and
dec
stos
pop
aas
or
push
dec
punpckhdq
scas
push
inc
mov
lea
or
leave
add
aas
fiadd
cmp
cmp
test
in
sbb
(bad)
je
repz
pop
out
lods
rcl
mov
scas
scas
icebp
mov
inc
push
push
mov
cmp
cmp
stos
rol
movs
push
add
repnz
mov
and
pop
adc
adc
movs
adc
shr
icebp
mov
push
push
ror
scas
pushf
add
push
sub
lods
add
clc
sbb
sbb
rcl
int
hlt
rcr
test
add
mov
pop
sub
es
jne
rcl
pop
xchg
pop
xchg
sub
inc
dec
dec
clc
xchg
xor
mov
arpl
add
mov
adc
push
mov
mov
cmp
or
xor
(bad)
encls
cmp
cmp
and
mov
pop
add
and
test
jbe
cmps
push
js
sub
xchg
add
pop
rcl
pop
push
call
mov
pop
cmp
je
movs
(bad)
mov
xchg
add
not
or
lds
lods
add
lods
mov
or
push
jne
nop
or
je
add
jb
xchg
adc
aad
imul
and
scas
cli
popf
test
inc
call
mov
popa
stc
add
fadd
mov
outs
mov
and
mov
(bad)
cmp
xor
leave
mov
sbb
push
pop
jb
and
mov
aaa
mov
inc
jle
cmp
loope
push
cdq
and
sar
inc
shl
push
or
jmp
loopne
call
adc
imul
sbb
push
mov
xor
or
add
push
push
pop
js
idiv
ss
xlat
jb
sub
scas
rcr
push
sub
mov
je
sub
inc
pop
fist
jg
adc
lock
mov
cmp
jg
jl
mov
mov
mov
add
push
push
xchg
mov
inc
pop
mov
jo
and
add
or
push
add
push
inc
mov
inc
lock
jmp
cmp
fdivrp
in
xor
cmp
imul
mov
mov
mov
pop
push
cmp
xchg
inc
pop
je
adc
mov
xor
cwde
or
mov
cmp
(bad)
lods
pop
(bad)
push
add
push
je
mov
test
sbb
pop
outs
pusha
push
nop
sub
mov
push
clc
mov
pop
inc
cmp
loopne
pop
mov
je
mov
mov
mul
mov
mov
sub
adc
jne
push
mov
mov
das
add
cmp
test
or
adc
xor
pop
mov
push
or
or
mov
jne
sub
inc
aas
add
rcr
mov
outs
nop
out
call
xchg
jbe
xor
push
push
and
cmp
adc
test
mov
jbe
inc
cmp
pop
adc
jne
add
fstp
cmovae
cwde
sar
xor
ja
cmp
idiv
pop
push
mov
jmp
sub
sub
pand
add
or
add
sub
icebp
and
fimul
inc
sbb
cmp
ret
int3
aad
dec
ins
add
ds
or
mov
pop
jo
pop
sub
jns
push
mov
movs
call
mov
pop
pop
jmp
mov
ror
or
(bad)
pop
loopne
cmp
mov
xor
lock
add
xchg
call
lods
cld
bound
pusha
je
sub
push
(bad)
mov
mov
pop
push
push
pop
add
icebp
(bad)
push
imul
mov
out
jbe
jl
pop
lahf
sub
mov
mov
ret
or
jle
std
pop
mov
dec
jmp
jo
movs
push
cmp
cmp
(bad)
outs
aaa
movs
pop
mov
mul
seto
neg
or
push
nop
xor
and
push
movq
lahf
inc
or
ja
mov
or
cmps
sub
pop
(bad)
pop
dec
adc
and
addr16
jo
cmp
sbb
scas
push
movs
jle
add
inc
pop
sub
pushf
js
jp
shl
hlt
call
push
jo
ja
ja
and
xor
clc
cmp
add
cwde
jp
in
and
cmp
sbb
cmp
cmps
add
and
xchg
cmp
dec
adc
push
xor
jl
pop
jne
(bad)
or
call
pop
pop
in
sbb
loopne
dec
fsubr
aas
or
mov
fdivrp
sbb
bound
es
rcl
ins
out
sub
sbb
inc
sti
aas
popa
add
cs
lock
popf
mov
cs
lods
adc
pop
xchg
cmps
sbb
jg
add
inc
mov
stc
jge
or
cli
xchg
xor
and
mov
scas
das
and
pop
sbb
adc
sbb
jbe
push
jb
push
jmp
dec
shl
dec
pop
jge
les
push
inc
sbb
xor
add
xchg
xor
clc
arpl
sbb
sbb
add
xchg
dec
or
pop
imul
add
inc
inc
mov
xchg
or
add
inc
ss
add
cld
jb
bound
dec
cmps
jb
jle
shr
dec
xchg
sti
mov
cmps
adc
icebp
sahf
lods
xor
arpl
adc
mov
xor
jmp
adc
fcomp
xadd
mov
and
ds
jnp
xor
and
sbb
cmp
pop
add
icebp
add
push
rcr
mov
mov
cwde
or
jne
aad
lahf
dec
and
mov
mov
or
xchg
pop
mov
lods
cmp
loopne
ficom
dec
mov
sbb
or
xchg
dec
shl
call
or
imul
imul
imul
add
imul
fstp
cmps
mov
xchg
cmps
(bad)
jb
push
dec
shl
retf
js
bound
push
inc
imul
mov
mov
cmps
jmp
dec
add
adc
and
dec
imul
in
call
xchg
addr16
je
xlat
outs
push
add
xchg
iret
add
ret
xor
lods
call
adc
std
add
adc
inc
cmp
das
jb
jb
popa
outs
je
ins
popa
imul
mov
sbb
push
and
add
sub
popa
ins
ins
jae
pop
push
outs
outs
ins
popa
jne
arpl
(bad)
sti
mov
jne
outs
imul
ins
outs
popa
fs
ss
std
push
push
and
popa
jb
inc
(bad)
fcmovnu
je
adc
cmp
jne
mov
xor
aas
jae
das
push
push
lods
mov
ins
or
ja
jne
ins
cmp
cmp
fcomi
adc
or
mov
and
and
outs
in
frstor
arpl
imul
ja
arpl
mov
cmp
xor
dec
mov
adc
sahf
or
in
mov
adc
add
sti
(bad)
out
js
aas
add
add
add
add
add
add
scas
cmp
inc
add
add
sbb
mov
fisttp
cmp
xor
adc
aaa
add
les
inc
pop
jmp
mov
cmp
sqrtps
out
jae
xor
sbb
aas
inc
pop
xor
stos
call
add
imul
aas
adc
adc
mov
dec
xor
outs
(bad)
inc
(bad)
loopne
lock
in
out
cmp
or
and
out
and
fisttp
lock
pop
sub
das
fidivr
loopne
loope
loopne
in
and
in
repnz
in
in
test
mov
push
addr16
outs
cmp
or
retf
je
fs
cmp
das
cmp
mov
dec
mov
jno
pop
mov
outs
add
sub
xor
add
popa
jno
mov
mov
push
je
and
and
inc
and
ret
pop
mov
fld
ss
adc
mov
mov
push
sbb
add
fwait
jecxz
ret
jb
push
fs
pop
ret
and
cmp
ds
test
fcomp
pop
retf
inc
mov
pop
push
aas
xor
adc
popa
daa
or
dec
nop
fistp
(bad)
xchg
xchg
inc
and
arpl
dec
or
outs
jbe
dec
arpl
add
addr16
jne
mov
ret
dec
popa
jns
inc
pop
shl
add
bound
popa
and
mov
popa
add
imul
pop
test
pop
push
dec
xchg
mov
mov
sub
js
or
jno
push
pop
je
add
lods
push
push
add
in
fsubr
or
jb
push
retf
bound
sbb
mov
jae
popa
push
sahf
jnp
in
iret
test
aas
push
xchg
cmp
stos
mul
cmp
js
jnp
test
je
dec
pusha
imul
pop
xchg
xor
outs
mov
out
add
outs
cwde
add
pop
div
cmp
cmovl
je
inc
inc
leave
clc
jnp
push
mov
sub
sub
mov
add
outs
icebp
jne
lea
mov
neg
adc
jo
jb
gs
pusha
sbb
adc
xor
pop
add
out
pop
popa
in
pop
dec
push
push
dec
inc
or
push
cwde
addr16
inc
fs
or
shl
cmp
add
je
ins
shl
scas
data16
xor
inc
mov
ins
punpckhdq
inc
rcl
or
pop
mov
and
data16
loopne
pop
pop
push
fidivr
les
ins
arpl
inc
loopne
lahf
cmp
repnz
or
gs
dec
dec
xor
pop
mov
aaa
push
inc
xchg
cmp
jmp
rcl
je
xor
add
ret
or
dec
scas
xor
mov
jge
cmp
test
xlat
jo
inc
add
push
and
push
dec
shl
outs
pop
add
pop
inc
inc
inc
push
inc
pop
and
mov
push
jmp
cmp
jae
retf
adc
iret
fst
push
out
pop
hlt
push
mov
sbb
nop
xor
adc
inc
mov
pusha
add
pop
nop
pop
(bad)
clc
mov
inc
dec
cmp
or
movs
xor
es
fsubr
or
dec
and
imul
aas
pop
or
mov
cmp
pushw
mov
xor
stos
cli
pop
(bad)
bound
jae
aaa
and
mov
pop
inc
dec
dec
add
or
dec
out
inc
mov
(bad)
jg
call
sti
jmp
jmp
dec
add
in
aaa
into
sbb
ins
rol
pop
sbb
cmp
pusha
xor
shl
and
sbb
inc
add
push
inc
or
fcom
xchg
clc
add
add
add
push
test
out
jae
outs
in
add
add
das
add
add
push
sahf
shl
loopne
test
mov
lods
sub
jmp
xlat
and
xor
pop
adc
push
pop
or
das
and
jnp
ror
pop
outs
add
and
call
fnsave
xchg
cwde
fisttp
inc
add
outs
out
or
sbb
cmc
pop
dec
push
jg
ds
push
cmp
push
ins
mov
inc
icebp
sbb
sub
fisub
inc
xchg
sub
xor
and
add
cmp
and
dec
mov
jmp
cmp
sbb
jb
popa
mov
ja
jns
xchg
inc
popf
xor
cmp
sbb
adc
loopne
inc
call
and
dec
push
push
dec
adc
sub
jecxz
dec
dec
repz
cmps
popa
aas
and
or
out
cmc
mov
in
call
jmp
imul
dec
sub
sub
add
in
dec
arpl
add
sub
mov
pslld
add
mov
mov
leave
out
dec
mov
dec
xor
inc
sahf
push
mov
imul
mov
ret
imul
cmp
push
pop
jmp
or
ins
test
addr16
loop
and
pop
mov
repnz
and
out
repnz
add
test
cmp
aas
in
in
mov
jmp
add
iret
repz
test
pop
gs
test
or
jne
outs
js
push
fdiv
push
mov
lea
push
jae
pop
mov
fs
sbb
shl
aas
jne
push
and
and
gs
xor
sbb
inc
ret
cmp
das
push
xor
dec
or
das
fild
or
nop
stc
jg
cld
and
jnp
das
or
pop
dec
or
push
add
push
jo
rcr
fbstp
cs
sbb
fld
loopne
adc
daa
sub
rol
adc
mov
shr
in
adc
or
adc
repz
pusha
inc
mov
pop
push
in
push
(bad)
adc
ja
enter
rcl
xchg
ins
sbb
adc
pop
pop
fisubr
inc
xchg
jmp
xchg
ss
fld
daa
push
add
lahf
adc
mov
adc
mov
add
dec
inc
nop
push
xor
xor
fist
xor
jno
(bad)
lea
push
imul
push
cmp
add
movs
mov
cmps
int
add
outs
adc
push
fcomp
imul
fcomi
inc
js
push
jae
inc
jnp
cmp
adc
mov
adc
sub
adc
dec
dec
push
inc
push
dec
push
aad
push
xor
loopne
dec
in
pop
jp
push
das
sub
mov
pop
pop
sub
xlat
adc
push
aam
mov
cdq
add
in
and
add
je
dec
add
sbb
in
pop
adc
fild
outs
pop
pop
add
out
add
popa
push
push
add
ret
mov
fldenv
cmp
sbb
xlat
mov
dec
retf
add
jo
lahf
ja
out
nop
stos
dec
test
(bad)
mov
inc
frstor
mov
and
inc
mov
jo
xchg
ds
dec
call
imul
add
jns
ins
push
imul
adc
dec
dec
add
dec
mov
and
sahf
in
test
xor
add
xlat
push
js
mov
bound
adc
scas
jnp
pop
inc
je
(bad)
fsubr
sub
add
hlt
push
outs
push
rol
sti
mov
inc
pop
add
jbe
adc
(bad)
adc
syscall
mov
shr
rol
inc
jbe
xchg
lock
inc
jae
adc
or
cmp
adc
imul
or
outs
inc
in
jae
push
dec
test
jo
sub
shl
inc
and
shr
pop
mov
imul
aas
frstor
or
mov
inc
and
push
loope
cmovnp
inc
out
xor
mov
xor
mov
push
or
test
dec
icebp
(bad)
movs
pop
ja
inc
outs
js
retf
push
cmp
rcl
rol
adc
fs
jge
add
fcom
sbb
fcom
xor
pop
xchg
xor
push
or
push
ins
cmp
in
add
push
jle
iret
dec
arpl
add
ins
sbb
add
mov
push
xchg
gs
xor
outs
fld
ins
adc
dec
imul
pusha
jecxz
imul
ror
push
mov
sub
xchg
adc
dec
pushf
test
cmpxchg
mov
cmps
shl
sub
(bad)
retf
mov
pop
or
rol
adc
and
scas
xchg
mov
push
call
mov
mov
or
pop
mov
sub
mov
xor
pop
mov
dec
ins
add
ret
adc
scas
push
mov
out
adc
xor
mov
dec
gs
popa
inc
inc
push
inc
push
push
mov
add
or
imul
jae
or
push
adc
loopne
ja
fmul
inc
arpl
ins
add
push
pop
pop
ror
pusha
add
xlat
pop
mov
rcl
add
add
bswap
add
xchg
dec
rol
mov
clc
les
adc
dec
add
push
add
xchg
add
adc
xchg
pusha
pop
or
push
mov
sar
add
int
aas
add
add
fs
pop
shl
or
jne
lock
mov
push
add
add
mov
pusha
mov
inc
fild
dec
pop
mov
(bad)
mov
add
or
nop
adc
add
and
or
mov
add
nop
inc
iret
xchg
or
add
dec
pop
mov
push
or
xor
inc
jne
pop
shl
inc
stos
cmp
adc
loopne
retf
inc
test
arpl
inc
arpl
add
sbb
mov
cdq
pop
scas
jmp
in
jo
je
xchg
pusha
jae
adc
iret
js
or
xor
fcomp
push
imul
cmp
add
add
cmp
pop
cmps
les
xor
pop
daa
out
cdq
pusha
inc
je
xor
fdivrp
push
aaa
add
add
sti
lods
shl
inc
sbb
outs
dec
ss
or
test
adc
shr
cmps
movs
test
pop
push
push
add
pop
push
push
inc
mov
push
xchg
xor
or
retf
xor
fs
sub
add
mov
cmp
nop
sub
xchg
popf
add
add
xlat
ins
jns
cmp
imul
lds
(bad)
cmp
dec
cmp
test
jmp
mov
add
and
jmp
mov
mov
inc
cli
(bad)
out
pop
das
or
lock
pop
stos
stc
adc
fcmovnu
add
add
pop
ins
es
into
mov
xchg
ins
fdivr
scas
cmp
and
jmp
add
mov
pop
or
(bad)
nop
and
test
fisttp
and
or
sbb
dec
pop
mov
(bad)
mov
outs
sub
jne
ret
popa
add
adc
add
or
pushf
add
pop
add
add
pop
xor
jle
nop
addr16
or
cmp
or
clc
or
fs
mov
icebp
gs
or
mov
xor
call
xor
xchg
push
in
pop
pop
rcl
mov
xor
addr16
add
add
aas
repnz
addr16
add
add
jmp
cmp
pop
add
sbb
add
pop
jge
imul
adc
dec
ja
inc
cmp
inc
mov
repnz
add
ret
and
inc
repz
jmp
push
sub
add
arpl
or
mov
adc
cmp
sar
jl
xor
aad
ins
or
dec
push
mov
and
dec
ss
ds
cld
mov
or
xor
aas
mov
or
or
add
add
and
push
leave
or
and
sub
icebp
test
or
xor
ret
cmp
jb
test
jmp
(bad)
pop
outs
xor
add
and
add
xor
std
pop
sub
or
fwait
das
fisttp
xchg
pop
adc
dec
mov
or
adc
sbb
add
xchg
in
xchg
jnp
cmovp
cmc
in
pop
fmul
in
pop
imul
out
daa
push
ins
xchg
mov
adc
cmc
add
push
adc
cld
push
adc
inc
adc
or
add
fnstsw
inc
or
dec
push
inc
test
add
and
aad
push
and
add
and
cmp
xchg
add
or
add
add
add
mov
mov
pop
mov
dec
fstp
or
nop
lea
adc
inc
mov
fndisi(8087
push
test
ficom
cmp
loop
and
mov
or
mov
mov
vunpckhps
push
in
pop
mov
xchg
pop
pop
pop
sub
int3
cmp
add
push
push
mov
ja
add
jge
or
inc
adc
sar
mov
and
pop
push
push
push
sti
in
dec
mov
or
cmp
jl
mov
inc
inc
stos
test
and
add
add
jp
lds
(bad)
popf
mov
mov
or
sar
and
sbb
sub
jbe
push
fimul
or
inc
cmp
jl
push
xchg
adc
add
clc
push
fadd
in
fsub
repnz
jl
xchg
inc
cmp
jg
mov
es
jb
push
jmp
mov
repnz
pop
mov
stos
pop
mov
int3
fsubr
daa
mov
(bad)
and
dec
or
and
adc
lods
leave
push
or
addr16
test
add
aas
iret
test
popf
int
rol
jg
test
fs
cmp
jo
cmp
add
cmp
jae
add
fiadd
adc
ins
or
pop
sub
push
xchg
xor
sub
icebp
daa
dec
test
push
scas
or
pop
xchg
pop
aas
inc
add
dec
adc
popa
(bad)
fimul
sbb
xchg
xor
xchg
aas
pusha
mov
dec
call
push
frstor
pop
xor
mov
push
sub
mov
inc
xchg
push
add
add
(bad)
(bad)
call
xor
xor
aas
xor
pop
xor
jge
xchg
xor
xor
sub
(bad)
push
aad
fidiv
add
or
sbb
inc
xor
xor
js
test
or
mov
jb
lods
push
sbb
xor
xor
mov
call
(bad)
(bad)
jmp
enter
test
int
add
xor
mov
adc
aaa
addr16
(bad)
(bad)
(bad)
inc
cmp
cmp
jo
mov
out
out
cmp
cmp
fdivr
clc
cmp
pop
cmp
dec
mov
mov
cmp
cmp
cmp
inc
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
int
fnstsw
(bad)
(bad)
(bad)
cmp
pop
ds
ds
sar
cs
dec
aas
jl
xchg
lahf
aas
enter
(bad)
(bad)
out
into
mov
pop
xor
ja
mov
cwde
xor
xor
xor
loopne
dec
pop
xor
cmp
dec
xor
ins
xor
jle
pushf
(bad)
(bad)
push
pop
mov
xor
xor
xor
xor
xor
dec
xor
mov
call
xor
xor
xor
xor
addr16
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
jmp
xor
xor
xor
xor
xor
xchg
push
call
outs
outs
dec
aaa
iret
aaa
lock
div
stc
inc
cmp
cmp
cmp
cmp
loope
cmp
std
cmp
cmp
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmc
std
(bad)
(bad)
adc
xor
xchg
sbb
and
arpl
js
mov
xchg
aas
sar
repz
jg
or
test
xchg
xor
xor
xor
xor
sar
(bad)
push
aam
loopne
out
xor
into
xor
xor
xor
xor
(bad)
(bad)
call
and
xor
xor
xor
xor
xor
xor
push
pop
ss
ss
ss
pop
aaa
push
aaa
mov
shl
aaa
xor
cmp
loopne
loope
in
cld
cmp
(bad)
cmp
cmp
pop
clc
mov
cwde
xor
xor
xor
adc
(bad)
jg
ss
cmp
mov
aad
add
cmp
(bad)
(bad)
cmp
cmp
cmp
cmp
push
cmp
pop
and
pusha
ds
(bad)
(bad)
ds
ds
ds
mov
(bad)
aas
jmp
pushf
pop
xor
push
jg
fist
or
lea
cdq
xor
cmps
std
or
push
fnstenv
jmp
dec
lods
cmp
xchg
dec
bound
xchg
(bad)
(bad)
(bad)
out
mov
xchg
cmp
cmp
pop
cmp
cmp
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
dec
lods
cmp
sar
fidivr
in
idiv
lods
sub
aas
xchg
fwait
hlt
clc
mov
xor
jmp
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
inc
sti
inc
pop
xor
xor
xor
xor
xor
ucomiss
pushf
xor
mov
xor
mov
sub
aaa
mov
(bad)
jg
xchg
xchg
cmp
cmp
cmp
cwde
cmp
cmp
cmp
cmp
cmp
stos
cmp
cmp
cdq
cmp
or
ds
dec
mov
test
aas
xchg
aas
stos
aas
cld
lock
adc
jmp
jl
pop
sbb
mov
mov
xor
mov
xor
loop
pop
cmp
cmp
mov
cmp
ja
mov
xchg
cmp
add
push
xor
(bad)
dec
xor
sbb
jge
cmc
(bad)
mov
dec
xor
xor
xor
xor
xor
xor
in
xor
xor
inc
xor
xor
add
cwde
cmp
cmp
(bad)
cmp
cmp
ins
mov
cmp
mov
xor
movs
ds
push
mov
push
push
jnp
or
and
push
push
and
leave
test
xchg
stos
fs
push
push
push
xor
dec
inc
push
xchg
push
and
nop
push
lock
in
lods
add
pusha
nop
inc
pop
ins
imul
jae
pop
dec
jbe
call
movs
dec
daa
gs
ins
popa
jae
gs
jmp
and
dec
add
add
xor
xor
xor
test
(bad)
(bad)
in
and
push
mov
xor
push
cmp
mov
cmp
arpl
push
bound
pop
lods
std
mov
adc
sbb
jne
arpl
sbb
push
(bad)
arpl
arpl
jb
add
cmp
pop
and
mov
cmp
and
push
and
jbe
jb
jne
and
inc
push
add
je
outs
cmp
gs
adc
push
adc
fbstp
imul
add
popa
add
inc
inc
pop
adc
ror
push
add
sbb
xchg
imul
daa
add
xor
xor
sub
and
aas
or
fucomip
ja
jg
je
popa
arpl
push
cdq
loope
xor
lahf
pop
es
add
enter
movs
mov
add
aaa
jnp
or
and
ss
mov
(bad)
mov
add
mul
add
pop
ins
and
push
xor
and
and
addr16
test
inc
pop
inc
dec
dec
inc
inc
dec
pop
add
add
pusha
add
(bad)
jns
or
repz
fsubr
add
add
xchg
or
inc
add
xor
inc
xor
mov
loopne
mov
mov
das
adc
push
inc
popa
xlat
or
mov
xor
xor
xor
add
inc
and
ret
aas
jne
pop
mov
or
sub
fldenv
pop
add
xor
xor
xadd
xor
jno
and
jae
and
stos
in
mov
and
addr16
pop
stos
inc
add
inc
or
or
fdiv
mov
xchg
and
inc
das
in
push
pop
add
inc
adc
add
or
add
and
push
add
pop
inc
xchg
sub
dec
inc
push
shl
add
adc
data16
push
popa
aam
push
push
or
ins
jo
shl
and
add
mov
sub
lods
xor
or
out
adc
adc
add
mov
lods
lods
test
adc
mov
popa
aaa
inc
bound
pusha
ror
push
and
push
cmp
and
popf
or
and
mov
xor
sbb
sbb
pop
fstp
imul
mov
sub
inc
arpl
fist
cs
sub
outs
mov
or
mov
add
(bad)
jne
clc
push
jne
inc
jae
in
push
or
gs
jb
add
mov
ins
cld
and
add
mov
sbb
sub
and
ja
adc
in
cmps
push
add
push
pop
pop
add
jbe
in
push
push
push
enter
add
scas
jmp
add
call
out
lock
add
fldcw
xlat
das
sbb
mov
sub
clc
xchg
and
mov
push
add
addr16
shl
cld
and
fild
(bad)
das
pop
mov
add
xor
mov
xlat
xor
bound
shl
mov
mov
sbb
repnz
ror
pop
(bad)
imul
fs
retf
sbb
sbb
and
imul
jg
add
es
(bad)
adc
imul
outs
cli
outs
(bad)
arpl
sbb
lock
add
add
xor
add
inc
inc
aas
add
add
push
adc
in
das
outs
push
int
(bad)
retf
popa
outs
add
mov
push
aad
outs
sbb
pop
xor
data16
outs
repz
sbb
pop
mov
fadd
xchg
jge
outs
je
or
popa
mov
mov
or
rcl
ins
adc
jb
test
pop
push
outs
inc
and
pop
je
push
adc
mov
dec
add
ss
mov
sbb
ins
data16
ss
pusha
shr
or
pop
je
test
mov
or
add
neg
popf
adc
pop
add
sti
xchg
pop
adc
lods
add
or
pop
mov
or
retf
or
pusha
fstp
or
pop
add
fisttp
or
add
je
jmp
rep
pop
shl
pop
pop
fbstp
inc
pop
add
mov
adc
add
mov
and
push
data16
mov
pop
add
lods
mov
pop
or
cmp
test
addr16
adc
adc
test
xchg
add
pop
jo
push
sti
add
push
je
or
or
jg
pop
das
popa
aas
or
test
ins
mov
or
jo
pop
add
pop
fcomp
pop
fild
push
dec
fadd
or
or
call
pusha
push
inc
push
sbb
ins
popa
(bad)
push
ds
jae
and
inc
ss
ja
inc
sbb
adc
jnp
or
add
in
pusha
addr16
outs
or
add
in
inc
push
inc
outs
imul
push
mov
add
ja
pop
mov
ins
fadd
add
and
fwait
pop
das
or
xchg
cmp
scas
sbb
dec
xchg
jne
ins
xor
scas
jmp
frstor
sbb
add
mov
dec
dec
(bad)
scas
mov
sbb
cmp
clc
cdq
cmps
sbb
xor
int
ss
cmp
mov
sub
mov
rol
sub
out
in
sub
(bad)
add
push
mov
xchg
jne
or
fs
adc
aaa
mov
jbe
gs
mov
ins
fild
pop
sub
pop
add
push
or
adc
fistp
jae
outs
or
data16
push
and
jae
add
lods
mov
mov
adc
push
add
and
jg
or
add
loopne
movs
out
add
mov
jne
and
push
hlt
push
add
ins
pop
mov
add
sub
fidiv
add
movs
jo
add
or
add
jno
mov
dec
out
jb
ds
jb
pop
outs
(bad)
and
cmps
test
jp
je
inc
pop
aas
pop
das
push
popa
jp
sub
lods
jmp
push
ins
add
movq
inc
add
(bad)
stos
pop
jb
das
pusha
pop
xor
add
pop
add
add
jp
jge
fld
or
aas
fimul
mov
lea
nop
mov
pop
test
pushf
das
sahf
(bad)
jge
fmul
mov
or
add
or
pop
mov
xor
or
pop
ret
or
(bad)
aaa
pusha
(bad)
or
das
into
or
test
out
fwait
mov
ror
aam
aaa
psubusb
push
lods
sbb
loope
in
mov
dec
jmp
sbb
pmaddwd
clc
das
fcom
adc
cli
(bad)
paddw
push
mov
adc
or
mov
in
mov
lss
mov
xchg
fnsave
mov
or
mov
and
and
ins
aaa
pusha
frstor
or
cvtps2pi
xor
mov
cmp
cmp
ja
mov
mov
inc
or
mov
sar
push
or
jne
(bad)
jge
pop
or
pop
or
pusha
fld
jg
or
or
ins
das
ja
jo
dec
mov
mov
and
(bad)
or
mov
xchg
add
addr16
xor
pop
pop
pusha
and
pop
or
out
imul
sbb
push
push
sub
jo
(bad)
fld
xor
mov
cmp
add
add
shr
int
add
push
and
add
fs
and
jo
xor
imul
outs
and
inc
ret
jne
loopne
adc
pop
je
sub
inc
or
popa
scas
or
outs
sub
adc
add
pusha
mov
and
adc
shl
mov
inc
dec
push
rol
into
jle
inc
in
pop
hlt
add
sub
retf
jbe
inc
pusha
jmp
nop
pop
mov
inc
pop
cmp
rcr
pop
pop
sub
aas
or
cmp
push
je
scas
shl
aas
xor
sbb
xor
and
xor
inc
aas
xchg
ret
ss
inc
dec
mov
adc
movs
xor
xchg
push
sqrtps
fcom
not
iret
mov
fwait
leave
out
add
popf
inc
pop
clc
add
pop
pop
jo
das
add
jbe
ins
pop
pop
mov
rol
lock
mov
(bad)
adc
pop
inc
aas
and
mov
or
jo
push
xchg
fld
mov
nop
or
sbb
add
and
pop
xlat
jne
rcl
mov
aaa
pusha
popf
fist
(bad)
mov
and
cmp
pop
add
mov
pop
fild
adc
inc
mov
shl
(bad)
mov
add
push
xor
push
add
add
clc
in
popa
add
pop
rcr
call
xchg
stos
mov
imul
and
xor
shl
dec
push
pusha
jl
shl
in
call
cmp
cmps
imul
or
mov
aam
mov
rcl
dec
mov
dec
loopne
adc
add
adc
dec
shl
xor
inc
push
shl
jb
dec
shl
scas
mov
ret
add
lea
add
add
dec
rol
add
inc
not
rol
add
bound
add
push
or
adc
mov
sbb
inc
add
add
loop
test
xor
pcmpgtb
add
stos
stos
stos
sub
push
inc
push
xchg
mov
xchg
push
push
push
push
leave
test
stos
stos
sub
push
push
push
xchg
mov
xchg
push
push
and
stos
stos
fs
sbb
xor
dec
inc
push
push
push
and
xchg
stos
fs
push
push
push
xor
dec
inc
push
xchg
push
and
xchg
push
fs
push
leave
push
xor
push
inc
push
xchg
mov
xchg
push
push
push
push
leave
test
stos
stos
sub
push
push
push
xchg
mov
xchg
push
push
and
stos
stos
fs
sbb
xor
jbe
push
pusha
add
push
rol
outs
add
add
test
ins
call
ins
popa
jo
outs
or
add
pop
and
pop
imul
sbb
cdq
add
fcom
inc
movs
adc
clc
push
std
add
or
adc
daa
mov
lock
mov
add
add
add
adc
add
and
cdq
aas
mov
jo
arpl
enter
and
(bad)
or
cmp
mov
push
mov
cmp
test
mov
adc
add
add
das
imul
jae
push
inc
ja
ret
add
lods
dec
and
(bad)
outs
popa
add
fdivr
adc
or
aad
push
js
mov
cmp
and
push
ins
jae
sub
out
iret
or
sub
fsubr
pusha
xchg
mov
mov
xor
mov
fstp
arpl
test
popf
mov
hlt
test
mov
dec
add
enter
stos
pop
addr16
jo
add
jbe
outs
outs
or
add
or
in
adc
sbb
mov
pop
xlat
cwde
or
fsub
cs
and
ss
pop
push
imul
push
and
les
lods
push
mov
retf
data16
or
and
cwde
stos
test
pop
retf
or
mov
and
outs
pop
lods
popa
ins
pop
inc
push
loopne
pop
or
out
enter
jns
gs
and
loopne
add
and
add
call
mov
add
add
cmp
sub
add
or
inc
adc
adc
mov
add
add
xor
push
jnp
inc
rol
outs
mov
stos
push
call
aam
or
xor
div
inc
pop
add
or
mov
test
pop
or
or
xchg
ret
sbb
pusha
nop
cwde
les
or
push
pusha
aam
or
outs
pop
(bad)
popf
sti
or
pushf
daa
inc
sub
bound
jge
jae
or
xor
imul
test
arpl
cs
daa
inc
push
push
or
loopne
add
pop
dec
mov
je
jae
stos
or
or
daa
mov
arpl
pop
mov
pop
sti
retf
nop
add
add
add
add
inc
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
lea
lea
push
xor
stos
pop
dec
push
push
push
call
popa
lea
push
cmp
jne
sub
jmp
jmp
push
mov
cld
lods
test
je
push
pop
push
loop
call
jmp
pop
ret
add
rol
rol
rol
rol
add
mov
