add
add
add
add
add
add
add
add
add
add
add
push
dec
data16
jo
add
adc
push
add
add
add
add
adc
push
add
or
push
add
add
jae
add
or
add
or
retf
add
push
jae
add
or
jae
add
or
add
and
or
push
add
or
stc
int3
call
popa
and
jp
stos
and
cli
stos
jge
popa
and
in
xchg
and
icebp
push
imul
and
pop
pop
popa
sub
add
or
add
or
add
or
or
or
add
or
lea
add
add
adc
push
push
push
mov
adc
add
sub
add
or
pop
adc
outs
sub
add
and
add
pop
adc
outs
sub
add
popa
outs
sub
add
adc
adc
pop
or
sbb
add
and
mov
xchg
adc
adc
or
inc
retf
jecxz
fwait
or
cmc
jmp
adc
cmp
rcl
or
or
add
adc
sub
adc
(bad)
sbb
add
and
add
or
add
out
enter
out
leave
sahf
dec
popa
pop
shl
sbb
or
add
and
sbb
outs
and
adc
pop
rcl
add
adc
pop
and
add
add
or
push
pop
pop
adc
adc
push
mov
add
pushf
push
jae
add
or
add
or
push
sub
add
or
push
outs
sub
add
outs
adc
add
push
jae
add
or
jae
add
or
and
adc
add
adc
pop
adc
push
and
pop
add
add
adc
adc
or
adc
outs
push
add
or
adc
push
and
dec
js
and
rcl
lahf
fisubr
adc
add
adc
adc
sub
add
or
add
das
add
or
sub
add
push
sub
add
push
sub
add
add
add
lods
add
fild
or
add
add
adc
add
add
add
out
or
add
add
adc
add
add
adc
or
add
add
sbb
add
add
or
add
add
add
add
cld
add
add
add
add
sbb
adc
add
add
add
xor
add
add
adc
xor
add
sub
add
or
add
or
sub
sub
pusha
add
or
adc
adc
or
bound
add
sub
jb
add
jo
push
add
or
sub
add
or
add
jo
add
or
and
adc
add
or
(bad)
(bad)
dec
push
(bad)
(bad)
dec
push
jae
add
or
daa
adc
jae
add
or
adc
daa
pop
cmp
push
outs
add
or
adc
push
push
adc
adc
outs
push
outs
add
or
adc
sbb
pop
outs
add
or
adc
imul
adc
pop
or
pop
outs
add
or
adc
imul
adc
adc
pop
sbb
adc
outs
push
outs
add
or
adc
imul
daa
pop
ds
outs
add
or
adc
outs
push
add
adc
push
and
push
adc
and
xchg
dec
xchg
xor
jb
add
jo
push
add
or
daa
adc
adc
pop
and
outs
add
or
push
adc
adc
cmp
adc
push
adc
sbb
adc
imul
or
and
adc
adc
and
pop
adc
and
xor
adc
push
sub
adc
push
adc
add
or
adc
push
adc
or
push
add
xor
and
add
adc
sub
adc
adc
or
push
adc
adc
adc
pop
adc
outs
add
or
adc
pop
pop
adc
adc
push
or
addr16
(bad)
call
daa
adc
outs
push
outs
add
or
jae
add
or
sbb
push
add
pop
or
pop
outs
ins
add
or
daa
and
or
adc
push
pop
outs
pop
outs
ins
add
or
daa
and
or
push
outs
ins
add
or
adc
imul
push
adc
sub
outs
push
push
pop
adc
adc
push
adc
or
add
pop
pop
or
adc
imul
or
outs
push
add
pop
pop
pop
sbb
cld
pop
pop
pop
pop
pop
push
and
add
or
pop
adc
daa
adc
outs
outs
ins
add
or
sbb
outs
or
adc
outs
push
add
or
daa
adc
ins
add
or
sbb
pop
adc
adc
adc
xor
add
or
pop
fimul
sbb
outs
dec
add
or
adc
adc
push
outs
add
or
adc
ins
add
or
mov
cld
(bad)
pop
inc
push
shl
adc
adc
add
adc
adc
add
adc
adc
adc
add
and
xchg
punpcklwd
add
or
push
adc
adc
adc
add
and
xchg
xchg
shl
or
and
or
adc
pop
adc
dec
add
or
sub
add
or
pop
outs
sub
add
adc
adc
push
sub
add
adc
push
sub
add
popa
adc
adc
adc
add
jo
push
add
or
pop
adc
adc
sub
add
push
adc
lea
add
add
adc
push
adc
mov
or
add
adc
add
add
adc
or
mov
mov
add
add
push
add
or
or
lea
add
add
or
or
adc
mov
or
add
adc
jae
add
or
add
or
and
and
add
or
add
add
es
lea
add
adc
adc
cmp
and
add
or
mov
adc
adc
sub
adc
outs
push
lods
cmp
imul
adc
adc
outs
adc
add
outs
or
adc
sub
add
adc
sub
add
and
sub
add
or
or
sub
add
push
or
push
or
add
push
or
sbb
retf
push
adc
adc
or
adc
(bad)
xor
add
push
xor
pop
pop
adc
adc
push
outs
inc
addr16
(bad)
(bad)
fimul
and
adc
outs
dec
add
or
sub
add
add
add
add
int
add
int3
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
sbb
pop
add
add
add
add
adc
add
or
sbb
add
or
add
add
adc
jb
add
add
add
or
outs
adc
add
push
jae
add
or
pop
push
push
add
imul
fimul
pop
sub
pop
outs
dec
add
or
sub
add
or
add
add
or
push
push
adc
cmp
mov
or
mov
sub
dec
and
sub
dec
cmp
and
and
stos
in
das
popa
pop
pop
xor
adc
pop
inc
pop
sub
push
mov
pop
adc
adc
cmp
adc
sbb
add
and
add
push
adc
or
and
out
test
ins
and
outs
jmp
pop
popa
pop
popa
shl
sbb
add
pop
adc
add
pop
inc
or
pop
adc
pop
outs
je
add
adc
adc
pop
inc
pop
adc
adc
push
mov
add
pop
(bad)
(bad)
inc
sub
add
add
add
xor
push
inc
add
push
add
xchg
and
pop
shl
xor
arpl
sbb
(bad)
cmp
mov
and
call
add
gs
pop
jecxz
cmp
sub
fst
sar
popa
aam
sub
push
sub
mov
lahf
xor
leave
(bad)
and
cld
test
rcr
test
(bad)
cs
jle
or
sbb
add
ins
rol
mov
rcr
fs
and
vpmadd52luq
cmps
push
test
fdivr
xchg
inc
into
loope
test
inc
xchg
ds
cwde
adc
pop
iret
fwait
push
pusha
gs
push
jmp
cdq
dec
pop
pop
sub
fsub
mov
adc
dec
imul
enter
dec
aad
pop
adc
clc
or
lds
mov
xchg
jns
hlt
or
jl
outs
repnz
je
xor
sbb
xchg
and
loope
xor
cmps
jl
inc
cmp
inc
mov
js
in
add
adc
mov
je
cwde
push
pusha
add
repz
jnp
add
clc
out
mov
xchg
rcl
ret
cli
(bad)
ret
les
stc
or
and
xlat
push
fs
and
pop
mov
dec
add
add
xor
popf
mov
mov
sbb
pusha
sub
mov
fnstsw
mov
add
adc
clc
mov
aam
add
int3
cmp
mov
je
push
cmp
push
pop
inc
in
xchg
neg
lods
(bad)
adc
je
add
lods
or
hlt
push
or
mov
cwde
xchg
push
mov
fwait
cmp
pop
les
jl
fs
sbb
jg
movs
icebp
test
mov
lods
jo
add
adc
or
out
or
mov
hlt
mov
cld
and
les
clc
repnz
das
push
dec
dec
mov
cmp
fdiv
jg
in
sub
sub
sbb
add
push
jnp
ror
xor
mov
pop
xor
mov
push
ins
fsub
sbb
test
stc
lods
shl
(bad)
fmul
mov
cld
out
mov
aas
xor
mov
je
(bad)
cwde
add
inc
dec
shr
cmp
pop
lods
movs
push
or
repnz
push
aam
ds
pop
dec
aam
jb
pusha
(bad)
mov
cmp
in
ins
ret
mov
loop
xchg
scas
xchg
test
call
repnz
lods
sub
test
sbb
les
popf
sar
int3
in
and
add
repnz
cmp
shl
out
fwait
jb
into
cld
jnp
cmp
sbb
fild
clc
cld
test
push
cmp
repz
mov
int3
xchg
mov
bound
push
xchg
je
dec
and
push
sbb
inc
aad
and
int3
mov
in
int3
pop
sub
sub
enter
sub
mov
arpl
or
sbb
(bad)
fdiv
xchg
and
lods
js
outs
lods
add
sbb
mov
hlt
(bad)
out
add
xchg
mov
ds
stc
test
cmp
mov
data16
jl
mov
push
mov
js
in
or
repnz
mov
pop
push
mov
mov
dec
ds
dec
xor
jmp
in
mov
or
cld
cli
pop
mov
push
add
dec
sub
sbb
les
or
or
fsub
xchg
mov
rol
mov
cs
pushf
(bad)
hlt
xor
mov
out
inc
outs
pop
pop
mov
cld
mov
movs
or
nop
inc
in
mov
mov
pusha
or
clc
dec
js
add
sub
out
mov
pop
(bad)
nop
in
mov
cs
sub
jl
and
or
mov
dec
(bad)
hlt
mov
and
hlt
call
mov
loop
js
sbb
dec
mov
leave
call
fnsave
push
shr
or
cmp
mov
nop
pop
or
xchg
sub
mov
into
and
pop
dec
or
xchg
enter
loopne
or
pop
and
call
call
mov
sbb
sbb
js
leave
aam
jns
fs
fs
aad
jl
xor
cwde
adc
movs
jl
cmps
in
js
inc
xchg
or
sahf
dec
call
hlt
xor
shr
hlt
mov
push
pop
shr
inc
push
pop
xchg
imul
ins
ror
mov
push
mov
aam
repnz
cmp
int3
test
inc
mov
loopne
push
jmp
pop
inc
dec
cmp
adc
inc
clc
pusha
dec
inc
inc
mov
pop
test
mov
rcl
sbb
xchg
(bad)
push
mov
cli
test
fcomp
push
aam
leave
push
shl
pop
popa
push
pop
push
test
int3
mov
fs
imul
pop
pop
and
test
xor
test
adc
jnp
pop
xchg
test
xchg
aam
xchg
ret
fsub
sub
jp
sbb
xor
cld
(bad)
cmp
inc
int3
mov
aam
into
xor
push
or
cmc
rcr
jo
inc
or
push
fimul
int3
(bad)
in
lods
mov
jmp
pop
pop
sbb
sbb
movs
jo
int3
adc
cmp
test
inc
shr
addr16
inc
test
pop
cmp
dec
inc
(bad)
les
pop
mov
out
mov
cmp
jo
push
add
inc
sub
xor
clc
shr
xchg
in
dec
(bad)
mov
pop
jg
inc
test
sahf
call
in
(bad)
into
mov
cmp
lea
add
mov
je
sub
xchg
nop
mov
cmp
and
push
fscale
or
push
sub
mov
pusha
fistp
ret
sub
test
loopne
or
daa
and
xor
adc
and
xor
add
jne
ins
jl
jb
push
cwde
pusha
xor
pop
dec
add
or
xor
cmp
mov
test
cmp
retf
cmps
ror
mov
sbb
mov
xchg
cmp
in
push
fsub
sahf
mov
mov
xchg
lds
je
je
dec
sbb
js
push
fs
mov
jae
cld
fs
jl
adc
mov
sub
inc
inc
ins
push
push
xor
call
and
sbb
fs
mov
xor
fsubr
les
lods
das
push
adc
clc
movs
ret
enter
pop
and
pusha
cs
ror
dec
xor
cwde
call
int
jg
gs
add
into
inc
lahf
les
xchg
fsub
inc
push
out
add
loopne
push
mov
mov
ss
ins
inc
inc
dec
mov
mov
xor
ins
mov
mov
inc
pop
cmp
or
(bad)
jp
inc
mov
(bad)
xchg
sub
nop
fdiv
mov
les
jo
sbb
clc
xor
dec
call
mov
imul
js
les
add
mov
cmps
mov
mov
scas
push
lods
adc
out
push
adc
in
mov
xor
data16
call
and
or
adc
push
aad
sbb
and
mov
jg
mov
adc
xor
jl
cdq
mov
js
rcr
xor
push
stos
mov
jo
dec
sbb
inc
jno
xchg
fdiv
or
hlt
outs
cld
inc
inc
lds
inc
add
ficom
cdq
ret
mov
sbb
pop
aas
mov
int3
mov
in
adc
jae
or
mov
mov
iret
ins
nop
jle
mov
cmp
mov
in
mov
cmp
enter
and
adc
cmp
cwde
cmp
and
clc
clc
in
dec
dec
hlt
mov
dec
stos
xchg
mov
dec
cwde
int3
dec
data16
pop
cmp
cmp
xchg
or
xchg
movs
mov
mov
dec
or
(bad)
nop
loope
ss
in
xchg
cmp
mov
int3
push
in
and
fs
jns
add
jl
adc
pop
mul
push
fadd
xor
rol
mov
mov
sub
xor
xor
(bad)
lods
inc
les
mov
test
js
push
in
es
and
xchg
ror
xor
mov
xor
lock
fs
(bad)
xchg
cmps
sub
lock
inc
mov
sbb
cld
pusha
ret
push
push
test
sub
rol
sbb
rol
fcomp
mov
je
in
fs
cmc
xchg
sbb
popf
xor
xchg
int3
and
jmp
pop
js
xor
cdq
and
mov
test
ins
push
sbb
sbb
test
clc
scas
cmp
cmp
loope
mov
xchg
test
les
(bad)
pusha
int
in
out
xchg
mov
ins
mov
and
gs
rol
push
pusha
push
push
xor
fiadd
lea
test
enter
call
movs
xor
dec
out
and
jae
mov
jl
ret
std
in
enter
shl
xor
or
hlt
mov
test
xor
dec
and
sbb
(bad)
in
xchg
hlt
xchg
aam
or
push
push
jmp
jo
and
mov
mov
sbb
adc
popf
loopne
in
inc
dec
xor
sahf
or
fcomp
push
mov
sbb
lods
loopne
and
mov
or
and
add
addr16
shr
xor
je
fs
sbb
add
repnz
nop
stos
and
loopne
dec
mov
(bad)
xor
jecxz
dec
push
xor
push
dec
jl
in
adc
add
add
int3
aam
inc
push
inc
pop
mov
pop
mov
mov
mov
gs
xchg
lock
jns
dec
sub
mov
sub
and
cwde
in
push
aam
sub
xchg
xor
jmp
add
cmp
daa
cld
dec
mov
data16
or
or
scas
cmp
pop
jg
add
jp
inc
xchg
dec
stos
cld
mov
xor
cwde
imul
test
loopne
or
cmc
push
jl
adc
mov
xchg
adc
mov
fsubr
mov
cmp
sub
push
push
fstp
mov
xchg
mov
movs
aad
or
les
mov
and
movs
mov
pop
inc
jle
cli
fiadd
add
loop
out
arpl
clc
retf
fdivr
inc
in
fistp
mov
mov
jns
cmp
out
retf
sub
mov
shr
pop
inc
push
imul
jle
cmc
lods
outs
xor
dec
and
push
cld
pusha
mov
cmp
or
ret
loope
mov
cmp
mov
xor
push
cmps
in
jno
adc
jo
je
and
jo
js
sar
add
dec
(bad)
mov
mov
adc
in
cwde
div
popf
movs
(bad)
repz
nop
adc
sbb
pusha
call
mov
jecxz
mov
and
lock
push
push
ret
daa
mov
rcr
pusha
les
xor
and
ret
jle
xchg
mov
in
aam
xor
imul
or
sub
mov
inc
adc
push
nop
jge
aam
cmp
ror
xchg
lock
adc
mov
dec
mov
pop
div
int3
mov
and
mov
or
sub
je
push
sub
imul
lock
hlt
or
mov
inc
jb
and
out
jmp
push
dec
std
mov
add
ja
pop
add
and
(bad)
(bad)
mov
enter
sub
ins
or
push
xor
ror
stos
scas
push
lods
xchg
adc
pop
inc
mov
xlat
cmp
adc
xor
mov
sub
jmp
int
adc
loopne
add
or
add
in
pop
xchg
(bad)
and
cmp
repnz
jnp
jecxz
push
push
and
pop
pop
mov
daa
push
pop
sahf
xchg
mov
cwde
pushf
mov
ins
sbb
shr
or
not
add
push
ret
cmp
cwde
ins
pusha
sar
inc
xchg
fmul
adc
sub
pushf
inc
push
or
inc
dec
sbb
pusha
jp
inc
(bad)
lods
cmp
inc
adc
mov
pop
lock
inc
xchg
mov
xor
fucomp
in
les
loope
or
shl
cmp
test
aam
sub
dec
push
data16
je
int3
fidivr
sbb
mov
mov
idiv
sub
rol
ins
out
mov
and
test
shl
pusha
daa
shl
adc
mov
pop
and
lock
mov
mov
hlt
daa
push
test
imul
cmp
adc
jecxz
inc
in
xor
aam
mov
dec
jecxz
pcmpgtb
push
rol
jo
xchg
fcomp
nop
jp
mov
mov
cmp
je
mov
pushf
scas
adc
add
mov
fstp
add
jmp
xor
push
add
and
jno
ficom
int3
int3
enter
test
or
test
cwde
xchg
add
dec
inc
push
mov
scas
xchg
js
test
loopne
das
xor
pop
stc
hlt
xor
sub
sbb
dec
cmp
lock
xor
stos
add
ins
fwait
cld
popa
push
push
fcom
jl
je
or
push
cmps
lock
and
sub
add
int3
mov
pushf
and
sar
stos
add
mov
inc
loop
or
loopne
imul
test
in
lahf
fs
mov
adc
mov
mov
fcomp
test
loop
push
mov
call
mov
mov
and
dec
mov
popa
cld
imul
jp
addr16
(bad)
inc
and
enter
xor
mov
pop
pop
xor
mov
ins
inc
clc
sub
push
mov
daa
mov
dec
xchg
add
and
dec
xchg
pusha
mov
push
cmp
jl
test
loopne
lock
push
test
test
mov
lock
mov
jge
(bad)
xlat
mov
and
cmp
hlt
sub
adc
pop
int
adc
sbb
pusha
ins
jo
popf
push
or
push
pushf
mov
pop
cmp
sahf
fmul
xor
add
adc
rol
sub
popf
ss
pusha
sub
adc
cmp
lock
lock
mov
pop
dec
push
test
mov
and
inc
or
movs
push
cmp
mov
std
mov
jno
push
movs
push
jno
cwde
xchg
push
cmp
adc
mov
pop
es
lds
pusha
iret
fst
mov
cmc
pop
clc
jl
mov
mov
test
in
mov
add
lds
sbb
dec
mov
push
or
mov
fs
push
inc
inc
lods
inc
push
pop
jo
nop
hlt
movs
pop
lods
ins
icebp
clc
fcom
xchg
clc
cdq
push
lock
js
out
mov
add
adc
jae
sbb
jns
inc
das
or
outs
cld
push
xchg
in
aas
fs
add
pop
test
xchg
and
loopne
shr
push
fs
retf
sbb
xor
mov
(bad)
fdiv
mov
movs
cli
add
cli
mov
jl
loopne
popa
(bad)
les
pop
movs
fisttp
repz
xor
dec
test
jg
retf
mov
test
(bad)
cmps
outs
inc
cmp
inc
sub
aaa
rcl
cmp
shl
test
mov
sub
clc
(bad)
sti
xor
call
cmps
pop
dec
xor
out
jmp
aam
cld
mov
(bad)
pop
js
inc
pushf
sub
mov
pop
cmp
arpl
ds
(bad)
fnsave
and
xchg
aam
mov
les
or
loopne
enter
sti
push
ret
lds
inc
loopne
cld
inc
mov
jl
shl
mov
hlt
dec
mov
push
ins
adc
punpckhdq
pop
lods
dec
icebp
hlt
js
or
dec
mov
int3
call
int3
xor
adc
pop
and
jb
and
sub
rcl
enter
int3
and
cmp
inc
pushf
(bad)
mov
scas
gs
jle
les
clc
xor
hlt
mov
outs
pop
cld
mov
fst
lahf
cmp
jno
clc
xchg
and
push
jp
mov
xor
ficom
or
pusha
ins
mov
rcl
nop
mov
pop
sub
fild
mov
push
ins
rol
xor
push
or
mov
add
(bad)
sbb
mov
push
mov
sbb
(bad)
fdiv
adc
nop
inc
enter
in
xor
test
nop
or
jne
sbb
int3
jno
stc
test
cmp
and
xchg
outs
dec
xor
aam
jle
push
loopne
clc
xchg
ins
jns
add
fs
out
in
xor
(bad)
xor
(bad)
adc
movs
sbb
mov
leave
mov
enter
adc
cwde
int3
cmp
dec
push
mov
cmp
test
(bad)
and
loop
mov
sbb
loope
call
xchg
sbb
xor
jl
mov
pop
fcom
gs
aam
imul
sar
push
je
cld
xor
adc
sbb
sbb
push
hlt
and
(bad)
movs
pop
push
and
enter
std
adc
mov
int3
xor
add
dec
and
adc
int3
or
rol
test
add
or
test
(bad)
pushf
aaa
adc
(bad)
cmp
pop
add
and
push
cwde
test
mov
sti
rcl
in
pushf
loop
pop
fadd
ins
xor
adc
sbb
push
mov
or
ins
cld
xchg
cmps
je
sub
loopne
mov
add
add
and
push
sbb
push
mov
call
cmp
ins
mov
mov
cmp
cld
add
push
xchg
pushf
hlt
mov
mov
je
sahf
je
ss
div
pusha
push
lods
ins
mov
pop
push
pusha
adc
xchg
jo
add
out
pushf
inc
sub
push
clc
(bad)
stc
outs
lods
aam
and
ins
nop
mov
test
rcl
sti
sub
loop
mov
clc
pop
add
cld
in
add
bound
test
cmp
in
adc
lods
enter
pushf
mov
mov
mov
repnz
test
xor
sbb
cmp
mov
pop
cmp
xchg
push
sub
nop
adc
repnz
je
icebp
add
test
popa
xchg
pushf
popa
ds
xchg
or
sub
pop
xchg
test
jb
mov
les
mov
ss
cmc
sub
and
pop
adc
fmul
jae
or
xor
cmps
adc
cwde
loop
ins
mov
ins
adc
sbb
sub
sub
(bad)
pushf
jnp
nop
cmp
adc
lods
test
test
mov
add
cmp
sbb
movs
jl
clc
sbb
xor
push
add
cmps
mov
pop
inc
adc
sbb
sub
cmp
retf
xchg
mov
jl
inc
lock
mov
adc
dec
jmp
jnp
adc
mov
lods
mov
sub
iret
jl
inc
push
mov
int3
mov
pop
call
pusha
fs
leave
mov
ins
imul
hlt
dec
fcom
fsub
inc
xor
cmp
mov
rcl
jbe
ins
call
mov
pusha
xor
sbb
pusha
push
or
ins
mov
jnp
mov
cmc
mov
mov
inc
in
cli
shl
cwde
xor
cmp
ficomp
cld
mov
and
retf
je
ds
fs
mov
jp
ins
inc
push
adc
ret
or
pop
or
int3
or
popf
lock
mov
fcomi
nop
or
je
or
outs
lock
xchg
lock
push
hlt
jecxz
call
(bad)
mov
and
inc
(bad)
icebp
jge
add
cmp
adc
out
sub
lea
and
push
push
and
lods
cli
and
outs
enter
fwait
inc
and
dec
les
push
add
push
call
xor
repnz
mov
test
daa
ficom
push
push
psrad
sub
xchg
jbe
clc
push
add
and
pop
pop
les
jns
mov
pushf
jo
push
and
into
pusha
mov
fild
test
int3
aam
or
or
dec
or
and
mov
les
mov
xchg
bound
inc
add
sub
hlt
add
test
push
cmp
popf
loopne
test
icebp
xchg
cmp
add
adc
jo
loopne
mov
cmp
jne
mov
js
(bad)
and
ins
sbb
hlt
pop
scas
les
push
mov
cmps
mov
cmp
lods
inc
xor
add
aam
nop
cld
sbb
jl
(bad)
fcomp
mov
int3
clc
xchg
sar
retf
add
sar
loope
jge
sar
add
popf
lods
movs
jecxz
clc
pop
xor
push
nop
leave
test
xchg
fsub
adc
pushf
pushf
xchg
xchg
loopne
and
pushf
pop
and
jg
dec
lock
xchg
retf
and
dec
hlt
hlt
gs
in
dec
test
push
push
push
clc
js
inc
lahf
jo
fbld
push
xor
clc
push
push
ret
sub
push
pop
adc
add
enter
in
xchg
sbb
loopne
sbb
mov
inc
or
(bad)
sbb
std
jl
mov
ins
dec
lods
adc
dec
xor
cmp
inc
sub
cmp
stc
call
adc
or
sbb
lods
not
ins
add
mov
test
cmp
fs
dec
add
mov
or
rol
mov
scas
mov
fs
cld
sbb
and
push
and
sub
xchg
mov
push
mov
pop
and
test
fs
fimul
jl
push
inc
sub
pusha
fcomp
in
retf
add
mov
and
jmp
pusha
mov
inc
mov
cmp
mov
enter
sub
inc
mov
dec
popf
rol
xor
xor
cmc
ss
fs
mov
add
inc
dec
cld
int3
shr
cmp
sub
lods
pusha
xchg
xor
mov
pop
int
jae
ins
clc
mov
xor
in
movs
mov
cmp
lock
dec
hlt
idiv
xor
cmp
dec
and
sub
sub
xchg
mov
stos
mov
jl
jne
push
xchg
pop
pushf
mov
mov
sbb
sub
js
inc
sbb
stos
xor
sbb
int3
cmp
mov
jae
mov
xor
sar
xor
sahf
xor
jl
imul
jl
les
shl
daa
pop
nop
mov
dec
mov
and
pop
jo
clc
push
rcl
in
jl
js
sbb
sti
push
ret
int3
nop
dec
or
cmc
fs
push
jl
and
test
cmp
or
adc
pushf
sbb
(bad)
add
cmp
mov
lock
mov
inc
loope
movs
push
cwde
or
and
jne
inc
shr
xor
jns
sub
pushf
mov
(bad)
cdq
pop
mov
lods
cmps
dec
pushf
sbb
mov
out
push
add
jbe
call
cmp
mov
out
mov
out
bound
mov
pop
shl
cld
sub
lea
inc
popf
push
pusha
test
outs
and
enter
fild
sub
in
(bad)
cmp
fdiv
aam
push
jl
bound
add
call
or
inc
fld
shr
hlt
push
int
test
sbb
ss
loopne
or
and
fadd
pop
or
and
fs
sub
addr16
in
mov
lock
aam
hlt
dec
adc
jne
cwde
out
lods
push
into
std
stos
in
sub
jl
sbb
dec
dec
stc
xor
ds
movs
aas
aam
sahf
adc
scas
dec
cmp
mov
scas
lock
xchg
cld
mov
sbb
int
je
mov
leave
mov
sbb
rcl
cwde
fs
sbb
test
not
add
fsubr
enter
or
or
(bad)
mov
in
out
daa
inc
movs
sbb
nop
mov
cs
cmc
or
jae
dec
rcl
les
clc
xchg
nop
cmp
popf
data16
test
inc
mov
sbb
aam
mov
stos
js
mov
not
xor
(bad)
pop
ret
pop
ins
nop
adc
lods
mov
mov
pop
in
scas
test
push
xor
inc
(bad)
js
movs
sub
fsubr
pushf
cmp
xchg
(bad)
pushf
test
pop
and
hlt
std
leave
pushf
inc
cmp
loope
or
sub
lea
xor
pop
call
jg
mov
call
jbe
sbb
sbb
and
loopne
adc
cmp
xlat
fdiv
ins
in
movs
adc
jmp
vpaddq
push
add
xchg
stos
xchg
mov
aad
xchg
dec
pop
mov
lock
clc
aad
or
inc
jne
pop
mov
adc
mov
cmp
pusha
jmp
call
pushf
dec
les
sti
inc
inc
push
pop
and
mov
cmp
add
cli
inc
lahf
jb
icebp
test
push
in
dec
push
mov
pusha
loopne
push
fdivr
cmp
adc
mov
jbe
out
dec
mov
sbb
(bad)
enter
adc
or
inc
and
mov
enter
xor
pushf
loope
test
pusha
test
ror
sbb
es
call
leave
das
push
pop
xchg
lock
pop
inc
rcl
movs
add
dec
in
cwde
ins
test
adc
mov
sbb
fwait
enter
not
(bad)
call
es
loopne
cmp
mov
xor
arpl
sub
mov
xor
mov
jo
nop
xlat
cmps
sahf
test
sbb
mov
les
jl
sbb
xchg
pop
push
mov
dec
loope
les
and
cmps
xchg
jno
stos
inc
add
cmp
adc
or
push
sar
jo
xchg
inc
stos
dec
lods
loopne
shl
xchg
out
xchg
aam
jl
pushf
rcr
add
call
adc
into
fwait
jo
push
sbb
mov
sub
and
mov
mov
mov
dec
xor
jecxz
pusha
adc
and
pop
fisubr
cmp
fdiv
or
inc
jae
mov
es
jno
mov
jp
js
adc
fdivp
mov
scas
mov
mov
pop
hlt
iret
mov
clc
aam
mov
adc
add
inc
jl
cli
lods
inc
xor
sub
cdq
aam
into
sub
cmc
ins
clc
push
push
pop
lea
iret
fist
sahf
sub
inc
mov
movs
cdq
cmp
pop
sbb
(bad)
lods
call
mov
and
jbe
xor
(bad)
cmp
pop
pop
inc
call
ins
in
sub
pop
push
nop
xchg
lock
stos
fs
scas
adc
mov
mov
lock
sub
sbb
idiv
or
in
cmps
sub
fdivr
call
xchg
xchg
xor
push
inc
fsubr
and
mov
sbb
sbb
inc
fisubr
xchg
cld
retf
in
cs
push
retf
clc
adc
mov
pop
in
scas
in
(bad)
adc
sub
pop
(bad)
mov
xchg
or
cmp
je
retw
jecxz
push
cmc
fcom
adc
jl
aas
push
and
push
jb
leave
jmp
call
aad
cmp
xor
scas
(bad)
and
cmp
dec
mov
sbb
shr
dec
mov
fcom
fmul
add
mov
loop
adc
call
ins
xor
adc
mov
push
mov
pop
dec
sub
clc
test
xor
enter
sbb
sbb
or
cmp
lds
or
les
mov
dec
pusha
inc
loop
or
add
in
or
sbb
int
hlt
in
jp
xor
clc
push
xchg
lods
or
nop
inc
pop
jo
add
lods
lock
sbb
hlt
and
sub
inc
xor
xchg
cmp
push
es
sub
xor
and
call
repz
cld
mov
sti
add
test
nop
das
sbb
loop
ret
(bad)
fdiv
mov
cmp
enterw
mov
jmp
xchg
cmp
rcr
mov
int
dec
pop
cld
movs
ror
xor
inc
dec
cld
sbb
dec
sub
mov
mov
fdiv
mov
cmp
rol
xchg
test
js
rcr
mov
pop
loop
xor
mov
add
or
mov
xchg
mov
jl
xor
mov
lock
std
xor
fadd
pusha
mov
and
movs
sbb
pop
cwde
mov
lea
pop
jno
jbe
add
lods
sti
push
loope
push
push
ror
sbb
adc
(bad)
or
or
int3
jae
icebp
sbb
test
ins
jnp
shr
je
pushf
loop
jo
call
in
fcomp
popa
sbb
push
dec
sub
hlt
retf
js
adc
inc
mov
add
ins
jns
adc
(bad)
enter
mov
lods
or
jne
ss
cld
in
pop
adc
mov
out
push
inc
mov
sbb
inc
hlt
cs
xchg
pusha
or
jmp
sbb
sbb
paddusb
sub
ins
mov
fsubr
push
lods
mov
or
call
and
sub
inc
ror
and
xor
pop
sbb
adc
mov
test
fisttp
clc
cmp
dec
nop
xchg
sbb
adc
cmp
jo
rcl
mov
je
sbb
and
mov
je
ins
cdq
xor
sbb
fisub
jl
and
cwde
aam
int3
stos
xor
js
test
dec
mov
pop
in
cmp
mov
jl
and
fcomp
pusha
cmp
xor
and
and
int
adc
inc
push
inc
dec
add
or
jo
clc
repnz
call
xchg
push
int3
dec
rcr
push
push
in
test
jo
or
enter
or
xchg
sub
enter
jmp
mov
inc
test
add
call
movs
jecxz
jl
cmp
mov
es
mov
jl
(bad)
fld
in
push
in
jl
cld
xchg
icebp
mov
cwde
test
xor
shr
fs
lods
leave
xor
call
add
add
push
xor
clc
push
test
mov
jne
sbb
push
mov
jmp
je
add
adc
fisub
push
idiv
and
fs
mov
fsub
bound
dec
not
jae
loopne
cwde
mov
cld
mov
cmp
loopne
add
inc
cmp
and
inc
popf
movs
loopne
mov
in
jge
and
pushf
fsubr
sahf
test
in
cmp
movs
test
aam
pop
je
int3
or
push
in
sub
nop
or
je
pop
sub
jae
cli
cmc
or
sub
xchg
call
dec
mov
movs
push
add
test
int3
pop
mov
(bad)
mov
out
bound
mov
cs
adc
push
fwait
call
and
aam
sbb
movs
lock
shl
lods
mov
sub
pop
call
aam
loope
in
or
retf
int3
pop
xchg
jns
std
and
aam
cli
and
les
sbb
inc
sub
cmc
mov
mov
xor
inc
and
popf
push
cmp
add
sbb
movs
repz
or
or
imul
sub
mov
cwde
push
xchg
std
xor
cmps
rcl
inc
lods
lods
test
hlt
mov
mov
nop
sbb
mov
sar
pop
and
lds
jnp
outs
sub
and
test
call
mov
jmp
push
jo
mov
je
and
fcom
adc
dec
cmp
cmp
in
sar
sub
or
mov
xor
or
repz
inc
inc
in
loopne
lea
and
jb
xor
ret
xor
inc
pop
mov
pop
addr16
shl
and
jge
fs
xor
in
xchg
xchg
cmc
and
jb
mov
sbb
fistp
inc
cmp
out
sub
jl
mov
and
cld
inc
and
ins
popf
mov
mov
cmp
test
dec
hlt
mov
mov
push
cmp
hlt
push
push
mov
xor
mov
loope
or
je
mov
add
(bad)
enter
clc
mov
push
mov
ins
push
(bad)
mov
les
mov
mov
cld
sub
xor
mov
or
push
nop
push
mov
ss
jae
fsubr
xchg
loop
leave
adc
sbb
jo
mov
pop
pushf
pop
in
fwait
jl
lock
mov
adc
popa
fsub
mov
xchg
fs
out
or
je
dec
hlt
xor
nop
mov
retf
test
outs
xor
sub
pop
imul
sahf
lods
enter
pop
lods
mov
sbb
rol
cmp
rol
(bad)
push
xor
dec
mov
sbb
(bad)
and
in
xchg
in
popa
mov
cmp
icebp
pop
push
mov
xor
mov
sbb
(bad)
push
adc
pushf
mov
push
or
jb
sbb
(bad)
mov
pop
int
xchg
dec
loopne
push
pushf
data16
xor
sbb
and
movs
add
in
clc
push
pusha
test
sbb
and
mov
test
mov
and
rol
call
int3
pop
jl
sbb
in
jl
or
pushf
xor
or
mov
mov
add
into
icebp
aad
pop
mov
shl
jo
popf
jp
ja
mov
xor
popa
pop
and
mov
cmp
or
call
adc
mov
sbb
loopne
enter
je
xor
sbb
adc
hlt
cmp
or
int3
mov
ins
pop
push
mov
ss
shl
push
jb
(bad)
mov
mov
arpl
cld
nop
ret
es
jmp
inc
test
push
loopne
sbb
sub
xor
push
and
dec
jl
mov
sbb
mov
and
xchg
lock
inc
push
push
call
jns
xchg
pop
shl
mov
out
or
adc
sbb
fs
je
push
cdq
movs
and
inc
enter
inc
js
jae
(bad)
arpl
rcr
cmp
popf
in
fwait
mov
xor
mov
jl
and
sbb
or
or
in
cmp
and
xchg
jbe
push
adc
jnp
pop
adc
stos
adc
test
int
xchg
sbb
fdivr
(bad)
lock
cmc
adc
in
mov
dec
je
xor
test
aaa
cmp
ror
mov
jl
jle
ins
inc
aad
cld
cmp
push
in
fild
popf
xchg
add
pushf
cld
cdq
dec
mov
inc
hlt
clc
nop
loop
sub
aad
mov
xor
sbb
jns
loopne
inc
and
int3
retf
dec
dec
dec
test
adc
out
in
fistp
jecxz
jns
sar
stos
nop
retf
mov
push
jnp
cmp
test
dec
loope
mov
aaa
dec
lods
add
lods
test
adc
cmp
dec
adc
mov
mov
and
dec
cmp
pop
and
jo
mov
pop
sbb
rcr
in
jmp
cmp
cwde
jg
cmp
xchg
jb
mov
sbb
sbb
mov
adc
or
push
mov
cmp
push
mov
fsub
sub
out
mov
call
fs
pop
xchg
pusha
add
push
xor
jp
js
and
and
mov
adc
jle
jb
mov
je
cld
scas
mov
clc
clc
sub
in
xchg
mov
xchg
sub
mov
pushf
mov
or
test
cmp
mov
hlt
cmp
pop
repnz
mov
mov
gs
or
pushf
mov
movs
mov
inc
sahf
les
mov
jmp
xor
pusha
pop
call
pop
les
push
push
pop
cwde
mov
pop
dec
test
jns
fs
ins
fisubr
cwde
enter
call
in
enter
sbb
fs
jl
inc
sub
inc
rcr
jbe
cmp
mov
push
adc
push
test
movs
and
adc
jb
or
mov
adc
in
lods
sbb
frstor
jmp
push
mov
enter
pop
ins
and
adc
mov
xor
dec
mov
and
inc
rol
dec
cld
cmp
inc
and
inc
sbb
inc
cld
and
jbe
xor
gs
out
cmp
mov
sub
loop
mov
and
retf
adc
(bad)
scas
shr
nop
pusha
js
push
clc
ins
mov
push
xor
call
pop
sub
enter
sbb
or
fcom
jl
and
je
mov
ins
aam
mov
cmp
les
lods
inc
mov
jge
pop
rol
xchg
inc
sti
mov
sub
fsub
push
aad
in
add
cmp
dec
jnp
enter
sub
adc
ins
cmp
in
ficomp
cld
fs
xor
mov
loopne
mov
in
int
icebp
and
sub
add
add
inc
push
xchg
pusha
ins
and
lock
mov
int3
hlt
mov
push
test
nop
ror
push
loope
test
nop
out
push
mov
dec
je
cmp
push
ja
js
inc
and
and
int3
xor
imul
or
gs
or
(bad)
inc
xchg
dec
mov
mov
in
cmps
push
mov
or
push
or
retf
pushf
clc
lock
ds
ss
test
pop
sub
sbb
aad
fisub
sahf
fadd
dec
movs
pusha
hlt
and
sbb
ror
sub
in
or
in
adc
jb
stc
mov
pop
iret
pushf
adc
mov
lods
lods
and
add
test
mov
out
js
pusha
test
sbb
shl
inc
cmp
dec
inc
jmp
out
mov
es
cs
sub
push
xchg
les
inc
lock
cmp
es
adc
pop
and
pop
dec
loope
add
mov
int
mov
adc
cmp
(bad)
push
cmp
and
or
mov
push
outs
cmp
dec
mov
fdiv
pusha
lahf
mov
ja
mov
pop
add
int3
(bad)
in
add
hlt
sub
adc
sub
xchg
inc
and
or
xor
or
pop
lock
sbb
pop
adc
fisub
cwde
dec
xchg
lods
or
fmul
movs
repnz
sbb
in
push
push
mov
or
xor
sub
or
clc
and
push
pop
dec
and
mov
or
shr
lods
(bad)
and
mov
shl
add
ins
or
rol
mov
lods
loopne
(bad)
dec
leave
outs
push
into
sahf
mov
pop
retf
push
mov
je
cwde
fcmovnbe
loopne
push
adc
rcl
ror
ins
(bad)
xchg
fisubr
push
or
mov
cli
sbb
and
(bad)
sub
mov
or
sbb
stos
sub
nop
outs
sbb
arpl
mov
movs
sbb
inc
cli
inc
fs
mov
mov
mov
mov
push
test
mov
out
sbb
add
cld
fist
inc
xchg
retf
fist
dec
shr
add
imul
mov
scas
jns
inc
jns
movs
aad
dec
ss
pop
les
pushf
sbb
adc
popf
inc
add
pushf
fs
inc
adc
pop
rcl
retf
call
dec
sub
out
dec
add
test
js
rcr
xor
sbb
and
add
js
call
xor
sub
aam
mov
int
int
xchg
outs
jl
xchg
dec
sbb
sub
in
dec
into
xor
push
test
and
mov
or
pop
(bad)
and
clc
mov
in
or
outs
cmp
xchg
inc
cmp
fs
pop
pusha
inc
pusha
ins
addr16
paddusb
jl
enter
adc
fcom
je
push
test
mov
rep
xor
mov
out
mov
sub
(bad)
xchg
lds
enter
cwde
aad
pop
imul
ins
aad
mov
inc
inc
xor
movs
mov
lods
xor
push
js
dec
jmp
jo
mov
pop
pop
loopne
sbb
cwde
sub
hlt
(bad)
daa
cmp
mov
push
add
mov
sbb
push
movs
fcomi
and
arpl
inc
enter
inc
push
pusha
rcr
adc
cmps
mov
in
dec
dec
xchg
and
inc
mov
sbb
call
fsubr
cmps
dec
xor
jmp
fsubr
loop
stos
dec
adc
ds
lods
dec
mov
retf
jl
ret
retf
mov
cmc
push
rcl
adc
cmps
rcl
push
mov
dec
(bad)
push
inc
inc
add
je
test
add
dec
mov
cmps
add
ds
aam
xor
cmp
sti
pushf
in
dec
push
jl
in
jmp
adc
mov
into
nop
js
cmp
or
nop
ja
shr
cld
pusha
inc
inc
ins
fcomp
mov
test
movs
test
sbb
leave
mov
mov
(bad)
jne
push
sub
shr
mov
movs
pop
adc
mov
fmul
pushf
or
inc
mov
lds
pop
stos
ds
hlt
inc
jp
cdq
adc
lock
xor
mov
clc
or
xor
xchg
xor
xor
nop
mov
call
ffreep
jge
fs
or
into
mov
cmp
adc
xchg
ds
sbb
pop
lock
jl
inc
inc
repz
add
lods
xor
loopne
enter
retf
aas
push
and
int3
xchg
cmps
and
inc
lea
add
xchg
ja
mov
push
dec
cwde
dec
movs
adc
cmp
movs
fsub
sub
and
scas
enter
mov
inc
shr
retf
mov
mov
adc
pop
or
lea
push
lock
leave
scas
hlt
iret
fs
sbb
cmp
dec
clc
dec
mov
mov
cmc
sub
and
and
xchg
js
retf
push
mov
loopne
jge
mov
cmp
inc
pushw
xor
mov
pop
pusha
sahf
pusha
test
(bad)
sbb
rcr
lods
cli
jmp
lock
push
sub
fisubr
or
sub
shl
mov
sahf
jno
pusha
jl
je
inc
fcomp
and
sub
inc
mov
adc
ss
loopne
hlt
cld
mov
or
das
adc
ds
daa
cmp
hlt
ins
inc
sub
ins
dec
hlt
push
ins
jle
in
test
mov
call
retf
push
hlt
out
enter
lods
xchg
or
fcomp
or
mov
mov
rcr
mov
mov
cmp
clc
cld
xor
nop
and
cmp
je
push
mov
test
pop
ja
cwde
sub
js
xor
and
bound
out
pop
or
or
test
sub
inc
xchg
test
xor
in
les
int
and
mov
pusha
sbb
add
lods
jmp
inc
movs
rcl
les
pop
or
pop
sub
lock
scas
xor
inc
test
xor
jl
adc
(bad)
sub
sub
xchg
movs
aad
pop
cmps
inc
sbb
(bad)
js
psubsb
dec
push
push
bound
dec
xor
dec
shr
mov
(bad)
(bad)
mov
dec
lahf
mov
and
outs
pop
retf
push
movs
hlt
shl
call
sahf
xlat
mov
int3
adc
test
pop
sub
push
aam
pop
or
rol
stos
or
call
and
fdiv
in
pop
add
shr
pusha
pop
mov
push
sub
ja
sbb
test
xor
mul
sbb
mov
test
pop
jge
fs
(bad)
ins
mov
test
jnp
xchg
enter
fsubr
retf
clc
in
lods
aam
pop
out
out
mov
adc
add
sub
adc
cld
leave
je
and
mov
fcom
bound
add
or
test
mov
sub
pop
inc
or
leave
test
rcr
loopne
xchg
je
dec
lea
ror
sub
and
pop
clc
call
sub
nop
jp
aam
dec
or
(bad)
mov
sti
xchg
lods
arpl
inc
sub
stos
mov
imul
inc
or
cmp
sbb
push
pop
das
int3
adc
push
cwde
and
dec
inc
mov
dec
addr16
in
jl
add
push
clc
sbb
pusha
cdq
mov
mov
and
aam
push
in
cmps
xor
in
cwde
jg
push
stc
add
mov
mov
adc
and
inc
popa
cld
cmp
inc
cmp
cwde
sub
cmp
mov
pop
mov
pop
dec
lds
xor
cmp
into
sar
cmp
sbb
mov
sub
aam
pushf
sar
push
aam
push
dec
jmp
sub
pusha
mov
pop
jo
lock
adc
mov
adc
cmp
mov
jl
in
pushf
fwait
xor
fsub
ins
aaa
sbb
fimul
sbb
sbb
dec
or
test
sbb
xchg
pop
cwde
inc
xor
mov
addr16
sub
and
test
pusha
sub
int3
and
mov
sbb
mov
sbb
jl
cwde
hlt
xor
fcom
sar
mov
lods
xchg
inc
test
pusha
in
mov
scas
or
pop
shr
add
cmp
mov
mov
test
inc
lods
imul
push
or
mov
int3
test
or
hlt
jl
das
test
jns
mov
nop
add
pop
cwde
push
pusha
push
dec
dec
cmp
fs
or
ret
in
daa
repz
cmp
mov
movs
xchg
movs
sbb
sbb
ret
mov
inc
clc
push
fs
pushf
sub
jb
clc
cmp
mov
cmp
sub
mov
jg
jbe
xchg
neg
dec
bound
xchg
into
sbb
int
and
pushf
mov
lods
nop
and
push
xchg
pusha
ds
movs
cmp
pop
in
inc
stos
in
cmp
add
pop
idiv
xchg
inc
aad
movs
test
(bad)
and
mov
and
ins
push
add
je
pop
aaa
or
ss
test
lock
dec
mov
ins
test
sub
enter
or
call
inc
mov
push
cmps
(bad)
inc
push
jl
push
pushf
retf
rol
sub
clc
ds
sbb
sbb
or
and
jo
xchg
mov
push
cwde
adc
das
mov
jecxz
add
nop
sbb
add
ins
out
adc
pop
into
(bad)
xor
cmp
mov
mov
xchg
jne
ins
test
jo
cwde
jo
dec
dec
mov
hlt
cwde
xor
push
jmp
clc
sbb
aad
push
pop
and
mov
loop
push
or
xor
sub
mov
or
hlt
adc
dec
inc
movs
dec
test
int
mov
int3
in
or
mov
aam
daa
js
rcr
clc
sbb
hlt
dec
mov
arpl
outs
dec
xor
js
push
mov
xor
cmp
test
jo
call
lods
xchg
aam
sub
sbb
in
stos
mov
and
adc
adc
aaa
add
hlt
ins
mov
js
enter
pop
ins
fstp
mov
jl
into
and
mov
mov
test
push
sub
stc
fs
dec
sahf
jne
sbb
or
retf
inc
pop
dec
cmp
pusha
addr16
mov
outs
sub
pop
pop
nop
and
fs
xor
cmp
mov
pusha
fdivr
pop
sub
inc
xor
loopne
mov
xchg
xor
or
fmul
xor
or
(bad)
mov
fdiv
xchg
not
dec
adc
xchg
int
xor
pushf
aam
mov
cld
movs
xchg
cmp
sub
xor
cwde
retf
dec
mov
stos
dec
mov
ins
jl
mov
mov
push
lock
adc
inc
mov
mov
xchg
mov
in
int3
dec
fs
movs
sub
push
pushf
popa
cmp
cwde
in
and
inc
stos
sub
movs
add
mov
in
cld
stos
and
fwait
jnp
inc
sbb
out
fcom
hlt
jecxz
mov
push
loopne
pop
mov
sbb
dec
pop
popa
add
sub
xchg
mov
pop
sbb
loopne
jne
mov
mov
inc
push
jl
sub
or
clc
or
inc
add
mov
sub
ins
mov
(bad)
(bad)
sbb
and
clc
or
dec
test
ins
aam
push
mov
mov
adc
jmp
jne
jns
fs
fsub
(bad)
push
sub
adc
sbb
les
sti
jge
aaa
(bad)
imul
push
mov
js
fcomp
je
fstp
sbb
fisub
clc
cmp
mov
loopne
mov
add
loopne
and
sub
shl
call
clc
rcl
lods
cmp
add
popa
mov
test
dec
stos
nop
shr
or
(bad)
mov
movs
aad
pop
bound
and
js
inc
cmp
or
mov
stc
jp
sub
xor
add
test
push
dec
dec
dec
push
adc
sbb
mov
in
dec
ins
test
sub
fmul
pop
stos
and
xchg
loopne
rcl
pusha
ds
dec
adc
mov
and
add
cmc
fs
test
adc
int3
cs
(bad)
sbb
loopne
int3
mov
in
mov
shr
or
(bad)
cmp
sahf
mov
push
jmp
adc
push
or
jno
mov
jge
cmp
rcr
jae
nop
add
mov
in
leave
push
xchg
adc
jmp
call
cld
icebp
ins
dec
jo
push
mov
inc
stos
int3
cmp
mov
xor
movs
mov
lods
aas
push
push
pop
dec
pop
movs
in
adc
ret
or
xchg
xchg
mov
mov
call
sub
dec
in
jg
or
in
cmp
in
sbb
cmp
xchg
cmp
adc
or
in
cmp
ret
int
mov
repz
or
fs
(bad)
aam
aas
mov
je
adc
pop
mov
mov
fs
dec
fsubrp
add
ins
ss
mov
mov
stc
jl
mov
mov
stc
adc
hlt
je
fsubr
shr
(bad)
int3
mov
js
ins
popf
fdivr
jge
in
int3
push
test
lea
shl
fs
cwde
lds
mov
sbb
xor
sbb
fwait
xor
cmp
ret
xor
sub
push
arpl
inc
inc
out
test
add
imul
cmc
mov
sub
inc
hlt
jb
adc
loop
(bad)
cmp
mov
loopne
lea
and
in
or
xor
jo
push
and
sub
(bad)
and
or
jo
clc
repnz
sbb
jns
pusha
mov
aas
je
ins
in
mov
cld
xor
inc
aam
test
dec
push
sub
dec
cs
fstp
cmps
and
inc
shr
in
or
add
jmp
jo
inc
lods
sub
jmp
jmp
cld
mov
xor
lods
mov
pop
pop
mov
movs
lods
xor
add
push
add
test
mov
sbb
xor
int3
sbb
retf
inc
add
cld
pop
inc
(bad)
push
in
pop
pop
pop
sub
sub
sbb
mov
imul
sbb
mov
or
push
jmp
cwde
scas
sahf
adc
mov
add
fcomp
in
cli
mov
test
jl
and
or
adc
je
jl
pop
xchg
loopne
pop
mov
outs
cmp
ins
(bad)
repz
adc
inc
je
int3
push
je
fadd
movs
xor
jg
(bad)
mov
je
sbb
xchg
jo
imul
cmp
pop
mov
sbb
sub
cmp
movs
pop
and
in
test
dec
inc
mov
movs
adc
scas
mov
mov
(bad)
add
mov
sbb
dec
inc
push
cmp
and
mov
mov
inc
stos
in
and
aam
mov
mov
cmp
adc
pusha
cmp
test
cmp
xor
fcom
std
xchg
and
sub
movs
and
hlt
fcom
cmp
add
ins
cwde
hlt
loopne
jbe
mov
clc
dec
push
dec
mov
push
call
lock
xchg
push
in
pushf
push
rol
mov
cmc
cwde
fimul
repnz
out
or
xchg
sub
sub
fist
adc
cwde
xchg
pop
jl
cld
mov
sbb
add
adc
hlt
pop
fsub
test
xchg
inc
mov
or
mov
aas
lock
jae
mov
loopne
ftst
(bad)
mov
push
sbb
add
mov
mov
(bad)
adc
mov
pop
jl
xor
pusha
pop
test
mov
pop
add
cwde
xor
(bad)
mov
jmp
mov
push
add
out
mov
xchg
es
push
ja
push
clc
(bad)
mov
sbb
sub
ret
dec
sbb
rcr
mov
jns
(bad)
shl
loopne
call
mov
dec
adc
pop
xor
ss
sub
xor
cmp
cs
rcr
sbb
xor
xor
int3
(bad)
xor
call
scas
rcl
js
lods
popf
mov
xchg
imul
pushf
repnz
pop
shr
add
ja
jecxz
adc
adc
nop
push
fdivp
rcr
mov
push
enter
push
js
fadd
les
js
dec
clc
sbb
or
sub
xor
call
popf
mov
rol
sub
test
xchg
in
(bad)
xchg
mov
mov
data16
call
or
adc
sub
cld
xchg
or
inc
jne
mov
test
call
inc
sub
fs
in
cmp
mov
popa
and
add
nop
les
xchg
lea
or
sbb
in
cli
clc
scas
enter
rcr
sbb
jl
aam
inc
sbb
pand
mov
test
retf
enter
shr
xor
shr
and
js
sbb
xchg
cmp
add
push
xchg
mov
ret
je
cmp
clc
nop
fsub
add
(bad)
fadd
dec
hlt
nop
retf
pop
(bad)
inc
daa
or
mov
jo
jns
sbb
mov
sub
adc
pop
into
in
adc
mov
push
adc
int3
hlt
xchg
cmp
shl
aam
adc
mov
add
(bad)
xlat
cmp
xor
daa
(bad)
or
add
rcl
and
pop
xor
aaa
mov
mov
scas
adc
hlt
js
sar
and
pop
les
out
mov
fcom
sbb
test
cli
(bad)
ror
jo
xor
mov
or
mov
je
int3
lods
push
fdiv
dec
lock
xchg
sbb
push
into
cwde
push
loopne
(bad)
in
dec
pop
fs
sub
xor
mov
mov
inc
fldlg2
cmp
or
jmp
mov
xor
push
pop
dec
js
mov
nop
inc
bound
xchg
test
out
inc
je
aaa
cld
sub
retf
jae
and
mov
pop
mov
aam
pop
and
sbb
mov
(bad)
inc
mov
add
fs
fs
add
push
and
push
xchg
popf
jl
push
xchg
inc
shl
popa
pop
test
and
aad
cmp
inc
push
outs
enter
test
push
inc
xchg
dec
or
or
call
mov
push
add
sub
stc
and
sbb
cdq
fwait
cmp
inc
sub
fmul
fidivr
xchg
xchg
jae
pop
xor
jbe
nop
js
push
mov
lds
int3
mov
test
or
adc
test
fs
jle
xor
mov
cmp
or
jbe
ficomp
shr
mov
loopne
xor
push
jl
jmp
and
xchg
imul
xchg
xchg
pusha
pop
call
sbb
jb
fs
shl
mov
test
dec
push
xchg
scas
cwde
das
nop
clc
sub
ins
in
lods
adc
cli
aam
scas
mov
and
call
movs
(bad)
push
leave
dec
nop
inc
mov
and
dec
push
inc
or
rcl
add
jl
pushf
loope
mov
or
mov
mov
lods
shl
enter
retf
sub
call
xchg
inc
fs
pop
js
or
push
push
movs
xor
mov
and
xchg
clc
jmp
movs
xor
add
or
dec
or
je
dec
sub
jo
js
xor
adc
cdq
(bad)
mov
test
js
nop
stc
add
add
jne
pop
mov
xchg
jle
inc
sbb
scas
pop
xor
cmp
mov
loop
cmps
fcomp
es
test
xchg
call
adc
mov
pop
cmp
call
jge
xor
push
push
cwde
push
out
push
call
push
aam
mov
cmp
jo
sbb
cmp
(bad)
clc
in
retf
int3
xchg
movs
cmp
test
mov
xchg
or
lea
imul
aam
in
std
fs
jbe
xchg
rcr
sbb
and
fiadd
cld
sub
mov
imul
enter
rol
sub
sahf
mov
pop
lods
mov
test
fcomp
xor
loop
jecxz
or
popa
lock
add
ret
je
loopne
and
cmp
jl
push
add
mov
adc
mov
sbb
into
shr
shl
add
sbb
adc
test
inc
inc
xor
in
adc
pop
jp
xor
fdiv
xchg
fdiv
lahf
or
or
repnz
adc
mov
cmps
ror
adc
add
scas
mov
js
sub
sub
cmp
sahf
test
je
mov
adc
sbb
xchg
xor
add
or
test
(bad)
adc
pop
test
adc
dec
out
sar
loop
call
xor
xlat
xchg
in
pop
pop
outs
and
cmp
inc
cli
into
scas
nop
jb
fs
rol
fidiv
add
or
xchg
xchg
lods
bound
or
pop
fidiv
mov
ficom
imul
bswap
add
sar
push
mov
cmp
jl
in
cmp
cld
adc
pushf
mov
(bad)
neg
cwde
rcl
je
aam
mov
inc
xor
jo
jp
sbb
loop
shl
sbb
sbb
add
mov
sbb
adc
nop
rol
in
jmp
cmp
jge
call
and
add
in
retf
call
je
mov
push
push
cmp
xchg
out
sbb
aad
mov
sbb
icebp
fbstp
or
mov
loope
(bad)
pop
dec
and
test
cmp
cwde
xchg
(bad)
mov
cmp
bound
inc
dec
pushf
mov
fmul
xor
adc
fdiv
cli
mov
mov
push
sbb
rcl
adc
mov
adc
and
add
mov
push
ds
sti
loopne
clc
inc
xchg
js
sub
in
or
xchg
call
cmps
pop
xchg
lds
js
mov
stc
mov
stc
push
nop
push
push
jne
clc
mov
or
daa
ror
xchg
and
dec
cmp
jp
gs
retf
(bad)
sub
push
xchg
or
lock
in
sbb
mov
or
xor
in
jne
cmp
pop
sub
mov
push
pushf
cdq
push
mov
sbb
pusha
stc
add
or
test
pop
cmp
ss
loop
nop
out
(bad)
aam
ins
mov
shl
add
sbb
je
outs
sbb
fldlg2
aas
adc
je
mov
fsubr
neg
cmp
cmp
leave
dec
ret
cli
lods
mov
repnz
or
hlt
pusha
mov
dec
xchg
xchg
cld
retf
sub
test
je
sub
and
ins
rcl
mov
cli
ins
js
inc
sbb
xchg
cmp
sbb
sbb
sub
icebp
or
sub
aas
fmul
bound
arpl
addr16
outs
mov
push
mov
lods
add
ins
dec
dec
jno
sahf
cmp
fiadd
inc
pop
lods
cwde
push
push
mov
or
mov
mov
mov
(bad)
int
xchg
jne
push
cmc
add
dec
push
lock
xchg
lods
pop
test
dec
xchg
nop
(bad)
sbb
mov
pop
sub
dec
out
dec
push
sub
sbb
sti
fadd
and
xor
data16
mov
cmp
xor
cmp
and
mov
push
mov
sbb
fldcw
xchg
sahf
mov
sub
cmp
sahf
into
ins
(bad)
cmp
cs
stos
or
xlat
sar
sbb
push
mov
stos
call
mov
int
in
loopne
les
std
mov
aam
pop
imul
sub
shr
pushf
push
dec
in
cmc
fsubr
mov
mov
movs
push
pop
adc
mov
test
nop
or
push
in
or
cmp
dec
push
jnp
popf
es
jae
or
adc
cwde
mov
mov
jg
in
sub
push
mov
stos
cmp
mov
add
xor
int3
jmp
push
in
cld
cmps
mov
fcomp
and
ss
lock
inc
adc
outs
js
cwde
outs
xor
pop
pusha
mov
stc
mov
and
jle
add
xor
in
in
push
cwde
jl
je
movs
pop
cli
mov
sub
xchg
fmul
add
hlt
rcr
mov
pushf
or
xchg
sbb
mov
mov
adc
add
into
int3
push
inc
fist
mov
ins
pop
cmps
add
adc
adc
cli
jl
adc
sbb
and
mov
cmp
cmp
in
pushf
fld
add
lock
add
test
imul
cmp
bound
cdq
das
sbb
pop
clc
mov
ss
adc
cmp
mov
aas
mov
push
test
sbb
fldz
jo
mov
cmc
sbb
xchg
dec
pushf
inc
push
cwde
fbstp
repz
jno
pop
sub
jo
cmp
jo
cwde
cmps
mov
add
stc
jo
bound
mov
cmc
les
sub
cmps
sbb
nop
(bad)
fdiv
lds
mov
aaa
pop
test
mov
clc
mov
jbe
sbb
stc
xchg
add
lods
mov
mov
push
fs
sbb
call
sub
inc
sti
or
and
cwde
shl
nop
push
sar
jp
fmul
pop
out
inc
push
call
(bad)
mov
pop
push
dec
mov
outs
and
fiadd
xchg
xchg
test
dec
sbb
dec
xchg
ficomp
cmc
sub
loopne
lods
cmp
dec
cwde
xor
xor
cmp
jb
clc
adc
mov
ror
pop
int3
ins
sub
fs
adc
push
xor
xlat
shl
xor
or
lods
add
sbb
cmp
pushf
shl
into
ror
je
pop
les
clc
call
adc
xor
fdiv
mov
cmp
add
jecxz
fmul
scas
jl
std
js
loopne
jle
inc
leave
or
ins
aam
xchg
dec
(bad)
lods
rcr
and
jne
clc
popf
out
leave
inc
jo
int3
je
jbe
push
pushw
cld
push
fs
enter
test
or
enter
sahf
call
test
sbb
int3
nop
out
sahf
adc
mov
ins
cmc
mov
sbb
std
jns
pusha
dec
enter
mov
jmp
dec
call
mov
clc
adc
nop
sub
mov
sub
shl
xor
rol
retf
sbb
pop
popf
fsub
push
ins
inc
add
es
add
sahf
pop
pushf
mov
call
or
pop
enter
mov
fs
pop
pop
and
add
dec
nop
or
dec
push
push
enter
jbe
mov
cmp
inc
push
je
(bad)
xor
js
pusha
mov
sbb
ror
push
js
cmp
call
fisttp
je
sbb
ins
bound
dec
lahf
xchg
loopne
sub
push
mov
adc
je
dec
test
push
lods
inc
xchg
pop
int3
dec
pop
nop
fstp
aas
hlt
ficomp
sub
pop
and
dec
ja
pushf
xor
sti
add
lods
mov
or
icebp
std
push
lock
cld
add
inc
lock
cmp
cwde
stos
test
sub
mov
aam
cmps
inc
int3
push
sub
mov
lahf
lods
xlat
xchg
pop
jl
pop
mov
lods
fdiv
les
and
fs
add
shl
inc
int3
push
stos
mov
and
mov
test
test
jmp
jo
sub
(bad)
in
fs
pop
pop
cld
icebp
mov
dec
xchg
repz
leave
inc
adc
mov
xor
lock
xor
inc
dec
lods
sbb
cmps
sbb
inc
test
sub
ror
sub
out
call
xor
int3
mov
nop
sbb
and
jp
push
in
icebp
in
cmp
ins
fidiv
xor
inc
xor
ds
and
add
test
sub
push
dec
cld
dec
test
sahf
cwde
mov
cmp
sbb
in
xchg
shr
ins
nop
sbb
xor
mov
fdiv
mov
push
inc
push
(bad)
cwde
test
add
mov
cmp
jo
movs
cld
mov
jo
js
pop
retf
ins
jmp
dec
pusha
mov
sbb
add
les
outs
lock
or
pop
test
xchg
enter
or
lods
ror
mov
ficom
neg
gs
fcomp
add
stc
(bad)
pusha
cmp
dec
int3
fcomp
mov
js
js
pop
and
or
mov
and
enter
shl
lock
mov
lds
stc
sbb
test
sbb
cmp
hlt
adc
inc
adc
hlt
mov
ror
clc
xchg
scas
dec
test
lock
ins
add
or
jns
mov
mov
test
or
fnstcw
and
cmp
mov
rcl
cmp
mov
test
ja
mov
cmp
push
sbb
inc
movs
fld
cli
xor
pop
shl
add
out
cwde
cld
mov
cwde
pop
and
push
test
test
popa
pusha
jp
push
lock
pushf
call
push
call
(bad)
mov
cld
cmp
enter
scas
hlt
sub
rol
mov
in
fdivr
mov
or
or
in
dec
push
daa
cmp
test
and
hlt
dec
mov
bound
shl
sbb
add
dec
inc
jo
pop
neg
lods
jl
inc
cwde
sbb
loope
in
or
in
test
inc
loope
mov
or
(bad)
lock
cdq
dec
sub
les
inc
test
cli
xchg
sbb
or
push
dec
fmul
ret
mov
mov
cmp
mov
push
adc
or
push
and
and
and
cmp
in
fld1
push
lods
les
push
sar
push
int3
(bad)
push
stos
or
(bad)
retf
movs
sar
lock
fst
movs
add
fist
in
inc
xor
mov
xchg
cmp
cwde
mov
mov
ja
arpl
or
lods
cmps
xor
add
jmp
adc
mov
rcl
cs
or
and
sahf
fsub
or
sub
push
or
or
mov
icebp
fsubr
adc
mov
add
cli
mov
sub
out
sbb
movs
and
or
in
enter
in
pop
xor
inc
repnz
push
mov
out
(bad)
mov
inc
dec
mov
mov
std
push
call
push
mov
dec
out
imul
pop
ins
mov
movs
(bad)
jl
je
add
les
cmp
push
pop
add
mov
jo
add
adc
int3
sub
cli
shr
cwde
push
(bad)
jl
inc
aad
pop
push
sti
sub
sub
enter
mov
test
xor
shl
cmps
mov
cmp
stos
adc
xchg
pop
sbb
shl
inc
sbb
cmp
dec
sub
xor
adc
mov
xor
pushf
jmp
add
jae
(bad)
icebp
lods
loopne
js
idiv
push
xchg
pusha
cld
inc
rcl
push
fadd
aam
cmp
and
xchg
cld
pushf
ret
adc
mov
imul
pop
in
int3
bound
hlt
mov
mov
aam
mov
sbb
out
dec
push
cmc
jl
jmp
add
lock
repnz
inc
sahf
pusha
add
inc
mov
es
add
dec
shl
out
cld
or
ss
jno
call
mov
sub
xchg
outs
pop
cwde
pusha
or
pop
adc
fsub
push
dec
cmp
push
sub
outs
pop
aad
cmp
sbb
sbb
add
mov
push
push
in
in
clc
fdiv
loopne
add
xor
(bad)
loopne
loop
je
fdivr
and
adc
push
add
mov
ins
imul
jp
adc
shl
mov
stos
bound
xchg
or
xlat
fsubr
retf
jo
or
mov
push
rcr
sbb
push
jb
stc
je
and
and
movs
hlt
fs
push
(bad)
jl
cmp
in
and
push
mov
(bad)
pushf
je
pushf
jmp
sahf
test
jo
shl
cmp
test
aaa
scas
stc
sbb
xchg
enter
sbb
mov
(bad)
push
jl
movs
dec
cmp
mov
mov
inc
loope
mov
and
pop
les
adc
adc
sbb
cmps
push
(bad)
ja
sbb
les
sti
pop
mov
ins
xchg
mov
inc
push
jl
dec
sub
lahf
mov
hlt
stos
sbb
xor
aaa
sbb
inc
xor
xchg
or
pusha
or
je
push
test
nop
inc
mov
cwde
and
dec
dec
dec
sbb
sub
inc
js
pusha
push
(bad)
popa
fsub
add
and
adc
shl
sbb
loope
in
inc
xor
int3
adc
inc
into
cwde
test
push
movs
push
(bad)
mov
int3
cmc
push
pushf
cmps
xor
stos
movs
adc
mov
movs
call
in
xchg
dec
pusha
sbb
in
dec
push
xchg
and
push
call
xchg
sbb
dec
push
push
add
mov
mov
xor
jg
cwde
mov
out
xor
in
dec
int3
mov
dec
inc
and
test
xor
jo
movs
cmp
clc
mov
pop
pop
movs
mov
cmp
mov
sbb
cwde
scas
adc
movs
jns
inc
scas
add
loope
push
dec
popf
je
in
sub
inc
jo
repz
jb
xor
lock
or
in
mov
sbb
cdq
sbb
enter
xchg
dec
cld
stc
movs
mov
movs
call
pop
add
ins
xchg
dec
pop
add
dec
xchg
bound
cwde
repnz
jl
mov
push
aam
jb
fs
cmc
in
pushf
les
rcl
imul
aas
xchg
ins
xor
in
xor
scas
cwde
dec
enter
rcl
enter
sub
push
mov
dec
sub
inc
push
mov
sbb
and
cld
imul
push
movs
cmp
stos
cmp
pushf
repz
shl
cs
aad
sbb
in
psllw
add
sub
lea
and
sbb
rol
push
add
hlt
cmp
sub
test
in
and
mov
cli
pushf
mov
push
ins
cmps
test
dec
dec
and
adc
in
cld
call
lahf
jl
add
dec
sub
xor
or
mov
hlt
nop
fsubr
xor
sbb
in
shr
lds
in
aam
mov
out
inc
or
sub
enter
sti
movs
adc
sahf
mul
shr
mov
mov
test
mov
imul
js
sar
fsub
pop
loope
xor
jle
icebp
push
movs
es
imul
xlat
ins
retf
sbb
pusha
sbb
mov
push
xchg
sbb
fsub
into
mov
loope
cmp
js
pop
inc
cwde
movs
sbb
int3
cld
out
or
mov
cld
in
int3
pop
xchg
and
pusha
xchg
(bad)
cmp
je
dec
adc
xchg
in
and
or
lods
sbb
int3
pop
mov
add
mov
shl
dec
mov
add
mov
and
cmp
xchg
bnd
cmp
lods
aas
mov
dec
test
in
jo
pop
push
or
fdivr
mov
in
jns
inc
push
mov
loope
sbb
pop
sub
inc
xchg
mov
movs
fstp
sbb
fdivr
mov
dec
dec
mov
jbe
in
aam
loop
pushf
loopne
icebp
cmps
cmp
xchg
in
sub
out
sub
nop
cmp
dec
hlt
sbb
pop
push
sbb
pusha
cmp
and
ins
test
xor
fist
hlt
pop
inc
push
mov
mov
adc
mov
xchg
mov
fstp
pop
cwde
std
mov
nop
cwde
dec
pushf
and
mov
sahf
test
enter
or
mov
adc
rcr
xor
sbb
cmp
add
push
mov
xor
je
test
mov
pusha
jne
push
sub
clc
sub
adc
enter
lahf
movs
pusha
mov
xor
adc
scas
mov
sub
inc
dec
cld
test
fmul
retf
mov
or
je
cmp
movs
and
mov
and
or
and
cwde
or
mov
dec
cwde
imul
test
ja
dec
add
mov
rcr
mov
rcl
or
pushf
pop
and
dec
cmp
adc
mov
or
sbb
or
mov
retf
test
xor
cmp
mov
pop
je
adc
shl
cmp
in
mov
pusha
or
pop
loopne
jns
mov
in
fwait
out
and
sub
cmp
jge
imul
xchg
jnp
pop
fmul
mov
test
loop
mov
dec
pop
xchg
and
pop
mov
test
inc
add
mov
cmp
inc
jno
data16
test
icebp
stc
or
shl
inc
mov
in
scas
add
stos
sbb
sbb
jnp
(bad)
and
jge
push
jo
sbb
inc
mov
cld
or
add
pop
mov
jo
pop
inc
inc
mov
adc
pop
cmp
fisttp
in
sub
sub
pushf
sub
ja
js
inc
xor
and
or
sub
or
push
fsubr
aam
ins
push
bound
mov
mov
stos
mov
nop
clc
or
mov
(bad)
lods
mov
xchg
enter
pop
aam
adc
mov
ds
and
int3
sahf
mov
mov
jns
add
test
lea
cmp
fadd
cdq
jmp
xor
in
pushf
pop
push
pusha
adc
push
adc
pop
int3
push
adc
arpl
ins
pusha
(bad)
push
in
or
rol
mov
out
cwde
adc
cmp
sbb
loopne
loope
xor
mov
cmps
rcl
push
jle
push
and
cmps
cmp
jge
jmp
dec
add
pusha
fmul
inc
fwait
clc
mov
jl
(bad)
in
and
mov
adc
call
lods
cwde
aam
hlt
leave
cld
lock
cld
hlt
inc
fsubr
push
ins
out
push
es
les
cwde
repz
push
test
dec
xor
call
and
mov
stos
cld
xchg
rcr
rcl
mov
in
mov
mov
fs
xor
popa
nop
xchg
dec
jns
retf
fcomp
mov
(bad)
mov
fdiv
ret
push
push
or
jo
test
jp
and
jle
pop
jbe
call
mov
pop
xor
adc
cld
or
cwde
fadd
dec
mov
or
dec
pop
jmp
repnz
xchg
hlt
xor
hlt
shr
enter
adc
xor
fcmovb
and
sbb
mov
mov
push
fs
mov
cmp
fdivr
mov
iret
inc
ss
in
xchg
lock
add
lods
fadd
push
nop
push
xchg
xchg
clc
mov
xor
movs
and
je
mov
push
jl
mov
jne
xchg
cmp
in
lods
imul
fadd
inc
xor
sbb
cld
mov
jno
sbb
fcomp
hlt
dec
xchg
movs
outs
test
mov
sub
push
stos
fstp
test
adc
enter
sbb
mov
out
mov
cmps
fs
sbb
cld
je
cmp
lods
add
inc
lahf
sub
shl
cmp
shl
rcr
and
inc
test
adc
mov
adc
js
test
pop
mov
ss
inc
std
das
jl
loop
loop
sub
xchg
aam
outs
enter
mov
jb
add
loopne
xchg
je
sbb
test
jae
inc
sbb
add
retf
neg
push
mov
or
push
fdivr
and
outs
call
mov
dec
dec
inc
enter
add
or
nop
xchg
push
cmps
shl
jmp
imul
jb
jl
not
in
or
mov
test
add
hlt
xor
cdq
and
sbb
mov
adc
mov
sub
loopne
js
adc
lods
movs
out
mov
xor
sahf
push
dec
add
loope
or
sub
xor
jo
sar
fmul
adc
sahf
add
and
sbb
into
sub
in
cmps
or
ins
xor
(bad)
out
xchg
(bad)
cmp
fsubr
jno
std
and
and
sbb
and
nop
and
dec
les
movs
fdiv
adc
cmp
or
je
fsubr
adc
mov
pop
and
(bad)
inc
add
mov
cs
add
jmp
ror
push
inc
mov
les
xor
in
fcomp
ins
movs
mov
fdiv
pop
adc
pushf
sbb
sbb
enter
mov
out
mov
pusha
sbb
add
or
in
add
pop
adc
xchg
les
pop
sbb
rep
pop
aam
fcomp
jno
fisubr
lods
clc
jmp
pop
mov
retf
add
out
in
adc
cwde
jmp
psubw
adc
cwde
mov
push
enter
sub
outs
mov
mov
mov
lock
js
shl
mov
jl
js
ret
dec
in
sbb
pop
fs
cmp
mov
ss
mov
fwait
mov
inc
push
or
mov
and
add
pop
push
dec
je
std
shr
cmp
push
fidivr
js
push
in
lods
pop
fsub
shr
enter
les
jo
pop
inc
inc
cmps
lods
xor
jge
rcl
aam
mov
cwde
fcom
mov
shl
loope
jmp
push
push
(bad)
fsub
fmul
call
aam
mov
adc
mov
in
sub
add
cmc
stc
test
mov
test
push
inc
and
movs
lods
lods
sbb
loopne
call
or
fisttp
xor
int3
sub
fwait
nop
cmp
push
je
xor
jp
gs
fcmovne
pusha
cwde
mov
xchg
cld
inc
in
xchg
js
adc
xor
cwde
inc
inc
cli
mov
imul
js
out
enter
dec
push
and
dec
loopne
cmp
or
jo
hlt
test
jmp
mov
cmps
cmp
out
jmp
(bad)
mov
push
xor
adc
in
movs
push
jl
cmp
clc
sbb
jl
in
ins
ror
popf
or
call
xor
std
enter
jmp
je
cmp
xor
and
hlt
and
adc
dec
clc
mov
pop
or
outs
inc
cwde
fidiv
push
(bad)
hlt
adc
stos
jl
cmp
adc
cmp
fmul
xor
clc
loopne
cli
lods
pop
jns
sbb
fs
mov
dec
(bad)
hlt
jne
outs
xor
imul
push
xchg
cmp
adc
jle
inc
or
mov
pop
sbb
and
jl
ror
rcr
add
lods
out
fadd
dec
lods
movs
add
add
push
dec
push
push
ins
mov
cmp
mov
aam
mov
mov
test
cdq
test
or
sub
cld
jns
jo
lock
adc
adc
sbb
sar
mov
mov
fcomp
loopne
or
push
mov
inc
test
mov
inc
sbb
push
xchg
cmc
cwde
and
(bad)
les
stos
push
xor
mov
sub
lods
retf
and
xor
loop
cmp
cmp
cmp
fstp
out
jns
xor
xor
pop
stc
mov
push
mov
fs
les
mov
sub
adc
inc
cmp
adc
add
cmp
cmp
enter
push
adc
je
xchg
mov
adc
out
push
mov
mov
imul
and
ret
in
movs
fwait
test
jnp
dec
xor
inc
aam
mov
fdivr
inc
cwde
fadd
mov
call
(bad)
cwde
pop
add
fsub
je
movs
and
call
push
leave
adc
das
mov
jmp
cmps
mov
mov
inc
pop
int3
fcmovnbe
mov
fadd
dec
js
rcl
jp
jmp
aas
les
aaa
dec
sub
mov
xor
pop
sub
add
aam
ins
rol
pop
mov
cld
gs
cmp
repz
shl
int3
mov
repnz
xchg
(bad)
cwde
add
jl
push
mov
sbb
lahf
jbe
xchg
aam
mov
call
in
fs
adc
mov
push
icebp
clc
clc
xchg
dec
xchg
pushf
and
mov
ret
cmp
xchg
(bad)
ins
mov
push
sbb
bound
fadd
fcom
jl
dec
mov
jne
cmp
push
clc
fnop
jge
sub
js
mov
jge
inc
out
mov
xchg
sbb
aam
cmp
jecxz
cmp
pusha
xchg
sbb
pushf
jo
test
mov
aam
lods
and
(bad)
loopne
lods
mov
data16
cld
fcomp
icebp
sbb
sub
mov
xor
dec
les
ins
mov
lock
cli
and
dec
and
je
aam
std
sbb
inc
ins
fldl2e
mov
hlt
js
pusha
mov
clc
cmp
xor
push
sar
loopne
loop
pop
in
scas
jge
(bad)
in
add
jl
movs
adc
fwait
shl
push
inc
call
jae
pushw
mov
mov
and
xor
cmp
lods
push
inc
out
mov
loope
or
test
nop
daa
cli
in
pop
enter
mov
scas
pop
dec
push
xor
rcr
outs
lock
mul
sub
push
inc
int3
test
fs
push
imul
pushf
sbb
stc
rol
xchg
test
add
sub
sub
lock
test
mov
push
pushf
jo
int
cmps
or
xchg
cdq
adc
adc
xor
jl
test
test
push
lods
pop
dec
mov
jne
adc
inc
pusha
adc
fsub
sar
ss
fcom
neg
cmp
cmp
out
fst
mul
xchg
jmp
aad
mov
sbb
sub
movs
mov
adc
pop
cmp
or
loop
mov
adc
inc
test
inc
leave
fdiv
xor
clc
inc
mov
pop
dec
enter
jae
mov
jo
int3
pushf
test
leave
inc
retf
jo
pop
dec
jae
dec
cld
test
xor
pop
lods
xchg
fs
daa
mov
mov
pusha
push
mov
fcom
retf
sbb
xor
dec
cdq
push
lods
jns
dec
sbb
mov
loopne
mov
and
and
sub
adc
pop
sub
call
mov
pop
mov
and
push
xchg
(bad)
cmp
sbb
dec
adc
popa
jae
inc
cmp
cmp
sub
in
mov
cmp
sar
sbb
pushf
movs
(bad)
hlt
sub
push
je
lods
sub
lock
xchg
loope
retf
mov
int3
xchg
in
shr
pusha
adc
(bad)
xor
je
enter
pushf
fadd
clc
pop
inc
in
popf
adc
inc
aaa
add
jo
lock
xchg
mov
add
jne
push
mov
jl
in
out
cdq
lods
rcr
xor
pushf
or
sahf
inc
test
mov
pop
enter
xor
loop
xor
lods
mov
cmp
push
sbb
movs
fldenv
clc
add
mov
movs
test
pop
adc
sahf
or
pusha
mov
nop
hlt
out
js
shl
nop
push
adc
lods
(bad)
fstp
(bad)
hlt
sub
dec
inc
push
ins
xchg
cld
adc
mov
push
add
popf
out
add
lods
fcom
xor
xor
sti
cld
jmp
xchg
test
cwde
movs
cmp
pop
mov
sub
in
es
cwde
in
test
mov
cmp
add
ins
or
and
mov
ins
adc
pusha
fild
mov
jb
xor
nop
hlt
or
shl
or
mov
cwde
add
xor
mov
adc
adc
or
push
jmp
call
sbb
movs
cmp
and
loope
fcomp
out
lock
or
inc
rcr
hlt
rol
pop
pop
mov
nop
ins
cmp
xor
or
mov
jne
fiadd
loope
add
or
push
mov
ins
les
inc
out
or
mov
cmp
add
sub
into
xor
push
mov
pop
add
lods
sub
les
mov
mov
cmps
loop
push
movs
(bad)
(bad)
les
cld
mov
cmps
rcr
inc
cli
sub
xchg
mov
push
clc
mov
test
sahf
outs
xor
add
or
nop
or
(bad)
and
clc
movs
call
rcr
aaa
pop
mov
fs
or
and
add
or
pop
pusha
in
cmp
dec
popf
loopne
inc
test
je
aas
hlt
adc
or
mov
test
pushf
mov
mov
scas
(bad)
mov
and
adc
add
(bad)
fmul
xor
mov
hlt
je
mov
ins
push
pop
sbb
je
mov
(bad)
mov
dec
js
pusha
mov
mov
adc
jo
ret
and
xor
push
sbb
jmp
xchg
pop
pop
inc
mov
xchg
not
cmp
movs
ins
mov
mov
cmp
imul
lods
mov
scas
movs
adc
mov
movs
js
dec
int3
stos
xchg
push
or
sub
xchg
clc
cmp
popf
scas
push
cld
popa
xor
and
adc
push
mov
(bad)
pusha
pushf
sub
jo
inc
pop
repnz
sbb
pusha
(bad)
cmp
cld
in
shl
xchg
and
scas
dec
add
ret
cmp
fcomp
retf
cmp
jl
les
adc
sbb
and
and
inc
adc
cmps
push
ror
loop
xor
or
rcl
xor
sub
inc
js
inc
aas
stc
mov
pusha
adc
inc
lock
inc
push
add
jl
lods
repnz
add
sub
xchg
je
xor
pushf
stc
(bad)
xor
push
push
dec
cld
mov
(bad)
ins
push
mov
inc
mov
das
mov
nop
dec
adc
jge
dec
mov
cmp
push
mov
cmc
mov
test
add
mov
mov
mov
push
push
fisttp
ins
inc
sbb
(bad)
mov
inc
add
(bad)
xor
aam
jle
push
test
xchg
gs
cmp
mov
mov
les
pop
push
cwde
hlt
mov
nop
push
dec
jne
mov
mov
daa
lock
je
push
enter
jp
data16
xchg
push
cmp
push
mov
and
ror
je
mov
mov
repnz
cld
nop
movs
iret
cmp
push
add
in
ja
fst
xor
fsubr
mov
js
jo
or
nop
fadd
adc
lods
dec
int3
nop
pop
sbb
cmp
mov
mov
mov
leave
adc
call
xor
das
loopne
into
mov
cwde
hlt
ja
ins
test
fs
pop
ins
add
aam
ins
test
jo
sub
rcl
enter
dec
leave
lock
xchg
test
les
add
pop
int3
and
mov
sub
mov
aam
pop
inc
jo
loope
test
mov
mov
call
in
repnz
clc
es
mov
and
loopne
clc
(bad)
test
pushf
adc
mov
ja
(bad)
lahf
hlt
cmp
dec
adc
mov
mov
cmp
push
lods
into
loop
nop
sub
jo
cmp
test
dec
in
sub
(bad)
popa
cwde
cli
les
dec
nop
mov
sbb
add
ret
and
inc
pop
mov
sbb
les
cld
sbb
dec
cmps
sbb
mov
test
xchg
dec
xchg
popa
xchg
out
cwde
jl
(bad)
pusha
mov
mov
xor
pusha
push
mov
cli
in
or
pop
dec
inc
test
sbb
aam
dec
cmp
adc
mov
imul
pop
in
inc
iret
xor
je
stos
pushf
test
mov
dec
cmp
or
sub
and
add
mov
push
mov
sbb
xor
test
and
push
and
scas
call
inc
(bad)
aam
mov
push
cmp
fs
js
jo
push
bound
rcr
std
inc
sub
and
or
test
xor
loopne
test
sub
xchg
inc
and
fsub
mov
push
cmp
loope
or
sub
rol
sub
cmp
cwde
inc
sbb
or
pusha
jg
in
push
sbb
and
nop
test
or
push
sbb
in
xchg
sbb
push
fwait
call
inc
loopne
lea
daa
sbb
int3
sub
jno
cmp
sub
fcomp
addr16
mov
js
add
cmp
xchg
or
jno
cwde
adc
popa
add
or
fadd
or
mov
cwde
push
(bad)
cld
nop
test
neg
pop
rcr
push
sbb
and
or
mov
pop
jo
cmps
fs
test
cmp
xchg
lea
cmc
fild
jns
cmp
xor
mov
adc
xor
push
hlt
and
lds
aam
imul
dec
cmp
cmp
sub
jecxz
mov
jns
shr
and
test
out
or
pop
or
daa
jl
pop
inc
dec
cld
sbb
jne
add
cdq
cmp
dec
mov
clc
fadd
shl
movs
pusha
sub
cmp
hlt
xchg
stos
pop
cmp
(bad)
pusha
cmp
inc
add
mov
sbb
ins
mov
sub
mov
cmps
sub
pushf
add
add
cmp
sti
and
ds
dec
mov
retf
loop
call
mov
fs
imul
adc
xor
inc
ror
call
sar
jge
in
pushf
aam
mov
lods
ins
xchg
mov
aam
mov
icebp
dec
test
aam
mov
jl
and
cs
or
nop
je
(bad)
xchg
dec
shl
sub
add
and
jo
add
(bad)
fsubr
les
mov
adc
vpunpcklqdq
lds
pop
pushf
and
cmp
outs
stc
inc
dec
and
dec
adc
push
nop
push
add
push
push
fadd
loopne
mov
mov
sbb
xor
loopne
test
cmps
pop
jae
cld
sub
js
push
aas
and
pop
dec
dec
pusha
outs
mov
or
movs
push
adc
mov
push
pop
adc
dec
and
sub
clc
pop
clc
movs
xor
sti
js
out
dec
cmp
pop
sub
shr
and
data16
xor
sahf
fdivr
icebp
pop
push
fcomp
lock
cmp
cmps
(bad)
test
dec
pushf
stc
nop
adc
mov
in
aam
push
xor
push
and
in
in
pushf
daa
ds
and
inc
cmp
mov
mov
not
js
push
sbb
aam
int3
mov
fcmovbe
fcmovnb
xor
jl
add
les
and
mov
pop
sbb
cs
xchg
test
movs
sbb
fsub
inc
pushf
outs
hlt
mov
cmp
push
mov
test
cwde
push
push
shl
xchg
data16
add
inc
adc
inc
mov
mov
xor
aad
sbb
dec
pushf
mov
sbb
inc
mov
cmp
xor
pmulhuw
fnop
mov
rcr
inc
stos
dec
in
int3
mov
out
stos
shl
(bad)
(bad)
or
sub
icebp
inc
sbb
adc
test
arpl
and
fmul
clc
sbb
in
mov
inc
shl
xor
fisttp
call
lods
call
pop
cld
sbb
cmp
and
mov
test
pusha
push
lds
xor
je
mov
hlt
scas
mov
(bad)
fcmove
jnp
ret
mov
nop
xor
pushf
in
aaa
sub
push
lock
loope
sub
ja
sbb
(bad)
mov
inc
jne
fdivp
les
jp
addr16
cmc
add
gs
nop
mov
or
jmp
push
mov
add
jbe
sbb
les
std
mov
cmp
in
dec
push
xor
in
imul
outs
ins
frstor
enter
(bad)
nop
adc
dec
(bad)
adc
out
enter
mov
sub
and
push
mov
xchg
xchg
data16
adc
popa
js
adc
or
cwde
and
in
jle
inc
retf
inc
cmp
mov
xchg
adc
in
mov
ins
pop
dec
lock
add
clc
xchg
clc
mov
adc
pop
nop
mov
pop
jp
mov
mov
add
nop
xor
int3
jp
ror
pushf
popa
mov
xchg
ins
xchg
inc
in
or
xchg
and
dec
add
lods
jmp
ret
je
stos
or
inc
clc
outs
add
cmp
push
mov
mov
repnz
lock
je
(bad)
jmp
xor
cwde
fisttp
test
loopne
and
inc
clc
fwait
inc
mov
ds
and
sbb
mov
add
sti
sbb
fadd
pusha
movs
fcmove
add
loopne
clc
iret
jo
test
in
sub
add
sbb
test
sti
push
shl
mov
cmp
inc
call
in
enter
shr
fld
adc
out
ss
enter
ins
jmp
dec
out
cmp
jl
enter
adc
js
cld
dec
mov
add
mov
sub
jmp
cmp
xchg
inc
add
pop
xchg
xor
cld
data16
jl
ret
fnsave
arpl
push
jmp
sub
lahf
call
add
test
lea
sub
mov
sbb
jmp
call
push
fdivr
sbb
adc
enter
jl
ins
ins
xchg
cmp
inc
ds
cmp
add
dec
pop
neg
or
aam
fcom
call
ret
sub
std
fsub
push
mov
fwait
shl
aad
ss
xchg
clc
fiadd
or
ror
cmps
xor
lods
jo
sub
xor
xchg
and
(bad)
test
or
xor
in
movs
rol
shr
loopne
rol
sbb
mov
nop
aam
jl
addr16
out
mov
scas
cld
lock
clc
adc
pop
dec
jb
in
ds
adc
push
xor
clc
inc
test
and
mov
push
shr
movs
and
inc
shr
add
xor
or
inc
mov
lods
pusha
aam
pop
loop
(bad)
xor
int3
in
data16
call
les
pushf
sbb
ins
out
mov
cmp
xor
in
(bad)
(bad)
shr
add
cmp
fcmovbe
mov
scas
clc
adc
(bad)
cld
sbb
mov
cld
adc
fmul
inc
add
sub
jl
pushf
loopne
dec
movs
pop
mov
bound
or
jl
push
mov
cmps
and
ins
cld
jno
xchg
js
sar
adc
ins
lea
push
and
and
adc
dec
js
clc
aam
jge
and
sub
test
xchg
in
pushf
jp
sub
xor
fsubr
nop
lock
mov
mov
stos
inc
aam
pop
cmp
and
pop
nop
sub
xchg
pushf
mov
sbb
mov
cmp
data16
dec
pop
std
pusha
sahf
jmp
mov
adc
mov
sahf
inc
mov
test
dec
cmp
jge
cli
or
push
enter
cdq
icebp
mov
in
and
pop
or
or
clc
movs
cmps
lea
ins
add
add
in
loop
je
mov
in
or
pop
add
in
(bad)
je
cmp
adc
jge
imul
or
inc
and
push
pop
or
ds
fwait
cmp
jno
or
xor
shl
lock
or
add
cld
retf
hlt
and
ins
dec
js
mov
jno
addr16
xchg
lds
mov
out
mov
sub
mov
in
mov
mov
cmp
pushf
jno
pop
ffree
(bad)
jmp
sub
fs
push
cmp
mov
sub
add
shl
mov
jo
sar
fs
push
aam
ins
mov
je
repnz
add
or
loopne
call
inc
clc
fstp
add
dec
add
inc
repnz
inc
sub
xchg
test
in
push
adc
sub
mov
add
jns
pop
mov
and
mov
mov
js
adc
inc
mov
je
loopne
(bad)
shl
mov
mov
loope
cld
test
sar
xchg
sbb
jns
pop
test
jae
js
xchg
pushf
into
sbb
inc
clc
mov
pop
xor
fadd
or
push
test
imul
enter
push
add
aam
adc
syscall
mov
push
sub
pop
xor
mov
mov
push
shr
add
js
jmp
cmc
pushf
jns
inc
adc
mov
jecxz
push
jo
stc
mov
je
and
sub
sub
mov
call
mov
pop
pop
sbb
imul
and
(bad)
(bad)
mov
mov
inc
ret
mov
add
out
in
out
push
xor
js
dec
cmp
add
jp
je
js
inc
and
and
push
jg
mov
mov
enter
mov
adc
test
pushf
stc
xor
jl
mov
mov
fadd
gs
mov
cmp
jmp
into
pop
test
push
mov
mov
sbb
push
ss
inc
mov
stos
mov
call
ret
fs
fwait
mov
adc
fs
or
cmp
sub
(bad)
jno
shr
dec
call
xchg
hlt
cld
xchg
and
and
inc
fwait
ds
ror
jns
in
into
js
test
sub
inc
lock
not
int
xor
(bad)
cmp
jmp
(bad)
sbb
xor
out
or
inc
aaa
fsub
fs
mov
pushf
sub
inc
add
pushf
mov
or
sti
ins
jp
inc
out
shl
rol
or
mov
sub
sbb
fimul
repnz
mov
aam
or
xchg
fcomp
xor
pushf
arpl
mov
xor
clc
jbe
xchg
pop
sbb
in
sbb
lods
sbb
adc
mov
dec
add
shl
or
aam
or
add
sub
aam
sub
xor
sbb
xor
mov
gs
mov
scas
aam
mov
data16
xchg
sbb
xlat
in
cmp
cmp
loop
(bad)
hlt
add
adc
and
xchg
cmp
xor
mov
cmp
jne
out
arpl
in
pop
leave
mov
mov
call
dec
pusha
je
rcl
sbb
cmp
push
cmp
hlt
bound
lock
add
or
mov
je
pop
mov
mov
mov
aam
mov
lds
dec
in
(bad)
jae
sbb
js
leave
xor
and
hlt
outs
cmp
add
or
mov
jno
fcom
and
adc
shl
frstor
mov
je
in
mov
cmp
ins
enter
fsubr
jo
js
add
dec
sti
pop
xchg
pop
jo
mov
xchg
push
dec
jl
xor
std
cmp
or
imul
pop
adc
ficom
adc
adc
pop
call
pop
or
loopne
xchg
xchg
popa
dec
sub
inc
js
add
lock
stc
je
test
dec
mov
ret
fistp
pop
lods
scas
mov
clc
sar
or
dec
test
cmc
inc
call
dec
pop
hlt
leave
push
sub
movs
ins
sbb
sbb
sbb
push
loopne
pop
movs
and
das
je
in
call
aam
(bad)
sbb
es
cmp
cwde
rcr
ss
mov
loopne
es
arpl
cld
mov
dec
loopne
sbb
test
int3
inc
xor
test
cmp
sub
ss
or
test
add
xchg
sar
popa
or
pop
test
ins
pop
ins
xor
xchg
mov
mov
mov
dec
xchg
retf
cmp
mov
das
lods
mov
(bad)
inc
or
and
mov
adc
mov
fsubr
(bad)
imul
mov
xchg
sub
out
aam
push
mov
mov
in
mov
and
sub
test
ds
and
int3
mov
ja
push
xlat
cmp
lock
icebp
xor
sbb
mov
mov
test
jmp
ror
mov
loopne
push
cmp
xchg
data16
imul
adc
inc
and
aam
adc
xor
xchg
push
mov
(bad)
out
(bad)
movs
xor
push
int
xchg
push
push
add
xor
xchg
xchg
inc
inc
sbb
popa
push
call
inc
test
addr16
shr
ror
mov
int3
cmp
sbb
into
lods
je
push
mov
push
sbb
js
sbb
and
sbb
pushf
loopne
mov
cmps
mov
dec
fs
pop
aad
outs
mov
mov
pop
stos
and
cmps
js
call
in
adc
test
mov
nop
push
gs
test
or
mov
stc
(bad)
aas
popf
test
fs
in
pusha
push
dec
inc
mov
jb
jg
lea
xchg
repnz
inc
mov
jmp
ins
mov
mov
int3
ror
das
aam
call
fld
xor
mov
xor
cmp
xchg
adc
mov
call
mov
add
cwde
jmp
mov
fld
add
sbb
cmp
data16
sahf
lock
rol
jg
push
mov
test
aam
xchg
pop
out
sar
cmp
ins
lock
push
push
cmp
mov
push
mov
sub
mov
lock
xor
add
mov
clc
ret
or
push
sub
jmp
or
sar
jns
sub
adc
fdivr
(bad)
add
jmp
xchg
xlat
dec
sbb
pushf
daa
les
fcom
adc
dec
popf
les
call
aam
hlt
push
mov
xchg
mov
inc
neg
js
add
push
fs
icebp
xor
std
mov
xlat
cmps
sbb
jns
lock
mov
jge
sbb
inc
dec
ins
push
mov
pop
(bad)
movs
lahf
cs
stc
dec
jbe
inc
lods
enter
sbb
mov
xchg
lods
pop
add
hlt
jno
js
ret
jl
and
das
call
outs
pop
aam
pushf
add
fnsave
xchg
mov
inc
mov
lods
mov
or
ds
clc
push
cld
jl
dec
shr
outs
rcl
add
sub
push
movs
aas
mov
iret
rcl
add
mov
hlt
push
pushf
fdiv
jl
push
cld
fdiv
xor
fs
scas
ins
mov
mov
push
sub
or
loope
rcl
rol
xchg
pusha
or
mov
pop
rol
jge
ins
push
dec
fdiv
out
mov
inc
js
or
js
jmp
xor
and
xchg
nop
add
cwde
jo
icebp
ror
or
xor
xchg
cmp
shr
inc
mov
clc
and
test
or
jo
or
pop
in
xor
cmp
int3
mov
push
push
sbb
sbb
add
(bad)
cmp
and
mov
or
cmp
(bad)
push
out
enter
test
xchg
inc
or
cmps
xor
loop
mov
es
mov
out
cmp
sbb
adc
sub
jae
js
pusha
and
push
pop
cdq
xchg
mov
ins
das
ret
mov
add
adc
movs
lock
push
shl
xchg
add
pop
jmp
cmp
or
hlt
push
adc
movs
ja
sti
push
mov
cmp
mov
cmp
mov
xchg
fdiv
rcr
push
sar
mov
jo
scas
xor
mov
test
lods
pop
xor
daa
inc
jb
mov
fmul
add
fdiv
mov
or
pop
inc
sahf
leave
add
ins
jae
popa
or
clc
shr
fcom
or
loop
in
push
sub
mov
aad
pop
pusha
mov
lods
mov
mov
inc
mov
mov
je
pandn
inc
cdq
rol
(bad)
sbb
dec
xchg
aas
or
ret
jl
mov
ret
lock
jp
add
sub
(bad)
ins
adc
mov
mov
cmp
loopne
dec
fs
mov
push
movs
pusha
jno
ror
push
hlt
dec
inc
jns
sbb
int3
mov
or
jo
fs
cmp
popf
je
call
adc
xor
outs
loopne
in
sbb
or
mov
ins
and
push
push
inc
or
mov
out
out
xor
in
gs
pop
cld
and
push
cli
sub
add
inc
retf
jne
mov
ret
ins
sub
test
fdiv
test
cmp
mov
or
loopne
aam
and
mov
repz
cmc
adc
cmp
shr
inc
xchg
mov
dec
mov
lods
sub
add
shl
fist
xchg
sub
dec
aam
xchg
mov
movs
cmp
test
sahf
or
cmp
push
mov
mov
fiadd
test
retf
mov
ret
xlat
jle
or
hlt
sahf
dec
lods
add
call
lock
mov
es
lds
test
cmc
sub
mov
fdivr
sub
sub
mov
sub
aad
mov
inc
(bad)
sub
in
jg
in
sub
aam
mov
mov
dec
pushf
dec
cdq
rcr
adc
mov
fwait
add
cld
cdq
jb
ret
cld
sub
int3
and
xor
and
enter
xchg
les
cmp
cmp
push
addr16
lea
bound
cmp
dec
mov
popa
leave
sbb
sbb
add
mov
mov
inc
mov
mov
mov
push
push
dec
mov
ins
in
push
les
pushf
or
mov
adc
enter
ins
(bad)
sbb
mov
xchg
cmp
(bad)
les
jmp
push
mov
ja
pushf
xor
lahf
cli
sub
xor
(bad)
(bad)
push
aam
cld
adc
xrelease
jnp
loope
test
lahf
(bad)
cmp
enter
or
add
mov
in
push
jb
pop
cmp
repnz
push
sub
inc
mov
mov
imul
lods
inc
add
mov
in
xchg
fsub
lock
cmp
out
mov
jns
add
mov
dec
adc
cwde
xchg
pop
inc
inc
cmp
adc
test
pushf
jns
ror
add
xor
or
jl
in
or
jne
sbb
add
lods
sti
adc
cmp
add
jle
arpl
imul
mov
leave
ret
pop
test
leave
mov
enter
mov
fadd
mov
adc
std
mov
nop
xlat
and
cwde
inc
inc
dec
mov
nop
inc
sbb
js
call
je
test
data16
div
lahf
sub
dec
dec
ret
mov
ins
ins
lods
mov
imul
fsub
push
je
hlt
adc
js
outs
inc
mov
add
sbb
js
xchg
push
sahf
(bad)
(bad)
enter
sar
mov
ficomp
push
add
pop
mov
jb
mov
in
xor
mov
push
call
adc
test
ret
rol
or
xchg
pop
lock
loop
test
cmp
adc
(bad)
enter
fnsave
sub
jo
mov
movs
ds
or
inc
mov
adc
fcmovb
loopne
call
je
mov
cmp
or
loop
aas
and
or
call
in
add
sub
clc
add
sub
stc
and
pusha
inc
sub
adc
adc
push
in
stc
test
push
pushf
lock
adc
(bad)
and
int3
loop
in
and
cmp
mov
add
sub
in
aas
mov
mov
sub
shl
jbe
pop
pop
enter
mov
stos
lock
inc
retf
or
xor
pusha
in
mov
ret
(bad)
out
lods
pop
test
imul
mov
pop
enter
clc
push
xor
fs
push
cwde
arpl
jl
loopne
cmp
dec
sbb
cmp
dec
or
pop
jmp
mov
push
(bad)
nop
fsubr
inc
mov
lods
nop
je
cmp
je
dec
xchg
mov
xor
sbb
test
jo
call
sub
mov
repnz
(bad)
sub
stos
cld
xor
or
mov
mov
and
pop
clc
inc
jne
push
je
cmp
sbb
aad
movs
lahf
push
xor
dec
mov
out
jmp
js
push
in
ror
cmc
es
das
lea
fadd
or
popf
test
push
lods
inc
mov
cmp
shr
mov
xchg
mov
inc
out
push
push
loop
pusha
fld
call
js
jl
pop
sbb
jl
and
ins
sub
jge
pusha
cwde
call
aam
add
jg
inc
js
mov
les
ss
pop
out
jmp
pop
enter
leave
mov
jb
clc
nop
mov
or
cmp
push
imul
aam
imul
stos
pop
adc
cmp
(bad)
fcomp
xlat
dec
push
in
enter
test
outs
mov
pop
sub
jl
jo
dec
nop
mov
int3
add
cmp
sub
scas
fsub
mov
lods
push
xor
hlt
dec
(bad)
xchg
and
retf
dec
ret
je
out
adc
sub
push
cld
sub
lock
xchg
nop
sbb
mov
add
xor
mov
xor
inc
js
in
movs
cmp
xchg
int3
dec
out
inc
pop
adc
enter
xor
sbb
fs
in
mov
sbb
sti
lock
jne
pop
xor
xchg
shl
adc
mov
pop
adc
lock
sub
and
or
lock
add
call
push
jecxz
clc
lds
mov
neg
mov
and
dec
pop
add
push
adc
fdiv
imul
enter
add
add
jne
sub
push
and
xchg
adc
xchg
xor
mov
hlt
fmul
adc
sahf
xor
jae
push
add
mov
imul
xchg
je
retf
sub
mov
(bad)
fadd
adc
mov
fs
cld
pop
push
cmp
into
enter
shl
mov
mov
cmp
add
mov
jbe
sub
in
lock
mov
sbb
sub
bound
fs
xchg
lea
bound
ficomp
sbb
adc
test
mov
and
fs
jo
push
xor
mov
add
shl
popa
adc
imul
fs
sub
pop
mov
lods
test
inc
pusha
enter
jo
pusha
aam
test
in
ds
test
scas
movs
cld
ins
pop
int3
mov
cs
sar
sub
sub
push
mov
popa
or
fnsave
mov
sub
mov
fdiv
enter
sahf
pop
das
add
pusha
pop
adc
pop
ror
and
jl
add
xchg
js
cmp
sahf
or
fs
les
js
add
pop
mov
into
adc
test
or
xchg
cld
or
mov
pushf
pusha
es
and
xor
and
mov
inc
test
cmp
in
fcomp
add
sub
push
or
sbb
shl
pop
inc
ins
xchg
or
fisttp
jmp
cmp
lahf
pusha
cmp
mov
push
adc
sub
pushf
sar
dec
(bad)
cmps
and
fs
ins
dec
mov
rcr
test
in
mov
cmc
pop
paddusb
sub
push
outs
jmp
inc
ss
xor
sub
hlt
(bad)
fsubr
nop
jae
xor
fs
fiadd
push
xchg
outs
cmp
cmp
aam
adc
in
call
xchg
add
and
sub
push
cmps
sti
pushf
rcl
sbb
dec
jo
pusha
inc
je
stos
popa
enter
or
or
xchg
adc
xchg
push
mov
pop
fs
mov
xchg
inc
jle
(bad)
shl
sbb
clc
cwde
loopne
call
fs
cmp
shr
aad
fadd
add
stos
cwde
hlt
cmps
cld
scas
inc
loope
out
pop
int3
dec
fcom
fsubp
add
mov
or
jae
daa
sub
test
add
add
and
cdq
in
push
popf
ins
sbb
outs
mov
(bad)
push
mov
mul
call
loopne
lods
cmps
cmp
movs
xor
dec
cld
mov
js
jl
sub
lock
enter
icebp
mov
or
ja
addr16
xor
add
nop
or
loopne
loope
inc
xor
pop
aam
cmp
lods
pushf
test
mov
and
jo
ret
adc
push
inc
xor
push
adc
or
xor
test
shr
xchg
lea
aam
fsubr
inc
cs
jle
stc
or
jo
add
mov
cld
std
sub
xchg
mov
aam
daa
cmp
les
adc
retf
or
nop
lock
sbb
xchg
dec
dec
xor
push
pop
pusha
cld
pop
jmp
loope
jp
mov
enter
movs
push
xor
xchg
outs
sub
fs
data16
sub
push
test
fcmovnu
and
jl
ins
sbb
xor
sbb
dec
ins
mov
test
dec
pop
add
sub
add
push
aad
ins
jne
je
mov
xor
cli
pushf
push
and
les
add
pop
test
out
push
mov
mov
je
fsub
adc
cmp
mov
dec
cwde
and
or
or
ror
test
xchg
push
push
les
lods
mov
out
dec
dec
dec
daa
in
inc
jae
mov
dec
cli
xor
push
call
fldenv
je
adc
je
jbe
xor
in
fcomp
jo
inc
in
dec
pop
sub
pop
fsub
movs
mov
clc
lock
lods
sbb
stc
mov
adc
mov
jge
movs
mov
fcomp
sbb
outs
clc
pop
icebp
push
mov
lods
dec
in
xchg
les
sbb
les
cmp
std
push
mov
dec
cld
(bad)
sbb
sbb
inc
dec
jp
mov
mov
inc
mov
pushf
lahf
aam
js
adc
dec
cwde
ds
sbb
mov
dec
dec
clc
cmp
push
shl
and
int3
xchg
fs
movs
ret
mov
int
cmps
adc
inc
je
clc
adc
lock
test
lods
xchg
cld
jmp
adc
add
inc
xchg
loop
fcom
nop
pop
mov
loop
jns
mov
sub
imul
scas
movs
inc
mov
mov
hlt
mov
mov
inc
cmp
test
int3
xor
cmp
out
enter
aas
enter
cmp
inc
data16
add
js
cmp
add
cwde
lods
mov
fs
pop
or
arpl
adc
enter
pusha
pop
sub
outs
push
mov
movs
retf
arpl
lea
xchg
jl
push
loopne
lods
movs
add
add
loope
call
pop
lock
jmp
ins
sbb
mov
sbb
nop
int3
xchg
push
jae
mov
retf
mov
lea
(bad)
mov
call
sub
rcr
cs
jmp
jle
pop
nop
push
adc
push
adc
pushf
int
adc
mov
out
mov
inc
and
sub
je
popf
or
or
ja
inc
or
mov
cld
call
push
mov
sub
pushf
or
sub
push
fdivr
mov
mov
int3
mov
pop
push
xchg
clc
mov
arpl
dec
or
push
add
retf
lods
xchg
int3
pop
adc
xlat
add
das
cld
mov
inc
jno
pusha
add
add
cld
retf
cwde
adc
push
pop
push
adc
pop
cmp
in
mov
lea
jno
fadd
cld
cmp
push
sbb
aad
les
or
xor
in
dec
in
setge
push
or
push
cmp
cmp
jge
mov
xor
aam
cmp
pushf
push
stos
sbb
loopne
mov
and
sbb
popf
rcl
adc
and
cld
in
in
mov
sti
mov
push
int3
jb
jns
loopne
out
xchg
dec
sbb
lods
in
cmp
in
or
cld
inc
sahf
push
test
cmp
nop
inc
adc
and
sbb
daa
cmp
(bad)
add
sub
xchg
or
hlt
or
nop
(bad)
jl
cs
pop
bound
or
les
std
sub
or
hlt
mov
test
jno
js
push
test
or
xchg
call
sbb
shl
pop
jns
pop
and
icebp
cmp
inc
ret
imul
mov
xor
rol
adc
dec
lods
shl
lods
sbb
add
push
je
nop
test
and
pushf
push
(bad)
cld
mov
adc
pop
jb
cld
jl
sahf
mov
mov
push
dec
inc
sub
add
nop
jge
data16
fld
sbb
jle
fwait
cwde
sbb
xchg
pushf
push
cmp
cmp
push
adc
lods
test
out
ror
adc
fdiv
les
mov
or
loopne
mov
adc
mov
sbb
dec
ins
jo
push
xor
cld
jmp
hlt
xchg
and
mov
add
cmp
nop
jo
stos
pop
xchg
mov
cmp
bound
mov
les
(bad)
sub
jmp
mov
movs
mov
cmp
and
mov
into
inc
add
je
sbb
xchg
jle
clc
movs
and
test
mov
ins
arpl
in
(bad)
rcr
sub
inc
lods
enter
jl
and
aad
xor
push
mov
xor
test
xor
pop
ret
sbb
dec
test
cli
mov
add
lahf
cwde
test
and
inc
xchg
inc
movs
test
xor
frstor
ins
mov
add
sub
mov
jl
sub
pop
jmp
xchg
bound
std
cwde
dec
ficom
add
cmc
out
clc
mov
mov
cmps
sub
xor
jmp
in
inc
pop
stc
les
or
pushf
adc
mov
enter
xor
jae
or
gs
sahf
test
int3
fdivr
add
jnp
sub
aam
mov
mov
push
in
inc
fsub
pushf
es
ins
loopne
retf
int3
leave
pop
jo
fidiv
mov
sbb
or
lock
shl
sub
pop
sti
movs
cmp
es
(bad)
mov
adc
mov
rcl
sbb
ja
xchg
add
xchg
nop
xlat
mov
test
dec
mov
mov
retf
pusha
out
lods
nop
xor
jl
cld
and
xor
out
push
jb
imul
fdivr
and
sbb
stos
cmps
mov
stos
add
out
jmp
adc
pushf
mov
mov
jg
ins
mov
aam
adc
sbb
loopne
test
push
pop
cmp
jo
fcom
jo
sti
cld
js
inc
repz
sbb
ret
sub
pusha
stc
fmul
sub
sub
xor
idiv
inc
or
add
fs
hlt
loope
and
ins
push
xchg
mov
(bad)
aam
in
lods
loopne
or
pusha
mov
or
loopne
enter
js
enter
mov
mov
aam
adc
cmp
dec
xchg
mov
pop
push
mov
pop
jge
imul
lea
popf
mov
adc
cld
dec
add
fld
lds
fdivr
outs
xchg
sbb
sbb
ins
in
(bad)
xchg
enter
sbb
xor
aad
cld
jo
pop
lods
fadd
mov
test
ret
movs
mov
mov
and
mov
add
sbb
hlt
adc
mov
rol
int3
mov
or
pop
jo
nop
aam
cld
sub
sbb
(bad)
sti
pop
jnp
inc
or
std
mov
loopne
out
push
mov
mov
sub
jo
std
inc
rcl
gs
jl
sar
sub
sahf
cld
or
fadd
fimul
(bad)
clc
push
or
sbb
sbb
test
int3
mov
ret
inc
push
xor
test
stc
and
mov
mov
adc
xor
arpl
test
sub
cld
shr
frstor
out
cwde
fadd
or
stos
or
sub
out
sbb
cdq
mov
mov
js
jo
or
(bad)
cwde
pop
lods
sbb
ret
xor
in
mov
stos
mov
xchg
cmc
bound
in
jae
js
inc
aas
into
push
add
mov
pushf
bound
mov
clc
mov
push
mov
adc
call
je
or
pop
adc
cmc
cs
jl
sar
xchg
shl
shl
push
and
pop
ins
call
fcmovb
jb
and
aam
fisub
mov
dec
mov
(bad)
sub
movs
jl
and
and
(bad)
mov
mov
xchg
mov
cld
fist
jl
or
ins
repnz
xor
or
loope
nop
inc
xchg
sub
hlt
dec
jl
mov
int
inc
loopne
mov
push
cli
mov
pop
cmp
add
add
lods
mov
ret
sbb
mov
or
add
je
xor
mov
inc
mov
sbb
mov
mov
pusha
pop
add
mov
mov
fs
xchg
and
stos
sub
push
aad
cmp
inc
push
adc
hlt
idiv
bound
or
cmps
fs
in
push
loop
mov
test
or
sub
lds
sbb
shr
pop
jge
loope
pop
fldcw
mov
or
inc
sbb
movs
sbb
pop
inc
loopne
ins
les
cmp
cmp
in
sti
cld
push
pop
push
pusha
sbb
sub
xchg
loopne
cli
add
sbb
sahf
sbb
mov
or
pop
or
jo
test
adc
nop
test
ins
in
aad
mov
enter
pop
aam
lods
test
lock
cdq
mov
mov
xchg
jp
and
out
add
push
stc
int3
and
adc
mov
sbb
loopne
mov
add
mov
(bad)
adc
push
add
sub
cdq
adc
int3
pusha
adc
mov
inc
cld
jge
shl
shl
popf
(bad)
test
or
push
fs
fcom
out
call
inc
or
out
or
sub
out
in
retf
dec
(bad)
xor
fsub
dec
push
js
outs
inc
sub
enter
add
sub
test
mov
xchg
mov
pusha
(bad)
cmp
xor
jecxz
in
mov
cmps
adc
out
lods
(bad)
xchg
push
cmp
or
test
mov
xor
outs
adc
(bad)
dec
ins
or
int
int3
(bad)
sbb
movs
test
or
movs
fsubr
icebp
hlt
jmp
add
scas
gs
in
hlt
push
pushf
xchg
jo
sbb
stc
movs
mov
add
xor
xor
or
fisub
pop
(bad)
(bad)
adc
fcom
les
jmp
repnz
int3
mov
sub
dec
pop
movs
jns
mov
int3
mov
mov
cmp
xor
pusha
inc
mov
test
push
lods
jo
adc
pusha
in
jmp
mov
and
sub
sub
enter
hlt
mov
jl
or
sub
push
addr16
or
or
ja
cmc
test
mov
pop
pop
repnz
dec
stc
nop
fcomp
pop
loope
or
std
(bad)
jo
pop
push
pusha
adc
add
popf
xchg
retf
ds
int3
mov
clc
pop
ins
adc
call
cmp
adc
rcl
les
mov
xchg
or
sar
or
mov
pop
retf
dec
jb
addr16
in
inc
jo
cmp
loop
cdq
cmp
xchg
push
mov
leave
nop
xor
pop
retf
in
in
push
nop
pushf
mov
cmp
xor
hlt
jns
pop
mov
aam
sbb
nop
dec
and
pusha
imul
hlt
inc
jo
push
push
mov
inc
clc
adc
pop
inc
mov
loopne
(bad)
enter
push
dec
cld
out
ror
push
and
je
pop
inc
cmp
mov
dec
or
ins
add
enter
frndint
add
jnp
rcr
stos
(bad)
dec
push
clc
loope
test
cmp
(bad)
and
movs
xchg
and
mov
dec
loope
pusha
push
sub
outs
les
or
adc
test
shr
dec
movs
popf
xchg
sbb
loopne
dec
dec
jns
cwde
push
shr
and
ins
pop
sbb
or
xor
rcl
inc
int3
mov
arpl
lock
rcl
jle
xchg
aas
loopne
stos
mov
mov
xchg
into
cwde
adc
cld
jmp
push
push
std
cmps
les
add
stc
pushf
shr
adc
mov
dec
enter
dec
adc
cld
mov
in
hlt
mov
sub
dec
mov
or
in
xchg
fadd
or
(bad)
and
pop
inc
mov
hlt
ss
xchg
in
mov
rcl
xor
aaa
in
in
lds
retf
inc
lods
mov
lock
loop
loopne
push
and
je
sbb
adc
repz
sar
popa
xor
dec
loopne
or
xchg
jno
pushw
int3
ret
les
dec
jnp
rol
(bad)
and
or
mov
and
pop
mov
sub
mov
cmp
and
pop
fadd
add
cmc
les
pushf
shr
fsub
mov
mov
push
std
iret
test
mov
lock
nop
mov
sbb
xor
fidivr
mov
xchg
call
sub
int
fs
icebp
jl
hlt
dec
loopne
xor
je
sbb
adc
sub
xchg
in
inc
shl
sahf
jl
add
les
or
pushf
fisub
push
dec
dec
mov
cli
mov
mov
in
and
test
out
fwait
(bad)
(bad)
xor
ss
add
les
(bad)
jo
dec
dec
mov
pop
outs
inc
jge
loopne
or
sbb
loope
cmps
sub
jne
lea
sub
cmps
xchg
rcr
adc
enter
test
push
js
fdivr
mov
sbb
lods
ins
outs
aam
mov
cwde
cld
jo
push
add
sub
add
mov
jno
inc
adc
test
lock
stos
add
mov
cmps
push
sub
and
inc
cmp
movs
sub
cmp
cmp
in
popa
push
in
lods
sar
hlt
mov
jle
int
sbb
mov
popa
cwde
call
or
fcom
pop
jo
mov
inc
ins
int3
test
jo
or
and
mov
lea
lahf
jp
add
out
retf
call
inc
ror
mov
fdiv
jmp
dec
nop
stc
mov
mov
jle
js
sub
jmp
pop
sbb
adc
jmp
mov
test
lods
popa
je
mov
sbb
pusha
loope
mov
out
in
mov
mov
xchg
add
ret
out
mov
push
xor
cmp
(bad)
aam
mov
movs
rcl
push
in
(bad)
sbb
loopne
sub
adc
mov
call
push
sbb
test
inc
jge
rcl
popa
sbb
in
jle
xlat
loopne
mov
jno
int3
mov
mov
movs
pop
xor
push
sbb
mov
cli
fwait
in
aam
fsub
sub
jno
and
dec
bound
pop
mov
adc
adc
jl
sub
scas
cmp
or
sbb
and
hlt
inc
fs
sub
cld
mov
fist
pusha
push
call
xchg
(bad)
in
retf
out
pop
int3
(bad)
push
imul
push
(bad)
sub
sub
dec
xchg
mov
inc
dec
call
shl
int3
mov
clc
sbb
add
sub
gs
xor
and
sbb
mov
jle
out
xchg
dec
cmc
dec
pushf
fld
hlt
js
loopne
mov
mov
out
push
cmps
pop
adc
pop
jle
mov
cwde
ffree
das
or
dec
mov
push
les
push
pushf
or
mov
lods
sbb
scas
adc
fdiv
sbb
jmp
cmp
cld
(bad)
push
and
pusha
add
sub
push
enter
mov
call
jns
xchg
add
xchg
loopne
cmp
dec
shr
rcr
jne
les
sbb
xchg
fdiv
jno
pop
push
and
sub
and
call
or
mov
jno
rcr
lahf
int
mov
int3
jp
shr
mov
jmp
jp
mov
xor
jp
sbb
jl
lods
jp
into
xor
add
pop
mov
push
es
sar
or
fdiv
loopne
sub
lods
push
and
cmp
int
xchg
ds
js
retf
and
sbb
in
sbb
lock
pop
and
mov
inc
pop
fdiv
cwde
inc
in
cmp
sub
int3
xchg
call
sbb
loope
rol
(bad)
cli
push
mov
ffreep
nop
or
cmp
test
jns
sbb
jo
nop
inc
push
les
mov
dec
je
sbb
pusha
lock
xchg
inc
hlt
dec
enter
mov
pop
out
xor
lods
in
or
aam
sub
loopne
dec
adc
lods
dec
and
scas
in
loopne
or
les
test
inc
mov
mov
in
jnp
inc
mov
mov
loop
jmp
adc
shr
movs
xlat
cwde
fstp
or
ret
enter
lods
call
mov
ins
pop
arpl
or
movs
dec
hlt
and
cmp
mov
shl
ficomp
movs
adc
push
adc
in
sub
adc
fcom
ror
jge
fs
mov
mov
add
and
fwait
xchg
inc
fs
xchg
sar
dec
ds
loopne
xor
xor
scas
or
cmc
les
or
int3
mov
cwde
fild
cmp
arpl
push
ins
add
mov
mov
cmc
sbb
stos
pusha
push
sbb
fsubr
pop
idiv
jp
clc
pusha
in
or
pop
mov
dec
push
push
sub
add
and
int3
sahf
xchg
ins
mov
aas
xor
nop
dec
dec
xor
call
and
add
call
jmp
push
(bad)
lock
clc
and
pop
int3
ss
push
xchg
in
movs
pusha
adc
mov
pop
inc
ins
xor
fisttp
sahf
adc
out
lods
sub
inc
aad
jecxz
xor
in
push
xchg
cmp
pushf
rcr
pop
jnp
sbb
test
xchg
cmps
cmp
test
or
clc
loopne
sub
out
mov
push
lea
jl
fmul
pop
xor
push
adc
test
inc
mov
in
ror
loopne
add
xchg
adc
retf
in
xor
cs
addr16
bound
xlat
ds
sbb
mov
nop
test
retf
jo
mov
sbb
sbb
aad
movs
mov
movs
faddp
pop
pop
pusha
push
clc
ret
xor
ret
hlt
adc
mov
xor
inc
lods
fdiv
add
mov
enter
cmp
jo
jb
xchg
movs
rol
and
and
mov
or
popf
fs
or
in
cmp
fs
xor
clc
sbb
pop
adc
aam
jecxz
push
mov
xchg
ficomp
xor
sub
or
repnz
bnd
int3
adc
pop
hlt
inc
sbb
pushf
mov
cmp
sub
pushf
adc
test
xor
dec
xchg
int
mov
fcmovnu
cmp
jl
fild
fdivr
mov
movs
cli
hlt
sar
adc
jl
jmp
mov
or
xchg
jge
dec
inc
(bad)
shl
pushf
mov
cld
jl
in
mov
jo
int
out
(bad)
jb
cmp
call
xchg
and
sub
xor
enter
xchg
je
adc
inc
jmp
je
js
adc
mov
mov
movs
push
icebp
fstp
in
lods
mov
mov
mov
sub
and
fwait
or
hlt
ret
xor
push
sbb
pop
movs
inc
jmp
in
sub
gs
lods
in
cmp
jo
cs
lods
xchg
push
fdiv
hlt
fmul
inc
sub
xor
jne
pushf
and
shr
nop
xchg
lods
jl
xchg
adc
shl
jmp
test
pop
sbb
(bad)
cwde
shl
sbb
mov
and
mov
in
iret
jecxz
xor
cmp
pop
or
enter
and
pusha
sub
mov
mov
mov
fld
push
ins
rcl
fadd
xor
sub
loopne
xchg
cwde
pop
js
sub
ror
test
shr
cmp
je
xabort
sbb
hlt
jo
clc
jmp
mov
inc
pop
lods
inc
out
cmp
ficom
xchg
adc
cmp
cmp
xchg
js
xchg
xor
pop
loop
rep
xor
lock
mov
cli
push
pop
cmp
sbb
pop
inc
pushf
cli
mov
sub
sub
lea
push
or
push
fsubr
movs
pusha
xchg
xchg
push
jl
or
xor
call
push
pop
cld
cmc
(bad)
fisubr
push
shr
push
dec
fwait
hlt
arpl
js
outs
jno
sub
push
cmps
mov
mov
imul
mov
sbb
fsub
cmp
hlt
js
cld
mov
imul
dec
pushf
sbb
je
sub
push
pop
mov
and
dec
ins
aad
cmp
cmp
hlt
icebp
in
or
xchg
push
sbb
lock
ret
dec
jl
je
mov
pusha
add
pusha
lods
cmc
push
retf
adc
and
hlt
pushaw
push
xchg
add
int3
enter
mov
inc
je
and
ffree
add
in
in
sub
mov
mov
sub
xor
or
push
rcl
mov
pop
outs
push
xor
aad
jno
inc
push
dec
pop
jo
mov
ret
mov
fs
out
fistp
xor
fcom
add
or
and
jo
js
fnstsw
sub
movs
int3
xchg
and
push
xor
xor
jl
or
test
icebp
cwde
fadd
in
dec
mov
int
xor
les
(bad)
fild
mov
and
movs
mov
mov
mov
push
mov
js
dec
jge
test
pop
js
dec
jae
(bad)
mov
dec
rcl
loop
in
xor
xor
and
repnz
je
pop
sub
and
(bad)
loopne
mov
xchg
lods
jle
in
in
push
std
cmp
xchg
scas
sub
enter
push
mov
shr
int3
push
mov
gs
sbb
jmp
shl
inc
sbb
loopne
call
mov
lock
in
lods
call
rol
mov
movs
mov
pop
ins
les
out
sub
mov
nop
aam
or
test
pop
sbb
cmp
cld
fidiv
inc
and
ins
dec
hlt
pop
sbb
aam
out
sbb
mov
inc
shl
xor
bnd
frstpm(287
aad
pop
adc
sbb
les
sub
sub
call
push
sbb
nop
jg
in
sbb
jo
scas
cmp
push
mov
pop
ds
cmp
rcl
sbb
ja
sbb
repz
mov
nop
mov
jb
inc
shr
or
push
fidiv
xchg
test
lock
cwde
mov
jecxz
in
shr
fs
and
call
add
enter
lea
or
mov
cld
add
mov
loopne
mov
icebp
test
sbb
enter
retf
jmp
push
cmp
mov
add
inc
add
xor
mov
or
add
sar
xor
xlat
dec
cmp
je
sar
neg
les
(bad)
clc
sub
jbe
mov
sbb
and
in
les
cld
mov
mov
and
test
lock
icebp
adc
sub
(bad)
mov
mov
in
(bad)
clc
cmc
lods
popf
lock
jne
or
pop
mov
pop
push
and
int3
(bad)
mov
adc
add
jbe
and
stc
call
add
cmp
cmp
adc
in
and
call
xchg
lods
dec
test
in
mov
shr
and
mov
clc
and
cld
je
sbb
and
adc
out
loopne
inc
and
xor
(bad)
jle
in
int3
xlat
sbb
sbb
out
movs
sbb
jo
sbb
out
int3
inc
(bad)
out
sbb
and
je
cmp
push
jno
mov
add
test
jnp
mov
mov
inc
cmc
mov
mov
hlt
push
mov
cmc
sbb
or
sar
xchg
fsub
jl
test
push
sub
adc
mov
dec
push
xlat
in
or
fs
js
add
add
cmp
clc
mov
dec
add
enter
shr
retf
xor
jl
mov
cmp
sub
push
xor
ss
jmp
ins
ins
push
nop
outs
aam
je
or
xchg
cmps
mov
xchg
or
inc
shl
lods
pusha
in
mov
data16
mov
call
test
and
pop
movs
js
inc
bound
dec
dec
aad
jno
ins
add
xor
test
pop
lods
sar
mov
and
dec
dec
fld
push
aam
test
and
popa
pop
and
cmp
and
daa
out
inc
jb
js
je
jns
lods
in
rol
push
mov
je
call
shr
xor
iret
js
out
retf
and
mov
mov
and
push
jo
clc
xchg
mov
lahf
sbb
lods
pop
jl
nop
imul
push
dec
addr16
(bad)
hlt
imul
bnd
mov
pop
loope
xor
je
repnz
test
out
mov
daa
sub
lea
fwait
ins
xor
inc
gs
sub
lock
in
push
push
aaa
inc
add
mov
call
xchg
sahf
je
loopne
(bad)
fmul
sbb
add
(bad)
pop
dec
cmp
sbb
push
int3
fs
push
js
inc
jl
les
(bad)
les
gs
cwde
mov
push
test
call
cmp
cmp
xchg
and
cmp
int3
imul
sbb
xchg
shl
sti
movs
mov
dec
call
push
cmp
call
jle
push
out
add
cld
clc
sub
das
xlat
movs
nop
inc
lock
sbb
and
sub
sbb
push
push
pop
stc
xor
sbb
cmp
pop
push
jmp
call
push
xchg
popf
mov
xor
add
and
and
pop
stos
movs
mov
js
or
shl
fisub
xchg
push
sbb
add
cdq
or
in
fsubr
jl
out
inc
mov
shl
aad
dec
mov
mov
int3
mov
dec
pusha
add
adc
aam
cld
xchg
push
lods
fsub
call
pop
in
into
cmps
sbb
mov
ror
fdivr
and
cwde
pop
dec
and
fadd
test
shl
pushf
xor
inc
xchg
xor
adc
popa
inc
lea
fidiv
xor
shr
nop
fmul
test
fcomp
les
jno
popf
cmp
outs
add
mov
xor
xor
or
mov
mov
data16
(bad)
mov
dec
sti
adc
fmul
adc
cmp
(bad)
stos
inc
ds
mov
cli
fsubr
pop
mov
add
out
mov
mov
xor
mov
inc
mov
enter
js
lods
in
sti
and
push
movs
inc
cdq
enter
pop
xor
aaa
pusha
mov
ins
fcmovu
pop
jns
sub
or
mov
add
pop
outs
and
loopne
mov
hlt
mov
mov
aaa
scas
pop
adc
jo
sbb
sub
xor
mov
test
test
jle
pop
jbe
fsubr
movs
icebp
and
add
dec
retf
inc
adc
mov
scas
dec
and
or
enter
stos
mov
mov
loop
loop
xor
mov
test
jge
pop
loopne
dec
add
lods
retf
(bad)
enter
adc
sahf
je
sbb
sub
ror
cmp
add
test
xchg
cmp
jne
outs
adc
add
mov
les
sub
push
outs
pop
mov
sub
sub
push
xor
xchg
dec
cmp
or
cld
sbb
mov
shr
sbb
jo
call
inc
xchg
enter
push
mov
loopne
inc
xor
mov
call
aaa
xor
or
or
bound
sub
dec
mov
mov
fs
int3
retf
xor
add
int3
mov
jb
pusha
in
fcomp
out
out
int
out
loopne
stos
pushf
shr
or
sbb
cwde
or
push
adc
adc
cld
jl
movs
pop
xchg
hlt
mov
sub
inc
mov
mov
call
add
(bad)
mov
jp
cld
sub
jo
cmp
mov
inc
aad
adc
adc
push
mov
nop
mov
mov
sbb
outs
mov
inc
shl
jl
inc
sub
mov
cmp
mov
rcr
popa
mov
sub
les
call
fstp
int
xchg
sbb
mov
loopne
in
ds
call
movs
frstor
jbe
fsub
int3
jb
clc
mov
adc
and
popa
jb
arpl
aam
cld
push
add
mov
mov
cld
or
lock
jmp
(bad)
(bad)
loopne
add
or
clc
fwait
pop
js
add
xchg
aad
sub
dec
dec
nop
xor
fsubr
xor
pusha
jle
gs
inc
loopne
cdq
xor
mov
adc
out
cld
jmp
add
cmp
in
or
fsub
test
cmp
in
mov
in
inc
sbb
mov
fs
frndint
adc
fadd
lahf
cdq
mov
xchg
cmp
sar
je
pop
call
push
loop
call
les
sub
adc
movs
cmp
outs
push
loopne
jns
jl
aas
in
push
fadd
mov
loopne
adc
sub
xchg
icebp
cmc
lock
push
out
pop
mov
rcl
ja
mov
mov
xor
pushf
dec
mov
push
xchg
cmp
in
je
into
ret
mov
inc
push
ins
in
les
push
mov
dec
mov
in
dec
pop
lock
or
les
jo
pop
sbb
mov
cmp
inc
jle
gs
fbstp
xchg
js
inc
mov
cmps
push
out
sbb
push
ins
mov
sub
fbstp
jl
or
ins
mov
sub
dec
retf
push
or
jle
xchg
add
lods
fisub
mov
js
shr
xor
cld
mov
push
dec
or
cwde
test
je
pop
das
ins
jae
js
enter
or
popf
and
pushf
mov
cmp
sub
or
mov
fisubr
scas
or
sub
xchg
and
jl
push
mov
fnstsw
cwde
jp
push
rcl
dec
mov
rol
(bad)
dec
cmp
add
outs
clc
shl
fisubr
nop
adc
xchg
fsubr
jl
dec
add
clc
enter
adc
out
lock
cmps
mov
fdiv
pop
sbb
adc
xor
repnz
push
inc
or
aaa
fld
xchg
pop
icebp
ret
add
pushf
jl
sar
hlt
out
mov
(bad)
jo
icebp
push
xor
mov
retf
sldt
call
and
xor
inc
mov
dec
sub
mov
movs
cmp
dec
lahf
add
inc
sub
jmp
dec
les
clc
add
mov
popf
push
inc
push
cmp
xchg
mov
mov
fmul
jo
pusha
xlat
and
pop
mov
test
jo
add
push
cld
dec
mov
iret
push
xor
mov
inc
mov
cmp
cmp
add
jp
cwde
test
nop
sbb
xor
pop
jne
aad
add
sub
mov
cmp
ds
adc
int3
add
fild
(bad)
fmul
jmp
and
outs
add
(bad)
pushf
les
and
dec
inc
mov
fadd
mov
jl
popa
pop
mov
cmps
sbb
push
div
sar
adc
hlt
call
inc
or
push
push
xchg
push
and
inc
stos
add
jo
outs
int3
mov
jmp
les
les
xchg
jl
xchg
js
loop
sub
fsub
sbb
cmp
xchg
cmp
repnz
in
or
movs
and
add
cmp
cwde
mov
mov
cmp
fdivr
pop
test
div
pushf
(bad)
in
xchg
jns
pusha
sub
pop
xchg
(bad)
cmp
inc
fnstsw
mov
(bad)
adc
xor
and
mov
push
(bad)
sbb
cld
adc
pop
mov
pushf
sub
sbb
sbb
test
cmp
jns
loope
dec
xchg
ror
adc
int3
call
push
adc
(bad)
(bad)
enter
pushf
xor
loopne
cli
cmp
push
hlt
je
pushf
fld
jp
aam
int
adc
rcl
xchg
cmps
mov
push
lock
and
add
sub
call
and
mov
sbb
clc
xchg
add
jb
sub
sbb
lods
daa
fsub
jl
fs
pushf
fld
sbb
dec
lock
add
sbb
pushf
clc
out
jmp
push
cwde
mov
in
rcpps
imul
inc
adc
fsub
movs
in
cmp
sar
push
add
pop
cli
cwde
pushf
movs
add
mov
or
mov
aaa
int3
mov
in
or
or
loopne
push
xor
pop
pop
lds
pop
ins
gs
jp
cmps
in
stos
adc
enter
movs
dec
sub
mov
js
and
xor
and
nop/reserved
sbb
add
or
mov
ds
es
or
hlt
fs
jp
or
cli
inc
pushf
dec
add
int3
jl
inc
or
nop
lea
mov
dec
mov
xor
in
xchg
pop
jo
sbb
push
push
(bad)
mov
adc
fsub
xor
enter
dec
mov
pop
hlt
xchg
jno
mov
loopne
ficomp
out
nop
in
inc
push
pop
jl
icebp
mov
pop
push
and
sbb
cld
cld
int3
inc
adc
sbb
pusha
dec
or
lods
cmp
aas
or
in
and
adc
fsub
imul
cmp
call
and
push
xchg
(bad)
mov
fidiv
outs
cld
aad
sbb
arpl
scas
fisubr
popf
and
je
push
xor
mov
es
add
int3
mov
or
mov
in
(bad)
push
add
cmp
xchg
inc
addr16
imul
cmp
outs
pop
mov
mov
xchg
push
aam
das
ins
sbb
lock
call
fwait
sbb
call
sub
call
or
in
sbb
mov
mov
pop
cmp
ins
in
or
or
test
mov
idiv
dec
cmp
or
add
loope
enter
push
xchg
xchg
fsub
adc
jb
jecxz
rcr
mov
inc
fwait
dec
sub
imul
jne
mov
js
pusha
sub
xchg
shr
sub
jl
movs
aad
pop
push
pop
cld
mov
pop
lods
shl
call
loopne
lods
cmp
adc
or
fcmovb
cdq
cmp
inc
mov
or
mov
lods
adc
cli
sbb
xor
pop
popa
sbb
mov
lock
retf
sbb
in
xchg
jle
in
fild
gs
pop
stc
rcr
js
dec
cld
dec
add
mov
fs
call
push
mov
lea
and
call
test
ins
dec
sub
push
push
in
mov
lea
test
int3
inc
mov
jle
clc
cmp
lock
push
lock
adc
ds
movs
stc
push
sar
or
xor
pushf
push
aad
jbe
outs
pop
mov
je
mov
fsub
mov
cmp
push
fdiv
test
int3
mov
cmps
rcr
push
fsub
pop
repnz
cli
es
sub
pusha
aas
cwde
mov
push
clc
inc
mov
jl
xor
jnp
(bad)
clc
dec
stc
test
ins
push
(bad)
in
mov
fs
jmp
push
rcl
leave
lock
js
lods
sbb
cld
pop
int
retf
inc
cwde
cmp
mov
xor
stc
mov
int3
fsub
push
mov
cmp
push
mov
sbb
add
cwde
(bad)
or
mov
add
pop
je
pop
sub
das
test
in
cmp
and
fcomp
pop
push
outs
dec
aad
pop
add
int3
rol
mov
or
fs
xchg
in
cmp
or
and
int3
mov
push
test
xchg
jmp
sub
ds
pop
jbe
mov
adc
(bad)
test
shl
xchg
dec
test
mov
pop
jle
stos
sub
inc
call
inc
jecxz
in
pop
inc
xor
clc
xchg
nop
fidivr
add
hlt
test
add
pop
fs
loopne
jmp
js
add
dec
dec
nop
fistp
out
push
out
push
aam
fmul
xor
lods
push
add
test
es
(bad)
clc
jl
movs
pop
push
(bad)
add
mov
sbb
call
int3
pop
in
push
mov
or
xor
cmp
add
sub
(bad)
mov
dec
mov
inc
and
je
jns
addr16
or
push
cmps
clc
or
lock
les
in
rcl
add
add
hlt
in
pop
sbb
icebp
das
cld
xchg
adc
hlt
inc
pushf
pusha
and
lods
mov
cld
movs
adc
nop
mov
lock
inc
test
cmps
add
movs
push
ds
push
mov
lds
mov
and
adc
imul
pushf
xchg
cmc
cmp
add
sbb
les
into
push
push
nop
lea
jne
pop
mov
jne
mov
xor
push
sub
in
enter
pop
adc
adc
inc
test
rol
pusha
xor
xchg
or
add
lods
aaa
fisttp
int3
ret
add
xchg
mov
sub
inc
mov
pushf
pushf
fs
in
lods
pop
mov
lea
jg
pusha
sub
add
ins
cld
movs
(bad)
push
fldenv
dec
lea
dec
js
and
inc
inc
(bad)
xchg
mov
inc
imul
xchg
mov
call
or
mov
sbb
cmp
add
lods
mov
rol
mov
cld
ins
jb
outs
rcl
sub
mov
sub
test
into
push
retf
movs
js
pusha
hlt
jecxz
call
push
fdivr
fs
xchg
addr16
add
mov
xor
dec
pop
mov
lds
inc
out
in
xor
push
cld
or
mov
cwde
xchg
(bad)
mov
cmps
or
or
push
enter
clc
fimul
repnz
in
or
mov
clc
pusha
aas
add
mov
or
mov
cmp
loope
(bad)
push
xchg
clc
icebp
sahf
sbb
xor
out
js
inc
cmps
or
jmp
jmp
test
adc
add
imul
mov
jae
xchg
inc
cmp
sbb
add
jno
jmp
sbb
add
sbb
xor
in
int3
shl
rcl
mov
movs
jo
cwde
fadd
or
jae
inc
ins
add
in
cmp
lock
in
sub
repz
call
shl
or
cmp
push
(bad)
mov
pop
imul
inc
rcl
ret
mov
fsubr
shr
xchg
or
or
push
cmc
cwde
jecxz
mov
mov
add
dec
xor
int3
inc
xor
fstp
fprem
pop
sbb
dec
dec
ins
mov
scas
(bad)
pop
mov
fcomp
add
clc
cmp
inc
js
test
push
xchg
dec
(bad)
cld
sub
xor
out
outs
cmp
push
call
sbb
mov
in
stc
jo
aas
mov
adc
add
in
adc
add
dec
xchg
repz
test
xor
ins
movs
mov
call
je
std
push
in
int3
(bad)
jo
sbb
adc
pop
xchg
add
pushf
and
and
push
dec
cmp
outs
adc
movs
mov
adc
pop
adc
pusha
fdivr
dec
shl
in
or
cld
mov
and
mov
dec
mov
data16
xchg
xchg
fs
or
movs
lods
xchg
cmp
jle
inc
push
xchg
jp
and
jo
pusha
jo
nop
push
fdivr
cmps
shl
pusha
les
pop
sub
jnp
sub
pop
lods
cdq
into
and
dec
ins
pop
adc
cld
or
hlt
pusha
popf
scas
mov
inc
ret
push
mov
pop
in
add
pop
cmp
loopne
bnd
pop
sbb
and
push
ins
or
aam
push
call
mov
fwait
in
xor
add
je
sahf
aam
in
test
sbb
mov
pop
xor
je
cwde
jo
test
call
jo
bound
int3
cld
hlt
and
imul
in
fwait
icebp
and
fs
test
add
fidiv
pop
mov
adc
les
add
mov
js
mov
in
or
mov
pop
(bad)
cmp
adc
mov
mov
cmp
xor
adc
jmp
movs
xchg
add
add
mov
mov
sbb
stos
aad
pop
pop
add
ss
cwde
xchg
adc
xor
mov
ins
fsubr
adc
fs
in
fxch
loopne
mov
in
sub
nop
inc
lock
mov
out
pusha
les
cmp
mov
pop
cmp
push
sub
je
call
clc
mov
or
outs
sub
push
inc
(bad)
mov
aam
jge
mov
adc
mov
in
mov
in
ror
add
push
lods
test
shr
mov
fdiv
jecxz
adc
and
fs
sar
mov
test
loope
rcl
loop
int
lods
mov
add
cmp
cld
xor
mov
data16
xchg
inc
pusha
mov
cs
add
dec
sbb
hlt
out
in
add
int3
jns
sub
ss
push
sub
xchg
movs
shl
loopne
sbb
jae
js
enter
mov
sbb
pusha
ins
enter
cmp
and
mov
rcl
adc
mov
mov
movs
jl
rcr
out
adc
jmp
jb
mov
pop
pushf
adc
cmp
xchg
mov
fadd
xor
cmp
pop
lods
fsub
mov
sub
xchg
inc
int3
dec
fs
in
xor
pop
into
xchg
movs
mov
in
or
push
ins
jo
mov
dec
je
inc
je
pop
cmps
mov
in
jl
and
ins
fld
push
js
shl
sbb
jmp
push
cmps
cmp
add
jle
jge
cmp
adc
(bad)
fidiv
retf
cmp
push
jle
pop
les
adc
dec
or
in
fcmovb
mov
lods
jae
dec
mov
or
into
push
in
add
mov
xor
sub
push
jo
js
mov
ffree
adc
push
test
and
adc
mov
test
cmps
lods
adc
cld
fisub
aam
call
dec
xor
mov
mov
sbb
movs
jnp
rcl
push
js
mov
xor
mov
sub
push
mov
int
mov
xchg
sub
in
rcl
fwait
push
pop
jge
inc
sar
xchg
sub
sub
xor
sbb
ins
lahf
ins
(bad)
sub
push
sbb
fadd
mov
dec
inc
cld
dec
adc
push
je
xchg
call
push
add
xchg
in
aam
xor
and
xor
jl
mov
int
mov
push
rol
cmp
add
add
xchg
mov
ins
(bad)
inc
cwde
pop
mov
rol
mov
and
mov
test
cmp
les
push
rcl
daa
test
cmp
adc
dec
fcomp
pop
jle
in
sbb
test
(bad)
fisubr
mov
loopne
call
push
loopne
retf
lods
pop
fsub
sub
mov
xchg
pop
sbb
arpl
mov
push
mov
cmp
add
stos
cwde
icebp
sahf
cwde
addr16
xchg
xchg
cld
sbb
retf
ds
mov
in
sub
mov
mov
shl
mov
pop
sub
mov
cmp
xor
fs
fsubr
in
js
inc
loopne
movs
pushf
pop
push
pop
and
std
inc
xor
test
lods
push
pusha
and
adc
nop
xchg
push
inc
enter
call
push
nop
jge
adc
or
add
or
repnz
test
mov
push
dec
adc
cmp
pop
test
jl
xchg
lock
int
(bad)
pop
push
clc
pop
test
lock
shl
dec
xchg
adc
xor
inc
mov
stos
rcl
cmp
cdq
cmp
pop
lods
jae
dec
inc
dec
push
adc
enter
test
jo
pushf
push
les
xor
les
adc
and
or
mov
push
cld
mov
or
shr
add
jecxz
mov
clc
mov
dec
sub
cmps
xchg
int3
xor
in
mov
lea
and
pop
sub
xchg
pusha
cmp
xor
mov
xchg
jmp
pop
add
push
(bad)
and
push
sbb
pop
aaa
inc
mov
mov
sbb
retf
nop
test
mov
hlt
fistp
cmp
ror
and
dec
pushf
xor
pushf
push
inc
push
or
inc
hlt
fadd
pushf
lods
test
sub
or
cld
dec
in
mov
movs
ds
aam
and
test
inc
sbb
clc
sub
jb
and
dec
call
jbe
jae
xlat
sub
pop
and
aam
xor
cld
test
jo
mov
movs
cwde
ins
or
loop
test
add
cmps
xor
jmp
out
or
xor
or
jb
out
fadd
push
daa
sahf
int3
xchg
mov
and
cld
xor
aam
jle
in
pushf
sar
fdivr
sub
hlt
repz
jmp
fisttp
jnp
in
adc
and
pop
lods
ds
pop
add
lods
xor
test
js
fs
pop
iret
in
lods
in
cmps
mov
int
fdivr
push
fnstsw
enter
fs
or
je
pop
or
jns
rcl
dec
xor
pushf
bound
adc
and
ins
push
ret
clc
jmp
fs
adc
inc
inc
nop
adc
repnz
std
mov
dec
rol
cwde
js
imul
outs
jo
mov
in
push
cmp
imul
in
add
push
mov
fst
mov
push
jmp
movs
test
(bad)
out
sub
lods
mov
mov
dec
call
retf
pusha
sub
adc
movs
jp
imul
or
cmc
add
cdq
enter
jecxz
xor
mov
pusha
(bad)
ja
stc
sub
add
fsub
hlt
sub
xchg
test
fist
imul
and
(bad)
fcomp
lea
mov
or
fsubrp
shl
sub
(bad)
fsubr
sub
mov
loopne
loopne
pop
ins
push
mov
pop
push
mov
mov
movs
push
xchg
stos
hlt
repz
ins
lock
fcom
jl
mov
dec
pop
adc
call
or
sub
xchg
retf
dec
imul
mov
pusha
jp
shld
push
xchg
fsub
sub
call
mov
jmp
sbb
cld
loopne
shr
pop
(bad)
loopne
pusha
add
iret
cld
retf
gs
outs
cwde
mov
(bad)
mov
ins
fs
ret
pushf
scas
add
mov
repnz
hlt
cwde
and
sub
fdiv
mov
mov
xor
jle
and
or
sub
pushf
mov
out
push
push
mov
je
gs
mov
clc
loopne
pop
(bad)
cld
stos
clc
pop
inc
pop
dec
adc
cmp
xor
sub
lock
aam
push
sub
daa
sub
inc
sub
daa
cs
enter
adc
mov
jl
mov
adc
and
cmp
fwait
push
repnz
in
xor
jl
push
sub
hlt
mov
test
dec
jle
xchg
mov
pop
ret
add
mov
fs
clc
shl
int
bound
xchg
imul
fsubr
adc
fwait
pushf
sbb
loopne
or
scas
ins
pushf
mov
jl
jbe
mov
(bad)
mov
cmp
movs
or
push
pusha
popa
dec
dec
xor
cmp
mov
or
xor
test
xor
pop
in
xchg
mov
daa
jo
loope
jo
sbb
cld
in
rol
pop
in
sbb
pop
xchg
pop
mov
fwait
test
outs
push
js
push
pop
mov
les
fs
mov
dec
adc
retf
mov
xchg
mov
and
adc
sbb
or
mov
fcomp
mov
paddq
sbb
xchg
lock
sahf
jle
icebp
mov
ret
int
mov
in
int3
and
mov
sahf
xchg
or
das
pushf
sub
cmp
and
dec
loop
push
js
imul
out
jle
(bad)
lods
and
les
adc
jle
or
rcl
icebp
in
test
push
and
and
retf
push
adc
mov
pop
dec
add
adc
aad
mov
cwde
call
fild
je
js
adc
mov
cli
pop
in
mov
out
or
hlt
and
mov
adc
sbb
lock
jle
mov
stos
or
movs
add
rol
cmp
add
jbe
into
mov
movs
ins
lods
sbb
(bad)
test
rcl
adc
pop
pop
out
sbb
je
add
add
sub
enter
cdq
xchg
loopne
jle
mov
cwde
fist
aas
or
adc
jns
add
add
nop
ffree
les
mov
stc
push
adc
or
imul
adc
shl
pop
cmp
aad
lods
or
nop
mov
movs
fs
cmp
(bad)
mov
or
in
jmp
pushf
cmp
push
je
sub
push
inc
sub
adc
pop
ret
inc
adc
pop
mov
pop
mov
mov
mov
je
pop
int3
push
mov
mov
add
sar
fcomp
scas
xchg
adc
ja
pop
push
test
mov
mov
pop
hlt
xchg
jns
imul
sbb
add
popf
aam
out
fs
nop
mov
sbb
xor
push
sbb
lds
mov
jo
int3
popf
nop
cmp
xchg
xchg
push
cmp
or
fmul
clc
cwde
sub
enter
lahf
xchg
test
cmp
adc
cmp
pop
and
fcmovbe
lds
int3
mov
sbb
icebp
add
mov
xchg
int
aam
adc
addr16
inc
lods
pusha
mov
in
int3
(bad)
into
sub
push
test
adc
std
dec
xor
cmps
dec
aam
fisubr
pop
aam
xchg
rcr
mov
cmp
cld
push
sub
dec
add
popa
sub
imul
fmul
bound
xchg
mov
in
in
pop
enter
test
sub
push
mov
pushf
add
and
hlt
outs
xchg
outs
sub
bound
fbld
sbb
jmp
lods
push
adc
pushf
dec
xor
mov
fsub
jmp
iret
add
loopne
ja
or
sub
mov
clc
dec
popf
mov
sbb
in
mov
cmp
fdivr
repnz
cmc
mov
int3
stos
cs
fcomp
ror
nop
aaa
sbb
jo
call
sub
and
cld
mov
shld
mov
sbb
in
es
inc
fistp
hlt
nop
xchg
sbb
mov
add
rcr
nop
inc
sub
in
int3
inc
adc
xchg
cmp
pop
retf
jbe
mov
pushf
jge
mov
mov
push
adc
aam
xor
dec
pusha
cmps
dec
clc
mov
nop
aaa
mov
loope
xor
add
adc
mov
xor
mov
push
dec
mov
push
and
in
sub
xor
dec
and
pop
inc
mov
cmps
mov
mov
mov
(bad)
in
retf
dec
push
pusha
push
push
or
scas
stc
pushf
ret
jno
and
cld
cwde
hlt
popa
das
enter
mov
gs
int3
fcomp
movs
dec
sub
shl
dec
push
(bad)
cmp
add
mov
xchg
mov
and
pop
cmc
je
cmp
mov
and
pushf
cwde
mov
mov
jnp
aam
icebp
push
adc
(bad)
push
push
ins
dec
mov
loopne
and
xor
cmp
dec
out
or
push
and
stc
mov
and
pop
aaa
pop
pop
in
pop
cli
repnz
test
sbb
xchg
mov
adc
ins
leave
mov
lock
in
jmp
pop
mov
enter
dec
xor
in
sub
jo
dec
xchg
fdivr
add
push
js
cwde
pop
xor
mov
(bad)
enter
shl
pop
test
pop
(bad)
cmp
mov
loope
call
push
sar
lds
sbb
les
xor
or
test
cmp
movs
movs
mov
int3
push
retf
loopne
dec
test
dec
int3
rol
xor
fdivr
lds
scas
sbb
clc
nop
in
js
addr16
add
sub
xchg
pop
movs
fidiv
dec
test
ins
ins
add
add
fucomip
loopne
cmp
icebp
pop
cmp
mov
dec
pushf
lock
xor
shr
aam
ins
dec
in
or
sub
retf
and
cld
sbb
ret
sub
je
or
inc
lock
call
adc
mov
adc
loopne
jmp
xchg
test
mov
sbb
add
in
sti
out
jae
xor
rcr
pushf
ins
mov
inc
leave
push
imul
pushf
out
test
lods
xor
cld
mov
pop
xor
mov
mov
push
ins
xchg
and
sub
iret
je
cld
sub
pusha
outs
dec
dec
hlt
ins
enter
add
int3
loopne
stos
test
xchg
or
inc
mov
movs
push
cmp
in
mov
pop
mov
rcl
fst
loopne
loopne
popa
cmp
(bad)
shr
or
xchg
jl
imul
xor
xor
inc
dec
(bad)
ficomp
scas
mov
jo
and
fisub
cmp
mov
hlt
xchg
leave
pop
add
adc
inc
cs
shl
outs
aam
xchg
ja
std
add
mov
idiv
pop
xor
clc
dec
xchg
add
clc
xor
(bad)
add
sbb
cmp
test
loopne
loop
pop
sub
mov
cwde
leave
mov
in
and
or
adc
sub
mov
push
jbe
iret
loopne
inc
movs
cmp
cmc
cmp
inc
mov
push
sub
mov
fcom
adc
jne
mov
cmp
push
test
jmp
mov
adc
sti
test
fcomp
idiv
scas
movs
fcom
mov
sub
and
dec
enter
leave
inc
cmp
xor
or
push
mov
cmp
sar
test
mov
ins
cli
inc
shr
in
or
xor
push
sbb
lock
xchg
inc
jl
pusha
adc
mov
fbld
mov
sub
dec
mov
mov
je
cmp
xchg
mov
xor
loopne
test
je
mov
loope
push
stos
aam
xor
xor
and
cld
mov
rcr
inc
mov
jge
and
ins
aam
and
adc
sbb
sub
inc
sbb
test
push
add
dec
pop
test
popa
add
mov
adc
and
and
popa
arpl
inc
call
dec
sbb
(bad)
mov
mov
inc
clc
leave
cmps
sbb
js
push
(bad)
mov
movs
aad
fld
cld
sub
push
call
mov
mov
clc
fadd
or
xor
pop
lods
xor
sar
inc
lods
dec
rcl
add
inc
in
mov
mov
mov
ficomp
les
clc
push
inc
push
sub
ins
ret
or
je
pop
sbb
inc
js
or
cmps
pusha
int
(bad)
cld
jp
mov
nop
or
loope
fsub
int3
jge
movs
test
lods
hlt
jb
mov
je
hlt
aam
fmul
push
nop
pop
sbb
nop
popa
sbb
dec
cld
push
in
mov
imul
sbb
inc
jbe
adc
dec
hlt
xchg
in
sbb
js
mov
test
rcr
sbb
movs
icebp
sub
push
dec
jp
dec
pushf
inc
outs
rcl
jo
xchg
pop
aam
call
mov
pop
adc
(bad)
(bad)
inc
xor
mov
in
mov
cmp
cmp
jns
cmp
adc
xor
add
cmp
xor
xor
push
js
push
mov
and
loopne
cmp
fidivr
add
repnz
mov
sbb
lock
lock
lods
mov
dec
loopne
outs
pushf
sub
ins
adc
mov
icebp
sub
cmc
in
les
inc
cmps
or
mov
sar
pop
(bad)
sub
(bad)
push
adc
cli
das
pop
push
push
cmp
popf
je
mov
sar
mov
movs
pushf
movs
and
aam
pop
ror
jle
fld
adc
lea
add
ins
add
jno
or
add
cwde
and
dec
lods
je
in
sub
loope
add
bound
fst
fnstcw
int3
inc
sbb
pushf
or
and
dec
imul
jmp
je
xchg
pop
pop
lods
call
push
push
mov
push
loopne
sub
jge
in
dec
shl
mov
shr
aam
add
mov
sti
or
test
clc
repz
shl
ins
popf
aam
xor
dec
jne
push
mov
mov
into
sbb
and
mov
dec
mov
int3
push
cmp
mov
in
dec
pop
movs
xor
adc
sub
jl
fild
sbb
mov
int3
outs
movs
mov
mov
cmp
test
scas
ins
push
push
test
jle
neg
push
cmp
int3
dec
push
sub
and
and
sub
lds
sbb
scas
movs
cmp
sub
push
mov
fnstsw
call
inc
xchg
dec
mov
cmp
mov
popa
inc
cld
lods
in
dec
pop
and
sbb
pop
jo
enter
retf
lea
inc
clc
push
sbb
out
mov
mov
adc
cld
inc
mov
rcr
xchg
sahf
lock
mov
cs
sub
xchg
pushf
int3
inc
adc
fsubr
sub
adc
jge
in
stos
enter
or
dec
adc
dec
int3
sbb
and
out
out
cmp
cmp
gs
enter
pop
jp
jb
loopne
(bad)
jl
int3
adc
fs
jae
ror
(bad)
fld
scas
movs
lock
nop
rcr
pusha
popf
in
jbe
mov
shr
js
jno
fisubr
ret
lds
jl
xor
(bad)
lock
int3
adc
rcl
test
push
in
inc
fs
je
sub
fnstcw
(bad)
cmps
lods
lods
je
rol
pushf
and
and
ins
cld
pop
shr
mov
inc
pop
jp
scas
fdivr
repnz
cs
dec
xchg
lods
xor
enter
sbb
pushf
hlt
push
and
movs
mov
lock
push
push
lods
mov
fmul
mov
cmp
jge
or
sar
push
scas
push
xchg
dec
mov
sbb
icebp
push
call
sbb
inc
cdq
cmps
adc
sub
push
cld
and
lock
stc
and
dec
dec
hlt
pop
dec
popa
and
xor
xchg
cmp
push
test
xchg
dec
aam
mov
rol
inc
xor
cli
loop
mov
loop
and
push
mov
sbb
mov
cwde
call
aam
pop
or
mov
inc
fisub
and
xor
jo
jo
mov
adc
inc
push
sub
fcom
int3
mov
inc
cmp
cmp
and
mov
pop
cmc
mov
jns
jno
cmp
dec
lahf
dec
pushf
inc
int3
jbe
loope
test
shr
aad
pop
mov
pop
gs
xor
inc
dec
mov
jne
lods
xor
int3
ficom
add
popf
cwde
adc
loopne
scas
mov
jl
shl
mov
jmp
sub
sub
fadd
cmp
popf
and
cmp
js
add
or
or
mov
ins
gs
shl
aam
fsubr
shl
test
retf
adc
adc
adc
addr16
pusha
cmp
or
test
rcl
cmp
inc
xchg
lods
sbb
loopne
push
xor
loopne
(bad)
into
sbb
mov
pop
and
ds
and
ins
jl
fs
ss
cld
or
int
mov
stos
jbe
push
js
mov
loope
test
adc
jl
test
or
ja
push
sub
xor
iret
sub
jno
in
nop
inc
arpl
push
aam
cmp
mov
(bad)
movs
pushf
mov
and
out
push
xor
lock
adc
fmul
hlt
and
jno
cmp
xor
mov
cld
arpl
dec
fmul
push
jmp
sbb
test
mov
add
leave
mov
outs
shl
scas
mov
or
les
sub
xor
xchg
push
shl
mov
pushf
call
stc
or
or
push
call
out
rcr
or
adc
loop
xor
mov
inc
rcr
cwde
jp
sbb
add
sar
xor
dec
push
add
jp
ins
push
fprem
jmp
jo
rcl
sbb
mov
pop
out
mov
stos
cmp
in
rol
in
cmp
cmp
outs
popf
sbb
jle
ins
lock
test
dec
ins
adc
clc
mov
pop
not
pushf
out
xor
test
xchg
inc
lock
in
cmp
sub
adc
add
jge
sub
dec
mov
mov
test
push
mov
mov
or
out
cmc
push
ja
pop
push
hlt
cld
movs
cmc
nop
mov
and
fs
lods
mov
and
ss
dec
int3
mov
pop
enter
cs
pop
fs
add
push
loopne
lods
mov
movs
inc
pop
add
dec
test
pusha
(bad)
enter
mov
out
mov
and
sbb
xchg
jge
adc
mov
dec
movs
outs
push
les
mov
jle
mov
idiv
scas
xchg
stos
mov
mov
inc
fistp
les
fmul
cwde
jo
(bad)
mov
pop
xchg
je
int
adc
mov
mov
sbb
add
xor
into
nop
lock
adc
xchg
xor
(bad)
in
in
mov
test
sets
ja
cli
inc
add
and
and
add
mov
push
sbb
sbb
pushf
movs
push
cmc
and
and
xor
fdivr
test
out
mov
add
(bad)
adc
or
cmp
or
adc
scas
pusha
cmp
es
xor
shl
or
push
clc
in
push
fldcw
call
dec
cdq
fmul
cmp
fnclex
push
ss
enter
xchg
movs
aad
(bad)
aaa
adc
xchg
fs
adc
cli
jae
pop
push
or
xor
jne
or
in
push
aam
js
xchg
mov
mov
rcl
cwde
jns
(bad)
pop
inc
mov
loopne
push
movs
add
mov
mov
pop
(bad)
xchg
add
push
xchg
dec
bnd
frstor
xchg
call
je
mov
jl
js
pop
jo
mov
lods
inc
push
cmp
fwait
les
test
ins
sbb
push
add
aad
and
jp
add
jnp
test
in
nop
push
loop
fcom
fdivr
and
test
clc
das
push
push
(bad)
or
mov
pop
push
inc
cmc
outs
add
int3
or
adc
imul
push
dec
mov
aam
xor
shr
mov
out
cli
int3
push
jo
lods
push
lahf
lds
hlt
adc
mov
ins
(bad)
aam
dec
test
jbe
fdivr
sbb
dec
lock
dec
inc
ror
xor
loopne
into
daa
cwde
movs
push
mov
hlt
add
cld
mov
test
xchg
movs
leave
inc
pop
inc
mov
aaa
in
aaa
or
in
mov
xchg
mov
movs
mov
ret
clc
push
sahf
mov
pop
jae
prefetchnta
xchg
sub
movs
and
ins
push
mov
mov
rcl
ins
xchg
mov
ficomp
lock
sbb
mov
pop
scas
out
jmp
push
cmp
or
jg
sti
test
cs
mov
mov
jne
adc
lea
imul
pop
sub
lahf
test
xor
ror
xor
mul
in
enter
enter
mov
fdiv
movs
je
clc
test
cmp
movs
pop
push
sbb
mov
cmp
jnp
dec
ffree
test
mov
imul
shl
movs
cmp
or
add
rol
and
fmul
enter
push
adc
sti
movs
mov
push
xchg
fs
shr
inc
add
movs
cmp
jg
mov
jne
xchg
aam
xchg
or
xor
iret
adc
add
inc
and
jo
mov
add
pop
dec
inc
sub
mov
adc
cdq
inc
loopne
push
aad
out
or
xchg
pusha
test
and
dec
int3
dec
push
int
(bad)
or
mov
lea
add
ret
sub
push
sub
xchg
(bad)
mov
test
add
pop
push
add
mov
pop
adc
shr
test
icebp
in
sbb
retf
xor
nop
cs
fcom
add
ins
inc
nop
clc
sbb
add
inc
js
and
mov
pop
rcr
push
mov
xchg
xor
int3
and
loope
jmp
mov
clc
cmc
sub
gs
and
clc
cmc
cmp
and
ret
xor
adc
movs
sub
or
xchg
dec
and
cld
inc
in
xchg
and
sahf
cmp
shl
fwait
sbb
in
cmp
call
add
mov
shr
jnp
dec
data16
cmc
and
lods
jo
adc
loopne
fisttp
push
sahf
push
scas
inc
fistp
push
push
fcom
(bad)
lods
leave
jp
jl
mov
mov
hlt
or
push
mov
stos
aad
lods
xor
enter
(bad)
movs
pop
call
cld
adc
dec
sbb
xor
clc
mov
cmp
xchg
mov
call
int
pop
test
adc
inc
inc
cwde
dec
test
or
add
pop
cmps
adc
jns
into
cld
loop
mov
or
je
jmp
or
hlt
das
xchg
mov
nop
clc
mov
cmp
in
pop
jbe
mov
pop
or
in
call
test
mov
inc
in
movs
std
in
add
test
aam
mov
mov
lods
pop
cli
and
call
pushf
ror
xchg
or
(bad)
fmul
stc
pop
mov
push
mov
sbb
mov
mov
dec
in
mov
sub
outs
rcl
cli
sbb
shr
rol
dec
bound
int3
loope
mov
test
xchg
push
les
jp
aam
lds
pop
in
dec
xlat
jns
pop
test
cmp
jge
lock
fs
xchg
in
int
pop
mov
or
ins
movs
or
stos
data16
or
frndint
inc
add
enter
sbb
dec
aaa
sub
data16
loopne
lea
cmp
test
mov
stos
push
pop
sbb
mov
pop
enter
movs
aam
sbb
and
inc
inc
xchg
inc
cdq
adc
enter
leave
mov
not
mov
sbb
add
push
shl
mov
inc
mov
inc
lock
xchg
pop
jp
cdq
test
stos
adc
xor
sti
nop
out
xor
mov
ins
pop
jo
add
add
sbb
mov
sub
scas
dec
fsub
mov
cmp
ror
or
fs
jecxz
nop
clc
(bad)
hlt
mov
call
jb
cwde
in
call
mov
or
push
adc
sbb
ins
adc
mov
mov
pop
fsub
or
mov
call
dec
pushf
inc
xor
int3
mov
enter
cmp
(bad)
enter
or
lock
push
sub
xor
pop
retf
dec
clc
mov
push
cmp
lock
in
test
rcl
sub
jbe
or
fisttp
(bad)
mov
hlt
adc
int3
jge
adc
add
test
pop
call
and
in
xor
push
xor
clc
and
xchg
test
aas
lock
push
ins
lods
aam
out
push
sbb
hlt
sub
xchg
out
fadd
adc
fmul
mov
clc
aad
dec
mov
cmp
sbb
add
mov
cmps
int
sbb
pusha
push
out
and
clc
mov
cld
dec
or
adc
dec
or
stos
sub
fdiv
in
pusha
mov
fcomp
mov
call
cld
rcl
mov
adc
pop
xor
xor
cmp
add
mov
fimul
pop
mov
sub
xchg
enter
push
jl
test
add
test
rcl
addr16
int3
loopne
sbb
cmps
adc
nop
xchg
loop
call
mov
ds
fsub
sub
pop
cmp
imul
dec
into
inc
adc
cdq
mov
lock
mov
dec
cld
push
lock
popf
mov
mov
cmp
jl
or
sbb
out
les
mov
mov
sbb
inc
jg
stc
push
inc
js
xor
sbb
jne
fisub
mov
test
mov
add
mov
adc
out
or
std
cmps
(bad)
leave
dec
pop
imul
cmp
fs
lahf
cld
loopne
js
mov
jle
inc
nop
adc
pushf
adc
mov
(bad)
loopne
xor
cmp
sti
cdq
in
dec
pop
lds
and
dec
and
dec
(bad)
adc
pop
xchg
inc
int
mov
mov
lods
fincstp
push
popf
mov
mov
sbb
enter
ins
mov
sub
inc
cs
cmp
and
xchg
imul
in
sbb
mov
hlt
scas
test
add
les
mov
sub
push
cmps
jl
call
cmps
mov
xchg
xchg
icebp
or
sub
inc
cld
mov
pop
test
mov
cmp
jle
mov
jl
push
(bad)
cwde
adc
mov
cld
in
cs
fcom
sbb
mov
sub
xchg
jl
movs
pop
add
aam
sbb
adc
ins
add
inc
js
inc
int3
fidivr
test
adc
mov
mov
fadd
fs
nop
add
test
mov
clc
into
clc
add
hlt
jl
pusha
mov
or
add
fs
or
repnz
adc
jl
ins
test
mov
out
cmp
or
js
fs
test
mov
cmp
in
adc
mov
js
retf
cld
sbb
push
movs
(bad)
icebp
sbb
xor
xor
dec
call
adc
sbb
rcl
pop
jl
push
sub
stc
ins
ficom
fld
dec
mov
in
sbb
iret
paddusw
mov
inc
xor
sub
adc
call
push
sar
div
or
pop
and
cs
and
and
sbb
pusha
sub
test
je
add
xchg
mov
test
stos
lock
xchg
pushf
sbb
sar
inc
cmp
cmp
cld
call
(bad)
rcl
push
sbb
mov
xchg
dec
xor
sbb
call
sbb
cmp
(bad)
loopne
in
mov
mov
mov
pop
sbb
xor
cli
or
pop
inc
sub
aam
test
xchg
call
pop
cwde
mov
sub
test
int
std
adc
add
mov
js
add
(bad)
int3
xor
pop
(bad)
shl
jno
sbb
not
adc
xchg
or
pop
push
add
and
sahf
add
push
adc
sub
je
xchg
mov
fdiv
add
loopne
adc
clc
ins
in
mov
and
lods
icebp
rol
inc
dec
sub
inc
mov
dec
mov
pusha
enter
fsubr
jo
push
test
inc
js
loopne
adc
jmp
jmp
jl
xchg
shl
sub
cmp
in
xchg
and
pusha
pop
xchg
add
lods
xor
ja
mov
xor
fwait
mov
mov
lea
int3
call
sub
push
cs
mov
pushf
inc
cmp
mov
lahf
push
aad
jg
in
lods
jle
sub
(bad)
fs
les
rcr
xor
push
lock
mov
mov
popa
adc
dec
je
hlt
push
xchg
push
mov
cdq
mov
push
sub
xor
adc
ss
mov
movs
mov
scas
mov
in
mov
imul
and
shl
sub
loopne
aam
(bad)
and
add
sub
jb
int3
jo
push
mov
add
in
and
loopne
dec
mov
int3
ds
call
ins
mov
mov
jne
pop
es
and
movs
adc
sbb
imul
js
sbb
adc
cmp
cmc
xor
pop
inc
xchg
push
and
sbb
int3
xor
mov
mov
xor
sub
xchg
call
cmp
adc
mov
pop
sub
push
dec
fsubr
and
jnp
loopne
js
push
int3
cs
and
push
xor
or
mov
aam
mov
das
push
ins
xchg
les
js
mov
mov
add
mov
std
movs
in
scas
adc
nop
(bad)
sub
jo
cwde
pop
sar
movs
movs
(bad)
ss
sub
aam
mov
cld
je
jne
inc
push
in
mov
fs
ins
fcmovb
and
js
inc
aaa
enter
shl
jecxz
xor
clc
push
enter
sar
sub
je
movs
loopne
lods
movs
push
hlt
cli
mov
sbb
xchg
mov
cmp
or
mov
retf
rcl
in
ss
mov
mov
cmp
sbb
jae
cwde
sbb
jl
pushf
nop
inc
clc
mov
xchg
and
lahf
inc
jb
pusha
call
cdq
add
mov
pop
repnz
sbb
retf
cmp
aad
call
sub
sub
adc
or
and
sub
ins
pop
shl
int3
or
mov
or
cli
lods
jb
inc
ror
inc
shl
(bad)
cs
mov
dec
cld
dec
xor
dec
cwde
jno
cmp
or
sub
xchg
add
test
inc
cwde
inc
mov
mov
inc
mov
fdivr
pusha
out
cmps
dec
dec
aaa
sub
ficomp
adc
pop
mov
xor
push
sbb
clc
adc
aas
cmp
pop
jl
mov
jns
adc
xchg
imul
pop
jns
pusha
test
mov
nop
pop
out
xor
jl
sub
xchg
js
push
push
add
mov
nop
ret
cmps
adc
sahf
lock
ss
cmp
pushf
shl
xchg
fs
adc
int3
or
loopne
test
shr
or
sahf
test
mov
cmp
pop
addr16
retf
dec
jo
adc
popa
xor
loop
cbw
push
mov
or
ret
dec
inc
cmc
fs
std
push
fs
rol
mov
xlat
out
push
add
fadd
les
mov
pop
movs
inc
ins
call
enter
ja
or
mov
cmc
clc
or
std
dec
mov
int3
aam
arpl
out
push
xor
cmp
repnz
mov
and
cdq
je
and
push
xchg
cmp
scas
je
pop
adc
or
jb
(bad)
enter
ret
test
sti
sbb
rol
push
and
shl
push
jo
mov
adc
xor
ins
jb
mov
in
inc
sub
mov
in
push
loopne
pop
add
pop
ficomp
mov
push
xor
mov
cmp
fsub
and
sub
add
xchg
inc
xchg
retf
dec
(bad)
movs
arpl
push
(bad)
ins
jl
push
jae
nop
in
aad
adc
enter
cmp
enter
adc
fmul
inc
mov
js
(bad)
(bad)
jo
adc
je
je
outs
or
and
mov
mov
dec
sub
ror
adc
jle
pushf
or
in
popa
rol
and
aas
mov
movs
addr16
dec
je
jbe
xor
and
mov
jmp
add
and
cmp
push
sub
pop
push
fadd
cwde
cmps
pop
les
dec
test
ds
jg
pop
push
int3
hlt
and
add
dec
les
nop
iret
mov
fld
mov
(bad)
xor
fdiv
adc
sbb
leave
cmp
and
shl
sbb
mov
xchg
add
pusha
loopne
int
test
ins
in
xchg
inc
or
mov
ins
lds
outs
xchg
int3
jl
xor
out
rcl
rcr
and
aam
dec
xor
xlat
enter
push
(bad)
loopne
mov
or
lods
shr
mov
push
in
out
xor
sub
enter
enter
loopne
adc
sbb
mov
fsubr
mov
cmp
rcr
adc
pop
cmc
push
cmp
add
xor
fisttp
push
sar
(bad)
nop
fsub
add
nop
sub
adc
ss
adc
cmp
inc
fldlg2
sbb
add
mov
cmc
(bad)
mov
mov
scas
fcom
xchg
mov
sub
add
and
pminsw
add
pop
sub
dec
dec
xor
dec
dec
inc
adc
aam
or
and
or
pushf
mov
int3
loope
pop
movs
xchg
dec
adc
push
call
dec
loopne
sbb
cmp
movs
jp
sbb
adc
sbb
data16
lea
pop
xchg
loopne
bnd
js
sti
ins
pusha
xor
mov
call
ret
mov
add
pushf
sbb
js
push
inc
sub
adc
jb
sbb
fdiv
jp
loopne
outs
inc
pusha
lods
mov
in
and
jge
inc
push
enter
adc
loop
test
cmp
fs
ins
pop
sbb
adc
mov
sbb
pop
in
cdq
lods
loopne
sbb
ins
sbb
mov
ins
push
(bad)
cdq
not
hlt
xchg
repnz
clc
add
dec
in
ds
adc
in
xchg
adc
in
lea
test
cmp
and
retf
mov
inc
adc
mov
clc
gs
int3
into
in
nop
cmp
in
pop
aam
les
ror
enter
push
xchg
in
sbb
cmp
xor
mov
enter
shl
cmp
into
xchg
outs
hlt
rol
jl
mov
push
mov
pop
sbb
sbb
add
xchg
pop
jmp
add
push
cmp
adc
lock
pop
push
mov
mov
ret
gs
mov
sti
pop
jmp
shr
test
and
lock
jecxz
imul
sub
and
or
mov
mov
ror
adc
je
data16
(bad)
in
xor
xlat
out
dec
test
push
xchg
lods
imul
aam
ins
xor
sub
inc
mov
mov
loopne
bound
movs
sbb
cwde
mov
mov
cmp
lock
out
mov
mov
lock
pop
adc
pop
xor
or
xchg
mov
pop
lock
movups
adc
adc
mov
fnstsw
lods
fs
cmp
ror
js
xor
dec
push
shr
cwde
cmp
sub
mov
je
gs
cmp
inc
pop
ins
mov
push
aad
fadd
(bad)
hlt
sub
dec
pusha
test
movs
fidiv
sub
cld
out
xchg
xor
pop
inc
shl
fcomp
pop
mov
in
and
push
pop
push
pop
call
jge
and
mov
int3
jp
add
pop
and
push
les
lods
movs
and
and
mov
mov
and
and
(bad)
mov
mov
inc
push
ins
fcomp
pop
inc
(bad)
ins
xor
mov
jg
shl
mov
pop
out
adc
loopne
xchg
and
loop
push
pop
push
mov
cmc
lock
clc
xchg
pop
mov
lahf
int3
loope
sub
push
sbb
aaa
mov
sbb
jns
inc
mov
or
rcr
les
std
mov
jbe
shl
ins
movs
loope
sbb
or
movs
xchg
js
inc
adc
dec
call
push
rol
les
sub
mov
rcl
retf
ins
in
jl
mov
or
daa
sub
mov
cwde
nop
je
scas
in
nop
inc
sub
bound
push
mov
jbe
int
lahf
fiadd
mov
sbb
fisubr
int3
mov
jl
repz
cmp
fs
sub
retf
sub
popa
adc
dec
push
push
call
aam
loopne
adc
(bad)
js
push
or
xchg
rol
pop
xor
fcom
adc
out
fwait
lds
mov
sbb
sub
aam
lods
inc
xor
dec
shl
sub
int3
inc
ret
in
in
cmp
popf
call
xchg
stos
call
jnp
jns
ret
and
aam
adc
jmp
push
or
pop
test
jno
clc
popf
dec
cmp
and
or
inc
fs
call
aam
cld
pusha
les
mov
imul
mov
mov
movs
loopne
call
and
loope
loop
int3
push
fs
mov
dec
sbb
movs
adc
cwde
loop
test
inc
enter
mov
or
int
mov
mov
test
inc
mov
or
loopne
popa
ins
fcom
mov
add
pop
xchg
jl
nop
add
add
aam
or
adc
inc
mov
adc
push
sub
mov
sbb
sbb
ins
xor
jbe
je
test
je
pushf
xor
add
mov
pop
push
les
std
push
ins
rol
fsubr
rcr
pop
adc
enter
jecxz
mov
cmp
sbb
mov
loopne
fadd
jb
js
adc
cmp
inc
sbb
sub
adc
fs
fs
sahf
std
test
popa
clc
sbb
ins
sbb
and
cmc
je
in
hlt
sub
test
dec
inc
daa
or
clc
fcmovb
push
sbb
popa
mov
dec
shr
hlt
add
int3
adc
xor
dec
fldenv
or
ret
push
cld
cmp
lock
sub
cmp
xchg
std
test
in
je
ins
outs
xchg
xor
fbstp
mov
mov
lods
xor
ins
jl
ins
ret
mov
fldenv
sub
jecxz
fcomp
mov
lods
icebp
inc
ret
sbb
popa
fs
aam
jl
pop
jle
rcr
call
pop
and
outs
loopne
or
aam
mov
(bad)
aam
pop
mov
inc
or
icebp
xchg
bound
aad
push
dec
cmp
mov
jl
push
in
retf
int3
lods
sub
push
jl
test
sti
cld
out
xor
repnz
or
xor
push
mov
jle
lods
pop
adc
(bad)
call
mov
xor
inc
inc
or
nop
lock
hlt
aam
shl
fcomp
push
mov
pop
or
mov
xchg
fsub
aam
mov
fmul
dec
adc
test
pusha
mov
movs
dec
sub
call
push
mov
cmc
rcr
push
and
sub
int
adc
mov
cmp
ins
cmps
or
les
mov
gs
fdiv
mov
pushf
clc
sbb
sbb
or
cmp
mov
in
mov
pop
sub
fwait
cwde
cmp
test
pop
push
in
mov
cmp
inc
jge
mov
jne
cmp
loopne
lods
adc
aam
cmp
fdivr
inc
movs
js
call
and
sub
xor
add
and
movs
mov
dec
and
push
push
sub
pop
loopne
js
lods
lods
sbb
inc
mov
cwde
test
push
xchg
in
jmp
push
cmp
sub
jo
add
ja
cli
mov
push
dec
scas
mov
in
ins
jbe
imul
add
lock
test
sub
and
into
enter
or
mov
repnz
jmp
imul
cwde
xchg
inc
bound
dec
add
repnz
or
idiv
les
fcomp
loopne
lods
xchg
jae
jl
(bad)
shr
mov
into
sub
pusha
jmp
xchg
out
ror
pushf
ja
test
lock
push
(bad)
pushf
retf
add
mov
sbb
mov
cwde
fwait
or
or
shr
cld
inc
loope
jge
and
dec
lock
pop
xor
in
jmp
jl
aad
out
dec
add
pop
sub
add
ins
repz
mov
sbb
xlat
pop
cmp
jl
fiadd
push
add
xchg
push
lock
sbb
test
cld
jp
xor
int
mov
pushf
in
xor
clc
fs
xchg
sbb
adc
mov
callw
mov
mov
inc
mov
mov
les
fcmovu
mov
jl
adc
ins
dec
jl
(bad)
mov
inc
sub
mov
hlt
push
pushf
gs
(bad)
out
leave
pusha
xor
xor
pop
ins
add
pop
ds
add
jp
or
lods
clc
stos
pop
lock
sbb
fwait
sbb
popa
lods
call
jg
cld
lods
in
mov
pop
and
nop
cmp
mov
mov
push
hlt
add
mov
sub
inc
call
adc
or
mov
retf
loop
les
dec
mov
or
(bad)
fadd
sub
ins
jo
sbb
push
in
fwait
call
mov
aas
dec
push
cmp
mov
add
adc
mov
adc
les
not
out
pop
cwde
imul
mov
pushf
ret
xor
or
bound
les
les
fnstenv
or
mov
bound
lods
inc
int3
shr
lock
fadd
adc
push
mov
or
cmp
in
xor
out
dec
mov
or
xor
pushf
sbb
push
add
sub
dec
cwde
inc
inc
mov
out
rol
push
ss
fadd
les
cld
dec
in
int3
push
fs
sub
cli
ins
or
pop
dec
fist
pushf
outs
and
sbb
push
pop
cwde
ins
jmp
cmp
mov
adc
dec
cmc
into
add
jmp
cmc
adc
jbe
pop
adc
jae
sti
popf
imul
das
or
jbe
imul
push
add
cwde
fdiv
mov
xor
add
movs
iret
or
sbb
fsubr
xlat
shr
sub
mov
je
or
sbb
or
(bad)
les
push
movs
pop
push
test
in
xor
push
pop
imul
mov
adc
or
sbb
les
stos
enter
mov
sbb
and
test
retf
mov
les
jge
and
add
shl
js
jo
shl
jmp
fs
icebp
adc
cld
add
cmp
hlt
sub
verr
xor
sub
imul
cmp
sbb
and
jle
inc
mov
cwde
sbb
pop
hlt
mov
adc
dec
inc
stc
clc
loopne
or
sub
out
mov
cmp
mov
mov
xor
mov
push
pop
cld
pusha
mov
loope
movs
in
push
popf
mov
push
pop
pop
loopne
das
shl
xchg
je
enter
fdiv
in
push
js
nop
js
adc
sahf
mov
scas
xchg
scas
inc
jo
test
inc
lock
mov
lods
fadd
mov
in
mov
lds
or
das
mov
in
adc
cwde
xchg
pusha
push
imul
push
cmp
push
inc
pop
leave
and
jno
inc
push
fcomp
pop
loopne
mov
mov
and
or
sub
les
loope
dec
dec
mov
pop
outs
inc
mov
cmp
or
jg
(bad)
and
(bad)
mov
arpl
clc
push
hlt
cmc
pushf
in
int3
xor
adc
inc
enter
nop
jbe
ins
sub
sub
out
push
cmp
mov
xor
jge
jge
pop
ror
movs
mul
jp
inc
mov
cwde
adc
rol
dec
in
sub
push
xor
push
dec
test
sti
pushf
ret
inc
enter
lahf
pushf
popa
(bad)
call
(bad)
into
cld
or
pushf
lods
mov
movs
int3
stc
and
ins
mov
jmp
loope
inc
ins
clc
adc
adc
push
ss
add
lods
hlt
movs
pusha
xlat
les
dec
cwde
test
pop
les
js
gs
mov
add
leave
(bad)
rcr
xor
call
pop
sar
in
hlt
cmp
cs
clc
cmps
push
ds
nop
ins
sbb
mov
sbb
mov
fsub
(bad)
int3
js
dec
mov
stc
aaa
jmp
out
call
loopne
jl
ja
sbb
xchg
jbe
cli
push
and
es
js
push
push
popa
(bad)
or
cmp
dec
fsubrp
and
pop
pop
or
add
fstp
lds
jmp
retf
cs
add
in
sti
xor
bound
aam
fs
mov
xor
aad
sar
test
test
dec
scas
xchg
inc
std
je
enter
les
or
sub
cwde
sub
xor
stos
dec
cmp
inc
jl
neg
dec
aam
cwde
cmp
push
out
pop
sbb
movs
imul
lods
xor
xor
adc
nop
push
int3
cld
cld
mov
add
cli
add
scas
enter
xchg
call
jbe
dec
mov
test
neg
fcom
pop
in
ja
rcr
call
pop
sub
push
and
and
sbb
pop
ror
and
and
ds
fdivr
mov
in
test
ins
jno
sub
mov
jecxz
pushf
fs
aam
push
nop
cld
std
add
rcr
je
sbb
add
in
lock
shl
and
cmp
ja
pop
mov
cmp
mov
ret
into
inc
cmc
popf
cwde
adc
enter
or
jb
test
ret
aam
cmp
sbb
push
pop
push
sbb
xchg
jno
stc
dec
rol
pusha
in
call
push
mov
nop
add
pushf
mov
sub
repz
pop
lock
das
sti
ins
in
cmc
mov
mov
loopne
or
cmp
add
pop
xchg
xor
hlt
iret
(bad)
cwde
int
je
inc
jle
mov
cmp
fcomp
pusha
movs
or
mul
fwait
stos
ins
icebp
fidivr
add
dec
lods
call
frstor
(bad)
jl
mov
jecxz
mov
and
pop
pop
mov
pushf
ret
mov
dec
ins
mov
fild
inc
arpl
les
pop
retf
inc
xchg
lods
or
popf
cmp
mov
pop
cmp
adc
inc
int3
mov
lds
and
sbb
and
jl
rcl
cwde
mov
fs
lock
popa
clc
dec
fisub
push
scas
mov
push
sub
aam
test
and
push
jmp
and
dec
lock
cmp
movs
mov
adc
mov
pop
and
mov
mov
outs
pusha
popf
(bad)
retf
mov
or
rcr
jmp
idiv
in
adc
or
in
pushf
mov
mov
mov
push
push
hlt
inc
ss
push
outs
fadd
lods
mov
sbb
clc
movs
mov
add
(bad)
add
add
nop
rcr
bound
push
xor
pop
(bad)
loopne
ds
cmp
push
ins
ins
rol
or
mov
hlt
test
shr
or
lahf
je
jns
fdivrp
inc
push
lods
mov
int3
std
push
enter
aaa
cld
lock
sbb
mov
cwde
mul
inc
rol
mov
fs
mov
or
xor
dec
mov
test
sahf
push
xor
cmp
inc
popa
and
and
jno
js
sbb
sub
dec
sub
dec
dec
inc
inc
or
jo
pusha
inc
cmp
cmc
int3
pushf
movs
xchg
pop
popf
stc
pusha
into
mov
cwde
xor
std
cmp
mov
mov
mov
fcom
and
(bad)
cmp
pop
call
mov
or
out
ja
mov
in
clc
jecxz
fwait
rcl
nop
lods
and
sbb
mov
dec
push
adc
xor
clc
je
jl
and
cld
pop
cmp
push
rol
ins
fdiv
jle
mov
sbb
fs
ja
ins
call
pop
scas
jo
scas
js
or
sbb
repz
les
in
leave
fs
std
test
hlt
and
hlt
pop
xchg
mov
xor
dec
mov
in
mov
cmp
sub
in
mov
add
lock
cld
inc
xchg
xchg
mov
js
into
shr
pop
nop
std
dec
movs
call
or
(bad)
fadd
sbb
pushf
clc
dec
add
pop
(bad)
cmc
xor
popa
jge
and
sub
repz
sbb
aam
mov
mov
xor
add
popf
fs
adc
int3
jbe
fsub
nop
jno
push
adc
fnstsw
xor
aam
sub
cmp
(bad)
test
aam
jnp
inc
jo
xchg
adc
adc
fdiv
fs
mov
xchg
or
ror
imul
or
pop
sub
jo
and
mov
fnsave
arpl
fneni(8087
jl
in
dec
int
mov
cmps
loopne
lods
cmp
je
rcr
and
mov
inc
and
fbstp
add
sbb
sub
mov
dec
das
inc
dec
sub
pop
popa
mov
pop
enter
jmp
lods
jae
mov
std
fdivr
sbb
xchg
xor
in
add
pusha
test
jns
sbb
add
or
xchg
ror
or
dec
popf
cmp
mov
mov
jo
add
rol
je
(bad)
pop
loope
mov
and
xor
push
sub
mov
adc
jno
sbb
mov
cmp
in
loopne
cdq
pop
fcomp
mov
not
xchg
push
xchg
adc
push
dec
clc
dec
nop
mov
fisttp
int
in
xor
test
pop
and
lds
inc
or
and
and
js
sar
adc
mul
mov
test
outs
lods
dec
sub
repnz
or
inc
lods
loope
pushf
jl
inc
frstor
and
inc
adc
sbb
add
sub
mov
ins
add
push
clc
or
push
lods
xor
pop
clc
push
shr
nop
loop
push
gs
xchg
dec
rol
sub
cmp
and
int3
xchg
pusha
mov
dec
push
xchg
xor
add
mov
mov
dec
sbb
stos
sub
je
pop
aam
fsubr
inc
cmp
pushf
mov
inc
push
push
xchg
jo
mov
fs
dec
fwait
jl
data16
dec
cmp
jge
mov
hlt
adc
push
dec
sbb
fs
test
call
in
enter
shl
test
sbb
lods
(bad)
cmp
pop
mov
aas
fsubr
mov
pop
sbb
pop
je
jne
mov
mov
xchg
ss
adc
mov
jo
jge
loop
or
mov
cwde
(bad)
mov
xor
mov
xchg
xor
aad
hlt
or
xchg
enter
iret
(bad)
icebp
fs
cdq
cld
jo
ror
stos
test
movs
add
sub
jl
in
(bad)
je
dec
sub
jo
ret
shl
lods
sbb
sub
sar
jle
fs
inc
mov
mov
cmp
loope
push
ror
jbe
sub
push
lods
in
ror
dec
sub
or
clc
fldcw
repnz
xor
mov
and
mov
xor
ins
stos
xchg
push
mov
movs
into
dec
pop
add
pusha
inc
xor
hlt
shr
jnp
sbb
jo
test
aas
in
jae
cwde
les
sub
or
ins
sar
add
int3
pop
mov
scas
in
adc
cmp
and
push
mov
loope
call
aam
sahf
push
mov
and
xor
in
je
xor
ins
sbb
hlt
sub
or
out
mov
call
pop
cmp
aaa
mov
fld
jmp
fmul
and
or
aam
push
mov
xor
loopne
push
dec
or
xchg
rcl
stos
and
inc
xchg
dec
xchg
scas
xchg
enter
test
jo
mov
jmp
or
pop
sub
xor
adc
popa
adc
jb
loopne
pop
adc
sbb
sbb
fimul
xchg
inc
mov
fsub
call
add
pushf
out
es
jno
sbb
pop
adc
adc
mov
call
jg
or
pusha
test
mov
nop
cmc
cwde
xor
sub
cmp
out
je
mov
jl
jns
jmp
(bad)
and
dec
cld
je
pop
test
jo
and
fsub
clc
cmc
xor
jge
inc
scas
call
hlt
out
call
mov
sbb
add
in
in
jl
add
and
pusha
and
dec
push
int
cmc
add
fs
cld
(bad)
and
retf
sub
adc
rol
push
aam
enter
clc
call
in
dec
jge
(bad)
pop
cmp
xchg
sar
rol
sub
call
test
sbb
fisub
clc
pushf
mov
repnz
jnp
sbb
push
push
push
into
mov
or
mov
and
je
adc
(bad)
movs
leave
adc
or
push
pusha
call
mov
addr16
cmps
les
test
mov
mov
cmp
xchg
sub
rcr
inc
pop
lods
mov
into
js
jnp
sub
or
and
xchg
adc
imul
pusha
add
push
inc
jmp
je
loopne
jmp
ret
or
fmul
push
xchg
idiv
sbb
inc
cmp
and
les
or
call
xor
inc
and
int
xor
xor
shl
sub
add
hlt
sub
aam
xchg
jp
mov
jo
push
aam
fmul
pop
adc
test
push
mov
or
loopne
int3
movs
ss
mov
ror
push
add
ins
in
fadd
aas
inc
jno
pop
pop
mov
std
adc
retf
hlt
gs
in
(bad)
mov
imul
xor
fnop
data16
lods
and
jp
or
adc
add
fs
rcl
push
push
pop
mov
pop
fcmovb
movs
cld
jae
sar
dec
sub
dec
mov
lods
ins
je
add
sub
loopne
push
mov
sbb
pushf
sub
xchg
aam
int3
mov
mov
lock
add
mov
sub
fs
in
iret
test
adc
inc
enter
xor
fsub
add
in
adc
mov
pusha
cwde
pusha
nop
sbb
add
and
(bad)
xor
pop
cwde
and
inc
inc
in
test
fs
and
lods
fs
push
add
addr16
inc
enter
mov
and
jmp
mov
add
add
lods
call
outs
adc
icebp
dec
inc
push
js
in
pushf
dec
mul
stos
mov
adc
jl
pushf
mov
aam
repz
in
in
pusha
out
lock
sahf
mov
stc
loopne
ins
je
fdiv
test
clc
sbb
push
aam
pop
add
push
pop
cwde
out
pusha
xchg
dec
xchg
int3
jle
inc
popf
dec
mov
iret
add
and
in
mov
xor
add
cmp
movs
ins
leave
pop
add
js
push
pusha
imul
mov
fldcw
cmc
mov
xchg
dec
adc
cmp
and
adc
mov
movs
xor
in
and
rcl
jo
pushf
dec
and
or
(bad)
inc
and
test
pop
fs
mov
jns
enter
push
xchg
cwde
pop
mov
sub
sbb
ror
mov
je
call
ficomp
adc
inc
popa
fs
inc
pusha
cmp
fwait
mov
inc
push
mov
cwde
mov
int
test
js
inc
mov
movs
lods
cmp
and
jmp
push
mov
test
pop
mov
xor
pop
ss
xchg
mov
pop
gs
pusha
push
addr16
inc
hlt
lods
fsubr
mov
lods
dec
pop
xchg
aad
lods
hlt
fisttp
or
adc
push
enter
pushf
les
sub
lds
sbb
xor
jb
dec
movs
pop
mov
out
jo
add
mov
lods
scas
adc
call
in
into
je
mov
rcl
dec
sub
lock
xchg
jl
enter
pop
jne
loopne
inc
pop
sub
xchg
push
xor
popa
or
pop
imul
les
cmp
mov
sbb
mov
push
push
dec
cld
shl
jb
adc
sbb
jmp
mov
lods
hlt
ins
je
movs
mov
cwde
fst
fdivr
loop
mov
jae
mov
adc
(bad)
shl
pop
xlat
sub
lods
cdq
xor
mov
pop
jb
sbb
lock
sar
fsub
mov
cmp
push
in
fwait
mul
sbb
test
cld
jg
mov
mov
std
push
xchg
in
push
aam
icebp
pop
movs
jp
scas
hlt
test
adc
push
imul
adc
aaa
push
int3
repz
movs
push
adc
mov
sub
in
add
xor
int3
loopne
xor
cmp
hlt
retf
lods
pop
sbb
inc
call
in
inc
aas
and
int3
cmps
call
sbb
movs
or
pusha
aam
cld
pusha
xchg
mov
icebp
adc
add
leave
movs
mov
sbb
mov
das
mov
pushf
rol
mov
les
(bad)
mov
jb
in
paddusw
sub
lods
sbb
pushf
mov
adc
sub
mov
les
in
xor
iret
nop
outs
mov
sub
mov
sub
xchg
push
cmp
xor
pop
mov
push
pop
sub
shl
mov
mov
cmps
pop
je
mov
sub
and
push
les
in
jecxz
or
test
mov
pusha
push
ret
push
mov
shl
sahf
or
rol
ins
or
mov
je
call
dec
cmps
test
clc
int
fsub
mov
push
xchg
dec
in
pusha
or
cld
pusha
adc
push
es
in
sbb
aam
int
push
gs
push
mov
cmp
pushf
or
mov
stos
hlt
hlt
or
cmp
scas
lock
movs
or
cmp
fsubr
xor
hlt
xor
mov
or
hlt
cs
lock
cdq
sar
cdq
mov
mov
cmp
or
or
stos
test
adc
ror
mov
test
enter
push
sbb
in
add
test
mov
mov
call
ins
test
pop
mov
cli
mov
rol
pusha
mov
add
daa
pop
in
mov
in
fbstp
mov
cmp
jne
sbb
pop
pop
clc
cmp
jl
xor
or
stos
pusha
pop
test
xor
cmp
mov
pushf
scas
fs
sub
adc
mov
loop
xor
push
aam
cmp
pop
shl
ins
inc
sbb
push
mov
ds
and
push
pop
and
or
jg
sub
sahf
jl
adc
pusha
and
nop
pop
cmp
frstor
int3
mov
mov
inc
lock
je
pop
and
das
cwde
jmp
outs
nop
mov
mov
outs
dec
lock
and
mov
sar
inc
mov
cmp
sub
and
into
aam
pushf
lea
pop
sbb
fcom
sbb
fwait
mov
xor
xchg
or
sahf
add
mov
inc
jbe
fcom
push
xor
jo
mov
in
mov
and
loop
(bad)
js
mov
push
pop
mov
mov
xor
gs
rol
cmp
jl
xchg
pop
sbb
mov
dec
mov
out
lea
push
xor
push
and
shl
fmul
push
je
lea
jle
aam
fmul
inc
push
push
test
loopne
loopne
int3
xchg
movs
(bad)
in
push
and
aam
out
mov
or
fisubr
test
push
movs
loopne
je
dec
lods
call
push
dec
cmp
inc
inc
loopne
ret
je
sub
retf
dec
test
mov
xor
sbb
fnstenv
loopne
or
cs
mov
push
cs
adc
pop
enter
fsub
mov
sub
adc
aam
movs
test
test
js
pusha
in
test
mov
mov
pop
add
fsub
cmp
lock
pushf
adc
hlt
ins
fsubr
xor
fistp
jp
inc
sub
mov
and
scas
loopne
pusha
push
daa
mov
sbb
retf
push
jl
sbb
je
sbb
cmp
jo
js
pusha
cmp
js
ins
sub
xor
int3
and
mov
mov
cwde
test
cmp
and
jo
xor
xor
loopne
xor
xor
cmps
add
add
or
lock
arpl
popa
and
fadd
dec
in
push
in
mov
inc
xor
mov
(bad)
call
adc
dec
les
(bad)
ror
xor
sbb
enter
aad
cmp
dec
(bad)
xor
add
or
shl
xor
sub
cmp
jl
out
loop
dec
cdq
repnz
adc
ret
mov
ins
ss
adc
or
cmps
cmp
xor
ins
adc
sbb
sbb
in
call
sets
dec
les
jle
retf
push
rol
cwde
sar
test
jge
pushf
dec
dec
rcr
mov
js
mov
(bad)
mov
push
xor
movs
jbe
pop
jle
pushf
ss
push
and
adc
fmul
inc
adc
sbb
inc
loopne
dec
jbe
and
mov
sub
sub
add
sbb
loopne
and
or
xchg
xchg
out
xor
mov
and
jl
and
stos
hlt
jl
or
movs
cdq
stos
and
and
cmp
jl
lds
fst
and
jns
and
push
inc
and
mov
push
and
mov
je
push
or
lock
ret
(bad)
dec
sub
dec
or
enter
ficom
(bad)
clc
je
xchg
test
adc
lahf
and
add
lods
ins
ficom
gs
je
sbb
gs
js
les
dec
and
pop
enter
pop
or
jle
push
int3
ficom
mov
and
and
fsub
ds
pusha
cld
jo
test
add
add
enter
push
inc
pushf
mov
fadd
jo
xor
sar
pop
fs
and
clc
xor
nop
mov
call
pop
and
fsub
in
or
push
ss
or
dec
or
sub
dec
outs
and
jge
and
sbb
mov
sbb
hlt
lock
cmp
and
or
in
inc
ss
push
adc
mov
mov
in
repnz
js
add
pusha
mov
sbb
lods
ret
in
cmp
out
rol
or
inc
mov
sub
push
jle
je
in
jo
jbe
sub
data16
sub
add
aam
int3
cmp
or
or
push
mov
stos
xor
pop
sbb
sub
into
sub
pushf
jmp
cld
mov
sub
sbb
add
sub
xchg
loope
into
ins
adc
pop
mov
pop
les
cld
xor
add
outs
inc
cmp
(bad)
repnz
add
shl
pusha
push
pop
add
dec
les
clc
sub
pop
sub
dec
out
loopne
clc
inc
test
push
or
push
mov
sub
adc
mov
sbb
loopne
in
adc
jmp
in
or
push
mov
mov
pop
jmp
push
ror
mov
fcomi
mov
mov
inc
in
dec
pop
in
stc
push
xchg
sbb
jo
and
jns
xor
shl
sbb
mov
jl
int3
pop
in
pusha
adc
push
or
sar
test
sub
test
dec
fst
(bad)
(bad)
ss
cmp
pushf
(bad)
pop
sar
dec
jnp
cmp
push
and
pop
push
mov
dec
push
and
je
push
or
lea
in
(bad)
mov
jmp
fcom
fdivr
les
ins
mov
in
adc
sub
add
push
adc
cld
rcr
sbb
sub
add
shl
in
test
dec
inc
dec
dec
mov
into
sub
jb
jmp
mov
fcom
scas
out
cmp
gs
push
das
dec
jno
clc
fwait
add
jo
mov
cwde
mov
xor
les
pop
or
cmps
sbb
bound
inc
pusha
ror
fidivr
xor
jg
cld
jo
push
cmovnp
rcr
add
mov
in
ss
mov
fs
popf
sbb
push
in
push
jns
sbb
mov
movs
call
cmps
fimul
fs
mov
and
ins
pop
fisub
push
push
xchg
je
clc
cmc
inc
es
fcomp
inc
in
xor
add
outs
inc
sahf
es
clc
test
adc
pop
fs
test
push
pushf
pop
hlt
dec
xor
(bad)
(bad)
jo
pusha
ja
pop
and
cmp
add
mov
fmul
test
les
fiadd
mov
lods
mov
cld
inc
aam
std
pop
sub
pushf
inc
push
or
pushf
adc
int3
lock
add
and
cmp
movs
xchg
movs
cld
ficom
pop
cdq
(bad)
mov
inc
push
push
and
jae
mov
adc
dec
xor
aam
push
mov
and
mov
je
push
and
je
clc
xchg
xor
mov
cbw
dec
inc
pop
cmp
mov
jnp
gs
aam
lods
int3
mov
aad
pusha
movs
dec
int
xchg
in
clc
jmp
jl
hlt
shr
sub
sub
test
fmul
call
jo
cmp
scas
ins
cmp
and
jl
fidivr
mov
test
mov
xchg
xchg
out
lock
jl
ret
mov
call
adc
loope
mov
sbb
sbb
dec
xchg
cvttps2pi
shl
dec
and
xchg
test
sbb
jnp
inc
(bad)
into
xchg
ds
fmulp
adc
sbb
cli
cmp
aad
or
push
jl
clc
fwait
jo
push
jmp
dec
ds
inc
xlat
clc
and
push
lock
fsub
mov
and
adc
fsubr
dec
(bad)
cwde
pop
mov
add
ss
ja
lods
sub
sub
movs
test
sub
div
(bad)
clc
fstp
cld
fidivr
inc
sub
push
dec
push
dec
jl
mov
nop
leave
adc
mov
(bad)
out
in
ins
pop
je
sbb
data16
dec
movs
adc
pop
mov
jo
xor
lock
pushf
mov
scas
ss
pop
cld
inc
jl
int
xor
pushf
out
(bad)
call
test
sub
sbb
push
jno
int3
mov
je
xchg
mov
fldenv
mov
ins
lods
sbb
and
add
clc
jns
add
push
xor
in
adc
and
push
ror
aam
in
pop
xor
cmp
cs
aam
int
and
and
int3
add
or
sbb
js
jns
inc
mov
mov
in
clc
push
xor
stos
aam
nop
adc
pushf
or
pop
es
add
jge
clc
xchg
lods
mov
call
repnz
out
(bad)
shl
push
test
call
xor
cmp
mov
lea
pop
xor
push
ins
rol
dec
call
int3
xor
pushf
or
cmps
fdivr
rcr
aam
popf
push
push
pusha
fdiv
cld
mov
sub
sbb
movs
and
sbb
sub
call
pop
mov
pop
pop
les
jg
in
int3
lds
and
pop
sar
sbb
test
loopne
adc
xchg
jl
(bad)
aam
jo
cmp
lods
fadd
ds
sub
xor
fild
mov
js
mov
in
jecxz
pop
(bad)
test
cld
clc
cmp
call
push
je
cmps
cwde
in
push
sbb
pop
clc
xlat
jo
mov
and
arpl
adc
aad
cld
add
pop
inc
fsub
xor
pushf
push
pop
fstp
mov
xor
adc
jl
movs
pop
or
in
sub
mov
or
lds
jl
mov
and
jnp
inc
stos
mov
enter
sbb
div
cmps
inc
je
or
sbb
xor
test
xor
and
and
add
in
cmp
add
mov
int3
retf
call
mov
in
mov
mov
and
inc
les
movs
cmp
neg
repnz
xor
xor
add
mov
fsub
mov
cmp
ror
cwde
sti
adc
jo
inc
push
mov
mov
clc
lock
cld
jg
or
call
push
sub
inc
or
fsub
cmp
fs
xor
push
movs
adc
mul
fdivr
rol
adc
cmp
dec
aam
or
call
sbb
stc
xchg
loopne
call
mov
jle
aam
dec
cmp
push
xchg
movs
xchg
cwde
test
mov
lods
jmp
aam
xor
or
mov
pop
mov
sub
clc
fsub
and
call
add
or
or
lahf
scas
aam
jl
outs
enter
mov
popa
cwde
push
adc
sbb
jp
cs
ret
nop
hlt
and
push
sub
inc
js
fsubr
clc
pop
add
and
cld
js
mov
mov
dec
lahf
mov
or
rcl
out
ret
jns
pushf
rcr
js
sbb
add
lds
cwde
popa
push
and
mov
ja
popa
ss
shl
fdivr
shr
in
loopne
pop
push
xor
push
in
int3
dec
xor
mov
cli
hlt
push
pop
retf
or
fs
aam
inc
adc
bound
dec
adc
(bad)
fdivr
jns
add
ds
(bad)
in
or
aad
pop
xchg
rol
sbb
push
jmp
aas
les
sbb
test
jge
fs
lods
pop
repnz
xor
lock
dec
or
(bad)
in
stos
mov
loopne
call
hlt
sub
sub
data16
sti
mov
cmp
jno
imul
jne
mov
jp
inc
push
or
and
jmp
adc
std
shl
pop
pusha
and
push
xchg
ret
ins
adc
mov
sbb
adc
enter
inc
sub
sbb
hlt
jmp
cmp
sub
adc
enter
xor
jge
adc
int3
lea
pusha
cwde
popa
dec
popf
and
mov
adc
mov
inc
jp
mov
mov
jp
mov
scas
test
push
fs
xlat
test
inc
retf
popf
jl
sbb
pop
clc
jno
lods
sub
pusha
sub
lea
sub
fwait
je
js
dec
cwde
imul
je
sbb
sbb
mov
sbb
and
in
sbb
loopne
dec
(bad)
sbb
sub
jle
push
cmp
push
mov
sub
cmp
lods
xchg
sbb
enter
sub
pop
push
mov
mov
lock
xor
add
push
pop
je
(bad)
aam
fadd
add
sti
cmp
aas
mov
mov
lock
call
and
or
adc
shr
loopne
jns
inc
push
dec
mov
int
aaa
cld
cld
in
out
outs
repnz
fwait
int3
mov
outs
pop
push
pop
and
jo
mov
daa
cs
adc
les
mov
push
xor
stos
pushf
movs
daa
fst
aam
push
add
rcl
ds
stos
shl
loopne
or
mov
add
or
daa
lds
mov
movs
adc
rcl
sbb
fdiv
mov
aam
es
in
dec
dec
xchg
scas
cld
out
xor
mov
mov
and
dec
movs
add
aam
mov
mov
gs
mov
mov
xchg
mov
movs
into
mov
js
inc
xchg
call
xchg
inc
fdivp
les
std
in
test
mov
sub
mov
mov
pusha
sbb
xor
ficom
jle
gs
xchg
test
sub
gs
in
or
and
je
and
in
lods
pop
idiv
fsubr
mov
and
in
fwait
bound
lock
popf
js
cmp
or
je
bnd
dec
int3
dec
push
inc
int3
pop
pushf
pusha
icebp
push
pop
and
inc
or
sub
jae
rcl
fs
leave
adc
inc
js
jmp
dec
sahf
aam
cld
add
aad
pushf
lock
repnz
jnp
inc
mov
stos
je
sub
bound
ins
add
sbb
(bad)
or
aam
mov
pop
popf
clc
ds
and
in
lahf
test
pop
rol
xchg
dec
clc
rcl
sbb
mov
xchg
scas
movs
mov
jnp
inc
mov
shl
lock
sub
inc
bswap
aam
adc
pop
and
out
push
inc
mov
scas
mov
mov
(bad)
mov
cmp
lea
scas
mov
sar
icebp
pop
inc
les
lods
scas
les
and
add
cmp
cwde
inc
and
je
mov
mov
clc
(bad)
pop
sub
jb
or
int3
mov
scas
add
push
sbb
lock
pop
inc
xor
test
mov
or
pop
hlt
xor
sub
sub
ret
movs
push
fs
rcr
inc
dec
cdq
mov
test
in
jl
ror
loopne
js
push
rcl
cld
and
cli
lods
fsubr
mov
pop
or
pop
sub
pop
jg
mov
mov
sub
hlt
dec
xor
les
js
(bad)
into
in
cmps
push
add
int3
out
sub
cmp
sbb
popf
lock
mov
aaa
fdiv
jg
test
sub
cmp
inc
jo
push
sar
cwde
sti
test
sbb
sbb
mov
popf
in
imul
leave
mov
sbb
popf
jl
push
sub
rcl
dec
(bad)
movd
mov
clc
pop
adc
inc
push
xchg
sbb
clc
sbb
stc
mov
dec
jb
int
xor
fldenv
rol
in
push
mov
nop
adc
jne
cmp
push
(bad)
mov
lds
jo
mov
sbb
dec
cmp
aam
pushf
or
lods
mov
mov
or
loopne
test
and
imul
jne
pop
call
test
invd
sub
mov
mov
test
cmp
in
push
aam
fisub
sub
mov
fmul
adc
enter
mov
push
lods
jge
add
nop
fdiv
adc
sub
and
jo
mov
outs
push
sbb
pop
mov
movs
or
mov
cdq
nop
(bad)
mov
mov
les
xlat
js
jl
sbb
inc
jns
test
dec
call
test
je
loop
or
sub
or
or
popf
test
sub
ins
leave
cmps
ins
ror
jne
test
xchg
call
push
cdq
mov
shr
add
in
mov
scas
push
idiv
or
mov
pusha
int
(bad)
aam
cmp
xchg
shr
sub
mov
aam
dec
xor
out
mov
outs
dec
mov
xor
adc
idiv
sahf
dec
mov
push
xchg
ror
sub
(bad)
or
ror
les
mov
lods
adc
mov
aam
lods
or
rol
and
stos
cmp
xchg
outs
test
fdivr
adc
(bad)
xor
sbb
or
cmc
and
sub
ror
or
mov
cwde
xlat
mov
movs
ror
mov
ds
fs
pop
xor
aas
lock
movs
xlat
or
sbb
adc
pushf
ret
or
rcr
inc
cli
ins
cmp
or
data16
or
xor
xchg
stos
mov
mov
adc
mov
in
enter
cld
cmc
mov
out
dec
mov
or
sub
mov
aas
popa
movs
sbb
inc
mov
cmp
jle
test
xor
enter
dec
xchg
push
ficom
in
xor
hlt
dec
mov
xor
pcmpgtb
js
sar
adc
inc
inc
xchg
pusha
js
push
push
or
xchg
mov
xchg
pushf
scas
xchg
xchg
lods
inc
test
nop
xchg
popf
mov
mov
sub
nop
int3
in
sbb
lock
dec
adc
cld
(bad)
push
adc
dec
mov
jle
pop
adc
aam
jl
outs
fmul
xor
test
js
rcr
ins
pop
pop
pusha
mov
pop
push
std
xor
adc
cld
pusha
ss
mov
stc
(bad)
rol
fmul
xor
sub
lds
jb
adc
mov
xchg
scas
pushf
adc
lods
dec
and
enter
rol
(bad)
enter
add
mov
hlt
sub
inc
cmp
and
or
jbe
pop
ins
popf
adc
nop
mov
pmullw
inc
cmp
sar
shl
xor
call
(bad)
xlat
hlt
fstp
cmp
mov
in
in
iret
rcl
add
fsub
mov
js
add
fst
cmp
jno
fcomp
(bad)
fmul
rol
and
push
and
sar
je
hlt
pop
test
and
lods
int
lock
cmp
test
pop
mov
mov
xor
adc
test
fsubr
cmps
mov
fdivrp
(bad)
data16
mov
int3
push
xchg
xchg
sbb
add
jmp
push
data16
mov
ds
add
sbb
call
jb
cmp
je
lds
test
cwde
push
hlt
ror
sbb
push
or
icebp
sbb
sbb
rol
push
aam
ins
xor
mov
aam
fdivrp
test
mov
pop
push
lods
vandnps
(bad)
sub
pop
sbb
xor
and
imul
fs
clc
dec
or
cld
pop
hlt
rcr
inc
inc
mov
adc
scas
pushf
out
je
sbb
loop
mov
mov
sub
or
and
jbe
jns
mov
fimul
pop
mov
pop
fsub
inc
clc
jo
mov
cwde
sub
icebp
call
or
nop
or
add
add
fs
cwde
stc
jnp
ins
pop
lock
test
or
or
test
stos
into
and
dec
mov
std
lock
pop
dec
mov
cmp
mov
shl
mov
cmp
in
sbb
xor
(bad)
cli
jp
mov
jl
in
test
mov
jo
jp
inc
dec
dec
clc
or
inc
(bad)
leave
loop
pop
mov
ror
jb
cmp
clc
icebp
dec
mov
cmp
mov
and
mov
movs
hlt
push
fst
or
mov
sub
lds
sti
pop
inc
sar
cmc
xor
test
xor
mov
or
adc
ret
push
popf
cmp
mov
movs
js
push
lea
sub
mov
push
fsubr
add
or
js
hlt
je
cld
and
xor
ror
mov
mov
mov
sub
push
dec
fsubr
cmp
call
mov
sub
lds
lods
je
or
shl
fdiv
popf
inc
les
jle
iret
inc
retf
dec
shl
cmp
pop
(bad)
mov
sti
int3
jl
inc
mov
mov
icebp
pop
lock
jae
mov
adc
fld
fdivr
dec
sbb
inc
je
std
xchg
rcr
adc
jp
xchg
loopne
xor
push
or
pusha
cwde
lea
mov
test
sbb
loopne
enter
mov
icebp
adc
mov
mov
rol
enter
outs
aam
dec
call
fbld
adc
cmps
nop
mov
mov
cmp
sbb
retf
or
out
test
adc
and
icebp
lock
adc
test
int3
inc
cmp
adc
pusha
mov
pop
ins
int3
xchg
sub
jl
jnp
gs
fsub
cmps
ins
test
adc
add
sub
loop
call
push
pop
jl
(bad)
rcr
sbb
pop
sub
test
fnstsw
nop
dec
mov
mul
aad
cld
sub
lea
fdiv
jle
inc
mov
pop
mov
frstor
sub
lock
inc
call
push
cmp
lock
nop
adc
cld
ret
int3
adc
inc
fs
xor
in
(bad)
sbb
les
test
push
push
cwde
ins
pusha
fldcw
lds
dec
mov
and
dec
js
mov
clc
mov
adc
adc
mov
cmp
and
cmp
cli
dec
js
jo
ins
in
iret
xchg
xor
xor
in
or
sub
push
mov
and
xchg
pop
cdq
lods
cmp
pusha
jl
mov
push
test
stos
icebp
shl
outs
fs
cld
sbb
rol
jmp
or
hlt
and
sub
push
cmp
lahf
add
pop
and
addr16
inc
mov
pop
or
sbb
cwde
popf
test
mov
jmp
loop
out
or
sub
pop
inc
cld
movs
hlt
shl
pop
mov
cld
fs
js
jge
mov
jo
sbb
mov
movs
cwde
loopne
fwait
mov
inc
hlt
mov
fcomip
out
out
cmp
std
mov
ret
and
push
and
push
and
retf
pusha
sbb
mov
call
mov
cld
call
scas
test
inc
outs
inc
movs
test
pop
out
and
inc
pop
mov
pop
pop
jp
adc
and
clc
mov
or
loope
push
xor
scas
mov
lea
jmp
or
mov
sbb
mov
fs
in
or
xor
fsubr
stos
jo
push
cmp
ins
popf
hlt
loope
dec
inc
mov
pop
call
je
fsub
pop
fmul
xchg
cs
mov
pop
call
push
mov
push
fs
lods
push
pop
rcl
xchg
clc
loop
pop
fsub
sbb
sbb
imul
cmp
adc
pusha
enter
test
lock
pop
pop
mov
sbb
mov
xlat
fcomp
add
out
or
hlt
sub
pop
nop
mov
and
lds
xchg
js
mov
mov
or
cli
fs
cmp
stos
call
fst
(bad)
lock
or
jo
ins
mov
or
shr
cmps
adc
pop
ins
inc
mov
jb
popa
add
fsub
mov
sub
add
inc
dec
cli
nop
std
cmp
sub
xchg
inc
xor
mov
in
dec
pop
sbb
sbb
push
cmp
sbb
in
sub
in
ins
dec
addr16
fxch
mov
cmp
lock
test
movs
inc
out
sbb
popa
fiadd
xor
cwde
and
inc
lahf
sub
xor
leave
xor
mov
dec
mov
xor
push
xor
retf
loope
dec
mov
hlt
clc
cld
scas
(bad)
lock
call
ror
in
and
lods
sbb
les
push
or
shl
aaa
add
test
push
or
and
dec
mov
sub
mov
mov
cmc
ins
sbb
in
in
mov
adc
loopne
dec
ror
push
lea
shl
jl
sub
clc
stos
add
retf
lods
adc
jecxz
fild
push
imul
mov
clc
or
mov
cmps
mov
ror
mov
mov
sbb
pop
dec
inc
imul
push
enter
sahf
hlt
ja
imul
pop
fimul
mov
adc
add
xchg
jo
xchg
push
sbb
add
push
std
sub
push
adc
jne
pop
sub
xor
adc
xor
adc
mov
pop
or
mov
jb
arpl
fild
fwait
mov
fs
xchg
or
call
retf
adc
mov
movs
mov
cwde
jne
sbb
aam
add
mov
int
adc
jne
mov
jae
popa
inc
sub
inc
pushf
data16
add
pop
cmp
add
push
dec
mov
movs
sub
cs
je
aaa
mov
xchg
push
dec
dec
mov
fsub
mov
jbe
mov
sbb
pusha
add
push
sub
sar
lds
in
lods
inc
out
xor
add
movs
push
lea
int3
inc
ret
or
mov
sub
xor
xor
cmp
pop
and
or
jl
(bad)
mov
in
mov
add
stos
mov
add
jne
sbb
add
int3
inc
dec
out
mov
cdq
mov
or
cmps
xor
pop
aam
fs
or
clc
and
out
jo
call
push
jo
sbb
sbb
clc
icebp
or
mov
lods
outs
hlt
mov
or
add
bound
aam
fmul
or
mov
inc
sahf
test
push
dec
jl
mov
cmp
pusha
add
and
mov
inc
dec
jmp
sbb
dec
pop
mov
in
lods
fcom
test
nop
inc
adc
in
sbb
sub
pop
retf
push
ror
iret
in
es
sub
into
call
call
sbb
outs
(bad)
aam
je
jp
test
xchg
cmps
and
test
mov
sbb
loope
into
int3
mov
cmp
std
jb
ror
sub
sbb
sti
xchg
and
cmp
jg
mov
outs
pusha
xchg
sahf
in
mov
test
les
fisubr
push
call
cvtps2pi
sub
or
cld
adc
mov
pop
inc
test
jnp
in
dec
aad
cmps
fsubr
xor
jl
jl
sahf
mov
dec
xor
mov
push
mov
sub
and
adc
mov
cmp
rol
mov
icebp
stos
popf
mov
cmc
fs
cmp
cmp
push
in
or
mov
and
sub
cmps
aam
aas
inc
in
cld
cdq
mov
clc
ins
push
fild
jge
outs
sub
jecxz
cwde
mov
sbb
or
xlat
in
retf
lock
push
es
daa
in
push
pop
ins
loopne
sub
jb
mov
daa
leave
pusha
sbb
imul
push
aam
out
add
int3
mov
ins
fs
mov
scas
xor
cmp
xor
neg
lea
mov
gs
je
sub
and
push
dec
inc
push
je
bound
(bad)
int
cmp
int
es
pop
out
ss
dec
mov
push
add
repnz
sbb
rep
xchg
movs
adc
cdq
mov
lods
jl
ss
fadd
mov
movs
fsubr
mov
mov
movs
add
sbb
int
add
jmp
shl
fdivr
pop
or
mov
in
inc
dec
mov
sbb
xor
add
and
aam
xor
int3
cwde
jl
and
lods
cli
adc
sbb
xchg
xchg
dec
sbb
inc
pop
out
pushf
xor
cmp
cmc
mov
movs
mov
jbe
scas
movs
sbb
ins
adc
cdq
cwde
mov
ja
mov
cmp
rol
mov
jnp
mov
sbb
nop
fmul
fistp
dec
mov
loopne
mov
cmp
pop
lahf
clc
test
test
or
data16
xchg
mov
sub
bound
dec
or
and
push
inc
inc
lock
mov
retf
les
push
pop
std
xchg
rcr
jns
sbb
inc
dec
int3
repz
and
add
mov
enter
rcr
loopne
mov
sbb
fld
ins
mov
pop
push
lahf
jecxz
jno
js
loopne
mov
mov
add
inc
mov
mov
arpl
dec
fstp
loopne
test
mov
cwde
punpcklbw
lods
les
lods
cdq
pusha
inc
jmp
in
test
jmp
cli
mov
mov
fsubr
pusha
fmul
add
cmc
sbb
stos
sub
inc
je
mov
loopne
sub
shr
mov
aam
or
and
movs
pop
xchg
cmp
adc
sbb
and
adc
in
je
add
pop
gs
dec
enter
sub
cld
push
cld
adc
fdivr
mov
test
ret
mov
leave
aam
pop
cwde
bound
push
or
inc
sub
clc
loopne
dec
daa
mov
dec
enter
sub
mov
sbb
mov
test
push
dec
adc
mov
(bad)
and
int3
aaa
(bad)
mov
out
or
hlt
and
xchg
out
cld
(bad)
hlt
and
ins
jl
fidiv
outs
fcomp
mov
(bad)
mov
scas
retf
pushf
pop
pusha
nop
clc
cwde
xor
fdivrp
in
out
pop
pusha
add
icebp
ss
sub
push
and
mov
ds
sbb
jo
fucomp
cld
add
push
cwde
int3
cld
test
pusha
push
or
pop
loop
js
mov
inc
in
int3
pop
dec
xchg
pop
and
aaa
lock
test
stos
cmp
ins
test
pop
jl
in
ins
fimul
sub
or
dec
xchg
push
int3
clc
xor
xor
mov
jbe
pop
push
push
mov
fst
int3
mov
and
inc
xchg
ins
mov
or
(bad)
mov
scas
repnz
jl
mov
int3
pushf
mov
sbb
mov
test
mov
mov
js
mov
pushf
enter
cwde
ret
enter
and
or
int3
xlat
xor
xchg
mov
repz
mov
and
retf
loopne
push
push
pop
jl
hlt
push
add
test
lods
inc
inc
ins
push
mov
pop
je
je
cwde
hlt
add
mov
mov
nop
jo
je
add
cdq
cmp
out
jl
jge
les
js
fcomp
mov
add
pop
mov
adc
mov
jl
in
int3
fcmovbe
mov
je
xor
adc
jecxz
push
adc
neg
je
cld
sub
xchg
nop
ds
adc
ss
ins
xor
xor
jo
pop
mov
cld
test
pop
push
cmp
movs
cdq
enter
fidiv
rol
or
je
cwde
test
mov
sub
sub
inc
add
in
sbb
aam
les
in
popf
inc
add
cmp
fsub
ins
ror
rol
fcomp
dec
push
(bad)
loopne
add
mov
in
inc
pusha
ins
or
adc
lea
hlt
mov
cmc
js
mov
fcomp
adc
pushf
mov
jmp
sub
xchg
mov
in
call
ins
push
test
loop
pusha
lea
mov
mov
xchg
cmp
xor
mov
and
pushf
jbe
es
adc
cmp
or
mov
lods
cmp
fild
out
and
in
fadd
les
shl
fs
aad
mov
ins
pusha
in
int3
pop
adc
mov
stc
xor
xor
sbb
push
call
loop
xchg
or
pushf
sbb
in
ins
pusha
and
mov
mov
fdiv
xor
mov
push
adc
movs
mov
and
mov
std
pop
(bad)
adc
clc
mov
fadd
mov
cmp
or
push
adc
aam
test
scas
not
mov
mov
xchg
les
les
sub
mov
call
mov
pop
clc
push
hlt
cdq
jno
pop
or
push
sub
pop
inc
inc
hlt
mov
cwde
lods
sbb
lds
dec
mov
add
xor
sub
mov
(bad)
adc
pop
test
mov
clc
rol
and
mov
push
mov
movs
in
cwde
or
fimul
cmp
hlt
pusha
in
int3
push
pushf
and
jecxz
ret
inc
nop
pop
scas
sub
push
inc
mov
add
or
mov
add
das
jo
inc
test
fdiv
mov
call
xchg
and
pop
pop
loopne
and
ds
and
lods
xchg
pop
bound
adc
clc
mov
mov
or
pushf
sub
and
mov
cwde
or
lods
test
xlat
lahf
jmp
or
inc
xor
push
nop
daa
fcom
inc
mov
xchg
xor
cmp
adc
cmp
or
fcomp
stos
or
cmp
or
cmp
jmp
and
push
and
aam
stc
inc
cmp
push
dec
ret
xchg
ins
push
ins
cmps
mov
fs
adc
or
jno
mov
adc
pop
push
pop
sbb
lods
sub
js
repnz
in
aam
or
push
sub
jae
popf
pop
les
mov
add
int3
pushf
pop
mov
or
pop
add
fs
pop
mov
mov
sub
lea
adc
sbb
aad
pop
mov
sbb
adc
sbb
icebp
je
call
sub
mov
js
xor
int3
lea
jne
mov
enter
popa
je
sbb
mov
pusha
cmc
xchg
sbb
mov
push
xor
sbb
loopne
pop
nop
adc
cmp
les
fist
icebp
(bad)
sub
inc
lods
dec
ds
jecxz
cmp
repnz
pop
idiv
xlat
pop
pop
and
add
loopne
shl
ins
mov
add
cmp
fist
data16
pop
fisttp
icebp
push
shl
sub
(bad)
loopne
call
push
push
fmul
cmc
sbb
adc
aam
movs
bound
mov
les
cmp
push
jno
xor
ret
stos
in
add
lods
jnp
adc
movs
mov
sbb
push
add
jne
pushf
add
or
xchg
xchg
push
aam
pusha
push
dec
dec
mov
cmp
xchg
push
mov
xchg
or
mov
mov
cdq
pop
mov
cmp
push
mov
and
test
mov
rcl
sbb
inc
jmp
addr16
clc
in
fs
lock
add
ins
pop
xor
fnstsw
mov
and
test
shl
mov
mov
or
mov
cmc
rcr
xchg
jb
cmp
cs
xor
mov
push
mov
out
push
aam
cmc
mov
call
or
clc
xchg
sbb
lahf
test
push
aam
cld
push
aam
add
sub
cld
dec
xor
ror
pop
mov
push
retf
mov
es
pop
pop
sub
dec
or
sub
push
adc
dec
fs
adc
push
repnz
cmps
lods
scas
in
jmp
xchg
fs
inc
rol
les
mov
cld
mov
rol
clc
jae
sbb
std
xor
sub
sub
inc
pop
nop
inc
in
cwde
rcr
aam
out
and
adc
fwait
fwait
movs
mov
pop
sub
fisub
push
xchg
jl
je
or
xor
mov
clc
cmps
int3
jl
and
fs
aam
pop
pop
lods
push
pushf
(bad)
shl
sub
add
rcr
add
rcl
mov
adc
and
pop
test
mov
jnp
adc
imul
mov
xchg
mov
adc
jo
mov
or
int3
loop
adc
xchg
movs
sbb
fistp
inc
xchg
mov
pop
or
mov
sbb
push
pop
ins
lock
(bad)
ss
sbb
mov
cmp
adc
fs
(bad)
pop
test
hlt
lods
cwde
sbb
sub
and
shl
jmp
ror
sub
inc
dec
ds
pop
xchg
jl
call
add
xchg
ins
mov
mov
mov
push
enter
xor
shl
loopne
cmp
and
movs
pop
icebp
mov
cmp
ret
push
jb
xchg
je
lods
push
shr
sti
or
push
push
xlat
rcr
push
dec
je
mov
fucom
les
dec
mov
push
cld
icebp
in
and
xchg
and
add
or
add
or
and
pop
sub
mov
inc
inc
dec
(bad)
fisttp
xchg
or
and
pusha
dec
lock
hlt
loopne
push
inc
xor
mov
or
dec
cld
loope
fadd
xor
jo
xor
mov
clc
inc
js
mov
ins
jnp
stos
enter
ins
jle
inc
clc
or
in
call
push
xor
mov
xor
ds
pushf
add
mov
cwde
cwde
pusha
push
cmp
pop
pushf
or
mov
cmc
hlt
sbb
adc
mov
dec
test
leave
sbb
test
lock
in
or
lahf
and
jne
jns
add
call
mov
fisttp
inc
mov
daa
or
push
sub
pop
cmp
ins
mov
sub
adc
mov
cwde
add
(bad)
pusha
inc
cmp
mov
in
pusha
pop
jp
push
sub
daa
mov
movs
push
data16
mov
cmp
nop
call
dec
sahf
fidiv
cld
inc
cmp
into
pushf
xor
pop
ins
mov
test
sahf
adc
in
push
nop
sub
xor
in
pushf
in
fcomp
dec
clc
inc
dec
push
pop
fmul
and
js
jmp
push
jo
leave
test
loop
call
xor
dec
ror
sbb
pop
inc
inc
mov
mov
mov
xchg
mov
cld
popa
xchg
pop
in
sbb
call
sbb
jo
add
xchg
sub
mov
pop
test
adc
(bad)
push
in
dec
push
out
dec
sub
or
test
push
and
mov
inc
mov
jl
dec
mov
and
xor
jo
rcl
or
xchg
cld
cdq
js
aam
mov
pop
jl
xor
out
mov
addr16
js
loopne
shl
aad
push
mov
cmp
inc
lods
fldcw
jno
call
and
test
add
in
cmc
je
call
pop
jl
int3
sub
ss
pusha
ror
mov
pop
push
inc
mov
cwde
xlat
ss
add
test
repz
fadd
mov
jge
repz
cld
sar
in
sub
xor
add
xchg
cli
in
leave
pop
adc
test
fldenv
mov
sbb
sbb
or
xchg
hlt
hlt
stos
in
or
mov
sbb
mov
movs
jne
es
loope
in
and
cmps
and
mov
std
clc
or
or
(bad)
repnz
cmp
push
adc
fsub
pop
test
dec
in
ds
cwde
or
rcr
push
add
in
jb
add
sbb
fsubr
xor
or
dec
pusha
sbb
add
xor
add
mov
inc
push
ins
inc
adc
hlt
or
adc
fsubr
dec
test
inc
inc
stos
mov
into
cld
loope
xchg
ins
mov
movs
in
lods
push
dec
and
test
sbb
in
cdq
dec
sub
jle
nop
imul
lock
fnstenv
test
test
lods
jns
inc
mov
jo
mov
in
cs
xchg
pushf
and
in
hlt
pop
fild
sub
cmp
inc
adc
cwde
mov
test
push
test
ror
xchg
adc
mov
les
fld
cld
mov
cli
nop
or
and
aaa
faddp
retf
and
pop
and
fs
mov
fs
mov
pop
mov
inc
js
add
adc
xchg
mov
rcl
add
add
pusha
xor
mov
mov
ins
inc
mov
cld
inc
inc
adc
in
or
xchg
js
and
xor
xchg
push
add
enter
clc
pop
xchg
sbb
pusha
rcl
cwde
js
sbb
lock
rcr
jb
adc
das
add
push
push
mov
cmp
test
in
xchg
xlat
sbb
in
out
lods
shr
into
push
stos
cmp
cld
ror
inc
mov
or
shr
lock
test
xchg
sub
cmp
cmp
and
jmp
test
lods
xor
dec
adc
cld
adc
add
jmp
push
cld
and
xchg
and
js
adc
data16
sbb
into
nop
jg
fs
dec
xlat
inc
and
fcom
cmp
int
jb
inc
xor
lea
ds
or
test
adc
nop
test
mov
mov
fnstsw
mov
jns
popa
inc
mov
mov
jbe
inc
clc
dec
out
retf
dec
fsub
movs
cmp
xchg
aam
cmp
in
dec
pop
dec
pusha
sbb
js
add
int3
daa
cmp
mov
push
mov
sub
adc
fs
sbb
xchg
pushf
and
test
inc
(bad)
pushf
push
in
in
ret
mov
int
or
ds
sbb
repz
clc
enter
shl
aam
ret
pusha
jge
inc
mov
push
hlt
sahf
jl
mov
outs
jl
shl
icebp
fsubr
dec
mov
nop
rol
pop
sbb
sbb
test
idiv
or
in
inc
js
lock
ins
ins
mov
cmp
(bad)
fidiv
cld
scas
in
lock
leave
mov
into
lock
mov
in
aam
or
sbb
xor
fcomp
ds
push
sub
hlt
ret
xor
ror
xor
mov
pop
or
scas
fidiv
icebp
clc
jns
sub
add
and
mov
les
aaa
push
jno
jmp
mov
enter
call
aam
jp
aad
jl
movs
inc
int3
push
fs
and
jp
hlt
leave
mov
push
sbb
in
mov
popa
in
sahf
adc
test
add
sub
movs
jo
cld
in
shl
mov
pop
fwait
inc
mov
jno
mov
ja
popa
push
jl
push
icebp
jle
add
push
hlt
in
imul
mov
sub
inc
sbb
cmp
call
jl
ds
call
ja
rcl
std
and
jl
hlt
inc
movs
lods
call
dec
cmp
movs
lock
sbb
bnd
add
outs
mov
rcl
js
es
sub
arpl
add
mov
jno
popa
cmp
inc
jno
adc
sbb
mov
push
jl
pusha
xchg
lods
cwde
xor
jmp
dec
cli
in
push
add
sbb
mov
jge
or
fld
adc
cmps
pusha
and
dec
sub
add
sbb
lock
clc
add
jmp
movs
cmp
test
push
into
mov
fdiv
loopne
fadd
adc
adc
cld
retf
inc
shl
test
add
in
cmp
mov
ins
jl
inc
cli
push
and
pop
(bad)
aaa
(bad)
clc
pop
xchg
jo
or
push
hlt
aam
ss
push
mov
pop
cmp
jl
int3
push
retf
mov
mov
cmp
sub
in
sbb
inc
cmp
std
pusha
not
aas
dec
lock
sub
cmp
and
ins
cdq
adc
or
dec
cmp
push
push
sbb
bound
xlat
shl
pusha
and
xchg
mov
cmp
je
jo
test
mov
inc
pop
jne
adc
add
pop
mov
fwait
pop
pusha
pop
js
mov
cmp
inc
jns
popa
jno
shl
mov
movs
aam
jns
inc
lods
xchg
leave
cwde
add
ins
cmps
xor
push
adc
mov
push
cmp
adc
ins
call
xor
dec
bound
popa
or
pop
or
xchg
mov
sbb
in
push
mov
and
je
xchg
sub
xor
fcom
mov
cmp
mov
add
jecxz
push
adc
xchg
sbb
pusha
cmc
cwde
les
lea
call
movs
aad
cdq
xor
sub
es
pusha
cmp
es
cwde
mov
mov
jp
pusha
push
mov
clc
xchg
popf
sti
xchg
loopne
ficom
mov
pusha
rcl
(bad)
xchg
in
xchg
aam
mov
out
or
hlt
(bad)
mov
ins
loopne
loopne
fsub
inc
sbb
ins
aas
in
push
mov
fistp
lock
cmp
fcomp
adc
xchg
(bad)
shl
push
cwde
cwde
inc
jo
loop
int3
mov
and
lock
inc
(bad)
pop
call
fdiv
mov
js
cmp
mov
push
pop
inc
lods
mov
lahf
repnz
hlt
out
push
adc
cmp
out
or
push
das
fsubr
cmps
mov
add
leave
jge
push
xchg
dec
push
xor
xchg
inc
jo
bound
mov
cmp
jbe
mov
sbb
loope
retf
in
adc
cmp
mov
es
xor
pop
xchg
push
cmp
add
in
push
loopne
pop
inc
mov
ds
push
mov
xchg
xchg
lods
ja
inc
mov
lods
sahf
jmp
adc
mov
loope
or
and
jmp
call
xchg
movs
sbb
nop
or
out
adc
jno
mov
cmc
(bad)
lods
xchg
jno
lock
mov
aas
xor
int3
sti
rol
cmp
movs
sbb
push
sub
push
ret
dec
retf
pop
lock
sbb
jl
jb
fist
cld
and
dec
ftst
mov
mov
and
cwde
cmp
mov
adc
psrad
dec
pop
and
or
pop
clc
sbb
movs
fs
pop
ja
mov
cmp
and
gs
lea
mov
and
jb
fsubr
aaa
(bad)
les
push
call
push
movs
ret
adc
add
enter
cwde
dec
int3
je
push
js
push
in
and
add
or
lea
mov
loopne
or
mov
sbb
lods
pop
out
mov
nop
mov
fs
sub
xchg
jo
movs
and
dec
mov
mov
inc
inc
mov
cmp
inc
enter
leave
pop
and
jp
inc
popf
mov
loopne
call
inc
sub
xchg
xor
sub
sub
retf
jb
mov
pop
outs
xlat
movs
data16
mov
or
mov
and
enter
cwde
xor
stc
fcom
add
ficom
push
sbb
sbb
fs
inc
lds
mov
pop
xchg
inc
xchg
mov
rol
jbe
bound
sub
xor
lahf
xchg
repz
leave
adc
jo
mov
pushf
jmp
cli
xchg
movs
rol
clc
je
sbb
inc
jmp
not
ret
pop
dec
sbb
inc
nop
mov
pop
add
ins
mov
bound
loope
cmps
callw
scas
clc
adc
sub
leave
push
in
and
std
scas
sub
in
pop
xor
push
ret
jl
mov
int
sub
retf
xchg
cld
pusha
sub
sub
adc
mov
jne
cmp
in
jbe
xchg
jbe
dec
inc
xchg
mov
int3
push
xor
or
adc
jo
dec
sbb
test
sti
add
cs
jns
inc
sbb
or
cmp
jl
aam
or
hlt
stos
cld
stos
pop
xor
dec
mov
jl
movs
adc
or
jo
(bad)
test
hlt
jne
cld
pushf
and
sub
je
je
sbb
mov
cmps
loopne
and
in
aaa
out
jo
addr16
int3
jmp
movs
test
and
fdiv
outs
in
cmp
in
dec
fbstp
push
dec
add
mov
mov
and
xor
cld
out
hlt
ins
ds
fmul
adc
fstp
clc
adc
adc
int3
mov
aad
in
aad
xchg
sub
outs
xchg
or
jne
sbb
aam
pusha
jns
enter
add
mov
fisubr
mov
cmp
inc
je
fs
push
je
clc
stos
cld
lock
iret
test
iret
push
xor
sbb
jo
jecxz
push
je
in
xlat
dec
pop
aam
pushf
adc
jbe
pop
xchg
pushf
cmp
add
inc
sbb
addr16
movs
cld
adc
mov
(bad)
mov
je
cmps
or
lock
loope
xor
cmp
lock
cwde
or
jp
jne
js
loopne
js
xchg
(bad)
cwde
test
mov
mov
mov
cwde
js
sbb
je
or
mov
jmp
enter
sub
push
ins
ins
cmp
or
and
inc
movs
jb
shl
cmp
test
ds
pusha
mov
push
push
sbb
sub
cld
stos
fs
or
shl
dec
clc
adc
mov
cmp
std
mov
push
aam
in
fs
pop
out
loopne
jo
enter
jmp
xchg
pusha
ret
xor
push
enter
nop
mov
lock
hlt
lds
aaa
push
dec
shl
lods
in
mov
je
adc
popf
scas
in
pop
js
sar
aaa
xor
xor
and
mov
test
loope
or
je
cld
sub
xor
xchg
xor
in
jo
fcom
inc
inc
ins
retf
jbe
addr16
sbb
and
test
inc
sub
dec
(bad)
mov
fidivr
xor
inc
pop
lock
adc
sub
adc
fdivr
in
int3
aaa
add
jnp
test
cmc
push
sbb
in
push
jns
inc
mov
les
sub
shr
aam
int3
mov
push
and
and
sub
retf
cmp
fsub
add
add
jo
mov
xor
scas
int3
xor
js
and
pop
sub
shr
fsubr
shl
or
inc
and
push
(bad)
ror
xor
movs
push
push
adc
mov
hlt
test
mov
adc
xchg
std
dec
je
adc
dec
xor
test
adc
pushf
and
xchg
inc
mov
in
mov
push
dec
aad
jo
sbb
sub
sbb
dec
mov
loopne
fadd
sbb
loope
orps
daa
sub
adc
pop
cmp
pushf
and
cld
or
mov
cmp
and
gs
aad
and
mov
(bad)
ror
sub
in
call
imul
test
ja
sbb
xchg
jno
clc
pushf
or
xchg
jl
in
dec
xor
pusha
pop
add
mov
inc
lods
and
lds
call
sar
inc
out
and
cld
jno
mov
add
mov
mov
sub
add
(bad)
nop
lea
shl
enter
sbb
and
iret
add
test
push
(bad)
cld
xchg
mov
mov
xchg
ffree
push
mov
push
fdiv
cwde
int3
xor
mov
loopne
lock
mov
inc
je
mov
push
fild
in
mov
shl
pop
and
test
ins
ins
in
pusha
sub
and
call
push
pusha
cmp
dec
push
push
fnstenv
aam
jns
add
aas
jbe
(bad)
pop
cmps
xor
cmp
(bad)
sub
sbb
fs
pusha
enter
(bad)
cmp
sub
aam
int3
popf
xchg
ins
cwde
test
in
ins
and
and
imul
mov
adc
cmp
movs
clc
int3
pop
xor
in
inc
test
lods
mov
stc
pop
sub
mov
(bad)
and
add
(bad)
inc
js
fs
adc
mov
mov
sbb
lock
arpl
(bad)
dec
les
je
sub
or
cmp
mov
enter
je
imul
mov
xor
sbb
pop
and
inc
cmc
inc
lds
xor
adc
loope
in
or
mov
inc
nop
dec
jl
pop
cs
sub
lds
adc
imul
sbb
push
cld
xchg
pop
and
cld
jg
and
les
and
and
pop
dec
fmul
jo
lahf
and
mov
cmp
test
dec
xor
arpl
cmp
in
xlat
cmp
test
clc
adc
ins
sbb
(bad)
adc
mov
mov
and
or
punpckhdq
or
add
inc
mov
push
or
or
pusha
cld
test
lock
movs
xor
cdq
inc
pusha
fild
(bad)
dec
retf
clc
std
xchg
pop
and
sti
std
add
or
mov
in
test
push
dec
dec
xor
test
mov
aam
inc
xor
xchg
mov
adc
push
in
lods
aam
mov
fcomp
pop
sbb
jno
stc
or
mov
fadd
int3
cmp
inc
push
repz
add
jmp
test
iret
or
test
shr
loop
ins
jle
call
call
inc
test
sub
imul
pop
mov
sub
fdiv
les
pop
push
mov
cmp
sbb
(bad)
mov
loop
sbb
adc
or
fsub
lods
cdq
xor
inc
or
ins
mov
or
je
pusha
shr
mov
aam
or
loop
test
or
cwde
pop
lock
xor
ror
js
call
mul
xchg
test
pop
call
bound
mov
(bad)
ficomp
mov
jl
shl
or
adc
loop
enter
aam
cmp
test
jo
xor
sub
mov
or
push
mov
cld
and
hlt
in
xchg
xchg
enter
dec
cmps
enter
sbb
push
push
push
cmp
dec
loop
or
pop
add
ret
dec
push
push
mov
inc
xor
jg
fs
int
cmps
push
call
mov
push
rol
nop
xor
call
je
jmp
stc
lods
xor
and
das
es
sub
adc
cmp
out
js
mov
xor
(bad)
bound
pop
test
mov
(bad)
movs
pop
movs
dec
int
xchg
hlt
adc
dec
xor
sbb
rcr
xor
mov
cmp
ins
adc
xchg
xor
xlat
lock
or
stos
sub
jbe
scas
mov
les
fmul
test
les
fs
pop
jl
sbb
or
sub
xchg
fldenv
xchg
sub
xor
push
sbb
or
xchg
sub
rcl
sahf
cmp
neg
clc
ret
ins
in
mov
fs
lods
(bad)
je
pushf
and
jg
js
mov
in
cdq
xor
inc
sub
dec
cmp
add
test
and
out
mov
test
std
sar
je
mov
clc
inc
pop
cld
mov
jo
sbb
gs
adc
cs
pushf
popa
pop
cwde
cs
add
or
mov
repnz
pop
cwde
mov
dec
xchg
inc
xor
call
xchg
jl
aam
or
jne
sbb
xchg
add
adc
call
jle
shl
lods
or
xchg
mov
pop
fdiv
adc
add
sub
(bad)
pushf
cmc
test
out
mov
data16
dec
jne
dec
test
xchg
aam
iret
mov
push
cwde
pushf
mov
les
cwde
jge
in
sub
and
sub
rol
xor
pushf
out
fidiv
mov
jecxz
add
sbb
call
push
adc
cwde
jb
pusha
and
enter
jnp
inc
push
cwde
fiadd
mov
mov
xchg
jge
jbe
cwde
mov
mov
adc
mov
mov
test
push
or
mul
dec
add
(bad)
nop
dec
and
pop
xchg
inc
dec
inc
mov
arpl
mov
xchg
in
(bad)
xor
shl
fisubr
mov
mov
nop
sbb
add
sar
jo
cdq
mov
retf
ds
add
not
cmc
xor
inc
aam
sbb
icebp
or
mov
dec
out
sub
jmp
adc
inc
jb
js
and
sahf
inc
in
lock
loop
xor
and
loop
sahf
fdivr
loopne
adc
fmul
enter
enter
dec
les
hlt
mov
loopne
or
pop
and
push
add
sbb
aam
xor
cmps
imul
add
mov
shr
mov
sbb
cmp
cld
xchg
xor
sub
fmul
inc
lods
mov
cmp
test
lods
lock
xchg
or
pusha
push
test
xchg
ins
int3
xchg
cmp
inc
or
cwde
loop
xchg
cwde
(bad)
repnz
mov
movs
popf
add
xor
test
iret
nop
cmp
fld
and
mov
das
jmp
and
or
inc
frstor
mov
cmp
mov
mov
in
mov
and
rcl
mov
pop
cwde
data16
inc
(bad)
pop
ins
lods
inc
pusha
clc
push
mov
gs
in
rcr
ds
mov
dec
fsub
mov
cmp
and
pusha
inc
or
or
clc
ss
enter
jl
add
ret
xor
cmp
cwde
loop
or
sub
xchg
dec
mov
mov
inc
loope
cmp
dec
xor
ficomp
add
sbb
jo
movs
les
ins
pop
push
cmp
cli
dec
mov
jno
fild
nop
icebp
sbb
xchg
mov
push
fmul
push
in
xor
push
mov
test
in
push
inc
xor
adc
sbb
clc
pop
cmp
(bad)
sbb
push
hlt
test
sbb
fcomp
test
mov
cwde
jmp
popf
jb
in
ins
jp
inc
jp
lahf
nop
test
mov
xor
rcl
xchg
enter
sbb
pop
push
push
mov
xor
add
push
fs
mov
mov
xchg
scas
or
shl
sbb
int3
out
inc
xor
push
dec
cld
int
push
cmp
js
das
jmp
xchg
fist
mov
pop
jb
mov
xor
add
mov
and
ins
jns
pop
cmp
add
add
aaa
je
out
xor
mov
rcr
fs
aas
mov
out
pop
clc
hlt
push
push
jo
ins
dec
and
mov
mov
adc
mov
aam
movs
(bad)
mov
ror
fmul
mov
xchg
sar
fsub
outs
sbb
mov
in
cmp
adc
inc
pushf
xchg
(bad)
test
mov
sub
mov
out
lea
and
cmp
and
iret
mov
jmp
test
popa
cmp
mov
hlt
mov
or
cmp
pop
xor
adc
movs
std
dec
fnstsw
push
cld
mov
xchg
clc
jmp
xor
js
call
(bad)
fsub
popf
mov
std
test
and
sbb
loopne
mov
scas
in
frstor
nop
cs
jae
clc
nop
loop
les
pushf
ins
test
jl
bound
sub
cmp
pop
int3
xchg
lods
pop
mov
mov
mov
xchg
lock
sbb
and
jle
cdq
mov
jp
jno
push
inc
mov
cmp
push
xor
stos
je
(bad)
mov
and
pusha
fidiv
or
in
pcmpeqb
mov
in
cmp
add
cmp
test
je
inc
push
dec
test
movs
shr
sbb
clc
xor
retf
cmp
jo
out
out
lock
call
je
add
jne
sbb
in
test
rol
mov
sbb
hlt
mov
cmp
push
sbb
movs
ror
cmp
shl
pop
mov
enter
pushf
std
ficom
jecxz
push
(bad)
jl
je
mov
rol
js
sbb
adc
jge
push
sbb
(bad)
sub
inc
or
add
mov
push
jle
dec
nop
stc
mov
ja
pop
and
repnz
xchg
ret
fs
cmp
xor
mov
xchg
sub
loopne
mov
aad
js
cmps
dec
jl
ss
ds
mov
outs
ficom
and
sbb
mov
test
jo
fwait
retf
cmp
nop
mov
enter
fmul
sbb
inc
repnz
jp
inc
stos
inc
xor
cmp
xchg
loope
pop
ret
jo
mov
in
dec
push
movs
es
sub
jo
push
xchg
lds
movs
rcr
and
push
fcom
push
jl
mov
xor
je
xchg
lods
shl
fcomp
cmp
sbb
mov
dec
mov
das
loopne
das
dec
shr
aam
cmp
adc
sub
adc
push
pushf
seto
js
call
movs
fcomp
mov
cwde
mov
retf
push
pop
sar
push
adc
cmp
aas
and
rcl
mov
cmp
sub
fs
iret
push
movs
pop
jmp
pop
mov
xor
pop
cmc
xor
push
fwait
pop
or
adc
ins
cmps
mov
inc
xchg
loope
dec
sub
dec
je
mov
cwde
fadd
jg
in
(bad)
pop
dec
sbb
stos
push
mov
enter
lock
loop
push
aam
sub
test
pop
fdiv
and
xchg
retf
mov
adc
mov
ins
fild
test
js
call
in
fwait
add
gs
sub
jmp
adc
and
push
sbb
sti
sub
mov
js
mov
push
add
push
add
pusha
push
push
in
adc
je
call
test
sti
fsubr
sti
jb
cmps
pushf
sub
loopne
or
sub
cmp
lods
leave
push
cmp
pop
pusha
push
push
gs
(bad)
fsub
sbb
cmps
inc
imul
cs
in
pushf
xchg
or
xor
dec
and
call
mov
or
stc
push
ret
mov
adc
pop
jl
sbb
inc
add
jl
sbb
mov
pop
stos
mov
push
ins
in
fcomp
and
ins
enter
scas
in
sbb
jne
sbb
inc
jle
js
push
pusha
mov
and
or
fwait
shl
push
nop
pop
into
xor
lods
int3
mov
jl
mov
cmp
inc
xor
cmp
xor
aam
bound
int3
add
mov
fs
fwait
stc
dec
pushf
ja
mov
sub
or
and
clc
rol
es
jp
inc
or
cwde
pop
and
jno
jo
mov
sbb
cmp
push
cmp
xchg
test
xchg
mov
in
mov
xchg
mov
js
add
in
rcr
xchg
jl
cmp
jbe
movs
not
enter
jmp
pop
mov
mov
test
or
cmp
stc
test
fild
push
test
mov
cmp
inc
xor
inc
lods
(bad)
add
mov
adc
movs
enter
sbb
shl
aam
mov
call
je
mov
stc
sub
call
xor
dec
cmp
mov
cmp
push
pushf
push
ins
push
movs
cwde
fld
pushf
loopne
icebp
add
cmp
enter
mov
cli
pusha
or
sub
data16
inc
mov
cmps
dec
cld
mul
call
hlt
push
imul
inc
lahf
rol
movs
cwde
cmps
call
aad
les
fdivr
mov
adc
push
jg
clc
loop
je
data16
mov
pop
add
push
add
jl
mov
hlt
cmps
fsubr
movs
inc
mov
shl
fst
dec
mov
adc
clc
jns
dec
sub
shl
xchg
sbb
sbb
jp
mov
mov
mov
in
clc
hlt
in
mov
repnz
sahf
add
cmp
icebp
enter
push
hlt
xor
xor
sub
lods
loope
retf
in
loopne
mov
mov
js
jo
or
xchg
stos
mov
xor
dec
mov
adc
cmp
fcom
and
out
or
xchg
das
push
sub
jecxz
ret
adc
dec
enter
popa
aam
ins
or
mov
and
mov
hlt
xor
pushf
jmp
xor
xor
sbb
sbb
inc
pop
dec
pushf
fs
call
adc
sti
adc
push
fst
repz
js
nop
mov
push
or
cmps
mov
inc
pop
or
and
sub
fsubr
push
inc
ds
and
jl
into
lock
mov
dec
and
gs
dec
sub
repz
fmul
inc
pushf
dec
out
xchg
sub
bound
or
xor
add
movs
jg
sti
in
xor
add
or
or
mov
xor
jb
sub
stos
aam
mov
mov
nop
xor
cld
cld
ins
xor
mov
fs
pop
dec
and
xor
cmp
hlt
push
loopne
xor
and
mov
cmp
pop
je
sub
mov
loopne
lahf
inc
add
dec
pushf
dec
mov
lods
sahf
cmc
xchg
xor
mov
in
int3
inc
and
test
je
sub
cwde
mov
outs
dec
push
loopne
rcl
lods
adc
ret
mov
je
mov
adc
jmp
jmp
mov
dec
push
fidivr
and
and
enter
cwde
adc
adc
ins
aaa
clc
and
pusha
adc
mov
mov
stc
enter
mov
les
adc
fadd
xchg
mov
sub
xchg
popf
js
add
adc
scas
movs
ds
add
imul
je
cmp
movs
repz
cmp
or
sbb
call
mov
test
or
jbe
sbb
fcom
inc
fwait
inc
data16
js
mov
mov
jl
or
out
pushf
iret
and
out
std
xchg
inc
pop
or
fwait
push
sti
or
or
aam
cld
lea
pop
pop
jno
pushf
sub
clc
stc
fwait
loopne
dec
daa
pushf
dec
shl
xchg
push
fst
lods
push
je
rcr
lock
fst
jbe
pusha
popa
ror
lock
pusha
je
js
ja
push
add
ins
loope
(bad)
pop
enter
sub
mov
jnp
and
or
xchg
into
in
lahf
jl
icebp
xchg
jns
add
cwde
cmp
test
cmp
jl
(bad)
shr
cmps
jno
or
adc
mov
je
bound
add
push
(bad)
pop
stc
loop
clc
mov
out
jge
inc
movs
push
mov
pushf
std
push
xor
and
ins
pop
not
add
inc
push
mov
loopne
pop
mov
hlt
push
cwde
data16
or
repnz
mov
sar
adc
push
xor
push
(bad)
cmp
lods
sar
pop
dec
pusha
push
add
clc
and
and
dec
adc
push
dec
mov
cwde
repz
rol
stos
pop
adc
mov
mov
rcr
sahf
shl
out
push
aam
movs
pop
add
pop
clc
mov
push
and
ins
cdq
adc
and
lods
add
pushf
sar
push
cbw
jmp
int3
scas
out
scas
cld
cmp
cmc
into
js
jge
or
xchg
mov
inc
pop
and
xor
icebp
ret
stos
dec
add
pop
pushf
les
jnp
xor
lea
cmps
mov
sbb
in
cwde
xor
pushf
loop
push
in
cmp
add
xchg
enter
push
and
test
nop
cs
dec
cmp
or
sbb
xchg
je
aas
push
add
data16
retf
lahf
push
fiadd
dec
scas
lock
ins
xor
xor
mov
out
push
cwde
jp
jg
add
std
shr
xor
jo
test
push
(bad)
movs
jl
in
push
mov
sbb
mov
clc
xor
fdivr
add
xor
jae
icebp
jmp
pop
sub
icebp
cmp
xor
fmul
int
sbb
pusha
popa
or
loopne
nop
aam
sbb
mov
cmps
fld
adc
xchg
popa
mov
mov
out
lea
sub
dec
pop
push
sub
aam
cmp
jl
dec
inc
cmp
sbb
movs
mov
mov
fst
mov
in
xchg
stos
cdq
xor
inc
movs
xchg
les
int3
mov
in
lods
pop
adc
ss
cwde
sub
mov
sub
sub
inc
mov
mov
and
movs
sub
jb
push
cmc
int
mov
aam
and
test
call
cld
mov
hlt
rcl
inc
cmp
mov
out
stc
sub
mov
and
or
les
fwait
repz
jle
shl
adc
and
sbb
iret
add
mov
jl
xor
cs
lock
lahf
movs
cmp
adc
jmp
or
loopne
mov
pop
test
lock
and
in
or
adc
fdivr
les
jl
xor
(bad)
mov
sub
or
xor
loope
push
js
inc
or
call
mov
sbb
push
jno
sub
cmp
shl
jl
in
xor
mov
(bad)
aad
cwde
jp
mov
cmc
shr
fbstp
sbb
inc
dec
clc
inc
lock
fldenv
(bad)
pusha
nop
mov
pusha
or
inc
xchg
js
popf
dec
sbb
mov
add
push
dec
jne
int3
sub
sub
rcl
jo
movs
dec
cmp
dec
push
outs
repnz
sub
nop
mov
mov
stc
mov
sahf
mov
lods
sahf
xchg
mov
mov
sub
and
and
push
rcl
mov
cld
gs
mov
js
add
adc
nop
and
repnz
dec
lods
dec
mov
movs
jmp
mov
mov
in
sbb
popf
daa
cmp
sub
leave
inc
mov
popf
fsub
cmp
mov
in
lods
int
loop
mov
lock
lock
mov
xor
add
cmps
movs
add
retf
dec
je
pushf
sub
shl
sbb
ds
movs
add
mov
in
push
aam
movs
imul
popf
(bad)
lock
inc
test
fidivr
xor
in
pushf
mov
dec
cld
pop
lods
mov
lods
cld
or
sbb
and
mov
pop
rol
stos
dec
xor
outs
mov
faddp
lock
rol
mov
fdiv
icebp
pushf
repz
mov
les
mov
and
xor
pop
pop
and
int3
mov
popa
shr
push
push
add
test
js
sub
or
push
and
push
jne
jmp
push
sti
add
test
dec
pop
pop
loopne
fadd
and
je
xchg
dec
aaa
mov
sbb
js
ins
aam
fs
add
(bad)
int3
lock
pop
mov
cmps
in
in
xchg
xor
dec
lods
mov
ja
or
in
das
pop
adc
ss
mov
stos
in
sbb
inc
xchg
dec
sub
mov
and
nop
hlt
xor
or
ins
nop
lods
mov
scas
fmul
pop
and
fistp
inc
adc
clc
dec
loopne
or
cmp
jg
imul
aaa
int3
call
ins
xor
lea
gs
mov
cmp
lods
lods
adc
div
sbb
jl
scas
test
add
xchg
fnstenv
xor
shl
cwde
loopne
push
pusha
add
jo
push
mov
mov
es
inc
sbb
in
(bad)
sub
sbb
test
sub
sub
mov
mov
aas
xor
mov
pop
arpl
ins
push
jne
pop
fdivr
mov
in
sbb
xchg
nop
movs
test
add
add
jne
arpl
call
loopne
test
jge
js
mov
retf
push
mov
xor
ins
pop
jmp
fld
lods
sbb
clc
push
int3
add
lods
ins
int3
cmps
pushf
test
adc
push
sub
lods
xor
dec
daa
and
loope
enter
rcl
or
pusha
int
pop
mov
movs
jp
add
cwde
adc
dec
out
xor
add
test
js
jo
sub
daa
clc
xchg
fdivr
movs
adc
aaa
push
cmp
and
mov
pop
mov
push
cmc
xchg
mov
jnp
pusha
sub
xchg
test
call
push
fcomp
shl
fadd
pop
ins
add
ins
jecxz
loopne
test
js
mov
inc
test
adc
(bad)
(bad)
mov
test
adc
pushf
fs
push
dec
shr
push
xlat
fcomp
add
inc
jae
stc
call
push
lods
call
test
in
inc
ins
test
dec
sbb
sbb
jns
data16
xchg
push
into
pop
add
mov
sub
cmp
(bad)
stc
ss
sub
push
nop
or
inc
rcl
sbb
mov
jle
dec
jo
dec
lds
push
and
or
les
xchg
adc
xor
rol
adc
nop
test
fbld
xchg
xor
js
xor
(bad)
aad
add
sub
mov
sub
mov
sub
mov
and
dec
sub
adc
sbb
jg
mov
push
mov
mov
sub
cwde
test
or
test
add
(bad)
mov
test
mov
xor
or
xor
hlt
push
ja
aad
call
mov
xchg
or
test
dec
mov
jmp
(bad)
fmul
xor
sbb
ins
xor
aad
aam
sbb
lock
xor
cdq
or
in
int
call
cmp
aaa
add
(bad)
lds
mov
test
test
pop
jns
sbb
mov
in
inc
or
popa
in
fs
out
push
add
dec
pop
jo
in
je
cld
test
or
mov
js
loope
push
je
sti
cmp
xor
sub
int3
adc
and
mov
ja
sub
retf
loopne
aam
push
in
imul
hlt
test
sbb
in
push
in
xchg
mov
sbb
and
or
call
mov
pushf
movs
popa
or
push
shr
mov
and
lock
aam
mov
adc
sbb
mov
(bad)
fdiv
test
sub
mov
icebp
cld
lock
xor
je
mov
jmp
ret
xor
pop
dec
inc
mov
popa
sbb
jmp
adc
mov
or
dec
push
adc
fimul
jae
lods
sub
xor
dec
ds
inc
pushf
mov
aam
je
ins
jb
add
lods
cwde
in
pop
pushf
adc
and
loop
call
push
sar
je
mov
inc
mov
xor
movs
add
cdq
call
stos
fdivr
sub
xor
imul
sbb
movs
lock
test
inc
ins
enter
sbb
int
in
mov
cmc
inc
or
daa
fs
jns
loopne
sbb
inc
push
add
push
or
inc
mov
int
idiv
dec
(bad)
adc
or
les
add
shl
or
sub
pop
sub
xchg
xchg
sub
es
cwde
nop
(bad)
in
push
or
xlat
mov
xchg
push
popf
js
dec
jmp
in
or
in
mov
xchg
fs
fsubr
cmp
jae
ret
sub
and
lods
hlt
ins
cld
ins
xor
aam
cmp
ins
push
popf
pop
out
inc
sahf
cmp
repz
mov
cwde
into
cmp
mov
ins
xchg
sbb
les
in
mov
pop
sub
xor
xchg
push
sub
call
jmp
or
pusha
retf
lods
and
mov
mul
jno
jns
dec
inc
xchg
adc
cmp
fild
es
xor
lods
mov
nop
sbb
xor
dec
sub
add
cdq
mov
shl
push
mov
call
lods
mov
sub
fsub
xchg
push
sbb
mov
xor
movs
pushf
hlt
sbb
les
dec
loopne
mov
nop
add
inc
shr
leave
push
xor
mov
cmp
cld
mov
js
add
fs
sahf
fiadd
inc
cmp
test
pushf
jp
hlt
cld
out
mov
dec
jle
ins
rol
data16
and
add
xor
cmp
dec
call
or
cld
sahf
bound
test
lock
cmp
xor
push
loope
imul
nop
or
jg
pushf
dec
(bad)
jb
stc
mov
daa
xchg
fs
call
int3
xor
push
fadd
rcl
and
enter
loope
mov
pop
xchg
iret
nop
xchg
pop
jno
sbb
or
or
pop
nop
push
call
xchg
mov
cwde
shr
jnp
movs
pop
cmp
and
clc
mov
movs
adc
ror
test
popa
mov
fcom
mov
push
sub
jno
jns
loopne
lock
loopne
dec
test
xor
test
call
xor
mov
stos
and
add
js
xor
clc
inc
loopne
or
xor
dec
sub
pushf
aam
test
xor
popf
lods
popa
sub
sbb
into
mov
sahf
lock
mov
pop
xor
fst
xor
fcom
js
in
jb
jno
mov
adc
test
pushf
pop
xor
cdq
fidiv
lods
xor
les
rol
jmp
les
fdiv
sbb
test
js
rcr
dec
cld
mov
push
dec
les
hlt
add
or
mov
mov
sub
jle
sub
sbb
fisub
sub
cmp
push
loopne
sbb
(bad)
mov
or
push
cld
xor
mov
xor
pop
mov
dec
and
jmp
adc
adc
mov
fdiv
call
in
call
movs
aam
pop
call
js
or
pushf
retf
adc
pop
xor
arpl
xlat
push
(bad)
and
shl
js
inc
cmps
mov
loopne
jmp
push
popf
xor
shl
and
add
popf
mov
inc
dec
or
enter
dec
inc
lock
aad
movs
or
adc
jl
sbb
xchg
adc
mov
and
mov
stc
adc
enter
jge
cmc
mov
rcl
cmp
shl
cmps
xor
aam
xchg
lods
xchg
cmp
enter
sbb
pusha
cwde
dec
enter
push
and
clc
in
dec
dec
inc
add
dec
les
(bad)
mov
mov
push
inc
inc
inc
sub
je
call
enter
mov
mov
fmul
lock
mov
mov
jl
add
in
sbb
out
and
sub
ds
xchg
gs
push
aam
in
or
out
rcr
ins
push
add
inc
mov
sahf
adc
loope
sub
push
sub
(bad)
lods
pop
jge
pop
mov
sbb
fimul
jo
xchg
jl
xor
push
pusha
sub
dec
sbb
sbb
int3
ret
popf
rcl
icebp
mov
add
lods
movs
fimul
out
out
movs
xor
sbb
cld
icebp
in
mov
and
mov
fs
sbb
push
mov
cwde
call
(bad)
mov
lods
out
xchg
pop
mov
sbb
add
xchg
inc
mov
fmul
je
pop
cmp
jle
js
retf
cld
adc
mov
pushf
jno
xor
push
inc
ins
push
je
dec
sbb
loopne
mov
pop
cmps
mov
cwde
je
(bad)
xor
test
(bad)
mov
jb
and
sub
popa
int3
sti
int3
ret
push
in
xor
cmp
cmp
bound
hlt
sub
adc
adc
or
and
jecxz
push
mov
or
xor
cwde
push
aam
sub
and
int3
mov
ins
les
sub
mov
ja
dec
(bad)
mov
cwde
clc
and
dec
mov
mov
retf
sti
lock
dec
mov
adc
sbb
loope
adc
mov
pusha
xor
fst
jl
cld
rol
mov
sbb
dec
loopne
in
ss
jmp
xor
cmp
mov
pop
dec
add
or
add
push
xor
pop
adc
ds
sbb
ror
test
out
xchg
clc
xor
(bad)
les
jb
xor
push
hlt
add
dec
test
clc
int3
and
pop
cdq
mov
mov
mov
js
and
jp
xor
and
sar
fadd
fs
ret
pusha
jle
in
shr
pop
inc
and
(bad)
xor
and
xor
stos
sbb
mov
nop/reserved
mov
icebp
cmp
and
mov
sahf
in
lahf
xor
popa
ins
add
or
xor
jmp
mov
push
inc
add
sahf
xor
dec
and
sub
popaw
aas
sub
ins
xor
(bad)
push
ins
gs
fcmovu
sbb
pop
nop
mov
push
and
(bad)
inc
and
fs
and
add
(bad)
cs
ret
adc
sbb
test
aam
popf
or
popf
cmps
inc
lock
js
pop
mov
sahf
xor
fstp
call
mov
and
daa
movs
mov
loopne
stc
xor
push
test
adc
cmp
push
(bad)
mov
inc
enter
fadd
fdivr
icebp
int3
add
sbb
cli
mov
or
mov
mov
ja
pushf
es
iret
cli
loopne
sbb
push
inc
fdiv
mov
jge
adc
(bad)
fidiv
hlt
scas
mov
pop
jl
cmps
into
in
sbb
fsubr
adc
scas
pop
dec
pop
sbb
push
shl
sub
int3
sahf
je
cwde
imul
shl
sub
retf
and
inc
popf
in
cmp
mov
inc
ficom
xchg
fdivr
add
(bad)
xor
scas
aam
mov
inc
push
hlt
dec
xchg
add
or
push
mov
scas
sbb
ins
mov
sbb
shr
and
fs
xchg
test
jo
push
js
fcomp
mov
mov
adc
dec
push
xor
mov
cmp
add
aad
xchg
nop
test
inc
add
jl
nop
mov
pushf
xor
aaa
add
jno
lock
xor
push
sub
dec
adc
lea
dec
xor
add
cmc
xchg
cld
scas
xchg
lock
int3
add
pop
aaa
(bad)
or
cmp
xchg
rcl
pop
sbb
jo
enter
jmp
arpl
call
aam
cmp
je
into
pop
(bad)
test
lods
in
and
dec
out
adc
pop
xor
cmc
or
sbb
cmp
fcom
fs
cmp
jl
adc
adc
sbb
dec
sub
js
jo
and
inc
jo
js
pop
pushf
mov
shl
in
adc
test
mov
xor
clc
call
sbb
or
cmp
add
cdq
mul
dec
pusha
inc
jl
xor
sar
or
fadd
hlt
or
rcr
xor
mov
ins
aad
pop
xchg
loopne
jo
mov
xor
int
dec
enter
jno
mov
push
pop
adc
fiadd
fidiv
and
jbe
inc
mov
nop
fisttp
cwde
ffreep
inc
sub
mov
fst
mov
fcom
sbb
pop
pop
or
push
mov
lea
lahf
fsubr
inc
ins
xchg
into
cwde
and
fdivr
aam
mov
cwde
pop
adc
jo
pushf
or
addr16
xchg
pusha
dec
sbb
mov
inc
clc
inc
xor
and
adc
push
sub
mov
adc
xchg
aam
dec
loopne
enter
dec
jmp
push
retf
jo
dec
cwde
popa
loopne
mov
jae
clc
nop
mov
js
movs
lock
jmp
enter
fs
mov
mov
xchg
addr16
nop
in
sub
mov
fidivr
fdivr
xor
fidivr
imul
sub
pushf
mov
je
inc
lods
aam
enter
data16
(bad)
std
pop
in
lods
fdivr
popf
aad
push
mov
push
add
inc
hlt
adc
jo
fs
retf
mov
push
mov
push
xor
mov
ds
call
pop
and
sub
xlat
fcom
adc
pushf
test
push
rol
rcr
cwde
sub
lock
shl
cs
shr
int
cmp
and
dec
mov
rcl
mov
xor
push
push
sbb
add
enter
jne
push
mov
push
xchg
loopne
jmp
jo
sub
pushf
mov
pop
fsub
push
aam
inc
dec
clc
push
rcr
pushf
popa
inc
add
or
test
int3
mov
cmps
dec
mov
je
ficom
icebp
or
cwde
fld
sub
(bad)
js
pusha
lods
or
fstp
and
or
cs
cld
cmp
lods
rcr
cmps
mov
and
movs
mov
sub
and
mov
mov
in
sub
add
jmp
or
sub
inc
clc
mov
push
dec
fdiv
mov
adc
or
or
or
mov
dec
jp
jo
aaa
in
loopne
ss
int3
mov
lods
push
push
pop
xor
lods
sub
jo
push
in
xchg
call
in
pusha
cli
push
jo
xor
rcr
sub
pushf
leave
mov
into
or
les
scas
ret
or
mov
pop
add
lods
enter
or
xor
mov
pop
outs
mov
in
ds
sub
and
cwde
fidiv
loopne
dec
mov
sbb
dec
add
into
jo
in
nop
in
int
bound
fadd
fs
loopne
stos
fs
fwait
and
mov
jl
outs
fmul
pushf
loop
push
aam
mov
or
adc
jl
xchg
push
movd
sbb
xchg
mov
retf
inc
push
inc
pop
jo
inc
fisttp
sub
cld
hlt
adc
fiadd
jns
shl
adc
adc
mov
in
lods
dec
fs
sub
push
mov
lea
in
lods
es
add
ins
and
shl
cwde
cwde
test
cwde
clc
add
lds
(bad)
sub
or
push
inc
enter
sub
xor
or
xor
mov
pop
ins
inc
xchg
push
dec
or
fcomp
scas
test
test
and
nop
aam
ss
cld
in
(bad)
pop
in
sub
movs
aas
mov
lock
sub
push
fidiv
dec
xchg
add
les
sub
add
lods
mov
inc
mov
xchg
and
and
repz
xor
fs
fadd
ja
pop
and
jo
sub
jo
sahf
(bad)
loope
sub
push
cld
sar
mov
sahf
mov
jl
xchg
push
jo
(bad)
out
ss
mov
loopne
push
adc
and
sub
xchg
sbb
add
push
inc
sar
dec
nop
adc
mov
lahf
inc
cmp
cmps
fcomp
call
stc
push
in
bound
pop
fdivr
push
add
sbb
(bad)
adc
mov
and
and
cld
or
jp
cdq
pop
xor
xor
sbb
rcr
jl
mov
mov
sub
sub
sub
sub
int
and
jp
inc
lahf
int3
cmp
or
and
mov
in
dec
test
sub
cmp
mov
clc
dec
and
(bad)
dec
adc
pop
test
jg
das
sbb
push
mov
cmps
and
pop
ins
sbb
add
test
rol
jle
nop
fcomp
outs
cld
or
movs
xor
in
xchg
int3
in
pushf
(bad)
es
sub
aam
stos
and
dec
scas
xchg
ins
in
imul
pusha
jl
inc
inc
clc
pop
out
sahf
les
or
fs
xchg
pusha
jmp
jl
sub
push
or
inc
and
add
xchg
or
cmp
lock
fcom
sbb
movs
push
or
mul
mov
mov
add
pop
clc
jl
cpuid
sbb
in
cmp
sti
or
mov
jle
daa
add
mov
int3
movs
dec
xor
mov
fs
cmp
sbb
dec
call
lock
adc
or
fmul
dec
xor
or
mov
aad
cmc
je
xor
jo
adc
hlt
int
adc
pop
mov
mov
mov
inc
push
mov
std
mov
ins
jbe
inc
inc
enter
nop
mov
lock
int3
cmp
push
xchg
and
sub
es
xchg
pop
cmp
sbb
inc
dec
pop
dec
xor
aam
cld
or
dec
fbld
cld
mov
add
fsubr
pusha
(bad)
mov
call
test
cld
sbb
push
push
les
clc
es
ret
pop
inc
movs
xor
aam
cld
add
or
mov
push
jp
or
sbb
mov
inc
imul
cld
adc
sub
push
loopne
lea
pop
xor
sub
shl
pop
sub
pusha
fnstenv
(bad)
mov
fadd
xchg
fadd
adc
xchg
xchg
je
and
pusha
jg
dec
mov
fmul
fdiv
xor
pop
mov
and
je
rcl
mov
xchg
jmp
(bad)
push
mov
dec
mov
rol
push
lods
popf
in
popa
pop
clc
int
sub
inc
add
adc
lock
lods
jae
inc
stos
adc
rcr
(bad)
mov
call
pop
push
sub
lods
bswap
sub
movs
nop
xor
and
in
pop
lds
sub
(bad)
push
mov
cld
lods
lods
bnd
cmp
mov
jp
loope
jmp
push
mov
sahf
sub
or
aam
int3
mov
mov
cmp
and
or
adc
in
add
add
neg
lods
add
push
xchg
xor
cld
in
and
in
enter
mov
pusha
and
xor
clc
enter
and
data16
push
shr
push
adc
test
shr
shr
jl
fcomp
test
(bad)
in
adc
fdiv
adc
call
adc
test
pop
push
push
fdivr
push
ins
sbb
js
outs
int3
(bad)
fsub
xchg
xor
inc
mov
adc
and
dec
jo
cwde
cmc
xor
sub
enter
ret
cmps
fdivr
mov
sbb
jp
pop
mov
mov
jmp
dec
xchg
dec
mov
ins
xor
cld
in
add
dec
adc
pushf
mov
xor
add
or
popa
jb
js
push
aaa
mov
sbb
fidiv
js
or
cdq
clc
std
in
sahf
lock
ins
jae
rcr
hlt
imul
jl
loop
in
cs
push
and
mov
xor
in
adc
mov
pop
pop
inc
mov
cmp
sbb
movs
push
call
mov
sub
les
sub
mov
dec
shl
shl
aam
adc
adc
cld
retf
aaa
sub
push
cmp
out
jae
(bad)
out
enter
test
mov
cmps
sbb
sbb
fcom
les
sub
push
lahf
je
call
sbb
cli
push
ret
fdiv
and
fcomp
(bad)
sub
loopne
push
push
int3
fxch
or
and
and
xor
mov
int
aam
out
rcl
xchg
rol
dec
push
cmp
nop
inc
cmp
movs
sbb
pushf
xchg
call
aam
cld
adc
push
es
in
xchg
sahf
mov
lods
mov
dec
xor
inc
test
mov
in
jmp
or
hlt
adc
test
clc
sub
int
and
mov
fdivr
cwde
cmp
jns
aad
mov
inc
jns
jbe
sub
idiv
xor
mov
inc
rcr
pop
mov
or
jb
sbb
out
movs
loopne
and
nop
in
sub
test
mov
jne
cwde
enter
cwde
xchg
jmp
jp
cld
mov
and
add
mov
mov
nop
dec
mov
bound
adc
test
arpl
(bad)
jl
movs
and
ja
loopne
sbb
mov
faddp
fdiv
pusha
mov
cmp
push
sbb
sub
push
and
xchg
std
pushf
enter
cwde
(bad)
adc
in
or
outs
and
and
mov
fs
shl
add
out
xor
out
sub
inc
push
sbb
mov
and
xchg
test
xlat
fs
lahf
xor
add
mov
addr16
hlt
inc
sbb
lock
jl
adc
mov
je
jl
xor
(bad)
clc
lds
enter
jae
mov
scas
cmc
test
or
sbb
cmc
jecxz
test
mov
cmp
inc
pusha
add
mov
je
xchg
dec
movs
dec
call
mov
xor
add
test
cmc
jo
sub
jb
mov
es
dec
icebp
mov
fsubr
mov
js
xor
fs
or
mov
mov
inc
je
lods
enter
sbb
rcr
call
repz
push
pop
and
and
sub
(bad)
retf
test
ins
sahf
aam
pop
mov
lock
cmp
aad
push
sub
pop
pushf
movs
fsub
les
sbb
fdivr
xor
popa
mov
mov
daa
pushf
sub
shr
dec
inc
shl
sub
cmp
push
xlat
pop
cmp
les
hlt
movs
fdiv
pop
xor
retf
and
loopne
call
dec
enter
into
or
jge
(bad)
lods
int3
xor
xchg
into
push
add
mov
inc
sbb
ins
or
mov
xchg
lea
inc
sub
sbb
rol
aam
fs
add
and
sub
sahf
test
inc
add
aam
or
push
add
out
or
xchg
and
pusha
push
inc
pop
dec
jo
out
aas
and
dec
les
mov
xchg
call
push
and
clc
retf
shl
test
mov
inc
cmp
inc
dec
lock
int3
in
mov
ins
jno
inc
mov
aam
ss
xor
sub
aam
sbb
(bad)
pop
sub
sbb
cld
pop
rol
in
mov
xor
push
nop
les
jp
imul
les
lock
xchg
ficomp
(bad)
sub
pop
push
pop
jl
xor
sbb
sub
add
iret
jl
dec
fcomi
bound
mov
pop
fld
movs
inc
in
outs
and
dec
push
push
mov
add
loopne
lods
in
and
pop
and
mov
and
mov
cmp
cmp
inc
pop
fadd
sub
inc
popa
jg
in
or
sub
adc
cmps
mov
sbb
mov
add
mov
or
xchg
aam
sbb
add
shr
in
call
mov
mov
ja
imul
sub
or
clc
push
(bad)
cli
adc
nop
xchg
clc
push
test
adc
jo
mov
or
lock
xchg
je
lods
test
pusha
sub
call
lods
add
push
sbb
sub
js
(bad)
sbb
fimul
in
clc
or
mov
ret
repz
or
xor
fstp
add
dec
sub
mov
mov
inc
nop
push
clc
mov
lock
sub
movs
mov
xchg
je
jl
xchg
push
lods
movs
mov
cmps
popa
les
fild
in
push
loope
mov
sub
sub
mov
or
jno
dec
sub
mov
pop
mov
inc
fild
movs
lods
jno
push
inc
ins
dec
es
icebp
cwde
and
fucomip
in
in
mov
mov
repnz
cdq
xchg
fstp
adc
jmp
hlt
inc
js
and
sub
aad
add
adc
test
mov
pop
cmp
sbb
xor
test
or
push
aaa
sbb
cld
mov
cmc
enter
shl
pop
jg
lock
mov
xor
enter
sub
dec
fimul
xor
xor
out
cmp
push
shr
test
ror
add
xor
pusha
enter
add
adc
sub
xor
dec
adc
xchg
pop
es
fld
inc
push
call
and
in
(bad)
test
jo
dec
test
and
test
movs
cld
pop
aam
hlt
dec
push
mov
ins
(bad)
push
hlt
mov
dec
push
rcr
lds
fcom
std
xchg
fs
adc
les
sbb
add
ins
mov
test
fcomp
jb
outs
xor
sar
(bad)
mov
shl
cli
fcomp
rol
mov
in
in
mov
cmc
mov
(bad)
inc
shr
xor
rcr
xor
or
gs
dec
fidiv
test
fsubr
add
jl
push
xchg
jmp
inc
cmp
cmp
jo
sbb
loope
ret
hlt
clc
and
rcr
loop
xor
(bad)
sahf
mov
fsub
aad
mov
lock
sub
enter
clc
inc
xchg
inc
mov
int3
cld
in
mov
mov
nop
js
aam
pop
pop
jge
mov
cmc
in
fsub
dec
loopne
push
in
dec
mov
fisub
jecxz
push
pop
cld
mov
cwde
push
inc
sbb
clc
sahf
push
xchg
fdiv
dec
outs
jle
adc
call
sbb
and
sub
push
das
lock
lds
loopne
aam
sbb
rcl
jae
addr16
ins
lock
mov
cs
sbb
xlat
push
mov
mov
jge
test
fcomp
xchg
cld
test
sub
movs
xchg
mov
je
enter
lock
into
mov
in
je
pushf
and
xor
int
test
xchg
fisubr
xor
sar
pop
jmp
sahf
sub
ins
jp
inc
iret
dec
mov
int3
dec
xor
pop
jmp
push
fidivr
shl
or
js
test
retf
pop
push
mov
pop
pop
inc
lods
mov
sub
sub
int
fwait
js
mov
mov
sbb
or
pop
or
pop
add
aaa
fs
js
ret
jp
dec
loope
data16
inc
xchg
ins
and
ds
add
dec
mov
pushf
xor
cld
jns
ins
cld
dec
hlt
adc
lods
push
loope
lock
xor
jl
aad
push
or
and
in
out
inc
(bad)
fimul
lock
je
lods
sub
mov
jns
fs
movs
(bad)
int3
mov
stc
push
inc
mov
or
or
dec
in
mov
lock
sub
pop
es
add
and
dec
mov
les
and
pop
ror
int3
mov
lods
inc
push
or
or
fdiv
mov
hlt
ror
jne
cs
arpl
test
fld
push
dec
inc
mov
dec
push
in
jle
and
pop
(bad)
shl
xchg
mov
nop
xor
fsub
dec
test
add
shr
jo
das
in
mul
or
in
dec
loope
mov
or
dec
or
mov
mov
dec
add
add
mov
in
sub
xor
or
lods
pop
outs
sar
into
sub
or
dec
sbb
mov
cmp
inc
or
fs
push
and
data16
sbb
jl
sbb
jge
sub
xor
sub
loope
int3
dec
adc
pop
xor
enter
add
rol
test
jo
cmp
dec
std
dec
mov
leave
push
mov
in
cld
lods
xchg
xor
call
sub
int
push
dec
mov
pop
cmp
push
popa
ins
jnp
add
push
ret
fdivr
in
push
push
in
imul
lock
les
or
je
test
ficomp
add
ret
inc
dec
sub
dec
clc
inc
dec
outs
and
and
push
es
sbb
push
pop
lods
mov
lods
outs
push
ret
mov
movs
cli
ins
sbb
and
pushf
mov
nop
or
loopne
add
call
in
enter
adc
stos
sbb
dec
add
add
or
in
fsubr
fs
shl
mov
out
in
and
sub
cmc
inc
mov
jns
pusha
cmp
inc
dec
mov
js
inc
test
hlt
nop
je
gs
aad
mov
lods
add
sbb
pop
pusha
lods
js
mov
cmp
call
sub
mov
ret
ds
mov
or
jne
inc
add
cmp
shr
loop
retf
cmp
sbb
in
int3
lahf
cmp
sub
adc
cmova
sbb
cwde
cli
lods
shl
inc
jae
mov
sub
into
xor
cwde
mov
mov
inc
movs
mov
add
(bad)
jle
mov
push
(bad)
lock
movs
(bad)
jl
ja
jl
and
sbb
xchg
push
outs
dec
and
dec
fidiv
jl
outs
shl
imul
sbb
in
in
test
xor
out
popf
jo
or
cli
fmul
xchg
cmp
enter
lahf
and
pop
fidiv
pop
push
add
int3
not
ror
ds
or
xor
mov
push
jl
ds
mov
repz
dec
add
adc
loope
call
aad
mov
pop
cmp
pop
stos
push
addr16
add
dec
mov
push
push
test
pop
in
mov
imul
mov
or
adc
adc
jge
in
pushf
pop
push
mov
sub
push
fucomip
int3
mov
pop
cmp
mov
inc
ins
pop
pushaw
mov
movs
lock
fs
dec
sbb
lds
dec
mov
adc
jl
xchg
dec
jp
push
xchg
cld
jl
push
js
mov
clc
mov
js
push
jg
in
mov
imul
pushf
mov
loop
js
inc
mov
ret
mov
js
and
push
int3
dec
mov
mov
rol
jo
les
inc
mov
fdiv
push
ins
in
aam
ins
inc
outs
pushf
or
mov
and
test
and
adc
in
mov
adc
lds
in
mov
mov
enter
sbb
inc
out
clc
or
data16
pop
dec
adc
sub
dec
add
or
xchg
je
test
pop
in
leave
sbb
sbb
pusha
fistp
popa
and
(bad)
hlt
pop
ja
push
inc
add
lods
les
sbb
(bad)
arpl
push
push
or
or
adc
call
adc
push
int3
mov
shl
aad
jl
cld
ret
je
jl
cld
jae
fcom
pop
cmp
mov
loopne
jl
push
cld
or
push
test
stc
movs
pushf
clc
test
cmp
cld
inc
push
enter
fdiv
jo
jmp
push
cmps
fmul
sub
dec
clc
lock
aaa
test
cld
popf
nop
push
fsubr
mov
mov
and
mov
xor
jo
or
xchg
cwde
nop
mov
jl
inc
xor
xchg
fs
add
xchg
and
add
or
jl
loop
sub
push
int3
loopne
push
loope
push
loopne
lds
push
mov
adc
add
adc
cli
ins
in
lods
inc
adc
les
jb
jns
lds
call
and
push
mov
test
add
mov
movs
inc
xor
and
cwde
in
enter
call
and
sbb
into
test
test
mov
pop
inc
fs
sbb
lock
cld
scas
lods
jo
jo
push
mov
mov
ret
sbb
loop
pop
jo
fsubp
cmc
sub
mov
jns
sbb
sub
xchg
lock
sbb
push
mov
hlt
add
arpl
enter
adc
push
lods
add
xchg
or
xor
test
rcl
cld
xchg
fcmove
pop
test
ins
test
push
sub
xchg
jns
enter
sahf
and
pop
mov
cmps
mov
adc
lods
and
gs
int3
dec
mov
lea
es
jmp
out
in
push
(bad)
rol
fdivr
sbb
jnp
sub
iret
xor
pop
sbb
callw
or
scas
add
inc
pop
sub
jl
xor
test
js
shr
add
dec
call
push
mov
mov
fcom
clc
jle
pop
loop
lods
(bad)
stos
inc
aas
dec
out
aam
int
inc
mov
lods
add
in
sbb
hlt
xchg
mov
cld
add
(bad)
movs
popa
cld
test
and
js
movs
dec
repnz
ficomp
xor
es
clc
xchg
clc
adc
add
pushf
sahf
call
clc
outs
adc
add
hlt
retf
hlt
add
js
sar
or
rcr
mov
movs
(bad)
pop
xchg
daa
test
pop
sub
xor
inc
push
and
jnp
dec
mov
inc
cwde
les
mov
xchg
jg
enter
fs
loop
xor
fdivrp
add
test
lods
shl
js
xor
pop
js
enter
adc
call
lods
sub
mov
lock
xchg
cmp
or
mov
push
pop
movs
in
int3
mov
add
push
pop
xor
mov
cs
adc
in
int
adc
scas
xor
inc
in
sub
dec
fdivp
and
clc
sbb
mov
icebp
mov
mov
push
adc
pushf
test
ret
and
in
and
adc
xor
lock
fwait
lods
pusha
jle
dec
adc
mov
fs
fcomp
mov
imul
rcl
sbb
ins
test
scas
test
(bad)
pop
rol
js
pop
adc
test
lods
ins
add
mov
mov
icebp
cs
push
jl
ins
xchg
inc
sbb
pusha
int3
cmp
repnz
mov
mov
das
fsubr
push
movs
sub
stc
hlt
adc
arpl
jns
pop
pop
mov
fs
fpatan
add
les
leave
mov
data16
lods
adc
pushf
push
stos
in
and
jo
cmp
cs
mov
pop
in
xor
or
adc
call
push
dec
jo
cwde
lock
call
not
aam
in
popf
shr
jne
pop
adc
je
leave
mov
(bad)
xor
es
ja
add
push
add
lahf
cmp
push
lods
mov
inc
pop
dec
test
pusha
fiadd
xor
pop
dec
cld
in
in
and
jp
pop
in
jb
clc
mov
dec
lods
hlt
push
jb
mov
jb
data16
shr
mov
enter
lods
xor
jl
in
xor
mov
(bad)
jl
push
mov
test
fcomp
adc
in
and
or
inc
gs
jmp
aad
mov
push
sbb
cwde
not
ins
test
push
mov
aas
mov
cld
adc
pop
push
xchg
retf
mov
nop
sbb
stc
enter
and
dec
mov
jg
ins
sub
jl
outs
dec
fdiv
xor
ss
int3
dec
mov
sar
pushf
imul
cdq
je
pop
mov
movs
jae
js
loopne
lds
jl
stos
adc
add
and
push
or
fs
(bad)
movs
in
loopne
sbb
add
rcl
(bad)
push
pushf
jl
retf
mov
sbb
pop
loopne
and
movs
dec
in
jp
push
xor
(bad)
fs
fs
fmul
push
sub
or
xor
in
mov
loop
push
mov
por
sbb
pop
xchg
ins
hlt
push
retf
cmp
adc
in
and
add
xor
nop
jne
fsubr
or
mov
js
mov
xor
fadd
ja
sbb
movs
je
clc
pop
rcl
dec
loope
enter
cmp
xchg
jne
hlt
stos
and
hlt
inc
inc
or
ins
fadd
movs
ss
mov
in
push
data16
cld
and
pop
js
push
cmp
and
pop
movs
sub
gs
pusha
jge
in
or
loopne
pop
and
pop
aam
ds
repnz
xchg
int3
in
cmp
enter
inc
push
pop
cwde
mov
(bad)
mov
pop
adc
jo
adc
fs
inc
mov
je
in
sub
inc
nop
or
jae
jo
push
in
xor
cmp
popf
or
ins
stc
js
push
or
xor
in
ins
imul
dec
xchg
or
add
cld
pushf
sahf
movs
repnz
inc
rol
lock
sub
cmp
lock
pushf
mov
shl
enter
jae
mov
add
movs
cwde
mov
dec
outs
jl
add
jo
scas
sbb
add
cmps
outs
test
or
mov
lods
mov
les
jl
ss
mov
jg
call
and
mov
imul
push
mov
adc
pushf
out
movs
sti
test
sar
mov
nop
jecxz
adc
fdivr
jge
push
inc
inc
jns
fwait
push
aam
into
les
pop
movs
inc
mov
les
jmp
lods
jg
inc
sub
xor
(bad)
and
cmp
fidivr
fstp
dec
pop
scas
pop
test
cli
mov
aas
lds
dec
mov
call
inc
and
or
add
test
movs
lods
test
push
inc
fmul
xchg
stos
cwde
add
sbb
or
mov
pop
rcr
cld
je
adc
and
arpl
loopne
lock
enter
xchg
icebp
push
lea
adc
in
pop
pop
clc
loope
push
sub
loop
out
or
mov
adc
xchg
push
dec
test
inc
pop
sub
sub
les
or
mov
icebp
add
jbe
inc
dec
or
pushf
pop
sti
int3
xor
loope
jecxz
or
mov
in
sub
jno
fadd
adc
inc
dec
in
and
nop
loopne
pop
not
popf
mov
movs
shr
adc
mov
push
mov
les
(bad)
mov
cmp
ja
sti
in
ret
pop
cwde
and
data16
jge
dec
cwde
xlat
inc
jl
fs
in
shl
cwde
call
adc
adc
nop
mov
test
mov
cli
in
outs
mov
add
inc
out
jl
popa
loopne
in
push
jns
cli
xor
jl
test
fsub
mov
push
dec
gs
sahf
lock
jno
dec
xchg
dec
lahf
jo
call
movs
xchg
mov
nop
push
aad
sbb
sbb
je
sub
push
ror
hlt
jb
arpl
push
rcl
mov
movs
lock
xor
clc
movs
fsubr
sbb
loope
test
enter
in
pop
or
sub
inc
cmp
daa
ss
xor
push
jge
and
ins
fld
aad
mov
bnd
add
adc
cli
sbb
(bad)
out
in
pusha
js
es
push
adc
ror
pusha
inc
imul
js
push
jge
in
inc
pop
cmc
scas
int3
scas
shl
clc
aaa
adc
sbb
ret
xor
loop
xchg
clc
mov
adc
cld
je
pushf
cmp
mov
xchg
sub
cld
sub
dec
mov
ins
mov
xor
outs
mov
cmp
fst
loope
push
dec
std
in
nop
sub
loopne
sub
lods
bnd
retf
adc
pop
cdq
ins
push
(bad)
add
sbb
pop
in
fcomp
pusha
lea
adc
jle
nop
les
(bad)
loopne
or
or
mov
cmp
fld
mov
jb
stc
scas
inc
sub
mov
pop
dec
fs
jp
or
(bad)
sar
pop
pusha
mov
add
mov
les
in
mov
cwde
nop
lock
or
jl
and
cmp
pushf
loopne
inc
les
push
pusha
and
(bad)
fcmovnb
mov
lods
xor
sbb
inc
aam
fistp
aaa
adc
in
sub
call
pusha
xor
dec
aam
lods
retf
dec
jle
(bad)
fcomp
mov
or
sbb
push
lahf
cmp
sbb
dec
inc
(bad)
mov
nop
fucom
iret
cmp
and
pop
xor
sbb
test
or
int3
sub
shr
dec
jns
or
out
add
rol
enter
cld
sbb
test
call
test
sbb
pop
xchg
fnstsw
adc
sbb
out
mov
stos
cmp
mov
movs
in
ins
jns
cmp
call
push
dec
mov
xor
adc
mov
mov
call
jae
(bad)
ror
cmp
xchg
mov
sbb
adc
shl
mov
rcl
js
movs
inc
cmp
push
adc
sub
in
call
in
add
jge
jne
cmp
icebp
lods
fcom
repnz
xchg
sub
xlat
cwde
inc
xor
sbb
fldcw
mov
dec
call
adc
jl
es
mov
mov
pop
sub
loop
push
sar
and
out
pusha
xchg
lods
movs
hlt
sti
jns
inc
icebp
call
cmp
aaa
es
sbb
mov
dec
xor
cld
add
sbb
fdiv
movs
sbb
add
jo
gs
into
hlt
stos
dec
stos
nop
shr
call
xchg
mov
clc
ret
pusha
out
icebp
adc
aam
and
lea
and
jmp
mov
or
and
fsubr
cmp
add
push
ss
vfrczpd
fs
js
inc
mov
add
jmp
mov
push
add
jne
jl
dec
jo
mov
fcomp
dec
push
(bad)
mov
sub
mov
mov
add
mov
sbb
retf
stc
nop
test
and
or
jl
sub
or
je
xor
aam
jnp
lahf
fsub
mov
mov
mov
sub
popa
fs
les
lods
dec
adc
xchg
hlt
sbb
(bad)
mov
hlt
ins
cli
pop
shl
jecxz
dec
pop
out
hlt
or
sub
xor
pop
cld
ins
add
fimul
loope
and
cmps
mov
jmp
dec
mov
cwde
xor
mov
data16
js
push
pop
mov
movs
cwde
jle
sbb
inc
xchg
push
jl
and
dec
push
push
js
sbb
sar
mov
xchg
mov
mov
data16
fmul
lods
movs
fs
std
rol
or
loope
ret
aam
in
mov
dec
pop
inc
add
fdivr
cmp
push
into
clc
jecxz
mov
inc
sub
jo
(bad)
sbb
out
call
push
clc
std
sti
fcomp
push
and
xchg
pusha
sbb
popf
movs
xchg
dec
aaa
mov
pop
mov
cmp
or
jnp
bound
in
test
pop
js
sub
mov
xchg
sbb
xor
cdq
fs
mov
and
push
rol
add
pushf
cwde
(bad)
add
inc
shr
hlt
xor
mov
and
les
push
out
mov
pop
push
push
cld
xchg
fiadd
mov
daa
dec
xchg
leave
pop
lds
jl
aam
adc
cld
aad
pop
gs
pushf
pop
in
(bad)
or
mov
sbb
pusha
in
mov
xor
or
je
xor
xchg
cmps
mov
fwait
and
dec
nop
jb
shr
call
in
mov
or
cmp
das
push
mov
test
lea
xor
sub
or
into
loopne
shl
cmp
movs
mov
cwde
ror
mov
fsubr
mov
clc
add
xchg
popf
cwde
xor
dec
in
xor
jne
add
fcom
adc
pusha
sub
push
rol
sbb
inc
xchg
mov
les
xchg
dec
inc
data16
aam
mov
test
pop
mov
iret
inc
xor
mov
call
vaddss
xchg
or
hlt
test
jmp
xchg
mov
mov
les
push
cmp
pop
mov
lea
add
test
sub
adc
pop
daa
call
loop
push
lahf
cmp
hlt
shr
push
and
mov
in
xor
add
aam
fs
test
mov
std
or
hlt
mov
cmps
add
lods
push
xchg
inc
test
mov
and
std
push
xor
js
push
and
pop
enter
add
mov
lds
xchg
rcr
push
sub
je
mov
or
fmulp
pushf
(bad)
aam
xchg
jnp
dec
mov
pop
je
fucom
cmp
std
cwde
pop
push
sbb
hlt
daa
xor
cs
dec
xchg
int
int
adc
sbb
jno
and
sbb
cli
mov
or
inc
repz
cwde
push
cs
dec
mov
aad
xor
(bad)
inc
mov
xor
jp
sbb
adc
mov
and
dec
mov
inc
cmp
pushf
pop
test
jo
mov
in
popf
std
add
dec
jp
imul
int3
mov
les
ss
outs
cmp
push
cwde
dec
mov
push
pop
mov
mov
xchg
hlt
pushf
hlt
test
lods
jne
push
fadd
xchg
xchg
cwde
add
push
loop
xor
mov
nop
add
and
dec
xchg
xchg
dec
imul
push
ins
fs
sub
les
test
adc
dec
repnz
inc
(bad)
(bad)
or
cld
xchg
ror
clc
ja
pushf
adc
cmp
nop
xor
call
mov
push
xchg
fisttp
hlt
jno
dec
iret
nop
mov
nop
in
aam
sbb
mov
pop
mov
or
adc
mov
cmp
sub
mov
pusha
mov
and
xchg
fadd
dec
mov
sbb
popa
iret
test
loope
mov
mov
add
mov
int3
lods
mov
xlat
fmul
lods
adc
mov
mov
xor
add
xor
nop
test
mov
dec
push
add
mov
rcr
rol
add
or
dec
push
leave
je
cmp
mov
popa
sbb
or
movs
adc
inc
adc
mov
(bad)
mov
test
adc
xchg
sbb
retf
dec
ss
aad
imul
inc
js
mov
pushf
ret
sub
mov
pop
fs
lock
hlt
add
mov
or
dec
sbb
mov
and
cli
les
mov
out
nop
sbb
dec
sbb
movs
jno
sti
push
inc
sub
dec
test
jle
les
sub
(bad)
loopne
and
inc
sbb
movs
mov
sbb
fcom
inc
sbb
add
movs
dec
dec
imul
cmp
(bad)
add
pushf
sub
mov
js
test
add
push
fstp
call
movs
mov
and
sbb
loopne
inc
inc
adc
sbb
ficom
shl
sub
mov
dec
cmp
and
call
ins
mov
and
gs
fdiv
mov
enter
mov
pop
adc
push
in
lods
xchg
mov
loopne
sbb
mov
xor
shl
rol
mov
jl
jo
test
adc
sub
dec
sub
lock
dec
adc
cmp
and
(bad)
loopne
loop
sub
clc
mov
in
push
dec
jbe
mov
call
mov
pop
call
mov
fdiv
in
or
shr
sub
les
sbb
lods
pushf
in
ins
mov
and
call
iret
loopne
cwde
in
out
dec
and
dec
xor
fs
movs
or
or
mov
adc
cmp
cmps
cmp
add
and
scas
mov
out
bsf
das
cmp
or
inc
cmp
es
mov
jb
outs
or
cld
and
pop
sbb
push
pushf
mov
ss
pop
add
popf
cwde
xor
sar
pop
push
std
mov
js
adc
mov
pusha
ds
inc
in
sub
shr
sbb
jno
pop
pop
les
push
jne
mov
scas
mov
test
(bad)
jmp
lea
pop
pop
inc
jno
stc
mov
shr
call
(bad)
cmp
lods
std
call
sub
mov
test
cmps
and
rcr
jge
mov
sub
xor
les
cli
sahf
mov
xor
mov
fsub
mov
gs
fmul
scas
adc
xchg
jbe
shl
(bad)
pop
call
(bad)
cmp
mov
sbb
sbb
pusha
xchg
data16
xor
add
mov
pop
push
in
mov
and
sbb
fisttp
cmc
mov
mov
jo
mov
jmp
add
shr
fstp
mov
sub
and
pusha
movs
push
xchg
lea
mov
push
mov
adc
cmp
push
mov
pushf
cmc
enter
hlt
mov
pop
cmps
dec
iret
add
add
mov
add
jne
sbb
fs
cld
ret
sub
inc
sbb
xor
xlat
clc
jge
in
in
mov
lock
adc
pop
pusha
loopne
sub
lock
int3
aam
fmul
push
repnz
push
and
int3
fld1
sbb
and
jae
rcl
or
in
sahf
pop
int3
dec
lahf
xchg
sbb
jp
ror
(bad)
into
lods
mov
or
mov
dec
dec
pop
mov
xor
call
mov
(bad)
into
push
arpl
inc
ror
je
jne
data16
shl
xchg
jp
add
and
stos
rcr
adc
push
sbb
mov
jl
adc
mov
mov
adc
mov
adc
xchg
iret
or
int3
mov
pusha
sbb
jmp
pop
ins
jo
add
xchg
mov
dec
pop
mov
add
mov
add
hlt
or
mov
hlt
mov
inc
js
inc
mov
pop
es
shr
les
cld
stos
pop
loop
ss
sbb
inc
mov
fcom
push
enter
fdiv
mov
or
mov
hlt
out
mov
push
pusha
mov
inc
inc
rcr
(bad)
(bad)
inc
and
sbb
enter
and
or
test
and
in
cmp
clc
mov
dec
int3
fnsave
lods
push
xor
adc
cmps
xor
jmp
xchg
mov
and
xchg
sub
inc
js
xlat
je
xor
pushf
ins
pusha
sub
inc
loopne
mov
push
pop
adc
pop
mov
idiv
jg
mov
in
call
mov
push
add
sub
and
xchg
ficom
mov
dec
ins
xchg
je
leave
push
push
sbb
adc
add
mov
add
sbb
call
mov
cli
mov
lock
and
mov
enter
(bad)
adc
pop
lock
bound
addr16
div
cmp
mov
(bad)
pusha
movs
xchg
int3
sbb
ins
mov
fst
pop
sub
fsubr
push
ficomp
inc
adc
fistp
or
push
fwait
pop
icebp
mov
mov
inc
inc
les
rcr
clc
cmp
fucom
inc
push
cld
mov
xor
(bad)
adc
sub
push
xor
in
add
outs
and
or
pushf
mov
scas
mov
mov
dec
xor
sbb
leave
sbb
pop
xor
inc
rcl
dec
add
dec
test
clc
rcl
and
pop
sbb
mov
xor
dec
lods
test
movs
lods
jne
inc
fmul
adc
pop
adc
fisubr
push
inc
push
in
adc
and
sub
xchg
lock
in
jo
ins
lock
clc
shl
cmp
rol
movs
clc
mov
adc
adc
es
fdivr
and
enter
xchg
mov
pop
jae
sbb
pusha
adc
cmp
cwde
inc
loopne
clc
into
mov
cmp
sbb
push
cdq
fadd
dec
sahf
dec
fs
cld
sbb
xchg
int3
call
inc
enter
rol
pop
gs
cmp
mov
push
xor
adc
mov
int3
inc
mov
cmp
pop
pop
or
pusha
nop
loopne
icebp
jge
push
mov
push
lods
lock
(bad)
in
in
test
hlt
aam
pop
daa
sbb
add
iret
xor
loopne
enter
es
fs
dec
fdiv
dec
sub
inc
jge
scas
lock
dec
je
cwde
enter
mov
mov
ror
push
and
or
dec
fmul
nop
je
test
pop
hlt
(bad)
cwde
aad
jl
adc
(bad)
(bad)
int
mov
push
adc
sbb
js
mov
cdq
or
lock
loopne
or
sub
pop
js
sar
ins
push
dec
cmp
mov
push
sub
mov
mov
aad
sbb
test
pop
xchg
xchg
push
sbb
(bad)
xor
cmp
and
out
mov
test
mov
mov
cmp
daa
dec
or
adc
add
out
aam
in
jbe
gs
fst
lods
inc
cmp
clc
add
pusha
shr
in
xchg
mov
shl
popf
adc
clc
sub
adc
cmp
mov
movs
sub
pop
sbb
loopne
mov
rcr
cmp
mov
movs
movs
or
mov
cmp
test
mov
xor
test
adc
cmp
xchg
sbb
xor
add
test
jns
es
mov
inc
push
enter
sbb
cmp
push
xor
mov
sahf
or
jne
add
or
clc
lock
adc
popf
js
pop
fadd
lods
sub
mov
cmc
jno
pushf
movs
repnz
add
mov
mov
jmp
movs
mov
push
sbb
cmps
and
add
inc
mov
cwde
mov
pop
sub
in
push
les
xchg
cmp
hlt
pushf
std
(bad)
in
jb
inc
fmul
sar
xor
in
cmp
xor
mov
in
sbb
mov
in
hlt
adc
cmp
push
movs
arpl
or
imul
push
mov
lods
loopne
pushfw
inc
jl
fnstcw
cmp
ficomp
jp
mov
xor
sub
and
xchg
pop
mov
pop
mov
pop
xor
xor
aam
jbe
fs
(bad)
mov
loopne
mov
pop
xchg
mov
or
int3
mov
add
adc
pusha
or
imul
jns
int
retf
push
imul
imul
les
test
push
push
mov
call
loope
xchg
adc
push
mov
and
sbb
mov
cwde
mov
pop
repnz
cld
cmp
add
enter
leave
cmc
cli
sbb
xchg
shr
hlt
xchg
pushf
sbb
int3
call
cwde
xchg
inc
push
out
push
xchg
aad
push
clc
(bad)
shl
and
loop
inc
fs
sub
int3
sbb
cmps
push
xchg
test
jo
repnz
xor
dec
jle
int3
cmp
xor
and
mov
jne
sbb
cli
fadd
test
jl
mov
movs
sub
xchg
add
xchg
call
test
ins
jle
inc
xchg
dec
xchg
sub
les
push
out
je
cld
es
adc
jl
pop
mov
mov
inc
test
push
in
fsubr
pop
lock
mov
int3
cdq
lock
mov
aam
(bad)
pusha
lds
cwde
push
nop
clc
mov
fimul
push
es
(bad)
ds
add
add
mov
mov
mov
fs
popf
sar
adc
xor
icebp
into
fidiv
mov
test
adc
clc
add
out
test
fs
popa
jo
and
inc
push
je
cmp
xchg
in
cli
sbb
mov
aam
rcr
test
sbb
call
or
pop
and
js
out
jl
sub
inc
push
mov
dec
fsub
rcr
sar
cld
add
or
ror
adc
in
push
stos
pop
or
jne
pushf
sub
mov
lods
enter
or
cmps
mov
fst
add
inc
lea
je
cwde
clc
adc
push
movs
xchg
push
sbb
pop
hlt
xor
jmp
(bad)
jecxz
or
jo
clc
test
mov
or
sbb
sbb
lea
ins
repz
add
xchg
loopne
test
pop
int
aas
and
pushf
sar
mov
ja
jl
inc
jbe
js
shl
add
or
sub
enter
cmp
neg
fcom
sahf
pop
xchg
dec
pushf
adc
cwde
and
lods
jmp
push
push
push
enter
sub
int3
cli
jo
and
fsub
pushf
in
sub
movs
push
loopne
ins
stos
aam
ds
lods
pusha
adc
dec
dec
lock
push
in
loopne
mov
sub
push
shl
into
and
int3
lahf
call
mov
cmp
mov
mov
xchg
add
mov
(bad)
call
jmp
mov
mov
in
pop
fs
call
xchg
cmp
daa
stos
push
mov
ins
or
jl
mov
sbb
cmp
scas
dec
mov
fmul
nop
sti
jp
(bad)
shl
mov
lods
rcl
cmp
pusha
xchg
fidivr
ins
add
xchg
or
lds
cmp
dec
int3
xor
mov
clc
adc
cmp
mov
or
test
in
mov
and
mov
jg
adc
in
popf
js
shl
lock
adc
stos
and
popa
dec
jo
mov
hlt
push
mov
hlt
inc
lahf
and
lock
dec
and
push
sbb
loopne
rol
aaa
in
mov
in
ins
pop
mov
xor
adc
push
mov
pusha
iret
xor
idiv
xor
cmp
add
sar
jo
mov
xor
fistp
and
sub
enter
je
lods
sub
cmp
xchg
jmp
mov
fsubr
jo
(bad)
and
push
xchg
loopne
cwde
or
adc
adc
mov
sbb
cld
in
xor
(bad)
xchg
in
add
sub
pop
xor
or
fs
fs
and
dec
fisub
lods
mov
inc
repz
pop
xor
jl
movs
xor
inc
popf
movs
mov
and
sub
lock
add
test
and
inc
dec
sub
xor
in
or
in
or
jmp
ins
enter
in
repnz
mov
sub
sbb
shl
push
jb
stc
fld
sub
xor
inc
jl
sub
mov
add
mov
mul
jns
pusha
mov
mov
rcr
dec
xor
call
sbb
in
(bad)
hlt
leave
hlt
shr
int
pop
mov
lock
clc
rol
fsubr
sub
inc
test
dec
dec
lock
std
mov
fsubr
movs
xor
push
or
lock
jae
adc
dec
shl
repz
hlt
ins
push
ins
pushf
fisttp
rcr
sub
mov
xor
lods
in
in
add
sbb
clc
cwde
push
jo
leave
fs
pop
pop
test
pushf
ins
test
sbb
cmp
pop
mov
xchg
or
push
mov
inc
mov
cwde
adc
mov
adc
inc
ficom
pop
fs
fdiv
sub
ret
adc
mov
adc
mov
dec
adc
sub
aam
fadd
hlt
jle
imul
cwde
or
daa
cld
in
out
ret
movs
dec
pusha
stc
or
mov
lahf
sub
mov
mov
xchg
in
imul
pop
fmul
sub
xchg
push
adc
mov
mov
loopne
pushf
(bad)
jo
rcl
dec
mov
push
xor
je
mov
stc
test
sbb
mov
pop
pushf
inc
scas
sub
aad
jl
and
adc
lock
nop
inc
adc
es
fisttp
push
fadd
inc
sub
cmp
mov
jnp
mov
cmp
jno
clc
xchg
cli
cwde
mov
push
mov
ins
dec
data16
mul
mov
sbb
lahf
les
fidivr
mov
test
jo
cwde
mov
ja
mov
cmp
lahf
sub
pop
enter
cmp
cmp
in
ret
bound
loop
call
dec
or
stos
rol
adc
pop
or
cmp
(bad)
jmp
je
stc
mov
xor
pop
mov
pop
add
dec
push
hlt
add
add
jle
iret
add
push
inc
mov
jo
int
mov
aam
nop
mov
lock
call
je
cmp
xchg
push
cmp
and
mov
inc
sub
push
push
enter
mov
jl
test
xchg
lock
add
out
mov
or
fdivr
fild
sub
jg
sbb
hlt
hlt
ret
inc
adc
je
mov
sub
pop
rcl
clc
add
sar
cwde
cmp
mov
in
or
in
add
or
jmp
dec
mov
adc
mov
ds
movs
inc
(bad)
fmul
sahf
test
loope
jp
inc
hlt
dec
xchg
loopne
push
pop
retf
in
(bad)
xchg
mov
push
xor
jbe
pop
gs
cmp
sbb
dec
mov
les
jl
jl
or
popf
xchg
lock
or
mov
movs
cld
out
and
stos
aam
fmul
je
dec
enter
js
sar
add
ins
sbb
lods
mov
js
pusha
jb
sbb
mov
lods
test
in
inc
mov
mov
or
add
je
and
clc
sub
push
cmp
in
mov
pop
sbb
mov
cmp
shr
pusha
mov
hlt
cmps
adc
xchg
jo
js
shl
pop
mov
or
lods
aam
jp
and
xor
test
sbb
mov
mov
jnp
and
jmp
rcr
pop
loopne
cmp
push
sub
test
push
in
sbb
pop
adc
loopne
xchg
cld
(bad)
adc
pusha
sbb
rcl
inc
mov
clc
xchg
add
sti
aam
mov
xor
jmp
jl
adc
shl
rol
div
das
pop
jbe
sbb
mov
iret
xchg
jo
push
call
(bad)
nop
cld
and
cld
fisttp
mov
xchg
dec
lods
sub
pop
cwde
inc
daa
adc
jno
jo
xchg
rol
push
pushf
lock
and
fdivr
mov
aam
inc
mov
jle
fs
xchg
mov
xchg
scas
push
movs
popf
les
js
cli
mov
(bad)
mov
rcr
sub
jo
and
and
daa
pop
mov
push
cmp
loop
xor
pop
pop
cld
dec
mov
(bad)
push
cld
jmp
std
mov
rcr
add
ins
dec
es
inc
push
int3
lods
retf
rcl
push
cmp
(bad)
lods
cmp
adc
loop
icebp
ins
pusha
xchg
int3
repz
inc
xchg
mov
fs
cmp
xor
int3
in
mov
and
sub
lock
xchg
jo
dec
je
dec
mov
mov
cmp
inc
pusha
sbb
ror
fdivr
enter
(bad)
mov
imul
mov
inc
xor
mov
loop
or
cmp
mov
lods
aam
cmp
adc
dec
xchg
xchg
mov
push
(bad)
sbb
add
xchg
sub
sti
pop
mov
inc
sub
xor
sbb
stc
and
sub
jge
ins
xlat
jo
fs
adc
xor
mov
(bad)
in
lea
add
call
nop
sub
dec
inc
inc
int
mov
pop
out
lds
mov
add
mov
push
add
call
sub
xchg
loopne
pushf
and
add
inc
cmps
mov
xor
sub
pop
shr
hlt
add
mov
adc
xchg
call
sbb
mov
pusha
inc
xchg
or
jle
adc
hlt
(bad)
int3
retf
inc
fwait
jo
mov
xor
cmp
sub
sar
sbb
aam
mov
dec
mov
fsubr
das
mov
fild
mov
adc
cmp
test
sub
pop
add
pop
and
mov
aad
cld
and
push
test
stos
je
cmp
lods
dec
push
loopne
enter
xor
out
jb
sub
mov
sub
jmp
dec
js
add
and
popa
xor
dec
shr
js
or
mov
adc
dec
enter
hlt
loope
out
int3
xor
(bad)
fistp
mov
cs
mov
adc
mov
mov
cmp
inc
ins
or
mov
aam
lods
test
adc
mov
es
movs
sbb
out
pop
inc
icebp
in
xor
mov
pop
jns
adc
loopne
cmp
and
xor
clc
push
push
adc
cmp
lods
xchg
adc
jns
add
cmp
mov
fimul
sub
lods
mov
cs
in
test
and
adc
es
pop
xor
lods
and
inc
inc
mov
push
inc
mov
test
sub
or
pop
or
loopne
call
push
inc
lock
fmul
hlt
push
pushf
cmp
cmp
test
xchg
call
pop
pop
fnstenv
pop
fldcw
sbb
dec
pusha
lods
push
inc
mov
stos
mov
cmp
test
(bad)
mov
in
fcomp
mov
lods
out
test
add
data16
fwait
cmc
pusha
push
jg
mov
cmp
inc
jge
lods
loopne
repnz
push
(bad)
icebp
nop
fcomp
mov
pop
xchg
push
loopne
shr
mov
xlat
int3
pop
dec
test
push
add
mov
or
sub
pushf
or
outs
hlt
adc
jo
adc
mov
(bad)
call
fsubr
xor
mov
or
int3
sbb
and
xor
rcl
hlt
fs
mov
in
lods
fnstenv
imul
inc
int
hlt
out
fsubr
rcl
inc
push
cmps
mov
pop
cmps
mov
pop
stc
xlat
shr
gs
inc
and
xlat
test
lock
or
mov
not
or
hlt
sti
test
inc
cli
cwde
in
sub
pushf
and
clc
adc
pushf
iret
push
inc
pop
inc
in
push
cmp
cmp
je
stos
fst
clc
mov
or
sbb
adc
cmc
mov
mov
mov
push
mov
(bad)
jb
mov
daa
mov
shl
inc
mov
jl
movs
push
cmp
test
stos
int3
shr
xchg
jecxz
sub
xor
shr
and
test
in
int3
enter
xor
shr
dec
xor
pop
cmp
fsubr
sub
mov
mov
mov
retf
repnz
add
mov
test
and
cwde
add
mov
mov
sbb
mov
or
fs
mov
mov
adc
adc
xor
daa
pop
mov
mul
or
push
loopne
call
adc
dec
mov
inc
mov
js
loopne
pop
gs
xchg
and
scas
mov
ret
(bad)
mov
inc
sahf
jl
jb
fdivr
mov
leave
jno
or
cli
add
test
idiv
ficom
inc
into
xchg
ins
and
inc
out
jns
add
fs
les
scas
shl
mov
dec
shl
enter
(bad)
hlt
xor
nop
jo
cmp
adc
(bad)
xor
clc
pop
mov
mov
lahf
mov
stos
inc
aas
loopne
jge
fs
pushf
std
mul
or
inc
in
in
int
adc
mov
sub
in
test
adc
sbb
mov
icebp
push
jo
clc
mov
add
or
inc
mov
xor
leave
shr
mov
mov
je
pushf
stos
push
repnz
sbb
sub
call
aam
inc
xchg
sbb
loope
or
xor
arpl
jmp
fmul
dec
xor
cmp
lock
or
rcr
or
mov
add
mov
dec
xor
mov
aam
pop
and
mov
leave
test
aas
xor
ss
outs
test
jg
gs
mov
sar
mov
xlat
xor
out
cmp
mov
add
cwde
aad
or
das
or
lods
repz
pusha
enter
sbb
mov
jp
mov
cwde
fsubr
sbb
xchg
inc
aam
shl
mov
dec
and
mov
dec
mov
pop
sub
xor
xchg
xchg
mov
pop
mov
fsub
mov
js
sbb
sbb
mov
stos
jl
pop
in
mov
hlt
pop
(bad)
xchg
xor
out
pop
push
add
ja
adc
mov
pop
call
call
das
cmp
xor
xchg
sbb
xchg
in
pusha
sbb
call
movs
loop
push
push
jecxz
mov
aad
xor
sbb
mov
pop
jl
fs
mov
test
mov
pop
xor
lock
pushf
inc
in
jo
mov
add
mov
test
test
mov
ror
je
popf
lods
jo
clc
call
and
or
test
imul
nop
adc
clc
les
mov
(bad)
or
jmp
add
fsub
pop
jne
fdiv
jmp
adc
sbb
scas
and
and
jg
in
mov
jl
shr
pop
pop
xor
iret
fnstenv
dec
loop
xor
push
std
mov
pop
inc
loopne
add
cld
sub
mov
xor
add
rcr
sub
sub
cwde
ins
enter
add
scas
or
test
push
fnstcw
xchg
xchg
cwde
pop
inc
shr
push
in
xchg
push
lea
aam
mov
add
lods
popa
xchg
inc
aas
fcom
rcr
inc
loopne
sub
and
jle
cld
lods
call
lock
fidiv
call
aad
cmp
clc
shl
jmp
dec
sub
jmp
cmp
fmul
mov
xchg
inc
mov
adc
jecxz
push
xchg
call
je
dec
and
jae
mov
fs
sbb
push
mov
jns
and
in
pushf
fbld
test
push
inc
clc
mov
out
(bad)
mov
nop
ins
mov
cmps
or
sub
sub
jo
cmp
adc
ja
jl
cmp
gs
nop
jge
movs
push
add
jne
jl
fnstenv
sbb
adc
hlt
inc
rol
inc
xor
mov
push
adc
jp
push
push
stos
xchg
xchg
fild
sbb
pusha
ins
jb
ss
retf
pushf
mov
xchg
lods
ss
clc
or
cmps
dec
call
cmp
pusha
mov
ror
mov
adc
(bad)
(bad)
mov
mov
add
fdivr
pop
xor
shr
inc
add
or
pusha
mov
mov
call
or
or
jecxz
mov
test
mov
mov
xor
jne
pop
or
dec
cli
dec
sar
add
or
and
rcr
es
test
test
pusha
scas
popa
mov
mov
mov
push
xor
mov
call
xor
jb
in
rcl
fldenv
add
inc
aam
clc
xlat
cmp
and
mov
mov
mov
pushf
stc
and
inc
nop
push
mov
enter
test
adc
js
neg
(bad)
mov
enter
fisubr
ror
mov
push
fcomp
stos
or
xchg
shr
adc
or
cmp
les
scas
mov
enter
dec
push
sub
js
test
cli
clc
inc
push
test
aam
fwait
sbb
jecxz
outs
into
fdivr
sub
push
or
or
lock
sbb
fdivr
and
cld
not
nop
ret
mov
lods
mov
mov
cmp
xchg
xchg
mov
mov
dec
mov
push
and
mov
lods
movs
repz
js
xor
sbb
rcr
push
dec
mov
push
sar
clc
repz
sub
rcl
sub
add
xor
push
je
or
cmp
les
test
arpl
mov
xchg
les
xchg
xchg
push
inc
add
cmps
test
shl
popf
inc
adc
ins
clc
add
and
adc
mov
pop
inc
push
mov
cmp
mov
(bad)
call
shr
into
mov
loop
out
sub
jge
je
lods
cli
jne
pop
sub
push
xchg
int
jb
cwde
mov
push
ins
inc
shr
(bad)
mov
int3
dec
loopne
sbb
(bad)
les
sar
jg
sub
clc
jo
test
mov
into
fisub
les
pop
call
cmps
inc
xor
and
jl
cs
xchg
or
push
nop
cwde
call
jmp
test
fbld
inc
mov
mov
sbb
dec
hlt
ret
jb
dec
ins
mov
fsubr
cdq
in
xor
add
or
into
fisub
add
lods
and
add
rcr
retf
movs
ss
cwde
push
(bad)
adc
mov
in
sub
jo
cmp
adc
pushf
loope
pusha
push
or
adc
stos
lods
icebp
repz
sar
mov
(bad)
lds
in
rcl
jl
aad
or
cs
das
or
pusha
dec
lods
mov
cld
ins
jp
ins
sbb
push
cld
add
repz
sbb
fldcw
ds
mov
and
out
mov
sub
out
or
sub
xor
pop
xchg
dec
and
or
dec
sbb
(bad)
push
push
add
jae
xchg
pushf
fsub
sbb
mov
enter
test
nop
in
add
add
dec
in
hlt
or
xor
mov
sbb
gs
les
push
cmp
mov
jl
inc
pop
pop
fcmovne
mov
scas
pop
cmp
aaa
cs
inc
xor
mov
pusha
retf
adc
cmp
and
call
out
and
add
xor
outs
loopne
add
test
bnd
cs
stc
inc
pushf
jb
sbb
sahf
cmp
pushf
mov
sar
push
inc
das
push
xchg
in
test
and
shr
mov
jl
sub
or
or
xor
js
inc
js
inc
rol
movs
aam
inc
ss
jmp
std
aam
in
pop
sbb
ins
test
mov
hlt
add
dec
dec
xor
dec
or
push
inc
add
mov
rol
jbe
pusha
xchg
mov
xor
push
jbe
fsub
in
jmp
push
lahf
pop
nop
mov
fcom
adc
test
ret
sub
sbb
int3
mov
cmp
sub
or
pushf
bound
and
sbb
push
loopne
dec
retf
test
clc
pop
pusha
stc
adc
inc
adc
jno
js
lock
and
loope
push
inc
test
mov
dec
jo
loopne
aam
div
jno
clc
pop
mov
ins
aam
int3
pop
call
xchg
cmp
sub
clc
sub
out
xor
inc
mov
or
jns
(bad)
fdivr
cmc
rcr
je
enter
mov
cmp
out
mov
add
in
lea
and
cmp
je
cmp
loope
jecxz
sbb
and
ret
cmp
push
cdq
mov
(bad)
in
pop
jl
loopne
outs
xor
mov
in
mov
sub
test
push
movs
daa
loop
lock
inc
cdq
lods
and
mov
fs
mov
xchg
or
or
push
mov
loop
pop
inc
and
jl
(bad)
ror
sbb
fsubr
jo
js
fs
dec
jbe
push
enter
test
pop
add
adc
test
icebp
out
pop
adc
adc
pushf
jmp
je
je
lods
push
out
sbb
mov
dec
adc
xor
cld
xor
push
mov
mov
dec
call
and
pop
lds
je
and
in
loope
mov
fadd
call
dec
ins
mov
pushf
jp
nop
jle
ror
jl
les
out
pop
call
push
pop
loopne
cli
xchg
or
add
mov
mov
hlt
and
iret
sbb
add
cld
(bad)
hlt
adc
xor
ins
cmp
jno
gs
hlt
mov
mov
sbb
int3
sub
icebp
dec
in
cs
cmp
(bad)
cli
movs
fistp
and
sub
fstp
enter
dec
mov
pushf
loop
mov
cmp
inc
push
call
call
shr
jp
dec
(bad)
mov
iret
fadd
and
sbb
adc
clc
cmp
sub
pop
nop
add
xchg
js
and
adc
bound
push
aam
jl
ds
mov
test
push
inc
pop
jmp
mov
cmp
cli
xor
cwde
push
enter
push
xchg
pusha
sbb
jo
sbb
adc
mov
mov
cwde
(bad)
pusha
cmp
je
mov
push
aam
add
or
iret
call
sub
dec
xor
sbb
js
or
or
mov
mov
push
add
or
in
ret
les
jl
loopne
inc
movs
mov
xor
(bad)
jbe
clc
pop
pusha
cld
and
mov
mov
sub
xchg
(bad)
pushf
into
dec
adc
sbb
loopne
test
or
fiadd
test
cmp
nop
sub
adc
xor
xor
mov
mov
adc
or
cmp
mov
jl
xchg
mov
fcom
add
outs
js
adc
xchg
pushf
mov
adc
pusha
pushf
inc
inc
dec
mov
and
jmp
pusha
or
add
jb
sbb
test
test
aaa
mov
mov
pushf
es
sub
jmp
hlt
fs
cmp
pusha
pusha
(bad)
jo
or
mov
int3
inc
fs
xor
pop
jl
adc
jno
pop
pop
es
or
inc
enter
jp
add
jl
rcl
hlt
out
fistp
(bad)
movs
in
test
inc
sar
dec
rcr
cmp
and
leave
push
retf
mov
fsubr
xor
test
cmp
pop
loope
cdq
xchg
fs
or
xchg
add
cmp
jecxz
out
mov
cmp
out
lods
pop
push
and
cld
clc
rcl
ror
hlt
push
sub
sub
fcom
rcr
fwait
add
mov
sbb
xchg
in
div
ins
jno
mov
xchg
and
add
sub
xchg
jp
jmp
call
shl
push
aad
cmp
xor
mov
mov
xchg
push
xchg
dec
pop
inc
ins
xchg
dec
fdiv
mov
(bad)
cwde
ins
stos
or
jmp
out
or
sub
ret
xor
xchg
mov
mov
js
lock
ins
rcr
xchg
movs
repz
adc
call
repz
out
mov
mov
push
and
xchg
frndint
pop
(bad)
clc
sbb
aam
mov
mov
movs
fs
dec
aam
pusha
or
call
fs
(bad)
std
xor
xor
or
mov
xor
mov
push
xor
and
xchg
mov
inc
push
add
push
sti
push
inc
mov
loopne
inc
in
pop
pusha
imul
aad
js
enter
out
int3
jge
inc
mov
stos
fmul
fsub
lods
call
push
xchg
pop
mov
(bad)
and
pusha
add
ret
xchg
sbb
mov
and
sbb
sar
rcl
movs
cmp
sbb
imul
sub
test
jmp
and
sbb
cmp
lods
call
dec
push
hlt
gs
outs
adc
gs
sbb
fcomp
lock
fadd
loopne
pop
mov
or
add
hlt
pushf
add
cli
fcomp
jg
lods
inc
or
hlt
and
sub
jno
js
(bad)
sbb
xor
inc
fcom
lods
ds
add
mov
mov
movs
lods
or
xor
jns
leave
cld
dec
mov
fldl2t
push
cmp
mov
cwde
or
push
xor
push
retf
int3
enter
call
cld
cmp
jnp
mov
pop
lods
or
fadd
sti
mov
cmps
push
int3
add
loope
jo
out
mov
or
je
hlt
and
nop
das
pop
adc
or
gs
lods
inc
push
sbb
add
in
call
adc
fs
pushf
sbb
mov
inc
mov
jecxz
(bad)
sar
jle
test
std
jle
ds
sub
pop
data16
mov
adc
jg
sbb
lods
push
scas
in
adc
cld
pop
mov
fistp
add
aaa
aad
icebp
mov
ins
and
add
and
mov
dec
and
js
mov
lea
pushf
mov
jns
shl
mov
lods
and
call
js
adc
xchg
retf
adc
sbb
or
dec
fsubr
mov
cwde
mov
xor
outs
loopne
cld
aad
jge
cmps
xor
push
adc
mov
inc
cmp
in
push
pop
mov
sub
test
das
adc
add
lods
mov
xor
(bad)
pop
pop
mov
push
shr
mov
pop
adc
mov
test
mov
std
in
fs
movs
icebp
mov
and
fcom
retf
or
adc
int
fs
outs
mov
xor
pop
fs
dec
leave
pushf
mov
scas
add
add
sbb
std
(bad)
mov
pop
add
and
xchg
dec
jb
daa
dec
sub
pushf
sti
mov
enter
cmp
loope
inc
movs
mov
cmp
cmp
xchg
(bad)
sti
fdivr
add
add
movs
mov
in
sub
les
dec
call
adc
cld
dec
call
ins
sbb
adc
bound
call
mov
cwde
aas
jo
leave
inc
xor
jmp
sub
test
xor
dec
mov
mov
ins
daa
add
pusha
push
or
sub
push
inc
pushf
lea
cmp
cmp
add
or
js
inc
jl
pushf
mov
rol
pop
and
lods
cdq
cld
and
inc
dec
in
adc
inc
jno
fs
call
scas
hlt
lock
push
jle
dec
push
out
call
push
test
ja
dec
and
jo
clc
scas
add
and
or
in
or
mov
ss
fs
xchg
sub
sub
mov
fidiv
jo
or
cld
scas
dec
push
sub
inc
ins
(bad)
cli
movs
inc
adc
and
popa
pop
test
jb
dec
adc
ins
sahf
in
int3
rcl
in
outs
push
inc
ror
aam
lock
jmp
lods
xor
jne
pop
and
jl
mov
add
mov
mov
sbb
fisttp
fsub
sub
lods
mov
in
jb
inc
push
jns
aad
pop
lods
rcr
test
sbb
inc
sar
out
dec
ins
aam
ins
stos
adc
das
aam
repz
fcom
call
test
int3
add
fs
(bad)
xchg
adc
or
enter
push
push
enter
ins
ror
fcom
call
fxch
adc
cmp
and
and
cmp
add
or
and
ror
mov
retf
rcr
ret
sar
enter
mov
sbb
sbb
test
hlt
push
cmp
ins
mov
js
loopne
add
add
sti
mov
mov
outs
movs
ins
push
mov
push
mov
int3
mov
mov
movs
sub
mov
sbb
test
stc
mov
popa
xchg
add
mov
mov
pop
mov
xchg
popa
sub
js
ins
push
cmps
clc
lock
lahf
inc
sbb
call
dec
call
pushf
fsub
or
or
inc
and
pop
shr
push
rol
mov
add
mov
sbb
enter
ja
call
lods
inc
xchg
pop
sbb
movs
loopne
aam
popa
mov
lock
pop
aam
mov
pop
and
sbb
add
clc
and
and
daa
test
mov
ins
mov
sbb
nop
cli
add
hlt
mov
cmp
data16
mov
or
pusha
ror
int3
xchg
add
leave
in
sub
sbb
dec
rol
mov
cdq
jmp
dec
sub
inc
add
js
movs
(bad)
sti
push
stos
inc
sub
jo
inc
fs
dec
inc
xor
xor
inc
lock
mov
scas
mov
into
test
jo
pop
nop
clc
std
retf
fstp
xor
jns
aam
inc
pop
data16
dec
hlt
mov
stos
add
cmp
inc
add
(bad)
adc
or
out
retf
lods
les
cmp
cmp
js
es
add
sub
jl
mov
pop
mov
aam
sahf
mov
xchg
cwde
mov
mov
jg
vmread
xchg
test
out
into
sub
mov
mov
icebp
clc
shrd
xor
xchg
and
inc
pop
pop
test
jl
lods
pushf
ds
add
xchg
int3
les
pop
test
mov
mov
sar
add
retf
lock
(bad)
shr
clc
je
sbb
in
jle
xor
xchg
enter
sbb
pusha
push
push
cld
add
aam
cmp
cmp
jmp
jns
lock
cwde
aaa
jo
lock
mov
sar
in
mov
cmp
inc
xor
fnstenv
pop
gs
sub
sub
mov
and
dec
mov
xchg
xor
jecxz
push
sbb
call
inc
pop
jne
jne
cmp
aaa
loop
lods
lock
sar
test
iret
lods
jae
add
sbb
loopne
call
push
mov
ins
push
je
cld
sub
lock
cmp
mov
push
cmp
cmp
or
mov
inc
jl
movs
div
cwde
and
mov
mov
mov
aaa
add
js
rol
and
or
inc
inc
mov
jge
inc
push
mov
mov
push
sbb
dec
add
xchg
xor
data16
test
dec
pop
push
pusha
pop
pusha
xor
mov
cmp
mov
xchg
int3
cmp
add
pusha
dec
jo
add
icebp
pop
mov
push
hlt
dec
dec
xchg
or
mov
push
jmp
cmc
xor
test
add
pop
push
sbb
fdiv
inc
adc
mov
mov
cmp
ins
lock
lods
call
jo
or
jl
nop
push
push
mov
sub
mov
sub
xor
cwde
xchg
int
retf
jle
je
mov
sbb
mov
or
aam
popf
sub
movs
sub
pusha
clc
cmp
cmp
(bad)
ror
add
dec
push
xchg
(bad)
cld
(bad)
in
adc
popf
and
movs
mov
pop
aad
jl
dec
push
fwait
push
enter
adc
mov
call
les
sar
mov
and
sub
xor
in
sbb
xor
ins
popf
mov
test
add
jne
jle
and
or
cmc
fnstcw
je
nop
pop
add
cld
sbb
aam
push
cmps
mov
dec
mul
je
xor
xchg
add
mov
ror
mov
in
imul
clc
fmul
dec
jl
fidiv
mov
js
add
dec
push
rcr
dec
les
dec
jg
sbb
or
and
or
dec
sub
xchg
push
cmp
and
ins
nop
hlt
loop
push
inc
or
sub
or
pop
ficomp
mov
xor
push
xchg
jle
dec
mov
popa
fnstcw
xor
mov
in
mov
sub
mov
or
and
cld
outs
les
or
add
mov
or
adc
aam
mov
pusha
lods
mov
xchg
in
xor
aaa
add
std
mov
mov
jle
sbb
retf
int3
adc
mov
pop
or
mov
and
mov
je
xchg
pusha
xchg
inc
js
lock
push
hlt
jmp
rol
inc
mov
call
jg
add
cdq
fisttp
xchg
ins
aam
outs
lock
js
sbb
imul
stos
xor
scas
mov
sbb
sub
mov
xor
mov
mov
int
pop
jne
or
aam
aaa
mov
shl
inc
fsubr
fs
or
xor
jge
scas
test
clc
sbb
nop
stos
inc
mov
lock
shr
(bad)
movs
test
aam
sub
inc
inc
loopne
loopne
test
shr
sbb
or
(bad)
in
push
test
lods
movs
xor
dec
test
fst
in
movs
mov
fst
fsubr
aam
cmp
xchg
sar
mov
mov
nop
in
cmp
lods
in
in
sahf
repz
sub
shl
leave
mov
adc
mov
cld
call
adc
je
push
sar
js
push
or
lods
hlt
push
inc
or
or
cmp
sub
dec
jmp
mov
pop
inc
test
jnp
in
in
xor
std
cmp
cld
and
pop
outs
and
test
push
das
ins
and
pop
sbb
popf
cmp
in
xor
cmp
(bad)
sbb
sbb
clc
or
mov
ins
xor
cwde
push
nop
dec
pop
jmp
xchg
mov
pushf
cli
mov
pop
jg
xor
aam
inc
in
jo
shl
dec
dec
mov
into
xor
pop
push
test
xchg
fs
adc
test
cmp
retf
sbb
aam
(bad)
sbb
mov
mov
pusha
ret
je
cdq
js
xchg
in
or
nop
iret
shl
xor
ficomp
mov
sbb
int3
xchg
mov
and
inc
int3
rcl
inc
adc
lds
inc
dec
push
cdq
clc
cld
push
sbb
jo
and
mov
mov
xchg
call
test
add
sub
and
(bad)
(bad)
push
fiadd
and
jp
mov
clc
movs
cdq
xchg
dec
les
and
(bad)
sbb
pop
lods
mov
rol
or
and
push
xchg
pop
cmp
and
mov
mov
fsubr
mov
cmp
or
xchg
cmc
cli
js
enter
mov
cmp
fisttp
in
jg
mov
pop
pop
push
and
inc
sahf
lock
pushf
nop
ds
push
dec
dec
xor
imul
pop
cld
sbb
push
hlt
mov
dec
xchg
lods
jnp
dec
push
imul
jge
sbb
mov
loope
add
jbe
sbb
or
shl
and
adc
or
mov
jb
hlt
xor
fs
push
jo
js
lock
cmp
add
mov
add
lock
mov
and
jns
mov
pusha
enter
or
adc
push
or
rcl
xchg
(bad)
in
stos
lock
ror
cmp
fsub
adc
add
aam
aam
inc
rcl
cwde
jbe
lahf
xor
clc
popf
rcr
enter
mov
mov
mov
and
nop
pop
cmp
or
in
les
dec
mov
les
cmc
inc
ins
mov
in
add
es
sbb
les
movs
add
call
ins
inc
ins
lock
pop
inc
dec
push
fsubp
mov
lods
and
call
enter
test
scas
movs
fld
add
cs
jno
enter
dec
add
xor
aad
or
xor
inc
inc
mov
xor
std
clc
and
retf
xor
enter
adc
cmp
pushf
shr
mov
adc
dec
adc
sbb
cs
pop
pusha
inc
xchg
sub
xchg
add
fmul
mov
call
pop
jecxz
clc
sbb
rcl
or
sbb
pushf
pushf
mov
mov
adc
std
inc
inc
jle
aaa
jo
enter
pop
les
dec
fs
(bad)
je
xchg
arpl
mov
inc
cmp
stos
adc
and
push
les
jmp
out
push
cwde
jbe
int3
cs
icebp
push
dec
and
dec
and
jl
pusha
xchg
mov
cmp
inc
js
fs
call
inc
and
cmps
adc
call
je
out
push
fadd
int3
enter
push
ret
sub
lods
in
les
mov
cmp
cmp
ror
mov
ins
jns
inc
mov
adc
in
push
mov
push
push
aam
adc
(bad)
je
fmul
or
push
xor
shl
jg
and
pushf
(bad)
movs
scas
or
mov
sar
xor
push
push
cmp
out
cld
lods
pop
fs
or
call
pushf
xor
push
imul
or
push
test
lods
add
cmps
pusha
into
aas
in
push
inc
test
ins
mov
gs
ins
pop
and
shr
sub
mov
and
loopne
push
je
ins
push
hlt
mov
iret
inc
or
pop
adc
loop
call
push
idiv
shl
sub
push
rcl
mov
shl
and
int
je
fsubr
push
pusha
mov
pop
repnz
in
xchg
mov
sar
in
push
retf
out
pushf
icebp
test
mov
add
jo
push
sbb
jo
sti
xor
pushf
retf
lods
xchg
cmp
ss
frstor
jnp
add
xchg
lods
push
push
inc
test
sbb
popa
fmul
fisub
mov
out
pop
adc
sub
lods
in
or
pusha
cld
rol
sbb
jl
and
pushf
aad
loopne
pusha
movs
repnz
and
cmp
jo
mov
hlt
ins
mov
or
out
or
sub
pusha
sub
xchg
mov
dec
cdq
mov
shr
push
int3
stc
push
cmps
mov
dec
lock
adc
xlat
push
lock
mov
push
lock
fsubr
int3
mov
sub
in
adc
(bad)
pop
mov
pop
jo
mov
loopne
pop
sbb
xchg
mov
cld
js
sbb
fs
sbb
cld
mov
cmc
jo
pop
push
mov
das
cdq
adc
sub
sub
dec
mov
add
mov
enter
and
int3
hlt
scas
aam
xchg
jno
adc
inc
mov
sbb
jb
out
fwait
in
out
in
dec
jp
sub
sub
or
jl
lea
aam
jge
add
push
cdq
mov
sub
pop
lock
sbb
mov
push
das
adc
mov
scas
imul
push
or
add
jo
cwde
mov
dec
xor
dec
or
mov
ror
nop
retf
popa
int3
retf
sub
lahf
loop
xchg
or
add
movs
xor
int3
xor
jl
lds
call
ds
icebp
xchg
leave
mov
xchg
je
sub
fdiv
jns
fs
ret
pushf
mov
scas
rcl
pushf
push
cmps
in
int3
xor
ins
mov
not
or
(bad)
repnz
mov
adc
mov
jns
dec
je
outs
add
add
dec
(bad)
mov
test
mov
sbb
fnstsw
xor
mov
loope
or
sub
or
push
and
mov
test
loop
jge
in
lods
fidiv
mov
xor
xor
aaa
sub
aad
jl
cld
sbb
inc
lock
add
dec
fcomp
mov
mov
pusha
push
test
dec
push
in
js
sub
ret
ret
shl
div
dec
pop
pop
mov
fcomp
das
xor
jns
ins
clc
(bad)
hlt
cld
cs
push
sbb
mov
push
ins
js
add
ins
hlt
stc
jmp
or
call
cmp
sub
lods
inc
or
push
mov
pop
outs
add
test
scas
push
mov
sub
fistp
das
movs
icebp
mov
ins
pusha
loop
int3
push
mov
pop
ja
pushf
jo
jnp
stc
dec
xor
and
rcr
mov
push
jge
mov
cmp
add
pusha
test
mov
sub
mov
cmps
cld
mov
xchg
repz
je
pop
pop
(bad)
sbb
loopne
or
pusha
outs
or
push
imul
jmp
fnstcw
inc
xchg
adc
sti
aam
sar
mov
outs
pop
pop
push
mov
rcl
push
mov
dec
les
movs
mov
dec
fdiv
fmul
aad
mov
mov
cld
jmp
cld
mov
sub
add
sub
adc
nop
rcr
mov
mov
jo
in
dec
fidivr
scas
adc
cmp
nop
les
mov
out
inc
mov
mov
sbb
sub
das
clc
and
dec
stc
loopne
xchg
outs
mov
loopne
push
in
dec
fld
test
xchg
push
in
inc
les
fld
dec
test
(bad)
in
ins
push
movs
and
add
sub
enter
xor
push
dec
push
mov
adc
jbe
mov
cmc
cld
stos
mov
cmps
lock
inc
xor
test
stos
pushf
in
lods
xor
mov
push
mov
js
enter
sbb
je
or
pop
mov
mov
inc
push
or
cmc
mov
stos
xchg
mov
clc
adc
or
out
in
nop
shr
inc
adc
fmul
aam
or
inc
xor
fadd
xchg
adc
enter
jno
mov
cmp
or
dec
(bad)
clc
jl
repnz
ds
sbb
shl
cmc
mov
clc
enter
mov
sbb
adc
hlt
cli
or
pop
push
inc
shr
je
or
rcr
test
clc
in
pop
rcr
add
(bad)
test
fs
repnz
pop
pusha
lahf
push
push
push
mov
adc
data16
stos
xor
xchg
sysenter
or
ror
sub
mov
push
xor
(bad)
cmp
cld
push
ret
adc
cwde
fldenv
sbb
fs
clc
mov
add
sahf
xchg
popa
pop
add
ins
aaa
shr
or
mov
fs
sub
(bad)
mov
movs
push
int3
sub
cmp
add
xor
hlt
ins
les
and
mov
mov
inc
ins
in
xor
fisttp
mov
jg
push
ins
push
retf
fnstsw
xor
xchg
(bad)
into
in
sahf
and
sub
adc
jmp
fdiv
cmp
xchg
(bad)
mov
(bad)
cmps
mov
mov
stc
mov
cmp
sti
pop
out
mov
cs
cmpxchg
ret
ror
mov
in
fadd
mov
cld
sbb
pushf
pop
stc
aam
stos
add
dec
and
dec
adc
loopne
cmp
cmp
inc
arpl
or
xchg
mov
test
pop
dec
and
loopne
cwde
dec
cld
out
inc
call
add
pusha
in
call
ins
mov
and
jmp
dec
cmp
cld
lock
inc
shl
cmp
dec
or
aaa
pop
jno
mov
mov
aam
out
fcmovnb
xchg
dec
test
aam
fs
cmp
sbb
les
pop
sar
movs
rcr
xor
pop
mov
and
sub
mov
fdivr
shr
aad
pop
sbb
pushf
mov
adc
sbb
add
test
push
into
xor
dec
aam
sbb
mov
(bad)
push
cmp
adc
cdq
mov
jbe
ins
jl
cmp
sbb
fsub
lods
arpl
inc
mov
ds
xchg
test
push
int3
sub
clc
push
jbe
inc
sbb
cld
test
jp
dec
jge
nop
in
mov
cmp
inc
lea
ins
in
cmp
push
cld
dec
hlt
adc
pop
aas
stc
xchg
jmp
jo
pop
push
imul
loopne
and
shl
cmp
jl
xchg
enter
fucomp
das
adc
and
test
add
and
test
or
lods
mov
xchg
les
push
aad
pop
(bad)
call
cs
les
sbb
add
div
mov
mov
mov
in
adc
dec
imul
push
cmps
sbb
cwde
mov
sbb
enter
cmp
cmp
xor
push
fs
clc
mov
js
loopne
xor
push
add
cmp
lock
or
ins
call
in
jl
inc
mov
test
in
in
fisub
dec
mov
and
xchg
loopne
mov
int
clc
rcr
mov
mov
push
xor
call
scas
test
fdivr
or
js
in
add
in
int3
push
adc
sub
(bad)
les
popf
sub
xchg
enter
sub
or
or
sahf
sbb
sbb
js
pusha
mov
rcr
clc
les
mov
xchg
xor
test
mov
data16
fmul
inc
in
xchg
cmps
call
mov
and
lods
(bad)
mov
or
xlat
inc
test
mov
out
push
inc
and
mov
into
shl
push
xchg
sahf
jl
xor
push
mov
imul
xor
aam
adc
mov
ss
js
lock
and
sahf
pop
push
adc
jns
les
fisubr
jne
cmp
(bad)
imul
cmp
cmp
movs
fs
jmp
xlat
xchg
jle
or
les
lods
mov
dec
cld
push
les
pop
loop
xor
clc
jbe
mov
pop
nop
mov
lods
(bad)
xchg
(bad)
in
es
fisub
lods
jle
push
fstp
push
mov
je
fsubr
push
idiv
clc
cmps
jb
xor
stos
lds
in
loope
(bad)
repnz
dec
jne
pushf
sbb
sahf
out
and
sub
inc
fsubr
mov
fcom
dec
add
mov
hlt
inc
push
or
pushf
in
out
rol
dec
(bad)
adc
jl
sbb
add
lds
pushf
mov
jb
popa
sub
lock
fcomp
cld
jns
inc
fisttp
aam
ror
(bad)
sub
(bad)
fcom
aam
mov
push
scas
pop
xor
push
enter
mov
imul
(bad)
std
xchg
push
in
test
test
enter
sbb
scas
pop
lods
mov
inc
cld
fs
push
pop
fdiv
cld
sub
xchg
mov
and
push
and
push
or
into
pop
in
pusha
fwait
ins
add
mov
dec
stos
mov
mov
xor
lock
adc
push
and
push
pop
rcr
xor
sub
pushf
push
push
mov
icebp
loopne
mov
out
js
rcl
movs
mov
lock
adc
cmp
aad
or
add
xchg
retf
pop
lds
mov
ins
add
gs
int3
stos
mov
inc
jl
loope
xchg
cwde
or
dec
ret
cld
in
mov
in
int3
inc
push
and
cmp
sub
aam
push
popf
and
pop
call
push
cmp
mov
lods
test
lods
jnp
push
test
int
xor
pop
clc
in
jmp
or
mov
lods
out
inc
ret
inc
xor
in
and
jnp
cwde
out
xor
mov
movs
add
mov
add
inc
clc
xor
xor
mov
loopne
or
mov
cmp
inc
jl
stc
adc
imul
cmp
xor
push
adc
(bad)
fld
int3
jnp
add
adc
in
inc
cmp
cld
stos
in
xchg
or
movs
push
cs
and
and
int
mov
in
push
mov
push
mov
mov
je
call
(bad)
xchg
into
mov
mov
dec
xor
out
xor
mov
rol
sub
cld
sub
jo
adc
out
lods
mov
push
int3
xchg
mov
test
xor
addr16
fadd
sbb
and
dec
adc
jecxz
xor
push
pusha
cli
test
aam
pop
jp
pop
add
mov
mov
xor
lea
mov
pop
loopne
sbb
xchg
lea
cmp
cld
clc
cmp
mov
loopne
call
inc
sub
jbe
ins
call
mov
adc
xor
sbb
lods
mov
add
push
in
fisubr
fisubr
xchg
repz
js
inc
int3
or
loope
push
xchg
sub
std
rcr
out
sbb
add
shl
and
dec
call
dec
cmp
and
or
jge
add
add
inc
std
inc
les
cmp
or
ins
(bad)
mov
fdivr
and
push
mov
lods
dec
and
pusha
ss
inc
mov
fs
lods
fisubr
sub
pusha
mov
push
or
push
not
test
jge
je
mov
and
cmp
movs
adc
dec
xor
aam
cld
add
neg
test
pop
pusha
sub
or
cmp
fmul
movs
xor
mov
push
jl
lods
test
adc
out
adc
pusha
dec
fsubr
mov
and
or
ins
rcr
adc
lock
mov
in
in
mov
test
and
sub
jp
push
inc
push
loopne
push
adc
inc
jmp
ja
arpl
lea
enter
adc
mov
cdq
xor
fistp
les
cld
stos
mov
in
fidivr
push
jno
js
neg
aam
sbb
inc
call
mov
gs
mov
js
mov
adc
sbb
jmp
dec
fs
loopne
push
movs
js
and
int
jno
lahf
jl
inc
call
aam
jl
bound
retf
fsubr
push
jo
fisubr
or
xlat
xchg
mov
out
mov
pop
xor
in
xchg
add
sbb
dec
loope
ja
scas
inc
in
jno
adc
or
pusha
cwde
js
sti
cmp
and
sub
ret
pusha
push
xchg
sub
pusha
rol
cwde
cld
arpl
push
add
pushf
clc
xchg
loopne
dec
daa
mov
ret
hlt
jb
ins
push
and
push
dec
sbb
stos
push
nop
jns
mov
cmp
lock
sbb
loopne
test
mov
jl
add
push
enter
mov
xchg
call
add
dec
imul
and
dec
fcomp
(bad)
loopne
sub
(bad)
mov
nop
sbb
push
push
jge
in
mov
xor
sub
shl
sub
xchg
jl
add
inc
std
sub
les
int
hlt
fstp
aam
sub
adc
push
je
shr
xor
call
lods
adc
pop
in
popa
push
add
mov
add
gs
mov
ror
(bad)
bnd
xor
sbb
(bad)
dec
int
cmp
std
ins
in
pop
dec
jbe
pushf
jp
cmp
movs
cmp
daa
test
pop
enter
push
clc
inc
dec
in
cmp
mov
sbb
movs
lods
sub
mov
jp
cdq
pushf
retf
enter
loope
out
dec
dec
inc
xlat
cs
jo
cmp
xor
xor
mov
mov
jbe
mov
bound
pushf
mov
sbb
mov
sbb
aad
xor
stc
sbb
clc
fdivr
jbe
pop
and
cwde
add
fcmovnu
nop
jno
clc
jecxz
pop
inc
or
les
test
inc
pushf
xlat
movs
sti
cmp
pop
nop
fmul
nop
(bad)
mov
mov
sbb
sbb
mov
xor
cmp
pushf
sbb
ins
data16
jp
in
rcr
test
lock
clc
pop
cwde
mov
sbb
jmp
and
repnz
les
adc
sub
mov
int3
inc
ror
xor
push
pop
les
jae
bound
int3
(bad)
icebp
scas
jns
and
add
out
mov
out
js
mov
mov
xor
push
push
xchg
xchg
cld
retf
in
cdq
test
mov
call
xchg
push
push
fnstenv
cli
lods
or
mov
clc
xor
inc
call
push
lods
fmul
xchg
and
push
push
(bad)
sbb
push
dec
lahf
je
int3
imul
xor
cmp
(bad)
fadd
add
call
les
dec
test
test
jne
pop
cmp
jno
clc
mov
cmp
and
cmp
(bad)
pusha
ins
enter
call
sbb
push
pusha
rcr
js
xchg
xchg
pop
ins
dec
cwde
pusha
int3
adc
out
jmp
xor
fmul
xor
aam
test
push
push
adc
jl
pop
adc
sbb
ins
dec
mov
mov
sbb
xchg
and
xchg
rol
adc
adc
dec
mov
cmp
enter
rol
int
out
lea
push
sbb
add
movs
mov
sub
inc
pop
in
push
test
hlt
test
push
les
icebp
cmp
fld
sub
in
dec
xor
mov
test
sub
in
mov
nop
sbb
std
mov
in
adc
pop
push
add
fiadd
jo
xlat
mov
test
dec
nop
push
sar
aaa
call
mov
push
gs
push
loopne
cmovle
add
add
js
inc
aas
ins
movs
cmp
popa
xchg
call
inc
popa
dec
mov
pushf
pop
mov
fsub
xor
dec
les
fadd
xor
mov
sar
rol
or
hlt
sub
repnz
leave
js
pushf
adc
mov
pop
jg
mov
cmp
js
fisub
int3
jnp
icebp
int
mov
fimul
add
ror
loope
or
sbb
lock
je
sbb
sub
sub
test
jbe
inc
sub
aam
adc
ror
lahf
mov
mov
sbb
inc
in
cmps
jl
pop
mov
cs
mov
xchg
mov
mov
or
cld
bound
inc
test
jns
test
(bad)
(bad)
mov
cmp
dec
mov
sbb
leave
sub
pop
in
jmp
push
test
xor
mov
push
sub
push
popa
test
or
pop
fs
je
sub
adc
mov
ins
adc
xchg
xor
mov
adc
aam
fcom
pop
xor
int3
sub
jo
js
nop
cmp
cmp
push
cmp
mov
clc
rcr
cmp
push
rcl
test
lock
or
mov
add
adc
lds
xchg
adc
pop
repnz
fadd
sub
aas
nop
pop
cwde
mov
push
jmp
push
sbb
add
hlt
call
xchg
jne
dec
aam
sbb
cmp
or
call
and
sbb
int3
into
xor
dec
addr16
pop
test
movs
adc
gs
mov
(bad)
lock
jns
enter
ror
aam
loopne
call
pop
shl
in
or
sub
mov
dec
xor
dec
xor
mov
add
pusha
mov
mov
pop
push
mov
pop
cmp
cld
call
dec
pusha
clc
mov
jne
pushf
or
js
idiv
fsub
call
xchg
pop
jbe
das
jo
dec
aaa
push
popf
sub
mov
test
pusha
ficom
nop
or
pop
xchg
dec
push
hlt
and
inc
les
movs
or
sbb
pop
push
inc
jmp
gs
pop
in
jo
movs
mov
jne
shl
int
shl
mov
mul
outs
xor
dec
mov
call
sub
inc
pop
mov
sub
mov
in
and
gs
lods
mov
cs
inc
int3
stos
cmps
mov
int3
jmp
lock
jle
loop
adc
fsub
sbb
mov
stc
lds
test
icebp
jle
ror
mov
dec
sub
add
in
dec
pushf
push
retf
mov
sbb
adc
cli
mov
in
dec
add
sbb
and
in
push
ror
jo
mov
mov
js
or
push
rol
mov
js
shl
mov
retf
dec
push
in
les
mov
ror
outs
add
das
shl
test
mov
int3
add
addr16
mov
mov
nop
mov
xchg
aam
cli
add
in
popf
cmp
xor
mov
out
mov
sbb
les
clc
mov
xor
ins
adc
sbb
mov
sub
fmul
adc
mov
(bad)
out
test
push
mov
adc
cmc
mov
cmp
jno
adc
test
cmp
add
pushf
scas
adc
inc
int
aaa
fadd
data16
adc
test
mov
sbb
repnz
rcl
mov
pop
sub
add
sub
adc
rcr
fdiv
addr16
push
sahf
js
and
ja
pusha
mov
or
fsub
lds
mov
cmps
rol
fdiv
cmp
sbb
dec
adc
sub
int3
adc
enter
ins
lods
mov
mov
add
sbb
lock
sar
rol
mov
inc
sar
je
fsub
test
fdiv
sbb
ja
(bad)
jmp
push
xlat
push
mov
stos
aam
sbb
xchg
out
aaa
mov
ins
test
cmp
sub
shr
xor
outs
sub
xchg
sbb
sub
test
movs
fwait
call
mov
ret
push
(bad)
fcomp
add
test
jo
lock
rol
fdiv
mov
xchg
adc
sbb
and
jae
sub
push
mov
imul
xchg
sub
cli
mov
dec
add
hlt
clc
or
mov
ds
(bad)
(bad)
pusha
in
mov
int
or
or
js
loopne
movs
(bad)
xor
sub
jo
cmp
mov
(bad)
xor
mov
sub
je
mov
lds
clc
jmp
push
sbb
mov
pop
xor
cmps
add
loop
pop
fs
retf
mov
or
jbe
aam
into
cwde
cmc
mov
retf
pop
pushf
sar
div
mov
or
gs
pop
int
sbb
repz
hlt
dec
ds
lods
mov
sbb
pop
inc
outs
mov
movs
push
inc
cmp
dec
fdivr
adc
cmp
add
pop
sbb
cmp
jo
mov
fadd
sbb
xchg
imul
in
xchg
data16
jo
dec
mov
in
and
pop
aad
cld
push
fs
movs
fldcw
out
and
ins
aaa
cwde
cmp
xor
sub
sar
test
or
sub
lods
mul
inc
or
test
imul
cld
xchg
imul
adc
add
loopne
pop
cmps
jno
lods
xchg
loope
call
push
retf
inc
call
pusha
xor
and
fcomp
dec
jo
enter
or
repz
push
inc
test
fucomp
cld
sbb
xor
add
sub
bnd
mov
inc
test
jo
aam
aam
leave
xor
push
sbb
dec
mov
sub
in
ins
fisubr
ins
jl
popa
mov
sbb
mov
cmp
mov
jmp
sub
rcl
pop
inc
sub
daa
push
aam
jl
in
mov
cmc
mov
push
adc
add
jecxz
in
es
mov
out
mov
and
test
xor
sbb
dec
xchg
aam
loopne
jbe
js
shl
xchg
hlt
xchg
pushf
test
mov
or
and
out
rol
in
adc
lds
in
add
shl
pop
or
pop
and
mov
dec
pop
mov
pop
outs
fs
cmp
jle
in
sub
repz
stos
cmps
jo
clc
adc
mov
sbb
add
sub
mov
call
(bad)
mov
mov
xor
push
adc
ss
mov
pop
movs
add
sub
ror
ins
and
or
mov
or
aam
call
xchg
je
loopne
(bad)
add
and
aam
cmp
(bad)
jecxz
cmp
sub
in
and
data16
shl
and
inc
push
dec
mov
xor
fidiv
xor
mov
in
popf
je
sbb
(bad)
cmp
pop
or
dec
stos
mov
cld
lods
inc
push
xchg
jnp
nop
xchg
dec
stc
rcr
js
shr
push
jmp
push
fs
fistp
sbb
and
add
adc
adc
sbb
lock
xor
inc
jne
outs
ror
mov
js
push
jb
ror
nop
mov
fdiv
and
jle
aam
in
mov
daa
xor
sti
adc
push
fcom
xor
mov
mov
cmp
push
mov
je
sub
jecxz
mov
adc
cld
dec
xor
(bad)
pop
ds
in
clc
jmp
shr
pop
loopne
cmp
clc
sub
aad
add
ficom
adc
nop
push
add
push
test
mov
mov
adc
loopne
scas
adc
xor
xor
mov
std
ror
push
test
scas
shl
and
movs
arpl
mov
dec
push
hlt
mov
mov
rcl
cdq
jl
and
in
test
ret
pop
lock
lock
mov
push
dec
rcr
push
inc
les
adc
ins
or
inc
fdivr
test
jo
push
rcl
leave
sub
sub
sub
cwde
in
mov
popf
cld
(bad)
inc
sbb
push
ins
clc
add
cmp
cwde
std
and
inc
loopne
pusha
(bad)
adc
test
dec
fst
xchg
sbb
cmp
jmp
cli
xchg
in
xchg
push
shl
loop
lea
mov
ins
sti
aam
and
daa
sub
cwde
(bad)
push
sub
ins
jbe
jo
mov
push
or
into
mov
lods
je
pusha
mov
dec
mov
adc
push
xor
clc
inc
mov
push
pop
pop
mov
adc
lock
nop
mov
pop
es
dec
or
jo
or
push
cli
dec
in
sub
xor
fs
mov
into
cs
or
cdq
hlt
lea
or
dec
test
ins
std
je
jo
dec
push
mov
hlt
pusha
int3
bound
mov
mov
data16
jmp
sub
push
mov
mov
mov
(bad)
and
call
movs
out
dec
pop
fsub
ss
aam
into
je
dec
fsubr
xchg
call
push
rol
mov
inc
pusha
scas
pop
adc
(bad)
shr
je
shl
ins
aas
fsubr
xchg
inc
fmul
or
pop
mov
or
cmp
outs
int3
fcomi
add
(bad)
hlt
push
stc
and
pop
mov
test
xor
cld
loopne
xor
sahf
mov
mov
dec
in
sub
and
test
cmp
sbb
add
add
or
shr
xor
push
dec
fldcw
shl
movs
mov
sbb
std
enter
jb
mov
or
pop
bound
inc
or
fs
cmp
push
mov
cld
ins
pop
loopne
xor
add
cmp
fcom
pop
(bad)
movs
jb
cdq
aaa
fbld
push
cld
mov
in
push
push
and
jbe
sbb
xor
fdiv
inc
fs
mov
or
dec
fadd
mov
test
adc
lods
adc
in
jmp
ins
add
fild
pop
outs
test
cmp
cdq
sub
xor
pushf
retf
test
pop
sbb
test
cmp
xor
adc
stos
jle
test
adc
nop
adc
imul
enter
fcom
xchg
mov
push
sbb
cmp
mov
scas
sub
ins
sar
inc
imul
push
mov
stos
fcom
cld
dec
cwde
and
pop
mov
pop
fsub
(bad)
xchg
in
xchg
or
(bad)
and
das
and
pop
xchg
test
adc
and
sbb
xor
pop
add
or
mov
out
fnsave
dec
mov
js
out
jmp
adc
lock
into
inc
push
xlat
fs
sub
stc
pusha
and
mov
pop
adc
mov
test
loopne
adc
push
inc
fnstenv
and
push
adc
cmp
push
lock
fadd
dec
cdq
push
add
cmp
sbb
sub
inc
or
pop
in
fnstcw
movs
inc
sub
add
dec
gs
mov
or
lods
les
push
fdivr
rcr
hlt
mov
(bad)
call
cmp
and
push
add
cmc
fadd
pop
mov
es
fsub
jp
dec
push
outs
lock
mov
or
pop
ins
fmul
mov
mov
sbb
or
and
mul
lds
jmp
int3
rcr
mov
xchg
ret
in
pop
cwde
xchg
data16
add
or
(bad)
sbb
mov
js
sub
and
adc
lods
mov
clc
fsubr
pop
out
outs
sbb
ret
jno
xor
std
popa
das
mov
mov
dec
or
or
sbb
jmp
push
test
dec
mov
ret
pushf
pushf
stc
adc
dec
cmp
std
inc
movs
jmp
sbb
lods
test
push
adc
mov
push
test
je
dec
lock
xchg
or
cmps
and
sub
add
cli
enter
enter
mov
mov
in
leave
push
rcr
fidiv
adc
aad
cmp
in
push
adc
mov
sahf
sub
test
adc
mov
fcom
int3
adc
mov
mov
and
mov
clc
cs
test
into
nop
adc
cli
inc
xchg
cmp
inc
dec
add
loopne
mov
and
pop
cmps
inc
cmps
push
adc
push
enter
mov
push
(bad)
loopne
dec
ss
adc
or
pop
or
test
imul
jge
les
in
xchg
mov
das
jno
inc
sbb
call
iret
loopne
mov
dec
shl
and
and
rcl
dec
pop
xor
pushf
imul
jbe
je
movs
mov
test
lods
dec
push
xchg
test
inc
add
mov
in
or
je
cmp
ds
mov
cld
ret
adc
inc
push
jbe
imul
pop
test
pop
mov
dec
stc
dec
inc
mov
sbb
sbb
les
xchg
les
adc
add
das
je
into
int3
leave
aaa
lock
loope
fadd
in
jmp
and
fs
hlt
pop
push
fimul
ror
mov
aad
push
push
(bad)
mov
je
pop
or
mov
mov
fcom
xchg
pop
mov
sub
inc
add
js
in
mov
lods
cmp
mov
out
out
xor
stc
push
and
into
add
and
push
fiadd
pop
dec
add
int3
pop
inc
add
pusha
mov
in
(bad)
mov
fs
retf
and
out
cmp
mov
ja
ins
sub
dec
cld
(bad)
sub
sbb
clc
cmp
jl
mov
jg
call
mov
fsub
fsubr
aam
movs
and
jmp
push
sbb
add
lock
pop
push
loopne
sub
fidivr
shr
je
inc
aam
pusha
pop
sub
jmp
(bad)
or
push
mov
mov
pop
clc
mov
sbb
ror
mov
xchg
cld
out
retf
and
dec
add
dec
xor
daa
pop
dec
stc
xor
push
cmp
outs
dec
movs
or
repnz
in
jle
nop
mov
sbb
fs
pop
in
xor
xchg
in
mov
and
neg
add
int3
outs
mov
cs
mov
lahf
mul
mov
and
fst
enter
call
cmp
mov
cld
rol
sbb
sbb
add
mov
call
sub
aam
or
jle
cwde
out
test
test
lock
adc
js
adc
int
xor
cld
inc
(bad)
mov
mov
sub
nop
test
pop
push
(bad)
or
daa
or
xor
sub
sub
outs
xchg
rol
inc
gs
pop
mov
xchg
push
push
mov
sbb
xor
shr
stos
inc
add
mov
push
add
fs
ins
in
inc
ret
and
dec
(bad)
cmp
push
outs
les
jge
add
mov
scas
sub
test
pusha
loopne
push
je
sub
loopne
mov
and
inc
pop
pop
xchg
test
loopne
adc
sbb
stos
in
xor
mov
mov
or
dec
cld
mov
mov
test
data16
fld
pop
in
in
sub
xor
adc
fs
sub
mov
in
mov
push
int3
or
add
lock
lods
pusha
aam
jl
not
(bad)
fdiv
in
in
push
out
adc
mov
sbb
enter
cmp
xchg
in
shr
sub
imul
mov
or
aam
xchg
push
cmps
sbb
leave
sub
bound
xor
hlt
fst
and
clc
pushf
adc
dec
movs
pop
dec
and
sar
push
repnz
mov
test
shr
dec
push
xchg
dec
jns
adc
xor
test
mov
or
xor
push
add
icebp
fadd
dec
retf
or
adc
out
push
xlat
cwde
jl
in
sbb
cmc
adc
sub
test
xor
pushf
in
loopne
stc
push
loopne
or
push
or
sbb
js
adc
jl
loopne
dec
out
je
ins
cmp
sub
and
lahf
pop
repnz
popf
mov
xor
mov
retf
inc
xor
or
mov
in
push
in
mov
push
add
sbb
std
aam
cmp
sub
add
pop
loopne
test
lock
xor
add
or
fistp
cmp
js
inc
test
stos
sbb
inc
xor
dec
imul
ins
mov
add
in
fmul
pop
adc
and
xchg
das
mov
cmp
xchg
pop
mov
xlat
inc
jge
mov
dec
ficom
js
pop
xor
in
dec
mov
movs
mov
lds
push
clc
pop
shl
cmp
xor
je
fsubr
pusha
jae
js
pusha
xor
xor
xor
test
test
push
ins
into
push
pop
cld
add
push
sahf
pop
div
jmp
adc
mov
sbb
(bad)
clc
inc
and
dec
data16
imul
ins
sub
or
adc
or
push
out
pop
add
mov
cmp
fmul
sti
xor
fdivr
add
cmp
rol
mov
add
shr
les
in
mov
out
or
xchg
and
test
xchg
jle
ret
mov
xchg
cwde
mov
call
jo
fimul
sahf
push
movs
shl
aam
sar
add
fdiv
(bad)
fst
push
(bad)
cld
mov
mov
(bad)
(bad)
cmp
aam
dec
div
cmp
bts
lds
mov
mov
int3
cmp
dec
cld
push
adc
sbb
pusha
std
clc
retf
cmp
pop
push
mov
add
jne
pop
or
and
inc
adc
mov
les
ins
sbb
js
jge
mov
jmp
test
or
mov
sbb
and
lods
xor
xchg
(bad)
mov
movs
pop
aam
dec
cld
cld
sbb
xor
sub
dec
lock
sbb
lods
mov
js
dec
jge
fs
test
out
cwde
fadd
mov
adc
lock
inc
or
loop
nop
mov
or
cmp
lock
ins
mov
outs
fcom
mov
dec
fcmovb
xchg
popf
icebp
(bad)
cli
cld
jp
shl
(bad)
in
in
jmp
aas
mov
aam
jmp
push
outs
adc
and
dec
cmp
sub
jno
movs
arpl
js
jle
bound
mov
enter
cmps
mov
add
mov
out
dec
pop
adc
mov
xchg
into
sub
or
ja
scas
rcr
lds
dec
daa
push
mov
cs
cmp
ja
inc
push
or
call
in
fcom
mov
xor
sub
lods
fld
jnp
mov
fisubr
mov
cmp
je
adc
(bad)
pop
hlt
loop
cli
or
sub
adc
and
gs
out
int
in
jmp
sub
dec
pop
pop
and
pop
in
and
clc
adc
test
add
inc
fsubr
mov
pop
xlat
mov
cli
mov
lods
mov
je
xor
mov
pop
xor
pop
jecxz
pop
ins
xchg
inc
test
mov
sub
hlt
jno
dec
xchg
mov
(bad)
lods
push
mov
ins
sub
sbb
push
mov
cld
hlt
fcomp
sbb
dec
push
adc
sbb
repnz
mov
fs
push
cld
and
(bad)
jo
fcom
sbb
add
mov
jg
je
jmp
icebp
jl
cld
sar
sbb
les
mov
out
lock
or
aam
mov
das
shl
pushf
cwde
movs
loopne
and
std
sub
call
dec
jl
mov
pushf
iret
in
xchg
in
mov
stos
xlat
inc
pop
je
pop
mov
add
and
dec
in
push
jb
cmp
xor
push
or
add
neg
scas
mov
mov
iret
push
push
jo
pop
les
mov
out
je
xor
mov
leave
or
dec
push
lods
loopne
test
mov
and
in
push
fldenv
test
push
xchg
mov
pop
push
shl
jo
xchg
loop
in
or
sub
jmp
je
jp
xchg
popa
dec
imul
adc
and
cwde
loope
fwait
sbb
in
bound
movs
sbb
fld
test
mov
inc
add
pop
inc
lods
cld
(bad)
les
dec
jl
inc
mov
add
or
fadd
dec
push
lea
cwde
pop
mov
repnz
clc
or
mov
movs
inc
push
cli
push
xor
cmp
ins
test
rol
sbb
xor
dec
lods
(bad)
inc
fdiv
ins
cwde
sar
xor
mov
shl
mov
cmc
mov
lock
cwde
sub
add
mov
inc
adc
add
jne
aam
push
lock
ret
and
dec
push
outs
mov
cmp
lea
cld
lock
adc
mov
in
call
push
repnz
mov
pop
fsub
add
xchg
jno
mov
sub
pop
pop
aam
jl
(bad)
push
mov
hlt
movs
fsub
adc
cmp
push
xchg
nop
cwde
sbb
dec
jecxz
xor
sub
call
cmp
imul
(bad)
push
rol
dec
(bad)
mov
mov
cmp
inc
inc
cbw
or
test
ins
ins
add
outs
mov
lds
and
mov
pushf
movs
fistp
mov
and
stc
xlat
jmp
mov
pop
les
push
fs
fiadd
call
loopne
mov
xchg
out
sub
shr
mov
sub
pop
test
pop
sub
int
pop
dec
into
xchg
jg
loopne
(bad)
ins
mov
cwde
jge
in
ins
shl
cmp
pushf
sar
push
js
mul
pop
int3
movs
sbb
into
mov
adc
js
push
and
fs
xor
lahf
pusha
pop
fdiv
push
je
or
test
fldcw
in
je
cmp
adc
pusha
loopne
push
ss
push
jo
add
call
xor
xor
jl
xor
push
or
and
mov
int3
stc
and
jle
xchg
xchg
sub
push
in
movs
mov
mov
jle
cmp
mov
sbb
hlt
icebp
ins
cwde
je
pop
dec
pop
shr
in
add
dec
(bad)
shr
pushf
aam
xlat
pop
pop
add
inc
test
fld
sbb
test
add
dec
in
xor
je
es
call
adc
pusha
dec
lahf
movs
fs
call
xlat
mov
fs
mov
je
ins
sti
vhaddpd
xchg
inc
jl
xchg
mov
jecxz
pop
xor
clc
pop
lods
lock
pusha
or
sbb
sub
test
push
mov
les
movs
or
shl
sub
test
inc
ds
in
pop
adc
loop
push
push
push
jl
add
fs
dec
cmp
inc
push
jo
mov
movs
or
hlt
sub
jl
stos
or
xor
rcl
mov
test
push
jo
dec
fs
in
sbb
pusha
inc
out
jl
or
enter
fmul
adc
mov
fnstenv
push
outs
lods
xor
aam
jle
and
inc
cmp
cmp
sub
out
rol
les
in
cdq
mov
in
loop
in
pop
pop
cmp
rol
push
dec
jbe
(bad)
in
xchg
(bad)
(bad)
imul
lock
hlt
mov
call
dec
(bad)
rcr
or
xor
ficom
mov
dec
pushf
sub
out
clc
lea
(bad)
pop
gs
clc
imul
mov
shr
mov
ret
mov
sub
and
int
in
(bad)
aam
fmul
jecxz
adc
jp
pushf
aas
aam
xor
iret
pusha
and
and
or
call
out
mov
dec
inc
push
push
pop
nop
loopne
in
add
or
sub
jle
shl
jl
and
pop
in
xor
mov
nop
pop
lock
pushf
push
adc
(bad)
jl
or
ss
fs
cmp
mov
lods
fimul
adc
fmul
nop
xchg
cmp
and
fadd
mov
adc
mov
jl
push
and
retf
mov
push
bound
sub
ins
loopne
sub
ss
test
fmul
cmp
movs
int
adc
dec
loopne
xor
dec
mov
dec
in
or
sbb
sub
dec
xchg
pop
cmp
adc
dec
mov
outs
cmp
xor
ins
pop
hlt
jo
stos
enter
adc
sub
nop
aam
mov
lods
jmp
xor
cwde
fsubr
jle
hlt
sar
push
mov
pop
mov
movs
push
pushf
bound
sbb
or
or
mov
xchg
sub
inc
mov
in
aam
pushf
xor
mov
mov
mov
sbb
sbb
xchg
fidivr
cmps
xor
ja
mov
clc
(bad)
jo
dec
jle
lea
test
stos
and
imul
ret
and
mov
adc
push
push
icebp
test
std
add
mov
or
arpl
xlat
mov
js
fmul
cld
push
int
jmp
xchg
mov
adc
cmp
adc
cs
loopne
jmp
ss
mov
addr16
fdivr
sbb
pop
add
stos
movs
es
sbb
sub
jns
shl
and
jo
test
dec
test
xor
jno
inc
pusha
enter
and
call
je
mov
pop
lods
and
test
jo
loopne
(bad)
cmp
jg
in
cdq
cld
loopne
call
add
pop
mov
mov
mov
add
das
dec
sbb
mov
call
pop
adc
mov
test
mov
cwde
xchg
cmp
push
lods
sahf
mov
mov
cwde
aam
cmp
adc
repz
in
popf
fs
inc
aad
lahf
fmul
cmc
je
shl
add
(bad)
pop
data16
inc
sub
cdq
sub
hlt
mov
and
int3
test
mov
dec
aam
pop
mov
dec
fcomip
stos
or
loopne
jo
xor
mov
loope
enter
mov
lods
shl
clc
pop
sbb
sub
dec
or
loopne
or
outs
adc
cwde
cmc
ds
loopne
mov
push
xchg
or
les
out
push
cmp
pop
jae
clc
cmps
shl
sbb
outs
or
les
sbb
aad
mov
mov
inc
mov
cmp
popa
pusha
dec
mov
out
sub
push
push
cld
add
push
cmp
xchg
and
pop
add
inc
enter
xchg
popa
mov
jl
lock
push
cmp
cmp
sub
data16
sahf
hlt
sub
xchg
and
sahf
inc
jae
cld
adc
sbb
push
cs
arpl
push
shl
ins
or
icebp
and
xchg
jbe
inc
lods
xchg
fdiv
push
add
in
fs
enter
mov
sbb
int3
clc
pushf
retf
das
push
(bad)
popf
cwde
push
fsubr
lock
jo
clc
jl
fs
sahf
fidiv
out
stos
fs
inc
inc
dec
pushf
add
jo
dec
push
jmp
in
stos
mov
loop
int3
pop
pop
rcr
mov
pushf
call
xor
pop
dec
dec
adc
fst
dec
js
mov
mov
push
mov
adc
mov
mov
int3
repz
jb
nop
push
mov
mov
or
inc
lods
jg
push
dec
repnz
dec
fsub
mov
cmp
and
fs
(bad)
push
xchg
push
or
js
mov
(bad)
call
gs
and
sub
lods
jne
leave
cld
retf
inc
mov
fs
mov
and
test
call
jle
mov
jl
cwde
push
js
jae
int3
push
cli
call
pop
add
ins
add
adc
movs
jb
in
cmp
dec
movs
outs
add
mov
lahf
mov
mov
sbb
mov
cwde
push
xor
fnsetpm(287
aad
pop
dec
and
push
nop
sub
adc
(bad)
mov
jns
cs
std
std
test
xchg
add
mov
xchg
pop
je
mov
loope
sub
pop
das
mov
in
ins
(bad)
je
pushf
adc
push
fsub
shl
es
xchg
xor
push
call
fld
fsub
or
aam
sbb
inc
repnz
mov
movs
cmps
fucomip
jo
sbb
rol
cld
adc
pushf
enter
pop
cmp
sub
fdiv
mov
add
jl
rcr
jl
movs
push
inc
fistp
mov
inc
mov
movs
scas
lock
lock
inc
cs
cmp
std
mov
cmp
je
sub
(bad)
fdivr
mov
cmp
mov
mov
mov
xor
add
add
out
jo
xchg
fsub
dec
or
push
adc
add
(bad)
cmp
ror
pop
push
dec
inc
cwde
outs
dec
adc
push
mov
sbb
push
(bad)
mov
in
mov
adc
sub
jno
enter
jmp
dec
push
xor
hlt
test
cmps
int3
mov
sub
cmps
out
pop
xor
sbb
sbb
stc
jp
push
cdq
dec
xor
adc
je
cld
fisub
cmp
cmps
xchg
gs
imul
add
outs
inc
popf
frndint
mov
in
jge
add
pop
in
loop
test
sub
int3
sbb
out
or
jp
jno
fcom
push
in
mov
jle
shr
push
int3
mov
lods
jns
inc
cwde
dec
leave
adc
cwde
and
(bad)
or
nop
cli
sbb
shr
test
jb
clc
mov
push
mov
pop
inc
les
cmp
pop
ror
ficomp
sub
add
and
xchg
xor
cmp
mov
cmp
dec
clc
mov
cmp
test
jmp
les
mov
pop
inc
test
dec
cmp
and
in
pop
mov
mov
add
cmp
pop
and
push
cld
mov
pusha
mov
and
jo
xor
sub
push
mov
xor
shl
loopne
repnz
cmp
jg
dec
test
fxch
(bad)
cli
retf
lock
loope
mov
jb
sbb
movs
jno
cmp
push
dec
mov
add
cmp
or
lahf
dec
cmc
mov
js
sub
pop
mov
out
leave
(bad)
js
(bad)
push
sar
fidiv
mov
inc
or
call
add
mov
out
adc
je
dec
test
sub
aad
lock
mov
imul
dec
xor
and
jmp
cmp
lods
loop
mov
int3
daa
mov
popf
adc
aam
push
ror
mov
and
dec
fidiv
mov
shr
cwde
movs
mov
fcom
mov
ror
in
or
jne
jo
sbb
sub
cmp
hlt
push
test
mov
pop
jno
mov
jne
ror
fs
repnz
pop
cld
inc
test
into
mov
push
xor
les
add
jbe
pop
xor
jl
push
adc
cmp
imul
xchg
int
inc
sbb
ins
xchg
mov
push
mov
adc
das
mov
fs
and
js
cmp
mov
lock
aam
jge
and
test
retf
xor
call
fdiv
lods
jmp
repnz
js
pop
dec
add
ins
add
sub
push
into
in
leave
fdiv
dec
xor
hlt
push
adc
mov
in
mov
nop
xchg
mov
clc
aaa
xchg
push
dec
jge
and
push
pop
data16
inc
add
lods
stc
jo
into
enter
enter
imul
retf
cmp
xor
and
(bad)
pusha
xchg
xchg
push
mov
lods
xchg
in
xor
xchg
mov
test
leave
xor
into
mov
pushf
adc
jb
clc
xchg
loopne
loopne
aam
hlt
hlt
imul
mov
clc
cdq
popa
sub
pop
ror
inc
in
int3
jns
inc
in
mov
arpl
(bad)
in
call
push
cld
cmp
test
rol
cmp
nop
inc
pop
jle
pusha
imul
add
int3
div
cmp
adc
inc
and
dec
adc
icebp
jo
mov
daa
or
cs
cs
and
and
dec
xchg
aam
test
jbe
jbe
shl
cld
or
dec
(bad)
(bad)
test
aaa
clc
adc
jp
cmps
push
int3
add
ss
lods
xor
in
sbb
push
or
add
pusha
sub
xor
inc
lds
mov
js
cs
pop
icebp
mov
sbb
rcr
cmp
mov
dec
shr
in
or
cmp
loop
into
fmul
or
or
pop
popa
cmp
mov
sbb
pop
std
adc
cmp
shl
test
js
inc
test
mov
retf
clc
int3
in
je
call
mov
xor
add
mov
loopne
and
or
pop
mov
loopne
cld
fsub
int3
retf
xchg
fadd
dec
int3
dec
and
fdivr
mov
lock
and
add
aam
aad
fdiv
sbb
sti
int3
shl
add
ss
sbb
jnp
data16
sahf
xor
xor
xchg
push
cmp
in
call
push
sbb
mov
pushf
ss
and
pop
and
pop
fwait
or
mov
cmp
and
push
lods
fcmovne
mov
lods
arpl
pop
je
ins
cwde
push
test
lods
xor
cmp
repz
fs
cmp
and
not
pop
cmp
movs
pop
repnz
mov
cwde
(bad)
js
sbb
fsubr
mov
dec
inc
stos
enter
(bad)
hlt
out
imul
xchg
shl
call
adc
cmp
fwait
xchg
mov
in
mov
xchg
jl
in
dec
xlat
aam
sbb
nop
pusha
movs
nop
adc
xchg
js
adc
call
jnp
jmp
jl
or
rol
pop
cwde
pop
mov
pop
clc
fistp
or
fs
nop
add
fdivr
rcr
retf
cld
adc
pop
aad
mov
mov
or
xor
(bad)
or
mov
pusha
add
fdivr
stos
and
popa
push
test
cmp
mov
push
add
dec
jecxz
fstp
jns
loopne
fcomp
out
movs
add
outs
mov
sub
test
jbe
lock
rcl
add
dec
mov
add
aam
sub
dec
add
sub
out
sar
cwde
out
rcl
(bad)
lods
out
inc
fdiv
fadd
mov
pushf
ret
pusha
rcr
mov
dec
lock
sub
xor
out
imul
cmp
mov
xchg
and
fnstcw
out
mov
in
pushf
adc
aas
mov
xor
adc
mov
movs
and
nop
add
and
sub
mov
adc
lock
fdiv
sar
aam
je
dec
pusha
sbb
sub
jle
mov
push
inc
mov
sub
xlat
fadd
push
adc
push
inc
adc
mov
hlt
loopne
push
test
add
ficomp
lea
fs
xchg
pusha
ds
je
mov
daa
dec
or
xor
fcomp
inc
call
hlt
(bad)
pop
mov
mov
or
push
pop
dec
not
enter
out
xor
cwde
push
add
out
adc
sets
sub
adc
sbb
movs
adc
sbb
gs
mov
add
dec
push
xor
lods
sbb
adc
stos
jae
inc
mov
cmps
mov
cli
test
mov
mov
icebp
loopne
movs
cld
pop
adc
outs
in
xchg
nop
cmp
call
xchg
bound
adc
out
(bad)
xor
jae
mov
sbb
mov
(bad)
shr
push
xchg
je
es
and
rcr
inc
add
lds
daa
xchg
dec
fwait
je
mov
add
jl
xlat
sar
adc
movs
sub
add
xor
popf
dec
pop
lock
ror
bound
nop
xor
dec
call
mov
popa
xor
lods
pop
cmp
and
pushf
fcmovnb
mov
push
js
cmp
mov
in
ins
push
fnstsw
mov
or
sub
imul
mov
ins
xchg
les
push
xchg
or
or
mov
mov
call
adc
pushf
jmp
mov
fnstcw
sbb
in
sbb
js
shl
add
pop
and
and
test
adc
push
jno
sub
rcr
mov
pusha
out
les
mov
pop
call
mov
movs
push
push
mov
pop
sbb
mov
jl
dec
push
inc
adc
(bad)
mov
mov
(bad)
mov
xchg
ror
hlt
aaa
mov
mov
enter
pusha
dec
int3
mov
stos
inc
cmp
adc
mov
fdivr
fs
sbb
add
xor
and
sar
(bad)
pop
arpl
ins
aam
xor
into
or
aam
pop
dec
hlt
mov
sub
add
add
fdivr
add
ins
addr16
clc
enter
fdiv
mov
mov
out
or
ds
jnp
stc
ficomp
int3
adc
xor
test
mov
js
in
lods
shl
xor
cmp
loopne
dec
in
int3
sbb
fs
mov
gs
sbb
and
jge
mov
mov
movs
mov
in
adc
add
add
jmp
lds
add
cmp
rcr
lea
les
inc
add
mov
fmul
jnp
adc
icebp
xor
xchg
jp
loope
adc
inc
aad
jg
adc
rol
scas
call
inc
hlt
cwde
leave
clc
ss
ins
mov
sub
and
ins
sub
sub
adc
sub
lock
inc
loopne
and
mov
cmp
xor
fldcw
mov
push
ins
or
or
mov
out
or
aam
pushf
arpl
sub
ret
sub
pusha
mov
dec
adc
aad
or
sbb
cdq
jo
mov
mov
push
fs
(bad)
mov
loopne
push
aam
mov
hlt
daa
hlt
add
xchg
ret
and
pop
enter
or
mov
sbb
xchg
adc
fcomp
rol
enter
sub
mov
fcom
in
push
sub
or
dec
pop
ret
test
adc
ror
mov
test
jb
addr16
or
xchg
jo
push
and
(bad)
call
xor
mov
or
std
push
xor
push
das
and
sbb
xchg
nop
cmp
pop
mov
dec
fnsave
stos
push
mov
mov
mov
mov
jge
call
xchg
xor
xor
out
or
and
test
and
daa
test
sbb
sub
add
or
adc
mov
adc
dec
push
adc
xchg
jmp
std
bound
or
and
inc
popa
sbb
shl
pop
dec
inc
mov
mov
sbb
push
cdq
adc
inc
les
ror
sub
sbb
idiv
fs
sub
xchg
fstp
nop
pop
mov
test
dec
mov
mov
stos
cmp
mov
mov
cmp
mov
int3
and
xchg
aam
movs
mov
cmp
lds
mov
cwde
call
das
movs
add
or
enter
xchg
mov
xchg
dec
in
dec
(bad)
nop
repz
enter
xchg
adc
std
pop
out
or
or
xor
test
in
call
mov
xor
cli
and
push
mov
push
fs
fsubr
nop
test
xchg
adc
fdiv
and
add
test
adc
pop
dec
and
js
push
lods
out
les
nop
inc
pop
mov
pop
inc
push
clc
ins
dec
push
es
push
mov
leave
push
pushf
(bad)
out
xchg
inc
adc
cmp
push
adc
js
lock
out
lock
js
test
int3
gs
mov
std
sub
jo
int3
mov
mov
cmp
outs
mov
fcom
xor
push
call
add
adc
sub
aam
int
je
lods
call
push
xor
shl
sbb
and
add
xchg
lock
popf
mov
mov
stos
aad
jl
push
push
fcomp
mov
xor
and
adc
push
mov
xchg
lds
enter
and
sbb
sub
xor
sbb
cwde
movs
pop
pop
push
mov
cmp
xor
sbb
div
fadd
add
rcr
push
sub
xchg
data16
(bad)
in
mov
and
test
xor
js
lds
adc
pop
sub
xor
fstp
mov
cmps
mov
or
xchg
cwde
sbb
push
call
pop
sar
jmp
aam
mov
(bad)
pop
retf
inc
push
mov
pop
or
paddsb
je
in
test
lock
and
mov
and
sbb
gs
mov
in
inc
(bad)
push
sub
add
fisub
out
dec
xchg
mov
fmul
fdivp
push
test
push
jl
and
or
jo
sbb
movs
mov
fmul
pushf
mov
push
jbe
shl
(bad)
dec
or
rol
or
hlt
sub
pop
sub
xor
dec
retf
push
adc
mov
mov
mov
je
push
stc
cmc
stos
mov
push
adc
mov
movs
ror
lea
fcmovnu
aam
(bad)
sahf
fs
lods
pop
push
and
add
sub
mov
mov
hlt
add
and
inc
add
aam
or
and
mov
add
into
adc
mov
adc
inc
fsub
cmp
jmp
add
lds
test
sub
push
aad
jo
jno
(bad)
push
(bad)
ins
jbe
inc
enter
idiv
dec
fdivp
test
cwde
sbb
jl
mov
test
pusha
or
push
call
aas
ret
je
fcomp
(bad)
test
ffree
jnp
fs
jl
pop
mov
test
dec
cmps
ror
aam
jo
jecxz
and
push
pop
cld
xchg
aam
scas
pop
ins
adc
add
dec
mov
push
gs
mov
rcl
mov
push
or
test
mov
pop
pusha
mov
cmps
mov
sbb
aam
sti
sbb
movs
or
adc
pop
fsub
push
inc
mov
les
mov
push
mov
xchg
push
jl
arpl
mov
enter
jle
and
push
mov
xor
mov
mov
adc
jne
sbb
test
hlt
pusha
cmp
cwde
inc
cld
imul
loopne
pushf
and
lods
fist
mov
xor
cmps
jns
xchg
pushf
sbb
js
stc
and
mov
cmp
ror
adc
enter
xor
xor
outs
sbb
js
es
jg
fs
or
je
popf
mov
fs
xchg
dec
test
je
sub
in
aaa
jmp
aam
pop
pop
mov
jp
sub
out
push
and
cmps
pop
cld
and
and
arpl
mov
sub
xor
mov
or
jecxz
call
push
hlt
jl
mov
sbb
hlt
add
or
shl
test
enter
cmp
and
cmc
(bad)
in
test
lock
mov
or
pop
movs
xchg
pop
sbb
dec
jno
sub
adc
sub
fsubr
push
(bad)
and
mov
mov
pop
fadd
js
shl
adc
cld
mov
nop
test
jl
cmp
cmp
adc
lods
sbb
xor
add
cmp
lock
pop
sub
lock
lahf
and
adc
adc
clc
add
push
loopne
cmp
sbb
pusha
xchg
mov
call
cs
mov
fsub
jo
in
adc
dec
xchg
cmp
and
test
loopne
js
clc
js
mov
enter
xor
dec
pop
(bad)
enter
(bad)
ret
hlt
cs
xchg
stc
les
add
and
fiadd
mov
sbb
xor
sbb
hlt
jno
cmp
ret
je
mov
aaa
xchg
imul
outs
clc
cli
xor
in
fisubr
xchg
xor
or
add
stos
rol
pushf
ss
je
mov
push
aas
or
paddsb
les
inc
or
mov
hlt
mov
mov
xor
xchg
hlt
xchg
mov
mov
mov
test
test
mov
xor
movs
jne
sub
jo
sbb
and
hlt
mov
mov
es
mov
hlt
mov
sbb
rol
in
pushf
int3
mov
pop
out
xor
mov
cmps
cld
mov
pop
and
add
outs
cld
clc
or
and
mov
test
jl
mov
lea
(bad)
mov
repz
aaa
loopne
shl
leave
push
xor
js
(bad)
enter
leave
cld
sub
cmp
and
xchg
test
lds
dec
push
test
popa
sbb
lods
shl
cmps
lahf
cwde
out
jp
pop
sbb
leave
rcl
pop
into
loopne
sub
fsubr
mov
movs
lods
pop
xor
dec
test
mov
jns
mov
loopne
mov
popf
ins
shl
xor
mov
mov
gs
mov
pop
xor
call
aad
retf
fsub
mov
mov
(bad)
(bad)
lock
enter
sbb
aas
ins
pusha
aam
cmp
inc
jns
fdiv
rcr
mov
call
jmp
push
or
mov
aas
jl
cmp
adc
fs
movs
adc
add
fild
mov
and
retf
in
test
repz
fdivr
inc
dec
pusha
leave
jl
mov
pop
cmp
xor
or
cs
jae
mov
and
pushf
cwde
mov
dec
test
(bad)
sbb
push
jne
fidiv
xchg
dec
xchg
sub
add
fmul
ds
int3
movs
cmp
out
nop
pop
and
cs
aaa
inc
xor
cwde
mov
and
in
push
or
pop
xor
clc
je
test
cmp
dec
inc
or
lds
xor
mov
xchg
and
add
sar
pusha
dec
mov
dec
fcmovbe
sub
sysenter
push
pop
fxch
and
test
sbb
mov
sbb
enter
sbb
sbb
hlt
cmp
sub
adc
pop
sub
xor
js
mov
dec
js
in
mov
push
push
enter
mov
mov
in
test
push
inc
mov
add
sbb
aaa
and
pop
nop
sti
(bad)
clc
push
push
jge
ins
or
sti
or
jg
xchg
pusha
pop
mov
inc
sbb
test
or
dec
fdivr
add
pop
push
cmp
(bad)
fadd
sub
loopne
enter
fcom
jge
and
dec
sbb
rcl
xor
xchg
call
fldenv
in
pop
aam
cmp
cmp
push
sbb
lock
(bad)
xor
mov
or
hlt
mov
test
jno
jo
ret
sub
es
mov
imul
add
pushf
gs
fbld
mov
bound
push
mov
sub
test
in
sub
ins
rcr
hlt
lds
mov
hlt
sub
ins
mov
cmp
sbb
hlt
aad
mov
repnz
pop
mov
inc
lods
xchg
add
in
jmp
xor
clc
push
dec
push
in
lods
inc
les
lods
ret
add
movs
call
pop
pop
test
jge
fs
fadd
and
sub
les
aam
(bad)
jle
mov
mov
and
pusha
cs
xchg
push
jl
inc
pop
fcomp
inc
adc
sbb
push
pushf
or
cmp
pop
rol
lods
arpl
push
mov
mov
jmp
jo
lock
cmp
cwde
push
cmp
mov
add
inc
jl
or
or
xchg
mov
sbb
mov
xor
rol
fnstenv
or
inc
pushf
leave
mov
lock
pushf
sub
sub
push
mov
add
es
jno
hlt
adc
lods
int3
cmps
loope
mov
mov
cmp
jae
fs
or
adc
ins
stos
cli
lock
call
mov
and
into
push
cmp
loopne
loop
iret
pop
(bad)
and
push
das
mov
inc
adc
imul
gs
shr
jl
in
or
pushf
mov
test
dec
loopne
(bad)
or
mov
lods
mov
adc
mov
add
cwde
xchg
cld
ins
inc
and
ins
mov
cmp
sub
aam
jg
add
rcl
sbb
xchg
or
out
push
jmp
xor
cmp
lea
jp
adc
and
pop
and
stc
(bad)
int
or
cwde
dec
adc
fcom
ret
add
mov
repnz
push
push
dec
enter
into
pushf
aaa
push
(bad)
ret
mov
ficom
test
repz
movs
jne
fcom
adc
mov
dec
leave
inc
xchg
ins
sysenter
push
in
or
in
or
movs
enter
mov
cwde
xor
cmp
std
repz
dec
ins
jns
adc
push
jl
jp
push
xor
xor
mov
pop
or
push
popa
adc
inc
les
pop
inc
int3
fist
adc
mov
mov
fdiv
loopne
sbb
dec
(bad)
mov
rcl
lods
push
sahf
sar
xor
add
mov
popf
push
mov
sub
or
mov
adc
cmp
mov
retf
in
xor
sbb
(bad)
retf
dec
sbb
sbb
add
loopne
ror
adc
cwde
popf
inc
cld
bound
push
jns
jbe
int3
fadd
sbb
dec
mov
mov
loope
push
fsub
in
popa
mov
pop
push
jmp
mov
das
lock
pop
push
mov
sbb
ror
mov
mov
xor
jg
shr
push
mov
int3
cmps
xchg
mov
test
jae
sub
xchg
aam
xor
pop
add
cmp
mov
pop
ins
(bad)
lock
xchg
dec
or
(bad)
sub
mov
jo
push
push
out
cmp
call
pop
movs
and
mov
mov
jno
push
nop
mov
ins
ins
mul
ins
or
jmp
jo
lock
and
pop
loopne
dec
inc
ss
mov
in
aad
pop
jne
add
add
jecxz
rcl
stos
pop
pusha
push
mov
jg
mov
lods
xchg
cwde
xor
jo
pop
scas
pusha
mov
loopne
enter
fcom
jl
in
mov
sub
repz
int3
not
ja
mov
pop
cmp
in
cmp
fsub
aam
movs
aam
in
mov
push
in
pusha
in
inc
cmp
test
cmp
push
loopne
sub
ret
sbb
add
call
push
inc
std
add
xor
test
test
shl
lods
hlt
fsubr
in
mov
add
push
or
sbb
sbb
jo
int3
ds
mov
mov
add
pop
inc
xchg
jo
scas
test
dec
scas
add
ins
dec
lock
mov
ror
add
sub
les
test
inc
sub
xchg
out
cmp
inc
push
dec
shl
arpl
push
(bad)
mov
adc
fwait
dec
stos
mov
lea
cld
and
push
adc
jl
xchg
xor
dec
jmp
in
pop
cld
lods
rol
dec
cmp
sbb
pushf
mov
js
sar
loopne
adc
cld
test
mov
xlat
mov
inc
xor
push
call
mov
xor
in
je
jl
or
sub
mov
sbb
out
inc
pop
rol
aaa
hlt
add
(bad)
lock
aam
nop
or
xchg
loopne
xor
popa
inc
pusha
hlt
cmp
int
dec
les
mov
jl
in
cmc
rol
adc
and
cdq
jo
or
xor
xor
xor
inc
dec
sbb
sbb
lods
rcl
pop
inc
xor
fldcw
fadd
in
scas
je
or
sub
(bad)
sub
popf
and
push
dec
loope
ins
sbb
mov
lods
pusha
cwde
mov
adc
sbb
sub
loop
xor
fiadd
sbb
xchg
jb
rcl
or
push
xor
cmp
and
idiv
data16
(bad)
sahf
call
sub
or
push
retf
inc
xor
cli
test
retf
enter
pop
adc
lods
test
push
sar
aam
gs
aas
out
sbb
test
or
cmps
mov
stos
cmp
mov
dec
jl
call
enter
ret
ins
test
rcl
pop
push
xor
rol
or
dec
sub
dec
pushf
push
pusha
enter
imul
sbb
push
add
mov
rol
repnz
js
inc
repnz
jmp
aad
jmp
and
call
mov
sbb
sbb
push
push
xlat
test
push
xchg
adc
add
push
stc
mov
fdivr
in
ins
mov
and
and
and
mov
test
clc
int
lods
add
sub
inc
or
mov
push
cli
cmp
xor
or
cmp
xor
div
aam
sbb
mov
jno
jl
sbb
(bad)
add
js
sbb
mov
and
sbb
outs
jp
rol
mov
dec
jp
pop
cld
imul
aad
(bad)
aad
pushf
inc
test
nop
or
mov
xchg
or
mov
or
push
cmp
aam
outs
call
je
call
sar
ds
(bad)
shr
adc
mov
push
les
in
sbb
popa
hlt
mov
mov
jl
pop
out
mov
jge
hlt
push
not
repnz
lahf
mov
xor
ror
test
add
jo
dec
hlt
xor
leave
jecxz
or
aam
mov
in
aam
pop
dec
push
jo
test
call
inc
jge
mov
scas
adc
pop
lock
adc
popf
lods
xchg
xor
cld
out
xor
in
or
fs
lods
mov
leave
mov
cwde
fadd
mov
js
clc
cmp
callw
adc
cld
test
xor
xor
movs
xchg
sub
in
or
inc
jne
mov
(bad)
xor
cmp
pop
and
xor
cmp
add
enter
jno
mov
cmps
adc
xchg
js
adc
pop
xor
fs
inc
xchg
out
jns
shl
or
lock
hlt
test
enter
loopne
pop
daa
aad
mov
fbstp
mov
sbb
pop
push
pushf
mov
scas
jo
xor
inc
hlt
xchg
into
cdq
and
mov
lods
xlat
adc
ja
pop
add
jmp
nop
jbe
mov
cwde
cld
loopne
push
loopne
inc
or
mov
je
xchg
mov
adc
fmul
popa
cmp
mov
hlt
jns
cmp
clc
dec
pop
std
loopne
aam
pop
push
and
and
ins
cli
sub
adc
cmp
adc
shl
mov
xchg
dec
push
adc
and
in
lock
push
cmc
sbb
xchg
dec
jbe
ins
adc
add
ins
hlt
hlt
(bad)
fs
xor
js
aam
dec
test
bound
popa
test
or
nop
inc
ret
lock
pusha
pop
in
push
in
(bad)
cmp
rcl
fcomp
hlt
lds
sbb
sete
cs
gs
cdq
pop
test
pop
dec
mov
dec
je
icebp
adc
retf
cmp
ss
test
daa
gs
sbb
les
cld
out
iret
cld
adc
mov
pop
mov
cmc
mov
dec
fcomip
test
scas
push
fsubr
mov
jbe
popf
inc
int3
sbb
in
fcmovb
inc
lods
mov
jecxz
or
push
test
jp
sar
inc
mov
mov
mov
hlt
push
push
xor
ins
test
xchg
inc
cld
push
and
call
lock
test
mov
in
ret
sub
and
std
sbb
in
dec
cwde
shl
pop
xor
cmp
les
lock
mov
mov
push
mov
dec
hlt
push
loop
xor
clc
outs
adc
int3
in
mov
clc
sub
sub
cdq
js
retf
outs
xchg
dec
dec
mov
dec
imul
jl
inc
pushf
pop
fdiv
shr
push
add
xor
fs
add
std
hlt
in
adc
in
and
fdivr
mov
sub
mov
rol
cmp
shr
push
test
div
pushf
push
add
les
popa
sbb
adc
fisttp
les
cmp
xchg
in
lods
pop
adc
popf
dec
les
cld
mov
adc
xchg
sbb
mov
cdq
aam
jl
outs
add
fdiv
mov
scas
lock
cmp
pop
aad
test
cld
cmp
loop
loop
push
outs
je
pushf
sub
repz
xchg
sub
shl
pop
or
arpl
pusha
fimul
lods
call
add
xor
loop
jmp
sbb
mov
or
add
xchg
pop
mov
test
sbb
add
and
pop
xor
mov
cld
mov
test
mov
jno
jge
jae
dec
pop
adc
push
xor
call
std
mov
jne
sbb
add
and
xchg
adc
mov
fs
jo
aas
(bad)
push
(bad)
fdivr
nop
cdq
call
dec
dec
cdq
rol
test
loope
sub
and
std
add
stos
sub
pop
and
add
mov
adc
popa
hlt
mov
cmp
dec
in
xor
fs
cmps
jl
dec
mov
cwde
sub
inc
call
test
call
push
xor
fldcw
xchg
jo
clc
xchg
icebp
mov
fdivr
js
dec
inc
mov
ja
gs
cmp
xor
pop
fs
and
xor
pop
aam
xor
call
or
lock
jecxz
lds
xor
cld
leave
inc
cmp
mov
adc
dec
mov
pusha
sub
and
fcomp
cli
hlt
pushf
in
lods
jp
test
std
movs
movs
ret
or
fld
mov
sbb
and
dec
add
and
lods
call
scas
mov
sub
in
cmps
(bad)
int3
adc
retf
cmp
add
cmp
rcl
aam
pop
add
shr
das
ror
dec
shr
adc
ja
sub
pushf
xor
dec
xchg
test
fwait
les
movs
loopne
test
nop
jmp
inc
add
and
push
das
retf
sbb
xor
outs
cwde
out
rcr
or
fadd
fdiv
jge
test
inc
mov
xor
mov
jmp
mov
movs
fadd
mov
loopne
nop
in
mov
cdq
xor
out
dec
mov
inc
mov
jl
gs
lods
and
pusha
xor
pop
dec
ss
mov
adc
mov
repz
or
adc
mov
ret
sub
test
dec
lock
pop
or
inc
dec
ins
xor
mov
or
mov
hlt
dec
add
cmp
xor
mov
sbb
jmp
lods
in
push
popf
retf
pop
call
test
cmp
push
push
(bad)
fld
pusha
retf
mov
sbb
clc
mov
sbb
mov
(bad)
xor
and
in
or
retf
push
(bad)
dec
sti
adc
cs
push
push
push
aam
addr16
gs
hlt
in
cmp
pop
shl
dec
loopne
sub
loop
mov
into
shl
jne
cmp
or
int3
stc
mov
adc
inc
inc
adc
pop
ins
mov
push
mov
mov
dec
mov
sbb
test
fdivr
idiv
pushf
sub
add
in
je
inc
loopne
imul
push
addr16
or
adc
xor
add
in
mov
dec
fistp
adc
sbb
push
and
nop
inc
pop
fs
fadd
and
sbb
test
push
mov
lock
fs
out
push
mov
je
nop
fimul
mov
popa
pushf
call
add
sub
add
cmp
pop
jo
cmp
adc
fwait
and
inc
dec
outs
xor
sbb
cld
push
es
aam
pushf
add
les
inc
xchg
enter
sbb
loop
sub
adc
repnz
jmp
push
inc
shl
pusha
dec
sub
inc
fdivr
rol
push
xchg
dec
lock
xchg
dec
or
push
xchg
shr
(bad)
jmp
pop
mov
int3
cmps
rol
dec
mov
push
jno
stc
and
or
push
int
xor
pop
lock
mov
xchg
cwde
repz
js
push
or
rcl
(bad)
cmp
mov
mov
pop
lods
mov
add
jle
pop
pushf
test
cld
in
cdq
cmp
movs
adc
mov
dec
pop
inc
cmps
and
cmp
mov
push
cmp
clc
dec
fs
aad
das
std
jl
adc
out
in
call
inc
and
adc
rcr
adc
hlt
adc
sbb
cmp
stc
add
mov
xchg
dec
sub
or
loopne
and
pushf
les
jmp
int3
xchg
add
xor
sbb
jno
test
enter
pusha
dec
stos
mov
lods
ins
xor
or
pop
sub
in
mov
movs
pop
pop
mov
(bad)
mov
movs
xor
je
mov
nop
pop
push
jo
pop
les
cli
aam
dec
leave
enter
xor
jl
mov
mov
pushf
fmul
loopne
call
and
mov
js
sbb
xchg
mov
mov
loop
mov
test
sub
in
clc
mov
daa
mov
lock
xchg
mov
stc
xor
aam
cmp
pusha
jg
fcom
sbb
adc
test
call
jno
enter
in
add
ror
or
jle
jl
add
mov
fcomp
mov
or
enter
and
or
cmc
sbb
popa
pusha
movs
sbb
xchg
push
sbb
xlat
mov
adc
hlt
xchg
inc
fisubr
clc
and
enter
sti
push
cmp
in
sbb
inc
mov
sbb
push
and
clc
not
pushf
jo
std
inc
clc
adc
mov
cdq
je
popf
pop
les
push
out
sub
je
sbb
push
cld
fwait
mov
out
sbb
mov
outs
xor
adc
hlt
mov
aam
shl
cwde
push
cwde
fisttp
jne
or
push
nop
das
into
jl
and
ins
push
movs
cdq
cli
mov
pop
clc
int3
mov
push
lods
frstor
jl
ds
mov
sbb
pushf
loopne
xor
lock
dec
jo
sub
daa
mov
aad
int
nop
inc
fdiv
(bad)
cmp
push
stos
js
je
fadd
clc
or
in
sbb
aam
push
in
fisubr
hlt
sbb
cs
lock
cli
and
je
mov
fadd
mov
in
add
push
rcr
js
lock
in
jnp
inc
or
pushf
adc
lods
movs
test
sbb
jbe
popf
adc
arpl
clc
in
pusha
ds
cmp
nop
pop
add
ins
aaa
fadd
jne
pop
push
mov
fs
mov
mov
int3
mov
lock
lods
mov
mul
cmp
pusha
add
add
mov
movs
sbb
mov
fs
adc
popa
mov
lea
mov
js
push
dec
cld
push
fs
sub
frstor
js
sub
in
sub
je
sbb
in
stc
fs
mov
pusha
mov
jl
dec
pushf
sub
xchg
and
cmp
fwait
icebp
xchg
mov
scas
cmp
inc
sbb
mov
repz
enter
aam
sar
jbe
sbb
les
clc
ins
pushf
cmp
dec
rcl
cwde
pop
js
mov
cmp
jns
cmp
cmp
test
add
sbb
in
ins
sbb
dec
pop
mov
sar
mov
add
xor
adc
add
ins
clc
mov
jo
mov
mov
cmp
or
les
inc
repnz
fcom
mov
pop
test
loope
sbb
movs
div
pop
jo
add
xchg
and
cld
movs
push
push
test
pusha
aam
inc
mov
sbb
sub
add
pop
(bad)
(bad)
and
test
idiv
mov
imul
and
mov
cwde
clc
test
push
push
adc
jo
xor
outs
cli
mov
adc
les
sbb
pop
pop
jle
mov
cmp
push
or
shl
jg
shr
mov
pop
repz
mov
push
fidivr
cld
and
push
mov
mov
sbb
(bad)
in
ds
or
les
stos
in
js
add
mov
or
sub
cmp
mov
stc
pusha
pmuludq
es
js
pop
cmp
adc
mov
data16
int3
and
fs
sbb
nop
add
cmp
in
jecxz
xchg
xchg
fs
int3
inc
rcl
xor
sub
jl
pop
retf
push
cmp
sar
push
mov
and
push
inc
les
nop
in
aaa
xchg
fadd
push
hlt
mov
je
cmp
add
ret
jge
inc
xchg
movs
addr16
inc
push
mov
jl
test
icebp
cmp
xchg
in
jl
inc
pop
inc
pushf
adc
dec
mov
sbb
in
in
pushf
pop
add
js
call
add
dec
lock
bound
add
and
test
push
test
xchg
ins
jnp
mov
mov
cmp
pop
sub
mov
cmp
sub
dec
shr
push
adc
mov
mov
retf
jo
clc
test
fsubr
sbb
lock
outs
ds
add
mov
enter
mov
es
ins
dec
push
adc
mov
inc
fidiv
inc
adc
gs
inc
xchg
and
push
xor
xchg
cld
in
leave
and
push
mov
xchg
out
cld
xchg
add
mov
fdivr
fsub
aas
test
adc
add
mov
sub
adc
pop
(bad)
dec
sbb
add
and
test
dec
daa
jl
aam
add
test
jl
or
ficom
in
enter
dec
scas
enter
in
dec
inc
inc
cmp
popa
jl
sti
lock
pop
pop
mov
cmp
inc
dec
lahf
xchg
jge
int
adc
add
or
lds
mov
mov
jl
imul
push
xor
push
call
rol
invd
imul
mov
mov
adc
pop
sahf
mov
xor
sub
aam
sub
mov
xchg
add
fs
inc
mov
mov
retf
call
in
movs
aam
hlt
mov
lea
mov
push
clc
in
add
loopne
pushf
dec
and
cmp
mov
cmp
and
je
dec
mov
sbb
mov
mov
test
aam
pop
inc
mov
sub
sub
jo
fsub
jg
fs
fcom
add
inc
push
fs
into
sar
cmp
inc
ffreep
add
hlt
mov
xor
push
sar
adc
add
cmp
je
cmp
cwde
(bad)
je
les
add
loop
lea
hlt
(bad)
cld
cmps
dec
repz
nop
add
jb
push
mov
scas
ret
or
sbb
aas
mov
or
xor
and
sbb
mov
inc
cmp
push
and
aad
mov
ret
popf
clc
(bad)
(bad)
sbb
pop
inc
mov
mov
push
pop
fsubp
aas
test
mov
repnz
sbb
cs
sti
pusha
sar
xor
cld
outs
inc
xor
jbe
int
fs
into
clc
jmp
js
inc
mov
mov
out
dec
(bad)
leave
in
sbb
test
push
in
dec
sti
je
pop
or
and
dec
rcr
cs
dec
xor
bound
jmp
xchg
cld
int
js
ins
xor
mov
add
call
push
cdq
mov
fsub
sbb
div
dec
nop
xor
test
sub
cmp
hlt
(bad)
cld
mov
outs
lock
enter
mov
js
fcomp
mov
es
add
hlt
xchg
lds
mov
scas
hlt
aam
xor
mov
pushf
popa
(bad)
push
sbb
mov
cmp
mov
in
into
sbb
loop
jmp
push
clc
mov
pop
cmp
or
push
sbb
and
push
clc
mov
pop
aas
inc
mov
jl
adc
mov
jo
xchg
cmp
inc
out
call
xchg
out
in
cmc
inc
ins
mov
stos
fmul
mov
jl
cmps
jno
cmp
fcom
dec
sub
pop
push
test
outs
xor
sbb
mov
mov
cli
or
adc
clc
cmp
fdivr
push
dec
mov
xor
push
gs
js
nop
sbb
add
int3
sti
stc
shl
and
mov
les
loopne
push
mov
idiv
inc
icebp
or
adc
movs
lods
adc
add
lds
clc
dec
dec
cld
mov
pop
rcr
jo
xor
enter
ror
stc
pusha
pop
add
sbb
mov
add
mov
cdq
adc
adc
call
into
je
test
xlat
add
test
bound
out
enter
sub
mov
fmul
fcom
cmp
adc
stos
xor
inc
and
add
dec
loope
push
push
shl
hlt
or
and
and
in
and
retf
cmp
clc
fsub
lods
and
dec
add
test
call
fs
mov
jp
arpl
je
sub
in
sbb
mov
fucom
iret
mov
push
or
lods
fsub
mov
jge
mov
push
xor
sbb
rcl
sbb
repnz
nop
or
pop
sub
ins
ins
xchg
mov
inc
fcmove
loopne
clc
dec
nop
ins
or
add
js
mov
test
(bad)
mov
jl
xchg
xchg
cmp
stos
int3
mov
jmp
sbb
adc
lds
scas
add
pusha
add
mov
or
mov
inc
test
pop
cmp
inc
fs
sar
call
sar
enter
push
pushf
and
pop
mov
ret
pushf
fsub
int3
mov
push
lods
pop
mov
cmp
fcom
adc
cld
pop
call
jmp
inc
sub
out
ror
hlt
jo
clc
fwait
xlat
pop
into
adc
sub
inc
scas
or
leave
movs
jl
in
fcomp
nop
call
pop
push
ins
jg
test
sbb
cld
mov
call
and
sub
clc
sub
fs
movs
or
fsubr
xor
aad
jl
inc
pop
cld
fiadd
xor
in
inc
xchg
ins
call
or
or
xor
lea
(bad)
sbb
inc
ins
adc
xchg
in
push
mov
add
jp
fs
aad
jl
test
fdivr
loopne
sub
clc
js
pusha
mov
aaa
hlt
out
mov
mov
loopne
or
adc
loop
add
mov
iret
out
adc
cwde
jmp
dec
cmp
mov
cmp
and
ret
iret
xor
cmps
clc
shr
and
and
out
and
shr
clc
mov
jb
push
inc
add
sub
push
sar
bound
int3
mov
cmp
cs
ins
nop
mov
cmp
aam
scas
inc
and
mov
cmp
mov
fcom
dec
outs
loopne
ins
add
int
xchg
adc
mov
sbb
pop
push
mov
scas
adc
and
inc
add
sbb
jecxz
push
push
inc
cld
mov
push
adc
mov
push
pop
pop
mov
lock
push
push
push
in
fs
ficomp
sbb
gs
inc
and
mov
mov
ror
mov
fcmove
sbb
cmp
sub
jno
mov
sub
dec
push
fs
sub
mov
mov
xor
lods
jo
cli
mov
cmp
push
sbb
fdivr
icebp
mov
mov
in
pop
enter
sub
iret
dec
leave
inc
or
imul
lods
in
cmp
pusha
jge
in
cmp
test
mov
and
dec
xor
fadd
int3
adc
jmp
cs
and
aas
(bad)
shr
loop
dec
cmp
aam
int3
imul
dec
cwde
fld
std
dec
gs
or
xchg
add
inc
jnp
ror
cmp
int3
mov
mov
cmp
jb
adc
movs
jge
fst
jb
mov
cdq
lods
ds
jmp
loopne
add
adc
cwde
dec
adc
nop
(bad)
les
and
push
sub
movs
inc
enter
pusha
sbb
ds
je
push
mov
lock
push
hlt
sub
or
or
(bad)
in
arpl
xor
dec
int3
adc
cwde
xor
jmp
aad
sub
mov
daa
sbb
pop
jp
arpl
cwde
sbb
scas
and
adc
inc
sub
cmp
sub
cli
les
adc
inc
aad
sub
(bad)
jne
xchg
dec
stos
aad
loope
push
xor
test
mov
les
sub
arpl
pop
or
mov
cwde
or
cmp
mov
movs
ins
dec
cmp
jmp
jmp
xor
mov
mov
inc
add
in
xchg
sbb
sbb
mov
fadd
jp
(bad)
sbb
les
fbstp
sbb
test
mov
ds
jl
push
adc
je
and
adc
cmp
movs
adc
mov
mov
call
inc
fstp
mov
mov
mov
mov
ret
shl
pusha
cwde
push
jl
lock
fcomp
and
or
and
xchg
pushf
aaa
pop
and
pusha
mov
call
les
fcomi
inc
sahf
(bad)
vzeroall
test
mov
cwde
cmp
repnz
je
sub
data16
js
pusha
pop
cmp
sub
sar
inc
test
outs
push
mov
pop
add
or
xchg
hlt
adc
sbb
or
clc
sbb
ficomp
ret
push
in
test
movs
into
sbb
push
and
cmp
fcom
(bad)
push
mov
pop
pop
ins
xor
rol
(bad)
and
mov
add
dec
ins
xchg
fstp
and
jl
mov
or
jo
pushf
and
cmp
out
or
dec
lods
xor
sub
push
mov
push
pop
push
push
jbe
sahf
call
fadd
jmp
mov
sahf
clc
lds
mov
xchg
je
adc
sub
(bad)
jns
xor
sub
(bad)
adc
jbe
inc
sub
ds
arpl
pushf
(bad)
fcomp
dec
shl
imul
sub
rol
push
push
and
cwde
ins
repz
js
sub
mov
jle
push
cwde
push
push
dec
or
or
xor
fwait
inc
test
cmps
add
xchg
pop
inc
dec
fdivr
inc
cmp
jne
push
fsub
fsubr
adc
daa
inc
daa
es
cwde
in
(bad)
enter
jl
sbb
xor
fisttp
mov
clc
adc
sub
enter
mov
jo
xchg
in
mov
pop
mov
addr16
dec
adc
mov
pop
pop
and
cld
cmp
sub
add
icebp
pop
fmul
lods
pop
mov
cmp
pushf
xchg
dec
xor
fbld
fs
test
sbb
test
out
les
ja
pop
xchg
test
imul
cld
inc
fs
pushf
fsubr
popf
mov
je
sbb
mov
sbb
cmp
push
mov
jo
sub
call
xchg
cwde
mov
cdq
mov
push
pusha
add
popa
sbb
dec
pop
fiadd
or
inc
movs
mov
clc
pushf
loope
mov
xchg
in
mov
cmc
inc
push
fdiv
push
inc
aam
add
mov
inc
js
neg
inc
mov
mov
fsub
dec
fild
dec
inc
cwde
test
ror
fnstenv
out
xor
jg
mov
xor
stos
hlt
adc
clc
nop
sar
and
arpl
jo
mov
sbb
add
nop
mov
pop
dec
rcl
sub
les
cld
adc
ret
dec
ja
fsubr
inc
jae
clc
mov
cmp
daa
inc
int3
cdq
div
pusha
clc
aam
jl
hlt
push
test
inc
xchg
xchg
(bad)
cld
js
add
sbb
fistp
or
sti
nop
mov
push
sbb
xor
hlt
nop
ins
pop
lock
or
ins
xchg
aam
sbb
pusha
rcr
test
pop
js
dec
dec
xchg
movs
fdivr
dec
ins
scas
aam
fmul
jge
push
add
xchg
repz
pop
dec
pusha
pop
mov
imul
jl
test
or
mov
sbb
push
fs
loop
add
mov
lods
loopne
loopne
(bad)
les
mov
js
mov
cmp
cwde
fmul
rcl
shr
mov
movs
or
(bad)
fst
jmp
xor
pop
cwde
push
enter
jmp
dec
clc
mov
pop
inc
les
jge
and
inc
sbb
dec
stos
scas
and
dec
or
and
mov
ret
gs
ja
hlt
push
adc
mov
cmp
enter
pop
cwde
lds
jg
push
mov
mov
dec
xor
cmps
popa
mov
hlt
out
jmp
sbb
mov
rcr
mov
xor
and
cld
cwde
lods
dec
ins
push
(bad)
call
test
sub
sub
add
imul
loop
into
aam
dec
mov
out
mov
and
dec
ins
repz
sbb
and
mov
push
in
in
cmp
lock
mov
std
push
or
xchg
out
and
xor
clc
push
and
jmp
imul
rol
and
push
cdq
out
pusha
push
push
xchg
adc
lahf
call
test
adc
adc
sbb
mov
js
pop
je
push
fidiv
ret
call
aam
sub
xor
fsub
mov
mov
addr16
ret
mov
test
int3
dec
outs
xchg
into
cmp
or
pop
push
int3
jge
and
add
rol
js
lahf
test
les
ins
cmp
pop
outs
mov
into
fnstenv
lods
cmp
popa
sub
mov
aad
(bad)
or
mov
loope
int3
dec
mov
push
ds
movs
and
push
movs
cmp
add
hlt
sbb
pop
sbb
stos
jo
push
adc
jl
jb
iret
push
mov
fsubr
push
in
lods
dec
loopne
push
lahf
and
and
test
pusha
sub
xchg
int3
in
retf
and
mov
pop
sbb
adc
movs
add
fs
fcomp
mov
mov
mov
call
push
movs
std
call
sbb
add
dec
icebp
mov
adc
stc
int3
pusha
inc
dec
in
jo
out
jns
fs
or
in
mov
fld
enter
js
out
rol
int3
mov
sbb
push
cmp
imul
jmp
adc
add
xor
jl
dec
in
imul
fnstsw
scas
sub
mov
(bad)
lock
sub
push
fs
in
js
fnstsw
xor
pop
aam
pop
mov
shl
and
sub
push
sub
push
push
mov
pop
mov
jle
ja
mov
xor
sub
cmp
lds
je
cmp
inc
mov
out
js
loopne
loop
push
cwde
ss
sub
push
in
pushf
ret
pop
or
mov
in
and
jge
push
lea
je
or
out
mov
pop
mov
xor
out
cmp
loopne
push
imul
sub
jb
popf
loopne
pop
and
enter
push
les
cmp
fldcw
cli
and
pop
fist
test
clc
stos
hlt
adc
nop
(bad)
test
dec
xor
js
cmp
sub
rcr
add
cmp
je
xchg
inc
mov
inc
xor
test
adc
mov
(bad)
lock
dec
xchg
sub
call
xchg
int
retf
pop
aam
imul
je
mov
test
adc
out
mov
mov
jmp
xor
in
push
call
jle
pop
ds
jne
(bad)
push
sar
mov
xor
jge
cld
aaa
cld
add
dec
jbe
fcom
hlt
xchg
les
sbb
sahf
and
test
aas
sub
push
in
sahf
mov
ret
int3
je
xchg
test
push
es
ret
cmp
adc
int3
cmp
(bad)
test
and
cmp
xchg
rol
inc
fdiv
inc
push
sbb
jbe
pop
aam
xlat
in
pop
mov
sbb
inc
imul
adc
mov
jp
fs
or
cmp
push
xchg
fstp
xchg
(bad)
(bad)
hlt
jnp
pusha
mov
add
in
call
in
test
rol
jg
push
add
add
sub
fcomp
rcl
outs
gs
pop
hlt
or
clc
fdivr
push
call
cmp
dec
mov
int3
xor
dec
mov
dec
shl
sbb
stos
xchg
lock
sahf
test
pop
cmp
mov
push
test
scas
test
clc
pop
mov
rcl
mov
scas
jns
jno
dec
inc
nop
sbb
daa
rcr
cmps
add
cld
js
jo
jecxz
ret
call
push
sub
xchg
(bad)
xchg
mov
data16
push
clc
or
retf
or
gs
xchg
jo
mov
data16
mov
or
loope
sub
push
mov
movs
fisub
xor
cmp
and
adc
ss
sahf
mov
fcomp
mov
js
dec
push
mov
adc
jmp
mov
mov
mov
push
cmp
hlt
add
sbb
sbb
jo
das
xor
cmp
nop
push
xor
ins
dec
imul
cmp
in
sbb
mov
clc
sbb
cld
sar
mov
sbb
mov
sar
in
sub
push
add
cmp
push
push
mov
fisubr
mov
cmp
shl
adc
rol
jl
rol
lock
dec
push
es
fimul
retf
out
adc
pushf
mov
push
pop
fnstcw
sbb
inc
jnp
(bad)
aam
cmp
loopne
jb
mov
pop
cli
add
dec
js
pop
xor
adc
mov
std
mov
sub
dec
jmp
loope
jmp
loopne
aam
in
sub
aam
outs
sub
clc
shr
ret
je
dec
shl
jne
or
jp
(bad)
pusha
mov
je
mov
jp
rol
xor
fsub
xor
or
ret
inc
call
cmp
and
xor
pop
cmp
mov
aas
ins
add
(bad)
pop
clc
pop
xchg
mov
leave
add
int3
ja
inc
and
pop
and
mov
pushf
mov
mov
fbld
pop
mov
js
sbb
je
sbb
inc
pop
xor
or
in
stos
fdivp
dec
push
push
fdiv
lock
mov
dec
add
mov
shl
aad
je
data16
mov
ins
das
mov
fs
or
jl
mov
nop
popa
add
inc
in
sub
in
sbb
adc
sbb
pop
xor
xor
sbb
movs
mov
cwde
rol
std
movs
and
fs
cmps
mov
das
hlt
aam
push
retf
int3
adc
or
xchg
xor
mov
adc
mov
dec
add
test
sbb
popa
js
sar
xor
and
mov
pop
cwde
inc
mov
cmp
aam
xchg
js
fs
lods
and
mov
mov
sbb
xor
stos
add
lods
mov
lock
or
fdivr
jno
pop
fadd
lods
test
inc
adc
loope
jp
mov
pop
pop
mov
cli
jo
hlt
lods
lock
pop
mov
mov
lods
mov
mov
and
mov
cmp
inc
call
add
ja
data16
fstp
lods
movs
adc
cmp
enter
adc
xor
clc
push
xchg
push
mov
and
idiv
test
popf
(bad)
bound
inc
xor
inc
add
push
sbb
add
ins
movs
add
mov
xor
jbe
jmp
in
push
add
cmp
shl
mov
xor
jo
xchg
and
mov
push
jle
xor
xchg
pop
cwde
xlat
ror
or
(bad)
shl
lods
push
test
dec
mov
enter
and
add
out
fadd
ja
sbb
test
movs
add
jl
xchg
dec
fiadd
and
push
jge
and
lods
fmul
mov
sub
int3
inc
xchg
out
mov
fsubr
fdiv
test
dec
loopne
dec
data16
pop
sbb
or
rcl
or
dec
int3
imul
cmp
add
loopne
jl
icebp
call
adc
xchg
ror
hlt
pop
fadd
in
push
movs
pop
enter
pop
nop
sub
cmp
push
or
lock
and
push
imul
test
jnp
shl
into
pusha
rcr
cmp
in
pop
or
ins
mov
sub
xchg
(bad)
aas
inc
daa
pop
dec
enter
enter
pop
hlt
mov
inc
(bad)
retf
cmp
sbb
arpl
pusha
mov
movs
(bad)
int3
unpcklps
aam
movs
mov
sub
ds
in
int3
push
les
xchg
sub
sub
inc
add
and
sbb
les
int3
or
sar
lds
mov
scas
inc
sub
mov
jecxz
les
sbb
js
les
add
add
cmp
fs
clc
repnz
push
sbb
rcl
js
jo
add
loope
mul
xor
jl
mov
sbb
loope
sub
js
xor
hlt
fcom
push
lods
sub
dec
and
add
dec
and
or
xchg
dec
jl
and
(bad)
fmul
repnz
mov
fcomp
xchg
sahf
cmp
fisttp
pop
xchg
jmp
push
xchg
int3
add
rep
pushf
imul
add
sbb
or
or
cmp
lock
sbb
xchg
cld
hlt
xor
scas
cmp
hlt
mov
js
cmp
mov
movs
xor
adc
or
adc
pop
call
(bad)
adc
(bad)
shr
lock
pushf
jecxz
xor
push
fstp
ror
pop
and
add
fsubr
push
adc
mov
jl
jp
outs
pop
push
sbb
into
popa
fmul
add
scas
pusha
adc
cld
jbe
xchg
hlt
sbb
sub
mov
ror
je
pushf
cmp
xor
daa
xor
sbb
fs
mov
push
add
or
not
push
and
push
sbb
loop
or
scas
mov
in
or
inc
and
test
cwde
lods
fdiv
xchg
cdq
fldenv
enter
cs
jle
fmul
test
test
push
cmp
mul
push
call
push
pushf
cld
fmul
adc
enter
es
data16
test
mov
imul
jb
inc
mov
int3
mov
mov
push
mov
mov
dec
lock
mov
sub
jo
rcl
out
out
dec
push
jb
push
inc
lock
jae
clc
mov
ins
mov
imul
mov
adc
push
cli
js
or
jle
inc
ss
mov
outs
mov
xchg
je
repz
xor
add
xor
es
xchg
sahf
cmp
xor
pusha
mov
inc
push
xor
jns
gs
mov
mov
test
xchg
fsubr
mov
loop
call
push
inc
call
dec
cld
mov
adc
sbb
mov
cmp
cld
or
or
xchg
test
stos
not
mov
inc
inc
xchg
sub
add
in
test
fmul
jbe
pop
sub
sub
xchg
leave
cmp
es
or
adc
mov
push
dec
out
stos
fidiv
mov
in
xchg
xchg
add
loopne
pushfw
fsub
cmp
add
sub
(bad)
pushf
push
jl
test
add
lods
idiv
cld
das
pusha
dec
fs
and
lock
push
sbb
or
pushf
or
mov
je
inc
push
dec
test
jecxz
jmp
add
call
enter
lods
jb
clc
and
ret
fcomp
shl
or
mov
shl
sub
mov
ins
add
mov
movs
inc
pop
test
je
cld
sub
mov
sub
adc
outs
xchg
mov
cmp
cmp
and
ins
fnsave
inc
test
mov
popa
movs
inc
test
nop
dec
adc
loop
push
push
jmp
pshufw
add
cs
scas
push
test
lock
mov
(bad)
int3
mov
push
mov
sti
mov
lods
mov
dec
je
test
lods
dec
mov
fsub
xchg
xor
or
sar
sahf
(bad)
shl
add
pop
cli
dec
in
out
sbb
mov
mov
ins
mov
pushf
fcmovnb
lock
or
mov
clc
xor
fsubr
inc
adc
sbb
test
in
dec
rcr
xchg
ja
sti
lods
sub
jo
enter
aaa
aad
mov
fs
fsubr
xchg
jbe
or
loopne
pusha
movs
clc
ins
stos
mov
cmp
fxch
in
pop
in
jne
cs
mov
shl
dec
mov
call
in
xor
xor
jl
add
sbb
in
dec
adc
pop
leave
lods
aam
pop
lods
mov
sub
enter
mov
pusha
pop
pop
inc
dec
ins
inc
xchg
push
mov
js
movs
cwde
(bad)
test
test
mov
pop
adc
popa
in
lods
sbb
loopne
out
push
xor
xchg
fcom
fdivr
push
sahf
test
clc
xchg
aam
mov
xor
mov
pop
sbb
push
clc
ror
jle
jle
test
adc
adc
lods
jo
mov
dec
cmp
or
lds
add
push
les
sub
jo
cwde
call
xor
jbe
call
adc
pop
mov
xor
or
dec
frstor
mov
cmps
loopne
cs
sbb
fbstp
(bad)
loopne
mov
in
or
push
sub
xor
xchg
call
push
test
ins
fnstsw
call
fs
lock
fbstp
leave
cmps
mov
nop
add
scas
push
sub
call
pop
in
mov
fidiv
fcom
jp
mov
sbb
outs
mov
push
push
aam
mov
clc
xor
mov
js
push
fsub
dec
cmp
mov
into
sub
and
dec
push
xchg
sub
aam
or
push
cmp
jge
push
adc
in
mov
cmp
sar
adc
test
shr
and
lahf
cmp
adc
sbb
push
in
push
dec
lods
icebp
clc
fwait
cmp
xchg
dec
rcl
mov
cmp
leave
and
mov
xchg
rol
mov
sbb
(bad)
retf
and
mov
and
js
push
xor
sub
sub
aas
lock
push
jb
mov
pop
mov
mov
cmp
or
inc
mov
je
sbb
cmp
xor
sub
in
jmp
add
mov
aam
inc
add
movs
sub
jl
nop
aam
in
test
xchg
push
ins
push
xor
aam
fadd
mov
call
movs
jge
inc
jmp
mov
imul
sar
and
pop
add
ins
jmp
push
mov
inc
mov
ins
or
push
and
jbe
inc
mov
sub
mov
(bad)
push
(bad)
fcom
push
movs
loopne
xor
or
mov
jl
xchg
cwde
xchg
pop
adc
in
test
cwde
pusha
ret
je
adc
cmps
cmps
int3
das
adc
adc
les
mov
out
or
xchg
and
sub
cmp
mov
popa
outs
(bad)
aam
cmp
mov
clc
js
mov
adc
jl
mov
lock
shl
imul
mov
push
xor
int3
cs
push
fmul
gs
mov
(bad)
dec
lods
shr
jl
aam
push
test
mov
cmps
mov
pop
xor
sti
inc
xor
mov
jne
dec
inc
and
add
clc
cmps
fmul
and
ins
mov
push
je
mov
js
sbb
pop
les
fcom
pusha
call
add
push
push
and
mov
or
js
loopne
push
jl
or
inc
xor
out
and
imul
mov
push
xlat
add
or
inc
cmps
loopne
and
les
sub
pusha
icebp
cwde
out
or
rol
or
mov
sub
ins
gs
mov
cld
ins
add
mov
or
hlt
xchg
pop
mov
repz
cmp
mov
sbb
inc
in
xor
cmp
push
je
lea
adc
mov
fdiv
mov
pop
aad
cld
das
fs
fld
inc
pop
test
cld
loopne
dec
or
retf
cmp
fsubr
adc
shl
or
es
rcl
sub
loopne
add
mov
mov
lods
dec
cmc
fcom
call
mov
mov
clc
(bad)
loopne
mov
push
hlt
cld
nop
les
rcr
and
shr
std
xchg
leave
lods
les
push
dec
inc
xchg
in
rcr
test
sub
adc
adc
dec
xor
pushf
out
xor
shr
pusha
pushf
or
sub
sub
xchg
sar
sahf
out
loopne
push
shl
pushf
inc
in
int3
rcl
test
popf
rol
push
into
sbb
add
les
aam
cmp
push
shl
je
cmp
sbb
loopne
mov
jne
hlt
and
xor
jmp
jb
ror
adc
sbb
popa
repnz
js
pusha
mov
mov
idiv
cwde
idiv
pop
aam
(bad)
je
movs
pop
push
pusha
(bad)
add
sub
iret
cmp
or
add
cmp
push
sbb
cwde
in
in
dec
call
dec
xor
shr
mov
xlat
rol
enter
and
jae
clc
pushf
fdivr
xor
fsubr
mov
pop
xlat
cli
cmp
hlt
pop
sbb
data16
mov
or
fadd
(bad)
mov
fcom
xchg
in
add
clc
aas
mov
hlt
jbe
test
sub
loopne
outs
pop
arpl
jmp
cmp
pop
cmp
inc
test
frstor
push
js
mov
adc
sub
push
dec
and
sub
mov
cmp
lock
movs
inc
dec
jns
mov
outs
aam
lahf
mov
lds
pop
cmp
(bad)
call
call
adc
pop
retf
inc
cmp
xchg
and
ins
imul
jo
enter
fs
hlt
test
adc
adc
mov
inc
fimul
add
stc
cmp
je
in
call
xchg
pushf
cmp
movs
adc
cwde
mov
cmp
imul
cmc
ret
cmp
xor
add
lahf
clc
les
cmp
push
add
sbb
add
fsubr
leave
and
inc
sub
push
aam
pop
push
adc
jl
push
jo
jp
pop
int3
dec
mov
test
nop
inc
or
fcom
test
add
loopne
sbb
jno
in
push
rcr
xor
push
arpl
imul
push
pusha
pushf
mov
ds
cld
dec
popf
sub
adc
mov
sbb
loopne
sub
push
in
dec
xor
push
rcl
sbb
in
xchg
div
push
xor
push
clc
inc
lea
adc
int3
rol
xchg
push
test
mov
sbb
mov
in
mov
cmps
mov
enter
xor
movs
sub
aam
sbb
out
jns
jne
fsub
and
pop
lods
or
shr
lods
pushf
lock
mov
cmps
push
pop
cwde
cmp
cld
adc
cmc
sub
aam
push
mov
fwait
aad
(bad)
pop
or
mov
or
add
ins
dec
test
xchg
fmul
pusha
xchg
sbb
and
push
mov
fdivr
cli
jo
adc
jg
and
nop
and
cdq
loopne
mov
dec
ds
sar
cmp
dec
popf
in
mov
sub
sar
enter
fsubrp
add
jmp
call
aad
lods
(bad)
out
js
xor
ds
lock
and
or
call
nop
ficomp
jle
pop
loopne
(bad)
hlt
lods
pop
cmps
ins
xor
enter
add
movs
clc
inc
cmp
inc
ficom
mov
or
fwait
mov
inc
mov
mov
pop
add
xor
aad
mov
loopne
jo
cmp
sub
adc
loope
enter
mov
mov
adc
or
hlt
add
inc
push
lods
repnz
xor
loope
push
xor
and
dec
nop
mov
hlt
stos
pop
cmp
lods
jle
push
mov
sbb
add
jo
mov
mov
dec
pop
nop
mov
lods
jmp
adc
jo
test
jecxz
pusha
push
adc
cmp
and
(bad)
enter
adc
dec
cld
outs
retf
loopne
dec
aam
sbb
lods
shl
push
aam
out
js
int3
mov
sbb
ins
dec
hlt
adc
or
or
aam
fsubr
adc
fs
sub
push
pusha
(bad)
cld
ror
rcl
sub
jno
inc
adc
or
jo
jo
(bad)
leave
push
xchg
push
sbb
push
add
in
hlt
std
cmp
pushf
lock
js
cmp
cmp
js
loop
jmp
mov
sbb
mov
sti
sub
mov
int
mov
pop
gs
mov
mov
inc
mov
jg
xchg
sbb
inc
pushf
aam
repz
pop
les
cmp
inc
fist
(bad)
pop
lods
test
in
dec
imul
jmp
data16
outs
cmp
pop
lods
push
inc
rol
repnz
add
inc
lods
dec
cmp
xchg
out
loopne
push
sar
int3
add
add
and
mov
ror
fsubr
pop
shr
aad
cmp
adc
fcompp
jmp
nop
pop
jno
enter
pop
jl
(bad)
in
xor
cwde
pop
adc
mov
mov
or
hlt
jno
mov
and
mov
les
push
sub
(bad)
pushf
mov
adc
xchg
mov
sbb
mov
xchg
dec
out
lea
adc
xchg
jb
stc
fld
dec
mov
pop
cld
sub
mov
or
lods
mov
add
das
xor
xor
sbb
cmc
jo
sbb
repz
pop
cmp
adc
xchg
jo
push
movs
sbb
pusha
nop
imul
jge
pop
sbb
sbb
lods
push
xchg
jne
leave
cmps
cmp
add
(bad)
stos
xor
push
jmp
inc
sub
daa
sbb
sbb
mov
adc
inc
fs
cli
shl
jl
in
ins
fadd
mov
mov
scas
inc
dec
adc
cld
add
dec
mov
fst
adc
adc
sub
cmp
and
dec
scas
xor
xor
sub
xchg
mov
mov
and
mov
and
not
mov
ret
mov
and
bnd
mov
cdq
sti
bound
pusha
outs
sub
pop
xchg
pushf
je
xchg
add
xor
xchg
nop
jmp
call
xchg
popf
fisubr
pop
push
retf
mov
test
repnz
fs
sub
outs
push
aam
in
add
mov
call
je
cmp
(bad)
loopne
push
jmp
xor
in
dec
loopne
pushf
pop
out
push
pop
sub
daa
sbb
push
pusha
mov
shr
aam
mov
fdivr
test
mov
int3
fsub
push
inc
fadd
adc
clc
mov
mov
clc
(bad)
sbb
(bad)
and
clc
rol
mov
add
jl
pop
lods
in
aam
cld
sbb
push
mov
or
dec
mov
js
movs
pop
fadd
cmp
movs
(bad)
pop
sub
jnp
sbb
sub
cmc
ror
adc
pop
lods
les
mov
cmp
cld
fmul
loopne
sbb
dec
sub
nop
rcr
xor
pop
jmp
adc
sub
lock
jle
je
sbb
cld
jl
ins
dec
aas
clc
pop
fwait
or
inc
sbb
adc
push
add
sahf
mov
scas
xchg
push
pop
cld
inc
out
dec
adc
test
push
and
xor
clts
and
jae
push
jo
rcr
pusha
or
and
xor
cld
add
dec
adc
mov
mov
inc
adc
mov
add
mov
aam
sbb
add
into
and
cmp
mov
js
sub
in
dec
aad
inc
call
icebp
lods
dec
in
nop
repz
lock
gs
mov
in
mov
cwde
xchg
test
dec
or
sbb
mov
and
jbe
cmp
(bad)
cwde
mov
pop
sbb
rcr
jo
cld
aad
in
stos
aam
repz
cwde
mov
and
sub
sub
enter
loop
pop
or
dec
nop
ins
jp
pop
hlt
or
adc
loopne
scas
inc
cs
cmps
sub
lock
stos
add
sbb
fmul
cmc
in
in
mov
and
enter
clc
rcl
fmul
int3
adc
lods
shl
cmp
mov
push
inc
mov
ins
push
lods
mov
inc
sbb
cs
lods
sbb
loopne
ret
bound
or
xchg
mov
push
shl
pop
and
ins
sub
inc
push
pop
fmul
adc
adc
cmp
dec
adc
fsubr
test
sti
or
mov
ss
and
lock
vpunpckldq
add
mov
sbb
xchg
mov
cmp
inc
mov
std
call
into
cmp
(bad)
fadd
xchg
mov
jmp
push
popf
aam
(bad)
push
add
mov
sbb
add
cdq
xor
cwde
or
in
int3
add
sub
mov
hlt
out
mov
outs
inc
inc
ins
dec
rcl
in
rcr
(bad)
sub
ss
mov
inc
in
test
mov
or
mov
sbb
je
inc
cwde
fimul
dec
(bad)
mov
fmul
adc
pusha
or
(bad)
loope
sub
loopne
mov
movs
fdivp
pop
push
sbb
adc
pop
clc
adc
jnp
mov
(bad)
lock
ss
shl
sbb
mov
lods
pop
adc
and
and
in
pop
push
mov
fnstcw
xchg
sub
cmp
hlt
cmp
or
pop
imul
sbb
iret
xor
data16
push
and
in
adc
mov
ins
test
or
fst
sbb
adc
loope
mov
dec
int
je
int3
outs
test
test
jmp
jmp
mov
ja
fdiv
cmp
xchg
in
cmp
inc
ins
xchg
aam
mov
or
sar
nop
cmp
movs
pop
pop
sbb
mov
pop
clc
ror
mov
je
sub
adc
mov
int3
rcl
clc
and
mov
cmp
movaps
sub
popf
jo
or
pop
popa
(bad)
lock
and
add
popa
jb
mov
xchg
pop
test
mul
stc
inc
stos
inc
adc
push
fcmovbe
or
pusha
jge
ret
jo
sub
ja
clc
adc
add
bound
call
aad
ins
push
mov
int3
aam
lahf
sub
dec
mov
mov
push
fstp
inc
sub
test
pmuludq
push
dec
std
rol
into
xor
cwde
xor
outs
call
out
loopne
lock
clc
xor
cwde
add
sub
add
mov
ret
fdivr
je
cmp
push
and
enter
lock
lds
test
sbb
mov
std
imul
xor
and
fcomp
jmp
sub
and
mov
loop
loope
xor
push
fdiv
mov
add
dec
je
pushf
or
and
xchg
jp
mov
xor
mov
jl
push
call
jle
in
ins
aam
mov
mov
jae
sbb
pop
pop
icebp
fadd
inc
and
lahf
mov
dec
dec
add
test
lds
sahf
mov
cs
cmp
adc
cmps
xor
cld
scas
je
lods
xor
int
push
jecxz
test
and
out
xchg
pop
les
push
sub
adc
in
les
je
mov
and
inc
ja
or
inc
test
cld
inc
xchg
mov
aam
add
in
dec
hlt
or
push
inc
mov
fcom
fsubr
mov
jbe
ins
test
xor
test
ins
repz
pop
mov
xor
(bad)
add
fdivr
test
sub
xor
sub
sahf
cmp
mov
pushf
je
mov
mov
data16
fiadd
call
mov
adc
xchg
sbb
inc
loopne
loopne
and
lea
cmp
xchg
es
sub
xor
push
in
adc
fsub
mov
aad
mov
pop
repz
scas
in
repz
or
adc
xchg
lock
push
ja
clc
mov
pusha
or
je
lods
das
adc
(bad)
cld
(bad)
sub
mov
mov
jl
sub
dec
xor
cmp
mov
ror
loopne
pop
mov
pop
mov
stc
hlt
xor
pushf
aam
clc
js
pop
or
je
push
repnz
js
cwde
dec
cmp
bound
sub
imul
add
mov
push
mov
imul
sbb
test
cwde
push
or
mov
xor
std
cmp
mov
loop
sub
push
pusha
sbb
cld
movs
cmp
and
mov
in
repnz
cmp
and
sbb
nop
call
loopne
push
sub
(bad)
sbb
mov
push
je
or
jne
pop
mov
dec
movs
int3
movs
pop
mov
loopne
jmp
(bad)
lods
cld
xor
pop
xchg
push
pop
lock
mov
shl
enter
adc
jl
mov
mov
sub
sbb
xor
in
dec
xor
ins
enter
ret
pusha
in
mov
mov
stos
in
inc
sbb
jo
sahf
or
fcomp
in
cmp
mov
pop
add
pop
sub
jl
dec
xchg
cmp
imul
xor
push
pop
push
mov
mov
je
ror
mov
lods
jmp
outs
sbb
jmp
test
adc
adc
or
push
fs
mov
test
enter
xchg
mov
pushf
popa
les
jo
xor
test
xchg
pop
scas
fsub
jecxz
push
cmp
hlt
jo
les
mov
jl
inc
ins
loopne
adc
loopne
adc
outs
fs
cmp
sbb
add
int
mov
stos
dec
adc
sbb
aam
int3
sbb
imul
push
mov
pop
mov
test
sbb
pop
clc
adc
pop
push
add
cwde
cmp
push
je
mov
fst
nop
loopne
(bad)
loopne
call
push
out
sahf
je
or
lods
xchg
sub
enter
pop
mov
mov
js
and
add
mov
xchg
add
dec
cmp
fidivr
and
mov
hlt
shl
pop
dec
sbb
push
push
es
retf
shl
add
movs
dec
dec
adc
(bad)
pushf
mov
mov
jge
xchg
fimul
add
fdivr
je
cmps
mov
mov
sub
ret
pop
sbb
mov
sbb
sub
or
jecxz
sahf
add
ret
int3
xchg
xor
and
mov
add
sbb
mov
mov
add
popf
enter
sbb
sbb
xor
fs
stc
fs
int3
(bad)
cmps
stos
call
cld
inc
(bad)
cmps
js
dec
xor
jl
or
clc
call
mov
adc
cmp
imul
jo
js
mov
enter
mov
mov
je
test
adc
scas
pop
xchg
jne
call
xor
mov
mov
fistp
hlt
fsubr
ins
jb
js
mov
sub
mov
mov
mov
xchg
jmp
xchg
dec
mov
mov
stos
mov
aad
lds
mov
je
fcomp
or
inc
inc
jp
js
sar
cwde
fcom
pop
jno
fmul
nop
jl
les
fld
js
or
mov
mov
aam
adc
pushf
mov
(bad)
mov
adc
ret
adc
mov
cdq
jo
dec
test
scas
pop
ds
or
mov
cld
cmc
(bad)
sbb
test
movs
jns
inc
scas
test
and
sbb
and
repz
cdq
in
or
je
cld
in
jno
stc
rol
add
inc
adc
push
sub
cdq
jl
cmps
push
cwde
xchg
aam
fmul
aam
sub
scas
xor
shl
out
mov
and
fcom
ja
pushf
sub
jg
clc
jle
cmp
cdq
and
inc
add
cmp
sbb
movs
pop
cmp
xor
lods
dec
xchg
inc
shr
xor
(bad)
in
les
std
or
pop
add
fmul
mov
inc
sbb
jo
out
pusha
jge
jne
pushf
fcomp
jo
test
jo
pushf
adc
popf
pushf
sbb
cmp
mov
loopne
lods
pop
pop
and
sub
mov
pushf
enter
mov
retf
pop
stos
ins
aas
and
jge
inc
push
int3
fsub
lea
sbb
dec
mov
movs
xor
mov
mov
xchg
and
xor
call
or
sbb
xor
jbe
fnsave
pushf
cld
test
lock
or
mov
or
(bad)
dec
(bad)
adc
sub
loope
or
sub
icebp
js
mov
les
in
xchg
les
sub
push
adc
test
mov
sub
xchg
inc
mov
push
shl
mov
out
and
lods
push
push
mov
pop
cmp
adc
mov
mov
sahf
jl
shl
fsub
mov
mov
mov
stos
int3
sbb
jmp
test
inc
es
cwde
mov
and
in
and
imul
in
fs
(bad)
test
bound
enter
shl
fsubr
inc
mov
xor
std
mov
ja
sbb
aam
pop
xchg
mov
inc
xor
xor
aam
mov
pop
stc
sbb
inc
lods
pop
xchg
pop
int3
dec
aam
cld
cwde
cmp
fdiv
les
movs
mov
pushf
sar
mov
xchg
or
int3
and
pop
and
cwde
or
sbb
(bad)
push
movs
pop
cmp
jle
sahf
retf
int3
jle
inc
mov
movs
in
xchg
cmp
or
hlt
in
dec
sar
sub
pop
jo
aam
sub
add
xchg
sbb
ss
cwde
xlat
sbb
gs
mov
push
cwde
cmp
sbb
and
ins
sub
adc
in
aam
or
test
(bad)
mov
dec
test
lods
popa
ins
popa
rcl
fnstenv
dec
cli
add
mov
mov
pusha
fucomip
les
cmp
sbb
lock
sub
mov
mov
in
fmul
pop
push
dec
aam
sub
pop
and
cld
cmp
dec
sub
cmc
lods
pop
test
aam
sub
adc
pop
cmp
les
mov
and
pusha
add
call
scas
adc
pop
mov
lock
les
imul
popa
sub
(bad)
test
stos
push
lock
xchg
inc
pushf
dec
mov
call
jl
mov
pusha
jne
jl
xor
pop
adc
movs
imul
or
test
dec
je
cmp
add
repnz
icebp
adc
pushf
push
aam
sbb
xor
jmp
cmp
mov
loopne
or
sub
fdivr
sahf
ins
pusha
es
push
push
pop
imul
loopne
fbstp
mov
call
push
push
xchg
cmp
out
or
je
aam
(bad)
jo
mov
and
in
or
mov
pop
mov
cmp
cmp
out
mov
sbb
add
retf
int3
mov
not
and
jne
sbb
in
pop
sti
mov
push
dec
cmp
mov
js
inc
jge
fs
fisub
jo
fucom
lods
jp
(bad)
mov
cmps
in
lock
rcr
(bad)
les
mov
out
out
cmp
sub
lods
bnd
ror
sub
mov
aam
inc
test
add
jl
inc
push
into
fdiv
lock
push
inc
cld
jmp
hlt
out
jmp
sub
mov
jo
sbb
jl
adc
shr
pop
jne
mov
jp
add
adc
cdq
inc
hlt
aam
dec
inc
mov
sub
sbb
(bad)
hlt
mov
push
mov
pushf
in
shl
and
xchg
in
add
inc
mov
and
or
ret
add
nop
mov
nop
xor
cld
clc
sub
lods
mov
movs
frstor
pop
jno
push
cmp
xchg
js
jmp
and
call
pusha
mov
outs
js
je
stos
int3
test
adc
adc
xor
enter
adc
shr
gs
xor
sub
aam
cs
daa
cmp
mov
jl
arpl
jo
cld
jge
cmp
and
cmp
cmp
adc
aam
cmp
loopne
ins
out
dec
jl
daa
jl
jns
and
adc
dec
sub
ins
push
hlt
or
push
les
or
gs
mov
je
adc
(bad)
in
jg
push
mov
pop
adc
into
jmp
cld
popf
and
cmp
in
sub
mov
out
xor
mov
ins
xor
mov
mov
fs
mov
fcmovnu
scas
out
stos
ret
cwde
dec
mov
mov
pop
and
mov
cdq
xchg
sub
les
xchg
mov
dec
test
or
cmp
pop
hlt
or
ror
push
xchg
gs
inc
and
call
mov
and
inc
int3
pushf
pop
jo
pop
xor
sub
retf
adc
shl
push
push
mov
scas
inc
in
js
inc
cwde
loope
mov
pop
pop
loope
call
xlat
mov
adc
and
cmp
cmp
loop
dec
and
xchg
stos
enter
sub
pop
cld
(bad)
push
lods
mov
sub
sub
xor
pushf
dec
mov
adc
test
jbe
push
or
inc
and
loope
or
sbb
sub
(bad)
pop
ret
aaa
and
movs
bound
adc
pop
in
add
mov
xor
les
add
pop
dec
xchg
add
sub
fimul
adc
in
inc
js
ds
sub
mov
std
int3
cmps
adc
cwde
mov
mov
js
jo
add
and
pushf
rol
sar
or
inc
call
lods
add
push
hlt
or
and
cmp
dec
das
pop
dec
pusha
movs
popa
lock
mov
jg
add
or
cmc
inc
sbb
and
lods
push
push
jl
inc
or
scas
sbb
xor
mov
xor
cmp
or
jo
sbb
repz
pop
dec
mov
inc
push
loopne
mov
inc
jl
nop
xchg
hlt
cmps
mov
sbb
dec
and
out
add
shr
push
fimul
adc
je
push
sub
ficom
retf
lods
ror
mov
fdivr
xor
fucomi
mov
or
cmp
mov
mov
int
cmp
pop
jmp
sbb
jmp
je
pushf
lods
jae
js
pusha
xor
fwait
jo
mov
inc
into
js
gs
loop
loope
nop
test
mov
sbb
loope
call
sbb
(bad)
mov
jne
sbb
jo
lods
retf
test
and
int3
mov
imul
fs
pop
adc
popf
mov
add
mov
shl
fsub
xor
push
in
mov
inc
xor
call
mov
adc
mov
pop
xchg
or
adc
sahf
add
sub
jo
sbb
fwait
nop
retf
mov
cwde
adc
xor
in
sti
in
and
push
or
xor
push
enter
push
xor
pop
inc
xchg
mov
jbe
in
clc
jmp
into
rcl
pop
pushf
inc
push
xchg
ins
fcomp
cmp
stos
out
or
inc
or
jno
js
nop
cmp
wrmsr
js
outs
and
mov
cmp
mov
xor
call
cmp
lahf
add
xor
fdiv
lahf
(bad)
sub
cmp
fs
sub
xor
je
jb
aad
fsub
int3
test
outs
mov
(bad)
mov
and
push
clc
sub
jne
je
sub
mov
cdq
cwde
dec
mov
cli
mov
xor
adc
scas
xor
and
cwde
mov
push
pop
gs
mov
add
xchg
xor
les
mov
in
or
ins
or
dec
add
shl
adc
mov
fnsave
mov
pushf
dec
sar
pop
clc
fstp
lods
imul
fs
fcom
lock
dec
je
or
or
jo
nop
cs
xchg
shr
hlt
jnp
dec
dec
pop
jle
mov
inc
lea
mov
test
lock
clc
adc
dec
xchg
lock
jo
into
in
ins
mov
out
int3
pop
and
(bad)
jns
push
cmp
and
pop
sbb
mov
xor
mov
int3
xlat
pushf
mov
scas
mov
movs
shr
or
std
cmps
add
retf
adc
mov
jne
sbb
test
int
adc
mov
adc
adc
icebp
mov
lods
add
push
xor
xor
jge
and
ins
or
cs
stc
push
inc
sub
inc
xor
cdq
and
push
pusha
outs
inc
aam
dec
or
cli
mov
sub
add
push
pushf
dec
test
fldlg2
les
js
sar
cmp
or
test
xor
sbb
or
sbb
push
mov
push
and
sbb
cmc
cli
nop
call
adc
and
sbb
loop
push
mov
xor
jb
pusha
or
aam
mov
add
lea
pop
mov
jge
fs
int3
fchs
xchg
lea
xchg
adc
aam
pop
pushf
dec
push
mov
call
mov
clc
loopne
add
js
pusha
in
lahf
mov
dec
adc
cmp
sbb
push
cdq
mov
and
push
or
(bad)
pop
mov
cmp
sti
in
in
sub
add
mov
or
clc
test
pop
call
mov
call
fs
(bad)
fisub
sbb
dec
pop
dec
les
fnstcw
push
ins
std
mov
nop
cmp
pop
test
js
popf
xor
sub
sbb
pop
mov
xchg
inc
jg
in
sub
or
cmc
test
mov
clc
pop
leave
mov
stc
aaa
out
call
mov
in
or
cmp
adc
add
jl
test
xchg
mov
fsubr
loop
gs
xor
xchg
daa
xchg
and
dec
lods
lea
cmp
xor
pop
jmp
hlt
mov
jp
es
xor
call
cdq
in
pusha
sbb
cmp
push
je
jmpw
mov
mov
mov
xor
(bad)
les
sub
mov
loope
hlt
pop
push
cwde
push
and
mov
add
inc
adc
cwde
mov
cli
ins
or
xor
push
in
lock
nop
shl
out
leave
ret
scas
mov
adc
in
or
sub
push
cmp
fs
enter
fdiv
jno
mov
scas
dec
lods
fiadd
scas
and
fidiv
sub
sub
sub
sub
cmp
jle
cld
sbb
jns
stos
jne
popf
out
ins
jmp
aam
push
adc
ret
or
in
jl
sbb
es
and
jo
sbb
test
fs
int3
adc
adc
inc
jae
stc
test
push
jmp
dec
sub
ins
or
and
mov
and
or
xchg
int3
or
loope
test
adc
in
mov
jl
push
xor
pop
add
and
cmp
inc
nop
pop
jb
stos
ins
cmp
cmp
hlt
rol
fdiv
cmps
in
adc
ret
int
sub
dec
mov
lds
add
inc
js
ret
push
pop
mov
dec
add
push
sub
jbe
ins
xchg
lea
mov
sub
xor
std
leave
scas
test
movs
xor
fsubp
inc
aas
and
std
add
enter
pop
lods
pusha
pop
mov
sahf
inc
call
cwde
mov
pop
xor
in
dec
mov
arpl
popf
lock
mov
bound
mov
push
push
(bad)
std
loope
mov
jle
loopne
adc
cmp
mov
fdiv
jo
fisub
repnz
fsub
cmp
sub
mov
sbb
push
xor
mov
out
movs
add
dec
in
adc
mov
sub
cmp
aam
jmp
loopne
add
outs
pop
(bad)
(bad)
mov
hlt
jae
inc
xchg
dec
mov
sbb
mov
test
cmp
push
cwde
mov
clc
sub
xchg
idiv
daa
push
dec
clc
dec
dec
ins
mov
adc
push
mov
test
xor
int3
lock
xor
push
movs
daa
in
add
in
mul
xchg
movs
enter
dec
mov
push
fs
jns
adc
cld
repz
push
dec
ins
dec
hlt
adc
or
loop
call
test
(bad)
js
loopne
dec
mov
pushf
sub
dec
(bad)
adc
mov
movs
sub
in
push
xor
cmp
movs
adc
fadd
sbb
nop
sbb
mov
sub
pop
je
xor
mov
jne
popf
inc
pop
push
sub
mov
inc
(bad)
imul
retf
test
fmul
jnp
jmp
cmps
fsubr
(bad)
cld
out
mov
rcl
mov
mov
or
sub
and
push
movs
mov
popf
mov
jns
add
sar
dec
xchg
cmp
data16
push
pushf
dec
ficom
fcomp
dec
pop
out
xor
mov
pop
mov
adc
sub
retf
aaa
cwde
mov
mov
test
or
or
add
jo
inc
mov
test
in
xchg
movs
fmulp
test
sub
add
cld
mov
in
sub
sbb
pop
(bad)
hlt
int
mov
pusha
push
push
aam
fsubr
gs
mov
mov
mov
pushf
inc
mov
lods
adc
push
in
cmp
xchg
xchg
sbb
sub
cs
enter
adc
push
mov
in
push
rcl
scas
in
mov
loopne
jb
sub
test
int3
cmps
sbb
fadd
test
sub
add
add
movs
lods
clc
push
leave
cld
enter
mov
xor
fdivrp
sbb
gs
cwde
sub
jno
rcl
repnz
mov
leave
cld
in
xor
in
adc
add
(bad)
mov
lahf
enter
dec
shr
mov
or
cmp
jge
and
fadd
add
loopne
dec
xor
scas
jl
xor
pop
jne
dec
sub
nop
cmp
pop
lods
nop
pop
jns
mov
cmp
add
movs
int3
fcmovnu
pusha
fwait
stos
cwde
mov
jl
shl
xor
(bad)
inc
ss
cld
mov
je
inc
ja
sti
mov
cmp
mov
les
scas
jl
pop
adc
add
pop
pop
shl
xchg
rcr
cmp
dec
and
rol
ins
mov
and
pop
dec
jo
jge
inc
jns
sub
les
inc
js
lods
fcomp
mov
fcomp
or
pusha
sbb
or
inc
out
mov
loope
enter
mov
inc
fdivr
call
loope
(bad)
mov
adc
xchg
ins
int3
aam
ins
add
shl
stos
retf
ficom
xchg
stos
pop
ss
pop
inc
xor
mov
pop
movs
lock
cld
pusha
ror
cmp
loopne
enter
dec
aam
pushf
add
mov
xchg
icebp
je
xchg
jge
dec
test
aad
inc
add
add
sub
push
or
jo
push
lods
push
icebp
and
xchg
ss
mov
enter
fisub
add
or
mov
cmps
lods
icebp
xor
cmp
add
aad
clc
jo
push
xchg
sbb
cmc
mov
cwde
dec
push
xor
sahf
int3
cmp
arpl
in
sub
cld
xor
outs
dec
inc
ror
mov
cwde
movs
ins
pop
out
retf
mov
(bad)
ror
sub
ds
inc
jl
clc
pusha
push
mov
add
jl
and
int3
fcmovnbe
mov
scas
or
rcl
aaa
mov
cdq
test
fdivr
(bad)
dec
pop
shl
sbb
mov
adc
mov
pop
cmp
pop
ror
dec
int3
repnz
dec
sub
jnp
push
add
jo
jl
jl
push
xor
cmp
repz
push
inc
sbb
stc
and
dec
mov
xor
mov
jl
movs
mov
dec
hlt
cdq
jg
push
push
xchg
in
sahf
mov
repnz
jnp
fs
sbb
mov
hlt
cmp
cli
and
push
cs
je
fsub
push
jae
sbb
sub
mov
sbb
pop
movs
xor
xchg
xor
ret
mov
scas
push
in
xchg
sbb
xor
shr
sub
sub
test
mov
das
shl
dec
mov
inc
jb
rcl
mov
test
mov
dec
inc
dec
xchg
xchg
sub
xor
fadd
hlt
pop
lods
in
ror
in
jo
push
dec
add
lods
repnz
(bad)
fmul
mov
js
in
pop
inc
nop
push
cmp
jo
es
sub
jo
sub
mov
pushf
xor
mov
cmc
inc
add
daa
or
mov
sti
mov
add
dec
scas
sbb
ins
add
or
test
mov
aam
sub
pop
icebp
int
hlt
call
fcomp
push
test
dec
fs
mov
test
mov
shr
dec
and
pop
and
jle
fs
or
loope
cdq
in
hlt
fs
inc
mov
adc
or
push
push
(bad)
imul
div
adc
je
mov
les
js
inc
xor
daa
movs
mov
outs
in
push
fldenv
add
mov
repz
add
or
leave
pop
cld
inc
cmp
int3
cmp
loopne
or
and
sub
mov
ins
retf
dec
fdiv
shl
mov
js
cmp
ss
fcomp
popf
mov
fst
(bad)
fs
mov
in
and
pop
xor
jl
adc
adc
lods
iret
push
nop
dec
call
inc
xor
push
xchg
ds
bound
ret
jmp
cli
jl
es
mov
adc
mov
dec
mov
xchg
push
mov
ret
jb
cmp
js
pusha
aas
sar
adc
lods
dec
pop
retf
in
and
push
int3
pop
and
test
mul
in
push
inc
mov
or
jmp
mov
push
ja
push
aam
cmp
clc
enter
fsubr
out
in
sub
add
dec
and
push
mov
inc
mov
cdq
fs
rcr
shl
jecxz
loopne
mov
jae
adc
jae
clc
mov
adc
lahf
arpl
inc
add
in
in
cmp
mov
push
ret
add
in
jp
inc
mov
mov
jecxz
call
js
jmp
jo
and
sub
jb
js
lds
mov
mov
ins
inc
add
sub
hlt
add
cmp
mov
inc
pushf
jle
hlt
add
jb
and
in
mov
mov
ror
mov
fsubr
xor
mov
sub
xchg
add
enter
in
ret
pop
jl
add
mov
pop
out
mov
and
mov
sbb
les
mov
push
(bad)
int3
push
mov
dec
sub
xor
mov
pop
dec
fdiv
jmp
loopne
mov
lock
mov
mov
stos
mov
jb
add
hlt
mov
mov
cmp
add
push
fadd
or
data16
inc
lds
shl
int
add
mov
scas
xor
dec
cmp
movs
fwait
xchg
fwait
cmp
sbb
clc
push
sub
call
push
movs
or
xchg
jns
sti
std
add
fsub
cmc
ins
fdiv
sub
jl
in
sbb
je
xchg
sahf
inc
mov
jno
dec
in
int3
xchg
sub
sbb
ins
(bad)
shr
out
dec
push
pushf
and
js
pusha
sub
retf
xchg
adc
mov
sbb
fs
fs
ins
ffree
mov
das
hlt
add
jmp
shl
mov
in
cmp
inc
sbb
add
js
mov
cmp
cdq
int3
mov
ins
sbb
fcom
sbb
fcomp
jle
inc
std
mov
out
test
lock
fcom
pushf
mov
inc
pop
shl
ins
loop
les
push
add
xor
int3
ins
dec
loopne
cmp
add
cmc
cmp
(bad)
sti
in
push
nop
mov
add
mov
shr
cs
push
adc
adc
inc
inc
xor
adc
and
addr16
leave
mov
mov
js
push
sbb
movs
mov
dec
out
(bad)
cwde
adc
aad
pop
shl
cmp
inc
inc
dec
push
loopne
sbb
mov
push
inc
push
add
std
loopne
mov
jnp
ror
aam
sti
cmp
lods
in
les
je
sbb
push
enter
das
or
mov
movs
sbb
pop
mov
pop
pop
and
push
mov
adc
enter
jbe
dec
test
(bad)
fiadd
aam
pop
push
out
sbb
mov
ret
xor
in
ret
dec
mov
mov
and
add
mov
movs
(bad)
test
pop
les
xor
jmp
dec
lea
mov
sub
test
popf
test
and
add
mov
jo
mov
cld
inc
and
mov
enter
lock
mov
imul
mov
xchg
jno
inc
lock
in
aam
pop
pushf
lock
call
and
cmp
test
js
push
dec
rcr
sbb
fwait
jo
jno
sar
mov
cmp
adc
lods
mov
lock
jae
sbb
jo
fdivr
lahf
fsub
push
clc
mov
(bad)
dec
inc
lock
jo
in
xchg
jp
push
or
lock
aam
not
gs
sbb
sysret
js
sub
adc
mov
jnp
ins
addr16
popa
sub
bound
out
(bad)
sti
in
sahf
inc
hlt
mov
icebp
retf
rol
lods
mov
jmp
movaps
push
sub
adc
mov
pushf
aam
inc
jmp
(bad)
cld
fisttp
push
adc
add
(bad)
mov
adc
mov
test
es
das
int3
mov
add
xchg
or
or
add
out
(bad)
cmp
fcom
mov
imul
add
push
call
movs
scas
jns
adc
or
loop
ret
shr
lock
test
call
adc
fldcw
sub
and
dec
push
aam
cmp
arpl
repz
fwait
test
dec
adc
call
bnd
or
jl
lods
push
daa
pop
jnp
pop
mov
jo
clc
xchg
dec
cld
pop
sbb
popa
or
inc
mov
in
jl
ja
(bad)
cwde
rcr
pushf
mov
stc
xor
test
or
jb
in
ss
mov
inc
sbb
call
and
fs
call
adc
lods
fadd
loopne
mov
xchg
add
add
repnz
cmp
(bad)
clc
in
jl
push
pop
xor
daa
dec
push
dec
adc
inc
push
push
ds
mov
mov
lods
pop
test
mov
jo
clc
fadd
add
or
pop
cmp
out
cld
pop
imul
sbb
loopne
loope
add
retf
test
dec
jo
cmp
pusha
jo
cwde
hlt
pushf
mov
jns
sar
push
mov
xor
jecxz
mov
retf
adc
(bad)
lds
dec
and
push
mov
pop
mov
aam
fcom
idiv
movs
dec
cld
cwde
inc
loopne
fadd
adc
call
inc
js
and
or
daa
lock
(bad)
cld
ret
push
pop
mov
shr
add
ja
mov
fstp
adc
pushf
dec
ins
xchg
clc
cwde
and
(bad)
out
es
hlt
xor
cmp
shl
sbb
pusha
je
dec
call
add
hlt
stos
pushf
in
sub
and
int
ret
jmp
push
pop
pop
mov
and
xor
mov
mov
push
xlat
inc
cld
xor
popf
cdq
add
les
adc
xchg
or
xor
cmp
mov
out
or
call
aam
sbb
add
adc
pop
loopne
add
or
cmps
cld
stos
mov
mov
sbb
loopne
push
aam
mov
or
cmp
sub
adc
ror
mov
scas
jbe
cdq
pop
add
movaps
js
call
pushf
dec
mov
mov
jmp
push
mov
and
jne
sub
cmp
xor
mov
dec
call
jns
ins
shl
inc
or
sub
dec
call
bound
mov
mov
and
add
ret
sub
nop
cwde
push
jmp
aam
lods
je
inc
xchg
jmp
mov
sbb
or
xchg
cld
xchg
fldcw
test
hlt
add
inc
call
pop
and
(bad)
bound
add
mov
push
les
push
xor
fsubr
stc
adc
sub
sub
push
dec
fsub
jbe
sub
xchg
mov
(bad)
mov
inc
fadd
ins
dec
adc
js
inc
push
sahf
pop
repnz
movs
and
pushf
sub
fldcw
xor
mov
call
pop
sbb
xor
or
inc
xor
or
inc
arpl
int
pop
cmp
bound
clc
cs
dec
xchg
inc
test
cwde
push
inc
les
or
xchg
cmp
mov
mov
call
(bad)
fsubr
mov
cmp
loopne
lea
lods
mov
xor
lahf
dec
push
mov
leave
js
dec
js
in
shr
sbb
js
xor
retf
inc
or
test
jle
in
pushf
fst
adc
dec
stos
xor
fadd
mov
ds
mov
jge
rcl
add
lods
hlt
adc
xor
rcl
cmp
addr16
hlt
jno
enter
xor
mov
not
scas
jg
inc
ror
mov
xor
push
push
les
dec
mov
hlt
sub
lock
imul
cld
pop
mov
clc
or
test
sbb
ins
clc
neg
pushf
jecxz
in
push
fs
jl
xor
loope
xor
sbb
je
aam
lea
loop
push
test
cmc
mov
or
je
pushf
enter
cwde
aam
jl
add
xor
je
mov
unpcklps
mov
inc
add
cmp
mov
pop
mov
adc
add
lods
int
int3
and
xor
fwait
js
push
inc
push
ins
and
adc
popa
inc
sbb
test
pop
inc
(bad)
fsubr
aad
scas
(bad)
movs
out
jle
add
mov
popa
or
hlt
and
add
cli
xchg
(bad)
sbb
xor
dec
mov
inc
sbb
test
jl
movs
pop
in
adc
lock
movs
shl
and
in
lds
xor
(bad)
in
or
test
imul
shl
cwde
xchg
test
es
mov
xor
ins
push
mov
clc
cdq
pop
pop
or
adc
sub
push
ds
mov
int3
pop
hlt
call
fcomp
ret
sti
jo
shl
pop
push
pusha
mov
call
aam
cmp
cmp
add
sub
add
ja
pusha
mov
dec
lock
jmp
dec
in
sbb
shl
pop
aas
and
pop
mov
adc
movs
rcr
sub
sbb
jo
enter
js
xacquire
push
repnz
push
hlt
inc
dec
dec
mov
out
add
shl
mov
hlt
mov
xor
in
inc
push
ins
inc
inc
and
and
aam
mov
fsub
mov
mov
cld
push
idiv
repnz
jle
inc
xchg
mov
pusha
in
js
cmp
cld
sbb
sbb
jbe
loopne
loopne
mov
aas
fiadd
adc
and
adc
mov
and
ins
add
jle
(bad)
call
xchg
inc
pop
dec
cmp
ror
xor
test
in
rol
lea
test
xor
loopne
mov
std
nop
inc
enter
loopne
push
ins
or
into
or
cdq
mov
scas
ins
aam
pusha
cdq
movs
in
dec
mov
lock
xor
mov
out
mov
sub
cli
sub
enter
enter
push
cld
nop
jno
in
lods
pop
repnz
pushf
nop
and
add
sub
push
(bad)
adc
cwde
pop
(bad)
and
arpl
push
or
pop
add
inc
js
pop
ins
out
(bad)
sub
xchg
jbe
push
inc
cmp
push
mov
cmc
(bad)
xor
sahf
xor
clc
nop
loope
ds
test
fs
mov
call
addps
imul
jle
xor
dec
jp
js
ins
inc
and
mov
(bad)
dec
dec
add
add
jl
dec
cmp
retf
cli
or
xor
out
push
dec
mov
fidiv
cld
sub
add
sahf
dec
aas
out
sbb
retf
sar
lock
call
in
xor
mov
mov
jnp
inc
xor
mov
popf
pop
arpl
aas
pushf
mov
gs
pop
and
leave
xchg
mov
push
mov
cmp
bound
arpl
les
dec
hlt
inc
fdivr
adc
jl
adc
loopne
aaa
js
clc
les
fsub
pushf
dec
mov
xor
jle
mov
cmp
xchg
js
fidiv
adc
mov
pop
dec
in
and
hlt
sar
les
fsubr
sbb
inc
ins
dec
in
nop
in
cmp
fsub
inc
add
lods
mov
pop
jle
inc
lock
cli
dec
shr
push
pop
fstp
imul
fsub
or
push
mov
mov
inc
mov
dec
je
push
in
jbe
jmp
shl
ins
clc
pop
ss
xchg
clc
push
pop
xchg
daa
pusha
dec
sub
jp
dec
mov
mov
fdivr
mov
test
adc
cld
dec
inc
nop
test
push
and
push
push
add
mov
inc
and
enter
lds
mov
pusha
outs
sbb
clc
add
push
call
cmp
fs
jo
xchg
hlt
sbb
loopne
js
es
dec
out
movs
cmp
lds
or
push
rcr
aaa
xor
lahf
xor
pop
mov
leave
jo
sbb
sar
sbb
pop
and
cmp
lods
(bad)
dec
xor
add
rcr
pop
jnp
pushf
dec
inc
addr16
cld
and
int3
(bad)
pop
pusha
add
jb
arpl
aad
jp
fs
or
aam
sub
and
mov
inc
cmps
dec
stos
aam
sbb
jo
or
sub
xor
add
outs
test
pop
lods
std
adc
fdivr
movs
pushf
imul
push
fcomp
add
ja
inc
sbb
cwde
pushf
sbb
loopne
push
pushf
shr
out
mov
and
add
clc
dec
sub
adc
adc
pusha
jl
and
dec
fnstcw
lods
jno
inc
sbb
xchg
rcr
daa
push
fild
inc
xor
gs
test
ins
pop
sbb
mov
cmp
je
loopne
in
les
jmp
adc
hlt
mov
out
shr
call
adc
xor
fwait
test
enter
mov
inc
test
mov
and
lods
mov
in
mov
movs
mov
js
pop
ficom
movs
xor
dec
and
cld
in
dec
push
pushf
mov
mov
mov
and
nop
imul
xor
lods
movs
cld
pop
jns
rcr
xor
dec
out
xor
test
cwde
sub
cld
dec
and
hlt
stc
push
cmp
loop
sbb
pop
fsub
push
pop
fiadd
movs
js
sub
push
mov
ins
cs
sar
push
or
add
out
stc
and
inc
or
loopne
in
adc
imul
and
push
hlt
cdq
stos
js
stos
cld
stos
scas
lock
test
enter
adc
push
dec
lock
les
ficomp
sbb
sbb
or
xor
mov
jno
mov
sub
loopne
rol
mov
jns
lods
inc
lea
adc
and
sub
push
loopne
push
aad
mov
pop
pop
inc
pop
stos
add
pop
sbb
push
pop
sbb
jo
fcom
sbb
sbb
fcomp
call
test
or
aam
fsubrp
sbb
(bad)
mov
clc
push
add
cld
hlt
es
pop
sub
and
dec
dec
mov
sbb
jb
imul
push
and
jp
add
inc
add
int3
loope
xor
push
xchg
mov
fstp
fild
xor
dec
nop
pop
inc
mov
sbb
mov
or
shr
or
hlt
adc
ins
inc
outs
pushf
dec
pop
xchg
sbb
adc
les
je
mov
(bad)
sbb
or
sub
sub
and
or
push
mov
xor
cmp
adc
pop
sub
inc
loopne
rol
movs
mov
dec
xor
in
and
and
or
inc
xor
sbb
loopne
fadd
ins
daa
xchg
bound
hlt
xor
adc
fdivr
inc
mov
fidiv
shr
push
test
or
pop
and
sbb
xchg
adc
jnp
mov
mov
adc
mov
imul
push
aam
int
add
int
sub
out
sub
mov
mov
outs
sbb
add
ds
xchg
int3
bound
enter
pop
test
fsubr
push
mov
dec
adc
fs
push
xchg
push
dec
test
jmp
pop
stos
in
inc
push
aad
jl
je
xchg
retf
in
xor
enter
nop
repnz
cmp
retf
pop
push
push
adc
mov
push
jl
mov
mov
jge
cmp
imul
or
push
lock
fstp
mov
mov
js
pushf
enter
loopne
push
xor
jl
and
in
dec
rcr
mov
cmp
and
dec
xchg
test
or
cmp
add
outs
pop
mov
je
sahf
sub
add
jp
clc
sbb
adc
mov
(bad)
mov
ds
adc
adc
cwde
mov
push
cmps
(bad)
mov
cmp
dec
fmul
adc
test
test
in
cmp
xor
and
clc
push
leave
in
arpl
sbb
add
add
and
(bad)
cdq
loopne
push
sub
xchg
cmp
sar
fs
sub
cld
ret
add
mov
or
mov
sbb
loope
sub
cmp
fcom
add
xor
xchg
aam
cld
rol
sbb
xor
mov
and
mov
in
xchg
dec
lock
sub
in
popa
nop
adc
lock
mov
sbb
push
mov
xor
mov
adc
rcl
push
pop
cmp
push
mov
pop
inc
mov
or
push
fs
inc
loopne
cs
sbb
lods
pop
out
scas
loop
push
out
xchg
movs
aad
fstp
adc
jae
clc
stos
mov
jb
aaa
loope
call
into
inc
js
pop
test
loope
pushf
lods
cwde
inc
mov
dec
lods
xchg
xchg
sbb
cld
lods
mov
inc
clc
mov
or
jle
sbb
add
mov
hlt
ret
inc
dec
sub
dec
cmp
xor
xchg
sbb
adc
xlat
sbb
add
sub
ins
je
fmul
mov
fdiv
push
ret
test
jmp
and
test
fmul
xor
dec
clc
mov
pushf
popa
push
mov
mov
jl
pushf
fnstenv
mov
movs
hlt
mov
lods
inc
mov
mov
lock
lock
loope
push
fsubr
dec
jne
pop
lods
add
leave
jl
inc
and
mov
mov
aam
cli
inc
sahf
mov
call
xchg
push
fdiv
and
sbb
mov
add
jp
outs
or
jae
mov
in
push
dec
xor
mov
pusha
sub
mov
lods
fdiv
or
clc
cmps
xchg
int
xchg
jecxz
push
or
or
inc
and
mov
mov
js
cs
cld
popa
sub
adc
or
push
(bad)
xor
fs
sub
mov
test
nop
lahf
clc
xor
mov
ret
cmp
sbb
xchg
js
jns
shl
and
test
js
in
or
loopne
popf
cmps
add
pop
jg
cwde
cld
jp
xchg
jl
cmp
fiadd
test
ficomp
pop
hlt
std
test
jne
fsub
add
sub
adc
adc
xor
dec
imul
push
mov
cmc
jmp
add
mov
mov
fcomp
pop
test
mov
adc
cmp
shr
sbb
sbb
clc
cmc
add
stos
je
hlt
imul
outs
sbb
int3
retf
mov
shr
into
nop
iret
pop
cmp
dec
call
push
lods
mov
sbb
sub
sub
clc
sub
jo
add
shl
mov
push
cmps
sbb
push
popf
mov
add
jle
xchg
out
jnp
dec
call
push
pusha
cld
fdivr
and
pop
or
icebp
fs
jp
inc
mov
ins
pop
call
iret
imul
push
cwde
aam
pop
sub
outs
lock
mov
out
in
mov
enter
push
or
ja
clc
push
rol
and
adc
or
jge
outs
clc
lea
mov
sub
add
movs
inc
std
pusha
mov
jne
pusha
xlat
call
push
stc
mov
clc
je
sbb
jmp
outs
sbb
mov
pusha
push
mov
sbb
icebp
pushf
test
mov
adc
fdiv
frstor
cmp
mov
inc
jns
push
push
push
sub
dec
sbb
push
mov
dec
int3
xor
dec
fidiv
mov
sub
sbb
fs
dec
pop
loope
xchg
mov
dec
mov
adc
loope
test
xor
xchg
add
ret
dec
sti
pusha
rsm
jl
pop
test
loopne
clc
out
inc
or
or
test
imul
cmp
adc
pusha
int
mov
lods
push
push
dec
sbb
cwde
xor
enter
inc
push
xchg
clc
xor
pop
jl
xchg
and
jae
add
adc
je
jbe
and
add
and
cmp
loopne
dec
add
jb
dec
fs
lods
sbb
(bad)
sbb
in
dec
add
sbb
sbb
xchg
jo
test
movs
pop
jns
mov
cmp
inc
enter
lahf
mov
pushf
in
bound
fst
aam
sahf
call
push
sub
in
rcr
jo
and
jo
ror
mov
fsub
and
xlat
dec
cmp
mov
clc
fxam
stos
jl
and
mov
adc
dec
stos
mov
cld
in
and
xor
jg
mov
xchg
or
and
in
div
pop
movs
push
or
in
mov
sub
retf
inc
pop
cld
(bad)
xchg
rcl
jo
fcomp
push
or
shl
xor
mov
inc
cmp
cmc
mov
clc
jne
pushf
sbb
jne
inc
adc
aaa
clc
and
push
sub
ins
cdq
aam
js
addr16
dec
fild
sahf
ret
(bad)
cmp
mov
or
ret
movs
cld
add
shl
mov
and
jo
call
sub
inc
scas
int3
xor
pop
pushf
aad
mov
mov
jo
adc
cmp
clc
pushf
jmp
xor
pop
shl
bound
sbb
add
retf
sub
dec
lea
lds
test
xor
add
or
xchg
test
xor
add
clc
movs
pop
jmp
mov
out
paddsb
adc
cwde
push
imul
sbb
pushf
ins
loopne
ins
sbb
popa
clc
shl
js
in
call
jo
sub
inc
fldcw
add
fdiv
hlt
add
in
jbe
cmp
cld
push
shr
movs
add
pushf
xchg
inc
pop
nop
inc
shr
cwde
gs
mov
aam
test
fst
addr16
popf
push
mov
(bad)
cwde
(bad)
cmps
lods
cwde
add
cld
xchg
sub
xchg
add
hlt
add
lods
cwde
mov
mov
mov
gs
hlt
in
cmp
test
outs
hlt
inc
mov
mov
fs
cmp
clc
test
adc
and
mov
add
movs
and
test
push
mov
mov
rcl
mov
scas
adc
xor
call
les
jmp
pop
pushf
and
in
in
xchg
and
dec
mov
fs
inc
fsubr
and
(bad)
je
popf
pop
test
test
cmps
hlt
int
xor
int3
in
mov
in
mov
mov
mov
cmp
pop
sub
jae
cmp
or
dec
or
pop
mov
cmp
dec
mov
and
neg
in
push
lods
pop
cs
pushf
int3
scas
mov
pop
add
in
sbb
lea
out
xor
and
out
add
and
loope
xor
adc
or
push
rcr
repnz
cmp
sub
outs
call
loop
xor
sbb
loopne
inc
(bad)
sar
outs
loopne
inc
das
aam
stc
je
pop
dec
sub
arpl
push
rcl
jg
fs
in
(bad)
cld
mov
and
cmp
xor
fisub
jbe
movs
sub
fadd
fcom
adc
pop
inc
sub
(bad)
and
fdiv
mov
gs
or
aam
mov
sbb
pusha
and
sub
sub
fisubr
push
xor
scas
in
sub
and
add
xchg
adc
aad
pop
mov
dec
push
int3
cmp
inc
enter
fdiv
lods
test
jo
nop
pop
xor
hlt
in
jmp
mov
in
(bad)
(bad)
fmul
or
sbb
adc
les
frndint
iret
mov
int3
pushf
cmps
inc
pop
imul
push
xor
pop
mov
icebp
mov
or
test
je
mov
push
ins
mov
mov
mov
call
sbb
push
sub
xchg
jb
imul
push
std
push
sbb
icebp
mov
stos
push
lods
push
adc
hlt
dec
xchg
mov
fdiv
adc
cdq
test
fs
out
or
test
cmp
jo
fdivr
shl
call
push
or
hlt
cmp
test
enter
lds
sbb
aam
jmp
add
jge
aam
enter
adc
adc
xor
daa
mov
mov
add
cwde
ins
push
xchg
sbb
push
xchg
aad
mov
stos
cmp
jo
dec
ficom
fimul
cwde
ins
scas
xchg
mov
inc
lea
daa
mov
int3
adc
sbb
add
jo
mov
test
add
fst
test
shr
cmps
imul
push
pop
jo
dec
ins
rol
movs
pushf
das
js
cs
adc
jl
cmps
sbb
dec
loopne
popa
shl
xor
sbb
test
in
jge
xor
xor
cmp
mov
fs
push
pushf
and
or
clc
stos
pusha
and
daa
or
test
jo
rcr
jl
in
push
fldenv
pusha
scas
xor
fs
data16
(bad)
mov
pop
enter
mov
pushf
xor
pushf
leave
les
jl
push
and
ins
push
cwde
js
shr
test
pushf
inc
push
jmp
ja
jo
hlt
add
sub
fcomp
outs
add
sub
(bad)
cli
je
bound
cwde
mov
dec
call
hlt
sbb
push
or
mov
xchg
lods
test
and
mov
cmp
div
mov
xor
sbb
(bad)
je
dec
mov
cmp
push
adc
xchg
bound
and
dec
ficomp
sbb
jne
inc
(bad)
or
lock
(bad)
fstp
test
and
mov
lods
add
add
inc
js
push
add
jb
dec
dec
inc
lock
and
icebp
fmul
mov
test
rol
ins
mov
loop
or
hlt
fsubr
pushf
jb
fcom
rol
mov
je
in
inc
in
adc
add
or
push
sar
std
adc
jg
cmp
sub
push
test
nop
jmp
mov
mov
lods
sub
lock
call
xchg
test
lods
daa
les
data16
fst
mov
mov
dec
int3
xchg
clc
sbb
popa
inc
test
mov
xchg
push
pop
pop
bound
sbb
pop
or
(bad)
(bad)
dec
xor
mov
push
test
adc
les
or
xchg
call
and
dec
mov
and
or
outs
in
sbb
ins
mov
sub
aam
in
adc
push
dec
sub
add
xchg
xor
shl
pop
cmp
xor
dec
or
sub
jb
adc
adc
pop
aaa
mov
adc
sbb
ja
cwde
mov
fcom
push
sub
add
neg
adc
pusha
inc
shr
mov
push
or
dec
fcmovb
pushf
pushf
mov
cmp
lea
xchg
fadd
jl
movs
pop
loopne
adc
nop
or
loop
jg
cmp
cdq
dec
out
bound
add
cmp
adc
movs
fsubr
cwde
mov
or
pop
je
cmp
mov
int
cmp
cld
add
mov
sub
and
jnp
inc
and
push
sub
or
(bad)
and
rcl
mov
push
ss
fisttp
push
cmp
jbe
and
fs
test
add
cdq
mov
js
(bad)
mov
sbb
in
push
imul
out
hlt
scas
cmp
sar
cmp
ins
pop
movs
dec
jmp
call
in
inc
mov
push
push
xor
jo
sbb
and
into
jo
dec
test
push
cld
ins
hlt
mov
fadd
push
push
(bad)
fdiv
and
js
add
pop
and
xor
cmp
dec
push
push
jle
bound
cs
xchg
mov
pushf
cmps
inc
fisub
xor
add
or
shl
xchg
movs
test
movs
jnp
inc
lahf
dec
test
ins
adc
and
dec
inc
dec
dec
movs
add
lock
rol
ds
test
add
enter
xchg
hlt
lods
pop
call
or
mov
pop
stos
pop
repnz
clc
and
rcr
clc
xor
ret
mov
daa
adc
cmp
in
fsubrp
xchg
pop
cmp
les
xor
and
jl
cld
push
cmp
jo
hlt
test
ins
clc
or
mov
sbb
test
test
pop
and
jo
jns
(bad)
nop
push
cwde
jo
sbb
movs
mov
jl
cmp
push
mov
push
dec
cmp
cmp
jo
stc
sbb
add
mov
inc
int3
xchg
pop
sbb
xor
dec
movs
xor
js
sub
fmul
clc
xor
cmp
cmp
xchg
mov
adc
sbb
adc
test
mov
xor
mov
inc
sbb
fs
mov
pause
push
cli
jne
push
add
inc
sub
sbb
jo
pusha
sbb
ins
xchg
sbb
push
pop
shr
jb
jno
mov
lods
nop
add
dec
mov
in
lods
push
(bad)
and
jmp
push
dec
je
mov
add
mov
cdq
shl
and
ins
sbb
add
push
and
mov
loopne
pop
adc
ficomp
add
cwde
out
mov
mov
lock
mov
mov
hlt
cwde
mov
pop
mov
lods
int3
cmp
pusha
mov
jmp
ins
loope
push
ins
sbb
les
js
in
sub
add
rcr
push
or
dec
mov
jl
dec
mov
inc
cmp
cmp
pop
dec
imul
mov
aam
jp
inc
jmp
(bad)
sbb
inc
xor
movs
xchg
mov
call
sbb
cmps
push
xor
int3
mov
aam
int3
cmp
inc
lods
fdivr
lods
lock
ror
mov
pushf
fst
add
and
dec
add
dec
loopne
in
pop
add
or
hlt
cs
aam
jl
mov
sbb
mov
jg
in
pushf
(bad)
fdiv
lods
pop
xor
or
loopne
neg
cs
push
neg
push
push
jmp
in
int3
pop
int3
adc
sub
mov
mov
fst
scas
dec
cmp
add
test
mov
cwde
hlt
sti
pushf
mov
icebp
lods
clc
adc
call
int
in
and
sub
repz
inc
and
push
and
xor
push
rcr
sub
popa
mov
int3
aam
clc
call
in
das
xchg
mov
push
(bad)
cmc
dec
lods
xchg
hlt
cwde
pop
lock
inc
mov
fcomp
jg
loop
mov
cdq
and
loope
and
ds
mov
shr
or
nop
shl
jb
lock
out
jnp
nop
mov
push
push
aad
jmp
or
(bad)
out
mov
or
add
adc
mov
data16
mov
call
out
pop
cmp
imul
popf
jmp
mov
xchg
xor
cld
lock
js
outs
nop
neg
and
or
cli
in
sbb
xor
cdq
imul
jge
inc
push
fcomp
movs
pushf
push
test
dec
call
call
in
mov
pop
out
xor
mov
je
gs
sbb
or
shl
and
gs
das
push
cmovl
nop
xchg
mov
mov
stos
bound
push
and
adc
push
std
cmc
in
fcomp
mov
sub
mov
push
fst
sub
or
in
stos
(bad)
lock
mov
inc
sub
hlt
mov
mov
aad
mov
mov
test
or
lock
push
test
fst
adc
fwait
mul
push
aam
jl
outs
xchg
in
fld
ss
adc
or
sar
aaa
fidivr
jecxz
sub
ins
and
jmp
test
es
int3
sahf
movs
ins
adc
push
xor
shr
jl
fs
pop
neg
sbb
test
(bad)
enter
sub
sti
mov
test
je
xor
add
or
cld
xchg
mov
fdivr
cmp
xor
cmp
sar
xchg
(bad)
out
xor
jno
or
loopne
call
pop
pop
std
retf
std
fcom
adc
pop
lock
shl
gs
jl
mov
test
add
or
mov
mov
mov
sub
int
je
pushf
call
push
sub
fucomip
or
cmp
and
add
xchg
into
cld
lds
and
mov
push
add
push
add
or
adc
in
stos
cmps
lock
call
and
pushf
pop
xor
add
mov
clc
in
dec
je
das
mov
add
movs
aam
aam
(bad)
inc
add
xor
cmp
or
in
fcom
fsubr
push
mov
retf
mov
pop
and
push
movs
inc
pop
cmps
inc
jle
cli
pusha
shr
ror
xor
pushf
bound
test
add
pop
pusha
push
(bad)
mov
sub
mov
out
in
mov
pusha
hlt
cld
neg
and
adc
sub
mov
int
mov
fcom
mov
je
bound
sbb
cmc
mov
adc
mov
xor
out
cmps
int3
or
enter
or
das
mov
imul
pop
inc
inc
cmps
lods
sub
mov
sub
enter
mov
dec
sbb
nop
(bad)
sbb
or
xchg
test
mov
mov
pushf
sub
adc
int3
vpsubsb
sbb
xor
fdiv
mov
cmp
push
pushf
(bad)
in
gs
and
test
icebp
adc
cmp
std
(bad)
enter
pop
movs
add
loopne
jo
cmp
js
popf
clc
add
inc
jmp
js
in
fdiv
mov
stos
and
cld
js
rcr
cs
enter
clc
push
add
clc
in
sub
hlt
and
data16
push
jl
push
sbb
std
fs
add
pop
cmc
int
test
jo
xor
movs
xor
sbb
cmp
repnz
jmp
test
clc
or
je
fdivr
xchg
adc
js
sbb
dec
sub
les
push
in
sbb
jbe
lahf
test
jo
jnp
inc
mov
jmp
loopne
xor
int
je
mov
and
jle
pushf
sub
jae
js
fdivr
iret
inc
adc
cwde
cwde
pusha
push
ins
add
outs
call
fs
cld
pop
repnz
popf
sbb
mov
mov
div
or
hlt
in
std
test
mov
and
mov
ret
push
dec
sub
jge
js
ins
push
mov
mov
dec
fisttp
xor
rol
push
pushf
mov
pop
out
js
sahf
cmp
xchg
jmp
and
aam
add
or
mov
dec
loop
pop
push
xor
jo
or
add
test
shr
xchg
in
les
xchg
loopne
pop
inc
aas
push
test
ror
and
inc
jo
sub
cmp
xchg
dec
mov
inc
sbb
mov
and
iret
fsub
mov
adc
cmp
clc
aas
in
cld
inc
cmp
mov
and
out
inc
add
mov
pusha
sub
daa
aam
push
ds
or
push
mov
fst
fs
xor
retf
cmps
push
mov
mov
or
dec
out
int3
adc
loopne
or
cwde
out
ror
inc
aam
cld
sub
sub
xor
pushf
lahf
push
shr
mov
pop
jl
and
movs
sbb
mov
lods
and
iret
pop
add
sbb
xor
xchg
(bad)
fsubr
je
cld
sub
mov
ins
xchg
mov
pusha
sbb
xchg
les
xor
enter
stos
xchg
clc
test
dec
lods
adc
cwde
ds
imul
mov
out
pop
sbb
sbb
cmp
pop
cmp
dec
enter
and
pushf
(bad)
aad
jl
add
rcr
int3
inc
mov
adc
sbb
sub
mov
pop
mov
pop
dec
jbe
pushf
adc
cmp
or
inc
mov
cld
bound
xchg
jl
movs
push
mov
scas
inc
lock
dec
int3
dec
js
iret
fidiv
enter
mov
in
or
jne
mov
(bad)
cld
ret
add
sbb
pushw
jb
mov
cmp
inc
and
hlt
cmp
dec
xchg
dec
cmp
add
inc
mov
ret
cld
sti
shl
in
cld
adc
hlt
jo
shl
push
rcl
(bad)
loopne
retf
int3
mov
inc
(bad)
popa
cmp
or
mov
jae
pop
imul
lea
xchg
cmp
pop
and
or
inc
test
aad
add
sub
aam
sub
shrd
popa
int3
call
push
or
in
xor
mov
mov
iret
movs
xor
pop
icebp
hlt
xor
sbb
std
and
sub
jo
mov
jno
arpl
fstp
adc
lock
mov
rcl
hlt
jecxz
add
icebp
nop
sub
adc
inc
aad
mov
call
sub
xchg
jp
ret
in
cwde
xchg
adc
es
clc
fcmovb
js
jne
cwde
js
mov
jl
inc
les
xchg
mov
ins
mov
sbb
rol
sub
add
into
jl
popa
and
sub
mov
int3
fadd
and
inc
push
ins
push
adc
cmp
inc
push
adc
fsub
scas
and
push
fadd
es
outs
mov
xchg
imul
in
dec
or
and
das
jb
mov
mov
imul
inc
xor
cld
call
dec
add
cmps
rcl
mov
in
test
cmp
cmps
push
std
mov
ja
pop
adc
(bad)
in
jb
or
outs
movs
xor
xor
push
fadd
sub
mov
inc
(bad)
lock
hlt
sub
mov
adc
cld
push
add
ret
xor
call
pop
sbb
fs
cmp
sbb
lock
mov
cmc
xchg
ins
cmp
mov
pusha
jg
push
sbb
cmps
test
mov
sub
jecxz
call
push
call
adc
int3
sub
das
adc
cmp
mov
sbb
sub
in
sub
or
loop
mov
sub
fmul
xchg
hlt
jmp
sbb
clc
mov
or
adc
test
pop
jl
mov
add
rcl
mov
xchg
dec
xor
or
xchg
js
sbb
mov
gs
or
mov
movs
add
mov
ja
sbb
ins
mov
and
and
dec
push
fmul
mov
aam
mov
cs
and
stos
push
xor
xchg
call
aam
lods
mov
sbb
jne
fsubr
push
cmp
sahf
cs
test
cmp
jl
pop
into
js
lods
sub
inc
pop
lock
nop
icebp
sbb
jb
lods
outs
xchg
dec
adc
mov
sub
push
shl
fs
cdq
lahf
add
bound
cld
aam
xor
sbb
movs
sub
inc
(bad)
mov
loop
dec
dec
xor
in
and
sbb
pushf
inc
and
dec
call
rcl
mov
lods
push
iret
lock
sbb
adc
mov
dec
mov
int
xor
jp
push
xor
pop
mov
xchg
fld
test
push
push
and
call
mov
je
adc
adc
mov
mov
in
fsubr
xor
push
(bad)
dec
push
and
test
pop
sub
in
inc
mov
and
ins
pop
mov
dec
push
sub
in
or
xor
jl
pusha
lock
and
ins
jmp
xor
adc
addr16
pop
jmp
fst
cli
in
iret
sub
dec
pop
xor
jo
fcom
mov
and
movs
call
test
dec
mov
ret
aam
ret
and
cmp
rcl
test
fs
xchg
and
movs
push
inc
call
ins
or
loopne
add
stc
mov
jg
add
add
mov
xchg
mov
shl
jge
pop
mov
adc
push
push
push
inc
sub
mov
cwde
shr
pushf
leave
(bad)
fmul
test
icebp
icebp
or
xchg
mov
xor
cld
cld
fidivr
pushf
(bad)
clc
rol
(bad)
rcr
lods
in
xchg
js
loopne
ins
daa
jge
clc
xlat
mov
pop
js
or
pop
lods
mov
into
sub
inc
xor
test
dec
add
jmp
ret
sub
add
add
xchg
pusha
aas
(bad)
cdq
fsub
inc
mov
push
add
mov
shr
mov
sub
je
cld
jns
movs
int3
or
into
nop
(bad)
mov
call
mov
je
cwde
adc
movs
add
dec
pusha
cmp
push
cmp
xor
gs
mov
xor
hlt
jmp
adc
in
cmps
inc
or
mov
nop
mov
mov
shr
dec
mov
sub
int
adc
sbb
dec
xor
jge
and
(bad)
int3
aad
pop
test
push
movs
adc
cmp
test
std
mov
mov
xchg
adc
hlt
mov
nop
or
push
loop
into
test
mov
aas
nop
dec
xor
and
bound
xor
int3
pop
jl
je
and
inc
xor
dec
cmps
loopne
sbb
mov
inc
les
mov
in
test
push
lock
or
ficom
je
enter
inc
loop
inc
push
sbb
sub
sub
and
jl
or
dec
rcl
fsub
test
in
mov
hlt
(bad)
mov
rol
(bad)
adc
cmp
test
dec
cwde
lods
rcr
mov
je
xchg
push
jmp
and
jge
add
mov
xchg
jo
push
xor
lods
test
inc
jmp
sub
push
adc
jl
in
push
aam
mov
or
(bad)
in
sbb
rcl
sub
sbb
and
dec
xor
lock
mov
mov
and
pop
call
xchg
stc
call
sub
outs
mov
rcl
or
xchg
stos
pushf
mov
adc
fmul
mov
leave
(bad)
push
aam
rcl
pop
jb
cmp
sub
and
mov
(bad)
fs
in
push
ins
inc
jne
pusha
adc
cwde
sub
movs
sbb
xchg
push
loopne
test
pusha
call
mov
ror
test
shr
shl
and
dec
fist
fs
adc
test
push
mov
aam
or
add
mov
dec
mov
retf
(bad)
fsubr
mov
mov
out
nop
pop
fdiv
sbb
adc
inc
clc
fadd
sub
sbb
jl
leave
mov
dec
sub
push
mov
in
dec
inc
inc
lods
dec
call
pushf
sbb
popa
mov
stos
add
xor
daa
mov
dec
pusha
sub
sub
dec
mov
shl
jl
es
int3
fiadd
les
inc
mov
test
lods
jo
(bad)
int3
(bad)
in
call
stos
into
rol
daa
pop
sbb
mov
je
and
dec
iret
aam
pop
fadd
in
xor
call
sbb
dec
xor
adc
movs
adc
xor
mov
lea
ja
jl
inc
shl
js
shl
or
in
out
pop
mov
ret
mov
mov
mov
out
test
lods
dec
xchg
push
xor
test
into
test
cld
in
jmp
mov
jmp
ret
fmul
mov
sbb
adc
xor
aam
pop
bsf
mov
jns
pusha
mov
fsub
int
xor
pushf
jmp
push
or
lock
sub
shr
mov
sub
das
sbb
xor
mov
add
pop
add
sub
mov
pushf
enter
cwde
dec
pusha
aam
lds
in
mov
mov
sbb
add
mov
mov
movs
and
inc
xor
sub
and
aam
into
lock
dec
lock
cwde
sbb
dec
and
fsub
sub
add
pop
pop
inc
pop
nop
push
push
sub
pop
(bad)
or
mov
jl
pop
lock
push
adc
or
push
add
mov
mov
add
push
fcmovnu
xor
add
cmp
inc
inc
sar
push
add
add
lods
js
clc
ds
add
mov
pop
add
mov
ins
shr
pushf
test
cmps
clc
sbb
gs
dec
pop
pop
in
pushf
clc
mov
jmp
hlt
nop
cmp
mov
dec
pop
pop
pusha
sbb
inc
jg
std
mov
dec
and
dec
div
outs
hlt
push
or
pushf
pop
mov
xor
push
dec
mov
jmp
pop
test
shr
cwde
inc
push
je
mov
mov
sbb
jo
push
mov
pop
aam
dec
and
movs
fdivr
rcr
rol
enter
rol
fdivr
push
aas
cmp
inc
inc
stc
clc
loope
sub
xchg
and
dec
jo
xor
push
sbb
jo
ror
int3
or
fwait
test
aam
jl
cmps
ret
xchg
loop
cwde
les
dec
mov
cmp
movs
in
sbb
xor
sub
jo
fmul
push
pop
xchg
xchg
pusha
inc
bound
push
push
jl
sub
mov
sub
les
int
in
int3
aam
pushf
(bad)
or
out
sbb
sub
jo
cmp
cdq
int
test
push
test
cs
or
add
dec
pop
lock
lock
je
mov
pop
cmc
in
dec
lds
cld
xchg
adc
aam
push
test
add
xchg
mov
adc
sub
cmp
and
mov
into
jl
sbb
xor
fcom
nop
mov
pop
push
mov
ins
mov
in
mov
mov
xor
dec
test
jbe
xlat
loopne
or
lea
fs
cmp
enter
cwde
int3
inc
hlt
jecxz
pusha
les
sub
(bad)
cmp
movs
and
daa
(bad)
in
xchg
enter
fwait
shl
in
cmp
adc
or
push
scas
fsub
and
sbb
lods
dec
fdiv
mov
mov
inc
mov
sbb
je
jo
adc
mov
pop
inc
inc
test
movs
mov
xchg
hlt
int
or
fmul
xchg
mov
xor
std
sub
pusha
out
jmp
dec
push
jl
sbb
xor
jmp
sub
push
enter
in
mov
cwde
push
xlat
int3
cmp
mov
lea
popf
sbb
dec
xor
enter
cld
dec
mov
ins
push
xor
sub
cli
mov
sbb
mov
cmp
mov
or
loopne
fwait
mov
mov
dec
cmp
adc
pop
cmp
test
inc
jmp
je
pop
sub
cmp
leave
or
pop
adc
clc
sub
inc
in
xchg
loopne
cmc
pop
lods
or
adc
inc
ror
mov
call
sub
pop
pusha
cs
in
pop
and
or
mov
cld
and
je
arpl
jl
into
sbb
sbb
test
jo
push
add
les
mov
mov
test
cwde
js
out
push
add
lock
xchg
sar
sbb
stos
cld
xor
cmp
jae
sub
and
enter
imul
and
loopne
movs
cld
pusha
std
mov
jecxz
or
stos
add
xor
sbb
inc
ins
in
adc
addr16
lea
aam
fst
(bad)
retf
clc
inc
les
stos
nop
in
js
jb
xchg
sti
rol
pop
sbb
aaa
mov
sub
(bad)
adc
ds
mov
mov
push
aam
jl
in
cmp
cld
mov
sub
inc
out
pop
cdq
adc
repnz
repnz
jo
inc
or
aam
fst
sbb
add
int3
je
pop
loopne
pusha
inc
cmp
scas
jle
push
jle
or
(bad)
jo
add
fimul
xor
mov
test
jl
test
or
jg
cmp
xor
push
arpl
mov
js
adc
enter
mov
mov
lods
add
mov
pop
xchg
jecxz
jmp
mov
call
cwde
ror
clc
jae
sbb
and
cld
cli
mov
aas
retf
(bad)
inc
test
mov
addr16
(bad)
hlt
and
jns
add
sbb
call
ret
loopne
int
shr
add
sub
js
pop
int3
sbb
mov
test
pop
sbb
inc
push
cmp
mov
jle
dec
mov
sbb
(bad)
mov
sbb
xchg
enter
xchg
movs
and
or
sub
retf
cmp
daa
mov
mov
adc
mov
push
adc
rcr
pop
adc
xchg
in
sub
in
add
pop
jmp
ins
rcr
pop
shl
pop
ja
sbb
inc
ins
in
adc
jl
add
inc
pop
cmp
out
inc
cwde
sar
pop
xchg
push
add
shl
(bad)
stos
shl
jle
sbb
mov
int3
shr
push
sar
in
cmp
xor
jo
cmp
cmp
push
nop
pop
in
hlt
jb
imul
mov
xchg
jle
fs
sbb
imul
pushf
mov
push
ror
loopne
fcom
leave
clc
pop
mov
lock
push
pusha
or
push
and
lahf
loopne
retf
adc
test
pop
inc
inc
test
not
int3
jl
in
mov
or
inc
mov
nop
sub
shr
fcomp
mov
add
sbb
mov
xor
fs
or
sub
in
pop
repz
in
or
dec
add
in
in
mov
lock
cld
je
xchg
ss
test
clc
sub
jge
retf
pop
sub
adc
pushf
jno
js
loopne
or
adc
xchg
adc
jb
rcl
add
inc
and
test
cmp
push
dec
xchg
jmp
ret
jo
xchg
aam
mov
imul
cwde
test
stc
mov
nop
jb
adc
inc
push
movs
mov
rol
sub
cwde
mov
sbb
fsub
inc
cmp
cld
pop
push
pop
js
in
add
xchg
cli
mov
adc
dec
mov
in
jl
in
or
mov
lahf
scas
pusha
push
pop
sbb
inc
xchg
ins
sbb
clc
ror
into
add
mov
or
mov
add
and
aad
leave
mov
sbb
mov
pop
sahf
xchg
push
outs
dec
xchg
adc
add
mov
hlt
mov
js
sar
pop
xor
call
pop
inc
cli
popf
and
adc
mov
pushf
(bad)
push
sar
cwde
sbb
xchg
gs
pop
sbb
sbb
jnp
xor
fst
push
pushf
inc
test
push
pop
pop
adc
cli
test
mov
mov
popf
adc
mov
loopne
aaa
shl
jno
hlt
pop
or
test
xchg
cmp
inc
xchg
or
jmp
hlt
test
aam
pop
leave
pop
mov
pop
jl
push
or
pushf
arpl
imul
jbe
in
(bad)
fnstenv
aas
stos
sbb
call
mov
or
out
imul
int
pop
add
add
add
aam
(bad)
adc
dec
mov
popa
pusha
sub
push
or
fadd
jmp
(bad)
nop
jmp
push
out
lock
mov
sbb
adc
enter
enter
scas
push
gs
cmp
pop
or
sub
pushf
shl
fs
xor
jbe
out
mov
sub
jo
pop
xchg
test
mov
cmp
jbe
sub
push
test
je
pop
in
sbb
stc
push
sbb
adc
push
and
pushf
adc
sar
(bad)
xor
cwde
aam
add
push
sbb
shr
dec
push
inc
call
add
inc
aas
and
mov
scas
xchg
or
shl
je
jl
rol
sbb
add
pusha
xor
push
xchg
fidivr
sbb
cdq
cmp
push
test
fsubr
movs
push
(bad)
fcomp
mov
and
dec
mov
jb
shl
sti
loope
jmp
movs
ror
xor
add
push
dec
mov
fs
popa
sub
pop
les
rol
mov
lock
call
pop
sbb
lock
mov
rcl
shl
jl
loop
push
test
adc
mov
fadd
mov
cmp
mov
mov
cwde
lock
leave
test
adc
push
loopne
push
mov
jl
pop
pusha
mov
sub
jo
std
fs
or
outs
adc
mov
pop
jg
mov
js
test
push
sub
(bad)
and
das
push
inc
or
inc
xchg
rcr
xor
or
sub
sahf
and
cwde
sbb
adc
test
sbb
adc
stos
add
add
je
push
pop
cld
cmp
pop
fmul
loope
movs
lock
cdq
adc
inc
pusha
shl
or
scas
lods
xchg
xchg
je
in
ins
pop
and
and
enter
iret
mov
cmp
aam
dec
sub
mov
xor
out
mov
mov
neg
sbb
adc
les
shl
mov
nop
hlt
enter
mov
retf
inc
pop
dec
leave
sbb
aam
mov
enter
or
mov
loopne
inc
push
lea
pop
mov
test
jne
test
scas
pusha
dec
xor
out
in
js
call
mov
push
or
fadd
mov
cwde
or
imul
lods
or
inc
fidiv
lock
dec
mov
dec
fdivr
xor
stc
dec
(bad)
shl
je
cmp
or
sub
sar
imul
push
mov
nop
(bad)
cmc
mov
lods
clc
pop
(bad)
mov
test
in
cld
call
mov
xchg
xlat
mov
pop
and
js
xor
sbb
popa
and
dec
lock
repnz
adc
mov
pop
add
stos
xchg
icebp
dec
stc
adc
pop
inc
xor
inc
(bad)
pusha
pop
push
mov
push
je
sbb
add
sub
sub
outs
dec
push
mov
dec
rcl
pop
xor
sbb
jo
inc
movs
test
fnstcw
lods
mov
xor
leave
fmul
pop
jbe
aas
mov
mov
adc
fdiv
cmc
push
sbb
push
test
mov
cdq
test
xchg
js
inc
sub
push
sbb
rcr
loopne
call
scas
out
or
or
push
sub
enter
fwait
les
call
cwde
mov
xor
inc
int3
fistp
icebp
add
jns
cmp
cmps
mov
leave
xor
imul
push
out
leave
inc
inc
clc
shl
pop
or
fs
mov
cld
iret
in
adc
xor
cld
dec
inc
mov
cmps
adc
test
or
mov
cs
inc
pop
enter
pop
in
popa
hlt
sub
pusha
jmp
ror
cmp
dec
lods
fcom
dec
daa
add
push
cmp
sub
hlt
push
mov
add
or
mov
xchg
add
pusha
mov
in
lods
sbb
mov
enter
mov
xor
cmp
cs
and
and
bound
mul
imul
movs
nop
in
sub
in
inc
dec
test
sub
xchg
sbb
push
xchg
stc
cmp
enter
sub
or
enter
mov
das
or
shr
push
les
leave
jge
mov
dec
je
xor
adc
addr16
jb
push
cmp
lods
inc
cmps
push
add
loopne
dec
mov
and
dec
pop
je
mov
dec
xchg
pusha
cmp
cmps
movs
arpl
xor
rcl
int3
shr
mov
lods
popa
add
add
lods
nop
(bad)
clc
cmp
or
mov
pop
add
cmp
mov
into
sbb
rcr
stos
int3
cmp
loopne
or
push
in
pop
icebp
inc
sahf
jo
mov
mov
in
push
test
ret
test
jo
clc
adc
dec
mov
rcr
mov
sbb
mov
outs
mov
rcr
pop
inc
je
or
push
(bad)
cwde
(bad)
mov
loopne
xchg
scas
xor
inc
ins
or
in
or
jl
outs
call
je
(bad)
in
pop
and
and
jo
fdiv
pusha
lea
movs
adc
xchg
adc
or
push
xchg
fmul
clc
sbb
adc
mov
push
and
imul
sub
in
cld
repnz
aaa
and
xor
ret
inc
mov
les
gs
push
mov
inc
fnstcw
cmc
out
pop
or
cmp
lods
xchg
pushf
cwde
sub
shl
int
out
mov
mov
test
stc
fadd
jmp
jle
pop
shr
add
sub
hlt
dec
popf
sbb
js
adc
lock
dec
pop
xchg
loope
sub
test
cmp
push
mov
xchg
add
lods
pop
add
lods
(bad)
xor
ss
cld
cmp
mov
pop
sub
dec
fadd
enter
popa
lods
dec
aam
retf
push
mov
in
xchg
jl
inc
mov
rcl
sti
test
nop
add
out
int3
sbb
sbb
bound
cld
or
sbb
jo
test
std
je
js
mov
cwde
pop
retf
ins
xor
mov
(bad)
call
sub
clc
sub
into
in
add
sbb
cmp
cmp
mov
push
jmp
jmp
sahf
ret
in
sub
mov
sub
mov
cmps
cwde
push
cmps
out
loope
sub
adc
and
push
and
xchg
and
xor
sbb
mov
mov
fs
(bad)
adc
adc
adc
cwde
xor
fsub
and
mov
jne
sbb
clc
mov
adc
fcomp
pop
sbb
push
sbb
jo
pushf
push
and
scas
xor
(bad)
ror
add
xor
clc
pop
js
sahf
adc
dec
and
cmp
xor
pop
enter
xchg
lock
dec
push
ins
rcl
int3
cld
sub
fld
sbb
scas
cld
lods
jne
inc
in
enter
sbb
and
les
cmp
shl
sbb
pop
daa
int3
ja
and
test
pop
mov
jle
in
cmp
pushf
mov
and
mov
test
fadd
dec
pop
mov
adc
adc
dec
stc
lds
aaa
dec
in
cld
mov
cld
int3
sub
xor
mov
sbb
push
push
sub
int3
lock
(bad)
hlt
in
add
push
jo
sbb
mov
cwde
push
pop
ins
push
push
dec
push
mov
pushf
js
mov
mov
fs
stc
lock
test
lock
push
ror
sbb
jo
jmp
pop
xor
pop
jns
sbb
push
ins
cmp
std
rcr
xor
push
xor
rcr
adc
dec
and
fcomip
mov
lods
pop
push
dec
fmul
and
hlt
cmc
cld
jmp
std
mov
clc
or
inc
mov
sub
jp
rcl
cld
adc
fidiv
nop
jle
test
(bad)
and
and
mov
push
inc
hlt
dec
popa
shl
mov
dec
jmp
push
adc
jne
pushf
scas
or
lods
out
ret
movs
push
sub
movs
arpl
ds
popf
sub
lods
ficomp
mov
inc
scas
fcom
int3
cdq
jbe
sbb
push
xor
cmp
cli
push
movs
enter
jo
les
xor
xor
dec
call
mov
xchg
add
or
mov
cmc
cmp
sahf
adc
push
jp
inc
mov
mov
loope
test
clc
jmp
test
sub
cmp
mov
cdq
movs
popa
js
or
in
and
test
hlt
mov
outs
add
adc
jl
movs
and
sbb
jo
xor
dec
mov
in
mov
sub
ins
mov
and
int3
adc
mov
pusha
pushf
or
push
scas
sbb
sbb
mov
sbb
repz
add
inc
aam
jl
inc
jo
pop
push
adc
jno
mov
and
cmp
hlt
loopne
clc
add
or
or
test
adc
sbb
and
pop
test
jmp
xchg
test
sahf
shl
das
les
jns
and
and
arpl
(bad)
aam
pusha
or
sub
int3
mov
sub
push
test
pop
dec
mov
in
dec
xor
mov
push
sbb
sub
call
fadd
dec
dec
sub
pop
clc
inc
adc
sub
mov
sbb
sub
inc
mov
cmps
sub
xor
scas
add
and
out
push
mov
jl
jl
add
sub
ins
in
aam
cmps
mov
and
lahf
test
pop
push
aam
les
adc
arpl
xor
push
pop
lods
pop
sbb
cmp
stos
dec
fs
aad
xchg
sahf
sbb
cmp
loopne
xor
mov
out
mov
sbb
sub
or
stos
hlt
add
enter
call
sub
movs
add
ins
shr
scas
jo
(bad)
mov
pop
cmp
(bad)
push
or
mov
jl
inc
adc
mov
push
bound
mov
or
aam
mov
test
adc
jl
enter
xor
jl
xchg
jecxz
jecxz
xchg
pushf
mov
es
enter
cli
lahf
int3
cmp
inc
adc
pop
data16
mov
hlt
push
movs
(bad)
mov
scas
lock
mov
jl
sub
in
test
icebp
pop
sub
fs
sub
loopne
sti
dec
shl
and
imul
push
mov
test
in
dec
jl
dec
jl
out
jmp
xor
mov
pop
adc
adc
add
les
push
mov
adc
xor
pop
dec
imul
test
mov
pop
shl
dec
call
in
enter
mov
out
inc
sbb
and
cs
pop
pusha
xchg
shr
retf
out
adc
cwde
lods
test
retf
ins
aas
pushf
add
or
cdq
into
push
scas
dec
leave
xchg
movs
dec
adc
jl
mov
popa
fimul
into
adc
mov
add
push
and
inc
sub
add
push
dec
sub
jle
enter
push
push
or
imul
cdq
cli
test
add
aam
xor
mov
fldenv
(bad)
mov
jbe
mov
js
inc
repz
sub
add
pop
dec
js
fsubr
loopne
inc
adc
rol
rol
cwde
xchg
cld
call
add
enter
push
push
hlt
jb
and
jl
cli
pop
enter
fsub
clc
dec
sub
(bad)
ror
test
mov
pop
sbb
dec
xor
mov
fstp
inc
lods
and
clc
movs
fimul
ins
lock
push
gs
pop
jno
mov
fcom
add
pop
mov
movs
jmp
mov
sti
sub
xor
sbb
std
lods
(bad)
(bad)
add
fsub
sub
ficom
mov
jmp
outs
retf
ins
or
aad
xchg
push
xchg
inc
inc
dec
loop
shl
out
mov
les
mov
or
dec
inc
aam
sbb
js
and
adc
ror
outs
pop
call
aad
cmp
ins
pop
(bad)
and
cwde
fsub
adc
mov
sbb
loopne
hlt
inc
cmp
adc
clc
xor
shl
ins
sub
and
shl
nop
dec
loop
push
cld
gs
nop
push
dec
js
mov
cmc
icebp
cld
lods
or
js
and
dec
loopne
or
xchg
loopne
push
and
loope
in
movs
fsubr
pop
std
ins
lock
xchg
push
pop
mov
xor
jg
dec
or
movs
(bad)
jl
sbb
mov
test
int3
je
dec
mov
outs
cwde
je
pushf
and
(bad)
sub
aam
ss
movs
fwait
pop
pusha
jb
dec
cwde
ins
mov
fs
mov
mov
loopne
add
movs
js
rcl
lods
cmps
int3
adc
fidiv
imul
aam
add
in
std
sub
adc
retf
xchg
push
pop
into
les
or
push
stos
mov
xor
sbb
in
pop
ds
inc
pusha
lods
jb
xor
ffreep
enter
rcr
es
fnstsw
push
push
cmp
in
lods
xor
add
or
sub
xchg
les
sbb
push
and
in
sbb
mov
ins
cmps
hlt
test
or
pusha
push
or
mov
pop
mov
pusha
adc
mov
sbb
cmp
push
or
shl
cmc
jo
fs
mov
fidiv
fisttp
xchg
mov
and
je
sbb
cmp
and
xchg
fsub
push
hlt
dec
mov
inc
add
mov
int3
rcl
push
inc
stos
and
loopne
mov
aam
or
cld
push
inc
js
pusha
sbb
(bad)
xor
ss
pop
stos
loopne
push
dec
xor
test
inc
sub
out
jp
add
sar
ss
lods
cmp
sbb
loopne
arpl
mov
adc
sets
enter
ror
push
cmp
test
ins
or
mov
lods
cdq
jo
fcom
out
cmp
xor
sahf
test
jp
das
ins
sub
jo
out
or
inc
mov
sbb
in
or
cmp
push
js
cld
mov
fdiv
scas
push
test
(bad)
mov
cli
or
cmc
pop
fsubr
fs
sbb
push
push
shl
test
cmp
mov
in
xchg
jo
cwde
adc
inc
sub
lods
cwde
and
xor
test
mov
mov
push
or
sbb
fadd
jnp
aaa
cwde
dec
nop
inc
cmp
push
les
jl
outs
push
or
mov
jmp
shl
out
call
pop
or
call
es
test
push
mov
cwde
shl
pop
sub
xchg
mov
inc
mov
(bad)
shr
pop
fs
loopne
loop
mov
fdivr
cmp
and
and
adc
xchg
dec
adc
push
sub
aam
in
or
mov
xor
(bad)
mov
enter
dec
xchg
pushf
ins
adc
mov
cmp
pop
mov
(bad)
jne
push
cwde
(bad)
ja
js
les
test
(bad)
sub
add
sbb
cmc
mov
stos
mov
inc
jmp
pop
mov
ss
and
sub
sbb
fs
adc
test
fmul
lock
pusha
jne
out
ss
cmp
mov
xchg
and
dec
sbb
fisub
(bad)
push
lods
cwde
aam
mov
push
aam
pushf
sub
inc
push
fsubr
jl
test
sub
push
aad
cld
das
inc
adc
fsubr
adc
cmps
lock
xor
mov
inc
xor
pop
push
imul
inc
pop
cld
jl
(bad)
sub
cmp
pop
sbb
test
cld
les
bound
test
ficom
pushf
in
scas
test
jl
test
jl
push
or
stos
add
sub
xchg
out
or
int
int3
mov
loopne
or
in
sub
or
mov
test
lods
push
add
clc
or
jmp
pop
ret
enter
jo
mov
bound
or
rol
pop
and
mov
xor
jo
mov
scas
jl
cmc
dec
lds
call
xor
pop
in
xor
mov
rol
pusha
sbb
pop
retf
mov
cld
(bad)
cmp
sbb
pop
sbb
cmp
je
dec
bound
fcmovbe
xor
stos
call
inc
xchg
dec
lods
dec
dec
push
pusha
loope
rol
(bad)
enter
pop
bound
lods
call
out
ins
sbb
jo
push
bound
mov
xchg
push
inc
and
iret
(bad)
in
imul
stc
cwde
in
in
push
mov
aam
dec
pusha
aas
jecxz
hlt
adc
das
push
pop
and
ins
pop
xchg
or
or
dec
out
and
mov
mov
cmp
aam
cmp
enter
pop
jp
fdivr
xor
ret
dec
nop
push
mov
push
jo
std
aam
push
or
mov
and
ins
xchg
or
(bad)
call
push
loopne
mov
aam
into
sub
or
je
and
rcr
mov
pop
dec
push
shr
push
or
lds
test
sti
les
scas
xor
scas
and
inc
pop
jl
fist
pop
pusha
sti
inc
ret
je
fisubr
pop
and
pop
adc
adc
mov
pop
sub
xchg
mov
fsub
ret
pop
mov
dec
js
fs
jle
movs
in
pop
cld
in
xor
fwait
in
mov
sbb
test
inc
cmp
data16
jl
aam
into
cwde
mov
ret
xchg
adc
ins
xchg
ins
cmp
pop
pushf
test
pop
add
pop
scas
nop
retf
cwde
div
mov
aam
dec
or
shl
call
hlt
lds
dec
mov
sub
or
call
jno
or
call
popf
or
inc
mov
movs
(bad)
int3
adc
lds
mov
repnz
bsf
cmp
xchg
xchg
sub
and
std
cwde
xor
push
rol
dec
fndisi(8087
pusha
xor
inc
push
call
shr
or
lock
pop
icebp
jl
or
js
into
push
ror
mov
pop
rol
mov
into
and
addr16
in
popf
dec
test
lods
jnp
dec
movs
mov
push
mov
inc
test
dec
hlt
and
mov
dec
fwait
add
pop
pop
push
aam
mov
pusha
pushf
mov
xchg
neg
add
cwde
adc
fcom
xor
rcl
inc
mov
pop
pusha
test
sti
adc
test
int3
adc
inc
xchg
aaa
loopne
inc
enter
call
xchg
js
jl
inc
push
xchg
sbb
push
in
loopne
push
out
add
cwde
jmp
or
je
int3
int3
add
ins
jmp
inc
aaa
or
jle
xchg
aam
or
adc
jge
shr
cs
sub
hlt
mov
lods
sub
stos
js
adc
int3
repnz
ret
movs
mov
adc
inc
pop
ins
jl
sub
and
rcl
test
inc
push
ins
sub
push
cli
fs
jl
push
fmul
push
aad
aaa
mov
mov
mov
rol
mov
outs
call
and
loop
push
push
call
xchg
pop
ins
or
out
sbb
enter
jne
pushf
cmp
inc
lock
xor
xchg
or
div
adc
jo
js
sar
in
pop
cwde
shl
inc
mov
jge
jne
leave
pop
jmp
fwait
mov
or
mov
sbb
in
in
mov
xor
je
pop
push
call
leave
dec
adc
mov
pop
popa
in
push
ror
jle
in
mov
inc
add
mov
jl
xchg
xchg
jb
les
jae
ins
push
idiv
ja
pushf
cmp
push
sub
xchg
test
addr16
imul
jl
jb
lods
lds
gs
xlat
inc
enter
int3
push
movs
aad
std
test
cld
mov
retf
bound
or
in
clc
ret
dec
push
rol
xchg
rcl
or
push
sar
pusha
hlt
mov
movs
nop
jno
pop
adc
cmp
mov
or
hlt
cmp
(bad)
or
scas
sbb
cmp
jo
jae
and
sub
mov
std
test
(bad)
enter
call
ins
or
xor
(bad)
les
stos
lods
lock
dec
push
rcr
int3
in
jecxz
push
fdivr
mov
js
push
ins
sub
or
mov
jo
inc
mov
cld
pcmpgtb
fadd
(bad)
and
repz
adc
cdq
and
int3
jb
loope
test
ds
mov
out
setl
dec
je
pusha
fadd
xchg
push
fsubr
xor
rol
int3
xlat
push
mov
push
inc
add
and
mov
in
call
je
cmp
add
add
jnp
lahf
and
jno
sbb
enter
xor
rcl
jmp
lock
lods
sbb
enter
cmp
cmps
(bad)
iret
pusha
call
push
dec
and
sti
pop
xor
and
cwde
lods
pop
mov
fwait
inc
ins
inc
popa
xor
popf
adc
dec
ror
or
lods
jmp
push
mov
ja
pop
test
clc
call
sbb
mov
cmp
dec
pushf
shr
loopne
add
imul
adc
push
imul
leave
lods
mov
out
or
sub
fadd
pop
lods
ficom
jmp
sbb
gs
inc
and
sbb
sub
mov
cmp
push
je
pop
adc
pcmpgtb
(bad)
pusha
es
pop
sub
push
hlt
or
add
pop
or
(bad)
fsubr
inc
loopne
movs
fiadd
mov
shl
mov
adc
mov
push
test
xlat
dec
cmp
mov
arpl
in
pop
cwde
and
or
mov
cmp
mov
cmp
xchg
mov
mov
in
mov
lock
mov
inc
mov
mov
mov
out
or
mov
in
xchg
cdq
jbe
sbb
les
clc
out
sub
and
dec
stos
aam
pop
push
hlt
mov
mov
fs
pop
loope
mov
or
gs
push
fmul
adc
(bad)
and
sub
outs
add
mov
rcr
mov
ss
mov
cmp
cmp
inc
add
mov
cmp
into
push
jge
in
cwde
sbb
mov
jb
(bad)
fadd
cmp
and
loope
dec
ret
pusha
in
loope
add
push
in
dec
ins
fs
jl
jl
movs
pop
cwde
cdq
jecxz
dec
cwde
inc
mov
add
or
call
sbb
inc
and
sub
inc
aad
xchg
xchg
cmp
cld
mov
fmul
jmp
sub
mov
cmp
adc
dec
mov
bound
inc
sub
pop
xor
std
add
jmp
mov
adc
int
adc
adc
aad
in
push
cs
mov
aam
push
fcomp
nop
jp
mov
stos
or
(bad)
pop
cld
ss
push
hlt
fld
lea
xchg
mov
in
mov
rcr
(bad)
or
fadd
or
je
add
or
sti
xchg
lds
xor
dec
mov
sbb
sub
in
shr
cmps
enter
cmp
mov
and
jmp
in
cs
lds
clc
jge
sbb
inc
push
in
call
dec
sub
push
and
aad
jl
bound
sbb
in
scas
clc
or
mov
cwde
sub
fdiv
mov
push
test
dec
hlt
mov
adc
push
test
std
fcmovb
ds
adc
add
gs
mov
inc
inc
pop
(bad)
and
sub
sbb
or
dec
sbb
sub
and
mov
(bad)
rcr
and
or
dec
jl
dec
enter
adc
mov
clc
mov
aad
call
dec
call
nop
xor
test
push
loope
push
dec
mov
adc
fsubr
in
mov
xchg
jns
xor
push
call
inc
adc
icebp
push
lods
std
add
popa
(bad)
(bad)
push
lods
mov
mov
mov
push
loopne
jo
add
mov
out
(bad)
je
pop
and
es
shl
sub
call
je
jle
ins
gs
les
mov
call
xor
or
jle
in
in
push
xor
loope
ins
pop
enter
sbb
sub
lods
inc
cs
mov
cld
je
mov
loopne
aas
push
dec
arpl
div
lods
jo
cmc
or
cmps
mov
sbb
(bad)
mov
mov
in
adc
adc
sbb
movs
mov
mov
enter
push
xor
adc
and
bound
fsubr
adc
cmp
in
loop
aaa
sub
add
movs
cmp
cli
fsub
mov
or
add
xor
cmp
and
pusha
callw
gs
ins
cwde
(bad)
pop
retf
scas
sub
popf
js
and
and
push
lds
call
mov
or
mov
pusha
cmp
xchg
xor
dec
add
in
and
dec
jle
ss
fidivr
sbb
sub
push
inc
xchg
inc
(bad)
mov
cmps
loope
test
mov
mov
in
sub
shl
dec
cmp
pop
xor
or
js
arpl
mov
cmp
add
outs
push
int3
frndint
mov
stos
and
clc
cmp
sahf
clc
mov
adc
(bad)
les
mov
add
push
shl
dec
add
cld
int
adc
cwde
stos
mov
ins
mov
push
nop
adc
repnz
movs
icebp
ins
adc
inc
fidiv
add
call
or
jmp
push
pop
sub
push
rcr
cmp
dec
mov
mov
cld
push
add
cmps
push
scas
pop
ret
cmp
outs
jns
shr
or
enter
mov
xor
mov
sub
push
enter
retf
push
pop
mov
mov
sub
lods
rcr
pusha
xchg
call
cmp
xchg
cwde
mov
and
cmp
test
in
dec
inc
xchg
es
test
jo
sbb
push
jo
xchg
dec
rol
int3
(bad)
ror
jge
je
(bad)
pushf
stos
pusha
repz
mov
mov
adc
aam
lds
push
xchg
mov
loope
or
and
in
xor
and
loop
out
pop
push
mov
jp
imul
popf
in
cmps
test
pop
xchg
xchg
mov
test
jo
in
push
xchg
cmp
cmp
inc
sbb
pop
das
int3
jno
icebp
aam
daa
dec
and
inc
fnstenv
xor
ss
add
and
clc
clc
dec
sbb
fmul
xchg
lock
jmp
call
aam
lods
lea
and
jg
lock
div
push
mov
add
push
aad
cld
adc
hlt
cmps
sbb
push
idiv
dec
xchg
rcr
push
in
lods
jg
in
std
fucom
fldcw
mov
pop
or
add
loop
loopne
cmp
sub
clc
rcl
mov
addr16
aam
jl
les
fld
call
mov
mov
mov
dec
cmp
clc
mov
cmp
js
push
jns
mov
dec
sbb
jo
ins
mov
push
js
sub
lfs
xor
movs
icebp
mov
dec
pop
shr
enter
stos
dec
jo
pop
pop
in
fmul
push
mov
sub
inc
aas
shl
push
aad
jl
in
(bad)
int
scas
mov
jp
inc
cmps
sub
nop
xlat
push
cmp
xor
cmps
jo
retf
sbb
jne
sbb
add
hlt
(bad)
adc
inc
mov
push
sbb
sar
imul
movs
jo
and
dec
jnp
xor
cmp
mov
repnz
jecxz
push
lods
jl
mov
dec
fmul
and
mov
sbb
mov
lods
int3
cmp
add
dec
inc
enter
nop
jo
in
jno
adc
add
mov
rcr
shl
or
das
add
sub
push
retf
sub
jbe
mov
jo
push
addr16
mov
push
movs
or
fidiv
sub
(bad)
mov
nop
xor
mov
cwde
push
or
test
or
pop
mov
scas
icebp
cmp
adc
pushf
fadd
icebp
outs
inc
xchg
push
int3
or
mov
repnz
xchg
mov
sbb
cwde
mov
imul
sar
test
pop
test
pop
popf
mov
xchg
(bad)
pop
or
pop
retf
bound
dec
call
in
lea
mov
les
scas
movs
adc
xchg
push
sbb
(bad)
sub
sub
xor
je
nop
sbb
and
push
mov
cld
mov
pushf
sbb
arpl
push
pushf
lods
and
push
and
in
xchg
pop
sti
xchg
fsubr
xchg
inc
or
push
shl
mov
adc
stos
mov
xchg
mov
cwde
or
add
or
in
test
fcomp
les
jp
gs
popf
pop
mov
pusha
mov
sbb
jmp
ror
and
mov
test
dec
cmp
add
lods
cdq
js
and
pop
add
push
add
push
xchg
cwde
sti
sar
push
sar
stc
push
cmp
xchg
loope
jmp
jle
cld
and
add
mov
aam
out
add
cli
mov
pushf
jnp
mov
stc
aad
dec
call
sbb
sub
test
mov
pop
add
dec
test
xor
test
push
fstp
pop
mov
nop
mov
icebp
aaa
or
es
add
xchg
cmp
nop
mov
test
mov
sbb
sbb
push
mov
in
xchg
xchg
into
jnp
lock
pop
pushf
sub
mov
jl
out
inc
cmp
xchg
mov
aad
dec
dec
(bad)
fmul
stos
movs
xor
shl
rol
xchg
call
jno
sbb
(bad)
fs
and
mov
fsubr
push
xor
mov
cmc
add
mov
push
adc
sub
call
in
mov
sbb
pushf
inc
inc
in
adc
pop
enter
clc
inc
fsubr
push
les
les
loopne
fdiv
mov
pop
add
fmul
mov
or
mov
ins
mov
cmc
add
jne
pop
sub
mov
test
gs
aaa
xor
enter
mov
add
enter
pop
add
int3
dec
dec
lock
cmps
and
(bad)
repz
cmp
call
in
or
push
outs
sbb
add
movs
stc
cmps
fdivr
add
arpl
test
mov
mov
sar
xor
sub
dec
and
pop
xor
cmp
movs
movs
ins
jae
lock
pop
lods
mov
movs
call
cmp
call
jbe
jbe
mov
jne
nop
aad
sbb
fs
iret
mov
xchg
enter
js
add
add
fmul
pop
test
hlt
je
les
mov
dec
xchg
(bad)
shr
xor
movs
pusha
imul
pop
pushf
mov
mov
push
popf
call
mov
sbb
xor
retf
mov
mov
xchg
push
js
mov
pushf
mov
sbb
sbb
inc
enter
cmp
adc
adc
lea
je
lock
test
ins
std
mov
lods
sbb
loopne
jno
cmp
mov
in
les
xchg
sbb
mov
mov
pusha
inc
pusha
inc
ror
cmp
call
out
mov
lock
cmp
cmp
xchg
cld
cwde
xor
sbb
inc
adc
lods
(bad)
push
nop
push
mov
lahf
jl
clc
and
mov
in
cs
xor
and
add
xchg
adc
push
jl
int3
sbb
loopne
sbb
jo
sub
ror
clc
ss
jmp
loope
sar
push
cmp
push
mov
jno
retf
push
adc
stos
jo
or
mov
fcom
push
adc
lea
sub
push
jne
cs
push
sar
inc
ror
lock
shl
mov
les
mov
(bad)
mov
cmp
enter
mov
(bad)
nop
call
push
cmp
movs
into
dec
fsubr
aad
inc
js
cmp
dec
std
mov
xchg
ins
dec
loopne
dec
cdq
adc
or
ror
and
push
les
out
int3
shr
aam
cmp
push
push
push
clc
and
jmp
sar
test
sub
test
mov
cwde
fcom
pop
mov
outs
(bad)
mov
scas
movs
xchg
push
test
mov
mov
lds
in
das
pop
mov
mov
sub
add
loopne
arpl
dec
nop
imul
jl
and
mov
je
je
mov
mov
sbb
ss
frstor
je
ds
in
les
aam
in
mov
adc
js
xor
jle
xchg
push
repz
test
adc
sbb
push
xchg
gs
or
(bad)
fs
fadd
add
daa
sub
shr
xchg
xchg
into
sub
pop
xor
mov
pushf
ins
aam
into
mov
popa
pop
lea
in
inc
rcl
fdivr
sub
mov
sub
adc
fldcw
xchg
jo
mov
and
inc
pop
test
jno
cmp
xor
ins
and
jge
inc
xchg
mov
and
call
push
add
cli
ret
mov
movs
jp
mov
mov
add
aam
scas
mov
fs
or
cmps
inc
stc
xchg
jns
inc
aaa
inc
ins
xchg
ficomp
add
in
pop
aam
mov
js
sub
(bad)
sbb
jg
movs
adc
xchg
pusha
(bad)
push
aam
jl
movs
inc
int3
(bad)
lock
rol
mov
adc
loop
call
push
and
in
in
in
pop
cmp
sub
lock
sbb
mov
mov
jg
imul
loop
cdq
stos
ins
mov
adc
add
and
loopne
mov
and
es
clc
mov
ds
es
push
loopne
lock
fmul
mov
or
mov
lds
push
add
mov
cwde
neg
mov
xor
cmps
cmp
or
in
mov
cmc
mov
or
lock
out
or
xchg
and
fadd
ret
cmp
dec
push
or
push
xlat
in
cld
cmp
fistp
lock
or
movs
push
ss
pushf
loop
xor
pop
loopne
pushf
in
mov
inc
sbb
push
ret
sub
or
dec
pusha
outs
push
loopne
jge
jo
test
or
or
sbb
mov
iret
or
push
popf
cmp
inc
hlt
enter
dec
xchg
and
repnz
inc
and
xor
inc
call
xchg
cmp
push
push
lock
pushf
stos
loopne
push
test
inc
sub
xchg
cwde
sbb
fisubr
and
mov
sar
inc
sbb
mov
cmp
cmp
inc
xor
pushf
ins
hlt
xor
shl
jl
neg
ficomp
xchg
aam
in
sbb
and
pop
and
inc
sbb
loopne
enter
adc
stc
mov
pusha
jne
pop
cmp
sub
ins
adc
jle
adc
xor
xchg
mov
ins
jo
shl
cmp
xor
inc
pushf
mov
pop
cmp
sbb
add
cli
mov
cmp
and
fcomp
data16
cmp
inc
adc
mov
cmp
loopne
or
out
dec
dec
(bad)
and
xchg
and
std
test
mov
pop
jne
cmp
cmc
cld
rcr
or
dec
push
aam
gs
push
cmp
in
adc
repnz
js
ret
mov
sbb
loopne
test
cmp
mov
pop
rcl
fsubr
jmp
pop
adc
mov
pop
adc
mov
cmp
cmp
or
hlt
js
cdq
inc
clc
mov
mov
sub
fisub
mov
xchg
jo
xchg
pop
mov
push
or
push
cmp
or
ins
iret
mov
pop
fdiv
mov
jge
addr16
mov
adc
pop
fs
test
jl
sub
call
pop
and
add
idiv
add
or
cwde
pusha
ds
push
lock
cmp
sub
mov
stc
or
fsubr
sbb
dec
adc
sub
sub
adc
dec
or
in
or
jb
sbb
test
fwait
aad
leave
xor
dec
xchg
adc
mov
inc
shl
sar
or
mul
ins
jp
shl
hlt
stc
or
mov
in
xor
dec
cs
adc
pushf
ret
lock
xor
mov
js
dec
jge
pusha
push
sahf
enter
(bad)
or
call
(bad)
int
mov
je
xor
sub
out
int
mov
add
sub
jmp
dec
lea
nop
inc
stos
push
adc
lods
je
fsubr
push
cmp
and
push
sbb
xchg
out
ds
jl
in
cmp
pop
inc
je
cmp
iret
xor
dec
dec
nop
adc
mov
xor
js
and
jo
mov
hlt
mov
test
jl
in
xchg
add
jo
xor
lods
and
mov
push
sub
and
xor
daa
mov
jmp
dec
sub
sub
dec
add
mov
test
ins
clc
push
mov
rcr
and
cmp
imul
xchg
xchg
nop
cmc
sub
test
stc
call
sbb
lock
sub
dec
inc
push
mov
out
jg
shl
nop
inc
xchg
and
fsubr
les
rcl
mov
stos
je
adc
movs
jno
push
in
rol
mov
aam
clc
mov
js
and
or
push
sti
enter
xor
push
hlt
or
xchg
je
and
pop
call
aam
xchg
mov
cmp
test
pop
lods
pushf
xchg
fdivr
jo
and
nop
cmp
mov
or
jo
xchg
cmp
adc
dec
push
and
int3
imul
mov
out
pusha
cwde
outs
push
pushf
and
(bad)
loopne
sbb
in
push
aam
cld
sub
enter
sub
lods
ins
add
ror
aam
adc
add
mov
movs
fimul
xor
sbb
std
test
push
enter
or
xor
aam
dec
ss
pop
pop
fucomi
add
fcom
cmp
cmp
xor
cmp
mov
call
and
xchg
idiv
cmp
dec
cmp
pop
adc
inc
cmp
or
gs
xor
retf
fs
ins
jne
inc
lock
sbb
rcr
or
xchg
mov
call
push
adc
pop
pop
rcr
and
xor
(bad)
int3
lods
and
or
xor
leave
pushf
add
and
adc
dec
cmps
hlt
int3
jns
(bad)
jl
add
stc
ficom
ja
bound
lods
int3
stos
shl
and
dec
or
mov
cmp
sub
cmc
cmps
pop
mov
icebp
mov
mov
and
cs
pop
in
lods
xor
clc
pop
sub
cmc
fs
cld
sbb
les
pop
mov
sub
xor
mov
dec
fdiv
dec
clc
les
test
pop
imul
mov
lahf
dec
cwde
or
jecxz
call
push
test
jb
sbb
add
jl
xchg
add
add
pop
add
mov
je
dec
jo
lock
movs
pop
test
mov
xor
inc
ins
dec
cwde
test
int3
pop
or
inc
cmp
sbb
add
shl
clc
cmp
jmp
jl
add
mov
pop
inc
mov
test
fcom
pusha
and
in
xor
pop
and
mov
aam
xor
and
inc
pop
push
mov
js
call
mov
mov
sub
fs
movs
or
out
jmp
push
adc
mov
adc
ins
leave
(bad)
adc
push
mov
mov
in
lods
retf
jmp
pushf
stos
movs
test
push
xchg
in
and
mov
loopne
mov
jecxz
and
cmp
pop
push
inc
enter
push
shr
push
jno
bound
push
icebp
enter
jo
js
loopne
mov
jle
movs
xor
loopne
std
or
add
scas
dec
add
(bad)
cmp
loop
in
sahf
mov
lock
add
cmps
fsub
and
js
cmp
xchg
loopne
push
pop
js
aam
loop
push
push
and
sub
nop
and
int
push
jb
mov
pop
dec
inc
mov
cmp
xor
pop
imul
sbb
and
sbb
pusha
std
call
nop
and
pusha
jo
or
and
adc
adc
inc
pop
mov
movs
add
lahf
push
hlt
loopne
fiadd
jg
inc
test
movs
test
in
dec
jmp
push
add
les
pop
adc
test
jb
js
add
and
int3
xchg
xchg
arpl
cli
inc
(bad)
data16
popa
jge
and
lods
fucom
xor
sbb
cmps
mov
fdiv
popf
ins
retf
fsubr
fst
mov
add
je
jl
and
and
xchg
mov
xor
clc
outs
push
aad
ins
or
mov
xchg
cld
jo
ins
les
dec
popf
or
xor
test
and
xchg
mov
enter
mov
push
push
sub
nop
dec
clc
xor
imul
pushf
or
int3
fnstsw
cwde
add
sbb
adc
sbb
test
std
mov
hlt
sub
das
lock
cmp
rcr
mov
pushf
ins
(bad)
test
inc
pop
outs
push
pmullw
mov
lods
test
dec
pushf
(bad)
jbe
mov
push
in
mov
lods
rcl
jne
sub
sub
sub
adc
das
cmp
push
int3
movs
hlt
outs
pushf
push
rcl
mov
(bad)
mov
or
xor
mov
sbb
aad
test
test
mov
js
adc
sub
xchg
out
hlt
enter
mov
push
ins
dec
aad
dec
or
mov
and
pushf
pop
adc
or
pusha
mov
les
ins
movs
cld
adc
dec
shl
sub
lock
cmp
xchg
inc
(bad)
or
fadd
mov
xor
fsubr
sbb
mov
mov
fdiv
sti
mov
jne
test
add
ror
movs
add
fwait
shl
push
lock
xchg
mov
lods
add
jo
or
mov
movs
inc
mov
sbb
shl
gs
cld
std
mov
dec
mov
lods
in
adc
enter
inc
mov
ins
or
lock
adc
out
call
xor
xchg
stos
popf
shr
push
je
enter
rcl
pusha
and
add
hlt
(bad)
bnd
sbb
rcl
sbb
lods
adc
add
push
mov
pop
jl
sub
mov
aam
or
adc
call
stos
xchg
jmp
in
xchg
ins
add
mov
test
movs
jb
pusha
xchg
shl
xchg
and
call
push
or
dec
dec
sbb
inc
(bad)
add
pop
mov
pusha
cli
clc
lds
test
loope
add
or
push
sub
mov
pop
fwait
mov
mov
or
cmp
and
sbb
xchg
cld
test
sbb
sbb
pusha
xlat
sub
mov
adc
sbb
or
shl
cmp
xchg
sub
pop
nop
outs
mov
jle
cmp
ror
mov
cs
mov
xor
ficomp
pop
mov
add
adc
enter
mov
or
pop
mov
or
ins
xor
in
gs
rcr
test
jo
js
cmp
jmp
jo
mov
enter
idiv
pop
das
loopne
(bad)
xchg
add
jno
adc
mov
mov
pop
sbb
(bad)
mov
mov
repz
jns
test
hlt
jmp
jmp
pop
mov
popf
aam
int3
cwde
jbe
popf
sbb
jge
clc
rcr
xor
and
pop
add
nop
mov
xchg
adc
xchg
push
adc
in
dec
out
or
add
xchg
inc
sbb
cmp
fidiv
adc
push
movs
or
call
popa
or
add
add
lods
js
in
jo
inc
out
mov
not
stc
cmp
jne
sbb
push
mov
pop
(bad)
sub
inc
xchg
bound
pop
shl
lahf
add
imul
int3
cs
cmp
pop
les
cwde
test
push
in
push
int3
jl
xor
add
pusha
push
and
xor
adc
pop
dec
mov
pop
outs
mov
pusha
cwde
xlat
dec
jl
test
stos
sub
push
sahf
or
scas
mov
sbb
xor
push
nop
test
fstp
les
sti
pusha
nop
ins
shl
popf
int3
loopne
push
lds
mov
pop
and
lock
popf
fadd
mov
or
hlt
jmp
xor
cwde
push
sar
in
push
and
mov
sub
fs
xchg
xchg
test
imul
into
pusha
jno
addr16
fisttp
imul
cmp
and
lods
xor
sbb
aam
dec
mov
in
xchg
pusha
sbb
mov
cmp
mov
mov
clc
xchg
pop
inc
or
mov
mov
mov
xchg
inc
mov
stos
inc
retf
pop
adc
pop
inc
mov
test
sar
fdivr
sub
xchg
aad
retf
push
jo
or
push
pop
xor
mul
mov
push
ja
call
nop
cmp
mov
clc
cld
hlt
loop
in
ins
aam
pushf
add
(bad)
dec
pop
mov
push
in
gs
mov
inc
dec
xchg
je
fsubr
call
fcom
push
test
loope
sahf
adc
lock
dec
js
mov
and
mov
aam
in
cmp
ins
and
add
in
enter
cwde
ss
outs
test
add
jl
cmp
movs
push
xchg
push
not
add
mov
fs
add
dec
loopne
cli
mov
cmp
mov
xor
push
push
jl
stc
mov
cs
push
sbb
ins
jo
ins
adc
fstp
sbb
xchg
std
fdivr
add
adc
loopne
enter
mov
(bad)
fcmovnu
pop
push
mov
dec
sti
xchg
add
mov
add
xchg
movs
rcr
fs
adc
add
dec
mov
(bad)
cdq
mov
cmp
jl
sub
mov
add
(bad)
lods
sahf
push
jl
les
jl
or
in
cmps
retf
and
addr16
jg
imul
sub
cwde
mov
stos
cmp
cmp
dec
mov
mov
mov
pop
inc
push
sub
lods
inc
add
or
ins
fdivr
mov
cmp
add
test
sbb
or
in
xor
cmps
dec
les
stos
mov
cs
aam
fadd
hlt
pop
dec
xchg
xchg
data16
imul
(bad)
in
lea
and
mov
dec
and
ficomp
je
call
xchg
mov
enter
fadd
sub
jmp
xor
push
pop
jno
jo
sbb
dec
jge
inc
inc
je
hlt
popf
mov
push
adc
cmp
jo
(bad)
sbb
adc
sbb
or
into
pop
push
add
push
pop
lods
ret
(bad)
retf
cmp
dec
mov
inc
inc
int
lock
and
lock
fmul
push
mov
inc
mov
xabort
push
aas
in
aam
jl
(bad)
mov
pushf
sub
cmps
push
aaa
sbb
ror
push
sbb
mov
mov
aam
shl
inc
sbb
(bad)
loopne
add
fadd
sahf
inc
fisub
sbb
sbb
pop
sub
mov
dec
mov
clc
fdivr
xchg
xchg
pop
or
mov
jne
add
cwde
jo
sar
add
pop
pusha
rcr
icebp
jno
fcom
jl
out
lods
pop
mov
sbb
fs
pop
xchg
inc
cmp
fdiv
mov
js
push
jp
int
lods
clc
mul
jle
data16
sbb
jo
mov
jo
and
mov
cmps
lock
je
cld
sub
push
mov
sbb
inc
push
les
fdecstp
and
jl
inc
cli
dec
mov
sti
sbb
adc
xor
sub
push
mov
shl
lods
adc
nop
or
hlt
jp
imul
xor
cmp
and
(bad)
fsub
loopne
cmp
add
cli
mov
cld
loopne
xor
pop
popf
cmp
sub
mov
das
fsubr
adc
bound
ret
and
push
fst
rol
sti
pushf
mov
(bad)
rol
aaa
sbb
xor
pop
pop
add
push
ret
sbb
mov
in
repz
fmul
data16
(bad)
arpl
push
fs
ss
add
or
add
inc
fdivr
jns
push
cmp
popf
ds
cs
push
or
mov
xchg
enter
pop
adc
sub
leave
xchg
dec
js
test
jne
cld
in
ds
push
test
add
test
mov
jle
inc
lods
or
and
xor
loop
add
clc
jl
mov
sbb
sub
loopne
les
xor
mov
xor
mov
cld
rcr
sbb
cmp
or
repz
stos
add
out
jmp
and
add
clc
test
mov
add
ret
inc
sbb
je
pop
js
nop
jp
cmp
mov
movs
xor
lods
nop
xchg
fs
dec
lock
or
cmp
mov
les
fdiv
sbb
in
sub
adc
sub
xor
xchg
loop
dec
test
pop
cmp
jo
fdiv
jl
adc
popf
les
(bad)
ret
enter
mov
jl
dec
je
pushf
mov
ret
or
dec
xor
inc
mov
shr
xlat
push
xchg
sub
sbb
cmps
test
sbb
loop
test
call
retf
or
sub
ins
out
add
pop
adc
pop
pushf
les
fimul
push
test
fsub
or
push
inc
mov
es
in
leave
xor
les
lods
jl
and
or
xor
lock
xchg
mov
fadd
pusha
dec
pop
xchg
gs
test
jg
xchg
push
call
stos
fdiv
mov
lods
mov
int3
xchg
lock
mov
push
lock
js
and
sub
in
dec
pusha
mov
pop
jge
mov
cmp
sar
lock
dec
jp
sar
xor
or
into
mov
mov
in
adc
enterw
mov
fcom
push
call
ins
fs
mov
push
xor
js
add
sbb
loopne
fdiv
out
xlat
mov
sbb
dec
sbb
sbb
add
in
cli
inc
(bad)
cmp
nop
mov
sub
push
fwait
jbe
test
clc
xor
cmps
cwde
pop
jl
dec
mov
loopne
test
nop
out
xor
fmul
jle
cdq
and
jb
test
call
je
mov
sbb
jb
daa
cmp
add
fcom
sub
ror
lods
and
cmp
dec
dec
xor
ins
cmps
xchg
mov
push
and
dec
enter
cdq
fild
push
push
or
push
stos
in
xor
mov
ins
and
shl
sbb
mov
mov
rol
sbb
sbb
std
test
enter
xor
int3
imul
sbb
xchg
rcl
or
dec
inc
stos
dec
call
loope
in
xor
mov
rol
ins
mov
mov
ret
push
dec
and
int3
fwait
int3
jecxz
mov
test
jl
in
(bad)
add
ds
inc
mov
inc
dec
or
out
pusha
xor
js
mov
call
dec
inc
js
nop
cmp
and
mov
ds
mov
ja
mov
cmc
adc
pop
dec
or
xchg
fidivr
imul
jmp
adc
sub
das
xchg
mov
pop
push
inc
adc
cmp
pop
enter
movs
je
adc
mov
scas
popa
xchg
imul
xor
or
leave
hlt
jg
ins
add
sub
les
jne
sbb
movs
jne
sti
lock
cld
fsubr
adc
call
and
fcomp
adc
xchg
pop
dec
dec
in
xlat
sbb
test
call
jne
hlt
cmp
lds
and
sar
or
ror
add
pop
pop
adc
add
fs
and
in
fcomi
mov
scas
fst
sub
push
xchg
mov
es
clc
int3
inc
out
mov
xchg
adc
sub
popf
inc
aam
push
clc
xchg
ror
and
xor
push
cmp
shl
or
adc
jmp
mov
outs
je
and
mov
add
scas
add
out
push
into
pushf
mov
lock
sbb
xchg
ja
clc
cld
or
lods
adc
mov
xor
sub
jge
in
pushf
jg
and
call
test
mov
loope
test
lock
enter
jbe
push
sbb
pop
in
hlt
or
dec
mov
dec
jl
test
les
es
movs
mov
mov
xchg
hlt
test
or
loopne
fadd
sub
dec
and
mov
and
sbb
jge
neg
ret
mov
daa
cld
addr16
popf
jl
icebp
sub
xor
mov
stos
mov
or
inc
mov
mov
out
pushf
and
loope
sub
in
movs
into
fcomp
je
xor
sub
mov
push
add
add
pop
and
jmp
gs
out
xchg
stos
dec
test
adc
dec
dec
ret
pop
sub
xor
call
hlt
out
cmp
movs
jnp
jnp
cwde
mov
les
mov
inc
and
cmp
sub
movs
shr
data16
call
xor
rol
loope
pop
xor
add
or
mov
mov
cmp
fs
jl
and
mov
xor
jl
js
mov
sbb
mov
sbb
cmc
lock
mov
push
(bad)
mov
aam
sub
or
sub
ret
inc
nop
inc
jo
adc
dec
add
sub
cmp
hlt
ficom
test
mov
dec
es
cwde
jge
ins
call
adc
pop
mov
test
rcr
mul
test
ret
push
xor
cwde
mov
scas
cmp
jge
add
test
xchg
inc
xchg
or
rcr
(bad)
loop
cmp
icebp
ins
out
dec
data16
test
dec
inc
fdiv
mov
js
or
add
pop
lahf
mov
xor
xchg
pusha
movs
sbb
and
mov
in
and
mov
aam
mov
sbb
jb
push
aam
call
les
enter
cld
pop
mov
mov
xor
cmp
mov
je
movs
pop
outs
mov
int3
stc
aad
or
je
push
and
je
or
xchg
fdivr
xor
mov
sbb
rcr
in
push
mov
pop
mov
das
sbb
sbb
test
push
adc
clc
pusha
jno
dec
push
inc
mov
in
xchg
jo
mov
adc
loopne
adc
nop
test
mov
je
jge
hlt
pop
(bad)
fidiv
pop
mov
jno
stc
mov
ds
adc
cwde
cmps
push
push
xor
push
(bad)
and
ins
push
inc
cld
inc
xor
pushf
in
cli
xor
lock
sub
mov
nop
push
js
adc
(bad)
test
repz
shr
add
cmp
mov
or
dec
test
jl
inc
js
scas
push
ja
cmp
loopne
test
mov
movs
push
mov
in
shl
popf
movs
pusha
push
mov
dec
data16
in
mov
mov
adc
jle
lock
sbb
xor
loope
push
jle
das
or
shl
aaa
out
(bad)
adc
inc
hlt
jge
test
jp
data16
in
scas
addr16
mov
jbe
dec
in
es
stos
movs
and
fldenv
sbb
adc
aas
mov
cmp
movs
sti
push
xlat
or
iret
(bad)
stc
sbb
add
aad
pop
aaa
mov
nop
test
lods
pushf
push
or
test
pop
test
adc
shr
ror
sbb
xor
fdiv
in
dec
and
fmul
mov
rcr
inc
mov
adc
out
in
rcl
cld
lods
fisubr
push
loope
shl
pushf
adc
sahf
xor
inc
popf
in
cmp
inc
js
bound
hlt
test
xchg
js
pusha
mov
movs
mov
cmc
test
lock
push
sar
add
pop
add
add
push
test
and
dec
mov
imul
in
shr
sub
add
fs
shl
or
les
dec
lods
rol
fdiv
mov
cmp
fcomp
jne
sbb
inc
xor
jns
push
xchg
add
mov
nop
std
jl
push
inc
test
ret
sti
pop
lds
int3
mov
or
mov
sub
or
in
or
fdiv
call
aam
out
clc
loop
sbb
movs
repnz
add
pop
cmps
loope
lods
les
jne
in
xor
mov
nop
inc
jp
clc
adc
inc
mov
stos
ins
add
lods
mov
mov
add
test
movs
pusha
xor
dec
fadd
dec
cmp
and
sub
xor
push
fdivr
nop
push
shr
cwde
jbe
pop
push
and
ins
js
int
enter
call
pop
lock
pushf
add
repz
(bad)
(bad)
and
mov
push
dec
pop
dec
ds
cwde
xor
stc
les
out
pop
sub
out
movs
(bad)
lods
push
and
push
sub
pop
cmp
fs
push
hlt
addr16
in
push
sub
inc
or
push
lods
leave
je
int
lods
cwde
dec
push
rcl
in
inc
lahf
or
add
dec
je
or
lock
mov
int3
ins
adc
gs
push
les
fsubr
int3
mov
js
shr
shr
mov
inc
sti
inc
hlt
sar
jo
sbb
les
clc
cmps
inc
xor
and
cld
sbb
xchg
jl
loopne
or
ins
jo
inc
mov
or
pushf
loopne
inc
jno
cmps
inc
mov
out
aam
call
sbb
sbb
aad
jb
sub
fist
pop
xchg
mov
xchg
ins
push
aam
and
es
mov
mov
mov
push
test
lock
adc
fs
cmp
adc
adc
mov
ds
push
xor
fs
(bad)
fxtract
call
dec
adc
jo
dec
adc
mov
mov
mov
js
cmc
dec
push
aam
jle
test
test
or
and
push
movs
mov
jg
fs
hlt
hlt
mov
xchg
pop
int3
inc
cld
cmp
fstp
dec
cmp
jbe
or
or
sti
add
sub
aam
pushf
enter
mov
inc
mov
rol
jge
fs
pop
fnstenv
mov
scas
cwde
adc
cmp
xchg
call
sub
mov
aam
inc
mov
push
push
bound
ins
bound
js
jp
cld
xchg
(bad)
xchg
mov
in
stos
cdq
jo
call
xchg
(bad)
mov
repnz
js
push
mov
js
and
les
lods
sbb
jmp
and
in
(bad)
test
retf
xchg
jg
dec
fcom
(bad)
test
dec
mov
mov
fsubr
inc
ja
js
mov
or
and
fsubr
mov
cmp
pusha
js
in
in
jge
jb
mov
rcr
inc
inc
ins
dec
xor
fbld
or
cmps
fadd
lods
push
imul
ds
pop
or
pop
popa
jbe
outs
mov
jg
and
mov
mov
xor
loopne
jmp
ret
cmp
in
lea
sbb
xchg
sub
nop
inc
adc
sub
call
leave
sar
adc
(bad)
in
mov
in
pusha
add
mov
mul
mov
rcl
scas
and
pop
jns
sbb
aam
mov
stos
js
in
adc
pop
jle
mov
fcom
sbb
add
fsubr
pushf
xchg
push
hlt
mov
sub
in
push
push
fdivr
xor
and
mov
aam
jl
push
push
inc
pop
mul
enter
mov
xor
mov
sti
fs
test
cs
int
hlt
in
call
cmp
out
mov
call
jle
add
lds
xchg
inc
enter
js
mov
cmp
inc
mov
xchg
pusha
xchg
sbb
pop
dec
adc
(bad)
push
(bad)
pusha
in
je
add
dec
pop
mov
push
test
mov
movs
adc
cwde
inc
pusha
dec
test
enter
or
adc
fxch
loopne
mov
cmp
adc
cwde
xor
fsub
inc
pop
movs
lea
lods
out
push
pop
dec
inc
sbb
cmp
cmp
mov
mov
push
mov
cmps
sbb
ins
lods
mov
mov
ins
scas
aam
inc
mov
and
xor
adc
or
pop
jmp
cmp
movs
pop
ins
pushf
loop
pop
inc
in
sub
aad
cmp
les
fdiv
and
jno
inc
mov
and
fcom
pushf
loop
rol
sub
mov
sbb
je
adc
inc
ja
clc
mov
pop
jge
sbb
inc
add
mov
loopne
push
movs
mov
cmp
sub
or
push
and
jmp
test
fmul
mov
cmp
test
mov
shl
out
dec
rcl
cmp
inc
out
or
(bad)
pushf
scas
aam
mov
and
mov
loop
(bad)
aam
mov
hlt
fsubr
rcl
adc
xchg
ret
sbb
int3
inc
test
aas
sbb
sub
ins
lods
(bad)
jl
pop
test
push
stc
cld
inc
push
mov
pushf
mov
fsubr
shl
les
inc
add
mov
jo
je
daa
les
movs
xor
xchg
hlt
in
mov
arpl
aad
or
xlat
mov
add
movs
sub
add
and
out
mov
stos
fmul
fmul
pop
pushf
rcr
les
mov
test
aam
xor
pop
inc
ins
(bad)
aad
xor
hlt
ror
cld
(bad)
adc
cmp
sbb
fdivr
inc
lods
mov
in
or
jl
sbb
test
mov
aaa
cwde
and
push
aam
jl
sbb
leave
lock
mov
movs
inc
lods
dec
(bad)
or
fcmovb
or
test
pop
mov
sbb
pop
and
add
sub
lods
sar
nop
dec
mov
add
add
inc
cwde
lock
mov
push
and
ret
pushf
xor
adc
out
inc
in
or
jbe
or
add
loopne
ret
fdiv
fcomp
push
push
out
js
push
fwait
cmps
movs
cld
int3
jns
inc
sub
push
pushf
out
mov
cmc
pusha
aam
pop
mov
pop
or
je
cmp
cld
jo
in
add
cmp
cmp
pusha
push
call
mov
call
push
adc
mov
cwde
daa
fidivr
push
xor
js
inc
call
push
enter
les
xchg
data16
mov
pop
sbb
pop
inc
call
std
add
jno
pusha
mov
mov
div
mov
lock
mov
push
test
sub
movs
cmp
mov
lods
call
ins
cmp
inc
push
mov
hlt
or
hlt
cmp
jle
lock
sbb
mov
inc
xor
cmp
popf
jl
fcom
add
jno
sbb
ret
daa
push
cmp
xchg
jbe
sar
inc
test
fnstcw
fldcw
sar
ins
les
shl
xchg
push
mov
nop
es
jne
mov
jo
and
push
(bad)
js
jb
dec
and
ins
dec
aam
push
or
push
ror
rcr
hlt
or
xchg
int
ds
(bad)
push
xor
jo
and
mov
rcr
stc
mov
xor
jp
test
outs
sub
in
dec
rcr
fisub
call
mov
xor
xor
imul
or
mov
cmp
jbe
mov
sar
xor
int3
daa
dec
add
cmp
sbb
pop
mov
lods
sub
adc
shl
loop
call
adc
ds
cmp
push
test
(bad)
jl
aam
dec
(bad)
hlt
fs
js
aaa
cmp
dec
jp
xor
mov
lods
push
adc
add
enter
mov
cmp
jne
cld
jbe
in
js
rcr
popf
clc
sub
xor
ds
pushf
les
call
push
and
in
jl
mov
scas
fcom
add
cdq
pusha
inc
ror
(bad)
dec
lods
mov
cmc
lock
pop
inc
or
xchg
enter
add
fwait
cmps
pop
pop
xor
mov
jnp
jb
stos
add
mov
push
pop
dec
shl
int
mov
mov
mov
out
or
call
push
lds
and
out
dec
in
push
sub
outs
mov
aam
call
mov
sub
push
sub
push
adc
sbb
xor
and
cmp
pop
dec
mov
rcl
mov
cmp
fcom
pop
iret
mov
mov
adc
cmp
sbb
xor
sub
aam
push
add
in
or
push
gs
in
or
or
push
xchg
enter
test
xor
push
add
mov
cmp
jmp
push
fs
(bad)
iret
inc
pop
add
sbb
adc
jp
adc
jl
push
sbb
pusha
inc
or
cmp
adc
dec
mov
clc
in
mov
dec
adc
pop
push
es
(bad)
cli
in
mov
jmp
sub
je
pop
clc
mov
jo
sub
lahf
add
sbb
in
mov
cmp
and
fs
dec
(bad)
or
jge
inc
xchg
mov
xchg
hlt
sbb
pusha
aad
test
lods
mov
xor
sar
and
and
in
lea
lods
inc
mov
xor
cmp
and
call
inc
lods
ins
cmp
cmps
test
loop
jl
retf
or
test
adc
mov
call
add
push
aam
imul
add
mov
sbb
dec
shr
cmp
ja
mov
in
mov
pop
les
fstp
cmp
pushf
aam
stc
adc
in
adc
sub
cmp
hlt
fadd
mov
dec
adc
fst
add
rol
popf
fadd
inc
lds
cdq
inc
or
add
pop
adc
shl
frstor
inc
mov
jo
xchg
push
js
cmp
dec
cmp
jge
dec
mov
mov
and
(bad)
cld
mov
add
push
ror
enter
mov
sub
mov
outs
mov
cld
das
test
js
int3
sbb
and
popa
data16
or
or
(bad)
mov
lods
(bad)
lock
int3
mov
dec
xor
clc
ins
mov
stos
loopne
add
imul
or
(bad)
icebp
sub
nop
cmp
xchg
mov
adc
push
repnz
and
fmul
cmc
enter
jecxz
js
out
dec
mov
pop
fiadd
lods
shl
cmp
mov
ds
shl
adc
movs
popa
fidivr
dec
add
into
and
adc
pusha
lea
sahf
pushf
lods
jns
inc
dec
test
popf
jmp
adc
cld
shl
cld
je
movs
test
nop
and
fiadd
mov
les
push
push
mov
jo
mov
cmp
push
inc
xchg
(bad)
loopne
sub
fsubr
jmp
out
outs
pop
into
mov
sub
loopne
sbb
mov
cdq
xchg
inc
inc
mov
xor
xor
add
ficom
in
hlt
js
sub
dec
adc
int
adc
sub
push
mov
clc
mov
xor
sbb
test
stc
and
dec
sub
dec
add
cmp
push
mov
js
pusha
sti
add
mov
inc
and
lods
adc
test
call
inc
loopne
ss
mov
in
mov
ss
sub
sub
and
pusha
dec
call
push
movs
cmp
movs
(bad)
mov
ss
or
xor
aam
sub
adc
or
and
lock
call
push
js
test
fs
mov
adc
call
inc
mov
xchg
or
cmp
in
je
in
lea
cld
and
pop
fnstcw
mov
aas
shl
lock
and
xor
dec
pusha
push
shr
(bad)
fs
js
cmps
les
test
test
cmp
clc
cld
imul
add
sbb
push
hlt
sub
aaa
hlt
jb
jns
xchg
jl
jl
daa
fsubr
jmp
movs
add
cmps
mov
rcl
or
enter
jmp
push
inc
ja
mov
mov
pusha
adc
js
nop
fdivr
data16
aad
pop
add
aam
call
add
xor
push
pop
enter
mov
and
in
push
sub
jp
xchg
add
jmp
and
mov
fadd
push
mul
pushf
add
mov
add
adc
jecxz
test
shr
push
(bad)
sbb
enter
push
imul
lock
cmp
pusha
in
outs
adc
je
rcl
sub
mov
movs
popf
data16
lock
adc
loopne
pusha
and
in
mov
adc
sbb
or
push
es
es
mov
and
jecxz
jo
mov
cmp
mov
cld
fxch
lods
cmp
(bad)
repz
cmp
and
inc
mov
leave
push
nop
xor
or
mov
xchg
mov
fcom
ins
or
div
ja
rcl
pop
in
pushf
ror
popf
shl
popf
fsubr
arpl
xchg
xor
and
sbb
je
sbb
shl
clc
mov
shl
sbb
clc
cmp
xor
or
sub
fsub
call
cmp
xchg
or
rol
cmp
repz
out
or
mov
sub
adc
ss
mov
cmp
movs
fidivr
inc
aad
inc
jo
xor
je
or
jl
add
scas
cwde
push
pop
hlt
cmp
pop
cwde
test
int3
pop
jg
sbb
add
lods
loope
ret
pop
xor
mov
adc
sbb
cmps
push
sbb
mov
test
push
xor
add
mov
out
or
(bad)
shr
mov
out
or
movs
and
test
lock
xchg
cwde
mov
test
bound
test
lods
je
add
push
sbb
or
pop
in
or
es
fld
adc
addr16
rcl
sub
js
and
repnz
pushfw
call
inc
add
je
lods
xchg
sub
pop
loopne
test
aam
shl
ret
sbb
sbb
les
xor
adc
mov
sub
lock
stc
mov
sti
pop
or
mov
js
cmc
loopne
in
or
js
imul
and
rol
or
cmps
mov
fadd
aas
je
push
push
je
mov
add
(bad)
hlt
inc
dec
dec
xchg
pop
sbb
retf
clc
in
jmp
hlt
fdivr
mov
push
jae
js
inc
sti
retf
mov
test
jl
and
pop
cmp
rcr
cmps
(bad)
test
mov
pusha
test
fmulp
sub
pop
add
(bad)
fs
sbb
push
cmp
pop
jo
loop
(bad)
jl
sub
jo
inc
inc
mov
mov
dec
imul
(bad)
repnz
mov
je
out
ret
sbb
and
nop
mov
pop
pop
pusha
or
cmp
lds
dec
xor
ja
imul
push
fnstcw
jo
cmp
loop
jl
mov
dec
loope
xor
popa
xor
cli
and
or
sub
xchg
sbb
mov
call
ins
mov
test
gs
mov
js
add
mov
mov
repz
je
je
dec
mov
ror
nop
pop
xor
out
(bad)
les
mov
inc
mov
mov
js
in
push
xchg
push
pop
cwde
out
mov
rcr
mov
cwde
and
test
push
shr
adc
test
jmp
mov
ins
pop
mov
mov
dec
push
add
int
cdq
cwde
xchg
out
clc
sbb
adc
mov
je
push
imul
sbb
movs
mov
sub
pop
dec
repnz
jp
push
fsub
dec
fs
enter
mov
jo
fcomp
lock
jge
out
in
jmp
mov
test
sbb
mov
jne
dec
sub
jo
pop
movs
adc
inc
leave
ins
sbb
dec
or
test
or
sub
mov
ret
fimul
aam
in
xor
call
xchg
stos
jl
or
mov
or
xchg
cmp
and
lock
mov
cwde
sbb
dec
dec
adc
mov
les
mov
fs
pop
mov
sbb
mov
cmp
lods
xchg
xor
and
fiadd
jge
in
lods
(bad)
inc
cwde
sbb
lea
cdq
inc
movs
sub
loope
in
in
enter
into
fsub
jmp
sub
xchg
sbb
and
mov
pop
inc
inc
repnz
pusha
aad
jl
adc
mov
cli
test
push
or
pop
in
pop
shr
imul
push
cwde
jae
dec
push
adc
ds
sub
inc
cmp
mov
imul
movs
in
movs
push
test
adc
mov
mov
les
cld
sti
push
pop
cld
and
or
mov
adc
lahf
fsub
and
in
xor
or
sbb
xchg
popa
popf
mov
adc
nop
out
and
lods
je
(bad)
leave
fs
cmp
jl
or
add
dec
lods
add
cmp
jb
arpl
data16
sbb
fadd
stc
or
xor
push
int3
fidiv
sbb
test
fcom
mov
pop
push
and
mov
mov
jle
pop
shr
inc
or
mov
mov
push
loopne
test
lods
inc
pusha
xchg
mov
xor
je
les
cmp
js
xor
and
mov
loopne
outs
mov
sbb
lods
ins
call
pop
and
cmps
movs
repz
dec
xchg
mov
dec
adc
mov
test
(bad)
adc
fcomp
sbb
(bad)
and
and
fdiv
pop
data16
outs
mov
lods
fcomp
fmul
push
mov
repz
enter
push
and
push
sbb
add
sbb
ret
and
int
sub
push
or
ins
xchg
aam
pop
push
pushf
push
xor
cmc
fmul
jb
dec
push
cmp
out
sbb
mov
js
in
test
pusha
mov
and
adc
ds
je
dec
sbb
pop
mov
cmp
cmp
sub
adc
shl
repnz
xchg
aaa
into
imul
or
pusha
daa
cli
push
shr
daa
fisub
mov
mov
sbb
push
jle
into
lock
js
mov
out
mov
sar
xor
mov
or
ret
cdq
jne
sbb
add
inc
cli
push
inc
push
pop
movs
pop
aam
les
clc
dec
je
aas
sahf
or
(bad)
mov
stos
mov
ins
mov
sar
int3
mov
stc
adc
and
pusha
and
push
shl
xor
clc
xchg
cmps
pop
fsub
xor
xor
cmp
pop
sti
hlt
pop
into
push
jo
fcom
jnp
dec
test
(bad)
call
mov
lds
and
or
inc
jo
push
gs
imul
push
add
jl
fld
cmps
sub
inc
scas
ret
cmp
cld
xchg
cmp
pushf
xor
sub
dec
pusha
or
cs
mov
adc
daa
dec
push
nop
inc
shl
in
fadd
jp
jbe
ret
sbb
xchg
pusha
mov
and
fild
mov
fcmovne
loopne
psubb
popf
ins
and
mov
cmp
dec
enter
aam
bound
test
rol
adc
lods
xchg
cmc
cmp
sub
inc
(bad)
dec
movs
xchg
or
xor
js
add
pusha
lds
push
add
lods
or
in
cld
fs
and
daa
mov
ins
jmp
xlat
clc
std
fs
mov
mov
inc
adc
dec
inc
cmp
add
or
mov
adc
and
out
lds
mov
push
rcl
or
hlt
scas
dec
sub
mov
or
leave
cmp
in
mov
rcl
cwde
ja
sbb
test
cmc
sub
cmp
and
addr16
inc
and
outs
mov
sub
push
mov
add
push
lods
push
adc
mov
mov
hlt
dec
sub
xchg
sbb
push
pop
fs
or
int
(bad)
int3
pushf
ror
in
ds
mov
jb
popa
cmp
sub
mov
sbb
jmp
je
jmp
cmp
sbb
mov
sbb
xor
loopne
xor
fcom
pop
cmp
in
push
pop
fnstcw
fdivr
sbb
adc
mov
pop
call
push
xchg
jbe
pushf
or
stc
lods
inc
xlat
repnz
ins
add
ds
loopne
xlat
mov
stos
cmp
and
push
mov
dec
or
je
cld
cwde
inc
add
lods
loope
or
or
adc
adc
xor
push
xchg
mov
cld
sub
fs
and
xchg
cmp
test
call
push
push
sahf
ror
xor
shr
aam
pushf
mov
jp
sbb
cli
in
inc
bnd
les
add
sbb
xlat
pushf
push
addr16
int3
fld
fnstenv
test
int3
sti
cdq
inc
dec
sub
shl
(bad)
nop
ins
mov
in
or
inc
outs
es
adc
mov
pop
sbb
and
add
sub
rcl
test
cmp
mov
adc
in
cmp
pushf
mov
or
mov
es
rcl
pop
cwde
cdq
xchg
rcr
fdiv
and
fsubp
xchg
cmp
dec
inc
dec
jmp
ds
loopne
xor
rol
clc
cwde
loop
sub
aam
ss
mov
and
push
lahf
and
js
lock
push
add
retf
mov
jbe
cwde
sub
pop
aam
push
adc
sbb
fcomp
pusha
inc
xor
add
retf
ror
jne
pop
adc
cli
dec
shl
sbb
push
pusha
mov
fsubr
mov
mov
data16
(bad)
mov
fdivr
inc
mov
sbb
pop
mov
in
fcomp
sub
std
cmp
cmovs
mov
inc
xor
sub
push
hlt
mov
mov
movs
push
adc
test
cmp
xor
mov
mov
outs
stc
ja
cld
sub
xchg
mov
pop
nop
int3
popa
cwde
push
movs
add
les
pop
icebp
cmp
push
fs
sbb
mov
mov
in
push
add
and
test
shr
xchg
add
cdq
cmp
pop
fiadd
xor
cmp
push
push
xchg
pop
in
popf
pop
test
sbb
jb
mov
adc
and
call
lds
ds
in
or
lock
les
bound
xor
push
nop
jns
(bad)
xor
inc
lods
fild
add
call
pop
mov
rol
out
mov
rcl
in
sbb
mov
and
sub
js
adc
mov
inc
cmp
adc
bound
or
pop
test
pop
pusha
mov
jo
std
pop
in
cli
xor
cld
jbe
std
dec
dec
push
and
and
add
sub
xchg
int
jmp
mov
jl
inc
mov
mov
adc
mov
lods
pop
icebp
int
add
mov
sbb
repz
fs
scas
pop
adc
or
and
das
enter
enter
mov
sub
jp
mov
cmp
inc
outs
push
mov
cmps
movs
test
mov
cmp
js
dec
jl
dec
adc
ins
mov
movs
std
pop
in
dec
pop
mov
jo
cwde
xchg
mov
dec
pop
lock
fidiv
push
xlat
cwde
push
pop
in
mov
mul
mov
adc
mov
ins
jmp
in
into
mov
inc
into
pop
shl
push
push
sbb
aas
pop
movs
sbb
cmc
sub
gs
mov
push
and
mov
hlt
fbstp
cmc
adc
or
sbb
jne
lods
call
enter
je
pushf
aaa
add
and
xchg
ins
mov
pop
mov
or
push
movs
pop
popf
push
or
nop
icebp
adc
enter
xor
sbb
sar
out
push
push
mov
push
fsub
or
pop
data16
out
ror
adc
mov
popf
outs
dec
lock
rcr
or
fs
xlat
add
mov
(bad)
sbb
ss
xor
rcl
mov
pop
mov
or
add
cmp
sbb
mov
clc
rol
jnp
arpl
mov
(bad)
fisttp
test
sbb
iret
or
cmp
jl
in
add
xchg
mov
or
lods
ret
xor
pop
jae
mov
cld
and
push
mov
sub
ret
add
cwde
pop
fs
fidivr
in
in
mov
xchg
shl
cmp
jo
add
sub
or
loopne
cmp
push
mov
int3
xor
dec
lods
pop
icebp
xchg
popf
int3
movs
in
jle
mov
sub
mov
test
push
xchg
cmp
(bad)
test
stos
or
leave
scas
adc
pop
aaa
mov
xor
fldenv
jge
fs
or
push
scas
loopne
(bad)
mov
lods
call
je
adc
jecxz
or
adc
xor
add
call
xor
jno
inc
push
pop
pop
fdiv
mov
hlt
mov
scas
dec
lock
adc
xchg
sbb
mov
adc
push
cmp
push
les
lods
loopne
fisubr
xor
cmp
xchg
std
or
bound
cmps
mov
nop
cwde
enter
mov
mov
test
inc
sar
mov
pusha
mov
xchg
sub
into
inc
nop
dec
enter
push
aad
ins
or
nop
mov
cmc
jns
test
jmp
lods
dec
fcom
fsub
cli
test
stos
aam
cld
pushf
addr16
add
add
ror
and
clc
movs
inc
fsub
adc
(bad)
mov
or
mov
mov
aam
loopne
ss
in
sub
pusha
loopne
enter
retf
cld
dec
loop
or
stos
push
add
js
lds
hlt
arpl
add
std
adc
pop
in
loopne
or
push
mov
and
dec
push
in
push
test
fs
mov
jo
ins
pop
cmp
cmp
sar
fcom
sbb
gs
fadd
sub
pushf
add
or
xchg
mov
push
xchg
lea
hlt
jp
jbe
inc
or
adc
and
aad
cmps
xor
shl
cld
pop
add
pop
loopne
je
stc
pop
inc
or
xchg
jae
outs
xchg
mov
jle
add
call
in
jno
inc
mov
and
fist
repnz
call
add
movs
mov
cmp
inc
or
cmp
and
and
dec
mov
inc
xchg
adc
dec
add
or
jo
clc
push
mov
retf
jo
dec
pushf
lock
test
sar
dec
adc
sbb
int
pop
inc
popa
pop
lock
shl
add
mov
cld
imul
jge
gs
cwde
fdiv
nop
mov
icebp
(bad)
fcom
pop
cmp
in
cmp
ins
pusha
clc
dec
retf
mov
movs
aam
fdiv
sbb
adc
cmp
sub
pusha
ins
arpl
push
or
cmps
and
and
and
js
cmp
inc
popf
fcomp
mov
sar
pop
movs
(bad)
cmp
and
or
sub
and
add
les
pop
push
les
dec
fs
pop
loopne
nop
mov
test
xor
stos
inc
cmc
xchg
test
xor
int3
mov
(bad)
int
cwde
je
push
cmp
xchg
mov
ins
xchg
sub
bound
push
and
xlat
add
data16
adc
and
loopne
cmp
fsubr
cld
and
jl
test
(bad)
ror
cwde
jae
pop
and
jb
mov
ficomp
or
sbb
in
sbb
pusha
jl
mov
test
sahf
inc
dec
dec
adc
xor
lock
aam
dec
out
cld
adc
adc
les
mov
rcl
outs
je
ins
test
test
inc
out
(bad)
loopne
enter
clc
data16
pusha
mov
xchg
fsubr
test
int3
push
mov
dec
pop
popa
add
movs
aad
lock
int3
cmp
das
hlt
lods
fwait
mov
popa
ins
das
hlt
or
xor
push
icebp
hlt
pushf
mov
icebp
fs
sbb
mov
adc
enter
std
adc
inc
in
pop
lods
and
pusha
add
in
repnz
rcr
fwait
mov
lds
fs
mov
jb
fwait
pusha
dec
scas
mov
test
or
xor
mov
adc
cli
push
retf
fsubr
test
push
and
xchg
jmp
ins
xchg
cld
loop
imul
jge
aam
std
pop
in
jl
cmc
xchg
je
mov
or
add
sbb
adc
(bad)
in
lods
call
mov
mov
sub
cwde
and
int
mov
pop
outs
xchg
mov
clc
ret
inc
jnp
aam
cwde
test
loop
mov
cmp
dec
pusha
adc
push
call
aad
ror
out
mov
push
aam
inc
jns
inc
daa
or
mov
(bad)
les
aad
cld
adc
loopne
push
sbb
fs
sbb
mov
sbb
jmp
push
cld
std
xchg
sbb
js
test
mov
xchg
(bad)
ds
popa
xor
in
cmp
rcr
hlt
ja
fiadd
mov
cmps
into
int3
xor
retf
les
retf
je
sbb
xor
sbb
gs
loop
ja
stc
cdq
add
jmp
pushf
outs
nop
xor
sar
or
(bad)
mov
scas
jae
inc
jl
icebp
nop
leave
shl
clc
fmul
adc
out
and
or
and
adc
sub
or
add
cmp
fucom
dec
mov
mov
fdivr
lock
pop
nop
std
retf
scas
or
movs
loope
repnz
aaa
call
clc
in
mov
and
rcl
push
js
fmul
inc
(bad)
xor
popa
fmul
leave
shl
jp
loopne
call
aam
stos
xchg
pop
mov
js
push
std
sub
pop
push
and
(bad)
mov
adc
test
mov
js
and
scas
pop
in
cdq
or
cmc
and
push
rcr
movs
out
enter
cli
or
mov
mov
adc
cmp
loopne
repnz
ret
or
inc
push
adc
mov
sbb
ins
mov
mov
lds
(bad)
in
jbe
push
mov
pop
cmps
loope
push
adc
fistp
sub
add
xchg
mov
cmp
(bad)
jp
ins
adc
in
push
push
leave
pop
out
call
pop
sbb
pushf
rcl
mov
sub
mov
mov
xor
mov
xor
mov
adc
jmp
adc
jne
in
in
(bad)
hlt
push
aam
mov
pushf
hlt
sbb
mov
or
xchg
shl
add
daa
in
das
push
int
ret
in
cdq
pop
mov
fcom
fadd
push
int
loope
xchg
ins
test
cld
js
add
jo
lock
mov
loopne
mov
push
jne
and
push
xchg
(bad)
pop
retf
adc
hlt
lds
mov
test
cmps
jle
mov
ror
movs
(bad)
mov
jmp
inc
cmc
fsub
in
daa
ins
jo
in
aad
sub
ret
lods
cwde
movs
arpl
ss
outs
dec
loope
mov
neg
fsub
jg
xchg
and
fstp
or
scas
je
dec
mov
push
pushf
jo
bound
sub
iret
xchg
aam
push
sub
mov
addr16
mov
in
pop
stos
aad
lods
dec
xchg
dec
cmp
xor
lock
sub
fdiv
sbb
(bad)
xlat
sub
inc
push
sub
adc
js
jmp
les
lods
cmp
nop
jae
movs
push
pushf
fistp
fdiv
adc
sbb
mov
fldcw
(bad)
cmp
test
fwait
ins
mov
rcr
inc
push
fimul
sub
ret
sub
popa
pop
mov
cld
aam
ins
or
fdivr
mov
lods
jnp
out
lea
mov
inc
adc
sub
xchg
mov
jo
loopne
sbb
sub
sub
xchg
test
and
or
movs
pusha
mov
inc
mov
jns
inc
ror
cmp
std
inc
jp
rcl
in
jmp
repz
fdiv
add
add
in
movs
rcl
sbb
mov
jp
mov
and
in
shl
xchg
test
mov
clc
push
or
sbb
pushf
hlt
mov
dec
in
aam
fimul
popa
push
sub
aam
xor
adc
call
les
add
xor
retf
movs
aam
hlt
jo
clc
or
pusha
mov
out
cmp
inc
push
(bad)
fcomp
cld
cwde
xor
or
int3
adc
ss
js
bound
cmp
adc
jo
cmp
outs
cwde
ins
cwde
(bad)
popa
hlt
cwde
mov
jns
pusha
mov
test
push
fcomp
int3
cmp
call
nop
pop
fldenv
fdivr
cmps
loopne
cmp
inc
call
js
push
popa
cwde
pandn
xchg
mov
scas
rcl
dec
aam
retf
lock
cdq
in
nop
in
adc
pushf
dec
dec
in
mov
and
data16
pop
(bad)
push
lock
dec
mov
mov
mov
cmp
sub
in
lods
sar
enter
jle
dec
int3
or
cli
int3
jmp
sti
jo
lods
ss
cs
dec
xor
(bad)
or
push
adc
aad
(bad)
fdiv
mov
cmp
sub
ret
test
add
cmps
cmp
mov
aam
add
addr16
pop
dec
pusha
ss
lods
adc
mov
inc
inc
sub
add
adc
rcl
test
pop
imul
lods
pusha
in
int
or
loopne
or
xor
xor
ds
call
mov
les
mov
cmp
or
jno
mov
hlt
mov
xchg
js
push
cmp
mov
scas
xor
rcl
loop
mov
cmp
cmp
add
add
lods
push
in
sbb
or
jle
fsub
pop
push
cld
inc
xor
fadd
mov
pop
jmp
xor
mov
add
inc
loope
mov
xchg
sbb
std
in
ror
inc
pop
mov
popf
ins
hlt
adc
aam
jg
popa
sub
xchg
inc
mov
dec
jb
adc
dec
pushf
adc
adc
and
add
ficomp
mov
sub
and
push
(bad)
sub
cwde
inc
dec
shl
fcomp
std
mov
lea
in
test
sbb
movs
jns
test
sbb
add
js
fld
js
je
push
in
mov
ins
clc
mov
cmp
mov
hlt
in
pop
adc
push
mov
fucom
mov
cld
test
nop
movs
ror
xor
cwde
pop
inc
stc
retf
dec
dec
movs
loope
nop
add
sar
out
loopne
js
mov
in
or
push
pop
pop
jmp
scas
xor
out
dec
mov
loop
pop
test
sub
or
mov
mov
cdq
(bad)
mov
push
aad
pop
test
sub
lods
xchg
in
je
loopne
mov
mov
adc
fsub
fs
ror
retf
pusha
ja
adc
enter
lock
pop
adc
cwde
stos
sub
clc
retf
jo
je
dec
int3
xlat
hlt
cmps
cmp
pop
or
fs
cdq
xor
lods
mov
and
jnp
clc
jl
in
test
push
sub
int
adc
je
dec
cld
mov
sub
pop
mov
cmp
add
push
je
mov
test
cwde
call
adc
jmp
inc
cld
and
mov
inc
xchg
and
test
jb
stc
mov
sbb
cwde
icebp
mov
or
call
rol
lods
add
lods
loope
push
pop
sub
out
mov
je
mov
repnz
adc
jo
sbb
cmp
adc
pop
mov
mov
es
lods
or
push
lods
enter
hlt
(bad)
std
in
jnp
or
dec
mov
jmp
jmp
dec
or
dec
xor
mov
inc
and
aas
sbb
adc
je
ins
imul
add
mov
mov
hlt
mov
test
repnz
pop
sub
ss
dec
in
xor
int3
aam
ins
retf
dec
push
sbb
push
je
into
mov
fmul
out
xchg
ins
fdivr
mov
xor
sar
fs
fstp
or
adc
xchg
mov
adc
rcr
jo
mov
sub
sub
lods
inc
jp
ja
xchg
cmp
les
pop
clc
jbe
jl
js
popa
or
jno
pop
out
call
or
mov
sbb
in
test
js
sbb
add
xchg
adc
and
sub
xchg
mov
cmp
mov
pop
pop
push
sbb
inc
jns
cmp
lods
push
and
cmp
fbld
dec
mov
adc
xchg
and
dec
cmp
test
mov
dec
adc
mov
pop
inc
les
jnp
in
mov
cmp
sub
xor
repz
or
in
fisttp
mov
aas
in
and
sub
stc
and
and
dec
pusha
mov
jl
fs
push
aad
jle
and
dec
ror
adc
stos
js
jns
inc
lods
retf
mov
mov
loope
cmp
mov
sub
push
cs
push
xchg
clc
cmp
call
dec
xor
add
push
or
lahf
push
stos
cmp
pop
pushf
push
mov
mov
mov
int3
mov
in
sbb
adc
sub
es
aaa
sbb
inc
repnz
xor
mov
lock
enter
(bad)
adc
mov
adc
out
add
adc
outs
xor
mov
and
mov
sub
xchg
(bad)
in
iret
mov
and
jl
pop
sbb
js
imul
js
mov
sbb
jne
test
jl
inc
or
(bad)
pop
pop
jl
sub
sub
mov
addr16
sbb
xchg
clc
icebp
sub
mov
mov
sub
loopne
test
loop
xor
loop
jmp
push
movs
mov
jmp
sub
call
sbb
push
cmps
mov
movs
add
inc
or
xchg
fsubr
lods
adc
or
icebp
xchg
sbb
arpl
push
push
(bad)
jl
push
sar
je
lods
das
adc
clc
xchg
cmp
pop
cwde
mov
lock
inc
or
or
(bad)
adc
mov
dec
mov
sbb
loope
(bad)
fnstsw
pushf
movs
and
dec
(bad)
sar
adc
sub
bound
cld
shr
leave
fdiv
mov
jo
adc
hlt
movs
int3
lods
xchg
xor
or
or
fnstsw
dec
ficomp
out
pusha
jmp
std
ins
push
sub
push
test
mov
adc
aam
cwde
xchg
and
fs
push
or
lea
je
(bad)
pop
pop
imul
aaa
or
clc
in
dec
lods
sahf
aam
jl
movs
push
or
push
pusha
scas
cld
xor
pop
enter
lock
sbb
fs
ds
adc
hlt
ret
pushf
lods
lods
idiv
js
inc
lea
mov
mov
shr
std
fdiv
shl
sbb
les
xchg
jo
cmp
mov
cdq
popf
loopne
mov
add
js
in
dec
xchg
repz
pushf
(bad)
and
pop
jns
pusha
mov
movs
fimul
mov
jne
push
adc
ins
in
pushf
xor
and
xor
imul
or
cld
loop
or
mov
mov
or
mov
push
loopne
jmp
push
cmp
popa
rol
adc
xor
(bad)
std
sbb
test
cmp
jg
movs
push
or
inc
and
clc
sbb
cmp
mov
stos
les
or
in
jl
inc
or
outs
loopne
sub
and
xchg
push
in
xchg
mov
pop
stos
lds
jle
pop
jo
pop
repnz
pop
lods
push
sub
aam
int3
call
xchg
(bad)
enter
cmp
jg
aam
(bad)
xor
mov
add
pop
nop
sub
ret
imul
fdivr
sbb
mov
aam
leave
push
call
sub
mov
std
inc
adc
or
or
jb
inc
js
(bad)
push
cld
mov
mov
and
sbb
sub
sub
cmp
test
loopne
cmp
jecxz
in
xor
inc
rcr
push
mov
retf
sbb
xchg
gs
imul
cli
mov
mov
test
mov
lods
test
pop
adc
js
je
ins
push
and
mov
mov
movs
rol
nop
jne
pushf
dec
xor
ss
aam
cmp
sub
dec
lods
hlt
inc
inc
call
rcl
cs
in
xor
mov
scas
xor
or
not
xchg
xchg
pop
shl
xor
cld
das
in
jno
clc
mov
cmp
fwait
ins
ret
int3
xor
(bad)
aam
push
les
pop
mov
ss
enter
cmp
jecxz
cli
xchg
xor
test
mov
mov
pop
imul
and
pusha
xor
clc
pop
ret
je
push
push
je
mov
mov
rcl
mov
and
mov
lock
sbb
cld
pop
ss
dec
inc
sub
push
std
fnstenv
pop
xor
mov
icebp
lods
cmp
and
jo
in
aaa
mov
sbb
pop
hlt
stos
addr16
int3
jmp
test
inc
pusha
mov
sbb
jne
test
xor
(bad)
aam
clc
fsub
movs
pop
fnstenv
mov
or
nop
adc
hlt
jecxz
mov
aam
cld
add
jbe
fstp
add
jne
(bad)
push
dec
mov
pusha
shr
add
inc
loop
dec
push
dec
and
clc
dec
cld
aam
in
int
jno
cwde
mov
push
pop
add
pushf
fcom
sar
xor
jo
idiv
xchg
js
inc
cmp
dec
xchg
shl
cmp
sbb
call
fimul
(bad)
pusha
dec
jns
fcomp
cmp
cmp
les
and
dec
or
loope
add
dec
aas
mov
xor
gs
dec
dec
cld
sbb
adc
xor
adc
cld
inc
mov
add
push
and
jecxz
int3
movs
adc
adc
test
clc
jb
sbb
test
(bad)
cmp
mov
and
test
fsub
pop
(bad)
fnstenv
and
mov
stos
call
and
fnstsw
les
mov
xlat
(bad)
mov
nop
and
test
loopne
mov
adc
sbb
enter
add
or
push
add
add
mov
dec
int3
push
ror
not
jge
and
cwde
jb
xor
icebp
sbb
movs
push
ins
sbb
cmp
fs
in
hlt
lods
cmp
xchg
nop
lods
mov
ins
mov
sbb
clc
pop
rol
in
jl
jmp
pop
call
bound
(bad)
(bad)
mov
ins
cmp
pusha
pushw
in
and
les
icebp
inc
popf
retf
test
movs
inc
stos
sub
mov
mov
aam
mov
enter
jg
cmp
fdiv
mov
pop
ror
mov
pop
push
mov
cmp
mov
or
push
loopne
mov
or
lods
enter
dec
mov
ffree
sub
fdivr
push
adc
push
xor
add
sbb
repz
dec
enter
popf
jl
ds
and
push
add
je
jl
push
jo
clc
adc
xchg
rol
js
sub
idiv
dec
(bad)
movs
les
loope
movs
add
lods
loope
push
mov
movs
je
or
adc
js
or
rcr
test
ror
cld
mov
into
add
loop
xor
cld
xchg
cmc
lock
ja
sbb
inc
mov
test
rcr
in
imul
jns
in
dec
or
aam
jne
addr16
ret
fsub
sbb
adc
mov
sbb
push
push
lods
fcomp
jge
add
add
cli
xor
mov
and
lods
xchg
cmp
imul
xchg
and
add
mov
(bad)
pop
lods
test
adc
rol
or
rcr
out
xor
in
int3
pop
icebp
sub
je
push
dec
adc
dec
ins
xor
pop
stos
inc
pushf
int3
cmp
pop
jl
jno
pushf
mov
jmp
adc
call
jl
jl
loop
test
mov
and
fcmovnb
sbb
sbb
mov
mov
in
fstp
mov
in
jl
add
push
xchg
xlat
pop
(bad)
int3
int3
fcom
cld
xchg
movs
mov
int3
push
xchg
shr
dec
aaa
mov
dec
bound
rol
aam
pushf
or
sub
sub
lahf
cdq
sbb
lahf
inc
mov
cld
dec
test
mov
neg
pop
push
jge
(bad)
fisub
push
sub
or
and
out
shl
jg
outs
push
and
mov
lods
sub
mov
enter
nop
enter
nop
push
pop
and
je
cli
dec
push
push
and
and
jbe
sti
loope
ds
xor
call
in
aas
mov
and
neg
push
mov
inc
repnz
mov
(bad)
cld
in
imul
xchg
pop
lea
je
pop
dec
add
rcr
lock
xchg
mov
jne
cmp
inc
cwde
fs
sbb
call
shr
hlt
bnd
inc
xor
test
loopne
push
(bad)
aam
dec
ja
or
fcom
cmp
les
jl
ss
ja
in
dec
sbb
js
js
pop
or
loopne
test
adc
mov
pop
pop
jecxz
call
test
xchg
hlt
ds
and
cmp
cmp
adc
aam
and
pop
cmp
sbb
mov
mov
test
pop
lods
sub
pop
cmp
ins
and
jbe
cmps
fsubr
cmp
call
jne
mov
stc
nop
hlt
sbb
push
adc
cwde
and
inc
inc
sbb
cmp
js
push
pop
xchg
jle
inc
and
pop
sub
fidiv
inc
jl
sub
cld
and
jl
push
push
lods
sbb
sbb
mov
nop
and
and
jl
hlt
push
and
jg
test
adc
int3
enter
cmp
ins
pop
pushf
test
cmp
jne
jl
mov
cmp
ja
js
add
lahf
aam
sub
je
dec
mov
mov
or
in
dec
dec
dec
cmp
loopne
jmp
and
ret
std
or
sub
mov
jl
sbb
cwde
cmps
inc
inc
dec
inc
mov
xor
fmul
fiadd
add
sbb
rol
adc
mov
lods
cmps
adc
jl
sbb
sub
movs
mov
mov
jl
xchg
mov
cmp
loopne
mov
mov
je
xchg
pop
test
lods
inc
je
sub
cmps
movs
int3
sbb
adc
inc
inc
and
or
icebp
mov
test
sub
hlt
rol
je
mov
adc
add
lods
add
mov
lods
gs
pop
xchg
dec
lods
xchg
call
sbb
or
mov
mov
les
pusha
adc
jno
stc
in
and
(bad)
adc
mov
fdiv
and
dec
cmp
je
int3
dec
hlt
(bad)
fdiv
adc
ins
dec
mov
int3
xor
add
push
int3
jl
movs
mov
add
fs
stc
xchg
sub
push
adc
xor
fsub
mov
js
add
je
xchg
fmul
sbb
dec
(bad)
push
push
and
mov
mov
pop
in
mov
mov
inc
add
inc
clc
xchg
xor
daa
pop
mov
inc
jo
mov
pop
pop
add
push
fs
push
mov
sub
xchg
push
pop
dec
scas
push
into
sbb
js
data16
and
mov
sub
int3
mov
pop
mov
inc
loop
cmp
(bad)
icebp
dec
test
xchg
clc
sbb
jge
push
shr
test
mov
pop
push
mov
sub
adc
ins
les
pop
adc
pushf
mov
mov
fs
mov
xlat
add
pop
popf
inc
test
adc
cmp
cwde
(bad)
push
xor
mov
and
popf
pop
jl
and
pushf
bound
mov
pop
out
pushf
lods
and
call
inc
stos
sahf
lods
sbb
loope
jmp
xor
inc
inc
std
shl
mov
sbb
add
loop
jmp
xchg
inc
cld
mov
fcom
mov
cmp
pop
mov
imul
xchg
test
in
inc
inc
or
push
lods
xchg
xchg
xchg
add
ins
add
aam
pop
aaa
adc
adc
imul
cmp
add
and
in
shr
test
inc
scas
call
scas
(bad)
int3
fs
int
inc
xor
inc
cmc
scas
xor
push
pop
push
mov
jb
clc
push
rcr
and
in
xchg
dec
sub
mov
mov
cmp
push
dec
push
loopne
inc
pushf
fcom
data16
dec
xchg
jo
add
into
(bad)
les
dec
fild
fxch
in
mov
shl
cmp
outs
cld
sti
rol
xor
dec
adc
enter
or
retf
pusha
or
mov
loopne
jnp
dec
rcl
add
ins
cmp
mov
out
push
lods
or
gs
xchg
fdivr
ror
je
aam
les
jl
in
xchg
aam
or
adc
js
loopne
mov
nop
xor
push
dec
loopne
shl
add
dec
test
pushf
ret
sbb
sbb
mov
out
adc
mov
scas
shr
inc
mov
xchg
inc
aaa
adc
jg
loope
out
or
call
xchg
xor
fsub
cmps
sbb
fsub
lock
adc
and
std
cmp
push
mov
inc
xchg
les
cmp
lods
add
stc
dec
add
mov
cwde
pop
jae
js
mov
mov
pop
add
lods
cld
clc
xlat
push
sbb
mov
xchg
in
jno
inc
push
leave
int3
cdq
lods
sbb
fucom
in
pushf
mov
mov
and
repz
mov
nop
xchg
data16
push
add
sbb
mov
xor
les
xchg
push
je
movs
dec
lods
sbb
loopne
sub
sub
xor
fiadd
push
mov
(bad)
jmp
sbb
lods
adc
pop
pop
fs
cmp
cmp
sub
clc
lods
and
scas
push
fnsave
push
int3
hlt
pop
jo
fisub
cli
ja
mov
mov
or
mov
push
mov
js
mov
in
fistp
jo
pusha
push
push
cld
loop
add
jb
push
mov
dec
in
push
mov
push
pusha
sub
retf
test
dec
sbb
lods
sub
(bad)
loopne
push
inc
dec
adc
neg
adc
rol
xor
test
rcl
pop
mov
in
mov
js
add
sub
int3
cld
adc
cmp
mov
xor
sbb
add
lds
int3
stc
push
pusha
mov
out
test
add
mov
adc
cmp
jne
fsubr
xchg
mov
fcomp
push
mov
fcomp
adc
or
pop
mov
enter
pop
dec
sbb
xor
xor
dec
jmp
ins
and
fisubr
test
clc
mov
mov
int3
adc
mov
fsubr
add
or
sub
adc
movs
jo
dec
fmul
adc
or
push
in
sbb
jle
xchg
adc
jae
xor
test
js
nop
js
mov
mov
test
jno
adc
pop
pushf
push
sar
jo
mov
jns
add
sbb
cld
cwde
movs
shr
jl
and
jno
movs
sbb
adc
out
sbb
mov
int3
cmp
add
pusha
dec
mov
adc
pop
stos
cli
jo
call
xchg
lock
sbb
add
retf
rcr
jae
pushf
and
push
int3
dec
sbb
xchg
inc
sub
ins
in
push
mov
pop
fcom
jle
in
lea
repnz
mov
and
movs
mov
loopne
enter
stc
cmp
jecxz
in
cmp
test
or
in
clc
leave
aaa
adc
mov
xor
aad
sbb
mov
mov
div
lods
test
or
cmp
hlt
xchg
sub
movs
pushf
jecxz
mov
call
inc
aam
pop
pop
pusha
pop
mov
mov
mov
in
bound
je
xor
shl
js
jp
xchg
add
mov
adc
mov
sbb
aas
jmp
push
sub
in
in
pop
push
mov
lods
ret
dec
leave
clc
adc
mov
pop
pop
and
lods
cmp
inc
jp
outs
dec
int3
fstp
int3
hlt
shl
mov
or
call
mov
dec
push
stc
shl
mov
test
xor
nop
clc
add
rol
dec
js
aam
sbb
pusha
mov
call
inc
mov
xor
nop
inc
cwde
inc
or
or
xlat
and
xor
and
or
and
push
add
xor
xor
int3
rcl
ret
add
int3
jle
mov
imul
cld
pop
loope
xor
cmp
and
jecxz
inc
cld
and
sub
sbb
in
mov
gs
mov
mov
push
je
push
jne
ret
dec
test
clc
clc
adc
cmps
aam
stc
xor
mov
pushf
xor
test
jmp
mov
(bad)
mov
mov
cdq
and
fdivr
loop
pushf
dec
out
fcom
fdivr
mov
adc
cmp
daa
and
push
pusha
(bad)
mov
cmc
jmp
aad
pop
adc
add
repnz
int3
sub
sub
pop
inc
sub
ins
cmp
sbb
ins
push
cmp
push
sub
inc
xchg
add
or
ficom
xor
test
leave
push
mov
cmp
add
in
clc
mov
mov
xchg
bound
mov
not
fdivr
sub
mov
scas
nop
jmp
rol
sub
push
or
je
push
push
adc
adc
pop
inc
inc
mov
cmp
and
inc
fmul
mov
lods
jb
loopne
shl
pop
call
adc
fdiv
sbb
icebp
push
clc
lea
dec
lock
pop
pop
les
dec
pop
push
nop
mov
pusha
inc
lds
xchg
nop
xchg
cmp
xor
adc
hlt
mov
pop
std
popa
mov
sbb
fs
clc
sahf
loopne
retf
sbb
push
aam
pop
sbb
or
sbb
inc
hlt
test
sbb
enter
mov
mov
jo
jo
xchg
cmp
inc
jne
sub
dec
test
imul
lock
aam
jl
and
sub
rol
sbb
cmp
sbb
dec
cwde
cmp
lods
mov
in
mov
daa
js
add
adc
push
dec
mov
iret
fwait
test
addr16
or
sbb
or
or
and
je
sub
add
push
mov
fmul
xor
cli
mov
push
retf
gs
js
mov
and
ja
fwait
sbb
shl
mov
icebp
or
je
pushf
mov
sbb
stc
mov
call
cmp
push
add
jmp
dec
bswap
shr
clc
movs
jno
pushf
adc
call
ret
cmp
loopne
(bad)
cmp
pop
js
nop
mov
and
mov
mov
jl
adc
ins
mov
xchg
stos
adc
clc
loopne
xor
sar
inc
retf
sbb
jmp
push
jmp
(bad)
adc
push
(bad)
cmp
ins
jno
fcom
ror
mov
test
jg
and
or
inc
xchg
xchg
enter
inc
xor
in
out
sar
cmp
mov
jmp
adc
pushf
mov
imul
jl
jo
call
pop
and
sar
imul
rcr
shl
push
arpl
cmp
in
mov
je
lea
and
adc
cwde
mov
pop
in
fs
dec
cmp
and
push
sbb
fbld
pop
lods
and
mov
dec
mov
mov
outs
mov
in
dec
pop
sub
loop
push
mov
and
or
inc
mov
mov
aam
fs
loopne
lods
sub
adc
cld
inc
fs
or
cdq
pushf
loopne
jo
sub
jge
mov
sbb
je
cld
add
fsubr
mov
dec
test
out
outs
(bad)
mov
cmp
sbb
dec
dec
push
(bad)
loopne
test
lods
movs
sbb
je
mov
cmp
test
xchg
ss
dec
cmp
jb
sbb
inc
jae
dec
or
sbb
hlt
pusha
adc
nop
xor
fisub
sbb
ins
(bad)
cmp
push
bound
cmp
sbb
inc
xchg
in
out
shl
jmp
xor
je
fsubr
xor
push
adc
sbb
push
call
dec
loopne
pop
and
lods
shl
xor
loop
xchg
in
ds
loope
xchg
xor
iret
clc
mov
cmp
stc
add
mov
je
ror
and
jo
sub
ins
call
xor
pop
and
sar
xor
call
in
lods
xor
clc
dec
nop
std
dec
fs
sub
sub
retf
pop
leave
or
dec
ret
fs
sbb
enterw
fimul
pusha
(bad)
jge
shr
mov
fdivr
in
ja
sbb
in
xchg
movs
iret
pushf
mov
sbb
daa
movs
and
enter
mov
dec
mov
pop
or
cmp
mov
ins
cmp
enter
dec
pop
inc
rcl
cmp
jmp
popa
add
and
int
dec
xor
inc
mov
les
outs
enter
ins
or
adc
mov
pop
add
mov
mov
xchg
mov
xchg
push
push
xchg
jl
in
sbb
les
xchg
add
shl
adc
aam
jl
and
(bad)
jo
rcr
sahf
nop
scas
xor
inc
int3
or
loopne
jmp
push
and
leave
push
ror
and
sbb
xchg
adc
cdq
fcomp
jo
mov
cmp
and
pusha
les
scas
mov
loope
adc
and
test
pop
mov
push
test
push
fs
jno
add
sub
int3
ret
add
loop
jl
js
push
sub
or
push
mov
push
push
lods
stos
jo
jne
inc
movs
dec
mov
cmps
fcomip
mov
and
dec
je
or
add
and
xchg
retf
and
add
push
loope
dec
nop
mov
cmp
jl
frstor
scas
pop
movs
ret
mov
movs
and
adc
outs
fchs
pushf
mov
cwde
push
mov
jmp
adc
push
jo
sub
ret
jle
es
sahf
lock
inc
lods
add
cld
push
(bad)
pop
fmul
sub
mov
mov
cmp
mov
leave
cmps
mov
jecxz
retf
loope
push
jmp
jbe
pushf
sub
push
sub
ror
retf
in
adc
mov
jo
xor
dec
stos
gs
lahf
loop
lods
fs
sub
adc
ret
fdiv
lods
lods
pop
mov
sbb
jb
(bad)
xor
and
shr
xchg
pusha
dec
imul
jg
fs
(bad)
cld
jp
mov
or
leave
lock
xchg
add
adc
loopne
je
sub
cs
in
xor
test
pop
cdq
sub
shl
dec
push
push
mov
jo
scas
sub
inc
mov
pop
aaa
popa
fldenv
xor
sub
adc
in
jl
les
push
push
fs
call
aam
les
mov
jo
(bad)
std
xor
or
push
mov
xor
pop
dec
sahf
nop
push
test
adc
in
aam
mov
push
pop
and
jbe
stc
rol
fldcw
dec
push
hlt
pusha
push
or
je
fs
clc
sti
sbb
enter
sub
sub
popf
in
mov
mov
jo
sbb
add
sub
enter
and
retf
or
rcl
jo
push
or
enter
pop
pop
push
mov
js
push
pop
jmp
aam
cmp
cmp
outs
fsub
pop
rcl
(bad)
stc
jo
ds
mov
inc
add
mov
dec
mov
(bad)
cmp
mov
sub
adc
dec
xor
call
loop
repz
neg
dec
hlt
cmp
add
ins
fcmovbe
sub
and
fdiv
popf
in
scas
les
hlt
fdiv
add
push
adc
les
xchg
mov
je
in
push
jmp
push
jl
mov
dec
mov
sub
xchg
call
fisttp
stos
in
(bad)
mov
pushf
rcr
mov
pushf
jg
adc
sbb
(bad)
push
and
jo
adc
jb
pushf
and
xor
xchg
adc
mov
pop
rol
and
add
fs
lock
lods
cmp
mov
sbb
aas
pusha
fimul
pop
fdivr
out
or
sub
sub
nop
inc
or
popf
int
push
arpl
push
aad
jl
fs
mov
(bad)
mov
dec
mov
scas
push
push
popa
sub
stos
push
test
aam
out
pop
sbb
mov
add
call
xchg
(bad)
adc
test
mov
inc
cdq
dec
cmp
pusha
shl
(bad)
repz
adc
xor
pop
in
test
mov
mov
fsubr
and
or
clc
(bad)
stc
mov
pop
dec
test
outs
fdivr
mov
js
push
int3
push
repz
rcr
shr
(bad)
xchg
jle
xor
ror
add
call
jl
sbb
and
xchg
stc
sub
adc
dec
xor
nop
ins
push
push
jo
adc
adc
cmps
aam
cmp
push
bound
les
cld
test
jl
push
lock
movs
test
mov
dec
mov
and
js
repnz
mov
(bad)
mov
sbb
mov
nop
test
and
jle
adc
dec
loopne
leave
mov
rol
mov
cwde
out
pop
or
int3
push
xchg
cmp
dec
test
pop
cwde
cmps
inc
cmp
cmp
je
clc
and
jno
inc
jbe
xchg
rol
cmp
add
cld
test
out
adc
jmp
pop
sub
cmp
in
push
js
loopne
cld
sub
inc
xchg
bound
inc
lods
cmp
mov
jb
fs
jl
cmp
in
pop
hlt
dec
in
or
ins
call
push
fcmovu
mov
dec
ja
cld
add
js
nop
cmp
and
in
jnp
mov
clc
aam
cld
js
jo
fstp
dec
ja
inc
lock
xchg
mov
add
and
lds
in
mov
gs
dec
inc
jl
call
mov
(bad)
(bad)
enter
or
mov
cmp
mov
pmaxsw
call
sub
fdivr
dec
(bad)
std
int3
es
aad
les
in
adc
sub
loope
mov
je
ins
cs
nop
cmp
dec
xchg
test
imul
sub
mov
je
sbb
imul
cmp
mov
sbb
loop
push
je
xor
push
cmp
loope
div
cmp
bound
cmp
inc
je
gs
in
out
sahf
mov
lods
add
push
dec
mov
add
mov
cld
pop
and
push
imul
fs
(bad)
mov
int3
mov
in
in
(bad)
cmc
rcr
aam
call
sbb
int3
sbb
xabort
mov
movs
nop
hlt
(bad)
fld
call
dec
stc
add
push
mov
jp
inc
mov
cld
or
sbb
les
cmp
retf
sbb
mov
cmps
cmp
xor
lods
mov
mul
lods
push
jl
std
and
ret
jbe
dec
mov
inc
add
push
add
aam
loop
mov
int
les
js
repz
xor
cmp
or
sub
push
inc
std
fs
sar
fcom
and
ins
xchg
fst
dec
and
popa
nop
call
mov
cmp
fcmovne
mov
push
inc
test
dec
push
xor
inc
cmp
push
ror
and
sub
fadd
push
mov
ins
fsubr
push
jbe
std
push
cld
les
sbb
jo
mov
xchg
shl
dec
je
mov
add
mov
mov
fmul
adc
inc
mov
aas
sahf
and
pop
sahf
call
cld
rcl
pop
bound
sub
push
call
adc
enter
in
int3
aam
fadd
cmc
push
sub
xchg
mov
shl
fcomp
mov
cmp
(bad)
pop
mov
data16
shl
push
ret
out
jmp
add
aam
mov
push
js
cwde
pop
push
test
cld
jo
mov
add
pop
dec
movs
mov
int3
or
ror
push
lock
mov
fdiv
dec
xor
sahf
je
inc
mov
xor
jae
sbb
test
repz
sub
mov
lock
push
loopne
mov
xor
pop
jge
bound
push
and
mov
and
test
test
ins
mov
jg
in
int3
pusha
pop
sbb
jnp
cli
movs
cmp
xchg
fcomp
inc
jbe
push
adc
push
or
mov
int3
not
enter
cmp
mov
inc
pop
shl
ss
popa
shl
loopne
lea
pushf
sbb
sub
and
jl
push
adc
dec
push
mov
aam
add
or
xchg
(bad)
test
test
adc
ds
inc
jmp
push
push
mov
sbb
lahf
and
nop
cmp
adc
loope
inc
inc
ins
in
mov
jno
bound
fsubr
mov
dec
clc
sbb
mov
cdq
aaa
fimul
sbb
std
adc
nop
adc
je
push
pusha
test
cmc
fs
or
imul
aad
cld
sub
pop
loope
pushf
cwde
test
mov
cmp
in
push
call
push
lods
adc
int
add
in
xor
mov
sub
xor
and
mov
mov
sub
mov
dec
or
movs
cmps
nop
imul
int3
add
outs
fmul
push
xor
sbb
mov
pop
jnp
push
mov
pushf
lods
shl
mov
inc
fwait
pushf
gs
imul
fmul
jo
ss
lds
cdq
xor
mov
int3
or
out
dec
test
into
and
out
punpckhwd
pop
add
aam
pop
cmp
inc
or
pushf
pusha
mov
lock
push
(bad)
fisttp
int3
jns
add
sub
int3
test
mov
clc
aad
std
mov
mov
ins
test
shl
enter
out
ins
jno
pop
mov
fdivr
add
sub
jo
hlt
and
pop
cmps
pusha
pop
and
dec
xor
stos
inc
int3
jne
cmc
cld
in
push
mov
lods
adc
sub
mov
cmp
sub
mov
fs
pop
mov
pushf
imul
hlt
test
push
mov
clc
js
add
std
cmp
je
lods
retf
movs
js
shl
rcr
mov
adc
dec
pushf
or
in
shl
and
icebp
mov
cld
daa
inc
add
fs
add
and
sbb
inc
jns
cmps
inc
into
test
rcl
dec
ss
mov
or
int
or
test
and
lods
es
int3
fwait
and
movs
push
cmp
sub
sbb
dec
fdiv
sbb
mov
in
cmp
test
jae
pushf
sub
jl
adc
or
aad
inc
or
dec
pop
aad
inc
fs
mov
repz
xor
inc
lods
jbe
test
scas
push
int3
push
xor
sbb
pop
or
or
cmp
fsubr
add
cmp
and
dec
sahf
pushf
gs
call
clc
add
inc
pop
(bad)
fucom
xchg
sub
inc
xchg
dec
mov
jmp
cmp
fs
out
jo
fidiv
or
js
shr
add
xchg
ins
or
les
addr16
mov
ret
xchg
mov
enter
push
movs
loope
call
push
pop
ins
or
push
push
nop
jbe
jl
sbb
and
icebp
dec
sub
rcr
mov
cmp
inc
(bad)
cwde
mov
test
fs
test
inc
sub
cld
sub
std
ja
sbb
dec
pusha
out
cld
or
xor
cmp
test
jg
gs
retf
in
test
jo
dec
aam
repnz
adc
enter
in
pop
in
dec
aad
mov
js
call
cs
les
xor
mov
js
add
arpl
aam
inc
cwde
xchg
clc
and
and
mov
popa
int3
mov
movs
xor
jmp
dec
dec
sub
cwde
sub
xchg
ret
movs
retf
dec
fnstenv
dec
arpl
test
xor
fs
fist
cmps
cld
pop
push
inc
mov
enter
pop
in
test
fsub
shl
xor
push
pop
inc
mov
fst
sbb
pusha
push
sbb
sub
xchg
mov
add
aam
int3
stos
cld
scas
or
ins
jne
xor
inc
ror
jmp
retf
xor
test
cmp
cmp
sbb
add
in
cwde
xchg
jmp
push
out
sub
cld
adc
inc
mov
int3
ficom
test
adc
mov
mov
in
ins
in
out
fxch
push
out
pop
lea
dec
fcomp
popf
and
and
pop
jl
movs
sbb
dec
sub
cmp
jmp
lahf
sbb
cmps
call
mov
or
(bad)
clc
lock
push
and
mov
cwde
push
xor
mov
ss
and
mov
cmp
and
movs
push
xchg
mov
nop
mov
movs
xchg
dec
push
xor
(bad)
pop
test
(bad)
lock
loopne
add
popa
cmp
xchg
cmp
fwait
push
pusha
and
dec
sub
call
and
dec
les
into
mov
xchg
adc
xchg
in
je
add
aam
in
int3
mov
sar
and
add
jb
cmp
in
pushf
mov
mov
aam
cmp
inc
ins
nop
lock
js
inc
call
sbb
pushf
add
in
adc
scas
shl
push
push
and
enter
fiadd
imul
ins
cmp
lock
arpl
pop
mov
scas
and
cwde
mov
hlt
(bad)
rol
or
mov
add
enter
les
adc
sbb
xor
in
xchg
clc
push
test
or
les
sbb
test
jg
jmp
lds
and
adc
movs
shr
push
aam
ds
lock
adc
aam
es
add
imul
or
hlt
stos
xchg
mov
test
dec
pushf
nop
sar
cmp
xor
loopne
jmp
mov
sbb
jbe
sbb
xchg
js
sti
push
adc
adc
ins
mov
sar
jle
fnsave
in
clc
sbb
int3
pop
xor
fstp
xor
ficomp
shr
arpl
sbb
cli
sbb
sbb
cs
jp
mov
xor
xchg
or
xor
ins
enter
add
mov
popf
dec
adc
inc
and
sbb
xchg
in
int3
xchg
lock
test
ja
dec
adc
cld
(bad)
push
add
mov
dec
clc
inc
adc
pusha
movs
add
add
int3
push
lods
lock
or
nop
jmp
nop
test
or
je
int3
or
ror
test
and
xchg
mov
push
add
xor
aad
cld
cmp
push
mov
hlt
add
fs
inc
ror
test
int3
adc
loope
pop
adc
mov
xchg
or
and
jo
test
and
dec
cdq
mov
scas
je
jmp
cli
test
jl
sbb
shr
repnz
nop
mov
cmps
add
jmp
fs
mov
test
adc
jmp
leave
pop
imul
aad
cmp
xor
ss
cmc
in
sbb
mov
mov
dec
les
(bad)
pop
cmp
fdiv
inc
sub
mov
ret
dec
test
in
xchg
loop
aad
rcl
mov
std
imul
dec
jle
in
mov
cld
mov
aam
inc
inc
xchg
pop
mov
repz
call
fs
in
push
xchg
and
add
(bad)
cld
enter
cwde
(bad)
jo
je
lock
aam
mov
pop
sti
or
js
inc
lock
call
adc
out
mov
sbb
sub
lock
sbb
ret
push
adc
jmp
arpl
dec
jne
xchg
or
mov
cmp
xchg
repz
dec
mov
fsubr
test
jl
pop
push
cld
repz
and
fld
in
test
stc
or
mov
and
sub
scas
and
dec
mov
sbb
xor
fs
(bad)
retf
lods
and
bound
or
ins
xor
add
or
pop
loopne
clc
(bad)
je
js
sar
adc
inc
mov
hlt
add
or
(bad)
stc
hlt
mov
test
mov
dec
adc
dec
xchg
sbb
add
lock
in
sbb
pop
jo
ins
shl
pusha
test
or
mov
mov
cmp
push
push
or
xor
jecxz
jmp
(bad)
mov
mov
sub
add
lds
je
repz
imul
or
adc
mov
in
mov
adc
ret
ret
push
test
lea
lea
pushf
mov
sbb
nop
in
std
into
push
adc
test
pop
stos
inc
out
sub
ret
call
mov
iret
xor
not
fisttp
inc
cmp
cld
xor
push
or
and
sub
lock
adc
jb
nop
je
je
jb
ja
retf
loopne
and
dec
retf
pushf
in
and
cwde
cmps
lea
lds
adc
test
dec
loop
lea
dec
sbb
repz
shr
xor
dec
test
pusha
cs
add
ja
or
jl
(bad)
test
push
scas
adc
pop
jl
fmul
int3
sub
sbb
mov
xchg
ror
je
sbb
add
loopne
ret
ins
enter
movs
mov
mov
jo
clc
jl
fs
test
sub
stos
rcl
int
je
fcomp
mov
in
xchg
adc
dec
mov
or
clc
das
cmc
add
push
call
rol
dec
gs
mov
or
ja
inc
int
mov
into
dec
mov
mov
shr
and
jle
cld
pop
or
hlt
jo
mov
jo
pop
xchg
mov
dec
sub
setge
js
inc
int3
sub
adc
xor
adc
aad
xchg
rcr
push
mov
sar
push
inc
outs
cmp
and
je
clc
mov
adc
fwait
loope
push
push
or
or
add
cmp
enter
fdiv
movs
ror
mov
mov
loopne
and
scas
ins
mov
sahf
scas
aad
leave
enter
mov
pop
jns
mov
jbe
inc
nop
mov
add
int3
hlt
mov
pusha
lods
bound
cwde
xor
aam
jo
out
adc
pop
rcl
sbb
in
std
or
ret
mov
jl
ins
lock
int3
jl
shr
loopne
sbb
inc
cwde
enter
adc
in
mov
fs
dec
xor
les
mov
aas
movs
sbb
xor
cmp
mov
les
cmc
lea
pop
inc
fs
mov
loop
clc
(bad)
hlt
in
stos
je
jmp
mov
add
adc
movs
leave
dec
adc
mov
aam
mov
or
gs
cwde
cwde
in
lahf
or
inc
lods
bound
mov
cld
aaa
rcr
les
stc
mov
sub
imul
cmp
add
inc
push
test
pop
push
rol
xchg
movs
mov
data16
loopne
movs
adc
pop
hlt
loop
jmp
bound
mov
and
adc
ror
and
dec
lods
test
push
test
adc
mov
adc
push
ins
ficomp
dec
sub
outs
cmp
in
aam
shl
ins
fcom
ins
out
or
jp
sbb
xor
fdivr
loopne
mul
adc
loopne
jl
pop
in
daa
je
hlt
or
int
loop
xchg
cmp
rcr
clc
mov
les
loopne
jmp
mov
shl
push
cmps
push
sub
test
ds
and
sbb
mov
mov
cmp
pop
in
in
jbe
sbb
test
mov
mov
mov
loopne
ror
jmp
inc
adc
mov
pusha
mulps
mov
nop
repz
xchg
hlt
cmp
cdq
mov
mov
jle
jnp
mov
loopne
xor
sbb
aam
and
in
mov
push
add
mov
mov
sbb
(bad)
enter
lds
push
mov
adc
paddb
mov
fcmovnu
out
popf
enter
jl
inc
adc
and
ins
adc
std
cmp
push
jno
dec
push
popf
ins
dec
movs
aam
pop
jle
inc
test
pusha
and
xor
cmp
mov
adc
adc
mov
fdivr
adc
test
clc
pop
pop
mov
test
fsub
pop
mov
rcl
sbb
sbb
sbb
nop
dec
in
mov
mov
test
add
lock
je
call
pop
mov
pop
xchg
mov
adc
adc
mov
retf
mov
sub
leave
je
in
sbb
xchg
ins
pop
mov
mov
xchg
mov
lods
data16
in
rcl
fdivr
mov
add
sbb
cmp
adc
movs
or
xor
pop
outs
cmps
les
je
jns
gs
dec
rcl
mov
sub
pusha
mov
push
xchg
in
leave
enter
jp
test
mov
and
cmp
adc
adc
out
dec
je
mov
adc
sub
push
pop
fcomp
mov
cmps
dec
je
mov
adc
loop
mov
mov
ins
lock
je
jl
adc
push
cwde
xchg
clc
cmp
fs
call
lods
xor
jl
(bad)
mov
mov
cmp
addr16
sub
js
lds
sub
pop
jmp
lock
push
sbb
add
les
adc
mov
cwde
mov
enter
ja
or
sbb
mov
lods
sub
cmp
loopne
loopne
pusha
rcr
(bad)
test
pushf
hlt
call
and
js
popf
cmp
xor
push
ss
xchg
shl
call
xlat
data16
inc
pop
cmp
jl
mov
nop
adc
sbb
fs
jp
xchg
jmp
fiadd
or
rol
fisub
mov
in
cmp
add
pusha
mov
in
sub
enter
enter
nop
(bad)
dec
xor
sbb
push
ss
push
jl
test
bound
sub
sbb
xor
mov
cwde
mov
mov
mov
sbb
cmp
les
fisttp
test
mov
and
mov
push
cmp
add
dec
fldenv
inc
or
ins
pusha
mov
cmp
cwde
mov
hlt
enter
lock
clc
add
nop
ret
push
in
and
cld
and
clc
xor
pop
mov
xor
xchg
mov
daa
jo
sbb
in
ins
inc
push
pop
fs
hlt
je
dec
test
pop
js
jp
rcr
cmp
jecxz
push
xchg
mov
rcl
enter
and
js
aam
cdq
xchg
lods
push
aad
fadd
adc
in
repz
mov
inc
xor
and
ins
mov
(bad)
aam
jo
cwde
push
movs
inc
sbb
test
push
ror
and
jmp
push
push
cld
push
inc
nop
push
fmul
sbb
and
xlat
cmp
inc
fsubr
pop
sub
enter
pop
mov
jg
js
enter
jo
lods
or
pop
add
in
or
pushf
cmc
in
in
sahf
nop
mov
or
xchg
cmp
ret
call
push
movs
std
xlat
and
or
jb
sbb
js
inc
cmp
daa
mov
cmp
sbb
lock
pusha
jp
(bad)
loopne
xchg
je
sbb
mov
or
dec
je
pop
xchg
mov
in
pop
lods
mov
loop
or
and
stos
add
das
(bad)
aam
cld
test
fmul
xor
mov
dec
xchg
and
push
stos
fdiv
adc
xchg
sub
dec
mov
mov
cmp
ins
and
push
sbb
les
adc
push
rol
and
lahf
rcr
sbb
pop
or
(bad)
loopne
mov
leave
xchg
ds
push
inc
dec
sbb
adc
dec
mov
xor
sbb
les
and
jns
or
xchg
call
movs
cmc
and
test
fsubr
out
dec
in
loopne
jmp
mov
fsub
sbb
inc
jne
std
cwde
inc
push
or
dec
inc
hlt
jge
imul
jge
push
xor
hlt
dec
sbb
(bad)
xor
enter
sbb
lds
test
test
or
and
pushf
call
nop
jle
mov
nop
imul
or
out
mov
sbb
ror
mov
jno
mov
cmp
push
bound
lahf
jo
retf
ins
fwait
mov
movs
inc
mov
jo
nop
pop
or
mov
scas
xor
xchg
dec
scas
ror
je
cld
sub
and
(bad)
stc
shr
sbb
push
ins
add
and
movs
push
fcomp
out
inc
sbb
cwde
jo
outs
cmp
mov
inc
push
cmp
loop
push
push
shr
jo
pop
ins
test
repz
dec
test
mov
cmp
shl
test
not
stos
mov
and
call
test
in
in
nop
je
clc
or
fsubr
and
sbb
call
cmp
rcr
xchg
inc
lods
fadd
test
loopne
pop
xchg
push
jl
call
xchg
fnstsw
push
cmp
xchg
in
mov
cwde
add
sub
rol
shr
lods
inc
pop
push
movs
fsubr
aam
int3
mov
push
hlt
in
fdivr
adc
iret
fidiv
lea
outs
fucomi
pop
inc
and
or
sub
adc
ins
leave
dec
adc
mov
inc
xchg
jb
out
fstp
mov
scas
sub
dec
fdivr
mov
fs
out
push
or
mov
dec
jns
shr
movs
push
pop
inc
les
inc
pop
push
mov
je
fsub
xchg
jnp
inc
or
call
adc
xchg
adc
push
or
cs
cmp
(bad)
fmul
dec
push
inc
adc
sub
enter
cmp
sbb
inc
clc
int3
js
adc
push
xor
and
mov
out
dec
push
aam
push
pop
ds
cli
mov
sbb
pushf
enter
mov
sub
inc
cmp
test
fild
and
ret
mov
add
xor
fs
out
pusha
aam
cli
mov
adc
mov
sbb
and
and
fs
sbb
mov
mov
mov
mov
jno
xchg
fcomp
std
loopne
js
inc
in
mov
lods
ror
out
or
stos
dec
jno
js
cmp
in
push
push
pushf
mov
js
test
xchg
push
shl
test
dec
jl
inc
mov
(bad)
(bad)
cmp
cld
cmc
inc
rol
pop
mov
nop
sub
cmp
pusha
fcomp
dec
inc
sbb
or
dec
in
ficom
mov
test
inc
cmps
call
inc
lods
cld
cli
enter
xor
ins
mov
mov
and
and
dec
inc
jno
xchg
xor
adc
out
push
pop
enter
push
enter
ins
mov
mov
movs
mov
(bad)
out
xchg
push
inc
test
mov
ret
dec
xlat
in
or
call
das
inc
add
je
push
je
sub
adc
xchg
push
cmp
mov
lods
sub
jl
lock
adc
cmp
add
(bad)
pop
inc
mov
adc
leave
adc
out
lahf
mov
pop
pop
cmp
sub
xchg
sub
stos
and
pop
fwait
test
push
test
pusha
imul
and
in
je
cmc
mov
mov
dec
and
mov
test
and
mov
fdivr
adc
dec
jo
sbb
inc
jns
dec
loopne
pushf
mov
pushf
outs
aam
cmps
cmp
sar
cwde
mov
push
icebp
mov
sbb
mov
sbb
in
call
push
xchg
std
lods
movs
fdivr
mov
lock
mov
aam
mov
push
and
push
dec
inc
push
jge
fs
les
hlt
mov
mov
xchg
inc
cld
inc
or
adc
call
ret
(bad)
mov
jecxz
lea
jne
lea
mov
cdq
call
jge
mov
mov
mov
retf
test
nop
rol
xlat
push
test
dec
cmp
mov
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
sbb
add
jle
add
add
push
je
imul
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
push
or
add
inc
ins
outs
bound
add
add
add
push
adc
add
add
add
add
add
add
add
cmp
add
xor
add
dec
add
add
add
add
add
add
add
and
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
imul
inc
add
add
inc
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
push
add
inc
add
add
imul
imul
imul
imul
imul
imul
test
push
add
add
add
add
push
add
add
add
add
add
push
add
add
or
pop
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
out
add
add
add
add
add
add
add
pop
add
jbe
imul
imul
imul
imul
imul
imul
cmp
push
add
imul
jae
push
add
mov
jae
push
add
sbb
sbb
add
sbb
push
add
sbb
add
add
push
add
add
push
add
add
sbb
push
add
sbb
push
add
sbb
push
add
imul
sbb
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
adc
push
pop
add
mov
add
add
add
add
add
add
pop
add
mov
adc
pop
add
add
add
pop
add
mov
adc
and
add
adc
xor
add
add
add
add
add
or
add
add
add
add
add
mov
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
mov
add
add
add
or
add
add
add
add
xor
dec
add
add
add
add
mov
add
add
add
add
push
add
add
add
push
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
lock
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
aam
add
mov
add
add
add
adc
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
inc
add
add
adc
add
add
add
add
adc
add
add
add
add
add
mov
add
add
add
adc
add
add
add
add
add
fwait
add
add
add
add
mov
add
add
add
add
mov
add
adc
add
add
add
add
add
add
add
add
add
scas
add
add
add
adc
add
add
add
add
adc
dec
add
add
add
mov
add
add
add
add
mov
add
push
add
mov
add
sbb
add
add
sbb
add
add
add
add
add
in
add
iret
add
add
add
add
add
icebp
add
add
add
and
adc
cmp
and
adc
cmp
add
add
add
pop
icebp
add
add
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
add
pop
mov
pop
jecxz
add
add
call
or
add
add
adc
add
pop
or
add
add
jecxz
add
jle
jecxz
add
nop
or
add
add
add
leave
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
or
or
add
add
or
add
or
add
or
add
add
push
add
add
or
add
add
or
or
add
js
call
or
add
add
add
or
add
add
add
or
add
add
add
add
or
and
or
push
sub
inc
add
push
add
push
adc
mov
add
push
add
mov
adc
xchg
int
adc
rcl
call
adc
add
sbb
adc
mov
cs
adc
add
inc
push
adc
dec
adc
adc
cwde
adc
add
adc
mov
adc
jp
mov
adc
push
adc
adc
adc
pop
adc
test
add
adc
pop
adc
ds
mov
xlat
adc
add
add
xchg
sbb
add
add
add
add
add
add
add
and
add
add
add
add
and
xchg
add
push
sbb
add
lock
add
xchg
add
sub
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
xchg
lds
or
add
add
xchg
retf
add
add
add
add
xchg
aad
or
add
add
xchg
loope
or
add
add
xchg
jmp
or
add
add
xchg
cli
push
je
(bad)
mov
add
add
xchg
out
cmps
add
add
add
add
xchg
lds
lods
add
add
das
add
add
xchg
push
pop
or
das
add
add
xchg
bound
or
das
add
add
xchg
push
add
add
add
xchg
jnp
ret
add
add
add
add
add
add
add
add
xchg
lds
add
push
add
xor
add
add
add
add
xor
add
add
add
add
xchg
stos
pop
fadd
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
fadd
fld
sbb
jo
add
add
xchg
sbb
jmp
sbb
sbb
add
add
xchg
lds
or
xor
xchg
fadd
fld
sbb
sbb
add
add
xchg
sbb
fld
sbb
mov
add
add
push
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
add
mov
add
add
xchg
fwait
pop
push
add
add
add
add
xchg
fisttp
pop
add
add
add
add
add
add
xchg
lds
or
inc
add
add
xchg
fadd
push
inc
add
add
xchg
sbb
or
inc
add
add
xchg
out
sub
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
lds
or
inc
add
add
xchg
retf
add
add
add
add
add
add
add
nop
add
aam
cmp
inc
dec
add
add
nop
add
add
dec
add
add
nop
add
add
add
add
nop
add
add
dec
add
add
nop
add
or
add
dec
add
add
nop
add
or
add
lods
push
add
add
nop
add
or
add
mov
add
add
nop
add
aam
dec
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
ror
dec
add
add
add
add
add
add
xchg
sbb
adc
dec
add
add
add
add
add
add
add
add
adc
or
mov
dec
add
push
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
push
add
add
add
add
add
add
add
add
push
add
add
adc
pop
or
in
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
push
add
add
add
add
add
add
add
add
push
add
add
adc
movs
or
add
add
add
add
add
add
add
xchg
sbb
adc
push
add
add
add
add
add
add
add
add
add
adc
icebp
or
sbb
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
pop
add
add
add
add
add
add
add
add
add
adc
cmp
add
push
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
cmp
pop
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
jae
pop
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
gs
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jle
pop
add
add
add
add
add
add
xchg
sbb
adc
pop
add
add
add
add
add
add
push
add
add
adc
mov
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
pusha
add
add
add
add
add
add
push
add
add
adc
or
mov
push
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
bound
add
add
add
mov
add
add
add
add
adc
push
adc
add
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
bound
add
add
add
mov
add
add
add
add
adc
mov
add
push
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
jmp
cli
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
adc
push
add
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
data16
add
add
add
add
add
push
data16
add
add
add
add
add
add
add
add
add
add
xchg
sbb
adc
push
add
add
add
add
push
add
add
add
adc
ins
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
jb
add
add
add
mov
add
jb
nop
push
add
add
adc
sbb
mov
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
adc
jb
add
add
add
mov
add
jb
lods
push
add
add
adc
data16
je
mov
add
add
add
add
add
xchg
sbb
adc
jbe
add
add
add
mov
add
push
add
add
adc
mov
xchg
push
jns
fcom
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
(bad)
adc
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
pop
add
add
adc
dec
adc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
adc
xchg
adc
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
add
adc
fist
in
add
pop
add
add
xchg
sbb
add
add
add
xchg
sbb
adc
test
add
add
add
mov
add
push
test
push
pop
add
add
adc
sub
pushf
add
add
xchg
sbb
add
add
add
xchg
sbb
adc
test
add
add
add
mov
add
pop
test
push
add
add
adc
pop
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
pop
xchg
test
add
add
add
adc
pop
xchg
xchg
pop
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
mov
mov
add
add
adc
mov
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
mov
mov
add
add
push
mov
int3
pop
add
add
xchg
sbb
add
add
add
xchg
sbb
adc
mov
add
add
add
mov
add
pop
add
add
adc
cmps
adc
call
add
add
add
add
add
add
add
add
add
pop
add
add
adc
icebp
adc
add
add
add
and
push
cmps
pop
xchg
add
add
add
push
mov
fwait
add
add
add
push
mov
add
add
pop
mov
add
add
pop
ret
pop
mov
add
add
add
add
add
pop
mov
add
sbb
pop
mov
add
add
add
add
add
or
add
sbb
or
add
add
add
add
add
sbb
add
add
add
add
add
add
add
push
add
add
and
add
add
push
push
add
add
sbb
add
add
pusha
push
add
add
sbb
add
add
pusha
push
add
add
jp
add
add
test
add
add
mov
add
add
lea
add
add
and
add
add
cmp
add
add
inc
pop
add
add
dec
pop
add
add
jb
add
add
push
push
add
add
add
add
add
add
add
inc
pop
add
add
mov
add
pop
add
add
invd
add
add
fild
add
add
fild
add
add
sti
pop
add
add
sub
add
add
fild
add
add
add
add
add
ja
add
add
fwait
or
add
add
add
add
add
or
add
add
add
or
add
add
or
add
ror
add
add
lock
add
add
add
add
fild
add
add
push
or
add
add
add
add
add
or
add
add
pop
add
add
mov
add
or
add
add
pop
add
add
mov
add
or
add
jmp
add
add
fild
add
add
fild
add
add
jmp
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
push
add
add
popa
push
add
add
je
add
add
add
add
push
add
add
dec
push
add
add
popa
push
add
add
je
add
add
(bad)
push
add
add
push
pop
add
add
imul
add
add
scas
sbb
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
scas
sbb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
adc
call
add
add
or
add
ins
add
and
jae
jns
xor
js
or
cmp
add
jge
adc
push
xchg
mov
xchg
mov
adc
pop
mov
jno
xchg
add
add
mov
add
add
add
mov
add
add
dec
add
add
add
int3
add
pop
add
add
ins
add
add
add
add
sbb
or
add
add
add
add
cwde
add
add
add
mov
add
add
loope
out
xor
jmp
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
adc
fild
add
add
add
add
add
add
add
add
add
add
add
add
cmp
imul
cmp
jge
outs
add
add
xchg
add
add
add
add
add
add
add
add
add
add
loopne
add
add
sbb
or
add
or
or
or
add
popa
or
add
pop
mov
cmps
pop
rol
xchg
add
add
add
pop
add
add
add
add
cdq
add
add
mov
sbb
add
loopne
or
or
or
or
mov
dec
add
sbb
mov
or
or
add
or
add
or
add
jno
adc
sbb
add
add
add
adc
(bad)
sbb
or
pushf
sbb
test
or
or
or
or
add
add
add
sbb
or
or
add
add
add
push
and
daa
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
cwde
add
add
add
and
cmp
push
add
add
pop
add
pushf
or
or
add
add
xchg
call
add
push
add
add
mov
push
pop
add
add
lea
sub
add
add
pop
pop
pop
add
add
xchg
add
sbb
add
add
add
pop
add
add
add
loopne
xchg
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
add
adc
jp
adc
add
add
outs
popa
jb
push
gs
fs
push
jns
je
ins
cs
dec
add
arpl
add
jb
popa
ins
add
ins
outs
jb
push
je
gs
ins
add
push
fs
gs
dec
popa
outs
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
inc
js
gs
imul
je
ins
add
jns
je
push
je
gs
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
add
fs
outs
fs
add
fs
add
data16
inc
ins
outs
arpl
outs
jo
add
jb
jns
push
gs
fs
jns
add
je
outs
fs
popa
jae
add
jbe
imul
gs
fs
jns
gs
inc
outs
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
push
jns
add
je
inc
jae
gs
bound
push
gs
fs
outs
je
xor
push
jns
ins
gs
imul
imul
popa
je
inc
arpl
jo
outs
jb
addr16
dec
outs
addr16
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
ins
add
popa
add
je
je
imul
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
imul
je
jb
push
outs
push
dec
outs
je
xor
inc
gs
jns
gs
dec
popa
je
add
js
inc
gs
outs
je
jns
jae
gs
bound
push
jb
je
add
jae
ins
jbe
dec
gs
outs
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
gs
add
ins
jae
outs
jb
imul
ins
cs
ins
add
jb
gs
xor
cs
ins
add
scas
test
mov
in
xchg
popf
loope
mov
xchg
mov
cmp
outs
fs
gs
lods
and
nop
jmp
and
sub
cdq
call
xchg
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
in
or
call
stos
out
test
xchg
cwde
in
mov
(bad)
loop
mov
movs
cmps
out
lahf
out
mov
in
sbb
mov
inc
gs
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
pop
push
gs
jne
arpl
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
inc
jns
add
je
jne
jb
outs
je
gs
outs
add
ins
bound
dec
outs
outs
add
je
dec
outs
fs
add
je
dec
gs
fs
je
push
outs
imul
push
gs
ins
jbe
push
imul
add
xor
popa
je
add
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
ins
jo
gs
imul
add
jo
jae
add
jb
popa
jns
arpl
outs
jb
inc
outs
outs
jae
jb
arpl
dec
outs
outs
add
gs
fs
outs
outs
add
inc
outs
gs
je
jb
push
jns
je
ins
cs
gs
arpl
outs
cs
ins
imul
imul
add
je
imul
ins
dec
popa
outs
fs
add
outs
je
ins
gs
imul
fs
add
je
push
popa
jb
ins
gs
jb
jns
add
je
inc
arpl
imul
add
je
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
jb
popa
jns
inc
gs
dec
inc
outs
gs
je
jb
dec
jo
outs
fs
dec
fs
jb
pop
push
add
inc
outs
fs
imul
push
push
gs
addr16
inc
imul
add
gs
je
inc
gs
gs
je
add
gs
je
add
je
popa
ins
jne
add
lods
mov
mov
out
mov
xchg
add
je
outs
fs
outs
outs
add
je
dec
jae
je
je
arpl
dec
bound
arpl
gs
push
gs
jb
push
jns
add
jb
add
jae
arpl
jae
push
je
imul
pop
inc
push
inc
popa
ins
ins
add
ins
ins
jbe
jb
add
mov
mov
jmp
mov
in
mov
dec
inc
imul
ins
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
dec
outs
fs
data16
mov
jecxz
mov
mov
xchg
cmps
loop
pushf
out
nop
mov
jae
outs
fs
popa
jb
jae
inc
outs
ins
jo
gs
push
push
push
gs
push
imul
gs
outs
push
outs
push
outs
jae
je
je
add
add
jb
jo
inc
jae
add
push
gs
ins
jbe
push
gs
jne
arpl
inc
arpl
jo
add
ins
add
fs
outs
ja
bound
add
ja
ins
outs
add
je
xor
dec
popa
imul
push
inc
je
jb
bound
add
popa
je
add
ins
jne
push
jns
add
fs
dec
outs
imul
gs
push
jo
popa
je
dec
popa
je
push
popa
je
push
gs
push
jo
popa
je
push
push
gs
dec
jae
push
popa
je
add
je
imul
bound
data16
pop
jo
jae
pop
ja
outs
outs
ja
imul
jb
popa
ins
push
outs
jae
pop
jae
jb
popa
ins
add
outs
outs
ja
imul
gs
ins
add
ins
imul
jae
push
je
gs
ins
add
jne
push
jns
ins
outs
arpl
imul
add
je
jns
add
inc
gs
jns
add
outs
fs
push
popa
outs
add
fs
jb
popa
ins
imul
outs
fs
imul
je
add
ins
push
outs
je
ins
inc
imul
arpl
gs
push
jb
bound
inc
arpl
add
outs
addr16
arpl
gs
inc
imul
arpl
gs
dec
outs
fs
jae
dec
jne
inc
imul
add
ins
inc
imul
add
jbe
jb
gs
arpl
add
popa
jb
dec
outs
fs
dec
jp
popa
inc
arpl
gs
ins
pop
dec
jne
push
imul
pop
push
popa
outs
addr16
arpl
gs
ins
pop
dec
jae
popa
je
push
fs
add
dec
jae
gs
arpl
gs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
dec
outs
outs
addr16
arpl
gs
add
push
outs
jae
ins
outs
je
arpl
gs
ins
pop
push
outs
jae
arpl
gs
add
push
outs
jae
ins
imul
fs
ins
pop
dec
outs
inc
arpl
gs
ins
pop
push
gs
outs
inc
arpl
gs
ins
pop
dec
imul
arpl
gs
ins
pop
inc
imul
jb
push
imul
imul
jb
push
imul
imul
pop
push
outs
jae
je
je
dec
popa
jae
add
outs
ins
imul
arpl
outs
popa
jb
push
imul
je
outs
outs
popa
jb
push
imul
dec
imul
outs
jo
jb
imul
ins
arpl
push
gs
outs
jae
imul
jb
imul
imul
ins
add
je
je
gs
ins
add
push
imul
push
imul
inc
arpl
gs
jb
jo
jb
imul
jo
jb
imul
inc
arpl
gs
ins
pop
inc
push
add
inc
push
xor
ins
pop
dec
outs
ja
outs
fs
ins
pop
dec
imul
ins
pop
dec
imul
jb
ins
pop
dec
jne
push
outs
jae
je
je
jae
outs
jne
push
outs
jae
je
je
jae
jo
jae
je
je
add
gs
ins
inc
arpl
gs
ins
pop
inc
outs
fs
add
dec
jne
push
jb
jbe
imul
ins
push
outs
jae
imul
jae
popa
jae
add
ins
push
outs
jae
imul
jb
jbe
imul
je
je
add
jae
jo
gs
jns
add
outs
fs
outs
jb
popa
ins
add
outs
fs
imul
inc
jns
add
je
push
add
outs
fs
add
inc
arpl
gs
add
mov
jmp
mov
loop
mov
scas
sub
mov
xchg
mov
inc
gs
popa
ins
jne
add
jo
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jp
dec
data16
je
dec
je
ins
add
mov
jecxz
xchg
in
lahf
loope
mov
xchg
xchg
popa
add
mov
mov
in
sub
add
adc
stos
out
add
xchg
out
mov
add
xchg
mov
and
mov
lods
movs
in
movs
add
movs
mov
mov
xchg
popf
loop
cmps
out
mov
out
mov
add
add
xchg
in
mov
lea
in
call
in
call
scas
in
xchg
xchg
mov
mov
loope
test
mov
loope
cmps
add
cwde
stos
jmp
lods
test
mov
xchg
mov
test
iret
pushf
in
sub
mov
mov
out
nop
call
mov
jmp
mov
call
stos
out
mov
je
arpl
je
gs
gs
je
add
or
mov
out
mov
mov
jmp
mov
xchg
lods
jmp
jmp
mov
call
mov
movs
popf
jecxz
mov
out
mov
out
mov
sub
mov
mov
add
mov
mov
stos
sahf
jmp
xchg
jmp
mov
test
out
mov
jmp
movs
jmp
xchg
add
call
test
xchg
out
movs
out
xchg
xchg
jecxz
xchg
jmp
mov
out
test
test
mov
out
mov
add
or
cwde
mov
or
cdq
in
scas
in
mov
jecxz
xchg
add
xchg
mov
mov
out
xchg
cdq
nop
jecxz
mov
loop
test
mov
out
lods
jmp
mov
lea
add
stos
loop
mov
mov
mov
call
mov
jecxz
call
out
test
jmp
out
mov
shr
stos
xchg
in
lahf
pushf
in
test
add
or
mov
out
xchg
mov
out
stos
loopne
sahf
out
cdq
test
call
mov
mov
loop
mov
mov
loopne
mov
mov
lods
call
sahf
in
mov
and
out
test
mov
out
mov
mov
out
mov
add
sbb
and
xchg
in
xchg
loop
mov
mov
out
adc
(bad)
in
xor
call
out
mov
in
mov
xchg
cdq
in
scas
in
(bad)
call
fwait
mov
mov
jmp
cwde
in
xchg
out
xchg
loopne
movs
add
mov
loope
mov
(bad)
movs
loop
and
(bad)
out
mov
cmp
out
sub
xchg
stos
mov
pushf
pushf
jecxz
mov
jmp
mov
out
lods
in
stos
call
nop
add
xchg
cmps
in
test
adc
sub
xchg
in
xchg
or
mov
xchg
lods
jmp
and
xchg
fwait
test
call
cdq
lods
in
mov
mov
fisttp
mov
add
test
loop
xchg
in
mov
mov
loope
test
xchg
xchg
adc
in
lea
mov
loopne
nop
jmp
cwde
jmp
in
cmps
cdq
call
sbb
call
mov
add
xchg
mov
mov
in
cwde
and
mov
mov
cmps
in
call
jmp
xchg
jmp
mov
in
mov
sub
cdq
jmp
popf
loope
(bad)
in
mov
call
mov
in
mov
mov
mov
mov
out
mov
loop
mov
add
test
sahf
and
mov
mov
cmps
mov
test
loope
stos
jmp
cwde
jmp
xchg
add
test
mov
out
test
popf
test
cmp
test
adc
out
cmps
call
xchg
out
mov
out
mov
movs
mov
loope
test
mov
popf
in
cwde
jmp
test
lods
mov
in
test
(bad)
mov
xchg
mov
popf
xchg
jmp
adc
jmp
scas
out
stos
in
mov
xchg
mov
xchg
sahf
call
add
xchg
mov
call
mov
and
mov
loop
cmps
jmp
mov
sahf
scas
jmp
cwde
add
loopne
xchg
loop
mov
mov
ficom
lahf
mov
jmp
lahf
loope
scas
out
mov
jmp
lahf
xchg
add
popf
mov
nop
mov
lods
mov
mov
lahf
mov
adc
jmp
mov
sub
mov
add
scas
loop
mov
mov
in
mov
mov
add
xchg
mov
sbb
stos
out
cmps
cdq
jmp
or
lods
in
lods
jmp
mov
scas
mov
lods
scas
add
xchg
(bad)
call
test
sahf
mov
(bad)
lahf
in
stos
mov
in
mov
mov
out
mov
xchg
mov
cmps
mov
push
or
add
(bad)
jmp
pushf
jmp
mov
sahf
mov
jmp
xchg
cwde
test
mov
jmp
mov
mov
jmp
xchg
add
test
call
mov
mov
out
test
movs
mov
adc
out
mov
mov
lods
mov
out
mov
jecxz
popf
fsubr
xchg
mov
xchg
mov
xchg
mov
retf
mov
out
(bad)
jmp
mov
test
jmp
test
xchg
sub
pushf
in
fwait
call
mov
in
lods
sub
mov
xchg
mov
add
lods
mov
xchg
fwait
jecxz
cdq
in
mov
mov
loopne
mov
adc
leave
sub
pushf
in
xchg
sub
xchg
mov
sahf
jecxz
pushf
out
call
mov
mov
lahf
mov
in
xor
xchg
in
mov
test
mov
push
or
pushf
fwait
call
movs
in
cmp
test
cmps
lea
loop
mov
mov
xlat
pushf
loope
stos
(bad)
xchg
xchg
call
mov
mov
in
mov
jmp
cmp
lods
loop
mov
lods
mov
mov
add
test
aam
call
scas
in
mov
mov
jmp
mov
call
mov
lahf
mov
stos
mov
push
or
mov
out
mov
out
mov
loope
nop
out
mov
mov
in
mov
jmp
out
movs
xchg
jmp
mov
mov
in
cdq
add
xchg
jmp
xchg
lods
in
fwait
mov
mov
jmp
movs
add
call
test
mov
mov
test
out
mov
jecxz
sub
(bad)
jecxz
scas
in
fwait
in
test
lods
mov
out
cwde
jmp
lahf
in
mov
test
xchg
push
or
xchg
pushf
loop
xchg
loopne
sub
mov
mov
in
mov
xchg
cwde
sbb
jmp
mov
mov
loope
mov
out
mov
(bad)
lods
out
xchg
in
(bad)
jecxz
test
fwait
mov
adc
jecxz
fwait
call
mov
cwde
xchg
mov
in
movs
add
lahf
mov
nop
stos
in
mov
mov
call
mov
out
lea
popf
mov
mov
loop
xchg
mov
call
or
(bad)
mov
mov
jecxz
mov
mov
mov
in
mov
in
mov
mov
jmp
nop
jmp
mov
add
nop
sahf
jecxz
sub
mov
and
mov
adc
out
mov
jmp
xchg
lahf
jmp
test
add
mov
fwait
mov
xchg
mov
in
sub
stos
add
xchg
mov
lds
lahf
xchg
mov
jmp
mov
fwait
mov
mov
jmp
xchg
test
lods
mov
jmp
xchg
loopne
cwde
loopne
cwde
loopne
xchg
out
mov
mov
add
mov
jmp
xchg
in
pushf
scas
call
mov
mov
jecxz
mov
xchg
mov
pushf
(bad)
jmp
sub
mov
movs
movs
in
xchg
lods
jmp
mov
xchg
xchg
add
stos
scas
out
cmps
mov
xchg
(bad)
loope
scas
loop
scas
jmp
popf
add
or
mov
(bad)
mov
mov
out
mov
jmp
or
mov
test
mov
sahf
xchg
add
xchg
mov
mov
in
mov
mov
scas
(bad)
loop
mov
out
mov
out
xchg
loope
mov
mov
jmp
xchg
jmp
push
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
push
jne
jb
dec
outs
outs
jb
popa
je
outs
outs
push
jb
arpl
jae
jmp
or
cdq
in
xchg
xchg
cwde
movs
in
stos
add
push
gs
outs
outs
jb
popa
je
outs
outs
push
jb
arpl
jae
jmp
test
movs
mov
mov
out
and
mov
push
arpl
ins
outs
jae
dec
popa
outs
fs
gs
mov
(bad)
xchg
jmp
cdq
call
xchg
out
movs
loop
pop
dec
jae
bound
addr16
jb
jae
outs
je
jecxz
xchg
in
cwde
loope
and
test
sub
out
xchg
add
jb
dec
jne
jo
je
bound
push
je
imul
gs
add
jae
gs
cs
push
imul
imul
je
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
popa
imul
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
je
dec
jae
popa
arpl
jb
jne
add
popa
jb
add
popf
call
out
mov
out
nop
out
call
gs
inc
jne
jb
outs
je
push
add
gs
inc
bound
addr16
push
jns
je
ins
cs
imul
imul
pop
dec
jae
je
popa
arpl
add
dec
outs
addr16
pop
dec
jae
ins
imul
out
mov
mov
jecxz
mov
popf
(bad)
jmp
je
jb
popa
fs
xchg
mov
mov
out
scas
and
stos
add
mov
mov
call
stos
in
mov
add
fs
jae
add
imul
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
imul
jb
je
arpl
gs
dec
dec
push
push
inc
dec
inc
inc
add
je
je
add
pop
inc
js
ins
imul
pop
inc
jno
popa
ins
imul
inc
jne
ins
jns
jne
ins
imul
ins
add
pop
dec
outs
gs
popa
ins
imul
imul
outs
ins
popa
outs
popa
addr16
gs
outs
jb
push
je
gs
ins
add
ins
gs
arpl
jae
add
imul
gs
imul
push
dec
outs
je
xor
push
gs
fs
dec
outs
je
add
je
push
outs
jae
je
outs
outs
add
je
push
outs
jae
je
outs
outs
add
popa
fs
dec
outs
je
xor
push
outs
push
dec
outs
je
xor
sar
mov
in
and
mov
mov
xor
dec
inc
xor
test
test
sahf
lods
loop
xchg
mov
mov
data16
add
add
or
xchg
out
mov
scas
mov
mov
add
xchg
cdq
loopne
scas
out
mov
xchg
mov
xchg
loop
mov
je
xor
out
lea
mov
sahf
mov
mov
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
pop
outs
gs
outs
fs
add
add
adc
jmp
push
mov
lds
hlt
add
inc
add
push
add
inc
add
inc
add
dec
add
pop
add
push
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
dec
add
dec
add
add
add
push
add
outs
add
imul
jb
and
add
je
add
je
add
aaa
inc
add
bound
jne
add
add
and
add
je
add
je
add
add
add
popa
add
popa
add
add
add
pop
dec
add
outs
add
and
bound
jb
outs
add
add
add
dec
add
add
ins
add
and
add
jb
outs
add
add
cmp
push
add
imul
add
ja
outs
add
add
pop
inc
add
outs
add
add
and
data16
ins
add
add
push
adc
std
into
lea
aad
mov
and
add
or
add
add
add
push
or
add
adc
adc
add
sbb
add
inc
inc
dec
pop
addr16
push
push
xor
dec
or
jp
add
push
sub
daa
sbb
push
add
adc
add
sub
sbb
add
xor
adc
or
add
add
push
and
sbb
sbb
sbb
add
cmp
add
and
sbb
add
add
add
add
pop
and
or
and
push
sbb
adc
add
adc
add
or
add
push
push
add
or
add
add
or
add
add
and
sbb
and
adc
sbb
jp
push
sbb
mov
push
adc
sbb
push
sbb
and
add
and
add
sbb
pop
or
sbb
adc
sbb
add
sbb
add
xor
sub
add
jno
and
sbb
and
add
or
jns
and
sbb
add
pop
or
or
add
pop
adc
or
add
adc
add
add
cmp
or
add
sbb
add
test
adc
add
adc
adc
and
add
adc
cdq
adc
sbb
push
add
add
or
mov
adc
adc
adc
adc
sbb
adc
add
or
add
adc
or
add
add
and
sbb
add
sbb
add
add
pop
add
adc
push
push
add
or
push
adc
add
add
or
pop
or
or
add
adc
adc
or
adc
sbb
add
add
sbb
add
or
or
add
adc
add
sbb
pop
add
push
add
or
or
adc
or
and
add
adc
add
sbb
add
add
or
push
adc
add
add
or
and
add
or
add
add
add
add
or
or
add
add
or
pop
add
pop
pop
add
or
add
or
adc
push
sbb
or
add
or
add
or
pop
add
or
or
pop
add
or
or
add
sbb
adc
add
adc
add
adc
push
sbb
adc
push
adc
push
adc
add
add
or
or
and
add
or
or
pop
ud2
add
or
or
add
or
and
adc
adc
or
or
push
or
or
or
add
adc
push
and
or
adc
add
sbb
add
or
adc
add
adc
add
add
add
pop
ud2
or
push
add
or
or
xor
sbb
add
adc
adc
add
add
adc
or
add
add
add
sbb
and
add
add
add
adc
add
add
or
pop
ud2
or
or
or
xor
sbb
add
pop
wbinvd
or
add
sbb
or
xor
pop
wbinvd
sbb
push
add
or
xor
or
pop
ud2
or
sbb
or
sbb
push
add
adc
sbb
add
or
or
add
xor
pop
pop
wbinvd
sbb
or
xor
sbb
push
add
or
or
xor
or
add
sbb
push
add
or
adc
test
sbb
push
and
adc
add
add
adc
ror
test
push
and
adc
add
or
adc
or
add
add
adc
add
adc
adc
icebp
or
add
and
adc
adc
adc
add
sbb
or
sbb
adc
or
add
push
add
push
or
adc
fmul
xor
or
add
adc
push
adc
or
add
add
adc
adc
add
or
shr
add
add
cmp
adc
or
ds
imul
sbb
add
push
sbb
push
adc
cli
or
lock
and
sbb
add
sbb
push
adc
or
ds
imul
and
push
sbb
add
sbb
add
add
or
add
and
adc
adc
or
add
sbb
add
adc
jo
in
or
ds
imul
and
adc
sbb
push
add
adc
sbb
or
adc
or
ds
imul
and
or
add
or
push
adc
ror
pop
ds
imul
and
sbb
add
sbb
push
adc
or
ds
imul
and
adc
adc
adc
iret
imul
and
adc
or
or
add
or
ds
imul
and
or
add
or
shr
or
add
sbb
add
sbb
add
mov
jecxz
push
ds
or
add
sbb
add
add
sbb
add
adc
add
retf
imul
and
or
adc
adc
jmp
add
add
or
ds
imul
push
adc
adc
shr
add
and
adc
sbb
sbb
adc
sbb
sbb
and
shr
add
add
dec
or
add
or
ds
imul
and
add
push
push
add
add
push
or
add
or
add
and
adc
add
xor
adc
cmp
jmp
sbb
add
sbb
push
adc
push
ds
imul
and
sbb
sbb
sbb
add
sbb
sbb
sbb
push
adc
add
cli
imul
and
sbb
add
add
sbb
add
adc
push
ds
imul
and
or
or
add
add
add
sbb
sbb
add
sbb
add
add
add
push
add
rol
push
push
add
add
push
push
and
add
or
and
add
add
add
sbb
add
adc
add
add
add
sbb
add
sbb
or
or
pop
sub
or
sbb
sbb
sbb
or
sbb
add
add
adc
add
or
or
sub
add
sub
add
or
sbb
push
add
add
add
and
syscall
or
adc
or
adc
or
and
pop
add
add
or
and
or
add
or
add
sbb
add
or
add
sbb
adc
or
and
adc
adc
add
in
add
adc
sbb
or
add
sbb
add
add
syscall
or
adc
cmp
add
syscall
syscall
syscall
syscall
syscall
syscall
or
or
add
or
or
or
add
or
or
or
or
add
pop
or
add
sbb
add
add
adc
outs
data16
gs
jbe
cmp
xor
xor
add
sub
imul
std
sahf
cmp
movs
int3
retf
test
add
mov
add
add
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
