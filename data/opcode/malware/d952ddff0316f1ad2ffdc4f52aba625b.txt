pop
add
cmp
add
add
arpl
stc
inc
inc
pop
mov
retf
jmp
jle
daa
rol
dec
push
jmp
retf
loop
pop
pop
inc
in
outs
ffree
mov
xchg
sub
jno
shl
imul
jo
inc
cmp
outs
add
dec
stos
movs
mov
add
idiv
pop
push
mov
adc
scas
cmp
test
cwde
pusha
cmps
adc
setb
icebp
mov
lahf
into
movs
jb
popf
dec
mov
lock
pop
fsub
into
(bad)
jns
loope
outs
sbb
je
adc
int
gs
add
jle
imul
inc
push
movs
das
fild
cwde
pop
and
add
call
push
dec
mov
(bad)
jecxz
outs
in
or
ins
dec
retf
scas
and
cmp
aas
dec
(bad)
call
fidivr
adc
jl
mov
imul
sub
stc
cwde
push
add
xor
adc
das
imul
dec
movs
jo
mov
cmc
mov
jbe
in
dec
bound
ins
test
inc
push
sbb
pusha
ins
sub
sub
mov
cmp
fcomp
push
adc
ins
test
or
adc
test
imul
lea
outs
or
adc
sahf
push
aad
into
xor
sbb
sub
mov
jmp
ds
mov
push
or
lock
add
mov
(bad)
fs
int3
cmp
loop
clc
bound
icebp
cmp
ret
or
rcl
xor
fsub
cmc
stc
in
jb
fwait
lods
cs
or
push
popa
dec
xchg
pop
pop
sbb
inc
pop
pusha
add
out
mov
stos
cmp
sbb
jge
mov
xor
lods
adc
dec
pop
dec
push
pop
fs
div
sub
sub
loopne
js
test
shr
pop
dec
call
mov
rcr
rcl
pop
pop
imul
test
in
or
fist
mov
add
(bad)
sbb
pusha
push
ret
xchg
push
and
and
adc
adc
addr16
cmp
mov
pop
mov
leave
xor
xchg
and
inc
dec
jg
out
fsubr
inc
sti
inc
push
test
rcr
leave
jo
add
or
fsub
and
aam
jo
mov
jmp
in
jb
xchg
mov
xor
(bad)
ja
xchg
push
ja
les
les
sbb
xchg
icebp
push
movs
sub
in
sbb
mov
hlt
lock
or
addr16
xor
outs
(bad)
xor
popf
xor
pop
sub
and
dec
out
daa
mov
(bad)
outs
test
lds
pushf
add
int
pop
lods
inc
das
xchg
or
in
adc
pop
mov
shl
inc
dec
mov
fadd
push
sbb
xchg
lods
mov
jne
ret
addr16
mov
push
cs
int
jb
daa
stos
inc
jbe
jp
rol
xchg
stc
jecxz
fidiv
je
inc
out
fdiv
pushf
xor
imul
in
scas
int3
xor
loope
rol
iret
fistp
setns
push
retf
add
mov
in
inc
mov
xlat
xor
(bad)
cdq
ret
sti
jle
(bad)
loope
push
sahf
sahf
dec
lds
test
xchg
xchg
or
int
or
imul
dec
mov
xchg
mov
xor
mov
xchg
into
add
es
mov
adc
fimul
pop
and
cmp
cmp
inc
xchg
xchg
push
vmwrite
mov
push
js
xor
outs
mov
idiv
xchg
(bad)
xor
out
popf
pop
and
sbb
xchg
pop
and
xchg
pop
movs
fs
jle
sbb
jge
dec
test
nop
es
imul
icebp
sub
jno
rcl
fild
retf
mov
dec
gs
scas
lods
mov
inc
mov
retf
jnp
xor
jne
enter
cwde
mov
dec
push
aad
mov
push
adc
dec
mov
out
retf
pop
xor
aad
repnz
jl
int
add
pop
cld
push
mov
dec
stc
or
jnp
cld
ret
pop
(bad)
loopne
add
sbb
mov
mov
ret
add
iret
pushf
not
cmp
cld
aad
sub
inc
icebp
call
mov
and
cs
fs
movs
mov
call
fsub
mov
adc
fwait
mov
in
inc
aaa
add
adc
sub
dec
add
pusha
ins
movs
push
adc
out
jns
mul
sub
xchg
cs
jmp
lea
push
les
neg
sti
pop
mov
push
jg
mov
sahf
pop
ror
mov
jecxz
cld
xor
pop
shl
mov
in
pop
ins
xchg
outs
mov
outs
scas
cmps
push
cmp
jne
and
sar
jle
dec
mov
es
sbb
dec
aad
(bad)
movs
das
push
push
aas
inc
mov
and
mov
enter
inc
stc
retf
sub
stos
mov
inc
or
push
mov
icebp
xchg
js
adc
sbb
fsubr
shr
dec
and
pop
or
lea
clc
or
leave
sub
aas
push
aam
cmp
jae
mov
aaa
std
pop
bound
push
imul
loop
lahf
mov
mov
adc
dec
mov
and
pop
or
jp
loope
repnz
jo
push
rcl
stos
clc
in
stc
scas
push
stos
outs
sub
cmp
mov
push
xchg
lds
sbb
fst
ficom
xor
out
jne
out
mov
push
push
je
sub
jge
into
adc
leave
xchg
fsin
and
shr
ror
adc
xor
mov
into
inc
cwde
rol
pop
mov
lods
mov
cmc
ss
in
sbb
stos
inc
add
cmps
enter
(bad)
loopne
daa
and
or
pop
and
mov
mov
lock
and
or
loope
add
retf
adc
dec
(bad)
je
or
out
xor
nop
and
aam
xchg
mov
mov
sbb
out
mov
mov
out
push
mov
shr
mov
in
adc
pusha
test
jne
mov
cmps
movs
mov
mov
mov
movs
fcom
test
lahf
adc
push
retf
imul
nop
pop
mov
adc
pop
pop
iret
retf
sub
push
(bad)
outs
and
inc
push
sub
add
add
sub
pop
fwait
xchg
inc
cmp
mov
pushf
test
das
push
fidiv
call
sub
or
push
retf
(bad)
cmp
mov
sub
aam
add
add
jge
inc
push
inc
les
or
jb
mov
pop
cmps
pusha
ins
push
push
leave
popf
imul
cmp
std
sbb
and
shr
inc
stc
fistp
popf
cdq
pop
dec
sbb
xchg
pop
das
adc
sub
xchg
ret
or
loope
sub
push
ins
mov
les
daa
sub
pushf
dec
mov
push
pop
cmp
push
cmp
sbb
mov
popf
cld
cld
mov
push
push
pusha
mov
sub
dec
or
in
lods
adc
jb
lea
gs
and
xlat
sbb
inc
pusha
pusha
scas
in
inc
(bad)
sub
mov
inc
push
dec
in
addr16
ficom
jo
cmc
pushf
leave
push
mov
movs
adc
fadd
hlt
icebp
ss
add
cld
mov
call
ins
inc
lea
jae
jecxz
into
cmp
rol
ds
test
push
jmp
jae
adc
adc
cwde
xchg
imul
jg
mov
call
gs
jae
dec
push
push
jbe
or
xchg
adc
mov
test
mov
movs
int
retf
int3
adc
cmc
stc
xchg
test
add
add
and
and
pop
lahf
pop
mov
and
dec
mov
(bad)
adc
(bad)
jecxz
xor
retf
sub
repnz
jecxz
cmp
push
push
or
mov
mov
ror
cmp
mov
mov
push
jmp
adc
ins
mov
shl
push
mov
push
cmp
test
popf
repz
push
pop
shl
adc
cs
mov
pop
call
popf
push
add
push
push
push
pushf
hlt
in
aad
adc
jmp
sub
adc
cmps
jo
jmp
sbb
aam
xor
jmp
leave
leave
push
(bad)
cmp
call
bound
cmp
mov
out
xchg
pop
push
sub
adc
and
fnstenv
cmc
xchg
int3
dec
inc
in
cmp
retf
jmp
cs
push
xchg
adc
icebp
ret
jg
xchg
fwait
test
push
je
lods
cmp
push
cmps
mov
in
inc
jg
stos
cmp
sbb
cmp
repz
xlat
fiadd
into
jp
loopne
push
call
sbb
inc
and
pop
sbb
mov
fcom
mov
fild
lods
jl
or
jmp
je
dec
out
mov
jge
sbb
mov
shl
add
sti
xchg
into
pop
leave
add
sbb
popa
mov
push
pop
dec
loop
cmp
out
push
movs
add
adc
mov
cmp
retf
xor
mov
inc
pop
js
fild
fcomip
in
retf
sbb
aaa
sti
xor
mov
xchg
mov
fs
ja
sbb
push
das
mov
and
xchg
mov
add
mov
xchg
cmp
cwde
loop
mov
mov
sub
jo
cmp
ret
mov
mov
sbb
imul
fs
jbe
or
(bad)
jl
out
lock
dec
lds
arpl
xor
xor
mov
fcmovbe
test
pop
xchg
sbb
inc
scas
jg
sbb
mov
fdivr
inc
cmps
mov
loopne
xchg
fistp
ja
stos
pop
sbb
inc
leave
inc
sub
jmp
mov
and
mov
inc
leave
or
or
in
sub
jmp
mov
jg
sub
and
adc
lods
cmps
scas
pop
inc
outs
cli
dec
cmps
test
lds
hlt
aaa
jne
sbb
loope
xor
cli
sar
sub
ja
pop
dec
std
add
shl
rcl
push
sahf
mov
push
les
and
mov
outs
or
arpl
(bad)
cwde
mov
inc
adc
stos
loope
add
imul
xor
push
jbe
jbe
or
pop
fld
das
jne
add
jg
dec
retf
mov
lock
scas
jns
push
mov
cmps
rcl
in
fstp
xchg
(bad)
ds
ret
dec
cli
xchg
mov
aam
in
retf
push
shr
dec
jl
dec
xor
in
inc
mov
jmp
sbb
xor
rcl
int3
in
stos
fldenv
inc
xchg
mov
jmp
push
jg
pop
and
ja
cwde
(bad)
outs
repnz
push
mov
fwait
lahf
jl
call
inc
stos
mov
iret
sahf
inc
iret
ja
cmp
and
jmp
in
clc
mov
imul
xor
pop
iret
scas
or
pop
hlt
and
(bad)
es
fcom
cmp
stos
or
and
adc
ret
and
xor
sub
arpl
aaa
cmp
push
iret
pop
xchg
mov
mov
xor
ins
pop
xor
sub
ret
push
cld
pop
jmp
arpl
out
mov
test
push
(bad)
fmul
mov
mov
loope
jmp
sar
and
imul
repnz
push
jnp
xchg
popf
(bad)
dec
mov
arpl
mov
mov
jmp
jns
ss
mov
ja
push
push
int
add
xchg
(bad)
enter
xchg
test
aas
ins
ret
(bad)
ins
sbb
gs
bound
mov
xchg
les
ins
xor
lds
fs
mov
or
lds
fcomp
stc
cmp
and
add
adc
iret
or
popa
icebp
not
add
test
mov
rep
mov
mov
retf
xor
out
or
retf
xchg
clc
mov
jbe
jmp
sub
xchg
mov
loope
sti
cwde
add
jne
jmp
and
jmp
clc
jne
jnp
xor
xor
dec
loope
adc
rol
fild
push
mov
ins
fist
(bad)
imul
or
add
test
imul
iret
daa
mov
xchg
xor
or
loope
pop
jne
fldl2e
xchg
test
mov
jl
aas
add
sub
sub
pop
jbe
xor
sub
push
jo
inc
mov
(bad)
push
add
pop
loop
ss
shr
jge
and
push
inc
cmp
xor
fsubr
jbe
sub
and
push
dec
pushf
inc
lea
inc
jl
es
dec
dec
iret
lods
jp
cld
cmp
scas
lea
rcr
sbb
movs
mov
xchg
stos
or
cmp
jne
jmp
cmp
mov
call
xlat
pop
push
push
fld
mov
xor
cs
dec
icebp
data16
mov
(bad)
fimul
xor
cmp
mov
repz
jo
adc
je
mov
shl
pop
test
(bad)
(bad)
mov
mov
add
adc
ins
stc
xchg
mov
imul
mov
xchg
lds
sbb
ficom
push
push
dec
push
adc
dec
in
scas
mov
mov
sub
xchg
jmp
xor
pop
retf
adc
jbe
xor
daa
mov
mov
daa
mov
xor
test
leave
xor
(bad)
loop
mov
push
cmp
std
lds
mov
mov
pusha
mov
stos
shr
mov
fucomp
ss
xchg
mov
stos
cmp
cld
icebp
imul
jmp
dec
sbb
cmp
mov
add
jns
cmc
pop
jne
aas
mov
mov
lods
hlt
cmps
adc
std
pop
lahf
mov
xchg
lahf
shl
xor
jg
mov
xchg
inc
ins
mov
stos
ror
sti
lahf
(bad)
fadd
mov
in
nop
mov
jnp
retf
jle
add
test
imul
loopne
mov
jns
mov
js
in
(bad)
dec
icebp
add
add
sbb
dec
lahf
sahf
es
rcl
inc
jne
add
fcmovne
stos
fnstcw
(bad)
scas
jb
pop
jb
cs
ss
dec
ins
cmc
xchg
jnp
sbb
dec
out
xchg
out
mov
jne
pop
fidivr
sahf
jns
pop
imul
fidiv
fiadd
imul
push
div
ins
enter
xchg
test
mov
out
jo
movs
jl
inc
scas
das
repz
shr
xchg
test
ffree
scas
jp
mov
pop
std
fcomp
sub
xor
cmc
aas
dec
adc
add
push
movs
lods
dec
in
dec
(bad)
cli
mul
fld
and
mov
xchg
cmp
lock
popa
push
fwait
inc
int
gs
jno
cli
or
jb
pop
pop
xchg
adc
cmps
push
push
jecxz
ds
sub
mov
pop
out
ret
cwde
inc
sar
mov
pop
dec
out
test
retf
sub
mov
adc
mov
inc
imul
(bad)
js
pop
mov
cmc
pop
lea
xchg
cmc
shr
sub
sbb
jno
pushf
sub
scas
adc
sbb
rcl
in
(bad)
fwait
cli
repz
sub
jge
fst
das
push
mov
sub
mov
dec
dec
inc
scas
cs
push
sbb
imul
idiv
or
sti
xor
stos
mov
and
imul
mov
jmp
data16
and
mov
in
out
and
dec
inc
shr
sbb
(bad)
mov
popf
mov
mov
das
mov
int3
dec
push
dec
popf
push
outs
jmp
mov
mov
jnp
mov
inc
xchg
or
retf
dec
dec
sahf
dec
pop
mov
idiv
ror
pop
cld
pop
pop
retf
cmp
xor
out
call
mov
loope
mov
call
shl
in
cdq
int
retf
and
xor
mov
push
xchg
pop
cmp
dec
add
sbb
sbb
loop
jmp
mov
aad
lea
jmp
add
bound
gs
test
push
xor
jmp
rcl
lahf
dec
jg
cdq
mov
or
adc
popa
jl
in
adc
cld
pop
mov
jne
fwait
movs
push
icebp
mov
pop
cmps
jo
outs
inc
and
ins
ret
test
push
cdq
pop
adc
push
add
pop
add
inc
sbb
mov
loop
mov
in
or
push
push
test
xchg
push
in
mov
inc
aam
dec
int3
sbb
rcr
rcr
fnstcw
int
push
dec
xor
outs
clc
test
data16
aas
les
add
add
ror
cmp
pop
jae
ins
jne
jp
jp
pop
cmp
lods
iret
adc
sti
ins
mov
xor
dec
rcl
jge
and
cmp
sub
jg
mov
shl
jo
and
sbb
sbb
add
jbe
sbb
inc
dec
es
dec
aaa
stc
dec
pop
jb
js
dec
xchg
popa
std
jno
fnstsw
imul
adc
je
sbb
lods
loopne
daa
xchg
aad
dec
adc
(bad)
push
sbb
mov
fwait
into
dec
outs
sub
cmps
arpl
push
repnz
push
pop
push
xchg
(bad)
push
clc
pop
adc
mov
push
fwait
leave
ins
ins
ins
sbb
and
icebp
sub
sti
lods
popf
cmp
sub
cwde
(bad)
push
jb
push
sar
arpl
shr
pop
sub
jno
pop
(bad)
in
dec
iret
clts
movs
aam
cmp
sahf
mov
push
outs
mov
ret
sbb
pop
clc
pop
addr16
das
out
lods
pop
add
movs
sbb
sub
out
(bad)
rcl
xchg
mov
sbb
sub
outs
pop
cmp
dec
mov
mov
sub
retf
pop
fstp
mov
mov
rol
sbb
inc
mov
test
sub
jo
lods
push
rcl
inc
pusha
aas
cmp
cmp
jb
pop
ret
into
lock
shl
pushf
xor
pop
stc
fwait
lods
or
mov
js
and
(bad)
mov
pop
fcomp
inc
push
mov
xchg
push
pop
mov
push
jae
and
push
jmp
lea
jecxz
aam
mov
cmps
mov
xchg
lods
(bad)
push
rol
inc
mov
out
adc
xchg
or
or
push
adc
jb
mov
out
add
daa
and
push
dec
push
cmp
pop
cdq
jl
and
loop
fsub
add
lods
push
(bad)
mov
outs
xchg
ds
inc
mov
out
sti
in
xor
xor
into
xor
sub
cld
inc
jg
ret
cdq
aam
loopne
stos
cli
add
sub
repnz
hlt
test
leave
xor
dec
pop
jp
sbb
mov
clc
adc
cs
sub
mov
pushf
popa
and
inc
pop
das
nop
jo
outs
jae
imul
or
xor
inc
retf
pop
xchg
aam
cmp
mov
push
or
lahf
and
push
mov
add
inc
rcl
pop
and
hlt
pop
dec
cmp
mov
enter
pop
mov
(bad)
sysret
sub
cld
xor
fwait
or
xchg
cmc
stc
and
mov
or
or
adc
xchg
jmp
cwde
xor
adc
aas
and
mov
mov
cmp
pop
nop
adc
leave
adc
xchg
or
icebp
fistp
xor
adc
mov
shl
dec
adc
iret
call
test
movs
dec
mov
ficomp
pop
addr16
add
das
inc
in
leave
or
xor
push
inc
dec
cmp
xor
loop
pop
sti
push
gs
stos
add
ss
(bad)
stc
nop
js
movs
push
mov
xchg
or
cmp
push
sbb
lea
or
sub
ins
stc
aaa
push
(bad)
lahf
hlt
stos
cmps
cmp
push
jmp
cmp
mov
push
(bad)
cld
out
sbb
stos
in
fdiv
pop
cmp
ins
pop
or
pop
aaa
add
sbb
out
or
sbb
jo
outs
sbb
cmps
mov
fcmove
stos
rcr
and
mov
dec
leave
stos
jbe
test
sub
je
xchg
cmp
push
xor
out
and
outs
pusha
sti
or
cmps
ret
add
sub
adc
mov
xor
stos
mov
fnsetpm(287
jp
push
adc
aaa
adc
jmp
jns
push
(bad)
jmp
xor
stos
add
mov
cmp
fmul
xchg
ds
xchg
mov
push
sub
pop
bound
lods
div
std
push
cmp
in
or
inc
xbegin
sbb
mov
ins
push
aad
ss
in
sub
adc
into
mov
sbb
dec
xchg
(bad)
mov
cmp
add
test
fwait
clc
outs
add
(bad)
pop
sbb
push
mov
dec
jne
add
shl
xor
sbb
(bad)
mov
xor
push
dec
mov
dec
and
pop
mov
xchg
add
xchg
xchg
cvtdq2ps
(bad)
test
daa
jns
mov
or
pushf
pop
lock
inc
mov
push
mov
pusha
mov
push
js
adc
and
and
adc
js
pop
pop
push
jns
xor
lea
fcom
push
shl
das
pop
in
in
mov
mov
mov
pushf
dec
js
sahf
js
xor
aas
mov
popa
dec
pop
pop
loop
xor
cmp
es
jmp
clc
imul
test
inc
in
fsubr
xchg
cmp
dec
pop
and
adc
pop
mov
xor
xchg
xlat
imul
mov
std
pop
in
fwait
and
ds
jp
dec
test
data16
not
mov
aaa
pop
pop
and
pause
push
out
movs
sub
sub
repz
mov
pop
xor
stc
sub
addr16
fmul
cld
cdq
je
or
push
jg
shl
jle
adc
fcmovbe
cmps
iret
lock
jne
popa
lea
jne
(bad)
and
mov
dec
fmul
pop
sbb
mov
and
pop
or
add
or
or
outs
and
pop
or
repz
js
sbb
nop
sub
adc
test
inc
adc
cmc
sahf
fnstsw
outs
xor
int
jmp
cmp
cmp
fs
rcl
fwait
outs
loopne
push
mov
sbb
jbe
adc
sbb
sub
sub
sbb
jb
test
aad
fnsave
inc
aam
push
imul
(bad)
ficom
dec
xor
cli
jge
cmc
or
int3
inc
mov
lods
js
dec
into
sahf
cli
sbb
scas
jg
mov
mov
pop
jmp
jmp
jg
xchg
xchg
rol
enter
gs
xor
adc
sbb
aaa
and
(bad)
test
lahf
aad
cdq
add
fidiv
das
adc
movs
cmp
mov
sub
pop
cmc
std
sub
mov
lahf
leave
sub
mov
ret
mov
sbb
frstpm(287
sbb
iret
sub
mov
and
mov
jp
in
jns
dec
out
je
retf
aas
fcom
mov
xor
iret
and
pop
jbe
std
pop
aas
mov
ins
add
(bad)
lods
jecxz
jae
inc
push
jo
mov
ret
push
inc
movs
imul
sub
add
iret
mov
hlt
(bad)
mul
inc
mov
pop
dec
mov
add
test
dec
xchg
or
sbb
mov
xchg
lods
sub
data16
xchg
mov
and
cmp
test
jne
xchg
push
and
pop
ret
pop
pop
mov
add
jne
inc
mov
mov
mov
push
mov
mov
xchg
gs
add
add
sub
lahf
push
or
shl
pop
test
lds
xchg
shr
pusha
aas
shr
cs
dec
(bad)
leave
jbe
jnp
pop
push
and
mov
or
push
ja
mov
or
das
push
popf
jecxz
xchg
je
pop
and
cwde
and
mov
lahf
(bad)
xor
out
mov
sub
dec
test
scas
cmp
push
repz
aas
retf
(bad)
fldl2e
loopne
(bad)
in
shl
stc
xchg
fstp
shr
push
xlat
xor
out
sti
push
aaa
adc
or
adc
sub
cmp
out
pop
xor
mov
dec
lods
push
fisttp
jbe
ret
sar
cmp
sbb
hlt
pop
ret
shl
adc
mov
movs
fadd
cmp
pop
xor
mov
pop
aas
mov
and
adc
and
push
lahf
call
sbb
fsubr
fcmovne
stc
jmp
sub
lods
inc
test
test
fstp
jno
push
out
sbb
xchg
imul
adc
inc
xchg
ss
xchg
sbb
out
out
fld
mov
jmp
mov
push
inc
jg
mov
xor
mov
call
mov
les
test
mov
xchg
hlt
jl
dec
add
(bad)
and
in
jg
inc
test
dec
out
adc
or
fistp
leave
add
cli
cli
mov
push
jmp
lods
dec
ss
sub
mov
push
xchg
jno
mov
jle
adc
jae
das
or
lods
aas
jno
mov
scas
fidivr
movs
test
pop
inc
jno
or
inc
ja
int3
(bad)
arpl
push
retf
push
push
scas
add
sub
inc
pushf
rcl
xchg
jno
stc
adc
push
fcom
push
inc
repz
(bad)
(bad)
cmc
mov
cld
cwde
mov
rcl
jnp
sahf
jne
xchg
call
aam
sub
aaa
add
aas
mov
jmp
sbb
jmp
xchg
inc
pusha
jl
inc
push
into
mov
je
cs
mov
js
or
fdivr
mov
out
dec
xor
scas
or
std
fsubr
fsub
mov
push
inc
loope
ss
lods
pop
adc
mov
lahf
inc
bnd
fs
leave
call
or
xchg
or
bound
sbb
mov
pop
cld
push
mov
mov
or
ficomp
in
jmp
mov
xchg
outs
xchg
or
into
dec
xchg
imul
fstp
mov
sbb
sbb
fcmovnu
push
inc
mov
mov
push
xor
cdq
ins
cmp
fwait
lods
idiv
and
(bad)
out
pop
addr16
dec
addr16
lahf
mov
test
outs
scas
dec
mov
add
cld
jp
sahf
xor
jb
lea
adc
pop
adc
pop
push
jne
push
cld
and
sub
add
jp
cmp
jbe
xor
gs
mov
add
pop
pop
pusha
rol
(bad)
js
or
int3
es
loopne
in
sbb
mov
mov
sbb
xor
fs
xchg
ss
push
in
xchg
lahf
ss
mov
add
xor
push
in
or
nop
sbb
ss
sti
test
loope
test
xor
cmp
jbe
xor
push
lea
mov
jmp
iret
test
mov
xor
xor
scas
add
push
sbb
mov
sub
jge
mov
fwait
sub
iret
pop
jne
ds
pop
cmps
out
adc
jne
xchg
jbe
js
push
ds
hlt
inc
ins
(bad)
add
cwde
ds
mov
jb
in
scas
in
ss
outs
ret
std
cs
sub
jp
dec
jg
pop
cmp
fiadd
addr16
mov
test
mov
jl
in
rcr
call
cwde
(bad)
jnp
jae
fimul
imul
mov
out
ret
add
and
test
push
or
mov
(bad)
or
sub
iret
sti
or
pushf
mov
push
aam
dec
scas
xchg
outs
in
adc
test
push
outs
scas
jmp
dec
xchg
ficom
div
imul
mov
je
lods
xchg
adc
mov
bound
xor
std
mov
push
ins
shl
cli
and
enter
push
mov
sub
stos
out
jp
sub
lahf
ror
pop
jb
push
jecxz
dec
jecxz
fwait
jnp
xchg
jp
fisub
mov
sti
test
mov
icebp
stc
add
aam
sub
pop
gs
in
sub
pop
fld
cmc
cmp
xor
jle
scas
(bad)
sub
aad
fist
arpl
loop
adc
loop
dec
inc
test
sbb
sbb
add
rol
and
test
sub
add
test
jl
ja
adc
fstp
into
fiadd
stos
mov
inc
mov
js
mov
ds
adc
outs
shr
fs
sub
xor
dec
sbb
outs
(bad)
lods
mov
and
es
push
sar
push
(bad)
sub
xchg
into
sbb
pop
fistp
fistp
popf
das
pop
jg
add
cmp
or
(bad)
out
and
dec
stos
adc
out
lods
mov
pop
mov
xchg
jl
mov
xor
jo
jp
int
push
push
enter
ins
pop
daa
mov
outs
push
inc
inc
xor
pop
test
js
sbb
or
ror
scas
ret
cmp
mov
mov
daa
add
aam
inc
shr
push
fild
cmp
or
(bad)
cli
adc
(bad)
mov
push
in
ror
test
dec
mov
mov
and
xchg
and
adc
lds
jmp
call
vmread
sub
(bad)
jbe
inc
iret
ins
imul
mov
ds
or
mov
xor
cmp
and
rep
int3
(bad)
xlat
dec
push
push
and
sbb
repz
push
fist
fs
loope
push
(bad)
push
mov
inc
sub
sbb
call
or
pop
jnp
sub
sub
adc
in
ss
mov
adc
imul
add
mov
or
adc
cmp
add
jmp
sub
sar
jmp
mov
test
and
mov
popf
imul
std
xchg
push
or
idiv
xor
ins
out
jle
push
adc
sahf
fcomp
sub
push
dec
mov
cs
cmp
out
mov
data16
shl
jo
rcl
push
mov
das
add
mov
aad
cmp
cmovbe
retf
pop
dec
xchg
xchg
(bad)
fcomp
mov
(bad)
fidiv
cmp
das
ss
hlt
jle
ret
push
adc
retf
xchg
jmp
jle
ret
cld
mov
push
jl
mov
inc
test
inc
adc
and
out
mov
sub
adc
xchg
leave
xor
pusha
push
fstp
pop
fisubr
pushf
sbb
lods
mov
mov
add
add
lock
pushf
mov
pop
add
mov
popf
sar
or
nop
mov
jmp
mov
push
(bad)
lds
fsubrp
mov
ja
and
inc
xchg
int3
neg
xor
popf
inc
ins
inc
das
int3
jbe
sbb
jl
inc
retf
and
cmps
and
int
mov
mov
pop
sbb
cmp
push
push
shr
mov
fidivr
cld
cmp
pop
and
and
pop
dec
push
lods
ins
cwde
dec
retf
add
in
in
test
mov
inc
xor
add
ret
call
repnz
mov
fisttp
and
clc
dec
sub
int
and
sub
cmp
fldenv
pop
fcmovnu
pop
dec
fstp
jne
add
shr
fcmovbe
and
fwait
mov
rol
mov
aaa
cld
sbb
cdq
rcl
inc
leave
fdiv
mov
es
mov
add
xchg
addr16
shl
xchg
das
sub
arpl
data16
xchg
pop
add
xchg
sub
cli
ins
adc
cmp
pop
sub
push
adc
jg
pop
(bad)
push
cmp
aad
or
xchg
data16
fs
push
inc
repnz
test
sbb
rcr
pop
pop
and
adc
fs
or
push
retf
sbb
iret
mov
scas
sub
or
ins
and
xor
sbb
push
pop
xor
or
test
shl
mov
and
xchg
mov
add
in
and
sbb
fs
push
inc
or
retf
pop
ins
jb
mov
je
iret
xchg
repz
in
shl
cmp
(bad)
loopne
or
adc
dec
mov
jge
cmp
mov
inc
icebp
jnp
sub
ficomp
ror
and
jmp
stos
xchg
gs
std
mov
and
pop
out
outs
inc
xor
pop
xor
bound
scas
outs
lods
mov
sbb
mov
(bad)
nop
pop
repnz
push
bound
cwde
xchg
stos
loope
sahf
mov
stos
and
push
fbld
push
sti
fcomp
stos
ret
stos
fsub
rol
hlt
fcom
pop
xchg
gs
not
stos
test
mov
das
push
inc
mov
fcmovnb
jp
xchg
and
adc
jmp
into
add
idiv
sub
test
test
pop
iret
mov
inc
inc
fdivr
mov
cmps
or
or
adc
push
js
or
mov
mov
inc
dec
sar
popf
movs
mul
outs
loope
pusha
in
aad
enter
mov
rcl
sub
std
dec
hlt
aam
jmp
fdivr
lds
test
sbb
cmp
(bad)
shl
jbe
iret
sub
(bad)
popf
ds
push
cmp
jbe
inc
mov
push
cmps
cli
lods
sahf
ret
mov
les
mov
inc
fisub
rol
and
aaa
std
push
and
mov
push
call
fwait
dec
(bad)
js
add
sti
mov
les
jecxz
ds
xor
add
xor
inc
inc
nop
into
mov
repnz
add
inc
pop
xor
(bad)
pop
or
cmp
or
outs
outs
test
sbb
leave
mov
xchg
fstp
mov
mov
mov
or
xor
mov
int
retf
sub
(bad)
cmc
xchg
cdq
jb
xchg
push
pop
mov
jecxz
mov
mov
(bad)
pop
das
sub
(bad)
loope
mov
fwait
xor
dec
xchg
push
dec
mov
in
loope
mov
hlt
adc
rcl
mov
imul
iret
jg
je
sub
xchg
lods
cmc
xchg
ret
push
mov
pop
test
pop
div
sub
(bad)
test
fistp
pop
xchg
vpsllq
xchg
int3
or
das
mov
imul
mov
movs
add
cmp
inc
add
add
not
mov
and
(bad)
retf
jle
out
mov
sub
gs
cmp
jb
mov
mov
adc
pushf
add
cmc
mov
xor
cmpps
iret
mov
xchg
ss
lahf
(bad)
jns
sub
mov
fdivr
inc
cmp
push
es
(bad)
push
inc
cdq
retf
div
scas
sbb
sub
cmps
jno
push
lock
inc
adc
inc
jbe
pop
pop
cmp
scas
inc
push
ja
outs
sub
or
sub
mov
adc
push
stos
outs
and
xchg
sahf
push
jge
cmps
test
xor
pop
cld
cmps
xor
sbb
leave
or
lea
(bad)
push
movs
scas
inc
sar
push
and
addr16
out
mov
jmp
xor
adc
stc
jle
mov
in
dec
loope
mov
jecxz
fnstcw
xchg
imul
adc
shl
cs
loope
mov
ins
ret
sbb
pop
inc
fs
cs
mov
pop
(bad)
test
sub
or
daa
mov
rcl
xchg
jno
icebp
jmp
or
je
push
cmp
inc
stos
mov
ret
jle
push
repz
ds
mov
shr
jne
cmp
dec
lds
cmc
inc
xchg
jecxz
jl
clc
loope
(bad)
mov
mov
aam
test
loopne
sub
out
cmps
repz
(bad)
xor
push
in
inc
lods
in
xchg
dec
pop
por
mov
lahf
inc
repz
fild
sub
xor
dec
out
loope
cmp
xor
jae
in
xlat
mov
xor
and
pop
in
fsubr
and
push
inc
js
jns
and
jmp
repnz
leave
sbb
mov
jecxz
mov
(bad)
jg
call
pusha
and
stc
xchg
lods
push
out
xchg
in
mov
fist
xchg
call
js
mov
jb
outs
sti
mov
mov
cli
stos
inc
push
sahf
repnz
dec
inc
in
jbe
loope
push
and
fisubr
outs
repz
xor
and
cmps
pop
(bad)
push
dec
mov
mov
push
sbb
mov
jge
mov
movs
cli
pop
mov
and
test
sub
in
push
mov
popf
ins
cmp
aaa
movs
pop
sbb
js
scas
fldcw
sub
mov
in
(bad)
mov
mov
mov
dec
sahf
fsub
adc
jb
fdivr
ss
mov
xlat
mov
cs
ficom
mov
aas
xor
into
mov
push
ficom
inc
retf
js
push
sbb
ins
fistp
push
cdq
call
pop
add
mov
pop
aad
dec
loope
gs
fmul
out
xor
and
nop
inc
mov
fisttp
sbb
or
mov
lods
add
mov
xor
cmp
jmp
stos
fucomi
push
xor
lea
out
mov
das
aam
data16
lock
retf
pusha
leave
cmp
jl
dec
push
cwde
push
sub
arpl
(bad)
sbb
jmp
ret
cmp
dec
out
mov
pop
xchg
jge
sub
les
mov
mov
inc
sbb
xchg
in
call
inc
sbb
lahf
jns
or
ds
dec
cmp
stc
jge
sub
sbb
aas
cld
rcl
mov
mov
xor
ss
push
xor
add
fwait
cmps
mov
nop
xor
(bad)
jns
(bad)
clc
pop
mov
cmp
not
mov
jns
(bad)
or
(bad)
ins
sar
pop
push
test
adc
cld
fsubr
sbb
add
pop
out
inc
int
mov
das
nop
test
adc
aad
and
in
lock
xchg
outs
(bad)
dec
movs
pop
inc
icebp
mov
adc
pop
push
mov
(bad)
fisttp
pop
xlat
fwait
dec
cmp
mov
icebp
xchg
repz
mov
outs
add
mov
pop
daa
jmp
inc
pop
mov
and
mov
add
push
mov
sub
(bad)
arpl
int
loope
mov
pop
(bad)
jb
cmps
adc
mov
inc
bound
push
stos
jne
cmp
jg
inc
push
add
(bad)
bound
ds
jmp
out
bound
mov
cs
mov
dec
retf
ret
lods
cmp
mov
pop
js
enter
mov
sbb
iret
xlat
inc
mov
out
jmp
cmp
add
leave
sbb
ret
mov
inc
sbb
push
pop
cmp
int
test
clc
fwait
xor
xchg
pop
mov
or
in
clc
jne
mov
xor
or
popf
outs
es
js
outs
jecxz
adc
jle
xchg
push
sti
out
add
test
jb
int
fadd
loopne
lods
jbe
pop
fwait
or
stos
dec
cmp
sahf
(bad)
out
lahf
and
push
inc
jmp
test
jns
add
(bad)
fst
jo
cli
or
out
test
jo
cmc
add
rcr
adc
fisttp
mov
jmp
mov
jb
das
pop
mov
dec
loop
push
test
push
xchg
aas
pop
push
jo
sbb
popf
jb
cmp
inc
das
push
and
in
jne
dec
movs
les
jmp
cmp
add
mov
fstp
mov
ja
bound
scas
dec
dec
pushf
sbb
cwde
mov
xchg
(bad)
outs
pusha
xchg
inc
adc
cmp
cmp
adc
popf
and
sub
adc
aam
inc
iret
mov
mov
add
mov
inc
push
(bad)
jnp
cli
pop
aad
pop
inc
push
sbb
dec
lds
rol
sbb
mov
call
repnz
mov
sti
push
add
and
dec
int
push
xchg
adc
and
stc
out
cmp
data16
dec
cli
xchg
cmps
add
adc
iret
dec
es
jmp
ja
fnstenv
ss
jbe
mov
mov
or
jle
(bad)
leave
out
mov
loopne
mov
or
dec
fiadd
movs
out
in
out
lods
xchg
jl
gs
aam
push
pop
mov
aad
pop
inc
add
lea
xchg
cmp
xchg
sub
(bad)
std
call
xor
mov
int3
jge
inc
xor
add
sub
jne
fstp
sbb
mov
lock
clc
ret
out
mov
and
aaa
retf
loop
pop
rcr
dec
outs
shl
sbb
mov
out
and
popf
push
mov
jge
movs
adc
aad
int
add
sbb
test
dec
pop
mov
stos
adc
jns
lods
movs
iret
mov
into
in
sub
(bad)
lock
retf
cmp
test
fst
rcl
rcl
adc
cmp
fidiv
cmps
mov
inc
sub
dec
dec
loop
(bad)
daa
xchg
rol
arpl
addr16
push
int
in
inc
inc
pop
dec
leave
xchg
mov
mov
jno
(bad)
or
fild
mov
jbe
fidivr
xchg
ret
xor
les
inc
or
mov
fsubr
popf
push
shl
loope
push
fdivr
pop
sub
and
clc
sub
push
push
popa
ror
cmps
push
mov
push
iret
bound
dec
sar
mov
jg
enter
or
jmp
lahf
ret
or
enter
sar
cs
out
rcr
in
push
sub
mov
dec
jle
das
jne
adc
fld
ror
or
in
xchg
jae
ja
(bad)
or
cmp
in
test
fst
sbb
jns
sbb
xor
fbld
push
xchg
dec
js
iret
repz
lods
fnstcw
dec
sbb
jmp
hlt
jne
add
mov
sbb
pop
(bad)
mov
and
push
xor
cmp
(bad)
mov
cmp
push
daa
or
cmp
ins
loop
in
jmp
adc
inc
das
mov
mov
cmps
fstp
lds
pop
stos
lahf
jne
aam
mov
stos
cmp
add
xor
add
loopne
inc
out
dec
jmp
(bad)
dec
clc
lods
ins
ins
imul
sub
xchg
adc
inc
adc
gs
jbe
push
neg
push
or
cmp
cmc
push
sbb
or
adc
aas
fist
sbb
lods
icebp
cmp
inc
pushf
mov
sub
push
call
dec
mov
sbb
(bad)
jge
lods
or
xlat
(bad)
pop
pop
fmul
mov
(bad)
jne
(bad)
lods
aam
cmp
ret
repnz
adc
sbb
test
fwait
push
dec
and
push
int
loope
sbb
shr
ret
lea
xor
mov
inc
xchg
fmul
(bad)
shl
(bad)
inc
aas
cmp
mov
movs
pop
mov
cli
aas
cmp
cld
cld
xchg
mov
xchg
dec
push
cli
retf
or
push
xor
sub
sahf
xchg
out
jmp
mov
dec
jne
stos
add
adc
and
out
xor
in
cmps
sbb
mov
test
in
fcomi
sub
ja
push
sbb
and
add
or
ret
adc
mov
mov
jecxz
adc
cli
loopne
and
loope
ins
test
popf
sbb
pop
and
out
cli
loopne
cmp
mov
stos
sub
sbb
jl
sbb
rol
push
call
dec
and
call
push
add
pop
sbb
jge
into
addr16
pusha
imul
xchg
fs
repnz
inc
dec
cli
arpl
ret
cmp
mov
outs
add
push
sbb
or
add
stc
mov
jno
and
xor
scas
call
mov
push
lahf
lods
or
scas
ficomp
scas
xor
dec
add
or
dec
mov
fstp
adc
xor
fdiv
pop
pop
popf
mov
retf
ficomp
pop
jns
and
sahf
sbb
mov
dec
cmp
push
cmps
loope
test
sbb
shr
jae
sbb
sub
call
lock
cdq
aad
jmp
and
jno
ds
pop
sub
repz
imul
movs
(bad)
call
jge
or
add
mov
cmp
popa
and
in
rol
mov
fs
pop
ja
push
aas
mov
mov
mov
cmp
ret
mov
push
sar
or
xlat
jbe
jecxz
mov
neg
push
(bad)
test
push
dec
xor
mov
mov
call
retf
adc
ss
shl
ins
fisub
out
mov
push
lds
mov
scas
jno
(bad)
aam
sbb
add
out
fiadd
sahf
pop
pop
jle
arpl
fcompp
out
leave
mov
xor
loopne
mov
hlt
or
push
mov
mov
mov
add
xchg
div
jne
js
je
pushf
mov
data16
cmc
sub
xlat
shl
cmp
add
dec
out
mov
sub
add
jle
test
cwde
cwde
inc
rcl
popf
shrd
sub
mov
push
fst
ja
xor
sub
repz
pop
scas
jg
sub
inc
adc
mov
add
cmps
pop
adc
repnz
sub
xchg
lahf
(bad)
int3
mov
call
int3
jl
pop
lock
sub
daa
or
sahf
stos
cmp
xchg
cmc
jno
jp
inc
xchg
call
xor
sub
mov
ds
(bad)
(bad)
fsub
int
ss
jmp
hlt
inc
ins
es
ret
cs
fadd
push
pop
pop
retf
into
dec
movs
fiadd
imul
push
clc
icebp
dec
jle
xchg
pop
popa
sbb
jns
xchg
xor
retf
jg
sbb
sbb
mov
cmps
push
lods
sub
cmp
mov
dec
scas
test
sbb
sbb
xor
push
xlat
ror
das
or
pop
out
out
mov
cmps
and
cmps
pop
retf
scas
mov
ret
popf
mov
mov
(bad)
pop
and
pop
jmp
sar
in
pushf
push
test
bound
data16
xchg
in
sub
mov
dec
pop
lods
movs
lea
dec
or
stos
fmul
jmp
sbb
mov
sbb
fimul
ror
inc
xor
pop
pop
aad
inc
(bad)
inc
js
enter
cmps
or
imul
or
ret
cdq
(bad)
xor
xchg
clc
inc
add
out
sbb
jae
cmp
mov
push
push
jmp
pop
aas
stos
or
sub
in
aas
mov
fiadd
out
or
jbe
mov
fld
inc
cwde
out
pop
mov
xchg
sbb
inc
jge
xchg
push
mov
test
lahf
(bad)
stos
xchg
push
ds
out
nop
out
push
movs
add
js
sti
inc
pop
(bad)
test
test
inc
inc
loop
ret
(bad)
push
xchg
in
mov
cld
lock
pop
(bad)
push
push
cs
push
push
xchg
mov
xlat
fisttp
or
loopne
xchg
or
ins
push
lds
ror
mov
adc
adc
cli
ficomp
mov
fidivr
mov
stc
lahf
mov
xchg
push
(bad)
xchg
sub
jno
jecxz
or
adc
xchg
xor
adc
cmp
fs
int
mov
dec
cmp
cld
xor
and
xchg
xlat
jmp
loop
push
in
mov
add
jmp
adc
jno
popa
leave
mov
xchg
push
dec
sub
sbb
hlt
scas
or
mov
push
ins
pop
xor
cmp
dec
ds
stos
mov
shr
or
jecxz
pop
dec
lds
or
ret
cwde
mov
pop
shld
mov
outs
xor
pop
mov
(bad)
push
imul
push
sbb
dec
retf
arpl
loop
xchg
test
mov
pop
or
cmps
mov
popf
daa
(bad)
mov
ds
and
mov
hlt
pop
call
cmp
ins
shr
fistp
movs
aaa
scas
xor
(bad)
jge
fwait
call
iret
jns
in
dec
pop
(bad)
movs
fwait
xor
cmp
add
jne
mov
ss
jae
cmc
pop
aam
fwait
pushw
add
in
xchg
or
dec
scas
cmp
retf
inc
xchg
mov
imul
xor
call
into
mov
mov
mov
daa
xchg
mov
(bad)
pop
jnp
shr
and
ror
sub
pop
push
inc
dec
retf
dec
leave
cmps
mov
adc
push
lods
scas
lods
mov
dec
gs
ds
popa
mov
ins
push
xchg
push
and
pop
fild
std
xchg
or
mov
or
add
cli
add
pop
push
xchg
jbe
scas
jl
push
ja
ins
xor
test
test
(bad)
out
arpl
pusha
fcomp
stos
dec
ss
stc
dec
or
mov
sub
pmaddwd
or
mov
rcr
fadd
jne
xor
jne
sbb
xor
fs
mov
inc
test
jmp
stc
mov
out
adc
push
pop
jg
aaa
pop
sub
add
xchg
add
pop
popf
cmp
cmc
in
jl
pop
push
fiadd
jbe
jge
(bad)
fdivrp
loopne
stc
ins
leave
retf
adc
test
cld
(bad)
sub
xor
and
or
fptan
add
inc
lods
daa
pop
fidiv
cmp
xor
xor
adc
or
inc
xor
test
mov
outs
add
inc
pop
les
push
or
fs
in
xor
mov
or
pop
les
xchg
hlt
or
test
mov
inc
xchg
int
pop
xchg
cwde
in
inc
add
test
int3
lods
jo
pushf
mov
cs
mov
fld
sbb
xchg
ud2
fs
xor
in
lods
pop
push
push
loopne
add
fs
push
mov
and
push
sub
dec
pop
mov
ins
cmp
jnp
sbb
mov
adc
pop
push
adc
addr16
cmp
cmc
mov
(bad)
mov
sub
test
cmp
cs
ss
mov
inc
or
pop
out
pop
inc
cmp
or
jge
xor
and
idiv
or
int
int
das
cmp
sub
fisttp
push
mov
popa
dec
pop
fldcw
lock
dec
movs
sub
cs
inc
inc
test
cmps
stos
ror
aas
sub
mov
cmps
shl
sbb
fs
fisub
sub
xor
test
dec
and
ror
xchg
test
add
dec
int3
inc
mov
popf
hlt
mov
push
or
pushf
or
mov
out
sahf
cmp
and
js
dec
jecxz
jnp
mov
cld
fst
js
imul
mov
rol
mov
(bad)
and
mov
js
ficom
mov
inc
test
pop
xlat
adc
test
movs
cmps
mov
xlat
mov
sbb
outs
push
sub
mov
out
into
add
mov
aad
dec
ds
jmp
call
sub
sti
add
sub
push
cmp
jb
leave
mov
and
xor
sub
mov
mov
push
test
adc
jg
xchg
mov
mov
jns
js
pop
jnp
jge
add
(bad)
cli
(bad)
jl
clc
mov
and
sbb
(bad)
arpl
add
(bad)
enter
add
ins
ins
clc
call
push
(bad)
arpl
pop
rcr
ja
dec
cmp
cld
xlat
pop
sahf
xor
and
nop
int
mov
sti
push
mov
scas
ja
add
add
das
pop
cmp
fs
pop
dec
push
pusha
ror
lahf
dec
sub
xor
sub
je
imul
xchg
std
movs
pop
mov
sub
jge
aaa
imul
pop
and
inc
cmp
rcr
das
mov
(bad)
repnz
data16
out
lods
jno
cmps
mov
pop
jae
enter
or
cmp
xor
jp
es
xchg
push
and
scas
sbb
lea
(bad)
ret
pop
sbb
ins
xor
jg
sbb
jl
shr
movs
sti
out
fcompp
inc
(bad)
hlt
push
es
mov
jns
lods
cdq
loopne
ja
fisttp
push
sbb
mov
sar
not
in
xor
mov
in
jge
cmp
fild
mov
cmp
pusha
jb
push
iret
gs
or
sbb
and
jmp
jle
lods
mov
(bad)
cld
leave
call
retf
sub
sbb
rcl
add
lea
pop
clc
js
push
or
sbb
cmp
in
cmp
and
mov
mov
adc
fwait
fwait
hlt
adc
pop
stos
cmp
inc
les
jnp
xchg
sub
push
js
dec
cdq
xchg
fwait
mov
jnp
shr
adc
jecxz
push
ret
aam
in
pop
pop
dec
xor
xor
mov
imul
push
sbb
ins
sub
(bad)
(bad)
push
xor
push
pushf
mov
cdq
ja
xchg
adc
and
mov
adc
sub
jae
pop
cs
pusha
test
xchg
jmp
mov
(bad)
icebp
stos
and
test
jne
jae
and
cmp
iret
call
fwait
sub
jg
pop
cmp
iret
push
mov
aad
jo
or
loope
stc
fs
inc
out
(bad)
xchg
mov
cmp
sub
clc
xchg
aas
or
fbld
mov
add
mov
and
jnp
mov
and
push
movs
pop
cwde
mov
jne
out
in
aaa
dec
mov
pop
and
loop
test
sub
push
aas
in
hlt
test
fwait
cmc
out
scas
fdivr
(bad)
pop
lahf
sub
push
out
mov
mov
(bad)
lock
jl
add
add
lods
std
movs
not
sbb
outs
div
push
(bad)
pop
ins
jno
shl
movs
mov
mov
xor
or
add
fdiv
mov
push
xchg
cmp
push
out
shr
out
sahf
fmul
jmp
cmp
es
jno
and
add
xor
mov
pop
mov
test
mov
cwde
repnz
stos
test
and
in
aam
adc
cwde
cmp
jmp
mov
inc
inc
sbb
mov
pop
fisttp
or
movs
sub
dec
cld
mov
sub
cmc
mov
xor
(bad)
enter
push
pushf
jns
mov
jae
xchg
jmp
and
dec
leave
movs
retf
dec
cmp
stc
inc
pop
jns
out
retf
out
sbb
sub
sar
sbb
lods
xchg
dec
dec
pop
and
pop
(bad)
xchg
loop
cwde
fild
pop
sbb
je
int
mov
fwait
xchg
lahf
mov
out
sub
in
loope
mov
test
pop
mov
out
fist
mov
dec
mov
test
dec
(bad)
out
sub
pop
xchg
push
mov
mov
test
mov
div
inc
mov
xor
mov
loope
xor
push
jl
and
and
push
lock
jo
aam
cmps
push
in
add
pusha
repnz
pop
xchg
pop
mov
lock
pop
cmp
fcom
(bad)
and
or
out
in
in
mov
xchg
inc
mov
jae
mov
(bad)
mov
test
mov
rcr
rcr
sahf
fld
int3
(bad)
jle
or
in
movs
aas
data16
pop
jmp
sahf
mov
je
push
mov
adc
add
cdq
cli
dec
int3
mov
xor
jae
jo
jl
mov
and
mov
aaa
xlat
neg
jmp
lahf
shl
outs
lock
adc
call
and
sub
clc
jmp
ds
(bad)
pusha
hlt
sub
scas
adc
cmp
ds
mov
push
mov
xor
fsubr
add
cmp
out
mov
mov
out
adc
test
(bad)
out
not
xchg
jle
sub
xchg
retf
outs
add
dec
imul
clc
je
inc
fs
pop
gs
jg
push
outs
or
jnp
cs
pop
cmps
jnp
in
hlt
rcr
popf
out
dec
retf
dec
fnstsw
sbb
lds
xor
add
stos
adc
adc
pop
mov
in
or
mov
adc
pop
xlat
xchg
imul
je
mov
mov
xchg
pop
push
es
pop
mov
nop
xchg
ss
addr16
inc
and
cmp
xlat
mov
retf
mov
and
dec
sbb
jmp
aas
int
sub
jle
jmp
(bad)
mov
stos
sub
push
push
inc
fucomip
push
jecxz
cdq
xlat
cld
xchg
cmp
ja
shl
stc
out
test
mov
repnz
sub
jns
(bad)
movs
cwde
aam
xchg
enter
dec
sbb
cwde
mov
in
mov
cs
(bad)
rcr
dec
jns
jmp
sbb
mov
mov
jb
div
pop
inc
sub
sbb
mov
fcomi
test
adc
sub
xor
imul
mov
and
lods
add
push
sub
sub
mov
add
(bad)
loope
cdq
popa
and
pop
shr
fcomp
out
lahf
mov
dec
fcmovb
push
out
inc
dec
sbb
push
push
xor
adc
mov
jae
cmp
mov
sbb
fwait
rcr
enter
mov
xchg
in
xchg
push
inc
pop
or
dec
xchg
jmp
aas
ds
repnz
call
push
mov
xor
ins
push
cmc
mov
xchg
dec
pushf
xor
push
xor
or
xor
pop
in
mov
lea
add
ror
mov
lahf
sbb
cmp
adc
stc
and
cld
sbb
shr
inc
jne
sub
sub
test
mov
lods
jle
cmps
jmp
jge
inc
push
cmp
shl
xchg
add
add
lock
or
shl
gs
pusha
repnz
fcom
imul
fld
clc
inc
or
or
leave
jbe
nop
dec
jno
inc
in
xchg
cli
cmp
cmp
mov
push
mov
add
push
push
sub
ins
aam
call
mov
xchg
sbb
mov
bound
scas
xor
out
stos
add
inc
scas
outs
mov
xchg
dec
push
sahf
push
push
int
cwde
xor
dec
add
(bad)
out
or
test
jno
test
mov
sbb
in
pop
mov
xor
(bad)
shr
sub
add
(bad)
cli
mov
repz
cmp
sub
js
mov
xchg
sbb
xchg
mov
dec
mov
mov
and
(bad)
push
lock
push
mov
(bad)
loope
inc
(bad)
loop
add
add
xor
inc
fdivr
stos
ds
mov
in
inc
fldcw
int3
dec
sub
bound
jecxz
fldcw
outs
push
stos
arpl
sahf
pop
test
icebp
inc
outs
xchg
popa
fist
cmp
clc
sub
dec
rcr
sub
add
mov
or
adc
fsub
fmul
xor
jo
imul
mov
jbe
jl
push
xchg
ror
aam
cmp
push
mov
lds
(bad)
test
cmp
mov
scas
je
fwait
jp
arpl
sti
int
inc
fst
out
mov
or
ja
hlt
sbb
pop
stos
and
(bad)
jg
gs
jne
cmps
mov
jae
push
adc
ss
xchg
(bad)
xlat
clc
in
cmp
cmp
(bad)
ret
mov
mov
inc
cmps
fwait
cmps
mov
mov
inc
inc
test
sbb
sub
add
les
cmp
lahf
and
xchg
outs
adc
jo
and
out
idiv
je
dec
cmp
xlat
fsub
sub
je
mov
push
push
cmps
mov
jp
add
lds
pop
test
mov
jnp
pop
inc
test
push
jae
sub
push
out
cmp
xchg
pushf
sbb
fnstsw
mov
sbb
or
dec
shl
data16
jge
jle
add
add
rcr
push
in
mov
cmp
(bad)
rol
dec
and
xchg
movs
fld
mov
imul
jl
pcmpgtw
adc
pop
dec
and
lods
imul
xlat
pop
inc
(bad)
loopne
fnstcw
push
repnz
fs
sub
fcomp
fcom
push
push
and
pusha
ficom
add
jl
push
adc
cmp
add
add
cwde
xchg
xchg
mov
pop
int3
shl
test
dec
aam
cmp
inc
pop
ret
repnz
pop
test
out
sahf
mov
pop
pop
push
shl
or
xor
ret
ficom
int3
sbb
int3
imul
cdq
out
mov
shr
cmp
mov
std
or
fwait
adc
dec
out
xchg
mov
daa
adc
add
scas
stos
add
xlat
xchg
das
ja
int3
inc
(bad)
cdq
jbe
xchg
jmp
repnz
mov
dec
stos
adc
xchg
cmp
mov
mov
shl
jno
je
jecxz
mov
cmp
pop
pop
inc
adc
push
into
in
adc
leave
sbb
ds
jns
popf
mov
lods
mov
cmp
xchg
out
adc
sar
arpl
enter
into
(bad)
popf
cld
or
pop
add
cmps
retf
sbb
mov
cmp
mov
adc
repnz
jle
mov
adc
call
rcr
xchg
aaa
add
jle
retf
fldcw
lods
aaa
jge
xor
push
mov
sub
das
dec
iret
leave
pop
inc
push
mov
ret
out
outs
loope
push
and
cs
push
jle
jns
pop
dec
(bad)
shr
popa
sti
jo
dec
inc
outs
mov
jae
je
hlt
push
call
dec
(bad)
ds
out
jmp
mov
mov
xor
addr16
ficom
jl
dec
in
daa
jl
icebp
arpl
adc
test
aad
int3
jle
and
popa
fsubr
popf
mov
nop
add
cmc
pop
dec
pop
jns
popa
push
cld
int3
les
mov
enter
repnz
sub
push
inc
sbb
aaa
lds
add
push
fisubr
test
addr16
jns
stos
(bad)
inc
call
fiadd
xor
inc
inc
test
or
add
js
jp
mov
sbb
not
xchg
cmps
sbb
ins
fcmovbe
pop
mov
adc
adc
lods
fmul
or
enter
dec
(bad)
int
enter
jns
mov
rol
scas
out
test
or
pusha
inc
hlt
push
fwait
mov
xchg
sbb
sub
jb
adc
push
int
fninit
rcr
in
dec
sub
mov
std
in
and
sub
iret
pushf
mov
cdq
daa
int
push
or
jmp
icebp
pop
aad
iret
sar
inc
movs
push
call
frstor
xor
sahf
lods
jmp
push
(bad)
data16
es
fidiv
and
fsub
test
enter
fisub
retf
imul
outs
imul
mov
pop
jae
inc
scas
mov
jmp
bound
int3
sub
(bad)
nop
mov
out
stos
or
rol
push
push
sbb
arpl
inc
inc
dec
dec
push
sbb
mov
pop
pop
shr
popa
sbb
(bad)
loope
cmp
fidiv
in
sub
fsubp
cld
and
mul
stos
fwait
add
fwait
les
or
into
xor
push
lds
mov
stc
cmp
inc
imul
cs
stc
push
cmp
fsub
imul
xchg
adc
fwait
stos
retf
dec
cwde
iret
fs
into
cmc
push
cmp
aad
pop
in
lods
mov
pusha
pop
jbe
(bad)
push
cmp
leave
addr16
cdq
mov
cwde
wrmsr
retf
push
jg
push
add
cmc
xchg
lods
imul
ret
sbb
fidivr
je
xchg
ins
sub
jmp
movs
call
(bad)
fist
(bad)
scas
cwde
ins
les
clc
nop
(bad)
mov
cmp
int
push
(bad)
fnstcw
jo
jne
mov
into
out
jle
sbb
neg
cmp
cmp
repz
movs
in
add
jmp
xlat
pop
je
dec
inc
mov
jmp
bound
enter
xor
das
and
adc
cmp
mov
push
adc
movs
add
call
mov
mov
jb
jmp
cmp
jecxz
ins
movaps
imul
movs
jmp
dec
push
gs
mov
movs
ja
add
ds
xor
cld
mov
mov
sbb
jmp
lods
into
inc
test
xlat
dec
(bad)
cmps
clc
ret
leave
xor
ret
add
add
std
retf
ja
mov
retf
sbb
inc
or
cmc
push
out
mov
xor
adc
push
(bad)
sub
(bad)
pop
inc
and
shl
lock
sub
adc
ins
sub
out
add
ss
mov
add
ja
xlat
das
xor
test
inc
xchg
rcr
enter
data16
out
sub
mov
dec
push
rol
adc
cld
sahf
cmp
mov
icebp
das
in
rcr
je
stos
xchg
fild
popa
xchg
mov
or
not
dec
ror
in
hlt
jmp
popf
das
mov
push
dec
std
out
jle
je
inc
test
daa
pop
dec
idiv
call
xchg
add
jecxz
les
cmp
les
std
mov
push
cmp
stos
adc
mov
outs
aas
test
push
pop
xor
sub
ret
jle
hlt
ret
xchg
sub
jmp
ins
stos
retf
pusha
add
jle
sub
ins
cmp
mov
and
into
xor
adc
retf
aaa
lahf
sbb
sub
jmp
imul
add
jns
add
cmp
add
jnp
mov
repz
xor
or
or
mov
in
push
mov
daa
sub
cmp
xchg
sub
ins
jmp
sbb
(bad)
jl
movs
pop
xor
repnz
out
dec
mov
ret
popa
(bad)
aam
into
jns
inc
(bad)
mov
pop
bound
mov
shl
mov
push
rcr
push
arpl
cmp
stc
sbb
test
in
cmc
retf
xchg
int
mov
outs
cmp
fistp
dec
inc
push
leave
inc
(bad)
mov
sbb
int
add
clc
adc
and
or
inc
test
cmc
stos
cwde
adc
sbb
xchg
pusha
cld
lods
inc
dec
sbb
(bad)
pushf
sub
ins
and
add
jbe
repnz
sbb
push
lods
repz
andnps
xor
mov
jns
add
js
mov
push
sar
jno
retf
sar
into
inc
les
and
(bad)
aaa
mov
sub
mov
push
popa
or
xchg
fsubr
push
and
repz
aaa
jle
js
sahf
dec
lea
add
scas
xchg
push
cs
cmp
add
rol
pop
inc
push
sbb
cmp
out
out
pop
scas
push
mov
adc
(bad)
in
push
add
jbe
xor
dec
cmp
jmp
jge
hlt
mov
iret
xchg
jns
jmp
mov
sub
(bad)
(bad)
mov
test
daa
jo
sub
cli
aas
(bad)
jnp
repnz
scas
bound
pop
rcl
adc
std
sahf
jbe
add
retf
pop
je
cli
jo
ss
push
out
lea
jnp
(bad)
mov
cmps
lahf
icebp
add
dec
bndstx
outs
push
lods
scas
(bad)
shl
sub
jge
loope
mov
dec
int
and
scas
je
or
adc
push
and
jae
push
inc
hlt
retf
test
cmp
or
int
adc
mov
mov
mov
xor
jno
enter
push
fimul
loopne
adc
into
jecxz
cli
lods
repz
push
cmp
sbb
fnstenv
outs
int3
std
int
in
or
ins
into
mov
xchg
xchg
push
add
bound
push
xchg
xor
push
movs
shl
mov
retf
pop
push
repnz
repnz
outs
je
inc
popf
mov
sysexit
cmps
stc
lahf
inc
pop
pop
js
add
or
mov
addr16
push
into
in
popa
inc
aam
xchg
cwde
movs
call
or
mov
sbb
retf
data16
dec
clc
inc
ret
stos
push
push
push
cmc
xor
add
pop
fnstsw
cmps
je
ficom
stos
jae
cmp
jb
fdiv
(bad)
inc
jmp
cs
outs
test
push
pushf
pop
push
sbb
jnp
cmp
inc
ja
shr
fidivr
mov
(bad)
sub
xchg
jmp
popa
sub
imul
mov
dec
jmp
fdecstp
cmp
js
mov
jg
rol
dec
push
and
outs
push
pop
rcr
or
out
pop
adc
int
push
or
mov
mov
lods
jae
push
ffreep
pop
test
ret
push
dec
out
jae
mov
es
test
push
mov
fidiv
sbb
das
cmc
mov
sar
das
or
out
call
or
dec
jb
add
push
cwde
(bad)
ret
mov
mov
test
push
retf
das
cld
div
and
push
push
aad
hlt
jno
(bad)
jno
enter
imul
push
lods
xchg
int3
or
mov
dec
call
sub
xchg
ror
ins
pop
out
(bad)
mov
data16
and
stc
and
xchg
ins
fwait
adc
push
xor
rol
data16
push
test
sub
movs
inc
(bad)
jo
stc
bound
aad
inc
sub
jmp
inc
push
cmps
push
cmp
pop
rcl
rcl
cmp
dec
add
push
xor
mov
hlt
push
fisttp
mov
mov
fstp
xchg
stos
cwde
mov
inc
dec
inc
cmp
or
ss
mov
das
addr16
stos
push
(bad)
out
(bad)
into
and
(bad)
dec
mov
lods
dec
adc
inc
fisub
dec
push
adc
sbb
mov
push
cmp
pop
div
shl
les
aad
mov
mov
hlt
fadd
dec
sbb
sbb
inc
xor
rcr
or
sbb
or
test
jl
imul
pop
jae
and
rol
sti
movs
and
jmp
loopne
cmc
push
cmps
jg
and
dec
add
test
sub
add
jecxz
fs
xchg
fisub
cdq
cmps
retf
into
mov
aad
pop
loope
xor
cmp
pop
jne
dec
pop
popa
cmp
sub
adc
or
shr
add
xor
data16
or
mov
or
mov
mov
add
es
inc
lahf
mov
and
jmp
ret
ficom
push
test
gs
sbb
clc
ins
jl
js
ins
xchg
test
xchg
adc
xchg
jno
mov
inc
mov
lahf
jno
sahf
outs
and
jle
cmp
mov
mov
mov
and
scas
pushf
mov
cmp
cwde
add
and
inc
jns
jmp
sbb
scas
es
fidivr
cmp
and
adc
cmp
rol
je
frstor
mov
outs
inc
xor
cmps
in
sahf
sub
cs
mov
fcmovnu
add
imul
sbb
(bad)
sub
jge
adc
dec
add
inc
scas
cmp
push
ftst
test
shr
and
mov
sub
pop
sbb
out
in
(bad)
push
int
cli
mov
jmp
mov
and
ret
xor
jecxz
or
jnp
nop
mov
leave
cmp
cmc
jge
sbb
cmp
mov
mov
jge
imul
xchg
inc
xor
or
movs
fdiv
out
movs
cdq
mov
sbb
out
pop
shl
pusha
push
push
xor
jae
cmp
mov
shl
lahf
push
leave
sbb
(bad)
aad
jmp
push
cdq
cs
loopne
sub
shl
iret
fstp
jge
xor
or
in
sti
aad
clc
add
push
lods
pop
jmp
pop
inc
mov
xchg
ja
(bad)
adc
out
jne
or
mov
enter
cmp
out
or
mov
and
int3
push
pop
mov
lods
cmp
add
push
dec
sub
jp
xchg
pop
push
xchg
cs
sub
push
stos
xor
ret
cmp
or
test
iret
mov
push
cmp
and
inc
mov
push
out
scas
add
and
lods
sbb
cmp
xor
mov
cmp
add
mov
hlt
loopne
xchg
(bad)
push
dec
lods
pop
dec
add
(bad)
mov
push
push
mov
sahf
ins
xor
jp
ds
mov
sub
call
add
mov
jno
and
scas
xchg
mov
mov
adc
xchg
shl
movs
inc
cli
das
loopne
and
adc
adc
push
int3
std
xchg
fsub
mov
xchg
ins
push
ret
add
pusha
pop
mov
in
lods
mov
add
pop
mov
inc
test
lds
mov
pushf
ins
lds
out
lea
ins
out
fwait
pop
jmp
mov
push
mov
sub
sub
int
in
dec
jbe
add
mov
xchg
inc
jl
gs
add
push
or
mov
cmp
sub
in
sub
stos
mov
neg
push
popf
shl
lahf
not
mov
fwait
mov
test
jge
lock
js
adc
xlat
jne
adc
xchg
std
mov
jecxz
push
mov
fs
pop
loop
sbb
aam
inc
cwd
jl
movntps
jp
dec
pop
sahf
ret
xchg
cmp
pusha
xchg
das
pop
cs
dec
push
inc
xchg
cld
cmps
aad
mov
hlt
lahf
cmc
leave
jge
sub
mov
jbe
pop
mov
mov
dec
fist
adc
add
xchg
xor
or
pop
aas
jnp
addr16
push
repz
cmp
das
mov
in
xor
push
popf
inc
hlt
jmp
add
or
int
sub
inc
sbb
cmps
adc
pop
aam
push
cmc
pusha
push
adc
xchg
enter
or
push
mov
jo
push
dec
in
xor
in
mov
sub
fimul
enter
add
cmp
jnp
hlt
repnz
sti
push
test
(bad)
cmps
push
stc
xor
ds
rcr
lods
pop
xchg
fiadd
fstp
sahf
sbb
loop
add
jnp
loop
sbb
nop
cmp
test
fnstcw
or
push
movs
cmp
das
das
pop
idiv
and
outs
ja
mov
(bad)
scas
cdq
dec
int
push
ja
add
test
and
pop
sti
sub
pushf
int
fcmovnu
jo
add
push
xchg
pop
sub
mov
ret
(bad)
aad
dec
fnstsw
mov
(bad)
out
das
jl
daa
cmps
stos
js
out
aad
sbb
lea
fcomi
sbb
retf
ss
mov
dec
scas
ins
and
mov
jge
xchg
cld
(bad)
addr16
neg
repz
iret
push
fucomip
std
sbb
sbb
loopne
and
sub
mov
and
mov
sub
or
stc
pushf
sub
add
adc
sbb
inc
repz
jae
mov
test
fwait
add
jne
adc
and
loope
clc
retf
dec
scas
(bad)
shl
xor
gs
sub
movs
das
fidivr
xchg
retf
sub
jecxz
movs
inc
stc
jne
push
sbb
and
pop
icebp
sbb
inc
loope
stos
outs
and
add
repnz
sub
jbe
out
nop
ficomp
dec
jecxz
rol
sar
fld
mov
push
in
test
inc
shl
xor
mov
iret
je
jg
mov
cmps
mov
jno
mov
nop
popf
scas
adc
xor
jl
adc
mul
sub
addr16
ins
aaa
and
cmp
jnp
jmp
inc
sbb
daa
xchg
sbb
fnstenv
push
hlt
test
mov
pop
or
movs
mov
pop
jp
mov
movs
(bad)
mov
push
xchg
fs
jae
das
and
sti
les
cld
pop
rcl
add
mov
mov
dec
mov
adc
(bad)
in
mov
pop
repz
pop
hlt
mul
adc
and
loopne
std
test
sub
cli
repz
(bad)
mov
mov
add
mov
xchg
gs
(bad)
popa
cli
cmps
stos
xor
scas
adc
aam
jge
out
(bad)
int3
ret
jmp
dec
(bad)
cmp
stc
das
int
mov
lods
jnp
fcmovnb
inc
lahf
push
cs
jmp
mul
pop
fidiv
mov
sbb
into
inc
or
mov
sbb
mov
and
pushf
loopne
sti
xchg
or
add
and
nop
push
int3
cmp
shl
(bad)
rcl
sar
mov
and
test
sub
cmp
pop
mov
xchg
leave
lahf
add
fistp
sti
mul
call
js
cld
aas
(bad)
inc
mov
std
je
js
mov
test
call
ret
ss
mov
cmp
pop
in
daa
xor
nop
stos
cmp
jne
pop
xchg
fcmovbe
les
pop
lods
iretw
push
popa
push
dec
cmps
popa
jmp
mov
mov
adc
rcl
mov
inc
sti
mov
sub
daa
xchg
sub
cmc
idiv
jmp
icebp
jnp
lock
jmp
lahf
les
test
scas
aas
jb
retf
jmp
retf
push
cs
pop
lahf
or
lods
loopne
pop
push
sbb
loop
out
fnstsw
pop
cdq
or
cmp
int
or
mov
je
inc
pop
dec
(bad)
lods
mov
pop
adc
arpl
iret
or
stos
in
in
inc
ja
or
ja
push
pop
hlt
jge
push
stos
repz
xor
dec
cmp
clc
sbb
in
and
mov
sbb
mov
bnd
xchg
pop
sbb
popf
add
leave
les
dec
mov
call
pop
stc
push
mov
xchg
inc
jmp
addr16
pop
push
inc
scas
add
mov
std
add
mov
and
fcomp
stos
add
cmp
or
mov
xlat
jecxz
xor
fisttp
xor
or
mov
stos
add
movs
fmul
sub
jmp
pop
mov
loop
cmp
popf
cmps
xor
inc
mov
lahf
pop
and
stos
mov
leave
xchg
and
sahf
dec
outs
jg
inc
bound
inc
mov
sub
out
jae
pop
clc
aam
ins
mov
sbb
jmp
pusha
lock
cmps
iret
stos
js
loope
inc
jle
push
es
addr16
loope
mov
ror
xchg
mov
jnp
leave
pop
aam
mov
ins
aaa
mov
in
mov
mov
push
add
sbb
jmp
sbb
loopne
lahf
aad
mov
stos
int
test
pop
call
daa
xor
inc
pop
mov
dec
sbb
aaa
ins
into
pop
test
(bad)
in
nop
dec
icebp
pop
das
cmp
ret
jmp
dec
das
jmp
scas
jae
rcr
mov
push
sub
dec
push
pop
pop
add
out
lahf
bound
clc
xchg
jecxz
xlat
sub
imul
fldcw
and
sub
cmp
jae
pop
lock
in
in
loope
xchg
ret
mov
adc
repnz
adc
mov
ret
cwde
ins
retf
mov
in
jp
and
icebp
pop
(bad)
jmp
jbe
retf
loope
test
mov
fcom
mov
addr16
lock
out
xchg
adc
test
sbb
cmc
push
jp
jl
loope
jg
adc
movs
bound
rcl
inc
mov
mov
xor
test
add
out
(bad)
push
cs
retf
ins
pop
adc
sub
aam
xchg
into
xor
cli
jmp
or
cld
mov
mov
xchg
popa
int
(bad)
and
jns
mov
pop
dec
les
and
cmp
shr
cmps
das
mov
mov
mov
jne
popa
and
push
test
jg
xchg
aam
aaa
sti
adc
xchg
cdq
in
mov
push
repnz
iret
bnd
stc
cmp
push
jp
in
add
dec
push
jp
repnz
xchg
neg
enter
jp
xor
lods
mov
add
cmp
dec
and
sti
add
add
xor
sub
adc
cdq
sbb
mov
jmp
fsub
call
add
xchg
fimul
cmp
arpl
jne
mov
int
pop
dec
mov
sbb
idiv
shr
dec
cmp
cmp
neg
lock
dec
add
test
adc
cs
xor
mov
(bad)
adc
sbb
jmp
and
(bad)
das
jg
cwde
arpl
dec
add
test
retf
or
fcomp
lods
mov
fnsave
dec
fimul
push
ins
xchg
mov
sub
xchg
xor
xlat
repz
stos
outs
push
hlt
xchg
std
dec
aad
lahf
dec
out
fidiv
dec
ins
or
inc
mov
inc
les
sub
inc
stos
pusha
cmp
jb
cmc
lds
into
sbb
xor
mov
push
push
mov
jnp
dec
xchg
mov
(bad)
fdivr
cs
pop
pusha
push
mov
ror
cmp
pop
lods
int
dec
or
imul
ja
mov
pusha
sbb
push
ins
and
test
out
mov
dec
mov
pushf
ds
jae
(bad)
cmc
hlt
inc
mov
outs
or
in
mov
out
sub
in
mov
lock
jmp
rcl
xchg
(bad)
mov
shr
add
fstp
push
fmulp
pop
push
ja
loopne
sbb
inc
adc
cs
jp
sahf
test
xchg
(bad)
imul
mov
cwde
inc
inc
push
add
test
stc
stc
fld
pop
bound
xchg
sahf
cmps
add
mov
inc
push
mov
add
lahf
les
pop
pusha
(bad)
jl
add
adc
dec
inc
(bad)
sub
loopne
paddsb
push
call
mov
mov
adc
push
mov
cdq
and
stc
popa
movs
mov
push
xchg
cdq
xor
mov
js
push
std
fwait
jnp
xor
mov
sbb
xor
mov
inc
mov
call
xchg
dec
push
into
mov
sbb
jl
(bad)
push
stos
ja
xchg
ret
bound
pop
fyl2xp1
mov
xor
sar
push
cld
xor
mov
(bad)
hlt
cmp
mul
pop
mov
xchg
fmul
mov
icebp
stos
aam
mov
(bad)
ins
cli
sub
addr16
mov
daa
sbb
jae
cdq
fsub
int
fld
adc
sbb
sub
xor
mov
(bad)
sub
xor
push
push
out
sbb
pop
mov
cmps
shl
inc
ficomp
les
lods
iret
hlt
bound
in
int
les
sar
sub
push
rcr
xor
call
das
pop
aaa
sbb
mov
push
pop
add
mov
adc
lods
dec
loop
or
retf
adc
dec
mov
ins
jns
xchg
add
fst
aaa
jb
push
xor
push
psrlw
lock
fs
aad
out
xor
mov
rcr
neg
mov
add
adc
xchg
adc
jle
pop
sub
mov
jmp
pop
je
loopne
push
xor
jns
xor
test
iret
xchg
iret
sbb
and
inc
push
sbb
inc
pop
es
ins
xchg
xchg
icebp
sbb
mov
jecxz
ror
imul
in
xlat
loop
arpl
sti
sbb
or
icebp
ds
adc
test
fwait
mov
inc
inc
jne
ds
aam
sbb
(bad)
vpsubd
aas
fidiv
dec
push
xchg
inc
dec
int
(bad)
push
scas
or
mov
jp
js
xchg
retf
xor
mov
rol
rcr
movs
mul
jmp
sub
pop
lea
fdivr
call
(bad)
mov
sbb
call
push
jl
(bad)
sbb
mov
push
jg
shl
and
mov
jl
test
mov
xchg
cmp
loop
xchg
xchg
xchg
or
stc
movs
mov
jl
bswap
xor
bound
fs
jmp
(bad)
iret
sub
mov
dec
sbb
and
into
inc
push
mov
mov
dec
sbb
inc
std
call
sub
int3
inc
addr16
vpsrad
push
fisubr
out
pop
cmc
in
ins
adc
cdq
push
or
adc
jb
push
mov
ss
cmp
cli
dec
mov
ja
mov
or
push
push
scas
mov
push
pop
sbb
gs
mov
outs
pop
mov
jne
mov
into
push
das
dec
or
xchg
shr
and
lods
adc
dec
test
inc
sub
daa
movs
adc
adc
cmc
mov
in
or
pop
push
jo
push
outs
sub
add
add
mov
out
fisttp
mov
jl
add
pop
ins
fistp
jg
aaa
jge
cmp
data16
cmps
or
mov
and
js
jle
jno
xchg
or
retf
jb
in
cmps
mov
jl
xchg
push
pop
leave
js
add
xor
adc
adc
inc
aam
daa
(bad)
rcr
rcr
ja
fcomp
shl
mov
ds
icebp
jp
mov
xchg
sbb
gs
fldcw
shl
inc
call
dec
(bad)
jno
push
icebp
jno
pop
mov
push
dec
jnp
shl
arpl
xlat
or
mov
xchg
cmps
sti
and
loop
aaa
xchg
frstor
cs
mov
ror
push
pop
out
iret
mov
ss
xchg
xchg
fstp
dec
outs
ss
xor
aas
mov
dec
jo
adc
in
imul
popa
lods
nop
scas
fisubr
je
call
pop
xor
cmp
je
inc
cmp
xor
in
or
cmp
push
dec
mov
inc
jb
leave
dec
add
mov
pop
adc
cwde
mov
dec
rol
loopne
xchg
lods
xchg
iret
loop
adc
pop
adc
and
movs
in
pop
(bad)
ss
adc
loopne
hlt
sub
jns
inc
aaa
loop
jns
xor
(bad)
mov
repz
lock
sar
jmp
in
pop
jne
les
jne
ins
cmp
cmps
adc
inc
fisubr
or
mov
test
in
aad
hlt
cli
loope
inc
inc
fcmovnu
sti
fwait
jno
mov
data16
call
jmp
cmps
mov
aas
cmp
jmp
xchg
cmp
push
inc
out
xchg
stos
cmps
sar
mov
cli
sahf
repz
(bad)
dec
add
mov
int3
lods
or
and
inc
mov
xchg
or
add
ins
out
and
xchg
iret
rcl
and
xchg
add
mov
inc
lahf
mov
inc
xor
xor
sahf
push
mov
jne
mov
or
sbb
jmp
push
dec
mov
das
sub
inc
cmps
jne
mov
xlat
retf
in
loop
push
adc
pop
std
and
imul
jecxz
jns
(bad)
pop
inc
(bad)
mov
push
je
pop
pop
inc
leave
sub
mov
fist
call
rcr
lods
add
popa
push
js
bound
xor
xlat
mov
ret
or
ins
sbb
pop
pop
in
pop
repz
bsr
mov
imul
or
xchg
jg
rcl
bound
movs
push
jo
(bad)
mov
ficomp
test
push
push
sbb
nop
push
pop
pop
and
in
movs
dec
int
in
pop
inc
cmp
adc
push
stos
into
add
dec
cmps
aaa
mov
out
adc
(bad)
jno
xor
enter
mov
cwde
push
mov
pop
xor
push
mov
dec
adc
sbb
xchg
xor
pop
pop
fbstp
sahf
pop
cmp
movs
addr16
adc
mov
pusha
jo
test
push
icebp
popf
push
add
(bad)
xchg
aas
sub
push
inc
jns
shl
xchg
inc
or
jl
mov
inc
adc
pop
inc
test
xor
adc
push
xor
mov
or
xor
mov
jge
mov
xor
enter
jle
cli
sbb
int3
inc
dec
sub
dec
outs
jno
and
or
daa
pop
shr
cmp
fiadd
fbld
in
push
mov
fsub
out
push
mov
adc
int3
ja
cmp
bound
mov
pusha
xchg
daa
add
dec
pop
adc
mov
test
xchg
jge
mov
lahf
out
mov
adc
push
xchg
ror
adc
push
sub
outs
(bad)
mov
inc
push
loope
cmp
adc
aad
movs
jno
call
ja
ror
xor
xchg
cmps
push
das
fcom
leave
push
jo
cwde
sahf
mov
mov
cwde
repz
sbb
lock
xchg
leave
(bad)
mov
es
aas
retf
outs
test
pusha
sub
(bad)
mov
xor
test
addr16
mov
aaa
jne
sbb
aad
sar
mov
pop
xlat
lahf
outs
cmp
(bad)
inc
sub
mov
sbb
aad
cmc
push
stos
jmp
shr
inc
gs
mov
jbe
fs
mov
loop
fist
cli
xor
jle
or
call
sbb
push
ss
repnz
mov
pushf
jmp
push
arpl
push
scas
loopne
imul
pop
mov
jg
ss
in
mov
not
dec
mov
xchg
jns
jg
and
fs
jl
in
mov
movs
(bad)
xchg
in
dec
(bad)
sbb
stc
cmps
outs
(bad)
xor
jge
mov
mov
loopne
data16
xchg
add
cmp
aas
test
inc
(bad)
data16
dec
dec
mov
dec
dec
add
(bad)
popa
adc
enter
dec
ja
cmp
rol
cmp
xor
sub
ss
cdq
pusha
mov
xchg
ret
std
mov
das
and
scas
pop
repz
andps
jmp
push
xlat
sti
sub
sahf
jmp
sub
fldcw
pop
fs
mov
pop
adc
xor
aam
sub
(bad)
sub
stos
iret
mov
inc
mov
movs
mov
dec
jle
fnstcw
inc
cmp
xchg
inc
xor
stos
inc
in
fwait
mov
repz
sbb
fs
lods
test
cld
mov
js
dec
in
mov
popf
sbb
mov
scas
lea
xor
lea
ror
mov
xchg
movs
add
and
inc
cli
and
pusha
popf
mov
push
repz
push
mov
aam
mov
xchg
xchg
outs
adc
stos
xchg
addr16
cmps
clc
jge
mov
aad
inc
pop
mov
cmps
mov
cmp
mov
and
mov
int
mov
movs
not
mov
xchg
(bad)
and
ret
xlat
add
test
mov
sti
cmp
add
test
mov
mov
mov
outs
xchg
mov
cmp
mov
mov
cli
mov
scas
pop
(bad)
nop
test
pushf
mov
popa
add
movs
or
fisttp
icebp
fnstcw
adc
inc
aaa
fcomp
outs
jecxz
mov
iret
sbb
push
xchg
pop
inc
bound
jne
and
call
loopne
or
sbb
cmps
popa
repz
cld
and
inc
js
xor
repnz
jg
adc
mov
rcr
pop
xor
adc
popa
sub
jg
and
pop
adc
pop
xlat
adc
sbb
ins
and
xlat
mov
sbb
popf
cdq
push
cmp
data16
add
mul
mov
cld
cmp
adc
mov
or
out
das
mov
packuswb
dec
mov
inc
adc
sbb
sub
stos
jae
fmul
sbb
(bad)
adc
in
push
loopne
push
mov
mov
iret
or
imul
sahf
dec
mov
sub
pop
sbb
xchg
cli
outs
and
mov
mov
dec
(bad)
sub
(bad)
cmps
mov
mov
mov
in
ja
call
mov
dec
mov
adc
add
jecxz
cmp
cld
es
xchg
call
ret
inc
and
sar
xchg
and
xchg
xchg
mov
repnz
jl
push
ficomp
nop
stos
dec
call
jmp
xchg
jo
lds
inc
mov
out
sar
adc
jge
mov
dec
pop
inc
(bad)
jno
mov
xlat
pop
cmp
jl
sahf
loope
lds
sub
mov
loop
scas
fdiv
pop
xor
in
sub
pop
cwde
addr16
xor
lods
(bad)
fild
sbb
enter
repz
retf
mov
loopne
in
push
test
retf
test
ds
(bad)
and
pop
mov
mov
leave
aam
das
ficom
mov
and
rcl
dec
repnz
sub
jne
xor
or
push
ret
mov
mov
dec
movs
push
out
das
mov
jle
push
ret
outs
popa
sbb
retf
test
xchg
xchg
ds
dec
inc
aaa
loope
pop
jmp
xchg
inc
jb
imul
js
sbb
fisub
(bad)
data16
add
retf
cwde
ror
mov
push
xchg
out
stos
inc
add
mov
dec
lea
add
jbe
movs
out
add
cmp
int3
fistp
je
rcl
hlt
aad
push
dec
sub
adc
or
cmp
es
mov
nop
pop
repnz
xchg
in
pop
out
adc
int3
aas
(bad)
cmp
imul
movs
mov
cmp
xor
jl
(bad)
sub
mov
scas
fst
aad
pop
cld
xor
mov
sub
pop
ret
cmp
int3
mov
xchg
mov
call
fs
cmp
(bad)
retf
ror
sahf
movs
iret
arpl
and
movs
xlat
sub
aam
inc
adc
int3
ss
mov
fcomp
arpl
cmps
inc
inc
pop
inc
push
fist
jmp
adc
xchg
pop
outs
data16
test
push
shl
inc
pop
and
ret
xchg
cs
dec
movs
mov
mov
pop
dec
jns
ret
mov
ds
fistp
mov
lods
inc
and
mov
push
les
mov
test
push
jge
data16
push
sbb
or
sub
fist
mov
out
shrd
mov
ret
stc
or
jns
out
mov
sbb
push
add
push
pusha
pop
dec
test
clc
adc
not
jbe
sbb
xchg
lods
sbb
les
ret
popf
jb
pusha
fimul
repnz
jmp
fsubr
cwde
mov
clc
xor
xor
repnz
mov
mov
cmp
sbb
rcr
sbb
and
cmp
mov
xchg
pushw
pusha
repz
into
fist
aam
fadd
lods
jne
mov
leave
sub
push
sbb
push
sbb
xor
(bad)
(bad)
mov
repnz
das
ficomp
push
loopne
aas
pop
loope
pusha
jecxz
and
xchg
jne
imul
adc
fstp
mov
sbb
iret
mov
ins
stos
pop
or
sahf
movs
and
adc
stc
(bad)
movs
inc
repz
push
sahf
popa
loop
std
loope
cmps
xor
test
sub
jg
xor
xor
xor
popa
dec
popa
xchg
std
inc
ins
std
inc
int
add
repz
clc
(bad)
sbb
fcom
mov
sub
push
das
cdq
cs
fistp
cmp
lea
popa
jp
movs
and
movs
mov
dec
out
xlat
jg
cmps
neg
shl
adc
push
ins
mov
pushf
outs
lods
push
test
adc
push
pop
int3
faddp
movs
arpl
lahf
mov
xor
fld
movs
int
gs
lock
and
jnp
pop
in
push
fwait
jmp
and
pop
outs
(bad)
or
mov
in
add
mov
not
add
inc
push
xchg
push
pop
pop
scas
test
sar
sbb
or
sbb
pusha
push
xchg
in
cmp
mov
or
xor
cli
mov
xor
das
mov
xchg
dec
xchg
jge
stos
popf
jl
test
imul
repz
jbe
inc
adc
and
or
mov
and
push
fs
xor
sub
sub
test
jp
movs
jne
push
mov
xor
in
int
dec
pop
scas
mov
mov
mov
scas
mov
imul
push
imul
mov
mov
jl
sbb
mov
daa
cld
jnp
push
into
and
imul
(bad)
test
and
adc
jnp
ins
push
psrad
sbb
pop
bswap
mov
stos
mov
add
loop
mov
sub
jl
xlat
jns
rol
test
jmp
xor
daa
(bad)
add
and
jge
into
dec
fnop
sti
push
shr
aas
les
(bad)
call
dec
in
push
nop
dec
fsub
cmp
sub
mov
dec
add
jl
lahf
adc
or
mov
xchg
xchg
push
add
hlt
stc
jmp
ins
fwait
cli
xchg
mov
push
ss
sub
xor
mov
push
cli
sub
(bad)
and
data16
mov
push
enter
cmp
aaa
test
mov
mov
dec
cwde
jae
sub
fidiv
sub
xchg
dec
xor
iret
setb
rcl
mov
adc
pop
fisub
inc
jo
fisubr
out
rcr
jbe
leave
in
mov
ja
cmp
xchg
mov
cld
out
push
pop
mov
push
pusha
mov
js
pop
push
xchg
push
dec
jg
push
xchg
add
arpl
leave
pop
sub
mov
push
cdq
cmp
jno
jle
adc
cmps
(bad)
retf
icebp
mov
icebp
fisttp
mov
push
and
ins
cmp
ja
jmp
jmp
sbb
test
(bad)
jge
dec
ds
je
das
jbe
cmp
jae
pop
fisub
pop
ins
cwde
push
pop
sub
(bad)
sbb
jge
ror
std
adc
sbb
les
mov
jbe
dec
mul
xchg
and
pop
out
xor
test
xor
xor
dec
test
mov
xlat
pushf
lea
push
jns
cdq
push
mov
jg
jmp
push
jp
pop
ins
cmps
sub
add
cmps
ins
leave
mov
stos
div
enter
nop
xchg
bound
dec
jnp
aad
lods
fstp
ds
mov
pop
mov
pop
rcl
xchg
movs
mov
sbb
pop
push
mov
fistp
jb
push
adc
iret
dec
or
mov
xor
lds
push
adc
aad
ret
lds
or
cwde
mov
int3
movs
dec
push
push
aaa
mov
ja
out
xor
fld
mov
icebp
sahf
call
arpl
out
inc
dec
jo
cmp
int3
in
xchg
pop
movs
imul
imul
int
pop
mov
cmps
and
jecxz
scas
xchg
sub
xchg
scas
or
mov
inc
dec
es
iret
aam
loope
sub
ss
inc
jmp
fincstp
add
das
call
adc
or
inc
(bad)
jnp
mov
jmp
jg
enter
aas
mov
mov
add
dec
dec
xchg
(bad)
mul
out
xor
popa
scas
push
loope
or
(bad)
shl
mov
and
add
sub
in
cwde
pop
icebp
inc
sahf
cwde
mov
mov
pushf
mov
enter
inc
out
jecxz
(bad)
cld
aam
cdq
in
(bad)
jp
dec
int3
lock
fyl2xp1
test
data16
mov
(bad)
ins
test
mov
xchg
mov
mov
nop
jmp
outs
pop
dec
mov
cmp
pop
pop
jbe
jmp
cwde
xchg
cli
add
cmps
jne
xor
jecxz
push
xor
(bad)
data16
mov
pop
push
aad
das
mov
sbb
sub
push
cmp
fidivr
xor
push
cmps
ss
sub
adc
sub
mov
movs
(bad)
lock
loop
pop
scas
pusha
lock
cmps
dec
mov
push
movs
daa
arpl
sub
arpl
(bad)
and
xchg
mov
pop
add
jp
xor
test
jp
cmp
dec
cmps
pop
clc
cmp
test
repnz
jbe
pop
sub
sbb
cmp
or
retf
push
dec
sub
fisubr
cmp
pop
mov
in
add
xor
adc
fadd
stos
mov
loope
or
xor
cli
lock
push
in
int
jb
dec
and
pop
leave
cli
push
in
iret
and
cdq
adc
repnz
add
iret
stc
out
add
cmp
call
mov
or
sub
fs
sbb
dec
and
jae
mov
pop
in
and
fbstp
mov
pandn
adc
push
retf
and
jno
jne
es
mov
ror
or
jl
dec
mov
in
cmp
xor
inc
loop
sbb
fild
sub
cmovg
or
(bad)
das
ja
push
call
adc
sahf
shr
out
sbb
mov
dec
ret
dec
pop
and
mov
test
popf
aam
retf
cmp
shl
add
adc
lods
aad
sar
mov
cmp
imul
cs
jmp
cmp
mov
in
inc
sub
ins
call
mov
out
sub
or
gs
sbb
dec
loopne
int
test
movs
adc
add
ret
xlat
test
int
(bad)
int
xor
int
adc
stos
xor
push
xor
bound
call
xor
adc
movhlps
out
or
cmc
stos
neg
popf
xlat
pop
adc
pop
mov
jmp
test
sar
jb
sbb
mov
pop
pop
hlt
adc
loop
fnstenv
hlt
inc
pop
les
pop
test
icebp
cmp
clc
pop
cmp
stos
sub
adc
or
mov
test
loopne
popa
add
repz
mov
shr
dec
pop
or
push
mov
mov
xchg
mov
ror
sbb
sti
mov
inc
cmp
and
stc
sbb
sub
jle
cmp
jne
jbe
xor
inc
sbb
cli
or
ror
fwait
xor
mov
sbb
push
adc
(bad)
jge
and
out
(bad)
push
mov
adc
xchg
adc
test
jg
dec
or
fcom
mov
cdq
in
push
(bad)
retf
sbb
add
int
loopne
sti
add
jmp
shr
or
scas
fisub
or
fdiv
jmp
gs
shr
cwde
cmp
dec
shl
mov
inc
call
mov
fs
pushf
mov
dec
sar
mov
(bad)
cld
ret
scas
lock
mov
(bad)
ss
sub
jp
xor
shr
push
push
mov
not
movs
hlt
add
js
and
push
push
nop
add
ds
pushf
jmp
and
fs
mov
mov
cs
aad
jmp
test
xlat
mov
xchg
pop
adc
push
fadd
add
stos
pop
iret
fstp
mov
sbb
xchg
adc
popf
(bad)
rcl
jmp
(bad)
push
movs
imul
inc
test
std
test
ins
aam
scas
repnz
lahf
and
jmp
mov
pop
or
or
nop
(bad)
cmp
loop
pop
pop
in
mov
push
pop
cmp
cmp
push
lods
aaa
push
inc
mov
pop
ror
(bad)
rol
push
push
xlat
out
mov
mov
cmp
dec
out
push
push
jno
ret
sbb
das
mov
sub
or
out
and
cmp
shl
inc
ja
mov
icebp
mov
not
dec
jmp
sbb
push
push
not
aas
cmp
adc
cmp
add
jl
jge
iret
add
push
inc
aad
cs
ins
sahf
xchg
inc
mov
out
in
inc
jae
push
pop
pop
dec
lock
push
ja
jno
jmp
push
pushf
mov
or
scas
push
cmp
or
add
out
adc
mov
out
or
aaa
jmp
rep
ss
and
lds
cmp
lea
adc
test
jbe
std
in
stos
jb
add
jl
cld
popf
jg
mov
sbb
(bad)
movs
aad
test
into
push
sbb
and
inc
stc
cli
xor
jmp
inc
jecxz
mov
mov
dec
add
mov
pop
and
fstp
rol
pop
cmp
ins
rol
pop
in
mov
mov
imul
sbb
dec
(bad)
addr16
outs
test
neg
push
test
and
push
mov
outs
call
mov
pop
pop
das
mov
shl
int
jecxz
scas
inc
xor
mov
jge
loope
ins
cmps
mov
sbb
mov
xor
rol
push
enter
mov
clc
in
div
fiadd
imul
jp
or
movd
adc
retf
outs
addr16
sti
add
or
pop
clc
call
jne
gs
pop
imul
jg
into
mov
jno
repnz
loope
inc
sub
cmp
mov
push
dec
das
mov
inc
inc
movq
leave
lock
jns
movs
ror
test
lods
or
ret
sbb
inc
call
fsub
lods
out
(bad)
jno
(bad)
scas
xchg
fwait
mov
or
push
sbb
mov
jge
dec
pop
test
dec
scas
imul
test
in
test
sub
pop
cmp
xor
std
mov
adc
xor
addr16
xor
or
je
push
xlat
in
adc
fwait
mov
fnsave
adc
mov
add
loope
cmp
sahf
pop
or
xchg
ret
lahf
jbe
adc
sbb
sub
jbe
jbe
mov
xchg
sub
rcr
cmp
je
mov
stos
scas
loopne
sbb
jnp
enter
pushf
mov
call
repnz
(bad)
aas
fild
lods
mov
jg
xor
cmp
add
push
rcr
ja
stos
push
dec
xchg
int
add
adc
das
mov
mov
iret
inc
push
pop
scas
and
xor
lds
mov
ss
or
mov
aad
hlt
not
jge
dec
jge
jle
in
xor
loopne
xor
ret
scas
cmp
cmp
add
or
push
and
bound
fisttp
std
cmps
dec
into
xchg
repz
push
jno
add
and
xlat
pop
and
int3
sub
lds
das
xchg
adc
xchg
push
fdivr
gs
inc
rcr
addr16
les
in
pop
lods
lea
and
iret
in
arpl
(bad)
sub
ror
pop
sub
aaa
loope
or
out
dec
pop
dec
jmp
xchg
xchg
shl
mov
jecxz
imul
lfs
lods
jg
mov
pop
ins
and
fidiv
iret
add
cmp
inc
inc
push
dec
or
xchg
ret
(bad)
jo
add
push
ins
xchg
pop
sub
cmp
mov
mov
dec
das
fs
cmp
gs
scas
cmc
loop
sbb
xlat
jle
test
push
jmp
mov
or
add
cmp
js
mov
not
push
mov
out
and
pushf
mov
mov
inc
sti
push
jge
jmp
dec
ret
jbe
iret
ss
adc
add
sbb
outs
adc
(bad)
sar
repnz
fsubr
movs
(bad)
fcmovu
xchg
push
push
mov
cmp
iret
test
scas
mov
inc
das
or
ins
retf
ror
sbb
fisubr
or
es
cmp
fs
adc
sbb
cmp
adc
mov
dec
iret
mov
popf
shl
xor
in
cmp
mov
xor
mov
dec
ins
xchg
std
mov
mov
cld
test
sub
and
aaa
movs
xchg
xlat
jmp
mov
sar
pop
cmc
pop
xor
imul
mov
and
(bad)
aam
and
jge
std
add
in
ins
(bad)
xchg
or
mov
push
xchg
and
(bad)
adc
pusha
inc
gs
jge
fst
add
mov
jne
pop
scas
xchg
jns
mov
mov
mov
push
xchg
mov
std
clc
pop
sbb
cmps
addr16
push
ss
lods
fisubr
dec
fcmovne
add
push
mov
in
out
and
add
sub
test
mov
(bad)
neg
mov
stos
push
cmp
movs
clc
mul
js
adc
mov
adc
add
xor
retf
pushf
sub
xchg
mov
cmp
jno
jno
add
xchg
iret
into
and
nop
into
xchg
xor
icebp
ds
inc
add
inc
push
mov
neg
mov
int3
movs
jl
or
ficom
loope
sbb
dec
pop
out
pop
addr16
push
fld
ja
and
inc
mul
mov
movs
ret
fdiv
gs
xchg
in
aam
jmp
vpavgb
retf
xor
cmc
test
add
shl
call
xlat
cli
mov
sub
jb
(bad)
hlt
test
pushf
or
int3
inc
push
inc
jecxz
mov
movs
sbb
dec
es
xor
loop
fadd
fdiv
outs
test
and
push
pop
xor
mov
scas
or
es
jle
call
je
daa
sti
stc
mov
loope
jp
pop
(bad)
stc
dec
nop
pmaxub
or
inc
push
test
push
loop
scas
or
icebp
shl
mov
loopne
xchg
mov
cwde
jle
adc
mov
scas
adc
sbb
mov
xchg
jno
jae
push
loope
xchg
(bad)
xchg
inc
popf
mov
mov
cmp
inc
jmp
sbb
adc
cmp
dec
pusha
inc
test
pop
std
retf
xchg
test
jbe
scas
jmp
push
fst
dec
inc
cmps
pop
mov
out
in
push
les
aas
cmc
push
fwait
or
push
ret
mov
pop
push
arpl
cmps
stc
xlat
sahf
fist
and
adc
sub
xchg
(bad)
pop
sub
aaa
pop
ret
push
xchg
call
cmps
gs
jnp
test
push
shl
pop
mov
xchg
aas
xor
pop
mov
scas
enter
out
cmp
pop
dec
jae
loopne
push
or
pop
jmp
popa
and
jmp
data16
cld
cmps
retf
loope
sub
mov
sbb
je
out
lods
push
mov
jne
fwait
lds
mov
and
dec
mov
les
out
xlat
push
or
jmp
push
jp
rol
jo
jnp
cmps
out
dec
sub
xor
jmp
les
dec
(bad)
cmp
ftst
out
neg
mov
push
dec
cmp
lahf
mov
add
dec
xor
mov
pop
sub
pop
push
div
retf
out
in
mov
xor
lds
leave
call
enter
retf
out
mov
fist
lods
les
aad
fist
jp
or
dec
jbe
icebp
adc
in
mov
nop
dec
add
rcr
lods
retf
daa
xor
sbb
push
in
pop
pop
add
inc
fcomp
and
dec
jp
cmps
jne
into
sbb
ds
aas
test
pusha
cmp
push
adc
push
push
inc
shl
fstp
adc
jnp
cld
cmp
call
leave
dec
sub
xchg
repz
outs
mov
push
out
test
push
pop
mov
pop
int3
and
or
pop
lea
nop
xchg
mov
jp
aad
push
mov
push
or
cwde
dec
dec
xor
std
mov
xchg
lahf
jnp
push
jmp
ror
mov
cmp
add
std
pop
retf
cmp
(bad)
jno
pop
mov
push
add
ds
call
mov
nop
sub
data16
xchg
(bad)
jnp
and
xchg
push
jbe
leave
outs
test
ffree
or
xchg
push
jp
daa
jae
sbb
gs
ss
mov
sub
inc
xchg
sub
repnz
jnp
xchg
nop
call
pop
ins
mov
sbb
xchg
int3
rcr
dec
jb
fs
loopne
push
inc
aas
jecxz
jle
sbb
(bad)
iret
scas
repnz
adc
into
xor
pop
dec
sbb
xchg
hlt
sbb
bound
cmc
leave
pop
cmp
ja
pop
cmp
xor
cmps
dec
xor
mov
xchg
out
(bad)
pop
ret
icebp
and
cld
mov
repz
test
mov
scas
scas
(bad)
cdq
adc
pop
cmp
jnp
daa
not
movs
cld
iret
jge
pop
ja
pushf
das
(bad)
sbb
(bad)
mov
movs
cmp
mov
add
lds
out
jno
and
rol
adc
cmp
ret
outs
pop
aad
jg
push
and
shr
out
xchg
jo
cmp
fist
inc
xor
movs
iret
lea
aaa
cmps
jmp
mov
inc
jle
movs
clc
aaa
cmp
test
or
cmp
test
xor
dec
fstp
dec
retf
(bad)
jecxz
pop
out
xor
sub
inc
int
pop
sar
fcomp
inc
ror
popa
cmp
sbb
pushf
dec
shl
sub
ja
inc
adc
rol
or
ret
push
sar
jmp
(bad)
mov
push
scas
(bad)
clc
icebp
and
cmp
xchg
inc
jle
stc
push
(bad)
bound
mov
mov
sbb
push
push
push
ins
cmps
jne
mov
xchg
xor
jmp
cmp
inc
or
jb
outs
push
xchg
imul
cmp
or
sahf
jmp
lds
add
repnz
xor
push
mov
retf
and
pop
int
mov
jo
cwde
xchg
stos
hlt
sbb
mov
cwde
fwait
retf
xchg
repnz
lds
ins
push
ja
push
sub
jmp
fstp
pushf
stos
dec
lea
jle
xchg
popa
cli
pushf
cmp
in
inc
xchg
mov
aam
test
inc
cmp
outs
pop
dec
and
out
adc
test
xchg
call
mov
shl
mov
pop
dec
retf
and
push
jne
lds
adc
out
dec
cwde
mov
cmp
jb
adc
movs
jcxz
clc
ins
pop
ds
(bad)
xchg
pushf
or
fbld
aaa
cmp
mov
out
pusha
mov
aam
es
inc
or
not
mov
retf
inc
rcl
in
je
inc
imul
xor
pop
adc
xchg
mov
adc
int3
mov
(bad)
pop
jbe
cwde
in
add
inc
sub
inc
sti
dec
das
dec
call
cmp
ret
and
dec
jmp
mov
jmp
mov
dec
cmc
sub
popf
mov
in
test
(bad)
push
sub
cld
scas
jno
push
mov
std
(bad)
push
mov
inc
movs
fisub
cdq
push
dec
retf
into
enter
pop
fwait
xchg
dec
ret
push
int3
adc
push
in
cmp
xchg
fld
fcomp
adc
pop
sub
repnz
imul
xchg
inc
shl
adc
cmp
aaa
inc
mov
inc
gs
sub
mov
cmc
jo
clc
shr
loopne
mov
xchg
and
push
dec
inc
dec
sbb
test
xchg
cmp
inc
cwde
lock
leave
test
ret
loope
mov
scas
loop
(bad)
rcl
gs
jae
mov
enter
jmp
pusha
int
aad
sbb
daa
je
mov
xchg
xor
cmps
xor
jp
ret
arpl
xor
(bad)
scas
sar
dec
out
push
rcl
loop
push
iret
jecxz
lea
adc
cmp
aas
xor
das
sub
mov
xchg
pop
or
push
aam
or
movs
js
mov
xchg
mov
add
mov
or
pop
outs
and
mov
jb
nop
cmp
jb
mov
pop
repz
shr
push
add
mov
mov
mov
sbb
test
call
bound
inc
mov
cmp
out
cmp
mov
push
pop
arpl
(bad)
xor
ja
adc
cdq
pop
or
jae
stos
sti
xrelease
js
sub
xchg
jmp
dec
cmps
daa
retf
(bad)
out
nop
loop
pop
push
pop
bound
adc
xchg
(bad)
leave
movs
aad
shr
les
pop
add
sbb
les
sbb
adc
outs
(bad)
adc
ror
cmp
outs
mov
ins
pop
mov
idiv
ins
xchg
in
cmps
jg
mov
out
adc
adc
mov
adc
sub
shr
add
shl
and
xor
scas
call
jmp
pop
push
ins
mov
or
lods
test
add
fs
gs
into
mov
in
mov
stos
cmps
adc
lahf
xor
fst
sbb
dec
cld
sub
call
jno
das
push
push
daa
lea
test
pushf
mov
fwait
or
mov
add
aad
cs
jmp
in
and
rol
xchg
cmp
ins
xchg
pop
fild
mov
hlt
lock
js
pop
mov
sahf
mov
push
xchg
xchg
aad
clc
scas
cmps
into
cwde
push
inc
mov
mov
sub
mov
movs
pop
lods
ss
aaa
sbb
int
mov
adc
leave
sub
out
mov
out
sub
addr16
push
mov
jmp
pop
cmc
fist
dec
mov
xor
sub
mov
adc
mov
(bad)
mov
pop
adc
jle
sbb
mov
retf
mov
pop
xor
pop
jmp
pop
xor
shl
xor
(bad)
fs
leave
dec
cmp
ins
adc
stos
clc
ficom
cmps
or
jmp
xchg
push
adc
fnsave
xlat
test
inc
inc
stos
(bad)
mov
ror
xchg
or
outs
pop
inc
push
pushf
xor
dec
loop
xor
ss
scas
fcomip
xor
(bad)
push
adc
pop
inc
pop
cwde
out
daa
aaa
inc
pop
hlt
pop
fwait
scas
jae
lds
ror
mov
jmp
xchg
cdq
loop
and
nop
shl
or
(bad)
mov
(bad)
ja
jmp
out
mov
inc
jge
dec
dec
stc
imul
pop
into
ins
ror
push
or
dec
and
je
sub
adc
mov
imul
movs
in
sub
cmp
push
jg
fcom
xchg
and
mov
pop
ds
xchg
pop
mov
and
call
mov
(bad)
outs
mov
push
cmp
sbb
cs
mov
movs
loope
cmp
jno
xor
dec
in
imul
mov
mov
shr
popa
mov
pop
jge
leave
pop
fild
xor
cmp
scas
loop
stc
mov
sti
rol
jg
(bad)
jo
xchg
pop
loope
cmp
pop
and
push
pop
mov
pop
xchg
test
inc
mov
cmps
test
stc
push
and
cwde
enter
xchg
rcl
jl
mov
mov
nop
add
lods
icebp
js
inc
sub
inc
leave
mov
icebp
adc
fdivrp
adc
jo
hlt
pushf
retf
push
pop
jmp
clc
call
xor
push
test
inc
push
adc
or
in
popf
imul
arpl
cmp
sbb
out
lahf
stc
fwait
push
aas
cmp
mov
mov
push
in
xor
loope
sbb
cld
lods
shl
mov
add
inc
ss
popa
je
jecxz
dec
imul
rcr
mov
lods
mov
add
fnsave
mov
cmp
mov
pushf
loopne
leave
cmp
or
jmp
scas
adc
retf
push
xlat
cdq
sub
push
iret
loopne
inc
aad
fnstsw
and
push
repnz
mov
call
xor
addr16
mul
dec
and
mul
pop
hlt
loop
inc
out
jns
lock
cmp
sbb
into
push
lds
push
sbb
adc
dec
cmp
mov
jmp
je
loopne
mov
sub
fwait
mov
enter
outs
sbb
ins
jecxz
pop
adc
push
cmp
aas
fisub
pop
les
scas
loopne
jp
add
add
adc
call
push
mov
dec
mov
mov
imul
test
adc
dec
add
pop
xor
aad
and
xchg
movs
loope
adc
push
jo
stos
enter
lock
loop
sbb
call
jmp
(bad)
sar
scas
fcomp
scas
xchg
push
xchg
mov
int
(bad)
(bad)
dec
in
outs
adc
jl
push
sub
lahf
out
sti
pop
ins
int
mov
je
ret
inc
or
add
int
jno
sbb
pop
pop
pop
push
mov
mov
or
jnp
test
fnsave
sbb
xchg
pop
shl
and
(bad)
cld
aam
xchg
adc
movs
gs
iret
iret
jns
cld
mov
jne
out
dec
leave
add
adc
aad
out
enter
and
cvtpi2ps
add
jmp
je
out
xchg
repz
pop
scas
push
pop
jbe
je
popf
cli
mov
cli
inc
pusha
push
sbb
and
sbb
mov
adc
dec
inc
fst
imul
xor
mov
out
jg
int
adc
dec
push
or
and
int3
icebp
jl
add
std
std
or
pop
retf
push
mov
lahf
xor
movs
sbb
inc
mov
es
jo
adc
in
inc
ja
daa
aas
mov
push
inc
sbb
inc
adc
xchg
sub
fisubr
push
repz
mov
dec
xchg
push
pusha
cmc
es
xchg
cmc
xchg
jb
mov
call
nop
jae
xchg
das
add
nop
cbw
and
std
cli
clc
inc
stos
aad
and
mov
sub
push
mov
jbe
lds
ret
jle
push
les
sub
(bad)
and
sub
mov
push
mov
dec
xor
mov
xchg
nop
and
cmp
or
mov
rcr
pop
sbb
jp
repnz
push
push
loop
setno
lahf
add
inc
mov
jb
pop
idiv
push
mov
mov
gs
aam
js
and
mov
xchg
jp
xor
in
jns
xchg
in
pop
jnp
push
ret
inc
and
adc
vpunpckhdq
dec
out
sub
push
push
les
call
loope
fsin
std
xchg
aam
shl
xor
cdq
cmps
into
(bad)
sbb
pop
pop
test
aad
fwait
cdq
in
add
adc
aas
fist
lods
cmp
pop
ds
mov
mov
jno
dec
jmp
xor
mov
xchg
test
or
in
hlt
adc
jg
lock
push
xor
sbb
cmp
loop
outs
enter
retf
js
add
add
les
jle
add
scas
sbb
or
and
retf
lds
jo
jnp
fisubr
scas
mov
xchg
add
inc
pop
jle
ret
int3
push
outs
adc
and
mov
loopne
cmp
cmc
(bad)
nop
call
cmps
inc
sbb
push
mov
in
and
arpl
jl
mov
popf
imul
push
lds
scas
sub
hlt
mov
mov
enter
ss
xor
dec
push
push
(bad)
es
in
lds
sbb
jnp
or
push
adc
addr16
sbb
sub
and
mov
loop
test
pop
rcl
xchg
cmps
xlat
pop
mov
or
inc
jge
sub
mov
(bad)
loopne
rcl
jmp
or
leave
push
push
sbb
xor
rcl
test
push
mov
jmp
sbb
das
pop
mov
rcl
mov
jnp
jb
loopne
sbb
ins
cmp
dec
mov
(bad)
movs
push
shr
cmp
out
cld
jo
push
xchg
daa
fisttp
bnd
jnp
sub
dec
and
rcr
mov
jecxz
in
cld
cli
cmp
or
jl
or
arpl
bound
sub
mov
pop
test
pop
clc
push
xchg
test
pop
pushf
push
cmp
imul
jmp
leave
sub
sti
sub
imul
(bad)
push
mov
test
xchg
mov
jle
pop
sub
pop
mov
xchg
sbb
aad
in
test
js
add
lods
mov
fdivr
ss
push
inc
and
pop
or
lea
enter
xchg
xor
(bad)
mov
dec
js
ds
arpl
or
test
fwait
add
ds
out
iret
xchg
test
(bad)
xchg
and
push
or
and
pop
out
shr
movs
jle
cli
fdivr
ja
sbb
or
scas
xor
xchg
pop
scas
adc
cdq
jae
sub
lods
adc
and
in
mov
mov
rcr
jmp
inc
push
cmp
jmp
jmp
in
mov
xchg
stos
or
jp
pop
cmp
hlt
loope
jnp
add
xchg
lds
icebp
fisttp
push
in
inc
mov
pop
fld
or
in
je
fnsave
rcr
fmul
gs
cmp
shl
sbb
cmp
cmps
data16
repnz
cdq
out
ret
(bad)
movs
call
inc
xchg
sbb
push
and
cmp
push
sub
jo
outs
sub
adc
mov
scas
cmp
les
xor
xchg
arpl
int
mov
fwait
xchg
mov
shl
mov
pop
adc
xchg
and
lds
sub
imul
fld
xchg
dec
shl
std
hlt
add
cmp
stos
pusha
and
mov
test
push
fnstenv
mov
inc
dec
push
add
mov
in
mov
shl
ins
in
out
mov
cmp
in
push
scas
xchg
dec
pop
mov
movs
or
jge
fadd
or
inc
js
in
into
pusha
imul
jecxz
jl
push
adc
(bad)
(bad)
ins
adc
pop
out
jl
rol
sbb
xchg
jmp
inc
cmp
dec
ss
pushf
mov
or
pop
pop
shl
mov
pop
push
xor
fmul
lds
xchg
aaa
add
sbb
mov
out
and
jmp
out
cmps
cmp
hlt
mov
sti
mov
mov
stos
pop
inc
mov
es
sbb
lods
cld
sub
jns
cld
mov
loop
inc
push
scas
adc
jg
pop
pop
mov
and
xlat
jp
sub
pushf
jbe
dec
rcl
xor
stc
sub
jae
or
shl
outs
jb
pop
(bad)
mov
mov
pop
jl
dec
dec
dec
pushf
dec
push
js
aad
dec
daa
pop
arpl
push
adc
xor
hlt
lods
int
mov
dec
inc
pusha
mov
jmp
jg
push
and
imul
cdq
xor
imul
xor
div
pusha
sub
pusha
(bad)
sahf
pop
jl
iret
mov
jge
ret
repnz
test
aaa
mov
push
push
inc
mul
repnz
icebp
stc
cmp
repnz
jnp
xchg
xor
and
mov
pop
sbb
push
jmp
mov
and
jecxz
mov
ja
sbb
arpl
dec
cwde
mov
pop
paddsw
adc
jo
les
retf
sbb
aad
xor
ror
pusha
jmp
mov
pop
jns
jmp
inc
stos
jle
aas
jg
fdivr
ret
sbb
xor
pop
(bad)
es
jmp
ret
aaa
aas
fiadd
in
ja
fisub
fimul
jmp
pop
jo
lods
je
push
fbld
mov
mov
add
mov
push
jns
jbe
(bad)
sub
push
(bad)
ds
mov
stos
arpl
dec
rcr
pop
test
sbb
mov
sub
(bad)
ss
sub
jnp
pusha
mov
stc
jp
push
ins
lods
jp
mov
arpl
mov
push
jp
in
sub
sbb
mov
scas
adc
xor
ror
or
cs
xor
(bad)
aad
xchg
xor
in
js
rcr
add
mov
(bad)
or
(bad)
xor
fdivr
add
sub
sub
in
push
mov
add
popa
add
imul
retf
dec
iret
pop
das
xor
dec
stc
dec
add
jne
fnsave
clc
ja
(bad)
mul
dec
lods
(bad)
sbb
push
or
mov
cmp
aas
or
(bad)
mov
mov
sub
push
mov
movs
loope
out
addr16
push
add
jge
push
out
sbb
lods
in
repz
sbb
(bad)
push
addr16
jg
cwde
in
cmp
iret
or
test
dec
daa
sbb
jae
adc
fstp
imul
imul
sbb
aam
jns
sti
sub
call
jne
xchg
fdivr
bound
and
mov
jo
pushf
and
and
lea
mov
xor
xchg
fs
mov
adc
(bad)
and
test
call
cmps
mov
dec
fiadd
cs
mov
push
and
cmp
mov
enter
sub
lahf
xlat
popf
sbb
add
mov
mov
bound
mov
inc
into
mov
cmp
cmp
pop
test
mov
mov
shr
lgs
stc
xor
push
xchg
clc
dec
repnz
outs
xchg
xchg
cwde
mov
ret
scas
adc
add
fsub
pop
xor
sub
iret
push
push
mov
(bad)
mov
mov
xor
in
jmp
stos
xchg
aas
shl
das
outs
fstp
dec
lods
or
push
in
xor
inc
or
std
pop
mov
es
jbe
lahf
fwait
jmp
add
cmp
cmps
jg
lds
sub
mov
mov
clc
scas
inc
adc
ret
xchg
cmc
sbb
std
in
jl
mov
add
add
inc
and
ret
mov
sbb
mov
mov
cmp
push
lahf
pop
inc
inc
push
ror
fiadd
les
ror
jns
(bad)
inc
jnp
xchg
jb
(bad)
loope
and
stos
inc
and
loop
js
sub
xchg
movs
push
pop
fst
repz
enter
pop
int
mov
test
inc
add
jmp
xchg
addr16
jnp
jbe
lods
pop
retf
je
dec
sbb
stc
jge
(bad)
movs
adc
pop
cli
pop
jns
mov
aas
pop
lods
enter
jo
movs
xchg
jmp
pushf
shr
neg
and
leave
outs
cmp
xchg
dec
ret
jp
sub
pop
leavew
clc
sbb
ror
mov
push
arpl
stos
jo
jb
dec
mov
cmp
ja
mov
jbe
jns
adc
or
xchg
jg
xchg
movs
aam
shl
hlt
mov
push
or
lock
push
push
out
fdivr
loop
scas
dec
outs
aad
pop
ins
push
jle
lods
scas
mov
mov
cwde
inc
xor
into
pop
daa
(bad)
fmul
xchg
std
ret
xor
pxor
cli
int
jmp
xchg
pushf
call
scas
cmp
or
scas
(bad)
test
icebp
jnp
ret
dec
mov
inc
test
hlt
lock
ror
aaa
adc
inc
adc
cmp
pop
mov
push
leave
(bad)
test
mov
push
call
xchg
pop
pop
fadd
dec
(bad)
or
nop
push
add
jb
push
ins
fisubr
or
sbb
inc
out
cmp
jnp
popf
add
dec
xchg
jle
rcr
cmp
(bad)
and
aas
addr16
retf
push
(bad)
xchg
push
loop
and
fst
sub
mov
sub
repz
outs
xor
xchg
mov
sbb
data16
in
cmp
aam
mov
push
xor
and
aaa
mov
and
ds
test
jle
xor
(bad)
jne
enter
adc
retf
push
sbb
shl
mov
or
in
jns
inc
add
(bad)
xor
inc
ins
cwde
mov
xor
sti
push
or
cmp
dec
nop
xlat
cmc
pop
(bad)
imul
inc
enter
je
pop
mov
sub
sti
aas
inc
dec
add
dec
mov
test
mov
jg
leave
sbb
ja
mov
retf
adc
shr
push
jge
mov
repz
out
in
mov
or
xor
cmp
fsubp
sbb
push
loopne
mov
fs
ror
jmp
mov
outs
adc
jb
out
je
daa
jg
dec
cmps
mov
or
(bad)
or
mov
retf
inc
outs
xor
mov
mov
ret
dec
push
inc
test
fimul
jnp
push
dec
push
adc
or
ss
xlat
add
fwait
or
pop
inc
(bad)
xchg
test
add
lds
ins
mov
add
cli
pop
pusha
in
xor
push
hlt
es
hlt
icebp
out
dec
arpl
fs
and
mov
inc
jbe
and
fstp
aas
push
cmp
rol
aas
es
sub
cs
push
push
push
pop
xchg
pop
dec
int3
inc
sub
movs
fwait
push
std
jae
ss
aad
(bad)
sti
in
sub
push
jle
ja
pop
out
cli
popf
xchg
cmps
loop
iret
and
jbe
and
les
in
mov
popf
fdivr
adc
xchg
mov
push
adc
fadd
jmp
rcl
stos
movs
in
xchg
add
dec
or
jmp
call
push
not
xchg
jmp
sti
lea
mov
dec
je
and
push
or
ficomp
cli
sar
sub
fdiv
cld
push
push
mov
sbb
xor
cmps
movs
inc
mov
xor
iret
popa
xchg
pop
iret
hlt
(bad)
idiv
sahf
shl
fild
pop
pop
iret
mov
mov
mov
mov
aaa
mov
arpl
div
fnstsw
out
inc
or
and
sbb
sub
mov
sub
arpl
ret
inc
dec
jecxz
(bad)
xlat
xchg
inc
sub
inc
inc
dec
mov
pop
mov
add
js
pop
jae
movs
out
js
out
daa
pop
dec
jp
lods
arpl
mov
sbb
mov
push
fs
and
int3
hlt
xchg
out
fnstsw
inc
push
push
shl
push
arpl
mov
nop
movs
fwait
mov
push
add
sbb
int3
popa
div
push
adc
jb
dec
push
push
jmp
inc
add
out
pop
fadd
int3
and
test
xor
push
daa
xchg
adc
push
enter
gs
jge
or
imul
in
stc
stos
and
and
jecxz
jno
(bad)
jne
push
cmp
fist
mov
jle
fild
push
inc
mov
or
inc
shl
jae
shr
push
cmp
shr
or
in
ja
push
lods
fnstcw
imul
inc
test
push
iret
in
cs
cdq
aam
scas
mov
sbb
icebp
movs
sub
mov
and
div
ins
je
cmp
cld
cdq
mov
xchg
and
int
movs
fcomp
in
fdivr
and
jp
stos
sahf
inc
mov
xchg
js
inc
inc
cmp
fild
enter
inc
loopne
and
mov
mov
rol
xlat
adc
add
(bad)
cmp
loop
push
es
retf
in
outs
jecxz
jnp
jmp
ins
push
and
outs
mov
cli
mov
retf
stc
test
fisttp
xor
push
cmps
push
and
xor
popf
jno
add
fninit
push
push
or
cmp
xchg
xor
push
loop
mov
enter
cdq
rcr
in
popa
push
mov
push
sub
jmp
in
cmp
sub
shr
cli
je
jb
ja
sahf
pop
xor
rcl
mov
cmp
outs
div
push
fstp
add
xchg
xchg
(bad)
pop
aam
cmps
aad
imul
js
push
push
mov
push
jl
loope
fnstsw
fwait
not
call
aam
jo
stc
inc
ret
mov
mov
sbb
adc
pop
nop
loopne
xchg
push
push
in
call
cdq
mov
or
imul
popf
mov
psubsw
hlt
mov
enter
popf
lahf
pop
sbb
fild
mov
mov
ds
mov
popa
mov
adc
outs
sbb
test
div
call
repz
in
cmp
hlt
mov
push
loopne
xor
cmp
push
aas
add
inc
add
or
dec
pop
rcl
pop
pop
into
or
and
or
(bad)
xchg
cdq
out
mov
fs
dec
retf
pop
outs
out
xor
(bad)
cmp
cli
push
test
or
fcomip
dec
in
bound
mov
enter
stos
loop
jae
xchg
push
cld
int
xchg
lea
aad
or
lahf
aaa
push
dec
mov
vphaddwd
repz
aas
pop
sbb
in
xor
jae
cld
out
std
mov
ins
mov
ins
jge
out
out
in
pop
pop
jmp
pop
call
sbb
inc
sbb
rcr
jp
movs
(bad)
cmp
in
adc
mov
mov
sbb
popa
loope
loopne
sbb
fistp
adc
repz
rcr
aam
ja
xor
and
in
pushf
lahf
out
mov
cmp
mov
or
gs
fwait
dec
xor
je
mov
add
rcl
cs
jno
push
loopne
pop
(bad)
ror
pop
jnp
cmp
adc
lock
movs
retf
(bad)
push
sbb
fimul
mov
mov
adc
xchg
sbb
xor
add
rcr
movs
hlt
xchg
sahf
push
dec
add
lods
scas
jmp
jle
lods
sbb
fcomip
dec
(bad)
out
push
outs
ins
cmp
and
jmp
mov
inc
adc
out
jg
mov
xchg
movs
in
add
cmp
sub
mov
sti
sub
pop
add
(bad)
mov
dec
sbb
pushf
arpl
push
xchg
out
gs
sub
jbe
mov
pop
add
lock
mov
mov
fstp
fwait
out
es
add
xchg
pop
mov
sbb
pop
std
test
push
pop
and
xchg
mov
push
xor
jl
pop
call
sub
fidiv
popa
jle
enter
push
in
or
gs
rcl
mov
out
iret
and
jno
dec
push
out
adc
mov
fucomip
repnz
rol
mov
mov
fistp
les
pop
stc
dec
push
push
mov
mov
ds
xor
mov
sar
imul
std
and
sbb
aas
sub
ficomp
sbb
dec
pop
rcr
je
out
(bad)
aam
xlat
pop
clc
push
pop
mov
pusha
pop
sbb
pop
xor
in
mov
or
in
xchg
mov
lock
jb
ror
leave
ror
cmp
bound
ja
sub
jecxz
pop
dec
mov
or
(bad)
adc
push
sahf
fidivr
int3
adc
add
xlat
add
lods
cmp
loope
or
stos
movs
push
in
test
icebp
mov
rcl
mov
sub
into
lods
xor
mov
xor
sbb
mov
pushf
or
sbb
xchg
pop
pop
push
mov
int3
movs
ins
test
rep
jae
mov
es
dec
dec
retf
cs
inc
jecxz
xchg
add
aad
imul
xlat
jle
std
in
cmps
sbb
sar
cmp
sub
leave
test
sub
ja
fistp
stos
jge
arpl
mov
fstp
sub
fisttp
adc
adc
push
jbe
or
xchg
imul
or
inc
mov
add
pop
push
add
mov
rcr
mov
cmp
in
imul
jo
push
jge
push
adc
iret
jge
fwait
or
iret
fs
rcr
push
jecxz
nop
pop
xor
jb
leave
bound
imul
push
icebp
test
cmp
mov
mov
mov
outs
add
mov
loope
add
push
in
popf
mov
cmps
push
push
repz
addr16
xchg
je
mov
int3
inc
xchg
mov
cmp
and
mov
in
or
(bad)
adc
jle
loopne
jge
or
dec
cmps
mov
sbb
(bad)
dec
inc
and
pop
into
mov
adc
adc
adc
out
mov
and
icebp
enter
sbb
call
(bad)
jecxz
lock
movs
push
into
div
pop
cmp
fcmovbe
pop
cmc
or
jo
imul
and
jle
sub
enter
jmp
imul
jno
repnz
jmp
out
outs
mov
pop
pop
je
bound
and
jp
or
lahf
pop
es
push
popf
sbb
sub
sbb
fs
js
adc
test
or
(bad)
push
popf
add
ins
sub
out
sbb
in
(bad)
xchg
mov
xchg
cmp
fsub
ins
dec
xchg
inc
mov
fimul
or
inc
sub
xchg
pop
cdq
jmp
push
or
add
jmp
xor
and
pop
das
sbb
lea
pop
push
(bad)
add
int3
aaa
sub
je
stos
add
push
xor
sub
in
xchg
arpl
call
fadd
outs
mov
(bad)
jmp
inc
jp
cwde
inc
cli
fdiv
(bad)
iret
xchg
nop
sub
out
jo
and
aaa
inc
mov
mov
mov
neg
jmp
lods
pusha
jecxz
enter
jmp
and
cmps
push
xor
bound
adc
xor
xchg
lods
xor
mov
out
cmp
loopne
leave
stc
call
jmp
das
mov
push
gs
rol
into
cmp
cmp
int3
push
std
icebp
push
jns
or
ds
lahf
(bad)
cmp
mov
fs
and
mov
lahf
lods
sub
pusha
mov
paddb
lds
enter
mov
mov
xor
xchg
pop
iret
mov
adc
(bad)
dec
mov
xor
inc
aaa
or
retf
lds
dec
nop
das
mov
push
pushf
mov
aas
xchg
mov
jb
jecxz
inc
pop
add
mov
es
leave
dec
adc
enter
stos
xchg
hlt
cli
ror
inc
in
jle
mov
leave
popa
inc
mov
and
push
cmp
add
(bad)
sub
mov
dec
aaa
add
fild
sbb
mov
sahf
std
hlt
stos
ins
movs
inc
lea
popa
stos
mov
cmps
lds
cmps
mov
cmc
enter
movs
ja
shl
test
jle
sub
adc
mov
inc
out
dec
ds
mov
xor
shl
xor
pop
adc
mov
neg
ss
push
daa
daa
stos
add
in
and
retf
and
in
inc
sbb
cmps
mov
arpl
aam
push
add
fst
inc
lahf
lods
clc
jnp
fcmovu
xchg
shl
add
inc
nop
mov
push
stc
add
adc
jb
out
pop
jmp
pop
adc
(bad)
pop
dec
fwait
dec
fucomip
mov
jne
dec
mov
stos
sbb
out
jno
and
jmp
inc
pop
jp
lods
loop
fimul
adc
aas
and
jbe
adc
cmp
xchg
mov
les
jle
and
or
xchg
or
mov
and
fsubr
sbb
(bad)
out
les
push
inc
dec
lea
or
fwait
mov
cmp
mov
mov
mov
jnp
aad
cmp
xchg
xchg
pop
xchg
mov
ficom
enter
mov
mov
push
mov
xchg
push
add
ja
xor
or
popa
cmp
ins
sbb
add
xlat
sti
mov
cmp
mov
lods
xor
xchg
aam
jo
xor
out
cmp
mov
xlat
push
mov
rol
xchg
inc
popf
(bad)
jg
push
xchg
ret
pop
retf
repnz
(bad)
mul
jnp
mov
xchg
xor
pop
pop
inc
push
fwait
popa
call
ja
push
rol
adc
adc
mov
mov
pop
pop
add
iret
adc
scas
mov
pop
adc
popa
nop
das
xlat
movs
and
and
jg
retf
fdivp
add
xchg
rol
movs
enter
test
call
aaa
repnz
in
cli
(bad)
inc
mov
or
aaa
lock
clc
cmps
fsubr
adc
sub
fnstsw
ins
or
pop
cld
mov
push
xlat
(bad)
test
loop
add
out
sar
ret
xor
dec
push
sbb
pop
mov
pop
xchg
add
pop
ret
icebp
nop
mov
ss
ja
idiv
and
xor
int3
(bad)
int3
rcr
(bad)
xor
adc
jp
push
mov
pop
inc
jb
push
mov
xchg
ins
hlt
dec
addr16
cmovne
sbb
or
shl
cmps
push
js
call
dec
mov
adc
mov
inc
retf
mov
int3
dec
adc
push
jnp
jnp
add
dec
pop
stc
clc
cmps
xchg
sar
mov
or
mov
adc
push
fst
mov
sqrtps
out
jmp
sub
popa
(bad)
lahf
fidivr
out
jl
cmps
and
mov
test
mov
loopne
(bad)
movs
addr16
gs
and
adc
mov
shr
xchg
in
xchg
inc
cmp
sub
xchg
jecxz
lods
popf
test
popf
ins
in
sti
bound
clc
and
inc
adc
inc
sahf
inc
mov
push
ret
xor
sub
arpl
rcr
mov
jbe
add
dec
outs
stc
adc
lahf
sub
or
xor
pop
and
popa
div
test
popa
adc
pop
(bad)
out
xchg
test
ror
and
retf
out
sbb
sti
mov
or
pop
pop
leave
ficomp
jns
test
jno
or
aam
fst
aas
aam
int3
mov
test
mov
jo
push
iret
xlat
and
jl
sbb
add
cmps
outs
mov
adc
call
adc
pop
push
or
repz
movs
inc
pop
jl
mov
scas
pop
pop
add
inc
dec
sub
les
xchg
adc
mov
inc
daa
test
push
jmp
sub
jmp
adc
mov
popa
cmp
dec
popf
pop
add
xor
xchg
(bad)
les
retf
sbb
add
inc
cmp
mov
pusha
jnp
cmp
add
jb
mov
ret
mov
cmp
bswap
xor
dec
cmps
xor
xchg
out
jge
fimul
es
mov
pop
ret
movs
mov
dec
jge
out
push
leave
xchg
dec
enter
stc
aas
fbstp
and
stc
mov
dec
fsubr
(bad)
outs
lea
mov
mov
nop
inc
jecxz
lock
sub
dec
or
dec
loop
stos
add
movs
dec
pop
mov
jbe
xchg
and
out
shr
mov
xchg
mov
pop
xchg
jno
repz
arpl
sti
push
(bad)
in
clc
fidivr
hlt
add
ss
adc
inc
mov
ja
cmp
in
test
xor
pop
fsubr
xchg
std
test
arpl
push
in
fcom
cwde
pushf
inc
fadd
push
outs
sub
popa
sbb
sub
adc
pop
mov
push
push
sbb
popa
pop
fld
inc
call
fidiv
in
aam
sbb
jmp
push
pop
mov
inc
sub
or
dec
mov
rcr
or
inc
jge
out
adc
mov
(bad)
mov
std
rol
daa
push
sub
jb
mov
mov
shl
les
idiv
mov
daa
and
and
je
mov
inc
mov
das
mov
cmp
sbb
mov
icebp
mov
dec
xor
and
popf
sub
jl
mov
jo
ins
cdq
adc
call
jl
not
cwde
out
pop
or
pushf
popf
xor
cmp
push
push
cld
xor
xchg
push
cwde
push
mov
cwde
mov
pushf
(bad)
not
or
hlt
cdq
ins
inc
out
shl
iret
jae
xchg
call
ds
enter
fiadd
shr
sti
pop
cmp
inc
adc
push
sar
sbb
out
mov
sbb
mov
mov
xlat
xchg
rol
les
pop
jns
jno
mov
add
jno
ror
push
test
ds
push
cmp
add
call
repz
test
jle
outs
fimul
ret
mov
and
arpl
jecxz
pop
dec
aaa
loope
mov
or
scas
call
dec
js
cmp
inc
xchg
jl
and
push
ret
mov
in
iret
dec
test
xchg
cmp
sub
js
mov
hlt
fs
adc
mov
(bad)
clc
pop
ins
sub
mov
pcmpgtw
in
xor
movs
cmps
gs
xchg
repnz
test
dec
arpl
xor
mov
loope
mov
inc
jl
sub
pop
arpl
ficomp
inc
sub
inc
stc
push
jmp
add
mov
lahf
loopne
call
test
lock
lock
mov
adc
out
sub
mov
push
push
aad
or
xchg
popa
mov
mov
sub
xor
xor
std
jo
push
sub
div
std
(bad)
push
fisttp
dec
std
dec
fmul
inc
xor
xchg
jg
imul
xchg
call
jae
pop
arpl
test
fdiv
dec
or
popa
mov
ja
in
fimul
dec
stos
xor
mov
movs
xchg
mov
data16
stos
aad
popf
mov
mov
pop
daa
inc
sti
mov
and
sub
test
sub
out
loopne
inc
adc
mov
lods
ins
(bad)
in
pop
jmp
jbe
mov
and
adc
and
push
mov
adc
sub
(bad)
call
jnp
test
(bad)
mov
mov
clc
xor
jmp
(bad)
jae
aas
ins
mov
pusha
hlt
pusha
mov
shl
xor
sar
mov
mov
out
int
gs
shl
cmps
rcr
mov
(bad)
fsub
mov
sti
neg
cmps
aad
mov
pushf
imul
data16
jmp
retf
inc
xor
(bad)
push
adc
adc
push
cmps
or
popf
pop
fmul
stos
and
(bad)
inc
mov
cdq
and
jmp
sub
(bad)
shr
inc
jmp
push
sbb
sbb
mov
out
sahf
and
sub
adc
cmp
jb
dec
push
inc
adc
pop
leave
mov
pop
arpl
mov
inc
sti
sti
pop
popf
lahf
cdq
xchg
mov
repz
shr
mov
push
repz
lods
ins
sbb
daa
aad
mov
lock
jmp
ret
popa
sub
inc
xor
bswap
xlat
adc
in
cmp
rcl
push
pop
test
adc
rcl
mov
cmp
xor
arpl
clc
dec
sbb
sub
cmp
stos
ror
and
sub
cmp
in
dec
je
data16
fld
push
gs
xchg
mov
ret
shl
pop
std
mov
imul
sub
aas
xor
mov
leave
jecxz
cmc
push
call
loopne
scas
or
adc
or
add
sub
(bad)
cmp
shl
psadbw
sahf
and
and
pop
jl
jbe
and
jmp
cmc
stc
addr16
outs
adc
push
xor
scas
out
xchg
mov
dec
popf
retf
mov
out
or
(bad)
in
lahf
cwde
hlt
xor
xchg
lds
shl
inc
jae
mov
sub
pop
xchg
or
pop
(bad)
out
fstp
bound
icebp
nop
xchg
popf
push
(bad)
or
clc
sub
push
sbb
mov
rol
aaa
inc
fisub
ins
jae
in
and
pop
or
test
jo
inc
pop
add
xchg
clc
mov
mov
sahf
pusha
push
je
ror
xchg
adc
xor
xor
(bad)
retf
hlt
push
stos
mov
cli
add
(bad)
jae
push
lods
sub
or
clc
dec
cmp
jmp
pop
inc
das
or
mov
xlat
test
fwait
mov
sbb
aam
sbb
daa
xchg
das
push
loopne
outs
pop
movs
in
jbe
push
out
push
or
stos
pop
push
das
rol
mov
mov
outs
jmp
mov
mov
out
pop
dec
jle
div
xlat
(bad)
loop
mov
sbb
cld
sbb
outs
(bad)
and
inc
push
sub
sbb
nop
sbb
js
pop
or
fs
jp
mov
xchg
push
(bad)
shl
lea
test
imul
cmp
hlt
retf
mov
pop
out
xor
jg
les
xor
test
push
pop
pop
push
(bad)
or
push
mov
lds
test
or
sub
push
jg
in
xchg
inc
int
mov
push
ret
xchg
enter
lahf
clc
mul
shl
pop
xor
sbb
push
inc
(bad)
cmc
stos
out
dec
jno
jge
add
fist
cwde
aam
inc
pushf
(bad)
lods
lea
ds
pusha
(bad)
loopne
scas
gs
loope
retf
xor
scas
fnstenv
stos
push
jge
or
fimul
rol
nop
ret
fldcw
xor
mov
mov
ja
mov
pop
call
mov
aad
sbb
mov
aam
clc
add
dec
and
or
dec
mov
sub
nop
jle
icebp
js
imul
mov
stc
and
jmp
gs
mov
clc
or
jno
addr16
call
push
and
lahf
js
aaa
pop
push
int
push
inc
in
shl
mov
xchg
pop
scas
and
pop
out
dec
fcomp
or
inc
retf
pop
or
cmps
ins
pop
pop
clc
push
sub
test
sahf
popa
jmp
out
outs
shl
mov
and
xor
shl
ror
cwde
jg
stc
ins
int3
add
fs
cmp
dec
in
pop
pushf
cmp
sbb
mov
mov
aas
cwde
push
and
test
mov
pop
mov
inc
scas
das
push
and
jl
cs
icebp
je
or
or
(bad)
mov
and
adc
int3
jmp
dec
ds
je
xchg
push
cmp
test
push
add
or
nop
dec
aaa
pushf
test
mov
add
test
pop
mov
enter
imul
jno
pop
fild
movs
adc
popa
jle
daa
cmp
pop
(bad)
cld
and
and
inc
ss
fwait
xor
ds
out
mov
dec
or
xor
mov
xchg
and
push
ret
mov
push
mov
outs
or
ds
ins
xlat
dec
pop
dec
push
ss
xchg
push
repnz
inc
cmc
mov
mov
xchg
sar
cmps
mov
or
sbb
mov
add
push
leave
lahf
xchg
icebp
push
mov
out
fbstp
pusha
inc
and
out
and
stc
ficom
arpl
enter
ja
call
arpl
add
xor
and
lahf
aas
repz
xor
addr16
push
and
fdiv
in
inc
call
mov
nop
(bad)
jno
pusha
sti
jmp
jle
out
pop
lock
push
lods
pop
cld
and
push
pop
push
fld
(bad)
dec
jns
out
or
jl
lock
mov
sub
aam
push
xchg
cmps
mov
jns
sbb
ins
add
into
hlt
gs
bound
ja
and
(bad)
mov
dec
adc
test
lods
popf
pop
mov
stos
xchg
cmp
repnz
jmp
ins
outs
daa
push
je
hlt
ror
sti
out
ret
mov
pop
int
jbe
inc
add
xchg
call
mov
xchg
pop
xor
cmp
mov
arpl
pop
mov
out
cmp
pop
jo
loop
pusha
loopne
hlt
fidivr
push
adc
mov
sbb
hlt
mov
sub
call
inc
sub
xchg
getsec
pop
mov
push
rol
movs
arpl
inc
sbb
mov
lock
cmp
out
ja
push
push
mov
aad
fnsave
scas
fcom
mov
cmp
aam
mov
xor
test
pop
jne
and
jp
shl
sti
cmp
ja
mov
retf
lds
int
scas
add
fisub
xchg
mov
xchg
jae
inc
inc
fisub
inc
repz
rol
repnz
jno
pop
pop
fimul
pop
jl
(bad)
fidivr
in
add
dec
in
xor
jg
hlt
and
ret
scas
inc
jmp
xor
scas
push
fsubrp
enter
or
scas
scas
and
lock
cmp
daa
call
mov
add
mov
and
sub
cmp
scas
pop
mov
mov
and
pop
jle
add
add
pop
(bad)
mov
mov
cmps
pop
mov
(bad)
fnsave
and
rol
jbe
enter
cmps
aad
retf
pop
xchg
xchg
in
jmp
jo
jg
ss
inc
push
ret
aaa
in
pop
leave
int
mov
inc
test
movs
or
mov
sub
or
pop
(bad)
mov
sub
in
push
(bad)
add
xchg
ins
bound
jb
mov
loope
xor
mov
pusha
leave
loopne
or
and
mov
ud0
mov
cmp
(bad)
sbb
loop
sbb
xor
fiadd
mov
popf
sbb
test
add
cmps
cwde
sbb
ret
clc
jno
push
rcl
mov
aam
out
ins
retf
in
fwait
stos
inc
ins
adc
mov
jne
push
popa
xor
mov
adc
mov
inc
js
std
sbb
inc
outs
xchg
cmps
addr16
pop
lock
enter
mov
inc
stos
jnp
ins
push
shl
retf
inc
xchg
and
push
pop
pop
mov
(bad)
push
or
stos
pop
les
mov
add
dec
iret
pop
mov
jns
inc
xchg
repz
stos
mov
mov
mov
or
mov
test
dec
sub
inc
cmp
paddb
push
ins
inc
inc
mov
mov
sbb
or
sbb
cmp
xchg
jns
xor
aaa
fld
and
retf
sub
es
sar
fcomp
outs
push
es
jbe
cmps
inc
into
mul
sub
dec
les
pop
cmc
xor
mov
adc
adc
adc
in
pop
xchg
sbb
adc
add
and
cwde
mov
xor
push
data16
imul
nop
adc
stos
aam
movs
or
xchg
sbb
and
ins
fcom
fisttp
or
and
int3
or
pop
sti
pop
bound
shr
loope
fwait
rcl
cli
and
das
mov
ja
cmps
popf
xchg
xlat
or
push
mov
mov
and
rol
je
xchg
mov
fmul
jmp
xchg
sub
dec
add
pop
cmp
push
mov
ds
pop
popf
lea
(bad)
mov
stos
(bad)
or
mov
je
sbb
push
fnstsw
xchg
repnz
icebp
or
data16
mov
mov
mov
sub
sub
pop
mov
push
cwde
in
mov
es
mov
push
sub
int
push
sub
cmp
push
cmp
mov
popf
mov
(bad)
(bad)
jmp
cmps
lods
or
fs
(bad)
pop
cmc
xor
mov
aam
or
cmp
pop
or
cmc
neg
sub
sahf
nop
inc
mov
(bad)
mov
adc
pop
or
dec
in
sub
adc
xchg
mov
sub
lea
dec
cmp
xor
mov
jecxz
sub
je
pop
sub
xor
jo
and
fisttp
cdq
push
cmp
ins
addr16
pusha
(bad)
das
and
mov
add
loopne
or
(bad)
mov
jl
and
inc
sbb
imul
and
retf
aam
daa
pop
sbb
ret
repnz
aad
out
repnz
jmp
pop
xchg
(bad)
out
adc
pop
jns
add
outs
lods
xchg
int3
cdq
xor
js
or
cmp
lahf
in
in
lock
retf
mov
sahf
pop
out
jns
push
lahf
inc
xchg
fild
mov
lods
addr16
(bad)
inc
scas
cli
mov
push
arpl
jmp
std
mov
imul
add
sub
test
fwait
dec
movs
cmp
mov
xlat
jb
cdq
test
jp
and
fbld
lods
inc
push
int3
popf
test
push
and
pop
xchg
mov
and
shr
mov
mov
sar
lods
cmp
call
movs
inc
cmp
pop
bound
fidiv
push
sahf
jmp
xchg
inc
es
stc
and
test
in
sub
addr16
jne
and
repnz
push
xchg
inc
rol
outs
std
lods
push
ds
mov
retf
or
loope
repz
add
xor
dec
push
xor
mov
or
sub
repz
ja
dec
sti
mov
mov
sbb
loop
mov
shl
fwait
sub
mov
inc
cmp
mov
or
jle
movs
(bad)
adc
sub
xchg
push
fmul
xchg
(bad)
and
pop
adc
xlat
xchg
or
rol
mov
test
push
mov
sbb
xor
xor
jl
push
push
es
lods
mov
movs
xor
cmp
or
lea
inc
add
test
and
and
jecxz
sub
cmp
in
repz
adc
sub
dec
(bad)
ficom
out
sbb
movhps
adc
cmp
shl
outs
sub
adc
mov
add
push
dec
jae
sti
xchg
mov
jge
dec
adc
outs
popa
(bad)
aam
call
or
ds
lods
xchg
inc
xor
fldenv
cmps
push
in
add
aam
dec
sub
test
xchg
mov
push
pop
mov
push
adc
dec
mov
adc
div
inc
ds
data16
xchg
arpl
xor
sti
or
jp
scas
mov
add
aad
dec
cdq
mov
div
fmul
nop
adc
xor
mov
test
imul
int
add
jle
sub
adc
cmp
sub
jb
or
mov
and
adc
ds
repnz
aas
inc
mov
pop
sub
ss
adc
repnz
xor
add
call
cmp
sbb
push
push
inc
mov
out
jne
inc
retf
in
cmp
mov
sahf
movs
imul
jae
jecxz
add
add
push
mov
lods
aaa
add
cmp
pop
push
jg
iret
ret
arpl
in
pop
hlt
adc
or
pop
and
xor
add
repnz
jnp
inc
das
inc
in
enter
jb
ds
test
stos
test
pushf
and
xor
ficom
push
pop
in
movs
mov
js
(bad)
mov
inc
movs
add
(bad)
mov
enter
xchg
ds
leave
cdq
out
xchg
lods
push
push
xor
fmul
sar
dec
add
mov
mov
pop
or
jne
mov
xor
sbb
or
shl
xor
pop
mov
fs
jle
pop
push
jo
adc
(bad)
mov
sub
push
xor
(bad)
xor
loop
and
js
mov
fldenv
adc
or
add
jo
stos
dec
pop
pop
sub
shl
jo
pop
imul
mov
lods
dec
(bad)
fsubr
push
pop
dec
mov
cmp
xor
shl
sbb
inc
ret
mov
repnz
into
sbb
and
iret
in
sbb
or
in
std
mov
loop
cmps
xor
aad
add
push
xchg
and
in
ja
jmp
mov
mov
sub
xor
jle
bound
mov
lods
mov
jp
mov
pop
push
dec
sub
mov
sub
arpl
ss
lods
arpl
pop
cmp
sub
(bad)
mov
stc
call
cmp
push
or
and
lea
inc
test
cwde
sbb
cmp
fdivr
xor
test
and
xchg
test
xor
pop
dec
addr16
add
addr16
pop
fstp
stc
rol
sbb
aaa
mov
xchg
ret
fwait
jg
sbb
cdq
fisttp
xchg
pop
retf
cdq
mov
arpl
rol
repz
js
and
jb
les
xchg
push
nop
retf
push
jb
repz
addr16
or
fldenv
push
outs
inc
sbb
mov
xlat
jge
sbb
outs
mov
pcmpeqb
ss
stos
sbb
xchg
(bad)
(bad)
cli
or
out
xor
addr16
scas
mov
je
cdq
xor
fcomp
jno
push
and
sbb
ins
movs
and
out
mov
cbw
jmp
add
xchg
addr16
push
cmp
xchg
jb
or
in
fstp
push
push
xchg
pop
inc
mov
mov
dec
add
pop
clc
clc
nop
dec
inc
jo
pop
cmps
push
sub
je
mov
or
std
(bad)
loope
int3
mov
push
inc
fwait
jecxz
cli
ficom
xchg
and
cdq
pop
push
pop
(bad)
fsub
dec
dec
mov
sbb
jb
xor
call
les
jge
iret
lods
dec
jmp
stc
lds
add
neg
enter
fcomp
(bad)
xchg
xchg
scas
and
mov
add
outs
lock
pop
outs
xor
ins
shr
cmps
int3
sbb
mov
gs
inc
neg
inc
or
dec
lds
xchg
pop
mov
scas
stos
pop
rcl
iret
dec
cmp
mov
inc
or
or
jbe
or
xor
add
mov
dec
(bad)
shl
(bad)
outs
stos
fcmovnu
jno
jecxz
inc
repz
(bad)
push
cmc
xor
jno
pop
pop
jbe
cmp
or
fst
sar
xor
mov
inc
enter
retf
leave
adc
unpckhps
pop
cmps
mov
push
loope
(bad)
fistp
mov
jge
pop
mov
loopne
mov
fsubr
popa
xchg
hlt
adc
in
inc
jbe
adc
cmp
jmp
mov
push
out
sbb
adc
fisub
mov
ja
push
bound
sub
test
fld
push
mov
int3
xor
cmp
inc
dec
repnz
push
mov
push
inc
pushf
mov
scas
(bad)
rol
fisub
(bad)
hlt
mov
jmp
pushf
test
(bad)
mov
push
cdq
icebp
jno
stos
inc
and
or
bound
inc
(bad)
cmps
or
retf
std
xor
xor
jmp
popf
mov
(bad)
adc
dec
sbb
sbb
sub
sub
clc
add
mov
stc
xchg
add
into
imul
es
xchg
out
or
arpl
and
scas
mov
pop
das
fsubrp
jl
cmc
in
outs
dec
stc
movs
retf
jmp
sub
mov
and
mov
out
jp
sbb
sbb
mov
jecxz
lods
js
pop
das
add
fidiv
sahf
adc
pop
cmp
in
sti
and
loopne
inc
adc
js
cmps
(bad)
(bad)
cdq
xor
mov
xchg
cmp
aas
mov
pusha
mov
mov
pop
aad
mov
aaa
in
jmp
outs
mov
mov
inc
and
jmp
cs
pop
cdq
dec
push
xchg
dec
fcomp
faddp
jb
cmp
test
push
sbb
fsubr
jmp
repnz
jnp
inc
test
lods
mov
iret
div
push
push
push
gs
adc
fistp
xlat
out
push
into
mov
xchg
pop
mov
cmp
pop
jmp
push
popf
dec
cmp
das
xor
inc
in
por
outs
jns
js
inc
push
add
and
dec
enter
xchg
add
scas
mov
cmp
add
(bad)
lds
inc
xor
sub
cmp
les
mov
repnz
mov
sub
mov
int3
jp
stos
(bad)
fwait
mov
lock
in
mov
push
push
test
addr16
inc
push
jg
inc
ds
or
mov
mov
mov
movs
cmp
iret
loope
stos
scas
or
pop
into
cmp
rcr
pop
cmp
jmp
xchg
xchg
mov
ss
out
std
repnz
xor
adc
repnz
lods
pop
call
das
dec
xchg
push
or
movs
and
test
call
and
or
repz
inc
pop
clc
pusha
sub
or
lods
adc
les
sbb
punpckhwd
sub
pop
mov
sub
jae
sbb
adc
sbb
in
sbb
es
stos
xchg
mov
test
sbb
dec
std
mov
mov
jo
std
mov
mov
popf
jae
pop
mov
shr
dec
push
adc
icebp
bound
cmps
mov
and
shr
js
fdivr
inc
xor
call
in
pop
and
aad
leave
std
pop
mov
push
(bad)
stc
mov
and
mov
cmps
cmp
out
into
test
cmp
or
movs
xchg
bound
ss
stos
or
cli
mov
mov
xchg
adc
jmp
test
fs
jbe
pop
mov
jo
mov
in
sbb
stos
aad
lahf
pusha
push
jmp
mov
ds
cmp
in
arpl
cli
mov
and
pop
ja
cmp
jge
(bad)
cmc
inc
sbb
dec
fucom
ins
and
arpl
test
sub
push
pop
inc
sub
addr16
cs
lds
dec
sbb
(bad)
call
push
cmove
(bad)
imul
and
lods
push
xchg
mov
jg
cmc
stos
imul
mov
push
ret
test
mov
xor
mov
movs
or
test
mul
pop
mov
inc
push
in
clc
in
jno
dec
test
xchg
std
push
popa
loope
idiv
mov
jne
adc
clc
in
daa
aaa
sbb
pushf
sbb
jge
pop
mov
xchg
push
ror
xor
mov
leave
hlt
mov
movs
mov
jge
jmp
add
mov
in
es
xor
inc
lahf
pop
es
jle
mov
sbb
push
aaa
(bad)
pop
popf
cmps
movs
ret
mul
mov
and
pop
sub
aam
push
jg
jae
fcmovnb
xchg
sub
mov
outs
js
sbb
push
stos
sti
and
add
xor
jge
add
clc
scas
shl
pop
push
push
cmp
adc
adc
imul
adc
inc
mov
sbb
loope
pop
sub
mov
fsub
nop
cmp
mov
test
ret
jle
lock
or
outs
repnz
adc
xchg
xor
or
icebp
test
cmp
xchg
in
inc
aam
add
movs
and
xchg
lock
out
push
add
adc
aad
test
(bad)
pop
ja
fisubr
out
jp
scas
test
xor
movs
cmp
imul
inc
not
mov
cs
sub
jnp
lods
fwait
cli
cld
daa
dec
mov
pop
out
adc
lds
lds
jnp
jg
fild
xor
push
les
xchg
stos
ficomp
and
jmp
mov
jbe
call
xchg
or
cmp
add
mov
or
xchg
retf
mov
sahf
adc
mov
ja
sub
sub
xor
jle
inc
jnp
jo
test
movs
lods
(bad)
dec
cmp
clc
pusha
iret
and
xchg
iret
in
dec
sub
fcom
xchg
mov
sti
sti
mov
jns
push
dec
mov
data16
bswap
or
add
pop
jmp
dec
out
cdq
xor
je
in
sub
ins
ins
fsubr
dec
aas
popf
int3
imul
sbb
adc
jg
(bad)
data16
imul
and
in
jmp
xlat
adc
pop
stos
and
and
mov
xchg
loope
adc
mov
jge
outs
dec
rcr
mov
xor
mov
ja
imul
mov
jge
lahf
pusha
stos
add
pusha
jle
mov
leave
es
ss
test
retf
call
add
mov
inc
test
scas
pop
inc
adc
mov
and
push
lea
gs
int3
adc
xchg
jne
adc
out
xchg
inc
shr
push
xor
lsl
cmp
icebp
sbb
sub
into
adc
jl
jg
es
out
cmp
in
jnp
out
inc
daa
mov
cli
call
and
mov
cs
nop
cwde
mov
mov
cmp
mov
dec
mov
mov
mov
xor
push
ror
cmp
outs
push
xor
leave
cmp
sbb
jae
fmul
dec
pop
sar
cwde
and
aam
shl
adc
out
mov
push
out
(bad)
xor
xor
xor
iret
ins
mov
test
pop
pop
das
fnsave
aad
shl
inc
dec
iret
jecxz
(bad)
in
leave
movs
adc
(bad)
hlt
lock
sbb
rol
mov
fdivr
sub
add
ficom
mov
pop
mov
ror
paddb
(bad)
out
jmp
add
mov
pop
fld
fdivr
mov
das
sahf
xor
cdq
or
dec
adc
outs
jns
mov
and
add
loop
or
jae
mov
lock
lods
aam
cmps
ret
gs
and
jl
iret
lds
inc
ins
into
mov
(bad)
sbb
test
pop
call
arpl
imul
pop
pusha
inc
xchg
imul
lods
inc
lds
sub
pop
arpl
pop
iret
clc
inc
xor
lock
lahf
dec
clc
xchg
lods
popa
sub
push
ins
icebp
in
add
or
mov
js
in
ds
lods
popf
imul
push
jne
fisttp
shl
addr16
jmp
mov
mov
xor
mov
cmps
push
(bad)
fdiv
xchg
fwait
mov
std
movs
push
std
or
xlat
pop
fs
push
push
xlat
cmp
push
push
arpl
movs
loop
ret
xchg
push
xor
cmp
and
dec
or
ins
dec
push
sbb
push
or
push
adc
inc
mov
mov
dec
icebp
(bad)
das
mov
mov
xchg
push
push
or
mov
mov
dec
pop
mov
ror
pop
or
pop
add
or
sbb
jnp
jmp
sub
jne
push
fst
dec
fild
cmc
pop
inc
add
neg
jb
and
sub
dec
lods
cmc
push
xchg
into
adc
adc
fcom
inc
adc
adc
pusha
and
fstp
stc
sbb
xchg
pusha
pop
outs
arpl
cld
popf
in
mov
inc
cmc
movs
imul
and
fistp
xor
ss
leave
movs
out
jmp
push
jp
rcr
mov
xchg
stos
inc
scas
lock
frstor
sub
stc
cmp
in
ss
lods
fadd
mov
mov
popa
shl
aaa
inc
sysexit
ret
dec
sub
push
and
pop
aam
retf
movs
jb
and
inc
icebp
sar
mov
std
sar
jo
call
jg
neg
aaa
inc
mov
xchg
std
add
test
pop
mov
jnp
nop
add
mov
mov
push
dec
jne
xchg
sub
loop
adc
cmps
jecxz
and
or
adc
std
adc
hlt
mov
cmp
pop
xchg
out
ins
xchg
rcr
int3
(bad)
dec
xchg
ins
pop
xchg
inc
pusha
sbb
in
cmp
cli
test
cmp
xor
call
inc
sti
in
pop
outs
pop
dec
fisubr
sub
dec
sub
mov
pop
xchg
lock
fcomi
cwde
test
call
mov
stc
gs
inc
outs
(bad)
xchg
loope
das
adc
pop
rcr
mov
dec
enter
test
test
sub
fdivr
test
and
loope
sbb
ror
movs
jmp
retf
dec
pop
and
or
mov
imul
xor
mov
push
xchg
mov
iret
adc
data16
enter
in
dec
add
mov
pop
cmp
xchg
repnz
sub
mov
xchg
xor
cmp
dec
and
dec
adc
dec
pop
ja
inc
jo
iret
adc
sar
outs
and
xor
les
mov
push
jnp
int3
loopne
sbb
stc
xor
add
sub
sbb
jl
shr
sub
test
push
mov
and
stos
mov
mov
mov
jo
push
push
(bad)
jge
push
fmul
lods
push
xor
shl
adc
bound
stos
jb
add
sbb
inc
adc
(bad)
into
add
or
pop
fist
vpsubusw
inc
or
out
fiadd
dec
loopne
mov
popa
mov
cmp
push
sub
or
sub
mov
in
and
mov
stc
mov
xor
stos
xchg
mov
fist
sub
xchg
sub
repnz
and
xor
dec
xor
gs
enter
popf
outs
push
cmp
in
push
int3
je
mov
in
pop
pop
mov
mov
ret
ficom
cmp
adc
and
pop
push
mov
jl
fstp
mov
push
js
arpl
bound
xchg
ja
push
add
and
mov
inc
jb
fs
dec
mov
outs
pop
aam
xchg
xchg
in
or
icebp
inc
es
dec
add
jnp
cmc
cmps
pop
pop
loop
or
call
push
punpckhbw
inc
lahf
int3
loope
mov
adc
and
inc
cmps
rcl
leave
xor
mov
xchg
mov
int
jmp
jnp
lock
or
and
mov
push
in
xchg
movs
ins
inc
xchg
retf
jle
int3
retf
dec
pop
xchg
ds
(bad)
and
push
movs
and
call
push
sbb
sub
lea
sub
push
mov
repz
jns
xchg
mov
paddd
add
aam
add
movs
mov
inc
inc
and
popa
lea
es
je
(bad)
arpl
jnp
push
aaa
movs
fs
dec
mov
jne
xor
retf
(bad)
cmp
cmps
mov
ds
or
jo
lahf
sub
sub
call
pop
imul
mov
push
popa
leave
jmp
and
pop
sti
loopne
mov
xor
ja
cmp
inc
adc
mov
add
imul
in
jno
fnsave
aad
cs
pop
fcmovnbe
test
sub
sbb
pop
dec
and
sub
mov
and
dec
push
(bad)
pop
pop
adc
cmp
cmp
adc
mov
or
cmp
push
inc
pop
clc
xchg
adc
pop
sar
push
adc
(bad)
mov
pop
jns
mov
retf
std
add
cmp
vcvtsd2ss
loop
scas
pop
fmul
retf
js
jmp
cmps
mov
ds
ins
xor
fbstp
xor
hlt
jecxz
jns
mov
or
push
mov
pop
cmps
(bad)
pop
xor
aaa
jb
jecxz
add
or
sbb
test
lock
cwde
sbb
jae
mov
xor
clc
xor
cmp
stc
fadd
scas
in
das
inc
jo
dec
xchg
into
push
dec
lods
sub
movs
sub
movs
rol
jge
cmp
dec
shl
popa
adc
xor
outs
stc
lahf
movs
or
adc
sbb
test
pop
adc
out
jns
mov
or
clc
adc
pop
xor
inc
lahf
jo
gs
pop
add
scas
mov
test
mov
mov
sub
fdiv
sar
ret
inc
cdq
(bad)
cli
fld
pop
ss
leave
loope
std
outs
mov
adc
sub
ss
mov
adc
mov
(bad)
cmc
or
mov
fprem1
mov
mov
adc
or
push
push
ins
aaa
jmp
dec
dec
sbb
stos
lahf
pop
pusha
dec
dec
push
cmp
mov
scas
sbb
(bad)
(bad)
dec
mov
push
call
inc
ins
mov
stos
imul
push
lahf
lea
pop
retf
ret
cwde
pop
(bad)
mov
inc
fwait
lods
xchg
mov
jl
push
into
pop
mov
(bad)
cmp
aam
sbb
jns
adc
push
call
jne
mov
push
cmp
(bad)
sbb
cs
jp
mov
fld
lahf
not
cdq
aam
cli
loope
add
rcl
add
mov
inc
sbb
test
std
(bad)
mov
into
xchg
cmp
jmp
call
data16
jno
push
jp
mov
pop
or
out
retf
and
push
lahf
scas
dec
lds
add
ds
fwait
adc
or
outs
lods
popa
repz
cwde
aas
pop
cmp
icebp
xchg
mov
test
out
dec
sbb
mov
mov
cmps
dec
mov
call
outs
pop
int
es
xchg
xor
and
sub
jl
pop
mov
inc
test
xchg
mov
push
fiadd
sub
or
pop
xor
rcr
jle
movs
xchg
sbb
shl
(bad)
xchg
mov
and
loopne
mov
les
jg
mov
sbb
push
xchg
xchg
lds
inc
xor
fwait
enter
(bad)
and
mov
or
dec
in
mov
fiadd
das
fsub
push
jmp
stos
fdivr
xchg
mov
push
push
stos
sub
xor
xchg
aam
cmp
cmp
repz
test
xchg
pop
add
fstp
mov
cmp
scas
xor
scas
jns
adc
mov
imul
and
int
or
cmp
or
xchg
js
inc
push
lods
sbb
or
cmps
cmp
inc
jb
fimul
fild
dec
js
fiadd
mov
fs
inc
adc
dec
cmp
clc
int
xor
cmp
cmp
dec
push
sub
mov
jmp
lahf
xchg
jg
jg
es
adc
mov
jns
push
and
add
fs
cmp
lahf
sbb
daa
loopne
cmps
jecxz
lahf
shr
xchg
sub
fstp
add
pop
inc
js
(bad)
outs
test
and
sub
les
push
lods
mov
add
inc
and
dec
sub
(bad)
xchg
cwde
pop
adc
mov
sub
jmp
add
mov
aad
pop
seta
test
shl
cmc
add
dec
inc
in
mov
or
mov
or
retf
mov
dec
aas
jp
dec
pop
retf
mov
es
idiv
mov
pop
or
or
jecxz
pop
inc
cdq
ret
push
mov
jmp
mov
cmc
and
mov
lods
scas
repnz
sbb
mov
int
mov
(bad)
gs
cs
xchg
nop
retf
mov
hlt
jbe
xlat
add
call
lea
mov
dec
push
sub
fnsave
nop
outs
popf
es
cmp
and
cmps
xor
xchg
int
sar
xor
imul
rol
sbb
arpl
sub
jge
adc
movs
or
dec
cmp
pop
call
out
cld
call
and
mov
imul
(bad)
in
inc
daa
ret
lea
(bad)
sbb
push
adc
mov
cdq
jnp
pop
(bad)
loopne
mov
addr16
jb
lods
outs
push
dec
xchg
shl
or
adc
pusha
pop
fst
mov
addr16
pusha
lock
adc
dec
cmp
int
mov
and
sahf
jp
xchg
arpl
in
test
leave
std
std
add
dec
xchg
mov
fidivr
cmps
push
inc
push
pop
jp
mov
xor
and
adc
fidivr
sub
pop
fistp
sbb
inc
lods
cmp
jmp
std
mov
outs
imul
add
das
sub
sbb
dec
test
std
leave
scas
movs
daa
das
daa
or
xchg
push
fnstcw
jecxz
movs
jp
fsubr
(bad)
push
or
pop
sub
push
and
mov
ror
sbb
(bad)
mov
push
(bad)
enter
mov
shr
repz
mov
push
out
or
or
cdq
dec
pushf
push
and
aam
cmp
daa
mov
leave
out
mov
pop
cmps
dec
add
sub
push
cld
sbb
jae
cmp
mov
out
pushf
aaa
test
sub
les
call
jo
cmp
clc
sbb
cmp
mov
dec
and
les
hlt
and
clc
int3
inc
xlat
push
push
and
pop
add
stos
sub
ror
lds
mov
adc
add
push
jp
retf
jmp
nop
mov
sub
mov
jge
mov
adc
bnd
mov
aam
aaa
in
cdq
jmp
push
scas
aas
call
dec
js
pop
loope
jae
pavgb
in
movs
data16
pop
test
jns
dec
daa
xchg
dec
out
lock
mov
ret
es
xchg
mov
shr
and
movzx
rol
push
addr16
lds
dec
xor
stos
popf
and
add
jl
(bad)
stos
fistp
push
mov
xor
movs
xchg
mov
addr16
movs
pop
pop
push
popa
cmp
cdq
push
call
cmp
nop
adc
adc
or
cmp
or
shl
fs
cmps
dec
sbb
aam
test
(bad)
sahf
or
(bad)
popf
jecxz
popf
dec
outs
xchg
lds
sbb
enter
pop
pop
mov
sbb
mov
dec
jp
push
xchg
add
add
je
push
or
inc
xchg
jno
jmp
dec
jae
inc
imul
fld
add
out
push
lahf
ja
adc
xchg
hlt
fs
pop
out
cmc
and
sub
dec
neg
adc
ret
cmps
pop
mov
dec
sub
xchg
jns
inc
rcr
xchg
mov
mov
mov
dec
stos
jae
mov
(bad)
mov
fdivr
adc
ins
inc
mov
xor
mov
shr
sti
pop
and
mov
mov
sahf
cmps
lods
sti
jecxz
aaa
(bad)
pop
imul
inc
adc
cmp
xor
ss
test
repz
xlat
retf
pushf
jp
icebp
or
ss
or
or
es
adc
fild
into
xlat
dec
or
and
sbb
inc
push
push
cmps
(bad)
addr16
mov
sub
test
ja
adc
fmul
rcl
inc
sub
jbe
xor
sti
mov
enter
cwde
xor
pushf
and
rcr
dec
ret
push
(bad)
sub
and
sub
daa
loop
std
cmp
push
imul
les
jb
inc
(bad)
pop
(bad)
cli
(bad)
push
scas
mov
repnz
in
ret
dec
sbb
mov
pop
or
mov
sub
lea
or
jge
sub
xor
sub
in
ret
dec
jmp
xchg
retf
sub
pop
loope
stc
aam
jmp
jb
out
push
popa
je
xor
inc
cld
jo
xchg
jmp
hlt
cmp
jmp
stos
adc
dec
xchg
popa
pushf
cli
sub
cmp
adc
movs
ror
ret
mov
push
push
cli
punpckhwd
out
jecxz
cmp
pushw
ins
mov
jmp
sar
aaa
int
(bad)
and
or
pop
mov
stc
(bad)
or
jno
or
test
cmp
xor
mov
ret
jae
inc
sub
not
push
jmp
sub
lea
mov
mov
mov
jmp
pop
loope
mov
or
and
mov
xchg
adc
fcomp
js
pop
xchg
xchg
mov
and
retf
mov
xlat
scas
xchg
not
sahf
sar
out
movs
xor
std
xchg
mov
pop
(bad)
mov
inc
dec
nop
mov
or
iret
mov
sbb
xchg
and
mov
dec
nop
popa
mov
pop
ja
or
sbb
ret
mov
retf
mov
xor
aad
leave
outs
outs
or
cli
jb
enter
mov
adc
add
push
inc
nop
loop
pop
outs
pop
bound
jb
add
or
rcl
sahf
dec
ins
sub
jecxz
jb
rcr
leave
jp
loope
pusha
cmc
hlt
pop
pop
outs
jmp
or
dec
mov
adc
xor
jo
dec
mov
les
arpl
pop
(bad)
outs
sbb
jbe
push
add
shr
ja
and
inc
mov
push
pop
cmc
mov
mov
xchg
ror
pusha
cmp
call
ss
adc
call
cmp
xor
in
(bad)
pop
lahf
push
(bad)
imul
jle
xchg
test
dec
inc
push
cdq
xor
push
mov
mov
mov
push
nop
push
xchg
jb
mov
cs
and
cmp
int3
dec
inc
pusha
pusha
cwde
(bad)
cwde
mov
adc
loopne
sbb
cld
fdivrp
sub
movs
mov
mov
jg
ins
mov
clc
(bad)
into
and
mov
cmc
lods
lods
das
xor
mov
adc
or
add
fsub
jo
push
dec
push
jle
mov
out
mov
mov
or
mov
imul
pop
mov
and
sbb
fistp
pop
pop
repnz
ficomp
aad
(bad)
movs
or
fldenv
ss
jmp
bound
jle
xchg
add
jmp
bound
xor
popf
mov
lock
jb
addr16
ret
jo
fdivr
cmc
jo
icebp
and
hlt
add
loopne
loopne
jmp
jl
push
add
adc
bnd
inc
or
popf
push
sti
fisttp
adc
xor
xor
or
ds
jecxz
mov
inc
jo
cmps
sti
jmp
dec
ja
(bad)
test
loop
es
ins
lods
cmps
or
jmp
pop
push
inc
add
out
mov
and
jno
xor
adc
mov
mov
sub
push
mov
cmp
ror
jb
xlat
jno
nop
pop
iret
lods
dec
pop
sub
pop
enter
or
mov
ds
jecxz
xor
dec
sub
mov
call
gs
cmps
aaa
pop
add
xlat
mov
fidivr
cmp
xor
inc
fcomp
mov
popa
fwait
lock
pop
jne
mov
add
push
clc
call
or
test
cmp
(bad)
jg
shr
and
and
sbb
adc
add
xchg
mov
shr
sbb
(bad)
cli
xor
dec
dec
push
xchg
jmp
mov
inc
js
dec
sahf
popf
rcr
jmp
or
push
scas
ins
outs
mov
retf
jbe
pop
dec
and
pop
(bad)
jbe
mov
push
fcomip
aas
or
dec
push
pop
pop
pop
jle
in
sbb
pop
out
mov
imul
mov
cmps
clc
in
pop
or
repnz
mov
pop
jle
xchg
jge
out
or
jle
xchg
js
fidiv
retf
push
(bad)
aad
cli
retf
clc
pop
pop
xchg
mov
sti
mov
lock
call
jb
add
sti
rol
aam
retf
ins
jmp
mov
or
shr
loop
sbb
test
shl
adc
jns
or
loop
inc
sub
stc
push
xor
jbe
inc
sbb
add
mov
outs
dec
pop
shr
sbb
ss
xchg
jmp
push
je
(bad)
jnp
add
xor
cmp
or
mov
cmp
cmps
sar
push
pop
popa
jbe
aas
cmp
sahf
out
push
gs
push
jle
push
pusha
aaa
xchg
mov
shl
and
mov
pop
das
test
out
ja
or
cld
popa
mov
sti
sahf
out
cmp
push
mov
push
push
cs
jnp
cwde
mov
sbb
sbb
mov
or
pusha
mov
daa
xacquire
scas
movs
xchg
jg
cli
inc
pop
in
add
dec
call
retf
mov
push
cdq
xor
inc
(bad)
mov
loop
pop
cmp
push
sbb
push
inc
aaa
jmp
cmp
jl
jo
and
rcl
lock
jl
mov
mov
jae
shl
pop
out
push
add
mov
lock
add
adc
jo
sbb
loop
jae
cmp
loope
push
(bad)
out
cld
mov
pop
push
sbb
add
mov
add
shr
in
mov
addr16
push
xor
push
loope
aam
cld
mov
repnz
dec
in
stos
mov
pop
fimul
call
cmps
das
jmp
sub
(bad)
retf
or
icebp
cmc
cmps
outs
pop
popw
data16
inc
mov
adc
pop
outs
lock
jbe
mov
fiadd
and
inc
sub
ds
cmp
xor
and
icebp
hlt
xchg
idiv
je
call
mov
pop
cmp
in
fdivp
or
push
rol
and
in
out
or
clc
ret
inc
add
fild
jle
jnp
in
js
test
fldenv
dec
sub
push
xchg
adc
mov
sbb
(bad)
jecxz
sbb
cli
in
(bad)
sahf
movs
jmp
std
fistp
xchg
xlat
fld
or
sahf
in
into
out
push
pop
clc
push
shl
fwait
out
repz
outs
mov
mov
add
ds
shl
popf
pop
or
es
push
jecxz
pop
enter
test
aaa
ret
jb
add
jmp
lock
xlat
retf
jb
jl
lds
int3
fldcw
or
es
ins
and
jmp
int
push
inc
or
mov
mov
rcl
mov
data16
inc
test
fstp
jne
pop
adc
adc
cmp
call
and
push
icebp
adc
xor
call
aad
shr
or
mov
je
jp
xor
aad
stc
stos
call
aaa
jecxz
call
push
call
bound
dec
mul
fld
fidivr
sbb
js
repnz
cmc
sbb
mov
out
dec
cmps
adc
dec
sub
fs
mov
mov
call
jle
xchg
cbw
adc
cmps
jecxz
mov
mov
pop
leave
fisubr
sub
cmp
sub
lods
dec
repnz
cmp
ins
imul
and
shl
jbe
sub
cmp
test
fs
fmul
push
dec
pop
mov
rcr
loop
(bad)
jg
cmps
mov
fsubr
jo
jl
push
jmp
adc
jl
sbb
push
jg
dec
scas
shl
test
fnsave
dec
std
mov
out
pop
inc
cmp
mov
(bad)
mov
mov
fld
pop
mov
rcl
aad
push
and
repnz
hlt
sbb
jbe
enter
add
and
clc
test
jecxz
pop
or
outs
(bad)
push
pop
imul
xchg
clc
das
nop
imul
icebp
add
add
retf
out
sub
xchg
push
add
or
dec
add
mov
mov
add
gs
stc
ficom
ins
rol
jle
adc
in
clc
mov
sub
adc
mov
mov
movs
adc
test
jbe
popa
push
hlt
and
mov
stos
push
cmp
gs
pop
loopne
lods
(bad)
jo
jp
or
mov
ds
out
ja
add
in
push
das
scas
mov
aaa
mov
sbb
inc
and
movs
add
lahf
cmp
and
adc
add
push
jnp
mov
xchg
shl
outs
leave
ss
(bad)
int
mov
adc
mov
dec
cwd
or
cmc
aam
xor
xor
pushf
scas
jo
lds
ret
mov
test
pop
icebp
pop
pop
ret
arpl
out
xchg
jbe
mov
adc
xor
sbb
pop
mov
sub
push
cld
nop
cmp
xchg
lahf
xchg
pop
jne
out
or
call
icebp
sbb
cs
jecxz
(bad)
sti
mov
mov
jnp
jmp
mov
and
test
aaa
arpl
sub
jmp
std
lods
std
cld
(bad)
cmps
sahf
loopne
cld
inc
and
xchg
out
add
ds
dec
sahf
mov
loope
ss
stos
loope
call
aaa
jae
mov
bound
pop
fdivr
sbb
add
pop
cmp
xlat
mov
mov
pop
loopne
int
mov
and
sbb
jne
fiadd
cmp
sub
xchg
jle
add
test
xor
dec
adc
add
push
popa
mov
out
ins
clc
aaa
fisubr
mov
xchg
mov
ret
xchg
mov
retf
in
(bad)
(bad)
mov
cmp
cmp
ret
ror
loopne
sahf
xchg
sbb
xor
aas
jle
cld
repnz
(bad)
pop
xchg
dec
int3
out
loop
je
pop
sbb
xchg
in
xchg
inc
test
dec
cmp
cmp
xchg
cdq
push
or
sbb
xor
add
push
mov
(bad)
xchg
or
jbe
ss
test
rcl
or
add
rcl
test
push
in
xor
adc
push
jl
scas
pop
adc
(bad)
popa
inc
dec
mov
mov
add
iret
sub
mov
mov
les
imul
xchg
lock
xor
sahf
pop
pop
outs
loopne
int3
mov
int
hlt
adc
inc
clc
sbb
jmp
cdq
jg
fnstcw
adc
adc
arpl
scas
(bad)
mov
mov
mov
in
mov
popa
mov
int
and
js
outs
xchg
jge
cdq
adc
jp
dec
mov
in
inc
shr
fiadd
push
mov
mov
adc
xlat
test
cmp
pop
sbb
rcl
scas
push
push
jl
int
sub
xchg
and
jmp
bound
test
scas
sbb
cmc
push
popa
test
adc
xor
cmps
pop
adc
mov
xchg
push
jo
mov
(bad)
loop
and
popa
push
mov
into
or
(bad)
movs
jp
pop
inc
xlat
popfw
call
loope
and
pop
in
jmp
and
inc
dec
xor
xchg
shl
repnz
jmp
leave
cli
cs
xor
aaa
inc
adc
ss
cwde
(bad)
dec
in
cld
pop
xchg
fbld
addr16
cmps
iret
jg
les
outs
or
sbb
out
rcr
les
xchg
popa
mov
mov
mov
enter
enter
sub
jge
push
add
fwait
cld
sbb
sub
sbb
cmp
or
push
retf
mov
add
leave
(bad)
mov
inc
pushf
sub
out
push
cmp
dec
push
xchg
pop
aas
cmp
mov
in
test
mov
or
push
push
imul
stos
and
xor
mov
mov
popf
in
dec
fst
push
push
jp
add
(bad)
adc
and
call
add
ror
mov
or
fidiv
cmp
push
dec
retf
pop
ja
test
ins
imul
loop
andps
pop
(bad)
into
cdq
lods
sbb
mov
test
inc
imul
sahf
push
mov
pop
mov
into
dec
xchg
dec
mov
mov
das
aad
or
jle
xchg
jmp
xor
fnstenv
mov
push
cmc
nop
repz
rol
pop
or
aad
sti
lds
aam
movs
cli
aad
sti
xchg
ror
mov
dec
mov
fwait
cmp
je
mov
(bad)
out
adc
add
sbb
je
lods
cmps
mov
adc
pop
clc
popf
mov
sub
into
mov
jmp
lods
mov
inc
lea
push
push
mov
shl
das
sti
adc
ins
repnz
add
sbb
add
outs
xlat
or
and
add
aam
inc
cli
movs
(bad)
dec
xor
rol
push
push
sbb
div
stos
dec
dec
mov
and
scas
stos
retf
dec
loope
push
dec
pop
mov
outs
mov
iret
xor
neg
mov
mov
rdtsc
add
test
push
or
sti
arpl
das
fldcw
out
sub
or
cmc
cmps
and
mov
mov
lahf
xchg
aas
or
clc
data16
xor
call
out
push
inc
sbb
inc
lock
adc
add
push
mov
mov
xchg
je
and
fnstcw
ficomp
(bad)
push
cdq
inc
xchg
je
stos
xchg
jp
adc
(bad)
pop
lock
jns
push
push
sub
dec
xchg
test
rcr
repnz
or
xchg
adc
(bad)
ret
inc
fwait
mov
and
mov
mov
cmp
push
fnstcw
push
ins
inc
cmps
retf
(bad)
aad
sti
(bad)
push
jp
xor
xlat
scas
ins
cmp
test
mov
in
sbb
das
in
scas
cwde
add
pop
jmp
retf
sbb
in
loop
mov
popa
int
outs
add
inc
mov
mov
xchg
call
sub
ins
inc
fsin
jmp
dec
es
repnz
cmp
mov
or
mov
int3
shl
iret
in
iret
or
scas
push
sub
loop
sub
pop
imul
(bad)
stc
push
mov
pop
push
jae
bound
lods
dec
bound
mov
loopne
ins
(bad)
inc
pop
enter
cmp
sbb
or
push
cmps
mov
out
ror
mov
aas
scas
pop
xor
movs
jmp
push
retf
ror
fsubr
xchg
cmps
push
stc
nop
sbb
int3
fldpi
cmc
mov
pop
dec
pop
movs
dec
push
in
lods
xchg
inc
fwait
jp
retf
jmp
fstp
jle
les
and
sub
aas
fwait
sub
mov
add
push
mov
inc
mov
inc
cld
cmp
(bad)
mov
mov
cmp
push
mov
xor
jmp
loope
lods
push
jne
data16
jecxz
int
pusha
cmp
lods
dec
popw
dec
repnz
xor
shl
or
push
mov
mov
cmc
mov
(bad)
jb
push
mov
push
nop
cmp
pop
fild
cmps
jl
lock
and
sbb
test
scas
outs
and
xor
mov
cmp
sahf
cmp
dec
mov
out
xchg
xlat
sahf
cmp
das
inc
std
push
mov
inc
xor
das
ror
cmps
sub
movs
fcomp
movs
jae
push
mov
imul
sub
jmp
cli
mov
jl
add
and
shr
outs
or
lock
fisub
je
fisttp
sub
and
add
jne
mov
iret
fstp
push
ins
and
mov
ja
mov
adc
sbb
int3
fnsave
mov
pop
ins
es
inc
retf
aam
or
mov
test
xor
(bad)
std
mov
or
fadd
jge
pop
mov
dec
sbb
lods
add
push
jno
bound
(bad)
jo
cmpps
inc
rol
cmps
aad
xor
cmps
inc
jecxz
sti
lock
or
jge
icebp
xchg
xor
adc
adc
jb
scas
aaa
ins
push
dec
repz
arpl
aaa
scas
test
jecxz
rcl
(bad)
inc
sbb
pushf
(bad)
(bad)
test
fld
jmp
aas
je
and
mov
and
in
cmp
inc
loope
mov
test
sbb
pop
dec
adc
popf
cmc
pop
lahf
repnz
in
jo
mov
mov
std
in
into
xor
xor
neg
div
xchg
aas
push
sbb
imul
dec
xor
addr16
add
popf
rcr
xchg
iret
cwde
leave
sub
cmp
push
in
inc
push
and
and
shr
(bad)
in
inc
xor
and
dec
cmp
add
retf
cmp
mov
lea
retf
lods
jmp
imul
mov
cmp
adc
addr16
xchg
dec
or
push
sbb
and
inc
inc
test
mov
xchg
pop
ds
xchg
push
adc
mov
push
push
test
mov
stos
jp
dec
hlt
inc
inc
(bad)
lahf
inc
test
inc
add
push
sti
inc
in
add
movs
jb
frstor
test
mov
xchg
out
shr
mov
rol
movd
test
mov
and
ret
mov
(bad)
jmp
mov
xchg
test
popa
pop
mov
cmp
fidiv
daa
push
inc
(bad)
in
popf
cmp
mov
xor
(bad)
jmp
mov
pop
sub
jns
jo
xchg
xchg
outs
push
cli
aas
into
dec
pop
adc
add
sbb
xchg
pusha
push
adc
in
leave
ss
or
outs
adc
sahf
xchg
xchg
fcom
xchg
xchg
scas
imul
test
sub
jmp
mov
(bad)
and
sub
dec
pop
xor
shl
movs
add
and
mov
adc
mov
or
sub
or
push
aaa
xor
lds
gs
aas
jg
inc
dec
or
rol
ins
pop
jl
push
xor
sub
(bad)
lock
push
clc
jno
xor
sbb
pop
dec
stos
lock
pusha
mov
push
out
pop
addr16
movs
rcr
pop
sbb
shr
pop
jge
push
ins
fwait
icebp
dec
rcl
xlat
push
pop
mov
dec
lahf
or
into
sahf
mov
xor
cmp
cmp
mov
inc
mov
imul
push
mov
xor
mov
xchg
(bad)
test
das
xchg
cmp
xchg
cmp
mov
sbb
dec
adc
xchg
mov
jmp
aam
add
ror
in
shr
jg
out
neg
sbb
dec
dec
add
jp
aaa
pop
stos
les
imul
jmp
pop
or
sub
pop
scas
lods
inc
or
(bad)
scas
mov
xchg
vmovdqa
std
mov
outs
pop
fimul
add
repz
mov
les
ins
xchg
sbb
xchg
adc
(bad)
sub
inc
mov
addr16
iret
mov
call
xchg
and
push
pusha
jl
cwde
stc
and
call
push
cmp
cdq
jl
sbb
pop
add
mov
sbb
sub
adc
add
jne
or
inc
mov
and
movs
or
xchg
push
cwde
xchg
jmp
push
out
and
or
dec
adc
mov
xchg
pop
mov
int
dec
aad
mov
pop
imul
fisub
push
pop
push
adc
push
sbb
(bad)
bound
and
lea
shl
pushf
mov
rol
int
in
adc
inc
iret
loop
sub
fld
fimul
stos
push
jmp
xor
popf
pop
fs
or
in
inc
push
imul
in
imul
cmp
and
data16
sub
out
inc
jmp
in
and
xchg
mov
cmp
adc
(bad)
ror
sub
in
and
cwde
out
jbe
push
(bad)
fnstcw
int
jg
cwde
int
int
jbe
je
sbb
or
mov
cmp
aas
loope
es
cmp
sti
es
rol
in
les
jl
mov
test
cmc
ror
pop
push
push
out
aam
mov
xor
test
jmp
pop
scas
cmc
inc
dec
and
sar
jp
sbb
mov
retf
lahf
xchg
dec
shl
call
add
(bad)
into
mov
push
jne
inc
sbb
jmp
dec
jl
mov
inc
lahf
(bad)
xor
pop
ins
imul
mov
sub
ins
xor
inc
out
retf
inc
mov
mov
aad
pushf
icebp
sbb
jb
push
mov
jg
inc
(bad)
and
scas
ret
ror
fldcw
mov
mov
ret
mov
push
push
in
lds
and
test
mov
cmps
mov
in
jbe
jno
js
fwait
mov
mov
dec
loope
scas
cmps
pop
ss
adc
mov
addr16
and
pop
cmp
jae
inc
sbb
add
adc
movs
jmp
mov
mov
mov
sub
xor
js
inc
inc
xchg
and
adc
jbe
inc
out
and
lock
and
pusha
cmc
xor
pop
inc
dec
test
push
jmp
pop
in
pop
mov
call
push
ja
xchg
test
fdecstp
inc
(bad)
out
shl
ins
into
adc
mov
push
pusha
sbb
mov
add
lods
cmp
not
jae
push
movs
xor
popf
inc
idiv
cwde
xchg
ins
ins
test
dec
pop
cmp
or
bswap
jmp
fwait
dec
mov
sahf
lods
pop
mov
inc
dec
js
fs
pop
jle
push
sbb
xor
jecxz
lods
or
push
sbb
arpl
jne
mov
test
push
enter
dec
xchg
cld
enter
pop
push
mov
jmp
ins
lock
mov
loop
stos
test
xchg
adc
push
dec
ins
je
out
in
push
cs
fistp
(bad)
out
xchg
fcmovbe
loop
leave
test
xchg
mov
xor
and
out
ja
pushf
sub
pushf
imul
call
jnp
inc
popf
fcom
mov
push
and
jg
(bad)
es
movs
xor
sahf
mov
lds
fstp
es
sub
or
js
push
inc
cmps
or
loop
ret
fisttp
repz
into
pop
lds
xor
push
adc
ret
mov
xlat
push
push
inc
add
popa
dec
test
stos
cld
test
xchg
popa
mov
ror
and
(bad)
sahf
or
jne
(bad)
jp
adc
into
mov
sub
repnz
sbb
cmp
fstp
jne
adc
xchg
mov
and
and
mov
std
jb
inc
push
dec
les
call
adc
rcl
ja
jecxz
sbb
dec
daa
call
test
pop
ret
ins
jmp
ins
xor
in
cmp
daa
add
int
ret
dec
rcr
and
inc
(bad)
sub
push
std
mov
shl
loop
cdq
cmp
lahf
sub
repz
lock
and
stos
out
scas
sub
mov
push
nop
mov
mov
cmps
cmp
mov
in
pusha
dec
jbe
mov
imul
push
push
scas
pushf
sti
push
inc
push
jae
dec
popa
push
or
xlat
(bad)
cld
sub
aaa
sub
jl
cdq
fnstsw
or
and
fldcw
pop
mov
adc
pop
jmp
enter
jmp
jg
add
adc
repnz
in
push
pop
mov
jecxz
ret
pushf
jl
lds
shr
add
in
add
(bad)
adc
jns
mov
jnp
and
lds
sbb
fsubr
add
jp
sub
cs
jae
ds
ins
bound
inc
mov
pop
retf
bound
retf
rol
scas
or
hlt
jecxz
(bad)
dec
sub
sub
js
add
mov
mov
retf
rol
idiv
inc
fstp
enter
imul
sub
jno
push
push
or
in
lahf
imul
add
and
inc
sub
mov
femms
jo
pop
xchg
and
push
and
adc
stos
jbe
inc
fcmovu
adc
jno
call
pop
out
pop
hlt
or
push
ins
jl
into
or
xchg
ins
sub
rol
jp
sbb
out
aas
adc
pop
sqrtps
add
inc
ins
push
or
loope
push
cmp
jb
and
sub
jge
aad
sbb
stc
sub
and
jecxz
int
cs
fldl2t
fs
xchg
nop
(bad)
pop
adc
push
xlat
sub
loop
sbb
mov
aad
mov
or
shr
mov
in
stos
ret
or
aad
adc
push
cmps
mov
stos
(bad)
popf
xchg
inc
stos
mov
lock
adc
ror
(bad)
test
mov
fiadd
or
popa
mov
cmp
out
pusha
fwait
pop
test
adc
(bad)
xchg
adc
clc
sahf
push
in
loope
fmul
nop
mov
jb
and
out
test
mov
outs
jp
fsub
xchg
fild
jne
inc
sbb
retf
push
xor
test
xchg
inc
sbb
cmc
adc
aaa
dec
in
add
dec
and
rcr
inc
cmp
and
fcmovu
mov
sbb
lds
cmp
jp
iret
push
and
div
mov
lahf
and
out
test
jp
(bad)
mov
adc
and
jno
pop
in
and
ins
pop
mov
retf
inc
test
ds
xchg
(bad)
sub
or
sub
nop
xchg
aad
(bad)
mov
mov
loope
push
or
movs
retf
mov
ja
dec
retf
cmc
inc
mov
rol
in
sub
(bad)
xchg
push
in
or
push
shl
sub
mov
call
xchg
ret
lock
fisttp
push
and
jnp
and
push
adc
adc
cwde
sub
leave
cmp
pushf
retf
pop
xchg
dec
not
or
sub
and
popa
js
pop
dec
popa
je
scas
(bad)
loope
sar
xor
inc
aas
jnp
xchg
mov
dec
retf
dec
rcr
out
fadd
ror
pop
test
in
and
add
jecxz
sub
mov
ficom
add
out
mov
loope
ds
xchg
jnp
test
mov
jb
leave
push
mov
or
call
gs
adc
sub
sbb
cmp
add
jl
sbb
fwait
jge
lahf
lea
adc
xchg
dec
inc
pop
int3
icebp
dec
retf
jge
add
std
cmp
lods
adc
xchg
xlat
loop
call
cmp
sahf
and
neg
inc
mov
out
inc
pop
adc
inc
pop
and
push
shr
test
aad
push
outs
mov
jmp
jo
aad
fimul
and
jae
xor
mov
push
movs
sbb
lods
fnstsw
inc
jecxz
ins
pop
clc
fwait
out
sub
call
sti
xchg
pop
jns
dec
dec
into
sbb
cwde
imul
jge
adc
loopne
cmp
cmps
lahf
jecxz
pop
loop
cwde
inc
addr16
in
in
(bad)
(bad)
pop
adc
neg
sub
push
in
retf
(bad)
xchg
jno
lds
ffreep
and
pop
sub
das
sbb
jge
pop
mov
add
xor
mov
pop
push
xchg
add
mov
imul
test
jae
inc
push
es
movs
lods
push
popa
jge
mov
inc
int3
call
xlat
loopne
sbb
cmc
ret
mov
cmc
pusha
and
(bad)
push
xchg
call
mov
mov
(bad)
in
or
ins
out
jnp
dec
dec
xor
mov
out
mov
ret
jnp
mov
rcr
and
cdq
cmp
push
lods
mov
mov
mov
jb
in
xor
mov
xchg
retf
shl
mov
mov
movs
cs
mov
sar
xchg
xchg
push
test
mov
mov
dec
push
je
lods
mov
adc
in
ins
add
mov
add
retf
mov
test
test
jg
test
retf
cs
arpl
sub
adc
(bad)
jo
(bad)
daa
add
mov
and
push
test
adc
lods
ret
and
jp
icebp
xchg
pop
ret
or
mov
push
int3
sahf
movs
dec
pop
jno
sbb
xor
or
add
dec
inc
or
sub
jl
(bad)
es
fsubr
repnz
pop
push
mov
scas
cmp
sub
and
jmp
add
fild
xor
add
fs
mov
pop
mov
cmps
cmp
sub
jae
push
dec
add
mov
movs
jge
mov
xchg
std
daa
and
ret
pop
pop
scas
jmp
retf
in
ret
leave
enter
jns
pop
mov
inc
jae
(bad)
xchg
out
push
xchg
ins
inc
call
mov
icebp
inc
add
jle
pop
dec
popf
in
push
xchg
xor
rcr
retf
ficom
je
retf
sub
xchg
in
nop
into
mov
les
mov
xlat
push
mov
xor
div
jnp
mov
xor
dec
ret
adc
mov
movaps
dec
repz
int3
retf
push
scas
mov
or
loopne
cmc
cmp
and
es
cmps
mov
mov
div
ficom
add
mov
or
loop
pop
in
pop
push
mov
div
stc
retf
mov
push
mov
dec
add
mov
data16
adc
cdq
sub
out
pop
or
mov
jo
xor
daa
retf
mov
lea
sub
xchg
mov
faddp
jle
dec
mov
fcmovu
push
aaa
pusha
bound
add
imul
or
or
mov
lock
cmc
xchg
out
(bad)
dec
inc
jp
push
les
test
dec
push
rcl
pop
cmps
push
dec
mov
inc
shl
in
mov
shl
clc
mov
push
pop
(bad)
imul
xor
push
scas
or
mov
retf
mov
cs
lods
lea
es
addr16
aaa
test
leave
adc
cmc
mov
rcl
test
or
jp
push
imul
dec
popa
xchg
jecxz
ror
pop
mov
sbb
dec
(bad)
fst
pushf
imul
sbb
cld
pop
mov
push
xchg
cmps
add
arpl
dec
xor
jecxz
cmp
inc
dec
fisubr
cmps
pop
cmp
dec
lahf
or
add
pop
sbb
cmps
in
daa
push
push
dec
xchg
sub
movs
jns
fisttp
jp
pop
sbb
mov
in
es
ficom
int
jecxz
lahf
jns
fwait
dec
std
div
mov
mov
retf
aas
(bad)
scas
mov
call
push
(bad)
push
jp
arpl
out
sub
mov
pop
das
xchg
add
mov
ret
rcl
shl
icebp
cmp
mov
dec
push
icebp
shl
cdq
cmp
shl
in
mov
call
repz
xchg
push
mov
fadd
xchg
cmp
mov
(bad)
jmp
mov
xchg
pop
lahf
iret
push
jmp
pop
sbb
mov
and
cmc
pushf
stc
or
out
out
pop
and
mov
inc
cmp
jge
jl
not
lods
sub
fsubr
mov
or
or
push
push
pop
push
mov
(bad)
loopne
adc
ret
pop
adc
sar
xchg
test
mov
or
add
and
stos
push
push
ret
xor
mov
add
sub
aas
push
inc
pop
clc
push
jo
addr16
dec
inc
jg
and
sar
lods
fnstsw
ss
push
fidiv
sub
or
pop
mov
stos
or
pop
jnp
mov
imul
sbb
xchg
and
fdivr
sub
lea
cwde
xor
arpl
mov
jl
xor
outs
adc
inc
out
imul
test
retf
jb
mov
sub
int3
jecxz
mov
pop
hlt
test
push
(bad)
pop
push
(bad)
aaa
sbb
in
push
push
jecxz
and
add
mov
xor
sub
xchg
xlat
ja
xlat
or
fcos
test
jo
add
or
sbb
cmp
push
clc
cmp
imul
out
cld
dec
xchg
add
push
mov
add
lods
xchg
fist
test
test
dec
loop
dec
adc
test
imul
stos
fadd
call
stc
mov
mov
pop
pop
fbstp
push
adc
xchg
mov
jmp
jecxz
outs
pop
dec
sti
(bad)
and
mov
xchg
lea
popf
jne
sub
inc
sbb
popf
(bad)
pop
pop
xor
hlt
add
rol
xor
(bad)
pushf
push
mov
cmp
(bad)
sti
or
jae
je
add
clc
test
inc
loopne
xchg
out
shr
inc
fimul
cld
or
ret
jmp
retf
neg
xchg
unpckhps
fst
or
data16
ss
xchg
(bad)
mov
push
repz
xor
mov
push
inc
jmp
(bad)
(bad)
hlt
pusha
push
add
fild
test
push
stc
mov
scas
mov
adc
bound
cwde
xchg
fwait
ret
mov
fwait
sti
mov
push
les
xchg
cmp
push
dec
adc
and
(bad)
xchg
mov
push
addr16
jbe
bound
ss
out
push
push
lahf
sub
xor
push
loop
push
cmp
imul
dec
test
sub
cmp
xor
cmps
mov
test
sbb
or
dec
dec
jecxz
shl
mov
daa
movs
sbb
pop
pop
icebp
sahf
dec
iret
gs
xchg
pushf
pop
test
jno
xchg
inc
mov
retf
mov
stos
xchg
stos
movs
pop
mov
ds
popf
and
and
hlt
cwd
add
ja
sar
mov
leave
add
dec
(bad)
and
jns
out
ds
test
mov
imul
push
dec
dec
test
in
stc
mov
dec
pop
(bad)
inc
mov
inc
fs
sbb
(bad)
mov
cdq
mov
jns
mov
fnstcw
aam
in
xchg
in
dec
add
ret
pop
sahf
cld
shr
retf
js
sub
xor
mov
rcl
(bad)
push
ror
jno
sub
loope
inc
loope
leave
and
ror
int3
push
xlat
popa
fst
aad
movs
xchg
push
dec
mov
ins
and
daa
test
jno
data16
jne
fcmovbe
inc
push
imul
or
ds
loope
mov
stc
dec
and
push
ja
nop
mov
addr16
and
push
cmp
stos
mov
sub
jo
(bad)
pop
sbb
icebp
mov
xchg
sub
retf
mov
mov
inc
out
in
fmul
mov
(bad)
add
ja
imul
dec
aaa
test
mov
jmp
mov
cld
push
adc
out
mov
sub
popf
movs
popa
sbb
mov
mov
and
loope
and
outs
xchg
daa
(bad)
lods
sbb
ret
mov
aad
adc
add
sub
adc
lds
(bad)
aam
push
dec
push
push
or
jmp
rol
add
push
outs
ds
mov
(bad)
fnstsw
push
adc
in
neg
inc
fcmovnb
clc
rcl
cdq
mov
stos
mov
jne
ins
and
es
scas
inc
sbb
imul
in
mov
xor
push
imul
mov
nop
aam
cld
mov
mov
cmps
cmp
sub
add
adc
mov
pop
call
call
jnp
fadd
cli
cmp
sub
cmp
cmps
xor
lods
and
popa
mov
inc
or
xor
ret
arpl
test
xlat
mov
xchg
sub
and
dec
cmp
mov
inc
mov
mov
dec
mov
into
fst
cmp
jge
test
or
xor
and
mov
mov
ja
aad
movs
xchg
repnz
pop
xor
mov
into
cld
jne
cs
outs
outs
add
out
loopne
das
cmp
nop
stos
or
fwait
xchg
fistp
mov
cmp
or
test
popa
enter
pop
(bad)
test
lock
rcr
jo
lock
mov
shl
mov
pop
adc
nop
int3
sub
inc
jecxz
sbb
cdq
retf
mov
dec
xchg
repz
xchg
mov
sbb
and
nop
adc
das
retf
aad
inc
xchg
ret
mov
nop
inc
cmc
dec
and
or
jnp
in
aas
call
das
(bad)
loope
enter
add
mov
les
ja
in
ret
loop
and
or
mov
mov
(bad)
jnp
inc
movs
and
lea
mov
rcr
(bad)
fsubp
(bad)
xchg
out
dec
mul
dec
push
imul
push
mov
jnp
jl
cwde
jecxz
ror
inc
push
fnstenv
dec
sti
pop
aaa
out
push
enter
ret
and
test
cdq
leave
sub
inc
mov
xor
add
adc
mov
loop
jbe
in
or
mov
mov
ficom
cmp
xchg
(bad)
pop
mov
ins
mov
adc
xchg
in
and
outs
add
push
cdq
call
jl
retf
div
push
iret
xchg
or
jle
xchg
jno
ret
in
daa
push
inc
dec
jle
fdiv
and
push
cdq
dec
shr
enter
sar
pop
loopne
cmovo
sbb
xchg
add
fs
sbb
add
neg
pop
and
lods
sub
jo
mov
stc
scas
mov
add
sbb
sti
add
test
adc
(bad)
call
add
jg
inc
(bad)
gs
clc
lock
movs
jbe
and
in
pop
shr
stc
and
stos
jp
xor
or
xlat
scas
les
xchg
or
ins
jg
hlt
push
inc
push
jmp
outs
mov
out
inc
push
mov
jno
adc
aas
arpl
inc
(bad)
repz
imul
xchg
sub
je
inc
cmp
hlt
or
xchg
pop
pushf
mov
add
mov
sbb
jb
cld
push
ins
dec
es
jae
jle
in
mov
leave
imul
ins
stc
sbb
adc
xchg
mov
popf
rol
xchg
(bad)
pusha
pop
daa
jnp
add
jo
and
mov
aas
sub
fsub
lock
dec
jl
sub
adc
ds
dec
cld
js
pusha
retf
sbb
or
jns
cmp
push
test
mov
cmps
call
aas
scas
fisub
inc
bound
hlt
test
mov
scas
jne
jb
dec
mov
in
pslld
jge
jecxz
inc
fwait
rcr
nop
sbb
hlt
(bad)
loope
dec
ret
div
jnp
mov
adc
imul
mov
imul
test
outs
cmc
mov
leave
push
inc
loopne
data16
xchg
in
add
fsubr
and
jbe
div
sbb
adc
sbb
jg
pop
mov
fnsave
fnstenv
xchg
and
push
gs
hlt
mov
inc
(bad)
adc
add
dec
rcr
nop
xor
push
adc
in
retf
popf
adc
dec
fstp
call
dec
neg
retf
mov
jne
xchg
jp
jge
test
cwde
mov
outs
leave
xchg
in
inc
mov
ror
(bad)
jmp
loopne
in
mov
outs
cmc
pop
inc
mov
gs
xchg
add
mov
add
and
or
outs
int
not
aad
nop
stos
adc
push
sub
rcr
int
dec
ds
jne
sub
outs
test
aam
(bad)
and
call
jnp
mov
call
inc
gs
scas
push
jno
aad
call
add
pop
mov
lock
sub
pop
aad
test
lds
and
adc
sub
fst
ss
lds
xchg
int3
enter
cmc
xor
jae
add
mov
sbb
inc
int
gs
(bad)
sbb
and
dec
retf
pop
cmc
aaa
xlat
(bad)
sar
loop
inc
cmp
mov
dec
hlt
jl
sub
das
aad
dec
xor
je
lock
jl
xchg
sti
cli
sub
xor
movs
es
add
cli
adc
test
dec
cmps
repnz
adc
xchg
mov
sbb
les
mov
jle
mov
jo
pushf
sbb
and
cli
shl
jecxz
jmp
mov
sub
enter
mov
push
addr16
xor
shl
into
js
inc
cli
nop
int
and
dec
call
push
mov
xor
imul
retf
icebp
fimul
sub
mov
icebp
(bad)
lods
jmp
lahf
xchg
sti
jmp
popf
xchg
enter
mov
and
sub
or
and
jmp
jle
pop
pop
pop
cmp
and
in
mov
test
xchg
int3
jmp
dec
sahf
xor
leave
push
xchg
sub
jno
and
aad
rcr
cdq
fisub
inc
and
sti
lods
sbb
push
or
mov
push
jo
movs
in
int
or
cmps
ja
popa
dec
mov
in
mov
sbb
gs
dec
cmp
adc
push
push
lea
xor
jmp
loopne
iret
call
xchg
fmulp
mov
adc
jb
sub
mov
mov
fldpi
les
add
out
cmp
cmp
sar
(bad)
xor
call
cmps
addr16
jge
and
jae
arpl
mov
je
xor
pop
test
hlt
and
xchg
sub
les
and
lods
cmc
inc
mov
and
call
test
stos
jecxz
sbb
add
xor
sub
and
popf
mov
fcomp
outs
push
cld
cmp
cmp
ja
jbe
test
dec
pop
mov
xlat
bswap
cli
fndisi(8087
nop
add
jge
fst
push
inc
dec
iret
lods
shl
cmp
mov
ret
out
cdq
out
popf
out
sub
bound
scas
test
das
out
ins
sbb
test
out
mov
rol
ror
mov
sbb
cmpxchg
loopne
push
jbe
sub
jmp
mov
ss
sub
jmp
inc
fst
jb
rcl
sbb
push
cli
adc
lock
aaa
sar
repz
rcr
xchg
mov
xchg
in
sub
lds
mov
inc
adc
cdq
dec
inc
ret
xchg
lock
inc
test
sbb
int3
rcr
and
js
push
xchg
cmp
sub
adc
xchg
ss
lods
inc
mov
cmps
push
lock
jbe
aaa
dec
cmp
and
xchg
pop
test
adc
push
shl
and
fwait
les
inc
pop
jo
mov
mov
mov
add
adc
jmp
das
sti
sub
xchg
add
jmp
aas
push
adc
mov
inc
mov
adc
sub
dec
pop
test
jge
mov
sbb
xrelease
movs
mov
out
in
jmp
imul
(bad)
jnp
or
rcl
pop
inc
jns
and
adc
jmp
rcr
adc
cmp
(bad)
in
mov
push
sar
fsub
lds
add
retf
and
fwait
lds
int
setbe
push
scas
mov
push
add
fild
cwde
lock
jno
sbb
mov
rol
xor
xchg
cld
or
jp
adc
mov
or
lds
hlt
push
dec
(bad)
lock
ret
dec
xchg
fld
adc
push
shl
or
jmp
or
cmp
repz
ja
pop
sub
pop
or
(bad)
adc
fist
lods
fstp
ficom
cwde
cwde
movs
cmp
adc
movs
inc
fwait
popa
in
lahf
std
int
cwde
jo
mov
imul
stos
mov
xor
cli
mov
mov
iret
ja
(bad)
cmp
and
ins
icebp
imul
pop
dec
mov
(bad)
ret
xlat
scas
xor
pop
push
popa
mov
fs
mov
mov
dec
fwait
dec
mov
out
sbb
loope
adc
gs
sahf
dec
lahf
loop
call
mov
mov
in
push
nop
imul
(bad)
pop
inc
add
mov
xor
mov
fist
sub
adc
mov
inc
ror
outs
popf
movs
test
mov
stos
and
mov
xchg
xor
or
mov
and
aad
mov
inc
sar
rol
xchg
test
aaa
stc
pop
mov
std
add
push
frstor
dec
xor
dec
fwait
sbb
hlt
(bad)
fidiv
xchg
sete
or
mov
(bad)
mov
pop
mov
int3
pop
call
xchg
push
jno
stos
ds
out
lahf
loop
fwait
repnz
mov
add
fst
sub
dec
cmp
adc
ins
shl
ja
loope
loope
dec
sbb
sub
push
sbb
arpl
xor
pop
mov
mov
sub
mov
fisttp
lahf
into
pop
xchg
sbb
jns
dec
xor
div
cmps
dec
adc
sub
fisttp
mov
inc
das
sbb
jg
jle
xor
fdiv
leave
dec
adc
and
std
stos
scas
movs
in
dec
cmovp
xor
icebp
push
xor
std
xchg
jl
lds
or
enter
scas
mov
jmp
pop
and
and
out
sbb
(bad)
mov
ins
fdiv
or
jno
iret
lods
or
pop
or
scas
imul
stos
ins
push
iret
adc
imul
xchg
or
stos
pop
jmp
(bad)
pop
mov
in
or
shr
xor
jns
mov
jp
je
xor
inc
jle
pop
adc
dec
mov
mov
mov
mov
ret
adc
aaa
test
pop
int
xchg
call
sbb
into
sub
call
mov
mov
sahf
scas
icebp
test
(bad)
mov
(bad)
xchg
jns
call
xchg
popf
fstp
or
push
aad
in
push
xor
inc
outs
mov
jle
adc
mov
inc
cmp
sub
sti
adc
inc
xor
(bad)
cdq
sbb
fs
sub
cmp
or
mov
scas
mov
retf
mov
test
sbb
imul
dec
inc
shr
sti
ror
sbb
in
test
mov
lods
jne
push
pop
or
sbb
xor
retf
imul
arpl
sbb
shr
fdivr
mov
(bad)
sbb
sub
pushf
xlat
dec
xchg
cld
cmps
jb
and
outs
aaa
loope
xchg
ret
xchg
aaa
cmp
push
pop
xor
arpl
dec
js
cwde
cdq
in
bound
js
jmp
call
daa
dec
add
sar
pop
ins
mov
mov
push
mov
xchg
sbb
xchg
mov
(bad)
xchg
push
mov
cmps
xchg
sbb
xchg
jae
inc
push
dec
sub
test
jmp
in
sbb
mov
or
xor
addr16
push
adc
xchg
pop
rcl
outs
aam
mov
nop
addr16
lock
xchg
inc
mov
inc
out
mov
in
ja
nop
push
dec
stc
or
movs
xchg
adc
ror
sbb
js
inc
jo
inc
or
pop
mov
sub
or
sub
loope
packssdw
mov
out
stos
clc
scas
fsub
clc
cmp
push
movs
or
pop
xor
pop
jns
cmp
test
cmp
(bad)
shl
js
jns
(bad)
and
(bad)
call
mov
sar
lea
bound
mov
pshufw
retf
jo
or
ror
into
fld
fs
test
jl
cdq
mov
inc
adc
or
jmp
xor
jne
xchg
mov
(bad)
sti
xchg
push
or
add
mov
das
inc
mov
add
xlat
int3
imul
jp
jmp
nop
div
dec
xor
xchg
out
push
call
dec
adc
mov
hlt
and
push
leave
cmp
pop
jp
sbb
in
xchg
pop
test
in
add
jne
lock
ss
and
sbb
jle
mov
sub
mov
adc
mov
imul
test
cmp
jnp
fisubr
cmc
jecxz
out
jmp
mov
jns
xchg
xor
das
mov
dec
mov
mov
mov
mov
mov
sub
jno
jge
sar
call
push
mov
outs
push
scas
in
pop
mov
mov
sub
xor
outs
push
sub
xor
lods
dec
scas
push
icebp
mov
pop
xchg
loop
aam
int
enter
bound
mov
dec
xor
pop
or
inc
sub
jge
or
out
pop
retf
mov
add
cmp
inc
cli
stos
mov
clc
in
enter
mov
sbb
cli
push
xchg
jno
div
imul
or
push
sub
mov
jle
repz
addr16
scas
adc
push
push
hlt
push
clc
push
jg
jg
ins
mov
inc
(bad)
retf
enter
repz
dec
pop
je
pushf
test
aaa
imul
imul
(bad)
lea
push
and
xor
jae
ja
push
xor
cdq
jl
xor
or
stc
xchg
out
in
cli
cld
int
mov
call
cdq
pop
(bad)
jae
cmp
ja
xlat
aam
sub
inc
xchg
fwait
adc
jmp
sbb
(bad)
nop
mov
pop
jl
adc
mov
xlat
das
mov
daa
push
dec
adc
sbb
adc
movs
int
adc
xchg
data16
mov
sti
movs
jl
or
inc
adc
es
mov
jnp
imul
sub
inc
cwde
scas
ja
fs
xchg
retf
out
or
retf
scas
jne
push
xchg
in
dec
mov
cmp
shr
arpl
jno
std
int3
xchg
call
dec
outs
test
xchg
fdiv
in
not
stc
sbb
push
or
dec
fs
neg
fild
bound
repnz
out
cmp
rep
cmp
xchg
out
loop
xor
add
fcomp
xchg
adc
xor
pop
pop
rcl
ins
pop
aaa
shr
inc
scas
jle
inc
jbe
jb
into
mov
int3
mov
and
(bad)
hlt
push
aaa
mov
pusha
mov
popf
test
sahf
dec
scas
rol
jbe
mov
(bad)
das
loop
cmp
sub
jne
inc
mov
xchg
scas
loop
xchg
mov
cmp
and
movs
adc
aad
lea
ficomp
call
nop
in
in
add
jmp
pushf
xchg
mov
mov
push
xchg
add
sar
xchg
xchg
fstp
addr16
mov
(bad)
fisub
mov
inc
mov
adc
ja
repnz
xor
dec
inc
mov
xchg
popa
add
mov
cdq
sti
pop
jg
call
xchg
or
xchg
xor
push
push
push
stos
adc
sbb
out
cmp
dec
imul
jns
jb
cmp
mov
mov
rol
or
inc
fs
(bad)
nop
mov
sub
mov
add
fild
jb
xchg
mov
mov
sbb
(bad)
loope
pminub
adc
adc
ret
popa
clc
arpl
push
or
mov
(bad)
pop
leave
pop
sub
mov
dec
push
imul
xor
cld
cmp
push
popa
retf
lods
xchg
mov
ss
adc
mov
mov
inc
jg
es
movs
mov
fmul
loopne
in
add
sub
pusha
cmp
mov
adc
rep
sub
or
sub
out
dec
arpl
cld
aaa
sbb
dec
iret
bound
nop
xchg
ins
hlt
sar
rcl
and
int
ja
mov
fisttp
xchg
or
dec
dec
addr16
pushf
pop
ds
mov
pop
sub
rol
pop
mov
aad
sub
dec
das
std
dec
adc
sbb
scas
and
maskmovq
not
fwait
mov
lea
add
jecxz
add
fisttp
mov
mov
repz
sub
push
inc
or
repz
outs
jbe
and
pop
cmps
push
push
push
or
jb
fadd
cmp
xor
sbb
adc
nop
cli
js
fdiv
jg
pop
cmp
stc
fs
out
scas
mov
adc
fbld
xchg
adc
dec
mov
push
rcl
movs
jl
(bad)
adc
jg
shl
or
enter
jns
das
mov
jp
aas
(bad)
lods
jne
mov
and
mov
aaa
cmp
fwait
pop
xor
loope
cdq
stc
jb
mov
scas
xchg
repz
and
outs
xchg
push
pop
int3
cmp
loope
mov
stos
sbb
jnp
inc
mov
lods
jne
bnd
push
into
inc
movs
test
jle
not
(bad)
mov
jns
bnd
or
fidivr
push
jmp
test
mov
inc
push
mov
sub
enter
adc
das
xchg
aaa
add
test
ds
jo
imul
out
ds
nop
les
mov
retf
add
fiadd
add
dec
mov
aam
xchg
mov
add
les
lods
sbb
in
or
popf
sub
pop
lods
sub
fmul
jnp
(bad)
shr
popf
xchg
or
add
daa
data16
stos
dec
pop
dec
mov
or
or
leave
lea
and
jb
inc
mov
xchg
int3
xor
push
adc
dec
add
inc
outs
leave
rcr
ins
xor
jae
mov
lds
push
lods
adc
and
std
cli
cmp
mov
hlt
jbe
sbb
push
sub
test
or
push
clc
das
lea
shl
cmp
arpl
movs
int
scas
mov
in
lods
rcr
add
out
leave
data16
push
imul
loope
mov
les
inc
jmp
or
imul
pop
pop
mov
enter
sbb
out
dec
mov
mov
jmp
(bad)
frstor
imul
mov
pop
rcr
outs
clc
hlt
pop
js
mov
xor
pop
push
xlat
outs
(bad)
(bad)
repnz
adc
mov
fdivr
in
ret
push
jo
push
push
pop
and
pop
push
retf
xchg
mov
inc
(bad)
fcomp
js
ins
or
stos
lea
ja
add
pop
push
movs
cwde
or
xor
cmp
ffree
mov
stos
aad
xchg
pop
adc
jae
out
mov
inc
inc
sub
test
pusha
or
mul
cmp
mov
lock
xor
jnp
pop
push
jbe
mov
mov
outs
and
cmps
les
cdq
sub
dec
test
mov
add
dec
sub
int
push
jo
sub
loope
push
outs
test
push
push
or
lods
fmul
mov
mov
(bad)
scas
mov
and
add
push
call
add
xchg
adc
xchg
or
jns
das
xor
data16
mov
iret
addr16
outs
rol
dec
dec
or
mov
jecxz
cmp
dec
(bad)
sub
lds
xchg
mov
jbe
mov
(bad)
sar
or
jp
pop
add
fcmovu
xchg
jmp
jbe
jl
adc
jle
mov
jmp
push
jecxz
adc
dec
fs
pop
xor
rcr
sbb
inc
xchg
lahf
jmp
mov
inc
mov
mov
xchg
sub
fdiv
fimul
jbe
lods
js
bound
lahf
(bad)
gs
cli
cmp
or
aas
retf
push
or
(bad)
jns
mov
jl
leave
fnstcw
inc
or
mov
push
ffreep
pop
lahf
mov
popf
ficom
jecxz
or
bound
not
add
outs
pop
add
lahf
push
rcr
pop
arpl
jecxz
stos
or
in
mov
out
dec
mov
pusha
mov
inc
xchg
into
je
cmps
sub
outs
leave
aaa
shr
aad
lock
mov
aam
(bad)
jmp
fisubr
pop
repnz
or
out
or
mov
xor
add
dec
(bad)
fidiv
retf
and
add
dec
retf
fisubr
dec
cmp
mov
jl
out
dec
inc
dec
popa
fxam
dec
jns
mov
add
stc
enter
pop
sub
adc
dec
and
cmps
cmc
fld
mov
xor
or
inc
sub
mov
sbb
xor
cmp
jbe
cli
loope
add
int
test
je
jbe
push
clc
sub
xor
add
nop
out
and
ror
jmp
and
or
call
mov
dec
in
les
hlt
dec
and
fst
sbb
js
sbb
fstp
pushf
pop
mov
(bad)
pop
push
rol
mov
test
clc
dec
leave
mov
cmp
jo
jns
add
and
add
push
sub
(bad)
(bad)
aad
retf
add
jmp
retf
push
dec
test
(bad)
xchg
jne
sub
outs
mov
jle
mov
hlt
pop
xchg
mov
mov
dec
test
aad
cs
inc
dec
push
jns
or
rol
rol
addr16
mov
retf
fwait
movs
fbstp
dec
inc
mov
adc
xchg
or
cmps
shl
dec
cmps
js
dec
xchg
test
scas
cmp
loope
mov
inc
outs
(bad)
push
mov
repnz
sbb
or
dec
dec
test
or
jp
pop
mov
lods
push
or
xchg
les
test
arpl
add
or
daa
cmp
pop
out
adc
ds
xchg
xchg
xlat
scas
xor
adc
aaa
push
or
xlat
sub
xor
jp
dec
adc
adc
loopne
mov
xchg
aas
pop
mov
sbb
xchg
(bad)
das
pop
cmp
inc
ror
dec
clc
cwde
push
js
mov
cdq
add
(bad)
sub
mov
jb
add
add
shl
cdq
std
jmp
fnstcw
mov
mov
cmp
es
mov
mov
out
push
inc
shl
cmp
scas
add
cmp
or
sbb
and
ss
push
nop
addr16
jo
or
(bad)
sbb
pop
dec
pushf
movs
push
stc
mov
adc
icebp
sbb
fisttp
movs
jg
pop
mov
pusha
mov
adc
stos
call
ja
mov
inc
xor
push
les
and
das
call
(bad)
sbb
dec
dec
icebp
inc
test
popf
adc
mov
inc
mov
jns
xchg
mov
mov
push
test
and
push
cmp
ret
cmp
out
and
sub
test
sbb
std
or
pop
dec
cmp
jmp
neg
pop
dec
inc
push
mov
rcr
jnp
xor
scas
push
std
pop
imul
stc
pushf
xchg
xchg
dec
lahf
push
push
xor
pop
lock
dec
push
push
stos
dec
cwde
retf
xor
loopne
jns
xor
repz
fisubr
inc
lods
xchg
in
jge
sub
out
lods
retf
mov
(bad)
inc
into
dec
xor
aad
movs
nop
(bad)
in
retf
out
dec
repnz
in
and
xchg
push
pop
retf
jl
mul
mov
fnstenv
in
ins
cmc
inc
test
js
test
mov
pop
cmp
sbb
jae
movs
out
pop
adc
sbb
dec
cwde
mov
sti
mov
rol
or
repnz
fdiv
push
and
mov
or
test
or
dec
cmps
stc
inc
xlat
int3
xchg
clc
push
int3
nop
retf
retf
push
xor
sub
and
push
and
and
lods
fwait
push
xchg
shl
sbb
pop
adc
mov
es
out
lock
pop
and
inc
xchg
lods
mov
cmp
out
add
ret
imul
xor
and
inc
es
shl
xor
and
cmp
repz
fstp
mov
mov
and
sub
adc
imul
sbb
push
jne
add
outs
call
ss
mov
and
dec
outs
cmp
mov
cmp
xor
dec
aam
pop
or
dec
pop
fnstsw
aad
mov
lods
das
lods
loope
mov
jno
mov
or
mov
jg
jmp
loopne
cmc
int
pop
inc
in
pop
fs
cmc
into
inc
jle
stos
in
mov
mov
adc
inc
mov
sub
fstp
sar
lahf
stos
jo
xchg
lock
mov
(bad)
aam
fisubr
jle
pop
setp
enter
jmp
stos
daa
arpl
dec
fst
scas
adc
inc
pop
dec
shl
scas
fsub
push
add
mov
ds
lahf
cli
ds
shr
lea
pop
push
cmc
pop
sub
lds
aaa
rol
and
ds
pop
xchg
ss
dec
mov
xchg
lock
psrad
push
or
movs
jl
mov
adc
inc
xor
in
call
dec
xchg
cwde
xor
mov
mov
push
ja
dec
pop
arpl
mov
mov
add
scas
dec
push
repz
sti
(bad)
loopne
ret
stc
mov
in
cmc
aas
add
icebp
xchg
in
xor
mov
mov
add
pop
cmp
pop
stos
dec
add
dec
mov
mov
not
mov
push
lds
pop
mov
add
cli
cmp
adc
or
das
push
cmp
xor
push
aad
mov
mov
in
mov
push
sahf
out
or
mov
lods
jne
or
mov
fsub
in
push
fcmovnbe
neg
pop
fcos
xchg
retf
lods
sub
popf
dec
add
push
pusha
sbb
or
aas
les
rcr
jb
sbb
sbb
test
or
retf
cdq
dec
mov
mov
and
fadd
ret
mov
imul
std
call
push
scas
inc
sub
popf
adc
push
mov
xchg
retf
aam
test
call
dec
(bad)
xchg
mov
leave
retf
jmp
xchg
pop
cmp
jmp
pop
in
je
ret
sub
push
dec
scas
cld
(bad)
jbe
adc
mov
sahf
ins
loope
jg
hlt
push
xlat
sbb
jae
in
push
cwde
ins
dec
je
pushf
inc
sbb
push
stos
add
out
or
data16
inc
jmp
dec
div
bnd
mov
adc
or
(bad)
mov
mov
(bad)
cmp
add
scas
ror
or
icebp
mov
mov
or
dec
outs
pop
jo
jmp
xlat
fsubr
inc
inc
or
mov
pop
aad
shl
imul
adc
cmp
inc
and
cli
aaa
sub
sub
pop
jge
cmps
bound
mov
aam
es
jnp
push
mov
ret
cmp
repnz
in
imul
(bad)
loop
leave
jno
cmp
fstp
cmps
cmp
cmps
adc
(bad)
stc
cmp
stos
fisttp
pop
and
mov
imul
and
clc
out
mov
enter
out
and
fistp
mov
pop
jmp
mov
add
scas
(bad)
jnp
fcomp
push
imul
inc
(bad)
dec
sbb
(bad)
inc
jecxz
ret
pop
mov
retf
inc
enter
cmp
ins
and
rcl
(bad)
fxch
enter
fsubr
cmp
push
xchg
mov
pushf
psubw
imul
pop
jno
test
test
loopne
das
daa
out
call
or
inc
clc
retf
cmp
cmps
mov
pop
(bad)
(bad)
popf
das
stos
xchg
adc
out
cmps
ror
rcr
mov
loope
xchg
mov
mov
pop
pusha
(bad)
hlt
mov
add
sbb
add
icebp
mov
int
push
jle
xor
frstor
(bad)
jmp
cmp
adc
jae
sbb
movs
hlt
sbb
sahf
cmp
xor
push
test
inc
jecxz
add
jg
sub
std
push
in
stos
jmp
mov
push
add
(bad)
pop
jmp
inc
jae
sar
inc
or
(bad)
fistp
pusha
clc
lds
(bad)
lods
loop
sti
mov
fs
in
stos
jg
aaa
xor
shr
xlat
bound
sub
test
(bad)
fldenv
not
int3
push
dec
add
inc
add
push
es
ins
aas
in
jecxz
push
outs
iret
leave
jp
cmp
dec
adc
and
inc
pushf
imul
cmp
lods
icebp
outs
iret
adc
retf
jo
push
mov
inc
cs
pop
movs
call
jmp
add
sub
or
add
xor
nop
and
mov
ficom
sbb
ins
mov
aad
sub
cmps
dec
int
xchg
repz
pop
jp
movs
in
test
movs
push
mov
shr
das
cmp
sar
and
mov
and
ret
call
push
sub
xor
int
push
push
pop
ds
pushf
jge
mov
and
aaa
ja
jl
mov
sti
cld
outs
call
mov
je
cmc
(bad)
fidiv
sub
ds
xchg
les
pop
cmp
(bad)
ds
push
mov
stos
inc
cmp
pushf
jae
ins
scas
jmp
mov
cmp
sbb
push
pop
ret
push
add
adc
fild
(bad)
jp
aam
out
popf
lds
bswap
pop
sbb
bound
mov
enter
cwde
jb
mov
retf
sbb
adc
mov
cmp
enter
dec
mov
and
ins
fcmovnbe
sbb
xchg
ja
and
fild
and
in
add
xchg
xchg
pop
sbb
xchg
popa
jno
in
rcr
mov
jp
lods
push
out
(bad)
cmps
retf
add
out
pop
and
jg
or
push
in
add
adc
or
ret
call
mov
xchg
pop
cmp
bound
out
mov
fs
push
test
mov
addr16
lea
push
std
dec
scas
push
and
pop
jbe
into
cmp
xchg
fld
imul
xlat
adc
enter
mov
imul
pop
or
scas
arpl
test
xchg
pusha
or
xor
inc
arpl
adc
cmp
jo
iret
mov
shl
pop
mov
and
sbb
(bad)
es
cli
ret
mov
mov
jge
pop
xlat
in
xchg
jp
jmp
push
mov
mov
movs
mov
xchg
pop
sub
mov
push
into
jl
into
cmc
ds
push
ins
das
jmp
out
cmps
xor
gs
cmp
pop
sub
dec
fidiv
mov
push
adc
xlat
mov
xor
inc
dec
xor
sub
pop
jmp
dec
add
mov
(bad)
out
xor
add
or
adc
stc
push
mov
ins
fisubr
sbb
fxch
bound
enter
add
fcom
mov
pop
mov
fimul
lds
sub
pop
sbb
fimul
sahf
push
fistp
leave
dec
std
(bad)
jmp
ss
xor
in
cmp
mov
dec
loop
test
sbb
add
push
pop
mov
dec
popf
ret
and
sbb
mov
inc
cdq
inc
(bad)
pop
jmp
jecxz
cmp
imul
cmps
movs
cwde
sub
sbb
inc
push
arpl
iret
pusha
in
push
dec
add
es
jge
inc
out
(bad)
and
ss
(bad)
sar
cmp
(bad)
mov
push
or
aaa
and
jg
xchg
cdq
(bad)
sti
xor
test
push
dec
lock
pop
mov
add
or
sahf
push
cmp
ins
dec
jmp
fisubr
clc
mov
add
iret
pop
push
jne
xchg
call
addr16
cmps
inc
cli
jns
or
js
jbe
sbb
movs
cmp
pop
(bad)
pop
mov
xchg
inc
pop
inc
jmp
adc
in
add
js
rcl
jbe
call
jae
mov
repz
dec
or
stc
xor
icebp
sbb
mov
xchg
dec
add
shr
dec
or
mov
aaa
sub
and
iret
inc
push
add
push
xchg
call
fwait
mov
into
inc
xchg
lock
push
test
ret
jg
xchg
mov
add
pusha
iret
scas
cmc
add
mov
xor
cmps
pop
scas
push
(bad)
xchg
shr
mov
(bad)
int
mov
ret
or
jbe
leave
es
inc
pop
cld
and
sbb
mov
mov
fnstcw
adc
push
or
(bad)
xchg
sbb
fdiv
adc
cs
cmc
call
mov
xor
sub
mov
cmc
xor
add
add
aas
cmp
repz
xor
cmp
cs
inc
cmp
pop
leave
mov
imul
mov
enter
inc
push
gs
(bad)
mov
cmps
(bad)
jge
sub
xor
jne
leave
aas
mov
jl
pop
dec
mov
addr16
rcr
sbb
jns
xchg
pop
pop
push
xor
aas
in
jl
jge
xor
(bad)
fist
push
adc
jns
add
dec
sbb
or
xchg
sub
ins
xlat
pop
inc
loope
cmp
fsubr
mov
inc
xor
fsubr
call
and
mov
rol
scas
add
aam
mov
jae
sbb
pop
dec
call
idiv
inc
push
sbb
test
sbb
arpl
mov
mov
mov
cmp
mov
push
jb
loopne
mov
adc
dec
push
sub
jne
out
xchg
ins
mov
or
xor
ror
movs
(bad)
sar
rcr
xchg
pusha
es
pop
retf
aaa
mov
inc
stos
mov
sub
arpl
ret
mov
mov
cmc
ss
arpl
inc
or
adc
ret
shl
lock
xor
mov
ss
fiadd
(bad)
loop
push
xchg
(bad)
aad
push
sbb
popa
sbb
rol
fmul
into
xchg
xchg
in
mov
pop
popa
stos
call
xor
add
leave
push
leave
mov
sub
movs
jbe
or
inc
xchg
ins
jb
es
movs
arpl
and
sub
pusha
(bad)
lods
jge
cli
mov
push
and
in
cmp
mov
and
cld
sbb
sub
mov
mov
lock
cwde
or
sub
lods
adc
pop
lds
sub
sub
(bad)
pop
loop
test
or
fidiv
and
sbb
cmp
imul
out
enter
data16
int
mov
jno
mov
sahf
into
hlt
xlat
fmul
cmps
fadd
and
push
mov
sub
push
inc
and
int
ds
push
into
jmp
adc
and
ja
cs
push
ins
pop
or
imul
push
je
inc
stos
stc
(bad)
cmp
and
mul
inc
rcl
sbb
and
mov
jmp
aas
add
xor
inc
dec
sub
and
jne
retf
aas
fwait
test
jmp
cmc
xchg
mov
movs
inc
pop
stos
vsubss
push
mov
jmp
push
aad
cmp
pop
(bad)
push
fld
daa
mov
pop
sbb
and
pusha
out
les
dec
xchg
popf
xchg
or
xchg
push
data16
cwde
stc
inc
dec
je
inc
or
fidivr
dec
and
add
retf
sub
repnz
xchg
iret
jb
fwait
mov
cwde
rcr
hlt
sahf
mov
adc
mov
clc
in
xchg
inc
enter
imul
addr16
adc
mov
sbb
outs
mov
mov
pushf
(bad)
xchg
jecxz
cmps
(bad)
fmul
pop
outs
push
fsubp
test
mov
sahf
mov
pop
jp
(bad)
aad
add
and
imul
les
movs
inc
fmulp
call
pop
adc
xor
cdq
mov
pop
push
test
fimul
add
push
mov
or
xchg
mov
add
xchg
sti
test
test
fs
jg
imul
push
sbb
cmp
mov
fimul
out
(bad)
pop
xchg
lock
out
int
adc
lea
xor
add
jmp
lahf
sbb
retfw
xor
ret
xchg
mov
sbb
arpl
lahf
ret
movs
in
xor
xlat
cmc
xchg
add
mov
xchg
in
sub
adc
adc
(bad)
in
xor
out
jmp
xlat
or
test
in
or
mov
xchg
or
fwait
mov
adc
sub
test
iret
pop
push
test
imul
stc
or
je
cmp
out
daa
sbb
dec
ret
add
xchg
test
aad
ret
and
loop
jbe
or
(bad)
pop
pop
mov
es
dec
stos
jmp
aaa
and
push
mov
mov
push
sub
leave
pusha
ret
rol
pop
das
xchg
(bad)
push
fcmovnb
test
xlat
in
sub
gs
jecxz
in
push
sbb
sub
mov
test
leave
and
jne
push
mov
mov
dec
mov
das
not
fcomi
jne
cs
pop
mov
aad
mov
xchg
xor
adc
ja
xchg
xor
pushf
(bad)
jg
sub
cmps
push
sbb
neg
jne
(bad)
cld
stos
iret
dec
push
mov
mov
dec
clc
into
cdq
push
iret
aad
dec
lods
jb
inc
ffreep
fs
or
push
sets
fsubr
xchg
inc
(bad)
xor
jl
push
pop
sar
pop
xor
rol
loop
inc
das
paddw
mov
xchg
ins
adc
sbb
ret
outs
(bad)
(bad)
fucom
dec
jmp
xchg
sar
out
cmp
cli
popa
mov
inc
test
add
mov
push
mov
xchg
xchg
pop
sti
jg
xlat
das
dec
test
(bad)
mov
cwde
adc
xchg
outs
jg
pop
iret
mov
adc
inc
mov
daa
lods
test
retf
out
retf
and
cmp
cmp
pop
xor
adc
dec
fisubr
out
mov
push
mov
sub
in
fistp
outs
stc
jge
ret
pop
loop
push
adc
shl
xchg
mov
sub
fisttp
imul
or
pop
out
sbb
jp
pushf
in
daa
mov
mov
pop
or
pop
fistp
ss
and
push
loope
popa
ins
mov
xchg
pusha
sbb
inc
ret
out
int3
(bad)
pop
out
mov
das
mov
inc
mov
and
push
push
aas
push
jmp
sbb
fcmovne
icebp
pop
ret
in
and
and
xor
sbb
dec
xor
mov
fst
out
jp
cmps
jmp
pop
or
add
and
add
sbb
or
lea
jge
add
and
call
jb
xchg
mov
iret
mov
inc
imul
addr16
jg
inc
fimul
or
mov
and
sti
inc
out
nop
call
jmp
or
or
nop
or
xor
jne
imul
dec
push
adc
push
pop
mov
xchg
shl
test
hlt
sbb
add
sub
cli
call
lea
lods
jns
in
or
test
cmps
inc
and
stos
outs
lea
popa
inc
das
push
sub
mov
scas
sub
push
mov
cmc
cmc
jae
mov
and
rol
dec
xchg
scas
mov
jae
mov
cmp
mov
out
pop
aas
or
aam
movs
loop
out
cli
mov
or
dec
adc
pop
mov
pop
sti
lds
mov
mov
daa
inc
xchg
test
jns
data16
dec
xor
in
push
ja
mov
call
push
jl
sahf
ror
fbstp
call
cli
loopne
and
aaa
dec
jge
ja
add
add
sub
movs
ss
cmp
mov
xchg
xchg
or
scas
mov
cmc
scas
cmp
jmp
cwde
in
dec
lahf
fild
outs
adc
movs
jb
outs
add
push
xchg
inc
out
daa
das
icebp
test
stos
adc
push
fisttp
cdq
ficomp
ss
aam
pushf
ds
adc
loop
std
lea
ds
sbb
xchg
push
aas
retf
dec
cmps
cmps
mov
inc
call
and
mov
in
push
adc
sbb
xor
fwait
cmp
ret
push
push
bound
inc
or
dec
jnp
mov
retf
jp
clc
lods
xchg
mov
in
mov
out
(bad)
jle
mov
push
cmp
ret
(bad)
xchg
and
outs
shr
mov
adc
sbb
add
dec
push
ja
es
(bad)
gs
ins
fst
repz
cmp
xchg
mov
mov
or
xchg
push
fdiv
sub
leave
aaa
jmp
xchg
ffreep
stos
jae
xchg
movs
pop
sub
ret
cmp
dec
inc
dec
push
or
pcmpgtw
ja
and
leave
adc
cmp
stc
push
fcomp
sub
aas
movs
fwait
jb
sub
imul
fsubr
or
call
jg
lods
mov
inc
ret
in
sti
fcom
sar
push
pop
dec
and
or
xchg
jne
inc
test
push
and
push
sbb
dec
xchg
jg
jp
lds
xchg
xlat
loope
xor
xchg
bound
add
xchg
dec
stos
jb
mov
test
int3
add
mov
aas
enter
dec
test
or
mov
retf
inc
lea
mov
push
cmp
mov
xor
pop
outs
fdiv
jno
mov
jne
vaddpd
fst
sti
mov
and
(bad)
push
ror
iret
repnz
lods
mov
fdiv
lahf
outs
fmul
xchg
retf
mov
jg
arpl
outs
inc
jns
jo
ror
xor
test
sbb
xlat
mov
pop
adc
shl
hlt
inc
dec
inc
cmp
add
ret
push
or
xchg
pop
repz
xor
and
pop
ja
push
mov
cmp
scas
pop
in
push
repz
ds
pop
in
jo
in
std
test
and
gs
or
icebp
xchg
sbb
test
mov
fild
lods
cmp
mov
in
jae
sbb
dec
das
fwait
jb
nop
cdq
add
inc
jo
mov
inc
xor
mov
mov
imul
cs
jge
fstp
or
sbb
jmp
dec
sbb
iret
inc
cmc
ins
or
lds
leave
mov
arpl
pop
cmp
call
sub
cmp
shr
aaa
cmps
sub
cmp
movs
pusha
xor
(bad)
sbb
daa
loop
jp
mov
inc
pop
xlat
or
inc
mov
jne
push
push
je
inc
dec
fnstsw
fld
shl
jo
mov
push
mov
sub
cmc
ins
call
lock
xor
call
rcr
stos
leave
dec
or
pop
fadd
pop
fadd
rcr
pop
sub
ins
adc
mov
xchg
add
adc
and
jae
jb
mov
add
in
inc
xchg
lock
(bad)
sub
fisubr
mov
sub
cli
xchg
sub
(bad)
scas
xchg
retf
xchg
mov
mov
aam
addr16
xor
repnz
pop
mov
adc
mov
sub
rcl
mov
xchg
in
xor
xchg
mov
stos
cmp
(bad)
sbb
cmp
daa
push
outs
into
xchg
fsub
dec
push
pop
(bad)
fstp
daa
jne
aad
aas
inc
fst
add
mov
ret
sti
les
iret
or
clc
jns
fist
ror
dec
push
pop
add
(bad)
xchg
es
inc
mov
or
enter
xor
pusha
jns
push
scas
xlat
imul
xchg
sub
in
xchg
and
out
sbb
sub
int
hlt
les
or
push
es
into
popa
test
adc
push
lds
push
and
sub
imul
cmps
xor
fstp
idiv
inc
iret
lahf
inc
xor
call
mov
cld
rol
mov
aas
addr16
push
aas
xor
sub
cdq
pop
or
fiadd
dec
pop
xor
out
outs
imul
sub
out
ins
inc
xor
leave
ins
push
jmp
mov
cmc
les
push
in
sbb
nop
(bad)
das
lea
and
add
(bad)
jno
add
das
add
and
mov
lahf
fistp
je
cmps
inc
mov
pop
scas
mov
adc
mov
shl
in
xchg
fisttp
push
test
cwde
int
sbb
repnz
ret
les
cmp
sbb
mov
sbb
jbe
mov
imul
adc
sahf
repnz
ins
xor
push
sub
pop
and
ss
or
add
cmc
test
fdiv
add
sbb
aas
cwde
shl
fisubr
dec
mov
xor
cmp
mov
sahf
dec
stos
add
adc
sub
dec
pushf
or
mov
cli
imul
bound
lahf
pop
pop
mov
pop
xchg
(bad)
gs
icebp
dec
cs
repnz
jl
fwait
sbb
arpl
jo
out
xchg
adc
rol
dec
xor
cs
test
mov
push
xlat
retf
es
inc
aaa
xchg
and
jl
add
push
mov
scas
inc
cmp
std
fisttp
cmp
scas
mov
cwde
dec
sub
in
xchg
int3
je
daa
push
iret
mov
push
push
mov
fidivr
xchg
xchg
cmp
popf
inc
aaa
inc
jno
test
adc
rol
cmp
sub
sbb
or
xchg
cmc
cdq
aaa
mov
mov
lahf
aaa
pushf
loopne
add
add
jnp
shl
cmp
and
lahf
sbb
or
adc
ds
pop
popf
jbe
adc
jns
xor
rcl
pushf
cmp
or
jne
fiadd
pop
(bad)
(bad)
jl
xor
inc
sub
mov
xchg
repz
int
adc
rcl
pop
push
imul
mov
mov
fld
sar
cmps
shl
call
aam
outs
xor
adc
je
push
sar
icebp
fwait
push
fnstcw
pop
inc
sahf
into
imul
and
fwait
xor
out
or
cmp
imul
aad
jmp
sti
outs
sub
(bad)
add
ja
adc
add
push
loope
sub
add
cmp
pop
out
iret
jns
lock
adc
icebp
mov
lods
dec
inc
inc
pop
adc
and
jge
dec
adc
mov
clc
lock
(bad)
mov
pusha
push
lods
in
inc
imul
lods
ins
or
mov
cmc
sbb
lahf
xor
dec
xor
xor
popf
jmp
mov
shl
push
mov
mov
xor
xor
leave
xor
cmp
mov
in
repnz
push
and
aad
jo
jo
pop
jno
sbb
out
mov
jbe
push
dec
lea
push
sbb
push
inc
sti
mov
rol
dec
push
xor
shl
mov
mov
push
cmp
(bad)
cmp
jecxz
add
and
mov
add
test
mov
jl
(bad)
(bad)
jb
scas
bound
push
mov
ds
stos
cmc
fdivr
xor
sub
xor
xor
xchg
pop
xchg
mov
imul
out
mov
shl
in
jbe
mov
mov
xor
push
call
loopne
rcl
push
gs
jae
ret
test
add
(bad)
fnstcw
cmp
push
add
cmp
fcmove
(bad)
sti
jb
cmp
mov
mov
add
and
push
cmp
cld
add
pop
ins
gs
cmp
mov
loop
call
test
xor
shl
pop
scas
mov
jmp
push
sti
or
push
mov
pushf
cmp
call
and
daa
sbb
dec
and
jne
adc
mov
retf
xchg
xchg
push
icebp
push
test
sbb
mov
or
pop
in
(bad)
mov
mov
jp
sub
or
mov
inc
aam
xor
retf
pop
and
bound
jne
in
fild
pop
sub
jnp
pop
lock
adc
mov
xchg
inc
(bad)
mov
mov
xor
cld
pop
push
xchg
enter
ret
in
rcl
sar
add
aas
ins
jno
mov
movs
mov
add
add
scas
dec
lahf
inc
pop
(bad)
sbb
mov
(bad)
js
clc
pop
and
cmp
es
clc
add
xor
lea
out
test
push
pop
lahf
ficom
or
xlat
sub
jecxz
dec
mov
dec
jg
mov
fld
mov
retw
fucomip
mov
cmp
ss
(bad)
xor
xchg
scas
sbb
imul
repnz
out
adc
cmc
int3
mov
jg
inc
mov
mov
and
sub
mov
mov
retf
mov
and
and
push
sbb
xchg
sbb
xchg
push
ss
sbb
addr16
pushf
mov
icebp
inc
mov
enter
test
dec
cmp
xchg
push
xlat
and
popa
scas
cdq
push
push
enter
add
pop
gs
jl
xchg
sbb
pop
or
push
or
fucomi
in
add
inc
push
or
repnz
inc
dec
push
lahf
pop
popa
xchg
dec
xor
int
mov
addr16
cmovge
in
stos
in
outs
mov
inc
xor
aam
in
sub
adc
clc
dec
cwde
pop
in
cmp
mov
inc
cmp
jge
fs
pop
xchg
ror
mov
lds
stos
xchg
mov
int
into
add
fwait
hlt
adc
sub
mov
stos
mov
jmp
mov
stos
repz
cli
sahf
mov
adc
cmps
adc
pop
call
or
mov
mov
mov
retf
mov
and
sahf
div
cmps
(bad)
int3
mov
xor
jno
adc
xlat
mov
(bad)
jg
aad
cmp
rcl
stos
push
xchg
push
pop
push
(bad)
cmp
sub
xor
mov
jnp
lods
dec
std
jl
retf
push
sub
xchg
movs
dec
in
lock
fcomp
adc
ss
test
aad
fcom
mov
pop
loop
test
out
daa
cmps
das
ret
daa
adc
loopne
xchg
pop
cld
jno
jbe
xor
mov
lods
movs
inc
stc
loop
movs
jmp
test
or
xchg
outs
jbe
mov
fbld
sub
xchg
pop
pop
in
cs
mov
jle
loopne
and
cmc
daa
outs
mov
cmp
movs
add
mov
pop
fldcw
pop
xchg
add
lods
push
(bad)
sub
es
ins
lahf
push
les
test
inc
loope
pop
aas
xor
mov
and
repnz
enter
ret
dec
xchg
add
ins
add
pop
call
xor
mov
je
push
in
xchg
mov
mov
fwait
les
out
in
bound
fsubr
xlat
lds
mov
addr16
and
mov
lods
pop
add
es
mov
push
adc
ret
pop
ror
xchg
inc
icebp
inc
(bad)
jns
add
je
jb
fsub
mov
lds
bswap
call
dec
add
add
test
or
xchg
test
sub
lods
movs
xor
pop
rcr
jo
cwde
push
ja
imul
int
jmp
mov
jge
jns
nop
jbe
xchg
cld
adc
inc
dec
push
sub
xchg
rol
and
xor
push
syscall
dec
jb
add
pop
mov
inc
movs
fsin
bound
xchg
add
xor
fldcw
pop
pop
pusha
mov
sub
call
and
in
retf
ins
cmc
rcl
sbb
jge
jb
dec
sbb
mov
mov
mov
in
or
xor
lds
inc
ins
cmp
nop
xchg
stc
nop
adc
and
fs
inc
ja
shl
fadd
push
jg
mov
cwde
imul
mov
in
pop
xchg
hlt
sub
cmp
(bad)
ficom
data16
in
inc
pop
es
stos
cld
mov
add
sbb
mul
out
ror
sub
add
call
cli
push
mov
push
mov
fisttp
ja
in
js
mov
add
retf
fs
sbb
mov
mov
sub
xor
jno
es
push
jmp
xor
stos
sar
or
push
and
or
xchg
dec
ds
xor
mov
mov
jno
dec
mov
dec
cmp
stc
stos
stc
daa
push
stos
mov
inc
retf
mov
cld
test
dec
sbb
or
mov
fisubr
lods
mov
sahf
pop
mov
sahf
loopne
add
jb
test
or
mov
sbb
test
aam
fcomi
imul
fwait
leave
jge
mov
sub
jle
jecxz
out
or
fadd
int3
add
sub
lods
test
xchg
sub
data16
add
cwde
fwait
inc
cmps
retf
aad
jo
nop
xchg
sbb
mov
push
scas
jle
xor
std
and
inc
int
xor
repnz
add
nop
xchg
mov
mov
fadd
aas
(bad)
dec
fwait
dec
xlat
jno
or
adc
and
adc
dec
xor
xor
retf
cli
movs
jmp
jmp
in
or
mov
push
shr
push
add
cs
or
mov
cmp
jle
mov
dec
sbb
(bad)
js
mov
add
repz
mov
loopne
pop
push
mov
add
adc
or
sti
jmp
fstp
out
mov
js
nop
sbb
push
pop
(bad)
mov
pop
jl
mov
mov
(bad)
es
arpl
daa
sub
push
mov
mov
sti
pop
and
dec
mov
xchg
pop
je
sub
and
or
push
daa
cwde
push
push
mov
das
stc
and
mov
stos
and
pop
scas
dec
je
pop
(bad)
jne
pop
neg
je
push
mov
pop
dec
mov
lds
fimul
sub
xchg
jb
fisttp
outs
xchg
xchg
sub
imul
adc
jle
fmul
lds
fisubr
xor
jecxz
mov
(bad)
call
pop
xor
test
ins
lods
fadd
pop
call
imul
mov
or
mov
cmp
stc
movs
dec
les
mov
and
push
pop
js
test
ins
cmps
imul
retf
cmp
mul
pop
dec
xchg
fwait
(bad)
jnp
xor
adc
or
mov
ss
push
push
pushf
jnp
loope
cmp
movs
add
mov
mov
rep
jmp
fcmovnu
iret
pop
sub
mov
test
div
push
repnz
popa
sub
lds
xchg
out
push
jmp
inc
jecxz
cdq
inc
and
pop
repz
mov
jg
fdiv
fwait
pop
mov
cmp
test
mov
cwde
push
aad
push
popa
sbb
push
xchg
mov
(bad)
mov
sub
mov
pop
popa
mov
mov
nop
cmp
xchg
lock
mov
mov
mov
xor
data16
shl
dec
clc
lods
mov
adc
test
les
gs
fwait
jecxz
ins
mov
loope
(bad)
hlt
stc
add
(bad)
push
push
xchg
adc
dec
mov
dec
sti
scas
pop
sub
pop
push
fld
mov
or
mul
xchg
jle
xchg
fild
sub
scas
(bad)
std
shl
rol
and
paddd
cmp
push
or
scas
sbb
sub
sbb
fstp
fdivr
sbb
cmps
push
sar
jno
popa
movs
mov
loop
jb
xchg
jnp
xchg
sbb
pushf
aam
push
cdq
jne
mov
out
add
aas
xchg
mov
test
(bad)
xchg
jns
es
aas
data16
mov
xchg
and
sar
lods
add
push
repz
and
std
(bad)
mov
sbb
mov
add
imul
pop
ins
mov
cld
rcr
ror
adc
xchg
fisub
imul
inc
sar
inc
push
mov
pop
jl
adc
jl
inc
sbb
js
xchg
jns
mov
outs
mov
adc
stc
iret
adc
aas
fisubr
push
je
sub
push
sbb
mov
test
dec
pusha
pop
les
movs
jecxz
bnd
jmp
xchg
add
mov
jge
adc
pop
das
jle
dec
in
xchg
cs
ret
scas
and
fst
mov
lock
dec
sub
gs
(bad)
cld
cmp
std
loope
cmp
(bad)
(bad)
(bad)
in
in
and
mov
push
ret
sub
pop
pusha
iret
es
daa
aaa
jns
sub
push
mov
imul
mov
push
mov
call
add
xchg
mov
jecxz
and
push
push
push
(bad)
test
stos
and
mov
push
xor
sbb
jmp
xchg
xchg
sbb
ja
xchg
in
repnz
adc
test
push
div
jae
pop
sbb
sbb
jbe
mov
scas
xchg
repz
cmp
cmp
mov
sub
and
cmp
loopne
fidivr
daa
std
repz
or
test
xor
leave
test
cld
inc
outs
jne
test
dec
in
out
retf
std
leave
or
or
mov
iret
outs
sqrtps
out
adc
sub
mov
or
aas
sub
mov
xchg
out
mov
or
icebp
lds
leave
push
dec
mov
push
jmp
neg
jge
pusha
test
inc
fisub
xchg
cwde
cmp
sti
popf
lods
sbb
outs
sub
add
jnp
ret
inc
dec
add
lea
out
mov
scas
pop
inc
jno
and
sbb
repnz
mov
mov
cmps
ins
jl
hlt
shl
fsub
shr
mov
push
xchg
jmp
add
mov
push
aad
pop
pop
jg
jmp
loope
mov
push
jge
lahf
jns
cmp
xchg
pusha
cld
add
jns
sti
hlt
sub
mov
ss
aas
(bad)
lock
pop
add
cmp
or
and
ins
sbb
push
xchg
movs
cmp
or
sub
xor
loop
mov
adc
popf
call
push
cmp
push
cwde
jnp
stos
jle
out
adc
shr
xor
push
jmp
ss
inc
out
mov
add
xor
outs
sbb
pop
dec
fcomp
mov
mov
sub
cmp
mov
and
int
sub
imul
mov
into
xor
push
shl
lds
push
fcomp
xchg
scas
mov
idiv
or
mov
test
cmp
outs
and
cmps
add
scas
ror
xor
aam
fstp
outs
hlt
cmp
dec
push
mov
cli
fs
iret
mov
fldcw
dec
add
jl
jns
sbb
(bad)
fnstenv
xor
dec
push
ins
inc
fdiv
movs
add
push
xchg
xchg
mov
aad
lods
sbb
dec
fsub
sub
mov
in
fwait
inc
adc
jp
push
out
inc
add
out
rol
in
pushf
cwde
rol
jo
out
and
rol
outs
mov
lods
out
(bad)
fstp
xchg
push
fwait
cs
gs
fwait
and
cdq
pop
or
outs
test
mov
pop
(bad)
mov
cmp
or
loope
cwde
punpckldq
mov
xor
daa
clc
cwde
mov
push
mov
ja
dec
mov
and
or
dec
and
xor
and
repz
retf
fiadd
jp
sbb
fstp
mov
fcomip
pop
xchg
std
pop
xor
ins
mov
stos
xor
mov
loope
sbb
inc
(bad)
ret
stos
bound
ss
sbb
mov
jno
fwait
jne
mov
ds
push
aam
stc
imul
xchg
fcom
add
(bad)
jmp
lea
adc
test
(bad)
push
push
lock
test
push
arpl
mul
sbb
fsubr
loop
mov
mov
xchg
sahf
rcl
(bad)
imul
lahf
and
push
(bad)
sti
fsubr
mov
pop
cmps
mov
mov
out
out
(bad)
pop
into
cmp
sub
push
jl
mov
add
xchg
dec
dec
mov
aad
push
adc
add
scas
jae
ins
inc
inc
aam
mov
aaa
mov
push
retf
push
(bad)
clc
dec
cmp
mov
arpl
test
sbb
repz
pop
pop
add
adc
hlt
scas
cld
(bad)
sub
dec
mov
dec
add
push
iret
loope
ret
repz
(bad)
movs
xor
fistp
jne
dec
imul
popa
xchg
fdivr
les
js
mov
adc
retf
and
mov
ja
aad
mov
sbb
cld
fwait
mov
cmc
cdq
int
sbb
(bad)
(bad)
or
mov
cmc
or
dec
dec
or
mov
adc
mov
(bad)
sub
iret
push
dec
add
xchg
jo
push
or
push
xor
push
shl
scas
jecxz
in
stc
mov
dec
push
jo
pop
cmc
sbb
and
(bad)
cmp
shl
setae
dec
inc
aad
(bad)
jmp
in
pop
and
xor
mov
mov
sub
arpl
rcr
sub
jne
in
(bad)
xor
mov
daa
lods
test
dec
dec
sub
dec
aam
sub
mov
bound
ret
std
call
out
or
cmps
pop
inc
jle
enter
pushf
mov
fnstenv
or
out
jle
add
call
push
out
adc
and
test
add
adc
xor
retf
xlat
jmp
add
(bad)
pop
fistp
sub
sar
jp
loop
aam
cmp
outs
out
add
out
lds
mov
mov
ins
sub
out
(bad)
idiv
in
std
mov
mov
pop
lds
or
ins
fst
adc
inc
jae
cmc
scas
fadd
loope
hlt
jae
xor
pop
mov
sub
cmp
retf
stos
sub
fimul
lock
daa
hlt
outs
add
pop
xchg
retf
test
xchg
push
xchg
cdq
xchg
rcl
mov
sub
dec
dec
xchg
cmps
leave
loopne
(bad)
test
mov
test
add
dec
mov
dec
mov
xor
xchg
jmp
xor
xor
jge
xchg
jne
xor
cmps
ficom
(bad)
or
xlat
sub
loop
dec
mov
(bad)
dec
cs
push
hlt
adc
mov
inc
inc
push
inc
iret
das
int
fs
cld
aam
fisubr
in
arpl
or
mov
and
pushf
mov
adc
addr16
sahf
ja
pop
jg
call
add
fisub
or
mov
mov
jmp
add
sbb
enter
jo
movs
and
adc
je
pop
push
pop
cmp
call
call
stos
mov
mov
das
sbb
inc
adc
je
int3
jne
aam
cmps
in
fidiv
repnz
sbb
imul
inc
sub
test
jnp
sub
test
mov
sub
loopne
dec
sub
dec
js
dec
out
jmp
daa
xchg
es
xlat
stc
lahf
xlat
pushf
inc
(bad)
mov
or
mov
cmp
test
add
inc
jb
sbb
xor
cmovo
mov
mov
jl
or
ja
dec
les
xchg
sub
mov
sti
fisttp
mov
lds
addr16
adc
pushf
pop
inc
dec
outs
fiadd
test
(bad)
push
(bad)
ret
aam
pusha
int3
or
pop
adc
pop
adc
ins
leave
ds
mov
add
loope
shl
push
pop
pop
dec
inc
mov
pop
pusha
ror
mov
jmp
int3
sub
mov
and
adc
mov
add
xor
or
idiv
mov
sub
scas
rcr
push
out
mov
xor
js
loop
pusha
out
leave
push
out
lock
cs
ins
pop
adc
mov
ins
mov
xlat
adc
pop
xchg
sar
mov
in
and
push
cwde
jmp
jge
cdq
mov
(bad)
in
je
ins
adc
lock
jns
inc
and
jg
aam
xlat
mov
mov
or
icebp
inc
inc
mov
sahf
les
shl
or
ficomp
(bad)
jmp
(bad)
bound
jmp
xchg
imul
cli
jmp
imul
xor
push
popf
xchg
dec
pop
fs
mov
adc
aad
xchg
and
loop
sub
test
shr
adc
pop
xchg
jb
mov
cdq
adc
jmp
push
sub
mov
fild
mov
aad
jmp
xor
xchg
or
aas
sub
cmp
cwde
sub
aad
loop
xor
mov
test
mov
rcl
xchg
ins
dec
out
mov
and
xchg
xchg
pop
sub
movs
mov
adc
xor
loopne
cmp
dec
sbb
aad
out
cmp
das
mov
dec
fidiv
inc
clc
in
push
or
lods
inc
iret
repnz
jb
not
pop
sbb
adc
xchg
xor
clc
fild
xor
in
arpl
cmps
pop
jno
jl
cmp
cmp
mov
cmp
jb
es
mov
cwde
leave
stc
sub
xor
add
pop
or
inc
jnp
ds
mov
inc
cmc
sub
cmp
les
fbstp
js
sbb
mov
clc
sbb
mov
ficomp
push
push
(bad)
lahf
push
into
in
lds
out
sub
mov
xchg
jmp
push
mov
fiadd
cld
lea
cdq
test
ins
lods
mov
test
or
add
push
pusha
jnp
adc
adc
out
xor
add
int3
in
lea
icebp
push
ja
mov
dec
mov
mov
out
clc
test
cmp
jae
jle
pop
or
pop
sbb
nop
movs
mov
fdiv
rcl
out
loope
sub
inc
cli
jmp
addr16
mov
pop
outs
jno
mov
fldenv
scas
rcr
sar
repnz
cmp
mov
xchg
xor
inc
sbb
ds
xor
pop
xchg
sub
mov
and
mov
les
push
sub
sub
add
(bad)
cmp
or
rol
sub
js
out
fsubr
ins
icebp
or
pop
pop
jns
shl
call
(bad)
movs
bswap
jecxz
adc
rcr
popf
push
(bad)
call
inc
fsubp
pop
mov
fisubr
stc
mov
test
popf
pusha
ss
aaa
jmp
leave
les
lea
add
into
push
and
fld
retf
movs
test
sbb
cmps
dec
cmp
popa
adc
stos
sbb
ja
int
mov
push
stos
(bad)
sub
fcom
call
add
ss
sub
call
and
ror
xor
pop
pop
arpl
mov
jne
loopne
nop
or
mov
(bad)
jb
xor
push
cmp
bound
lods
call
cmp
mov
shl
inc
jg
mov
mov
jge
mov
daa
or
pusha
inc
enter
int
mov
or
and
rep
push
mov
int3
into
adc
jno
add
jle
arpl
das
push
jle
ins
scas
add
mov
and
pop
pop
pop
pop
(bad)
sub
adc
pop
cmp
xchg
loope
adc
jnp
mov
cmp
push
retf
out
js
pop
in
sub
and
sahf
in
pop
sub
sub
xchg
inc
imul
fiadd
cmp
adc
xchg
nop
dec
adc
push
test
sub
inc
lods
xchg
cmp
push
xor
popa
pop
jb
(bad)
dec
leave
iret
call
fnsave
jns
cmc
adc
xchg
into
xor
pop
mov
xchg
push
daa
shl
jmp
and
mov
push
imul
cdq
aam
loope
arpl
icebp
clc
dec
movs
mov
sbb
adc
jl
imul
fcomi
fisubr
inc
xor
ins
push
add
mov
loope
hlt
test
xor
adc
and
and
mov
add
vcvtss2sd
cmp
pop
shld
(bad)
lods
pop
arpl
jmp
sub
lea
push
repz
or
test
add
push
neg
mov
out
inc
cmp
fst
add
jo
add
rcr
push
out
inc
xor
xor
repz
and
xchg
test
call
adc
sub
shr
test
sbb
ret
push
inc
and
mov
cmp
or
inc
and
mov
je
movs
xchg
cmp
ja
and
mov
test
std
pop
arpl
pop
xor
push
pop
xchg
sahf
sti
push
dec
push
icebp
loop
hlt
mov
mov
inc
sbb
nop
mov
leave
rol
mov
jae
and
cmps
dec
scas
pop
fcom
add
adc
aas
jno
push
das
adc
pushf
mov
(bad)
rcr
mov
out
sub
sti
add
aad
xchg
jmp
hlt
mov
aas
push
cmps
lods
retf
sub
mov
addr16
es
fmul
out
ss
popa
jo
dec
sbb
xchg
mov
pop
std
mov
jnp
jns
pop
lods
mov
jecxz
and
jns
xlat
daa
inc
aas
ds
push
sub
xchg
cmp
xor
inc
fucom
test
fs
dec
jmp
push
cmp
or
lods
mov
movs
imul
xchg
sub
push
push
nop
mov
push
push
rcl
enter
jb
mov
pop
pop
inc
in
jp
cmps
jb
dec
mov
add
retf
xchg
pop
inc
xlat
cld
add
ins
inc
cwde
fisub
and
push
mov
test
int
jb
adc
sbb
sub
scas
pop
mov
and
inc
xor
mov
aas
xor
mov
mov
sbb
movs
fstp
mov
and
test
pop
aas
popa
(bad)
dec
xchg
and
leave
pop
(bad)
pop
ret
or
aas
test
ds
jae
and
jne
xchg
fst
mov
adc
cmc
ins
rcr
jge
in
sbb
ficom
test
imul
daa
mul
mov
mov
fiadd
out
mov
cli
jae
int3
test
daa
retf
sub
das
sub
shl
mov
mov
popf
push
pop
arpl
adc
(bad)
jb
popa
out
or
int
fs
lods
ret
pop
jbe
enter
dec
popf
test
outs
lock
test
xchg
push
loop
push
jns
xchg
sub
inc
fisttp
test
jo
aad
cmp
sbb
dec
push
mov
pop
not
pop
cmps
push
loope
(bad)
push
jo
add
pusha
(bad)
outs
sti
bnd
mov
(bad)
xor
ror
ret
push
xchg
fist
pushf
mov
pop
shr
or
dec
dec
sbb
xchg
mov
push
retf
cmc
pause
push
and
and
jmp
sbb
mov
popf
sar
dec
or
push
sbb
(bad)
mov
xchg
xchg
jo
cmp
fcomp
int3
or
add
or
xor
cmp
stc
retf
cld
fsubrp
jp
repnz
bound
mov
sahf
int
cmp
jl
jno
enter
stos
push
loopne
push
aam
mov
dec
enter
bound
js
nop
pop
imul
test
in
xchg
scas
push
sbb
arpl
mov
fcomp
mov
(bad)
aad
xchg
inc
jmp
push
xchg
or
(bad)
int3
adc
enter
cdq
adc
pop
ja
test
call
sbb
arpl
pop
xlat
jns
lock
jl
pop
xchg
popf
bound
ja
xor
push
mov
pop
add
jecxz
cmp
ds
es
push
and
sub
(bad)
les
outs
adc
and
jmp
loopne
scas
or
test
aaa
cmp
mov
lods
sub
int3
jae
mov
js
jo
adc
call
xor
inc
cli
(bad)
xor
adc
sbb
and
out
cmps
enter
sar
out
xor
fild
(bad)
stos
pop
xchg
fst
mov
sub
inc
aam
push
inc
adc
into
mov
and
mov
addr16
or
mov
mov
pop
lahf
cmp
stos
pushf
sub
xchg
dec
daa
add
mov
arpl
add
arpl
fmul
xchg
daa
adc
fistp
loope
mul
loope
or
push
lock
outs
in
movs
push
mov
and
cmp
mov
arpl
sub
push
add
dec
(bad)
pop
mov
jecxz
(bad)
outs
lods
pop
jp
retf
adc
mov
sahf
add
sbb
mov
xchg
mov
sahf
xor
out
adc
adc
dec
and
dec
dec
or
jmp
jmp
sbb
cmp
daa
and
and
ror
adc
mov
pop
xlat
cs
xchg
push
mov
inc
dec
arpl
cmp
sbb
ds
pop
mov
in
outs
xchg
mov
repnz
cli
jmp
cmc
loopne
or
scas
jbe
fsqrt
adc
fist
ret
test
ds
inc
fstp
rcr
push
cli
test
std
dec
push
shr
push
or
sbb
sub
or
pop
jbe
out
adc
test
pop
imul
scas
sbb
and
lea
ret
std
ficomp
leave
nop
jg
popf
ror
sbb
dec
pop
pushf
push
dec
and
push
dec
jl
xor
mov
mov
outs
sbb
icebp
xchg
pop
addr16
mov
es
and
into
mov
xchg
and
or
sahf
loope
inc
mov
fsubrp
ja
xor
pusha
cmp
dec
sub
imul
je
mov
icebp
jmp
sahf
sub
push
jle
jbe
xchg
push
inc
aad
sub
inc
sar
(bad)
mov
xchg
gs
icebp
les
lods
retf
jnp
fild
test
mov
adc
aam
arpl
rcl
pop
or
icebp
fs
xchg
rcl
adc
out
push
pop
lods
imul
int
push
add
jnp
ins
in
xchg
mov
iret
lahf
adc
sub
or
mov
inc
add
and
cmps
adc
adc
rcr
jb
test
test
sub
add
test
pop
add
(bad)
jp
neg
test
lahf
dec
das
mov
mov
fbld
adc
movs
sbb
pop
mov
mov
sub
adc
retf
add
cli
popf
(bad)
or
test
cmps
xor
(bad)
stc
mov
cmovnp
inc
test
or
pop
fcomp
pop
cmps
mov
shl
sbb
out
sbb
mov
jmp
pop
mov
leave
inc
pusha
fldenv
loopne
test
sub
inc
mov
jmp
cmp
imul
(bad)
and
push
sub
ror
sbb
lods
sbb
setns
mov
scas
pop
test
xchg
sbb
sub
loope
sub
mov
sbb
in
push
xchg
scas
xor
dec
and
or
dec
jb
in
or
int3
mov
cdq
ins
adc
lds
mov
xchg
jecxz
loopne
mov
xor
(bad)
dec
jg
sbb
dec
cwde
xlat
push
fld
cld
mov
ret
adc
mov
mov
inc
inc
dec
fs
jns
xchg
push
test
cli
and
cmp
out
push
adc
imul
jg
xchg
call
rcl
dec
pop
nop
fs
rcl
test
push
out
adc
shr
je
ins
sbb
push
pop
(bad)
adc
adc
pop
pop
das
addr16
daa
push
or
ins
popf
pop
xchg
or
call
scas
les
jle
into
cmps
cld
imul
fmul
push
rol
sbb
fucomp
or
ret
lock
sbb
jg
sar
mov
mov
cdq
fdiv
pop
or
int
rol
mov
and
into
scas
mov
push
add
popf
add
arpl
imul
adc
jge
mov
in
aaa
pop
cmp
lods
inc
or
or
mov
mov
lahf
xor
dec
out
pop
jnp
jne
mov
sbb
cmp
dec
popf
aam
dec
mov
add
popf
fcomi
push
mov
adc
stos
jns
clc
hlt
(bad)
adc
(bad)
sbb
or
hlt
jae
aaa
push
inc
out
xchg
ror
jecxz
lds
or
rol
mov
and
jecxz
es
pop
mov
inc
push
cwde
push
mov
xor
xchg
pop
js
cli
lahf
out
stc
pop
jle
mov
adc
rol
mov
test
push
cwde
je
cmp
xchg
bound
bound
in
push
call
mov
je
je
(bad)
mov
aas
jae
or
arpl
addr16
les
adc
jp
fwait
sti
fs
push
and
jp
ret
mov
idiv
pop
jle
stos
push
lea
inc
cmps
iretw
dec
arpl
out
fild
jo
cli
push
adc
in
xchg
iret
pushf
dec
test
pop
jbe
push
cmps
imul
dec
(bad)
int3
inc
icebp
fnstsw
outs
sbb
pop
pop
mov
rcl
sbb
sub
imul
shl
push
sbb
jno
sbb
add
mov
dec
mov
sbb
jnp
fcomi
adc
sbb
or
dec
mov
pop
xor
cmp
(bad)
out
and
aaa
lock
xor
xor
ds
inc
mov
out
xchg
addr16
sub
popa
jno
jp
mov
xchg
cmc
xor
es
dec
xchg
in
test
in
retf
inc
fild
mov
call
mov
inc
int
out
jl
mov
jge
daa
call
xchg
rcr
adc
stc
and
sub
arpl
ss
lds
mov
mov
push
(bad)
jp
fisubr
mov
and
retf
or
mov
les
fwait
repz
pushw
pop
adc
sub
mov
std
gs
test
aas
cs
sub
sub
push
mov
lock
mov
jbe
sbb
data16
stos
xor
icebp
xchg
nop
sahf
popf
mov
hlt
test
in
and
inc
int3
jl
mov
popa
dec
int
icebp
xlat
inc
mov
jne
pop
stc
stos
dec
add
mov
or
nop
popa
mov
jbe
sub
mov
sub
pop
jle
(bad)
xchg
jmp
into
adc
call
ss
out
mov
leave
mov
xchg
inc
adc
mov
mov
or
pop
pop
sbb
cs
pop
call
outs
adc
jmp
xchg
inc
fcomp
jnp
fmul
mov
push
mov
pop
jge
xor
or
into
in
xchg
ins
imul
ins
mov
dec
jecxz
lea
fs
mov
sub
ins
fild
ins
or
mov
mov
mov
imul
jns
inc
inc
in
aad
ins
pushf
xor
mov
push
jmp
mov
add
cdq
lahf
pop
push
pop
push
rol
(bad)
jbe
xchg
call
outs
pusha
adc
lea
retf
in
fsub
stos
add
inc
mov
inc
icebp
arpl
sub
lods
(bad)
xchg
lods
repnz
scas
inc
add
add
icebp
in
retf
lea
cmp
xchg
adc
(bad)
mov
outs
out
out
inc
mov
dec
popf
pusha
ins
out
dec
sbb
imul
fstp
or
jnp
(bad)
sub
jmp
xchg
fmul
daa
fsub
dec
adc
cmp
scas
pop
dec
popa
imul
icebp
int3
out
mov
sbb
adc
pop
pop
dec
jo
push
sbb
idiv
dec
outs
pop
or
shl
inc
xchg
pop
into
mov
mov
fcompp
sub
lea
stc
dec
arpl
movs
adc
mov
xchg
movs
shl
shl
stos
dec
xor
or
cmp
xor
cmps
add
xor
pop
cmp
jg
(bad)
cmp
inc
adc
loopne
or
push
or
and
adc
or
hlt
scas
push
movs
mov
cli
sub
iret
imul
mov
outs
adc
jmp
scas
or
mov
movs
dec
(bad)
mov
arpl
ror
mov
dec
sub
inc
fmul
enter
mov
sbb
rol
enter
mov
mov
lea
or
jg
outs
in
xlat
cmps
scas
cmps
fiadd
sbb
scas
scas
mov
or
loope
adc
fist
jg
(bad)
sbb
scas
jno
inc
stos
fcom
jge
or
adc
lea
ds
adc
(bad)
fsubr
inc
mov
mov
jb
shr
outs
js
xor
pop
mov
mov
push
loop
test
out
mov
jp
(bad)
jmp
scas
test
dec
push
sbb
sub
movs
push
cli
std
and
(bad)
mov
dec
fiadd
loopne
mov
gs
cld
add
test
and
xchg
in
ficom
cld
push
cmp
dec
gs
(bad)
mov
mov
mov
test
rcl
repz
cmp
add
mov
fcmovne
pushf
mov
push
retf
std
inc
fnsave
dec
pop
mov
jecxz
aam
sub
in
bound
loopne
pop
xlat
mov
shl
int3
sub
je
mov
leave
push
sub
and
repz
jmp
fmulp
retf
sbb
fld
adc
xor
pop
shl
pop
cmc
xchg
test
cld
or
or
dec
std
outs
push
call
gs
gs
outs
les
addr16
rcl
pop
jo
mov
retf
mov
adc
scas
adc
je
outs
and
cmp
mov
in
push
sub
lahf
sbb
adc
movs
adc
je
popf
and
cmps
cdq
dec
jg
icebp
xchg
mov
sub
pusha
(bad)
int
cs
adc
loop
sahf
sub
dec
mov
test
jmp
inc
(bad)
std
adc
loopne
popf
jge
sbb
out
fstp
pop
and
dec
push
adc
icebp
jp
fld
addr16
sub
xor
and
cmps
es
push
push
rcl
ins
dec
inc
iret
fimul
xchg
and
retf
sub
je
inc
leave
cmp
cmp
popa
imul
mov
mov
mov
aam
aaa
xchg
enter
nop
mov
sub
mov
popa
rol
lods
push
popa
mov
out
add
iret
scas
jno
sbb
xor
scas
(bad)
int
mov
mov
outs
inc
in
aad
push
pop
call
fs
inc
cs
push
gs
jmp
sbb
xchg
(bad)
cli
jno
std
test
rcr
add
push
idiv
stc
ror
xchg
in
inc
std
movs
sbb
or
mov
cdq
jecxz
aas
in
pop
cmp
jle
mov
cmp
sub
adc
retf
stc
leave
shl
xchg
inc
cmp
mov
adc
sub
jecxz
xor
test
xchg
rcl
stc
sub
pop
(bad)
mul
ds
xor
dec
push
jecxz
stos
mov
dec
adc
leave
test
sub
adc
cmps
out
xor
hlt
ins
xchg
and
frstor
loope
xchg
hlt
(bad)
fidiv
fisttp
xor
add
bound
pop
loopne
inc
bound
popf
lock
jle
clc
cdq
data16
jecxz
pop
mov
pop
addr16
ins
xchg
sbb
repnz
xchg
sar
xchg
xlat
sbb
out
dec
imul
lods
mov
imul
je
aaa
jo
jecxz
movs
addr16
iret
push
and
nop
mov
or
hlt
lock
pop
int
jle
int3
retf
dec
dec
iret
sub
outs
xor
lods
sti
loope
out
arpl
idiv
jo
xor
push
outs
dec
pop
fadd
outs
or
addr16
lods
in
das
mov
int
xchg
jecxz
icebp
retf
add
sar
sub
ins
fs
loope
fldenv
inc
xchg
and
loope
sahf
pop
mov
jo
imul
mov
adc
push
pop
cmp
imul
loope
inc
mov
popf
cmp
movs
int3
push
inc
cmp
pop
cld
std
adc
aas
dec
out
add
out
xor
xchg
call
push
xor
or
pop
iret
or
xor
shr
jp
bound
mov
test
hlt
or
sub
xchg
int3
push
outs
je
hlt
lahf
xor
and
xchg
add
mov
xchg
jp
leave
in
inc
clc
mov
call
sahf
dec
push
pop
mov
call
inc
lock
add
xor
ds
xchg
mov
push
aas
mov
push
mov
inc
stos
push
clc
lea
lock
mov
addr16
popa
scas
push
jmp
clc
mov
les
lahf
xor
push
mov
or
aaa
push
and
jge
sbb
test
mov
xchg
fidivr
and
es
call
mov
xor
add
dec
inc
pop
mov
mov
pop
scas
scas
idiv
outs
push
inc
cmp
xor
mov
shl
out
push
retf
xchg
xor
xor
jb
je
ins
aam
test
je
cmp
jnp
mov
lds
inc
and
inc
or
and
push
add
and
bound
pop
cmp
jmp
outs
(bad)
dec
movs
lods
mov
xor
add
sub
push
arpl
stos
add
in
(bad)
cs
mov
xor
xor
xchg
cmp
sbb
jns
mov
push
pop
dec
rol
mov
xchg
cdq
xchg
xchg
ficom
cmp
icebp
movs
ja
add
push
push
dec
shl
xchg
retf
test
je
xor
sub
es
jnp
xchg
leave
mov
push
stos
mov
sub
push
pop
pop
cmps
and
mov
scas
test
mov
sbb
fisttp
push
cmp
imul
call
cwde
test
arpl
xor
dec
das
or
push
fadd
jne
ins
mov
lock
jno
dec
jnp
or
ins
enter
push
gs
inc
call
push
call
cmp
and
cmc
int3
loop
xchg
out
mov
mov
mov
dec
ja
push
dec
xchg
loope
(bad)
loope
add
mov
int3
ror
enter
or
cmp
ins
fwait
mov
aam
pusha
pop
pop
adc
shl
test
call
pop
inc
pop
test
rcl
mov
xchg
test
out
std
and
adc
clc
int
mov
sub
jno
xchg
nop
retf
pop
hlt
cmp
clc
cmp
sub
mov
pop
push
stos
xchg
and
mov
xor
and
into
int
fs
out
icebp
outs
push
fcmovnbe
adc
pop
sbb
test
rcl
jecxz
call
xor
xlat
adc
inc
lods
pop
jle
mov
pushf
pop
xchg
push
jmp
lea
mov
cmps
or
je
xchg
xchg
cmp
sbb
pop
rcl
cmps
or
(bad)
and
adc
ins
inc
pop
fnclex
pop
rcl
outs
stc
movs
loopne
push
mov
inc
ss
push
or
xor
in
xchg
clc
je
cmps
adc
out
cmp
add
out
out
xor
mov
shl
gs
cli
test
mov
arpl
jne
adc
fs
stos
push
jns
xor
cmp
es
push
adc
push
outs
arpl
push
push
or
xlat
push
dec
mov
lahf
adc
mov
out
mov
cli
push
and
pop
je
mul
outs
mov
inc
retf
ins
lea
mov
adc
push
movs
in
sti
inc
cmp
pop
das
fstp
scas
popf
pop
std
movs
adc
les
stos
repnz
xor
sub
jo
push
push
mov
and
xchg
xchg
add
push
mov
popa
or
in
cmp
arpl
lahf
scas
xor
test
fwait
hlt
pop
jg
jae
adc
lock
jmp
cmc
in
js
popa
mov
mov
lds
lea
fcom
lods
xchg
add
mov
inc
pop
imul
xchg
sbb
mov
nop
sub
lds
add
loopne
les
xrelease
xor
or
(bad)
loopne
test
imul
stos
(bad)
sbb
push
sbb
adc
mov
or
pop
jnp
jl
mov
sbb
call
adc
mov
icebp
cmp
xor
sti
pop
(bad)
sar
call
pusha
jne
adc
lds
loopne
mov
pusha
(bad)
sbb
das
adc
outs
ficom
pop
adc
cdq
ret
cmp
pop
data16
push
jns
ret
outs
(bad)
push
cmp
xor
push
add
add
test
pop
test
or
pop
popf
inc
scas
out
pop
dec
icebp
cmp
jge
je
sbb
outs
repz
movs
cmp
pop
pop
add
inc
mov
add
stos
xchg
jns
lods
cmp
dec
add
push
sbb
push
or
call
jl
mov
loopne
addr16
pop
rcr
(bad)
push
mov
xchg
popf
sub
popa
sub
fcomp
adc
leave
add
adc
fwait
add
add
jg
sbb
ficomp
shl
dec
fsub
xlat
jmp
lock
inc
mov
mov
mov
popa
pop
dec
and
test
dec
sub
ins
cmp
pop
jmp
or
cmps
mov
jmp
icebp
add
jne
imul
es
ret
jmp
adc
mov
in
push
seta
xor
ins
sar
iret
jmp
out
loopne
(bad)
adc
xor
jo
(bad)
pop
cmps
lods
or
into
in
repz
rcr
push
data16
inc
sub
dec
add
jae
fdivr
out
cmc
cld
mov
and
cwde
sbb
sub
pop
add
jle
retf
mov
aad
addr16
cmp
add
or
sbb
jl
div
add
mov
xchg
xor
jb
pop
pop
sti
fwait
xchg
neg
mov
add
jg
enter
cdq
cmp
mov
popa
mov
out
mov
mov
mov
std
pop
(bad)
sahf
dec
inc
retf
aas
or
mov
ror
xchg
add
xchg
jne
dec
push
and
inc
cwde
ins
cmps
xchg
mov
add
sub
or
repnz
xor
add
mov
out
fiadd
popa
call
mul
dec
es
je
scas
sub
push
mov
ja
gs
xchg
xor
inc
push
stc
push
and
jns
cmps
repz
test
out
fwait
xor
cmp
adc
jmp
shl
arpl
les
jg
inc
out
nop
das
push
and
inc
(bad)
xor
fistp
jg
and
dec
dec
sbb
sub
inc
mov
leave
fnstsw
enter
nop
jns
fdiv
and
call
or
hlt
pop
mov
mov
xor
mov
scas
leave
fdiv
repz
mov
imul
xchg
test
xchg
jg
mov
int
sbb
ja
sbb
stc
xor
fdiv
mov
inc
xor
scas
xchg
aaa
inc
(bad)
pusha
or
pop
fisttp
(bad)
outs
cmp
outs
push
sti
adc
push
push
add
jmp
test
push
dec
cmp
movs
xor
jmp
into
sub
xchg
popf
aas
mov
outs
jecxz
jo
add
lea
jnp
data16
adc
xor
stos
xchg
xlat
sub
sti
mov
loopne
cmps
jle
adc
sbb
jb
imul
in
ins
loop
arpl
hlt
fistp
das
xor
pavgb
sub
jmp
fbld
xchg
popw
lds
loopne
rol
rol
mov
adc
or
pop
push
lock
push
xlat
and
adc
pop
or
ffreep
and
ins
mov
mov
dec
ins
xor
mov
into
jmp
scas
outs
ins
jnp
jg
adc
mov
mov
cmp
pusha
repnz
mov
cmp
lods
adc
jnp
add
ss
(bad)
cwde
stc
jecxz
aas
in
es
adc
jecxz
push
sbb
push
jle
mov
fs
jle
rcl
adc
pushf
add
sti
mov
imul
cwde
pusha
test
inc
aas
dec
div
ret
fisub
dec
dec
add
push
jo
mov
fld
sbb
leave
add
aad
in
aaa
sbb
ret
enter
sub
xor
dec
mov
xchg
ffree
pop
adc
inc
jns
xchg
mov
nop
pop
xchg
call
mov
cmps
inc
outs
xchg
shl
idiv
or
add
sub
aam
adc
xlat
dec
mov
xchg
sub
int3
pop
or
cld
rol
xor
and
push
bound
imul
xor
push
dec
add
mov
(bad)
fsub
sub
in
sub
xlat
mov
ror
xor
out
imul
leave
and
push
shr
xchg
loop
jecxz
sub
sub
and
xchg
(bad)
fidiv
mov
push
jmp
shl
(bad)
dec
and
addr16
pop
in
outs
dec
push
mov
in
ss
jl
inc
mov
mov
int
xchg
jl
push
xchg
ds
fwait
mov
int
jns
push
push
push
aam
mov
sar
cwde
pop
js
jne
pop
push
cmp
mov
int
and
fs
cmc
adc
cmp
dec
cli
sub
mov
(bad)
xlat
fild
cs
sti
jmp
mov
xchg
imul
mov
stc
ds
sub
stos
(bad)
and
sbb
jns
mov
dec
lea
push
call
arpl
leave
pop
mov
test
scas
and
jge
dec
pop
or
dec
add
or
dec
(bad)
adc
int
leave
jmp
dec
sbb
stc
sbb
sahf
leave
lahf
call
mov
pusha
fcom
in
sbb
gs
sti
sbb
lock
jmp
and
or
dec
outs
ja
je
inc
rcl
push
lock
mov
mov
dec
not
push
bndstx
int
jnp
sub
or
int3
jbe
das
push
mov
(bad)
pop
rol
add
lds
push
jnp
mov
pusha
cld
and
pop
adc
movq
xor
dec
imul
mov
mov
aad
inc
jmp
adc
scas
xor
popf
add
ret
cmp
mov
cmp
xor
into
and
cmc
scas
adc
enter
cld
add
es
mov
pop
std
mov
int
add
out
nop
in
mov
jo
out
clc
jnp
mov
sbb
and
xchg
jp
enter
sub
xchg
or
shl
(bad)
jge
aaa
gs
(bad)
jne
xchg
pop
fdivr
mov
popf
inc
nop
push
mov
or
xchg
jns
cmp
rcr
in
cli
retf
fs
push
inc
adc
loopne
test
cmp
cmc
mov
xchg
jne
mov
sub
out
call
outs
sbb
inc
es
pop
aam
pop
js
stos
sar
dec
cmp
shl
clc
mul
pop
movs
ds
dec
hlt
or
daa
xor
or
push
push
cmp
out
jne
and
jbe
call
mov
retf
dec
inc
ins
cmp
int
xchg
lahf
rcl
fwait
lea
(bad)
sbb
mov
clc
adc
cmc
sbb
arpl
daa
and
sbb
dec
popf
inc
inc
push
xor
fisttp
jp
(bad)
movs
inc
arpl
jns
movs
(bad)
push
aaa
cmp
sub
push
push
push
fwait
leave
and
inc
cdq
lea
pop
mov
stos
out
cmp
jp
cmp
pop
dec
into
mov
inc
lds
in
jae
fistp
(bad)
ja
xor
mov
push
push
sbb
ret
icebp
cmp
test
(bad)
cmps
je
js
fistp
mov
ins
nop
jb
adc
movs
and
loopne
loope
leave
je
cmp
jne
(bad)
es
pop
stos
arpl
aas
jo
popf
pop
ins
mov
call
inc
loopne
(bad)
out
mov
jmp
scas
push
xchg
out
and
(bad)
ror
lods
(bad)
out
jbe
scas
cmp
push
daa
in
or
shr
int3
mov
mul
mov
daa
mov
data16
xchg
xchg
sahf
mov
in
cmp
cmp
pop
fnstsw
call
sub
je
xchg
jb
jns
push
jmp
and
sbb
pusha
loopne
sub
mov
push
out
cmp
dec
jmp
jmp
inc
stos
loope
sbb
test
js
ret
inc
mov
movs
jge
push
shl
or
dec
repnz
and
(bad)
data16
sbb
mov
add
or
add
sub
(bad)
stos
add
enter
test
cmp
repnz
cmp
fist
jecxz
sbb
imul
push
and
repz
daa
retf
stc
cmc
sbb
push
dec
xor
mov
scas
bound
sar
jle
dec
jge
int
dec
sbb
mov
bound
cmp
cmc
aam
and
cmc
jb
push
mov
data16
mov
mov
fiadd
imul
pop
fisubr
int3
adc
dec
pop
cld
jecxz
clc
push
adc
jge
fld
ret
mov
jo
mov
call
jmp
in
int
push
jge
sbb
pusha
mov
movs
movhps
dec
jmp
add
jbe
arpl
pop
cmp
sub
sbb
ficom
ja
test
add
or
fs
pop
sub
sbb
or
and
sub
(bad)
mov
sti
xor
in
das
mov
int
dec
arpl
(bad)
pop
mov
xor
int
loopne
je
arpl
jns
cmp
fcmovnb
pop
cmp
mov
xor
adc
mov
jae
xor
xor
(bad)
sbb
cmp
bound
jp
inc
push
or
arpl
mov
push
cmc
add
mov
in
and
lods
or
retf
out
enter
imul
ds
nop
and
xchg
jbe
fs
cmp
push
mov
mov
or
mov
ins
add
jge
nop
pop
pop
nop
and
add
inc
mov
xchg
stc
xchg
stos
xor
in
retf
and
js
popf
into
adc
mov
xor
mov
sub
cmp
mov
mov
daa
mov
mov
bound
mov
cmp
or
in
sbb
push
and
xchg
bound
popf
or
xor
cs
(bad)
(bad)
mov
stc
fistp
jp
sti
push
inc
push
cwde
shr
out
cdq
lds
dec
in
fs
lock
jp
in
test
mov
out
addr16
lock
fnstenv
std
cmp
adc
icebp
mov
jg
cmp
aaa
xchg
push
pop
je
pop
mov
dec
les
jno
addr16
les
adc
cmp
ja
xchg
jl
inc
je
fcomi
mov
push
push
imul
(bad)
jge
fidivr
scas
into
jne
dec
mov
outs
adc
and
enter
ins
fistp
mov
lahf
rol
scas
std
cmp
ret
imul
in
mov
sbb
sub
enter
test
lea
sbb
adc
out
shl
sbb
pusha
aaa
lods
hlt
mov
cmp
mov
outs
mov
in
cmp
push
(bad)
add
mov
push
imul
ror
stc
jmp
push
sbb
jno
in
push
fwait
xor
push
(bad)
push
pop
(bad)
xlat
add
pop
dec
popa
js
mov
js
or
jns
addr16
jbe
xor
int3
dec
pop
test
lods
ror
xchg
push
arpl
jnp
imul
outs
push
dec
xchg
ror
outs
addr16
xchg
daa
mov
add
jo
pusha
jb
cmps
jno
push
imul
xchg
pop
mov
fcom
mov
dec
xchg
cdq
inc
sahf
loopne
pop
dec
inc
rcr
mov
jne
or
test
cmp
stos
push
sub
pop
lahf
cmp
ss
cmps
sub
cmc
lods
je
sbb
das
mov
dec
dec
xchg
cmp
push
jns
push
nop
or
icebp
lds
adc
xor
pop
mov
mov
ror
jne
imul
(bad)
dec
das
dec
xchg
hlt
fidivr
mov
sbb
out
cmp
aad
mov
pop
xor
clc
je
(bad)
cld
xor
pop
int3
push
sub
imul
aad
aaa
cmps
sub
dec
mov
adc
sbb
das
cmp
add
mov
imul
out
mov
jecxz
fdivr
xor
daa
lds
pop
jmp
and
hlt
(bad)
(bad)
cmp
arpl
push
xor
stos
sub
cmps
es
adc
jl
pop
(bad)
rcl
jns
cmps
dec
pop
sbb
and
mov
repz
cs
dec
push
inc
inc
das
jne
js
push
scas
gs
ret
rcr
jge
out
inc
pop
jmp
mov
cmp
les
rcr
push
or
inc
cs
cmp
test
scas
mov
jne
(bad)
adc
pop
cmc
ret
fstp
mov
mov
and
into
or
sub
inc
in
(bad)
popa
stos
add
cdq
mov
not
add
or
push
jecxz
mov
xlat
add
jg
cdq
sbb
sub
movs
outs
push
in
clc
sub
push
adc
repnz
push
arpl
loop
xchg
xor
adc
dec
jmp
mov
addr16
or
pop
or
mov
or
into
test
fst
jmp
sahf
cmp
push
bound
mov
pop
inc
sub
jb
jmp
ins
into
push
shl
jo
arpl
imul
and
mov
mov
xor
out
scas
inc
mov
mov
addr16
ror
or
pop
es
out
cwde
ja
test
cmc
jmp
sbb
mov
rcl
in
jmp
or
cmp
ret
jmp
push
inc
sbb
xchg
inc
mov
cli
push
add
je
cmp
stos
xchg
out
jb
stos
push
dec
scas
xor
gs
enter
(bad)
int3
dec
pop
out
xor
sahf
mov
push
add
cmc
mov
adc
add
test
mov
mov
ds
sbb
mov
jb
sbb
pusha
aad
push
or
ins
(bad)
push
popf
or
(bad)
mov
mov
loopne
push
or
aaa
repnz
pusha
pushf
jae
pop
and
xchg
adc
das
shl
ins
inc
(bad)
aas
or
mov
mov
lods
mov
fld
mov
mov
pop
push
icebp
xor
push
in
movs
pop
pop
dec
repz
pop
std
or
daa
push
movs
jge
pop
or
ds
imul
leave
retf
clc
dec
pop
jmp
mov
mov
jnp
(bad)
loope
fldenv
rcr
pusha
cmp
xor
imul
(bad)
je
jp
add
cmc
cmc
push
sub
adc
mov
hlt
jb
jne
scas
imul
jmp
sbb
cmp
repz
jmp
sar
arpl
cmp
push
popa
jmp
js
test
mov
(bad)
jmp
push
(bad)
std
iret
daa
out
aad
pop
adc
repnz
push
mov
adc
add
daa
xchg
fchs
mov
push
and
movs
rol
retf
call
adc
jmp
in
std
xchg
mov
mov
push
ret
cmps
push
cmp
int3
stc
push
jmp
lea
sbb
inc
push
clc
clc
or
rcr
push
or
test
mov
mov
mov
pushf
mov
push
rol
adc
es
mov
(bad)
mov
sub
pop
int
enter
enter
pop
(bad)
(bad)
shr
push
or
retf
and
sub
(bad)
xlat
imul
dec
jmp
ffreep
jb
sahf
sbb
inc
outs
mov
arpl
cmp
popa
imul
xor
sbb
je
pop
mov
mov
dec
mov
dec
jbe
push
push
sbb
jmpw
cli
les
mov
dec
and
cmps
daa
test
pop
dec
je
in
nop
add
push
imul
push
sti
sub
int3
and
outs
and
loope
and
push
xchg
pop
dec
mov
repz
lds
dec
xor
out
xchg
call
sbb
(bad)
test
test
mov
xchg
xchg
gs
stc
call
jp
jae
mov
in
stc
push
stos
inc
out
sub
dec
arpl
ss
pop
nop
sar
loop
jecxz
xor
mov
(bad)
dec
and
xor
call
adc
mov
push
push
add
(bad)
jge
jecxz
mov
ss
add
push
fs
(bad)
cmp
and
int
test
jecxz
push
ror
aas
and
nop
std
jmp
mov
icebp
shr
inc
(bad)
lods
retf
mov
and
sar
mov
cmp
ds
loop
pop
popf
pop
push
jno
sub
mov
cli
or
jecxz
push
mov
inc
push
mov
pushf
jp
fwait
jle
sub
imul
jne
cmp
adc
mov
mov
fsub
mov
scas
mov
push
(bad)
adc
int3
in
push
and
add
dec
jae
in
test
mov
jno
icebp
inc
ss
shl
call
js
pop
nop
fisub
mov
das
rcl
repnz
iret
fistp
aam
les
push
xor
ds
pop
cli
ins
mov
sbb
pop
int
iret
push
push
jnp
out
push
pop
xor
sar
add
in
not
test
inc
jne
inc
sub
nop
or
pop
int3
js
call
and
and
imul
jae
pop
outs
mov
aad
dec
or
stc
loop
jno
fild
dec
pusha
fmul
cmp
jmp
imul
loopne
push
movs
jecxz
jae
iret
dec
push
mov
adc
sbb
retf
test
sbb
in
inc
xchg
or
adc
pop
sbb
bts
enter
mov
ret
mov
cwde
jmp
in
in
sbb
out
sub
jnp
push
ds
lahf
(bad)
sti
sbb
sti
jae
in
je
xchg
mov
sbb
sbb
xor
and
bound
pop
add
retf
aaa
jns
mov
std
movs
pop
into
idiv
cli
sub
dec
pop
or
icebp
mov
xchg
add
neg
mov
push
out
dec
pop
nop
adc
mov
and
or
mov
jecxz
xchg
jge
xor
mov
in
(bad)
rcl
lahf
test
jg
fwait
outs
les
shl
xchg
xchg
aas
sti
pop
push
in
rol
mov
mov
cmp
imul
add
or
mov
mov
xor
pop
push
sbb
call
pop
mov
dec
sub
fcomp
and
adc
mov
xchg
mov
dec
arpl
jl
xor
loop
jecxz
aas
lahf
xchg
scas
cmps
and
jg
push
leave
dec
or
test
jno
aaa
mov
xor
add
cld
(bad)
jb
dec
pop
repz
scas
pop
adc
arpl
and
cmp
out
mov
sub
aad
shr
(bad)
sti
jo
and
inc
xchg
mov
mov
mov
push
push
mov
and
iret
repz
adc
jns
cmp
arpl
std
mov
test
jno
bound
loop
push
fisttp
cmp
(bad)
or
bound
fwait
out
or
inc
jmp
pop
ins
sbb
cli
xchg
shl
jmp
and
adc
popa
push
add
out
push
cld
in
cwde
mov
sbb
clc
test
jg
adc
sbb
lds
fdivr
jne
test
fdivr
cmp
mov
mov
pop
sbb
leave
jae
std
cmc
mov
push
or
jae
cmp
rcr
or
(bad)
repz
push
lods
retf
loop
push
pop
in
sbb
imul
inc
ror
xlat
mov
call
jne
add
mov
add
push
xlat
rol
fst
sub
cmp
add
pushw
aas
test
bound
sub
cwde
mov
rcl
sbb
cmp
add
xchg
out
in
out
into
jo
sbb
or
fld
cmp
or
xor
xor
cmp
out
pop
(bad)
call
inc
out
push
xor
push
stc
jbe
add
pop
or
sbb
sbb
sub
sar
lods
retf
out
cmc
sbb
jecxz
test
stos
mov
adc
jae
and
inc
cld
mov
pop
lods
xchg
sub
repnz
retf
cld
pop
xor
xchg
sbb
cmps
and
xchg
sub
pop
test
push
popf
mov
pop
ret
ds
xor
lahf
ja
mov
sbb
ins
mov
test
arpl
cli
pop
sub
pop
xchg
sahf
xchg
test
push
sbb
adc
in
add
xchg
mov
pop
xor
mov
mov
fdivr
sub
stc
mov
xchg
adc
arpl
into
sub
mov
out
mov
xor
stos
sbb
cmp
mov
sub
cmp
rcl
mov
cli
push
ret
cli
out
xchg
int
repnz
into
sub
jno
sti
pushf
jp
jne
rcl
cmp
jg
or
sbb
sub
in
jl
xor
cs
out
push
mov
dec
ret
xchg
xor
xchg
pop
imul
out
cld
cmc
fcmovbe
aas
mov
fcmovbe
mov
punpcklbw
cdq
adc
(bad)
das
fwait
push
adc
(bad)
pushf
shr
scas
aad
loop
adc
jl
sahf
jno
cmp
mov
(bad)
lahf
out
xchg
jle
mov
xor
inc
enter
dec
mov
mov
mov
lds
and
and
xor
push
ret
hlt
mov
mov
minps
mov
retf
mov
jne
ds
(bad)
fild
call
in
(bad)
stc
test
(bad)
fidiv
adc
sahf
cmc
aaa
xlat
pop
push
and
sub
mov
cmp
sti
sbb
push
stc
and
cmc
sub
pop
lahf
sub
addr16
push
jecxz
int
fwait
dec
nop
lods
popa
add
out
mov
(bad)
xor
cmps
div
mov
mov
and
js
retf
les
ret
test
inc
push
jb
sbb
cmp
push
and
nop
out
push
add
inc
jo
jmp
pushf
mov
jne
adc
and
pop
sub
sbb
add
fidiv
xchg
test
jb
fdivp
mov
mov
cmp
retf
and
hlt
lods
inc
mov
push
cs
xchg
dec
into
mov
mov
mov
jae
sub
cwde
jl
neg
sub
push
movs
loopne
sahf
leave
mov
inc
(bad)
stos
mov
in
mov
imul
add
mov
jmp
int
out
cmp
push
lock
in
icebp
xchg
mov
pusha
movs
adc
sti
pop
pop
ins
sti
ret
add
add
pop
(bad)
out
adc
addr16
sbb
jle
jl
mov
test
jmp
mov
sahf
add
xor
scas
test
ins
mov
ins
xchg
sub
xchg
pop
movs
dec
clc
push
add
or
ror
pushf
mov
or
movs
enter
pop
(bad)
dec
cmp
idiv
dec
es
pop
movs
call
mov
and
sti
mov
inc
(bad)
(bad)
pop
mov
dec
cmp
or
add
mov
adc
pop
add
movs
call
in
rcl
mov
xlat
shr
lods
inc
jl
push
test
xchg
sbb
(bad)
xlat
in
in
mov
adc
lds
mov
ror
daa
imul
cwde
fwait
pushf
mov
jge
out
jecxz
stc
fucomp
xchg
ins
in
loopne
les
aas
push
sub
xlat
cmp
fmul
stos
push
repnz
lahf
pop
stc
bound
retf
fisubr
(bad)
shr
icebp
jbe
data16
dec
(bad)
dec
add
pusha
dec
dec
xor
mov
bound
mov
or
lea
mov
outs
add
ins
aam
cmp
push
icebp
addr16
push
cmps
mov
and
popa
out
or
jne
jno
and
ret
adc
push
and
test
hlt
loop
sahf
jne
sbb
pop
inc
sub
fdiv
mov
sti
enter
pop
fcmovne
jbe
dec
int
jno
xor
ja
mov
data16
mov
dec
bound
push
imul
xchg
xlat
cmp
mov
jecxz
jle
pusha
call
sbb
or
pop
push
call
out
sti
ds
sub
add
cdq
inc
add
sbb
push
mov
sub
jp
push
sbb
jnp
retf
or
(bad)
arpl
hlt
icebp
mov
pop
sbb
mov
call
add
xchg
push
shr
sub
pop
loope
in
outs
dec
cld
add
fs
sahf
and
push
jne
push
mov
mov
dec
imul
fnsave
push
js
sbb
mov
mov
addr16
jle
call
xchg
out
dec
inc
mov
or
push
push
dec
rcr
mov
xchg
cmps
adc
lea
dec
fnstenv
sub
mov
sub
push
scas
aaa
rcl
xchg
test
cwde
das
mov
fidivr
or
cmps
cmp
dec
pop
jns
repnz
shl
mov
stos
movs
mov
movs
or
sbb
fstp
arpl
add
leave
xchg
shr
push
adc
mov
dec
mov
push
jmp
jecxz
fld
es
imul
bound
inc
and
idiv
(bad)
sub
push
sub
sub
fldcw
add
repnz
rcl
fisttp
jge
jb
test
fdivr
clc
dec
sbb
dec
pop
in
mov
movs
or
xchg
adc
and
pop
das
adc
push
test
fist
add
jmp
cwde
jge
jae
(bad)
in
ret
es
pop
mov
pop
inc
out
retf
rol
fistp
pop
scas
(bad)
push
jno
xchg
pop
adc
test
xlat
aad
jmp
iret
test
mov
enter
neg
push
sbb
rol
xchg
inc
jae
mov
fistp
ss
mov
or
clc
enter
mov
xchg
jbe
aas
pushw
sbb
nop
das
pop
jo
add
push
stos
push
xchg
retf
int3
jp
sub
xchg
aam
inc
cmp
enter
(bad)
iret
clc
(bad)
mov
ins
push
inc
ins
icebp
stos
mov
sbb
xor
push
shr
(bad)
jmp
pop
(bad)
not
xchg
add
int3
(bad)
(bad)
in
xor
fild
fist
xchg
jns
inc
push
or
pop
sub
js
cs
push
lea
ret
fistp
inc
inc
mov
mov
push
jge
fs
mov
pop
xchg
shr
lods
pop
movs
fsubr
fdivr
push
cli
xchg
popf
scas
das
test
movs
jae
icebp
cmp
pusha
mov
call
fstp
cmc
mov
sub
outs
pop
dec
imul
loope
leave
push
dec
sar
sub
push
fldcw
loope
push
adc
xchg
ret
dec
loopne
cmps
mov
push
sbb
jecxz
mov
jns
jne
les
and
jno
cs
out
xchg
fcom
imul
push
push
fnclex
xchg
mov
jmp
mov
lahf
and
sbb
or
lahf
lahf
dec
out
cmovl
cmp
test
popf
sub
sbb
lods
test
jp
sbb
or
inc
test
popf
clc
(bad)
les
lds
jl
sub
or
add
pop
xor
mov
test
xchg
mov
add
retf
(bad)
sub
sbb
lock
cli
aas
xor
enter
pop
div
ret
xor
mov
adc
push
xor
push
test
sub
dec
dec
iret
pop
push
sub
cmp
push
test
xor
test
jl
outs
cwde
push
(bad)
fldenv
jb
les
aam
les
int
xchg
lods
fadd
push
pop
push
ror
add
inc
sar
pop
cmp
in
jbe
mov
repnz
iret
jl
add
or
sbb
push
sub
fs
sar
cs
repnz
mov
out
sbb
movs
repz
push
adc
loopne
(bad)
lock
test
sub
and
jmp
js
ja
add
jnp
hlt
add
and
mov
xor
cmp
cld
mov
jo
adc
pop
mov
cmps
xchg
mov
inc
or
mov
jo
dec
in
jmp
xor
stos
or
jne
and
mov
and
dec
sbb
xor
loopne
pop
hlt
addr16
mov
fstp
xchg
mov
sahf
leave
and
mov
sbb
test
adc
int3
sbb
xchg
cmps
(bad)
call
mov
mov
fwait
pusha
sbb
sti
adc
das
mov
sbb
jne
adc
shr
scas
inc
mul
mov
cmp
sbb
sbb
xchg
mov
(bad)
mov
sahf
push
pop
xchg
or
mov
cmp
cmps
je
and
sub
mov
mov
ins
sti
out
sbb
cwde
repz
into
sub
sbb
loopne
imul
mov
test
cmp
jne
out
retf
pop
push
push
push
mov
arpl
add
add
js
(bad)
add
xor
sub
xchg
adc
mov
sti
call
pusha
fdivr
leave
mov
shl
rcr
mov
arpl
push
jmp
ds
xchg
jbe
ja
fs
inc
fadd
mov
mov
retf
fstp
jne
xchg
(bad)
xchg
mov
and
dec
int
das
sbb
jle
call
pop
jae
mov
sub
cmps
pushf
sbb
add
xchg
aaa
sub
add
lods
xchg
repnz
push
fst
(bad)
(bad)
stc
out
cmp
daa
cmps
xor
mov
cmc
ret
outs
loop
arpl
xor
xchg
pop
jb
outs
and
adc
push
xor
jne
call
out
(bad)
and
or
sbb
adc
mov
loop
mov
push
xchg
hlt
mov
push
fcmovnb
jno
inc
xchg
aaa
and
add
sbb
out
das
lods
or
clc
jg
test
out
push
dec
call
sub
mov
xor
xor
pusha
leave
adc
dec
pop
dec
inc
std
and
mov
stos
mov
jp
jmp
xlat
shr
dec
leave
lahf
cmps
sub
sub
icebp
or
iret
lahf
mov
cmp
pop
or
jb
inc
adc
pop
daa
xchg
addr16
movs
je
xchg
xlat
and
mov
or
mov
dec
xchg
loop
cmp
mov
test
test
fdivr
jge
cmps
push
ret
adc
lahf
inc
jp
adc
cmc
repz
push
sub
jmp
dec
data16
jmp
dec
pop
rcr
add
popa
in
das
sub
aam
aaa
and
mov
xchg
mov
push
sbb
lods
mov
mov
outs
lock
xor
adc
or
xchg
push
punpckhdq
sar
scas
or
lods
mov
retf
sub
xor
cmps
fs
ss
mov
mov
xchg
dec
in
test
cli
fistp
test
sahf
add
arpl
cmp
pop
mov
mov
adc
cwde
adc
test
mov
lea
ret
dec
cmp
sbb
xchg
inc
dec
pusha
dec
leave
dec
out
jmp
xchg
mov
mov
fisttp
mov
jns
movs
fcom
add
mov
mov
pop
adc
movs
push
fwait
dec
aas
inc
imul
stos
inc
mov
jecxz
adc
fstp
imul
lods
lahf
and
and
lods
jae
inc
add
jo
push
push
shl
shl
and
mov
jg
or
push
mov
adc
loopne
jg
ret
call
add
and
into
das
ins
std
cmp
jae
mov
mov
in
mov
in
mov
inc
in
movs
mov
sbb
push
xor
fstp
adc
inc
pop
pop
pushf
loop
in
jae
inc
ins
push
pushf
in
pop
jmp
xor
imul
adc
or
(bad)
stos
clc
arpl
dec
lods
jle
sti
cmp
push
loopne
lock
push
mov
dec
inc
mov
jl
inc
mov
jp
dec
inc
jp
jnp
add
sub
pop
jmp
adc
pop
gs
retf
adc
pop
sbb
nop
and
inc
icebp
sbb
gs
cmp
retf
movs
pop
add
mov
cmp
xor
add
mov
cld
xchg
stc
sysenter
call
out
fild
daa
xchg
mov
fwait
pop
(bad)
cmp
jne
or
cs
out
aad
jge
pop
xchg
xor
push
pop
aas
and
aaa
mul
rcl
sub
(bad)
daa
sbb
fldenv
call
and
js
repnz
test
popf
jnp
xlat
sahf
mov
mov
and
mov
and
or
shl
xchg
inc
(bad)
movs
retf
cld
pop
inc
jg
outs
gs
inc
jnp
dec
(bad)
xor
sub
out
(bad)
idiv
loop
or
xor
pop
mov
vpunpcklbw
test
xor
(bad)
in
das
jmp
std
scas
or
imul
lahf
push
pop
sub
xor
or
sub
xchg
dec
xor
sti
mov
mov
sbb
test
mov
mov
hlt
dec
and
mov
sbb
ds
xchg
cmp
xchg
sub
movs
bound
xlat
adc
sar
call
mov
add
shl
mov
mov
push
mov
sar
into
mov
out
mov
ficomp
jbe
aam
leave
xlat
cmp
imul
xchg
push
mov
cmps
inc
(bad)
mov
out
cmps
gs
xlat
jnp
mov
mov
sbb
pop
mov
dec
push
rcr
cs
pop
in
mov
push
mov
or
stos
mov
sub
retf
shl
pop
add
pop
xchg
jae
xchg
movs
sub
inc
push
lods
repnz
out
or
repz
push
int
ja
stos
(bad)
jecxz
inc
mov
or
jns
bound
mov
(bad)
or
add
mov
push
inc
pop
mov
or
xlat
out
rol
cdq
mov
es
call
inc
xchg
out
push
imul
je
pop
(bad)
sbb
not
les
mov
fstp
xchg
mov
add
mov
test
out
mov
jno
sub
stc
add
inc
aaa
fwait
dec
pop
push
xor
(bad)
mov
jno
adc
mov
pop
sar
test
mov
push
xor
dec
test
jb
into
pop
sub
jecxz
loop
mov
push
ror
cli
into
or
into
jecxz
xor
and
ins
mov
(bad)
movs
push
ficom
idiv
rcl
inc
jecxz
dec
jmp
rcl
cld
addr16
ds
add
pop
or
xor
adc
leave
mov
inc
push
test
dec
out
retf
add
cdq
pop
pop
ror
add
add
clc
ins
addr16
add
pop
dec
mov
jl
xchg
or
sbb
jbe
add
or
dec
cmp
mov
dec
push
and
in
dec
cld
neg
sti
mov
add
and
pop
mov
sub
inc
fsubr
test
xchg
fldcw
xor
push
jecxz
push
fs
push
xchg
push
ficomp
jp
(bad)
pop
sbb
or
out
mov
movs
movs
jno
loopne
lea
sahf
outs
(bad)
aad
mov
xchg
sbb
jmp
call
cmps
inc
es
mov
xor
int
lods
into
lgs
mov
cmp
fcom
cmp
cld
ror
pop
shr
push
dec
ins
shr
mov
lahf
xor
inc
add
scas
ss
adc
cmp
add
test
pop
imul
jmp
xchg
mov
inc
scas
or
outs
pop
xchg
cld
popf
test
mov
aad
popa
mov
aad
out
inc
bound
push
xchg
rep
mov
jle
sbb
gs
ins
mov
pusha
(bad)
jecxz
mov
add
sbb
sbb
push
xor
mov
test
mov
jae
adc
aad
leave
sbb
cmc
sbb
int
(bad)
movs
push
cmp
xchg
xor
jne
fcom
xchg
mul
jns
lds
inc
jp
scas
push
adc
or
cmp
cdq
sub
mov
arpl
(bad)
fadd
mov
inc
sahf
push
dec
in
in
out
lods
xchg
stos
xchg
cmc
leave
jle
ins
adc
pop
cli
fsubr
fwait
jle
es
push
imul
out
out
out
mov
mov
jnp
loopne
call
adc
xor
mov
lds
mov
or
cmp
mov
nop
out
push
or
xor
pusha
outs
pop
fist
dec
pop
add
or
push
scas
push
sbb
add
mov
pop
mov
js
inc
aaa
cmp
retf
xor
xlat
aas
or
aam
(bad)
icebp
scas
fldenv
adc
push
int3
pop
leave
sub
int
xchg
mov
shl
outs
(bad)
pop
out
and
xor
fstp
sub
pop
cmp
and
adc
sub
sbb
not
add
xor
mov
jb
mov
mov
pop
and
stos
out
or
xchg
jne
dec
push
dec
popf
std
jmp
dec
stc
xor
push
loope
in
inc
sub
fsub
and
jne
mul
stos
movs
ds
or
int
aas
xchg
xor
add
sbb
imul
mov
pop
mov
stos
jno
test
loop
mov
cmc
mov
fsubr
xchg
mov
xor
cmp
adc
xor
push
sahf
icebp
push
xchg
mov
pop
repz
popa
add
cmc
imul
inc
fdiv
cmp
and
call
jge
out
repnz
mov
outs
adc
loop
sub
push
inc
jbe
adc
in
popf
ret
push
shl
out
xchg
sahf
pusha
inc
cli
jb
mov
mov
pop
stos
int3
arpl
es
ret
cli
ficom
ds
(bad)
ja
pop
sub
arpl
inc
aas
xor
mov
xchg
or
mov
repz
jge
xor
jle
repnz
dec
cmp
and
hlt
jno
sub
(bad)
addr16
loop
out
cmp
mov
in
shr
aaa
outs
in
mov
pop
test
add
std
lahf
xchg
les
push
jmp
pop
(bad)
add
add
push
leave
dec
aam
test
or
push
add
sbb
sahf
retf
sub
sbb
mov
neg
push
dec
les
mov
imul
aas
jmp
cmps
in
loop
jg
bound
fadd
in
cmp
xor
xchg
test
loop
push
in
pop
mov
call
push
lods
add
jns
cli
cdq
lods
jecxz
out
loopne
jbe
loope
pop
ins
push
movs
cli
jmp
aam
mov
pop
std
pusha
dec
dec
test
jns
mov
sbb
leave
jo
mov
push
inc
jo
cli
jnp
fisubr
push
cs
mov
jg
dec
mov
push
shl
pop
inc
or
lods
inc
lock
xchg
int
jp
test
(bad)
jecxz
rcr
dec
jno
jmp
enter
sbb
(bad)
(bad)
retf
ds
add
jnp
in
stos
ror
mov
(bad)
pop
jecxz
ret
enter
out
mov
ror
and
mov
mov
mov
fstp
xchg
bound
and
push
sbb
sbb
ins
mov
nop
and
std
mov
aad
mov
sbb
lods
cmp
dec
inc
mov
test
sti
(bad)
fild
loop
rcl
adc
ret
cmp
xchg
int3
loope
not
call
popf
mov
das
scas
pop
fwait
inc
popa
and
test
(bad)
cdq
int
jge
sub
jmp
jno
loopne
es
push
cmps
xchg
fstp
in
mov
je
cli
xor
push
ror
fimul
mov
dec
jne
mov
fisttp
pop
pop
sub
or
cs
or
inc
dec
jno
push
sub
ds
cmp
cmp
mov
outs
sbb
in
push
inc
movs
inc
mov
cmps
aas
mov
sbb
int
fs
(bad)
sar
(bad)
sahf
or
adc
lods
leave
push
test
fwait
ja
or
div
mov
pop
retf
sub
pop
push
and
jne
dec
dec
shr
std
sbb
jp
pop
(bad)
mov
pop
jg
jne
and
movs
mov
pop
js
push
push
dec
push
cs
mov
dec
pop
xchg
jg
adc
(bad)
retf
(bad)
sub
cmp
mov
cmp
add
push
mov
add
hlt
mov
xchg
add
neg
xor
add
adc
and
pop
jecxz
cli
aas
mov
pop
pop
inc
popf
pop
outs
sub
mov
sahf
test
or
rcr
or
stos
inc
lea
out
pop
shl
lahf
sub
iret
lds
sbb
adc
cli
push
xchg
pop
mov
mov
add
sbb
push
mov
push
and
in
cmp
mov
jle
add
jle
aad
(bad)
aam
js
loop
(bad)
dec
cmp
cmp
lahf
inc
rcl
outs
jns
repnz
lods
or
pop
movs
sbb
fild
fwait
xor
add
xlat
call
mov
adc
mov
sbb
pop
jo
mov
jmp
sbb
ds
(bad)
push
repnz
sbb
xchg
xlat
mov
clc
mov
aam
mov
rcl
xchg
ss
popa
pop
lock
add
adc
lods
cmp
movs
adc
aam
std
outs
dec
jnp
or
shl
mov
bound
xchg
xchg
test
ds
sbb
out
pushf
adc
retf
in
cmp
in
icebp
stc
fist
data16
cmc
jmp
sti
ret
jo
(bad)
jmp
mov
mov
lea
dec
lds
pop
jp
arpl
mov
push
jae
xor
dec
cmp
jb
mov
jg
ret
(bad)
jo
enter
addr16
sbb
stos
pop
xor
mov
out
nop
aad
je
xor
pop
(bad)
pop
mov
stos
arpl
dec
loopne
xor
add
stc
fcomp
adc
or
ror
cmp
and
div
iret
mov
cmp
mov
test
popa
shl
mov
jb
imul
dec
stos
jl
adc
xchg
fisubr
mov
call
call
pop
or
sti
mov
add
mov
out
stos
hlt
push
xchg
sbb
jmp
and
pop
out
sti
shl
inc
sbb
xor
xchg
dec
outs
jmp
dec
or
dec
pop
(bad)
mov
jne
pop
fs
push
sbb
(bad)
std
add
nop
xor
pop
mov
xor
sub
xor
pop
mov
mov
push
in
mov
mov
and
(bad)
lock
inc
mov
sub
mov
mov
jno
loop
dec
xchg
(bad)
mov
fld
push
lock
fist
ret
aam
lock
out
cmp
call
mov
cmp
cwde
adc
les
das
outs
cmp
sar
jb
jnp
jbe
retf
or
dec
jae
lahf
retf
(bad)
add
add
loopne
or
test
scas
sub
add
jbe
out
pushf
rcl
inc
es
mov
mov
inc
jo
lahf
mov
nop
add
xchg
fisttp
or
mov
data16
cmp
xchg
mov
pop
dec
call
sub
mov
leave
inc
mov
and
xchg
xchg
test
and
adc
and
(bad)
pop
inc
jmp
mov
ficomp
es
int
dec
xchg
scas
out
repz
and
mov
dec
scas
cmp
sti
sub
xor
jp
out
lds
cld
pushf
adc
sub
fsub
mov
mul
and
jb
jne
jmp
iret
in
cld
jp
adc
scas
xor
js
cmps
(bad)
sbb
xor
jmp
jb
mov
leave
xchg
popa
fld
rol
and
out
jbe
out
in
in
and
or
inc
add
retf
pushf
fidivr
rcl
jmp
dec
jmp
ins
cmp
sbb
mov
(bad)
mov
add
mov
inc
lods
jo
stos
popa
jmp
xchg
xchg
adc
or
repnz
sahf
xchg
retf
rol
xchg
jge
jge
mov
div
stos
lds
and
inc
movs
sbb
xor
add
sub
mov
rol
cmp
(bad)
jge
xchg
xchg
mov
movs
sub
shr
xor
pusha
sub
cmp
mov
lock
jnp
or
push
popf
icebp
int
cdq
push
mov
add
adc
sub
or
mov
popa
fcomp
inc
push
ins
add
(bad)
jmp
jo
mov
leave
pop
dec
pop
sub
in
shr
adc
rcr
and
repz
inc
test
(bad)
and
mov
or
jmp
das
pop
pop
dec
jne
adc
ret
sbb
pop
adc
adc
lods
mov
add
mov
xor
mov
jmp
mov
xor
pop
fisttp
pop
mov
adc
mov
xchg
xchg
and
hlt
inc
idiv
sbb
arpl
push
and
adc
jns
stos
pop
(bad)
pop
addr16
push
dec
and
ja
fcomp
or
movs
je
pushf
xchg
leave
mov
cmp
pusha
push
add
inc
addr16
ret
dec
cmp
ja
mov
fwait
xor
test
aaa
mov
int3
add
mov
mov
pusha
std
(bad)
xor
test
xchg
(bad)
mov
fwait
xor
mov
sub
ds
push
xor
jne
add
xchg
loop
test
stos
add
repnz
pop
into
ins
sub
sub
in
mov
cmp
cs
das
mov
jle
ds
pop
and
sub
xor
push
stos
dec
mov
push
sbb
fisubr
add
push
ss
out
das
or
or
inc
iret
addr16
ds
sbb
imul
mov
or
push
mov
push
fmul
xor
xor
fs
or
push
pop
(bad)
pop
movs
call
imul
clc
inc
ror
in
xchg
cdq
inc
sbb
aaa
rol
jae
mov
or
xlat
retf
xor
call
xchg
fild
or
fadd
or
aad
mov
les
(bad)
mov
mov
xor
xchg
xlat
inc
pop
call
fs
rcr
xor
das
cmp
movs
sbb
shl
and
les
ret
test
mov
xchg
enter
out
or
inc
movs
lock
push
dec
loope
inc
cmp
scas
inc
dec
stc
or
fisubr
out
lahf
adc
push
inc
jne
inc
and
test
sub
out
icebp
cmp
mov
mov
pop
imul
mov
lock
cli
pop
pop
sti
inc
cmp
in
or
mov
retf
xchg
ss
call
mov
cld
jl
in
sahf
xchg
cmp
jp
and
gs
push
inc
cli
inc
cmps
out
xor
popa
(bad)
fldenv
test
push
pop
pop
mov
jg
data16
scas
fadd
push
xor
in
cdq
lahf
add
ds
ffreep
add
xchg
push
std
sbb
inc
and
push
imul
daa
push
clc
nop
aas
add
loop
mov
dec
mov
retf
icebp
ins
jge
popf
enter
mov
mov
out
push
es
test
setns
out
test
sbb
xchg
in
test
stos
pop
int3
adc
mov
dec
es
adc
xchg
jns
stos
inc
popf
test
test
call
cld
ins
push
xor
repz
xor
jecxz
in
lds
mov
ins
dec
mov
cdq
in
aaa
cmp
shl
lea
dec
adc
fcom
std
add
add
push
push
or
xchg
out
ror
mov
dec
xchg
lock
sub
mov
pop
hlt
je
out
inc
lods
sub
push
dec
sbb
xchg
push
jp
imul
cmp
lods
pop
mov
retf
jne
and
pop
data16
loope
mov
pop
int3
jge
out
push
ja
pop
cdq
ja
push
mov
cmps
lock
std
pop
mov
jno
addr16
ret
fisttp
rol
inc
xor
mov
int
dec
ins
jge
(bad)
jge
repz
or
push
mov
mov
pop
xchg
xlat
cmps
addr16
(bad)
add
test
add
stos
mov
push
mov
jmp
rcr
imul
mov
xchg
add
lods
lahf
dec
in
cmp
aam
push
xchg
jb
aas
or
mov
loopne
xor
pop
sbb
test
sahf
daa
stc
data16
jnp
in
or
cwde
adc
inc
(bad)
cmp
std
cdq
mov
xchg
imul
jnp
fnstenv
rcl
mov
push
jmp
aam
iret
inc
xchg
xor
and
push
xor
push
mov
and
(bad)
adc
push
xor
dec
icebp
add
sbb
or
fistp
ucomiss
mul
mov
push
mov
ror
or
cld
scas
out
xchg
or
pop
push
push
scas
and
sub
pusha
lea
jmp
verr
(bad)
or
in
jge
inc
cmc
push
in
cwde
mov
stos
aas
xchg
dec
das
push
xchg
add
mov
rol
push
mov
push
pushf
in
mov
jecxz
cmp
bound
cli
adc
adc
pop
sbb
stc
stos
xor
shl
mov
ret
ds
sub
sti
and
or
jns
pop
xor
popf
adc
stc
dec
outs
hlt
mov
fisub
imul
inc
std
and
outs
xlat
inc
daa
arpl
lods
call
iret
jns
out
and
sbb
mov
ins
sub
add
aad
jge
mov
lods
rcr
jb
imul
push
repz
or
and
sub
int3
fwait
retf
mov
push
xor
adc
jno
dec
adc
popf
xor
inc
xchg
push
out
cmp
(bad)
ins
adc
pop
xchg
rcl
daa
mov
int
nop
cmp
pop
jp
dec
and
fistp
arpl
test
int3
xchg
xchg
sar
cwde
pop
jp
scas
inc
bound
cmps
sti
inc
mov
fdiv
sar
and
xchg
loopne
jb
aam
xor
xchg
mov
push
pop
mov
sub
(bad)
cli
nop
sahf
add
jmp
outs
pop
cmps
out
pop
arpl
repnz
rcl
movs
add
pusha
jno
fcmovne
mov
dec
inc
jmp
mov
adc
ja
xchg
cld
add
and
mov
pusha
movs
jl
inc
popa
enter
into
adc
and
mov
ja
dec
and
dec
mov
sbb
mov
sub
jae
rcr
jle
pop
push
or
inc
fmul
fld
and
dec
stc
es
pop
ror
push
test
ret
mov
xor
fcom
movs
xlat
dec
pop
mov
jns
in
jns
popaw
ins
lahf
mov
jmp
mov
cmp
push
pop
inc
sbb
add
stos
pop
dec
xchg
xor
das
adc
xor
sub
pop
jae
mov
sub
xor
call
push
mov
mov
cli
sub
jne
sahf
jbe
outs
xchg
aam
aam
dec
fs
push
neg
cmp
adc
inc
inc
push
sub
mov
jle
xor
imul
push
push
sbb
push
neg
jmp
push
or
mov
popf
mov
shl
aas
bound
sub
xlat
pop
cmp
inc
js
hlt
fst
sub
test
stc
sub
lea
ja
inc
mov
sub
repz
add
popf
aad
(bad)
mov
mov
xchg
dec
test
pop
cmp
pusha
ror
pop
push
(bad)
adc
adc
aaa
sbb
pop
shl
stos
(bad)
jno
mov
movs
stos
outs
jne
jns
adc
xchg
add
xor
inc
push
fsub
inc
fisub
cmps
loope
or
test
std
xlat
cwde
ret
xchg
cli
mov
push
mov
sbb
mov
push
mov
inc
test
es
jg
push
stos
cmp
mov
iret
push
mov
sar
pop
test
jne
std
push
aaa
icebp
push
cmp
inc
xchg
adc
mov
(bad)
or
int
hlt
je
mov
in
fnstsw
cmp
xlat
outs
xor
ins
jne
popa
pop
mov
pop
xor
in
ins
dec
push
sub
adc
mul
cmp
loop
mov
mov
add
mov
adc
jecxz
test
adc
push
or
dec
out
mov
in
xchg
mov
xchg
outs
lods
mov
cs
imul
mov
bound
(bad)
shl
sti
fwait
rcr
rcl
pandn
(bad)
push
fld
xchg
out
dec
fsubr
push
mov
cmc
stc
stos
mov
test
out
pushf
popa
dec
test
mov
inc
test
jl
lods
jg
xchg
mov
scas
(bad)
sub
inc
and
leave
jecxz
fild
or
mov
movs
lods
inc
sahf
aad
or
push
iret
add
shl
mov
pop
xlat
sub
aam
mov
xor
and
mov
jno
inc
lds
adc
mov
vpmulhw
cmps
mov
rcr
sbb
push
xor
xchg
lods
in
mov
fmul
push
retf
pushf
mov
jns
adc
int3
pop
jno
imul
jp
push
pop
mov
bound
leave
push
div
cmp
push
mov
ret
pop
pop
out
icebp
inc
out
inc
cmps
ss
or
mov
mov
cmp
or
xchg
ins
sub
test
ss
nop
iret
jmp
xor
push
cmps
cmp
sub
add
jb
push
push
(bad)
xchg
mov
push
push
sar
adc
push
sbb
fwait
adc
pop
shl
mov
sbb
pop
xchg
test
pop
inc
push
js
bound
xchg
or
mov
mov
push
test
jmp
pop
sbb
pop
test
xor
jo
add
loope
xchg
enter
xor
and
cs
mov
jg
push
or
loope
push
and
mov
sbb
pop
neg
lock
pop
sbb
add
ins
int
adc
sahf
jns
jp
dec
ds
push
and
cmp
sbb
jmp
sbb
inc
into
push
fimul
(bad)
mov
add
retf
or
scas
fwait
mov
push
addr16
sbb
add
xor
sub
icebp
add
dec
mov
mov
outs
mov
ret
inc
sbb
shl
jg
cmps
repnz
std
adc
inc
in
std
push
mov
mov
mov
add
add
ds
pop
sbb
gs
mov
and
cmc
pop
mov
xor
emms
push
daa
fs
cmp
or
gs
or
aam
stc
add
jecxz
and
cmc
cmps
push
in
add
cmp
or
fistp
imul
push
xchg
mov
dec
daa
cmp
daa
aad
shl
pop
xchg
jns
jo
pop
inc
xor
jmp
ret
sub
pop
test
fnsave
add
cmp
sti
movs
push
(bad)
test
mov
mov
mov
in
lods
aam
cmps
retf
or
std
shl
rcr
mov
mov
out
pop
int3
mov
adc
cmp
and
jno
sti
int3
sahf
mov
mov
lods
popf
jle
mov
sbb
mov
outs
sbb
adc
fistp
aaa
pop
add
out
adc
inc
add
jo
aaa
ret
lea
pop
(bad)
cmp
push
push
mov
addr16
jnp
xchg
mov
(bad)
cld
nop
inc
je
test
out
add
lock
repz
push
(bad)
fs
mov
xchg
sbb
dec
sbb
ret
dec
fild
pop
ficom
test
mov
jmp
inc
mov
stos
gs
ss
pop
ins
ret
cmc
pop
adc
test
pop
pop
push
mul
outs
and
das
imul
or
cmp
sbb
jne
loope
imul
mov
push
fmul
add
pop
ja
test
scas
mov
loope
les
loope
sbb
mov
out
mov
sbb
mov
sbb
dec
pop
xor
dec
test
mov
int
jge
in
(bad)
mov
ins
jae
std
sbb
in
inc
inc
push
jge
sub
std
outs
rcr
cmp
push
daa
lahf
scas
out
and
fbstp
movs
mov
in
arpl
and
leave
push
aaa
es
xor
(bad)
rcr
xchg
addr16
out
cmp
loop
loop
xchg
scas
pop
out
mov
sub
pusha
sbb
pop
es
adc
call
leave
mov
nop
inc
ret
jnp
and
les
retf
test
adc
mov
in
(bad)
sti
pop
sbb
jbe
jmp
mov
dec
test
push
mov
push
call
cmp
mov
push
fucom
daa
(bad)
mov
dec
call
inc
mov
addr16
int
je
mov
and
(bad)
iret
in
call
inc
mov
sub
dec
xchg
ss
les
or
stc
outs
mov
pop
shl
pop
pop
jg
pop
cmc
inc
das
mov
ret
out
call
sub
add
js
ss
scas
cmps
cdq
mov
call
add
mov
sub
aaa
out
fs
ins
arpl
push
pop
jbe
lock
in
cmc
inc
xchg
jbe
loop
lods
popf
jl
movs
das
mov
push
in
push
pop
rcr
and
xor
sbb
dec
repnz
sbb
push
add
(bad)
inc
int3
mov
in
cmp
jg
fsubr
add
jnp
push
inc
xchg
adc
das
shr
jl
ja
and
loopne
adc
xor
test
in
je
pop
addr16
fwait
jb
mov
(bad)
xchg
add
hlt
stos
scas
xchg
xor
mov
shl
adc
ins
jle
mov
cmc
and
pop
pop
or
and
xor
fmul
adc
cmp
scas
cdq
sbb
outs
dec
mov
and
movs
jp
xchg
push
xchg
pop
aas
mov
pop
mov
cmp
inc
xor
sub
sbb
lods
in
call
adc
cmp
adc
fiadd
stc
scas
xor
loopne
jbe
in
sbb
jg
sub
jp
arpl
mov
pop
xchg
xchg
dec
sub
sub
push
fs
(bad)
cmp
scas
imul
push
jmp
enter
or
xor
rcl
pop
(bad)
mov
sahf
(bad)
cmp
xchg
mov
jnp
mov
push
cmp
inc
enter
enter
add
inc
test
js
lock
fisub
test
mov
and
pop
into
xchg
mov
(bad)
and
leave
daa
lea
int
sar
test
popf
lea
aad
mov
int3
cmps
mov
xor
idiv
out
sbb
ins
and
outs
mov
jmp
dec
sub
dec
fs
dec
adc
into
xor
gs
sar
arpl
push
loop
adc
jg
push
dec
or
mov
out
cmp
xor
movs
adc
shl
sbb
or
test
jae
cli
in
adc
push
jno
stc
(bad)
push
xchg
cmp
sbb
mov
cmp
add
and
inc
add
sbb
enter
push
int3
mov
dec
movs
sbb
ins
fs
in
sub
xchg
stos
pop
adc
cmps
sbb
ffreep
fbstp
popa
pop
outs
in
das
mov
adc
lods
imul
xchg
rol
rcr
sub
xchg
arpl
das
push
add
or
sub
addr16
out
xor
mov
pop
mov
or
sbb
jne
push
pop
imul
cwde
aas
xor
fiadd
stos
cmps
sbb
inc
dec
jl
sub
inc
inc
je
pop
nop
jecxz
pop
lahf
xchg
sahf
retf
mov
cmp
mov
lds
jp
sub
mov
cli
or
ds
jns
(bad)
popf
mov
pop
mov
push
and
push
ins
xchg
int
mov
(bad)
into
dec
sbb
call
outs
and
cmps
dec
dec
loop
mov
in
sbb
cmp
cs
(bad)
push
es
mov
lods
push
data16
push
ret
je
mov
cli
les
add
in
test
cmps
and
dec
loope
mov
mov
pushf
jmp
jp
cmp
les
pushf
sbb
xor
loop
neg
bound
jg
dec
call
mov
loop
jg
cwde
sub
xor
mov
jno
scas
adc
xchg
aad
inc
pop
pop
shr
cld
push
retf
lock
xchg
arpl
mov
icebp
inc
and
mov
repnz
inc
pop
leave
pop
cmc
mov
test
out
dec
cmp
neg
shr
(bad)
cmp
loope
pusha
cmp
sahf
(bad)
in
fwait
daa
pop
pushf
dec
aaa
jge
xchg
es
cmp
clc
cmp
jp
and
inc
cmps
sar
dec
clc
sub
xlat
cmp
repz
outs
jns
fidivr
out
push
xchg
call
push
test
adc
xchg
pop
mov
test
pop
not
cmps
adc
std
add
repz
sbb
cmp
shl
push
push
movs
repnz
leave
icebp
mov
push
cmp
xchg
push
mov
cmp
fwait
pop
mov
dec
or
cld
outs
fistp
movs
mov
cmp
inc
jmp
nop
fsub
std
(bad)
std
call
sbb
mov
xchg
or
sbb
ret
rol
arpl
or
sbb
add
ret
out
push
push
into
dec
mov
test
push
add
out
es
mov
xor
lock
ss
add
cmps
fnstcw
shl
out
jle
mov
xor
push
call
sub
jp
push
cmp
loopne
xchg
or
data16
cmps
outs
bound
cli
ret
and
mov
sub
mov
ret
hlt
mov
dec
imul
mov
movs
fwait
je
retf
and
addr16
sub
mov
sbb
or
pop
push
mov
push
repz
in
leave
lea
shr
ins
adc
dec
sub
fldenv
pop
sbb
add
or
ins
push
sub
push
add
pop
mov
rol
mov
dec
shl
or
cli
popa
cmp
lea
addr16
cdq
retf
lds
and
sbb
leave
stos
fs
jno
retf
add
xchg
pop
jno
push
sbb
call
jb
jmp
out
je
jp
push
or
hlt
xchg
inc
pop
mov
jmp
lods
into
pop
out
pop
(bad)
cld
push
jnp
ja
xor
das
bnd
mov
mov
sub
or
mov
xchg
in
push
nop
in
mov
test
dec
ins
std
loope
inc
push
xor
in
sub
jge
pop
mov
mov
xchg
pop
xchg
pop
mov
ja
cmc
push
(bad)
fild
inc
stos
inc
out
xchg
ret
mov
int
repz
js
loop
or
push
add
bound
jmp
push
cmc
sub
mov
xchg
mov
pop
loop
cld
fbld
inc
lods
jecxz
lock
inc
shl
fs
mov
cmc
push
push
sub
push
sub
ret
and
mov
retf
fnstsw
pop
sahf
jg
imul
cli
(bad)
and
inc
leave
mov
test
cmp
loop
mov
loope
xchg
mov
cmp
add
data16
loopne
ins
mov
(bad)
ss
pop
test
add
xchg
out
aam
jno
xor
and
lods
std
xor
cmp
cmp
and
mov
std
push
jmp
mov
in
dec
add
push
xlat
push
(bad)
jge
inc
lods
sub
aam
add
sub
lods
out
push
(bad)
adc
add
es
arpl
sbb
xchg
std
pop
rcl
int
das
xor
sti
xchg
adc
mov
xchg
fwait
and
out
jnp
add
push
aas
xor
jecxz
sbb
call
mov
sti
jb
add
lods
cmp
lods
movs
dec
gs
xor
mov
sar
xor
mov
std
mov
inc
fs
(bad)
faddp
jae
mov
xor
cmc
mov
sub
mov
sar
mov
inc
jecxz
lds
and
pop
fist
mov
xlat
ret
stc
xor
mov
or
imul
dec
add
mov
push
dec
push
xor
mov
mov
fdiv
cmp
das
pop
xor
add
ret
in
aaa
inc
call
cmp
rcr
pop
xlat
cld
mov
(bad)
inc
(bad)
scas
or
retf
jne
sub
(bad)
jns
or
es
jns
mov
outs
cmps
mov
xchg
pop
mov
je
out
aad
xlat
imul
arpl
inc
jae
sub
jo
loop
lock
mov
lds
or
mov
stos
xor
adc
cmps
neg
or
jle
es
test
cmps
add
sbb
xchg
loop
add
fldenv
dec
cli
sub
mov
es
push
xchg
int3
xchg
xchg
push
mov
clc
fs
xor
push
mov
arpl
sbb
call
or
mov
push
push
sub
xchg
mov
(bad)
mov
icebp
cmp
dec
cmps
jb
fisttp
mov
pushf
std
push
add
add
arpl
mov
xchg
mov
ds
inc
mov
mov
xchg
push
icebp
mov
adc
and
mov
jmp
pop
mov
jae
lods
xlat
call
pop
outs
stc
stos
leave
jno
lea
pusha
fldcw
aad
in
mov
inc
outs
les
xchg
or
push
mov
lods
xor
repz
and
in
jecxz
mov
outs
mov
icebp
push
jnp
mov
pop
mov
gs
mov
jl
and
fwait
ins
int3
xchg
adc
(bad)
fld
(bad)
mov
imul
xchg
dec
lods
repz
lds
adc
mov
test
(bad)
jle
inc
stos
and
pop
fistp
or
pop
inc
(bad)
out
mov
scas
jg
mov
(bad)
rcr
mov
and
pop
cmc
mov
sbb
and
pop
cmp
loope
sti
mov
cmp
je
dec
mov
pushf
fcom
push
add
dec
lods
(bad)
aam
aas
jge
xchg
cwde
outs
daa
inc
add
mov
mov
lock
dec
sahf
call
xchg
and
addr16
retf
xchg
xor
adc
cmc
or
mov
arpl
push
xor
add
mov
cmps
and
lods
cdq
mov
sbb
pop
imul
xor
std
xor
mov
xchg
fwait
jns
cld
outs
sbb
imul
arpl
or
loop
cmp
sub
scas
std
test
mov
pop
fsubr
rcl
js
or
jmp
mov
jge
xchg
out
sbb
inc
aas
out
ret
lds
pop
retf
cmp
and
cld
out
add
adc
fucomi
mov
cmc
jae
sbb
pop
mov
sub
mov
imul
jmp
dec
jl
fidiv
aas
xor
sti
in
dec
add
jo
lahf
sub
jmp
out
mov
rol
call
aas
inc
sahf
or
cwde
loopne
sub
(bad)
xlat
add
out
mov
cli
ds
push
xchg
inc
popf
mov
xlat
sbb
dec
fist
add
mov
jp
rcr
mov
imul
imul
icebp
lock
mov
or
add
shl
and
sbb
mov
jge
pusha
sar
dec
(bad)
rcl
(bad)
(bad)
in
loope
out
test
lock
dec
mov
(bad)
lea
xchg
js
out
sbb
xor
fimul
push
add
add
stos
data16
add
je
test
retf
mov
retf
add
mov
(bad)
mov
les
mov
(bad)
jbe
mov
repz
sbb
add
cmp
push
pop
dec
(bad)
mov
rol
push
(bad)
sub
rcl
in
data16
adc
hlt
retf
fisub
int
jmp
(bad)
xchg
pop
inc
les
(bad)
jb
mov
xchg
push
sbb
push
inc
loopne
inc
jo
jmp
pop
push
xchg
call
mov
mov
inc
add
inc
and
(bad)
sub
adc
sub
sub
int
add
cli
sahf
jae
ins
adc
fnstenv
ret
sub
jp
xchg
popa
call
enter
movs
xchg
lods
pushf
stos
sub
mov
add
int3
jae
(bad)
int3
or
mov
cmp
inc
mov
pop
pop
imul
inc
xchg
jl
(bad)
and
xchg
xchg
pushf
cdq
shl
mov
sahf
int
jecxz
(bad)
jmp
repnz
xor
sub
mov
in
cwde
pop
adc
xchg
mov
mov
cmp
stos
jle
sub
fs
call
pop
in
jmp
pop
mov
sub
fincstp
cmp
adc
push
xor
adc
(bad)
loope
jg
and
cmp
jae
or
push
xchg
int3
adc
mov
(bad)
and
ss
stc
pop
out
sahf
ins
or
sbb
jae
or
cmps
xor
cmc
jg
sti
popf
sub
mov
enter
xchg
sar
sub
mov
inc
mov
imul
pop
dec
dec
mov
aam
sub
inc
jecxz
mov
cmps
shl
cmps
sub
aad
adc
xchg
cmps
adc
jp
retf
xchg
sub
or
xor
sbb
cdq
xlat
push
int
jns
push
and
fisttp
jge
movs
int
mov
jmp
lods
cmc
cdq
mov
mov
movs
sub
sbb
ins
vhsubps
xchg
sahf
ins
or
and
loopne
dec
movs
mov
es
arpl
pop
outs
cmp
sub
push
and
jns
jo
cmp
inc
mov
ins
and
repnz
jo
jbe
sub
mov
inc
fld
pop
push
and
imul
inc
rcl
pop
dec
lahf
inc
ret
nop
mov
stos
mov
rol
pushf
or
loop
sbb
mov
test
or
fucomp
lea
push
pusha
hlt
jno
sbb
push
push
sub
push
mov
lea
pop
je
shr
jecxz
out
es
mov
jae
jmp
sub
pop
sub
push
jecxz
dec
pop
xchg
pop
mov
lahf
fcomp
xor
dec
(bad)
mov
dec
sar
xchg
jns
mov
je
push
adc
xchg
icebp
out
cmp
int3
pop
and
mov
arpl
bnd
mov
or
xor
sub
jmp
inc
(bad)
jbe
jl
dec
mov
dec
push
push
pop
dec
aas
xchg
mov
adc
cmp
cld
arpl
cmp
std
sar
xchg
mov
cs
push
cmp
add
add
aas
mov
inc
inc
jo
mov
mov
jge
iret
jge
js
loope
popa
out
repz
or
inc
cmp
outs
out
pop
movs
rcl
dec
leave
outs
test
jl
pop
pop
xor
push
mov
pop
(bad)
push
ja
pop
add
imul
push
dec
enter
dec
pop
sti
loope
ud1
sbb
call
cmp
pop
dec
xchg
fcmovnb
(bad)
xor
call
adc
mov
dec
call
scas
xchg
mov
push
popf
jno
lods
jmpw
lock
ja
cmp
mov
dec
adc
in
add
jbe
popa
sbb
pop
jbe
adc
push
clc
add
xchg
jbe
pop
ret
pop
mov
sbb
sbb
mov
push
rcr
jle
mov
mov
outs
mov
je
sti
imul
in
retf
xor
ret
(bad)
cmp
pop
stos
lods
dec
test
adc
jg
cmp
arpl
es
pop
cmp
and
ds
repz
sub
shr
xchg
aad
cwde
add
mov
adc
shl
xlat
mov
ror
js
jle
sub
and
and
je
pushf
jns
adc
push
dec
push
and
mov
xchg
mov
dec
mov
pop
or
shl
mov
paddusb
dec
mov
stc
cmp
jne
pop
xchg
mov
retf
push
fcmovnb
jmp
cmp
sbb
mov
dec
out
dec
mov
cmp
push
adc
dec
sbb
lahf
sbb
stc
imul
ins
mov
push
cmc
fimul
mov
or
push
outs
sub
cwde
and
test
mov
adc
xchg
fsubr
jecxz
bound
jae
shr
or
fiadd
push
pushf
mov
pop
fild
rcr
cmc
jns
push
loopne
jmp
out
mov
call
out
test
dec
adc
add
sub
cld
push
cmp
mov
call
enter
inc
out
loopne
mov
dec
adc
lods
test
and
movs
(bad)
push
xchg
inc
call
in
sbb
cmp
test
push
sbb
push
daa
imul
ret
sbb
jnp
mov
stc
inc
int3
pop
cli
cld
aam
push
out
popa
push
loop
aas
mov
mov
push
test
mov
pushf
xchg
sub
adc
ins
and
jb
push
call
push
inc
lds
sbb
imul
es
scas
fsqrt
rcr
mov
or
cwde
xchg
mov
enter
adc
ror
dec
lds
sbb
sbb
mov
dec
test
sbb
cmp
mov
rcl
ret
xlat
mov
and
std
pushf
sub
xchg
xchg
rcl
movs
and
jmp
fstp
sbb
mov
pop
addr16
pop
retf
sub
adc
cmp
xor
(bad)
push
add
and
add
jnp
xlat
fs
lods
hlt
(bad)
and
sbb
inc
movs
movs
mov
mov
mov
movs
and
fsubr
nop
sub
jb
out
cmp
push
cmp
loop
mov
and
sub
push
inc
test
les
movs
or
stc
push
push
or
out
in
out
or
dec
ja
mov
push
dec
cmp
push
in
sub
dec
mov
or
shl
in
mov
jno
xor
popf
fwait
mov
mov
test
jmp
imul
mov
mov
pop
xchg
sbb
div
sar
outs
jbe
pop
jl
or
mov
add
mov
mov
enter
int3
add
mov
mov
ds
mov
pop
or
mov
inc
push
mov
ja
mov
nop
or
pop
popa
(bad)
cmps
sbb
sub
jae
je
and
sub
jns
xchg
add
jg
sub
daa
cli
adc
mov
aad
jp
inc
int3
dec
test
mov
cld
imul
inc
imul
call
jns
loopne
inc
pop
jl
sub
test
jno
and
scas
retf
xor
xchg
repnz
movs
fs
mov
int3
mov
mov
mov
pop
dec
inc
xchg
or
dec
push
push
sbb
mov
(bad)
push
xor
push
sar
sub
in
sbb
fidivr
scas
stos
pushf
mov
jo
movs
movs
xchg
or
mov
aas
fldl2e
icebp
out
or
jne
push
rol
in
mov
lods
aad
jb
mov
cmps
ret
or
fnstenv
add
arpl
xor
call
mov
or
mov
xor
aam
jnp
sbb
imul
lahf
scas
fsub
dec
or
mov
add
rol
stos
dec
dec
and
xchg
push
mov
or
(bad)
xlat
sbb
lods
pop
iret
scas
mov
jb
add
adc
push
test
ret
sub
sbb
xchg
rcr
inc
jb
les
dec
cmp
popf
inc
addr16
(bad)
sub
mov
add
fnstenv
pop
lahf
aad
push
inc
fbld
pop
stos
in
xchg
ja
(bad)
pushf
mov
dec
fdivr
sahf
push
in
sar
popa
inc
enter
or
mov
iret
rcr
inc
gs
mov
enter
push
add
arpl
and
ja
sbb
sbb
mov
fnstsw
mov
stc
fcmovne
pop
(bad)
loopne
in
mov
add
inc
test
(bad)
jle
and
pop
clc
xchg
(bad)
and
jg
adc
cmps
les
mov
adc
hlt
push
sbb
enter
mov
pusha
mov
push
mov
mov
sub
ss
jmp
xor
test
(bad)
das
jne
adc
fdivr
mov
add
lds
push
push
pop
imul
mov
cwde
pop
std
mov
lahf
adc
imul
or
pusha
dec
push
enter
retf
jp
outs
ins
sub
std
icebp
outs
xor
out
push
mov
lea
sti
push
fcomp
loop
(bad)
out
cli
enter
lea
mov
imul
retf
xchg
(bad)
mov
adc
push
movs
adc
push
cld
fimul
in
and
fimul
enter
add
mov
nop
mov
dec
adc
xor
or
jmp
xchg
pusha
pusha
adc
out
(bad)
lock
inc
inc
cmp
fcomp
aam
je
test
les
add
std
or
aam
or
daa
mov
aam
or
cld
jle
mov
out
xor
test
rcr
jecxz
pop
or
outs
mov
repnz
std
js
xchg
inc
pop
mov
dec
dec
mov
dec
or
je
iret
xor
adc
aad
je
add
lods
(bad)
fsub
sti
aas
loope
push
mov
pusha
fistp
cmp
xchg
cmps
loopne
shl
adc
test
call
jecxz
nop
sub
mov
std
neg
dec
inc
add
popf
sbb
mov
push
movs
inc
xchg
icebp
cmp
and
cwde
(bad)
enter
adc
add
push
push
lods
push
jb
pop
sbb
sub
mov
aas
jbe
mov
mov
push
jo
leave
or
cmp
inc
cmps
push
out
loop
fmul
(bad)
cmp
loopne
inc
gs
rol
add
push
add
aas
in
std
jne
es
movs
test
daa
and
and
loope
loopne
lock
cmps
cmp
dec
setle
popa
and
add
das
mov
push
jnp
and
mov
inc
(bad)
sub
aaa
xor
les
call
mov
pop
mov
rcr
fistp
cmovl
mov
jo
jo
ror
ins
pop
inc
test
cli
lds
movs
push
out
xchg
ins
ins
xor
mov
outs
cmp
push
das
aam
cmp
iret
xor
dec
inc
inc
call
leave
xor
pop
and
and
jmp
and
push
scas
pop
addr16
test
ret
stc
fdivr
bound
es
jnp
pop
cmps
enter
shl
ss
in
in
in
imul
(bad)
out
fs
jo
add
neg
add
loop
push
inc
fnstsw
loope
push
aam
jo
push
dec
fbld
shl
js
aas
xchg
xor
pop
in
push
call
sub
pop
mov
mov
idiv
test
bound
test
jle
repnz
(bad)
aam
std
push
push
dec
test
mov
and
(bad)
cli
or
(bad)
dec
ret
pop
sub
mov
add
pusha
test
xabort
inc
xor
call
fsubr
dec
adc
push
mov
push
inc
scas
cmp
out
fmul
popf
inc
test
or
fld
daa
sbb
sub
inc
or
mov
push
push
lahf
jmp
jno
inc
lea
in
xchg
or
mov
(bad)
mov
sbb
(bad)
fiadd
outs
js
cld
jnp
jo
adc
xchg
push
xchg
mov
jae
imul
xchg
jno
inc
jmp
movs
xor
hlt
add
fst
dec
pop
nop
outs
sbb
ds
mov
sub
std
pop
lods
es
sub
loop
fistp
fldenv
mov
dec
rcl
sbb
ds
out
jnp
out
lods
imul
fcom
fwait
jb
sar
out
jns
dec
jl
jnp
jmp
dec
lock
jl
add
dec
mov
add
push
sub
push
imul
mov
xchg
cmp
or
pop
sbb
or
jmp
adc
inc
adc
mov
data16
ins
jnp
icebp
adc
dec
and
(bad)
je
or
add
cdq
lds
(bad)
xchg
sbb
pop
push
lahf
or
xchg
push
mov
and
ss
dec
sub
popa
mov
add
push
adc
xchg
sub
pop
(bad)
mov
outs
cld
mov
outs
test
cmps
fistp
xchg
add
loope
mov
xchg
push
pop
xchg
push
and
jo
push
aas
imul
ins
stos
inc
mov
fcomp
mov
mov
adc
cmp
jmp
jbe
shl
push
pop
xchg
sahf
xor
je
out
shl
mov
cmp
or
pop
push
or
mov
lea
(bad)
push
push
xchg
imul
pop
mov
jno
xchg
push
dec
cmp
push
ds
mov
neg
stc
test
adc
gs
loop
dec
das
out
movs
(bad)
arpl
mov
fiadd
les
movs
jmp
xor
das
cmp
daa
clc
nop
add
or
js
jbe
retw
and
mov
push
lds
or
not
push
out
daa
mov
pop
inc
xchg
scas
sbb
inc
inc
movs
ins
push
dec
shl
dec
xchg
jbe
jne
call
jg
cmp
mov
xor
xchg
fild
pop
cmp
xchg
or
mov
push
test
data16
jmp
lea
xor
ret
arpl
cmps
sbb
dec
sbb
retf
fisub
mov
addr16
imul
adc
pop
je
outs
mov
scas
mov
dec
cmps
hlt
mov
js
jmp
pop
and
scas
rcl
clc
adc
cmps
ret
xor
jbe
adc
icebp
aaa
and
push
ja
push
idiv
jl
call
fist
pop
mov
sub
popf
out
je
cdq
cmp
pushf
ja
mov
mov
dec
retf
sub
cmp
pop
mov
sbb
fld
out
pop
mov
sub
loope
(bad)
mov
(bad)
adc
xchg
fcomp
ret
pop
or
jmp
pop
sahf
ja
jmp
mov
pusha
xchg
loope
xchg
cmps
test
stc
rcr
adc
mov
jle
das
xchg
(bad)
stc
sti
dec
xchg
mov
aad
or
in
inc
popa
fmulp
or
and
(bad)
adc
shr
(bad)
icebp
movs
push
cmp
imul
xchg
pusha
push
mov
cmp
and
jmp
fwait
jb
stc
aas
clc
push
retf
sbb
push
and
ja
in
pop
les
mov
xchg
xor
mov
call
xor
scas
iret
cmp
xor
xor
cmp
xchg
cmp
mov
aad
(bad)
pop
xchg
xchg
sbb
add
mov
and
outs
xor
push
jp
fs
hlt
add
dec
lods
mov
mov
hlt
les
ret
sub
pop
jbe
(bad)
rol
mov
inc
adc
dec
call
sahf
cmp
mov
mov
dec
jecxz
pop
and
and
mov
sar
xchg
int
inc
push
xchg
sbb
mov
or
aam
push
(bad)
cwde
pop
or
push
pop
nop
mov
call
mov
cld
or
fst
pop
loope
imul
pop
adc
enter
mov
inc
mov
(bad)
mov
int3
dec
mov
outs
ss
(bad)
popa
sbb
imul
loope
mov
imul
call
add
in
xchg
xor
cli
sar
and
invd
outs
add
add
mov
stc
out
enter
jns
lods
sub
stc
sub
fld
push
enter
repz
xchg
xchg
xlat
in
push
stos
repz
movs
fcmovu
sbb
repnz
jo
rol
push
test
neg
retf
aam
sbb
stos
pop
fisttp
pop
pop
pop
in
retf
or
mov
mov
jno
xchg
pop
clc
add
(bad)
dec
(bad)
enter
xchg
jb
push
xchg
pop
mov
fxch
dec
call
shl
xlat
push
scas
dec
aam
adc
nop
mov
imul
int
icebp
outs
sub
mov
(bad)
in
or
inc
adc
or
fwait
(bad)
mov
iret
pop
cmp
dec
cmp
or
cmps
add
mov
pop
and
idiv
shl
xchg
jp
div
inc
movs
int
xchg
mov
outs
sbb
xchg
cvttps2pi
adc
inc
push
neg
ror
or
maskmovq
imul
sbb
mov
xor
gs
cmp
enter
pop
pop
imul
sub
or
sbb
mov
imul
inc
mov
jb
jno
scas
mov
icebp
ja
jle
arpl
outs
xor
add
aas
xor
cli
mov
retf
mov
mov
inc
sbb
mov
sub
lods
stos
push
xor
jp
inc
push
repnz
mov
je
ret
jns
push
push
cmp
movs
inc
xor
repz
pop
(bad)
loop
push
in
inc
aaa
push
jno
aas
push
outs
sub
gs
push
sub
dec
(bad)
pop
pop
pop
ret
aad
dec
dec
jg
retf
call
mov
stos
mov
neg
jo
hlt
cmps
clc
xchg
aas
(bad)
fcmovnb
pop
mov
add
xor
xor
clc
mov
and
fdiv
mov
mov
dec
enter
lods
jns
dec
scas
lds
ja
mov
xchg
jno
retf
test
inc
outs
jmp
rol
call
cmps
push
dec
push
fidivr
aaa
imul
loop
leave
xor
sub
call
and
mov
push
mov
(bad)
and
cmp
shl
nop
addr16
clc
jle
cmp
dec
adc
lock
(bad)
cmp
push
push
cmp
mov
xor
sub
mov
sti
adc
jbe
(bad)
push
je
ror
xchg
sbb
mov
in
push
lea
push
xlat
push
ficomp
mov
dec
jb
inc
cwde
outs
adc
lahf
push
dec
jmp
jp
add
pop
fild
es
inc
mov
aaa
push
fmul
and
dec
cmp
or
ror
cmc
sub
loop
retf
xor
pop
inc
cdq
dec
cli
cmp
sbb
imul
or
retf
pop
sub
scas
inc
or
dec
mov
adc
retf
sbb
add
fucomp
jp
pop
dec
pop
fbstp
or
data16
repnz
jmp
fadd
add
(bad)
loope
adc
jmp
dec
mov
mov
ficom
enter
sar
jns
xchg
push
jp
popf
push
ins
movs
push
cs
scas
das
add
pusha
mov
sub
mov
in
mov
xor
mov
cmc
adc
sar
es
ret
mov
mov
cmps
(bad)
add
push
mov
xchg
mov
dec
sub
pop
pop
inc
js
xchg
scas
mov
fdivr
sub
and
(bad)
mov
sbb
xchg
jge
xor
sar
in
xor
mov
or
xor
sub
stc
int
inc
nop
mov
sub
pusha
dec
mov
fwait
xchg
pop
mov
aas
push
dec
or
push
push
dec
fs
mov
leave
sbb
je
mul
cmp
leave
leave
int
add
aas
aad
lods
inc
movs
xchg
sbb
adc
stc
dec
mov
pop
pop
sub
pop
cld
shr
jp
cmps
add
adc
jp
jae
loop
(bad)
mov
mov
es
dec
stc
aas
ret
dec
and
inc
xor
out
inc
(bad)
mov
dec
jbe
adc
jae
adc
sub
fbstp
enter
push
pusha
xlat
jmp
pop
sti
into
ret
mov
inc
lods
mov
mov
cmp
icebp
and
popa
mov
add
push
aaa
push
test
xor
mov
xlat
js
pop
inc
adc
das
aas
push
aam
sti
mov
(bad)
mov
mov
hlt
icebp
inc
jno
xchg
imul
jmp
das
mov
push
repz
jnp
nop
sbb
(bad)
aaa
pop
pusha
sub
sbb
lods
(bad)
data16
clc
add
sub
or
inc
push
cs
cmp
in
mov
aaa
dec
retf
cmps
mov
jbe
jo
retf
setne
int
cmp
fst
retf
jecxz
sub
pop
xor
mov
mov
push
inc
cmps
imul
ret
adc
jmp
or
(bad)
cmp
jmp
out
xchg
ret
cld
mov
mov
pop
push
rcl
jmp
bound
adc
jo
mov
xchg
and
mov
push
add
jae
push
xchg
fld
jmp
pop
mov
mov
mov
fdivr
sub
jmp
or
cwde
xor
or
inc
and
(bad)
push
xchg
or
add
mov
or
pop
aaa
xor
pop
pusha
test
cmp
push
fsubr
adc
das
test
jle
dec
add
call
jno
adc
iret
pop
cwde
(bad)
retf
cmps
sahf
into
or
out
jge
adc
inc
xchg
xchg
adc
inc
jecxz
cmp
sub
adc
inc
ins
cmp
mov
cmps
inc
xor
lahf
push
ret
push
lahf
sub
cmps
rcl
pop
jnp
dec
and
out
or
mov
push
jg
jnp
or
jno
cli
loop
pop
shl
das
jb
into
into
sub
rol
data16
out
mov
loopne
test
push
sar
inc
push
pop
movs
pmuludq
sub
pop
jmp
imul
mov
rcl
in
and
or
pop
inc
in
push
stos
pop
fsub
pop
pusha
aam
add
movs
jmp
lock
xor
jle
stos
data16
inc
mov
jb
mov
push
sbb
sti
test
mov
inc
(bad)
push
aad
inc
rcr
repnz
xor
cmps
and
inc
lods
dec
and
pop
cmp
pop
jmp
and
push
outs
call
call
dec
(bad)
stc
cmps
add
add
add
dec
clc
imul
mov
jg
pop
mov
jo
sbb
outs
aam
and
xlat
lods
idiv
xchg
mov
xor
icebp
mov
sub
push
retf
ret
cwde
mov
pop
test
fdiv
mov
test
push
mov
mov
imul
aad
sbb
clc
xor
ins
aad
ret
scas
cmp
shr
fbld
and
mov
cmp
or
popf
sbb
adc
lods
and
xor
xchg
(bad)
mov
sbb
xchg
and
xor
add
inc
mov
fiadd
retf
or
jl
cmps
xchg
mov
push
scas
sub
sub
popa
xor
(bad)
jg
jnp
pop
shr
mov
imul
pusha
call
sub
jmp
dec
xchg
ret
test
ret
mov
jns
(bad)
xchg
sbb
sub
cmp
push
ret
pop
or
jp
jnp
sub
add
scas
cmp
arpl
das
rcr
jmp
sub
add
imul
pop
xchg
enter
enter
repz
pop
cmps
xchg
lea
cmps
cmp
cmp
xchg
sahf
and
jge
ins
int
lea
or
pop
pusha
rol
sub
cmc
sbb
daa
inc
mov
call
mov
dec
nop
push
mov
adc
pop
into
and
or
hlt
pop
outs
push
xchg
sub
sub
or
push
jecxz
in
xor
sahf
pop
fisubr
dec
(bad)
in
dec
aas
sbb
loop
and
xchg
xchg
test
(bad)
leave
cmp
and
or
arpl
mov
sbb
out
xchg
pusha
into
cmp
rcl
arpl
shr
push
xor
push
mov
push
xchg
dec
inc
mov
fmul
jecxz
push
mov
sub
stc
push
mov
sbb
retf
push
adc
xor
js
ret
ficom
pop
popa
mov
stos
mov
mov
inc
or
into
fst
inc
ret
sti
adc
idiv
dec
or
push
sbb
mov
test
pusha
inc
xor
inc
xchg
sbb
inc
aaa
out
movs
mov
sbb
push
xor
mov
mov
jmp
aad
cmp
test
jno
mov
mov
out
enter
mov
pop
lods
pop
repnz
movs
xchg
jnp
ja
fs
xor
or
and
adc
sub
les
xor
fwait
dec
xchg
dec
sbb
(bad)
fldcw
cli
fbld
pop
adc
xchg
(bad)
or
cmp
dec
sbb
daa
xchg
into
sub
push
(bad)
out
cdq
hlt
into
xor
sub
addr16
movs
test
push
mov
adc
das
add
out
inc
(bad)
jo
dec
pop
add
pop
jnp
inc
popa
(bad)
or
ret
out
xor
xchg
jl
arpl
mov
mov
(bad)
imul
mov
ret
push
mov
jae
sbb
pop
push
pop
cmp
aam
rcr
retf
jnp
inc
jmp
dec
cli
add
retf
push
dec
ret
hlt
movs
lock
repnz
fist
dec
ss
stos
neg
aam
mov
js
mov
loope
jo
mov
hlt
xchg
cli
xor
cmc
pop
in
mov
outs
pop
dec
sbb
shl
sbb
cmp
scas
repz
aas
jbe
and
and
and
dec
int3
cmp
rcl
out
pop
or
mov
popa
cmp
aas
repnz
mov
pop
push
push
int3
push
push
pusha
out
ss
icebp
call
rcr
mov
aad
aaa
pop
out
inc
fadd
xchg
sub
je
and
(bad)
ins
cmp
xor
movs
enter
and
ja
sub
das
sar
adc
and
adc
xchg
push
adc
adc
cwde
call
push
push
jp
xchg
and
push
mov
lds
dec
jmp
inc
and
je
imul
std
ins
and
jbe
loopne
jno
xor
daa
cmc
pmaddwd
enter
xlat
lea
lods
xor
loop
test
cmc
adc
(bad)
push
movs
sub
popa
add
ja
jnp
test
jbe
mov
fstp
xchg
outs
rcl
aam
mov
or
cmp
fmul
push
or
dec
mov
adc
fadd
cmps
add
push
xchg
call
(bad)
sbb
jp
fistp
xor
enter
fnstenv
call
sbb
out
lds
push
mov
xor
lock
jle
push
enter
xchg
loope
inc
pop
test
jb
adc
pop
mov
mov
cwde
push
sbb
out
xchg
shl
scas
outs
rcr
ins
pop
arpl
fild
mov
xchg
jns
in
add
fist
sub
test
mov
div
shl
ja
mov
out
xchg
push
jl
into
mov
pop
push
ja
add
inc
push
and
and
mov
pop
jo
int3
mov
xchg
add
jns
and
push
mov
xchg
xchg
call
pop
fstp
add
cmp
cs
xchg
adc
mov
xchg
mov
iret
jae
sbb
add
sub
jae
lahf
jp
hlt
sub
retf
xor
stos
dec
push
fbld
imul
and
inc
shl
push
dec
lock
cs
pop
adc
xlat
sbb
into
pushf
dec
lea
mov
inc
sub
mov
mov
dec
mov
jb
aam
rcl
mov
cmps
ss
or
push
lods
push
jmp
imul
xchg
push
movs
ins
fimul
int3
jge
mov
xchg
push
mov
fs
xor
scas
repz
stos
(bad)
dec
std
cdq
xchg
retf
(bad)
lods
pushf
out
adc
out
cld
cs
ret
jnp
inc
movs
push
jl
or
xchg
sub
out
sbb
enter
(bad)
retf
xor
sbb
inc
enter
inc
xor
pop
push
mov
pop
rol
xor
mov
pushf
movs
lock
imul
sbb
es
jp
fimul
jae
dec
jne
xor
popf
jmp
jecxz
add
cmps
aad
sar
and
pop
cmp
mov
jecxz
cwde
test
int
adc
jp
sub
repz
or
cmp
jmp
(bad)
stos
pop
idiv
lahf
jp
sbb
es
call
test
outs
fdivp
shl
xor
xor
push
imul
push
mov
push
jecxz
mov
lea
js
xchg
retf
sahf
inc
jmp
je
out
jecxz
xor
add
jns
js
xor
or
adc
jl
adc
outs
sti
sub
in
fnsave
ins
enter
mov
mov
jmp
push
xchg
scas
lods
cs
jmp
or
out
mov
test
xchg
pop
jmp
xchg
jg
push
cmp
mov
mov
mov
dec
lods
loop
jmp
hlt
cdq
or
sahf
cmps
push
je
test
sub
out
mov
mov
mov
pop
fdiv
out
out
pop
data16
jle
ret
or
or
mov
dec
leave
lods
mov
and
lods
test
int
scas
bound
inc
ror
std
push
cli
aam
fild
repnz
cmp
xchg
sub
dec
dec
lods
sar
dec
hlt
ffreep
mov
xlat
fcomp
dec
inc
and
sbb
add
in
jae
jecxz
mov
jo
cvtps2pd
lds
xchg
pop
mov
cs
pop
out
adc
jl
sahf
or
in
and
fistp
xor
ss
dec
or
inc
outs
in
std
cmp
movs
mov
shl
(bad)
push
xor
iret
mov
jge
xor
add
loope
mov
into
dec
pop
sbb
std
repnz
adc
gs
sbb
adc
ret
retf
cmc
dec
lea
mov
bound
mov
xor
mov
gs
sbb
add
stos
mov
(bad)
out
cs
js
sbb
mov
rcl
xlat
cmc
mov
xchg
pop
push
mov
push
xor
out
or
jmp
xor
leave
mov
movs
mul
iret
jnp
adc
lds
jmp
jnp
loopne
sbb
lea
pop
and
movs
in
and
sub
ds
mov
jg
mov
out
mov
xchg
cmps
and
mov
dec
pushf
sub
jge
push
pop
add
repnz
daa
jnp
ja
add
ret
test
punpckldq
stos
aaa
mov
loope
cwde
imul
fdivr
mov
popa
lods
(bad)
mov
scas
shl
and
scas
inc
outs
icebp
ins
cli
fdivr
xchg
fwait
mov
les
mov
in
fs
adc
sbb
test
leave
rcl
lahf
push
in
mov
dec
jb
mov
pop
push
xlat
and
pop
pushf
sub
sub
pslld
pop
push
add
div
add
inc
xchg
stos
test
mov
xchg
or
(bad)
pop
call
aad
jmp
popf
ret
enter
stos
add
push
add
aaa
in
movs
mov
dec
sbb
sub
stos
sbb
scas
int
dec
dec
frstor
in
mov
mov
(bad)
pop
sub
adc
xchg
ffree
pop
mov
icebp
jp
into
push
or
push
jbe
rcr
xchg
imul
loope
jmp
jo
loopne
in
(bad)
retf
inc
sub
mov
jne
lods
fisttp
and
adc
out
jge
push
inc
xor
repz
jl
xchg
jle
aad
fisubr
jecxz
adc
pop
popf
xor
jmp
sbb
xchg
(bad)
mov
in
inc
xor
cmp
ja
inc
jmp
repnz
mov
clc
and
test
cmp
lea
push
xor
call
jmp
ret
aad
sub
mov
push
out
sub
cdq
mov
ins
popa
xor
sar
jmp
mov
cmp
xor
lock
repz
xlat
pop
sbb
push
sub
pop
test
sahf
lds
jle
leave
inc
sub
lds
mov
stos
or
sahf
mov
dec
jb
sub
add
jge
jne
sub
mov
sbb
(bad)
cmp
mov
push
add
push
std
xchg
(bad)
fstp
mov
jp
or
inc
out
xchg
and
and
mov
cmps
push
xor
xchg
mov
ret
mov
sub
arpl
iret
add
cmp
push
add
dec
and
or
(bad)
in
mov
pusha
aam
(bad)
mov
lahf
add
jmp
hlt
(bad)
pop
lods
jmp
xchg
jmp
(bad)
(bad)
xor
(bad)
inc
mov
or
movs
jmp
into
stc
mov
mov
iret
popa
sbb
inc
sbb
jmp
add
mov
cmps
int3
or
push
in
jns
popa
(bad)
push
int
xor
mov
add
mov
mov
adc
shl
ds
int3
xor
(bad)
mov
add
sahf
dec
pop
lock
add
call
cwde
es
pop
mov
or
cmp
lock
ror
out
fcompp
out
(bad)
cld
mov
cmp
fadd
int3
push
jns
(bad)
popa
inc
addr16
pusha
fist
push
fnstenv
xlat
dec
ret
test
xchg
jmp
xchg
dec
inc
mov
push
das
rol
sub
pop
or
sti
aad
fst
sub
xchg
sbb
push
out
sbb
cmc
mov
enter
mov
and
push
inc
xchg
push
sbb
jne
mov
cmp
nop
movs
xchg
fs
sub
push
adc
cwde
dec
(bad)
pop
sbb
xor
dec
add
(bad)
adc
sub
pop
mov
stc
call
clc
shr
loop
stos
push
push
in
(bad)
xchg
push
mov
daa
scas
cli
(bad)
stc
ins
sar
in
retf
mov
sub
adc
cli
daa
sub
fisubr
mov
or
stc
mov
push
sbb
je
nop
int3
jg
ds
repnz
xor
scas
cmp
into
fst
fcmovu
push
retf
lahf
outs
xchg
aaa
sbb
cld
or
inc
xlat
test
or
mov
jg
ret
mov
xchg
add
cmp
jo
rcr
mov
idiv
mov
xchg
add
jl
arpl
cmp
in
inc
mov
mov
jge
into
pop
je
dec
sbb
in
mov
jnp
loope
test
push
icebp
sbb
mov
jno
ins
push
fcomp
pushf
and
mov
mov
cmp
mov
push
inc
ins
adc
pop
gs
inc
jb
cmp
sar
bswap
push
jp
and
js
inc
jg
rol
fwait
(bad)
fdiv
jbe
xor
movs
mov
mov
arpl
lahf
dec
sub
lahf
in
jmp
push
jbe
(bad)
lds
cmp
rcr
and
inc
pop
pop
jge
call
cmp
dec
retf
sub
pop
hlt
lds
arpl
test
fsub
mov
fisubr
lods
mov
xor
cmp
aas
rcr
mov
lock
add
in
xor
mov
stc
sar
imul
add
popf
leave
fdivr
int3
sar
or
loopne
sub
or
aad
push
xchg
push
stos
sbb
inc
cmp
(bad)
retf
pop
jge
sbb
neg
pop
cmps
pop
test
inc
(bad)
add
cdq
pusha
sbb
ds
mov
push
lea
daa
mov
adc
adc
pop
aad
mov
shl
push
cmp
sub
cmp
test
lods
lods
and
adc
mov
xchg
call
and
rol
repnz
mul
mov
idiv
jp
mov
pop
sub
sti
div
cmp
popf
loopne
nop
jbe
mov
in
xchg
mov
scas
push
retf
cmp
test
std
xchg
cmc
cmps
(bad)
rcl
sub
and
push
retf
pushf
ins
sub
push
(bad)
aas
pop
imul
aad
mov
mov
bswap
pop
mov
aam
(bad)
push
mov
pop
lds
stos
(bad)
imul
sbb
xor
call
mov
or
jmp
add
test
fs
retf
jp
push
inc
xor
sti
cmp
mov
sti
add
(bad)
mov
repnz
dec
retf
mov
les
push
lahf
sub
les
mov
icebp
mov
enter
je
fcomp
int3
sbb
das
pop
popa
pop
in
mov
leave
pop
push
neg
pop
rol
adc
ja
jb
mov
or
xlat
pop
xor
hlt
push
jge
push
pop
inc
pop
dec
inc
cmps
call
fild
inc
lock
mov
repnz
pop
sbb
scas
jae
adc
in
loopne
ins
jecxz
mov
xlat
dec
sbb
push
test
and
and
ins
out
int3
mov
inc
push
jge
lods
inc
repz
jo
addr16
add
into
test
lods
or
adc
push
dec
dec
gs
jae
mov
xchg
(bad)
cdq
cmp
or
out
push
xchg
cmp
pop
jns
repnz
cmc
lahf
pop
into
or
or
jnp
fbld
mov
std
bound
xor
sub
push
pushf
and
xchg
jo
cdq
int3
mov
inc
adc
sbb
stc
cmp
ins
jns
sub
xchg
dec
inc
stos
fcmove
(bad)
imul
and
cmps
and
iret
sbb
mov
lock
and
test
cld
outs
jns
ret
test
in
inc
arpl
sub
sbb
xchg
or
and
mov
fstp
mov
outs
add
push
data16
popf
popf
and
cld
inc
and
push
test
sti
cmp
nop
jns
js
cmc
jmp
repz
mov
add
jae
fild
dec
mul
loop
outs
xchg
xchg
push
or
mov
pushf
out
adc
outs
inc
repz
enter
jae
cmp
sub
cmp
retf
add
xchg
xlat
(bad)
out
imul
adc
out
cmp
cmp
push
outs
jb
call
xor
retf
rcl
mov
clc
sub
ss
iret
inc
cmc
out
xor
lea
call
in
dec
(bad)
popa
daa
cmp
loope
addr16
out
pop
push
jmp
push
stc
or
cmps
mov
jl
pop
mov
aad
mov
paddw
jne
dec
aaa
(bad)
fnstsw
inc
mov
jo
mov
xor
jmp
add
into
shl
xchg
pop
jno
das
inc
mov
(bad)
in
repnz
xor
mov
fldenv
pushf
sub
sub
xor
inc
iret
clc
fs
xchg
sub
pop
lds
pop
push
xchg
int
sbb
test
mov
in
ss
jmp
cmp
(bad)
cmp
xor
sbb
jle
mov
das
ret
ror
and
and
cmp
ret
fdivr
pop
clc
iret
add
mov
stc
jecxz
rcr
xor
out
test
xor
fmulp
dec
xchg
dec
jmp
sbb
arpl
enter
sub
or
add
(bad)
add
push
sti
dec
push
imul
sbb
sub
(bad)
pushf
gs
and
pop
aas
addr16
mov
mov
inc
mov
cmps
dec
pop
sbb
call
mov
jmp
mov
pop
adc
hlt
cli
popf
icebp
repz
scas
push
out
jo
jecxz
inc
ins
daa
in
push
aad
(bad)
shl
sub
bound
push
fcomi
xlat
adc
xor
pushf
jbe
stos
push
pop
add
mov
push
movs
mov
dec
js
into
retf
adc
cmc
stc
jmp
scas
movs
cld
xor
mov
add
jmp
mov
imul
xchg
into
mov
jne
push
xor
adc
pop
std
test
div
pop
in
test
jb
gs
sbb
jo
pop
jbe
inc
sub
inc
mov
loop
push
mov
cwde
cmp
ins
and
cwde
pushf
xor
cmp
jg
xchg
aaa
push
jne
xor
xor
pop
aad
xor
jae
xor
aaa
test
xor
fiadd
out
mov
(bad)
aam
cmc
mov
push
aad
and
fmul
or
(bad)
in
add
arpl
sbb
aaa
xchg
push
jmp
cmps
in
dec
fstp
(bad)
loope
call
fst
inc
ins
jae
test
push
jg
adc
fs
xor
popf
xchg
cmp
fdivr
fcmovbe
mov
test
mov
xchg
aad
mov
andps
cwde
fld
adc
ret
xor
dec
cwde
aad
push
add
icebp
and
mov
push
loopne
xchg
(bad)
dec
mov
outs
sbb
mul
mov
sbb
mov
jmp
adc
xor
xor
mov
icebp
dec
and
push
rcr
jmp
ins
stos
pop
dec
imul
adc
push
mov
adc
sahf
pop
jo
mov
push
mov
cmps
push
cwde
xchg
mov
adc
data16
cmp
add
fstp
mov
mov
outs
pop
dec
mov
push
mov
rol
iret
mov
nop
fstp
push
and
les
push
xor
shl
adc
mov
add
cld
sub
mov
mov
jno
sbb
push
jge
movs
cdq
mov
cmc
test
or
int
cmp
stc
stos
push
push
and
sub
(bad)
push
pop
fild
imul
call
xor
mov
and
sbb
push
push
mov
fs
sbb
out
xchg
or
jae
rcl
mov
fild
mov
in
cmp
push
cmp
imul
clc
and
xchg
pop
retf
adc
fs
(bad)
mov
test
xor
pushf
push
(bad)
xchg
repz
call
jp
inc
out
pop
aas
test
push
ficomp
xor
mov
pop
dec
add
daa
xor
xor
cwde
(bad)
mov
fcom
cmp
and
cmp
fnsavew
inc
div
icebp
mov
push
or
dec
and
add
fst
and
scas
popf
(bad)
jne
ror
(bad)
mov
push
xor
dec
inc
sub
mov
lds
cmp
rep
sbb
test
sbb
or
mov
dec
mov
cmp
(bad)
cmc
inc
out
ficom
fild
mul
loop
push
outs
fdiv
mov
dec
cmp
(bad)
(bad)
out
scas
mov
sbb
inc
into
fsub
xchg
push
lods
ret
or
and
sub
mov
inc
mov
movs
outs
inc
jecxz
das
fnstsw
fmul
sahf
dec
popa
xor
pop
cmc
popf
sbb
adc
add
test
in
push
adc
leave
mov
add
xchg
pop
sub
and
or
dec
lods
dec
popa
lods
add
(bad)
mov
dec
aad
popa
mov
xlat
push
loop
fwait
lods
retf
fcmovnu
sbb
(bad)
xlat
inc
add
int
outs
jae
xlat
int3
aam
into
mov
cs
push
paddq
dec
mov
mov
jle
shr
dec
in
mov
stos
popa
or
sbb
xchg
mov
xor
and
and
mov
push
fst
outs
sbb
punpckhwd
add
pop
jo
mov
jnp
retf
push
inc
mov
push
mov
xor
loop
push
imul
icebp
inc
in
pop
dec
mov
cmp
test
push
fcomp
pop
sbb
rol
and
inc
nop
sbb
mov
clc
(bad)
cmp
lods
push
pop
adc
dec
mov
lahf
pop
or
nop
test
sar
fimul
out
inc
loope
inc
xor
data16
jne
adc
iret
or
rcl
mov
ins
mov
dec
movs
push
test
sti
push
jnp
lods
or
gs
test
pop
mov
ret
push
add
pusha
cmp
cmp
lea
imul
call
mov
pop
xor
sub
ins
sub
dec
mov
outs
ret
out
mov
ret
leave
loopne
imul
xchg
xchg
xor
sahf
sbb
cmp
dec
dec
cmp
out
or
daa
xor
and
aad
pusha
dec
jnp
aam
cli
and
inc
daa
outs
mov
jg
in
pop
into
mul
push
xor
retf
jmp
lea
mov
in
adc
push
or
adc
sbb
cmp
(bad)
sub
cmc
retf
out
fcmovbe
cmp
jp
popf
ret
push
cmp
dec
ret
push
fstp
loopne
out
lods
mov
ja
mov
fidivr
jno
jo
pop
je
mov
test
repz
sub
cmp
stos
std
loopne
mov
fst
rcl
push
clc
fnstenv
sbb
out
adc
call
int
ror
ret
cld
les
push
jno
sbb
popf
inc
fdiv
sbb
test
mov
adc
push
mov
lea
mov
popf
in
push
sub
push
xor
lock
pop
nop
iret
or
push
and
push
enter
ror
jae
retf
pop
mov
bound
xchg
rcr
add
(bad)
adc
jmp
out
add
addr16
stc
(bad)
xor
mov
aas
js
dec
retf
sub
mov
ror
and
and
ds
outs
mov
pop
mov
jmp
jns
stos
jmp
inc
adc
mov
adc
ds
std
dec
xchg
dec
xor
jge
and
repnz
xchg
call
in
stos
jmp
xlat
rcl
push
or
inc
pop
pop
sub
in
ss
mov
enter
sub
rcr
lods
adc
sti
cdq
nop
ret
push
hlt
or
push
repnz
in
ror
retf
out
pop
lock
(bad)
sub
xor
dec
sar
imul
and
adc
enter
cld
or
and
call
jbe
cmp
mov
fld
mov
push
hlt
(bad)
les
add
push
out
xor
cmp
clc
pop
or
inc
cli
je
jl
(bad)
sub
pop
nop
int
mov
xor
stos
adc
(bad)
call
add
test
and
fstp
xchg
test
ss
xlat
shr
dec
mov
rcl
xor
sub
dec
aam
ja
or
rol
sub
ds
pop
es
dec
pop
sbb
jb
mov
sbb
ins
or
jbe
sub
sbb
and
mov
das
fild
cmp
xchg
mov
sub
cs
repz
inc
es
mov
inc
stc
fmulp
inc
(bad)
push
test
data16
fmul
pop
pop
jnp
and
bound
in
adc
repz
mov
push
je
add
push
push
sti
lods
xchg
jne
test
(bad)
sbb
popf
inc
push
jl
lods
sahf
adc
mov
stos
fisubr
stos
mov
ret
add
loope
lds
cmps
sub
xor
repnz
pop
or
div
xor
sbb
popf
repz
in
mov
jecxz
push
adc
push
ins
jecxz
hlt
data16
icebp
test
lea
cmp
mov
adc
push
nop
inc
test
sub
int3
push
sub
and
addr16
sub
nop
mov
mul
add
push
jnp
lea
jp
jecxz
or
sub
inc
jo
into
out
pop
ds
push
add
mov
xor
daa
outs
push
out
mov
inc
test
mov
dec
inc
lahf
mov
jmp
mov
ret
or
xchg
jbe
sub
leave
sub
mov
cmp
push
leave
add
dec
inc
cli
(bad)
mov
sbb
test
nop
xchg
sbb
fild
fadd
dec
sub
pushf
out
cmp
scas
dec
cmc
ds
cmc
cmp
push
in
call
sti
xchg
ret
aam
sub
mov
ins
mov
loope
xor
sub
jo
push
ins
fsub
dec
pop
out
xchg
xor
test
jnp
mov
aaa
add
ss
adc
xchg
dec
fcom
mov
mov
stos
push
pop
adc
sbb
mov
loopne
jae
cli
loope
xor
dec
inc
imul
mov
mov
jmp
inc
jl
das
mov
xchg
es
push
jle
std
adc
fwait
lahf
push
(bad)
jae
arpl
sbb
rol
arpl
add
sti
stos
push
lea
dec
or
xor
push
daa
mov
jp
fmul
mov
es
push
test
push
xchg
or
mov
add
add
cld
sti
xchg
ins
sti
das
mov
in
cmc
(bad)
pop
fadd
push
ds
icebp
jb
xchg
test
fsubr
push
xchg
imul
dec
psubsw
mov
out
mov
stc
aas
lock
outs
sbb
inc
add
pop
(bad)
push
scas
mov
scas
push
push
mov
sbb
add
inc
push
xchg
mov
stos
jmp
jecxz
or
je
adc
les
adc
push
add
(bad)
and
lock
mov
(bad)
push
sbb
mov
push
or
pop
and
jns
adc
inc
ds
mov
out
sbb
(bad)
fcomp
xchg
jne
cmps
mov
cmp
or
rcl
inc
shl
int
jge
inc
xor
xor
mov
jbe
ja
jno
xchg
scas
inc
mov
xor
movs
inc
cmp
rcr
es
(bad)
push
fst
(bad)
std
and
jmp
test
pop
push
test
cmp
xor
push
xchg
xchg
inc
inc
ret
lods
(bad)
mov
daa
int3
dec
mov
dec
cli
test
mov
outs
add
mov
popa
sar
mov
daa
mov
and
sbb
sub
es
pop
in
cmp
(bad)
cmp
mov
retf
lods
retf
xchg
outs
nop
mov
cmp
pop
jno
sub
gs
lahf
out
int
lods
int3
test
pop
inc
enter
lods
cmp
movs
mov
jecxz
inc
sbb
dec
cld
add
test
(bad)
push
pop
fadd
xchg
mov
rol
movs
ror
sbb
in
mov
les
imul
mov
ja
out
dec
mov
adc
ins
icebp
es
retf
stc
inc
out
xlat
xchg
push
jle
adc
(bad)
push
mov
cmp
fistp
lea
jmp
(bad)
mov
sbb
or
pop
xchg
test
or
inc
shl
pop
imul
stos
push
adc
dec
fwait
idiv
pushf
les
cdq
mov
pop
enter
mov
pop
jmp
cmps
adc
mov
stos
repz
mov
and
add
inc
cmc
or
xchg
repnz
cmp
imul
mov
fidivr
xor
adc
xchg
or
sub
xchg
sti
cld
xor
loopne
rol
adc
push
adc
mov
push
lock
stos
into
aam
add
imul
inc
pop
cmp
add
imul
pop
jo
dec
in
mov
jo
repz
loopne
jmp
push
cmp
out
xor
xlat
inc
push
add
(bad)
mov
loop
es
mov
adc
mov
xlat
push
xor
sub
gs
or
lds
add
mov
repnz
cwde
sbb
adc
jge
into
fs
aam
mov
mov
(bad)
cmp
fdiv
ds
pop
push
ja
out
mov
and
out
idiv
loopne
cmp
mov
adc
lds
nop
mov
add
mov
stos
wbinvd
pop
sub
popa
test
xchg
lods
sbb
mov
clc
or
js
test
dec
mov
and
mov
mov
nop
test
cs
pop
xor
mov
push
xor
aas
add
ss
xor
fsubr
fst
or
ins
inc
sbb
xor
sbb
and
jg
sub
sbb
int
or
xchg
ret
and
test
or
xor
cld
mov
enter
rcr
(bad)
fadd
jl
mov
xor
mov
xchg
add
and
test
push
mov
fist
movs
cmc
jns
jbe
mov
mov
cwde
add
xchg
inc
xlat
arpl
mov
mov
movs
adc
leave
add
lods
aam
retf
xchg
add
data16
bound
sub
mov
jle
pop
movs
and
mov
int3
or
jmp
jge
add
xchg
inc
iret
inc
(bad)
cs
cmps
xchg
jl
mov
(bad)
or
ficomp
cmp
lock
(bad)
mov
or
mov
lahf
jmp
punpckldq
scas
pop
adc
pop
ja
idiv
pop
mov
out
ret
(bad)
ror
dec
dec
or
xchg
aaa
cmc
cmc
cmp
sub
mov
add
out
pop
arpl
mov
ret
xchg
outs
jg
imul
push
rcr
gs
and
dec
enter
pop
and
xor
add
xchg
cli
scas
xchg
aaa
and
loope
xor
out
xchg
xchg
adc
xchg
arpl
cmc
ret
xchg
inc
cmp
movs
stos
sbb
pop
cmps
retf
call
cli
imul
lea
or
mov
push
jp
add
dec
mov
jmp
mov
push
ja
test
pop
jmp
cmps
mov
rol
pop
mov
cli
xchg
sub
adc
leave
out
aaa
jno
pop
mov
xchg
ror
xor
mov
mov
arpl
sub
fcmovbe
fisubr
dec
mov
shl
(bad)
rcpps
dec
or
inc
xor
and
sub
popf
cs
cmp
call
jle
test
test
std
adc
pop
out
jmp
mov
xchg
xor
retf
imul
iret
ror
ins
inc
xor
(bad)
aaa
retf
nop
push
cmp
mov
repnz
mov
(bad)
into
push
addr16
mov
xchg
popa
pop
or
ins
imul
jo
test
add
add
jnp
shl
into
cmc
retf
lods
adc
popa
cld
or
test
imul
mov
push
mov
sbb
adc
cmp
jmp
dec
xchg
mov
leave
mov
fdiv
ins
cdq
xor
out
or
mov
push
les
retf
movs
retf
repnz
aas
pop
inc
ja
xchg
pcmpeqw
push
ret
and
stc
push
xor
add
retf
test
(bad)
jle
cmps
or
inc
mov
jns
mov
push
outs
pop
fld
pop
daa
fild
and
ffree
je
pop
add
mov
cmp
stos
mov
dec
pop
lods
cmc
jge
inc
push
jge
(bad)
fld
adc
mov
xor
arpl
dec
dec
outs
add
xor
imul
and
ins
fist
cwde
pop
pop
call
and
push
nop
shl
cmp
repz
xchg
aad
or
push
cmc
call
xchg
jl
ret
jbe
bound
stos
and
aaa
mov
adc
cld
jae
leave
mov
(bad)
pop
inc
(bad)
jns
add
inc
mov
sbb
ss
pop
mov
cmp
xchg
test
scas
sub
icebp
addr16
sub
cmp
mov
add
repz
mov
shr
pop
imul
mov
call
push
aam
lods
cs
loopne
mov
cli
jmp
cli
rol
push
inc
dec
and
adc
stos
dec
data16
sbb
mov
adc
pop
pusha
xor
fwait
sub
sub
or
aaa
push
cmp
in
and
and
xor
jo
es
or
xor
and
adc
arpl
nop
jnp
dec
xor
mov
cmp
pop
mov
adc
xchg
and
(bad)
jb
jge
jns
or
mov
out
mov
pop
pushf
inc
mov
inc
fcomp
sub
std
jb
jecxz
xchg
push
das
mov
and
sub
pop
inc
sub
rcr
xlat
sar
out
call
xchg
push
(bad)
fcomp
dec
(bad)
mov
(bad)
out
push
sar
dec
add
inc
dec
repnz
outs
jmp
mov
push
ret
xchg
loopne
xor
(bad)
ret
lock
sbb
pushf
add
or
test
add
cmp
sbb
and
retf
and
xchg
fld
sbb
cmp
ficomp
push
inc
out
xor
movs
xor
jge
int
dec
sbb
mov
test
test
retf
shr
push
add
or
adc
xor
les
xchg
pop
sbb
push
mov
mov
add
mov
fs
lods
xchg
push
cmp
mov
pop
mov
imul
mov
and
adc
or
ds
sti
sub
sub
sbb
mov
in
push
inc
call
cmc
add
mov
or
xchg
int3
pop
and
arpl
mov
sbb
mov
xchg
pop
push
adc
xchg
pop
mov
mov
xor
loopne
sbb
data16
and
std
inc
sar
out
cmp
mov
test
das
test
xchg
mov
pop
popa
add
sub
or
cwde
retf
sub
jo
rcl
sbb
clc
push
je
push
cmp
mov
fnstenv
cmp
pusha
adc
mov
xor
gs
jle
call
jge
into
int
ins
cmp
mov
aam
dec
inc
and
call
push
mov
and
jecxz
repz
mov
loop
leave
inc
mov
(bad)
fbstp
or
out
mov
aaa
fisttp
into
or
sti
push
inc
dec
scas
sub
add
rcl
jl
push
xchg
mov
push
mov
ror
out
inc
iret
sti
or
aam
xchg
movs
pop
shr
fisubr
jmp
leave
cld
scas
out
and
sub
ror
or
or
(bad)
rcr
push
fidivr
mov
ins
dec
movs
jp
inc
pop
and
inc
xchg
mov
cmps
xchg
jl
fdivr
loop
cwde
mov
mov
xchg
clc
adc
adc
shr
leave
push
sbb
adc
outs
lds
(bad)
rol
ret
mov
fld
jnp
icebp
les
jge
nop
cdq
scas
test
jne
nop
mov
mov
sbb
dec
jl
and
js
daa
sub
pop
loope
fs
mov
in
push
xlat
dec
test
pop
aas
pop
mov
popf
int3
mov
xchg
popf
rcl
or
mov
xor
mov
js
in
cld
test
daa
xchg
or
out
dec
lea
cmp
leave
jmp
pop
dec
sub
fisttp
add
mov
push
xchg
cmp
and
call
mov
(bad)
push
xchg
cmp
or
call
inc
pop
sbb
rol
std
inc
fistp
shr
out
and
es
dec
dec
and
mov
retf
xchg
ja
fisttp
aas
push
mov
(bad)
add
sbb
xor
push
mov
push
ja
jl
(bad)
push
mov
xchg
sar
and
mov
inc
aas
ret
shl
stos
xchg
data16
arpl
jecxz
ja
adc
mov
(bad)
fist
sar
fidiv
sub
jg
in
jmp
popf
(bad)
push
mov
call
pop
nop
retf
out
or
ds
inc
(bad)
jmp
clc
pop
sub
fidivr
sub
mov
and
retf
pop
sahf
fdivr
sbb
or
jecxz
adc
mov
jmp
pusha
ds
jbe
inc
add
mov
dec
adc
and
and
jns
jmp
mov
in
loop
shl
or
jns
cmp
sub
xor
shl
sbb
xchg
ss
cmp
push
std
xchg
dec
mov
fisub
add
mov
or
jbe
ins
inc
adc
and
mov
mov
mov
or
xchg
mov
xor
xor
jmp
jns
cmp
jl
stc
xor
pop
fld
inc
mov
mov
je
or
arpl
aad
call
pop
fist
cmp
out
adc
stos
adc
and
sbb
adc
adc
cmc
leave
cmp
xor
out
sbb
xchg
into
and
outs
popa
adc
int3
jo
test
dec
mov
and
pop
mov
stos
cmp
lock
mov
or
jbe
xrelease
xor
and
mov
adc
fdiv
mov
inc
imul
mov
mov
xchg
cli
mov
xchg
dec
out
loop
outs
dec
xchg
push
scas
mov
pop
fsubr
push
sbb
xchg
push
call
arpl
rol
mov
inc
sbb
mov
mov
mov
call
xor
jns
sub
xor
ret
imul
outs
ja
push
in
(bad)
(bad)
in
dec
retf
hlt
loope
mov
js
aad
push
and
sti
mov
ror
adc
jns
mov
clc
sub
mov
cmp
addr16
or
add
push
leave
pop
sub
xchg
dec
push
aam
arpl
shl
and
(bad)
retf
mov
push
inc
or
ja
inc
jae
mov
mov
adc
inc
push
mov
jne
pop
sub
mov
jnp
xor
pop
in
mov
pop
lds
push
and
cmps
xor
mov
xchg
sub
pushf
in
adc
cmp
dec
sub
xor
repnz
dec
sub
jae
add
jno
mov
test
sar
scas
cli
adc
ret
out
add
mov
sub
(bad)
rcl
aad
jmp
pop
outs
pop
jo
ja
xchg
rcr
cli
(bad)
jmp
mul
dec
leave
mov
mov
push
inc
mov
xchg
add
mov
es
cmp
ins
je
pop
xlat
inc
pop
jg
mov
out
rcl
sub
mov
xor
mov
push
jno
ds
cld
scas
pop
fistp
ds
scas
inc
fld
dec
jne
mov
enter
cmovno
into
push
inc
cmp
shr
ins
mov
inc
mov
add
ror
mov
mov
ins
sub
bound
pop
sub
retf
enter
mov
(bad)
and
xor
cmp
icebp
stos
xchg
cmp
or
mov
and
jge
imul
sbb
push
icebp
and
cwde
out
rcr
imul
pop
dec
leave
in
ret
scas
and
test
addr16
in
jb
and
out
push
push
dec
(bad)
aaa
jl
(bad)
jb
add
xchg
sahf
pushf
jmp
xchg
mov
xor
or
push
int
rol
push
or
fcom
push
mov
jl
mov
int
loop
cmp
mov
mov
ds
xchg
adc
push
xlat
push
test
xchg
jl
pop
ret
in
jecxz
adc
std
push
jge
mov
ja
mov
jl
sub
dec
cli
adc
pop
outs
movs
jle
fmul
loope
lea
lods
mov
sti
in
jmp
(bad)
icebp
fistp
ret
sbb
adc
mov
lods
sub
cdq
lock
fidiv
dec
jg
push
mov
add
or
add
aaa
mov
ret
(bad)
out
push
fst
sbb
in
xor
out
xlat
and
cld
dec
int
or
add
pop
add
in
data16
sub
mov
retf
xchg
adc
retf
sbb
xchg
cmp
stos
cli
pop
xor
jnp
pop
and
inc
ret
enter
in
sub
xchg
add
popf
int3
jbe
mov
repnz
jo
int3
stos
cmps
mov
in
sbb
sbb
xchg
bnd
push
(bad)
xor
shl
(bad)
les
shl
inc
pop
jb
cmc
pop
fdivr
stc
fdiv
jl
js
fldcw
mov
pop
xchg
push
sbb
imul
sub
or
icebp
vmovaps
mov
rcr
pop
popf
fist
pop
out
pop
fst
sub
loope
daa
jp
es
loopne
mov
adc
mov
mov
push
sbb
or
aas
repz
bound
cld
dec
push
aam
rol
out
add
push
xor
ss
int3
jg
jl
pop
xor
push
pop
movs
pop
dec
xor
rcl
sbb
(bad)
pop
jg
arpl
add
inc
arpl
ds
push
inc
xchg
add
pop
pop
aas
lahf
pop
xchg
aam
mov
xor
mov
cmp
xchg
inc
xchg
push
push
dec
fldenv
xchg
arpl
das
or
data16
pop
shl
sbb
je
int3
pop
push
fild
ins
push
(bad)
adc
gs
mov
div
xor
xor
ins
scas
test
mov
xchg
adc
out
adc
pop
jns
push
lds
in
popa
cmp
mov
mov
les
repnz
cs
xchg
mov
mov
jmp
adc
mov
cmc
hlt
xchg
mov
inc
scas
or
das
and
mov
mov
add
mov
call
cmp
adc
mov
xchg
dec
(bad)
mov
leave
lods
push
push
(bad)
cwde
and
and
lods
xor
fs
retf
pop
xor
fdivr
mov
arpl
push
push
sub
fldenv
fwait
sbb
dec
cli
loop
inc
nop
inc
inc
hlt
jae
hlt
mov
add
fwait
shr
mov
cmp
dec
cmp
fisub
mov
mov
cdq
test
inc
daa
pop
mov
jne
inc
mov
sbb
adc
aaa
lahf
repz
out
sbb
sub
fisub
push
dec
lahf
out
aas
push
push
pop
xor
jbe
mov
aam
pushf
sbb
in
mov
or
and
mov
ins
dec
xor
sti
pop
js
pop
lock
pop
pop
mov
mov
sub
in
psubq
ja
repnz
fild
cmp
aaa
inc
bound
mov
int3
in
pop
mov
push
fs
jmp
adc
mov
leave
test
adc
sbb
adc
(bad)
fcomi
cmp
adc
ds
stc
arpl
push
adc
aam
loope
jnp
fldcw
repnz
pop
addr16
ret
sub
push
and
pushf
push
ror
mov
dec
ins
retf
jnp
dec
push
jp
fmulp
ret
xor
push
stos
xchg
mov
test
out
cmc
mov
mov
cmp
and
(bad)
adc
sti
push
bnd
dec
retf
sbb
sub
ror
mov
mov
adc
test
repnz
mov
jl
mov
cld
js
jnp
pop
imul
sub
stc
retf
add
pop
mov
jecxz
in
push
jmp
add
dec
cmp
and
ss
lea
fild
les
mov
cmp
leave
adc
mov
popf
test
mov
outs
sub
mov
xchg
mul
fwait
aaa
push
outs
jp
jne
cmc
or
jp
pusha
mov
mov
lea
mov
fs
and
sar
inc
mov
fadd
jne
es
rcr
ds
jmp
add
scas
jle
pop
ins
pop
mov
cmps
sbb
je
xor
call
sbb
pop
sub
and
adc
shl
pop
in
pop
pop
sti
adc
add
icebp
push
mov
or
mov
cmp
ds
mov
pop
mov
and
dec
mov
mov
fcmovnu
add
mov
arpl
cmp
lea
push
inc
mov
(bad)
addr16
or
push
and
or
or
daa
mov
(bad)
loope
(bad)
mov
idiv
aad
or
push
js
mov
mov
hlt
repnz
xchg
pop
dec
cmp
push
das
ret
and
les
je
push
movs
pop
or
jl
std
out
sbb
cmp
addr16
add
jle
add
xor
xchg
dec
imul
sub
out
bnd
add
xchg
sub
jle
mov
je
pop
mov
add
xchg
lock
and
mov
pop
or
stos
in
sub
test
mov
cmp
jmp
mov
cmps
inc
cmp
add
xlat
mov
sub
pop
into
test
out
sub
sbb
xchg
or
jmp
or
out
call
pop
or
int3
ror
and
adc
shl
fstp
out
imul
lods
mov
adc
ret
xchg
fnstsw
pushaw
ss
mov
push
bound
int3
out
es
arpl
xor
push
add
mov
mov
movs
xchg
aas
xor
push
fcom
mov
cdq
mov
mov
push
add
loopne
pop
vmaxss
sbb
fwait
cs
pop
inc
sbb
sub
arpl
jl
rol
sbb
retf
mov
jle
js
das
mov
mov
cwde
int
dec
cmp
out
push
ror
iret
xor
mov
add
jmp
je
scas
ja
push
enter
jmp
icebp
scas
or
dec
inc
and
adc
cmp
inc
or
(bad)
movs
in
mov
mov
jp
sahf
dec
in
dec
aam
sbb
inc
test
jge
sahf
mov
mov
test
xlat
sbb
ja
push
inc
inc
push
pusha
xor
out
lock
lods
es
jmp
scas
mov
(bad)
(bad)
ja
adc
jne
sbb
out
inc
dec
jmp
cmps
call
ss
mov
jo
inc
cmp
mov
mov
pushf
popf
pop
mov
in
jb
mov
retf
das
sub
mov
push
jbe
cmp
add
push
out
pop
and
adc
test
cmp
icebp
xchg
ret
fisttp
jecxz
js
mov
mov
push
cmp
adc
inc
sub
and
mov
or
dec
jp
xchg
or
in
lahf
lods
leave
aaa
das
je
outs
add
jl
push
xor
cmp
stc
pusha
sbb
ins
loope
pop
inc
sbb
cmp
push
sti
sahf
test
in
ret
xor
adc
pop
push
and
sahf
fadd
ficom
(bad)
in
int
push
shr
fucomip
push
repnz
enter
(bad)
cmps
jno
inc
int
jbe
add
enter
pop
cmp
stos
mov
jmp
sbb
(bad)
adc
pop
retf
data16
and
pop
repz
sub
mov
out
scas
mov
push
arpl
xchg
pop
outs
cs
mov
test
stos
inc
xchg
div
in
mov
mov
je
repz
xor
mov
imul
xlat
sbb
in
(bad)
sub
lahf
ja
out
dec
cmp
iret
addr16
in
jne
push
mov
cld
lds
inc
pusha
push
test
sub
ja
inc
fidiv
push
(bad)
fld
leave
fidivr
cmp
retf
push
pop
sti
push
pop
pop
pop
xor
xchg
push
jae
push
or
ds
adc
jecxz
cmps
ficom
bound
out
aam
mov
ins
inc
mov
and
dec
push
mov
pop
outs
in
fisubr
cmp
sbb
iret
cmp
dec
imul
in
shr
or
das
add
dec
(bad)
aam
push
or
(bad)
pop
mov
dec
mov
lock
jae
out
sub
push
lods
or
fsubr
mov
cmp
or
(bad)
test
cmp
dec
arpl
pop
adc
jne
fnsave
xor
xor
inc
dec
jp
cmp
(bad)
into
sub
arpl
clc
mov
bound
mov
xor
arpl
out
ret
cld
pop
sub
mov
jbe
jmp
imul
inc
push
xor
mov
outs
sub
lods
xchg
(bad)
mov
push
push
mov
cdq
push
call
call
dec
mov
cmps
into
data16
or
xchg
push
in
gs
or
pop
xlat
mov
rol
mov
ret
push
mov
cmp
test
and
sar
icebp
ret
je
pop
les
and
pushf
mov
prefetchwt1
shl
pop
pop
mov
inc
dec
sub
pop
hlt
icebp
xchg
(bad)
ret
call
xchg
pop
aas
pop
inc
std
sar
loop
std
or
pop
jno
lock
int3
ins
add
mov
jno
jne
or
punpckhwd
xchg
and
jmp
and
dec
(bad)
jae
mov
xor
cmp
inc
shl
fwait
adc
mov
mov
sti
sbb
je
test
ja
pop
loopne
mov
xchg
(bad)
xchg
cld
aad
push
out
inc
test
into
retf
inc
mov
sbb
xlat
mov
stos
jmp
mov
scas
in
adc
and
jl
pusha
aam
movs
mul
icebp
or
pop
fs
ret
push
dec
icebp
imul
out
mov
fwait
cmp
mov
in
mov
(bad)
fsub
popa
sub
jecxz
movs
lea
mov
(bad)
and
ja
inc
aam
jp
in
mov
jmp
adc
faddp
or
or
push
xchg
dec
sahf
nop
gs
cld
mov
push
into
std
mov
sub
mov
retf
jbe
mov
lock
(bad)
neg
cmp
loope
test
pop
cmp
mov
aam
mov
mov
popf
sbb
pop
ret
cli
ja
aad
repnz
and
cdq
in
pop
or
(bad)
(bad)
fnsave
test
xchg
cmp
sbb
jl
leave
(bad)
and
mov
push
out
or
fucomip
ja
pop
push
jp
outs
adc
mov
mov
ins
mov
dec
data16
dec
pop
lds
push
inc
mov
inc
sbb
mov
dec
(bad)
mov
or
dec
add
inc
mov
pminub
int3
mov
adc
ss
mov
push
mov
mov
sbb
sub
mov
push
sub
jmp
adc
sbb
dec
nop
sbb
repz
mov
cmp
mov
inc
loope
and
mov
out
clc
js
and
std
imul
push
and
xlat
fst
repnz
dec
sar
xlat
jecxz
in
xchg
loope
retf
cmp
or
sbb
lods
lahf
mov
sar
addr16
in
adc
data16
jnp
adc
scas
inc
pop
cmp
ror
push
jecxz
loope
pop
icebp
imul
xor
mov
jmp
sti
enter
outs
mov
out
mov
pop
or
fild
fisttp
dec
repnz
push
inc
lock
sar
repz
adc
retf
hlt
popa
sub
fsub
jmp
dec
adc
pusha
ins
aam
push
and
mov
stos
xchg
mov
loope
stc
mov
stos
out
ds
mov
lods
mov
icebp
test
loop
mov
xchg
stos
add
dec
mov
das
jmp
pop
cwde
pop
sbb
fsubr
lahf
cmp
and
cld
cli
xor
fld
std
cli
mov
sub
mov
(bad)
inc
jb
jb
pop
sub
add
in
push
jmp
test
scas
sbb
test
sar
movs
fdivr
adc
hlt
xchg
in
mov
cmp
or
mov
add
mov
pop
fsub
cmp
loopne
ins
and
cmp
lock
mov
mov
and
bound
push
shl
test
call
ret
mov
into
(bad)
icebp
in
arpl
movs
or
cwde
iret
loopne
mov
xor
sub
mov
dec
push
ret
(bad)
cli
sbb
into
pop
(bad)
mov
push
das
fwait
test
call
in
xor
inc
pop
mov
jae
test
xor
test
fwait
in
mov
cmp
dec
mov
jecxz
mov
push
and
fs
(bad)
mov
xor
cmp
in
test
xchg
bound
add
bnd
push
xlat
retf
or
cmps
cmp
ins
sbb
aad
loope
lea
in
sbb
jbe
push
dec
test
popf
fwait
mov
mov
xchg
shl
jbe
pop
xlat
cmp
ins
push
sbb
push
pop
mov
les
pop
mov
cmp
mov
xchg
add
xor
push
mov
push
std
movs
cmp
jmp
or
movs
or
mov
xor
adc
or
repz
in
loope
je
or
ja
push
cld
arpl
popf
ja
xchg
dec
xchg
cmps
pop
cmps
xor
js
cmp
je
inc
cmp
push
cdq
xor
mov
adc
pop
cmp
jne
mov
hlt
or
xchg
in
sbb
adc
jnp
ret
imul
rcl
cmp
add
and
std
retf
cli
jge
loope
popa
jmp
popa
xor
push
jge
lods
sbb
lods
jbe
shl
mov
ds
ja
into
mov
add
clc
scas
sub
or
push
movs
stc
push
mov
outs
pop
int3
adc
aam
or
xchg
sub
cmps
cdq
jo
cmps
sub
add
dec
inc
xor
leave
cmc
mov
xlat
into
jle
inc
and
stos
fstp
inc
push
test
mov
lds
inc
pop
data16
jp
cmps
icebp
int
sub
fwait
mov
cmp
loopne
inc
sbb
sub
jmp
outs
lock
xor
pop
push
pusha
xchg
ds
js
(bad)
sub
test
xor
and
or
mov
pminub
jns
popf
and
push
lock
daa
sbb
ret
popf
fnstcw
pop
outs
push
repz
or
jl
xchg
jns
adc
mov
and
int
(bad)
loope
mov
jmp
ja
imul
je
xor
loope
outs
lods
repnz
sub
rcr
pop
cmp
sbb
cwde
retf
enter
jge
in
sbb
push
jmp
rcr
ror
js
fisub
xchg
test
nop
mov
cwde
call
xchg
cli
sub
pusha
(bad)
das
push
push
mov
push
add
mov
mov
addr16
push
push
test
sbb
fild
dec
or
jmp
cwde
test
fdiv
out
sahf
popf
dec
cmp
dec
mov
cwde
sub
icebp
inc
jb
mov
xlat
test
dec
mov
(bad)
xchg
test
ja
test
cmp
jl
mov
fist
js
add
std
adc
cld
(bad)
mov
mov
push
push
sbb
loopne
cmps
sbb
mov
xor
dec
cmps
pop
and
xchg
(bad)
fist
ja
ja
je
cmp
sbb
xchg
push
push
and
mov
int
and
or
mov
pusha
push
mov
loopne
addr16
xor
fwait
mov
cwd
iret
push
imul
pusha
ss
bound
xlat
imul
in
pop
int3
sahf
mov
sub
jl
jle
cmp
xchg
aas
cmp
dec
int3
dec
jnp
lahf
outs
icebp
dec
lahf
sbb
das
xchg
and
jmp
xchg
cld
sub
xor
cwde
idiv
push
adc
inc
sub
mov
mov
(bad)
lods
enter
shl
call
div
cmp
cwde
xor
mov
add
fimul
jle
stos
add
push
pop
add
leave
mov
out
sbb
fist
cmp
scas
ret
and
dec
std
mov
dec
xor
mov
jg
ror
pop
shl
mul
adc
mov
fdivr
xchg
sub
sbb
jecxz
mov
int
jae
repz
push
mov
pusha
and
sbb
cmp
into
push
inc
imul
arpl
into
loop
inc
outs
sub
adc
dec
or
sub
inc
jge
int3
lods
or
ins
dec
test
loop
outs
add
push
call
xor
stos
pop
leave
pop
xchg
fistp
pusha
in
daa
call
lds
sub
sahf
daa
js
aas
lea
outs
mov
inc
lahf
mov
imul
add
xchg
call
enter
popa
imul
imul
sub
fldenv
loopne
mov
out
mov
sbb
nop
jg
sub
mov
pop
repz
pop
dec
mov
ret
call
or
inc
inc
imul
dec
iret
ret
pusha
imul
jae
(bad)
pop
push
adc
addr16
ss
pop
mov
int3
sti
lods
push
movs
mov
(bad)
lods
mov
sub
inc
sub
prefetch
sub
sub
pusha
(bad)
rcl
push
jge
mov
push
mov
lahf
div
stc
aas
ret
out
and
cmp
inc
dec
sbb
sbb
xchg
mov
push
cmps
imul
mov
mov
push
enter
repz
pop
mov
add
shl
mov
sbb
jmp
int
jle
test
sbb
mov
xor
js
(bad)
adc
adc
sbb
push
shr
sbb
iret
jnp
ror
jg
int
out
std
sbb
lds
inc
inc
fcmovu
pop
push
ja
push
sbb
sti
jbe
(bad)
pusha
ss
out
in
pop
sbb
sub
icebp
into
stos
or
push
je
cld
mov
jp
push
imul
aam
ret
and
pop
(bad)
mov
fucomi
xchg
clc
imul
fdivr
fld
mov
and
cmp
repz
jns
daa
mov
pushf
sub
fsub
push
and
sub
xchg
xor
cmp
add
push
or
mov
adc
ins
sar
push
inc
jo
sbb
dec
jmp
mov
repz
and
push
push
jg
push
adc
(bad)
add
cmp
in
mov
xchg
cs
aas
js
lahf
ror
push
dec
into
shl
icebp
jne
mov
push
retf
cmps
jo
test
cmps
xor
push
call
retf
adc
pop
popf
call
jmp
and
int
fisttp
inc
ret
inc
mov
scas
or
add
jb
push
pop
add
shr
dec
jecxz
or
xchg
movs
das
mov
pop
xchg
mov
jmp
fwait
or
shl
cmp
ins
retf
je
lahf
xchg
push
and
aam
sahf
sbb
push
jle
sub
dec
adc
jmp
mov
mov
mov
out
sbb
dec
cwde
push
stos
movs
je
mov
xor
jmp
pop
ret
jae
lods
mov
push
(bad)
adc
dec
adc
pop
push
scas
scas
sahf
xchg
aas
jmp
fistp
xchg
dec
mov
or
mov
sbb
push
frstor
mov
loop
push
icebp
not
cmp
mov
dec
popf
xchg
rcr
mov
mov
paddusb
shr
jle
std
outs
jnp
out
les
jge
out
cmp
aam
and
sub
in
les
dec
pop
push
popa
add
scas
mov
iret
ins
inc
(bad)
mul
jl
fwait
inc
lock
mov
push
js
in
iret
xchg
mov
jo
rcl
pop
jmp
je
xlat
fsubr
pop
ret
xor
jno
add
ins
or
mov
lea
lea
sub
lea
push
outs
mov
sbb
or
call
pop
pop
sbb
pop
jnp
dec
scas
(bad)
mov
xchg
(bad)
pop
aas
in
mov
mov
mov
fstp
inc
jge
(bad)
bound
and
test
add
ret
iret
or
jbe
cmps
or
xchg
pop
ret
mov
out
retf
dec
xor
push
pop
adc
(bad)
cmc
jmp
dec
jb
xor
jns
(bad)
mov
int3
dec
pusha
cs
lock
xor
or
fs
das
pushf
sub
mov
and
sub
ja
imul
pop
rol
(bad)
pushf
xlat
in
inc
jl
int
and
in
jp
test
pop
rcl
dec
push
shl
jle
cmp
mov
inc
and
in
out
into
add
jnp
es
mov
xchg
add
sbb
in
mov
dec
jno
cwde
mov
in
sbb
jne
paddusw
jp
pushf
clc
push
xchg
mov
push
fadd
push
mov
fucomp
push
cmp
push
adc
pop
fwait
sti
repnz
lods
int3
pop
(bad)
aad
into
daa
dec
mov
popa
retf
mov
inc
shl
fcom
(bad)
mov
mov
es
dec
pushf
inc
imul
and
xor
mov
das
movs
push
jne
mov
pop
out
cwde
sbb
pushf
pop
mov
fwait
je
mov
clc
mov
(bad)
xor
ja
sub
into
cmp
out
adc
aaa
pop
pushf
inc
test
shl
jl
mov
jae
(bad)
scas
icebp
add
cwde
ins
push
push
mov
or
sbb
xchg
hlt
data16
jb
shr
jno
mov
jns
fisub
or
mov
push
std
gs
popf
or
mov
stos
adc
jg
cmps
push
push
inc
pushf
or
neg
mov
aaa
mov
cmc
add
dec
cmp
pop
nop
dec
mov
dec
xchg
xor
test
data16
mov
in
cmps
and
cs
xlat
jg
push
mov
outs
inc
xchg
loope
mov
pop
and
and
fwait
call
mov
dec
pop
shl
cmps
push
stc
into
test
push
(bad)
(bad)
jecxz
push
retf
xchg
pop
mov
shl
pop
sti
test
pop
pop
cmc
pop
shr
ret
sahf
test
mov
sbb
xchg
out
addr16
aaa
jle
aaa
scas
push
adc
adc
popf
retf
push
(bad)
movs
sbb
mov
push
inc
inc
xor
pop
ja
out
cmp
pop
fdivr
cmps
jnp
rcr
scas
test
jle
add
add
jno
adc
sbb
imul
ins
repnz
mov
push
adc
add
test
fwait
dec
mov
test
das
or
mov
and
mov
push
xor
popf
add
fld
leave
fisub
mov
mov
push
dec
int3
mov
mov
or
sub
(bad)
mov
add
nop
cmp
and
hlt
mov
std
mov
dec
inc
out
faddp
mov
(bad)
mov
jae
and
pusha
cs
test
ffreep
in
xchg
mov
push
pop
retf
aam
fcomp
test
xchg
jmp
aaa
mov
aam
jle
jp
(bad)
xlat
data16
call
jnp
ss
das
inc
mov
sbb
shl
mov
into
sti
inc
dec
icebp
mov
ins
inc
and
outs
jle
mov
add
inc
jecxz
mov
mov
or
xor
sbb
in
or
into
jne
xchg
mov
rcl
dec
cmp
xor
pushf
mov
pop
sbb
and
aam
aas
xchg
mov
push
jo
sub
or
mov
loop
xchg
pop
add
fadd
cmp
mov
adc
cwde
xor
adc
dec
imul
xchg
aam
popf
inc
jecxz
mov
dec
mov
push
std
shr
push
test
cld
cmps
call
nop
ins
xchg
hlt
fld
out
mov
stc
mov
xor
pop
xchg
call
sbb
dec
mov
cli
adc
mov
out
out
aad
retf
push
add
aam
xlat
retf
es
jge
ret
pop
dec
pop
pop
mov
test
movs
sar
(bad)
nop
jne
push
dec
jg
iret
(bad)
and
jecxz
push
adc
mov
repnz
push
or
sub
sub
add
in
stos
jmp
lea
aad
inc
cmps
rol
xor
scas
pushf
fnsetpm(287
and
inc
sbb
mov
mov
call
fist
call
jge
cs
jo
push
in
pop
mov
pop
sbb
outs
or
out
pop
movs
es
xchg
inc
mov
iret
aam
push
xchg
cmp
jae
sbb
add
ds
xchg
test
or
dec
xchg
jnp
xchg
lods
adc
call
les
mov
dec
int3
movs
jg
pop
pop
fdivr
jne
xlat
sbb
loopne
in
out
mov
mov
pop
(bad)
cdq
leave
lds
aad
fdivr
cmp
outs
mov
pop
sub
jb
cwde
faddp
xlat
leave
jmp
inc
jmp
in
xchg
sub
mov
cmp
test
mov
inc
dec
mov
cld
jbe
push
(bad)
movs
(bad)
add
dec
stos
cwde
inc
xchg
iret
ror
add
(bad)
test
fcmovnu
sti
cmp
jl
imul
sbb
mov
pop
mov
fs
xchg
fisttp
imul
hlt
inc
retf
xor
xor
inc
loopne
sbb
aaa
cld
or
sbb
fiadd
adc
je
add
rcl
test
inc
retf
in
addr16
inc
mov
iret
out
imul
xor
(bad)
nop
call
(bad)
cmp
stos
lods
imul
mov
nop
mov
jo
sub
cmp
jae
xchg
jge
and
push
inc
mov
jae
push
bound
inc
cdq
popa
pop
and
out
xor
xchg
pop
fldpi
ja
push
arpl
cmp
lss
sbb
push
idiv
shl
es
jne
mul
mov
sub
pop
pop
out
jg
pop
push
pop
mov
add
leave
cli
and
int3
mov
cwde
shr
lea
mov
aam
popa
cmp
gs
xchg
push
push
aam
mov
(bad)
call
xor
and
stos
pop
mov
in
sub
sahf
jae
lock
retf
mov
ret
enter
into
pop
jecxz
fcom
mov
cmp
dec
fidivr
xchg
loope
adc
ins
xchg
jecxz
add
lar
dec
int
sbb
mov
int
int
popa
mov
xchg
pushf
outs
push
adc
ins
iret
repz
cs
pop
sub
mov
xor
or
in
jne
jno
jl
inc
test
pop
sbb
and
cmp
mov
sbb
clc
call
cdq
sar
mov
xor
dec
mov
mov
imul
mov
xchg
xchg
inc
arpl
les
pop
and
inc
pop
retf
pop
mov
xor
mov
inc
cwde
dec
mov
and
ror
fcmovnb
add
lods
jae
repnz
pop
cmp
inc
ins
loop
push
sub
call
mov
outs
xor
call
and
fisubr
fwait
loop
ins
sbb
xlat
sub
mov
daa
iret
jl
hlt
dec
ins
lock
shl
push
int3
jmp
add
rol
sar
push
jae
xchg
cmc
fsub
das
sar
daa
push
daa
and
aaa
loopne
push
shl
nop
mov
call
pop
int3
data16
xchg
jmp
pop
pop
test
das
inc
mov
(bad)
mov
(bad)
mov
mov
fwait
and
xor
add
dec
rcl
fld
mov
dec
in
push
mov
push
jbe
movzx
ja
xlat
mov
jb
in
sbb
mov
mov
cdq
jae
sti
pop
jbe
sti
xor
or
je
and
jb
adc
pop
pusha
lods
mov
jmp
stc
xor
xchg
int
pop
mov
mov
sub
pop
fs
mov
xor
lods
push
cmp
test
inc
jo
mov
enter
jl
and
xchg
cmp
cmps
scas
push
iret
retf
fstp
cmp
movs
adc
aam
out
cmc
push
ficom
mov
arpl
in
fcomp
mov
test
cmp
jp
cld
aam
ret
sbb
xor
(bad)
pop
das
stc
dec
shl
xchg
xchg
fsub
call
icebp
or
das
adc
dec
enter
and
je
arpl
addr16
in
jle
scas
dec
or
add
pop
cmp
adc
pushf
sahf
fimul
inc
cs
lock
jp
dec
int3
arpl
push
adc
fwait
es
iret
ret
dec
iret
rcl
icebp
lahf
scas
pop
jmp
mov
and
xor
movs
sub
mov
sub
cmp
ja
fmul
shl
(bad)
mov
add
adc
mov
add
add
cld
lods
les
mov
retf
les
mov
inc
xchg
inc
mov
pop
mov
and
in
pusha
popf
out
xchg
mov
dec
retf
xchg
cmp
dec
xor
sub
mov
retf
rcl
xchg
xchg
ds
mov
xor
mov
lods
arpl
arpl
es
addr16
mov
dec
add
jno
mov
leave
aas
pusha
inc
push
test
inc
dec
dec
lahf
sbb
push
push
push
pop
(bad)
pushf
es
outs
loopne
xchg
lods
mov
jg
mov
cmp
scas
test
dec
outs
pop
sub
arpl
(bad)
adc
sub
sbb
dec
scas
inc
xchg
sbb
pop
cmp
in
stos
adc
in
push
pop
mov
repnz
arpl
shl
mov
push
fcomp
dec
add
cdq
idiv
jmp
mov
(bad)
jp
sahf
xor
xchg
shl
mov
call
dec
push
jmp
add
pushf
pushf
jge
mov
xor
cli
pop
sub
ret
mov
or
js
mov
es
sbb
pushf
cdq
mov
fisubr
push
ss
lods
and
fadd
rcr
dec
iret
or
add
sti
xchg
mov
mov
mov
addr16
pusha
inc
cwde
fadd
pop
imul
js
jmp
lea
loopne
xchg
xor
mov
mov
inc
dec
dec
xchg
mov
cld
fistp
and
lahf
arpl
lods
mov
aas
pop
or
enter
jp
shl
mov
adc
xchg
sti
test
pop
stos
js
xchg
and
inc
daa
push
or
jl
out
mov
cmp
cmp
and
les
and
jmp
pop
test
nop
icebp
cmp
cmp
data16
inc
das
dec
lods
inc
addr16
ftst
in
and
in
(bad)
outs
lock
sbb
xchg
push
and
cmc
js
and
add
push
mov
xor
cli
push
pop
in
jmp
xchg
(bad)
(bad)
sbb
adc
push
mov
mov
pop
cmp
push
dec
jns
ins
add
jecxz
xor
jmp
out
jmp
mov
adc
ins
scas
(bad)
mov
or
inc
pusha
loopne
pop
sub
jo
xchg
cmp
inc
fidivr
xchg
xchg
mov
dec
cmc
jge
sbb
pop
xchg
(bad)
pop
test
call
dec
icebp
jbe
ret
out
cmp
xor
fnsave
sbb
dec
sub
call
cmc
les
jecxz
xor
imul
fwait
sbb
jp
rcr
xchg
test
xor
inc
jnp
ss
jne
cs
fst
or
mov
fs
sub
push
mov
fild
cs
popf
bound
xchg
push
sahf
daa
push
mov
icebp
cmc
xchg
pusha
mov
push
push
ins
loop
out
or
cmp
sar
mov
sub
add
outs
loopne
sub
pop
inc
adc
adc
jo
movs
and
pusha
pop
test
inc
int
(bad)
shr
mov
lahf
mov
cmp
jne
fmul
out
enter
(bad)
xchg
into
mov
and
jns
sub
adc
cmps
and
add
iret
arpl
(bad)
xchg
and
pop
pop
sub
sub
add
(bad)
and
push
add
lods
rol
sub
test
add
inc
sbb
add
arpl
add
or
and
add
call
.byte
