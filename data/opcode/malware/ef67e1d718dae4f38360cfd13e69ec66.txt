push
push
rol
push
mov
sub
mov
push
push
push
call
add
mov
call
add
mov
mov
push
mov
(bad)
(bad)
pop
cld
test
je
push
push
xchg
add
pop
mov
lea
push
smsw
(bad)
pop
imul
and
clc
push
movs
cmp
hlt
je
push
lahf
ss
popa
pop
xor
out
mov
lea
push
mov
not
push
mov
cld
lock
mov
mov
aas
mov
adc
mov
jmp
aam
sti
sbb
in
ret
and
add
add
clc
mov
push
jne
rol
retf
test
xor
je
mov
inc
test
je
push
jne
mov
mov
add
(bad)
(bad)
inc
add
test
je
mov
es
je
test
(bad)
mov
push
int
inc
jmp
ret
ret
lea
add
std
cld
mov
inc
shl
sub
lea
push
mov
lahf
lea
mov
add
push
iret
add
add
jg
out
dec
dec
jne
push
adc
cdq
imul
(bad)
dec
add
mov
add
rep
dec
jne
mov
pop
enter
jae
sub
add
adc
push
jb
je
arpl
cmp
imul
dec
sbb
fldcw
adc
and
jne
sar
fldenv
push
sbb
xor
inc
hlt
mov
hlt
addr16
adc
movs
shl
hlt
out
(bad)
frstor
lods
add
mov
mov
jmp
lock
jb
leave
add
pop
push
xor
inc
leave
add
push
jb
out
shl
dec
mov
leave
jne
int3
pop
ins
(bad)
sbb
(bad)
fisttp
pop
mov
mov
test
je
push
mov
pop
mov
jg
inc
inc
mov
mov
rep
push
mov
std
mov
mov
mov
push
sbb
sbb
outs
fs
cmp
pusha
pop
(bad)
mov
(bad)
hlt
fnstcw
mov
or
rcr
add
pop
jmp
fistp
fldcw
repnz
sub
and
and
arpl
shl
add
mov
mov
push
mov
or
jne
mov
jns
cli
add
mov
icebp
lock
rol
lea
out
addr16
jno
movs
hlt
push
test
dec
call
xchg
add
cs
push
lea
mov
pop
inc
push
(bad)
mov
push
cmp
jg
in
fstp
fld
fsub
fbstp
inc
fcomp
inc
xchg
pusha
mov
mov
(bad)
mov
repz
adc
pop
pop
jmp
add
xchg
xor
dec
inc
add
ror
or
retf
or
cmp
sub
push
int
pop
in
and
push
and
mov
(bad)
(bad)
dec
test
jne
xor
test
je
cmp
je
dec
ret
test
jne
xor
cmp
inc
(bad)
(bad)
jg
ret
test
add
add
or
je
cmp
jne
or
je
icebp
mov
adc
inc
add
adc
cmp
jne
mov
faddp
fwait
das
or
jne
jmp
cmp
mov
inc
aas
jmp
sub
test
push
mov
add
aam
int
retf
dec
xor
std
les
rol
pop
pop
dec
push
push
aad
inc
call
mov
test
cmp
cs
mov
push
and
xor
clc
lods
sahf
popa
enter
fiadd
pop
shl
push
outs
inc
or
pop
sub
mov
adc
test
cwde
cs
fld
out
pop
mov
sbb
sub
mov
lock
xchg
adc
pop
push
fadd
clc
add
test
lock
mov
arpl
xchg
inc
in
mov
and
pop
ret
mov
mov
and
push
mov
(bad)
or
inc
(bad)
shr
(bad)
jmp
push
push
push
sub
mov
les
dec
xchg
in
in
or
push
mov
into
and
xor
loope
and
mov
cmp
fdivr
inc
or
mov
push
add
add
das
sbb
leave
inc
push
xor
ror
push
jp
gs
out
aad
adc
add
lea
hlt
jo
mov
pop
pop
adc
inc
cld
test
fisubr
pop
xchg
mov
fs
sub
add
or
sbb
punpcklbw
inc
in
inc
in
or
xchg
pop
ja
into
pop
dec
adc
or
xlat
mov
or
jne
and
ja
outs
and
movs
cmp
jp
cmp
jg
inc
hlt
fstp
fld
fadd
fcomp
inc
(bad)
dec
jl
pop
inc
mov
add
int3
fstp
fld
fadd
arpl
les
fld
push
sub
bound
ss
dec
dec
and
pusha
in
sub
pop
nop
jne
call
call
push
or
add
push
pop
adc
(bad)
dec
pusha
test
das
or
leave
add
loope
mov
mov
je
push
sub
fcos
xor
add
pop
pop
sub
shl
mov
cld
fstp
fld
fmul
in
ds
pop
inc
addr16
sar
test
pop
push
xchg
cwde
sub
cmp
(bad)
adc
ja
aaa
dec
inc
es
leave
ret
mov
mov
sbb
cmp
mov
mov
rol
ret
inc
ror
out
xchg
adc
inc
mov
sub
cmps
fst
std
pop
push
fld
or
adc
sbb
call
and
fild
fstp
fld
fsub
xor
add
sti
adc
add
push
pushf
and
fbstp
add
pop
or
iret
dec
and
pop
adc
cmp
fwait
push
mov
pop
inc
outs
adc
or
sub
mov
sub
pop
rol
(bad)
leave
ins
mov
sbb
mov
scas
add
jo
rol
hlt
dec
xor
push
pop
inc
test
inc
adc
fsubr
dec
mov
xor
lods
sbb
or
add
or
mov
fild
inc
mov
inc
or
mov
sbb
(bad)
mov
add
lods
aaa
xchg
(bad)
xchg
sbb
xor
mov
and
push
popa
cmp
xor
push
cmp
arpl
fmul
or
rep
add
push
push
add
fnstsw
lods
stos
daa
inc
test
fst
push
mov
sub
lahf
xchg
cmp
cld
cmp
xchg
or
data16
mov
mov
addr16
lods
lock
jmp
adc
mov
mov
add
or
lds
push
mov
add
mov
rep
neg
mov
jecxz
rol
sti
scas
add
in
push
mov
mov
xchg
lea
push
push
idiv
mov
pop
push
push
mov
mov
add
retf
jnp
fdiv
scas
pop
jmp
mov
cmp
mov
pop
sub
je
dec
popf
hlt
mov
enter
test
repz
clc
cli
mov
into
sar
push
mov
jge
add
mov
mov
stc
or
xor
jg
and
ror
xchg
ror
or
jg
stc
cmp
je
cmp
push
data16
and
add
xor
int3
(bad)
mov
mov
push
repz
mov
push
mov
and
mov
adc
or
jmp
cmp
xor
fst
popa
and
in
dec
dec
sbb
mov
adc
fisttp
mov
cmp
sbb
sbb
jmp
mov
mov
ja
shl
jo
jmp
pop
mov
push
add
mov
mov
xchg
adc
js
mov
fs
pop
or
ret
ret
test
fninit
jp
push
mov
mov
add
(bad)
or
adc
xor
inc
jmp
jmp
enter
in
rcr
popa
int
enter
int3
add
inc
or
inc
add
(bad)
(bad)
(bad)
jg
clc
push
ja
test
(bad)
dec
mov
xchg
ret
push
mov
or
xor
repnz
mov
pop
test
mov
mov
ret
mov
dec
or
cld
mov
ret
xor
(bad)
inc
pop
ret
cmp
ja
je
cmp
je
cmp
sub
(bad)
int3
add
fist
ins
sbb
mov
add
add
add
dec
xchg
cmc
sub
add
sbb
je
pop
add
jne
jbe
das
je
in
sbb
adc
icebp
ret
cmp
xchg
iret
mov
loope
in
jae
sbb
call
in
push
push
mov
push
mov
lea
rep
mov
sti
(bad)
and
inc
and
inc
adc
pop
push
jmp
mov
(bad)
xchg
dec
jg
cmp
jge
mov
jmp
or
add
inc
xor
cmp
mov
jne
inc
dec
add
jmp
cmp
std
(bad)
clc
add
mov
jmp
cmp
sbb
add
and
inc
adc
sbb
and
add
mov
lea
mov
lea
push
push
loop
push
sbb
and
inc
add
inc
or
movhps
push
loopne
sti
call
adc
scas
mov
push
call
fwait
or
xor
(bad)
sub
fdivrp
fild
dec
and
mov
pop
pop
add
ret
pop
pusha
pop
pop
(bad)
lods
add
sbb
sub
push
jg
push
add
add
add
inc
add
add
pop
xchg
jge
(bad)
push
add
sti
lds
into
shr
or
sub
nop
aas
dec
or
outs
clc
(bad)
fst
mov
ror
pusha
lea
cs
mov
adc
push
add
mov
push
or
ret
dec
call
icebp
mov
sub
add
call
sti
(bad)
mov
ret
add
jp
mov
push
push
in
sub
add
mov
cvtpi2ps
or
mov
jge
std
(bad)
inc
imul
push
mov
xor
test
setl
dec
and
mov
mov
sbb
mov
movs
jg
or
leave
sbb
dec
and
cmp
mov
jl
mov
cmp
jle
inc
jne
inc
or
(bad)
push
cmp
mov
mov
int
cdq
xor
sub
inc
cdq
idiv
adc
(bad)
cmp
pop
add
pop
mov
inc
or
push
mov
mov
mov
adc
and
rol
mov
push
mov
mov
call
sub
sub
xor
sub
xor
pop
jmp
and
clc
add
xchg
or
add
cdq
sbb
add
cld
das
push
or
das
fsubr
adc
or
and
mov
test
je
cwde
xor
cmp
ja
sub
mov
jmp
test
je
mov
test
jnp
test
inc
test
jne
jmp
inc
push
mov
stc
inc
dec
pop
shr
out
mov
push
add
adc
stc
fisub
add
add
xchg
ret
jae
je
add
sub
div
inc
add
mov
dec
adc
jle
sbb
fsub
and
mov
hlt
das
sbb
jmp
xor
cwde
add
sbb
pop
int3
add
add
inc
pop
lods
add
loopne
and
push
and
inc
out
jle
gs
ja
push
cmp
mov
jo
test
push
cmp
pusha
out
jne
push
fnstenv
fwait
jbe
push
push
xor
mov
jp
pop
out
fwait
retf
xchg
dec
retf
add
leave
mov
scas
adc
fistp
call
push
pop
mov
add
fadd
add
xor
mov
push
mov
out
pop
mov
adc
sbb
cld
or
js
ja
mov
jge
cmp
jne
jp
mov
mov
popa
cmp
test
fld
mov
xor
daa
jmp
and
adc
push
int3
nop
mov
daa
and
push
aaa
cld
or
cs
shr
and
ja
ds
push
mov
cmp
sbb
mov
push
add
in
jo
imul
ja
out
outs
add
je
push
sub
add
push
(bad)
lock
cmp
ss
arpl
mov
shl
pop
sbb
out
cwde
mov
lock
inc
pextrw
(bad)
mov
pop
pop
pop
retf
adc
pop
idiv
jg
imul
lea
ja
ja
mov
jbe
shl
into
push
and
sar
lock
mov
sub
and
rep
pop
(bad)
jle
je
or
or
push
add
nop
leave
addr16
outs
add
mov
je
iret
icebp
enter
jne
fbstp
mov
adc
or
movsx
imul
jg
mov
add
and
ror
xor
(bad)
mov
fld
mov
mov
fwait
(bad)
or
push
or
bound
mov
and
test
ins
mov
cmp
arpl
pop
jns
jmp
push
mov
mov
mov
mov
mov
xor
add
jmp
mov
psraw
ror
add
test
mov
and
or
add
fsubr
push
rcr
(bad)
out
add
cmp
cmp
jne
mov
push
adc
mov
call
nop
add
ret
test
jne
mov
push
lea
std
sbb
pusha
add
xor
pop
das
aas
std
arpl
add
pop
jmp
cmp
jle
xchg
add
cmp
out
scas
jne
mov
sbb
sbb
cmp
push
and
fisttp
add
cmp
push
pop
add
pop
add
xor
idiv
jo
in
xor
sar
mov
lea
test
inc
mov
popa
mov
movs
xor
pop
add
in
scas
and
inc
jb
mov
push
mov
mov
sbb
jmp
dec
aaa
sub
mov
sub
mov
je
add
push
jae
mov
dec
js
add
icebp
mov
sub
pop
adc
cmp
jae
mov
and
es
and
inc
mov
push
or
xchg
mov
or
inc
mov
sub
mov
test
mov
in
je
mov
push
pop
cmp
lods
cli
jg
les
add
jl
dec
or
clc
out
pop
clc
addr16
or
mov
shl
jl
mov
dec
fbld
adc
cmp
or
ret
out
xor
les
or
loope
test
sahf
push
and
arpl
add
loopne
push
push
push
push
call
fwait
and
je
ja
and
sbb
or
jp
jle
jl
sub
(bad)
into
in
pushf
xor
imul
adc
clc
dec
jno
or
pop
push
repz
out
bound
pop
or
dec
sub
add
shr
add
mul
dec
and
mov
push
push
push
pop
xchg
jae
push
aam
test
pop
in
mov
in
out
daa
cld
or
mov
sbb
nop
push
fxch
jo
adc
pop
sbb
sbb
ja
(bad)
add
repnz
cmps
or
sti
(bad)
int3
mov
icebp
adc
add
aas
sti
(bad)
aas
cld
shl
mov
and
add
adc
(bad)
nop
das
icebp
sub
pop
adc
push
imul
sti
fist
or
xor
pop
pop
mov
dec
add
(bad)
cmp
jne
cmp
mov
cmp
jge
push
out
dec
jmp
push
inc
xor
dec
add
mov
or
mov
inc
mov
mov
shl
mov
mov
fs
mov
pop
sbb
popa
(bad)
pop
test
or
adc
rol
push
lea
js
adc
add
outs
test
sub
add
jmp
int
dec
mov
lods
in
nop
nop
push
push
mov
in
or
fnstenv
mov
ins
pop
pop
mov
mov
mov
push
sub
add
push
fs
jb
push
call
add
cmp
jae
mov
test
sbb
sti
xchg
loop
sub
hlt
jg
mov
cmp
fnstenv
mov
inc
and
test
faddp
(bad)
jg
dec
adc
jmp
mov
push
mov
mov
fcomi
movs
mov
mov
movs
mov
push
sahf
sub
inc
pop
jo
inc
or
or
out
push
xchg
popa
mov
je
fstp
jae
sub
jo
das
or
inc
arpl
test
nop
nop
jnp
dec
(bad)
inc
jno
lea
cmp
jb
lea
mov
pop
sub
aaa
mov
fs
cmp
or
inc
xor
mov
pusha
clc
inc
add
dec
add
and
lea
mov
mov
mov
sub
cmp
jb
mov
push
data16
mov
sbb
inc
adc
add
int3
mov
das
fmul
cmp
and
aas
cmp
jle
cmp
mov
mov
inc
pop
cmp
das
outs
add
enter
sbb
push
or
inc
enter
add
aas
xchg
lods
aas
sahf
push
mov
mov
mov
(bad)
mov
inc
sub
sbb
fdiv
cmc
das
fcom
mov
(bad)
dec
add
push
add
mov
mov
mov
mov
or
(bad)
mov
mov
int3
mov
mov
mov
mov
mov
adc
fst
xor
or
dec
test
je
mov
sub
add
enter
into
call
loopne
std
xor
add
ret
push
and
inc
gs
push
ins
shl
imul
push
cwde
inc
and
dec
sub
jbe
sub
mov
mov
xor
ins
scas
xlat
mov
or
lods
jmp
mul
daa
push
xor
mov
adc
fwait
in
jle
push
push
push
jge
outs
push
icebp
cmps
or
mov
jo
sub
cld
(bad)
mov
lea
mov
mov
call
scas
sti
out
lahf
mov
inc
cld
dec
add
inc
or
adc
xchg
fmul
add
jne
fdivr
(bad)
push
pop
js
dec
mov
cmp
push
xor
sbb
outs
mov
test
je
lock
mov
ja
inc
jecxz
ja
loop
dec
hlt
(bad)
in
ret
dec
adc
xor
inc
jmp
mov
mov
(bad)
cmp
in
mov
jno
add
pop
pop
or
jnp
jns
add
popa
pusha
add
or
mov
lea
dec
dec
pop
add
xchg
neg
sbb
add
mov
je
cmp
cmp
fcomip
out
lea
lock
mov
fs
mov
push
sbb
adc
je
mov
add
or
daa
retf
xor
in
pop
sbb
xchg
add
push
ret
test
dec
add
gs
and
in
xchg
pushf
mov
or
sub
je
or
mov
mov
mov
inc
push
call
mul
(bad)
push
test
jne
pop
pop
outs
pop
ret
adc
mov
jo
push
retf
sti
mov
jg
mov
add
adc
pop
leave
pop
(bad)
call
pop
push
cmp
lea
jge
sub
lea
push
push
mov
(bad)
out
aam
mov
push
or
push
mov
adc
ss
ins
div
lods
push
adc
xor
adc
mov
jne
adc
and
add
test
int3
xor
push
sbb
adc
pop
pop
pop
adc
jge
lea
push
push
push
in
push
push
adc
lock
test
out
cmp
jge
sbb
push
and
(bad)
(bad)
(bad)
(bad)
pop
pop
pop
ret
mov
sub
cmp
jle
mov
sub
cmp
mov
jle
sub
add
hlt
test
dec
jmp
and
or
repnz
jle
push
lea
lea
ja
(bad)
sahf
leave
add
and
repnz
jge
adc
cmc
xor
enter
sbb
pop
add
rol
popw
xor
inc
add
and
push
or
xchg
push
add
das
jle
pushw
jg
sbb
push
push
cld
mov
loope
stc
mov
jne
mov
or
sbb
sub
js
jne
mov
mov
fcom
pop
dec
adc
ror
sti
or
test
je
cmp
lock
push
lea
or
mov
sub
cmp
jge
sub
mov
sub
or
sbb
imul
jmp
mov
sub
adc
js
in
sub
push
adc
pop
int
neg
cmp
add
popa
(bad)
std
xor
popf
dec
xchg
pop
mov
add
cwde
or
mov
and
lods
dec
and
sub
cmp
mov
ret
pop
neg
add
mov
add
jo
sbb
push
ror
les
add
inc
je
cmp
jne
pop
add
add
add
inc
ret
cmp
jne
loopne
data16
add
or
mov
shl
mov
fld
push
in
pop
add
cmp
ror
mov
inc
sbb
add
push
pop
jg
xchg
cmp
inc
or
test
jecxz
jg
pop
ret
jle
int3
mov
mov
cmp
jne
xor
pop
(bad)
(bad)
fstp
inc
ret
push
push
push
adc
jge
cld
repnz
pop
jne
inc
sub
mov
out
inc
pop
pop
pop
mov
and
mov
add
cmp
xor
add
mov
js
cli
push
xchg
pop
push
shl
or
pop
mov
adc
out
or
in
or
push
dec
mov
imul
jne
ds
mov
jmp
push
sub
dec
mov
test
or
std
rcr
sar
mov
mov
push
call
push
or
test
inc
sub
mov
sub
loope
outs
aaa
add
imul
push
cs
adc
jmp
ss
pop
aaa
out
ss
(bad)
ds
xchg
cmp
add
cmp
loopne
and
jns
les
or
(bad)
dec
and
ror
mov
jle
mov
mov
popf
bound
ffree
jle
jle
stos
neg
adc
inc
push
push
push
or
jge
pop
mov
jno
push
dec
and
push
push
and
and
dec
xor
mov
sbb
mov
iret
push
cmp
iret
or
adc
jno
or
pusha
shl
mov
sbb
into
enter
pop
xchg
pop
sbb
rcr
xor
push
dec
sbb
push
call
rol
xlat
sar
inc
push
push
test
je
mov
pop
xor
je
push
mov
or
sti
xor
dec
movs
push
mov
add
add
sub
or
add
adc
outs
pop
cwd
inc
sub
xchg
les
je
and
cmp
jg
inc
inc
and
cmp
jne
mov
or
inc
sub
rol
and
std
fist
test
mov
jle
mov
push
push
mov
ret
sbb
stc
fisttp
and
call
push
xor
je
push
ret
ss
ja
push
push
adc
ins
ret
scas
or
dec
out
cmps
clc
sub
add
push
arpl
xchg
push
inc
jmp
inc
xchg
add
add
add
cld
jae
adc
add
mov
addr16
fstp
hlt
adc
push
lea
mov
fdiv
mov
mov
jmp
add
or
je
add
loop
inc
or
push
add
es
jmp
mov
lea
call
cmp
je
inc
jmp
lea
pusha
popa
cmp
pop
ret
adc
and
aas
push
je
mov
cdq
xor
(bad)
je
jne
adc
sbb
jnp
ret
test
sbb
add
mov
popf
jae
icebp
call
push
and
rcl
push
cmp
xor
arpl
mov
ss
mov
mov
rcr
bound
js
sub
js
pop
adc
sbb
iret
mov
outs
dec
mov
mov
adc
repnz
sub
add
dec
js
ret
or
or
lock
push
cdq
mov
push
data16
mov
shl
and
or
stos
ret
sbb
push
inc
sbb
and
cmp
les
ins
das
inc
and
mov
(bad)
adc
loop
cmp
jne
mov
call
pop
cld
pop
lods
aaa
in
and
inc
fst
adc
adc
enter
jmp
jmp
leave
je
sub
sti
fld
mov
inc
mov
jle
ret
out
mov
push
add
ror
imul
dec
add
add
dec
cmp
push
and
push
mov
(bad)
jmp
stc
pop
(bad)
push
out
fcom
sbb
and
or
les
push
adc
or
rol
pop
scas
dec
adc
in
and
push
cmp
(bad)
and
popa
rcl
fs
push
push
call
cmp
push
fistp
jle
mov
push
push
mov
push
rcr
push
and
mov
push
dec
das
add
pmulhw
push
xchg
push
cli
aaa
add
push
fwait
pop
pop
pop
call
jbe
pop
xchg
xor
sbb
and
adc
fadd
or
scas
push
adc
cmp
cmp
ror
popf
ror
and
push
inc
push
add
sbb
popa
pop
addr16
adc
pop
mov
xchg
xchg
or
inc
push
pop
jo
cmp
dec
dec
hlt
je
ror
xchg
add
jbe
sbb
lahf
icebp
loope
fdivr
inc
or
getsec
pop
cmp
mov
or
enter
jnp
out
stos
mov
mov
mov
push
inc
leave
inc
xor
sti
jmp
push
mov
cmp
jne
test
je
mov
mov
femms
add
das
clc
(bad)
inc
jne
xor
jmp
sbb
sbb
test
pop
jne
mov
sahf
add
inc
dec
pop
xor
sbb
inc
ins
test
out
clc
call
sbb
or
call
lea
or
jbe
mov
inc
add
sahf
add
mov
add
pop
xchg
pop
or
test
(bad)
popa
xchg
test
iret
popa
cmp
sbb
movs
push
or
jno
jecxz
push
push
dec
dec
sbb
loopne
mov
jnp
int3
push
movs
lods
sbb
movs
push
(bad)
mov
cmp
sbb
fdiv
(bad)
xlat
dec
jne
ds
sub
popa
pushf
cmp
or
pop
adc
loop
jecxz
loopne
jnp
and
push
test
loopne
(bad)
xor
leave
call
dec
push
xor
out
arpl
xchg
pop
cmp
sbb
cmp
adc
jmp
push
push
push
fdivr
mov
mov
pop
xlat
scas
lds
push
or
sbb
and
adc
adc
pop
or
ret
xor
sbb
call
fmul
jmp
add
loope
lock
dec
and
test
je
nop
jne
ffree
sti
pop
arpl
sub
xor
shl
retf
xor
pop
in
fistp
pop
or
add
or
xlat
pusha
xor
js
xor
aas
je
and
xor
mov
mov
sub
mov
(bad)
(bad)
dec
(bad)
cdq
sub
mov
sar
add
mov
mov
add
mov
dec
cwde
test
jle
arpl
and
pop
xor
enter
dec
aad
aaa
add
out
outs
add
lea
add
pushf
lea
nop
push
mov
fcom
xor
or
pushf
ss
dec
into
lock
pop
loope
push
mov
jae
add
push
popa
imul
inc
mov
fsubr
push
mov
(bad)
dec
add
mov
xor
cmp
sete
test
mov
je
clc
adc
cli
push
add
pop
je
xchg
mov
sbb
sbb
jne
and
dec
push
punpckhwd
push
mov
pop
add
outs
pop
jp
pop
fiadd
retf
sub
or
mov
push
cld
cmp
je
pop
or
clc
out
push
int3
pop
cmp
mov
int3
ja
js
cs
dec
inc
sbb
js
push
mov
push
call
jo
lock
and
sub
add
jae
ss
xor
aaa
xor
call
or
(bad)
mov
mov
in
sub
shl
mov
rol
mov
jne
cmp
add
and
inc
xlat
(bad)
dec
pop
xor
xor
xchg
sub
add
ja
out
scas
adc
stos
sub
std
jge
and
adc
cmp
or
push
mov
jmp
dec
cmp
fcomip
not
mov
cmc
or
hlt
pop
xor
xchg
xor
or
sub
and
sbb
add
syscall
(bad)
call
pop
or
mov
cmp
je
cmp
je
idiv
push
cmp
jl
cmp
jle
cmp
je
cmp
je
or
cmp
je
sti
(bad)
and
cmp
jb
cmp
ret
push
or
sub
bound
cmp
loopne
lahf
(bad)
mov
test
sbb
sbb
(bad)
out
add
pusha
ja
jmp
mov
hlt
mov
gs
std
aas
pusha
adc
shr
add
ins
fs
mov
jle
mov
add
(bad)
cmp
jg
cmp
jge
mov
push
jmp
sbb
jle
mov
test
adc
sbb
out
sbb
push
test
jg
jl
cmp
pop
sub
aas
cmp
jg
sbb
xor
mov
stc
or
(bad)
jmp
out
adc
jl
jg
jbe
jmp
js
or
xor
popa
scas
mov
jae
cmp
jmp
add
popf
(bad)
retf
add
arpl
add
test
add
push
mov
mov
or
mov
cmp
fisub
fstp
mov
jmp
sbb
aam
xchg
xor
sub
test
cmc
(bad)
mov
or
sbb
fnstsw
test
jne
call
inc
push
cmp
inc
and
(bad)
jle
adc
cmp
je
sbb
or
int3
mov
mov
popf
nop
pop
loop
push
adc
push
sti
(bad)
sti
test
sti
add
int
(bad)
lea
pop
push
inc
add
int
push
inc
add
cwde
ret
xor
jp
(bad)
dec
mov
xchg
mov
fs
outs
or
(bad)
and
in
cmp
jne
cmp
push
push
jb
sbb
movs
jmp
dec
jbe
xchg
or
lds
mov
pop
push
lea
push
jae
pop
dec
loopne
xchg
mov
and
pusha
das
inc
and
mov
sub
jne
mov
sub
inc
dec
inc
sbb
sbb
add
sub
fs
pop
pop
pop
inc
push
adc
xchg
inc
fisttp
xor
gs
inc
adc
inc
adc
jb
jmp
mov
nop
psrlq
std
pop
test
je
mov
fdiv
add
(bad)
and
cmp
add
add
aas
mov
inc
dec
pop
add
pop
push
pop
iret
cmp
ins
jg
or
into
jno
and
ds
pop
dec
add
inc
cs
repnz
mov
ss
ss
xor
outs
jo
je
call
jmp
call
fs
adc
and
pop
stos
jo
loop
jle
sbb
enter
xchg
sbb
popf
jnp
loop
cmp
sbb
push
and
mov
sbb
nop
ret
sbb
adc
cld
sbb
mov
add
sub
push
rcl
sbb
rol
mov
cmp
pop
(bad)
mov
rcl
adc
push
sbb
sahf
shl
mov
loopne
cmp
mov
xor
mov
fdivr
pop
sub
inc
mov
clc
test
jne
or
lds
and
gs
xor
icebp
retf
retf
push
sbb
jno
or
int
hlt
mov
add
inc
mov
loopne
sbb
add
out
and
imul
rol
adc
add
aad
dec
and
cli
js
data16
loope
mov
js
imul
add
sub
and
cmp
aaa
rcr
or
jo
pop
lock
sbb
es
inc
cmp
or
sub
mov
mov
push
xor
or
xchg
add
jb
adc
adc
sbb
cmp
sbb
xor
fs
dec
add
dec
or
retf
add
adc
in
mov
imul
mov
jae
pop
cld
xor
cmp
sbb
and
jne
sub
sub
outs
xor
xor
and
imul
nop
push
fdiv
hlt
jno
mov
call
or
add
ja
movs
mov
sub
inc
dec
add
rol
sub
clc
push
ja
add
xchg
sub
push
xor
js
fild
push
mov
aad
xchg
mov
lea
add
ror
jg
add
adc
push
out
scas
mov
jg
push
push
mov
fisttp
ss
jo
rcr
push
sbb
and
ja
ja
movd
js
or
in
push
call
adc
(bad)
add
mov
pop
ja
push
ret
adc
adc
(bad)
mov
add
jg
pushf
adc
ror
mov
iret
les
aas
sbb
and
mov
pop
pusha
jmp
xor
add
sub
mov
pop
loop
and
sub
ret
in
sti
sbb
mov
pop
adc
push
sbb
or
les
fdivrp
cmps
dec
mov
retf
out
jns
mov
dec
das
call
loopne
dec
cwd
scas
pop
dec
int3
pop
ret
mov
xchg
mov
out
aaa
and
jne
vpsubsb
out
nop
xchg
jae
dec
lahf
adc
adc
fidiv
dec
xor
lea
mov
inc
adc
lods
(bad)
cwde
out
js
jl
aad
adc
jmp
push
or
(bad)
ror
pop
mov
xor
inc
js
fadd
xor
xor
add
mov
lods
and
and
xor
ja
xor
daa
clc
xchg
sub
clc
xchg
cmp
cmc
test
pop
hlt
fucomp
and
mov
or
pop
je
inc
add
push
adc
mov
inc
mov
push
cmp
jl
mov
mov
mov
dec
push
push
call
and
dec
add
std
ss
push
push
sti
pop
push
mov
push
xchg
js
push
aaa
loopne
jne
aam
mov
sbb
jg
jbe
jne
inc
and
enter
fcom
pop
adc
sar
jo
mov
xor
pop
push
add
mov
push
int
cmps
(bad)
sahf
sbb
push
sbb
mov
mov
mov
dec
pop
push
push
call
cs
add
adc
mov
push
lock
inc
and
jne
mov
inc
add
cmp
sbb
xchg
popa
sbb
mul
clc
int
ins
cmp
xchg
lea
cmp
jne
bound
(bad)
xor
jmp
mov
mov
mov
and
ins
mov
fidivr
mov
cmp
into
jne
outs
add
xchg
shl
leave
lock
fwait
cli
push
cld
add
clc
push
mov
test
or
pushf
fadd
xchg
xchg
or
adc
sub
retf
dec
test
sub
cmp
cmp
inc
sub
cmp
xor
ror
sub
cmp
aam
add
fnsave
test
mov
add
push
ror
add
jg
inc
adc
test
je
fs
cli
xchg
mov
je
or
and
addr16
gs
dec
add
mov
and
mov
and
fs
jne
sbb
inc
pushf
inc
cs
loope
mov
push
leave
lock
pop
aad
xor
sbb
mov
inc
adc
imul
sbb
xor
test
adc
inc
outs
jmp
hlt
cmp
sub
or
push
push
pusha
sbb
call
push
pop
data16
cmp
jne
jge
clc
sub
cmp
fs
sahf
ss
mov
cmp
ret
std
ret
pusha
pop
in
jmp
push
sub
fmul
sbb
mov
add
inc
out
mov
mov
push
cld
ja
add
or
jmp
mov
fmul
and
or
add
jmp
test
inc
inc
sbb
enter
sbb
daa
inc
sub
mov
push
imul
fcom
cmp
push
jne
cmps
sub
add
gs
inc
xor
xchg
or
adc
mov
scas
xor
call
outs
jo
fdivr
add
push
push
and
dec
aaa
test
sahf
jle
xor
cmp
cmp
mov
out
sbb
push
popa
(bad)
ret
mov
nop
or
loope
pop
ret
pop
in
out
cmp
scas
popa
(bad)
enter
sbb
leave
dec
or
mov
adc
mov
jge
pushf
xor
dec
es
ror
inc
mov
rcl
iret
das
js
test
dec
push
or
in
or
pop
cwde
cmps
imul
xor
cmp
inc
cmp
cmp
shl
inc
pop
inc
je
and
ins
xor
cmp
fmul
jne
lock
(bad)
aas
push
mov
mov
mov
mov
sub
sub
sub
ja
add
dec
jl
mov
clc
je
test
cmp
mov
test
push
cmp
out
mov
ja
add
mov
mov
sub
inc
ja
out
(bad)
cdq
sub
sar
add
push
cmp
jg
mov
js
ret
mov
push
sbb
push
cmp
jle
fild
pop
shr
add
add
sbb
(bad)
jmp
clc
(bad)
fdiv
fstp
fstp
fcom
inc
add
fstp
fld
(bad)
cli
adc
leave
fmul
or
fmul
mov
sub
out
ds
mov
or
fstp
or
or
sub
je
je
push
push
inc
jge
scas
push
push
pop
push
cmc
add
sbb
pushf
imul
sbb
outs
js
lds
je
out
add
femms
add
push
jae
xor
mov
hlt
scas
popf
stos
sub
lds
fld
pop
aaa
adc
pop
push
mov
cmp
jge
pop
packsswb
clc
lea
cmp
jge
lds
add
add
push
push
pop
inc
push
dec
rcr
xchg
and
mov
cmp
sbb
push
pop
push
inc
idiv
sub
sub
and
out
jbe
sub
jns
push
adc
call
pop
fst
call
cmp
push
fadd
cmovl
add
xchg
jecxz
hlt
mov
inc
push
mov
adc
add
mov
push
sbb
outs
inc
rcl
and
inc
and
mov
adc
xchg
push
(bad)
adc
add
lea
in
pop
dec
mov
mov
inc
xchg
xchg
icebp
jl
adc
cli
test
inc
or
sar
pop
inc
pop
or
fst
ror
mov
es
xor
cmp
mov
je
rol
(bad)
dec
cmp
mov
mov
mov
je
js
stos
adc
fist
inc
adc
(bad)
je
jno
rcr
mov
push
mov
lea
inc
test
inc
inc
and
shl
mov
adc
in
jbe
dec
call
pop
jl
adc
mov
adc
push
iret
inc
push
cmps
adc
mov
add
mov
cmp
fcom
pop
jl
aas
xor
pop
shl
iret
ror
stos
aas
jns
mov
pop
or
sbb
call
mov
xor
ret
adc
adc
push
int3
lea
jb
fdivr
mov
je
mov
jb
xor
adc
mov
mov
adc
sbb
sbb
adc
lahf
adc
jecxz
fild
push
mov
mov
add
fmul
sbb
pop
and
inc
outs
add
outs
or
mov
lds
jbe
jnp
scas
inc
mov
mov
xchg
lock
or
add
aam
sahf
jp
and
push
push
or
dec
xor
les
ss
xor
pop
pusha
mov
lods
cmp
push
push
fistp
xchg
mov
and
pop
cmp
adc
mov
clc
add
das
push
and
dec
ins
bound
jge
pop
pop
and
cmps
push
not
add
ja
pop
push
mov
(bad)
je
sbb
retf
dec
shl
add
jo
cmp
inc
dec
sbb
mov
jbe
jmp
imul
push
or
adc
pop
mov
mov
leave
cmp
setne
add
mov
cmp
jne
xor
scas
loope
test
jnp
test
dec
add
sub
jo
mov
mov
push
pop
icebp
push
add
push
mov
mov
mov
dec
push
neg
sbb
and
push
push
call
add
cdq
jmp
fld
std
bound
cmp
call
pop
mov
popf
jge
jmp
sbb
sub
or
mov
push
je
cmp
jne
jmp
jmp
add
inc
lock
cmp
(bad)
clc
outs
pop
addr16
xor
pop
mov
ja
pop
pop
in
dec
pop
lea
loope
(bad)
call
and
sub
sub
push
push
push
ins
push
push
mov
mov
je
mov
inc
inc
sub
sub
dec
cld
fbstp
add
jge
mov
sub
and
ja
xlat
enter
ucomiss
jmp
jle
mov
lock
pop
into
iret
call
cs
adc
pop
sbb
in
mov
fst
xor
dec
and
outs
mov
or
sbb
sub
mov
je
ins
inc
xchg
mov
imul
clc
aas
mov
and
je
mov
or
lods
mov
cmps
xchg
xor
das
jmp
aas
and
sti
or
mov
mov
pop
ja
push
mov
outs
inc
jecxz
daa
call
dec
xor
sub
push
push
ins
fs
cld
out
jbe
push
cmp
push
push
call
jmp
jg
cmp
cs
mov
mul
sar
mov
shr
add
jnp
mov
ja
xchg
and
sbb
jo
out
jbe
out
icebp
rol
cs
cmp
data16
movs
jno
jnp
rol
popa
ficomp
std
mov
out
adc
dec
jmp
bound
adc
xchg
and
and
xor
shl
sbb
xor
and
mov
(bad)
push
pop
jp
pop
cld
aam
dec
push
pop
mov
in
mov
xchg
je
xor
xor
enter
xchg
mov
lock
inc
adc
es
test
lods
sbb
inc
mov
adc
sub
adc
dec
dec
dec
ds
add
pop
iret
push
inc
ins
inc
add
jae
sti
add
add
jns
pop
call
(bad)
pop
dec
test
pop
jp
mov
popa
mov
and
inc
xchg
or
rcl
rcl
add
inc
je
dec
add
aas
adc
inc
lea
test
cmp
aam
ja
sub
jg
ja
dec
sbb
mov
call
xchg
jmp
dec
add
cmp
test
pop
adc
sub
inc
js
dec
jl
sub
xchg
and
scas
sub
(bad)
call
mov
add
cmp
div
sbb
jo
inc
ret
pushf
push
outs
adc
fiadd
pop
cld
xchg
sub
mov
adc
jmp
cmp
stc
je
sbb
mov
int
inc
aas
mov
adc
out
cli
call
xor
cmp
ja
jmp
and
mov
jmp
mov
jmp
sub
fwait
mov
sbb
add
sub
jmp
add
cmp
je
add
jecxz
cmp
mov
jg
mov
or
or
(bad)
jle
ja
mov
inc
sbb
add
add
ja
push
push
hlt
jmp
push
pop
or
loopne
sbb
rol
sub
and
push
add
mov
popf
jno
add
imul
inc
xor
lahf
pop
mov
jle
test
add
sbb
jae
out
xlat
xor
repnz
cld
push
cmps
add
loope
and
add
pop
xor
imul
in
inc
mov
push
push
(bad)
daa
xchg
sbb
dec
jo
push
je
inc
ins
sub
push
cmps
jnp
bound
popf
add
je
adc
fnstsw
cs
in
dec
jo
dec
je
and
xor
(bad)
jne
push
add
pop
adc
lahf
in
pusha
in
fbld
sbb
sub
sub
sbb
jl
fisttp
mov
sar
fbld
mov
push
ret
retf
fbld
fist
cld
add
pop
mov
mov
jl
mov
add
fs
mov
test
sete
and
ja
pop
ds
popa
push
push
or
sub
iret
or
dec
lea
mov
push
add
mov
inc
and
and
and
cmp
test
je
lea
dec
fld
fstp
cmp
adc
cmp
pop
mov
loope
jmp
icebp
sahf
mov
add
adc
lods
cs
scas
push
(bad)
cmp
ror
shr
add
sbb
jbe
mov
cmp
jne
push
add
neg
mov
stos
inc
mov
jne
cmps
push
je
cmp
pop
cmp
std
jnp
add
pop
cld
mov
mov
add
inc
add
xor
icebp
add
inc
xchg
scas
lock
dec
and
aas
sbb
add
clc
inc
sub
and
popa
add
push
stos
call
test
test
push
pop
mov
ins
mov
mov
fisttp
sbb
cmp
jbe
pop
cmc
pop
push
lods
lock
push
and
dec
cmp
pushf
and
cmp
jg
adc
test
(bad)
pop
inc
inc
and
jo
or
inc
adc
inc
inc
call
dec
dec
xchg
pop
sub
push
fist
pop
fs
mov
(bad)
jg
loope
call
cmp
jne
mov
jmp
mov
push
push
push
lods
push
call
mov
mov
mov
push
or
pextrw
and
xor
jb
fmul
std
and
mov
add
(bad)
fadd
mov
jo
dec
je
test
pop
push
es
push
rol
dec
pop
inc
dec
mov
pop
add
dec
dec
mov
push
outs
js
sbb
mov
push
push
mov
jle
(bad)
or
mov
fadd
in
adc
mov
inc
loopne
add
sub
push
mov
xlat
push
mov
push
mov
or
inc
mov
test
setne
adc
push
test
je
pop
push
or
jae
out
adc
loop
cmp
dec
mov
stos
sub
repnz
fcos
outs
add
sub
jne
mov
or
(bad)
cli
push
jmp
push
mov
fstp
sbb
je
xchg
jl
cmp
fnsave
jae
mov
pop
jl
xor
lods
rcl
inc
sub
jg
cli
sbb
push
(bad)
fsubr
adc
add
adc
xor
add
mov
lods
pshufw
sub
popf
sti
add
fsub
xor
cld
cmp
mov
adc
add
adc
stc
adc
test
mov
pop
pop
mov
je
pop
mov
imul
scas
clc
push
(bad)
loopne
sub
fist
imul
addr16
push
push
mov
push
ja
call
push
in
stc
cld
(bad)
shr
mov
push
pop
and
call
sbb
stos
and
push
mov
xor
pop
add
sti
aas
push
adc
push
or
repz
add
and
call
fwait
and
push
push
inc
int3
cmp
sub
xor
inc
xchg
lea
sbb
sbb
mov
mov
inc
sub
xchg
push
xchg
test
jmp
lea
push
aas
pop
pop
push
adc
aas
arpl
fisttp
push
mov
mov
and
shl
push
pusha
cwde
lods
push
or
mov
mov
dec
dec
pop
pop
add
adc
les
aad
sti
pop
inc
jl
adc
jl
shl
ret
xchg
outs
push
test
sbb
loop
adc
push
and
neg
push
sbb
push
adc
add
inc
sbb
pop
mov
xchg
loopne
pop
xor
test
jno
push
push
jne
dec
ds
mov
push
call
cmp
loope
push
addr16
ss
cwde
xchg
pop
xor
push
jns
outs
or
adc
xor
push
std
fstp
ins
push
jg
mov
push
push
repz
test
je
pop
jmp
or
dec
gs
fist
je
cmp
outs
or
push
cmp
shl
inc
push
in
and
pop
adc
jne
push
sbb
push
mov
sti
add
inc
out
or
(bad)
push
add
jmp
add
push
xchg
(bad)
push
jmp
and
push
in
pop
add
ds
(bad)
leave
ins
sbb
jb
push
fxch
lds
inc
aad
xlat
jo
fnsave
cmp
mov
jne
push
popa
jmp
cmp
mov
ret
adc
xor
pusha
adc
xor
mov
test
add
inc
sbb
dec
jl
lods
and
mov
or
data16
fld
lahf
scas
sbb
pop
lea
push
cmp
sbb
fadd
les
cmp
inc
std
scas
ja
adc
mov
mov
jne
jno
push
xchg
dec
pop
sbb
add
xchg
push
call
ds
sub
mov
cmps
loopne
mov
or
movs
xor
ins
std
loop
mov
xchg
jmp
cld
sbb
push
add
cmp
jl
sub
fwait
ds
dec
xor
jmp
outs
push
push
push
fmul
je
mov
mov
xchg
jb
jne
dec
push
cdq
and
sub
rol
xor
push
adc
jmp
sbb
mov
jae
lds
adc
dec
and
push
mov
idiv
cmps
(bad)
xor
cmp
jne
jno
adc
inc
ins
mov
mov
mov
icebp
mov
lods
mov
push
imul
sbb
mov
adc
loope
pop
imul
inc
sbb
outs
syscall
and
(bad)
cs
dec
pushf
push
call
mov
xchg
in
in
dec
pop
shl
fld
cmp
loopne
push
out
jne
mov
test
aam
push
mov
jp
and
ret
sti
ja
xor
adc
fdivr
push
call
adc
and
sub
jge
sub
mov
dec
icebp
pop
mov
cmps
add
push
push
mov
add
inc
add
mov
mov
push
push
fwait
cmp
ja
sbb
call
sbb
and
std
pop
fcomp
adc
add
call
add
pop
cs
cmp
jl
add
inc
push
push
mov
je
mov
mov
sar
pop
mov
lea
or
mov
push
jne
jbe
out
mov
ja
push
inc
bound
sar
(bad)
cdq
or
std
rcl
in
push
lods
and
push
ret
push
push
ret
lods
mov
aaa
mov
and
xchg
push
adc
iret
push
push
or
je
mov
ja
out
sbb
icebp
adc
pop
and
shr
inc
mov
adc
push
push
sub
cwde
mov
mov
adc
mov
ja
cmps
sti
xor
adc
xchg
cwde
fs
adc
aaa
lea
loopne
cmc
ds
aas
dec
and
test
or
inc
(bad)
jbe
ja
push
add
pop
push
call
xor
push
pop
sub
setl
lock
out
lahf
ret
mov
iret
ret
outs
and
push
(bad)
pop
mov
jmp
(bad)
push
(bad)
or
add
add
test
dec
(bad)
iret
sbb
jns
jo
test
out
shr
push
gs
add
pop
fnsetpm(287
call
mov
mov
and
mov
pop
in
cmp
xor
outs
sbb
push
push
adc
cmps
cmp
sbb
push
dec
rol
mov
ja
push
push
and
sub
xchg
sub
int
ret
push
pop
scas
cs
nop
xor
add
mov
add
inc
cmp
mov
push
mov
mov
sub
dec
and
mov
mov
test
icebp
stos
inc
dec
lea
ins
mov
aas
lock
inc
sub
leave
cmp
(bad)
jne
mov
jmp
cmp
add
inc
push
xor
cmp
std
pushf
clc
addr16
shl
mov
jecxz
mov
adc
mov
test
add
and
adc
add
cmp
xor
mov
xor
mov
lea
cdq
sub
sahf
mov
sub
push
push
mov
clc
push
xor
ja
push
shl
sub
fnstcw
call
popa
pop
fst
in
mov
push
cli
push
add
push
pop
retf
xchg
sbb
dec
js
xor
pop
rol
push
xchg
pop
pop
imul
(bad)
das
add
mov
mov
popf
lock
cmp
rol
ror
test
setge
dec
xor
outs
add
loop
push
dec
shl
shl
add
xor
sbb
push
and
sbb
mov
pop
cmp
xchg
push
test
adc
repnz
xor
push
mov
mov
(bad)
adc
stc
mov
enter
call
lea
imul
in
mov
jo
inc
cld
jmp
add
(bad)
jmp
cmp
or
ret
inc
and
xchg
into
std
or
jmp
lods
sbb
mov
scas
sbb
lea
jbe
cld
dec
sub
ror
xor
or
cmp
ret
js
lds
mov
add
xlat
sar
sub
add
mov
mov
ins
push
or
ret
das
sub
mov
test
inc
sahf
paddq
sub
retf
push
push
xor
sbb
rol
(bad)
adc
jg
out
inc
je
sbb
pushf
mov
mov
mov
sbb
(bad)
xchg
inc
loope
out
ret
xor
add
cmps
mov
xor
sub
mov
call
fidiv
inc
mov
or
(bad)
cmp
inc
dec
xchg
or
mov
jne
or
outs
fidiv
sub
and
sbb
jmp
and
inc
push
mov
pop
add
push
push
or
xlat
pop
gs
push
push
push
jmp
ja
pop
add
pop
ror
push
mov
dec
push
or
xor
pusha
and
not
and
fstp
ins
out
sbb
add
or
fadd
xchg
mov
or
leave
jne
pop
adc
leave
mov
setl
enter
mov
cmp
mov
jle
add
mov
mov
dec
nop
mov
test
jle
push
cs
daa
and
fidivr
sbb
inc
ins
pop
ret
or
int3
int
push
mov
jo
aas
adc
sahf
jne
fdivr
xor
or
pop
mov
mov
mov
xor
sub
or
or
sbb
dec
cmp
jne
mov
or
or
int
nop
dec
inc
outs
push
setne
jg
mov
xor
and
add
rol
push
cld
inc
cmp
sub
mov
push
js
dec
add
xchg
leave
jo
mov
jge
cmp
push
pop
shl
fcomp
mov
dec
add
(bad)
call
pop
sbb
mov
mov
push
push
push
leave
xchg
shl
pop
cld
test
dec
ja
add
pop
lahf
xor
test
push
and
iret
push
jo
add
aam
xchg
dec
cmp
push
std
clc
push
or
pop
lods
and
xchg
lock
jne
mov
add
adc
punpckhbw
fistp
push
(bad)
cwde
pop
pop
push
or
xchg
pop
icebp
fdiv
cmp
sbb
ret
xor
pop
in
add
jmp
adc
hlt
mov
push
mov
adc
add
loopne
or
pusha
xchg
mov
retf
inc
rol
adc
rcr
gs
test
iret
sub
dec
(bad)
sti
sbb
xchg
in
sub
cdq
aaa
int3
scas
pusha
push
ret
sbb
int3
jo
cmc
out
add
add
cmp
mov
push
inc
mov
push
or
cmp
pop
rcr
sub
ret
adc
add
mov
or
cmp
call
push
cld
add
push
neg
push
mov
push
or
dec
mov
xchg
stc
aas
cwde
sbb
test
sub
push
push
out
adc
in
mov
jb
sbb
jg
mov
xor
fmul
repnz
dec
push
mov
pop
test
pop
lock
ins
fist
fadd
pop
pop
pop
mov
sub
pusha
fmul
cli
and
mov
out
dec
cmp
sahf
ffreep
xchg
cmp
mov
dec
and
mov
inc
sbb
or
inc
popf
add
aam
sub
or
rol
ins
dec
rol
or
pop
dec
add
loope
inc
dec
inc
xor
mov
dec
popa
push
jg
xor
pop
dec
jl
cmc
adc
test
rol
iret
dec
das
inc
fistp
push
dec
test
mov
movs
lods
sbb
sub
push
dec
jecxz
cdq
and
icebp
and
sar
pop
dec
inc
popf
add
add
xchg
dec
fsub
mov
add
pop
adc
int
sbb
add
(bad)
jmp
push
jb
pop
jmp
sub
or
ja
and
push
jne
push
scas
push
and
dec
adc
xlat
mov
xchg
adc
ss
pusha
into
pop
mov
jbe
mov
icebp
push
cli
lods
in
sbb
push
xor
pop
dec
rcl
jnp
ror
dec
inc
in
add
or
dec
add
add
bound
pop
lahf
shl
cmp
xchg
rol
fwait
push
and
sbb
add
add
je
pop
adc
add
fs
mov
or
mov
movs
xor
xor
pop
punpcklbw
retf
add
sub
outs
jmp
cmp
adc
cdq
xor
int3
lahf
pop
add
adc
pop
pop
mov
pop
push
mov
jp
mov
xor
das
fsubr
scas
lock
mov
mov
sub
dec
mov
push
sub
push
mov
pop
xor
add
push
and
mov
pusha
into
leave
push
mov
xchg
xor
push
mov
(bad)
mov
xchg
push
shl
jne
cmps
dec
jmp
or
test
loopne
add
push
fisubr
ret
add
jb
pop
rcl
mov
stos
(bad)
mov
add
add
add
add
or
jp
cmp
add
add
push
retf
add
mov
dec
adc
cmp
mov
(bad)
stc
mov
mov
retf
in
push
xchg
cmp
(bad)
jmp
cmp
je
xor
test
jle
ja
fst
je
inc
cmp
jl
dec
ret
mov
inc
or
add
(bad)
ins
and
cmp
jne
dec
test
aad
fs
cmp
in
or
pop
push
xor
test
jle
add
push
pop
inc
cmp
jl
jmp
add
add
jg
retf
lea
and
cmp
jl
mov
enter
pop
jl
(bad)
xor
cmp
xor
or
pop
cmp
outs
and
jge
push
add
cmc
xchg
lock
das
mov
sub
ja
test
(bad)
in
sub
jno
sub
dec
clc
jns
aad
sbb
and
push
cmp
call
inc
cmp
jl
xor
sbb
sbb
mov
mov
inc
inc
or
sbb
xchg
push
call
cmp
jne
mov
xchg
call
neg
sbb
xor
and
test
jle
inc
push
cmp
ror
jne
inc
cmp
jl
jmp
fdiv
sti
adc
call
and
scas
sbb
rol
cmovl
jp
in
sub
sbb
push
jmp
jne
xchg
sbb
aas
push
pop
and
inc
sar
mov
add
pop
cmp
pop
mov
je
adc
pop
adc
inc
cmp
and
adc
adc
add
sbb
stos
adc
sbb
inc
push
add
cmp
or
pop
add
push
add
imul
movs
pop
dec
add
out
aas
mov
jg
add
mov
and
dec
add
in
jnp
jb
adc
pop
mov
cmp
cmp
mov
sti
push
mov
leave
mov
sub
mov
sahf
outs
mov
mov
fnstsw
add
add
or
iret
mov
mov
adc
mov
cmp
cmp
xor
cmp
fucom
push
sub
add
mov
out
push
dec
push
push
push
pop
mov
fmul
pop
mov
push
imul
fnstsw
pop
mov
or
fbstp
push
cmc
add
jbe
or
fdiv
stc
add
test
iret
mov
imul
or
nop
add
cwde
ja
scas
xor
push
and
or
pop
jne
pop
(bad)
aas
mov
lahf
push
mov
push
pop
int3
adc
aam
add
pop
rol
mov
dec
or
popa
mov
add
sub
fiadd
and
sbb
stc
mov
sub
test
je
sbb
mov
ret
sbb
pop
cld
push
stos
or
pop
mov
mov
lea
push
cmp
fisttp
sub
sbb
mov
and
sub
shl
or
inc
adc
inc
sbb
outs
add
sbb
inc
fild
mov
je
inc
xchg
push
movs
or
xchg
pop
pop
ins
(bad)
jbe
dec
test
je
add
pop
je
aaa
mov
pop
dec
or
mov
jns
jnp
ins
adc
je
cs
push
and
call
inc
or
inc
or
dec
or
push
push
push
push
or
inc
loope
xchg
call
add
pop
cwd
mov
lock
cmp
mov
sbb
add
push
pusha
inc
lahf
jge
add
push
movs
push
mov
loopne
adc
push
push
mov
cld
lea
mov
les
test
or
inc
and
jne
mov
cmp
outs
sub
pop
bnd
xor
add
adc
mov
inc
lock
dec
add
je
aad
mov
inc
and
add
dec
icebp
mov
cmp
lea
outs
mov
out
data16
inc
pushf
pop
inc
pop
push
mov
push
int
aaa
cld
out
call
dec
add
push
mov
mov
jbe
sub
outs
and
shr
dec
push
into
add
push
call
dec
push
or
pop
shl
mov
(bad)
outs
adc
test
(bad)
pop
pusha
xchg
xor
movs
xor
fwait
xor
xor
lods
pop
stc
ss
xchg
cmp
sub
pusha
inc
xor
mov
paddw
or
pushf
and
(bad)
popf
add
push
popa
or
and
rol
push
add
xchg
pop
(bad)
aaa
push
jl
jge
push
and
(bad)
in
mov
jmp
push
and
xor
or
jae
jge
(bad)
repz
sti
je
add
test
bound
push
or
not
sbb
adc
and
pop
mov
daa
ins
lock
add
(bad)
pop
pop
and
xchg
pop
pop
cmp
(bad)
jmp
mov
sbb
pop
pop
call
je
or
xchg
add
xor
psubsb
(bad)
xchg
or
inc
adc
pop
sbb
test
sub
sub
dec
xchg
or
call
inc
and
push
push
push
ins
push
push
push
fdiv
or
cmp
xchg
in
ins
add
xor
and
xor
enter
das
mov
ja
pop
sbb
inc
into
fst
jg
xchg
aas
dec
mov
call
ins
push
push
mov
sbb
sahf
sbb
fcom
adc
fwait
ins
test
sbb
mov
push
and
imul
jle
push
sub
or
int
fs
sbb
es
cmps
mov
add
(bad)
pop
add
jne
fs
scas
mov
xchg
push
and
mov
jbe
add
(bad)
mov
inc
cmp
mov
pop
xor
xchg
pusha
add
loopne
retf
add
sub
xchg
xor
adc
mov
or
sbb
xchg
fwait
pushf
dec
das
cmp
mov
in
xchg
test
repz
mov
dec
pusha
mov
cmp
popf
mov
sub
loope
cli
push
push
add
add
sub
out
fdivrp
mov
lea
add
fwait
xor
mov
mov
mov
rol
call
sar
lock
shr
sbb
and
push
cld
pop
cld
(bad)
fist
call
sub
mov
push
push
rol
aas
mov
cmp
jne
call
sbb
(bad)
je
pop
ds
(bad)
cmp
pop
add
cmp
popa
out
or
jl
cmps
nop
jae
xor
(bad)
cmc
ret
cmp
mov
jne
inc
push
jg
inc
push
jle
push
mov
add
fcmovb
add
ins
and
hlt
fist
dec
sub
cmp
jge
mov
and
pop
scas
arpl
mov
add
je
push
jo
lock
mov
pop
push
push
daa
(bad)
sbb
retf
adc
call
or
or
xor
and
mov
outs
inc
mov
ret
cmp
(bad)
pop
pop
lahf
and
sbb
jmp
ds
cmp
pop
call
(bad)
je
cmp
mov
lea
test
mov
mov
or
call
fisttp
add
repnz
add
jb
adc
fadd
cmp
push
dec
xchg
inc
sub
push
xchg
add
cwde
fisubr
and
mov
cmp
mov
inc
mov
sbb
mov
(bad)
push
push
push
mov
dec
push
shr
fmul
sbb
leave
je
fnsave
fiadd
and
mov
cs
push
mov
shl
inc
cmp
leave
and
sti
mov
jge
add
adc
cmp
mov
mov
pop
(bad)
and
or
xor
into
rol
sbb
xor
movs
adc
or
in
(bad)
push
js
and
pop
jb
sub
or
sbb
arpl
push
(bad)
data16
mov
sti
xor
cmp
sbb
je
sar
push
sbb
jo
mov
lea
inc
pop
je
cmp
fmul
xor
xor
dec
and
das
clc
or
js
xor
add
jo
js
dec
pop
jns
addr16
or
test
dec
push
pop
pop
test
xor
inc
inc
rol
jb
push
push
push
xchg
sbb
je
das
pop
cmp
jle
mov
xchg
sub
and
fsubr
cmp
sbb
push
and
dec
lock
mov
adc
nop
or
add
push
and
push
or
ins
and
int3
nop
jnp
es
enter
pop
das
pop
outs
jbe
repz
and
add
pop
adc
lds
fs
aas
clc
inc
push
ror
add
js
(bad)
sub
or
js
cmp
ret
adc
adc
mov
js
adc
add
cmp
jne
fild
add
iret
push
push
int3
jl
mov
push
int3
mov
out
fimul
mov
mov
mov
add
loopne
sar
xor
mov
out
jbe
(bad)
jle
mov
out
out
fwait
mov
xor
mov
xor
mov
add
mov
test
mov
ja
in
cmp
mov
les
in
out
cmp
into
push
mov
add
in
out
cmp
or
push
mov
scas
sub
add
mov
push
fucomip
out
stos
test
add
pop
mov
add
or
fmul
sbb
or
mov
ja
jne
and
push
in
dec
push
or
pusha
sahf
outs
mov
add
push
iret
mov
cmp
add
inc
fstp
xor
push
adc
(bad)
cdq
out
add
push
inc
pop
push
cmp
cmp
adc
cmp
cmp
mov
mov
pop
or
out
cmp
push
or
mov
js
sbb
add
mov
sbb
mov
add
movs
sbb
push
sbb
add
jbe
popf
jns
and
mov
stc
add
int3
sbb
push
mov
fild
loopne
in
addr16
outs
ja
or
add
hlt
sbb
std
fstp
push
mov
pusha
dec
add
aaa
(bad)
cmp
or
adc
add
out
add
sbb
and
adc
outs
mov
add
xor
fstp
and
adc
add
(bad)
cdq
out
inc
and
adc
mov
mov
retf
imul
push
adc
add
sbb
in
xor
cmp
jbe
adc
dec
mov
test
std
adc
adc
(bad)
mov
mov
mov
add
outs
inc
xchg
mov
cmp
shr
aaa
adc
movs
pushf
(bad)
cmp
add
(bad)
mov
jbe
mov
mov
cmp
add
sbb
xor
loop
loopne
xchg
icebp
sahf
or
mov
popf
cmp
xor
aas
and
pop
out
sub
ja
lahf
jnp
pop
xor
fs
popf
ror
cmp
jne
xchg
test
xor
in
les
add
jg
and
jg
mov
aam
add
rcr
inc
inc
lea
adc
adc
dec
cmp
fmul
jne
sub
outs
or
into
or
adc
sbb
inc
cmps
sub
mov
std
test
je
mov
aaa
and
add
fnstcw
mov
mov
mov
mov
mov
mov
add
or
xor
adc
stos
mov
pop
sbb
inc
or
(bad)
sbb
pop
fmul
jnp
hlt
xchg
push
push
push
mov
pusha
push
inc
pop
add
test
je
mov
and
push
pop
aaa
dec
clc
mov
ret
je
push
cmp
cld
addr16
adc
pop
call
lea
test
mov
sub
data16
inc
dec
xchg
jbe
cmp
add
push
jo
xor
xor
jb
movs
push
push
xchg
xchg
add
mov
push
call
xchg
adc
std
jmp
jl
adc
jne
mov
jmp
mov
mov
pop
push
cmps
in
pop
adc
cmp
ins
push
xchg
add
sub
or
pop
adc
outs
mov
dec
in
mov
cmp
je
adc
addr16
ds
jmp
and
je
push
mov
pusha
in
adc
add
std
fbld
call
inc
loopne
dec
dec
inc
cmp
je
pushf
imul
and
(bad)
jmp
fsub
clc
call
cmp
pop
pop
pop
je
or
aaa
fxch
je
push
aad
sub
jle
mov
nop
nop
mov
fwait
shl
sub
pop
mov
test
and
push
push
push
and
jecxz
cmp
cmp
outs
mov
dec
pop
ja
xor
js
jp
adc
je
out
cmps
in
xor
xchg
mov
rcr
(bad)
or
adc
mov
sbb
pop
lds
clc
sti
mov
call
cmp
inc
xchg
leave
jg
and
sahf
adc
ror
dec
cmp
test
rcr
mov
enter
and
push
rcr
cmp
push
adc
in
ins
sbb
xlat
mov
mov
xor
inc
cmp
pop
adc
and
or
movs
pop
mov
push
lods
inc
push
pop
jne
xor
pop
daa
adc
and
sub
sbb
je
cdq
shr
mov
add
and
gs
int3
call
push
vpmacssdqh
stos
adc
dec
xor
lea
pop
push
call
mov
add
outs
sub
dec
mov
push
push
sbb
add
sub
pop
sub
movs
mov
push
mov
shl
mov
jne
ja
std
outs
movs
adc
xor
cmp
jle
or
mov
aaa
ror
rcr
or
pop
cmp
aaa
cmc
ret
pop
je
and
idiv
and
sub
call
sbb
add
push
inc
push
cmp
sbb
add
push
test
mov
je
fadd
loopne
fisub
push
xor
stos
lods
dec
test
aas
pop
cld
mov
rol
jne
je
push
sub
inc
out
loopne
xor
pop
push
lea
mov
clc
dec
adc
fadd
jle
mov
ret
test
sbb
jmp
nop
mov
xor
call
sti
icebp
dec
aam
imul
outs
rcr
fiadd
and
int3
jmp
repnz
call
les
jl
add
xor
cmp
and
adc
push
push
xlat
xchg
mov
(bad)
sub
mov
mov
mov
and
(bad)
sub
loopne
dec
jo
mov
sbb
icebp
(bad)
adc
mov
out
mov
sbb
push
and
push
adc
shl
pop
leave
nop
iret
call
ins
jno
sbb
retf
sub
xchg
mov
loope
sbb
loope
in
mov
sbb
add
cwde
or
adc
add
dec
or
fdivr
push
(bad)
stc
je
push
push
mov
mov
push
adc
add
inc
enter
cli
add
push
in
hlt
add
mov
add
jle
mov
xchg
mov
or
sub
adc
mov
xor
sbb
push
iret
cmp
xor
bound
test
test
xor
hlt
mov
lds
test
push
retf
xor
(bad)
je
add
mov
outs
je
mov
and
(bad)
cs
pop
leave
push
add
sbb
sub
jb
sbb
mov
pop
ror
js
shr
push
inc
xlat
adc
call
add
js
inc
xor
jl
adc
xchg
sub
add
adc
loopne
test
mov
pop
cs
(bad)
je
hlt
pop
mov
mov
sbb
sbb
cmp
stc
jg
push
je
push
mov
push
and
xchg
ss
mov
xchg
add
je
cmp
neg
pop
jmp
add
jg
cmp
add
mov
mov
mov
pop
jne
push
ja
sbb
leave
je
mov
or
add
(bad)
loopne
xchg
cld
add
adc
mov
push
lods
dec
frstor
adc
mov
pushf
jmp
sbb
mov
mov
jle
mov
mov
test
pop
je
cdq
ror
mov
aaa
fsubr
or
jmp
movups
adc
jnp
mov
loopne
fistp
inc
sar
stos
xchg
adc
add
leave
je
push
and
jge
inc
ja
add
sub
push
call
addr16
inc
fisubr
xor
dec
mov
xor
rcl
ror
push
push
add
dec
sbb
not
hlt
call
jb
push
(bad)
ja
adc
shl
dec
push
push
push
lds
cld
add
push
fs
cs
ror
cmps
inc
mov
sub
jb
adc
mov
inc
movs
dec
push
add
pop
pop
cmps
adc
vpunpckhbw
pop
leave
mov
inc
and
sub
pop
mov
push
xlat
adc
dec
jl
push
pop
sub
call
push
adc
fcom
adc
out
or
pop
adc
mov
add
(bad)
test
adc
cs
pshufw
mov
aas
scas
or
std
ret
and
jne
pop
aaa
push
push
shl
outs
mov
jmp
cmp
dec
add
dec
sar
cmc
or
inc
lea
jne
xor
(bad)
je
add
(bad)
call
push
add
add
mov
add
mov
mov
adc
push
cld
mov
mov
xchg
sub
sar
pop
nop
xchg
sub
bnd
mov
ret
ja
sar
aam
adc
sbb
add
or
ret
fmul
mov
add
pop
xlat
(bad)
(bad)
out
movhps
ret
mov
or
leave
mov
ret
pushf
jnp
add
ror
and
xchg
icebp
adc
mov
or
out
jb
push
pop
pop
lds
cwde
add
das
inc
adc
xchg
cs
sbb
mov
lea
xor
add
ror
mov
add
add
sbb
add
xchg
or
lds
mov
xchg
je
mov
stos
(bad)
rol
adc
inc
add
xchg
ss
sbb
lea
push
inc
jne
pop
cmc
pop
or
push
or
scas
or
inc
jmp
ss
add
aam
lea
jne
mov
neg
lds
cmp
sub
add
jbe
inc
add
sbb
push
lea
mov
push
ret
test
cmp
inc
adc
add
(bad)
cmp
inc
sbb
and
out
pop
stos
fwait
pop
pop
ret
cmp
faddp
in
or
icebp
push
mov
add
sbb
pop
and
mov
lock
lds
ret
imul
mov
lea
push
lea
jmp
retf
shl
mov
out
das
push
adc
add
push
push
inc
popf
jae
adc
mov
sub
test
jle
jle
into
out
stos
sbb
sbb
dec
pop
inc
mov
or
int3
push
or
cmp
out
bound
sub
popa
sar
and
or
pop
pop
ret
scas
xor
jmp
loop
cmp
dec
pop
ins
mov
jl
test
adc
mov
mov
std
inc
push
mov
push
xchg
or
mov
adc
mov
adc
std
shl
add
inc
adc
adc
aaa
aad
out
push
(bad)
mov
or
dec
xchg
and
cmp
ja
sub
push
mov
mov
adc
add
adc
in
call
jbe
mov
ins
adc
cmps
pop
lock
int
dec
push
lea
int3
pop
mov
inc
sub
sbb
mov
jmp
add
cwde
mov
js
adc
repnz
push
push
push
test
popa
inc
xchg
ret
inc
add
push
lds
loopne
mov
call
mov
push
mov
lea
mov
mov
sub
adc
push
jmp
add
push
mov
sub
pop
pop
xchg
xor
add
push
pop
or
push
shr
mov
sub
or
sub
cmps
aad
sbb
xchg
fidiv
inc
retf
xlat
push
add
cmp
jge
push
mov
test
pop
test
push
xlat
fwait
mov
jb
or
idiv
pop
xor
jmp
jg
pop
mov
mov
shr
cmp
jne
inc
mov
or
mov
cli
adc
add
push
push
push
shl
nop
xchg
jmp
mov
mov
(bad)
mov
mov
ja
push
add
fcom
push
xor
add
fist
cmp
push
je
adc
add
(bad)
std
sbb
mov
mov
mov
(bad)
call
jle
mov
jle
sub
or
mov
cmp
jle
and
std
mov
adc
adc
pop
sbb
pop
adc
adc
jnp
xor
add
push
lea
push
push
jmp
and
dec
fdivrp
aaa
inc
test
add
lea
sbb
rcl
in
mov
pusha
aam
or
mov
and
cmp
pop
mov
lock
and
mov
mov
mov
rol
or
xchg
mov
cld
adc
push
jne
jb
add
mov
mov
jg
mov
add
push
dec
add
dec
push
push
mov
push
shl
add
pop
(bad)
mov
add
dec
sahf
ror
shl
dec
add
sbb
add
hlt
aas
or
mov
lea
inc
aaa
inc
lea
sbb
and
push
call
push
cmps
adc
test
add
add
rcr
mov
sbb
add
mov
test
je
loop
clc
and
add
add
push
jmp
cmps
test
fst
ficom
jg
adc
loop
push
inc
loopne
cmp
call
dec
mov
enter
mov
test
jle
(bad)
cli
mov
xor
xchg
je
pop
cmc
xchg
daa
adc
mov
mov
add
add
cmp
inc
adc
jl
imul
xor
sub
add
add
xlat
add
or
and
add
add
ficomp
imul
add
test
popf
mov
dec
mov
dec
or
or
add
mov
add
jle
test
retf
cmp
cmp
lea
dec
adc
adc
add
mov
add
add
repz
cmp
inc
cmps
jbe
dec
or
pop
mov
cmp
add
pop
mov
lea
and
add
mov
add
add
dec
int
push
sbb
add
cmp
jne
adc
cmp
jne
test
add
add
jne
push
(bad)
clc
pop
mov
rol
mov
add
inc
cmp
dec
inc
jg
sub
ins
and
pop
les
dec
test
cmp
(bad)
(bad)
(bad)
(bad)
jmp
in
inc
sub
jns
jmp
xchg
jae
and
jecxz
push
addr16
dec
mov
jmp
sbb
and
jne
(bad)
aam
and
pop
scas
jbe
ds
xchg
and
or
imul
mov
or
push
add
inc
add
mov
push
jo
sahf
pop
or
(bad)
push
(bad)
jnp
xor
inc
jmp
or
inc
jmp
xor
je
sub
cdq
out
test
add
cmps
add
ret
dec
jle
mov
xor
push
data16
jbe
mov
neg
mov
fist
dec
push
js
mov
and
cmc
je
xchg
lea
mov
mov
add
add
cld
cmp
std
je
mov
jae
cmp
jne
mov
je
enter
push
call
mov
xor
int
fstp
mov
sub
cld
hlt
cmp
jne
mov
shl
push
mov
call
inc
(bad)
jno
push
sbb
mov
or
test
lea
pop
or
mov
outs
add
sub
or
and
sub
or
sbb
(bad)
adc
jnp
sti
jg
popf
push
push
stc
add
add
ror
fs
sub
inc
and
mov
or
scas
data16
pop
nop
nop
aas
(bad)
adc
ja
sub
icebp
add
or
push
jg
mov
lahf
push
pop
or
add
push
push
push
or
pop
mov
pop
mov
fs
retf
cwde
in
or
or
or
nop
shl
cld
addr16
fisubr
add
rcr
jg
lods
test
popf
pop
sbb
fild
cld
pop
loope
push
lea
push
mov
and
jecxz
cli
adc
fld
sbb
cmp
and
push
lea
adc
scas
test
mov
cmc
je
or
call
shl
mov
adc
mov
and
je
push
push
call
fcom
inc
jmp
mov
adc
xor
call
and
add
gs
in
stos
(bad)
fbstp
dec
test
je
pop
pop
mov
or
add
add
xchg
mov
adc
test
and
mov
push
and
sbb
xchg
fldenv
inc
mov
and
dec
hlt
push
or
cmp
mov
sbb
ret
inc
adc
adc
out
adc
lea
mov
dec
pop
jno
or
lock
add
lea
push
out
ss
mov
fdivp
push
adc
dec
push
adc
adc
loope
call
sar
pop
jns
punpcklwd
in
dec
imul
mov
pushf
mov
(bad)
ror
push
push
adc
and
fsub
add
je
fbstp
push
mov
pop
punpckhdq
push
call
mov
push
shl
pop
pop
xchg
push
dec
mov
xor
or
(bad)
push
push
mov
inc
std
dec
pop
je
mov
test
mov
je
std
pop
in
adc
lods
outs
hlt
jmp
lea
push
lock
rcl
and
and
iret
or
pop
dec
xor
pop
lds
mov
add
adc
or
(bad)
into
call
pop
lea
cmp
jo
int
nop
std
dec
xor
out
push
fldcw
mov
mov
and
pop
out
test
or
add
inc
sbb
pusha
test
push
out
jbe
cmps
pop
int3
and
movs
les
dec
mov
jnp
mov
icebp
(bad)
jmp
add
inc
ins
sub
cmp
jle
mov
inc
adc
mov
mov
jg
jle
mov
mov
inc
or
sbb
mov
add
in
std
adc
jne
add
ja
jne
sbb
push
fwait
sub
push
ret
dec
ret
shr
mov
repnz
mov
enter
and
push
push
add
cmp
mov
push
pop
add
bound
sub
mov
fbld
enter
xor
je
loop
rol
leave
stos
push
sbb
jg
cmp
je
push
push
mov
cmp
inc
add
push
mov
lea
push
push
adc
mov
aas
add
mov
mov
pop
pop
shl
std
fistp
or
fstp
xor
pop
ret
push
push
aas
sub
fwait
and
retf
mov
mov
icebp
or
pop
inc
pop
mov
je
or
div
pop
ret
push
lea
loop
cli
add
lea
(bad)
sub
add
add
mov
mov
inc
inc
iret
mov
xchg
push
sbb
add
xchg
cmp
(bad)
popa
jg
dec
push
push
add
pusha
xor
lock
sbb
mov
popa
sbb
adc
test
jp
pop
fs
mov
mov
cmps
inc
pop
xchg
mov
pop
or
xor
(bad)
mov
mov
mov
loop
ficom
in
dec
lea
les
push
bswap
mov
ins
mov
aam
xchg
das
xor
shr
lea
loopne
sub
je
adc
adc
jae
dec
push
adc
adc
test
iret
pushf
xchg
sub
out
fldenv
test
(bad)
ror
lea
es
or
cmp
inc
cmp
pop
test
mov
adc
xor
movs
push
ja
iret
or
xor
out
xchg
jl
sbb
leave
cld
mov
je
pop
iret
enter
jo
mov
mov
mov
mov
mov
sbb
sbb
mov
outs
and
mov
adc
outs
mov
pop
rol
sub
add
lea
add
sbb
adc
mov
icebp
mov
scas
mov
fnsave
jbe
mov
and
aam
mov
mov
call
mov
sub
mov
jl
test
and
mov
mov
add
or
adc
mov
int3
mov
sub
mov
call
adc
pop
adc
xlat
mov
cmp
xor
leave
cld
pop
push
push
xor
xor
pop
mov
adc
ror
ins
aad
add
mov
pop
pop
pop
jo
push
enter
mov
pop
nop
cmp
pop
xor
add
lahf
retf
nop
mov
sbb
(bad)
mov
fwait
mov
or
xchg
ins
pusha
aas
mov
mov
and
std
add
rol
mov
and
(bad)
retf
ins
push
xchg
icebp
icebp
nop
mov
add
shr
push
test
iret
jb
loopne
das
in
or
mov
mov
mov
js
pop
lea
xchg
hlt
adc
call
mov
push
mov
dec
jne
mov
jp
jp
pop
(bad)
pop
mov
cmp
sbb
inc
mov
ror
mul
jnp
int
repz
retf
scas
jg
xchg
xor
sub
mov
scas
test
pop
rol
scas
test
jl
les
test
push
adc
and
adc
dec
push
jge
test
lea
fisttp
push
lds
ja
or
movhlps
cmp
fild
arpl
and
dec
mov
pop
rol
mov
(bad)
push
or
pop
cmp
and
cmp
fiadd
add
jne
ss
or
and
fisttp
xchg
nop
or
xor
or
shufps
call
mov
add
and
mov
in
or
inc
mov
leave
fst
popa
call
mov
jg
pop
cdq
push
shr
sbb
aas
test
push
mov
je
out
inc
sbb
(bad)
push
fstp
fwait
loop
jecxz
mov
xor
push
inc
repz
push
rcr
pop
popf
mov
dec
adc
push
lock
loopne
inc
lock
push
adc
shl
mov
sbb
mov
(bad)
cmp
or
or
(bad)
fwait
retf
add
dec
add
and
addr16
sub
std
mov
fild
je
cld
(bad)
inc
popa
or
mov
jl
inc
rcl
(bad)
mov
or
push
add
bound
mov
add
into
push
ins
adc
lea
or
xor
addr16
adc
inc
and
out
sub
inc
jecxz
adc
shl
push
dec
je
std
sub
je
cmp
add
clc
and
js
mov
mov
inc
int3
call
shl
pusha
add
push
or
push
push
sub
fwait
and
push
nop
sti
pop
hlt
movs
lea
sub
(bad)
add
fadd
adc
push
inc
int3
loope
add
sub
(bad)
jg
jl
xor
idiv
dec
test
cmp
mov
xor
(bad)
sub
je
enter
movs
outs
mov
push
lods
sub
jne
ds
mov
inc
bound
les
or
push
jae
pusha
fld
int3
popa
pop
mov
test
and
test
je
mov
xor
xchg
adc
push
and
or
inc
push
arpl
in
ins
test
jae
push
stos
(bad)
ja
push
sbb
add
add
add
es
inc
lock
dec
xor
inc
out
(bad)
lock
sahf
xchg
icebp
mov
xor
push
and
push
lea
daa
adc
jne
mov
je
push
push
dec
lock
int3
cmp
je
pop
dec
lea
sbb
(bad)
adc
sbb
lea
mov
ret
xchg
jb
call
sub
sbb
or
add
loopne
jbe
push
mov
adc
mov
jnp
xor
push
or
sahf
ror
push
je
xchg
dec
xchg
lea
inc
jp
daa
ja
test
pop
sbb
test
mov
add
mov
and
push
test
push
jne
cmp
and
and
mov
mov
jmp
sub
push
mov
push
sub
js
aas
pop
mov
xor
std
add
(bad)
sbb
jge
adc
out
add
lock
test
je
mov
out
clc
aas
test
(bad)
mov
add
jne
push
cmp
fcomp
pusha
mov
aaa
int3
dec
jg
bound
test
por
rol
js
push
xlat
sbb
sub
mov
mov
or
xchg
shr
cmp
pop
push
xlat
jl
clc
jbe
jg
lds
jl
sbb
dec
xchg
add
inc
add
(bad)
aas
mov
dec
cmp
les
rol
test
loopne
pop
jnp
pop
stos
pusha
iret
add
int3
call
adc
mov
pushf
mov
dec
mov
rol
add
loop
and
add
inc
or
xchg
push
mov
test
push
push
lock
xor
call
je
in
inc
rol
div
leave
mov
mov
inc
mov
jae
or
jecxz
pusha
out
xchg
lea
jns
push
mov
pop
shl
test
jne
add
cmp
mov
int3
jle
imul
cmp
ret
sahf
dec
sti
fucomp
or
xor
jp
push
and
pop
ror
dec
or
sbb
add
icebp
push
push
sbb
rcr
sti
xor
push
pusha
mov
xor
in
fbstp
rcl
sbb
xor
xor
jae
jmp
pushf
bound
add
jl
fsub
add
jge
sub
or
inc
pusha
sbb
not
je
jl
in
or
jne
cmp
out
push
sbb
or
mov
scas
test
pusha
mov
fldenv
nop
js
add
xchg
add
inc
mov
je
push
add
retf
sbb
pop
add
fist
adc
aas
mov
mov
ret
je
push
cdq
sar
cmp
je
test
and
dec
in
push
lea
add
add
inc
or
pop
cmp
mov
mov
mov
xlat
add
das
pop
or
inc
adc
ret
pop
adc
xchg
push
xor
jle
mov
push
xchg
or
add
cmp
jae
xlat
mov
cwde
in
and
shl
jb
and
(bad)
fnstsw
je
cmp
jnp
jne
and
add
leave
inc
jle
imul
add
dec
jne
test
mov
adc
add
add
dec
jne
sar
mov
or
adc
iret
add
sbb
sub
adc
add
adc
icebp
xchg
mov
cmp
inc
sar
xor
jle
or
jnp
pop
adc
add
test
pop
popf
stos
clc
sbb
mov
test
je
in
mov
inc
je
mov
or
push
or
xor
out
add
call
rcr
inc
ja
add
or
je
pop
pop
push
and
bound
push
in
out
shl
into
or
in
(bad)
pusha
pop
add
int3
adc
push
add
add
fnsave
or
mov
mov
xor
ror
mov
mov
sbb
loope
ffreep
jmp
lods
jle
sbb
shl
add
test
xchg
add
mov
ficom
clc
mov
or
add
inc
in
push
mov
jge
cmp
push
call
cld
test
add
add
popa
ins
fcom
in
repz
addr16
out
pop
mov
add
add
inc
cmc
or
mov
lds
mov
pop
mov
xchg
push
lahf
dec
add
(bad)
in
sahf
cmp
fbld
dec
add
dec
mov
sbb
mov
lock
cmp
jl
adc
cmp
fisubr
jno
mov
imul
add
push
add
xchg
mov
mov
push
(bad)
not
and
push
mov
xchg
add
sar
mov
inc
jne
add
push
pop
pop
es
cli
sbb
js
cmp
loop
or
sbb
es
inc
dec
add
cli
xlat
xchg
mov
or
cli
scas
not
sub
mov
cli
or
push
push
or
dec
loop
mov
repz
test
cmp
movs
in
inc
xchg
jmp
sbb
mov
inc
mov
mov
cmp
mov
shr
jge
dec
mov
imul
xor
leave
sub
adc
out
or
sbb
add
pushf
xor
push
and
pushf
sbb
imul
cmp
jmp
add
imul
test
fwait
(bad)
or
inc
add
or
aaa
jecxz
add
mov
inc
add
add
dec
adc
std
sar
or
add
pop
in
add
dec
sar
inc
add
jbe
pop
out
je
xor
movs
cvttps2pi
inc
add
dec
ror
sbb
repnz
inc
add
xor
xlat
jne
ss
inc
add
pushf
add
xor
add
push
hlt
jmp
dec
jle
inc
rcr
es
lea
mov
lock
cs
icebp
xor
sub
sbb
or
push
push
lock
iret
test
or
mov
stos
mov
jmp
(bad)
jge
pop
xchg
mov
jbe
adc
ins
push
inc
pop
add
les
or
mov
(bad)
xor
jne
adc
call
inc
(bad)
push
jg
add
in
je
pop
std
pusha
mov
mov
mov
fistp
inc
and
inc
lea
add
adc
or
dec
xor
nop
jmp
aas
cmp
jne
shl
stos
cmp
jo
cs
test
push
call
mov
and
shl
cmp
adc
sahf
push
out
out
arpl
loope
cmp
out
fidivr
sbb
mov
push
mov
mov
mov
icebp
and
adc
push
mov
outs
pop
jae
mov
mov
xor
mov
rol
pop
rcr
nop
jmp
sub
sub
mov
push
push
mov
pop
mov
shr
dec
push
pop
call
inc
in
cmp
paddw
stos
(bad)
dec
mov
lea
mov
cmp
shl
jmp
in
push
(bad)
push
mov
(bad)
jmp
push
call
jmp
mov
mov
mov
ret
mov
fdivr
leave
std
mov
mov
es
pop
add
lea
cmp
sub
adc
push
mov
jmp
leave
pop
mov
mov
mov
mov
aas
push
mov
in
inc
xchg
repz
lds
push
lea
loopne
cld
je
inc
push
test
mov
je
add
(bad)
push
call
jg
jle
mov
lahf
or
cmp
sar
adc
test
cmp
scas
clc
cmps
pop
add
lea
cld
aas
xchg
das
fmul
mov
inc
inc
retf
jbe
add
xchg
jae
add
ins
push
pop
jne
jg
adc
sbb
add
pop
out
dec
dec
inc
mov
sub
ins
and
push
test
mov
mov
shr
cmp
(bad)
leave
je
dec
pop
test
mov
mov
mov
je
mov
add
mul
push
hlt
jbe
jmp
sub
xor
ja
and
add
push
jmp
outs
add
inc
pusha
mov
sbb
inc
je
cmp
je
shl
pop
std
sub
ror
jecxz
scas
mov
out
adc
and
or
aam
aad
mov
iret
sub
xchg
cld
mov
idiv
shr
adc
lock
add
push
xor
push
push
push
out
jbe
mov
push
cmp
je
test
dec
and
and
pop
(bad)
out
mov
pop
lea
mov
mov
jl
(bad)
je
inc
sbb
mov
jne
cmp
inc
rcl
setp
adc
and
mov
inc
int3
xor
cmp
jne
mov
and
pushf
loope
enter
add
daa
jmp
add
arpl
fadd
test
ja
sahf
in
(bad)
je
mov
test
add
inc
cld
adc
pop
cld
lea
sub
icebp
add
mov
cmp
popa
dec
je
bound
push
movs
dec
or
adc
mov
dec
and
daa
mov
sub
es
sub
push
push
push
dec
mov
loope
clc
inc
scas
rcr
les
push
aaa
sub
dec
and
mov
int3
dec
adc
push
mov
push
fimul
(bad)
cmps
aas
jle
mov
and
add
fbld
jmp
sti
adc
call
(bad)
sahf
pop
dec
and
adc
or
out
out
mov
inc
adc
test
inc
mov
lock
push
dec
je
and
ror
jne
xchg
lea
xor
lock
(bad)
(bad)
popf
mov
int
mov
jl
mov
mov
iret
push
rcl
shl
jo
push
loop
sbb
(bad)
aas
pop
sub
mov
mov
adc
les
xchg
mov
sar
cld
out
inc
mov
mov
push
mov
sbb
into
push
add
dec
adc
je
adc
jle
enter
test
xor
je
loop
add
cld
arpl
sub
aaa
mov
test
jne
rol
loop
and
sbb
popf
add
test
add
xor
push
add
push
or
and
and
mov
push
mov
push
mov
adc
test
jo
repnz
sub
push
jp
cmp
cmp
(bad)
jmp
push
push
push
call
mov
xor
cmp
mov
inc
cmc
sbb
test
dec
cmp
fiadd
vpandn
test
mov
or
rcr
or
mov
loopne
jbe
test
dec
lds
mov
pop
pop
and
push
sahf
inc
and
push
aam
out
daa
scas
cmp
fimul
push
push
push
sahf
add
mov
dec
sub
jg
loopne
gs
and
push
mov
(bad)
jmp
push
sbb
popa
and
movs
xor
ds
inc
rcr
inc
std
push
test
jo
sahf
xchg
ret
and
jae
jb
mov
add
mov
jnp
add
fisub
adc
stc
ret
rol
retf
call
and
inc
xor
and
clc
adc
loope
inc
lahf
and
xor
inc
adc
mov
jne
xor
aam
sub
lds
repnz
xlat
mov
push
call
retf
xchg
test
jp
pop
mov
cwde
and
adc
sub
call
mov
mov
ret
xor
fs
and
leave
les
fmul
jecxz
push
jo
push
sbb
sbb
pop
(bad)
or
fldcw
xchg
jnp
adc
push
or
vpmacsswd
add
push
div
mov
fwait
outs
adc
fdivr
push
inc
mov
mov
lea
sbb
push
(bad)
mov
adc
add
jmp
ret
mov
je
jp
mov
xor
push
cmp
je
mov
stc
add
idiv
cmp
je
dec
or
repz
adc
pop
and
call
and
or
les
sub
loope
je
adc
sbb
loope
cs
jmp
adc
jmp
adc
jne
inc
jmp
mov
sbb
cmp
add
mov
mov
clc
dec
rol
pop
(bad)
jl
aam
ret
xchg
dec
xchg
mov
jmp
(bad)
jge
xor
sti
add
test
mov
adc
push
(bad)
cmp
adc
xchg
in
cs
ins
fisttp
inc
jmp
sub
inc
sbb
aaa
cld
iret
icebp
mov
pop
push
push
jmp
xor
inc
adc
(bad)
inc
pop
and
retf
inc
enter
lea
outs
enter
mov
pop
sbb
sbb
push
lea
cmp
out
fadd
das
lea
jae
add
xchg
xchg
mov
mov
cs
fwait
and
add
or
fild
sbb
imul
push
mov
mov
std
je
jnp
mov
test
mov
sub
jecxz
ficom
adc
sbb
push
push
out
(bad)
jge
jmp
gs
and
sbb
mov
cdq
add
adc
cmp
jle
(bad)
jg
jge
mov
lea
mov
mov
dec
neg
sbb
and
cmp
mov
dec
xor
cmp
jl
xchg
mov
sbb
mov
and
data16
mov
pop
pop
push
push
sbb
int3
mov
add
jne
add
sbb
inc
mov
mov
mov
out
loopne
cs
inc
dec
int
pop
pop
fnstsw
es
mov
pop
mov
pop
pop
push
out
mov
test
sbb
fsubr
mov
dec
int3
dec
or
xor
inc
and
test
add
jmp
cmp
mov
push
push
push
mov
add
inc
add
or
(bad)
and
inc
add
cmp
jne
dec
shl
test
add
push
push
rol
xchg
jno
test
cmp
xlat
push
push
repnz
movs
add
bound
xor
mov
jne
shl
pop
mov
iret
call
stos
jle
dec
jnp
ins
push
dec
pop
ds
dec
in
sti
in
test
cmc
lea
movs
fwait
lea
pop
add
adc
test
inc
dec
adc
push
test
movs
mov
push
add
cmp
je
sbb
inc
adc
dec
jne
enter
mov
inc
(bad)
mov
nop
push
mov
push
push
push
cmps
neg
jmp
and
or
mov
or
sub
push
les
call
cmp
sbb
add
add
mov
call
mov
clc
aas
mov
add
aad
inc
retf
adc
add
adc
pop
adc
cmp
jge
mov
mov
jmp
mov
mov
xor
shr
sub
cmp
xchg
pop
repz
into
mov
xchg
adc
ja
jp
mov
push
ins
sbb
lds
je
cs
dec
push
cs
scas
jne
test
jne
les
mov
aad
jg
inc
sbb
inc
cmp
jl
jbe
ret
mov
iret
outs
test
add
add
mov
cmp
test
push
jg
adc
loope
repz
push
xor
lea
lods
mov
push
dec
mov
outs
std
add
je
sar
mov
lds
ret
or
rcr
push
pop
or
inc
and
or
sub
push
push
popf
mov
jae
push
pushf
xchg
push
jmp
push
push
push
inc
ret
scas
or
leave
cli
sbb
(bad)
je
mov
ins
sub
mov
push
sbb
jne
cwde
lock
sbb
push
lea
mov
lea
mov
aam
jae
jo
dec
push
mov
push
test
push
mov
je
mov
pop
dec
sbb
fld
push
(bad)
sti
or
mov
add
dec
add
pop
or
add
jbe
jne
pushf
xor
hlt
xor
retf
xor
pusha
sbb
mov
push
test
xor
jg
add
xor
push
mov
mov
daa
adc
ja
mov
loopne
outs
xor
push
call
mov
test
mov
lea
mov
xor
cmp
es
(bad)
nop
pusha
inc
cwde
add
push
jg
xchg
xor
mov
int3
rcl
mov
out
add
jne
cmps
(bad)
jmp
xor
mov
inc
inc
mov
call
pusha
sbb
cmp
jmp
lahf
push
je
mov
sub
and
xchg
push
cmp
je
mov
sbb
mov
cmp
xor
mov
lea
push
push
sbb
enter
leave
loop
jmp
xor
mov
in
in
in
int
mov
mov
adc
aaa
lock
je
xchg
or
je
mov
mov
call
test
sub
ss
push
pop
shl
ficomp
les
rcr
daa
jbe
mov
ret
push
sbb
aad
jg
mov
and
mov
lea
push
push
mov
test
cmp
ja
jmp
in
int3
mov
push
mov
cmp
push
addr16
std
jmp
inc
test
jne
or
add
xor
push
gs
add
fadd
call
adc
cmp
jmp
mov
mov
ja
es
adc
xor
cmp
sete
push
sbb
push
sub
add
sar
jnp
pop
jbe
je
push
and
push
adc
mov
sbb
cmp
not
xlat
bound
or
stos
arpl
movs
dec
std
jne
jne
(bad)
lock
or
xor
stos
js
xor
xor
push
ins
inc
xor
aaa
inc
xchg
leave
mov
push
sub
movq
dec
js
xchg
pop
cmp
out
xlat
push
push
and
call
loope
jno
adc
test
adc
icebp
ja
xchg
fmul
test
pop
sbb
inc
adc
je
or
cmp
ins
xlat
cmp
dec
dec
inc
fwait
or
cmc
mov
pop
es
sbb
call
sub
out
pop
imul
jo
fdivr
adc
push
mov
and
dec
jns
outs
pop
jmp
fdivr
mov
js
je
and
mov
xor
push
jae
adc
jo
add
neg
sbb
add
add
ins
clts
cmp
cmps
repz
mov
pushf
inc
sbb
lock
or
rcl
je
push
sahf
loopne
mov
add
jecxz
lds
and
sub
in
mov
push
push
inc
dec
outs
mov
cmc
dec
and
hlt
sub
mov
scas
dec
and
stos
xacquire
push
and
cmp
or
inc
pop
lahf
jne
or
jmp
xchg
popa
cmp
aam
sub
cvttps2pi
je
xchg
pop
and
inc
inc
xchg
and
mov
xor
(bad)
dec
pop
add
xor
or
inc
mov
jge
or
adc
sub
jmp
ss
pop
cmp
je
in
add
test
lods
add
xchg
shl
pusha
pop
xor
pop
add
jmp
pusha
inc
sbb
aam
jnp
jmp
aas
inc
and
pop
adc
lea
xchg
mov
xchg
or
rol
lahf
mov
aad
clc
dec
push
sbb
xchg
outs
sub
fild
adc
jge
jg
enter
inc
push
cmps
adc
mov
loopne
jle
mov
test
jmp
or
sbb
dec
push
in
or
dec
outs
stc
mov
cmp
test
mov
push
inc
jne
mov
aaa
mov
mov
cmp
jne
lea
add
pop
add
data16
mov
push
inc
inc
adc
inc
jb
pop
xor
push
xor
lea
add
cwde
sbb
fsubr
retf
push
cmp
std
and
imul
pop
mov
pop
pop
sbb
add
jae
add
jge
cmp
add
lods
mov
lahf
add
sti
adc
cmp
jne
add
popf
mov
sbb
adc
cmps
cmps
jbe
inc
adc
test
imul
and
push
adc
mov
mov
mov
mov
rol
cmps
push
xrelease
push
add
sbb
jb
cli
push
test
clts
clc
mov
cmp
lea
adc
aam
sub
dec
movs
inc
sbb
add
fstp
test
jne
mov
cmp
push
clc
mov
push
mov
lea
aad
mov
sbb
jne
sahf
xor
jl
mov
push
loope
jo
sahf
movs
test
jl
mov
loope
shr
cmp
jge
mov
jmp
mov
shl
adc
mov
cmp
mov
jmp
or
xchg
cmp
add
call
mov
xor
add
cmp
jl
gs
mov
cmp
add
test
xchg
push
ret
push
inc
inc
imul
scas
sub
add
add
mov
push
push
push
ror
dec
adc
shl
dec
dec
mov
or
sbb
dec
pop
or
jae
icebp
ins
mov
out
adc
add
inc
adc
pusha
imul
ret
jae
push
dec
pusha
add
push
jmp
fmul
(bad)
js
mov
adc
cmp
dec
and
pop
xchg
sbb
add
or
jnp
in
fs
add
mov
in
int
lods
add
int3
jne
movs
xchg
cdq
cmp
fcmove
push
mov
push
es
xor
push
test
clc
fwait
xchg
icebp
push
mov
mov
std
sub
inc
test
mov
je
mov
out
fisubr
jne
push
push
mov
mov
add
mov
je
lea
pop
cmc
cmps
or
rol
lea
std
sub
push
shl
or
int3
mov
and
loop
dec
rcl
loop
les
or
(bad)
loopne
push
xchg
dec
add
push
or
jae
shld
push
ja
test
push
adc
inc
mov
jne
int3
jmp
jae
adc
ins
push
call
push
add
mov
pop
(bad)
jg
ret
or
call
and
test
xor
fld
dec
clc
lahf
jle
push
jne
mov
call
cdq
sub
sar
xchg
inc
ss
je
mov
mov
out
dec
jno
cmp
jge
mov
(bad)
loope
out
ret
or
cmp
into
outs
lea
dec
push
ret
sahf
mov
or
xor
inc
push
dec
or
dec
mov
test
push
push
je
or
jmp
mov
push
and
mov
inc
test
je
cmp
je
xor
jmp
mov
or
adc
jbe
adc
mov
icebp
dec
out
clc
jmp
adc
dec
adc
call
adc
jne
xor
xor
fld
popa
cmp
(bad)
fnsave
adc
cmp
lds
neg
(bad)
sti
pop
imul
test
xchg
cmp
jne
and
add
jne
mov
jmp
inc
or
mov
neg
mov
pop
pop
pop
jne
and
in
mov
retf
xchg
in
push
pusha
ret
xor
or
jecxz
pop
int3
pop
dec
or
stc
outs
sbb
adc
es
inc
mov
(bad)
cli
(bad)
jg
dec
add
rcl
add
mov
add
imul
dec
jne
imul
pop
(bad)
fwait
jmp
mov
mov
je
push
std
ins
mov
mov
mov
iret
mov
loopne
mov
add
movq
rcr
or
adc
jbe
push
push
or
call
mov
enter
fdivr
aam
push
push
push
sub
dec
cmp
les
mov
jne
mov
mov
mov
test
je
mov
mov
sbb
test
jne
lods
add
add
inc
mov
addr16
dec
ret
mov
lds
dec
iret
dec
mov
(bad)
test
mov
je
cmp
je
and
aas
addr16
fwait
dec
and
and
fadd
rcl
imul
adc
dec
call
add
ins
lea
xchg
cmps
call
dec
jnp
sahf
in
inc
call
and
div
push
test
je
outs
or
or
jne
mov
sbb
sub
push
push
push
lea
cld
fwait
mov
xchg
sub
xchg
and
lock
sub
shl
xor
pushf
xor
lock
pop
fwait
dec
xchg
add
out
pop
lahf
or
mov
mov
dec
push
lods
shl
popa
cld
arpl
(bad)
jmp
call
or
jne
mov
inc
in
push
xchg
in
cmp
inc
in
mov
xchg
sub
out
sub
hlt
push
sti
inc
xchg
cmp
test
test
mul
dec
or
dec
mov
jge
lods
daa
lea
ins
mov
lock
clc
inc
cld
add
test
mov
mov
cmc
xchg
mov
rcr
retf
push
mov
mov
sti
aas
lea
or
sar
push
jmp
adc
call
mov
lea
add
jae
xor
xor
ss
ja
dec
adc
xlat
mov
(bad)
xor
xchg
mov
push
loope
lock
mov
cmp
jl
clc
ja
cmp
inc
or
push
mov
xor
std
(bad)
test
and
push
call
add
xlat
fs
mov
jo
adc
xor
or
gs
or
mov
push
call
ss
aas
js
and
jle
cs
imul
ret
test
or
push
clc
jmp
cmp
push
lea
jge
ror
mov
in
jae
or
(bad)
neg
push
xor
jae
jg
lea
push
push
push
push
call
sub
mov
and
std
xorps
cmp
inc
sub
and
jmp
add
add
push
xor
dec
dec
clc
add
(bad)
in
mov
pop
mov
pop
inc
loopne
mov
pop
mov
cmp
les
fbstp
push
je
in
stos
cld
jne
(bad)
sub
hlt
dec
ret
pop
call
push
mov
push
je
mov
or
jg
add
push
push
push
inc
add
cmp
cmps
in
call
daa
or
or
add
mov
(bad)
pop
push
mov
icebp
pop
mov
mov
and
xor
out
jg
cs
push
inc
clc
mov
jle
mov
(bad)
dec
mov
je
pusha
dec
popa
mov
dec
or
inc
clc
inc
cmp
sub
mov
fs
shr
test
jle
or
add
test
out
faddp
adc
add
push
call
bound
xchg
add
into
inc
cdq
ins
into
mov
mov
inc
dec
xor
dec
sbb
mov
dec
imul
(bad)
cdq
test
pop
lea
int3
add
dec
or
xor
push
std
fadd
into
popf
xor
test
xchg
call
push
jmp
xor
push
add
push
(bad)
ret
loopne
out
aad
pop
imul
lea
sub
stos
jg
fstp
ret
mov
loop
imul
mov
lock
or
ret
push
push
loope
cmp
into
push
sbb
and
je
push
pop
adc
cmp
push
pop
clc
push
and
mov
mov
ins
in
xor
jbe
or
(bad)
push
mov
cmp
je
cmps
or
mov
push
call
push
les
add
in
call
jg
jmp
push
ret
cmp
es
sahf
dec
jne
in
outs
mov
adc
aaa
mov
jle
fimul
cmp
je
mov
cs
daa
cld
push
icebp
mov
(bad)
dec
dec
jne
lea
add
or
or
adc
dec
mov
sahf
pop
mov
movs
cdq
and
loopne
push
fbld
ss
mov
call
ret
jmp
out
jbe
in
loopne
lock
mov
stos
inc
adc
adc
dec
dec
push
pop
sbb
dec
push
stos
cmp
jne
push
call
sub
add
lods
call
pop
inc
xchg
dec
or
je
or
mov
mov
mov
xor
add
sub
scas
fild
adc
sub
adc
aas
rol
mov
push
mov
call
push
xchg
cmp
je
sar
mov
popf
jne
jns
shl
xchg
loop
add
sub
dec
call
ret
xor
xor
out
mov
loopne
fnsave
add
mov
push
xor
dec
cmp
paddusb
fwait
mov
mov
inc
add
and
sub
add
sti
xchg
or
(bad)
mov
mov
jbe
add
nop
mov
push
xor
adc
adc
add
pop
stos
add
aam
push
adc
leave
je
mov
mov
(bad)
sbb
push
push
mov
repnz
add
pop
inc
icebp
pop
(bad)
es
and
and
fucomp
push
mov
mov
mov
jne
and
jo
inc
add
call
add
push
add
ror
add
add
or
push
push
and
xor
dec
lea
push
push
push
lea
jo
mov
icebp
add
push
push
mov
add
add
pop
push
sbb
in
dec
sysexit
jne
std
push
push
push
push
push
or
in
fadd
cmovnp
sub
or
sub
mov
jb
and
jg
or
stc
add
xchg
xor
inc
dec
dec
jl
cmp
and
popa
or
jb
add
aad
shr
gs
push
fild
test
push
enter
mov
lea
inc
lock
mov
lea
mov
lea
jne
div
loopne
popa
add
add
clc
adc
mov
sti
or
(bad)
test
sti
pop
ja
shl
add
mov
sbb
or
int3
icebp
aad
add
clc
(bad)
sbb
add
xor
sbb
iret
adc
push
xor
in
and
test
je
cdq
add
xlat
mov
add
add
test
and
lea
jne
push
mov
cdq
or
daa
add
push
sbb
push
cmp
jne
pop
test
ror
inc
scas
sub
add
data16
mov
jne
data16
test
adc
rcl
iret
inc
add
mov
mov
mov
arpl
xor
xchg
rcl
aas
and
pop
inc
and
inc
xor
repz
sbb
sbb
push
sub
pop
cmp
fst
int3
add
mov
jge
push
jle
mov
inc
aaa
arpl
inc
lods
mov
std
mov
das
fmul
xor
ficomp
mul
sub
mov
fiadd
xchg
mov
cwde
sub
jmp
in
push
sbb
adc
jp
gs
dec
inc
xchg
adc
and
mov
(bad)
std
push
ficomp
leave
add
push
push
or
or
shl
rol
(bad)
pop
ja
adc
add
jl
adc
jl
xchg
sub
xor
dec
add
pop
sub
sub
push
xchg
mov
pop
pop
mov
cmp
loope
sub
inc
add
add
pop
movs
imul
ret
rcr
xlat
pop
test
stos
sub
push
push
xor
jecxz
rol
std
adc
clc
(bad)
mov
and
mov
push
lea
lea
call
xor
jmp
ror
mov
cmc
nop
jmp
adc
hlt
mov
mov
add
in
pop
call
mov
hlt
mov
pop
mov
xor
lea
sub
sub
pop
and
add
fwait
mov
inc
or
in
scas
(bad)
mov
ja
and
jmp
jmp
cs
adc
mov
push
les
ret
pop
and
in
sbb
adc
inc
xchg
and
aaa
xor
pop
and
data16
ins
pop
cmp
jne
mov
in
dec
add
std
iret
cmp
jne
mov
unpcklps
ret
add
xchg
inc
mul
push
(bad)
inc
jne
cmp
jb
add
test
xchg
lock
mov
push
sub
xor
cmp
(bad)
jns
jmp
mov
push
cmp
mov
mov
push
shl
push
push
cli
ja
sub
cmp
ja
je
pusha
pop
out
or
mov
cdq
idiv
test
jge
add
and
mov
(bad)
jl
ficomp
rol
stos
mov
cmp
and
pop
cmp
inc
adc
mov
pop
add
and
mov
cdq
ror
icebp
pushf
ror
and
rcl
or
mov
mov
dec
in
test
jle
cmp
jl
mov
lock
pop
and
loope
mov
mov
pusha
or
inc
mov
test
stos
pop
push
lea
xor
sub
mov
clc
add
push
mov
xor
call
mov
and
neg
ret
and
test
mov
rol
rcl
or
mov
mov
and
ret
imul
test
int
inc
or
and
add
jge
dec
mov
jmp
cld
js
push
outs
dec
mov
mov
dec
xchg
push
test
icebp
pop
cmp
and
adc
push
call
jmp
inc
adc
push
iret
and
add
inc
and
add
call
test
(bad)
dec
fs
ret
push
inc
add
inc
add
pop
das
sar
aaa
pop
rcl
add
add
add
add
add
add
add
pop
pop
add
add
push
and
inc
add
call
ficom
cmp
xchg
and
std
xor
sub
movsx
cmp
daa
stc
push
cmp
push
ja
add
test
lds
dec
test
jle
pop
pop
mov
mov
scas
pop
mov
jo
leave
sbb
nop
cdq
and
xchg
ror
cmove
fiadd
mov
mov
ins
xchg
dec
and
dec
adc
(bad)
(bad)
jbe
adc
push
or
jo
pusha
adc
scas
sub
push
ins
sub
push
je
inc
aad
push
arpl
outs
jge
jg
(bad)
mov
push
call
sbb
cli
pop
inc
mov
and
out
adc
dec
dec
mov
xchg
or
push
inc
pop
into
cmp
cdq
push
add
jb
add
das
push
lods
xchg
cs
ja
jo
cmp
push
cmp
mov
sbb
jmp
jl
sub
out
sub
or
test
rcl
add
inc
dec
sub
lock
mov
mov
mov
jl
(bad)
fcom
cmp
mov
mov
adc
leave
test
ud0
mov
xor
test
setne
mov
outs
xchg
jmp
sbb
(bad)
hlt
clc
inc
daa
dec
mov
retf
mov
cmp
pusha
mov
mov
pop
pop
xchg
in
inc
div
out
dec
adc
rol
inc
adc
loop
pop
jp
shr
mov
fcomp
ror
out
fst
lahf
add
out
pop
mov
sub
(bad)
and
add
adc
inc
pop
addr16
sbb
mov
iret
std
add
inc
add
or
or
pop
data16
jge
ror
ds
aam
pop
in
jnp
add
or
add
add
and
add
imul
aaa
push
push
popa
push
inc
std
mov
push
push
mov
xchg
call
inc
sbb
jg
aas
inc
sbb
pop
imul
push
out
(bad)
sti
fmul
xor
pop
std
in
mov
dec
add
add
push
mov
jmp
ja
outs
dec
and
(bad)
test
jne
je
mov
aam
scas
dec
pop
js
cmp
add
or
cmp
mov
jmp
push
jmp
test
cmps
mov
adc
je
add
add
jne
adc
push
push
mov
out
mov
add
mov
jmp
and
jmp
xor
xor
cld
lock
test
and
xor
ror
cmp
jl
stos
dec
aam
or
cmp
fcomip
fwait
push
sbb
push
je
mov
pop
mov
mov
pushf
and
in
int3
sbb
jl
aaa
inc
push
push
push
sbb
add
pop
shr
cmp
push
test
jl
jo
mov
xor
xchg
add
jo
add
jb
inc
push
shr
and
call
mov
add
mov
pop
inc
mov
and
add
add
adc
or
inc
mov
adc
mov
mov
push
push
push
push
ror
add
xchg
hlt
fidivr
inc
fs
sub
push
mov
mov
mov
jg
adc
or
add
push
cmps
add
sub
aam
jp
xchg
or
sub
dec
mov
cmp
mov
adc
jle
cmp
lea
and
movs
adc
push
cmp
adc
cs
add
cmp
cmp
and
add
pusha
call
fcom
jae
adc
test
lea
sbb
or
js
cmp
ja
loopne
aas
inc
xor
add
inc
xchg
push
push
out
shr
xlat
dec
test
or
sar
and
sub
push
push
mov
mov
scas
int
pop
pushf
lock
jmp
out
mov
xor
mov
test
std
ja
aaa
jnp
jmp
je
add
or
mov
rcr
pop
fsub
add
cmp
fsub
adc
dec
shr
dec
pop
mov
push
add
cmp
adc
dec
pushf
sti
cmp
or
add
add
mov
inc
sbb
or
cmp
ret
sub
ins
adc
cmps
mov
lea
add
ret
jecxz
mov
cmp
dec
fiadd
adc
loop
cwde
dec
pop
pop
cmp
add
stos
sbb
aad
test
std
ja
stos
sbb
cmp
jge
and
outs
push
fmul
add
mov
jmp
sbb
jae
add
jg
cmp
push
push
push
ret
sti
jmp
mov
mov
ss
mov
jne
sbb
cmp
cs
jp
mov
pop
lea
push
out
hlt
inc
add
retf
lock
add
sbb
mov
inc
loopne
(bad)
mov
ja
mov
mov
mov
mov
sub
test
aas
imul
repz
lea
out
(bad)
lock
and
jmp
mov
lea
sub
add
retf
push
je
push
sub
sbb
sti
fstp
test
jge
jo
in
cmp
and
outs
mov
rol
scas
or
test
xchg
test
adc
mov
jo
cld
adc
add
fwait
mov
lods
push
push
idiv
fild
add
push
pop
cmp
xor
sub
push
pop
and
lods
adc
pop
test
push
mov
lea
push
pop
mov
xchg
stos
stc
es
pushf
and
push
and
test
mov
cmp
add
xchg
shl
jg
mov
push
cmp
jne
outs
and
arpl
into
shr
inc
test
jmp
ss
retf
push
dec
xor
loope
ret
push
adc
pop
add
ror
pop
add
mov
scas
cmp
sub
ja
add
retf
test
sti
cmp
je
rcr
xchg
cdq
dec
adc
lds
ror
inc
sub
and
and
sub
sbb
hlt
adc
(bad)
je
adc
pmullw
push
sub
jle
mov
add
xchg
adc
loopne
and
fadd
inc
mov
sbb
sub
jae
leave
clc
dec
dec
sub
sar
jecxz
icebp
xor
jmp
(bad)
movs
(bad)
(bad)
dec
mov
xor
xor
test
jle
mov
test
je
cmp
je
mov
add
fwait
add
shl
ret
push
dec
pusha
jmp
and
dec
test
jne
jge
(bad)
mov
pop
mov
jnp
or
in
frstor
jne
or
jg
das
jne
sub
sbb
dec
test
daa
adc
inc
sbb
adc
pusha
and
loopne
and
and
cmps
fwait
cmp
add
inc
fild
inc
sub
sti
add
or
add
pusha
cmp
or
loope
aas
jmp
mov
fisttp
xchg
ret
daa
lock
(bad)
movs
lds
(bad)
inc
add
or
mov
cmp
jb
push
sub
mov
add
das
fsubr
loopne
push
dec
sub
fistp
(bad)
fisttp
leave
add
mov
push
and
lods
ret
mov
mov
pop
adc
lds
int3
or
shl
push
mov
add
and
xor
and
sbb
or
mov
sub
(bad)
push
mov
inc
and
cmp
jne
push
inc
jmp
push
loopne
mov
adc
arpl
outs
call
les
out
sti
fsubr
add
mov
xor
and
add
xor
sub
mov
add
outs
(bad)
stc
sbb
xchg
mov
or
scas
jo
push
push
sub
mov
jns
aaa
jno
(bad)
cmp
xchg
sbb
xchg
push
xchg
xor
sbb
mov
sub
dec
mov
rcl
lds
sub
jg
jnp
pop
inc
xor
cmp
jne
mov
fwait
aas
enter
add
cmp
cmp
push
inc
outs
aaa
ss
aam
daa
push
int
and
inc
mov
(bad)
cmp
xchg
movs
xor
test
inc
in
jae
inc
cmp
clc
jg
inc
and
push
call
aaa
mov
pmaddwd
push
sahf
pop
cmp
icebp
jg
(bad)
popf
sub
jl
dec
rep
jmp
sub
push
push
pushf
and
and
lods
bound
xchg
pop
gs
ret
mov
inc
sbb
pushf
pusha
adc
xor
pushf
popa
sbb
int
dec
imul
adc
pusha
test
and
test
inc
mov
and
(bad)
fistp
cld
mov
popf
push
outs
mov
sbb
pusha
repnz
adc
push
sub
cmp
jb
(bad)
and
jae
cmp
cmp
push
call
jno
add
mov
sub
or
push
xchg
in
fs
int3
daa
sbb
cmp
retf
out
sbb
(bad)
in
and
movs
shl
shl
loop
cmc
jmp
hlt
call
and
cwde
repz
and
dec
inc
adc
cwde
and
mov
enter
jnp
pop
sbb
mov
ins
enter
sbb
pusha
aas
outs
mov
mov
push
sub
mov
add
inc
add
sub
(bad)
out
sahf
aas
es
add
pop
xor
inc
add
xor
imul
add
fadd
dec
loope
dec
xor
mov
dec
mov
and
add
or
inc
add
ss
add
dec
pop
xor
mov
(bad)
or
adc
sbb
je
cmp
ret
div
add
movsx
pop
mov
sbb
push
push
test
dec
aam
fdiv
sub
pop
inc
cmc
xor
lock
mov
mov
sub
or
lea
lock
cmp
mov
bound
(bad)
sub
add
ja
repnz
call
das
add
retf
or
cmp
add
cmp
xor
jne
loopne
mov
cmp
outs
inc
mov
add
and
mov
push
jo
lea
mov
stc
ffree
lea
mov
add
dec
cmp
add
div
dec
(bad)
call
mov
mov
mov
sub
push
mov
mov
mov
jmp
mov
sub
mov
mov
icebp
add
jl
test
mov
jne
inc
pop
ja
push
xor
mov
add
gs
stos
jne
mov
pop
pop
inc
adc
sbb
loopne
push
cmp
jmp
inc
and
dec
adc
rcl
retf
lods
and
add
mov
stc
push
mov
mov
adc
fsub
daa
inc
or
add
pushf
lea
push
push
cmc
in
sbb
or
loope
daa
mov
test
mov
sub
dec
or
dec
and
aas
in
out
lock
mov
int
lea
inc
lea
mov
sbb
cmp
xchg
dec
fs
cs
cmp
jb
out
fadd
dec
jl
jbe
add
sbb
jb
lea
data16
jp
(bad)
xor
cmp
jb
lea
cmp
adc
lods
xor
push
adc
push
mov
mov
imul
ins
or
adc
inc
fadd
inc
sub
test
into
mov
rol
lds
shl
fild
cmp
ret
pop
adc
or
lock
mov
xlat
nop
mov
inc
cwde
or
add
mov
inc
div
adc
sub
and
cmp
add
cmp
mov
mov
xor
ret
inc
xor
shr
and
inc
in
mov
nop
and
and
and
and
inc
mov
(bad)
jb
arpl
arpl
add
push
shr
fdivp
inc
mov
cli
inc
and
xchg
rol
ret
(bad)
shr
xlat
push
push
add
ss
cmp
or
dec
adc
retf
sub
or
fwait
lock
lea
sub
sub
add
add
retf
inc
loope
test
and
dec
call
add
cmp
add
iret
mov
mov
ss
neg
loopne
mov
inc
mov
subps
mov
pop
lds
mov
push
ss
loop
or
pushf
inc
jb
bound
or
and
add
cld
sbb
mov
push
je
adc
xchg
out
js
ror
pop
mov
push
push
(bad)
xlat
lock
pop
add
mov
jmp
mov
in
mov
out
(bad)
cld
xor
test
sete
push
sbb
(bad)
jl
sti
pop
pop
pop
ret
push
call
push
arpl
jne
aas
mov
test
sete
sahf
stos
loopne
mov
xchg
lds
call
shr
fistp
xchg
lea
arpl
sbb
mov
inc
xor
xchg
clc
mov
rcl
sti
sbb
inc
xor
lea
push
push
es
sub
sub
cld
arpl
jne
adc
push
cmp
inc
pushf
add
hlt
add
call
jne
sbb
or
add
std
push
push
push
or
or
loop
sbb
ins
adc
movs
mov
cmp
ror
data16
cmp
jne
lock
shl
sbb
or
mov
xchg
pop
lds
ffreep
add
ret
mov
in
or
pop
push
push
inc
ins
push
push
push
push
popa
movs
jbe
adc
in
cmp
mov
sub
add
add
aaa
je
add
idiv
cmc
mov
ret
rol
push
sub
xchg
mov
aaa
js
cmp
and
ret
mov
pop
jo
mov
xchg
jne
mov
and
scas
sub
xchg
lds
cmp
dec
inc
mov
aam
lock
cmp
mov
cmp
jne
cmp
leave
jmp
call
cmp
dec
ins
cmp
jne
or
ds
push
bsr
jmp
cmp
or
sti
fcos
pop
clc
add
test
add
jmp
or
sar
int
sub
jo
popa
outs
adc
cmp
add
cmp
or
cmp
jl
dec
aam
cmp
mov
jns
aas
(bad)
mov
dec
je
dec
dec
cmp
add
add
je
mov
xchg
or
loope
(bad)
inc
and
sub
add
call
sub
push
cdq
sub
mov
sar
call
sbb
jg
sub
adc
sar
mul
out
test
lea
mov
jne
adc
je
jge
test
je
pop
cmp
loop
aas
inc
add
mov
xor
sti
inc
adc
inc
cmp
fisttp
push
dec
add
test
jne
mov
mov
or
add
inc
sub
xor
add
mov
dec
push
xchg
add
or
ret
sub
push
inc
cmc
sbb
fsubr
dec
push
push
push
push
mov
sub
inc
add
pushf
jae
cmps
mov
jo
sbb
push
cmp
stc
fwait
push
ret
inc
in
inc
into
pop
xor
mov
push
and
pushf
sbb
and
adc
retf
lea
add
sub
cmp
je
jg
ficomp
push
push
ja
pop
cmp
add
sub
sbb
dec
lock
dec
mov
cdq
ficomp
add
push
test
enter
sub
jne
add
jmp
aam
imul
push
push
call
pop
dec
mov
stos
jmp
adc
sbb
or
mov
and
std
dec
add
ret
lea
add
add
add
adc
in
(bad)
out
dec
push
fwait
mov
mov
mov
xor
cmp
call
cmp
jne
mov
or
push
push
inc
lds
jo
pop
push
push
jnp
call
clc
or
mov
std
lock
add
adc
adc
cs
sbb
sbb
pop
inc
cmps
sbb
scas
sub
jo
or
pop
xchg
cmp
mov
test
pop
icebp
addr16
adc
fadd
jb
or
xor
mov
jmp
pop
cmps
cmps
fbld
dec
add
adc
cmp
cmp
jne
or
cmp
adc
xor
ss
inc
push
cmp
and
add
retf
add
(bad)
je
push
dec
adc
jne
pop
mov
push
inc
sbb
inc
cld
ja
cmc
jne
pop
xor
pop
add
adc
push
adc
cmp
push
ja
dec
inc
icebp
dec
je
sahf
sub
dec
pop
les
sti
(bad)
mov
add
xor
xor
pop
dec
push
loopne
call
add
cmp
bound
or
cli
sbb
xor
xor
mov
pop
mov
add
gs
dec
dec
sub
xlat
in
dec
sbb
add
jge
cmp
or
inc
push
push
push
iret
pop
je
cmp
fisubr
add
int
push
or
imul
dec
dec
sbb
dec
cmps
sbb
dec
dec
pop
xor
sub
mov
fmul
je
or
xlat
pop
das
stos
outs
add
outs
or
enter
outs
adc
pop
add
(bad)
mov
add
and
add
dec
inc
pusha
mov
cmp
jp
pusha
xor
adc
mov
lea
fsub
sub
dec
pop
adc
adc
mov
cmp
jg
cmc
or
sbb
mov
or
xor
xchg
imul
out
or
sub
adc
and
jns
fnstcw
pop
sbb
into
mov
mov
aaa
adc
ja
dec
cmp
and
mov
push
call
fdiv
inc
and
xchg
and
loope
dec
jo
add
loope
add
push
(bad)
out
push
mov
addr16
aad
or
jo
jb
fwait
in
fwait
sbb
adc
jl
sbb
adc
mov
clc
call
cmps
sbb
(bad)
sti
adc
pop
frstor
sub
outs
aad
ret
adc
push
ss
jg
clc
cmp
jne
cmp
je
push
push
push
hlt
mov
fabs
push
pop
test
inc
test
je
xor
push
push
add
xor
pop
push
push
push
pusha
pop
inc
imul
and
or
dec
out
pusha
pusha
cmp
inc
sub
pop
and
xor
cmp
xor
mov
push
rcr
aas
inc
xor
das
or
ror
pop
add
jo
cmps
pop
adc
dec
cmp
test
out
popf
mov
pop
dec
pop
or
xchg
mov
sbb
sahf
into
test
adc
push
push
xlat
icebp
cmp
repnz
sub
and
inc
mov
ret
push
mov
push
mov
js
add
lods
push
mov
idiv
sar
scas
adc
jp
mov
pop
cld
xor
cmps
ret
push
dec
adc
mov
push
push
inc
out
mov
pusha
and
mov
sub
push
ja
mov
shl
adc
mov
sbb
aam
mov
dec
adc
test
cmp
leave
xchg
les
adc
mov
mov
jmp
inc
inc
add
call
movs
call
inc
inc
add
mov
push
inc
add
cmc
or
imul
scas
stc
cmps
lock
dec
push
outs
add
call
dec
lods
add
mov
add
or
sbb
cld
inc
and
mov
add
mov
dec
and
mov
pop
ja
or
adc
icebp
inc
pop
mov
jae
adc
jle
in
in
dec
dec
push
pop
mov
adc
xor
pushf
iret
mov
xchg
mov
xor
rcl
mov
mov
inc
pusha
adc
lods
xor
pop
adc
dec
xchg
push
out
cmc
push
sbb
pusha
push
(bad)
push
aam
or
push
pusha
(bad)
je
adc
loope
add
add
add
push
add
mov
adc
rol
dec
fsubr
popa
add
mov
out
add
stos
fistp
inc
push
pop
mov
pusha
mov
ror
lods
and
add
or
xor
mov
or
gs
ds
mov
push
sub
aad
cmp
ds
xlat
shl
add
xlat
shl
add
popa
jbe
jl
xor
call
add
xor
shr
xchg
stos
mov
aam
(bad)
adc
inc
and
add
add
push
lea
xor
ror
inc
aam
inc
adc
call
aaa
add
test
clc
mov
add
ins
(bad)
call
pop
inc
(bad)
mov
ins
lea
xor
inc
call
scas
cli
fistp
das
inc
ror
or
push
and
mov
cld
stos
and
mov
push
call
add
mov
iret
pop
or
call
lea
in
or
adc
add
and
add
or
fwait
xchg
mov
mov
sahf
sbb
rcl
and
test
ins
push
mov
mov
jle
dec
or
pusha
pop
sar
mov
fwait
add
pusha
add
nop
jmp
add
icebp
idiv
out
in
cmps
push
cli
push
lea
sbb
push
sub
jge
mov
jge
imul
push
or
fadd
push
das
xor
mov
cmp
std
(bad)
(bad)
(bad)
push
dec
mov
sub
mov
dec
inc
add
fisttp
push
push
bound
pop
mov
inc
cs
mov
jmp
lea
or
add
inc
push
add
sbb
(bad)
gs
jmp
jl
out
mov
and
adc
pop
mov
jnp
je
setno
sub
adc
push
push
and
pop
add
or
ret
adc
adc
and
and
pop
les
mov
popf
xlat
sbb
add
cs
or
xchg
lea
(bad)
or
cmps
into
adc
add
dec
and
(bad)
adc
arpl
xchg
sbb
movs
and
test
push
or
xchg
or
adc
mov
pop
sub
jne
pop
pushf
cmp
adc
or
xlat
inc
in
pop
in
jne
dec
inc
lock
inc
push
call
jne
add
add
lock
cmovp
pop
dec
and
push
mov
xor
add
mov
push
aas
add
rcl
nop
sbb
inc
and
pop
or
mov
push
rol
ret
sbb
loop
mov
mov
add
in
loop
clc
(bad)
fstp
push
jne
mov
or
adc
cmp
adc
leave
cmp
lsl
ds
push
adc
and
(bad)
or
add
test
dec
push
or
je
shr
mov
cmp
inc
mov
jmp
fsubr
je
stos
iret
outs
xor
pushf
mov
mov
adc
lea
xor
adc
jp
sbb
inc
add
dec
fnstsw
mov
cmps
cmps
addr16
lea
sbb
sbb
or
dec
je
sub
(bad)
dec
hlt
mov
stos
cli
cmps
sbb
sbb
call
inc
popa
push
fwait
syscall
cmps
xor
adc
add
test
jmp
fisttp
pop
mov
push
sbb
or
sub
mov
fmul
adc
mov
jp
loop
xrelease
push
jl
mov
jmp
jge
out
add
xor
cmp
push
inc
adc
push
xchg
xchg
test
inc
inc
dec
mov
mov
mov
pusha
in
adc
pop
pop
mov
mov
sub
fcmovnbe
push
cmp
(bad)
push
xor
inc
or
push
cmp
mov
mov
mov
je
sub
pop
mov
cmp
rol
cmps
call
sub
mov
inc
je
push
call
mov
add
inc
mov
pop
or
jae
lock
cmp
(bad)
lock
cdq
and
movs
sbb
lea
es
or
lea
and
or
adc
inc
add
push
and
sahf
(bad)
stos
(bad)
dec
inc
and
sbb
mov
fadd
mov
mov
cs
sbb
sbb
popa
cmp
dec
jo
nop
mov
xchg
imul
push
sti
add
dec
mov
push
cmc
mov
mov
jne
adc
or
sub
adc
clc
cli
and
into
call
add
inc
push
icebp
xchg
nop
nop
sub
xor
les
mov
in
sub
sbb
fs
mov
add
or
dec
add
cmps
pop
sbb
mov
fwait
add
mov
fcomp
push
(bad)
fild
fadd
push
or
push
push
inc
pop
adc
pop
mov
(bad)
iret
inc
sub
iret
or
or
inc
mov
or
add
add
clc
jnp
inc
mov
jmp
xchg
cmp
push
out
inc
mov
cmp
push
enter
inc
mov
jbe
pop
test
scas
xor
js
gs
loopne
dec
add
cld
mov
in
pop
mov
push
lock
adc
or
and
or
out
mov
cmp
mov
adc
jmp
and
push
or
mov
clc
mov
dec
test
jne
inc
cld
ja
or
add
sbb
pop
cmp
popa
jmp
mov
add
adc
mov
inc
mov
loop
ret
test
sub
je
lea
push
mov
adc
push
and
aam
popa
popa
xor
dec
inc
xchg
cmp
aaa
mov
cmp
inc
sbb
add
call
jbe
or
lock
sahf
rol
add
ret
cwde
adc
push
push
push
call
stos
jecxz
sbb
xlat
mov
stc
sub
ins
mov
push
stc
adc
or
pop
mov
dec
je
xor
in
or
jb
std
(bad)
dec
cmp
jle
mov
add
cmp
je
mov
or
(bad)
dec
pop
fs
jne
dec
jne
jnp
ss
stos
cwde
arpl
and
pop
add
mov
icebp
cmp
shl
push
add
inc
add
push
xor
mov
push
mov
daa
sub
dec
aam
pop
popa
fiadd
ds
xor
test
mul
cmp
out
popa
sbb
inc
inc
punpckldq
xor
jle
jo
jne
cld
int
and
or
xor
sub
add
cmovle
pop
fs
mov
and
fidivr
xor
push
push
ret
push
sti
jmp
mov
cdq
and
add
mov
mov
or
stc
add
clc
fstp
(bad)
clc
add
jmp
push
push
sub
(bad)
cwd
mov
lahf
cli
stos
out
push
sbb
push
ret
adc
push
stos
ret
sbb
push
and
movs
mov
cmp
mov
stos
and
or
pop
into
and
mov
pop
inc
std
sub
imul
lds
xlat
mov
cmp
jge
mov
push
push
mov
adc
or
loopne
test
ins
and
mov
mov
add
xor
(bad)
mov
inc
jge
or
mov
fs
xor
aaa
pop
cmp
push
and
imul
add
out
clc
push
sub
jmp
or
mov
push
push
cmp
jnp
push
enter
mov
repnz
push
mov
push
mov
sbb
dec
shl
cmp
cmp
mov
lea
adc
add
sub
pop
lods
pusha
test
je
mov
ret
jge
adc
stos
pop
pop
call
push
addr16
test
jne
cmp
jne
push
es
call
sbb
test
je
mov
lods
mov
adc
mov
call
pop
sbb
sbb
add
fist
sbb
adc
cmp
mov
xchg
mov
mov
dec
or
add
setae
ja
cmc
lahf
clc
dec
je
cmp
enter
mov
dec
push
hlt
add
cld
mov
fs
add
and
je
push
ins
je
pushf
add
fimul
pusha
push
mov
add
adc
out
mov
ret
push
shl
add
out
cwde
cli
dec
retf
pusha
sub
xor
cmp
icebp
or
adc
adc
mov
mov
inc
add
push
hlt
xor
push
cdq
jo
sbb
hlt
jge
and
adc
push
or
xchg
nop
jmp
sub
je
sub
mov
jb
hlt
call
sub
push
or
dec
ja
add
push
lahf
dec
call
clc
(bad)
cmp
jle
add
add
and
and
fidiv
add
add
pop
push
push
call
ret
push
cmc
push
push
jp
add
cld
mov
add
adc
gs
or
and
push
and
sub
lock
and
and
das
push
clc
jl
inc
aad
push
mov
adc
not
aad
outs
push
mov
xor
loope
shr
cmp
lock
mov
mov
inc
aas
in
or
in
jg
sub
mov
fnstsw
sbb
pusha
adc
fldlg2
mov
adc
ret
sbb
jno
outs
jmp
push
cmp
push
xchg
mov
jmp
(bad)
adc
fadd
inc
push
nop
cmps
sub
sub
leave
inc
push
pop
cmp
pop
sub
add
sar
add
pop
test
push
fidiv
repnz
push
mov
add
pop
add
add
and
add
pop
(bad)
retf
sbb
push
pop
pop
inc
push
ins
and
ret
fbstp
pop
cmp
je
mov
push
cmp
shl
arpl
addr16
xchg
mov
cmc
cmp
jle
inc
sbb
push
and
and
test
mov
retf
jmp
adc
cmp
ret
push
add
cdq
push
cld
mov
lods
js
mov
or
je
xor
push
xor
sub
or
leave
inc
out
cmp
pop
push
pop
inc
add
add
jo
pop
shl
add
mov
fs
sub
(bad)
and
inc
adc
je
xor
out
inc
les
adc
adc
add
adc
rcl
xor
add
cmp
clc
es
push
add
dec
push
sbb
shl
cmp
mov
test
add
jb
add
mov
and
sub
xor
push
js
add
push
push
and
in
push
les
inc
mov
sub
add
fisttp
push
pop
cmp
mov
mov
(bad)
std
mov
dec
pop
mov
test
(bad)
out
out
cmp
es
pop
cld
pop
push
bound
mov
xor
std
add
add
push
mov
loopne
pop
or
xchg
loopne
mov
inc
sub
loop
inc
sbb
jo
xor
cli
hlt
adc
ss
xlat
sub
stc
push
mov
or
sub
pop
(bad)
and
xchg
add
ds
mov
pop
cmp
pop
dec
cmp
inc
mov
dec
push
sbb
fcomp
das
std
dec
cmp
mov
cmps
cmp
je
cmp
inc
jge
fdiv
out
cmp
xchg
pop
xor
pop
sub
test
sub
loope
jl
cld
push
mov
cmp
test
push
test
push
xor
push
mov
fisttp
add
cmp
jae
sti
push
add
push
push
dec
fild
test
add
cmp
jb
cld
mov
(bad)
arpl
pop
and
mov
icebp
sahf
push
jmp
adc
pop
int
aaa
mov
jo
and
fnsave
and
test
pop
and
push
mov
test
mov
ss
je
cmp
test
adc
cmp
inc
mov
repz
call
cmp
dec
imul
icebp
push
pop
sub
xlat
gs
add
imul
pusha
fs
js
sbb
js
lock
or
in
xor
stc
inc
sbb
mov
jne
push
dec
enter
sbb
push
push
xor
adc
adc
xchg
cld
cmp
je
mov
push
push
lock
mov
sub
add
test
add
jmp
dec
pop
inc
jmp
mov
mov
push
mov
and
ret
push
add
and
mov
dec
in
rol
dec
cmp
scas
add
mov
push
push
jecxz
dec
hlt
inc
add
pop
cmc
mov
pop
jo
add
mov
push
push
mov
push
mov
adc
add
inc
adc
push
push
mov
dec
sub
pop
mov
test
je
sub
fisubr
adc
je
fs
adc
lock
mov
xor
sbb
cmp
jno
xchg
or
or
lock
call
push
mov
in
xchg
push
cmp
add
mov
mov
je
test
je
push
call
adc
rcr
push
push
pop
pop
add
inc
jp
sbb
push
add
fistp
out
and
mov
adc
mov
dec
jmp
fsubr
pop
fstp
adc
fadd
push
xor
xchg
sub
and
push
enter
outs
sbb
(bad)
mov
adc
loop
add
add
cmc
mov
and
jl
(bad)
sbb
push
test
jae
aas
sbb
clc
ret
push
jne
add
aas
cdq
in
nop
nop
sub
call
push
mov
add
add
push
add
push
adc
mov
inc
and
or
sub
popf
or
push
or
loop
adc
or
or
leave
je
add
push
push
push
lea
shl
mov
add
push
and
jb
loope
adc
test
mov
aaa
adc
scas
add
in
xor
test
jle
pop
sub
leave
cmp
loopne
and
and
jg
adc
iret
pop
xor
mov
and
cmp
jne
push
sub
mov
add
push
or
add
cmp
jl
jmp
cmp
call
std
dec
jg
in
pop
pop
pop
je
jge
mov
push
push
call
pop
call
push
or
sub
adc
push
xor
xor
adc
sub
ss
push
aaa
je
push
mov
fs
xchg
adc
push
xchg
and
aam
lock
ret
cmp
xchg
jmp
ror
or
mov
and
adc
mov
add
fcomp
cmp
jnp
or
rol
nop
(bad)
test
cmp
outs
and
xor
mov
xor
lock
sbb
mov
pushf
jo
ins
jo
pusha
(bad)
je
push
mov
mov
cmp
mov
sbb
push
(bad)
rcl
ja
sbb
push
mov
and
push
inc
ins
push
retf
push
and
cwde
add
push
fscale
xor
push
(bad)
(bad)
cmp
jl
dec
adc
lds
rol
mov
push
sbb
xlat
adc
out
jp
push
and
jbe
push
adc
inc
and
inc
cmc
sbb
sub
stc
bound
ins
test
loopne
mov
cmp
ins
adc
popa
pop
popa
mov
fdivp
jg
mov
jno
dec
cmp
sub
or
jo
jle
push
add
mov
lock
or
fdiv
or
adc
jg
mov
sub
sub
lea
jbe
out
lock
push
mov
adc
lea
cmp
xchg
mov
add
lock
mov
lods
add
pop
xchg
xchg
jo
jl
or
test
adc
mov
sub
add
test
cmp
mov
ds
jne
sub
pop
adc
ret
add
fnstenv
test
je
in
xor
sbb
ror
sbb
mov
cmp
cmps
daa
xor
daa
adc
pop
pop
and
sbb
iret
adc
enter
aaa
inc
xor
inc
int3
les
js
push
ret
(bad)
(bad)
cmp
jle
dec
sub
test
jge
js
dec
inc
fild
lea
cs
inc
mov
dec
jo
out
rol
das
mov
fs
and
dec
and
and
outs
adc
sbb
and
pop
mov
pop
(bad)
dec
fild
push
mov
shr
fild
or
add
and
in
cmp
es
or
ret
jne
mov
out
dec
adc
fistp
or
retf
lock
add
cmp
jl
jmp
(bad)
(bad)
out
outs
fcom
add
(bad)
sbb
adc
sar
sub
test
pop
in
idiv
and
dec
add
sar
or
mov
jge
jbe
sti
push
push
xor
adc
test
dec
cmp
mov
ja
cmp
jne
xor
jmp
dec
jns
jae
je
pop
inc
mov
mov
mov
and
pop
sbb
fdiv
aas
push
jo
(bad)
aad
jne
push
pop
dec
and
aam
pop
lock
inc
sbb
add
inc
cs
push
mov
rol
jg
mov
adc
int3
lea
push
jne
jo
sar
cld
out
xor
call
lds
cmp
xor
je
sub
and
ds
sub
xchg
jns
arpl
and
sbb
and
mov
pop
fistp
rcl
call
fadd
rol
dec
jae
dec
add
repnz
pop
pushf
stos
pop
(bad)
and
and
popa
ret
test
hlt
xor
jle
pop
xor
clc
sub
push
sti
jp
bound
add
xor
jne
and
scas
out
shl
sbb
mov
loop
pop
push
fist
cmp
ds
test
ret
je
push
adc
call
aam
iret
ret
je
mov
jl
outs
inc
sub
ins
add
adc
pusha
mov
adc
rol
or
out
push
outs
jg
js
dec
cmp
dec
inc
mov
mov
sbb
hlt
jl
xor
imul
loop
mov
pusha
lea
dec
aaa
lea
mov
mov
scas
add
mov
add
(bad)
or
adc
das
and
mov
jl
sbb
push
adc
das
jmp
lds
jne
lods
jne
add
cmc
jmp
inc
adc
jne
mov
and
xchg
nop
fld
dec
or
and
and
adc
pop
je
and
mov
sbb
adc
(bad)
jecxz
loopne
sbb
fstp
stmxcsr
imul
push
adc
sbb
cmp
out
mov
xchg
or
jg
xchg
mov
outs
add
scas
clc
cmp
je
js
pop
ins
pop
ror
mov
cmp
mov
scas
nop
push
add
xchg
punpckhwd
fiadd
aad
or
mov
test
add
xlat
jne
jmp
shr
cmp
or
or
xor
jmp
xchg
add
retf
sbb
jecxz
in
out
add
xchg
mov
mov
push
iret
test
push
inc
std
mov
je
mov
je
or
push
popf
and
jne
stos
popa
mov
inc
mov
pop
adc
jno
dec
bound
les
sbb
sub
ret
mov
push
dec
je
in
mov
pop
add
je
cmp
push
jne
mov
out
dec
push
cs
xor
xchg
mov
sub
add
xor
or
outs
push
(bad)
mov
loop
add
cmps
es
and
out
dec
dec
push
add
cmp
xor
pop
inc
scas
js
sar
fadd
jl
add
mov
mulps
jne
cmp
add
jne
or
adc
xor
ror
mov
(bad)
jne
mov
in
in
xor
inc
rcl
xchg
or
inc
adc
xchg
cmp
je
mov
cld
xchg
mov
cmp
je
div
or
mov
push
ret
(bad)
cmp
je
in
add
daa
mov
je
push
call
push
mov
out
add
push
mov
dec
push
mov
cmp
cld
add
ja
je
cmp
add
sub
or
xor
pushf
and
sub
or
or
dec
push
push
add
mov
loopne
aas
mov
mov
cmp
add
mov
mov
adc
pushf
test
pop
or
and
mov
pop
cmp
sqrtps
push
pop
jo
push
ss
adc
sbb
sub
xor
jno
dec
sub
test
add
mov
mov
push
cmp
xor
aad
fnsave
jne
leave
adc
or
enter
and
mov
push
fadd
push
mov
mov
ss
pusha
cli
and
and
shl
test
jne
xor
ret
loopne
mov
mov
pop
or
add
mov
mov
cmp
jne
and
xor
xchg
lock
adc
pop
mov
and
push
push
mov
jp
in
je
xor
mov
cmp
push
jg
ror
or
shl
adc
outs
or
and
or
imul
inc
add
mov
push
add
sbb
adc
and
pop
lea
loopne
ror
cmp
or
push
or
xor
aas
pusha
pop
je
add
je
hlt
and
lock
cmp
push
and
push
mov
call
or
adc
adc
xor
fst
test
or
jmp
push
and
fisttp
test
add
loope
mov
pop
inc
sbb
fsub
add
push
push
or
icebp
fs
or
push
jne
mov
shl
(bad)
sub
inc
outs
add
dec
test
adc
es
jmp
jp
add
sbb
xlat
and
sub
jl
adc
sub
ja
enter
cmp
jg
lahf
cmp
jge
or
test
or
inc
cmp
jne
lods
nop
sbb
jae
not
addr16
xor
jl
push
(bad)
out
rcl
sub
adc
movs
cmp
mov
add
add
mov
fidiv
mov
push
add
cmp
push
add
js
int
cdq
or
aad
je
jno
scas
loop
mov
mov
inc
mov
jae
pop
and
aad
shl
inc
and
mov
xchg
out
xor
fsubr
mov
cmp
jle
or
push
lds
sub
add
das
xlat
nop
or
cmp
add
daa
je
cmp
or
sub
icebp
xchg
xor
or
cdq
add
mov
push
pop
les
aad
and
call
test
ret
push
add
pop
fistp
xchg
sbb
jl
outs
jnp
mov
mov
cmps
jmp
cmp
adc
cli
je
cmp
shr
pushf
xor
loop
pop
push
mov
adc
xchg
stc
jo
test
stc
or
add
test
sub
mov
cmp
sub
aas
iret
(bad)
adc
mov
cmp
jl
(bad)
inc
cmp
jl
pop
jg
jnp
std
retf
add
mov
push
jo
(bad)
or
(bad)
int3
sbb
ins
stc
and
loope
bound
add
(bad)
dec
dec
pop
ja
add
push
push
cli
and
dec
push
xor
add
jnp
ja
and
push
push
dec
mov
sbb
fwait
or
mov
add
mov
jecxz
or
mov
push
fistp
inc
fcomp
jle
lahf
test
je
lea
sbb
iret
mov
push
ret
scas
sub
cwde
ret
or
les
nop
out
and
pop
jne
jno
jne
jne
push
sbb
je
push
sbb
mov
cs
lock
sbb
fmul
cmp
jne
add
ret
addr16
test
mov
bnd
je
jge
jg
and
mov
lock
or
add
je
mov
out
jbe
scas
sbb
mov
push
jne
mov
and
call
jmp
mov
xor
push
push
xor
add
push
dec
xchg
popf
arpl
jae
add
int3
cmp
test
jmp
fimul
mov
ror
mov
fst
ror
mov
dec
rdmsr
pusha
pop
pop
je
fs
sbb
xlat
or
adc
mov
ja
cld
jmp
and
add
sbb
push
or
pop
push
add
mov
add
xor
xor
add
adc
mov
sbb
dec
jne
inc
loop
nop
jbe
push
(bad)
call
push
sub
or
mov
xchg
jbe
lea
js
nop
sbb
loope
mov
les
cli
add
pop
add
(bad)
addr16
jb
aam
sti
(bad)
pop
adc
nop
ins
dec
pop
add
outs
or
out
and
add
jg
cmp
jne
mov
test
mov
in
test
out
mov
or
jmp
xchg
loopne
pop
jl
push
in
jne
inc
mov
cdq
sub
xchg
rol
sar
jno
adc
loop
push
loope
cmp
jne
mov
lds
jle
xor
jno
jg
test
test
cmp
shl
test
std
rol
pop
jne
aas
rcl
xchg
adc
jne
mov
lock
add
jb
dec
xor
sub
pop
sbb
ja
pusha
je
cmp
ja
ja
jmp
mov
add
cmp
dec
jl
mov
loop
mov
daa
add
les
out
outs
call
add
inc
test
or
inc
sbb
je
jo
or
inc
mov
push
or
pop
cld
call
fdivp
push
push
push
or
jne
mov
lahf
xor
inc
mov
ret
inc
dec
(bad)
jne
and
cmc
stos
fs
jns
inc
push
sub
cmp
cmp
jne
mov
mov
jo
add
add
leave
or
xchg
pusha
loop
nop
cmp
mov
aaa
add
xor
push
mov
fld
xor
add
jmp
inc
sbb
call
shr
inc
or
fwait
add
jbe
push
adc
inc
push
(bad)
xor
lea
sub
fs
and
loope
loope
mov
fstp
pop
call
int
or
mov
mov
lock
jmp
sar
mov
sbb
hlt
shr
add
mov
cs
ins
and
mov
stos
inc
test
inc
or
sti
inc
add
ins
and
movs
cmps
in
inc
movs
ins
movs
mov
jne
popf
je
sub
add
add
dec
inc
mov
jo
sub
pop
add
add
fld
pop
jg
add
sbb
hlt
add
mov
ja
iret
xor
pop
add
shr
push
inc
push
pop
pop
cdq
loopne
sub
push
je
mov
jmp
arpl
and
and
and
add
cs
and
test
xchg
xlat
cmp
je
and
cmp
or
icebp
jle
jne
test
(bad)
add
addr16
sub
sbb
sbb
mov
add
test
je
add
sbb
adc
push
sub
or
shl
cmp
loopne
dec
and
enter
jg
pop
je
outs
add
shr
add
cmp
test
mov
dec
cld
sub
jbe
test
call
push
adc
dec
or
adc
nop
out
mov
push
inc
mov
(bad)
lods
bound
push
lahf
es
jb
jo
adc
mov
(bad)
clc
cmps
or
push
push
push
mov
xor
cmp
out
popf
or
popf
inc
je
adc
and
adc
dec
mov
xor
sub
sbb
ret
popa
aam
jmp
xchg
xchg
cmp
bound
rcr
sbb
icebp
stc
mov
pop
add
je
sbb
dec
jne
mov
push
fstp
or
add
push
jmp
cdq
add
xchg
sub
ror
sub
jae
cmp
jne
adc
inc
pop
and
xor
shr
dec
js
add
(bad)
xchg
and
push
mov
mov
loop
push
dec
cmps
push
loope
cwde
jl
sbb
loope
cli
sub
cmp
je
lea
mov
ss
inc
adc
shr
and
cmp
or
cmp
jns
mov
pop
adc
push
les
loop
xchg
pop
and
(bad)
les
jnp
pop
xor
sbb
sub
loopne
or
jmp
jnp
jp
sbb
lods
dec
jnp
dec
fistp
ins
daa
sbb
lock
cmp
mov
ins
mov
sub
jmp
mov
sub
mov
push
rcr
push
xlat
(bad)
xchg
xor
cmp
jns
adc
sub
les
or
mov
xchg
mov
addr16
ret
mov
dec
in
outs
add
push
jae
or
mov
cmp
out
xor
xor
adc
shl
js
mov
push
enter
shl
add
mov
push
sahf
cmc
test
inc
cmps
add
xchg
inc
dec
and
xchg
xor
push
sbb
push
bts
mov
mov
mov
or
sub
xchg
xor
pusha
sub
cmp
sbb
stos
dec
xor
cld
cwde
inc
xchg
pop
add
pop
add
mov
xor
jo
les
dec
mov
jmp
dec
add
adc
aas
call
mov
pop
mov
push
push
fucomp
cmp
shr
dec
fst
(bad)
fist
in
retf
and
inc
add
cmps
es
into
pop
push
add
pop
lock
mov
mov
mov
mov
sub
push
push
mov
sub
stos
cmp
sti
mov
jo
push
push
call
fadd
popf
nop
mov
xor
and
pop
jp
mov
add
or
push
rcl
rol
iret
stos
lahf
inc
data16
ds
loop
adc
jne
push
push
jmp
mov
mov
mov
dec
data16
inc
popa
sub
dec
je
js
hlt
and
xlat
adc
adc
pop
adc
push
aad
jo
stc
or
push
fmul
loop
hlt
mov
sahf
push
adc
ficom
push
ret
hlt
mov
or
push
push
call
cli
dec
add
add
mov
loopne
or
jmp
push
loope
in
daa
js
add
pop
ret
int3
minps
iret
push
(bad)
lods
punpckhbw
adc
add
cmp
jmp
int3
add
retf
pushf
sbb
add
mov
mov
cmp
add
mov
mov
or
push
(bad)
inc
je
jmp
es
add
pop
outs
div
jmp
mov
cwde
test
outs
stos
mov
sbb
sub
xor
add
rol
fnstsw
test
jne
adc
push
add
cld
or
loopne
sbb
in
mov
add
inc
pushf
pusha
movs
sbb
leave
and
mov
xor
clc
or
nop
add
icebp
outs
mov
jmp
xor
push
push
in
pop
imul
or
add
mov
and
or
mov
cmp
mov
inc
and
sub
mov
inc
jbe
xor
ja
scas
jb
push
push
mov
mov
xor
push
mov
push
sbb
mov
push
mov
icebp
adc
sbb
mov
or
sub
call
dec
mov
sub
mov
adc
or
adc
lock
call
pop
pop
mov
mov
mov
lahf
test
jg
cmp
cmc
fisttp
mov
mov
jnp
or
jle
pop
pop
xchg
sbb
mov
adc
mov
(bad)
in
in
in
out
ja
das
mov
mov
shl
pop
lea
mov
mov
fmul
add
mov
inc
loopne
jl
mov
ss
test
jne
into
mov
jp
mov
cmp
(bad)
fsubr
pop
mov
mov
xor
add
(bad)
(bad)
push
aam
dec
aam
push
or
enter
xor
cs
ror
inc
jmp
fstp
or
add
xor
or
add
or
pop
push
mov
xor
mov
mov
push
aam
mov
jmp
pushf
jl
(bad)
ja
leave
aam
jns
add
jne
mov
mov
jmp
xor
js
add
mov
dec
aam
dec
shr
sbb
jns
jg
ja
inc
aam
inc
mov
dec
mov
push
ror
jbe
imul
dec
les
inc
loopne
add
adc
jo
in
jmp
xor
sub
add
jne
push
jnp
sbb
jmp
mov
mov
mov
cmp
mov
add
mov
mov
mov
rol
mov
xchg
popa
cmp
aas
fiadd
(bad)
sbb
adc
mov
fmul
stos
pop
adc
push
pop
jmp
add
fild
or
and
jmp
cmps
sti
adc
mov
sub
dec
add
adc
(bad)
out
xlat
push
dec
mov
out
push
jbe
or
jne
push
imul
idiv
das
jae
lock
inc
fcomp
sbb
pop
push
mov
adc
mov
loope
pop
sub
cmp
or
xchg
stos
mov
adc
or
and
dec
lock
mov
sbb
(bad)
jmp
mov
mov
jp
shr
sar
push
cdq
xchg
jecxz
add
fcmovbe
dec
sbb
ins
js
out
xchg
ret
outs
xor
add
mov
cmps
xchg
xor
cs
push
and
xor
test
sti
lods
int3
cmp
push
in
loopne
add
cmp
jne
mov
mov
add
popa
out
add
ins
jnp
pushf
push
xor
and
mov
mov
inc
jne
fadd
jmp
pop
fdivp
aaa
loopne
jmp
dec
or
dec
or
push
or
push
hlt
push
xchg
mov
inc
or
aad
add
popa
inc
je
clc
mov
inc
clc
pop
pop
ret
out
inc
retf
jb
and
mov
jnp
mov
sbb
mov
mov
push
call
or
add
adc
add
cld
add
outs
or
aad
cmp
je
push
call
pusha
xor
jo
cmp
inc
bound
loopne
push
xor
sbb
dec
rcl
aas
xor
or
mov
(bad)
(bad)
(bad)
stc
xor
test
jle
mov
mov
mov
and
cmp
jne
mov
inc
test
je
inc
ror
inc
cmp
jl
pop
mov
pop
pop
xchg
sub
pop
lahf
clc
pop
xchg
(bad)
bound
push
mov
push
sbb
mov
push
or
cmp
jle
fmul
cmc
popf
sbb
push
xlat
xchg
pop
adc
call
les
mov
lea
push
std
loop
sbb
std
mov
(bad)
or
pop
add
xchg
xchg
ror
mov
and
lahf
ror
jne
adc
out
adc
xor
push
inc
cmovne
data16
add
mov
pop
inc
push
or
je
xor
ret
push
and
sub
or
mov
dec
or
out
(bad)
and
(bad)
pusha
jb
add
(bad)
sar
add
or
je
push
call
mov
or
xchg
dec
call
add
(bad)
jne
mov
outs
ja
and
inc
jmp
or
jne
pop
xchg
jmp
xchg
add
(bad)
dec
jl
cmp
jle
mov
jge
mov
adc
push
fisttp
idiv
and
jl
cmp
and
adc
xchg
jl
adc
add
jg
neg
and
mov
mov
cmp
cmp
jg
test
push
pop
jle
jl
push
fnstsw
sbb
cmp
and
cmp
inc
add
test
ss
and
xor
dec
or
inc
jne
mov
push
cdq
mov
outs
mov
mov
mov
add
pop
cmp
jge
mov
pop
pop
ret
mov
add
and
aaa
and
jl
or
loop
cmp
(bad)
(bad)
(bad)
push
cmp
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
sbb
cmp
jne
cmp
inc
rcl
jae
sbb
fldlg2
mov
cli
(bad)
fld
fyl2x
fstp
pusha
or
push
push
(bad)
push
iret
push
push
mov
shl
sub
movsx
mov
fild
fmul
mov
adc
mov
cdq
popf
xor
or
pop
cmc
hlt
(bad)
(bad)
jmp
or
add
add
dec
clc
fcom
push
lock
into
jge
inc
sub
dec
add
sub
adc
inc
sbb
push
fmul
ja
fstp
or
mov
push
stos
add
pusha
cmp
inc
jnp
xor
dec
inc
jne
fadd
mov
xor
fnstsw
jle
jp
les
je
fchs
fmul
add
fmulp
adc
arpl
stc
push
push
int
xor
push
mov
mov
aam
dec
and
daa
(bad)
(bad)
dec
xchg
sub
push
mov
nop
mov
pop
mov
sbb
sbb
jl
and
jge
sub
and
dec
sub
cli
push
cld
or
rcl
xchg
fsubr
push
sub
jo
push
push
mov
push
out
xchg
loop
mov
imul
mov
aas
loope
aas
and
fcomp
jge
fld
pusha
adc
and
or
adc
cwde
ss
add
push
ret
sub
push
add
cwde
sub
inc
xchg
inc
outs
and
int
jmp
mov
or
pop
dec
and
push
adc
sbb
inc
mov
sub
call
xchg
sub
push
push
mov
push
xchg
(bad)
or
jg
or
mov
mov
loopne
inc
jmp
sbb
pop
sub
mov
mov
jmp
or
add
mov
test
adc
(bad)
call
inc
push
jle
push
push
outs
and
or
push
adc
(bad)
push
push
nop
sub
loopne
or
scas
sub
jmp
pop
sbb
push
jbe
xor
jmp
test
je
cmp
fmul
and
sub
or
xor
or
mov
repnz
add
rcl
push
cmp
cmp
jmp
test
je
mov
pop
dec
adc
rcl
mov
add
cmova
cmp
jne
mov
inc
test
cli
push
inc
je
xor
mov
jb
ror
ins
sub
mov
inc
and
test
je
cmp
je
test
jne
push
xchg
sub
jmp
sahf
test
not
jmp
sbb
cmp
sbb
(bad)
xchg
and
cmp
aas
add
test
cmp
mov
es
daa
fwait
add
xor
sub
int3
ins
cmp
sbb
(bad)
cmp
push
mov
mov
(bad)
je
or
(bad)
out
cmp
je
xor
mov
or
sbb
adc
fidiv
std
(bad)
dec
test
mov
je
cmp
jb
cmp
ja
lea
mov
and
daa
add
lea
(bad)
aaa
dec
inc
mov
ror
cmp
je
cmp
(bad)
jg
push
stc
cmp
stc
cs
dec
icebp
mov
cmp
jne
add
jmp
lahf
rcr
inc
adc
mov
and
pop
dec
add
and
fdiv
cmp
sbb
jnp
ret
or
shr
or
adc
(bad)
mov
je
out
jle
jb
dec
dec
and
jle
das
je
addr16
and
cmp
and
out
loop
enter
mov
jb
inc
xor
xor
or
adc
adc
inc
(bad)
and
mov
in
imul
(bad)
mov
jp
ja
fisttp
sti
jbe
ret
fild
iret
xor
dec
jb
(bad)
mov
and
ret
fxch
je
je
and
or
and
ret
jne
xlat
cmp
adc
test
and
neg
sbb
xchg
mov
jl
sub
sbb
add
cmp
sbb
clc
jne
cmp
jne
cmp
jb
pop
cmp
jne
adc
cmp
jne
adc
cmp
jne
and
icebp
jne
mov
mov
push
sbb
mov
sahf
fld
push
or
test
fs
inc
jae
sbb
mov
sbb
cwde
cmps
cmp
mov
inc
lods
add
ret
xor
add
xor
in
inc
sub
xor
push
stos
fwait
adc
push
sbb
outs
test
jl
inc
inc
sbb
push
mov
cmp
mov
adc
sub
pop
cmp
dec
push
or
jg
(bad)
jg
inc
adc
test
je
mov
push
and
and
push
push
adc
pop
or
add
es
clc
cmp
jl
add
pop
pop
pop
add
std
(bad)
fistp
xor
cmp
mov
jne
cmp
jne
mov
ret
cmp
push
and
cmp
std
(bad)
(bad)
mov
mov
ret
cmp
jne
cmp
jbe
cmp
jae
and
ret
xor
aas
or
inc
adc
sbb
test
adc
ja
jne
xchg
int3
jbe
add
push
xchg
enter
push
sbb
push
test
(bad)
(bad)
inc
mov
xor
mov
cmp
jge
cmp
jle
add
inc
jmp
mov
pop
pop
pop
pop
mov
sbb
inc
cld
jae
inc
add
push
add
into
sar
inc
or
stos
sbb
add
push
dec
pusha
mov
adc
mov
cmp
adc
pop
or
ss
xchg
ins
test
jo
sbb
call
cmp
dec
mov
lea
ret
out
ficomp
pop
pop
add
rol
(bad)
out
or
sbb
retf
out
mov
and
or
adc
lahf
sbb
popa
ss
pusha
mov
xor
test
xchg
adc
xchg
lods
jmp
loope
mov
jne
add
mov
push
jo
sub
dec
and
jne
pop
(bad)
mov
xor
or
dec
adc
mov
cwde
mov
dec
aaa
cmp
mov
inc
(bad)
pop
scas
and
scas
jns
and
cmp
das
add
add
call
push
and
and
loopne
ret
cmp
push
xor
cmp
jnp
call
mov
test
add
cld
je
ffreep
pop
pop
jno
push
push
mov
xor
dec
call
dec
dec
or
sar
pop
cli
pushf
mov
cmp
je
mov
and
call
cmp
jmp
dec
shl
fldcw
stc
xor
pop
jbe
js
xor
rol
jmp
xor
jno
out
mov
rcr
mov
fld
or
dec
cmps
sub
loopne
pushw
in
aas
inc
shl
clc
add
test
cdq
xor
pop
addr16
jbe
and
mov
adc
add
and
data16
iret
sub
mov
jp
pop
push
push
sub
push
mov
out
mov
ja
pop
sbb
xchg
mov
mov
mov
mov
popa
dec
mov
fdiv
push
cld
mov
and
cmp
pusha
loopne
mov
cdq
test
jne
mov
jge
or
test
jge
popf
cld
add
loopne
push
lock
adc
jmp
push
les
cdq
adc
or
mov
add
mov
and
lock
add
mov
mov
mov
call
lods
call
mov
sub
call
cld
add
xchg
add
clc
sets
dec
push
inc
fbstp
and
sub
cli
dec
dec
sub
push
(bad)
je
push
add
and
inc
sub
sbb
add
inc
and
outs
fs
push
popa
mov
mov
mov
out
and
and
sbb
xor
inc
pop
xlat
sbb
sbb
das
sub
dec
and
(bad)
mov
gs
adc
test
hlt
push
add
std
and
mov
(bad)
cdq
mov
scas
or
dec
sub
push
inc
in
and
cmc
cmp
scas
adc
daa
or
cmc
jmp
je
inc
add
cmp
jl
and
push
pop
push
push
xor
mov
inc
or
adc
ror
or
aaa
push
(bad)
push
dec
jbe
enter
add
and
ffreep
lods
pop
ins
jmp
or
repnz
aam
shl
mov
add
add
inc
or
scas
jae
cmp
pop
test
out
and
cmps
cmp
je
xor
and
dec
add
jg
iret
daa
(bad)
mov
cmp
icebp
adc
jmp
cmp
call
push
mov
call
pop
lods
ret
mov
push
jmp
mov
push
xchg
out
scas
ret
xor
sbb
add
syscall
stos
rol
fbld
xor
or
jmp
and
fadd
orps
push
inc
or
fmul
rcr
or
sub
sbb
add
adc
je
rcr
jo
invd
push
push
pop
cmp
pop
fadd
or
push
mov
retf
sub
pusha
sbb
call
ret
xor
rol
scas
mov
js
push
add
or
adc
out
jmp
jle
or
push
push
push
mov
in
push
cmp
adc
(bad)
jg
mov
jg
adc
xor
mov
or
dec
cld
pop
test
and
mov
je
aas
adc
and
push
fadd
sub
inc
call
or
iret
jle
sub
inc
jo
scas
call
xchg
and
adc
push
add
scas
test
(bad)
sbb
adc
inc
add
mov
mov
inc
mov
out
add
je
or
xchg
adc
xor
fild
sar
rcl
mov
repnz
popf
jo
nop
repz
push
push
mov
std
and
add
adc
and
push
mov
adc
inc
add
xor
cmp
jecxz
sti
pop
jnp
(bad)
ins
jb
cmp
push
or
dec
push
and
pop
cmp
clc
lock
xchg
es
sbb
sub
div
loopne
push
icebp
scas
into
cmp
cmp
push
daa
mov
popf
ja
inc
call
nop
push
iret
or
jl
adc
inc
push
add
pop
add
mov
pop
adc
int
or
mov
push
add
test
aas
inc
mov
stc
pcmpeqb
cmp
je
cmp
je
cmp
fnstsw
cli
push
jne
cmp
imul
cmp
push
ss
cmp
pop
fcomp
sub
cmp
jne
mov
add
mov
cmp
jmp
adc
das
arpl
or
xor
daa
adc
addr16
je
sbb
pop
adc
xor
xlat
xor
and
and
xor
xor
sub
retf
dec
mov
std
xchg
push
cwde
adc
xor
inc
lds
xchg
jmp
push
xchg
repnz
jge
push
adc
or
shl
leave
jmp
add
push
and
push
lea
push
push
std
mov
mov
mov
rep
stos
lea
mov
out
paddd
stos
stos
lea
loopne
mov
ret
inc
sbb
jg
xchg
cli
xchg
sbb
stos
test
stos
je
cmp
je
mov
scas
arpl
cld
push
stos
mov
frstor
ss
add
jl
(bad)
add
mov
cmp
movs
stc
sub
pop
lock
mov
add
rep
movs
clc
pop
out
and
jle
mov
or
mov
adc
push
das
imul
daa
or
add
shl
sbb
push
mov
xor
fadd
pop
add
jbe
add
mov
fwait
jl
(bad)
xor
add
in
sbb
inc
in
inc
std
jne
dec
inc
fcom
push
sub
pop
add
sbb
push
adc
xor
add
push
add
ins
es
rcl
dec
adc
cmp
ror
xchg
cmp
std
and
push
rep
sbb
retf
xor
mov
jl
retf
jmp
std
xor
adc
pop
cmp
push
adc
sbb
stc
sar
call
es
add
sar
ret
xor
mov
inc
cmps
xor
add
inc
clc
test
push
xchg
mov
movs
jg
inc
hlt
cmp
mov
daa
jle
xor
push
mov
ret
and
leave
retf
mov
sub
dec
in
add
add
mov
add
leave
(bad)
add
sub
adc
(bad)
(bad)
(bad)
aas
add
push
mov
lea
cdq
idiv
inc
cmp
out
pop
jl
pop
or
(bad)
daa
dec
cmp
mov
push
aad
or
jge
mov
and
(bad)
lea
push
fisttp
dec
sub
inc
xchg
add
xchg
std
(bad)
inc
mov
dec
jne
mov
mov
mov
mov
mov
or
pop
mov
push
push
mov
repz
mov
outs
(bad)
(bad)
adc
fwait
ds
xor
test
jle
je
(bad)
std
inc
mov
xor
inc
dec
jne
mov
aaa
push
mov
(bad)
inc
fs
pop
pop
mov
inc
push
mov
adc
clc
mov
adc
sub
lea
lea
jmp
lea
xchg
lea
mov
mov
sub
test
jle
mov
add
cli
or
or
jge
sub
test
mov
jle
or
loope
jno
jge
rep
fisttp
(bad)
(bad)
call
cld
out
jmp
dec
add
add
mov
lea
push
lea
ins
jp
(bad)
add
movs
mov
mov
inc
cdq
sub
clc
or
cmp
sub
jmp
stos
loopne
rol
iret
mov
lea
les
jmp
stos
call
push
mov
push
mov
or
jmp
xor
sbb
iret
add
(bad)
inc
(bad)
jg
pop
je
push
lea
mov
push
lea
xor
push
push
mov
inc
xor
pop
add
cdq
int3
dec
lea
cmp
jmp
inc
mov
sub
idiv
(bad)
mov
jle
xchg
mov
lea
dec
lods
inc
jmp
neg
jne
adc
push
or
add
sub
mov
je
ins
mov
add
mov
push
mov
mov
push
lea
xor
push
push
and
fmul
and
mov
cmp
dec
or
push
push
pop
dec
push
addr16
or
fdivr
mov
jmp
mov
xchg
cld
popa
mov
lea
push
pushf
add
pop
sbb
push
xchg
push
clc
adc
(bad)
(bad)
(bad)
in
push
add
xor
test
jne
mov
mov
mov
mov
inc
adc
and
ror
adc
mov
inc
dec
push
xlat
xor
push
mov
(bad)
jg
xor
add
cmp
je
cmp
jb
cmp
mov
cli
add
push
jae
sbb
push
inc
mov
lahf
cmp
fsub
clc
add
adc
add
inc
mov
je
push
mov
pusha
and
cmp
jae
push
mov
loopne
pop
pop
jno
and
pop
pop
call
ins
pop
pop
icebp
push
setle
loop
or
xchg
aad
shr
add
cmp
shl
(bad)
sub
inc
inc
push
mov
fmul
dec
add
ins
mov
sbb
and
inc
arpl
or
push
sub
push
(bad)
clc
cs
inc
push
dec
pop
adc
cmp
inc
fld
int3
pop
push
push
mov
mov
mov
call
dec
add
push
int
pop
xor
imul
push
call
add
push
ror
inc
mov
rol
aaa
xor
inc
sub
mov
sub
outs
mov
pop
sub
lahf
sti
inc
sbb
push
sub
push
neg
cs
push
push
call
fs
cmp
lock
mov
stos
ret
pop
push
and
push
push
pop
lds
jne
data16
adc
add
pop
and
outs
mov
lods
sub
sar
sub
add
jae
xchg
pop
push
push
and
cmc
jg
jp
dec
and
sub
push
sub
push
loope
cmp
lea
cwde
or
idiv
or
daa
lahf
cmp
push
es
sub
call
jmp
xor
mov
mov
movs
mov
pop
out
ins
pop
mov
add
inc
pop
push
adc
push
push
cli
and
das
inc
cwde
xor
push
inc
or
sbb
add
sub
les
out
test
sbb
je
das
jmp
add
pop
sub
adc
or
(bad)
sti
fild
cmp
pop
lea
adc
je
clc
xchg
adc
dec
inc
jmp
adc
add
push
push
push
mov
sbb
add
(bad)
cmps
sub
sbb
push
retf
push
call
pop
test
and
inc
and
sub
mov
sub
cmp
mov
ficomp
pusha
jle
add
mov
icebp
mov
arpl
sti
cmp
enter
adc
mov
sbb
lahf
sub
nop
mov
sbb
add
jo
(bad)
mov
push
popa
sbb
cld
inc
rcr
shr
test
lmsw
add
push
mov
cmp
je
add
sub
cmp
lock
mov
jmp
inc
mov
cmp
jle
sub
add
popa
pop
sub
fst
xor
rcr
rcl
pop
aaa
adc
mov
fistp
add
(bad)
sub
mov
call
sub
bound
(bad)
sub
int
push
inc
inc
les
xchg
ds
jle
adc
mov
je
push
or
or
aaa
sti
push
iret
sbb
pop
repnz
inc
inc
shr
add
dec
dec
and
cli
sahf
jae
mov
inc
sbb
xor
pop
inc
push
lea
loopne
cmp
add
cmps
mov
lea
push
and
pop
ret
add
ret
outs
add
inc
jp
clc
inc
jl
in
cmp
xchg
add
inc
fs
int3
fsub
stos
push
or
jle
mov
xor
and
loop
xchg
icebp
ja
add
shr
mov
jge
push
cmp
sub
rcl
std
pop
inc
mov
sar
push
popf
mul
adc
sub
push
xchg
mov
mov
and
push
fmulp
inc
mov
or
push
cmp
lea
sbb
inc
mov
xor
js
sub
cwde
add
aad
pop
adc
into
pusha
push
sbb
stc
xor
rcr
adc
pop
test
pushf
test
sbb
mov
enter
add
call
inc
dec
dec
je
xor
push
rdmsr
dec
mov
sub
and
mov
cli
jge
test
jl
add
mov
test
ins
jge
ins
mov
pop
mov
cmp
mov
movs
push
mov
ret
inc
and
fdivr
mov
add
or
mov
mov
mov
add
cld
outs
mov
and
mov
mov
(bad)
add
mov
mov
jle
jmp
(bad)
push
mov
mov
mov
mov
lea
mov
push
inc
aaa
sbb
add
mov
mov
adc
jg
inc
sbb
and
xchg
mov
(bad)
in
xor
loope
aas
add
mov
pusha
outs
jmp
or
add
push
add
xor
cmps
pop
mov
push
aas
sub
add
not
jno
push
dec
inc
adc
dec
fcomp
ja
inc
jle
lds
mov
xor
pop
rcl
or
in
test
sbb
sar
jl
ja
pop
int3
adc
inc
scas
and
sbb
jbe
pop
sub
scas
jns
and
inc
sbb
imul
push
adc
add
sbb
or
aas
loope
inc
add
add
push
add
jnp
add
jmp
jmp
dec
fstp
je
gs
add
jl
pusha
and
inc
out
dec
sbb
mov
cmp
jl
mov
mov
icebp
call
and
mov
mov
add
push
mov
clts
test
(bad)
xchg
ror
push
pop
adc
popa
idiv
or
pop
jmp
dec
ja
(bad)
shl
mov
jmp
mov
call
jmp
xor
jmp
mov
(bad)
cmp
or
mov
mov
add
xor
repz
clc
out
enter
cmps
mov
inc
loopne
cmp
mov
ror
jne
(bad)
push
mov
pop
add
pop
xchg
add
pushf
sar
jnp
clc
shl
(bad)
rcl
xchg
push
scas
out
ja
add
xchg
ror
aaa
mov
lea
jb
dec
lods
les
loopne
cli
mov
dec
sbb
add
lea
pusha
ss
fisttp
mov
sbb
leave
lods
add
retf
mov
out
add
fmul
test
add
lea
xor
in
(bad)
mov
push
push
mov
mov
imul
mov
xchg
mov
add
mov
mov
call
cmp
jl
push
fucomp
std
jb
fwait
add
or
lock
mov
jmp
lea
call
mov
add
and
repz
call
add
pop
leave
icebp
jg
mov
cmp
jge
xchg
sub
dec
adc
stc
or
add
outs
mov
fld
dec
mov
add
add
icebp
nop
mov
mov
mov
or
jne
push
push
dec
aaa
mov
add
inc
sbb
mov
push
mov
push
push
push
popf
fadd
jne
mov
in
push
loopne
pop
fadd
mov
in
jae
mov
(bad)
mov
test
(bad)
mov
into
les
push
(bad)
inc
and
mov
mov
push
push
mov
call
mov
inc
push
rol
lea
setl
push
mov
inc
push
sub
lea
popf
or
ins
lea
jg
or
dec
mov
mov
dec
cmp
jg
lea
lea
shl
sub
xor
mov
leave
lea
ds
push
inc
mov
or
lea
into
mov
mov
mov
mov
mov
mov
pop
stos
or
sbb
add
add
jae
sbb
add
cmps
cmp
imul
or
sbb
rcl
mov
das
fmul
push
lds
std
jae
adc
mov
push
or
call
push
or
ret
cmp
jne
mov
mov
call
jl
jecxz
retf
push
dec
in
ret
mov
hlt
push
call
mov
and
push
mov
sbb
mov
ret
out
add
out
out
jle
sbb
daa
fldcw
mov
jnp
mov
add
(bad)
jp
mov
out
adc
mov
jne
mov
sub
add
mov
adc
ror
mov
std
fiadd
add
xor
nop
push
mov
adc
mov
leave
jmp
mov
mov
add
test
sete
xor
or
or
xor
mov
not
inc
movs
out
leave
dec
jecxz
mov
cmp
test
ret
mov
mov
std
fst
adc
loop
dec
mov
add
in
iret
jl
hlt
inc
mov
add
adc
add
cdq
mov
inc
xchg
pop
sbb
cwde
imul
fsub
rcl
sbb
mov
xchg
add
mov
mov
inc
mov
jl
jmp
pop
pop
jg
adc
or
cmps
test
dec
or
or
and
outs
loopne
push
adc
mov
mov
icebp
mov
fwait
daa
jo
or
les
sub
sbb
push
add
(bad)
mov
mov
cdq
rol
stos
sbb
push
out
mov
push
sbb
dec
push
pop
std
loop
fistp
and
push
or
and
mov
call
inc
pop
into
clc
or
inc
add
dec
jne
and
xchg
rcl
leave
mov
mov
in
loop
mov
cmp
je
mov
test
mov
jl
(bad)
fstp
sbb
jbe
pop
test
jne
les
cwde
jne
mov
jno
mov
jg
stc
fwait
and
push
cmp
or
or
je
loop
sub
pop
pop
add
in
mov
pop
js
sbb
mov
mov
ja
not
cvttps2pi
jo
test
mov
push
mov
xchg
scas
sub
dec
and
adc
mov
xchg
dec
and
sbb
jl
pop
add
mov
in
shl
pop
inc
cmp
les
ret
add
jmp
fisttp
pop
pusha
jl
dec
push
loope
adc
push
inc
adc
inc
and
movs
aas
inc
mov
ja
dec
fs
movs
aaa
and
pop
adc
stos
test
pop
and
pop
push
aas
pop
or
mov
inc
out
fucomp
js
mov
mov
mov
push
push
test
or
leave
arpl
retf
push
cmp
fild
ds
mov
mov
cs
adc
inc
inc
lock
xchg
lock
xor
inc
mov
and
(bad)
stos
or
mov
je
inc
cmp
xchg
mov
xor
dec
and
sub
add
adc
add
cmp
xor
arpl
(bad)
call
popa
in
xor
or
add
out
jmp
mov
mov
sar
mov
jo
ja
add
icebp
(bad)
push
or
popa
mov
push
push
mov
cmp
jl
ror
cmp
adc
adc
push
and
loop
push
xchg
sbb
xor
push
and
push
push
add
push
push
cmp
int
imul
pop
and
xlat
add
out
sbb
add
and
popa
push
icebp
add
ins
mov
mov
clc
movs
pop
jnp
test
je
pop
enter
fsub
pop
sbb
pop
and
cmp
dec
or
add
pop
jno
sbb
add
rol
sbb
push
mov
adc
mov
push
push
fcmovnbe
adc
push
xor
add
adc
and
lahf
pop
mov
jbe
cmp
and
adc
shl
dec
enter
cli
push
call
mov
push
add
sub
push
call
pop
jg
add
ret
ss
adc
xchg
cmp
(bad)
lea
jne
ja
push
rol
jmp
lock
ret
or
enter
cmp
je
leave
mov
xor
adc
xchg
cmp
mov
pop
stos
push
mov
sub
jne
mov
test
mov
pop
lds
push
call
xor
push
test
mov
cmovs
mov
xchg
ret
push
call
pop
pop
ret
mov
push
test
sbb
je
fs
movaps
add
push
xchg
int3
dec
dec
rcr
add
sar
test
pop
pop
in
mov
and
mov
dec
dec
aas
push
cld
inc
inc
add
or
mov
mov
mov
push
mov
adc
jb
sti
and
dec
adc
add
xor
dec
push
je
pop
dec
adc
dec
cld
sbb
push
push
mov
push
push
and
xchg
je
push
out
lahf
mov
ja
add
mov
lea
add
inc
sbb
call
fcmovb
jp
add
pop
adc
mov
lea
fbld
inc
in
loopne
in
pop
xchg
add
pop
dec
std
aaa
xchg
or
push
clc
xor
mov
and
js
les
iret
in
and
mov
or
mov
outs
push
int3
js
add
push
adc
xor
mov
dec
sbb
mov
mov
icebp
mov
mov
cmp
adc
ins
and
jne
test
jle
mov
stos
adc
sbb
pop
cmp
mov
ins
pusha
mov
adc
pop
dec
loope
retf
sbb
sub
sub
je
dec
jne
call
mov
mov
xor
adc
add
pop
push
jae
pop
push
cmp
adc
pop
or
mov
mov
rol
jle
pop
je
lods
sbb
sub
mov
jle
dec
xor
mov
inc
sbb
inc
push
pop
icebp
xor
xor
in
pop
rcl
sbb
add
fdivr
fnsave
call
and
(bad)
cmp
inc
cmp
jl
mov
outs
pop
cmp
jge
push
sar
fisubr
cld
push
cs
xlat
sub
aas
sbb
cmp
or
xchg
out
sub
pop
and
xor
pusha
mov
mov
dec
pusha
jb
stos
jg
sbb
enter
mov
mov
test
jne
dec
(bad)
or
lds
dec
and
lea
clc
sbb
cld
fwait
stc
hlt
sbb
add
inc
push
sbb
add
mov
mov
xchg
loopne
iret
and
sbb
add
xchg
xor
mov
mov
bound
aaa
fs
sahf
push
ret
adc
and
jmp
cmp
xchg
outs
sub
sbb
loop
retf
xchg
(bad)
cmp
je
mov
jmp
lea
out
jle
mov
adc
imul
(bad)
push
jmp
clc
(bad)
or
das
mov
pop
jl
sub
push
add
test
femms
jno
in
dec
pop
test
je
pop
dec
cmp
jne
outs
push
add
mov
mov
ds
adc
sub
sub
in
push
mov
js
retf
(bad)
(bad)
jne
(bad)
into
sub
push
div
push
cli
fild
mov
int3
hlt
inc
add
ret
jne
in
sbb
xchg
ins
mov
sbb
out
cmp
push
fdiv
rol
jmp
or
inc
icebp
mov
jg
and
mov
dec
push
inc
mov
xchg
(bad)
cmp
adc
mov
pop
cwd
mov
adc
adc
sub
mov
and
test
out
clc
xchg
(bad)
xor
push
push
and
mov
ss
adc
push
add
mov
cmp
push
push
daa
sbb
push
arpl
sbb
push
add
ins
and
jb
push
cmp
xor
jbe
sub
jne
xor
adc
sub
adc
mov
pop
scas
sbb
mov
mov
add
and
sbb
push
sub
and
ror
(bad)
or
rcl
inc
add
ret
inc
add
sbb
shl
lea
sub
push
mov
xchg
push
jns
jno
fbstp
or
and
push
and
inc
push
les
dec
add
dec
fmul
inc
pop
test
mov
dec
adc
cmps
retf
mov
sub
jle
adc
jp
push
int
add
jecxz
outs
push
and
jne
adc
mov
sub
inc
push
or
mov
enter
dec
adc
test
xchg
push
sbb
cdq
fistp
push
add
in
pop
pop
add
iret
adc
jmp
cmp
or
fcom
das
sbb
add
add
add
ss
or
or
(bad)
lods
pop
sub
lods
adc
and
imul
mov
push
mov
add
push
lds
mov
add
(bad)
cld
(bad)
mov
push
sbb
cmp
jne
push
addr16
scas
adc
mov
std
loop
mov
sub
push
dec
push
(bad)
cmp
cmc
xor
and
and
add
push
neg
inc
add
aad
add
xchg
ror
aas
test
fadd
pop
aaa
icebp
pop
adc
sub
push
inc
cmp
test
nop
arpl
sbb
mov
add
je
jmp
jne
das
mov
leave
adc
data16
sti
pop
add
cmp
je
dec
je
lds
pop
xchg
cli
test
jle
mov
sahf
mov
inc
pop
ja
enter
xor
push
push
bound
in
(bad)
into
add
and
inc
lods
sub
loopne
out
adc
outs
pusha
jne
or
fld
xor
jl
fld
mov
rcr
ja
push
push
mov
jmp
or
pop
fadd
call
(bad)
sub
adc
iret
shl
sub
add
enter
mov
loope
adc
sbb
mov
add
pop
in
or
loopne
sbb
cmps
push
outs
mov
js
ret
popa
ins
dec
dec
add
mov
cmp
je
out
pop
fadd
add
or
bound
pusha
mov
cdq
cmp
jo
inc
test
je
rcl
nop
neg
out
dec
mov
outs
dec
cmp
push
sbb
rol
nop
and
out
push
aaa
lods
ret
test
push
add
jmp
xor
jo
dec
retf
(bad)
(bad)
(bad)
out
scas
nop
push
mov
push
cmp
jne
cmp
jne
mov
test
je
mov
push
mov
les
ins
pop
out
mov
push
out
sbb
or
jnp
ja
cld
js
(bad)
nop
mov
pop
pop
pop
ret
xchg
stos
inc
ret
cmp
and
outs
loopne
xor
pop
test
je
and
add
ja
add
into
mov
out
mov
pushf
mov
sub
add
sub
into
fild
jne
repz
jo
jecxz
or
sub
dec
push
fcom
and
or
clc
ins
stos
out
inc
lock
push
push
mov
adc
xor
add
sub
leave
je
pop
(bad)
out
or
add
pusha
jne
sub
or
mov
dec
sbb
cmp
shl
pop
ins
jp
and
jne
xor
es
push
cmp
adc
je
loopne
mov
push
or
pushf
add
cmp
mov
push
ret
xchg
and
ja
adc
add
call
sbb
xor
adc
add
sbb
cmp
shl
aam
add
ret
lea
push
push
jns
sub
sar
dec
test
(bad)
cmp
or
out
add
add
or
aas
test
fmul
(bad)
(bad)
add
mov
xor
and
dec
add
cli
pop
push
in
mov
mov
imul
xchg
mov
push
or
mov
(bad)
mov
mov
cmp
je
inc
add
dec
jne
in
jne
(bad)
std
push
push
push
call
dec
mov
ret
push
idiv
adc
add
add
mov
or
jbe
(bad)
(bad)
cmp
movs
(bad)
mov
dec
jae
mov
pop
inc
ret
xor
fisttp
adc
mov
and
inc
mov
add
mov
mov
inc
(bad)
aas
cmp
cld
mov
add
mov
mov
or
ror
dec
mov
lea
mov
and
in
and
in
cmc
xor
mov
add
cmp
xchg
mov
jne
xor
pop
pop
sbb
pop
mov
add
mov
lds
xchg
adc
adc
push
inc
mov
dec
dec
inc
inc
test
and
or
inc
and
test
je
clc
inc
add
cmp
jle
mov
mov
imul
push
add
xor
push
les
push
mov
lahf
test
jg
and
or
adc
dec
add
and
mov
les
mov
xchg
add
or
adc
mov
sbb
cdq
mov
mov
cmp
iret
dec
adc
sub
push
mov
mov
and
add
dec
cwde
dec
rcl
jl
call
mov
sbb
cmp
dec
std
loop
or
sbb
and
sub
lea
jne
mov
call
mov
jmp
mov
add
mov
adc
pop
lea
sbb
sbb
push
adc
hlt
push
add
add
mov
jmp
pop
lock
ror
push
and
cmp
jle
jg
(bad)
push
lock
push
xchg
pop
stos
aaa
mov
push
and
push
mov
imul
push
add
adc
stc
add
aaa
sbb
adc
push
add
mov
addr16
xor
mov
mov
rcr
shr
push
and
es
push
add
mov
ins
(bad)
jmp
dec
xor
test
je
sar
cmp
test
je
fdiv
mov
adc
push
sub
sbb
lock
cmps
push
out
pop
cmp
into
pop
push
push
push
push
call
jne
mov
test
je
xor
adc
xor
mov
sti
ja
sub
sbb
mov
mov
dec
mov
pop
inc
or
aas
(bad)
(bad)
in
sbb
(bad)
inc
mov
push
dec
gs
mov
mov
cmp
or
push
push
push
push
adc
fsubr
je
stos
sbb
shr
daa
jmp
ins
test
push
push
push
push
call
push
iret
call
push
push
add
jae
out
lahf
ret
fld
jp
(bad)
cld
dec
dec
and
pop
sbb
xor
add
mov
outs
pop
sub
ins
push
push
xor
push
cmp
je
je
out
jmp
cmp
je
mov
js
cmp
jne
jp
inc
cwde
xor
dec
mov
push
push
push
outs
mov
ret
aaa
xor
mov
leave
hlt
sub
dec
adc
jae
xor
push
push
sbb
cli
pop
mov
add
ins
mov
arpl
repnz
cmp
push
call
push
mov
xor
add
adc
mov
cmp
jne
mov
fcom
mov
leave
and
mov
dec
push
jo
sbb
adc
jmp
inc
mov
push
mov
rep
inc
mov
jge
loope
ss
sub
jmp
push
test
jne
dec
aaa
adc
sub
add
pop
aam
pop
and
cdq
and
add
mov
jl
inc
imul
dec
inc
es
lea
mov
shr
mov
xchg
push
call
lea
mov
sbb
call
jnp
cmps
call
fst
sub
mov
mov
cmp
inc
and
sbb
aad
call
arpl
jle
or
ret
or
imul
adc
nop
cmp
add
sub
dec
(bad)
mov
(bad)
jg
xor
sbb
mov
push
push
test
mov
movups
and
xor
mov
out
add
clc
call
dec
push
shl
daa
jle
xor
push
mov
cld
fadd
call
push
lea
mov
xor
mov
add
mov
pop
push
push
lea
mov
mov
mov
das
fcomp
das
cmp
or
pshufw
or
ret
mov
mov
mov
mov
sub
mov
pop
pop
sub
dec
rol
loop
das
mov
retf
inc
out
pop
(bad)
jg
scas
jl
in
cmp
je
add
jo
adc
mov
pop
push
push
pop
rol
and
ja
add
xor
pop
and
sbb
cmp
jge
neg
cmp
jge
mov
pop
add
pop
push
push
jmp
aas
dec
push
mov
cmp
sub
and
pop
jle
(bad)
jmp
jge
neg
cmp
mov
jge
mov
cmp
jle
jle
rol
inc
inc
cmp
jg
add
adc
xor
mov
es
add
xor
mov
add
cmp
ja
not
and
xchg
neg
cdq
add
rol
add
sbb
and
lea
push
sbb
call
add
shl
or
fdiv
cdq
add
cmp
jne
cmp
jne
adc
sbb
pop
mov
imul
sub
test
or
ror
adc
inc
push
push
push
(bad)
mov
mov
push
add
pop
mov
loop
inc
pop
mov
inc
and
add
lds
aad
xor
rcl
cs
pop
mov
xor
mov
and
out
sub
add
ret
inc
jge
xchg
and
and
sbb
add
sbb
mov
call
add
push
mov
jnp
pop
popa
and
xor
xor
adc
push
xor
pop
dec
aam
in
xor
push
jl
add
mov
or
push
sub
add
push
sbb
and
and
sbb
in
mov
or
and
mov
wrmsr
or
mov
pop
shr
enter
data16
xchg
imul
dec
mov
stos
je
xor
in
mov
adc
sti
ror
daa
stos
pop
cmp
imul
mov
dec
outs
mov
jg
cwde
fwait
int3
ins
push
pop
inc
push
mov
in
dec
ins
mov
fisubr
pop
or
jo
jae
pop
int
or
mov
cmp
(bad)
aas
cmp
jp
ret
xor
pop
or
jmp
dec
or
adc
add
jbe
enter
ins
(bad)
sbb
mov
mov
add
xor
(bad)
cmp
je
out
arpl
cmp
mov
jle
aas
test
ins
mov
and
not
icebp
and
add
jg
push
shr
jle
xor
push
inc
cmps
js
xor
cs
sbb
(bad)
push
adc
bound
cmps
lock
dec
add
sub
add
inc
jmp
cmp
and
dec
jbe
dec
ret
sub
mov
sub
mov
inc
mov
movd
sub
sbb
(bad)
icebp
jg
sub
xor
push
push
mov
mov
add
inc
cmp
dec
and
lea
push
push
add
inc
icebp
sbb
iret
jno
fs
jp
stos
sahf
das
test
and
cdq
ins
data16
ins
and
lds
pop
sub
or
inc
push
mov
or
test
mov
mov
add
cmp
pop
adc
jg
into
mov
mov
add
xchg
fadd
imul
sbb
pop
dec
mov
inc
add
ror
inc
push
push
push
mov
push
add
add
repz
mov
mov
add
mov
icebp
pop
dec
jnp
add
in
add
cmp
fld
mov
mov
add
fimul
adc
outs
call
mov
mov
add
cmp
ins
xor
adc
mov
add
mov
mov
xor
in
mov
pop
inc
and
mov
sub
jecxz
lahf
retf
sbb
int
and
mov
mov
dec
and
mov
add
rcl
mov
shl
imul
adc
sub
push
rol
sub
inc
add
inc
dec
mov
je
push
add
bound
jle
outs
outs
inc
clc
add
pushf
mov
jns
dec
inc
inc
adc
mul
and
push
mov
mov
and
add
pop
and
fdiv
mov
leave
add
push
cmps
push
sub
mov
es
clc
xchg
cmp
pop
int3
inc
je
scas
or
lods
mov
popa
inc
and
mov
xor
mov
mov
test
pop
sub
idiv
jnp
push
cmp
ins
mov
push
lock
aam
adc
mov
add
not
ss
loop
and
shl
ret
cmp
xchg
jo
cli
dec
les
mov
and
cmps
cmp
inc
je
push
mov
add
in
fcomp
jmp
pushf
lock
adc
mov
sub
cmp
ror
sar
push
mov
jl
cmp
jg
cmp
jl
scas
cmp
call
stos
ins
aaa
sub
in
jg
test
jle
mov
lds
aas
add
call
cmps
loopne
add
mov
jle
mov
int
sti
outs
or
dec
or
dec
or
outs
or
sub
sub
test
mov
mov
jle
jg
push
push
pusha
add
mul
fld
sbb
pop
sub
inc
movs
adc
scas
cmc
inc
aam
and
xlat
add
push
adc
inc
push
push
icebp
ins
pop
or
or
xor
stos
sbb
lea
sbb
call
fstp
jg
sub
dec
jo
inc
ins
mov
mov
or
mov
ja
mov
push
push
push
mov
lea
ins
lea
ins
inc
hlt
inc
add
adc
dec
jo
push
sar
push
call
or
and
jmp
mov
popa
and
mov
pop
jae
cmp
cli
out
loop
jmp
mov
mov
dec
icebp
sbb
add
test
or
add
cmp
mov
lea
mov
lock
not
jmp
test
xchg
cmp
scas
fld
fmul
mov
dec
inc
(bad)
jmp
clc
push
add
icebp
add
pushf
mov
test
jle
mov
mov
rep
jle
mov
(bad)
inc
add
cmp
bound
lock
mov
pop
mov
jg
mov
dec
fsub
fs
and
push
lea
out
mul
add
arpl
inc
add
dec
inc
test
mov
xor
and
in
(bad)
inc
cmp
clc
add
mov
lea
push
mov
fadd
jmp
mov
add
in
ja
sub
test
jle
cmp
add
cld
out
dec
jne
jp
add
inc
cmp
xor
mov
push
int3
xor
out
test
sbb
jb
jne
(bad)
push
inc
adc
inc
add
push
test
loopne
xor
jae
or
sbb
mov
inc
push
cmp
add
stos
add
fdiv
jne
(bad)
cmp
shr
add
mov
xor
scas
mov
cmc
test
jl
rcl
mov
add
mov
imul
push
and
ret
enter
mov
mov
mov
jmp
aaa
add
mov
and
push
dec
cmp
rcl
in
push
add
les
inc
add
jb
aaa
xlat
cmp
jl
in
jb
sahf
jecxz
popa
add
inc
dec
cmps
pop
xchg
test
inc
retf
shl
cs
(bad)
clc
mov
dec
in
ret
sub
into
and
push
adc
sub
xor
mov
pop
xor
add
outs
cmp
push
add
xor
out
add
jne
and
mov
add
fnsave
sub
mov
xor
sbb
fdivr
cmp
inc
jg
aaa
shl
cwde
mov
mov
lea
fild
clc
imul
add
mov
add
push
mov
std
mov
iret
or
mov
sub
xor
dec
and
cld
rcr
int3
inc
cdq
mov
dec
pushf
(bad)
enter
in
dec
dec
and
or
add
stos
mov
pop
popa
stos
mov
js
ja
mov
out
jle
cmp
sbb
jg
xor
jo
sub
loopne
adc
and
adc
push
jno
popf
mov
sti
(bad)
jg
sahf
in
add
out
add
call
add
loop
fwait
inc
ret
jmp
or
mov
pop
push
push
mov
cdq
lea
push
idiv
aaa
aad
sbb
inc
adc
pop
mov
push
push
cld
mov
inc
(bad)
cmp
jle
add
inc
sub
leave
jmp
mov
sar
push
and
rcr
dec
and
(bad)
dec
adc
add
ret
test
jne
fld
xchg
jmp
push
xchg
sbb
(bad)
mov
je
adc
adc
jne
or
sti
or
fcomp
add
call
xchg
ret
int3
jne
push
dec
rol
mov
add
mov
xlat
push
ror
pop
sub
push
inc
sbb
and
mov
adc
shl
call
add
das
ds
inc
mov
and
and
ja
and
ret
and
aam
jmp
xor
call
test
pop
add
pop
pop
pop
jbe
ret
add
push
inc
jnp
pusha
mov
xor
jmp
shl
int
sub
test
pop
aas
clc
sar
adc
dec
test
je
daa
push
mov
mov
sub
(bad)
dec
or
inc
sub
rol
mov
or
inc
adc
dec
icebp
inc
add
add
xchg
call
outs
ret
lahf
and
shl
mov
or
dec
mov
inc
scas
pop
popf
or
pop
mov
cmp
je
add
call
adc
adc
imul
push
call
inc
cmp
pop
and
adc
fadd
mov
lock
add
ror
add
mov
and
mov
sub
sbb
and
cmp
mov
or
pop
mov
pand
dec
pop
jge
add
jb
adc
push
call
push
push
xchg
test
jl
pop
xlat
aaa
and
and
push
push
adc
add
in
cmps
js
add
add
mov
sbb
call
add
add
fild
jl
call
mov
or
mov
mov
jl
leave
mov
jo
mov
adc
fild
arpl
cdq
mov
inc
add
mov
inc
dec
dec
mov
rcr
push
or
push
xor
push
mov
add
add
mov
mov
adc
aas
sub
fmul
outs
cli
cmp
jg
inc
adc
sar
outs
jle
out
push
push
adc
fidiv
enter
jle
mov
mov
push
push
lea
push
push
mov
or
pop
sub
and
rcl
add
sub
sub
jge
jb
pop
dec
and
xchg
mov
pop
jne
in
jo
add
pop
cmp
shl
mov
call
mov
pusha
mov
mov
mov
loopne
xchg
sub
test
pop
sub
sub
push
imul
dec
in
loop
fisttp
pop
sar
cwde
jne
sbb
mov
pop
sbb
jb
sub
shl
sub
fsubr
cmp
jl
xlat
sub
push
and
cmp
stos
adc
jge
jmp
cs
scas
jecxz
sbb
fild
mov
xchg
repnz
add
cdq
(bad)
icebp
or
push
push
push
add
dec
mov
sub
std
add
jl
pop
mov
cmp
jle
jle
sbb
mov
popa
inc
add
ins
sbb
jne
lods
in
mov
mov
cli
and
sbb
cmp
test
cmp
pop
inc
jae
inc
test
dec
and
std
xadd
inc
push
and
mov
push
push
call
dec
nop
js
push
jmp
mov
mov
mov
sub
ret
or
xor
jmp
sar
cmp
jle
lds
aaa
add
xchg
fld
jo
ja
(bad)
out
call
mov
fincstp
fidiv
dec
and
pop
test
out
mov
in
test
jle
movs
mov
adc
jmp
inc
mov
loop
jmp
ret
ret
jp
loope
fst
je
shr
mov
fld
jmp
imul
push
mov
inc
add
call
add
je
lea
and
ret
inc
dec
mov
lods
imul
sub
and
and
sub
das
ret
xor
inc
mov
inc
xor
mov
pop
repnz
ret
dec
je
lea
test
jl
push
ja
int
add
inc
mov
sub
mov
(bad)
repz
into
and
adc
stos
cmp
pop
mov
pushf
test
je
push
inc
jle
mov
lea
dec
out
(bad)
cld
mov
add
mov
sub
aas
inc
and
movs
ret
sar
bound
hlt
mov
jo
push
push
adc
push
ins
jl
rol
push
pop
dec
push
sub
fld
test
fist
xor
sub
dec
push
scas
enter
sub
push
mov
movs
push
push
push
xor
and
xor
js
scas
mov
push
push
jnp
mov
adc
add
mov
nop
mov
push
fsub
xor
adc
mov
or
neg
add
dec
adc
out
mov
shr
xchg
popa
add
in
and
pop
sbb
std
ret
adc
jo
add
adc
enter
mov
and
push
inc
or
adc
or
loope
into
and
jmp
and
sbb
mov
cmc
rol
push
or
dec
add
jne
and
adc
push
popa
call
scas
loope
cmp
popa
out
nop
jnp
and
mov
sti
out
in
icebp
sub
fsubp
mov
and
fadd
cmp
loop
mov
adc
mov
popa
sbb
adc
xor
add
(bad)
push
push
adc
pop
fadd
adc
push
push
mov
dec
repz
mov
lock
push
adc
mov
inc
xchg
inc
cmp
cs
(bad)
xchg
rol
push
(bad)
cs
inc
pop
or
inc
add
mov
mov
push
lea
push
or
dec
add
mov
add
bound
inc
cld
push
and
mov
lock
jge
and
in
mov
mov
add
sub
cmp
test
repz
dec
adc
adc
(bad)
(bad)
(bad)
jg
and
mov
test
jbe
mov
mov
mov
mov
mov
mov
add
dec
jne
lea
cs
jg
call
adc
inc
xlat
jg
fimul
not
or
adc
or
fucomi
bound
or
inc
loopne
add
adc
loop
fist
or
sbb
add
test
outs
or
fbstp
xor
and
inc
ror
push
or
mov
retf
mov
mov
pop
xor
dec
and
packsswb
fcomip
scas
ret
rep
fsub
mov
add
and
pop
mov
retf
sbb
pop
sbb
retf
adc
test
out
in
ror
pop
inc
xor
inc
out
inc
aam
cmp
jb
cmp
scas
jp
ret
mov
les
add
add
sbb
dec
pushf
push
test
ret
sbb
jbe
mov
lds
jmp
shl
mov
imul
push
clc
ja
lock
xchg
add
xor
pop
pop
ret
lea
(bad)
out
fisub
scas
jbe
adc
push
mov
mov
int3
gs
mov
mov
add
cmps
adc
dec
and
add
mov
jne
(bad)
add
sbb
leave
je
mov
dec
call
add
or
pusha
push
ins
stos
je
les
xor
(bad)
cmp
ins
clc
sbb
ja
jmp
fbld
cli
push
xchg
add
ins
mov
cwde
or
adc
mov
jle
mov
cli
cmp
sub
cld
or
mov
mov
add
mov
jge
mov
movs
mov
jae
jne
rol
pop
mov
loopne
push
or
test
push
scas
adc
(bad)
lea
or
outs
loopne
push
cmp
or
not
int
xchg
stc
inc
jb
or
add
fsubr
cmp
xchg
test
sti
add
mov
and
cwde
push
cli
pushf
jmp
das
sbb
cli
cs
pop
jmp
sbb
mov
sti
mov
mov
mov
jmp
fwait
mov
jne
nop
push
imul
or
push
fbstp
cld
inc
lahf
je
push
push
jne
call
add
add
ds
into
mov
mov
cmp
jg
jg
mov
add
mov
mov
mov
mov
pop
test
dec
add
push
push
push
or
add
test
je
add
add
jbe
push
push
lea
cld
pop
inc
mov
push
push
push
call
or
adc
push
dec
mov
mov
push
popa
je
adc
aad
push
sub
push
push
sub
cmps
pop
fdiv
sbb
les
and
dec
push
push
push
push
push
push
push
cld
aaa
ror
push
mov
push
out
addr16
push
mov
push
cmp
push
push
adc
outs
cmp
sub
inc
adc
xor
cmp
(bad)
jmp
xchg
rol
cmp
jne
mov
mov
mov
adc
ds
push
push
push
add
push
xor
add
mov
adc
jg
cmp
inc
or
sbb
mov
mov
sub
icebp
fbld
adc
rcr
ins
and
shr
rcl
jg
jmp
push
shl
out
sbb
pop
add
pop
pop
out
cmp
and
sbb
mov
inc
and
and
sub
push
sbb
mov
pop
pusha
call
ror
imul
shl
cmps
add
jbe
sbb
mov
mov
dec
jo
movntps
adc
cmp
mov
fld
push
pop
jbe
mov
push
mov
cmp
(bad)
into
rcr
gs
(bad)
loope
je
push
dec
icebp
jg
fild
fmul
fs
xor
mov
cmp
sbb
fld
fmul
faddp
sub
call
cmp
(bad)
jmp
test
setle
mov
add
inc
dec
jne
or
inc
fstp
fstp
jmp
(bad)
ins
sub
mov
inc
cmp
jb
int3
push
inc
shl
pshufw
pop
add
loope
adc
jns
rol
xchg
cdq
cmp
(bad)
push
push
xchg
js
in
test
dec
push
movs
cmp
les
sub
repz
les
mov
inc
adc
pop
add
out
add
add
add
cmp
fsubr
ror
dec
push
js
loope
inc
adc
mov
or
repz
bound
fs
sub
fmul
in
cmc
add
dec
sbb
xchg
(bad)
icebp
or
xor
sti
xchg
inc
in
into
int
into
mov
pop
mov
add
test
test
gs
and
(bad)
xlat
jg
push
sbb
mov
mov
dec
sbb
mov
mov
add
clc
outs
jb
cs
js
ret
inc
xlat
fstp
loopne
je
push
push
jl
inc
(bad)
fbld
inc
mov
mov
ss
loopne
mov
fbld
(bad)
inc
mov
mov
push
push
std
sbb
push
and
nop
mov
ret
inc
jno
lock
mov
mov
cli
adc
add
sbb
jmp
pop
pop
pop
cmp
in
pop
pushf
inc
xor
pop
pop
or
mov
pop
and
dec
mov
sbb
cmp
sbb
in
dec
cmps
out
int
dec
mov
pop
pop
jecxz
test
jecxz
sub
ret
rol
pushf
pop
and
adc
adc
sbb
popf
pop
call
cmp
fsubr
stos
pop
inc
lock
pusha
add
shl
jle
jae
std
push
push
(bad)
or
or
jne
push
imul
dec
cli
pop
ror
inc
add
jo
rcl
sub
mov
cmp
cwde
mov
push
jo
adc
neg
add
inc
add
xchg
or
int3
add
ficom
push
cmp
push
xor
cmp
and
mov
pop
dec
mov
push
mov
mov
push
int3
cmp
sti
je
mov
inc
sub
hlt
jnp
add
pop
mov
fld
lock
push
clc
and
push
popa
into
pop
add
jmp
sub
cmp
bswap
jle
adc
sub
mov
push
ret
jle
mov
sbb
jo
repnz
ja
(bad)
jp
cmp
jne
add
iret
adc
dec
mov
push
push
mov
push
std
push
push
les
dec
cmp
inc
push
push
cmp
cmp
inc
call
in
cmp
and
push
pop
cmp
aaa
sar
sbb
cmc
mov
ds
push
add
xchg
call
(bad)
je
aaa
push
rol
mov
mov
pop
adc
adc
or
jmp
in
pop
sbb
shr
mov
pop
pusha
xor
icebp
in
xor
mov
js
popa
jb
mov
cmp
inc
cmp
std
bound
adc
sbb
and
push
lock
add
push
or
add
mov
add
cmp
les
pushf
sub
mov
sbb
jmp
in
push
inc
xchg
das
cdq
call
dec
mov
jl
call
add
jmp
inc
cwde
adc
(bad)
push
push
ret
and
cld
mov
cmp
and
aad
dec
(bad)
ja
rcl
cmove
jmp
enter
fsubp
push
add
add
arpl
(bad)
pusha
in
add
test
pop
cmp
je
cmp
test
call
inc
enter
mov
clc
pop
(bad)
pop
sub
cmps
add
jne
mov
and
push
jo
xchg
inc
sbb
cmp
mov
inc
and
rol
pusha
inc
scas
sub
xor
xchg
mov
out
add
inc
push
xchg
jmp
maskmovq
test
std
push
adc
xchg
les
push
push
adc
or
sbb
sub
push
push
and
push
push
es
adc
dec
and
movs
and
sbb
mov
sbb
inc
out
xchg
pop
shl
mov
sbb
or
popa
jo
out
mov
push
push
add
inc
push
test
adc
inc
xor
loopne
or
or
and
ret
cmp
push
sub
mov
add
adc
add
jbe
aad
push
pop
out
add
add
cwde
or
and
arpl
add
jbe
sbb
push
or
jecxz
mov
cmp
xchg
mov
arpl
adc
inc
ret
jns
cmp
fadd
push
push
dec
cs
push
cmp
(bad)
call
pop
cmp
je
mov
mov
mov
mov
mov
cld
pop
jl
mov
jmp
xor
(bad)
repnz
add
rol
add
adc
push
out
loope
dec
add
cmp
mov
jne
cmp
je
cmp
unpcklps
hlt
sub
retf
add
or
cli
dec
add
out
mov
mov
addr16
(bad)
rcr
out
mov
mov
scas
pop
(bad)
jp
fild
mov
lea
pop
mov
pop
clc
les
pop
add
pop
cwde
shl
mov
mov
adc
nop
nop
xor
jg
nop
mov
inc
test
mov
test
in
(bad)
and
sub
mov
pusha
cmp
clc
add
int3
add
add
mov
pop
stos
out
cmp
adc
push
jle
pop
pop
dec
cmp
pop
inc
push
inc
arpl
jg
push
jnp
and
mov
push
mov
lea
jmp
mov
movs
add
inc
adc
and
sbb
pop
cmp
xchg
scas
stc
fbstp
dec
jo
das
add
push
cmp
inc
or
adc
cmp
sar
dec
jne
mov
(bad)
call
xor
fadd
add
cmp
inc
fisttp
adc
jo
mov
mov
test
jne
cmp
jne
cmp
jbe
sub
(bad)
outs
and
push
aam
pcmpeqd
cli
inc
jne
jne
adc
(bad)
push
cmp
jne
cmp
jne
mov
cmp
jns
out
xlat
cmp
add
jne
add
adc
ins
xor
push
jg
(bad)
jae
ins
cmp
jne
push
add
push
cmp
stos
xor
cmp
ret
jno
lods
cmp
cmc
jg
dec
dec
inc
sbb
push
lea
mov
(bad)
in
push
jmp
mov
lea
push
push
mov
(bad)
int3
and
mov
inc
push
mov
or
jne
call
lea
xchg
loop
and
jae
rcl
push
sti
mov
fst
inc
push
aad
mov
mov
mov
call
or
mov
mov
and
adc
lahf
pop
js
cmp
ss
fisttp
pop
mov
and
push
mov
and
scas
mov
cmp
and
inc
push
ficomp
retf
add
test
out
jle
cld
inc
loopne
cmp
jo
sete
stos
clc
jg
int3
mov
mov
jle
dec
xor
cmp
jge
mov
mov
shl
add
push
push
loop
jmp
push
lea
push
into
call
cmp
jne
or
pop
cmp
jne
mov
call
in
push
stc
and
or
adc
xchg
sar
jne
inc
jmp
mov
int3
push
lods
mov
in
pop
add
add
xor
push
push
push
bound
mov
mov
enter
cli
mov
push
push
jmp
outs
retf
dec
ret
sbb
or
adc
(bad)
dec
push
mov
mov
cdq
sub
mov
sar
push
mov
push
jne
icebp
xchg
add
push
mov
mov
cmp
mov
jne
cmp
je
xchg
push
pop
addr16
push
push
call
mov
xor
dec
cmp
lods
pusha
mov
test
inc
loope
xor
jmp
mov
xor
xchg
loope
aas
cwde
adc
ret
push
lods
add
rcr
jecxz
adc
add
in
inc
fdivr
aad
cwde
xor
add
inc
pop
cmps
xchg
adc
add
mov
and
inc
xchg
or
xor
scas
mov
std
xor
rol
test
jne
pop
or
push
and
test
xor
pop
stos
jnp
test
mov
(bad)
fdiv
jmp
push
adc
adc
lahf
fwait
jle
or
lea
add
adc
fucomp
fcom
or
add
inc
xor
and
push
hlt
(bad)
in
sti
xchg
icebp
xor
cmp
outs
jg
call
cmp
inc
outs
jno
je
mov
mov
mov
mov
mov
js
repz
mov
inc
rcr
inc
add
mov
cmp
dec
or
adc
fmul
add
jb
jl
xor
jecxz
mov
jmp
xor
adc
push
add
mov
nop
mov
add
idiv
add
jmp
dec
sbb
std
add
sbb
push
in
mov
cmp
xchg
inc
(bad)
(bad)
jmp
mov
test
mov
je
mov
mov
je
mov
sub
aaa
inc
sbb
mov
push
cmp
pop
adc
jo
xor
inc
jne
sub
jmp
dec
push
or
ror
loop
mov
test
or
aaa
push
jmp
cmp
call
fcom
jo
and
les
mov
and
add
not
stc
add
xchg
in
inc
lock
pop
int
faddp
scas
ja
pop
or
pop
jae
sub
mov
outs
stos
push
add
pusha
sbb
iret
add
mov
sub
int3
sbb
cmp
jg
push
mov
(bad)
mov
push
and
or
xchg
jns
mov
sub
fwait
mov
leave
mov
add
test
ret
ja
cmp
(bad)
js
js
push
and
adc
clc
push
fisttp
jmp
cmp
je
mov
mov
jmp
jecxz
push
adc
cmp
xor
or
sbb
inc
ret
icebp
lods
add
sbb
pushf
xchg
cmp
sub
dec
pop
push
das
mov
sub
and
cmp
mov
arpl
shl
inc
jl
jmp
cs
sub
adc
es
or
adc
adc
je
ret
push
push
popa
pop
cmp
bound
inc
push
into
(bad)
loopne
fsub
jbe
add
out
add
mov
out
jnp
dec
jmp
mov
clc
jmp
iret
add
or
push
add
sub
add
push
push
out
adc
popa
xor
jo
or
add
in
(bad)
call
mov
sbb
cmp
je
mov
and
push
out
or
xchg
leave
adc
adc
push
dec
sub
cmp
jne
inc
idiv
mov
js
cmp
je
mov
push
xchg
sub
loope
lahf
xor
and
lock
icebp
jg
mov
out
sbb
iret
push
sub
push
fild
fidivr
mov
mov
adc
sbb
inc
je
and
loopne
mov
sbb
push
add
in
sbb
sub
add
or
stos
add
push
or
cmp
jp
jae
shl
cmp
jle
sbb
xlat
inc
test
push
push
push
push
daa
dec
call
popa
or
scas
and
adc
inc
xor
mov
dec
je
pop
add
or
ffreep
adc
hlt
fsubr
push
add
and
test
ror
adc
push
add
mov
call
call
sub
ins
dec
aam
imul
movs
out
loopne
lock
jne
push
xor
imul
je
aam
mov
dec
add
dec
or
sahf
cmp
mov
imul
inc
xor
(bad)
mov
jne
pop
jmp
sahf
sar
shl
ret
add
std
add
jg
call
cmps
mov
inc
jno
push
ja
and
out
pop
jno
pop
sbb
icebp
mov
jmp
retf
add
sbb
test
add
or
sub
mov
inc
add
add
inc
add
xchg
mov
jo
add
pop
imul
dec
cwde
pusha
cmp
in
stc
repnz
jbe
(bad)
adc
(bad)
mov
mov
jns
fcomp
cmp
jno
mov
movs
pop
push
hlt
loopne
pop
icebp
fst
iret
aam
jge
aas
int
je
mov
sub
mov
or
fmul
or
add
and
stos
out
stos
pop
add
idiv
add
mov
xor
sbb
push
mov
out
dec
sbb
xor
push
sub
add
cmp
xchg
out
out
mov
lea
rep
add
jne
add
test
jnp
(bad)
jmp
mov
mov
mov
shl
adc
sub
inc
mov
dec
rol
jnp
out
call
sub
pop
mov
or
cmp
jne
cmp
jne
push
fild
add
fadd
les
sti
cmp
jne
movsx
imul
push
push
outs
fisubr
popf
sub
adc
cs
and
jle
sar
push
hlt
out
add
mov
mov
push
imul
inc
cld
(bad)
jo
sbb
lds
clc
hlt
ja
out
inc
dec
sub
push
mov
std
mov
addr16
and
push
jo
mov
inc
lods
push
(bad)
call
aam
and
mov
movsx
neg
mov
mov
cmps
mov
mov
data16
and
inc
push
or
jmp
mov
mov
mov
mov
mov
cmp
sub
add
ret
push
mov
call
mov
jle
adc
cs
stc
or
jle
(bad)
ror
clc
sti
ja
cli
sub
adc
pop
mov
sub
mov
and
mov
sub
cli
(bad)
aas
aad
sub
retf
mov
mov
mov
shl
mov
push
mov
call
mov
mov
add
rep
xor
add
or
jmp
ja
ret
(bad)
cmp
jg
mov
inc
sbb
fisttp
pop
div
cmp
and
jl
cmp
jge
sub
addr16
sub
dec
and
sbb
mov
sbb
ret
ds
inc
out
pop
inc
sbb
sbb
test
cmc
dec
dec
pop
inc
add
add
arpl
pop
push
retf
inc
mov
add
or
shr
arpl
add
in
sub
or
pop
or
rcr
add
inc
and
xor
jg
push
xor
mov
xchg
xor
xor
mov
mov
sub
sub
xchg
jmp
add
and
add
mov
push
shl
call
clc
mov
sar
and
outs
adc
fistp
inc
clc
inc
je
inc
or
xor
cmp
or
inc
adc
sar
ret
and
(bad)
fstp
lock
scas
lds
add
mov
mov
mov
in
cmp
popa
dec
adc
shl
stos
mov
mov
jnp
repz
fild
test
lea
stos
mov
pop
sbb
imul
leave
push
add
idiv
mov
cmp
jbe
cli
sub
cli
inc
mov
or
inc
jle
pop
into
mov
mov
test
jecxz
adc
mov
dec
adc
jg
fist
add
out
adc
(bad)
out
cmp
and
jmp
xor
jmp
add
add
inc
cmp
enter
imul
pop
jecxz
inc
cs
dec
mov
stos
and
test
jb
les
ret
mov
cmps
push
fiadd
popf
mov
test
push
push
push
je
mov
push
jbe
mov
popf
add
add
xchg
test
dec
push
mov
out
js
icebp
jecxz
outs
or
mov
push
or
dec
adc
retf
xchg
push
or
jmp
add
jmp
jge
hlt
movups
mov
add
shl
xor
hlt
and
ror
or
and
add
add
mov
es
or
xor
add
pusha
sub
push
pushf
scas
or
xor
mov
add
xor
mov
iret
and
pop
pop
sbb
inc
pop
add
or
add
or
popa
jle
retf
push
sar
in
jne
push
dec
or
loopne
bound
add
mov
add
(bad)
jg
popa
test
je
mov
mov
mov
mov
inc
add
mov
jl
inc
add
inc
addr16
mov
push
inc
(bad)
xor
enter
or
inc
cld
out
add
pop
lds
adc
push
sbb
cld
aaa
lods
imul
shl
mov
leave
and
call
(bad)
push
ja
mov
cli
cmp
in
pusha
cmp
icebp
sbb
je
je
add
add
adc
add
mov
push
mov
push
push
xor
adc
inc
and
push
jno
test
sbb
sub
add
sbb
outs
fimul
and
(bad)
pop
add
ror
retf
ret
add
jne
xor
sbb
xchg
add
push
out
mov
je
sbb
scas
pop
add
mov
jmp
push
and
mov
push
mov
add
sub
mov
sub
jp
add
xchg
movs
adc
adc
inc
and
jo
pop
outs
dec
hlt
sbb
sbb
jne
dec
repz
add
test
lds
lea
or
aad
add
inc
leave
mov
push
or
xor
pop
xchg
xchg
add
inc
shl
fdiv
loope
call
or
push
mov
sub
and
test
add
mov
xor
mov
mov
pop
mov
and
neg
dec
ins
popa
je
jle
mov
jmp
mov
pop
inc
push
add
push
cmp
cmp
fnstsw
js
adc
add
adc
sub
call
call
ins
add
cvttps2pi
scas
adc
pop
mov
inc
iret
ja
inc
or
and
adc
(bad)
cmp
shl
mov
je
add
cmp
(bad)
je
mov
add
mov
push
cmp
and
xchg
(bad)
push
push
mov
ss
dec
call
push
or
xchg
pusha
jb
mov
adc
push
out
add
inc
mov
out
out
bound
xor
mov
repz
repz
(bad)
push
push
mov
xor
push
bound
(bad)
sbb
pop
and
sub
xor
inc
xor
jecxz
or
mov
mov
mov
mov
out
or
dec
pop
mov
mov
push
cmp
not
je
mov
push
rol
push
(bad)
(bad)
fist
add
cmp
jne
mov
mov
mov
mov
jmp
add
adc
push
(bad)
mov
add
cmp
es
into
jne
mov
mov
mov
iret
shr
sub
shr
pop
xchg
inc
into
or
pop
push
push
ss
arpl
mov
mov
inc
mov
cld
mov
or
cwde
mov
ja
ret
call
in
dec
jo
and
call
add
fld
cmp
push
cmp
jne
xor
sub
(bad)
sbb
xor
push
cmp
sbb
pop
and
es
imul
push
or
shr
fist
jp
mov
loope
cld
mov
adc
retf
shl
and
or
call
shr
shl
or
cmp
je
add
lea
mov
adc
push
ins
sbb
sbb
inc
adc
mov
xor
jmp
mov
sub
call
sbb
ja
lock
adc
out
outs
(bad)
xchg
adc
sub
dec
and
add
push
lock
adc
dec
and
stos
outs
shr
(bad)
int
add
int3
mov
mov
fmul
sub
add
std
(bad)
call
test
jne
xor
jmp
xchg
sub
mov
imul
sar
out
add
sbb
and
or
adc
and
cmc
add
sub
adc
std
cmps
mov
add
jmp
(bad)
and
cmp
jae
mov
pop
lea
push
lea
dec
add
or
lods
xor
test
jbe
clc
(bad)
in
cmp
jne
push
ror
ret
es
or
mov
shl
enter
aaa
push
shr
shl
or
mov
mov
mov
(bad)
(bad)
fisttp
sbb
dec
sub
stc
test
jne
or
jmp
lea
sub
lea
push
jo
sbb
aaa
push
rcr
jg
inc
adc
fmul
sbb
jle
dec
and
cmp
out
add
inc
or
or
clc
add
ret
fptan
mov
sbb
ret
or
fist
je
xor
inc
or
add
shr
mov
inc
or
xor
mov
mov
add
jmp
jbe
mov
add
or
xor
sbb
jg
sbb
pop
sbb
pop
neg
pop
xchg
mov
je
call
jecxz
adc
inc
sbb
cmp
sub
pushf
mov
jmp
mov
pop
cmp
cmc
inc
popf
or
jecxz
aad
sub
(bad)
or
inc
leave
xor
mov
push
push
mov
test
cmc
cmp
jne
cmp
je
mov
mov
jne
inc
(bad)
cmp
mov
je
cmp
retf
jge
mov
pop
arpl
sub
mov
pop
dec
mov
sbb
fsub
std
pop
adc
jne
mov
je
outs
mov
mov
mov
pop
mov
and
jg
test
jle
cmp
mov
je
sub
pop
cmp
je
push
jmp
pusha
pop
or
pop
and
mov
and
mov
and
mov
ret
and
ins
ja
test
pop
(bad)
or
(bad)
pop
(bad)
jg
mov
mov
xor
cmp
jne
popa
call
inc
jmp
test
fwait
test
in
dec
or
push
pusha
mov
adc
aas
fdivrp
mov
mov
or
pop
push
add
push
add
adc
(bad)
mov
arpl
je
dec
inc
sbb
add
(bad)
sbb
call
mov
pusha
and
(bad)
jg
push
add
adc
test
mov
je
lea
pop
lds
add
inc
jmp
or
sahf
mov
or
test
je
cmp
je
xor
add
push
add
add
or
imul
test
or
je
mov
lock
push
mov
(bad)
daa
mov
or
mov
std
das
je
push
lea
lods
inc
push
or
jnp
clc
cwde
jne
jnp
or
lods
cmp
loopne
ret
cmp
je
cmp
out
dec
cmp
test
ja
je
in
stos
push
dec
mov
jmp
(bad)
out
pop
ja
cdq
mov
jo
mov
fdiv
add
pop
cli
jae
test
arpl
test
cli
pop
out
leave
inc
adc
jae
and
sub
mov
bound
inc
inc
jns
test
out
pop
push
lea
add
lods
clc
and
push
mov
je
push
and
out
pop
xchg
adc
punpcklwd
jne
jmp
or
push
add
push
jo
(bad)
add
or
(bad)
sbb
cmp
add
push
sar
jmp
and
outs
loopne
sbb
add
inc
or
push
push
pop
add
mov
pop
mov
push
lock
or
pop
scas
add
shr
sar
ror
test
add
add
ror
mov
test
pop
mov
(bad)
jg
mov
mov
and
mov
cmp
mov
add
test
xlat
cmp
fild
mov
mov
mov
retf
cmp
je
mov
sub
xchg
sbb
inc
or
(bad)
(bad)
jg
add
push
mov
and
cmp
je
mov
cmp
mov
fidivr
mov
mov
add
cmp
shr
ror
je
out
sbb
ret
jne
sub
jge
clc
or
cmp
je
cmc
cmp
je
test
out
ret
cmp
or
lea
mov
sbb
jb
lds
sub
test
clc
sbb
push
(bad)
(bad)
dec
loope
mov
repnz
fcomp
mov
mov
test
jbe
mov
jg
ret
mov
retf
add
mov
mov
mov
fstp
or
sbb
or
shl
mov
(bad)
jne
mov
or
mov
jmp
xchg
mov
push
push
mov
fldenv
mov
aaa
fiadd
sub
mov
je
cmp
aas
pop
fmul
inc
jne
lea
sub
int
(bad)
xor
and
ror
adc
ret
push
mov
push
push
push
test
je
jg
mov
ror
add
inc
or
enter
idiv
fcomip
int
in
xor
mov
and
shl
or
test
jne
arpl
push
imul
cmp
push
mov
ror
inc
(bad)
mov
add
enter
ret
jg
mov
mov
mov
mov
sub
sar
inc
cmp
jbe
cmp
je
pop
mov
pop
pop
mov
push
mov
sbb
add
(bad)
(bad)
jle
mov
cmp
je
mov
mov
sub
cmp
jae
(bad)
(bad)
jmp
push
xor
adc
xor
rol
ja
lea
add
loopne
div
(bad)
fwait
test
fld
add
mov
gs
mov
add
lock
push
mov
sub
push
(bad)
(bad)
jmp
dec
xor
mov
mov
mov
xor
mov
(bad)
loopne
cli
call
mov
mov
and
cmp
cwde
jnp
pop
jne
or
inc
neg
ror
inc
dec
pop
aad
cmp
push
cwde
lahf
loop
add
adc
push
cmp
je
cmp
loopne
data16
mov
bound
setge
test
xchg
aaa
fnsave
and
cmp
shr
mov
push
add
or
ret
inc
xor
daa
cmp
shl
int3
mov
lea
sbb
shl
test
xor
mov
add
mov
sbb
add
add
sbb
in
pusha
push
mov
mov
jno
fistp
sbb
retf
push
rcl
jne
ret
sbb
xor
add
adc
pushf
xlat
adc
push
mov
jne
mov
fs
cli
and
stos
mov
mov
lea
sub
sub
aad
mov
call
iret
or
rcl
and
call
xor
ret
xor
add
retf
lock
inc
cmp
jae
mov
sbb
push
sbb
cmp
sub
push
jmp
xchg
pop
iret
pop
pop
jge
mov
add
add
push
or
or
dec
rol
add
adc
rcl
and
dec
and
call
rcl
dec
dec
mov
scas
mov
mov
push
lea
in
add
shl
mov
mov
xchg
mov
in
lea
leave
fsub
add
retf
dec
and
idiv
dec
lock
mov
mov
lea
cmp
je
mov
and
jnp
push
mov
daa
or
mov
ins
mov
dec
jae
adc
sbb
pop
nop
dec
dec
aad
pop
inc
dec
lea
mov
xlat
add
add
push
ins
outs
adc
sti
enter
mov
out
test
dec
add
in
cmp
ret
ja
into
fdiv
je
push
(bad)
lea
js
cs
xor
jne
push
or
sub
pop
mov
or
inc
mov
(bad)
ror
mov
fcom
jns
pusha
ret
ror
ret
nop
sbb
fcomip
scas
pop
or
mov
pop
cmp
sbb
jbe
xor
jl
sbb
(bad)
push
push
push
clc
dec
jmp
cmp
cmp
cmp
pop
xor
inc
sbb
mov
mov
inc
mov
rcr
sbb
jae
jle
add
pop
imul
cmp
je
and
mov
jne
repnz
add
loopne
nop
mov
pop
push
fistp
repnz
push
cmp
jne
sti
popf
mov
mov
push
call
and
jle
xor
xchg
mov
add
mov
mov
jno
je
clc
add
xlat
je
jl
mov
xchg
add
add
jns
nop
xchg
inc
push
and
mov
adc
sbb
xor
jl
stos
in
or
daa
or
mov
add
jne
mov
shl
push
dec
nop
fmul
fdivr
lods
nop
mov
and
mov
call
inc
aam
fdivr
jo
mov
dec
mov
push
push
test
test
push
mov
mov
mov
and
add
jne
jmp
pop
add
jne
sets
out
shr
out
or
mov
(bad)
dec
addr16
sub
shr
add
mov
shr
mov
mov
or
mov
pop
pop
jne
xor
inc
cmp
into
inc
sbb
mov
inc
inc
repz
mov
inc
and
adc
loope
or
push
mov
push
push
sti
mov
adc
jl
pop
(bad)
lds
sbb
sti
mov
test
aaa
add
cwde
or
mov
mov
ja
jmp
rol
mov
gs
or
jge
ret
or
sbb
adc
jmp
sub
jo
mov
mov
add
push
push
call
dec
iret
xor
not
nop
inc
dec
push
add
jb
push
fadd
mov
fild
add
mov
xor
or
daa
add
mov
jne
ret
mov
or
iret
sub
jmp
inc
(bad)
mov
(bad)
cmp
outs
add
mov
sub
jp
add
inc
xchg
aad
and
fdivr
ja
test
je
mov
xor
into
and
cmp
sahf
cmp
mov
jb
mov
nop
shr
adc
fsubrp
xchg
adc
and
jmp
lea
test
outs
loop
mov
or
shl
push
cdq
mov
and
sbb
sbb
xchg
sbb
adc
push
(bad)
push
mov
rep
mov
add
add
sbb
test
mov
jbe
mov
push
add
(bad)
les
clc
es
jne
mov
out
mov
dec
ins
mov
lea
(bad)
cmp
adc
ret
scas
dec
and
sub
add
test
je
cmp
jae
in
lock
cmp
cmp
jne
scas
jecxz
jo
jg
cmps
mov
push
aaa
mov
add
pop
and
sbb
ja
add
lea
pop
push
or
mov
mov
test
or
aaa
xor
into
cmp
sbb
cmp
ror
repz
xor
shr
sar
repnz
inc
sbb
in
ds
sbb
cmp
leave
pop
or
pop
(bad)
adc
shr
mov
push
mov
je
or
inc
dec
mov
push
or
push
sbb
adc
mov
push
xor
cmp
rep
jne
call
retf
adc
call
pop
test
jbe
add
inc
xor
lock
mov
fsub
lods
fcom
xchg
ins
push
fbstp
mov
sub
cmp
je
sub
sub
jno
jle
arpl
cmp
jne
ja
lea
cwde
sbb
mov
add
xlat
pop
cmp
lahf
or
sar
or
push
sbb
cmp
scas
arpl
pop
pop
pop
pop
movs
pop
or
jbe
cmp
sub
jp
outs
mov
fnstenv
call
aam
mov
push
pop
ret
or
adc
test
outs
pop
sub
daa
push
sbb
xor
cmp
dec
inc
cmp
or
add
test
xor
jno
ja
inc
inc
xchg
or
add
call
ins
xchg
add
add
mov
or
ja
outs
mov
push
ja
or
cs
jl
and
aaa
sbb
push
dec
pop
dec
(bad)
jg
clc
xlat
loopne
jg
aad
jo
push
cmp
inc
inc
call
mov
cmp
jg
and
mov
sub
pop
dec
add
xor
pop
mov
add
mov
call
dec
dec
test
dec
adc
retf
sub
inc
jns
mov
adc
adc
or
lea
lods
pusha
xor
ret
ror
mov
xor
adc
pushf
cmp
out
pop
or
sub
sub
push
sbb
or
mov
dec
cs
inc
or
rcl
or
sbb
movs
dec
dec
dec
sub
mov
pop
ret
je
popa
fadd
iret
xchg
or
fistp
clc
push
sbb
sub
sub
sub
mov
stc
lea
mov
aaa
movs
mov
outs
mov
int
dec
jg
idiv
or
nop
jg
sub
dec
add
or
shl
jmp
inc
jo
rcr
rcr
fmul
jbe
xchg
cmp
aas
push
fld
push
(bad)
rcl
sbb
inc
or
add
dec
fist
clc
or
xor
out
adc
outs
or
mov
or
mov
inc
add
mov
add
jmp
popa
out
sbb
rcr
push
cmp
js
xchg
xor
xor
adc
push
or
(bad)
shr
add
add
bound
cwde
icebp
push
call
inc
aas
adc
push
push
sbb
or
push
push
push
dec
and
push
push
jo
mov
test
jne
in
push
cmp
jge
mov
test
mov
or
je
mov
sbb
pop
sar
inc
mov
add
pushf
dec
cmp
add
inc
jne
jle
jle
or
sub
push
push
in
mov
call
jmp
xchg
inc
and
push
sub
xor
add
add
adc
fnstenv
adc
and
cmp
inc
sub
addr16
(bad)
fistp
cmp
push
jne
mov
mov
call
mov
add
inc
push
(bad)
enter
call
ja
inc
add
add
add
mov
add
and
ds
loopne
mov
hlt
mov
mov
ds
add
or
push
push
xor
cld
or
sub
or
adc
xchg
adc
push
and
stos
mov
das
fdivr
dec
jmp
pop
adc
push
push
add
xchg
sub
cmp
dec
sub
sbb
scas
push
push
add
pop
daa
inc
imul
push
loopne
pop
xor
ins
cmc
ret
add
inc
inc
sub
dec
test
jle
or
mov
daa
mov
out
int3
mov
stos
lea
and
mov
adc
call
xchg
out
clc
cmp
jne
adc
and
add
push
sbb
sbb
call
dec
add
adc
imul
pop
nop
inc
adc
push
add
mov
push
lea
lahf
aam
je
sub
adc
push
push
push
mov
dec
pop
stos
sub
(bad)
mov
lea
add
jo
inc
or
jo
pusha
jecxz
fld
sub
adc
pusha
add
into
aas
jo
cmps
push
sub
or
cmp
jne
push
cli
xchg
popa
mov
inc
and
or
or
mov
xor
mov
cmp
je
test
add
ficomp
fdiv
add
inc
cld
sti
push
push
lea
xor
dec
dec
jmp
(bad)
push
push
lea
push
test
lock
mov
dec
mov
push
mov
call
in
loop
call
cli
push
pusha
mov
dec
and
into
in
(bad)
add
push
(bad)
mov
lock
pop
jl
pop
or
inc
mov
push
cmp
cmp
and
loop
dec
sbb
sbb
call
and
sbb
push
sbb
clc
jg
adc
jle
mov
cmp
je
inc
jbe
mov
hlt
jmp
mov
mov
mov
push
mov
mov
call
mov
popf
adc
add
add
lods
ret
arpl
pop
test
add
lahf
xchg
add
add
xor
add
in
aas
sbb
push
ja
movs
loopne
xor
mov
sub
faddp
push
inc
ret
push
inc
inc
pop
cmps
test
pop
fcmove
dec
inc
jo
jmp
test
push
mov
jmp
push
jb
xchg
jmp
add
lods
test
mov
pop
adc
int3
das
mov
mov
mov
ja
sbb
sar
inc
mov
mov
push
or
dec
sbb
dec
(bad)
fidivr
lock
dec
out
sbb
inc
cld
push
add
jge
inc
dec
mov
add
mov
add
mov
sti
mov
mov
push
mov
push
adc
dec
enter
(bad)
or
mov
jmp
mov
add
fist
dec
in
inc
fdivr
inc
aam
lea
pop
dec
les
sub
mov
dec
mov
arpl
(bad)
mov
mov
jge
or
xchg
xchg
mov
jmp
push
popf
add
in
jg
adc
xchg
cmc
sub
nop
add
jge
add
add
or
inc
or
jb
add
and
leave
inc
pusha
push
dec
push
inc
repnz
cmp
push
sub
retf
(bad)
cs
mov
mov
push
sbb
icebp
pop
xor
ficom
icebp
fidivr
add
add
inc
sbb
xchg
dec
mov
xor
mov
sbb
mov
lea
out
inc
add
and
xor
push
rcl
std
add
je
add
push
shl
push
xor
mov
or
push
(bad)
mov
stos
mov
push
mov
push
mov
cmc
jg
cmps
lea
cmp
jne
cmp
jnp
mov
jg
jmp
mov
mov
mov
dec
pop
add
ret
shl
push
push
not
iret
and
enter
adc
das
inc
ss
mov
jmp
inc
push
and
add
ds
adc
push
jmp
cmp
cmp
add
cmp
adc
dec
inc
cmp
mov
test
mov
fild
mov
mov
pop
mov
xor
loopne
jb
out
add
mov
push
test
and
adc
add
add
test
mov
sbb
adc
loop
dec
push
test
mov
je
add
je
mov
sub
dec
je
mov
mov
cmps
jmp
jl
dec
push
lock
lea
xor
push
test
jle
cmps
and
ja
je
or
xor
add
mov
enter
nop
nop
pop
mov
cmp
aam
pop
aad
pop
add
dec
ds
ja
sub
push
add
mov
push
cmp
fisttp
test
jl
stos
or
pusha
call
or
sub
add
int3
mov
das
adc
jmp
in
lock
repz
or
or
pop
mov
xchg
add
leave
jl
dec
jg
shl
mov
cmp
jl
adc
mov
mov
test
jge
xor
mov
mov
adc
push
rcl
add
adc
dec
hlt
dec
popa
jo
sub
arpl
(bad)
jl
adc
inc
cmp
and
push
push
xor
sti
es
int3
adc
adc
push
lahf
or
dec
push
fnsave
push
mov
cmps
add
into
push
add
inc
add
sbb
pusha
or
rol
fdivr
or
mov
push
push
push
or
(bad)
out
cmp
lods
mov
cmp
and
and
adc
add
adc
push
adc
mov
into
lea
add
adc
adc
mov
sbb
fs
jbe
mov
in
push
stc
fisttp
add
mov
adc
or
cmp
bound
ins
mov
mov
push
push
push
call
mov
mov
push
pop
dec
dec
in
push
xor
push
call
rcl
sbb
pop
dec
or
mov
stos
imul
push
and
lock
test
call
push
cld
mov
clts
xchg
add
je
pusha
push
or
push
mov
cmp
and
ret
and
mov
or
mov
cmp
pop
je
mov
mov
push
inc
in
mov
inc
popa
sub
fmul
sbb
mov
dec
and
dec
pop
jae
cmps
mov
(bad)
cmp
add
mov
add
mov
fcom
sbb
sbb
adc
push
push
out
fbstp
sar
icebp
cmpxchg
inc
sbb
icebp
je
mov
and
into
call
pop
xchg
add
in
rcl
mov
adc
sub
mov
in
adc
push
and
or
pop
mov
cdq
std
cmp
lods
mov
mov
push
push
push
sbb
call
mov
or
jecxz
shl
adc
sub
add
dec
popf
dec
sbb
call
push
shl
jne
push
push
push
out
add
push
movs
add
ret
in
add
fild
mov
sub
sbb
das
pop
js
cld
dec
adc
daa
ret
adc
cmps
or
inc
inc
dec
or
les
inc
pop
jno
pop
sbb
dec
test
sbb
sbb
fiadd
jns
sbb
mov
xor
add
test
movs
popa
(bad)
or
outs
inc
push
sahf
xor
adc
aad
lea
cdq
enter
inc
rol
pop
add
xchg
cmp
icebp
inc
push
push
push
xchg
mov
inc
pop
or
xchg
ja
jno
jp
aas
ret
push
add
pop
cmp
pop
adc
xlat
push
mov
mov
lods
cmp
or
pop
inc
xor
ret
and
ror
outs
lock
arpl
ficom
mov
cli
test
js
les
loopne
jge
test
jl
cmp
jg
gs
test
jl
sub
clc
jg
lea
add
or
adc
push
popf
and
and
add
call
mov
push
push
cmps
pop
rol
push
xchg
mov
ror
(bad)
out
cmp
push
or
push
push
mov
je
sbb
xor
push
cs
xor
ret
jne
add
jle
hlt
sub
arpl
or
mov
lea
mov
lea
push
mov
push
mov
arpl
lea
fwait
mov
mov
pop
cld
mov
add
mov
sub
pop
and
push
in
mov
inc
cmp
mov
inc
or
call
cmp
jne
mov
mov
or
inc
ror
mov
lea
mov
mov
push
mov
jb
and
push
sub
or
sbb
push
jl
dec
pop
mov
push
mov
test
sbb
push
cdq
stc
inc
call
pop
dec
inc
push
add
inc
fwait
repnz
adc
inc
sub
mov
add
inc
sbb
aaa
je
or
loop
sbb
test
mov
out
xchg
fdiv
sbb
push
lea
into
lock
call
adc
jg
sti
add
shl
icebp
ins
xor
int
inc
pop
in
or
push
mov
push
push
into
in
xor
and
dec
retf
pop
cld
or
xor
pop
or
jmp
out
aaa
cld
retf
pop
adc
js
aaa
push
inc
or
hlt
clc
ja
pushf
mov
mov
test
je
inc
aad
mov
mov
or
or
inc
add
pop
add
lods
test
sbb
pushf
push
push
sbb
and
(bad)
inc
clc
jle
jmp
dec
jmp
inc
cmp
jle
mov
pop
mov
lock
or
mov
mov
enter
call
or
cld
fistp
add
sub
jmp
dec
inc
or
jle
jle
jae
loopne
movs
std
dec
mov
dec
ror
sub
mov
popf
stos
lods
add
add
sbb
xchg
add
add
sbb
inc
test
lods
add
or
int3
add
dec
popf
sub
test
add
add
and
xor
scas
fild
push
les
mov
mov
dec
jnp
adc
bound
and
adc
cwde
cmp
nop
ror
adc
ret
pop
jb
pusha
adc
pop
adc
sbb
adc
push
daa
add
out
adc
dec
pop
xor
ja
add
add
(bad)
enter
xchg
mov
push
xor
cmp
sbb
bound
and
dec
mov
cmp
adc
daa
out
or
or
or
inc
adc
cwde
mov
adc
or
adc
iret
sbb
mov
pusha
xchg
and
sbb
add
daa
out
cwde
adc
pop
jp
inc
xlat
sbb
jnp
adc
daa
adc
push
push
sahf
rcl
outs
mov
enter
and
rcl
add
jns
pop
in
push
pop
jo
jecxz
inc
loop
lea
fadd
pusha
movs
jne
cmp
js
add
out
or
xor
xor
(bad)
ffreep
mov
and
das
adc
xor
mov
mov
arpl
sub
enter
xor
adc
sbb
(bad)
out
sub
dec
xor
adc
push
mov
xor
adc
ss
or
adc
and
sbb
and
loope
fiadd
and
fs
and
outs
adc
(bad)
pop
sub
and
inc
inc
sar
fadd
xor
daa
(bad)
aaa
pusha
(bad)
out
xor
or
xor
(bad)
sbb
adc
sbb
test
movs
mov
mov
ret
cwde
test
es
mov
add
mov
lock
lods
and
inc
aad
sti
iret
and
std
cmc
or
mov
je
and
test
cmp
jbe
mov
sub
jge
mov
pop
out
jne
jns
shl
push
add
jno
mov
in
stos
test
pop
ins
dec
xlat
test
imul
pusha
mov
lods
ja
das
popa
mov
sar
minps
pop
sub
lock
pop
ds
mov
push
mov
js
icebp
pop
ror
adc
pop
lahf
das
dec
(bad)
or
(bad)
xlat
out
or
mov
les
clc
add
pusha
cmp
in
jnp
and
(bad)
jae
(bad)
cmp
mov
xor
scas
rdtsc
pop
out
add
wrmsr
icebp
pusha
push
xor
pop
jp
cmp
jae
push
pop
add
outs
iret
loopne
cli
jne
xor
ret
inc
pusha
pop
nop
push
shr
or
adc
mov
pusha
mov
fidiv
into
or
push
push
aad
sbb
or
add
retf
cmc
aad
js
cmp
stos
xor
enter
iret
lock
loopne
sahf
push
or
push
int3
mov
rcl
(bad)
dec
push
imul
ret
push
ror
add
enter
dec
adc
mov
and
sar
sub
dec
in
dec
add
and
(bad)
(bad)
pushf
xor
cmc
idiv
lea
push
retf
add
inc
xchg
out
and
xor
adc
adc
inc
push
xor
pushf
adc
sbb
and
je
pushf
mov
mov
push
push
push
push
push
sbb
test
add
push
mov
adc
sub
std
or
je
push
pusha
or
mov
inc
mov
xor
jl
and
push
push
gs
push
out
sub
jne
pop
add
adc
(bad)
add
push
inc
jne
mov
lds
mov
retf
pop
pop
ja
and
xchg
je
add
call
call
cmp
jne
test
mov
inc
into
and
aaa
xor
fnstcw
sub
and
dec
adc
and
adc
pusha
jl
cmp
cli
mov
xlat
mov
cmp
lea
fstp
xchg
adc
mul
pushf
arpl
sti
add
pop
xchg
or
mov
pop
adc
je
mov
push
push
sbb
pop
jmp
push
or
xor
add
call
adc
call
mov
mov
mov
mov
jmp
data16
mov
push
mov
or
mov
sbb
mov
lods
cs
cdq
mov
adc
mov
push
and
mov
push
push
push
call
push
push
repnz
add
shl
sub
jo
test
sub
test
(bad)
movs
sub
or
and
sbb
std
iret
sbb
cli
sub
push
mov
or
mov
push
or
dec
or
call
add
push
call
adc
mov
call
mov
test
jle
sbb
add
mov
clc
inc
cmp
jl
pusha
push
push
ja
push
mov
push
stc
(bad)
jne
inc
add
mov
push
push
push
call
outs
mov
adc
mov
or
(bad)
sbb
loopne
cdq
idiv
push
mov
mov
fdivr
sbb
pop
call
mov
xor
test
jle
adc
add
call
lock
cmp
(bad)
push
add
mov
lea
cmp
jle
mov
mov
test
jg
out
dec
std
(bad)
jne
adc
adc
enter
ror
call
stc
adc
add
or
push
(bad)
or
sub
pop
cmp
cmps
out
fwait
jo
jge
cmp
jg
or
mov
mov
push
adc
add
scas
sar
mov
jae
(bad)
(bad)
mov
cmp
jge
jmp
cmp
jge
inc
jmp
jg
add
mov
inc
cmp
jle
mov
mov
sub
js
mov
pop
cmp
jne
mov
pop
jmp
pop
cmp
jge
(bad)
mov
or
lahf
je
pop
xor
jmp
push
adc
mov
and
mov
sub
cmp
jl
(bad)
and
out
pop
adc
mov
mov
rcl
jmp
mov
jne
mov
xor
(bad)
adc
ficomp
dec
push
cld
jle
dec
cmp
jl
pop
jmp
xor
daa
loopne
adc
addr16
add
mov
cmp
mov
push
pop
psrlq
fild
sub
outs
sub
pop
aaa
fsubr
inc
cmp
(bad)
pop
add
mov
jnp
sub
or
and
push
sbb
jmp
jmp
ret
push
cmps
xor
sub
and
jne
lea
test
xchg
add
test
xchg
fist
add
test
inc
jae
out
(bad)
mov
mov
push
sbb
jne
aaa
adc
inc
pushf
dec
and
add
mov
push
pop
sub
lods
xor
fwait
add
cld
push
add
lea
shl
dec
adc
add
loop
inc
and
fnstcw
mov
cdq
mov
inc
fmul
jmp
push
int3
icebp
lea
ret
(bad)
fsubr
(bad)
push
and
mov
lea
shl
sbb
in
rcr
outs
push
mov
push
lock
pusha
mov
mov
cdq
cmp
mov
lea
sbb
aaa
inc
mov
add
sbb
daa
pop
inc
or
cld
(bad)
push
pop
jle
jno
mov
push
test
add
loopne
sub
inc
ret
mov
cmp
es
xchg
add
pop
push
push
push
mov
mov
js
iret
je
out
sldt
aas
test
cmp
aaa
cld
mov
mov
mov
cmp
mov
cmp
cmp
inc
dec
js
adc
jae
(bad)
jge
jmp
and
jle
mov
pop
lea
push
push
jp
adc
mov
xchg
jnp
jne
add
add
repnz
(bad)
je
push
push
cmps
pop
adc
jl
int3
nop
mov
xchg
dec
inc
push
mov
call
ds
sub
mov
push
add
clc
out
sbb
push
mov
je
mov
jle
mov
xor
cmp
jne
cmp
je
ret
adc
popf
ja
stos
sbb
mov
mov
ret
xchg
popa
call
and
cmps
mov
rol
add
ja
mov
cmp
jg
adc
add
or
mov
retf
mov
push
cmp
ins
out
mul
dec
add
xor
mov
push
adc
xchg
jno
cmc
jg
bound
imul
or
jb
out
xchg
cmc
inc
or
push
mov
mov
jbe
add
je
(bad)
fcomp
jl
push
and
mov
call
jno
loope
adc
push
pop
inc
mov
in
sbb
add
inc
scas
or
sub
push
mov
adc
mov
mov
(bad)
push
rol
fsubr
xlat
jae
push
fs
add
add
add
xchg
test
std
xchg
ret
lds
std
test
push
push
push
icebp
push
cmp
js
add
call
ror
popa
lea
call
mov
mov
mov
jns
(bad)
jle
mov
or
jle
jle
push
(bad)
mov
sub
jle
mov
mov
(bad)
pop
cwde
jecxz
inc
pop
push
or
mov
ja
inc
std
cmp
jl
cmp
push
test
rcr
ret
adc
mov
push
cwde
clc
dec
cmp
jge
mov
push
and
mov
test
je
test
adc
inc
fst
inc
push
add
push
inc
or
dec
adc
adc
push
adc
inc
sub
inc
sub
idiv
fwait
add
mov
lea
lea
push
mov
mov
aaa
add
push
sub
(bad)
fistp
mov
mov
mov
mov
lea
lea
sub
sti
inc
icebp
push
loop
mov
and
and
cmp
gs
add
fsub
dec
push
mov
push
mov
mov
mov
mov
mov
mov
pop
(bad)
ds
pop
lea
add
jb
or
or
or
sbb
adc
outs
add
and
mov
mov
sbb
(bad)
mov
add
dec
xor
cmp
pop
mov
sub
cmp
pop
popa
add
lock
inc
(bad)
aas
xor
xor
div
inc
in
and
cmp
add
pop
sbb
add
je
mov
or
aaa
nop
jmp
sub
fistp
adc
mov
fimul
add
push
das
add
pop
cmps
add
pop
lahf
inc
adc
dec
and
xchg
pop
mov
sti
(bad)
sti
inc
movsx
mov
ror
cld
fild
push
xor
fstp
shl
je
std
call
cmp
jne
cmp
jne
test
pop
je
pop
imul
call
mov
call
js
add
xor
sub
add
inc
cmp
je
cmp
jne
pop
imul
jmp
mov
push
test
std
jne
mov
fdiv
aas
add
add
dec
add
jo
push
imul
or
(bad)
int
sbb
dec
sub
sub
xchg
mov
add
div
fsubr
xor
xor
ds
(bad)
sbb
in
push
sbb
frstor
mov
and
push
jbe
add
adc
inc
inc
mov
fwait
or
xor
bound
xor
(bad)
ja
jmp
push
mov
cwde
jae
xor
adc
sub
sbb
add
lock
adc
sbb
cmps
mov
je
mov
inc
adc
mov
push
add
pop
sbb
lds
adc
inc
adc
sub
(bad)
jl
lahf
jae
inc
test
sub
or
inc
adc
(bad)
dec
dec
or
test
mov
add
mov
imul
gs
sbb
push
dec
inc
cmp
mov
fild
call
sub
and
add
inc
jle
cwde
jbe
(bad)
aas
inc
xor
cdq
loope
jae
inc
inc
cmp
loop
cmp
mov
gs
xor
cmp
out
adc
test
cmp
dec
mov
cmp
add
cwde
test
xor
das
test
mov
fbld
fs
inc
cmp
outs
mov
cs
push
and
shl
inc
xchg
push
int
imul
inc
(bad)
inc
sub
dec
cmp
mov
jbe
cld
ret
(bad)
fadd
les
and
rcl
and
or
add
mov
fdivr
sbb
(bad)
jmp
add
test
jle
push
or
pop
cmc
mov
push
adc
imul
lahf
enter
in
dec
jp
int3
loop
xchg
or
mov
push
jmp
push
inc
test
cwde
mov
mov
movs
call
sar
sbb
cli
out
ret
pop
jecxz
popf
call
in
inc
cwde
mov
and
jp
push
inc
and
test
mov
je
ja
push
cmps
js
add
sbb
fisttp
mov
mov
call
or
call
sub
xchg
add
fsubp
je
xor
das
ins
add
adc
cmp
jg
cmp
jle
push
mov
out
jmp
je
cmc
jle
mov
sub
push
push
mov
call
jne
push
push
jbe
fwait
psubusb
fcom
push
jl
test
and
shr
xchg
inc
and
xor
cmp
add
aaa
xchg
pop
mov
jle
and
and
pusha
and
sar
fadd
loopne
pop
and
sub
mov
fs
add
iret
inc
push
lock
push
lods
mov
and
jbe
(bad)
inc
add
shl
pop
mov
jge
or
(bad)
outs
or
mov
iret
push
adc
scas
test
push
out
adc
inc
mov
jl
xor
xor
jb
das
test
retf
je
mov
ror
data16
jecxz
add
sub
or
add
test
stc
push
xchg
and
rcl
aam
pop
mov
dec
push
cld
mov
mov
dec
daa
pop
jmp
in
xor
adc
mov
mov
(bad)
in
push
data16
mov
mov
call
push
and
lock
rcr
add
xor
test
jle
jmp
sbb
mov
or
adc
push
push
mov
call
icebp
adc
or
(bad)
jmp
push
adc
aaa
adc
dec
pop
nop
ins
inc
cmp
jl
xchg
cmp
add
jl
adc
push
push
inc
adc
lock
sbb
dec
add
dec
addr16
and
sbb
smsw
cli
xchg
push
call
and
and
fistp
push
cmp
push
pop
jo
(bad)
out
and
cmp
jne
cmp
xor
add
sub
(bad)
jne
push
push
sbb
push
and
imul
and
jmp
add
add
pop
inc
or
and
adc
pop
or
mov
push
in
add
xor
loope
sbb
and
jmp
add
adc
ret
mov
pusha
cmp
add
call
adc
mov
sti
sbb
ror
mov
pop
dec
ds
mov
mov
or
sub
pop
jmp
jb
adc
and
fcom
stos
dec
xor
arpl
cmp
leave
mov
sub
and
je
add
pop
arpl
rol
int3
pop
push
lds
jmp
aaa
mov
push
les
icebp
mov
dec
inc
mov
adc
xchg
call
add
fadd
sub
lea
adc
arpl
jcxz
add
or
sub
fwait
and
pop
dec
fild
ja
sbb
mov
in
fs
add
push
cli
sub
inc
inc
add
out
clc
pop
mov
ror
mov
mov
retf
xor
add
adc
and
cmps
shl
and
mov
es
xor
cmps
call
push
xor
cmp
je
icebp
push
inc
mov
or
jl
ror
das
jnp
and
sbb
or
xor
out
ss
stc
je
push
jne
adc
lahf
or
repnz
sahf
pop
ja
sub
clc
xor
inc
fwait
push
sbb
loopne
mov
test
add
inc
xchg
sbb
push
and
cmp
xor
xchg
mov
adc
dec
test
mov
pop
push
in
sub
test
sub
cmp
shl
adc
add
add
retf
xor
leave
push
cmc
or
arpl
das
jl
sbb
test
or
mov
cmp
call
push
(bad)
lea
add
cmp
das
xchg
jo
xor
adc
mov
das
mov
inc
ins
or
mov
inc
ins
cmp
dec
popa
xchg
aad
mov
cmp
je
push
shr
pop
mov
ja
or
cmp
push
jne
sbb
add
(bad)
mov
push
pop
mov
push
push
adc
pop
fnsetpm(287
pusha
mov
pop
inc
scas
inc
aad
call
mov
hlt
push
sbb
adc
add
add
jecxz
mov
dec
pusha
or
adc
jns
mov
les
leave
movs
test
rep
add
mov
stc
mov
adc
mov
or
add
jmp
out
pop
and
repz
popf
mov
ss
inc
inc
ja
push
dec
and
rol
cwd
jo
mov
cmp
dec
mov
mov
test
mov
push
dec
inc
inc
out
adc
xor
add
pop
addr16
imul
add
jnp
stos
(bad)
stos
popa
mov
mov
jae
call
fst
fild
sub
rol
inc
sbb
adc
cmp
pop
sub
cmp
jl
and
pop
add
(bad)
pop
adc
mov
cwde
in
shr
push
mov
or
xlat
cmp
lahf
mov
sub
push
push
loopne
cli
movs
add
sbb
adc
push
pushf
adc
ret
or
gs
in
mov
inc
xchg
sub
xchg
(bad)
in
or
or
clc
jl
cmp
sbb
mov
cmp
aas
inc
cs
xor
mov
add
sbb
mov
dec
add
imul
mov
test
mov
push
dec
mov
fistp
add
fcomp
adc
inc
xor
lar
mov
push
push
mov
or
fisttp
inc
push
xchg
and
test
jne
cmp
push
pop
sub
push
push
push
ins
jecxz
inc
and
loopne
push
mov
out
je
cmp
xor
cmp
sub
dec
jns
and
and
sbb
xchg
sbb
stos
mov
add
cmp
clc
and
add
lock
cmp
mov
jl
sub
jne
jge
add
std
jge
cmp
je
xchg
nop
mov
data16
mov
fidiv
and
cmp
fs
jns
adc
sbb
mov
and
sub
stos
mov
xchg
mov
add
xchg
dec
push
add
xor
push
add
pop
push
or
aad
int3
sub
inc
cmp
mov
adc
test
shr
xor
push
adc
outs
mov
or
dec
mov
mov
jns
je
xor
icebp
add
mov
lahf
push
int3
jle
cmps
int
cmp
sbb
mov
into
and
gs
mov
adc
in
add
mov
into
adc
sub
mov
mov
mov
enter
popa
int3
js
test
sbb
add
je
jb
and
add
pop
(bad)
push
push
add
jno
mov
call
scas
lea
or
sub
loopne
clc
jb
sbb
cmp
push
push
and
pop
push
jmp
and
sbb
adc
repnz
pop
nop
rol
aas
mov
mov
mov
in
xchg
and
scas
mov
(bad)
jle
or
xor
lods
mov
jno
iret
nop
(bad)
fdiv
mov
jmp
inc
sbb
xlat
inc
sbb
push
imul
mov
fwait
and
loope
fwait
adc
mov
add
or
adc
push
dec
and
call
push
mov
add
(bad)
cmp
ret
xor
and
(bad)
jae
stc
and
push
xchg
test
push
add
cmp
push
sti
popf
test
cmp
cmp
sbb
adc
sub
adc
sub
mov
mov
test
jl
mov
mov
add
add
xlat
lahf
lock
in
daa
lahf
xchg
and
push
add
iret
lock
push
arpl
loope
arpl
sub
out
inc
mov
sbb
xor
sbb
push
mov
loop
loope
ss
xadd
push
call
mov
ror
neg
pop
dec
mov
popf
mov
ins
push
push
sti
cmp
push
cs
and
sub
cmp
adc
mov
inc
sbb
test
test
pushf
sbb
test
test
dec
mov
xor
push
out
sahf
jae
pop
pop
outs
sub
pop
and
mov
retf
popa
add
cli
xchg
fucomp
sbb
fbld
fcomp
pop
out
or
mov
add
(bad)
pop
pop
mov
mov
call
mov
and
sub
arpl
sbb
fsub
bound
cmp
shl
mov
inc
push
scas
rcl
or
sahf
ret
and
or
inc
in
push
aam
xor
stos
popf
loope
hlt
inc
add
js
mov
ret
scas
rcl
cmp
sbb
push
sbb
sbb
addr16
push
push
add
add
repz
add
addr16
mov
pop
adc
test
add
sar
jl
push
test
loop
add
add
add
pop
mov
int3
xor
sub
(bad)
ss
adc
cmp
jne
add
aad
mov
push
inc
dec
cmp
ja
in
addr16
cmp
jne
xor
push
dec
cmp
ins
push
push
sbb
mov
and
mov
add
and
sbb
pop
inc
mov
xchg
arpl
jne
and
imul
loope
imul
test
pop
aad
ja
lds
inc
cmp
jg
cmp
out
enter
mov
xor
cmp
jle
adc
loop
int
ins
push
shl
mov
dec
in
xor
fdivr
inc
scas
sbb
inc
add
outs
and
adc
jmp
adc
ins
and
push
push
push
int3
sub
and
sub
and
lods
int
push
and
ror
mov
and
or
sbb
aas
pop
rcl
and
inc
push
and
adc
add
sbb
pop
idiv
dec
mov
pop
pop
js
pop
arpl
call
xchg
add
jbe
pop
in
adc
sbb
cmp
ret
inc
push
ror
shl
pop
sbb
cmp
mov
xchg
clc
and
sub
xor
sub
js
cmp
sub
add
add
inc
out
(bad)
sbb
and
jg
jl
or
adc
clc
aas
and
or
xchg
loope
aam
sub
add
add
jo
mov
xadd
and
pop
ret
add
and
push
sbb
push
xlat
ss
fmul
push
mov
and
stos
or
jp
stos
dec
iret
in
ror
push
leave
push
sbb
xor
call
shl
xchg
loope
test
cmp
sbb
test
(bad)
cmp
add
loop
out
mov
pop
and
xchg
or
add
int3
cld
cmp
icebp
test
dec
push
call
adc
mov
ss
test
and
call
ror
cmp
jns
jl
xor
in
inc
cmp
adc
test
pop
inc
ret
add
mov
test
add
popf
or
je
push
cmp
test
fisub
push
xchg
fdivr
fsubp
xchg
mov
mov
push
mov
push
icebp
push
push
mov
lds
aaa
arpl
dec
push
push
jno
add
pop
and
imul
call
(bad)
cmp
jge
das
xchg
into
mov
add
xor
scas
pop
cmc
xor
xor
push
les
pop
sbb
and
push
add
inc
xor
outs
push
adc
sbb
push
and
rol
and
xchg
adc
and
push
mov
jo
arpl
sub
add
mov
inc
and
lock
push
and
gs
ins
arpl
push
xor
fbld
ss
popa
clc
mov
jl
xchg
in
ja
int
cmp
jg
scas
shl
pop
xor
(bad)
mov
sbb
in
cmp
cmp
(bad)
popf
adc
jmp
aam
retf
fsubr
cmp
cmp
mov
pop
sbb
add
js
call
gs
cmp
adc
cs
sbb
and
test
push
mov
or
jmp
mov
call
pusha
or
dec
addr16
push
push
mov
jnp
ins
sbb
sbb
sti
mov
adc
sub
(bad)
mov
imul
add
cmp
jmp
and
dec
movs
inc
cmp
(bad)
mov
jl
and
xchg
cmp
xor
push
daa
shl
push
xor
inc
and
hlt
cmp
push
cmp
das
mov
pop
test
push
push
push
sbb
inc
ret
ret
mov
popf
jb
jnp
pop
xchg
mov
sbb
retf
test
dec
or
sub
int3
dec
cmp
jo
and
xchg
or
inc
mov
out
loopne
pop
add
add
adc
cmp
jae
loope
push
call
out
and
push
cli
push
mov
pop
fs
mov
push
retf
add
std
(bad)
jnp
adc
jns
pop
mov
cmp
jg
and
sub
bound
or
jle
in
add
int
cld
ins
and
loop
fld
add
sti
in
scas
pop
or
imul
sub
push
push
lea
ja
inc
mov
lods
add
jae
js
test
push
push
dec
or
cmp
fwait
pop
push
icebp
cmp
sub
mov
inc
mov
ret
xchg
dec
adc
add
sub
add
pusha
sub
mov
fisttp
mov
dec
je
adc
or
pusha
or
jl
sub
push
push
and
in
mov
shl
sub
fs
shl
leave
xchg
fld
out
pushf
and
int
psadbw
adc
lds
mov
mov
jbe
jmp
push
and
jb
(bad)
mov
mov
cmp
mov
outs
pop
add
pop
ins
loope
in
mov
jo
jo
xor
mov
cmp
mov
jl
loopne
mov
mov
cmp
lea
bound
jmp
adc
mov
sar
sub
add
sub
pusha
cmp
jge
pop
(bad)
out
or
sbb
mov
or
fild
daa
jl
or
fsubr
dec
xlat
fbld
lea
adc
or
inc
add
adc
push
mov
sbb
jg
mov
or
(bad)
push
mov
xchg
cmps
xor
sar
ins
add
push
xchg
lds
gs
je
add
sbb
ret
je
retf
dec
push
push
xchg
addr16
add
ins
and
stos
jo
inc
popa
or
neg
stc
arpl
neg
jae
pop
jo
and
mov
inc
test
mov
or
je
xor
pop
into
adc
and
pop
or
aaa
pusha
mov
push
imul
or
jne
push
cmps
add
lock
call
cmp
push
pop
sbb
inc
mov
xor
cmp
or
clc
add
cmp
ins
pop
(bad)
aas
ret
push
cmp
dec
or
fld
mov
fadd
shl
add
and
mov
jnp
pop
sub
dec
mov
push
mov
btr
fdiv
test
je
in
or
mov
jle
and
mov
jnp
add
lock
or
cmps
pop
clc
cmp
push
pop
and
xor
cmp
setl
lods
or
jg
test
shr
or
jmp
je
add
ret
adc
lock
adc
or
jp
out
popa
sbb
bound
cmp
pop
adc
idiv
xor
push
push
push
push
push
push
dec
das
out
rcr
pushf
xchg
dec
sbb
xor
jmp
fs
test
ins
adc
sti
out
cwde
jnp
jae
scas
xchg
and
push
push
push
lods
std
sbb
push
xchg
or
add
push
ss
sub
and
js
mov
push
lahf
add
add
lock
inc
subps
adc
cmps
xchg
push
cmps
xor
mov
fld
leave
push
push
and
mov
sub
inc
mov
sub
mov
jmp
and
das
inc
jb
jnp
sbb
fldcw
or
jbe
jl
fisub
push
inc
cmp
xchg
mov
mov
xor
cmp
js
xchg
xor
dec
or
mov
adc
cwde
push
sbb
adc
pushf
add
daa
sar
ror
adc
add
call
aaa
out
psubsb
call
adc
jb
xor
xchg
or
mov
sbb
inc
xchg
mov
pop
mov
adc
add
jl
adc
mov
push
sbb
in
cmp
push
sbb
in
cmp
sbb
sbb
sbb
sbb
jnp
or
mov
mov
push
sbb
je
sbb
sbb
jbe
jge
and
xchg
sub
cmp
adc
mov
out
inc
push
call
inc
inc
mov
cmps
jo
mov
mov
stos
jno
imul
push
sbb
adc
push
push
lea
jl
push
mov
lds
pushf
jns
pop
jb
ret
push
sahf
add
call
push
pop
mov
inc
add
rcl
add
sbb
xchg
add
pop
sbb
pop
pop
pop
jmp
nop
fcom
push
or
add
add
push
pop
mov
adc
enter
add
push
pop
adc
inc
dec
bound
mov
mov
xor
xchg
xor
test
jle
fprem1
or
fst
push
mov
xchg
sbb
sti
jl
jge
loopne
xor
dec
fsubr
sbb
out
or
daa
mov
sub
mov
sub
sub
stos
fcos
sbb
mov
pop
cmp
mov
inc
pop
pop
mul
call
icebp
(bad)
jg
mov
sub
mov
cdq
mov
mov
xor
(bad)
(bad)
push
jle
sub
cdq
xor
inc
sub
mov
inc
cmp
jl
mov
mov
mov
cmp
add
push
push
mov
iret
gs
pushf
sub
adc
pusha
xchg
stos
mov
add
jp
test
mov
mov
mov
fiadd
xor
push
push
mov
call
jmp
dec
sbb
cmp
inc
adc
xlat
inc
and
cmp
xchg
call
sub
(bad)
test
mov
pusha
add
push
pop
fld
mov
cmp
iret
push
xchg
dec
call
sub
adc
sbb
icebp
popf
lods
cmp
inc
and
aad
lea
pop
inc
cdq
xor
scas
cs
add
ins
mov
sub
mov
in
and
sub
pop
add
in
sub
je
dec
mov
inc
pop
mov
push
push
addr16
fst
sbb
or
mov
js
adc
add
pop
mov
or
push
mov
shl
pop
lahf
call
(bad)
adc
fldenv
sbb
pop
adc
sub
and
fidiv
xor
and
add
fsubr
pop
test
xor
inc
test
and
push
cwde
fimul
pop
and
(bad)
sub
pop
rcl
lock
and
push
add
xchg
dec
mov
jb
jnp
loop
push
call
sub
push
sbb
sub
inc
mov
sbb
rcl
xor
adc
push
sbb
xor
shl
add
add
ret
inc
cdq
add
(bad)
add
mov
pop
mov
adc
and
pop
adc
test
mov
sbb
add
mov
out
sbb
pop
movs
movs
pushf
sbb
push
leave
cmp
pavgb
pop
std
pushf
ror
and
cmp
xchg
setl
popa
mov
mov
ret
mov
sbb
fnstenv
div
jno
mov
jle
rcl
push
or
adc
sbb
or
dec
add
sbb
sub
add
jno
ret
adc
push
and
clc
dec
pop
fdiv
jecxz
xchg
jl
jo
push
mov
pop
hlt
and
dec
into
hlt
(bad)
or
jne
je
out
aas
xor
std
je
test
or
mov
mov
scas
loopne
adc
or
rcl
aaa
adc
ins
add
push
jne
mov
cld
loope
test
shl
ret
jle
(bad)
(bad)
mov
push
call
or
mov
iret
cmp
jge
and
mov
or
dec
sub
cwde
add
sub
pop
jne
mov
popa
cmp
jle
jae
out
xor
sub
int3
inc
xor
aas
jmp
inc
and
outs
mov
cmp
je
movs
dec
cmps
pop
or
shl
mov
dec
dec
jns
sub
test
jo
jmp
push
outs
mov
sub
cmp
fsubr
ret
pop
xchg
mov
jg
mov
cmova
out
test
cmp
ret
mov
sbb
inc
add
cmp
xchg
fidivr
inc
and
add
jg
inc
mov
and
and
pop
mov
cmp
jl
jmp
ins
pop
shl
push
push
fimul
adc
shl
and
push
and
cmp
pop
mov
adc
adc
add
mov
cmp
jne
cmp
cmp
mov
push
sbb
add
mov
clc
xchg
mov
pop
int
push
push
push
dec
call
xor
lods
loopne
rol
pop
ror
cmp
(bad)
frstor
sbb
test
mov
mov
mov
mov
je
mov
add
or
add
inc
ret
stos
and
cmp
dec
and
gs
sbb
shl
mov
call
lahf
dec
and
test
cvtpi2ps
ret
or
ror
inc
jne
test
je
inc
cmc
fiadd
ror
and
rcl
add
into
sbb
jmp
cmp
cmc
xor
ror
dec
cmp
mov
cmp
pusha
loopne
dec
add
ins
and
(bad)
bswap
ins
dec
int3
mov
dec
jmp
pop
rcl
jl
or
js
adc
adc
test
pop
inc
cld
mov
cmp
jne
cmp
(bad)
scas
add
inc
imul
dec
fwait
mov
in
cmp
je
daa
inc
adc
mov
and
mov
sub
test
push
and
xor
mov
mov
sahf
test
jnp
sbb
ins
stos
sub
jne
and
or
push
mov
dec
sbb
call
add
leave
add
xchg
rol
movs
or
jo
push
adc
or
sub
add
jmp
dec
test
pop
pop
fisttp
sub
arpl
push
out
imul
vpshuflw
mov
inc
adc
xchg
push
pusha
mov
pop
pop
xor
add
cmp
clc
loop
xchg
mov
adc
or
mov
add
daa
mov
pusha
mov
push
dec
mov
mov
add
fmul
scas
xchg
sar
int
inc
jg
mov
loop
ret
jmp
fild
add
clc
push
sub
cmp
jle
popf
xor
or
add
adc
pop
xor
stos
adc
jg
sub
lds
outs
sti
xchg
frstor
jg
inc
mov
cmp
jl
push
sub
int
adc
add
pop
test
or
sub
iret
dec
data16
enter
add
mov
inc
mov
mov
mov
xor
ss
or
xor
pusha
add
cmps
imul
adc
pop
push
push
cdq
clc
push
mov
pop
ss
add
fwait
push
cs
or
in
add
sub
or
je
aaa
inc
mov
adc
sub
ret
push
sub
mov
iret
inc
and
add
out
adc
enter
push
cmp
je
in
sub
sub
mov
dec
sbb
popf
in
mov
push
cwde
mov
mov
mov
stos
and
pop
(bad)
add
ds
nop
mov
mov
add
jp
add
inc
xor
cmps
clc
add
mov
pushf
pop
mov
mov
mov
lahf
xor
mov
dec
xor
arpl
cld
push
cmp
add
or
lds
lock
(bad)
cmp
jg
cmp
jl
add
pop
cmp
jle
mov
popa
xor
aad
cmps
sbb
loopne
(bad)
push
push
xchg
mov
push
fsub
fisub
pop
icebp
sbb
jg
push
push
lods
pop
sbb
test
ficomp
xor
fst
adc
lods
push
into
neg
(bad)
les
dec
and
cld
fwait
shl
je
test
jl
aad
push
adc
fdivr
jmp
sub
mov
jmp
inc
cmp
mov
iret
js
xlat
imul
push
sti
sub
and
xor
(bad)
in
mov
aad
mov
dec
inc
adc
ror
lock
jge
adc
sub
mov
jmp
loopne
or
sbb
inc
out
ret
mov
inc
push
and
jl
push
dec
mov
adc
lods
dec
add
pop
jl
call
xchg
or
cli
sub
mov
sbb
popa
ins
neg
push
mov
lock
call
add
jmp
lds
sbb
rcl
clc
add
adc
fisttp
add
mov
sbb
adc
cs
inc
cmc
dec
and
lahf
je
add
mov
mov
mov
jp
jle
dec
ins
and
cmp
pop
(bad)
cmp
inc
jo
in
xchg
and
test
scas
xor
ror
dec
test
lds
lea
inc
sbb
cmps
hlt
lea
pushf
dec
gs
lea
(bad)
push
ret
cmp
or
inc
and
jo
paddsb
fstp
(bad)
jge
mov
mov
xor
dec
cmp
push
add
and
jl
rol
cmp
jge
dec
or
ficom
cmp
jl
fild
es
ins
cmp
(bad)
cmp
pop
push
and
inc
mov
cmp
jo
mov
(bad)
lahf
pop
sub
jmp
xor
out
pop
daa
cmp
call
rcr
cmp
sbb
enter
jmp
mov
jl
loop
rcl
xor
call
fwait
dec
cmps
dec
pop
cmp
xor
rcl
clc
sbb
xor
jmp
xor
or
sbb
ins
lock
jg
adc
and
or
dec
or
push
adc
stos
sbb
rcl
cmp
sub
popa
movlps
pusha
es
adc
arpl
push
fmul
test
or
adc
ins
sub
dec
pop
add
test
and
pushf
dec
mov
pusha
push
lods
test
je
inc
ja
add
test
je
cmp
scas
and
fadd
and
inc
inc
inc
add
add
adc
or
and
int3
xor
pop
lds
cli
mov
mov
and
daa
add
xor
pushf
js
or
aam
mov
fs
sbb
pushf
jp
fsubp
push
ja
or
pop
arpl
stos
cli
inc
xor
cmp
push
mov
xor
or
or
mov
pop
xor
pop
pusha
pop
dec
shl
cmp
outs
sub
sbb
jmp
add
outs
xor
outs
and
test
or
add
inc
add
push
mov
ror
sub
aaa
je
and
inc
loopne
cmp
sete
mov
test
jne
imul
adc
mov
fsub
pop
xchg
sub
add
(bad)
mov
pushf
and
adc
mov
pop
(bad)
ficomp
test
ret
or
pop
stc
add
ins
cmp
push
jne
ss
jbe
cmp
pop
xchg
xor
pusha
mov
jmp
xchg
mov
add
lahf
mov
in
inc
cmp
lods
mov
or
sbb
and
inc
push
sbb
imul
es
add
jbe
dec
push
xor
retf
mov
test
je
mov
mov
adc
or
je
mov
adc
adc
push
push
cmps
sbb
outs
push
add
adc
pop
(bad)
out
std
push
and
mov
or
and
jne
jmp
ret
(bad)
push
and
cmp
and
jl
inc
jl
cmp
cmp
jge
ret
lahf
or
test
adc
ds
add
jne
pop
ss
push
mov
xlat
push
and
adc
cmp
jo
pop
les
test
pusha
je
push
je
loop
and
inc
pop
jbe
std
cmp
out
jno
push
test
ret
mov
shl
push
push
loope
cld
or
fimul
popa
add
ja
pop
data16
icebp
addr16
or
call
cmp
adc
into
retf
push
jl
out
sbb
cli
test
mov
pop
ret
sbb
and
inc
dec
cmp
or
aam
je
stc
add
sbb
xchg
ret
loop
inc
sbb
shl
adc
into
shr
mov
push
xchg
out
fidivr
sbb
add
mov
push
loope
dec
adc
or
mov
aad
inc
inc
pop
sbb
retf
push
(bad)
(bad)
(bad)
rcr
push
and
cmp
loopne
inc
add
xor
sar
add
jbe
cmp
xor
out
dec
cmps
jns
fisubr
sub
mov
inc
dec
mov
sbb
shl
rol
inc
fs
and
push
sbb
jbe
jo
sub
or
pop
adc
push
pop
sbb
adc
adc
dec
out
call
dec
pop
push
scas
(bad)
pushf
mov
div
push
xchg
adc
push
adc
mov
scas
jnp
inc
add
push
pop
push
mov
push
sub
shl
inc
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
out
sti
out
add
inc
push
sub
pop
adc
inc
sub
lock
or
or
jmp
or
push
scas
lds
dec
cmp
jne
sahf
sbb
fsubr
jl
lock
cmp
and
sbb
retf
mov
int
inc
cmp
test
push
push
je
fidivr
ja
mov
ds
push
mov
mov
cmp
push
idiv
push
addr16
jge
push
arpl
adc
mov
call
push
or
sbb
add
xor
add
ret
add
test
xor
(bad)
jg
fild
cmp
jne
cmp
add
inc
jo
int
int
call
mov
ins
xor
sbb
xor
inc
jg
ret
sbb
push
mov
push
xor
add
lahf
inc
lds
add
fcom
mov
je
push
popa
cmp
fcomp
dec
add
mov
fstp
in
push
pusha
add
scas
je
sbb
sbb
lods
pop
test
mov
pop
shl
xor
call
dec
out
xor
test
add
and
pop
add
and
sar
in
or
mov
scas
les
push
push
call
cwde
inc
push
shr
mov
enter
sub
inc
mov
adc
push
adc
push
push
push
push
inc
cmp
stos
or
add
cmp
(bad)
test
cmp
dec
test
adc
or
or
ins
add
inc
icebp
scas
mov
clc
ins
mov
sub
setns
lods
xor
sub
es
and
jg
mov
cmp
retf
and
jmp
push
jo
dec
and
sub
(bad)
fsub
in
mov
inc
and
mov
push
push
push
mov
ins
(bad)
test
(bad)
cmp
dec
je
fild
fst
fidivr
cmp
adc
sti
dec
jl
fnstsw
test
jne
fstp
fld
in
pop
fucom
fmul
or
fcomp
sbb
add
bound
pop
dec
out
sub
sub
cmp
(bad)
fstp
mov
je
and
xor
inc
pop
cmps
loope
mov
inc
(bad)
icebp
ss
or
dec
add
xchg
mov
mov
repnz
mov
(bad)
pop
jge
out
sbb
std
jmp
pop
sub
mov
mov
aaa
dec
or
mov
sub
sbb
add
push
push
mov
lds
arpl
sbb
js
and
mov
adc
pusha
sub
jp
cmp
xor
std
adc
or
inc
aas
add
sbb
test
jbe
call
xor
fwait
or
or
pushf
and
dec
inc
sbb
test
mov
mov
jmp
xor
or
pop
mov
(bad)
(bad)
mov
cmp
mov
ss
or
icebp
mov
add
clc
ret
sbb
add
jo
add
or
and
jae
push
iret
pop
jmp
je
cld
add
cli
push
or
dec
int3
xor
mov
je
out
or
or
shl
call
mov
jne
mov
mov
test
jne
add
jg
adc
leave
mov
push
setne
dec
add
outs
cli
and
mov
int3
xor
or
add
psubsb
dec
cmp
jl
ss
fcomp
mov
jge
mov
out
push
push
aaa
xor
dec
push
add
adc
xor
and
shld
mov
dec
mov
sub
arpl
adc
inc
add
push
push
push
test
syscall
loopne
je
push
push
push
pusha
jmp
sbb
and
xor
jmp
mov
iret
sbb
jmp
jmp
inc
and
add
mov
jmp
test
gs
jne
adc
jne
(bad)
idiv
cmp
je
cmp
jne
or
test
mov
je
push
cmp
pusha
sub
iret
pop
add
sbb
mov
(bad)
cmp
jb
outs
push
and
pop
mov
data16
jnp
je
mov
push
inc
ins
mov
imul
pop
jle
add
jp
inc
mov
outs
or
fisub
push
push
sub
(bad)
mov
jo
je
popa
adc
jne
push
enter
cmp
sub
(bad)
fdivr
mov
dec
aam
adc
jnp
aas
and
jne
mov
and
mov
mov
push
jp
cwde
cmp
inc
sbb
and
(bad)
aad
rcl
mov
mov
jno
inc
push
sbb
rcl
dec
cmp
sub
and
xor
xor
cmp
das
outs
pop
lods
or
in
call
mov
sub
out
inc
loope
jo
mov
adc
in
xor
dec
cmp
jg
xor
mov
popa
ins
lea
ret
jo
mov
inc
cmp
jle
cs
daa
loope
cli
jg
sbb
inc
and
pop
pop
mov
mov
cmp
pushf
xchg
adc
ficom
dec
xchg
iret
mov
fucomi
(bad)
in
das
rol
push
gs
mov
or
or
or
aam
xor
out
jl
jo
add
sar
ins
and
push
push
mov
jo
or
inc
in
jno
jecxz
jb
pop
fbld
mov
and
dec
add
sbb
push
or
mov
xchg
push
cld
mov
and
adc
add
je
repnz
and
push
test
loop
and
xor
dec
mov
sbb
cdq
add
jecxz
and
(bad)
and
lea
sti
les
aaa
inc
shr
adc
fs
adc
push
push
pusha
aas
frstor
xor
and
cdq
and
sub
pop
jne
mov
dec
jp
sbb
add
or
jb
dec
and
pop
cmp
and
push
mov
mov
add
adc
mov
add
or
and
shr
popa
test
hlt
add
lods
mov
mov
cmp
ja
out
(bad)
(bad)
jmp
dec
jmp
inc
jmp
sub
jmp
add
push
sti
jmp
lods
jno
sbb
aad
mov
or
and
(bad)
and
mov
mov
lea
dec
push
add
sbb
pop
nop
pop
lahf
sub
and
lahf
push
mov
pop
and
into
and
pushf
push
cmp
cmps
jmp
xor
repz
call
jl
pop
adc
pop
ds
mov
push
in
inc
and
dec
das
mov
outs
loop
adc
dec
xor
loop
add
pop
sbb
call
int3
test
sbb
test
sti
test
push
les
sbb
aas
sub
add
or
dec
push
xchg
mov
pop
jl
xchg
or
shl
xchg
mov
addr16
and
add
shl
cmp
sub
add
enter
call
and
outs
jo
sub
cmp
adc
xor
ret
jl
into
adc
or
leave
jge
cmps
mov
dec
jl
cmp
jl
jp
and
mov
xchg
sbb
daa
sbb
dec
arpl
sar
mov
mov
add
inc
out
add
pop
leave
xchg
(bad)
sbb
sub
cmp
(bad)
cmp
jge
sar
imul
jo
sub
or
lods
fsubr
lea
inc
sbb
sub
inc
add
jmp
nop
sub
(bad)
das
push
adc
pusha
cmp
mov
jg
adc
shl
leave
push
test
adc
jno
call
dec
inc
xor
adc
adc
(bad)
mov
adc
std
daa
je
cmp
je
cmp
je
cmp
je
clc
(bad)
inc
std
and
std
and
std
and
std
inc
jne
and
jbe
push
std
out
add
cmp
adc
rol
xor
inc
jne
inc
jae
scas
jle
cmp
cmp
cs
inc
push
fmul
sbb
xor
jge
cmp
push
add
es
mov
mov
jle
dec
push
mov
or
xor
dec
xor
mov
or
scas
lea
inc
cmp
ja
mov
or
add
add
test
add
cmp
ins
push
lahf
loope
mov
sar
xchg
sbb
sbb
lods
shl
cwde
jmp
addr16
xor
mov
pop
add
dec
inc
cmp
sub
mov
neg
push
push
dec
or
inc
imul
adc
pop
add
xor
mov
pop
rol
inc
mov
(bad)
test
arpl
in
std
push
dec
push
push
sbb
jnp
cs
push
push
push
inc
xor
fld
add
js
pop
pop
sbb
inc
test
out
push
jmp
sbb
sbb
in
into
add
(bad)
sbb
add
push
sub
je
aaa
jmp
(bad)
jmp
inc
sbb
push
jmp
or
inc
add
cmp
sbb
jmp
fnstcw
pushf
add
ror
fdivr
dec
and
jecxz
jecxz
aaa
mov
adc
cmp
jne
mov
movs
cmps
mov
inc
dec
cmp
jne
add
jno
xchg
sbb
dec
push
cmp
mov
std
sbb
push
push
cmp
and
or
pop
cmp
jne
add
cmp
push
mov
call
xor
mov
add
cmp
je
ja
jecxz
inc
add
adc
neg
xor
dec
daa
add
add
add
push
pop
or
add
adc
or
sbb
mov
xchg
aad
add
rcr
dec
in
adc
adc
sbb
call
jg
mov
jmp
ins
adc
clc
dec
test
jnp
stc
or
dec
ret
clc
add
out
fcomp
test
mov
test
je
mov
sub
xchg
leave
hlt
loop
cmps
mov
shr
and
inc
pop
lahf
mov
or
int3
jmp
push
fsubr
adc
add
push
arpl
adc
push
add
add
dec
and
add
mov
sbb
rcl
push
inc
inc
scas
out
jo
cmp
je
inc
jmp
xchg
jmp
xor
ja
cmp
shr
outs
xor
dec
outs
mov
jno
sar
(bad)
xor
out
fcomp
(bad)
jmp
fisttp
sub
push
or
mov
ja
sar
xor
cmp
enter
ror
add
les
repz
and
or
mov
sub
adc
mov
test
addr16
popa
std
in
push
push
loop
xor
push
clc
mov
cli
jmp
mov
mov
mov
push
retf
jge
and
sub
movs
ja
(bad)
call
add
push
push
jmp
cmp
jge
sbb
jmp
fidiv
dec
(bad)
jmp
std
icebp
sub
sub
adc
cmps
es
aad
and
push
loop
push
push
push
sbb
jno
fild
je
push
dec
push
rol
add
popa
cmp
xchg
jle
cmp
sahf
mov
dec
ret
inc
dec
cmp
dec
xchg
ret
mov
mov
adc
gs
jle
sbb
add
jne
scas
jno
or
dec
or
sub
or
xchg
push
adc
adc
bound
xchg
ret
mov
clc
mov
or
jno
or
(bad)
xor
jne
or
add
mov
jo
push
sbb
in
mov
int
in
mov
mov
retf
xchg
in
icebp
adc
mov
add
add
retf
push
ret
movs
pop
lgdtd
in
aad
xchg
cmps
pushf
fistp
les
(bad)
fstp
push
rol
mov
xlat
mov
mov
cmovs
pop
inc
jmp
sbb
icebp
cmp
mov
or
mov
enter
jmp
jl
and
nop
add
push
jns
pop
aad
enter
fs
retf
aad
xor
xor
dec
pop
and
mov
daa
adc
and
jae
mov
cld
lea
push
push
cmps
pop
sub
xor
out
in
adc
ret
mov
ror
add
(bad)
push
cmp
jge
cmp
je
stos
test
arpl
cmp
pop
dec
sbb
jmp
push
pop
fild
lahf
push
jns
loopne
inc
fdivr
(bad)
enter
ja
scas
lahf
adc
push
sub
(bad)
sub
std
cmp
jge
dec
or
test
sub
mul
ins
ret
and
mov
and
inc
std
ret
or
mov
pop
sub
popf
leave
push
in
xor
pop
dec
ins
mov
sbb
jne
leavew
call
enter
leave
xor
pusha
and
mov
pop
and
adc
inc
lahf
jmp
xchg
xor
add
sar
cwde
int
inc
jmp
pusha
loopne
dec
xchg
test
xchg
or
cmp
das
(bad)
movs
inc
in
int
out
pop
ret
into
cmp
cmp
stos
call
cli
add
test
mov
ret
scas
mov
xor
(bad)
std
sbb
pop
inc
push
push
push
leave
pop
cmp
inc
out
sbb
sub
xor
imul
clc
test
ds
rcr
hlt
and
pop
cmps
cmp
cmp
or
adc
pop
ja
sub
rcl
(bad)
fld
fs
out
sub
out
push
push
jo
inc
fiadd
sbb
mov
cli
lahf
xchg
cmp
jne
in
adc
or
add
jmp
fwait
stos
add
push
cmp
and
or
mov
push
adc
loopne
mov
enter
je
push
push
push
xor
inc
aad
push
sub
icebp
mov
lods
jle
xchg
je
test
xchg
add
xor
adc
inc
dec
loopne
test
xor
mov
mov
cmp
dec
push
(bad)
inc
pop
add
fdivr
bound
or
addr16
scas
mov
adc
pop
outs
sbb
dec
call
sub
mov
test
inc
inc
mov
add
jb
aaa
mov
dec
add
push
and
mov
mov
pop
dec
add
push
cmp
inc
nop
fistp
and
mov
pop
lods
mov
daa
sbb
mov
add
pusha
add
xor
inc
add
push
xor
cld
add
sub
add
push
cmp
imul
sbb
cmc
add
jle
dec
and
ja
call
sub
imul
xchg
imul
pop
xor
ja
jo
pop
cmp
jl
cld
or
add
mov
push
inc
(bad)
adc
pop
mov
out
test
inc
je
dec
inc
and
mov
clc
out
(bad)
cmp
jbe
leave
jle
add
cmp
jge
jp
sub
in
(bad)
fistp
fdivr
sbb
and
jp
sbb
in
xor
and
(bad)
add
mov
push
xor
jo
cmp
push
sbb
jne
or
rol
cmp
push
sbb
push
xchg
dec
test
icebp
sub
mov
add
mov
xor
outs
arpl
add
rcl
jne
cdq
sbb
sbb
inc
pop
(bad)
(bad)
and
push
pop
mov
or
cmp
fld
or
addr16
js
add
das
pop
in
sbb
cmp
mov
push
mov
push
sub
adc
or
push
das
cmp
pop
mov
fwait
add
adc
sub
inc
ins
mov
cmc
adc
sub
rol
inc
dec
aam
cld
and
sbb
test
jmp
cmp
jno
adc
sbb
cmp
je
jmp
sar
shr
call
adc
inc
enter
inc
sbb
addr16
xchg
pop
inc
aam
push
je
pop
cld
pop
je
dec
add
adc
add
add
push
push
xchg
xchg
jne
lds
lds
es
mov
pushf
jge
cdq
jmp
add
test
cwde
daa
push
hlt
inc
ror
loope
and
cmps
and
mov
ins
inc
cmp
scas
addr16
(bad)
outs
adc
test
dec
enter
dec
xor
call
jmp
aad
adc
sub
cmps
xor
or
push
cs
or
and
sub
xor
add
cwde
aad
mov
add
setp
lock
add
test
add
test
dec
or
fisttp
xchg
movs
fwait
jo
push
push
and
(bad)
jmp
cmp
xor
and
mov
and
je
cld
mov
push
push
mov
cmp
adc
ss
xor
loope
and
fsub
jno
js
pop
cmp
je
adc
mov
pusha
in
pop
in
xchg
arpl
mov
adc
(bad)
fcmovnbe
js
arpl
xchg
je
lea
cmp
lea
call
lock
je
pusha
jl
inc
and
add
mov
or
(bad)
mov
cmp
push
je
mov
add
loopne
stc
or
popa
sub
bound
in
aaa
or
add
mov
push
adc
sub
popa
pop
js
ret
popa
je
cmp
rcpps
mov
imul
popa
test
push
mov
mov
push
pop
add
cmp
sub
add
cmp
and
int3
sub
sbb
cmp
retf
pop
pop
mov
mov
rcr
stos
pop
push
add
inc
add
add
cli
sub
cli
fs
or
xor
cmp
jne
sub
jmp
mov
mov
pop
mov
pop
add
push
mov
shr
dec
add
add
or
cmp
cmp
std
pop
mov
sub
(bad)
push
fcom
and
fild
push
jnp
(bad)
sbb
jno
and
arpl
xor
cmp
jl
xchg
cmp
jge
das
fsub
les
and
fistp
ins
push
push
mov
cmp
ja
push
rcr
rcr
fwait
and
jl
pop
and
cmp
ins
not
jge
jmp
neg
add
cdq
add
push
pop
inc
(bad)
cmp
push
mov
mov
add
adc
adc
sysexit
js
mov
cmp
clc
push
mov
add
aam
je
add
mov
mov
scas
jp
inc
add
or
mov
jne
pushf
cmp
ja
call
pop
pop
push
cmp
movups
nop
pop
jl
inc
jo
popa
adc
es
cmp
inc
aas
cmp
in
cmp
push
cmps
sbb
sub
push
imul
sbb
test
int3
bound
push
cli
fsub
push
fld
out
sbb
sbb
push
cld
add
test
dec
xor
cmp
or
jg
jge
jg
adc
and
test
je
mov
sub
jne
mov
xchg
or
add
ret
or
jg
jecxz
or
mov
aad
cli
inc
adc
arpl
inc
push
cmp
adc
and
test
mov
sbb
cmp
or
and
dec
push
cmp
mov
or
and
push
ficom
dec
inc
clc
push
push
dec
(bad)
adc
push
mov
pop
and
je
jno
test
and
mov
pop
das
and
push
jae
cmp
inc
sbb
rol
mov
jb
mov
push
sbb
loope
js
push
sbb
test
call
scas
or
inc
aas
cwde
mov
inc
push
mov
imul
mov
mov
xor
sub
sub
cdq
xor
movs
jmp
sub
mov
inc
sub
mov
lahf
mov
mov
retf
dec
iret
mov
lds
fild
or
xor
call
or
neg
add
add
pop
mov
inc
jb
mov
and
aas
std
mov
and
push
push
xor
or
test
je
sbb
push
dec
xchg
ficom
sbb
and
(bad)
mov
push
mov
sub
mov
sbb
test
pop
jne
adc
inc
jmp
call
into
fnsave
dec
sbb
call
mov
adc
xchg
and
and
test
adc
push
or
push
cmp
mov
jl
mov
mov
sub
std
dec
mov
cmp
or
or
mov
or
scas
adc
push
sub
add
sbb
and
xor
cwde
mov
int3
jle
and
add
jle
loope
add
add
dec
or
shr
and
test
loope
push
or
sbb
add
fcom
cmp
mov
sti
clc
(bad)
adc
jne
cmp
jne
or
or
cwde
add
or
inc
dec
(bad)
fcomp
sub
xchg
cld
add
pop
mov
adc
cmp
push
pop
xchg
dec
and
or
adc
adc
jle
mov
cmp
jge
mov
scas
call
xor
dec
mov
imul
addr16
pop
xchg
xchg
add
sahf
dec
fmul
iret
add
push
inc
dec
cs
mov
test
(bad)
test
jnp
jbe
jbe
add
test
fiadd
sub
inc
loope
jb
std
aad
mov
mov
test
jne
mov
add
shl
adc
jo
addr16
jmp
add
aaa
pusha
in
jmp
sub
mov
cwde
dec
jmp
retf
dec
sub
inc
mov
mov
jg
fdivr
mov
mov
mov
cmp
pop
sbb
mov
lods
stos
xor
enter
mov
pop
inc
pusha
mov
inc
aad
outs
mov
mov
and
and
mov
cmp
inc
add
mov
or
and
jle
test
push
pop
shr
and
jo
push
shl
scas
(bad)
cmc
or
mov
dec
push
push
push
imul
in
popf
jp
add
push
adc
cmp
adc
xchg
mov
cwde
shl
ja
scas
mov
add
(bad)
js
not
sbb
inc
clc
or
adc
inc
jmp
xor
jp
adc
mov
add
neg
add
iret
mov
inc
cmp
mov
jo
fadd
or
adc
add
mov
test
pop
test
mov
pop
addr16
sub
daa
arpl
adc
inc
out
aas
push
aam
dec
jmp
psubsb
test
pop
test
add
sub
hlt
ret
mov
push
sub
push
jns
add
mov
fcom
xchg
cmp
rcl
pop
enter
lock
loope
adc
rep
call
inc
dec
pop
mov
push
call
xor
mov
or
adc
mov
call
add
jl
and
xor
dec
push
push
sub
or
jmp
cmp
je
cmp
je
cmp
je
cmp
je
mov
cmp
mov
sub
jmp
adc
mov
mov
cwde
mov
sar
add
jmp
push
sbb
dec
clc
mov
or
sub
or
imul
in
sub
cwde
jle
call
call
je
mov
jnp
lods
mov
and
mov
dec
push
push
ud0
inc
icebp
cmp
and
test
hlt
mov
sub
ret
in
adc
rcl
je
js
mov
sub
neg
inc
bound
mul
mov
adc
(bad)
jbe
add
push
stos
pusha
xchg
inc
xor
xor
cmp
adc
dec
mov
mov
icebp
or
lock
mov
cmova
jl
mov
adc
fs
add
add
jbe
scas
stos
or
imul
push
push
push
push
push
push
push
dec
(bad)
or
pushf
jae
ror
jae
xor
cld
cmp
pop
aaa
(bad)
push
ret
pusha
xchg
repz
cld
fucomp
or
inc
mov
mov
cmp
jge
jns
adc
sub
or
(bad)
push
push
or
adc
dec
inc
push
fcom
sbb
sub
cmc
out
dec
push
(bad)
inc
enter
jl
mov
inc
cmp
leave
jl
and
test
aaa
push
pop
dec
cmp
jl
mov
xor
add
(bad)
addr16
out
push
(bad)
popf
and
loop
push
add
or
mov
mov
arpl
or
push
outs
fcomp
sbb
pop
cmp
add
and
jo
ror
call
push
(bad)
sbb
sti
call
add
and
inc
or
push
push
pop
nop
sti
add
out
imul
adc
pop
push
pop
xor
ror
out
jl
ror
sbb
push
push
push
push
push
dec
loopne
and
sub
inc
hlt
mov
mov
mov
pushf
xchg
sbb
inc
pop
cmp
inc
sub
ds
rol
aaa
sub
cld
ins
inc
hlt
data16
add
push
push
out
sbb
jmp
loope
push
rcr
sub
sbb
and
or
gs
dec
and
cmps
xchg
mov
enter
inc
rcl
sub
push
clc
mov
mov
sbb
jnp
inc
cmps
mov
iret
ss
push
es
and
xchg
pop
shr
mov
mov
in
or
fistp
mov
ds
pop
test
adc
leave
pop
je
lea
add
mov
mov
pop
inc
int3
add
cli
cmp
cmps
push
pop
add
out
loopne
rol
out
outs
outs
add
or
adc
jp
adc
dec
add
adc
cdq
mov
xor
sbb
sbb
jmp
mov
add
cdq
push
mov
mov
mov
mov
add
shl
or
dec
mov
and
jmp
jg
aas
dec
push
test
nop
push
adc
test
mov
jmp
lods
sbb
(bad)
mov
sub
jmp
mov
shl
push
push
call
(bad)
out
or
pop
push
call
mov
ret
and
and
leave
add
loope
cs
and
dec
add
pop
add
leave
mov
cmp
je
add
inc
cmp
jl
mov
ret
add
test
popa
mov
inc
ret
and
mov
enter
std
cmp
push
cld
xchg
out
iret
or
cli
cmp
cwde
push
repz
out
cmp
or
adc
inc
inc
cwde
xchg
test
or
cmp
movs
addr16
sub
adc
and
push
rol
sub
fld
icebp
scas
dec
lea
push
jne
mov
popf
loope
or
push
call
aaa
jmp
retf
sbb
cs
mov
or
dec
and
and
pushf
dec
inc
lods
lea
adc
shl
test
xchg
add
add
mov
adc
ret
pop
sbb
adc
aas
push
inc
std
or
test
je
fwait
inc
cmp
jle
cmps
test
std
lea
mov
sub
cld
xchg
test
add
outs
cmp
sub
and
(bad)
mov
cmc
or
add
mov
cmp
ja
ret
xor
sti
or
pop
retf
call
jmp
and
mov
add
mov
(bad)
loope
push
pop
adc
mov
in
ficom
jne
mov
cmp
ins
sub
test
jge
or
ror
in
push
and
push
mov
imul
add
mov
sbb
mov
push
push
mov
mov
fsubr
pop
fs
std
push
ror
add
(bad)
dec
inc
mov
inc
xor
xor
pop
pop
xor
inc
out
test
retf
jne
sbb
out
add
cld
or
shl
rol
xor
mov
jle
cmp
je
add
inc
cmp
jl
jmp
inc
std
pop
adc
sbb
out
shl
retf
je
add
out
jg
outs
js
int
inc
test
inc
mov
fcomp
push
test
ss
jbe
dec
or
sti
push
jge
mov
push
cmps
dec
jg
into
stos
xchg
iret
add
dec
sub
push
sar
nop
xor
in
push
into
ss
xchg
sbb
add
sub
sub
mov
(bad)
aas
adc
and
push
push
and
test
pop
call
inc
sbb
mov
(bad)
or
mov
(bad)
(bad)
das
fdivr
mov
and
dec
adc
add
mov
jae
add
jb
jecxz
cs
push
add
push
test
rsm
int
and
mov
sbb
nop
push
mov
(bad)
popa
dec
jne
mov
in
test
jb
mov
add
fdiv
ret
or
xchg
cmp
jae
push
and
dec
or
dec
and
push
and
pusha
add
mov
pop
rcl
das
mov
jmp
or
arpl
int3
sbb
cmp
or
fcomp
or
add
mov
and
and
in
cmp
aaa
std
or
lea
and
in
inc
or
mov
add
(bad)
mov
jne
gs
out
test
dec
or
ret
mov
push
jg
add
push
cmp
and
adc
loopne
or
ja
retf
or
call
jmp
call
mov
ins
push
add
push
jne
test
mov
sar
inc
in
mov
retf
fdivr
ja
xor
push
add
inc
add
mov
inc
jecxz
or
mov
mov
div
mov
jmp
enter
inc
or
mov
mov
ja
mov
and
pop
movs
(bad)
jge
test
fdiv
push
fdiv
sub
dec
adc
iret
xchg
stos
jp
or
push
mov
stc
dec
or
adc
call
xor
mov
ret
jae
add
add
push
push
loope
xchg
popa
pop
push
in
add
nop
cmp
nop
mov
dec
pusha
jl
adc
sbb
imul
mov
adc
aam
into
cmp
adc
adc
std
inc
add
and
rcr
nop
(bad)
or
push
xor
mov
push
cs
sbb
jno
sbb
and
sub
icebp
jle
push
shr
pop
push
int3
adc
push
xor
add
add
ds
adc
pop
mov
cdq
or
ss
out
mov
test
jle
lea
add
xor
adc
sbb
add
or
pop
and
loopne
jae
jl
div
mov
push
stos
jmp
sub
jns
daa
pop
cli
xor
stos
xchg
xchg
cs
mov
ror
adc
adc
sbb
loopne
outs
nop
mov
add
sub
fadd
add
or
iret
add
int3
test
add
mov
xchg
mov
inc
sub
leave
push
mov
(bad)
pushf
je
aaa
add
and
into
je
inc
and
je
mov
mov
jge
xchg
xchg
lea
add
stos
xor
call
mov
mov
in
stos
cmps
jg
jge
mov
cld
add
test
sbb
loopne
repnz
add
cmp
xor
xchg
loope
adc
test
dec
add
push
mov
add
sub
lea
push
push
xor
outs
or
cmp
je
mov
jmp
fadd
inc
enter
inc
mov
sub
jb
addr16
jge
shl
push
call
fsubr
or
(bad)
mov
inc
enter
enter
inc
les
fs
mov
jmp
mov
or
xor
cmp
jl
inc
jne
mov
mov
mov
adc
out
push
push
or
int3
mov
xor
add
mov
dec
rcr
out
cli
fmul
div
push
aam
mov
into
cmp
add
call
test
add
mov
test
sub
push
or
cli
(bad)
std
out
pop
out
jbe
mov
mov
mov
mov
lea
sar
shl
rol
and
lea
icebp
sbb
stos
add
jmp
js
loope
mov
cmp
stos
retf
mov
mov
jge
(bad)
jne
sub
mov
inc
or
lea
ins
clc
(bad)
add
cwde
shr
and
sti
ja
push
shl
mov
push
enter
add
dec
arpl
clc
xor
pop
movs
sbb
jo
push
mov
sbb
out
add
mov
out
(bad)
out
jle
xor
les
lea
push
push
push
mov
test
cld
aas
ins
adc
mov
mov
test
jne
ja
mov
dec
imul
and
mov
cmp
adc
mov
dec
add
call
mov
or
sbb
(bad)
cmp
jne
mov
dec
adc
mov
add
fcom
dec
movs
pop
je
adc
add
test
add
add
ins
adc
xor
cmc
xchg
call
pusha
push
and
stos
arpl
(bad)
addr16
dec
add
adc
fld
pop
mov
jne
inc
or
jle
call
sbb
jge
xor
fist
clc
push
push
mov
mov
ror
pop
ror
jns
inc
les
or
cmp
mov
add
cld
jmp
push
int
pop
jg
inc
sbb
ror
and
add
push
mov
or
fmul
jge
jne
stc
jne
jmp
adc
xor
adc
out
xchg
pop
jne
and
jecxz
pop
test
mov
ja
or
cmc
out
mov
push
xor
inc
or
jge
mov
cmp
or
mov
jmp
cwde
add
mov
push
stc
sbb
push
out
les
(bad)
je
loopne
nop
(bad)
pop
les
ret
adc
outs
outs
push
cmp
jne
sbb
and
cmp
mov
push
mov
lds
cld
add
inc
call
repz
jae
adc
pop
sub
cs
xchg
pop
adc
aaa
enter
inc
dec
pop
shl
lea
push
add
pop
push
outs
sar
inc
mov
xchg
and
mov
loopne
pop
mov
jmp
fcom
pop
push
mov
push
mov
jae
add
adc
sbb
mov
mov
lea
aas
mov
or
fwait
jne
mov
cwde
test
aaa
aas
adc
mov
adc
mov
lods
mov
call
nop
push
push
jo
jnp
sub
sbb
call
leave
dec
mov
push
mov
push
mov
xchg
mov
idiv
aad
jmp
sub
pop
xchg
ins
js
dec
sbb
aas
(bad)
aam
dec
cmp
mov
jl
sti
pop
xchg
mov
cmp
mov
pop
outs
add
mov
in
cmp
jge
mov
sar
test
je
mov
mov
add
scas
pop
xlat
std
out
hlt
or
push
mov
mov
push
adc
jg
mov
mov
add
inc
inc
jmp
lea
mov
lea
jl
xchg
push
push
mov
mov
adc
add
out
and
dec
push
mov
lea
pushf
add
xchg
aaa
xor
xor
push
mov
je
fdivr
push
add
mov
cdq
cmp
aas
mov
mov
cwde
adc
cwde
aas
push
push
add
adc
push
fs
lods
and
jp
pop
push
push
lea
dec
add
mov
test
shr
push
mov
or
dec
or
ds
push
les
repnz
xor
rep
adc
mov
or
std
sbb
dec
in
push
jmp
mov
push
dec
push
jo
push
(bad)
push
imul
mov
(bad)
mov
adc
push
call
add
cmp
je
push
xchg
int3
pop
arpl
pop
(bad)
aam
mov
xchg
push
mov
in
pushf
push
lea
and
imul
add
fdivr
pop
push
or
arpl
add
(bad)
lock
push
add
popa
in
arpl
mov
popa
push
lahf
out
int3
push
cmp
test
push
inc
mov
bound
aam
jb
push
or
sti
add
test
cmps
add
leave
jg
je
adc
stc
imul
add
in
xadd
or
test
jne
outs
fldenv
(bad)
lock
push
bound
mov
inc
or
push
cmp
sbb
in
out
add
cs
push
xchg
and
pop
jnp
sbb
jne
das
outs
test
cmp
sbb
push
xor
std
or
fimul
test
mov
loopne
adc
or
push
arpl
and
mov
mov
push
push
fmul
mov
inc
aam
(bad)
aas
xor
adc
shl
or
add
inc
or
push
or
push
add
push
or
xchg
out
push
or
test
fwait
clc
jg
jne
mov
inc
mov
in
loopne
cmp
adc
mov
js
das
call
mov
test
(bad)
test
je
mov
cmp
add
inc
in
fisttp
test
outs
mov
(bad)
mov
push
mov
mov
out
jne
loope
repnz
icebp
mov
fimul
mov
push
sub
pop
adc
dec
test
cwde
jb
rcr
xor
dec
shr
xor
mov
push
push
inc
dec
mov
pop
(bad)
cli
xor
lea
push
xor
retf
jl
call
mov
test
jle
lea
lea
inc
add
mov
xchg
aaa
and
inc
pop
imul
(bad)
add
out
bound
dec
mov
mov
call
jge
or
mov
jmp
or
xor
sub
(bad)
jmp
test
test
ret
icebp
xchg
fs
or
and
sbb
lock
shr
adc
bound
ror
sbb
sqrtps
add
adc
dec
test
jg
mov
push
push
mov
fwait
pop
adc
mov
mov
mov
dec
or
mov
aaa
lea
mov
dec
mov
rep
lea
mov
mov
jo
sbb
adc
or
aam
push
xchg
or
aam
push
or
fadd
add
pop
and
sub
rep
cmp
(bad)
mov
clc
adc
jg
outs
sub
ret
es
ret
push
fcomp
in
mov
dec
loope
loop
retf
pop
add
(bad)
dec
cwde
xchg
dec
and
dec
adc
rol
outs
mov
mov
add
repz
shl
cmps
je
adc
inc
dec
and
push
sub
sti
cmp
inc
or
movs
adc
loopne
and
sbb
jae
loopne
xor
inc
fdivr
mov
dec
or
jle
les
test
lea
stos
jmp
pushf
sbb
test
add
sar
inc
add
je
jge
xor
cmp
cld
jge
mov
mov
jnp
imul
ja
xor
rcl
or
mov
cmp
dec
or
stc
inc
dec
jmp
sbb
push
out
(bad)
aam
(bad)
dec
repz
stc
dec
fmul
mov
mov
dec
mov
loopne
xchg
or
mov
xchg
jecxz
xchg
adc
stos
aad
mov
and
test
je
mov
or
call
mov
add
fbstp
enter
not
and
out
sub
push
(bad)
mov
pop
cmp
pop
pop
div
adc
pop
add
and
je
mov
cmp
mov
push
clc
or
add
xor
pop
mov
pop
ret
push
ins
pusha
daa
mov
push
cmp
je
sbb
xor
add
lds
add
(bad)
add
pop
cld
aas
and
jnp
and
sub
mov
xor
outs
ret
add
push
out
mov
inc
aaa
push
ror
or
jne
data16
mov
dec
adc
add
ror
cmp
pmaxsw
ffreep
xchg
jmp
mov
mov
cmp
ja
push
ror
sbb
adc
adc
out
push
mov
push
cmp
jg
and
adc
add
pop
mov
mov
push
mov
jl
(bad)
or
out
mov
test
sub
ja
mov
and
ror
xchg
sahf
out
adc
clc
or
mov
push
lock
fcomp
sahf
inc
mov
popa
paddw
add
push
add
fld
fsubr
loopne
sbb
retf
jle
add
push
mov
test
je
mov
adc
jg
sti
inc
inc
jmp
fld
fstp
fnsave
add
or
adc
and
push
add
jl
nop
mov
(bad)
(bad)
push
ja
jb
popf
jo
push
(bad)
jmp
neg
mov
push
jns
or
pop
gs
fbstp
jg
add
add
rol
icebp
add
cwde
dec
and
les
mov
js
or
push
cli
paddw
arpl
pop
pop
or
rol
lea
stos
hlt
dec
repz
addr16
inc
add
bound
stos
jmp
ret
sbb
out
mov
sahf
ficom
mov
sub
dec
pop
cmc
add
add
test
jne
inc
scas
mov
(bad)
(bad)
jg
dec
sbb
rol
cmp
(bad)
cmp
jl
inc
add
cmp
jl
mov
retf
and
cdq
xchg
cmp
test
jl
inc
dec
cmp
ja
jmp
adc
add
retf
dec
push
mov
cmp
add
retf
adc
nop
adc
add
jnp
not
inc
aas
mov
sub
or
daa
mov
mov
jle
xchg
xchg
clc
push
nop
das
fdivr
inc
and
dec
inc
or
cmp
fist
or
jae
inc
test
fiadd
sub
test
test
and
add
rol
sbb
shl
add
cmp
jne
cmp
jae
cmp
(bad)
call
sub
push
cmp
jb
cmp
ja
add
mov
gs
mov
cmp
adc
mov
iret
jne
out
mov
rol
push
add
mov
or
jb
xchg
mov
cmp
ja
int3
dec
and
and
dec
xor
sub
fcomip
call
mov
test
cli
pop
and
mov
inc
mov
inc
jmp
test
es
xor
dec
lea
es
vandnps
inc
jne
sbb
push
call
mov
(bad)
mov
lds
add
sbb
xor
mov
mov
add
mov
aaa
adc
fild
jmp
pop
data16
inc
cmp
jne
pand
jae
fadd
cs
mov
mov
mov
jne
out
fild
pop
mov
pop
outs
push
or
fidiv
shl
aas
pop
pop
cmp
push
pop
sbb
test
pop
xchg
aas
push
and
mov
add
lea
xchg
arpl
jbe
sbb
xchg
dec
cmp
jl
sbb
push
jbe
pop
mov
push
scas
test
push
dec
and
in
xor
pop
or
mov
(bad)
dec
test
je
mov
mov
mov
cmp
add
mov
pop
sbb
jmp
mov
push
test
mov
cmc
or
mov
xor
(bad)
scas
mov
add
cld
stos
adc
ins
mov
pop
scas
inc
lods
test
jne
mov
je
inc
lds
mov
dec
lds
jnp
call
es
fadd
jne
test
je
mov
mov
jp
jmp
or
fucompp
mov
adc
mov
mov
sti
int
mov
push
mov
inc
sub
mov
pusha
adc
ss
inc
and
mov
inc
adc
cdq
mov
lock
sub
cmp
and
fwait
add
add
clc
(bad)
(bad)
mov
fst
jne
mov
mov
dec
cmp
jge
inc
mov
aas
idiv
cmp
cmp
dec
or
enter
(bad)
mov
inc
xor
sar
inc
or
add
jg
cs
inc
out
inc
add
(bad)
cmp
and
(bad)
je
push
jecxz
mov
mov
inc
mov
or
mov
inc
shl
jb
clc
or
arpl
mov
push
aas
xor
pop
push
outs
or
(bad)
inc
jmp
mov
push
sub
pop
and
cmp
jne
mov
xor
push
dec
mov
dec
dec
in
sbb
mov
cmp
je
dec
movs
mov
(bad)
xlat
dec
(bad)
dec
popa
daa
test
add
mov
jmp
cwde
pusha
clc
into
push
push
hlt
sbb
or
popf
add
ins
cmp
or
cli
cmp
and
call
inc
xchg
or
jle
mov
push
mov
cld
pop
add
add
inc
or
pop
dec
rol
mov
dec
pop
add
cmps
and
push
movsx
push
push
sbb
mov
cmp
(bad)
mov
inc
lea
imul
test
jle
push
lea
or
push
and
inc
and
push
mov
lea
rcl
out
mov
mov
retf
in
jg
jne
mov
cmp
add
add
inc
add
fmul
mov
out
int3
mov
scas
out
pop
add
js
push
xor
aas
adc
push
or
icebp
xchg
shl
cmp
jnp
mov
ucomiss
add
inc
lods
mov
cmp
inc
and
ins
jp
inc
mov
mov
scas
inc
jne
ins
aaa
push
lock
mov
mov
mov
xor
pop
cmp
pusha
jmp
xor
xor
(bad)
sbb
cmp
sbb
cmps
scas
sbb
push
call
ret
imul
and
(bad)
lea
ret
jle
push
lea
or
loopne
dec
cmp
inc
push
adc
retf
test
push
ins
and
mov
mov
out
cmp
or
jmp
jmp
add
shr
push
xor
shl
lods
mov
add
mov
sub
add
jle
jae
push
lea
adc
ret
lahf
or
and
or
sbb
xchg
mov
mov
aas
mov
call
adc
mov
je
sti
out
sub
inc
mov
and
mov
adc
jmp
fnsave
js
mov
pushf
aam
add
sub
and
cmp
jl
push
mov
mov
add
add
inc
sbb
cmp
push
dec
cmps
or
or
inc
jne
jne
jge
mov
push
push
push
mov
ret
xchg
jmp
add
call
pushf
adc
sub
adc
stos
(bad)
pop
inc
and
mov
and
xchg
or
(bad)
sbb
jg
test
add
push
adc
adc
and
std
mov
inc
push
push
jno
cmc
or
and
cmp
mov
inc
xor
rcl
sbb
jno
jne
out
mov
fnsave
mov
dec
test
cmp
or
sub
inc
xchg
xchg
sbb
mov
xor
or
inc
adc
mov
sub
adc
into
pop
mov
xor
nop
scas
adc
jo
movs
sub
pop
mov
lock
inc
or
mov
jmp
add
mov
ins
and
cmp
inc
push
repz
inc
pusha
pop
adc
mov
shl
xor
call
xor
mov
xchg
cs
enter
or
adc
mov
push
adc
sub
mov
adc
sbb
cli
push
rcl
popf
hlt
or
into
dec
xor
pop
test
movs
adc
mov
mov
in
jo
jmp
adc
js
mov
in
sahf
(bad)
dec
add
fistp
cli
mov
pop
mov
inc
adc
jl
test
out
loop
jl
add
adc
jbe
or
icebp
and
enter
or
(bad)
jmp
cmp
jae
adc
pop
outs
(bad)
cmp
or
push
inc
or
jl
pop
std
fld
add
cmp
jl
jmp
jne
cmp
jns
pusha
add
inc
int3
push
mov
int
pop
inc
mov
ret
sub
cmps
scas
mov
push
sbb
scas
dec
xchg
inc
add
test
mov
adc
push
std
jmp
push
loopne
xchg
mov
inc
lock
and
cmp
push
inc
xor
adc
pushf
mov
enter
jo
cmp
rcr
(bad)
or
aad
clc
push
xor
add
push
add
xor
jne
sbb
or
mov
rcl
ins
mov
mov
cmp
je
xor
adc
sahf
sti
adc
jmp
xor
jno
push
dec
je
mov
mov
cli
jmp
adc
adc
jne
xor
jl
jmp
mov
inc
aas
(bad)
inc
les
jp
cmp
jge
mov
sub
push
mov
inc
or
cwde
call
sbb
xchg
retf
cli
mov
push
inc
cmp
test
test
xchg
mov
lea
push
jge
inc
cs
test
inc
out
sbb
out
dec
test
pusha
adc
sahf
mov
out
or
or
sbb
sbb
mov
int
push
mov
push
hlt
loope
aam
pop
pop
out
lods
into
jne
enter
dec
lea
daa
push
adc
imul
nop
cmp
jl
and
adc
inc
add
sqrtps
mov
xcrypt-ecb
cmps
jne
repz
xchg
push
push
push
outs
ret
retf
xor
push
(bad)
shr
ja
push
pop
adc
test
xor
push
xor
push
jl
or
out
xlat
jne
and
mov
sbb
inc
add
ror
ds
int
push
nop
out
adc
mov
or
jl
mov
jo
push
(bad)
dec
mov
ss
(bad)
jmp
push
neg
xchg
adc
inc
cmp
push
lock
or
movs
adc
fcom
sub
adc
js
ss
mov
mov
sbb
mov
xor
lahf
fdiv
not
cli
inc
or
push
mov
push
push
test
push
mov
je
push
mov
imul
or
mov
jmp
popa
add
hlt
sbb
mov
mov
push
or
scas
add
inc
adc
lock
sti
mov
fisttp
pop
pop
mov
clc
sbb
sub
jl
cmp
lock
cmp
clc
fwait
add
cmps
je
cmp
call
clc
push
adc
pusha
bound
xor
push
mov
inc
loope
inc
pop
lods
add
nop
and
inc
push
push
push
inc
cdq
sub
add
add
jle
push
and
sub
inc
and
icebp
cmp
jle
nop
in
pop
and
jno
mov
mov
mov
mov
lods
int
lea
in
fcomip
int
leave
jle
lea
mov
add
iret
je
adc
ret
mov
cld
ffreep
sbb
jae
inc
or
mov
dec
mov
mov
adc
push
cmp
and
ds
loop
dec
sti
inc
or
into
mov
out
push
cli
repnz
shl
into
add
jb
cs
cs
in
ins
jb
adc
add
xor
jbe
call
add
dec
jne
aaa
and
xor
add
sub
inc
xchg
scas
int3
add
mov
add
or
shl
xor
push
sti
or
dec
ret
jmp
and
xchg
sbb
pop
xchg
test
aam
(bad)
and
adc
mov
inc
sbb
and
xor
mov
sub
xlat
mov
adc
scas
pusha
add
nop
jle
inc
cmp
jge
push
sbb
xchg
xor
clc
and
dec
adc
sar
sbb
cmp
jle
mov
dec
int3
pushf
push
adc
rcl
jo
jae
retf
sbb
inc
call
pop
loopne
lock
ins
adc
mov
call
mov
push
add
inc
gs
mov
xchg
cmp
sub
cmps
sbb
adc
inc
adc
cmp
mov
popf
mov
push
adc
jne
clc
pop
xchg
mov
popa
mov
add
stos
jecxz
sub
dec
pop
sub
xor
popa
mov
dec
mov
in
add
fnstenv
fld
mov
fiadd
cmp
test
cmp
dec
xor
(bad)
sub
inc
mov
inc
test
paddq
cdq
jp
dec
jmp
cli
cdq
mov
into
sub
clc
xchg
sbb
ror
add
mov
inc
movups
mov
jle
scas
ret
adc
dec
mov
sbb
shl
dec
inc
xor
retf
pusha
pop
lock
push
dec
and
and
mov
pop
xchg
mov
push
mov
add
lock
inc
(bad)
jg
pop
inc
and
push
loopne
pop
pusha
xor
arpl
test
cmp
test
pop
loop
jno
inc
inc
mov
lock
mov
and
mov
dec
mov
adc
sub
dec
xchg
rcl
adc
inc
daa
cmps
jb
mov
sbb
push
sub
jecxz
mov
push
xor
js
pop
and
and
mov
jns
mov
ret
adc
(bad)
out
or
movsx
cmp
shufps
fimul
(bad)
jge
and
add
add
xchg
jmp
loopne
out
mov
inc
mov
and
idiv
jge
cmp
and
or
rol
push
test
mov
inc
and
daa
xor
dec
or
ret
cmps
dec
push
cwde
jo
and
mov
lods
adc
shl
jne
stos
retf
mov
stos
pushf
outs
pop
xor
sbb
cmp
mov
nop
and
mov
mov
mov
push
or
leave
in
or
mov
push
mov
retf
sbb
add
popa
mov
sbb
mov
mov
test
out
fiadd
push
inc
cli
(bad)
push
adc
jns
sub
adc
inc
rcl
push
cmp
into
pusha
fiadd
xor
inc
call
dec
xchg
imul
add
mov
pusha
sub
add
rep
xor
mov
adc
loopne
in
mov
bsr
mov
dec
jl
mov
push
std
or
popa
sub
add
add
xor
mov
pop
mov
sbb
sub
push
push
in
ret
pop
fnsave
lods
ins
dec
fst
cmp
dec
add
push
mov
fstp
pusha
pop
test
cmp
hlt
xor
outs
adc
jbe
and
mov
dec
and
cld
mov
cmp
call
push
je
retf
xor
adc
fmul
ret
adc
addr16
or
lea
ror
inc
inc
and
idiv
shl
mov
int3
popf
ror
dec
mov
add
cmp
pop
outs
push
or
push
pop
sahf
dec
mov
add
test
das
imul
lea
movsx
sub
mov
sub
dec
mov
add
retf
into
call
inc
push
inc
dec
push
leave
cmp
xchg
ror
mov
inc
fs
dec
out
add
ja
mov
adc
icebp
xchg
sub
(bad)
out
inc
inc
sub
lea
push
call
push
les
xor
cwde
fwait
pusha
cmp
sbb
out
loopne
mov
push
and
sbb
sbb
push
cmps
mov
adc
push
inc
xor
adc
pusha
cmp
scas
jmp
mov
inc
ins
js
add
xor
or
mov
aas
push
add
pop
je
or
jge
pop
or
or
jb
js
mov
mov
clc
add
jo
inc
nop
push
or
push
push
cmp
inc
scas
or
push
retf
or
inc
hlt
sbb
add
or
in
jp
sbb
push
mov
arpl
jo
test
and
sbb
nop
leave
and
jae
pop
mov
loopne
push
push
add
mov
shl
sub
cmp
lds
jmp
mov
xor
push
jle
xchg
jne
outs
sbb
mov
dec
call
inc
add
push
sub
adc
jne
dec
out
adc
pop
and
cmp
je
cmp
jge
loope
jo
mov
push
add
adc
mov
and
push
adc
das
mov
add
pop
repnz
ficom
inc
jne
mov
sbb
jmp
cmp
je
or
mov
stc
jl
and
and
clc
jns
inc
ret
sub
arpl
sbb
jnp
mov
mov
push
out
cmp
(bad)
mov
add
loopne
mov
adc
and
pusha
sub
shl
popf
push
jne
cmp
add
dec
mov
outs
test
dec
sub
cmps
jne
inc
push
dec
push
inc
pop
sbb
sub
ss
sar
push
xchg
or
dec
fwait
repnz
sbb
sbb
pop
int
mov
enter
addr16
je
cmp
je
mov
repz
dec
or
das
xchg
jae
sbb
mov
and
std
ds
lock
jmp
mov
mov
loop
pop
pop
jne
adc
mov
lea
add
std
dec
mov
int
lock
(bad)
xchg
push
mov
imul
mov
clc
push
mov
push
mov
mov
or
pop
ficomp
fs
aaa
or
jecxz
(bad)
je
dec
pop
sub
jns
jne
jg
cld
aaa
imul
add
lods
mov
push
add
or
jae
sbb
jb
imul
add
leave
inc
mul
inc
cmp
cli
pop
inc
jnp
mov
xor
call
add
ins
mov
xor
sbb
clc
xchg
lahf
sub
mov
test
cmp
cld
test
inc
add
inc
inc
shl
add
cmp
adc
add
push
ja
test
call
add
je
sub
and
sub
ret
scas
ret
aaa
lods
call
push
push
repz
ficom
ror
sbb
dec
and
out
mov
dec
cmc
inc
add
inc
sbb
es
icebp
fwait
cmp
inc
and
add
fwait
sub
ret
les
mov
inc
jle
fs
je
push
aaa
add
mov
es
mov
retf
adc
xor
cdq
dec
add
push
dec
push
pop
mov
push
push
ss
inc
ror
div
xor
dec
adc
test
jmp
add
add
sub
xchg
sub
xchg
pop
push
sub
sub
adc
fadd
mov
push
push
sbb
adc
adc
cmp
dec
xor
pop
adc
or
daa
dec
pop
arpl
push
arpl
inc
out
cs
and
push
in
inc
add
xor
pop
pop
sar
mov
mov
or
adc
push
push
push
std
ds
and
int
dec
cld
or
pop
push
inc
push
push
push
call
push
movs
pop
jno
adc
call
add
and
cmp
mov
push
xor
dec
and
push
push
call
push
inc
scas
ss
test
pop
add
pop
cmp
sub
add
dec
push
jle
cmp
enter
rcr
mov
mov
xchg
sub
loope
neg
popf
test
jo
pop
xlat
inc
stos
ret
out
enter
add
xor
mov
mov
add
or
js
(bad)
mov
test
dec
jne
lea
imul
jmp
lea
int
clc
sbb
add
jne
lea
fwait
(bad)
fwait
xchg
je
mov
test
je
jmp
div
lea
out
jmp
ret
mov
push
ja
loope
lahf
cmp
je
mov
popa
push
sbb
add
ret
jecxz
fsub
pop
adc
into
(bad)
sub
icebp
inc
cld
aaa
pusha
mov
mov
mov
lea
es
add
pop
and
add
push
bound
and
add
push
jo
dec
add
sar
fs
push
jmp
mov
shr
dec
aaa
cmc
xchg
inc
dec
pop
add
mov
push
push
sti
pop
adc
test
pop
xchg
int3
pusha
or
aaa
inc
dec
repz
mov
xchg
lea
ret
adc
cli
push
lea
mov
fadd
sub
jp
test
adc
mov
fld
pop
test
inc
mov
das
pop
add
arpl
test
pop
loop
add
mov
scas
or
add
add
rol
inc
scas
fsub
inc
rol
or
or
ror
rcl
mov
cmp
push
push
(bad)
sub
adc
xor
pop
mov
stc
pop
je
push
sti
inc
cmp
push
push
push
push
call
adc
inc
test
inc
jmp
pop
rcl
sub
fdiv
push
push
mov
push
push
aaa
push
call
add
int
push
loope
(bad)
data16
mov
cmp
mov
mov
and
ins
(bad)
pop
pop
push
xor
mov
ss
add
jo
add
jg
int
add
mov
es
retf
xor
aas
sbb
add
mov
jo
and
dec
sbb
push
cwde
push
push
fwait
mov
and
push
add
ret
add
ss
sub
int
add
je
mov
dec
pusha
scas
daa
sbb
xchg
arpl
push
adc
mov
(bad)
in
mov
popa
push
sti
add
and
(bad)
push
add
sub
(bad)
jae
ds
jmp
xchg
add
sbb
mov
inc
sbb
stc
rol
pop
inc
lea
push
xchg
add
(bad)
xor
or
adc
mov
dec
and
xchg
dec
imul
add
push
jecxz
adc
sar
sub
sub
mov
and
pop
xchg
lock
ja
mov
call
push
mov
lods
call
shr
xor
adc
push
adc
mov
inc
sub
mov
cmp
push
add
mov
xchg
enter
jo
(bad)
mov
jge
add
shl
or
add
push
push
aam
shl
dec
push
and
cmp
mov
cmp
add
push
vpunpckhdq
sahf
sub
or
adc
lea
sub
sub
test
xchg
mov
aas
add
test
xchg
fwait
and
push
ud0
jmp
mov
push
push
popa
add
mov
shl
push
add
pop
inc
pop
inc
cld
pop
in
mov
push
push
sbb
inc
and
sub
fild
sub
mov
cmps
call
xchg
scas
outs
mov
pop
in
cmp
loopne
pop
inc
and
push
sti
aas
jmp
mov
les
jbe
pop
mov
mov
adc
enter
test
mov
dec
mov
dec
pop
sub
add
xlat
mov
push
sar
push
jmp
push
lea
push
mov
push
add
cmp
push
push
(bad)
sub
inc
push
push
add
push
lock
sbb
inc
sub
adc
push
(bad)
push
call
aaa
adc
nop
jl
imul
aad
push
dec
xor
mov
push
xchg
xchg
inc
gs
adc
adc
or
call
and
scas
dec
mov
inc
mov
cmp
cmp
inc
jne
and
mov
cmp
inc
enter
jns
add
mov
ret
mov
cwde
or
test
fst
push
add
mov
shl
adc
or
mov
add
inc
inc
pop
xlat
cmps
arpl
je
ret
adc
ret
nop
mov
xor
and
das
dec
fwait
or
sub
adc
push
dec
sar
(bad)
and
add
or
cmp
jle
push
ss
ror
mov
call
or
(bad)
xchg
xor
xlat
sbb
or
cmc
adc
std
add
adc
daa
adc
aam
adc
mov
mov
inc
adc
hlt
aad
adc
push
cmp
push
iret
cmp
sbb
pop
test
out
adc
sbb
enter
retf
add
push
sub
push
add
push
sbb
add
push
rcl
add
inc
pop
sbb
or
cmp
je
les
sbb
or
dec
test
mov
je
cmp
inc
outs
add
loop
push
inc
cmp
cmp
(bad)
mov
and
lea
xor
repz
adc
push
push
push
(bad)
jg
push
adc
adc
and
cs
lds
mov
inc
add
pop
jl
das
pop
add
cmp
test
ja
and
ja
ja
lea
pop
and
mov
sbb
or
and
add
mov
push
push
inc
data16
adc
push
xor
adc
mov
xchg
or
push
sub
scas
sub
jmp
add
add
mov
xchg
test
adc
or
ret
dec
jae
sbb
sbb
jl
dec
mov
mov
mov
jge
inc
and
jmp
fsub
sub
add
pop
adc
retf
mov
cmps
mov
push
mov
dec
adc
test
je
jecxz
fild
mov
je
mov
cs
add
ret
sub
dec
add
or
mov
push
push
push
repz
outs
cmp
popa
test
mov
(bad)
push
adc
ret
jne
mov
mov
jmp
adc
push
jb
add
adc
mov
push
add
mov
je
fwait
mov
push
push
ds
jns
push
sbb
xchg
push
push
adc
pop
sar
mov
aas
jl
dec
pop
pop
mov
push
sub
push
push
inc
out
pop
mov
int
fwait
out
(bad)
(bad)
(bad)
out
push
or
(bad)
pop
es
xor
or
add
mov
outs
xor
outs
mov
sub
cmp
or
and
push
dec
add
dec
or
inc
jae
or
xor
lock
cdq
jnp
mov
sub
push
inc
pop
movs
and
lahf
js
push
or
mov
add
and
clc
xor
mov
int3
jne
cld
aas
jo
push
push
xchg
inc
stos
cld
(bad)
inc
in
or
mov
inc
in
add
mov
stos
test
mov
jbe
test
lds
test
scas
cwde
lahf
or
mov
sbb
das
add
mov
into
add
mov
pop
push
iret
dec
add
bound
jns
jmp
das
ret
scas
addr16
fiadd
xor
mov
mov
mov
mov
mov
mov
add
cmp
adc
cmp
mov
mov
sbb
add
add
push
inc
add
or
mov
lds
xor
push
dec
or
sub
add
mov
adc
repz
add
add
into
or
adc
mov
mov
or
icebp
add
pop
push
outs
andps
shl
push
xlat
(bad)
call
jl
and
fistp
sbb
addr16
(bad)
sub
cmp
inc
push
scas
add
test
jne
mov
sbb
imul
cmp
xchg
clc
inc
aas
cmp
jge
das
jmp
cwde
mov
mov
sti
sbb
mov
cmp
inc
shl
adc
sbb
ret
test
add
mov
mov
pusha
out
mov
mov
cmp
jle
sub
hlt
scas
call
je
adc
fcom
sahf
add
push
inc
mov
mov
mov
fild
mov
fwait
lods
xchg
cs
cwde
inc
stos
out
(bad)
sub
mov
cli
mov
add
mov
out
push
mov
mov
mov
sub
pop
sbb
clc
add
mov
call
adc
leave
mov
pop
and
xor
pop
mov
sbb
xor
xchg
adc
cmp
ror
iret
mov
and
test
in
sub
pushf
loopne
movs
inc
push
mov
mov
push
push
add
in
adc
mov
leave
into
cmp
std
mov
mov
mov
pop
dec
dec
mov
push
inc
jmp
mov
push
push
xor
jmp
sbb
add
jecxz
mov
popf
test
test
add
jmp
test
jne
mov
enter
test
jne
inc
fwait
lods
add
ja
pop
mov
je
iret
ret
xchg
or
fsub
mov
jp
xchg
pop
jbe
out
and
push
cwde
push
hlt
add
push
push
sbb
test
push
push
call
sbb
ret
fcom
add
ds
push
sub
imul
mov
dec
cli
dec
push
inc
nop
mov
push
sbb
push
pop
popf
adc
and
mov
das
mov
lock
movs
jmp
xor
xor
xor
sub
and
push
cmp
pop
jg
and
fwait
rol
ret
push
bound
xchg
sbb
push
mov
cmp
icebp
xlat
arpl
dec
add
mov
out
(bad)
std
adc
je
mov
mov
and
mov
leave
cmp
pop
je
mov
imul
xchg
sbb
lahf
push
push
cdq
call
fdiv
inc
outs
pop
add
pop
das
add
mov
mov
cmp
jne
(bad)
or
add
dec
push
adc
idiv
shl
jne
ret
pop
xor
or
mov
or
adc
adc
or
ffreep
arpl
xchg
mov
push
inc
cmp
rol
pop
xor
or
cmp
and
push
aas
or
dec
jns
mov
mov
ins
call
sbb
add
add
or
mov
loope
and
neg
push
js
push
es
push
test
ds
mov
jle
xchg
mov
dec
pop
ret
into
jmp
call
or
mov
push
and
or
vmovntpd
add
sbb
popf
inc
int
add
sbb
cwde
mov
push
(bad)
jmp
mov
je
lods
movs
fldenv
inc
and
mov
jne
cwde
inc
adc
cmps
or
es
cmp
push
fld
clc
or
pusha
sbb
jno
cmp
aad
dec
push
mov
sbb
(bad)
out
push
push
mov
enter
or
ds
and
xor
retf
fwait
popf
loopne
inc
les
mov
and
je
sahf
xor
sub
stc
dec
pop
mov
push
mov
push
cdq
dec
or
outs
jbe
popa
daa
dec
adc
inc
pop
pop
push
lahf
sub
popf
dec
xchg
inc
push
jne
loope
test
jmp
push
push
pop
adc
call
(bad)
loop
fmul
call
xchg
mov
repnz
inc
push
push
jne
jo
mov
mov
mov
push
and
jnp
push
xor
xor
mov
in
dec
inc
cmp
adc
cmp
ret
call
cmp
sub
inc
movs
xchg
add
xchg
rcr
jo
(bad)
jb
sub
out
pop
cmc
or
je
js
and
fsubr
push
pop
mov
test
fbld
push
mov
and
add
popa
push
inc
pusha
add
sub
adc
and
iret
adc
into
retf
sbb
icebp
cmps
pop
cmps
xor
jl
cmp
fcomp
sahf
test
and
movs
fsub
add
adc
push
pusha
and
push
inc
bound
and
push
pop
push
and
push
inc
inc
mov
cmps
push
sysenter
add
inc
movs
sub
loopne
mov
ret
loope
xor
stos
shr
es
iret
cmp
test
cmp
stos
mov
clc
faddp
push
adc
test
out
xlat
cmp
sub
add
mov
loopne
clc
jnp
lea
adc
loop
shl
jmp
adc
dec
out
cdq
or
mov
inc
push
dec
sub
cmp
jbe
push
jmp
mov
fld
cmp
jne
cmp
test
cld
dec
inc
popf
test
retf
pop
and
cmp
mov
sbb
mov
cmp
push
adc
inc
mov
xchg
adc
add
xor
push
add
inc
jmp
adc
sub
(bad)
jmp
mov
adc
fisttp
and
mov
mov
mov
sub
jnp
jle
imul
cmp
jne
add
test
stos
add
jge
inc
jne
sub
test
(bad)
inc
aaa
je
cmp
jne
cmp
jne
xor
xor
mov
xor
mov
xchg
mov
mov
mov
mov
test
je
add
inc
shl
mov
or
mov
sbb
aas
test
or
lea
cmp
jg
fnstsw
add
mov
call
ret
mov
mov
lea
xchg
lds
adc
test
or
or
inc
sub
lea
push
adc
in
mov
jbe
je
dec
mov
mov
sub
loopne
fcom
cmp
js
dec
sbb
aad
loope
bswap
mov
outs
dec
and
mov
out
jg
xchg
mov
mov
cmp
mov
dec
popf
sar
mov
mov
loopne
mov
fdivr
inc
push
in
xchg
sahf
mul
xor
stc
test
xor
sbb
in
and
(bad)
mov
fist
cmp
push
je
mov
(bad)
fdivrp
je
lds
pop
adc
(bad)
mov
xchg
mov
lahf
(bad)
out
mov
cmp
ja
xchg
push
cmp
jmp
jne
inc
sub
cmp
in
inc
ja
lock
jne
das
nop
push
inc
and
mov
pop
or
inc
mov
fld
aas
mov
mov
adc
add
mov
cld
mov
xlat
mov
cmp
mov
je
mov
call
push
add
cli
inc
add
mov
icebp
fstp
cmp
inc
jg
cmp
(bad)
ror
rcl
or
es
or
arpl
cmps
mov
pop
push
mov
gs
push
add
add
pusha
je
popa
xchg
ins
pop
jg
sbb
pop
pop
lds
inc
inc
mov
sbb
jae
mov
jmp
sbb
cdq
and
push
mov
push
cmp
stos
pop
outs
(bad)
ja
js
rcr
out
lods
or
or
(bad)
std
aaa
inc
add
inc
add
aad
add
add
cs
add
pop
add
mov
add
dec
jp
add
dec
add
add
add
mov
ret
aas
(bad)
push
mov
into
mov
xor
or
xor
dec
mov
mov
cmp
mov
data16
popa
adc
mov
adc
dec
push
or
adc
(bad)
fwait
out
jge
ins
mov
mov
pop
add
xor
or
scas
rol
(bad)
adc
sub
push
mov
mov
mov
cmp
clc
retf
push
and
lea
lea
xor
xor
or
inc
adc
add
(bad)
pop
add
push
dec
xchg
les
leave
sub
in
loop
dec
add
neg
cmc
sub
fdivr
mov
mov
add
mov
adc
pop
sbb
and
cmp
pop
add
pop
jmp
sahf
cmp
rol
and
or
jg
ds
sub
ins
add
add
inc
shl
retf
mov
cmp
cmp
mov
xchg
sti
fdivr
pop
cmp
rol
mov
mov
or
mul
pop
mov
mov
mov
mov
mov
out
(bad)
fcomp
mov
pop
mov
jne
jmp
mov
les
je
mov
adc
add
aas
dec
pusha
push
adc
(bad)
fdivrp
cmp
jle
mov
inc
mov
mov
std
mov
push
mov
mov
inc
cmp
jl
push
and
inc
lock
pop
sub
and
adc
pop
inc
mov
or
push
inc
mov
mov
mov
mov
mov
(bad)
adc
mov
pop
into
(bad)
out
sbb
inc
in
inc
mov
aaa
inc
mov
mov
mov
outs
or
pop
push
shl
push
cmp
add
jecxz
cmp
retf
cmp
and
mov
shr
mov
mov
mov
sub
mov
lock
dec
jle
mov
xor
cmp
cmp
inc
add
sti
mov
mov
mov
sub
add
and
js
fstp
mov
cmp
jle
adc
call
sub
dec
or
mov
fwait
sub
xor
dec
dec
sub
sbb
out
mov
jb
mov
imul
fstp
mov
cmp
ja
mov
pop
dec
sub
rcr
pop
inc
icebp
mov
sub
mov
sar
mov
sbb
jmp
sub
add
inc
les
call
out
ds
shl
js
jmp
cmps
(bad)
out
or
add
mov
mov
cmc
jecxz
sub
mov
dec
in
ins
idiv
jmp
test
jne
dec
dec
xor
pop
jmp
pop
fsubr
fild
push
inc
mov
sub
mov
fs
cld
add
stos
dec
and
ror
gs
retf
and
(bad)
adc
and
out
mov
add
aad
pop
add
dec
or
pop
sbb
and
cmp
or
add
jb
fld
cli
fs
mov
sbb
or
cs
mov
dec
cmp
mov
jb
mov
mov
test
jmp
icebp
mov
or
pop
or
pop
ret
xor
mov
jmp
es
sbb
(bad)
add
sbb
outs
mov
inc
ins
mov
xor
neg
mov
rol
sub
mov
shl
cmp
(bad)
mov
loope
icebp
and
or
add
cmp
jmp
jmp
mov
xchg
fisub
mov
xchg
cmp
mov
mov
mov
shl
jmp
arpl
fsub
xchg
and
lea
shl
mov
mov
(bad)
inc
fmul
call
(bad)
adc
sub
loopne
ror
and
clc
dec
add
inc
cmp
inc
js
cmp
inc
and
jne
mov
mov
add
inc
push
or
add
clc
add
out
xor
add
adc
call
sar
mov
mov
ins
mov
imul
aas
push
aad
mov
add
mov
mov
jmp
out
cmp
push
mov
cmp
jne
mov
imul
jl
or
jae
xor
jl
mov
jg
inc
inc
aaa
cmp
ja
sub
cmp
jge
ror
mov
xor
inc
add
push
add
out
cmp
cmp
jae
and
mov
cmp
jge
add
dec
xchg
jo
adc
inc
mov
stc
sbb
enter
stc
das
in
out
xchg
jle
cmp
jl
inc
dec
pop
add
and
add
mov
dec
mov
jne
(bad)
scas
push
mov
out
jl
pop
and
dec
scas
dec
ins
add
inc
mov
out
in
cs
or
pop
cmp
icebp
mov
or
cld
push
inc
add
ds
enter
sub
jl
mov
arpl
sar
ret
mov
sbb
jg
ret
pop
add
das
ret
ret
test
jg
add
mov
mov
and
xlat
push
inc
or
sbb
inc
(bad)
mov
push
add
sub
add
adc
cmp
cmp
jbe
pop
call
bound
adc
dec
cmp
push
mov
push
add
shl
jno
cmp
jmp
or
scas
pop
cld
mov
mov
push
xor
pop
mov
and
xor
aam
mov
shl
push
mov
lods
jne
add
adc
adc
push
pop
jl
por
cmp
add
(bad)
sbb
jmp
ins
sbb
cmp
adc
sbb
xor
xor
pop
pop
and
jecxz
pop
cmp
jne
mov
fmul
adc
ffreep
fiadd
leave
adc
add
pop
jb
out
movs
fistp
pop
or
pop
out
aaa
dec
shl
icebp
inc
add
leave
jnp
inc
jmp
sbb
sbb
mov
adc
cld
cmp
sub
int
add
push
add
sub
out
mov
lock
mov
dec
cmp
push
(bad)
and
ret
push
and
mov
inc
sbb
pop
and
rol
and
cdq
or
loopne
push
jne
pusha
add
mov
sbb
outs
push
jle
loopne
jmp
(bad)
mov
fild
jne
les
and
(bad)
mov
dec
push
push
push
push
push
push
iret
push
loopne
inc
mov
int
push
mov
xchg
in
push
xor
lds
test
adc
or
mov
or
sar
cli
add
pushf
test
fwait
or
mov
inc
test
je
mov
scas
popa
add
jg
mov
mov
test
je
cmp
adc
cmps
das
inc
add
cmp
js
loop
jne
push
add
stos
dec
lds
loopne
and
jmp
cmp
push
cmp
add
push
mov
jmp
mov
or
and
add
pop
mov
je
popf
sub
lods
push
sub
jbe
mov
pop
std
pusha
or
sub
inc
cwde
test
retf
push
or
xor
cmp
mov
(bad)
mov
push
mov
mov
into
rol
aaa
add
enter
push
shl
or
ror
sub
cmp
jmp
ret
pop
loopne
aad
adc
lea
mov
in
xchg
cli
xchg
(bad)
lea
mov
and
(bad)
jg
(bad)
mov
cmp
pop
jle
sub
pop
dec
pop
or
fst
inc
sbb
adc
ret
arpl
pop
jge
xchg
mov
mov
mov
mov
add
cmp
cmp
out
loop
in
mov
mov
xor
mov
fild
mov
push
fwait
adc
and
bound
and
add
add
jmp
je
or
adc
cmc
or
adc
loope
leave
pop
add
(bad)
(bad)
dec
mov
shl
add
test
jle
mov
mov
mov
add
add
dec
jne
pop
mov
pop
aaa
fld
push
inc
mov
or
pop
xor
call
ss
add
jmp
inc
fisubr
in
adc
or
push
mov
push
sub
fstp
inc
pop
call
fadd
pop
dec
add
or
fiadd
mov
call
test
cmp
cmp
sbb
jl
push
add
and
push
and
add
inc
or
sbb
(bad)
sbb
adc
ret
pop
popa
out
enter
cmp
je
mov
jmp
enter
cmp
jae
mov
cdq
adc
ret
dec
and
push
push
int3
mov
inc
sbb
jmp
inc
cmc
ds
pop
inc
jo
cmp
adc
push
loopne
adc
or
pop
out
fild
push
call
inc
jmp
inc
iret
cwde
sub
or
add
push
sbb
lock
push
pusha
dec
xor
add
movs
ficomp
push
pop
sbb
sub
inc
fs
sti
pop
fdiv
push
sbb
lds
push
xchg
or
lahf
add
add
mov
ja
icebp
daa
or
push
push
adc
push
add
outs
add
add
cwde
sub
inc
fmul
neg
and
xor
das
call
and
xor
xor
xor
lea
sti
(bad)
jns
mov
mov
push
push
xchg
jne
sub
or
jne
jmp
and
sbb
mov
test
rcr
jne
aaa
lea
(bad)
fild
sub
cmp
jb
test
je
test
je
test
jbe
inc
push
fst
push
sbb
cmps
and
loope
stos
add
mov
inc
mov
and
adc
xchg
xor
jmp
mov
ret
mov
push
mov
push
repnz
mov
test
or
sub
dec
push
sub
inc
test
add
idiv
not
cmp
push
push
mov
jmp
fwait
mov
and
push
inc
sub
adc
les
(bad)
mov
xchg
and
inc
adc
clc
push
jg
add
push
call
and
push
inc
add
rol
out
or
add
in
sub
add
mov
mov
push
push
push
push
sbb
inc
and
mov
jmp
adc
lock
cmp
jae
pop
mov
adc
lock
jbe
and
inc
stos
pop
(bad)
mov
jmp
sub
sar
and
mov
xor
call
cli
aaa
mov
call
je
lds
inc
mov
add
int3
and
pop
mov
mov
adc
push
xor
mov
in
loop
inc
addr16
mov
sub
mov
lea
pop
mov
std
sbb
xchg
inc
cld
lea
mov
inc
push
js
sub
into
in
dec
shl
xor
add
lock
xor
sub
sub
and
inc
pop
xchg
mov
je
inc
and
shl
cmp
jae
cld
sub
cld
cmp
(bad)
mov
sub
sub
cmp
mov
mov
jne
lea
adc
cmp
mov
lock
add
cld
pop
mov
inc
pop
dec
jmp
loop
inc
mov
dec
adc
xchg
push
in
mov
cs
push
mov
fbstp
lea
daa
push
call
add
out
ss
je
dec
je
add
test
add
(bad)
adc
(bad)
xor
mov
xchg
sbb
test
jle
mov
mov
shl
add
test
je
mov
push
cmps
push
call
(bad)
(bad)
jle
inc
or
(bad)
cmp
push
jmp
test
jle
mov
mov
mov
push
nop
(bad)
rol
test
cwde
rep
mov
mov
add
dec
push
mov
call
mov
or
jne
push
(bad)
call
dec
(bad)
jge
push
dec
mov
mov
mov
stc
mov
jp
add
int3
je
adc
mov
sbb
dec
cmp
inc
sub
ds
mov
cmp
mov
mov
cmp
push
fnstsw
mov
add
inc
jp
loop
add
or
dec
or
add
mov
add
scas
mov
or
add
iret
and
add
cmp
outs
mov
test
pop
mov
and
(bad)
push
aas
inc
and
xor
jg
out
sub
mov
sub
nop
cmp
jae
cmp
loop
(bad)
push
jmp
lea
mov
lea
cmp
je
scas
xor
mov
lea
fcom
pop
mov
aam
int
cmp
fbld
add
or
mov
adc
fwait
inc
add
int3
mov
mov
push
push
sti
(bad)
mov
push
add
(bad)
lea
push
call
mov
ret
mov
ja
or
mov
cmps
adc
jle
test
sbb
adc
mov
jbe
pop
jbe
jmp
mov
ja
ret
mov
cmp
xor
adc
cmp
stos
scas
nop
mov
inc
jg
sub
pusha
and
adc
sbb
sahf
mov
ficom
je
stos
add
xor
add
xchg
mov
jne
adc
and
mov
inc
or
push
je
test
je
test
cld
fld
dec
add
jne
test
mov
jbe
sub
and
pop
or
mov
mov
jg
lea
hlt
push
add
fisttp
mov
sub
sub
add
dec
cmp
mov
es
cmp
sub
add
test
cli
pop
add
dec
or
mov
(bad)
mov
jne
xor
mov
mov
pop
lea
mov
pop
fisttp
mov
pop
sub
inc
test
pop
lds
cld
in
pop
mov
lea
ror
aaa
fmul
sub
jge
mov
mov
mov
add
cmp
jne
dec
je
aam
clc
or
sub
je
cmp
push
mov
fild
dec
jne
mov
mov
cmp
pop
push
mov
cmp
retf
xor
ret
mov
adc
mov
push
push
shl
std
dec
adc
cmp
je
ins
add
sbb
or
scas
push
lds
sar
mov
mov
sub
cmp
mov
jne
lea
add
mov
and
xor
je
add
or
nop
das
or
sbb
inc
sbb
mov
xor
and
nop
sub
push
add
inc
and
or
shl
in
iret
data16
repnz
fwait
or
lahf
mov
inc
je
or
push
mov
sbb
xor
pop
fnstcw
movlhps
sub
push
mov
movs
outs
mov
mov
add
inc
xor
add
or
add
mov
movs
mov
ror
mov
(bad)
and
add
jge
sar
jmp
(bad)
hlt
fisttp
pop
(bad)
adc
(bad)
std
outs
add
je
lea
push
mov
mov
xor
in
aaa
mov
pop
jmp
sbb
add
push
lea
and
add
inc
add
adc
pusha
push
add
add
mov
xchg
ins
ret
sub
sbb
xor
pusha
pop
push
add
cld
push
aad
push
dec
pop
nop
mov
add
add
rcr
push
add
pop
add
lea
xchg
call
call
jl
mov
in
fisub
fstp
mov
adc
mov
ret
mov
sbb
pcmpeqw
push
inc
pop
jge
lea
ins
lea
or
push
add
fmul
push
or
adc
out
dec
xchg
sub
mov
push
add
sub
adc
fild
fstp
mov
or
jl
adc
jmp
ret
mov
mov
inc
cmp
jl
daa
sub
neg
cmp
dec
mov
shr
cmp
xor
jle
inc
aad
or
cmp
jle
mov
idiv
mov
mov
(bad)
je
mov
push
adc
xor
inc
add
add
shr
inc
cmp
jl
mov
adc
inc
loope
push
push
lea
jge
jle
lea
push
push
lea
sbb
cmp
mov
lea
adc
ins
popf
mov
jne
inc
mov
lea
mov
and
in
push
lea
aaa
cld
dec
nop
mov
mov
mov
inc
push
push
mov
jmp
pop
sub
jno
push
push
xor
nop
push
push
lea
lea
or
add
les
sahf
int
inc
imul
retf
leave
add
and
call
mov
mov
shr
and
(bad)
cmp
lea
jle
call
dec
in
add
fisttp
mov
test
mov
jle
bound
in
inc
into
mov
pop
mov
sbb
hlt
dec
call
call
out
sub
scas
add
or
push
imul
mov
push
push
jmp
pop
add
jmp
aaa
mov
lea
mov
cdq
mov
je
(bad)
jmp
(bad)
push
add
or
inc
xor
add
test
jle
mov
push
std
call
cmp
je
mov
add
mov
jmp
cld
dec
add
sbb
inc
call
mov
clc
pop
adc
mov
jnp
sar
iret
fimul
test
into
dec
in
lea
push
add
cmps
leave
mov
xor
or
inc
cld
jb
sbb
inc
mov
pop
adc
or
dec
fisttp
jecxz
push
call
push
mov
sbb
fdivr
ret
ja
outs
xor
dec
push
ss
cmp
int3
sbb
pop
je
and
cwde
inc
inc
enter
(bad)
bound
shr
cwde
dec
sub
push
into
push
add
cld
nop
jo
ins
push
cwde
mov
add
sbb
push
loope
jmp
pop
add
adc
pop
push
or
mov
js
mov
add
lea
inc
pop
pop
int
dec
or
or
add
lea
sub
pop
jo
jg
push
mov
cld
xor
mov
loop
mov
lea
cmp
jb
xor
stos
cdq
push
nop
mov
mov
inc
mov
mov
mov
and
fwait
loopne
dec
and
push
jbe
icebp
mov
and
scas
pop
add
add
aas
push
fs
jle
(bad)
not
mov
jg
test
and
and
mov
or
lea
js
push
mov
shr
shl
or
add
mov
and
not
and
or
and
int
xchg
or
(bad)
call
mov
or
push
ror
xlat
and
or
call
stos
loop
ins
and
jmp
jo
and
sar
jmp
jecxz
or
add
mov
and
not
and
or
sub
sub
(bad)
(bad)
fisttp
mov
out
shr
or
add
mov
jge
mov
adc
(bad)
xlat
and
and
xor
std
mov
jmp
(bad)
cmc
dec
sbb
ja
(bad)
jmp
pop
or
add
mov
and
not
and
or
js
add
shr
xchg
enter
adc
loope
mov
out
ret
out
jle
add
mov
les
inc
xor
out
arpl
aad
add
clc
mov
popf
ror
lahf
in
inc
mov
fcom
popf
mov
imul
shl
or
add
mov
icebp
enter
inc
add
iret
fwait
aas
jg
test
mov
mov
jg
std
fsub
jmp
les
shl
xchg
ret
or
fdivr
pushf
or
retf
shl
retf
mov
add
and
and
push
or
in
ins
int
ja
cmp
icebp
and
nop
imul
loop
int
(bad)
out
test
add
lea
adc
dec
mov
ror
jmp
xchg
pop
mov
cmps
xadd
adc
arpl
ror
imul
js
out
(bad)
mov
sub
or
push
shr
sbb
add
sub
push
sbb
add
in
sbb
push
test
loope
or
sti
mov
fsub
enter
(bad)
push
into
mov
inc
mov
rcl
loop
or
mov
add
not
mov
and
aaa
jl
ror
dec
mov
pop
push
pop
pop
es
adc
out
or
mov
add
not
mov
add
fidivr
sub
adc
call
sbb
pop
inc
pushf
add
das
pop
test
call
mov
shr
shl
or
add
fistp
mov
call
(bad)
jg
cmp
push
adc
add
push
or
mov
ror
cmp
(bad)
jle
adc
ror
and
int3
adc
loop
mov
imul
xor
xor
ficom
shl
mov
enter
js
adc
out
xchg
or
jg
push
dec
inc
neg
lea
ds
arpl
cmps
ret
dec
cmp
inc
cli
xor
mov
(bad)
pop
aaa
ret
stc
out
pop
shl
or
mov
add
ret
mov
call
popa
xor
mov
mov
xchg
or
mov
loope
or
or
movs
mov
sbb
adc
inc
mov
(bad)
loope
shr
mov
add
aas
ret
dec
and
push
sbb
mov
movs
shr
int
inc
sub
shl
outs
clc
out
and
clc
mov
pop
shl
(bad)
stc
add
mov
xor
cmp
and
jo
mov
add
and
rcl
shl
mov
mov
push
or
movs
mov
mov
(bad)
loopne
xor
jmp
jmp
(bad)
xor
xor
add
mov
or
cli
dec
shl
or
mov
add
xor
xor
outs
clc
push
dec
lea
mov
shr
shl
movs
(bad)
push
shl
rol
mov
lea
mov
shr
shl
or
mov
add
pop
lods
jmp
xor
sub
lea
mov
shl
mov
call
add
xor
outs
arpl
xor
inc
jmp
loope
ds
(bad)
fnsave
retf
lea
mov
shr
shl
or
aas
neg
mov
push
retf
lea
mov
shr
sbb
out
or
push
std
xor
mov
dec
and
ins
jo
jg
loope
mov
jmp
xor
add
lea
(bad)
jle
sub
loop
or
mov
shl
xor
add
lea
mov
shr
shl
sti
jbe
(bad)
std
sub
clc
mov
push
aad
xchg
adc
repz
(bad)
fbstp
(bad)
fbstp
ror
ins
and
lea
mov
rcr
in
or
inc
ja
push
cld
out
aaa
push
cmp
aam
jmp
shl
shl
jg
lahf
pop
lea
aam
shl
clc
clc
dec
push
lea
mov
out
loopne
sub
ret
out
mov
xor
push
xor
push
push
sub
and
jns
push
lods
(bad)
loopne
shr
or
leave
out
daa
mov
xor
inc
pop
inc
and
hlt
cmp
cli
jmp
push
rol
or
xchg
not
adc
jmp
inc
sbb
out
mov
shl
jl
pusha
add
or
fbld
jmp
xchg
cmps
and
andnps
jg
mov
add
sub
push
mov
aam
sbb
jge
call
(bad)
rcr
adc
ret
pop
pop
gs
ja
adc
and
push
test
push
dec
es
and
push
push
mov
movups
jb
sbb
js
mov
dec
inc
and
fistp
push
push
pop
outs
push
adc
cmps
or
push
and
dec
mov
rcr
test
nop
and
sub
dec
jmp
push
mov
inc
adc
and
je
stos
popa
mov
je
adc
(bad)
pop
inc
adc
loopne
sub
push
je
adc
or
and
in
lahf
retf
push
push
je
or
or
sub
xor
mov
mov
adc
outs
or
inc
out
mov
and
push
push
je
(bad)
xchg
and
es
and
jg
adc
repnz
sbb
enter
mov
adc
rcl
sub
je
add
pop
imul
sub
ret
dec
sbb
xchg
rol
dec
adc
inc
add
sti
test
mov
adc
jle
pop
cld
sbb
add
mov
mov
cmc
inc
les
rcr
mov
mov
cmp
out
nop
jmp
imul
mov
or
mov
add
mov
loop
mov
mov
mov
sub
shr
mov
pop
shl
add
pop
mov
pop
ret
push
cmp
(bad)
call
pop
jp
mov
inc
dec
mov
mov
(bad)
inc
mov
mov
mov
pop
cmp
mov
jns
test
jbe
push
(bad)
(bad)
jg
mov
push
or
lea
sub
mov
add
mov
mov
shr
mov
or
push
add
sbb
lea
cmp
jb
pop
pop
lods
xor
dec
add
push
push
push
cmc
or
lea
scas
add
pop
or
call
jno
call
cmp
jb
mov
out
enter
inc
aad
jae
ds
jg
xor
push
lods
pop
fst
shl
and
mov
aaa
inc
ja
inc
add
add
mov
dec
test
jne
mov
jmp
cmp
ja
xchg
push
push
adc
or
and
aad
les
arpl
stc
mov
mov
mov
repnz
inc
outs
or
jecxz
fild
push
sbb
clc
adc
rep
jl
or
test
and
scas
stos
(bad)
mov
push
inc
push
mov
lea
(bad)
(bad)
out
lea
out
(bad)
push
mov
jae
inc
mov
mov
mov
and
jmp
int
jnp
jb
mov
add
int
jl
add
rol
jle
lods
lea
and
sar
fmul
fwait
sbb
cmc
jae
mov
mov
lea
add
add
std
scas
out
or
cmc
jb
jno
xor
jmp
xor
sti
pop
inc
call
xor
push
push
add
jp
je
pop
sbb
or
or
xor
push
pop
add
(bad)
fist
push
mov
sub
mov
push
push
lea
sub
adc
scas
neg
call
call
mov
lea
push
mov
adc
je
lea
and
xor
cmp
les
jno
or
sbb
cmp
mov
sub
and
mov
lea
ja
and
add
jl
test
push
lea
sti
mov
inc
push
call
shl
xor
out
daa
sub
mov
mov
inc
(bad)
std
out
dec
add
scas
ror
ret
ins
idiv
add
push
or
lock
and
push
int3
jle
shl
push
and
add
mov
dec
jg
push
mov
dec
push
push
pop
pop
sub
sbb
and
jl
mov
sar
enter
sbb
or
ret
fwait
push
or
ja
iret
add
rcl
push
mov
add
and
(bad)
aas
loopne
pop
xchg
mov
imul
test
fisttp
stos
sbb
(bad)
ss
sbb
rol
dec
adc
mov
mov
mov
pop
dec
dec
jmp
add
mov
add
ffreep
push
push
xor
dec
xor
push
(bad)
call
icebp
add
jle
push
adc
lea
mov
inc
mov
mov
dec
jl
pop
out
arpl
jmp
ret
dec
push
mov
lea
xor
bound
mov
mov
xor
lock
call
mov
inc
in
mov
and
cli
call
or
stos
(bad)
cli
dec
call
jbe
lahf
loopne
mov
call
add
or
sbb
jmp
mov
lea
push
push
and
inc
in
push
(bad)
(bad)
sti
pop
arpl
sbb
jne
cmp
mov
ja
dec
jne
mov
clc
mov
xor
mov
sub
scas
dec
call
add
sti
jmp
in
repnz
jne
jne
mov
add
loopne
and
add
add
lea
cmp
ja
mov
ror
push
cmp
movs
fcmove
not
inc
pusha
clc
test
mov
xor
std
jle
inc
mov
or
add
(bad)
out
xchg
retf
add
push
bound
rol
in
mov
icebp
(bad)
std
fmul
ror
add
aas
(bad)
pop
inc
dec
in
enter
jl
mov
loopne
enter
(bad)
adc
ins
je
add
adc
push
rcl
sbb
lea
fwait
inc
das
push
mov
mov
sub
mov
push
in
or
or
(bad)
pop
sti
or
mov
lea
mov
mov
idiv
fwait
mov
(bad)
lea
push
not
pop
les
ret
or
mov
xor
dec
xor
jmp
inc
das
aam
pop
fmul
jl
jg
scas
icebp
data16
sub
ret
mov
sbb
test
scas
sub
and
call
sub
cwde
cmp
jecxz
dec
int3
mov
mov
dec
test
jle
or
add
mov
cmp
jl
mov
lea
lock
mov
test
mov
call
mov
in
or
inc
mov
loope
add
sub
(bad)
call
mov
mov
shr
mov
and
mov
mov
sar
div
mov
mov
or
mov
mov
push
add
push
loope
ror
jge
cli
popf
and
xor
test
mov
lea
xchg
xor
and
idiv
(bad)
test
je
mov
jg
call
mov
sub
test
je
ror
mov
test
iret
fcmovnb
cmc
ja
jno
xchg
cmc
jle
mov
inc
mov
xchg
in
sub
test
jne
mov
inc
fmul
mov
and
mov
shl
push
not
add
arpl
(bad)
push
push
repz
in
(bad)
xchg
rol
je
in
cmp
pop
or
movs
jmp
push
(bad)
(bad)
(bad)
(bad)
jle
mov
mov
lea
sub
add
sub
mov
mov
mov
inc
inc
mov
mov
(bad)
(bad)
(bad)
dec
mov
mov
mov
inc
add
dec
jne
mov
mov
lea
add
mov
push
dec
out
jg
mov
add
push
loopne
(bad)
loope
inc
lea
in
mov
call
inc
sub
jecxz
mov
cmp
shl
mov
mov
mov
call
mov
and
jb
mov
repz
push
out
out
inc
add
add
add
add
add
shl
or
aaa
add
pop
cmp
mov
cmp
mov
sbb
inc
and
push
add
mov
jbe
add
add
mov
xchg
test
mov
sbb
pop
jbe
ja
jle
xchg
adc
lahf
loop
cmp
lock
in
add
or
or
(bad)
dec
mov
jl
or
repz
pop
pop
cmp
idiv
je
sbb
sbb
cmp
pop
xor
sbb
xor
mov
neg
je
jo
push
and
neg
or
mov
push
adc
pushf
ds
push
mov
movs
dec
add
daa
push
cs
(bad)
add
fisubr
dec
(bad)
cli
mov
mov
test
inc
js
(bad)
jmp
jne
pop
pop
ret
test
jne
pop
mov
cmps
mov
and
div
mov
mov
add
ins
add
sub
jne
pop
mov
push
daa
mov
sub
or
ret
pop
adc
test
je
mov
aaa
std
ja
add
or
mov
int
retf
pop
sbb
add
pop
js
adc
shl
jmp
cmp
and
jg
fnstsw
pop
xor
inc
fnstenv
(bad)
psubq
adc
add
jne
clc
(bad)
jg
push
add
jne
cmp
jne
cmp
jge
push
push
(bad)
jne
cld
rol
push
lods
push
xor
adc
add
lods
push
ja
pop
cmp
adc
add
or
dec
sbb
xchg
mov
adc
pushf
sub
cmp
jmp
push
daa
dec
syscall
in
bound
inc
jno
inc
mov
mov
mov
ja
cwde
cld
(bad)
dec
mov
or
loop
mov
(bad)
std
ja
mov
xor
push
push
lea
mov
push
add
in
mov
icebp
fiadd
int
push
push
lea
(bad)
lea
push
ret
sub
mov
test
sbb
xchg
and
or
mov
loopne
(bad)
jb
(bad)
fsub
inc
xchg
add
cmps
(bad)
jae
imul
jne
sub
mov
cmp
je
mov
sar
(bad)
fisttp
mov
mov
test
rep
pop
pop
mov
cmp
iret
add
jnp
ins
dec
add
adc
and
push
lods
or
mov
loopne
jle
rep
pop
dec
stos
stos
jecxz
mov
je
push
mov
cmp
je
mov
test
je
push
add
ss
push
pop
mov
cld
ds
ror
push
rep
lods
pop
sbb
and
or
xor
xor
cmp
je
add
mov
add
or
bound
(bad)
inc
je
fwait
xchg
cmp
je
mov
outs
in
jno
sub
sub
shl
mov
adc
ins
jno
or
pop
sub
inc
add
inc
imul
cmp
jle
push
push
inc
cwde
call
shl
ficomp
pop
aam
pop
cmc
pushf
inc
cmp
mov
std
mov
cdq
xchg
and
shl
into
popa
int3
mov
or
mov
sahf
mov
mov
mov
xor
push
jecxz
out
test
and
mov
cwde
add
ds
test
inc
leave
and
jge
push
shl
pop
jo
(bad)
push
out
ret
mov
je
mov
pushf
xor
cmp
jbe
mov
and
add
inc
rdpmc
shl
sbb
sub
hlt
fisttp
jmp
sti
ds
and
and
sti
fwait
lock
sub
and
test
je
mov
frstor
sub
inc
js
or
out
leave
or
jmp
and
int
and
ret
je
rcl
adc
push
mov
mov
jmp
xchg
adc
(bad)
jmp
sbb
cmp
cmc
pop
rcr
mov
pop
mov
push
in
mov
jge
xor
push
(bad)
fisubr
loope
mov
fcom
jle
jbe
mov
imul
pop
fisub
mov
xor
jmp
mov
mov
add
sbb
fs
in
cmp
inc
js
mov
sahf
and
or
xor
ja
mov
jecxz
and
adc
adc
inc
adc
popa
call
mov
mov
inc
cld
and
inc
je
cmp
sbb
inc
add
jbe
mov
jg
setns
mov
dec
jb
and
sub
add
ja
inc
jg
cmp
je
and
bound
xlat
not
and
pop
mov
adc
nop
jo
mov
mov
add
test
push
push
push
outs
shl
test
cmp
(bad)
(bad)
mov
inc
lea
mov
lea
mov
cmp
je
cmp
jbe
mov
cli
(bad)
push
mov
sub
cmp
jne
xor
pop
mov
pop
mov
ret
cmc
pop
jo
call
enter
mov
jmp
mov
mov
je
and
mov
rol
and
aad
cmps
mov
push
sbb
fsub
add
sbb
mov
lock
retf
(bad)
push
dec
and
add
cmp
ja
jmp
push
iret
dec
add
(bad)
or
mov
leave
gs
adc
call
pop
jb
cwde
nop
cmp
cmps
imul
dec
pop
adc
mov
call
or
jae
push
adc
(bad)
(bad)
(bad)
cmp
cmp
jg
test
je
test
je
or
dec
mov
jecxz
stos
mov
mov
test
jne
push
push
div
sbb
add
sbb
or
dec
mov
call
shr
jg
add
push
push
push
les
and
or
mov
ret
mov
sar
inc
dec
mov
test
jne
cmp
or
imul
push
xor
cmp
sete
pop
addr16
push
fs
xchg
add
add
(bad)
out
pop
adc
data16
dec
jb
lds
inc
pop
inc
dec
push
and
dec
(bad)
push
cmp
in
mov
test
je
or
jmp
cmp
or
out
test
mov
retf
add
add
push
mov
je
or
mov
ret
and
push
clc
call
and
add
mov
mov
aam
or
sbb
rep
push
mov
icebp
adc
ss
sub
sbb
sbb
(bad)
aaa
fmul
je
shr
dec
dec
sub
dec
add
push
jl
fabs
ja
xor
pop
add
push
sbb
or
push
ror
pop
sbb
push
and
lds
add
dec
xor
add
add
les
inc
pop
pop
in
cmc
sub
xor
vandps
ins
sahf
inc
xor
or
or
adc
or
mov
add
stos
arpl
and
into
nop
pop
rol
leave
lds
xor
xchg
add
push
add
push
mov
mov
jo
std
test
ret
js
add
push
(bad)
and
cmp
inc
push
sbb
mov
adc
cli
mov
add
cmp
inc
or
jecxz
pop
fdivr
dec
adc
lea
test
inc
and
or
(bad)
mov
sbb
cmp
(bad)
out
mov
add
mov
outs
sbb
sbb
test
and
and
rcr
std
aaa
ins
push
sbb
and
add
add
sub
cmp
push
dec
sbb
cmp
add
push
sub
outs
and
mov
inc
ret
shl
add
and
mov
mov
test
mov
mov
add
movs
push
mov
retf
add
jg
mov
xor
and
or
(bad)
outs
rcr
je
das
gs
mov
test
jl
jbe
cmp
pop
adc
fisttp
mov
(bad)
jne
mov
(bad)
(bad)
xor
mov
jg
mov
mov
or
sbb
test
jl
adc
mov
aad
pop
push
or
std
push
sub
sub
in
and
scas
dec
or
mov
ins
add
les
mov
and
ret
sub
xor
mov
(bad)
fwait
test
enter
mov
add
xlat
add
mov
ss
push
dec
fs
sub
cmp
adc
ins
xor
fadd
sbb
enter
add
aam
add
ret
sbb
sub
jb
je
loopne
mov
mov
pop
adc
rcl
inc
xchg
xor
dec
in
xlat
lds
adc
lds
sbb
mov
dec
xchg
sub
adc
(bad)
add
and
jmp
jle
inc
mov
mov
add
fadd
add
fild
sub
adc
mov
stc
inc
and
mov
mov
(bad)
or
ds
dec
ret
add
rcl
imul
lea
dec
out
or
and
cmp
jmp
cs
lds
ret
hlt
dec
jge
test
cmp
popa
jp
xor
dec
or
sbb
or
inc
push
adc
imul
jno
adc
or
add
data16
fmul
dec
mov
sbb
aas
push
sbb
je
jne
pop
and
ret
ror
call
(bad)
loope
or
or
sbb
or
sbb
mov
mov
push
mov
sub
cmp
jl
sub
lock
jg
mov
mov
(bad)
out
sbb
sbb
mov
mov
cmp
iret
adc
mov
mov
adc
sub
and
jno
addr16
sti
(bad)
mov
mov
mov
daa
aaa
inc
push
stc
(bad)
adc
mov
mov
and
dec
mov
mov
sub
cmp
jl
add
cmp
jg
adc
retf
fiadd
js
rcr
or
push
mov
mov
(bad)
xchg
jg
(bad)
mov
test
je
(bad)
int3
rol
mov
outs
add
xlat
adc
inc
nop
sub
pop
pop
ret
test
jne
pop
pop
dec
lea
test
push
jne
add
lea
mov
jecxz
dec
test
cmp
push
rep
or
ja
jb
(bad)
out
rcr
adc
xchg
add
data16
and
push
jmp
pop
(bad)
loop
adc
mov
(bad)
(bad)
mov
je
xor
mov
cmp
je
push
cmp
(bad)
push
popa
sbb
ret
mov
outs
mov
push
test
scas
mov
sbb
fld
jg
cld
mov
add
mov
add
cmp
rep
add
out
outs
out
rep
or
pop
mov
dec
jne
jb
es
push
push
push
mov
jb
adc
cdq
loopne
lock
and
sbb
adc
xor
jle
xor
aaa
fldenv
xor
push
gs
sub
pusha
xor
push
add
mov
test
add
lods
push
sub
add
lods
mov
mov
add
(bad)
ffreep
outs
call
add
mov
mov
mov
add
sub
lea
lds
in
push
xchg
cmp
enter
xor
ss
in
(bad)
adc
(bad)
mov
lea
push
push
xor
pop
(bad)
push
mov
ret
xor
xor
push
add
sbb
pop
jmp
adc
(bad)
fnstsw
(bad)
mov
mov
shr
stc
add
iret
mov
rol
test
shr
xor
push
mov
xlat
je
adc
xor
inc
add
(bad)
jg
cmp
cmp
jbe
mov
push
jnp
jg
cmp
push
lahf
fadd
ds
mov
ins
push
mov
rcl
xor
mov
in
add
or
push
jns
neg
mov
scas
add
(bad)
sti
pop
xor
jbe
cmp
or
or
jbe
mov
ins
adc
cmp
clc
imul
push
xchg
mov
mov
push
inc
mov
pop
mov
add
iret
sbb
sar
mov
shl
add
mov
add
ret
(bad)
jnp
sbb
sar
je
lahf
and
adc
mov
dec
xor
adc
push
xor
jge
sbb
xchg
lods
cmp
in
sbb
ror
push
pop
xchg
and
rol
dec
push
push
adc
sti
xor
dec
loope
cmp
jb
inc
mov
sub
fisubr
inc
dec
inc
aas
push
inc
push
cmp
add
push
icebp
jb
dec
sbb
push
mov
and
jle
mov
mov
add
push
push
shl
push
push
sub
imul
mov
mov
pop
fs
daa
push
ret
std
inc
cmp
je
push
js
push
mov
das
add
inc
xor
repz
pop
pop
cmps
and
jge
and
push
paddw
mov
dec
adc
adc
push
gs
rcr
lock
inc
je
cmp
je
push
push
mov
fild
jne
sub
mov
clc
ror
push
jnp
push
mov
fst
int3
and
dec
out
push
push
push
jle
xchg
ror
test
jge
or
femms
popa
(bad)
(bad)
call
ins
arpl
ja
je
cmp
je
cmp
je
cmp
je
jnp
in
outs
jmp
and
sbb
sbb
jl
(bad)
mov
pop
jmp
dec
jb
je
cmp
je
cmp
sar
jo
je
push
mov
out
sti
icebp
jle
mov
mov
pop
push
fidivr
bound
dec
and
pop
je
push
and
mov
xchg
ja
push
pop
repz
and
cmp
mov
xchg
add
mov
and
leave
mov
push
inc
hlt
add
add
mov
push
adc
push
lds
lahf
or
ret
adc
xor
jne
mov
mov
cmp
(bad)
xor
mov
shl
add
pop
dec
add
sbb
or
jecxz
add
push
dec
push
mov
(bad)
fcomp
not
fldenv
or
fimul
mov
shl
fild
mov
scas
push
or
jmp
dec
push
sbb
ins
sbb
sbb
(bad)
push
push
in
push
jmp
shl
fnstenv
sub
cmp
ja
(bad)
mov
(bad)
or
cmp
mov
jb
pop
cmps
pop
jns
pop
sbb
mov
sbb
dec
or
pop
ret
dec
adc
push
mov
pop
push
ret
jp
hlt
jmp
pop
test
je
leave
inc
mov
shl
add
xor
mov
adc
sti
loope
inc
push
adc
call
or
add
sar
pop
or
cld
dec
adc
xor
mov
dec
jmp
mov
mov
push
mov
cmp
mov
ficom
xor
xchg
mov
cmp
jne
sbb
ror
shl
add
sub
pop
inc
adc
test
add
shl
loope
std
sub
pop
mov
movs
daa
pop
ret
imul
pop
push
enter
pop
retf
jne
data16
dec
popa
je
(bad)
loopne
sar
pop
arpl
cld
mov
mov
arpl
xor
jne
mov
mov
mov
mov
xor
add
push
or
stc
icebp
sar
mov
test
mov
mov
adc
cli
add
push
inc
or
add
cmp
jne
or
or
jmp
sbb
add
and
clc
push
add
mov
pop
add
aaa
inc
cdq
push
jl
mov
cmp
jne
test
sub
xor
jnp
fst
js
mov
cmp
je
dec
test
je
push
sbb
ins
shr
push
test
adc
ret
and
std
inc
cmp
adc
mov
and
push
bound
push
and
out
mov
mov
pop
dec
inc
push
jmp
mov
pop
xor
sbb
lock
xor
push
push
mov
pop
mov
pop
pop
inc
pop
dec
and
inc
dec
mov
cmc
push
push
stos
cmp
xchg
mov
xchg
fstp
push
mov
sbb
xchg
jne
lds
lea
mov
add
(bad)
sbb
test
jl
jb
sbb
inc
inc
je
inc
sbb
xor
scas
scas
sar
jg
push
test
mov
data16
sbb
ds
out
xor
sbb
into
or
add
jmp
ret
or
or
mov
push
and
sar
add
(bad)
and
mov
cmp
(bad)
dec
cmp
lea
add
cmp
jg
cmp
retf
add
(bad)
jmp
jge
test
cmp
jl
add
inc
sar
packuswb
jle
xchg
jmp
add
mov
icebp
add
pop
je
loop
loope
push
fcomp
jle
scas
or
mov
(bad)
fs
cmc
bound
adc
daa
jg
aaa
popf
jo
pop
rol
aad
add
loop
or
push
rcr
les
mov
and
pop
jbe
push
dec
dec
addr16
sbb
leave
jg
nop
sub
sbb
sub
(bad)
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
(bad)
sub
adc
or
ins
and
test
jl
mov
or
std
push
jle
icebp
out
(bad)
in
push
std
add
dec
jg
jmp
fnsave
add
jne
or
(bad)
push
idiv
push
sub
jl
push
inc
inc
sub
sub
cmc
inc
je
push
mov
push
sub
push
arpl
pop
add
adc
clc
inc
jne
test
jne
test
std
push
and
movs
or
in
pop
and
add
push
pusha
sbb
sbb
push
cmp
cmps
stos
loop
jp
mov
sbb
cmp
jae
popa
cli
dec
mov
aad
stc
cmp
xchg
nop
adc
ss
popf
aam
push
jl
pop
test
mov
jmp
jmp
mov
jmp
pusha
icebp
mov
and
and
lea
cmp
ja
mov
sahf
dec
xchg
sub
test
jne
or
jmp
test
xchg
fdivr
jne
test
je
or
dec
ror
sub
or
or
sbb
and
jg
pop
sbb
add
or
add
inc
mov
push
sbb
add
and
push
sar
pop
shr
pop
and
pop
jnp
mov
add
xchg
sbb
aaa
add
add
push
add
push
add
or
add
imul
in
jge
cwde
pop
pop
add
add
add
add
or
push
push
xchg
aas
pushf
push
sub
pop
adc
adc
out
mov
push
push
push
std
jg
enter
mov
jo
rcl
(bad)
sub
pop
add
push
cmp
jne
xor
lock
adc
pop
add
ins
xor
or
mov
je
fild
dec
and
jg
lock
clc
je
sbb
add
(bad)
inc
les
cwde
inc
dec
add
aas
neg
fcom
jne
and
adc
mov
test
lods
mov
repnz
adc
ret
fstp
xor
std
nop
inc
out
mov
fdivr
in
pop
enter
push
add
(bad)
mov
cmp
jl
cmp
jg
pop
sub
stos
and
xor
aaa
mov
test
jbe
pop
jae
loope
add
fild
fmul
mov
test
mov
fmul
add
xor
push
cli
xor
and
enter
inc
add
cmp
rol
jne
add
clc
mov
fbld
shl
ret
mov
test
ins
pushf
push
push
jne
and
pop
xchg
mov
add
int3
mov
imul
in
sub
lds
mov
jmp
sub
mov
out
fstp
std
jle
mov
cmp
cdq
mov
ss
cmp
jl
inc
rcr
fcom
mov
add
xor
jo
mov
das
mov
and
(bad)
adc
imul
jp
mov
into
pop
mov
dec
gs
inc
push
add
mov
adc
scas
(bad)
scas
pusha
outs
xchg
mov
aam
fcomp
pop
dec
unpckhps
add
mov
loope
aas
stos
or
dec
lea
sar
or
lahf
adc
lock
sbb
nop
fadd
test
jg
stos
cmp
jg
rol
push
mov
sahf
stos
add
pop
std
push
cmp
ins
mov
or
add
add
test
mov
fdiv
ret
or
mov
sub
xor
push
push
push
push
pop
sti
aaa
aam
or
jmp
pusha
lea
sbb
pop
ret
test
mov
out
out
mov
test
add
or
push
add
or
xchg
test
jbe
cmp
jae
push
push
add
leave
fwait
mov
add
or
stc
add
inc
mov
jmp
cmp
jbe
mov
mov
out
sbb
aas
test
mov
mov
and
fild
test
iret
mov
inc
or
sub
xor
(bad)
sbb
add
mov
dec
mov
push
lea
fst
daa
call
jle
xor
push
push
cmp
gs
or
pop
cmp
scas
push
mov
pop
xor
push
adc
sbb
sub
push
sub
lahf
ins
aas
adc
into
shl
mov
sub
shl
mov
outs
sbb
retf
call
shl
mov
push
fcom
sbb
aad
arpl
xor
loop
mov
add
xchg
(bad)
mov
sbb
add
fnsave
inc
mov
mov
(bad)
or
adc
test
or
das
fs
add
jmp
fstp
fild
clc
or
test
aaa
ret
(bad)
shl
mov
and
and
fld
mov
clc
sbb
pop
inc
add
cmp
xor
and
mov
repnz
pop
add
arpl
(bad)
mov
ret
adc
ret
add
div
mov
mov
daa
adc
int
push
adc
(bad)
sbb
add
cmp
cmp
adc
or
or
pop
aad
in
mov
sbb
push
mov
xchg
add
mov
and
sub
shr
enter
sub
jle
test
push
dec
and
mov
pop
inc
and
mov
jbe
mov
push
sbb
push
adc
ja
add
dec
jne
xor
xor
cld
ja
and
sti
lock
out
add
push
mov
std
sub
add
mov
add
aas
cmp
scas
dec
and
or
mov
loope
jmp
jp
mov
add
call
mov
mov
and
mov
mov
shr
ss
cmp
mov
pop
in
test
jb
retf
fadd
pop
and
jb
out
or
xor
push
cli
mov
(bad)
aas
sti
fimul
and
inc
mov
cmp
mov
jb
mov
or
cmp
push
push
push
bound
ret
sub
clc
push
inc
sbb
push
cmp
mov
mov
jb
pop
pop
loope
add
and
sub
xlat
jb
cvtdq2ps
jl
pop
add
test
je
js
(bad)
fistp
or
push
and
dec
add
cmc
cmp
outs
sub
xchg
and
pop
add
mov
mov
or
mov
ret
mov
test
inc
push
pusha
and
test
mov
je
push
mov
or
call
sub
jg
and
addr16
loopne
push
adc
inc
and
outs
jo
into
mov
mov
sbb
popa
test
xchg
add
mov
daa
pop
sbb
inc
mov
mov
int3
rcl
call
in
fiadd
aas
or
push
push
push
lea
(bad)
mov
push
lods
mov
push
or
mov
test
pop
pushf
xor
fild
int3
pop
mov
test
xor
push
adc
pop
and
mov
push
and
aad
jl
pop
push
test
or
out
sbb
sbb
or
add
sbb
sub
(bad)
mov
push
or
push
or
xchg
mov
add
mov
mov
pop
mov
(bad)
adc
loope
ja
sbb
sbb
out
clc
push
inc
icebp
add
jnp
add
int3
mov
aad
mov
lock
pop
cmp
jne
test
jne
push
sti
paddd
sub
sub
adc
mov
mov
or
and
or
mov
das
addr16
rcr
dec
and
push
push
jp
rol
loop
dec
push
xor
jmp
test
fnstcw
or
or
dec
dec
jne
xor
mov
inc
dec
inc
dec
jne
pop
cmp
pop
mov
popf
adc
inc
aaa
jae
push
int
inc
sub
mov
dec
adc
dec
pop
data16
push
dec
arpl
cmp
pop
inc
dec
inc
pop
data16
cmp
pop
push
push
dec
fadd
in
nop
push
inc
outs
pop
popa
pop
in
jno
push
dec
inc
inc
jo
cmp
mov
push
sub
jae
fsub
inc
pop
jae
dec
das
dec
ja
xchg
push
dec
inc
das
cmp
sti
or
inc
push
pop
cmp
imul
inc
dec
push
das
inc
ror
or
push
inc
jge
daa
jnp
dec
dec
pop
push
pushf
test
push
ret
and
push
jp
call
(bad)
pop
bound
and
push
fisub
scas
xchg
loope
sbb
xchg
adc
jb
(bad)
out
ret
mov
loopne
aas
inc
stos
test
jne
fdiv
lock
mov
dec
add
call
push
xor
cmp
mov
les
outs
lahf
sbb
in
je
cmp
inc
or
add
sub
aam
test
mov
nop
sti
fwait
mov
mov
or
adc
cmp
ja
adc
mov
test
imul
jmp
or
sbb
ret
lea
stos
sbb
aaa
ror
mov
adc
jl
je
lea
pop
lds
cmp
ja
mov
ret
test
iret
mov
and
or
pop
mov
bound
and
fldcw
pop
adc
cs
jmp
sti
mov
add
aas
mov
and
cmp
je
rol
(bad)
lahf
inc
leave
test
jmp
test
popf
inc
pslld
in
jmp
sub
and
cmp
je
popf
test
iret
(bad)
inc
je
jmp
test
add
cld
into
add
js
(bad)
inc
nop
bound
out
shl
test
test
jne
push
sub
movs
push
popf
adc
xor
mov
push
ret
(bad)
mov
outs
lods
mov
jecxz
cmp
jae
cld
stos
sbb
mov
inc
push
sti
mov
sub
push
push
ret
xor
inc
inc
mov
stos
sbb
out
push
mov
adc
pop
test
pop
je
cmp
inc
jne
or
xchg
mov
mov
pop
push
pop
in
outs
and
pop
mov
ds
jne
jg
mov
aaa
movs
cmp
mov
mov
or
inc
and
je
jg
int
push
repz
je
arpl
loope
dec
jl
inc
mov
sbb
push
loopne
sub
or
loope
jmp
fst
push
adc
adc
adc
cmp
call
shl
or
call
xor
sub
mov
into
idiv
push
loope
ror
push
call
jmp
xor
ret
push
mov
xchg
mov
scas
mov
mov
add
dec
push
mov
adc
hlt
out
and
jne
cmp
jne
pop
add
push
cmp
jne
int
test
jbe
jmp
add
mov
mov
add
out
sbb
sbb
(bad)
dec
jne
sbb
ret
cmp
jne
inc
mov
inc
mov
fild
dec
adc
repnz
xor
xor
mov
mov
mov
mov
inc
mov
and
retf
and
jnp
dec
add
fimul
jmp
shr
mov
mov
add
(bad)
dec
jne
ins
sar
aad
jge
xor
adc
add
jno
pop
jne
sbb
bound
pop
ja
add
sbb
ffreep
mov
or
xchg
iret
add
cmp
mov
add
aad
ds
xor
or
or
es
cwde
and
mov
add
adc
mov
cmp
mov
adc
mov
mov
shl
adc
push
add
(bad)
jb
inc
lea
push
mov
pop
adc
fmul
mov
stos
sbb
test
shl
dec
push
mov
test
add
ficom
push
mov
sbb
mov
xchg
mov
cmp
and
rep
test
mov
outs
pop
jb
(bad)
or
add
or
xor
push
mov
add
and
mov
sub
mov
outs
call
adc
push
rcr
add
fsubr
aam
bound
jmp
(bad)
jmp
dec
xlat
rcr
fldz
cmp
mov
pop
xor
and
icebp
aas
and
nop
scas
push
mov
mov
mov
pop
fadd
fild
pushf
mov
(bad)
dec
fst
inc
or
or
xchg
aam
cmp
adc
inc
mov
mov
test
loop
movs
cmp
jne
mov
or
mov
mov
sti
(bad)
add
xor
cwd
cmp
loopne
aaa
jmp
mov
cmp
ja
add
push
pop
inc
add
cmps
pop
fistp
add
ror
dec
inc
adc
rol
jne
cmp
add
or
push
mov
pop
jne
or
test
je
or
cwde
rol
sbb
fidiv
jle
add
call
adc
(bad)
or
jl
test
jbe
mov
(bad)
out
es
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
inc
pop
and
pop
ret
push
push
and
push
mov
mov
nop
dec
mov
mov
mov
outs
push
hlt
out
mov
push
jb
push
mov
(bad)
pushf
ror
int
int
je
mov
rcr
pop
mov
jo
add
xor
or
push
in
das
and
pop
nop
inc
push
and
test
jne
mov
(bad)
inc
or
jmp
and
inc
mov
imul
test
mov
jge
cdq
call
add
mov
xor
test
jl
or
or
data16
imul
clc
cmp
jb
mov
and
jbe
test
jne
add
mov
aam
xor
mov
pop
inc
xor
cmp
aam
or
xor
sbb
call
je
mov
test
lods
fst
in
dec
sub
add
sub
jecxz
mov
ror
js
adc
adc
cs
idiv
mov
adc
push
pusha
punpckhbw
adc
add
push
jmp
jg
mov
mov
or
mov
xor
neg
mov
shl
fiadd
xchg
retf
icebp
mov
xor
in
push
out
jmp
cmp
push
cmp
sub
div
xor
sbb
add
dec
adc
retf
push
sbb
cmp
(bad)
clc
push
ror
cmp
jmp
sti
push
add
pop
adc
pop
mov
pop
adc
push
push
je
std
jae
cmp
add
mov
jmp
adc
clc
out
and
test
jne
mov
or
arpl
ds
mov
mov
and
sbb
les
add
sbb
inc
add
(bad)
lock
push
es
and
mov
out
cli
mov
sub
mov
cmp
jbe
pop
push
shl
pop
or
cmc
pop
mov
shl
in
mov
jbe
sub
pusha
sbb
xor
mov
xor
(bad)
ja
popf
imul
jmp
loope
add
inc
adc
sub
jmp
mov
adc
inc
xor
adc
push
add
ret
sar
mov
xor
push
push
jmp
or
je
add
and
jno
add
stos
mov
je
pushf
mov
mov
rcl
or
sub
mov
xor
cmp
adc
inc
mov
lods
pop
cmps
xor
inc
xchg
pop
sbb
call
inc
add
adc
push
or
jge
mov
inc
inc
rol
add
clc
and
xchg
lock
xchg
test
je
dec
pushf
inc
cmp
add
je
adc
test
je
adc
imul
cmp
mov
xor
shl
sub
push
mov
and
add
add
cdq
mov
add
rol
ja
scas
fsub
add
mov
add
pop
and
sub
jmp
mov
mov
mov
add
outs
or
cmp
ror
xchg
out
ficomp
call
icebp
daa
cmp
add
sbb
push
push
not
cld
cwde
jmp
adc
imul
adc
xchg
inc
mov
jp
je
jne
call
aad
push
push
fist
add
and
sub
push
jne
sbb
test
inc
push
mov
cmp
fadd
mov
movs
inc
icebp
sbb
mov
push
mul
mov
sbb
ret
xchg
dec
xor
call
push
je
(bad)
icebp
push
inc
push
push
jg
ret
jae
jb
push
inc
or
mov
mov
inc
mov
mov
movs
push
jle
cmp
xchg
movs
push
push
push
push
loopne
sbb
add
cmp
jne
js
or
mov
dec
add
or
pop
jge
pop
loopne
pop
adc
rcl
mov
adc
adc
cld
jmp
mov
sbb
ror
ds
or
dec
mov
xor
imul
push
and
lock
adc
mov
stos
sub
sub
call
or
xor
lock
mov
mov
and
jge
xadd
mov
sar
sar
inc
xchg
fimul
scas
shl
call
ret
ss
and
dec
ja
mov
jmp
push
xor
and
sub
fs
or
lahf
cmp
push
mov
shr
add
adc
push
push
idiv
jl
cld
cs
rcr
shl
rcr
fild
mov
(bad)
inc
add
sub
add
adc
push
jl
call
sbb
jecxz
call
fwait
dec
dec
adc
pop
nop
add
cmps
pop
jne
popf
sub
adc
push
add
call
xchg
cmp
scas
or
jns
mov
cmp
cmp
push
dec
push
data16
inc
mov
inc
push
and
push
push
lods
nop
pop
cmp
or
(bad)
movs
pushf
cmp
push
je
sub
dec
sbb
test
mov
adc
outs
sub
shl
or
jl
adc
mov
iret
pop
cmp
in
cmp
mov
sub
clc
add
test
rcl
mov
loope
rcl
scas
pop
xor
mov
dec
lds
cli
add
das
push
mov
inc
mov
push
shl
sub
push
mov
push
shr
push
das
inc
inc
sbb
les
or
push
push
push
push
repnz
jo
scas
adc
(bad)
mul
pop
pop
xor
push
aaa
dec
jg
ror
cwde
adc
mov
or
mov
lock
adc
shl
xchg
adc
fcom
cli
into
cmp
call
daa
or
or
mov
sbb
std
mov
cdq
xor
je
jmp
bound
xchg
push
push
retf
push
fadd
test
and
and
cmp
bound
xor
xor
adc
(bad)
test
inc
clc
push
push
push
push
inc
push
add
fcmovne
jg
pop
cld
dec
xchg
fadd
fild
std
jb
stos
fild
jae
lea
or
dec
jg
mov
push
sbb
adc
inc
iret
inc
and
inc
inc
imul
add
mov
mov
ins
mov
sbb
add
push
dec
mov
mov
add
call
cmc
popa
sbb
or
mov
fmul
fld
(bad)
lods
pop
jg
add
mov
and
mov
xchg
mov
or
mov
nop
adc
scas
test
mov
adc
add
retfw
rol
pop
ja
jmp
xor
out
or
std
aas
and
scas
stc
mov
sbb
ja
lsl
shr
jo
jmp
mov
lea
add
lea
idiv
adc
imul
mov
lea
daa
jo
inc
imul
mov
fwait
mov
inc
or
scas
rol
rol
lock
cmps
je
xchg
adc
stos
xchg
and
push
xor
sbb
adc
push
pop
add
jbe
pop
adc
add
push
or
test
or
sahf
cmp
push
add
push
push
push
sti
push
ins
pop
fwait
cmp
pop
pusha
and
aaa
js
adc
push
sbb
ret
or
mov
arpl
and
xor
add
sub
add
das
sub
adc
aad
mov
dec
and
dec
adc
dec
add
push
dec
and
adc
dec
sub
or
and
fst
call
sbb
fs
xor
aad
leave
jbe
cmp
ja
mov
(bad)
mov
add
test
mov
in
push
adc
or
iret
push
ret
or
jmp
pop
adc
xor
pop
xor
adc
clc
mov
(bad)
cmp
push
das
sbb
movs
sbb
aam
sbb
dec
frstor
mov
leave
test
sub
xchg
xchg
sub
repnz
sub
inc
clc
jae
mov
mov
cmp
jae
movs
das
fmul
pop
xor
ins
ficom
cmps
mov
jne
cmps
enter
sbb
pop
or
out
dec
int3
dec
inc
xor
push
mov
push
and
inc
xchg
xor
mov
push
push
mov
pop
inc
push
dec
mov
mov
push
call
(bad)
cmp
push
inc
dec
sub
xchg
in
dec
jmp
dec
dec
push
jmp
ret
mov
fdiv
cmp
sbb
test
xor
mov
mov
aas
dec
inc
push
jb
mov
sbb
add
cmp
cmc
or
fmul
sbb
inc
and
test
mov
or
push
jl
and
mov
push
je
mov
lock
mov
test
mov
xor
and
je
jo
add
pop
push
ret
dec
sbb
jo
mov
pusha
pop
add
xchg
push
xor
pop
xor
jbe
js
mov
ja
add
aas
out
stos
sbb
jns
push
and
push
loopne
out
push
outs
sbb
js
lock
out
pop
sbb
jmp
cmp
push
js
pop
mov
bound
or
mov
cmp
cmp
mov
cmp
xor
pop
jne
mov
sar
inc
mov
cdq
imul
dec
add
(bad)
push
stos
inc
add
mov
add
mov
add
movsx
mov
or
aad
cmp
pop
mov
mov
jge
call
mov
ret
lea
lea
add
jmp
bound
ja
sbb
nop
imul
jmp
push
add
movsx
mov
push
push
push
fist
sar
es
retf
imul
movs
fbstp
sub
pop
jne
mov
xor
ja
mov
aas
lea
sar
shr
jae
mov
cld
lahf
push
add
push
mov
add
shr
mov
inc
mov
xchg
(bad)
inc
loop
shl
mov
test
jne
nop
mov
or
and
sbb
cmps
mov
hlt
mov
and
adc
or
movs
jp
pop
inc
or
rcr
stos
scas
ds
push
jl
(bad)
fist
ret
mov
push
mov
mov
scas
sti
sbb
mov
fwait
pusha
call
sbb
push
mov
inc
adc
sub
cmp
and
imul
ret
adc
mov
or
fwait
pop
add
test
sbb
pop
and
retf
adc
inc
loope
loope
inc
scas
inc
fstp
leave
neg
mov
test
jne
cmp
add
push
cmp
je
xor
xor
inc
in
cmps
ds
sub
mov
cmp
div
mov
or
mov
bound
ja
mov
shr
add
test
mov
shl
dec
ret
aam
mov
or
aaa
hlt
mov
das
sub
sub
test
std
pop
inc
mov
add
test
mov
fwait
xchg
and
dec
sub
(bad)
pop
jecxz
mov
sub
out
jp
sar
jne
in
jae
adc
ret
ret
pop
dec
stc
and
xor
cmp
test
fldcw
cmp
sub
pusha
cwde
jecxz
push
xchg
pusha
xchg
and
adc
sub
mov
xor
mov
sub
loopne
push
pop
mov
cwde
sahf
ret
loopne
pop
js
test
adc
inc
adc
movs
dec
mov
je
mov
add
fnstsw
and
sar
cmp
xor
cld
cmp
mov
pop
cmps
mov
jb
mov
in
fld
shr
cmp
gs
(bad)
inc
jne
test
jne
dec
test
ins
mov
and
dec
jmp
loop
(bad)
cmp
adc
add
movs
cmps
sub
shl
cwde
jl
cmps
and
xor
or
add
std
cmp
jne
(bad)
outs
add
add
lea
lea
lea
lea
leave
ja
out
inc
loopne
add
shl
(bad)
sti
lea
sub
loope
scas
(bad)
test
cmp
shl
sub
lea
jne
mov
ret
int
jmp
mov
(bad)
fst
mov
in
jge
(bad)
jg
inc
lahf
cmp
enter
mov
shr
shr
mov
mov
pop
inc
sbb
nop
and
test
xchg
in
add
xor
popa
std
cmc
push
in
cmp
std
enter
sub
xor
dec
and
jmp
cmp
xchg
mov
push
inc
shl
xchg
xchg
mov
and
and
jo
push
sub
shr
ja
shl
sub
aad
mov
scas
dec
and
shr
and
xchg
or
add
jl
mov
pushf
and
and
inc
loopne
or
cmp
inc
and
mov
and
rol
and
add
mov
std
cmp
inc
cmp
sar
jbe
xor
scas
pop
and
aaa
test
add
add
cld
mov
mov
mul
btc
lds
mov
mov
out
mov
and
or
dec
push
loopne
cmp
out
jmp
lds
add
jnp
mov
mov
pop
pop
aas
fdivr
cmp
lock
xchg
daa
test
jbe
std
mov
in
imul
sub
fisub
sbb
gs
add
cmc
sbb
or
cmp
add
or
or
aas
push
sbb
push
cmc
mov
mov
mov
xor
add
mov
mov
add
mov
lahf
in
jmp
mov
xor
mov
mov
nop
gs
fld
pop
add
mov
or
add
stos
fiadd
rol
mov
add
add
dec
sbb
add
inc
icebp
jecxz
xor
scas
mov
nop
fadd
mov
dec
rcr
mov
das
adc
inc
xchg
mov
xor
mov
pushf
out
(bad)
aas
sub
mov
cwde
sub
add
push
push
push
and
(bad)
xchg
leave
sbb
cmp
sti
lahf
sub
mov
mov
push
push
sbb
stos
bound
(bad)
xor
ror
(bad)
jb
add
cmp
pop
adc
rcl
xor
add
sub
daa
ds
push
push
cmps
sub
mov
xor
pminub
push
int
call
or
jp
mov
mov
fimul
mov
cmp
es
sub
inc
mov
cs
add
fmul
push
mov
test
sbb
add
jne
push
add
xchg
ret
inc
add
ja
cmp
je
or
jge
or
cmp
jne
or
jne
cmp
std
sub
and
jne
cmp
(bad)
int3
sub
xor
and
xor
xor
jne
adc
movs
je
push
(bad)
jmp
imul
inc
add
in
jge
mov
dec
imul
sub
mov
add
aas
int
test
mov
jne
adc
inc
jge
mov
daa
pop
push
mov
hlt
out
out
call
mov
add
cld
push
test
cwde
mov
inc
cmps
sub
xchg
ret
dec
js
adc
mov
adc
inc
or
jae
mov
dec
test
jbe
inc
sbb
adc
dec
adc
outs
sub
add
jne
mov
popf
adc
inc
and
(bad)
push
fdivr
xor
faddp
inc
add
add
xor
adc
inc
add
call
std
fwait
cli
push
push
push
xlat
into
pushf
push
push
mov
add
mov
clc
xor
or
sbb
ror
mov
push
ss
mov
xor
inc
jmp
mov
rol
push
ins
js
mov
cmp
call
dec
sbb
mov
out
cmp
sub
mov
xor
ins
out
mov
cwde
jecxz
push
mov
adc
sub
xor
cmp
jge
mov
sar
jmp
add
add
cli
jmp
mov
or
pop
mov
xchg
shr
stos
mov
jmp
shl
and
loopne
sub
lea
mov
shr
test
je
(bad)
xor
retf
sar
shl
sar
inc
sub
std
xchg
dec
out
shl
and
cmp
sub
jge
lea
mov
sub
cmps
adc
and
adc
jge
sub
adc
adc
ror
in
jmp
jl
sub
add
retf
imul
imul
xchg
mov
and
inc
adc
loopne
cmp
or
ja
sbb
cmp
dec
mov
push
lea
mov
sbb
mov
dec
add
lea
cmp
xchg
pop
push
cmp
mov
ins
and
jae
clc
outs
mov
add
cmp
adc
loop
inc
lea
lea
lea
cmp
icebp
or
mov
mov
and
ficom
shr
mov
add
cmp
jb
and
pop
jae
fs
jne
mov
jmp
cmp
je
mov
jmp
(bad)
or
enter
das
fild
(bad)
out
scas
xor
mov
add
add
lea
or
push
loopne
mov
sar
lea
sar
imul
add
mov
imul
mov
sbb
sti
push
jmp
adc
sbb
push
mov
xchg
test
add
pop
jb
xor
mov
popa
pop
add
mov
inc
idiv
pop
mov
stc
pop
jmp
mov
add
cli
(bad)
xor
ror
clc
inc
jae
fsubr
xor
push
mov
add
rol
mov
mov
add
test
push
add
or
inc
adc
jg
add
cmp
jb
push
scas
and
adc
mov
sub
(bad)
xor
cmp
push
add
adc
js
popa
jo
out
and
cmp
inc
xchg
mov
cld
sti
psubsw
cmp
sbb
inc
add
cmps
mov
in
fild
sub
(bad)
dec
pop
(bad)
cmp
packuswb
mov
push
mov
mov
in
add
loope
mov
dec
and
and
and
scas
pop
sbb
js
add
add
aad
xchg
aaa
sbb
neg
add
ret
xor
test
adc
pusha
xlat
adc
or
add
mov
cmc
jo
add
sti
add
(bad)
jle
push
(bad)
jns
add
adc
add
jg
push
inc
adc
jne
loop
add
dec
dec
pushf
jno
test
je
mov
cmp
cmps
pop
icebp
mov
ins
jmp
scas
add
jl
and
fs
push
lock
inc
and
psrad
dec
and
dec
mov
pop
add
je
aas
xor
mov
add
push
and
add
sbb
stos
jne
bound
push
(bad)
jp
xor
div
add
push
test
push
je
xchg
jmp
cmps
test
add
cwde
dec
aad
mov
sti
xor
test
sbb
inc
xor
mov
ror
cs
push
jbe
cmp
es
pop
cli
cmp
inc
push
movzx
data16
sbb
jmp
cmp
push
push
push
and
push
push
inc
mov
dec
and
or
lea
lds
inc
(bad)
dec
popa
jne
adc
jmp
dec
add
cli
add
cmp
lds
test
les
cmp
je
cmc
icebp
sbb
adc
leave
and
push
jmp
mov
dec
mov
and
fcom
jmp
jbe
mov
aad
ret
adc
adc
mov
loope
retf
adc
cmps
(bad)
(bad)
mov
jecxz
test
je
and
je
rol
(bad)
neg
add
mov
ret
(bad)
and
adc
ins
jns
mov
dec
(bad)
dec
loop
xchg
add
cmp
xor
cmp
sub
sbb
pop
mov
mov
jmp
sbb
inc
add
pop
cmp
jne
cwde
pop
or
jmp
ja
push
shl
sbb
jne
or
mov
test
scas
iret
icebp
sti
inc
push
sbb
cmp
adc
test
push
push
add
je
test
jne
and
push
or
popa
pusha
pop
add
adc
aam
push
add
test
mov
mov
je
add
test
jge
mov
ja
and
scas
shr
ret
xor
mov
push
sbb
int
xor
daa
pop
mov
xor
cmp
dec
retf
inc
add
cld
push
push
mov
mov
ret
out
jmp
inc
sub
dec
jecxz
push
push
mov
dec
push
jmp
push
sub
js
push
sub
cli
mov
outs
call
(bad)
pop
es
jb
lea
push
pop
inc
in
cmp
cmp
sti
dec
jne
or
jne
js
xor
test
sub
add
mov
cmp
and
mov
mov
xor
sbb
inc
pushf
mov
mov
or
std
mov
das
xor
and
sbb
retf
add
rcr
rol
or
mov
cmp
mov
mov
mov
test
mov
and
std
cs
pcmpgtd
mov
jmp
inc
lea
cmp
or
mov
add
rcl
fisub
ss
lea
mov
or
add
imul
mov
cmps
sub
stc
pop
popf
sti
mov
mov
shl
aaa
not
and
sbb
(bad)
fisttp
and
cmp
mov
inc
dec
inc
loop
imul
pop
aaa
sbb
jmp
push
adc
inc
test
cwde
addr16
pop
adc
xor
lock
lock
je
cmp
add
push
test
add
dec
mov
imul
pop
cmc
cmp
push
mov
push
sbb
ror
mov
clc
fisttp
aaa
cld
out
sub
cli
inc
push
cmp
jae
sub
and
jmp
fisttp
enter
outs
mov
mov
sub
jns
(bad)
out
add
cli
dec
xor
fiadd
lds
mov
pop
lock
fcomip
sub
mov
or
loop
sub
xlat
dec
add
xor
and
inc
jmp
adc
dec
xchg
dec
xor
adc
inc
and
rcr
sbb
inc
out
mov
test
inc
mov
xor
aad
sbb
ins
sub
add
mov
add
jl
fidiv
dec
push
jmp
lock
jg
jle
ins
out
and
jo
sbb
dec
inc
loopne
stos
cmp
stc
jl
pop
das
rcl
hlt
add
imul
into
xchg
out
inc
pop
es
mov
jbe
loope
loope
cli
sbb
sub
pop
adc
inc
add
scas
jl
pusha
add
push
push
pop
aam
mov
add
shr
jbe
add
dec
cmp
sbb
inc
adc
push
push
call
bound
dec
je
sbb
pop
movs
xchg
retfw
fldcw
push
or
push
sar
inc
sbb
je
jg
adc
je
stc
icebp
mov
hlt
popf
cld
inc
ret
mov
call
fisub
add
shl
ficomp
fs
or
je
stos
xor
sub
cmp
jle
ja
xlat
and
and
and
push
cmps
cmps
hlt
adc
aad
inc
cmps
call
into
cli
fwait
xchg
xchg
lahf
sbb
retf
test
je
lods
fsub
int
stc
lea
mov
mov
addr16
xor
fmul
scas
mov
sbb
movs
in
add
mov
mov
xor
xor
xor
inc
push
xchg
setns
je
ret
lock
je
sbb
adc
pop
cmp
jno
rcl
out
inc
fs
sbb
add
sub
add
cli
jo
test
mov
outs
jmp
xor
jae
mov
fist
xor
inc
add
div
sub
ja
jae
mov
pop
jno
add
push
xchg
or
mov
jmp
clc
xor
mov
out
sbb
xor
(bad)
call
mov
rol
add
cmp
jb
mov
jnp
or
xchg
adc
cli
add
dec
pop
jge
cmc
daa
pop
adc
dec
sub
cmp
or
test
jl
jo
sbb
inc
sbb
push
dec
inc
sub
cmp
loope
lods
je
sbb
add
add
cmp
and
pop
xchg
arpl
ror
cmp
fcom
loopne
retf
cmp
(bad)
sbb
call
(bad)
or
jl
jb
mov
mov
(bad)
push
sbb
pusha
ror
retf
pop
xor
cmc
add
lea
pop
add
fmul
test
sbb
loop
fisubr
fnsave
jbe
cld
dec
retf
and
cmp
shr
(bad)
push
ja
xor
std
xlat
adc
lock
or
xor
or
pop
and
mov
mov
jg
adc
xchg
cmp
jae
cmp
int
sti
sti
xchg
push
xor
push
sbb
sbb
push
xchg
loopne
jae
aam
pop
adc
lea
call
call
dec
jbe
xor
cmp
mov
jae
and
pop
or
xor
and
add
mov
inc
xchg
mov
fist
sbb
sub
test
mov
aas
xor
repnz
(bad)
lock
mov
push
js
adc
cmp
stc
sub
jb
dec
sbb
fisttp
or
mov
fisttp
adc
(bad)
sbb
jae
rol
repz
es
clc
or
add
sub
aas
pop
cmp
js
inc
loopne
inc
es
push
or
out
lea
cmp
push
push
jae
test
mov
jbe
push
dec
test
test
sub
mov
inc
mov
dec
jo
pop
add
jg
add
push
mov
mov
jmp
stos
mov
mov
addr16
xor
shl
call
fisttp
push
adc
ja
outs
or
add
add
aaa
sbb
sbb
pop
cs
push
jge
jle
dec
arpl
dec
(bad)
sbb
mov
adc
ror
push
push
test
fs
pop
adc
icebp
push
push
dec
mov
scas
out
sbb
jle
shl
aaa
inc
xor
pop
rol
adc
adc
pop
jl
add
pop
add
xchg
add
lods
pop
add
mov
add
hlt
dec
neg
mov
add
push
dec
ds
dec
pop
push
ja
iret
adc
pop
pop
add
dec
pop
and
stos
adc
pop
inc
or
sahf
cmp
fcom
das
mov
pop
or
int
inc
das
es
push
jnp
les
add
adc
das
fldenv
or
das
or
or
and
add
(bad)
leave
jle
rcr
mov
pop
dec
add
adc
mov
pop
mov
jl
adc
das
rol
add
fst
pop
int3
adc
adc
pop
dec
fwait
cmps
adc
pop
out
test
push
pop
sub
pop
inc
adc
call
cli
add
lea
push
mov
dec
xchg
or
push
lock
dec
add
cmc
lahf
add
les
ret
push
add
test
ja
outs
pop
xchg
loopne
cmp
icebp
daa
pop
js
lea
push
std
mov
push
xor
ss
push
xchg
xchg
in
pop
fsubr
sti
adc
adc
imul
retf
(bad)
mov
adc
adc
mov
push
push
push
push
retf
adc
adc
inc
push
push
push
push
arpl
sar
int3
lods
adc
xor
sub
(bad)
mov
push
push
push
retf
adc
adc
adc
xchg
rsqrtps
adc
leave
(bad)
mov
pop
adc
dec
not
pop
adc
nop
nop
mov
xor
jne
inc
fadd
mov
xor
push
push
mov
fmul
inc
adc
inc
in
push
sbb
push
adc
lea
ja
inc
cdq
push
test
and
push
push
push
std
fist
loopne
push
out
test
jne
push
push
push
sbb
jne
cs
pop
inc
jo
(bad)
jle
push
pop
imul
sub
pop
add
push
push
push
push
push
mov
xchg
sbb
add
push
ja
cld
fild
test
push
add
cmp
jne
mov
mov
inc
adc
iret
cmp
loop
and
out
or
push
push
iret
push
mov
or
mov
mov
ja
push
mov
mov
inc
add
adc
cmps
jmp
inc
sbb
push
imul
mov
clc
add
mov
in
sbb
lea
fdivr
push
sub
lea
popf
sub
add
add
jmp
fs
push
mov
and
pop
stos
xchg
mov
sbb
mov
nop
das
xchg
test
or
pushf
(bad)
es
inc
fistp
dec
add
mov
sbb
or
mov
stos
mov
and
inc
jnp
test
and
fidiv
cwde
add
push
inc
fnsave
loope
mov
jae
fidivr
add
mov
test
cmp
popf
frstor
loopne
es
add
push
mov
dec
adc
icebp
push
out
cmc
fwait
test
and
lea
mov
xor
pusha
xor
sbb
les
adc
add
movs
and
test
in
cmp
cwde
cli
and
push
fmul
or
push
pop
dec
(bad)
mov
sbb
inc
cwde
pop
shr
cmc
outs
pusha
push
mov
leavew
aaa
inc
shl
pop
test
setle
inc
add
icebp
sar
jge
xchg
jne
loopne
dec
push
sub
cmc
pop
cmp
jle
mov
jmp
sbb
add
sub
jns
and
cmc
add
pushf
adc
push
call
dec
pop
cdq
adc
imul
cmp
mul
pusha
aaa
ret
cdq
jo
inc
pop
cs
sti
inc
dec
nop
jns
add
jmp
add
push
push
mov
push
add
lea
and
mov
mov
shl
and
xor
jg
adc
fadd
sub
cmp
out
add
fwait
inc
xchg
mov
and
pop
lock
jp
push
jle
dec
mov
and
dec
pop
dec
jg
aam
add
mov
inc
call
jmp
push
push
add
and
adc
or
cmp
and
ficom
sub
push
push
mov
sahf
sub
rcr
xor
jb
(bad)
test
or
and
test
clc
in
push
inc
pop
inc
push
add
enter
stos
call
adc
sbb
aas
jmp
sar
add
je
and
inc
std
into
into
pop
pop
test
adc
push
add
or
test
loopne
cdq
push
and
test
push
mov
adc
mov
cmp
cmp
dec
push
xor
push
pop
add
and
sbb
mov
clc
test
je
call
push
cmc
and
cmps
or
push
xchg
jg
lea
push
push
sub
sub
aad
mov
dec
inc
and
lea
std
rol
add
add
jnp
in
and
inc
pop
and
mov
icebp
push
inc
stos
push
call
mov
cmp
pop
aad
dec
sub
mov
jp
das
mov
jbe
shl
int3
and
dec
add
dec
add
add
and
jmp
inc
mov
push
push
xlat
push
mov
sbb
mov
(bad)
pusha
loopne
fsubr
lea
iret
inc
mov
jle
push
and
out
and
sub
retf
and
icebp
or
ds
inc
imul
push
add
push
in
pop
lea
adc
cmp
mov
sub
fisttp
sbb
jnp
push
in
xchg
inc
in
adc
mov
lock
repz
adc
jne
push
div
mov
jmp
mov
push
adc
jnp
pop
pusha
out
mov
mov
and
jne
mov
sub
push
call
lea
cmps
add
jmp
jmp
lea
jp
mov
sub
clc
(bad)
ja
scas
inc
pop
mov
sub
outs
call
cmp
loopne
add
cmp
mov
test
jl
js
data16
cmp
mov
enter
aam
(bad)
jne
mov
add
sbb
inc
mov
mov
lar
loope
or
clc
xchg
dec
and
cmps
push
jo
add
inc
push
push
cmp
enter
mov
inc
cmp
clc
add
xchg
ins
add
fcom
xchg
push
add
(bad)
sbb
add
mov
push
push
jo
lahf
ficom
mov
pop
cmp
jne
pusha
cmp
aaa
stc
add
in
push
cmp
mov
jmp
jecxz
push
push
retf
mov
push
sahf
mov
add
int3
in
adc
pushf
jmp
add
push
sub
in
cwde
or
sub
popa
ins
inc
cmp
sbb
cwde
add
das
out
and
or
lahf
mov
add
mov
push
cdq
mov
add
retf
pusha
inc
xchg
test
push
dec
or
idiv
sti
adc
(bad)
inc
add
adc
fist
or
push
push
push
jbe
lds
adc
inc
mov
xor
or
lods
pop
sbb
pop
test
scas
and
fmul
mov
sbb
fistp
add
xor
jae
jne
call
or
xor
sub
add
add
or
data16
aam
sub
scas
mov
iret
mov
dec
test
jge
xor
jmp
mov
cmp
call
mov
test
mov
add
cli
jge
sbb
arpl
push
cmp
test
mov
mov
enter
sar
and
inc
and
ret
in
fidiv
mov
xor
mov
leave
xor
xchg
ror
lods
(bad)
push
jb
std
(bad)
loopne
add
mov
lock
or
dec
mov
and
fdiv
sbb
pop
xlat
adc
sbb
xor
aas
(bad)
lods
arpl
xlat
sahf
jne
mov
sub
movs
push
or
push
fimul
popf
mov
push
mov
fdivrp
cmc
ror
pop
pushf
ins
mov
push
inc
mov
xchg
jecxz
je
das
jge
push
pop
jo
and
pop
xor
out
or
sbb
leave
cmc
jmp
sbb
lds
mov
adc
jecxz
pop
mov
mov
add
mov
push
or
push
fwait
test
pop
or
add
sbb
ret
push
mov
pusha
push
sub
push
sbb
shr
cmp
arpl
sub
xor
lea
inc
xor
mov
mov
or
repz
loopne
sbb
inc
and
inc
popa
or
xchg
mov
push
ffree
jle
cld
sbb
add
ins
and
fcomp
xor
add
or
dec
add
jge
icebp
mov
adc
enter
add
pop
adc
cmp
ja
jg
and
mov
ja
iret
jmp
pop
neg
sbb
ret
or
inc
dec
add
jle
sbb
add
nop
into
inc
cmc
aad
inc
fdiv
cmp
nop
cmp
sub
test
out
sbb
add
rcr
mov
aaa
clc
inc
jle
or
test
div
xor
in
inc
add
sbb
into
sbb
mov
sbb
enter
pusha
or
nop
fucomp
inc
add
xchg
dec
add
cwde
pop
add
cdq
ror
std
pop
or
lock
add
or
jmp
neg
or
les
stos
pop
or
(bad)
jg
sub
push
push
mov
push
mov
push
fist
std
pop
push
call
push
xor
inc
and
push
or
stos
mov
outs
mov
adc
fdiv
fstp
or
sub
inc
sbb
jo
and
xor
push
sti
xchg
xor
or
cmp
cmp
pop
shl
sub
push
fidivr
arpl
sbb
int3
cmp
push
push
jp
push
retf
hlt
mov
inc
out
fld
jmp
jne
mov
sub
rcr
and
and
and
fidivr
dec
mov
dec
daa
push
push
mov
pop
aad
pop
test
mov
mov
push
inc
pop
mov
call
inc
mov
push
sub
xlat
cmp
inc
dec
sub
mov
fst
xchg
mov
cmp
dec
xor
sub
mov
xor
fnstsw
add
push
push
mov
(bad)
(bad)
fist
leave
and
sbb
mov
mov
mov
pop
mov
mov
mov
add
dec
sub
sub
pop
mov
(bad)
jno
push
rol
call
push
push
mov
call
mov
and
cmp
sub
inc
add
shr
mov
fsubr
sbb
mov
push
push
(bad)
add
push
xchg
sbb
ret
pusha
sbb
pop
xor
lds
fdiv
dec
nop
nop
mov
jmp
xchg
xchg
xor
clc
icebp
inc
inc
lahf
sub
push
inc
and
cmp
xor
scas
or
je
and
shr
push
cmp
ud0
xchg
jae
adc
loopne
pop
inc
jl
jg
and
pop
in
mov
and
pop
cmps
cmc
add
aaa
inc
loope
and
sub
sub
push
sbb
ins
xor
sub
push
jge
xor
add
dec
or
cmp
jb
dec
add
inc
pop
inc
jle
inc
loopne
mov
data16
jmp
dec
adc
push
jmp
mov
cmp
add
(bad)
hlt
inc
push
adc
add
push
dec
bound
cmp
xchg
sar
jae
push
dec
test
rol
or
ror
adc
add
lahf
gs
or
jl
mov
add
and
ret
je
lahf
std
rcr
inc
or
sbb
mov
add
dec
in
and
and
(bad)
ins
or
xchg
sbb
ds
dec
int3
inc
inc
cmps
pop
push
dec
test
nop
push
lea
test
add
ficomp
pushf
xchg
das
and
sub
or
cmp
fadd
pop
(bad)
div
inc
sub
add
das
add
out
mov
test
fistp
pushf
push
jno
and
cmp
xor
pop
sub
out
dec
call
clc
add
int3
add
js
les
loope
into
mov
add
test
cli
add
jg
push
adc
inc
mov
dec
ss
jae
fdivr
and
inc
add
popf
xor
add
push
pop
mov
pusha
pop
ins
mov
add
(bad)
and
xchg
repnz
das
sbb
xor
adc
push
xchg
jmp
je
add
test
or
fistp
rol
pop
retf
sbb
addr16
fs
xor
jg
sub
dec
push
lea
aad
add
jl
loop
(bad)
fld
out
ins
inc
xchg
adc
fimul
scas
or
mov
sbb
push
lea
fidivr
das
pop
or
push
add
dec
sbb
in
rol
into
dec
xor
mov
icebp
nop
ror
pop
mov
dec
icebp
push
mov
bound
adc
test
or
test
call
dec
int3
test
lea
je
push
mov
xchg
pop
or
loop
rcl
(bad)
jmp
adc
lea
lea
mov
mov
inc
(bad)
inc
or
or
pusha
mov
mov
and
std
jg
lea
push
push
lea
lea
cmp
push
push
lea
push
lea
add
push
dec
sub
fucom
xor
jmp
push
hlt
les
inc
mov
mov
mov
or
push
mov
sub
mov
sub
lea
(bad)
jb
lock
push
mov
mov
jne
sub
mov
or
mov
js
mov
adc
sbb
clts
pop
les
pop
data16
pusha
or
sbb
in
sub
icebp
jp
mov
or
dec
sbb
aam
add
mov
and
inc
jg
push
and
push
push
ds
sub
add
cld
mov
inc
cld
fwait
push
les
ror
mov
in
sub
fimul
hlt
dec
and
retf
js
(bad)
(bad)
jmp
sar
mov
shr
lea
loope
xchg
ret
cmp
push
lock
sub
jnp
neg
xor
ret
and
call
rol
rcr
cmp
mov
add
in
dec
in
mov
add
mov
pop
adc
mov
das
or
xor
mov
pop
and
add
lock
cli
add
cmp
mov
mov
push
sti
push
jmp
adc
add
mov
xchg
pop
es
sahf
adc
pop
ret
(bad)
test
jg
and
and
pusha
cmp
sbb
jb
dec
jne
mov
addr16
add
xchg
(bad)
mov
popf
hlt
add
dec
pop
arpl
mov
jo
add
int
sub
adc
ret
and
shl
cdq
idiv
xchg
lea
cmp
jne
push
sar
jne
mov
out
dec
sbb
cwde
shl
lahf
(bad)
pusha
mov
in
mov
and
(bad)
adc
mov
iret
mov
xor
cmp
ja
cdq
mov
inc
add
aas
scas
or
lock
dec
jmp
inc
jmp
sub
add
xor
(bad)
je
retf
or
(bad)
mov
into
cmp
jle
das
push
cmp
jge
mov
mov
(bad)
lock
je
push
retf
mov
les
(bad)
cmps
jmp
and
ss
cmp
mov
sub
add
mov
mov
add
sbb
pop
sbb
(bad)
xor
add
add
mov
cmp
pmaxsw
mov
call
sub
retf
cmp
xor
aam
pop
add
push
add
(bad)
rcl
mov
push
push
lea
fsub
cmp
mov
adc
cmps
lahf
sub
cmp
rcl
add
inc
cmp
mov
xor
and
jl
sub
mov
pop
int
fwait
ds
push
add
enter
or
xor
adc
push
fdivr
push
inc
popf
add
enter
icebp
sbb
mov
pop
test
push
xchg
jmp
jae
shr
lds
mov
call
jmp
clc
mov
neg
shl
adc
repnz
shl
sub
push
neg
iret
les
inc
lods
pusha
cmps
stc
shl
test
je
nop
mov
xor
xor
jmp
push
jnp
lock
or
xlat
aas
adc
clc
xor
fild
push
xor
sbb
dec
dec
adc
sbb
xor
or
push
push
mov
and
call
imul
test
lds
in
or
cmps
xchg
mov
xchg
add
jno
and
outs
and
dec
retf
in
pop
addr16
adc
push
loop
cmp
mov
outs
xor
rcr
ret
sub
data16
sub
jae
(bad)
mov
cmp
fnstenv
stc
mov
ficomp
inc
(bad)
and
inc
pop
fs
adc
neg
call
jne
sbb
sbb
aas
push
adc
jp
aad
xlat
fmul
mov
cld
mov
fisttp
ror
xor
jb
outs
test
mov
push
lea
mov
dec
jg
push
adc
mov
bound
inc
pop
add
fnstsw
cld
mov
mov
sbb
lds
pusha
mov
or
loope
aad
outs
ins
add
xor
nop
mov
pop
adc
and
int
ja
lds
outs
fs
fnsave
adc
xor
fnstsw
pop
mov
add
push
adc
jmp
add
ror
inc
add
loope
adc
or
loope
or
inc
aad
add
aam
inc
test
cdq
cmp
mov
or
dec
dec
(bad)
inc
ins
fadd
or
sbb
in
jo
inc
cmp
js
cmp
fnstsw
popa
sbb
jl
out
pop
add
push
inc
and
ss
push
call
das
test
sbb
xor
loopne
inc
adc
xor
sbb
jmp
dec
cli
mov
gs
mov
js
sbb
in
call
ret
jg
adc
mov
xor
aad
jnp
jbe
sub
inc
jb
push
imul
pop
bound
push
push
test
cmp
push
mov
xor
cld
in
mov
push
sub
jb
inc
ret
(bad)
dec
cmp
or
repnz
arpl
dec
sar
add
test
not
xchg
xor
shl
lock
add
data16
gs
pop
mov
sbb
sub
pop
xor
enter
les
mov
or
add
adc
adc
pop
nop
stos
push
das
mov
dec
jb
push
and
pushf
shl
mov
enter
fild
test
jl
cmp
mov
sbb
fadd
jecxz
daa
loopne
nop
test
ret
pop
add
mov
adc
add
mov
jg
loope
adc
lea
enter
test
mov
mov
mov
dec
inc
cmp
(bad)
loopne
dec
add
outs
mov
sbb
mov
mov
mov
and
sub
or
scas
mov
inc
push
mov
pusha
call
lods
iret
add
adc
push
push
push
push
adc
shl
sbb
std
data16
cmp
push
push
(bad)
(bad)
outs
jmp
mov
test
je
push
xor
jg
add
lods
jg
add
push
add
xor
and
cmp
pop
xlat
adc
cmp
push
push
xor
adc
daa
adc
sub
cmp
popa
adc
sbb
(bad)
lock
pop
adc
hlt
pop
adc
pushf
aaa
pop
add
jnp
test
jae
icebp
inc
add
cmps
fs
or
add
pop
clc
push
lock
test
(bad)
fdiv
jne
or
adc
nop
mov
xor
push
cmp
mov
shl
jne
rcr
adc
call
cmp
jne
push
call
pop
xchg
dec
cwde
jge
and
lods
retf
lock
inc
pop
adc
cmp
(bad)
push
adc
pop
sub
sub
sbb
mov
cmc
or
aaa
add
add
inc
ja
fimul
icebp
add
cmp
sub
sbb
sbb
in
cmp
cmp
call
dec
add
cmps
mov
and
dec
mov
fs
bound
les
pop
mov
push
ss
jo
add
js
outs
or
pop
data16
rcl
(bad)
push
shl
or
inc
push
push
push
mov
call
sub
mov
dec
and
mov
lea
es
sub
cmp
idiv
cmp
jl
sbb
inc
cmp
outs
sbb
add
fbstp
push
sbb
leave
mov
xor
stc
push
push
(bad)
jg
mov
mov
cmp
jne
inc
jmp
cld
adc
ret
fcom
inc
inc
cmp
iret
call
adc
jmp
aas
clc
(bad)
inc
and
lea
jmp
test
je
inc
inc
into
inc
inc
idiv
(bad)
dec
int
add
or
dec
and
jl
jmp
test
je
test
mov
je
xor
or
adc
out
fdivr
popf
push
inc
and
sub
jmp
cmp
or
leave
adc
(bad)
cmp
jne
inc
popf
push
adc
push
add
call
lock
add
cmp
cwde
stos
fcomp
inc
and
add
or
ret
push
std
sub
out
fnstsw
shl
sub
imul
xor
out
sub
add
ja
add
xor
fst
retf
mov
std
cmp
jle
mov
cs
inc
add
mov
sets
dec
and
mov
sub
add
es
or
sbb
jmp
mov
sub
adc
jne
inc
sbb
jb
cwde
daa
xor
push
pop
sub
sub
mov
cmp
mov
arpl
cli
push
xchg
lock
add
pop
cli
ins
imul
and
je
sbb
fiadd
call
sub
sbb
xchg
adc
push
lock
dec
je
cmp
push
jmp
je
pop
sbb
jae
push
call
js
xor
push
mov
cmc
dec
sub
and
dec
gs
sub
inc
adc
popa
les
push
nop
add
lahf
ret
rcr
div
mov
jmp
ds
add
bound
add
shr
push
mov
repz
push
sar
xchg
inc
mov
cs
or
leave
in
fidivr
push
or
shl
push
adc
push
push
push
(bad)
adc
mov
mov
cmp
add
pop
les
and
dec
nop
or
inc
std
call
das
mov
mov
push
mov
call
mov
mov
push
xor
rcr
ret
mov
fsub
sub
rcl
push
jl
(bad)
jae
ss
imul
pop
outs
inc
or
(bad)
(bad)
and
pop
push
add
ja
mov
inc
and
mov
add
jge
mov
push
or
adc
popa
lock
sbb
pop
out
inc
loopne
mov
xor
sti
jnp
sbb
mov
pop
outs
push
adc
mov
cmc
pusha
stos
xchg
test
jg
add
mov
in
mov
mov
push
jp
ss
or
mov
add
add
add
fwait
add
inc
adc
stc
fst
sub
rol
cld
addr16
call
cmp
retf
mov
sbb
cmp
je
mov
adc
push
int3
push
add
mov
and
inc
inc
fs
nop
pop
ficom
jecxz
push
mov
pop
ds
stos
xchg
cs
add
pop
mov
xchg
inc
inc
jmp
fist
loopne
add
push
dec
adc
push
pusha
(bad)
fisttp
inc
or
repz
rcl
pop
adc
(bad)
(bad)
xchg
imul
or
adc
mov
cmp
out
bound
cli
push
jmp
push
pop
pop
push
pop
fs
(bad)
jo
mul
inc
and
jne
push
ret
sti
(bad)
or
aas
(bad)
cwd
mov
ins
push
push
adc
push
sbb
lds
sti
ud1
inc
xchg
jmp
push
push
inc
std
lods
and
cmp
popf
push
movs
mov
js
xor
in
sub
sub
sbb
cli
xor
add
sub
push
sbb
out
dec
popa
mov
inc
jle
or
movs
push
push
push
push
push
mov
fwait
xor
ss
add
adc
(bad)
call
jg
push
sbb
push
aad
xor
push
cmp
or
sbb
test
inc
sub
jl
pushf
add
out
pop
aam
or
pop
cmp
and
out
adc
fs
push
(bad)
lods
and
cmp
lea
or
mov
inc
add
sbb
jno
sahf
pop
mov
test
test
clc
pop
pop
push
xor
inc
inc
adc
scas
call
and
xchg
cld
sbb
cmp
jne
push
pop
adc
cmp
leave
scas
dec
sub
ss
adc
adc
pop
mov
add
inc
cmp
push
inc
mov
push
or
ins
push
xor
or
add
mov
cli
xchg
out
lock
pusha
sahf
adc
js
pushf
and
(bad)
and
push
hlt
ins
mov
aas
pop
and
shl
shl
daa
ret
arpl
je
shr
and
int
xchg
mov
out
dec
popf
inc
jl
retf
mov
sub
lock
nop
add
jnp
inc
adc
fmul
add
inc
test
retf
mov
jle
sub
jmp
(bad)
jl
or
gs
je
psubd
push
lea
add
nop
loope
add
push
add
outs
push
fcmovnu
cmp
pop
scas
pop
add
js
sbb
cmp
icebp
cmc
sbb
xor
push
mov
shr
dec
pop
mov
mov
mov
aad
mov
je
xchg
cmp
or
jmp
mov
mov
dec
pusha
pop
call
add
or
xor
jl
cmp
push
and
cmp
inc
daa
push
into
push
sbb
cmps
cmps
jmp
pop
inc
push
sbb
push
bound
fsub
call
and
jg
add
mov
add
mov
cli
mov
add
inc
sub
dec
cmp
jne
adc
inc
dec
lods
add
cld
hlt
jg
fidiv
sar
adc
jmp
xor
sub
push
mov
adc
mov
push
inc
pop
add
inc
(bad)
les
lahf
je
out
sbb
sub
push
mov
inc
pop
mov
daa
ins
add
dec
or
sub
inc
inc
loopne
jl
xchg
mov
imul
dec
std
shl
inc
mov
lock
les
movs
call
pusha
fstp
inc
pop
cs
xchg
xor
clc
popa
cmp
cmp
test
sbb
jge
mov
push
and
std
inc
add
cmp
mov
add
mov
sub
push
xchg
xchg
shl
adc
repnz
xchg
iret
inc
add
add
cmp
push
add
jno
and
mov
xchg
sub
cmp
popf
cmp
in
push
ret
or
(bad)
sbb
cmp
or
pop
nop
mov
rol
les
cmps
rol
jmp
dec
cmps
test
inc
and
rcr
js
pusha
jmp
es
sub
inc
mov
add
push
shl
test
cmp
mov
inc
mov
push
idiv
mov
mov
push
add
or
mov
nop
add
test
nop
add
icebp
jle
adc
aad
cmc
xor
lea
xor
and
fs
out
mov
add
les
stos
pop
adc
lock
and
enter
lea
sbb
sbb
call
add
dec
adc
mov
out
add
js
mov
pop
icebp
inc
loopne
xchg
inc
and
cmp
jne
inc
fadd
add
xchg
push
push
fiadd
add
add
push
xor
sub
test
mov
push
int
push
push
retf
push
and
sbb
cs
push
push
mov
push
push
push
cmp
inc
xchg
add
inc
inc
add
push
lods
push
push
push
xor
push
mov
push
pop
inc
mov
mov
ja
call
dec
or
mov
mov
lea
mov
and
icebp
inc
dec
sub
xor
fiadd
mov
sahf
aad
jmp
pop
lea
mov
repz
jo
inc
push
push
push
jae
cmp
push
or
hlt
or
inc
add
pop
xchg
add
push
scas
jle
lods
cwd
mov
data16
sti
data16
xchg
and
add
jle
mov
adc
push
sub
mov
pop
(bad)
(bad)
fist
stc
mov
mov
shr
mov
mov
add
dec
jne
ret
add
inc
icebp
inc
add
push
or
mov
add
sbb
or
test
enter
clc
xchg
(bad)
sbb
sbb
sahf
test
pop
pushf
jae
or
sbb
(bad)
mov
mov
push
push
mov
lock
lock
jb
outs
clc
xor
(bad)
push
lea
or
or
jmp
pop
(bad)
adc
fwait
movs
push
adc
lds
icebp
jl
sub
sbb
adc
push
inc
or
add
loopne
jbe
lds
push
inc
add
push
dec
and
mov
cli
rol
push
add
jg
jmp
sub
push
push
push
push
push
pop
cmps
push
aas
add
ja
push
outs
inc
cmp
mov
mov
mov
popa
ret
fwait
and
pusha
fcom
add
popf
jl
xchg
scas
or
pop
into
(bad)
inc
add
ins
push
bound
ins
mov
mov
outs
loope
call
jno
push
hlt
iret
lea
dec
dec
or
sbb
jmp
and
sar
push
mov
test
je
jmp
cld
adc
fsubr
pop
add
or
add
cmp
xor
mov
or
cpuid
dec
dec
add
adc
push
dec
push
std
mov
xchg
mov
xor
jl
cld
aaa
icebp
pop
retf
inc
push
mov
or
mov
mov
push
dec
adc
sbb
adc
cmp
sub
push
push
cmp
jne
xchg
mov
mov
mov
jmp
inc
(bad)
mov
dec
or
mov
mov
int3
push
sbb
sub
jbe
xor
sub
mov
dec
inc
dec
add
es
jae
in
outs
gs
mov
icebp
jg
test
mov
mov
dec
mov
lock
dec
push
cmp
or
lds
pusha
mov
jg
xor
cmps
push
clc
daa
jne
jp
xor
pop
jnp
div
imul
es
je
inc
jmp
dec
sub
inc
dec
cmp
jge
inc
jmp
xor
icebp
mov
add
ja
and
xorps
adc
mov
and
adc
sbb
mov
out
call
hlt
dec
cmp
lock
push
jmp
mov
dec
jmp
clc
pop
mov
dec
dec
jmp
xor
and
or
mov
dec
jmp
dec
inc
adc
stc
(bad)
cmp
sub
fcomp
pop
adc
xchg
push
mov
fadd
xchg
or
sbb
sub
cmp
dec
xor
(bad)
mov
sub
retf
adc
je
dec
sub
sub
jge
mov
mov
push
in
sbb
aaa
pop
sbb
and
jl
add
dec
sub
add
int3
std
or
xor
test
jle
xor
push
fcom
and
cmp
jl
mov
pop
aaa
(bad)
je
sub
stos
xchg
enter
rol
adc
rol
push
shr
add
or
push
push
mov
pop
add
sbb
sub
jno
fsubr
clc
xchg
adc
adc
pusha
push
push
jmp
mov
push
mov
sbb
jo
and
inc
nop
push
pop
jmp
dec
je
mov
mov
sub
enter
add
mov
mov
cdq
idiv
push
mov
add
call
inc
cmp
or
or
or
xor
or
pop
pop
in
ficomp
or
add
mov
inc
push
mul
pop
cmp
cmc
push
aam
call
shr
and
push
push
lea
sbb
pop
jle
ins
(bad)
jae
pop
pop
psubd
or
cli
(bad)
push
je
adc
lds
adc
inc
pop
mov
or
aad
push
inc
push
cmp
sbb
fcmovnu
inc
pop
sbb
jl
test
mov
(bad)
(bad)
jl
cmp
jge
mov
cmp
jge
imul
mov
add
cmp
jl
add
nop
inc
add
clc
(bad)
jne
jg
mov
repnz
arpl
add
cmp
out
fisub
push
dec
leave
je
mov
jl
cmp
cmp
pop
cdq
idiv
jae
add
int3
ror
mov
ret
push
int3
dec
push
push
aaa
or
(bad)
push
inc
mov
push
mov
push
clc
test
clc
mov
inc
push
xchg
(bad)
rol
fdivr
mov
push
inc
add
in
hlt
mov
out
pop
into
les
mov
pop
pop
mov
into
jne
push
pop
adc
add
ror
push
cmp
mov
jne
mov
push
mov
push
mov
push
push
jmp
cmp
jne
mov
mov
jns
and
out
test
xor
mov
pop
lahf
inc
sub
add
add
test
jl
cmp
jge
push
ins
sbb
scas
inc
or
mov
adc
rcl
mov
cmc
in
jmp
pop
popf
jecxz
sbb
pop
fisub
les
inc
mov
sub
mov
add
add
mov
adc
adc
shl
aas
clc
inc
add
sbb
scas
inc
test
pop
pop
xor
push
pop
inc
sub
xor
std
aaa
jne
mov
clc
test
jne
push
aaa
jge
jmp
arpl
lea
cmc
xor
dec
add
pop
imul
sub
mov
das
ja
in
mov
push
jae
push
adc
inc
mov
pop
in
xchg
sbb
je
mov
and
jnp
dec
and
and
cmp
jle
xchg
sbb
(bad)
or
jp
xor
outs
inc
dec
add
sar
add
adc
mov
lea
adc
fs
out
and
mov
dec
cmp
xchg
and
xchg
mov
stos
cmp
inc
sub
inc
or
cmp
outs
(bad)
jle
inc
add
pop
test
mov
lock
scas
push
inc
mov
imul
call
mov
std
shl
add
add
rcl
lds
in
pusha
sub
push
or
pop
cld
dec
fidivr
mov
add
mov
fnstsw
outs
jo
sub
pop
cdq
mov
mov
retf
or
push
push
xchg
mov
push
dec
mov
mov
shl
sub
mov
aad
ret
mov
imul
fnstcw
add
sbb
neg
mov
add
pop
pusha
pop
mov
and
inc
pop
inc
out
and
adc
sbb
pop
out
add
mov
push
adc
mov
cmp
mov
or
jg
push
shl
sub
add
add
mov
scas
inc
adc
les
call
push
ja
arpl
mov
sub
(bad)
jg
ror
notrack
mov
test
jge
neg
push
sbb
add
or
fcom
add
push
fisttp
adc
or
mov
inc
mov
pop
add
nop
loopne
or
push
lea
sub
push
pop
add
out
cmp
stos
ficom
push
push
mov
adc
(bad)
fsub
adc
xlat
fst
push
push
cmp
add
je
jbe
or
pop
jnp
(bad)
fild
cld
retf
or
out
cmp
aam
in
adc
push
adc
loop
sbb
xlat
sub
stc
or
xlat
pop
adc
jle
mov
pusha
rol
push
add
sar
ja
adc
inc
adc
or
mov
xor
dec
cmp
les
push
jbe
jle
call
inc
mov
mov
inc
push
loope
add
sub
push
(bad)
jg
loopne
std
add
pop
cld
jmp
or
jmp
add
stos
call
out
pusha
pushf
jno
sbb
int
test
and
pop
add
mov
sub
pop
mov
sbb
rcl
cmp
or
jbe
jle
(bad)
jne
mov
add
int
cmp
mov
scas
dec
cmp
mov
inc
test
and
fdivr
jmp
mov
xor
mov
mov
cmc
test
test
mov
mov
dec
jae
pop
mov
mov
mov
sbb
push
mov
(bad)
jmp
pop
mov
inc
sub
add
jo
and
sti
adc
jbe
je
fadd
dec
dec
mov
mov
inc
add
push
or
inc
ror
add
inc
dec
in
stos
xor
stos
or
test
adc
mov
(bad)
outs
inc
outs
sub
aaa
jo
push
and
push
std
jg
adc
andnps
adc
mov
mov
pop
xchg
aaa
sub
out
push
pop
cdq
and
inc
cmp
fsubr
add
cmp
pusha
clc
or
xor
xor
jg
(bad)
inc
push
mov
(bad)
jne
cmp
je
push
or
je
movs
jmp
ror
push
inc
movs
sub
mov
xor
push
push
jmp
adc
call
cmp
jne
mov
push
adc
pop
popf
or
mov
lea
aas
hlt
push
mov
call
retf
(bad)
out
aaa
adc
pop
pop
leave
mov
sbb
push
mov
fcmovbe
imul
push
push
push
and
adc
sub
arpl
loopne
je
adc
std
jne
popf
lock
in
jl
jo
jl
ins
push
push
imul
inc
mov
mov
xor
dec
or
sbb
out
xchg
call
loop
jle
jle
call
mov
jnp
enter
push
cwde
mov
aad
xor
add
jns
add
test
call
mov
add
repz
inc
sbb
push
shl
mov
cmp
clc
mov
fincstp
fadd
adc
push
push
call
push
call
push
inc
dec
outs
add
and
iret
add
in
sub
add
mov
call
outs
pop
fs
push
cmp
mov
push
push
mov
push
push
push
adc
mov
cmp
xor
and
inc
jo
test
add
push
adc
add
mov
test
lea
push
test
test
pop
test
inc
add
mov
clc
push
sbb
xor
xor
cmp
pop
fs
jnp
and
cwde
fbstp
xor
push
rcl
cmp
arpl
test
adc
jno
mov
(bad)
fild
adc
test
je
lea
in
and
(bad)
jg
inc
jo
xor
inc
add
pop
push
jne
cmp
je
jecxz
mov
aad
cmp
push
out
cmp
xchg
inc
mov
pusha
push
addr16
add
push
div
pop
and
push
inc
mov
push
add
sub
leave
mov
mov
shr
jmp
test
inc
jne
into
add
shl
or
fistp
out
sti
hlt
or
ins
addr16
inc
and
adc
pop
sbb
mov
mov
xchg
in
adc
add
dec
pop
pop
imul
mov
iret
inc
in
mov
out
frstor
call
mov
movs
add
xor
mov
jo
popa
cmp
ins
loop
add
xor
cmps
adc
inc
fsub
or
lock
test
je
jbe
lock
add
lds
repz
pop
js
arpl
mov
inc
mov
adc
shl
fs
dec
or
sbb
sbb
lea
ja
xchg
mov
dec
sbb
mov
xchg
ret
je
pop
aas
adc
jne
dec
fild
into
mov
stc
inc
sbb
enter
in
mov
cmp
mov
jge
nop
cmp
push
xchg
lahf
dec
push
mov
and
or
mov
inc
jg
je
xor
(bad)
dec
fild
add
or
add
cmp
adc
push
call
mov
push
mov
lods
xor
mov
mov
mov
lahf
add
sbb
xor
mov
mov
clc
pop
or
or
xchg
mov
scas
cli
sub
pop
lock
dec
jne
pop
loopne
(bad)
(bad)
dec
add
or
inc
adc
adc
xor
scas
outs
repnz
popf
nop
nop
jmp
mov
cmp
and
leave
ins
lahf
mov
inc
adc
std
pop
lods
mov
mov
and
sub
and
or
cli
and
repz
cmp
mov
pop
push
xor
bound
dec
cmp
ja
xor
mov
sub
pushf
cmp
mov
xor
add
inc
adc
call
mov
mov
out
mov
sbb
mov
xor
jbe
jge
sbb
push
ja
push
pop
pop
ret
xchg
add
push
or
sub
inc
xor
ret
nop
aam
inc
add
add
or
jne
pop
add
test
inc
gs
add
outs
bound
push
ja
and
push
rcr
or
je
sti
cmp
dec
je
ss
clc
mov
mov
sbb
add
mov
ret
je
xor
mov
or
fild
js
je
mov
push
rol
and
mov
mov
mov
sbb
cli
adc
je
mov
rcr
sub
and
outs
pop
or
shl
push
mov
jg
or
cs
jne
ds
jmp
sub
jp
sub
cmp
cmp
jne
(bad)
sub
sti
cmp
jne
jle
jle
sbb
push
push
jmp
sbb
push
mov
mov
pop
dec
sub
outs
xor
inc
cmp
add
aas
jp
pop
dec
fbld
inc
ror
pop
dec
mov
push
cli
outs
pop
mov
ins
sub
mov
add
lahf
aad
div
into
retf
jne
mov
test
jne
or
jae
xchg
fdiv
cdq
add
shl
jmp
cmp
ss
(bad)
(bad)
push
enter
mov
dec
adc
pop
lea
and
je
mov
push
push
jge
adc
enter
das
aad
jle
cmp
std
int3
mov
scas
xor
dec
push
jle
cmp
sub
add
jmp
pop
jne
outs
adc
inc
xchg
adc
stos
push
cmp
add
or
aad
dec
mov
leave
add
out
inc
or
sar
xchg
sub
jg
(bad)
ror
xor
pop
ret
mov
rol
push
add
push
add
sub
inc
lock
ret
cmp
cmp
push
sub
mov
je
data16
aaa
sbb
sub
(bad)
pop
outs
add
rcl
aaa
mov
jae
cmp
push
stos
cmp
idiv
je
mov
adc
cmp
mov
xchg
pop
mov
push
push
sbb
pop
add
cmp
jb
outs
push
rol
add
sub
fucomip
mov
lea
mov
sar
adc
xchg
rol
pop
add
addr16
ret
adc
xchg
loopne
loope
scas
and
outs
adc
inc
je
enter
scas
in
inc
mov
xchg
adc
mov
mov
and
and
or
ret
pop
or
inc
and
enter
dec
or
out
(bad)
lock
and
inc
add
push
add
mov
pop
ficom
mov
jle
sub
mov
(bad)
out
inc
and
mov
pop
mov
mov
fucomp
xchg
mov
pusha
call
mov
(bad)
sub
mov
sbb
pop
test
push
shr
fild
out
and
sti
mov
push
mov
call
test
ja
xchg
stos
loop
mov
sbb
xor
arpl
push
call
and
or
lds
mov
in
mov
pshufw
and
add
std
ja
sbb
push
mov
test
jle
cmp
hlt
sbb
adc
lock
push
repz
jg
mov
add
sub
mov
mov
adc
dec
add
or
mov
sbb
mov
adc
mov
mov
mov
(bad)
data16
inc
push
dec
dec
add
js
dec
jl
mov
mov
(bad)
cmovae
test
je
mov
jge
adc
loopne
cs
in
inc
dec
lods
pop
push
push
outs
or
in
inc
add
pushf
je
sbb
mov
loop
jne
adc
mov
(bad)
cmp
add
test
je
mov
test
je
dec
adc
mov
push
mov
inc
inc
test
jne
mov
xor
mov
inc
sbb
or
push
xor
xor
xor
sar
fcmovnb
add
jbe
sub
and
test
jne
bound
mov
push
cld
out
add
inc
add
push
lock
div
test
les
sbb
test
sbb
add
mul
shr
mov
jmp
mov
into
sub
dec
div
push
mov
ins
adc
sbb
loopne
shr
mov
push
jmp
xor
(bad)
test
out
jmp
sbb
shl
mov
adc
push
test
je
dec
mov
int3
jne
aas
adc
jmp
xor
ja
rcr
pop
neg
nop
jg
jp
cmps
mov
cmp
(bad)
aas
add
div
cmp
jne
jle
cmp
and
cmp
jl
mov
ffreep
dec
push
dec
or
ret
call
sahf
pop
ret
or
push
mov
jle
or
push
or
js
add
add
loope
inc
ja
sbb
adc
add
sub
mov
or
or
or
js
sub
mul
outs
and
je
dec
sub
mov
fistp
das
inc
mov
in
fsub
and
pop
push
mov
test
mov
test
fbld
pop
add
scas
pop
inc
push
push
retf
fldenv
inc
loopne
and
stc
sub
push
cli
ret
adc
xor
sar
mov
mov
shr
sub
jmp
(bad)
(bad)
(bad)
(bad)
cli
jp
jae
cmp
jl
mov
jmp
mov
mov
sar
and
inc
jnp
aas
inc
mov
dec
xor
mov
and
sbb
test
jge
aas
sbb
and
leave
adc
and
std
jg
and
adc
test
je
dec
inc
inc
cmp
sub
inc
pop
arpl
push
popa
xchg
jmp
call
call
mov
test
das
pop
sub
loope
je
cmp
jge
rol
cmps
push
int3
adc
out
or
js
out
and
pop
add
in
inc
ffreep
aas
adc
xor
cmp
je
inc
cmp
mov
mov
(bad)
cld
je
cmp
jbe
cmp
je
lea
movs
dec
das
mov
mov
cmp
or
mov
mov
mov
push
mov
adc
into
adc
pop
pop
add
adc
pusha
cs
rsqrtps
fdivrp
loope
add
sbb
push
push
push
sbb
add
sub
push
jge
fadd
sub
adc
jbe
add
inc
inc
pusha
xchg
dec
push
add
mov
iret
xor
retf
or
das
or
cmp
data16
les
sub
push
es
arpl
or
dec
call
or
dec
jg
scas
(bad)
ffreep
jo
scas
dec
mov
lea
push
push
push
push
das
(bad)
cmp
push
or
mov
mov
mov
add
and
mov
or
jae
adc
push
and
mov
push
push
fs
popa
cmp
push
pop
fwait
mov
adc
push
ins
mov
adc
jge
mov
push
jo
sbb
add
add
hlt
or
or
mov
mov
or
rol
dec
mov
test
push
cld
inc
clc
je
fld
mov
pop
push
div
add
mov
jmp
add
inc
clc
mov
cmp
xchg
inc
or
cld
jmp
and
push
inc
fbstp
das
push
and
sub
add
xor
add
cmc
sub
and
xor
rep
inc
mov
jle
sbb
daa
int3
lea
fld
mov
addr16
js
mov
in
dec
loop
daa
pop
sahf
and
ja
sbb
shr
repz
pop
sub
cmc
aas
xchg
test
jbe
cmp
ja
cmp
pop
cwde
jmp
or
(bad)
or
mov
add
push
or
pop
ret
pop
pop
mov
jl
sbb
jg
nop
add
push
push
sar
icebp
call
add
pushf
jo
sub
jg
add
xor
div
sar
ja
jmp
(bad)
pop
and
shl
xchg
clc
call
mov
cmp
test
jle
test
je
test
jl
sti
sbb
test
jle
push
push
in
js
pop
sub
cmp
jg
aas
inc
icebp
pop
lea
cmp
es
or
adc
mov
mov
hlt
sbb
scas
int
mov
nop
push
ror
iret
jb
pop
ret
imul
mov
xor
add
pop
mov
pop
mov
sub
daa
pop
xor
fimul
loop
pop
nop
mov
rcr
mov
push
fbld
and
push
and
cmp
cmp
mov
adc
mov
loop
cmp
dec
push
or
jb
push
inc
ret
inc
ja
jmp
sbb
ret
dec
clc
test
push
je
retf
add
push
inc
adc
das
ret
push
retf
push
addr16
or
in
ror
jle
or
or
mov
(bad)
popf
adc
pop
dec
dec
inc
jne
xor
or
sub
and
push
adc
dec
not
jb
fistp
mov
shr
mov
xor
mov
retf
ffreep
aaa
push
mov
mov
ret
pop
jnp
mov
pop
sub
mov
shr
xor
mov
icebp
rol
ret
ret
sbb
xor
jmp
ja
fmul
cwde
mov
pop
pop
ret
mov
retf
rcl
dec
dec
jne
pop
pop
not
cmp
push
xor
sar
ret
mov
cmp
je
push
mov
mov
mov
mov
or
neg
sbb
push
and
mov
sub
pusha
mov
in
push
imul
dec
nop
jle
push
cmp
xor
lock
mov
aad
jecxz
sbb
mov
mov
push
push
call
xchg
xchg
in
inc
mov
inc
adc
mov
lahf
or
jecxz
add
(bad)
fisttp
rcl
mov
aaa
add
pusha
js
jne
cmp
jne
(bad)
(bad)
jmp
ret
mov
mov
cmp
jne
mov
mov
cmp
jne
sbb
inc
mov
jg
mov
loope
test
cmp
dec
pop
cmp
mov
js
cmp
call
sti
mov
jge
mov
fld
inc
fiadd
cmp
cld
sbb
movq
push
sbb
shl
mov
pop
mov
aaa
adc
push
or
push
not
and
mov
aaa
inc
loopne
add
mov
fisub
call
adc
outs
dec
cmps
js
outs
ja
cmps
ret
fs
mov
sbb
add
push
push
sub
sahf
adc
popw
fcom
inc
loopne
sti
test
add
add
mov
sub
into
cmp
sbb
fild
mov
xchg
ret
dec
mov
mov
xor
out
fnstsw
or
jmp
in
outs
mov
dec
xor
mov
mov
inc
mov
and
add
mov
mov
mov
push
inc
sbb
cli
fist
cmp
mov
je
mov
ins
and
inc
sbb
loop
add
mov
jmp
push
adc
jmp
cmp
jbe
and
dec
adc
and
push
add
sahf
adc
(bad)
(bad)
mov
add
add
leave
mov
mov
inc
mov
mov
add
inc
or
pop
clc
add
add
add
inc
add
ja
into
lds
and
add
rcr
mov
fcomp
add
shl
test
mov
iret
sub
es
mov
push
fadd
std
scas
mov
cmp
jne
enter
sbb
add
push
adc
inc
adc
dec
add
loop
aaa
cmp
dec
or
or
push
jae
mov
or
stos
mov
dec
dec
arpl
jg
and
loope
sti
mov
shl
push
(bad)
xchg
push
inc
mov
dec
mov
mov
in
dec
inc
mov
cmp
ror
fbld
dec
or
loop
add
xor
cmp
mov
and
push
push
cwde
loope
mov
cs
test
div
in
je
outs
mov
mov
out
pop
add
loope
test
in
dec
push
push
les
add
daa
mov
in
js
or
imul
inc
add
jbe
rcr
sti
shl
mov
inc
out
lahf
mov
or
xchg
inc
sbb
or
push
dec
sahf
rcr
cmp
inc
out
lds
mov
data16
in
inc
cmp
push
mov
dec
lods
jg
cmps
test
pop
xor
dec
or
push
rcr
add
xchg
leave
clc
out
(bad)
pop
inc
sbb
maxps
and
mov
cmp
mov
pop
pushf
shl
mov
inc
add
cmp
add
ds
add
fbstp
push
mov
inc
add
pop
shl
mov
pop
icebp
das
push
scas
or
or
iret
xor
out
cmp
sub
loop
xor
and
sti
mov
push
ret
jb
mov
(bad)
aas
inc
lock
adc
mov
call
aad
fcmovb
loop
cld
into
jno
add
adc
add
or
add
add
and
hlt
xchg
enter
clc
sbb
enter
sti
jb
and
cmp
dec
jne
jg
test
push
add
inc
add
dec
jne
mov
xor
mov
div
mov
mov
or
fisttp
pop
cld
outs
inc
pop
mov
pop
shl
pop
or
xchg
push
sub
push
(bad)
and
add
cmp
add
cld
rol
sub
push
mov
loopne
outs
or
inc
js
je
lea
mov
adc
rcl
xchg
adc
out
or
mov
int3
mov
mov
sbb
mov
test
es
data16
das
lea
lods
mov
in
push
mov
mov
adc
mov
jbe
push
dec
xor
mov
fucomi
mov
mov
mov
sar
mov
mov
ret
sbb
sbb
or
or
xor
xor
inc
sbb
inc
pop
cmps
adc
xor
ret
push
or
in
pop
lock
push
mov
mov
fist
cmps
stos
adc
push
push
push
sbb
add
xor
adc
(bad)
pop
je
push
push
test
inc
outs
and
mov
lahf
cmc
cs
inc
pop
jmp
pop
push
inc
inc
adc
pop
(bad)
adc
mov
test
mov
aas
or
leave
push
(bad)
in
(bad)
fwait
jp
mov
mov
shl
add
adc
jnp
aam
or
add
adc
jg
adc
fnstenv
pop
or
mov
dec
mov
xchg
dec
mov
xor
jae
sub
mov
mov
inc
mov
das
and
idiv
sbb
lds
push
push
push
(bad)
ds
push
add
jmp
sub
inc
sbb
fst
push
push
pop
push
push
loopne
inc
pop
cwde
jmp
jae
mov
or
mov
outs
fwait
add
in
int3
idiv
or
inc
and
inc
adc
push
push
push
mov
xor
xor
mov
adc
sbb
xor
and
loop
arpl
cmp
or
push
adc
ror
cmp
dec
and
push
or
jg
fdivr
add
mov
jnp
xor
inc
inc
adc
cwde
(bad)
pop
(bad)
adc
sbb
aas
sub
popa
push
hlt
pop
add
add
pop
and
in
add
into
mov
enter
(bad)
sti
mov
pop
test
jbe
mov
add
clc
add
ins
fild
(bad)
ja
pop
xor
test
inc
js
or
rol
call
jmp
xor
lock
push
push
and
inc
imul
adc
mov
add
in
daa
sti
inc
pop
adc
test
push
and
or
add
inc
cmc
or
lahf
or
ret
adc
pop
sbb
je
push
or
or
ret
test
xchg
jae
mov
cwde
or
add
mov
leave
or
pop
add
xor
cmp
pop
setne
xor
jnp
rol
pop
sub
xor
test
jns
jecxz
xlat
ins
jmp
clc
(bad)
jg
arpl
xchg
adc
jle
inc
adc
or
jecxz
jnp
push
mov
mov
and
sub
mov
pop
lea
mov
icebp
dec
jl
inc
js
out
mov
and
mov
mov
mov
adc
mov
call
xchg
mov
fdiv
xchg
shr
les
push
aas
push
add
call
rol
rep
mov
ror
mov
je
cmp
pop
add
mov
in
sbb
add
adc
jmp
add
aam
scas
and
mov
mov
(bad)
mov
scas
lds
add
aad
sub
cmp
push
shl
mov
lea
stos
cmp
sub
or
push
mov
inc
mov
push
inc
jp
dec
je
js
adc
dec
je
mov
test
jne
mov
xor
push
(bad)
fistp
pop
ret
test
je
push
jmp
test
je
mov
cs
mov
cmp
xor
rcr
xchg
stc
test
xchg
add
push
ror
iret
push
in
out
and
ror
test
push
push
add
jmp
dec
mov
test
jle
lea
mov
mov
adc
xchg
ins
mov
mov
mov
mov
dec
outs
add
dec
jne
and
sbb
add
push
push
sar
loope
cmp
fistp
test
je
neg
sti
sbb
sbb
mov
push
pop
inc
idiv
sti
je
es
movs
and
adc
jmp
adc
rol
pusha
pop
cmp
add
je
retf
sbb
sub
adc
adc
arpl
mov
cld
add
add
push
push
into
lock
sbb
lds
shl
xlat
test
pop
scas
jno
outs
icebp
mov
adc
jne
ss
nop
cmove
cmp
je
retf
jmp
xchg
loopne
mov
pop
retf
add
pop
inc
push
sbb
ficom
shl
or
or
sub
push
lea
jle
add
and
cmps
or
imul
call
add
hlt
mov
or
mov
add
or
or
test
aad
push
pop
inc
(bad)
pop
pop
je
adc
fist
mov
test
add
je
adc
jne
add
jmp
sbb
je
test
je
lea
fwait
push
scas
or
adc
ret
iret
and
and
add
push
idiv
enter
push
sar
clc
sbb
addr16
sar
ja
ss
xor
xchg
mov
cmp
test
jne
clc
and
adc
adc
push
mov
or
add
push
mov
pusha
mov
and
lods
sti
and
pop
adc
in
add
mov
xor
push
cmp
dec
and
mov
add
inc
wbinvd
outs
ins
test
jne
pop
inc
and
sub
cmp
bound
push
fst
in
jp
ret
and
and
cmps
das
mov
xchg
push
in
sbb
cmp
ss
xor
add
ins
sub
inc
xor
add
andps
push
jo
sub
das
sub
frstor
xor
adc
inc
das
test
leave
jmp
cmp
sbb
test
cmp
inc
or
(bad)
sbb
je
add
clc
(bad)
adc
je
cmp
je
mov
cmp
xor
adc
or
or
and
push
push
mov
in
imul
mov
mov
push
push
sub
pop
imul
je
mov
add
test
out
mov
leave
add
add
ror
pop
pop
icebp
dec
movs
imul
and
mov
push
push
shr
inc
loop
pop
mov
pop
add
pusha
lea
cmp
inc
push
adc
inc
in
hlt
iret
push
push
mov
sub
adc
mov
mov
test
add
sbb
cmp
add
mov
daa
cmp
jae
xchg
xchg
mov
out
les
les
add
push
iret
sub
cmp
jbe
jecxz
adc
(bad)
movs
dec
add
test
test
and
cmp
gs
(bad)
out
(bad)
fldcw
push
sub
jne
les
(bad)
xor
mov
cmp
jae
mov
test
je
inc
cmp
jb
mov
sbb
cmp
ja
add
mov
and
adc
inc
push
push
add
jbe
jp
inc
(bad)
lea
adc
xchg
inc
inc
cmp
call
add
mov
lock
sbb
lea
adc
pop
stos
push
sub
push
pop
xchg
xlat
jne
sub
mov
xor
inc
ffreep
pop
cmp
loope
ret
jne
call
jl
jge
jle
dec
call
jg
or
icebp
jge
repnz
inc
lea
push
mov
inc
inc
into
add
adc
test
jl
xchg
cdq
push
jae
daa
sub
sub
jne
mov
mov
mov
mov
push
dec
sub
push
push
jecxz
jle
mov
fsubr
shl
mov
xor
xlat
inc
pop
and
repz
clc
adc
add
loope
hlt
lea
movs
daa
sbb
out
add
fild
add
out
int3
xor
jbe
jo
sub
and
aas
fidiv
and
push
xlat
sub
push
lea
out
(bad)
jnp
jl
je
sbb
into
jg
clc
mov
add
fisubr
mov
lea
and
and
(bad)
loopne
clc
or
push
test
sub
adc
outs
dec
inc
ror
lds
push
push
ds
xor
cwde
pushf
mov
ret
cmps
push
push
or
fcom
js
cmp
xor
add
pop
mov
je
adc
sbb
xor
sbb
pusha
sbb
add
(bad)
into
mov
cs
xchg
push
popa
mov
fmul
jl
ins
cmp
mov
in
inc
or
mov
jae
in
clc
jmp
or
call
or
imul
leave
rcr
loope
mov
sbb
xor
jmp
mov
jge
and
in
adc
and
xor
adc
add
or
adc
or
idiv
ret
mov
jno
int3
push
in
mov
push
dec
lea
ret
je
pushf
xchg
int3
shr
pop
lea
scas
xchg
ror
jmp
lock
or
js
gs
nop
das
add
mov
mov
sahf
sti
cmp
imul
fimul
xchg
cli
sbb
adc
push
in
mov
stos
dec
sbb
clc
add
push
push
je
cmp
mov
mov
or
xor
pop
dec
xor
nop
stos
mov
lds
enter
sub
fnstsw
and
push
and
mov
push
adc
jmp
sti
push
mov
sbb
pop
push
lods
jmp
loop
cmps
loopne
mov
mov
inc
mov
rol
sub
call
mov
je
sub
cli
daa
sub
les
std
jne
push
mov
jmp
test
icebp
arpl
push
sub
out
sub
or
sbb
and
nop
pop
xor
clc
mov
fsubr
pop
inc
loopne
dec
int3
in
dec
pop
mov
inc
rcr
test
sbb
adc
and
mov
push
rol
cmps
dec
xchg
test
in
inc
(bad)
outs
and
fsubr
ret
test
mov
jbe
fsubr
cli
bound
hlt
outs
mov
lds
sbb
inc
mov
enter
inc
add
cmp
jbe
xor
jmp
cmp
loop
add
loopne
add
lea
cs
test
(bad)
clc
jne
cmp
ja
js
pop
ja
fisttp
add
ficom
pop
add
in
mov
pop
pop
ret
mov
mov
xor
pop
and
adc
aad
rol
(bad)
cmp
sub
fdiv
xchg
push
imul
les
ret
sbb
sti
jne
push
addr16
add
jae
je
fisttp
inc
push
ret
mov
dec
icebp
addr16
jl
sub
add
and
xor
pop
ret
mov
and
push
jne
es
mov
jmp
out
mov
and
push
xchg
and
adc
pop
pushf
jg
jno
movs
test
mov
mov
test
inc
mov
je
mov
inc
test
jne
inc
lea
cmp
jbe
push
popa
mov
mov
es
aam
(bad)
mov
neg
sbb
sub
and
add
add
xor
mov
mov
sbb
fst
push
add
(bad)
div
cmp
pop
jl
lea
inc
loopne
out
rcr
loop
daa
lods
sbb
xor
sbb
push
push
add
loopne
leave
jmp
jmp
call
ds
cmp
jne
inc
mov
push
out
adc
js
or
mov
inc
jmp
fs
or
shl
add
add
sub
cmp
adc
movzx
push
and
cli
out
mov
sbb
add
cmp
jl
in
and
das
and
scas
dec
adc
push
push
sub
inc
retf
xchg
or
ret
sbb
dec
cmp
icebp
nop
sub
in
and
dec
sbb
bound
pop
es
dec
cmovne
ins
rol
and
ret
int
imul
pop
ret
pop
es
xor
mov
iret
add
aas
test
je
test
je
pop
nop
add
pusha
fld
das
and
push
sub
out
mov
xor
mov
inc
cld
jmp
test
add
mov
add
mov
in
repz
xchg
cmp
test
clc
push
je
fld
sbb
mov
cdq
xor
push
and
jae
mov
inc
and
rcl
or
and
sbb
std
xor
mov
and
push
stos
out
xchg
inc
and
shl
add
mov
mov
add
test
test
jne
inc
sbb
es
add
mov
mov
mov
mov
cmp
je
mov
adc
xchg
sub
jno
sahf
mov
xor
xchg
adc
adc
pop
imul
push
xor
sbb
sub
and
retf
fiadd
cmp
push
mov
push
(bad)
call
pusha
add
dec
mov
add
push
wrmsr
jbe
sbb
mov
adc
jmp
dec
test
lds
add
and
rol
mov
push
cmp
je
leave
push
pushf
lock
or
es
int
pop
(bad)
ja
and
sub
enter
jmp
or
push
dec
inc
(bad)
mov
ja
and
mov
sti
loop
loop
(bad)
call
mov
cmp
je
lahf
mov
cmp
jb
push
leave
in
test
xor
jo
mov
add
add
in
mov
jns
or
mov
xchg
push
pop
push
and
stc
dec
mov
add
push
jmp
test
mov
test
pop
or
xor
mov
out
jne
je
rcr
add
fnstsw
inc
and
jmp
cmps
xchg
pusha
dec
and
cwde
mov
mov
call
ret
jno
ret
dec
loopne
cs
dec
pop
and
mov
or
ret
dec
rol
jl
test
(bad)
pop
cld
push
jp
or
in
jle
dec
lock
cmps
jno
pop
mov
mov
or
daa
ret
push
je
mov
shr
cmp
jne
pusha
mov
xchg
test
jbe
push
push
(bad)
ror
xor
test
mov
add
dec
jne
pop
pop
sub
push
or
outs
adc
add
out
out
pop
test
je
repz
jb
jb
enter
pop
or
and
sbb
and
jmp
and
and
nop
inc
add
adc
sbb
adc
xor
or
ret
(bad)
clc
or
fstp
push
out
leave
je
and
sub
ins
ins
imul
mov
je
sub
mov
sub
imul
inc
cmp
adc
and
je
or
call
push
adc
add
inc
inc
lea
bound
push
or
sbb
adc
mov
ss
mov
fwait
adc
dec
pop
aas
adc
jnp
ret
rcl
lds
jae
dec
sti
cmps
jl
aas
enter
pop
mov
pop
xchg
pusha
dec
aas
mov
xor
shl
add
and
mov
cs
add
jmp
out
cmp
add
mov
push
adc
jmp
fsub
xchg
xor
pop
push
or
popa
pusha
femms
inc
repnz
push
push
dec
shr
jne
sbb
iret
add
pushf
xchg
mov
push
lods
push
je
mov
cmp
je
xor
inc
add
lods
clc
enter
shl
push
jne
es
adc
imul
mov
and
xor
sbb
and
sub
cdq
cwde
add
dec
add
xchg
imul
xor
hlt
fstp
sbb
or
add
mov
hlt
(bad)
cmp
je
dec
add
leave
jne
lea
cmp
ja
test
movs
enter
adc
add
add
lock
and
add
fisttp
sbb
sub
mov
xor
and
or
mov
dec
or
sbb
(bad)
(bad)
mov
cli
add
jmp
cmp
or
jne
jmp
cmp
cmp
dec
jmp
cmp
jne
cmp
je
push
call
push
push
add
inc
retf
mov
outs
inc
push
add
daa
pushf
xor
inc
mov
inc
(bad)
push
xchg
add
(bad)
jle
mov
mov
cmp
mov
(bad)
mov
ja
push
pop
or
jmp
cmp
ja
retf
sar
jge
jmp
mov
adc
loope
dec
inc
repz
rol
jle
add
mov
inc
push
je
sbb
sub
add
cmp
add
popf
xor
sbb
sbb
adc
inc
pop
adc
int
cmp
nop
lea
push
push
inc
pop
lds
inc
or
test
lea
clc
pop
and
push
mov
cwde
mov
sbb
pushf
aaa
sub
aaa
ins
and
sbb
loop
je
sbb
jg
xor
add
sbb
dec
inc
into
addr16
cwde
cmp
ret
std
pop
jns
add
add
add
stos
loope
sbb
cmp
je
cmp
je
push
popa
cwde
cmp
cld
add
mov
adc
sub
add
mov
rdmsr
sar
mov
inc
test
dec
push
jne
test
mov
loope
rcr
out
xchg
addr16
adc
outs
mov
pop
mov
je
cmp
jne
and
and
jmp
add
xor
lea
mov
push
push
push
inc
ret
lods
(bad)
ficom
ins
xor
adc
xchg
mov
in
adc
and
jne
(bad)
jecxz
mov
mov
popf
or
je
cmp
adc
fdivr
call
das
sub
les
push
adc
bound
shr
jne
adc
dec
mov
and
mov
mov
adc
mov
test
mov
adc
or
cmp
cli
scas
adc
add
push
push
mov
dec
lds
adc
loopne
cmp
rol
mov
(bad)
xchg
inc
mov
cwde
or
add
lahf
xor
jne
out
xor
pushf
push
or
and
add
inc
jl
xor
add
sub
or
test
jne
jmp
dec
push
xor
les
sbb
jne
ja
push
add
mov
mov
mov
test
cwde
dec
add
add
clc
je
inc
or
stos
test
popa
and
mov
sbb
push
sub
jmp
push
mov
or
leave
(bad)
pushf
xchg
adc
push
push
inc
jo
xor
das
xchg
and
inc
xor
inc
add
jne
cmp
rol
js
mov
sbb
inc
xchg
fwait
lock
je
jne
sbb
imul
movs
jg
je
ins
and
daa
adc
cmp
adc
push
jne
sub
pop
fcom
or
mov
mov
jne
outs
xor
cmps
xchg
(bad)
call
cmp
je
inc
cmp
jb
cmp
ja
pop
cmp
jb
pop
push
std
add
aad
or
lock
mov
test
je
mov
inc
xchg
imul
dec
add
(bad)
pop
sub
mov
mov
mov
push
(bad)
dec
adc
adc
sub
mov
test
shl
xchg
sub
shr
sbb
jmp
push
ret
jmp
xchg
or
add
jo
mov
jg
inc
test
(bad)
fdivr
sub
or
mov
fild
mov
jbe
cmp
outs
mov
inc
rcl
xor
cli
sub
lea
mov
loope
inc
sub
add
in
add
and
mov
mov
mov
jmp
inc
in
mov
sub
and
sub
add
mov
sub
sub
xor
pop
mov
call
std
add
test
lea
dec
out
mov
test
adc
mov
pop
add
clc
pop
mov
(bad)
push
shl
sbb
leave
sbb
test
dec
add
or
push
mov
aaa
outs
sub
mov
adc
jne
add
mov
cmp
jne
call
test
je
add
mov
test
jbe
mov
mov
call
bound
mov
inc
inc
push
adc
add
mov
outs
addr16
add
sbb
cmc
pop
daa
and
shl
add
movs
mov
mov
or
mov
mov
out
mov
adc
push
pop
inc
mov
mov
add
gs
or
mov
stos
sbb
fucomp
or
in
or
or
add
out
(bad)
(bad)
inc
xchg
and
push
test
push
mov
push
cli
pminsw
push
mov
mov
xor
cmp
mov
std
mov
je
adc
mov
cmp
pop
es
lods
add
clc
js
fld
cmp
add
sbb
mov
cmp
jae
pop
add
sub
push
cmc
adc
sbb
test
sub
xor
pop
jg
clc
out
mov
test
jne
adc
push
push
out
pop
fld
clc
je
fdivr
push
retf
test
jbe
and
sub
mov
daa
sbb
das
mov
pop
pop
pop
pop
mov
or
mov
add
in
and
sub
inc
cmp
inc
pop
movs
dec
xor
inc
mov
push
mov
aas
pop
add
and
jl
das
leave
test
inc
je
pminub
pushf
inc
inc
test
add
xor
push
inc
ins
inc
or
fcom
or
fiadd
pushf
add
push
mov
call
inc
shl
jg
inc
ror
lea
cmp
jbe
jmp
pop
cmp
add
mov
or
mov
pop
sub
xor
lods
jae
ror
ret
and
rol
add
test
and
(bad)
(bad)
inc
cmc
ja
sub
mov
jmp
cmp
jae
lea
push
push
cmps
push
mov
push
mov
push
popf
or
lahf
int3
jmp
mov
shl
xchg
and
xchg
cmc
aaa
pop
adc
(bad)
neg
sbb
sub
add
sub
call
stos
or
add
add
push
sbb
in
push
mov
cmps
fucomi
scas
mov
add
sub
pop
and
mov
into
add
and
mov
mov
fld
and
mov
push
mov
jle
xchg
shl
leave
fwait
test
sbb
ror
sbb
mov
call
push
loop
pusha
and
cdq
jmp
xlat
neg
jg
jmp
cmp
push
mov
and
dec
or
int3
xor
push
mov
mov
sub
push
mov
cmp
je
cmp
add
dec
inc
scas
jne
add
dec
sbb
pop
in
dec
cwde
movs
je
aaa
adc
call
mov
gs
sub
je
dec
je
dec
je
dec
mov
fldenv
push
and
aad
lds
in
mov
xchg
mov
cmpxchg
sti
or
jne
arpl
(bad)
lds
iret
xor
mov
daa
push
dec
pop
push
(bad)
cli
xchg
adc
jmp
jae
mov
je
or
int
dec
sub
popa
xor
jl
jo
int3
dec
mov
lods
aas
adc
adc
std
ja
mov
mov
add
scas
cmc
(bad)
jne
mov
mov
shr
test
mov
jp
xchg
add
mov
mov
mov
(bad)
in
lock
adc
xchg
sub
push
jmp
xor
mov
or
lods
call
mov
lds
adc
(bad)
jg
(bad)
jno
clc
inc
jl
cmp
jg
cmp
jle
cmp
jge
dec
xchg
push
shr
dec
jne
push
je
sbb
ds
mov
cli
and
xor
push
push
sub
pop
mov
xchg
adc
pop
es
adc
punpcklbw
ret
inc
mov
loop
and
mov
out
add
ror
enter
(bad)
(bad)
jmp
shr
sti
or
mov
shr
imul
jmp
mov
imul
jne
enter
cmp
aaa
or
push
mov
xchg
lock
ins
and
push
outs
(bad)
(bad)
je
sbb
inc
cmp
rol
jmp
je
and
dec
sbb
mov
arpl
jmp
inc
icebp
jg
add
mov
je
shl
jmp
sar
sbb
jne
sbb
test
je
mov
sti
sti
(bad)
fdivp
xor
test
andps
cmp
jae
xor
mov
cmp
mov
test
je
sti
out
(bad)
fld
mov
sub
mov
and
shl
mov
rcl
sub
(bad)
popf
movs
jae
jp
hlt
xor
xchg
into
push
aam
mov
loopne
mov
test
pop
adc
movs
add
leave
jmp
aaa
inc
out
sub
add
xchg
rcr
lea
lahf
std
dec
call
test
dec
add
jp
shr
xor
cmp
inc
mov
ret
lea
jb
xchg
mov
sar
and
aam
mov
sbb
out
or
cmp
or
jo
and
mov
mov
not
and
mov
and
or
mov
jmp
cli
ja
dec
adc
std
lar
clc
(bad)
icebp
adc
std
inc
dec
jmp
test
je
push
push
xor
sbb
lock
add
inc
faddp
inc
jg
aas
adc
leave
mov
mov
je
sbb
cmp
adc
shr
shl
and
xor
jle
adc
mov
call
mov
sub
push
push
xor
adc
je
enter
push
add
or
adc
add
test
and
cmps
pop
test
scas
mov
ror
test
(bad)
dec
inc
test
jne
test
jne
test
jne
test
test
jecxz
jne
mov
mov
sub
shr
dec
xor
push
add
mov
xor
ret
add
jmp
popf
xchg
(bad)
inc
add
add
cmp
jbe
mov
sub
mov
mov
inc
dec
jne
ins
inc
cmps
imul
mov
ret
push
shr
push
test
mov
push
add
add
outs
dec
xor
out
call
adc
jo
nop
leave
dec
into
retf
inc
xor
ror
std
sbb
movs
jbe
inc
mov
add
jo
cdq
push
mov
or
push
aaa
ja
stos
mov
cmp
mov
mov
mov
mov
mov
jbe
dec
add
sub
push
ja
cmp
cmp
js
xchg
ins
push
sub
push
ja
xor
mov
std
adc
mov
and
ret
and
imul
pop
pusha
cmp
and
xchg
(bad)
icebp
aaa
add
push
mov
mov
(bad)
mov
popa
jmp
and
or
mov
push
inc
inc
jl
or
leave
push
je
and
test
inc
pushf
xlat
ror
mov
push
mov
mov
cs
(bad)
xor
scas
cli
xor
xchg
adc
push
or
add
inc
push
fisubr
out
add
retf
push
adc
jmp
lea
imul
imul
add
add
test
ret
mov
mov
mov
lea
inc
int
fisub
and
cld
cmp
add
daa
(bad)
cmp
and
dec
jmp
push
out
div
loopne
add
fimul
movs
and
mov
push
xor
jmp
(bad)
jb
push
or
cld
jg
mov
mov
cmp
jb
xchg
icebp
inc
imul
lea
lea
shr
shr
adc
mov
cmp
sbb
jmp
xor
jmp
shr
div
(bad)
faddp
loop
shl
and
and
mov
popa
xor
add
adc
xor
push
rol
pushf
and
jmp
ss
mov
and
or
ja
cmp
out
sub
inc
inc
adc
adc
mov
add
xor
test
jle
dec
adc
mov
(bad)
sub
mov
sar
inc
and
mov
shl
or
cmp
mov
jne
mov
dec
jmp
add
or
repz
sbb
xchg
out
mov
xlat
jne
xor
or
(bad)
mov
add
or
and
jb
xor
clc
jmp
sbb
jmp
shr
sbb
ret
(bad)
aas
sub
je
inc
push
or
jae
or
hlt
unpckhps
jmp
lea
add
add
into
std
sub
lea
or
adc
icebp
or
fnsave
or
loop
out
sbb
clc
mov
add
xchg
(bad)
(bad)
call
jbe
inc
adc
test
mov
jle
push
and
call
or
add
into
sar
mov
clc
es
(bad)
or
lock
adc
adc
or
ret
and
jne
xchg
push
outs
adc
inc
adc
rcl
adc
adc
(bad)
in
aam
jp
sbb
add
in
add
ja
and
add
pop
mov
pop
rol
pop
jo
mov
loope
fwait
sbb
and
mov
inc
je
xor
adc
adc
sbb
mov
cwde
nop
std
add
imul
adc
jmp
icebp
adc
xchg
pop
xor
and
push
inc
pop
and
xor
adc
adc
je
dec
or
and
pop
mov
hlt
dec
imul
je
cli
fist
adc
test
jle
cmp
jge
jl
mov
int3
inc
test
jne
ins
cmp
dec
xor
inc
rcr
add
push
call
std
add
pop
mov
test
sbb
mov
add
xor
adc
ror
or
or
jge
pusha
out
add
(bad)
fstp
dec
or
and
int3
sar
add
cmp
jae
dec
std
(bad)
call
rcl
repnz
mov
sub
mov
add
mov
inc
dec
jne
out
(bad)
sti
out
lds
add
push
xor
mov
or
div
push
push
jg
arpl
mov
mov
xor
inc
inc
cmp
jb
and
mov
rcl
mov
mov
ins
test
loope
mov
pop
xor
inc
jg
(bad)
(bad)
mov
mov
mov
mov
shr
add
inc
jb
jne
pop
test
jbe
cli
sbb
sub
mov
mov
sbb
(bad)
mov
sub
mov
sar
add
inc
mov
inc
dec
jne
lock
cmp
xor
sub
outs
cmp
adc
cld
mov
inc
lods
dec
and
mov
inc
cmp
jae
push
push
cmp
inc
mov
mov
loop
(bad)
mov
mov
sub
sub
test
jge
mov
neg
mov
push
lock
les
neg
(bad)
jg
pop
fild
fadd
cmp
jge
mov
mov
cmp
jge
cld
jge
dec
repz
and
gs
jb
push
rcr
loope
fild
or
rcl
inc
or
cld
xor
and
cmp
cli
cmp
jae
xor
retf
inc
mov
inc
cmp
sar
cmc
jb
mov
sub
add
dec
ins
and
jae
mov
dec
ror
mov
mov
dec
cmp
inc
sub
ret
rcl
dec
int
ret
sbb
int
lock
jmp
inc
cmp
jb
and
(bad)
jmp
loopne
sbb
push
jns
mov
or
fnstenv
fisttp
xchg
cmp
mov
jmp
mov
clc
mov
sbb
cmp
mov
cmp
jge
int3
and
or
xchg
sub
push
test
and
std
je
mov
jbe
pop
aad
loopne
clc
push
mov
pop
mov
ret
jp
in
xor
mov
sahf
ds
dec
lds
test
push
cld
jg
fstp
sti
je
or
cmp
lds
call
and
sbb
scas
mov
retf
loope
jg
mov
add
lahf
mov
or
push
jmp
mov
cli
mov
mov
mov
je
cmp
je
fadd
pop
in
pop
xor
inc
fbld
cmp
jbe
rcr
loope
arpl
(bad)
dec
lds
enter
je
ret
mov
or
loope
ja
pop
jbe
push
out
cmp
inc
pop
xor
xor
pusha
mov
push
mov
popa
or
ror
lock
jmp
test
jne
push
imul
ja
fsub
push
mov
or
call
ret
jne
mov
mov
mov
mov
(bad)
call
mov
xchg
inc
mov
xor
push
cmp
jb
repz
loop
ror
inc
push
mov
push
mov
call
inc
js
cmps
or
rep
mov
cmp
ror
pop
jae
mov
and
mov
xor
cli
xchg
add
xor
mov
cmp
add
pop
inc
mov
inc
cmp
div
test
mov
add
xor
xor
mov
nop
add
icebp
mov
mov
lea
adc
test
je
mov
jg
jbe
add
sahf
mov
mov
inc
rol
loopne
pop
jb
jo
add
mov
imul
add
test
je
test
jne
mov
std
jnp
mov
call
ror
shl
icebp
jmp
mov
mov
xchg
data16
div
inc
mov
out
or
div
in
inc
cwde
add
cmp
sub
clts
mov
add
mov
push
cmp
push
mov
mov
out
or
hlt
push
fadd
outs
inc
mov
sbb
jmp
mov
push
sbb
or
cmp
je
add
jmp
mov
test
(bad)
jg
xor
pop
add
test
je
test
je
sbb
(bad)
out
adc
cmp
and
mov
mov
mov
fist
and
test
jne
sbb
or
lahf
retf
fbstp
jmp
ins
je
cmps
adc
and
mov
add
add
mov
test
(bad)
in
ja
or
(bad)
test
jne
push
cmp
je
mov
jg
sub
dec
and
push
or
mov
adc
dec
jmp
and
setg
dec
and
add
mov
dec
sub
jmp
jno
push
jo
scas
retf
jle
inc
dec
pop
mov
inc
dec
clc
or
xchg
inc
mov
inc
jl
mov
jmp
imul
cld
lahf
shl
jmp
lea
lea
mov
pusha
and
pop
inc
or
imul
rcr
stos
mov
and
cli
out
mov
add
pop
mov
std
out
lds
and
mov
mov
and
mov
and
sub
dec
mov
cmp
loop
dec
adc
mov
adc
cmp
inc
stos
xor
cmp
pop
je
aaa
mov
jb
inc
dec
mov
pop
cmp
pop
lahf
add
adc
inc
js
dec
inc
shr
nop
cmp
pop
mov
pop
xor
gs
je
add
rcl
push
mov
pop
ret
mov
call
(bad)
jg
and
or
xor
jle
jl
in
or
sbb
add
pop
or
mov
mov
dec
jg
mov
mov
xor
cwde
(bad)
fistp
cmp
and
pop
out
(bad)
mov
adc
inc
je
push
stos
call
ror
call
test
je
test
jne
push
adc
int3
inc
mov
push
je
or
xchg
out
je
or
dec
popa
pop
add
cmps
dec
mov
pop
iret
or
fld
push
fst
push
push
push
push
or
retf
js
cmp
jl
and
inc
add
push
push
mov
push
add
cmp
push
sar
add
jmp
cdq
cmp
pop
and
mov
mov
addr16
sti
iret
push
adc
sbb
jmp
and
push
enter
jmp
sbb
outs
pop
and
push
push
sbb
or
mov
sahf
pop
test
pop
je
lea
or
rol
push
push
and
pop
loope
mov
mov
jle
test
mov
jl
and
ret
pop
cmp
add
pop
test
push
or
cmp
je
adc
pop
cmp
jne
(bad)
aas
rol
xor
add
cdq
sub
out
add
js
int
mov
pop
inc
sbb
add
add
mov
out
call
arpl
and
add
(bad)
or
cmp
and
mov
push
and
aas
pop
and
scas
mov
pop
adc
js
ja
push
add
and
xchg
leave
outs
neg
adc
sub
adc
jmp
sbb
pop
mov
add
and
jmp
or
or
pusha
add
outs
retf
fld
cli
inc
jmp
test
jl
lea
cmp
loope
mov
mov
add
loope
retf
jmp
dec
adc
out
mov
outs
mov
sbb
adc
ret
sbb
dec
push
push
add
jne
or
mov
jne
mov
pop
scas
add
push
sub
repnz
add
cmc
clc
popa
pushf
je
mov
out
cli
push
mov
sub
mov
jmp
push
push
std
adc
inc
dec
mov
jmp
mov
adc
je
sbb
sbb
dec
in
sub
scas
mov
jmp
and
test
(bad)
inc
mov
je
test
jne
and
stos
push
int
fwait
cdq
jbe
push
add
lds
jp
mov
and
test
pusha
add
jl
add
dec
add
cs
(bad)
push
mov
or
mov
jmp
test
je
test
je
sub
mov
xchg
jne
lock
or
jne
mov
mov
or
adc
push
cmp
jne
push
test
lahf
add
test
mov
add
mov
retf
test
add
test
jg
adc
lds
mov
sar
mov
out
sub
xor
add
pop
mov
jnp
jnp
sub
add
adc
jle
test
test
je
test
jne
xchg
sti
jg
std
jne
mov
imul
rol
sbb
push
add
(bad)
push
call
ds
mov
test
mov
mov
mov
add
ffreep
mov
push
or
push
or
xor
add
test
std
es
out
jne
je
mov
sbb
pop
push
mov
xor
jne
mov
adc
push
add
xchg
hlt
push
jb
movs
fistp
or
jne
in
or
xchg
or
or
(bad)
aaa
and
in
mov
push
and
mov
jbe
mov
adc
xchg
mov
out
stos
cli
or
push
mov
(bad)
jg
mov
mov
dec
(bad)
mov
mov
jmp
inc
pop
cmp
je
ins
and
add
leave
mov
or
mov
lea
add
or
fld
sti
pop
ins
neg
cmc
ins
and
mov
gs
xor
cwde
mov
jmp
push
cmp
cmp
cmp
cmp
mov
add
mov
inc
jl
jg
test
cli
ja
outs
and
pop
mov
invd
fsub
test
add
inc
push
inc
sub
push
inc
cli
or
and
and
pop
into
push
or
mov
cmp
jne
mov
imul
or
aas
je
je
mov
mov
(bad)
mov
xchg
adc
push
and
push
stos
jle
sbb
mov
mov
mov
ss
(bad)
aad
adc
je
dec
je
dec
je
(bad)
cmp
dec
call
xchg
jns
dec
aad
add
dec
mov
(bad)
mov
sbb
fsubr
xor
add
mov
jno
mov
mov
or
pop
je
xor
push
lea
or
adc
mov
mov
add
mov
sbb
or
and
push
mov
mov
mov
and
sbb
loopne
daa
inc
test
sbb
push
imul
adc
ds
imul
imul
call
inc
mov
and
ja
jp
aam
jle
add
aas
popf
mov
cli
jge
mov
sbb
cli
in
ror
mov
jne
add
lea
stos
jmp
and
mov
and
dec
xor
mov
xchg
rol
add
mov
inc
imul
sub
data16
lea
push
pop
loopne
add
aam
jmp
pop
jbe
(bad)
mov
add
mov
mov
dec
cwde
fisttp
cmp
movzx
push
add
inc
push
adc
stos
stos
dec
add
xor
xchg
(bad)
dec
mov
inc
imul
xor
push
inc
aaa
sti
mov
mov
and
push
adc
add
cmp
jl
outs
and
loope
(bad)
cli
lahf
cmp
out
dec
je
dec
je
xchg
dec
mov
push
mov
loope
inc
dec
(bad)
in
shl
push
push
or
inc
mov
shr
mov
sbb
push
inc
inc
sbb
loopne
fwait
sub
and
shl
cmps
bound
or
les
jp
mov
pop
sbb
leave
push
mov
pop
pop
and
loopne
mov
mov
in
xchg
and
or
cmp
jne
addr16
cmp
pop
js
and
addr16
lds
cmc
pop
lods
pop
je
xor
dec
stos
jbe
daa
pop
add
dec
mov
adc
pop
xchg
jl
fdiv
fadd
mov
push
inc
addr16
add
mov
jb
dec
push
iret
xor
loopne
sub
mov
pop
push
addr16
out
sbb
push
fs
loopne
test
arpl
pop
pop
jne
pushf
loopne
sbb
leave
or
test
jle
cmp
add
test
fs
mov
adc
mov
mov
cld
adc
dec
mov
adc
jne
dec
pop
call
inc
push
test
je
add
ins
jne
sub
lahf
xor
or
add
mov
jmp
shl
test
sub
cmp
jge
test
clc
iret
(bad)
in
jle
xor
mov
movs
mov
shr
add
add
jmp
leave
mov
add
test
jle
cmp
jge
xor
xor
mov
retf
shr
lea
add
dec
jne
xor
cmps
xor
out
sbb
add
inc
aad
add
stos
pop
test
cmp
sbb
test
movups
push
lea
push
adc
jp
ds
dec
and
or
dec
jne
into
inc
or
or
aas
sub
xchg
xlat
aas
(bad)
push
(bad)
push
mov
xor
and
test
sub
icebp
mov
icebp
je
push
xor
cmp
cmp
(bad)
jl
mov
mov
and
out
rol
jo
jne
and
adc
mov
mov
in
jo
(bad)
adc
mov
xchg
mov
add
test
xor
mov
mov
jno
or
dec
add
mov
out
jg
inc
je
sub
add
and
add
add
mov
xor
or
sub
inc
cmp
mov
jl
mov
add
add
or
rol
push
subps
ja
and
les
jl
jne
fadd
add
or
add
or
lock
test
jne
add
cld
cmc
xor
dec
rol
cs
je
dec
adc
adc
cmp
push
retf
jg
mov
(bad)
lea
adc
lea
jmp
adc
sbb
loop
sub
mov
jno
add
(bad)
(bad)
jle
mov
das
jne
maxps
push
jmp
dec
outs
test
pop
pop
ret
out
or
or
inc
jl
je
cmps
dec
icebp
data16
shl
data16
cmp
(bad)
inc
sbb
inc
push
sbb
and
add
mov
mov
stos
mov
adc
mov
jnp
daa
inc
inc
cmp
push
add
leave
add
(bad)
fsubr
xor
add
mov
jl
je
lea
jecxz
sbb
dec
std
add
dec
add
dec
bound
repnz
mov
mov
cmp
jne
test
stos
add
dec
mov
inc
je
aaa
adc
add
dec
sbb
and
add
sbb
addr16
cmps
sub
push
inc
sbb
je
cmp
jne
mov
add
add
je
(bad)
mov
adc
cmp
je
mov
cmp
fnsave
mov
je
test
mov
jmp
sbb
add
add
sti
data16
add
(bad)
sti
push
inc
sbb
lds
shl
push
sbb
pop
(bad)
mov
add
add
inc
adc
je
idiv
call
mov
mov
cmp
jae
mov
mov
mov
or
mov
cli
fild
imul
cmp
mov
jb
fadd
push
pop
icebp
cmp
mov
lds
imul
aad
add
add
xor
fiadd
out
or
fsubp
or
push
push
out
sub
inc
js
adc
adc
aam
jecxz
jl
jl
adc
cmp
jne
sbb
test
fs
sub
sbb
inc
jmp
cmp
xor
sbb
add
je
in
lahf
add
sahf
lea
inc
push
push
jmp
ss
dec
sbb
push
inc
mov
cmp
lock
test
jne
mov
cmp
rol
xor
mov
adc
std
repnz
pop
inc
sbb
add
xchg
sub
out
dec
mov
and
cmp
and
inc
in
mov
sbb
test
stc
sbb
push
jmp
bound
dec
inc
sbb
mov
neg
pop
in
les
jne
push
ins
or
mov
rcl
(bad)
push
(bad)
fwait
pop
or
cld
mov
cmp
pusha
add
test
je
push
shl
loopne
and
add
sbb
(bad)
je
fcom
stos
pop
je
mov
add
add
mov
cmp
adc
inc
sub
add
inc
xchg
mov
mov
push
push
cs
mov
inc
cmp
add
adc
mov
inc
push
mov
and
push
xor
in
mov
xchg
mov
and
ret
dec
mov
fsub
sub
and
mov
adc
fs
lea
xchg
inc
enter
xchg
cmp
mov
cmp
lods
adc
xchg
scas
jae
call
mov
gs
aaa
pusha
popf
mov
sbb
pop
add
mov
je
or
neg
mov
test
rcl
cmp
cwde
mov
inc
or
jbe
fadd
xchg
cmp
sbb
je
lods
jnp
xchg
sbb
adc
pop
mov
leave
prefetch
sbb
out
cli
mov
test
stos
inc
or
mov
imul
push
add
mov
mov
cmp
mov
sub
(bad)
xchg
imul
and
sbb
fstp
sub
mov
mov
jae
aad
push
push
push
push
mov
dec
push
je
popa
add
into
repnz
fist
lea
mov
and
shr
shl
add
lea
mov
mov
fbld
jbe
sbb
lock
jmp
jecxz
cmp
test
add
sub
jno
jne
in
div
mov
push
add
out
add
loopne
aas
push
nop
sbb
bound
dec
jle
cmp
add
dec
dec
jne
jmp
sti
(bad)
jg
mov
mov
and
shr
add
lea
mov
gs
jbe
inc
add
(bad)
lock
je
in
adc
inc
or
enter
add
mov
(bad)
pop
pop
mov
mov
mov
and
call
sbb
cmp
je
push
xor
mov
clc
mov
je
mov
fimul
fisubr
cmp
sub
push
add
mov
sub
pop
sbb
add
sub
call
add
fimul
pop
jl
shl
leave
mov
mov
add
adc
test
mov
inc
and
mov
mov
and
cmp
jge
mov
add
(bad)
into
cld
add
xor
rol
loop
or
lock
add
cmp
inc
jne
mov
xchg
adc
popf
fistp
sub
cmp
pop
(bad)
call
adc
jmp
cmp
jb
inc
(bad)
(bad)
cmc
pop
sub
dec
mov
cli
add
mov
shl
or
cmp
jae
dec
add
mov
dec
sub
jmp
fimul
jb
adc
fist
jg
add
xor
cmp
jae
mov
cmp
push
shr
inc
cmp
jl
push
inc
cmp
mov
mov
idiv
(bad)
jae
add
mov
mov
ins
sar
dec
mov
sar
inc
cmp
cmp
mov
or
jb
(bad)
nop
(bad)
lea
je
inc
add
mov
out
dec
add
add
add
or
ja
inc
je
sbb
test
jge
adc
(bad)
inc
or
dec
add
mov
add
push
cmp
mov
jae
push
aaa
sar
and
mov
inc
sub
add
test
(bad)
jmp
adc
fld
sti
sbb
ret
inc
mov
inc
cmp
jb
pop
mov
push
shr
clc
inc
add
inc
pop
dec
or
mov
add
cmp
(bad)
call
xchg
push
add
enter
mov
cmp
jae
mov
in
mov
shl
mov
mov
add
pop
mov
cmc
and
cmp
inc
add
push
mov
mov
cmp
jne
loopne
dec
or
cmp
jne
scas
loop
adc
sub
mov
mov
dec
dec
dec
mov
dec
mov
add
jne
or
xor
pop
pop
ret
sub
mov
jg
sub
pop
and
sub
or
adc
or
out
cmp
jne
lea
pusha
mov
inc
pop
dec
dec
dec
mov
mov
jle
xor
mov
sbb
jae
fdiv
push
ins
and
outs
cmp
or
add
test
jbe
outs
mov
dec
or
sub
sub
dec
mov
jne
cmp
push
jbe
ins
sbb
call
adc
mov
sub
sub
dec
mov
and
cmp
add
sti
ror
dec
cmp
adc
jmp
daa
cmp
pop
and
and
nop
rcr
add
adc
test
jle
mov
bound
rcr
mov
shr
test
lods
jne
add
cmp
(bad)
(bad)
(bad)
dec
sub
stc
add
lea
dec
dec
mov
mov
dec
dec
mov
jne
add
mov
jg
call
mov
mov
mov
and
jnp
dec
dec
cli
and
fisttp
cmp
jne
out
addr16
lea
je
sbb
imul
xlat
ja
dec
dec
mov
dec
mov
dec
or
add
add
sbb
sbb
mov
mov
dec
sti
fnsave
cmp
mov
inc
xor
dec
dec
mov
jne
aaa
push
nop
sub
test
sub
or
xchg
hlt
iret
out
(bad)
mov
icebp
test
add
jae
jge
je
add
xchg
lea
jbe
xchg
xchg
pop
xchg
into
fsubr
cdq
add
xchg
add
in
xchg
sbb
pop
add
test
cmp
cmp
xchg
out
xchg
scas
jmp
jmp
bound
add
lea
pop
push
and
div
jbe
mov
pop
ucomiss
add
xchg
aaa
add
aaa
fs
test
mov
or
push
mov
mov
sbb
mov
enter
test
loope
gs
test
jne
mov
push
xlat
outs
sbb
jmp
lea
lea
jbe
xor
mov
dec
dec
aaa
(bad)
les
jecxz
jge
jno
jbe
movs
xor
mov
sub
mov
dec
and
(bad)
jnp
add
ja
jbe
popa
jb
inc
jno
arpl
fadd
jne
jmp
jb
push
jb
mov
mov
xor
scas
or
push
lock
or
ret
mov
mov
push
mov
imul
pop
jo
jno
adc
rol
xchg
(bad)
jg
mov
jno
je
sub
jne
hlt
xor
mov
add
sub
aam
jb
jno
pop
sbb
dec
nop
jo
and
mov
jge
clc
mov
scas
or
adc
shr
mov
mov
adc
and
mov
sub
cmp
or
sbb
jmp
test
inc
in
push
iret
hlt
loope
imul
pop
cmp
icebp
jbe
(bad)
push
sub
inc
mov
inc
mov
mov
or
mov
cmp
int3
sub
and
jne
mov
rol
aaa
push
inc
sub
add
outs
mov
mov
into
add
sar
out
push
mov
out
mov
pop
mov
jle
and
scas
ror
xor
mov
and
aas
sbb
sbb
adc
lea
loop
mov
shr
inc
outs
fwait
jmp
push
mov
or
inc
jmp
cs
bound
fwait
loope
lock
mov
mov
inc
sub
dec
and
mov
or
sub
retf
cmp
je
xor
sbb
movs
push
imul
imul
mov
retf
mov
fwait
mov
imul
or
add
retf
pop
jmp
inc
test
je
idiv
push
push
jmp
icebp
cmps
test
jmp
shl
cmp
addr16
loope
mov
test
pop
cmp
xchg
mov
clc
out
loop
loope
mov
mov
add
movs
loope
(bad)
xor
inc
add
add
repnz
icebp
sar
and
cmp
lock
mov
scas
sbb
push
dec
clc
inc
push
mov
js
out
push
mov
dec
in
mov
mov
xchg
call
fimul
mov
in
jecxz
lds
shr
shr
aas
cmp
cdq
inc
(bad)
sub
mov
scas
ins
and
sbb
shr
pop
adc
xor
mov
jmp
(bad)
(bad)
std
sbb
add
shr
shr
jmp
adc
mov
pop
adc
pop
sub
test
jmp
cmp
call
shl
shr
sbb
jmp
out
add
inc
mov
sub
fisttp
dec
dec
test
mov
je
mov
mov
mov
inc
inc
sbb
inc
sbb
adc
and
push
cld
fsub
stc
mov
dec
punpckldq
cmp
adc
mov
add
mov
add
add
inc
add
out
pop
cmp
jne
cmp
je
leave
adc
adc
(bad)
aad
lds
cwde
add
imul
into
mov
adc
mov
popa
and
inc
mov
shl
aas
mov
add
mov
inc
inc
stos
cmp
cmp
ja
es
test
mov
jmp
dec
mov
add
and
mov
imul
pop
mov
mov
pop
inc
pop
mov
ret
cli
pusha
or
add
mov
rcr
mov
mov
pop
add
pmullw
pusha
lahf
test
cmp
cmps
push
adc
mov
or
jge
mov
gs
xchg
or
mov
inc
test
and
and
shr
stos
test
sub
or
loope
xlat
(bad)
fwait
and
mov
jmp
push
in
retf
pop
or
cmp
ja
fmul
shl
ficomp
jmp
iret
test
add
leave
jbe
xchg
fcmovbe
jmp
aam
mov
xor
and
mov
cmp
inc
dec
cmp
sti
mov
and
mov
jg
loop
pop
test
jne
dec
push
adc
inc
jmp
dec
dec
jne
cmc
xor
shr
(bad)
cmp
sti
test
mov
or
sar
mov
mov
mov
jno
std
xor
sar
and
mov
dec
loopne
sbb
aaa
and
shr
push
add
add
push
cld
xchg
and
and
lods
or
mov
add
add
shr
mov
mov
test
mov
jne
test
add
ret
sbb
cmp
in
sbb
test
mov
jmp
add
movs
push
sub
jnp
test
inc
imul
dec
jne
cmps
dec
jo
pop
jbe
cdq
(bad)
sbb
push
or
stos
add
xchg
or
inc
xchg
sbb
or
aaa
sub
test
and
ret
sbb
and
mov
add
enter
(bad)
not
dec
mov
addr16
jne
test
pop
jbe
test
xchg
push
sbb
int3
push
dec
jae
inc
and
test
addr16
and
xor
dec
hlt
mov
test
mov
mov
cmp
adc
add
mov
xor
add
jne
mov
inc
mov
movzx
cmp
inc
dec
jne
(bad)
addr16
and
ret
test
je
mov
in
outs
mov
mov
xor
dec
imul
cmp
or
cs
pop
jo
dec
add
pop
adc
shr
outs
(bad)
out
sbb
dec
add
or
mov
mov
add
dec
jne
popf
cmp
data16
js
jg
adc
mov
xchg
adc
dec
mov
add
dec
jne
inc
cmp
mov
mov
test
jnp
sub
or
jbe
stc
xor
(bad)
lods
xchg
outs
pop
cdq
outs
jne
or
or
or
lock
jge
dec
dec
sbb
mov
lds
dec
dec
or
add
dec
jne
adc
jl
fadd
lea
xchg
je
jne
jle
push
xchg
add
pop
lds
(bad)
xchg
mov
cmp
and
mov
pop
dec
pop
add
mov
jecxz
call
call
jnp
pop
inc
loope
add
sar
pop
mov
push
jl
sti
dec
xor
add
cmp
sub
jmp
mov
sbb
inc
add
mov
jmp
xor
dec
mov
mov
mov
shr
es
dec
mov
dec
mov
mov
mov
and
in
or
pop
and
std
rcr
mov
mov
push
adc
gs
pop
mov
push
and
push
dec
jne
es
xchg
or
vmwrite
inc
js
loop
js
mov
punpckhdq
test
clc
outs
rcpps
sbb
xchg
js
cs
jne
jmp
xchg
and
xor
test
xor
fwait
adc
push
add
and
xor
dec
jne
popa
mov
ret
sbb
lock
je
jb
cmps
add
cmp
adc
inc
cmp
cld
fld
adc
inc
jne
dec
(bad)
cmp
mov
mov
jmp
data16
pop
lods
or
xor
mov
sub
js
shr
sbb
scas
ror
into
loopne
movs
and
sar
test
mov
jne
arpl
dec
or
data16
cmps
xor
pop
jnp
je
mov
or
mov
test
jne
sbb
mov
ss
jae
scas
sbb
ror
dec
int3
(bad)
sbb
ret
inc
jle
or
enter
mov
add
dec
jne
sub
jmp
push
sbb
ds
loopne
jle
inc
lock
lea
and
mov
add
in
cmp
imul
sbb
cmp
movs
cmp
dec
rol
mov
xor
mov
mov
inc
mov
dec
out
ds
jo
mov
enter
ror
mov
cmp
add
rol
adc
fwait
adc
mov
mov
(bad)
push
sbb
push
loope
test
mov
jns
add
push
inc
mov
xchg
adc
cmp
add
sbb
test
inc
cs
or
dec
cmp
jae
cs
push
inc
lods
sbb
push
lock
clc
imul
sbb
shl
add
jecxz
popf
mov
imul
lea
or
out
test
push
dec
inc
aad
and
ja
mov
and
push
mov
(bad)
lahf
lock
mov
inc
mov
cmp
jne
mov
xor
(bad)
ja
adc
lock
dec
ins
cmps
ret
jne
loopne
push
mov
nop
cwde
mov
mov
icebp
and
sbb
cmp
mov
fisttp
je
lock
sahf
retf
retf
lea
mov
xor
or
(bad)
cmp
mov
hlt
adc
mov
or
push
ret
add
add
into
dec
out
ret
cmp
or
inc
jmp
xlat
stos
xchg
inc
(bad)
hlt
retf
retf
and
pop
push
push
xchg
cmp
mov
add
or
(bad)
push
adc
aaa
mov
push
ss
push
test
inc
pop
inc
push
add
rcr
push
push
test
add
pop
jmp
scas
add
std
cs
shr
cli
imul
stos
out
lea
in
mov
shr
add
jl
xchg
sar
imul
mov
sahf
daa
xchg
add
sub
daa
mov
cdq
mov
and
imul
lea
pusha
scas
ficom
sub
add
add
pop
aaa
(bad)
sub
in
adc
(bad)
xor
data16
or
jb
inc
and
jbe
add
inc
fs
add
mov
stc
sub
leave
mov
mov
adc
jg
or
retf
shr
lahf
dec
pusha
mov
mov
out
pop
add
and
add
add
push
add
std
pop
dec
mov
test
jne
fs
sbb
fs
pop
mov
je
add
pop
mov
cmp
jne
mov
cmp
stc
or
inc
xchg
mov
sbb
iret
xor
add
pop
or
or
jp
fwait
cdq
pop
popf
add
add
adc
xor
pushf
sub
and
inc
in
retf
shr
add
and
js
fdivr
ds
and
push
daa
jmp
rcl
and
imul
loop
and
or
xor
pop
frstor
loope
out
add
es
xor
or
xor
rcl
inc
call
fisttp
scas
call
push
adc
loope
arpl
shl
xchg
mov
dec
mov
mov
dec
inc
pusha
jo
inc
int3
sbb
fsub
shr
cld
or
int
mov
pop
adc
jp
jnp
jne
add
jns
jne
call
(bad)
adc
(bad)
cmp
dec
push
ins
stc
test
jne
pop
shl
sub
ror
mov
dec
xchg
adc
xchg
push
and
hlt
stos
mov
or
sub
cmp
arpl
mov
(bad)
ror
icebp
and
jmp
sub
adc
imul
imul
repz
xor
icebp
in
dec
add
in
sbb
pop
push
add
retf
or
or
cmp
xor
scas
aad
cmp
call
adc
ds
or
add
add
dec
idiv
xchg
lock
dec
add
stos
inc
add
scas
pop
mov
mov
mov
add
lods
inc
add
xchg
lahf
sti
jg
inc
add
sub
add
add
add
pop
lahf
inc
ficom
push
or
mov
mov
loopne
add
push
mov
mov
cmp
inc
popa
test
push
adc
outs
mov
jne
add
add
xchg
test
je
jb
xchg
adc
and
int3
mov
mov
popa
push
ficom
inc
lock
enter
or
jne
xor
ret
lods
sub
cmp
jge
stc
push
hlt
add
(bad)
popf
mov
sbb
(bad)
pop
fsub
pop
sti
mov
sub
es
and
popf
dec
std
mov
popf
inc
or
fwait
dec
jne
xchg
or
add
mov
(bad)
fadd
inc
(bad)
jne
push
mov
ss
dec
fadd
stc
mov
sti
lds
xchg
mov
and
lds
scas
and
in
add
push
scas
add
mov
dec
in
cmp
inc
rol
clc
xchg
cmp
xchg
mov
jmp
out
adc
mov
mov
enter
add
loopne
shl
sar
inc
lock
or
and
or
and
cmp
aaa
add
fadd
fadd
add
pop
sti
call
add
call
mov
add
add
or
ror
jmp
add
and
pop
rol
outs
add
or
sub
loope
or
scas
lods
mov
mov
clc
push
je
test
and
retf
jb
loopne
sbb
pusha
sbb
and
pop
or
test
mov
mov
lea
shr
xor
loopne
(bad)
dec
rol
sti
add
(bad)
add
(bad)
out
jbe
loope
stos
shr
or
mov
inc
dec
jne
push
cmp
jne
test
jbe
mov
push
test
das
mov
out
dec
(bad)
mov
inc
add
in
cmps
rol
adc
add
(bad)
inc
or
push
mov
push
jmp
add
ins
mov
loop
mov
add
mov
loop
inc
fld
adc
sub
dec
xchg
repnz
mov
adc
add
dec
ret
cmp
jne
pop
cmp
pop
mov
add
push
add
fiadd
movs
loopne
sbb
(bad)
jbe
mov
or
test
cmp
cld
lahf
movs
adc
add
dec
jne
pop
cmp
aaa
inc
ret
push
push
mov
pop
or
inc
or
jne
mov
sbb
jae
push
or
test
dec
pop
add
outs
mov
lea
mov
shr
and
add
shl
test
lea
xchg
dec
or
mov
mov
popa
dec
jmp
add
or
fisttp
mov
lea
dec
and
rcr
out
add
rol
shl
push
jbe
dec
inc
ins
dec
rcr
cmp
dec
jmp
inc
dec
shr
and
add
in
cmovno
imul
rol
cmc
and
add
(bad)
mov
scas
adc
inc
or
mov
mov
cmp
aam
xor
pop
and
mov
mov
mov
lea
push
ss
mov
mov
adc
cmp
jl
(bad)
cld
(bad)
jg
add
jmp
or
mov
mov
xor
dec
mov
dec
mov
lea
mov
es
cmp
cmp
add
dec
dec
and
push
add
mov
mov
call
in
add
pop
cdq
and
inc
or
mov
pop
pop
ret
lea
or
inc
push
inc
data16
fdivr
retf
outs
add
xor
pusha
das
pusha
cmp
sub
sub
fist
xor
ficomp
sub
mov
test
add
and
div
clc
mov
mov
jmp
jg
js
and
mov
and
sbb
dec
mov
jg
icebp
outs
push
dec
je
sub
jne
lea
mov
xchg
lea
mov
loope
adc
out
shl
int
mov
ror
add
and
jmp
loope
or
cmp
mov
jne
mov
fisttp
add
and
sbb
sahf
sbb
mov
data16
jno
clc
pop
out
add
(bad)
cmp
jecxz
out
sbb
xchg
fs
out
add
jns
cmp
jle
xor
add
enter
mov
(bad)
jns
xchg
cmp
xor
addr16
add
rol
push
mov
scas
add
fistp
(bad)
loop
pop
cmp
and
inc
xchg
jmp
inc
adc
cli
and
int
mov
xchg
inc
or
xor
inc
push
aas
int3
xchg
into
adc
aad
clc
inc
cmc
dec
shl
mov
jmp
mov
sbb
mov
dec
dec
dec
jne
mov
adc
add
loope
(bad)
std
or
cli
adc
xor
dec
jmp
(bad)
in
movs
push
add
cmp
lea
jbe
fisttp
jne
neg
jg
icebp
push
cmp
jne
mov
dec
add
pop
mov
or
out
jle
mov
dec
mov
and
mov
dec
dec
dec
jne
sbb
xchg
arpl
stc
daa
jl
stos
sbb
xchg
test
aas
ins
mov
mov
mov
mov
or
mov
dec
xchg
and
adc
call
ss
mov
cmp
jne
or
fld
cmp
jne
adc
push
repz
dec
mov
xchg
push
call
mov
test
xor
jne
mov
mov
jb
mov
or
scas
or
sbb
(bad)
mov
ror
nop
ret
jo
clc
cmp
jne
cld
out
mov
mov
jne
or
cmp
jne
adc
sbb
adc
aas
mov
xchg
lods
stos
mov
or
xchg
pop
aas
sar
ffreep
loope
mov
pop
rcr
add
scas
enter
jmp
mov
add
and
or
retf
or
adc
sar
mov
jne
cmp
je
mov
or
enter
push
push
(bad)
cmp
jbe
mov
dec
adc
(bad)
(bad)
cmp
ja
mov
mov
shl
shl
mov
mov
mov
pop
dec
sbb
and
(bad)
mov
or
mov
jne
ror
sbb
test
inc
push
std
cmp
mov
jbe
xor
push
add
jbe
mov
inc
xor
and
pop
and
shl
in
cli
add
and
or
inc
dec
mov
mov
jne
xlat
add
jno
inc
or
cmp
(bad)
push
adc
inc
add
outs
lods
cli
fild
imul
pop
pop
mov
pop
pop
scas
pop
adc
icebp
sar
rol
shr
push
cmp
jne
lods
and
es
lea
add
pop
pusha
mov
cmp
enter
jne
mov
mov
or
mov
dec
sub
pop
sub
mov
pop
xchg
add
dec
jl
inc
mov
lock
mov
mov
add
dec
jl
hlt
call
mov
cmp
jae
mov
mov
fist
or
mov
lea
mov
out
sbb
leave
je
mov
nop
mov
jl
sahf
(bad)
stos
or
inc
inc
retf
in
sub
adc
mov
inc
aad
mov
sub
je
sub
je
push
cs
jae
sbb
adc
sahf
inc
add
add
or
mov
dec
xor
or
mov
ret
and
push
push
test
push
scas
add
rcl
push
and
pop
adc
jecxz
pop
mov
sbb
mov
xor
add
aad
das
pop
or
test
add
add
test
jne
clc
sbb
loop
je
mov
inc
not
retf
call
pop
ret
cmp
jne
cmp
and
mov
shr
push
dec
repz
adc
mov
jbe
and
xor
dec
leave
jmp
retf
add
sti
mov
out
sub
lea
cmp
jb
sub
xor
ja
cli
add
jp
adc
or
scas
or
adc
mov
dec
mov
mov
add
(bad)
faddp
out
(bad)
mov
mov
add
into
inc
hlt
inc
mov
jmp
arpl
sbb
call
add
sbb
cmp
jae
in
dec
push
popa
mov
push
mov
test
pop
ror
dec
add
test
xchg
push
pop
sub
test
aam
leave
je
lea
jmp
lea
cmp
jae
jmp
dec
cmp
jb
mov
dec
es
jmp
add
test
shl
add
inc
add
mov
mov
mov
inc
cli
jg
test
add
in
adc
or
cmp
movaps
scas
cmp
pop
mov
push
xor
lea
movs
jmp
pop
add
out
push
dec
xchg
bound
dec
pusha
cs
fwait
jne
xchg
pusha
and
jle
lea
cmp
inc
(bad)
dec
mov
push
mov
push
xor
add
lods
add
(bad)
scas
pop
call
jg
mov
test
cmovne
mov
push
ret
ret
or
cmps
and
jg
outs
mov
pop
out
adc
mov
add
cdq
mov
and
stos
xchg
or
and
je
add
jb
sbb
xor
or
icebp
jge
adc
mov
iret
mov
or
out
jmp
pop
ret
push
daa
das
xchg
and
das
inc
mov
mov
jmp
mov
(bad)
mov
shl
mov
loop
pop
cmp
jge
aaa
aad
add
mov
mov
inc
add
fldcw
add
dec
add
xchg
jg
cld
out
sub
and
mov
inc
add
(bad)
(bad)
adc
adc
ror
push
cld
into
addr16
add
leave
dec
cmp
fistp
(bad)
or
mov
sar
push
mov
loop
ds
out
std
cmp
jle
mov
adc
jmp
cdq
enter
push
pop
movs
cli
add
nop
jbe
ror
ror
adc
push
ja
fcomp
(bad)
jbe
mov
retf
xchg
(bad)
nop
int
add
sbb
pop
add
loope
pop
scas
jmp
sbb
add
inc
or
fld
mov
sbb
ret
xor
pshufw
je
jno
jmp
das
adc
fwait
or
lea
outs
mov
mov
mov
pop
add
loop
add
or
mov
push
jo
add
(bad)
xor
mov
pop
mov
test
je
cmp
mov
jae
add
call
add
adc
loopne
push
mov
mov
jne
push
out
pop
inc
mov
in
jg
rol
adc
push
jbe
scas
and
hlt
adc
xchg
jno
mov
mov
(bad)
(bad)
fist
cmp
jl
mov
pop
or
mov
pop
ret
push
enter
add
sub
shr
test
scas
or
(bad)
imul
pop
and
sbb
aad
mov
and
adc
pop
and
push
mov
in
xor
inc
shl
sub
dec
out
inc
rcl
pushf
mov
and
dec
rcl
or
xchg
push
mov
cmp
push
push
push
mov
mov
add
mov
add
cmp
push
xor
les
and
adc
or
inc
pop
mov
pop
pop
in
data16
pop
in
frstor
je
leave
paddusb
xchg
mov
loopne
dec
add
mov
cmc
outs
xor
dec
or
rcl
enter
mov
aas
cmp
push
test
push
punpckhwd
add
mov
cwde
mov
popf
stos
xchg
jmp
push
shl
or
test
jle
out
test
and
sub
jg
mov
es
ror
icebp
inc
test
jl
cmp
jle
add
push
cmp
sbb
cs
test
jl
cmp
js
add
jo
mov
add
mov
test
pop
xchg
or
je
mov
gs
cmps
or
ins
dec
shl
mov
adc
pop
lds
or
add
loop
loopne
and
add
or
mov
adc
aaa
sbb
mov
and
(bad)
adc
and
ins
and
mov
movs
pop
call
add
mov
mov
dec
lahf
mov
lock
pop
jbe
(bad)
pop
adc
jbe
test
imul
lea
clc
loope
dec
add
inc
dec
inc
mov
in
mov
add
cmp
mov
repnz
scas
sbb
inc
xlat
add
push
mov
mov
mov
pusha
cmp
rol
mov
aam
inc
dec
jl
mov
mov
inc
mov
or
jg
dec
and
push
or
add
lock
pop
or
jbe
adc
sbb
dec
add
ja
int
sbb
clc
add
clc
xor
ins
in
mov
pop
cld
dec
and
and
icebp
je
cmp
je
sbb
cmp
cmp
cmp
xchg
sar
cmp
fstp
addr16
or
data16
cmps
arpl
stos
cmp
add
adc
loope
add
sbb
push
push
mov
add
pop
test
adc
xchg
xor
shl
ret
pop
loop
push
mov
and
and
fadd
adc
sbb
sub
inc
in
fsub
int3
dec
push
(bad)
adc
and
not
mov
cmp
push
fwait
and
dec
or
inc
sbb
or
sub
mov
push
jle
and
aas
retf
push
cs
loope
nop
aas
xor
aam
(bad)
nop
pusha
loopne
icebp
sar
push
push
add
loopne
ret
mov
outs
pop
ds
fcomip
aas
add
inc
sbb
adc
push
jne
(bad)
xor
pop
inc
cld
call
push
(bad)
neg
sbb
std
add
push
mov
add
pop
inc
pushf
or
pop
add
(bad)
and
out
sbb
pop
inc
ds
sbb
shl
mov
sub
pop
mov
mov
sbb
adc
mov
mov
adc
inc
daa
mov
pusha
mov
sbb
add
add
push
mov
lea
mov
pop
xor
dec
add
mov
xor
out
pop
mov
sub
test
cmp
clc
push
clc
sbb
jno
or
fistp
pop
test
(bad)
or
mov
or
push
push
jmp
enter
mov
(bad)
(bad)
(bad)
jg
mov
cmp
idiv
lea
and
jmp
mov
dec
enter
or
call
lods
nop
adc
in
jne
jl
inc
lods
and
add
gs
stos
or
shl
inc
or
fnstsw
mov
ss
cmps
dec
mov
outs
test
ret
sbb
mov
mov
cmp
inc
test
lea
mov
call
jle
lea
add
enter
sub
psubb
add
dec
mov
les
mov
pop
dec
xor
dec
cmp
mov
jg
mov
jmp
mov
cmp
je
pop
icebp
fld
and
sub
add
mov
push
sbb
fisttp
aas
pop
xchg
jmp
aas
add
push
dec
mov
mov
adc
pop
xor
inc
jb
and
ror
sahf
ror
add
inc
xchg
mov
aam
rcl
mov
rcl
lock
inc
xlat
mov
pop
jne
pop
or
push
add
adc
mov
mov
cld
mov
push
in
jle
mov
lea
cmp
mov
mov
scas
movs
fild
dec
and
mov
(bad)
add
sub
mov
cdq
(bad)
mov
sbb
add
and
lea
xor
mov
dec
mov
mov
mov
mov
push
add
rcl
fidiv
jo
mov
daa
les
daa
push
dec
or
add
ret
or
jg
xor
adc
push
mov
mov
loope
fwait
mov
inc
sbb
(bad)
xor
adc
add
aas
movs
xor
(bad)
sbb
or
cmp
or
cmp
inc
shl
jecxz
ret
push
loopne
inc
push
or
dec
dec
and
add
(bad)
cli
mov
adc
mov
test
jne
mov
jmp
mov
ja
mov
test
je
cmp
ja
cmp
(bad)
inc
ja
cmp
ja
cmp
ja
mov
pop
mov
mov
inc
or
bound
mov
(bad)
fdiv
call
nop
nop
push
or
das
(bad)
fistp
xlat
add
pushf
pop
sbb
sbb
div
adc
xchg
fild
mov
in
mov
sbb
push
jle
cmp
idiv
mov
jle
fidivr
push
ins
mov
jle
pop
mov
dec
sbb
cmp
jg
cmp
jne
call
cmp
jg
sbb
inc
adc
(bad)
adc
cmp
jle
push
add
aam
push
lea
out
xchg
mov
sub
stos
cli
xchg
int
add
push
pop
test
pop
je
mov
loop
mov
rcr
jl
mov
inc
loopne
test
call
pusha
inc
pushf
push
mov
xor
push
mov
inc
jmp
fadd
xlat
rcr
adc
or
js
and
mov
in
xchg
lds
dec
lds
inc
dec
(bad)
or
je
and
dec
xor
mov
mov
sti
(bad)
push
and
aas
dec
jne
int
retf
add
test
mov
(bad)
arpl
les
inc
pop
je
mov
jg
out
dec
or
and
lea
xchg
dec
adc
mov
or
call
into
and
push
or
jmp
dec
adc
push
push
add
call
stos
and
push
add
in
add
jae
nop
jmp
(bad)
shl
das
push
rcr
nop
inc
ds
xor
jae
xor
aas
jp
add
movzx
jl
mov
add
repnz
call
xchg
outs
iret
outs
mov
adc
int3
add
out
and
mov
out
pop
add
mov
clc
jg
lea
lea
mov
mov
mov
and
clc
xchg
mov
mov
out
jp
dec
cmp
inc
adc
out
cmp
jne
lods
mov
jmp
or
xor
loope
aas
mov
xchg
jmp
mov
mov
rol
inc
and
cmp
and
dec
mov
xchg
add
inc
mov
jg
lahf
adc
adc
jne
cli
dec
gs
dec
or
jecxz
push
jne
cmps
add
or
xor
in
push
into
std
xchg
int3
mov
stos
and
iret
and
adc
and
cmp
je
mul
aad
not
and
mov
pop
lods
add
hlt
cli
pop
push
inc
das
add
fnstsw
cdq
inc
sbb
push
lea
dec
cld
lahf
mov
mov
outs
inc
and
mov
rcl
hlt
adc
sbb
shl
je
pop
xor
into
lods
retf
fimul
ja
test
mov
ja
test
add
push
push
xchg
mov
mov
test
sbb
jbe
mov
(bad)
adc
and
pop
dec
fs
or
mov
push
repnz
mov
(bad)
std
add
call
int
fisttp
ds
(bad)
fbstp
test
je
cmp
je
mov
mov
mov
mov
das
push
neg
sti
cmps
push
inc
sub
and
add
dec
mov
xlat
mov
test
jne
cmp
je
push
aaa
sbb
lock
cwde
xor
jmp
mov
ins
aam
in
pop
jg
jne
xchg
lds
adc
pop
or
int3
sub
sbb
push
dec
pop
and
pop
add
clc
adc
adc
cmp
jb
pop
xchg
ss
mov
mov
and
mov
jb
inc
mov
in
or
or
add
and
or
add
push
jg
jmp
in
lahf
shl
aas
(bad)
fs
mov
adc
push
pop
(bad)
and
add
sbb
scas
out
test
mov
mov
push
rcl
leave
aaa
adc
add
dec
test
add
mov
pop
xchg
cmp
inc
mov
sbb
dec
loope
cmp
mov
fdivr
mov
push
push
lea
push
aad
stos
leave
lea
jbe
jb
xor
les
xchg
cmps
jg
add
mov
adc
fsubr
push
fild
nop
jge
and
mov
ror
add
jge
mov
jmp
test
mov
xor
ins
add
shr
jnp
push
arpl
xor
push
dec
mov
mov
push
in
cmp
push
out
push
push
mov
icebp
mov
loop
mov
mov
mov
jle
loopne
and
or
or
arpl
in
add
inc
loope
inc
sbb
jl
jge
enter
adc
add
fmul
inc
je
mov
push
call
mov
int3
mov
inc
fbstp
or
push
mov
cmp
cmp
(bad)
jne
mov
xchg
mov
(bad)
cmp
and
and
jns
mov
mov
xor
div
mov
jg
push
pop
cmp
inc
mov
push
dec
mov
loop
lea
stos
loop
xor
cmp
jle
cmp
jle
dec
sbb
les
sbb
loop
add
mov
mov
mov
shl
push
push
jl
push
sbb
dec
adc
les
(bad)
mov
out
inc
adc
mov
mov
adc
fwait
not
imul
mov
push
inc
xor
mov
div
mov
mov
pcmpeqw
imul
mov
mov
into
cmc
inc
aad
pmullw
mov
or
std
aas
pusha
scas
ror
sar
lea
mov
sbb
cmp
mov
jne
inc
add
adc
sahf
inc
add
inc
and
movups
mov
jb
adc
test
mov
jle
push
lea
pop
sub
sub
adc
ja
jne
mov
jl
cmp
jge
mov
push
or
fild
outs
add
mov
adc
sub
movs
pop
rcl
inc
rcl
mov
and
xchg
cmp
(bad)
dec
push
fmul
add
mov
mov
call
fisttp
adc
or
add
push
cld
call
add
add
fmul
dec
dec
jne
mov
mov
add
sbb
clc
fnstcw
push
push
ret
pop
pop
mov
mov
lahf
inc
ret
mov
sbb
cli
push
or
ret
mov
cmp
jne
mov
or
retf
(bad)
iret
sbb
sbb
jmp
inc
sbb
add
test
aam
push
xor
mov
(bad)
jl
jle
push
cmps
dec
and
pop
adc
clc
add
fisttp
retf
push
jle
lea
mov
repnz
mov
or
bound
cmp
jg
mov
inc
mov
(bad)
fdiv
and
(bad)
push
cmp
jl
mov
test
mov
mov
mov
mov
mov
sbb
jmp
dec
lock
imul
dec
lahf
gs
push
jmp
inc
add
inc
in
imul
mov
xchg
push
lock
dec
sbb
into
add
add
mov
pusha
mul
leave
mov
cmp
loop
mov
pusha
mov
inc
or
arpl
cmps
or
pop
jl
mov
cmp
dec
(bad)
mov
dec
pop
mov
adc
pop
mov
add
ins
or
sub
push
or
cli
mov
call
scas
add
pop
add
jo
cmp
xchg
cli
add
or
push
push
or
clc
mov
mov
pusha
push
in
mov
(bad)
xor
aas
adc
jl
sbb
bound
lea
and
add
in
push
je
lea
and
add
pusha
jg
push
xchg
loopne
add
lea
add
add
add
in
add
add
call
dec
loop
je
dec
je
dec
je
inc
push
mov
jo
mov
pop
or
pop
ret
mov
mov
fild
cmp
jne
push
call
fidivr
aaa
std
pop
inc
fisttp
mov
inc
cmp
mov
inc
mov
inc
mov
mov
test
mov
jne
ss
les
je
xor
jmp
push
int3
xor
cmp
pop
inc
jo
call
or
loope
fistp
fmul
add
(bad)
pop
iret
add
jge
sar
dec
adc
mov
test
je
mov
es
rol
push
loop
jg
shr
or
lock
mov
fadd
inc
or
adc
xor
aas
push
jg
mov
add
mov
mov
jo
add
mov
mov
jnp
sub
add
mov
rol
push
mov
dec
adc
adc
jmp
dec
shr
loopne
fdiv
push
jo
add
lock
inc
imul
jne
inc
adc
adc
sti
add
movs
daa
inc
mov
cmp
(bad)
mov
leave
mov
dec
add
inc
sub
cmp
and
push
xor
cmp
(bad)
ret
jae
adc
add
inc
inc
in
stos
mov
bound
mov
sub
cmp
mov
jne
and
mov
sti
ja
icebp
cmp
jne
push
dec
jne
inc
mov
jne
ror
ss
ja
stos
and
add
add
push
pop
jmp
lock
add
ret
sbb
add
mov
dec
adc
push
sti
data16
sbb
push
ja
dec
and
jb
push
dec
adc
adc
(bad)
and
mov
mov
ja
mov
push
mov
mov
jbe
dec
and
mov
or
je
xor
cdq
jo
adc
adc
xchg
xor
daa
and
rcr
add
lea
sub
shl
(bad)
push
mov
jmp
xor
sub
mov
mov
or
call
cs
aaa
leave
fadd
pop
inc
ja
pop
push
mov
rcl
push
mov
adc
xor
xchg
sbb
sub
mov
jne
adc
ds
and
and
(bad)
cld
call
dec
mov
add
inc
sub
cmp
js
adc
in
(bad)
cmp
jmp
and
je
xor
mov
push
sub
inc
inc
das
jl
daa
adc
aaa
cld
mov
adc
mov
jne
pop
bound
sbb
xlat
cmp
bound
add
cdq
ret
stos
and
daa
(bad)
push
test
cs
mov
cli
rcl
push
xor
mov
sbb
mov
test
nop
lock
lea
dec
adc
push
inc
xchg
xor
jne
pop
pop
call
jle
mov
test
mov
je
mov
adc
xor
dec
mov
inc
test
jmp
mov
shl
push
mov
push
add
push
xlat
push
xor
inc
dec
add
mov
or
inc
adc
test
shr
aas
push
xor
cmp
lds
in
cmp
jne
loop
fidivr
add
sub
add
je
xchg
xchg
stc
cld
es
ficomp
xchg
ror
loope
inc
jge
ins
push
scas
loope
push
icebp
(bad)
out
inc
jmp
push
push
jmp
push
jmp
push
push
jmp
push
inc
lock
jg
add
dec
mov
sbb
out
jp
pop
mov
dec
out
cs
inc
jbe
sbb
lods
imul
and
push
cdq
sbb
in
jg
add
push
call
nop
cld
(bad)
jmp
popf
aas
rcl
push
add
call
je
test
push
out
cmp
adc
push
or
fst
push
mov
daa
pop
js
and
push
mov
bound
test
ja
shr
dec
mov
lock
inc
add
xor
xlat
xor
add
or
pop
sar
sbb
add
dec
xlat
clts
pop
nop
lods
add
push
psllq
sub
add
add
add
push
cmp
add
push
cld
add
or
or
push
mov
add
seto
mov
push
push
aaa
cmp
fcmovne
cmp
dec
cmp
icebp
pop
mov
lea
into
mov
mov
mov
mov
inc
lea
cmp
jl
push
mov
sub
rol
mov
or
add
mov
add
mov
add
push
sahf
add
pushw
and
push
cmp
adc
push
mov
je
add
mov
adc
add
xor
xor
aaa
adc
arpl
std
mov
ror
dec
call
xor
dec
mov
and
dec
and
nop
sbb
push
sbb
mul
inc
dec
mov
push
popa
lahf
das
jbe
es
das
dec
sbb
cmc
int3
xor
sahf
mov
add
dec
add
es
pop
add
mov
pop
dec
mov
inc
out
xchg
mov
inc
rcr
pusha
mov
or
std
(bad)
push
inc
sbb
shl
inc
sbb
pop
mov
test
jg
jne
aam
push
cmc
add
lea
popa
mov
and
add
and
dec
and
push
xor
sub
lea
shl
push
mov
add
lds
adc
mov
mov
inc
call
jne
pop
xchg
repz
and
inc
ret
std
add
call
mov
add
idiv
and
sar
and
mov
pop
or
clc
ja
mov
push
js
dec
mov
mov
push
jo
inc
inc
and
fsubr
xchg
ret
adc
mov
lds
mov
inc
push
or
ret
xchg
movs
pop
mov
push
xor
aaa
push
(bad)
and
mov
mov
mov
(bad)
adc
test
jne
jns
push
call
idiv
add
or
mov
inc
push
pop
mul
xchg
push
and
jne
call
mul
imul
and
mov
and
sub
inc
ret
dec
cmp
jne
cmp
cmp
dec
es
stos
or
inc
pop
loopne
inc
and
jle
imul
sub
js
mov
das
call
popa
and
ror
inc
xor
xor
and
es
je
and
retf
lock
inc
inc
xchg
and
lock
add
outs
cwde
fucomip
mov
mov
mov
mov
push
and
xchg
sbb
jl
adc
or
sub
jecxz
cdq
loope
inc
sub
mov
mov
mov
cmp
mov
sti
jne
xchg
je
adc
mov
pop
xor
adc
pop
cmp
push
mov
push
out
sbb
mov
add
pop
sub
mov
inc
std
inc
cmc
adc
inc
dec
ret
icebp
and
mov
mov
push
arpl
inc
pop
pop
add
sbb
push
adc
add
add
pusha
push
push
inc
sbb
pop
xor
hlt
sbb
adc
inc
add
xor
xor
ror
pop
neg
add
push
leave
dec
mov
inc
test
mov
jne
and
mov
fild
mov
in
mov
and
add
sbb
or
jle
adc
and
xor
arpl
sahf
test
push
xchg
pop
test
aas
xchg
xchg
pop
jns
add
sbb
sbb
pop
test
mov
sbb
and
xorps
das
inc
cld
jg
cdq
jmp
mov
and
sar
mov
not
cmp
dec
sub
mov
call
(bad)
adc
xchg
mov
pop
pop
mov
jne
adc
jge
xor
in
sahf
push
push
pop
sbb
nop
sbb
mov
test
lds
(bad)
dec
mov
xor
dec
mov
inc
test
adc
cs
jg
mov
xor
dec
mov
add
inc
sub
push
lahf
cmp
mov
jmp
mov
nop
pop
loopne
pop
add
mov
push
dec
sar
scas
adc
mov
cmp
add
jbe
(bad)
fnsave
mov
(bad)
bound
xchg
ror
ror
cld
xor
inc
add
inc
adc
(bad)
adc
cmp
call
add
mov
push
push
adc
(bad)
dec
and
adc
adc
and
jle
adc
gs
rcr
mov
test
add
push
mov
dec
mov
inc
inc
pop
push
out
cmp
sbb
mov
call
adc
or
adc
adc
aas
add
add
cs
jl
pop
mov
shr
and
xchg
sub
dec
pop
jbe
mov
xor
and
sbb
data16
add
mov
jg
scas
movs
and
jg
mov
mov
pop
xor
das
add
mov
loopne
pop
jg
push
mov
jge
mov
test
jne
push
cmp
push
mov
popa
adc
loope
add
fisttp
ds
push
stc
and
pusha
scas
and
and
dec
mov
add
inc
or
jmp
dec
cld
retf
sti
fdiv
push
and
push
push
outs
jg
into
lds
push
rcr
mov
inc
sar
sub
add
jecxz
fnsave
pavgw
cmp
sbb
and
mov
sar
out
rcl
mov
call
aad
cli
dec
sub
test
pop
mov
mov
dec
jnp
loopne
xchg
inc
mov
add
push
and
add
mov
inc
cmp
ror
add
jmp
sbb
sbb
clc
fsub
dec
xor
mov
loopne
fist
sti
sbb
mov
add
adc
push
jmp
sbb
jl
push
daa
mov
adc
jo
rol
push
and
out
cdq
push
add
sub
jno
je
jg
add
pop
adc
loope
(bad)
mov
jne
push
sbb
inc
jo
repnz
cmp
mov
jo
repnz
push
dec
test
pop
cwde
and
aad
in
ror
repz
xchg
sub
in
or
add
inc
cmp
cwde
push
add
pop
adc
je
dec
sbb
cmp
inc
jmp
mov
rcl
ret
test
nop
push
rcl
loopne
mov
outs
fadd
pop
sbb
sbb
cs
icebp
inc
icebp
call
xchg
sbb
lds
mov
cwde
jecxz
or
lock
call
jne
cmp
and
shl
mov
lea
retf
sub
push
push
xchg
ret
jbe
(bad)
cmp
add
mov
pop
inc
and
mov
inc
dec
adc
fist
or
sub
pop
adc
add
leave
adc
mov
in
cs
mov
sbb
mov
pop
mov
aas
push
mov
jl
push
call
cld
add
push
jne
or
std
jge
repz
push
push
fmul
out
inc
push
push
add
mov
adc
or
sti
jnp
not
pusha
add
and
inc
cld
stc
stc
and
sub
inc
(bad)
out
call
dec
sub
inc
cmp
push
add
sub
dec
jne
inc
cmp
inc
dec
ja
dec
push
mov
xchg
cmp
fnsave
hlt
lea
or
push
push
fwait
inc
jno
call
push
test
jle
mov
cmp
sti
in
pop
clc
je
cmp
jne
or
lea
add
loopne
or
push
cld
aas
lea
shl
mov
pop
cdq
inc
and
and
nop
push
pop
or
mov
fist
add
jmp
inc
out
jbe
push
push
pushf
sub
push
cld
or
loopne
jbe
scas
cld
dec
push
hlt
sub
add
mov
test
popa
xchg
jmp
jl
or
mov
adc
fisttp
cmp
jae
mov
mov
call
out
loopne
lock
mov
mov
(bad)
out
jbe
mov
jnp
(bad)
cmp
jbe
mov
lea
push
out
jg
jle
sbb
ds
out
cmp
jae
push
adc
xchg
lea
or
or
add
mov
and
ffreep
add
loopne
add
mov
test
jle
inc
xor
mov
jne
mov
mov
jmp
mov
pop
cld
(bad)
out
mov
dec
add
push
add
add
mov
mov
sub
mov
dec
ret
or
sub
daa
or
test
xor
pop
das
sub
sub
xchg
sub
mov
inc
popa
add
xchg
jno
inc
pop
mov
icebp
or
add
cli
(bad)
push
inc
inc
dec
lea
add
mov
mov
mov
mov
mov
add
inc
sbb
adc
repz
mov
jns
xor
and
xor
mov
push
jo
and
add
mov
push
sbb
fisub
or
lock
mov
inc
xor
jp
jbe
mov
xchg
mov
sbb
scas
fstp
icebp
jl
test
jbe
outs
sbb
sti
(bad)
dec
add
mov
add
add
dec
jne
cmp
jb
popa
sbb
sar
mov
ret
out
adc
jecxz
mov
and
dec
and
push
nop
sub
adc
loope
cmps
and
fisttp
adc
outs
jl
adc
or
add
loopne
cmp
add
rol
sub
dec
and
mov
jg
adc
and
mov
mov
mov
add
sub
dec
sub
inc
inc
jp
cmp
inc
add
idiv
ja
push
dec
je
cmp
jne
fmul
rol
repnz
sub
jg
cli
mov
pop
loope
inc
ret
sahf
in
gs
pop
sub
sub
test
jle
sub
push
push
and
popf
cmp
jl
stos
(bad)
inc
mov
jmp
cdq
idiv
mov
test
jg
iret
mov
clc
jmp
stc
cmp
jne
mov
xor
dec
div
inc
cmp
fbstp
out
pushf
dec
add
dec
adc
and
push
xchg
inc
xchg
xlat
lea
push
(bad)
shr
sti
push
push
mov
pop
mov
add
cs
repnz
aaa
std
(bad)
dec
xor
mov
mov
mov
mov
mov
dec
xchg
mov
and
inc
jae
fs
add
jmp
inc
sar
sub
jae
(bad)
xor
jne
in
jbe
adc
out
in
test
push
push
push
add
jmp
sahf
push
push
nop
dec
sbb
adc
adc
sti
call
sub
pop
add
or
inc
or
add
adc
cmps
(bad)
(bad)
out
rcl
inc
sbb
call
adc
enter
dec
mov
adc
lds
movs
or
mov
jecxz
movs
adc
push
mov
fsub
call
sbb
mov
jmp
cmp
mov
pop
inc
sbb
push
inc
push
sbb
sti
jae
cmp
fbstp
and
adc
in
and
daa
mov
adc
mov
mov
and
lea
mov
outs
(bad)
jae
mov
push
mov
rol
jnp
cmp
jb
loope
and
jmp
test
int3
inc
(bad)
in
jne
push
sbb
mov
push
loope
call
stos
pop
pop
ret
adc
jmp
inc
popf
add
std
fcomip
add
adc
mov
sbb
jmp
into
lock
jle
pop
pop
mov
popf
mov
add
dec
push
in
sub
inc
iret
sub
cmp
jl
add
xchg
xor
das
inc
imul
jge
push
loope
call
mov
xchg
sbb
jmp
push
xor
adc
xor
adc
ror
call
das
pop
adc
mov
add
add
cmp
jl
fdivr
adc
and
push
iret
push
sbb
stc
sub
push
cmp
jmp
clc
hlt
iret
pop
ins
and
cmp
lds
mov
cli
inc
iret
std
jae
cmp
enter
iret
fcmovnu
je
mov
lock
jno
iret
call
out
push
rcl
pop
dec
jns
xchg
rcr
pop
and
fdivr
fcomp
js
sbb
add
add
push
popa
adc
add
mov
jmp
aam
scas
outs
sbb
call
push
sbb
mov
push
shl
in
stos
out
add
mov
sti
mov
inc
cs
jmp
jne
mov
cmp
je
cmp
je
lea
mov
push
push
call
sar
es
mov
cmp
jne
mov
out
and
xchg
mov
sbb
mov
hlt
mov
add
jle
mov
lea
test
mov
pushf
jmp
sub
mov
test
mov
jne
mov
add
je
fs
add
mov
(bad)
jp
pop
js
and
int
stc
pop
mov
dec
jns
mov
push
movs
inc
movs
add
jg
(bad)
adc
xchg
ins
js
add
mov
sti
data16
mov
or
and
add
(bad)
call
sbb
add
(bad)
je
scas
dec
lock
push
call
xchg
jle
inc
dec
and
add
loop
in
or
lea
mov
leave
dec
add
jmp
or
jle
sub
add
cmps
call
dec
xor
lea
jg
shl
cmp
ja
or
add
sbb
adc
mov
in
adc
inc
je
scas
jmp
jmp
lea
add
sub
xor
pop
inc
dec
jg
or
xchg
std
jmp
lea
out
mov
cwde
xor
outs
pop
mov
in
jmp
mov
(bad)
push
jo
sub
xchg
out
xchg
inc
inc
test
push
push
int
(bad)
sti
aas
jle
pop
add
mov
clc
or
mov
xlat
imul
mov
imul
shl
cmp
jg
mov
mov
sub
scas
fcmovbe
in
jmp
pop
add
das
jl
call
adc
push
and
rcl
cmp
fcom
lods
and
aaa
std
sub
xor
xchg
dec
add
mov
or
aas
add
imul
imul
or
call
inc
test
push
push
jl
leave
pop
dec
pop
cmp
ja
jmp
dec
js
sbb
inc
xchg
add
invd
push
push
outs
add
push
xchg
rol
(bad)
fist
mov
jne
mov
push
mov
stc
std
and
jno
stc
cmovge
pop
pop
ret
int
mov
pop
or
inc
add
add
pop
push
push
sar
fisttp
icebp
push
mov
jae
add
es
imul
out
cmp
inc
and
cmp
jne
cmp
jne
mov
pop
mov
xor
into
cmp
fwait
add
clc
jne
cmp
jns
add
cmp
dec
adc
pusha
jne
cmp
jne
mov
pop
jns
cmp
jne
cmp
jne
cmp
add
mov
aas
sbb
add
call
mov
inc
push
mov
mov
adc
push
or
push
cs
pop
adc
lahf
rol
adc
mov
(bad)
and
sbb
add
fdiv
jmp
jg
push
mov
adc
cmp
inc
adc
dec
push
cld
push
mov
jle
jne
mov
mov
mov
cmp
(bad)
xchg
hlt
and
je
cmp
xor
jle
add
outs
add
and
jmp
cmp
jecxz
push
jle
or
jmp
cmp
je
add
or
mov
jg
dec
adc
jle
jne
push
xchg
push
sbb
sub
xchg
or
or
jmp
or
mov
ins
rol
dec
cmp
int
mov
inc
cld
add
jmp
xor
out
pop
aas
cmp
ins
out
mov
cmp
jne
clc
aam
(bad)
inc
shr
mov
push
and
mov
or
inc
out
add
pop
lock
aad
inc
and
or
mov
iret
je
inc
dec
push
push
cmp
jne
(bad)
xor
inc
add
mov
scas
enter
sti
les
mov
mov
ins
adc
out
setne
add
dec
inc
or
mov
cwde
xchg
cli
xor
push
push
add
ins
or
mov
ret
and
add
clc
jg
arpl
push
stos
mov
inc
stc
inc
inc
pop
lock
add
fbstp
or
lea
xor
das
add
fnstcw
mov
add
add
add
in
(bad)
addr16
sar
mov
mov
xor
inc
jg
xchg
popf
xchg
mov
jg
sub
adc
cmps
(bad)
lahf
(bad)
sbb
push
add
je
mov
inc
idiv
mov
inc
sbb
push
adc
sub
pop
push
add
mov
or
jmp
in
sbb
sbb
sbb
push
dec
lods
enter
push
pop
mov
add
hlt
sub
das
inc
call
push
jno
push
or
or
js
movs
add
xchg
(bad)
test
inc
sar
or
ror
or
ret
add
adc
and
mov
mov
mov
mov
mov
adc
jmp
retf
sar
push
pop
mov
mov
inc
xchg
popa
test
je
mov
iret
outs
lock
adc
jecxz
aaa
lock
or
je
mov
xor
loopne
cmp
sar
fist
sar
dec
or
inc
sub
lock
push
call
push
cmp
jne
mov
push
dec
mov
sub
push
push
mov
push
bound
cmp
cs
fcomip
out
fild
sbb
add
call
mov
or
inc
xor
inc
mov
dec
adc
mov
inc
sub
mov
test
jne
jmp
sbb
outs
mov
push
push
and
in
jmp
mov
push
push
nop
xor
or
loop
clc
stos
fdivr
sub
sbb
dec
outs
pop
add
pop
lods
push
and
clc
(bad)
mov
xor
push
add
push
mov
sub
dec
cmp
fiadd
(bad)
or
mov
add
stos
dec
(bad)
out
cmp
je
mov
les
dec
inc
push
outs
jb
xor
enter
ret
inc
jae
sub
dec
jmp
mov
sub
jg
sti
mov
cmp
ja
jg
sub
rcr
inc
add
std
add
jl
push
xor
sbb
test
pop
add
dec
add
mov
(bad)
ror
vunpcklps
repnz
xor
cmp
pop
mov
mov
jb
lds
cld
call
add
call
clc
add
inc
ja
idiv
arpl
dec
shr
jg
sti
add
out
sub
aas
inc
add
push
and
lea
push
add
ficom
fnsave
push
cmp
add
inc
adc
and
mov
inc
rcr
mov
mov
minps
cmp
test
push
add
xlat
shl
add
jg
loope
cmc
pop
xor
cmp
jae
xor
retf
std
sar
cli
je
and
mov
dec
repz
ja
out
and
daa
mov
mov
mov
not
and
ret
adc
ror
test
cmp
mov
cmp
mov
mov
je
imul
arpl
test
sub
leave
jne
dec
dec
pop
inc
cmp
jne
mov
mov
cmp
je
mov
ja
(bad)
(bad)
cmp
ret
enter
clc
mov
leave
mov
jne
cmps
dec
dec
dec
push
push
push
mov
adc
xchg
dec
mov
mov
cmp
aaa
aaa
dec
mov
mov
sub
dec
cli
dec
sub
retf
fnsave
(bad)
cmp
inc
and
jne
mov
cmp
rol
mov
sub
dec
mov
jmp
jo
inc
mov
sub
pushf
sbb
rol
repz
adc
(bad)
jbe
mov
cmp
add
aad
outs
inc
mov
cmp
jp
cmp
shl
pop
sbb
or
add
adc
add
add
clc
add
sub
inc
cmps
sbb
jne
mov
mov
and
cs
adc
sbb
cmps
test
je
pusha
cmp
or
cs
repnz
rol
jb
sbb
cmp
ja
out
call
cli
mov
adc
push
adc
inc
call
lea
sub
inc
or
ror
pop
mov
clc
ja
shr
sub
mov
sub
jge
sar
inc
or
jmp
ret
and
mov
adc
dec
inc
mov
cmp
adc
and
arpl
xor
jl
add
(bad)
(bad)
call
adc
sbb
add
add
(bad)
call
inc
mov
mov
jo
jb
xor
push
cmp
jae
or
jmp
js
add
add
(bad)
(bad)
jg
enter
push
and
lea
lea
push
mov
push
push
push
(bad)
push
inc
inc
mov
je
call
jmp
sub
mov
mov
mov
shr
loop
xor
cmps
add
enter
arpl
test
loopne
call
xor
jae
test
shl
loope
jl
mov
add
loop
adc
sbb
inc
cmp
movs
adc
mov
adc
(bad)
fild
push
ror
add
sbb
call
inc
stos
xor
sbb
shl
mov
or
or
cmp
jg
jmp
dec
repnz
push
sbb
add
and
int3
std
mov
ror
jmp
adc
pop
fmul
cmp
jb
jmp
xchg
mov
rcr
add
push
sbb
out
add
sbb
jmp
cdq
pop
dec
add
rol
mov
ret
ja
and
adc
loopne
aad
adc
add
cmp
adc
out
fwait
xchg
inc
and
xor
jmp
adc
(bad)
js
sbb
call
or
test
xor
dec
and
push
jg
ins
mov
or
inc
call
mov
shr
cwde
loopne
adc
inc
push
add
inc
je
ss
lods
inc
or
pop
inc
stos
ret
std
jo
sbb
or
loope
adc
aas
inc
shl
cmp
dec
sbb
stos
cmps
jbe
loopne
xchg
movs
xor
test
cmp
clc
mov
add
add
idiv
push
aaa
fst
dec
and
mov
mov
cmp
iret
mov
xor
and
inc
pusha
fnsave
push
push
icebp
test
test
test
sub
adc
les
xor
fmul
dec
inc
sbb
xor
cmp
mov
ret
mov
jne
add
inc
adc
aas
mul
mov
iret
mov
mov
sub
xor
xor
push
sbb
test
dec
inc
sbb
xor
ss
shr
add
add
iret
xchg
inc
jbe
enter
push
cmp
mov
mov
inc
sbb
dec
add
mov
dec
add
xlat
push
sub
dec
add
dec
dec
sbb
lahf
ins
xor
imul
shr
(bad)
mov
fcom
mov
add
or
or
push
mov
test
inc
cmp
outs
fstp
or
dec
sub
add
dec
dec
push
push
and
mov
sbb
mov
adc
xor
push
mov
test
sbb
push
push
enter
cmp
adc
inc
dec
push
xor
hlt
dec
aas
adc
mov
pop
sub
add
mov
sbb
push
push
clc
sub
inc
mov
dec
and
mov
cmp
dec
and
lds
sbb
lods
repz
arpl
jecxz
add
push
mov
push
mov
rcl
mov
sbb
xchg
jo
lahf
test
shl
dec
and
dec
dec
inc
sbb
out
(bad)
push
retf
or
lea
push
mov
xchg
dec
push
mov
dec
mov
mov
sub
xor
cmp
inc
or
and
push
push
(bad)
ror
test
push
or
xor
or
mov
int3
push
and
imul
sbb
in
ds
mov
pop
jnp
sbb
dec
add
push
push
mov
or
adc
and
jo
shr
std
jne
inc
add
test
sbb
sub
add
adc
cld
add
push
mov
push
mov
aam
jmp
(bad)
and
inc
inc
idiv
and
sahf
lahf
out
mov
push
mov
je
push
sbb
sar
jmp
mov
or
cs
mov
sub
mov
xor
pusha
add
outs
or
daa
mov
fs
(bad)
mov
cs
dec
push
or
lds
add
mov
rol
mov
scas
dec
xor
push
and
push
and
jl
push
dec
pop
and
push
jne
shl
pusha
inc
(bad)
retf
jg
popf
sar
lods
adc
lods
dec
mov
nop
adc
pop
adc
add
add
adc
mov
add
sbb
pushf
push
inc
add
sub
enter
jmp
out
inc
daa
call
inc
add
add
scas
mov
push
cs
xchg
stos
and
aas
sbb
into
dec
sub
jmp
inc
pop
sub
rol
adc
mov
xor
jg
push
sbb
adc
pop
nop
inc
inc
inc
add
add
jo
and
mov
inc
xor
add
mov
test
jne
das
push
scas
add
(bad)
adc
(bad)
(bad)
call
mov
jmp
je
cmp
je
cmp
jne
mov
lods
fild
push
fwait
or
and
fdivr
cmp
shl
sub
adc
sbb
inc
cmp
clc
out
mov
mov
aas
pop
sbb
ds
dec
call
push
mov
xchg
ror
std
or
ret
add
addr16
adc
add
adc
jae
mov
mov
mov
push
ja
jbe
rcr
jno
lods
or
sbb
or
adc
test
inc
xor
mov
(bad)
dec
mov
mov
lea
je
cmp
jb
sub
sar
jmp
jl
mov
add
jmp
xor
sub
and
add
pushf
mov
mov
push
mov
sub
int3
mov
add
scas
js
pusha
pop
pusha
dec
mov
scas
add
inc
and
shr
xor
jbe
or
leave
dec
inc
xor
rol
add
jg
mov
dec
push
mov
push
mov
adc
push
dec
outs
lds
cmp
adc
cmp
shl
xchg
ret
sub
inc
xchg
inc
push
std
add
pop
pop
and
pop
ret
mov
std
pop
std
lds
call
and
add
ret
add
and
cmp
add
add
mov
mov
dec
ins
sub
sub
jne
test
jne
test
jne
mov
cdq
adc
cli
push
(bad)
ret
pop
mov
dec
and
mov
cli
or
shl
jnp
das
mov
push
lea
shr
and
mov
sub
sub
mov
(bad)
(bad)
or
inc
mov
dec
cmp
lds
jno
jmp
inc
xchg
add
lds
sub
and
jne
mov
(bad)
dec
sti
mov
lea
pop
add
mov
mov
test
je
mov
jbe
out
call
xor
into
add
push
cmc
adc
mov
xchg
add
mov
mov
cmp
jb
mov
xor
dec
push
lea
mov
mov
shl
xor
mov
xor
mov
and
adc
add
popa
cmp
adc
fisttp
jmp
or
add
sub
(bad)
fdivr
fnstenv
mov
test
jne
test
push
scas
cmp
mov
mov
jle
add
add
mov
retf
push
or
add
pop
adc
ja
inc
or
retf
add
pop
push
inc
enter
or
jle
push
pcmpeqw
ins
cmp
sbb
call
xor
popa
push
sbb
repz
test
aam
cmp
jb
mov
mov
or
dec
pop
add
cmp
(bad)
mov
inc
mov
sub
dec
cmp
ret
or
mov
ds
mov
mov
test
je
mov
xlat
dec
loop
ja
add
je
mov
retf
or
mov
mov
jae
xor
xchg
cwde
push
xchg
scas
pushf
add
mov
push
sub
sub
mov
inc
adc
xchg
nop
sbb
cmp
mov
xor
cmp
xor
mov
inc
xlat
arpl
sub
lea
push
fcomi
xchg
mov
fs
addr16
adc
call
out
xor
ret
and
pop
jnp
pop
dec
xor
cmp
mov
push
js
xchg
ror
(bad)
jmp
cmp
mov
ja
cmp
jb
dec
rcl
mov
mov
inc
xor
loope
add
mov
mov
push
shl
mov
xor
dec
(bad)
pop
add
mov
and
push
mov
mov
neg
mov
dec
jne
pop
push
retf
aad
xchg
pop
ja
xor
ss
xchg
add
mov
(bad)
loope
(bad)
or
jmp
jle
loope
push
xor
add
and
data16
jo
inc
ret
add
mov
mov
es
stos
or
loope
stos
(bad)
cmp
ror
out
pop
test
inc
mov
stc
xor
std
sete
dec
mov
sti
call
in
je
in
out
dec
push
call
scas
sar
add
pusha
add
aas
adc
sbb
adc
adc
loope
pop
pop
lods
sbb
mov
inc
test
mov
rcr
push
sub
add
push
add
xchg
cmp
adc
pop
inc
adc
or
add
inc
xor
cmp
xor
dec
xor
fisttp
cmp
push
hlt
ret
icebp
inc
xor
mov
push
pop
mov
sbb
out
outs
pop
je
js
retf
jae
inc
dec
and
stc
dec
add
dec
pop
add
je
cwde
pushf
mov
push
push
add
add
jbe
pop
mov
sbb
neg
add
inc
pop
ja
hlt
jg
ins
mov
mov
std
mov
sbb
call
push
ss
pop
sahf
pop
mov
and
add
call
ror
fstp
enter
push
xchg
add
xchg
ret
sub
add
add
mov
mov
cs
pop
sar
mov
ja
into
retf
jo
mov
jne
push
sbb
(bad)
sbb
add
(bad)
and
icebp
fs
test
int
aaa
sbb
aas
sub
push
push
iret
push
pop
push
mov
hlt
or
iret
push
inc
nop
add
mov
pop
pushf
mov
sbb
fisubr
push
dec
setb
adc
imul
inc
mov
fidivr
jg
dec
cmp
jne
mov
lods
ror
inc
dec
int
push
add
lock
je
loope
xor
sbb
outs
jbe
add
mov
sbb
je
cmp
shld
mov
rcl
lea
push
(bad)
(bad)
fcom
and
mov
mov
(bad)
test
mov
xchg
xchg
fsubr
add
lea
into
xor
sti
add
xchg
fwait
or
dec
das
pop
and
pop
pop
ret
js
cmp
nop
mov
popf
mov
inc
inc
out
cdq
idiv
pop
fwait
mov
test
dec
xor
mov
cmp
pop
add
ret
pop
and
sbb
add
adc
jle
in
dec
sar
jmp
mov
mov
mov
in
int
rol
add
inc
push
fbld
rep
jne
arpl
or
call
dec
mov
shl
lods
xor
nop
dec
(bad)
fld
sub
pop
je
or
mov
xor
rep
sub
jp
pop
ins
test
add
fild
push
or
fsubr
ror
jnp
add
xor
mov
or
pop
adc
push
sub
and
mov
jmp
add
cs
add
cmp
jle
lock
pop
sub
or
jno
popa
retf
sbb
hlt
pop
daa
add
add
adc
or
shr
mov
(bad)
call
in
test
jle
push
lea
add
mov
mov
imul
push
mov
js
mov
jl
lock
adc
or
add
clc
pop
push
pop
(bad)
push
cmp
jl
jle
je
push
aas
mov
scas
jae
push
add
push
call
adc
push
mov
call
mov
mov
aaa
or
push
fisttp
cmp
xchg
or
or
push
sbb
push
pushf
std
xchg
imul
cdq
neg
mov
sbb
jmp
sbb
inc
cmp
outs
clc
lds
mov
adc
push
cmp
dec
cmp
add
mov
xchg
mov
jg
sbb
or
mov
call
cmp
or
add
mov
cmp
mov
or
pop
jl
jp
je
data16
xor
push
fdivr
push
aad
imul
jle
mov
xlat
int
jle
sub
cmp
es
cwde
add
repnz
pusha
cwde
lock
adc
mov
test
mov
call
xchg
jle
dec
lea
lea
push
loope
mov
mov
(bad)
xor
sbb
inc
sbb
scas
add
push
cmp
mov
sbb
call
mov
cmp
lea
imul
test
jle
mov
mov
sub
inc
out
jmp
sbb
sbb
cld
dec
(bad)
sub
sbb
pop
dec
mov
jne
inc
lea
test
jle
jg
add
mov
imul
add
mov
(bad)
push
leave
xor
sub
lea
sub
lea
mov
fcomp
fist
sub
mov
mov
inc
dec
jne
inc
jmp
jle
xor
lea
mov
mov
mov
sub
push
add
dec
mov
jne
sub
mov
inc
mov
inc
mov
jmp
mov
add
(bad)
call
pop
pop
add
mov
jo
mov
jg
(bad)
out
sbb
xchg
lea
push
push
call
or
push
dec
test
je
mov
out
pop
sbb
outs
and
scas
push
or
jg
std
push
lea
push
push
xor
mov
add
cmp
pop
jb
cmp
add
xor
add
ds
sub
std
mov
push
test
test
add
dec
push
or
inc
mov
mov
enter
add
and
clc
je
dec
jne
in
push
rcr
xchg
mov
stos
clc
iret
ja
push
mov
push
add
adc
mov
sbb
and
pop
mov
mov
jg
outs
pop
pop
mov
xor
mov
xchg
xchg
dec
mov
or
push
add
in
mov
jb
imul
call
lds
jo
out
push
mov
fbstp
aad
cli
out
mov
sub
add
ins
test
leave
mov
test
shl
nop
aas
pop
push
xor
leave
mov
inc
mov
pop
scas
adc
sub
ja
fadd
sbb
mov
stos
jecxz
push
sub
jmp
mov
scas
(bad)
ja
repnz
mov
cmp
mov
add
shl
xchg
mov
add
xor
xchg
dec
aaa
adc
and
mov
fidivr
cmps
adc
cmp
mov
sub
pop
pop
and
rol
add
adc
cmp
adc
mov
mov
sbb
jecxz
sbb
in
adc
add
(bad)
push
mov
mov
adc
ins
sbb
mov
mov
mov
add
jne
data16
mov
and
cmp
sbb
jl
mov
jg
in
mov
and
mov
cmp
push
jae
add
sahf
jo
dec
dec
pushf
call
xor
mov
mov
aaa
std
(bad)
push
icebp
mov
test
jne
mov
test
jne
lea
cdq
idiv
mov
jb
inc
mov
mov
cmp
push
inc
mov
lea
test
mov
mov
adc
mov
mov
dec
jne
mov
(bad)
sbb
push
cmp
jl
fwait
pop
fstp
cmp
add
adc
xor
mov
push
jmp
sub
and
cli
in
add
cmp
je
and
in
mov
mov
or
add
xor
add
inc
or
inc
mov
adc
jo
hlt
push
mov
(bad)
mov
and
jle
add
add
mov
ja
push
retf
pop
mov
or
mov
push
mov
ror
int3
mov
or
add
cmp
shl
push
adc
inc
and
xor
sbb
fbstp
loopne
cmp
jl
rcl
lea
pop
adc
cld
std
pop
mov
push
cmp
or
push
add
add
or
dec
and
or
add
dec
mov
xrelease
ds
int
lds
pop
test
mov
mov
or
add
sar
dec
and
push
mov
inc
fdivr
jg
mov
add
mov
cmp
jae
mov
rcl
mov
mov
pop
ret
mov
mov
push
add
add
mov
je
dec
sub
sti
or
mov
pop
out
push
aaa
test
adc
cmp
stos
inc
push
push
mov
mov
mov
push
int3
cmp
cmp
push
and
cmp
out
sar
add
jmp
adc
cmc
adc
xchg
mov
and
lea
shl
push
mov
ins
mov
push
xchg
cmp
not
dec
xor
cmp
push
and
outs
mov
xor
icebp
pop
push
lea
shl
loopne
inc
jl
sub
jo
cmp
xor
or
dec
fadd
cmps
dec
push
xchg
daa
dec
stc
mov
xchg
mov
and
call
jg
jae
mov
sub
pop
mov
xchg
cs
sub
inc
and
and
push
add
adc
mov
test
xor
ret
or
xchg
loop
rol
call
add
cmp
jge
mov
xor
loopne
out
aaa
sub
and
push
push
push
call
mov
mov
pop
jno
addr16
cdq
inc
mov
hlt
sub
push
inc
xchg
popf
push
call
mov
aas
cmp
fbld
cli
lea
jge
aam
test
sub
leave
aaa
(bad)
inc
push
xor
add
add
mov
mov
and
out
and
jo
std
jl
das
cmp
mov
inc
cli
sub
xchg
xor
add
mov
jbe
cli
ficom
jl
jecxz
iret
jle
mov
adc
mov
jmp
cmp
les
and
mov
add
ins
adc
push
sbb
push
call
add
movs
pop
out
sbb
dec
sub
fiadd
inc
push
xor
fild
mov
mov
pop
jl
and
pop
mov
push
pop
pop
push
icebp
add
inc
jg
jp
add
dec
or
inc
push
push
ins
fadd
xchg
call
xor
loope
out
and
inc
mov
pop
ja
ins
jb
xlat
cmp
cmps
adc
jl
inc
and
sbb
ret
cwde
and
ret
inc
mov
enter
cdq
mov
daa
stos
fiadd
pop
and
bswap
lea
lea
mov
pop
(bad)
add
mov
sar
jle
cmp
cmp
and
sub
rol
push
sbb
jb
mov
mov
adc
and
fbstp
pop
aas
and
je
and
inc
fisttp
add
jmp
sbb
inc
or
inc
(bad)
and
cmp
jl
call
loopne
cmps
and
add
add
(bad)
dec
inc
and
adc
stos
aas
ins
cmp
push
mov
push
adc
lds
pop
mov
mov
cmp
sub
or
xchg
xor
jb
pop
inc
cmp
xor
jmp
sub
push
sbb
jbe
xor
and
add
sbb
enter
and
push
inc
ret
outs
hlt
cmp
dec
mov
mov
std
inc
sbb
xor
jle
(bad)
sar
mov
mov
cmp
ja
mov
aaa
test
enter
adc
mov
jo
cmp
scas
mov
pusha
cli
scas
or
add
sub
pop
jb
pop
push
dec
lock
pop
add
push
inc
or
rol
bound
push
add
mov
push
iret
je
mov
mov
fnstsw
js
js
add
adc
jg
xor
div
mov
mov
dec
and
add
icebp
or
mov
(bad)
xor
xor
imul
pop
mov
xor
or
jbe
push
xor
push
lds
mov
push
cmp
and
dec
sbb
test
dec
imul
cmp
jbe
push
mov
adc
imul
xor
xor
test
xchg
imul
push
sbb
xchg
push
fst
add
(bad)
clts
fsubr
add
mov
or
mov
out
inc
mov
sbb
cmps
(bad)
cmp
pop
sbb
pop
add
fldenv
ret
inc
add
push
mov
lahf
dec
cmps
and
adc
xor
std
mov
loopne
mov
cmp
bts
push
add
cmp
mov
cmp
jne
push
mov
lea
inc
cmp
cld
shl
push
push
cmc
or
push
ror
dec
and
mov
pop
pop
aas
aam
ror
jle
push
fwait
(bad)
je
add
test
cmp
xor
adc
je
push
and
je
adc
je
add
(bad)
jmp
pop
cmp
jl
mov
lea
sub
mov
pop
add
mov
test
loope
adc
jne
cmp
pop
cmp
sbb
lds
data16
push
add
rcl
xchg
jl
xchg
dec
adc
or
mov
pop
push
sahf
xchg
test
daa
fimul
cmp
and
stos
mov
lock
jg
mov
jmp
cmp
jne
mov
out
loopne
mov
xchg
rol
cmp
ja
add
mov
call
cmp
jle
cmps
mov
pusha
movs
movs
xor
cmp
inc
and
jle
icebp
sbb
push
mov
dec
sub
loope
add
mov
jo
mov
movs
sbb
ss
inc
inc
jmp
dec
or
lock
mov
pop
inc
adc
shr
mov
jl
or
and
dec
adc
cwde
mov
ror
or
dec
imul
mov
add
push
in
icebp
sub
cmp
add
xor
jmp
and
and
cmp
pmaxsw
iret
sbb
xchg
daa
call
sbb
dec
add
mov
mov
sbb
add
fmul
inc
in
sbb
xor
(bad)
xor
adc
arpl
jg
leave
inc
call
lea
add
mov
rcl
fst
es
js
and
test
xor
mov
and
sub
js
adc
jge
(bad)
fistp
and
je
test
mov
je
mov
stos
pusha
test
je
loop
jmp
jne
mov
clc
xchg
mov
(bad)
lock
sub
mov
dec
xor
mov
je
pop
and
popa
js
or
sbb
pop
add
xor
jge
push
scas
and
test
call
pshufw
fstp
ret
push
adc
fistp
xor
in
adc
scas
mov
adc
dec
fwait
outs
cmp
add
inc
pop
sub
inc
sbb
shl
js
mov
add
cdq
shl
idiv
add
pop
mov
shl
cmp
jl
lea
jmp
sub
mov
push
sub
sar
iret
push
bound
dec
or
outs
add
jbe
jne
adc
push
sbb
lock
jl
je
jo
loop
jne
or
jbe
lea
addr16
xchg
mov
add
pop
add
(bad)
jl
add
es
add
xchg
jbe
push
arpl
jne
adc
mov
dec
cmp
iret
mov
scas
or
or
out
idiv
xchg
adc
and
and
cmc
call
outs
add
(bad)
and
or
push
pop
jnp
rol
jo
adc
inc
les
or
adc
inc
lock
inc
xchg
push
push
push
push
call
(bad)
dec
and
push
dec
lock
or
jmp
push
ins
mov
fs
in
push
std
mov
pop
add
retf
repnz
mov
or
icebp
sub
xor
mov
and
rcl
ja
call
xchg
jo
inc
outs
lea
jae
popf
xor
xor
pusha
or
mov
pop
and
clc
aaa
rcl
outs
je
jmp
mov
ret
xchg
stos
sbb
push
pop
push
sub
iret
pop
push
mov
jo
pop
pop
sub
mov
les
ins
xchg
call
icebp
pop
sbb
pop
fwait
popa
loopne
jmp
mov
mov
xor
push
jecxz
jne
xor
push
stos
cld
mov
mov
mov
mov
mov
dec
mov
leave
mov
mov
cmp
jl
lea
mov
mov
mov
mov
jo
(bad)
sti
mov
shl
mov
cmp
jmp
xor
and
rep
mov
push
add
jle
mov
(bad)
(bad)
jmp
xor
test
movsx
je
movsx
cmp
jne
lea
xchg
movsx
inc
mov
outs
mov
shl
not
xor
(bad)
(bad)
mov
inc
dec
cmp
je
mov
mov
add
ror
adc
fadd
mov
clc
lahf
clc
fwait
rol
xchg
dec
add
sar
add
popf
loop
xchg
jmp
or
fadd
cmp
jb
addr16
push
mov
mov
jl
adc
sti
jmp
shl
test
jle
push
and
aam
add
lea
dec
dec
inc
dec
jne
or
or
jmp
jle
adc
inc
inc
test
outs
add
xchg
push
adc
inc
cmp
pop
fst
push
inc
sbb
mov
mov
gs
loope
jmp
push
cmp
mov
mov
call
or
(bad)
mov
push
or
ror
cmps
sub
test
adc
cmp
pop
add
pop
ins
add
xor
jg
test
shl
call
jmp
mov
cmp
jge
mov
cli
xchg
ins
popf
jne
inc
push
imul
push
sbb
pusha
sbb
(bad)
xchg
jo
cmp
enter
jb
jp
jl
mov
mov
mov
mov
adc
mov
stos
mov
and
pop
or
push
pop
cmp
or
cmp
push
push
push
cli
and
and
and
mov
mov
or
mov
ret
mov
mov
push
and
sub
mov
fstp
loope
mov
repnz
mov
shl
mov
lea
dec
and
mov
cmp
jle
shl
cmp
jge
es
mov
dec
mov
mov
xchg
std
cmp
in
or
mov
or
(bad)
and
(bad)
icebp
jg
adc
mov
and
jmp
adc
or
adc
call
or
add
icebp
push
cmps
(bad)
rcl
xor
add
pop
mov
pop
push
retf
inc
std
adc
push
jmp
push
dec
push
test
push
mov
sbb
inc
add
push
push
std
xor
pop
mov
test
push
lock
push
inc
adc
mov
ds
push
sbb
stos
aas
jne
cmp
sar
mov
xchg
and
xor
pop
imul
jle
or
xchg
mov
mov
mov
add
inc
cmp
fstp
(bad)
xor
and
out
fstp
sti
cmp
stos
mov
imul
iret
add
and
es
xor
adc
ins
adc
cmp
icebp
xor
les
or
shl
add
adc
fwait
sbb
mov
sbb
mov
xor
lahf
cli
(bad)
call
jge
mov
mov
mov
and
std
sbb
sub
sub
and
push
or
loope
cmc
mov
neg
jne
je
mov
movs
pop
hlt
cmp
cmp
jle
xchg
mov
inc
push
sbb
stos
js
lock
lds
cmp
add
cmovo
loope
hlt
inc
or
dec
pusha
push
lea
mov
sub
and
mov
xor
adc
leave
jle
pop
(bad)
jae
mov
cmp
or
cmp
mov
fwait
mov
xor
mov
and
lods
inc
fistp
mov
jp
ja
mov
dec
pop
jge
and
xchg
mov
fdiv
dec
and
xor
sub
dec
clc
mov
sar
mov
mov
test
xor
mov
jmp
cmp
push
dec
push
push
sbb
dec
aam
inc
push
push
call
xchg
adc
test
fdivrp
ja
mov
and
dec
test
je
cmp
jge
inc
shl
pop
adc
into
sub
mov
shl
mov
or
ja
push
dec
and
cmp
jge
mov
jmp
mov
pop
and
xor
test
(bad)
fwait
sbb
jno
mov
lea
push
cmp
dec
loope
xor
xor
stc
add
mov
das
xchg
mov
and
mov
or
adc
or
ror
sbb
cwde
inc
cs
rcr
push
or
into
sbb
lar
lock
add
adc
adc
or
mov
mov
push
mov
jmp
cmp
ja
inc
or
add
inc
cmp
jl
add
cmp
adc
xchg
xchg
jo
add
adc
mov
cwde
lods
sub
jmp
aam
or
sbb
ins
and
mov
add
shl
inc
call
dec
fimul
and
sbb
into
inc
pushf
mov
bnd
stos
sbb
cmp
cmps
dec
and
frstor
clc
sub
mov
jge
push
test
push
sub
hlt
jg
test
mov
dec
pop
mov
pop
jne
push
sub
and
inc
jno
js
add
push
push
mov
inc
ins
mov
cdq
and
add
mov
mov
ror
or
mov
adc
and
(bad)
mov
jne
pop
pop
ret
(bad)
xor
test
xlat
or
cmps
inc
jmp
cmp
jl
ret
mov
pop
imul
mov
push
ds
shr
push
mov
call
sub
or
xor
mov
mov
mov
push
inc
add
mov
push
jne
loopne
mov
and
mov
and
outs
or
xor
push
mov
xor
cli
add
stos
push
inc
cmp
jl
imul
xor
loopne
push
std
cmp
sete
xor
cmp
mov
cld
daa
cmp
or
gs
jmp
mov
add
ret
cmp
jl
sbb
mov
or
test
mov
je
sbb
and
dec
cmp
sbb
aas
or
je
dec
adc
sub
fimul
scas
movs
mov
mov
mov
xchg
inc
fild
adc
cmp
push
push
les
cli
out
sub
or
adc
pop
and
lea
mov
xor
mov
xchg
xor
cmp
aas
push
add
sbb
fiadd
pop
mov
ja
jle
test
ret
shl
jp
jne
sar
sbb
and
mov
retf
in
cmp
(bad)
jg
(bad)
jne
cmp
je
mov
jmp
or
mov
push
push
adc
rcl
adc
in
push
inc
add
xor
aaa
inc
xchg
mov
popf
fwait
clc
pop
lds
jbe
leave
jne
pop
adc
sub
enter
mov
and
adc
pusha
jmp
mov
stos
cld
out
movs
pop
cmp
lea
push
push
daa
pop
push
jnp
clc
enter
adc
push
cmp
call
jno
ret
sbb
inc
inc
cwde
sbb
loope
inc
outs
or
outs
or
adc
imul
push
or
scas
mov
push
push
mov
mov
inc
sbb
clc
fwait
js
hlt
mov
and
add
sbb
dec
mov
push
dec
lea
push
mov
rcr
mov
inc
cld
ja
mov
pop
or
mov
push
xor
movs
mov
sbb
xlat
cmp
inc
adc
lea
pop
adc
fild
ja
or
pop
adc
(bad)
mov
je
sub
and
add
inc
adc
push
sub
mov
jo
sbb
inc
retf
loopne
mov
xor
or
stc
and
(bad)
sti
mov
sub
test
in
push
out
mov
jl
pop
xchg
and
fst
cld
les
xor
je
pop
jno
test
mov
xchg
dec
stos
sbb
into
pop
cmp
pushf
pop
pop
jl
adc
and
lea
inc
dec
mov
cmp
jno
pop
inc
mov
mov
inc
sub
pop
or
movs
dec
pop
pop
mov
call
adc
and
lahf
dec
add
sbb
test
push
mov
push
iret
push
mov
rol
mov
aad
xchg
sbb
and
je
mov
xchg
fld
outs
jp
jmp
test
js
xchg
adc
dec
jmp
jp
mov
mov
mov
aad
and
sub
adc
sbb
cmp
lds
test
adc
cmp
xchg
or
cmp
jg
iret
jo
mov
and
push
call
sbb
and
push
xchg
inc
sub
push
or
and
push
mov
sar
add
dec
add
cmp
movs
arpl
and
(bad)
xor
arpl
arpl
sbb
dec
mov
pop
dec
and
push
push
jmp
cmp
jne
add
and
cmp
fdiv
es
dec
jle
(bad)
sar
dec
mov
shl
test
mov
je
cmp
jge
sbb
adc
inc
cmp
pusha
xchg
xlat
cli
cli
dec
jp
call
jmp
inc
dec
cdq
iret
dec
push
lahf
and
lds
ror
mov
sub
ret
mov
(bad)
cmps
inc
sub
inc
stos
gs
pop
mov
mov
imul
jno
outs
and
xor
add
mov
scas
sahf
rol
adc
sar
and
inc
push
push
xchg
mov
add
nop
scas
not
inc
aam
jg
mov
mov
lea
sub
dec
rol
dec
or
mov
stc
add
add
rcl
(bad)
and
and
inc
or
xor
mov
sar
test
je
push
les
or
loope
jne
xor
inc
add
cmp
sub
jl
in
mov
sbb
mov
or
mov
sbb
cmp
inc
sub
inc
push
cld
inc
push
adc
sbb
sub
cli
lds
nop
mov
mov
mov
aam
adc
icebp
fsub
add
sbb
cmp
ret
cmp
iret
add
pusha
ret
mov
jmp
inc
cmp
js
or
and
sbb
mov
or
jl
or
out
mov
and
(bad)
mov
mov
retf
fcom
adc
test
es
(bad)
loopne
inc
and
mov
pop
cmp
mov
pop
inc
pop
call
add
shr
inc
jmp
jmp
cmp
clc
mov
sar
xchg
aas
dec
aas
lahf
mov
mov
jmp
pop
in
not
xchg
mov
jl
jne
mov
or
unpcklps
loop
push
std
add
test
sub
nop
cmp
jge
xchg
mov
inc
xchg
xchg
add
call
inc
call
into
sbb
sbb
stos
fucomp
lea
in
scas
es
hlt
sbb
sbb
dec
fdiv
lds
test
cmp
retf
add
pop
cmp
push
leave
(bad)
jmp
add
cmp
add
xchg
es
sbb
loop
je
sti
add
ja
movsx
test
push
sub
push
test
jl
add
mov
jmp
imul
mov
or
loopne
js
xchg
test
and
aas
loopne
jo
outs
in
jle
int3
test
je
mov
es
(bad)
test
inc
(bad)
outs
jmp
sbb
cmp
scas
(bad)
cmp
das
adc
mov
dec
(bad)
sbb
pop
cld
mov
and
je
cmp
jge
push
push
lea
scas
aam
and
aaa
add
cdq
sbb
xor
jo
(bad)
cmp
push
fsub
movs
jbe
jp
xchg
cmp
jg
sbb
and
dec
ret
(bad)
fisttp
mov
pop
inc
inc
je
pop
cmp
lods
test
mov
cmp
test
je
pop
bound
push
int
jge
push
jnp
stos
dec
xchg
add
jmp
jle
push
push
add
mov
push
dec
cmp
inc
inc
call
sbb
push
inc
add
mov
dec
pop
mov
out
inc
movs
and
xor
sbb
mov
cld
fsub
call
add
pop
sbb
add
jne
in
xor
pop
sub
jecxz
js
lahf
push
fisttp
stos
es
mov
in
sbb
cli
repz
dec
mov
add
push
push
sub
sub
dec
add
cmp
std
add
add
and
mov
add
stos
mov
ret
mov
rcl
(bad)
pop
pop
pop
push
sub
mov
mov
and
icebp
cmp
aas
jg
sub
daa
out
pop
adc
mov
push
push
lea
lea
inc
xchg
mov
dec
cmp
ja
sbb
and
mov
inc
add
sahf
fld
ror
xor
jae
push
enter
inc
arpl
push
mov
cmps
mov
adc
push
aam
mov
shl
push
fcmovnbe
(bad)
push
lock
mov
jle
inc
mov
getsec
and
sub
call
inc
loopne
fnstenv
cmp
inc
cld
mov
mov
je
jb
(bad)
mov
jp
test
sub
push
nop
mov
jle
cld
(bad)
sbb
ds
mov
mov
push
(bad)
push
add
mov
xor
add
mov
add
lock
(bad)
mov
fild
cmp
clc
fmul
fstp
jl
add
dec
dec
add
cmp
popf
mov
sub
dec
mov
mov
movsx
(bad)
dec
add
mov
add
imul
add
sar
mov
or
sbb
fucomi
sub
sbb
jns
mov
sub
mov
dec
and
inc
push
jb
sar
adc
jl
ja
pop
pop
pop
fcomp
ret
mov
adc
and
(bad)
retf
dec
xor
add
test
sbb
punpckhdq
pop
adc
ja
mov
mov
(bad)
adc
add
loope
cmc
add
jae
cld
mov
inc
adc
dec
je
mov
push
adc
inc
push
sbb
mov
add
imul
push
in
cmp
push
adc
or
push
js
aam
jae
sbb
leave
push
out
inc
or
dec
test
push
sub
mov
xchg
inc
dec
je
clc
inc
jne
lock
std
pop
scas
pop
ret
mov
test
push
popa
out
mov
add
pop
mov
or
mov
test
je
mov
and
pop
out
pop
inc
xor
imul
inc
inc
jge
inc
add
call
add
std
nop
fistp
pop
add
mov
mov
ror
adc
js
jo
xor
add
retf
add
inc
dec
and
fist
and
and
push
push
dec
sub
adc
push
xchg
inc
call
adc
jae
push
push
call
cmp
test
es
add
mov
lods
xor
inc
or
pop
xor
mov
sbb
bound
push
ja
or
push
push
call
mov
bound
inc
push
push
mov
cmp
add
aas
dec
nop
and
push
or
bound
les
jle
push
lea
jae
les
and
(bad)
jle
push
add
add
push
or
enter
mov
leave
jbe
or
jge
adc
add
or
mov
daa
(bad)
add
xchg
push
push
retf
mov
lods
jle
mov
out
test
popf
sub
mov
sub
cmp
mov
jbe
inc
je
sub
or
ret
test
pop
push
repz
sub
cmps
add
mov
mov
lods
add
mov
mov
cmp
data16
mov
mov
mov
and
push
mov
mov
xor
mov
mov
add
push
shl
sub
xchg
std
popa
inc
fwait
jmp
je
inc
out
mov
test
cmp
jg
rol
scas
sub
push
fwait
jo
ret
bound
call
and
ret
xor
mov
imul
mov
sub
xchg
inc
cmp
mov
mov
adc
fistp
mov
mov
test
and
mov
std
pop
fwait
push
fadd
sbb
clc
jne
cmp
push
xor
jmp
pusha
cld
lahf
in
dec
jge
add
pusha
data16
add
inc
fdiv
or
inc
adc
jne
and
sbb
or
cld
xor
inc
cmp
fstp
cmp
push
mov
and
mov
jnp
adc
adc
into
mov
add
sbb
cmps
cli
mov
push
mov
jge
(bad)
cmc
mov
push
jo
adc
loop
jle
lods
push
push
call
inc
fcomp
xchg
mov
call
lds
sbb
popa
loopne
mov
out
sbb
and
cmp
lahf
sbb
pop
mov
mov
daa
jbe
popa
or
mov
xor
sar
or
call
jle
scas
sbb
jae
push
cmp
pop
dec
aam
push
es
push
sbb
push
(bad)
dec
add
das
les
shl
sub
inc
add
add
loopne
dec
jno
jl
mov
mov
push
pop
mov
sub
dec
mov
wrmsr
mov
(bad)
sbb
icebp
jbe
mov
dec
sub
(bad)
or
or
mov
or
pusha
mov
sub
add
mov
mov
mov
pop
fstp
fcomp
sbb
mov
call
pop
mov
or
jo
ficom
bound
cmps
and
push
cmc
retf
ja
push
mov
mov
jg
add
ror
mov
sbb
scas
jns
fidiv
sar
adc
and
sub
sbb
sub
sub
mov
call
mov
add
cmp
jae
mov
inc
in
dec
and
jle
mov
mov
lahf
add
mov
push
(bad)
rcr
mov
test
cmp
shl
sub
idiv
cmc
jb
clc
fist
pop
sub
mov
dec
jne
push
push
xchg
clc
lea
push
push
cli
in
inc
mov
out
xor
add
mov
inc
add
xlat
add
add
push
inc
popa
jo
pop
inc
jg
mov
mov
movd
unpckhps
sbb
out
mov
dec
jo
xor
add
cmp
jae
mov
inc
mov
call
shl
and
test
jg
mov
and
push
xlat
or
sub
push
adc
xor
pop
push
xor
adc
fstp
and
sti
and
pop
inc
dec
jo
push
add
push
push
push
inc
add
lock
out
sub
add
adc
add
cmp
popa
fs
cmps
or
jb
fwait
dec
pop
xor
rol
add
test
not
sub
cmp
push
or
and
sub
aaa
sbb
or
mov
(bad)
out
pop
adc
sbb
sbb
(bad)
mov
add
push
sub
idiv
ds
movs
inc
lea
ds
dec
aam
int3
cs
dec
jne
lock
(bad)
sbb
mov
mov
or
lea
sar
xor
add
sub
cmp
mov
mov
mov
pop
pop
xchg
leave
mov
punpckldq
xor
xor
mov
lods
add
add
mov
add
sub
mov
add
add
adc
mov
xor
sbb
les
mov
pop
and
mov
xchg
mov
shr
mov
adc
je
adc
sbb
mov
adc
sti
jg
mov
iret
pop
push
add
inc
inc
jge
lea
fst
adc
imul
cli
fild
adc
(bad)
(bad)
lea
inc
inc
inc
lea
adc
inc
mov
sub
mov
je
mov
(bad)
and
xor
xor
push
mov
cmp
inc
inc
lea
lahf
je
jne
adc
lea
cmp
or
lock
div
xor
mov
aas
mov
and
xor
adc
lea
cld
popf
cmp
adc
call
stc
sbb
mov
loope
lahf
bound
adc
xchg
pop
inc
push
push
(bad)
cmp
jl
or
add
mov
pop
cwde
mov
mov
clc
mov
mov
push
ja
ror
sub
add
leave
jle
add
and
and
push
(bad)
jle
sbb
je
mov
(bad)
and
add
mov
mov
dec
mov
jg
dec
bound
cmp
cmp
dec
sub
mov
mov
jecxz
mov
cmp
jne
push
sbb
ficom
outs
call
add
pop
jecxz
clc
sbb
into
bound
add
sbb
out
sbb
cmp
jne
inc
loopne
inc
jmp
jle
cli
fs
jne
jae
push
shr
mov
cmp
push
fst
fstp
cmp
mov
mov
cmp
mov
jle
mov
sub
mov
test
cmp
mov
inc
shl
or
inc
pop
fild
js
mov
lea
shr
sbb
inc
add
add
pop
add
cli
pop
adc
add
movsx
add
mov
call
mov
mov
xor
ret
sbb
adc
pop
inc
daa
adc
ja
out
xor
mov
not
imul
(bad)
mov
or
(bad)
mov
mov
mov
sar
mov
mov
mov
add
fcomp
inc
ret
adc
adc
(bad)
mov
outs
(bad)
call
jmp
mov
add
mov
cmp
inc
(bad)
push
inc
jae
jo
xor
mov
dec
sbb
add
(bad)
sub
inc
or
adc
test
test
push
sub
xor
mov
xor
push
lea
out
rol
test
add
mov
add
inc
mov
test
sbb
imul
cmp
jbe
enter
xor
lock
sub
inc
sbb
neg
jle
adc
xor
add
or
repz
mov
add
push
sbb
mov
mov
push
mov
push
out
or
aad
add
sub
adc
mov
cmp
add
cld
xor
dec
mov
push
mov
push
adc
js
hlt
rol
jne
or
or
mov
and
lock
add
js
cmp
add
push
aad
sbb
push
sar
jb
test
mov
out
sub
movs
sbb
add
mov
inc
in
mov
ret
test
add
cmp
jl
jle
inc
mov
in
jae
test
add
sbb
je
cmp
std
aad
adc
dec
mov
lahf
adc
fcom
xor
test
jl
sbb
mov
mov
mov
and
sub
mov
dec
call
mov
ret
inc
push
mov
enter
in
stc
and
xor
dec
xchg
dec
outs
mov
mov
mov
mov
out
inc
mov
int3
test
sbb
les
mov
push
mov
push
inc
(bad)
inc
loop
cli
cld
jl
inc
scas
jb
adc
cmp
clc
sub
es
pop
pop
adc
add
ja
dec
and
adc
sub
mov
cld
jecxz
xor
add
and
mov
or
out
js
sub
sub
mov
pop
std
mov
sub
sub
out
sbb
inc
mov
push
call
les
cmp
test
rol
cmp
sahf
xchg
(bad)
dec
and
test
getsec
or
add
push
nop
nop
push
and
cmp
cmc
push
push
sbb
adc
pop
push
faddp
mov
push
nop
outs
enter
dec
sbb
imul
mov
and
(bad)
out
mov
sub
inc
add
and
inc
or
jb
add
ins
mov
mov
imul
push
mov
ret
push
sub
rol
ret
or
sbb
(bad)
xor
add
xchg
scas
jb
repnz
mov
cdq
jmp
scas
sbb
imul
sub
sbb
scas
sbb
and
pop
xchg
stos
stos
scas
sbb
(bad)
or
mov
jp
mov
call
dec
je
dec
icebp
xchg
sbb
or
loopne
inc
es
mov
shl
or
cmc
xor
push
mov
push
lea
lea
push
push
and
test
dec
icebp
arpl
popa
mov
test
mov
aas
cdq
scas
call
(bad)
jg
add
add
and
jbe
mov
cmps
test
retf
adc
lock
push
inc
and
dec
mov
push
adc
add
or
mov
add
mov
jg
adc
iret
test
mov
jne
inc
pop
ret
adc
sbb
(bad)
out
mov
lea
jge
shl
inc
adc
push
mov
jmp
push
push
call
mov
cld
mov
push
mov
inc
mov
adc
nop
mov
xchg
rol
push
xor
lock
and
push
sbb
xor
push
pop
sub
xor
xor
add
push
or
sbb
mov
mov
shr
je
rol
xor
test
and
and
sbb
and
xor
add
(bad)
add
mov
mov
inc
ffree
(bad)
adc
pop
cli
lea
add
or
sub
mov
inc
call
cmc
sbb
sbb
paddw
dec
sub
push
call
cdq
sub
push
mov
mov
sub
inc
jo
je
mov
push
dec
dec
adc
(bad)
jae
xchg
mov
mov
mov
fbstp
mov
add
mov
mov
lea
ror
fild
std
or
mov
mov
add
and
mov
inc
push
movs
mov
mov
loopne
sbb
push
ins
sbb
pop
dec
pop
cmp
jae
mov
mov
lea
lahf
mov
mov
cmp
or
loope
mov
int3
cmp
or
jo
sbb
xor
add
jb
mov
add
inc
sub
add
cmp
mov
sub
fld
add
mov
fidivr
add
sub
xlat
in
mov
or
cmp
adc
lea
mov
mov
cmp
push
cmp
mov
xor
adc
push
cmp
jns
sub
lea
sub
push
sbb
cmp
cmp
xchg
mov
sub
lock
push
mov
jmp
push
std
pop
mov
iret
loop
adc
jne
and
mov
inc
jmp
push
iret
loopne
push
cmps
std
sbb
(bad)
and
popf
dec
leave
xor
ret
sbb
stc
sub
add
gs
mov
ja
mov
leave
mov
pop
xor
fld
stc
add
sbb
pushf
mov
mov
sbb
xchg
jmp
push
lahf
jnp
outs
mov
pop
loopne
mov
push
mov
lahf
add
inc
mov
xchg
cmp
stc
adc
pop
sbb
adc
or
mov
pop
jg
(bad)
mov
mov
les
sti
sbb
aas
inc
loope
sbb
jl
mov
adc
aaa
mov
test
test
les
adc
or
jg
mov
push
push
dec
nop
adc
sti
adc
pop
mov
pop
je
mov
mov
cmp
pop
jo
push
add
js
rol
push
mov
push
mov
cmp
cmp
jbe
xchg
pop
outs
add
jg
mov
mov
pop
sub
adc
dec
hlt
mov
xor
xor
mov
call
add
mov
mov
das
sub
inc
dec
dec
jne
lea
jne
push
lea
mov
mov
neg
inc
mov
mov
sbb
cmp
push
dec
and
retf
cmp
jl
lahf
adc
xchg
std
jg
mov
fincstp
shr
(bad)
fisttp
mov
jns
fbstp
call
lds
lahf
push
mov
adc
sub
mov
mov
lock
and
push
push
sbb
mov
data16
cmp
sar
sub
ja
or
fild
fsubr
inc
jo
rol
sbb
inc
mov
mov
add
clc
xchg
sahf
push
add
inc
and
mov
mov
add
pop
minps
inc
mov
inc
sbb
(bad)
pop
je
es
adc
xor
mov
sbb
sbb
cmp
jmp
or
xchg
stos
add
and
call
mov
test
jle
xchg
adc
dec
dec
adc
or
std
push
mov
mov
shr
ins
cmp
shl
shr
(bad)
mov
or
shr
add
mov
test
ja
dec
mov
or
enter
adc
cmp
or
scas
push
and
xchg
pop
shl
adc
adc
push
in
popa
stos
out
jp
mov
stos
or
mov
lock
mov
push
aaa
push
sub
push
xchg
sub
push
mov
push
fisub
xor
mov
test
xchg
sub
test
inc
mov
mov
inc
xor
mov
mov
shr
shl
add
inc
cmp
lea
jne
push
push
push
rol
pop
sub
push
fist
sub
leave
mov
inc
scas
sub
lods
add
jo
xchg
push
js
icebp
cmp
inc
and
and
adc
pop
mov
push
cld
stos
loopne
in
in
and
sub
push
mov
ror
out
sti
or
adc
mov
inc
mov
cmc
lea
ja
jecxz
mov
out
aas
add
push
into
push
push
xchg
sti
dec
fst
jmp
sub
push
and
sub
cmps
jmp
dec
push
push
and
imul
rol
test
push
add
inc
icebp
mov
in
shl
mov
call
mov
(bad)
fcomp
cmp
lock
call
loope
inc
add
add
add
push
cmc
(bad)
fbstp
imul
dec
jne
add
dec
jne
dec
mov
jp
fstp
jmp
add
adc
or
mov
adc
or
mov
xchg
outs
push
adc
cmp
test
pop
out
es
adc
sbb
add
jmp
in
dec
aaa
lea
lea
push
mov
(bad)
sar
test
ja
cmp
push
mov
popf
repz
adc
adc
sbb
add
inc
call
jbe
jmp
bound
call
cli
(bad)
inc
mov
cmp
jge
mov
sub
shl
imul
add
sub
stos
retf
fisttp
(bad)
(bad)
(bad)
mov
imul
cmp
jge
mov
sub
lea
mov
imul
add
sub
jmp
lea
or
and
(bad)
jg
les
sar
(bad)
jg
sub
jmp
cmp
jle
xor
inc
fld
iret
sub
and
or
je
test
arpl
mov
mov
and
repz
mov
(bad)
push
add
sub
jmp
cmp
jg
je
lea
outs
gs
cmp
std
sub
sbb
sub
cs
inc
adc
or
sub
sub
cdq
mov
mul
sbb
retf
add
pop
fcomp
pop
mov
pop
ret
in
fcom
mov
pop
mov
test
jle
mov
push
and
(bad)
mov
mov
cmp
jg
mov
inc
inc
add
cmp
jl
outs
adc
pop
jbe
(bad)
in
cli
nop
add
ss
rol
mov
adc
and
ret
rep
xchg
pop
ror
mov
cs
popf
sub
push
mov
(bad)
jo
mov
sar
jg
add
mov
jp
adc
inc
test
mov
sub
retf
xor
lea
mov
dec
mov
adc
add
mov
mov
scas
stc
add
addr16
ja
fmul
rol
or
jl
mov
je
xor
in
shl
shl
icebp
je
and
jge
mov
adc
and
jmp
jge
sub
movs
cmp
jge
mov
mov
add
cwde
ficom
int3
mov
dec
jne
sbb
stos
xlat
adc
jnp
jb
sbb
inc
or
jne
and
add
mov
add
pop
xor
adc
sbb
cmove
sub
jl
fdiv
pop
pop
pop
add
push
(bad)
mov
jge
nop
pushf
std
jne
add
xchg
pop
lock
cmp
sbb
sbb
sbb
lahf
adc
xchg
jnp
push
inc
ins
mov
jb
push
fistp
ins
and
cdq
je
inc
mov
sub
repz
inc
push
inc
mov
mov
mov
aaa
je
mov
cmp
xor
add
cmps
es
mov
or
dec
std
inc
je
inc
ud0
jg
jo
inc
dec
add
pop
mov
cmp
outs
and
jb
mov
pop
push
ds
fbld
xor
pop
push
add
xor
cmp
xlat
and
and
call
test
xchg
stc
inc
and
lea
mov
dec
xor
outs
or
mov
mov
int
push
sar
repnz
add
aas
cmp
daa
push
add
add
jae
fst
push
push
add
push
sbb
fild
inc
dec
pop
in
adc
cli
add
adc
(bad)
call
mov
add
xor
sar
mov
mov
sar
mov
and
ins
push
sar
mov
loopne
mov
add
mov
jge
add
xchg
push
jne
fucom
sbb
js
sub
(bad)
call
dec
mov
cld
dec
and
sub
mov
mov
and
sub
inc
std
mov
into
add
add
add
mov
ret
mov
imul
out
clc
add
add
and
mov
and
lea
mov
sbb
add
add
add
and
mov
fisubr
int3
push
je
inc
js
stos
or
jo
popa
je
cmp
inc
and
add
dec
sbb
outs
js
aaa
loopne
jne
cmp
sar
das
(bad)
cmp
je
cmp
pop
cmp
mov
or
pusha
sahf
out
sbb
add
xor
pop
inc
and
jne
jo
pop
lahf
loopne
pop
inc
fmul
mov
test
hlt
test
mov
sub
mov
int
adc
mov
push
inc
ins
or
cdq
fstp
sahf
push
push
mov
mov
mov
mov
dec
cld
mov
mov
pop
jo
push
cs
adc
jbe
pushf
repz
jmp
adc
mov
jbe
mov
cmp
xor
pusha
idiv
pop
push
mov
pop
cmps
xchg
sti
mov
outs
sbb
hlt
mov
arpl
push
loopne
push
es
and
mov
mov
mov
xchg
loope
xor
sar
fcom
push
loopne
lods
sbb
jae
fst
pusha
sbb
sub
lea
sbb
and
(bad)
push
inc
aaa
adc
rcl
jg
sub
into
(bad)
(bad)
(bad)
jg
add
int
adc
cmp
mov
mov
jg
mov
add
test
jne
inc
cmp
aaa
inc
rol
jle
sbb
ret
idiv
push
scas
sub
mov
xchg
jae
push
scas
sti
or
push
push
hlt
clc
frstor
cmp
jle
jmp
(bad)
rcl
out
and
mov
and
cmp
jle
and
(bad)
jae
aas
and
cmp
sub
aad
adc
mov
inc
lock
sub
sub
inc
scas
sbb
and
adc
mov
and
inc
and
mov
cmp
jge
rol
and
sub
cmc
push
mov
test
adc
clc
jg
out
clc
fistp
and
(bad)
lea
mov
mov
or
(bad)
cmp
jg
mov
ret
mov
in
jne
inc
cmp
sbb
pusha
jg
sbb
ror
pusha
cmp
ins
and
jmp
call
leave
mov
adc
call
xor
(bad)
jle
mov
mov
test
add
ror
xchg
inc
ds
sub
sbb
adc
cmp
jge
and
xchg
and
add
cmp
jg
cmps
std
ja
xchg
mov
shl
lea
mov
aaa
inc
jnp
add
cmp
jg
pop
mov
daa
inc
add
or
and
inc
mov
inc
mov
fimul
and
adc
jle
add
and
(bad)
js
mov
adc
fnstsw
mov
lds
mov
mov
jns
mov
add
mov
mov
jnp
xor
fmul
(bad)
jge
jmp
and
push
test
adc
(bad)
fstp
cmc
sbb
(bad)
stc
mov
lea
mov
pop
sub
outs
and
ja
imul
mov
shl
jg
add
xchg
and
dec
adc
(bad)
loop
mov
xor
cmp
jg
push
jecxz
scas
sbb
lea
jo
enter
sbb
stos
ja
ins
and
cmp
adc
(bad)
call
add
arpl
cmp
jg
lea
loopne
call
inc
sub
and
(bad)
jne
clc
sbb
mov
mov
and
push
cmp
add
pop
mov
add
xor
iret
push
push
push
add
jb
ror
cmp
(bad)
(bad)
outs
mov
aas
mov
jp
sbb
inc
les
xchg
dec
and
mov
jg
adc
rcl
pop
into
jne
and
mov
mov
mov
jg
in
mov
lea
mov
mov
mov
mov
jg
push
adc
mov
mov
mov
and
mov
mov
mov
imul
xchg
push
lea
shl
shl
cmp
jle
mov
jmp
jle
nop
sub
je
dec
je
aaa
lock
dec
mov
mov
add
cdq
sub
sar
mov
inc
jae
sub
inc
or
imul
adc
bound
adc
mov
jl
sbb
sbb
fwait
clc
xor
mov
sub
ret
add
mov
sbb
jl
and
add
inc
out
mov
xor
push
rcl
or
add
fiadd
cmp
jle
mov
test
jle
lea
mov
add
dec
jne
pop
pop
dec
xchg
cdq
es
dec
aas
je
mov
sbb
call
out
sbb
add
cmp
mov
mov
xor
or
push
ret
lds
push
retf
cmp
fsub
ds
adc
bound
cli
xchg
sub
xchg
stos
sub
outs
jp
loopne
std
sbb
lock
mov
(bad)
adc
sbb
int
lods
mov
add
push
xor
sub
jg
std
mov
sbb
mov
xor
mov
test
cmp
cmp
scas
fadd
jmp
or
test
mov
lds
adc
sub
cmp
mov
test
dec
jne
nop
adc
pop
sub
pop
add
ret
inc
fimul
or
and
sub
adc
add
pop
ins
mov
stos
ret
or
xor
inc
out
jbe
jne
mov
or
mov
add
sbb
or
mov
je
mov
adc
adc
mov
in
pop
and
push
or
sub
mov
add
inc
sub
xchg
mov
dec
in
add
daa
push
sbb
pop
add
adc
add
xchg
inc
add
clc
inc
mov
mov
sub
jle
sbb
mov
(bad)
mov
fmul
lock
add
push
jl
add
ret
or
push
sbb
push
mov
cmp
sub
outs
jb
jns
mov
loop
mov
cmp
add
mov
and
idiv
push
call
mov
adc
xor
dec
shr
js
xor
mov
stc
lds
add
dec
sub
and
lock
xor
cli
call
xor
inc
(bad)
mov
cmp
arpl
pop
xor
(bad)
(bad)
(bad)
push
leave
test
jle
mov
add
inc
cmp
mov
jl
dec
sub
mov
cmp
jl
nop
jnp
fiadd
in
jl
aas
stos
jg
jo
xchg
dec
sbb
push
js
mov
(bad)
adc
push
jl
pop
fwait
or
mov
pop
js
jle
mov
dec
adc
or
dec
inc
add
nop
loope
add
mov
cmp
(bad)
(bad)
inc
add
dec
dec
scas
ret
dec
jne
cmp
jle
dec
cmp
and
push
loopne
test
(bad)
mov
sbb
mov
mov
mov
rep
imul
dec
jne
scas
pop
mov
fstp
repz
jle
aad
cmp
push
cmp
clc
ja
pop
push
and
mov
jmp
mov
sub
cmp
mov
fwait
lea
sbb
scas
sar
or
daa
jmp
mov
or
pop
sub
fmul
clc
out
sbb
xchg
and
test
jne
outs
add
and
push
push
dec
lock
sub
mov
push
mov
add
(bad)
pop
cdq
idiv
(bad)
cmps
call
add
dec
pop
mov
push
cmp
mov
push
or
add
add
je
stos
clc
or
dec
sbb
sar
add
and
es
push
push
call
ret
out
cs
js
inc
adc
xor
push
stos
ret
or
aaa
cmps
and
and
into
ja
rcl
pop
adc
mov
jg
test
je
mov
mov
lea
add
call
fisttp
adc
push
push
push
push
jge
push
jl
add
enter
icebp
jle
cmp
inc
sbb
mov
push
jne
mov
(bad)
idiv
push
and
imul
mov
inc
cmp
sti
xor
data16
retf
jno
mov
inc
mov
mov
push
mov
pop
sbb
out
jp
ret
dec
inc
test
hlt
loopne
or
adc
xchg
push
jle
inc
jo
pop
mov
shl
sub
lea
fadd
adc
nop
out
and
in
(bad)
push
ins
or
dec
js
leave
jle
push
lea
mov
add
daa
or
add
xor
mov
out
or
adc
mov
adc
icebp
mov
jle
dec
adc
lds
sbb
pop
dec
je
dec
je
and
ret
mov
lea
cmp
mov
push
(bad)
cmc
add
mov
add
lea
jne
sar
or
int3
in
rol
jmp
adc
xchg
nop
into
(bad)
jg
in
pop
mov
mov
cmp
push
jp
sar
xor
xor
mov
jmp
ins
mov
xor
fcmovb
adc
inc
mov
test
cwde
and
nop
mov
inc
mov
icebp
outs
pushf
ds
lea
mov
movs
idiv
lea
cmp
je
cmp
mov
hlt
jmp
mov
cli
or
jge
mov
fs
clc
aad
inc
and
jl
add
icebp
jg
lahf
leave
push
call
jbe
mov
shl
add
sub
push
(bad)
sar
adc
clc
mov
fistp
ret
jge
sbb
sti
inc
cmp
adc
(bad)
adc
pop
adc
aas
loopne
loopne
enter
push
mov
mov
push
cmp
or
push
fst
ins
mov
or
add
loopne
mov
sub
stos
mov
xchg
in
scas
xor
jo
and
jbe
cmp
(bad)
cmp
fmul
jle
adc
push
add
nop
jmp
push
fist
add
inc
dec
jne
nop
and
ja
and
or
cmp
call
xor
out
sbb
cwde
js
inc
push
shr
cwd
dec
jne
pop
pop
pop
pop
popa
pop
ficomp
cwde
les
xchg
adc
mov
inc
mov
mov
and
xchg
test
lock
jne
jns
loopne
push
sub
inc
push
push
stos
inc
and
mov
mov
test
inc
nop
sbb
push
jle
fcomip
adc
shl
leave
inc
mov
ret
fisttp
mov
retf
inc
ror
push
rcr
add
bound
add
xor
push
fsub
cmp
jne
retf
nop
add
in
loope
push
mov
push
inc
mov
call
dec
and
or
fcom
sub
inc
test
xor
retf
push
jbe
sahf
gs
jg
xor
jbe
lock
ja
or
rol
and
lock
test
xor
shl
lea
push
push
mov
lds
pop
rcr
adc
and
into
adc
cmp
add
mov
mov
add
pop
aad
ret
xor
cmp
jbe
dec
out
mov
cmp
fimul
add
mov
sar
popa
adc
ret
mov
scas
cli
inc
inc
and
sti
cmp
push
and
inc
in
dec
mov
adc
(bad)
cmp
sbb
add
xchg
enter
jp
push
add
dec
mov
aam
and
inc
mov
mov
clc
lods
shl
mov
push
and
mov
ja
rcr
and
mov
dec
loop
aaa
jg
jle
lods
pop
xor
cmp
ret
push
mov
ret
push
mov
aam
call
mov
mov
cmps
jo
add
cmp
push
add
add
jg
and
hlt
leave
loope
arpl
jge
sbb
out
clc
or
xor
in
sbb
adc
xor
sbb
xor
or
and
add
mov
inc
jno
inc
jne
adc
call
popa
pop
adc
lock
in
inc
inc
adc
mul
loopne
dec
mov
sbb
ret
jmp
or
sub
loopne
jne
loope
add
and
jl
loope
out
dec
add
push
mov
je
js
popw
sbb
mov
sbb
jbe
jle
dec
test
mov
sub
push
push
xor
mov
sbb
(bad)
inc
mov
imul
cmp
sti
mov
xor
mov
add
pop
dec
dec
je
inc
dec
mov
add
imul
maskmovq
idiv
cmp
push
fcom
jmp
add
push
push
cmp
aad
cmps
xchg
rcr
sbb
inc
test
cld
pop
aas
or
cmp
sar
and
int3
sbb
xchg
push
or
mov
cmc
mov
add
mov
xor
clc
add
enter
or
lods
push
fbstp
or
mov
add
mov
pushf
(bad)
dec
sub
add
mov
std
dec
add
add
add
mov
inc
sbb
mov
xchg
mov
outs
and
addr16
lods
and
shl
ret
jne
test
pop
aad
mov
inc
sub
mov
push
mov
jl
fsubr
push
push
xor
sete
mov
cmovs
test
and
dec
and
adc
push
add
les
cs
sub
push
and
cs
cmps
and
mov
and
mov
or
dec
call
cmp
and
out
dec
or
mov
jb
add
cmps
sub
and
add
pop
sbb
cmps
cmp
sub
push
and
cmp
fwait
add
shl
sub
xor
sub
std
outs
or
jg
mov
cmp
ja
rcr
aam
add
jne
and
and
xor
sbb
add
fnstsw
dec
pop
mov
mov
or
ret
mov
add
adc
xor
dec
sbb
out
mov
dec
adc
aas
movs
add
das
mov
cmp
les
cmp
and
jp
je
xor
dec
scas
or
dec
mov
jmp
nop
out
cdq
add
or
scas
add
rol
add
cmp
add
add
add
and
rol
inc
add
shl
and
test
jae
jge
enter
lock
and
sbb
sub
add
xor
mov
call
pop
mov
mov
sub
out
xor
cmp
or
push
and
lods
test
je
mul
or
and
sbb
mov
push
les
out
dec
pop
scas
sti
mov
rol
je
retf
or
pop
sti
dec
add
or
xor
mov
xchg
ss
add
pop
or
gs
xor
mov
repz
mov
cmp
jmp
out
daa
cmp
loop
(bad)
shl
sbb
popf
je
adc
and
inc
je
(bad)
je
mov
pop
repz
adc
test
jo
xchg
sub
sub
sub
pop
and
and
retf
sub
jae
bound
aam
mov
sub
cdq
adc
ret
cmp
lock
or
ret
and
ret
jmp
jmp
inc
mov
adc
test
xor
and
sub
shl
jle
pusha
sar
sar
sub
add
jmp
adc
arpl
popf
jmp
dec
ins
push
jne
ins
xor
mov
adc
mov
mov
sbb
adc
xchg
pop
je
cli
and
and
inc
dec
mov
mov
push
or
sub
rcl
std
mov
fdiv
pop
jecxz
add
sti
jne
inc
pusha
adc
lods
in
hlt
cdq
add
sub
rcr
mov
repz
cmp
inc
ffreep
mov
(bad)
mov
jmp
and
add
xor
int
cld
iret
aad
retf
movs
aas
add
mov
mov
mov
fwait
leave
ror
outs
dec
enter
lock
sub
inc
add
xchg
push
add
push
dec
das
push
cmc
call
pusha
popa
dec
sar
in
aaa
mov
push
push
cmp
push
cwde
jo
mov
inc
dec
mov
addr16
pusha
push
int
cmp
je
sbb
inc
pop
in
dec
ins
idiv
aas
mov
int
sub
mov
add
push
mov
mov
retf
dec
mov
out
sbb
push
loop
hlt
mov
add
push
(bad)
outs
jl
dec
nop
xchg
xchg
inc
add
inc
add
inc
add
add
inc
add
enter
pop
cdq
inc
add
push
dec
add
mov
out
add
or
inc
add
lock
or
cmp
mov
popa
cli
push
push
dec
or
outs
cmp
(bad)
pop
mov
dec
mov
pop
mov
sbb
stos
sub
rol
or
and
push
push
adc
aam
mov
pushf
mov
add
sbb
xchg
sub
dec
add
mov
mov
pop
ret
cmp
je
cmp
jne
pop
or
mov
inc
push
sub
mov
test
mov
ret
mov
mov
mov
mov
cmovge
xor
pop
add
push
xor
je
js
jl
pop
in
push
repz
aad
in
in
inc
push
cmps
mov
or
mov
lea
inc
dec
mov
jne
cmp
jne
jge
jae
aas
add
xchg
pop
mov
mov
cmp
fwait
sahf
and
push
or
lea
mov
cmp
jne
jge
dec
inc
add
cmp
jbe
mov
cmp
shl
in
mov
push
add
jne
dec
xor
(bad)
out
add
xlat
jne
cmp
daa
sub
push
add
(bad)
inc
mov
shl
cmp
jae
lea
sub
js
inc
xor
fidiv
repnz
mov
fild
and
dec
or
sub
adc
jns
fadd
add
ja
fist
popa
mov
xor
dec
je
xor
add
dec
dec
mov
pop
jne
fstp
fisttp
sar
iret
sbb
mov
call
lea
inc
rcr
mov
enter
jb
fs
jg
mov
neg
mov
loope
pop
mov
xchg
and
nop
cmp
and
cmp
stos
sbb
cmp
(bad)
cdq
pop
inc
rcr
dec
dec
popa
add
test
jbe
add
out
dec
test
adc
test
jmp
lods
mov
shl
inc
sbb
ins
and
mov
sbb
fld
int
movs
sub
hlt
fwait
sub
dec
cmp
jbe
mov
inc
pop
dec
and
retf
push
shl
cmp
loopne
jecxz
jbe
out
and
sti
ja
mov
inc
add
mov
add
shl
call
sub
adc
mov
mov
pop
add
loop
inc
xchg
rol
add
ja
and
pop
or
mov
(bad)
jle
jno
test
lea
mov
sbb
mov
add
dec
and
dec
mov
mov
fist
jge
faddp
shr
mov
xor
icebp
sar
xchg
inc
sub
mov
mov
jmp
cmps
inc
mov
dec
and
adc
(bad)
(bad)
out
or
fistp
ror
(bad)
aas
sbb
mov
jb
mov
jmp
mov
push
mov
icebp
jae
cmp
loop
push
test
out
add
xor
jmp
sub
and
out
mov
or
add
mov
inc
mov
call
enter
or
retf
shr
cmp
jae
loop
sbb
or
xor
sub
jno
add
and
nop
add
jb
retf
ror
push
jmp
test
je
xor
shr
test
jne
add
test
in
or
mov
xor
shl
mov
cmp
dec
and
cmp
je
ficom
dec
sub
sub
cmp
sub
sbb
std
inc
push
add
cmc
jo
mov
aam
sbb
cs
pop
jecxz
and
mov
jmp
inc
xor
cmp
je
mov
inc
fidiv
in
or
mov
lods
pusha
adc
inc
bswap
push
lock
loop
scas
popa
jp
pop
jge
sub
add
cmp
aas
add
push
and
test
jne
add
add
add
cmp
sbb
std
fild
and
mov
and
add
pop
mov
jl
sub
add
rol
jle
inc
cmp
and
jle
or
and
jo
sti
dec
sub
add
jne
sbb
push
push
push
push
lea
push
fdivr
ja
add
cmp
jne
cmp
sti
ja
mov
push
call
lock
and
in
jne
mov
push
push
mov
xor
push
jnp
jo
and
sbb
add
push
sbb
jge
je
cmp
int3
je
inc
push
sub
sub
int3
popf
lea
sbb
sub
add
popa
and
cld
sti
scas
loopne
lock
pop
or
dec
and
mov
mov
xor
mov
or
dec
adc
or
les
cld
sbb
inc
or
(bad)
out
mov
jbe
mov
mov
sub
cmp
out
clc
scas
call
je
and
fist
scas
rol
mov
sub
add
mov
mov
out
or
adc
inc
cmps
adc
push
call
mov
je
push
adc
test
adc
mov
(bad)
inc
(bad)
pop
dec
sub
std
jo
push
fist
and
jne
aaa
in
inc
clc
or
mov
fbstp
sub
mov
mov
nop
lahf
pop
push
inc
adc
and
inc
inc
adc
ds
sbb
int3
pop
xchg
or
sti
sbb
inc
xchg
cmp
fs
push
or
inc
xor
sub
push
mov
jge
test
shl
adc
jne
lea
add
or
add
xchg
adc
add
inc
mov
or
sub
add
mov
(bad)
fnsave
fisttp
or
push
push
mov
shl
mov
jg
std
or
or
adc
cwde
or
js
(bad)
std
mov
mov
adc
or
mov
mov
adc
fisttp
add
into
pop
shr
add
mov
pop
pop
mov
push
push
adc
push
sub
push
in
rol
jl
xchg
lock
mov
fisub
loope
packsswb
call
xor
push
mov
test
jle
cmp
xchg
mov
lea
add
mov
lock
rcl
or
call
add
add
sbb
add
ja
jmp
mov
inc
lea
mov
lea
cmp
ja
scas
test
je
aad
adc
inc
and
gs
out
ret
xchg
outs
cmp
mov
sbb
sbb
jl
and
pop
mov
lds
mov
or
or
pop
sti
aas
cld
(bad)
or
retf
mov
mov
mov
clc
inc
mov
retf
call
push
data16
adc
fisttp
shl
or
sub
cs
jp
pop
fs
pop
dec
leave
stc
mov
pop
adc
std
std
fdivr
shl
or
mov
or
arpl
into
or
inc
mov
sub
mov
inc
sahf
sub
mov
xor
(bad)
lock
mov
mov
jecxz
push
jnp
in
lea
clc
add
outs
test
add
mov
(bad)
dec
or
mov
mov
(bad)
jmp
fcomp
push
mov
mov
or
mov
mov
xor
ffreep
or
adc
add
xchg
sub
ds
data16
and
mov
jno
inc
mov
mov
mov
test
sti
fnsave
push
cs
push
mov
clc
(bad)
fstp
sar
stc
add
cmp
jge
inc
mov
mov
mov
xor
in
mov
mov
jl
shl
dec
add
xchg
ror
pop
jl
mov
and
push
mov
fcom
sti
cmp
jl
push
scas
or
adc
popa
add
sti
lods
jnp
lea
int3
sbb
mov
push
mov
ror
mov
add
out
adc
scas
push
sbb
ret
adc
pushf
xor
ror
clc
(bad)
adc
add
jnp
mov
mov
out
mov
push
inc
mov
jmp
iret
mov
idiv
rol
and
mov
add
loopne
ins
lahf
add
xor
cmc
xchg
mov
cmps
jle
clc
add
lea
or
mov
and
mov
mov
data16
cdq
sbb
push
inc
neg
add
add
pusha
xchg
out
or
nop
movq
dec
and
push
xor
mov
mov
mov
adc
adc
adc
push
scas
pop
adc
pop
scas
sahf
mov
pop
fidiv
adc
stos
mov
mov
cld
clc
sti
je
add
(bad)
jno
lea
fimul
lea
adc
or
mov
xor
shr
clc
inc
xor
mov
mov
mov
inc
cmp
jle
stos
push
jb
je
mov
movs
out
sbb
cmp
jg
hlt
and
test
sbb
into
jl
mov
sub
and
or
mov
add
imul
xor
mov
(bad)
jle
std
js
inc
fcom
shr
mov
cs
adc
daa
add
mov
pop
xchg
clc
cmp
xor
sub
jno
sub
(bad)
push
sti
dec
jae
inc
jmp
mov
pop
jne
or
jmp
cmp
je
call
add
push
push
sub
test
jg
test
mov
je
sub
cmps
clc
push
cmps
inc
add
xor
lods
or
xchg
dec
cld
dec
sub
xor
mov
jg
lea
(bad)
(bad)
aas
iret
push
cmp
je
mov
sub
or
mov
scas
call
test
(bad)
push
out
mov
aam
test
jne
inc
cmps
sub
dec
sbb
dec
jne
mov
outs
pop
add
xchg
cdq
dec
jae
or
in
and
pop
lahf
clc
dec
push
lea
sub
push
mov
sub
add
shl
mov
dec
mov
jne
test
jl
jg
pop
xor
add
mov
push
icebp
fist
inc
push
mov
push
sti
movs
sbb
les
mov
add
dec
inc
inc
loopne
pop
sahf
cmp
mov
pop
add
cmp
dec
mov
dec
(bad)
test
sub
sbb
shr
mov
les
(bad)
jg
sbb
jne
dec
cmp
jge
lahf
ret
jg
dec
inc
adc
shl
outs
dec
inc
and
adc
push
retf
dec
into
loopne
cmp
jle
add
ret
adc
aad
xchg
or
or
mov
adc
mov
mov
inc
mov
or
pop
push
rcl
mov
jle
test
nop
and
sbb
inc
xor
ror
and
cld
add
and
xor
mov
cmp
and
scas
adc
les
mov
hlt
add
(bad)
fld
inc
jmp
sbb
or
xor
mov
cmp
popa
push
push
pop
sbb
pop
and
xchg
xchg
xchg
fld
std
(bad)
xchg
pop
lahf
dec
pushf
rol
fisub
sub
addr16
fisubr
sbb
jp
sbb
leave
mov
sbb
test
je
jo
add
mov
(bad)
cmp
mov
adc
test
and
adc
dec
adc
fwait
bound
sub
sbb
(bad)
cmp
jle
xor
mov
mov
jns
in
mov
stos
adc
mov
mov
mov
adc
mov
jmp
jmp
lods
mov
lea
mov
mov
fwait
jle
push
add
add
pop
adc
in
fadd
iret
adc
call
test
mov
push
pop
idiv
pop
aas
jmp
out
inc
cmp
jle
pop
mov
mov
add
xchg
and
and
dec
mov
mov
cmc
pop
adc
push
mov
mov
mov
test
cmps
nop
inc
cld
adc
or
ss
inc
cmp
add
mov
iret
jle
test
or
mov
test
test
test
addr16
add
ins
shl
sub
cmp
jle
mov
mov
test
movs
scas
jmp
jne
ss
jmp
addr16
xchg
dec
and
mov
mov
iret
shr
push
cdq
add
sti
in
ins
and
fwait
xor
mov
rcr
add
sbb
(bad)
cmp
jle
xor
fcmovnu
fcom
mov
fidiv
mov
mov
(bad)
popf
arpl
ins
and
sbb
lock
mov
or
or
inc
push
sbb
mov
sub
mov
mov
pop
pop
enter
pop
push
xchg
add
js
inc
pop
lea
push
lahf
std
push
push
lock
xchg
mov
dec
cmpps
dec
and
ja
hlt
and
cmp
jb
test
xchg
mov
dec
cli
(bad)
test
xchg
add
mov
dec
mov
cmp
clc
inc
jo
stos
inc
mov
mov
sahf
mov
cmps
iret
aas
aaa
idiv
les
sbb
pop
cmp
leave
pop
mov
pop
pop
mov
test
adc
add
aaa
jo
ror
add
out
adc
repz
lea
ud1
mov
sub
sub
sbb
mov
add
add
mov
(bad)
jg
fild
mov
add
dec
jne
shr
cmp
pop
setbe
mov
or
inc
sbb
mov
mov
ror
(bad)
shr
shl
dec
test
jg
shr
jne
sahf
xor
or
ins
ret
add
mov
fcom
mov
xor
mov
inc
aam
dec
inc
pop
mov
inc
not
mov
adc
add
std
dec
rol
aad
dec
or
popa
sbb
dec
je
(bad)
call
push
cmp
out
pop
jle
mov
mov
mov
inc
inc
dec
mov
jne
pop
sbb
ficom
mov
test
mov
lahf
sbb
push
push
inc
test
adc
adc
or
dec
mov
push
mov
add
xor
mov
adc
inc
or
sub
inc
jo
jl
xor
test
rcl
adc
inc
pusha
push
adc
jg
hlt
or
or
popf
movsx
imul
shl
add
mov
adc
inc
and
pusha
mov
xor
popa
mov
and
inc
inc
rol
inc
(bad)
sti
mov
jae
mov
mov
imul
pop
(bad)
(bad)
jg
lea
or
add
lock
lea
shl
add
movsx
lea
inc
lea
shl
sub
lea
shl
aas
out
sub
movsx
or
add
shl
sub
lea
mov
cli
fsubr
dec
mov
sbb
lea
sub
mov
setp
out
shl
lea
mov
shl
lea
sub
mov
std
cmp
mov
arpl
movsx
fist
mov
scas
clc
mov
imul
fstp
loopne
mov
adc
scas
(bad)
sbb
mov
add
sbb
sub
push
adc
fucomp
mov
fisttp
push
add
jle
inc
lea
out
(bad)
mov
sbb
shl
(bad)
jmp
adc
inc
sbb
pop
sub
xor
(bad)
out
shl
add
sub
shl
sub
movsx
mov
shl
sub
add
(bad)
inc
jmp
mov
imul
jg
cmps
and
sub
mov
imul
jbe
ss
add
(bad)
out
mov
add
sub
fist
push
lock
add
fcom
add
add
add
add
fist
mov
sbb
add
shl
adc
add
lea
daa
lea
push
jge
mov
lea
(bad)
ss
or
clc
or
sub
std
ja
xchg
in
or
pop
outs
clc
fisttp
lea
sar
mov
push
mov
daa
mov
dec
call
enter
xor
sub
and
icebp
fst
add
or
jns
pop
cmc
mov
(bad)
and
xor
test
cld
push
mov
ss
and
and
add
loop
inc
cmps
xor
add
adc
inc
and
out
stos
loop
ins
or
retf
or
push
imul
mov
mov
or
pop
adc
sbb
xor
sub
ror
xlat
or
jne
mov
add
sar
and
ja
mov
mov
mov
add
add
inc
add
inc
pop
loop
fsubr
stos
rcpps
(bad)
cmc
adc
shl
sub
xor
mov
das
adc
or
shl
cmp
mov
fmul
add
cmp
or
(bad)
add
inc
or
out
sbb
mov
lea
fist
adc
ret
hlt
mov
adc
cmp
ins
xor
jns
add
sbb
sbb
cmc
rol
mov
loopne
or
jecxz
sbb
add
movsx
stos
shl
jb
sbb
xchg
inc
inc
lahf
lea
(bad)
sbb
mov
rol
call
cmp
mov
sti
sbb
cmp
aaa
and
aaa
adc
test
adc
mov
pop
shl
shl
retf
lea
adc
pushf
sub
sub
sar
pop
jbe
cmc
add
sar
call
sub
mov
mov
mov
lea
sti
in
in
sbb
(bad)
or
sar
and
add
mov
mov
inc
test
sub
(bad)
xor
add
xadd
xor
mov
sub
pusha
out
sti
mov
push
sub
cs
or
(bad)
mov
out
mov
mov
mov
popa
inc
fst
out
div
(bad)
jmp
xor
test
std
(bad)
call
add
push
cmp
mov
push
cmp
mov
add
clc
push
push
push
mov
fild
sub
adc
cld
dec
pop
pop
sbb
mov
addr16
pop
aas
dec
jp
dec
sub
fisttp
sbb
jp
jl
jno
mov
dec
inc
mov
sbb
adc
enter
pusha
or
add
or
(bad)
(bad)
fist
cmp
mov
add
mov
mov
mov
mov
cmc
imul
mov
inc
mov
mov
push
lods
mov
mov
lds
lods
and
scas
test
imul
imul
movsx
mov
fbstp
xlat
lea
sub
lea
lea
lea
lea
shl
sar
sub
jle
dec
add
xor
and
ja
add
push
mov
ins
xor
push
sub
imul
ja
pop
mov
dec
in
std
imul
mov
mov
adc
ror
inc
fnstsw
mov
mov
shl
sub
sub
lea
lea
fwait
stos
sub
neg
sar
push
sub
cli
or
sub
add
lea
jg
ffreep
lea
add
mov
mov
sub
lea
push
test
pop
sub
pop
and
xadd
out
adc
jmp
dec
pop
adc
cwde
lahf
dec
pop
inc
js
lea
(bad)
xor
cwde
sbb
out
and
leave
mov
mov
jnp
je
sub
xchg
mov
lahf
fsub
xchg
scas
rcr
dec
xchg
sbb
ficomp
jne
mov
pushf
jo
dec
and
mov
pop
sub
setae
mov
rol
mov
push
adc
sbb
imul
mov
sub
outs
sub
push
adc
jmp
out
sar
dec
sbb
jmp
ja
adc
jmp
sub
mov
mov
(bad)
cmp
loopne
push
add
mov
mov
loop
add
mov
or
mov
(bad)
jmp
adc
lea
lea
lea
lea
shl
sar
sub
sub
(bad)
in
jp
sbb
sub
fcomp
enter
cmp
sub
adc
fwait
xor
jns
push
jg
xor
add
mov
xchg
add
(bad)
jbe
inc
adc
retf
add
or
jne
fimul
push
sub
js
xor
pushf
inc
ficomp
loop
xchg
add
sub
sub
loop
ja
pop
jg
lea
xor
push
lea
sub
fild
sbb
or
add
sti
add
mov
movs
sti
sar
xchg
mov
mov
xchg
scas
cmp
pop
pop
lea
sub
sub
push
jg
out
and
adc
arpl
push
sbb
mov
sub
retf
sar
cmc
out
inc
dec
add
sub
and
fwait
sar
mov
and
and
sub
cdq
add
add
cmp
sub
int
fcom
jne
ret
add
or
sub
pop
xor
mov
ret
pushf
in
or
je
xor
mov
fsub
jbe
mov
mov
clc
xlat
scas
fcom
lea
out
jnp
movsx
(bad)
jg
mov
fmul
fst
fst
fst
fst
fst
push
fst
inc
pop
xor
jne
inc
movsx
loop
movsx
call
adc
and
inc
fisubr
inc
es
(bad)
fld
fst
jp
sub
adc
leave
fldcw
and
std
das
pmaxub
movsx
and
outs
mov
rcr
wrmsr
sbb
leave
fsub
fxch
fstp
fld
mov
inc
and
pop
sub
or
sbb
ins
lods
jmp
das
inc
and
sub
and
jnp
lahf
jnp
fadd
adc
and
pop
push
outs
fsubr
adc
jo
jp
ud2
and
jne
inc
or
fs
pop
pop
aaa
xor
sbb
mov
adc
out
fidiv
ret
fmul
and
ror
jmp
frstor
xor
fadd
fs
push
adc
or
sti
daa
loope
adc
arpl
jne
(bad)
fstp
sbb
xor
jp
sub
jmp
fisub
or
sub
ret
or
repz
inc
sub
cwde
enter
xor
fstp
pop
xchg
add
mov
rol
retf
icebp
scas
or
jne
and
add
jmp
fadd
fld
fsub
jg
add
lds
and
inc
adc
push
fld
fsub
loope
xchg
sub
xor
mov
mov
pop
and
fld
fadd
add
cld
ret
sti
mov
fsub
sub
inc
pop
and
rcl
imul
dec
sbb
sub
adc
loope
ja
adc
mov
xor
retf
sbb
xor
jno
add
push
add
add
clc
add
pop
in
xchg
sbb
sbb
inc
pop
sub
jns
in
daa
jae
xor
sbb
ret
jbe
sti
jmp
cmp
popa
ffreep
mov
pop
add
sbb
fadd
mov
sbb
sbb
in
cmp
xor
stc
mov
pop
mov
adc
jne
cmp
add
loopne
inc
sub
mov
mov
push
out
stos
jb
gs
jns
cld
inc
adc
iret
add
sub
mov
pusha
cli
shl
adc
cli
add
test
add
mov
push
pop
sbb
rol
pop
sbb
dec
mov
push
mov
mov
or
fisub
push
cld
(bad)
(bad)
push
or
or
test
jne
movsx
imul
shl
mov
mov
mov
mov
jmp
inc
shl
ja
jb
or
(bad)
fisubr
clc
sbb
imul
js
push
sub
mov
push
mov
leave
mov
shl
sub
sub
shl
lea
add
dec
mov
shl
sub
lea
sub
(bad)
mov
lock
mov
dec
out
retf
retf
imul
pop
ret
movsx
(bad)
(bad)
(bad)
mov
movsx
shl
mov
sub
imul
imul
sbb
dec
loopne
aad
cmc
add
cmps
add
add
rol
adc
sub
lea
loopne
pop
sbb
in
stos
out
jmp
cmc
lea
lea
lea
adc
jo
jle
push
adc
add
aad
ror
sar
adc
mov
lea
int
clc
or
inc
loopne
mov
call
sbb
js
ja
add
sar
shl
aas
adc
call
add
add
add
aaa
aad
dec
cmp
test
rcr
and
(bad)
es
sub
push
cmp
jb
xor
or
rcr
mov
dec
adc
cld
fild
mov
pop
sbb
xor
mov
xchg
aas
and
push
add
repnz
shr
(bad)
aaa
test
or
or
mov
or
pop
sub
bnd
mov
aad
rcr
adc
dec
mov
mov
sbb
mov
(bad)
adc
rol
sub
shl
test
movntps
sub
shl
lea
add
push
sub
fisttp
inc
and
movsx
inc
add
out
sub
xchg
rol
mov
add
or
shr
fdivr
frstor
pop
dec
mov
cmps
mov
add
sub
clc
stos
ficom
pop
test
sub
add
stc
adc
add
sar
mov
in
cmc
(bad)
jg
mov
mov
lea
push
add
clc
adc
in
movs
sar
dec
pop
rcl
cmovg
arpl
mov
and
arpl
pop
sbb
lock
jne
jmp
xchg
in
mov
add
cmp
les
(bad)
(bad)
mov
pop
lea
sub
cmp
cmpps
icebp
inc
xor
push
xchg
and
mov
mov
inc
loopne
cmc
or
or
jmp
lock
or
div
imul
shl
mov
xor
mov
fidivr
scas
repnz
(bad)
shr
xchg
pop
add
shl
out
lea
rol
mov
mov
mov
cli
pop
lea
lea
mov
add
repnz
jg
shl
sub
mov
fwait
aad
sar
imul
in
push
loopne
cdq
sub
lea
shl
and
mov
lea
dec
jg
mov
sar
mov
pop
add
push
or
pop
jg
cmp
pop
and
push
mov
add
es
add
jno
push
cld
(bad)
or
or
add
or
jne
mov
dec
(bad)
mov
mov
jmp
movsx
mov
int3
adc
call
repnz
sbb
movsx
shl
or
jp
or
fnstsw
sbb
sbb
fisub
add
mov
or
sub
mov
or
sub
sar
add
addr16
sar
push
cmp
pop
mov
adc
mov
pop
sbb
(bad)
push
and
(bad)
pop
jne
icebp
and
(bad)
ja
or
dec
push
data16
and
mov
or
sbb
and
icebp
loop
mov
add
mov
fimul
mov
bound
aam
add
pop
xor
jno
mov
cmp
mov
sbb
inc
add
das
je
mov
jae
sub
and
pop
mov
jmp
mov
sub
xor
ret
imul
je
and
inc
aam
aad
dec
outs
idiv
mov
icebp
mov
shl
add
or
inc
push
jb
mov
jg
add
xor
retf
mov
lea
test
je
sahf
mov
add
jmp
adc
aam
push
test
jne
popf
int3
pop
pop
nop
add
add
retf
cmp
(bad)
aaa
jae
aam
jecxz
xor
mov
pop
inc
dec
mov
mov
shr
cmp
mov
jo
xchg
mov
frstor
pop
pusha
cdq
xor
cmp
cwde
loopne
ret
jae
icebp
pop
cmps
into
(bad)
outs
clc
adc
shl
or
inc
cmp
jb
mov
dec
ret
sti
mov
push
sbb
cli
add
mov
mov
enter
ret
sub
pop
sbb
mov
(bad)
call
sub
cmp
jb
mov
sub
sub
sar
mov
inc
mov
push
sub
pop
sub
sub
aaa
in
add
mov
mov
sub
(bad)
idiv
fbstp
sub
out
sub
inc
dec
jne
mov
lds
out
push
sub
cmp
or
push
adc
and
mov
popf
adc
sbb
sbb
mov
pushf
sbb
pop
aam
cwde
adc
cmp
jb
push
jo
jne
mov
hlt
dec
out
add
icebp
mov
push
gs
mov
aad
sbb
cmp
mov
sub
mov
lea
ret
mov
aad
pop
aam
pop
mov
add
mov
mov
push
mov
inc
xor
sar
mov
test
je
dec
sbb
xchg
push
mov
jb
sti
pop
add
ret
push
ret
adc
pop
fcos
pop
adc
inc
stos
cli
aaa
xor
push
push
mov
or
fdiv
shl
push
lock
mov
lea
push
push
mov
mov
retf
mov
mov
mov
and
add
add
dec
add
ds
sub
enter
and
les
mov
mov
cmp
jl
cmp
jg
or
out
mov
add
dec
or
pop
ja
(bad)
jmp
cmp
or
add
xor
hlt
inc
cmp
cmc
and
rol
or
sbb
fwait
clc
and
jmp
sub
fcom
add
push
outs
stos
mov
push
pop
test
inc
add
mov
jne
cmp
jne
lea
adc
jmp
cmp
test
out
push
cmp
cmp
jne
ja
in
cld
add
call
cmp
sbb
neg
test
je
jmp
jl
or
test
jle
cmp
je
mov
push
fld
add
fs
out
jg
mov
cmp
les
push
pop
add
pop
add
add
add
ror
or
ret
push
or
mov
or
push
sbb
outs
nop
mov
sti
push
call
push
call
and
rol
xchg
cmp
inc
sbb
mov
mov
pop
ror
xor
dec
add
pusha
rcr
or
aaa
pusha
adc
fs
cld
scas
or
pop
je
mov
jmp
add
and
inc
or
ja
je
or
cs
cwde
xor
(bad)
cdq
jecxz
add
xor
push
mov
retf
aaa
cld
add
lock
sbb
mov
push
push
jmp
mov
int
push
jmp
fild
sbb
add
mov
test
push
cmp
cmp
dec
outs
(bad)
or
fisttp
or
fldenv
in
outs
mov
fwait
push
add
rcr
and
jmp
punpckhbw
inc
dec
pop
or
dec
adc
dec
add
loop
mov
lahf
icebp
cmp
fwait
clc
(bad)
cld
div
je
push
call
dec
mov
inc
aas
push
push
pop
mov
push
xor
mov
test
aad
inc
aas
sub
pop
(bad)
int3
adc
lods
fs
out
icebp
dec
cli
shr
sub
test
cld
add
not
inc
add
add
sub
push
idiv
je
cs
popa
jo
je
daa
or
aam
push
push
ins
por
add
js
or
lock
je
sbb
xchg
adc
retf
int
ja
mov
push
add
fisubr
adc
popa
sub
xchg
ins
test
jne
jmp
in
loope
inc
inc
pop
or
pop
mov
jge
add
sub
push
call
out
call
mov
mov
stos
(bad)
call
push
adc
call
ret
out
fdivrp
jg
adc
add
mov
mov
jae
adc
adc
mov
mov
adc
jg
pop
inc
js
adc
jp
or
test
jne
or
mov
pop
adc
aas
mov
out
fstp
test
dec
mov
xchg
cld
mov
(bad)
adc
lods
inc
fldcw
repnz
jne
mov
dec
add
in
pop
(bad)
lahf
adc
pop
add
mov
(bad)
(bad)
aas
fist
cmp
jbe
mov
test
je
mov
mov
push
mov
push
mov
shr
mov
and
mov
mov
cli
fist
adc
repnz
mov
mov
cli
mov
sub
mov
mov
adc
sub
pop
mov
jmp
dec
adc
push
adc
or
inc
enter
dec
mov
push
dec
push
ins
mov
mov
pop
add
movs
sub
lds
jae
inc
xchg
and
adc
(bad)
stos
xchg
add
mov
call
popa
jg
mov
jg
stc
and
enter
outs
dec
add
jg
adc
bswap
dec
mov
mov
mov
ror
or
(bad)
jg
lods
mov
adc
jg
out
test
mov
xor
lds
add
das
(bad)
jmp
add
mov
mov
mov
mov
mov
add
mov
mov
add
cmp
mov
jbe
sub
xor
ret
in
jmp
(bad)
pop
nop
mov
lea
mov
mov
mov
sbb
jmp
add
and
or
sub
push
xor
add
(bad)
(bad)
cmp
jne
cmp
jne
cmp
inc
add
inc
or
add
inc
mov
inc
nop
inc
push
sti
inc
cmp
jne
or
xor
cmp
sub
push
out
(bad)
call
jb
mov
lea
sub
add
loopne
aad
neg
mov
cmp
mov
jge
mov
cld
ja
adc
inc
and
fist
mov
mov
and
fiadd
pusha
sbb
lock
mov
or
test
es
pushf
and
call
push
jne
lds
cli
adc
nop
cmp
fimul
je
adc
inc
(bad)
xchg
mov
out
movs
mov
jno
mov
outs
jmp
add
xchg
push
adc
sub
out
clc
icebp
adc
and
imul
xchg
adc
adc
add
sahf
add
sbb
add
lods
sub
sbb
rcr
inc
inc
mov
push
out
inc
and
add
push
dec
sub
in
sub
or
jg
add
cmp
call
call
scas
test
lods
mov
push
add
mov
push
pop
test
les
mov
scas
test
cmp
scas
or
add
(bad)
pop
retf
loopne
repz
cmp
adc
nop
jle
cmc
push
mov
push
lea
cmp
mov
inc
ror
jg
push
mov
mov
(bad)
mov
aas
add
push
cmp
jb
jne
mov
stos
ja
xchg
cmp
ja
dec
xor
sub
mov
adc
adc
xor
shl
addr16
fwait
retf
shl
mov
loopne
dec
jle
mov
pop
pop
mov
pop
clc
outs
(bad)
(bad)
es
je
fst
xor
cmp
xor
xlat
mov
sbb
xor
push
mov
aam
aaa
push
jne
inc
and
inc
clc
add
retf
dec
jne
mov
jb
pop
adc
test
mov
jl
jl
push
mov
sbb
cmp
fwait
arpl
inc
cmp
jge
cmp
je
cmp
jge
add
imul
xor
inc
and
je
inc
idiv
xor
dec
jg
or
fnstenv
shl
push
adc
(bad)
or
jle
sbb
ror
xchg
jmp
aas
cmc
mov
sahf
sbb
lds
sbb
test
adc
outs
call
fcmovb
cmp
inc
scas
out
jle
nop
push
(bad)
inc
push
adc
push
xor
mov
int3
adc
fist
xor
add
fist
sbb
sbb
and
add
inc
mov
sub
sbb
mov
shr
and
jmp
fild
mov
cmp
ja
jge
cmp
loop
jmp
test
add
add
(bad)
jge
push
aaa
mov
sub
pop
sub
cmp
jle
xchg
or
inc
sbb
mov
push
dec
test
xor
jne
sbb
in
je
shl
ins
and
je
lea
rcr
mov
movs
pop
xchg
sti
inc
and
mov
ret
cmp
jle
add
mov
mov
pop
mov
push
ds
fs
mov
mov
(bad)
dec
push
sub
repnz
test
out
add
adc
cmp
jg
adc
adc
push
or
xor
and
push
add
xor
out
test
inc
test
mov
jle
add
xor
add
or
ret
jp
mov
pop
icebp
cmp
rol
cmp
adc
add
jmp
adc
test
pop
ror
xlat
out
aaa
xchg
test
cli
adc
jmp
les
add
jecxz
data16
push
leave
mov
add
or
daa
iret
or
dec
enter
add
cmp
push
jno
pusha
add
jo
clc
pop
rol
add
sbb
popf
cmp
iret
add
push
push
mov
cld
aas
or
mov
mov
jo
dec
inc
pop
mov
xor
loop
push
shl
out
pop
or
out
and
push
or
and
adc
sub
js
sub
shr
mov
in
mov
test
je
or
and
push
add
out
addr16
loopne
dec
add
push
mov
(bad)
inc
mov
push
call
mov
mov
push
call
add
arpl
and
add
fadd
add
(bad)
out
out
jo
add
jmp
je
or
adc
mov
out
mov
add
and
and
and
test
and
in
push
cmp
daa
push
push
push
ja
or
add
dec
dec
adc
cmp
ja
or
cmp
push
movzx
mov
push
cdq
pop
idiv
test
jne
mov
mov
out
data16
cmp
mov
pop
inc
out
cld
jne
aaa
xchg
(bad)
jmp
and
xor
jg
add
adc
add
mov
mov
call
dec
add
mov
adc
sub
mov
add
cmp
jg
xchg
inc
adc
addps
cmp
push
cmp
movzx
mov
mov
push
shr
idiv
out
add
mov
imul
pop
idiv
sub
add
add
xor
ja
jg
add
cmp
je
dec
movzx
jbe
imul
add
sub
dec
mov
mov
fild
test
fmul
jge
or
fild
mov
push
fadd
fstp
pop
fstp
(bad)
inc
leave
ret
cmp
in
adc
inc
or
sbb
fnstsw
sahf
mov
push
mov
aaa
arpl
sub
clc
push
sub
or
add
fld
or
fld
pop
cli
xor
push
mov
fstp
add
popf
sti
sub
fst
adc
fsubr
pop
pop
fmul
(bad)
fisttp
cli
xor
inc
or
inc
jmp
mov
cdq
pop
mov
idiv
mov
mov
inc
mov
(bad)
(bad)
call
cdq
idiv
mov
mov
cdq
idiv
mov
mov
mov
lea
mov
sbb
mov
mov
je
mov
mov
lea
(bad)
xlat
add
cld
jne
and
ja
jg
and
idiv
mov
push
dec
mov
mov
(bad)
(bad)
call
lea
mov
mov
push
lea
xor
imul
add
cmp
pop
lea
mov
adc
call
je
cmp
jne
mov
std
cmp
jmp
mov
jb
mov
mov
cdq
mov
mov
shl
je
sbb
jmp
cmp
jl
dec
inc
lea
inc
mov
cmp
inc
adc
add
xor
out
mov
pop
push
mov
cmp
jne
js
mov
loope
jae
jmp
mov
mov
cdq
pop
pop
fisttp
pop
ret
out
mov
add
mov
push
pop
(bad)
fnstsw
push
push
mov
mov
inc
cmp
jbe
call
or
mov
out
add
and
or
push
and
or
fld
fcom
out
pop
jae
push
push
mov
mov
pop
pop
fsubrp
dec
dec
push
cmp
sbb
pop
mov
jg
aam
(bad)
aam
jmp
mov
leave
ret
idiv
jmp
sub
push
xor
cmp
jne
fld
lea
push
dec
add
jg
test
je
sub
dec
lock
mov
or
mov
mov
dec
shl
mov
or
call
scas
jmp
and
pop
or
fadd
or
mov
(bad)
jg
imul
push
add
shl
sub
mov
add
jne
xor
les
ins
scas
pop
jae
add
fcomp
jns
add
cdq
add
mov
leave
ret
aas
leave
ret
xor
and
pop
in
call
in
xlat
xchg
push
fadd
add
sbb
pusha
or
enter
and
mov
mov
repz
inc
mov
push
push
mov
add
or
add
inc
adc
inc
add
push
pop
add
push
sar
pop
mov
and
add
sbb
icebp
sbb
xchg
jmp
pop
clc
fld
dec
add
mov
fcomp
pop
jbe
ret
add
jae
(bad)
mov
jne
push
push
push
push
push
rcr
xor
std
out
mov
or
data16
and
idiv
adc
pop
mov
ror
loope
lds
pop
push
sbb
idiv
mov
add
mov
or
dec
es
jnp
dec
pusha
jge
test
dec
daa
dec
js
add
ret
mov
add
call
(bad)
jmp
add
adc
xchg
lock
repz
add
jne
popf
sti
or
mov
sub
pop
xchg
push
daa
mov
pushf
cmc
inc
add
mov
out
add
dec
mov
mov
mov
pop
ret
mov
mov
js
arpl
mov
pop
or
adc
movs
cs
ja
jo
and
dec
dec
inc
xchg
dec
or
clc
mov
call
and
add
pop
add
(bad)
jg
xor
cmp
push
push
je
xor
cmp
(bad)
(bad)
pop
int3
out
cli
push
call
cmp
je
mov
in
or
push
push
call
cmp
mov
push
jg
std
pushf
adc
adc
iret
and
sub
hlt
or
xor
sbb
inc
xor
idiv
std
(bad)
cwde
jmp
mov
mov
daa
fsubrp
fmul
mov
ret
fdivp
mov
std
jecxz
cmp
ss
adc
adc
jne
or
inc
or
sbb
cmc
sbb
inc
or
cmp
xlat
cmp
jge
push
push
dec
jl
jmp
mov
pop
inc
inc
rol
jg
sbb
pop
push
mov
adc
or
sbb
je
sub
cmp
sub
mov
lea
push
adc
inc
lock
sahf
xor
sbb
(bad)
adc
mov
test
cmp
mov
jmp
dec
xchg
jne
mov
mov
idiv
fidiv
cmp
jb
inc
push
push
push
push
call
std
aas
add
jae
mov
xor
call
push
(bad)
(bad)
(bad)
dec
lea
lea
movs
movs
movs
cmp
push
movs
pop
mov
mov
pop
jb
add
fcmovnbe
jmp
push
push
call
nop
stos
stos
(bad)
inc
test
jne
push
call
mov
jne
push
pop
inc
pop
je
(bad)
dec
(bad)
adc
mov
mov
push
push
pop
pop
inc
add
cdq
mov
fdiv
inc
push
addr16
xchg
pop
data16
add
add
std
test
add
sub
mov
mov
mov
or
cli
push
jl
pusha
xor
mov
or
stc
push
sbb
xor
add
xor
adc
neg
sub
push
push
xchg
xchg
cmp
push
test
or
xchg
lock
pop
or
call
test
or
mov
mov
lea
push
call
or
and
(bad)
adc
aaa
adc
imul
(bad)
loopne
lock
jle
push
call
push
repnz
and
retf
hlt
or
adc
pusha
in
cmp
ror
or
lock
lea
mov
add
push
(bad)
call
jmp
lea
push
push
bnd
dec
add
mov
imul
test
lea
add
push
inc
mov
mov
mov
sub
dec
jne
mov
push
mov
or
lds
ret
loope
jmp
pop
pop
leave
ret
mov
add
mov
jg
jno
and
mov
test
je
jmp
or
mov
dec
pop
inc
add
shl
cli
jg
fsubr
jne
mov
mov
fsubr
pusha
and
dec
and
push
in
jmp
or
lea
or
or
xchg
dec
add
xor
scas
mov
pop
add
js
inc
test
pop
push
out
mov
mov
add
loope
fnstsw
or
adc
push
popf
mov
loope
pop
or
push
mov
inc
pop
adc
popf
mov
sbb
xor
mov
adc
aas
sahf
call
mov
mov
jbe
sbb
add
data16
movs
(bad)
push
pop
mov
cmp
mov
test
je
movzx
jmp
push
mov
pushf
push
and
jle
aad
mov
or
dec
mov
dec
cwde
jge
inc
cmp
gs
cs
cmp
jb
jne
push
inc
cli
out
sub
fdiv
inc
xor
add
adc
das
and
cmp
sbb
xor
cmc
push
push
inc
(bad)
mov
fnclex
ret
ret
mov
mov
pop
push
inc
add
add
dec
add
push
mov
stos
mov
outs
push
rol
fxch
lods
fst
jg
test
into
add
ret
lea
adc
(bad)
inc
dec
mov
enter
cmp
cmp
je
dec
or
cmp
(bad)
jge
mov
je
add
or
and
jne
pop
fyl2x
and
cmp
jne
fchs
cmp
mov
pop
add
lea
jmp
push
push
dec
push
sbb
inc
or
std
ja
jp
lahf
dec
mov
push
or
inc
jmp
faddp
sar
adc
or
mov
(bad)
es
mov
leave
jmp
xor
str
inc
and
jne
cs
shl
inc
jnp
jg
push
or
ret
call
push
jne
test
jne
sub
mov
push
es
outs
clc
std
pop
and
fsave
dec
clc
and
frstor
fld
add
test
bsr
(bad)
fadd
add
push
mov
or
test
(bad)
(bad)
(bad)
fst
sbb
push
je
mov
and
shr
test
jae
push
fld
je
mov
dec
dec
fldz
test
je
fchs
cmp
xchg
sbb
fstp
pop
adc
fld1
adc
out
push
neg
adc
fchs
test
jne
jae
fstp
fld
rcr
fcomp
mov
fwait
sti
ins
clc
cmps
push
jne
fmul
adc
lock
add
rol
fmul
push
cmp
mov
pop
mov
cmp
fcom
xor
mov
aaa
push
inc
and
cmp
mov
fld
mov
sahf
pop
fld
outs
jp
aam
pop
cmp
add
cmp
jne
dec
mov
push
frstor
out
push
push
pop
out
xchg
sbb
push
push
fnstenv
xor
jnp
div
add
jmp
daa
fadd
push
cs
clc
fld
pandn
not
sub
push
push
push
jae
fdivr
repz
jmp
adc
(bad)
fcmovnb
jbe
or
or
sbb
arpl
in
pushf
dec
sbb
sbb
gs
adc
dec
fadd
cdq
dec
mov
or
jns
mov
cmp
leave
cmp
add
clc
jmp
mov
sahf
jp
fnsave
and
xlat
push
push
push
stos
test
adc
es
dec
idiv
(bad)
dec
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
test
(bad)
not
mov
pop
pop
pop
fs
add
xchg
ret
pop
mov
push
xchg
or
push
sbb
or
and
pop
jnp
jnp
in
jmp
in
pop
pop
jmp
push
pop
(bad)
(bad)
loopne
sbb
push
and
jmp
fld
pop
inc
push
sub
pop
or
dec
push
aas
fwait
sbb
clc
and
ret
and
dec
and
add
(bad)
fist
pop
add
fstcw
fwait
mov
or
mov
fldcw
add
jge
fldcw
mov
mov
mul
and
inc
or
(bad)
jg
mov
adc
and
add
shl
shl
shl
je
add
je
jg
cld
adc
or
je
pop
ret
push
jmp
push
jmp
mov
(bad)
pop
ret
and
jg
test
mov
jne
test
jge
add
mov
and
out
mov
pop
ret
push
inc
hlt
mov
jne
push
sbb
arpl
add
pop
ret
or
add
and
push
inc
(bad)
dec
test
adc
dec
adc
leave
std
inc
add
add
mov
or
and
push
ja
ds
pusha
das
or
mov
mov
push
add
mov
pop
ret
cmp
push
push
aam
call
je
test
jne
cmp
imul
mov
(bad)
push
(bad)
sub
pop
mov
mov
mov
push
cld
(bad)
aas
ret
sub
cmp
pop
jbe
mov
cmp
jne
push
(bad)
out
fmul
push
push
imul
jmp
mov
lea
mov
inc
mov
adc
mov
add
jae
mov
fwait
xor
js
cdq
adc
(bad)
cld
mov
jmp
xor
ret
pop
pop
xchg
jmp
push
call
mov
inc
jmp
inc
add
sar
(bad)
out
jbe
lods
in
aad
bound
mov
mov
or
sti
iret
sub
add
pop
dec
mov
mov
push
xor
push
push
scas
inc
or
add
mov
or
sbb
pop
mov
adc
and
ds
pop
in
mov
lock
mov
dec
clc
fisub
and
jmp
push
push
(bad)
fisttp
fmul
sar
push
outs
cld
push
out
jo
push
shl
pop
loopne
pop
cmp
rcr
xor
and
(bad)
or
jmp
mov
mov
mov
mov
in
and
mov
add
cld
lock
mov
cmp
aas
loope
ins
clc
adc
fcomp
mov
inc
push
or
or
aam
inc
rcl
push
push
inc
sar
push
lock
ror
add
pop
mov
push
not
inc
fcom
inc
int3
xor
or
fisttp
xchg
and
sbb
xchg
inc
scas
add
pop
jmp
mov
sub
adc
or
adc
js
add
jmp
mov
sbb
imul
arpl
dec
je
inc
ja
jnp
jge
add
ja
mov
jo
jle
mov
mov
cld
jl
cmp
pop
ja
sti
(bad)
push
cmp
add
cmp
lea
jge
cmp
jle
push
or
cld
jg
(bad)
cmp
jge
mov
mov
inc
mov
pop
push
sbb
ja
cmp
pusha
retf
cld
push
ja
inc
pop
pop
inc
inc
xor
push
sbb
pushf
inc
aad
retf
cwde
cmp
and
test
dec
push
je
gs
sub
ret
outs
call
push
push
push
xor
out
or
fwait
xor
or
mov
cmp
je
lea
mov
mov
mov
cmp
mov
adc
mov
add
mov
sub
or
ret
pop
xor
fs
dec
push
or
push
or
push
or
cmp
mov
fwait
ret
push
push
mov
or
pop
push
lock
arpl
mov
pop
pop
cld
dec
push
fistp
push
mov
cmp
jle
movzx
xor
push
add
js
(bad)
push
xchg
dec
add
or
add
rcr
inc
mov
push
lea
add
push
ja
fld
add
pop
leave
sar
pop
(bad)
dec
pop
inc
jmp
movzx
inc
cmp
mov
je
popa
mov
add
xor
inc
or
add
mov
or
add
lea
lea
(bad)
fild
xor
iret
cmp
mov
jne
idiv
push
mov
pop
xchg
jle
or
mov
xchg
sbb
popf
mov
adc
pop
enter
sub
cdq
mov
push
fdiv
scas
and
mov
nop
add
sbb
enter
out
mov
cmp
push
mov
rol
neg
jmp
mov
loopne
or
or
pushf
push
push
call
adc
lds
bound
ja
ja
adc
or
or
add
loope
cld
pop
cld
ret
push
mul
daa
inc
and
mul
loopne
out
aas
nop
or
loope
rcr
sti
cmp
(bad)
fs
jne
movs
stos
scas
js
pop
pop
jb
jnp
jmp
pusha
lahf
(bad)
dec
movzx
inc
mov
test
je
mov
test
cmp
add
or
mov
xchg
ror
movzx
inc
adc
inc
shl
sub
jmp
enter
cmp
(bad)
fnstenv
into
add
mov
pop
or
sbb
mov
inc
and
dec
jmp
adc
inc
dec
pusha
vpcomub
sub
jmp
mov
mov
aas
xchg
jge
lea
sbb
movzx
inc
inc
test
push
cmp
jne
xor
jmp
push
mov
aaa
cld
lea
push
push
push
push
push
push
pusha
or
pusha
pop
or
hlt
out
cmp
cld
jmp
pop
jne
push
mov
cld
adc
std
pop
(bad)
(bad)
mov
pusha
jmp
movzx
mov
sbb
adc
and
mov
push
movzx
inc
inc
test
je
cmp
enter
imul
popa
hlt
jne
pusha
fucom
cld
jmp
jne
push
jne
out
add
inc
jg
or
pop
movzx
mov
adc
push
cmp
jne
test
je
and
jl
dec
or
mov
rcr
test
cmp
xchg
call
sbb
(bad)
jmp
sar
mov
neg
neg
sbb
outs
pop
adc
adc
push
nop
sbb
pusha
leave
popa
sbb
push
stos
sbb
push
dec
and
xabort
adc
div
mov
pop
shr
inc
mov
sbb
adc
jmp
(bad)
fwait
call
fmul
(bad)
pop
lock
lahf
inc
and
push
sbb
out
shl
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
test
fadd
hlt
and
push
push
scas
adc
mov
mov
add
cmp
mov
add
sbb
pop
int3
fs
lods
inc
and
mov
xor
dec
jns
jmp
inc
add
push
mov
mov
mov
enter
sbb
pop
adc
adc
or
or
inc
and
sbb
aaa
frstor
pop
or
dec
jns
pop
lods
and
fbld
adc
rol
(bad)
cmp
jbe
cmp
push
mov
not
(bad)
(bad)
jg
jne
shr
and
cmp
jb
rep
jmp
and
(bad)
std
jmp
loopne
add
pop
pop
push
std
jmp
fcomp
nop
fbstp
idiv
and
pop
pop
lock
inc
add
ror
(bad)
pop
mov
mov
mov
push
mov
add
add
int3
ds
in
dec
lea
sub
dec
(bad)
mov
and
popf
and
inc
pushf
mov
aas
call
add
cmps
imul
pop
call
call
dec
shl
cld
cld
adc
push
les
add
or
in
mov
push
in
add
pop
sbb
pop
sub
mov
pop
leave
ret
nop
in
push
or
xor
fcom
mov
cwde
ror
xor
lea
or
jg
out
jbe
or
ja
sbb
neg
adc
mov
cmp
push
js
cwde
add
(bad)
fwait
ror
inc
add
dec
mov
into
or
xchg
and
nop
out
ja
sub
sub
sub
add
sub
sub
pop
push
pop
ror
add
pop
pop
pop
adc
sbb
and
push
shl
outs
xchg
jmp
sbb
mov
in
mov
pop
jle
scas
fistp
or
or
add
into
pop
div
adc
dec
js
mov
or
mov
pushf
fwait
mov
in
lds
(bad)
adc
push
add
xor
cmp
jne
cmp
retf
(bad)
jg
jl
cmp
jae
mov
xor
dec
or
push
jb
push
sar
jne
push
je
mov
mov
mov
inc
neg
adc
add
jmp
unpckhps
cmc
inc
aam
jnp
sub
adc
mov
inc
cs
(bad)
(bad)
mov
add
push
jmp
add
mov
inc
test
ja
jb
test
ja
and
dec
aaa
hlt
(bad)
fild
push
mov
mov
mov
dec
inc
cmp
mov
jb
neg
adc
(bad)
jmp
inc
jae
cmp
jae
shrd
shr
ret
mov
inc
cmp
and
shr
pop
xor
fldcw
mov
rcl
add
test
mov
or
pop
push
mov
jb
idiv
or
mov
adc
inc
cmp
test
push
cmp
xchg
sbb
out
sub
adc
sub
mov
test
mov
mov
clc
sbb
out
adc
je
test
sbb
and
add
rol
sbb
dec
jnp
or
call
cmp
jne
sahf
mov
mov
outs
jne
mov
jmp
jae
adc
jb
cmp
je
mov
arpl
in
or
and
pushf
and
xor
call
jo
mov
push
test
je
push
push
shl
test
jmp
dec
jne
jmp
mov
inc
mov
inc
dec
je
test
je
(bad)
div
mov
sbb
je
and
pop
adc
sbb
adc
ret
cmp
je
xor
jne
cmp
jne
pop
pop
(bad)
(bad)
push
push
or
mov
add
dec
je
mov
mov
add
xor
xor
mov
mov
add
add
je
test
je
outs
and
je
pop
je
call
pop
jmp
or
add
push
or
into
mov
push
mov
or
ror
jne
jb
sbb
mov
fsubr
inc
sbb
add
adc
mov
dec
sub
mov
gs
out
xchg
push
jl
pusha
pop
das
(bad)
stos
loope
fnstsw
mov
jnp
push
jl
fnstcw
outs
and
cmp
jmp
xor
adc
add
or
stos
stos
(bad)
stos
lea
mov
and
mov
les
inc
call
dec
mov
push
inc
mov
push
xor
(bad)
mov
jne
in
mov
in
sub
dec
xor
mov
inc
aaa
inc
sub
add
jl
ret
push
sub
lock
test
enter
loopne
and
call
push
cmp
push
adc
jmp
xor
adc
xor
sbb
jne
cmp
out
mov
xchg
js
repz
ins
jge
cmp
add
jo
push
or
lock
push
pop
mov
xchg
xor
push
dec
add
sub
mov
aas
jb
aas
mov
mov
out
sub
xor
jae
xor
jne
dec
push
loope
add
and
push
push
(bad)
cmp
xor
xchg
loope
loope
unpckhps
mov
and
push
cmp
push
retf
push
push
push
or
push
(bad)
sub
mov
jbe
jmp
mov
adc
rcr
mov
push
cmp
jge
mov
pusha
jmp
sbb
pop
mov
mov
add
mov
(bad)
dec
push
call
pop
xor
mov
mov
add
std
fist
cmp
jl
xor
mov
rol
(bad)
dec
pop
mov
ror
je
test
jne
or
adc
(bad)
inc
cli
xor
xor
inc
cmp
movs
dec
add
je
mov
ret
std
(bad)
cmp
jb
cmp
sub
sar
add
push
popf
std
pop
stos
scas
ret
jl
jl
cmp
and
fdivr
push
or
push
dec
fs
call
push
push
push
cmp
aas
les
outs
das
push
push
cmps
idiv
out
fisttp
or
sub
add
cmp
jae
push
sbb
mov
mov
shl
imul
sub
sub
in
inc
stc
add
adc
add
mov
pop
fdivr
les
shr
ds
neg
dec
ret
xor
out
push
aam
or
int3
inc
(bad)
dec
sbb
and
or
dec
ret
imul
hlt
clc
popa
jl
mov
pop
ret
push
mov
or
cmp
mov
or
call
push
push
in
dec
jb
pushf
adc
test
pop
mov
je
sbb
(bad)
into
std
rcr
sub
(bad)
in
push
sub
outs
add
sbb
jl
xchg
je
inc
inc
mov
adc
sbb
jge
sub
jecxz
push
sbb
add
out
cmp
mov
clc
or
mov
test
(bad)
(bad)
inc
or
mov
mov
push
jmp
and
mov
ja
outs
aam
dec
cld
push
push
push
push
test
(bad)
(bad)
xor
jg
ja
test
inc
cld
jmp
add
cld
shl
adc
loop
or
icebp
loope
loopne
out
mov
mov
mov
imul
mov
sbb
pop
inc
cmp
je
cdq
fiadd
or
pop
pop
pop
aam
(bad)
mov
jmp
jle
mov
test
je
mov
std
(bad)
fstp
loope
loopne
les
mov
add
cmp
je
jmp
xor
mov
mov
sbb
ror
mov
add
push
(bad)
and
out
push
pop
jmp
push
jns
(bad)
jmp
sub
mov
push
sub
or
clc
pop
cmp
je
cmp
ja
cmp
mov
jecxz
(bad)
push
(bad)
sub
mov
cmp
je
cmp
jne
inc
cmp
jne
cmp
je
loop
adc
mov
jmp
pusha
leave
pop
adc
xchg
lods
int3
int3
lea
pop
ret
lea
lea
xor
mov
sti
jmp
jle
push
and
test
or
fnstenv
leave
je
adc
inc
fcom
jecxz
push
or
mov
mov
aas
ror
xor
jg
xor
add
and
push
je
add
ret
outs
loopne
and
pop
pop
pop
dec
mov
cmp
je
loopne
lock
je
dec
out
call
dec
idiv
push
aam
xchg
pop
pop
mov
(bad)
aaa
ret
loope
mov
push
cld
ror
ja
and
fmulp
push
scas
inc
neg
dec
mov
push
outs
or
std
repnz
inc
cmp
je
add
rcl
es
jbe
jg
iret
add
mov
pusha
pop
mov
icebp
ja
dec
movzx
test
push
add
push
sbb
daa
adc
mov
and
mov
jmp
lock
div
test
jmp
or
jne
inc
rcr
cmp
add
cdq
idiv
or
enter
or
sub
pop
dec
jmp
xor
push
(bad)
(bad)
(bad)
fucomip
inc
shr
inc
or
xor
lea
push
rep
pop
mov
mov
movzx
mov
and
out
add
inc
call
inc
add
in
push
(bad)
out
ja
dec
jne
push
mov
mov
push
lock
pop
and
shl
fnstsw
add
fnstenv
add
loopne
fimul
xchg
fisttp
mov
push
and
pop
shl
and
and
stos
fld
inc
dec
pop
pop
cmp
sub
jne
dec
mov
outs
jmp
push
pop
or
ins
dec
sub
fisttp
mov
xor
je
dec
je
mov
out
sub
jb
push
mov
shl
add
push
adc
(bad)
std
mov
fucomip
pop
pop
add
je
sub
pop
ret
daa
jmp
daa
jecxz
sbb
dec
xor
dec
je
fdiv
mov
pop
and
jmp
sbb
jmp
jmp
data16
(bad)
sbb
inc
std
add
jae
sahf
add
sub
or
adc
adc
into
mov
xor
inc
push
mov
(bad)
scas
mov
inc
sbb
add
cmc
sbb
push
daa
or
leave
je
or
inc
and
jne
adc
jmp
adc
call
je
push
push
lea
lea
cmp
jbe
inc
or
(bad)
sub
ret
int3
mov
push
les
jae
cmp
inc
dec
adc
inc
add
inc
je
lea
push
jg
(bad)
call
inc
and
inc
and
adc
shr
or
rol
fld
or
mov
out
(bad)
cmp
call
jp
mov
fwait
or
jmp
fdivrp
adc
mov
pop
jmp
ret
jp
push
or
test
pop
inc
inc
push
and
jmp
mov
mov
js
adc
mov
xor
push
sbb
and
mov
fwait
(bad)
push
call
push
mov
mov
or
in
cwde
mov
data16
pop
fs
rcl
(bad)
mov
xor
mov
mov
and
test
std
(bad)
jmp
add
cmp
jb
cmp
ja
sub
push
pop
dec
pop
mov
js
fbstp
pop
mov
ret
cmp
cmp
fdiv
sub
sub
ja
cmp
or
shl
imul
fisttp
or
push
sub
push
fwait
lea
push
mul
pusha
sub
mov
xor
ud0
mov
rol
pop
push
sbb
jne
(bad)
adc
and
or
pop
mov
test
mov
mov
ja
(bad)
dec
xchg
cdq
idiv
mov
imul
add
lea
xor
std
mov
lock
sub
inc
push
adc
lock
or
call
add
mov
mov
cdq
mov
idiv
mov
mov
imul
sub
(bad)
mov
sbb
add
pop
add
adc
(bad)
mov
not
dec
mov
push
sub
cmps
mov
inc
mov
mov
mov
cmp
or
jae
popf
adc
(bad)
and
pop
mov
imul
sub
inc
adc
inc
sar
and
mov
mov
or
(bad)
out
loop
and
jmp
pop
ret
test
je
loopne
test
out
popf
dec
neg
pop
pop
sbb
ret
ret
add
or
inc
(bad)
dec
mov
aaa
test
je
mov
idiv
inc
or
(bad)
jle
push
push
cmp
sub
(bad)
jne
call
or
into
and
mov
jmp
or
or
xor
sub
add
sub
push
out
sbb
fs
push
xor
xor
arpl
cmp
push
xor
pop
cmp
jle
mov
mov
add
outs
pop
test
je
adc
cmove
out
mov
pop
pop
sbb
xor
fucomip
call
sbb
jmp
adc
(bad)
jne
test
je
sbb
or
inc
push
inc
jno
aas
or
xchg
pop
pop
inc
cmp
mov
push
push
cmp
pop
mov
je
ss
leave
hlt
cmp
jne
dec
pop
or
sbb
adc
lea
jmp
std
pop
in
jge
imul
sbb
mov
mov
(bad)
jg
or
sbb
mov
test
je
mov
mov
jmp
xor
mov
ins
jmp
mov
dec
pop
je
cmp
mov
jb
mov
(bad)
aas
hlt
clc
push
push
push
and
sub
add
jno
(bad)
dec
dec
cmp
jb
cmp
mov
je
xor
div
mov
sub
push
push
fwait
lahf
iret
sub
sbb
je
sub
add
jmp
(bad)
cwde
aas
adc
sub
je
inc
dec
adc
jne
inc
mov
leave
ret
ret
outs
clc
(bad)
out
adc
add
and
inc
or
jne
jmp
push
sub
rcr
hlt
push
faddp
inc
in
dec
adc
inc
call
loopne
mov
inc
in
inc
adc
add
jge
or
push
push
push
dec
ds
imul
xor
mov
(bad)
loopne
adc
rcr
loopne
sbb
pusha
and
fnsave
mov
sbb
fwait
jg
push
inc
mov
cmp
les
pop
cld
pop
dec
loopne
(bad)
dec
xlat
cmp
je
push
jmp
xor
mov
sub
mov
inc
cmp
sbb
cmp
mov
push
sbb
adc
push
xor
cmp
adc
push
push
sub
push
daa
cmp
paddd
jg
test
ror
xor
mov
or
mov
jo
cmp
xor
ins
lea
lock
mov
push
pop
vpandn
dec
mov
js
dec
and
pop
loopne
dec
aas
mov
ds
pop
lea
push
dec
adc
push
pop
adc
or
push
pop
mov
lea
mov
cmp
shl
or
mov
les
inc
cmp
loope
push
ret
add
add
xchg
push
push
rcr
rcr
cmc
push
dec
mov
inc
loope
jg
shl
push
jmp
lock
add
ja
dec
mov
nop
addr16
or
pop
repnz
mov
and
mov
xor
and
pop
cmp
add
sbb
sbb
mov
pop
or
jne
dec
jmp
mov
sbb
mov
pop
adc
adc
out
call
jle
adc
adc
mov
inc
add
inc
jmp
je
cmp
cmp
test
out
dec
repz
and
mov
shl
mov
jmp
lea
into
lds
je
xchg
adc
add
cmp
je
int
jmp
or
mov
mov
mov
out
movs
add
inc
pop
push
movzx
add
pop
lds
clc
div
mov
sub
jg
lods
(bad)
addr16
test
je
mov
or
and
rcr
xor
cmp
jne
scas
dec
sbb
das
loop
das
push
ret
and
fistp
adc
movs
or
jne
push
adc
jge
test
inc
push
wrmsr
or
cmp
mov
mov
or
stos
test
ret
(bad)
je
pop
mov
mov
jmp
sub
scas
push
ss
je
mov
dec
dec
cmp
push
(bad)
in
in
mov
jne
nop
and
fadd
in
les
cmp
fdiv
lahf
push
push
pop
cmp
adc
sub
and
dec
adc
and
push
sar
arpl
jge
jne
pop
add
mov
repnz
add
pop
jne
not
cmp
or
cld
fadd
(bad)
dec
sub
addr16
and
ds
ret
idiv
div
push
call
ja
leave
stos
sbb
cli
dec
jge
test
je
into
push
faddp
jmp
mov
or
clc
jne
push
inc
(bad)
fsub
jo
or
lock
sub
mov
shl
mov
popa
pop
loope
ja
jne
(bad)
jns
inc
xchg
mov
(bad)
test
lds
sbb
pop
cmp
push
jl
inc
jmp
push
push
jo
cmp
inc
push
and
fwait
add
or
pop
push
jecxz
dec
pop
cld
test
dec
sbb
pop
xor
aad
nop
adc
dec
sbb
mov
sbb
jne
cli
lahf
adc
xor
mov
int3
push
inc
xor
pop
inc
xor
sub
push
in
adc
call
sbb
jne
and
lea
call
cld
mov
mov
adc
cmp
je
sub
inc
push
lea
call
pop
pop
inc
add
pop
aaa
sub
or
call
push
ss
mov
call
out
xchg
(bad)
jbe
(bad)
mov
sub
adc
jmp
cs
push
mov
xchg
stos
jmp
pop
push
aas
push
sub
jb
jmp
inc
sbb
mov
inc
nop
xor
xlat
(bad)
fst
push
pop
mov
loopne
jle
or
or
hlt
push
push
inc
cs
call
data16
or
inc
std
jne
mov
add
cli
fild
xchg
pop
inc
bts
jmp
mov
(bad)
jg
aam
inc
mov
adc
bt
jae
mov
add
popf
ror
in
cmp
cmp
lock
je
push
sbb
ror
or
jg
sbb
add
ror
inc
mov
pop
xor
pop
leave
or
jg
jg
pusha
scas
cld
lock
add
test
jo
jmp
add
sub
or
loop
or
leave
ret
or
mov
pop
jg
add
push
and
and
push
push
mov
cmps
dec
add
mov
pop
adc
mov
outs
mov
nop
push
cmp
pop
jge
cmp
pop
cmp
ss
pop
and
mov
inc
dec
and
add
and
dec
test
mov
(bad)
xlat
movs
xor
cld
inc
or
cmp
jne
or
loop
lods
and
xchg
dec
adc
add
mov
inc
add
add
add
mov
mov
mov
sti
pop
mov
fadd
add
cdq
jecxz
inc
mov
and
aas
shr
mov
and
mov
dec
shl
ins
add
dec
and
dec
rol
mov
ins
mov
lock
pop
cmps
dec
rol
mov
sar
shl
inc
add
(bad)
(bad)
add
sbb
and
sub
and
jmp
add
jnp
sub
mov
or
inc
arpl
sub
pop
or
ret
mov
mov
stos
mov
xor
jg
add
in
hlt
cld
add
pop
stos
and
loopne
xchg
mov
ins
mov
xor
add
pop
mov
add
inc
add
mov
pextrw
adc
xchg
adc
sbb
(bad)
push
mov
add
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
scas
mov
icebp
int3
push
push
enter
adc
and
lea
push
sbb
push
mov
xor
mov
test
call
test
je
movzx
(bad)
(bad)
frstor
sbb
sbb
mov
shl
or
cmp
mov
dec
je
jmp
movzx
cmp
je
inc
jmp
inc
pop
and
pop
jbe
jmp
or
or
pop
mov
sub
push
not
and
pop
pop
fwait
add
or
mov
add
adc
xor
shl
push
mov
cmp
jb
sti
(bad)
fist
je
sub
mov
inc
dec
jne
mov
shl
add
push
fwait
stos
loop
adc
and
je
mov
stos
cmp
and
and
pop
or
std
fadd
mov
mov
inc
test
je
cmp
add
push
movzx
loopne
setne
inc
icebp
ror
inc
lods
add
mov
pop
rcl
add
inc
push
jne
add
pop
xchg
mov
jo
arpl
lahf
outs
add
ins
call
mov
push
test
je
test
je
push
add
je
jmp
lea
mov
sub
ret
lea
pop
or
adc
or
jmp
mov
push
mov
cmps
or
in
aaa
in
pusha
je
dec
(bad)
dec
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
or
adc
jg
jo
add
pop
pop
ret
mov
and
out
(bad)
out
jmp
repz
je
mov
mov
and
or
jmp
or
add
cmc
cs
pop
sbb
pop
ret
jge
mov
mov
(bad)
jle
(bad)
cmp
jne
dec
je
cmp
jne
dec
je
and
cmp
jne
psrlw
dec
pop
fist
push
mov
clc
push
push
pop
mov
mov
pop
jne
fld
pop
lahf
dec
dec
je
or
mov
je
jnp
xchg
adc
adc
mov
cmp
inc
aam
jg
or
loopne
jmp
adc
pusha
mulps
sbb
jb
xor
ds
cdq
enter
clc
pop
pop
pushf
xchg
es
add
mov
push
inc
inc
in
pop
or
pop
pusha
inc
xor
adc
push
inc
pop
adc
ds
fistp
nop
mov
mov
cmp
jle
cmp
dec
cld
jg
push
sub
or
pop
pop
pop
mov
cmp
mov
je
xor
mov
test
pop
ud0
mov
lock
mov
mov
outs
sub
mov
jg
(bad)
inc
mov
pop
test
mov
pop
je
sub
cmp
inc
(bad)
jmp
stc
idiv
test
mov
jge
add
mov
sub
mov
cdq
idiv
scas
jmp
inc
inc
dec
or
pop
push
push
add
or
stos
(bad)
fst
and
cdq
idiv
pop
add
and
dec
jbe
and
jge
inc
push
or
pop
idiv
mov
test
mov
jo
dec
jle
mov
push
add
pop
xor
add
cmps
mov
sbb
jge
and
dec
sti
lea
and
test
jg
add
dec
mov
(bad)
or
rol
test
inc
mov
add
xor
fdiv
(bad)
fild
test
je
repnz
inc
fs
sbb
out
stc
pop
je
(bad)
ins
push
pop
call
ret
mov
dec
add
shr
xor
push
jo
xchg
das
sub
or
add
inc
jne
aas
add
ret
push
je
inc
jle
lea
jno
les
add
(bad)
(bad)
ja
das
push
push
pop
cmp
jne
sbb
repnz
add
idiv
dec
inc
jl
jl
or
push
mov
mov
es
mov
hlt
pop
add
mov
mov
lea
cmp
jb
or
mov
jae
inc
loopne
in
pop
push
add
sti
retf
mov
add
mov
pop
je
sbb
ins
pop
hlt
pop
pop
outs
or
dec
je
les
push
push
pop
or
pop
xor
enter
mov
in
pop
test
push
std
pop
jo
imul
pop
movs
or
loopne
xchg
dec
jne
int3
pop
inc
xchg
or
or
add
and
cmp
ja
push
lahf
push
call
lock
jge
ss
aam
jge
add
mov
adc
jb
jl
jae
push
mov
clc
add
test
mov
test
jo
mov
dec
sbb
aam
adc
daa
or
inc
test
xor
ja
shr
push
push
push
push
cmp
mov
push
mov
sbb
inc
ret
push
mov
fwait
ret
jg
imul
mov
add
push
mov
pop
in
inc
in
sbb
and
arpl
mov
fsub
jg
adc
loope
mov
sub
add
jne
jmp
mov
xor
jbe
int3
jge
push
adc
jne
es
dec
stos
daa
inc
shl
add
or
mov
shl
add
in
enter
adc
jne
rcl
(bad)
pusha
aaa
mov
loope
sub
and
in
bound
stos
pop
(bad)
aaa
icebp
outs
add
in
or
and
dec
jge
mov
lea
mov
xchg
mov
add
or
mov
adc
push
and
add
rol
popf
sti
push
or
jmp
cmp
jne
pop
adc
jl
ret
cmp
je
mov
sub
sbb
and
sti
xor
push
inc
adc
add
add
xor
or
in
(bad)
ja
jmp
mov
cmp
jne
sub
pop
add
pop
mov
out
(bad)
jne
mov
inc
inc
arpl
mov
mov
inc
hlt
mov
or
(bad)
xor
mov
jmp
or
shr
or
mov
and
ss
movsx
int
std
out
loop
js
xor
aaa
cmp
jae
mov
in
or
jne
jb
lock
cmps
adc
cmp
jbe
add
or
scas
outs
cli
dec
cld
jne
add
mov
cld
inc
mov
dec
xor
sbb
adc
dec
push
test
jne
dec
push
mov
cwde
xor
test
jbe
mov
mov
test
jne
and
je
cmp
xor
shl
jne
jbe
mov
adc
mov
or
(bad)
jmp
push
and
dec
cld
sub
neg
add
aam
add
out
fisttp
or
push
pop
jmp
add
add
add
cmp
adc
pop
xor
adc
(bad)
or
inc
jl
pusha
cmp
(bad)
cmp
add
ss
mov
push
add
or
push
mov
idiv
mov
jge
add
dec
mov
inc
(bad)
frstor
xchg
inc
jnp
mov
test
mov
(bad)
cli
add
inc
lea
imul
jg
cli
add
ret
add
pushf
(bad)
dec
(bad)
mov
push
test
jl
test
jl
mov
jge
lea
shl
(bad)
mov
mov
cdq
idiv
xor
cmp
setne
mov
jmp
xor
fnstenv
je
test
inc
or
mov
rcr
test
dec
shl
mov
imul
inc
cmp
dec
enter
inc
retf
pop
adc
das
xor
adc
inc
jne
adc
fisttp
mov
jl
test
fcmovbe
jl
mov
jge
jge
lds
aaa
in
test
mov
call
or
dec
and
sub
(bad)
jge
cmp
jle
xchg
jmp
pop
and
push
ret
lods
je
push
mov
dec
cmc
mov
gs
rep
or
pop
jg
pop
addr16
in
dec
and
mov
out
jno
dec
mov
pop
cmp
or
cmp
inc
and
xor
mov
sbb
je
shl
cmp
inc
call
cwde
outs
cmp
sub
cmp
jne
and
popa
add
sar
jne
rep
stos
mov
sbb
xchg
cmp
je
retf
lea
mov
test
sysret
adc
aas
ror
mov
dec
mov
cmp
ja
push
sub
inc
jmp
jnp
inc
mov
lea
rep
pop
stos
lea
idiv
(bad)
inc
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
jmp
nop
jmp
cmc
inc
inc
fadd
xchg
cmps
aam
add
cmp
jb
pop
mov
mov
mov
les
mov
movs
movs
pop
mov
inc
jns
loopne
arpl
and
mov
in
xor
cmp
xchg
dec
ror
pop
add
mov
stos
stos
stos
jmp
cmp
cs
inc
outs
clc
add
ins
xor
cmp
or
pop
leave
bound
out
pop
cmp
jne
mov
(bad)
pop
fdivr
std
adc
cld
jne
mov
cs
(bad)
sub
add
je
sub
loopne
add
repnz
ret
mov
push
ret
mov
or
mov
out
ret
mov
mov
adc
mov
add
push
pop
ss
int3
cmp
shr
adc
test
mov
inc
cmp
jb
mov
mov
and
movzx
movzx
cmp
(bad)
inc
ja
sub
lea
(bad)
aas
inc
std
out
stos
mov
inc
inc
mov
test
jne
pop
loop
sbb
pop
push
lea
daa
loopne
mov
push
push
push
inc
arpl
and
push
cmp
adc
aam
loope
ins
jg
pusha
and
inc
jmp
aas
fldenv
dec
daa
add
xor
rcl
aad
lea
jnp
sbb
mov
dec
jmp
out
fnstsw
sti
test
je
sbb
pop
jmp
and
add
inc
add
clc
inc
jb
cmp
(bad)
in
pop
ja
xor
mov
add
mov
clc
popa
jb
cmp
mul
in
jp
push
sbb
loopne
dec
ja
or
ins
lods
dec
add
jne
push
shl
cmp
mov
aam
lock
jge
push
mov
mov
mov
test
push
out
test
clc
je
(bad)
les
dec
aad
or
cdq
cmp
cmp
pop
aas
sar
mov
dec
or
dec
push
mov
push
clc
add
stc
or
cmp
add
mov
push
cmp
jge
lea
shl
mov
add
and
mov
and
sar
pop
or
cmp
popa
out
inc
jne
mov
cmp
mov
cmp
fdivr
repz
cmp
pop
or
orps
push
cmp
inc
or
xchg
ud0
add
pop
pop
cmp
jbe
push
call
pop
mov
pop
pop
daa
pop
pop
(bad)
jmp
fst
xor
cld
ffreep
inc
push
push
jmp
push
call
mov
mov
mov
xor
(bad)
(bad)
call
ret
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
add
loop
dec
(bad)
stos
jp
scas
add
cmp
mov
xchg
les
jne
loope
sub
cmp
dec
adc
jg
pop
jle
mov
mov
inc
daa
and
inc
jmp
mov
and
inc
cmp
ja
sub
mov
pop
ins
pop
push
push
pop
mov
dec
xor
cmp
je
cmp
je
inc
or
fcomp
je
add
call
add
fbld
jecxz
lock
cmp
mov
jge
dec
or
pop
pop
mov
cmp
lock
sub
mov
pop
inc
cmp
je
ja
(bad)
aas
or
cmp
pop
mov
cs
push
inc
ins
int3
pop
sti
cs
add
pop
add
cmp
jne
pop
inc
sbb
les
add
mov
add
push
gs
sbb
movnti
push
fist
js
inc
add
test
add
push
cld
push
push
ja
pop
inc
les
cmp
iret
mov
jb
aas
in
lea
aam
les
cmp
mov
add
das
(bad)
lea
push
fdivrp
mov
add
dec
mov
mov
loopne
push
dec
pop
adc
and
mov
push
mov
xor
(bad)
ffreep
add
test
je
mov
add
mov
cmp
jne
addr16
inc
cdq
cmp
je
jno
jmp
inc
inc
push
cmp
mov
mov
inc
or
jmp
or
fdivr
add
inc
inc
jmp
adc
dec
(bad)
and
mov
push
push
inc
inc
cmp
je
or
test
jne
dec
xor
je
and
and
sub
pop
add
add
icebp
cmp
mov
mov
inc
mov
cmp
inc
inc
jmp
xchg
add
(bad)
jmp
ret
add
xor
cmp
je
cmp
lea
jg
hlt
pop
ins
add
cmp
sete
mov
shr
mov
push
inc
in
(bad)
std
mov
inc
inc
dec
jne
mov
cmps
dec
cmp
jne
mov
(bad)
ins
or
je
das
je
sub
loop
mov
add
mov
pop
cld
jmp
pop
aaa
dec
add
inc
inc
je
out
mov
xor
add
jb
add
sbb
ret
push
push
mov
cmp
push
push
mov
xor
xor
xor
cmp
jne
call
mov
lock
je
mov
mov
cmp
icebp
cmp
je
lds
outs
pop
aas
dec
stos
ins
(bad)
out
ds
or
je
push
mov
je
inc
inc
cmp
(bad)
cmp
fnstenv
push
repnz
mov
push
push
inc
push
push
push
push
push
hlt
fist
xlat
mov
cmp
je
jmp
(bad)
xchg
xor
je
push
push
push
loop
and
call
into
push
push
jnp
or
daa
popf
add
adc
cmc
inc
jmp
cmp
jne
cmp
xor
idiv
or
sbb
add
sub
inc
mov
data16
arpl
or
and
cmp
les
call
dec
clc
pop
fild
push
push
sub
test
test
xor
cs
sbb
add
jg
and
lea
push
and
or
(bad)
sti
test
(bad)
and
pop
jmp
lea
push
pop
inc
out
loop
adc
jge
fcmovnbe
cmp
stos
(bad)
fcmovnbe
inc
in
test
add
add
out
fwait
outs
sub
jl
cmp
addr16
mov
xchg
push
cmp
ja
out
or
bound
and
(bad)
jg
or
scas
mov
mov
add
add
mov
jae
dec
jl
jmp
mov
test
stos
xor
pop
push
add
inc
call
dec
jne
push
call
je
mov
mov
sar
xlat
(bad)
ds
(bad)
ror
sbb
or
in
cld
add
inc
cmp
jl
xor
mov
push
cld
(bad)
inc
jne
test
mov
jne
push
pop
jmp
mov
(bad)
scas
loope
fcmovnb
cmc
or
cmp
je
sbb
or
scas
mov
and
ror
in
or
ja
lea
dec
add
jmp
adc
jl
push
sbb
adc
fadd
aaa
cld
push
call
jmp
mov
sbb
add
std
mov
je
aam
call
jecxz
adc
inc
scas
pop
call
add
push
push
call
mov
inc
push
mov
jmp
mov
inc
xchg
add
push
stos
int3
sub
ret
push
adc
fs
mov
aas
ins
es
ins
mov
jmp
cmc
jmp
sbb
(bad)
pop
sbb
jg
jae
and
push
and
icebp
(bad)
(bad)
jmp
cmp
jne
mov
test
je
add
mov
mov
mov
mov
call
mov
or
lea
outs
cmps
push
push
mov
mov
out
ja
jmp
cmp
cmp
call
call
push
push
push
call
mul
lea
aas
sti
(bad)
push
add
jl
cmp
jg
sub
mov
inc
cmp
jne
inc
push
push
push
mov
sub
std
pop
or
jmp
lea
aas
xor
(bad)
cmp
mov
sbb
ja
jmp
ret
je
push
icebp
cmps
mov
adc
pop
ja
xor
neg
les
cmp
jne
mov
jmp
repnz
fbld
adc
xor
clc
add
sbb
je
lea
dec
inc
sub
faddp
cmps
rol
xor
push
sbb
out
xchg
shl
add
in
je
aad
test
inc
push
inc
mov
clc
fucomi
mov
jno
jmp
pusha
jne
or
mov
mov
inc
out
jae
jl
add
mov
cdq
sub
jmp
cmp
jne
push
fidiv
inc
xor
add
sar
adc
mov
push
or
leave
mov
je
add
inc
(bad)
push
mov
mov
shl
cmp
sub
test
jo
and
test
cmp
arpl
outs
push
lea
xchg
loop
sar
dec
add
mov
pop
adc
lea
inc
pop
cmp
xchg
in
cmp
sub
daa
pop
clc
or
sub
push
add
push
xor
pop
adc
mov
lea
push
adc
sbb
outs
ins
mov
xor
fdivr
mov
out
and
fsubr
and
stos
push
xor
shl
push
mov
lea
lea
or
aas
mov
pop
push
push
push
call
cdq
sbb
pop
or
push
add
inc
loopne
add
mov
add
(bad)
jle
pop
clc
fld
inc
lock
fmul
fsubr
fstp
fld
mov
sbb
test
adc
ret
ss
sub
xchg
adc
push
ins
fcmovbe
cmp
xchg
syscall
push
rol
push
dec
ins
inc
cwde
and
mov
cmp
pop
je
fsub
lds
prefetcht1
push
inc
cmps
push
mov
mov
(bad)
dec
mov
mov
inc
mov
mov
mov
mov
inc
test
dec
mov
je
cmp
je
mov
hlt
mov
ret
push
cmp
je
cmp
je
in
mov
dec
dec
lock
inc
cmp
jne
dec
mov
inc
inc
test
mov
jne
or
les
fmul
jmp
cmp
push
push
push
mov
jne
je
loopne
sbb
pop
mov
pop
pop
mov
mov
repnz
mov
pop
mov
leave
ret
mov
adc
adc
sub
aaa
adc
test
jnp
push
fld
fisttp
jb
inc
xlat
push
mov
outs
cli
dec
add
rol
leave
test
setg
add
add
push
add
sar
and
imul
jne
jne
inc
pop
arpl
xor
cmp
adc
adc
fnstcw
pop
or
lahf
(bad)
aas
cld
mov
add
jl
add
cmp
mov
jne
clc
cmp
std
mov
lea
and
dec
add
adc
dec
push
mov
dec
add
xchg
rol
add
test
cmp
icebp
enter
add
(bad)
push
mov
inc
inc
cmp
pop
add
jns
neg
mov
inc
cmp
jl
mov
push
jmp
mov
mov
cdq
idiv
mov
push
or
jp
inc
or
pop
add
push
or
mov
ret
out
hlt
add
shl
add
sar
push
push
call
dec
jne
(bad)
(bad)
fbstp
push
pop
mov
push
mov
dec
cmp
je
cmp
jne
xor
jbe
iret
or
fcmove
mov
mov
and
adc
sbb
add
sar
ret
jmp
mov
pop
inc
jmp
add
dec
inc
pop
mov
mov
inc
pop
inc
(bad)
aas
test
neg
jmp
neg
cmp
jl
mov
stos
dec
add
dec
xchg
sti
push
pop
sbb
push
and
and
mov
adc
div
push
(bad)
(bad)
aas
push
repnz
add
dec
cmp
setl
cmp
jl
cmp
lock
jg
jge
or
test
jne
and
cmp
jo
and
adc
jne
push
cmp
in
jo
arpl
xchg
(bad)
out
ja
cmp
je
add
jne
sub
lods
jo
pop
dec
and
jmp
shr
std
dec
sbb
adc
inc
std
push
ret
icebp
aad
inc
pop
or
sbb
or
fistp
js
inc
push
push
add
or
aaa
lock
add
test
dec
in
out
(bad)
pusha
push
fxch
fyl2x
jmp
adc
in
fldl2e
fmulp
cmps
dec
mov
call
faddp
test
fld1
pop
inc
cld
push
fdivp
fs
test
jne
fscale
or
je
out
loopne
and
aaa
int
shl
mov
add
aad
mov
jmp
lahf
dec
inc
add
fstp
iret
dec
adc
ret
aas
jnp
fstp
in
and
fstsw
jne
fscale
jmp
fdiv
ret
and
sbb
dec
add
or
jne
ret
fldlg2
jmp
das
idiv
and
pop
sbb
sti
ja
push
fldz
cmp
jne
xchg
inc
jg
inc
mov
sbb
jmp
fstp
cmp
inc
push
in
fld
cwde
jae
js
xor
dec
add
jmp
or
ret
jp
adc
(bad)
(bad)
fld
fabs
fld
fld
ret
retf
mov
mov
int3
push
rol
inc
cld
fmul
std
mov
adc
or
add
je
popa
pop
adc
and
clc
mov
and
icebp
push
xor
add
stc
sub
fsave
push
fild
frstor
fld
add
pop
aaa
(bad)
cmc
sbb
jg
or
push
add
popf
pop
out
or
jbe
inc
and
mov
jmp
mov
mov
add
push
std
xchg
mov
(bad)
(bad)
sti
add
loope
stc
rol
mov
and
xlat
movsx
and
loopne
fiadd
fadd
fnstenvw
addr16
jle
lods
js
sub
sar
rol
mov
mov
test
in
in
les
push
dec
cmc
fxch
fstp
std
fcomp
outs
cmps
dec
cmc
jmp
inc
fldz
ret
push
call
cmp
lods
add
inc
je
jmp
add
add
leave
sub
iret
push
jb
jmp
or
faddp
push
loop
shl
ds
mov
sub
daa
(bad)
or
add
mov
mov
mov
fcomip
jmp
sar
leave
push
xchg
adc
lds
loopne
loopne
call
mov
clc
mov
jg
je
fldcw
pop
xlat
dec
aas
xchg
fsub
mov
push
(bad)
fscale
fstp
ret
mov
and
jg
mov
fldcw
inc
lock
ret
test
(bad)
pop
and
inc
add
add
(bad)
test
je
fld
ret
adc
add
jg
inc
and
idiv
or
movs
enter
or
add
or
fld
add
push
or
add
jmp
push
mov
ret
xor
fldcw
pop
ret
mov
fdivr
out
and
cmp
loopne
je
fstsw
or
mov
dec
and
sub
cmp
xor
(bad)
sbb
push
jmp
adc
xchg
cmp
sub
and
neg
and
fs
xor
or
add
into
mov
fcomp
mov
jae
sbb
or
fld
mov
sub
add
fmul
pop
inc
cs
jmp
jmp
shl
mul
loopne
call
arpl
cmp
cmp
sbb
jne
cmp
jne
fsubr
or
jb
inc
inc
sbb
pop
in
sti
sbb
cmp
jne
cmp
sub
jg
emms
inc
or
cmp
or
cmp
jne
adc
out
in
ja
xchg
js
dec
add
ja
jae
nop
jae
(bad)
fldz
jmp
cmp
jne
xor
ja
out
mov
sub
or
jnp
adc
vminpd
mov
jmp
add
and
sbb
fnsave
cwde
push
fldz
and
fld1
or
ret
inc
add
aas
add
add
nop
pop
jne
fst
inc
xchg
xchg
sub
jb
(bad)
fdiv
cmp
sub
pop
adc
push
lea
add
and
mov
frndint
or
pop
dec
add
jne
out
push
mov
fld
dec
sbb
bound
jmp
push
push
add
pop
jo
call
pop
mov
inc
add
add
push
cmp
aaa
adc
(bad)
pop
push
lea
pop
push
dec
mov
shl
and
push
jne
call
or
(bad)
push
mov
pop
sub
pop
jne
sbb
dec
fld
fwait
neg
mov
cmp
leave
cdq
push
ffree
add
popf
xor
pop
sti
jae
xchg
sbb
jmp
dec
or
rcl
inc
add
jg
fisttp
push
push
mov
or
inc
or
dec
adc
rcl
or
pop
hlt
or
inc
adc
mov
pop
int
pop
or
test
je
adc
adc
adc
popf
mov
inc
pop
mov
ret
inc
or
mov
dec
mov
not
and
and
shl
or
pop
mov
adc
out
test
out
sbb
and
or
push
shr
sbb
sti
push
shr
and
and
out
pop
(bad)
fild
fwait
test
je
icebp
jg
xchg
or
test
or
test
add
adc
(bad)
fnsave
or
test
or
or
mov
mov
and
je
cmp
add
je
cmp
shl
out
sbb
or
jmp
mov
and
or
jmp
adc
std
or
mov
jmp
and
inc
aaa
idiv
xlat
sbb
add
add
cmp
iret
jge
and
jmp
pop
xor
or
mov
or
or
mov
sbb
inc
sbb
loope
and
shl
cmp
js
loope
or
mov
sbb
ja
fld
xor
pop
adc
dec
cmp
neg
push
sbb
jge
mov
fld
fstp
pop
mov
inc
sbb
adc
fild
xor
inc
or
je
and
or
sti
mov
imul
es
test
(bad)
inc
sbb
mov
mov
and
sub
je
dec
je
dec
je
dec
jne
cmp
cld
dec
or
sbb
or
jmp
and
or
mov
jmp
and
(bad)
mov
shr
and
xor
dec
je
dec
jne
and
jmp
mov
and
or
dec
(bad)
jmp
or
mov
fld
fstp
pop
idiv
aaa
adc
push
push
mov
and
push
test
call
je
test
je
pop
pop
fistp
out
and
aaa
ins
ss
xor
push
test
je
push
aas
xor
sbb
test
je
mov
sbb
xor
call
fisttp
je
xchg
cmp
stos
sub
enter
inc
mov
fld
iret
pop
jmp
add
(bad)
hlt
fld
sbb
jmp
mov
sbb
(bad)
(bad)
mov
fstp
inc
xchg
sbb
daa
inc
daa
push
int3
dec
and
pop
push
outs
adc
mov
fstp
and
fldcw
mov
or
fst
je
push
inc
mov
retf
or
add
shr
mov
add
or
mov
idiv
jmp
pop
pop
hlt
lea
cmp
jge
fldz
mov
inc
(bad)
jmp
push
xor
add
shr
add
ror
(bad)
ja
(bad)
call
mov
mov
cmp
jge
sub
test
je
test
jne
shr
(bad)
sar
test
je
or
shr
dec
jne
test
je
hlt
out
mov
sbb
sub
fidiv
ret
push
xchg
and
test
shl
je
push
(bad)
cdq
sbb
xor
test
pop
pop
sete
loopne
shl
add
mov
xchg
je
cmp
mov
in
pop
mov
cmp
gs
or
jne
mov
dec
jne
clc
push
ins
or
mov
mov
pop
mov
xchg
dec
rcr
mov
repnz
fstp
pop
leave
ret
cmp
jle
mov
push
fstp
inc
add
lea
out
out
adc
cmp
jg
and
mov
and
ret
xor
mov
ja
mov
cmp
std
aas
icebp
jl
xor
ret
mov
inc
and
jl
nop
cmc
push
jmp
cdq
add
add
push
aam
mov
loop
push
test
je
push
pop
ret
movzx
shl
mov
mov
dec
push
test
bound
loope
adc
loopne
or
xchg
(bad)
loop
pop
rol
xor
cmp
(bad)
lods
jnp
push
pop
cmp
jmp
jge
pop
ja
mov
cmp
jne
jmp
cmp
sti
fbstp
test
jne
cmp
pop
pop
ret
xor
jecxz
jo
out
loope
pop
imul
jo
jne
fldz
xor
sbb
inc
push
inc
cmp
into
dec
gs
push
arpl
scas
fadd
inc
push
adc
shl
test
je
or
(bad)
dec
shl
dec
jmp
and
cmp
dec
jecxz
pusha
or
and
pop
push
outs
or
or
(bad)
cmps
(bad)
fistp
inc
push
adc
and
movsx
sub
and
mov
loope
push
fstsw
movsx
sub
fnclex
push
jmp
mov
fnstcw
movs
mov
and
push
ds
enter
fldcw
and
xor
dec
in
call
je
fld
or
outs
out
adc
jmp
adc
rol
call
icebp
fstp
xor
jmp
mov
int3
inc
dec
push
sbb
mov
adc
add
out
cli
dec
mov
mov
push
pop
push
(bad)
mov
xchg
jp
(bad)
(bad)
fxch
fst
jmp
cmp
cmp
cmp
cmp
or
sti
add
or
add
pop
mov
add
jmp
or
test
int3
in
ss
cmp
pop
call
call
fst
call
call
cmp
je
cmp
je
or
movsx
mov
sbb
pop
aad
mov
lds
(bad)
and
nop
popa
push
adc
dec
test
pop
jnp
hlt
pop
inc
or
je
dec
je
jmp
sub
cmc
aaa
xor
popf
dec
add
sbb
xchg
sahf
jae
fmul
sub
inc
sub
mov
sub
xor
push
push
mov
imul
div
test
lock
add
cld
lea
lea
jnp
(bad)
(bad)
fild
jge
movs
movs
fstp
lea
jge
push
push
inc
mov
cmc
mov
fstp
fld
std
pop
mov
jg
mov
mov
push
add
push
data16
mov
mov
cmp
retf
(bad)
jg
mov
sar
or
movs
fmul
mov
pop
neg
ins
imul
add
cmps
inc
fld
add
or
ror
sub
push
add
(bad)
mov
shr
cmp
mov
fist
hlt
inc
stos
je
cmp
jl
inc
icebp
xchg
aas
dec
and
sbb
(bad)
and
ins
pop
sub
xor
fmul
pop
or
and
fmul
cwde
sub
popw
rcr
ins
je
cdq
mov
adc
shl
inc
and
neg
sub
fld
fmul
and
sti
mov
fxch
fwait
jae
pop
mov
xchg
sub
mov
loopne
jmp
fdiv
add
ret
add
push
fdivr
push
into
bound
or
pop
mov
or
rcr
and
leave
pop
push
arpl
sbb
and
cmp
sbb
leave
fxch
xor
fmul
pusha
cmp
int3
loope
jl
or
or
or
sbb
aam
fsubr
ins
jo
cdq
fxch
pop
add
push
inc
pusha
ja
out
dec
dec
or
push
bound
sbb
fxch
xchg
leave
shl
lods
sbb
adc
ds
ret
xor
pop
rcr
push
pop
inc
sbb
retf
int
xor
pop
add
das
stc
push
or
fxch
jno
ins
pusha
xor
ins
and
pop
icebp
fstp
pop
lods
sbb
or
pop
adc
jae
fs
pop
add
xchg
or
fxch
mov
lds
push
adc
xchg
inc
push
pop
adc
mov
mov
int3
add
fldenv
int
inc
pop
sbb
aas
mov
pop
sub
int3
push
pop
sbb
mov
adc
mov
mov
fadd
mov
mov
into
mov
pop
aas
mov
xchg
jl
int
pop
xchg
and
into
mov
int3
mov
xchg
push
or
fxch
mov
and
pop
sub
pop
mov
into
cmc
push
adc
pushf
sbb
adc
adc
xchg
sub
jg
xor
loopne
add
in
fld
clc
bsr
pop
ret
sub
(bad)
jg
adc
bound
sub
xchg
or
fmul
and
pop
dec
or
leave
and
fisttp
(bad)
jl
cs
or
fmul
add
ins
fldenv
cmp
xor
add
fild
add
or
imul
xor
jne
jmp
and
cs
sub
dec
xor
shl
cmp
rol
cmp
xor
ret
adc
xor
pop
sbb
sub
push
adc
adc
ins
and
mov
add
test
fwait
clc
outs
inc
shr
and
cmp
jo
inc
(bad)
pop
lahf
inc
and
push
call
jg
test
adc
test
fsub
jo
and
inc
or
sub
es
or
into
push
cdq
pop
sbb
sar
pop
or
jg
and
and
mov
sbb
js
mov
push
dec
out
pop
xor
jecxz
or
sub
out
sub
retf
mov
and
dec
and
sub
push
jne
mov
(bad)
clc
sub
fstp
jmp
test
call
or
adc
xor
xor
dec
je
mov
shl
cmp
aas
or
ror
ret
add
push
push
xor
jnp
ja
jmp
loope
shl
neg
loope
mov
fxch
fmul
add
(bad)
fidivr
not
xchg
sub
sub
fdiv
lods
jmp
sub
fchs
jmp
adc
mov
lahf
sub
clc
xor
push
fnstsw
cdq
sub
(bad)
ret
je
mov
xchg
dec
fidivr
(bad)
mov
fxch
and
sub
fnstenv
and
jmp
and
fld
sbb
pop
pop
ret
push
sub
jne
mov
xor
cmp
add
dec
jg
les
xor
les
pop
ret
sbb
inc
out
dec
sbb
je
add
dec
das
retf
mov
or
outs
or
scas
and
pusha
iret
std
(bad)
cmp
ja
or
fmul
mov
cmp
fadd
dec
mov
mov
popf
mov
mov
adc
sbb
cmc
rol
cmc
mov
add
add
adc
mov
imul
fpatan
ret
fptan
ret
push
mov
xor
jmp
or
push
jbe
jmp
or
cmp
and
add
push
cmp
ds
sbb
or
mov
pop
test
jne
push
mov
loop
push
push
cmp
pop
push
jne
jbe
das
stos
inc
ds
or
dec
adc
push
jp
call
inc
hlt
inc
inc
ds
cmp
mov
fld
push
fstp
cmp
lods
dec
adc
push
add
push
jmp
add
pop
jne
and
ror
movs
popa
scas
stos
mov
sbb
adc
push
push
inc
ror
sar
aas
idiv
(bad)
pop
rcl
je
push
push
push
push
push
push
and
mov
jg
push
imul
add
sub
ja
jo
int3
pop
pop
pop
sub
push
cmc
cmp
ror
or
(bad)
dec
push
adc
lock
cmp
pop
mov
je
cmp
(bad)
mov
mov
pop
add
xchg
ret
cmp
(bad)
fistp
bound
sbb
(bad)
jne
cmp
je
test
pop
aam
cmp
adc
cs
je
or
pop
aas
cmp
jne
push
or
cmp
mov
xor
sbb
les
mov
push
lods
(bad)
jmp
popf
ins
or
cmp
je
test
je
push
lea
add
addr16
test
add
aas
push
std
jg
jmp
mov
shl
push
(bad)
out
push
fcomp
call
inc
jmp
mov
xor
idiv
neg
lea
shr
add
idiv
jg
call
inc
(bad)
(bad)
dec
mov
fs
add
jmp
inc
mov
fadd
cmp
je
pop
(bad)
(bad)
dec
(bad)
pop
sub
pop
add
and
inc
neg
sbb
not
and
mov
push
call
push
stos
lock
add
push
aam
lock
sub
pop
pop
add
jne
mov
mov
cmp
je
test
je
sar
jmp
cli
sti
xlat
mov
sub
ret
(bad)
dec
rol
lock
or
leave
in
jg
inc
add
ret
sbb
mov
clc
scas
add
cli
push
push
lea
push
js
lock
push
test
hlt
test
mov
adc
pop
mov
call
adc
ret
cmp
add
inc
add
mov
imul
push
sub
sub
mov
iret
mov
jne
ds
adc
and
je
push
shl
sti
jns
jmp
lea
jmp
lea
jmp
lea
or
mov
sbb
je
mov
inc
adc
jmp
sbb
and
xchg
adc
jnp
shl
xor
div
inc
je
pop
aaa
icebp
push
shl
pop
ror
pop
ret
pusha
dec
div
add
or
ret
mov
cmp
jne
push
mov
cmp
cld
(bad)
out
clc
out
ja
push
test
je
cmp
je
cmp
jne
and
pop
adc
ds
cmc
ja
leave
jb
add
jmp
(bad)
(bad)
(bad)
fcomip
je
cmp
jne
cmp
jbe
mov
mov
test
je
movzx
xchg
jecxz
rcl
lock
in
jg
push
push
call
add
jmp
pop
push
sbb
mov
push
sbb
push
mov
in
sbb
(bad)
(bad)
cmp
mov
jl
mov
cmp
jl
jnp
cmp
mov
or
jo
(bad)
test
cmp
jne
cmp
jne
cmp
mov
cmp
es
(bad)
fild
ror
push
push
mov
mov
adc
(bad)
pop
gs
cmp
sbb
push
stc
push
adc
rol
pop
jg
fisttp
test
in
pop
add
jne
sbb
inc
sub
mov
sbb
adc
cld
cmp
jae
mov
cmp
jg
cmp
jg
mov
call
mov
hlt
jle
mov
mov
dec
add
or
js
mov
mov
jle
push
push
dec
cdq
cdq
mov
mov
les
sbb
dec
clc
add
cmp
clc
(bad)
(bad)
clc
jg
dec
add
cmp
jg
jmp
push
pusha
jp
sbb
pop
push
xor
iret
mov
movs
jb
add
movs
xor
pop
adc
push
push
jo
sub
or
pusha
loope
inc
mov
dec
and
ret
adc
inc
movups
dec
and
sbb
push
jno
mov
aad
ja
aas
mov
push
je
push
pusha
mov
cmp
std
sbb
icebp
xor
jae
jge
jb
(bad)
jmp
add
mov
jae
cmp
jl
cmp
jg
mov
mov
pusha
(bad)
dec
shl
add
mov
fs
sbb
(bad)
lahf
es
add
push
inc
jmp
retf
mov
(bad)
adc
test
not
or
add
dec
cmp
lea
je
mov
mov
mov
add
mov
or
test
je
test
(bad)
std
or
mov
test
push
add
add
pop
add
push
xor
jmp
mov
inc
popf
adc
add
jg
(bad)
mov
mov
mov
mov
jge
cmp
je
sti
push
inc
cmp
and
mov
mov
movs
bswap
add
or
in
cld
and
jbe
sbb
sbb
cmps
lds
add
scas
pop
test
add
or
out
jbe
push
pop
push
ss
pop
jmp
mov
adc
jne
ret
push
push
mov
or
lock
add
cmp
push
mov
sbb
loope
popa
add
and
(bad)
lock
mov
cmp
dec
jne
push
jmp
push
lds
fwait
cld
sbb
pop
inc
add
adc
jb
mov
rol
xchg
push
inc
mov
push
sti
adc
cmp
jae
jae
pop
sbb
sti
fist
call
add
mov
std
call
and
mov
mov
mov
sub
outs
les
mov
or
jo
jle
fidivr
mov
dec
adc
add
dec
adc
jne
mov
(bad)
cld
mov
jl
fcomp
add
je
mov
mov
ins
je
mov
inc
or
call
scas
xor
jmp
mov
jge
mov
mov
or
dec
xlat
mov
aas
test
sub
pop
js
cmp
jge
add
cmp
cmp
xchg
and
outs
mov
adc
aaa
adc
js
cmp
jb
xor
add
add
xor
adc
jne
mov
out
maskmovq
test
inc
or
mov
lock
lea
das
test
je
mov
call
mov
test
mov
int
ret
test
loop
adc
inc
sbb
mov
out
jbe
pop
pop
mov
pop
(bad)
nop
jecxz
jbe
mov
test
je
repnz
test
mov
push
push
outs
sub
sub
aas
or
jle
add
test
sub
pop
cmps
push
add
xor
ret
(bad)
push
jmp
cmp
push
jne
mov
shl
jae
push
xor
pushf
xor
arpl
pop
cmp
dec
fdiv
dec
stc
(bad)
out
cmp
xchg
fdivr
push
add
sbb
add
and
push
xor
pop
sbb
mov
ja
pop
push
mov
push
push
pop
push
xor
or
add
adc
add
shr
adc
add
(bad)
cmc
pop
xor
cmp
setne
and
mov
or
add
test
inc
cld
fwait
clc
jl
mov
mov
or
add
add
pop
mov
lahf
outs
lds
add
je
aad
push
pop
mov
out
call
push
push
call
pop
pop
mov
pop
adc
jmp
stc
jbe
(bad)
push
mov
push
iret
xchg
pop
pop
pop
sar
xor
sbb
rol
inc
sar
sbb
pop
mov
out
add
mov
jmp
xor
out
and
cmp
ja
popw
fwait
pusha
mov
mov
pop
rol
pop
call
lds
int3
popa
out
and
push
fcmovbe
cmp
not
add
out
shl
xor
push
fdivr
push
sub
cmp
cmp
ret
add
or
mov
outs
jmp
lea
and
add
inc
add
add
add
cmp
push
add
or
(bad)
jg
dec
cld
sub
fld
mov
pop
fstp
pop
mov
jle
inc
dec
js
jge
lea
pop
ja
mov
movzx
jmp
mov
jae
int
stc
jg
sar
or
mov
test
pop
cmp
add
cwde
fdiv
iret
std
push
add
dec
(bad)
jb
pusha
cmp
jg
rol
mov
leave
ret
movzx
add
inc
or
inc
or
inc
and
pop
mov
cmp
add
add
mov
shl
add
or
je
shr
cmp
jne
adc
cmp
jne
xlat
jmp
cmp
ret
in
ror
rcl
inc
ret
fucomp
les
adc
add
jmp
test
ret
adc
jl
leave
xchg
jmp
das
adc
or
aaa
rcl
in
(bad)
dec
push
pop
xor
cmp
jne
push
push
push
pop
push
push
loopne
and
jo
ja
mov
push
push
push
and
and
mov
adc
add
in
fwait
int3
inc
adc
sbb
add
or
dec
call
dec
xor
out
or
mov
cmp
jne
xchg
mov
push
mov
adc
mov
clc
call
loopne
inc
push
mov
mov
mov
cmp
cmovge
aas
stos
out
jge
lea
add
and
push
or
icebp
ror
fdiv
les
dec
(bad)
in
dec
cld
dec
fsub
rol
je
rcr
aam
scas
mov
xor
hlt
dec
in
ret
add
or
push
mov
cmp
je
test
je
cmp
cwde
clc
mov
mov
jne
jg
sbb
xchg
int
mov
xor
jmp
add
enter
cmp
ss
jmp
mov
fistp
fs
mov
cmp
je
push
fs
mov
lahf
std
mov
jne
push
push
jmp
mov
push
mov
inc
mov
cmp
je
push
out
sub
stos
add
inc
and
or
adc
adc
test
push
inc
dec
pushf
adc
mov
dec
aas
or
jmp
jne
div
mov
mul
mov
and
mov
adc
sbb
inc
dec
call
pop
test
push
adc
adc
push
dec
and
adc
xor
adc
push
dec
pop
push
test
out
(bad)
adc
call
stos
jae
adc
push
and
sub
pop
or
fst
rol
ret
push
je
gs
jne
shl
jnp
inc
jp
and
sub
add
inc
push
mov
add
add
je
adc
ret
mov
mov
dec
jae
lock
cmp
jb
add
jmp
and
outs
xor
add
pusha
jle
ja
mov
adc
or
out
jnp
jno
leave
add
lea
(bad)
jg
dec
add
out
mov
lea
mov
mov
mov
(bad)
(bad)
(bad)
dec
add
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
push
mov
shr
lea
not
and
dec
jne
and
sbb
and
pushf
mov
sbb
loop
pop
add
(bad)
out
sbb
pop
or
add
push
or
hlt
mov
mov
lods
mov
push
or
aad
daa
pop
clc
and
hlt
jne
(bad)
push
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
inc
(bad)
(bad)
(bad)
cmp
(bad)
adc
cmp
je
mov
mov
cmp
jne
cmp
jae
neg
call
stos
or
and
add
fcmovnb
xor
dec
loopne
sbb
mov
xor
pop
mov
dec
add
dec
mov
add
repnz
in
sbb
icebp
into
pop
or
cmps
pop
push
jge
or
fimul
mov
dec
or
mov
or
jno
neg
or
(bad)
dec
or
mov
push
mov
inc
mov
mov
and
jne
ds
xchg
or
test
inc
mov
sub
data16
mov
pop
add
jno
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
rcr
and
xor
fbld
loope
add
es
sub
sti
add
call
pop
xor
push
or
loope
lds
sbb
mov
add
inc
adc
dec
inc
or
cmp
jne
and
adc
sub
cmp
jne
div
call
adc
loope
pop
shl
sub
(bad)
(bad)
xor
add
shl
mov
sub
enter
dec
lea
mov
test
or
jbe
fild
hlt
sub
cs
and
push
out
mov
in
sar
mov
arpl
lea
push
lea
sub
dec
xlat
dec
pop
and
and
stc
add
cmp
jge
or
shr
or
outs
mov
cmp
or
xor
shr
push
jmp
inc
clc
mov
pop
or
and
out
(bad)
mov
clc
and
or
jne
add
cmp
sbb
pop
jne
popa
ja
jns
fidivr
inc
or
es
jmp
cmp
jne
and
adc
or
aaa
jmp
mov
aaa
or
mov
sbb
sub
adc
adc
add
mov
sar
dec
adc
cmp
mov
push
hlt
inc
movs
inc
adc
mov
je
mov
mov
scas
aaa
mov
jo
and
call
cli
push
clc
and
push
dec
inc
or
mov
jne
mov
out
inc
cld
sbb
rol
and
or
je
mov
mov
out
and
retf
pusha
hlt
mov
jne
data16
(bad)
fistp
test
jl
shl
inc
jmp
mov
mov
mov
sub
(bad)
mov
clc
sar
dec
cmp
jle
pop
sar
aaa
icebp
cmp
cmp
jne
cmp
jge
add
pop
ja
iret
shr
xor
pop
in
and
mov
jg
out
add
pcmpeqw
mov
and
jmp
lea
scas
sbb
sbb
lea
out
sbb
(bad)
jne
sub
add
mov
(bad)
out
dec
mov
cmp
mov
jne
jp
mov
je
std
test
mov
mov
or
repnz
fisub
popf
fdivr
(bad)
jmp
push
add
(bad)
and
inc
cmp
mov
jne
and
or
or
mov
(bad)
inc
jmp
sub
retf
(bad)
sub
cld
lea
jmp
dec
or
cld
mov
clc
std
pop
loop
lock
lea
adc
cld
lahf
mov
test
dec
fisttp
mov
jne
cmp
cmp
shl
loopne
pop
outs
adc
or
aas
cmp
add
(bad)
cmp
jne
lea
je
mov
push
push
clc
mov
popa
sbb
cmp
add
push
and
iret
dec
inc
xor
cmp
add
mov
adc
add
add
add
adc
or
adc
call
stc
xor
jmp
or
mov
mov
cwde
mov
xlat
mov
or
mov
mov
push
push
push
mov
mov
fucomip
clc
or
fild
ret
push
imul
clc
pop
lea
mov
call
hlt
mov
push
shl
add
out
push
loopne
addr16
mov
push
rol
test
add
std
(bad)
inc
cmp
ja
lea
or
or
lea
cld
lock
fbld
mov
out
(bad)
(bad)
inc
sub
add
es
lea
lea
cmp
jbe
jb
mov
or
je
add
mov
mov
dec
lea
mov
mov
and
mov
mov
mov
inc
test
jp
dec
inc
jne
or
push
std
push
and
jmp
add
jecxz
inc
adc
xchg
(bad)
(bad)
(bad)
jge
mov
lea
sub
mov
and
shr
mov
add
dec
lahf
dec
cld
dec
cmp
pop
cmp
adc
jg
mov
vmwrite
jne
cmp
jg
mov
lea
push
pop
pop
mov
cmp
ss
or
push
jae
cmp
lea
pop
nop
icebp
sub
icebp
and
shl
dec
mov
dec
or
clc
dec
std
dec
add
jg
mov
sub
add
cmp
jle
mov
sar
dec
lea
dec
pop
mov
lea
mov
sub
out
(bad)
jg
pop
adc
add
pop
add
dec
or
pop
mov
jg
scas
add
mov
dec
pop
add
and
(bad)
xchg
cmp
or
lea
gs
jmp
pusha
jne
ins
and
xor
or
lds
sub
jmp
jg
lea
mov
mov
push
cmp
fwait
add
inc
cld
mov
in
mov
ud0
xchg
pop
or
jne
das
inc
dec
jmp
xor
nop
jmp
dec
cld
jmp
pop
test
jne
das
mov
sbb
mov
cmp
xchg
and
jne
pop
imul
jo
sbb
push
imul
pop
xchg
jns
jbe
(bad)
xor
xchg
ja
mov
ja
add
adc
jl
or
in
jnp
push
add
cmp
shl
sub
push
popa
in
js
jp
shr
or
retf
loopne
and
in
and
or
popa
dec
loopne
cdq
loopne
inc
adc
pop
mov
(bad)
cmp
call
push
push
jne
mov
push
imul
pop
mov
fwait
push
test
mov
mov
mov
cmp
fs
xor
les
jne
dec
mov
call
add
(bad)
xlat
inc
pop
mov
push
cmp
out
mov
cmp
sbb
pop
jmp
mov
mov
stc
mov
mov
dec
mov
(bad)
jmp
mov
mov
mov
xor
mov
cmp
setge
mov
mov
dec
inc
mov
jae
out
xor
sar
push
mov
push
or
add
cmp
jae
or
dec
mov
std
scas
(bad)
pusha
jmp
mov
jmp
mov
mul
je
push
adc
dec
pop
ret
mov
xor
adc
pop
out
xor
shl
add
push
inc
mov
mov
stos
dec
sar
test
ret
pop
ret
or
stos
push
push
adc
sub
or
adc
add
(bad)
mov
dec
add
jl
cld
push
je
or
dec
mov
mov
add
(bad)
jbe
and
dec
scas
(bad)
sti
or
jmp
sub
test
jge
and
je
cmp
(bad)
jns
push
push
lea
pop
out
inc
push
cli
test
jne
push
push
mov
pop
cmp
or
(bad)
push
(bad)
(bad)
(bad)
jg
xor
inc
and
mov
cmp
jbe
cmp
jb
fwait
add
or
test
jne
mov
mov
test
mov
push
or
and
addr16
dec
sar
lea
ret
adc
outs
mov
stc
or
inc
enter
sbb
movzx
add
and
cmp
push
push
hlt
sti
std
jne
inc
and
pop
icebp
and
mov
dec
mov
hlt
or
ud0
inc
mov
lea
sub
sub
sar
call
inc
loopne
add
cmp
mov
jae
mov
fdivr
retf
jl
cmp
jbe
push
dec
sbb
mov
mov
pop
add
mov
aaa
jb
push
pop
or
sbb
sbb
cmp
mov
jae
mov
cmp
jl
dec
cmp
lock
push
fmul
dec
cmp
inc
cld
lahf
(bad)
or
jge
jb
inc
cmp
mov
mov
mov
movs
dec
add
mov
jg
dec
push
cmp
jne
mov
cmp
and
call
mov
mov
sub
sub
sar
shl
add
cmp
stos
stos
jecxz
jne
add
or
test
loopne
div
(bad)
loopne
dec
mov
mov
push
hlt
mov
push
pop
cmps
jmp
push
ror
mov
or
or
mov
mov
cwde
fwait
adc
inc
pushf
sbb
add
dec
jne
mov
cmp
jae
ja
mov
cmp
je
sbb
repnz
and
mov
clc
inc
inc
or
inc
or
sub
xchg
lea
cmp
xchg
in
sub
or
mov
jne
std
sti
jmp
ror
shr
push
sbb
xor
call
fwait
clc
lds
repz
push
mov
lea
sbb
repnz
pop
jb
lea
jo
(bad)
dec
pop
add
sub
jmp
and
lea
mov
cmp
(bad)
jmp
(bad)
retf
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
lock
(bad)
fistp
pop
add
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
fwait
xor
jb
call
mov
jmp
movzx
add
or
lea
cmp
outs
inc
(bad)
push
lea
cmp
jae
push
jne
push
mov
add
inc
inc
jmp
lea
cmp
jae
sub
mov
push
out
sub
mov
sti
or
ss
(bad)
(bad)
sti
ret
sub
jb
mov
jmp
movzx
add
jmp
lea
aaa
(bad)
jg
int
inc
ror
imul
shl
sub
test
and
and
mov
jg
(bad)
(bad)
dec
clc
or
dec
adc
jl
sbb
mov
sub
mov
add
clc
out
dec
push
dec
jge
pusha
jae
adc
(bad)
(bad)
inc
lock
lea
cmp
jae
cmp
jne
inc
jmp
cmp
jne
mov
mov
aas
in
inc
mov
cmp
ja
cmp
jbe
sub
xor
mov
cmp
jne
inc
sub
clc
(bad)
cmp
add
inc
stos
arpl
or
push
fiadd
cld
test
je
jb
jg
add
add
rcr
sbb
sbb
ja
(bad)
loopne
mov
mov
cmp
push
pop
inc
in
fstp
sub
push
cmp
lea
add
jmp
pop
mov
mov
jne
lea
push
mov
xchg
cmc
add
or
sbb
gs
add
or
pop
cli
mov
adc
jl
add
push
je
test
je
inc
jmp
sbb
and
cld
sbb
outs
pop
add
in
dec
add
(bad)
call
add
or
leave
push
mov
mov
inc
test
mov
mov
cmps
jmp
test
add
mov
ins
addr16
dec
les
adc
mov
or
cmp
jl
cmp
jg
movsx
mov
call
loopne
or
mov
dec
add
pop
mov
daa
clc
aaa
cmc
ja
test
cmps
inc
add
rcl
ror
mov
pop
mov
stc
xchg
mov
dec
sub
je
sub
je
sub
je
dec
dec
je
or
mov
dec
cld
xchg
xchg
mov
inc
ror
add
add
loope
add
jne
pop
xchg
xchg
mov
ins
jge
(bad)
inc
add
fmul
mov
lea
jmp
fist
jmp
xchg
mov
enter
lea
clc
jnp
jg
xlat
xchg
clc
retf
je
cmp
pop
in
(bad)
push
sti
ins
je
cmp
jne
or
pop
mov
popa
or
cmp
jne
cmp
jne
inc
inc
or
xor
std
add
cdq
(bad)
call
sbb
inc
add
in
push
push
sbb
sbb
push
sub
out
out
sbb
dec
sub
push
and
cmp
jg
jge
ja
cmp
jg
mov
inc
call
add
or
test
add
mov
inc
cld
xor
jmp
clc
punpcklbw
jne
sbb
adc
pop
mov
loop
dec
mov
je
jne
mov
mov
cld
add
add
inc
mov
imul
test
jmp
mov
add
std
mov
mov
(bad)
dec
int
mov
jns
xchg
and
or
jge
out
adc
xchg
xchg
mov
lea
jg
enter
inc
lock
jge
mov
add
sub
sub
je
dec
je
cmp
mov
stos
cmp
sahf
add
mov
sti
mov
and
inc
je
(bad)
mov
and
je
movsx
shr
jecxz
and
int3
push
(bad)
lock
push
test
cmp
inc
hlt
push
or
xor
cmp
sti
addr16
sar
add
xor
add
clc
cmp
jle
mov
add
and
addr16
inc
shl
hlt
jmp
ss
sbb
lahf
and
jne
inc
mov
clc
mov
sbb
add
mov
mov
push
jge
outs
mov
das
dec
add
out
push
and
popa
je
pop
jne
push
call
mov
in
clc
sbb
aas
sub
inc
scas
test
xor
fsubr
or
clc
xchg
test
call
add
inc
fild
cmps
mov
push
out
or
rcl
test
shl
lock
dec
cld
mov
test
(bad)
add
shr
cs
sub
and
lods
cmp
push
test
xchg
add
je
outs
clc
call
int3
mov
add
mov
jmp
inc
and
(bad)
das
xor
push
cld
jmp
mov
and
outs
or
mov
jmp
mov
or
imul
jle
pop
or
je
cmp
outs
and
inc
adc
pop
cmovs
xbegin
and
shr
and
mov
and
and
loopne
xor
sbb
(bad)
call
jl
test
jae
neg
adc
mov
neg
mov
jmp
ror
mov
jne
fadd
push
ret
pop
mov
add
jmp
mov
inc
es
mov
inc
in
fadd
lea
mov
das
dec
test
jg
mov
je
mov
cdq
mov
mov
push
push
arpl
jnp
or
mov
test
fadd
jnp
cmp
jge
jmp
(bad)
jle
add
mov
dec
mov
jmp
push
sub
jg
add
je
mov
cmp
jne
jne
and
call
out
out
shufps
sbb
test
ret
jg
or
test
je
mov
ret
or
jmp
test
jg
out
add
and
sub
sub
test
add
jmp
jne
mov
jge
jmp
add
adc
jne
or
fist
pop
test
xor
adc
pop
xchg
xor
inc
cmp
dec
mov
inc
add
mov
push
inc
add
adc
jle
lea
push
pop
xor
cwde
mov
push
pop
mov
dec
jae
adc
jo
out
pusha
sbb
mov
clc
(bad)
jae
or
or
and
pop
mov
add
adc
clc
(bad)
dec
add
ret
push
mov
inc
add
add
inc
add
jb
rol
mov
xchg
dec
dec
add
push
mov
mov
mov
inc
arpl
or
pop
push
cmp
adc
or
or
ret
mov
mov
arpl
lods
sbb
adc
xchg
cmc
add
enter
jg
ret
cli
mov
push
push
test
jle
mov
and
movsx
addr16
add
push
inc
xor
xchg
ds
dec
push
loop
jg
xlat
aas
aaa
add
mov
arpl
mov
mov
add
in
mov
nop
push
add
jg
pusha
pop
push
pop
cmp
ds
push
adc
mul
outs
call
inc
test
je
fcom
cdq
fnstenv
fnstcw
je
inc
cmp
jl
sub
add
ret
or
xor
test
and
add
pop
jl
pop
adc
sbb
push
pop
mov
pop
pop
inc
pop
mov
or
or
(bad)
xlat
test
jne
jg
add
and
push
or
test
or
mov
sbb
adc
push
push
fsubrp
add
outs
mov
je
mov
test
jne
mov
push
cmp
je
mov
sar
mov
cmp
aam
leave
lea
call
clc
(bad)
jmp
mov
add
and
cmp
jne
or
mov
cmp
(bad)
jmp
jne
mov
repz
(bad)
out
(bad)
inc
add
pop
mov
push
mov
inc
mov
pop
ret
add
arpl
rcl
add
or
add
add
or
push
push
fucomip
dec
adc
leave
je
stos
jp
fisttp
mov
cli
call
mov
mov
mov
add
or
mov
je
or
je
jmp
inc
cmp
jb
cmp
ja
add
cmp
or
(bad)
cmp
jne
dec
outs
inc
adc
jne
xor
cmp
je
stos
push
out
jb
daa
call
sbb
test
mov
xor
xor
mov
mov
or
mov
je
push
push
jmp
or
je
inc
inc
push
and
(bad)
mov
ret
jne
dec
jne
xor
cmp
je
jne
shr
sbb
pop
sub
cmp
push
retf
shl
mov
push
push
cmp
push
mov
jmp
mov
in
sbb
mov
(bad)
ror
ror
pause
cld
dec
js
dec
dec
or
adc
jle
cmp
lock
add
xlat
cli
adc
sbb
cld
retf
enter
test
fwait
or
add
or
pop
xchg
into
bound
ret
cmp
push
pop
je
cmp
je
cmp
jne
enter
add
leave
xchg
call
push
or
inc
mov
test
jg
ins
pop
mov
jb
jge
push
mov
and
sar
pop
dec
cld
aas
jecxz
add
mov
and
test
je
leave
pop
inc
test
fcom
pop
jge
sar
cmp
dec
and
or
mov
data16
jmp
rcr
add
cmp
or
dec
push
push
dec
push
je
inc
push
push
inc
and
inc
push
idiv
into
jmp
sub
dec
je
arpl
mov
or
add
inc
mov
jnp
add
xor
add
sub
ror
popf
jnp
dec
pop
adc
mov
add
call
push
cmp
jne
add
and
das
ss
push
lods
popf
or
adc
dec
cld
je
loopne
lds
push
pop
mov
inc
or
cmp
jo
add
sbb
mov
dec
push
jne
mov
mov
jmp
(bad)
cmp
add
cmp
jge
lea
rol
jmp
add
or
add
mov
push
cmp
cmp
jl
jmp
mov
call
jge
or
xor
adc
fdivr
adc
push
rol
cmp
(bad)
or
mov
or
or
je
mov
push
mov
adc
ret
add
adc
or
add
hlt
cmp
int3
or
cmp
icebp
(bad)
cmp
push
push
jae
mov
and
movq
inc
ror
add
je
inc
leave
in
cmp
xlat
mov
pop
movaps
aaa
jl
test
dec
test
xchg
mov
mov
xchg
or
sub
or
retf
mov
jmp
leave
sbb
lahf
rcl
and
jo
xchg
ror
sahf
inc
fs
jb
adc
in
adc
rdpmc
(bad)
cmp
dec
add
adc
lock
lahf
retf
or
in
(bad)
in
push
or
dec
cmp
pop
and
add
fidiv
out
cmps
inc
(bad)
test
je
or
inc
cld
mov
jbe
or
ror
(bad)
fisubr
mov
(bad)
call
or
inc
mov
inc
mov
inc
mov
lea
shl
jl
mov
push
lahf
cmp
clc
lea
push
ret
pop
push
push
mov
push
test
lea
aaa
sahf
add
cmp
jl
mov
sub
cmp
jb
xor
mov
adc
adc
cmp
test
cmp
jne
mov
or
(bad)
jp
mov
xor
inc
or
(bad)
lea
push
fnsave
or
fs
hlt
call
clc
jmp
sub
push
outs
clc
jecxz
inc
sub
add
inc
je
add
cmp
psrlw
lock
pop
dec
adc
shr
inc
lock
jns
inc
leave
out
mov
adc
sbb
push
mov
je
cmp
jmp
enter
add
ins
and
cmp
out
add
mov
test
mov
jmp
sub
(bad)
(bad)
inc
add
dec
mov
mov
lea
test
out
sbb
add
push
push
mov
pop
repnz
xor
pop
add
adc
js
dec
xor
adc
and
hlt
std
dec
or
add
lea
mov
mov
mov
je
cmp
jne
cli
xchg
add
add
add
mov
jb
dec
clc
mov
push
cld
cmps
cmp
mov
jae
cld
inc
adc
call
inc
inc
(bad)
jg
addr16
cmp
jae
mov
inc
cmp
jne
add
jmp
sti
(bad)
add
retf
inc
jmp
push
rcl
fs
jb
or
push
rcl
inc
and
pop
stc
dec
je
mov
call
inc
call
pop
inc
mov
inc
mov
jmp
cmp
jne
cmp
call
add
jmp
push
push
aaa
mov
sti
sbb
inc
mov
ja
cmp
jmp
pop
je
push
test
in
mov
sbb
or
sub
mov
or
inc
adc
scas
sub
sub
push
mov
mov
test
mov
js
loope
mov
jge
xor
aam
and
(bad)
movzx
js
push
lds
shl
clc
es
dec
cld
push
lea
cmp
lods
call
xchg
lods
or
inc
add
add
jns
call
mov
adc
out
cmp
jne
and
jmp
repnz
jmp
add
(bad)
dec
loopne
pop
hlt
mov
mov
movzx
or
nop
xchg
les
aaa
test
ret
pushf
add
adc
inc
(bad)
(bad)
call
cwde
inc
ror
cmp
jg
je
cmp
je
cmp
je
cmp
ffreep
sti
dec
leave
sti
dec
jne
inc
jmp
cmp
jne
cmp
lea
sbb
cld
add
inc
and
idiv
jg
lock
inc
jmp
cmp
je
cmp
ss
or
inc
icebp
jmp
(bad)
(bad)
mov
sti
jmp
dec
dec
cmp
je
cmp
mov
(bad)
out
jne
jne
adc
add
fisttp
inc
aam
gs
adc
push
cmp
je
cmp
je
or
jmp
mov
jg
sti
add
mov
or
cmp
mov
je
cmp
je
cmp
je
sbb
mov
adc
outs
jmp
adc
inc
rol
imul
inc
in
xor
cmp
je
cmp
je
cmp
jg
clc
fstp
je
fs
sbb
jle
cmp
jo
test
add
jae
mov
test
popa
stos
je
fs
mov
cmp
jne
jmp
cmp
cmp
sbb
mov
or
add
pop
pop
dec
(bad)
out
(bad)
ja
xlat
lods
imul
cmp
sub
xchg
je
cmp
inc
or
mov
add
js
add
jg
xchg
pop
and
dec
hlt
in
inc
mov
inc
dec
idiv
pop
mov
dec
add
sub
fild
push
xchg
push
mov
and
jne
sti
gs
cmp
jne
sub
movs
jbe
aaa
sbb
inc
es
sub
pusha
sbb
stos
xsave
adc
loope
movs
sar
jmp
lahf
inc
jle
cld
imul
test
push
fisttp
test
push
out
or
inc
int3
and
lea
inc
repz
dec
xor
mov
not
inc
hlt
mov
jbe
xor
je
dec
jb
push
mov
call
push
and
cmp
or
push
lods
xchg
adc
std
(bad)
call
je
movzx
cmp
jne
ja
dec
mov
mov
cli
xor
mov
inc
jle
sub
cmps
cwde
mov
lea
cmps
jns
sbb
ds
and
or
push
mov
arpl
or
aas
cmp
jne
cmps
mov
sti
js
je
cmp
jbe
fcmovnbe
sti
(bad)
js
inc
in
imul
test
aas
loope
cld
cmp
push
pop
adc
xchg
push
jmp
lods
jae
fcomip
mov
call
inc
pushf
xchg
call
and
jge
jnp
push
cmp
jne
mov
inc
mov
push
(bad)
jmp
jmp
mov
mov
cmp
je
inc
cmp
jne
cmp
(bad)
inc
inc
cmp
jae
mov
jmp
mov
mov
cmp
ja
movzx
movzx
sub
inc
mov
sub
and
mov
shl
sbb
xchg
std
dec
call
movzx
mov
mov
push
jmp
cmp
xor
sti
add
add
(bad)
adc
mov
push
mov
sbb
xor
adc
test
push
clc
xchg
and
imul
pop
pop
je
mov
push
pop
aas
cld
(bad)
dec
mov
mov
sar
movsx
xor
test
je
into
jne
cmp
loopne
jmp
leave
inc
and
inc
jbe
dec
add
add
pop
mov
(bad)
std
sub
dec
cld
lea
iret
retf
push
mov
inc
inc
jmp
sbb
mov
add
(bad)
out
cmp
scas
cmp
je
sti
jo
gs
in
je
iret
or
mov
je
and
stos
je
pop
mov
mov
jne
cwde
enter
add
pop
and
inc
inc
out
stos
cmps
jmp
test
xchg
cmp
jne
pushf
push
xchg
push
cvtps2pi
push
sub
and
or
call
push
fsubr
daa
retf
mov
inc
fmul
mov
jmp
dec
(bad)
sbb
enter
jne
cmp
jge
mov
cli
dec
(bad)
dec
add
punpckhdq
push
call
ins
pop
gs
add
jg
inc
rcr
push
fsubr
add
ret
sub
sar
test
jl
inc
jbe
std
(bad)
fdiv
fadd
(bad)
xor
(bad)
xchg
adc
mov
aas
cmp
je
(bad)
(bad)
(bad)
jns
jbe
ins
shl
jmp
lea
shl
jmp
lock
or
cmp
aaa
push
shl
or
jecxz
push
repnz
lea
je
stos
js
jno
pop
std
add
fild
add
push
(bad)
mov
aad
mov
clc
je
dec
mov
mov
mov
mov
ja
inc
pop
jge
add
je
mov
jmp
mov
inc
nop
mov
jmp
inc
or
jne
jmp
jmp
inc
cmp
outs
or
mov
sbb
pop
movzx
inc
cmp
and
ficom
jge
sbb
jne
fild
cld
cmp
jne
mov
ja
test
call
pop
shr
(bad)
jmp
mov
in
cld
test
cmps
inc
int
jmp
cmp
out
or
inc
adc
les
cli
adc
cmp
add
adc
xchg
aad
add
push
jle
or
adc
leave
fist
jo
add
fild
or
and
dec
js
mov
lock
or
jbe
ret
cwde
cwde
aas
pop
ret
mov
inc
add
mov
and
add
sub
stos
pop
jno
mov
mov
inc
jge
psubb
mov
jne
clc
aaa
cld
pop
xchg
push
mov
push
push
dec
mov
mov
test
mov
pop
test
pop
add
outs
mov
int
adc
test
jnp
mov
mov
(bad)
xchg
ret
gs
and
or
popf
add
push
and
or
push
or
jbe
ja
aas
push
jne
rcr
or
push
(bad)
call
ds
lea
mov
mov
dec
test
mov
scas
or
sbb
jmp
cmp
je
mov
mov
shl
add
add
je
push
push
outs
std
jg
loop
inc
dec
pop
mov
mov
jmp
push
lea
pop
inc
(bad)
inc
pop
je
or
jmp
mov
sub
pop
mov
enter
push
pop
or
inc
jl
push
cmp
aaa
mov
dec
push
push
mov
or
test
scas
inc
jle
inc
fs
mov
(bad)
(bad)
jmp
call
sar
mov
mov
add
mov
inc
inc
std
lock
mov
rcl
dec
(bad)
in
or
imul
add
add
or
and
mov
pop
pop
lea
mov
je
adc
adc
mov
je
lea
pop
cmc
pop
imul
test
add
mov
not
sub
mov
jmp
jne
cmp
outs
add
cmps
dec
add
adc
jp
pop
jmp
pop
je
push
call
or
mov
jo
inc
add
out
ret
push
push
push
push
pop
fidiv
gs
std
(bad)
out
call
fstp
ret
jne
lea
push
push
pop
push
jge
mov
push
add
jmp
sbb
mov
inc
xchg
push
call
or
pop
mov
inc
sbb
sbb
jo
jne
addr16
test
xchg
dec
xor
mov
cmp
cmp
sbb
je
out
mov
scas
cli
call
adc
ret
je
mov
lea
mov
mov
hlt
mov
push
ret
mov
test
dec
cld
(bad)
cmp
je
push
push
pop
jne
or
jg
push
adc
xchg
movs
push
sbb
call
int3
inc
pop
nop
adc
jne
inc
or
mov
adc
inc
xor
and
mov
je
adc
add
sbb
repnz
add
sbb
mov
mov
rol
add
or
pop
mov
pop
push
aam
(bad)
mov
mov
xor
lea
pop
xchg
add
inc
loopne
das
(bad)
aas
pop
and
cli
or
lea
in
add
inc
(bad)
(bad)
jmp
div
rol
stc
(bad)
je
dec
dec
cmp
jae
mov
mov
mov
mov
inc
dec
jmp
mov
add
jo
int3
das
outs
inc
(bad)
or
xor
repnz
cmp
and
sub
push
mulps
mov
inc
into
sbb
push
push
push
pop
xor
push
mov
popf
or
sub
add
or
push
mov
and
xor
push
add
push
add
lock
cmp
jne
pop
imul
sbb
and
icebp
inc
add
(bad)
sbb
mov
(bad)
imul
data16
sti
cmc
out
cmp
pop
mov
je
mov
imul
aaa
pop
in
cmp
(bad)
adc
push
sbb
shl
sub
mov
imul
mov
lea
mov
pop
push
push
push
mov
jmp
push
push
mov
(bad)
add
cmp
jne
mov
add
or
out
in
iret
cmp
push
out
dec
cmp
dec
cli
cmp
test
fsubrp
or
mov
retf
mov
shl
rcr
je
sbb
cli
add
sub
sub
mov
or
sbb
test
lds
scas
push
int
int3
dec
push
push
dec
loopne
pop
(bad)
or
test
les
and
cmp
jne
cmp
or
inc
push
add
pop
mov
mov
imul
inc
mov
or
ret
jl
cmp
adc
(bad)
cmp
inc
jmp
cmp
jne
sub
jae
lds
add
mov
lea
nop
add
daa
int3
shl
pusha
inc
je
in
push
mov
jg
mov
call
out
int
or
mov
pop
jno
and
jmp
jmp
lds
mov
push
call
push
cmp
adc
xor
(bad)
jmp
into
pop
mov
adc
pop
mov
cmp
icebp
jne
cmp
js
cmp
sub
jbe
push
cmp
push
push
pop
jb
jne
addr16
sbb
sbb
(bad)
fdivr
pop
xchg
push
push
push
jmp
sbb
push
sti
and
out
adc
push
push
push
mov
movzx
scas
mov
adc
push
adc
pop
jne
addr16
push
sbb
sub
sbb
push
mov
sbb
pop
pop
push
push
mov
pop
inc
jmp
daa
push
ins
mov
push
and
fisttp
add
push
push
push
push
cmp
jbe
ror
mov
mov
dec
sbb
sar
cmp
jl
adc
out
jg
push
cmp
jge
mov
cmp
jl
cmp
jg
cmp
jle
sub
les
add
add
imul
inc
add
cmp
jne
xor
cmp
sar
xor
jge
add
adc
test
xor
adc
lock
shl
mov
or
mov
push
imul
pop
lea
push
sar
mov
push
add
lea
pop
cdq
mov
(bad)
push
dec
push
sbb
push
imul
sub
add
lea
jmp
or
add
cmp
jne
fwait
jne
mov
test
push
mov
loop
into
jle
sub
jmp
mov
out
or
cld
ja
jae
jle
dec
test
mov
mov
ss
inc
sub
cld
cmp
jle
add
mov
pop
push
sti
push
rcr
add
jg
lgdtd
or
add
adc
cmp
jl
sub
inc
adc
sbb
call
rol
call
inc
movzx
mov
test
fwait
cli
adc
sbb
or
je
movzx
sbb
dec
add
inc
and
jmp
add
dec
push
push
jne
push
and
inc
enter
ret
call
or
push
sbb
sub
cld
ficom
push
outs
loopne
out
notrack
mov
inc
push
call
in
fisub
mov
push
mov
sbb
jbe
adc
inc
cmp
xor
jmp
or
add
sbb
sub
inc
out
not
and
shl
or
lock
dec
std
sar
ins
(bad)
or
cmp
fdivr
idiv
mov
xor
fwait
cli
cmps
jb
gs
push
test
add
cmp
ret
add
add
mov
or
test
or
add
ret
and
add
add
inc
dec
movzx
push
mov
mov
or
mov
(bad)
out
mov
je
pop
or
add
(bad)
jne
or
jmp
mov
(bad)
or
and
pop
je
cmp
jne
inc
add
jmp
add
add
(bad)
pop
pop
test
pop
je
add
xchg
adc
sti
or
rcl
mov
add
mov
out
and
ret
mov
add
mov
sbb
into
je
pop
sub
mov
or
or
mov
and
mov
or
add
add
or
jmp
or
pop
dec
add
pop
je
mov
or
and
pop
(bad)
cmp
or
cdq
idiv
pop
mov
sub
or
shl
not
test
mov
sbb
cmp
jge
lea
cmp
jne
mov
mov
mov
call
xor
and
fisttp
cmp
push
push
pop
sub
out
mov
push
push
fcmove
sbb
cdq
mov
inc
push
sub
test
and
or
mov
out
movaps
and
pop
add
add
mov
ja
aas
inc
xchg
inc
or
add
mov
sub
pop
loopne
test
loop
adc
add
mov
scas
pop
jne
ss
out
cld
pop
pop
in
push
pop
and
mov
inc
cmp
jge
mov
lods
loop
or
enter
xor
rep
mov
mov
(bad)
dec
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
out
adc
shl
sub
mov
xor
and
add
mov
cmp
lods
into
sar
or
cdq
mov
mov
add
stc
mov
or
(bad)
dec
add
(bad)
(bad)
mov
mov
and
fidiv
mov
inc
or
pop
movs
mov
add
shl
dec
in
jne
mov
faddp
(bad)
jge
push
pop
mov
push
pop
pop
cmp
jl
ror
out
dec
adc
xor
and
dec
sub
jns
cwde
into
dec
mov
movzx
(bad)
mov
das
add
mov
mov
mov
mov
movzx
mov
(bad)
(bad)
mov
loopne
cmp
mov
jne
lea
xor
mov
mov
adc
outs
pop
scas
mov
adc
in
mov
pop
add
clc
push
clts
inc
add
je
inc
mov
mov
lock
(bad)
sub
cmp
jge
sbb
adc
cmp
fdivr
sub
mov
lock
push
pop
hlt
push
mov
or
mov
or
push
inc
inc
push
xchg
cmp
adc
mov
fistp
push
adc
ja
or
cmp
push
mov
mov
idiv
(bad)
out
jle
add
mov
xor
shr
or
jg
sar
aaa
in
loop
mov
sbb
sub
icebp
or
cmp
jbe
fcomip
jne
mov
clc
mov
mov
jmp
cmp
jne
adc
cmp
leave
ret
push
add
pusha
ja
push
(bad)
inc
push
shl
and
push
clc
popa
or
push
push
dec
gs
cld
mov
leave
les
dec
sub
xchg
mov
push
mov
add
(bad)
mov
jle
mov
test
mov
jle
mov
xor
(bad)
dec
je
movsx
inc
jmp
push
pop
mov
inc
dec
jne
or
test
jl
cmp
jl
dec
cmp
jne
mov
jmp
(bad)
push
shl
inc
jmp
xchg
movs
sub
adc
or
inc
sub
push
lea
adc
(bad)
call
ret
pop
lea
pop
lea
push
push
push
out
mov
movs
movs
mov
movs
sbb
mov
inc
or
cld
dec
lock
mov
movsx
mov
(bad)
pusha
ins
int3
hlt
fadd
(bad)
call
push
jg
cld
dec
mov
mov
mov
mov
jmp
shl
iret
sbb
movzx
std
and
lock
mov
je
cmp
je
lea
fcom
add
sub
(bad)
outs
cli
adc
shl
push
mov
mov
mov
jmp
lea
sub
call
mov
shr
shl
or
or
shr
(bad)
jmp
or
test
jne
mov
add
mov
shr
or
lea
mov
aas
out
js
rol
jmp
or
iret
mov
scas
pusha
ret
dec
or
leave
ret
inc
add
aad
inc
sub
mov
mov
mov
push
ss
(bad)
mov
je
dec
je
dec
and
dec
mov
pop
dec
jne
push
jmp
(bad)
hlt
(bad)
(bad)
mov
push
jmp
push
jmp
push
jmp
push
pop
lea
push
outs
adc
rcr
(bad)
inc
cmp
je
cmp
je
movs
jmp
cmp
(bad)
dec
adc
rol
loopne
dec
or
loope
addr16
add
and
call
cmp
pop
pop
je
outs
or
add
sbb
jne
add
push
fisttp
dec
cwde
sub
mov
xor
gs
sbb
push
push
pop
jne
push
mov
mov
adc
inc
je
mov
mov
inc
push
jl
test
mov
jne
cmp
jle
push
inc
push
add
sar
adc
pop
sbb
adc
or
push
mov
mov
scas
mov
hlt
xor
pop
call
scas
inc
mov
(bad)
jne
dec
mov
fdivr
and
repz
push
jne
cli
cmp
jne
fadd
mov
jge
jle
mov
cmp
jg
inc
add
inc
lea
push
push
push
(bad)
jg
call
jge
add
lea
cmp
je
add
(bad)
dec
je
mov
mov
cmp
jb
cmp
jbe
inc
enter
clc
out
add
movs
push
xor
movs
loopne
jle
popf
xchg
mov
or
retf
jnp
data16
loop
rcl
push
sar
adc
imul
jle
in
ret
je
icebp
push
mov
out
mov
popf
xchg
ror
mov
push
pop
test
or
je
bsr
mov
out
mov
sbb
jne
jae
fidiv
sub
jge
rcl
xchg
pop
cld
mov
cmp
pop
(bad)
call
mov
sti
je
push
pop
and
jae
dec
add
and
and
mov
mov
push
mov
ja
and
lea
je
imul
mov
mov
dec
test
jne
or
jne
sub
jecxz
cmp
push
pop
lea
adc
add
je
xor
xor
ins
and
inc
or
adc
cmp
pop
fisttp
movs
mov
les
mov
lock
push
ins
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
push
popf
and
stc
or
stc
or
stc
or
out
add
mov
inc
(bad)
push
cmp
ja
test
sti
xor
sti
cmp
push
loop
ror
pop
push
(bad)
(bad)
mov
mov
je
dec
dec
je
sub
jne
loopne
sub
dec
push
mov
sti
outs
xchg
jge
jmp
dec
mov
jl
push
and
lods
jle
mov
jg
(bad)
(bad)
sti
sub
sti
sub
xor
sti
inc
jle
inc
jle
cmp
push
cmp
jnp
gs
std
outs
pop
sti
(bad)
push
pop
push
jl
push
jle
ja
mov
jne
jne
dec
adc
and
add
cmp
ret
fsub
ja
loop
add
push
shl
aaa
add
mov
mov
cld
sbb
mov
sub
inc
mov
outs
adc
inc
sub
mov
jne
out
mov
ins
sub
pop
mov
jne
jbe
pusha
arpl
dec
daa
repz
aas
fist
inc
sbb
mov
dec
clc
mov
mov
mov
fbld
je
hlt
sti
ret
neg
jno
jne
jle
punpcklbw
lock
mov
jmp
lea
xor
and
and
sti
(bad)
cmps
add
push
jmp
mov
int3
add
out
div
jl
outs
mov
jb
or
jl
movq
push
pop
dec
(bad)
(bad)
not
rol
pop
lea
and
add
adc
dec
jne
push
pop
pop
pop
cs
or
cmp
sbb
loop
je
pusha
out
pop
(bad)
mov
mov
push
pop
dec
xor
je
jne
cmc
inc
rol
mov
fsubr
dec
aaa
push
lock
std
ror
add
add
and
push
pop
cmp
jbe
cmp
jl
inc
jp
inc
cmp
mov
int
xor
add
xchg
les
jo
(bad)
ds
sbb
lea
(bad)
movs
push
aam
add
inc
in
les
dec
call
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
mov
mov
pop
adc
or
sub
pusha
xor
mov
sub
xor
mov
cmp
fadd
out
loopne
call
jl
shr
push
(bad)
(bad)
inc
mov
mov
mov
and
mov
shl
shl
xor
jmp
stos
or
add
jmp
inc
dec
add
cmp
push
push
add
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
test
inc
add
xor
xor
add
aam
add
aad
add
xlat
jge
test
(bad)
inc
add
pop
rol
mov
mov
popa
xor
test
call
add
loopne
adc
xchg
nop
jge
and
icebp
daa
jecxz
test
sar
push
and
inc
jl
test
pop
je
and
mov
cmp
test
jne
pop
ret
and
adc
data16
jmp
ja
push
mov
pop
pop
ret
lea
and
push
push
add
aaa
inc
test
inc
rol
lds
loope
retf
(bad)
jnp
inc
sbb
enter
or
push
or
or
push
shl
out
ror
dec
or
mov
jmp
or
lea
sbb
push
rcl
iret
mov
and
xchg
or
mov
adc
sub
enter
popa
sub
enter
add
add
xor
(bad)
jmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
jae
cmp
push
call
or
xor
jmp
sahf
mov
or
mov
pop
and
lods
jae
stos
cmp
push
je
mov
pop
ss
clc
inc
push
cmp
mov
addr16
mov
lea
cmp
shl
add
cmp
add
or
jne
push
pusha
or
jne
lea
hlt
or
or
push
inc
inc
icebp
idiv
xchg
push
push
pop
mov
lea
dec
repnz
sbb
pop
lea
test
cmp
sahf
or
ret
inc
fstp
or
mov
mov
or
add
and
mul
mov
je
cmp
mov
loope
ins
add
sbb
rol
dec
mov
sbb
cmp
je
nop
sbb
mov
mov
push
jmp
mov
dec
mov
dec
mov
jle
cmp
or
call
leave
cmp
setne
push
dec
push
push
nop
push
xor
test
sub
popf
pusha
sbb
fild
jb
cmp
jne
mov
test
xor
sar
push
aas
lds
jmp
xchg
ret
ins
(bad)
shl
ret
mov
xor
loop
aaa
shl
or
push
je
inc
or
add
test
add
xor
jne
mov
add
push
cmp
jne
add
inc
mov
es
inc
inc
adc
push
mov
cmp
je
adc
dec
sar
out
pop
pop
ret
adc
inc
and
mov
add
loope
add
loop
fwait
jb
xor
lea
cmp
jb
cmp
jae
or
test
mov
hlt
sub
adc
pop
or
int3
cmp
jnp
(bad)
adc
dec
and
push
pop
or
ja
(bad)
fist
movs
add
mov
add
mov
lea
inc
aad
inc
jmp
dec
or
shr
shl
sahf
(bad)
jg
sub
sub
add
repnz
shl
shr
or
mov
shr
or
pop
mov
mov
ret
adc
or
ja
fwait
xor
mov
mov
cld
cmp
add
push
or
push
jge
repz
movs
movs
push
(bad)
daa
loopne
push
cwde
lea
fild
scas
fxch
cmp
rol
(bad)
cmc
movsx
adc
cli
(bad)
cmp
inc
dec
adc
xor
pop
cmp
jne
mov
jg
inc
in
dec
call
lock
shr
or
add
aas
hlt
out
scas
mov
mov
jmp
mov
jne
ror
inc
add
pop
jmp
mov
add
dec
mov
in
sbb
mov
push
mov
mov
mov
(bad)
test
push
mov
mov
dec
shl
jmp
in
out
sti
mov
add
jne
je
mov
jmp
add
test
jne
(bad)
inc
jge
jne
and
sbb
inc
add
mov
jg
rcr
rol
(bad)
jne
push
and
add
cmp
mov
pushf
maskmovq
not
jne
push
pop
mov
xchg
je
or
cmp
(bad)
mov
sbb
xor
adc
inc
not
inc
pop
ins
int3
pop
addr16
sub
push
jmp
movzx
mov
xchg
push
jmp
dec
add
shr
data16
push
xchg
push
lea
mov
imul
mov
lea
mov
cmp
mov
inc
repnz
neg
pusha
cmps
(bad)
scas
pop
inc
shr
cmp
jb
out
(bad)
jg
in
sbb
dec
pop
pop
test
mov
je
mov
xor
add
test
jg
into
xor
cmp
jle
push
mov
pop
movzx
sub
jl
add
inc
call
push
adc
sbb
jne
test
mov
pop
neg
and
mov
dec
pop
jne
lea
test
push
mov
mov
jge
movs
movs
inc
test
mov
test
int3
cmp
mov
mov
adc
(bad)
push
dec
sbb
dec
adc
add
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
jmp
pmaddwd
mov
dec
jmp
cmp
jae
inc
inc
inc
sub
sub
ret
add
rol
mov
neg
das
or
cmp
jne
dec
jmp
sub
add
adc
cmc
xor
rcl
jbe
mov
xor
dec
(bad)
jmp
inc
in
sub
mov
mov
mov
push
clc
and
and
and
jg
adc
mov
jae
in
jg
sub
cmp
ja
ja
imul
test
mov
arpl
fild
or
push
jne
shr
mov
shl
push
jp
aad
jg
cmp
jne
cmp
jne
mov
mov
mov
shr
icebp
mov
loopne
mov
lock
(bad)
inc
rol
add
lea
mov
xchg
mov
mov
call
dec
hlt
movzx
movzx
imul
mov
add
dec
je
cld
push
push
push
nop
add
push
dec
sbb
in
clc
add
dec
(bad)
(bad)
sti
(bad)
call
cld
add
inc
lock
pop
jg
add
sub
sbb
inc
out
jne
push
inc
cwde
addr16
inc
jb
jmp
push
cmp
push
sub
mov
add
mov
test
inc
inc
inc
(bad)
dec
pop
jne
cmp
(bad)
dec
into
fadd
xor
inc
fsub
cmp
(bad)
inc
add
cmp
jne
and
cmp
jne
and
sub
(bad)
(bad)
out
(bad)
jg
jne
xor
inc
out
sub
inc
jmp
inc
jmp
mov
xor
fimul
(bad)
mov
and
(bad)
dec
add
push
mov
jmp
neg
sbb
mov
fbld
(bad)
add
add
and
mov
std
arpl
or
mov
nop
jmp
clc
pop
(bad)
pusha
cmp
je
jge
mov
jnp
cmc
in
sub
push
adc
and
jmp
inc
fiadd
add
sar
and
cmp
je
(bad)
loop
(bad)
out
mov
cmp
add
or
jge
movs
movs
movs
dec
lea
push
ffree
leave
pusha
mov
mov
dec
or
jno
push
push
ror
fcom
stc
lea
(bad)
jg
not
cmp
jbe
cmp
jae
dec
fnstsw
add
neg
sbb
not
and
inc
ror
pop
leave
ret
mov
test
je
dec
loop
mov
push
mov
call
ret
mov
push
push
fbstp
call
add
jecxz
adc
pop
test
mov
hlt
div
call
push
mov
push
adc
arpl
out
pop
mov
push
or
out
(bad)
jne
push
call
cmp
jne
ds
sar
jg
pop
ret
push
pop
xchg
jae
add
push
push
add
xchg
fsubr
stos
loopne
mov
test
push
in
jmp
jge
mov
and
add
add
sub
or
test
neg
aam
push
jbe
sbb
inc
js
xor
or
mov
sbb
pop
fadd
ss
and
push
mov
push
out
aad
and
push
aas
test
popf
sahf
xchg
xchg
outs
mov
add
mov
dec
call
ret
jmp
jae
mov
jne
push
push
in
test
xor
jg
imul
push
xchg
cmp
push
pop
xchg
push
jg
push
out
push
add
sbb
aad
push
or
dec
add
pusha
add
ds
mov
adc
jge
inc
mov
sub
sbb
popf
sbb
sub
xchg
adc
or
push
cdq
sahf
xchg
xchg
push
jno
xor
pop
push
test
sbb
or
cli
(bad)
jne
dec
jne
jmp
cmps
jmp
dec
add
xor
dec
stos
je
cmp
je
push
call
mov
add
xor
xchg
pop
dec
add
add
icebp
mov
dec
and
jl
xchg
cmp
inc
test
ss
aad
ret
dec
pop
mov
pop
nop
lea
push
push
mov
push
lock
adc
add
push
sub
nop
dec
test
jge
xor
mov
cmp
jl
sbb
cmp
jns
test
(bad)
fbstp
push
mov
push
pop
sub
push
popf
test
sub
push
push
mov
cli
jl
mov
jnp
(bad)
jbe
hlt
cmps
xchg
dec
or
jne
cli
push
sbb
push
scas
jge
mov
leave
nop
mov
lock
fistp
mov
cmp
mov
or
mov
call
ja
add
fcomp
dec
adc
or
outs
js
dec
dec
clc
jg
inc
or
rcl
cmp
add
imul
sub
sbb
and
adc
lock
push
out
cmp
push
sti
add
aas
and
adc
movs
mov
pop
mov
cmp
je
js
test
xor
xor
cmp
jne
add
jnp
std
mov
adc
xor
and
sbb
or
jne
cmp
jne
adc
xchg
mov
je
lds
call
push
rcr
sbb
dec
clc
jmp
xor
cmp
jne
adc
sub
loopne
jo
jno
pop
sub
aaa
jo
addr16
dec
add
or
and
cmp
add
inc
hlt
enter
inc
jmp
sbb
jae
fist
dec
mov
pop
sub
outs
and
shl
sbb
fld
add
sbb
add
(bad)
cmp
add
movsx
or
mov
arpl
push
ror
bound
inc
test
mov
adc
ror
xchg
pop
ficom
ins
pop
(bad)
cmp
test
mov
clc
imul
add
jno
call
and
sub
je
or
fnsave
add
push
push
mov
cs
fild
jae
je
pusha
jo
jl
je
sub
je
add
jne
inc
pop
add
sub
sub
in
std
div
jmp
push
push
pop
jmp
or
jne
push
cmp
push
(bad)
pop
jmp
push
call
cmp
jge
mov
test
je
cmp
jl
mov
cmp
movmskps
add
jge
(bad)
fild
cmp
cmp
jle
jae
frstor
mov
pusha
push
push
add
mov
inc
clc
fstp
push
push
push
push
push
sbb
add
idiv
add
jmp
sub
push
sub
je
dec
je
dec
je
sub
out
(bad)
add
add
and
add
and
add
cmp
jl
mov
loope
ja
jmp
test
je
sbb
jmp
add
jmp
jmp
inc
clc
pop
or
test
fcomp
clc
rcl
xchg
push
(bad)
ss
or
sbb
dec
mov
push
pop
cmps
adc
inc
cmp
adc
scas
xchg
cmps
je
clc
(bad)
inc
ret
retf
lea
mov
add
mov
sbb
cmp
adc
aaa
inc
adc
or
test
mov
je
and
or
xlat
pop
jns
mov
je
(bad)
or
mov
adc
adc
in
faddp
pop
mov
and
mov
or
cmc
push
lds
inc
cld
push
push
mov
data16
and
pusha
mov
inc
mov
xlat
fisttp
jne
jnp
lock
popf
or
sahf
call
std
mov
mov
push
push
push
mov
adc
cld
add
push
enter
dec
add
add
or
inc
lock
ins
ror
(bad)
add
mov
mov
ror
pop
jge
inc
adc
and
call
out
or
inc
pop
dec
enter
mov
daa
mov
inc
sbb
or
hlt
mov
or
fnstenv
or
or
inc
cmp
(bad)
adc
std
dec
inc
retf
add
push
push
push
cmp
clc
(bad)
cmp
je
sbb
pop
sti
(bad)
push
push
lock
mov
jns
scas
pop
shl
ja
pop
mov
push
inc
jmp
mov
mov
sub
inc
enter
and
inc
jg
test
push
clc
pop
movs
outs
(bad)
icebp
push
push
sub
inc
sub
add
push
sbb
jbe
sub
jle
inc
inc
mov
mov
jge
or
into
std
sbb
pusha
mov
ins
fiadd
mov
or
repz
call
hlt
aas
ret
lea
xchg
mov
je
mov
jmp
add
pandn
pop
sbb
cmp
mov
pop
call
arpl
sbb
xchg
cmp
lods
into
cmp
dec
pusha
call
js
scas
sub
into
mov
les
pop
pop
pop
bound
(bad)
sbb
push
pop
pop
pop
ret
mov
jmp
adc
dec
in
dec
mov
or
inc
sbb
sbb
stos
(bad)
mov
or
cmp
and
xlat
imul
add
dec
lock
(bad)
(bad)
ss
push
push
fs
add
jae
mov
mov
and
stc
fucomp
or
or
fsub
inc
js
add
inc
in
push
push
push
pop
sti
mov
ja
inc
out
cwde
sbb
sbb
or
dec
in
push
call
stos
xchg
loope
repz
loope
xor
jae
repz
fsubr
js
je
mov
mov
rol
outs
clc
fnstcw
mul
fild
mov
inc
xor
ret
loope
jmp
adc
push
mov
adc
scas
sbb
sub
es
sub
aaa
aam
inc
or
cmp
bound
sub
out
out
push
cmp
movs
sub
or
js
push
mov
call
adc
pop
or
inc
shl
jmp
mov
push
es
sbb
inc
mov
push
cmc
loope
add
push
mov
loope
jmp
push
push
push
jmp
inc
add
jmp
or
mov
add
idiv
aaa
push
jge
mov
push
mov
lea
pop
mov
shl
inc
cmc
rep
mov
xor
loopne
and
or
scas
ret
mov
inc
jne
mov
out
clc
push
sub
push
pop
or
add
call
push
push
mov
mov
pop
mov
ja
loope
mov
outs
or
mov
cmp
pop
ins
aaa
add
dec
jo
mov
inc
maxps
scas
js
test
shl
hlt
(bad)
dec
sbb
repnz
icebp
aad
inc
cmc
mov
inc
dec
jb
popa
imul
mov
xor
into
jb
or
test
je
mov
jmp
pop
call
push
mov
mov
add
ret
or
xchg
cs
(bad)
sar
jl
cmp
je
cwde
add
pop
fdiv
int3
mov
mov
cmp
je
(bad)
fdiv
push
xchg
push
or
mov
(bad)
mov
or
push
cmp
jne
mov
push
call
push
dec
push
mov
xor
and
leave
jae
adc
adc
or
loop
and
jne
mov
add
cs
push
push
jecxz
cmp
push
sbb
cmp
cld
mov
add
add
jb
hlt
test
adc
mov
push
cmc
pop
rol
push
xlat
retf
or
out
cmp
jne
jmp
cmp
lahf
jne
ret
je
cmp
cvtps2pi
and
imul
dec
cmp
dec
adc
push
shr
push
movzx
push
dec
jne
mov
out
loopne
nop
fcomp
xor
jmp
cmp
dec
adc
pop
sti
jmp
push
bnd
cmps
adc
adc
std
and
(bad)
push
pop
xor
mov
adc
call
rol
add
sub
adc
scas
push
push
mov
mov
inc
sbb
clc
cmps
inc
addr16
mov
mov
xchg
clc
inc
pop
push
fwait
cmps
lock
stos
retf
repz
(bad)
mov
das
mov
cmp
jae
lahf
scas
sti
inc
movzx
push
push
pop
or
push
movzx
add
movzx
push
lea
push
jecxz
cmp
push
dec
shr
pop
mov
sub
lea
je
outs
xor
call
push
pop
into
inc
cli
pop
dec
add
fcomp
adc
sbb
xor
jecxz
dec
rcr
dec
cmovbe
in
sub
inc
inc
jo
jmp
dec
mov
mov
mov
nop
add
lea
cmc
dec
push
mov
fdivr
or
inc
data16
add
mov
shr
cld
daa
icebp
push
adc
je
rol
add
xor
mov
jae
xchg
adc
test
call
fisub
loop
inc
fsubr
push
frstor
add
jb
fdivr
adc
sbb
mov
mov
mov
mov
popf
sti
test
gs
cmp
mov
in
push
or
out
inc
cmp
inc
loopne
bound
pop
mov
mov
sub
clc
jb
shl
out
popa
fmul
mov
popf
ret
inc
lods
cmp
sbb
add
jg
dec
data16
test
or
and
add
mov
or
mov
mov
je
adc
sbb
inc
xor
push
mov
cld
out
push
pop
sbb
pop
ret
sub
jo
jne
cld
xor
sbb
dec
movsx
mov
fmul
movsx
mov
and
xor
shl
dec
add
sbb
add
sbb
sbb
mov
sbb
mov
mov
icebp
mov
cmp
ins
ins
push
test
pop
inc
sbb
cmc
mov
inc
mov
(bad)
call
jle
add
imul
repnz
(bad)
test
push
or
je
push
push
push
jg
loopne
push
cmp
mov
jbe
adc
test
(bad)
fwait
leave
mov
and
mov
pop
sbb
and
or
pop
call
jbe
xchg
push
inc
push
mov
mov
test
jmp
scas
jmp
lea
hlt
fs
xor
mov
jne
js
addr16
scas
lods
sbb
inc
add
jno
jmp
imul
or
mov
adc
add
fld
mov
lea
jmp
mov
push
idiv
loope
add
pusha
sahf
mov
xchg
pop
cmp
mov
xor
cmp
jns
inc
jg
sbb
push
inc
push
push
push
mov
enter
push
retf
nop
and
clc
(bad)
cmp
je
mov
mov
pop
pop
pop
inc
xor
xchg
mov
add
sbb
ret
pop
movs
jp
mov
scas
push
mov
mov
cmp
test
push
rol
sbb
hlt
push
aas
xor
push
mov
mov
pop
lea
rep
jecxz
jne
cmp
je
stos
sti
push
jge
je
lea
lea
push
cmp
add
mov
out
add
not
mov
das
mov
and
cmc
mov
lea
push
mov
push
push
jmp
pop
adc
jbe
sbb
or
leave
add
sbb
inc
(bad)
push
test
push
dec
add
cld
and
inc
inc
addr16
(bad)
inc
test
je
push
mov
lds
push
sbb
aaa
dec
jne
pop
popa
sub
push
and
movs
call
sti
add
jne
call
pop
outs
pop
sub
add
pop
mov
es
mov
jb
push
lea
(bad)
jne
loopne
jne
jmp
je
push
jp
jno
jnp
xlat
adc
clc
sub
inc
ret
dec
and
push
push
pop
add
push
pop
push
push
sub
mov
push
sbb
ds
(bad)
jmp
mov
inc
add
adc
push
nop
cld
cmps
(bad)
sub
mov
mov
jmp
lock
jle
mov
mov
xor
mov
or
(bad)
leave
inc
and
sahf
xchg
aad
fs
mov
aas
inc
push
cmp
jno
hlt
and
pop
jb
mov
hlt
out
mov
push
push
cmp
jg
add
cmp
mov
stos
ficom
rcr
mov
(bad)
in
inc
mov
cmp
jne
mov
shl
mov
xchg
push
push
push
mov
test
(bad)
push
jge
enter
pop
or
sti
jg
(bad)
jg
retf
jle
mov
lea
imul
add
shl
push
mov
popa
xor
jmp
mov
push
and
and
aaa
inc
cmps
cmp
jl
mov
mov
mov
jmp
adc
push
pop
add
cmp
mov
jl
stos
(bad)
adc
inc
or
loopne
in
mov
xchg
mov
cmp
mov
scas
arpl
retf
jno
lea
fstp
imul
mov
add
jbe
add
test
xor
mov
adc
sub
push
aas
push
loopne
int
outs
in
mov
sbb
cmp
out
mov
dec
retf
stos
js
push
lea
enter
(bad)
cli
push
add
dec
jne
shr
and
pop
pusha
lock
add
pop
mov
(bad)
cld
push
ret
cli
xchg
push
mov
std
sub
or
add
xor
mov
mov
cmp
cmp
jge
mov
pop
adc
in
std
jmp
jle
sub
push
lea
paddsb
mov
iret
sub
mov
or
std
fistp
inc
or
les
pusha
cwde
adc
loopne
ds
pusha
ja
jb
adc
mov
in
jne
(bad)
jg
adc
push
mov
cmp
jl
lea
push
shr
out
arpl
loopne
inc
add
lea
xor
pop
dec
push
mov
jmp
dec
mov
inc
add
sub
sub
push
mov
add
test
test
or
or
ret
outs
js
add
cmp
add
jmp
icebp
not
test
je
(bad)
and
jo
jle
jle
mov
lea
loopne
(bad)
out
xchg
addr16
jl
jmp
and
jg
push
in
loopne
adc
sbb
xor
sub
adc
int3
test
add
stc
sub
mov
or
mov
cmp
push
mov
ja
add
rol
and
hlt
or
add
adc
or
add
dec
mov
jg
fistp
sub
je
rcl
cmp
ret
lea
adc
or
xchg
inc
dec
jl
or
mov
adc
sbb
into
mov
mov
ds
adc
jmp
ins
xchg
test
test
and
sbb
add
pop
cdq
inc
pop
and
lock
cmp
add
lds
test
lock
lea
call
aaa
xchg
retf
and
add
loopne
jg
xlat
shl
or
and
ror
shl
not
sbb
xchg
(bad)
sbb
fldz
nop
pushf
(bad)
and
mov
sar
lds
dec
cmp
jle
repnz
mov
loopne
dec
cwde
push
stos
add
push
adc
mov
(bad)
aas
std
or
pop
cmp
adc
mov
mov
je
and
jmp
and
repnz
pop
inc
jge
mov
scas
or
sbb
or
or
pusha
push
jg
stos
mov
mov
and
es
inc
outs
(bad)
adc
xor
test
mov
jne
xor
sbb
add
add
mov
fadd
arpl
push
repz
cmps
mov
test
test
mov
xor
xor
leave
call
add
mov
das
push
sbb
repnz
mov
push
cmps
add
push
icebp
fs
push
inc
adc
add
or
pop
inc
push
adc
dec
test
jle
xchg
lea
jl
inc
mov
xor
repnz
cmp
mov
inc
mov
sub
adc
sub
inc
and
cmc
outs
clc
aas
xchg
xor
(bad)
xor
shr
div
jle
mov
mov
xchg
add
ror
cmp
jmp
jmp
xor
adc
jno
test
push
je
jb
lahf
cmp
cmp
test
je
cmp
je
adc
push
std
mov
jmp
mov
mov
pop
dec
jge
lea
push
mov
cs
repz
adc
cmp
jne
push
jmp
cmc
pop
dec
repz
mov
pop
(bad)
in
pop
xchg
mov
or
sar
adc
or
xor
sti
out
and
lea
js
shl
mov
push
mov
jg
xchg
push
pop
arpl
out
xor
mov
push
or
inc
inc
add
xor
inc
cmp
jb
mov
std
adc
lock
jne
ficom
pop
or
repz
cmp
jae
jb
jbe
sub
push
or
shl
pop
push
das
mov
mov
xor
cmps
adc
pop
mov
push
and
mov
dec
add
inc
push
cmc
repnz
push
pop
xchg
pop
xchg
cmp
outs
sub
xor
(bad)
test
stc
std
add
sar
cmp
push
or
push
stos
xor
cmp
je
push
xor
aas
icebp
(bad)
cmp
jbe
push
push
mov
cmp
je
lea
cli
push
mov
(bad)
sar
jmp
inc
cmp
jb
pop
test
das
mov
xor
aam
pop
ror
fbld
outs
adc
pop
ret
mov
xor
shl
mov
mov
inc
adc
test
xchg
aam
lock
pop
mov
adc
dec
mov
fild
sbb
inc
and
cmp
rcl
js
shl
out
clc
mov
mov
test
mov
push
add
out
xor
mov
sub
xor
test
ror
mov
rol
sbb
mov
(bad)
sub
or
mov
idiv
or
inc
mov
lds
pop
inc
loopne
or
leave
push
push
loope
push
push
inc
mov
or
jge
jne
cmp
fld
jnp
sub
neg
clc
sub
cld
lea
and
(bad)
push
aas
sti
mov
add
mov
or
stos
fisub
into
xchg
fmul
xor
jmp
mov
jecxz
stos
loop
mov
push
or
and
or
inc
jge
sbb
sbb
sub
push
add
js
add
push
add
push
call
dec
icebp
inc
add
adc
push
push
scas
xchg
mov
inc
inc
(bad)
sbb
(bad)
adc
push
mov
jl
push
ds
xchg
adc
pop
ret
push
jmp
cs
mov
inc
push
push
xchg
mov
xor
cmp
cmp
pop
mov
or
xchg
xor
test
adc
push
xor
mov
mov
jmp
push
push
pop
cmp
jg
mov
call
jmp
mov
lods
pop
mov
xor
cmc
pop
sub
mov
mov
lea
not
std
call
pop
and
mov
add
mov
xor
sbb
inc
or
jle
push
std
rep
ret
cmp
push
les
(bad)
jmp
sbb
jne
fsubr
int
sbb
popf
mov
lea
cmp
inc
aam
pop
shl
sar
or
stc
inc
in
jbe
cmp
nop
cmp
adc
sub
stc
inc
loop
test
dec
clc
add
dec
stc
mov
cmp
push
(bad)
aaa
cmp
cld
jg
fnstsw
test
mov
jbe
adc
inc
clc
inc
push
push
jnp
cmp
fdiv
cmp
xchg
mov
dec
add
cmp
jle
push
push
add
cmp
clc
mov
xor
enter
popf
add
or
fwait
adc
cmp
pop
sub
add
mov
bound
pop
aad
in
jmp
fcom
sbb
pop
push
add
push
cmp
test
adc
push
adc
(bad)
cmp
je
mov
shr
dec
or
mov
mov
push
mov
and
sub
adc
push
push
push
cwd
stos
cmp
xchg
jmp
fsub
dec
adc
sub
fild
js
mov
and
in
or
sub
cld
dec
mov
mov
cmp
je
cmp
jge
add
sbb
ret
jne
add
vpshuflw
adc
inc
cli
fsubr
adc
pop
movs
jge
adc
sti
pop
jne
out
ins
push
mov
push
mov
inc
mov
mov
sub
push
test
mov
je
clc
aaa
add
xor
lea
mov
cmp
lahf
mov
sub
dec
ins
jge
add
inc
adc
test
(bad)
mov
add
pop
and
clc
mov
lock
je
sub
(bad)
js
mov
add
adc
js
nop
push
loope
call
test
ja
loopne
and
mov
pop
xchg
push
push
jmp
mov
cmp
cmps
clc
mov
pushf
adc
or
cmp
or
mov
push
push
inc
push
rol
es
sub
mov
mov
push
jae
fadd
or
mov
outs
inc
popa
das
cmp
jne
out
fadd
dec
dec
ret
(bad)
(bad)
out
arpl
add
mov
lea
cmp
jg
push
add
mov
jmp
add
jle
xchg
and
jmp
sbb
clc
push
jno
icebp
popa
outs
not
stc
mov
xchg
mov
inc
sbb
lea
jp
gs
sar
mov
mov
pop
pop
jbe
pop
test
dec
cld
jle
push
mov
cmp
arpl
iret
jge
mov
push
in
mov
lea
mov
xor
or
inc
cmps
mov
add
icebp
psubq
dec
dec
push
pop
xor
jnp
push
mov
mov
pop
in
mov
movs
daa
mov
mov
inc
mov
and
dec
(bad)
fld
or
dec
clc
jge
add
movzx
pop
add
sub
and
pop
pop
sbb
aas
ds
or
or
repz
sbb
push
pusha
(bad)
jmp
cmp
jle
mov
pop
pop
ret
xor
sahf
je
je
js
das
pop
adc
push
sub
xor
adc
sub
jle
mov
ss
cmp
mov
ss
pop
mov
push
call
enter
loopne
fwait
stos
mov
lea
push
lea
push
or
ret
sti
dec
movs
adc
jne
lea
mov
stos
jmp
pop
jne
mov
and
out
jo
mov
push
pop
jne
mov
aaa
mov
(bad)
cli
mov
mov
mov
xchg
adc
enter
inc
dec
push
sub
sub
lock
add
adc
jmp
fnstsw
aaa
fisubr
loope
jge
into
add
or
dec
add
cmp
add
add
sbb
ss
call
fist
pop
xchg
test
iret
fst
jle
(bad)
(bad)
inc
add
out
icebp
pop
add
mov
mov
push
inc
inc
add
dec
push
push
mov
clc
neg
mov
rol
mov
jp
lea
scas
(bad)
mov
(bad)
push
push
inc
xchg
test
je
mov
(bad)
iret
mov
sbb
dec
sub
inc
cmp
or
jp
movs
xchg
sub
jge
out
mov
inc
dec
add
lea
and
mov
stc
fnsave
lea
pop
add
or
jmp
fmul
(bad)
xor
and
sub
je
dec
je
dec
jne
aas
jg
adc
jmp
push
inc
jmp
or
jo
je
(bad)
add
je
cmp
je
jmp
push
pop
jmp
push
jmp
mov
sbb
xlat
not
or
mov
and
mov
or
loopne
add
adc
in
mov
jmp
push
pop
push
cli
push
ds
ja
hlt
push
push
push
jne
call
cmp
clc
fs
mov
inc
mov
sar
aam
cmc
dec
adc
xor
jmp
mov
mov
add
lahf
bound
jo
push
add
sub
dec
or
cmp
pop
popa
or
cmp
xor
aaa
cmp
outs
ret
out
call
push
std
gs
xchg
cmp
jge
je
adc
cmps
out
fwait
and
pop
dec
out
pop
pop
dec
push
int
inc
lods
jae
add
and
shl
push
fdivr
inc
push
add
xor
sbb
in
add
out
sti
dec
or
push
xor
mov
es
in
push
jbe
aad
clc
jne
and
(bad)
enter
call
je
mov
cmp
add
jmp
xchg
adc
xor
call
jg
add
sub
mov
xchg
sub
dec
xchg
push
sub
push
sub
xor
mov
mov
push
jbe
mov
cmp
dec
lock
jmp
les
loope
lea
push
into
push
push
lds
adc
or
cmp
jo
mov
pop
add
ds
mov
or
not
mov
add
sbb
add
lock
push
ror
or
sti
inc
jg
xor
lock
mov
inc
add
(bad)
dec
mov
test
jbe
lock
aam
in
xchg
mov
out
mov
lea
imul
dec
hlt
pop
add
adc
or
push
push
mov
fisttp
clc
add
sub
adc
sar
les
retf
je
cmp
and
das
jne
mov
or
cmp
xchg
sub
pop
mov
jmp
cmp
je
inc
inc
mov
in
call
push
push
and
out
sbb
(bad)
push
pop
or
or
jne
sbb
mov
push
shl
jnp
sub
jb
xchg
ins
je
inc
jmp
push
mov
test
pop
cmp
mov
or
div
lea
outs
or
inc
adc
fs
and
push
adc
out
lahf
or
adc
nop
or
adc
pop
scas
jecxz
outs
and
push
jne
dec
add
lahf
clc
add
adc
push
push
jmp
ins
mov
mov
and
cmp
mov
and
or
scas
ds
pop
dec
cld
inc
rcr
pop
sub
adc
icebp
cmp
mov
cmp
mov
sbb
jne
push
push
push
(bad)
push
call
test
je
push
fld
outs
xor
xor
stos
adc
aas
push
popf
pop
cmc
je
push
push
mov
xor
mov
inc
sub
mov
enter
jne
xor
mov
jmp
aaa
mov
adc
push
add
ins
loop
ja
add
push
test
je
cmp
fisttp
ja
adc
jbe
(bad)
out
xor
dec
push
call
push
sbb
jne
fs
sbb
inc
rcl
jo
iret
push
pop
nop
cli
add
out
popa
sbb
shl
inc
loop
hlt
cmp
inc
dec
cmp
sub
push
push
xor
push
cmp
mov
fdiv
push
popa
loop
jne
mov
inc
cmp
(bad)
jg
cmp
add
push
mov
mov
mov
mov
and
sub
add
cmp
mov
lea
and
bound
call
mov
push
push
pop
or
ror
nop
mov
pop
or
in
inc
loopne
out
fist
push
lea
push
mov
sub
push
jbe
pop
aam
pop
xor
cmp
push
push
push
add
adc
je
loope
test
jne
leave
inc
neg
xor
push
ins
ja
std
pcmpeqw
jge
or
push
dec
shr
(bad)
cmp
or
or
push
bound
(bad)
jne
mov
push
add
push
cmp
jl
ja
scas
jne
in
dec
enter
inc
out
push
sbb
mov
test
sbb
xor
push
push
push
ja
int3
lods
mov
inc
call
push
jmp
(bad)
fist
mov
(bad)
jge
inc
fadd
ret
sbb
mov
mov
add
xchg
rcl
cmp
pop
call
push
jg
mov
arpl
dec
nop
or
jg
xor
inc
and
iret
iret
loopne
sub
adc
adc
lock
xor
das
setne
hlt
and
aaa
jne
mov
push
mov
lock
retf
xor
pop
adc
lea
push
add
xrelease
les
mov
movzx
mov
mov
dec
inc
and
cmp
add
or
aas
cmc
cmp
xchg
mov
(bad)
lea
mov
aam
mov
mov
sbb
lods
push
sub
sbb
stc
and
add
or
addr16
popa
ret
mov
(bad)
xor
int3
icebp
push
fsubp
mov
mov
xchg
(bad)
push
cmp
mov
mov
je
or
jbe
cmps
imul
push
call
jo
into
xor
je
cmp
mov
add
jmp
or
cmp
dec
xor
cmp
mov
je
gs
jae
push
adc
mov
ds
cwde
push
mov
sbb
cmp
jmp
pusha
adc
jb
out
or
cmp
(bad)
ja
ret
je
les
add
into
pop
pop
cmp
test
je
push
pop
mov
fistp
std
(bad)
cmp
jle
je
push
mov
mov
sbb
push
xor
in
sbb
mov
cmp
dec
sbb
lods
je
repnz
cmp
jne
lea
or
pop
push
push
pop
push
adc
pop
sbb
pop
cmps
add
jbe
sbb
loopne
cwde
inc
dec
or
push
je
or
add
push
(bad)
fld
ds
test
popa
loopne
arpl
xchg
imul
pop
nop
jmp
mov
sbb
inc
pop
and
mov
test
je
mov
push
push
push
call
jmp
add
adc
push
call
mov
mov
call
mov
test
je
mov
sahf
mov
mov
or
ds
rol
ins
jo
stos
sub
ret
or
cmp
push
add
mov
lock
mov
lea
push
push
push
push
mov
int
pop
cmp
in
push
mov
add
mov
push
pop
pop
xchg
mov
clc
daa
mov
enter
aaa
sub
xor
cmps
xor
adc
xor
mov
fsub
sub
mov
test
pop
or
or
loopne
int3
add
inc
in
mov
push
or
cmp
fcomip
adc
cmp
dec
mov
je
inc
shl
or
ja
(bad)
aas
or
xchg
or
out
mov
push
test
pop
je
idiv
out
jmp
or
mov
mov
jmp
or
dec
or
test
cmp
test
jne
cmp
retf
shl
push
int3
xchg
add
xor
sbb
cmp
mov
aas
add
sub
retf
mov
or
cwde
imul
call
xor
mov
dec
lock
mov
jmp
pushf
mov
inc
dec
pop
unpckhps
mov
add
mov
jg
inc
ret
push
neg
neg
add
adc
sbb
ja
mov
or
pusha
push
mov
leave
pusha
cmp
or
cmp
push
mov
loopne
mov
scas
cmp
add
xor
iret
or
fsubr
mov
cs
or
xor
je
inc
loope
and
push
mov
(bad)
in
mov
add
sub
pusha
sbb
cmovb
lea
adc
call
push
jmp
in
sar
inc
mov
and
or
cmp
inc
sub
jg
mov
sbb
shl
push
push
or
fwait
js
in
call
xchg
mov
push
inc
adc
sbb
push
cwde
mov
push
add
jae
sbb
inc
sbb
(bad)
cmp
mov
pop
std
outs
jp
jbe
sub
test
push
jne
dec
aam
push
bound
outs
push
iret
inc
xlat
stos
jne
push
sbb
cmp
(bad)
inc
mov
cmp
jne
mov
cmp
jne
push
pop
shl
jb
or
mov
mov
jl
sub
xor
iret
xor
and
pop
add
js
jne
movs
mov
jae
jne
xlat
sub
mov
mov
mov
fadd
sbb
dec
(bad)
clc
jne
and
jmp
mov
mov
lea
push
inc
push
xchg
cmps
xchg
mov
pusha
cmp
push
jne
cmp
cmp
cmp
je
or
or
dec
sub
fsubr
ds
(bad)
int3
mov
shl
sub
adc
leave
adc
lock
popf
fld
xchg
shl
cmp
sbb
jmp
cmp
inc
test
pop
mov
mov
outs
js
xchg
xchg
sub
lea
lea
xchg
push
shl
lock
movs
mov
test
(bad)
(bad)
jg
or
cmp
mov
mov
mov
mov
jne
mov
inc
icebp
cmps
xor
cmp
call
and
(bad)
pop
push
lea
outs
jmp
adc
push
mov
mov
inc
push
call
sbb
nop
jne
sub
loopne
add
adc
call
push
mov
mov
add
push
sub
ins
enter
ins
sub
leave
loope
mov
(bad)
jge
inc
and
mov
in
push
lea
pop
lea
mov
sbb
adc
adc
push
in
js
(bad)
call
inc
jmp
and
cli
and
mov
lea
mov
clc
push
mov
adc
push
call
push
or
ret
mov
into
rcl
and
cwde
repz
mov
sub
lods
rcl
push
push
cmp
mov
daa
push
jecxz
stc
push
mov
mov
lds
call
add
je
fcmovnb
jg
xchg
hlt
and
clc
push
mov
lea
pusha
out
mov
jmp
les
dec
mov
ds
repz
or
xchg
push
cwde
outs
cld
sbb
and
xchg
cmp
mov
pusha
cmp
sub
ret
cmps
or
je
cmp
cs
fistp
mov
test
adc
adc
clc
push
ret
adc
adc
add
and
pop
outs
sub
mov
or
jo
or
retf
rcl
xchg
mov
not
(bad)
push
sub
pop
je
sbb
sub
je
sub
or
adc
adc
imul
or
aad
aaa
pop
mov
xlat
xchg
mov
call
push
in
and
(bad)
adc
mov
in
mov
sar
add
jne
push
jge
xchg
in
jle
(bad)
aaa
push
call
fadd
jmp
sbb
shl
dec
cmp
clc
xor
adc
xor
xchg
jp
sub
adc
push
das
inc
or
push
adc
shl
test
je
and
iret
dec
adc
mov
cli
mov
ins
cmp
inc
ss
xchg
or
dec
movups
xor
cmp
shl
pushf
push
push
push
mov
pusha
adc
mov
inc
cmp
scas
add
je
cmp
cmp
adc
cmp
jg
pop
push
push
lea
xor
inc
fnsave
std
sub
mov
bsr
or
mov
adc
outs
add
xchg
jae
jge
add
pop
std
addr16
subps
jge
sub
adc
rcl
sub
cmp
ret
(bad)
mov
mov
nop
rcl
test
call
call
mov
dec
ror
fadd
mov
add
test
sti
call
daa
test
jne
and
lea
push
push
pushw
cmps
sti
into
rcr
mov
push
push
loopne
rcl
test
sub
js
popf
inc
add
adc
pop
mov
fcom
push
nop
xchg
lock
cld
mov
jne
cmp
jne
mov
je
adc
ss
jg
add
scas
push
outs
jb
add
ror
adc
(bad)
dec
loope
cmp
jne
mov
sub
push
neg
sbb
inc
(bad)
jle
or
push
and
sub
jmp
stos
js
(bad)
xor
(bad)
je
mov
jg
add
adc
jmp
sbb
data16
cmp
ret
into
cmp
or
les
pop
xlat
cmp
push
aam
pop
(bad)
(bad)
mov
js
add
jne
mov
adc
stos
push
push
push
jmp
in
pop
lock
je
adc
dec
and
inc
cmp
adc
out
mov
adc
sub
and
cmp
or
mov
(bad)
adc
sub
cmp
aas
jmp
movs
nop
cmp
(bad)
mov
(bad)
test
mov
jg
add
pop
or
xor
js
pop
and
ror
sub
inc
push
je
shl
fs
hlt
cld
nop
stos
or
cmc
stc
add
mov
loopne
inc
sub
and
pop
adc
icebp
mov
cld
push
mov
lea
mov
mov
mov
mov
addr16
call
push
pop
sti
push
push
jmp
fild
push
jb
add
sar
jne
dec
jne
push
cmp
or
inc
fstp
jbe
jne
push
adc
inc
and
inc
clc
(bad)
sub
setne
ret
test
arpl
sub
jne
sub
add
sub
(bad)
leave
push
test
enter
cld
(bad)
jne
loop
jne
xor
add
inc
or
mov
ja
sub
sub
push
push
add
sub
jmp
or
pop
sbb
cld
sbb
mov
sbb
xor
adc
test
inc
je
cmp
(bad)
sbb
dec
pop
je
cmp
ret
loop
dec
inc
or
cmp
jne
and
xchg
xor
out
sti
outs
or
or
inc
inc
cmp
pop
ja
sub
in
in
sub
pop
aam
adc
clc
sbb
je
cmp
jne
and
mov
sbb
cmp
mov
or
mov
cmp
(bad)
push
jne
mov
mov
cmp
je
mov
push
test
(bad)
leave
pop
je
mov
push
call
jbe
pop
and
dec
inc
lea
mov
sbb
cmp
je
push
lea
sbb
sub
push
pop
xchg
sub
inc
loopne
mov
push
inc
adc
add
add
cmp
mov
xlat
mov
or
pop
adc
sbb
pop
ficom
fidiv
sub
cmp
add
idiv
outs
loop
mov
jns
add
pusha
pop
jmp
lock
mov
movs
push
add
fprem
dec
ret
mov
mov
mov
sbb
dec
sbb
loope
jmp
fld
and
test
mov
jne
pop
addr16
jbe
add
or
jne
and
bound
add
push
xchg
test
add
sbb
or
xor
add
mov
test
mov
push
je
mov
and
xor
push
jae
jl
or
std
fild
mov
div
add
adc
dec
sbb
sar
push
iret
ja
dec
pop
popw
push
xchg
or
fst
mov
stc
test
cmp
aaa
or
mov
test
(bad)
mov
xor
mov
or
or
jge
mov
mov
mov
lahf
mov
and
or
pop
push
pop
pop
shl
gs
mov
pusha
pop
add
lea
mov
lea
popf
aad
shl
(bad)
lods
in
xor
ficom
mov
cmp
cmps
stos
add
nop
call
or
mov
cmp
jne
push
dec
iret
and
add
prefetcht0
jmp
push
push
push
scas
lahf
pop
sub
or
shl
les
out
mov
push
and
dec
gs
mov
jecxz
jmp
add
adc
add
test
adc
push
scas
sub
xchg
icebp
rcr
or
mov
and
mov
sti
test
retf
lock
xor
test
jle
adc
jle
and
cmp
mov
mov
mov
and
cmp
je
inc
cmp
jl
cmp
out
adc
iret
jmp
adc
dec
loopne
sbb
cmp
jne
push
jmp
push
(bad)
out
(bad)
adc
inc
jmp
je
ds
pop
mov
push
push
pushf
or
popf
sbb
xchg
xchg
push
and
add
pop
dec
cmp
inc
loopne
jl
dec
out
or
lea
mov
int3
and
jbe
call
cmp
hlt
lds
mov
mov
sar
inc
mov
and
xor
push
inc
add
(bad)
lea
mov
push
push
mov
call
js
push
mov
and
push
add
mov
dec
push
shl
inc
not
sub
pop
inc
add
or
mov
or
js
adc
cmp
jne
cmp
jne
out
cmps
adc
repnz
sub
les
call
push
push
push
adc
dec
mov
adc
xor
inc
loopne
mov
es
sbb
mov
loop
imul
cmp
into
sbb
xchg
addr16
cs
mov
sbb
and
pusha
cmp
push
inc
hlt
sub
sub
hlt
sub
pushf
call
jo
test
nop
call
cmc
inc
add
push
into
cdq
fld
mov
xor
dec
into
mov
call
push
fisttp
lock
fcomp
rcl
in
call
push
push
or
inc
fmul
sub
push
mov
and
outs
clc
jnp
adc
je
aaa
push
call
mov
xchg
add
aaa
dec
and
push
jae
or
gs
pop
mov
sbb
pop
pop
(bad)
dec
loopne
dec
mov
(bad)
(bad)
jg
push
adc
je
cmp
je
add
jmp
cmp
jne
cmp
mov
lock
cmp
ja
mov
jmp
cwde
xor
mov
int
dec
cld
(bad)
and
dec
or
or
nop
mov
push
or
or
cmps
push
xacquire
pcmpeqd
imul
mov
push
add
sub
ins
xchg
push
push
cmp
jno
stc
jne
ds
hlt
push
js
sub
push
dec
push
mov
daa
sub
and
mov
pop
mov
lock
jl
iret
call
sub
cmp
sbb
cdq
sub
and
pop
inc
js
mov
and
mov
mov
sti
add
adc
mov
cmp
arpl
fst
int
mov
and
push
xor
pop
jmp
mov
pop
cmp
lea
(bad)
jmp
mov
jne
cmp
jne
mov
push
mov
sbb
jmp
sar
cmp
jb
ja
daa
popa
mov
je
jmp
cmp
out
cmp
and
retf
xchg
add
jo
imul
es
lods
cmp
jne
jmp
mov
sbb
or
add
mov
mov
cmp
je
jp
and
rcr
dec
mov
jne
xor
sub
jne
and
das
and
pusha
mov
adc
outs
add
jne
inc
jge
jbe
dec
adc
call
jns
sbb
jmp
(bad)
push
cdq
cmp
sbb
and
add
dec
cmp
ja
jmp
cwde
fcmovnu
sbb
and
cmp
adc
push
aam
cld
cs
or
pop
pop
mov
cmp
pop
lea
or
add
jbe
xchg
mov
adc
dec
mov
xor
adc
jne
lea
jne
or
loope
add
clc
pop
rol
fmul
out
jnp
outs
repz
test
inc
fsubr
push
cs
addr16
adc
jno
sar
inc
cld
aam
aas
dec
cld
dec
psrlq
cdq
sub
mov
ja
in
sbb
push
movzx
push
es
push
dec
cld
jbe
(bad)
ror
daa
ins
and
inc
cmp
imul
and
or
push
popa
or
es
sub
mov
(bad)
jl
fist
mov
or
cmp
cmp
xor
mov
xchg
jmp
sbb
adc
dec
mov
ror
in
mov
add
adc
sub
add
iret
fs
adc
out
and
into
push
sub
cs
test
sar
and
cmp
por
sub
pop
rcr
jns
sbb
or
nop
std
scas
aaa
jnp
jmp
push
push
jmp
push
cld
or
ja
jmp
ds
aaa
test
jmp
pusha
push
xor
pop
addr16
add
shl
adc
jmp
sub
jo
cmp
mov
ds
or
ret
cs
adc
cld
push
push
outs
pop
call
lock
call
pusha
mov
inc
add
add
out
frstor
outs
gs
adc
sbb
add
(bad)
inc
add
pop
idiv
movlps
xor
aas
xor
shl
pop
push
mov
and
cwde
mov
out
mov
call
dec
idiv
add
out
jae
loope
cmp
daa
add
adc
ins
loop
dec
sbb
inc
into
mov
stos
add
push
mov
je
outs
mov
pusha
jmp
aas
fild
add
add
mov
dec
inc
cmp
or
cmp
je
(bad)
out
add
add
pop
sub
aam
push
push
clc
ffreep
call
jge
call
cmp
je
xor
rcl
or
pop
dec
mov
mov
add
inc
sbb
or
hlt
test
je
int
sti
jne
xor
(bad)
call
mov
ror
aam
adc
or
cmps
xchg
push
jae
inc
xor
and
jg
push
cs
add
mov
or
leave
add
dec
add
call
mov
push
push
mov
mov
lods
sbb
mov
inc
ror
scas
cmp
push
or
sub
sub
adc
jbe
jmp
jecxz
mov
or
xor
dec
adc
or
icebp
push
or
mov
and
push
or
xor
rcr
jmp
push
dec
popf
jb
adc
push
aas
add
and
fisttp
inc
add
repnz
cs
add
pop
stos
pop
cmp
sbb
jae
cmp
sbb
or
push
mov
mov
jmp
cmp
push
xchg
nop
sahf
icebp
cmp
call
leave
pusha
dec
sbb
je
adc
push
add
nop
rol
leave
jae
sub
sub
and
push
and
adc
cmps
sahf
leave
jle
movs
adc
inc
xlat
sbb
xor
lahf
call
cmp
sbb
mov
xor
jmp
xor
push
sahf
js
mov
cmp
pop
sub
add
jo
or
or
jge
jo
mov
inc
mov
add
jge
add
leave
rol
or
push
jle
jl
mov
inc
ret
call
lods
test
pop
push
mov
push
addr16
pop
sbb
xor
lods
int3
adc
sub
sub
data16
push
sub
dec
iret
lds
jne
jne
sub
or
retf
(bad)
adc
clc
sub
in
into
and
jmp
jne
and
push
push
in
cmova
call
push
ja
mov
test
je
or
dec
mov
push
mov
call
mov
add
adc
cld
mov
jmp
sub
sub
pop
add
adc
or
repnz
inc
jmp
inc
aas
sbb
mov
mov
or
push
gs
mov
dec
fdiv
or
push
push
fidiv
push
jl
xor
push
lds
je
mov
or
pop
add
add
sahf
test
push
lea
js
inc
lahf
dec
mov
or
sub
mov
sub
sub
and
sbb
push
ins
or
test
sub
icebp
push
pusha
cmp
fucomip
cmp
push
je
hlt
mov
jne
lea
push
adc
add
cmp
hlt
jb
cmp
xor
add
cmp
cmp
fisttp
adc
enter
std
call
or
ja
je
cmp
minps
inc
cmp
jbe
cmp
je
cmp
jne
mov
xlat
jne
cmps
std
push
or
test
movzx
or
sub
mov
ret
div
add
adc
xchg
push
cmp
pop
hlt
scas
mov
add
fs
adc
in
pop
cmp
adc
add
jns
and
jmp
cmp
loopne
cmp
or
ret
jg
push
mov
lea
not
push
clc
loopne
mov
cmp
pop
jne
xor
icebp
adc
cmp
icebp
fbld
cmc
je
or
add
push
cmp
retf
mov
cmp
sub
add
jne
cld
or
lea
sbb
jne
lds
adc
jmp
sub
mov
jge
xchg
pop
nop
sbb
pop
in
stos
fdiv
or
and
daa
sbb
cmp
std
push
mov
xchg
add
jecxz
pop
add
rcl
sar
push
push
sbb
mov
jbe
sahf
add
jo
or
test
jo
bound
dec
pop
jae
pop
aad
sbb
inc
xchg
cmp
test
and
add
xor
jmp
iret
adc
ja
cmp
inc
xor
sbb
ret
pop
std
outs
adc
push
push
sub
fsubr
mov
jo
cmc
pop
cmp
mov
push
call
test
jl
push
or
push
sub
inc
cmp
push
and
dec
push
pop
adc
or
mov
jle
fsub
jbe
movs
aaa
sbb
daa
dec
jmp
js
ja
test
call
dec
and
push
or
les
mov
sbb
sbb
cmp
mov
xor
cmc
push
lea
jmp
xchg
push
call
push
jmp
fcom
ins
dec
adc
mov
imul
fld
shr
cld
das
movs
call
je
mov
sbb
add
data16
and
fcmovb
xchg
xchg
je
add
clc
pop
into
add
bound
je
js
or
add
add
mov
add
rcl
cmp
mov
add
jne
push
outs
adc
or
sar
or
mov
sbb
or
std
and
and
inc
add
mov
loope
mov
cli
rcl
cmp
pop
xor
xor
jg
lea
clc
jne
mov
(bad)
jge
in
mov
mov
mov
mov
inc
into
aam
loopne
icebp
dec
mov
daa
mov
loopne
inc
push
in
or
add
push
mov
std
adc
jbe
(bad)
sbb
(bad)
jge
push
inc
call
mov
push
mov
iret
pop
mov
mov
ins
dec
and
cmp
sub
imul
add
push
cmp
mov
aaa
inc
cmp
inc
inc
mov
gs
mov
clc
test
je
sbb
adc
add
and
ja
add
xchg
adc
outs
xchg
jo
rol
test
inc
out
into
xor
push
sub
adc
call
je
xor
test
mov
add
dec
mov
clc
xchg
dec
mov
add
loop
lock
lea
push
lea
push
enter
repz
jmp
enter
ror
(bad)
add
pop
add
jle
jmp
cdq
(bad)
mov
rcr
loopne
mov
lea
(bad)
out
mov
push
push
push
stos
add
inc
add
sar
dec
ror
sub
mov
cdq
sub
sub
(bad)
fbstp
push
aam
stc
sar
sub
mov
add
adc
mov
push
ret
push
sar
adc
cmp
jge
mov
jmp
mov
add
cmp
jle
jg
dec
sub
add
mov
cmp
sbb
jmp
add
cmp
jle
mov
sub
dec
(bad)
push
add
push
push
push
push
push
mov
lds
mov
cmp
mov
je
mov
cmps
mov
push
ret
push
sbb
mov
cmp
mov
jmp
clc
push
les
retf
push
mov
or
test
ja
test
mov
mov
push
test
je
mov
mov
inc
inc
mov
mov
cmp
or
cmp
mov
cmp
(bad)
clc
xor
jne
mov
or
or
mov
adc
std
jmp
cmp
je
icebp
scas
inc
cmp
jne
stos
push
push
push
std
add
jae
call
or
fistp
inc
push
test
dec
pop
je
push
out
push
pop
push
sbb
pop
in
pop
std
push
ins
test
pop
cmp
push
push
stos
jb
cmp
push
inc
or
xchg
cmp
(bad)
push
pop
push
xor
test
pop
mov
mov
mov
int
les
jne
dec
inc
ja
sub
je
adc
clc
(bad)
aas
in
es
and
inc
xchg
mov
lds
pop
out
sub
sbb
push
call
inc
or
adc
ja
fdivp
pop
add
jae
add
push
sbb
sbb
adc
adc
push
push
clc
popf
mov
jne
xor
cmp
push
push
push
mov
mov
test
mov
loopne
call
push
adc
inc
add
sar
cmp
mov
jo
cmp
cmp
push
inc
adc
inc
and
sbb
(bad)
nop
inc
mov
mov
jmp
and
mov
or
pop
mov
and
test
inc
sub
test
je
and
mov
(bad)
sub
inc
and
sbb
cmp
and
ret
add
or
add
push
pop
movzx
mov
mov
sar
mov
jne
push
or
mov
into
push
adc
add
sub
sbb
ds
js
loopne
dec
sub
out
push
mov
push
push
idiv
adc
xor
sar
xchg
aas
add
and
or
call
pop
add
je
jae
std
adc
push
sbb
into
rcl
jne
aas
push
call
dec
dec
inc
mov
shl
inc
jg
daa
les
jne
cmp
mov
int3
push
mov
ins
jmp
iret
call
shl
inc
or
test
mov
sti
outs
call
pop
mov
mov
je
xor
lock
lock
push
adc
xor
je
mov
and
dec
int3
mov
and
xor
cmp
and
je
sbb
jge
xor
mov
out
jbe
out
add
and
jp
add
push
pop
int3
push
ror
dec
add
or
add
into
pusha
and
fwait
push
(bad)
fstp
(bad)
push
aaa
enter
repz
adc
shr
shr
pusha
jp
jmp
(bad)
cmp
or
and
and
adc
inc
pop
adc
xor
adc
cmp
cld
pop
add
je
add
lahf
fwait
popf
jb
dec
sbb
aad
mov
scas
jmp
push
test
adc
push
pop
inc
add
nop
(bad)
scas
test
pushf
out
jge
je
push
retf
sbb
out
push
mov
in
aad
test
jae
push
sub
inc
sbb
or
sbb
pop
ret
add
dec
data16
xchg
ret
or
cwde
pop
cwde
sbb
sbb
dec
cld
mov
imul
sbb
cli
jne
or
or
mov
mov
inc
or
sub
rol
call
lock
add
add
je
cmp
faddp
add
ret
xor
ret
fild
adc
shr
and
xchg
sbb
es
je
adc
cmp
jne
mov
out
dec
mov
add
js
mov
jg
add
or
dec
xor
xlat
hlt
inc
push
call
ret
mov
mov
push
add
sub
pop
scas
scas
scas
cli
adc
jmp
mov
lds
sbb
icebp
or
aad
jbe
jp
and
call
and
int3
out
test
or
inc
dec
and
jne
mov
cli
jne
ffreep
sbb
or
mov
(bad)
leave
je
test
rol
and
clc
jne
pop
push
pop
push
mov
adc
or
pusha
icebp
call
mov
or
call
jg
push
fsubrp
or
or
dec
bound
or
lock
clc
ret
mov
bound
in
je
ss
pop
adc
loopne
adc
call
mov
nop
cmp
add
cwde
popf
sub
fcomp
lods
jmp
imul
add
mov
push
mov
adc
jno
fwait
mov
sbb
inc
(bad)
cmc
inc
or
data16
jae
call
push
js
jae
mov
dec
sbb
outs
stos
dec
and
pop
ret
mov
ror
inc
data16
adc
adc
and
enter
mov
add
adc
adc
ret
adc
jle
add
or
adc
adc
add
mov
leave
cmp
adc
push
xchg
add
bound
jae
push
jl
xchg
pop
and
in
and
inc
adc
adc
or
inc
sbb
push
and
or
pop
lea
push
shl
push
add
out
cmps
lahf
add
and
int
adc
add
mov
inc
fsubr
test
mov
sub
sbb
test
rol
inc
test
xchg
push
cli
rcl
call
ja
lds
push
push
stc
xor
mov
pop
push
lea
adc
push
push
cmps
and
retf
(bad)
cmp
je
add
lea
push
inc
add
mov
push
fnstsw
lods
icebp
adc
add
ja
sub
push
fild
inc
or
push
(bad)
(bad)
jmp
and
jmp
cmp
ret
je
mov
lea
jg
jmp
mov
push
mov
lea
adc
adc
test
mov
mov
and
push
mov
mov
iret
lds
mov
cmp
lods
mov
pop
jne
push
pop
xor
(bad)
push
sbb
add
jo
xor
je
mov
lds
call
push
ins
dec
or
mov
clc
jmp
inc
add
lock
je
sub
je
push
xor
push
cmp
cmp
or
add
add
clc
jbe
sub
inc
aad
mov
push
push
push
iret
sbb
push
mov
call
mov
pop
pop
jmp
push
jge
mov
(bad)
out
sbb
push
mov
cmp
inc
pop
dec
jo
cli
dec
clc
mov
test
or
cmp
je
sbb
sbb
sti
lea
push
adc
shl
or
or
mov
ds
xor
push
pop
pop
setl
iret
pop
ror
imul
and
(bad)
hlt
mov
jmp
add
enter
int3
mov
cli
jne
lea
pop
ror
adc
mov
jne
(bad)
je
pop
jo
and
inc
add
xor
jne
add
or
icebp
inc
call
dec
jbe
clc
call
push
mov
aas
and
cs
mov
push
push
bound
mov
push
pop
adc
cli
xor
mov
(bad)
push
or
push
ror
sbb
mov
jle
mov
pop
add
fwait
add
push
sbb
sub
and
and
push
push
out
fwait
cmp
adc
mov
mov
push
enter
inc
inc
mov
clc
sub
je
dec
dec
je
sub
je
dec
je
or
call
dec
jne
dec
lods
stos
repz
xor
add
push
adc
sbb
(bad)
test
or
inc
emms
xor
sub
jmp
loopne
std
addr16
je
bound
dec
je
dec
je
dec
add
or
inc
or
sar
jb
xor
sete
fxch
jbe
imul
pop
pop
jmp
data16
jecxz
sub
mov
and
ins
call
(bad)
mov
rol
imul
add
stos
add
inc
xor
mov
iret
mov
mov
mov
(bad)
jmp
sub
call
mov
mov
jne
scas
je
adc
in
in
jne
int3
je
jle
call
pop
push
test
ret
mov
sub
or
dec
add
or
mov
aas
jmp
test
std
(bad)
jg
push
cmp
je
mov
movzx
shr
mov
jne
mov
and
mov
sbb
shl
add
ss
(bad)
push
dec
cmp
xchg
imul
(bad)
xor
pop
jae
adc
sar
pop
dec
pushf
add
bound
add
mov
add
call
arpl
jg
inc
add
cwde
cmp
cmps
mov
mov
push
adc
mov
cmp
mov
mov
mov
idiv
stos
clc
add
sar
rol
mov
add
or
or
dec
adc
and
scas
push
adc
dec
sbb
inc
les
mov
push
neg
sbb
adc
call
rol
int
push
push
adc
cs
or
jne
mov
and
cld
arpl
inc
sbb
xor
ja
mov
stc
adc
mov
arpl
mov
push
or
ret
shl
ds
es
pop
mov
add
cmp
or
pop
sbb
mov
mov
mov
jp
cmp
adc
popa
push
icebp
mov
out
pop
xchg
add
push
mov
push
leave
cmp
inc
(bad)
inc
cmp
je
cmp
jne
cmp
addr16
and
call
adc
inc
inc
jne
push
dec
adc
out
cdq
cmp
push
mov
sbb
cmp
push
clc
arpl
push
mov
scas
jecxz
out
adc
and
pusha
push
adc
xor
pop
jp
fcomp
push
outs
ror
or
loope
fild
lahf
mov
movs
lea
aas
sbb
mov
pushf
add
inc
add
fwait
mov
mov
cmc
inc
add
mov
dec
xchg
mov
out
mov
sti
jg
or
push
adc
jmp
adc
sub
cmp
or
shl
dec
es
stos
add
jl
add
pop
mov
cmp
je
lea
push
add
or
jae
mov
inc
push
cwde
icebp
ja
push
push
pusha
mov
xor
cmp
jne
lds
mov
mov
cmp
push
sbb
mov
pop
push
dec
adc
dec
push
dec
shr
sahf
pop
inc
inc
pushf
xor
pop
cmp
dec
shl
cmp
je
cmp
inc
push
sar
mov
shr
(bad)
sti
(bad)
dec
sbb
push
pop
jne
cmp
jne
cmp
je
adc
sbb
shl
dec
mov
scas
mov
sar
ja
ret
push
push
xor
push
cmp
push
jg
lahf
mov
mov
cmp
sbb
cmp
je
jecxz
xor
movs
fistp
push
icebp
ins
mov
xchg
add
arpl
push
or
hlt
fiadd
mov
push
mov
(bad)
cmps
xchg
sub
je
je
cmp
je
or
les
scas
pusha
jne
pop
xor
addr16
(bad)
int3
adc
jl
push
cmp
adc
mov
xor
push
mov
or
jg
sbb
add
push
jmp
adc
pop
pop
ror
push
cmp
push
fnstsw
loope
inc
xor
not
iret
fist
rcr
push
mov
inc
mov
inc
sub
in
cmp
je
mov
mov
mov
(bad)
jae
push
push
push
shl
cmp
jne
mov
inc
fcom
cmp
jne
cld
add
push
mov
pop
pop
je
das
or
dec
add
or
inc
icebp
ja
add
jmp
push
adc
jae
jmp
ds
push
adc
inc
pop
pop
pop
jp
pop
mov
aas
add
pop
dec
add
jnp
and
mov
inc
sbb
out
and
sbb
jno
mov
cmps
sbb
jb
sbb
cli
cmp
jecxz
push
pop
nop
outs
adc
fwait
pop
pop
inc
or
add
adc
pop
sbb
call
mov
pop
call
mov
jne
test
jge
cmp
js
pop
in
push
std
and
push
jo
dec
sbb
jmp
jl
pop
adc
cli
adc
jo
sbb
es
mov
cmp
(bad)
dec
jo
xor
adc
les
mov
arpl
push
dec
push
push
jmp
adc
push
fadd
jne
in
cdq
cmp
jl
jne
xor
cmp
push
mov
je
dec
test
ret
je
jae
sub
push
jb
in
pop
and
aam
cs
jbe
and
push
ins
add
push
cmp
inc
hlt
dec
mov
je
gs
cld
cmp
je
mov
adc
or
stc
mov
sbb
gs
aaa
jne
mul
cmp
add
dec
mov
(bad)
aas
mov
cmp
jmp
cmp
jne
mov
cmp
je
loope
push
cdq
out
push
call
clc
and
rol
inc
push
lea
pop
(bad)
push
(bad)
out
mov
rep
mov
mov
cmc
push
jne
pop
jae
pop
dec
loopne
mov
ja
and
fmul
or
pop
leave
in
or
or
(bad)
cmc
sub
dec
sbb
adc
rcl
jle
push
push
mov
inc
dec
sub
cmp
in
fidiv
pusha
bound
mov
pop
es
ret
call
pop
ret
mov
mov
scas
js
push
pop
test
add
call
popa
inc
jg
int
push
ins
call
and
push
mov
lds
or
mov
add
push
repz
sub
push
adc
(bad)
pop
sbb
cmp
fmul
inc
cwde
xor
loop
sbb
inc
add
or
outs
sub
pop
dec
out
pusha
mov
inc
jl
mov
icebp
test
mov
fwait
push
iret
mov
stos
inc
jmp
push
lea
push
push
and
adc
inc
(bad)
std
dec
mov
push
sbb
push
mov
dec
push
mov
push
not
mov
or
jns
cli
push
mov
and
sbb
push
pop
inc
loopne
shr
add
in
lahf
push
push
push
pop
xchg
mov
pop
mov
(bad)
in
dec
adc
pop
and
cmps
sbb
cdq
jle
dec
adc
inc
or
mov
mov
mov
push
sti
(bad)
ins
div
inc
lock
inc
lock
push
pop
push
and
mov
mov
pop
add
test
cmp
ja
inc
inc
cmp
ja
je
jg
inc
xor
and
push
popa
inc
add
aam
add
inc
push
pop
push
inc
mov
pop
cmp
ja
xchg
cmp
jmp
and
adc
je
dec
dec
push
add
jne
or
jle
or
jp
call
ror
addr16
push
test
push
jmp
add
cmp
ja
xchg
js
push
jmp
push
jmp
idiv
(bad)
inc
je
cmp
ja
je
sub
je
dec
je
dec
je
dec
je
push
arpl
jecxz
push
push
sub
je
or
push
test
dec
je
pop
mov
shr
push
jmp
mov
ja
shl
mov
in
call
xchg
mov
and
mov
push
mov
(bad)
push
jmp
sub
je
(bad)
ins
push
popf
jnp
sti
call
movups
mov
idiv
sub
sub
je
pop
je
fstp
jne
xor
push
sbb
adc
pop
sub
xlat
adc
mov
test
or
(bad)
dec
jne
sub
sub
out
add
xchg
pop
push
mov
xor
push
push
daa
pop
call
add
pop
adc
add
cmp
pop
sbb
jae
mov
das
cli
adc
das
iret
sbb
lsl
dec
pop
mov
pop
pop
aas
and
xor
loopne
pop
push
mov
call
xlat
push
jne
les
adc
sub
mov
inc
add
add
inc
rcl
nop
sub
push
push
or
fdivr
jg
inc
or
gs
mov
mov
call
or
add
dec
loop
mov
mov
(bad)
jge
xor
add
cld
mov
adc
fbld
lds
adc
jbe
call
jmp
je
mov
jmp
movs
inc
mov
sbb
cli
jmp
push
lea
jne
or
cld
dec
adc
jg
adc
mov
cdq
or
cmps
ret
mov
dec
lahf
or
jmp
push
mov
sbb
(bad)
push
lea
push
out
pop
icebp
(bad)
ss
(bad)
jnp
fmul
int
fdivr
and
cmp
je
sbb
pop
pop
pop
sbb
sub
pop
adc
mov
adc
test
lahf
add
push
push
fucomp
dec
loopne
pop
inc
ret
mov
cld
fild
ss
hlt
fdiv
test
test
pop
fdivr
ja
dec
cmp
mov
jne
or
ja
xchg
add
jne
inc
xchg
mov
mov
fdivrp
mov
push
call
mov
push
push
pusha
mov
out
mov
pop
pop
cs
adc
add
js
das
mov
popa
pop
clc
mov
xor
or
pop
jae
cmp
ret
pop
loope
or
je
xor
cmps
push
and
pusha
rcr
or
lock
or
xor
cld
jne
cmp
je
adc
repnz
adc
dec
cmp
pop
pop
setne
mov
ret
xor
jne
add
repnz
lea
push
mov
push
repnz
add
mov
inc
add
jbe
sub
and
add
inc
ja
mov
ja
fist
xor
add
mov
test
xchg
mov
jne
lds
fwait
pop
sub
add
push
call
loope
loop
dec
and
outs
jo
push
cli
adc
mov
add
cmp
or
add
mov
jmp
icebp
mov
adc
mov
dec
stos
pop
(bad)
push
cdq
xor
mov
call
ja
(bad)
mov
sbb
ret
add
mov
call
fincstp
sub
mov
sbb
test
push
mov
aaa
mov
clc
je
push
pop
lea
push
iret
fldcw
cmp
xchg
hlt
cmps
pop
add
shr
adc
xor
stos
add
aam
(bad)
pop
and
(bad)
cmc
pop
leave
mov
mov
cmp
push
or
out
jbe
lock
std
pop
push
mov
xlat
popa
xchg
push
hlt
pop
or
movs
clc
push
jb
rol
inc
data16
je
push
call
mov
inc
push
cld
(bad)
jmp
or
cmp
mov
jmp
mov
push
not
shr
and
dec
scas
or
adc
imul
mov
sti
add
xor
and
int3
cmp
call
add
jmp
add
mov
push
cmp
pop
jne
add
minps
fnsave
or
sbb
ret
jmp
hlt
or
jp
aas
push
or
xor
push
cmp
xchg
sar
addr16
js
push
or
rol
rol
inc
lea
fcomp
std
xchg
sub
lea
pop
pushf
push
mov
jmp
dec
or
stos
(bad)
mov
sbb
and
add
movzx
pusha
mov
(bad)
jns
lods
ja
outs
or
add
je
and
jmp
pop
fs
push
pop
movzx
dec
lea
jne
sub
add
das
test
and
inc
push
aas
add
push
xchg
xor
pop
inc
push
push
cwde
std
fst
cmp
add
or
leave
sub
push
pxor
sti
xchg
ror
ret
xor
loop
push
(bad)
lods
push
addr16
push
push
sbb
push
jmp
push
or
xchg
pop
mov
dec
push
(bad)
cmp
mov
imul
push
push
(bad)
mov
out
mov
arpl
(bad)
dec
xchg
rol
(bad)
jmp
add
inc
adc
(bad)
dec
add
out
jge
je
or
retf
lea
push
push
cwde
jmp
jmp
push
push
push
push
leave
mov
cmp
je
jmp
icebp
push
lea
jmp
mov
lea
and
lea
sbb
add
cld
lods
je
push
adc
(bad)
(bad)
aas
push
or
dec
or
test
jbe
mov
sub
add
push
mov
inc
or
add
mov
sub
push
mov
mov
into
iret
clc
(bad)
aas
jecxz
jl
jne
sub
add
push
add
movs
and
cli
stos
or
pop
pop
adc
call
mov
ret
mov
pop
adc
xor
push
loope
sbb
dec
lea
push
push
aam
push
cmc
(bad)
cmp
lea
call
mov
test
jge
neg
scas
(bad)
mov
push
push
call
dec
push
call
test
bound
mov
cmp
sub
in
mov
push
push
mov
ud0
outs
fidivr
sub
adc
inc
sub
mov
push
mov
mov
add
jns
jmp
inc
and
mov
or
push
(bad)
(bad)
mov
mov
pop
fistp
pop
mov
sbb
(bad)
(bad)
clc
push
push
call
push
push
mov
call
push
push
sbb
sahf
stos
jmp
ret
push
or
dec
inc
xor
loope
mov
sbb
js
aaa
push
pop
cmp
add
popf
fidivr
test
ret
mov
shl
cwde
xor
or
push
push
adc
xor
into
pop
push
aas
add
ds
outs
movs
and
adc
sub
cmc
enter
add
or
sbb
lods
addr16
xlat
test
adc
loop
mov
mov
sub
out
adc
add
push
adc
sub
sbb
nop
inc
add
gs
mov
mov
pop
loopne
scas
pop
rcl
les
hlt
adc
xor
push
or
adc
pusha
add
add
xchg
adc
lock
pop
sar
mov
and
sar
inc
jne
xor
mov
pop
nop
lahf
dec
jns
mov
inc
add
mov
leave
push
jge
loope
je
sub
or
add
cmp
add
inc
or
or
inc
lock
mov
push
mov
mov
xor
lahf
fs
inc
add
sbb
mov
mov
cmp
je
or
add
sbb
movs
sub
dec
push
cmp
pop
je
or
xor
pop
add
cmps
or
add
sti
xchg
sub
enter
stos
cmp
data16
or
test
xlat
sti
cmps
adc
mov
je
shl
fist
xor
aad
call
xor
test
je
add
sti
add
jne
mov
pushf
jle
xor
push
inc
xor
add
cwde
movs
inc
cmp
ds
add
pop
cmp
xchg
or
lock
inc
pop
test
int3
inc
jo
or
enter
pop
inc
sub
inc
and
mov
mov
in
mov
out
cs
mov
push
fwait
mov
jo
test
jnp
arpl
jne
push
mov
mov
pop
aaa
adc
clc
fsub
in
mov
mov
add
jbe
inc
or
jecxz
dec
xchg
test
jmp
sub
movs
(bad)
cmp
inc
pusha
inc
mov
stos
ins
out
outs
add
xchg
sub
cwde
push
sub
pop
lods
mov
pushf
sub
cmp
and
das
xchg
xchg
push
cmp
jg
cld
lds
mov
ins
nop
pop
cmps
test
adc
mov
je
or
sbb
out
push
dec
adc
lahf
clc
fild
add
ss
call
mov
imul
adc
and
nop
or
add
push
in
loop
hlt
push
cmp
je
cmp
push
sbb
outs
mov
imul
add
adc
(bad)
mov
lea
jecxz
aad
cmp
or
je
sbb
addps
int3
(bad)
cmp
cmp
pop
test
sub
and
ror
add
sbb
sub
jl
rcl
push
xor
icebp
push
je
sub
push
jne
scas
mov
push
(bad)
(bad)
sbb
in
pop
push
inc
sub
mov
cmc
adc
arpl
mov
addr16
sub
and
call
loopne
mov
inc
xor
lock
jne
lds
shr
sbb
adc
shr
stos
inc
outs
test
mov
or
inc
sbb
mov
sbb
ins
pop
pop
mov
cli
dec
hlt
mov
add
or
add
arpl
test
xor
sub
pusha
adc
and
pop
xchg
pop
ret
mov
push
jbe
pop
mov
in
enter
inc
add
out
sbb
mov
add
mov
inc
loope
daa
jae
mov
push
xor
lea
mov
push
add
or
xchg
mov
rcr
mov
out
loope
hlt
gs
gs
push
adc
nop
ins
mov
dec
aas
and
adc
aas
xchg
jo
sbb
and
xchg
cmp
imul
push
shl
and
push
test
xor
xor
data16
jbe
cmp
ret
mov
mov
daa
pusha
clc
shl
mov
test
or
adc
cdq
push
mov
loopne
arpl
in
out
dec
adc
dec
push
lea
push
push
mov
xor
test
mov
add
call
pop
mov
mov
cmp
jge
mov
mov
stos
fnsave
and
or
cli
icebp
pop
mov
push
call
or
inc
fistp
sbb
jmp
adc
inc
add
neg
arpl
jmp
ss
cmp
stos
push
imul
add
xchg
mov
push
sbb
or
cmp
jae
movzx
jmp
lods
adc
push
mov
jge
(bad)
(bad)
jnp
mov
mov
jne
cmp
clc
jmp
movaps
call
add
(bad)
push
add
push
data16
cld
inc
pop
adc
std
pop
cld
cs
jne
jne
mov
adc
jg
push
push
(bad)
lods
jmp
mov
lea
es
add
mov
push
push
ror
xchg
pop
outs
outs
add
dec
mov
push
and
imul
cmp
jo
sti
mov
push
stc
or
jno
and
and
mov
inc
jge
inc
mov
mov
push
sbb
push
mov
call
jg
mov
or
mov
pop
xor
not
test
mov
mov
cmp
mov
mov
mov
or
inc
cmp
add
sbb
mov
inc
or
push
sub
dec
adc
mov
cmp
mov
jge
mov
imul
(bad)
dec
mov
mov
cmp
mov
jne
jns
push
push
jbe
sbb
(bad)
mov
jne
(bad)
cmp
pop
mov
sbb
jge
mov
add
test
cwde
loop
dec
mov
dec
mov
jmp
and
mov
aas
or
mul
add
or
add
cli
loope
add
push
adc
push
das
test
sar
xor
cmp
mov
jne
push
and
mov
pop
mov
dec
cmp
iret
je
mov
and
xor
adc
pop
pop
pop
icebp
sbb
fild
data16
lods
push
push
dec
mov
xchg
cwde
pop
mov
dec
dec
pushf
mov
jecxz
sub
cmp
jae
mov
push
ins
push
test
xchg
push
and
add
jmp
shr
add
jbe
mov
out
clc
aaa
cld
sub
and
lea
cld
mov
dec
call
add
sbb
add
sub
test
jbe
ins
ja
sub
cmp
movnti
retf
or
ja
sbb
mov
cmp
ja
jbe
sti
inc
es
inc
clc
inc
add
inc
or
jbe
cmp
jb
sub
lea
jns
xchg
mov
sub
adc
xor
push
push
mov
mov
add
sub
mov
hlt
jo
or
sub
add
in
jp
mov
mov
add
je
ins
xor
dec
std
or
sti
mov
sub
push
sub
sub
cmp
je
sbb
xchg
lahf
add
push
sub
adc
add
adc
cmp
or
xchg
push
sbb
push
sub
cmp
je
out
ret
push
mov
call
sub
jmp
sbb
push
sub
imul
idiv
idiv
ret
sub
mov
call
jmp
adc
push
cmp
mov
push
push
push
call
pop
adc
ret
xor
pop
push
sub
sbb
js
ret
dec
and
lea
sub
add
into
mov
std
aaa
jg
enter
(bad)
jle
push
sub
add
jo
push
inc
xchg
or
in
ficom
sub
add
push
cld
add
sub
leave
or
(bad)
mov
cmp
jb
cmp
call
ror
jmp
pusha
popf
sti
add
push
sub
push
stos
add
push
sub
mov
pop
sub
pop
pop
cmp
jae
add
xor
int3
mov
xor
aaa
xchg
lods
jae
push
ja
loopne
xor
cmp
stos
mov
xlat
out
lea
icebp
sbb
adc
in
(bad)
(bad)
push
(bad)
mov
clc
mov
sbb
dec
pop
leave
ret
mov
cmps
nop
inc
jg
or
inc
nop
add
gs
jg
mov
push
push
scas
add
jo
jg
ins
jmp
nop
add
or
mov
mov
iret
cmc
xchg
es
dec
cmp
sbb
adc
pop
mov
mov
add
push
add
je
push
mov
push
test
and
cmp
or
cmc
lahf
xor
lea
push
push
call
in
out
push
push
adc
xchg
and
sub
ret
sbb
dec
sub
scas
push
cmp
call
int3
mov
push
shl
or
sub
das
mov
adc
and
cmp
ret
or
push
aad
or
add
mov
sti
or
push
rol
push
je
(bad)
inc
lock
push
lea
add
inc
int3
mov
inc
ret
mov
mov
xchg
test
test
pop
div
ret
and
dec
xor
es
mov
push
call
mov
inc
jmp
cmp
je
push
cmp
and
adc
pop
add
fdiv
in
dec
xor
push
dec
push
pop
fld
xorps
or
adc
je
ret
sub
xchg
xchg
mov
imul
jge
lea
push
add
movaps
mov
xchg
dec
jne
(bad)
adc
jne
mov
xchg
dec
dec
lds
cmp
add
ds
rcr
shl
js
lea
cmp
ja
add
rol
or
or
or
mov
sub
push
push
das
inc
pop
pop
push
pop
or
push
xchg
test
add
mov
ja
mov
xor
mov
mov
lds
dec
cld
inc
and
inc
and
icebp
(bad)
cli
aas
inc
push
leave
cld
jno
ror
das
call
mov
jae
popa
and
not
pop
test
jmp
ret
sbb
mov
mul
xor
mov
push
and
adc
mov
data16
push
or
test
ins
xor
lds
mov
mov
mov
xchg
loopne
add
push
loop
push
push
or
mov
pop
xchg
push
fcomp
ret
pop
mov
xchg
(bad)
test
xlat
rol
push
push
enter
shl
rep
mov
fild
mov
stos
dec
lds
loope
les
cmp
jbe
xor
(bad)
out
xchg
push
fmul
cmp
jae
mov
add
inc
cli
mov
sbb
pop
in
in
jo
jmp
add
cmc
or
push
pop
xchg
clc
inc
adc
add
mov
cmp
jbe
mov
xchg
cmp
jae
adc
sbb
and
mov
dec
jl
or
idiv
dec
cmp
shl
sub
mov
mov
mov
add
push
push
ja
sub
call
add
repnz
sti
lahf
lds
xor
cmp
push
push
call
cmp
dec
adc
adc
aas
mul
mov
inc
adc
inc
sbb
add
sub
leave
xor
jb
push
stc
mov
jne
mov
jmp
adc
je
add
movs
ja
add
test
jge
mov
add
ja
(bad)
sbb
pop
adc
add
xor
jle
push
xor
and
add
sti
outs
call
or
jle
je
mov
popa
xchg
fsub
mov
pop
pop
mov
ror
jmp
push
jg
push
cmp
mov
gs
cmp
jne
aas
cdq
popa
pop
je
inc
sbb
push
jo
jge
push
cmp
jne
cmc
or
cmp
imul
pop
mov
jne
and
xor
sbb
enter
loope
mov
jecxz
jmp
cld
push
mov
sub
ret
mov
xor
and
add
jg
cdq
adc
add
add
pop
sub
pop
add
cmp
cmps
jbe
push
jmp
mov
mov
test
ss
fnsave
je
or
push
fs
and
cmp
imul
fwait
or
aad
xchg
mov
cld
push
idiv
ret
mov
je
push
push
push
cli
jmp
and
ret
je
mov
jmp
cmp
je
lea
adc
xrelease
je
mov
dec
jg
xchg
xor
add
mov
mov
call
lock
int3
jae
cmp
jbe
(bad)
scas
dec
cmp
ja
or
retf
add
sbb
into
push
push
push
lea
xor
adc
(bad)
sub
push
call
jmp
mov
mov
xchg
mov
test
test
pop
rcr
adc
mov
rcl
aam
dec
call
mov
leave
adc
je
mov
xor
mov
add
mov
mov
jnp
inc
adc
or
add
imul
loopne
pop
aas
jne
sub
push
pop
test
or
pop
inc
xor
push
fdiv
or
or
call
test
mov
jne
jne
inc
out
sub
mul
jle
add
je
push
mov
inc
jne
test
jne
or
sbb
cwde
or
cld
out
pop
mov
mov
test
je
inc
cmp
pusha
test
je
cmp
je
push
push
mov
call
(bad)
jmp
mov
aaa
scas
and
je
mov
in
and
loope
push
test
addr16
outs
mov
pop
mov
push
sahf
or
mov
jmp
and
xor
call
mov
ss
pop
add
mov
mov
pop
and
mov
add
cmp
push
into
pusha
and
ret
mov
hlt
adc
mov
rcr
sbb
or
(bad)
daa
jne
add
add
push
in
pop
adc
loopne
ja
mov
mov
cmp
push
xor
(bad)
adc
or
lea
call
mov
mov
sub
mov
xchg
jl
mov
mov
fist
xchg
test
sub
mov
add
jmp
sub
cmp
pop
mov
stos
jl
adc
jne
loopne
sbb
mov
adc
arpl
push
fs
jmp
push
mov
call
pop
add
inc
sbb
addr16
adc
jp
adc
cmp
cmp
mov
mov
lea
push
push
add
les
out
jne
out
lock
add
out
mov
rol
jmp
repnz
popa
call
ins
dec
add
pushf
mov
lea
or
push
clc
cmp
repnz
add
or
in
out
sbb
and
jae
(bad)
inc
adc
pop
sbb
sub
adc
or
and
add
ja
(bad)
cmp
jl
cmp
jle
cmp
jl
cmp
jg
or
movsx
sub
jmp
scas
jecxz
pop
xor
cmp
jge
mov
mov
(bad)
sbb
add
jmp
movzx
push
cld
jg
scas
je
inc
inc
inc
inc
cmp
jne
xchg
(bad)
(bad)
mov
ss
cmp
je
mov
cmp
jne
mov
outs
inc
cmp
inc
sub
sti
aaa
jl
mov
inc
jmp
je
cdq
pop
add
(bad)
fwait
dec
(bad)
aas
and
add
cmova
push
mov
inc
inc
jmp
and
cmc
sub
mov
xchg
inc
mov
add
loope
js
jne
cmp
adc
arpl
xchg
mov
out
jo
and
and
cmps
ja
(bad)
sub
jne
call
mov
mov
push
inc
xor
and
push
pop
in
cwde
call
mov
jmp
push
fidiv
sub
test
add
add
xchg
xor
lods
sbb
inc
sub
je
dec
je
sub
mov
mov
jle
fild
jmp
int3
mov
sbb
cmp
leave
jmp
sub
or
iret
add
add
pop
sbb
je
dec
mov
ret
push
mov
and
call
add
sub
dec
add
inc
call
je
adc
ins
jo
lea
idiv
pop
push
jmp
push
call
ja
or
push
scas
push
inc
inc
lock
cmp
stos
pop
mov
mov
mov
data16
mov
add
mov
dec
add
pop
lea
xor
lock
jne
xchg
test
jmp
add
sub
shr
mov
or
push
jmp
or
add
inc
inc
xlat
mov
cmp
je
mov
push
shl
adc
arpl
and
inc
add
add
fmul
xchg
cmp
mov
adc
mov
jge
outs
add
push
mov
into
push
push
inc
nop
jb
sti
shl
jle
pop
or
aaa
add
aaa
add
add
xlat
adc
xor
ss
call
mov
cmp
outs
push
push
jg
or
or
cmp
and
cmp
xchg
push
push
lea
sub
mov
sti
add
pop
in
mov
lahf
lods
xor
pusha
push
pop
dec
test
mov
cmps
dec
mov
inc
cmp
jg
mov
add
lock
arpl
add
jg
inc
nop
(bad)
sub
jbe
sub
add
cmp
call
cs
je
inc
or
or
push
bound
sbb
inc
mov
xor
or
rol
push
xor
out
xor
iret
loope
cdq
and
push
cmp
push
jne
xchg
cmp
sbb
jo
out
call
inc
mov
retf
imul
cmp
cmps
jae
ror
or
mov
mov
xlat
mov
std
cdq
idiv
add
hlt
mov
mov
inc
or
jmp
dec
daa
dec
add
arpl
ss
cmp
jge
jb
es
repz
in
jg
pop
or
xchg
imul
push
cld
cld
jmp
mov
mov
hlt
pusha
add
inc
or
test
mov
jge
xor
jnp
fld
pop
inc
adc
shl
or
jnp
cld
paddd
xchg
retf
and
jge
push
push
inc
fld
dec
call
inc
sti
ss
sbb
add
dec
jne
lea
or
pop
cmp
or
ficom
push
ds
mov
mov
adc
jle
mov
mov
dec
mov
je
add
test
mov
pop
sbb
fimul
je
stos
outs
mov
cs
xor
cmp
push
inc
inc
dec
jno
(bad)
(bad)
jge
cmp
jne
dec
inc
mov
cdq
idiv
push
push
mov
ins
jl
push
call
mov
mov
jle
push
cmp
or
test
push
les
les
cmps
pop
into
fs
cmc
(bad)
xor
jg
jmp
mov
cmp
ret
cmp
or
push
push
popa
jns
inc
mov
jo
call
pop
sub
aaa
push
sub
push
or
jle
add
jle
int3
je
adc
jne
and
sbb
push
pop
and
lahf
sbb
dec
xchg
lahf
push
or
loope
cmps
add
mov
or
lds
int3
(bad)
loopne
dec
push
cs
add
xor
test
or
pop
test
pop
xchg
jge
ins
push
add
(bad)
and
mov
je
pop
call
(bad)
cmp
loope
cmp
jo
jl
mov
test
and
test
in
xor
adc
fstp
push
push
push
outs
sub
pop
repnz
xor
jmp
(bad)
test
je
add
loope
xchg
movs
inc
and
or
jne
imul
or
adc
jne
loope
mov
xor
neg
xor
cmps
repz
xor
mov
sbb
add
xor
sub
sbb
xchg
sub
rol
mov
xor
mov
pop
xor
push
and
and
pop
icebp
mov
test
add
push
xchg
adc
push
pusha
cmp
jmp
jmp
aam
pop
ja
mov
jae
jge
push
jbe
mov
js
fimul
dec
push
sub
add
pop
xor
ror
clc
mov
pop
es
pop
or
xor
sbb
(bad)
cld
je
cs
std
or
add
xor
fld
adc
sbb
xchg
xor
pop
inc
in
je
mov
push
add
jmp
pop
mov
je
push
push
je
pop
and
es
daa
push
push
and
mov
or
mov
and
inc
or
mov
sub
pop
xor
adc
push
xlat
(bad)
mov
sub
je
adc
icebp
mov
jg
or
inc
adc
dec
and
(bad)
call
popa
icebp
sbb
push
call
fild
pop
fbld
cld
pop
pop
push
push
push
movzx
mov
or
jge
cmp
jle
jbe
inc
jg
cmps
jmp
mov
sub
inc
xchg
xchg
xor
sar
sub
xchg
push
jg
rcl
pop
mov
and
aaa
pop
or
cmps
or
mov
adc
add
jmp
mov
xor
scas
and
mov
sbb
sbb
sbb
adc
scas
mov
inc
lock
jmp
add
xor
mov
push
adc
out
inc
sub
sub
jne
cmps
mov
adc
aam
cmp
mov
inc
sbb
sbb
xchg
mov
push
icebp
push
xor
mov
push
or
xchg
or
pop
mov
leave
or
jbe
call
adc
mov
mov
pop
mov
jb
std
popf
push
cmp
je
push
cmp
push
repnz
shrd
fist
push
cmp
jae
dec
in
sub
and
cli
add
jge
call
sub
clc
mov
sbb
add
mov
cmp
xsavec
xor
mov
cli
dec
mov
and
add
adc
mov
add
imul
jmp
mov
mov
repnz
push
add
mov
add
aaa
pop
mov
pusha
sub
mov
dec
xor
cmp
xchg
loopne
enter
sbb
iret
mov
mov
js
cwde
jp
mov
ja
or
in
pop
and
ret
push
add
mov
ja
mov
std
out
xor
inc
push
sti
nop
push
aaa
push
aaa
loopne
xor
neg
inc
or
test
mov
pop
fst
fdivr
push
fs
push
div
mov
push
clc
xor
jo
and
and
or
jge
test
push
mov
loopne
je
cld
and
mov
mov
dec
cmp
test
adc
pop
daa
rep
int
add
pop
xlat
mov
add
mov
nop
inc
xor
lock
xchg
in
loop
pop
sub
xchg
mov
add
add
arpl
gs
add
movs
out
sub
sub
xchg
jp
lock
std
mov
enter
mov
xchg
mul
sub
add
jns
les
ins
repnz
aas
shl
sbb
mov
in
xor
aas
add
aas
push
fcom
mov
pusha
xchg
push
push
pop
mul
daa
mov
bound
add
xchg
ins
cmp
jg
mov
shl
dec
mov
out
popf
cld
movups
mov
xchg
cmp
or
and
dec
clc
iret
inc
cmc
and
sbb
call
ins
call
sbb
sub
sub
or
sub
es
cli
sbb
pop
inc
xchg
jg
add
rcr
add
sbb
cmp
in
std
lahf
out
add
and
enter
loopne
rcr
out
jp
mov
push
pushf
retf
leave
push
cdq
mov
rcr
cmp
inc
adc
inc
fild
mov
adc
cs
cmps
or
repz
sti
or
mov
or
cmp
adc
mov
or
inc
lds
cmp
jp
fimul
gs
add
or
mov
inc
test
add
mov
cld
out
ret
int3
lea
push
jge
stos
and
lahf
add
lahf
mov
xor
jmp
aas
mov
mov
mov
mov
add
or
ja
or
push
or
and
mov
rol
inc
sub
mov
adc
add
mov
mov
mov
enter
sbb
inc
daa
mov
out
outs
and
mov
xchg
(bad)
stc
sbb
mov
push
call
mov
mov
lea
add
cmp
mov
or
pop
push
in
push
leave
into
pusha
or
into
sbb
or
or
or
test
aad
pop
data16
shr
cmp
push
emms
aaa
add
dec
adc
push
fsubr
dec
cmp
mov
push
stos
dec
sbb
inc
nop
pop
and
or
pop
cmp
aaa
cmc
cli
stos
adc
pop
push
and
push
imul
mov
sbb
leave
pop
push
push
or
or
or
dec
hlt
xor
lock
mov
push
jg
fdivr
xor
jne
div
dec
push
mov
cld
add
add
dec
jne
mov
test
mov
push
call
cli
jp
mov
rcl
or
pop
ret
clc
pop
iret
shl
out
mov
xchg
ss
push
push
ret
aas
ror
push
inc
lea
mov
(bad)
cmp
imul
or
sahf
and
je
push
in
dec
pop
mov
(bad)
mov
push
ret
mov
cld
dec
push
jmp
push
mov
mov
loopne
cli
dec
xchg
add
mov
test
push
cmp
mov
pop
(bad)
jne
mov
mov
mov
jmp
test
ja
call
je
mov
push
mov
cmp
je
mov
sub
je
mov
mov
ret
int3
in
inc
aad
ror
clc
enter
daa
xor
sub
(bad)
and
jl
add
je
std
add
adc
cmp
mov
sbb
scas
adc
call
or
sub
rcr
lea
jnp
xor
and
xor
(bad)
je
mov
lods
loop
adc
xchg
mov
(bad)
jne
mov
je
cmc
jmp
xchg
daa
clc
push
mov
push
cmps
add
push
push
pop
pop
ret
push
sbb
imul
outs
and
ja
add
jle
cmp
jge
dec
test
je
inc
pop
cmp
jle
adc
add
mov
repz
jl
aas
sbb
and
mov
shl
push
push
(bad)
fdiv
jl
and
(bad)
fcom
loop
jnp
lds
daa
adc
pop
or
mov
cmps
sbb
mov
call
dec
pushf
inc
xor
add
test
outs
adc
ror
sbb
int
add
shl
push
or
add
mov
call
cmp
jl
lea
imul
lea
adc
call
inc
hlt
pop
pop
xchg
inc
jle
dec
mov
jp
ja
mov
call
pop
or
mov
mov
mov
(bad)
inc
mov
or
and
add
jne
mov
push
and
lea
dec
lds
pop
fwait
(bad)
mov
push
mov
push
pop
test
je
arpl
jl
rol
test
xchg
fs
sub
std
mov
addr16
xor
mov
lea
stos
and
popf
adc
call
jmp
add
add
adc
dec
or
add
loope
mov
mov
test
mov
jp
or
mov
push
aas
add
and
sub
add
pop
dec
into
lea
mov
lock
or
pop
mov
pop
icebp
add
dec
sbb
xchg
xor
loopne
bound
fstp
jle
mov
jle
popf
or
dec
adc
inc
stc
add
loope
push
mov
pushf
jns
jae
les
cmp
dec
icebp
je
imul
dec
jae
loopne
mov
mov
(bad)
jbe
dec
adc
es
or
ret
adc
(bad)
cmp
sbb
sbb
outs
or
inc
enter
sbb
mov
or
xor
xchg
ss
mov
pop
dec
js
sbb
fcom
jns
push
cmp
cmps
sub
dec
add
push
mov
mov
push
mov
out
mov
enter
leave
mov
mov
mov
cli
out
icebp
push
call
jo
jge
mov
or
adc
push
sbb
push
pusha
ss
xor
and
add
dec
adc
in
xor
sub
sar
mov
rcl
lock
jne
call
mov
call
mov
push
push
lahf
cdq
leave
push
jbe
push
xchg
sbb
add
sbb
call
and
cmp
clc
or
cmps
add
inc
cld
add
cld
or
adc
mov
sti
xchg
iret
ret
aam
add
or
div
mov
and
jno
out
add
xor
in
ja
and
sub
push
mov
outs
or
arpl
jge
je
jmp
push
sub
ja
mov
jmp
mov
and
xchg
rol
xchg
lea
(bad)
test
pop
add
hlt
mov
jmp
or
rol
jge
push
add
mov
mov
pop
mov
in
jg
call
sub
add
jo
mov
mov
mov
dec
mov
cmp
aaa
aad
mov
add
add
(bad)
in
inc
lds
push
out
clc
test
mov
je
sbb
cld
push
nop
add
mov
or
xchg
lahf
add
add
(bad)
call
jmp
and
adc
ret
push
pop
ret
mov
hlt
pop
or
fstp
retf
mov
ret
jle
add
div
mov
in
sbb
sbb
icebp
adc
mov
adc
lds
call
mov
pop
sahf
sub
mov
jo
mov
ret
push
adc
addr16
mov
mov
fidiv
cld
std
jg
adc
dec
js
add
add
add
jbe
push
or
ror
jmp
jbe
in
pop
mov
or
push
ror
or
or
mov
aas
sbb
mov
push
mov
push
inc
mov
sbb
push
adc
push
push
mov
js
pop
movs
sub
jmp
cmp
je
push
fs
lahf
push
xchg
and
call
xchg
in
mov
pop
ret
mov
cdq
sub
pusha
sbb
cdq
call
cmc
frstor
push
mov
xchg
sbb
and
sbb
out
add
ret
mov
sub
and
fist
and
push
or
sub
adc
jmp
mov
repz
call
push
pop
jl
jo
test
push
stos
cmps
test
les
es
ja
cmp
ja
mov
in
sub
jg
add
and
inc
add
mov
cmp
mov
or
add
pop
lea
lea
cdq
push
add
ja
dec
inc
loopne
add
sub
cmp
and
push
pop
cmp
jle
mov
les
mov
push
jp
(bad)
sbb
inc
hlt
in
sar
adc
dec
add
jmp
sar
clc
imul
add
mov
inc
das
(bad)
(bad)
(bad)
mov
mov
shl
inc
xor
not
mov
mov
mov
add
dec
jne
sbb
into
push
push
mov
jne
adc
aaa
inc
mov
lock
hlt
pop
sbb
jne
push
(bad)
or
mov
rol
(bad)
mov
xor
mov
inc
loope
sar
mov
mov
mov
pop
fwait
scas
mov
icebp
out
xchg
xor
dec
dec
shl
jle
mov
data16
jle
call
int
inc
mov
mov
jb
mov
clc
clc
ret
shl
dec
mov
add
arpl
shr
sbb
mov
add
mov
sbb
add
sar
loopne
inc
cmp
sbb
xchg
int3
xor
sbb
test
add
les
sbb
dec
inc
sbb
inc
push
mov
push
ja
stos
pushf
mov
or
ja
lods
push
nop
xor
sbb
lahf
ja
mov
push
jo
sbb
es
gs
popf
add
or
jo
sbb
pop
or
xor
in
imul
or
push
enter
jo
xchg
add
pop
ret
push
dec
push
and
push
cdq
mov
inc
out
dec
xchg
push
mov
xchg
fs
mov
xor
or
push
call
adc
test
and
or
pop
mov
and
mov
lds
ins
outs
mov
push
adc
dec
je
push
les
popf
in
cmp
pop
sysret
inc
test
aad
adc
jle
in
or
add
pusha
mov
xor
dec
inc
lea
push
push
push
(bad)
jmp
push
push
adc
mov
lea
fld
(bad)
outs
sbb
lahf
or
fstp
sahf
ins
jne
sbb
adc
mov
jne
sub
push
pop
ret
mov
sbb
mov
lock
jmp
jmp
mov
dec
cmp
inc
adc
sahf
mov
mov
push
rcl
mov
int3
mov
mov
and
pop
cmp
jb
xchg
sub
sbb
pop
mov
cmp
imul
(bad)
jg
mov
cmp
je
cmp
je
cmp
adc
sbb
sub
cli
jae
rcl
or
jmp
pop
mov
pop
inc
jmp
push
loope
mov
push
xchg
xor
pop
es
or
xor
mov
add
cmp
pop
push
mov
dec
inc
sbb
sbb
aam
cs
inc
pop
push
aas
or
js
push
inc
mov
and
add
sbb
jl
bnd
push
in
pop
adc
push
lea
in
pop
sar
and
cdq
mov
inc
jge
and
mov
test
mov
sub
sbb
or
movs
push
sbb
sar
or
push
mov
cmp
mov
or
and
xchg
arpl
shl
mov
mov
stos
mov
jg
leave
push
mov
movzx
movzx
shl
push
adc
dec
push
cmp
cmp
mov
sbb
pop
inc
xor
sub
cmp
mov
dec
pusha
mov
mov
je
mov
loop
scas
pushf
cmp
add
add
sbb
inc
mov
lods
pop
aam
(bad)
jg
jne
and
push
pop
pop
nop
mov
push
push
je
call
and
inc
cmp
sti
call
cmp
mov
mov
pop
setne
adc
sub
and
mov
and
pop
pop
or
sub
inc
in
out
leave
aad
adc
mov
push
add
cmp
movs
dec
add
push
jne
push
pop
mov
jae
test
pop
xor
add
jmp
pop
pop
add
push
inc
xchg
cmp
jle
pop
inc
je
dec
add
cmps
sub
sub
xor
xor
or
mov
retf
(bad)
dec
add
add
cmp
pop
jmp
sub
inc
mov
std
scas
jle
jne
cmc
jl
adc
sbb
inc
mov
push
lea
jne
push
mov
pop
and
jg
add
addr16
mov
ja
inc
push
mov
cmp
outs
shr
add
scas
adc
mov
jo
dec
std
sbb
push
push
lea
push
mov
ja
(bad)
push
mov
push
push
in
mov
add
mov
call
jne
mov
lea
push
push
push
dec
jae
mov
out
sbb
jne
js
push
hlt
push
mov
dec
test
jne
call
cmp
mov
outs
je
cs
cmp
or
call
pop
inc
push
push
xor
push
addr16
clc
(bad)
cmp
push
push
push
and
jnp
push
iret
push
push
pop
pop
add
mov
ret
mov
cld
leave
add
rol
jo
test
es
cmc
adc
or
push
mov
dec
jo
lods
and
mov
test
dec
mov
push
xor
sub
loop
into
sub
(bad)
sub
adc
sar
or
js
fld
sub
dec
cld
jae
(bad)
xor
jns
pop
(bad)
call
inc
mov
cmp
je
push
adc
scas
pop
mov
pop
mov
fild
arpl
push
lds
jmp
test
add
sbb
push
shl
or
push
add
ret
and
lea
lock
mov
fcmovnu
adc
mov
mov
pop
adc
and
or
push
popf
pop
xor
mov
sub
das
mov
dec
loopne
push
add
in
mov
or
push
imul
or
jl
loopne
in
in
and
or
bound
and
lock
sbb
dec
rcr
add
mov
and
dec
in
pop
aam
adc
leave
ror
mov
jmp
mov
dec
add
jno
sbb
fadd
jle
jmp
mov
pusha
xchg
lds
push
mov
pop
gs
mov
mov
loope
mov
add
pop
jg
jmp
sbb
lahf
push
pop
xor
gs
mov
test
out
jle
jge
int3
lea
inc
js
push
dec
add
lea
icebp
in
lea
mov
pop
in
jbe
lea
xchg
adc
lea
fcom
xchg
xchg
dec
ret
mov
out
mov
inc
lea
add
fisttp
mov
in
jmp
push
in
inc
dec
mov
cld
mov
and
pop
dec
xchg
jle
push
pop
lea
pop
dec
lea
push
test
pop
ss
into
cmp
and
and
mov
lea
or
or
out
dec
or
add
push
ss
(bad)
and
pop
add
jb
mov
ja
out
sbb
dec
add
lea
fdiv
les
rol
lock
sub
test
mov
call
lea
ret
pusha
and
fsub
lea
jae
or
lea
sub
mov
call
jnp
sbb
fcomp
(bad)
int3
int3
mov
in
out
sub
sub
mov
cmp
outs
add
mov
xchg
sbb
mov
push
enter
mov
add
or
setg
pop
push
daa
ret
adc
js
aas
aas
inc
int3
in
sbb
xchg
cmp
shr
retf
dec
pop
(bad)
mov
or
mov
ret
jle
pop
xlat
mov
enter
sub
out
(bad)
test
test
pop
xlat
scas
mov
bound
sbb
into
lds
test
out
bound
(bad)
sbb
inc
ss
or
add
pushf
mov
ret
and
loopne
pop
and
test
in
movs
ret
xchg
dec
das
mov
daa
ret
frstor
sub
add
or
add
and
lea
pop
or
add
push
cli
dec
fdivr
dec
mov
sbb
outs
sub
pop
add
mov
add
adc
mov
add
aaa
lock
add
dec
jo
or
push
test
leave
fcomp
sub
clc
rol
cdq
mov
xchg
mov
inc
xchg
sbb
mov
sbb
cld
or
push
mov
mov
mov
fwait
mov
or
inc
sub
xchg
add
dec
enter
enter
push
cmp
add
sub
push
add
retf
jo
inc
inc
push
add
cld
test
xor
sub
or
ja
retf
add
popa
and
arpl
and
sub
add
aas
pusha
clc
push
in
cmp
xlat
cmp
add
or
pop
xor
or
add
xor
or
add
xor
or
add
or
add
xor
bndstx
xchg
sbb
or
loope
prefetchw
xchg
sbb
or
and
or
cs
prefetchw
or
prefetchw
sbb
pusha
mov
mov
bswap
add
enter
ins
or
xor
loope
js
xor
lds
mov
add
fmul
ret
xchg
outs
mov
mov
clts
(bad)
das
add
sbb
xor
scas
xchg
daa
addr16
dec
sub
(bad)
test
mov
cmp
mov
ret
xchg
lahf
daa
scas
push
cs
cs
pop
dec
jg
into
inc
sub
push
pop
mov
in
and
jl
xchg
pop
inc
pop
mov
push
xor
sbb
lahf
add
xchg
jg
mul
pop
mov
push
call
and
hlt
or
daa
mov
dec
in
lods
lea
pop
lea
cli
es
lahf
mov
lea
mov
sbb
dec
out
popa
fxch
bound
mov
add
inc
mov
into
inc
ins
inc
xor
iret
xlat
jnp
sbb
or
push
add
or
loope
cs
mov
sub
push
iret
fs
ret
mov
dec
pushf
inc
push
push
dec
adc
sub
jbe
bound
dec
shr
jbe
adc
(bad)
xchg
pop
ins
adc
shl
pusha
out
pop
in
add
call
dec
arpl
pusha
push
sbb
inc
pop
xor
and
adc
and
out
or
pusha
adc
je
arpl
mov
rcl
bound
out
inc
cs
out
sysret
scas
add
ja
pop
pop
mov
add
mov
jbe
xchg
ror
lea
pop
mov
ret
mov
or
xchg
fadd
or
das
pop
mov
and
add
lea
add
xchg
mov
mov
arpl
inc
push
push
test
rdmsr
xchg
cmp
pop
call
xchg
retf
bound
dec
mov
xchg
test
je
mov
or
mov
mov
sub
sbb
push
push
inc
xchg
cld
(bad)
retf
imul
or
lea
push
or
(bad)
and
and
mov
add
int3
and
add
mov
inc
in
out
sar
dec
ret
mov
and
fist
mov
popa
sub
mov
jg
daa
add
scas
sar
or
push
and
add
sub
cwde
dec
std
or
sub
lea
scas
dec
(bad)
fcom
sti
or
pop
in
lea
xchg
cwde
mov
adc
mov
adc
jnp
mov
inc
sar
pop
mov
fcomp
add
retf
shl
or
add
or
bound
ror
lahf
or
mov
out
add
(bad)
mov
(bad)
add
inc
and
xlat
(bad)
sub
int3
sub
fild
or
loop
mov
pop
mov
xchg
push
lea
stos
cmp
pop
out
xor
clc
mov
adc
packsswb
push
mov
inc
cmp
(bad)
xor
sbb
mov
jl
pop
pop
sbb
popa
jg
arpl
xor
jbe
mov
arpl
adc
dec
add
inc
pushf
cdq
test
pop
inc
dec
fadd
mov
or
fistp
mov
test
out
lea
mov
xchg
das
pop
mov
arpl
and
or
push
in
mov
shl
ret
pop
outs
in
pop
xlat
mov
and
out
add
push
call
jbe
push
dec
addr16
cwde
or
mov
adc
(bad)
inc
jo
aaa
dec
mov
inc
popa
mov
in
addr16
dec
cmp
iret
xor
pop
jo
cwde
in
(bad)
jp
push
jecxz
or
pop
jl
clc
sub
bound
pop
ret
or
das
iret
mov
xchg
mov
adc
dec
xor
popa
pop
aas
iret
adc
mov
and
pushf
or
jl
mov
and
ins
xor
jbe
aam
das
dec
push
sbb
cmp
add
rol
adc
mov
adc
out
bound
dec
shr
push
out
dec
ret
fmul
sub
add
fsubr
jmp
pusha
cmp
aad
cmp
inc
xchg
or
xor
sbb
pop
add
test
pop
add
std
mov
popa
mov
(bad)
(bad)
lea
mov
cld
or
sbb
adc
lea
xchg
fldenv
sub
sti
sub
push
mov
or
adc
or
cmp
ss
pop
aaa
jnp
je
adc
mov
cmp
xchg
pop
ss
cli
scas
sbb
push
push
or
nop
or
or
fdiv
mov
inc
or
leave
push
lods
popa
cmp
inc
(bad)
mov
imul
cmp
rcl
adc
or
jnp
and
icebp
sbb
dec
or
loope
add
add
and
fcomp
cmp
ror
mov
sbb
and
or
sub
aaa
push
inc
mov
xchg
or
jnp
xchg
or
rcr
or
add
ret
sbb
(bad)
dec
fsub
test
dec
sbb
fsub
js
adc
or
hlt
or
or
or
or
adc
inc
(bad)
cmp
and
pop
inc
adc
pop
pop
add
jae
push
(bad)
adc
inc
cmp
loopne
pusha
dec
pop
sub
das
mov
ret
mov
gs
inc
mov
pop
jo
adc
xchg
or
shr
nop
cmp
add
cwde
push
xor
pop
pusha
lods
inc
enter
xor
jp
xor
lahf
push
add
retf
inc
sub
call
adc
test
lea
inc
or
sbb
or
jg
lea
add
mov
cmp
cdq
test
fadd
call
bound
adc
or
ins
push
mov
and
adc
mov
bound
js
pop
ins
push
fwait
mov
movs
or
or
or
or
ins
push
cld
or
ins
or
mov
scas
push
xchg
sub
jg
pop
cmp
mov
mov
pop
push
mov
add
mov
inc
sub
das
addr16
xchg
mov
je
jl
pop
das
cdq
add
inc
and
aaa
mov
dec
lock
ret
les
pop
adc
inc
arpl
add
or
mov
lds
mov
xor
lock
adc
add
sub
pop
pop
mov
or
pop
fcom
dec
pop
mov
add
cwde
daa
in
in
push
pop
test
pop
mov
mov
sub
lahf
aaa
jg
es
pop
xor
jbe
jb
scas
(bad)
scas
(bad)
pop
add
fld
aaa
mov
inc
cmp
pop
aas
jg
lea
pop
mov
and
mov
xchg
mov
mov
leave
mov
sbb
das
pop
pop
popa
and
push
sub
cmp
adc
arpl
add
sbb
or
add
adc
nop
sar
out
mov
sbb
cld
pop
cmc
sbb
outs
push
pop
aaa
add
mov
dec
fsub
(bad)
cmp
xchg
cmp
pop
add
sbb
and
dec
mov
adc
push
mov
adc
pop
pusha
cmp
int
push
in
lea
pop
daa
xor
sahf
inc
add
rcr
into
stc
sbb
add
das
jg
sbb
add
inc
jecxz
arpl
popa
push
sbb
lea
mov
push
inc
dec
mov
sub
fild
mov
popf
test
push
in
(bad)
push
js
mov
enter
and
stos
jno
lea
arpl
mov
ret
mov
or
addr16
mov
jo
pop
mov
ins
fadd
aas
enter
test
pop
clc
inc
mov
lods
and
outs
in
shr
out
mov
sbb
jp
fisttp
pop
jmp
pusha
repnz
enter
add
div
das
mov
add
push
retf
test
or
mov
clc
pop
cmps
jns
and
and
mov
xor
mov
mov
sub
mov
add
push
enter
inc
ret
pop
aam
fstp
lea
or
or
mov
aas
sar
add
and
mov
jbe
rol
lock
add
pop
jno
lea
loop
loop
std
lea
retf
or
and
(bad)
pusha
pop
jnp
sti
adc
clc
adc
add
mov
mov
xchg
inc
cmps
and
add
mov
inc
adc
and
sar
cmps
or
pusha
add
sbb
movups
in
sbb
or
retf
test
xor
cs
pop
dec
mov
mov
add
nop
pop
sub
sbb
mov
(bad)
cmp
dec
lea
fmul
pop
jnp
mov
in
and
sub
retf
jbe
sub
bnd
mov
or
add
ret
xor
sbb
div
jg
test
lahf
mov
add
dec
and
mov
leave
les
out
fld
and
mov
xcrypt-ctr
cmps
pop
xchg
cwde
pop
enter
cmp
push
in
mov
inc
pop
scas
mov
pusha
fwait
push
mov
test
dec
and
push
mov
xor
loopne
outs
pop
xlat
lea
add
iret
lock
pop
inc
jp
ins
xchg
or
or
mov
clc
add
cmp
loope
xor
mov
int3
mov
mov
pop
in
adc
or
or
or
cs
pop
jnp
pop
mov
js
lea
jge
or
fs
add
gs
scas
mov
sub
jne
inc
js
lahf
mov
(bad)
and
(bad)
push
push
pop
mov
les
call
aas
in
and
lods
lock
and
fistp
xor
dec
or
mov
and
pop
popa
lahf
adc
mov
and
mov
and
jnp
mov
add
rcl
mov
xor
test
repz
inc
pop
ror
pop
pop
add
dec
jne
fstp
dec
outs
fxch
adc
sub
pop
out
adc
mov
pop
ret
mov
pop
mov
cmp
xlat
mov
add
nop
mov
and
cmc
jne
mov
pop
xor
lahf
pop
adc
lahf
add
cmp
mov
(bad)
rcl
mov
jbe
iret
mov
retf
jle
or
test
push
push
mov
push
fdivr
xor
adc
fxch
inc
inc
sti
mov
sub
lea
inc
cmp
mov
dec
inc
call
retf
and
mov
and
mov
or
arpl
loope
movd
adc
cmp
lods
cwde
adc
push
rcl
jnp
xor
das
call
cwde
adc
adc
arpl
xor
mov
bswap
mov
test
jl
mov
jnp
mov
ret
call
mov
mov
rol
or
xchg
mov
jnp
adc
ins
gs
inc
sbb
push
inc
xor
lahf
mov
ss
popf
mov
adc
mov
pop
mov
cld
mov
mov
fst
(bad)
(bad)
nop
sub
sub
or
push
ror
adc
pop
mov
mov
inc
mov
mov
add
cwde
adc
rcl
xor
sbb
rol
(bad)
xchg
popa
add
jmp
retf
es
sbb
jne
pushf
mov
mov
dec
mov
mov
fsub
xchg
(bad)
fldcw
fwait
mov
mov
inc
mov
mov
mov
adc
mov
xchg
or
adc
add
xchg
sbb
arpl
adc
jmp
adc
sbb
push
adc
xchg
add
lahf
or
es
pop
enter
jbe
push
jl
add
add
(bad)
mov
push
ret
int3
cmc
repnz
cmp
dec
jg
mov
xchg
jge
and
addr16
bound
mov
repz
imul
xchg
and
loopne
pop
pop
sub
pop
sbb
lods
leave
aas
or
mov
not
add
sbb
dec
xor
mov
test
adc
add
inc
add
or
push
pop
aaa
dec
shl
inc
xor
sbb
dec
shl
pop
push
xor
shl
xor
adc
jne
cld
sbb
add
add
sbb
add
int
pop
xlat
jae
add
pop
push
add
or
out
je
shl
scas
test
mov
dec
rcr
call
add
xor
shl
cmp
jb
xor
rol
pop
shl
or
jne
cwde
test
outs
pop
dec
xlat
xor
and
and
dec
shl
mov
mov
pop
adc
sar
or
(bad)
and
push
xor
or
inc
call
and
add
and
add
les
cmps
call
cmps
pop
dec
cmp
imul
call
call
call
ss
call
add
ret
fwait
scas
imul
adc
add
adc
add
call
mov
call
not
or
call
mov
mov
cmps
imul
outs
call
or
loopne
imul
cmps
jmp
repnz
add
push
pop
dec
ds
cmps
imul
or
in
call
xchg
mov
cmps
imul
jae
cmps
sbb
jmp
imul
imul
sub
inc
pop
je
call
fsub
hlt
add
cmps
imul
cmps
imul
shl
mov
lahf
imul
or
jle
push
or
sahf
add
shl
or
xor
shl
shl
repnz
xor
adc
or
sub
dec
pusha
outs
xor
shl
xchg
lods
mov
rcr
out
or
or
push
and
shl
add
int3
shl
xchg
dec
dec
shl
cmp
jmp
pop
adc
add
adc
add
xor
shl
lods
sahf
mov
dec
shr
pop
dec
inc
jl
xor
xor
sbb
not
or
jmp
mov
xor
nop
xor
dec
xor
shl
sub
or
xor
shl
in
rol
lods
call
inc
repz
add
xor
mov
shl
add
dec
xor
shl
jb
pushf
stos
neg
xlat
repnz
out
mov
or
or
and
dec
shl
push
xor
xchg
mov
shl
and
add
shl
jbe
dec
shl
loop
dec
shl
add
push
xor
shl
jp
cwde
scas
out
aas
dec
sar
or
push
add
femms
add
or
add
call
xor
push
lahf
jmp
or
xchg
pop
add
inc
mov
je
(bad)
push
add
je
pop
cmps
imul
je
or
or
adc
int3
das
dec
lahf
imul
outs
pusha
iret
je
push
lsl
idiv
arpl
aad
add
add
inc
add
push
dec
add
pusha
inc
cmovs
sti
je
jnp
pop
push
sbb
add
test
xor
shr
jno
jae
shl
or
lods
mov
dec
shr
test
pop
xor
cs
ins
(bad)
(bad)
aas
out
add
jb
gs
xor
add
push
push
inc
push
je
jb
jne
add
(bad)
(bad)
call
ins
dec
outs
jbe
dec
gs
outs
jb
add
ins
je
inc
jns
gs
outs
push
imul
(bad)
push
inc
gs
jb
arpl
jae
gs
jo
add
ins
ins
outs
arpl
(bad)
(bad)
out
jg
jb
add
gs
xor
push
xor
popa
jo
push
jg
add
xor
inc
imul
outs
jae
dec
popa
outs
fs
sbb
gs
add
sub
mov
mov
fsubr
add
gs
inc
add
mov
loopne
or
pop
pop
shl
mov
push
adc
fbld
push
xchg
fmul
add
int3
fstp
inc
add
jl
test
push
sbb
jae
ret
lock
jnp
int3
sbb
adc
sti
sub
and
sbb
dec
and
jae
and
adc
out
dec
fdiv
sub
js
or
and
outs
cwde
jnp
dec
pop
sbb
add
pop
inc
cmp
adc
mov
outs
scas
rcr
push
repz
push
sbb
inc
scas
xor
outs
lsl
cwde
mov
add
int3
sbb
pop
(bad)
cmp
cmc
shr
push
hlt
xchg
xor
adc
xor
xlat
loope
sbb
pop
inc
(bad)
xor
data16
xor
(bad)
(bad)
push
cmp
cmp
cmp
ss
popa
data16
arpl
xor
xor
mov
retf
std
(bad)
(bad)
call
(bad)
(bad)
cmps
mov
mov
inc
add
xor
adc
add
inc
add
cs
add
neg
sysret
add
inc
add
add
out
sub
xor
xor
xor
xor
aaa
inc
inc
cmp
ss
jg
test
inc
add
mov
cmps
(bad)
fsubr
(bad)
inc
nop
into
inc
add
inc
inc
xor
xor
inc
xor
cmp
xor
inc
inc
xor
(bad)
push
cmp
cmp
cmp
rol
mov
ja
(bad)
fist
xor
xor
xor
xor
inc
inc
aaa
inc
cmp
inc
xor
mov
fld
inc
add
std
mov
mov
cmp
(bad)
mov
xor
inc
xor
cmp
inc
xor
xor
inc
cmp
mov
(bad)
(bad)
jg
iret
fbstp
xor
cmp
cmp
cmp
inc
xor
mov
push
xor
xor
fmul
loop
add
icebp
mov
imul
sbb
add
add
ja
enter
add
or
mov
inc
cmc
inc
add
adc
pop
and
not
or
imul
outs
ja
jmp
int3
sbb
add
in
sbb
sbb
dec
jmp
repz
and
imul
nop
clc
test
stc
sub
and
icebp
out
add
cs
outs
xor
hlt
daa
shl
dec
or
mov
add
dec
repnz
sbb
and
dec
xor
inc
pusha
(bad)
dec
mov
inc
rol
push
imul
fsub
dec
cwde
jmp
loopne
add
add
arpl
je
inc
dec
inc
add
out
jge
pop
inc
add
inc
add
push
pop
adc
or
mov
movs
mov
(bad)
(bad)
jg
aas
pop
ror
iret
mov
mov
mov
imul
dec
add
mov
inc
hlt
add
fdivr
pop
push
push
cs
cmp
sbb
pop
dec
pop
sub
inc
inc
push
inc
xor
jnp
(bad)
call
inc
dec
gs
addr16
and
and
outs
fs
pop
add
(bad)
adc
add
sub
(bad)
jg
sub
add
push
pusha
push
dec
add
add
add
loope
mov
xlat
retf
add
loopne
add
fisub
stos
out
sbb
jae
inc
add
or
add
add
jbe
scas
xor
add
popf
jmp
sti
cmp
add
adc
or
push
push
or
adc
add
adc
inc
adc
rcr
out
jnp
scas
cmp
add
add
sbb
test
jnp
das
outs
ja
xor
shl
adc
or
or
cmp
adc
and
xor
and
sbb
jae
lods
xor
aas
pop
add
pop
test
inc
mov
add
pop
sbb
(bad)
(bad)
aas
sbb
inc
sub
mov
xor
add
loopne
add
cwde
inc
add
inc
add
jne
push
inc
add
dec
inc
add
inc
add
add
pop
push
adc
loope
jl
call
inc
add
adc
and
inc
add
nop
test
add
shr
pop
shl
jno
pop
(bad)
fwait
sub
add
dec
mov
sahf
or
mov
add
out
adc
pop
or
movs
xchg
xor
adc
or
adc
sbb
push
push
inc
add
inc
xor
pop
fstp
or
jne
mov
adc
loopne
leave
fmul
pop
dec
or
wbinvd
push
inc
or
test
cmp
add
rcr
and
sysenter
mov
imul
push
mov
inc
add
add
cld
pop
adc
jo
stos
jae
jb
pop
push
ja
es
pop
inc
and
inc
sar
inc
add
pop
int3
cmp
add
pop
and
add
addr16
or
and
cdq
jae
cmc
ror
cdq
or
int3
inc
cmc
das
outs
mov
inc
add
xchg
or
(bad)
lock
das
lock
jo
add
add
(bad)
and
xchg
mov
enter
add
fchs
pop
int3
push
inc
mov
aaa
cmp
ret
icebp
xor
pusha
scas
aaa
fsubr
or
sub
mov
inc
pop
inc
add
xor
cmp
push
sub
mov
mov
sub
jmp
mov
pop
sub
push
or
scas
adc
sbb
aas
xor
pop
inc
scas
sti
push
sbb
fs
xchg
cmp
add
adc
(bad)
adc
dec
add
jg
jae
nop
pop
fild
not
pop
inc
and
jo
cmps
fadd
ret
pop
inc
add
lock
jo
pop
enter
xor
rcl
nop
push
loopne
xor
pop
(bad)
test
inc
mov
add
add
dec
aaa
test
xor
xlat
jmp
jo
cwde
rcl
pusha
sbb
daa
(bad)
leave
mov
add
jo
mov
scas
cmp
add
or
pop
les
cdq
jae
or
pop
add
and
aaa
pusha
pop
mov
pop
push
or
rcr
mov
pushf
sub
jb
mov
iret
xchg
cld
pop
mov
jg
sbb
adc
mov
xchg
sub
xchg
push
lahf
call
adc
lock
mov
push
pusha
outs
pop
mov
je
and
mov
cs
jle
push
inc
repnz
and
push
lahf
clc
mov
lahf
rcl
pop
pusha
xchg
xchg
xor
mov
(bad)
mov
xchg
cmp
pop
adc
daa
nop
pop
popa
outs
add
push
daa
xor
mov
call
adc
fs
nop
xchg
das
sgdtd
sbb
mov
loop
jns
jecxz
sbb
test
pop
add
sub
adc
sub
xchg
pop
daa
pop
mov
and
in
add
sbb
std
addr16
jg
push
out
ja
xor
inc
and
rol
cmps
ja
push
out
add
jo
scas
sub
scas
loopne
pop
or
lsl
mov
fwait
cmp
call
out
sbb
adc
dec
pop
nop
xchg
ror
pop
cwde
sti
push
adc
xor
and
(bad)
ins
pop
shl
add
dec
add
test
inc
push
jo
rcl
xor
push
enter
pop
pop
sub
sbb
ud0
outs
cwde
test
lahf
sbb
mov
pop
inc
jae
mov
mov
es
push
cwde
add
push
call
lods
daa
mov
mov
pusha
aaa
inc
out
arpl
inc
push
ret
nop
pop
test
sbb
into
adc
pop
push
add
fdivr
and
das
adc
(bad)
pusha
xchg
push
test
push
ss
adc
or
pop
(bad)
adc
iret
add
ja
scas
xchg
das
sub
mov
mov
inc
jo
enter
mov
shl
pusha
add
jae
jg
jmp
cwde
xchg
sub
mul
push
or
mov
xchg
pusha
sbb
scas
adc
xchg
iret
(bad)
fdiv
in
dec
or
das
add
and
jbe
adc
jo
add
inc
stos
inc
pusha
pop
adc
lock
pop
push
xchg
mov
shl
jo
adc
retf
add
cmps
adc
pop
and
push
push
mov
lock
xor
jbe
int3
pop
daa
adc
push
in
dec
(bad)
pop
jecxz
push
dec
cld
inc
and
and
cdq
inc
add
pop
(bad)
dec
xchg
add
sbb
mov
cmp
pusha
inc
add
lods
pop
outs
pusha
mov
out
and
add
xchg
bound
jae
outs
inc
ror
push
mov
pop
and
nop
cmps
push
clc
add
fbld
inc
add
jnp
imul
pop
sub
adc
and
hlt
or
mov
sbb
and
js
dec
add
addr16
or
enter
lahf
lock
call
pop
adc
add
or
push
in
and
aaa
outs
pusha
cwde
and
outs
mov
add
add
add
jb
inc
jnp
rcl
inc
daa
dec
add
cs
or
mov
mov
adc
mov
pusha
sbb
dec
adc
jo
and
addr16
inc
mov
adc
mov
neg
add
and
push
and
addr16
ror
mov
pop
dec
fadd
push
scas
cwde
add
aaa
rol
mov
add
jb
push
mov
pusha
je
enter
aaa
jae
jae
fmul
inc
rol
pop
lock
fwait
or
fiadd
adc
mov
dec
xlat
add
push
push
pop
sub
add
dec
jne
out
pop
out
ror
fadd
mov
aam
cld
aaa
sar
add
dec
inc
add
out
xor
inc
add
push
imul
push
inc
add
inc
add
inc
add
inc
inc
add
popf
add
adc
inc
add
pop
jle
(bad)
popa
iret
xor
mov
neg
ins
aas
je
inc
add
push
dec
cmp
add
aas
ins
xor
pushf
push
mov
add
cmp
adc
ja
ja
lahf
add
add
add
shrd
jg
std
add
add
inc
rcl
inc
add
push
jb
out
xchg
imul
inc
mov
int3
aam
jmp
adc
fstp
cdq
mov
and
pusha
(bad)
mov
mov
xor
adc
pusha
or
lock
pop
pop
nop
pop
mov
loopne
test
ret
and
jnp
outs
add
add
inc
pusha
daa
inc
inc
add
inc
add
inc
add
add
inc
add
out
mov
add
pop
inc
add
adc
inc
add
lods
cmps
inc
add
jge
out
mov
call
or
sub
mov
mov
ret
or
ja
and
loopne
inc
add
push
jo
pop
test
mov
and
add
add
sar
add
jmp
leave
mov
iret
fs
push
jno
inc
inc
add
dec
add
dec
adc
cmpxchg
scas
push
add
inc
inc
nop
outs
bound
or
inc
add
add
or
mov
scas
add
add
pusha
add
adc
ja
xor
arpl
call
add
jne
pusha
ja
or
pop
and
(bad)
mov
test
jle
add
xchg
inc
jl
jo
inc
add
mov
or
xor
mov
pop
mov
xor
add
repnz
(bad)
fs
add
add
add
add
pop
out
or
xor
push
inc
add
add
xchg
xlat
xor
inc
jb
cmp
pop
inc
add
out
test
xor
and
inc
add
(bad)
aas
ret
dec
cmp
add
push
in
loopne
dec
test
clc
dec
add
add
mov
inc
aaa
xor
dec
iret
pop
mov
add
lods
es
or
push
adc
pop
mov
sbb
scas
add
mov
push
pop
aaa
das
rcr
add
shl
pop
lock
add
jle
in
xor
test
lahf
pusha
aaa
mov
sti
lahf
pusha
aaa
aas
hlt
nop
in
add
dec
cwde
mov
inc
ret
out
inc
mov
das
and
add
fbld
daa
jae
sbb
pop
xchg
cwde
sti
add
push
rcl
adc
or
or
xor
out
mov
jb
retf
adc
push
xor
add
add
std
outs
nop
into
out
pop
mov
add
cmp
add
stc
sahf
add
mov
out
sub
ror
inc
out
add
pusha
jae
or
hlt
movs
or
inc
pop
cmp
add
pop
add
inc
(bad)
jb
and
lahf
cmp
jg
dec
cli
adc
scas
push
inc
mov
(bad)
jg
lahf
mov
push
retf
dec
sbb
or
inc
add
mov
out
sbb
add
daa
les
adc
cmps
fnstenv
xor
dec
add
xor
add
shl
daa
sub
cmp
cmp
add
jae
inc
add
add
pop
inc
add
inc
add
movntq
sub
add
xor
add
xor
pop
ja
aam
xor
pop
sbb
add
pop
add
pop
retf
mov
xchg
lock
and
add
aas
inc
add
(bad)
jg
inc
sbb
dec
xor
lods
mov
dec
adc
shl
adc
dec
push
or
xor
or
fsubr
add
loopne
jae
mov
add
pusha
mov
leave
pushf
or
mov
ja
xlat
xor
in
in
rcl
cmp
add
jo
ja
seto
rcl
add
xor
mov
add
das
pusha
mov
jae
lock
retf
inc
add
outs
add
and
inc
add
pop
cs
jbe
add
add
xchg
inc
rcr
pop
add
fbstp
xor
mov
add
ss
enter
xchg
sbb
iret
ja
add
pop
(bad)
jo
inc
pop
loopne
mov
jo
inc
int3
std
adc
jo
inc
nop
pop
xlat
adc
add
pop
loopne
das
pop
inc
out
ud2
push
ins
int
add
iret
ret
clc
xor
add
and
lahf
inc
push
inc
mov
sbb
pop
ja
test
fbld
inc
add
pop
rol
dec
or
nop
xor
inc
fsub
sbb
mov
and
push
mov
mov
and
ja
sbb
adc
pop
adc
pop
fwait
pop
cmp
fld
add
lock
xchg
sbb
add
daa
neg
add
pop
loopne
mul
not
inc
inc
stos
sti
(bad)
mov
pop
inc
add
outs
add
bound
dec
popa
jb
inc
jo
pop
(bad)
(bad)
out
mov
outs
add
jne
add
jo
dec
arpl
outs
jbe
inc
gs
(bad)
cmp
arpl
add
add
call
add
add
cwde
cmp
add
add
es
fild
add
push
pop
mov
add
(bad)
xlat
aaa
std
aaa
lods
scas
mov
add
add
(bad)
fadd
mov
lahf
icebp
imul
not
rcl
neg
aas
or
(bad)
out
(bad)
dec
add
fidivr
repnz
in
inc
js
cmp
or
mov
(bad)
mov
pop
leave
cmp
repz
(bad)
(bad)
(bad)
fbld
inc
and
scas
fsubr
cmp
add
js
data16
imul
std
mov
mov
xor
out
mov
push
xor
int
cdq
and
ins
pop
mov
jmp
(bad)
xlat
push
mov
rcr
mov
movs
sti
repz
push
movs
sbb
out
inc
jbe
and
repz
add
sahf
repnz
(bad)
(bad)
mov
add
add
push
add
ja
mov
lahf
add
add
add
add
add
add
add
add
add
jmp
push
add
add
jge
(bad)
(bad)
inc
movs
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
jae
mov
pop
xchg
pop
fld
sub
jp
retf
or
enter
jns
(bad)
(bad)
dec
aad
xor
xchg
or
or
mov
or
int3
push
cmp
scas
mov
xchg
adc
(bad)
(bad)
(bad)
call
mov
add
adc
adc
adc
adc
mov
inc
pop
rcl
data16
sbb
sbb
enter
push
sbb
sbb
sbb
inc
pop
icebp
pop
mov
and
(bad)
(bad)
(bad)
jmp
es
jmp
mov
jnp
inc
sub
jecxz
mov
mov
adc
(bad)
push
shl
mov
cdq
xor
ss
aaa
xor
and
cmp
cmp
cmp
or
(bad)
(bad)
inc
inc
sbb
inc
xor
push
inc
gs
jl
xchg
dec
mov
iret
dec
lock
adc
dec
popa
push
mov
(bad)
(bad)
call
push
jmp
push
xchg
pop
(bad)
pop
cmp
pop
or
pusha
sahf
popa
in
bound
fs
(bad)
(bad)
(bad)
jmp
inc
push
pop
ins
mov
jo
jno
jae
je
jbe
ja
jns
jp
(bad)
(bad)
(bad)
(bad)
jl
jge
jg
add
sbb
xchg
push
(bad)
out
mov
xchg
xchg
(bad)
(bad)
call
xchg
call
jns
cmp
mov
imul
(bad)
(bad)
push
aaa
mov
mov
sar
movs
les
xchg
int3
xchg
into
cdq
(bad)
(bad)
(bad)
call
mov
(bad)
int3
fsub
(bad)
fcom
fild
loope
jecxz
in
out
jmp
dec
lock
(bad)
push
mov
stc
je
mov
add
push
aaa
or
movs
sbb
and
and
fild
loope
retf
cs
xor
xor
ss
cmp
cmp
cmp
(bad)
aas
push
inc
lea
inc
icebp
inc
sbb
inc
pop
inc
jb
xchg
dec
lahf
dec
movs
dec
cmps
dec
movs
dec
lahf
dec
xchg
(bad)
(bad)
(bad)
call
push
jns
gs
dec
push
xor
push
xlat
push
mov
mov
pop
ss
pop
pop
xlat
pop
movs
pop
outs
(bad)
(bad)
(bad)
call
pop
call
pusha
xchg
bound
arpl
arpl
lods
popaw
addr16
imul
push
push
imul
fldcw
sub
outs
jne
sbb
jo
jno
jno
jb
jae
jae
(bad)
(bad)
(bad)
push
stos
jne
jbe
jbe
ja
js
js
jns
jns
jp
jp
jnp
jl
jl
jge
(bad)
(bad)
(bad)
(bad)
jge
jle
jle
jg
jg
cmp
xchg
sbb
mov
test
test
(bad)
inc
mov
mov
mov
mov
mov
lea
mov
(bad)
in
(bad)
fs
fist
cmp
xchg
xchg
or
(bad)
(bad)
(bad)
call
mov
and
xchg
xchg
add
dec
cdq
mov
call
inc
(bad)
(bad)
(bad)
call
popf
out
popf
pop
sahf
ret
lahf
xchg
lahf
sti
lahf
arpl
cdq
mov
retf
(bad)
(bad)
(bad)
jmp
sti
mov
daa
movs
mov
mov
pop
cmps
jns
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
aas
stos
sahf
stos
cld
stos
pop
lods
mov
lods
shr
jmp
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
push
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
add
mov
test
sti
mov
hlt
mov
(bad)
mov
cmp
shl
add
shl
pop
ret
addr16
mov
pop
les
(bad)
(bad)
inc
cmps
(bad)
test
lds
add
(bad)
sbb
mov
enter
(bad)
(bad)
(bad)
dec
mov
xlat
leave
and
jo
mov
retf
mov
int3
test
ror
sbb
data16
int
(bad)
(bad)
(bad)
dec
inc
into
xchg
into
fmul
es
jo
mov
rcr
shl
rol
ror
xchg
(bad)
(bad)
(bad)
call
loopne
sub
jno
mov
aam
aam
aam
aad
aad
aad
aad
(bad)
test
retf
(bad)
adc
(bad)
(bad)
call
pop
xlat
lahf
xlat
in
sub
jb
mov
(bad)
ficomp
lahf
(bad)
fisubr
fld
(bad)
(bad)
(bad)
(bad)
fadd
fisttp
xchg
fst
fstp
ficomp
fsubp
fisub
fild
lods
(bad)
(bad)
(bad)
(bad)
fcomip
fbstp
loopne
loopne
loopne
loopne
loope
loope
loope
loop
loop
loop
loop
jecxz
jecxz
jecxz
(bad)
(bad)
(bad)
jmp
adc
push
in
in
in
in
in
in
in
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
jmp
push
call
fucomp
sbb
jmp
pop
jmp
push
jmp
jmp
(bad)
(bad)
(bad)
(bad)
jmp
in
dec
in
mov
int3
in
or
dec
in
xchg
(bad)
in
add
inc
out
jle
mov
out
je
mov
(bad)
(bad)
(bad)
out
out
out
sub
push
lock
icebp
pop
icebp
cwde
icebp
aad
adc
dec
repnz
(bad)
repnz
aas
repz
(bad)
(bad)
push
mov
repnz
push
cmps
hlt
loope
sbb
cmc
iret
cmc
or
inc
test
xor
(bad)
(bad)
push
ins
mul
clc
push
clc
nop
clc
retf
clc
add
stc
mov
in
stc
daa
cli
popa
cli
fwait
cli
aam
(bad)
(bad)
(bad)
cli
push
sti
dec
sti
cmp
sub
cld
frndint
adc
dec
std
test
mov
(bad)
data16
(bad)
(bad)
(bad)
(bad)
lahf
(bad)
xlat
(bad)
adc
dec
inc
leave
sahf
xor
inc
inc
cmp
xor
(bad)
(bad)
(bad)
jmp
cs
daa
daa
es
and
and
and
pop
push
push
push
sbb
sbb
shl
add
sbb
sbb
pop
push
or
enter
adc
dec
enter
adc
sbb
inc
jb
or
push
enter
xor
pop
dec
daa
loopne
add
sar
aad
loop
(bad)
fistp
fdiv
cmc
imul
jl
pusha
loopne
inc
mov
(bad)
(bad)
sti
(bad)
out
inc
adc
add
bound
inc
add
push
dec
add
dec
inc
add
inc
push
add
je
jae
dec
push
add
inc
inc
add
pop
cmp
pop
add
add
(bad)
inc
pop
pop
adc
pop
xor
int3
popa
add
inc
add
mov
pop
nop
fld
pop
add
jge
sbb
add
push
mov
fadd
pop
das
out
sahf
cmp
add
push
in
cdq
and
pop
push
add
jmp
sbb
das
mov
add
mov
inc
inc
cmp
inc
add
loopne
in
test
fisubr
dec
pop
cdq
add
sahf
add
inc
dec
adc
nop
out
add
jo
cmp
pop
mov
enter
rcl
mov
fbstp
pop
add
stc
sahf
sbb
xor
mov
xchg
or
les
test
adc
sar
xlat
test
out
add
sbb
jno
jg
(bad)
jg
aas
aas
stos
push
pop
push
fdiv
xor
add
push
(bad)
(bad)
(bad)
inc
cmp
jbe
cmp
loopne
rcl
mov
jl
xor
out
cmps
(bad)
dec
aaa
fcos
(bad)
(bad)
(bad)
aas
cmps
push
retf
mov
inc
mov
in
sahf
cmp
movs
aas
mov
daa
sar
sar
mov
and
outs
cmp
jnp
scas
inc
loope
test
div
inc
dec
pop
add
cli
add
inc
pop
jecxz
xchg
hlt
mov
(bad)
iret
jo
out
lock
jg
mov
sbb
inc
repnz
xchg
pusha
in
jnp
adc
add
adc
mov
push
pop
inc
add
icebp
inc
add
mov
mov
nop
out
popf
ret
add
loopne
inc
adc
sti
sahf
add
adc
cmp
add
nop
xlat
pop
das
fnstenv
fdiv
add
inc
inc
addr16
mov
jg
aas
jo
dec
add
sbb
test
aas
nop
wrmsr
loop
stc
inc
xlat
lock
clc
inc
lahf
and
mov
push
daa
pop
mov
scas
and
test
nop
iret
nop
add
cwde
add
nop
add
or
add
adc
pop
push
or
mov
mov
or
xor
inc
add
push
xor
add
out
xchg
ja
add
inc
add
inc
outs
xor
and
add
or
and
pop
inc
add
and
aam
add
mov
dec
or
(bad)
rol
pop
iret
daa
jae
and
inc
mov
adc
xlat
lock
fdivr
add
xchg
fnstsw
sub
add
and
xchg
push
add
loopne
loopne
xchg
add
(bad)
pop
xor
ret
pusha
addr16
sti
xor
mov
inc
add
xor
ja
add
inc
add
pop
pop
and
pop
scas
sbb
sub
mov
out
jo
dec
xor
rol
sbb
add
daa
rol
fcom
mov
sbb
and
fadd
popa
inc
dec
mov
loope
(bad)
xchg
mov
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
adc
(bad)
inc
out
pop
xchg
xor
ja
popa
push
out
mov
les
(bad)
(bad)
inc
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
(bad)
(bad)
dec
mov
sub
mov
sbb
dec
jno
repz
test
(bad)
(bad)
(bad)
call
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
call
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
(bad)
(bad)
(bad)
cmp
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdivr
(bad)
(bad)
push
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
(bad)
(bad)
jmp
and
mov
cdq
xchg
mov
mov
or
or
and
or
(bad)
(bad)
jmp
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
push
mov
push
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
(bad)
jg
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
(bad)
(bad)
(bad)
jmp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
(bad)
(bad)
jmp
sub
ror
popa
mov
into
push
mov
je
mov
aam
movs
(bad)
(bad)
(bad)
dec
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
(bad)
(bad)
inc
add
pop
dec
or
cmp
add
daa
adc
or
and
(bad)
call
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
call
or
mov
shl
mov
call
mov
cmp
(bad)
(bad)
(bad)
(bad)
jmp
fild
push
fdiv
or
test
fs
ds
or
or
push
(bad)
(bad)
(bad)
jmp
popf
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
push
retf
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
stc
stc
out
mov
pop
aad
mov
call
xchg
shl
push
repnz
addr16
shl
mov
aas
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
(bad)
(bad)
(bad)
(bad)
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
(bad)
(bad)
(bad)
dec
add
mov
das
es
lds
or
sub
mov
cmps
call
(bad)
(bad)
(bad)
inc
xor
shl
sbb
ret
es
pushf
mov
ins
add
(bad)
call
addr16
jb
push
add
adc
mov
jnp
sbb
(bad)
(bad)
(bad)
call
mov
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
sbb
mov
ja
mov
out
or
retf
pop
or
adc
sahf
gs
(bad)
(bad)
dec
sar
imul
ins
push
js
or
push
add
mov
cmp
addr16
(bad)
(bad)
jmp
dec
inc
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
test
jg
mov
jmp
repnz
retf
mov
cmps
mov
sar
(bad)
(bad)
(bad)
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
push
fild
sub
add
xlat
dec
shl
push
stos
add
add
add
rcr
xor
or
es
jmp
push
mov
je
pusha
fisttp
adc
stos
dec
push
ror
shl
inc
int3
dec
xor
lds
mov
add
add
mov
dec
xchg
inc
(bad)
jp
jmp
mov
daa
bound
pop
jae
neg
and
and
pop
inc
out
rcl
sub
add
add
add
in
add
or
add
rcl
lock
jg
jnp
pop
add
mov
push
shl
mov
(bad)
(bad)
(bad)
push
or
push
fdivr
mov
inc
les
fs
xchg
push
aam
mov
(bad)
(bad)
(bad)
push
or
dec
int3
sub
ins
in
sbb
pop
fdivr
jl
add
(bad)
adc
jb
(bad)
(bad)
push
or
push
sbb
jp
push
xchg
cmps
data16
xchg
push
(bad)
ss
(bad)
(bad)
(bad)
push
push
mov
cs
outs
out
push
sahf
pop
fidivr
mov
inc
shl
popa
loope
xchg
push
shl
mov
(bad)
(bad)
(bad)
push
or
imul
cmp
inc
lds
xchg
push
aad
mov
(bad)
(bad)
(bad)
push
or
lods
ins
in
sbb
mov
inc
ret
and
push
shl
mov
(bad)
(bad)
(bad)
push
or
imul
fwait
pop
fstp
mov
inc
(bad)
daa
cmps
addr16
xchg
push
xlat
aaa
mov
(bad)
(bad)
(bad)
push
jg
outs
out
pop
lahf
pop
fistp
mov
add
push
nop
shl
pusha
mov
(bad)
(bad)
(bad)
push
add
test
adc
xchg
aam
movs
in
je
hlt
or
enter
fsubr
push
mov
clc
or
mov
sbb
pushf
fsubr
lods
in
cmp
mov
rcl
xchg
shl
popa
mov
(bad)
(bad)
(bad)
push
add
push
xchg
aad
movs
in
jne
cmc
or
leave
sbb
fldcw
imul
stc
or
pop
popf
(bad)
jge
std
add
ret
xchg
shl
bound
(bad)
(bad)
(bad)
push
push
inc
xchg
push
push
xchg
(bad)
data16
out
jbe
test
mov
sbb
fisubr
push
jmp
(bad)
cli
push
dec
mov
push
pop
sahf
fisubr
outs
scas
out
ds
inc
inc
add
push
xchg
shl
arpl
(bad)
(bad)
(bad)
push
pop
inc
xchg
pop
push
xchg
xlat
daa
cmps
out
ja
test
pop
fld
imul
(bad)
(bad)
(bad)
sti
cmovg
fild
outs
scas
out
aas
jg
inc
adc
xor
pusha
jo
nop
mov
(bad)
(bad)
(bad)
push
add
and
inc
push
popa
jno
xchg
mov
icebp
add
and
inc
push
bound
xchg
mov
(bad)
(bad)
(bad)
push
add
and
inc
push
arpl
xchg
mov
repz
and
inc
push
fs
xchg
movs
mov
aam
(bad)
(bad)
(bad)
push
add
push
gs
xchg
movs
mov
aad
cmc
push
push
es
push
data16
xchg
cmps
mov
(bad)
out
(bad)
(bad)
push
pop
pop
daa
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
or
sub
dec
pop
push
mov
cld
(bad)
(bad)
clc
or
sub
dec
pop
imul
fldl2t
stc
or
sub
dec
scas
mov
(bad)
(bad)
call
jmp
pop
imul
stos
mov
or
sub
dec
pop
ins
jl
(bad)
(bad)
(bad)
call
cld
or
pop
ins
jge
popf
lods
mov
push
push
cs
pop
outs
jle
and
(bad)
call
out
dec
pop
das
aas
dec
pop
outs
jg
lahf
scas
mov
out
dec
icebp
or
push
push
hlt
imul
sbb
inc
add
inc
dec
add
pop
jae
push
jae
fistp
add
inc
push
pop
je
sub
dec
dec
inc
add
cmps
pop
mov
and
cmps
push
dec
daa
addr16
loope
push
xchg
call
adc
lahf
pop
addr16
fadd
mov
addr16
inc
dec
and
mov
inc
push
add
add
add
jnp
lock
pop
ror
sbb
stos
pop
xchg
push
rcl
adc
fistp
es
sub
(bad)
(bad)
call
add
fs
popa
je
and
xor
xor
inc
outs
jo
jb
addr16
je
xor
cmp
dec
gs
outs
sub
and
imul
jp
and
add
or
sti
jbe
pusha
and
add
push
add
scas
sti
out
int3
add
add
adc
nop
daa
inc
sub
adc
and
outs
pop
loopne
scas
and
add
or
add
add
adc
mov
adc
cmps
loopne
daa
xor
imul
inc
xchg
adc
ja
addr16
rol
xchg
add
aaa
sub
mov
or
add
sbb
xor
push
push
xchg
add
mov
adc
adc
add
or
push
xor
rol
js
cwde
dec
mov
xlat
inc
loopne
mov
mov
cmp
mov
lods
add
(bad)
jne
xchg
jmp
ret
xor
xlat
pop
cmp
push
aaa
sub
shl
add
xor
jmp
add
das
in
and
jne
sub
inc
std
add
and
xor
icebp
loope
xor
cmp
clc
adc
adc
(bad)
(bad)
(bad)
inc
pop
lahf
push
inc
dec
add
xor
pop
and
jae
push
or
jle
(bad)
(bad)
(bad)
call
ins
push
bound
sub
bound
bound
inc
dec
and
mov
call
mov
aas
dec
xor
cmp
and
sbb
or
loope
(bad)
inc
mov
sbb
adc
adc
ret
adc
adc
or
(bad)
(bad)
jg
inc
lock
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
(bad)
push
pop
cmp
jmp
jnp
push
loope
(bad)
(bad)
(bad)
call
jb
push
test
aas
add
xor
or
cmp
add
xor
bswap
aas
inc
dec
mov
inc
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
(bad)
(bad)
(bad)
jmp
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
(bad)
(bad)
dec
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
(bad)
(bad)
(bad)
jmp
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
(bad)
(bad)
inc
dec
mov
shr
out
push
fisub
loope
shr
bound
pop
(bad)
(bad)
(bad)
jmp
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
(bad)
(bad)
dec
inc
mov
sub
sbb
es
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
and
pop
movs
gs
pop
pop
sub
adc
push
and
mov
dec
popa
jb
and
ins
gs
and
pop
(bad)
inc
cmp
idiv
inc
daa
(bad)
adc
sti
out
ret
xor
push
inc
push
lea
jae
mov
pop
ret
add
jae
push
cmps
mov
add
cmp
rcr
add
faddp
add
add
mov
add
aas
xor
xlat
imul
jmp
jne
jmp
(bad)
sub
nop
sub
add
ret
sti
add
inc
pop
mov
add
rcl
push
add
je
arpl
nop
mov
dec
add
add
add
in
xchg
cmp
enter
mul
fsub
scas
add
test
add
iret
retf
add
jnp
jnp
add
add
mov
add
aaa
mov
mov
out
adc
push
fdiv
fimul
outs
mov
lahf
fwait
xchg
call
adc
adc
or
or
or
or
push
imul
int3
sub
cmps
imul
imul
cmps
imul
(bad)
jno
xchg
pop
push
add
xor
call
stos
cmps
imul
imul
cmps
imul
data16
xchg
push
call
jbe
push
imul
imul
imul
xchg
imul
add
dec
shl
jno
xor
shl
mov
sub
xor
shr
dec
shl
jns
out
and
xor
test
pop
call
gs
xchg
imul
imul
imul
cmps
imul
ss
adc
or
adc
or
xchg
xor
shl
push
push
rcl
shl
mov
dec
shl
or
mov
retf
retf
shl
stos
imul
dec
imul
sbb
fwait
xor
shl
pop
pop
fcmovnu
shl
mov
dec
jnp
sti
pop
pop
xchg
inc
mov
daa
daa
cmps
cmps
addr16
shl
pop
xchg
xor
shl
push
push
xlat
xlat
shl
mov
dec
shl
jg
(bad)
dec
dec
iret
iret
shl
scas
outs
dec
shl
pop
lahf
xor
shl
pop
pop
(bad)
shl
mov
dec
jg
inc
add
add
and
pusha
add
push
xor
cmps
imul
imul
imul
mov
add
ret
pusha
call
shl
adc
sbb
or
add
or
push
push
push
shl
sbb
adc
or
dec
shl
pop
pop
add
add
add
add
and
mov
add
and
inc
sub
add
mov
add
xchg
xchg
and
adc
cmps
loopne
push
add
or
fsubr
jo
pop
adc
(bad)
or
add
add
and
sbb
sbb
inc
or
or
or
retf
push
cmp
popf
test
cmp
adc
and
cmp
add
mov
ret
add
nop
mov
xor
xchg
nop
mov
outs
push
jle
mov
sbb
pop
ret
loop
pop
push
scas
sub
cmp
mov
add
push
add
adc
or
pop
inc
outs
inc
es
adc
push
push
push
sub
mov
inc
cdq
xlat
or
sbb
mov
outs
imul
mov
pop
sbb
fist
inc
fadd
inc
aam
mov
jne
daa
inc
pop
sub
repz
into
inc
les
add
scas
test
jmp
add
inc
and
inc
mov
inc
sub
test
or
loopne
or
cwde
inc
mov
pop
or
fsub
pop
or
or
fiadd
or
mov
cwde
or
or
push
or
or
xor
ret
rol
add
push
add
add
add
ss
inc
fs
fdiv
(bad)
cmp
aas
xlat
add
aam
mov
add
cmp
push
pop
add
add
add
dec
mov
fidivr
mov
lahf
fwait
jnp
add
sub
popf
dec
dec
sti
push
sbb
jg
shl
jg
cmp
jg
jg
inc
xchg
xor
imul
cdq
call
and
cmp
dec
inc
and
jnp
inc
aaa
sub
push
add
out
pop
lock
and
daa
inc
add
(bad)
aas
or
mov
sbb
mov
add
pop
out
popa
out
xor
pop
or
sbb
mov
xor
or
loopne
mov
and
test
add
lock
ret
dec
pop
add
xor
adc
and
adc
jbe
dec
add
and
call
loopne
dec
add
pop
stos
dec
push
add
sub
(bad)
dec
je
jne
jo
jb
gs
js
gs
imul
add
int3
pop
das
jle
into
add
inc
das
mov
(bad)
pop
pop
mov
pop
push
cwde
inc
add
cld
inc
outs
shr
inc
add
cmps
sti
xchg
cmova
rcl
inc
std
push
cmp
cwde
push
iret
push
inc
imul
movs
dec
or
or
fcom
inc
push
or
inc
add
jg
pusha
push
aas
lods
inc
add
fild
pop
inc
stos
push
ret
dec
lock
dec
cmp
add
cmp
iret
je
xchg
push
mov
jmp
inc
add
(bad)
pop
pop
xlat
jne
lahf
jmp
xor
aaa
fiadd
mov
mov
sbb
pop
shl
outs
mov
adc
call
ins
jo
fs
bound
arpl
loopne
inc
rcr
aaa
int3
jge
daa
inc
inc
add
aaa
inc
iret
test
jno
inc
push
addr16
ret
jg
popa
ins
gs
mov
add
not
idiv
inc
imul
inc
outs
outs
cmps
and
and
pop
inc
jb
jae
add
test
rol
push
cmps
enter
jge
and
xchg
test
xchg
enter
cld
sbb
popa
imul
sbb
jmp
push
or
inc
daa
adc
cmp
ins
imul
or
pop
or
push
jae
jb
mov
in
jg
daa
push
gs
jne
arpl
add
dec
add
push
adc
sbb
and
sub
pusha
mov
int
int
sahf
ins
inc
add
loop
outs
inc
add
xor
int
push
inc
add
add
inc
add
rol
sahf
mov
pop
push
ja
dec
je
and
mov
inc
mov
xchg
dec
outs
test
xor
test
mov
push
pop
loopne
cmps
pop
xlat
lahf
ins
xor
sbb
not
inc
nop
loope
aas
jo
ja
cmp
in
out
xchg
daa
xchg
div
test
add
mov
pop
xchg
test
dec
add
pop
adc
mov
inc
imul
outs
addr16
mov
mul
xchg
push
inc
jp
xchg
scas
add
push
mov
sti
sbb
inc
pop
inc
sbb
enter
xchg
aam
in
inc
or
test
cbw
outs
cwde
jnp
lar
out
ret
dec
inc
or
pop
pop
or
jae
mov
inc
or
pop
int3
inc
adc
lea
sub
inc
add
jbe
(bad)
pop
dec
mov
inc
imul
xchg
imul
adc
push
inc
adc
push
rol
arpl
shl
gs
jbe
(bad)
mov
and
outs
jae
push
gs
ror
push
cmp
addr16
add
loopne
cs
dec
fwait
inc
movhps
fdiv
(bad)
not
or
fcom
daa
add
push
fwait
adc
(bad)
mul
and
callw
ret
sahf
and
add
icebp
xor
xor
pop
pop
pop
inc
and
xor
cmp
add
xor
test
sub
nop
ret
pop
or
aaa
mov
add
inc
cs
add
iret
or
pop
das
inc
add
ja
inc
rcr
nop
int3
cmp
or
sub
loopne
or
aas
and
add
mov
pop
test
add
pop
push
jae
pop
and
pop
adc
push
out
add
add
adc
pop
jmp
cwde
mov
ds
add
pop
das
jo
jae
sbb
out
adc
jae
scas
sub
jmp
cdq
add
xor
xchg
or
jae
sbb
add
(bad)
dec
out
or
or
jae
add
(bad)
jle
add
enter
pop
push
neg
pop
adc
jg
push
or
js
ins
fs
les
stos
add
add
xor
std
xchg
outs
ins
inc
popa
jb
pop
dec
inc
dec
inc
jb
in
(bad)
mov
and
jb
imul
pop
and
cmp
add
jne
inc
std
sar
imul
outs
outs
imul
jb
ins
push
outs
inc
add
or
call
inc
je
jns
je
ins
dec
gs
imul
push
std
(bad)
fist
outs
ins
ins
arpl
pop
inc
jb
addr16
imul
pop
and
lock
retf
sub
sbb
retf
dec
xor
test
fs
retf
mov
ret
inc
push
in
retf
imul
idiv
and
and
and
test
jmp
add
popa
inc
ret
dec
push
inc
movq
jae
mov
sub
inc
dec
dec
inc
push
dec
xor
cs
dec
dec
cmpxchg
scas
inc
cmp
mov
sbb
clc
jmp
sbb
inc
add
dec
aas
dec
push
out
shl
sbb
popa
jns
push
inc
sbb
outs
ja
adc
nop
aaa
mov
sbb
(bad)
out
mov
inc
js
or
outs
inc
outs
push
mov
adc
cmp
daa
inc
jne
je
outs
add
pop
(bad)
je
je
arpl
rcr
adc
cmp
stos
dec
add
nop
pop
mov
dec
sbb
xlat
mov
and
inc
cmp
mov
push
mov
jge
and
mov
dec
jne
mov
xchg
fs
add
adc
adc
add
inc
xchg
inc
outs
mov
add
mov
inc
loopne
xor
pop
xor
jmp
das
popa
out
add
lar
xor
mov
ja
popa
push
stos
int3
xchg
xchg
scas
stos
(bad)
mov
inc
add
add
or
xchg
fistp
out
jmp
pop
pop
mov
pop
lsl
add
jl
loop
ja
xchg
inc
add
xchg
das
jnp
sbb
pop
ret
sbb
or
adc
addr16
and
dec
add
sbb
fnsave
mov
inc
add
arpl
aam
add
pop
mov
add
mov
or
mov
xor
mov
jl
aad
pop
sub
icebp
inc
inc
rcl
mov
inc
or
nop
sub
jo
pop
mov
repz
add
call
xchg
add
outs
inc
sub
rol
or
cmps
stc
and
push
mov
sahf
outs
fbstp
addr16
rcl
push
adc
test
inc
adc
fwait
sbb
or
nop
aas
imul
sub
cmp
loope
pop
cmp
inc
pop
xlat
jle
sahf
jmp
outs
inc
adc
add
add
aas
rcr
add
gs
adc
mov
popa
addr16
push
gs
imul
or
mov
lea
inc
or
aaa
xor
fadd
dec
in
dec
sahf
lahf
sbb
into
push
inc
push
or
xlat
jnp
adc
dec
fadd
pop
js
js
pop
mov
ins
fiadd
add
nop
pop
(bad)
mov
daa
aaa
and
test
daa
daa
daa
add
inc
mov
jae
je
leave
fadd
jne
shr
addr16
add
(bad)
mov
jle
sub
aaa
mov
aaa
or
add
add
mov
push
adc
mov
out
mov
daa
stos
inc
add
add
pop
xor
orps
ret
mov
push
ins
test
ins
cmp
pop
in
dec
dec
aaa
js
mov
pop
push
ret
inc
xchg
inc
push
arpl
std
cli
push
lds
jo
jae
xchg
xlat
aaa
add
xor
mov
pop
les
dec
cld
pop
popa
es
or
out
loopne
lahf
mov
ins
fs
popa
jb
gs
add
(bad)
(bad)
paddsb
add
xor
add
mov
es
add
and
sbb
jmp
inc
add
add
mov
and
jnp
fdivr
add
pop
add
popa
outs
ret
aaa
js
xchg
movhps
in
int3
enter
out
(bad)
sbb
push
inc
add
add
inc
add
or
dec
dec
and
imul
add
fdiv
in
inc
add
and
loope
pop
outs
js
mov
pusha
push
out
sbb
pop
inc
add
or
xor
mov
mov
add
jnp
shr
cmp
ds
push
dec
outs
jne
add
pop
mov
cwde
ret
daa
sbb
and
push
xor
cmp
stos
iret
xor
enter
add
jg
(bad)
jnp
add
ins
bound
outs
inc
inc
push
outs
jb
mov
sbb
xor
xor
sbb
lods
add
je
cmps
add
xchg
daa
shr
dec
or
daa
xor
and
dec
popa
ss
std
jo
je
push
outs
add
add
xchg
mov
pop
sbb
adc
sidtd
outs
outs
ins
push
imul
out
sub
inc
es
xchg
stc
sbb
inc
out
mov
mov
inc
mov
pop
pop
and
xchg
(bad)
ins
cwde
imul
pop
sysret
adc
add
push
clc
jg
xor
adc
adc
push
mov
and
add
xlat
je
je
jo
pop
arpl
jae
stos
cli
int3
stc
loope
xchg
dec
add
jg
aas
or
outs
jb
jne
xchg
or
stos
js
push
nop
ret
mov
jae
add
scas
lock
add
mov
push
aas
popa
sub
and
das
aas
in
inc
push
pop
sbb
jmp
mov
and
and
lods
loopne
dec
dec
pop
cs
dec
mov
outs
or
lahf
add
nop
adc
and
xlat
rol
jae
sub
push
dec
sbb
cmps
xchg
pop
fild
ins
addr16
outs
push
inc
cmp
test
add
push
dec
repnz
clts
leave
fcomp
adc
(bad)
ret
and
aas
push
imul
(bad)
(bad)
dec
gs
inc
push
fs
outs
je
data16
add
data16
add
xchg
mov
dec
xor
mov
jo
cli
shl
outs
add
clc
add
add
add
mov
ja
push
pop
push
add
inc
xchg
push
rol
cmp
mov
rcr
sub
pop
sub
xor
or
mov
arpl
loopne
out
jg
dec
add
ins
ins
cmp
add
(bad)
out
and
fs
jns
dec
das
fs
jns
push
dec
adc
cmp
add
gs
(bad)
(bad)
fldenv
dec
outs
jbe
dec
arpl
push
gs
fisttp
popa
adc
jne
jne
mov
add
clc
pop
lock
outs
fwait
inc
jo
imul
dec
popa
lahf
clc
inc
bound
popa
jb
add
or
popf
cmp
mov
ins
popf
cmp
jne
outs
iret
inc
pop
jb
or
out
push
popa
jle
pop
icebp
je
jb
ret
jb
or
jb
addr16
sti
inc
add
push
gs
gs
jne
dec
neg
sbb
je
add
jae
in
das
add
imul
movs
ret
nop
std
fwait
aad
pop
jae
retf
pop
push
or
inc
mov
(bad)
(bad)
jg
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
cli
push
mov
pop
pusha
jb
outs
je
ins
and
jb
pop
into
mov
dec
push
push
or
add
push
dec
dec
inc
push
add
inc
dec
dec
adc
(bad)
(bad)
push
xor
cmp
outs
popa
bound
je
and
imul
and
popa
(bad)
jg
mov
inc
add
aaa
outs
outs
je
outs
outs
jne
push
fdivrp
jo
arpl
data16
outs
ja
cmp
jns
mov
je
(bad)
jmp
xor
and
jb
jne
ins
and
outs
ficom
sti
cmps
arpl
arpl
ins
pusha
xchg
xor
sti
std
lahf
rcl
imul
loop
jnp
fdiv
iret
xor
aaa
imul
sub
or
arpl
jae
pop
fs
arpl
inc
test
and
gs
arpl
sbb
inc
mov
dec
pop
scas
and
loop
ins
test
mov
and
imul
clc
ja
ins
xor
popa
je
or
jb
pop
ret
add
outs
addr16
ins
and
ins
imul
(bad)
iret
pop
outs
inc
outs
mov
cmp
ins
outs
je
xor
iret
sub
jge
and
sub
mov
std
jo
xor
data16
outs
outs
outs
and
cli
arpl
and
adc
add
arpl
xor
push
and
jae
inc
sub
and
dec
xchg
push
jmp
or
pop
mov
or
jmp
(bad)
arpl
outs
js
imul
push
outs
ja
ds
push
add
(bad)
inc
dec
jae
sub
inc
gs
cmp
dec
(bad)
gs
jb
jae
sub
push
dec
inc
dec
pop
xor
daa
mov
xchg
add
lock
pusha
and
(bad)
jg
xor
fimul
leave
ds
addr16
ss
out
jg
add
bound
cwde
call
pop
mov
add
xor
xor
js
add
adc
ins
outs
push
sbb
ja
push
pop
arpl
fsubr
or
or
pushw
mov
add
gs
mov
je
outs
arpl
jae
outs
add
jb
cmp
add
outs
ret
pop
jne
std
fisub
popa
arpl
add
adc
push
push
aaa
pop
push
pop
ins
outs
addr16
fwait
jge
repz
add
ja
sub
jnp
(bad)
jmp
(bad)
jl
inc
add
out
mov
pop
or
jmp
add
inc
xchg
inc
add
fbstp
xlat
jge
mov
pop
mov
aaa
je
js
daa
pop
(bad)
jae
out
pop
retf
or
ja
mov
inc
add
or
mov
sub
push
add
mov
pushf
adc
add
add
add
add
inc
inc
add
(bad)
aas
push
iret
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
xor
add
pusha
push
jo
js
std
mov
pop
add
or
add
add
add
add
jne
ins
mov
add
sub
ins
ins
or
ja
adc
stos
inc
add
ins
ins
gs
scas
aas
clc
jg
jns
and
jno
outs
arpl
jmp
jmp
gs
jo
jns
inc
mov
cmp
jo
arpl
dec
outs
pop
cld
cli
(bad)
push
jae
popa
jbe
imul
inc
xchg
add
aas
pop
sbb
fs
pop
into
pusha
cli
popa
jbe
imul
dec
rol
imul
and
inc
jb
imul
jo
jo
add
jne
out
and
outs
jns
ins
imul
outs
outs
ins
jns
mov
imul
outs
jbe
loope
sbb
imul
push
mov
gs
outs
outs
mov
popa
cli
add
popa
jo
inc
sbb
mov
and
dec
pop
je
outs
ins
and
jb
outs
outs
adc
push
fcomp
ja
adc
and
mov
and
mov
ds
or
arpl
add
rol
sti
inc
imul
inc
sbb
and
jae
inc
jle
jg
bound
inc
popa
and
adc
scas
imul
test
imul
push
mov
gs
push
in
outs
and
imul
mov
imul
test
and
jae
jb
jo
xor
adc
arpl
popa
xchg
jecxz
fstp
pusha
inc
jb
retf
jg
sub
adc
push
repz
inc
add
jo
je
outs
jne
push
fmul
test
push
jb
mov
rol
and
mov
dec
fwait
pop
jp
xor
jl
dec
jo
(bad)
or
imul
mov
mov
retf
stc
mov
sub
cmp
xor
mov
enter
mov
xchg
mov
xchg
jb
loop
lock
push
pop
add
inc
gs
popa
jae
inc
push
jbe
push
outs
jo
mov
por
call
add
jae
popa
addr16
outs
js
add
gs
lahf
sti
outs
sbb
add
add
dec
idiv
jg
rol
dec
add
and
inc
dec
add
xor
dec
dec
mov
mov
jle
(bad)
inc
sub
and
jg
dec
sbb
scas
sub
(bad)
adc
inc
mov
pop
dec
inc
push
push
ins
mul
adc
or
nop
sbb
daa
jae
out
aaa
aas
and
dec
push
out
fmul
cmp
cmp
lds
mov
add
out
rol
std
cmp
adc
fdiv
fild
clc
mov
add
inc
pop
adc
out
mov
adc
ffreep
fcom
and
mov
rcr
adc
push
(bad)
pop
cwde
sti
push
cwde
cmps
repz
pop
hlt
sbb
movs
psubusb
xchg
mov
and
call
sti
popa
iret
cmp
das
add
push
adc
dec
js
mov
dec
nop
sbb
pusha
fistp
pop
inc
mov
jae
ret
push
iret
enter
(bad)
out
or
sbb
add
jae
jge
lock
dec
out
mov
movs
dec
add
xor
or
push
inc
inc
adc
xor
test
pop
dec
sbb
sub
sbb
inc
nop
adc
fcom
ss
dec
mov
cwde
cmp
sbb
inc
loopne
xor
pusha
adc
das
nop
jo
and
pop
and
(bad)
dec
pop
pop
cmp
pusha
ret
add
adc
sbb
dec
mov
dec
push
in
mov
xor
idiv
and
ret
fiadd
jecxz
adc
xchg
adc
adc
aaa
dec
add
adc
or
aaa
test
pop
mov
daa
pusha
sbb
inc
jo
mov
and
sbb
cmp
in
sbb
fdiv
enter
or
push
pusha
ffreep
push
or
loopne
xor
mov
test
pop
ja
out
mov
xor
fs
js
pusha
add
pop
fmulp
pop
sub
sbb
aaa
in
or
dec
test
cmp
cmp
shl
aaa
or
loopne
fmul
and
jae
add
pop
jmp
in
or
cmp
inc
dec
adc
and
int3
pop
and
jo
mov
pop
test
mov
mov
dec
pop
mov
xchg
mov
nop
pop
inc
or
inc
jo
xor
scas
dec
in
jnp
fmul
pop
pop
inc
pop
adc
dec
fwait
pop
mov
mov
fadd
aaa
fsub
mov
dec
mov
cwde
push
out
sub
fcomp
push
lock
sti
mov
or
outs
or
pop
push
dec
sar
dec
pusha
adc
xchg
push
in
jnp
fsub
mov
sbb
push
call
ret
sahf
dec
and
sbb
mov
or
rcr
and
and
aaa
in
mov
inc
pop
adc
fcom
and
pop
dec
jge
cwde
cmp
test
ja
adc
dec
sub
lahf
enter
pop
pop
jecxz
sbb
aaa
rol
ja
sti
ficomp
or
push
and
ja
loopne
js
addr16
pop
in
mov
sbb
adc
fdiv
inc
jo
cwde
dec
cwde
cmp
fcomp
dec
popa
cmp
inc
rcl
dec
fsub
int3
or
scas
out
xchg
in
pop
inc
adc
loopne
pop
xor
fadd
cmp
mov
jecxz
sbb
fadd
mov
mov
pop
inc
fsub
inc
mov
inc
dec
fdivr
or
out
lock
ret
or
pusha
dec
jae
cwde
sbb
pop
dec
inc
sbb
mov
or
or
pop
or
mov
jmp
mov
xchg
pop
aaa
add
ret
dec
rcl
push
call
xchg
pop
add
in
sbb
adc
push
test
fistp
out
dec
pop
inc
push
fdivr
dec
pop
nop
pop
push
in
mov
sbb
sar
aaa
inc
mov
ja
xchg
mov
sbb
cld
fidiv
dec
pop
inc
or
fidiv
jae
lahf
xor
pop
outs
test
mov
or
dec
pusha
adc
out
loope
and
pop
push
test
pusha
pop
or
or
mov
and
pusha
pop
ret
aaa
imul
cmp
sbb
fsubrp
adc
mov
xor
inc
fcom
fcomp
adc
iret
movs
adc
sbb
and
adc
cwde
dec
pop
push
out
test
cmp
dec
pop
inc
mov
add
out
loopne
lahf
mov
sbb
inc
or
add
daa
cmps
xor
aaa
int3
sbb
dec
pop
xchg
adc
xor
adc
pop
dec
cwde
sbb
sbb
sbb
adc
adc
and
aaa
in
mov
add
or
in
add
cwde
cmp
jo
aaa
inc
sbb
cmp
inc
push
adc
nop
(bad)
js
(bad)
outs
fdiv
nop
sub
push
test
mov
adc
pop
pop
pop
mov
pop
sbb
lock
enter
adc
inc
inc
cmp
mul
das
inc
and
add
cmp
das
add
dec
adc
mov
or
pop
mov
jae
adc
nop
adc
and
psubusb
stos
loopne
inc
add
ret
xchg
add
xchg
dec
jle
add
fs
push
inc
cwde
sti
fcom
js
cmps
cwde
pop
jae
iret
jge
pop
ja
daa
or
and
cmp
sbb
fisttp
fdiv
add
inc
jmp
in
out
addr16
daa
add
(bad)
inc
mov
aas
addr16
inc
sub
jnp
sti
data16
dec
pop
mov
loopne
fisttp
stos
pop
out
xchg
out
ja
js
daa
aas
add
neg
enter
test
loopne
inc
xor
rol
mov
add
enter
and
mov
inc
nop
and
and
jo
sti
int3
inc
neg
cwde
daa
mov
nop
sbb
shl
mov
or
lock
loopne
xor
addr16
jmp
idiv
mov
clc
ret
outs
or
jne
sbb
aaa
xor
pop
fmul
or
or
push
pop
fcom
mov
sub
mov
jg
pop
nop
cwde
fadd
lock
fdivr
shl
aas
sahf
sti
xchg
enter
or
pop
loopne
ret
xor
aaa
adc
add
fsub
ds
adc
mov
pop
aas
sub
neg
aas
pop
daa
dec
mov
fsub
pop
(bad)
push
pop
(bad)
cwde
and
and
nop
nop
call
adc
mov
fsub
daa
cmps
fadd
mov
pop
call
fcomip
pop
mov
dec
pop
adc
cmp
enter
daa
out
jae
sbb
pop
pop
xchg
arpl
sti
int3
pusha
maxps
jns
test
mov
sti
sahf
lahf
stos
clc
dec
sub
mov
mov
mov
jge
mov
sub
fwait
shr
invd
sub
mov
pop
xchg
int3
add
pop
add
test
loopne
inc
xor
test
mov
shl
and
push
xchg
clc
inc
and
pop
enter
or
inc
xor
jo
add
nop
mov
or
scas
shl
jae
sbb
scas
call
xchg
pop
sbb
add
push
fmul
mov
sub
aaa
nop
jne
mov
or
das
inc
daa
lahf
jnp
cmp
add
jecxz
pop
arpl
lahf
sti
jo
jnp
pop
punpckhbw
iret
or
enter
aas
push
mov
mov
test
mov
daa
das
test
das
jae
das
or
pusha
add
daa
add
in
loopne
mov
daa
add
or
lods
mov
ds
nop
jge
pusha
aaa
xor
mov
aaa
nop
sbb
pop
das
nop
push
daa
mov
mov
das
out
das
nop
jge
push
jo
mov
xor
cmps
pop
ja
mov
pop
and
rcr
daa
jge
jae
and
enter
pop
repz
pop
mov
pop
retf
add
sbb
pop
retf
sbb
sar
daa
sub
aaa
cmp
or
xchg
pop
inc
pop
pop
push
pop
enter
pop
bound
mov
pop
jne
mov
mov
rol
call
test
xor
pinsrw
mov
pop
adc
loopne
scas
mov
xor
cld
pop
adc
pop
inc
pop
or
mul
sbb
mov
xlat
inc
inc
xor
jmp
xlat
add
pop
xor
pop
pop
jmp
ffreep
pop
pop
jmp
rcr
iret
cmp
cwde
pop
das
and
or
sbb
mov
(bad)
add
idiv
pop
mov
pop
das
not
ja
mov
and
sar
pop
ja
pop
cmp
ja
pop
ja
pop
ja
loopne
fsub
jb
ja
pop
sar
ja
pop
ja
jo
out
stos
pop
ja
pop
ja
pop
loopne
fadd
loop
aas
mov
pop
ja
pop
ja
rol
cmovne
pop
push
fadd
ja
pop
ja
mov
ja
pop
ja
pop
add
sar
pop
lahf
sti
jo
mov
pop
fbld
pop
scas
addr16
ret
scas
adc
pop
(bad)
mov
cmp
sbb
ret
jmp
int3
aaa
in
loopne
pop
add
lock
mov
pop
clc
jnp
popa
out
outs
adc
pop
cmp
dec
add
stos
jbe
cmp
adc
aaa
fmul
out
fdivr
dec
add
psubusb
lock
in
xchg
inc
mov
es
call
sar
data16
das
cmp
inc
loope
int3
and
xchg
or
das
not
in
or
daa
xor
lahf
sti
int3
inc
and
push
nop
addr16
jnp
pop
pop
cwde
pop
mov
fsubr
rcl
loopne
jo
sbb
add
das
fwait
inc
nop
sub
adc
pop
lock
dec
aas
cmp
jg
sbb
or
sar
aaa
(bad)
ja
sbb
out
popa
fmul
aas
add
pusha
pop
loope
mov
daa
das
pusha
(bad)
cmps
mov
xor
pop
(bad)
sar
and
sbb
(bad)
mov
xor
retf
cmp
jge
retf
pop
cmovno
jmp
das
paddusb
mov
cmova
mov
aad
getsec
int3
jge
fld
pmulhw
aaa
das
mul
mov
clc
pop
lsl
jge
das
ud2
pop
movlps
pop
add
mov
js
test
daa
outs
push
dec
daa
mov
pop
out
sbb
add
cmp
imul
jbe
jg
in
cmp
pop
inc
mov
mov
mov
xor
out
pop
into
pop
fldcw
pop
idiv
pop
inc
test
inc
inc
cmp
cmps
int
mov
and
xchg
int3
inc
idiv
and
xor
jge
jae
push
push
pop
xlat
pop
pop
pop
imul
je
ja
ror
jge
and
dec
mov
idiv
pop
daa
mov
data16
aad
mov
add
fucomip
pop
aaa
test
add
(bad)
or
out
sbb
daa
dec
xor
cmp
fincstp
fadd
arpl
add
inc
push
inc
push
js
mov
nop
pop
push
jmp
push
test
ss
add
leave
(bad)
fsub
ds
daa
jg
pop
push
loopne
icebp
inc
div
pop
or
mov
mov
or
ja
mov
mov
mov
xor
neg
out
ja
pop
das
inc
mov
add
loopne
ret
jo
retf
daa
inc
push
xchg
add
mov
xor
fmul
sar
nop
sbb
das
add
xor
mov
and
loopne
push
sub
and
pop
ds
fwait
push
pop
pop
pop
ret
out
pop
push
xchg
retf
pop
nop
or
adc
and
xor
sti
adc
iret
jge
clc
pop
cmps
jnp
das
ret
push
aas
push
test
scas
not
enter
ds
pop
and
pop
arpl
out
ret
jge
sub
mov
pop
mov
jb
out
pop
daa
pop
mov
jo
jae
sbb
xor
cs
mov
push
mov
jle
sar
das
ja
iret
jge
add
fsub
neg
pop
lahf
mov
and
sahf
sti
lahf
xchg
pop
dec
mov
jge
mov
pop
mov
mov
into
pop
dec
fadd
inc
sbb
cld
data16
inc
add
addr16
sbb
in
jnp
and
add
fst
xchg
inc
daa
inc
xor
pop
push
push
pop
xchg
pop
pop
inc
idiv
xchg
or
fcom
inc
cmps
pop
aaa
or
shl
sbb
push
dec
call
adc
jae
push
test
add
nop
daa
push
dec
push
and
push
xchg
add
pusha
mov
inc
aas
enter
pop
int3
cmp
aaa
mov
sbb
pop
sub
(bad)
cmp
add
pop
clc
aaa
jg
fidiv
jge
add
iret
inc
pop
idiv
dec
rol
push
fadd
sti
fsub
ds
loopne
pop
call
xchg
clc
(bad)
mov
movlps
adc
xchg
mov
idiv
cmp
test
dec
addr16
lock
mov
daa
aas
imul
mov
ror
sbb
and
mov
and
mov
fsub
sar
rol
xor
push
ret
sahf
sti
fdivr
xor
mov
add
call
pop
add
push
out
sub
add
call
push
out
iret
sbb
out
or
sbb
mul
pop
sub
mov
pop
dec
xor
cmp
pop
aas
sbb
jg
sbb
int3
jge
push
daa
sysret
sub
mov
fiadd
lahf
mov
lahf
pop
sub
pop
or
call
jl
cwde
sti
das
rol
inc
pop
pop
jo
or
mov
fwait
in
cmp
div
push
add
call
add
push
das
pusha
fistp
push
aas
jmp
and
in
ret
pop
and
mov
push
dec
daa
jge
push
xchg
test
jae
aaa
in
mov
pop
inc
add
popa
ret
fdiv
daa
sysret
sub
adc
add
scas
lahf
sti
data16
pop
call
pop
daa
dec
(bad)
out
or
pop
adc
ja
or
push
pusha
aaa
pop
sahf
sbb
out
es
pop
pop
mov
add
add
mov
cmp
ret
mov
pop
sar
inc
push
and
or
arpl
sar
push
push
pop
pop
dec
popw
xchg
xor
pop
das
add
jae
aaa
and
mov
aaa
xchg
ss
jge
pop
aaa
or
mov
cdq
sub
rol
cmp
push
pop
das
sbb
add
inc
jae
fnstenv
addr16
aaa
and
addr16
pop
cmp
aad
xor
push
pusha
or
js
xor
add
mov
enter
lock
fadd
inc
jle
adc
daa
loopne
inc
enter
add
call
jge
jae
sub
pop
jae
mov
cmp
addr16
pop
daa
cli
or
dec
add
iret
mov
jge
daa
and
packuswb
js
cmp
scas
mov
sub
or
pop
jae
sbb
arpl
and
mov
addr16
pop
inc
pop
scas
jmp
test
pop
add
(bad)
fadd
ins
pop
sti
js
loopne
jb
sti
add
mov
mov
cdq
pop
imul
scas
pop
or
or
pop
pop
rol
scas
or
add
out
ret
imul
pop
pop
cld
pop
fmul
adc
pop
pop
sar
scas
and
pop
jb
imul
xor
(bad)
cmp
pop
add
daa
push
pop
xlat
inc
scas
and
pop
xor
jb
daa
jge
in
enter
pop
scas
or
xlat
or
push
jb
push
sti
test
add
pop
add
cmp
mov
retf
aad
repz
add
push
(bad)
jmp
daa
mov
scas
test
add
sbb
or
not
test
mov
pop
imul
dec
cmp
popf
pop
inc
xchg
xchg
dec
or
arpl
repz
jg
loopne
test
or
pop
cmp
jae
mov
pop
mov
jo
out
rol
popf
pop
mov
pop
push
fadd
mov
pop
mov
mov
mov
pop
mov
pop
idiv
sar
rol
sbb
sar
mov
pop
mov
jo
out
inc
pop
mov
pop
mov
pop
loope
fadd
jge
cmp
iret
mov
mov
pop
mov
in
neg
cmps
pop
out
pusha
(bad)
out
idiv
pop
out
pop
out
lahf
sti
fsub
pop
out
pop
out
pop
dec
mov
fbld
mov
adc
fisttp
xor
arpl
fcom
push
daa
lahf
pop
pop
fbstp
push
popw
xchg
iret
or
pop
das
cmp
mov
das
mov
nop
add
fs
add
in
or
and
and
add
dec
push
xor
inc
push
xchg
pop
pusha
and
nop
add
daa
ja
pop
int3
rcl
ret
jge
pop
retf
(bad)
pop
or
pop
outs
sti
jo
out
in
pop
push
test
sahf
fcom
sbb
cmp
and
push
cs
push
cmp
out
leave
pop
push
inc
pop
push
dec
pop
sahf
fcom
push
gs
push
jo
neg
xchg
inc
xchg
lahf
sti
fsub
pop
push
pushf
pop
cmps
pop
ja
iret
jge
jae
xchg
cmps
loope
idiv
pop
(bad)
jmp
out
outs
and
fmul
adc
dec
pusha
pop
out
sbb
fwait
and
sub
xor
inc
sbb
inc
nop
jge
scas
push
daa
jnp
daa
mov
push
js
push
mov
enter
das
cwde
pop
neg
out
push
pop
arpl
jae
fnstcw
enter
jnp
das
push
call
and
repz
sbb
or
aas
adc
sbb
int3
pusha
lahf
das
and
das
xlat
sti
pop
and
push
fisubr
daa
aaa
pop
pop
lock
pusha
fild
aas
sub
inc
imul
aas
and
out
xor
pop
daa
mov
and
shl
div
imul
enter
ffreep
jb
sti
fsub
daa
das
call
cmp
inc
add
outs
or
das
lahf
sbb
ds
js
and
pop
sub
jnp
pop
adc
pop
cmovo
add
test
inc
pusha
in
jnp
jae
aaa
push
das
test
sbb
inc
daa
mov
sar
jnp
pop
mov
sahf
sti
(bad)
pop
psrad
xchg
adc
and
fnstcw
or
pusha
add
imul
cmp
push
mov
(bad)
loopne
inc
fsub
idiv
pop
push
push
pop
mov
mov
pop
and
pop
and
out
jae
fisttp
aaa
or
mov
in
pop
aaa
mov
or
and
test
test
fbstp
out
fiadd
adc
sub
not
loop
out
add
fild
add
xor
daa
jge
sahf
jmp
or
test
push
aas
dec
jo
xor
sub
add
push
jg
pop
and
jnp
ficomp
pop
jg
sbb
add
pop
mov
xchg
fbstp
fnsave
ja
comiss
enter
pusha
das
push
add
call
jae
jae
daa
pop
lock
das
or
out
xor
pop
sub
jo
add
neg
sbb
add
in
ret
or
jge
xor
pminsw
outs
pusha
das
aas
js
repnz
nop
ds
add
nop
aaa
outs
pop
ss
cmp
add
movq
shr
outs
lock
outs
in
cmp
pop
and
pop
lock
or
(bad)
leave
ret
xchg
pop
ja
out
mov
(bad)
xchg
dec
das
sti
xchg
push
add
shr
aaa
ins
cwde
sysret
sub
push
push
mov
imul
aaa
outs
addr16
pop
iret
jge
out
movntq
outs
cwde
sti
fdivr
push
pop
cdq
das
cmp
clc
out
mov
pop
add
push
xchg
and
adc
outs
dec
jmp
adc
xor
test
out
pusha
jbe
nop
pop
fistp
out
mov
jo
dec
mov
adc
(bad)
cwde
xchg
add
enter
and
sbb
jo
out
lahf
nop
cmp
adc
daa
sbb
cmp
or
nop
das
shl
push
nop
daa
xor
cdq
xor
outs
ret
shr
fmul
fsub
mov
daa
xor
pop
out
or
not
sbb
pop
push
daa
fs
iret
jge
pop
pop
das
sub
jge
iret
or
pop
add
pop
jle
aas
idiv
mov
enter
aaa
cmps
shl
daa
fbstp
aaa
call
das
ret
push
add
das
daa
sbb
inc
add
inc
daa
inc
push
sti
int3
inc
jg
pop
push
or
pop
leave
and
nop
and
inc
xor
mov
cmp
daa
ror
add
scas
xor
pop
and
aas
pop
daa
sar
and
and
jge
push
out
rol
sub
jg
pxor
pop
and
repz
mov
ret
pop
pop
pop
das
jae
xor
out
pop
jnp
imul
dec
xor
std
jne
pusha
outs
dec
xlat
jp
inc
pop
popa
mov
jmp
dec
jae
pop
xor
or
mov
pandn
fadd
sub
pop
jo
add
pusha
aaa
xchg
and
test
rol
inc
or
fistp
pop
pop
rcl
outs
fdivr
fcomp
jo
jnp
dec
pop
clc
dec
lsl
fild
repz
mov
dec
ins
inc
inc
xchg
ror
ins
push
lods
and
mov
fild
lock
clc
jnp
clc
jae
push
add
inc
sbb
pop
jge
jae
(bad)
pop
pop
ja
pop
jnp
ret
iret
pop
jmp
pop
lahf
push
pop
ret
xor
pop
mov
xlat
add
add
add
add
popf
pop
stos
pop
shl
mov
addr16
mov
mov
mov
mov
mov
pop
xlat
adc
mov
sysret
fild
and
adc
out
jae
rol
push
daa
adc
mov
fist
jo
xchg
imul
jnp
aas
xchg
aaa
and
mov
aaa
mov
nop
add
mov
or
xchg
pop
lock
in
out
adc
lock
into
xchg
pop
mov
pop
aaa
sti
fadd
daa
dec
aaa
inc
daa
outs
dec
pop
ins
and
sahf
das
cmp
pusha
daa
add
dec
push
mov
jge
enter
test
xor
out
jnp
pop
mov
mov
adc
jmp
and
mov
pop
das
inc
popa
out
lods
push
add
outs
or
das
out
jae
leave
jo
daa
pop
sub
mov
in
jnp
stos
mov
or
pop
mov
daa
pusha
push
sub
push
imul
sar
mov
pop
adc
mov
mov
out
or
popa
dec
dec
out
aaa
shl
idiv
pop
dec
jecxz
mov
pop
int
out
dec
cld
pop
dec
or
aas
ds
nop
cmp
daa
dec
cmp
dec
inc
pop
dec
dec
pop
dec
pop
iret
jge
jae
dec
push
vmread
pop
push
mov
mov
clc
pop
mov
daa
and
xlat
shl
xor
test
and
in
lahf
cwde
daa
in
and
inc
and
shl
jge
add
push
jnp
pop
pop
pop
pusha
pop
or
sbb
sbb
icebp
out
fbstp
out
and
mov
das
cmps
inc
leave
or
enter
sar
fbstp
sbb
jg
pop
jg
sar
jg
pop
iret
or
cmp
pop
sub
and
pmulhuw
idiv
pop
das
push
pop
idiv
lahf
pop
cmp
and
mov
or
stc
(bad)
out
mov
add
enter
inc
cmps
sub
pop
aas
ret
inc
loopne
and
xlat
cmp
rol
add
iret
xor
addr16
mov
mov
and
adc
inc
sub
inc
dec
in
mov
pause
or
bswap
lock
aaa
daa
idiv
daa
enter
rol
out
das
push
call
jbe
jo
hlt
out
cld
daa
cmp
xchg
push
and
out
pusha
daa
and
nop
and
cmp
add
pusha
or
adc
je
sub
xor
or
mov
inc
xor
mov
or
fdiv
hlt
ret
or
in
sub
and
clc
inc
iret
jnp
leave
jmp
mov
ror
daa
mov
cwde
sti
fmul
sub
mov
adc
and
mov
movntq
shl
aam
scas
sbb
ret
daa
lock
daa
add
div
in
inc
in
fwait
pop
jb
fbld
or
das
sbb
fist
das
push
xlat
add
dec
jnp
fsub
pop
daa
pop
pop
cmp
dec
mov
adc
sub
cmc
add
add
push
mov
and
add
int
pop
mov
loope
dec
dec
pop
(bad)
enter
out
das
fadd
and
daa
neg
sbb
pop
or
sub
jbe
or
lock
jg
push
not
ret
and
daa
cmp
jge
sar
dec
pop
in
mov
add
or
mov
mov
add
xchg
ins
adc
ja
xor
mov
aaa
add
or
xadd
enter
idiv
aaa
lods
pop
aaa
add
ret
add
ffreep
daa
in
mov
daa
das
cmp
dec
add
xchg
or
test
push
das
and
dec
add
sub
inc
push
fsub
out
add
loop
(bad)
nop
das
pop
ins
aaa
in
inc
add
jmp
(bad)
pop
xor
add
mov
das
loope
or
addr16
pop
inc
xor
sbb
xor
nop
or
xor
or
sbb
add
test
pop
mul
mov
daa
or
popa
xadd
ja
sti
inc
leave
sbb
xor
neg
int3
mov
fsub
aam
jg
das
and
mov
ret
iret
jg
daa
adc
ret
fsub
sbb
jg
cld
inc
pusha
push
xor
xor
das
enter
daa
cmps
push
pop
imul
or
in
jnp
or
sub
mov
add
xlat
sbb
add
pop
aaa
add
iret
jge
jo
punpckhbw
xlat
xchg
out
aaa
nop
das
pushf
daa
das
xchg
pop
das
pusha
push
or
shl
enter
aam
in
or
nop
call
popf
aam
add
(bad)
cld
das
popa
data16
cmps
mov
and
fchs
daa
cmp
(bad)
test
xor
xchg
add
fs
jl
nop
jge
test
pop
repz
dec
push
retf
shr
nop
dec
sbb
cmp
into
jge
clc
or
add
iret
jge
mov
sbb
fcom
xor
daa
fsub
add
nop
or
in
cmp
and
jmp
ja
and
xor
leave
or
cmp
sub
and
add
cmp
daa
push
daa
xor
add
dec
fs
or
inc
js
or
add
mov
mov
addr16
jo
fdivr
mov
pop
pop
add
inc
xchg
or
dec
sbb
dec
mov
ds
jmp
or
add
shr
fld
ja
push
mov
jo
addr16
aaa
clc
mov
in
aas
xor
pop
ins
jmp
and
sub
jg
add
sti
fcom
in
inc
daa
push
inc
daa
mov
ret
sahf
inc
add
or
pusha
fistp
or
sub
push
and
jg
bound
cwde
pop
daa
test
aaa
add
ins
fdiv
jl
sar
add
add
and
loopne
idiv
or
out
jmp
add
pop
sbb
neg
mov
das
or
or
fdiv
fiadd
add
das
xchg
cs
rol
fistp
iret
jge
pop
aaa
add
jg
push
mov
mov
test
mov
daa
ror
jnp
and
clc
loopne
add
int3
inc
(bad)
adc
adc
lahf
or
add
mov
fld
and
inc
push
outs
adc
add
sbb
or
adc
dec
daa
add
add
cld
pop
mov
imul
imul
push
dec
dec
push
inc
push
dec
or
ret
and
dec
push
push
pop
std
pop
test
pop
adc
push
push
dec
dec
dec
or
push
mov
push
push
add
dec
dec
dec
inc
push
inc
daa
xchg
adc
pop
outs
mov
sub
add
int3
mov
inc
add
(bad)
(bad)
sbb
stos
inc
add
pushf
inc
add
lods
inc
add
scas
mov
add
inc
add
pop
mov
inc
loopne
inc
add
inc
add
jo
add
dec
inc
add
rol
adc
dec
repz
add
inc
add
add
aam
add
inc
add
sub
dec
repz
inc
add
pop
inc
add
leave
xchg
xchg
inc
call
std
add
outs
das
add
add
jecxz
add
int3
xor
mul
inc
add
xchg
(bad)
imul
add
(bad)
aas
pop
push
inc
add
inc
add
inc
add
mov
cdq
sbb
out
repz
(bad)
aas
or
or
or
or
or
or
add
or
ja
mov
add
add
add
add
imul
add
push
adc
add
(bad)
out
cmp
aam
add
mov
add
retf
fld
cmps
int
(bad)
jg
sahf
pop
rcr
int
imul
sar
retf
(bad)
into
xor
mov
(bad)
fbstp
retf
fcmovnb
stos
xor
dec
jae
pop
xor
ror
ret
cwde
and
(bad)
loop
(bad)
mov
nop
fs
jmp
enter
fs
mov
mov
and
pop
mov
and
pop
rcl
push
inc
xor
mov
and
dec
inc
nop
mov
add
daa
fwait
and
sub
and
jmp
leave
iret
mov
and
jb
add
mov
into
les
out
mov
fist
sub
retf
stc
rcl
push
sub
xor
sub
mov
idiv
fwait
inc
(bad)
mov
mov
mov
mov
aam
pop
add
dec
add
ins
dec
add
and
imul
js
add
in
in
dec
add
jmp
xlat
adc
or
fmul
retf
fcom
or
daa
das
data16
dec
and
js
out
add
lock
inc
xor
push
sub
cmc
daa
sbb
lock
lahf
arpl
pop
adc
ins
and
pusha
adc
mov
fisub
or
(bad)
cmp
or
aaa
pop
adc
push
daa
pop
add
test
adc
xchg
aas
mov
mov
sub
in
add
out
add
sub
adc
dec
add
push
push
fnstcw
or
add
cwde
and
test
add
inc
pop
ret
lahf
dec
repz
add
and
add
dec
add
outs
adc
in
or
stc
div
mov
(bad)
mov
inc
dec
sub
push
xchg
mov
xor
push
add
add
call
adc
fadd
adc
shr
aaa
sub
adc
or
ja
neg
xor
pop
or
pusha
out
lea
js
jnp
dec
adc
test
and
or
push
ret
cmps
and
add
add
xchg
xor
push
sbb
inc
pusha
xchg
adc
dec
jp
leave
addr16
adc
add
fist
mul
and
xor
or
imul
mov
inc
fsub
mov
xor
dec
fist
xor
aas
xchg
fdivr
sbb
ja
mov
cmc
adc
adc
mov
mov
dec
daa
sbb
adc
cmp
add
rol
lahf
out
gs
popa
cs
iret
adc
adc
push
mov
push
fs
arpl
and
ret
xor
inc
daa
fild
ror
adc
add
or
xor
outs
fs
and
daa
cmp
fld
sbb
adc
sbb
test
inc
push
and
cmp
mov
scas
pop
add
fmulp
push
or
das
pop
add
rcl
jnp
movs
int3
mov
pop
retf
add
adc
enter
lahf
retf
adc
retf
in
das
sbb
add
adc
inc
inc
add
or
push
and
push
daa
mov
xor
mov
adc
(bad)
sbb
arpl
sub
ja
add
(bad)
in
add
cmp
rcr
adc
dec
fiadd
ins
add
popa
xor
daa
push
aas
sbb
add
xchg
or
mov
aas
(bad)
loope
ja
and
or
dec
js
add
ficom
pop
repz
fdivr
jmp
cmp
dec
adc
add
push
pop
out
mov
add
push
or
daa
add
fcom
arpl
arpl
or
sub
or
jg
adc
sbb
mov
xchg
or
imul
xor
sbb
sub
mov
fadd
mov
or
addr16
mov
das
mov
outs
adc
addr16
mov
add
pop
les
inc
ja
out
add
add
and
inc
add
popa
or
sub
ja
out
mov
add
sbb
sbb
adc
push
mov
sub
jmp
addr16
pop
add
or
movs
aaa
pop
rcpps
add
ret
icebp
fisttp
addr16
or
cmp
mov
sub
add
adc
ss
pusha
adc
add
lock
lahf
cmps
inc
inc
ret
cmps
inc
jp
cmp
daa
aaa
xor
mov
(bad)
add
add
daa
adc
add
fwait
push
sbb
mov
mov
clc
faddp
fisub
jae
add
sub
mov
dec
jp
arpl
add
sbb
sti
jmp
adc
push
and
jnp
lea
pop
jae
adc
fcomi
or
sub
mov
test
pop
adc
pop
add
or
addr16
repz
ret
xchg
pop
repz
sbb
mov
jle
pop
pop
add
add
out
or
add
pop
ja
pop
mov
int3
cld
pop
imul
add
ja
stos
add
pop
idiv
cmp
jne
pop
push
add
pop
inc
sbb
add
adc
inc
add
sub
or
jnp
pop
pop
mov
loop
jne
pop
or
mov
xchg
ja
(bad)
aas
int3
jne
ja
pop
int3
add
add
xor
pop
data16
jl
clc
add
add
add
add
add
jl
pop
push
xchg
jmp
fld
add
xor
stos
retf
add
fadd
fadd
mov
or
lds
mov
mov
fsubr
imul
leave
mov
arpl
inc
sysret
jg
add
add
(bad)
jo
fild
sti
adc
add
add
add
add
dec
frstor
add
add
add
add
iret
add
call
out
cld
add
jg
(bad)
adc
iret
mov
mov
pop
(bad)
sbb
mov
aad
jne
push
jge
loope
mov
fsincos
ja
jge
sar
loope
aas
std
pop
add
neg
jnp
ja
pop
pop
repz
add
mov
iret
mov
add
mov
popf
add
and
fld
sar
add
pop
mov
jnp
imul
xchg
add
add
ja
inc
xlat
outs
jmp
rcr
xchg
test
mov
or
pop
cmps
inc
pop
inc
outs
fs
stos
adc
adc
lsl
ja
mov
enter
out
or
inc
fisub
mov
jg
retf
neg
inc
add
add
adc
lahf
and
test
mov
adc
lahf
push
ss
or
retf
mov
or
pmovmskb
mov
pop
daa
adc
dec
daa
adc
add
pusha
das
adc
pop
fmul
mov
mov
out
push
xor
pop
adc
add
jne
je
test
dec
shl
dec
add
xor
or
inc
inc
and
mov
adc
and
inc
ss
or
inc
jo
arpl
pop
lahf
daa
repz
mov
mov
add
fbstp
iret
xor
adc
push
xchg
and
add
or
inc
std
out
and
ins
(bad)
adc
lea
dec
inc
aas
or
dec
shl
cmp
xor
sbb
pop
add
push
push
dec
jo
inc
mov
push
jne
fs
jo
adc
jnp
or
cmps
or
sub
cs
shl
icebp
jmp
daa
retf
stc
int3
loope
test
mov
(bad)
(bad)
call
int
mov
shr
mov
test
in
(bad)
fidivr
mov
out
daa
xlat
jmp
(bad)
mov
fdiv
jle
call
jmp
repz
shl
repnz
into
lods
retf
mov
adc
xchg
cmp
loopne
out
shl
not
std
(bad)
mov
push
and
mov
ror
mov
mov
into
cmps
std
sti
jg
add
mov
mov
mov
(bad)
fmul
mov
repnz
(bad)
sti
jg
pop
(bad)
pop
add
xlat
rcl
out
mov
mov
mov
jg
mov
ror
(bad)
idiv
ja
mov
mov
and
mov
rol
inc
dec
dec
dec
mov
(bad)
mov
aad
mov
into
(bad)
mov
das
cmp
test
inc
mov
aam
sar
rol
iret
ret
add
jnp
sbb
retf
iret
dec
into
stos
xor
sar
mov
push
rcl
mov
and
into
mov
ret
mov
retf
stc
shr
shr
imul
cli
adc
xchg
test
add
inc
inc
dec
mov
fwait
mov
add
sar
ja
out
add
add
sub
sub
int
ret
neg
push
fdiv
and
hlt
jno
pop
jae
pop
mov
adc
popa
outs
add
push
sub
(bad)
mov
ins
je
cmp
pop
inc
dec
pop
push
imul
push
dec
push
push
dec
inc
pop
add
mov
lods
mov
enter
js
hlt
out
cmp
popa
je
bound
mov
les
inc
gs
outs
jnp
sub
outs
outs
arpl
adc
mov
mov
shl
retf
stc
aam
inc
jmp
div
mov
stos
pop
push
lock
mov
push
cwde
arpl
aas
push
cmc
xlat
jmp
repnz
ror
mov
add
and
mov
and
cmps
mov
loope
imul
inc
aad
mov
aas
repz
push
lds
mov
test
fsubr
popa
out
pop
adc
xchg
sub
and
mov
aas
sbb
mov
rol
push
dec
mov
or
adc
out
aas
aam
rcl
retf
and
inc
ins
ins
push
outs
jb
test
jmp
je
jb
gs
ins
adc
fsubrp
(bad)
inc
add
inc
push
dec
push
pop
dec
inc
dec
dec
cmps
add
out
jbe
add
sti
mov
into
retf
fild
les
int3
in
cmps
mov
mov
retf
(bad)
pop
and
mov
mov
into
mov
sbb
dec
stos
mov
(bad)
fcomip
retf
jmp
ins
outs
jbe
push
ins
popa
jns
sub
add
add
sub
or
lsl
xchg
mov
xor
fild
add
pop
adc
(bad)
dec
mov
adc
pop
add
scas
sbb
lds
hlt
das
or
pop
daa
adc
(bad)
mov
adc
add
rol
sbb
add
xchg
inc
add
add
dec
(bad)
pusha
or
ins
dec
retf
push
das
idiv
(bad)
aas
add
(bad)
jg
jg
or
out
dec
jno
aas
pop
or
push
inc
sbb
sub
in
add
pop
dec
stos
push
jg
adc
pop
das
(bad)
(bad)
(bad)
clc
pusha
sub
ins
lods
jmp
pusha
push
pop
sbb
inc
push
push
sbb
pop
sub
and
inc
(bad)
pushf
and
jmp
jmp
jmp
lods
daa
pop
dec
cdq
sbb
push
aas
(bad)
arpl
(bad)
jg
pop
pop
dec
(bad)
jg
xor
dec
jmp
addr16
xor
(bad)
(bad)
aas
xor
int3
dec
inc
aas
push
(bad)
(bad)
dec
pop
jg
aas
int3
dec
xor
(bad)
call
add
stos
sub
(bad)
call
call
stos
cmp
push
stos
cmp
push
test
inc
(bad)
aas
test
jmp
dec
sbb
sub
add
xor
adc
jne
(bad)
jg
inc
xor
sbb
addr16
sub
mov
push
pop
adc
je
push
or
ja
(bad)
push
or
arpl
dec
hlt
push
mov
sub
call
or
out
(bad)
mov
jmp
adc
cmp
pop
add
mov
sbb
(bad)
(bad)
push
xor
cdq
sbb
pop
call
adc
pushw
mov
inc
add
int3
dec
xor
loopne
scas
pop
cmp
(bad)
jg
jmp
sbb
imul
(bad)
jg
sub
imul
loopne
lods
inc
xor
dec
mov
cwde
pop
(bad)
(bad)
(bad)
jmp
push
pop
outs
hlt
push
test
inc
sbb
jg
daa
inc
popa
data16
push
xor
or
and
or
out
bswap
inc
(bad)
pop
(bad)
jg
dec
(bad)
call
inc
add
xor
mov
ret
add
je
cwde
adc
or
adc
pop
ins
xchg
test
aas
or
cmp
inc
(bad)
jae
ror
and
pop
cmp
jae
pusha
mov
xor
pop
dec
popf
xor
scas
das
jg
clc
pushf
jae
push
or
pushf
jae
push
sub
jae
inc
or
pop
pop
jno
lock
cdq
sbb
cmp
sar
sbb
gs
sbb
int
mov
mov
data16
cdq
pop
data16
add
data16
pop
ret
aas
and
xor
out
ja
pop
outs
es
and
xor
and
cdq
sbb
add
ins
pop
mov
sbb
inc
jg
daa
cld
out
call
data16
gs
int3
dec
add
and
inc
lods
cmc
add
sar
stos
dec
add
push
imul
outs
sub
ja
xchg
push
push
adc
pop
dec
lods
pop
dec
aas
sub
push
aas
dec
outs
outs
inc
xlat
int3
adc
sub
outs
jmp
mov
add
mov
cmovno
mov
(bad)
mov
add
loopne
jmp
(bad)
enter
pop
mov
shr
pop
(bad)
push
into
mov
mov
rcl
mov
adc
rcr
fimul
sub
add
jle
pop
ins
pusha
push
and
pop
or
inc
add
mov
je
add
mov
cmps
jmp
mov
mov
call
adc
push
pop
and
jnp
xor
xor
or
pop
icebp
aas
add
push
or
out
add
jnp
pop
movs
mov
push
pop
mov
pop
add
scas
add
xchg
pop
or
add
nop
pop
push
scas
jmp
pop
mov
or
mov
mov
test
pop
add
adc
pop
push
sub
pop
js
mov
je
xchg
scas
or
mul
pop
add
pop
fs
pop
add
pop
pop
pop
loope
or
pop
pop
pop
sub
jne
(bad)
push
pop
xlat
push
sub
push
pop
pop
dec
pop
dec
scas
or
jg
pop
mov
loope
xor
inc
pop
add
jne
jg
pop
xlat
push
sub
xor
sar
ja
pop
sub
nop
jnp
sub
fwait
and
add
pop
adc
and
jg
pop
inc
mov
pop
ret
pop
jg
pop
and
add
add
add
fild
mov
push
add
pop
add
add
xor
in
pop
jg
pop
cs
push
jg
pop
jg
jo
mov
pop
rol
fsub
mov
aam
sub
jne
cmp
pop
xor
int3
pop
cmps
enter
leave
pop
ds
pop
jmp
imul
fs
imul
(bad)
(bad)
push
jb
je
jbe
js
jp
add
or
or
add
or
adc
adc
in
dec
mov
adc
adc
popa
xor
outs
outs
xor
jae
(bad)
mov
cmp
cmp
add
sbb
pop
sbb
sbb
sub
and
xor
sub
sub
xor
sub
sub
and
addr16
imul
jp
idiv
jmp
sbb
sbb
sbb
push
pop
and
and
and
and
sbb
dec
aas
(bad)
in
add
add
sbb
jnp
rol
and
add
(bad)
mov
adc
sbb
sbb
out
in
sbb
pop
add
mov
or
add
or
or
add
or
and
pop
add
xchg
add
add
add
fstp
ss
sub
add
fld
or
add
dec
pop
repnz
add
add
mov
adc
add
cmp
adc
sbb
adc
jl
and
adc
adc
mov
(bad)
out
adc
adc
sbb
add
add
add
fs
add
pop
or
add
add
add
sub
enter
or
add
ja
add
sbb
sbb
add
add
add
pop
add
and
cmp
add
and
fld
and
sub
add
iret
push
enter
or
fistp
sub
add
and
fstp
add
xor
dec
push
and
sub
or
sbb
sbb
sub
iret
xor
adc
or
sub
sub
or
sbb
sub
add
ret
sahf
or
das
prefetcht0
add
or
sbb
and
and
or
mov
adc
or
or
xor
in
nop
sbb
or
xor
adc
popa
daa
sub
add
repnz
cld
or
or
aaa
cmp
psubusb
add
or
mov
pop
mov
or
cmp
dec
sub
cmp
aas
add
or
fisttp
fild
xor
cmovb
jnp
push
inc
nop
push
add
bswap
pop
and
pop
sbb
add
not
pop
add
jns
cmp
pop
pop
pop
jle
push
repnz
inc
adc
inc
add
sbb
mov
add
adc
jle
mov
dec
and
in
mov
add
or
add
or
push
enter
or
or
xor
or
dec
or
add
dec
(bad)
and
or
add
or
cmp
push
sub
in
or
adc
or
nop
iret
retf
add
or
or
push
mov
or
or
push
or
push
jl
ffreep
or
or
and
sbb
test
push
push
or
(bad)
and
sbb
push
or
push
pop
push
xchg
pop
adc
pop
in
pop
sti
or
push
pop
add
push
sub
inc
dec
enter
push
sbb
xchg
sbb
pop
or
add
or
std
jg
pop
or
push
sub
push
sub
popa
pop
or
push
add
nop
bound
xor
push
repnz
jle
or
(bad)
add
ret
or
adc
ss
or
mov
sti
pop
xor
xor
rdpmc
imul
adc
jnp
xor
sub
add
mov
sub
pop
or
pop
and
lsl
adc
(bad)
jge
retf
adc
xor
add
xor
jne
add
sbb
adc
js
jns
fmul
bound
sbb
sgdtd
or
jp
(bad)
or
sbb
cmp
ucomiss
aaa
movnti
pop
fdivr
prefetch
dec
push
fsubr
lmsw
(bad)
or
jmp
sti
jle
rdmsr
add
add
xor
fdiv
or
or
in
out
ins
test
add
or
test
pop
add
xchg
aaa
or
xor
sub
and
push
enter
mov
xor
iret
out
add
and
enter
or
add
or
or
add
and
ds
add
sbb
or
and
xchg
xor
sub
or
cmp
or
in
daa
das
or
xor
lahf
xchg
pop
leave
daa
or
or
das
cmp
and
sbb
jbe
sbb
xor
xor
mov
enter
or
or
fwait
inc
dec
fnstcw
push
and
sbb
test
popf
add
sahf
or
sbb
cmp
sbb
mov
push
and
cmp
mov
add
push
movs
add
cmp
out
out
push
cmps
add
cmps
add
sub
mov
or
push
add
push
das
push
iret
xchg
sbb
xor
push
cs
and
add
dec
mov
sbb
push
aaa
add
and
and
mov
add
or
repnz
mov
or
pop
or
or
mov
(bad)
daa
in
or
mov
or
out
add
or
or
or
sti
mov
or
mov
sub
xor
sbb
xor
and
in
add
enter
add
add
jg
mov
or
add
add
and
add
mov
pop
sub
add
add
xor
cdq
sti
xchg
daa
add
add
and
aas
mov
xadd
aaa
add
add
mov
jmp
les
adc
mov
popf
mov
add
retf
xchg
std
int
add
xor
add
adc
add
not
sub
or
add
and
jbe
sub
add
adc
das
rol
add
adc
aad
adc
adc
adc
adc
adc
leave
or
xchg
(bad)
adc
sub
push
adc
fadd
adc
adc
aas
(bad)
enter
adc
and
and
pop
sbb
sbb
adc
repnz
repnz
adc
adc
xor
xor
adc
adc
fild
call
sbb
and
adc
fld
add
add
fiadd
sbb
sbb
sbb
add
adc
add
loopne
mov
jbe
loope
add
or
and
add
in
pop
add
adc
fsub
cmp
add
in
in
or
fcomp
and
adc
sub
jmp
mov
jmp
xchg
in
xchg
or
sbb
fs
fsub
in
sbb
sub
jl
jg
out
sysenter
add
sub
add
add
add
add
and
sub
add
test
add
in
or
adc
adc
cmc
adc
adc
fstp
adc
add
fnstenv
pop
add
jl
jns
or
or
fmul
jnp
stc
nop
add
or
inc
push
mul
or
add
or
add
pop
jbe
add
or
scas
in
das
or
or
or
and
sbb
or
ret
(bad)
out
leave
or
std
or
or
fsin
or
pop
pop
and
sbb
sbb
out
ja
xchg
sbb
sbb
add
pusha
add
pop
add
sub
add
pop
jb
fnsave
add
pop
and
aaa
pop
inc
ss
push
or
pop
or
or
in
fld
adc
or
mov
add
push
or
pop
leave
push
xchg
sbb
sub
add
add
adc
das
adc
adc
adc
xor
add
in
nop
mov
adc
adc
and
add
adc
push
adc
sbb
and
xor
sbb
ror
or
push
and
and
std
mov
sbb
push
sbb
and
sbb
push
sbb
sbb
push
sbb
ss
sub
adc
sbb
daa
cmp
push
mov
fcomp
add
add
and
sub
adc
mov
add
push
and
adc
and
mov
movhps
add
cmp
push
xor
xor
add
fild
xor
add
and
adc
frndint
add
sub
adc
sbb
adc
add
adc
add
adc
adc
cs
call
adc
sub
sub
or
in
cwde
adc
add
sbb
xor
fadd
sbb
add
ret
and
add
and
and
jb
add
add
xchg
mov
add
aaa
and
add
cmp
adc
ret
push
cmp
add
adc
cmp
sbb
add
sub
add
and
aas
add
daa
xor
xor
xor
das
in
sar
adc
sub
(bad)
fnstenv
pop
sbb
aaa
inc
adc
add
adc
adc
inc
add
fcomip
(bad)
push
or
or
pop
add
inc
or
push
add
mov
scas
xor
ss
or
cmps
jecxz
jmp
sbb
psubq
ss
adc
and
adc
add
sub
mov
std
dec
push
sbb
pop
pop
(bad)
or
and
ss
in
(bad)
(bad)
(bad)
mov
wrmsr
adc
push
xor
pop
sbb
add
daa
add
or
adc
aaa
cli
jmp
(bad)
adc
push
aaa
add
add
add
or
daa
or
out
sbb
or
mov
test
add
sbb
(bad)
(bad)
call
add
push
or
add
movntps
sub
sbb
or
adc
or
inc
daa
push
(bad)
out
(bad)
jmp
dec
add
xor
add
or
or
or
(bad)
call
pop
push
sbb
das
push
sub
sub
sbb
or
(bad)
(bad)
cvttps2pi
sub
add
sub
sbb
add
adc
aaa
push
xor
out
inc
xor
sub
out
aaa
push
sub
out
sbb
xchg
arpl
push
sbb
or
push
sbb
das
or
(bad)
jmp
add
xor
push
aaa
or
adc
sub
daa
out
(bad)
(bad)
inc
add
das
push
sub
sbb
and
push
and
add
(bad)
or
(bad)
(bad)
dec
push
or
sbb
push
xor
aaa
adc
or
or
sbb
mov
(bad)
call
aaa
add
add
adc
sub
xor
and
add
aaa
adc
sbb
or
loope
inc
sbb
add
cvttps2pi
pop
adc
add
pop
jne
ins
aaa
adc
daa
add
push
pop
loop
mov
sbb
or
adc
pop
and
and
out
(bad)
(bad)
out
mov
sbb
es
aaa
pop
sbb
add
mov
clc
or
or
adc
sbb
ss
jg
fwait
push
sub
xor
sbb
cld
(bad)
call
sbb
add
push
sub
sbb
aaa
add
and
push
sbb
clc
adc
mov
sbb
pop
adc
add
shl
pop
and
pop
and
xchg
push
sub
and
or
add
or
and
or
push
add
or
aaa
add
pop
or
add
aaa
sbb
push
and
das
pop
or
(bad)
cmp
inc
sbb
ss
adc
or
push
sub
sbb
or
aaa
adc
dec
sbb
xor
sbb
sbb
push
sbb
sub
and
mov
or
or
pop
sbb
adc
adc
jmp
call
and
pop
sbb
add
call
adc
pop
sub
add
add
popf
sbb
or
add
dec
sub
push
aaa
getsec
adc
adc
add
or
or
push
xor
sbb
daa
adc
jecxz
(bad)
inc
xor
pusha
and
bound
push
sub
adc
pop
cmc
(bad)
(bad)
(bad)
mov
push
sub
arpl
(bad)
or
or
rdtsc
push
sbb
(bad)
dec
or
ss
and
sbb
push
sbb
adc
idiv
jmp
adc
add
and
add
(bad)
mov
xor
sbb
ss
add
or
push
(bad)
(bad)
loope
mov
push
sbb
aaa
or
cvttps2pi
sbb
xor
sbb
into
mov
push
pop
and
xor
(bad)
fcomip
inc
add
sbb
call
add
adc
push
and
add
pop
sbb
icebp
scas
loope
sbb
popf
add
add
adc
inc
sbb
sbb
adc
or
adc
or
int
xor
xor
sbb
(bad)
push
sbb
sbb
ss
sub
add
ss
aaa
hlt
call
sbb
sbb
sbb
aaa
xchg
sub
sbb
ss
xor
fwait
sahf
out
daa
or
push
push
ss
cdq
(bad)
fcomip
jg
add
imul
or
add
pop
aaa
outs
sub
jmp
movntps
sbb
or
push
and
add
ins
or
add
getsec
add
sbb
or
add
adc
push
aaa
sbb
adc
add
(bad)
jmp
aaa
pop
add
sub
sub
xor
adc
daa
add
push
(bad)
(bad)
(bad)
sbb
or
adc
adc
or
push
sub
xor
or
(bad)
(bad)
call
push
ss
or
add
add
add
(bad)
or
and
and
add
sbb
aaa
(bad)
out
jg
out
jae
sub
or
imul
and
(bad)
std
inc
or
or
adc
sub
(bad)
cmp
ss
or
jmp
push
ss
xor
sub
add
or
or
push
sbb
or
sbb
aaa
add
adc
xor
pop
sbb
and
xor
add
ja
or
cld
call
aaa
adc
add
push
and
xchg
daa
or
or
add
cmp
mov
sub
add
ss
or
(bad)
fcomip
sbb
adc
sbb
adc
and
das
push
and
pop
adc
(bad)
(bad)
(bad)
inc
or
sbb
jle
adc
sub
ss
sbb
sub
ss
daa
add
call
mov
wrmsr
or
add
cmp
mov
add
xor
sbb
push
mov
add
xor
daa
int
adc
push
aaa
cmp
or
test
fist
and
sbb
sbb
(bad)
jmp
adc
test
sbb
adc
or
add
push
cmps
(bad)
(bad)
out
movs
or
rdpmc
adc
or
or
push
sbb
xor
xchg
(bad)
inc
sbb
sbb
sbb
aaa
adc
or
jecxz
adc
push
sbb
and
hlt
jg
adc
imul
xor
push
and
sbb
ss
clc
mov
sbb
mov
push
sbb
or
adc
add
push
and
sbb
rcl
rol
add
sbb
or
add
(bad)
inc
and
cs
xor
xor
sub
xor
cvtpi2ps
loope
cli
test
xor
popf
clc
sbb
push
ss
aaa
add
cdq
push
and
sbb
sbb
push
cmp
adc
cmp
xor
cmp
add
adc
or
adc
cmc
add
dec
leave
adc
add
adc
cs
adc
xor
jne
inc
add
and
(bad)
ja
aaa
add
or
sbb
mov
push
les
out
push
or
xor
sbb
ss
aaa
or
fnstsw
and
and
jg
push
out
lahf
pop
aaa
add
or
call
xor
adc
or
daa
pop
and
cmp
(bad)
clc
sbb
sbb
sbb
sub
add
cmps
cs
test
add
sbb
sbb
sub
add
cmc
inc
xor
aaa
or
leave
adc
(bad)
mov
sbb
aaa
adc
push
and
sub
xor
add
adc
add
pop
sbb
add
dec
add
pop
pop
push
xor
and
add
nop
or
mov
or
push
sbb
adc
xor
push
sub
and
das
gs
pop
jle
push
xor
adc
xchg
or
jne
or
xchg
sbb
cdq
pop
aaa
or
add
add
adc
push
sub
aaa
daa
or
fwait
clc
push
add
or
pop
and
jnp
or
add
adc
xchg
add
sub
adc
popf
and
sbb
cli
or
repz
and
or
sbb
pop
sbb
daa
adc
or
adc
std
lds
cwde
or
or
adc
aaa
adc
xor
lods
sub
imul
ret
or
aaa
add
sar
(bad)
mov
pop
push
sbb
and
add
push
sbb
stos
mov
call
push
sub
(bad)
mov
adc
push
ss
add
xor
daa
or
push
sbb
adc
adc
pushf
shl
or
adc
(bad)
inc
add
or
adc
xor
aaa
adc
push
sub
adc
push
sub
add
and
call
aaa
add
(bad)
or
pop
fwait
push
out
jo
fisttp
add
stc
xor
ss
push
sub
add
push
and
sbb
clc
aaa
std
mov
xor
and
ss
xor
and
hlt
adc
mov
add
add
add
or
sub
daa
cmp
jo
jmp
xor
popa
clc
ja
and
or
add
aaa
lock
lock
and
and
and
aaa
or
adc
jmp
add
std
outs
loop
adc
or
fwait
adc
sub
mov
or
add
sbb
or
add
pushf
sub
sub
iret
sub
add
inc
add
or
pop
adc
outs
loopne
mov
pop
push
sbb
and
sahf
lods
adc
pop
and
in
inc
sbb
or
adc
pop
sbb
pop
jge
push
sub
sub
adc
sbb
rdtsc
add
adc
add
dec
sub
xor
and
adc
(bad)
adc
test
adc
push
das
add
adc
push
sub
daa
sbb
mov
and
or
add
loopne
call
add
adc
push
and
xor
or
inc
(bad)
jb
dec
xchg
sbb
pop
sbb
pop
(bad)
fild
push
aaa
push
sub
xor
sbb
add
sbb
xor
or
adc
adc
xor
adc
mov
stc
xor
sbb
aaa
movs
adc
(bad)
(bad)
mov
sub
add
adc
adc
pop
sbb
scas
and
add
stos
xor
sub
sbb
add
movs
or
add
sbb
(bad)
out
call
and
or
test
ucomiss
xor
sbb
test
sub
mov
aaa
pop
add
nop
aad
xor
ss
stos
cmp
and
or
getsec
adc
stos
adc
cli
mov
in
add
sub
fstp
sbb
sub
daa
add
pop
and
and
mov
call
sbb
sub
lods
adc
xor
and
push
or
push
int
xor
daa
or
pop
xchg
push
(bad)
or
out
jmp
add
add
and
add
rol
out
ja
xor
sub
sub
ja
adc
ja
or
add
loopne
shr
ss
sbb
add
adc
or
jle
outs
add
sbb
cvttps2pi
and
aaa
sub
sbb
sbb
aaa
add
adc
add
ss
movs
fstp
or
adc
adc
push
(bad)
pop
(bad)
xor
sbb
cmp
push
and
(bad)
dec
add
push
sbb
sbb
push
subps
ffreep
xor
loope
sbb
test
aas
call
cs
or
mov
pop
or
or
or
pop
aaa
or
mov
push
dec
getsec
mov
cs
cld
inc
das
mov
mov
or
add
sub
mov
sub
dec
pop
outs
adc
add
clc
sar
sub
sub
sub
and
xor
or
(bad)
call
sbb
push
xor
and
sub
and
daa
adc
or
or
add
inc
jbe
or
push
sbb
sub
sub
pop
add
outs
clc
or
add
adc
dec
sbb
sbb
xlat
(bad)
inc
or
or
pop
sbb
sub
daa
mov
inc
aaa
adc
sub
sbb
pop
and
add
mov
js
push
or
add
add
or
adc
and
push
mov
ss
add
adc
mov
add
adc
push
sub
ret
sbb
mov
xlat
mov
and
sbb
mov
or
cmp
xor
and
push
and
ins
push
pop
mov
(bad)
pop
and
sub
call
sub
sub
add
mov
fwait
jmp
sub
add
pop
fwait
push
imul
adc
pop
mov
aaa
adc
add
or
dec
or
add
or
or
push
push
sub
push
sbb
adc
adc
xor
(bad)
(bad)
(bad)
mov
mov
sub
ss
or
mov
xor
and
(bad)
(bad)
inc
xor
pop
and
add
or
add
or
or
or
or
push
sbb
xor
push
adc
add
dec
sbb
adc
sub
add
comiss
ss
add
or
adc
aaa
or
or
cld
and
sbb
or
jg
sbb
or
push
inc
jne
ss
out
dec
lds
push
std
cdq
adc
adc
adc
out
adc
and
daa
xchg
sbb
aaa
ret
push
(bad)
call
sbb
pop
add
pop
sbb
sub
aaa
or
or
loopne
cmp
push
sbb
adc
push
and
mov
sbb
sub
aaa
add
add
push
pop
add
or
ffreep
outs
jmp
adc
sbb
sbb
gs
push
push
aaa
add
test
adc
mov
add
lds
ss
mov
add
ud0
or
(bad)
jg
out
mov
or
and
and
add
sub
std
cmps
aas
cli
sbb
add
aaa
sbb
and
sbb
add
mov
or
or
ja
add
and
or
xor
add
lock
das
or
add
add
(bad)
sbb
and
cvtpi2ps
les
clc
fild
ss
add
add
or
stc
xor
or
or
sbb
lds
xor
add
add
fbld
xor
xchg
and
call
fbstp
or
pop
(bad)
adc
sbb
mov
and
das
lods
sub
cs
add
or
or
dec
je
sub
aaa
adc
or
adc
or
add
sbb
ss
inc
adc
inc
sub
add
add
out
out
mov
paddq
stos
sub
and
or
ja
aaa
or
or
xchg
das
ds
mov
sbb
retf
and
lock
or
xor
cmp
sbb
xchg
sbb
inc
cmc
add
and
sub
or
shl
cs
sbb
or
sub
(bad)
call
adc
add
add
push
sbb
sub
sbb
fild
add
or
adc
out
push
cmc
and
pop
or
sbb
sub
(bad)
out
aaa
pop
sub
adc
xor
add
das
cmp
add
adc
pop
(bad)
sbb
xor
or
ss
xor
stos
mov
and
or
mov
or
and
je
sub
sbb
adc
jb
dec
add
sub
das
push
sbb
cmps
pop
lock
or
ja
sbb
sub
or
or
sbb
das
or
or
loop
push
dec
shl
and
out
call
or
add
push
sbb
fist
aaa
or
or
xor
push
sbb
sbb
leave
ss
rol
aaa
lds
jne
mov
out
aaa
lock
sbb
xor
sub
icebp
or
outs
clc
and
aaa
adc
sbb
push
icebp
sbb
push
and
je
jg
and
or
(bad)
(bad)
fistp
adc
add
push
sbb
sbb
sub
push
xor
xor
push
out
xchg
aaa
pop
sbb
mov
or
sbb
sbb
xor
es
add
xlat
jmp
ret
or
jmp
sbb
pop
jmp
xor
ss
shr
add
sub
daa
adc
adc
push
sub
sub
xor
(bad)
add
or
sbb
or
add
adc
dec
or
(bad)
out
clc
in
xor
sbb
(bad)
add
or
or
mov
add
add
pop
sbb
add
cmp
es
add
and
sbb
sbb
push
sbb
xor
in
out
mov
and
adc
stc
sub
ss
push
rcr
or
adc
mov
sub
dec
fcom
sbb
adc
push
aam
jo
fst
ss
cvttps2pi
(bad)
inc
push
in
adc
fadd
pop
arpl
cs
or
(bad)
jmp
adc
adc
or
add
(bad)
add
or
or
stos
movs
adc
out
(bad)
push
daa
xor
sbb
aaa
or
or
jg
and
aaa
or
sbb
sbb
sbb
aaa
jae
dec
sub
adc
add
fiadd
arpl
inc
push
mov
aaa
jmp
push
lock
sbb
dec
jge
mov
add
fild
hlt
dec
sub
sub
aaa
or
adc
fadd
xor
add
cmps
add
mov
add
xchg
mov
push
and
aad
xor
inc
or
adc
scas
xchg
daa
fnsave
or
pop
pop
or
cs
xchg
add
add
sub
sbb
les
imul
ss
add
(bad)
mov
push
sub
xor
cvtpi2ps
xor
lds
pop
aaa
fistp
icebp
(bad)
fucomip
sbb
add
aaa
adc
sbb
sbb
into
aad
and
xor
(bad)
pop
std
fwait
rol
or
or
add
shl
adc
or
adc
dec
out
and
or
or
sub
mov
(bad)
or
and
adc
dec
and
sub
sbb
or
or
jg
outs
push
or
add
aas
sbb
xor
sub
or
sbb
jne
out
and
mov
mov
sbb
(bad)
push
loopne
in
or
add
or
push
and
push
sbb
(bad)
jmp
and
adc
or
sub
or
sbb
ja
cmp
adc
ucomiss
push
sub
das
push
and
jg
(bad)
sub
add
push
retf
sbb
add
or
or
aaa
icebp
call
add
push
sbb
adc
or
sbb
pop
pop
push
sbb
jnp
icebp
cs
sbb
pop
and
add
push
fcomp
sbb
add
add
adc
add
pop
sbb
add
add
fstp
ss
inc
sub
cmp
sbb
out
cs
adc
add
adc
adc
and
and
sbb
and
add
add
out
sbb
add
add
adc
add
ja
mov
or
sbb
and
ja
pop
add
add
add
add
xor
adc
sub
mov
jbe
push
add
and
xor
adc
fstp
ja
sbb
or
sbb
fcomp
add
or
or
jae
fild
add
mov
or
xor
sub
sub
pop
inc
out
cdq
add
sbb
cdq
adc
or
or
and
xor
xor
xor
sar
add
cmp
sbb
add
mov
add
pop
sbb
add
ja
push
and
or
or
push
ror
or
ins
out
aaa
add
scas
xor
ret
inc
add
mov
adc
add
test
jne
js
and
add
push
adc
add
fistp
daa
push
push
sbb
and
and
and
sbb
fstp
jg
aaa
adc
add
push
xor
sbb
sub
sbb
xchg
push
sbb
popa
push
sub
ror
cmps
mov
add
push
outs
rdpmc
cmps
lods
das
pop
xor
adc
or
cmovg
sub
add
fiadd
and
mov
cmp
ud2
adc
xor
ret
fsubr
xchg
int
aaa
cmovge
adc
jo
or
adc
getsec
getsec
jns
aaa
or
out
xchg
mov
xor
scas
rdmsr
push
mov
push
jae
lods
or
and
not
inc
xchg
sbb
or
pop
jbe
and
sub
cmp
inc
add
or
or
adc
test
sbb
xlat
mov
sbb
push
xor
add
(bad)
mov
or
or
adc
mov
or
jnp
call
or
dec
das
push
sbb
add
sbb
into
push
sbb
popa
ret
jnp
or
push
and
jge
and
or
fild
pushf
cmp
imul
in
xchg
sti
fnsave
add
and
and
and
add
and
or
or
xor
sbb
sub
dec
sbb
sub
daa
pop
out
(bad)
fstp
sub
add
jo
mov
pop
daa
add
cmps
sbb
retf
pop
pop
or
add
pop
fild
cmp
pushf
retf
mov
or
out
xchg
adc
test
xchg
adc
add
or
stos
add
dec
adc
add
xchg
rcr
das
jae
mov
mov
fst
aaa
hlt
add
sub
ret
adc
fist
xor
out
jle
(bad)
adc
adc
add
adc
pop
add
add
add
add
out
test
fstp
xor
sbb
neg
in
fld
sbb
add
add
add
dec
je
pop
jmp
aaa
add
out
add
imul
mov
sti
push
xor
ss
adc
fild
adc
(bad)
or
xor
mov
scas
xor
stc
or
test
das
pop
sbb
inc
mov
add
and
pop
aaa
shl
add
add
les
mov
add
pop
cmp
test
sub
lds
and
jmp
mov
mov
adc
or
(bad)
fidiv
dec
adc
push
sbb
sbb
rcr
pop
out
pop
aaa
rol
aaa
adc
adc
adc
clc
(bad)
jo
xor
popf
push
sbb
add
mov
add
ss
cdq
push
ss
jno
mov
not
sub
adc
adc
inc
neg
lahf
jbe
out
push
xor
test
sbb
adc
adc
jge
adc
rcl
adc
rol
jmp
out
adc
add
add
and
and
sbb
popf
aaa
sar
mov
sbb
add
add
add
in
test
mov
add
sub
aaa
test
fild
sub
add
jne
mov
and
sbb
fnstcw
mov
push
frstpm(287
adc
mov
adc
add
mov
xchg
ds
das
or
add
add
or
dec
ret
jecxz
sbb
or
rol
daa
dec
cmps
iret
punpcklwd
das
test
add
add
test
adc
sahf
popa
ret
sub
push
cmp
rol
and
pop
(bad)
rcl
test
or
or
mov
adc
mov
cmp
pop
fwait
pop
mov
sbb
cmp
adc
mov
adc
and
cmp
fwait
mov
push
scas
add
and
add
or
or
or
or
xor
ds
adc
inc
inc
add
cmp
pop
push
and
ror
and
pop
or
add
sbb
jmp
sub
xor
xor
loope
jmp
or
push
out
and
mov
jle
cmp
jle
std
jne
sub
add
sbb
rol
sub
adc
sub
or
xor
sub
dec
cwde
jo
or
xor
addr16
mov
push
sub
pop
inc
fs
sub
and
or
xchg
or
or
lea
sbb
add
or
add
pop
cmp
push
sub
std
cmp
popf
mov
sub
ss
mov
sbb
or
mov
lds
add
xchg
ds
ss
lds
add
cvttps2pi
adc
mov
cmp
xchg
push
lahf
push
ss
add
adc
push
mov
xor
jmp
push
or
xchg
jmp
test
out
sbb
aad
xchg
and
daa
or
int
jl
mov
add
sahf
sahf
pop
or
mov
push
cmp
or
adc
pop
push
push
cmc
add
add
add
adc
xchg
cwde
adc
lock
je
cs
call
and
jmp
jae
jae
frstor
inc
sti
sbb
adc
push
add
jbe
add
jne
imul
or
add
jne
pop
add
pop
out
out
cmps
jnp
and
imul
pop
test
outs
add
sahf
and
mov
mov
cmp
push
add
gs
mov
pop
inc
and
dec
popa
sbb
dec
add
popa
jne
sub
jae
sbb
pop
shl
inc
ret
js
jno
push
pusha
add
sbb
dec
sub
add
xlat
in
cmps
add
add
scas
jmp
ins
pop
jo
(bad)
(bad)
bound
packsswb
jp
add
jp
clc
std
int
pop
add
xchg
add
jmp
xor
das
add
cs
pop
add
sar
and
jle
aas
aas
and
and
or
mov
leave
mov
jne
inc
add
pop
pop
mov
mov
mov
scas
mov
xlat
mov
adc
mov
or
dec
leave
mov
mov
cmp
imul
int
(bad)
lods
aam
rol
shl
andps
add
(bad)
mov
pop
leave
stc
shl
or
push
push
xor
inc
cmp
cs
dec
inc
inc
or
sub
outs
jl
and
jl
xlat
cmp
or
push
jl
loopne
xchg
into
les
je
mov
mov
retf
call
ror
add
cmps
imul
imul
imul
lock
imul
imul
cmps
imul
xchg
nop
mov
call
imul
cmps
stc
cmps
add
mov
rol
imul
imul
imul
aam
cmp
add
add
sub
jge
aaa
push
test
add
add
loopne
imul
pop
test
add
add
dec
pop
in
jmp
sub
dec
or
push
add
adc
popf
push
or
push
mov
or
pop
adc
push
shr
je
popf
test
mov
loopne
sar
aad
jnp
jo
sbb
jae
push
test
or
jbe
xor
pop
ja
js
call
add
jo
jno
jae
call
js
mov
jnp
or
or
jno
jb
call
jbe
test
cmps
js
jp
mov
cwde
lea
add
add
jae
inc
dec
jmp
push
push
inc
xor
jae
xor
mov
adc
sbb
wrmsr
add
xor
psrld
or
ss
or
xor
les
xor
sahf
(bad)
or
sahf
add
adc
popa
outs
fcomp
stos
or
mov
call
or
or
dec
add
cmp
cmp
enter
aaa
ss
and
mov
add
xor
xor
inc
jne
xlat
jne
inc
aad
int
lds
inc
inc
jo
xlat
mov
lods
inc
movs
inc
test
mov
lahf
pop
pop
push
sbb
push
push
push
sbb
push
push
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
dec
inc
push
sbb
dec
push
sbb
inc
inc
inc
pop
fs
inc
inc
inc
inc
add
mov
test
fisub
loopne
loopne
adc
push
inc
(bad)
std
ins
rcl
add
inc
dec
inc
add
retf
inc
push
push
popf
and
and
jae
sahf
push
and
sahf
sbb
push
adc
data16
jnp
cwde
adc
jbe
out
mov
push
jl
mov
jg
fmul
repz
(bad)
mov
xor
lahf
push
cmp
and
add
arpl
inc
mov
arpl
sahf
inc
inc
push
jae
sldt
push
cmp
add
ret
inc
ja
add
pop
das
or
test
dec
add
inc
cmp
je
add
es
jg
dec
inc
jb
fs
gs
ins
loop
fidiv
cwde
jmp
shl
cwde
out
mov
dec
add
pop
push
shl
inc
daa
inc
pop
cld
sysenter
pop
sti
dec
shl
add
shl
add
fdiv
les
xor
cmc
lods
hlt
xchg
repz
or
xor
je
mov
pop
lock
pop
out
inc
inc
cmps
stc
cmps
out
enter
in
mov
dec
movs
pop
jmp
nop
pop
jmp
inc
cmps
jmp
retf
out
rol
out
jne
fs
pop
xlat
pop
jecxz
mov
loop
loope
scas
or
pop
fbld
adc
fdivp
leave
dec
add
fdiv
push
inc
push
xor
rol
fidiv
scas
jmp
add
dec
pop
xlat
sysenter
pop
adc
aad
enter
xlat
jne
xchg
fadd
ror
enter
test
test
cmps
jmp
iret
(bad)
pop
into
fs
cmp
adc
in
dec
add
fmul
call
(bad)
cwde
vandnps
pop
sub
ret
shrd
add
pop
pusha
psubsw
pop
ror
pop
mov
xor
call
add
imul
imul
cmps
imul
add
call
cli
sbb
fadd
jmp
add
rcr
mov
inc
pop
adc
mov
cld
rol
push
mov
loop
bswap
mov
cmp
mov
adc
retf
(bad)
jg
mov
mov
(bad)
repz
call
nop
and
fdiv
mov
adc
cmc
cli
sbb
fnstsw
mov
retf
dec
add
mov
(bad)
retf
jecxz
push
add
(bad)
mov
les
mov
retf
cmps
(bad)
jg
mov
(bad)
mov
mov
(bad)
sbb
sti
mov
aad
test
jmp
mov
cmps
fimul
les
dec
std
mov
iret
loopne
enter
sub
adc
adc
mov
pop
popa
mov
sbb
pop
pop
stos
or
scas
leave
call
das
or
add
sub
js
out
data16
add
mov
ja
jnp
add
into
mov
addr16
mov
or
std
mov
pop
ret
sub
mov
fld
pop
in
xchg
adc
retf
mov
push
cli
out
mov
aas
cmps
iret
out
add
rcl
mov
xlat
out
mov
imul
adc
repz
push
mov
std
mov
add
sub
add
xor
pop
retf
stc
jecxz
loope
aas
sti
sub
jmp
(bad)
fidiv
sar
jnp
mov
push
sub
mov
out
les
jmp
in
aad
adc
ins
in
mov
stc
imul
int3
fsubp
pop
imul
daa
repz
add
cmp
idiv
mov
mov
jno
sti
and
clc
int
adc
into
stos
shl
fidivr
(bad)
neg
dec
cmps
jno
fld
push
xchg
dec
push
addr16
push
icebp
int3
stos
mov
and
shr
mov
lods
mov
gs
pop
dec
inc
std
aas
test
pop
das
mov
mov
xchg
das
in
daa
sbb
mov
psraw
ror
inc
inc
lds
sbb
dec
fsubr
popa
out
mov
std
lahf
cmpps
popa
or
xchg
jmp
dec
push
test
add
mov
mov
dec
mov
ret
iret
(bad)
fwait
aam
mov
les
push
fdivr
pop
pop
sar
(bad)
mov
ret
sti
mov
xlat
(bad)
mov
pop
mov
(bad)
jg
stos
enter
mov
mov
xlat
(bad)
mov
sti
pop
fsubp
addr16
mov
(bad)
mov
movq
retf
xchg
(bad)
int3
stos
mov
jmp
stos
jecxz
mov
std
mov
or
push
xor
sub
or
inc
sbb
xlat
iret
js
in
(bad)
fdivr
mov
rcr
fsubr
(bad)
cmps
getsec
nop
or
jecxz
fiadd
mov
das
pop
and
ss
movs
sbb
std
les
and
mov
out
loope
mov
(bad)
cmps
int3
fsubp
lock
mov
in
aas
clc
mov
pop
cmpxchg
mov
arpl
jnp
int
outs
pop
shl
ret
(bad)
rcr
aad
add
(bad)
gs
into
mov
dec
mov
ror
fdivrp
add
xlat
neg
jnp
adc
mov
sbb
mov
fdiv
daa
adc
dec
retf
xor
and
sti
sbb
mov
test
cmps
stos
push
sub
jne
push
imul
rol
cmp
aad
stos
jg
scas
dec
je
push
inc
push
sub
add
push
dec
inc
cmp
cld
(bad)
mov
fcmovb
mov
into
xchg
movs
mov
pop
cmp
fs
ja
push
or
jle
and
add
push
lock
outs
jmp
jbe
jb
ins
outs
ja
jo
addr16
jp
out
mov
sub
add
bound
and
outs
push
lock
and
je
mov
imul
push
imul
sub
std
add
outs
outs
jb
imul
jbe
ins
scas
pop
push
pusha
clc
xor
ss
sub
jle
jp
and
je
jb
mov
add
add
jae
mov
mov
pop
jne
sub
add
outs
dec
sub
sub
jne
imul
mov
outs
fs
loop
inc
inc
fwait
and
jae
jb
popa
(bad)
(bad)
(bad)
mov
and
jb
ins
gs
jb
and
add
rol
sbb
(bad)
add
jae
into
cmp
pop
movs
sub
jg
cmps
in
add
fs
pop
mov
popa
ins
ins
popa
and
and
outs
data16
outs
jnp
outs
mov
jne
or
pop
push
lock
jae
ins
cmps
add
popa
je
push
fsub
outs
and
pop
popa
aas
add
inc
shr
jb
adc
jo
add
addr16
inc
imul
and
pop
fsincos
arpl
arpl
daa
mov
inc
outs
je
ret
or
test
arpl
outs
js
mov
fs
mov
outs
(bad)
retf
push
fsubr
into
sti
fiadd
outs
jb
outs
outs
and
rol
or
imul
xor
add
push
add
outs
data16
cwde
imul
addr16
add
mov
push
dec
popa
and
jne
adc
mov
dec
inc
inc
and
push
and
fs
mov
jg
addr16
arpl
outs
imul
jl
add
arpl
xchg
or
adc
cmps
push
div
mov
or
dec
jae
mov
popa
arpl
mov
add
imul
inc
jb
jns
ins
outs
jb
sbb
and
pusha
dec
bound
push
inc
inc
and
inc
push
or
int3
add
call
dec
jae
popa
ins
xor
and
ins
ins
jne
xor
test
dec
imul
jae
div
sub
cld
scas
push
cli
jae
and
imul
add
faddp
enter
add
aas
test
cwde
or
mov
or
add
pop
popa
and
jo
nop
xor
fmul
sub
xchg
inc
inc
sar
shr
and
cmp
and
popf
jb
je
mov
das
dec
add
add
ss
std
cmp
gs
and
jb
push
enter
jg
inc
sub
push
and
gs
add
pop
sub
stos
dec
dec
inc
push
and
retf
xor
push
xlat
adc
in
call
fs
and
popa
inc
mov
fistp
arpl
pop
dec
dec
inc
and
jae
cmp
gs
sbb
and
jo
push
ds
ficom
adc
mov
push
arpl
jo
dec
cwde
add
fsub
and
mov
jo
xor
inc
mov
je
jo
das
bound
dec
jo
push
inc
out
pop
bound
sub
add
outs
fst
xchg
sbb
cmp
pop
sbb
and
jbe
mov
or
lahf
and
sbb
mov
inc
shl
gs
gs
and
ins
imul
daa
cmp
add
imul
mov
add
das
je
jg
inc
inc
and
dec
jb
bound
ret
mov
push
mov
inc
push
jae
data16
dec
fistp
dec
push
inc
xor
and
pusha
xchg
(bad)
fwait
call
pop
jne
ins
gs
imul
inc
jp
jo
das
cmp
scas
sub
repnz
pop
idiv
pop
mov
aaa
test
jae
adc
add
jne
fnstenv
mov
add
es
jg
mov
add
popa
fs
jo
imul
rol
arpl
add
je
xor
rol
repz
sahf
fdiv
scas
and
jg
and
popa
jno
gs
mov
dec
push
dec
dec
daa
ror
fsub
pop
add
bound
cmp
fsubr
dec
pop
inc
pop
and
inc
in
xchg
aaa
mov
inc
inc
pop
retf
fmul
mov
popa
aas
xlat
imul
stc
inc
fdiv
fwait
popa
fild
(bad)
cmps
jns
bound
dec
mov
and
retf
pop
mov
push
adc
ret
jbe
or
mov
sbb
popa
jo
cmp
mov
icebp
inc
clc
push
add
addr16
sbb
gs
sub
gs
sbb
(bad)
jp
mov
xchg
in
ins
gs
sub
jo
pop
inc
(bad)
sub
inc
pop
repnz
or
arpl
or
mov
in
nop
les
fmul
xor
adc
int
sub
(bad)
cmp
or
ja
je
popf
enter
jb
bound
popa
and
add
daa
sub
fs
je
pop
(bad)
pop
and
push
pop
addr16
and
fld
addr16
and
outs
add
pop
xor
cwde
sbb
arpl
cmp
add
dec
stos
jmp
jae
push
and
ins
imul
jns
je
jae
push
xchg
cld
(bad)
mov
adc
nop
cmp
and
mov
jle
jge
jb
dec
cs
sub
(bad)
mov
out
and
or
mov
(bad)
xchg
jno
sbb
outs
addr16
mov
mov
ja
push
vpshrdq
(bad)
pop
xor
hlt
and
popa
jo
and
xchg
out
cmp
sub
icebp
mov
gs
and
in
popf
pop
(bad)
jecxz
jae
outs
lods
cmp
fnsave
dec
and
xchg
pop
push
sbb
cmp
std
test
addr16
sub
or
inc
(bad)
(bad)
cmc
jo
jge
test
sbb
xor
test
and
dec
mov
mov
inc
aam
jmp
sar
adc
aaa
in
sti
cmp
and
(bad)
ja
add
fiadd
leave
iret
mov
xlat
repz
(bad)
rcl
fdiv
not
add
ret
adc
adc
(bad)
out
inc
enter
shl
(bad)
out
std
fidivr
daa
mov
mov
lds
mov
cld
or
rol
lock
or
and
mov
add
jb
nop
or
inc
inc
push
mul
add
jmp
push
fimul
inc
add
imul
outs
call
mov
mov
mov
repz
in
retf
cmc
shl
add
mov
adc
ret
rcr
cmp
scas
add
pop
sub
jmp
aad
aam
pop
cld
mov
and
or
mov
mov
jo
das
inc
aas
and
not
mov
add
pop
mov
jnp
frstor
repnz
mov
xor
and
(bad)
mov
leave
out
das
test
add
call
stc
repz
loopne
add
add
rol
ins
addr16
add
pop
add
adc
pop
rol
add
mov
cwde
fistp
add
add
push
inc
js
jo
inc
push
add
loopne
pop
and
add
aaa
fistp
add
shl
inc
jmp
fadd
ja
repz
xor
in
in
add
nop
ja
pop
add
int
sbb
add
add
jmp
add
push
add
fisttp
inc
pop
ficom
xlat
leave
out
mov
mov
sti
not
(bad)
(bad)
loopne
mov
mov
aas
aas
sti
int3
in
pmovmskb
leave
stos
sar
mov
pop
(bad)
fucomi
div
aas
mov
(bad)
loopne
sahf
cmp
pop
mov
aas
shl
addr16
inc
mov
aas
mov
fdivp
rcr
(bad)
or
xadd
fst
mov
aas
iret
sahf
cmp
aas
les
push
mov
(bad)
fidivr
imul
or
and
outs
addr16
idiv
and
fadd
daa
fs
enter
xchg
outs
sbb
jb
cmp
les
popa
jb
and
icebp
aas
xor
push
jo
or
loopne
fwait
outs
pop
add
sbb
adc
inc
or
inc
ins
sbb
add
dec
inc
inc
je
sbb
and
xchg
or
jno
popa
in
and
cmp
push
sbb
aam
adc
jbe
jo
push
out
push
xlat
dec
inc
je
dec
or
ins
ins
inc
adc
xor
inc
push
add
pop
and
jg
sub
jae
(bad)
fstp
enter
pop
data16
and
and
jb
je
adc
je
hlt
(bad)
push
ins
add
jb
arpl
add
enter
imul
inc
ret
and
or
scas
jb
sar
dec
xchg
bound
inc
push
inc
dec
dec
adc
jbe
push
jl
outs
je
sub
ret
sbb
add
jo
xor
pop
ins
or
sbb
fldcw
add
push
je
dec
push
xor
aaa
mov
fst
cmp
xchg
daa
addr16
js
inc
adc
sbb
pop
or
pop
in
mov
xchg
sbb
adc
and
pop
imul
outs
jb
or
fmul
sub
out
and
and
cwde
pop
sub
enter
sbb
and
loope
retf
mov
and
and
push
out
jp
or
cmp
jg
jne
arpl
ins
gs
push
dec
push
xor
jno
imul
in
inc
cmps
push
pop
in
jmp
push
mov
out
ja
popa
ins
inc
xor
lods
and
cmps
cmp
push
pop
arpl
and
sub
ret
mov
cdq
sar
daa
popa
add
outs
xchg
sub
push
adc
mov
gs
fldcw
cmp
sub
enter
loopne
push
jne
je
add
jo
adc
lahf
ins
push
cmp
outs
outs
sub
inc
imul
mov
or
or
or
adc
sbb
js
jo
dec
jb
shl
repz
inc
sbb
add
cdq
pusha
mov
mov
popa
fs
and
arpl
push
aam
call
mov
nop
int3
popa
fiadd
data16
inc
das
sar
cwde
cmp
jo
gs
jae
push
xor
aaa
cld
scas
sub
jo
mov
outs
ja
pop
dec
push
add
jbe
adc
jo
stos
call
mov
xchg
(bad)
bound
or
and
cmp
bound
adc
jae
xor
mov
fst
(bad)
movs
and
js
fs
mov
adc
mov
mov
out
sub
lock
fistp
inc
cwde
xchg
cld
test
imul
outs
xcrypt-cfb
cmps
and
sub
inc
shl
sub
jg
ja
sub
loope
xchg
cmp
or
test
mov
shl
loope
bound
sub
xor
xlat
or
fwait
inc
gs
out
fs
pusha
add
adc
cmp
ror
adc
pop
(bad)
xlat
xor
inc
imul
test
ror
outs
data16
loope
cmp
dec
ins
(bad)
and
les
xor
xor
outs
pushf
dec
dec
pop
test
rcr
add
jo
mov
pop
jmp
mov
scas
bound
popa
sbb
xor
je
pop
(bad)
cmp
popf
xor
xor
jo
xor
xor
lahf
and
sub
outs
(bad)
jp
cs
outs
jb
and
xor
inc
ret
adc
jae
popa
mov
add
test
or
pop
pushf
outs
mov
and
and
adc
dec
xor
and
test
stc
add
push
into
nop
out
inc
inc
popa
loop
and
sbb
ja
js
and
data16
shl
jmp
cwde
or
sbb
daa
inc
nop
add
xor
ret
and
leave
add
xor
xor
mov
add
das
push
nop
dec
adc
lds
fs
jo
mov
sbb
add
jae
add
lock
fwait
cmp
cwde
adc
cli
push
or
popa
daa
push
pop
cmc
xchg
push
sbb
mov
ins
sbb
and
jae
dec
fs
and
enter
pop
dec
jo
jb
adc
push
fsub
mov
push
xor
add
pop
push
sbb
pushf
sbb
sbb
pop
ror
or
cdq
dec
sahf
jne
jmp
jo
clc
popaw
imul
jae
rcl
cmp
dec
(bad)
popa
xor
and
cmp
daa
mov
ss
pusha
das
xrelease
dec
retf
cld
jmp
jecxz
sar
and
aam
sub
and
in
sub
imul
sub
and
sub
mov
add
test
xor
ss
add
pop
inc
test
dec
push
mov
jmp
mov
mov
into
push
or
ss
dec
sbb
jnp
fld
and
push
aaa
retf
and
sub
ins
cwde
sub
mov
movs
and
dec
dec
pop
test
adc
and
int
xor
scas
jae
lods
add
leave
xchg
fwait
xchg
fidiv
adc
and
push
mov
adc
pop
mov
or
jmp
in
jmp
sti
int3
clc
xlat
stos
mov
shl
pop
sar
sub
dec
xor
cld
push
inc
inc
dec
inc
dec
jg
je
rol
popa
sar
std
pcmpgtd
test
je
outs
aam
clc
sbb
bound
push
jae
lds
or
dec
mov
add
mov
dec
add
out
dec
daa
lods
pop
pushf
add
hlt
into
dec
add
aad
and
and
add
push
ret
pop
retf
adc
pop
and
ins
or
xchg
sbb
shl
lods
sbb
popa
push
fwait
pop
ins
imul
sbb
push
cs
cs
pusha
mov
mov
pop
jge
mov
pop
push
push
pop
cld
push
out
pop
xlat
pop
pop
sub
rdtsc
pop
pop
neg
sbb
rcl
pop
out
lahf
or
pop
pusha
sysret
and
add
das
femms
sbb
jp
jo
ins
pop
lock
jmp
addr16
pop
pop
sub
pop
xlat
jne
pop
nop
pop
push
pop
cmp
pop
js
xlat
popf
rol
pop
rol
push
pop
idiv
sysret
sub
pop
ja
mov
dec
add
pop
mov
fisub
dec
pop
pop
iret
push
cmc
sbb
jg
pop
scas
mov
sub
push
pop
adc
xor
jg
pop
out
jae
out
dec
daa
pop
dec
pop
xchg
jp
fwait
pop
xchg
jae
jae
addr16
pop
test
inc
pop
mov
cmove
neg
jg
pop
jg
aaa
out
adc
or
pop
aas
push
iret
jne
cwde
pop
push
fist
pop
jae
test
cwde
pop
pop
pop
sbb
lahf
retf
xlat
inc
loop
js
sub
pop
mov
pop
cmovae
mov
jnp
cmovl
jg
pop
jg
inc
push
mov
pop
pop
push
pop
inc
add
and
jae
rcl
daa
xor
sbb
iret
jne
les
jmp
pop
mov
icebp
pop
loope
movs
pop
jg
pop
fsubr
pop
push
repz
aas
cwde
jnp
add
jg
dec
daa
sbb
xchg
scas
call
inc
pop
pop
mov
(bad)
loope
pop
add
aam
call
cmc
sbb
jmp
addr16
test
ds
sub
jg
pop
test
pop
cmovp
neg
pop
jg
aaa
push
(bad)
popf
imul
push
shl
add
xor
xor
emms
pop
ss
jp
jo
sub
idiv
mov
out
or
xchg
sub
or
ss
jg
call
cmc
fsub
arpl
adc
dec
add
inc
adc
xor
out
add
inc
mov
nop
mov
pop
mov
cmovle
pop
cld
pop
cmp
(bad)
dec
hlt
dec
adc
call
pop
fsubp
mov
xor
rcl
jmp
ret
pop
ds
in
cmp
mov
out
das
pop
pop
or
jnp
aas
loop
aas
pop
loopne
idiv
pop
pop
xchg
pop
mov
call
inc
daa
pop
sar
sahf
sti
fisubr
and
mov
cmovp
add
dec
pop
adc
sbb
lahf
push
pop
pop
jae
add
sub
add
sar
sbb
scas
jnp
aas
retf
push
mov
and
and
popa
mov
jae
jne
loopne
jmp
inc
adc
aas
fsub
sbb
(bad)
jge
hlt
pop
adc
xchg
or
and
mov
fmul
lea
dec
pop
ins
dec
iret
jne
cli
pop
jg
addr16
shl
xor
(bad)
cmp
(bad)
dec
out
pop
jmp
inc
xchg
movs
jmp
xlat
pop
cmps
pop
das
pop
dec
hlt
dec
pop
jmp
jg
ja
xchg
dec
scas
iret
mov
xchg
jmp
pop
mov
aas
nop
cmp
pop
inc
cs
pop
scas
pop
sti
fsub
shl
lahf
mov
dec
pop
adc
jg
xor
pop
das
dec
(bad)
out
jge
push
aas
aaa
daa
aas
sbb
xor
(bad)
jmp
and
pusha
xchg
dec
fild
mov
xchg
sahf
sbb
dec
call
aas
outs
ja
iret
jne
sahf
ud0
(bad)
pop
idiv
pop
aas
pop
pop
fiadd
(bad)
out
jge
mov
outs
nop
pop
pop
push
cmp
mov
(bad)
cmovg
nop
pop
test
push
(bad)
or
aas
jmp
iret
inc
cmp
dec
push
cmp
jmp
sbb
mov
call
js
out
inc
inc
nop
push
out
rcr
jg
out
cmp
cmp
push
aas
push
dec
or
jg
jmp
hlt
fmul
aas
jg
inc
mov
mov
neg
xchg
(bad)
jmp
cmp
call
ja
xor
fstp
push
icebp
push
scas
addr16
mov
cmp
(bad)
stc
pop
jg
nop
sbb
lahf
call
shl
inc
cmp
pop
and
cmp
(bad)
cmp
jg
and
aas
sbb
jmp
jmp
inc
and
dec
push
ja
xor
push
pop
or
inc
nop
sahf
cmp
aas
call
das
adc
adc
(bad)
pushf
and
cwde
sahf
jg
lahf
push
movs
out
popf
pop
(bad)
jmp
cmp
pop
(bad)
(bad)
cmp
pop
jg
push
lea
or
(bad)
inc
adc
sbb
pop
fisub
inc
dec
lea
(bad)
pop
mov
lock
pop
call
mov
add
jg
inc
xor
dec
bound
xchg
call
inc
jp
repz
jg
jmp
cmp
jg
cmp
and
xchg
sbb
xor
je
inc
adc
fwait
pop
jmp
mov
(bad)
(bad)
fistp
sbb
(bad)
(bad)
mov
pop
jg
jmp
jp
sti
pop
jg
addr16
adc
xor
sbb
fsub
jmp
sahf
cmp
push
fcom
inc
mov
(bad)
call
jmp
neg
mov
pop
lahf
inc
xor
jg
mov
iret
pop
sbb
(bad)
jmp
pop
jg
dec
jecxz
out
pop
jg
jmp
iret
sbb
hlt
or
dec
(bad)
mov
xchg
call
jg
(bad)
jnp
scas
cmp
pop
push
cld
lahf
push
pop
or
dec
scas
push
pop
dec
pop
pop
add
push
or
mov
pop
add
pop
add
not
pop
pop
mov
aas
fistp
out
sahf
jb
call
pop
add
add
or
neg
pop
fst
pop
rol
xor
add
fsubr
jg
add
jmp
bound
addr16
mov
jg
mov
jae
jg
jg
cmp
mov
(bad)
jg
jg
adc
pop
mov
lahf
ins
gs
popa
mov
and
popa
ins
imul
aas
and
add
bound
bound
daa
dec
bound
and
jbe
sub
fmul
inc
and
adc
sub
inc
les
add
sub
pop
and
cmp
out
sub
push
sbb
js
jp
push
pop
adc
and
call
cmps
cmp
adc
aas
inc
fcomp
add
(bad)
out
push
das
es
add
dec
add
sbb
sbb
add
vmread
pop
jnp
adc
pop
adc
ds
add
adc
out
inc
sbb
test
add
sub
rol
jnp
add
rcl
test
mov
out
sub
add
aas
mov
add
enter
or
sbb
div
inc
mov
adc
mov
int3
pop
pushf
add
lods
jmp
jnp
inc
and
mov
mov
adc
adc
cmp
mov
lea
popf
pop
adc
cmp
push
out
cmps
and
(bad)
(bad)
jg
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
(bad)
(bad)
(bad)
(bad)
ds
push
push
push
cmp
adc
sub
sbb
or
sbb
or
add
add
(bad)
(bad)
(bad)
dec
or
movups
adc
or
add
sbb
add
or
sbb
clts
cld
(bad)
(bad)
call
adc
sub
push
and
ss
das
sub
es
and
pop
add
xlat
popa
js
es
mov
add
add
or
push
into
mov
and
lock
mov
lldt
add
retf
jne
jne
add
inc
cmp
sbb
fisttp
or
add
out
jnp
or
pop
outs
jae
lds
pop
jl
imul
aaa
push
push
push
pop
outs
add
pushf
sbb
push
add
into
cmp
imul
and
out
cs
dec
inc
or
jp
adc
and
into
sbb
add
and
adc
rcr
pop
and
cwde
xor
adc
call
and
pop
jae
add
and
jae
mov
dec
add
sbb
out
icebp
sub
jae
adc
mov
xorps
mov
sub
adc
into
mov
push
mov
int
xchg
outs
das
or
adc
pop
shl
jp
js
or
pop
push
out
and
inc
add
or
sbb
pop
mov
mov
sub
or
(bad)
adc
add
or
gs
push
lds
sbb
out
lea
dec
cmp
inc
jae
iret
mov
ds
sub
out
mov
adc
dec
dec
neg
mov
and
daa
cmps
sbb
cmp
or
pushf
jnp
ja
outs
add
add
out
fwait
cmp
or
ret
js
sbb
add
adc
push
sbb
sbb
loopne
mov
cmp
adc
add
sbb
pop
inc
nop
outs
ss
push
add
test
into
jne
xor
out
xor
pop
pop
lds
xor
pop
iret
outs
dec
and
adc
cmp
inc
adc
rol
add
add
inc
iret
fs
scas
iret
pop
adc
hlt
inc
adc
and
js
and
jne
cmp
add
add
pop
jne
(bad)
sbb
inc
sbb
int3
lds
pop
imul
adc
jnp
out
and
pop
sub
sbb
fdivr
and
addr16
sub
out
addr16
pop
mov
int
daa
adc
call
cmp
sbb
sbb
xchg
adc
add
popf
sti
xor
or
and
xor
mov
sbb
iret
cmp
or
pop
sbb
cmovo
fwait
or
push
fnstcw
add
and
cmp
pushf
jae
ja
pop
sub
ja
lds
sub
aaa
mov
aaa
(bad)
aaa
dec
fwait
push
out
in
cmp
xchg
xor
jae
pop
or
mov
(bad)
sbb
pop
daa
cmps
fmul
add
jo
dec
xchg
xor
addr16
or
and
sbb
lods
mov
pop
pop
pop
scas
jae
cmp
sub
pop
mov
push
add
cmp
pop
sub
mov
(bad)
push
pop
outs
addr16
aaa
daa
aaa
or
jae
cmp
add
dec
arpl
sbb
pushf
aaa
inc
pop
pop
stos
ss
fiadd
push
dec
stos
adc
pop
dec
aaa
add
lds
pop
data16
ja
or
push
dec
xchg
aas
or
add
adc
push
ja
adc
jb
add
out
out
sbb
or
daa
push
arpl
mov
xor
jae
add
aaa
inc
add
sub
dec
or
loopne
pop
add
cmp
daa
or
adc
fdivr
adc
outs
xor
mov
cmps
xor
out
cmp
pop
xor
sbb
jae
or
out
mov
dec
add
and
sbb
test
dec
add
sbb
mov
push
add
adc
add
inc
push
xchg
retf
shr
add
pop
push
outs
dec
add
pop
and
adc
pop
pop
and
cmps
add
add
push
sbb
add
and
mov
lods
and
push
xor
pop
xlat
jge
inc
pop
add
add
add
mov
pop
retf
in
mov
add
mov
push
icebp
cs
mov
retf
pop
test
pop
jo
jns
out
and
ret
fcomi
fild
mov
jmp
pop
xlat
fwait
adc
addr16
and
push
call
jge
daa
push
inc
push
pop
popa
add
stos
mov
sub
pop
aas
and
push
pop
xor
fstp
popf
add
ja
aad
neg
ja
pop
push
outs
xchg
jg
jg
das
fs
jg
mov
div
jg
cmp
inc
inc
adc
pop
sbb
sbb
pop
cmc
inc
inc
or
sbb
test
dec
fdiv
sbb
data16
and
sbb
push
jae
push
sbb
leave
inc
test
aaa
adc
xchg
aam
mov
adc
xchg
daa
and
cld
and
test
xchg
daa
inc
ret
mov
ret
xchg
push
outs
sbb
add
ins
jg
mov
pop
sub
pop
dec
push
dec
push
add
or
pop
push
gs
sbb
inc
retf
imul
hlt
dec
dec
outs
push
jb
arpl
idiv
mov
inc
pop
pop
inc
push
dec
xor
push
inc
push
inc
and
call
ret
pop
mov
adc
add
pop
or
add
sbb
into
add
iret
ins
fcos
ins
xchg
dec
inc
inc
dec
dec
dec
push
push
fwait
daa
push
mov
inc
push
sbb
sub
push
pop
adc
xchg
outs
jge
mov
test
or
or
push
dec
push
inc
inc
xor
mov
aas
dec
dec
dec
inc
push
dec
inc
mov
std
add
mov
addr16
inc
push
inc
pop
adc
std
xchg
dec
add
aam
dec
(bad)
sbb
hlt
xchg
je
inc
add
add
add
add
pop
sub
rcl
cmp
bound
xchg
push
stos
pop
ret
ss
out
dec
dec
lds
inc
aas
inc
ds
pop
pop
pop
in
sub
jo
push
inc
push
jb
pop
adc
outs
addr16
or
aaa
xor
pop
int3
inc
add
aas
xchg
test
xchg
out
pop
inc
push
add
jbe
out
pop
(bad)
pop
adc
and
jmp
adc
pop
aaa
cmp
aaa
popa
(bad)
sub
scas
or
adc
inc
ins
jo
sub
(bad)
in
add
nop
lods
(bad)
sbb
pop
dec
dec
add
dec
aaa
adc
jecxz
sub
test
mov
push
outs
mov
pop
(bad)
iret
push
dec
dec
push
and
sbb
mov
dec
aas
inc
dec
popa
outs
fs
gs
test
inc
adc
sbb
inc
add
jne
add
jae
inc
nop
out
add
add
add
adc
aas
test
inc
add
add
in
dec
inc
add
pop
inc
add
pop
inc
divps
cmps
pop
and
pop
test
aas
pop
add
sbb
mov
add
test
fiadd
cmc
sub
sub
or
or
jp
pop
out
adc
pop
fdivr
pop
add
add
cmc
push
cs
aaa
add
shr
popa
mov
retf
scas
sti
retf
mov
pop
or
addr16
pop
adc
cmp
test
pop
mov
adc
lahf
add
push
icebp
pop
imul
jae
iret
xchg
cmovs
cmp
movntps
xor
adc
pop
jecxz
adc
pop
vmaxsd
iret
adc
xchg
or
loope
cmp
rep
shl
(bad)
das
xor
pop
pop
rcr
jae
iret
add
pop
jecxz
mov
iret
adc
or
adc
inc
cmp
lahf
loope
inc
iret
dec
pop
rcr
sbb
add
fist
mov
push
test
movs
dec
add
shr
call
sbb
add
sub
dec
add
shl
pusha
pop
xor
shl
dec
cmp
sub
xor
rcr
adc
or
fbstp
xchg
dec
add
hlt
shl
fcom
call
pop
mov
call
jl
addr16
add
push
out
clc
add
call
cmps
aas
inc
popf
add
mov
outs
in
or
add
add
das
xor
mov
add
or
inc
pop
mov
jmp
and
iret
mov
in
pop
out
shr
mov
outs
and
mov
pop
fidiv
add
push
push
sub
inc
shr
jg
rcr
fsubp
stc
add
xor
dec
rcl
fucomip
mov
add
or
add
lea
mov
and
add
(bad)
nop
mov
out
xchg
pop
sbb
pop
mov
or
daa
mov
out
mov
int3
arpl
push
aas
fsubrp
and
mov
fmul
pop
sub
call
les
daa
cwde
pop
add
mov
inc
pop
add
pop
test
cdq
dec
out
mov
add
add
add
ds
pop
mov
pop
rol
push
and
sub
pop
add
out
mov
loopne
inc
call
inc
add
add
jecxz
add
xlat
mov
or
(bad)
jg
(bad)
dec
or
sbb
xchg
std
aas
adc
aas
add
imul
imul
add
inc
pop
inc
add
push
add
push
mov
pop
jmp
add
adc
and
(bad)
lock
or
or
add
or
out
fadd
add
dec
jmp
add
imul
out
stc
cld
pushf
dec
add
pop
xchg
add
pop
xchg
jnp
(bad)
in
pop
fadd
cmp
pop
jmp
pop
pop
int3
pop
jbe
pop
idiv
les
addr16
push
pop
push
loopne
jnp
pop
outs
lods
mov
pop
test
jae
pop
push
pop
xlat
jge
cwde
pop
adc
mov
pop
pop
in
fwait
add
js
das
mul
pop
lahf
jo
sti
push
pop
(bad)
add
add
cmps
enter
pop
or
jne
push
pop
dec
add
add
adc
cmp
out
jg
add
xor
push
add
bound
add
xor
sbb
lds
and
mov
push
pop
sti
push
data16
sbb
out
sbb
pop
fisttp
lock
jp
pusha
cmp
(bad)
(bad)
jg
ins
inc
dec
shl
in
lock
xor
xor
add
add
and
dec
shl
mov
mov
shl
push
outs
shl
push
push
jno
shl
(bad)
not
xor
xor
adc
cmp
shl
mov
xor
repnz
add
shl
adc
ret
add
add
xor
cmp
add
int3
int
or
and
mov
pop
push
mov
mov
push
inc
adc
ret
xchg
sub
inc
add
xor
push
dec
lds
jns
mov
bswap
out
sub
add
or
retf
es
test
add
add
rol
add
add
or
leave
add
jmp
pop
sbb
dec
cmp
add
ss
add
sub
add
add
jnp
add
stos
sub
daa
and
call
mov
add
add
sahf
sub
inc
add
pusha
mov
jmp
mov
push
inc
imul
in
mov
test
jo
push
fwait
cmps
imul
call
pushf
js
shl
sub
push
add
sbb
xlat
shl
cld
xchg
call
jmp
movs
add
cdq
pop
pop
and
popa
and
pop
or
mov
xor
adc
inc
fs
push
nop
test
jmp
test
sub
sub
iret
push
icebp
cmps
ins
and
sub
inc
sbb
sub
xor
lock
(bad)
jmp
rcl
jns
add
mov
mov
add
add
mov
sahf
jnp
pop
add
popa
sub
add
cld
(bad)
jmp
sbb
pop
and
add
inc
loope
dec
dec
jae
arpl
xchg
outs
aaa
in
inc
or
pop
mov
mov
or
enter
or
dec
sahf
in
pushf
or
ret
mov
adc
stc
and
adc
sbb
leave
sbb
(bad)
dec
mov
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
rcr
and
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
(bad)
(bad)
(bad)
(bad)
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
push
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
(bad)
(bad)
(bad)
(bad)
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
(bad)
(bad)
(bad)
dec
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
(bad)
(bad)
dec
pop
cmps
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
outs
dec
leave
fwait
xchg
and
and
std
int
int
add
aas
jno
or
mov
pop
fs
(bad)
(bad)
(bad)
dec
xchg
outs
adc
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
aas
(bad)
(bad)
(bad)
inc
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
(bad)
(bad)
dec
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
(bad)
call
out
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
(bad)
(bad)
(bad)
call
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
inc
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
(bad)
(bad)
push
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
(bad)
(bad)
(bad)
call
adc
xor
push
scas
into
imul
faddp
jge
call
mov
(bad)
(bad)
call
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
out
dec
ret
add
cmps
xor
add
xchg
add
int
inc
ja
xchg
dec
add
dec
lea
cwde
dec
add
dec
xchg
int
cld
add
jae
fwait
dec
add
dec
je
popf
dec
add
dec
(bad)
int
jne
lahf
push
add
push
xchg
add
jbe
mov
cld
int
push
xchg
add
xchg
add
add
add
add
icebp
cmps
loop
xor
jmp
out
add
add
fwait
aaa
adc
add
jnp
add
std
add
add
jge
add
jle
add
scas
mov
jno
sub
cmp
call
push
or
add
add
sar
add
adc
add
ja
push
fist
gs
out
mov
jb
push
add
add
adc
sbb
jns
pop
mov
push
aam
push
stos
push
imul
push
loop
outs
add
add
jo
push
add
add
sbb
jnp
je
(bad)
add
pop
add
sbb
std
mov
popa
add
jmp
pop
stos
push
jae
push
add
add
pop
add
data16
mov
add
and
std
pop
adc
add
push
dec
sar
fisttp
imul
add
add
add
cmp
add
sub
mov
mov
sub
cmp
mov
leave
xchg
addr16
add
push
rol
add
pop
add
add
sub
add
mov
(bad)
push
sbb
jbe
push
add
add
das
bound
inc
add
add
xor
sbb
add
ins
add
add
cli
stos
call
xor
add
xor
add
push
pop
cs
push
ins
cmp
pushf
mov
add
ja
je
cmp
push
add
ret
ja
je
push
add
bound
bound
ins
out
fnsave
jl
add
ins
push
pop
add
mov
add
(bad)
mov
data16
pop
add
call
inc
aaa
add
pushf
dec
cmp
adc
adc
add
pushf
add
mov
xor
add
cmp
dec
add
pop
add
dec
xor
fs
xor
pop
or
xor
add
popa
out
mov
add
xchg
pop
add
test
pop
push
icebp
inc
loopne
loopne
loopne
loopne
stos
pusha
add
inc
cmp
push
or
push
add
pop
add
dec
add
inc
add
add
add
xchg
jne
pop
dec
sbb
and
add
adc
inc
mov
loope
add
(bad)
(bad)
(bad)
call
je
popa
jae
inc
jb
outs
jb
add
je
imul
dec
outs
outs
jb
popa
inc
div
outs
pop
push
gs
or
push
add
dec
gs
jg
(bad)
push
imul
imul
jo
push
jns
je
ins
(bad)
fdivr
ins
push
outs
ja
outs
fs
push
je
jb
jne
mov
(bad)
jge
inc
adc
dec
dec
jp
push
adc
adc
jb
arpl
jae
cmps
mov
dec
outs
fs
ins
outs
bound
inc
ins
popa
addr16
inc
jne
sti
fcos
jb
outs
je
push
inc
imul
push
pop
push
popa
ins
jne
dec
outs
arpl
push
gs
ins
ins
outs
arpl
add
int3
fld
inc
jb
and
out
dec
popa
outs
fs
or
mov
jae
jb
ins
jo
mov
cmp
mov
dec
popa
ins
adc
psubq
cbw
inc
add
inc
gs
gs
adc
into
or
imul
outs
(bad)
std
add
push
outs
stos
imul
or
sbb
std
inc
ins
jne
push
cbw
add
inc
jne
ins
imul
mov
mov
sub
push
outs
inc
aaa
sbb
adc
ss
mov
gs
gs
arpl
ins
add
test
rcl
outs
mov
jae
adc
jb
imul
xor
outs
xor
or
outs
imul
add
inc
mov
outs
ins
push
xor
popa
jo
pop
test
push
aas
xor
inc
imul
(bad)
frstor
push
push
imul
outs
dec
jne
je
inc
jns
mov
xor
or
es
pop
mov
adc
outs
ja
inc
imul
arpl
jns
test
adc
lock
sbb
jo
outs
jb
push
gs
ins
leave
outs
cmp
jae
and
add
inc
jb
je
ins
push
pop
cmp
cs
dec
gs
jbe
adc
mov
je
imul
and
jg
xor
aam
push
popa
imul
in
jo
gs
bound
add
loopne
pop
inc
jbe
jno
ret
ret
(bad)
mov
mov
outs
popa
fs
add
in
dec
outs
pop
imul
imul
pop
dec
pop
or
leave
mov
stos
fwait
aas
sti
cwde
xor
inc
shl
int
in
outs
or
ins
mov
sbb
lock
or
call
push
out
lock
shl
jmp
xchg
popa
outs
addr16
scas
and
mov
movs
xchg
das
cwde
dec
test
out
(bad)
push
jg
movs
pop
int3
fistp
inc
jne
ins
push
popa
je
call
test
aas
dec
imul
popa
and
pop
mov
or
sub
inc
jo
imul
jb
or
imul
arpl
int3
pop
or
inc
cwde
or
gs
jbe
xor
into
sbb
int
xor
test
test
mov
pop
cmovae
xor
adc
and
fdiv
bound
gs
inc
std
jo
or
outs
ins
clc
jo
sbb
push
sub
cmp
data16
jge
pusha
jbe
push
sbb
mov
jbe
fucom
push
ds
outs
ins
ins
pop
dec
imul
cdq
(bad)
imul
iret
out
cmp
inc
icebp
push
adc
sbb
cmp
and
cmp
xor
stos
add
retf
add
jb
outs
pop
fcomp
sbb
fmul
bound
loopne
and
fsubr
push
je
adc
jo
(bad)
sti
pop
ins
pop
push
popa
jb
popa
bound
test
call
outs
pop
or
add
dec
cld
add
push
imul
pusha
imul
jo
pusha
cs
xchg
mov
mov
dec
jae
popa
fs
je
or
jmp
enter
scas
mov
jnp
shl
gs
in
jne
mov
push
push
or
bound
or
in
pop
mov
(bad)
loopne
pop
xchg
add
push
gs
dec
gs
test
dec
push
ss
loopne
in
sqrtps
jb
adc
fwait
ss
sldt
call
sbb
adc
dec
imul
or
push
mov
je
push
fisttp
jb
repz
rol
push
push
mov
sahf
or
mov
and
clc
ret
ja
add
arpl
inc
js
push
cmps
dec
jne
or
mov
imul
add
je
push
push
imul
jo
jb
cmp
inc
js
push
pop
call
inc
ins
imul
outs
outs
je
outs
fs
pop
cs
mov
das
push
xlat
jp
das
out
das
outs
fs
fld
push
sbb
outs
adc
push
daa
inc
imul
fistp
je
xor
imul
push
add
inc
repz
cdq
scas
inc
pop
dec
test
sbb
inc
push
fdiv
arpl
enter
cmp
call
inc
gs
arpl
mov
sahf
gs
gs
push
jb
sub
jl
in
jo
or
loopne
out
xor
add
jbe
in
cmp
lahf
sub
jne
mov
loope
xor
inc
push
hlt
gs
jecxz
cmp
outs
ja
cs
cmpxchg
ficom
dec
jb
pop
movs
push
je
arpl
cs
(bad)
fst
fs
jb
pop
pop
sub
out
imul
mov
bound
cmp
aad
push
gs
or
div
pop
xchg
es
ins
or
jnp
and
dec
call
jns
ins
cmp
dec
inc
test
adc
push
xor
cmp
adc
imul
pop
push
push
mov
je
mov
inc
mov
arpl
adc
rcr
leave
adc
push
in
std
(bad)
adc
push
imul
inc
pop
dec
fdiv
sub
mov
xchg
adc
adc
data16
pop
sbb
adc
adc
cbw
sbb
or
or
xor
jl
inc
dec
pop
push
mov
movs
push
popa
sahf
mov
cmps
push
je
dec
test
xor
inc
sbb
adc
jb
bound
fsubr
push
inc
pusha
fimul
aaa
test
cli
ss
cmc
xchg
test
pop
jge
ins
xor
xchg
int3
sub
ret
popf
cmp
mov
lods
xchg
pop
pop
mov
outs
outs
dec
add
call
dec
push
dec
inc
inc
jb
ins
sbb
jg
add
gs
outs
imul
mov
add
mov
(bad)
mov
outs
mov
push
dec
lods
push
jo
arpl
dec
jne
mov
jb
movs
push
mov
inc
scas
ds
pop
dec
outs
je
push
data16
arpl
add
inc
mov
dec
jecxz
cs
mov
gs
outs
jne
addr16
jae
imul
js
outs
arpl
jne
arpl
mov
mov
inc
arpl
jb
sbb
div
inc
je
minps
jae
jne
outs
push
push
mov
loope
push
outs
pop
mov
ins
sbb
gs
hlt
popf
jnp
xchg
mov
inc
ins
popa
jae
popf
test
dec
jae
outs
outs
ins
gs
fsubr
push
jne
shl
fstp
outs
mov
jo
fs
xor
jae
aas
or
pop
push
jb
outs
jae
and
jnp
jbe
and
jae
outs
int3
pop
aas
sbb
push
popa
jb
sbb
loop
ins
gs
loope
or
aas
inc
outs
jne
inc
imul
je
addr16
or
xchg
in
push
outs
std
adc
mov
dec
je
ins
push
jb
arpl
push
jne
ud2
inc
ins
addr16
je
ins
dec
inc
retf
add
mov
xor
xor
lahf
add
jo
outs
fs
push
outs
jo
shl
jne
adc
xor
int
jns
xor
push
gs
pop
dec
popa
and
sub
push
lods
or
pop
adc
je
jb
cs
dec
dec
or
or
cs
or
popa
adc
pusha
lss
je
popa
fadd
xor
mov
add
xor
or
jns
sub
sub
inc
add
call
sub
or
jecxz
loopne
dec
into
in
fisub
dec
ret
aad
sbb
and
nop
xor
outs
jb
or
xor
cdq
popa
push
sbb
inc
mov
je
adc
push
dec
jae
push
mov
mov
inc
push
fwait
cmp
addr16
pushf
push
or
sbb
jne
arpl
push
jo
fcomp
mov
pushf
mov
(bad)
dec
outs
jbe
mov
popf
push
push
mov
jmp
fcom
call
ret
sbb
mov
or
nop
pushf
imul
cs
dec
dec
add
sbb
out
add
sbb
test
loopne
sbb
loopne
fsubp
das
scas
jo
outs
popa
jb
jl
addr16
or
push
adc
or
and
jae
sub
data16
dec
outs
ret
loope
cmc
jo
je
fistp
jmp
aam
popf
rol
loopne
dec
mov
xor
sbb
ins
ret
ins
pop
adc
out
outs
mov
(bad)
out
and
add
test
mov
xlat
add
push
inc
fs
pushf
inc
mov
es
inc
xchg
jb
ins
ror
sub
pop
or
stos
imul
add
and
test
pop
inc
xchg
enter
int
outs
xor
mov
adc
ror
(bad)
push
push
outs
rol
pop
ins
push
adc
jo
cmp
cwde
mov
push
cmp
dec
outs
addr16
adc
lods
pop
out
and
or
sar
or
bound
inc
mov
xchg
cmp
and
or
cmp
inc
jb
addr16
in
sbb
loopne
ins
aaa
pop
into
adc
data16
(bad)
push
jl
jo
add
popa
arpl
or
loope
xor
add
pop
add
and
ins
sti
add
push
jb
mov
inc
iret
sbb
arpl
loopne
std
push
outs
push
jae
or
lods
or
cwde
push
sub
mov
mov
cmp
repz
add
out
xchg
or
out
push
into
lds
and
ror
mov
inc
fs
jae
loop
xor
lahf
inc
pusha
out
loope
sbb
and
fxch
add
dec
jae
sbb
pop
xchg
stos
and
movs
das
retf
in
loop
gs
outs
jne
pop
jae
adc
or
jne
fnstenv
or
inc
jmp
imul
outs
mov
jecxz
inc
aas
mov
fcomp
jnp
out
(bad)
out
ins
imul
add
push
or
es
dec
gs
mov
sbb
gs
sub
cmp
inc
xlat
lods
add
and
or
jbe
ret
dec
mov
mov
cdq
into
cmp
das
cwde
fwait
setne
sbb
dec
adc
xlat
sub
(bad)
sub
ror
in
add
rol
fild
js
push
jnp
(bad)
jne
rcl
jno
out
pop
int3
pusha
retf
cmc
and
add
repz
add
inc
jmp
mov
dec
call
or
inc
(bad)
fcos
add
dec
add
out
add
adc
add
add
add
add
or
ja
cmp
add
push
add
xor
adc
inc
add
cmp
mov
sbb
inc
pop
int3
jne
or
or
pop
(bad)
retf
pop
or
add
or
add
mov
or
add
add
ret
cmps
aam
dec
cs
js
in
jae
je
repnz
lahf
loopne
adc
push
add
add
pusha
cs
popa
add
(bad)
aaa
aaa
sub
into
movs
push
add
and
mov
inc
cs
xor
add
or
pop
add
shr
jae
jae
out
mov
or
add
sar
sub
or
add
add
or
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
