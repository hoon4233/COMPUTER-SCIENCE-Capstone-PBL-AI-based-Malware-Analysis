pop
add
add
add
add
add
push
add
push
add
push
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
push
add
add
push
add
add
add
add
add
add
add
pop
add
push
add
add
add
add
add
add
add
pop
push
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
push
add
add
pop
pop
add
add
add
add
add
push
add
pop
add
add
add
add
add
pop
push
add
push
add
add
push
pop
add
push
add
test
dec
mov
adc
dec
and
cmp
test
cli
sahf
xchg
and
sar
add
adc
js
sub
or
loope
retf
jp
jo
fist
cmp
scas
adc
(bad)
pop
cmp
jae
adc
jns
test
dec
fcmove
(bad)
pushf
fadd
dec
jae
ds
add
shl
(bad)
jmp
call
in
adc
jle
ins
repnz
into
aam
xor
stos
mov
dec
or
dec
call
jbe
mov
adc
mov
retf
jmp
call
aad
aaa
shl
stc
pop
test
inc
dec
sbb
jnp
pop
call
xor
inc
jbe
data16
jle
cmp
retf
aam
(bad)
dec
xor
in
dec
mov
mov
and
pop
jp
cmp
jle
stos
sti
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
push
add
push
push
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
push
add
add
pop
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
rcr
or
test
nop
xchg
ret
stc
pop
test
mov
sub
mov
and
adc
je
data16
js
mov
cmp
dec
(bad)
pop
sub
cmp
(bad)
mov
or
pop
ss
inc
stc
neg
xchg
sub
xchg
sti
jo
jl
retf
retf
sub
(bad)
je
jbe
and
ins
push
es
movs
jmp
(bad)
xor
cmp
stc
xor
iret
ss
sbb
dec
and
lods
sbb
and
je
loope
jecxz
imul
(bad)
into
pushf
and
test
hlt
aad
sub
shl
ret
mov
iret
retf
jne
outs
lods
out
icebp
push
xchg
mov
xchg
and
push
or
xchg
jg
push
add
push
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
push
add
pop
add
add
add
add
add
pop
add
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
push
xlat
aad
adc
inc
inc
out
xchg
cmp
sbb
pop
addr16
rcl
sbb
rcl
push
out
mov
ss
stos
and
stos
ja
jb
sbb
aad
pop
sahf
dec
mov
adc
in
or
add
mov
enter
inc
inc
mov
push
push
mov
xchg
xor
ror
sbb
xor
mov
mov
sbb
icebp
rol
jecxz
int3
outs
daa
xchg
or
push
and
xchg
pop
xchg
pop
pusha
jmp
add
cmp
sub
int3
fadd
les
iret
fisubr
and
out
out
xor
stc
int
dec
jo
in
mov
loop
out
jmp
or
retf
xor
lock
ret
cmps
sbb
jp
mov
das
in
dec
jb
scas
jg
push
mov
add
add
add
add
pop
add
push
add
add
add
pop
add
add
pop
add
add
add
add
pop
push
add
add
pop
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
push
add
add
push
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
push
add
add
add
push
add
add
pop
pop
push
add
pop
add
add
add
add
pop
add
add
pop
add
push
add
add
add
pop
add
add
add
add
xchg
mov
(bad)
push
add
or
scas
sub
movs
imul
xor
cdq
mov
cmc
sahf
add
movs
xchg
pop
out
unpckhps
inc
stos
cmp
pop
pop
pop
nop
xlat
adc
cmps
cwde
xchg
jecxz
or
inc
jne
mov
sbb
and
or
(bad)
jnp
push
mov
pop
xor
outs
sbb
scas
push
ret
push
(bad)
dec
pop
add
mov
mov
ja
sbb
pop
pop
pop
dec
mov
xor
xchg
dec
sbb
inc
inc
(bad)
leave
sub
retf
pop
out
sbb
cmp
mov
pop
loopne
or
jmp
adc
lods
out
(bad)
adc
inc
pop
cmp
sub
hlt
das
xlat
gs
inc
ss
cmps
fcmovnbe
mov
jmp
cmps
(bad)
cld
mov
out
add
repnz
or
adc
cmp
sub
add
adc
add
add
add
adc
pop
and
sub
das
and
push
das
xor
sub
ds
pop
add
sbb
xor
adc
cmp
push
adc
or
xor
or
cmp
or
add
aaa
add
sbb
or
cmp
pop
or
sub
add
xor
push
cmp
ss
sbb
sbb
adc
sub
sbb
cmp
sbb
and
pop
sub
or
or
and
cmp
cmp
or
sbb
sub
and
and
and
sbb
xor
add
add
adc
xor
and
sbb
and
add
cmp
rdpmc
adc
daa
or
sub
add
or
sbb
ss
add
or
add
cs
sbb
cmp
sub
or
sbb
sub
daa
sbb
cwde
cwde
push
inc
push
adc
fcomp
adc
cwde
enter
or
push
add
sbb
add
enter
inc
fmul
push
add
rcl
cwde
nop
push
push
add
or
cwde
rcr
enter
adc
enter
fadd
enter
fcomp
inc
mov
pop
rcl
cwde
cwde
or
nop
nop
or
dec
push
mov
dec
dec
add
fcom
push
pop
enter
adc
fcom
inc
cwde
add
sbb
enter
sbb
fcom
adc
adc
adc
fcomp
adc
inc
sbb
push
or
sbb
adc
enter
nop
adc
add
adc
dec
sbb
or
ror
adc
or
nop
pop
inc
dec
add
add
or
adc
sbb
add
fmul
cwde
push
dec
add
sbb
add
inc
fcomp
inc
or
adc
adc
cwde
cwde
enter
or
enter
adc
or
cwde
mov
dec
or
sbb
add
mov
pop
inc
inc
add
sbb
sbb
inc
adc
or
add
or
inc
push
add
pop
enter
sbb
dec
dec
ror
fcomp
sbb
dec
add
enter
push
or
sbb
inc
cwde
add
dec
rol
add
dec
mov
fmul
pop
dec
ror
dec
inc
mov
fmul
dec
pop
or
enter
mov
pop
dec
or
dec
or
sbb
adc
enter
enter
dec
add
or
fmul
add
inc
enter
dec
inc
or
enter
pop
mov
or
inc
cwde
inc
add
add
pop
dec
enter
dec
dec
mov
sbb
add
or
push
inc
add
add
inc
or
dec
cwde
or
cwde
or
adc
or
ror
fadd
mov
enter
pop
adc
or
ror
cwde
mov
dec
add
cwde
sbb
fadd
sbb
or
or
enter
or
rol
sbb
add
sbb
adc
rol
sbb
inc
adc
dec
mov
sbb
rol
cwde
cwde
ror
fmul
add
push
cwde
sbb
rcl
dec
or
inc
fmul
or
pop
sbb
sbb
fcomp
sbb
dec
mov
add
fmul
rcr
or
enter
enter
push
fmul
sbb
rcr
push
pop
add
or
ror
rcl
push
dec
or
fcomp
sbb
adc
or
sbb
adc
dec
nop
enter
mov
push
sbb
or
enter
enter
nop
pop
dec
add
or
add
cwde
inc
rcl
mov
nop
add
sbb
pop
sbb
ror
or
adc
fcomp
rcl
fcom
adc
push
adc
push
mov
rcr
add
or
ror
sbb
or
sbb
sbb
inc
add
adc
cwde
rol
pop
fcom
mov
or
add
mov
adc
inc
ror
inc
add
enter
dec
rol
adc
enter
or
rcr
mov
mov
cwde
mov
nop
fcom
or
sbb
or
sbb
sbb
fcom
or
add
add
cwde
or
dec
rol
fmul
fcomp
add
or
cwde
or
fcomp
nop
or
cwde
fcomp
add
pop
push
add
or
dec
sbb
adc
rcr
add
add
or
mov
sbb
sbb
dec
pop
dec
sbb
add
inc
fcom
add
cwde
ror
push
rcr
or
or
sbb
add
sbb
sbb
mov
inc
dec
dec
add
cwde
add
or
add
sbb
add
cwde
rol
or
adc
push
or
dec
ror
mov
pop
sbb
push
adc
pop
push
inc
push
sbb
dec
cwde
dec
rol
adc
rol
inc
add
push
cwde
add
pop
sbb
sbb
adc
sbb
add
adc
enter
add
cwde
inc
cwde
or
sbb
sbb
mov
cwde
cwde
or
add
add
sbb
inc
dec
dec
dec
push
adc
sbb
fcomp
dec
fcomp
adc
sbb
mov
or
or
enter
rol
push
adc
pop
fadd
ror
adc
cwde
mov
dec
fcomp
sbb
dec
add
enter
push
push
adc
cwde
adc
or
dec
cwde
inc
inc
sbb
or
adc
nop
add
cwde
sbb
or
sbb
mov
mov
or
rol
adc
dec
adc
ror
rol
sbb
enter
or
enter
nop
rcr
sbb
enter
add
nop
adc
mov
add
fcom
push
inc
enter
nop
inc
fadd
fcomp
ror
sbb
push
nop
pop
add
sbb
or
add
pop
fcom
dec
fcom
or
nop
mov
sbb
fcomp
or
adc
push
dec
adc
or
add
add
or
sbb
add
sbb
pop
add
mov
sbb
add
mov
dec
dec
fadd
fcom
sbb
sbb
inc
mov
fcom
add
adc
fcomp
push
pop
cwde
adc
cwde
inc
adc
dec
enter
nop
cwde
sbb
or
push
add
mov
cwde
sbb
dec
nop
or
cwde
add
or
enter
rol
add
adc
mov
sbb
or
rol
pop
fcomp
fcomp
dec
adc
rcr
dec
pop
sbb
pop
mov
inc
ror
enter
fmul
fmul
ror
fmul
inc
sbb
or
adc
add
sbb
adc
rcl
ror
add
or
cwde
enter
inc
pop
fadd
enter
or
or
ror
enter
mov
add
enter
add
enter
fmul
add
adc
or
or
or
or
mov
enter
enter
enter
rol
dec
sbb
cwde
mov
mov
enter
enter
pop
adc
fmul
add
add
adc
rcr
add
add
enter
inc
inc
enter
enter
or
enter
enter
mov
sbb
enter
mov
dec
adc
or
mov
or
enter
or
adc
or
add
sbb
pop
adc
pop
adc
ror
or
add
fcom
or
mov
dec
enter
or
fcomp
or
or
mov
enter
fadd
inc
dec
or
enter
pop
adc
pop
fcomp
fadd
rol
add
enter
adc
or
inc
enter
adc
or
adc
rcr
push
adc
sbb
sbb
fmul
or
inc
or
enter
enter
fadd
or
add
push
enter
sbb
or
push
fmul
mov
or
add
pop
add
or
sbb
dec
rcr
push
mov
inc
or
inc
push
or
enter
dec
rol
push
add
push
dec
dec
inc
adc
enter
sbb
enter
dec
or
pop
or
enter
dec
pop
sbb
sbb
pop
sbb
dec
or
inc
mov
or
push
or
sbb
adc
or
add
fmul
or
inc
rcr
enter
enter
ror
or
pop
add
mov
inc
enter
adc
or
nop
add
dec
adc
dec
enter
or
enter
add
rcr
dec
rol
dec
pop
adc
adc
fmul
cwde
adc
or
sbb
sbb
or
enter
or
fadd
mov
pop
inc
sbb
enter
enter
sbb
dec
dec
cwde
sbb
enter
dec
push
nop
add
sbb
cwde
or
add
adc
inc
enter
sbb
enter
sbb
adc
adc
rcr
cwde
or
rcr
or
mov
or
rol
dec
fmul
nop
cwde
enter
or
fmul
or
dec
or
add
add
sbb
add
dec
dec
enter
dec
sbb
or
fcomp
mov
or
cwde
ror
adc
mov
enter
add
add
enter
or
push
mov
rcr
pop
nop
rol
nop
inc
sbb
or
cwde
adc
add
or
push
cwde
adc
sbb
ror
adc
cwde
or
enter
sbb
pop
sbb
or
inc
ror
fadd
inc
dec
ror
push
add
or
mov
add
inc
sbb
inc
enter
adc
rcl
dec
or
sbb
add
inc
push
pop
adc
add
or
ror
adc
adc
adc
ror
add
or
fadd
add
enter
adc
adc
cwde
cwde
add
or
rcr
dec
inc
push
sbb
dec
push
fmul
fadd
enter
ror
add
dec
ror
rol
pop
inc
fadd
fadd
inc
inc
push
enter
rcr
push
push
fcom
rcr
push
adc
add
cwde
rcl
adc
fadd
rol
mov
adc
rcl
enter
fcom
rcl
dec
add
ror
add
cwde
fcomp
mov
inc
add
rcl
enter
cwde
adc
fmul
nop
inc
or
nop
or
dec
add
or
ror
cwde
rol
sbb
add
cwde
pop
adc
inc
nop
rol
cwde
fmul
dec
rcr
enter
add
or
add
pop
fcom
fcom
dec
sbb
add
rcr
pop
adc
cwde
fcomp
or
rol
rcl
dec
adc
sbb
mov
inc
rcl
nop
or
add
rcl
sbb
mov
dec
fcom
dec
adc
rcl
cwde
ror
enter
pop
pop
sbb
or
rcr
pop
nop
inc
dec
enter
ror
cwde
pop
nop
or
sbb
adc
enter
inc
adc
add
dec
sbb
adc
add
adc
sbb
cwde
pop
rol
add
or
rol
fcomp
mov
nop
or
rcl
fcom
ror
inc
adc
add
add
cwde
fmul
cwde
rol
sbb
rcl
fcomp
ror
add
fcomp
cwde
cwde
sbb
add
enter
cwde
rcl
adc
fcomp
cwde
or
dec
sbb
push
dec
enter
cwde
cwde
inc
add
sbb
rcr
inc
enter
sbb
fadd
nop
cwde
pop
push
sbb
dec
add
fcom
dec
add
rcr
or
cwde
dec
or
ror
sbb
pop
add
cwde
dec
cwde
add
rol
adc
dec
pop
adc
rcl
fadd
rol
adc
enter
cwde
sbb
push
push
sbb
adc
add
add
add
fadd
add
enter
fadd
fmul
cwde
fmul
fcomp
rol
sbb
dec
mov
dec
dec
add
add
add
ror
enter
add
or
add
cwde
add
or
mov
push
fadd
pop
enter
rcl
mov
inc
fcom
rcl
sbb
pop
adc
add
add
dec
mov
sbb
or
dec
dec
or
pop
add
ror
or
dec
add
rol
dec
mov
push
cwde
sbb
dec
pop
or
mov
nop
sbb
or
fmul
or
pop
cwde
add
adc
nop
add
or
fmul
adc
ror
enter
push
nop
enter
cwde
add
add
add
rcl
sbb
fmul
rcl
enter
add
push
nop
rol
or
sbb
cwde
push
adc
nop
or
sbb
fmul
cwde
mov
dec
add
nop
add
pop
push
enter
dec
pop
add
or
mov
sbb
cwde
enter
sbb
push
mov
sbb
or
adc
sbb
nop
cwde
ror
enter
enter
sbb
push
enter
fadd
fcomp
or
enter
add
mov
rcl
sbb
mov
nop
or
nop
add
enter
rol
fcomp
nop
sbb
add
mov
or
or
cwde
push
dec
sbb
enter
cwde
dec
add
or
fmul
ror
or
or
fmul
sbb
sbb
add
enter
adc
or
sbb
add
dec
inc
add
push
nop
dec
fmul
mov
fcom
enter
enter
ror
dec
add
rcr
fmul
add
add
mov
fcomp
nop
or
enter
or
inc
enter
enter
add
rcr
add
inc
sbb
cwde
nop
cwde
adc
mov
adc
fadd
inc
inc
fcomp
add
adc
ror
mov
sbb
add
fmul
adc
enter
or
ror
dec
cwde
dec
fcomp
pop
rcr
enter
in
push
add
dec
add
repnz
ins
popa
add
add
and
xchg
xchg
loopne
bound
add
add
dec
add
inc
mov
add
and
add
adc
add
test
popa
or
sub
shl
inc
mov
add
and
add
push
push
push
sub
test
mov
and
inc
test
add
and
adc
or
push
and
inc
fcom
adc
aam
add
mov
mov
pop
add
mov
add
pop
add
adc
mov
add
(bad)
add
test
inc
add
dec
or
inc
push
or
cmp
bound
and
pop
sub
or
mov
add
pop
add
(bad)
or
and
rcr
add
mov
adc
and
rcl
add
and
pop
add
inc
daa
test
and
add
add
and
or
test
push
add
and
sub
add
mov
push
add
mov
adc
dec
nop
jo
adc
or
adc
dec
sbb
or
add
sbb
adc
add
and
add
xchg
adc
retf
adc
push
call
or
test
add
and
and
adc
xor
cwde
add
adc
adc
test
sub
push
add
inc
adc
add
add
push
stos
add
xor
adc
and
inc
add
sub
add
sbb
mov
push
add
inc
xchg
movs
add
sbb
add
sub
inc
or
sub
add
add
nop
dec
push
sbb
and
add
test
add
mov
call
mov
add
add
and
add
add
dec
and
add
add
inc
stos
or
test
add
push
adc
rol
sub
push
sub
inc
or
add
pop
add
or
test
adc
dec
sub
or
add
or
rcl
xchg
xchg
popa
mov
push
adc
bound
add
add
add
add
pop
cmp
adc
test
rcl
push
loopne
inc
test
jo
add
add
ret
mov
add
adc
or
add
add
add
mov
add
or
or
inc
push
popa
add
add
bound
and
loope
mov
add
dec
add
inc
add
sub
and
mov
add
inc
inc
or
and
add
xor
adc
mov
add
dec
xchg
add
inc
add
or
add
nop
shl
or
and
mov
repnz
cwde
adc
(bad)
or
adc
and
and
add
inc
add
pop
mov
inc
and
adc
jge
mov
adc
and
inc
and
push
cmp
and
ret
dec
add
add
dec
dec
das
sub
dec
inc
dec
inc
and
add
add
push
nop
push
or
or
push
rcl
or
inc
add
into
data16
pusha
inc
sub
pusha
push
jae
cmp
add
and
and
add
and
adc
pop
adc
pop
test
mov
inc
or
add
inc
or
es
daa
add
or
loopne
adc
add
inc
or
inc
cwde
push
sbb
or
inc
mov
mov
mov
dec
or
inc
dec
pusha
pop
xor
add
or
or
adc
jo
or
inc
or
add
mov
sub
inc
nop
and
cmp
add
enter
or
call
add
dec
cmp
inc
imul
mov
rol
add
add
inc
add
add
loopne
add
retf
or
add
cmp
ins
sbb
add
sub
and
push
push
inc
lds
sbb
adc
xchg
add
adc
sub
add
inc
push
pop
xchg
xchg
add
or
add
ret
inc
mov
add
push
add
ins
add
popa
add
xor
push
add
xor
and
inc
pop
jo
dec
xor
inc
sbb
cwde
mov
cwde
add
add
pop
pusha
and
rol
push
add
adc
adc
mov
push
mov
adc
push
adc
and
add
sub
mov
add
inc
push
movs
inc
sbb
and
add
or
or
or
add
add
mov
add
int3
mov
push
pop
add
add
push
add
or
inc
add
adc
and
nop
and
mov
add
es
push
rol
add
mov
retf
and
loopne
or
and
add
adc
nop
push
dec
xchg
inc
rcr
adc
cmp
and
popa
cli
add
pop
inc
mov
adc
xor
add
and
inc
inc
add
mov
shl
add
and
add
add
ror
sbb
xchg
and
adc
and
inc
pop
or
and
or
or
add
xor
add
add
sub
add
add
or
loopne
inc
add
cmp
inc
and
mov
or
sub
and
sub
or
dec
nop
push
and
mov
add
test
add
xchg
push
bound
adc
adc
and
adc
add
push
add
and
add
mov
inc
or
add
cmp
sbb
or
or
xchg
dec
add
inc
add
xor
shr
add
add
and
inc
mov
adc
and
(bad)
sbb
adc
dec
and
add
and
adc
and
add
dec
sub
inc
add
and
rol
adc
add
xor
test
mov
or
add
mov
and
add
xor
sbb
add
pop
push
and
or
sbb
ret
or
sub
and
outs
ror
or
add
sub
inc
add
add
adc
les
jbe
adc
or
dec
inc
add
and
pop
push
mov
add
inc
test
add
inc
inc
add
loopne
dec
add
mov
add
add
leave
test
add
clc
or
inc
add
nop
xor
xchg
or
sub
adc
or
add
add
add
or
add
sub
add
lock
pop
sub
lds
add
add
add
mov
dec
cmp
inc
add
and
or
xor
popa
add
inc
cmp
add
or
adc
test
push
test
and
dec
rol
or
and
or
inc
adc
inc
or
add
sub
push
add
pusha
add
pusha
inc
xchg
mov
leave
leave
es
xor
inc
or
add
sbb
and
dec
jo
xadd
and
test
test
inc
xchg
or
enter
and
inc
push
mov
or
inc
and
test
loopne
adc
add
and
or
inc
add
shl
inc
adc
add
dec
adc
push
dec
or
sbb
je
pop
inc
pop
add
ret
or
adc
add
xor
inc
xchg
add
test
or
mov
or
push
sub
dec
and
xor
inc
mov
nop
inc
sub
and
test
and
add
or
push
add
adc
adc
xor
add
pop
inc
push
enter
and
add
pusha
dec
or
push
and
jo
lea
add
dec
dec
add
sub
mov
add
add
add
rol
dec
inc
or
aas
loop
adc
dec
add
add
add
nop
mov
inc
and
and
mov
inc
push
ss
or
xchg
add
mov
add
adc
and
movs
nop
loope
inc
inc
xor
jo
or
push
enter
add
adc
push
test
sbb
lock
xchg
sbb
inc
push
add
rcl
call
xchg
inc
and
dec
shr
sbb
adc
push
rol
mov
add
mov
or
adc
nop
or
add
test
inc
add
add
dec
add
add
or
add
or
or
add
mov
popa
add
or
pop
add
add
pop
or
inc
fs
inc
add
sub
cmp
and
sub
or
or
and
inc
es
adc
sub
adc
xchg
add
push
dec
add
add
inc
lods
adc
push
push
dec
pop
adc
and
or
or
lock
cdq
add
sub
push
lahf
and
push
add
inc
dec
mov
add
push
test
es
add
push
loopne
adc
sbb
xor
add
add
add
fstp
jo
xchg
and
pusha
add
popa
sbb
adc
add
inc
sbb
adc
xor
adc
adc
add
add
add
xor
mov
inc
or
add
add
cmp
and
push
and
daa
add
adc
and
xchg
enter
or
adc
add
add
mov
inc
jno
add
adc
add
or
mov
mov
and
or
cli
or
xchg
inc
sub
dec
int3
add
xchg
inc
sub
mov
xchg
pop
test
sub
mov
adc
or
inc
dec
dec
jae
add
push
inc
add
or
adc
add
adc
inc
cwde
adc
adc
adc
or
add
dec
or
add
and
add
add
aam
jp
adc
add
add
dec
xor
add
inc
or
add
add
add
adc
and
push
or
inc
add
add
test
shr
mov
xchg
cmps
pusha
inc
fs
and
push
pop
or
and
pop
or
dec
adc
sbb
inc
or
inc
sbb
add
push
mov
add
push
mov
add
push
adc
inc
inc
or
dec
and
sub
inc
inc
add
mov
add
or
add
add
add
inc
add
inc
add
add
jb
and
adc
add
add
dec
mov
add
and
add
add
and
call
add
add
and
or
and
or
add
inc
test
aaa
xor
sub
and
add
adc
imul
inc
mov
xchg
nop
xchg
mov
add
push
inc
dec
pushf
inc
adc
add
and
je
inc
adc
add
and
jge
add
adc
nop
pusha
add
sbb
and
jle
push
jb
pop
nop
sbb
shl
or
and
inc
je
inc
icebp
pop
test
push
or
and
add
bound
xchg
pusha
add
sbb
mov
test
add
popf
inc
add
nop
inc
sbb
ret
je
add
add
dec
add
inc
add
add
jno
js
xchg
or
rcl
add
sbb
adc
daa
or
mov
inc
inc
add
push
adc
sub
or
add
sub
add
adc
(bad)
adc
push
push
mov
pop
rcr
mov
and
nop
inc
or
jno
and
out
add
or
sbb
cwde
or
cmp
mov
push
sbb
mov
add
adc
inc
add
add
adc
adc
add
adc
add
or
add
ror
rcl
add
push
push
pop
push
or
push
or
add
mov
or
push
loopne
adc
inc
inc
add
mov
mov
xchg
or
cmp
retf
and
adc
and
push
add
mov
add
sbb
adc
inc
and
and
popa
add
and
add
adc
or
sbb
punpcklbw
push
and
xchg
xchg
movs
mov
rol
popa
aam
and
xchg
adc
add
cmps
fs
mov
or
push
add
pop
xchg
pop
cmp
add
add
call
dec
add
inc
and
add
add
adc
pusha
add
add
xor
add
add
mov
push
add
inc
xchg
adc
add
rcl
adc
add
test
adc
push
dec
add
add
or
adc
and
sbb
push
fs
and
and
and
inc
xchg
or
inc
and
add
pusha
sub
loopne
add
adc
dec
movs
add
sub
or
cmp
add
loop
and
loopne
adc
sbb
push
sbb
inc
cmp
push
pusha
add
or
inc
or
xchg
inc
enter
add
sbb
nop
and
ror
and
mov
dec
add
jmp
xor
add
loopne
nop
shl
and
add
or
add
test
adc
jno
add
adc
and
inc
inc
test
add
sub
add
inc
inc
call
pop
rcl
or
cmp
add
push
or
fadd
or
inc
xor
cmp
pop
nop
add
push
inc
adc
dec
or
xor
add
dec
xor
add
inc
mov
sbb
add
rol
and
(bad)
and
shl
inc
sbb
adc
add
pop
add
add
adc
inc
and
add
mov
xor
xchg
push
add
mov
push
inc
inc
add
inc
or
add
test
and
inc
add
retf
fisttp
or
push
inc
adc
sbb
add
push
sub
inc
js
add
add
push
add
shr
add
inc
cdq
inc
add
add
add
and
adc
mov
dec
sbb
mov
adc
je
inc
and
mov
ud2
xor
push
add
and
add
inc
push
or
nop
add
adc
or
add
in
add
or
or
add
add
push
add
inc
sbb
ror
sub
and
adc
es
call
adc
sbb
adc
inc
mov
call
inc
add
pushf
mov
add
sub
push
(bad)
into
add
inc
inc
xor
xchg
popa
add
cmp
sbb
add
and
and
or
inc
add
or
sbb
or
or
adc
add
add
ss
nop
pusha
add
inc
arpl
push
nop
dec
add
sbb
add
or
inc
add
xor
push
add
ror
dec
and
add
mov
and
leave
adc
and
inc
add
dec
or
xor
mov
inc
mov
push
add
fcom
inc
inc
adc
adc
test
mov
cwde
inc
sbb
add
cs
cmps
push
sub
push
dec
and
xor
les
xchg
adc
add
inc
inc
sbb
dec
inc
pop
ror
adc
pop
add
inc
mov
sbb
or
mov
add
and
inc
sbb
or
pusha
popa
sub
pusha
add
add
add
pop
xor
movs
sbb
add
adc
aam
sub
add
or
bound
xchg
or
xor
push
inc
cdq
pusha
fcom
cmp
xor
mov
inc
test
add
adc
dec
or
and
adc
or
or
inc
add
adc
add
push
pusha
and
add
loop
jb
inc
sub
mov
or
adc
add
and
arpl
or
mov
add
dec
pop
and
adc
sbb
adc
nop
add
dec
pop
add
inc
and
movs
pushf
or
inc
scas
or
call
push
inc
ror
and
or
add
and
add
mov
dec
and
add
and
add
pusha
inc
adc
adc
es
sbb
or
adc
sub
or
add
call
or
pop
add
add
inc
add
dec
movs
push
rol
push
add
inc
add
or
xor
pop
or
add
and
push
and
jp
and
inc
xor
inc
adc
or
push
ror
add
or
inc
add
or
int3
add
add
test
add
arpl
and
and
add
add
add
add
add
add
push
pop
adc
sub
or
xchg
cmp
xor
and
pusha
sbb
add
adc
xchg
jge
and
add
les
and
add
xor
inc
adc
inc
sub
sbb
add
inc
loope
arpl
adc
adc
add
or
push
xchg
adc
and
leave
jne
adc
xchg
inc
mov
sub
adc
cmp
sbb
and
cwde
and
add
pushf
push
inc
sub
mov
add
aam
inc
push
dec
or
dec
add
inc
add
add
add
inc
sbb
inc
or
add
add
inc
add
cmp
bound
adc
ror
add
or
adc
add
cwde
add
xor
or
and
add
sbb
add
and
pop
adc
bound
add
xchg
add
sub
sub
call
xor
shl
add
or
mov
movups
loopne
add
and
add
and
loop
push
sub
or
mov
or
and
stos
call
cwde
push
adc
arpl
dec
inc
or
ss
and
jno
add
sub
mov
loope
adc
dec
je
xchg
add
adc
add
or
and
test
push
add
inc
add
inc
mov
or
shl
sbb
inc
xor
mov
inc
add
add
add
add
popa
and
pop
add
jne
inc
add
and
dec
cld
adc
push
add
add
loopne
and
add
or
push
xchg
add
inc
and
or
mov
data16
ins
sub
and
dec
mov
add
or
movs
pop
or
add
sub
dec
add
sbb
and
add
adc
test
and
add
add
or
test
pusha
or
in
mov
fst
adc
add
sub
or
add
inc
add
add
leave
sub
add
add
loopne
add
or
adc
dec
sbb
sub
fs
in
and
add
mov
movs
cmp
cmp
add
add
mov
mov
pop
sbb
add
add
sub
push
sub
add
inc
or
add
and
add
sbb
cmp
mov
push
add
push
sub
inc
adc
adc
sub
and
jo
call
add
push
add
add
ret
push
and
js
aaa
inc
push
add
and
and
and
or
rol
inc
call
xor
imul
dec
and
adc
rol
shl
fdiv
add
mov
inc
(bad)
mov
add
mov
jmp
xor
sub
mov
loope
add
add
add
mov
add
inc
and
add
add
adc
adc
adc
adc
add
push
add
test
mov
pusha
mov
pusha
and
or
sbb
adc
push
add
add
or
sbb
dec
add
adc
rol
sbb
enter
push
add
add
add
sub
test
adc
sub
les
add
inc
pop
dec
add
mov
dec
add
pusha
add
add
loopne
or
call
add
xchg
add
push
adc
xor
inc
mov
adc
push
rcl
add
gs
add
popa
mov
xchg
add
and
add
mov
loopne
adc
data16
push
ret
repnz
add
or
mov
inc
add
and
dec
xchg
pusha
bound
adc
sbb
xor
fadd
add
shr
add
inc
xor
push
and
jb
adc
or
pusha
nop
dec
and
lock
inc
and
add
or
sub
push
add
add
nop
adc
retf
add
nop
add
inc
or
sbb
cmp
shr
and
add
add
adc
add
add
rol
int
push
add
sub
sbb
inc
sbb
add
inc
sub
add
or
mov
sub
adc
add
add
add
inc
add
dec
dec
and
or
dec
inc
xor
pusha
or
inc
mov
add
add
jo
add
add
adc
scas
xor
push
sub
and
xor
or
add
popa
add
test
rol
mov
add
push
and
pop
xchg
and
or
ret
xor
push
add
add
inc
add
inc
xor
xor
adc
or
add
call
push
xor
or
or
inc
test
pusha
inc
or
adc
dec
add
(bad)
loopne
add
and
add
mov
adc
add
adc
stos
sub
add
test
push
int3
dec
mov
fiadd
push
mov
sub
inc
inc
and
adc
es
test
push
pop
inc
mov
mov
inc
sbb
add
movs
inc
and
or
and
bound
xchg
add
inc
add
adc
add
inc
and
call
adc
sbb
imul
adc
pusha
adc
add
add
sbb
add
inc
ret
dec
stos
add
or
in
and
sub
add
mov
add
and
nop
or
add
add
add
sub
or
and
inc
stos
sub
add
add
push
mov
jl
inc
ret
mov
inc
jmp
lock
mov
pusha
and
add
adc
mov
dec
or
add
add
pusha
and
add
adc
or
add
and
inc
inc
push
push
add
add
add
dec
add
test
jo
rol
fcom
or
sub
add
or
add
or
pusha
push
ret
add
add
add
and
and
xchg
mov
adc
add
imul
add
rcl
xor
add
pop
sub
inc
test
sbb
add
xor
pop
add
inc
push
adc
lods
add
adc
inc
or
mov
dec
or
sub
inc
add
dec
add
add
add
add
loopne
sub
add
mov
add
or
pusha
or
or
add
xor
inc
inc
nop
adc
mov
inc
and
xchg
push
inc
mov
or
add
or
inc
test
push
or
or
add
adc
push
dec
add
mov
add
add
inc
push
dec
call
aam
add
add
test
inc
or
adc
es
mov
add
add
inc
mov
and
or
add
and
add
inc
and
add
nop
dec
add
add
add
dec
mov
sub
or
push
adc
push
test
push
stos
adc
or
and
cmp
push
add
add
adc
inc
les
outs
and
adc
adc
or
xor
add
push
inc
adc
push
or
xchg
mov
ror
or
add
xchg
adc
and
adc
or
and
inc
add
mov
add
jb
popa
dec
and
sbb
sub
sbb
pop
or
inc
inc
sub
xchg
inc
or
add
or
pop
push
add
adc
push
or
push
add
or
dec
inc
add
dec
mov
add
sub
add
add
sub
mov
add
mov
mov
or
pop
sub
adc
es
xor
adc
jo
add
sbb
sbb
inc
xchg
and
inc
adc
hlt
xor
add
nop
add
push
add
add
inc
add
add
adc
lods
add
add
add
or
and
mov
popa
add
inc
dec
cmps
add
and
adc
push
pusha
and
add
add
add
mov
xchg
dec
xor
add
call
add
or
mov
adc
dec
add
and
add
add
add
arpl
js
or
dec
nop
add
add
add
aam
(bad)
adc
push
sub
call
adc
xchg
add
adc
inc
add
or
test
xor
add
inc
inc
les
ret
push
add
sub
add
mov
inc
sub
adc
and
lods
add
add
add
rol
and
adc
movs
inc
and
pusha
adc
sub
add
add
mov
hlt
and
sbb
xor
add
and
dec
enter
pop
and
and
inc
leave
add
add
adc
inc
dec
add
and
add
add
inc
dec
inc
add
fs
and
push
movs
or
or
and
and
call
inc
push
add
or
adc
add
or
and
add
xchg
add
add
and
add
or
rol
sub
and
or
add
mov
(bad)
and
add
rol
and
xor
add
and
add
inc
mov
sub
sbb
add
adc
add
push
add
add
fadd
int3
or
inc
pusha
cmp
add
inc
inc
adc
mov
xor
and
and
or
add
dec
add
add
inc
adc
mov
inc
ficom
xchg
inc
jo
and
add
sub
add
and
inc
xor
and
add
add
add
nop
nop
add
call
out
movs
or
retf
add
or
mov
inc
ret
and
ror
add
adc
or
mov
or
xor
and
or
inc
xchg
and
add
add
add
inc
add
fimul
and
add
add
or
sbb
inc
inc
dec
into
cmps
and
or
add
or
add
pusha
inc
inc
inc
imul
add
adc
ror
adc
add
add
or
add
inc
xor
rol
inc
test
enter
dec
dec
mov
xchg
adc
loop
(bad)
scas
adc
and
inc
add
and
adc
mov
add
pusha
mov
sub
sub
stos
add
and
or
adc
add
mov
add
add
xor
inc
sbb
lds
add
mov
inc
sub
and
add
rcr
and
add
add
inc
add
xor
or
rcl
add
adc
in
je
pop
adc
add
add
and
dec
mov
add
inc
xchg
adc
adc
loop
adc
cmp
or
add
add
sbb
mov
add
xor
inc
ror
adc
add
adc
and
add
popa
add
add
call
mov
test
inc
add
add
or
push
or
adc
pop
add
inc
add
(bad)
rcl
xchg
add
add
adc
mov
add
adc
adc
mov
mov
sbb
add
add
rcl
cwde
inc
add
mov
add
add
inc
sub
add
mov
dec
adc
inc
les
adc
or
data16
add
mov
and
mov
push
and
adc
push
leave
or
ror
stos
mov
mov
and
pusha
add
or
add
mov
and
sbb
dec
add
inc
mov
inc
xor
mov
add
add
add
mov
and
sub
nop
add
add
xchg
mov
sub
mov
fcom
dec
xchg
test
call
xchg
mov
inc
push
xchg
add
and
inc
shl
add
xchg
xchg
sub
and
add
and
and
add
add
mov
adc
add
adc
loop
adc
add
and
inc
inc
inc
pop
add
add
add
add
inc
add
add
or
adc
or
adc
add
mov
pusha
add
inc
mov
and
sub
inc
or
enter
adc
dec
add
or
les
test
movs
pop
adc
nop
inc
or
mov
or
inc
add
inc
mov
push
or
or
dec
aas
and
ret
inc
and
add
or
bound
push
or
pop
push
sbb
mov
add
mov
dec
add
or
xor
push
shr
inc
add
and
xchg
and
adc
add
inc
pop
test
sbb
add
loop
sbb
es
inc
adc
and
sub
nop
xchg
push
add
add
adc
adc
and
or
and
sbb
arpl
mov
retf
and
test
or
xchg
or
add
or
or
adc
add
mov
add
and
and
add
adc
mov
adc
cmp
xor
add
mov
inc
dec
bound
or
inc
add
add
add
stos
sub
or
adc
dec
sub
inc
add
imul
and
xchg
add
add
mov
inc
inc
mov
pop
inc
and
sub
or
push
mov
push
xor
inc
add
inc
inc
and
add
inc
dec
or
or
adc
add
enter
inc
and
mov
rol
les
add
mov
add
pusha
aam
inc
and
inc
add
add
and
add
rol
and
push
mov
add
add
nop
and
cwde
inc
add
shl
add
cwde
add
and
add
or
add
push
push
mov
lea
or
inc
add
or
inc
stos
or
(bad)
call
inc
pusha
and
add
dec
sbb
test
adc
or
add
add
add
xchg
sub
sbb
pop
add
inc
add
sub
add
add
add
push
les
dec
nop
inc
pusha
or
pusha
xchg
add
add
pusha
inc
enter
inc
push
add
pusha
add
inc
ret
and
and
xor
or
add
adc
and
mov
rol
add
sub
mov
push
add
cmps
adc
test
rol
and
inc
push
rol
inc
pop
inc
inc
xor
add
inc
add
and
dec
sbb
add
sub
add
xor
inc
adc
add
and
add
add
pop
dec
adc
add
adc
add
adc
sbb
sbb
add
cmp
add
cmp
add
add
add
inc
pusha
add
leave
pop
xchg
or
inc
add
xor
add
inc
ret
inc
inc
mov
inc
add
inc
or
or
inc
push
add
inc
add
add
cmp
pushf
add
movs
nop
pop
add
or
add
rol
sbb
pusha
push
xchg
rcr
add
movs
or
pusha
add
and
int
adc
inc
retf
add
xchg
inc
inc
add
and
shl
add
loopne
xchg
popa
addr16
fld
add
add
call
call
push
rol
or
inc
inc
test
add
and
and
and
add
dec
sub
add
js
inc
and
test
adc
add
adc
push
add
inc
adc
add
fdiv
adc
and
adc
add
movs
call
or
lock
add
add
das
xor
rol
add
ins
or
add
add
mov
add
inc
add
add
inc
add
add
add
sub
mov
fadd
les
or
xor
adc
lds
and
add
ret
inc
lea
xor
stos
and
add
add
add
add
or
inc
repnz
add
and
int3
xor
or
add
push
sub
add
adc
add
mov
xchg
inc
sub
add
pop
add
add
and
popa
add
adc
add
add
ret
inc
and
jae
add
or
and
mov
pushf
xor
mov
cmp
add
push
and
or
inc
add
leave
add
push
add
sub
add
add
add
or
and
sbb
sub
sub
and
or
add
add
mov
add
add
movs
add
inc
and
or
add
xchg
add
or
jo
retf
adc
mov
adc
add
and
or
sub
add
adc
add
add
adc
inc
adc
adc
ret
and
or
gs
adc
add
add
inc
ss
xor
add
add
add
cmp
mov
adc
add
enter
stos
nop
add
cmp
fadd
and
add
add
dec
inc
movs
add
add
inc
sub
adc
add
adc
add
and
add
js
or
and
or
sbb
and
add
or
test
add
sub
add
ss
mov
sbb
sbb
sub
xchg
push
test
push
dec
sub
and
sub
adc
les
add
add
add
xor
xor
mov
or
shl
pusha
dec
xchg
adc
xchg
add
add
sub
or
and
or
and
test
inc
inc
add
jo
dec
dec
bound
mov
inc
and
xchg
dec
pop
add
add
push
dec
push
mov
xor
inc
mov
and
add
adc
call
add
add
mov
enter
out
inc
and
add
sbb
pushf
add
inc
push
adc
add
inc
inc
dec
or
nop
pop
adc
sbb
add
push
sub
sub
dec
add
adc
adc
sbb
rol
ltr
xor
inc
xchg
add
nop
xchg
add
in
sbb
pusha
push
sub
adc
test
add
sub
push
inc
or
test
add
add
adc
add
dec
adc
les
cdq
and
call
add
mov
adc
or
sub
add
add
inc
or
dec
add
adc
add
add
pop
add
or
push
add
and
add
or
add
xchg
inc
add
adc
or
and
or
add
sbb
add
add
les
pusha
add
add
add
inc
and
xor
add
and
push
add
add
mov
add
pusha
adc
add
and
inc
add
add
add
add
sub
add
cmp
ins
adc
add
xor
dec
adc
inc
mov
inc
or
add
xor
adc
rcl
nop
dec
cmp
add
and
add
push
add
xchg
adc
sub
push
fmul
add
add
or
inc
inc
loop
adc
adc
sub
pusha
adc
cdq
add
inc
add
ret
add
test
adc
add
jne
sub
xor
add
add
sub
inc
rol
pusha
mov
and
mov
push
inc
add
add
add
add
add
add
mov
add
and
mov
add
sub
les
add
add
add
inc
test
and
test
mov
aaa
inc
inc
and
add
inc
inc
ror
inc
ret
push
xchg
bound
or
or
int3
dec
xor
lods
inc
push
push
add
test
mov
cmp
mov
mov
add
or
inc
or
add
xor
add
add
and
leave
adc
or
add
add
inc
and
and
adc
ret
add
adc
inc
test
push
pop
add
adc
inc
xchg
mov
fiadd
and
push
or
push
or
adc
ret
add
add
add
or
cwde
sbb
test
and
add
mov
test
and
jo
add
mov
mov
push
and
add
and
and
add
add
adc
sub
add
adc
inc
or
adc
add
push
add
pusha
mov
popf
xchg
add
inc
add
call
xchg
les
adc
add
add
mov
adc
sbb
add
or
add
or
inc
adc
add
pop
or
or
les
pop
mov
cmp
sahf
xor
stos
adc
add
sbb
aaa
and
lea
push
push
jo
mov
nop
inc
fwait
and
and
add
add
leave
and
add
dec
push
test
add
add
and
add
and
pop
add
inc
or
adc
test
mov
jb
retf
or
xor
mov
inc
or
fs
sbb
add
or
xor
and
dec
ror
sub
fsub
sbb
add
fadd
inc
mov
or
and
mov
inc
and
inc
nop
add
add
cmp
mov
add
xor
rcl
add
add
adc
add
add
add
or
or
add
mov
sub
add
add
cmp
add
inc
sbb
add
adc
sub
add
and
add
aam
add
test
add
and
and
add
push
push
adc
add
sbb
adc
adc
xor
xor
add
add
add
or
mov
inc
adc
add
jo
mov
add
add
rol
add
add
add
push
add
or
and
push
add
adc
imul
sub
lods
inc
cwde
adc
sbb
test
pop
inc
add
adc
and
add
add
inc
xchg
lds
test
adc
test
and
add
loop
add
push
add
add
push
pop
add
dec
mov
add
enter
cwde
mov
add
inc
pop
add
cmp
add
pop
add
sub
add
pop
add
push
pop
add
push
pop
add
rcr
add
pop
add
jb
add
call
add
pop
add
je
add
adc
add
pop
add
pop
pop
add
add
add
sahf
pop
add
pop
add
mov
pop
add
sbb
add
pop
add
and
add
pop
add
lock
add
fcomp
add
pop
add
mov
pop
add
pushf
pop
add
cmp
jb
add
loop
add
jo
add
mov
add
pop
add
push
pop
add
or
add
neg
add
add
pop
add
mov
aam
add
sbb
pop
add
cmp
add
loopne
add
enter
add
add
pop
add
push
pop
add
in
pop
add
or
sub
add
add
dec
pop
add
pop
pop
add
push
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
ins
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
add
outs
bound
inc
ins
ins
outs
arpl
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
push
dec
outs
outs
add
add
je
jns
je
ins
push
outs
ja
jb
je
je
jae
add
add
je
imul
je
add
add
outs
bound
dec
popa
outs
fs
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
inc
gs
gs
imul
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
jne
jb
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
jb
jbe
je
push
jb
imul
push
add
add
je
inc
push
add
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
fs
imul
add
add
inc
jb
gs
imul
add
inc
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
push
push
inc
push
xor
cs
ins
add
add
dec
outs
popa
fs
je
imul
inc
gs
jns
je
ins
dec
gs
imul
push
imul
popa
jae
push
add
add
push
gs
ins
addr16
je
ins
dec
outs
je
add
inc
jb
popa
je
push
imul
push
add
add
je
gs
popa
addr16
add
add
je
jne
jae
jb
outs
jae
add
add
fs
imul
add
outs
fs
gs
popa
addr16
add
add
push
gs
jne
jae
jb
add
inc
gs
ins
addr16
je
ins
dec
outs
je
add
dec
jae
imul
add
push
gs
arpl
ins
ins
push
popa
outs
add
add
inc
gs
inc
add
add
je
outs
jb
addr16
jne
fs
imul
add
jo
je
push
popa
addr16
add
add
inc
gs
ins
imul
je
add
dec
imul
add
add
jo
imul
add
outs
jae
popa
je
dec
gs
popa
add
add
inc
imul
outs
ja
add
add
ins
gs
jae
inc
inc
add
add
je
outs
jb
addr16
jne
fs
imul
add
jae
gs
push
popa
jb
ins
gs
jb
dec
outs
outs
push
add
add
jae
push
jne
je
gs
popa
add
add
outs
dec
gs
jo
add
add
push
imul
outs
outs
ja
gs
popa
addr16
add
add
push
gs
jae
addr16
add
add
inc
gs
popa
jb
outs
je
add
inc
gs
imul
outs
arpl
add
add
je
ins
addr16
je
ins
add
add
inc
outs
popa
bound
imul
add
inc
push
js
push
add
add
fs
arpl
push
add
add
jae
dec
gs
popa
addr16
add
add
push
outs
fs
ins
addr16
je
ins
dec
gs
popa
addr16
add
add
je
imul
add
je
arpl
ins
ins
push
outs
jae
add
add
ins
outs
addr16
outs
js
popa
jb
ins
push
add
dec
xor
cs
ins
add
add
je
ins
je
add
add
je
je
arpl
bound
arpl
add
inc
gs
ins
imul
pop
jmp
test
xlat
call
fistp
mov
aam
pushf
pop
pop
pop
mov
aas
test
xor
ret
ja
mul
shl
jbe
scas
lea
cmp
add
add
in
sbb
mov
popf
jns
xchg
call
add
or
out
adc
or
xchg
xchg
test
aaa
rcr
xchg
cwde
or
jg
mov
cmp
ror
adc
retf
pusha
jp
cmp
fld
call
add
(bad)
fmul
out
and
lahf
(bad)
sbb
jle
cmp
mov
jp
push
or
in
imul
push
push
in
out
add
jmp
add
push
jmp
add
push
in
mov
leave
mov
push
inc
cdq
loop
test
xor
imul
jmp
mov
data16
push
push
in
push
jp
mov
sbb
sbb
jp
mov
nop
mov
cs
push
in
mov
or
ja
sahf
pusha
scas
sub
or
mov
sub
inc
ja
sbb
pop
mov
paddsb
punpckhbw
cwde
add
push
in
das
adc
imul
(bad)
in
paddsb
and
push
in
mov
jp
mov
bound
or
addr16
popa
mul
or
sar
mov
in
call
add
push
in
xor
add
ret
and
and
cdq
inc
add
sub
add
jecxz
add
cmps
bound
dec
movs
inc
sub
mov
fild
add
in
mov
shr
test
push
xchg
fistp
mov
jle
and
imul
dec
mov
out
fisubr
ins
add
movs
adc
pusha
(bad)
in
cmc
or
bound
ins
push
in
cmc
or
bound
add
scas
pop
dec
mov
aam
mov
jmp
jp
mov
pusha
in
sbb
ja
pop
rol
cmc
or
fucom
das
rcl
push
adc
and
add
(bad)
cmc
pusha
and
lahf
pop
add
sahf
jp
add
das
mov
push
push
jne
pop
ficom
sbb
fwait
sbb
xchg
in
jg
or
cmps
or
test
push
xchg
fistp
lods
pusha
cmc
clc
sub
pop
imul
imul
push
fwait
cmc
aaa
cmp
xchg
push
jns
ror
syscall
push
in
mul
pop
jmp
sbb
call
sbb
jmp
add
and
add
cmp
div
jl
test
fmul
outs
push
fwait
loope
or
jns
adc
aad
dec
cmp
xor
adc
jg
cwde
(bad)
mov
inc
stos
adc
in
imul
add
adc
out
loopne
(bad)
out
loopne
mov
jp
push
and
add
rcl
test
jmp
add
mov
arpl
or
or
mov
push
in
jmp
lds
mov
jp
push
in
loope
sbb
in
addr16
mov
jb
int
push
or
test
clc
aas
loop
(bad)
sbb
in
loope
adc
adc
stos
push
nop
out
fbstp
das
clc
(bad)
ja
and
lds
mov
lds
stos
push
and
mov
repz
push
out
fisubr
cmp
sbb
in
loope
sbb
stos
cmc
mov
push
scas
mov
out
push
push
in
das
cmp
sub
push
in
sbb
push
mov
jmp
stos
push
mov
imul
shr
push
aad
xor
cwde
jecxz
xchg
call
cs
and
jp
mul
rol
imul
mov
cmc
adc
shr
xchg
fild
sbb
mov
inc
fbld
(bad)
xor
(bad)
(bad)
xor
lock
mov
fild
sbb
add
call
sub
sbb
mov
call
bound
imul
jbe
jo
jmp
dec
out
imul
in
xchg
push
in
addr16
popa
idiv
add
imul
and
loopne
(bad)
sti
xchg
add
sub
push
cwde
sti
xor
imul
ja
jp
pusha
out
hlt
cmp
or
xchg
jecxz
stc
dec
ja
not
dec
xchg
or
and
mov
sub
and
sbb
in
adc
movntq
add
jns
jecxz
cmps
add
cwde
ss
mov
aad
xchg
lds
pusha
or
lods
fisttp
or
call
data16
sbb
les
pop
or
in
pop
add
sub
fistp
or
inc
push
push
mov
xchg
inc
pusha
fild
in
push
jecxz
cmc
cld
and
pusha
mov
or
jecxz
mov
loope
nop
sti
ds
inc
cdq
fimul
fwait
or
jecxz
xor
add
mov
sub
sub
scas
add
loop
add
mov
cmp
ret
addr16
test
imul
cwde
in
mov
push
and
push
push
mov
add
call
mov
push
sahf
cli
stos
pusha
jmp
mov
call
int
push
or
add
pusha
test
jmp
(bad)
hlt
fistp
mov
or
imul
push
ret
add
ds
xchg
daa
ret
jae
in
cmp
cmps
xchg
out
fst
imul
int3
arpl
cdq
xchg
int3
or
push
mov
and
mov
lods
ja
jmp
(bad)
outs
je
pop
enter
pop
inc
fistp
cmp
sbb
cmp
outs
push
clc
cwde
loopne
xor
jmp
inc
inc
push
retf
loope
xor
sar
sti
xchg
(bad)
loopne
mov
movs
shl
loope
cld
fstp
mov
mov
aaa
pop
inc
out
adc
add
pop
test
sub
jmp
mov
inc
cld
std
fcmovnbe
xchg
cld
outs
push
stc
mov
xor
dec
dec
jge
dec
push
js
mov
ins
xlat
(bad)
lock
pop
xchg
aam
push
mov
lds
fmul
push
dec
test
ret
fmul
fs
add
dec
out
add
dec
out
rol
add
stos
inc
cmc
lods
and
ins
sti
pextrw
pop
repnz
repz
push
imul
ds
jno
cmc
dec
xchg
ja
xor
pop
and
ds
leave
push
(bad)
push
or
je
jge
scas
xchg
test
or
cmp
(bad)
xor
inc
push
fnsave
shr
pop
idiv
stos
add
lods
retf
jecxz
mov
popa
push
cmp
mov
loope
inc
mov
mov
or
inc
leave
cdq
jae
es
inc
xchg
xchg
cmp
test
(bad)
adc
(bad)
xchg
cmp
push
push
scas
mov
int3
mov
ins
(bad)
rol
call
and
out
or
and
push
pop
jecxz
add
add
push
jnp
(bad)
pop
or
gs
dec
movs
inc
push
jmp
inc
jmp
(bad)
fnstcw
cmovp
fs
sar
loope
aam
scas
mov
dec
(bad)
fcomp
out
movs
cmp
sbb
xor
sti
pop
rcl
adc
sub
je
addr16
arpl
test
pop
dec
push
fisttp
and
fnsave
lods
mov
push
push
les
hlt
in
add
inc
neg
jg
test
in
retf
or
mov
push
mov
sahf
jl
mov
rcl
or
xor
xchg
add
cmp
push
popf
es
dec
addr16
hlt
xchg
mov
dec
ja
fwait
out
sbb
jns
mov
push
repz
push
xor
pop
repnz
dec
push
aas
loope
mov
jp
(bad)
jle
add
aad
nop
jbe
jmp
imul
imul
cmp
fistp
loop
int3
lahf
sbb
push
cmps
or
jae
cmc
and
cld
outs
in
push
fnsave
mov
sbb
out
jne
daa
sar
cmps
in
jg
jmp
ja
ins
xchg
pop
sub
movs
je
add
and
lea
dec
lds
stc
push
sub
scas
std
cwde
mov
mov
fucomp
jmp
pop
pop
or
and
push
mov
(bad)
mov
jl
sbb
xchg
push
adc
das
pop
(bad)
aas
mov
mov
cmp
inc
pop
pushf
cmc
push
pop
pop
sub
xor
iret
ins
push
test
cmp
jmp
std
add
imul
cmp
mov
call
sub
cmp
jmp
push
sub
into
add
pop
cdq
pop
or
popf
mov
into
sub
out
int3
mov
jmp
lahf
jl
fdiv
in
inc
push
fmul
sbb
inc
jmp
mov
leave
inc
sbb
call
or
push
mov
cld
sub
ins
mov
cs
inc
mov
sbb
retf
xchg
add
fwait
stos
mov
mov
rol
out
cmp
ror
ret
xchg
mov
pop
xchg
jae
pop
push
loopne
mov
std
out
xor
xchg
sub
jecxz
push
or
mov
add
xor
retf
or
aad
pop
retf
div
and
fldenv
mul
add
sbb
jnp
inc
mov
or
outs
fdivr
pushf
adc
and
adc
adc
add
jae
jae
clc
xchg
imul
lds
loope
fs
sub
mov
push
or
es
or
adc
inc
add
add
std
rcl
xor
ficomp
stos
shr
push
mov
xchg
xor
loopne
push
je
inc
pop
shl
mov
adc
retf
add
push
loopne
jmp
lds
mov
(bad)
adc
and
lea
sub
out
add
pop
inc
dec
adc
dec
nop
adc
jmp
xlat
dec
pop
cmp
jo
jne
(bad)
movs
ror
aaa
test
jns
mov
jg
add
int3
std
jle
push
retf
sahf
icebp
sbb
repz
inc
mov
loop
fwait
lods
ins
fimul
lods
rcr
mov
mov
(bad)
add
mov
into
jmp
adc
lods
jmp
(bad)
jl
jnp
outs
mov
dec
or
cs
in
cmp
add
in
call
cmp
and
sub
(bad)
int3
sbb
push
mov
pop
test
(bad)
push
(bad)
push
gs
jmp
lods
add
repnz
jno
mov
test
repz
cli
jl
xchg
sub
aaa
push
adc
jne
mov
fmul
cmps
xor
sbb
aam
ins
pop
push
cmps
cvtdq2ps
xchg
repnz
jmp
jg
mov
push
mov
or
jmp
popf
jge
push
loope
or
sbb
push
call
add
or
repnz
or
dec
outs
xchg
push
rcr
mov
lds
or
cmp
out
clc
push
hlt
cmp
int
pop
(bad)
shl
sub
jmp
cmc
push
iret
mov
(bad)
xlat
cwde
fldcw
movs
ins
jl
or
call
sbb
test
movs
push
icebp
pop
leave
mov
retf
out
into
test
(bad)
test
mov
mov
arpl
jge
and
jecxz
enter
xor
adc
cdq
das
ins
sbb
jcxz
aam
inc
daa
aaa
push
jne
test
or
jecxz
nop
loop
mov
push
retf
cmp
mov
and
push
mov
add
and
iret
mov
xor
push
sub
aas
mov
repz
jb
lock
test
add
sbb
test
mov
add
test
jns
inc
mov
mov
fbstp
popa
mov
aas
and
jge
jp
cs
call
lea
add
(bad)
outs
and
pop
adc
fs
gs
add
xchg
imul
pop
or
add
out
std
ror
push
repnz
xlat
sub
cli
sub
push
popa
or
sub
sbb
dec
push
in
jge
fisub
rol
in
jecxz
sbb
inc
push
cmp
jmp
imul
pusha
jae
or
sbb
inc
repz
aam
or
imul
sub
push
mov
or
cmp
lea
mov
cmp
stos
repz
dec
mov
cwde
or
movs
fs
or
mov
lods
adc
jmp
xchg
xchg
cmp
push
mov
xchg
or
fidiv
cmps
mov
push
or
in
push
sub
(bad)
loopne
mul
pop
mov
adc
enter
or
sub
jns
ret
cmp
stc
mov
mov
add
out
shl
movs
js
push
add
dec
iret
outs
je
neg
pop
mov
jmp
call
outs
je
ficom
cmc
sti
jmp
es
inc
adc
mov
aad
dec
fisub
jmp
mov
cmp
dec
push
in
outs
cmps
add
fst
push
jle
test
or
xor
add
ret
mov
jns
sub
xchg
mov
mov
aas
and
and
push
mov
jp
out
jg
xchg
jmp
ss
sub
push
mov
inc
loope
dec
or
es
stos
imul
sbb
push
pop
test
jnp
ss
sub
stc
(bad)
cmp
cmp
push
mov
dec
jg
repz
out
lahf
imul
jns
scas
sahf
outs
out
into
out
sbb
fs
jecxz
into
xchg
mov
nop
or
lds
add
jmp
pop
xor
in
push
cli
jle
adc
popa
fild
fldenv
add
retf
mov
das
xor
int
lods
(bad)
aad
das
outs
add
add
add
or
sbb
idiv
pop
or
inc
jnp
or
aam
jns
jmp
add
sub
and
gs
lods
mov
jmp
push
stc
pusha
mov
lods
mov
add
push
iret
int3
scas
mov
stos
xor
mov
sub
out
pop
xchg
movs
imul
dec
add
sub
je
(bad)
push
lea
clc
les
sbb
add
adc
sbb
xor
xchg
sub
in
push
push
lock
mov
dec
add
mov
lds
mov
call
jno
pushf
rol
(bad)
arpl
mov
dec
xchg
and
jmp
cmp
dec
or
add
dec
int
std
inc
pop
fwait
xchg
cmp
fdiv
fst
ss
ins
dec
clc
push
call
jnp
mov
or
sub
ja
jge
adc
fucomp
jmp
add
test
mov
push
imul
cmp
rcr
add
jno
arpl
jmp
scas
xchg
std
mov
cli
or
cwde
xor
jmp
xor
es
aam
addr16
mov
push
pusha
add
push
push
pop
xchg
ret
jmp
mov
add
xchg
pop
push
retf
adc
push
xor
add
mov
jmp
cmp
mov
clc
int3
xchg
push
addr16
into
xchg
dec
dec
cld
add
mov
xor
sbb
mov
(bad)
sbb
xchg
jmp
sub
ins
lock
inc
adc
and
add
pop
out
lds
shr
stc
mov
nop
ins
xor
mov
pusha
fist
adc
xchg
lods
jle
outs
push
mov
cmp
cmp
dec
leave
push
cs
fs
mul
add
cdq
sbb
call
adc
std
pop
sbb
ret
les
xchg
sbb
aam
push
push
jmp
imul
push
or
lods
jle
jmp
mov
mov
adc
pop
or
push
jmp
xchg
shl
into
test
dec
jnp
or
aad
ins
mov
push
push
or
cmp
outs
jp
mov
hlt
or
push
mov
mov
mov
mov
pushf
lea
adc
popa
jmp
sar
add
in
pop
cmp
pop
mov
(bad)
pop
in
xor
in
js
ds
js
iret
and
mov
add
fwait
push
lahf
ret
cmp
cmp
dec
inc
sar
lahf
inc
mov
stc
data16
ficom
das
add
push
or
mov
iret
int
mov
sub
dec
inc
fidiv
das
repnz
daa
out
loopne
and
add
xor
push
retf
jle
test
les
lahf
mov
push
mov
adc
in
add
push
adc
xchg
mov
cmps
adc
mov
sub
ror
pop
dec
fild
sar
inc
or
stos
or
jmp
mov
push
dec
pop
sahf
stc
xchg
or
xchg
sub
mov
ret
(bad)
sub
inc
or
cli
or
lods
cmc
scas
mov
adc
xor
jl
push
and
jb
int3
lods
test
(bad)
cli
mov
call
sub
outs
mov
sbb
xchg
pop
add
loopne
stc
add
sbb
mov
(bad)
mov
jno
add
adc
call
cmps
xor
jmp
mov
(bad)
mov
adc
inc
or
les
jmp
add
out
sub
push
repz
cmp
mov
inc
add
lods
push
sub
mov
or
jno
popa
dec
and
lock
jmp
or
in
scas
loope
and
mov
xor
pop
iret
push
out
add
bound
ds
or
fmul
sbb
or
xor
out
or
or
(bad)
push
aaa
stos
test
mov
mov
test
mov
icebp
or
xor
jnp
adc
mov
pop
mov
daa
or
fist
xchg
jle
hlt
push
repz
xchg
push
push
fprem
leave
outs
inc
cs
jp
xchg
shl
xchg
add
mov
inc
xchg
xchg
leave
jmp
xlat
jne
test
arpl
adc
adc
pop
push
fisub
push
add
mov
test
sub
xor
pop
enter
pop
scas
(bad)
xchg
pop
ins
jmp
aas
mov
dec
mov
adc
jmp
pop
ins
imul
pop
push
push
push
retf
cs
sbb
ss
outs
inc
xchg
arpl
and
xor
fdiv
cli
(bad)
adc
adc
sbb
out
lea
out
mov
sub
push
out
out
into
xchg
repnz
mov
in
imul
cdq
stos
icebp
xor
ss
dec
or
jl
test
rol
xor
(bad)
sbb
sub
push
inc
or
mov
fimul
cmp
cli
bound
lds
call
or
daa
and
jmp
pop
neg
jne
xchg
or
dec
rol
or
cmp
in
ja
or
sar
cli
push
shl
jnp
mov
or
mov
push
imul
fsubrp
xor
mov
out
sub
cmc
mov
inc
push
addr16
loopne
shl
fcomp
adc
cmp
repnz
inc
and
push
or
sbb
adc
fisttp
stos
cmps
sub
or
aaa
movs
jb
jmp
mov
cmp
or
shr
mov
fsub
mov
push
in
ror
xchg
stc
cli
mov
in
mov
pop
ja
push
and
dec
pop
mov
push
loopne
sahf
ret
or
aam
adc
jmp
mov
mov
or
fisttp
in
or
pusha
jecxz
dec
jmp
mov
push
fistp
out
aas
or
xchg
push
sub
addr16
adc
pop
dec
add
jne
fadd
push
mov
sbb
jmp
mov
pcmpeqw
std
mov
or
adc
or
int
push
push
mov
int
fisub
jmp
xor
(bad)
jg
push
add
pop
mov
nop
cld
fwait
mov
out
neg
sub
mov
pop
pop
clc
push
clc
add
je
sar
pop
mov
push
pop
sbb
add
rcr
repnz
pop
pop
mov
fnstenv
xchg
ins
or
fsubr
xor
and
adc
js
sub
mov
or
retf
jmp
jmp
xchg
xchg
push
aad
jmp
or
es
sub
cs
mov
mov
ja
in
enter
stc
add
loopne
nop
cmps
dec
jb
or
aad
pop
inc
jmp
cmp
push
push
not
enter
int3
sbb
sbb
dec
sub
push
mov
outs
add
aas
arpl
and
xchg
sbb
mov
inc
mov
push
std
fistp
jmp
mov
repz
add
pop
jg
repnz
pop
cwde
mov
mov
cmps
inc
or
in
dec
(bad)
repnz
mov
mov
push
add
(bad)
es
xchg
sbb
adc
add
mov
in
adc
retf
dec
and
add
push
pop
loope
and
push
jb
test
mov
stc
xchg
mov
out
inc
iret
add
cmc
jne
xor
mov
in
fisubr
not
push
lods
add
aad
xor
aad
mov
jp
add
mov
xlat
ror
xchg
xor
in
fild
(bad)
mov
sbb
jmp
inc
cmp
cli
push
pop
fimul
pop
push
mov
sbb
dec
add
stc
inc
jmp
adc
lea
jp
aad
in
idiv
hlt
fnsetpm(287
adc
idiv
out
jmp
or
mov
mov
mov
in
std
mov
data16
int3
or
test
or
dec
mov
cld
inc
push
mov
test
jp
add
test
cli
repz
aaa
adc
aam
lock
ins
into
call
scas
je
or
cmp
sub
fcmovne
bound
jmp
ja
sub
pop
adc
push
popa
xchg
xchg
sahf
pop
sbb
and
sahf
mov
push
mov
pop
ja
mov
nop
outs
and
push
inc
or
mov
jno
dec
mov
sbb
aas
mov
int3
(bad)
test
add
or
jle
fnclex
jmp
int
cmp
ins
movs
mov
pop
cmps
add
cmp
fst
add
div
dec
(bad)
call
(bad)
and
int
lods
add
shl
push
imul
or
scas
and
inc
dec
call
or
pusha
cmp
xchg
call
xor
jbe
add
push
mov
add
add
test
jnp
(bad)
lock
adc
popa
push
push
fild
cmp
sub
test
cmp
pop
mov
mov
loopne
cwde
stc
jne
lds
(bad)
pop
adc
sub
or
cmp
xchg
mov
out
cmc
mov
out
iret
rcr
mov
inc
cmp
jmp
enter
je
mov
add
ret
fucomp
adc
arpl
js
lods
jl
vmread
jg
test
adc
iret
ss
shr
aam
into
xor
into
mov
or
jne
mov
dec
fisttp
jmp
gs
retf
imul
ret
imul
call
xchg
push
push
sub
sub
int3
push
add
fdivr
and
test
mov
sbb
pushf
add
xor
inc
mov
push
xchg
das
fwait
mov
mov
add
rcl
xor
push
mov
(bad)
xor
clc
xchg
into
xchg
jns
das
push
sbb
stc
out
and
add
pop
dec
outs
fisubr
jno
mov
xlat
or
xchg
add
inc
pop
rol
(bad)
or
sub
mov
mov
int
mov
mov
in
inc
ja
popf
rcr
scas
std
push
pop
test
(bad)
jmp
jl
push
xchg
mov
jmp
out
add
inc
ins
dec
fld
iret
fmul
scas
ins
push
fsubr
repnz
lahf
out
sbb
cmp
inc
pop
mov
das
jmp
outs
lock
inc
xor
out
daa
cmp
pop
data16
in
inc
mov
or
cmp
lds
xchg
mov
rcl
imul
push
sbb
loop
dec
jmp
or
sbb
jmp
adc
(bad)
pushf
cmp
mov
lds
cli
aad
int
(bad)
daa
imul
push
cmp
js
or
sbb
xchg
out
cmc
mov
mov
inc
jmp
pop
inc
stos
add
pop
adc
add
les
fist
lods
or
sbb
aas
sti
jmp
and
das
push
mov
call
aaa
test
fild
loop
(bad)
jmp
cmp
push
in
push
inc
dec
pop
test
mov
xchg
xor
aam
mov
je
jmp
call
int3
shl
(bad)
das
imul
mov
sbb
mov
ret
mov
or
loope
push
loope
pop
cmp
jae
int
push
mov
sbb
jl
add
jmp
das
inc
cmp
and
add
(bad)
into
imul
push
aam
outs
sbb
xlat
xor
sbb
jle
or
daa
mov
nop
mov
jb
jbe
js
or
jmp
or
jnp
push
jle
pop
iret
nop
xor
jmp
jne
dec
and
jo
or
sbb
mov
sub
or
std
sub
jmp
loop
cmp
popf
sub
scas
mov
mov
icebp
out
add
push
push
cmps
inc
ret
and
imul
out
arpl
(bad)
mov
mov
xchg
inc
hlt
mov
mov
into
add
jl
push
add
jno
lds
pusha
and
pop
add
dec
add
mov
call
adc
scas
xor
int
jecxz
jnp
push
(bad)
jmp
stos
jbe
cmc
out
pop
push
jmp
pusha
inc
jmp
or
in
iret
sub
in
in
aaa
xchg
and
fsub
std
dec
loope
pusha
mov
mov
sbb
xor
aad
pop
push
sbb
mov
add
pop
and
aam
das
jns
jo
dec
and
shr
inc
mov
mov
scas
fnsave
ins
mov
xchg
jae
xchg
clc
(bad)
retf
jp
lods
int3
(bad)
mov
sub
and
daa
jp
inc
ret
rcr
ret
or
int
aad
adc
pusha
or
pop
lods
add
jmp
cwde
ret
mov
cmc
push
mov
adc
xor
aas
imul
mov
xchg
mov
loop
pop
xor
ins
push
in
dec
ror
and
popa
stos
sbb
add
aas
jmp
xlat
std
or
icebp
sbb
inc
jp
jmp
mov
push
inc
mov
rol
mov
pop
push
add
into
into
cmp
lods
inc
sub
mov
cld
pop
xor
add
pop
pop
stos
stos
or
jge
dec
sub
pop
xor
jg
push
sub
push
pop
(bad)
jb
fmulp
pop
loopne
add
pusha
out
retf
pop
or
mov
rol
les
mov
or
mov
les
inc
scas
cmp
xor
mov
mov
(bad)
(bad)
mov
aas
or
sbb
jl
push
push
add
fwait
adc
or
int3
jle
cmc
jmp
cmp
xchg
dec
es
push
push
out
push
cmp
inc
add
mov
aam
neg
pop
in
xor
fnstcw
ret
out
pushf
inc
add
fld
cmp
push
mov
ss
std
dec
loop
cmps
sbb
jle
or
xor
xchg
fisttp
mov
scas
data16
ds
add
repz
dec
cmp
cli
jo
sub
int
int3
loopne
or
pop
leave
aaa
cmp
or
movs
ss
fdivr
mov
xor
not
addr16
ins
sbb
or
sbb
mov
sbb
add
cmc
in
lea
or
out
out
jmp
sti
fs
or
push
adc
mov
jle
lods
add
ins
jmp
push
mov
cmovg
jb
sahf
add
loope
push
mov
xchg
in
xchg
add
(bad)
retf
cdq
pop
out
test
adc
mov
sbb
pop
dec
test
inc
mov
aas
xor
iret
aaa
js
jns
jge
or
sbb
push
jae
ins
jmp
lock
imul
add
pusha
inc
push
mov
es
into
jg
or
xor
icebp
jmp
sub
jg
ffree
inc
addr16
ror
jmp
pop
or
add
lea
test
dec
jmp
xor
adc
pusha
push
push
retf
repnz
add
not
mov
ret
shl
aaa
sub
test
jl
sti
int
gs
add
inc
cwde
dec
jns
add
jmp
dec
sub
jp
add
mov
or
out
add
imul
sahf
ficom
(bad)
std
nop
jbe
inc
imul
mov
mov
push
shl
adc
aam
fmul
mov
iret
neg
data16
jmp
jmp
(bad)
jns
jbe
xor
pop
xor
mov
push
xlat
jmp
movs
loope
arpl
or
loope
lods
dec
jo
icebp
in
mov
out
(bad)
push
inc
imul
int
inc
sub
mov
cmp
xor
add
jg
or
push
cmp
push
aad
push
mul
inc
cmps
push
daa
js
dec
imul
fs
jl
ins
push
dec
jmp
dec
imul
fimul
xchg
loopne
cli
pop
mov
xchg
gs
call
ins
adc
jb
adc
jne
mov
sbb
add
pcmpgtw
or
int3
mov
jmp
sbb
push
fdiv
mov
ficomp
push
adc
loope
out
push
outs
nop
cmp
ins
std
shl
int3
mov
and
push
dec
jp
scas
xor
xor
in
jecxz
sub
jae
adc
adc
xchg
pop
jmp
jo
pop
nop
mov
clc
ror
ret
inc
iret
call
adc
retf
jp
add
xchg
retf
or
es
inc
jmp
pop
sahf
fadd
aas
mov
iret
sbb
jecxz
ins
jno
push
lahf
sar
fcmovb
sbb
fild
or
mov
inc
xor
xchg
dec
out
sbb
cmc
jg
cs
ins
lahf
and
or
jmp
lods
push
fdiv
xchg
pop
dec
mov
inc
(bad)
mov
in
ret
mov
mov
pop
jmp
loope
sub
fcmovnb
push
add
jg
push
fsub
(bad)
xor
or
ds
xor
addr16
int
mov
clc
push
add
add
inc
mov
or
jno
dec
jnp
inc
gs
fstp
ret
pop
sahf
lahf
add
mov
(bad)
cld
or
xor
mov
iret
jb
arpl
jae
(bad)
pop
fidivr
in
jp
stos
in
nop
out
cli
test
aaa
xchg
imul
cmp
lods
cmp
xor
movs
sti
jno
mov
dec
jne
scas
test
pop
inc
lds
gs
push
stos
mov
dec
scas
call
(bad)
cmc
mov
out
or
das
test
or
fwait
xchg
repnz
ins
xor
push
mov
hlt
inc
rcr
scas
and
or
in
sub
mov
add
lock
outs
xchg
mulps
and
cmps
movs
sbb
jg
add
mov
in
out
sti
push
in
mov
add
xchg
mov
sub
loop
add
xchg
jecxz
fild
daa
repz
imul
(bad)
or
not
stos
rol
jmp
jl
cli
pop
outs
imul
(bad)
and
jmp
cmp
pop
int
push
js
push
xor
iret
xor
sub
mov
push
or
lods
cmc
mov
pushf
popa
mov
ret
add
ins
inc
mov
sub
ins
cmp
pop
inc
bound
test
shl
pop
imul
(bad)
out
enter
iret
adc
jae
push
aam
dec
xchg
pop
xchg
stos
xchg
(bad)
inc
inc
add
repnz
mov
sub
ja
push
push
leave
mov
inc
xchg
loopne
add
mov
out
ins
push
xchg
xchg
lock
cmp
add
sbb
aas
cwde
or
cli
ret
ins
or
inc
fdiv
mov
mov
sub
std
mul
push
popf
call
pop
icebp
xor
test
cdq
les
stos
dec
dec
dec
movs
sbb
inc
or
sub
imul
jmp
test
mov
xor
stos
mov
(bad)
fwait
out
pop
inc
lock
xor
sbb
add
push
add
or
sbb
cmp
jmp
pop
jle
push
jnp
mov
repz
ficomp
daa
in
dec
fimul
jmp
push
mov
xchg
and
out
in
gs
mov
dec
jge
sub
retf
jo
arpl
inc
dec
cli
pop
lea
sbb
push
call
jge
push
cmp
inc
pop
mov
cld
cmp
retf
imul
les
push
sbb
je
mov
dec
jp
cmp
push
xlat
mov
dec
ffreep
push
add
push
sub
xchg
or
outs
inc
mov
cmp
pop
stos
sbb
sub
inc
cwde
xchg
jmp
je
repz
dec
int3
inc
imul
push
out
sbb
xchg
jb
push
sbb
pop
push
pop
sbb
xchg
pushf
xor
mov
push
cmp
push
and
(bad)
test
xor
cs
cmp
fisubr
or
mov
push
push
jmp
shr
fstp
add
test
xchg
or
rol
ret
push
fcom
sub
stc
enter
mov
into
pop
retf
jge
mov
xchg
pusha
ins
cli
mov
push
inc
loop
add
jae
sbb
cmp
sbb
jmp
cmps
dec
pop
into
pop
sbb
jae
mov
cmp
pop
push
mov
out
int3
mov
sub
mov
inc
xor
icebp
(bad)
fistp
cli
test
xchg
cmp
add
add
fisubr
sbb
xor
cmp
hlt
cmp
add
dec
xlat
mov
sbb
sub
add
test
shl
and
mov
ret
cmp
push
jp
inc
mov
mov
or
test
or
fwait
clc
xor
push
ss
and
je
(bad)
ss
sub
or
sbb
ins
push
cmps
icebp
add
dec
pop
pop
aam
xchg
ins
icebp
mov
shl
retf
sbb
(bad)
sahf
sub
mov
and
mov
mov
adc
aad
push
add
push
inc
or
add
xchg
int3
push
mov
cmps
leave
add
mov
out
add
iret
(bad)
hlt
xor
neg
mov
pop
sbb
sbb
xchg
arpl
sub
push
and
jmp
pop
arpl
pop
or
dec
scas
jp
push
jmp
add
fisttp
push
pop
and
sahf
add
push
or
and
sbb
pusha
repnz
or
jo
mov
mov
cmp
ret
mov
movs
ror
jmp
repnz
inc
sbb
pop
add
push
jno
scas
into
mov
out
mov
cmps
xchg
daa
xor
(bad)
sub
mov
das
repz
push
mov
and
mov
cmp
sahf
fcom
push
adc
(bad)
mov
sub
loope
mov
cmc
or
leave
shr
es
sbb
pop
jb
push
outs
(bad)
je
lods
and
add
shr
pop
sub
out
pop
push
lock
push
push
add
jae
int3
inc
popa
inc
and
bound
sti
pop
movs
cmp
jmp
es
and
mov
lahf
push
pop
jle
out
mov
enter
inc
loop
stc
neg
fld
in
push
aad
movs
repz
cmp
data16
call
xor
cmps
pop
jno
fild
cli
stos
pop
sbb
add
repz
cld
ret
cmp
push
stc
loopne
xchg
add
data16
mov
mov
movs
add
pop
add
xchg
xor
mov
add
push
js
neg
adc
xor
ins
ss
ror
pop
fld
cmp
out
cmp
add
jo
ins
(bad)
pop
cli
and
cwde
inc
aad
mov
cmp
sub
and
mov
out
push
loope
pushf
bnd
add
(bad)
idiv
pop
addr16
adc
ror
jmp
fisub
arpl
movs
sar
sub
jmp
cmc
aaa
shl
lock
or
dec
test
(bad)
fcomp
arpl
xchg
and
jmp
ds
mov
jae
push
imul
call
add
jge
in
jl
(bad)
std
pop
sub
jg
daa
jmp
and
mov
rcl
test
pop
mov
jbe
inc
lahf
jae
retf
push
test
inc
out
push
or
push
add
jns
rcl
hlt
push
lods
or
stc
in
ds
arpl
stc
imul
mov
jg
add
mov
out
and
inc
or
adc
jo
and
and
iret
call
shr
and
inc
add
retf
or
sub
aas
jne
inc
or
push
mov
sbb
cmp
xchg
shl
or
adc
xchg
pushf
aaa
sub
lea
cmp
and
and
mov
out
pop
push
shl
aas
fwait
outs
cmp
icebp
cmps
adc
sbb
ins
dec
or
cmp
lock
pop
rol
add
adc
inc
test
mov
dec
xchg
call
jg
sub
or
mov
fs
cmps
jmp
std
push
sbb
or
outs
xchg
inc
aam
add
retf
add
std
inc
jne
(bad)
sbb
not
loop
scas
gs
add
push
ins
sbb
cmc
div
enter
mov
jbe
gs
mov
jmp
movs
outs
lods
(bad)
movs
lods
or
jg
sbb
jmp
xchg
es
pusha
xchg
and
jb
nop
jmp
jmp
pop
and
sub
sub
call
stos
jne
push
mov
xchg
push
jp
or
lods
sub
jmp
jae
inc
out
movs
and
dec
pop
push
fs
add
jmp
enter
and
inc
hlt
add
jnp
mov
std
xor
in
lds
gs
sub
stos
mov
cmps
ret
cmc
test
inc
mov
inc
and
push
push
cmp
cmp
clc
loop
out
cmp
adc
or
loopne
mov
fistp
sbb
mov
inc
or
cmps
xchg
stos
inc
jmp
cdq
mov
sub
ror
dec
das
sbb
add
repz
push
mov
adc
cmp
pop
leave
stos
sub
lods
jp
or
loop
cdq
(bad)
push
pop
cmps
dec
push
cmc
mov
ins
fucomp
gs
or
bnd
xor
fdiv
std
test
xchg
arpl
in
push
cmp
js
fld
je
sbb
or
cmp
jecxz
scas
dec
and
dec
add
xchg
sub
cmp
pop
loopne
and
jns
rol
in
addr16
adc
adc
mov
sbb
or
jecxz
outs
push
mov
push
iret
fcomp
and
or
inc
pop
add
dec
je
addr16
inc
arpl
ins
jmp
sahf
test
sti
or
stos
hlt
add
call
imul
stos
push
mov
out
(bad)
or
add
repz
arpl
mul
push
mov
pop
add
mov
ud0
cmp
repz
xchg
or
sub
and
imul
mov
xlat
adc
mov
ficomp
dec
and
out
sbb
cld
ret
pop
push
std
lds
pop
aaa
or
test
push
outs
add
stos
pop
ret
imul
push
out
or
xchg
or
jg
(bad)
fistp
jo
and
repz
imul
adc
sti
out
fs
push
inc
call
xchg
jnp
jmp
dec
clc
adc
jae
cmp
es
into
push
mov
push
sti
xor
addr16
loope
les
sbb
add
or
pop
jg
push
inc
fwait
cmp
pop
call
cmp
loopne
sti
pop
fadd
ss
es
lds
push
inc
ss
or
call
daa
push
les
push
(bad)
sbb
mov
out
push
and
jmp
and
cmp
dec
js
out
cmp
test
pushf
(bad)
fild
mov
push
(bad)
cld
or
sub
push
fmul
xchg
rsqrtps
xor
movs
sbb
or
outs
imul
(bad)
and
sbb
cmp
xchg
lods
jmp
rcl
cdq
or
and
push
es
(bad)
push
jbe
std
sbb
pop
test
fistp
jmp
mov
movs
xor
popf
jno
inc
dec
(bad)
shr
add
push
call
jbe
movs
push
ja
or
adc
and
lods
lock
dec
mov
pop
mov
push
mov
and
jb
jmp
(bad)
mov
cmps
push
xchg
pop
jmp
shl
scas
sub
push
jmp
sub
jno
sbb
add
je
jns
int
mov
dec
loopne
or
aam
mov
retf
push
neg
xlat
fs
jmp
cwde
pusha
inc
movs
or
or
push
and
add
or
scas
push
ror
out
jo
enter
mov
shl
rol
and
or
or
inc
pop
stos
ins
fbld
int
and
sahf
jbe
mov
fld
xabort
or
outs
adc
push
add
test
mov
inc
or
sbb
cmps
push
cmps
push
lock
test
xchg
loop
jbe
imul
ret
adc
pop
jmp
push
xchg
inc
int
add
mov
add
and
mov
inc
inc
add
retf
inc
or
sbb
mov
shl
bt
push
test
xchg
shr
retf
pop
pop
scas
dec
add
dec
inc
ret
lea
push
out
adc
popf
pushf
sti
push
pop
or
cli
xor
fucomip
dec
and
aas
xor
push
push
and
push
jno
dec
mov
pusha
jmp
inc
inc
aam
xor
push
push
adc
mov
cli
outs
sub
xchg
cs
out
in
cmp
lock
shr
push
or
shl
lds
cmp
dec
jbe
mov
push
in
icebp
ja
add
mov
scas
pop
out
ror
cmps
int
pop
adc
in
add
jo
ss
inc
mov
add
and
call
out
adc
out
lods
popa
nop
xchg
shl
movs
stos
mov
adc
cdq
push
push
sub
std
cmp
and
in
mov
xlat
shl
mov
jnp
fmul
sar
call
add
xchg
push
and
sbb
fldpi
mov
push
mov
xor
jge
xchg
push
lods
in
movs
push
lds
sub
xchg
xor
xchg
hlt
inc
push
ds
mov
sbb
add
adc
sub
scas
adc
mov
enter
call
rol
sbb
add
adc
ds
inc
mov
das
pop
add
jecxz
xor
je
mov
jecxz
or
in
sbb
push
inc
sub
(bad)
aas
outs
xchg
xchg
ss
push
in
mov
push
data16
call
jns
xor
fbld
imul
ins
sbb
iret
loope
out
push
push
push
dec
aas
repnz
in
movs
fld
aad
lods
push
sub
in
cmp
scas
mov
mov
shl
push
fild
pop
jmp
or
das
mov
retf
inc
push
test
bound
inc
ins
popa
add
push
sar
mov
ds
inc
jnp
mov
aam
cmp
sbb
and
aad
push
jne
ffree
inc
xor
push
jmp
hlt
rcr
jmp
fwait
pusha
ins
pusha
xchg
xchg
add
outs
dec
inc
movs
lods
jmp
out
vaddsubps
add
repz
test
(bad)
mov
sub
daa
jg
cld
jmp
cld
cmps
stos
(bad)
in
scas
push
push
lock
out
jmp
jmp
push
or
loope
xchg
and
mov
push
mov
xchg
jmp
add
jge
inc
dec
or
dec
pusha
adc
jmp
mov
jne
dec
mov
mov
ds
jnp
out
add
xchg
(bad)
xchg
cdq
inc
push
jbe
loope
add
jmp
dec
add
push
dec
push
push
retf
int3
mov
xlat
mov
dec
scas
cmps
and
imul
shl
in
out
test
add
icebp
pop
push
loopne
add
pop
cmps
xor
daa
gs
int3
inc
mov
icebp
mov
in
stos
(bad)
inc
loope
rcr
xchg
push
gs
imul
pusha
test
int
xor
cmp
pop
sbb
sbb
into
xor
adc
xchg
jle
sub
jbe
push
jno
dec
lahf
cmp
push
ins
lock
or
mov
cmc
dec
leave
xor
xor
mov
adc
sti
add
mov
jmp
xchg
push
xchg
pop
pop
sbb
and
jp
call
shr
inc
fst
pop
out
iret
in
push
inc
imul
mov
fwait
out
or
stc
mov
hlt
or
xchg
imul
push
out
ins
mov
rcr
xor
stc
ja
arpl
mov
rol
or
or
ror
test
ficom
mov
mov
sub
lods
jmp
int
push
push
jns
mov
fimul
repnz
mov
jmp
push
in
cli
daa
nop
shl
pop
sbb
mov
dec
mov
pop
jmp
sti
jno
cmp
add
out
adc
sti
xchg
and
sbb
mov
and
xchg
int
push
imul
int3
scas
adc
pop
and
outs
addr16
outs
mov
test
xor
pop
xchg
add
imul
hlt
pop
push
ins
cmps
je
inc
cmp
cwde
push
sbb
push
ret
nop
or
add
mov
pop
sbb
ins
sbb
mov
shl
out
sbb
loope
push
inc
sub
mov
fldl2t
cmp
into
sub
fsubr
movs
rcl
outs
ret
test
es
inc
repz
das
aam
xchg
test
mov
mov
sbb
xchg
push
imul
xchg
jmp
pop
ja
xchg
in
inc
arpl
movs
mov
push
(bad)
jge
cwde
rol
test
jl
push
pop
mov
mov
clc
inc
cmps
retf
cmp
cmp
mov
inc
lds
mov
push
std
nop
rcr
imul
mov
xor
push
sub
je
pop
rcr
(bad)
pop
sub
(bad)
xchg
xchg
mov
mov
inc
xor
push
xchg
cmp
mov
push
inc
mov
cs
fisttp
xchg
in
xchg
mov
int
std
adc
or
in
jecxz
lock
jbe
pop
jmp
ss
jns
and
inc
fwait
mov
(bad)
jmp
test
pop
out
cs
inc
sahf
retf
fucomi
mov
imul
xor
or
inc
movs
mov
call
inc
jno
dec
(bad)
fmul
int
xchg
mov
shr
cmp
mov
mov
addr16
test
retf
dec
xor
xlat
jb
add
ins
inc
shl
jge
jno
loope
(bad)
fcmovb
mov
sti
(bad)
movs
xchg
jl
sbb
jns
sbb
movs
add
sbb
inc
shl
(bad)
and
and
mov
mov
mov
inc
or
sub
imul
mov
jmp
or
jmp
mov
mov
into
mov
xchg
(bad)
lds
(bad)
jge
jbe
cmp
mov
adc
push
jge
sub
inc
cmp
and
sbb
cmp
xor
clc
into
or
inc
jne
sub
push
add
add
jp
mov
or
jmp
call
mov
xchg
pop
pop
pop
bound
aad
ret
dec
fstp
lods
push
mov
stc
js
adc
lods
lods
pop
jmp
test
es
in
pop
shl
cld
jp
or
mov
mov
loopne
lds
sbb
push
int3
arpl
cld
(bad)
adc
jns
out
pop
or
fidivr
sub
int
lods
mov
mov
ficomp
data16
or
stos
push
fadd
xor
xor
jbe
data16
out
scas
add
ins
cmp
jecxz
push
icebp
add
add
mov
mov
mov
and
push
imul
add
cli
nop
inc
jmp
retf
movups
arpl
and
push
rcr
sub
inc
add
adc
jae
push
add
clc
cli
stos
push
sar
retf
xor
push
stc
pop
dec
jge
push
test
ins
(bad)
std
hlt
ins
add
fadd
mov
pop
xlat
adc
sbb
add
test
push
dec
mov
fld
push
add
cmp
icebp
push
inc
fmul
xchg
lahf
call
cwde
or
imul
jno
arpl
sbb
sub
in
mov
fstp
cmp
lds
(bad)
mov
push
and
fisub
popa
sub
mov
nop
xchg
inc
cwde
fwait
dec
push
imul
or
jbe
retf
or
std
dec
fst
bnd
cs
dec
(bad)
adc
add
jmp
and
les
mov
jbe
or
daa
jmp
inc
jge
outs
push
and
mov
mov
jns
enter
inc
jmp
push
sub
loop
pop
jl
push
mov
jp
dec
sub
shl
mov
repnz
or
sbb
loopne
jmp
xchg
xchg
out
shl
mov
cmc
ror
test
iret
and
rol
fsqrt
or
sahf
lods
pop
push
jmp
ins
push
add
imul
sub
outs
xchg
pop
pushf
mov
push
push
not
lods
adc
shl
ins
add
stos
lea
addr16
dec
xor
(bad)
sub
fsubr
mov
imul
jmp
call
scas
push
jg
xchg
loope
mov
mov
aaa
mov
push
xor
sub
xor
push
mov
sahf
sub
shl
add
cmp
pop
aad
mov
dec
loopne
sbb
adc
push
dec
adc
ins
out
bound
sbb
rcr
imul
addr16
add
(bad)
loop
xlat
(bad)
cmps
mov
in
call
popf
push
(bad)
jmp
cmp
or
inc
(bad)
jmp
mov
loop
pushf
retf
pop
cld
sub
dec
sub
mov
jmp
aas
ret
lods
dec
call
mov
repz
mov
mov
popa
push
scas
jmp
inc
sbb
or
std
mov
jp
jmp
jbe
adc
xor
jmp
(bad)
stos
in
jle
push
mov
pusha
cmps
add
jo
ja
or
aaa
or
(bad)
xor
mov
sub
je
xchg
cs
inc
mov
jo
not
out
inc
or
adc
xor
or
outs
dec
and
jmp
and
arpl
xchg
push
push
jge
sbb
push
sub
test
dec
mov
hlt
mov
sti
ds
test
dec
out
sbb
ret
or
imul
pushf
jno
loopne
mov
lock
pop
repz
sbb
dec
mov
jmp
add
sbb
dec
mov
add
xchg
out
add
sub
es
sub
push
bnd
lahf
mov
in
sub
enter
pop
outs
jle
je
jmp
fsub
cmp
cmps
mov
adc
mov
je
repz
add
push
mov
add
push
shl
gs
jl
in
loop
loop
jmp
ja
jmp
into
dec
imul
loope
mov
call
push
in
fcomp
fst
or
scas
lods
add
std
stc
xlat
lods
xor
ins
or
pop
aas
pop
xchg
pop
fwait
push
push
leave
pop
inc
sbb
sbb
repz
adc
fs
dec
jp
cwde
into
add
into
mov
int
jge
fcmovne
sub
ins
pop
mov
or
adc
repz
sbb
stos
call
lods
in
clc
dec
ret
lods
sti
pushf
or
or
and
ret
rol
sbb
in
cmps
inc
call
jo
mov
xchg
mov
outs
cmp
mov
ret
fadd
aas
jmp
dec
sbb
or
push
ss
call
push
das
xchg
push
inc
std
outs
test
aad
adc
fisubr
out
mov
push
push
and
dec
sbb
mov
nop
push
retf
nop
push
jmp
mov
rcr
inc
mov
in
cli
rol
xchg
fbld
div
ret
popf
lods
jp
push
jmp
aad
mov
bound
cmp
add
sar
xchg
xor
xchg
stc
and
inc
jbe
mov
or
retf
sahf
xchg
and
js
(bad)
push
or
lods
iret
cli
push
or
or
test
into
sbb
clc
stos
in
imul
adc
jl
icebp
cmc
in
xchg
bound
pop
popf
fimul
xchg
add
add
fs
jbe
pushf
mov
sbb
pop
push
sbb
fdiv
cld
jb
xchg
xor
ret
adc
mov
mov
movs
xchg
cld
inc
int
cmp
dec
inc
jmp
mov
nop
push
or
and
jo
jmp
(bad)
in
sub
mov
push
(bad)
xlat
cmp
fist
stos
inc
or
add
stos
sub
jbe
mov
inc
stos
in
lea
adc
(bad)
js
cmp
test
dec
repnz
jmp
mov
rcl
add
mov
dec
mov
mov
mov
jns
cmp
leave
mov
jmp
push
(bad)
loop
cmp
push
cmps
cli
enter
or
push
ret
(bad)
idiv
imul
mov
cmps
push
ja
gs
dec
ffree
mov
aam
mov
mov
dec
or
mov
sti
pop
sbb
adc
dec
scas
and
jmp
dec
rep
push
in
and
sbb
test
imul
test
or
mov
xchg
add
mov
push
movs
sub
jecxz
xchg
pop
push
pop
sbb
mov
je
mov
(bad)
xor
cmp
outs
jno
out
sub
jns
xor
cli
add
loopne
mov
es
cmp
mov
std
add
add
ret
test
cmovp
dec
xchg
xor
jp
dec
ins
pop
mov
pushf
pop
arpl
and
and
jae
push
(bad)
jmp
hlt
mov
hlt
(bad)
or
jecxz
sti
cmp
popa
xor
cdq
push
idiv
ins
push
in
mov
std
xchg
pusha
xchg
dec
loop
imul
mov
pop
lock
mov
sub
mov
sub
sub
mov
aaa
out
xchg
ins
mov
mov
arpl
pop
mov
dec
call
imul
outs
psubd
mov
pop
xor
std
aam
xchg
push
pop
jbe
and
jl
xchg
jno
mov
push
inc
ror
xor
and
jmp
cmp
sbb
retf
adc
jge
out
scas
mov
jns
or
not
std
jmp
dec
lea
imul
aad
add
mov
fnsave
ficom
pop
es
mov
das
sbb
add
std
push
hlt
mov
pushf
rcr
cmp
adc
or
or
popf
aas
iret
stc
out
or
xchg
jg
inc
jmp
scas
sub
push
out
popf
ret
call
mov
ds
push
imul
lahf
cdq
movs
out
popa
aad
push
cli
fsub
call
inc
retf
mov
loop
popf
pop
mov
out
or
les
leave
push
aad
sub
mov
sub
xor
pand
add
dec
push
fwait
stc
lods
ss
loope
fnstsw
out
inc
fs
jecxz
out
jmp
bound
adc
inc
neg
inc
inc
daa
mov
jle
sub
push
arpl
test
in
sub
xchg
pop
mov
adc
bound
fst
push
xor
push
shl
ss
cmp
sbb
aad
iret
arpl
push
xchg
and
in
jb
add
xchg
in
or
enter
ds
jmp
mov
imul
sbb
mov
jle
jg
vmovaps
add
or
push
cmps
stc
or
add
dec
fcomp
loope
push
push
push
out
fwait
sbb
jmp
cmp
adc
(bad)
mov
mov
or
add
or
pop
ins
cli
hlt
or
jl
push
push
js
repnz
inc
jmp
(bad)
sub
cmp
sti
pop
or
push
push
les
push
fldcw
fistp
xor
cmp
lock
int
and
jmp
xor
in
arpl
neg
nop
jmp
jmp
or
xor
in
scas
mov
cmp
jmp
dec
push
aad
fstp
add
mov
adc
mov
push
sbb
test
popf
mov
lods
or
aam
imul
pop
das
(bad)
imul
fs
pop
dec
in
ja
ins
js
(bad)
cmp
int3
or
dec
dec
lods
stos
add
add
fdiv
sysexit
push
sub
cmp
sub
movs
add
pop
call
test
pop
mov
ret
xor
sbb
sub
imul
sbb
test
aaa
pop
cmp
dec
je
push
xlat
xor
(bad)
shl
dec
pop
into
jg
push
mov
inc
inc
add
mov
mov
loope
pop
lahf
push
aad
jmp
add
sub
jbe
inc
shl
push
(bad)
cli
add
clc
sub
push
retf
adc
sub
dec
and
xchg
pop
sub
rol
hlt
xchg
iret
popf
int3
add
mov
sbb
out
xchg
aas
test
add
pop
stos
into
ja
sbb
xchg
sbb
xor
jno
ins
cmp
jle
adc
xchg
mov
mov
pop
jmp
pop
fsubr
ret
loope
dec
shr
stos
stos
pop
mov
fsubr
or
sbb
into
out
cmp
dec
or
aad
xchg
mov
(bad)
arpl
push
adc
mov
stc
add
inc
inc
and
jecxz
clc
pop
shr
daa
push
test
xchg
cmp
adc
jmp
iret
mov
scas
push
nop
sahf
in
sbb
jne
retf
sbb
dec
(bad)
daa
or
rol
mov
add
push
lods
out
pop
fiadd
push
jmp
jmp
mov
lods
(bad)
cmp
sub
pop
inc
add
pop
xchg
xchg
push
(bad)
in
jmp
movs
and
xor
fldenv
int3
sahf
in
cmp
or
bound
jg
jmp
movs
xchg
ret
into
jmp
fnsave
pop
je
mov
ds
xor
add
add
arpl
xchg
jg
or
mov
es
mov
xor
push
ret
loopne
inc
fimul
pusha
pop
repnz
stos
addr16
xchg
je
add
add
add
aas
jmp
dec
cmps
rcl
inc
sbb
push
jo
mov
jge
call
cmp
hlt
jmp
mov
dec
pop
ret
jl
push
cmps
les
dec
aas
jmp
and
imul
or
push
mov
pop
fild
push
pop
and
adc
cdq
test
(bad)
ror
dec
push
daa
push
not
add
add
or
call
rol
and
repz
aad
ss
xor
or
stos
jmp
ja
or
pop
dec
xchg
test
(bad)
leave
dec
je
sbb
mov
fdivrp
sub
sub
pop
push
int
and
out
fsubr
add
paddb
in
repnz
into
(bad)
inc
fldpi
add
sub
mov
(bad)
inc
cli
xchg
movs
add
into
xchg
in
stos
fldcw
retf
push
push
loope
jmp
xor
jne
push
stos
data16
leave
push
sbb
lahf
mov
shl
arpl
sub
in
pop
or
(bad)
dec
jmp
xor
jns
push
arpl
add
add
pop
cmp
xchg
inc
jl
or
jle
daa
std
jmp
das
gs
add
pushf
and
movhps
jns
inc
jnp
sbb
fist
jne
push
(bad)
adc
add
sti
cmp
inc
outs
pop
or
sub
mov
add
pop
data16
(bad)
ss
stos
sbb
mov
call
xchg
repz
and
ds
daa
mov
jp
fdiv
hlt
rcl
or
sub
sbb
mov
test
rcr
cwde
jecxz
xlat
mov
test
imul
pop
inc
rcr
lahf
xor
mov
dec
cmp
(bad)
or
int3
mov
and
sbb
push
pop
scas
sub
jg
push
dec
scas
sbb
jmp
mov
xor
cwde
pop
pusha
call
iret
adc
dec
test
rcl
test
pop
int3
xor
int3
in
sub
pop
jns
cmps
fstp
in
sub
push
addr16
mov
jecxz
icebp
jle
jmp
mov
or
movs
or
jp
clc
jo
in
push
jge
shr
pop
mov
aad
xor
and
inc
stos
cli
mov
test
cmp
cld
jno
out
fadd
pop
dec
push
clc
and
retf
std
mov
sub
jecxz
(bad)
push
(bad)
pop
mov
add
dec
retf
sub
mov
inc
push
iret
pushf
imul
inc
rcr
add
inc
push
mov
pushf
push
sub
fwait
sbb
push
sub
xchg
imul
xor
ins
pop
jmp
cmps
fistp
push
or
push
aam
cmp
int
xlat
push
pop
mov
push
not
cli
adc
pop
xchg
ins
sti
int
and
jmp
sahf
xchg
imul
test
pop
push
mov
in
jl
js
adc
add
dec
xchg
hlt
push
xor
xchg
jge
add
in
call
or
into
aas
js
jmp
and
inc
push
fwait
push
and
imul
xchg
aad
ja
movs
imul
in
cmp
icebp
(bad)
add
push
(bad)
mov
mov
sbb
(bad)
aam
dec
xchg
push
repnz
jmp
scas
cmc
mov
jne
inc
fdiv
fldcw
jmp
and
mov
xor
jmp
stos
or
ds
call
pop
push
jge
add
jmp
(bad)
stos
pop
ror
add
xchg
sbb
jecxz
xchg
and
mov
js
xor
cmp
arpl
fsubr
lea
inc
push
rcl
popa
xchg
call
test
mov
pop
pop
iret
pop
fsub
popf
loope
out
push
push
jnp
jmp
scas
mov
and
call
add
mov
call
or
cs
cmp
cmp
or
mov
lock
popa
into
sub
pop
inc
scas
es
sub
xor
rol
retf
xor
mov
mov
xchg
leave
add
iret
mov
push
pop
jbe
ss
dec
cld
sbb
repnz
loopne
lds
mov
jns
or
out
test
mov
mov
cmp
mov
icebp
mov
sti
adc
push
push
xchg
mov
aaa
test
dec
inc
nop
out
test
div
nop
or
jg
jg
adc
mov
out
or
fstp
scas
ja
dec
jns
in
push
xchg
add
dec
mov
lds
or
(bad)
in
cwde
fwait
jmp
ins
stos
rol
jne
lock
inc
mov
test
movs
repnz
imul
stos
retf
mul
xor
push
jmp
ss
scas
mov
push
pop
sbb
sbb
fadd
push
pop
fistp
pop
adc
jne
mov
jmp
out
nop
ins
xchg
adc
addr16
test
sbb
repnz
xlat
mov
or
jmp
push
out
lea
sbb
mov
xchg
mov
ror
inc
add
sbb
fadd
or
cmp
sub
test
jp
add
sbb
xchg
or
sub
mov
jae
icebp
pop
jmp
aam
push
cmp
adc
mov
mov
mov
pop
(bad)
leave
jae
mov
rol
adc
fisub
dec
push
add
aas
arpl
out
or
dec
or
ror
pop
cmp
hlt
shl
xor
push
out
mov
add
jle
test
sbb
aas
or
(bad)
clc
jae
push
or
pop
aam
push
ins
or
repnz
mov
les
test
ss
mov
sti
mov
std
xchg
mov
or
dec
movs
inc
ja
add
xchg
xchg
and
sub
call
lock
inc
xor
inc
push
xchg
clc
mov
cs
adc
xor
push
xlat
in
inc
icebp
pushf
mov
les
ret
mov
pop
test
ins
popf
adc
push
jne
or
and
cmp
jmp
adc
pop
cmp
push
and
ja
xchg
ins
std
jp
cmp
cli
mov
sub
in
push
jmp
and
or
or
mov
out
je
call
xchg
inc
adc
jmp
jnp
popa
xchg
mov
mov
out
mov
add
mov
fsubr
stos
or
int3
adc
inc
shr
inc
arpl
loope
scas
(bad)
pop
xchg
add
lahf
imul
pop
push
push
xchg
je
sbb
push
xlat
aas
les
add
pop
jg
and
mov
push
in
mov
pop
cmp
ins
iret
mov
in
fnstenv
dec
sub
data16
sbb
mov
jnp
sub
push
sub
std
fcomp
repz
int3
dec
xchg
xor
or
sar
fild
movs
scas
or
push
add
push
add
mov
pusha
push
inc
inc
pop
ins
mov
dec
mov
and
iret
push
fmulp
sti
push
jge
mov
jno
cmp
jb
loopne
sti
xor
xor
push
push
jmp
inc
pop
and
push
sbb
push
sbb
cs
dec
push
mov
sbb
es
mov
pop
xor
out
or
mov
cmp
cmp
ds
lock
lods
push
mov
sub
mov
fsub
or
in
popf
call
and
iret
add
inc
inc
jmp
or
stc
push
int
dec
sub
jmp
or
xchg
or
lahf
push
int3
mov
repnz
ja
and
push
call
lahf
pop
sbb
push
inc
pop
sbb
inc
jmp
imul
bound
dec
popf
mov
push
pusha
out
loop
sub
add
clc
test
and
cmp
push
gs
shl
loop
add
jge
push
jae
jbe
or
(bad)
loopne
imul
mov
es
mov
add
fcmovb
push
in
xchg
add
xchg
pop
iret
fild
imul
ins
pop
mov
push
sbb
scas
adc
scas
movs
inc
int
dec
pop
sub
dec
and
pop
icebp
add
in
push
pop
mov
push
mov
dec
test
mov
jge
retf
mov
lea
icebp
and
ins
inc
xchg
pop
adc
push
or
(bad)
mov
js
sub
push
cs
jmp
rcr
inc
scas
(bad)
jp
add
ins
shl
js
push
push
sahf
sub
jbe
dec
mov
cwde
and
pop
lods
lahf
outs
imul
xchg
dec
mov
lds
xchg
cmp
add
and
mov
stc
sub
or
lds
mov
mov
sub
add
add
cmp
retf
in
dec
inc
cwde
xchg
fnstenv
leave
out
xchg
lea
std
mov
in
jmp
cmp
mov
sub
inc
retf
not
daa
adc
push
aas
push
loopne
ins
adc
(bad)
xlat
loopne
and
fldenv
sbb
bound
add
sahf
pop
mov
pop
int
lea
sbb
jmp
(bad)
dec
xor
test
sahf
jp
or
inc
jmp
push
and
loop
fstp
fst
xor
(bad)
jns
jnp
mov
cmc
sub
or
sbb
push
hlt
inc
sub
sub
int
jmp
pop
xchg
and
sbb
repz
inc
mov
int
cmp
cmp
int
xchg
add
ins
fdivr
sar
push
je
int3
push
push
imul
dec
gs
vprotb
les
xchg
adc
sbb
mov
jae
sub
inc
(bad)
jl
inc
mov
fld
mov
dec
frstor
fwait
jg
ss
int
cdq
push
(bad)
test
push
test
sub
and
in
cdq
pop
mov
and
in
mov
test
call
imul
xchg
xchg
cmp
jmp
retf
movs
scas
mov
addr16
push
xchg
imul
jle
dec
outs
jmp
fadd
push
xchg
(bad)
sub
xchg
test
pop
jp
or
cmp
ds
sub
or
outs
shl
test
retf
inc
add
dec
rol
cli
or
(bad)
cmp
int3
or
sub
push
dec
inc
mov
out
jmp
sbb
je
dec
adc
cmp
(bad)
push
mov
fsubr
mov
retf
sub
mov
gs
pop
in
scas
pop
push
test
sub
clc
call
lods
xor
xor
lock
sub
jns
pop
mov
mov
in
mov
fcmovbe
jmp
bound
dec
push
popf
push
cmc
sub
push
mov
and
sub
loope
popa
jnp
push
push
aad
loope
pop
(bad)
mov
jo
int
xchg
ja
repz
scas
(bad)
jg
movs
pop
rol
repnz
xor
sbb
icebp
cmp
adc
adc
xor
pushf
or
mov
jp
aad
icebp
push
xchg
jmp
xlat
in
push
jb
cmp
sub
adc
pop
in
pop
adc
out
and
test
and
loope
mov
bnd
fmul
popa
pusha
add
xor
adc
(bad)
gs
push
adc
dec
jmp
inc
xor
mov
mov
fstp
adc
in
sbb
xchg
push
imul
push
cmp
jecxz
jb
mov
mov
hlt
popf
outs
add
xchg
add
push
jne
add
adc
or
or
test
daa
jecxz
shr
jo
out
popa
cmp
pop
cmps
or
push
jns
jg
sub
(bad)
or
out
arpl
mov
xchg
xor
inc
xchg
pusha
mov
mov
jne
push
rol
neg
sub
dec
repz
jae
adc
in
mov
push
xchg
push
js
or
addr16
jbe
jmp
aas
cmps
adc
mov
adc
js
mov
add
mov
adc
out
push
(bad)
sti
inc
inc
ficomp
jmp
push
mov
xbegin
mov
cmc
jle
sbb
mov
inc
or
lds
fadd
lds
pop
inc
int
mov
push
jb
shl
cmp
fdivr
jmp
dec
mov
inc
inc
mov
cmp
fimul
push
or
and
mov
xchg
dec
or
dec
setl
pusha
push
jnp
xor
push
outs
arpl
jbe
push
stos
loopne
in
in
cli
in
push
dec
stos
inc
adc
mov
out
add
mov
or
sub
bound
cwde
loopne
jmp
popf
inc
iret
add
(bad)
or
mov
pop
and
add
jle
push
push
dec
cmp
add
pop
faddp
ja
cmps
dec
(bad)
repz
jo
mov
ret
pop
out
sub
and
adc
inc
leave
sub
push
(bad)
aad
push
jbe
std
(bad)
ins
cmps
nop
add
pop
not
jnp
push
das
pop
stos
cmps
(bad)
out
shl
ins
aam
pop
fs
fistp
sbb
dec
test
fidiv
add
mov
jae
inc
sbb
call
xor
pop
adc
rcr
cmp
in
mov
int
adc
ins
scas
pop
mov
pusha
jmp
xchg
lods
test
push
mov
loopne
mov
loope
fadd
imul
stos
or
scas
jg
mov
push
int
into
or
add
jle
sub
mov
or
cmp
jmp
add
lahf
sub
aas
add
scas
mov
in
shl
popf
and
ins
pop
leave
sub
std
push
scas
call
call
ja
jmp
icebp
call
add
outs
mov
cmp
add
or
sti
cwde
jmp
adc
aad
add
cmps
mov
mov
xor
ins
imul
adc
dec
mov
add
test
aaa
in
xor
(bad)
sbb
adc
xchg
xor
stos
or
jecxz
js
mov
je
iret
and
cmp
mov
lock
pop
add
inc
(bad)
and
ret
mov
outs
adc
js
xchg
cld
mov
dec
js
xor
mov
add
pop
xchg
mov
xlat
arpl
lods
jmp
mov
pop
add
imul
imul
sub
jp
add
ret
or
lds
push
add
stos
mov
pop
or
jl
jnp
out
prefetch
imul
xchg
es
aas
scas
and
pop
mov
cld
aam
(bad)
neg
add
das
lds
jb
or
aad
cmps
cmps
in
jg
movs
loop
dec
lods
repnz
fisttp
and
loopne
jmp
fdivr
test
(bad)
enter
jg
cwde
(bad)
nop
mov
jb
pop
ror
pop
adc
mov
aas
jmp
sub
imul
mov
push
in
xchg
stos
test
pusha
test
or
dec
cmc
and
mov
ins
xor
in
(bad)
xor
or
js
mov
test
mov
jg
addr16
int
fdivr
fld
iret
leave
or
sbb
mov
call
mov
pop
or
jmp
pop
cmp
ret
cmps
(bad)
in
mov
dec
dec
push
jb
daa
shl
fisub
or
sbb
sbb
xlat
pusha
(bad)
into
imul
xchg
or
icebp
jmp
jmp
fst
loop
push
push
inc
cmc
xchg
mov
fbstp
in
out
aad
sti
out
sbb
xchg
pop
loop
fild
push
jmp
mov
mov
loope
sub
jno
leave
outs
xor
or
sub
pusha
jmp
jl
int
in
daa
push
sbb
movs
sbb
mov
and
mov
and
jmp
in
(bad)
out
or
out
cmp
xchg
call
nop
arpl
fcomi
(bad)
and
dec
mov
dec
into
pop
and
imul
pop
sbb
xchg
and
ret
daa
mov
xchg
mov
sar
imul
and
icebp
inc
call
les
mov
add
and
mov
mov
cld
add
mov
xchg
jl
(bad)
pop
or
shl
adc
lods
dec
mov
ret
dec
xchg
xlat
addr16
and
mov
das
xchg
or
dec
fild
neg
jge
mov
mov
pop
adc
mov
jmp
jmp
xor
xchg
loopne
push
fcmove
pop
outs
out
lock
lea
test
push
cmp
xchg
mov
(bad)
fs
pop
cmp
and
jmp
(bad)
fild
add
or
ja
lds
mov
sbb
pop
or
fild
and
push
mov
cmp
add
xor
sbb
xchg
ror
shl
inc
jmp
push
jge
push
xchg
jmp
adc
jns
push
dec
stos
push
or
mov
adc
jmp
or
imul
fadd
pusha
lods
retf
stos
es
mov
jmp
les
mov
pop
stos
lods
jmp
stos
enter
push
jg
pop
or
and
ins
push
and
jge
jmp
sbb
dec
cmp
push
arpl
mov
pop
ja
pop
ja
push
or
je
pop
or
call
xchg
repnz
mov
mov
ss
mov
xchg
fwait
ja
mov
cli
mov
pop
cs
jns
xchg
pop
mov
cmp
add
xchg
pop
div
pushf
fidivr
sahf
jbe
int
push
movs
sub
daa
dec
imul
sbb
test
in
adc
pop
mov
movsx
xchg
out
mov
or
xchg
inc
and
lods
rol
and
mov
test
enter
shl
jg
mov
cwde
mov
inc
jae
test
mov
add
sahf
in
std
imul
xor
mov
xor
push
(bad)
je
addr16
pop
loope
fiadd
out
jmp
imul
lahf
or
and
pop
cmp
popf
and
mov
out
xor
fdiv
push
aam
push
push
dec
cmp
mov
les
test
jmp
sbb
pop
call
outs
jmp
imul
mov
jp
push
stos
mov
fld
xchg
in
call
push
jnp
xchg
push
mov
lahf
ds
xor
mov
fst
imul
nop
or
fidivr
add
jge
xor
inc
jmp
adc
pushf
stos
and
add
or
test
jo
dec
in
mov
jmp
mul
cmps
inc
push
cmp
xor
jmp
sub
pop
xchg
xchg
and
and
outs
(bad)
jnp
jl
clc
loopne
xchg
aad
outs
ja
jecxz
ret
jmp
jmp
mov
cmp
(bad)
mov
imul
(bad)
jae
cld
int3
leave
dec
sub
pop
push
test
aaa
mov
ret
inc
sbb
pop
mov
data16
repnz
push
outs
mov
add
adc
and
pop
in
mov
in
sub
push
cmps
jmp
pop
sbb
adc
fdiv
jb
aam
pop
das
shl
jmp
push
out
pusha
and
lods
mov
or
xchg
movs
push
cs
in
push
mov
ror
loope
xor
(bad)
fistp
push
lods
lds
outs
inc
xor
in
xchg
dec
invd
imul
mov
ss
imul
pushf
movs
imul
jmp
pop
inc
push
mov
pop
xor
inc
mov
push
and
adc
sub
(bad)
mov
imul
and
popa
int3
or
dec
fnsave
cld
nop
mov
inc
jbe
das
cmps
imul
sub
fxch
aaa
mov
pop
std
fdiv
in
cmp
loope
or
das
retf
pop
jmp
adc
fisttp
cs
jmp
and
cld
and
or
cmp
(bad)
dec
fild
add
movs
in
ss
cmp
cld
xor
lock
dec
add
cmp
(bad)
jb
outs
xchg
pop
dec
imul
push
popa
xchg
(bad)
dec
jns
inc
out
pop
jecxz
scas
or
movs
add
mov
nop
or
into
push
adc
mov
sub
fwait
retf
bound
push
sti
jg
mov
mov
stos
jmp
popa
xchg
cmc
pop
aad
cli
arpl
js
inc
retf
sbb
outs
sub
cmp
or
mul
aaa
jmp
loopne
fs
dec
into
adc
int
cmps
pop
call
push
(bad)
shr
(bad)
or
cld
add
pop
pop
ss
sub
push
clc
out
xchg
dec
leave
xor
test
mov
sub
cli
cli
add
hlt
into
add
mov
rol
pop
lds
push
pop
ins
inc
fsubr
into
sbb
test
inc
test
push
stos
sub
sub
add
mov
cs
mov
hlt
push
or
repz
sub
add
mov
sbb
pushf
imul
fsubrp
movs
and
pop
cs
jmp
lea
or
pop
aad
or
mov
lahf
(bad)
xor
and
jb
add
imul
lock
das
xor
nop
jge
or
jbe
into
lahf
jmp
cld
outs
shl
sbb
mov
fsub
fisttp
stc
jmp
mov
xor
test
sub
fnstsw
retf
dec
and
cmps
cmps
or
jmp
fdiv
add
or
pusha
mov
xchg
jmp
mov
iret
mov
addr16
cs
call
add
jb
or
movs
mov
mov
mov
cmp
push
imul
xchg
add
add
mov
inc
arpl
cmp
adc
inc
pop
sbb
lea
sub
imul
cwde
mov
retf
fldcw
push
add
or
xchg
cmc
dec
cmps
cmp
push
adc
xlat
pop
retf
iret
cs
lock
cwde
xlat
push
inc
mov
push
xor
das
sbb
mov
push
push
xor
stos
or
xchg
cmp
jmp
lods
xchg
mov
push
xchg
shr
or
retf
ret
inc
pop
mov
fst
lods
les
fimul
mov
dec
sbb
retf
add
daa
or
dec
repz
mov
fisub
sub
dec
mov
lods
ror
std
xor
sub
aad
pop
or
cmps
rcl
pop
icebp
inc
pop
ret
int3
jg
inc
pushf
ds
icebp
out
add
mov
and
pop
or
leave
stos
adc
pushf
adc
xlat
mov
xor
fcomp
mov
dec
sbb
push
mov
or
sub
cmp
dec
or
ror
xchg
cli
push
movs
or
adc
imul
ins
cmp
or
nop
or
out
push
mov
jle
cwde
scas
pop
xlat
xchg
xor
xchg
addr16
push
ficom
sbb
pop
inc
push
jecxz
fisttp
int3
or
ins
add
test
movs
pop
adc
inc
xor
jmp
jne
push
addr16
cs
in
sub
gs
fisttp
stos
cmp
and
mov
(bad)
movs
(bad)
dec
mov
push
push
pushf
mov
cmp
mov
arpl
cs
inc
ret
xor
loopne
in
or
push
lock
mov
std
dec
add
cdq
ja
mov
cmp
movs
mov
jmp
inc
addr16
jp
adc
or
sar
fstp
jae
pop
sub
pop
scas
jl
xchg
push
pop
inc
jno
in
retf
add
repnz
scas
sub
cmp
push
add
jg
cmc
inc
retf
aaa
add
fcos
cmp
mov
pop
inc
iret
add
xchg
add
fcom
test
(bad)
dec
push
out
sar
jecxz
(bad)
sar
or
sbb
call
cmp
jbe
mov
mov
push
push
ja
nop
sbb
xor
jmp
je
push
add
mov
les
pop
fs
jns
xchg
rcr
add
or
dec
in
lock
cmps
ror
add
or
pusha
stos
outs
mov
inc
in
mov
mov
add
pop
jne
mov
mov
loop
push
int3
cmps
cmp
cs
add
rcl
add
dec
loop
xchg
nop
js
outs
fstp
mov
adc
or
pop
or
cli
out
fidiv
dec
xor
pop
js
js
dec
aaa
in
(bad)
out
inc
aad
daa
adc
ror
cld
nop
leave
(bad)
mov
and
push
in
or
mov
shl
or
inc
dec
xchg
les
retf
hlt
or
push
jecxz
dec
(bad)
sub
cmp
sub
cli
ins
or
jmp
cmp
pop
or
imul
in
sbb
mov
pop
cmp
(bad)
pop
mov
lods
jae
xor
pop
add
add
into
or
daa
cmc
pop
in
xor
add
mov
xlat
mov
xor
and
call
ror
(bad)
cmps
sub
inc
push
aas
cmp
jne
pop
mov
iret
cmc
das
test
pop
xchg
mov
push
aas
add
mov
ja
and
adc
jmp
(bad)
rep
add
ret
push
lods
sub
push
test
add
mov
pushf
in
mov
jmp
sbb
dec
data16
arpl
or
dec
mov
cld
test
bt
retf
cmp
push
or
mov
loopne
shl
aad
and
pop
lea
jmp
pop
pop
jmp
dec
not
lods
int
xor
lock
call
js
push
mov
aaa
popf
aas
mov
jne
add
add
sub
and
out
out
lock
dec
jle
ins
jmp
movs
sbb
push
repnz
icebp
ficomp
mov
in
adc
retf
fistp
sbb
push
aam
dec
fisub
fiadd
xor
cmp
cmp
sub
cmp
or
call
xor
push
mov
ins
mov
cwde
sub
pop
fimul
and
xor
xor
push
and
fcomi
inc
dec
retf
xchg
loop
xchg
loopne
cdq
retf
scas
sub
sub
mov
(bad)
sbb
rcr
xlat
or
int3
push
fisub
push
xor
add
xchg
lods
fnstcw
aad
or
or
push
add
xchg
(bad)
fcmovnbe
outs
sub
sbb
test
fucomi
imul
add
fldenv
push
sti
(bad)
les
sub
shl
lods
shl
sbb
lds
dec
xor
ror
retf
sub
or
jne
push
and
retf
scas
or
int
pop
aas
mov
std
mov
xor
mov
shl
ret
pop
call
int3
push
jb
pop
inc
cmp
jle
mov
fwait
pop
dec
or
add
adc
jmp
repnz
sbb
js
inc
dec
mov
xor
adc
adc
rol
push
push
jecxz
mov
je
mov
cli
mov
in
xchg
push
hlt
cdq
dec
add
dec
xchg
shl
int3
movs
jle
cmps
push
mov
ja
out
or
int
cli
outs
mov
(bad)
add
ror
ins
arpl
sub
ror
enter
sar
shl
push
retf
and
push
ins
out
(bad)
push
rcr
repnz
dec
(bad)
lock
add
pop
add
add
adc
add
add
add
or
add
sbb
sbb
pop
sbb
push
adc
pop
adc
pop
or
sbb
adc
pop
adc
or
pop
ltr
add
or
push
push
pop
pop
pop
sbb
add
or
or
push
sbb
or
adc
movlps
push
lsl
sbb
sbb
add
add
add
add
sbb
or
add
sbb
or
adc
pop
adc
push
adc
adc
pop
push
add
adc
add
or
push
sbb
pop
sbb
or
add
add
femms
add
sbb
adc
sbb
push
or
adc
adc
sbb
sbb
adc
push
sbb
add
pop
sbb
adc
or
pop
add
sbb
add
push
or
pop
push
add
add
sbb
push
mov
sub
push
push
call
add
push
mov
test
je
cmp
jne
jmp
cmp
je
mov
jmp
xor
mov
mov
mov
push
jmp
sub
mov
push
mov
add
cmp
je
sub
mov
cmp
jne
mov
call
mov
mov
add
push
push
push
push
push
call
add
lea
push
push
call
push
push
push
call
add
push
push
call
mov
cmp
je
cmp
je
xor
mov
mov
add
mov
push
push
call
add
jmp
mov
add
mov
jmp
jmp
add
jmp
xor
jmp
mov
mov
xor
mov
add
mov
jmp
call
mov
mov
cmp
je
cmp
je
and
jmp
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
sub
mov
cmp
jne
xor
mov
mov
push
call
add
call
jmp
mov
mov
mov
mov
push
push
push
call
add
mov
push
push
push
call
add
add
jmp
add
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmp
jne
xor
mov
mov
cmp
jne
mov
mov
jmp
push
push
push
push
call
add
mov
mov
add
push
push
call
add
cmp
je
add
push
push
push
push
call
add
xor
mov
call
sub
mov
jmp
mov
add
mov
push
push
push
call
add
mov
mov
lea
push
call
cmp
jne
call
call
mov
test
je
mov
mov
xor
jmp
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
cmp
jne
push
push
call
add
push
push
push
push
push
call
add
mov
call
jmp
sub
jmp
push
push
push
call
add
cmp
jne
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
call
add
mov
mov
xor
push
push
push
push
call
add
mov
add
mov
push
push
push
push
call
add
cmp
je
add
push
push
push
push
call
add
xor
mov
jmp
xor
mov
push
push
push
push
call
add
mov
add
cmp
je
mov
mov
mov
mov
or
mov
push
call
add
mov
mov
mov
add
mov
sub
mov
jmp
sub
push
push
push
push
push
call
add
mov
push
push
push
call
add
cmp
jne
add
mov
cmp
je
add
mov
push
push
call
add
lea
mov
sub
mov
cmp
je
mov
cmp
jne
mov
mov
add
mov
mov
mov
cmp
jne
jmp
add
cmp
je
cmp
je
mov
xor
jmp
mov
sub
call
mov
and
mov
push
cmp
jne
mov
push
sub
mov
push
push
push
push
call
add
cmp
jne
add
jmp
cmp
je
sub
mov
push
push
call
add
push
push
push
push
call
add
call
push
push
push
push
call
add
mov
xor
mov
mov
cmp
je
add
call
shr
jmp
mov
sub
mov
call
cmp
jne
mov
push
push
push
call
add
push
mov
jmp
mov
mov
push
mov
add
mov
mov
push
add
mov
cmp
je
mov
cmp
jne
mov
mov
push
push
call
add
push
xor
mov
jmp
or
cmp
je
mov
mov
add
mov
mov
push
call
add
mov
sub
xor
mov
mov
mov
cmp
je
and
mov
cmp
jne
cmp
je
test
je
mov
xor
mov
call
add
mov
jmp
sub
push
push
call
add
mov
mov
sub
test
jne
add
push
push
call
add
mov
xor
mov
sub
and
mov
test
jne
sub
cmp
jne
mov
test
je
sub
mov
jmp
or
mov
mov
sub
mov
mov
cmp
jne
xor
mov
test
je
jmp
mov
push
push
call
add
push
add
mov
mov
mov
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
mov
mov
cmp
jne
sub
cmp
je
mov
mov
mov
test
jne
sub
mov
jmp
mov
mov
call
mov
mov
sub
mov
cmp
je
jmp
xor
mov
cmp
jne
mov
xor
jmp
xor
mov
cmp
je
mov
and
push
push
push
push
push
call
add
push
push
push
call
add
test
jne
mov
mov
mov
sub
mov
pop
add
mov
cmp
jne
cmp
je
sub
mov
mov
push
push
call
add
mov
pop
jmp
mov
pop
mov
test
je
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
cmp
je
cmp
jne
mov
push
push
push
push
call
add
push
xor
jmp
sub
mov
push
push
push
push
push
call
add
cmp
jne
add
cmp
jne
add
mov
mov
push
sub
mov
cmp
je
mov
or
mov
mov
cmp
jne
xor
mov
jmp
add
cmp
je
mov
push
push
call
add
mov
mov
add
jmp
mov
call
cmp
je
mov
jmp
jmp
add
mov
mov
mov
and
push
push
push
push
call
add
mov
call
or
mov
jmp
cmp
jne
jmp
mov
mov
cmp
jne
cmp
jne
add
mov
cmp
je
sub
mov
mov
cmp
jne
jmp
mov
mov
jmp
xor
cmp
jne
add
mov
mov
jmp
xor
mov
call
push
push
push
call
add
call
xor
mov
mov
mov
mov
cmp
jne
mov
add
mov
mov
and
mov
call
mov
cmp
jne
mov
jmp
or
mov
cmp
jne
test
jne
mov
add
cmp
jne
mov
mov
sub
mov
mov
mov
jmp
xor
cmp
jne
mov
and
mov
jmp
test
jne
add
push
push
push
push
push
call
add
add
xor
mov
jmp
mov
or
mov
mov
mov
push
call
xor
jmp
sub
cmp
jne
push
push
push
call
add
cmp
jne
mov
xor
cmp
je
mov
mov
or
jne
mov
jmp
mov
push
call
cmp
jne
mov
or
je
mov
add
jmp
add
mov
mov
jmp
or
push
push
push
push
call
add
add
mov
lea
push
push
push
call
add
inc
add
cmp
je
mov
xor
push
push
call
add
mov
cmp
jne
mov
mov
jmp
xor
mov
mov
mov
sub
sub
mov
jmp
mov
mov
cmp
jne
push
push
push
push
call
add
mov
cmp
je
mov
or
jmp
or
mov
sub
and
mov
sub
mov
mov
mov
add
test
jne
add
mov
mov
mov
add
mov
mov
cmp
jne
xor
cmp
je
add
jmp
cmp
je
xor
mov
mov
mov
mov
push
push
call
add
pop
mov
push
call
add
or
mov
pop
mov
pop
xor
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
push
push
push
push
push
call
add
push
mov
sub
mov
cmp
jne
add
push
push
call
add
jmp
add
mov
rdtsc
add
mov
mov
xor
cmp
jne
mov
jmp
add
mov
jmp
test
je
add
mov
jmp
mov
jmp
and
mov
mov
push
push
call
add
mov
mov
cmp
jne
cmp
je
sub
mov
mov
or
mov
jmp
mov
push
push
push
push
push
call
add
jmp
xor
jmp
jmp
sub
mov
mov
jmp
add
mov
jmp
jmp
mov
mov
xor
mov
jmp
mov
cmp
jne
sub
test
jne
sub
mov
test
je
sub
cmp
je
mov
jmp
add
mov
jmp
xor
cmp
jne
mov
add
push
push
push
push
push
call
add
xor
mov
push
push
call
add
jmp
push
call
add
mov
mov
rdtsc
mov
mov
sub
mov
mov
mov
or
mov
cmp
je
jmp
mov
mov
mov
mov
jmp
mov
mov
sub
mov
mov
add
mov
mov
jmp
add
mov
or
mov
pop
cmp
je
xor
mov
pop
mov
jmp
mov
sub
cmp
jne
cmp
je
xor
jmp
mov
xor
push
push
push
push
call
add
pop
mov
or
test
je
or
mov
mov
cmp
jne
and
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
push
mov
mov
push
mov
add
push
call
add
add
cmp
jne
test
jne
xor
cmp
je
mov
mov
add
mov
jmp
push
push
call
add
mov
mov
xor
jmp
mov
sub
push
push
push
push
call
add
jmp
test
je
add
jmp
mov
cmp
je
mov
cmp
jne
add
test
jne
mov
mov
mov
xor
mov
mov
mov
dec
mov
mov
mov
cmp
je
xor
mov
neg
add
mov
sub
cmp
je
add
mov
mov
mov
add
sub
mov
mov
cmp
jne
xor
mov
mov
cmp
je
add
cmp
je
add
mov
mov
cmp
jne
sub
mov
mov
cmp
je
xor
mov
mov
mov
mov
jmp
xor
mov
cmp
jne
and
push
call
add
mov
push
call
add
push
push
call
add
sub
mov
mov
mov
jmp
jmp
sub
mov
jmp
mov
add
cmp
je
mov
add
cmp
jne
xor
mov
pop
and
push
call
add
pop
mov
sub
mov
mov
pop
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
xor
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
movzx
test
je
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
push
push
push
push
lea
call
mov
mov
mov
cmp
jae
mov
imul
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
mov
imul
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
movzx
mov
movzx
cmp
jle
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
mov
not
imul
mov
lea
mov
mov
mov
mov
movzx
add
mov
mov
add
mov
mov
movsx
xor
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
add
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
movzx
cmp
je
jmp
movzx
test
jne
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
cmp
je
cmp
jbe
mov
movsx
test
je
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsx
mov
movsx
cmp
jne
mov
movsx
test
jne
mov
mov
movzx
mov
mov
add
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmp
je
cmp
je
mov
mov
add
movsx
add
mov
add
mov
mov
add
movsx
test
jne
jmp
mov
add
mov
mov
test
jne
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
jmp
add
mov
cmp
je
sub
mov
push
push
call
add
cmp
jne
call
mov
mov
mov
push
push
call
add
mov
push
mov
xor
jmp
sub
jmp
mov
push
push
push
push
push
push
call
add
or
mov
cmp
jne
xor
cmp
jne
sub
mov
call
mov
or
mov
mov
xor
push
call
add
push
push
push
call
add
sub
mov
add
mov
jmp
sub
mov
test
jne
mov
mov
xor
jmp
xor
mov
pop
xor
mov
pop
xor
mov
test
jne
sub
cmp
je
sub
mov
push
push
push
push
push
call
add
pop
sub
mov
cmp
je
sub
mov
mov
jmp
mov
xor
cmp
je
cmp
jne
jmp
mov
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
push
cmp
jne
mov
push
jmp
cmp
jne
sub
cmp
jne
add
mov
mov
cmp
je
mov
mov
mov
push
xor
push
push
push
push
push
call
add
mov
add
mov
push
call
add
cmp
je
mov
mov
push
push
call
add
cmp
jne
mov
sub
mov
xor
mov
mov
cmp
jne
xor
mov
test
je
cmp
jne
cmp
jne
add
mov
mov
mov
cmp
jne
sub
mov
push
push
push
push
call
add
pop
xor
push
push
call
add
pop
sub
test
jne
xor
mov
pop
mov
sub
cmp
jne
sub
mov
cmp
je
mov
and
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
sub
mov
jmp
mov
push
push
push
call
add
jmp
mov
push
mov
mov
push
mov
and
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
je
cmp
jne
mov
add
mov
jmp
cmp
jne
jmp
mov
mov
mov
mov
jmp
mov
add
push
push
push
push
call
add
cmp
jne
sub
jmp
cmp
jne
push
push
push
call
add
mov
pop
add
mov
pop
sub
jmp
and
cmp
je
xor
mov
cmp
je
mov
sub
jmp
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
jmp
mov
add
jmp
mov
sub
cmp
je
xor
mov
jmp
mov
push
mov
jmp
jmp
cmp
jne
add
mov
mov
mov
cmp
jne
mov
jmp
and
mov
push
jmp
mov
mov
push
mov
add
push
push
push
call
add
sub
mov
call
xor
mov
cmp
je
add
cmp
je
add
jmp
mov
or
cmp
jne
mov
sub
jmp
sub
call
add
mov
pop
mov
xor
jmp
xor
mov
mov
mov
pop
xor
mov
cmp
je
mov
xor
jmp
mov
pop
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
sub
mov
push
sub
mov
push
mov
xor
mov
push
push
push
push
push
call
add
mov
sub
jmp
sub
mov
mov
cmp
jne
xor
mov
push
push
call
add
add
call
push
call
add
mov
jmp
sub
cmp
jne
jmp
mov
mov
jmp
push
call
add
pop
mov
jmp
test
jne
or
jmp
or
mov
jmp
sub
mov
call
jmp
mov
xor
mov
pop
cmp
je
xor
mov
pop
mov
add
mov
cmp
jne
add
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
call
add
push
mov
push
call
push
jmp
cmp
jne
cmp
jne
mov
and
cmp
jne
cmp
je
xor
mov
push
push
push
push
call
add
add
mov
mov
add
mov
pop
add
mov
cmp
je
mov
xor
jmp
sub
mov
pop
mov
call
and
cmp
je
mov
jmp
sub
mov
mov
test
je
mov
sub
mov
push
push
push
push
push
call
add
pop
cmp
jne
mov
sub
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
jmp
cmp
je
mov
push
mov
add
mov
push
mov
and
mov
mov
push
or
mov
mov
mov
cmp
je
mov
mov
jmp
or
cmp
jne
test
jne
mov
mov
mov
mov
xor
cmp
je
sub
cmp
jne
mov
xor
mov
mov
jmp
xor
mov
mov
add
mov
mov
jmp
sub
mov
mov
mov
test
je
mov
sub
mov
mov
mov
mov
pop
cmp
jne
mov
mov
pop
mov
pop
cmp
jne
mov
cmp
jne
sub
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
jmp
mov
sub
cmp
je
or
mov
jmp
sub
test
je
and
cmp
jne
sub
mov
jmp
cmp
je
jmp
and
test
je
mov
cmp
jne
xor
jmp
and
cmp
je
mov
mov
mov
jmp
cmp
jne
jmp
cmp
je
mov
push
jmp
sub
mov
cmp
je
mov
push
mov
mov
push
mov
mov
jmp
mov
sub
test
je
jmp
cmp
jne
add
mov
jmp
jmp
and
mov
jmp
add
mov
test
jne
xor
mov
mov
test
je
mov
jmp
sub
mov
mov
add
cmp
jne
jmp
or
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
cmp
je
cmp
je
jmp
or
mov
pop
add
cmp
je
cmp
jne
or
mov
pop
cmp
je
cmp
jne
mov
pop
mov
cmp
je
test
je
mov
mov
jmp
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
mov
push
test
je
add
mov
mov
jmp
sub
mov
mov
mov
add
mov
mov
jmp
mov
sub
mov
mov
jmp
mov
mov
mov
add
jmp
add
mov
mov
cmp
jne
xor
mov
mov
cmp
je
sub
mov
jmp
mov
sub
test
jne
sub
mov
cmp
jne
test
je
sub
mov
cmp
je
xor
jmp
mov
mov
pop
add
mov
jmp
xor
mov
jmp
sub
mov
mov
jmp
or
cmp
jne
add
cmp
je
sub
mov
pop
mov
pop
mov
or
jmp
mov
leave
ret
add
adc
jo
sub
hlt
adc
lock
ins
and
lods
or
(bad)
hlt
sahf
add
(bad)
cmc
data16
adc
pop
int
add
xor
or
or
mov
xor
movs
repnz
jmp
test
std
nop
add
ret
fcom
mov
call
cld
data16
jmp
xor
or
and
pop
arpl
add
ins
(bad)
(bad)
icebp
pusha
jae
add
pop
adc
mov
into
sub
inc
(bad)
cmp
dec
pop
shr
test
stc
(bad)
adc
or
pop
out
out
push
cmp
rol
or
aad
pop
(bad)
jmp
push
or
dec
movs
jnp
das
inc
in
imul
jecxz
into
stos
movs
jmp
jne
cwde
jmp
xchg
out
adc
jne
jae
lods
push
and
ins
mov
movs
retf
add
lods
dec
xor
sub
mov
popf
ret
jmp
mov
repz
ins
(bad)
xchg
scas
lods
and
pop
shr
sbb
add
pop
sbb
shl
xchg
or
fscale
or
jmp
jmp
mov
pop
jb
sbb
and
hlt
jmp
sti
shl
outs
and
(bad)
push
shl
and
and
in
not
sbb
push
add
mov
les
or
into
movs
enter
arpl
cmp
popa
in
jl
fist
jmp
(bad)
xor
arpl
jge
jmp
repz
pop
mov
cld
popa
dec
ja
push
cmc
or
add
ds
mov
out
push
or
mov
mov
sbb
adc
loop
xchg
and
push
pop
inc
retf
sub
sub
jb
adc
inc
dec
cwde
dec
and
lds
and
or
mov
cwde
sub
mov
and
loopne
push
jmp
unpcklps
in
push
jge
or
add
dec
ret
or
mov
out
lods
xor
loop
shr
fsub
dec
mov
icebp
sti
outs
fsubr
sub
cli
mov
ins
add
aas
cmc
retf
xchg
cmc
add
test
pop
lahf
loopne
dec
or
cmps
repnz
es
call
movs
enter
pop
retf
mov
mov
inc
out
mov
fnsave
jns
cmp
int
fistp
add
fistp
and
nop
sub
mov
retf
out
scas
cli
add
xchg
out
sbb
arpl
push
(bad)
and
sub
inc
sbb
adc
sbb
xor
add
fwait
dec
jle
or
test
jns
jmp
shl
(bad)
push
in
inc
test
and
into
mov
sub
mov
je
stos
movs
loopne
jns
add
mov
or
push
jno
aad
jmp
jno
enter
xchg
mov
shr
inc
int3
adc
sub
imul
inc
inc
inc
fadd
or
test
xor
jmp
retf
inc
clc
cmps
ins
enter
pop
fs
pop
add
(bad)
and
cmp
mov
or
pop
cmp
add
les
mov
fisttp
call
jge
or
add
ficomp
in
mov
popf
or
out
push
cs
push
test
inc
test
lahf
jae
in
jge
sti
fistp
cmp
push
push
and
stos
push
in
xchg
jne
fsubr
icebp
xor
inc
mov
or
loop
add
gs
and
repnz
dec
jnp
ficomp
jbe
retf
sub
nop
adc
jmp
push
mov
out
mov
cld
jmp
fprem
jo
add
cmp
push
pop
jge
fcomp
dec
fld
das
dec
sbb
loopne
mov
cmc
jmp
mov
leave
js
jns
pop
or
popf
mov
cmp
scas
and
pop
ins
mov
push
cmps
fiadd
das
call
addr16
fdivr
jge
mov
pushf
aaa
dec
ror
mov
xchg
sbb
or
and
lds
dec
(bad)
add
data16
mov
or
gs
sub
sub
ja
adc
and
and
xor
and
jecxz
call
sub
jmp
push
jo
dec
mov
adc
out
mov
or
pushf
or
mov
sub
mov
pop
push
or
imul
push
std
xor
push
stos
mov
or
lock
pop
pop
fcomp
ins
mov
jo
mov
aas
or
popa
xor
jmp
test
mov
fs
fldlg2
sbb
aad
or
mov
test
out
jo
rol
xchg
cmps
jge
push
test
mov
in
jmp
gs
jg
out
and
fst
das
add
pop
inc
inc
xor
inc
loope
maskmovq
idiv
and
sub
jnp
or
pop
rcr
test
cmp
loop
adc
mov
inc
pop
ins
stos
mul
push
mov
xchg
pop
add
out
xor
lods
test
js
stos
add
cmp
xchg
ss
mov
xchg
inc
addr16
inc
xor
mov
or
xchg
lahf
sbb
jno
mov
mov
cmps
shr
dec
lahf
xchg
out
fdivr
arpl
mov
test
je
rcr
and
pop
or
sbb
jge
loopne
mov
mov
or
jae
(bad)
clc
sub
mov
iret
call
hlt
dec
ret
xor
in
(bad)
jmp
push
pop
mov
or
mov
or
cmps
lea
push
or
dec
add
adc
xchg
or
xlat
inc
jg
dec
add
jo
inc
dec
or
jl
lods
add
xchg
jmp
lds
add
and
or
fcom
cmp
pop
dec
or
leave
jg
sub
add
dec
push
imul
popa
test
mov
pop
daa
dec
repz
aad
fwait
retf
sbb
fistp
xor
add
cmp
xor
stos
rcr
jmp
push
aam
inc
sbb
jl
repz
xor
scas
mov
inc
cld
in
push
xchg
cdq
test
retf
add
sbb
mov
loope
int3
std
or
sahf
cmp
sub
std
pushf
fcmovne
or
std
aas
cwde
add
pop
pop
sub
int3
pop
ror
pop
fbstp
inc
mov
arpl
pop
std
add
sub
pcmpeqb
push
or
pop
inc
xor
call
and
lds
fsub
sbb
(bad)
xlat
shl
pop
std
popf
cwde
imul
mov
int
in
stos
popa
cmps
sbb
sbb
push
call
fsub
out
mov
jo
mov
or
ffree
cld
sbb
sub
mov
xor
out
outs
sbb
mov
in
xchg
loop
xchg
sbb
or
jo
pop
pop
inc
into
cmp
fs
pop
jecxz
and
bound
pop
in
push
daa
jmp
mov
and
popa
inc
mov
push
ins
cwde
and
rol
jb
rol
lods
mov
sub
stos
mov
cmp
push
cmp
fidiv
jg
xor
arpl
jne
ins
mov
push
lods
mov
add
and
aad
inc
or
call
jbe
in
in
add
rcl
ins
jmp
xchg
cmp
push
outs
xor
add
lea
jl
hlt
dec
inc
call
iret
retf
sub
rcr
sbb
in
repz
mov
or
add
mov
lock
mov
iret
sti
inc
outs
push
add
xor
lock
push
xchg
xchg
pop
mov
icebp
add
xchg
lods
test
int
adc
mov
out
jno
xor
out
adc
fld
dec
sub
inc
test
aad
mov
jne
enter
popf
inc
push
call
and
dec
cmp
jecxz
into
mov
sub
mov
addr16
mov
dec
xlat
xchg
iret
into
mov
push
and
mov
push
das
stos
icebp
imul
or
leave
out
xchg
mov
and
mov
push
cmp
addr16
add
mov
inc
ja
mov
or
push
lahf
xor
pop
inc
add
imul
repz
jmp
mov
and
push
or
adc
push
pop
jmp
ds
add
stc
mov
and
adc
sub
int3
or
push
xlat
ds
jmp
mov
paddusw
and
iret
adc
pop
aaa
jmp
inc
xchg
test
imul
mov
dec
adc
mov
lods
sti
xor
push
retf
scas
mov
cmc
jne
add
mov
and
dec
fdivr
fwait
repz
mov
lock
or
mov
arpl
scas
inc
jmp
(bad)
fdiv
sub
movs
push
ins
or
call
iret
mov
adc
sub
arpl
idiv
or
mov
adc
jmp
aaa
xchg
mov
mov
push
bound
stos
mov
test
pusha
or
inc
mov
pop
aam
imul
movs
aaa
mov
fmul
sbb
mov
push
mov
mov
movs
add
mov
data16
mov
cmp
xor
aad
(bad)
loopne
add
shr
jmp
retf
xor
pop
aam
repz
mov
jmp
add
jle
inc
push
jo
enter
or
add
or
sbb
inc
mov
fwait
(bad)
jmp
cwde
add
xchg
hlt
fisttp
dec
xchg
sti
or
stc
ret
movs
pop
jmp
xchg
xchg
sub
int
adc
inc
mov
sbb
ja
pop
jge
imul
xchg
cli
mov
xchg
or
push
add
mov
shl
daa
call
cmp
ja
dec
and
ins
lea
inc
inc
sub
(bad)
cmp
lea
adc
push
sub
fdivr
js
mov
push
mov
cmp
aam
sahf
push
push
scas
push
mov
test
add
pop
sub
cmc
popf
cmp
ret
icebp
xchg
or
adc
ins
cmps
jmp
je
sbb
push
mov
inc
jnp
add
call
push
mov
mov
pop
js
or
stos
in
aad
sub
in
jp
in
outs
out
sub
out
test
jp
ficomp
sbb
adc
pop
xor
adc
stos
out
pusha
push
cmp
push
ins
leave
lock
or
in
cmps
mov
loope
or
or
aas
jle
in
jmp
std
popf
cmp
les
push
cmp
out
dec
xchg
jmp
hlt
add
pop
lea
into
sub
dec
or
adc
xchg
mov
or
rol
push
jmp
ret
sbb
or
add
fsub
xor
cs
pop
retf
aam
add
inc
add
mov
retf
add
pop
push
jg
lods
test
fild
push
sti
imul
mov
inc
cdq
shl
inc
or
hlt
mov
xchg
push
xchg
inc
ret
add
fcom
repz
retf
sbb
cs
inc
cmc
jmp
imul
push
xor
and
rol
mov
aad
sbb
adc
jl
pop
add
stc
addr16
loopne
retf
out
test
(bad)
push
add
ret
add
mov
(bad)
jae
mov
xchg
(bad)
cmp
cs
inc
aad
mov
movs
ss
cmp
pop
movs
aas
or
sbb
cmps
mov
add
mov
imul
div
pop
push
cmps
push
retf
dec
sub
in
shr
add
and
fsubr
aam
inc
mov
sbb
sub
and
inc
fwait
jge
stos
mov
mov
call
xor
push
or
ja
pop
mov
dec
xor
mov
dec
inc
(bad)
popf
sub
fld
push
cwde
xchg
sub
into
dec
in
push
aad
inc
xchg
ficomp
jle
leave
push
outs
daa
imul
inc
outs
out
jg
xchg
lea
and
jl
cmp
jle
jmp
cmp
(bad)
cmps
mov
sbb
push
pop
iret
push
pop
test
pop
xor
xor
cmp
mov
mov
loop
mov
jmp
dec
test
xchg
xchg
dec
jmp
xchg
ja
(bad)
std
mov
pop
sbb
stos
or
movs
jbe
mov
or
call
sub
jl
inc
imul
ret
lods
aas
ja
xor
outs
xchg
test
(bad)
pop
xchg
xchg
adc
jmp
or
cmp
mov
mov
sub
shl
sub
iret
cmps
int
mov
repnz
and
pop
std
jl
(bad)
shr
jp
add
sbb
fwait
or
es
je
es
pop
call
dec
inc
fcmovnbe
stos
and
(bad)
mov
test
push
repnz
inc
aam
pop
and
push
retf
ja
ins
sbb
pop
pop
cmps
enter
jno
jmp
jecxz
pop
sub
mov
cmps
dec
sar
mov
dec
aad
test
dec
stos
xchg
jmp
movs
(bad)
xchg
mov
jge
imul
mov
jmp
or
inc
inc
aas
aad
addr16
or
ss
add
aad
(bad)
pop
dec
jl
or
ficom
shl
cli
cmc
out
cmp
or
movs
or
in
xchg
retf
cmp
push
jmp
imul
pop
dec
xor
arpl
cmp
push
xor
jmp
cmps
mov
inc
push
imul
and
add
std
pop
(bad)
push
shr
addr16
cmp
nop
dec
sar
mov
cs
mov
mov
bound
add
(bad)
movs
pop
ja
mov
xchg
mov
or
rcr
cld
lahf
sbb
call
test
jmp
loopne
or
lds
je
ins
ins
pop
in
jno
adc
bound
imul
fnsave
mov
and
lds
xchg
movs
adc
cmp
mov
sbb
(bad)
mov
add
(bad)
sub
loope
add
cmp
cmp
stos
cli
add
jo
pop
mov
call
jl
add
xchg
jmp
pop
xchg
repnz
cld
test
mov
(bad)
out
add
lahf
shl
mov
mov
(bad)
inc
jmp
jmp
add
sbb
pop
leave
adc
jns
adc
jbe
dec
push
mul
push
fadd
cmp
mov
cmp
add
or
mov
cmp
enter
push
outs
jo
test
lahf
mov
jge
push
repnz
mov
in
sbb
sahf
inc
push
shr
pop
sbb
adc
dec
aad
sbb
xor
sbb
inc
adc
or
cs
or
jge
scas
inc
jmp
repz
jecxz
in
dec
inc
cli
xchg
or
scas
je
outs
jmp
mov
push
sub
repz
daa
pop
(bad)
out
and
mov
dec
xor
retf
jmp
push
dec
push
cmp
dec
mov
rcr
out
pop
add
push
hlt
fneni(8087
xchg
mov
sbb
adc
lahf
outs
xchg
adc
(bad)
mov
dec
js
add
cmp
ins
(bad)
wrmsr
icebp
mov
cwde
mov
call
mov
out
out
(bad)
sbb
xchg
mov
in
pop
pop
test
inc
xlat
std
call
scas
cmc
and
fnsave
add
xchg
push
neg
xchg
fisttp
jl
add
stos
add
or
add
adc
and
cmc
mov
dec
and
mov
push
push
or
dec
push
xchg
test
mov
loopne
ja
cld
or
fisttp
outs
inc
fisttp
outs
cmp
imul
xchg
mov
lahf
jae
lahf
add
push
sbb
ss
push
imul
in
cmp
pop
mov
jno
repz
popa
repnz
xchg
mov
push
inc
jmp
dec
push
cs
add
dec
inc
or
jnp
leave
jl
and
hlt
push
adc
add
inc
push
push
jmp
ins
dec
aad
add
inc
or
aam
scas
ss
and
loop
in
xchg
and
out
or
loop
jmp
imul
or
or
out
bound
test
adc
imul
adc
sti
bound
fmul
popa
cdq
sbb
pop
rcl
aad
or
mov
nop
fadd
mov
add
loop
arpl
test
out
popf
pop
add
mov
push
jno
lea
adc
cs
mov
jmp
push
nop
pop
jns
fwait
push
fisub
jbe
xor
sbb
es
or
lds
dec
xchg
jmp
ja
lea
or
adc
push
mov
retf
loop
add
js
fisttp
sbb
jmp
cs
mov
or
jns
fdiv
add
sbb
inc
ds
icebp
jo
inc
dec
xlat
movs
out
icebp
add
mov
mov
pop
sbb
shl
pusha
xchg
sub
(bad)
mov
push
and
sar
out
inc
push
test
arpl
pushf
arpl
loopne
mov
xchg
imul
cwde
mov
retf
push
or
test
jo
scas
jns
inc
sub
cmp
sar
dec
sub
push
leave
xchg
out
dec
xchg
dec
cmp
call
mov
adc
add
lock
push
or
ins
cmp
aad
(bad)
xor
arpl
(bad)
adc
lahf
out
cmp
add
dec
push
in
mov
cli
sbb
fld
pop
jmp
adc
jae
addr16
sbb
enter
int3
mov
dec
sbb
sub
inc
cwde
sub
jp
les
aam
popa
dec
mov
ss
dec
into
add
ins
fimul
pop
adc
or
pop
loope
aad
pop
fdivr
jl
xor
mov
sub
in
test
in
in
or
leave
clc
outs
or
ret
dec
push
clc
jmp
jmp
xlat
inc
jle
mov
repz
ret
or
bound
jl
fidivr
popa
and
fsub
mov
ret
pop
jnp
in
retf
ja
retf
test
loop
mov
in
cdq
adc
jl
in
in
adc
push
mov
mov
stos
ins
dec
cmps
xlat
add
icebp
pop
lods
jmp
jnp
or
sub
cmp
cli
mov
iret
xchg
inc
call
lea
fucomip
mov
and
clc
xchg
sbb
cmps
pop
mov
rol
mov
xchg
sub
jb
push
pop
mov
inc
adc
adc
lods
mov
push
inc
or
(bad)
sti
add
ret
inc
in
(bad)
xor
sub
add
sti
pop
or
(bad)
ins
ins
jmp
add
std
aas
test
fdivp
mov
int
add
aaa
pushf
not
inc
pop
lahf
cmps
jmp
sti
or
sub
fild
jmp
mov
pop
pop
push
scas
pop
xor
cmp
cld
loopne
lock
xchg
aam
fldcw
push
sbb
xlat
dec
add
(bad)
(bad)
pop
or
xchg
adc
test
push
xor
jmp
dec
(bad)
scas
xor
xchg
xchg
jmp
jecxz
(bad)
int3
test
xchg
inc
int
xchg
imul
gs
push
dec
test
movs
pcmpeqd
push
push
dec
jmp
cmp
sub
cli
or
int3
in
mov
push
xor
push
mov
or
mov
(bad)
scas
xchg
(bad)
jbe
add
rcl
cs
lods
sub
or
inc
or
lahf
iret
(bad)
push
fwait
das
inc
pop
jnp
mov
movs
inc
inc
push
(bad)
adc
cmp
mov
out
or
hlt
cmc
repnz
sub
push
cmps
stos
popa
fsubr
pop
ds
pop
and
icebp
or
je
sbb
retf
scas
xchg
or
mov
jmp
add
sar
cmp
mov
pop
add
sub
inc
jb
xchg
sub
mov
push
cdq
jmp
pop
aam
xor
stos
xchg
jmp
lock
or
out
sub
mov
imul
mov
pushf
jp
stos
out
int3
icebp
int3
add
icebp
adc
ja
das
(bad)
loop
sbb
dec
jno
dec
mov
push
pop
sbb
or
(bad)
mov
cli
jecxz
adc
mov
push
(bad)
cmps
jnp
test
call
(bad)
fsubr
mov
mov
pop
push
or
jb
test
dec
in
mov
mov
(bad)
and
leave
stos
scas
mov
pop
pop
add
in
inc
ficomp
call
sti
xor
pop
hlt
add
addr16
sub
mov
adc
or
push
mov
div
push
stos
retf
mov
lock
sti
adc
adc
jb
fbstp
fstp
xchg
ds
mov
bound
jge
jmp
retf
popa
rcl
push
pop
mov
cwde
retf
jmp
call
sub
arpl
ror
push
fsub
push
xor
arpl
out
imul
pushf
push
(bad)
popf
fadd
adc
cmp
ror
(bad)
call
add
cmp
pop
add
push
mov
(bad)
mov
xor
imul
call
jae
dec
sbb
xchg
mov
and
lock
pop
int3
jbe
jae
repz
mov
dec
mov
arpl
adc
cmp
in
add
fst
sub
xlat
enter
add
rcr
into
add
iret
jge
xlat
sub
stc
cli
int3
hlt
add
retf
ins
pop
sbb
(bad)
sbb
adc
movs
or
or
sub
sub
jmp
inc
jle
imul
mov
movs
das
scas
add
(bad)
daa
in
inc
in
add
and
popf
cs
mov
mov
or
mov
mov
inc
push
or
sub
cdq
lods
iret
fwait
or
cmp
push
or
inc
cmp
vmovdqu
mov
jno
mov
or
loopne
push
iret
jmp
jmp
pop
pop
xor
ins
inc
imul
test
retf
imul
rcr
add
out
jmp
pop
xor
cmps
jne
dec
jne
add
icebp
push
or
pop
scas
xchg
test
mov
sar
inc
adc
(bad)
cmp
xor
xor
movs
xchg
or
xor
hlt
fucomip
in
cmp
sub
nop
pop
das
sub
ins
add
cmp
es
and
(bad)
daa
push
jg
inc
sti
loop
out
pusha
retf
add
push
loope
mov
into
jle
mov
fbstp
fild
dec
add
enter
or
inc
xchg
sub
cld
ficomp
sub
or
pop
and
scas
(bad)
hlt
mov
fidivr
push
mov
sbb
(bad)
adc
cld
mov
xor
cmp
add
inc
ds
or
(bad)
jmp
jmp
jecxz
pop
mov
xchg
clc
arpl
pop
xchg
add
push
jmp
test
stc
dec
dec
(bad)
mov
dec
inc
aas
adc
dec
jl
(bad)
or
mov
or
or
xchg
fnstsw
loopne
adc
test
loop
add
fwait
xor
push
cmp
adc
fcom
push
add
xchg
xchg
rol
outs
add
fcom
add
jnp
add
sub
xchg
enter
xchg
std
inc
and
inc
jg
leave
pop
call
mov
call
cmps
jmp
xor
in
pop
aas
push
mov
mov
adc
pop
add
rcr
out
jmp
mov
push
cmc
jle
push
jmp
jnp
mov
retf
push
push
outs
add
and
call
or
sbb
sub
or
and
xchg
pop
popf
or
mov
push
inc
cmps
mov
add
gs
sub
and
xor
adc
xor
jnp
dec
push
mov
sbb
sti
or
out
push
mov
ds
adc
pop
(bad)
xchg
or
stos
cmp
stc
in
inc
xlat
in
xor
lods
rcl
mov
popa
xchg
jb
cwde
iret
xchg
add
rcl
xor
pusha
mov
pop
cmp
(bad)
into
add
movs
mov
push
jne
xchg
jbe
jmp
inc
adc
adc
ret
les
loop
mov
or
loop
inc
icebp
call
push
xchg
retf
loope
pushf
cmp
ror
xlat
movs
movs
xchg
push
or
inc
out
cmp
(bad)
sbb
cmp
mov
in
lar
cmp
dec
mov
sbb
aas
push
dec
movs
jbe
fwait
std
add
push
shr
ins
add
add
movs
ds
sbb
and
fwait
aam
hlt
pop
bound
(bad)
rcl
or
es
push
int3
dec
call
push
mov
sub
and
in
int
pop
xor
ss
add
test
fs
push
arpl
pushf
or
popf
pop
lahf
pop
jmp
into
pop
call
(bad)
shr
adc
jo
add
hlt
sub
pop
jo
or
sar
aam
les
cmp
xor
mov
not
test
lea
ss
xor
shr
xor
or
pop
shr
data16
out
add
shl
inc
mov
popf
popa
out
icebp
jae
outs
push
call
mov
test
and
or
or
lahf
outs
loop
icebp
mov
jmp
(bad)
xchg
fwait
sub
cmp
and
cwde
push
retf
cdq
ins
push
das
mov
loopne
add
daa
ss
cli
jle
mov
or
inc
xchg
push
repnz
test
int
mov
fnstsw
in
push
stc
and
pushf
push
add
pop
add
add
xor
cmps
adc
call
sub
gs
nop
imul
paddsb
out
or
cmp
mov
out
lock
pop
sub
inc
call
dec
inc
sbb
cmp
add
sub
cs
test
pop
xchg
dec
adc
retf
mov
out
or
or
test
sti
enter
arpl
mov
(bad)
push
dec
lahf
cmps
(bad)
stos
or
mov
mov
dec
adc
pop
loope
scas
push
or
sbb
push
xor
jno
hlt
mov
pop
or
jno
add
nop
xor
stos
out
ins
mov
sti
cmp
or
cwde
hlt
sbb
pop
movs
mov
or
pop
fist
shr
xchg
xor
jmp
or
mov
outs
es
jae
mov
mov
std
cmps
test
(bad)
add
rcl
les
add
push
jno
add
xor
cmc
gs
stos
push
xlat
and
call
ds
sahf
mov
sbb
adc
pushf
inc
(bad)
ins
xchg
xor
inc
push
jmp
out
or
fwait
outs
daa
xchg
arpl
cmp
lock
xchg
mov
je
or
popf
pop
lea
xchg
aam
sub
jg
hlt
push
cmp
add
fdivr
imul
and
pop
(bad)
jge
in
gs
int
hlt
stos
out
mov
cmp
sar
push
fld
jmp
stc
dec
xchg
add
stos
push
cmp
cmp
outs
punpcklbw
xor
clc
ja
inc
fs
(bad)
(bad)
jnp
scas
push
(bad)
jbe
jb
sbb
out
cmps
out
lock
or
lods
clc
retf
mov
lea
mov
or
pop
sbb
leave
jne
or
push
test
sahf
dec
or
cmp
cmc
ss
jg
in
add
jl
or
jmp
mov
xor
std
fs
outs
imul
test
inc
push
fidivr
clc
jp
push
(bad)
shl
sub
adc
xor
add
aam
rol
arpl
nop
jmp
je
daa
inc
cmc
int
push
shl
scas
movs
cmps
loope
add
fmul
outs
out
aam
mov
sar
cmp
test
add
or
sbb
push
ja
stos
loope
xlat
test
mov
or
fwait
ret
inc
in
mov
lds
rdtsc
stos
mov
xor
push
xor
retf
cs
jge
inc
push
hlt
outs
bound
fnstsw
mov
jno
and
gs
mov
xchg
inc
ds
aas
test
sbb
add
mov
xchg
push
in
loop
jmp
xchg
inc
out
sub
xchg
push
shr
arpl
addr16
pop
and
loopne
push
ja
jl
xor
cmc
pop
cmp
xor
mov
std
sahf
add
repnz
xor
cdq
push
push
test
add
retf
test
inc
xor
(bad)
mov
retf
(bad)
and
push
(bad)
mov
pop
mov
lea
or
lahf
outs
push
push
jmp
div
pop
fcomip
pop
push
pop
dec
jle
mov
lods
add
adc
mov
push
cmp
or
adc
sub
stos
cmp
jge
sar
sti
push
push
adc
inc
jmp
arpl
or
inc
push
daa
add
push
cmp
sub
mov
push
stc
lea
xchg
and
scas
adc
or
mov
inc
cmp
call
push
push
pop
test
add
and
test
jmp
sbb
mov
add
inc
xchg
sbb
mov
fadd
in
mov
mov
popa
jle
inc
xchg
ins
mov
je
jmp
mov
cld
iret
fwait
push
dec
arpl
out
out
jecxz
leave
sbb
sbb
sub
(bad)
ror
stos
imul
push
fistp
in
movs
lds
cmp
pop
add
bound
ins
mov
cmp
inc
mov
mov
jmp
inc
repnz
(bad)
test
push
in
xor
add
push
mov
jnp
xor
dec
loop
stos
jne
in
bound
leave
or
cdq
scas
add
lods
aad
sbb
push
mov
push
push
or
cmp
ds
std
cmc
add
sbb
sub
cmp
out
imul
dec
mov
sub
pop
xchg
into
or
les
in
and
retf
movs
xor
popa
fisttp
jne
loop
or
es
daa
daa
lods
adc
loop
sbb
xor
lock
push
aam
or
add
arpl
cmp
xor
lds
stc
sti
in
fdivr
aad
out
icebp
push
scas
lock
xor
sub
int3
jmp
sbb
cmp
inc
out
mov
mov
adc
loopne
jne
push
shl
sub
pop
mov
add
mov
xchg
sar
mov
and
or
pop
mov
test
cs
cli
call
iret
(bad)
popf
or
out
xor
inc
adc
in
and
pop
scas
dec
in
sbb
out
pop
or
sar
addr16
gs
jmp
xchg
jo
loope
xor
sbb
dec
outs
xchg
leave
or
mov
aas
push
xchg
dec
or
or
jg
out
aad
push
adc
push
retf
dec
das
push
les
cmc
cli
in
(bad)
xchg
adc
or
(bad)
and
and
or
lods
call
or
sub
push
push
pop
mov
jle
jb
push
or
retf
sub
mov
fcomp
mov
xchg
in
cmps
test
xlat
mov
xlat
cs
dec
mov
jo
or
xchg
(bad)
mov
gs
jl
push
cmc
mov
scas
loop
push
cmps
inc
push
addr16
sbb
xchg
adc
jg
lea
popf
xlat
imul
inc
mov
in
xor
icebp
fcomp
test
mov
lods
xchg
arpl
sub
mov
in
ret
and
es
mov
mov
add
push
shl
out
js
test
pop
add
aas
dec
mov
xchg
arpl
mov
jl
jmp
jns
inc
pop
jle
pop
test
pop
adc
pushf
(bad)
cmp
jmp
scas
pushf
clc
ret
stos
and
pop
or
dec
adc
inc
xor
add
add
in
bound
icebp
stos
add
push
pusha
jne
in
or
dec
mov
ficom
xchg
movs
push
mov
cmp
xchg
sbb
add
fisttp
test
outs
stos
or
cmps
into
stc
into
jmp
dec
loope
rcl
std
in
fistp
push
jge
movs
ins
and
rol
mov
dec
imul
out
jge
jmp
leave
or
ret
jne
scas
(bad)
mov
leave
prefetch
stos
je
sbb
jo
int3
xchg
mov
mov
add
loop
or
je
dec
or
ret
xchg
(bad)
fimul
test
call
in
test
pop
(bad)
frstor
add
not
mov
mov
je
add
adc
inc
push
(bad)
add
sub
jle
out
or
mov
inc
sub
xchg
push
pop
rcr
cmp
mov
int
and
jbe
(bad)
(bad)
daa
in
pop
lods
mov
cld
cdq
(bad)
dec
inc
mov
xor
xor
add
mov
adc
xor
cmp
jp
jle
aad
(bad)
xor
push
or
inc
adc
int
ja
nop
jmp
push
mov
cld
cmp
mov
push
or
and
or
xor
add
or
pop
mov
cmps
out
push
fst
jp
and
fdivr
xor
out
jp
push
call
fmul
fcmovbe
out
(bad)
mov
mov
js
(bad)
retf
and
retf
push
xlat
xor
or
push
(bad)
int
jmp
jno
adc
jns
pop
dec
js
pop
cmp
mov
or
mov
aam
mov
mov
sbb
movs
int3
aad
les
(bad)
push
or
adc
and
jmp
lock
pop
lods
or
data16
in
push
pop
dec
cmc
xor
mov
push
or
mov
pop
push
add
aam
repnz
sti
retf
rcl
or
or
std
mov
xor
out
xchg
push
xor
mov
mov
dec
sub
cli
mov
out
add
aad
pushf
push
xchg
(bad)
push
xchg
aam
dec
inc
dec
cdq
add
iret
dec
leave
bound
adc
jecxz
fld
pushf
pop
icebp
arpl
sbb
mov
jbe
icebp
jmp
adc
inc
push
gs
lds
cdq
push
xchg
cmp
std
mov
repnz
lods
(bad)
shr
fistp
stos
xchg
add
or
fdiv
xchg
ja
jge
jg
fsubr
jns
in
sub
jmp
in
inc
fisttp
or
jo
jns
xor
cmp
pop
or
jmp
jmp
inc
sti
xchg
mov
cmp
push
mov
(bad)
cmp
mov
inc
xchg
xor
pop
adc
mov
iret
xchg
push
xchg
cmc
ret
mov
or
xchg
stc
out
jmp
push
mov
xchg
push
mov
sbb
aad
mov
and
js
sub
out
pop
mov
mov
push
mov
push
fistp
push
imul
xor
inc
ret
add
pop
xor
ins
adc
dec
fstp
jnp
mov
addr16
daa
jge
(bad)
jmp
jns
loopne
imul
add
movs
loope
xchg
push
fisubr
dec
scas
leave
mov
in
ror
ret
sbb
mov
scas
inc
repz
inc
jmp
fcomp
sub
jg
imul
mov
pop
jmp
push
mov
(bad)
dec
mov
dec
(bad)
or
pop
xchg
cmps
inc
jnp
add
bound
mov
lods
add
add
fmul
or
call
jne
inc
jp
jnp
add
ror
repnz
or
out
ss
outs
push
ins
ins
xchg
mov
xchg
and
(bad)
sub
pop
xchg
sahf
cmp
sbb
pop
and
push
aad
jecxz
lods
inc
retf
add
jg
dec
fcmovne
jb
or
xchg
ss
pusha
push
out
movs
mov
mov
mov
jae
lods
retf
and
ins
outs
xchg
dec
mov
push
popf
pop
das
(bad)
push
(bad)
fnstenv
imul
xor
sub
sub
fs
push
mov
sbb
add
out
ds
mov
push
mov
jl
rol
fwait
xor
int
cwde
prefetch
push
fsub
cmp
dec
lahf
push
into
stos
inc
and
push
das
sub
cmps
std
into
or
push
call
shl
add
push
mov
inc
fucomp
push
jge
xchg
mov
test
cmp
or
jo
in
jmp
jne
adc
(bad)
outs
mov
sub
repnz
xor
imul
cmp
or
mov
push
imul
push
bound
xchg
or
xor
in
jmp
jb
into
mov
stos
loope
mov
or
out
push
add
sbb
icebp
inc
loop
add
arpl
push
xor
mov
lods
fs
cmp
mov
cmp
cmp
stc
cmp
ret
xor
mov
ja
je
lock
scas
fs
lds
pop
add
add
jge
cmp
cwde
cwde
aad
pop
das
test
jmp
jge
fbstp
lods
nop
ja
imul
add
push
pop
test
pop
push
sbb
bound
jecxz
rcl
nop
cli
add
xchg
xchg
movs
lods
sub
shr
shrd
pop
call
add
sub
jbe
enter
mov
pop
or
pop
dec
(bad)
fdiv
push
add
pop
sub
and
ret
pop
mov
fadd
(bad)
popa
cdq
jns
fdivr
add
jecxz
sub
aad
test
test
and
gs
or
push
(bad)
mov
xchg
push
push
fld
retf
pushf
iret
mov
(bad)
push
adc
mov
jg
sub
(bad)
cmc
stos
sti
cmc
mov
(bad)
cmp
(bad)
mov
mov
std
dec
je
iret
inc
adc
lea
outs
push
data16
push
imul
int
cmp
pop
scas
add
push
(bad)
movs
in
jl
mov
jle
int
xchg
add
inc
xchg
mov
add
mov
cmp
and
push
cmps
ret
cmp
popf
mov
(bad)
(bad)
mov
inc
add
jmp
cmp
mov
sub
mov
add
mov
in
loop
loop
into
(bad)
(bad)
out
push
mov
dec
rcr
pop
scas
sub
add
test
sbb
push
outs
push
xchg
das
sahf
inc
mov
shr
je
fsubr
sub
stos
lahf
pusha
push
(bad)
or
push
xlat
jp
or
xchg
retf
nop
rcr
mov
pop
daa
xchg
in
jmp
hlt
or
pop
cld
fnstsw
cmp
or
mov
and
add
imul
repnz
cwde
(bad)
loop
daa
cmc
test
xchg
xor
sub
xor
out
dec
aas
xchg
scas
movs
pop
out
ror
popa
(bad)
jp
outs
retf
jno
push
and
sbb
repnz
and
and
mov
mov
or
stc
arpl
dec
cmp
pop
rcl
or
push
jnp
xor
xchg
and
push
push
mov
es
push
xchg
test
pop
xor
mov
scas
ret
test
fbstp
and
enter
and
call
aaa
hlt
pushf
xchg
std
popf
push
add
and
mov
dec
imul
cmovbe
les
inc
sti
push
bound
aas
jmp
rol
add
and
lea
in
mov
adc
imul
jmp
jge
(bad)
pop
sub
jmp
fmul
sbb
inc
dec
xchg
jecxz
jecxz
ret
inc
jb
dec
(bad)
jmp
sbb
pop
(bad)
in
jno
mov
shr
les
push
inc
pop
pushf
ins
xchg
in
xchg
(bad)
push
clc
ins
xor
add
out
repz
mov
jmp
cwde
imul
fidivr
fwait
mov
int3
sub
xor
imul
mov
jnp
xlat
inc
gs
stos
jmp
add
(bad)
push
or
dec
leave
sahf
sub
add
das
xchg
fsubr
int
push
inc
test
mov
inc
mov
and
inc
pusha
pop
mov
jg
pop
repnz
fld
dec
das
jg
jmp
je
inc
repz
jmp
repz
stos
or
pushf
jmp
ins
aas
add
mov
jns
pop
ret
clc
test
fxch
xor
(bad)
sahf
ret
hlt
cs
jmp
rcl
push
and
xchg
call
mov
jle
sub
jp
jno
mov
je
push
int3
retf
retf
cmp
mov
jb
add
jg
jp
or
sahf
lods
mov
test
addr16
test
daa
add
jg
shr
into
mov
inc
leave
test
in
sub
fyl2x
pop
adc
push
xor
adc
sar
(bad)
jnp
or
enter
mov
xchg
jae
push
icebp
mov
inc
pop
fcomi
mov
leave
inc
xchg
pusha
test
test
pop
add
js
dec
dec
xchg
jmp
adc
push
inc
push
into
mov
or
push
stos
into
or
add
add
cmp
mov
adc
jns
xchg
jae
add
sbb
jmp
xchg
shr
jne
inc
pop
adc
call
adc
mov
cmp
test
fild
in
les
mov
inc
add
loope
and
inc
adc
in
cmc
push
add
ret
(bad)
inc
mov
sbb
inc
or
dec
fs
imul
retf
jmp
jge
mov
aam
mov
loopne
icebp
sub
xchg
lds
sub
icebp
xchg
jmp
dec
idiv
jp
or
icebp
xor
mov
leave
ins
dec
dec
or
mov
(bad)
int
imul
adc
adc
and
sbb
ror
adc
add
and
xchg
outs
xor
pop
mov
jmp
mov
cdq
and
in
pop
dec
ficom
add
pop
mov
rcl
mov
lea
inc
js
cli
adc
and
(bad)
ss
imul
test
out
or
jo
xor
in
into
jge
mov
ins
or
xor
cli
in
jmp
cwde
xor
xchg
pop
call
jmp
lods
les
sub
mov
sbb
call
stc
pop
test
cmps
sub
retf
jmp
ins
stos
inc
test
adc
int3
mov
jecxz
push
inc
xchg
jno
adc
clc
lods
adc
fild
or
in
xor
jo
mov
xor
jmp
call
or
or
mov
mov
jle
pop
mov
je
inc
sti
sbb
cmp
or
and
sub
aaa
inc
xchg
jmp
aas
arpl
jns
sbb
cmps
in
hlt
in
xchg
jnp
pop
mov
mov
cmp
mul
or
das
repz
mov
imul
and
aaa
mov
pusha
push
scas
pop
adc
gs
add
inc
jecxz
add
cmp
lock
or
mov
jmp
xchg
cld
pop
cmp
jmp
lock
mov
outs
retf
add
inc
xor
jge
imul
outs
in
inc
inc
sub
les
xchg
out
sbb
fnstcw
rcr
cli
dec
inc
outs
enter
xchg
gs
not
mov
push
jns
imul
gs
cmps
pusha
imul
or
or
mov
xchg
or
jb
push
sub
inc
test
ins
scas
or
cld
ins
sti
jg
push
xchg
les
dec
jle
ror
ret
and
or
sub
ins
aaa
in
enter
je
or
xchg
jmp
mov
in
xor
add
push
sub
dec
es
or
aaa
in
pop
in
sbb
mov
jb
sub
adc
sub
jbe
push
add
add
js
sbb
rol
out
add
lods
sbb
sub
jbe
icebp
mov
ss
adc
sub
add
sbb
mov
out
xchg
dec
sar
jmp
popa
jmp
add
pop
in
pop
add
and
mov
push
cwde
shl
test
dec
xor
jns
rcr
cmp
ins
and
and
adc
pop
mov
or
(bad)
in
test
popf
cmp
inc
pushf
push
mov
lock
dec
jp
or
icebp
jmp
imul
jmp
dec
pushf
ins
(bad)
popa
adc
pop
in
ret
and
adc
mov
pop
popa
test
stos
shl
push
add
(bad)
and
or
sub
xor
in
jmp
dec
imul
pop
sahf
test
in
inc
(bad)
std
jmp
adc
cld
scas
cmp
jmp
test
mov
cmp
add
jns
pop
test
adc
pop
outs
adc
jmp
ds
movs
mov
or
in
cmp
and
retf
xor
adc
jmp
nop
loopne
outs
hlt
mov
push
inc
mov
dec
push
mov
cmp
inc
cmp
icebp
and
imul
or
cs
inc
jmp
dec
fwait
mov
push
pop
push
rcl
mov
into
or
bound
mov
inc
mov
prefetch
fdiv
inc
sub
add
inc
jl
push
fimul
rcl
jmp
xor
push
sbb
pop
jbe
fnstcw
xor
cmp
push
and
ret
or
ds
jae
ror
cli
or
xor
stc
jmp
push
mov
fsubr
jnp
xor
jecxz
retf
stos
mov
or
mov
loope
mov
sahf
push
mov
jae
imul
loopne
rcl
bound
lods
and
push
dec
jge
imul
out
mov
xchg
xor
or
mov
xor
icebp
mov
and
outs
fadd
lock
or
inc
das
test
sti
sbb
push
dec
adc
call
sub
test
pop
or
add
mov
fs
out
and
xor
xlat
inc
sahf
push
repnz
test
add
js
shl
mov
mov
and
push
cmp
or
jmp
loope
fwait
iret
push
push
movs
push
arpl
das
push
mov
test
cmp
cmp
es
and
push
mov
scas
push
mov
inc
mov
mov
das
psllw
mov
sub
scas
mov
jnp
in
sbb
iret
inc
mov
mov
sahf
scas
outs
add
mov
and
pop
test
jmp
aad
jbe
jmp
xchg
pop
adc
outs
cs
pop
cmp
call
jb
push
jne
jb
or
sbb
mov
sbb
pop
add
fisubr
mov
mov
retf
push
fs
iret
xor
add
jbe
inc
xchg
or
sub
sub
add
jo
xchg
xor
mov
add
pop
ins
push
or
cwde
(bad)
jmp
mov
pop
sbb
pop
fst
jbe
inc
retf
addr16
aad
arpl
out
inc
pusha
and
mov
aam
add
clc
repz
or
pusha
and
stc
inc
push
mov
dec
xor
push
mov
jp
lods
in
into
or
add
or
(bad)
push
mov
lock
mov
out
in
repz
pop
cmc
add
pop
jno
dec
mov
icebp
cld
adc
(bad)
enter
sti
ficom
mov
(bad)
adc
mov
dec
add
inc
ret
or
loopne
adc
jmp
cwde
adc
mov
pusha
outs
into
shl
call
mov
cmp
add
pop
test
retf
outs
call
inc
mov
or
add
scas
sub
add
or
push
into
sahf
inc
popa
shl
adc
pusha
addr16
sub
push
cwde
push
mov
loope
stos
mov
xor
pop
push
and
jle
cmp
jbe
push
movs
mov
push
popf
mov
fimul
jmp
mov
pop
add
enter
mov
ror
or
inc
dec
and
dec
scas
inc
push
pop
mov
mov
dec
stos
cs
lea
jnp
enter
mov
outs
or
(bad)
(bad)
jmp
push
mov
stc
cmc
or
dec
iret
mov
enter
add
adc
adc
cmp
sahf
sbb
mov
je
inc
add
sar
in
add
mov
popa
dec
and
add
cmp
jbe
add
or
(bad)
xor
lock
push
push
fwait
(bad)
xlat
jno
sub
pop
pop
repnz
or
fimul
xlat
sub
cs
mov
cmp
imul
arpl
dec
(bad)
shl
lock
cmps
(bad)
xchg
mov
cmp
sub
sub
retf
or
call
add
push
les
or
jmp
jbe
pop
(bad)
loop
jns
push
imul
fstp
add
and
dec
test
scas
je
lea
shr
dec
sbb
push
and
mov
addr16
adc
or
jmp
fcom
ss
popa
and
cmc
jg
add
sbb
es
push
call
test
push
xchg
popf
ins
cmps
or
push
xchg
outs
clc
int3
(bad)
push
or
cmp
mov
ds
in
jmp
jge
adc
xlat
cli
xor
lods
bound
add
mov
aad
or
xchg
push
outs
jne
jle
cli
jo
stos
leave
dec
push
movs
aas
movs
cmp
repnz
or
sbb
push
inc
fwait
iret
jnp
and
cli
movs
push
frstor
mov
push
(bad)
push
out
pusha
sub
jnp
mov
mov
retf
in
or
mov
jmp
jo
icebp
arpl
and
shr
sub
or
pop
cmp
and
xor
(bad)
(bad)
push
dec
ds
sub
rcl
in
and
jno
mov
push
mov
xor
push
add
loope
mov
loop
push
cmc
cli
or
retf
pushf
jmp
push
in
and
and
or
jmp
or
jg
dec
xchg
xchg
movs
add
dec
add
push
pop
sti
sbb
int3
mov
jmp
not
push
fld
inc
mov
sub
std
cmps
push
or
mov
add
std
cmp
mov
in
jnp
repnz
xchg
push
cmp
adc
mov
outs
rcr
pop
int3
(bad)
fldenv
push
cmp
cmps
add
cmp
dec
dec
and
lock
test
loope
bswap
scas
lahf
out
adc
sub
or
fadd
and
das
scas
cmp
hlt
push
test
lds
in
jns
push
jmp
push
fdiv
or
(bad)
cs
test
xchg
inc
inc
sbb
mov
iret
imul
or
test
xchg
daa
cvttps2pi
mov
lahf
add
add
lods
add
push
push
pop
mov
inc
in
pop
add
xchg
jmp
adc
enter
jmp
loopne
cmp
jecxz
xchg
jmp
lea
sar
test
(bad)
out
shl
push
add
adc
xor
xchg
hlt
or
add
ins
dec
or
add
pop
loope
xchg
pop
inc
xor
adc
mov
fcom
retf
mov
mov
adc
push
push
int3
lods
test
lea
fsincos
aam
sub
dec
add
shr
in
enter
or
jmp
addr16
aam
xlat
and
dec
xchg
add
dec
loopne
push
sahf
je
movs
in
sbb
add
push
int
xchg
in
setg
push
shr
push
in
or
lahf
pushf
addr16
(bad)
movs
jmp
neg
test
pop
retf
shr
add
pop
or
test
and
pop
add
out
mov
mov
jge
(bad)
dec
push
sbb
cmp
fld
aad
(bad)
jmp
push
cwde
sub
neg
pop
add
cld
dec
(bad)
jmp
in
ins
mov
inc
retf
push
lods
repz
imul
fwait
es
cli
xor
mov
or
fisubr
push
sbb
jb
call
and
xor
mov
pop
jne
push
lds
pop
jp
pop
movlhps
scas
xchg
mov
xor
mov
popf
in
pop
scas
dec
pushf
jmp
ret
cmps
cld
sbb
push
adc
dec
inc
inc
fisub
pop
jmp
int3
push
xchg
test
ins
add
mov
mov
push
push
lock
test
xchg
movs
mov
into
arpl
imul
or
add
test
inc
leave
push
mov
outs
stos
cs
jo
inc
aad
pop
outs
out
mov
adc
pop
add
xor
stc
xor
stos
add
or
pop
mov
push
jno
inc
call
jecxz
inc
cmp
sub
xchg
or
push
ja
fucomip
push
ss
lods
and
adc
cmp
stos
out
mov
mov
retf
aaa
out
add
scas
(bad)
xchg
xor
mov
push
jbe
repnz
movs
cmp
in
int3
arpl
hlt
xor
push
and
loopne
mov
in
into
scas
repnz
test
xor
stc
or
jmp
xor
call
ins
retf
loop
sub
in
scas
outs
stc
std
lods
lock
mov
call
repz
dec
mov
mov
add
retf
mov
add
inc
or
dec
sbb
add
test
push
push
xchg
out
cs
out
add
adc
and
ret
mov
loope
pop
mov
or
fnsave
imul
mov
cmp
sbb
xchg
push
lods
nop
dec
in
push
retf
push
out
xchg
arpl
mov
mov
sahf
cmp
jmp
bswap
or
xor
repnz
mov
pop
lock
out
jno
pop
ror
xor
xor
stc
clc
sub
aam
or
addr16
ret
mov
or
retf
jge
test
or
out
test
push
(bad)
mov
adc
rcl
aaa
out
out
add
mov
movs
test
ins
repnz
xchg
xchg
push
push
inc
in
add
popa
mov
inc
iret
(bad)
sbb
mov
pop
mov
pusha
leave
add
mov
fwait
or
lock
xor
push
push
adc
cmp
mov
jmp
lahf
or
dec
lds
out
test
movs
jl
jp
mov
mov
rol
add
fsubr
imul
add
and
stc
imul
xchg
addr16
sbb
jg
xchg
cmp
hlt
or
jne
and
jle
mov
xchg
dec
or
sbb
push
in
mov
or
mov
(bad)
sub
sbb
inc
add
mov
ror
aam
jmp
cmp
mov
enter
add
xchg
push
add
cld
xor
cdq
or
icebp
sbb
inc
cmps
mov
clc
ins
or
add
mov
or
enter
out
mov
cmc
test
jne
or
xchg
and
adc
clc
add
mov
sbb
imul
dec
popa
outs
push
mov
inc
sbb
jl
mov
lds
push
adc
ret
std
pop
xor
fld
cmp
(bad)
call
jmp
pop
cld
pmaxsw
mov
imul
xor
and
xchg
jl
xlat
mov
les
stos
dec
mov
repnz
scas
xchg
stos
mov
scas
into
cdq
dec
es
stc
jb
int3
jmp
jg
adc
and
syscall
repnz
aam
cmp
jne
mov
inc
mov
push
pop
cli
jp
inc
jmp
(bad)
int
pop
add
sub
dec
pop
dec
ss
jmp
mov
cwde
aam
jmp
icebp
mov
test
js
mov
scas
push
popf
(bad)
adc
(bad)
stos
aad
sbb
pop
mov
repz
ins
mov
pop
xchg
sub
push
add
sbb
leave
call
inc
and
out
push
cdq
or
popa
add
rol
or
out
lds
pop
and
loop
or
jno
dec
xchg
jmp
adc
ins
test
cmc
into
imul
call
add
addr16
cmp
mov
es
pop
xchg
bound
or
jp
add
sbb
lahf
add
test
out
outs
pop
out
jl
cmps
dec
ins
add
out
call
inc
cli
mov
mov
mov
pop
xchg
or
jno
mov
in
add
jg
ins
inc
adc
pop
out
jmp
mov
clc
loopne
jbe
or
inc
mov
scas
sub
pop
xor
push
fwait
idiv
add
rcr
lods
or
fs
pop
jmp
neg
adc
rol
mov
je
ins
push
push
jmp
out
jmp
xor
cwde
fisubr
ss
push
stos
jbe
(bad)
pop
dec
mov
sti
inc
jbe
xchg
psadbw
jmp
and
sar
adc
jmp
ds
jno
pop
xchg
stos
or
mov
pop
out
inc
mov
sbb
sub
inc
test
sbb
cmp
xchg
or
push
sbb
pushf
xor
lock
pop
pushf
sbb
jmp
sbb
fnstcw
xor
popf
jmp
cdq
cdq
dec
aas
call
jns
mov
(bad)
pop
push
add
outs
or
inc
aad
mov
adc
add
ins
mov
mov
pushw
pop
mov
xchg
add
cmc
call
inc
or
sbb
pushf
cmp
xchg
cmp
lods
push
add
push
push
jmp
addr16
leave
jns
sti
clc
push
cs
adc
mov
push
inc
out
mov
inc
xchg
call
and
mov
add
jmp
or
gs
dec
jle
pop
fwait
add
or
sub
jmp
sub
adc
jb
add
mov
shl
pop
xchg
push
push
mov
mov
add
call
call
adc
(bad)
add
or
cmp
iret
sub
xor
cmp
aas
mov
push
idiv
jmp
jmp
icebp
mov
and
or
mov
push
test
ins
ret
and
scas
idiv
out
add
cli
pop
pop
in
out
retf
loop
pop
cmp
out
int
arpl
(bad)
and
ja
imul
push
jmp
ror
mov
jmp
jg
lds
adc
scas
cmp
setb
clc
jno
adc
lds
arpl
jp
mov
add
mov
xor
pusha
rcl
shl
xchg
sub
imul
pop
daa
or
xor
sbb
aas
mov
mov
pop
call
mov
imul
pop
xchg
fbld
or
inc
add
out
test
jmp
mov
or
and
mov
pop
data16
pop
cli
cmp
xchg
std
sub
js
pop
and
fdiv
ret
xchg
dec
sbb
or
int
scas
dec
ja
test
cdq
jo
xor
(bad)
aaa
inc
dec
in
pushf
dec
push
mov
push
push
fadd
and
xor
jb
sub
fisttp
or
pop
pop
(bad)
fwait
jmp
sub
retf
mov
and
add
mov
push
jo
mov
or
test
loope
jmp
scas
in
in
add
imul
sub
and
sar
dec
sub
enter
cmps
push
lock
push
jmp
repnz
mov
push
repnz
inc
movs
sub
(bad)
pop
jmp
addr16
adc
lea
pop
dec
in
fcmove
adc
lds
sbb
xacquire
leave
adc
cmps
fnstsw
xor
or
push
pop
aaa
and
sub
sahf
jge
fiadd
out
ja
and
pop
xchg
pushw
cmc
pushf
fcomp
or
ins
lock
jmp
xchg
aaa
xor
jmp
xchg
test
push
push
stos
data16
add
int3
pop
(bad)
mov
sbb
xchg
sbb
int3
push
(bad)
clc
push
jne
dec
retf
add
retf
xor
dec
movs
aas
push
shl
(bad)
jmp
sbb
and
mov
sub
sub
sbb
test
mov
dec
add
bound
mov
or
cmp
inc
mov
in
add
cbw
xor
sbb
out
lods
jmp
adc
(bad)
mov
mov
inc
pop
inc
mul
sbb
cs
pop
lods
xor
jmp
cmps
sbb
mov
mov
fbld
imul
les
sub
in
and
inc
mov
gs
mov
dec
mov
mov
movs
cwde
sbb
mov
sahf
ins
xchg
aaa
jmp
data16
scas
hlt
xchg
movs
push
mov
sbb
sub
xchg
pop
sub
fistp
dec
xor
add
mov
mov
mov
dec
ret
retf
add
aaa
mov
in
out
lods
pop
xor
stc
push
or
add
or
(bad)
leave
inc
jmp
pusha
in
dec
cmc
mov
mov
cs
div
lock
or
mov
popa
jle
mov
mov
cmp
and
(bad)
or
inc
clc
cwde
(bad)
mov
imul
fs
movs
inc
stc
mov
push
push
(bad)
sub
sub
add
(bad)
xor
cmp
xor
imul
into
ret
sbb
outs
int
or
add
add
xor
inc
push
or
rcr
pop
adc
shl
loop
fwait
xchg
enter
jmp
out
in
jb
mov
xor
pop
test
ror
mov
rcr
xor
sbb
ds
add
sbb
movs
push
sub
scas
jmp
stos
push
mov
jb
or
add
xchg
add
push
xor
into
sbb
jg
cld
fs
es
js
stos
arpl
xor
retf
add
out
or
mov
leave
push
mov
xor
and
movs
pop
cmp
inc
dec
pushf
stos
mov
adc
xchg
enter
mov
inc
add
movs
in
(bad)
push
adc
add
in
fmul
or
jns
adc
mov
out
sub
sub
or
jl
cmps
test
rcr
pop
shl
push
test
mov
je
jge
fdivr
jb
retf
neg
ins
push
push
push
inc
js
cmp
clc
ret
or
push
xor
add
call
sub
cmp
cmp
in
jmp
push
mov
xchg
rcl
ret
mov
(bad)
loope
sub
sub
mov
pop
sbb
dec
int
mul
push
jbe
or
push
ror
aaa
jge
mov
cwde
add
ins
add
aaa
int3
in
xchg
stos
adc
pop
sub
ret
pop
pop
fst
adc
movs
mov
and
cs
(bad)
in
jae
xor
aas
add
aam
arpl
jg
push
push
pop
data16
push
pop
sub
push
int
sub
mov
loopne
or
pop
aas
pushf
sub
push
es
shl
leave
fist
pop
push
adc
xchg
les
pusha
mov
fdiv
jns
jmp
test
mov
out
or
lahf
lock
jnp
xor
mov
arpl
or
mov
retf
adc
out
add
data16
cmps
aam
sub
jge
adc
hlt
test
push
leave
mov
mov
scas
cwde
jmp
adc
call
(bad)
cmp
popf
dec
ss
mov
shl
jge
lock
jmp
pop
rol
lds
push
test
test
mov
sub
(bad)
aaa
enter
mov
mov
clc
sub
push
outs
add
cmp
daa
xchg
adc
add
adc
or
or
jae
fdivr
ja
jecxz
jmp
jnp
imul
mov
push
jp
sub
jmp
push
push
fcomp
lods
ret
loope
pop
jbe
mov
(bad)
fistp
les
xchg
sbb
sub
dec
xchg
scas
jp
push
pop
adc
pop
jecxz
mov
clc
pop
xor
cmp
not
fisub
icebp
movaps
inc
push
add
push
pop
pushf
shl
and
mov
xor
(bad)
xchg
add
dec
in
push
dec
push
(bad)
mov
(bad)
pop
add
das
daa
aaa
dec
push
push
int3
es
ss
dec
out
sub
mov
or
fst
mov
ins
add
sbb
and
add
test
mov
push
sub
sbb
sbb
je
jg
inc
call
rol
or
aas
sub
sub
add
push
inc
jo
or
bound
mov
cdq
fmul
lods
xchg
push
imul
fcomp
or
adc
jmp
(bad)
(bad)
lods
pop
push
popa
rol
fcmovnbe
dec
push
stc
lods
into
sti
push
setne
jo
add
mov
outs
shl
cmp
jle
(bad)
adc
jne
inc
repnz
scas
jmp
mov
mov
mov
and
sahf
mov
sub
call
loop
push
xchg
xchg
or
cmc
cmc
mov
aam
xor
jge
add
mov
sub
fstp
jmp
fwait
in
cmp
xchg
push
repz
fld
cmps
fiadd
jbe
aas
pop
lods
fstp
sar
add
adc
fsubr
jmp
mov
mov
jle
xor
mov
pop
or
ret
fcom
call
(bad)
cli
in
pushf
icebp
jg
sti
das
pop
nop
ret
shl
fdiv
jbe
push
pop
sti
(bad)
sub
ret
jnp
gs
ret
in
inc
mov
sub
(bad)
mov
das
imul
fwait
jbe
jne
call
xchg
mov
sub
int3
jg
in
(bad)
dec
pop
push
inc
into
(bad)
sub
dec
loop
or
inc
bound
lahf
or
popa
(bad)
aad
add
inc
fisubr
cmps
jge
dec
mov
push
mov
das
mov
push
xchg
out
pop
dec
mov
add
mov
xchg
mov
xchg
cmps
aas
inc
push
pusha
cmp
loop
push
jae
sti
inc
mov
or
call
cmps
sbb
aad
cli
adc
mov
ins
push
test
mul
pop
jmp
jle
xor
cdq
sbb
sub
out
retf
cmps
clc
xor
xor
or
jb
xor
jmp
neg
jle
and
sahf
lock
add
stos
xchg
pop
cmp
xchg
push
xchg
sub
daa
gs
cs
phsubw
jge
hlt
or
test
mov
mov
and
xchg
leave
retf
pop
cmp
ss
dec
lock
or
leave
xchg
scas
fmul
fnstenv
repz
fwait
adc
sbb
ja
push
inc
push
mov
push
mov
ja
or
pop
imul
cwde
mov
xchg
test
add
mov
mov
in
lea
std
jno
xor
ss
dec
add
mov
aam
or
popf
or
hlt
xchg
or
mov
leave
scas
(bad)
repnz
pushf
jno
push
jbe
ss
rcl
add
je
test
nop
or
test
arpl
adc
pop
sub
add
push
test
scas
add
int3
and
mov
mov
add
add
or
or
aas
hlt
in
fcomp
jmp
out
sbb
sub
dec
push
iret
in
imul
push
push
push
or
or
sub
fld
imul
test
xchg
jo
jmp
xor
addr16
adc
arpl
xlat
mov
nop
(bad)
(bad)
out
aas
inc
inc
int
push
das
pop
push
(bad)
adc
push
push
add
ret
inc
push
mov
add
je
jmp
xchg
aaa
stos
(bad)
fscale
jge
and
add
bound
pop
sbb
push
je
(bad)
cmp
dec
cwde
outs
jo
jecxz
aad
mov
shufps
and
inc
bound
pop
imul
test
out
loopne
sbb
(bad)
mov
sbb
ret
dec
push
daa
iret
ret
sub
or
dec
xchg
int3
or
das
xlat
add
xor
in
fimul
xchg
stos
sbb
fstp
aam
xchg
les
lea
iret
and
mov
ins
mov
loopne
add
lods
mov
cmp
inc
push
jne
xchg
fldcw
(bad)
cmc
cli
add
in
cmp
mov
xor
out
pop
arpl
in
or
mov
dec
xor
hlt
inc
hlt
jne
add
loope
rcl
mov
jge
mov
push
not
daa
out
js
das
push
mov
shl
lods
adc
jmp
test
sub
pop
adc
sbb
adc
mov
lahf
pop
(bad)
shr
addr16
pop
(bad)
stc
cmp
add
jb
jle
or
ja
push
cld
push
int
adc
std
adc
xchg
inc
sbb
mov
push
mov
adc
push
mov
repz
stos
jno
popa
jne
mov
aam
add
in
jnp
lods
push
inc
aad
mov
lods
jno
push
jns
push
add
out
inc
test
add
pop
jmp
jbe
aam
sbb
push
push
(bad)
mov
mov
sub
jge
call
jno
mov
mov
jmp
add
mov
push
pop
mov
mov
sub
mov
sub
f2xm1
cmp
(bad)
mov
dec
shr
sar
sub
lea
cs
lods
jae
xor
add
xchg
sub
jmp
test
cmp
xor
sub
jge
out
test
ins
or
pushf
jne
and
ret
loopne
cs
imul
(bad)
daa
mov
push
xchg
xor
or
rcr
(bad)
mov
mov
jns
sbb
imul
mov
adc
inc
mov
or
pop
hlt
jnp
in
inc
retf
and
fs
in
loope
in
js
mov
sbb
xchg
add
jbe
xchg
jne
jne
or
xchg
ins
sbb
icebp
mov
into
addr16
push
fwait
(bad)
sti
icebp
aaa
push
sub
xchg
add
xor
scas
and
mov
xor
push
ins
loop
pop
add
mov
cmp
sub
sub
in
push
pop
(bad)
and
call
in
mov
push
xchg
push
mov
out
jmp
or
or
aas
in
mov
adc
add
into
jecxz
(bad)
push
cmps
cmps
sbb
(bad)
xor
in
popf
fmul
or
pop
dec
mov
ror
fstp
(bad)
jmp
add
sti
and
xchg
mov
lds
test
add
neg
add
jno
das
adc
arpl
adc
popa
xor
mov
or
std
jge
repz
inc
push
mul
push
inc
setnp
add
mov
retf
inc
inc
mov
imul
or
fistp
in
fst
sbb
or
add
xor
hlt
or
push
sub
xchg
mov
sub
icebp
dec
jmp
add
rcr
xor
push
inc
fstp
test
push
adc
push
shl
arpl
sub
sub
inc
xchg
mov
dec
xor
or
fdiv
test
xchg
sbb
clc
jle
sbb
enter
test
and
push
sbb
lods
ja
out
add
adc
(bad)
movs
or
cwde
cld
push
ins
repnz
popf
or
lods
xchg
lods
sbb
lock
movs
cmp
repnz
cmp
fadd
push
test
fadd
aas
bound
push
shr
jecxz
sub
leave
jecxz
imul
dec
dec
aam
ins
xchg
in
mov
add
call
jno
into
or
test
sbb
mov
push
ins
fdivr
mov
and
xor
add
jo
fsin
imul
cmp
mov
sbb
sub
cmps
shl
mov
not
ret
push
add
mov
xor
outs
mov
outs
dec
call
add
fnsave
(bad)
jmp
mov
popf
ret
push
retf
xchg
mov
cmp
(bad)
retf
sti
mov
pusha
mov
and
jno
fadd
scas
out
stos
lock
out
adc
and
aaa
clc
push
sbb
int3
cmp
(bad)
jne
or
push
iret
or
push
mov
jg
add
xchg
sub
imul
or
out
in
jmp
or
and
mov
push
lahf
aas
mov
add
bound
mov
int
clc
xchg
(bad)
sub
in
lahf
js
dec
pop
xchg
mov
jle
jmp
push
sbb
ss
out
outs
ret
stos
stos
inc
in
shr
or
(bad)
jns
add
mov
imul
inc
xchg
cmp
in
fistp
adc
or
pop
lods
pusha
push
jmp
push
add
repz
inc
and
push
xor
push
dec
inc
fdivr
ja
add
aas
mov
test
dec
jmp
addr16
mov
ret
mov
cs
fs
jno
pop
add
and
mov
pop
mov
ss
(bad)
addr16
shl
dec
lds
xchg
mov
aam
adc
xchg
or
gs
sub
outs
push
mov
dec
stos
inc
xchg
xor
aaa
mov
in
fiadd
loope
inc
or
pop
inc
sub
inc
cmps
cmp
push
dec
xchg
pop
push
in
cmp
xor
js
add
inc
les
mov
fadd
repz
popa
dec
nop
fwait
jo
jp
stos
jmp
add
jne
imul
push
(bad)
loope
cmp
or
cmp
jno
fmul
ds
jmp
aam
stos
retf
test
mov
or
(bad)
push
pop
adc
xor
adc
cli
xchg
jle
pop
pmullw
(bad)
fadd
test
inc
aaa
or
mov
test
(bad)
cmp
mov
push
push
cli
repnz
das
inc
mov
les
ds
or
mov
sbb
xchg
addr16
fwait
and
mov
std
ret
test
addr16
xchg
popf
jbe
sbb
shl
test
or
xor
imul
fistp
fwait
add
mov
cmp
cwde
ss
frstor
repz
jnp
inc
stos
and
cmc
fs
jmp
mov
fs
out
test
mov
or
push
(bad)
push
fstp
adc
cwde
mov
dec
test
jmp
inc
int
pop
fadd
sub
jns
xlat
push
shr
xchg
sub
pop
jo
jne
dec
(bad)
adc
cmp
jecxz
leave
push
aas
xor
rcl
les
mov
icebp
out
inc
xchg
xchg
out
es
leave
scas
sub
aaa
nop
stos
sub
mov
or
ins
jg
outs
jmp
pop
nop
xchg
dec
inc
(bad)
and
int3
add
jl
sub
lahf
jno
adc
das
pusha
inc
mov
pusha
imul
jmp
stos
rcr
push
mov
cmps
mov
mov
mov
(bad)
or
cmc
popf
call
or
mov
push
jns
icebp
aam
jmp
sbb
jge
dec
mov
es
stos
gs
jmp
push
add
cld
push
movs
(bad)
and
jmp
jmp
clc
push
shr
jnp
add
stos
imul
add
ror
jp
or
sbb
jmp
mov
fsub
in
(bad)
dec
pop
outs
jge
fild
dec
jb
mov
sbb
pop
jae
loop
mov
pop
mov
les
adc
pop
inc
cwde
test
cmp
add
inc
cmp
mov
xor
push
and
add
mov
(bad)
jne
push
pop
bound
retf
(bad)
jmp
(bad)
movs
jl
ins
push
xlat
fst
add
les
aaa
jl
or
xor
fist
sbb
jp
stos
in
test
xchg
ja
jne
fldcw
fdivr
jae
or
arpl
es
push
inc
inc
cmc
retf
das
repnz
mov
jp
repnz
mov
loope
mov
out
popf
ja
or
mov
or
ss
jb
imul
push
stos
outs
mov
cmp
add
sbb
add
push
cmp
jg
mov
stc
(bad)
call
mov
ins
or
ss
mov
xacquire
out
das
cld
call
xchg
or
loop
imul
push
mov
and
add
jecxz
jmp
lds
mov
(bad)
iret
pop
dec
pushf
add
mov
mov
mov
sbb
push
or
int3
jge
das
jmp
inc
pop
pop
sub
aam
jmp
out
mov
cmp
sub
cmp
pop
loop
stos
jmp
fbstp
lahf
scas
ds
jp
jmp
jmp
outs
pop
pop
repnz
mov
mov
adc
dec
inc
pusha
fnsave
ror
adc
es
sub
aaa
fs
push
or
jle
push
mov
shl
popf
rol
jmp
enter
push
dec
mov
mov
jmp
mov
fwait
mov
and
aaa
cmps
adc
cmps
div
push
cs
inc
xor
loope
push
das
fstp
sub
mov
sub
xor
loope
jb
add
lods
stc
movs
js
push
jbe
scas
dec
mov
pop
call
xchg
ret
push
xchg
mov
jecxz
add
xchg
dec
addr16
fiadd
add
das
mov
mov
test
ds
imul
push
xlat
mov
scas
adc
mov
push
aam
or
test
inc
add
mov
fiadd
xchg
push
dec
xchg
loopne
je
mov
sub
(bad)
xchg
das
push
xor
imul
mov
popf
push
out
data16
rol
mov
cmp
or
sar
push
push
ds
mov
push
cdq
rcr
lahf
fcom
test
mov
pop
dec
test
fsubr
xor
in
std
ds
add
call
sub
ds
adc
cmp
pop
enter
dec
push
mov
jmp
dec
jmp
cmp
xor
popf
(bad)
fs
cmp
in
add
je
arpl
cli
inc
xchg
lods
jmp
xchg
jge
out
fstp
jmp
enter
push
jle
mov
push
in
mov
lods
imul
jnp
push
imul
xchg
push
xchg
push
adc
rol
fld
push
inc
fidivr
imul
shl
popf
xchg
push
outs
fisubr
add
mov
lock
fdivr
test
mov
outs
sbb
mov
pop
cmp
jl
xor
cmp
or
(bad)
fwait
xor
cmp
add
test
test
call
shr
xchg
dec
inc
(bad)
(bad)
push
pop
popa
adc
call
or
cli
adc
mov
adc
sbb
call
push
dec
sbb
lea
lahf
jo
stos
or
rol
ss
pop
pop
push
jbe
mov
xchg
retf
mov
push
sub
retf
mov
add
repz
ins
fldcw
add
xchg
outs
jbe
lods
lods
jmp
out
(bad)
xlat
push
mov
jae
shl
psubq
leave
mov
push
ins
xchg
imul
cmps
jmp
inc
cwde
sbb
mov
push
rol
mov
add
(bad)
test
mov
lds
mov
jns
shr
pop
js
xor
sub
fisub
ins
sbb
jnp
or
sbb
cmp
sub
pop
jmp
dec
and
or
adc
sbb
lds
pushf
sub
push
sbb
xchg
or
fcom
push
add
push
call
fcmovne
pop
add
sub
dec
or
push
retf
push
vandps
inc
or
or
dec
stos
jo
retf
add
cmp
aas
xchg
inc
fs
out
ret
aaa
inc
jmp
xlat
lahf
popa
mul
inc
cwde
jo
out
mov
dec
bound
cdq
daa
jne
xor
add
add
jmp
imul
imul
les
and
out
push
pusha
adc
cli
or
xchg
sub
bound
inc
sar
imul
jno
int3
jbe
adc
outs
gs
mov
cld
or
imul
mov
push
retf
dec
dec
fnsave
fldcw
dec
adc
xchg
movs
daa
add
das
in
jecxz
scas
pop
sub
sub
or
or
mov
lock
gs
inc
cs
mov
mov
cwde
or
test
ss
add
sbb
pop
and
lods
out
ror
add
test
adc
or
xchg
test
fs
xor
and
or
or
out
test
push
xor
pop
nop
popf
pop
cmp
jmp
inc
or
pop
sbb
ds
xchg
or
out
fidivr
ret
or
cmps
aas
pop
(bad)
jmp
pop
xor
add
add
popa
shl
sub
in
into
hlt
daa
cmc
dec
ins
or
retf
gs
cmp
add
mov
into
push
cmp
nop
int3
aas
fcomp
pop
in
jmp
dec
mov
imul
and
ret
pop
das
icebp
mov
mov
sbb
xchg
mov
jmp
scas
cmps
je
in
into
push
inc
mov
(bad)
xor
(bad)
and
setle
jb
retf
out
lds
iret
out
sbb
dec
sahf
and
js
mov
dec
mov
or
push
popf
pop
pop
loop
fsub
mov
std
inc
mov
iret
ret
lods
push
scas
xlat
outs
sbb
or
jb
ins
dec
sbb
fimul
fdivp
push
sbb
loopne
test
or
dec
jecxz
add
push
pop
or
and
sub
push
(bad)
repnz
sbb
jge
xor
mov
cmp
push
addr16
or
mov
sbb
jmp
jmp
fisub
cmc
and
enter
jmp
shr
cld
daa
or
aaa
and
or
add
in
daa
or
add
hlt
loopne
inc
xor
inc
push
adc
add
cmp
pop
or
out
adc
jmp
fidiv
mov
retf
mov
push
push
ror
les
mov
inc
into
mov
jmp
inc
loop
add
mov
mov
or
lods
jns
pop
(bad)
xor
or
mov
push
xchg
pop
mov
jbe
fdiv
pop
adc
imul
xchg
fs
arpl
fldcw
movs
int3
jmp
mov
or
xchg
adc
in
call
cmps
cmp
repz
sbb
or
inc
mov
jp
or
mov
les
pop
or
pusha
(bad)
int
pop
fmul
fidiv
not
push
inc
or
push
jge
add
adc
jno
dec
push
and
or
cdq
and
push
or
in
mov
add
push
(bad)
hlt
mov
sub
daa
add
jmp
xchg
iret
jmp
pop
or
lds
adc
jmp
jmp
dec
or
xchg
jo
std
clc
frstor
leave
call
sub
es
lahf
nop
cs
test
mov
or
retf
rcl
in
scas
cmp
imul
aam
cmp
je
jno
sub
(bad)
and
pusha
cmp
jecxz
or
adc
mov
mov
or
lock
jmp
call
xchg
clc
arpl
dec
sti
mov
add
fcmovnbe
lock
sbb
mov
sar
jge
pushf
lods
aaa
in
cmp
xchg
out
or
inc
dec
out
shr
add
cmp
cmc
xor
into
dec
xchg
mov
add
shl
xchg
dec
fcmovb
xchg
inc
gs
adc
pop
mov
fstp
and
in
dec
push
imul
or
inc
ds
xchg
pop
push
imul
or
jne
jmp
or
outs
inc
pop
dec
jnp
fs
sub
add
fwait
dec
loope
and
mov
ins
mov
jcxz
mov
pop
and
fcomp
mov
sahf
pop
je
or
jne
inc
int3
das
lds
mov
mov
jg
popa
ja
dec
mov
outs
arpl
push
fs
add
sbb
adc
mov
cmp
xlat
std
lods
fwait
movs
mov
xor
lea
jmp
outs
lods
mov
bound
leave
dec
xor
push
ret
mov
jg
inc
add
popf
or
cmps
xchg
mov
jmp
ficomp
jmp
mov
(bad)
(bad)
add
jecxz
and
or
jns
aaa
jp
cmps
sbb
iret
repnz
add
mov
mov
cmps
cdq
lods
inc
lock
add
(bad)
aas
mov
push
xor
sahf
cdq
jo
(bad)
pop
scas
jns
lea
jo
shr
ret
xchg
out
fwait
lahf
add
mov
pop
cli
or
mov
add
test
sar
inc
ja
xor
movs
in
pop
lds
add
mov
imul
retf
dec
repnz
jmp
ja
shr
xor
cdq
ins
sub
pop
mov
and
ret
xor
mov
in
nop
fidivr
test
lahf
fimul
out
pushf
cld
jle
jmp
ret
add
mov
and
popa
(bad)
push
or
push
xchg
mov
dec
sahf
xor
sub
pop
inc
sbb
fst
push
loope
cmp
cmp
adc
add
xor
jae
adc
mov
pop
jecxz
mov
imul
jge
lods
retf
sar
sahf
or
jg
xchg
cmp
push
(bad)
or
bound
xor
retf
and
sub
out
cld
imul
jno
ja
push
icebp
mov
jbe
adc
stc
lods
sbb
push
inc
sub
syscall
in
out
push
je
loope
push
sub
mov
ficomp
test
popa
out
cmp
js
rcl
push
and
push
bound
les
js
call
cmp
pushf
add
pop
jae
(bad)
xchg
(bad)
outs
add
(bad)
aad
repz
mov
mov
scas
shl
mov
gs
inc
stos
mov
retf
rcl
or
jg
rcr
sub
dec
sbb
add
add
or
mov
lahf
jg
and
ins
push
push
icebp
sbb
or
bound
or
imul
ret
adc
jmp
ss
pcmpeqb
inc
ret
cmp
sar
and
pushf
rol
or
push
jns
or
cmps
rep
or
add
movsx
fwait
pushf
push
ss
mov
cmp
jmp
fadd
pop
and
arpl
out
inc
mov
mov
sahf
sub
icebp
and
mov
sub
fnstcw
mov
inc
sti
in
push
inc
arpl
jecxz
dec
stos
imul
pop
jne
mov
pop
or
mov
dec
inc
ins
ja
jmp
add
fsubr
lock
sub
pop
dec
in
mov
scas
retf
or
mov
pop
loopne
ins
mov
arpl
inc
jge
in
mov
xor
mov
cmp
mov
loopne
or
cwde
(bad)
cdq
sub
(bad)
jo
repnz
or
jge
push
out
mov
leave
iret
and
neg
(bad)
fld
push
std
mov
mov
pop
push
mov
movs
scas
add
cmp
and
ja
pusha
out
jp
pop
addr16
int3
push
mov
sbb
and
xor
iret
sub
call
loopne
push
call
xchg
cmp
pop
xchg
hlt
or
xor
test
cmp
nop
adc
cmp
shl
leave
cs
adc
dec
jae
inc
xchg
out
shr
retf
push
jno
fidivr
jmp
retf
add
dec
popa
lahf
push
cmp
int
add
or
ds
sbb
cmps
dec
adc
dec
mov
or
sub
in
cmp
push
aaa
mov
sbb
call
ins
xor
xchg
cmp
push
dec
scas
ins
add
add
dec
xchg
and
add
jae
fdivr
mov
pop
call
retf
data16
push
mov
ins
fiadd
int
xchg
mov
shr
fwait
je
mov
sub
xchg
or
inc
scas
je
js
add
cmps
pop
jb
fnsave
or
or
sbb
(bad)
fs
dec
call
sub
fidivr
mov
ss
push
test
sub
imul
inc
jge
(bad)
cmp
add
les
cmp
les
imul
lods
pusha
jmp
sub
pop
jmp
std
xchg
or
scas
(bad)
cmp
jns
fidiv
lods
add
push
mov
push
push
pop
mov
push
mov
(bad)
int3
jmp
jb
out
push
shl
jle
or
(bad)
push
xchg
arpl
adc
not
mov
cld
ins
das
sub
div
fwait
popf
cmp
jno
dec
lods
out
in
mov
jns
jae
je
int
push
lods
shr
scas
add
jb
call
shr
add
aaa
push
fs
lock
ret
dec
xchg
push
jecxz
mov
fst
inc
add
sahf
push
lock
or
lods
aam
inc
lds
adc
cmp
sbb
adc
mov
dec
bound
leave
push
or
cmp
call
cmp
or
es
xlat
sbb
(bad)
pop
scas
inc
dec
mov
and
arpl
in
fsub
lods
cmp
leave
shr
mov
hlt
adc
cmc
out
call
arpl
test
xchg
sub
in
dec
dec
adc
out
popa
sub
dec
dec
xor
movs
ins
ins
add
cmp
add
punpckhwd
aaa
cmp
jmp
mov
and
stc
int
stos
lods
in
jmp
pop
jno
add
out
jle
inc
mov
inc
jb
and
inc
cmp
xchg
sbb
push
sbb
ret
xchg
popf
inc
jbe
scas
outs
scas
dec
dec
sub
sub
call
lds
stos
test
dec
scas
out
or
cmp
mov
xor
(bad)
loopne
int3
cmp
push
lea
ss
lahf
ret
sub
popa
outs
xchg
and
and
sahf
xlat
jmp
pop
jecxz
push
xchg
mov
push
pop
loop
jb
mov
inc
push
test
mov
fldcw
imul
lods
add
bound
jne
push
mov
sub
fild
cmps
call
inc
js
mov
ret
and
mov
jno
cld
test
repnz
test
xchg
cmp
fstp
dec
push
and
inc
jmp
sub
fbstp
or
dec
inc
jp
fisttp
mov
mov
nop
mov
imul
leave
pop
out
pop
mov
jmp
xor
pop
fucomp
nop
popa
cmp
xchg
fcmovb
adc
mov
xlat
jge
cmp
call
pop
add
mov
out
dec
aaa
test
push
pop
mov
xchg
cmp
sti
pop
mov
shl
push
mov
pop
gs
cld
xchg
les
dec
stos
pushf
repnz
int
xchg
shr
pop
cmp
mov
sbb
imul
mov
or
pop
jmp
or
dec
nop
push
rcl
pusha
pop
mov
hlt
js
cmp
dec
lds
mov
stc
enter
mov
test
popa
sub
mov
xlat
add
or
test
fisttp
add
xor
or
mov
push
pop
adc
dec
push
xchg
test
loopne
pop
mov
xchg
mov
cld
push
jb
lods
and
jae
rol
push
mov
xor
inc
jmp
jae
cli
(bad)
shl
idiv
or
les
and
jl
and
sub
call
retf
push
mov
sub
push
push
pop
inc
sbb
push
xchg
aam
or
stos
mov
sub
pop
jae
ds
(bad)
mov
mov
test
sbb
push
xchg
mov
addr16
in
or
pop
sbb
push
mov
(bad)
nop
xor
pop
lods
pop
aad
lahf
daa
mov
ja
ja
inc
movs
aad
mov
pushf
and
or
pop
addr16
fsubr
sub
jmp
ins
ins
popf
push
add
mov
sbb
mov
sub
cld
das
aas
imul
inc
adc
push
(bad)
sbb
data16
jg
push
add
loop
xchg
xor
jp
je
fdivr
aam
push
out
cmp
adc
lods
jnp
int3
aaa
mov
(bad)
call
out
jmp
mov
mov
inc
lea
not
popf
jmp
adc
mov
push
outs
jmp
cmps
sbb
dec
jp
jns
icebp
cli
inc
or
mov
fnstcw
jmp
push
sbb
cmp
test
cli
adc
sub
or
sbb
(bad)
clc
jle
mov
add
cmp
icebp
outs
sub
jle
jle
cmp
sub
xchg
or
mov
or
lea
inc
xchg
jmp
inc
(bad)
div
fidivr
xor
in
cld
mov
add
dec
cwde
das
sbb
(bad)
shl
xchg
sub
adc
or
arpl
test
jo
sti
test
test
add
cdq
mov
into
loopne
jge
sub
cld
push
aad
aam
mov
mov
dec
add
inc
xchg
rol
stc
xor
fs
mov
cs
imul
test
jmp
add
(bad)
jmp
or
mov
mov
xchg
adc
or
pop
aad
jge
and
pop
push
jmp
cwde
aas
xchg
(bad)
(bad)
jbe
jmp
xlat
pop
push
ud1
adc
repz
dec
fist
pop
imul
mov
jne
bound
dec
std
stos
sub
add
int
jp
ret
loop
ret
push
cmps
in
fld
dec
fbstp
xchg
push
test
add
push
fimul
in
xchg
and
test
add
clc
pop
or
outs
mov
cmp
xchg
dec
out
jns
mov
and
fisubr
movs
in
or
arpl
pop
jmp
repnz
sahf
dec
inc
pusha
pop
jmp
(bad)
loope
jb
test
xchg
and
xchg
sbb
retf
push
xchg
cmp
or
shl
shl
add
ret
(bad)
into
es
(bad)
mov
pop
push
xchg
test
jmp
psubb
in
dec
adc
in
cmp
fdivrp
(bad)
movs
mov
jmp
fdiv
inc
cmp
(bad)
jmp
lods
inc
ret
push
enter
xlat
dec
sbb
add
popa
(bad)
(bad)
dec
in
mov
add
mov
and
lods
push
sbb
adc
in
test
in
mov
les
scas
addr16
or
es
mov
cmc
push
(bad)
pop
pop
imul
mov
iret
add
movs
mov
push
add
or
mov
push
gs
inc
addr16
add
imul
hlt
jmp
test
mov
mov
xchg
in
nop
addr16
xchg
repnz
or
and
test
push
add
push
and
add
das
mov
ret
mov
scas
mov
retf
xchg
movs
(bad)
in
pop
adc
test
pop
or
rcl
out
das
cmp
sbb
xor
outs
fidiv
in
dec
add
dec
stos
add
jp
(bad)
aas
push
jne
out
retf
add
mov
sub
lock
dec
add
add
mov
cmp
imul
and
stos
int
es
bound
test
in
inc
pop
push
outs
mov
lock
add
xor
jmp
jecxz
les
fistp
dec
cmp
mov
mov
inc
or
iret
sub
call
outs
call
popa
lds
xlat
add
or
xchg
cmp
js
add
mov
cmp
shr
adc
add
out
aam
jg
mov
iret
or
pusha
mov
and
push
push
call
inc
add
add
inc
pop
xchg
and
shl
rcl
mov
sub
mov
sbb
(bad)
std
mov
adc
cmps
rol
or
jmp
inc
cmp
clc
dec
push
faddp
inc
push
or
sbb
lods
mov
stos
sub
sub
xlat
and
jmp
push
push
loopne
sub
or
jp
cmp
jbe
ins
cmp
jno
fstp
arpl
and
gs
int
popf
sub
aas
mov
rcr
test
adc
ror
xchg
jno
xchg
mov
cmp
sub
inc
inc
int
fisub
jns
lods
dec
into
bound
dec
jmp
adc
jbe
push
or
mov
jmp
iret
cwde
mov
jmp
popa
inc
or
or
pop
or
pushf
jmp
into
(bad)
push
inc
fidiv
js
push
xchg
out
sub
dec
mov
cwde
imul
sub
popa
popa
inc
jnp
stos
xor
xor
sub
add
mov
cmp
(bad)
dec
pop
xchg
pop
repnz
fst
movs
inc
push
out
inc
mov
and
pop
lock
(bad)
dec
fisttp
push
add
jmp
inc
sahf
test
mov
push
pop
repz
push
add
xor
cs
int3
aas
mov
lods
daa
stos
add
les
(bad)
xor
pop
xchg
mov
fs
in
scas
push
jae
lea
xchg
mov
jbe
ror
or
(bad)
iret
cwde
ins
push
add
sti
push
mov
xchg
stos
inc
push
mov
xchg
pop
pmulhuw
iret
sbb
test
movs
lods
sbb
gs
jmp
xchg
pop
mov
pop
or
in
sbb
popf
(bad)
std
stc
jp
jmp
sub
out
dec
je
in
in
cmc
dec
pop
jmp
pushf
xor
xor
adc
jo
loopne
jb
add
ds
mov
jmp
jae
jno
imul
pop
bound
or
pop
(bad)
fmul
inc
add
xor
leave
aam
jmp
adc
shl
shl
push
push
scas
les
sbb
jmp
test
retf
daa
jl
cld
mov
call
mov
mov
inc
xchg
icebp
or
ds
pushf
jmp
inc
out
stos
jmp
xor
pop
sub
in
icebp
retf
enter
ja
add
dec
push
retf
add
stos
(bad)
xchg
ins
fidivr
add
adc
dec
imul
mov
stos
xchg
repnz
jecxz
lods
mov
leave
xchg
jbe
push
cmc
inc
mov
add
mov
movs
test
retf
test
fistp
out
lods
pushf
sub
xchg
(bad)
or
xor
mov
cli
or
adc
pushf
imul
sub
scas
pop
imul
jnp
pop
push
push
sbb
test
cs
mov
cmps
sahf
sub
mov
jns
or
mov
out
or
pop
in
push
(bad)
or
xor
push
add
mov
data16
xor
sub
fbld
enter
inc
pop
sbb
outs
jae
sub
jge
jno
mov
push
xchg
pop
retf
push
test
lock
outs
loop
lock
retf
jecxz
or
sahf
out
out
fsubr
dec
sub
jmp
inc
add
call
inc
rcr
sbb
sbb
arpl
stos
es
outs
jp
inc
jb
test
add
in
and
imul
cmp
adc
and
scas
sub
or
xchg
in
sbb
aam
leave
push
std
xchg
repnz
nop
pushf
pop
or
sbb
pop
dec
xor
push
in
lods
mov
arpl
clc
adc
fild
(bad)
jmp
pop
mov
mov
ret
push
sub
jmp
popa
jp
aam
mov
mov
dec
xchg
adc
sbb
enter
add
mov
out
cmp
call
fst
jo
int
inc
xchg
loope
push
cld
push
je
pop
sbb
js
dec
add
les
adc
test
(bad)
mov
sub
push
stos
stos
test
xor
or
aaa
pop
and
pop
mov
cdq
jmp
and
pop
mov
ret
call
add
pop
dec
sbb
retf
out
test
rcr
add
add
jb
add
jnp
jp
inc
stos
(bad)
repnz
push
adc
mov
clc
or
mov
nop
mov
mov
jmp
jmp
jo
push
xor
mov
add
mov
ror
in
test
xor
pop
(bad)
hlt
cmp
jmp
rcr
add
or
add
sbb
push
mov
ret
push
push
cmp
dec
xor
xchg
add
bound
xchg
or
enter
leave
mov
and
ret
xchg
(bad)
dec
gs
xchg
sar
iret
addr16
and
popf
lods
je
push
fs
dec
add
int
xor
dec
cmp
ret
push
sub
es
mov
test
not
xchg
stos
mov
sti
fxch
and
and
jp
rol
cmp
sub
xlat
sbb
push
jne
imul
mov
jecxz
shr
jmp
cmp
addr16
mov
popf
add
adc
cs
cld
push
xchg
mov
add
popf
ins
or
not
or
mov
add
pop
retf
loope
mov
cmps
cli
add
xor
xor
rol
mov
mov
or
jle
mov
jmp
daa
inc
xchg
dec
sub
sub
xlat
push
(bad)
out
iret
(bad)
cmp
or
mov
or
or
xchg
jnp
nop
jmp
dec
test
std
dec
mov
sub
mov
ret
icebp
dec
adc
pusha
ror
mov
mov
mov
jmp
test
xchg
outs
adc
xchg
shl
test
out
gs
xor
jb
test
pop
xor
sub
fmul
mov
jbe
push
xchg
cmc
sbb
pushf
ins
das
sti
fdivrp
sti
push
mov
imul
add
ud2
pop
mov
js
cli
adc
mov
in
jns
inc
add
push
inc
inc
pop
push
(bad)
aam
fild
ss
loop
sub
add
xor
mov
mov
and
sub
jecxz
cld
out
mov
add
enter
out
mov
(bad)
in
sub
cmp
in
imul
push
int3
and
popa
jo
mov
add
aad
loope
jmp
jmp
push
inc
mov
mov
xor
shr
imul
cmps
inc
clc
int3
in
aam
rcr
cmps
leave
sti
in
adc
imul
jmp
push
ins
cmp
inc
pop
jle
or
mov
mov
test
mov
jmp
push
mov
fucom
test
lods
in
add
in
(bad)
add
sbb
frstor
cmp
cmp
stc
push
or
clc
cs
pop
call
rcr
nop
fdivr
pushf
(bad)
jmp
adc
cmp
push
push
lds
and
mov
adc
jp
(bad)
out
test
sbb
fild
xchg
add
adc
sub
xor
cmp
jmp
cld
push
lahf
into
sti
jl
sub
mov
dec
push
xlat
jmp
xchg
ret
and
ret
(bad)
cmp
stc
js
imul
jmp
test
test
test
jmp
inc
mov
cld
stos
(bad)
jmp
push
adc
into
sahf
mov
pop
sbb
(bad)
jno
jmp
outs
push
and
xor
sbb
jmp
ja
hlt
adc
pop
push
sub
nop
daa
xchg
xor
jmp
test
gs
and
add
sub
jl
cmps
push
fucomi
inc
push
xor
jo
mov
push
xchg
xchg
add
scas
(bad)
sbb
hlt
int
cdq
cdq
aam
xchg
mov
push
pop
test
xor
add
lea
mov
es
int3
mov
dec
and
out
mov
lods
pop
push
into
sub
out
push
bndldx
inc
mov
sub
dec
sbb
push
push
mov
dec
mov
add
or
outs
lods
or
mov
cwde
imul
jl
ds
stos
xchg
lds
sahf
(bad)
scas
test
inc
bnd
xor
jne
and
out
call
adc
stos
fwait
adc
adc
or
je
xchg
jo
mov
cmps
retf
push
inc
test
xchg
fcmovne
dec
mov
cld
sub
adc
mov
mov
or
ror
gs
(bad)
std
and
jmp
cmp
(bad)
sub
add
lock
(bad)
int3
push
xchg
and
inc
ins
xchg
stc
loopne
stos
and
adc
jmp
lods
fdivr
mov
test
(bad)
retf
fnstsw
jmp
mov
sti
test
(bad)
push
out
rcl
mov
jo
add
mov
cmc
loopne
sub
sub
push
push
je
jmp
popa
push
xor
pavgb
fsubrp
adc
jg
sub
outs
cdq
xchg
add
sbb
je
aam
das
add
xchg
sbb
or
mov
neg
add
inc
push
jb
and
(bad)
xor
in
leave
and
xor
sbb
pop
add
movs
jb
cli
jmp
in
dec
cmp
cld
jmp
mov
jg
adc
out
mov
jecxz
scas
jecxz
lea
fnstenv
fadd
inc
fs
leave
jmp
jge
inc
pop
loop
pushf
push
mov
jno
pop
add
add
and
popf
or
push
or
retf
dec
ins
jo
in
movaps
pop
mov
addr16
sub
xchg
les
sub
cmp
out
clc
adc
mov
cmp
sbb
push
call
or
outs
push
out
outs
out
inc
test
xchg
push
or
dec
push
jge
pop
push
or
cwde
xchg
adc
add
mov
adc
or
or
outs
lods
add
sub
xor
daa
inc
or
adc
les
stos
fistp
(bad)
test
or
add
mov
clc
(bad)
sub
or
adc
rcr
rcl
(bad)
ret
lods
or
jb
mov
movs
dec
cs
add
jmp
dec
add
ret
cmp
icebp
jmp
dec
mov
in
mov
add
in
mov
repnz
ror
push
daa
xor
mov
and
int3
xchg
inc
arpl
out
mov
jns
xlat
stos
icebp
pusha
jmp
mov
adc
push
das
pop
retf
jno
std
or
sahf
lods
cwde
sbb
and
gs
pop
jp
mov
and
add
cdq
ficom
neg
jb
push
neg
or
mov
retf
xchg
sub
jecxz
icebp
clc
aad
xor
sub
sbb
sar
stc
jbe
out
mov
icebp
or
es
gs
xchg
push
push
retf
or
in
fs
mov
xchg
pop
(bad)
mov
in
lds
(bad)
fmul
jnp
retf
xchg
lds
pop
jge
mov
mov
in
imul
inc
mov
mov
push
punpckhwd
add
call
xlat
dec
xchg
sbb
loopne
mov
repz
inc
and
mov
push
sbb
stos
sbb
jmp
out
stc
retf
fldcw
scas
cmp
icebp
ret
add
dec
pop
shl
fisub
outs
clc
add
cmp
cld
mov
jno
sub
xchg
cs
cmc
out
in
test
cmp
loope
dec
fsubr
popf
ins
push
loop
mov
xchg
push
inc
in
push
xchg
repz
scas
mov
adc
lea
in
or
adc
mov
jnp
nop
inc
(bad)
dec
fsub
cld
xchg
aam
or
inc
mov
xchg
out
stc
in
adc
movs
iret
jmp
cmp
mov
and
inc
les
addr16
bnd
push
add
cmp
ficomp
in
pop
or
adc
xlat
cmps
push
ins
div
mov
or
mov
fsubr
fild
test
adc
ds
mov
xchg
push
imul
inc
mov
(bad)
loopne
lock
jg
scas
push
out
or
scas
popa
test
int
out
cmp
js
jge
jmp
lods
ret
dec
jb
push
dec
hlt
aam
aad
jo
nop
stc
jmp
enter
pop
inc
push
push
mov
push
into
call
out
inc
pop
shl
popf
retf
syscall
call
mov
jno
aas
sub
mov
sti
push
sbb
fild
inc
and
call
jmp
xchg
fisubr
ins
fs
mul
lea
stos
and
add
add
pop
mov
sbb
push
call
and
cmp
add
add
push
test
lods
pop
sub
and
inc
or
test
lock
stos
xchg
jmp
les
daa
enter
movs
and
xchg
addr16
ret
lds
jb
cmp
enter
mov
fsub
jmp
jle
mov
adc
cmp
clc
addr16
jnp
mov
pop
mov
loope
push
std
js
sti
xchg
lods
test
or
or
cmp
sub
call
nop
test
stos
jmp
pop
dec
sahf
mov
js
test
dec
in
add
mov
fistp
aaa
jle
jge
xchg
arpl
sbb
out
xor
mov
mov
sub
(bad)
fdiv
push
jge
push
sbb
xchg
add
sti
push
sti
sub
mov
mov
sbb
shr
(bad)
xchg
jl
xchg
call
or
out
mov
dec
loope
ins
movs
add
daa
mov
dec
mov
(bad)
(bad)
std
retf
mov
push
mov
push
pop
iret
or
leave
push
push
aam
pop
cmps
clc
mov
or
push
or
(bad)
push
sti
fldcw
fucomp
dec
jecxz
fcomp
inc
fs
push
sub
mov
es
cwde
adc
dec
add
loope
movs
iret
fld
icebp
jmp
retf
pop
movs
movs
call
jmp
inc
or
push
movs
sbb
adc
sub
test
sub
fs
push
jl
inc
and
leave
daa
(bad)
mov
mov
leave
or
mov
or
into
xchg
or
mov
jbe
int3
dec
fstp
cmp
int
gs
jmp
call
or
mov
aaa
push
int3
add
stos
jmp
inc
adc
sub
mov
stos
and
mov
fld
jmp
sar
add
mov
xchg
in
inc
adc
push
jmp
mov
rcr
stos
inc
movs
jmp
enter
in
(bad)
out
cli
cmp
cmp
add
jbe
and
and
sbb
stos
sbb
xor
mov
sahf
xor
ins
mov
add
jecxz
mov
adc
iret
or
pop
jnp
mov
jbe
imul
cli
mov
sti
call
dec
jnp
xor
lock
test
mov
mov
jmp
inc
xor
into
out
push
push
lea
sahf
imul
and
(bad)
imul
jnp
mov
pusha
xor
sub
loop
or
les
out
mov
xor
push
xchg
xchg
xor
or
fisubr
test
not
std
xchg
rcr
xchg
cld
jnp
fimul
mov
mov
push
in
enter
repz
mov
ret
retf
sbb
and
sub
aad
rcl
aad
dec
or
fadd
jbe
sub
xlat
mov
add
push
fs
push
div
jb
sub
mov
xchg
cmc
dec
das
sahf
add
fnsave
test
mov
cmp
in
cmp
xchg
iret
test
out
cmc
outs
std
mov
and
outs
stc
aad
fsub
enter
adc
push
pusha
mov
add
cld
mov
mov
imul
retw
push
repz
ins
repz
cli
adc
mov
adc
pop
cs
stc
jmp
xor
icebp
addr16
sti
in
fbstp
cmp
movs
mov
add
push
and
stos
imul
jnp
dec
adc
pop
sbb
or
jns
sbb
and
call
jmp
jl
sub
ins
and
mov
int3
repz
mov
push
in
mov
cmp
pop
dec
jmp
cdq
sahf
jmp
ja
dec
lock
sub
lock
add
add
inc
loope
mov
gs
adc
fstp
fucom
sbb
jne
jecxz
mov
xor
sub
mov
or
and
scas
mov
or
jmp
push
fstp
pop
sub
pop
ror
gs
jno
xor
pop
fistp
adc
popf
xchg
xchg
push
cmp
sbb
push
pop
or
mov
xor
cli
inc
cmp
mov
stos
cmps
loope
jmp
mov
push
test
adc
and
mov
outs
jbe
cmp
enter
inc
jmp
jbe
sub
mov
fbstp
pop
add
(bad)
mov
call
jns
ret
ins
push
cmp
fadd
inc
mov
ja
call
out
mov
popf
sbb
sub
push
sub
push
mul
cmp
xchg
lods
inc
jbe
jae
or
je
xor
xchg
lsl
add
idiv
xor
ror
cmps
push
in
out
xchg
(bad)
adc
or
fsubrp
aam
jmp
out
mov
or
mov
xchg
adc
dec
outs
mov
dec
inc
sub
jp
inc
icebp
dec
hlt
and
xchg
xchg
loope
loopne
or
das
in
mov
aas
mov
inc
stc
imul
add
div
fmul
sar
dec
xchg
or
sub
es
push
mov
jbe
add
adc
push
fcom
daa
mov
(bad)
int
(bad)
sar
aam
adc
xor
cld
mov
mov
fst
sub
mov
inc
std
int3
fsubr
and
in
cmps
sub
out
das
mov
jmp
mov
mov
fxch
inc
adc
xchg
or
xchg
repz
add
fimul
pop
dec
ja
jmp
fwait
mov
dec
aas
add
push
and
leave
add
sub
adc
or
jecxz
out
sub
in
or
mov
call
sub
jmp
jnp
push
add
mov
imul
jbe
sub
inc
inc
ins
fs
cs
adc
inc
daa
mov
aad
(bad)
(bad)
fadd
idiv
adc
out
mov
outs
jo
xchg
xchg
xor
inc
inc
push
or
xor
mov
and
add
push
loopne
cdq
lds
add
xchg
stc
pop
cmp
int3
adc
daa
and
or
ins
push
sbb
lods
pop
je
jae
out
xlat
test
jb
es
xchg
pop
jle
inc
jg
mov
addr16
fwait
sub
clc
sub
nop
in
les
mov
daa
in
je
push
and
inc
hlt
mov
rcl
or
popf
aas
push
push
dec
call
and
cmp
jmp
test
push
or
mov
daa
mov
push
fwait
loop
imul
sti
lods
ja
jmp
ss
push
xor
movs
add
fcmovb
add
xchg
fucomip
mov
inc
mov
inc
add
pushf
nop
mov
add
movs
or
test
out
or
xor
out
stos
xchg
ret
push
(bad)
shl
arpl
js
bound
addr16
pop
push
sub
inc
pop
in
inc
stc
sub
dec
dec
and
clc
test
xor
jmp
sbb
inc
sahf
or
pop
and
sub
shr
jmp
sbb
inc
arpl
push
jne
jo
sub
leave
popf
add
mov
rcr
ss
popa
bound
cdq
pushf
sub
push
add
cmp
jge
das
mov
push
outs
push
push
add
into
jbe
cmp
push
ror
repnz
std
push
xchg
mov
lds
aam
add
sbb
lods
add
gs
ret
bound
outs
push
clc
sub
mov
aad
add
mov
xchg
aam
xor
js
(bad)
jp
call
xor
pop
pop
icebp
(bad)
ins
or
adc
test
call
xchg
jns
mov
ins
sti
aam
(bad)
icebp
jo
cmp
pop
cmps
imul
xchg
jmp
ret
push
cmps
cmp
push
pop
push
and
les
push
cmp
jbe
sbb
sbb
int
aad
call
or
lea
aas
inc
and
je
sbb
jnp
inc
stos
push
mov
and
ins
dec
and
test
out
inc
sahf
mov
xlat
adc
sub
mov
mul
fucomi
mov
iret
or
lds
add
inc
sbb
std
fs
lods
cmp
ds
(bad)
setb
xor
inc
cmp
xor
or
xchg
add
pop
jmp
sti
clc
jb
adc
sub
add
imul
jns
js
or
jmp
fbld
daa
push
stos
xor
pop
add
jmp
xchg
adc
mov
xor
lock
cmp
mov
jge
stc
inc
xor
cwde
xchg
add
xlat
pop
cmp
or
jge
shl
or
lahf
pop
push
or
xchg
adc
or
and
cli
add
lock
popa
fdiv
ret
into
jmp
jmp
jmp
and
std
and
mov
out
pop
mov
or
out
fldl2e
and
mov
and
fsub
fst
cld
shr
add
leave
into
and
sti
cmp
je
push
(bad)
pop
push
push
mov
push
aam
pop
xchg
ins
push
std
mov
cmp
cld
add
scas
jne
mov
add
or
ret
mov
aam
sub
xor
dec
ds
rcr
inc
or
mov
leave
rol
pop
(bad)
js
les
stos
xchg
div
outs
sbb
dec
mov
mov
pop
xchg
fadd
scas
icebp
test
and
xor
dec
scas
mov
cdq
ds
xchg
push
fcom
xor
inc
repz
fld
cdq
dec
sub
ins
mov
jecxz
mov
mul
or
pop
inc
ret
loop
shl
adc
jmp
pop
fist
mov
aam
add
xchg
mov
add
push
out
jne
(bad)
cdq
lods
mov
add
shl
add
add
fbld
sbb
or
loop
lock
or
cli
xor
mov
icebp
or
jmp
push
mov
(bad)
sahf
push
push
sti
rcl
jmp
add
out
jp
pop
pop
jg
xchg
lea
fdiv
(bad)
push
inc
or
and
fimul
mov
xor
push
inc
push
fcom
or
test
sbb
inc
stos
xchg
out
add
add
sub
cmp
pop
ins
mov
lods
jge
jbe
pop
inc
sbb
push
cmp
mov
or
into
jecxz
call
cs
cwde
push
jle
xchg
fstp
pop
mov
add
add
outs
jae
jge
not
or
mov
sub
sbb
jmp
je
shl
sub
jne
sahf
add
out
cmp
mov
fild
ret
out
jg
pop
movs
pop
test
pop
push
cmp
aaa
xchg
pop
jno
add
push
push
lahf
aad
adc
xchg
iret
pop
mov
daa
test
xor
call
xor
xor
push
lods
mov
shr
jmp
loope
popa
jg
or
call
(bad)
xchg
bound
adc
scas
rcl
mov
push
jle
dec
cmp
add
xor
jae
cmp
or
enter
mov
add
and
xchg
or
ja
sub
fwait
adc
cld
fisubr
mov
or
inc
jo
pop
cmp
jmp
aam
out
jae
je
dec
xor
or
ins
out
jecxz
inc
or
cdq
xchg
sar
push
nop
ror
push
imul
imul
lods
rcl
xor
mov
sub
mov
sub
sbb
in
or
daa
sbb
add
mov
call
jmp
push
xor
jmp
sbb
(bad)
enter
jnp
adc
pop
xor
enter
adc
pop
cmp
jno
inc
pop
add
fcom
(bad)
scas
cmp
sub
jb
lods
(bad)
mov
inc
lea
mov
mov
movs
je
std
inc
add
pop
add
(bad)
nop
jle
pop
jg
movs
sbb
es
cs
inc
into
add
test
mov
cld
std
pop
mov
movs
nop
jg
push
into
inc
jmp
xor
call
or
aam
xor
and
add
xor
or
pop
jb
or
jo
pop
sub
bound
mov
mov
jmp
sbb
jp
push
pop
push
pushf
call
dec
test
xor
mov
add
push
inc
jge
lahf
mov
retf
ret
jecxz
jp
gs
jb
pop
mov
fmul
jo
xchg
add
(bad)
push
ret
inc
sub
sub
jb
jae
jo
repnz
sub
retf
sbb
jl
pop
icebp
sub
dec
je
adc
call
aad
dec
sbb
mov
or
inc
mov
push
jge
call
fadd
jl
lock
jmp
mov
(bad)
mov
xor
test
add
mov
hlt
adc
jmp
push
dec
jno
test
jmp
rcl
call
mov
mov
xor
or
xor
outs
and
jb
rcl
and
or
and
inc
mov
retf
push
(bad)
gs
push
xor
rol
push
mov
or
pop
push
test
mov
mov
inc
xchg
push
repz
pop
aaa
(bad)
adc
mov
adc
mov
or
repz
in
outs
int
push
movs
les
jne
mov
mov
add
and
jmp
sub
and
mov
jle
popf
jae
jmp
pop
aas
loop
add
mov
push
mov
int3
mov
mov
mov
or
xor
cwde
sub
cdq
xchg
jno
or
jnp
(bad)
pop
stos
push
pushf
push
jae
je
out
mov
std
icebp
or
test
push
ror
adc
das
add
inc
movq
or
pop
nop
clc
shl
mov
or
sbb
loopne
or
fldl2t
ret
mov
out
cmps
dec
test
stos
in
add
sahf
cmp
add
jp
cs
popf
push
pop
sub
adc
loopne
dec
dec
adc
or
and
ins
or
add
inc
repnz
lea
std
mov
int
sub
sbb
push
sbb
push
scas
jp
mov
sub
sub
inc
mov
(bad)
xchg
push
mov
popf
push
ins
dec
jmp
fdivrp
jb
or
mov
add
sar
retf
sub
add
stos
pop
cli
push
sbb
dec
xchg
mov
sub
in
lods
loop
mov
mov
daa
inc
add
xchg
cmps
jmp
jp
mov
mov
mov
add
stc
jns
fcomip
test
jmp
xchg
push
aad
ja
shl
ds
lods
sub
or
xor
inc
inc
jmp
or
sbb
push
push
std
int3
sub
dec
ror
div
dec
sub
xchg
aam
sbb
cs
cmp
stc
push
push
xchg
push
mov
fisubr
jbe
jge
jo
rcr
test
outs
nop
adc
add
dec
pop
dec
push
mov
mov
rol
add
pop
add
cs
mov
mov
add
mov
rcl
rol
sub
jmp
push
enter
fwait
popa
push
mov
inc
add
sub
out
lods
dec
add
and
pop
jmp
lock
sti
not
sbb
call
test
sbb
add
(bad)
fild
std
add
xchg
adc
je
fcomp
(bad)
data16
test
call
clc
scas
cwde
scas
pop
out
or
aad
jecxz
into
sti
mov
lods
outs
repz
lock
or
push
mov
add
xlat
jae
pop
push
das
dec
xchg
ds
and
mov
loop
cmp
sbb
retf
jmp
and
mul
fsubr
(bad)
out
jmp
addr16
or
push
pop
xchg
inc
int
inc
movs
sub
in
xchg
sbb
and
jg
ins
sub
xlat
jno
shl
fist
ret
jbe
call
cmp
or
inc
dec
int3
sub
mov
repnz
jl
cli
add
mov
shr
push
sub
aad
rol
jp
xchg
pop
xlat
test
push
xchg
push
mov
jmp
outs
mov
lods
leave
mov
or
imul
hlt
call
sahf
xchg
xchg
jge
dec
retf
ds
in
outs
mov
in
inc
lods
adc
movs
movs
and
pushf
repnz
or
mov
add
retf
inc
and
enter
adc
jmp
inc
mov
rol
jmp
jmp
jle
aad
xchg
xchg
push
push
lahf
sti
add
test
test
pop
push
jnp
gs
push
ja
add
inc
push
xor
test
dec
add
and
shr
ret
pop
jbe
or
dec
inc
inc
ja
ja
punpckhdq
add
add
movs
add
js
xchg
iret
fcomp
ror
xchg
pop
mov
add
mov
add
in
mov
jl
xchg
outs
loope
and
shl
call
mov
jae
movs
add
inc
mov
add
fistp
cmps
(bad)
stc
outs
fild
iret
loope
mov
leave
cmp
addr16
mov
repnz
dec
(bad)
call
addr16
or
xor
(bad)
fld
dec
imul
mov
(bad)
and
aam
ret
aaa
jmp
cld
jle
jns
mov
scas
arpl
cmp
jno
and
jno
aaa
inc
ins
or
movs
in
push
imul
jmp
push
and
scas
retf
push
xor
inc
mov
or
call
or
(bad)
pushf
dec
stc
cs
mov
jns
inc
sub
jno
and
icebp
popf
or
loope
mov
sub
clc
je
adc
sbb
inc
or
cwde
fcomp
jbe
fild
dec
pop
addr16
ror
dec
movs
push
stos
nop
ins
push
das
stos
jge
sbb
adc
scas
mov
pushf
add
fsubr
test
lods
or
sbb
push
xchg
mov
cdq
in
leave
sub
int
popa
sub
cmp
mov
daa
mov
outs
(bad)
and
or
stc
dec
lds
jmp
aaa
ret
xor
call
xchg
gs
jmp
jmp
in
pop
adc
add
or
push
dec
fwait
(bad)
adc
inc
fwait
or
js
add
movs
movs
sar
ror
or
in
stc
jg
movs
fnsave
pop
arpl
inc
lods
(bad)
pop
mov
or
std
sahf
mov
(bad)
outs
sbb
(bad)
ret
adc
arpl
add
xor
mov
push
leave
sbb
mov
(bad)
jno
add
bswap
jle
(bad)
(bad)
loopne
xor
gs
stos
push
xchg
or
in
or
retf
hlt
and
sub
add
push
fwait
dec
leave
xor
inc
jg
in
fidiv
aad
stos
test
and
loopne
pusha
jb
fst
nop
and
push
push
jns
out
ins
adc
lds
jb
lods
push
rcr
xor
sub
aas
adc
dec
sbb
(bad)
xchg
and
and
in
rcr
sbb
ds
cmp
xor
push
pusha
jae
fs
call
jmp
adc
jo
je
or
jge
adc
and
mov
inc
push
and
cmc
xor
out
add
mov
enter
out
(bad)
retf
or
mov
cmps
sub
and
adc
clc
push
adc
push
fwait
sahf
scas
jmp
lods
movs
daa
mov
cmc
dec
mov
push
mov
hlt
mov
scas
jns
and
dec
push
jne
mov
add
adc
add
dec
daa
out
push
mov
movs
jmp
test
jge
jno
push
push
nop
je
std
xor
add
dec
clc
fisttp
and
adc
inc
jmp
push
adc
push
add
fistp
jp
adc
jmp
and
mov
push
in
push
mov
xchg
popf
add
mov
stos
mov
fisubr
dec
jecxz
sti
sub
int
clc
loopne
jo
jmp
retf
inc
mov
js
or
gs
dec
cmp
loopne
jbe
in
fwait
sbb
push
add
pop
aad
inc
or
test
test
pop
jmp
mov
jno
mov
dec
lea
or
mov
sahf
dec
cmc
cmp
iret
jp
add
add
outs
test
xor
jae
test
loope
mov
test
imul
mov
push
jo
inc
(bad)
aaa
sub
mov
push
dec
call
retf
xor
lds
dec
add
adc
(bad)
and
sbb
inc
dec
imul
enter
jmp
fsubr
adc
mov
pop
shl
loopne
ins
push
call
inc
fadd
scas
xchg
jmp
cmp
cmp
xor
mov
dec
jle
cmp
inc
push
arpl
mov
fisttp
nop
cs
ins
stc
(bad)
cmp
xchg
jmp
aas
arpl
dec
xchg
and
adc
ret
inc
aaa
and
cmp
push
cmp
add
mov
jmp
and
sbb
stos
lods
add
ja
fnstcw
leave
jl
or
std
push
add
add
mov
inc
xor
mov
in
fsub
cmps
nop
out
xchg
jns
push
dec
dec
push
cmp
pop
lahf
dec
popf
or
clc
pop
push
mov
mov
adc
(bad)
into
xchg
imul
pop
mov
jmp
or
push
stos
(bad)
std
data16
cmp
in
mov
or
pop
xor
xor
retf
ja
dec
cmps
fiadd
(bad)
fdiv
mov
xor
in
cmps
sbb
mov
je
push
mov
sub
add
pop
test
sbb
push
mov
jmp
mov
test
push
mov
sub
sbb
call
mov
cmp
shr
cmps
or
jge
rcr
adc
std
or
sub
cmps
xchg
add
xor
jns
xlat
xchg
or
push
xchg
mov
popa
fxch
cmp
daa
addr16
outs
add
sub
jmp
xor
inc
hlt
sbb
inc
test
cmp
jmp
sub
int
lock
push
leave
je
rcl
mov
lahf
addr16
push
push
in
cmps
call
out
test
sbb
inc
pop
push
call
or
enter
add
or
jns
jmp
xor
int
jl
cmc
imul
ins
loope
sub
fldenv
add
cdq
add
pop
addr16
pop
jmp
retf
pushf
repz
inc
sti
xchg
shr
push
xchg
ror
ja
add
fcomp
sbb
dec
imul
xor
xchg
fimul
lods
test
out
push
mov
repnz
inc
push
mov
je
dec
loope
aas
inc
cmp
shr
dec
jno
imul
sbb
adc
aas
xchg
retf
fwait
push
jecxz
in
and
adc
adc
out
cmps
js
pop
ins
das
mov
cmps
out
(bad)
retf
ss
leave
jmp
cs
jbe
push
mov
int3
div
imul
in
add
add
or
shl
add
jns
jle
mov
into
xor
scas
mov
fisttp
cmps
sti
xchg
out
or
jmp
and
ret
cmc
rol
loopne
stos
outs
mov
mov
cdq
jmp
dec
mov
test
fbstp
pop
in
xchg
test
inc
jb
or
loopne
jl
jmp
nop
(bad)
cmp
sub
fldcw
iret
and
jmp
rcr
jbe
xor
(bad)
xor
lods
sahf
cmc
push
retf
jne
scas
shr
jl
dec
aas
xchg
sub
pop
pushf
sub
xchg
jmp
mov
mov
mov
ss
add
cs
mov
imul
aas
adc
jecxz
sbb
push
inc
pop
push
leave
inc
xor
sub
push
jbe
dec
push
adc
mov
cmp
mov
mov
pop
pusha
xchg
jno
mov
retf
dec
mov
jl
dec
fiadd
push
push
rol
xor
mov
xchg
sti
les
out
inc
cmp
fild
fisttp
inc
xor
and
sub
push
pop
xchg
in
inc
or
mov
xchg
in
test
lock
jle
add
into
call
inc
xchg
call
addps
xor
push
in
pop
int3
adc
imul
pop
iret
lock
inc
stos
dec
jle
call
and
or
sub
dec
mov
pop
jl
pop
hlt
and
sbb
test
mov
add
fs
xchg
(bad)
sti
add
iret
cmp
cwde
jp
cmp
sub
(bad)
stos
jmp
sar
stos
xor
push
push
clc
adc
cmps
stc
cs
pop
popf
mov
fnstenv
jmp
xchg
out
test
cld
icebp
ja
mov
jmp
mov
or
shl
fld
sti
sbb
rol
push
das
push
cdq
and
outs
push
movs
mov
inc
dec
imul
add
push
imul
lods
sbb
mov
mov
or
xor
or
dec
cdq
pop
pop
jmp
lods
jl
mov
jp
push
jp
repz
sbb
lea
in
add
outs
pop
inc
push
dec
inc
add
adc
jbe
push
jmp
jle
mov
add
fsubp
mov
daa
and
in
loopne
test
loopne
sbb
pop
gs
into
mov
stos
das
push
in
mov
inc
dec
hlt
(bad)
sub
jecxz
dec
dec
inc
fdiv
aad
or
jnp
mov
ret
cmc
clc
sbb
push
arpl
neg
fdiv
daa
lahf
ja
and
add
sub
ficomp
push
or
jmp
rol
adc
fs
test
jmp
std
adc
jmp
out
arpl
clc
pop
xor
into
gs
enter
pop
and
test
adc
daa
cli
movs
inc
rcl
xchg
xchg
jmp
hlt
iret
add
(bad)
pop
push
sar
xor
xor
stos
mov
xchg
sbb
leave
push
fwait
das
push
add
btr
dec
xchg
ficomp
cs
mov
cmp
xor
rol
arpl
xor
out
test
clc
add
mov
jg
out
xchg
retf
add
into
mov
xchg
or
pop
ins
adc
or
jmp
dec
inc
or
add
lea
jb
out
cmp
pushf
xor
xor
sub
imul
ja
das
leave
xor
paddw
fcom
push
in
and
repnz
aaa
add
mov
jl
or
(bad)
nop
jl
xchg
aas
iret
or
fstp
ss
pop
jecxz
lahf
xor
and
xchg
push
outs
mov
dec
fstp
add
test
add
loope
into
inc
xchg
lods
push
(bad)
xor
xchg
jmp
xor
mov
cdq
mov
enter
cli
mov
sbb
test
add
call
push
stc
or
add
mov
outs
push
or
xchg
add
loop
push
arpl
add
shl
out
fisub
xchg
or
mov
fwait
or
popf
push
jle
cmc
xor
add
sti
sub
push
mov
idiv
xchg
rcr
icebp
std
dec
lea
pop
dec
sub
mov
add
(bad)
in
rcl
fnstsw
push
push
inc
jmp
mov
adc
dec
sub
pop
mov
lahf
icebp
mov
cld
sbb
jmp
test
cli
push
fistp
push
xlat
outs
rcl
leave
pop
pop
scas
sbb
push
shr
int3
icebp
(bad)
inc
add
inc
dec
push
fsubr
jmp
mov
clc
mov
or
fstp
and
rcl
test
sub
dec
fsubr
cmps
push
stos
call
inc
sub
pop
test
add
bound
add
repz
sub
pop
outs
mov
xor
xchg
or
sbb
ss
retf
push
iret
(bad)
std
fcomp
mov
imul
daa
push
adc
test
fs
add
std
push
pop
xchg
frstor
(bad)
jmp
push
or
mul
pusha
mov
int3
push
xor
or
pop
or
and
push
pop
add
cmp
cmp
sub
pop
ror
or
std
imul
pop
push
add
mov
mov
arpl
cmps
push
sbb
sub
adc
fisttp
fsubr
jmp
jno
gs
jp
lea
sub
into
enter
cli
(bad)
in
daa
(bad)
and
call
in
mov
ret
ja
add
pop
sbb
pop
jecxz
and
mov
ins
hlt
jbe
pop
ds
pop
adc
sbb
mov
movs
fwait
xchg
inc
and
push
push
sbb
push
iret
inc
sub
add
or
mov
sub
cmp
mov
add
(bad)
(bad)
xchg
inc
inc
add
inc
inc
and
mov
test
push
sbb
add
or
test
clc
jmp
and
xor
addr16
js
jle
sub
xor
jmp
stc
outs
mov
pop
pop
xor
or
outs
and
cwde
icebp
in
xchg
lahf
mov
rcl
or
jle
jg
fadd
fsubr
mov
dec
(bad)
jmp
push
aaa
and
fwait
xor
push
xchg
pop
aas
jne
test
mov
lods
add
jb
inc
mov
jnp
sbb
push
mov
fstp
jmp
shl
cmp
fwait
mov
jmp
and
fyl2x
add
push
push
and
and
mov
int
and
(bad)
adc
xchg
retf
jno
or
pusha
mov
xchg
mov
add
mov
cld
fsubr
inc
jmp
imul
jo
out
arpl
(bad)
xor
lods
add
daa
push
push
lds
lods
xchg
jnp
mov
jle
push
mov
movs
push
push
lea
les
add
sub
sub
add
jae
mov
rcl
ficom
rol
ror
pop
mov
xor
add
retf
pop
dec
clc
mov
je
or
rep
jmp
fsub
ins
shl
retf
daa
aad
inc
aam
sbb
sub
or
nop
mov
push
mov
push
and
pop
add
mov
in
dec
test
dec
popf
jo
out
fistp
cmp
(bad)
je
cmp
call
daa
or
push
dec
pop
adc
loopne
add
or
jno
shl
cmp
dec
mov
mov
sbb
cwde
add
or
aas
(bad)
arpl
repz
add
inc
sub
imul
in
and
cmp
cli
repnz
add
dec
mov
les
fnstenv
dec
mov
jnp
jg
imul
or
data16
push
jmp
pop
pusha
int3
push
cmp
bound
(bad)
test
mov
xor
xchg
or
iret
jmp
mov
mov
loopne
enter
dec
loop
ds
pop
add
xor
popa
rol
in
shl
jo
push
jmp
sar
(bad)
pop
pop
push
movs
push
cmp
ret
(bad)
repz
or
mov
rol
pusha
dec
cdq
sub
jmp
arpl
les
pop
stos
dec
mov
ror
arpl
jmp
add
icebp
call
push
daa
mov
mov
mov
aaa
aas
loope
cmc
xchg
outs
add
and
fnsave
xor
imul
jnp
mul
xchg
push
rol
and
pop
rol
les
imul
outs
jecxz
mul
jmp
fimul
in
adc
add
mov
ficomp
out
push
clc
or
cmp
jg
and
push
jg
inc
push
push
fstp
and
test
out
jns
xlat
js
sub
repz
xchg
add
push
dec
test
scas
int
mov
outs
or
inc
movs
shr
(bad)
cdq
jae
pop
mov
mov
adc
inc
loop
sub
(bad)
sbb
mov
jge
mov
call
dec
scas
(bad)
js
pushf
jbe
pop
stos
push
cmc
ins
ja
mov
jmp
fdiv
and
dec
lds
test
test
out
pop
test
sub
div
pxor
adc
jmp
push
int
loope
stos
or
sbb
dec
pop
(bad)
push
mov
jbe
ret
out
mov
movs
pop
pop
add
sti
cmp
inc
out
test
mov
stos
out
inc
dec
sbb
jae
shr
inc
ja
movs
jmp
rol
jge
loopne
bound
add
xlat
xor
xchg
sbb
jmp
and
cmp
out
ins
fwait
pusha
mov
push
mov
inc
jg
mov
dec
xchg
push
sub
sub
scas
push
add
mov
or
or
pop
das
mov
and
pop
adc
push
pop
sub
adc
fistp
mov
fld
sub
sahf
jle
xchg
cmp
pushf
xchg
jo
cmp
jmp
jp
add
call
retf
add
xchg
shr
jo
shr
lods
dec
pop
rcl
out
sbb
jmp
int3
test
mov
dec
jno
inc
aam
mov
mov
stos
fld
rcl
push
jae
push
fs
das
cmp
cmc
or
inc
cmp
xor
sub
into
mov
int3
sub
stos
sbb
push
cli
cmp
mov
sar
or
fnsave
inc
out
enter
mov
pop
(bad)
xor
shl
mov
not
loope
sub
loope
push
sub
dec
cmp
ins
div
dec
fcomp
int3
pop
pop
cmps
out
cmp
dec
cmpxchg8b
test
test
pop
lea
xor
jl
test
push
xor
imul
mov
ins
js
cmp
sahf
arpl
ins
dec
push
add
call
and
adc
sahf
push
inc
push
xor
test
jbe
add
sub
xchg
cmp
es
aaa
aad
jecxz
mov
jns
mov
and
xor
in
aas
jle
inc
popa
or
out
mov
mov
sahf
imul
push
cmp
js
call
daa
jmp
fisub
jge
fmulp
cmps
in
adc
pop
adc
fdiv
bndldx
inc
xchg
in
fimul
fiadd
push
and
or
add
inc
nop
push
ins
add
out
sub
adc
je
and
xor
scas
mov
jmp
xchg
adc
fcmovnbe
xor
cmps
xor
sub
pop
popa
rol
or
add
enter
lahf
xor
loope
sbb
xor
add
shr
jbe
jg
or
std
push
out
fsubrp
imul
or
ja
push
fs
inc
pop
int
fnstenv
sub
fisub
mov
stos
mov
add
sub
ss
outs
add
xor
gs
in
lahf
push
loope
loop
xor
add
fdiv
dec
jbe
dec
out
or
push
mov
xchg
out
lahf
mul
or
push
call
push
jle
fcom
jp
fcmovnbe
pop
ds
push
or
xchg
out
call
ins
aad
adc
push
popf
inc
data16
mov
adc
retf
xor
mov
cmc
push
mov
adc
pop
cli
imul
dec
retf
dec
push
leave
xchg
jmp
mov
pop
out
push
push
push
cmp
dec
mov
das
or
loopne
inc
popf
shl
pushf
dec
int
xor
cli
inc
xchg
cld
jmp
mov
mov
hlt
pop
nop
jmp
ins
pop
mov
jmp
sbb
je
rcl
sahf
xchg
jmp
in
pop
shr
pop
aas
dec
xor
pop
xchg
dec
cs
xchg
push
push
ret
outs
jno
add
push
fsubp
test
test
xor
je
pop
stc
ins
test
out
xchg
jnp
add
sbb
push
xchg
popf
or
xchg
sahf
add
jge
sbb
adc
test
or
in
mov
lea
dec
(bad)
push
(bad)
jmp
clc
fwait
inc
test
add
mov
add
scas
pop
mov
rcl
(bad)
hlt
sub
mov
fdivr
iret
dec
sti
pop
inc
test
mov
das
or
mov
outs
push
mov
inc
call
sub
adc
push
mov
into
syscall
in
xchg
int3
ds
iret
repz
stos
jno
jmp
repz
and
push
add
lods
inc
out
lods
or
mov
xchg
inc
push
sti
add
push
jmp
and
mov
cld
loope
mov
push
test
int
xchg
xchg
sub
or
jle
pop
mov
loop
sub
movs
add
out
clc
test
inc
cmp
add
and
pop
pop
sub
jg
imul
xchg
xor
pushf
ror
call
push
std
pminsw
leave
and
pop
scas
mov
sbb
mov
pop
mov
jmp
repnz
loop
loop
push
outs
sbb
retf
daa
xchg
push
xchg
pop
repz
movs
clc
sbb
icebp
xor
push
push
jmp
inc
xor
push
add
cmp
repz
cdq
or
cmp
add
std
adc
add
xchg
ja
cmp
push
or
inc
pop
xor
mov
out
jmp
mov
mov
outs
outs
inc
test
xor
jp
bound
and
sbb
or
mov
or
jl
sbb
jge
dec
pop
stos
inc
pushf
not
jb
jo
imul
icebp
imul
retf
popa
mov
daa
push
arpl
push
pop
ins
arpl
(bad)
inc
cwde
mov
dec
and
and
cmc
daa
or
mov
xchg
cmp
sbb
stc
and
sbb
call
loopne
es
(bad)
push
dec
rol
or
and
pushf
and
aaa
pop
fstp
inc
mov
add
aad
ret
test
push
add
mov
dec
mov
rol
(bad)
cmc
movntps
mov
std
in
dec
pop
xor
mov
push
sub
mov
popf
add
mov
push
mov
push
add
push
mov
mov
jb
in
bound
(bad)
jp
or
std
sar
jns
mov
fisttp
std
std
in
lods
mov
hlt
mov
mov
sar
pop
jbe
jmp
mov
pop
rcr
add
or
and
add
mov
inc
jecxz
loopne
cs
clc
test
aad
add
or
or
mov
or
xchg
cmp
test
mov
dec
addr16
add
dec
mov
les
dec
mov
fsubrp
daa
push
scas
dec
pop
shl
and
jg
je
pusha
jp
and
sbb
sub
aaa
or
mov
imul
movs
repnz
mov
and
or
je
ins
into
outs
imul
shl
jnp
adc
arpl
dec
or
stc
(bad)
sbb
jne
pop
cmp
push
mov
or
mov
(bad)
xor
jb
ja
cmps
nop
stos
sub
test
loop
cmp
add
pop
stos
loop
cmp
cmp
fmul
lahf
sti
je
mov
jmp
stc
xchg
xchg
test
jmp
adc
sbb
dec
push
xor
stos
stc
je
mov
pop
ins
cs
sti
pop
cmp
mov
inc
fdivr
mov
push
fst
pop
idiv
add
inc
ss
pop
repz
or
icebp
lods
(bad)
jmp
cmc
push
out
xor
ret
or
push
sbb
clc
popf
mov
(bad)
scas
mov
aad
jo
aas
cdq
sbb
test
ret
add
dec
jmp
pop
retf
iret
dec
or
aas
pop
sub
(bad)
dec
dec
cmps
ret
mov
jge
xor
mov
xor
pop
cmp
pop
scas
jmp
adc
push
sti
(bad)
fisubr
retf
mov
mov
clc
mov
pop
or
pop
mov
push
dec
movs
pop
mov
sub
bound
je
rcl
push
aad
inc
or
cmp
call
inc
in
mov
mov
adc
fwait
xlat
shr
add
sbb
test
jnp
or
or
adc
and
bnd
dec
cs
dec
icebp
mov
push
aas
xchg
das
push
cmp
or
and
int3
inc
loop
cmp
jmp
push
stos
xor
dec
daa
jl
push
add
(bad)
cld
rcr
repz
hlt
mov
xchg
cmp
xchg
cmp
inc
fs
out
xchg
xchg
xor
js
adc
dec
inc
fadd
cli
add
sub
rcr
push
ret
cmp
inc
pop
xchg
dec
add
xor
sub
scas
or
jecxz
adc
lea
jne
fsub
add
fcmovnu
dec
or
test
xor
jp
cli
lods
dec
dec
push
and
inc
inc
add
cmp
mov
lea
stos
cmc
inc
jmp
push
int3
pop
and
push
sub
push
jmp
mov
mov
movs
dec
jne
inc
push
xor
mov
adc
xchg
jl
pop
sub
fisubr
mov
(bad)
call
dec
push
test
adc
ss
repz
les
lea
aad
(bad)
es
push
cmp
repnz
and
repz
push
cmc
not
sbb
pop
shl
idiv
push
(bad)
pop
mov
loopne
out
mov
les
call
mov
fsubrp
jge
or
call
sub
inc
xchg
mov
dec
add
mov
mov
adc
cmp
(bad)
mov
push
mov
xchg
test
mov
pusha
(bad)
jmp
push
pop
inc
mov
mov
push
cwde
mov
(bad)
daa
add
popf
in
ss
(bad)
iret
mov
fld
xchg
dec
push
pop
push
pop
or
test
push
cmp
ss
sbb
in
fld
xchg
repz
or
mov
aas
les
adc
push
xor
pop
push
adc
sbb
es
int3
mov
fld
repz
into
outs
and
or
iret
pop
sub
fsubr
rol
mov
mov
mov
push
outs
jmp
push
or
mov
fnstenv
jge
xchg
and
(bad)
jmp
out
addr16
shr
pop
inc
mov
lahf
js
or
rcr
ds
mov
jl
mov
and
aam
mov
call
xchg
pmulhw
in
jns
iret
add
cdq
rcl
or
into
popa
pop
cmp
jmp
inc
jmp
hlt
inc
cwde
add
jle
test
dec
sbb
add
imul
das
and
mov
mov
add
iret
jae
in
test
(bad)
and
cmp
or
pop
ja
scas
mov
test
clc
dec
leave
or
fist
idiv
cmps
or
in
xor
outs
xchg
test
dec
out
call
imul
push
rcr
push
mov
jmp
adc
imul
xchg
add
das
imul
pop
jmp
jbe
mov
jo
test
arpl
aaa
xlat
or
jmp
pop
sbb
push
ds
pop
xchg
stos
ds
adc
add
or
pop
inc
or
inc
dec
(bad)
outs
jmp
cmp
aad
dec
or
ret
pextrw
mov
aad
xchg
sub
arpl
jb
clc
sub
jne
push
imul
jg
daa
lahf
push
add
or
mov
add
xchg
or
rcr
mov
jmp
fwait
inc
stos
in
or
fstp
xor
fnstcw
jo
hlt
dec
adc
xchg
rol
(bad)
fimul
sub
out
dec
int3
xor
popf
mov
add
xlat
inc
out
dec
arpl
mov
(bad)
std
mov
fwait
or
fdiv
push
xor
jp
push
or
add
push
js
xchg
jns
into
mov
aas
jb
xchg
out
leave
adc
adc
test
add
icebp
xchg
jmp
retf
sub
int
addr16
sub
lods
cli
fwait
sub
xchg
mov
push
call
and
adc
cld
rcr
aaa
xchg
lea
ja
inc
push
jge
fucomi
mov
or
pop
fs
rol
cmp
lods
add
push
inc
ret
arpl
int
jmp
xor
aad
inc
ror
iret
pop
mov
and
sbb
xchg
or
nop
fld
sti
rcl
sbb
mov
mov
jmp
mov
pop
push
push
xor
jmp
and
add
xchg
std
sbb
ja
psubd
add
xchg
jmp
mov
lods
pop
pop
fsub
cmp
sub
nop
inc
add
ja
or
or
ret
dec
jmp
inc
inc
cmp
arpl
das
jne
dec
ins
ret
or
dec
sub
mov
leave
mov
xor
mov
mov
mov
loopne
add
or
ficomp
test
sar
mov
push
inc
and
add
inc
sub
or
sbb
pop
jmp
sbb
sbb
push
aam
movs
xchg
add
mov
dec
adc
or
fs
aam
sub
(bad)
std
push
iret
pop
push
sbb
lea
retf
inc
jmp
stos
push
arpl
mov
call
mov
cld
pop
or
lea
push
add
jno
push
mov
je
jg
jns
and
mov
inc
jae
jmp
xor
jno
pop
mov
xchg
push
inc
and
dec
xor
cmp
pop
cmp
call
jo
sti
push
adc
inc
test
inc
sbb
bswap
or
aas
inc
data16
int
frstor
push
inc
push
scas
and
cs
cmps
neg
imul
add
add
jo
stos
ror
pop
pop
mov
cld
fnsave
adc
sbb
pop
(bad)
gs
jp
das
push
arpl
test
fld
scas
jmp
xchg
mov
scas
add
push
mov
lahf
popf
std
jne
jmp
sub
sub
sbb
cmp
sub
push
xchg
xor
jmp
test
(bad)
jmp
addr16
fidiv
jae
or
and
add
inc
test
shl
sub
push
jle
add
jl
movs
sub
js
(bad)
cmp
add
pop
jge
es
mov
clc
fsub
cld
dec
call
int3
dec
repnz
push
std
and
arpl
je
add
test
mov
in
mov
pop
jl
xchg
rol
arpl
sar
jmp
int3
xchg
mov
sbb
outs
push
cld
mov
add
fs
xchg
sub
aam
cmp
sbb
in
jmp
pop
sbb
aas
popa
push
mov
lea
jp
iret
iret
lods
add
cmp
adc
leave
or
jbe
scas
jns
mov
movs
int3
data16
bt
ror
or
dec
sbb
cmp
outs
outs
sub
ja
inc
mov
imul
sbb
add
mov
pop
stos
jb
ret
test
push
lock
scas
out
add
je
xchg
imul
push
or
std
fwait
adc
fnstsw
popf
loopne
inc
or
add
int
jns
retf
inc
jne
pop
xor
push
mov
sti
jl
or
sahf
sbb
xor
inc
xchg
cdq
add
in
adc
sti
cmc
stos
ins
or
mov
imul
test
(bad)
mov
cmp
out
jmp
inc
ins
iret
in
sub
mov
fwait
enter
jp
add
cld
arpl
mov
stos
les
stos
mov
ins
adc
daa
or
adc
add
ret
jp
sbb
push
and
push
nop
add
cmps
ror
shr
mov
pop
jb
aad
jmp
outs
dec
(bad)
iret
out
xchg
add
xor
mov
sar
push
sbb
fs
mov
sub
cmps
movs
push
or
mov
pop
add
pop
inc
mov
call
fst
sahf
add
push
and
push
sbb
or
enter
fild
pop
out
outs
push
sub
mov
xor
arpl
mov
or
mov
sub
dec
add
add
rcr
int
jl
push
fwait
dec
push
pop
movs
inc
popa
loope
mov
test
mov
or
xor
push
jmp
pop
je
jns
lds
dec
shl
je
xchg
lock
dec
in
or
lock
jmp
jmp
xchg
leave
mov
inc
cs
punpckhdq
es
push
lea
push
retf
int3
push
out
aas
sbb
add
mov
push
inc
pop
jg
add
add
shr
test
push
shr
push
inc
pop
xchg
jae
lock
std
cmc
mov
dec
jmp
add
xchg
mov
and
inc
xchg
or
(bad)
pop
lods
jmp
loop
nop
cld
out
cli
and
add
repz
adc
add
cwde
cs
inc
inc
xor
pop
rcl
sti
repnz
add
cmc
and
and
mov
movs
nop
stos
test
std
loopne
fs
and
sbb
pop
stos
je
jp
fcmove
call
imul
mov
mov
cdq
mov
aam
cs
imul
ins
mov
sub
sub
inc
jp
xor
jbe
out
into
push
pop
inc
jp
push
rol
jle
cmp
mov
xchg
inc
les
push
call
push
jbe
pop
movs
dec
fs
push
pop
add
mov
pop
add
sbb
xor
and
push
push
call
mov
inc
or
or
out
or
mov
and
mov
push
or
addr16
js
mov
or
inc
jns
mov
jecxz
lods
out
dec
mov
dec
jne
aas
sar
rol
jns
mov
pop
repnz
jmp
punpckhbw
sbb
jmp
pop
jno
mov
imul
inc
std
jmp
push
xor
push
arpl
xchg
sti
cmp
test
rol
rol
rcl
mov
pop
add
dec
push
and
popa
test
push
add
scas
shl
add
push
pop
pop
data16
fisttp
scas
jmp
(bad)
test
dec
mov
cli
push
mov
xchg
imul
loop
fnstenv
add
mov
cmp
jmp
out
cmovg
sbb
mov
ror
mov
out
lahf
jno
and
push
pop
xchg
into
mov
lds
loop
mov
ret
outs
push
cwde
jge
sbb
or
test
jnp
push
jnp
xor
add
mov
mov
jno
xor
jg
hlt
push
cld
push
aaa
jge
into
(bad)
daa
mov
test
sub
mov
push
pop
sub
sbb
mov
lea
lahf
nop
imul
es
sub
push
test
mov
inc
mov
xchg
mov
int
inc
data16
aaa
add
es
push
in
add
jle
cld
fsubr
popa
pop
inc
sub
inc
jmp
or
sub
mov
mov
jmp
cmp
clc
pop
or
aad
cmp
loopne
mov
jmp
and
into
jecxz
movs
stc
push
jmp
sbb
mov
icebp
xchg
idiv
dec
add
retf
add
aad
and
fs
jge
sub
add
pop
sub
mov
sbb
rcl
test
sbb
sub
stos
push
jbe
jb
popa
push
inc
(bad)
jmp
pop
sbb
sbb
and
ins
add
inc
sub
and
das
stos
sub
call
aad
inc
call
mul
xchg
jmp
test
inc
pop
ins
in
addr16
leave
pop
or
dec
cmp
out
sbb
jnp
sub
dec
mov
call
or
push
repz
push
(bad)
mov
cmps
xchg
jmp
jp
out
push
clc
(bad)
push
movs
mov
push
add
push
ror
or
cwde
mov
outs
out
cmp
cli
sub
jmp
hlt
sub
xchg
mov
mov
jne
std
scas
or
mov
and
mov
in
stos
movs
in
adc
add
pop
leave
leave
jo
daa
iret
or
data16
jmp
push
xchg
rcr
xchg
outs
mov
cmp
aas
push
fdiv
xchg
cwde
and
mov
sbb
out
pop
jnp
xor
jae
sti
loope
imul
xor
in
in
sbb
dec
xchg
enter
cli
push
pop
jmp
jge
jno
or
add
mov
adc
mov
adc
add
imul
add
mov
out
push
mov
mov
iret
stos
push
daa
add
arpl
out
pop
dec
minps
scas
jmp
nop
outs
pop
mov
adc
push
pop
mov
out
and
(bad)
shl
retf
jmp
sbb
push
hlt
push
cli
sub
test
fnstsw
lock
xchg
(bad)
mov
pusha
cmp
gs
inc
or
or
sub
mov
in
aad
pop
and
push
icebp
add
pusha
outs
mov
cmc
movs
cld
loope
retf
fnstcw
in
cli
mov
cdq
add
jmp
jno
(bad)
jp
mov
push
mov
(bad)
add
mov
scas
cmc
push
test
add
retf
or
sub
inc
enter
lds
dec
cmp
fdiv
sub
mov
jns
lds
out
jmp
mov
or
mov
push
sub
mov
outs
add
mov
dec
or
lahf
cld
and
jmp
out
bound
icebp
mov
lods
and
fcomp
mov
pop
mov
ret
pop
inc
loope
or
mov
int
pop
scas
add
push
mov
xchg
sti
pushf
dec
sbb
dec
out
imul
jmp
push
xor
inc
ret
rol
jne
mov
cli
and
sub
leave
inc
push
fnsave
shl
popa
arpl
sbb
add
es
pusha
xchg
(bad)
jno
mov
mov
add
inc
jge
add
or
adc
es
sti
call
mov
dec
adc
add
xchg
inc
adc
shl
or
mov
add
enter
inc
push
out
cmp
loope
push
and
shr
mov
scas
pop
out
test
outs
add
jg
aas
cld
or
and
call
sub
push
xchg
in
popa
sbb
and
stos
mov
clc
or
mov
cmps
in
mov
cwde
add
test
sbb
jmp
inc
jg
out
imul
add
clc
cmp
sbb
mov
mov
leave
pop
adc
mov
shr
sub
nop
adc
sti
jmp
sub
jg
push
pop
push
lea
jo
mov
mov
icebp
mov
cmp
ret
in
test
mov
stc
popa
mov
lahf
in
fwait
fs
clc
add
out
gs
mov
sbb
xchg
xor
mov
test
cs
mov
push
mov
add
arpl
pop
jmp
mov
inc
ss
sub
jne
xor
gs
test
stc
push
dec
push
mov
call
adc
or
dec
add
mov
and
stos
inc
add
mov
cmp
mov
ficomp
int3
jae
jno
inc
mov
jmp
mov
dec
jge
or
aad
add
sub
in
sub
les
fist
or
iret
xor
repz
aam
lods
or
pop
(bad)
jp
jmp
pop
cmp
adc
adc
lods
mov
jae
lods
mov
imul
popf
jle
pop
sbb
adc
repz
mov
in
push
les
pop
sti
adc
sbb
je
fcom
cmc
fwait
mov
and
neg
popf
aaa
mov
adc
or
icebp
stos
fsub
add
mov
cmc
pop
adc
js
lods
imul
(bad)
pop
je
and
mov
xor
push
add
dec
sub
mov
or
jp
or
outs
mov
out
mov
das
and
mov
cmp
jmp
or
sub
sub
dec
mov
sbb
jb
sbb
push
pop
(bad)
mov
xor
inc
mov
mov
ds
or
or
loope
fsub
outs
mov
add
add
sub
mov
push
jb
jmp
push
cmps
push
scas
shr
ins
(bad)
pop
add
call
jmp
xor
pop
in
xlat
dec
sbb
xor
mov
or
outs
push
jmp
add
push
cs
xchg
or
mov
stos
in
sbb
dec
rcl
rcl
and
dec
add
xor
fmul
and
mov
sbb
clc
fdivrp
add
sub
push
xchg
lods
das
dec
es
ja
fimul
loop
pop
fnsave
in
in
pop
mov
popf
add
rcr
pushf
mov
push
ret
dec
(bad)
fwait
or
or
dec
js
leave
mov
pop
push
add
in
cmp
pop
cli
fild
fadd
stos
stos
jmp
jbe
test
push
add
fdivr
mov
lods
clc
ins
fsub
xchg
push
jb
outs
jb
ss
outs
or
icebp
jmp
mov
arpl
leave
cmp
pop
(bad)
jno
xor
jb
xchg
(bad)
(bad)
cld
sub
mov
jbe
call
cmp
xchg
push
xchg
arpl
aad
add
out
sub
sar
inc
pop
or
adc
xor
xchg
js
movs
aas
pop
shl
test
retf
dec
mov
not
loopne
retf
jmp
sub
xchg
mov
add
xchg
fs
inc
fmul
pushf
lahf
sbb
mov
cmps
cmps
repz
or
(bad)
clc
mov
jmp
mov
shl
xchg
add
add
mov
rcr
popf
push
(bad)
cli
gs
cmc
xchg
jno
add
(bad)
rcr
cmp
inc
sti
ss
in
popf
cmp
les
push
rep
add
fidiv
dec
pop
mov
ja
or
ins
in
lods
jae
add
in
test
mov
popf
imul
add
fst
ds
xchg
imul
jmp
imul
scas
pop
fisubr
xchg
dec
sbb
xchg
mov
jbe
adc
push
repz
movs
ss
add
test
fiadd
mov
add
fs
pop
mov
ss
adc
push
(bad)
jae
shl
(bad)
std
adc
test
mov
or
hlt
sbb
inc
jmp
mov
fmul
push
lods
jmp
fiadd
cs
mov
pop
pop
mov
add
test
lock
mov
cmp
sbb
inc
aam
mov
dec
push
sub
aad
sub
scas
ds
jne
push
(bad)
sti
out
dec
(bad)
(bad)
lea
jle
aas
inc
imul
arpl
leave
mov
push
mov
xor
sub
mov
sbb
mov
ficomp
or
mov
jae
out
fidivr
ins
jmp
adc
out
iret
cdq
jle
inc
jmp
ja
or
icebp
push
pop
or
add
inc
add
adc
add
or
pop
jge
add
imul
std
loop
ret
add
ins
loope
mov
inc
mov
call
xor
ins
in
test
(bad)
dec
sar
xchg
cld
mov
sbb
jns
inc
inc
jno
(bad)
stos
mov
fucomi
xchg
push
adc
(bad)
dec
fs
push
outs
xchg
sbb
xor
arpl
cdq
xor
mov
ins
scas
scas
fsqrt
mov
add
nop
adc
adc
add
leave
and
cmp
mov
sub
outs
cli
pusha
inc
mov
mov
icebp
dec
and
popa
lock
inc
icebp
and
ds
jno
out
fwait
mov
iret
pop
sub
jmp
arpl
xchg
lods
mov
sbb
cmp
push
mov
sub
jne
stos
push
lds
lods
(bad)
cld
fs
pop
call
mov
xor
mov
jle
add
popa
out
inc
pop
pop
cmp
jmp
mov
cs
and
cmp
test
or
fnstcw
dec
xchg
cmp
ficom
cmp
out
xchg
cmps
add
stos
jmp
aad
cli
stc
(bad)
call
push
fdivr
mov
test
or
sbb
(bad)
jmp
mov
push
popa
push
mov
pop
or
das
and
das
jmp
dec
sahf
mov
xchg
mov
pop
push
in
ins
movs
mov
cli
sbb
aam
or
mov
dec
aaa
jmp
pop
(bad)
leave
adc
sub
adc
addr16
call
pop
push
push
adc
sbb
mov
jmp
dec
dec
call
imul
fild
mov
sbb
ret
pop
mul
retf
shl
mov
add
mov
xchg
test
outs
cmps
lods
sub
movs
sub
jae
out
mov
ins
je
and
gs
mov
(bad)
imul
mov
xor
add
into
xchg
adc
adc
int
retf
push
arpl
pop
dec
popa
pop
mov
add
xor
jl
jmp
scas
lea
rol
mov
adc
add
xchg
aad
arpl
adc
jmp
inc
mov
adc
dec
into
retf
imul
push
call
or
fcmovnbe
into
enter
xor
mov
add
pop
icebp
repnz
xchg
sbb
out
add
cmp
test
mov
hlt
loopne
(bad)
lods
xchg
mov
add
push
imul
jp
xor
outs
and
loop
int3
xor
shl
push
sub
(bad)
mov
push
aaa
js
or
pop
cmp
lods
call
jns
sbb
les
outs
ror
fwait
mov
jmp
pusha
retf
out
test
add
mov
movs
icebp
int3
lea
or
mov
jmp
adc
add
rcl
dec
lods
cli
int
cmc
rol
pushf
pop
dec
xchg
out
dec
or
aad
clc
loope
cs
mov
mov
dec
push
jmp
pop
and
daa
push
jae
xor
inc
sub
(bad)
xor
out
(bad)
(bad)
in
xchg
test
pop
or
pop
shl
imul
fimul
cmps
add
stc
gs
push
and
sahf
mov
dec
jmp
or
inc
add
jo
in
mov
pop
add
mov
jbe
pop
xchg
stos
je
push
adc
mov
dec
jns
imul
out
pop
mov
mov
jne
push
xchg
loope
hlt
xchg
cmps
sbb
fwait
imul
mov
push
and
sbb
not
fbstp
addr16
sub
in
jmp
mov
push
lods
inc
adc
sbb
call
inc
pop
ins
or
aad
jp
pop
mov
xor
shr
in
mov
and
or
push
push
pop
cmp
out
push
ins
add
xor
inc
mov
add
push
in
mov
js
dec
xor
pop
pop
xchg
(bad)
push
movs
sti
inc
jle
add
add
mov
int3
sbb
movs
out
xor
dec
mul
or
cmp
mov
inc
int3
(bad)
sbb
and
push
pop
cmp
cmc
mov
jmp
adc
or
xchg
int3
pop
(bad)
ins
imul
or
cmp
mov
iret
sbb
mov
jmp
ja
dec
fild
mov
loopne
cdq
enter
pop
jb
or
and
sti
or
cld
jae
xor
jmp
push
data16
push
scas
adc
mov
push
jb
in
dec
adc
ja
sub
call
adc
mov
test
mov
add
lahf
push
jo
shl
and
jbe
and
push
int
into
cwde
div
mov
(bad)
xor
(bad)
or
inc
mov
mov
iret
mov
pop
fist
or
loopne
or
das
call
push
sahf
loop
pop
test
xor
sbb
in
nop
adc
mov
pop
jmp
inc
ins
or
test
shr
faddp
dec
daa
jecxz
mov
call
std
jp
call
sub
ins
push
fmul
push
sahf
jb
dec
sbb
stos
sub
and
or
fisub
xlat
lea
cmps
cmps
push
push
mov
jmp
adc
mov
repz
retf
mov
push
inc
lds
lock
add
aad
test
jbe
add
icebp
xor
jmp
daa
ins
push
sbb
rcl
and
inc
jp
rol
call
sar
adc
sti
cld
jl
inc
jbe
in
nop
sbb
mov
fiadd
loopne
mov
jo
jbe
aad
call
and
cmp
or
xchg
mov
push
adc
(bad)
mov
mov
pop
imul
mov
xchg
or
dec
out
jae
jo
dec
imul
sbb
inc
or
add
loopne
pop
pop
(bad)
out
sbb
mov
lahf
retf
xchg
jno
and
jp
xor
cld
neg
test
jmp
mov
or
or
dec
fwait
enter
sbb
imul
sbb
arpl
popa
enter
adc
out
jb
pop
mov
ins
retf
fst
movs
jmp
cmp
hlt
dec
jne
push
or
sbb
and
inc
inc
out
cmps
inc
push
out
in
fwait
cs
sub
mov
in
add
in
nop
cmp
add
aaa
mov
inc
(bad)
leave
xchg
mov
test
aam
cdq
push
pop
inc
imul
ins
xor
mov
adc
jge
sbb
cmp
sahf
retf
scas
jge
push
adc
push
push
push
inc
cli
pushf
pop
push
hlt
add
dec
add
push
cmp
add
push
add
aam
jmp
mov
rol
cmps
or
lea
cwde
xlat
lahf
outs
xchg
or
movs
in
mov
cmp
jmp
call
mov
arpl
xor
push
dec
dec
mov
stc
adc
xchg
(bad)
push
adc
aaa
and
int
add
or
dec
loop
xor
int
xlat
or
and
xchg
xor
mov
or
inc
jp
(bad)
jmp
test
sahf
fist
push
xor
mov
add
sub
sar
out
mov
xchg
add
(bad)
pusha
dec
xor
xchg
dec
div
gs
dec
ja
jl
in
aam
lds
push
push
pop
fld
push
mov
stc
pop
cmps
dec
int3
lea
ror
mov
stos
inc
loopne
fild
clc
out
push
daa
push
add
and
stc
aad
mov
push
xchg
pop
inc
xchg
adc
js
fist
jbe
jmp
in
add
test
mov
fwait
sti
pop
cmc
jecxz
fmul
push
retf
arpl
adc
fisttp
add
gs
mov
stos
or
jg
test
or
in
push
fnstenv
jae
int
shr
add
ss
(bad)
push
ror
and
repz
fwait
inc
sbb
xchg
and
jecxz
imul
mov
push
fisubr
gs
into
cs
mov
bound
aas
cld
xor
jg
bound
out
xchg
jnp
dec
or
les
jne
jmp
jge
fadd
dec
add
dec
push
sbb
mov
mov
mov
add
jo
aam
sub
in
and
aaa
lea
mov
push
sub
popf
sbb
ins
mov
add
sub
adc
dec
xor
out
sahf
add
cmps
(bad)
in
imul
jmp
not
jmp
push
and
mov
add
sub
mov
xor
xchg
pop
stos
jmp
push
cdq
jmp
pop
fucomp
fs
dec
pop
icebp
sbb
jmp
mov
mov
cs
dec
sub
push
xchg
out
out
push
jns
shl
lds
sub
cmp
in
es
inc
add
arpl
sbb
push
sbb
xlat
ja
jmp
xchg
push
cwde
jmp
addr16
movs
inc
stc
test
add
ja
xchg
aam
or
push
jecxz
fild
or
fs
sbb
dec
jns
shl
in
test
sub
ret
(bad)
push
test
mov
in
(bad)
loop
cmp
scas
mov
sbb
ror
xor
mov
inc
mov
push
pop
push
pop
outs
xor
mov
repnz
adc
sbb
xchg
adc
clc
pop
jmp
xchg
cwde
loop
dec
pop
and
push
and
push
(bad)
push
mov
mov
xchg
or
dec
lods
aad
fstp
stos
xchg
mov
jno
jmp
sbb
call
rol
cmp
xchg
push
adc
into
imul
jbe
imul
cmp
pop
mov
mov
mov
cld
push
das
add
pop
mov
cmp
or
pop
stos
cmps
or
pop
push
xchg
dec
push
test
adc
into
or
mov
scas
pop
xor
imul
pop
sub
and
sar
imul
xor
jae
jmp
jo
pop
or
jl
addr16
cmp
dec
jecxz
push
jnp
xlat
adc
jmp
inc
pop
lods
jp
push
xchg
stc
push
cmp
lods
xchg
adc
int
test
dec
in
mov
cmp
cmc
add
pop
or
repz
div
jmp
cmp
cmp
ja
idiv
mov
movs
dec
js
mov
push
dec
sbb
add
adc
aaa
or
in
fdiv
jmp
lock
scas
pop
fsub
dec
das
mov
stc
inc
(bad)
jl
push
dec
add
std
scas
xchg
aaa
call
cmp
lahf
xor
arpl
adc
xchg
xchg
or
out
mov
outs
mov
call
inc
push
inc
sbb
pop
sub
imul
fst
dec
je
add
sbb
push
mov
(bad)
cli
add
int3
sub
push
shl
push
jne
sti
or
inc
(bad)
jmp
popa
hlt
lock
mov
pop
hlt
mov
lea
mov
push
jl
pop
mov
push
mov
out
std
fmul
jnp
jmp
stc
jmp
mov
jns
push
idiv
pop
inc
mov
push
clc
fld
or
call
add
das
nop
mov
or
mov
jno
out
inc
fdiv
shr
xchg
popf
mov
leave
cmps
das
push
test
clc
mov
or
lods
mov
dec
aad
push
ret
leave
ret
push
mov
mov
cmp
mov
addr16
das
or
mov
inc
rcl
add
pop
cdq
and
(bad)
mov
ins
xchg
xchg
bound
cmps
lods
inc
pushf
push
cld
out
popa
ret
add
mov
in
retf
add
pop
xor
cmps
jns
mov
(bad)
inc
scas
(bad)
pop
int3
dec
mov
call
into
lahf
mov
loope
sahf
jmp
push
std
xchg
sub
mov
push
sub
enter
mov
ret
sbb
test
std
inc
jne
jmp
repnz
sbb
mov
jecxz
hlt
ret
sbb
push
sbb
mov
ins
sub
divps
loop
ret
cmp
xchg
mov
push
sub
aam
add
pushf
or
mov
jbe
xchg
add
cld
push
add
and
pop
xor
adc
sub
and
in
sti
sub
jnp
add
js
cwde
fistp
fldcw
sub
fstp
inc
inc
xor
ror
and
push
or
push
mov
jmp
lock
mov
lock
push
imul
jbe
push
div
(bad)
hlt
neg
pop
or
jb
test
adc
aas
mov
push
leave
xchg
cmc
mov
sub
nop
inc
shl
or
cmp
push
std
xchg
icebp
dec
sbb
sub
inc
add
test
lds
mov
mov
leave
(bad)
fs
push
push
jle
mov
es
fcmovnb
(bad)
dec
jmp
aad
push
outs
or
(bad)
and
xor
cmp
cmc
jne
xor
retf
push
psubw
test
push
in
scas
add
sbb
xlat
stos
adc
sub
repnz
rol
xchg
pop
fiadd
repnz
push
add
cs
pop
imul
pop
jmp
mov
out
les
sub
pushf
sti
ds
rcl
cs
push
adc
mov
mov
or
loope
nop
pop
jmp
mov
push
test
lods
add
jge
ss
rol
and
jp
add
mov
cmp
dec
or
sub
push
jmp
xchg
cdq
scas
retf
seta
sahf
icebp
outs
push
daa
fcomi
mov
mov
sub
mov
loope
mov
aad
jmp
into
sbb
ins
adc
sahf
mov
inc
cmp
test
imul
int
mov
push
or
fist
pusha
addr16
aas
pop
hlt
stc
xchg
jmp
icebp
xor
(bad)
jl
mov
popf
mov
xchg
retf
mov
cmp
dec
dec
in
push
jg
cld
push
adc
cli
add
int3
shl
mov
jo
lock
sbb
add
imul
or
shl
test
repnz
popf
add
fstp
xchg
pop
dec
xlat
adc
inc
into
jo
jge
mov
or
dec
and
sahf
mov
repnz
sub
imul
in
ss
loop
cdq
dec
xchg
push
out
jle
rcl
add
mov
fstp
pop
push
retf
sbb
fld
in
add
jne
in
daa
mul
or
ss
pop
into
jmp
repz
lea
adc
dec
pop
jnp
pop
jns
popa
lock
mov
xor
lea
adc
sub
ret
movs
call
xchg
test
int3
icebp
or
xchg
movs
xchg
pop
mov
or
xchg
cmp
add
aas
pop
in
push
stc
and
jne
xchg
out
lahf
call
loopne
pop
(bad)
popf
sahf
jecxz
(bad)
fdivr
xor
jmp
aas
popf
and
mov
pop
push
mov
mov
(bad)
lar
rol
outs
movs
push
add
add
xor
push
jg
cld
ja
cmp
or
dec
mov
dec
dec
mov
arpl
iret
jmp
inc
cs
fadd
jecxz
and
jle
push
sar
and
xor
push
add
or
mov
mov
ror
jg
push
(bad)
iret
mov
loope
mov
add
jle
pop
movs
push
test
add
aaa
xlat
inc
fs
adc
xchg
jns
add
push
popf
mov
sub
sub
repz
xor
aam
add
add
arpl
or
lock
or
popf
adc
and
inc
ds
loop
scas
mov
jns
pop
ins
jne
add
cmp
outs
mov
cmp
xchg
mov
leave
cs
loopne
scas
xchg
pop
mov
hlt
retf
jle
push
hlt
movs
out
jmp
mov
pushf
mov
rcl
jmp
xor
xor
lock
and
mov
retf
fstp
scas
lds
mov
or
gs
inc
sbb
jecxz
lahf
std
push
mov
sbb
jmp
stos
xor
sbb
das
into
mov
out
rol
cmps
mov
movs
in
out
adc
loopne
push
jge
je
(bad)
mov
(bad)
popa
ins
mov
test
fs
in
and
test
dec
dec
enter
fidivr
inc
scas
or
jmp
sub
or
mov
xor
adc
pop
addr16
sbb
inc
sbb
pop
or
(bad)
cmp
stc
inc
mov
sbb
std
or
mov
sub
ret
push
mov
jae
mov
(bad)
sbb
xchg
dec
push
pop
jmp
outs
inc
add
icebp
popf
add
mov
out
add
pop
loopne
js
inc
(bad)
jo
or
hlt
push
ja
or
stos
push
dec
mov
and
sub
push
stos
cmp
inc
outs
push
sub
xor
or
cmp
add
scas
push
push
sbb
inc
mov
mov
sub
push
(bad)
movs
xlat
jmp
fsub
mov
imul
test
test
jnp
push
add
push
fmul
fnsave
inc
out
pusha
call
pop
(bad)
std
xor
add
ds
fcmovb
(bad)
in
or
aam
(bad)
mov
fwait
add
mov
inc
or
ret
ret
jmp
add
scas
cs
xchg
push
mov
jno
add
push
mov
sahf
or
xor
fcmovnu
jmp
mov
lea
mov
xor
daa
add
jne
mov
(bad)
push
adc
nop
inc
stc
imul
or
or
scas
sbb
cmc
push
repz
stos
cmp
loope
out
fs
lods
xchg
int3
repz
mov
mov
and
pop
jnp
pop
push
sub
dec
mov
aad
lds
add
das
in
jmp
push
outs
pop
retf
shr
push
arpl
adc
inc
pusha
pop
dec
jnp
mov
ret
dec
sub
xchg
cli
pop
mov
lds
mov
ret
sub
jmp
mov
test
push
mul
xchg
lods
jnp
jmp
adc
or
sub
es
sahf
mov
push
aas
xchg
call
cmp
jmp
movs
ins
(bad)
adc
lahf
(bad)
xlat
ins
dec
out
addr16
inc
ret
fs
mov
mov
fdivr
inc
movs
pop
sbb
fidivr
mov
ret
push
cmp
loopne
inc
aad
sar
out
jmp
int3
(bad)
stc
cmp
xchg
dec
or
jmp
std
xor
cwde
ss
xor
cmp
in
and
repz
push
add
enter
xchg
mov
fwait
inc
jb
test
ins
sti
jle
loope
or
inc
pushw
std
cdq
lea
mov
out
cmp
mov
in
movs
in
icebp
or
call
xor
adc
scas
imul
adc
fcomp
jmp
jmp
ss
je
fsubr
jecxz
mov
rcl
xchg
jns
das
ins
cmps
and
lds
fs
setbe
sub
cwde
scas
push
push
push
xor
lds
or
jg
or
sub
pop
pop
jp
popf
addr16
retf
jl
dec
xor
pop
or
xchg
jae
mov
push
ror
and
sbb
(bad)
or
daa
add
stos
call
xchg
and
add
dec
push
out
inc
or
ins
pop
dec
xor
retf
adc
jmp
test
jb
push
push
cmps
outs
daa
jae
sub
lods
rcr
mov
data16
mov
mov
pushf
jl
jmp
jno
ja
jb
mov
ret
pop
mov
jmp
repnz
mov
js
jle
out
xor
enter
inc
int
add
inc
cmp
sbb
retf
dec
or
hlt
es
out
retf
jmp
adc
mov
add
inc
push
sbb
or
mov
jle
jmp
xchg
mov
cmc
pop
call
add
push
mov
or
dec
aam
adc
mov
je
in
add
cmp
push
adc
inc
add
mov
inc
bound
xor
repz
imul
cs
adc
sub
add
and
idiv
dec
and
lods
outs
loope
mov
mov
dec
adc
mov
into
dec
movs
dec
daa
mov
(bad)
cmp
xchg
sbb
sub
adc
daa
and
mov
push
jg
xor
arpl
inc
pushf
or
stc
outs
aad
jmp
loopne
ret
jb
ja
gs
stos
(bad)
adc
xlat
fcmovnu
popf
jmp
sti
dec
ret
imul
loop
dec
ret
call
pop
push
and
inc
or
fs
dec
inc
mov
in
inc
ja
xchg
mov
add
imul
pop
call
ficomp
xor
fild
arpl
dec
in
jmp
and
out
fnstsw
repnz
and
mov
add
packsswb
and
cld
fst
test
or
sbb
(bad)
mov
xor
jnp
std
std
int3
icebp
in
jmp
adc
push
imul
or
cld
sti
(bad)
mov
jmp
dec
dec
(bad)
cmps
push
mov
mov
push
leave
jmp
cld
sbb
loope
loop
push
or
ja
das
cmp
cdq
xor
inc
add
mov
pop
lods
sub
shr
daa
pop
in
test
sub
add
shl
or
or
jns
and
fs
(bad)
cdq
push
pxor
and
sar
xor
fs
xchg
test
out
pop
adc
gs
mov
pop
aam
test
jmp
(bad)
xor
or
mov
in
add
xor
mov
or
sbb
dec
cmp
in
pop
add
sbb
out
adc
mov
add
jmp
pop
dec
mov
push
push
push
xor
xchg
and
mov
push
mov
dec
mov
shl
mov
addr16
xor
jl
jp
add
aas
fist
int
xchg
fsubr
mov
cmps
mov
jns
adc
sub
add
mov
lea
das
sub
pop
inc
fwait
mov
scas
pop
fnstsw
sub
scas
movs
push
arpl
adc
loop
add
mov
ss
or
int3
push
lea
in
sbb
ror
int
dec
or
stos
cli
sbb
pop
pop
shr
mov
push
sbb
sahf
movs
jmp
shr
jl
in
div
inc
cmc
cdq
test
ror
jecxz
int
ins
adc
(bad)
dec
adc
xchg
xor
xchg
add
bnd
es
adc
inc
push
jo
dec
push
test
xor
(bad)
in
jbe
mov
mov
lea
add
xchg
add
sbb
cmc
fidiv
into
adc
call
jmp
iret
bound
push
sub
lock
int
add
fst
push
jns
std
adc
push
jb
(bad)
jmp
repnz
cmps
jns
rep
pop
inc
outs
fsubrp
lahf
fwait
in
jecxz
and
cli
dec
jnp
pop
imul
loope
inc
pop
xchg
or
icebp
push
xchg
ror
ins
icebp
jecxz
loopne
mov
fiadd
mov
ror
or
ins
in
add
inc
xor
test
int3
stc
sti
call
pop
(bad)
ins
lock
mov
mov
xor
not
mov
hlt
pop
push
adc
adc
push
jno
out
retf
or
ja
iret
sti
mov
dec
or
enter
jmp
pop
rcl
mov
rep
mov
add
je
ja
stc
inc
sub
lea
mov
ror
fadd
jl
xor
cmp
daa
xor
mov
out
mov
xchg
test
add
sub
xor
aad
int
addr16
out
add
sub
or
xor
imul
loope
mov
(bad)
push
dec
sub
addr16
add
jg
loope
(bad)
sub
fdivr
cmp
ret
cmps
fwait
mov
jbe
jmp
sahf
mov
or
cmp
sbb
test
int
push
jno
bound
xor
in
jmp
jo
lahf
or
daa
sbb
aaa
xchg
nop
cmp
(bad)
push
add
sar
je
inc
mov
std
(bad)
popf
mov
gs
outs
movs
mov
pop
pop
or
data16
xchg
lods
cmp
mov
sub
push
push
cmps
data16
cmp
fld
les
mul
adc
movs
mov
ins
shl
and
jb
jmp
aaa
mov
sbb
push
imul
jnp
and
mov
pop
add
das
push
leave
xor
xchg
sbb
mov
xor
jmp
pop
ja
xlat
cwde
mov
pop
and
stos
outs
test
sub
mov
inc
push
js
loop
icebp
fisub
test
adc
add
adc
shl
mov
inc
lahf
xor
scas
dec
daa
enter
or
sbb
in
dec
(bad)
dec
push
mov
push
leave
jmp
lock
cmp
int3
in
pushf
(bad)
or
clc
mov
add
call
mov
sti
or
sbb
inc
gs
dec
movhps
jne
pop
sbb
scas
cli
shl
test
stos
cdq
jle
or
push
add
loopne
int
push
jmp
adc
shr
das
lods
inc
in
and
add
cmp
out
pop
rcr
pop
inc
jmp
mov
lods
or
std
lock
add
sti
leave
add
xchg
pop
pusha
arpl
cdq
stc
mov
loop
ret
in
jns
out
adc
push
push
cmps
mov
mov
repz
in
mov
xor
pop
dec
xchg
or
or
jmp
mov
cmps
jb
push
jne
mov
xchg
fst
xchg
mov
jmp
sub
mov
jg
sub
scas
sub
push
pop
add
push
rol
push
or
fs
or
ins
ins
cwde
fisub
test
mov
mov
sahf
xor
bound
sbb
(bad)
xor
and
das
mov
push
and
lock
or
sbb
sbb
or
inc
adc
cmp
adc
adc
adc
jmp
mov
out
das
fstp
cmps
rol
push
ret
ins
int
imul
fstp
add
mov
xchg
push
dec
mov
add
inc
mov
les
out
jno
jmp
dec
enterw
sub
push
pop
jmp
daa
mov
jmp
sbb
retf
test
mov
sub
add
(bad)
xor
sub
mov
icebp
push
out
std
jmp
or
mov
push
pop
movs
push
icebp
xchg
add
lds
cwde
inc
push
ror
push
mov
or
push
dec
adc
aam
adc
fisttp
adc
add
in
std
push
loope
ret
mov
rcr
(bad)
not
loop
mov
push
call
call
jae
jge
repz
lods
or
bound
adc
push
jb
dec
mov
lahf
mov
js
ficomp
loope
scas
jecxz
or
popf
mov
or
add
sbb
adc
std
add
xor
add
push
push
outs
shl
xchg
cmps
mov
jecxz
mov
daa
shr
or
push
mov
push
retf
mov
xor
pop
into
add
push
jnp
xor
push
add
add
mov
xchg
in
cmps
or
loop
ror
retf
cwde
pavgw
test
mov
add
mov
jbe
or
xor
push
push
fstp
xor
xchg
dec
or
arpl
jmp
sbb
xor
mov
icebp
call
xchg
or
xchg
fmul
cld
cdq
push
inc
out
sub
pop
test
js
sbb
cdq
call
rcl
mov
pop
sub
repnz
jmp
test
adc
sub
stos
gs
mov
adc
push
add
add
add
pop
popf
add
fist
adc
daa
mov
jmp
xchg
ins
cmps
jnp
jae
pop
push
mov
jge
inc
mov
out
xor
jmp
loope
jnp
rcl
call
enter
jo
in
push
aad
sar
pushf
lods
bound
xchg
add
push
retf
mov
add
add
popa
adc
xor
mov
jmp
sub
js
add
ins
dec
add
pop
and
(bad)
loopne
retf
inc
jp
and
(bad)
stos
(bad)
mov
loopne
sub
adc
test
jnp
or
addr16
stos
movs
xchg
imul
pop
push
ror
test
add
pop
sbb
jle
push
addr16
sub
push
push
mov
pusha
sub
ret
sti
mov
xchg
inc
(bad)
aam
out
adc
inc
fwait
out
add
pop
pop
mov
enter
or
rol
push
call
arpl
pusha
fs
xchg
and
cld
sub
mov
dec
loop
imul
cwde
jmp
xor
pop
pusha
repz
push
loop
popa
jmp
bound
xor
ins
xor
repnz
mov
cld
push
sbb
enter
or
xchg
rol
jmp
cmp
ins
jge
outs
outs
or
(bad)
ins
xchg
aaa
jmp
lea
in
test
mov
or
sub
outs
jmp
dec
push
adc
xor
in
jle
std
jp
pop
jl
fld
in
arpl
not
ficom
push
add
jmp
mov
icebp
inc
(bad)
ins
xchg
mov
adc
cmp
push
push
je
call
loop
cli
or
sti
xchg
inc
jmp
push
adc
ins
fcom
dec
je
or
stos
or
call
xor
push
clc
add
das
call
and
or
loope
push
imul
cld
jmp
shl
repz
out
leave
jp
push
mov
jae
or
pop
adc
icebp
ins
mov
xchg
add
shr
mov
mov
shl
test
dec
lods
push
arpl
dec
xor
sub
daa
mov
popa
add
in
dec
mov
nop
cmp
xchg
jmp
push
mov
adc
and
aad
inc
or
jmp
aas
shl
inc
ret
push
sbb
add
add
movs
jno
in
nop
lods
lock
jo
pop
push
or
pusha
ror
xlat
add
cdq
inc
pop
xor
push
xchg
lea
pop
ins
or
dec
jns
jmp
jg
cmp
les
and
or
xchg
adc
dec
jmp
arpl
movs
or
mov
out
stos
push
out
les
pop
mov
(bad)
dec
enter
std
lods
mov
add
jae
out
dec
jne
inc
mov
or
adc
inc
jge
or
xor
jmp
int3
adc
and
jo
div
inc
dec
mov
repz
cmp
movs
cmps
dec
push
inc
or
mov
or
jae
popa
(bad)
xor
mov
les
cmps
sbb
aaa
outs
sbb
in
fdiv
(bad)
stc
cmps
xchg
hlt
mov
add
cdq
inc
imul
pop
lea
cli
pushf
(bad)
in
xchg
mov
scas
loop
add
mov
mov
shl
jmp
lea
inc
stos
add
adc
pushf
xor
add
outs
cmc
and
sbb
pop
jecxz
(bad)
mov
jge
ja
lahf
test
add
dec
inc
push
pop
or
int
add
jns
sti
iret
cmp
jle
or
lock
aas
adc
les
jmp
push
arpl
cwde
out
mov
ins
bound
pop
lds
in
pop
sub
cmp
jnp
addr16
out
vmovdqa
(bad)
push
mov
rcr
jno
into
ds
inc
and
jmp
mov
add
int
repz
mov
pop
push
mov
add
outs
loop
call
pop
xor
test
dec
sub
add
out
push
in
retf
(bad)
push
mov
or
repnz
imul
shr
push
iret
push
cmp
mov
adc
dec
or
in
rol
lock
adc
aam
mov
jmp
cmps
xchg
jl
sbb
xchg
cdq
jl
mov
or
xchg
mov
push
inc
jmp
scas
mov
or
daa
add
ret
int
outs
or
adc
(bad)
imul
sbb
lea
in
fld
hlt
or
cmp
rcl
sub
xchg
push
(bad)
xor
fs
mov
sbb
sub
add
pop
jle
imul
pop
push
sahf
test
mov
push
fnsave
xchg
add
dec
push
fwait
xchg
imul
ret
mov
loop
push
es
jp
cs
ror
inc
pop
xor
sti
call
call
loopne
rcr
jmp
cs
and
dec
adc
popf
add
dec
add
sbb
dec
bound
push
mov
test
outs
test
pop
sub
and
add
xor
stos
and
in
dec
stos
mov
xor
mov
sub
push
mov
stc
mov
hlt
(bad)
in
in
dec
jns
fucomip
cmp
retf
or
iret
enter
or
push
push
call
push
mov
in
ins
push
jbe
and
add
lahf
aam
(bad)
imul
mov
pop
ffreep
rol
xor
xchg
adc
es
loope
xchg
jge
sub
xchg
div
movs
mov
arpl
leave
and
cmps
jl
xor
or
push
dec
inc
inc
pop
add
push
rol
pop
pop
jle
cdq
sbb
sub
ins
xchg
fcomi
inc
inc
push
fst
inc
or
jmp
jp
add
daa
imul
arpl
pop
inc
jge
sbb
jmp
stc
add
sbb
or
loopne
ins
adc
add
push
sbb
add
pop
das
push
cmc
stc
je
lds
add
dec
in
dec
or
nop
fisttp
sahf
cmp
test
pop
push
out
add
cmp
shr
mov
int
pop
loope
jle
add
inc
mov
test
xor
out
fucomp
mov
(bad)
mov
push
pop
sbb
jmp
ja
xchg
pusha
rcr
rcr
mov
ins
into
jmp
sbb
dec
inc
or
out
pop
dec
cwde
jmp
mov
mov
push
jb
adc
fwait
pop
imul
arpl
pop
std
sbb
stc
test
call
jecxz
(bad)
shl
out
in
push
adc
jmp
pop
pop
das
nop
adc
shr
jmp
cmps
sub
int3
cs
jmp
test
aad
or
nop
jmp
add
fs
sub
push
add
mov
dec
mov
mov
add
or
or
loope
icebp
retf
lea
paddw
out
cmp
mov
adc
pop
sahf
mov
repnz
cmp
jp
add
rcl
inc
iret
sbb
or
ins
std
ja
call
cmp
jle
adc
jmp
mov
mov
ret
pop
xor
inc
pop
or
mov
stos
data16
pop
push
out
adc
xchg
pop
inc
imul
aad
pop
movs
xchg
or
or
sbb
jg
mov
cmp
sub
mov
mov
sub
fcom
push
mov
inc
push
das
and
sbb
(bad)
lods
ss
test
not
jo
sub
mov
mov
cmp
ins
add
sar
mov
dec
(bad)
je
movs
idiv
dec
pop
cld
lds
inc
lea
ja
aaa
imul
xchg
js
pop
xchg
cdq
jbe
pusha
stos
mov
push
mov
or
retf
in
test
xor
imul
stos
pop
jmp
add
loopne
dec
and
mov
push
jmp
xchg
sbb
add
sub
enter
jne
bound
(bad)
lods
std
popf
xchg
add
(bad)
stos
cdq
jmp
out
xor
nop
jmp
pusha
or
(bad)
in
std
data16
ss
mov
fisubr
addr16
mov
cmp
test
cmp
push
loope
in
js
pop
xor
enter
adc
add
retf
and
cmc
mov
fsubr
xor
(bad)
adc
or
pop
push
xchg
test
inc
push
fdivr
add
or
in
pop
aam
add
sub
dec
and
push
mov
arpl
cmp
and
add
xchg
sub
fwait
call
add
loopne
inc
(bad)
jg
ficom
je
jnp
add
test
sbb
and
outs
inc
ja
adc
imul
adc
mov
mov
xchg
cwde
out
clc
push
and
ja
jmp
daa
mov
int3
enter
aad
loope
xchg
add
js
stc
sub
sub
pop
into
int
leave
pop
das
push
adc
push
dec
call
div
adc
add
cmps
sbb
jae
adc
pop
retf
pop
jmp
sar
dec
or
inc
sub
jmp
xchg
pop
push
ss
std
jae
and
inc
loopne
loopne
cmps
push
xchg
mov
jnp
out
jecxz
mov
(bad)
dec
jmp
jmp
push
jmp
dec
add
int
int
pop
pop
shr
repz
jno
jb
add
jnp
xchg
sbb
pushf
mov
movs
or
les
xor
or
dec
ins
mov
push
sub
xchg
and
fsub
add
sbb
bnd
xor
sub
fadd
push
popf
int
das
test
add
or
dec
xchg
fisttp
or
(bad)
adc
into
jmp
jl
rcr
dec
sbb
push
mov
fsubr
mov
jecxz
leave
fdiv
xchg
int3
imul
jmp
push
mov
hlt
(bad)
or
jp
in
jmp
jecxz
scas
lea
xor
xor
jmp
cmps
sub
loopne
bound
sbb
or
add
sbb
mov
sahf
shl
or
mov
jmp
jne
xchg
fsubr
aas
addr16
inc
mov
add
mov
xor
fisubr
and
push
or
jbe
(bad)
sti
jmp
jne
or
push
mov
cmp
ss
daa
jmp
(bad)
std
dec
inc
jp
arpl
sbb
(bad)
cmp
call
push
frstor
xor
mov
int
out
stos
clc
ins
adc
mov
retf
and
pushf
sub
dec
cmps
jp
loop
in
dec
mov
push
or
(bad)
fs
xor
loop
xor
fdivr
mov
push
push
mov
imul
lods
imul
(bad)
hlt
imul
cmp
sub
cdq
(bad)
inc
dec
ds
ret
xchg
mov
ins
mov
icebp
lods
imul
mov
ins
pop
ja
sahf
add
or
and
xor
sbb
xchg
mov
div
data16
or
retf
pop
pop
sahf
pop
dec
jecxz
add
out
xchg
icebp
ins
xor
gs
stc
scas
push
mov
jo
xchg
cmps
add
push
xchg
ror
iret
mov
aaa
lock
cmp
cmps
jl
ss
ret
mov
addr16
(bad)
add
mov
jp
aaa
add
(bad)
mov
sub
push
dec
ds
mov
int3
inc
xor
outs
call
xor
push
icebp
add
addr16
push
dec
mov
data16
sub
ins
gs
xor
mov
mov
xchg
into
cdq
ins
mov
add
fstp
imul
jne
mov
test
(bad)
icebp
cmp
movs
inc
add
push
addr16
std
je
fs
mov
and
inc
xor
into
mov
in
dec
pop
push
test
inc
das
popa
xcrypt-cfb
cmps
and
jp
add
mov
dec
inc
ror
add
jb
sub
sub
test
pop
sub
icebp
or
add
bound
data16
pop
mov
adc
jge
inc
jmp
rcl
sti
sbb
stos
ss
and
add
adc
pop
sbb
ror
adc
pusha
call
mov
add
xor
cmc
add
gs
popf
popf
mov
and
stos
scas
xor
push
mov
or
icebp
repz
add
push
daa
or
ins
sbb
cmp
loop
dec
mov
fwait
mov
sub
ret
add
cmp
fwait
dec
and
pop
lds
or
and
mov
jp
(bad)
out
add
(bad)
cmp
xchg
(bad)
pop
int
std
sti
stos
pop
jp
mov
push
jmp
add
rcl
lods
xchg
adc
dec
jl
je
xor
and
imul
out
or
fwait
or
dec
adc
adc
and
jae
aaa
sbb
jnp
inc
sub
(bad)
nop
mov
add
jno
jle
mov
mov
or
into
imul
inc
jo
or
imul
into
cmps
dec
adc
pop
shr
or
mov
es
dec
je
fsub
jmp
mov
add
xor
or
sub
pop
jmp
in
add
and
mov
arpl
sbb
aas
jmp
aam
or
ret
push
fisub
imul
sub
rcr
outs
movs
pop
push
in
nop
mov
xor
imul
sbb
lods
cmps
pusha
add
and
push
fldpi
add
in
loop
mov
mov
cmps
mov
fdivr
test
xlat
sub
push
aaa
cmp
popa
mov
call
cmps
pushf
sbb
jns
pop
or
dec
adc
adc
jno
dec
mov
xchg
(bad)
mov
jmp
int
and
pop
push
mov
sub
in
and
out
and
jb
push
test
jnp
int
xchg
scas
jmp
hlt
add
jle
lock
or
xlat
(bad)
push
adc
pop
jmp
mov
sbb
cmp
xchg
mov
adc
test
(bad)
(bad)
call
movs
retf
and
jmp
scas
pop
mov
movs
mov
mov
jae
inc
rcl
dec
psubb
mov
das
(bad)
cld
inc
fsub
mov
dec
fcmovu
movs
xor
arpl
mov
lahf
ds
add
add
cmp
lods
fldenv
ins
aaa
xchg
add
pop
jo
pop
leave
and
daa
adc
rcr
or
imul
or
jmp
push
cmp
mov
stos
div
dec
ins
add
mov
sub
pop
cmp
data16
jmp
mov
(bad)
adc
test
imul
jle
inc
ss
test
mov
xchg
dec
sbb
inc
outs
(bad)
xor
mov
mov
stos
or
xchg
cwde
mov
pop
mov
adc
or
sbb
scas
dec
dec
outs
push
not
dec
xchg
or
jmp
sbb
add
mov
je
aam
fstp
push
cmp
sub
jmp
loop
adc
iret
inc
call
sub
add
adc
not
cmps
add
ins
sub
pop
add
jne
cmp
or
or
lods
add
add
icebp
jl
movs
mov
call
push
lock
mov
push
dec
and
jae
pop
pop
clc
enter
push
cwde
retf
cmp
iret
in
push
pop
hlt
retf
in
add
push
xchg
(bad)
dec
pop
push
mov
loop
add
mov
test
mov
fsubr
int
rcr
lock
cld
mov
out
xor
and
das
or
mov
daa
and
js
or
popa
loopne
mov
test
icebp
test
mov
aad
ins
inc
or
test
jmp
daa
clc
cdq
nop
sub
xchg
or
sar
add
(bad)
sbb
or
(bad)
nop
mov
in
pop
xchg
aam
pop
lods
add
adc
fcomp
nop
pop
add
pop
adc
shl
dec
fsub
sub
cmp
imul
cli
idiv
sub
ret
or
rcl
sub
imul
mov
sbb
fbstp
gs
mov
gs
push
sub
lods
mov
mov
out
es
ret
cwde
jmp
fsub
sahf
loope
and
test
add
xor
mov
out
or
call
cdq
add
je
clc
push
inc
inc
ins
or
fwait
inc
rcl
jge
mov
pop
nop
push
xchg
cmp
pop
nop
pop
in
imul
and
test
xor
push
add
jecxz
pop
shr
sub
jnp
enter
cmps
(bad)
and
imul
jge
xchg
push
jmp
lock
repz
dec
stos
mov
dec
jmp
mov
push
out
push
outs
icebp
jns
lock
and
cmc
jnp
or
mov
repz
jmp
xor
mov
(bad)
mov
(bad)
ja
dec
and
jp
mov
jno
jp
addr16
outs
or
xchg
sahf
dec
scas
jmp
mov
cmp
and
add
pop
mov
sar
sub
test
mov
fiadd
adc
mov
push
rcr
push
loope
repz
sahf
ss
mov
push
test
jmp
iret
or
imul
jmp
arpl
(bad)
iret
aaa
add
mov
(bad)
(bad)
cmp
add
out
sbb
jecxz
leave
call
push
shr
stos
sbb
scas
push
fnstenv
cld
mov
in
xlat
pop
inc
lock
mov
pop
fiadd
div
popa
test
push
popf
push
dec
rol
mov
call
push
in
lea
and
and
push
(bad)
fld
inc
mov
call
(bad)
int3
pop
(bad)
or
into
int
test
mov
sbb
add
jmp
cmps
jae
aaa
ret
shr
mov
loop
sub
mov
sbb
jl
fdivr
pop
sbb
mov
jb
or
jae
loope
xor
xlat
mov
push
fisttp
mov
and
pop
mov
imul
cld
movs
or
sbb
inc
jmp
or
cmp
mov
push
dec
pop
les
or
cmp
or
pushf
mov
xor
sub
popa
mov
sub
adc
sub
push
sub
mov
cs
mov
mov
dec
push
or
jle
loopne
sar
jmp
lds
jae
jmp
retf
adc
inc
sbb
stos
adc
jnp
test
loopne
jnp
in
inc
daa
push
xor
dec
push
stc
or
retw
jne
mov
pop
sub
nop
dec
xor
lea
test
outs
dec
cmp
fcmovnb
movs
push
xchg
inc
add
cmp
inc
ret
or
jno
cmps
lahf
xchg
push
loop
in
dec
jmp
rol
fwait
mov
jmp
push
out
out
loope
jmp
movs
jmp
fidivr
and
mov
test
or
or
ja
fwait
inc
xchg
retf
push
outs
aas
jmp
js
gs
ret
or
cmp
xor
jmp
xor
mov
add
pop
inc
cmps
(bad)
and
ret
jmp
in
loopne
push
dec
jle
push
and
fisttp
(bad)
pop
add
fucom
pop
int3
or
into
inc
dec
push
call
push
inc
xor
adc
add
jmp
out
lods
sub
adc
mov
push
add
sub
sti
push
push
add
loop
inc
popa
and
fstp
repnz
mov
dec
stos
adc
xchg
imul
add
sbb
jmp
cmp
push
dec
mov
push
sub
jmp
jne
jnp
dec
sbb
lock
mov
xlat
or
sbb
retf
fimul
or
sbb
jne
xor
test
mov
add
jmp
call
sub
mov
loopne
js
popf
loop
cli
into
adc
pop
add
add
sbb
mov
fisttp
xor
mov
dec
mov
and
out
sti
mov
out
shl
mov
test
or
das
mov
mov
mov
gs
loopne
pop
xchg
cmps
or
jnp
adc
jmp
pop
lds
inc
loop
ds
mov
cmp
stos
jmp
popf
jl
pop
imul
sub
(bad)
fcomip
cmp
in
cmc
dec
dec
lds
lods
or
ins
jb
jmp
movs
xchg
movhps
mov
push
cwde
sub
add
sub
sbb
jmp
add
iret
pop
pushf
loop
mov
out
or
mov
imul
into
cmp
arpl
aaa
jns
inc
sbb
loopne
mov
repz
in
scas
and
cld
(bad)
push
popa
jmp
or
aas
dec
xor
jne
mov
adc
sbb
or
push
fild
out
popa
and
lahf
jmp
imul
popa
jmp
mov
addr16
sub
pop
dec
call
cli
add
dec
cmps
mov
or
pushf
je
into
sub
fld
lods
sub
xchg
add
xor
loop
in
mov
mov
ds
jb
ins
cmp
adc
add
(bad)
ret
add
xor
mov
inc
in
test
pop
pop
adc
push
lds
xlat
movs
cmp
push
pop
(bad)
rol
or
leave
out
add
xchg
mov
push
mov
xchg
pop
call
mov
dec
push
fimul
cmp
add
(bad)
fadd
push
pop
vmovhps
movs
inc
mov
or
inc
inc
add
mov
jo
aaa
sbb
add
push
ss
mov
push
call
add
fadd
sub
and
mov
inc
int3
mov
mov
fsubr
push
mov
movs
lds
jmp
mul
(bad)
dec
push
inc
ds
data16
pop
fsubr
jmp
jmp
sub
lods
fist
and
add
mov
in
mov
cli
dec
retf
cmp
add
and
cmps
scas
adc
pop
shl
aam
sbb
cli
xchg
mov
adc
call
mov
mov
and
or
clc
add
pop
sub
sub
add
and
jae
int
aad
enter
sbb
and
mov
mov
jb
out
xchg
pop
rcr
pop
out
ret
xor
dec
mov
jmp
jmp
or
inc
pop
mov
sub
inc
xor
fwait
and
jg
gs
call
sub
sub
dec
cs
(bad)
ret
(bad)
pop
adc
sbb
aad
jb
sub
push
xchg
jno
cmp
cwde
inc
cmc
pop
mov
fstp
add
lds
add
add
sar
add
or
(bad)
mov
mov
push
xchg
add
jl
stos
out
jo
addr16
aas
fisttp
data16
aas
iret
in
mov
test
pop
push
fdivp
jmp
xor
hlt
addr16
or
jb
jbe
cli
daa
dec
push
fcomi
push
sbb
jp
ficom
inc
and
or
scas
mov
out
in
pop
test
cmp
popf
mov
inc
in
dec
not
add
jge
mov
mov
test
shr
pop
inc
in
add
cmp
push
scas
cmp
dec
repnz
outs
and
add
test
outs
rcl
gs
daa
add
jns
aam
iret
xor
popf
mov
div
or
movs
push
lea
push
test
sbb
repz
cs
pop
push
jge
dec
jge
sub
add
int
sub
fld
mov
aas
or
addr16
or
test
inc
sbb
cmp
push
pop
lock
lahf
push
ja
dec
add
mov
inc
mov
lods
sbb
sub
cmp
movs
stos
push
jno
add
pop
(bad)
pop
xchg
scas
inc
or
repnz
sub
imul
push
sub
cdq
cmp
jecxz
ins
jne
sbb
pop
cmps
mov
sub
jg
cs
retf
lds
(bad)
sub
push
mov
pop
jmp
jmp
ins
mov
sbb
or
dec
pusha
pop
aas
outs
mov
pop
fisttp
dec
or
xor
xor
or
mul
loope
mov
and
push
outs
mov
or
stos
sbb
or
int
add
je
jp
or
mov
add
sub
add
shl
out
jnp
jno
push
clc
pop
fsubr
and
int3
mov
ret
dec
xlat
ror
add
jb
mov
lods
pop
sbb
movs
ds
jl
cmp
test
pushf
aad
jmp
push
imul
cwde
sub
jg
cmp
xchg
cmp
jmp
repz
cld
or
(bad)
rcr
cmp
repnz
(bad)
sbb
dec
xor
idiv
js
add
add
hlt
pop
enter
add
or
scas
shr
sub
pop
sub
fisttp
je
cdq
sub
std
xchg
ret
push
xor
retf
add
retf
push
jg
movs
call
jb
cmp
out
sbb
sub
das
mov
push
jle
jo
ja
sbb
or
faddp
adc
clc
std
jp
mov
cdq
daa
mov
add
mov
sbb
mov
sbb
or
repnz
push
push
add
sub
gs
lods
xchg
add
fcomp
push
cmp
jne
into
add
add
jnp
and
cmp
repnz
rcl
(bad)
jno
jmp
xlat
push
xchg
gs
fdiv
jns
add
sbb
enter
repz
neg
mov
ds
retf
xchg
(bad)
mov
out
loop
pop
leave
pop
xchg
mul
sub
cmp
hlt
mov
xor
mov
mov
mov
pop
jno
dec
movs
cmp
mov
jb
jmp
scas
add
push
loop
pop
(bad)
ds
add
pop
dec
popa
inc
or
lea
dec
mov
sub
pop
push
scas
neg
imul
repnz
mov
icebp
gs
jge
aad
mov
hlt
pop
add
xchg
sahf
(bad)
adc
and
frstor
sbb
inc
push
sub
xchg
repnz
dec
popa
fadd
sahf
cld
lods
add
sub
sbb
push
adc
movs
dec
jle
lds
xor
mov
push
and
inc
xchg
pushf
add
jae
mov
or
fs
repz
mov
(bad)
fcom
repz
pop
daa
addr16
adc
jmp
push
pop
dec
fmul
retf
mov
xchg
lods
ret
in
jno
jb
movs
sbb
add
mov
test
out
mov
pop
and
push
bnd
cmp
and
and
pop
mov
neg
pop
mov
and
jmp
add
jle
out
scas
retf
xor
push
(bad)
pop
xchg
js
dec
(bad)
popf
mov
mov
ret
loop
or
sar
int
jne
jmp
xchg
pop
mov
fdivr
inc
mov
sbb
adc
out
dec
sub
sbb
mov
jmp
pop
in
jg
jmp
pop
push
and
push
test
add
add
mov
inc
jb
cmps
sub
or
or
cwde
pushf
mov
dec
add
dec
sbb
cdq
push
rcl
dec
mov
mov
cmp
ret
in
cmp
push
ret
add
mov
xor
out
int
out
scas
imul
sbb
push
and
popa
mov
push
loopne
and
clc
jmp
pushf
sbb
arpl
or
scas
push
xchg
fisubr
jbe
xchg
(bad)
jno
test
mov
mov
push
push
or
push
mov
add
(bad)
ret
cmp
imul
add
stos
test
xchg
popa
dec
ins
or
xchg
dec
jp
push
sar
push
push
add
cmp
push
adc
pusha
leave
int3
(bad)
call
(bad)
leave
dec
dec
mov
push
cs
loope
mov
sub
or
sti
dec
xor
sub
mov
adc
dec
xor
sub
stc
and
or
fld
test
test
push
mov
ss
sub
mov
push
fisttp
inc
add
pop
dec
das
das
(bad)
adc
(bad)
fdiv
lea
sub
add
sub
and
sar
and
xlat
jmp
dec
xor
repnz
add
mov
inc
fcomp
xchg
inc
sub
cmp
clc
add
mov
stos
jns
(bad)
or
mov
jmp
mov
mov
sub
fisubr
pop
in
jecxz
jmp
inc
sub
sub
mov
or
dec
or
iret
stc
movs
jb
jmp
fsub
cdq
cmp
push
add
cmp
xchg
mov
fst
std
push
sahf
push
adc
and
lods
inc
div
cmp
add
in
div
dec
stc
push
inc
mov
jmp
imul
jecxz
push
imul
fnstcw
(bad)
sub
add
cmp
dec
mov
jb
or
jmp
sbb
lea
js
mov
outs
add
lea
fcomp
jnp
add
xchg
aas
rcr
inc
nop
xchg
retf
mov
ror
pop
cmps
(bad)
sbb
inc
cmovnp
stos
std
(bad)
out
addr16
retf
mov
jmp
in
lods
xor
ds
call
or
cmp
shr
pop
xor
jmp
mov
adc
push
cmp
sub
mov
cmp
or
loopne
or
mov
icebp
add
or
xchg
movs
jp
jno
lods
inc
(bad)
stos
mov
ret
lock
fs
rcl
sub
retf
fld
jg
and
and
pop
inc
js
and
mov
jne
dec
sub
ss
stos
neg
mov
mov
dec
(bad)
outs
inc
lds
adc
jmp
pushf
fstp
xchg
mov
mov
xchg
test
(bad)
or
and
inc
xchg
jbe
jmp
popf
cmp
and
jne
aad
fsub
cmp
fcomp
hlt
fistp
repz
lds
out
xchg
pop
in
lock
or
pop
pushf
cmp
adc
push
stos
outs
inc
sub
aad
(bad)
fsub
loope
(bad)
repnz
or
sbb
pushf
mov
mov
or
or
inc
(bad)
ins
fisttp
pop
(bad)
push
ret
sbb
js
cmp
fldenv
jmp
mov
pop
ret
and
push
xlat
fcmovnu
dec
ins
ss
add
lea
mov
into
and
movs
or
adc
int3
in
out
inc
out
jo
mov
je
or
dec
fld
jmp
sub
push
mov
stos
aaa
push
loop
fild
jbe
fs
adc
push
outs
imul
cmps
fldl2e
jl
lock
aam
jmp
push
lea
bound
mov
push
scas
shr
loop
add
jnp
pop
or
lea
and
add
cwde
xchg
out
(bad)
mov
shl
(bad)
xor
int3
jb
in
add
push
jmp
push
or
cld
fild
call
pop
ins
ins
add
push
pushf
cmps
call
inc
repnz
ja
pushf
pop
xchg
mov
adc
jmp
jmp
pop
in
popa
rcl
je
stos
xchg
and
xor
lods
pop
and
int3
test
fisttp
ror
or
jbe
mov
push
dec
and
addr16
add
dec
inc
mov
test
data16
ror
sub
or
dec
in
iret
sbb
or
pop
out
in
test
rcl
daa
pushf
stos
mov
jl
and
aam
scas
xchg
ds
push
ja
jg
(bad)
loop
aad
cld
push
jne
ds
dec
cmp
xor
std
sahf
repnz
aas
rcl
and
ror
and
mov
aaa
mov
popa
jmp
or
movs
data16
mov
arpl
dec
sub
adc
stos
pusha
jg
cli
dec
or
jb
gs
jo
int
outs
loopne
mov
test
out
pop
aaa
add
ja
cmc
dec
(bad)
jecxz
jmp
xor
pmaxsw
pop
push
sub
push
mov
in
arpl
xor
test
and
ficomp
push
mov
iret
aaa
shr
scas
movs
adc
mov
outs
test
or
out
js
pop
xor
jne
jmp
pop
adc
sbb
ds
pop
pop
cwde
jns
xchg
pop
sbb
in
outs
daa
in
pop
std
jp
add
pop
xchg
jnp
xor
inc
dec
sbb
in
add
aas
out
lds
jns
fst
(bad)
dec
push
add
enter
icebp
and
push
mov
jg
cmp
xchg
imul
das
inc
lock
inc
sbb
push
or
pop
push
cli
push
and
adc
dec
mov
imul
mov
push
dec
cmp
pop
xor
mov
jp
icebp
mov
xchg
dec
jg
mov
les
sbb
or
loop
int3
mov
jmp
lods
movs
push
into
or
enter
push
icebp
js
fwait
adc
cdq
sbb
scas
imul
xchg
or
inc
sub
clc
pop
xchg
add
or
int3
xor
dec
adc
jmp
push
js
mov
(bad)
loope
out
add
fwait
retf
mov
data16
dec
dec
xchg
jae
add
ret
ror
xchg
scas
scas
push
jb
add
xchg
add
pop
or
sbb
shr
jmp
in
call
scas
out
sbb
pop
scas
pusha
pop
jmp
in
inc
outs
jne
push
outs
dec
inc
or
loopne
ins
aaa
aam
retf
outs
rol
push
mov
inc
nop
out
es
and
add
cdq
fidivr
out
std
sti
push
or
imul
sbb
popw
shl
imul
push
or
inc
push
push
ds
fstp
mov
mov
cs
(bad)
sahf
ror
mul
add
sbb
jge
cmp
mov
je
iret
lahf
jmp
cmp
stos
push
xlat
cmp
jmp
add
and
dec
addr16
cli
adc
xchg
call
out
cli
ret
push
jmp
imul
cs
imul
ins
cmps
sbb
mov
pop
push
fdivrp
gs
and
fild
dec
js
rol
wrmsr
mov
jae
jge
sbb
mov
out
test
cmp
and
dec
clc
cmp
push
aad
stos
fs
fcom
ror
jns
or
add
add
fsubr
in
aam
or
out
xchg
mov
js
add
push
nop
push
mov
jmp
pop
cmp
dec
daa
cmc
in
repnz
cmp
and
jmp
mov
movs
or
ins
or
iret
int3
inc
sub
mov
push
dec
mov
repnz
or
div
das
outs
xlat
inc
lahf
aaa
push
cmps
mov
out
jge
ficom
adc
jmp
pop
js
cmp
nop
push
and
jmp
add
jns
push
sti
or
xchg
fistp
je
adc
idiv
add
inc
(bad)
mov
dec
(bad)
adc
fs
and
push
mov
adc
jmp
movs
js
cmp
dec
push
int
cs
or
pop
xor
xchg
push
cmps
xchg
jne
fstp
mov
add
inc
test
mov
out
mov
jbe
mov
jno
cli
xchg
retf
mul
dec
sbb
ficomp
or
fs
adc
or
sub
lock
outs
and
cmps
inc
movs
es
xor
push
test
es
fcmovu
add
imul
popa
sub
pushf
fisttp
xchg
add
ds
shl
scas
nop
push
in
imul
stos
add
and
fadd
stos
push
mov
sahf
and
es
retf
dec
fld
dec
popf
neg
jecxz
loopne
push
sub
mov
out
aas
(bad)
xlat
lahf
mov
or
jo
jmp
dec
dec
movs
in
push
sahf
push
jmp
out
or
push
dec
jge
sub
les
movs
xchg
call
gs
in
jmp
jne
int3
in
nop
sti
addr16
and
ja
jb
mov
push
inc
jns
dec
rcl
push
dec
inc
sbb
add
inc
out
dec
inc
test
mov
jle
mov
or
jg
aad
jmp
daa
add
jmp
add
int3
aas
sar
mov
leave
xchg
adc
mov
inc
sub
pop
xchg
add
popf
pop
jle
jle
(bad)
sub
into
cmp
sub
jge
icebp
xchg
loop
xlat
fwait
(bad)
fmul
sub
cmp
jecxz
out
and
push
add
jae
(bad)
add
imul
xchg
or
inc
int
mov
lds
mov
test
inc
or
ret
jle
fcmovb
mov
cmp
outs
nop
imul
jnp
call
js
sub
rcl
push
imul
or
leave
cli
xchg
movs
shl
xor
xor
(bad)
call
mov
push
pop
add
int3
xor
cmp
lods
jnp
xchg
adc
push
mov
or
retf
add
push
jmp
cmp
fs
hlt
sub
xor
mov
push
cmps
int
test
dec
imul
cwde
aam
sbb
inc
add
sub
prefetch
or
imul
aam
mov
inc
or
setl
pop
jmp
mov
aad
addr16
jge
jbe
(bad)
stc
jae
xchg
sbb
in
jl
or
fimul
fnstcw
sbb
dec
jae
fistp
add
mov
mov
nop
mov
aaa
pop
aad
data16
sti
frstor
inc
xchg
mov
sub
add
repz
inc
adc
repz
movs
repnz
mov
mov
mov
jmp
in
xor
int
inc
(bad)
fdiv
push
call
dec
repz
mov
stos
scas
sbb
jbe
fidivr
ror
rol
sbb
dec
test
(bad)
push
cli
xor
and
in
das
push
pop
or
mov
out
lea
inc
nop
mov
jns
and
xor
sti
pop
lods
ja
add
jl
pop
jmp
push
or
out
sub
jb
scas
and
test
div
mov
pushf
lahf
push
test
cs
or
jmp
xchg
ins
fild
mov
iret
jmp
mov
xchg
xchg
cmc
mov
in
js
lds
cld
int
les
(bad)
cmp
dec
push
cmc
dec
lods
push
ss
push
push
xor
lds
push
xor
pop
xchg
jmp
cmp
mov
fdiv
test
xchg
jmp
adc
in
or
inc
cmp
sub
fdiv
scas
cmp
outs
sti
outs
pop
pop
addr16
mov
mov
retf
retf
xchg
mov
stos
ja
adc
test
fnsave
in
jmp
or
push
enter
popa
mov
std
fnsave
cmp
push
pop
and
rol
pop
(bad)
jg
adc
or
add
xor
or
mov
mov
cmp
inc
push
mul
lods
mov
or
pop
das
and
push
xchg
push
mov
add
test
in
jmp
mov
sub
sub
mov
add
fsub
sahf
rcl
xchg
pop
push
or
fmul
sbb
scas
adc
xchg
sbb
repz
add
xor
icebp
loop
mov
jmp
mov
sub
aad
push
inc
jno
dec
(bad)
sti
or
out
inc
pop
rol
aad
xor
jmp
pop
dec
int
cmps
and
pop
mov
xor
fidivr
push
ret
imul
ret
cmp
stc
push
std
aam
movs
test
into
icebp
add
xor
arpl
mov
clc
jge
adc
cmps
cmp
mov
xchg
mov
ja
sub
sub
ds
pusha
mov
dec
mov
retf
fimul
fs
push
test
adc
ror
mov
push
ins
mov
or
add
pop
jbe
mov
mov
add
(bad)
jl
aam
aam
ror
test
(bad)
(bad)
jmp
and
jbe
fld
fldcw
lea
cmp
jmp
mul
ret
pushf
push
aas
iret
pop
jmp
sbb
arpl
mov
jg
test
mov
jmp
pop
push
xor
add
xchg
pop
sbb
test
aam
loopne
test
push
hlt
xor
icebp
(bad)
adc
mov
ret
neg
aam
cmps
mov
test
out
jp
add
icebp
xor
shr
adc
stc
sub
cwde
add
(bad)
pop
dec
push
aas
mov
aam
mov
mov
sub
mov
out
mov
pop
or
jge
dec
imul
xor
popa
aad
out
out
cmps
lea
jns
cmp
ds
jne
outs
add
mov
jg
or
inc
ins
inc
adc
(bad)
jns
jmp
mov
xor
mov
add
pop
(bad)
cmp
shr
pop
out
and
das
add
test
in
jg
mov
and
push
push
ret
sbb
or
add
cmps
sbb
shld
sti
ds
test
pushf
push
mov
xchg
push
cmp
and
inc
sub
jmp
push
mov
addr16
pop
leave
jnp
mov
hlt
and
jp
dec
sub
push
xchg
or
xchg
out
jb
setne
gs
and
lods
ss
cld
adc
pop
jnp
adc
daa
xor
jmp
push
dec
jp
test
mov
or
cld
mov
dec
es
pop
cmps
or
mov
inc
jmp
mov
or
ins
(bad)
mov
jmp
xchg
neg
jmp
into
push
cmp
jo
inc
pop
push
jle
(bad)
lahf
push
inc
and
push
adc
add
and
xchg
push
and
adc
cwde
jmp
movs
sbb
gs
mov
call
mov
out
test
fiadd
xchg
cs
call
movs
adc
jge
(bad)
push
div
add
inc
mov
outs
dec
pop
stos
addr16
add
sbb
test
mov
adc
in
aaa
mov
dec
xchg
inc
in
push
test
jl
mov
adc
add
jmp
(bad)
shl
push
in
out
sub
js
jmp
in
push
mov
ins
xchg
or
pop
jb
pop
jmp
push
add
push
add
inc
xor
dec
imul
jmp
add
cmps
dec
push
das
lea
sbb
cmc
jp
push
push
push
mov
add
push
or
cmp
hlt
dec
mov
pop
jmp
and
and
icebp
mov
fmul
dec
cmp
out
pushf
in
(bad)
cmp
pop
sub
lock
xchg
jl
loop
loope
and
push
push
xor
xchg
dec
mov
xchg
push
popa
into
sub
sub
push
call
test
pop
rcr
lock
mov
cld
mov
in
cmp
jmp
push
dec
scas
adc
jp
push
and
fwait
icebp
inc
and
les
(bad)
push
lds
add
fnstsw
jg
dec
sub
or
inc
dec
daa
jl
cli
in
inc
jg
pop
push
icebp
and
ja
or
movs
mov
cmps
arpl
in
push
jp
dec
in
xor
int3
hlt
stos
push
adc
or
dec
cmp
cmc
jmp
sub
das
push
test
mov
pop
mov
shr
or
pop
loopne
(bad)
out
jg
jae
or
push
loopne
repz
sti
rol
pop
xlat
mov
outs
pop
mov
jmp
jmp
mov
jmp
movs
daa
and
cmp
pop
or
add
add
xchg
shr
dec
out
jle
cmp
mov
mov
out
in
jo
ins
mov
ja
push
fnstcw
mov
inc
ret
mov
xchg
addr16
cmp
jl
mov
and
lods
iret
pop
or
xchg
jo
stos
mov
call
mov
retf
faddp
hlt
and
outs
test
ror
mov
mov
cmc
cmp
sbb
mul
iret
cmp
jle
adc
fld
int
or
add
ror
clc
sbb
add
bound
hlt
loop
jmp
xchg
or
aaa
pop
enter
shl
(bad)
cmp
sti
dec
xor
adc
fild
loopne
loop
jae
jns
or
daa
add
or
test
ds
or
shl
out
or
iret
imul
retf
pusha
mov
dec
push
aam
xor
push
(bad)
leave
pop
add
mov
pushf
cmp
sbb
mov
int
fmul
in
outs
xchg
pop
mov
mov
pushf
inc
sub
repnz
adc
hlt
jnp
or
lods
add
dec
sbb
pop
ror
das
cmc
jmp
mov
(bad)
sub
mov
out
lea
or
cld
popf
add
(bad)
(bad)
frstor
in
lods
stc
daa
dec
hlt
pop
or
lahf
jmp
xor
add
mov
and
xchg
push
dec
or
add
pushf
push
jmp
repnz
call
je
push
fbstp
popa
sbb
jmp
add
pop
xor
aam
fldenv
cmp
mov
cmp
xor
scas
mov
add
cdq
dec
imul
fs
cmp
sbb
and
mov
or
adc
sti
jmp
aam
jecxz
cmps
xchg
lods
push
scas
xor
imul
push
test
inc
add
idiv
or
pop
loop
sub
dec
mov
mov
jbe
mov
lods
stos
dec
stc
and
cmps
mov
sbb
xchg
add
(bad)
sbb
or
aas
rol
pop
rcr
stos
mov
fcmovb
fadd
or
cmp
ret
dec
sub
(bad)
sub
cmp
sbb
outs
jmp
aam
and
sbb
test
push
push
rcl
mov
jbe
je
jle
mov
nop
rol
es
jmp
scas
xchg
cmp
les
push
stos
sar
or
popa
sub
cmc
retf
xor
pop
push
cmp
add
push
jne
(bad)
mov
jmp
xor
jecxz
add
add
jo
or
cmp
shl
int3
inc
and
adc
mov
aaa
scas
repnz
dec
add
push
movs
push
add
pusha
loopne
js
dec
(bad)
push
pusha
mov
push
sub
add
fdiv
or
(bad)
jge
lds
hlt
xchg
fisttp
push
fild
jmp
pop
les
test
push
mov
adc
lds
lods
or
scas
into
jno
ficomp
xor
(bad)
jmp
xchg
dec
jge
jge
aam
shl
jle
push
int
fcomi
into
jbe
add
test
ret
mov
xor
mov
loop
nop
sub
mov
dec
(bad)
sbb
push
dec
mov
mov
sub
cmp
adc
xchg
lods
cli
mov
xchg
sbb
dec
adc
mov
add
dec
stmxcsr
xchg
sbb
push
retf
jle
jge
and
mov
icebp
push
ret
out
icebp
fnstenv
add
mov
push
out
and
xchg
cdq
jmp
dec
(bad)
lods
lods
sub
arpl
mov
and
jmp
stos
mov
mov
pop
retf
or
pop
std
shl
jmp
scas
je
ins
test
call
retf
add
out
adc
in
push
test
pop
pop
sub
jl
jmp
cld
and
sti
repz
sub
xchg
out
jne
mov
add
lods
push
movs
imul
sbb
inc
repnz
pop
push
inc
call
mov
fisttp
inc
or
sbb
jp
jmp
mov
scas
int
retf
jge
test
out
loopne
add
inc
xlat
loope
sbb
or
jbe
dec
cs
ins
mov
mov
pop
push
xor
(bad)
xor
mov
xor
xor
outs
add
scas
lods
sbb
pop
xor
test
xchg
sar
bound
retf
mov
or
rcl
into
jmp
sbb
sbb
push
xchg
out
inc
add
push
cmps
inc
or
xchg
add
ror
sbb
test
and
pop
shl
xchg
inc
cmps
or
dec
jmp
test
lock
mov
xor
add
cmc
call
push
jle
lock
sub
icebp
pop
mov
add
dec
push
(bad)
(bad)
xor
stc
por
popf
mov
ror
shr
cs
push
inc
cmp
int3
std
xchg
movs
pop
xchg
retf
sub
pop
jns
shr
fistp
out
add
adc
in
iret
add
cmp
std
dec
cmps
sbb
pop
stos
out
xchg
out
loope
jmp
xchg
(bad)
in
sub
clc
ins
pop
cmp
or
std
fcmovne
ror
cmps
stos
adc
imul
inc
add
mov
in
sbb
cs
mov
sub
or
shr
arpl
scas
fist
inc
or
outs
mov
aam
into
test
adc
outs
iret
call
fcmovnbe
pop
aam
lods
push
fistp
jo
pop
adc
pop
or
cmp
cwde
mov
fiadd
hlt
jmp
nop
or
sbb
mov
int3
in
add
inc
mov
push
jae
pop
arpl
rcl
add
sbb
test
or
fldcw
sub
cmc
adc
clc
cmp
jp
push
cwde
bound
call
nop
repz
add
adc
jp
aas
test
sub
jmp
imul
lock
enter
add
ficomp
sbb
shl
imul
arpl
sahf
rcl
test
and
add
ins
mov
loopne
ins
inc
or
pop
mov
dec
sbb
inc
loope
mov
pushf
lea
mov
jl
sub
xor
cli
inc
out
int
les
dec
cdq
pop
or
or
adc
cwde
retf
jl
sbb
cli
mov
test
int3
xchg
lahf
xchg
les
push
mov
sub
loop
mov
retf
mov
mov
cmp
cmps
lahf
push
push
xchg
nop
frstor
pop
test
add
or
jmp
lock
jmp
or
pop
ss
js
pop
aas
out
jecxz
bound
mov
pop
sbb
add
xchg
mov
jecxz
jg
or
leave
fisubr
rol
rol
pop
add
aad
pop
pusha
push
jae
mov
fdivr
gs
xchg
fs
in
(bad)
or
loopne
(bad)
cmp
jbe
mov
pop
xchg
loopne
mov
pusha
cwde
pop
test
jl
lock
in
or
in
jmp
mov
out
out
pop
mov
in
pop
out
mov
in
movs
aam
outs
in
cmc
dec
add
jl
sbb
push
mov
push
popa
out
ds
inc
fnsave
pushf
in
imul
push
jb
adc
mov
(bad)
arpl
cli
push
or
div
mov
push
sbb
jb
or
retf
dec
mov
dec
inc
mov
or
push
mov
jmp
stos
movs
in
cmp
imul
mov
jmp
xor
adc
dec
or
sub
pop
int
jg
test
out
lock
add
repz
(bad)
loopne
xchg
sar
jle
jle
push
(bad)
mov
jns
pop
(bad)
std
pop
arpl
fst
test
mov
push
mov
xchg
jecxz
repnz
push
adc
(bad)
push
stos
or
not
xchg
add
sti
sub
sbb
inc
call
out
pop
and
sbb
out
loopne
xchg
lds
lahf
sbb
repz
mov
data16
ins
push
leave
inc
sbb
rep
(bad)
sti
adc
ja
push
dec
test
mov
inc
out
clc
sub
add
mov
and
push
add
int3
jmp
in
pop
push
jle
xchg
mov
add
push
sub
pop
xlat
cmp
sub
retf
dec
fnsave
sub
mov
pop
test
aas
ins
in
das
add
scas
scas
or
push
push
(bad)
add
enter
pop
adc
retf
call
jns
inc
mov
repz
push
retf
in
lahf
xchg
mov
std
push
imul
inc
add
push
adc
adc
add
sub
push
sub
jle
xlat
movs
jecxz
jp
sub
iret
or
xchg
jmp
loope
ja
stos
into
leave
push
sbb
js
add
gs
jb
sbb
mov
lea
mov
or
std
data16
jmp
in
lds
push
inc
jecxz
sub
stos
push
mov
sti
pop
loop
or
cmp
ds
cmc
add
cs
and
fs
or
es
inc
cmp
movs
out
dec
int
mov
mov
dec
mov
arpl
xor
dec
fcomp
call
and
retf
lock
in
fist
dec
fidiv
xor
mov
sub
mov
adc
push
pusha
xor
add
xchg
push
ss
cmp
jmp
push
into
dec
push
shl
mov
or
or
pop
push
mov
or
iret
jne
out
call
js
dec
mov
test
rcr
test
and
push
les
mov
xchg
mov
lods
or
push
ret
and
ss
add
pop
arpl
mov
ja
push
jmp
mov
push
stos
rcr
and
mov
sar
popa
cmps
add
or
gs
or
imul
pop
mov
call
icebp
es
add
jo
ret
rol
lods
inc
add
xor
pushf
cdq
data16
jecxz
dec
jg
data16
sbb
sub
ds
or
repnz
jmp
xchg
or
(bad)
adc
lds
sub
mov
ds
add
leave
jmp
mov
stc
jge
out
fistp
mov
push
mov
jno
sbb
aam
jo
pop
jg
mov
mov
ror
add
sbb
int3
fimul
adc
rol
mov
or
push
mul
in
aad
adc
jmp
out
sbb
outs
in
jno
add
xchg
in
push
mov
xor
or
popf
dec
sbb
jmp
xchg
xchg
push
inc
cmp
gs
xlat
out
mov
xchg
in
ja
dec
xchg
nop
xchg
lock
add
into
scas
pop
div
pop
sub
test
add
mul
add
(bad)
into
mov
mov
pop
dec
xchg
mov
pushf
or
fimul
aas
inc
push
jmp
(bad)
xor
mov
mov
fnstsw
fldl2e
loopne
push
repz
fs
je
sbb
pop
push
mov
stos
test
aad
pop
sbb
cmp
push
mov
xor
xlat
adc
ins
test
jg
pop
in
cmp
nop
call
pushf
fs
sub
(bad)
mov
cmps
adc
mov
clc
pop
test
adc
xor
or
aas
lods
mov
shl
mov
sub
jbe
adc
mov
outs
fwait
sahf
call
pop
or
jae
push
pop
mov
cmp
or
xchg
nop
jmp
mov
cdq
jmp
movs
fld
xchg
fisubr
dec
xchg
add
pop
or
sbb
clc
scas
inc
mov
mov
scas
es
mov
push
pop
aaa
add
mov
fidivr
mov
and
(bad)
xor
add
pop
fs
mov
mov
add
jmp
aam
(bad)
mov
pusha
ret
sbb
(bad)
xlat
popa
cmp
lock
adc
das
inc
push
out
pusha
pop
xor
push
sub
aas
sbb
addr16
div
ja
pop
adc
pop
stos
or
sub
jmp
or
mov
je
jg
dec
add
push
push
dec
movs
and
jle
jle
xlat
sub
sar
push
not
fnstenv
jmp
push
jmp
data16
jmp
(bad)
xor
hlt
adc
(bad)
push
stc
addr16
push
syscall
add
xor
aaa
dec
mov
push
stos
sub
cmp
leave
add
imul
sub
cmps
mov
out
xor
push
stos
jl
in
adc
lock
jo
inc
jmp
add
inc
sbb
stos
xchg
push
pop
sub
std
sbb
call
push
fmul
stc
sti
xchg
or
add
cmps
or
mul
fucomi
fcom
ja
lea
stos
sub
inc
adc
dec
mov
push
push
es
cs
add
in
jno
push
jnp
push
or
push
add
movs
test
test
jo
sub
retf
jp
jmp
inc
sub
dec
sub
jne
scas
and
loop
outs
and
push
sbb
pop
(bad)
loope
les
shr
jbe
mov
xchg
por
(bad)
out
sub
adc
ja
jp
add
movs
jne
imul
xchg
(bad)
pop
add
push
rcl
mov
and
mov
jbe
add
test
out
fistp
inc
jge
mov
into
std
stc
fnsave
fidiv
or
dec
adc
inc
movs
jmp
cmp
pusha
subps
aas
(bad)
test
cmps
sub
stc
push
test
sbb
in
rcl
mov
jmp
lea
dec
and
cmp
imul
enter
push
or
jmp
and
cwde
fiadd
cmps
jmp
adc
xchg
stos
xchg
inc
jmp
aaa
sbb
or
iret
inc
dec
aam
dec
inc
mov
push
les
test
dec
in
and
pop
jmp
aad
push
lea
(bad)
pop
or
xor
pop
retf
call
cs
inc
sbb
adc
adc
int3
pop
fdiv
inc
push
outs
movs
jecxz
imul
pop
aaa
out
in
shl
mov
(bad)
push
add
adc
ins
add
mov
into
push
sbb
lds
mov
push
movzx
mov
jns
add
arpl
sbb
ins
jae
add
or
outs
or
aam
cmp
sub
xchg
fidiv
(bad)
cmp
test
jae
mov
adc
fimul
jmp
int
pop
adc
jge
test
jb
add
cmp
fdiv
jbe
pop
jmp
push
add
scas
movs
push
push
add
retf
cmc
add
repz
pop
dec
ins
in
push
in
clc
inc
addr16
fwait
sub
ret
xchg
out
jmp
mov
mov
mov
cld
sbb
fs
add
iret
fild
push
fs
test
adc
mov
(bad)
sbb
pop
jge
add
imul
mov
jmp
mov
and
push
dec
push
add
inc
scas
or
pop
out
or
mov
ss
push
int
aaa
out
dec
fidiv
sbb
xor
mov
xchg
fdiv
add
or
xchg
mov
pop
sti
(bad)
std
dec
push
ds
sub
repz
push
popf
xchg
(bad)
or
xchg
jno
pop
ins
jge
pushf
dec
inc
imul
outs
sub
sub
dec
stos
push
ja
xchg
retf
test
xor
xor
sahf
inc
or
pop
ror
add
ins
ror
in
dec
and
mov
rcl
ins
out
loopne
pusha
adc
test
or
stos
in
inc
jnp
test
fadd
fbld
and
xchg
jle
xor
jo
mov
ror
xor
cdq
imul
dec
or
xor
xor
add
mov
cmps
add
pop
inc
out
in
ret
or
int
rcl
add
or
adc
stc
mov
lods
jp
pushf
stos
es
inc
push
jo
bound
adc
pop
mov
inc
addr16
test
dec
out
loope
cwde
mov
xor
les
jmp
mov
xchg
push
ins
mov
adc
lock
pop
int
pop
loopne
leave
and
cmp
cmp
cld
ret
or
int3
xor
push
jmp
(bad)
jg
in
hlt
add
(bad)
mov
leave
adc
imul
sahf
sbb
daa
cdq
cdq
jns
stos
addr16
xchg
dec
das
sub
lock
sub
call
or
aad
sub
outs
xchg
push
aaa
mov
and
fnstsw
sub
les
ror
or
fist
cmp
push
sar
pop
outs
daa
fcmovnb
and
nop
push
dec
pop
int
push
add
rcr
les
test
sub
mov
popf
and
push
xor
push
jle
(bad)
stos
repz
shl
xchg
sar
add
adc
cdq
ror
imul
add
inc
mov
xor
repz
inc
cmp
xchg
sub
mov
fstp
add
jp
das
inc
(bad)
push
test
push
jae
xlat
sub
xchg
xor
xchg
sar
add
(bad)
fmul
dec
in
dec
int
jmp
dec
jb
or
sbb
or
jmp
xlat
out
xchg
cld
jg
fisubr
cdq
xor
add
int3
es
dec
int
inc
int
ja
mov
inc
mov
inc
out
xchg
mov
inc
mov
lea
fnsave
push
syscall
xor
(bad)
pop
outs
or
addr16
cmp
adc
pop
mov
inc
aad
sub
repnz
outs
mov
loop
pop
sahf
das
pop
or
mov
sbb
into
rol
loop
push
loopne
adc
inc
ret
xchg
cmps
and
lea
imul
jmp
jmp
pop
push
jg
cmp
add
fstp
pop
inc
adc
push
jmp
fs
xor
mov
ins
in
inc
pop
imul
sbb
or
fcom
push
jae
stos
pop
dec
hlt
inc
add
in
xchg
xchg
inc
or
fsub
int
add
mov
js
mov
push
jmp
stc
cmovno
in
sub
inc
sub
jo
pop
lds
stc
push
add
push
cli
(bad)
loopne
(bad)
mov
push
or
cdq
sbb
stos
push
sub
shl
in
les
pushfw
into
inc
(bad)
(bad)
sbb
cdq
les
adc
int3
cwde
loopne
push
cmps
jmp
pusha
popa
cmc
loopne
xchg
popa
pop
lds
sbb
sbb
jns
add
bnd
jbe
xchg
into
(bad)
call
mov
rol
retf
out
in
adc
retf
mov
sub
es
or
daa
mov
(bad)
jmp
sub
aam
push
sub
mov
dec
fs
sub
fmul
cdq
xor
test
pop
jge
icebp
loope
imul
std
adc
sbb
out
push
inc
inc
faddp
shl
cwde
repnz
sub
test
ja
inc
jb
test
dec
push
inc
sti
lahf
fisub
into
push
int
cmp
sbb
ror
(bad)
loopne
cmp
cmp
ss
adc
push
jmp
imul
scas
int
out
push
cwde
jecxz
mov
sbb
dec
or
stos
fcomp
test
push
push
jge
sub
inc
push
enter
cmp
ins
mov
retf
sbb
fisttp
pop
jo
addr16
in
or
test
mov
sub
pop
in
leave
adc
arpl
push
repnz
push
push
cmp
add
mov
frstor
jne
cmp
jle
loope
pop
fucomi
add
std
jmp
hlt
push
retf
and
xchg
std
mov
push
push
or
mov
dec
jp
push
in
mov
nop
ja
dec
jne
xor
push
jmp
push
(bad)
lock
or
and
dec
repz
fwait
ja
mov
sti
test
mov
nop
repz
std
and
cwde
pop
inc
and
jns
lea
add
sahf
push
xchg
jmp
push
mov
or
mov
and
push
icebp
add
outs
push
jae
xor
test
xor
pusha
(bad)
push
cmp
dec
push
pop
adc
mov
xchg
adc
pop
jl
jmp
cmp
jmp
push
sbb
clc
xchg
sar
dec
push
enter
push
stc
pushf
push
lock
lea
dec
daa
or
cmp
xchg
pop
ss
jl
es
inc
jmp
popf
push
pop
lahf
adc
ror
mov
push
sbb
and
(bad)
push
xor
dec
mov
or
cmp
jno
pop
jecxz
jecxz
dec
add
sbb
out
out
bound
jg
jmp
pop
out
(bad)
lods
jmp
iret
cli
push
mov
test
aam
call
adc
mov
cmp
in
mul
(bad)
std
pop
jmp
and
and
mov
push
pop
ss
sub
imul
mov
mov
mov
cmp
sub
(bad)
push
lea
mov
jno
add
sbb
mov
fsub
nop
fsubr
sbb
imul
je
fcmovnu
mov
xor
aad
mov
add
or
mul
mov
pop
fiadd
pop
movs
ins
(bad)
push
stos
inc
or
test
jecxz
inc
sbb
imul
scas
sar
mov
or
sub
retf
mov
xor
mov
sub
movs
cmp
mov
sub
sbb
push
cs
and
repz
js
sbb
pop
xchg
daa
mov
daa
mov
jo
add
pop
cmp
cmc
leave
inc
les
retf
pop
popf
jns
sti
(bad)
out
and
push
push
push
popf
movlps
jg
lds
clc
repz
add
loopne
add
or
cmps
add
jg
sub
push
rcr
arpl
lods
aam
xchg
cmp
dec
xor
stos
pushf
pusha
call
bound
cmps
sub
in
add
cmp
inc
lea
or
lods
mov
push
xchg
loope
(bad)
or
idiv
or
jmp
dec
jge
lods
jo
sub
cmp
adc
or
test
les
out
cwde
sbb
fld
cmps
jbe
sbb
and
jnp
mov
or
or
cwde
mov
push
pop
pop
and
mov
out
mul
dec
int
movs
sub
in
(bad)
pop
in
xchg
sub
xor
gs
jmp
test
xor
sbb
cwde
jmp
or
and
mov
not
sahf
push
push
jmp
inc
retf
test
icebp
adc
inc
add
mov
cmp
lods
jge
(bad)
ret
or
push
push
mov
outs
outs
sti
call
mov
jbe
or
xchg
bound
cmc
pop
dec
fst
cmp
neg
fist
cdq
xchg
pop
das
xchg
pop
ja
dec
mov
adc
jge
add
call
ret
enter
ror
sub
adc
js
addr16
and
test
or
nop
scas
cld
or
(bad)
xor
add
mov
pop
pop
fist
(bad)
push
jmp
sub
push
add
fwait
xor
mov
iret
adc
into
mov
ret
sub
dec
add
jecxz
mov
or
pusha
outs
movs
test
(bad)
xlat
adc
add
xchg
or
xchg
or
dec
jmp
int3
test
jle
mov
ror
lahf
aad
inc
ss
popa
aam
enter
fldcw
sar
(bad)
mov
pop
add
jmp
add
push
pushf
scas
pop
in
sbb
call
aad
stos
or
imul
pop
mov
aad
bound
shl
push
mov
sbb
jns
fcomi
sub
pop
push
das
jno
shl
jmp
mov
and
fwait
push
push
push
daa
xchg
and
fcmovnu
pop
sbb
or
pushf
lea
add
pop
lahf
push
jecxz
cmp
cli
icebp
mov
sub
lahf
lds
das
addr16
popa
add
js
or
(bad)
pop
and
sub
mov
jmp
sub
jmp
(bad)
call
xchg
jns
xchg
pop
call
inc
es
pop
add
push
call
fs
xchg
movs
or
std
cmp
int3
jmp
xchg
mov
repnz
mov
cmp
fdiv
add
cmp
xchg
inc
mov
lds
test
das
cmp
xchg
ds
sbb
pop
retf
cmp
mov
mov
sbb
xor
cmp
rol
test
shl
(bad)
aad
dec
call
mov
xor
movs
repz
rcl
mov
add
leave
adc
movs
inc
dec
xor
das
das
out
dec
jg
out
add
mov
mov
dec
and
mov
mov
scas
jbe
je
jno
cmp
sahf
mov
mov
wrmsr
jne
into
jno
in
push
inc
movs
jmp
imul
ja
push
imul
cld
loop
outs
push
add
fadd
add
dec
adc
push
leave
stos
mov
cmovp
inc
jmp
xlat
fiadd
stos
loopne
mov
push
dec
mov
movs
retf
or
fnsave
jmp
xor
test
cmp
or
jmp
and
mov
or
std
mov
inc
xor
xor
push
and
repz
test
ret
push
or
movs
retf
push
cmps
mov
cs
mov
es
xchg
xchg
lds
in
and
sbb
sahf
and
add
je
pop
cld
pop
arpl
aas
or
add
in
mov
adc
lods
push
xchg
or
mov
retf
jne
nop
jbe
jmp
enter
mov
add
sbb
and
mul
pop
jmp
in
arpl
xchg
rol
outs
add
es
ins
add
or
push
adc
test
mov
fild
jmp
or
sub
inc
sbb
push
mov
clc
sub
xchg
movs
cmp
inc
popf
(bad)
jmp
mov
(bad)
push
shl
push
in
cld
movs
push
inc
fidivr
push
xsaves
mov
mov
add
nop
call
(bad)
pop
iret
push
adc
mov
sub
mov
bound
icebp
cli
(bad)
cs
sbb
cwde
stos
add
push
out
inc
or
fsub
idiv
shl
int
es
fsubrp
pop
sbb
jno
test
jmp
pop
loope
sbb
ds
jo
out
and
jbe
ja
push
out
add
enter
xor
pop
ret
jmp
pop
mov
pop
(bad)
scas
in
pop
jmp
(bad)
arpl
imul
aaa
packssdw
test
jmp
test
test
ja
(bad)
push
xchg
and
cmps
add
(bad)
and
mov
repz
add
jg
rcr
aad
js
pop
dec
cmps
in
sbb
push
xor
mov
mov
lahf
inc
or
xchg
and
add
ret
push
and
mov
imul
mov
push
jmp
add
aam
or
loop
inc
cmp
add
cmp
test
lea
mov
ins
add
add
dec
cli
push
cmp
add
push
sbb
pop
inc
jb
cs
push
(bad)
fisttp
loopne
movs
(bad)
pushf
mov
cmps
fadd
les
fidivr
sbb
lods
popf
stos
pop
fucomp
sbb
nop
mov
mov
mov
adc
call
pop
inc
and
ret
(bad)
aad
std
int
sbb
lahf
stc
and
sbb
sbb
in
addr16
dec
push
inc
(bad)
xchg
mov
or
cld
clc
dec
or
sbb
add
movs
pop
mov
int
out
dec
xor
icebp
(bad)
mov
jno
sub
and
dec
push
hlt
mov
xchg
add
imul
cmps
xchg
(bad)
mov
mov
popa
and
ins
jnp
in
nop
sbb
stos
int
outs
iret
stos
ret
dec
push
push
or
or
movs
mov
jl
add
adc
pop
cmp
push
lods
shl
or
mov
ds
jb
pusha
outs
nop
cmp
test
push
push
test
mov
mov
fs
dec
jns
fisubr
dec
cmp
ja
adc
sar
or
adc
pop
nop
jmp
mov
inc
data16
jmp
inc
xor
mov
push
add
outs
aad
add
sbb
sub
or
lahf
repnz
mov
pop
call
out
std
test
lods
cs
push
cmc
jb
or
push
mov
xchg
rol
call
inc
xor
and
mov
xor
std
mov
xor
cmc
mov
retf
in
cmp
mov
cdq
les
sub
jb
in
ss
jp
add
mov
retf
pop
pop
xlat
fisttp
(bad)
in
in
out
and
bound
sub
jecxz
ins
sti
or
jnp
push
mov
ins
leave
mov
repnz
repnz
cli
into
or
ltr
je
dec
mov
retf
cmp
enter
ins
mov
enter
add
movs
inc
cdq
(bad)
or
mov
les
inc
push
adc
push
movs
push
inc
(bad)
retf
pop
pop
jmp
repnz
or
xor
pop
iret
add
(bad)
ffree
push
and
and
or
pop
jecxz
dec
and
mov
retf
or
test
sub
add
xor
jnp
(bad)
sub
push
sbb
inc
add
mov
cmp
mov
push
mov
adc
int3
mov
movs
sbb
aam
and
in
fs
cli
jmp
jb
mov
push
imul
pop
cmp
aas
nop
sbb
add
aad
rcr
lock
xlat
or
fdiv
in
xor
xchg
sub
push
jmp
out
lds
test
popa
jnp
fstp
pop
mov
sub
mov
add
jl
mov
in
lock
rcr
imul
add
push
mov
lea
out
add
dec
or
adc
jle
jmp
sub
cmp
fisub
mov
xchg
rcr
int3
pop
sahf
or
outs
mov
add
adc
jmp
or
push
cmp
addr16
test
stos
scas
jb
sbb
add
in
and
fucomip
dec
dec
lock
mov
push
jne
inc
mov
xchg
retf
mov
push
or
add
mov
imul
jge
cli
test
clc
or
call
jecxz
pusha
rcl
in
ja
push
xchg
sbb
xchg
and
idiv
sbb
dec
movs
lahf
inc
shl
into
or
xchg
mov
sbb
fwait
xchg
lahf
jo
inc
sti
add
ss
outs
stos
or
xor
mov
xchg
mov
sbb
xchg
icebp
ret
jmp
(bad)
lea
push
pop
xlat
xchg
ret
out
in
test
pop
addr16
ja
push
dec
or
inc
mov
jmp
test
cdq
xchg
in
xor
mov
sbb
je
stos
inc
add
sub
ss
in
dec
div
add
ja
push
or
ds
push
push
mov
push
(bad)
and
mov
add
sub
jns
jae
jns
rcr
xchg
add
or
data16
ds
pop
aad
loopne
retf
cwde
add
add
sbb
adc
in
dec
test
inc
mov
hlt
push
push
pop
mov
mov
mov
add
jmp
scas
daa
test
push
call
add
fild
stos
movs
arpl
or
push
sub
jmp
aam
push
mov
test
add
mov
js
dec
push
in
test
or
mov
(bad)
(bad)
sbb
loop
mov
lahf
or
(bad)
addr16
sbb
ret
xchg
add
push
jmp
mov
add
bound
mov
or
or
or
pop
outs
shr
push
(bad)
out
arpl
push
je
jmp
cli
jb
mov
pop
pop
pop
push
enter
cmps
in
mul
dec
test
arpl
cmp
sub
push
ret
or
sbb
pop
jne
jl
mov
ror
jmp
int3
stos
dec
push
aad
adc
sub
add
xchg
dec
sbb
sub
icebp
mov
sahf
and
scas
push
scas
movs
fdivr
repz
gs
pop
je
out
or
(bad)
adc
popa
jmp
pop
push
inc
in
xor
push
out
mov
outs
and
mov
xor
ret
mov
out
xchg
push
mov
jmp
ret
adc
jbe
xor
(bad)
pop
pop
in
jae
add
mov
pop
or
sbb
enter
ret
mov
outs
mov
pop
(bad)
out
lahf
adc
mov
jp
xlat
(bad)
fs
dec
sbb
mov
add
test
in
in
hlt
push
imul
int
or
add
inc
mov
or
and
or
out
xchg
xchg
in
cmps
jae
out
add
pushf
shl
out
imul
gs
adc
retf
scas
jbe
lock
and
mov
cmp
(bad)
lea
jo
xchg
push
int
mov
inc
sub
sub
fpatan
cmp
icebp
mov
gs
in
pushf
cmp
enter
push
lods
push
jmp
repnz
bound
rcl
loop
fs
pushf
xor
mov
sub
fucom
mov
mov
test
hlt
push
or
bound
or
xchg
push
mov
icebp
or
imul
mov
mov
pop
xchg
jle
or
jp
jmp
hlt
jmp
mov
jmp
or
sub
iret
pusha
movs
sub
add
cld
sub
sbb
aad
dec
sub
fiadd
nop
js
les
inc
pop
cdq
xchg
cbw
push
cli
daa
fs
xlat
mov
mov
sub
outs
mov
in
cs
ins
rol
cdq
pop
packsswb
dec
pop
scas
js
add
sti
push
ja
cmp
pusha
outs
sbb
pop
cdq
jmp
xchg
(bad)
add
pop
enter
jmp
pop
pop
jle
adc
std
mov
mov
dec
mov
inc
inc
jmp
bound
cs
mov
add
es
xor
sbb
cs
mov
cwde
xor
pop
sub
mov
push
fwait
cwde
sahf
mov
div
sub
fldenv
xor
push
cs
push
lahf
mov
inc
jp
sub
(bad)
mov
push
ins
mov
div
xchg
jl
push
rol
and
loopne
enter
and
xor
fmul
xchg
mov
jl
retf
add
adc
jp
or
cmp
popa
jmp
cmp
clc
jmp
sar
cmp
push
rcr
and
in
in
jmp
jl
or
fadd
ds
inc
test
in
xchg
rcr
push
js
fisubr
inc
test
scas
xor
or
imul
pop
(bad)
and
and
adc
jp
jp
frstor
add
xchg
or
outs
or
fs
cs
jo
cmp
aaa
fsubr
pop
repnz
clc
jmp
loopne
test
test
retf
imul
xlat
data16
lods
dec
in
lea
cmp
or
iret
(bad)
outs
(bad)
lods
js
lea
inc
or
dec
push
loope
jl
mov
mov
(bad)
fiadd
jp
stos
ss
jno
dec
addr16
or
sbb
int3
sub
mov
inc
nop
dec
add
or
ds
inc
or
mov
test
or
push
dec
sub
shl
xlat
jbe
lds
dec
out
inc
jne
cmp
fmul
cmp
fistp
outs
sti
or
das
mov
sub
and
fisttp
daa
pop
add
leave
jmp
(bad)
mov
xchg
mov
inc
outs
sbb
imul
dec
jecxz
gs
jmp
shl
addr16
xchg
push
scas
mov
sti
add
outs
int
std
and
stc
sub
mov
jmp
loope
out
test
call
inc
bound
cmp
jns
mov
clc
xor
data16
dec
out
rol
fidiv
dec
xchg
or
(bad)
(bad)
or
jecxz
add
fld
dec
loope
sub
je
add
out
fidiv
mov
retf
mov
and
loopne
jmp
xchg
popa
jmp
push
add
jge
push
in
fldcw
add
(bad)
xor
scas
mov
add
jecxz
mov
in
mov
mov
adc
mov
inc
mov
test
add
cmps
test
pop
push
or
or
ja
shl
test
pop
fiadd
mov
sub
sbb
mov
jecxz
mov
sti
rol
jmp
xchg
sbb
cmps
test
out
inc
add
call
ret
sub
sub
add
in
adc
into
std
mov
sub
into
mov
pop
not
dec
dec
test
push
dec
ret
add
ins
inc
hlt
jne
es
push
push
jmp
dec
push
jge
mov
popf
inc
xor
adc
xor
repz
mov
jno
add
xor
inc
ins
or
push
adc
aad
rep
popf
cdq
loop
adc
or
add
dec
dec
push
sbb
js
int3
add
dec
outs
out
stos
mov
fild
scas
movs
repnz
and
ins
jmp
cmp
leave
dec
ret
inc
cmc
or
dec
mov
repnz
jmp
jge
je
arpl
mov
stc
loope
or
mov
jmp
dec
aad
imul
cld
cwde
mov
fbld
add
jle
xor
jmp
xor
(bad)
mov
sti
call
push
push
inc
scas
rol
sub
daa
aaa
outs
repz
movs
shl
outs
jns
jp
dec
imul
shr
and
jge
or
cmps
repnz
pop
hlt
lock
add
retf
sub
jmp
mov
ret
les
pop
mov
gs
call
mov
xor
jecxz
in
or
push
fadd
lock
mov
sti
mov
dec
or
push
mov
mov
mov
shl
add
(bad)
xchg
xchg
popa
push
fnsave
jp
xchg
xchg
add
push
pop
sub
nop
daa
arpl
lods
leave
loopne
push
iret
and
stos
pop
add
pop
jl
sub
xor
bound
call
pop
pop
sbb
popf
mov
mov
int
push
jmp
cmp
mov
pop
push
pusha
call
retf
add
cmp
pop
cmp
jno
les
ficomp
in
xchg
jmp
test
in
lea
jecxz
push
lahf
add
sti
rol
mov
cdq
or
fdiv
xor
jl
shl
nop
arpl
(bad)
jns
sub
xchg
int3
pop
lods
fucomp
mov
daa
or
dec
(bad)
in
sbb
lds
jbe
adc
or
cmp
push
add
repnz
rcr
stos
jmp
std
daa
mov
or
sub
mov
fs
push
xchg
enter
arpl
in
mov
fwait
or
outs
retf
add
xor
daa
cld
dec
mov
push
popf
xlat
cmps
call
in
pop
mov
mov
jecxz
push
add
cld
int
bound
out
jmp
movs
clc
dec
inc
or
or
retf
nop
push
arpl
ret
push
ins
enter
jmp
xlat
adc
daa
lods
fs
dec
shl
(bad)
cmp
jmp
loope
mov
lds
xor
out
sbb
add
jge
test
or
fist
bound
jnp
aas
jne
push
or
(bad)
dec
sbb
jmp
jmp
lahf
push
xchg
stos
push
add
inc
or
mov
ds
push
cmp
lods
and
ret
jmp
fs
in
jmp
add
bound
sbb
jmp
aaa
cmps
loopne
push
aaa
hlt
xchg
push
rol
arpl
pusha
pop
push
call
outs
xor
push
dec
sbb
add
push
cmp
pop
or
dec
(bad)
in
stos
push
jo
test
aam
pop
dec
add
mov
jo
addr16
fimul
mov
sub
jne
lock
push
push
fsub
movs
xlat
sbb
sbb
jb
pop
pop
rcl
mov
test
cmp
jmp
leave
and
loop
fld
push
arpl
sub
outs
fild
ret
dec
jp
loope
jns
or
jo
add
jb
(bad)
pusha
adc
imul
aad
ins
sbb
push
ds
push
ror
jl
and
div
xchg
les
jmp
push
imul
cmps
mov
out
mov
cmp
inc
cdq
in
dec
clc
xor
mov
cmp
pop
fdiv
cmp
inc
dec
arpl
arpl
out
xor
movs
shl
daa
xchg
shl
jp
mov
sbb
jae
in
(bad)
ins
mov
mov
fstp
aad
sbb
(bad)
lods
and
sbb
aad
sub
and
and
sub
mov
addr16
jno
inc
jp
fisubr
fcom
addr16
test
fistp
adc
add
cmp
cmp
or
shl
cmp
or
jbe
retf
add
inc
movs
pushf
movzx
bound
and
mov
int3
inc
pop
mov
mov
les
mov
xchg
fucom
sti
sbb
dec
pop
ror
lea
and
xchg
popa
push
lahf
mov
inc
jae
js
ins
dec
cmc
or
(bad)
in
stc
sbb
cmp
sti
in
inc
ins
jbe
sbb
aam
push
add
out
test
out
and
call
cmp
hlt
aad
xor
add
and
dec
push
lock
adc
cld
xchg
fsub
sti
or
pop
push
ror
mov
add
shr
mov
or
sbb
addr16
xchg
test
push
push
or
mov
int
ficomp
int
xchg
add
ror
mov
adc
rcl
mov
out
pop
test
cmp
mov
rcl
sti
jmp
jne
into
jns
jecxz
push
adc
lock
add
or
sbb
or
sub
jno
jmp
cld
jo
lods
rol
dec
std
pop
jno
sub
(bad)
jmp
test
mov
(bad)
movs
or
jmp
xchg
ja
push
cmp
xlat
add
and
ret
add
call
mov
cwde
bound
scas
test
push
pushf
inc
sub
loopne
inc
(bad)
jg
adc
add
gs
cmp
or
daa
loopne
add
sub
loopne
cmp
xor
inc
shl
fidiv
xchg
jl
xor
or
mov
call
call
add
mov
cmp
dec
jmp
aam
ja
data16
push
mov
ds
repz
adc
(bad)
leave
jge
arpl
inc
sub
or
mov
sbb
lahf
cmp
sub
ror
mov
cmp
ror
loope
push
pop
push
arpl
repnz
lock
push
pusha
sbb
add
add
out
mov
popa
inc
jg
add
arpl
xor
ret
push
or
and
jmp
retf
das
aaa
nop
pop
pop
push
loop
int3
in
and
test
add
adc
push
das
in
lahf
fnsave
or
pop
rcl
movs
push
out
jmp
popf
xor
js
add
jmp
add
inc
xchg
rcr
jle
fwait
jge
and
loop
icebp
in
adc
mov
inc
or
rol
nop
mov
ins
mov
jg
in
aas
call
jmp
jmp
dec
retf
hlt
hlt
sub
mov
cmp
pop
ds
sub
stos
test
and
push
iret
punpckhwd
test
imul
add
bound
inc
loop
push
pop
add
cdq
cmp
and
mov
test
sub
rcl
ins
push
pop
rcr
(bad)
mov
inc
ins
in
or
pop
push
xchg
jmp
xor
mov
out
push
data16
xchg
call
int
pop
push
cmp
loopne
xor
loop
jb
out
js
rol
sbb
xchg
xchg
cmc
std
or
stc
imul
movs
mov
lahf
(bad)
cmps
(bad)
pop
cmps
xor
dec
inc
sbb
gs
push
jecxz
add
pop
add
xor
retf
mov
jnp
in
xor
stos
fisub
jae
inc
add
xor
(bad)
fadd
enter
and
scas
inc
jl
nop
shr
test
mov
fimul
jne
mov
xor
out
dec
push
test
retf
jbe
rcr
xchg
mov
jecxz
xor
(bad)
aad
and
aaa
(bad)
sar
cmp
and
jmp
popf
(bad)
push
pop
mov
or
lahf
add
test
stos
std
pop
dec
mov
sbb
loop
(bad)
jmp
out
cli
jae
hlt
xor
or
bnd
xchg
stos
add
xchg
add
in
mov
push
dec
jle
pusha
mov
cmp
xor
add
ror
hlt
shr
jmp
mov
cdq
imul
add
mov
add
add
pop
lods
mov
xchg
lea
adc
sbb
cmp
jns
scas
push
mov
test
scas
xor
add
popa
mov
dec
fist
sub
mov
sar
jge
pop
sbb
retf
nop
(bad)
push
inc
push
pop
ins
mov
std
mov
das
inc
xor
pop
dec
dec
addr16
daa
sbb
cmp
xacquire
test
imul
loop
into
adc
test
or
mov
and
test
lock
mov
dec
(bad)
mov
xor
scas
jmp
add
fcmovbe
test
mov
aas
aad
xchg
ror
jle
mov
icebp
dec
add
in
test
or
mov
sub
rcl
mov
pop
lea
imul
test
jb
popf
xor
jecxz
dec
mov
and
mov
loope
sub
loopne
inc
push
int
add
gs
jl
pop
mov
das
and
inc
jno
cs
mov
xor
call
addr16
xchg
fs
inc
dec
pusha
cmp
adc
push
mov
mov
dec
fild
sbb
xchg
push
mov
stos
xchg
(bad)
fldenv
mov
in
jecxz
xchg
adc
push
xchg
mov
icebp
mov
xor
outs
and
mov
popf
sub
out
push
retf
push
inc
popf
arpl
(bad)
cmp
sbb
in
xor
jl
mov
push
push
mov
sbb
or
inc
div
mov
adc
xchg
dec
out
or
out
push
dec
jmp
pop
push
aam
mov
outs
sbb
push
add
jl
jg
or
stos
mov
mov
adc
daa
push
mov
or
adc
cdq
ret
in
mov
cmps
mov
or
pusha
push
dec
push
push
xor
aas
loop
xchg
dec
mov
or
push
(bad)
jmp
or
retf
icebp
aad
jo
add
rol
and
and
xchg
xchg
cmps
prefetch
mov
stc
ds
icebp
in
and
repnz
jmp
rcl
in
pop
pop
fiadd
inc
ins
imul
mov
mov
push
std
mov
lahf
(bad)
xchg
and
call
pop
imul
mov
or
jae
pop
inc
adc
xor
loop
stos
loop
iret
faddp
(bad)
pop
push
sbb
in
mov
add
add
loope
jl
xchg
sbb
mov
cs
xchg
jmp
push
dec
push
inc
add
push
test
mov
data16
repnz
in
jg
xchg
or
add
fdiv
cmp
and
(bad)
xor
cmps
sahf
(bad)
ds
mov
jmp
xor
pop
dec
pusha
push
cmc
mov
cmp
cmc
aas
and
mov
jmp
pop
out
add
mov
mov
hlt
mov
and
test
out
fistp
test
addr16
outs
test
xor
mov
pusha
and
int
pop
int
sbb
std
lods
dec
mov
cdq
pop
arpl
pushf
popa
lods
inc
lea
ret
or
sbb
and
pop
push
add
jbe
sbb
inc
in
popa
fstp
mov
pop
jle
(bad)
jae
lods
loop
cmp
dec
fnsave
sub
cdq
xchg
and
mov
fs
rep
arpl
sbb
xchg
(bad)
fnstsw
and
mov
mov
push
or
outs
sbb
dec
jbe
in
pusha
pop
add
cmps
xchg
test
push
in
mov
retf
cli
outs
sub
jne
arpl
jb
sbb
and
jno
xchg
imul
or
ins
mov
inc
or
sub
retf
xchg
and
push
rcr
mov
push
int
fidiv
and
icebp
push
or
pop
jno
inc
jmp
xor
dec
inc
cwde
xchg
test
pushf
dec
sub
cld
out
adc
aad
aaa
pop
jbe
mov
push
movs
adc
outs
xor
adc
cmp
cmps
inc
fs
mov
cwde
pop
mov
fisub
lods
or
dec
in
not
jle
outs
fld
jne
cld
push
xchg
jae
psubsw
inc
mov
data16
xor
ficom
dec
push
mov
out
retf
push
sbb
jbe
pusha
or
push
daa
call
pop
xlat
adc
mov
push
push
arpl
lods
(bad)
cmc
popf
(bad)
and
jno
hlt
in
fdivr
test
pushf
jmp
arpl
and
das
cmp
and
test
mov
test
test
sbb
call
mov
fs
test
lods
popf
(bad)
and
cmps
loop
ins
and
jle
das
adc
js
xor
jmp
daa
jbe
add
sub
jmp
add
and
lods
dec
arpl
push
scas
int3
sbb
push
lds
fwait
into
push
inc
sub
mov
test
mov
add
in
dec
mov
inc
sbb
and
icebp
lds
loope
jmp
inc
es
sbb
iret
add
mov
add
push
cdq
aam
or
dec
mov
arpl
sub
jbe
mov
mov
mov
loope
xor
cs
stc
push
(bad)
jge
or
jno
pop
into
mov
mul
lds
sbb
lock
cld
cmps
(bad)
call
iret
jmp
cdq
jb
inc
fisub
cmp
shl
cmc
jg
dec
outs
lea
sbb
icebp
repnz
(bad)
jmp
hlt
push
jl
ret
imul
ret
and
hlt
cmp
xchg
fcom
imul
jl
movs
pop
jne
sar
test
or
scas
in
fucomip
xor
add
scas
not
lds
inc
push
sub
rol
sbb
add
and
jbe
cmp
push
test
loope
inc
jne
adc
lahf
cli
pop
add
push
jmp
lock
inc
daa
pop
mov
sub
push
jb
cli
adc
out
sahf
nop
call
addr16
int3
push
pop
jmp
call
mov
lods
pusha
and
cmps
and
inc
jmp
cmps
mov
adc
jp
jo
push
adc
mov
aad
repz
pop
movs
imul
call
jp
mov
out
outs
imul
ret
int3
mov
das
ret
jbe
lods
sub
fist
dec
aam
add
xor
add
or
nop
es
ins
add
pop
lods
call
stos
dec
test
sbb
cld
dec
jae
cdq
sub
push
iret
sahf
sahf
adc
fidivr
inc
add
add
iret
cmp
outs
or
mov
loop
imul
int3
xor
gs
popa
mov
mov
add
call
enter
xor
jb
jmp
push
cmc
aas
cld
jnp
pop
push
fsub
inc
add
(bad)
mov
sbb
int
int3
or
cld
inc
inc
add
cmp
out
sbb
push
jb
scas
out
ret
pushf
jmp
ds
int3
cmp
jecxz
add
repnz
mov
mov
jge
push
pop
ffreep
or
add
cmc
fild
cld
xor
lock
bound
ja
or
inc
pop
and
jmp
or
bound
je
and
jmp
inc
jb
in
or
add
mov
aam
push
adc
adc
ret
jmp
and
imul
adc
xchg
outs
sub
xchg
ret
push
or
mov
clc
jo
dec
inc
pop
push
jo
cmps
jnp
xchg
xchg
mov
mov
aas
sub
pop
pushf
jmp
push
lods
stos
add
or
pushf
push
popf
daa
cdq
or
loopne
mov
jg
inc
adc
push
jo
mov
mov
sub
lock
mov
sub
test
xchg
add
mov
in
xchg
pop
or
push
mov
jno
fmul
fcmovbe
add
outs
(bad)
aas
imul
xchg
and
jmp
je
inc
outs
call
inc
pop
(bad)
out
adc
add
mov
or
cmp
outs
mov
push
or
mov
ins
aad
push
jmp
push
clc
stc
frstor
int3
or
xchg
xchg
and
in
imul
sbb
jno
pushf
and
mov
test
jge
sbb
cmc
jp
stos
adc
or
pusha
add
cwde
jmp
dec
pop
xor
mov
xor
jmp
mov
mov
sub
dec
push
xchg
xchg
add
in
mov
or
mov
jmp
in
out
retf
ds
or
movs
sub
cmp
xchg
fisttp
(bad)
lds
xor
sahf
xchg
push
sub
inc
mov
(bad)
fadd
push
inc
nop
scas
scas
ret
adc
call
leave
xchg
js
push
pop
xchg
rol
xor
sub
in
xor
in
cmp
jbe
fnstenv
sbb
mov
data16
xchg
dec
movs
mov
push
adc
push
nop
and
jmp
mov
rol
pop
adc
nop
call
lods
(bad)
inc
xlat
cmp
sti
push
aaa
pop
cmp
add
cmps
sbb
jo
or
or
and
mov
mov
ss
aaa
icebp
xlat
push
inc
cmp
jecxz
je
cmp
push
cmp
mov
add
icebp
dec
cmc
push
mov
add
dec
jmp
syscall
rcr
xor
or
imul
out
rcl
or
push
or
fwait
aaa
push
and
fild
dec
arpl
mov
push
sbb
mov
nop
push
sub
push
inc
inc
ins
inc
mov
ins
fcmovb
and
xor
pop
mov
xor
loop
jl
jcxz
pushf
push
mov
add
inc
jl
lea
push
jmp
pop
and
jl
hlt
xchg
push
popa
ins
cmps
sbb
inc
scas
out
ret
or
aad
mov
sub
mov
pop
cld
pushf
outs
push
imul
in
popf
pop
add
outs
jns
xor
add
sti
(bad)
shl
into
pop
cli
add
loope
ret
add
jmp
frstor
xlat
lock
pop
mov
sub
das
push
inc
in
pop
outs
es
xchg
fdivr
daa
adc
mov
dec
ins
or
pusha
sbb
fwait
add
sbb
and
repz
out
xchg
jmp
jg
or
mov
fisub
imul
push
cwde
sbb
icebp
fsubp
inc
sbb
ja
and
fld
fdivr
ret
push
idiv
xchg
(bad)
ds
ret
(bad)
popa
fild
jmp
aas
dec
(bad)
cmp
and
jl
vpsubusb
sbb
adc
div
ins
or
adc
mov
pop
cdq
add
mov
hlt
jo
out
jo
xchg
push
push
mov
fnstcw
inc
repz
or
xor
aam
lahf
mov
or
ds
fwait
ins
push
inc
push
push
mov
push
add
cmps
jns
jle
repnz
and
add
fdivr
mov
cmp
aad
xchg
dec
or
cmp
mov
jmp
mov
xchg
(bad)
jl
jmp
dec
adc
mov
jmp
cld
mov
js
cmpxchg
imul
rcl
(bad)
jne
call
add
and
lock
jp
cvtdq2ps
js
jnp
bound
(bad)
and
cdq
das
jmp
(bad)
or
or
adc
and
mov
gs
ins
fnstenv
cmc
les
in
dec
inc
push
in
vpsllq
mov
jmp
xchg
sti
mov
pop
mov
call
xor
loopne
adc
out
xor
mov
xor
movs
std
or
sbb
lods
test
fcomp
pop
push
mov
xchg
outs
fstp
and
add
(bad)
outs
mov
inc
jecxz
xlat
mov
cmp
xor
jmp
dec
mov
lods
cld
jmp
mov
push
mov
and
push
int
movs
xchg
mov
in
xchg
mov
or
add
(bad)
jl
mov
adc
shl
shr
adc
xchg
add
mov
jecxz
xlat
fstp
les
ficomp
stc
cmp
in
dec
xor
(bad)
sub
icebp
jno
add
cdq
fsubr
or
adc
outs
xchg
add
xchg
out
ins
jne
or
loopne
jo
ins
mov
jo
jne
(bad)
jle
addr16
aaa
fnstsw
fdivr
add
jno
xor
mov
ins
not
scas
push
or
mov
add
adc
xor
add
adc
add
test
jb
mov
test
mov
adc
xchg
fstp
dec
inc
cs
pop
sbb
add
add
js
mov
cmps
mov
jmp
(bad)
std
adc
cld
lods
pop
dec
int3
(bad)
sub
add
cmp
mov
(bad)
popa
fcomi
jae
add
jmp
add
push
xlat
mov
(bad)
jo
popf
es
sub
add
push
push
in
inc
dec
aam
test
nop
out
sbb
aas
mov
xchg
pop
cmps
xchg
or
mov
lock
pop
sbb
mov
or
icebp
ins
jne
hlt
push
or
push
pop
aas
sub
jbe
xchg
ss
sub
mov
lea
je
lds
std
icebp
dec
mov
inc
je
test
jnp
and
aam
mov
cmc
scas
idiv
hlt
(bad)
hlt
(bad)
into
dec
les
cmp
psubusw
out
add
sti
jbe
hlt
shr
leave
not
pop
or
gs
test
out
or
ror
jecxz
outs
rol
test
repz
cwde
enter
and
pushf
cli
dec
sbb
inc
imul
lds
or
les
push
push
sub
into
lods
lea
pop
idiv
push
jmp
mov
add
xchg
mov
(bad)
enter
cmp
dec
jns
aad
aas
dec
aas
dec
fcmovnu
daa
mov
push
pop
xchg
ret
cli
add
add
cmp
inc
xlat
xor
inc
and
push
cmps
daa
sbb
adc
and
pusha
nop
call
pop
retf
shr
ficom
mov
(bad)
cmps
adc
jmp
jp
xchg
addr16
pushf
cmovge
ins
mov
and
ficomp
dec
mov
xlat
mov
sbb
sub
out
mov
push
jbe
int3
jmp
jp
dec
dec
cld
cli
push
jl
and
push
(bad)
dec
sti
scas
dec
add
push
inc
and
or
mov
xrelease
inc
(bad)
ins
lds
xchg
sbb
mov
mov
push
fild
add
push
(bad)
adc
add
icebp
mov
dec
jb
lock
jmp
mov
push
shl
or
pop
iret
jb
int
push
fs
cmp
jge
push
push
test
(bad)
test
pop
popf
pop
inc
push
cdq
fucomi
xor
mov
push
mov
cmp
push
call
mov
add
ins
aad
call
cmp
cmp
push
cdq
and
cmc
(bad)
inc
cmp
retf
lods
pop
pop
iret
mov
push
stos
add
(bad)
ret
or
ja
dec
pop
jmp
xchg
jmp
mov
xchg
add
fisubr
sahf
aam
ds
cmp
jnp
cmps
ficomp
jno
jno
dec
cmp
adc
and
fsubr
inc
scas
call
dec
sub
pop
ins
rcl
mov
push
jo
push
mov
push
push
cwde
pop
repz
repz
dec
xchg
xor
sbb
adc
add
(bad)
adc
mov
add
(bad)
pop
jne
add
xor
mov
sub
jmp
cmps
or
push
adc
mov
adc
jmp
das
adc
push
xchg
aam
movs
(bad)
out
inc
movs
fadd
mov
push
or
jnp
fiadd
enter
cld
inc
test
aam
or
js
dec
mov
mov
lock
or
and
xchg
ror
xor
retf
jne
push
jb
mov
test
pop
(bad)
es
int3
and
nop
jno
xchg
cmp
mov
stc
in
dec
inc
fbstp
fsub
or
(bad)
gs
pop
lods
rcr
mov
sub
retf
jmp
aam
push
fidiv
add
add
out
ffreep
test
or
bound
xor
dec
add
xor
test
jmp
dec
scas
enter
leave
arpl
xchg
jns
mov
inc
sbb
cld
add
idiv
xor
push
or
xor
loopne
xchg
fprem1
push
dec
mov
push
add
push
mov
sub
xchg
adc
sub
pushf
(bad)
rcr
into
inc
or
shl
pop
js
add
add
jle
or
cmp
add
in
mov
xor
sub
lock
jno
retf
sub
xchg
or
lods
inc
add
call
pop
jl
lahf
cmps
jnp
add
mov
jle
pop
inc
aam
sub
into
and
inc
mov
(bad)
or
dec
scas
xor
jne
mov
mov
mov
bound
pop
int
mov
sahf
test
hlt
clc
sub
jle
push
xor
cmp
arpl
push
mov
adc
pop
repnz
enter
call
push
into
(bad)
push
dec
xor
add
aam
mov
(bad)
dec
sbb
jmp
fwait
add
push
fidiv
mov
sub
xchg
jle
fiadd
inc
cmp
outs
jmp
push
loope
imul
fst
das
(bad)
in
sar
push
adc
inc
stos
sub
les
out
add
aaa
sbb
fmul
mov
in
jbe
or
aam
shl
int3
retf
cld
out
mov
xor
add
push
and
push
mov
test
inc
fstp
xlat
mov
or
pop
mov
or
sub
xchg
jno
dec
or
or
and
test
xor
imul
xchg
dec
jg
jle
fld
sbb
repnz
jae
mov
mov
ins
lds
(bad)
into
(bad)
sub
sbb
jae
mov
or
inc
add
jmp
cmp
je
xchg
push
ins
xchg
xlat
or
jns
mov
cmps
cmp
outs
aad
arpl
add
rcl
xor
sub
sub
ins
adc
in
(bad)
jmp
xchg
push
xchg
push
add
sar
mov
lock
int
push
lea
push
add
iret
mov
repnz
es
jp
and
loopne
pusha
or
push
in
iret
or
div
fmul
cmp
ror
sub
je
lea
jmp
cmp
xchg
xchg
add
mov
cmp
or
shl
daa
mov
or
cwde
push
rcl
or
pop
jmp
and
pop
xchg
test
push
push
jmp
js
mov
add
rol
and
cwde
push
not
jmp
gs
loope
or
inc
adc
stos
call
pop
not
ins
push
cmp
les
add
pusha
in
cmp
or
adc
out
push
int
in
push
mov
xor
push
or
and
(bad)
pushf
inc
daa
in
push
inc
push
jle
xor
or
mov
jl
les
and
sub
sub
push
or
ret
stc
jmp
rol
pop
stos
cmp
jmp
in
in
dec
cmp
andnps
jmp
xchg
mov
dec
fs
dec
jb
xor
test
gs
jmp
add
and
mov
adc
cs
retf
xchg
je
jo
out
push
pop
test
fwait
inc
add
cld
mov
ficomp
retf
mov
test
or
retf
sub
lea
inc
iret
test
cmps
fs
pop
add
push
adc
and
aad
ficomp
cmps
xchg
and
jmp
add
xor
hlt
add
xor
or
mov
jmp
lahf
and
popf
cmp
or
inc
(bad)
retf
clc
lods
lahf
pop
imul
dec
and
movntps
repz
cli
out
and
lea
or
mov
iret
dec
sbb
jmp
cmps
add
and
out
jmp
mov
xchg
mov
stos
push
fisubr
inc
cs
mov
cmp
xchg
mov
icebp
adc
sub
xor
arpl
inc
test
jbe
push
push
cld
mov
push
jle
add
sub
aad
mov
or
add
mov
lea
aam
ins
xchg
sbb
jmp
cmc
daa
dec
icebp
out
mov
jmp
jmp
cmp
(bad)
xor
dec
imul
jle
lods
push
mov
frstpm(287
push
stos
fsub
scas
outs
jne
in
ins
mov
cmp
imul
lock
cdq
or
hlt
xchg
push
xchg
jp
mov
add
lods
fild
or
cmc
popa
jb
in
sahf
popf
outs
rcl
jne
push
adc
push
inc
sub
xchg
dec
jmp
mov
loop
push
aad
int3
xor
stos
out
mov
or
sbb
inc
lods
xor
stc
retf
retf
mov
mov
stos
div
mov
mov
scas
cli
and
rcl
(bad)
pop
rol
xor
push
lahf
jmp
int3
pop
daa
and
les
inc
mov
mov
cmps
or
mov
fistp
mov
dec
add
adc
popf
jmp
(bad)
xor
inc
call
pop
push
out
add
cs
jnp
popa
outs
repz
xchg
loopne
popa
dec
add
mov
fs
data16
dec
jmp
cwde
fs
push
aas
ret
push
push
ja
imul
sbb
aaa
(bad)
or
lahf
sub
nop
int3
inc
imul
in
push
jmp
popa
pop
cmp
xchg
add
or
push
(bad)
call
pop
xchg
(bad)
or
popa
in
xor
xchg
cmps
cwde
mov
mov
fbld
int3
(bad)
js
inc
retf
push
xchg
ds
inc
xchg
mov
adc
arpl
test
dec
aas
int
jmp
cld
jl
out
(bad)
aam
xchg
leave
in
out
add
jo
xchg
mov
daa
popf
and
jns
push
sub
and
xchg
loope
push
out
add
inc
out
pop
pop
lds
dec
clc
pushf
fs
inc
dec
xor
out
stos
sbb
push
(bad)
stc
es
fidivr
sbb
jmp
and
inc
ret
add
or
adc
fisttp
lods
jmp
inc
push
xchg
jmp
and
hlt
push
mov
xchg
ds
lea
adc
xor
mov
mov
mov
ret
sbb
repnz
in
pop
mov
movs
push
dec
sbb
cwde
jns
sahf
cld
pop
push
cs
and
fldenv
outs
pop
push
or
stos
pop
pushf
data16
xchg
or
mov
jp
add
imul
icebp
mov
dec
stos
mov
add
neg
and
fcom
je
jmp
loop
icebp
xchg
sbb
xor
jg
loope
jle
mov
mov
clc
out
push
mov
scas
lods
iret
push
out
adc
cmps
mov
and
ins
aas
gs
stos
test
or
addr16
test
and
xor
jnp
gs
add
jmp
sub
push
popa
fsub
push
push
mov
xchg
jp
adc
xchg
push
sbb
rcl
in
fdivrp
pop
or
xchg
and
fnstcw
add
cli
lock
mov
mov
int3
adc
fmul
xchg
shl
into
jmp
jae
mov
push
cs
or
jmp
mul
mov
cmc
or
loopne
mov
push
dec
jo
lods
mul
add
mov
int3
fwait
pop
out
jbe
fidivr
push
jge
hlt
or
test
jb
or
xchg
push
sbb
or
imul
sbb
fucomp
sub
push
arpl
repz
push
ret
outs
fild
sub
cmc
aam
push
add
leave
mov
add
push
or
cs
loope
out
jmp
dec
inc
je
cmc
in
push
adc
cmps
mov
cmp
xlat
or
dec
add
rol
dec
pushf
sbb
mov
sub
retf
mov
sbb
pop
lods
and
dec
popa
xchg
xchg
mov
inc
jg
mov
cmp
jne
in
je
pop
call
add
repnz
mov
add
xchg
repz
daa
pop
addr16
ds
hlt
in
fdivr
out
mov
enter
jmp
inc
into
je
mov
scas
mov
sti
int
out
imul
pop
mov
or
mov
fs
jno
pop
dec
cmc
mov
adc
and
or
jecxz
xor
xchg
jmp
imul
sub
push
fbld
movs
add
jae
push
pushf
dec
xchg
or
xchg
test
movs
jmp
pop
push
(bad)
into
xchg
fwait
out
push
aam
or
imul
push
jo
add
es
sbb
jb
sub
in
push
ror
hlt
retf
aad
add
rcr
cdq
mov
sbb
call
and
add
aas
or
dec
lahf
stc
fucomp
and
jmp
fisub
sbb
jne
adc
add
add
mov
push
rcr
push
neg
mov
lods
xor
add
dec
ja
cmp
outs
in
or
hlt
ins
test
fidivr
or
jnp
aam
xchg
ja
or
test
or
je
enter
mov
push
inc
cmp
jle
pop
xchg
dec
sub
stos
or
jmp
out
adc
mov
push
cmps
or
mov
lahf
push
pop
inc
pop
arpl
lods
pusha
ds
frstor
(bad)
adc
imul
xor
dec
stos
adc
repz
rol
jno
add
and
cmp
push
mov
dec
cmp
sbb
mov
push
std
bound
outs
and
int
leave
int
jnp
jg
ror
adc
jmp
movs
arpl
sbb
in
sub
pop
popa
mov
jl
pusha
lods
(bad)
pop
xor
dec
fnsave
sub
je
sub
adc
cmp
push
loop
enter
pushf
(bad)
xor
fs
or
bound
jmp
cld
aas
push
push
cmp
dec
imul
pop
inc
je
push
inc
dec
push
push
call
sar
dec
pop
ficomp
fsubr
test
dec
sbb
mov
push
dec
or
retf
out
jmp
xlat
mov
sub
js
movs
loopne
mov
add
and
adc
ds
icebp
or
loopne
ds
lea
(bad)
mov
pause
popf
push
sub
mov
push
pextrw
add
(bad)
jmp
scas
dec
or
jmp
adc
fimul
or
xor
mov
dec
mov
push
pop
push
movs
pop
(bad)
popa
ret
cld
inc
repz
call
or
aas
add
std
jg
fs
or
ds
push
mov
jns
test
loopne
inc
sbb
cld
je
jae
and
add
jp
ins
xlat
inc
or
jp
inc
cmp
push
pop
sbb
cmp
ss
loope
sti
aad
cld
inc
jg
pop
push
mov
pop
jmp
or
gs
daa
lahf
or
lods
cmp
icebp
aaa
jmp
mov
int3
adc
shl
or
popa
daa
push
stc
rol
push
hlt
fldenv
jmp
call
int
add
repz
out
aam
mov
pop
aaa
xchg
(bad)
out
add
test
ret
mov
je
mov
test
dec
imul
or
dec
xchg
pop
setnp
arpl
movs
push
inc
js
das
out
arpl
jge
in
push
lock
or
or
js
gs
data16
lods
sub
dec
neg
inc
pop
push
pop
jns
push
and
fadd
or
imul
ds
cmp
shl
inc
cli
mov
xor
dec
in
or
mov
ins
add
xchg
(bad)
repz
mov
mov
sbb
add
aam
jmp
inc
sub
mov
addr16
jbe
outs
sar
out
ja
dec
test
clc
stc
mov
and
push
dec
pop
inc
pop
dec
or
xchg
les
jne
xchg
xchg
shr
mov
xor
push
sub
sub
(bad)
ror
test
iret
retf
addps
fistp
inc
je
addr16
mov
jno
dec
js
add
jb
pop
push
icebp
lahf
adc
lea
mov
mov
addr16
push
out
addr16
xor
xlat
push
mov
stos
adc
jl
xchg
mov
pop
push
push
or
add
ret
les
push
adc
jp
ins
rol
mov
fistp
or
rcr
or
mov
push
dec
repz
pop
jmp
dec
xchg
clc
or
add
call
jl
dec
or
data16
jne
retf
mov
push
jbe
pushf
mov
test
pop
fisttp
iret
retf
sub
out
enter
or
xchg
inc
int
jmp
push
repz
or
pop
je
movs
mov
dec
dec
or
or
sar
push
mov
mov
mov
jecxz
repnz
out
or
mov
mov
icebp
jg
mov
lods
push
push
cld
adc
mov
add
out
outs
xchg
call
(bad)
aam
mov
dec
jmp
popa
cs
sahf
call
or
test
push
jmp
pop
ret
(bad)
mov
mov
fs
icebp
and
cmps
(bad)
int
add
and
inc
pop
cmp
dec
jge
cmc
cli
or
test
ins
sbb
std
push
dec
lea
and
call
inc
push
sbb
lods
stos
mov
mov
mov
lahf
or
mov
pop
xor
mov
fwait
lahf
cmp
les
lea
in
retf
mov
inc
shl
mov
(bad)
fucom
xchg
ffree
les
pop
push
sbb
and
(bad)
sbb
xchg
or
cs
push
sub
push
cmp
xlat
push
inc
repnz
sbb
xor
sbb
mov
data16
or
xor
cmp
leave
repnz
add
sub
shr
xchg
popa
shl
pop
test
ins
pop
int
rcr
inc
dec
push
push
rcl
(bad)
outs
push
and
inc
mov
ret
jg
sbb
js
es
xchg
mov
pop
call
out
sub
(bad)
pop
push
xor
fisttp
sub
jmp
pop
aas
push
jmp
rol
push
cld
mov
cmps
adc
test
lock
add
jl
push
xlat
xchg
icebp
ins
and
jmp
das
rol
arpl
adc
(bad)
adc
pop
(bad)
mov
cwde
jo
push
in
fwait
and
and
mov
in
add
outs
hlt
push
jo
fstp
sbb
mov
outs
sub
repnz
cdq
sar
pop
stc
push
push
sub
ins
mov
shl
xchg
ins
je
xor
in
nop
cmps
aaa
aaa
push
xchg
lods
dec
fisttp
scas
movs
(bad)
ds
jmp
das
lock
stos
mov
push
mov
cmc
sub
cmc
cwde
stc
sub
or
jb
dec
out
pop
jge
jae
(bad)
sar
xchg
das
fwait
jg
(bad)
pop
imul
nop
add
sti
stos
ss
mov
stos
jbe
rdmsr
and
into
jmp
xlat
les
shr
pop
add
add
jns
jmp
ds
mov
xchg
xchg
xchg
push
push
pop
test
cmp
add
ins
mov
inc
fiadd
mov
je
and
cli
inc
std
mov
jg
jmp
lahf
mov
hlt
aaa
aam
mov
push
fld
dec
mov
xchg
push
sbb
pushw
xchg
leave
xchg
call
div
xor
fsubr
xor
not
rdpmc
or
push
out
or
xor
sub
shr
mov
in
ror
mov
addr16
hlt
adc
sub
nop
jmp
cmp
cmps
push
add
fild
jl
mov
std
outs
movs
pop
aas
sbb
jmp
(bad)
popf
retf
jo
push
cwde
inc
lods
les
mov
loopne
jmp
gs
lods
and
mov
xchg
test
push
popf
cmp
in
fsub
nop
movs
mov
jl
mov
inc
jae
lods
jge
sub
pop
xchg
leave
out
pushw
(bad)
cmps
jg
jb
rol
jmp
daa
xor
add
rcl
adc
sbb
ficom
scas
adc
or
xchg
jmp
lock
icebp
sbb
pushf
and
in
(bad)
or
fidiv
out
test
or
jle
lea
in
push
sub
push
loopne
xor
dec
mul
inc
jno
push
mov
lock
ror
jmp
push
cmp
repnz
std
in
push
adc
lea
jnp
mov
xchg
jp
cmps
inc
cmp
add
outs
repnz
push
jmp
sub
test
shl
sub
add
jno
inc
movs
daa
jbe
add
add
call
xchg
jb
xor
jno
push
jecxz
sbb
shr
mov
pop
or
mov
mov
(bad)
stos
or
mov
or
in
(bad)
stc
pop
jmp
mov
xor
adc
sub
std
arpl
push
and
dec
jne
jmp
jo
shr
repnz
push
ret
xlat
out
or
retf
or
out
or
pop
cmp
mov
push
das
mov
push
xor
jno
fisub
jecxz
rcr
arpl
add
lds
add
(bad)
adc
test
pusha
lock
jp
scas
fwait
xchg
mov
push
not
test
mov
push
mov
aaa
mov
jnp
fs
jg
ins
sbb
add
dec
add
add
cld
shl
(bad)
xchg
xor
xchg
fsub
mov
adc
push
out
cmp
repnz
xor
addr16
push
(bad)
cmc
push
sbb
or
out
push
jmp
sbb
js
ds
scas
dec
inc
test
sbb
fldcw
add
mov
jmp
lods
imul
sti
jb
cmp
rep
test
xor
dec
test
or
ror
ins
nop
jle
inc
jmp
scas
adc
and
std
push
push
ins
aaa
loope
xchg
lahf
imul
mov
stos
add
xchg
dec
xor
pop
mov
add
into
out
fsin
sub
into
push
mov
pop
or
repz
cli
adc
mov
and
loope
adc
sbb
addr16
repnz
mov
imul
in
shl
mov
std
push
push
ret
mov
sub
movs
add
(bad)
or
sub
sbb
iret
inc
add
ss
minps
in
fucomi
xor
ja
adc
xlat
fnstcw
or
cmc
cmps
add
cwde
add
js
sub
retf
pop
outs
addr16
arpl
fdivr
gs
jne
xchg
adc
fst
call
call
mov
sub
xchg
fldenv
in
cwde
ss
into
mov
and
repz
mov
xchg
add
nop
jmp
repnz
jl
in
cmp
lea
dec
push
push
and
sub
push
cli
push
mov
cwde
lea
sbb
xchg
push
xchg
push
cs
je
add
sbb
pop
dec
jmp
pop
dec
out
aad
test
mov
jmp
push
ss
xchg
daa
ror
inc
xor
mov
loop
jmp
xor
call
int3
pop
xchg
pop
jle
lods
int
and
adc
lea
mov
scas
pop
push
jp
pop
add
xchg
cmp
shl
loop
and
and
adc
mov
mov
push
cmp
jns
pop
dec
aad
inc
jmp
cmp
popa
or
aam
arpl
or
add
mov
jg
lock
ret
mov
dec
pop
mov
pop
add
mov
jmp
cld
lods
and
push
leave
and
mov
in
inc
cdq
sub
imul
fst
sahf
jb
jmp
(bad)
push
and
mov
inc
not
mov
push
ins
das
jmp
ret
inc
(bad)
jecxz
pop
lods
dec
pusha
cdq
inc
dec
scas
int
addr16
and
add
cli
inc
movs
mov
ror
inc
sbb
addr16
add
xlat
dec
mov
icebp
clc
adc
dec
rcr
mov
xchg
icebp
push
sbb
movs
cwde
and
cmp
push
call
int
or
je
add
push
dec
xlat
cmps
or
sbb
bound
adc
out
adc
neg
mov
xchg
or
das
push
or
push
jl
icebp
ins
or
jmp
pop
adc
pop
or
test
add
push
loop
lea
stos
pop
add
imul
sub
xchg
outs
inc
es
xchg
mov
rol
loope
lods
cmp
and
imul
aam
sub
or
addr16
pop
mov
jle
mov
lock
out
add
inc
fild
unpckhps
stos
cli
or
call
dec
mov
cmps
psubusb
push
or
inc
retf
jl
jmp
cwde
jnp
adc
sub
add
mov
or
pinsrw
loope
jnp
mov
icebp
pmullw
cmps
cmp
jbe
adc
mov
imul
jnp
fiadd
call
and
fcmovbe
cwde
add
adc
inc
jge
into
sub
sahf
imul
jp
mov
sub
sub
push
(bad)
mov
mov
popf
push
pusha
jg
push
add
push
in
jg
cli
repz
cld
push
(bad)
jne
nop
shl
sbb
inc
and
add
add
adc
or
in
cmp
dec
jmp
pop
jge
and
arpl
or
mov
sub
std
jp
in
xchg
dec
jmp
sub
fadd
pop
pop
inc
sub
inc
sbb
or
xor
dec
jle
rcr
xchg
jg
stc
aaa
(bad)
out
mul
xchg
fimul
adc
mov
sbb
mov
stc
out
fimul
jno
jmp
push
cs
sbb
push
(bad)
scas
or
ret
add
jl
xor
jmp
adc
inc
nop
fdiv
push
fstp
jp
dec
xchg
repz
pop
or
mov
jmp
or
icebp
bound
into
test
aad
jb
add
mov
mov
std
push
jmp
es
sub
mov
aad
mul
jl
push
jmp
inc
mov
push
jb
push
arpl
fst
arpl
int3
jmp
fs
push
rol
or
idiv
(bad)
pushf
stos
mov
or
lock
push
mov
mov
and
jae
push
outs
xchg
mov
add
pop
lods
mov
pop
adc
outs
mov
push
jmp
cwde
fdiv
or
and
push
sub
icebp
sbb
xlat
(bad)
sbb
call
and
imul
jb
rol
push
xchg
jnp
dec
mov
stos
adc
jp
out
not
and
pusha
xlat
xor
ror
(bad)
js
mov
fcomp
shl
add
popa
xor
or
leave
pop
test
mov
jmp
push
jae
adc
mov
icebp
out
xor
mov
or
sub
gs
test
add
sub
ins
jmp
(bad)
xor
pop
and
xor
cdq
mov
and
jmp
fisubr
push
fst
(bad)
imul
push
mov
sub
push
add
loopne
mov
movs
mov
jmp
retf
inc
mov
mov
sbb
push
xor
dec
inc
int3
addr16
mov
add
add
mov
test
mov
leave
ja
call
fmul
shr
add
cli
mov
pop
or
sar
retf
xchg
push
scas
cmps
adc
jo
int
add
(bad)
xchg
dec
aad
in
jge
popf
mov
ror
jne
adc
xchg
ret
or
and
out
(bad)
push
jmp
and
push
cmps
stos
daa
shr
or
dec
fisub
jo
sub
sti
xchg
enter
retf
dec
lds
jmp
(bad)
or
cdq
pop
rcr
or
shl
rol
sbb
sub
test
(bad)
div
add
inc
pusha
mov
out
mov
sub
lock
and
or
adc
loop
pop
add
push
test
into
or
add
cmp
cmp
jno
cmp
ins
je
pop
mov
inc
stos
and
bound
jmp
aam
aad
mov
test
into
stos
iret
in
lea
sub
xor
dec
(bad)
mov
adc
imul
cmp
mov
jmp
lahf
icebp
cmp
(bad)
(bad)
loop
ins
xchg
mov
mov
inc
ss
dec
mov
lea
cmp
repnz
ds
push
jmp
rcl
ret
xor
or
adc
xchg
dec
into
lods
rcl
mov
mov
ins
add
or
shl
jo
or
pop
adc
fistp
sub
or
mov
pop
xor
sub
push
fdiv
mov
les
add
dec
rcl
clc
inc
jne
test
mov
xor
cmp
cdq
and
cmp
sub
push
add
xchg
adc
into
push
mov
sbb
dec
lds
leave
out
mov
push
pop
adc
jmp
pop
add
sbb
rol
mov
jp
dec
inc
pop
clc
loopne
shl
jb
xor
adc
cmp
push
sbb
retf
adc
test
mov
pop
jmp
cmp
push
lahf
add
jmp
pop
pop
mov
pushf
mov
inc
in
test
cmps
push
push
xchg
fst
inc
xchg
or
fmul
cdq
push
push
ins
ret
lock
jne
jge
xor
or
xchg
mov
inc
mov
cmp
push
sub
aaa
inc
arpl
add
lock
test
xchg
ins
sbb
icebp
add
dec
jmp
imul
ja
dec
add
and
sub
jmp
jns
dec
jle
inc
or
or
adc
out
push
jg
push
pop
jmp
test
scas
cli
cmc
clc
pop
addr16
mov
mov
sbb
outs
add
xor
xor
mov
popa
iret
imul
dec
push
retf
or
cmp
(bad)
aaa
or
call
mov
hlt
push
push
or
cwde
mov
jbe
push
test
sbb
dec
and
xor
shr
icebp
iret
add
and
mov
push
(bad)
movs
inc
or
sahf
add
cmp
xor
jmp
nop
sahf
jmp
push
mov
test
movs
cmp
cmp
inc
jg
add
xor
sbb
jnp
das
bnd
xor
or
fistp
stc
jmp
das
pop
cmp
jle
cmps
(bad)
push
mov
mov
or
dec
xchg
fucomi
jnp
add
add
and
out
dec
aaa
mov
xchg
test
cli
mov
fsub
mov
or
repz
pushf
or
lods
jb
ret
jmp
clc
cmc
sub
and
addr16
push
push
push
ds
call
mov
(bad)
push
pop
out
mov
das
test
xor
ins
out
xadd
inc
lahf
js
or
aas
dec
add
sub
fdiv
push
or
inc
test
in
mov
mov
fild
mov
das
lods
dec
pusha
pop
icebp
aaa
push
or
inc
dec
add
add
bound
xchg
or
ret
mov
cwde
pusha
add
je
or
fcmovbe
mov
jmp
mov
inc
aaa
mov
and
add
aam
mov
or
jnp
(bad)
cli
loop
(bad)
sub
sub
mov
mov
aas
cmp
add
es
pop
ja
(bad)
or
inc
adc
cmc
jne
in
ss
les
jmp
arpl
cmp
add
push
sbb
imul
(bad)
lahf
loop
cld
add
dec
and
push
push
sbb
dec
cdq
popa
call
push
aad
out
es
pop
icebp
or
jl
jae
dec
leave
jmp
jmp
test
test
jo
retf
int
fsub
dec
mov
push
lea
aaa
fucomp
sbb
sti
push
xor
pop
sahf
or
sti
imul
iret
lea
cmp
shr
mov
in
iret
push
lods
int3
in
push
mov
mov
xchg
push
push
(bad)
xlat
mov
dec
inc
cmp
nop
sub
fild
(bad)
iret
aaa
ins
int
adc
xchg
mov
push
and
xor
in
arpl
inc
clc
retf
js
add
push
jg
sub
push
and
(bad)
iret
inc
mov
jmp
xchg
push
(bad)
stc
sub
(bad)
ins
inc
add
pop
inc
fmul
or
xor
arpl
cmp
or
xchg
and
push
xor
jmp
jb
pop
xchg
test
addr16
data16
outs
mov
jmp
lahf
fstp
xchg
xor
add
mov
mov
mov
ficomp
jmp
pop
pop
.byte
.byte
