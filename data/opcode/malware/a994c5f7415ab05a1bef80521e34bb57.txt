push
mov
xor
push
call
push
pop
push
push
push
push
push
push
call
push
push
push
call
push
push
push
call
shl
mov
push
push
push
call
shl
add
mov
push
mov
add
push
mov
add
call
call
pop
ret
mov
ror
and
or
(bad)
call
inc
sar
ror
push
mov
pop
or
add
inc
inc
push
pop
ror
push
push
shr
push
call
pop
shl
and
and
ret
rol
inc
inc
push
add
or
call
inc
ret
mov
rcl
rol
push
inc
and
push
call
pop
and
and
rcl
push
push
push
push
ret
or
rol
inc
shl
rol
and
or
and
sar
push
mov
push
mov
ror
mov
and
call
mov
add
push
inc
mov
inc
mov
rol
inc
add
inc
shl
call
dec
add
inc
ret
rol
push
add
or
ret
inc
rol
rol
and
inc
inc
mov
or
and
rol
ror
push
and
and
and
call
sar
and
and
rol
inc
inc
and
and
mov
add
pop
inc
rcr
rcl
and
call
or
inc
mov
inc
shl
inc
call
call
call
pop
add
push
call
mov
push
rcl
and
push
and
inc
or
push
call
dec
pop
push
add
push
shl
push
ret
pop
push
push
push
inc
add
and
and
ret
inc
ret
and
ret
call
add
and
and
call
rcl
and
pop
rcr
pop
inc
and
rol
call
and
add
ret
push
mov
ror
or
push
mov
sub
mov
mov
push
call
xor
push
push
push
push
push
push
call
push
push
call
mov
lea
push
push
mov
push
mov
mov
add
call
push
call
xor
cmp
je
mov
mov
pop
ret
and
mov
add
ret
push
mov
call
inc
dec
mov
pop
ret
mov
mov
and
add
mov
add
inc
add
ret
mov
mov
add
add
mov
sub
mov
add
mov
sub
xor
mov
ret
inc
inc
mov
cmp
jne
ret
dec
mov
mov
xor
inc
mov
inc
inc
dec
jne
dec
ret
mov
mov
add
push
push
call
ret
add
mov
add
add
mov
add
movzx
sub
mov
lea
mov
mov
ret
and
and
ret
and
and
push
add
and
and
rcr
call
inc
push
push
inc
ret
pop
push
ret
inc
pop
rol
push
push
pop
rcl
or
and
ror
push
and
inc
push
push
inc
and
shl
ret
and
or
push
add
and
pop
add
shl
mov
shl
ror
inc
inc
and
push
rol
call
or
ret
add
ret
inc
call
pop
mov
or
call
pop
call
mov
mov
or
pop
inc
and
push
pop
call
mov
inc
and
or
inc
mov
ret
ret
and
inc
mov
shl
or
add
add
inc
and
inc
and
add
rol
and
and
mov
pop
push
pop
add
push
inc
call
and
rcr
push
pop
rol
push
dec
(bad)
call
push
push
mov
push
call
shl
rol
and
push
rol
call
add
call
sar
mov
inc
inc
(bad)
call
inc
add
pop
inc
push
push
rol
and
push
add
or
push
mov
pop
and
inc
mov
rol
inc
inc
inc
and
inc
call
push
inc
call
or
and
rol
inc
inc
call
ret
call
mov
inc
ret
push
pop
inc
dec
push
ret
push
call
push
push
inc
and
inc
add
pop
pop
and
inc
and
push
pop
(bad)
call
sbb
shl
xor
rcl
jo
fcmovne
xor
mov
mov
pop
jmp
or
call
call
inc
inc
jmp
mov
push
inc
mov
add
mov
pop
mov
and
inc
mov
push
push
add
inc
push
push
jmp
mov
ret
pop
push
push
and
and
call
or
call
inc
call
pop
push
or
push
or
push
push
sar
shl
rcl
rol
mov
or
or
pop
or
mov
and
add
push
add
and
inc
and
push
push
push
rcl
and
or
push
mov
pop
push
and
push
and
rol
inc
rcl
and
push
and
ret
sar
or
inc
and
inc
add
inc
inc
pop
mov
and
and
inc
inc
inc
or
push
call
add
inc
add
pop
mov
ret
or
and
mov
inc
rol
and
shr
inc
call
push
add
ror
push
call
add
and
rol
call
inc
shl
or
ret
and
or
inc
ror
ror
or
inc
push
ret
ror
or
or
rol
ret
rol
push
shr
call
rol
pop
inc
add
inc
pop
and
and
ret
call
pop
and
call
add
inc
inc
inc
rol
ret
inc
push
mov
and
mov
or
mov
call
rol
ret
inc
or
push
add
rol
call
push
push
push
call
or
push
mov
and
inc
inc
and
call
inc
inc
and
ror
pop
ret
call
inc
and
shl
push
call
inc
call
inc
shl
add
or
or
and
jmp
and
mov
ret
rol
inc
push
rol
rol
jmp
and
inc
add
push
pop
inc
and
ret
inc
or
rol
or
push
ror
pop
and
and
shl
push
inc
and
mov
add
pop
add
push
push
inc
pop
push
pop
inc
inc
pop
inc
push
mov
and
and
and
rol
inc
and
inc
or
and
inc
pop
and
push
call
and
shl
call
and
inc
ret
add
mov
shr
and
mov
inc
push
inc
and
push
call
inc
sar
add
ret
and
add
add
inc
rcr
ret
call
(bad)
call
jmp
and
ror
ret
call
pop
and
inc
inc
and
inc
add
and
rol
and
pop
pop
ret
inc
and
add
push
call
add
call
rcr
and
mov
add
mov
mov
call
mov
add
push
push
inc
push
rol
pop
or
mov
mov
push
mov
sub
mov
dec
mov
call
sub
mov
dec
cmp
jne
inc
cmp
jne
push
call
inc
push
push
inc
cmp
jne
call
xor
mov
mov
dec
call
dec
mov
xor
mov
mov
add
call
cmp
jne
call
test
je
inc
inc
inc
inc
inc
mov
mov
cmp
jb
mov
mov
cmp
jae
call
add
jmp
xor
pop
pop
pop
mov
pop
ret
mov
mov
ret
pop
push
and
or
inc
rol
pop
mov
mov
rcl
rcl
ror
push
ret
ret
inc
inc
rol
ret
and
push
add
and
(bad)
call
push
inc
inc
inc
ror
ret
inc
ror
push
add
and
and
rol
rol
inc
pop
ror
inc
and
and
or
and
call
mov
call
inc
or
push
pop
shr
push
ret
mov
call
call
ret
and
and
add
mov
add
and
mov
ret
inc
rol
inc
mov
pop
and
inc
push
add
push
push
rol
ret
pop
call
ret
rol
rcl
inc
inc
call
inc
add
ret
or
inc
pop
shl
mov
inc
push
mov
push
xor
push
mov
mov
mov
call
cmp
jne
or
je
inc
inc
jmp
xor
inc
pop
pop
mov
pop
ret
ret
shr
inc
inc
and
push
or
push
inc
jmp
inc
inc
or
mov
ret
call
ret
call
or
inc
or
add
inc
rcl
push
inc
and
pop
inc
pop
push
push
pop
pop
inc
pop
dec
push
and
add
or
and
and
or
add
and
and
add
and
ret
inc
inc
push
pop
call
sar
or
call
and
mov
rol
or
and
inc
push
inc
and
inc
mov
add
mov
and
pop
and
add
and
pop
and
ret
mov
mov
inc
dec
mov
inc
ret
mov
mov
mov
mov
lea
call
inc
push
mov
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
sbb
ins
push
loope
sub
jmp
push
adc
ins
ja
gs
mov
mov
lods
inc
cmp
addr16
mov
mov
mov
mov
mov
pop
cmps
lods
loopne
pop
adc
lods
sub
shl
mov
mov
(bad)
pop
xor
inc
ss
inc
inc
xchg
movs
mov
mov
mov
mov
or
jb
jno
mov
mov
adc
xor
pusha
jne
push
inc
cmps
scas
cmps
lods
sbb
mov
and
sbb
addr16
mov
shr
js
mov
mov
pop
push
push
cmps
fs
scas
movs
add
cmp
push
scas
jle
pusha
push
shl
mov
mov
adc
pop
pop
push
mov
jno
lods
mov
mov
mov
rcl
lods
test
mov
mov
xor
cmps
ins
inc
cmps
scas
test
cmp
scas
lods
inc
xor
jp
mov
addr16
mov
lods
pop
btc
jle
pusha
popa
shr
mov
mov
mov
lods
outs
xor
test
jns
mov
fwait
push
adc
call
xor
inc
mov
or
mov
pop
inc
cmps
push
popa
mov
mov
cmps
addr16
xchg
xor
cmps
jo
mov
adc
enter
xor
mov
mov
sbb
mov
cmp
aas
mov
sbb
iret
or
aam
out
aam
shl
add
ss
push
sbb
call
ss
jmp
stos
dec
(bad)
in
in
xchg
pusha
sub
nop
mov
jne
xor
adc
mov
cmp
rcl
mov
mov
pop
fcomp
add
add
and
xchg
dec
aas
push
iret
aam
shl
loop
inc
into
xlat
jmp
mov
pop
fdiv
inc
pop
rcr
gs
dec
xchg
adc
mov
or
xchg
pop
in
mov
jecxz
xor
or
cmp
ret
rcl
jmp
xor
pop
push
mov
jmp
pop
xchg
test
jno
leave
mov
in
inc
stos
xor
inc
sbb
fdiv
inc
pop
ror
ret
rcl
and
dec
enter
push
sbb
mov
xchg
sub
dec
clc
sahf
and
and
cwde
pop
mov
mov
or
and
shl
inc
movs
and
in
sahf
call
dec
xchg
or
ror
sub
movs
popa
fisubr
fs
and
add
fcomp
sub
pop
pop
aam
test
jmp
jp
mov
xor
stos
rol
xor
cmovl
ret
stc
xor
mov
lea
popa
rol
cmps
add
inc
and
loopne
shl
xor
xchg
inc
test
jecxz
shl
mov
(bad)
mov
or
jno
jmp
jmp
stos
dec
jb
mov
push
mov
add
fcmovne
jns
push
adc
loopne
push
shl
dec
mov
scas
and
cld
push
pop
adc
sub
jl
add
cli
(bad)
or
adc
shl
pop
retf
cmps
adc
pop
ficomp
retf
movs
inc
stos
sbb
popf
stos
clc
sahf
adc
fcomp
jno
jmp
sub
gs
jmp
iret
or
mov
xor
shl
pop
retf
cmps
adc
pop
ficomp
retf
movs
inc
stos
pop
ja
lock
mov
sbb
fcomp
pop
adc
fcmovnu
inc
cmp
xchg
stc
xor
mov
mov
movs
popa
into
sub
add
jae
xor
pop
stos
pop
out
fcmovnbe
push
sahf
push
xor
rol
xor
mov
mov
js
jmp
mov
xchg
jmp
or
gs
push
sub
mov
aam
(bad)
in
(bad)
shl
xor
nop
test
mov
dec
rcl
add
mov
rcl
jae
push
pushf
xchg
mov
or
mov
mov
mov
mov
sub
mov
enter
mov
invd
mov
rcl
stc
xor
mov
mov
inc
leave
xchg
mov
rcl
and
lea
enter
inc
fld
sub
out
(bad)
mov
or
pop
sbb
ret
rcl
es
sahf
jno
rcr
adc
repz
xchg
ror
add
sbb
sbb
xor
aas
sub
and
shl
inc
movs
and
in
sahf
call
dec
xchg
pop
inc
mov
mov
shr
lods
and
and
xchg
xchg
sub
les
and
lock
call
jne
icebp
jae
pop
or
push
call
push
cmp
(bad)
and
add
pop
adc
shl
shr
enter
ror
cmps
jmp
sub
lods
xchg
xchg
enter
push
pop
loop
leave
cmps
ret
jno
push
and
sbb
pop
jle
sub
enter
bound
pop
fisub
shl
mov
(bad)
mov
pop
fcomp
pop
cdq
mov
xchg
daa
and
pop
ficomp
inc
out
fisttp
inc
test
fs
es
mov
call
ds
sti
xchg
xchg
bound
ss
fcomp
pop
dec
mov
sub
push
rcl
pop
push
test
cmp
jle
jno
mov
pop
stos
mov
mov
js
sbb
push
push
xor
stos
lods
push
sub
arpl
dec
push
cmps
movs
mov
mov
lods
imul
push
mov
pop
lods
scas
cld
ret
jo
mov
push
jae
sub
pop
std
push
pop
ret
out
mov
mov
bnd
jno
cmps
inc
push
mov
sbb
out
xor
jb
mov
stos
mov
lods
out
and
(bad)
inc
fsubr
sub
xlat
fwait
pop
push
sbb
push
ja
loop
(bad)
dec
icebp
stos
fwait
sahf
push
retf
ins
pop
sbb
inc
mov
ret
call
or
inc
and
ret
inc
inc
mov
rol
call
call
inc
and
pop
rcl
or
ror
push
and
push
add
pop
rcl
push
inc
mov
or
mov
shr
add
call
add
and
rol
and
pop
call
push
push
call
pop
push
inc
and
dec
inc
push
inc
push
rcl
inc
pop
push
sar
inc
call
rol
rol
inc
mov
call
add
mov
mov
and
push
push
rol
push
push
call
add
add
ret
mov
inc
and
call
inc
rol
ror
and
rol
pop
sar
shl
add
call
and
and
inc
rol
mov
inc
xor
inc
call
ret
push
push
push
mov
call
test
je
dec
jne
pop
pop
pop
ret
pop
sub
push
jmp
nop
push
push
add
and
pop
or
or
and
rol
pop
or
rcl
dec
and
push
inc
inc
mov
push
add
and
inc
inc
inc
call
inc
add
or
rcl
ret
or
and
rol
add
pop
(bad)
call
call
inc
call
ret
and
ror
inc
and
push
ret
call
call
rol
and
ret
ror
push
add
and
jmp
call
and
inc
or
inc
ret
or
add
inc
and
inc
push
push
or
push
mov
push
and
dec
ror
and
inc
add
mov
inc
ret
push
mov
sub
mov
mov
push
call
xor
push
push
push
push
push
push
call
push
push
call
push
mov
mov
push
mov
mov
add
call
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
je
mov
sub
mov
mov
push
push
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
call
call
mov
cmp
jne
push
call
mov
lea
push
call
mov
sub
sar
push
push
call
add
mov
sub
sar
push
push
call
add
mov
and
je
movzx
mov
jmp
mov
mov
push
mov
push
push
push
call
push
call
mov
mov
push
mov
push
call
add
mov
push
call
add
mov
sub
sar
push
push
call
add
mov
sub
sar
push
push
call
add
call
mov
push
call
mov
pop
ret
push
mov
push
mov
jmp
mov
add
mov
mov
cmp
jae
mov
mov
cmp
je
mov
mov
mov
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
cmp
jbe
mov
sub
mov
mov
mov
mov
call
cmp
jne
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
pop
ret
