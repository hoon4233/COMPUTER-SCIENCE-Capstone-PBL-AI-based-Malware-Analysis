mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
stc
stos
inc
outs
sar
shr
pusha
stos
mov
ins
jbe
xor
xchg
cmp
mov
mov
cmp
xchg
or
frstor
push
mov
ss
shr
mov
mov
shr
retf
inc
mov
clc
outs
sub
push
adc
xor
cmps
and
dec
div
ins
mov
add
fadd
adc
ret
cmp
mov
mov
sub
add
mov
dec
push
push
push
movs
mov
inc
dec
pop
or
ror
gs
dec
pop
(bad)
mov
or
inc
xor
ins
jo
cmp
or
jo
or
data16
xchg
fcomp
jge
jmp
jmp
mov
dec
or
aas
ret
cmp
xchg
cmp
jmp
nop
sbb
das
in
sub
mov
popa
aas
mov
cdq
xchg
add
sub
lock
fdiv
cdq
xor
cs
cmp
leave
clc
mov
movs
gs
lods
pop
push
pop
rcl
test
and
dec
movs
jbe
mov
push
push
mov
cli
xchg
jbe
adc
sbb
inc
retf
rcr
test
imul
retf
mov
ret
sub
add
out
imul
cli
xchg
fs
mov
pop
arpl
mov
sbb
es
inc
jb
in
ins
xchg
jmp
and
jns
push
lock
cmp
xchg
and
lock
inc
jo
or
push
popf
icebp
pop
push
in
out
ret
movs
std
enter
mov
jns
dec
stos
jecxz
fcmovne
or
gs
out
fxch
lock
out
and
lods
push
inc
icebp
add
movd
xor
xor
fidiv
jb
and
and
sbb
iret
mov
outs
jno
stos
mov
rol
pop
repnz
aam
out
dec
xchg
pop
pop
jmp
stc
push
inc
mov
enter
retf
mov
adc
(bad)
mul
xchg
or
jge
repz
push
shl
pop
mov
or
sbb
sub
cs
xor
leave
imul
add
xchg
popf
loop
(bad)
retf
scas
jmp
lahf
push
sahf
mov
clc
emms
int
inc
cwde
enter
mov
cmp
inc
inc
mov
push
xor
mov
push
push
sub
xor
loop
icebp
or
or
sbb
(bad)
(bad)
cs
js
leave
mov
mov
xchg
push
sbb
pop
aas
cmps
push
std
pop
adc
fchs
add
xor
push
xchg
sub
fidiv
and
mov
mov
jne
xchg
das
fld
cmc
xchg
fbstp
inc
mov
int
test
mov
cmp
ss
push
xor
(bad)
cmps
sub
lock
rcl
fldenv
inc
fs
and
cmc
inc
mov
or
fdivrp
out
cli
and
imul
mov
mov
mov
cs
iret
ret
fsub
add
aas
sub
out
push
call
or
lahf
mov
(bad)
scas
retf
nop
sahf
mov
in
pop
xor
repz
shl
push
lds
or
inc
and
inc
retf
adc
fcom
jecxz
cld
jae
mov
dec
movs
sbb
mov
cmp
stos
xor
stos
loopne
lock
mov
outs
cmp
pop
js
push
pop
sbb
addr16
add
pop
sahf
and
and
retf
mov
sub
repz
or
mov
xor
out
(bad)
call
rcl
xlat
pop
mov
cmp
add
or
mov
ret
stos
and
sbb
add
or
mov
and
mov
in
mov
xchg
cld
cmps
cmps
pop
cmc
cli
idiv
pusha
jno
pop
jmp
iret
call
stos
ficom
mov
mov
outs
idiv
dec
sbb
jmp
icebp
test
fwait
push
mov
sbb
mov
fidivr
scas
xchg
sub
lock
dec
sbb
xor
pop
(bad)
sub
mov
mov
test
hlt
idiv
jmp
fadd
or
imul
dec
sbb
jl
daa
add
inc
xor
outs
mov
cs
push
das
pusha
dec
inc
mov
imul
cmp
cmp
xor
popf
mov
and
arpl
lods
hlt
in
lea
loopne
add
cs
jae
cdq
cmc
add
dec
cmp
pop
pop
scas
mov
jge
arpl
lods
int3
lods
mov
sbb
dec
sub
mov
int
jb
out
pop
xchg
std
cld
cmps
mov
pushf
mov
hlt
cmp
mov
push
enter
pop
mov
mov
add
jge
frstor
mov
add
mov
cmp
fcmove
xchg
out
test
sbb
sbb
loop
sbb
test
shl
xchg
add
or
arpl
mov
int
push
inc
aad
mov
xchg
add
xchg
sbb
push
lds
out
jne
xchg
mov
mov
adc
jg
adc
movs
repnz
xchg
fnsave
sar
aad
jno
push
xor
xlat
push
js
loope
aam
sub
clc
pop
mov
inc
jmp
dec
mov
xor
mov
xchg
mov
(bad)
imul
int
sbb
mov
adc
xor
leave
pop
loope
sbb
popa
lock
cld
xor
in
or
xchg
dec
(bad)
retf
or
aaa
mov
xor
push
mov
or
or
adc
jg
into
scas
cmp
dec
sti
adc
add
mov
xchg
pop
jns
jg
sub
iret
lea
lahf
movs
lock
lods
mov
inc
shl
sbb
sti
scas
adc
pop
adc
jmp
out
mov
retf
std
shl
leave
and
push
fs
addr16
jo
imul
or
dec
xchg
retf
outs
scas
cwde
push
fwait
mov
(bad)
adc
sbb
xor
stc
call
pop
ja
jmp
jge
dec
dec
mov
xchg
lds
ds
ds
pop
dec
in
or
leave
out
arpl
mov
pushf
out
mov
bound
jo
push
int3
push
pushf
jp
test
push
test
mov
jmp
mov
dec
xor
fisttp
jl
sub
mov
popa
pop
xor
add
not
pushf
jl
(bad)
cs
mov
call
inc
xchg
adc
add
cmp
mov
fwait
or
rol
fisttp
std
sahf
push
or
(bad)
mov
or
cwde
or
and
mov
movs
call
cmp
sbb
and
inc
shl
dec
add
mov
push
jae
mov
cmp
pop
std
push
arpl
xchg
and
ja
push
loope
sub
ds
pop
(bad)
push
jle
daa
dec
(bad)
xor
call
xchg
(bad)
dec
adc
aam
push
cmp
dec
push
out
fisttp
mov
sub
mov
movs
gs
push
inc
retf
xchg
fsubr
in
ins
dec
push
outs
ret
je
mov
dec
sti
pop
sub
push
mov
imul
data16
xchg
add
pop
inc
xor
inc
stos
sub
mov
repz
arpl
push
adc
xor
sub
rcr
pop
call
and
sub
xor
pop
(bad)
iret
ror
fldenv
mov
or
mov
cmp
jmp
jg
icebp
sbb
xor
ins
xlat
mov
retf
dec
pop
ja
sub
xor
xchg
sbb
gs
call
inc
test
pop
add
jmp
stc
fcomp
test
or
xlat
jo
fwait
int
bound
push
movs
sbb
jmp
test
or
xor
adc
lods
retf
cmc
cmp
push
pcmpgtd
cdq
inc
pop
psrad
xlat
dec
mov
aad
pop
sub
daa
mov
xlat
push
pop
mov
fcom
or
aad
movs
dec
sbb
xchg
sbb
movs
retf
jmp
xor
out
sbb
xchg
inc
adc
call
(bad)
(bad)
loope
fisttp
repz
dec
shl
iret
or
aad
cs
sub
ret
add
movs
es
(bad)
sub
fnstenv
fiadd
sub
sub
movs
cli
pop
cmp
icebp
dec
ficomp
les
xor
mov
das
lock
into
xor
xchg
and
call
pop
mov
in
pop
inc
sub
leave
add
jmp
test
test
out
ret
movs
jl
je
add
jno
fidiv
adc
sub
mov
stc
adc
outs
in
push
gs
mov
mov
pusha
add
jg
movs
lahf
in
or
adc
test
cli
push
adc
mov
stc
xchg
jae
jge
psubw
inc
in
sub
add
xchg
or
add
loope
jl
and
jb
fcmovnb
pushf
push
xchg
cld
and
xchg
pop
jns
popw
(bad)
scas
xor
add
test
dec
mov
sub
(bad)
xor
jmp
mov
das
aad
lahf
mov
mov
jmp
ja
(bad)
aaa
fs
xchg
sbb
or
mov
scas
in
enter
mov
loop
inc
inc
mov
or
outs
xchg
xrelease
or
outs
adc
mov
mov
or
mov
les
and
pop
fistp
adc
xchg
fisubr
xchg
into
cs
rcr
ret
jmp
loope
mov
mov
push
ret
(bad)
in
fst
test
outs
sbb
mov
jp
test
push
pop
jo
aad
int
xchg
inc
mov
loop
pushf
dec
jnp
push
ret
jmp
sbb
push
xchg
jne
jb
and
mov
cmp
mov
mov
lods
pop
call
clc
mov
push
adc
dec
aaa
dec
push
fs
dec
cmps
repnz
xor
or
test
movs
clc
inc
jge
neg
mov
(bad)
sub
cmp
je
pusha
inc
mov
jp
icebp
cmc
add
fild
ja
pop
sbb
in
push
adc
lods
pop
xchg
mov
(bad)
inc
iret
sbb
xchg
sub
xchg
dec
inc
mov
push
xor
arpl
sub
lods
enter
aaa
xor
inc
xchg
sbb
jmp
sahf
faddp
jbe
imul
xlat
(bad)
xchg
jg
daa
cmp
int
call
mov
hlt
jo
loop
xchg
add
jp
sub
sbb
sub
es
xlat
retf
xor
dec
lods
xor
cmps
push
mov
enter
test
inc
cmp
sbb
not
in
mov
test
ins
jle
or
cmp
mov
mov
fdiv
or
push
jns
xchg
test
out
ds
push
add
dec
sbb
mov
and
adc
jnp
test
out
mov
mov
ins
mov
aam
pop
mov
stos
pusha
into
mov
mov
xchg
call
out
sub
push
mov
ficom
adc
jmp
ins
mov
inc
inc
xlat
imul
lahf
inc
fmul
pop
jo
sbb
jns
fmul
mov
mov
das
adc
(bad)
clc
mov
mov
and
into
imul
scas
jp
fcom
mov
retf
pop
pop
pop
retf
sahf
dec
lods
xchg
js
mov
sub
movs
outs
sbb
xor
adc
mov
fwait
adc
jno
bound
out
pop
dec
out
not
fisubr
xlat
dec
movs
aam
xor
retf
jae
dec
mov
sub
or
mov
rcr
stc
ins
pop
sub
ret
mov
cwde
mov
enter
jg
mov
in
pop
push
pop
sub
push
jecxz
xor
int
dec
push
jb
int3
cmp
into
sbb
xor
shr
and
mov
stos
test
mov
out
clc
popf
das
mov
or
jl
enter
jge
cmps
pop
jno
hlt
mov
int3
push
mov
popf
idiv
mov
jae
cs
out
rol
xchg
retf
out
jmp
dec
jae
push
rol
inc
int3
lock
lahf
sbb
jle
in
in
dec
jns
test
sbb
nop
jno
(bad)
loope
adc
or
outs
or
es
leave
mov
test
out
add
mov
mov
(bad)
cld
push
repnz
test
cmp
stos
xchg
or
fsubp
in
jmp
xchg
or
pop
arpl
dec
push
jno
jge
shl
push
scas
jne
push
add
inc
jg
xor
adc
mov
fisubr
jmp
sub
pop
mov
stos
push
push
leave
adc
inc
lahf
mov
sub
jmp
xor
out
sahf
je
test
cmps
dec
push
sub
or
xchg
aaa
push
ss
cmp
cmp
inc
imul
jb
xchg
mov
test
add
out
shl
cmc
mov
fmul
stc
inc
in
mov
in
push
sub
xchg
data16
mov
rol
inc
jg
fstp
xchg
shl
fsubrp
out
iret
dec
cld
push
push
inc
test
unpckhps
lods
jmp
dec
scas
cmps
xchg
cmp
push
sbb
mov
jb
cmp
add
xor
push
stos
test
dec
fwait
stc
out
jmp
sbb
inc
cmp
aad
xor
fidiv
lahf
(bad)
retf
cmp
xlat
cmps
icebp
inc
push
pusha
test
(bad)
dec
jge
fcomp
add
or
inc
test
pop
in
iret
clc
aaa
dec
lock
mov
jmp
out
sahf
ja
push
and
int3
outs
hlt
gs
fidiv
clc
mov
xchg
push
cmp
imul
pop
fwait
xor
in
add
mov
pushf
lods
push
sub
inc
clc
test
mov
cmp
inc
repz
je
loopne
stos
mov
cld
(bad)
push
or
aaa
add
cmps
jnp
retf
movs
xor
out
into
jl
adc
shl
std
pop
pop
inc
mov
xchg
ins
jmp
out
lods
jmp
icebp
nop
xchg
pop
retf
cmp
inc
adc
or
cmp
outs
pushf
into
(bad)
ret
call
push
pop
add
cmps
pop
xchg
inc
aad
add
add
or
jmp
xor
sar
cmp
xchg
mov
icebp
push
sbb
movs
ret
addr16
push
fstp
jae
hlt
clc
in
sub
shr
push
(bad)
sub
xchg
push
or
lods
movs
das
ret
pop
dec
movs
cmp
cmp
mov
out
push
mov
xor
repz
add
psubsw
or
add
sahf
aas
loop
arpl
bound
retf
lock
je
lds
enter
lock
lds
sbb
cwde
lea
imul
sub
shl
xchg
bound
or
(bad)
dec
popa
or
xchg
adc
shl
xor
lds
add
das
retf
out
mov
jne
jge
cmc
or
jns
cmp
jecxz
test
mov
addr16
inc
push
jle
jne
das
dec
and
push
ret
int3
mov
in
xor
push
mov
scas
add
add
fwait
add
mov
mov
je
aas
mov
std
add
or
pushf
std
mov
jmp
nop
push
jno
(bad)
mov
in
adc
xor
into
mov
jmp
pop
xchg
mov
mov
pop
cdq
mov
pusha
jmp
and
dec
add
pop
ins
cmp
inc
push
sbb
sub
xchg
push
loopne
jnp
push
shr
ins
xchg
xor
mov
pop
psubq
je
pusha
into
imul
adc
push
xchg
imul
mov
mov
add
loope
push
jl
test
aad
je
arpl
test
(bad)
push
and
jns
ret
inc
retf
fwait
push
push
xchg
add
cwde
mov
jne
sbb
sub
mov
jg
sub
add
sar
rcr
xor
add
int
pop
or
adc
xor
test
mov
inc
mov
aas
inc
or
jl
ror
ror
xor
stc
lods
pusha
mov
int
sub
mov
loop
test
or
into
push
push
dec
cmp
es
mov
popf
sbb
adc
inc
imul
clc
bound
jne
inc
std
loopne
std
les
cmp
loop
xchg
ret
pop
test
std
push
jns
xor
push
mov
test
bound
pop
repz
fcomi
call
cmps
add
and
fcomip
data16
adc
jmp
shr
imul
and
in
adc
cmp
les
push
arpl
push
pop
call
cmp
rcl
mulps
shl
mov
fwait
mov
not
lds
fidiv
sub
cmc
nop
and
cs
enter
mov
mov
out
jmp
sub
fisubr
push
int3
adc
mov
mov
sub
and
repnz
and
in
add
cmc
or
(bad)
js
jb
xchg
mov
jmp
pop
xchg
add
mov
xlat
xchg
jp
lds
(bad)
jmp
add
in
pop
aad
push
mov
shr
fdiv
mov
push
out
stc
(bad)
arpl
daa
inc
add
or
and
inc
iret
cmp
or
push
xchg
pushf
loop
lods
mov
int3
mov
shr
inc
fs
adc
adc
jl
jg
out
xchg
adc
xchg
daa
rcl
mov
js
mov
xor
inc
mov
sub
fsub
out
or
jg
mov
sub
jne
cmp
dec
mov
adc
or
xor
or
sub
pop
fnsetpm(287
pop
sti
imul
mov
pop
out
sbb
pop
lods
or
data16
sbb
add
jo
pop
(bad)
(bad)
pop
pop
shl
mov
jg
pop
xchg
call
mov
ja
ja
fwait
adc
pop
or
or
fstp
out
bnd
pop
adc
mov
mov
sbb
call
hlt
push
adc
sub
mov
lahf
shr
sub
clc
mov
inc
cmc
adc
push
push
mov
shl
and
and
lea
add
movs
xchg
call
inc
aaa
outs
or
repnz
out
add
stc
imul
retf
xor
jge
xchg
out
ret
sahf
das
scas
ror
and
sbb
out
xchg
and
shl
inc
mov
popa
mov
fsub
inc
stos
repnz
cli
dec
js
jbe
inc
or
xchg
shl
ds
sbb
jle
mov
xchg
lds
xchg
pop
icebp
sub
neg
add
mov
lfence
bnd
inc
cs
repnz
popa
cmp
out
pop
ret
sbb
sbb
xchg
nop
movs
xlat
iret
movs
dec
cdq
xlat
sub
push
add
repnz
add
into
sbb
push
(bad)
dec
xor
loopne
sub
pop
inc
inc
icebp
cs
cmp
push
mov
dec
sar
int3
push
enter
sbb
jl
popf
hlt
add
shl
xlat
cld
inc
mov
push
ret
ss
lahf
ins
or
xor
mov
sub
stc
cld
cmp
add
dec
xor
mov
sub
inc
aad
cmp
lds
scas
cmp
dec
ret
(bad)
jmp
pop
mov
fwait
idiv
out
ss
dec
fst
cmp
fs
mov
inc
cmp
cmp
jmp
jmp
add
sub
mov
or
sub
daa
mov
sbb
add
push
adc
adc
mov
inc
rcr
push
adc
fldenv
aad
iret
jge
or
jo
pop
stos
push
push
dec
xchg
xor
cmp
in
push
icebp
jl
(bad)
daa
ds
in
mov
pop
out
outs
pop
fadd
std
mov
sub
ret
ds
sub
and
fdiv
mov
sahf
lock
shl
adc
(bad)
mov
dec
jno
jecxz
leave
push
sbb
shl
cli
lods
fnstenv
std
adc
add
sub
xor
ret
adc
and
ror
and
out
(bad)
jmp
sbb
push
inc
or
test
loope
mov
xor
mov
ins
fbld
data16
dec
push
int3
aam
mov
jg
call
adc
sbb
mov
jne
adc
jge
sub
mov
mov
test
data16
pop
inc
daa
cmp
sub
and
add
and
and
outs
inc
pusha
addr16
icebp
xor
push
sbb
enter
xor
ins
push
pop
dec
cmc
loopne
jge
aaa
lea
push
pusha
icebp
clc
dec
loop
push
mov
jl
int
(bad)
or
cdq
mov
(bad)
jbe
hlt
shl
mov
pop
sbb
push
fst
das
stos
rcr
imul
inc
mov
push
iret
inc
ficom
ins
ret
xchg
in
ret
push
iret
mov
lea
bound
cmp
or
fdiv
xchg
push
mov
add
sub
mov
fwait
jno
pop
dec
pusha
sub
xchg
and
iret
dec
(bad)
enter
sub
fcom
hlt
jg
outs
out
and
ins
inc
scas
add
push
stos
sbb
fs
push
pop
cpuid
pop
and
cmps
aas
mov
nop
or
sahf
test
aaa
sbb
fidivr
push
ins
dec
sbb
stos
adc
hlt
or
pop
mov
mov
push
(bad)
cwde
jl
popf
xor
cmp
or
stos
add
dec
push
add
ret
aas
pop
fcmovbe
out
cmp
mov
mov
pusha
jg
jb
int
or
mov
dec
push
mov
cli
mov
sbb
(bad)
stos
(bad)
test
xchg
inc
repz
jecxz
or
sar
retf
push
cdq
cmc
retf
popf
add
retf
mov
jno
cmp
int3
scas
mov
in
xchg
retf
xchg
push
pusha
add
xchg
pusha
(bad)
out
sbb
fs
or
jmp
mov
sub
je
(bad)
xchg
out
neg
sbb
clc
or
retf
stos
stc
add
test
cmp
pop
sbb
sti
movs
push
das
movs
test
mov
rcl
lahf
jbe
movs
cdq
sub
mov
xor
pop
scas
(bad)
sub
test
jmp
pusha
dec
pop
movs
inc
pop
inc
pop
fsub
lods
aad
push
out
add
sar
inc
jns
sub
cmp
cmps
xor
inc
cmps
test
cmps
out
call
xchg
pop
dec
and
mov
mov
pop
add
(bad)
push
xchg
jno
test
jmp
jbe
pop
lock
pusha
pop
and
dec
jl
mov
pop
imul
mov
pop
das
stos
dec
add
das
fadd
add
loope
xor
jb
sub
mov
mov
push
push
add
loopne
aaa
inc
pop
pop
adc
sbb
(bad)
(bad)
sbb
jo
shr
xchg
pop
retf
ins
ja
adc
xchg
push
ret
add
jp
mov
and
jo
or
sbb
nop
sub
hlt
mov
loope
loope
popf
call
(bad)
daa
retf
sub
movs
and
fcomp
rcl
(bad)
fisttp
popf
xchg
shl
bound
retf
lahf
or
leave
and
cmp
outs
leave
add
mov
mov
mov
repz
push
cmp
and
and
ss
int
mov
pusha
xor
mov
cmps
cmc
sub
ret
out
dec
pop
fwait
cmp
push
es
push
mov
xor
sar
add
cmp
fucomp
jle
icebp
sbb
ret
dec
and
stc
jg
add
inc
sub
clc
or
fisttp
dec
mov
jge
stos
xchg
push
daa
sar
and
and
dec
dec
loopne
sbb
enter
stos
ret
or
mov
jge
ret
push
add
adc
popa
mov
jbe
imul
xchg
cmc
mov
loopne
jnp
adc
and
add
jns
cdq
pop
dec
dec
adc
cbw
xor
inc
ret
shr
pop
mov
or
and
add
mov
test
add
push
retf
and
arpl
popa
addr16
dec
(bad)
sahf
cmps
lods
add
xchg
outs
inc
loope
pop
cmp
pop
(bad)
adc
pop
or
jne
mov
fiadd
xchg
ficomp
loopne
shl
jecxz
pop
movs
(bad)
fisub
dec
arpl
mov
retf
inc
arpl
cmps
jl
pop
pop
dec
mov
jg
jp
shr
push
imul
xchg
pop
mov
or
das
sti
push
test
jl
xchg
rep
fsub
or
(bad)
lds
ror
int
(bad)
xor
push
xchg
hlt
mov
pop
xchg
loope
or
adc
cmps
daa
or
rol
adc
cmp
inc
test
fnstcw
add
xchg
dec
mov
sub
cwde
fs
push
xor
and
and
ret
out
movs
push
and
sbb
mov
xchg
lea
rcl
pop
sbb
lods
lahf
sub
(bad)
fisub
sub
into
int
jmp
dec
aas
inc
inc
mov
mov
mov
adc
cmp
or
xchg
mov
mov
mov
xor
(bad)
fsubr
jno
mov
adc
mov
fstp
mov
std
lds
jne
in
sbb
or
call
mov
mov
add
dec
movs
test
xchg
adc
popa
inc
pop
dec
and
xchg
lea
push
jle
fwait
cs
iret
arpl
pop
out
mov
rcr
jmp
cmp
jo
shl
std
rcl
or
sub
ins
getsec
mov
add
pop
xor
cmp
sbb
inc
icebp
dec
jp
dec
imul
xor
mov
jo
cdq
js
add
xor
sbb
jmp
jno
sbb
sahf
pusha
imul
test
inc
jns
(bad)
adc
jne
pop
dec
pop
adc
rcl
adc
jmp
add
out
xchg
aas
push
aaa
or
dec
jle
jnp
js
pop
js
sar
call
fisttp
cmp
lock
loopne
add
xor
imul
mov
or
hlt
lahf
lods
hlt
repnz
mov
in
push
lea
xor
je
mov
pop
mov
in
xor
je
into
mov
xchg
lock
jge
(bad)
(bad)
retf
scas
test
lds
shl
pop
les
dec
lahf
rcl
aaa
pop
mov
add
mov
imul
pop
and
ss
dec
scas
mov
fadd
jae
mov
inc
xchg
lahf
retf
inc
movs
xor
dec
mov
in
sbb
push
cs
(bad)
outs
sbb
mov
xchg
sar
sbb
mov
inc
jl
pop
outs
inc
sbb
xchg
popa
dec
lock
or
repz
xchg
mov
ss
adc
cli
jmp
sub
nop
and
and
pop
sbb
mov
cmp
stc
jmp
retf
or
outs
or
mov
jb
or
jo
je
cmp
inc
popa
inc
fcomp
or
(bad)
adc
mov
mov
ss
or
mov
dec
sbb
cmp
cmp
out
push
mov
add
mov
pop
add
and
sub
jmp
push
dec
sub
aaa
data16
fild
dec
sub
movs
or
popa
and
loopne
add
out
inc
movs
or
mov
hlt
es
inc
mov
call
push
aas
daa
push
xchg
push
xor
addr16
mov
movs
(bad)
in
add
test
fwait
mov
jo
xchg
xor
push
cmp
leave
pop
popf
ds
jae
mov
(bad)
xlat
sar
fcmovb
adc
not
xor
mov
js
push
and
push
fldcw
in
inc
jge
sub
aam
lock
ins
out
and
add
mov
push
sub
jl
inc
rcr
or
test
scas
retf
(bad)
jmp
push
adc
or
mov
mov
add
arpl
jae
inc
fld1
and
dec
not
cmc
aaa
inc
jnp
add
jp
push
or
fdivp
fmul
in
jae
out
cmps
lods
add
cmp
mov
inc
ja
push
mov
xchg
test
inc
retf
ins
pop
and
jae
or
xchg
jl
call
repz
cmp
xchg
ret
repnz
pop
mov
jne
jns
and
fs
aad
sub
imul
jo
dec
adc
add
test
(bad)
mov
imul
stos
lods
cld
cwde
mov
cwde
push
mov
push
pop
mov
cli
(bad)
mov
in
pop
adc
xchg
bound
or
pop
mov
sbb
push
into
cmps
mov
iret
mov
shl
inc
xchg
popf
(bad)
mov
loope
add
push
fld
lahf
push
add
lahf
mov
gs
push
data16
jecxz
pop
xchg
sbb
imul
adc
mov
nop
dec
je
rcr
fisubr
cmp
test
mov
mov
sub
push
(bad)
imul
sub
dec
jno
dec
jns
jmp
test
sub
push
test
and
lahf
scas
or
jbe
adc
mov
jle
push
lods
rcr
sti
daa
(bad)
pop
xor
xor
fwait
movs
inc
sub
xor
mov
sub
dec
sbb
(bad)
adc
(bad)
pop
sbb
mov
cwde
sub
dec
lods
sbb
sub
dec
cld
ret
sub
dec
lods
(bad)
add
and
shl
(bad)
dec
push
in
inc
repz
push
js
in
cmc
xchg
jecxz
ins
iret
jge
inc
dec
icebp
mov
jbe
push
aaa
test
ja
jmp
cmc
inc
cmps
repz
icebp
popf
jecxz
jg
lds
retf
ds
cmp
pop
fisttp
lock
dec
pusha
or
dec
mov
jmp
lahf
add
enter
jmp
scas
(bad)
sbb
inc
aas
pushf
push
cmp
cmp
xchg
mov
lods
int
or
fdiv
sub
push
sbb
inc
dec
lods
js
mov
push
mov
in
push
(bad)
nop
pushf
ja
dec
icebp
ins
push
jmp
jle
mov
aaa
inc
retf
in
or
inc
xchg
test
sti
mov
inc
push
pop
out
aaa
mov
push
lods
pop
mov
inc
dec
mov
leave
jnp
aaa
cmp
and
or
fnstcw
int
inc
cmps
pop
add
fdivr
popf
out
in
nop
bound
cmp
dec
mov
dec
or
ret
ficom
adc
lods
in
sqrtps
stos
shl
cs
adc
pop
shl
ins
retf
repnz
push
pusha
xor
jnp
xchg
push
sbb
jns
adc
stos
cmp
or
cld
jnp
jmp
jecxz
inc
mov
scas
sbb
fwait
and
pop
fdiv
add
leave
cmp
fdivr
fild
(bad)
popf
fidiv
add
popa
xchg
cmps
cld
push
sub
cwde
dec
pop
jge
jae
call
push
add
ror
inc
mov
lahf
mov
pusha
xor
(bad)
(bad)
mov
ins
fisttp
mov
in
sub
push
jbe
inc
cmp
mov
pusha
(bad)
adc
shr
jb
cmp
les
test
iret
popf
push
out
shr
movs
lock
icebp
(bad)
adc
xchg
ret
jmp
and
add
leave
dec
add
jo
inc
and
lea
mov
stos
call
(bad)
call
dec
jge
in
dec
pop
pop
pop
add
jge
(bad)
aas
call
daa
mov
fstp
out
fwait
sbb
jne
cli
dec
stc
pop
xor
or
out
adc
outs
xor
or
hlt
dec
or
(bad)
das
fdiv
loope
shl
dec
out
pushf
xor
fbld
aam
jg
push
inc
mov
xchg
aaa
sub
push
enter
dec
stos
aad
test
inc
push
xchg
in
ror
or
lock
lods
jecxz
movs
fwait
outs
mov
cmp
mov
cmps
cmp
sbb
std
test
or
lea
and
out
repz
pop
mul
jecxz
enter
push
pop
call
or
cdq
xlat
mov
loopne
add
pushf
xchg
ror
stos
push
xchg
xchg
push
dec
cli
push
jle
repnz
(bad)
pusha
pop
xor
mov
jmp
add
dec
pop
nop
mov
scas
fsub
inc
xchg
push
fistp
mul
sub
lods
cli
int
cmp
add
out
popa
mov
out
add
sbb
mov
sbb
and
cmc
push
rcr
hlt
imul
(bad)
(bad)
shl
outs
dec
cmp
sahf
fadd
xor
and
out
jne
aas
dec
push
lods
ds
inc
adc
pusha
pop
outs
push
mov
test
jle
push
inc
fisub
mov
push
cmp
pop
mov
sti
fisub
fcomp
call
pop
imul
dec
aad
push
add
and
aaa
imul
or
data16
leave
cmp
sahf
retf
and
mov
inc
cmps
pop
pop
cli
cmp
fwait
outs
(bad)
mov
not
dec
or
cmps
addr16
mov
and
xor
jmp
sti
mov
adc
int3
adc
mov
push
lods
sbb
(bad)
in
push
arpl
test
mov
inc
lea
jmp
lock
jo
mov
call
mov
mov
in
sbb
xchg
jle
xor
imul
loop
int3
inc
test
movs
in
in
push
jge
loope
ds
add
sar
sbb
aam
dec
ins
push
add
ja
xchg
cmp
add
jne
cmp
mov
sbb
int
call
or
push
sbb
mov
lds
push
xor
cli
add
and
fstp
jne
xchg
xchg
and
ss
jbe
pop
mov
bound
data16
(bad)
pop
push
adc
(bad)
loopne
test
jbe
out
or
iret
(bad)
je
sbb
lods
outs
add
jno
lahf
lock
cdq
xor
scas
cmp
aas
xor
push
jg
arpl
jmp
jbe
fdivr
jmp
push
dec
fld
js
jl
test
(bad)
and
xchg
dec
dec
sahf
push
fstp
push
lods
je
js
loopne
sbb
add
enter
cmp
jp
xor
mov
cmp
shl
jnp
inc
sbb
mov
daa
popf
mov
ds
sbb
pop
lahf
add
sbb
mov
and
inc
mov
sti
push
xor
sahf
push
or
jbe
icebp
fistp
fmul
pop
or
(bad)
shl
lods
inc
jnp
and
adc
adc
sub
dec
int
or
mov
dec
adc
fisub
mov
mov
jns
fist
add
xchg
lea
ret
into
repz
ins
push
fmul
push
pushf
lea
iret
je
(bad)
icebp
push
and
in
out
outs
add
fbstp
cdq
fsubr
xchg
outs
xor
pop
xlat
aaa
popa
add
and
icebp
jmp
les
test
sub
dec
mov
or
xor
pop
in
adc
mov
or
lahf
dec
mov
add
sub
pop
loope
dec
add
lahf
inc
pop
inc
pusha
in
mov
cmp
or
lock
outs
xchg
mov
fscale
(bad)
cmp
pop
movs
int
add
cmp
jmp
sahf
outs
jbe
js
mov
int
cmp
stc
mov
add
or
push
mov
ret
sub
cmp
loope
int
sbb
sbb
jg
cmp
xchg
jnp
xor
pop
cmc
out
xchg
mov
add
push
or
push
popa
ds
mov
mov
call
xchg
std
xchg
or
xor
lock
(bad)
jmp
pushf
rcr
cdq
adc
xor
addr16
sar
jbe
fwait
(bad)
stos
xchg
lods
jae
ret
inc
jnp
xchg
sub
out
or
push
sub
sbb
cmp
jl
jnp
and
mov
jbe
retf
adc
test
jb
xor
sar
popf
bound
mov
cmp
scas
mov
pop
int3
test
lock
test
ret
test
jno
sbb
xchg
in
or
sub
push
inc
(bad)
jmp
stos
push
popf
or
add
enter
push
inc
call
in
arpl
dec
mov
cmp
xor
lods
sub
rcr
std
int
in
stos
ret
dec
ror
into
mov
lahf
shl
jns
into
push
popa
sbb
pop
inc
scas
jo
(bad)
call
ret
or
cmp
retf
add
mov
sti
push
and
sti
add
icebp
mov
cmp
outs
loopne
pop
adc
stos
cmp
jae
jno
popa
pcmpeqd
lods
add
(bad)
xchg
mov
add
loopne
pop
adc
xchg
sbb
dec
pushf
mov
sub
lock
add
xlat
inc
sbb
cmp
sub
(bad)
mov
mov
(bad)
inc
cld
loope
loop
push
pop
push
lahf
jecxz
dec
arpl
cmps
in
jecxz
push
inc
std
adc
les
mov
add
aaa
bound
xchg
movs
iret
jecxz
fsubr
inc
retf
out
jmp
rcr
je
out
outs
retf
loop
and
enter
ss
rcl
jo
scas
adc
xor
cs
dec
push
mov
dec
cmp
loopne
add
mov
dec
scas
nop/reserved
fs
mov
cmc
dec
jae
scas
aas
(bad)
jmp
xor
cmps
lock
mov
add
mov
mov
add
xor
xor
ror
mov
scas
fwait
mov
je
mov
xor
rcl
in
outs
adc
cmp
movs
fs
push
enter
out
cli
jne
sbb
scas
xchg
xor
xchg
mov
pop
add
stc
mov
xor
outs
fisubr
pop
cmp
fisubr
aad
xlat
mov
mov
fsubp
or
fwait
and
(bad)
mov
and
loope
and
inc
mov
sbb
or
dec
dec
jnp
aaa
mov
jne
repz
push
dec
imul
pop
push
leave
nop
ret
pushf
add
(bad)
popa
cld
test
push
jo
outs
sbb
xor
in
mov
fild
stos
nop
dec
in
xchg
inc
cmp
int
neg
call
push
pushf
daa
push
rcl
aas
push
mov
movs
loop
cmp
jmp
mov
inc
mov
cmp
xor
icebp
test
ret
sbb
ret
fidiv
shrd
or
pop
xchg
adc
mov
cld
jle
ins
mov
call
sub
cmp
and
adc
dec
fcmovnbe
lods
rcr
and
aas
or
dec
int3
jl
sbb
pop
jmp
mov
mov
stos
push
aam
add
dec
sbb
sub
add
sahf
nop
push
lds
push
sub
sub
and
xchg
add
sahf
lea
lea
add
pop
pusha
cdq
call
ss
loope
jle
pop
inc
inc
push
cmp
in
loop
sub
iret
jb
jle
mov
jecxz
scas
sbb
ss
out
mov
(bad)
fstp
jnp
xlat
mov
rcr
int
cmp
(bad)
push
adc
in
add
cmp
lods
lahf
movs
loope
aaa
push
cmp
(bad)
movs
inc
aam
cmp
cmps
adc
jp
(bad)
std
aas
nop
das
ret
cmp
push
push
ficom
mov
cmp
ror
and
aam
and
or
fwait
or
sub
fistp
out
out
jmp
cwde
pop
popa
sbb
cs
stos
out
int3
aaa
pop
leave
lock
(bad)
imul
pop
mov
retf
stc
jge
mov
fs
jb
out
adc
adc
pop
add
hlt
inc
aad
js
xchg
mov
fsubp
cmp
imul
lock
pusha
stc
addr16
mov
aaa
in
dec
lods
aad
push
das
and
pop
cmp
fldenv
les
test
outs
add
out
sbb
inc
repz
ret
sar
stc
pop
jg
or
inc
xor
sbb
(bad)
push
mov
sub
jbe
push
cmp
jnp
fsubr
inc
or
or
fistp
cmps
adc
fsub
sar
xchg
dec
pop
loop
in
mov
into
xadd
inc
cmp
sbb
std
mov
xchg
xchg
add
ret
aad
pushf
das
rol
stos
cdq
mov
cmp
lea
jns
addr16
stos
jp
cdq
adc
in
sub
cmp
int3
xchg
jb
jnp
xchg
push
aad
std
push
shl
lods
jbe
popa
inc
loope
mov
aad
jae
arpl
push
fnsave
jnp
jg
and
cs
mov
outs
lock
mov
add
inc
int
loope
leave
scas
dec
xor
mov
add
cmp
data16
sub
inc
adc
cmpxchg8b
or
xchg
out
xlat
popf
icebp
or
retf
mov
jne
mov
cld
pop
dec
movs
outs
in
mov
mov
idiv
mov
pop
(bad)
shl
inc
out
and
ror
aaa
cmp
and
add
in
pop
jle
push
inc
ss
aam
adc
stos
ds
mov
lea
xchg
ins
push
repnz
int3
rcr
mov
adc
dec
fsub
and
call
sub
fwait
xor
into
cdq
scas
dec
dec
cmp
jo
lods
sub
or
add
movs
in
push
fnstsw
add
test
ss
imul
jge
jno
sub
iret
push
xor
std
push
cld
mov
das
inc
out
add
add
push
lds
mov
mov
cdq
mov
mov
mov
sub
push
pop
loope
add
mov
pusha
sbb
lock
stc
arpl
out
adc
mov
(bad)
and
pusha
and
jge
push
outs
pop
dec
jb
sub
inc
retf
xor
into
fcom
test
(bad)
cs
in
and
jg
aas
retf
fldenv
sub
add
inc
call
enter
imul
or
pop
mov
js
mov
pop
inc
sbb
inc
pop
mov
repz
mov
xor
cmp
adc
mov
push
je
push
mov
iret
inc
imul
mov
movlps
xor
inc
int
mov
and
mov
add
out
sbb
mov
daa
adc
popf
popa
xor
ins
push
push
sti
dec
sub
and
push
dec
cmp
movs
pop
nop
fwait
jns
xchg
or
test
xchg
push
sub
jae
rol
repnz
jg
imul
imul
mov
ss
sub
pop
out
sub
adc
jecxz
(bad)
cwde
out
push
out
or
iret
popa
push
xchg
ins
jne
sbb
gs
or
xchg
mov
and
inc
or
xor
xchg
call
out
ja
xchg
pop
push
ds
rol
push
into
fisttp
cmps
(bad)
mov
sti
ins
aas
jg
cmp
add
fwait
adc
retf
adc
sbb
sbb
add
div
hlt
mov
xor
test
fs
xlat
ror
cs
cmp
cdq
lea
jge
in
mov
push
sub
arpl
xor
inc
mov
pop
rcl
das
movs
inc
or
retf
into
je
(bad)
jle
lahf
dec
xor
enter
imul
jecxz
adc
and
(bad)
call
imul
sub
jmp
cmps
pop
fisubr
jg
inc
cmp
(bad)
jb
mov
outs
and
inc
jne
push
xor
jnp
jle
adc
add
push
sbb
sub
fxtract
xlat
and
dec
mov
mov
adc
mov
rcl
aaa
xchg
xchg
jle
inc
pop
add
inc
stos
fiadd
sub
(bad)
out
jb
js
js
xor
jmp
cdq
call
js
inc
cmp
aas
dec
ds
add
sub
jns
xchg
inc
bound
pop
push
ins
push
cmps
jecxz
out
xlat
mov
mov
call
das
stos
mov
mov
(bad)
adc
lea
xchg
test
xlat
mov
ret
ret
inc
cld
pop
inc
stc
jmp
cmp
movs
loop
mov
out
shl
sub
sahf
dec
mov
inc
push
xor
mov
mov
and
je
call
repz
xchg
xchg
push
jle
and
cld
and
aas
test
ror
sbb
push
std
mov
nop
jne
jmp
cmp
push
data16
stc
mov
lea
leave
outs
test
cmp
xchg
push
dec
dec
test
std
xchg
sbb
sbb
int
xor
mov
mov
ror
int
std
loop
mov
mov
ret
xor
adc
cwde
data16
aaa
inc
xchg
lds
and
cmp
jmp
adc
aam
stc
mov
sub
pop
aam
pop
dec
mov
add
(bad)
xlat
(bad)
jne
enter
cmp
lds
cmp
sbb
mov
iret
xchg
xor
idiv
and
pusha
push
push
shl
call
test
pusha
mov
pushf
pop
aas
mov
push
or
gs
lea
les
(bad)
cmp
lahf
and
(bad)
movs
in
pop
lock
cdq
movs
hlt
dec
dec
std
pusha
loope
mov
adc
or
dec
out
jne
cmp
pop
in
(bad)
jp
mov
lods
sbb
mov
(bad)
mov
call
push
clc
mov
push
cdq
fistp
cwde
leave
stos
sbb
lods
xor
cs
or
xchg
jne
mov
add
sub
xor
icebp
jle
push
ins
adc
mov
fbld
mov
mov
int
popa
in
movs
or
sbb
mov
fdivr
jmp
(bad)
jl
lea
push
xor
sub
popa
rep
sub
xor
xchg
mov
push
das
and
sbb
mov
out
xchg
mov
repnz
sub
mov
out
fimul
retf
xchg
out
sbb
mov
sbb
mov
rcr
sub
mov
in
cwde
or
and
jmp
and
pop
out
mov
push
ja
test
add
pop
inc
aam
sahf
sub
movs
push
add
or
jnp
inc
mov
aad
mov
iret
mov
aas
dec
jno
popa
icebp
or
repnz
in
stc
retf
outs
xchg
aam
mov
or
xchg
add
sub
mov
dec
xchg
lea
(bad)
js
jmp
sti
(bad)
aam
sub
sbb
push
lds
out
inc
std
or
or
push
dec
fld
js
and
mov
movs
jle
sub
lods
(bad)
mov
movs
xchg
sub
call
xchg
push
mov
movs
dec
rcr
pusha
jnp
jp
and
and
dec
nop
adc
std
lods
jg
cmpxchg
push
xchg
dec
add
ret
inc
in
jl
xlat
mov
loop
ss
popa
out
xor
mov
push
shl
sub
jmp
sub
add
or
inc
arpl
lahf
adc
push
or
mov
inc
or
aad
pusha
mov
add
ror
xchg
inc
mov
lahf
mov
adc
lds
stos
imul
adc
pop
cwde
push
jnp
mov
adc
adc
icebp
aam
repnz
fidiv
popa
mov
inc
cwde
nop
test
pop
nop
mov
cmc
jle
aaa
sbb
mov
jmp
imul
mov
fsub
scas
inc
(bad)
jp
popa
ss
mov
xchg
mov
arpl
sbb
das
push
data16
js
hlt
xor
stos
(bad)
jno
lock
xor
daa
js
xchg
push
(bad)
repz
rcr
cmp
mov
ret
pop
cmp
sub
mov
jno
pushf
push
dec
xchg
sub
adc
push
mov
mov
dec
cmps
or
jo
or
fs
imul
xor
(bad)
hlt
add
jle
je
xor
daa
test
mov
mov
cmps
ds
fistp
scas
dec
jg
stc
cmp
out
xor
adc
fimul
mov
retf
mov
das
rcr
es
mov
into
stos
into
scas
jg
pop
test
dec
cmps
mov
retf
pop
adc
dec
inc
scas
mov
imul
dec
jg
xor
lods
inc
addr16
aad
aam
in
mov
or
push
scas
push
cmc
dec
mov
and
mov
mov
pusha
push
sbb
cmp
loope
lods
push
dec
into
scas
pop
dec
push
out
and
aaa
nop
push
repnz
or
push
pushf
xchg
das
inc
les
push
cmp
mov
lock
retf
gs
jb
gs
add
loope
xchg
mov
scas
aaa
adc
push
sub
pop
retf
out
popf
loope
cmp
xchg
sub
(bad)
mov
push
inc
gs
in
cld
jmp
repnz
cmp
int
pop
call
dec
inc
jp
or
and
in
pusha
dec
and
cmp
aad
cmp
mov
inc
jmp
gs
xchg
mul
inc
add
rcl
fistp
and
fidivr
bound
xchg
das
xor
xor
clc
ret
or
mov
xchg
in
cmp
sub
jp
mov
enter
dec
aad
pop
enter
xchg
inc
add
mov
loopne
jg
dec
sub
lods
fsubr
push
ficomp
mov
sub
push
jl
sbb
or
add
push
mov
das
jg
mov
push
arpl
push
sbb
test
pop
ins
inc
ss
or
in
icebp
adc
jmp
fwait
and
test
scas
pop
(bad)
pop
ret
push
nop
cmc
aad
test
sub
jmp
push
sub
(bad)
adc
js
and
jl
data16
hlt
mov
inc
and
ins
cmp
push
xor
push
pop
inc
add
xchg
(bad)
(bad)
(bad)
jmp
das
ja
fcomp
mov
cmps
pop
leave
scas
push
push
shl
add
cmp
outs
sub
arpl
or
jbe
adc
lock
push
sbb
int
push
adc
cwde
adc
hlt
jg
cwde
push
cmp
cli
mov
sahf
mov
inc
dec
inc
dec
push
shl
cmp
add
lahf
cmp
inc
punpckhdq
inc
dec
mov
push
shl
pop
sbb
add
cs
mov
xchg
mov
mov
inc
mov
cmp
add
pop
pop
ret
std
fisttp
clc
adc
pop
dec
push
scas
and
jl
lods
push
ret
jno
dec
jo
fmul
repz
and
or
imul
pop
sbb
and
mov
adc
push
and
cmps
cmp
inc
dec
ins
sar
aas
mov
scas
daa
and
push
or
cmp
pop
in
xor
retf
outs
aas
into
sbb
mov
xchg
mov
mov
mov
xor
dec
(bad)
in
das
dec
inc
lahf
pop
jne
xchg
and
les
or
inc
bound
mov
call
dec
in
mov
dec
retf
mov
cmp
xchg
inc
call
lds
and
xchg
add
stos
js
push
shl
ins
test
push
adc
call
out
push
out
xchg
out
mov
cmp
stos
(bad)
push
daa
inc
jb
inc
and
sar
mov
sub
mov
test
jmp
sub
pop
jo
push
scas
jno
mov
imul
pop
stc
dec
cs
pop
push
cli
cmp
imul
cli
repnz
sub
pop
popa
aas
repnz
ja
mov
jo
mov
inc
cmps
cmp
iret
adc
xchg
and
pop
adc
sub
loopne
les
mul
mov
push
mov
mov
in
and
sbb
jbe
cmp
or
and
xor
and
add
retf
xor
scas
pushf
mov
jmp
lds
push
adc
scas
imul
and
dec
fstp
lock
push
dec
pusha
mov
mov
and
aad
jle
dec
or
daa
cld
sub
je
sbb
sti
imul
sti
sbb
mov
push
xlat
mov
cmps
adc
leave
pop
daa
stc
mov
lahf
add
movs
jbe
dec
vucomiss
scas
adc
fisttp
in
hlt
mov
and
push
test
mov
or
aam
bnd
jge
add
push
mov
into
test
mov
imul
gs
dec
jl
and
cmps
sub
sub
push
inc
bound
clc
mov
pop
enterw
sbb
push
stos
fcmovnbe
xchg
or
popa
rcl
loopne
xchg
pop
xor
stos
jl
es
ror
mov
jg
add
lock
mov
xor
out
dec
mov
in
shl
or
xchg
or
je
push
lds
xor
xor
ror
test
loop
pop
push
cmp
mov
retf
test
and
cmp
movs
mov
sahf
mov
jmp
sbb
ins
mov
fidiv
addr16
mov
scas
cmp
ret
movs
lea
xor
cmps
je
sub
xchg
or
(bad)
scas
repz
fs
cs
dec
int3
mov
stos
jmp
or
xchg
xor
push
ins
xchg
ret
int3
push
mov
in
sub
mov
bound
retf
pop
cmp
test
pop
lods
mov
and
je
adc
jbe
dec
or
test
lock
jecxz
fbld
xchg
jecxz
sbb
push
sbb
push
jmp
xor
out
pusha
loop
icebp
lahf
mov
sbb
das
inc
jp
jp
pop
cld
jg
outs
es
xchg
out
push
push
inc
jb
leave
mov
mov
ds
rcl
rol
fcomp
and
retf
jp
xchg
daa
sbb
jle
test
add
outs
pushf
inc
in
sub
add
or
dec
gs
jnp
cmp
pop
test
ret
je
inc
add
push
cmp
test
xchg
mov
aam
cs
out
push
gs
push
xor
stos
xor
into
mov
jl
xchg
call
cli
xor
in
out
cmp
mov
adc
(bad)
mov
aam
sbb
cld
cld
xor
mov
push
loop
clc
bound
jo
jae
in
jns
xor
push
sahf
into
xor
lea
sbb
std
mov
cmp
jb
int
mov
jle
cmc
fdiv
sub
pop
sbb
pop
jle
fimul
push
ror
add
pop
movs
out
xchg
add
mov
mov
jbe
data16
not
or
jmp
mov
loope
test
inc
push
movs
jmp
aas
cmps
pop
pushf
pop
mov
stc
inc
iret
xchg
imul
and
imul
dec
mov
or
inc
loopne
aaa
sub
xchg
pushf
leave
clc
sbb
jb
mov
add
movs
fld
xor
daa
retf
push
retf
inc
add
cmps
popa
adc
xor
pushf
pop
inc
enter
daa
inc
push
sub
cwde
bound
sbb
jg
ror
push
push
sbb
pop
jecxz
mov
aas
mov
shr
jecxz
push
loop
xchg
test
sub
sbb
fadd
pop
imul
push
add
repnz
test
add
sub
xchg
push
pop
arpl
clc
mov
popf
aaa
push
push
dec
popa
iret
xchg
(bad)
mov
std
and
ja
push
loopne
push
mov
(bad)
sub
pop
leave
pusha
rcl
cmc
cli
xchg
pop
ds
inc
adc
je
adc
lock
push
icebp
sbb
and
pop
pop
or
in
sub
mov
js
dec
out
push
lea
stc
push
mov
int3
sub
(bad)
loopne
xchg
loope
sub
loopne
pop
addr16
sub
arpl
dec
xor
pop
mov
ja
sub
push
inc
lods
or
dec
into
and
adc
xor
es
mov
movs
xor
and
shl
jo
scas
sbb
pop
inc
cmp
xchg
mov
push
jmp
movlps
ins
call
jb
movs
add
fsubr
xor
xchg
mov
out
xchg
or
imul
std
mov
inc
cmp
pop
jae
dec
mov
jge
aaa
lds
cli
and
popa
mov
dec
cmp
ja
out
mov
in
aad
fwait
int3
push
add
pop
xor
aaa
cwde
push
sbb
mov
sub
push
mov
dec
fist
pop
aad
mov
out
(bad)
xchg
mov
addr16
test
mov
lock
fidiv
data16
mov
add
retf
fs
fst
cmp
outs
lods
rol
inc
in
adc
xor
cmps
xor
into
ffree
pushf
jg
add
fs
(bad)
xlat
call
repz
mov
mov
in
gs
mov
or
pop
xor
or
cmp
or
mov
sbb
or
dec
outs
add
mov
cwde
das
popa
xchg
sub
pop
retf
pop
int3
ret
push
(bad)
fcmovnb
out
or
pop
cld
into
sub
retf
scas
mov
push
js
cmp
xor
sub
repnz
popa
pop
in
ins
jne
cld
mov
aaa
repnz
das
retf
sahf
movs
sub
and
xchg
call
adc
jns
aad
mov
nop
into
mov
jg
and
add
adc
jno
adc
icebp
mov
push
inc
fwait
pop
or
mov
cld
or
add
psubb
bound
inc
mov
mov
into
cwde
clc
inc
ror
cmp
call
dec
xor
mov
pop
(bad)
push
inc
xchg
inc
das
sahf
add
loopne
mov
and
mov
push
popa
mov
loop
ja
jmp
pop
jl
popf
lock
dec
mov
shl
jno
mov
pop
mov
dec
sbb
cmc
push
jne
and
out
loop
push
inc
push
cmps
js
mov
imul
xchg
das
(bad)
cli
pop
aad
adc
fwait
sbb
push
aam
xchg
shl
xor
fmul
jge
or
cmp
je
popf
popa
enter
fwait
xor
mov
ins
out
test
addps
je
leave
leave
jge
(bad)
push
fmul
add
xlat
int
out
mov
leave
push
adc
mov
xor
scas
aam
jl
jnp
xor
dec
jge
jne
mov
cmp
xchg
push
push
fisttp
movs
push
jg
les
mov
xlat
xchg
mov
gs
sub
shld
inc
cmp
xchg
aam
inc
or
fiadd
push
aad
imul
push
or
dec
pop
push
sub
mov
xchg
sub
xor
sub
bnd
push
mov
inc
mov
fwait
jb
inc
out
repnz
jnp
pop
test
ja
int
mov
in
fdivr
mov
mov
imul
arpl
adc
popf
dec
and
nop
mov
bound
sbb
out
(bad)
aad
mov
pop
pop
jl
call
std
lahf
repnz
add
leave
enter
gs
(bad)
mov
gs
push
shl
sahf
ret
imul
pop
push
ret
jne
js
push
jge
jl
(bad)
ror
iret
jg
fidivr
pop
mov
pushf
push
std
std
jge
or
add
add
or
in
nop
nop
pop
push
(bad)
in
pop
addr16
hlt
cwde
outs
sub
mov
cmp
fidiv
jmp
jo
div
es
leave
popa
push
adc
dec
pop
inc
sub
call
nop
jecxz
or
pop
xor
pop
cmp
mov
dec
setbe
add
daa
jmp
jl
idiv
lahf
cwde
xor
div
push
pop
sub
out
repz
inc
stos
push
popf
add
sub
gs
mov
mov
cmps
xchg
data16
push
ret
pusha
inc
retf
dec
pop
jae
jle
jl
inc
add
shr
ja
pop
loopne
or
cdq
adc
fstp
inc
pop
xchg
cmp
push
retf
mov
sbb
dec
js
mov
fdivrp
lds
xor
fwait
sub
mov
cwde
dec
jns
out
inc
xchg
jl
pop
push
das
jmp
es
jl
and
nop
dec
inc
(bad)
popa
ja
cmp
and
stc
push
cmp
sbb
movs
mov
ficom
gs
popa
leave
lds
repz
dec
sub
xchg
dec
mov
test
fisub
push
hlt
jmp
cmp
push
dec
inc
rcr
inc
jo
pop
js
mov
addr16
adc
test
popf
dec
adc
push
dec
mov
or
jb
cli
test
adc
test
add
pusha
pop
out
loope
sub
fdiv
repz
gs
mov
and
jle
jbe
out
fidiv
cmp
cs
xor
pop
cld
sbb
jl
(bad)
xor
repnz
cmp
into
loope
and
jbe
jge
adc
in
cmp
fcmovnb
add
inc
adc
xchg
fdivp
shl
and
mov
popa
lahf
dec
mov
(bad)
aam
inc
push
sbb
xchg
test
push
in
jle
scas
inc
jg
outs
xor
icebp
scas
and
jecxz
mov
pop
xor
movs
imul
add
sub
pop
neg
inc
imul
scas
ds
mov
ficom
leave
xchg
ins
mov
leave
jmp
xor
or
cmp
loop
call
imul
pop
xor
jecxz
fs
lahf
inc
jns
add
mov
not
adc
icebp
xor
retf
mov
adc
mov
retf
dec
pushf
dec
sti
mov
or
dec
lods
push
fwait
sbb
jp
jle
xchg
and
stc
out
retf
je
inc
and
imul
jo
movs
movs
mov
lock
sbb
pop
mov
sbb
sub
xchg
int3
mov
ds
add
push
stc
inc
dec
adc
pop
mov
rcl
shl
jmp
mov
loop
pop
ins
jns
cmps
sub
xchg
mov
sub
mov
clc
fdivr
ror
mov
jno
or
pop
pop
mov
sub
xor
push
cmc
fmul
dec
add
mov
inc
sar
xchg
movs
mov
add
sti
mov
icebp
fld
cs
call
shl
gs
adc
push
fs
cmp
mov
out
jnp
sbb
ss
pop
push
lea
xor
or
(bad)
cmp
mov
popa
cmp
cmp
push
popa
test
fnstsw
sti
div
and
(bad)
add
jmp
fidivr
add
cmc
(bad)
sbb
(bad)
clc
pop
bound
shr
or
pushf
in
adc
sbb
lds
mov
xor
into
cld
leave
dec
jl
dec
push
leave
inc
pop
pop
pop
rcl
popa
pusha
push
jl
cmp
out
xor
cmp
cwde
push
enter
or
mov
cs
or
mov
ins
outs
mov
jge
pop
push
add
mov
mov
fwait
pushw
mov
movq
rcr
push
fdiv
jmp
adc
clc
cs
dec
jmp
out
push
cmp
and
mov
sub
add
arpl
jp
loope
jmp
repz
cs
dec
test
or
mov
adc
in
ins
fild
das
mov
pop
and
sbb
sub
pushf
shr
mov
imul
test
(bad)
or
retf
cmp
jae
cmp
cmps
xchg
lahf
add
sbb
jbe
stos
dec
pop
dec
ficom
jmp
sub
stc
test
cmp
adc
xchg
jmp
(bad)
push
call
(bad)
sbb
cdq
cmp
mov
inc
imul
xchg
repz
or
inc
lahf
mov
out
cmc
pop
inc
ins
(bad)
std
cmps
and
jmp
pop
movs
ret
lahf
in
or
sbb
mov
dec
xchg
fwait
push
cmc
jmp
xor
dec
js
inc
outs
(bad)
jmp
mov
jle
loopne
stc
icebp
pop
cmp
pop
popa
lods
int
out
mov
ret
pop
mov
iret
test
add
mov
ds
movs
jb
and
ror
cmp
leave
inc
cmp
in
enter
int
push
cs
js
push
xchg
mov
clc
mov
mov
inc
les
push
cmp
inc
mov
sbb
push
push
es
sbb
int3
push
sti
or
inc
pusha
sub
das
push
dec
push
jge
or
or
mov
or
dec
add
pushf
push
jp
dec
pop
outs
fild
xor
iret
mov
jl
retf
inc
sti
mov
lods
cmps
lahf
dec
pop
push
and
mov
scas
popa
mov
(bad)
cli
pop
pusha
cmc
in
fpatan
mov
aad
sub
test
js
es
loopne
inc
test
fcom
adc
out
pop
hlt
adc
dec
pushf
retf
rol
scas
xchg
jp
leave
jo
adc
scas
std
pop
ror
dec
das
(bad)
jmp
aam
push
fs
mov
xor
inc
sbb
cld
ds
je
xchg
add
in
cmp
call
push
lahf
ins
leave
mov
addr16
mov
dec
sbb
add
inc
repnz
in
sub
mov
xchg
add
pop
aam
lea
cmp
mov
adc
test
xchg
lahf
pushfw
xlat
sbb
lea
pop
mov
cmps
xchg
dec
icebp
inc
call
aas
sbb
mov
rcr
scas
mov
in
mov
lods
push
push
sbb
add
inc
mov
loop
pop
pop
fmul
loopne
aaa
dec
hlt
add
loope
xor
xor
(bad)
adc
outs
das
nop
sbb
adc
dec
(bad)
mov
rcr
jno
mov
sti
ret
lods
and
dec
dec
jecxz
test
movs
fidivr
jmp
xor
sbb
adc
sub
mov
jmp
test
pop
sub
jns
lock
(bad)
push
pop
xor
xor
xor
mov
mov
and
hlt
pop
leave
or
xchg
aam
pop
and
mov
lods
mov
adc
test
sahf
mov
fwait
jp
mov
js
fidiv
int
mov
pop
repnz
mov
push
shl
js
cli
call
mov
and
enter
movs
jecxz
and
or
jmp
pop
push
outs
jge
retf
cmp
adc
cld
popa
das
outs
and
jo
xchg
dec
or
or
pop
ja
les
or
jmp
cmc
popf
imul
clc
ficom
mov
xor
mov
jle
es
cld
push
adc
out
shl
inc
adc
jle
nop
mov
xchg
adc
cmps
in
or
add
push
mov
mov
push
(bad)
fcmovu
xlat
das
cmc
mov
dec
mov
int
lea
push
sbb
(bad)
imul
mov
pushf
sbb
loopne
bound
xchg
iret
mov
mov
push
outs
cmpxchg
xor
dec
call
loopne
mov
je
xor
xchg
lea
dec
jge
push
push
in
(bad)
pop
xor
jg
sbb
xor
xchg
pop
mov
daa
das
or
or
nop
and
mov
vcvtpd2dq
inc
or
jge
inc
and
mov
loop
pop
cmp
xor
push
add
or
sub
shl
(bad)
push
jle
bound
fistp
repnz
jp
cmp
mov
test
sbb
call
adc
xor
and
cmp
ins
mov
inc
cmp
cwd
and
ficom
retf
fldcw
mov
or
std
or
call
jmp
inc
xchg
or
jo
popa
jle
jl
pusha
pusha
pop
push
add
jmp
cmp
pop
sahf
cdq
sub
or
xchg
jno
jmp
scas
sbb
sub
xchg
adc
jecxz
mov
ins
dec
mov
jg
rcr
mov
sub
add
inc
cwde
mov
sbb
lods
jp
ds
jno
mov
sahf
cmp
lock
or
cdq
stc
inc
inc
mov
imul
retf
rol
ins
xchg
inc
adc
add
fdiv
aaa
xor
adc
fisubr
jae
popa
mov
popa
adc
sbb
jo
inc
scas
or
jo
sbb
push
sub
xor
test
push
mov
xor
or
mov
pop
jo
pop
xor
dec
xor
fnstcw
(bad)
pop
mov
loopne
lods
jecxz
std
enter
ficomp
pop
sub
cmc
lods
shr
add
test
out
fisub
ror
dec
in
aaa
or
xlat
rcr
xchg
inc
and
or
mov
ret
lea
push
cmps
sbb
dec
aam
int3
nop
bound
mov
cld
das
lods
test
sbb
xchg
sub
lock
push
ret
dec
lds
pop
in
jb
mov
sbb
or
out
mov
xchg
add
or
xchg
(bad)
and
sbb
or
in
fcom
mov
outs
cmp
dec
push
xlat
sbb
cmp
mov
movs
push
int3
imul
test
push
mov
mov
mov
sar
inc
inc
leave
daa
cmp
sti
sar
rcr
or
cdq
scas
jns
add
fdivr
pop
cmc
repnz
out
cs
add
or
test
shl
popa
mov
push
mov
push
int3
imul
push
xchg
in
sub
push
fsub
ins
jno
xchg
inc
aaa
sub
add
inc
fcmove
push
dec
clc
clc
jmp
ss
addr16
fmul
adc
stos
adc
aas
sub
jne
(bad)
mov
data16
mov
fwait
ins
sub
pop
xor
sub
dec
add
sar
mov
dec
dec
(bad)
es
int
or
adc
jp
dec
and
addr16
pop
mov
loopne
ja
js
nop
push
les
add
dec
inc
xchg
retf
cmp
idiv
inc
test
adc
dec
xor
pop
pop
push
cmp
xchg
loope
push
jno
in
xchg
mov
mov
inc
out
in
push
out
fwait
sub
call
xchg
mov
retf
xor
mov
pop
adc
xchg
push
das
repnz
int3
popa
test
std
je
cmps
mov
call
retf
bound
sti
outs
jg
int3
sub
in
xchg
and
(bad)
xchg
imul
test
mov
inc
cmp
pop
mov
xchg
out
mov
add
es
and
test
out
push
cmps
adc
out
mov
and
out
push
xor
xor
mov
push
fsubr
mov
ror
out
(bad)
sbb
xchg
(bad)
movs
cdq
std
sahf
mov
adc
mov
add
mov
(bad)
movs
in
sbb
push
mov
icebp
imul
arpl
fmul
add
ret
je
hlt
add
(bad)
fldcw
cs
inc
mov
stc
nop
cmps
jae
in
mov
sub
imul
ss
mov
cmps
jle
push
shl
sti
jo
out
nop
jg
push
sahf
xchg
mov
add
leave
pop
cmp
loope
mov
les
fstp
mov
out
pop
mov
pop
stos
cmps
mov
pop
jbe
repz
fstp
push
sbb
jbe
ss
and
(bad)
ins
fld
test
jno
ret
(bad)
jl
stos
movs
xrelease
mov
and
cmp
cmp
fsubrp
leave
push
aam
test
dec
repz
loope
add
cmp
es
rol
pop
sbb
or
(bad)
loope
inc
imul
cmp
jb
adc
stos
push
pop
call
dec
push
push
mov
js
dec
and
xchg
ins
shr
lods
mov
add
std
sbb
mov
xchg
jb
sub
rcr
in
or
imul
les
iret
shl
cdq
adc
dec
jo
cld
aad
inc
mov
jnp
call
retf
out
std
xlat
clc
scas
test
jae
enter
jg
mov
lods
mov
and
xor
jno
in
out
adc
dec
xor
inc
and
push
xchg
xchg
inc
xchg
sbb
adc
(bad)
xor
test
rcr
xor
push
int3
jae
iret
pop
xor
cmp
sbb
jb
bnd
int3
dec
pop
and
dec
jecxz
push
dec
jbe
pop
stos
xchg
enter
test
daa
mov
jecxz
rol
add
or
cwde
pop
mov
int3
xor
call
test
cmps
call
retf
pop
xchg
mov
jbe
dec
dec
mov
scas
sbb
lock
gs
cs
(bad)
fcomp
ds
mov
or
pushf
cs
add
xor
xor
test
pop
xchg
cli
push
xchg
push
sahf
xor
mov
cmp
inc
aam
mov
outs
or
bound
cli
sbb
dec
mov
jmp
jecxz
pop
mov
push
loop
xchg
std
shr
ror
hlt
push
sub
mov
out
sar
ss
xchg
sbb
jl
cmp
dec
das
push
in
xchg
nop
sar
loope
shl
push
fwait
mov
xchg
adc
adc
add
fisttp
inc
cmp
xchg
mov
fisttp
mov
ret
xchg
push
rol
inc
jg
call
ds
lods
dec
push
sub
jp
pop
xor
push
add
loope
leave
out
ds
test
fs
mov
xchg
inc
dec
call
mov
(bad)
pop
sub
jne
mov
jge
test
pushf
mov
fadd
outs
loop
sub
cmp
iret
icebp
fcom
pop
idiv
mov
les
mov
fcmovnb
mov
inc
add
xchg
int
(bad)
mov
iret
xchg
inc
int
add
sbb
shl
jle
push
pop
xchg
or
repnz
cwde
int3
adc
idiv
mov
(bad)
jmp
rol
pop
sbb
pop
ins
and
std
cmps
data16
fisubr
in
pop
mov
loopne
lahf
cdq
aam
jno
mov
dec
sub
(bad)
dec
mov
stos
shl
mov
ins
loopne
or
lea
add
sbb
inc
clc
imul
dec
fidivr
push
xor
std
ins
sub
xchg
jle
mov
cmp
push
pop
out
test
sti
pop
push
iret
sbb
lods
or
(bad)
mov
mov
xchg
(bad)
retf
enter
mov
cdq
cmps
fldln2
aam
int3
mov
lods
movs
dec
mov
je
adc
mov
cmp
sub
jmp
cmc
icebp
(bad)
cld
pop
jmp
fwait
test
push
pop
ret
dec
retf
mov
sti
mov
movs
cmps
and
test
jmp
push
pushf
xchg
xchg
mov
mov
mov
test
out
mov
xchg
add
into
pop
xor
inc
mov
mov
sub
das
jmp
retf
aas
dec
sti
int
xor
in
arpl
jge
xlat
push
and
sub
push
sti
stos
adc
addr16
mov
sub
or
sbb
or
shl
xchg
or
push
fwait
clc
adc
mov
and
push
mov
stc
sbb
(bad)
call
xchg
shl
loopne
mov
pop
jmp
dec
inc
outs
rol
xchg
(bad)
je
aad
scas
lock
loopne
mov
cmp
pop
ins
scas
jns
das
stos
jle
sti
inc
jmp
mov
inc
jae
pop
adc
add
push
hlt
fdiv
rol
dec
inc
sbb
adc
cld
sub
pop
jnp
mov
dec
ja
out
and
out
call
mov
xchg
sbb
scas
aad
cmps
inc
popa
push
cmp
lods
fiadd
push
call
lods
inc
out
int
mov
inc
jne
pop
or
adc
adc
ror
sbb
pop
sti
iret
xor
gs
ss
cmps
(bad)
inc
inc
in
arpl
inc
or
movs
loop
xor
sbb
outs
mov
xchg
xchg
jecxz
jne
fild
frstor
xor
add
inc
rcr
cwde
add
dec
outs
dec
dec
mov
cwde
neg
aad
popa
cmp
scas
xchg
dec
hlt
pop
addr16
ins
call
sbb
cmp
iret
imul
call
pop
mov
cmp
push
push
fcom
xor
and
cmp
arpl
das
loop
hlt
inc
cmps
js
inc
lds
(bad)
js
adc
cmps
fadd
xor
aas
int
ss
pusha
outs
retf
sbb
cmps
pop
xor
addr16
cs
je
mov
neg
xor
sbb
or
dec
pushf
aaa
movs
inc
jno
shl
cmp
test
mov
and
cmp
xor
mov
sbb
and
mov
pop
sub
add
call
imul
call
mov
cli
inc
frstor
shr
sub
xchg
push
push
mov
add
call
mov
and
mov
xor
ja
std
(bad)
arpl
rol
or
cmps
cmc
clc
mov
lds
adc
sti
dec
dec
scas
inc
mov
(bad)
loopne
sbb
out
add
loop
add
add
data16
outs
ss
lahf
cmp
mov
fimul
outs
cmc
in
pop
cmp
ins
jecxz
jno
sub
xchg
add
sbb
xor
mov
pop
add
lahf
(bad)
sbb
sbb
mov
adc
je
fst
pushf
pop
fsub
sbb
jmp
dec
mov
rcl
and
mov
les
dec
ss
add
clc
sbb
comiss
std
mov
(bad)
mov
xor
jne
out
pop
repnz
out
leave
bswap
adc
sbb
dec
cwde
pop
lods
inc
fnstenv
mov
cmp
xchg
mov
fnstenv
icebp
shr
loop
shr
add
push
mov
loop
repz
cmp
rcr
mov
jb
push
dec
bnd
or
cmps
popa
inc
mov
rcl
cmp
mov
jg
add
(bad)
or
fidivr
mov
add
lods
int
mov
mov
ins
sahf
push
xor
mov
pop
ret
mov
sbb
pop
sbb
jne
imul
add
sub
cmps
sbb
mov
inc
mov
hlt
loopne
jmp
loop
sub
int
das
ja
mov
into
add
xor
inc
std
and
dec
mov
je
sahf
push
push
fisub
xchg
sbb
push
nop
sub
dec
out
mov
ss
xor
movs
sub
adc
jle
repz
rcl
in
fs
mov
mov
pop
mov
adc
adc
cmp
mov
push
call
movs
rcl
cmc
mov
add
test
push
push
xchg
inc
jmp
mov
jae
pop
mov
jnp
jp
xchg
fcom
or
pop
inc
jmp
add
mov
clc
inc
inc
das
mov
popf
sub
scas
add
test
fmul
xchg
sbb
sub
loop
mov
mov
pop
call
rcr
fucomip
and
and
outs
scas
mov
inc
pop
sub
in
repnz
retf
fcmove
push
mov
push
ret
push
xor
fstp
pop
js
mov
add
add
pushf
fstp
fsubr
ss
mov
dec
in
sti
sub
fsave
outs
xor
mov
(bad)
out
lods
mov
retf
push
inc
adc
sub
je
jmp
fldcw
test
xchg
sbb
inc
mov
fsubr
xlat
sub
pusha
(bad)
loopne
imul
sbb
dec
add
cmp
movs
movs
mov
xor
nop
xchg
sub
mov
pop
inc
vandnps
add
dec
jno
mov
sbb
mov
dec
xchg
add
clc
nop
(bad)
addr16
mov
outs
xchg
jl
cwde
jno
out
in
fcomp
js
(bad)
rol
mov
mov
cmc
out
push
cmp
and
push
inc
lods
inc
adc
fisubr
int
and
sbb
and
outs
lods
popa
stos
test
dec
hlt
pusha
mov
xor
shl
test
neg
and
adc
ins
inc
aas
div
mov
das
xchg
les
mov
push
push
(bad)
and
jbe
or
hlt
repnz
pop
jo
ret
jge
or
mov
lods
shr
fldcw
mov
sahf
daa
aas
stc
sbb
sbb
sbb
adc
push
test
push
imul
mov
push
enter
jp
push
sub
xchg
adc
adc
dec
pop
pop
xchg
mov
in
(bad)
leave
fsubr
inc
mov
cmp
cmp
out
stos
sub
inc
xchg
jb
out
mov
aad
jl
fdivr
jle
js
lds
mov
(bad)
lds
mov
jae
movq
pop
pushf
xchg
inc
jbe
sti
ins
add
(bad)
mov
fld
daa
arpl
mov
dec
test
xchg
sti
cwde
outs
push
repnz
mov
adc
mov
test
xlat
mov
sbb
xchg
ja
retf
sar
aad
jno
inc
sub
jb
adc
adc
add
and
push
popf
xchg
(bad)
std
outs
mov
sbb
or
lea
mov
cmp
sbb
ins
xchg
test
in
jp
sub
mov
adc
inc
aam
push
mov
push
ja
jns
rcl
into
das
pop
lock
jp
pop
fwait
adc
mov
or
leave
sbb
or
xor
rcl
pop
out
cld
fdivr
ins
push
jae
add
sbb
pop
jp
aad
sub
cmp
lea
loope
mov
mov
inc
push
sub
pusha
es
xor
dec
lahf
fiadd
dec
ja
adc
jae
mov
loope
adc
xchg
mov
jns
jge
mov
(bad)
std
mov
stos
mov
out
arpl
mov
sub
dec
dec
xchg
shld
inc
mov
inc
nop
mov
movs
mov
sahf
push
fistp
clc
xor
cs
mov
sti
sub
jmp
xchg
jecxz
or
dec
dec
jp
jbe
retf
xchg
cmp
lea
cdq
cmp
pop
mov
xor
or
xchg
xor
mov
imul
fs
push
stos
jecxz
ret
xor
inc
data16
pusha
jecxz
stos
xchg
imul
popf
loopne
loop
rcl
test
mov
aaa
lock
lds
movs
jbe
pop
push
push
and
movs
cmps
lods
jle
xchg
sub
adc
sbb
cmp
push
pop
pop
mov
hlt
mov
pop
clc
fadd
adc
inc
je
sub
inc
rol
(bad)
add
jno
sbb
stos
jl
jl
rol
js
cmp
inc
cwde
scas
jecxz
adc
(bad)
(bad)
movs
fidiv
push
jg
mov
imul
mov
(bad)
jecxz
popf
test
pushf
int3
jle
pop
inc
int
push
std
mov
in
dec
xor
out
pop
pusha
(bad)
mov
mov
fist
mov
or
cmp
mov
dec
adc
stos
and
push
inc
outs
xchg
jne
sar
dec
bound
sub
cmps
and
fild
sbb
cmp
sti
inc
adc
and
lods
push
movs
sub
repz
loope
cwde
cmp
(bad)
in
popa
and
je
or
mov
inc
ret
jmp
jae
icebp
pop
inc
inc
inc
aas
add
cdq
dec
out
retf
loope
fstp
pop
xlat
pop
xchg
jge
dec
push
aas
sar
jmp
xchg
mov
xchg
xchg
pusha
mov
inc
neg
add
pop
cdq
ss
sbb
xor
xor
sar
sub
pop
out
in
sti
fsub
in
mov
scas
mov
adc
cmp
inc
movs
adc
cmc
cmc
aam
and
pop
or
dec
jbe
fdivr
or
ret
xlat
or
dec
inc
pop
hlt
adc
sub
sub
scas
xchg
mul
or
idiv
jns
call
in
daa
push
jo
into
mov
icebp
mov
jne
mov
add
xor
sub
xchg
dec
in
bswap
shr
into
pop
ret
mov
rcl
adc
add
push
fs
dec
sbb
dec
mov
cs
sub
hlt
jl
retf
mov
ret
jmp
adc
in
imul
into
movs
push
dec
jne
rcr
cmp
xchg
ja
jl
dec
gs
xchg
and
jle
pop
fisttp
(bad)
fsin
push
out
aaa
cmp
das
sbb
mov
mov
es
(bad)
mov
mul
mov
rcr
inc
leave
stc
std
adc
outs
enter
mov
scas
(bad)
pushf
push
data16
fistp
cmps
out
inc
dec
pop
dec
mov
(bad)
mov
and
scas
bound
ret
stc
cmps
fadd
mov
mov
mov
icebp
movs
and
dec
mov
(bad)
cmp
call
test
outs
ins
ror
shl
loope
test
shl
pop
dec
xor
pop
jg
out
sub
neg
shl
jl
mov
pop
and
inc
outs
adc
dec
sbb
or
retf
pop
cmps
aad
jmp
mov
jns
pop
dec
ss
mov
jb
jae
mov
mov
or
inc
iret
pop
in
ret
aam
fcomp
sbb
pop
xchg
cmc
inc
jl
sbb
out
dec
hlt
fisub
xor
add
(bad)
loope
or
sbb
cli
adc
push
jmp
inc
je
and
mov
movs
adc
mov
jno
cmc
dec
ja
mov
xor
mov
ins
and
sub
pop
pop
jge
push
rol
cli
mov
(bad)
fldcw
mov
or
jp
adc
push
mov
imul
test
imul
out
mov
icebp
sub
xchg
fs
dec
push
clc
ss
dec
sti
adc
inc
iret
arpl
hlt
and
cld
(bad)
xchg
gs
in
out
(bad)
rol
sub
(bad)
mov
xchg
ret
ret
xchg
movs
inc
dec
adc
jno
inc
call
xor
ja
mov
(bad)
daa
xchg
jl
jae
pop
lock
or
stos
dec
and
add
movs
push
dec
push
cli
sub
(bad)
test
and
dec
loope
out
pop
mov
cmp
sbb
out
ins
call
sbb
mov
dec
jecxz
mov
jge
(bad)
or
and
iret
out
imul
out
popf
test
scas
cld
mov
mov
outs
jl
adc
add
and
jnp
arpl
ret
les
stos
adc
pop
cmps
and
jecxz
xor
lahf
sbb
fwait
mov
loopne
pop
frstor
push
mov
adc
mov
sub
push
jle
out
test
add
sbb
sbb
clc
ret
jg
ret
in
mov
inc
push
jg
add
bound
add
pop
jno
xor
xchg
sub
scas
mov
out
cdq
jns
push
jmp
pop
iret
mov
inc
call
and
mov
dec
lock
test
popf
inc
push
inc
lahf
pop
jp
in
pop
push
jno
cmp
push
js
xchg
movs
add
pop
movs
aaa
std
cmp
cmp
inc
add
data16
(bad)
data16
dec
sub
dec
cmp
fidiv
xchg
add
int3
aad
call
xor
lods
inc
mov
sub
loope
pusha
(bad)
sti
or
inc
das
(bad)
(bad)
retf
sbb
adc
cmp
mov
cdq
jnp
jnp
mov
es
loop
push
ss
jmp
dec
popf
add
xchg
leave
loope
and
(bad)
movs
and
or
mov
dec
dec
in
jns
sub
cdq
jl
xchg
add
sti
push
add
adc
mov
stos
xchg
lods
and
cli
out
xchg
bound
loopne
dec
adc
mov
push
sbb
(bad)
fwait
xor
retf
cmps
pop
out
mul
aaa
out
push
test
outs
mov
aaa
in
mov
mov
and
fnstsw
ins
pop
iret
mov
cs
call
mov
jg
je
inc
out
adc
dec
inc
push
push
mov
sbb
dec
data16
and
sbb
push
pop
jmp
cli
scas
idiv
daa
pop
enter
(bad)
pop
(bad)
lock
arpl
jno
lea
mov
stc
cmps
adc
push
and
push
imul
mov
mov
cld
and
pop
mov
pusha
ja
in
xor
outs
cwde
sbb
jp
adc
push
xor
dec
lahf
sti
sub
ds
fimul
jg
adc
sub
nop
test
xor
cmp
stc
fidivr
push
stc
sub
and
push
ficomp
or
sub
call
ds
pusha
icebp
outs
adc
mov
cs
xchg
jb
pop
pusha
lods
lods
shr
mov
add
xchg
xchg
xchg
je
dec
lods
jae
or
mov
sahf
xor
xor
or
cwde
out
inc
test
call
dec
mov
iret
add
pop
sar
pop
sub
stc
js
cmp
pop
pop
push
mov
ss
fidivr
mov
sbb
mov
xchg
jne
adc
jmp
xchg
hlt
lods
outs
int
cmp
pop
mov
popa
retf
pop
sbb
aam
dec
mov
xchg
pop
mov
in
vmwrite
in
mov
nop
dec
cs
push
inc
aaa
(bad)
pop
jge
sbb
pop
(bad)
loope
sub
repnz
scas
fcmovu
cli
icebp
test
loope
ret
push
sbb
mov
imul
pop
js
push
add
call
inc
pop
fwait
adc
retf
test
nop
ins
xor
jge
ret
jbe
xor
jno
das
push
mov
fadd
paddsb
into
inc
(bad)
jp
adc
mov
and
leave
pop
mov
iret
pop
movs
add
clc
dec
lea
push
push
mov
int
push
fisttp
cli
fldenv
shr
stos
dec
and
dec
push
add
jnp
adc
(bad)
dec
add
mov
call
mov
or
cmp
jle
iret
lea
jnp
jne
je
xor
movs
mov
enter
das
pop
daa
pop
jb
fld
jge
into
jecxz
loop
ret
int3
sbb
xchg
(bad)
jge
and
push
fs
int
inc
jp
pushf
aad
xor
gs
test
scas
inc
and
shr
push
outs
(bad)
std
cmp
mov
push
shl
pop
pushf
(bad)
and
sbb
pop
dec
pusha
dec
stos
xchg
ss
ins
cmps
mul
mov
mov
xchg
imul
shl
push
lods
test
jbe
add
out
mov
push
mov
es
xchg
xchg
int
cs
movs
stos
jb
hlt
in
addr16
jl
retf
fdivr
retf
xchg
inc
dec
outs
pop
les
icebp
test
dec
mov
pop
inc
jge
inc
add
ret
pop
iret
(bad)
pusha
pop
ror
dec
push
dec
xchg
xor
out
clc
mov
sbb
fcom
sti
xchg
outs
lahf
inc
test
sub
outs
fist
gs
sbb
xor
pop
or
lds
loope
pop
bound
or
icebp
mov
xlat
(bad)
sub
imul
mov
sbb
test
fwait
les
and
loop
sbb
xchg
movs
cs
rol
mov
mov
sbb
sub
mov
pop
mov
inc
rcl
mov
loop
ficom
repz
pusha
adc
xlat
and
adc
jae
adc
mov
call
pusha
call
cmp
outs
pop
fcmovnu
adc
fidivr
shr
xor
cmp
ret
sbb
fidivr
add
inc
fmulp
dec
push
sbb
sub
inc
mov
jg
lds
pop
std
repnz
cmp
loop
data16
and
aam
lods
xor
mov
dec
scas
pop
stos
pop
xor
nop
mov
out
aam
jmp
xlat
or
xchg
jmp
fisttp
lds
push
pop
cmp
ss
outs
mov
js
xchg
and
push
out
rsm
mov
push
sub
adc
(bad)
cmp
mov
ficom
dec
popf
cmps
xchg
aad
outs
nop
sub
inc
stc
xchg
fcom
out
or
cdq
ins
fstp
rcl
cli
sub
sbb
dec
dec
and
mov
daa
test
xchg
pop
jecxz
fldenv
(bad)
cmps
pop
inc
push
lahf
not
dec
inc
add
and
test
push
lods
fcompp
(bad)
push
add
mov
cld
scas
pushf
mov
sbb
inc
mov
add
retf
push
xchg
dec
ins
mov
outs
push
xlat
xor
sub
fmul
xlat
stc
test
imul
int
dec
or
add
jb
xlat
add
push
retf
mov
outs
jle
push
fsubr
add
call
addr16
clc
data16
and
push
dec
cdq
stos
imul
or
jbe
mov
mov
jg
and
mov
daa
shl
dec
retf
mov
push
pop
or
sub
pop
or
mov
repz
mov
mov
int3
jecxz
repnz
adc
mov
repz
dec
mov
stc
or
std
ss
and
inc
lea
repnz
stos
movs
jp
mov
xchg
pop
cmc
add
test
mov
lahf
sahf
jno
ds
out
push
ret
outs
mov
mov
inc
mov
or
aad
dec
cmps
icebp
jge
cmp
xor
jp
sbb
sbb
lods
ss
loopne
dec
out
les
pop
addr16
jno
cwde
push
mov
pop
and
out
push
jmp
scas
pop
loopne
mov
mov
or
pop
sti
or
cwde
ror
cmp
push
xor
repnz
xor
je
fstp
mov
aaa
ds
imul
test
add
je
xchg
fnstenv
mov
loope
sar
pushf
dec
jmp
loope
add
add
cmps
out
pop
push
popf
push
in
mov
rol
and
dec
push
and
fistp
shl
fpatan
add
repnz
(bad)
aas
xchg
scas
xor
mov
push
stc
mov
xchg
fisttp
xchg
(bad)
(bad)
pop
jbe
add
(bad)
fidiv
sbb
ss
xlat
cmp
mov
pop
mov
retf
gs
inc
ret
jg
outs
xor
adc
call
mov
mov
mov
pop
push
sbb
dec
mov
mov
adc
data16
fidiv
fcomp
stos
das
dec
mov
push
shl
dec
mov
push
je
sub
fdivr
jp
fist
in
add
xchg
aam
xor
add
jmp
pop
rol
jle
aam
sti
adc
dec
test
xchg
mov
mov
popf
mov
sbb
and
adc
cmp
cs
sub
sbb
inc
jp
xchg
mov
imul
dec
jne
push
inc
movs
dec
addr16
jge
adc
and
pop
in
adc
adc
ds
ret
out
inc
sbb
push
adc
je
and
leave
xchg
hlt
push
das
in
cdq
jg
shl
push
aas
push
jo
test
inc
or
and
jle
mov
loopne
dec
and
std
cmp
fisttp
push
mov
test
ds
in
mov
ins
adc
pop
ficomp
sub
pop
dec
jae
cmp
mov
pop
in
ret
adc
jge
retf
or
addr16
push
inc
movs
out
pop
cwde
cmc
enter
pop
sub
mov
jg
push
int3
das
(bad)
mov
add
mov
adc
or
enter
mov
repnz
xor
sub
mov
mov
ja
and
ins
retf
jle
jae
sbb
addr16
hlt
xlat
or
pusha
push
mov
jno
adc
ror
imul
adc
sbb
mov
fiadd
mov
stos
jmp
in
not
and
loop
out
jnp
jo
mov
sti
push
mov
sar
sbb
fst
push
adc
or
fdiv
neg
jo
lds
stos
gs
inc
dec
pushf
xor
in
cli
lock
xchg
ds
xchg
and
adc
mov
xlat
add
sbb
pop
aaa
outs
out
cdq
call
sub
(bad)
es
dec
sub
aad
jl
sub
mov
sbb
pcmpgtb
or
mov
dec
adc
sbb
xlat
imul
cmp
je
scas
xchg
dec
jns
mov
xor
cmps
nop
adc
out
sub
pop
xchg
jmp
jl
repnz
out
push
repnz
jmp
pop
sahf
addr16
enter
pop
in
stos
adc
pop
dec
dec
or
jmp
adc
loop
sbb
int
jl
mov
(bad)
jns
sbb
pop
mov
mov
jae
mov
jb
mov
data16
sbb
outs
push
mov
push
std
inc
sub
jno
xchg
js
push
jb
pop
adc
xchg
pushf
cdq
(bad)
nop
pop
adc
sti
mov
test
into
test
push
lea
xchg
pop
mov
cdq
mov
pop
pop
sti
outs
(bad)
and
lock
call
push
es
xor
xlat
int3
sbb
pop
mov
test
dec
pop
or
popa
sub
fs
cmp
repz
fnstcw
mov
adc
dec
dec
jo
stos
jb
dec
test
mov
mov
add
xor
gs
and
out
sbb
mov
adc
out
pushf
jns
call
sub
cld
cmps
addr16
sub
inc
lds
loope
push
ret
mov
pop
sub
jne
xchg
and
dec
add
jl
cld
aas
sub
pop
mov
aas
mov
mov
loop
test
cmp
addr16
dec
das
inc
xchg
pop
sbb
xchg
adc
(bad)
ret
fsub
popa
gs
rcr
popf
push
aaa
je
fstp
ins
mov
inc
enter
pop
inc
pop
clc
or
or
mov
fimul
sbb
or
jns
fstp
add
pushf
xor
stc
mov
xchg
pop
xchg
pop
pop
fadd
call
and
test
push
(bad)
scas
push
jl
or
pop
jb
mov
push
push
and
jae
cld
mov
sbb
inc
pop
int3
aam
jmp
or
xor
pop
mov
lea
mov
out
cmp
sub
adc
xchg
nop
or
or
call
mov
or
adc
shl
xor
sbb
sbb
mov
jmp
dec
fnstcw
cmp
pop
xchg
jg
clc
inc
cmp
movs
loope
fidiv
fisttp
mov
std
mov
not
add
pop
lods
cmps
dec
call
out
fcomip
jmp
pop
cmps
mov
in
pop
push
retf
scas
pop
fmulp
ds
out
inc
mov
les
loope
test
mov
icebp
(bad)
call
popf
fnstcw
enter
ja
or
and
add
mov
mov
data16
fild
mov
jbe
test
or
out
scas
or
lea
hlt
pop
push
jg
leave
jno
inc
push
jo
scas
pop
stos
push
das
test
push
mov
ins
add
ja
cmova
sbb
loope
nop
rol
scas
ret
lods
js
sbb
std
lods
out
xchg
dec
bound
je
adc
mov
sbb
cmc
inc
adc
cli
pop
call
xchg
js
in
xchg
in
repnz
xor
or
das
std
sbb
add
nop
pop
xlat
cmc
push
cmp
(bad)
int3
jno
push
ret
aam
jmp
loopne
test
in
cdq
jbe
das
mov
or
daa
lahf
sbb
(bad)
mov
pop
fldcw
in
mov
in
je
ins
mov
xchg
cmp
adc
push
out
pop
inc
out
(bad)
jmp
cmp
mov
aam
fcomi
and
bound
pop
vmovdqu
xor
xchg
rol
cdq
adc
repz
sar
dec
movs
xor
or
mov
das
cdq
or
sub
pop
enter
mov
icebp
xchg
loope
ja
push
aam
mov
xor
popf
push
aam
xchg
mov
daa
sti
adc
in
jns
movs
mov
and
and
aas
scas
dec
mov
and
and
es
jecxz
cs
and
jl
imul
mov
ins
sub
mov
sub
and
popf
(bad)
mov
fs
pop
mov
push
pop
jg
repnz
dec
mov
mov
mov
pushf
inc
cmp
xchg
inc
dec
hlt
adc
xchg
cmp
and
push
inc
outs
dec
sbb
add
outs
icebp
or
test
cwde
retf
mov
rol
pop
jb
ss
daa
maskmovq
test
mov
or
cmp
xor
inc
sbb
and
xor
pushf
adc
jl
fstp
mov
aaa
sub
in
js
mov
retf
mov
mov
xor
inc
arpl
jbe
mov
nop
cli
aam
out
and
outs
sub
pop
lds
call
xchg
into
jbe
lods
ret
cmp
or
mov
xchg
(bad)
cdq
fldenv
xchg
test
ins
stos
sbb
retf
ins
cmp
sub
(bad)
enter
mov
mov
and
sub
cmp
dec
push
pusha
pop
dec
fldenv
test
mov
jg
push
out
(bad)
clc
jns
lock
leave
out
pop
fcmovb
jmp
nop
(bad)
(bad)
and
pop
inc
sahf
jmp
stc
mov
push
dec
popf
dec
mov
inc
outs
aam
(bad)
(bad)
sbb
call
inc
xchg
ret
mov
push
(bad)
int3
call
das
sbb
push
jnp
dec
fisttp
inc
aas
in
mov
ss
sbb
mov
inc
pop
or
dec
jg
mov
adc
or
pusha
stos
and
dec
js
mov
xor
nop
adc
pop
dec
sub
sbb
dec
add
pop
stos
ds
cmp
idiv
jg
xor
repnz
das
fstp
adc
movs
sub
add
dec
add
jmp
aam
sub
stc
popa
out
mov
gs
xchg
hlt
sbb
push
fcom
jne
repz
xchg
jne
xor
mov
pop
stc
lods
cdq
sbb
lahf
icebp
sub
stos
aas
(bad)
call
in
mov
xor
js
pop
xor
(bad)
inc
jmp
add
cli
sbb
pop
pushf
in
sub
div
fld
cmc
fnsave
rol
nop
xor
call
jge
fdivr
jg
std
das
adc
and
mov
sahf
push
(bad)
adc
cmp
lds
ins
jmp
mov
pop
mov
xchg
mov
and
xor
dec
ds
pop
addr16
jo
int3
inc
loopne
cmps
cmp
cli
out
fldcw
jmp
pop
test
jmp
mov
sub
jg
pop
push
mov
mov
mov
imul
arpl
retf
fucomi
test
stos
outs
sbb
inc
jmp
mov
sbb
inc
sbb
dec
mov
gs
shl
or
push
add
add
xchg
inc
pop
das
cdq
inc
cld
aad
jb
xlat
or
std
pop
call
adc
push
call
xchg
outs
pop
in
mov
add
mov
xor
bound
push
xchg
std
dec
adc
into
mov
clc
jns
inc
jbe
or
jmp
lds
pushf
or
xchg
hlt
lahf
xor
ficom
cli
inc
test
xchg
(bad)
shr
dec
mov
xchg
sbb
or
not
ud1
loopne
sahf
fs
mov
(bad)
out
push
or
and
inc
daa
cmp
aad
fwait
mov
out
loope
jo
repz
or
ja
stos
das
gs
enter
lock
popf
mov
pop
push
push
ret
shl
or
xor
xchg
xchg
push
sub
bound
jae
addr16
out
adc
and
ins
add
dec
fucomi
in
ja
clc
(bad)
cmps
aad
xchg
dec
push
rol
(bad)
sub
lea
xor
mov
js
aas
xor
cpuid
fwait
push
in
ret
mov
sub
sbb
daa
jmp
mov
xchg
movs
mov
test
or
dec
mov
imul
imul
mov
push
or
jmp
or
xor
add
nop
ret
bound
push
clc
sti
movs
xchg
dec
std
xchg
inc
sbb
push
mov
loopne
retf
push
sub
ds
cld
add
imul
clc
sar
pop
out
xor
pusha
push
int3
(bad)
rcr
addr16
jmp
repz
mov
cwde
dec
adc
out
scas
push
xchg
mov
ret
mov
and
xchg
aam
cs
lock
imul
and
arpl
sbb
mov
or
rcl
inc
lods
add
pop
push
ss
xchg
sbb
mov
hlt
pop
(bad)
cmp
enter
cmps
ins
or
popf
loopne
les
mov
test
add
(bad)
lock
les
push
xor
repnz
loope
xchg
popf
xchg
xor
dec
mov
(bad)
jae
ret
cmp
scas
ins
outs
or
retf
movmskps
in
iret
push
test
adc
and
inc
int
xlat
sub
mov
pop
ss
xor
and
push
cmp
(bad)
cld
mov
mov
xor
push
mov
xchg
lea
add
sbb
in
xor
add
adc
push
cmps
cmp
call
jle
jne
xchg
mov
inc
or
fbstp
push
les
std
ins
cmps
pop
nop
enter
mov
rep
fidiv
sub
dec
mov
xchg
out
jg
xchg
jl
stos
rcl
and
sbb
test
xchg
jp
in
mov
les
sub
pop
pop
in
retf
pminub
lea
dec
mov
(bad)
(bad)
cmp
dec
dec
fbstp
pop
and
mov
inc
addr16
jmp
xor
mov
ins
mov
scas
xchg
push
(bad)
aaa
je
mov
retf
arpl
out
aam
inc
in
sbb
neg
es
xchg
or
xor
inc
push
cld
add
sbb
and
aad
cli
clc
dec
push
rcr
mov
add
dec
inc
fadd
cmp
push
xor
and
int3
push
or
mov
xor
sub
sub
jo
inc
and
test
rcl
mov
cdq
xchg
push
hlt
in
pop
adc
add
jo
pop
(bad)
les
cmps
mov
rdpmc
or
es
in
popa
sbb
cmp
imul
mov
jns
shl
outs
and
xlat
in
cld
xchg
jl
test
mov
xor
and
in
ins
push
add
sbb
cmps
adc
or
out
std
ss
jg
jmp
mov
les
pop
movs
sub
in
loop
out
add
mov
lods
cld
leave
fidivr
inc
xchg
sbb
add
sub
out
xor
aam
lea
jecxz
lea
xchg
addr16
xchg
faddp
push
imul
push
fwait
leave
jg
fsubr
inc
dec
sbb
stos
popf
xchg
and
add
cmp
stos
inc
lea
xor
fld
cmp
inc
pop
test
out
xor
stos
ret
int3
mov
xchg
jecxz
mov
push
aad
neg
jle
mov
cdq
retf
pushf
loopne
leave
push
popf
test
or
out
cmp
xor
adc
je
adc
dec
pop
pop
popa
js
adc
xchg
cmp
push
shr
aad
aad
loope
adc
in
mov
jmp
or
push
and
inc
sub
add
adc
retf
mov
loop
test
cli
push
xchg
retf
sub
ss
xor
or
call
call
(bad)
lahf
jecxz
dec
adc
stc
or
or
add
pop
cmps
pop
les
loopne
sub
into
out
sub
push
pop
cmp
repnz
(bad)
xor
call
imul
adc
and
sbb
jne
js
push
ins
or
pop
dec
push
lds
dec
xor
mov
jecxz
xor
mov
inc
out
mov
clc
push
jmp
adc
dec
jp
mov
jl
cli
imul
call
mov
dec
xchg
(bad)
push
push
ins
mov
fisub
clc
sub
fucomip
push
fwait
call
push
inc
pop
int3
push
stc
pushf
das
xchg
or
or
pop
xor
jne
or
and
(bad)
pusha
and
jb
mov
je
retf
out
out
push
(bad)
repnz
es
(bad)
aam
int3
iret
rcr
dec
mov
mov
xor
mov
aam
mov
pop
shl
pop
add
xchg
js
mov
cmp
push
push
or
push
out
nop
or
(bad)
das
jb
pop
pop
stos
and
mov
push
dec
push
aad
adc
icebp
dec
or
aas
cmp
test
sahf
dec
sti
dec
sbb
jnp
cmp
or
retf
xchg
ds
pop
dec
repz
jg
mov
div
retf
mov
fsin
pop
enter
adc
inc
jns
xor
push
push
dec
push
adc
or
xor
push
mov
push
test
xchg
retf
je
jmp
adc
dec
hlt
rcl
xchg
mov
xchg
push
in
neg
jae
pop
and
mov
clc
jg
aad
fldcw
lahf
and
inc
lea
jmp
loope
xchg
jle
sbb
clc
adc
adc
jbe
(bad)
stc
in
fnstenv
pop
push
sub
pushf
sub
cmp
adc
neg
mov
scas
xchg
cdq
adc
retf
pusha
jecxz
mov
inc
sub
and
jl
mov
mov
mov
clc
push
ror
sub
mov
ja
add
(bad)
cs
sahf
pop
cmps
mov
loop
cli
out
mov
popf
lds
leave
and
xchg
push
and
shl
lods
imul
in
sub
pop
pop
fs
das
push
inc
cs
lea
or
psrlw
fist
mov
arpl
mov
pusha
dec
mov
xchg
cmp
mov
or
dec
jl
or
sbb
xchg
lds
push
push
pop
int
mov
cmp
adc
lods
mov
xchg
dec
or
push
xchg
mov
sbb
jmp
mov
repz
jno
dec
xlat
adc
add
mov
std
fwait
inc
sbb
pop
add
ror
push
cwde
mov
fisttp
enter
lods
mov
add
das
mov
push
scas
mov
(bad)
pop
imul
and
mov
or
addr16
mov
lods
jns
adc
inc
sub
push
sbb
ins
rol
cmp
and
jge
mov
push
push
pop
pop
outs
xor
pusha
(bad)
imul
movs
mov
push
fist
cmp
sbb
test
in
push
add
mov
and
fcmove
dec
bound
pop
out
fisub
mov
cmp
push
jno
jmp
idiv
pop
pop
or
leave
dec
test
fistp
cmps
adc
jmp
mul
popa
repnz
into
or
call
sub
imul
xor
iret
je
add
(bad)
popf
out
mov
pop
ja
es
adc
movs
adc
cdq
cli
jge
cwde
ds
and
push
pop
push
sbb
and
jecxz
les
shl
mov
enter
pop
jae
sbb
jns
xor
xchg
je
mov
sub
call
jmp
data16
dec
sbb
adc
add
sub
lds
and
pandn
push
dec
data16
(bad)
mov
and
sub
xor
(bad)
retf
dec
ret
adc
retf
jmp
ins
adc
and
cli
dec
xchg
ret
test
mov
mov
push
xchg
mov
mov
les
ss
sbb
pop
push
jmp
jns
inc
xor
pop
inc
cmp
mov
inc
les
xchg
cmc
xchg
stos
and
mov
loope
push
(bad)
mov
rcr
push
jl
cdq
mov
movs
inc
in
(bad)
or
test
xor
aaa
cs
enter
xchg
dec
sbb
rol
jb
mov
fs
dec
pop
xlat
inc
mov
lock
aad
cs
cdq
repnz
movs
and
sub
add
int
out
adc
aas
movs
pop
outs
pushf
stos
jl
xor
cmps
inc
lock
push
test
adc
test
and
inc
fnstcw
pushf
lods
movs
das
ret
jns
mov
aam
es
cld
aad
xchg
sbb
xor
mov
retf
xor
(bad)
test
aad
test
dec
inc
ror
imul
sbb
imul
leave
push
fcmovne
pop
jno
mov
imul
mov
out
mov
add
fcomp
push
test
adc
mul
jns
arpl
fadd
pop
inc
dec
push
lods
pop
or
dec
aam
jbe
mov
push
test
push
sti
repnz
outs
dec
cld
lods
push
jge
or
fdiv
fwait
push
push
inc
dec
xor
xchg
cmps
(bad)
inc
lock
add
mov
dec
aam
ds
mov
out
mov
fmul
lods
hlt
adc
in
push
rcl
outs
out
mov
cmp
mov
or
pop
repz
cdq
xlat
sbb
dec
sub
xchg
jnp
call
mov
(bad)
jne
leave
xchg
out
stos
xor
bswap
pop
sbb
and
xchg
cmc
mov
dec
pop
pop
dec
aam
add
mov
scas
ja
daa
adc
ja
in
aam
test
cld
jp
inc
pop
imul
sub
pop
dec
xchg
jecxz
adc
xchg
stc
js
mov
mov
mov
ins
inc
mov
call
mov
scas
and
sar
cwde
xor
pop
add
pop
retf
(bad)
push
dec
imul
stos
retf
mov
iret
rcr
cmp
cmps
push
std
daa
std
pop
(bad)
mov
add
sti
pop
iret
aad
data16
xor
fsub
mov
dec
xor
or
inc
jg
mov
sti
jl
stc
mov
xlat
mov
addr16
pop
inc
bound
jnp
push
mov
and
clc
movs
xchg
lahf
mov
pop
jecxz
add
and
enter
sub
push
test
daa
mov
mov
pop
pusha
dec
das
neg
cmp
mov
xchg
lods
jle
sub
daa
push
(bad)
dec
jmp
in
add
movs
mov
push
sbb
ror
sar
mov
and
imul
jbe
dec
mov
loopne
mov
push
cdq
ror
inc
xchg
push
bound
inc
sbb
aaa
xor
inc
int
movs
cmp
or
or
cmp
xchg
lea
out
out
ja
sbb
mov
aas
push
test
jno
fwait
mov
(bad)
(bad)
das
push
adc
dec
out
xchg
call
nop
dec
sbb
mul
call
sub
scas
bound
sub
pop
xor
outs
fadd
sahf
(bad)
stc
mov
repz
xchg
mov
dec
pop
out
lds
add
xchg
ins
mov
stos
mov
adc
lea
sbb
mov
repnz
jo
js
xor
retf
or
mov
(bad)
nop
fldenv
lods
fldenv
test
imul
mov
aad
daa
or
dec
adc
and
aam
scas
mov
hlt
mov
mov
jae
mov
imul
dec
lahf
pop
ret
daa
cli
in
in
icebp
cmc
rol
cmp
xor
out
inc
pop
sub
rcr
cmp
jne
jle
and
or
out
cmps
sahf
ror
push
scas
mov
jno
(bad)
fnstcw
fidiv
push
jnp
mov
mov
call
in
pop
xor
xchg
pop
add
mov
std
pavgw
ret
gs
sub
icebp
jno
push
stos
arpl
push
test
cmp
rcl
outs
and
jb
cmps
ins
js
adc
xchg
or
mov
xor
mov
dec
lahf
scas
sub
stos
cmps
pusha
inc
mov
fwait
movs
stc
dec
ds
mov
sub
pop
pop
ins
pop
je
ds
fisub
rcr
cs
ror
gs
pop
fst
lods
mov
jae
or
std
mov
loop
jne
sub
mov
data16
jl
pop
loopne
pop
das
push
ja
jmp
test
sbb
pop
sub
jmp
in
push
ja
or
retf
out
jo
mov
inc
cmp
and
stos
add
adc
or
adc
dec
stc
int
popa
jae
std
cmp
lods
xor
ffree
out
les
imul
ins
in
aam
fwait
push
sti
pusha
mov
fwait
rol
jg
fidiv
jbe
and
idiv
rcl
sub
cwde
jne
test
and
in
push
mov
lahf
sub
movs
dec
jle
dec
lods
outs
jae
in
mov
or
stos
in
sbb
aaa
mov
int
sub
add
arpl
mov
hlt
mov
in
aad
ins
xchg
cmp
mov
ds
add
nop
push
sbb
dec
mov
xor
and
fisub
aas
mov
(bad)
fptan
loope
add
xchg
xchg
ret
push
sub
idiv
jne
jmp
jae
cmp
or
repz
pop
mov
arpl
lods
nop
in
addr16
sbb
xchg
add
fst
cmc
shl
dec
pop
test
retf
xor
cdq
push
xchg
in
fs
mov
xchg
xchg
push
mov
loopne
push
out
imul
daa
push
(bad)
aam
lds
jmp
std
push
mov
pop
test
add
mov
lods
and
jp
adc
(bad)
cmps
mov
dec
mov
aam
adc
pop
and
sti
adc
in
mov
(bad)
sbb
js
dec
sub
jnp
cmp
push
shr
mov
arpl
mov
mov
xchg
xlat
sbb
xchg
xlat
xor
mov
out
inc
mov
cmc
daa
ss
div
(bad)
retf
and
ret
sbb
rol
or
cli
cli
dec
stc
ins
icebp
jns
inc
fiadd
dec
xor
(bad)
mov
adc
mov
xor
mov
mov
repnz
jp
(bad)
xor
cmps
xor
sbb
pushf
mov
adc
mov
loope
inc
(bad)
pop
repnz
rol
xchg
xor
cmc
push
inc
repz
dec
inc
lds
push
push
mov
pop
inc
mov
push
std
int
retf
mov
pop
mov
mov
jns
sbb
pop
fxam
xor
cmp
sti
ins
and
repz
daa
cmp
movs
sub
cmps
test
aad
jl
fidiv
shr
dec
repnz
rol
add
xchg
lods
mov
or
out
mov
sub
pop
xor
dec
sub
(bad)
lock
cmps
daa
rcl
gs
in
lock
pop
stos
hlt
sbb
out
sbb
aaa
or
test
mov
push
jge
addr16
cmp
mov
nop
fnop
popf
pop
add
push
test
dec
cmc
add
lods
or
dec
loope
fwait
shl
loopne
popa
div
sbb
adc
imul
add
jnp
dec
adc
jb
inc
cmp
cdq
mov
fcmovne
in
ret
test
fcomp
sbb
(bad)
pop
sbb
ja
sub
mov
lahf
sti
lock
in
pushf
test
sahf
cmps
pop
inc
dec
inc
test
iret
cmc
or
popa
sub
jp
sbb
or
pushf
ins
(bad)
pushf
pop
xchg
cmps
mov
(bad)
pushf
ss
ds
movs
stc
add
mov
pop
cmps
sar
jmp
sahf
lahf
mov
imul
jbe
ins
mov
xchg
loopne
scas
cli
add
mov
cmp
dec
push
lock
or
push
popf
xchg
shl
push
and
inc
mov
jecxz
pop
stos
aad
jb
and
lock
(bad)
xor
inc
cmp
mov
ss
adc
inc
jb
ret
adc
mov
push
fild
daa
test
imul
mov
and
mov
mov
mov
shl
shl
sbb
sbb
fcmovb
mov
fadd
inc
xchg
xchg
inc
mov
stos
jne
mov
clc
shr
or
mov
sbb
sub
mov
inc
cdq
and
mov
dec
aaa
adc
(bad)
cs
dec
xor
outs
adc
pop
fwait
movs
xchg
or
add
push
repnz
ins
add
repnz
test
adc
push
jne
mov
jbe
adc
xchg
(bad)
mov
ja
jb
out
or
or
inc
ins
jns
push
sub
push
repz
dec
lahf
call
fnstcw
push
push
int3
stos
(bad)
fisubr
nop
(bad)
jecxz
loopne
jns
jmp
adc
jns
or
sub
sbb
sub
or
pop
adc
scas
cmps
mov
mov
test
std
(bad)
and
cs
sbb
lods
add
mov
xchg
icebp
aaa
cmp
cmp
jl
xchg
xor
xchg
pop
retf
sbb
cs
pop
sbb
das
push
out
pop
popf
outs
lds
sbb
bound
repnz
mov
xor
popa
sbb
ss
sub
loope
pop
jnp
ins
inc
aam
call
fst
leave
adc
in
leave
push
aam
push
sub
aam
or
adc
(bad)
cmps
stos
push
fnstsw
cwde
push
ror
xchg
cmp
shr
mov
and
jle
cdq
jg
int
adc
js
mov
clc
loop
sub
sub
adc
jmp
mov
mov
add
push
push
mov
rol
pop
mov
or
adc
shl
sub
(bad)
inc
push
add
sahf
cdq
ja
sbb
cmp
aaa
mov
movs
jnp
inc
xchg
mov
pop
dec
mov
rcl
lahf
mov
or
jne
pop
(bad)
sbb
xchg
jnp
popw
inc
fdiv
and
in
mov
push
lods
scas
cdq
inc
lahf
mov
lods
repnz
lahf
add
sahf
inc
punpckldq
jae
mov
cld
lea
lods
jge
mov
lea
popa
push
stc
je
mov
movs
out
fs
push
out
icebp
sbb
dec
and
mov
outs
shr
retf
jp
test
pusha
xor
aam
loope
xor
pop
mov
aas
sbb
loop
sbb
sbb
stos
push
xor
lods
out
pusha
sbb
leave
lock
cmps
(bad)
scas
test
fcos
repz
dec
dec
int3
mov
inc
push
imul
(bad)
sahf
and
popf
fucomi
call
call
xchg
inc
mov
cmp
fistp
popf
xchg
lahf
loope
scas
xchg
lds
je
and
(bad)
mov
push
sub
push
mov
dec
xchg
mov
pop
xchg
jo
addr16
push
les
cli
cmps
mov
add
push
xchg
cwde
inc
arpl
pop
mov
inc
(bad)
out
ss
rcr
inc
xchg
rcl
int3
cmps
xor
or
inc
ja
or
add
add
mov
xchg
pop
(bad)
fdiv
(bad)
int
xor
popa
(bad)
out
out
cmp
jge
jmp
cdq
and
mov
aaa
int3
aaa
inc
sbb
jne
mulps
sbb
jbe
push
xchg
imul
cwde
ins
mov
lea
(bad)
fidiv
sub
xchg
add
(bad)
fsub
jecxz
xor
in
pusha
add
or
push
iret
leave
fs
pop
scas
or
addr16
fsub
mov
iret
or
cmp
dec
pop
adc
test
sbb
pop
inc
lock
lahf
ds
out
jo
(bad)
and
pop
push
lahf
jo
fwait
lds
vshufpd
xor
dec
ds
inc
mov
fcomp
jge
add
inc
in
cmps
mul
mov
and
jnp
aam
inc
jns
jmp
sub
push
cmc
call
cmc
adc
and
rol
cli
test
or
mov
add
pushf
icebp
iret
cmp
aad
mov
(bad)
sub
cld
sub
jmp
adc
fisub
jle
push
or
pop
jmp
add
iret
sub
sar
dec
fwait
cli
cli
ins
and
jle
pop
sub
lahf
cld
int
jecxz
fild
xchg
push
stos
xor
lahf
jmp
(bad)
jl
jnp
xor
push
shl
mov
daa
jmp
rol
call
and
cmc
and
(bad)
inc
ds
mov
push
hlt
adc
cld
sbb
aas
sbb
inc
sub
pop
mov
cmp
imul
test
xchg
shl
sbb
enter
cwde
out
adc
in
in
lods
or
sbb
leave
pop
mov
stos
xor
mov
push
adc
lods
mov
aas
rol
fmulp
inc
sub
push
shl
push
jbe
dec
scas
or
push
mov
movs
nop
sub
les
sub
aam
pop
add
push
call
add
sbb
lods
or
cwde
cmp
cmps
fcomp
sub
int3
adc
and
sar
enter
mov
inc
stos
and
push
sub
mov
cld
sbb
jge
sbb
imul
iret
in
loope
add
test
add
mov
pop
fwait
out
jbe
in
pop
sub
fild
call
enter
cmp
jno
jno
pop
repnz
sub
inc
mov
out
icebp
mov
in
das
adc
lahf
or
mov
je
dec
ss
(bad)
adc
cs
sbb
mov
lea
or
xor
shl
vpmuludq
sub
mov
lock
call
int
jp
aaa
sti
lock
outs
aaa
mov
jbe
jecxz
jecxz
sub
fwait
xchg
push
adc
es
pop
sub
frstpm(287
xor
xchg
pushf
fwait
cld
dec
ds
fmulp
std
jg
std
icebp
dec
jecxz
dec
pop
ja
jnp
and
mov
inc
test
mov
idiv
push
std
add
out
xchg
movs
call
push
(bad)
mov
adc
fwait
push
adc
inc
bound
(bad)
stos
xchg
mov
jp
lods
jl
mov
and
jb
dec
inc
xor
xchg
dec
jns
fwait
mov
fstp
jp
in
(bad)
mov
push
loope
cmp
lea
jmp
inc
push
adc
mov
pop
cmp
xchg
cmc
inc
fucomp
mov
pop
fstp
mov
repz
test
sbb
ror
mov
out
mov
in
retf
inc
push
add
push
test
stos
stos
adc
and
adc
aas
es
inc
(bad)
lock
add
into
test
xchg
add
or
push
imul
loope
stos
mov
call
retf
pushw
test
mov
gs
mov
mov
and
adc
retf
jl
push
inc
mov
lods
dec
pop
int3
push
sbb
ins
mov
shr
push
out
pusha
call
in
aas
lds
xor
inc
int3
jbe
add
add
sub
xchg
jae
adc
dec
iret
cmp
mul
mov
repnz
retf
call
lds
inc
(bad)
clc
out
ins
and
rol
popf
lock
aas
push
mov
cwde
leave
repnz
inc
dec
sbb
fidiv
mov
test
jge
jo
cli
adc
iret
push
lds
add
daa
mov
movs
popf
xchg
mov
shl
mov
data16
int
mov
out
push
cmp
xor
sub
push
xchg
(bad)
and
mov
in
iret
fnstcw
push
sbb
inc
xor
outs
xchg
cmps
or
fisub
and
sub
pop
mov
cmps
adc
stos
in
call
jne
stos
movs
call
pop
enter
lea
popa
mov
div
test
xor
inc
sbb
ror
in
addr16
adc
push
adc
fnstcw
mov
popf
or
sbb
pop
aas
or
jmp
das
add
into
push
push
sub
jno
pop
loopne
and
add
addr16
sub
ss
jne
fwait
lods
jno
jnp
mov
xchg
xchg
neg
out
arpl
adc
sub
xor
into
out
or
dec
mov
mov
push
lock
jle
pop
jp
mov
sub
xor
adc
jecxz
sub
add
push
leave
and
sub
pop
shl
int
sti
call
js
shr
adc
or
shl
push
shl
popf
mov
retf
xchg
push
jmp
mov
pop
fnstenv
pop
jns
fcomp
daa
pop
daa
push
ficomp
stos
jl
fs
dec
fld
hlt
xor
push
xchg
cdq
mov
pop
add
adc
bound
jmp
or
or
pusha
shl
sbb
in
je
jle
dec
aam
mov
sahf
popa
xlat
into
xchg
sub
xchg
cmp
cmps
pop
inc
jmp
mov
xchg
add
bound
shl
test
cwde
or
jge
or
and
mov
movs
(bad)
(bad)
xchg
data16
mov
test
adc
clc
stos
sahf
xor
jl
outs
and
sub
ror
cmc
int3
mov
jle
jge
pop
aad
jne
xchg
out
mov
pop
mov
pop
push
xor
dec
pop
clc
jmp
ror
in
pop
push
fild
dec
bnd
mov
push
stos
in
xchg
call
cmp
pop
adc
out
cmp
in
icebp
fisttp
retf
sbb
inc
repnz
mov
enter
mov
adc
pop
xchg
int3
mov
inc
cld
dec
imul
cld
add
jg
sahf
cmp
(bad)
(bad)
xor
mov
jecxz
add
loope
sti
iret
cmp
inc
mov
loope
mov
test
in
jnp
repz
jge
daa
mov
ret
or
stc
mov
push
mov
jl
(bad)
enter
cmp
pop
push
push
sub
jns
cmp
retf
icebp
stc
push
or
inc
or
mov
jle
int
loop
je
loopne
or
sub
mov
or
mov
fidivr
pop
scas
inc
shl
xchg
sub
cwde
sbb
in
jg
jp
ds
inc
jmp
out
inc
clc
adc
mov
cmp
sub
cmp
je
cmp
pusha
pop
xlat
adc
or
daa
xchg
fcomp
inc
adc
inc
fmul
inc
cmp
sti
jae
cmps
fld
icebp
and
das
repnz
cmc
mov
maskmovq
test
sub
pop
ret
inc
jge
push
std
or
jmp
das
dec
in
mov
mov
mov
jge
stos
fistp
dec
stc
test
rcl
ins
test
sbb
xchg
frstor
inc
test
adc
cmp
or
scas
mov
mov
add
inc
stos
cmp
and
sbb
cmps
pusha
inc
je
ja
cli
add
cli
out
idiv
or
xchg
stc
je
or
cs
jp
jmp
(bad)
aaa
daa
mov
and
fbld
sub
(bad)
mov
push
add
xor
loope
lods
add
mov
test
jne
jmp
sbb
cmp
sub
mov
inc
scas
jmp
dec
jle
(bad)
sub
in
(bad)
push
lea
or
push
je
cmps
les
rol
jb
lea
pop
enter
test
pop
shr
div
or
add
imul
(bad)
fist
cdq
dec
and
or
pop
aad
icebp
sti
lods
sbb
sti
mov
gs
sub
inc
mov
stos
or
pop
xor
and
push
sub
stos
in
lea
push
jl
pop
mov
cld
pop
mov
sbb
add
adc
pop
mov
fmul
loop
nop
retf
dec
jnp
loop
data16
repz
or
dec
cmp
stos
test
(bad)
shl
aad
retf
jge
adc
fstp
mov
bound
test
lods
adc
mov
movs
push
push
fnsave
in
sub
inc
mov
xchg
fs
arpl
in
hlt
popf
into
or
inc
fsubrp
jge
dec
mov
dec
sub
fwait
out
repz
inc
push
loop
outs
mov
xor
xchg
sbb
jnp
es
cld
adc
in
nop
movs
aaa
loopne
push
call
mov
loop
ss
sub
jae
addr16
sub
mul
xor
test
push
pop
inc
inc
push
data16
lods
cwde
mov
ins
sbb
sub
(bad)
out
lods
ror
mov
in
loop
xor
xor
cmps
mov
cmp
dec
pop
mov
movs
add
js
mov
jb
sub
aad
lea
int3
mov
sub
push
repz
int
mov
mov
dec
mov
add
xor
in
and
call
sbb
cmp
jo
test
sbb
ror
fst
mov
out
xor
xor
inc
or
inc
cwde
scas
adc
hlt
sbb
cwde
lods
inc
xchg
inc
les
push
(bad)
int3
cmp
xchg
mov
fs
push
loope
int
icebp
div
dec
dec
sub
mov
cmp
dec
or
bsf
xchg
stos
movs
ret
add
loop
dec
jne
cld
cmp
and
sbb
xor
mov
pop
mov
xor
xchg
mov
cdq
cs
add
mov
add
scas
adc
repz
cmp
xor
scas
shl
push
retf
mov
dec
cli
cmp
shl
xchg
mov
push
inc
and
dec
inc
in
dec
sbb
mov
(bad)
(bad)
xchg
jmp
jne
inc
and
popa
out
mov
neg
and
or
pop
inc
ret
cs
daa
pop
push
mov
xchg
out
imul
add
add
fcomp
in
mov
push
bound
pop
cmc
cmp
xchg
add
push
push
pop
push
sub
sbb
fst
(bad)
cmp
fstp
mov
(bad)
loope
inc
push
aaa
aad
loopne
clc
inc
add
das
xchg
mov
out
adc
scas
idiv
lahf
mov
jecxz
sub
cmp
nop
fisubr
cmp
arpl
xor
and
in
sbb
stos
and
ins
aas
and
sub
sbb
xchg
or
lea
xchg
xchg
push
ds
mov
push
into
das
mov
mov
out
jno
jg
retf
outs
xchg
iret
mov
repz
adc
sub
sbb
sbb
dec
std
(bad)
je
pop
sub
pusha
or
jae
rcl
or
inc
rcr
and
inc
aaa
ins
sbb
retf
xchg
addr16
sti
data16
repz
cmp
sub
push
lods
cmp
out
int3
les
sub
mov
or
and
loope
das
push
push
fwait
mov
fst
out
mov
mov
mov
retf
(bad)
ror
icebp
and
sub
pusha
ret
or
cmp
sub
push
or
xchg
retf
and
xor
mov
fdiv
stos
mov
or
jg
or
add
arpl
and
inc
mov
mov
push
cmp
jmp
(bad)
popf
movs
cmp
xchg
and
add
dec
shl
in
jnp
ret
jbe
shl
dec
nop
jno
pop
adc
xchg
shl
jno
add
not
cmp
cmps
add
cwde
rcl
mov
mov
ja
aas
jo
jo
out
cld
mul
into
jmp
lods
and
or
pop
sub
pop
scas
inc
out
out
cmp
int
pop
ds
icebp
ins
xor
cmps
in
mov
stos
mov
shr
fcom
ins
ret
and
sbb
iret
mov
(bad)
mov
test
adc
data16
in
xor
jmp
mov
jle
test
jnp
mov
mov
ss
test
or
inc
mov
jae
push
(bad)
aam
ret
mov
mov
jg
ins
popa
or
xchg
sub
dec
xchg
and
data16
rol
sub
pop
xchg
imul
inc
xchg
or
dec
cmp
pop
fdiv
out
push
mov
inc
dec
mov
adc
mov
xchg
in
lods
mov
push
in
mov
into
jl
push
adc
pop
jns
mov
jae
mov
adc
jmp
adc
or
clc
or
fidivr
sub
pop
add
push
push
popf
sub
jg
clc
and
leave
fs
add
test
xor
fs
xor
fcmovne
fild
pushf
pop
and
mov
jg
loope
dec
jnp
pop
or
pushf
mov
or
xor
outs
mov
cmp
jmp
and
mov
xchg
pop
aam
movs
aas
mov
imul
inc
pop
xchg
inc
dec
mov
cmp
xchg
cmp
sbb
mov
dec
lock
test
es
movs
fiadd
sbb
fwait
pop
add
push
jb
cmc
cmp
ret
push
fst
(bad)
lgdtd
push
test
out
(bad)
stc
push
add
jp
pop
lea
sub
sbb
sub
inc
push
xchg
lds
fst
out
xlat
push
inc
sbb
jl
mov
mov
ret
xor
inc
pop
mov
test
mov
jo
scas
data16
jle
repnz
jbe
pop
mov
(bad)
and
adc
popf
mov
es
dec
(bad)
mov
cmp
xlat
out
loope
cld
jb
out
dec
cmc
and
call
enter
push
cwde
adc
mov
cdq
pop
out
mov
(bad)
xchg
dec
pop
sar
sar
jne
xchg
sub
push
push
push
pop
cs
fsub
lahf
ins
cmc
retf
sbb
pop
or
(bad)
sbb
gs
cwde
cwde
cmps
aam
inc
in
xor
dec
shl
movs
cli
sub
fadd
mov
add
sbb
mov
addr16
lock
or
jg
retf
aas
pushw
clc
sub
mov
push
fisubr
pop
mov
push
jbe
out
adc
test
mov
aas
rsm
(bad)
in
add
xchg
repnz
ds
or
aam
push
sbb
mov
jp
jns
shl
in
adc
je
mov
jg
inc
addr16
adc
add
sbb
xchg
fadd
dec
fsubrp
(bad)
mov
adc
and
leave
jp
pushf
adc
in
push
mov
push
sbb
xchg
in
fdiv
inc
movs
rcr
jmp
adc
jno
dec
clc
mov
push
lds
mov
mov
in
xchg
xor
in
(bad)
pop
and
(bad)
in
mov
mov
js
add
das
aaa
mov
(bad)
mov
dec
movs
jns
adc
sahf
push
rcl
sbb
jl
rcl
adc
scas
adc
fdivr
aas
pusha
loop
or
or
mov
dec
cld
jmp
push
xlat
sub
and
jns
out
pop
inc
mov
ficom
push
adc
pop
mov
cmp
xlat
sbb
xchg
push
mov
js
xchg
sub
mov
in
push
int3
js
dec
icebp
std
aaa
int
add
sub
lock
mov
retf
inc
sub
inc
call
js
stos
xchg
lods
mov
cmp
push
popf
jb
xchg
or
adc
aas
add
push
sbb
push
jg
test
pop
or
(bad)
into
aas
imul
adc
or
mov
mov
retf
(bad)
jle
fcmove
xchg
inc
mov
cmp
cmp
jns
add
jns
hlt
sbb
sbb
push
vmread
xor
or
mov
sub
pop
inc
stos
sahf
push
mov
fistp
pop
pop
xlat
xlat
inc
push
pushf
mov
jae
mov
dec
adc
pop
call
out
ret
aam
mov
mov
jp
cmp
jno
inc
xor
es
pop
ins
sub
out
fld
jecxz
imul
jb
fistp
jge
fdiv
imul
(bad)
mov
mov
ror
cmps
sub
xor
xor
mov
cmp
jg
hlt
xor
mul
ror
lods
sub
lock
je
test
stos
add
fidivr
gs
out
push
push
jb
mov
or
cwde
es
loop
pusha
sbb
add
push
movs
pusha
das
jge
mov
(bad)
cdq
pop
test
ficom
mov
inc
xchg
dec
hlt
pop
not
gs
sahf
loop
pop
mov
pop
pop
mov
dec
ror
pop
inc
mov
cmp
add
sub
loope
add
pop
(bad)
adc
ss
pop
hlt
dec
jge
nop
push
call
or
test
mov
push
aad
addr16
dec
mov
jl
inc
test
sub
mov
and
pop
int3
jle
push
mov
je
test
push
push
xchg
cmp
jo
ins
push
(bad)
cmps
call
xchg
inc
or
test
jae
and
gs
push
imul
cmp
xchg
and
or
mov
outs
add
(bad)
fst
or
outs
mov
xchg
sbb
inc
mov
mov
test
push
sub
add
lods
add
retf
lds
inc
xchg
xor
enter
lds
add
enter
fnstcw
add
adc
inc
or
dec
jmp
mov
mov
cmp
pop
dec
fmul
sbb
push
clc
into
cmp
call
pop
ja
or
shr
jne
sbb
or
gs
or
push
cmp
dec
clc
call
inc
push
(bad)
jbe
dec
ins
pop
sub
aaa
aad
xor
(bad)
in
shl
cmp
add
mov
cmp
pop
stos
shr
into
add
je
and
xor
sar
pop
test
scas
add
add
jg
mov
fst
pop
data16
cmp
das
add
stc
in
test
out
inc
shl
push
push
leave
out
mov
or
inc
mov
shr
ins
div
inc
out
push
cmp
outs
(bad)
pop
pop
call
push
mov
adc
mov
sbb
cmp
out
dec
jl
xlat
inc
mov
call
fsubp
inc
ja
into
(bad)
iret
xor
push
and
stc
mov
or
lods
adc
dec
jae
push
jge
sbb
(bad)
sub
inc
lods
push
(bad)
sbb
jl
mov
pop
cmp
mov
pop
rol
pop
std
mov
popa
sbb
mov
scas
bound
pop
push
repnz
nop
data16
push
cdq
lahf
mov
outs
shl
pop
jge
cmp
push
aas
nop
lods
(bad)
out
adc
dec
jmp
int
add
jmp
mov
ins
jp
dec
add
xchg
ins
in
inc
lds
push
outs
inc
sbb
or
arpl
cdq
dec
ret
dec
sub
add
pop
push
adc
bound
dec
lods
in
sbb
jmp
lock
pop
sahf
or
frstor
fwait
xor
add
imul
push
push
and
jnp
jbe
mov
pop
and
sbb
mov
mov
mov
xchg
leave
xchg
inc
aaa
dec
sub
call
dec
(bad)
aam
in
leave
call
gs
call
leave
test
add
jecxz
inc
xchg
js
stos
pop
stos
ret
dec
loop
(bad)
xchg
cmp
adc
int3
cmp
and
je
clc
jg
fst
hlt
pop
cmp
adc
lea
das
pop
mov
cmps
dec
js
sahf
lods
aam
mov
sar
call
or
aad
cmps
add
sbb
stos
cmp
int3
inc
add
bound
inc
in
mov
in
inc
into
push
jmp
fs
add
add
in
sub
sub
and
aad
test
cmp
jbe
into
call
pop
jno
add
sbb
or
bound
dec
add
adc
or
fadd
add
out
or
sub
sahf
mov
add
js
cmp
sub
mov
sub
and
xchg
push
idiv
or
sbb
imul
mov
sub
ja
data16
loope
stc
pop
adc
sbb
jp
je
rcr
mov
jae
mov
or
xor
xchg
imul
loopne
fisubr
mov
mov
lods
jae
mov
into
or
jg
cmp
push
test
or
fst
pop
js
mov
loop
fldenv
sub
cmp
retf
push
fsub
outs
adc
lods
push
inc
pop
arpl
dec
mov
int
push
xchg
cmps
movs
or
fsubr
inc
pop
arpl
sbb
scas
jb
inc
loop
jae
pop
and
in
jg
setae
or
pop
test
mov
pusha
ret
sbb
sbb
xchg
mov
jmp
xchg
retf
inc
leave
mov
push
push
mov
pop
cwde
inc
ins
or
mov
in
retf
in
sub
outs
xor
pop
in
bound
mov
xchg
ret
cmp
lahf
mov
inc
addr16
pop
mov
test
test
pop
dec
adc
cmps
jge
ret
addr16
cmpxchg
inc
mov
and
loope
cmps
in
les
mov
inc
cmp
and
cmp
push
mov
jmp
fisttp
add
stc
jno
test
aad
cmp
dec
nop
push
fistp
fdivr
aam
shr
and
fnstenv
push
fbld
clc
dec
lea
das
and
dec
stc
fdivr
sub
mov
dec
dec
sbb
int3
test
out
loopne
leave
out
mov
aad
pop
push
jmp
jnp
dec
or
xchg
int
inc
add
push
push
cmps
xchg
fisub
scas
adc
call
mov
jne
jp
push
dec
add
adc
pop
sar
fld
sets
into
loop
jecxz
xor
movs
leave
into
add
push
mov
sub
or
adc
mov
sbb
pushf
loope
ret
dec
mov
sub
jne
in
push
cs
in
fisub
and
dec
dec
sbb
nop
and
adc
lahf
je
dec
xchg
ins
inc
mov
scas
ret
mov
mov
ret
pop
lahf
xchg
hlt
in
repnz
sub
imul
xchg
fwait
push
pop
(bad)
pop
pop
stc
inc
lock
pop
fcomp
dec
cdq
leave
inc
sub
fwait
mov
adc
mov
gs
or
cld
pop
adc
pop
jnp
mov
or
test
fild
jb
fwait
and
xchg
daa
fdivrp
shl
push
dec
repz
popa
fwait
mov
sar
xchg
mov
jge
xchg
push
add
sbb
dec
mov
xchg
push
retf
mov
dec
repz
mov
pop
clc
cmc
pop
ret
jg
mov
or
mov
xor
popf
push
pop
or
jmp
push
push
cmps
mov
lods
ror
cmp
inc
add
xor
jae
(bad)
adc
rep
pop
jmp
jns
push
push
xor
add
(bad)
jbe
or
into
adc
cmp
inc
dec
iret
pop
sar
inc
lea
repz
jecxz
movs
mov
out
mov
adc
aad
and
sub
mov
pop
jl
ret
jno
neg
or
sbb
jge
pusha
sti
xchg
cmp
(bad)
mov
shl
inc
push
push
retf
add
pop
push
cmps
mov
xchg
xchg
sbb
ds
mov
adc
pop
clc
xor
outs
adc
in
push
fbld
push
lahf
sbb
in
xchg
out
jmpw
jg
pop
clc
test
loope
cmp
lock
aad
enter
shl
das
add
adc
pop
adc
xchg
pop
sub
push
hlt
xlat
dec
mov
or
inc
scas
xchg
push
pop
sub
mov
cmp
jecxz
mov
sub
bound
popf
fnstenv
cld
push
loop
jp
es
out
(bad)
xor
repz
sbb
sub
cli
icebp
cmps
adc
shl
jmp
add
xor
or
arpl
retf
or
or
xchg
fisttp
loope
(bad)
sub
shr
int3
loop
mov
xor
and
inc
fidiv
inc
add
push
ror
mov
inc
add
sbb
stos
dec
sbb
fidivr
or
out
es
or
iret
adc
xor
test
lods
lds
popf
mov
movs
pop
ss
(bad)
out
jmp
add
xor
cmps
cmp
clc
and
push
and
je
pop
in
push
add
or
xchg
bound
xchg
pushf
sahf
add
loope
ret
jmp
xlat
hlt
jne
mov
inc
pop
(bad)
or
mov
sbb
adc
mov
pop
push
(bad)
xchg
adc
mov
jp
jle
mov
or
xor
loopne
scas
sbb
imul
out
into
fisttp
nop
push
popa
movs
in
fisubr
(bad)
jns
mov
adc
ror
fstp
aad
pop
and
inc
jle
mov
inc
stos
mov
mov
mov
retf
popf
sbb
mov
inc
sar
mov
arpl
nop
mov
in
add
outs
daa
xlat
or
scas
mov
xor
mov
fcmovbe
retf
fs
mov
(bad)
xor
lds
fst
gs
loopne
rol
sub
(bad)
and
retf
pop
sbb
cmps
and
mov
scas
sub
xchg
cmp
addr16
inc
jo
xchg
xchg
ret
div
jle
inc
dec
in
pop
outs
cmps
fisubr
jecxz
mov
or
cdq
inc
(bad)
movs
mov
int3
mov
ja
or
setns
enter
arpl
scas
and
inc
movs
div
xchg
retf
addr16
lods
lea
jle
push
test
mov
adc
in
and
das
sbb
inc
imul
lods
sbb
mov
lods
movs
je
imul
dec
jl
add
xor
jl
std
add
mov
stos
es
ret
pop
out
aas
stc
movs
ror
mov
daa
icebp
out
xor
lds
in
adc
add
xchg
neg
mov
jecxz
pop
and
dec
or
out
jmp
mov
mov
inc
sub
das
ds
pop
add
inc
out
imul
sub
test
mov
lahf
or
inc
imul
mov
jg
xor
add
adc
dec
xchg
jo
dec
add
pop
mov
xor
(bad)
(bad)
not
push
ins
iret
(bad)
xchg
jne
push
int3
xor
test
adc
je
mov
cmp
mov
sahf
inc
sbb
es
sub
icebp
push
icebp
mov
sub
jae
jb
mov
mov
push
or
cmp
jns
fldenv
test
push
in
adc
sub
mov
sbb
mov
jbe
pop
xchg
push
inc
push
mov
and
push
fmul
add
cwde
(bad)
cmp
sub
dec
dec
mov
dec
ja
lods
(bad)
dec
push
outs
les
mov
push
or
sub
mov
xor
adc
gs
mov
inc
sub
pop
jecxz
bound
jo
lds
push
xchg
lea
mov
(bad)
frstor
ror
cmp
adc
cmp
es
fs
lahf
fsubr
test
adc
xlat
sub
clc
(bad)
dec
aam
cmps
fld
or
les
rol
jge
loop
xchg
movs
or
lods
ror
adc
sub
jl
fnstenv
push
push
or
inc
dec
cmps
adc
add
jl
jmp
in
mov
(bad)
cld
xchg
xchg
retf
movnti
je
jp
adc
xchg
sbb
cmp
and
push
cwde
leave
jl
mov
out
jle
out
jne
and
mov
and
mov
mov
pop
int3
popa
je
sbb
fucomi
inc
iret
out
clc
mul
jmp
xbegin
js
xchg
jl
je
cmps
mov
xlat
xchg
fst
jno
jmp
fimul
outs
xorps
mov
repnz
retf
cli
dec
cdq
imul
push
jmp
inc
(bad)
sub
scas
ja
lods
pushf
mov
mov
inc
clc
adc
hlt
mov
jle
jbe
pop
test
ins
xor
dec
sti
inc
aaa
sub
sub
mov
jmp
gs
aam
xor
mov
mov
arpl
jmp
mov
add
outs
lods
push
and
mov
dec
mov
ret
bound
ja
dec
mov
in
pushf
(bad)
fs
or
fiadd
jno
sub
push
cmp
fdiv
arpl
fucomp
mov
adc
mov
jmp
xchg
lock
xchg
popa
ins
dec
shr
pop
xchg
test
test
ffree
ja
and
lds
test
mov
adc
cld
data16
xlat
dec
inc
push
pop
pop
dec
push
adc
mov
in
add
push
push
mov
pop
jle
hlt
cli
xor
icebp
out
mov
lahf
and
sub
lds
popf
or
jae
or
icebp
jne
xchg
call
pop
test
inc
and
pushf
cmp
sub
jmp
jno
popa
dec
push
retf
xchg
fnsave
pusha
mov
imul
push
shr
dec
(bad)
outs
outs
xor
sbb
mov
add
lahf
mov
aaa
psrlq
fidivr
out
xor
in
push
fistp
rol
xor
cmps
fisubr
xchg
adc
cwde
push
imul
cmp
icebp
inc
mov
push
sub
mov
mov
sub
dec
in
fs
push
jg
cmp
or
mov
push
jecxz
xchg
xor
push
pop
xchg
loopne
jbe
test
dec
fwait
fs
cmps
push
jo
retf
pushf
jbe
jo
ss
mov
jmp
nop
jmp
sahf
pop
aam
mov
hlt
outs
mov
cmp
mov
mov
adc
xor
out
adc
popa
fld
popf
push
xchg
in
pop
jbe
push
cmc
movs
xchg
(bad)
push
mov
arpl
jns
stos
jge
int
mov
mov
mov
inc
aaa
cdq
inc
add
mov
shr
inc
jb
imul
xor
clc
imul
jmp
cmp
std
loopne
mov
add
jl
out
mov
adc
cmp
cmc
das
sti
(bad)
std
mov
hlt
(bad)
jg
clc
(bad)
sahf
push
pop
push
ins
xor
dec
inc
jecxz
push
scas
addr16
cmp
or
push
out
retf
jmp
mov
pop
clc
mov
hlt
inc
dec
sbb
rcr
ins
scas
push
loopne
sub
push
mov
push
push
rcr
or
shr
dec
sbb
scas
sub
xor
dec
lods
push
push
mov
sub
push
pop
or
ret
push
mov
(bad)
cli
push
jecxz
sub
inc
mov
hlt
jns
cmps
out
adc
imul
in
push
sub
mov
mov
mov
dec
or
push
ins
mov
mov
aaa
popf
(bad)
sbb
mov
sub
aaa
mov
dec
dec
into
lahf
adc
addr16
out
jae
btr
mov
cld
push
adc
repz
dec
(bad)
es
mov
shr
retf
mov
cmps
bts
jns
cmp
cmp
in
or
in
loopne
movs
aas
mul
outs
movs
inc
and
out
ret
mov
(bad)
imul
cs
or
push
mov
or
(bad)
push
in
aas
jne
push
ja
and
mov
mov
mov
stc
push
int3
hlt
sbb
push
fst
mov
push
jno
dec
cmp
inc
adc
add
or
push
out
or
jmp
fcomp
xor
xchg
or
xchg
and
inc
and
cmp
pop
cmps
rcr
scas
xchg
scas
sub
sub
cmp
push
stc
imul
or
sbb
xchg
bound
mov
cmp
in
inc
popa
mov
mov
les
pop
enter
retf
push
xchg
jnp
mov
sub
sbb
xor
cmp
stc
adc
lea
out
stc
es
lds
xor
sbb
shr
cmp
mov
movs
lock
and
and
sub
stos
xor
mov
or
or
jae
adc
ss
mov
or
adc
jae
punpcklwd
shl
sahf
test
and
stc
hlt
cmp
test
ret
retf
or
jmp
addr16
cmp
add
ss
in
fild
pop
add
jle
add
add
sbb
add
jb
adc
movs
jg
repnz
lahf
ds
hlt
push
jne
mov
std
fcmovne
in
mov
in
loopne
jge
pop
xor
sbb
retf
mov
ffreep
(bad)
movs
sbb
sti
test
ss
stos
jno
ret
mov
mov
out
fsubp
jg
aaa
popa
jg
mov
stc
adc
and
mov
and
cmp
jl
js
add
adc
(bad)
mov
test
div
jmp
rdmsr
adc
sub
mov
stos
in
fisttp
data16
fcom
cwde
push
enter
fcmove
mov
xlat
shl
sti
(bad)
clc
es
mov
loope
pop
xchg
pop
add
fwait
mov
daa
mov
cmp
jp
ds
or
jnp
adc
push
aad
stos
dec
or
sbb
push
inc
popf
sbb
jbe
dec
rcr
leave
sbb
fiadd
xlat
sbb
jne
test
neg
stc
clc
dec
nop
jnp
push
je
and
or
es
retf
dec
cmp
jmp
add
or
icebp
and
push
je
sub
dec
adc
push
push
es
aam
in
pusha
add
push
jl
pusha
aaa
jp
or
jmp
jne
sub
in
xor
(bad)
rol
adc
push
dec
ins
cmp
and
push
mov
jge
jl
lods
jbe
mov
pop
dec
mov
sub
mov
jle
loopne
mov
xchg
xchg
aad
push
call
daa
mov
inc
push
mov
mov
js
xor
je
pop
push
mov
retf
and
xor
push
(bad)
rol
scas
out
enter
jae
inc
add
mov
xchg
xchg
push
lods
(bad)
jecxz
sbb
ja
dec
xor
sub
in
adc
adc
repz
mov
lock
iret
xor
pop
shl
mov
dec
lea
(bad)
jne
pop
jmp
jne
out
movs
push
cs
mov
inc
cs
retf
iret
lock
pop
mov
or
mov
data16
test
sub
call
sub
pop
rcl
mov
push
sbb
mov
cdq
jne
rcl
mov
xor
xor
ror
in
pop
mov
add
loope
les
inc
enter
inc
pushf
mov
in
xchg
test
inc
out
pop
fsubrp
mov
and
mov
ficom
push
pop
loope
movs
ds
or
pop
mov
add
fwait
pop
sbb
jmp
jo
adc
cmc
shl
int
sar
push
adc
xchg
scas
cmp
addr16
sbb
cmp
scas
call
enter
dec
stos
jmp
cdq
xor
(bad)
dec
mov
ins
in
enter
rcl
dec
inc
cli
or
fadd
xchg
xchg
in
sti
jge
ds
out
mov
pop
cmp
leave
xchg
pop
pop
and
fcom
pop
jns
out
push
cmp
xor
push
mov
jecxz
sbb
dec
out
push
xor
or
mov
repz
das
or
sbb
aaa
fdivr
jle
mov
mov
jmp
(bad)
test
adc
dec
movs
xchg
ror
jl
push
mov
mov
in
test
mov
bound
rcl
shl
or
inc
sub
push
retf
inc
and
enter
mov
out
dec
mov
xchg
xchg
add
push
repnz
retf
movs
scas
fidiv
sbb
fwait
rol
fcomp
stos
js
mov
mov
pop
out
in
js
(bad)
cli
xchg
in
ins
cmp
or
push
mov
xchg
cwde
das
xor
mov
into
(bad)
xchg
sbb
sbb
out
sub
in
xchg
or
ficom
mov
jmp
mov
sbb
nop
inc
movs
pop
push
sbb
fwait
scas
xchg
mov
(bad)
std
sub
sbb
mov
jno
cdq
xchg
and
inc
data16
dec
and
cs
pop
in
cmp
out
rcl
lahf
out
ffree
or
mov
jns
sub
mov
adc
(bad)
mov
arpl
sub
jp
mov
sub
push
test
xchg
sbb
mov
je
push
iret
call
push
push
mov
jp
pop
push
pop
dec
adc
push
test
popf
mov
out
sub
push
fsub
inc
ficom
xchg
pushf
pop
xor
mov
imul
ins
pop
xchg
cmp
sbb
daa
outs
ja
and
sahf
jb
ss
aad
mov
jp
rcr
lds
out
xchg
and
call
cs
mov
ins
add
arpl
stos
imul
xchg
lods
call
call
add
or
inc
push
int3
neg
jb
sub
cmp
sub
out
xchg
imul
popa
(bad)
into
sub
pop
rol
retf
dec
inc
pop
xor
or
xor
xlat
lods
mov
repz
cmp
into
mov
pop
sbb
sub
mov
sbb
ret
pop
shl
addr16
movs
xchg
sar
push
outs
cmc
add
in
mov
xchg
ficomp
fdivr
jmp
xor
loop
jmp
sbb
push
jle
mov
aas
pushf
mov
pop
jg
cmp
or
mov
pop
inc
enter
inc
push
jb
jmp
loope
(bad)
out
and
pop
sub
adc
push
aaa
cmp
jg
sub
aad
stc
mov
push
fld
in
nop
stos
mov
mov
lahf
(bad)
out
pop
(bad)
jmp
sbb
sbb
inc
call
(bad)
mov
ret
into
add
dec
psllq
push
hlt
dec
pop
int3
pusha
jo
sahf
std
jbe
jb
cli
out
cmp
jle
fsub
out
imul
and
lahf
jl
jnp
popf
jecxz
mov
shrd
retf
vpunpckhbw
pop
add
dec
fldcw
jnp
and
sub
ficomp
push
pop
outs
inc
adc
fisub
ins
sbb
lock
push
push
pop
shl
mov
ins
jae
inc
and
aaa
fcom
xchg
sbb
aam
add
pop
and
pop
xchg
pusha
fdiv
(bad)
(bad)
data16
pop
fistp
mov
fnstsw
push
repz
xor
mov
stc
popa
retf
and
out
daa
fcom
push
mul
sub
in
mov
imul
add
mov
(bad)
xlat
jl
xchg
cmp
push
mov
fcom
je
daa
in
inc
loopne
enter
sar
mov
mov
popa
out
mov
lea
dec
dec
add
lods
leave
dec
jle
mov
mov
push
jmp
iret
pop
das
int
inc
xchg
sbb
mov
mov
cmps
push
jmp
lods
or
das
mov
nop
movs
adc
mov
(bad)
div
imul
rcl
stos
sub
hlt
iret
(bad)
(bad)
mov
je
sbb
or
lahf
outs
and
(bad)
mov
iret
mov
pop
xchg
addr16
adc
leave
popf
add
enter
mov
jae
inc
gs
std
push
lock
sbb
popf
cmp
inc
cmp
pop
jno
leave
bound
aam
shr
xor
fidivr
scas
xchg
das
inc
mov
mov
or
or
adc
lahf
pop
(bad)
push
xchg
call
ret
adc
outs
iret
(bad)
adc
dec
push
sub
scas
test
xchg
pop
mov
xchg
mov
aam
jmp
and
mov
add
xor
fidivr
call
das
movs
sbb
bound
jns
jnp
mov
cmps
test
add
sbb
(bad)
xchg
mov
xlat
mov
sti
repnz
adc
cmp
mov
ss
or
sub
fwait
mov
mov
fwait
jns
test
push
(bad)
dec
out
cli
stos
(bad)
fnstenv
sahf
and
and
shr
imul
mov
movs
js
test
lds
mov
mov
sbb
ret
dec
enter
lods
sbb
lods
icebp
(bad)
jecxz
dec
cld
imul
or
pop
cmp
adc
inc
xor
mov
call
mov
repnz
inc
mov
add
push
fidiv
ins
xor
sub
into
mov
ret
loope
mov
call
pop
out
sub
fisub
fadd
loop
mov
sub
cmps
sub
sub
ins
xchg
jnp
pop
aam
adc
mov
add
mov
je
dec
mov
dec
xor
adc
push
or
adc
test
pop
lahf
dec
inc
je
ins
push
cmp
rol
out
rol
jle
(bad)
jmp
sbb
jo
hlt
imul
mov
pushf
xor
stc
mov
pop
sbb
sub
xchg
mov
mov
fwait
mov
nop
inc
in
jae
out
out
inc
xchg
inc
cwde
das
jg
test
push
out
test
cmp
jmp
adc
cli
out
lds
arpl
movs
hlt
inc
cli
jns
aas
lahf
movs
push
das
xlat
xchg
cs
cmc
cmp
in
cmc
call
or
das
ja
cmp
loop
sbb
cs
fmul
pop
in
lea
iret
imul
sar
cmp
sbb
ss
pop
xor
adc
stos
xchg
inc
jb
sub
fdivr
pop
call
add
dec
fcom
cmp
and
xor
mov
mov
jno
cmp
cs
jne
fst
push
pop
xchg
and
in
mov
imul
popf
dec
xchg
push
push
int3
xchg
mov
cmp
dec
outs
add
cmp
jne
and
sti
xor
mov
fild
sub
xchg
shr
mov
add
div
les
cli
pop
jns
inc
xchg
mov
call
sub
enter
mov
pop
rcr
ins
std
jmp
cmps
add
mov
fild
addr16
popf
(bad)
arpl
push
xor
and
test
cmp
ret
add
mov
sbb
mov
imul
scas
inc
call
jns
inc
sbb
inc
push
add
data16
push
sbb
xlat
add
mov
cli
jo
push
scas
mul
rol
dec
adc
xor
mov
fsub
rcr
xor
icebp
leave
rol
nop
or
out
mov
ror
jb
or
clc
or
mov
daa
pop
test
xor
xchg
lock
inc
cmp
shl
nop
test
add
cmp
mov
add
out
rcr
fistp
jns
sub
add
(bad)
add
xchg
xor
out
ret
aam
or
pusha
mov
inc
inc
or
std
push
mov
sbb
mov
add
out
push
cld
fidiv
mov
jo
iret
icebp
loop
(bad)
je
cmp
rcr
imul
ja
mov
xchg
call
ins
test
or
addr16
div
loope
mov
sbb
push
xor
mov
cld
fs
std
push
jbe
jle
(bad)
pop
fidivr
sar
jecxz
lahf
mov
sbb
fmul
xor
ja
adc
aas
imul
add
jno
fnstcw
stos
shr
mov
jmp
repz
dec
test
cmp
sub
(bad)
mov
fwait
cmps
jecxz
inc
outs
jp
imul
std
push
jnp
dec
xor
and
push
pop
mov
mov
inc
fidiv
call
retf
xchg
push
aas
pop
addr16
inc
xchg
shl
in
jmp
mov
stos
sbb
push
sahf
into
mov
dec
push
mov
scas
adc
outs
sub
rol
or
cmp
xor
ss
sub
push
cmps
dec
ret
pusha
add
stos
or
cmp
pop
enter
jl
cmp
pop
not
sbb
scas
cmp
jo
sbb
outs
cmp
icebp
pop
push
pusha
sub
inc
sub
pushf
je
hlt
pop
mov
sti
cmp
nop
mov
ins
in
or
lea
sbb
std
pop
mov
addr16
test
movs
sbb
pop
mov
inc
jl
pop
scas
sbb
mov
dec
or
sub
adc
lea
popa
mov
jmp
add
das
mov
mov
sub
stos
mov
int3
imul
adc
xchg
xor
mov
mov
hlt
(bad)
mov
fnstsw
inc
inc
dec
sti
sub
jg
loope
in
jbe
xchg
mov
mov
dec
inc
sub
jbe
jnp
adc
xor
ins
or
out
mov
sub
test
outs
test
jae
mov
cmp
sub
ds
call
imul
jge
or
jbe
adc
mov
data16
dec
mov
sub
sbb
(bad)
scas
in
cmp
cwde
test
adc
les
jbe
lods
dec
mov
lods
test
scas
rcr
fnstsw
push
pop
mov
mov
aad
and
mov
mov
cli
pop
mov
mov
xchg
(bad)
sbb
repnz
repnz
dec
fild
xor
sub
sub
fstp
sar
adc
add
fcomi
dec
jmp
in
add
and
hlt
pop
data16
test
xchg
and
push
popa
cli
aam
rcl
(bad)
lahf
inc
fidivr
mov
add
cmp
mov
pop
mov
aam
(bad)
jb
sahf
stos
inc
iret
pop
push
cmp
stc
enter
mov
inc
jo
out
dec
add
repz
adc
sahf
xchg
mov
jge
sahf
mov
mov
out
and
mov
push
jecxz
(bad)
sbb
push
dec
(bad)
push
movs
pop
mov
and
pop
loopne
mov
ffreep
dec
sbb
jno
xor
xor
inc
out
test
cmp
mov
add
test
test
mov
sub
mov
mov
mov
js
dec
popf
mov
push
mov
push
aaa
movs
and
xrelease
xor
enter
pusha
mov
push
popf
push
jmp
in
not
sbb
pushf
cmp
dec
int3
sub
bound
aas
aam
jbe
sar
jl
jmp
fwait
add
jbe
jns
inc
sbb
call
sahf
jge
(bad)
jb
rcl
pop
cmp
adc
jb
mov
xchg
lahf
xchg
push
cmp
jbe
adc
fist
push
adc
ins
lds
movs
xor
jg
mov
jae
add
dec
jp
sbb
and
cmp
and
in
retf
fld
jne
cmps
bnd
sub
adc
pop
mov
call
sbb
(bad)
pop
mov
inc
ins
out
shr
push
dec
int3
mov
(bad)
push
push
mov
dec
hlt
and
push
or
pop
mov
test
cmp
test
ror
mov
or
add
fwait
lods
mov
and
mov
push
scas
mov
jno
adc
adc
(bad)
mov
pop
push
mov
je
(bad)
pop
push
push
jge
sub
sbb
push
xchg
retf
call
loopne
xlat
out
jno
pop
mov
adc
stc
dec
retf
adc
jo
movs
(bad)
into
pop
cmp
shl
inc
ins
mov
aaa
(bad)
sbb
push
add
and
aaa
mov
scas
ja
scas
adc
sti
xor
lahf
fild
ss
sub
ret
xchg
jo
ins
es
or
or
inc
add
test
jmp
add
ret
sar
pushf
mov
lea
aaa
fcom
jmp
in
in
adc
mov
jmp
mul
leave
shl
stc
ret
js
js
push
mov
and
cdq
pop
cmp
test
pop
mov
pop
mov
sbb
aas
call
mov
or
jb
adc
sbb
dec
dec
in
sub
or
test
stc
jb
mov
sbb
jno
repnz
push
adc
fdecstp
fist
gs
icebp
out
sub
ret
adc
jg
(bad)
ret
push
js
pop
or
mul
lea
sbb
lock
cmp
fsub
sbb
jno
dec
dec
add
and
hlt
(bad)
popf
push
loop
dec
sbb
aam
xor
sbb
dec
xor
cld
and
cdq
push
dec
int
in
lods
mov
into
shl
loop
and
cmp
test
and
mov
jmp
fcom
leave
dec
dec
bound
test
mov
idiv
div
gs
outs
push
or
test
scas
fimul
popa
push
out
and
iret
nop
jae
jae
push
add
xchg
xor
jnp
pop
jbe
movs
cmp
fcom
add
retf
xchg
adc
shr
bound
ins
pusha
jno
cs
bound
imul
cli
push
popa
aaa
or
fadd
mov
mov
sub
cmp
call
xchg
dec
cmc
mov
pop
popa
pop
ja
jno
shl
xor
repz
dec
fisub
jp
fstp
icebp
push
pop
xchg
xchg
sbb
outs
ror
mov
xchg
xchg
pop
mov
xchg
sbb
xchg
test
jmp
mov
call
xchg
popa
jmp
mov
pushf
jmp
pushf
push
aas
ss
popa
repz
in
(bad)
mov
sbb
aaa
movs
and
jbe
xor
pop
pop
ja
ins
fild
in
cmp
addr16
daa
dec
ds
ja
imul
(bad)
ja
jmp
xchg
cmp
sub
je
mov
fild
icebp
iret
stos
sub
push
int
test
jmp
sbb
(bad)
fstp
cs
dec
xchg
stos
sub
sbb
ret
pop
xor
or
pop
cmps
out
test
out
in
sub
mov
fwait
hlt
dec
jo
cdq
jg
jg
jp
fs
inc
rol
or
es
xchg
mov
mov
fnsave
sbb
call
jecxz
aaa
pop
jg
jnp
mov
fidiv
dec
outs
fsub
inc
pop
test
pop
fcmovbe
mov
cmp
jp
ja
mov
shr
adc
scas
pop
cmp
mov
pop
jae
das
xor
scas
(bad)
mov
cmp
jmp
cs
pop
out
push
ins
(bad)
int
push
xor
popa
or
das
adc
cmp
in
push
out
pushf
xchg
inc
pop
pop
jbe
jmp
outs
mov
out
push
mov
in
xor
and
imul
sbb
sbb
mov
mov
mov
rcr
xor
ret
mov
cmps
or
ja
sti
mov
sbb
jns
test
sub
das
fcomp
mov
xlat
sub
call
sbb
jp
mov
repnz
mov
cdq
ds
outs
cmp
cmp
sub
sbb
cmp
addr16
xor
test
sub
mov
cmp
push
arpl
aaa
(bad)
xlat
iret
jmp
jle
sub
jg
adc
and
repz
loop
sbb
call
cs
call
dec
into
mov
mov
add
iret
sbb
push
fiadd
cwd
test
loopne
xor
daa
push
or
dec
retf
hlt
lock
shl
pusha
ss
arpl
test
or
jp
push
sub
call
mov
push
outs
mov
in
call
adc
call
pop
xchg
xor
fsub
loop
sub
sbb
jge
mov
and
pop
jnp
lea
(bad)
enter
jmp
mov
daa
inc
fisttp
das
fidiv
frndint
in
pusha
rcr
stos
xor
jp
jp
dec
pop
das
clc
in
scas
fistp
cmps
aaa
jp
mov
xchg
sub
jns
push
sbb
jmp
cmp
xor
fwait
aam
jge
add
mov
inc
mov
mov
cmp
or
mov
bound
add
jmp
ret
bound
les
xchg
cmp
mov
in
in
inc
rcl
sti
and
ins
test
dec
into
pop
cmp
pop
push
in
test
adc
dec
and
das
in
fldcw
aad
dec
rcl
mov
std
xor
mov
and
call
dec
inc
mov
fbstp
jmp
call
and
push
inc
xor
mov
fcmove
fsub
mov
xchg
dec
jb
loop
xor
mov
enter
sti
mov
jno
add
popf
pop
enter
bnd
adc
fucomp
sahf
and
pop
jnp
push
jecxz
xchg
aas
imul
popf
loop
xchg
mov
sbb
mov
movs
out
pop
mov
add
outs
lea
ds
mov
mov
in
xor
ds
mov
inc
mov
fs
pop
inc
mov
lea
inc
mov
jns
mov
daa
adc
adc
pop
fisub
mov
add
push
or
mov
pop
add
call
(bad)
test
jo
mov
test
mov
jno
lods
mov
ficom
ins
ret
mov
aam
sbb
aas
mov
(bad)
fild
adc
xchg
and
nop
out
imul
pop
inc
mov
dec
clc
enter
es
push
es
in
cwde
outs
jge
loop
fucomi
dec
pop
out
jmp
(bad)
push
push
add
out
sbb
ins
pop
fidiv
jle
call
pusha
aas
fsubrp
fmul
xchg
daa
ds
pop
pop
jmp
jae
test
shl
imul
inc
lahf
cmovbe
mov
cdq
jae
cdq
xchg
add
mov
pop
popf
fxtract
mov
xor
sub
lods
sub
hlt
sub
mov
xor
bound
aas
test
dec
mov
ss
ss
and
repz
jecxz
cmps
pusha
rol
pop
xchg
or
in
hlt
jp
xchg
int
sub
cmp
les
adc
cmp
or
outs
push
xlat
icebp
pop
arpl
nop
retf
rol
aas
mov
or
sbb
inc
lea
ficom
mov
test
adc
cmps
test
push
jnp
pop
xor
cmp
cmp
and
repnz
jno
enter
in
mov
or
(bad)
fnstenv
pop
jbe
add
mov
mov
popf
movs
retf
lock
(bad)
cmp
or
sub
mov
fldcw
std
lea
push
shl
jbe
nop
pop
adc
dec
xchg
inc
movs
out
mov
mul
mov
lds
inc
lods
retf
push
int
fs
retf
jl
lods
cld
adc
push
out
inc
cmp
ret
cs
adc
mov
andps
mov
mov
ss
adc
sbb
ja
mov
aaa
or
xlat
sub
xor
fild
mov
(bad)
aas
sahf
mov
sub
push
or
mov
cld
dec
fidivr
(bad)
and
push
inc
push
jle
in
int
pop
dec
sub
test
pop
inc
mov
inc
push
enter
pop
xor
cvtps2pd
jnp
es
inc
pop
sbb
xchg
dec
inc
not
dec
out
loopne
scas
or
clc
add
mov
push
cmps
sbb
icebp
or
data16
pop
shr
into
add
popa
arpl
and
push
into
mov
imul
add
push
mov
loope
inc
pop
mov
retf
dec
aaa
pushf
push
xchg
mov
jne
aas
push
movs
mov
js
jg
jno
adc
add
jecxz
pop
cmp
sub
retf
call
cmp
pop
inc
stos
xor
call
imul
das
adc
fcmovnb
and
cmp
ins
jmp
(bad)
sub
in
xchg
scas
sbb
cmp
test
leave
fsub
sub
push
jae
(bad)
fimul
ins
cmp
mov
das
sub
jae
popa
adc
aas
dec
add
in
inc
lds
mov
pop
lahf
pmulhw
sub
stos
mov
cmp
and
jbe
xchg
jle
cmp
mov
adc
pop
js
mov
xchg
mov
int
sub
mov
mov
jo
xchg
mov
ret
pop
mov
sbb
cmp
std
pop
pop
loopne
push
or
and
mov
mov
aas
jp
shl
mov
cmp
or
mov
mov
cld
imul
mov
cmc
das
jmp
idiv
dec
leave
fdiv
and
ss
and
add
xchg
pop
mov
loopne
dec
jg
xchg
sbb
pop
ss
xchg
ret
outs
inc
not
ja
and
adc
fnstenv
in
imul
mov
in
nop
sbb
dec
and
mov
ja
jb
sahf
xchg
(bad)
retf
loop
pop
xchg
nop
(bad)
jbe
ja
mov
lods
mov
sub
les
mov
and
(bad)
retf
and
out
ds
dec
jne
mov
fs
mov
xchg
out
in
push
popf
xchg
leave
mov
les
pop
pushf
adc
xor
test
or
into
cmp
add
mov
mov
jmp
inc
das
cld
(bad)
jl
(bad)
mov
je
cmc
lock
mov
pop
push
jl
aam
cmp
mov
adc
not
xchg
sbb
add
mov
(bad)
mov
lea
cmp
pop
sbb
out
ins
pop
out
in
add
sbb
jp
dec
pop
push
jg
lods
mov
mov
sbb
mov
cmp
sar
xchg
xchg
xchg
repnz
mov
jbe
sub
cmp
cld
push
aam
xor
test
adc
sub
sbb
sbb
push
int3
pusha
in
cmp
(bad)
lock
dec
cdq
repnz
pusha
and
xchg
inc
pop
adc
and
fcom
cmp
jle
mov
enter
js
daa
ins
fadd
retf
pop
mov
pop
lahf
xor
push
pop
bound
sbb
jno
push
pop
jmp
or
test
xchg
push
add
jecxz
mov
(bad)
mov
mov
jnp
jg
sub
popa
inc
pop
enter
dec
push
outs
pop
imul
jge
ds
xor
xchg
in
mov
sti
adc
jae
xor
xchg
gs
ret
dec
mov
mov
mov
cmp
repz
mov
mov
and
movs
jp
mov
fs
cs
mov
mov
int3
test
or
inc
stos
pusha
mov
or
ret
jmp
inc
gs
push
or
sub
inc
ret
(bad)
daa
gs
cmc
sbb
mov
das
ins
loopne
inc
jl
dec
(bad)
aaa
mov
push
test
mov
call
and
call
and
dec
or
test
outs
loope
sti
mov
iret
lds
and
test
xchg
shr
je
pop
popf
pop
jecxz
inc
mov
mov
loop
mov
add
icebp
mov
mov
popa
xchg
sbb
gs
fwait
mov
jp
mov
mov
mov
xor
cdq
je
add
in
push
shr
fs
inc
arpl
xor
pop
enter
and
ins
gs
xchg
fs
mov
add
adc
jnp
mov
mov
adc
int
rcr
int3
cs
popa
sub
arpl
dec
pop
pop
es
ja
xchg
int
lahf
xor
std
sub
inc
sbb
cmps
and
sti
icebp
outs
mov
bt
inc
pop
clc
sub
loope
pop
hlt
js
add
sbb
mul
fnstsw
dec
adc
sbb
inc
mov
dec
jb
in
outs
mov
cmp
fidiv
int3
ficomp
sbb
cmp
rcr
cmc
ins
pop
inc
xor
push
shl
inc
rol
out
mov
pop
adc
inc
into
loopne
jg
fst
cli
sub
jmp
mov
ret
xchg
cmps
lea
and
in
bound
xchg
push
test
xor
sbb
cmc
mov
jno
cmps
fisttp
into
leave
enter
xchg
cmp
js
push
loop
stos
into
inc
out
pop
add
jne
add
cli
inc
inc
inc
fwait
mov
dec
pushf
jo
pop
not
shl
pushf
aad
loopne
lds
aad
xor
cld
popa
mov
pop
mov
mov
popf
imul
xor
scas
jb
retf
addr16
imul
add
pusha
sub
rcr
rcr
jecxz
mov
dec
cdq
jne
(bad)
sbb
dec
pusha
cmp
jle
aad
lahf
fbld
xor
div
lahf
out
pop
and
pop
sbb
push
add
dec
pop
mov
arpl
imul
loope
lahf
sub
fdivp
push
aas
pop
daa
mov
jne
lahf
add
add
sbb
inc
jp
stos
or
packuswb
inc
js
or
jnp
fwait
into
inc
mov
(bad)
cmp
xor
clc
outs
in
pop
or
les
xor
xor
jmp
iret
jno
xchg
sub
fiadd
pop
test
sti
xor
and
fimul
addr16
out
cmp
add
stc
xor
or
ins
and
or
fdiv
inc
mov
cmc
int3
pop
clc
push
xlat
mov
lahf
std
push
fsub
pusha
add
mov
mov
jne
lds
shl
mov
test
dec
mov
test
dec
sbb
fisub
cdq
fadd
std
mov
das
faddp
(bad)
leave
pushf
sar
push
mov
aaa
jmp
test
sbb
mov
dec
push
in
mov
cs
loope
test
pop
add
mov
push
icebp
xor
aaa
cwde
inc
pop
jge
ret
ins
enter
mov
inc
lods
inc
leave
mov
mov
push
aas
mov
enter
nop
pop
hlt
push
and
cmps
pop
or
test
add
inc
dec
shr
push
inc
jp
mov
pop
or
fisttp
lock
out
push
push
das
stc
mov
pop
mov
or
pushf
cwde
or
std
loop
adc
cmp
(bad)
not
mov
rol
add
ficomp
push
dec
mov
mov
mov
out
fidivr
jp
outs
cs
in
inc
fcom
xlat
ret
dec
jmp
scas
fidivr
cwde
sub
adc
dec
and
push
jle
inc
stos
pop
stos
push
cmps
cwde
dec
nop
mov
add
push
fisub
call
ss
push
mov
int
cmp
in
pop
shr
(bad)
(bad)
adc
push
mov
movs
xchg
and
aas
out
repz
mov
(bad)
ins
loope
push
mov
imul
xchg
rcr
or
inc
movs
pop
jne
push
fcom
aas
pop
loopne
sub
mov
fld
mov
push
div
outs
inc
ret
push
cli
lods
cmp
mov
test
repnz
pop
ds
lods
push
jl
or
jae
dec
test
jmp
fidivr
fpatan
add
test
fldenv
inc
xor
xor
pop
addr16
mov
in
(bad)
xor
cmc
out
pop
sbb
ins
cmp
mov
ins
lock
in
scas
jne
mov
add
mov
dec
xchg
movs
adc
(bad)
out
fldpi
and
xchg
pop
mov
and
(bad)
mov
mov
outs
stc
retf
mov
popf
sbb
add
les
test
cmp
cmp
dec
inc
push
add
inc
call
push
mov
mov
mov
adc
cli
sbb
rol
out
test
jo
push
scas
rcl
je
xchg
neg
imul
jge
and
fisubr
lods
lea
pusha
jle
ja
fld
xor
xchg
cs
mov
cmp
mov
not
xchg
ins
rcr
loop
imul
mov
xchg
pusha
push
mov
pop
xchg
xchg
push
fs
pop
out
add
pop
outs
shl
sar
add
mov
imul
aad
mov
icebp
mov
mov
xchg
cmp
jae
fdivr
ret
sbb
push
mov
cli
scas
mov
xor
sub
loopne
int
stos
push
in
shl
dec
xor
jno
aaa
xor
xor
fwait
lods
inc
(bad)
enter
xor
scas
int3
or
push
lock
or
jge
pop
sub
lahf
mov
sub
loop
sar
push
pop
ja
xor
cmp
inc
cmp
cdq
(bad)
std
jge
sbb
mov
fcmovb
pop
aam
lahf
imul
pop
add
cld
ins
pop
(bad)
jle
mov
push
jg
lea
jle
adc
fs
(bad)
stc
mov
xchg
pop
daa
and
pop
test
adc
ds
sbb
inc
and
xchg
pop
or
dec
cmc
adc
or
mov
jmp
out
mov
fdivr
cmc
dec
xor
or
push
aas
jo
ret
push
popa
rcr
or
jb
xchg
clc
add
push
adc
xchg
outs
bound
inc
push
pop
out
shr
nop
add
fmul
and
aas
xor
inc
mov
mov
sub
sbb
and
stos
shr
repz
mov
inc
jne
data16
xchg
mov
mov
(bad)
stc
mov
imul
xor
jge
gs
popa
lock
fistp
sub
out
pop
jecxz
dec
or
mov
cmc
xlat
arpl
mov
pusha
push
mov
int3
mov
adc
imul
cmp
arpl
sbb
cmp
into
mov
jmp
bound
xchg
outs
xlat
(bad)
test
jo
and
das
fnstenv
(bad)
ds
adc
mov
and
pop
ins
mov
pop
push
mov
add
xor
arpl
push
mov
aad
cmp
rcr
sub
add
call
and
jne
jbe
test
cwde
retf
fdiv
popf
inc
je
test
cmp
or
fstp
enter
mov
aad
loope
cmc
(bad)
mov
jmp
div
pop
imul
jmp
xor
mov
div
fwait
ins
mov
enter
mov
or
inc
adc
aas
sbb
adc
aam
out
sbb
push
out
dec
inc
mov
push
and
lods
loope
jb
cmp
jge
mov
loop
call
mov
push
lahf
lods
popa
jno
mov
in
dec
mov
adc
cmp
xchg
mov
inc
push
jge
add
push
jl
gs
dec
cmp
call
out
ror
dec
fistp
les
enter
jmp
dec
cmp
push
pop
sbb
cmp
aad
pop
pusha
dec
retf
cmp
sti
aam
pop
cwde
lods
and
sbb
cmp
js
jns
sahf
not
cmp
jecxz
out
int3
pop
ds
lahf
sub
fwait
push
ret
aaa
xor
lods
dec
hlt
lds
sbb
sti
sbb
sbb
cmp
cdq
cmps
std
jle
mov
xor
pop
scas
fbstp
test
sbb
idiv
mov
rol
sbb
test
add
fisttp
data16
les
pop
mov
pop
pop
icebp
loop
mov
add
mov
retf
inc
add
xor
cmp
mov
pminub
push
adc
enter
pop
loopne
mov
lods
inc
nop
pop
mov
inc
dec
add
xor
jmp
retf
add
sahf
fisubr
push
call
lods
mov
jmp
sar
adc
jp
jmp
jecxz
or
push
mov
stc
lods
(bad)
aad
xor
jne
jns
add
lahf
add
scas
lds
loopne
push
sbb
cld
bound
test
inc
outs
xor
rcl
imul
and
shr
jecxz
shl
jo
adc
fcomp
pop
fadd
(bad)
pop
inc
mov
push
xchg
sbb
adc
call
jg
retf
dec
lea
dec
jl
sub
les
mov
clc
call
xchg
movs
mov
fimul
dec
daa
iret
dec
jae
ret
adc
ja
xchg
cdq
fwait
into
jae
mov
dec
lock
ins
mov
neg
push
fwait
and
dec
push
adc
cmps
inc
sub
mov
cmc
les
xor
sbb
jo
mov
and
cmp
cs
xor
movs
pop
push
adc
sbb
pusha
jne
mov
or
jne
adc
xor
inc
mov
add
fdivr
lahf
lods
ret
fisub
or
cdq
stos
out
inc
fdivr
jnp
cdq
arpl
gs
fcom
xchg
pop
sub
hlt
lods
fisubr
add
mov
addr16
jae
or
das
or
cli
call
rcl
xchg
leave
clc
shl
mov
les
cmp
sbb
jmp
fnsave
dec
pop
(bad)
or
dec
mov
int
adc
test
lea
jns
mov
pop
mov
std
(bad)
push
adc
dec
push
cmps
rol
push
fisub
cli
and
xlat
push
jg
mov
adc
nop
popf
ror
fistp
sbb
inc
jo
repnz
addr16
add
fs
or
arpl
mov
arpl
mov
or
cmp
inc
cmp
hlt
fisub
movs
bound
call
mov
or
in
push
repnz
jno
jecxz
movs
inc
dec
aas
popf
push
std
dec
adc
jl
(bad)
call
mov
adc
into
cmps
cmp
call
push
inc
jmp
fistp
clc
ins
lock
retf
sub
or
aaa
ror
outs
push
aam
fwait
or
movs
mov
lock
pop
sub
push
daa
pop
add
inc
(bad)
jecxz
mov
sub
fdivp
or
int3
or
jmp
mov
pop
push
mov
int3
adc
sub
pusha
(bad)
dec
inc
or
jmp
gs
dec
mov
xor
xor
std
xor
sub
xchg
pop
aad
dec
fiadd
mov
addr16
inc
adc
fidiv
mov
add
leave
cmp
movs
adc
push
mov
aad
enter
mov
aas
sbb
and
xchg
adc
sbb
ins
dec
leave
call
mov
push
rcr
or
out
int
inc
test
in
inc
out
popf
jle
stos
sub
lock
bnd
sbb
dec
sbb
or
rol
(bad)
xor
fs
in
repz
fmul
(bad)
outs
push
pop
adc
movs
xor
dec
sbb
jg
ret
pop
cmp
sbb
shl
and
and
cwde
aam
cmp
movs
nop
fist
test
pop
fild
mov
xchg
(bad)
push
push
mov
cmp
mov
jle
adc
ret
jo
cs
out
push
xor
mov
push
dec
aam
add
dec
push
xchg
mov
in
mov
ins
mov
nop
or
pop
in
(bad)
jge
xchg
outs
mov
add
dec
cmp
jle
(bad)
xor
int3
cmp
shr
jp
xor
lods
mov
xchg
pushf
jmp
add
das
lock
daa
cld
lea
pop
jns
call
and
call
in
es
iret
push
mov
sbb
cmps
push
push
enter
jbe
ret
xor
dec
fsubr
cld
outs
lahf
movs
inc
inc
cmp
push
jnp
clc
push
mov
jo
(bad)
imul
test
fdivr
pop
mov
popf
in
inc
pop
mov
lods
cmp
ds
xor
push
mov
imul
and
pop
fxch
outs
es
lahf
add
cmc
and
les
lock
mov
je
xor
jmp
pop
sbb
cmp
jmp
test
(bad)
enter
jmp
movs
push
mov
mov
xlat
and
sub
xchg
movs
push
dec
gs
sub
dec
mov
es
retf
cmp
call
or
mov
stos
or
neg
sub
mov
jecxz
or
sti
dec
or
mov
jnp
stos
imul
xchg
mov
repnz
dec
and
mov
sub
call
loop
jns
pop
lahf
push
adc
ficomp
or
ret
dec
aam
aam
outs
aas
movs
cdq
in
dec
movs
lods
mov
lods
dec
mov
imul
hlt
adc
pop
or
rcl
ss
cmp
leave
inc
cwde
push
adc
add
push
sbb
fcos
push
xchg
jge
pop
in
ins
adc
pop
xor
xchg
jp
retf
aaa
xor
xor
cmp
sbb
cmp
cli
push
loope
add
call
(bad)
fisubr
sbb
shr
out
jp
mov
xchg
gs
xlat
mov
fidiv
lods
xchg
mov
jae
pop
or
fisttp
sub
jno
jmp
cmp
ss
mov
mov
jb
xchg
imul
loop
pop
and
clc
jbe
int
aaa
popa
lahf
inc
cli
dec
jbe
pop
sbb
cld
jb
cmp
pop
jns
inc
cwde
mov
xor
scas
cmc
xchg
fs
sbb
mov
dec
and
je
cmps
sbb
jns
sbb
fwait
xlat
out
js
and
shl
aad
xor
lahf
inc
inc
leave
push
cmps
jb
xor
sbb
inc
rcr
or
push
pop
pop
xchg
outs
neg
sbb
xchg
mov
mov
aaa
sub
push
pop
sti
inc
sub
fldcw
inc
fmul
iret
pop
popa
jl
fmul
retf
adc
jp
mov
pop
mov
lahf
xchg
jl
add
mov
fwait
mov
loope
mov
(bad)
lea
mov
shr
mov
pop
xchg
sbb
call
push
jge
push
iret
iret
xchg
jge
push
cmc
mov
sar
sbb
(bad)
cmc
xor
pop
inc
es
push
hlt
in
mov
add
shr
or
loope
dec
aas
mov
jmp
and
sahf
or
std
mov
xchg
xchg
push
aam
xchg
add
and
sub
(bad)
rol
in
adc
pop
fidiv
push
mov
jo
lds
jg
push
push
not
not
ret
add
push
mov
push
js
sti
mov
jne
mov
inc
daa
inc
loopne
scas
ss
mov
test
lea
inc
sbb
or
data16
jb
mov
mov
ret
mov
and
inc
or
or
aaa
jle
(bad)
push
mov
mov
pop
and
mov
inc
mov
sar
outs
or
shl
lds
sbb
fsub
mov
xchg
ins
cli
mov
aam
and
mov
inc
dec
inc
dec
mov
outs
mov
add
repz
repnz
leave
add
imul
adc
addr16
dec
mov
imul
add
mov
jge
xchg
inc
std
push
loop
stos
fld
push
lods
push
sub
xor
xchg
fisub
jno
(bad)
push
test
xchg
and
mov
aam
shr
pop
ret
jmp
cmps
lea
jmp
in
xchg
test
ss
mov
inc
push
icebp
mov
out
mov
aas
mov
or
mov
pcmpeqw
ret
add
mov
mov
lods
(bad)
fs
adc
jecxz
mov
scas
xchg
mov
pushf
cdq
mov
pop
aam
scas
std
adc
sbb
push
aas
fnstcw
cmp
mov
inc
std
xchg
js
movs
aaa
or
push
rcl
mov
mov
xchg
icebp
mov
sub
or
lods
inc
js
cmp
out
pop
adc
mov
mul
pushf
adc
retf
pop
jle
test
inc
xchg
jl
adc
rcr
loop
cmp
sar
dec
sbb
or
mov
pop
mov
pop
pop
call
dec
xlat
mov
pop
hlt
sbb
xor
out
cmp
jecxz
std
cmp
call
inc
and
and
retfw
mov
int3
fimul
mov
lods
push
mov
jno
popa
je
aad
cmp
and
adc
mov
xor
ss
aam
bound
aas
in
adc
pop
mov
add
cld
pop
cmp
ror
loope
call
int3
shr
leave
clc
add
inc
out
adc
out
xor
sub
mov
cwde
mov
mov
mov
ds
mov
out
ins
div
xchg
xchg
rcl
jbe
pop
lods
pop
aaa
imul
jecxz
xor
jmp
sub
jecxz
fmul
aad
push
dec
pushf
loopne
sbb
lods
push
or
and
inc
rcr
mov
mov
neg
div
enter
ins
lea
popa
mov
mov
cmps
inc
dec
inc
cmp
mov
rcl
cmp
pop
(bad)
ret
push
in
pop
jp
push
mov
mov
dec
cmps
pop
xchg
fwait
ret
cli
aaa
outs
ret
pop
mov
(bad)
in
and
xor
cwde
push
rol
jbe
test
lds
(bad)
dec
fdiv
mov
fcom
(bad)
push
lods
jnp
lea
push
mov
ss
sahf
mov
or
lods
xor
sbb
mov
pop
mov
cmps
(bad)
ds
aam
cmp
adc
xor
add
retf
jl
push
jns
dec
sub
xor
sbb
jle
sbb
fistp
xchg
push
mov
out
or
ins
movs
std
les
and
in
add
aad
(bad)
movs
pop
sti
clc
(bad)
jb
stc
cdq
cmp
push
mov
mov
bound
sahf
xchg
jge
mov
in
lahf
add
jnp
das
lahf
(bad)
shl
mov
sbb
pop
push
cmc
gs
je
movs
inc
popf
add
push
int
repz
cmps
imul
or
cmps
repz
sbb
mov
push
fild
pop
sti
pop
mov
(bad)
imul
cwde
rol
or
sti
inc
push
and
sbb
outs
(bad)
out
sti
sbb
test
leave
test
add
push
std
(bad)
sar
or
pushf
pop
pop
xor
nop
leave
retf
movs
jl
dec
jne
fmul
push
cmp
xchg
sub
mov
lea
rol
adc
clc
or
hlt
mov
(bad)
ror
std
mov
sub
cmp
pop
adc
inc
adc
mov
mov
adc
(bad)
test
mov
jae
adc
mov
imul
mov
je
fsubrp
sahf
fistp
pusha
xor
and
loope
add
outs
inc
sbb
dec
inc
imul
jle
jp
in
lods
fisubr
jb
std
push
sub
ror
jo
leave
cmps
xor
dec
cmc
push
cld
cmp
push
movs
aaa
jnp
sar
in
adc
imul
sbb
pop
retf
cdq
or
mov
or
popf
push
jo
(bad)
mov
cmp
push
and
stc
test
jnp
call
push
repz
pop
mov
dec
pop
mov
pop
shr
xlat
xor
retf
pop
pop
test
mov
push
push
push
ror
and
pop
inc
xor
cmps
aas
add
out
add
mov
fiadd
xor
xor
mov
adc
(bad)
jb
inc
ds
mov
mov
jnp
mov
movs
retf
(bad)
sub
xlat
jno
call
lea
(bad)
mov
mov
cli
idiv
std
(bad)
push
popa
xchg
adc
xchg
dec
mov
ins
mov
ja
stc
cmp
mov
lock
push
sub
inc
(bad)
adc
outs
inc
shl
test
out
add
loope
arpl
(bad)
cmp
lahf
mov
movs
xchg
rcl
stos
call
jg
jge
and
adc
xor
and
ror
lods
push
push
cdq
mov
jns
cmp
iret
mov
jmp
ja
outs
jge
jmp
cmps
(bad)
out
inc
xlat
mov
jno
(bad)
mov
hlt
xchg
daa
xchg
rdmsr
lds
ins
push
jno
sar
in
sbb
sub
retf
aaa
into
or
and
push
(bad)
neg
mov
js
cli
movs
sbb
xchg
pusha
or
mov
or
test
mov
cmp
sbb
iret
pop
push
xor
es
and
hlt
vpcmpgtb
js
push
fadd
test
and
xchg
repz
jle
inc
stc
pusha
movs
aas
add
ins
or
add
mov
call
outs
icebp
push
cli
sub
(bad)
cmc
pop
sbb
mov
sub
and
fidiv
xor
data16
arpl
sbb
jl
cs
movs
or
sbb
sub
in
inc
sub
jb
arpl
push
hlt
inc
mov
icebp
fsubr
sbb
test
call
push
mov
out
enter
inc
pop
fidivr
xor
retf
lds
mov
in
(bad)
and
lods
call
mov
cmp
and
lock
xchg
jecxz
or
aaa
push
push
rcl
jmp
xor
xor
jle
push
inc
mov
mov
cmp
not
xchg
sbb
sub
sub
(bad)
mov
scas
scas
add
jbe
mov
es
mov
ficom
iret
jo
mov
pop
xchg
mov
pop
out
call
dec
sbb
in
loopne
ss
cmps
mov
push
inc
(bad)
icebp
xor
(bad)
xchg
pop
mov
repnz
repz
or
scas
popf
bound
pop
sbb
into
pop
sbb
mov
in
cmc
jmp
add
xchg
push
popa
xchg
adc
fwait
and
clc
nop
lahf
or
daa
and
inc
pop
adc
pusha
lahf
and
(bad)
pop
push
scas
and
push
jge
adc
push
push
cmp
scas
xchg
mov
clc
nop
bound
push
xor
xchg
xchg
xor
mov
in
sbb
xchg
setnp
or
scas
pop
das
sub
clc
fnstcw
(bad)
fst
xor
pushf
mov
fiadd
push
mov
sbb
or
aas
mov
retf
xchg
fwait
xchg
rol
das
fs
fisub
es
call
jmp
jge
out
pusha
repz
push
jp
retf
mov
inc
xor
add
adc
or
je
pop
adc
mov
push
jmp
jge
lea
dec
aad
les
aaa
mov
inc
hlt
xchg
and
pop
addr16
retf
daa
jg
sti
lock
cmp
jmp
(bad)
gs
add
and
xor
popa
push
neg
adc
mov
and
jae
pop
xor
xor
inc
retf
(bad)
std
push
add
and
aad
mov
and
std
shl
pop
pop
(bad)
ins
xchg
test
jmp
or
sub
inc
or
pop
xchg
aam
pop
int
mov
test
pop
xchg
ins
pop
mov
retf
jl
std
retf
les
ins
mov
pushf
shr
js
sbb
cld
cmp
sbb
cli
rol
add
pop
outs
aad
cmp
mov
xor
push
cmp
dec
ret
push
ds
imul
in
cs
push
call
shl
and
fstp
adc
pop
add
popf
dec
ret
aam
test
xor
fsub
call
xchg
out
and
std
out
jo
fbstp
or
mov
sbb
call
int3
hlt
push
leave
jmp
js
mov
retf
or
dec
out
fistp
inc
out
into
cdq
test
in
push
pop
add
cdq
mov
pop
aas
xor
fwait
or
mul
and
mov
inc
push
mov
aaa
xchg
les
mov
lea
outs
mov
push
add
cdq
sbb
pop
or
lock
cmp
adc
in
adc
test
(bad)
push
sbb
loop
cmp
out
out
and
aaa
add
sti
sbb
and
add
jns
pop
jle
xacquire
rol
xchg
in
add
cld
pop
sbb
call
dec
test
test
dec
adc
mov
add
icebp
dec
out
jns
inc
jbe
jbe
icebp
push
jecxz
fmul
push
jmp
and
mov
pop
sub
push
cmps
cmps
push
mov
pushf
icebp
or
ret
sti
sbb
mov
dec
mov
ins
sbb
enter
in
popa
push
out
pop
sbb
aaa
adc
jge
aad
fidiv
jno
dec
and
jne
iret
retf
inc
sbb
mov
dec
mov
sub
sub
jg
sub
jno
dec
mov
inc
or
sub
xchg
cmps
pop
jns
cmp
into
xchg
cmpxchg
stc
xor
cwde
ins
jl
jne
jno
mov
loopne
mov
cwde
retf
sbb
sub
jno
dec
ror
out
sbb
fs
cmp
push
sub
std
addr16
popa
das
inc
pop
ins
mov
push
popa
out
retf
mov
mov
adc
push
fsub
mov
into
jl
cmp
cmps
or
loope
xor
loopne
mov
pop
inc
iret
fbstp
push
cmp
adc
jge
jge
popa
mov
dec
cmp
mov
pop
(bad)
mov
mov
ins
arpl
loope
enter
and
pusha
retf
(bad)
push
cmps
repz
push
inc
dec
fs
(bad)
shl
mov
add
xlat
imul
mov
mov
adc
xchg
outs
add
nop
xor
mov
adc
hlt
jecxz
sbb
dec
pop
xchg
pop
pushf
pusha
sub
test
jl
mov
(bad)
data16
das
xchg
add
ja
inc
ja
mov
inc
std
xchg
inc
sti
iret
push
pop
add
push
mov
mov
xchg
stos
sbb
sbb
cmp
mov
sub
pop
push
mov
inc
push
push
in
xchg
aas
push
outs
pop
pop
frstor
cmp
mov
clc
mov
out
add
xchg
sub
mov
jbe
mov
xor
cmp
or
mov
cmp
stc
sbb
jo
jg
jl
jmp
adc
jg
push
test
cmp
mov
cmp
dec
cmp
dec
ror
test
lahf
inc
(bad)
mov
cdq
hlt
je
repz
jae
lods
rcr
xor
mov
xchg
fimul
sbb
jl
mov
icebp
movs
push
scas
push
push
lods
js
imul
repnz
out
add
arpl
aam
das
call
mov
push
je
arpl
fwait
shl
pop
xchg
sub
or
cmp
inc
das
div
gs
rol
add
cli
stos
clc
xchg
ins
mov
dec
and
sbb
xor
loopne
sub
inc
ja
or
cmps
jns
inc
or
shr
sti
out
lahf
rcl
(bad)
leave
imul
sbb
jmp
call
sbb
mov
in
test
jmp
sbb
stos
mov
clc
xchg
xor
mov
bound
cmp
rep
in
mov
lds
ja
sti
sub
test
leave
and
pop
ficom
inc
std
add
mov
std
out
xchg
sub
inc
cli
sub
jge
imul
push
dec
retf
mov
cmc
pushf
and
xchg
push
(bad)
popa
pop
mov
mov
ja
sbb
scas
cmps
imul
jns
cmps
mov
loope
addr16
jb
sub
dec
(bad)
mov
and
xlat
in
jns
(bad)
je
inc
xchg
push
pop
add
test
cmp
scas
pop
dec
shl
xor
les
pop
dec
add
inc
pushf
xchg
push
aad
push
in
pop
nop
movs
xchg
ror
test
mov
xchg
push
js
std
or
pop
cmp
mov
mov
add
popa
aas
ss
or
xchg
jge
xor
hlt
scas
retf
mov
js
xor
test
xchg
aad
push
icebp
das
mov
popf
push
sbb
sub
dec
iret
fwait
or
mov
xlat
xchg
fild
mov
lea
shr
add
mov
or
das
xchg
iret
sete
and
adc
shl
inc
arpl
fs
pop
es
(bad)
sar
sub
pop
fcomp
pop
sbb
pop
lods
aaa
adc
lds
xchg
imul
fld
push
and
sub
xor
xor
idiv
pop
fisubr
scas
inc
inc
cmp
adc
xchg
fnsave
or
mov
push
or
pop
inc
pop
adc
adc
jl
adc
adc
scas
jmp
lock
mov
dec
pop
sbb
(bad)
out
mov
lahf
je
sbb
mov
sub
shl
xchg
push
or
jo
adc
repz
xchg
in
inc
movs
mov
ret
div
imul
mov
sub
push
ja
call
in
push
push
dec
(bad)
sub
dec
jbe
mov
cmps
sub
ror
repnz
xor
inc
icebp
sbb
ins
xchg
lock
sub
fcom
mov
lods
mov
push
jns
test
pop
movs
in
sbb
xchg
or
xor
mov
sbb
jno
pop
into
mov
les
mov
out
inc
inc
cmp
sub
dec
mov
inc
jns
cmp
nop
dec
pop
pop
jb
fnstenv
adc
pop
add
push
div
hlt
mov
inc
mov
pop
pushw
inc
mov
dec
sub
cwde
cmp
sbb
sub
pop
xchg
xchg
xchg
push
cs
xchg
cmp
xchg
pop
jmp
jnp
xor
xor
dec
xor
(bad)
jmp
addr16
cmps
fstp
std
mov
ins
pop
(bad)
jmp
dec
std
call
test
sbb
aas
fdivrp
pushf
icebp
jbe
pushf
mov
sahf
enter
mov
inc
pushf
sub
outs
gs
js
xchg
popf
fdivr
add
jbe
and
mov
and
or
xchg
sti
movs
icebp
inc
jmp
add
pop
cmps
out
mov
adc
jb
mov
push
push
mov
cmp
add
call
jge
mov
pop
jne
adc
fdivr
jp
adc
nop
gs
xor
cmps
mov
sub
mov
or
xor
push
sbb
aaa
sub
cmp
int3
mov
mov
and
inc
loopne
lods
nop
enter
mov
cmps
fist
pusha
outs
inc
mov
loop
(bad)
fstp
sub
sahf
jge
ret
neg
retf
xchg
pushf
mov
mov
sub
int
xor
mov
adc
mov
push
sbb
hlt
cwde
in
inc
or
cmc
mov
cld
add
inc
inc
jns
jb
mov
(bad)
xchg
ins
mov
inc
mov
imul
bound
inc
push
xchg
xchg
cmps
imul
mov
std
cs
pop
or
push
cmp
sub
adc
sti
mov
inc
xor
repnz
jb
sbb
inc
and
mov
imul
mov
sub
inc
and
nop
(bad)
retf
cmp
xchg
sbb
cmp
les
ret
frstor
cmps
push
jbe
add
mov
sub
add
sahf
sub
(bad)
jbe
das
inc
retf
cmp
add
rcr
dec
sub
lock
mov
jl
mov
dec
cmp
hlt
std
xchg
enter
scas
sub
push
or
scas
repz
popa
xor
sub
pop
sub
sub
sahf
clc
sub
push
test
and
mov
retf
stc
inc
jecxz
test
and
sbb
mov
cmp
in
sbb
out
adc
pop
cmp
jae
dec
jp
xchg
and
fldlg2
cmp
mov
add
jl
push
das
sub
pushf
jle
mov
daa
iret
mov
imul
pusha
lods
inc
es
movs
das
in
sahf
inc
repz
mov
movs
mov
mov
mov
adc
cmp
jle
(bad)
xor
aas
test
loopne
cmps
lods
and
idiv
rcr
lds
push
imul
mov
daa
cmps
call
mov
iret
pop
mov
push
add
sbb
jnp
or
dec
les
sbb
call
inc
ror
fidiv
sub
imul
inc
dec
adc
push
ror
jp
add
fdivr
xor
push
pop
sub
add
scas
dec
cmps
or
scas
dec
gs
dec
shr
bound
pop
dec
ds
jnp
cmp
mov
sti
fbld
pushf
pop
sbb
sub
ins
cld
lods
int3
push
jmp
daa
push
sbb
out
push
in
and
dec
iret
repz
xchg
adc
push
mov
fmulp
stc
test
mov
cs
jge
neg
in
push
bound
pop
(bad)
fdivr
in
scas
pop
mov
out
pushf
mov
mov
fwait
cmp
out
or
clc
or
sbb
leave
push
add
popa
and
imul
mov
push
push
mov
pop
cmp
jns
cmp
and
outs
cmp
xchg
sbb
lods
sub
adc
xchg
repnz
(bad)
and
push
cwde
out
fwait
inc
sub
jmp
dec
xchg
fcom
fcomp
nop
push
adc
or
div
adc
adc
stc
sahf
cmp
add
sub
and
mov
mov
sbb
inc
jo
ficomp
jecxz
movs
(bad)
pop
test
sbb
bound
pop
gs
push
fsub
mov
jle
js
dec
aas
shr
cmp
pop
pop
push
aas
mul
leave
(bad)
retf
add
outs
xchg
and
adc
mov
lods
xchg
jle
dec
push
push
jno
(bad)
in
pushf
ret
movs
push
shl
cld
(bad)
rol
or
cmp
cmp
call
test
inc
mov
in
cld
int
jl
sahf
adc
inc
push
inc
mov
mov
inc
adc
cmp
rol
push
int3
mov
xor
aad
ds
popf
mov
icebp
mov
jae
mov
std
in
or
cwde
jmp
rol
ins
sub
dec
cwde
mov
xor
dec
mov
enter
xchg
(bad)
sar
mov
push
pushf
leave
and
xchg
pusha
sub
jne
push
mov
sbb
(bad)
test
pop
push
sbb
cdq
fiadd
imul
jbe
cwde
add
lods
cmps
push
lods
xor
sub
adc
icebp
mov
test
ins
setbe
retf
and
jmp
mov
and
cmp
inc
clc
jmp
aaa
(bad)
test
push
fadd
(bad)
fdivr
add
retf
pop
dec
mov
sub
sub
sub
retf
mov
xchg
pusha
xchg
out
ins
jne
wrmsr
shr
inc
and
ja
mov
cmps
mov
inc
or
inc
mov
popf
pop
lds
jo
cmp
in
fldenv
mov
or
push
pushf
xor
in
dec
data16
push
loope
pop
or
lods
dec
cmp
mov
push
cdq
or
cmps
in
lock
jl
movs
enter
ret
dec
hlt
mov
cmps
int3
scas
xor
outs
push
cmp
lock
stc
mov
mov
rcr
mov
fdivrp
pop
cmps
adc
(bad)
jg
xor
xor
pop
mov
sub
xchg
loope
inc
jle
mov
test
(bad)
xchg
ja
pop
inc
or
imul
cld
jns
outs
dec
jns
add
shl
es
rcl
fdivr
out
cld
jo
adc
out
cmp
jnp
jnp
push
and
mov
fs
jmp
push
aaa
push
or
cs
inc
out
lahf
and
(bad)
mov
mov
xchg
inc
pusha
mov
nop
and
mov
mov
ins
lds
mov
dec
jmpw
xchg
js
push
sub
cli
dec
in
add
mov
dec
(bad)
jae
add
mov
shl
aad
xchg
ret
cmps
pop
push
fld
mov
inc
jp
ins
inc
ins
shr
dec
(bad)
mov
outs
pop
pop
push
mov
mov
xor
add
cwde
div
mov
dec
in
jno
or
mov
and
xor
pop
(bad)
mov
loop
inc
push
xchg
mov
jne
hlt
cmc
test
popa
or
or
cmps
cmp
push
popa
outs
mov
shl
ja
movs
and
dec
dec
push
sub
mov
sub
pop
retf
in
push
aad
cmps
ja
push
idiv
jne
push
xchg
pop
mov
add
adc
data16
or
mov
daa
pop
ret
pop
bound
dec
add
inc
push
add
iret
dec
das
cli
in
dec
pop
or
jo
mov
in
mov
xor
(bad)
ret
xor
cmp
ror
mov
mov
cmp
jno
jne
inc
scas
pop
sub
pop
lods
push
not
and
xchg
pop
in
in
icebp
pop
jo
xchg
adc
and
fist
mov
inc
bound
mov
jmp
(bad)
xchg
ficomp
dec
fsubr
dec
adc
and
leave
es
mov
clc
and
adc
call
ret
fimul
imul
sub
out
mov
add
or
inc
(bad)
pop
jae
add
movs
or
popf
or
push
int3
retf
pop
int
xchg
adc
or
dec
rol
ficom
jmp
xchg
push
aaa
(bad)
cmp
push
stos
jno
test
mov
pop
fild
mov
aad
fwait
push
adc
and
cwde
mov
loope
add
or
loope
mov
and
mul
jmp
adc
push
div
pop
lock
out
sub
or
jecxz
adc
call
mov
into
jmp
fisttp
fs
push
sbb
cmc
rcr
push
lahf
shr
push
cmps
or
test
lock
pusha
repz
loope
ds
push
imul
or
retf
pusha
xor
cmps
bound
push
add
xchg
jo
mov
mov
pusha
push
xchg
xor
outs
loopne
xchg
xor
adc
dec
dec
repnz
mov
movs
pop
adc
xchg
pop
in
add
pop
mov
test
loop
jmp
in
outs
inc
mov
mov
fcomp
aam
jge
pop
(bad)
push
mov
jl
out
sbb
inc
pushf
jnp
dec
loop
sti
push
out
jne
mov
loope
push
test
sub
xchg
adc
cmp
fldcw
aad
test
cmps
or
xchg
dec
ficomp
(bad)
(bad)
ret
out
mov
inc
add
or
lds
in
lahf
cmp
and
xchg
jmp
bound
jne
daa
add
test
jge
mov
into
cmp
mov
mov
mov
inc
or
adc
test
and
imul
ror
shl
mov
cmp
call
or
pop
sbb
add
arpl
sub
add
push
mov
mov
in
dec
inc
cwde
(bad)
inc
ret
out
outs
mov
fdivr
add
pop
push
jo
and
push
sub
cmp
pop
jne
shr
outs
push
icebp
stos
adc
cmp
xor
icebp
sbb
inc
add
mov
add
in
clc
mov
gs
inc
mov
addr16
js
fisubr
mov
cmps
pop
js
mov
lods
mov
xlat
mov
js
jp
or
ja
add
push
and
pop
mov
arpl
call
mov
push
sbb
je
and
push
retf
xor
inc
push
aam
push
sub
xchg
lock
in
test
call
lods
jne
outs
cmp
cmp
shl
inc
xchg
dec
push
mov
cmps
xchg
das
push
cdq
hlt
shl
scas
mov
data16
dec
bound
pop
jbe
pop
outs
push
(bad)
rcr
adc
xor
push
xchg
xor
pop
arpl
loope
push
inc
iret
pushfw
dec
adc
out
data16
in
dec
add
rcl
and
push
scas
inc
test
test
pop
jge
movs
and
xor
lods
cmp
pop
retf
pushf
pop
cmp
inc
pusha
xchg
leave
push
jmp
addr16
call
in
xlat
sahf
stc
daa
sbb
inc
fistp
(bad)
sub
pop
cmps
ret
mov
pop
mov
iret
xchg
xchg
popa
sti
fidivr
ud2
(bad)
sbb
lds
sub
ss
int
cmc
sahf
sbb
sub
cli
push
xchg
stos
mov
ror
push
fdiv
pop
and
inc
ja
neg
cmp
or
cmp
cmps
mov
xchg
stc
and
test
cmp
out
mov
ss
sbb
inc
push
lea
mov
mov
cs
mov
(bad)
cmc
(bad)
leave
mov
inc
aam
xor
mov
jp
cmp
pop
repz
xchg
cmp
sub
push
mov
mov
aaa
jmp
call
fcomp
or
cdq
or
xor
mov
imul
mov
xor
inc
mov
popf
inc
cmovg
mov
cs
or
(bad)
shl
inc
jne
hlt
test
pop
das
fidivr
movs
or
and
xchg
push
jmp
clc
cmp
jbe
jmp
call
cmp
ror
sub
mov
ds
xlat
mov
sub
(bad)
repnz
retf
neg
das
mov
or
(bad)
pop
fidiv
sbb
imul
ins
cmp
ret
mov
les
sahf
and
rcr
popa
add
das
fs
xor
data16
rcl
fs
pop
cmps
push
push
test
int
popa
retf
sbb
mov
hlt
mov
ret
repnz
xchg
lods
popa
jl
ds
mov
add
sub
pop
popa
outs
call
nop
repnz
retf
lds
test
int3
lods
gs
aad
ret
adc
aas
or
push
dec
int3
cdq
push
sub
div
push
sbb
fild
sub
xchg
(bad)
fidiv
mov
fld
mov
sbb
outs
jp
ret
mov
and
outs
rol
test
inc
adc
stos
xchg
mov
mov
cs
pop
mov
icebp
jns
xchg
sbb
lahf
sbb
pushf
sahf
retf
fdivr
pop
xchg
mov
repz
lock
out
pop
cli
xchg
fld
and
xor
ret
je
repnz
loopne
retf
jbe
mov
stos
cli
mov
mov
or
aas
xor
ins
dec
add
cmp
xor
retf
fimul
or
shrd
das
sbb
push
push
shl
es
mov
popa
xor
imul
imul
cmps
xor
std
push
out
xchg
mov
call
ins
push
push
repnz
sub
cmps
dec
mov
pop
out
mov
add
call
daa
rol
mov
cmps
imul
cmp
and
or
push
and
cld
pop
into
push
mov
inc
enter
push
mov
fs
adc
sub
loop
mov
xchg
add
jmp
mov
pop
(bad)
in
icebp
add
aam
(bad)
out
std
rcr
leave
or
sti
xor
push
arpl
inc
push
adc
or
and
popf
shl
in
add
je
push
sbb
xchg
xchg
aad
shr
jnp
lds
repz
ins
jle
loopne
jno
xor
jl
movs
or
lods
jp
lods
repz
sbb
jmp
xchg
int3
cwde
add
in
movs
aas
test
imul
fwait
jbe
iret
cmps
xor
jecxz
jg
outs
stos
daa
dec
mov
addr16
xor
push
loopne
daa
in
cld
xchg
add
dec
jne
idiv
mov
adc
xor
pop
adc
cmp
push
mov
pop
mov
add
inc
lahf
jns
out
cmp
aas
sub
mov
mov
icebp
jne
into
bound
mov
fwait
dec
sar
and
daa
test
ret
xchg
pop
cmp
mov
icebp
push
jns
leave
mov
mov
inc
xchg
jnp
cmps
mov
aad
sub
fld
mov
xor
fnstenv
mov
pop
jl
jns
(bad)
sbb
outs
shl
jmp
ja
pop
and
and
imul
enter
sbb
mov
mov
cmp
cmp
adc
test
mov
sar
or
inc
lods
cmp
sub
scas
out
jbe
rcr
hlt
add
adc
cmp
neg
cmp
adc
mov
inc
xchg
gs
ds
enter
mov
mov
fnstenv
mov
pop
or
xchg
inc
jg
loop
pop
xor
inc
mul
dec
scas
or
xor
or
lods
dec
fsub
add
or
into
mov
popa
inc
stos
arpl
mov
cs
xchg
aam
rcr
xchg
jbe
sub
fidivr
lods
jle
lock
lods
lahf
out
test
sbb
daa
add
fsub
jae
mov
sbb
int3
popf
stc
jne
leave
test
adc
inc
mov
cli
dec
inc
sbb
xor
mov
ja
dec
lock
xor
mov
push
push
xchg
xchg
movs
add
nop
xchg
sub
sbb
push
ins
(bad)
sti
adc
iret
fnsave
xchg
mov
inc
mov
mov
xor
out
lods
ins
push
xor
and
out
out
sbb
inc
mov
and
leave
xor
mov
jecxz
cli
jbe
ja
mov
cmps
add
aad
mov
sub
out
adc
xchg
inc
call
stos
scas
and
and
popa
(bad)
std
aam
mov
sbb
cld
inc
out
pusha
dec
add
popa
out
ins
loopne
(bad)
in
add
out
xor
pop
sub
movs
inc
mov
(bad)
pop
enter
fnsave
fcomp
dec
rdpmc
mov
fs
loope
xchg
mov
cmc
pusha
sti
ins
lahf
int3
mov
dec
es
out
retf
dec
cmp
out
adc
sbb
arpl
push
inc
push
cmp
pop
icebp
test
test
jl
xchg
add
iret
fidiv
mov
dec
and
mov
cli
test
push
call
xchg
dec
es
(bad)
int
fcmovne
aad
movs
xor
mov
repnz
leave
and
mov
aam
dec
pop
outs
cmp
test
mov
dec
or
int3
es
pop
mov
lea
push
add
shl
retf
inc
push
adc
retf
fmul
das
jnp
adc
xchg
popa
leave
push
jmp
bound
mov
cmp
mov
push
loopne
mov
js
push
mov
pop
sub
or
inc
daa
repnz
sahf
sbb
mov
movs
sub
mov
xchg
dec
repnz
sbb
ins
push
in
(bad)
mov
addr16
xchg
test
or
and
mov
xchg
outs
cs
int
dec
adc
push
adc
retf
ffree
dec
mov
xchg
sbb
xor
scas
push
sbb
adc
xchg
out
xor
sbb
fidiv
xchg
push
xor
mov
jle
dec
pop
stc
enter
adc
(bad)
stc
mov
es
sbb
mov
rol
add
fistp
sub
pop
ins
int
jns
outs
(bad)
in
hlt
repnz
cs
clc
fadd
jne
xchg
sub
fwait
dec
add
(bad)
fnsave
int3
ror
jnp
adc
xor
cwde
cmp
xor
jp
add
fadd
mov
sub
push
inc
dec
stc
inc
push
inc
pop
mov
pop
xchg
pusha
sub
lods
mov
cmp
dec
shl
aaa
push
aad
in
stos
js
mov
pusha
jae
and
jl
cmp
sbb
push
das
std
fs
imul
ins
or
icebp
rcr
add
popf
push
adc
cli
movs
mov
mov
xchg
dec
jne
outs
jmp
sar
xchg
mov
fs
and
shl
mov
fnstenv
mov
rol
sbb
loope
add
pop
jge
jecxz
call
push
mov
and
jae
pop
sub
hlt
mov
icebp
popa
repz
push
mov
fst
pop
mov
ins
repz
int3
rol
xchg
xor
or
pop
xchg
mov
jmp
mov
(bad)
cmp
pop
fimul
xor
push
lods
mov
xchg
mov
jg
inc
rcl
pop
xchg
ds
adc
cwde
iret
cs
mov
sub
dec
sahf
push
cmps
xchg
cmc
jle
mov
push
loop
cmp
scas
stos
sbb
mov
fsub
(bad)
into
(bad)
mov
mov
sub
jbe
sbb
stos
xchg
neg
in
lea
sub
rcl
mov
daa
(bad)
adc
or
sahf
movs
in
fdiv
mov
jae
mov
movs
std
(bad)
int3
and
call
out
js
adc
in
test
pop
xchg
dec
(bad)
jp
lods
push
sub
sahf
sbb
push
mov
mov
pop
idiv
lock
and
adc
shl
sbb
pop
add
sti
push
out
popa
jle
xor
movs
push
lds
sub
push
cmp
lock
xchg
and
(bad)
lds
cdq
mov
and
fidiv
push
mov
jmp
dec
inc
push
fxtract
ret
pusha
movs
jno
sbb
ins
mov
leave
and
mov
adc
xchg
and
xchg
push
dec
ins
imul
(bad)
mov
out
or
inc
sar
popa
jl
int3
(bad)
xor
mov
cs
ret
mov
push
xchg
jge
sub
inc
push
les
pop
dec
adc
dec
mov
inc
imul
fild
xor
and
pushf
cmp
add
fcomp
pop
pushf
jle
pop
sbb
mov
pop
retf
pusha
dec
and
pop
mov
dec
popf
outs
push
adc
jecxz
retf
or
outs
push
dec
call
mov
das
das
call
sub
push
pop
sbb
cli
mov
rcr
or
push
adc
sbb
xchg
loope
add
push
stos
test
push
sub
sbb
push
lea
and
jle
push
aaa
cmp
imul
gs
inc
scas
jae
loope
ins
push
pop
movhps
jns
xchg
out
cmp
cmp
mov
adc
pop
mov
rcr
jle
inc
test
add
repnz
jle
inc
push
paddusb
pop
push
pop
mov
fmul
cwde
andps
retf
loope
adc
push
sub
cwde
mov
loope
inc
add
loopne
outs
sti
ret
mov
jmp
mov
int3
add
jmp
test
arpl
pop
mov
mov
pop
cmp
sub
mov
sahf
xor
push
inc
movs
repnz
call
fild
fiadd
mov
sub
sbb
dec
mov
mov
mov
sbb
sub
jl
push
mov
(bad)
cmp
mov
jmp
iret
loop
xchg
pop
retf
cmp
sbb
add
lahf
xchg
xchg
cmp
rcr
ins
movs
hlt
pop
xchg
jno
lods
jg
js
std
imul
adc
and
jmp
add
test
pop
dec
into
ficom
jno
clc
into
shl
adc
inc
ret
mov
nop
popa
sti
pop
xchg
and
gs
adc
hlt
bound
fcom
push
jge
sub
fwait
jmp
xchg
fcomp
pop
cdq
sub
aas
push
ret
(bad)
js
inc
cmp
mov
fstp
mov
aas
sti
repz
adc
sub
loop
xor
retf
sbb
sbb
enter
jnp
imul
out
mov
mov
inc
pop
adc
lods
retf
ds
cmp
ret
leave
add
push
sar
sbb
pop
add
imul
pop
or
daa
sbb
dec
lahf
movs
call
ja
dec
cdq
push
test
cmps
adc
inc
jne
cwde
clc
aaa
pop
sbb
push
icebp
mov
shl
pusha
mov
(bad)
enter
in
adc
out
into
lods
stos
imul
mov
dec
imul
adc
leave
fidiv
and
movs
xor
jno
aas
push
cmp
cmp
fwait
inc
pop
mov
out
pop
in
mov
jmp
ds
idiv
aas
jp
pop
or
fucomi
test
imul
sbb
mov
adc
pop
or
inc
sti
fwait
pop
or
xor
jmp
cmp
jne
pop
mov
(bad)
ja
es
pop
cmp
inc
jg
dec
fwait
fs
or
into
jmp
push
(bad)
aaa
movs
int
xchg
mov
pop
add
inc
jecxz
es
xor
jno
(bad)
xchg
out
fsub
and
dec
mov
dec
call
adc
cwde
mov
loopne
lods
cmp
pop
lahf
fadd
std
adc
jno
or
sbb
rcl
inc
mov
mov
jp
xchg
shr
(bad)
repz
xchg
test
fs
sbb
aad
popa
sahf
mov
fidivr
push
in
cld
sbb
ds
fwait
add
inc
in
dec
add
sti
dec
add
cmp
shr
mov
push
cmps
icebp
mov
push
fwait
retf
sub
and
mov
mov
pop
hlt
in
outs
pop
scas
cmp
int
pop
int3
loopne
add
rcr
fwait
cld
sub
push
outs
xor
jae
cs
ins
push
push
push
test
clc
data16
out
jbe
call
mov
or
mov
mov
cmc
dec
mov
cld
mov
ss
outs
in
dec
add
mov
and
push
jo
pop
pop
mov
sub
popa
das
or
icebp
xlat
add
sbb
inc
jmp
loope
stos
adc
mov
and
outs
pop
sbb
jnp
shl
mov
add
adc
popf
fcomp
add
std
pop
in
lahf
test
popf
add
sti
sub
mov
in
push
jp
cmps
enter
sahf
gs
sub
aam
pop
push
stc
enter
pop
xchg
add
popf
dec
je
enter
pop
fist
mov
sub
lea
xchg
mov
dec
dec
or
xchg
das
or
or
js
inc
aaa
jge
mov
bound
add
mov
les
das
ret
adc
aas
out
(bad)
in
neg
mov
ins
pop
movs
pop
jnp
out
push
pmulhuw
enter
fild
fisub
ficom
out
loope
arpl
xor
scas
fs
lahf
xchg
ss
inc
mov
adc
lds
dec
fnstcw
xor
ret
pop
sbb
bound
rcl
add
in
retf
xchg
fidiv
mov
xlat
pop
inc
movs
sub
mov
mov
cmp
outs
xchg
fld
ret
mov
cwde
retf
out
arpl
(bad)
cmc
loop
jecxz
mov
push
and
scas
icebp
pcmpeqd
in
je
enter
or
iret
test
add
jbe
psrlw
xchg
cmp
aas
lods
cmps
dec
retf
mov
iret
scas
xor
inc
out
iret
dec
xchg
push
xchg
sub
mov
test
ins
test
add
leave
aas
or
xchg
(bad)
push
adc
inc
jo
int
jo
cmps
out
mov
jp
(bad)
dec
mov
push
pop
cwde
repz
or
dec
std
push
pop
cmp
adc
jmp
cmp
(bad)
xor
loope
mov
scas
push
scas
je
xchg
or
add
push
sub
sub
ja
imul
and
mov
ds
cwde
sbb
pop
adc
rcl
mov
mov
xor
jl
sub
mov
add
iret
retf
xchg
pop
mov
mov
jne
test
pop
sbb
mov
fnsave
gs
div
ins
push
sbb
push
xchg
imul
sbb
push
and
mov
sbb
pop
push
movs
xchg
loopne
aad
inc
add
jbe
gs
shl
xor
sub
mov
pop
pop
dec
jle
and
test
aad
pop
pop
mov
add
dec
dec
pusha
push
mov
pop
shr
test
inc
mov
sahf
cmps
das
sub
jns
call
fld
mov
cli
or
cmc
push
cmp
out
xchg
xor
cmp
test
push
sub
retf
lods
ins
lahf
cmp
in
push
jne
popa
sub
(bad)
repnz
adc
call
mov
sbb
outs
push
in
and
add
(bad)
int
sbb
add
fld
mov
mov
shl
push
jecxz
mov
ret
push
push
cld
js
mov
stos
es
data16
nop
push
sub
les
les
into
pop
xchg
and
(bad)
movs
mov
sti
dec
popf
in
(bad)
jnp
inc
ins
clc
mov
mov
pop
push
dec
ficom
inc
shl
icebp
mov
push
or
repz
sbb
lods
in
jmp
xchg
aam
mov
sti
fdiv
inc
popa
daa
outs
lea
loop
loopne
ds
pop
daa
jecxz
lea
inc
push
or
in
push
int
jne
jnp
(bad)
sbb
test
mov
aas
dec
adc
lea
leave
push
das
pop
outs
jae
cmps
ja
(bad)
mov
jo
xchg
sahf
sbb
mov
push
lods
fidivr
sub
sbb
movs
pushf
push
fmul
out
mov
cs
and
cli
retf
es
daa
and
addr16
das
add
cmps
mov
xor
retf
jnp
inc
sbb
pop
ror
fild
cmp
cmc
rcl
dec
repz
ret
cmp
pop
sub
and
inc
jl
add
mov
push
xchg
inc
(bad)
xlat
aam
fwait
scas
ins
push
xchg
inc
cmp
nop
sbb
and
or
loopne
retf
xchg
out
jnp
js
retf
or
jo
sbb
cmp
arpl
push
enter
add
stos
fcomp
jo
jle
mov
fwait
aad
mov
and
(bad)
into
cmp
pop
inc
adc
cdq
mov
push
xor
push
arpl
addr16
les
cwde
push
enter
xor
imul
(bad)
les
dec
sbb
push
pop
fs
adc
aas
ss
sub
xchg
popa
mov
sub
xor
xchg
push
jp
sub
movs
and
loopne
popf
jp
push
pop
rcl
test
out
dec
push
(bad)
mov
jecxz
(bad)
nop
mov
(bad)
stc
add
and
cmp
mov
push
jmp
pop
(bad)
dec
xor
repnz
test
add
sbb
test
loop
scas
add
push
sbb
push
mov
scas
scas
in
add
inc
rcl
rcl
(bad)
outs
mov
cmc
pop
cmp
outs
cmps
ja
dec
sbb
jecxz
loopne
or
loop
fmul
popf
ret
or
sub
jg
test
jg
jbe
jns
xchg
rcr
push
fiadd
ret
jmp
or
inc
sub
xor
inc
fldenv
mov
xor
jl
test
icebp
retf
into
cmp
push
test
xchg
mov
sbb
int3
push
movs
call
shl
popf
cmp
sub
loopne
jb
mov
fcomp
outs
aas
cmp
lods
pusha
imul
pop
push
cmp
test
test
call
jno
mov
fldenv
pop
push
push
add
mov
add
fiadd
lahf
les
cmps
push
fadd
mov
fdivr
and
mov
in
lahf
dec
jecxz
out
push
daa
scas
in
mov
and
push
mov
sub
dec
(bad)
jne
ficomp
sbb
jl
daa
in
retf
dec
cmp
ins
push
push
xchg
fild
call
inc
push
std
aad
jmp
cmp
retf
test
les
fisub
jge
push
fstp
mov
(bad)
mov
addr16
mov
and
mov
mov
mov
loop
shr
inc
cmp
push
pop
cmp
mov
js
retf
loope
(bad)
mov
call
stc
scas
cmps
jle
outs
xor
jmp
ja
cmp
iret
outs
repz
dec
lods
sub
jecxz
out
rcl
inc
or
mov
mov
fadd
not
pop
sbb
jle
mov
or
pop
push
sub
xor
stos
pop
jl
bound
and
adc
int
stos
mov
mov
mov
dec
movs
jg
xor
out
inc
xchg
mov
enter
in
out
repz
pop
push
or
jg
adc
push
fistp
cmp
or
pusha
cmp
in
dec
or
fdiv
loopne
sahf
pusha
jl
adc
push
push
add
mov
sbb
gs
and
push
jno
sbb
jecxz
or
mov
or
(bad)
xor
xor
(bad)
stos
dec
or
aaa
xchg
mov
not
pop
pushf
call
jno
sub
inc
repnz
push
call
inc
xor
icebp
mov
inc
movs
add
xchg
fdivr
(bad)
iret
pop
out
stos
ins
movs
pop
daa
inc
test
or
or
ror
and
lods
or
int3
or
call
lahf
mov
in
and
push
or
mov
sub
cli
out
push
inc
sub
push
cdq
ins
(bad)
out
mov
test
popa
push
pop
add
es
out
out
mov
adc
sbb
dec
pop
and
fwait
test
adc
inc
adc
dec
jne
mov
(bad)
cli
int3
(bad)
jecxz
jp
loop
push
neg
mov
idiv
loopne
fld
icebp
or
pcmpeqd
sub
ss
mov
icebp
sub
mov
pop
cmp
xor
fwait
int
retf
pop
popa
push
cmp
jmp
mov
cmp
mov
xchg
imul
jmp
add
or
sbb
outs
sahf
and
xlat
cmp
xchg
jae
arpl
inc
dec
icebp
cmp
(bad)
movs
mov
adc
jbe
mov
xchg
sub
loope
or
jns
xlat
ret
dec
pop
xor
cmps
xor
fbstp
xchg
fidiv
lea
mov
jnp
xor
or
test
add
loope
dec
mov
push
daa
je
cmp
push
out
sbb
xchg
mov
mov
adc
in
cmp
push
mov
rcl
pop
xor
xchg
jp
pop
in
jmp
dec
sar
into
retf
imul
mov
xchg
lods
test
bound
test
dec
pop
inc
cs
int3
movs
adc
ror
mov
jle
in
jns
clc
std
bound
(bad)
std
inc
push
out
stc
ins
xchg
jg
int3
in
fist
int3
arpl
mov
xor
cmp
jl
pushf
inc
mov
cmp
push
imul
and
mov
mov
fidivr
sub
adc
jge
test
movs
jo
cmps
dec
paddd
(bad)
push
sbb
and
adc
add
lahf
xlat
xor
jnp
outs
inc
aaa
mov
dec
out
cmp
outs
lods
aaa
cwde
sbb
pop
sub
cld
das
push
cs
mov
or
jo
xor
test
cwde
push
in
pushf
adc
test
in
sbb
in
lahf
jnp
mov
push
ret
(bad)
and
scas
test
sbb
pop
sub
fwait
dec
mov
les
mov
popa
aas
sbb
sbb
push
inc
add
pop
jp
add
pop
jns
daa
mov
cmp
cmp
fs
out
push
(bad)
mov
inc
lods
sbb
mov
cmp
xchg
test
xchg
aam
jno
ins
cmp
xor
cs
jne
out
fistp
push
(bad)
lds
add
imul
fild
je
xor
pop
and
ja
push
push
xor
and
fstp
sub
mov
cmp
ret
mov
out
push
aaa
retf
inc
pop
ffree
mov
and
mov
mov
ss
and
xchg
add
in
pop
(bad)
jp
mov
lea
js
mov
ficom
inc
or
int
rol
out
add
push
jae
es
mov
js
inc
mov
test
xor
xor
xchg
push
cmp
mov
repz
hlt
add
ss
jmp
dec
dec
stos
xor
push
dec
xor
ret
sub
ret
jp
dec
inc
mov
dec
mov
lea
(bad)
fmulp
adc
ja
test
push
pop
or
fiadd
sbb
jecxz
sub
add
mov
rcl
mov
popf
test
es
mov
inc
push
pusha
jbe
mov
xor
in
pop
inc
scas
gs
pop
jecxz
add
dec
or
sbb
cmp
sbb
rcl
and
pop
retf
xchg
out
fadd
leave
stos
dec
jle
ins
jnp
fst
clc
pop
mov
test
cmp
out
imul
xchg
dec
fild
in
enterw
or
scas
pop
pop
hlt
sub
or
push
cld
and
test
add
cmps
aad
mov
xchg
call
inc
xchg
test
retf
js
xor
mov
mov
mov
shl
cmp
sbb
(bad)
xchg
in
or
jns
ins
jecxz
jno
in
popa
mov
ins
xor
cmp
xlat
inc
lock
pop
nop
std
xor
sbb
fst
mov
out
dec
das
jl
sti
test
pop
dec
dec
mov
fwait
ret
add
fs
call
out
adc
fidiv
fmulp
pop
pop
jns
or
push
(bad)
sub
mov
sbb
aas
jbe
and
movs
adc
jp
jl
cmp
sbb
adc
cmp
jle
mov
or
pop
jbe
cmc
xor
xchg
sub
mov
imul
pusha
adc
je
cmps
push
mov
xchg
fimul
fcmovnb
(bad)
jmp
shl
jp
jg
add
add
inc
adc
popf
vcvtdq2pd
aaa
mov
pop
sub
fst
in
fisubr
mov
mov
dec
dec
(bad)
pop
fsub
fnsave
cmp
sub
add
lods
or
loopne
mov
push
xor
enter
pop
repnz
fild
mov
retf
xor
jae
push
push
fsubr
mov
iret
jmp
mov
and
dec
cld
sar
add
ret
cdq
in
xchg
movs
leave
lds
inc
in
lods
js
mov
sbb
test
call
nop
stc
jo
aam
(bad)
outs
into
mov
loop
jne
mov
and
inc
jae
push
mov
push
fimul
push
mov
movs
out
xor
pop
inc
mov
and
sub
xor
pop
mov
hlt
sub
loop
outs
dec
jne
out
cli
out
jp
jl
push
dec
push
push
bound
jne
xlat
and
lock
xcrypt-ofb
cmps
sub
pop
and
sbb
mov
aam
jnp
mov
xchg
add
jmp
inc
mov
ret
arpl
xchg
push
mov
rol
test
fcmovbe
loop
mov
xchg
mov
xchg
and
pushf
(bad)
jmp
mov
jge
or
out
and
sbb
inc
scas
adc
(bad)
out
xchg
dec
ror
test
push
and
aas
or
dec
cmps
and
and
cmp
push
mov
cdq
mov
xor
dec
dec
mov
ss
mov
in
push
popf
pop
cmp
call
dec
xor
jg
inc
dec
(bad)
(bad)
aad
jns
sub
ja
hlt
or
addr16
fs
inc
sar
xchg
push
push
push
xchg
cld
enter
add
xchg
mov
popf
mov
add
call
xchg
xor
push
hlt
inc
sbb
mov
cmp
les
scas
ss
shl
xlat
and
ins
stos
nop
xchg
cmp
xchg
shl
mov
shl
inc
loopne
popf
out
(bad)
xor
inc
adc
xor
dec
pop
retf
pcmpeqw
hlt
and
cmp
mov
idiv
pop
mov
cmp
movs
xor
dec
add
inc
mov
jg
xor
xchg
lock
sub
stos
mov
push
fiadd
jne
lods
cmp
and
ins
push
jno
shr
and
int3
fst
pop
xor
gs
pop
lock
jge
fwait
js
stos
push
or
and
mov
out
aaa
mov
mov
dec
imul
sbb
leave
push
(bad)
push
icebp
xlat
gs
and
shr
inc
push
out
int3
sub
mov
mov
adc
into
imul
data16
xchg
jbe
dec
repnz
ins
mov
jmp
jae
mov
jns
aaa
rcr
mov
mov
sbb
jns
pusha
push
dec
out
out
xor
iret
jmp
rol
cdq
(bad)
add
cdq
inc
jmp
sub
out
mov
aas
pushf
sahf
aad
fwait
pop
jae
push
dec
jmp
cmc
xchg
ss
xor
sbb
ins
loope
xchg
fnstsw
test
fucomip
jno
push
mov
jne
imul
sar
fwait
and
ss
mov
xchg
inc
inc
mov
adc
cli
aam
cmp
sub
adc
in
and
cmp
lock
punpcklwd
xchg
xor
or
arpl
adc
leave
mov
enter
dec
stos
pusha
pop
fcmove
mov
test
mov
cmc
mov
retf
gs
jge
pop
xchg
pusha
adc
pop
dec
repz
xchg
loop
(bad)
inc
pop
in
mov
shr
jae
hlt
bound
mul
shr
sub
ins
shr
mov
mov
mov
xlat
std
adc
lods
sbb
push
pusha
dec
stc
in
mov
in
aad
das
dec
or
movs
test
mov
(bad)
out
call
pop
jno
jae
aas
xchg
mov
rol
inc
mov
push
out
mov
or
(bad)
cmp
fld
mov
cmp
mov
push
xchg
setae
dec
fcomp
and
xor
dec
hlt
sub
fcom
dec
movs
push
rol
aas
(bad)
aad
mov
cmp
jbe
jae
dec
lahf
push
or
test
add
imul
cmp
test
adc
adc
aas
xchg
xchg
xchg
in
and
push
(bad)
daa
mov
xchg
inc
or
sbb
test
add
loop
or
sbb
jb
test
cld
dec
inc
sti
pop
inc
imul
fdivr
dec
pop
cwde
push
sbb
lock
cmp
jle
mov
mov
lahf
retf
cli
aam
int
mov
xor
loope
out
lock
int
cmp
lahf
lods
pop
test
add
inc
sar
popa
fs
iret
loop
or
fist
fisttp
push
mov
imul
mov
xor
vmovntdqa
imul
mov
mov
ins
sub
pop
fistp
js
cmp
cmp
cmc
add
pop
mov
xchg
iret
mov
mov
xchg
cld
lock
js
add
lods
mov
or
add
sbb
mov
ficomp
xor
mov
dec
lock
imul
movs
mov
push
xchg
ss
(bad)
add
(bad)
ds
inc
clc
(bad)
in
in
int
pop
aad
gs
adc
pop
arpl
cs
hlt
jo
jb
adc
push
repz
push
div
retf
mov
sahf
xchg
pusha
mov
sub
cld
and
ror
aaa
cmp
pop
in
xor
jecxz
mov
vcvtsi2ss
cmps
push
scas
and
btc
jb
pop
test
sbb
out
or
(bad)
cmp
test
(bad)
rcl
mov
and
in
sub
inc
out
jno
imul
rcl
mov
mov
pop
mov
sti
pop
loopne
fimul
xchg
ja
inc
daa
mov
push
mov
in
push
sbb
movs
call
dec
cmp
push
js
je
add
nop
into
cli
mov
xchg
ss
mov
adc
dec
jo
fbstp
sahf
in
scas
pop
movs
fs
cs
enter
loop
add
and
loope
pop
jmp
ds
mov
in
leave
int3
into
aaa
leave
push
xor
xor
add
ror
add
jmp
push
movs
es
je
mov
sbb
movs
and
pop
out
inc
and
sbb
mov
sub
mov
add
fist
bound
mov
add
dec
fwait
mov
and
and
rep
and
inc
movs
dec
stc
jne
dec
xchg
jg
and
loop
xchg
lds
inc
aad
test
enter
rcl
sbb
aaa
mov
js
aaa
sub
push
inc
pop
rcl
inc
(bad)
adc
mov
retf
ficom
sbb
test
leave
loope
fwait
mov
mov
scas
inc
int3
mov
jp
inc
mov
je
data16
pop
hlt
pop
push
bound
inc
fwait
mov
cmp
sbb
in
ror
gs
test
jmp
or
add
add
sub
(bad)
in
not
test
sub
stos
das
dec
xchg
mov
ret
call
pop
inc
das
or
sub
mov
ins
daa
ss
cmp
push
out
les
adc
mov
pop
ja
mov
rcr
xor
aad
retf
pushf
pop
cmp
adc
mov
mov
jnp
cwde
fwait
ret
ins
dec
sbb
out
sbb
fidiv
mov
ftst
pop
movs
pusha
inc
xchg
test
xor
shl
movs
cwde
daa
leave
jg
scas
adc
cmp
in
addr16
xchg
jns
lahf
pop
not
xchg
xchg
(bad)
or
xchg
dec
icebp
jns
jmp
cs
les
neg
sub
sub
cmp
shl
jp
dec
pop
push
enter
add
test
pop
mov
mov
cmp
movs
jno
out
leave
(bad)
(bad)
call
sub
repz
sub
sahf
and
inc
inc
cmp
mov
sbb
leave
push
hlt
fwait
aaa
add
and
lods
push
xor
mov
push
popf
and
gs
shl
mov
and
shl
ret
add
adc
mov
adc
stos
and
push
add
aam
pop
cmp
jns
arpl
outs
dec
lea
(bad)
rcl
cmp
adc
push
cdq
pusha
lods
sub
jp
jno
inc
xchg
out
retf
std
out
dec
shr
mov
ret
test
(bad)
adc
outs
movs
(bad)
jbe
push
popf
pusha
sub
mov
mov
fcomi
or
stos
cmp
cli
mov
out
jp
ret
jb
in
ficomp
loope
cmp
enter
in
repnz
xchg
inc
outs
or
nop
cmp
and
cdq
fimul
xchg
mov
mov
sbb
cmp
addr16
js
pop
xor
dec
push
dec
leave
mov
retf
adc
jmp
sbb
fidivr
pop
je
cmp
or
xlat
mov
cdq
xchg
push
in
int
or
repz
mov
fld
mov
iret
dec
les
ret
or
test
jl
push
popf
sbb
test
lods
lods
jmp
mov
pop
leave
dec
fs
(bad)
cli
jle
xchg
mov
mov
adc
xchg
push
(bad)
shl
rol
clc
popf
mov
mov
dec
les
gs
dec
fst
repz
push
mov
jle
sbb
xor
xchg
mov
(bad)
sub
ret
cli
or
xor
and
popf
fwait
cdq
or
lds
xchg
inc
inc
mov
in
push
loopne
adc
sbb
aad
xor
push
sbb
cmp
dec
iret
add
sar
sahf
pop
imul
sub
add
ja
push
inc
adc
or
mov
out
push
ja
imul
std
(bad)
jge
call
js
test
fcomp
and
mov
xchg
repnz
aas
sti
ins
add
cwde
mov
test
sub
cmp
dec
clc
dec
mov
out
int3
mov
adc
lods
repnz
clc
neg
adc
cmp
das
or
aad
sbb
lods
pop
stos
lods
scas
and
std
outs
out
adc
inc
inc
sbb
int
xchg
jmp
ss
leave
sbb
add
jle
cwde
loop
rol
mov
(bad)
mov
or
sbb
or
xchg
pop
jno
mov
fnstenv
cs
imul
ss
test
test
push
and
xchg
and
add
nop
aaa
push
inc
or
mov
cdq
into
ret
mov
lock
jns
mov
stos
(bad)
call
jecxz
lods
shr
mov
jns
fild
lds
or
fdivr
inc
test
push
pop
and
or
push
cmp
das
xchg
or
jp
arpl
(bad)
icebp
inc
test
mov
pop
loopne
inc
inc
nop
aam
adc
sbb
cmc
xchg
xor
inc
dec
inc
imul
jg
sbb
push
dec
jl
pop
leave
jns
inc
cmp
shl
movs
fcmovbe
jge
cmp
push
int3
jnp
mov
sub
dec
dec
sub
repz
loop
fldenv
sbb
neg
xor
mov
push
out
clc
imul
rcr
sbb
add
jmp
iret
ja
add
add
cmp
call
loope
movs
sub
imul
es
scas
sbb
cli
mov
outs
ss
rcl
lds
sub
dec
ret
pop
mov
xchg
fwait
xor
or
jp
jl
cmps
inc
mov
mov
inc
movs
sbb
loop
and
push
pop
push
mov
jle
sub
ror
mov
jo
scas
mov
inc
xchg
and
in
cli
push
and
jmp
mov
lahf
jae
adc
jbe
jnp
fist
xor
push
ins
push
mov
xlat
sub
mov
sahf
ins
rcl
mov
push
sbb
mov
xor
(bad)
mov
cmp
add
adc
sub
dec
mov
push
xor
add
int
cwde
xchg
shl
adc
mov
sbb
popa
clc
cmps
popf
(bad)
stos
rol
stc
mov
fs
aaa
mov
test
mov
mov
sub
xchg
(bad)
jl
push
bound
add
nop
sub
lock
mov
fs
cli
push
fs
jne
pop
jl
cmp
cld
mov
jbe
push
dec
push
jbe
mov
mov
(bad)
xor
and
lods
adc
jle
std
push
(bad)
sahf
(bad)
sbb
xchg
xor
cmp
call
xor
icebp
jmp
push
xchg
retf
repz
popa
leave
xor
loope
and
mov
int
pop
cmps
adc
cmp
shl
in
mov
or
fnstcw
push
mov
mov
sub
xchg
in
int3
cmps
pop
aam
add
add
ins
(bad)
jnp
out
(bad)
cmp
inc
jno
arpl
sub
dec
jp
fstp
gs
daa
rcl
int3
fcomi
jle
inc
ss
sbb
mov
jmp
add
hlt
jae
jns
or
adc
mov
sub
dec
shl
test
icebp
fisttp
sti
lds
std
mov
ret
test
aaa
mov
push
and
neg
jbe
mov
jo
shr
loop
dec
xor
xor
inc
pop
daa
add
fmul
fidivr
push
adc
rcr
pop
cwde
outs
pop
fild
ror
jns
mov
jae
out
inc
jmp
fstp
ror
jno
xlat
ds
mov
or
xchg
jae
jb
icebp
iret
gs
gs
mov
jae
pop
sbb
push
(bad)
dec
ror
pop
inc
mov
xchg
sbb
mov
mov
and
xchg
sub
mov
lods
js
mov
pop
jnp
push
test
outs
out
sub
cmp
stos
repz
xchg
xchg
stos
outs
inc
push
rcl
jl
or
mov
xchg
test
sbb
lahf
xchg
repnz
imul
cmp
mov
pop
jo
fld
jle
jmp
aaa
lods
in
fwait
pop
jle
pop
lahf
(bad)
loopne
xor
fs
mov
ins
es
jle
call
into
push
jae
push
push
retf
dec
(bad)
push
mov
sbb
ins
imul
ret
ds
add
mov
adc
mov
lds
ret
in
cmp
into
pop
fsubrp
sti
sub
pushf
dec
cli
into
sahf
out
shr
and
xchg
xor
je
cmps
push
and
inc
jno
test
mov
add
retf
clc
push
xchg
rcl
test
mov
cmp
imul
(bad)
dec
inc
mov
mov
cmp
cmp
into
pop
cmp
push
icebp
data16
ja
sub
(bad)
mov
xchg
inc
bound
(bad)
xlat
mov
sub
fisttp
retf
dec
mov
js
mov
sbb
(bad)
imul
stos
and
jo
sti
and
pop
clc
sbb
push
cdq
into
mov
adc
stos
test
xor
or
je
add
scas
mov
nop
inc
imul
xlat
movs
fdiv
cmp
aam
mov
in
lea
outs
(bad)
cmp
movs
or
stos
jl
sbb
imul
adc
ins
and
and
mov
xor
fs
adc
dec
mov
push
popf
jmp
mov
pop
js
rol
adc
imul
movs
mov
shl
sub
push
mov
icebp
push
xchg
out
sbb
lea
retf
jle
addr16
aad
inc
lods
jo
in
sub
pop
(bad)
pusha
mov
cmp
mov
ror
cmp
add
adc
and
add
out
pop
dec
cmps
sub
add
dec
sub
lahf
fisub
xor
imul
push
test
movs
sti
xchg
cwde
pop
cmc
xchg
or
pushf
(bad)
stos
ds
sar
push
pop
loopne
ja
cwde
push
dec
dec
hlt
test
fwait
xchg
jo
sub
fwait
pop
mov
fdivr
jle
jmp
daa
sub
outs
icebp
cmp
mov
xor
jbe
les
rol
dec
pop
push
test
out
lods
jecxz
scas
and
shl
aam
xchg
scas
push
sbb
sar
ins
dec
mov
jp
js
push
push
std
add
cmp
call
popf
outs
and
test
xor
daa
jmp
inc
xchg
call
fcom
cld
call
xchg
stos
pop
ja
lods
nop
pop
outs
jno
or
les
shl
or
mov
pushf
jg
mov
stos
jmp
fisubr
sub
jnp
adc
xchg
mov
inc
or
jge
cmp
push
iret
jnp
cwde
rcr
sub
das
out
out
nop
cs
xor
div
(bad)
retf
mov
push
jg
sbb
jae
mov
push
mov
jnp
sub
xchg
push
lss
xor
int
out
repnz
inc
lods
adc
inc
mov
sbb
adc
imul
fistp
jbe
dec
fdivp
call
repz
daa
pop
shl
mov
add
lds
mov
push
and
sar
cmp
xor
das
sbb
add
mov
or
xor
xor
mov
imul
es
sbb
pop
mov
les
xor
pop
sbb
push
test
and
ret
idiv
loop
lods
popa
in
xlat
into
mov
addr16
jb
sbb
cmp
pop
jle
push
inc
inc
jb
inc
ins
cmps
cmp
fwait
push
repz
idiv
or
mov
pop
xlat
(bad)
sbb
mov
mov
hlt
shl
xchg
in
or
xor
mov
call
mov
mov
call
popa
jne
(bad)
push
add
adc
xchg
lock
mov
push
mov
int3
mov
fmul
adc
sub
arpl
out
push
jmp
jnp
fucomi
cmp
in
cmp
mov
ins
out
lods
icebp
sbb
mov
mov
mov
cmp
xor
xchg
mov
(bad)
add
call
jle
adc
xchg
jmp
les
data16
ret
pushf
out
mov
popa
mov
enter
pop
repnz
pop
cmp
outs
test
xor
nop
mov
call
aad
sub
jne
aad
jg
xor
lods
(bad)
enter
test
out
and
inc
jle
outs
push
inc
movs
xor
mov
call
sbb
fmul
in
adc
loopne
mov
or
imul
pop
cmp
mov
dec
mov
sbb
xor
ror
or
mov
stos
out
ret
sub
ja
cld
pop
xchg
fldl2t
push
mov
hlt
das
xor
sbb
(bad)
lock
xchg
outs
hlt
jb
stc
(bad)
retf
cmp
inc
mov
inc
pop
jge
in
mov
fcomp
mov
arpl
sub
outs
xor
lock
xor
stos
dec
std
mov
pop
je
add
ja
je
and
arpl
sbb
pop
aam
je
adc
mov
int3
mov
ror
xor
sar
pop
adc
sar
fist
(bad)
pusha
adc
fs
in
push
sbb
cmps
outs
icebp
cmps
call
repz
aad
adc
push
pop
mov
ins
int3
or
pop
pop
mov
fidiv
push
nop
mov
mov
push
jp
(bad)
out
xor
(bad)
jnp
mov
jae
mov
fwait
(bad)
fwait
nop
inc
retf
es
dec
sahf
sahf
sub
(bad)
mov
call
mov
aam
shr
add
enter
mov
xlat
mov
push
test
jp
shl
push
jb
xor
adc
div
fnsave
movs
shr
pop
push
imul
mov
adc
push
pop
call
addr16
jns
outs
mov
sub
stos
jg
outs
xor
aad
pushf
retf
das
icebp
lds
jg
pop
mov
shl
repnz
test
lods
push
test
lds
mov
pop
add
ins
dec
aaa
in
xchg
pop
or
stc
ss
loope
(bad)
jae
push
mov
mov
stc
test
retf
ret
sub
or
pop
outs
add
push
mov
xchg
bound
add
add
test
rol
xchg
leave
dec
mov
xchg
or
push
mov
aas
aas
enter
test
clc
out
mov
mov
pop
cmp
dec
push
jmp
push
les
jle
idiv
pop
jns
jmp
jle
gs
js
xor
xchg
sub
sbb
add
pop
and
test
inc
cmp
sub
cmp
push
pusha
push
imul
push
ret
push
mov
dec
mov
nop
cmc
xchg
inc
jg
sbb
push
dec
int
sub
into
js
cli
outs
ss
push
repnz
loopne
dec
cmp
(bad)
and
push
test
xchg
sbb
jmp
inc
inc
inc
pop
lahf
ds
in
int
test
lods
cwde
ret
inc
sbb
sub
pop
dec
mov
jns
pop
inc
shl
sub
je
ret
loope
mov
movs
mov
fild
repz
inc
ror
pop
das
(bad)
lea
jge
mov
cmp
push
(bad)
push
dec
inc
or
mov
fisubr
nop
dec
push
nop
movs
jae
xchg
jmp
dec
xchg
push
inc
pushf
inc
int3
add
sub
stos
mov
ds
sbb
data16
mov
pop
lock
aaa
jns
lock
jb
sbb
stos
inc
(bad)
in
call
xchg
and
mov
test
test
jns
popf
ins
xchg
stos
add
ret
jmp
mov
inc
push
pop
pop
inc
(bad)
mul
mov
dec
mov
(bad)
scas
call
sub
aad
outs
xchg
icebp
inc
add
cmp
xchg
aaa
push
into
xchg
xchg
sub
rol
xor
jno
adc
(bad)
outs
push
xchg
inc
outs
leave
fidiv
mov
and
std
pop
mov
xchg
mov
mov
test
in
outs
adc
lock
cdq
jg
push
sub
adc
sar
sub
pop
jg
mov
scas
es
(bad)
add
adc
enter
sub
daa
inc
fldenv
aaa
mov
jp
call
cwde
mov
test
sbb
out
loope
ja
and
and
xacquire
popa
dec
sbb
push
mov
jae
(bad)
sbb
pop
das
or
mov
nop
mov
out
adc
push
rcr
shr
and
push
xchg
jb
int
pushf
jg
dec
or
sbb
sbb
mov
fidivr
outs
out
mov
hlt
pop
xchg
pop
jne
(bad)
xor
loope
(bad)
scas
sbb
add
and
mov
stos
or
stos
push
int
retf
mov
retf
movs
push
push
dec
sbb
or
adc
in
cs
test
inc
stos
and
sub
pusha
movs
outs
jle
pop
repz
pop
jno
les
enter
jle
(bad)
xlat
(bad)
adc
cmp
aas
jne
dec
out
iret
or
or
arpl
fdivr
fldenv
and
jnp
xor
je
call
ds
jge
sbb
xchg
jns
das
sbb
inc
mov
aam
shl
push
mov
mov
xchg
aaa
fs
nop
mov
pop
fs
sub
aam
ins
repnz
ret
stos
inc
nop
or
push
xchg
test
pop
mov
test
rcr
pop
leave
jl
push
gs
add
add
xchg
fisub
add
leave
push
rol
add
xchg
xor
out
push
push
adc
adc
pop
xchg
inc
sahf
and
lea
dec
dec
enter
xchg
pop
adc
out
mov
dec
mov
adc
ins
fnstsw
ins
inc
jp
cmp
cmc
mov
imul
cld
(bad)
out
jbe
fstp
int3
sbb
inc
dec
xchg
or
ret
pop
add
add
scas
call
mov
jmp
in
(bad)
aaa
push
fsub
add
mov
popa
inc
sub
mov
ja
movs
mov
mov
lods
sub
mov
inc
jae
ret
mov
rol
ins
movaps
inc
lahf
xchg
shl
in
cmp
retf
std
mov
jmp
(bad)
icebp
mov
mov
rcl
push
outs
ret
jae
sbb
mov
call
or
jno
mov
mov
test
das
rol
pop
cmc
pop
cli
cmps
ret
fwait
jp
mov
lock
jns
stc
cmps
xchg
cmps
lods
cmp
mov
dec
ss
mov
ss
adc
cmp
mov
xchg
(bad)
nop
fsub
xchg
jmp
fadd
popa
and
out
and
repnz
in
test
dec
aaa
jnp
jecxz
inc
cmp
add
test
or
adc
push
mov
test
mov
pop
cmps
jl
push
call
call
(bad)
or
pusha
adc
(bad)
test
test
xor
inc
jbe
cmp
lea
add
pop
js
xchg
push
or
push
les
aas
cmp
imul
aaa
sbb
cmp
(bad)
and
ja
push
push
xchg
push
add
xor
mov
add
push
mov
pop
scas
and
iret
in
ficom
push
ja
jb
clc
popf
pop
push
aaa
jmp
mov
mov
rcl
shr
fbstp
lods
(bad)
fcmovbe
lock
cmp
dec
loopne
sti
stos
(bad)
cld
ja
arpl
jmp
xchg
pop
mov
xchg
cs
out
aam
loop
inc
xchg
loope
adc
dec
aad
cmp
js
pop
jp
gs
cld
iret
dec
cdq
scas
cld
jg
in
ror
test
cmp
aam
lea
mov
cmp
push
pop
ds
out
dec
cmp
mov
imul
jne
loope
out
jmp
std
add
and
aam
mov
cmp
mov
fisttp
jp
pop
add
int3
mov
adc
jmp
and
xor
cmp
mov
jns
xor
sub
or
cli
clc
mov
pop
(bad)
mov
(bad)
rcl
xor
sbb
adc
lock
xchg
mov
mov
xchg
mov
movs
adc
ss
mov
(bad)
lock
arpl
ins
addr16
rol
sti
push
xchg
dec
pop
shr
adc
popf
out
xchg
cld
bnd
jmp
sub
(bad)
out
mov
shl
and
jae
das
lods
and
jno
rcr
sbb
lock
jmp
push
and
sbb
push
(bad)
out
call
fimul
mov
bound
add
xlat
rcl
inc
mul
mov
add
pop
sub
leave
mov
es
ret
pop
popf
xchg
out
in
mov
pop
shl
adc
sbb
fwait
retf
adc
test
xchg
mov
repnz
aad
xchg
jmp
sub
popa
lods
mov
jnp
movs
dec
ds
out
push
sbb
sub
mov
into
or
push
push
push
mov
fbstp
mov
pop
sub
xor
jnp
mov
movs
mov
hlt
(bad)
loopne
mov
xor
jp
repnz
stos
mov
push
aad
ret
xchg
mov
adc
(bad)
in
sbb
(bad)
push
stc
mov
xchg
fmul
jno
xor
fsub
adc
mov
and
dec
outs
sar
xchg
outs
adc
in
mov
or
test
push
(bad)
jmp
adc
and
adc
leave
and
mov
mov
fild
mov
fnstsw
sahf
data16
lds
sub
dec
mov
inc
shrd
and
sub
mov
iret
jae
add
add
cmp
aaa
gs
bound
xchg
outs
lea
or
ja
stos
add
or
and
push
aad
stos
mov
inc
sub
jl
cli
(bad)
(bad)
sub
xlat
xchg
inc
lea
jae
aas
add
test
jmp
les
add
gs
mov
jecxz
retf
aam
fstp
push
sbb
sar
xchg
out
out
adc
add
sti
mov
cld
push
jns
xor
in
jle
ficomp
int
mov
add
popa
lods
mov
mov
xlat
cmp
cdq
pusha
push
ds
add
jecxz
pop
add
add
dec
scas
outs
pop
outs
cli
das
xor
cmps
xchg
cmp
dec
(bad)
in
and
mov
cmp
pop
and
push
dec
or
push
mov
xor
xchg
dec
pushf
mov
mov
jle
adc
les
ficom
sub
icebp
cld
mov
pushf
xor
dec
icebp
add
mov
or
pop
adc
inc
mov
(bad)
cmp
or
add
mov
mov
fnstenv
mov
movs
xchg
stos
dec
dec
jnp
fisttp
mul
sub
std
fwait
adc
jl
popf
jmp
cmp
int
push
mov
mov
(bad)
mov
mov
lahf
pop
add
or
jle
enter
scas
sub
mov
jnp
stc
pop
add
add
mov
dec
int3
cmp
leave
xchg
shl
dec
out
push
clc
les
adc
scas
ja
adc
sub
aam
xchg
ins
mov
mov
inc
sahf
out
xchg
pop
adc
out
xchg
dec
mov
xor
lock
xlat
movs
adc
hlt
cmp
in
mov
es
adc
fs
jmp
xor
dec
fwait
push
push
outs
jne
clc
jo
out
pop
out
ja
lds
add
jmp
inc
div
fist
ret
sbb
(bad)
icebp
sub
xor
aas
loope
and
retf
int
push
aaa
cmps
aad
xor
(bad)
inc
dec
cvtpi2ps
xor
nop
xchg
ret
sbb
lea
inc
and
imul
fistp
sbb
cmc
sbb
add
(bad)
scas
jmp
leave
xor
dec
push
retf
dec
jae
jp
and
xchg
jno
jmp
call
jle
cmp
xchg
mov
sbb
xchg
daa
popf
jl
xor
retf
xor
es
jge
das
(bad)
std
jl
ins
sub
movs
or
shl
mov
xchg
jne
scas
out
or
or
push
mov
push
cmps
fcom
push
push
mov
cdq
pop
frstor
push
mov
or
pop
lahf
into
pop
fisttp
mov
xor
mov
add
ins
dec
jmp
fbstp
ja
xchg
mov
aam
adc
pusha
jmp
adc
xchg
mov
ss
xor
mov
test
fisub
fisttp
dec
lds
aad
(bad)
fbld
jno
adc
pop
sub
test
xchg
int
mov
enter
mov
push
push
mov
pop
fs
movs
in
mov
xor
dec
xchg
pop
mov
mov
or
cwde
xlat
pushf
(bad)
retf
std
js
mov
sub
push
sbb
cmp
or
pop
adc
movs
iret
aad
add
ror
inc
xchg
enter
repnz
mov
mov
fs
(bad)
fcmovbe
jno
mov
cs
in
pop
lock
sbb
shr
xor
inc
xor
ror
(bad)
sbb
ror
sub
ins
fisub
adc
pushf
cmp
lods
loopne
loop
add
icebp
inc
bound
sbb
jb
pop
cli
in
xor
mov
mov
out
mov
inc
add
cmp
test
sbb
adc
add
sub
test
icebp
addr16
sub
and
call
pop
and
nop
retf
adc
std
aas
xor
call
mov
div
mov
or
dec
push
call
fstp
into
repz
addr16
aam
cld
jmp
icebp
push
jo
test
in
xchg
ins
mov
inc
popf
or
jmp
sbb
repnz
shl
lahf
push
cmps
and
sar
mov
cmp
std
push
mov
xchg
lds
mov
xchg
cwde
in
stos
sub
lahf
pop
sbb
jl
sbb
rdtsc
outs
call
inc
clc
jecxz
sub
add
or
int3
std
dec
out
in
(bad)
sbb
push
arpl
mov
int3
movs
addr16
shl
ror
pop
icebp
and
sbb
sahf
mov
push
inc
add
hlt
ret
xor
out
xor
addr16
sub
ja
mov
xchg
(bad)
xor
inc
pushf
lea
scas
fs
and
dec
pop
clc
pop
mov
mov
add
test
pushf
cli
ja
div
aam
popa
or
(bad)
repz
data16
xor
ja
adc
mov
jnp
addr16
dec
mov
int
add
popf
mov
rcl
push
fldcw
fidiv
push
add
fdiv
ins
cmp
push
pusha
mov
xchg
jne
ror
fstp
adc
push
test
mov
in
xchg
test
inc
shl
or
iret
xor
out
xchg
or
(bad)
or
addr16
loopne
pop
cmp
dec
mov
cmp
inc
rcl
into
lock
cmp
inc
mov
jp
cs
cmp
cmps
div
popa
cmp
gs
scas
cmp
jbe
jno
addr16
xchg
jnp
adc
add
imul
ret
cmp
jno
sbb
xchg
int
inc
or
push
jae
or
inc
xor
call
out
addr16
popf
stos
(bad)
adc
outs
xor
or
jbe
pushf
or
push
inc
push
mov
add
inc
(bad)
pop
aaa
dec
mov
(bad)
cmp
loop
jne
mov
out
cs
mov
dec
cli
ffree
shl
cmps
mov
mov
pop
sbb
cmp
cwde
mov
or
xor
pusha
xor
mov
push
mov
jmp
push
lahf
and
push
in
imul
push
pushf
jno
pop
xchg
mov
lods
imul
inc
adc
and
or
cmp
ds
(bad)
and
cmp
daa
nop
fwait
in
jno
mov
daa
repz
jae
out
out
mov
mov
sub
mov
shl
mov
inc
lods
int
or
dec
push
stos
pop
mov
fstp
mov
mov
addr16
mov
ds
dec
mov
outs
adc
dec
push
push
mov
mov
mov
sbb
push
movs
and
pop
fist
(bad)
out
xor
sub
dec
ror
jge
nop
loopne
dec
lahf
(bad)
jl
fld
mov
sbb
ins
jmp
sub
pop
dec
int3
in
out
inc
sti
into
fld
mov
sti
xor
xchg
and
and
push
sti
int
mov
sub
shl
jbe
movs
and
outs
or
imul
mov
movs
pusha
imul
jge
or
pusha
jae
sub
fiadd
adc
or
mov
mov
cmp
jge
les
out
pusha
(bad)
out
inc
adc
dec
sub
jge
adc
or
jnp
cmps
dec
dec
jnp
aad
dec
fdivr
jno
mov
xchg
rol
or
aaa
add
arpl
(bad)
fidivr
enter
gs
aam
daa
lahf
jg
test
adc
mov
jnp
(bad)
(bad)
jne
sub
cmp
stos
imul
xor
ins
adc
div
pop
das
daa
ror
pop
mov
xlat
jl
test
and
pop
test
sub
mov
lock
mov
(bad)
pusha
out
dec
mov
fadd
xor
xor
icebp
add
dec
test
mov
cmp
(bad)
dec
out
leave
mov
repnz
test
lahf
or
nop
cmp
push
cld
xor
mov
test
mov
sbb
stc
mov
stc
cmp
in
je
ins
sub
add
out
int3
pop
sbb
int3
out
(bad)
push
leave
mov
xor
cmp
mov
jge
add
xor
aad
aaa
orps
inc
or
mov
call
sub
mov
or
add
sub
mov
sti
pop
xchg
fild
mov
mov
mov
fdivr
cwde
out
dec
sub
inc
(bad)
(bad)
fld
lock
sub
cmp
mov
push
cli
call
inc
gs
shl
xlat
ror
iret
in
mov
sub
imul
jb
(bad)
jae
mov
retf
add
add
test
xchg
xlat
mov
fsubr
out
mov
or
dec
cmp
jmp
dec
repnz
push
fadd
mov
mov
dec
inc
push
mov
ins
(bad)
sub
fs
sbb
stos
neg
dec
add
fs
jp
fnstsw
xchg
lds
dec
mov
test
push
fwait
stc
lods
adc
inc
addr16
outs
mov
mov
std
cdq
es
mov
int3
jl
sbb
fild
or
mov
pop
mov
sub
dec
aaa
outs
arpl
in
mov
xor
xchg
test
ficom
fcomp
dec
retf
test
ins
xchg
push
cs
(bad)
and
sbb
sub
push
jb
xor
mov
mov
mov
sub
cmp
jo
sahf
fcom
out
into
pushf
add
sar
mov
fcom
test
fcomi
sbb
mov
sub
pop
popa
nop
imul
inc
and
sub
(bad)
mov
push
popf
aas
leave
dec
mov
pop
bound
fimul
dec
mov
ret
hlt
xchg
dec
ss
gs
lds
adc
mov
and
cmp
push
ds
pushf
sub
scas
adc
pusha
mov
inc
cmp
sbb
cld
ja
pop
add
out
daa
dec
rcl
leave
ss
xchg
pop
movs
imul
push
inc
mov
pop
adc
inc
loope
mov
scas
and
ins
std
shl
sti
cld
or
jle
test
xor
push
mov
hlt
mov
fucomip
neg
inc
or
retf
fs
fstp
cmps
pop
dec
in
push
fdiv
ja
mov
ss
test
sub
sbb
jo
mov
inc
push
lock
mov
cld
sahf
jp
sti
xchg
sbb
cli
xchg
into
cmps
outs
mov
das
imul
jg
push
outs
dec
pop
leave
out
in
lods
cmp
bnd
mov
aad
pop
cdq
cmp
mov
jmp
xchg
aad
rcr
cmc
ret
push
(bad)
pop
pop
mov
test
pop
dec
xor
push
cmc
jl
pmaddwd
mov
cmp
sub
pop
dec
fnstsw
cmps
ds
mov
leave
mov
mov
ja
xchg
int3
add
jmp
aas
(bad)
xor
addr16
pusha
inc
mov
push
call
or
jl
outs
xor
inc
loope
hlt
mov
xor
fistp
inc
ins
inc
add
mov
fstp
adc
jnp
(bad)
mov
sub
xchg
mov
pusha
jo
sub
test
ins
adc
cmc
sti
iret
addr16
test
imul
and
(bad)
(bad)
mov
push
arpl
or
sahf
leave
lahf
mov
and
fidivr
inc
retf
call
int3
jno
aas
movs
mov
pop
fcom
cmps
xor
xor
test
pop
cli
test
push
dec
stos
jne
pop
ds
icebp
lods
and
sbb
dec
and
mov
imul
mov
inc
aam
and
int
ds
(bad)
dec
jne
in
inc
push
add
mov
jmp
sbb
sbb
ds
loope
xor
cmp
mov
dec
lds
dec
inc
xor
(bad)
in
push
mov
mov
sbb
cld
or
pop
mov
aas
aas
push
xchg
cwde
mov
inc
mov
sbb
hlt
mov
inc
sub
xor
push
cmp
ret
lds
call
outs
aad
sub
push
jp
(bad)
mov
inc
jmp
pop
cdq
pop
cmp
call
sub
inc
mov
ret
push
data16
mov
pusha
out
jle
ds
sbb
dec
dec
add
pop
hlt
inc
loopne
not
cmps
fld
movs
data16
dec
aas
xchg
sbb
xlat
fcomip
pop
mov
cmp
sahf
ret
(bad)
(bad)
jns
pop
mov
ret
ja
loop
add
pop
lea
into
shl
mov
add
or
or
outs
imul
fld
cmc
mov
cmp
lods
push
loope
cmp
add
out
bt
int
xchg
mov
jg
inc
cmp
dec
fcom
inc
clc
fwait
lea
stos
lods
(bad)
into
and
dec
jno
mov
sbb
adc
cmps
add
mov
sbb
cmp
out
xor
dec
push
push
cmp
mov
cmp
xor
cmp
and
mov
cs
nop
inc
xor
cmc
mov
mov
dec
wrmsr
repnz
jnp
out
mov
xor
inc
push
sbb
jno
push
and
es
adc
xor
and
mov
not
xor
cmp
repnz
js
sub
mov
cwde
mov
adc
push
mov
pop
in
fistp
out
shl
pop
xor
iret
and
xchg
fisttp
mov
outs
movs
pusha
and
sahf
inc
sub
in
out
and
scas
ja
fcomi
repnz
jno
sbb
adc
cmp
je
dec
sub
inc
jl
mov
push
pop
adc
aaa
fchs
mov
dec
sbb
addr16
dec
push
mov
pop
mov
rcr
push
or
mov
fdivr
xor
(bad)
out
repnz
mov
imul
mov
scas
jle
mov
xchg
add
(bad)
in
hlt
sahf
xor
jae
addr16
mov
sbb
mov
std
fbld
fisttp
mov
into
inc
call
xchg
and
js
ins
popf
adc
jmp
mov
mov
mov
clc
loopne
sbb
sbb
out
mov
pop
add
mov
push
aas
(bad)
iret
cli
inc
lods
es
in
jbe
jge
mov
cmp
cmp
or
or
out
pusha
int
sbb
sbb
fsubr
xor
xchg
mov
cmp
ret
and
xor
les
int3
mov
hlt
and
pop
aaa
out
jbe
xor
add
mov
pop
enter
sub
mov
(bad)
fidiv
mov
iret
push
cmp
test
pop
pop
repnz
xor
mov
repnz
clc
add
xchg
test
js
test
jo
dec
hlt
outs
xchg
pop
repnz
pop
test
mov
xor
dec
push
sbb
pop
jnp
iret
fcomp
outs
or
into
mov
or
je
adc
(bad)
mov
xchg
jp
stos
in
mov
(bad)
jle
adc
or
mov
xchg
ficomp
fdiv
(bad)
mov
in
lods
mov
dec
push
cmp
inc
ror
push
or
dec
test
push
add
xchg
add
out
jbe
popf
and
ins
stos
js
fisubr
scas
enter
popa
jne
pop
lods
call
loop
sahf
xchg
push
or
adc
shl
jns
bound
lods
push
call
in
scas
sar
push
fsubp
shl
cmp
add
out
sbb
or
vmwrite
jns
cmp
ret
pop
fisttp
out
add
push
xchg
jl
and
xor
cmp
or
shr
xchg
mov
sub
xchg
movs
(bad)
sbb
jbe
sub
dec
in
ss
and
js
loopne
mov
mov
ja
inc
cmc
out
aas
inc
jmp
popf
adc
xchg
pop
fucom
lds
sbb
repz
push
(bad)
jb
ds
sbb
sbb
pop
(bad)
retf
jmp
add
mov
dec
shl
push
add
sar
xchg
imul
scas
inc
movs
xchg
loope
inc
mov
imul
push
mov
aad
imul
jecxz
push
cmp
jg
mov
jp
dec
daa
dec
mov
jmp
jb
mov
mov
mov
jl
ja
mov
js
stos
push
pusha
jmp
cmps
cmp
lahf
mov
stos
mov
mov
cmp
adc
and
add
dec
mov
adc
mov
dec
push
imul
in
inc
mov
fnstsw
inc
jae
ja
mov
jo
mov
clc
adc
push
lods
loope
dec
or
cli
in
mov
cs
adc
ds
bound
(bad)
jmp
and
(bad)
jg
adc
pop
xor
je
or
fnsave
std
gs
jno
shr
lds
mov
xchg
cmp
pop
popf
xchg
fisub
mov
repz
jo
adc
pop
inc
adc
mov
test
add
fwait
jne
xchg
sub
mov
pop
adc
pop
pop
jle
out
push
dec
jne
cmp
jmp
or
push
scas
sbb
jmp
outs
bound
retf
shl
xchg
mov
outs
out
fdivr
mov
mov
jno
(bad)
jo
adc
repnz
adc
addr16
mov
pop
sub
cmc
mov
cmp
mov
loope
sub
add
imul
nop
mov
fs
dec
movs
das
cmp
adc
xor
jp
or
xor
(bad)
jno
sub
xor
mov
aaa
dec
retf
xchg
or
ror
popf
mov
or
ds
out
(bad)
push
lock
push
inc
fcom
jge
add
xor
mov
popa
daa
xlat
sub
loopne
cmp
mov
dec
pop
fsub
sub
repnz
mov
push
or
cmp
inc
mov
sahf
imul
mov
iret
imul
jbe
pop
push
test
mov
lahf
xchg
add
sbb
pop
jge
test
mov
shl
enter
ficom
add
fdiv
fadd
push
cwde
fsubrp
shl
cmc
inc
and
xor
aaa
pop
dec
addr16
ss
pop
scas
xor
mov
stos
(bad)
in
xor
por
test
aam
sbb
mov
hlt
test
imul
test
jmp
aad
xchg
xchg
jnp
cmp
nop
call
test
inc
aam
sti
stos
int
lods
fsub
je
ja
mov
rol
pop
jp
fistp
test
add
cdq
aam
pop
jno
cmp
inc
(bad)
and
cmp
sub
dec
jnp
dec
jl
iret
push
cs
(bad)
ficomp
jmp
mov
pop
jmp
inc
push
dec
sahf
fsub
jno
adc
fdiv
sbb
ds
test
shr
mov
stos
aas
popf
add
mov
dec
xor
stos
and
xchg
add
rcl
and
push
ja
std
cmps
int3
in
or
mov
icebp
jmp
push
add
pushf
aas
mov
or
(bad)
xchg
ss
jno
popf
dec
pop
push
push
call
fiadd
test
bound
xor
test
mov
add
clc
hlt
dec
scas
push
xor
in
out
pop
sub
jbe
movs
test
call
jle
xchg
pop
hlt
sub
lods
and
fnstenv
pop
test
outs
imul
mov
inc
pop
mov
cmp
cld
jb
aam
int
(bad)
jnp
mov
ins
inc
sub
mov
stos
gs
movs
adc
popa
push
jle
sbb
push
stos
sbb
sbb
jecxz
add
jmp
adc
push
push
jmp
vmovaps
adc
je
xchg
lods
enter
movs
ret
lds
mov
add
sahf
pop
mul
and
(bad)
dec
(bad)
jmp
and
jnp
cmp
adc
push
cli
sar
pop
fisub
inc
mov
js
and
add
push
push
ins
call
sub
stos
mov
mov
inc
adc
or
jne
fst
cmps
addr16
lods
push
imul
mov
dec
shr
dec
jge
sahf
pop
xchg
es
enter
lahf
into
out
xor
pop
cwde
in
sbb
sar
xchg
movs
(bad)
fisttp
test
sti
jbe
out
sti
xor
adc
and
cmp
hlt
xor
pop
in
cmp
jmp
lock
int
cmp
ret
lods
mov
imul
ret
cmp
sbb
fst
in
jae
xlat
sbb
idiv
and
and
cmp
xchg
sub
xlat
xor
fimul
pop
scas
fs
shr
rol
mov
scas
int3
pushf
fcos
adc
add
dec
mov
push
outs
popf
push
stos
leave
xlat
sti
sub
retf
jl
stos
ds
mov
adc
jle
fwait
xchg
retf
xchg
shl
std
mov
or
dec
dec
mov
mov
mov
(bad)
sbb
fcom
fld
mov
jno
cmp
test
or
xor
imul
dec
and
pop
push
mov
inc
jle
cmp
repz
and
ret
cmp
push
(bad)
and
dec
leave
sub
scas
fisttp
fisub
push
ror
ror
jno
dec
jae
fisttp
adc
dec
cmps
test
aas
jle
pop
sbb
jl
iret
clc
(bad)
in
mov
lea
adc
inc
xchg
cdq
dec
adc
hlt
neg
xor
mov
pushf
ins
sub
sbb
nop
gs
gs
jmp
inc
sub
add
ins
fldcw
sbb
int
pop
inc
repnz
jmp
sub
aaa
leave
cmp
jp
stos
jle
sub
icebp
add
enter
lea
cmp
sbb
std
sar
les
movs
add
arpl
stos
xchg
or
nop
imul
int3
int
add
loop
leave
adc
stc
dec
push
ret
in
enter
lods
sbb
call
popf
sub
leave
jmp
adc
rcl
fwait
imul
pop
sub
mov
rol
push
addr16
sti
push
and
imul
xchg
and
sti
pop
push
sahf
mov
fcomip
je
in
clc
cld
jb
cld
stos
nop
hlt
pusha
retf
fnstenv
mov
cdq
outs
pop
fmul
dec
mov
and
loopne
js
inc
xchg
jne
jl
cdq
retf
inc
jb
shr
xor
xor
fstp
cmp
jb
mov
pop
sbb
enter
mov
rol
push
stc
mov
test
xchg
dec
iret
sub
and
jae
jle
cmp
jmp
dec
in
lods
push
les
dec
inc
and
(bad)
sbb
xor
in
sub
stos
lods
sub
shl
jle
ja
das
sub
push
iret
sar
mov
mov
pop
sbb
mov
dec
sahf
sub
and
and
test
fs
in
data16
pop
adc
and
aad
jb
mov
lods
fs
inc
mov
pop
sub
sar
mov
retf
jo
stos
sbb
int
lahf
das
mov
and
xchg
mov
or
sub
pop
movs
jne
(bad)
sti
ds
inc
inc
fst
shl
je
sub
jmp
cmp
sub
and
(bad)
rcl
in
imul
mov
and
(bad)
and
dec
rol
mov
call
mov
fwait
lods
sub
aaa
mov
stos
sbb
xchg
xchg
pop
dec
cdq
ds
adc
imul
dec
out
xchg
std
xor
in
fidivr
fisttp
scas
jae
jae
in
sub
mov
adc
neg
ret
mov
paddw
nop
mov
mov
call
gs
js
enter
das
mov
sub
push
dec
cmps
or
pop
pop
pop
or
xor
les
imul
sub
ss
rcr
data16
xchg
aas
sbb
lahf
ja
mov
inc
lahf
loopne
inc
pop
pop
test
push
fild
fwait
(bad)
stc
in
dec
xchg
and
dec
cmp
rcr
stc
cmps
ret
(bad)
cmp
push
enter
push
pop
cld
mov
imul
das
jb
cmps
mov
dec
jecxz
pusha
loop
and
out
xor
test
mov
dec
add
sbb
mov
or
push
xchg
xor
or
or
sbb
xchg
adc
out
mov
and
stc
into
sub
imul
or
xchg
mov
cdq
call
cmc
imul
inc
xchg
inc
push
fs
or
mov
in
cmps
aad
lea
dec
xor
push
xor
cmp
fldcw
lods
popf
and
adc
cmp
push
push
inc
in
addr16
data16
inc
add
mov
cmp
test
push
jecxz
mov
(bad)
adc
hlt
push
cld
jbe
jl
cli
int3
hlt
jge
pop
and
adc
cmc
mov
xlat
add
mov
mov
addr16
mov
sbb
cmp
scas
pop
ja
cld
popa
shl
out
jmp
jne
mov
lods
fwait
pop
cmp
push
jne
push
dec
call
push
add
adc
push
lds
push
aad
pop
sub
cdq
dec
cmp
sbb
xchg
(bad)
ds
mov
pop
nop
aam
loope
fsub
push
sub
inc
cmc
sti
arpl
dec
sub
ss
shr
cld
iret
call
add
dec
stc
int3
(bad)
leave
ja
jecxz
aas
je
inc
mov
push
adc
lock
clc
mov
sub
mov
xchg
xchg
loop
out
and
je
sbb
pop
sub
mov
aad
sbb
sub
xchg
imul
rcr
jp
mov
mov
cmp
mov
mov
das
(bad)
and
inc
js
addr16
xchg
mov
add
imul
xchg
out
int
sub
js
enter
stos
adc
push
(bad)
loop
cmp
ror
sbb
mov
adc
jl
inc
stos
push
js
mov
cmp
fcom
xchg
cmp
inc
loope
sbb
add
xchg
jecxz
retf
or
xchg
sar
push
mov
aam
wbinvd
call
sbb
push
hlt
pop
stc
mov
loopne
hlt
stc
retf
popf
ja
test
call
jns
sbb
cmp
inc
jne
call
push
in
imul
sbb
cdq
lods
ins
jg
mov
icebp
retf
std
clc
shr
ficom
sti
mov
or
sub
or
ss
jge
mov
out
cmps
in
nop
aas
push
into
add
sub
into
xchg
sub
ja
retf
xchg
in
sbb
or
mov
pusha
mov
sub
mov
sub
add
mov
je
mov
cmp
call
rol
(bad)
or
cmc
or
sbb
aas
mov
push
xchg
adc
xchg
or
stc
cmp
es
sub
add
ds
dec
add
outs
pusha
cmp
jb
mov
ss
cmps
pushf
leave
out
adc
cmps
fwait
mov
xor
push
scas
movs
adc
push
clc
shl
jbe
jle
xor
stos
(bad)
imul
pop
jb
push
xchg
and
mov
gs
ficom
and
dec
dec
pushf
ins
jmp
mov
pop
ins
sub
add
xlat
mov
retf
push
stos
dec
es
cmps
imul
push
in
add
into
mov
and
retf
push
mov
scas
shr
ds
and
cmps
mov
fidiv
push
imul
xchg
adc
loop
push
mov
pusha
int
int
jmp
aaa
inc
sahf
pop
pop
mov
aas
push
push
sub
xchg
scas
popa
scas
mov
pop
or
cmp
adc
xlat
mov
mov
adc
mov
sar
aaa
fsubr
lods
cmp
call
dec
mul
jae
jnp
pop
xor
jecxz
jl
xchg
add
mov
or
xchg
xchg
mov
ror
cmp
mov
dec
sar
shr
xchg
mov
xor
or
gs
in
clc
mov
xor
fidiv
pop
sti
add
mov
fnstenv
ret
cmp
inc
pop
(bad)
pusha
cmp
mov
sub
arpl
ret
outs
ret
int3
arpl
cld
into
or
out
sbb
dec
ror
bound
mov
push
xor
inc
ins
data16
pop
push
pop
adc
dec
dec
add
and
or
or
push
mov
cdq
or
sbb
nop
(bad)
std
popa
jbe
std
xchg
mov
push
pushf
mov
ja
sbb
cmp
and
(bad)
cmp
xchg
add
jne
jg
lahf
lods
push
imul
mov
pop
(bad)
mov
ja
and
mov
aad
imul
sbb
in
imul
aad
dec
mov
jge
pop
mov
mov
cmp
ret
cmps
cmp
sbb
fisubr
idiv
dec
jb
push
inc
retf
std
into
lahf
push
xor
pop
(bad)
jb
lahf
mov
into
adc
cld
movs
ins
jae
add
pop
outs
repnz
mov
dec
sub
retf
inc
inc
sub
ins
lods
xchg
add
or
and
sbb
loope
push
jbe
loope
xor
jmp
bound
cwde
test
push
cmp
es
inc
hlt
cmps
lahf
cmp
test
push
xchg
inc
jb
jbe
push
or
(bad)
(bad)
and
sbb
js
xchg
(bad)
mov
fldcw
dec
inc
imul
imul
mov
dec
xchg
jmp
pop
repz
cld
fs
jmp
jmp
movs
test
iret
jp
not
pop
mov
xor
mov
and
lock
sub
push
and
mov
adc
cli
push
iret
(bad)
mov
(bad)
cmp
sbb
add
dec
or
xor
sub
fiadd
adc
imul
dec
ficomp
push
jg
fimul
sbb
mov
jp
mov
into
inc
xchg
arpl
mov
jge
std
fld
fwait
movs
retf
mov
jmp
test
xchg
bound
push
jno
dec
add
mov
mov
mov
fidivr
push
or
pop
outs
std
shr
repz
scas
(bad)
jnp
mov
xor
sti
(bad)
call
push
ficom
jg
dec
or
bound
(bad)
lock
out
js
jae
push
mov
shr
xchg
fs
es
mov
fmul
jae
sti
jge
pop
test
lock
test
mov
popf
dec
fisttp
add
mov
(bad)
jno
scas
dec
mov
jnp
jmp
ja
adc
xlat
das
fistp
ins
mov
sub
push
dec
mov
sahf
push
std
xor
ret
mov
ss
inc
xchg
and
sbb
cwde
adc
pop
jae
inc
add
in
ret
xchg
aas
adc
sub
sbb
sub
cmp
call
idiv
fs
dec
(bad)
push
stc
mov
aas
push
cmc
mov
dec
cmc
push
(bad)
call
pop
ror
std
call
and
sbb
mov
mov
xchg
stos
jne
ficom
or
jnp
outs
pop
add
cmps
mov
outs
add
inc
sbb
mov
rcl
sub
jle
sbb
push
jl
mov
push
lods
shl
leave
xchg
loope
stc
imul
cld
cwde
adc
pusha
(bad)
and
mov
lods
and
or
and
jns
adc
mov
or
(bad)
call
fwait
outs
clc
dec
sub
aad
push
loop
js
push
push
mov
jecxz
dec
jb
jge
cmp
cmps
and
test
and
xchg
in
js
adc
sub
mov
and
mov
adc
and
jge
adc
cdq
xor
sbb
test
xor
fidiv
in
repnz
test
pop
repz
sets
in
pop
inc
(bad)
stos
in
stos
mov
std
push
inc
movs
sub
adc
div
sahf
out
out
xlat
movs
fiadd
jp
shl
mov
out
sti
sahf
mov
loopne
lods
adc
sub
loopne
push
in
cmp
loop
add
sbb
mov
in
add
add
stc
fidiv
inc
and
mov
repz
sbb
stos
push
sub
push
and
cmc
pop
pop
(bad)
mov
addr16
add
repnz
jmp
scas
(bad)
daa
or
in
push
test
pushf
fwait
or
xchg
pop
iret
sub
jae
inc
(bad)
(bad)
retf
inc
ja
loopne
push
mov
test
outs
cmp
jmp
mov
(bad)
jnp
xor
iret
in
stos
mov
mov
or
cmc
sub
adc
pop
rcr
xor
popa
fmul
sti
movs
cmp
bound
test
cmp
ror
lods
cmps
ret
push
ins
or
es
push
pop
jmp
call
gs
rol
rcl
jmp
fidivr
cmp
pop
imul
and
shr
xchg
inc
xchg
mov
xchg
call
sub
dec
pop
sbb
retf
sbb
int3
sbb
sub
scas
ins
out
int3
pop
add
(bad)
out
out
mov
test
adc
aad
leave
lahf
xor
test
les
int
or
mov
xchg
leave
mov
sti
cmp
mov
popf
shr
cli
imul
out
and
inc
pop
aaa
cmp
inc
and
cdq
addr16
daa
cli
inc
test
mov
xor
pop
jle
pop
cmp
jnp
iret
sbb
add
mov
add
sub
dec
pop
xlat
pop
pop
or
aad
xor
adc
ret
int
rcr
and
mov
popa
jno
pushf
pop
jbe
outs
inc
int3
sti
sub
mov
mov
cli
inc
sbb
fsubr
or
or
pop
lds
jnp
shl
xlat
mov
push
xchg
pop
(bad)
xchg
nop
test
inc
inc
addr16
fdivr
mov
mov
data16
inc
pop
xor
jecxz
mov
mov
dec
(bad)
cmps
adc
inc
(bad)
std
jo
push
ds
sti
jge
sbb
jae
jge
cmp
push
scas
xor
ror
jae
popa
cwde
pop
out
mov
scas
and
and
pop
sub
mov
push
sub
jne
inc
push
xor
icebp
out
push
adc
add
shl
sbb
adc
stc
je
mov
and
dec
or
outs
test
inc
jge
repnz
aaa
push
mov
adc
shl
jge
jne
inc
outs
inc
xor
adc
imul
push
jecxz
cmps
loope
push
popa
leave
lods
pop
paddw
jbe
adc
xor
mov
cli
push
jge
stc
jmp
aam
mov
xor
jno
fsub
(bad)
xchg
je
aaa
sub
add
add
cld
cmps
ret
int3
sbb
mov
xchg
add
push
mov
mov
dec
dec
imul
jbe
fisttp
in
mov
xchg
mov
fadd
in
mov
mov
lods
or
inc
push
or
xchg
adc
push
add
dec
fist
mov
and
xchg
fmul
(bad)
mov
scas
mov
and
inc
or
dec
loopne
mov
sbb
mov
repz
sahf
div
jp
aaa
and
mov
inc
retf
jl
test
ja
repnz
dec
stos
repz
inc
adc
aam
pop
ror
push
jmp
fnstsw
outs
cmc
sbb
cmp
xchg
and
enter
ins
stc
add
inc
sahf
push
add
xchg
das
add
jbe
pop
sbb
or
or
inc
gs
xchg
mov
test
mov
into
jns
leave
mov
mov
jb
xor
push
dec
mov
test
jns
shl
push
or
cmp
(bad)
and
mov
ror
jns
mov
nop
outs
xchg
(bad)
mov
adc
mov
pop
add
adc
inc
fidivr
sbb
pop
add
push
jge
xor
imul
jne
jo
call
mov
or
mov
jge
jp
inc
inc
pop
mov
sbb
or
add
mov
ss
fs
mov
cmp
repnz
mov
cmps
adc
push
pushw
test
inc
xchg
imul
int3
jg
sub
push
ins
push
cmp
cld
ror
dec
push
je
pop
ja
(bad)
pop
xchg
enter
pushf
fcmovnb
scas
hlt
adc
sub
lds
mov
in
jle
add
push
sbb
sahf
and
jg
addr16
les
cmps
push
pushf
(bad)
add
pop
shl
call
int3
mov
repz
and
jmp
cmp
and
or
push
cmps
xchg
push
cdq
add
cwde
or
mov
ss
call
into
sbb
sbb
pop
(bad)
neg
outs
inc
fs
sub
mov
pop
inc
rcr
mov
mov
outs
mov
add
fistp
dec
xchg
pop
test
pusha
adc
popa
sub
mov
in
sysexit
rcr
adc
fnstcw
mov
mov
xchg
es
pop
das
ficom
and
movs
jmp
jmp
in
scas
pop
or
neg
push
xor
sbb
mov
jae
push
sbb
es
push
rol
std
and
in
sahf
push
imul
add
sbb
int
add
add
adc
sar
lods
es
fdivr
add
daa
(bad)
inc
data16
or
imul
xchg
imul
and
push
stos
mov
test
mov
shl
cmc
fisubr
scas
mov
ret
push
mov
sbb
jge
paddd
out
stos
dec
cmps
or
imul
data16
or
push
dec
in
mov
cs
cli
cmps
scas
mov
inc
xchg
repz
fs
adc
loope
cld
xor
sub
add
loope
cmp
cld
lods
lahf
add
cmps
out
jmp
xchg
push
hlt
push
xchg
aad
retf
mov
or
sub
not
dec
xchg
mov
push
loop
push
sub
jo
(bad)
pushf
mov
aaa
xchg
fstp
jo
ret
dec
inc
mov
or
mov
xchg
imul
in
test
lea
(bad)
push
int
mov
sysexit
sahf
scas
and
fsubr
xchg
cmp
or
pop
push
jmp
sar
in
je
jb
cmp
or
ror
cmp
or
mov
mov
fsubr
or
pop
shl
(bad)
or
imul
fdivr
jmp
pop
jmp
in
adc
and
mov
popa
lds
mov
fs
lahf
push
lahf
adc
jp
or
pop
pop
lock
dec
sub
stc
mov
or
sbb
sub
je
sub
jo
sar
push
pop
imul
mov
gs
fcmovb
jg
inc
clc
mov
add
cli
mov
xor
sbb
mov
fs
xchg
cmps
ret
or
in
ror
aaa
adc
ret
arpl
pop
push
aad
(bad)
icebp
push
mov
push
sahf
into
pushf
jp
cwde
adc
ret
out
pop
call
mov
mov
mov
add
and
rcr
sbb
dec
mov
imul
loop
rcr
iret
mov
cmp
push
adc
imul
mov
xor
pop
loopne
sbb
inc
mov
adc
bnd
and
(bad)
jnp
fcmovnbe
cmc
repz
jecxz
into
dec
(bad)
lock
add
ja
sar
mov
int
mov
adc
inc
jmp
repz
ret
fs
jnp
imul
add
cmp
arpl
repz
mov
pop
sahf
xchg
mov
adc
mov
pop
sbb
cmp
mov
sub
sbb
test
or
add
or
xchg
hlt
(bad)
jge
xchg
inc
add
(bad)
nop
outs
push
mov
popa
fild
mov
iret
js
hlt
xchg
bnd
or
sub
xchg
add
stos
cmp
imul
jnp
and
jae
jae
jmp
cmp
pop
xchg
shr
ja
in
cmps
mov
mov
xor
imul
pop
test
xchg
cmp
xor
pop
add
cmp
sti
shr
or
add
jne
sub
push
xor
mov
xchg
out
leave
cld
int
repz
push
push
mov
aam
imul
clc
jp
sbb
out
ror
or
inc
push
push
push
ret
or
popa
cwde
sub
imul
inc
xor
or
mov
idiv
mov
(bad)
pusha
leave
shl
rcr
test
cdq
inc
mov
add
inc
push
imul
xor
ret
cmp
push
or
popa
aaa
in
add
retf
xchg
cld
fisubr
stos
ins
sbb
add
sbb
cld
nop
sahf
retf
call
lock
clc
int
jne
sub
xor
idiv
(bad)
mul
std
ror
and
test
add
jecxz
daa
sub
cmovne
cmps
lea
addr16
dec
scas
int
dec
leave
(bad)
aas
sub
sbb
adc
xor
icebp
mov
mov
fild
stc
outs
xchg
les
mov
test
mov
mov
lock
mov
mov
pop
jmp
out
inc
mov
out
jmp
sahf
ins
mov
push
aad
call
out
inc
xchg
xor
xor
pop
sub
jmp
xor
mov
jl
jno
gs
out
fdiv
(bad)
ss
sub
out
(bad)
js
pop
mov
cmc
fidiv
push
push
in
iret
jge
dec
ror
loopne
push
pop
or
push
imul
xchg
test
adc
div
mov
sub
push
or
sbb
ja
jmp
neg
leave
je
into
scas
fist
nop
loop
mov
xchg
inc
jecxz
push
cmc
hlt
mov
push
(bad)
push
scas
movs
dec
repnz
mov
shl
mov
jecxz
(bad)
rcl
lahf
mov
xor
sar
push
add
test
sbb
fist
ret
adc
out
cmp
bound
xchg
ins
aad
mov
cmp
jp
add
dec
sub
add
aad
push
cmp
inc
dec
mov
jmp
jp
imul
mov
aam
sub
cmps
jbe
mov
push
aad
popf
or
iret
sti
sub
loop
scas
pop
outs
xchg
dec
out
cmc
mov
data16
pop
ret
in
push
mov
xchg
test
icebp
outs
inc
or
adc
sub
in
fdivr
fcmovnu
fld
mov
jp
jecxz
int3
mov
daa
stos
cdq
movs
lods
fldenv
int3
sar
add
pop
pop
sahf
(bad)
adc
cmp
loope
and
xchg
mov
adc
mov
jg
push
inc
xor
pop
fwait
and
(bad)
jmp
(bad)
sahf
jp
ja
push
xchg
xchg
or
push
mov
sbb
mov
ins
repz
or
mov
dec
clc
out
adc
(bad)
(bad)
out
add
jbe
jmp
mov
dec
pop
and
cmp
repnz
ficomp
sbb
inc
popa
and
dec
cwde
pop
pop
out
jmp
cdq
sub
std
imul
test
outs
loope
mov
push
sub
adc
pop
push
das
cmp
mov
mov
jecxz
not
push
movs
(bad)
loop
jbe
mov
in
test
and
xor
out
out
and
out
push
aad
js
nop
movs
shr
in
pushf
jecxz
xor
loope
test
leave
mov
pop
xchg
mov
(bad)
retf
hlt
or
into
mov
sub
adc
pushf
push
addr16
fnstcw
jae
xchg
sbb
push
xor
ds
movs
xchg
push
mov
(bad)
xor
ror
pop
imul
loop
or
pop
inc
ins
or
dec
or
hlt
or
mov
out
ins
mov
inc
bound
mov
or
std
add
shr
adc
jno
cmp
jns
push
and
inc
mov
inc
cmps
lods
sub
dec
sub
dec
pop
jo
mov
xchg
lea
scas
leave
mov
sbb
sbb
mov
pop
sahf
push
aam
cs
dec
cwde
push
mov
retf
stos
cdq
xchg
mov
xor
ret
sbb
xor
mov
pop
shr
fimul
and
cmp
dec
jmp
scas
mov
loope
mov
xchg
xor
or
dec
xchg
push
daa
pushf
(bad)
ins
out
sub
cmp
xor
fwait
ins
adc
imul
popa
add
fist
(bad)
int3
jne
mov
or
call
cmp
ins
push
sub
xchg
shl
add
jns
icebp
adc
fwait
in
push
cmp
cmp
jge
push
not
or
xor
enter
cmp
fist
sbb
enterw
or
mov
mov
add
adc
and
sti
fld
fisttp
mov
test
jl
scas
js
mov
out
hlt
mov
clc
adc
sbb
imul
adc
sub
leavew
shr
(bad)
xor
sbb
xor
mov
push
bound
and
sbb
nop
or
sub
test
inc
shl
push
sub
xor
cli
inc
mov
fdiv
mov
push
cmp
mov
xor
inc
fs
stc
jbe
(bad)
bound
stos
and
pushf
mov
das
data16
cmp
mov
das
popa
fucomp
mov
ss
or
and
sub
jmp
in
lods
iret
add
add
or
pop
loope
mov
xor
ds
push
xchg
bnd
arpl
or
dec
jg
mov
ds
test
hlt
pop
push
std
mov
xor
rcl
lds
xor
mov
sub
nop
mov
or
test
test
lea
jle
test
stos
mov
test
push
ret
jmp
ss
mov
add
pop
mov
je
lods
cmp
cmp
jae
mov
test
jmp
jne
in
(bad)
call
push
or
lods
dec
jo
xchg
(bad)
jo
pop
mov
dec
push
lock
dec
(bad)
push
div
les
and
das
push
loopne
inc
out
mov
sub
fdivr
inc
pop
in
and
scas
jg
stc
push
cmp
stc
xor
in
call
shl
inc
call
sbb
nop
aas
fistp
dec
sub
fwait
add
aad
add
mov
mov
sbb
sbb
test
rcr
fistp
xor
pop
push
out
and
rcl
jnp
xor
mov
inc
in
(bad)
xor
jge
push
pop
dec
dec
rcl
push
sti
fdivrp
mov
rcr
or
fsub
dec
call
pop
and
scas
dec
popf
mov
inc
arpl
and
jg
imul
fsubr
xchg
leave
push
shl
int
je
rcr
ins
mov
or
pop
popa
retf
iret
inc
sbb
jne
adc
inc
push
fwait
xor
les
mov
mov
dec
mov
mov
sub
pop
push
mov
cs
adc
stc
pop
xchg
pop
ror
lods
mov
push
xchg
fnsave
ds
sti
scas
cmp
xor
xor
repnz
dec
std
push
fdiv
inc
xchg
xor
mov
std
sar
sbb
add
fld
cli
test
cmp
arpl
popa
fiadd
retf
cdq
cmc
fild
ret
mov
aad
mov
fsubr
cmp
mov
push
retf
sbb
sub
into
loopne
ret
mov
sub
pop
aad
inc
int3
mov
scas
jae
jmp
dec
mov
fcmovbe
test
jecxz
es
cmp
stc
add
add
(bad)
test
ds
bound
inc
add
std
(bad)
adc
rol
cmc
pop
out
lds
out
xor
jg
cmp
bound
sub
push
adc
push
imul
dec
js
xchg
push
dec
in
jmp
jp
cmps
xchg
(bad)
xchg
(bad)
jae
or
loop
fst
mov
mov
xchg
pop
rcr
xchg
mov
ins
xchg
sar
cmp
add
das
mov
(bad)
pop
int
mov
idiv
mov
in
sti
std
rcr
shl
mov
cld
inc
adc
cmp
pop
mov
jg
push
data16
mov
xor
leave
jbe
jl
cwde
cmc
fadd
repz
add
(bad)
call
fstp
fidivr
cld
inc
mov
xor
std
inc
pop
cmp
loope
es
aam
outs
outs
jno
pop
pop
js
retf
adc
xchg
inc
mov
push
cmc
dec
dec
push
pop
xchg
daa
sub
xchg
xor
mov
push
repnz
(bad)
mov
mov
repnz
ja
push
cmp
(bad)
enter
mov
jae
inc
sbb
mov
pusha
aad
jne
mov
sub
mov
jnp
inc
sbb
sbb
out
call
movs
xchg
ss
rol
pop
mov
push
cwde
jae
dec
in
push
push
mov
jge
es
inc
fldcw
popa
hlt
sbb
sub
adc
movs
add
ins
bound
test
jg
add
pop
test
sti
call
in
movs
outs
cwde
sbb
mov
int3
mov
out
xchg
push
fistp
(bad)
retf
jle
test
mov
inc
cmp
adc
sbb
mov
jmp
ins
pop
popf
xlat
sub
jae
xor
fadd
mov
ins
cmc
gs
pop
div
lods
inc
xchg
mov
push
push
pusha
pop
and
pop
ja
cwde
pop
mov
jno
mov
and
mov
les
push
das
mov
xchg
fnstenv
jne
fmul
mov
jmp
dec
and
mov
push
adc
xchg
out
repz
lds
mov
aad
popa
fisttp
jbe
cld
mov
mov
movs
movs
dec
repz
mov
loop
ret
lahf
aam
gs
cli
dec
je
cmp
push
jmp
pop
sub
test
sub
mov
and
lds
sbb
pop
inc
adc
xchg
push
cmp
or
xchg
popa
outs
test
fdiv
push
test
xor
jo
mov
rcl
ja
inc
push
or
jb
repnz
stos
enter
mov
push
retf
push
inc
xor
add
aad
lds
xor
and
inc
outs
sbb
fsubr
into
in
dec
loope
cdq
adc
xchg
call
ins
xchg
xchg
inc
xchg
mov
mov
mov
fiadd
pop
enter
fisubr
cmc
aad
add
test
pushf
dec
div
imul
cdq
push
mov
je
add
inc
(bad)
addr16
fimul
retf
and
stos
mov
jne
(bad)
xchg
xchg
outs
rcl
in
push
mov
aas
cmps
cmc
outs
jp
mov
mov
push
cmp
inc
adc
xchg
adc
push
push
dec
icebp
movs
stos
mov
in
loopne
es
(bad)
sar
rcr
stc
or
movs
xor
js
(bad)
cwde
daa
push
sahf
loope
dec
xor
jle
push
cmp
stos
imul
xchg
mov
lock
dec
fiadd
int
and
ins
imul
push
jnp
cs
stos
(bad)
xor
pop
cmps
(bad)
jo
jne
ja
jle
test
(bad)
adc
mov
mov
inc
sbb
ror
or
mov
in
jne
fs
fcomp
mov
sub
(bad)
mov
rcl
cmp
add
dec
cmps
mov
stos
mov
in
mov
and
jl
inc
cmp
sub
xor
and
fist
sti
stos
dec
or
mov
scas
movs
mov
bnd
out
mov
jmp
push
xchg
inc
shr
and
(bad)
mov
jno
jl
sar
push
aad
rol
sub
xor
mov
pop
inc
mov
loop
lds
ins
je
jp
jns
sar
mov
mov
sub
cmps
imul
sub
cmps
push
jae
or
fisub
push
fwait
loope
jp
(bad)
ins
dec
mov
mov
enter
mov
pusha
ret
or
push
xchg
sbb
aad
sbb
les
lahf
test
das
push
mov
mov
jle
jl
fcmovnbe
pop
sub
mov
push
into
scas
ja
lods
out
mul
dec
and
cs
sar
in
ficom
sbb
je
add
jno
sub
dec
outs
test
pop
push
pop
hlt
push
mov
adc
inc
or
xchg
lods
stos
rol
push
out
aas
(bad)
dec
movs
loope
fcomp
and
(bad)
fldenv
fiadd
xchg
sub
cmp
cs
jp
sub
adc
or
dec
stos
mov
pop
adc
inc
mov
mov
mov
(bad)
cmp
pop
xor
test
lods
cmp
cdq
adc
popf
mov
sbb
add
(bad)
xor
stos
jns
or
mov
cmp
jle
fcomp
add
mov
retf
(bad)
das
mov
jge
and
call
mov
and
push
xchg
adc
call
shl
aas
xor
pop
mov
out
aaa
add
sbb
inc
popa
repnz
mov
or
sbb
js
jo
int3
or
mov
pop
pop
and
xor
inc
(bad)
out
sub
sub
ins
or
mov
clc
push
inc
pushf
fdivr
inc
loop
and
clc
ja
and
pushf
fs
test
dec
ins
scas
pop
cdq
mov
js
adc
dec
aas
popa
sub
mov
imul
xchg
shr
and
mov
outs
push
je
int3
call
mov
test
xchg
push
clc
sub
faddp
inc
add
and
pushf
pop
or
daa
jmp
jae
adc
lea
fidivr
inc
adc
mov
adc
add
push
adc
test
nop
dec
or
cdq
mov
cmp
fs
movs
call
popa
inc
sbb
cdq
dec
dec
fisub
test
leave
in
cmp
and
add
stos
out
inc
loope
popf
std
mov
neg
mov
sub
rcl
inc
xchg
je
ds
inc
lock
sub
ret
push
jae
push
(bad)
out
or
xor
ins
xchg
retf
dec
jge
push
mov
aas
pusha
mov
or
sub
pusha
xor
fild
dec
fstp
inc
cmp
sbb
out
bound
cmc
xchg
sbb
repnz
mov
pop
mov
push
sub
adc
dec
mov
mov
sub
push
jo
retf
xchg
jp
rol
popf
sbb
add
cdq
out
sub
clc
jbe
ret
test
hlt
sub
mov
(bad)
fsub
cdq
cwde
mov
mov
push
daa
call
xor
pop
(bad)
loope
icebp
jg
cmp
inc
xor
sub
movs
ret
xchg
stos
shr
cmp
aam
loop
pop
fisttp
sbb
shr
or
test
out
xor
dec
or
ins
sub
dec
jmp
inc
shr
scas
les
imul
retf
xchg
stos
dec
aam
dec
dec
inc
and
cmp
and
dec
push
jo
in
push
sub
adc
push
push
sahf
lods
jmp
push
sbb
xor
mov
(bad)
(bad)
fprem
aad
inc
idiv
fcomp
mov
mov
jb
pop
push
sub
out
jecxz
xchg
fadd
das
movs
lock
stc
jecxz
add
push
adc
in
fs
enter
fs
add
in
nop
movs
out
push
sbb
jle
xchg
aas
dec
mov
and
inc
call
sbb
jl
out
cmp
lahf
jp
popa
add
push
iret
cmps
cli
mov
xchg
ret
cmps
inc
mov
cs
cvtpi2ps
mov
clc
pop
jne
int3
test
aad
(bad)
sbb
cmp
nop
loope
mov
mov
dec
mov
movs
inc
mov
add
retf
lock
xor
mov
shl
in
pop
dec
inc
xor
mov
ds
retf
cli
cmps
xchg
adc
pop
stos
retf
adc
dec
and
mov
js
je
sub
popf
jmp
dec
inc
jecxz
movs
mov
and
adc
fsubr
cmps
std
inc
push
push
sub
push
ins
fimul
adc
cmp
sub
in
mov
mov
push
leave
fldenv
or
sub
movs
lahf
cmp
xor
gs
ror
enter
mov
clc
xor
xlat
aaa
jmp
jno
cmp
inc
cmp
cmp
arpl
push
mov
pop
scas
inc
push
data16
mov
cmc
inc
mov
push
jl
mov
cld
and
leave
ins
inc
js
pop
jp
jmp
cmc
or
fstp
ret
mov
cdq
in
mov
mov
fild
rcr
lods
xchg
jg
mov
and
cli
mov
(bad)
stc
(bad)
shr
push
push
inc
push
pop
and
xor
mov
cmp
sbb
pop
push
lahf
iret
xchg
and
mov
cmp
sbb
or
fmul
mov
adc
pusha
mov
pop
and
push
xlat
daa
fcomp
loop
test
push
(bad)
push
or
jg
ror
push
ror
mov
loop
jp
cwde
sbb
fwait
leave
add
mov
cs
or
and
scas
stos
xor
jnp
jne
or
sar
xchg
cli
jmp
mov
cmp
outs
pop
pop
ret
cmp
pop
jg
call
push
sahf
xor
push
mov
sub
ja
scas
sbb
aam
leave
aad
add
mov
sbb
adc
xchg
ret
js
lods
jae
(bad)
jnp
inc
adc
mov
push
ins
sbb
mov
stc
cs
inc
ror
leave
out
add
pop
mov
push
pusha
push
outs
jmp
sbb
adc
loope
or
test
lea
fadd
adc
inc
mov
xchg
(bad)
into
sbb
push
pop
ret
fwait
jg
ja
jbe
sbb
aad
mov
popa
dec
je
jae
sub
hlt
pop
push
mov
add
jmp
sbb
mov
pop
mov
jb
or
sub
mov
mov
ja
pop
pop
ret
inc
xor
pop
imul
xor
rcr
cld
in
adc
call
sub
sbb
jmp
call
and
aad
retf
lock
dec
jmp
push
jmp
mov
xor
xchg
(bad)
cmp
pop
pop
adc
pop
xchg
cld
mov
xchg
jmp
jnp
shr
or
pop
icebp
in
arpl
idiv
inc
enter
icebp
push
mov
pop
sub
and
push
out
inc
sub
pop
int
inc
sbb
adc
fs
sub
xor
inc
scas
mov
ret
pop
jmp
popf
movs
push
mov
jns
sub
mov
xor
mov
lea
popf
cs
imul
mov
imul
icebp
(bad)
dec
xor
dec
mov
cmp
icebp
cmp
pop
push
mov
mov
xor
in
loope
pop
popf
rep
movs
mov
lods
adc
(bad)
cdq
cwde
xor
int
jl
ins
jno
into
retf
xchg
lods
pop
leave
pop
and
or
inc
inc
inc
inc
inc
push
js
xchg
and
sbb
nop
xchg
mov
int
cmp
and
xor
inc
fdiv
cs
ja
aam
mov
pop
aaa
scas
repz
or
xchg
cmp
inc
cli
cmps
int3
lea
test
shl
mov
(bad)
cmp
scas
mov
ret
imul
bound
mov
mov
push
pop
xchg
xlat
dec
(bad)
jbe
push
pop
retf
lods
je
mov
fimul
push
shl
jno
inc
es
iret
inc
rcr
test
inc
leave
mov
retf
cmp
dec
jno
cdq
dec
jp
rcr
jg
scas
shl
cmp
enter
pop
mov
sub
(bad)
das
call
mov
and
fldcw
add
out
dec
cmp
int3
adc
push
xor
inc
sub
jno
in
lock
pusha
pop
dec
fadd
push
(bad)
jbe
sub
test
jp
inc
into
icebp
hlt
mov
add
pop
xor
mov
dec
cmp
rol
inc
das
add
pop
iret
aas
int3
loope
mov
ja
lods
movs
push
sbb
ret
mov
mov
add
sahf
call
hlt
or
mov
push
in
lods
jne
shl
rcl
sbb
int
pop
jge
pop
and
data16
or
nop
fisttp
xor
mov
fcomp
aam
imul
in
xchg
scas
in
mov
js
cmps
lea
adc
sti
fcom
sub
shl
ss
and
clc
pushf
cmp
sbb
popa
xchg
push
cmp
mov
xchg
cmc
jge
add
jns
lods
mov
sub
shl
mov
cmps
in
add
mov
clc
inc
pop
ss
in
dec
or
cdq
jno
mov
div
sbb
fstp
inc
setae
fcomp
(bad)
test
add
rcr
pop
xchg
mov
cmps
mov
sbb
fld
push
mov
cwde
pop
xor
push
mov
cmc
int
mov
loop
clc
std
push
sbb
lea
div
movs
xchg
ins
dec
jecxz
jne
or
add
dec
rcl
enter
int
(bad)
pushf
leave
rcr
les
test
loope
test
lahf
cmp
cmp
ret
fbld
leave
mov
jo
dec
xchg
mov
sub
mov
cmps
std
rol
cmc
mov
pop
popa
push
call
test
cmp
adc
jecxz
jle
bound
mov
stc
fnstsw
stos
adc
iret
cmp
sub
int
adc
and
xchg
stos
(bad)
mov
push
xchg
aas
xlat
or
sub
cmp
fbstp
cmps
jne
cmc
leave
imul
mov
xchg
div
dec
movs
gs
sar
out
mov
in
push
pusha
xchg
add
dec
mov
or
jle
out
mov
xchg
test
shr
(bad)
and
jb
dec
hlt
mov
(bad)
ror
inc
mov
inc
mov
ds
(bad)
daa
add
or
aas
bound
jnp
daa
lea
fisubr
aam
xchg
hlt
in
add
enter
shl
int3
call
adc
repnz
push
xchg
fsub
imul
or
jl
xchg
dec
push
pusha
lods
(bad)
push
scas
int3
cs
add
les
sub
(bad)
mul
sub
dec
dec
xchg
jno
inc
mov
shl
cdq
jae
pop
aaa
call
ret
jmp
mov
push
add
mov
jbe
fnstcw
pop
int3
and
popf
push
xor
daa
je
fild
dec
mov
test
and
stos
mov
or
pop
ins
(bad)
adc
xor
add
aad
cs
in
inc
jne
std
mov
sbb
dec
mov
enter
not
mov
in
retf
ss
jg
add
dec
in
or
mov
dec
pop
adc
jns
mov
and
or
data16
test
mov
dec
rcl
sub
mov
fidivr
aam
cli
std
aad
mov
popa
call
test
jg
cmp
inc
jl
repz
(bad)
frstor
fwait
outs
mov
push
lods
mov
push
imul
outs
inc
ins
sbb
ss
push
std
add
jecxz
xor
js
add
loope
mov
stos
lods
rcl
mov
pop
cwde
xor
outs
mov
test
sub
mov
imul
sub
mov
sbb
mov
jo
ja
aas
inc
ins
fcomp
pop
pop
sub
movs
es
ficom
shl
sbb
sub
cmp
fld
pop
add
sub
pop
xchg
lods
stos
cmp
mov
jb
dec
mov
mov
outs
shr
ror
icebp
push
inc
cmp
in
and
jle
mov
rcr
jge
and
lods
dec
cmp
movs
push
fist
sub
mov
and
jno
lods
rol
jne
adc
test
dec
adc
fidiv
stos
(bad)
sar
inc
xor
pushf
nop
pop
cs
rol
or
ret
or
lods
repnz
cwde
xlat
out
sub
adc
dec
into
xchg
lods
mov
xlat
outs
call
mov
outs
dec
jg
push
lock
popf
inc
jecxz
rcr
xor
(bad)
cwde
jb
push
cmps
xchg
clc
mov
push
sbb
cwde
sbb
cmp
dec
xchg
add
pop
jle
mov
xor
ds
out
sar
sbb
xor
fiadd
cs
dec
mov
(bad)
mov
or
inc
xor
mov
(bad)
aam
repnz
fiadd
aad
(bad)
out
out
mov
mov
stos
cmp
jae
aam
cmp
jo
sub
mov
enter
mov
call
jo
adc
cmp
aad
repz
movs
aam
jmp
lahf
hlt
and
hlt
jge
sbb
in
and
mov
and
sub
mov
and
arpl
dec
aas
call
cmp
sub
push
xchg
jg
daa
sbb
popa
xchg
dec
sbb
or
push
fwait
jb
je
aad
call
sub
cmps
fadd
adc
lods
sahf
(bad)
(bad)
jno
cld
and
sbb
pop
pop
cmp
jns
fwait
push
out
in
jb
pop
js
int
cmps
cmp
cmps
fimul
jle
bound
loopne
call
scas
jae
sub
add
popa
dec
sub
pop
test
mov
dec
add
(bad)
shl
mov
inc
std
mov
or
test
cmp
test
fild
inc
mov
sub
sub
xor
out
sub
out
rcl
cmp
mov
shr
sub
push
dec
fadd
xor
mov
add
jae
push
test
or
mov
ret
mov
scas
test
inc
test
xor
ret
retf
dec
xor
xchg
adc
xlat
shl
cmp
xor
mov
push
in
xor
loop
mul
jecxz
xor
aad
aaa
stos
fidiv
push
popfw
out
mov
pop
outs
retf
retf
ins
ja
cmp
sbb
mov
xchg
adc
sbb
adc
mov
stos
lods
sub
dec
inc
shr
mov
inc
shr
nop
jmp
(bad)
mov
out
leave
xor
sub
dec
mov
jp
xchg
test
in
xor
ret
add
jae
mov
out
xor
xor
cs
dec
jmp
dec
pusha
iret
ret
push
and
xchg
push
mov
mov
mov
mov
shl
cld
daa
imul
inc
fistp
leave
sub
dec
push
mov
jae
shr
mov
mov
sar
sar
(bad)
cmps
(bad)
adc
rcr
or
frstor
jg
cdq
iret
dec
inc
scas
and
mov
or
lahf
fwait
test
inc
sbb
add
je
jmp
sti
pop
scas
in
xchg
adc
gs
cmps
push
push
fldenv
push
popf
sub
jo
movs
mov
lea
or
and
call
push
out
jmp
mov
dec
and
sub
sbb
pop
out
sbb
mov
push
push
hlt
imul
mov
dec
lods
inc
dec
xor
push
in
lds
and
sbb
and
movs
fdiv
inc
daa
or
jp
dec
dec
pop
(bad)
push
ficom
push
xor
jecxz
push
int3
loopne
test
in
dec
mov
adc
or
addr16
adc
sub
push
rol
out
retf
pop
nop
addr16
inc
movs
leave
stos
cmp
or
fstp
xor
aas
xor
call
pusha
(bad)
repz
repnz
xor
int
xchg
or
cmps
out
and
arpl
arpl
in
inc
neg
push
sub
ret
stos
mov
adc
ret
cmp
or
and
push
out
cld
sti
xchg
dec
sti
(bad)
std
sbb
std
pop
sbb
mov
das
mov
stos
jl
xchg
dec
xchg
sub
stc
sub
jecxz
xchg
sub
jo
sbb
lods
gs
sub
and
or
mov
sti
(bad)
pop
or
and
popa
mov
shl
cld
test
outs
call
push
xor
push
adc
sub
lea
(bad)
int
jne
clc
push
out
pop
rcl
push
and
out
hlt
jl
(bad)
mov
add
xor
fmul
aaa
(bad)
int
jb
fisub
retf
push
loop
(bad)
pop
addr16
mov
add
and
cli
stos
fwait
stc
adc
jecxz
mov
sahf
add
cmp
mov
dec
mov
xchg
or
adc
mov
cmc
aad
div
bound
aam
mov
(bad)
xor
adc
jl
pop
or
ret
adc
sub
ret
push
xchg
mov
ds
push
(bad)
xlat
(bad)
rol
sub
mov
sbb
in
cmp
ret
int
call
and
in
popa
fsubr
stc
and
ret
bound
cmovge
popa
inc
push
ja
sbb
sbb
xchg
cld
cmp
fs
cli
cmp
les
jno
sbb
arpl
xor
(bad)
rol
mov
sub
stos
in
push
jmp
dec
cld
cmps
inc
xchg
mov
aad
and
test
inc
sub
enter
jne
nop
inc
adc
aas
lods
cld
mov
add
sub
pop
jmp
mov
xor
mov
sbb
idiv
jmp
jg
jns
mov
mov
dec
push
xchg
mov
push
mov
xchg
cmp
aam
mov
and
cld
rcr
(bad)
push
pop
and
add
jne
xchg
and
sbb
ret
jb
lods
add
ins
sbb
(bad)
daa
stos
mov
mov
pop
sahf
and
mov
sbb
movs
and
sbb
mov
movs
jnp
(bad)
xor
clc
call
js
xchg
int
test
(bad)
fwait
push
jnp
mov
sub
fisubr
das
adc
(bad)
xlat
leave
outs
push
xchg
movs
and
or
retf
inc
lock
test
and
dec
push
loop
xchg
ins
fdivr
rol
jns
jae
dec
sub
aad
sbb
je
daa
xchg
cmp
pushf
out
bound
shr
xchg
(bad)
popa
or
or
pop
int
outs
mul
dec
retf
call
pop
jns
add
neg
sbb
out
aaa
fld
in
daa
fnstcw
jmp
cwde
stc
jmp
popa
rcl
jnp
dec
push
out
test
in
rcr
or
nop
sar
inc
push
bound
into
sbb
mov
mov
imul
mov
retf
(bad)
jmp
push
retf
cmp
mov
cmp
sub
stc
add
and
int3
mov
xchg
scas
into
push
leave
inc
jle
dec
and
ffreep
ss
dec
push
cmp
cmp
sub
test
iret
xor
pushf
test
mov
sbb
xor
icebp
pop
mov
gs
jle
(bad)
das
inc
shl
jns
jo
dec
loop
daa
xchg
jo
jno
repz
out
mov
dec
clc
pop
push
jne
stos
fwait
xor
xchg
or
jmp
xor
mov
mov
mov
jl
adc
js
je
fimul
xor
jne
int
movs
push
jmp
out
ret
cmp
push
jns
add
jae
cmp
jno
add
inc
int3
dec
mov
sub
push
ror
lock
and
in
or
iret
call
xchg
inc
iret
outs
cmp
push
lea
ret
mov
sar
outs
inc
scas
fsub
into
iret
sub
jns
daa
add
mov
jmp
ret
cmp
gs
test
popf
mov
mov
jo
and
xchg
ficomp
and
les
sbb
pop
sub
test
mov
jb
dec
jge
sub
sub
jecxz
nop
sub
mov
cmps
or
jae
xor
stos
dec
dec
pop
enter
xchg
ret
cmp
sbb
jle
mov
nop
fisub
cli
retf
and
sub
scas
inc
cld
loop
das
dec
clc
mov
dec
push
and
mov
repnz
test
shr
aaa
ror
lods
inc
aam
imul
rcpps
fwait
inc
aas
sbb
popa
outs
xchg
aaa
js
loop
sbb
adc
ret
and
pop
dec
mov
mov
cdq
push
test
iret
cmps
inc
xchg
xchg
mov
dec
into
ret
fsubr
adc
(bad)
mov
push
jo
stos
call
adc
cmps
popa
cmp
cmp
mov
jb
lds
xchg
push
fdiv
mov
cmps
jl
push
pop
stos
outs
jb
repz
xchg
ins
pop
jl
test
in
popf
movntq
jle
add
lahf
mov
mov
movs
inc
mov
loopne
movs
mov
jne
lds
or
push
mov
push
sub
xchg
mov
ficomp
lods
ret
je
adc
cmp
dec
shl
cdq
sbb
sub
fbld
jp
jmp
js
jecxz
sub
sbb
out
add
daa
push
push
test
enter
cs
ret
scas
push
xor
icebp
or
outs
sub
mov
out
mov
xor
xchg
out
mov
lahf
pop
retf
pop
fbstp
lods
stos
arpl
jl
out
and
mov
xchg
sbb
dec
jne
ret
pushf
cmp
mov
sbb
or
retfw
xchg
dec
xor
pop
fnstsw
ffree
lahf
mov
clc
push
pop
rol
push
test
and
sub
fld
sbb
push
sahf
lock
fisttp
jle
and
push
push
in
sbb
in
repnz
mov
sub
(bad)
mov
loop
push
xor
mov
cmp
out
rcl
inc
iret
ret
pusha
add
retf
dec
mov
lods
pop
les
mov
inc
(bad)
jae
xor
push
sbb
cmps
mov
push
pushf
and
mov
sbb
sub
fcomip
inc
in
scas
xrelease
jbe
add
xchg
add
adc
or
leave
xor
and
into
xchg
push
call
outs
retf
pop
or
inc
jp
xor
jp
sar
retf
cmp
ins
pop
or
into
leave
das
mov
push
xchg
test
push
cmp
jmp
pop
cmp
cmps
enter
jno
mov
push
pop
cmc
xor
test
dec
mov
mov
sti
mov
jae
and
out
loope
xor
cwde
mov
mov
push
push
cdq
sar
(bad)
cmc
add
(bad)
dec
fdivrp
jb
pop
or
shl
cmps
in
aam
jg
cld
mov
inc
xchg
pushf
add
jns
mov
pop
cdq
jo
dec
imul
dec
push
pop
call
or
jp
add
lahf
scas
test
inc
dec
int3
iret
pop
lods
cli
xchg
inc
dec
ins
ficom
jnp
aas
cld
dec
outs
sub
call
mov
xor
add
and
lods
mov
fs
sbb
sub
in
popa
sub
les
ja
mov
jmp
retf
push
lds
(bad)
rol
movs
das
adc
adc
sar
sbb
out
sub
jmp
ror
loop
ret
mov
jmp
mov
xchg
test
clc
cmp
iret
cld
cmp
jb
(bad)
pop
les
gs
pop
or
jge
out
clc
scas
cmp
add
sar
mov
push
lock
mov
pop
lea
aaa
jecxz
mov
adc
mov
rol
nop
call
inc
pop
retf
push
cld
jge
xchg
or
pop
stos
mov
add
ficom
jmp
inc
adc
std
mov
int3
daa
cmp
retf
retf
out
dec
xor
xlat
call
jb
or
ret
das
cmp
jbe
xor
pop
les
sbb
dec
mov
and
imul
lahf
lock
mov
(bad)
pop
shr
lds
dec
test
sbb
jl
test
lods
inc
pop
ds
addr16
adc
lods
stos
std
popf
imul
stos
repnz
arpl
leave
cwde
test
int3
test
bound
jl
fild
dec
cld
cmp
loope
or
pusha
xchg
leave
adc
inc
retf
xchg
xchg
adc
jmp
add
or
(bad)
pop
pop
sub
push
jb
sbb
mov
ror
jbe
push
ja
mov
cmp
aaa
jmp
sub
mov
mov
loope
mov
add
test
clc
pop
adc
es
jp
push
sbb
jle
rcl
mov
mov
inc
dec
out
call
jb
jp
enter
ins
iret
sahf
mov
mov
ret
rcr
jecxz
adc
movs
cmp
mov
das
ror
mov
sub
xchg
or
push
jnp
lods
imul
sub
cld
stos
sub
xchg
in
xchg
aas
mov
in
(bad)
ret
shl
jnp
iret
cwde
fst
scas
mov
test
pop
call
dec
das
add
add
add
pop
push
push
dec
cmp
test
or
add
(bad)
mov
push
dec
out
call
aas
loop
das
aam
dec
pop
cmps
mov
pop
or
outs
dec
jo
dec
mov
scas
mov
and
inc
test
fldcw
rol
aam
cli
loop
mov
or
cmp
icebp
jle
inc
jb
mov
cs
push
lock
jnp
add
xor
jmp
xchg
in
or
jl
(bad)
adc
mov
add
dec
cmc
ss
in
stc
or
fldcw
data16
xchg
aaa
pop
sub
lods
ja
jae
add
cmp
rcr
test
icebp
pop
jmp
in
loope
xor
(bad)
mov
inc
sub
adc
adc
das
dec
and
inc
sbb
cwde
mov
loopne
or
mov
push
add
ins
or
addr16
jge
clc
xchg
adc
shl
scas
and
loope
and
mov
gs
pop
in
iret
fstp
cmp
xor
imul
sahf
scas
inc
cli
fs
movs
std
xchg
xchg
cmp
ret
push
mov
mov
adc
loop
bndstx
cmovge
pushf
outs
sub
call
ret
add
dec
rcr
jg
cs
retf
ins
loope
shr
std
data16
dec
cmc
cmp
stc
(bad)
jmp
cmp
cmp
or
das
sub
or
mov
leave
push
and
inc
arpl
int3
test
mov
xchg
or
jne
sbb
mov
gs
cmp
mov
popf
dec
xor
repnz
add
repnz
mov
scas
out
movs
xchg
outs
and
repz
push
(bad)
(bad)
repnz
push
add
push
adc
je
dec
cdq
aas
ins
cs
(bad)
mov
jmp
xchg
xlat
inc
add
push
jno
minps
mov
xchg
enter
push
mov
jb
in
add
cmc
iret
stc
cmp
and
cmc
popf
arpl
int3
add
pop
xchg
mov
(bad)
lods
call
fmul
push
cwde
adc
xchg
std
dec
lock
jl
std
mov
jnp
cld
js
mov
ror
mov
mov
or
mov
scas
cmp
dec
inc
pop
repnz
rcr
cmp
or
popf
push
mov
ret
xlat
sub
mov
aad
gs
test
mov
lock
adc
nop
push
jne
cld
(bad)
push
movsx
push
push
mov
pop
(bad)
jno
jbe
adc
mov
ret
push
xor
loop
or
xor
pop
jb
dec
scas
and
push
fadd
cs
movs
dec
es
jecxz
jg
pop
(bad)
mov
xchg
push
dec
mov
repz
mov
repz
dec
ja
mov
retf
jg
mov
mov
adc
iret
jl
xchg
and
or
in
cmp
sbb
push
sub
repnz
jmp
enter
xchg
leave
ret
(bad)
jbe
fmul
inc
out
sub
xchg
(bad)
clc
sub
shl
cmp
in
and
mov
adc
in
mov
into
(bad)
mov
(bad)
in
pop
xchg
pop
enter
(bad)
movs
mov
retf
inc
sub
cmp
fwait
outs
mov
pop
fld1
cmp
loop
push
rol
inc
jae
push
or
(bad)
aaa
fist
(bad)
js
in
mov
jbe
mov
in
cwde
add
sbb
clc
inc
push
mov
repz
aaa
mov
mov
adc
add
enter
mov
pusha
and
jbe
mov
test
sti
inc
fdivr
hlt
jg
test
jp
jb
scas
scas
and
xchg
jge
lods
test
and
pop
dec
jo
or
data16
retf
adc
xor
inc
inc
(bad)
jmp
pop
add
ret
mov
mov
adc
and
aad
or
sub
or
cmp
mul
push
xchg
lods
mov
das
mov
stc
shr
sub
loope
in
push
or
push
bound
scas
ret
sub
or
addr16
push
or
xchg
cmp
cmp
movs
cmps
adc
test
in
adc
sub
adc
cmp
mov
stos
jl
sub
ins
mov
xchg
js
mov
outs
into
int3
push
jg
dec
adc
mov
std
or
pop
sbb
inc
mov
mov
cmps
bound
shr
(bad)
lahf
out
fcos
adc
mov
inc
mov
jle
push
call
fcmovne
bound
jns
and
inc
out
pop
sub
pop
cld
dec
xchg
jp
stc
js
(bad)
enter
mov
cmp
retf
sahf
call
push
mov
in
(bad)
jne
enter
mov
inc
or
jle
mov
pop
(bad)
fwait
pmuludq
mov
ss
mov
scas
push
mov
mov
pop
arpl
ds
addr16
fsubr
ret
fcom
ds
jmp
scas
pushf
adc
fimul
cmps
push
inc
(bad)
push
and
out
cwde
mov
js
cs
sub
sti
sub
jecxz
ror
xchg
sbb
gs
fcom
pop
mov
loope
stc
jns
cmp
adc
out
mov
lods
mov
pushf
inc
push
jle
pop
mov
jae
ja
les
mov
mov
and
aad
rcl
mov
dec
adc
out
xchg
inc
test
iret
je
(bad)
jnp
aas
xchg
inc
fsubr
(bad)
leave
mov
aad
cmp
dec
jl
aad
add
or
int3
mov
pop
jmp
push
popf
dec
test
data16
dec
test
fucom
fs
fist
mov
sbb
xchg
lds
leave
fild
xchg
test
cmps
push
xor
sbb
lods
inc
push
out
lahf
dec
cmp
sbb
dec
xlat
inc
cld
or
xor
mov
pop
mov
dec
nop
inc
sbb
or
sbb
inc
lock
and
dec
jns
push
fsubrp
shl
stos
outs
xor
push
jecxz
mov
out
push
push
call
adc
sub
xlat
adc
inc
fsubr
add
xchg
clc
or
inc
std
outs
cdq
(bad)
outs
movs
dec
push
add
imul
shl
jmp
adc
adc
inc
test
sub
mov
adc
add
pop
mov
cmp
out
pop
adc
sub
push
movs
jne
jecxz
and
sahf
or
mov
lea
js
(bad)
into
loopne
or
mov
(bad)
mov
aas
fdivr
fcom
xchg
or
pop
sti
repz
sub
les
pop
dec
sbb
cmp
call
hlt
jb
pop
sbb
aad
ficomp
sbb
adc
adc
and
jbe
(bad)
les
jb
in
push
add
and
pop
emms
add
adc
cli
ja
outs
xor
test
and
fld
test
in
stc
sbb
dec
iret
mov
jmp
es
shl
mov
push
jno
ret
pop
or
int3
and
fs
cmc
ins
and
mov
leave
mov
mul
icebp
cdq
cmp
jb
in
push
mov
aam
push
mov
adc
mov
(bad)
ret
sahf
sub
shl
test
mov
shr
lods
jns
mov
(bad)
jge
add
xor
cmps
xchg
add
out
xlat
(bad)
pusha
inc
shl
or
inc
pop
mov
gs
es
adc
jb
sbb
or
cmc
das
repnz
sbb
scas
(bad)
not
mov
mov
mov
mov
bound
cmc
in
xlat
mov
inc
cmp
or
or
rcr
mov
or
sti
pushf
ins
(bad)
retf
call
jecxz
pop
ja
or
adc
sbb
jo
les
pop
sub
adc
pop
mov
aaa
nop
aas
test
jmp
std
adc
sub
and
or
outs
leave
scas
xchg
or
mov
sbb
in
inc
pmaxsw
movs
mov
fwait
inc
jp
call
int3
lahf
je
stos
xlat
scas
ss
pusha
nop
cmps
sar
mov
inc
loopne
mov
ins
xor
imul
int3
out
sbb
add
mov
jb
stc
data16
loope
xchg
cmp
add
ja
mov
sbb
lods
mov
mov
inc
stc
xor
xchg
test
jg
adc
mov
aaa
mov
or
jg
fmul
ins
and
push
lods
aad
or
jmp
shl
(bad)
mov
add
add
and
xor
cmp
jmp
sar
mov
xor
arpl
sar
les
es
ss
ret
add
fs
mov
pusha
mov
and
pop
fbstp
push
pop
(bad)
sbb
pop
push
add
ins
push
and
cmp
and
es
enter
inc
jle
loop
cmp
in
je
mov
jns
jl
enter
ds
scas
out
mov
mov
xlat
dec
adc
int3
scas
xchg
or
cmp
fsubr
xchg
jmp
and
inc
xchg
inc
arpl
cmp
mov
loopne
cli
out
loop
or
imul
(bad)
in
or
inc
inc
push
lods
stos
cdq
and
lods
(bad)
push
xor
(bad)
cld
adc
mov
cli
in
ins
icebp
dec
mov
lods
push
inc
ja
lahf
int
xchg
nop
inc
shl
ins
and
daa
iret
mov
pop
and
adc
mov
fidiv
(bad)
push
imul
rol
add
jg
(bad)
retf
lods
and
sub
mov
sub
int3
xor
out
lea
fsubr
jae
adc
es
addr16
dec
or
mul
pop
or
xchg
mov
out
cli
ja
and
cmp
cwde
mov
pop
dec
adc
jg
daa
lahf
test
pop
mov
xchg
aam
inc
data16
inc
pop
std
mov
dec
xlat
cmp
xchg
ret
cmp
push
pop
or
push
ja
xchg
pcmpgtw
pop
jge
ja
les
fxch
nop
cmovb
ror
pop
test
ret
xor
jo
mov
imul
fnclex
pop
in
dec
(bad)
jmp
clc
cwde
hlt
inc
movs
adc
and
sub
bound
push
sbb
dec
sub
retf
jle
pop
loop
and
fyl2x
inc
and
cmp
mov
sahf
es
stos
sbb
into
repnz
in
xor
sub
sbb
test
stc
repz
jno
scas
out
adc
add
call
mov
call
outs
mov
call
into
jnp
in
pop
inc
sub
sbb
(bad)
mov
push
std
jge
mov
repz
cmp
gs
mov
adc
mov
ins
fcomip
pop
in
pop
loopne
or
and
test
push
jb
add
rcr
stos
dec
call
dec
sbb
add
rcl
out
pop
(bad)
fcom
mov
rsqrtps
ret
xchg
jo
inc
sbb
test
cmp
daa
sub
jno
sahf
ror
pop
int
push
mov
pop
cmc
int3
lahf
pusha
and
cmp
fdivr
inc
sub
add
out
cmp
ror
sbb
and
xor
dec
icebp
ins
popa
xchg
scas
cmp
das
nop
das
and
adc
in
mov
jmp
jl
movs
lahf
sbb
mov
retf
dec
xor
pop
pop
repz
int3
push
sahf
ss
out
call
xlat
mov
ins
repz
inc
clc
or
or
repnz
out
or
stos
lods
sbb
add
fwait
mov
das
bound
outs
cmps
cmp
dec
push
mov
dec
and
gs
xchg
fadd
mov
jo
jo
jmp
xchg
jl
mov
inc
inc
mov
fs
dec
mov
cmp
xchg
mov
stc
pop
dec
fsub
mov
mov
pop
lods
pop
mov
jle
adc
add
ret
(bad)
test
movs
xchg
or
ss
cmps
dec
fistp
pop
mov
sub
mov
xchg
jbe
xor
mov
jno
mov
ror
jle
xchg
or
xor
fbstp
or
adc
out
popf
(bad)
retf
stos
mov
fist
or
jmp
cmp
xor
jecxz
xchg
xchg
cld
std
cmps
adc
cmp
pop
xor
inc
jg
lds
add
into
push
cmc
xchg
mov
aad
mov
in
pushf
pop
sbb
ret
ret
add
mov
aad
mov
(bad)
das
stc
retf
and
pop
mov
cmp
inc
xor
aad
pop
cmp
ins
js
sub
xor
xchg
mov
xchg
cld
pop
retf
adc
fs
sahf
retf
pop
movs
int3
scas
xlat
inc
mov
aam
(bad)
dec
adc
fidivr
sbb
cmp
add
add
adc
jg
mov
add
mov
push
test
pop
jmp
xchg
add
push
push
addr16
push
mov
arpl
or
cs
aaa
and
jmp
xchg
xchg
pop
fld
adc
push
adc
cmp
shl
dec
mov
aaa
(bad)
arpl
(bad)
es
das
ds
repnz
loop
inc
push
enter
(bad)
xor
std
lahf
cmp
daa
jnp
jecxz
xor
test
adc
cmps
vphsubwd
scas
cmp
adc
add
and
js
mov
sub
and
push
fisub
ds
push
mov
enter
fild
ins
dec
mov
xchg
inc
out
das
mov
outs
sub
outs
push
es
adc
push
inc
xor
pop
add
adc
mov
adc
clc
mov
jns
sub
inc
mov
int
(bad)
movs
and
jbe
les
loopne
arpl
jo
pop
dec
in
int
jmp
mov
jo
or
leave
mov
fldenv
adc
dec
ss
xor
adc
jp
jmp
xor
call
and
int3
iret
fcom
pop
push
retf
imul
push
daa
stos
inc
das
bound
cmp
mov
scas
cli
mov
sar
and
add
imul
lods
sub
push
frstor
lock
int3
xchg
lahf
dec
inc
bnd
add
jno
dec
push
add
sbb
pop
das
mov
(bad)
xlat
cmp
cmp
ss
sub
push
push
(bad)
pop
mov
test
pop
pusha
jecxz
push
or
fs
movs
mov
sbb
jb
inc
jb
cld
imul
out
mov
mov
ficomp
xor
add
js
popa
lock
idiv
mov
or
adc
mov
and
pop
sub
push
cld
iret
ds
push
ds
adc
cli
and
mov
add
cld
ds
out
ret
inc
int
or
ja
ins
inc
adc
mov
shr
(bad)
outs
adc
mov
inc
sbb
aaa
dec
dec
stos
and
icebp
pop
clc
inc
and
sub
push
rcr
mov
mov
mov
arpl
outs
sub
ret
xor
mov
out
cmp
cmp
sbb
sti
pop
cs
ins
jne
rdtsc
in
call
scas
inc
mov
dec
xchg
dec
rcr
and
popf
or
aas
iret
xchg
cdq
dec
mov
jnp
inc
into
xchg
mov
and
popf
pusha
xor
loope
pop
push
mov
test
jne
sub
shl
or
imul
mov
aad
mov
xor
xchg
or
fidivr
add
cmp
jmp
or
jge
sbb
dec
pop
shl
lods
adc
imul
js
xor
xchg
xchg
jecxz
xchg
add
jns
adc
add
pmuludq
xchg
aam
pop
or
mov
cmp
or
mov
hlt
jmp
movs
les
scas
sub
mov
outs
add
push
call
mov
inc
out
xor
pop
int
dec
sbb
mov
inc
adc
xor
scas
movs
repnz
fmul
pop
pop
jbe
mov
adc
lock
sub
or
dec
aam
sub
or
adc
(bad)
dec
inc
or
add
xor
inc
pushf
(bad)
je
push
pop
jmp
add
xchg
and
test
fstp
imul
add
jnp
(bad)
add
and
mov
(bad)
cmp
repz
(bad)
sub
cld
(bad)
in
mov
cdq
rcl
jbe
sbb
(bad)
enter
mov
pop
xor
xchg
jmp
ret
jae
sbb
movs
mov
inc
or
mov
mov
imul
sbb
(bad)
xchg
and
and
push
cli
and
shr
cdq
or
loop
call
adc
cli
movs
xchg
and
addr16
jno
xor
jmp
addr16
jle
(bad)
es
inc
mov
outs
push
lock
sub
std
stos
add
les
inc
and
push
lds
sbb
loopne
loop
jl
faddp
pop
add
sbb
add
jle
sub
les
xchg
lock
cli
adc
je
loopne
int3
(bad)
cdq
add
xlat
sbb
mov
add
pop
imul
(bad)
sbb
jb
das
push
movs
jmp
push
out
mov
enter
push
xlat
outs
add
inc
dec
iret
outs
fistp
mov
nop
add
push
xchg
sbb
pop
shl
mov
popf
ins
mov
xchg
jg
int
jbe
ja
test
inc
cvtpi2ps
add
in
adc
shr
stos
(bad)
sub
gs
movs
dec
pop
stos
inc
fyl2xp1
lahf
int
jno
dec
push
mov
dec
push
rcl
hlt
sub
in
inc
cdq
push
adc
out
xchg
cmp
imul
mov
sub
mov
(bad)
shl
add
jo
sbb
repnz
stos
mov
inc
mov
mov
ss
inc
xchg
add
ins
js
pop
fdivr
push
repz
stos
jmp
out
dec
push
mov
div
dec
mov
repz
cs
jp
repz
pop
mov
and
mov
mov
mov
and
adc
mov
int
and
dec
imul
(bad)
and
push
test
mov
aas
pop
jbe
arpl
xchg
or
iret
ja
ins
push
mov
mov
jno
ret
add
and
lea
clc
adc
shl
aas
out
fisttp
loope
jns
dec
sahf
sbb
jo
sbb
movs
(bad)
mov
mov
and
xor
sbb
xor
call
and
outs
xchg
push
mov
xchg
ficom
add
aas
(bad)
mov
out
or
dec
das
lods
in
repz
scas
imul
jmp
frstor
loop
cmps
mov
inc
mov
idiv
ret
mov
in
or
push
adc
xor
xchg
xchg
xor
dec
add
pop
jge
push
xchg
sub
ficomp
pop
jne
push
iret
sbb
out
adc
mov
in
inc
push
mov
ficomp
(bad)
pop
jmp
add
mov
pop
add
mov
cmp
loope
int3
in
or
js
push
lea
clc
aas
std
lahf
call
adc
or
mov
call
jo
or
or
dec
inc
out
xchg
mov
sbb
sti
into
push
fld
pusha
inc
shl
mov
jnp
pop
retf
mul
jmp
cwde
cmp
bound
mov
xchg
loopne
jb
shl
inc
jg
inc
pop
inc
mov
cmp
stos
push
retf
push
aas
inc
adc
push
loope
repz
push
rcr
shl
js
add
jp
fiadd
inc
pushf
cmp
fnsave
sub
add
loop
iret
cmps
mov
xor
ins
pop
xchg
mov
ret
xor
mov
sub
mov
cli
dec
scas
xor
dec
stos
jmp
jge
enter
add
adc
test
jno
sub
sub
stc
aas
cli
and
jo
jnp
xchg
mov
in
lods
scas
push
mov
out
pop
sub
call
sbb
cmp
fdivr
jmp
pop
jp
aad
ins
xchg
jp
dec
push
shl
push
inc
inc
pop
fwait
cmp
adc
je
sbb
sub
imul
lea
mov
mov
mov
std
jg
sar
cmp
mov
sbb
ret
enter
or
push
call
sbb
mov
sub
sub
pushf
mov
ins
xchg
jecxz
jg
stos
lock
cmp
cmp
rol
cmps
mov
push
cld
nop
dec
jle
movs
das
cmp
sbb
test
add
xor
sbb
or
js
cmps
adc
in
aaa
push
jl
les
sbb
and
jle
mov
inc
fisubr
aas
ins
sbb
outs
movs
sbb
mov
push
push
jg
int
rcl
xchg
cmps
adc
pop
add
push
ja
ds
retf
fadd
or
loope
es
fsub
sbb
jns
lods
dec
stos
fmul
add
popa
push
mov
lock
fcomi
lods
sbb
push
mov
push
shl
and
int
adc
add
retf
rcr
(bad)
cmps
pusha
ss
or
jg
cdq
cmp
cmp
inc
fsubr
cmc
mov
inc
fistp
cmp
mov
aaa
cld
ret
cmc
dec
pusha
scas
sti
aas
cld
cdq
xor
daa
(bad)
push
sub
adc
imul
loope
pop
cmp
(bad)
or
dec
shl
dec
jo
pushf
mov
imul
sbb
out
les
and
mov
push
pusha
aad
out
mov
dec
scas
test
sbb
dec
in
adc
scas
sub
ds
jnp
shr
push
(bad)
lahf
add
lds
rcl
nop
adc
and
stc
mov
stos
and
call
fwait
xchg
je
xchg
or
hlt
pop
push
iret
fwait
mov
pop
nop
outs
mov
sbb
es
cmp
add
sbb
mov
or
push
or
jmp
loopne
sbb
cdq
cmps
inc
jbe
mov
cdq
imul
cmp
ret
pusha
data16
xchg
fmul
je
cmc
rcr
lea
mov
xor
stos
mov
jp
fcomp
mov
lahf
ror
fisttp
enter
mov
cmp
sub
call
mov
jp
and
hlt
lea
(bad)
loop
out
or
stos
mov
sahf
and
retf
sub
xor
jg
pop
inc
pmaddwd
sahf
push
push
fnstsw
xchg
or
hlt
inc
xchg
cmp
xchg
fild
mov
jg
ror
stos
fild
loopne
rcl
and
sbb
mov
outs
fs
popa
add
and
cmp
into
or
cli
imul
push
movs
mov
dec
jmp
cmps
jns
inc
adc
stos
lea
dec
mov
ret
adc
(bad)
xchg
call
inc
mov
pushf
pop
test
xchg
pop
outs
bound
mov
(bad)
jnp
popa
(bad)
test
rcr
cmps
ja
pushf
xchg
jae
ins
inc
cmps
adc
and
movs
jb
cmc
dec
test
mov
lods
les
mov
adc
add
mov
retf
loopne
cmps
xchg
or
js
adc
jo
mov
cdq
es
cmps
jb
in
mov
sub
adc
enter
dec
push
clc
or
xchg
leave
rcr
or
mov
fcmovnbe
push
dec
ins
int
mov
pop
fnstcw
jne
jge
je
push
mov
pop
xor
dec
mov
gs
ds
jmp
push
xor
ret
out
mov
outs
push
dec
inc
xchg
jl
jae
jne
sub
jmp
mov
arpl
jl
scas
out
dec
push
push
cmp
mov
out
pushf
fdivr
retf
pop
inc
ret
add
repnz
or
jbe
inc
jg
pop
inc
aaa
push
sar
or
movs
mov
mov
je
aaa
aaa
xor
push
dec
repnz
movs
mov
adc
test
adc
adc
ficom
lahf
imul
xchg
push
fiadd
mov
movs
test
xchg
ror
xor
scas
pop
ss
or
push
lahf
das
sub
loope
cmps
or
in
adc
retf
inc
fld
jne
sbb
loopne
push
fmul
dec
pxor
xchg
mov
aam
test
or
stos
sub
jae
ficom
xchg
or
mov
mov
lods
xchg
dec
sbb
sub
les
loop
ret
jo
adc
in
sub
mov
aad
fidiv
push
push
neg
lock
or
pop
out
inc
aas
sar
cmc
leave
mov
or
inc
int3
pop
fwait
cmp
in
sar
popf
es
fwait
mov
push
cld
pop
inc
pop
mov
inc
push
jp
jne
xlat
cld
mov
sbb
test
scas
jle
loope
loope
jnp
fist
adc
jbe
push
imul
inc
cmp
test
push
out
cli
adc
add
jae
mov
dec
ins
inc
jbe
add
cmps
lock
test
jp
aad
mov
inc
mov
jle
add
jmp
inc
fist
jne
and
movs
add
jecxz
xchg
sub
daa
pop
sbb
stos
sbb
xchg
xchg
leave
test
push
mov
movs
add
cmp
sub
xchg
xor
or
mov
cmps
xchg
push
and
mov
gs
stos
aaa
test
cmp
ret
dec
mov
push
rol
push
mov
cmps
cmp
fimul
sbb
outs
xor
and
adc
add
jnp
fdivr
adc
pop
popf
push
mov
stc
cwde
or
push
loope
sbb
aas
pop
cmp
jp
imul
cs
mov
shr
daa
mov
xchg
inc
rcr
push
adc
sub
push
dec
rcr
sbb
jecxz
jl
xchg
mov
out
lds
inc
mov
xchg
(bad)
loope
int
xor
into
daa
repz
and
push
pop
retf
xor
xor
dec
lods
scas
call
ficomp
sbb
jno
and
in
mul
dec
cdq
xchg
in
dec
int
or
or
push
jno
test
mov
pop
bound
adc
push
jbe
cmp
cli
jae
and
or
bound
in
jge
mov
push
mov
test
fmul
mov
mov
in
jge
pop
(bad)
jl
inc
fld
stos
push
mov
iret
pushf
or
adc
jnp
jmp
(bad)
xor
and
push
pop
(bad)
into
sbb
lock
in
jp
and
push
or
fxch
in
sub
xchg
in
dec
(bad)
push
adc
cmp
mov
ss
push
sbb
movs
out
cmp
nop
das
cdq
jg
int3
(bad)
fldenv
stos
(bad)
scas
dec
jge
inc
std
das
dec
push
sub
xor
mov
mov
adc
bound
jne
pop
jne
lock
movs
mov
inc
mov
int
enter
mov
call
jne
js
and
je
jae
push
mov
xor
leave
dec
mov
je
and
sti
jl
fild
mov
mov
pop
push
aad
cmp
cmp
int
mov
add
sub
ds
push
cmp
jbe
add
in
mov
push
movs
shr
in
cwde
in
sti
stc
cmovns
ss
popf
and
mov
and
xor
mov
out
ds
outs
outs
jle
into
pop
mov
cwde
fidiv
pop
mov
mov
inc
fwait
xchg
in
xchg
xor
sar
cmc
inc
imul
cdq
or
jle
sbb
icebp
cmc
aad
push
pop
dec
pop
push
div
ret
jnp
rcr
mov
or
ror
mov
in
sti
and
mov
mov
sti
push
add
or
shr
xor
sbb
pop
call
daa
fiadd
or
sar
mov
sbb
je
add
push
call
pop
mov
packsswb
inc
in
loope
dec
bound
push
add
pushf
push
rol
adc
jnp
(bad)
(bad)
cdq
outs
mov
xchg
fldenv
mov
dec
or
aas
push
clc
cmp
xchg
test
cmp
rcr
pop
hlt
clc
mov
and
jns
fxam
mov
in
popa
ins
jmp
mov
jg
scas
aas
loopne
ja
retf
cmp
pop
(bad)
and
jne
js
adc
inc
xchg
or
mov
push
movs
(bad)
pop
stos
push
jnp
adc
lock
(bad)
jle
(bad)
call
adc
jl
lahf
mov
sti
jbe
xchg
cs
and
std
cmps
cmc
or
(bad)
fcmovnb
aaa
jbe
je
add
jne
pop
sbb
or
mov
fmulp
cmp
shl
cmc
push
add
aam
xchg
push
mov
xchg
lods
adc
in
fcom
push
cs
adc
mov
adc
dec
int
fimul
sbb
jno
clc
bound
mov
jge
test
mov
movs
add
xchg
popa
shl
bound
mov
add
stc
jge
mul
dec
jo
push
outs
fsubp
pop
lds
pop
dec
jmp
mov
pop
dec
cmp
lods
into
aad
(bad)
out
lahf
add
in
iret
lods
mov
xor
push
inc
push
xchg
jae
jbe
mov
std
addr16
shr
scas
outs
scas
push
sbb
xchg
out
test
ins
cmps
dec
movs
mov
addr16
mul
stos
hlt
dec
shl
push
movs
arpl
mov
xor
lds
cmp
movs
cmps
mov
and
push
adc
mov
sub
push
cmp
mov
push
ins
test
sbb
add
test
mov
aam
std
stc
mov
aaa
lea
faddp
and
sub
mov
push
dec
sbb
sub
sub
ret
pop
and
xor
hlt
fisttp
pop
(bad)
test
push
cs
push
add
jb
dec
jl
loop
ret
cwde
mov
ret
mov
jno
fldl2e
out
das
nop
inc
cmp
ins
push
lock
rcr
inc
pop
jecxz
scas
inc
not
pop
mov
sub
or
pop
mov
dec
enter
adc
ja
das
adc
sbb
cmp
(bad)
lahf
fisubr
daa
xlat
and
fwait
adc
mov
popf
dec
(bad)
jne
ss
(bad)
and
and
test
leave
jmp
pop
push
mov
ret
xor
jae
movlps
xor
xchg
add
ror
and
mov
rcl
dec
repnz
(bad)
adc
xchg
mov
cs
dec
sbb
push
or
repz
pop
inc
xchg
mov
scas
inc
int
fst
popa
in
xor
lods
cmp
fndisi(8087
xor
inc
repnz
and
fwait
xor
jno
data16
iret
sub
adc
inc
adc
ret
jmp
sbb
rcr
dec
ja
mov
lods
mov
push
jge
retf
sbb
js
cdq
jle
test
popf
sbb
cdq
int3
or
and
iret
pop
dec
cld
mov
lahf
push
adc
das
cmp
aas
mov
(bad)
leave
push
xor
popa
jne
add
outs
fild
jle
std
std
xlat
jno
jbe
cdq
and
xchg
add
dec
mov
rcr
pop
frstor
jmp
and
and
sub
outs
and
(bad)
scas
push
cmp
inc
cmp
push
jg
jg
iret
cmps
pusha
stos
cmps
jg
jmp
push
fsub
js
pop
pop
scas
xor
mov
aaa
push
xchg
cli
stos
inc
inc
jge
sbb
adc
je
dec
inc
test
or
inc
pop
adc
shl
cli
xor
call
push
mov
lods
fsubr
(bad)
dec
sub
fsub
xchg
ins
mov
out
faddp
adc
jae
fadd
retf
sbb
or
cmp
jno
daa
jle
jo
fistp
into
clc
fwait
add
push
ds
int
sub
xchg
imul
lods
fs
(bad)
fild
add
xor
jmp
mov
js
jns
and
jmp
add
(bad)
fucom
shl
rol
xor
xor
mov
lea
int
jb
push
xor
and
mov
xchg
ret
sbb
cmc
pop
adc
xchg
fcmovb
xchg
add
xor
int
loop
fwait
iret
adc
jecxz
(bad)
(bad)
jbe
mov
fcomp
rol
neg
push
jo
xor
and
test
gs
pop
pop
and
inc
add
push
outs
pop
mov
call
jne
fidiv
pop
dec
cmps
adc
mov
xchg
jp
sub
into
repnz
add
(bad)
dec
aam
mov
pushf
in
stos
dec
push
dec
cmps
test
icebp
push
nop
xor
ds
lea
add
nop
xor
and
xlat
out
and
das
adc
mov
mov
or
xchg
sub
push
cmp
in
sbb
cdq
inc
mov
mov
(bad)
rcr
inc
xchg
add
mov
cmps
repnz
adc
jne
ja
lahf
enter
shl
xchg
popa
sahf
jmp
sahf
pop
mov
xor
xor
leave
outs
xchg
leave
cmp
mov
and
imul
icebp
pop
call
sub
xchg
mov
add
or
(bad)
mov
pop
mov
and
mov
mov
and
push
lahf
xchg
jp
mov
hlt
fdiv
test
pop
dec
(bad)
repz
sub
addr16
test
pop
xchg
sbb
cmovno
out
cmp
adc
push
mov
(bad)
dec
pop
mov
sahf
cmp
popf
adc
or
xor
add
and
sbb
pop
mov
pslld
xor
pop
mov
mov
mov
mov
test
dec
(bad)
cmp
pop
(bad)
fs
out
jp
cmps
retf
ret
sbb
in
sbb
pop
jmp
push
mov
les
out
sbb
and
jle
dec
in
xchg
out
js
mov
fldcw
fiadd
mov
inc
jae
rcr
cmp
clc
cmp
fstp
push
xchg
mov
outs
into
ret
jns
stos
xchg
out
(bad)
ins
fidivr
es
sbb
je
pop
inc
or
sbb
ds
xlat
push
pop
ret
sub
stc
or
or
sub
gs
pop
cld
mov
sbb
movs
pushf
push
test
(bad)
repz
mov
sti
imul
adc
rcr
or
dec
test
arpl
xchg
push
enter
or
into
test
cmc
fsub
push
jmp
dec
push
mov
arpl
das
or
cmc
xor
or
lock
lahf
and
dec
push
stos
std
mov
leave
or
loope
and
in
loopne
jne
xchg
push
pop
outs
movs
in
and
clc
inc
inc
inc
outs
ins
sub
or
cmp
inc
mov
test
push
or
dec
push
and
daa
dec
push
(bad)
push
popa
inc
jle
xchg
jbe
bound
push
cmp
mov
(bad)
push
sbb
daa
out
mov
cli
pop
xchg
xor
hlt
and
jo
dec
sbb
shl
adc
shl
cmps
lea
out
std
dec
jl
jb
adc
jl
arpl
cmp
push
fldcw
fbld
push
mov
jmp
push
in
fidiv
push
pop
sbb
add
sar
push
lahf
in
sub
lods
arpl
xchg
dec
sub
xor
dec
pusha
push
mov
jns
xlat
out
cld
sbb
sub
outs
(bad)
mov
add
sbb
jmp
and
sbb
sbb
je
imul
jno
jmp
xlat
cmp
mov
daa
popf
call
inc
nop
mov
and
out
hlt
jp
dec
push
dec
push
lods
or
rol
stos
mov
test
xchg
(bad)
jno
leave
ret
(bad)
fcom
test
stos
sbb
sbb
sbb
mov
test
mov
xchg
mov
add
jno
dec
push
gs
in
inc
pop
pop
pushf
sar
sub
adc
add
fsub
jp
retf
pop
mov
xchg
mov
or
pushf
les
inc
pop
pop
fcmovbe
sbb
xor
cmp
and
jae
pop
test
ror
cdq
bound
pop
mov
push
sar
ja
mov
add
icebp
call
jge
push
iret
cmc
sahf
push
inc
outs
dec
push
ds
(bad)
int3
jmp
adc
cmp
hlt
cmps
cmp
arpl
sahf
ret
mov
inc
push
xchg
outs
xchg
cmps
xor
jle
fcomp
fwait
sahf
fucomp
and
sbb
pop
add
jp
adc
push
and
mov
sub
push
cld
mov
xor
cli
push
movs
ret
std
icebp
add
int
add
addr16
dec
clc
aas
add
cwde
sar
fsubr
sub
not
pop
bound
dec
fdiv
pop
xchg
dec
iret
adc
aam
jb
(bad)
push
adc
cmp
scas
xor
add
sbb
inc
arpl
or
or
cmc
int3
xchg
jmp
retf
inc
jle
int3
imul
(bad)
mov
(bad)
dec
inc
xor
sbb
sti
add
int3
jmp
bound
xchg
sbb
mov
movs
inc
pandn
lock
add
fidiv
sti
inc
xchg
and
ret
ds
sub
or
mov
test
lods
js
adc
lods
or
imul
push
mov
mov
pop
scas
ss
int3
loope
mov
daa
or
call
ds
inc
push
jecxz
or
sar
fistp
add
aam
cmp
in
push
xor
mov
and
shl
cwde
cmp
clc
shr
inc
rcl
inc
xor
popa
pop
test
pop
lock
xchg
or
nop
int
jnp
int3
and
mov
retf
mov
fisub
sub
(bad)
iret
sub
lods
fcomp
mov
or
mov
jns
dec
movs
gs
enter
or
sub
mov
loop
mov
xchg
pop
inc
es
daa
mov
repz
pusha
push
fst
mov
inc
sbb
push
inc
pop
and
add
push
cmp
out
or
mov
cdq
fsub
push
xor
mov
mov
ja
or
cmp
xchg
pop
mov
sub
and
push
and
movs
xor
(bad)
cmp
sbb
and
push
inc
inc
retf
out
mov
pusha
(bad)
xor
add
in
pop
dec
jae
dec
(bad)
mov
xchg
cmp
pop
mov
add
mov
shl
mov
and
adc
aaa
inc
add
popa
mov
icebp
call
dec
daa
stc
lahf
fwait
xchg
loope
in
add
out
dec
inc
aad
jg
jmp
mov
push
inc
mov
ret
addr16
fadd
shl
sbb
dec
in
push
or
or
mov
mul
pusha
enter
hlt
ins
ins
cmps
jns
xor
xor
push
cmc
xchg
out
fcmove
dec
rcl
cmp
jp
mov
cdq
inc
jnp
cmc
and
outs
pop
or
retf
jne
xlat
cli
call
jmp
pusha
lods
mov
and
pop
mov
add
jo
out
pop
jg
jbe
and
inc
aad
mov
call
pop
dec
lods
inc
push
add
cmp
cmp
and
call
cdq
add
ret
inc
or
jns
mov
adc
(bad)
clc
inc
inc
mov
or
push
xor
retf
(bad)
das
je
(bad)
(bad)
pop
push
or
(bad)
dec
(bad)
fldcw
mov
pop
lods
pop
and
ficom
cmc
mov
mov
xor
and
daa
stos
adc
dec
mov
hlt
das
loope
icebp
push
xlat
cmc
daa
or
push
fwait
sbb
cdq
pop
out
retf
and
inc
lods
adc
cmp
cmps
cmps
push
sub
xchg
adc
mov
pop
fdiv
mov
pop
xchg
mov
pop
add
jae
cld
aad
xchg
mov
push
fcmovne
push
es
push
mov
mov
call
(bad)
add
ret
outs
mov
cmp
cmp
nop
dec
les
pop
mov
xchg
mov
dec
dec
cli
enter
(bad)
mov
mov
or
aaa
outs
dec
fwait
loop
out
mov
outs
sub
(bad)
and
(bad)
fnsetpm(287
add
dec
jge
pushf
mov
hlt
adc
nop
jmp
hlt
pop
cmc
retf
int3
shl
cmp
push
leave
lea
les
sahf
and
loopne
mov
sti
push
xor
inc
xor
lods
test
nop
das
pop
sbb
jecxz
push
arpl
test
test
mov
or
test
jle
pop
pop
repz
retf
in
repz
repz
clc
fld
push
repnz
add
movs
nop
out
inc
stos
sti
popf
aas
fsub
mov
xlat
and
(bad)
stc
or
out
aam
dec
stos
pop
cdq
js
(bad)
jmp
mov
push
es
push
test
je
jno
es
jle
xor
retf
addr16
test
stos
sbb
imul
pop
in
xchg
adc
leave
xor
mov
sub
retf
adc
jmp
adc
mov
je
jp
xchg
adc
(bad)
push
add
xchg
sbb
das
mov
add
jo
ror
mov
mov
pop
and
jo
ror
lods
sahf
mov
push
push
vmaskmovdqu
shl
and
lods
aaa
xor
xor
push
dec
xlat
js
push
adc
les
rcl
or
xor
cmp
jge
xchg
sub
sbb
or
in
inc
enter
sbb
push
sbb
lds
add
pop
mov
cmp
scas
jg
push
xchg
push
fwait
ds
imul
hlt
mov
int
xor
pop
cdq
mov
and
pop
inc
in
xor
or
cmp
mov
or
test
iret
sti
les
or
test
bound
mov
dec
aam
xchg
stos
cs
sub
(bad)
add
mov
hlt
push
jecxz
push
jb
cmp
call
stc
and
inc
mov
mov
adc
sbb
jp
repz
push
in
scas
or
je
pop
push
std
dec
dec
stos
mov
mov
sbb
sub
and
adc
mov
dec
sub
or
sti
icebp
sbb
mov
mov
cmp
stos
sub
aas
pop
push
xchg
pop
test
or
xchg
dec
mov
es
mov
xchg
cmp
data16
fcmovu
dec
retf
stos
adc
sub
cmp
adc
popa
mov
and
add
cwde
jle
test
sbb
imul
nop
movs
mov
pop
jmp
retf
fisttp
cmp
dec
cmp
sub
out
inc
pushf
xlat
ror
out
jnp
popf
fistp
xor
icebp
in
dec
jbe
jmp
test
mov
dec
jne
cmp
nop
xor
inc
xchg
add
repz
fwait
retf
cs
jmp
aad
push
jns
cmps
aam
jbe
jb
mov
fwait
or
xor
mov
push
ins
dec
mov
pop
stc
popf
and
push
mov
lahf
icebp
mov
adc
arpl
add
and
push
mov
xor
sub
sahf
outs
mov
or
mov
cmc
adc
and
fwait
mov
inc
sub
cs
and
mov
jne
xor
nop
(bad)
ficomp
xchg
cwde
clc
pop
sahf
clc
(bad)
fisttp
or
add
pop
rcr
adc
mov
(bad)
sub
push
rcr
push
or
int
or
fadd
push
out
pop
pop
pop
int
cmp
inc
xor
in
mov
cmp
ins
mov
jmp
or
aad
into
mov
mov
mov
xchg
mov
(bad)
mov
dec
shl
mov
dec
push
sub
dec
cmp
mov
repnz
xchg
dec
lods
shr
lds
dec
rcr
push
ret
out
mov
mov
jbe
pop
div
jmp
pop
xchg
inc
div
out
popa
out
loope
ja
stos
out
cmps
or
cmp
rcl
loop
arpl
inc
ror
jmp
les
sahf
(bad)
retf
fadd
push
jl
xor
mov
jge
retf
(bad)
(bad)
and
popf
fsub
jmp
jnp
test
sub
stos
test
dec
test
(bad)
push
mov
mov
mov
push
pop
lds
or
add
or
leave
jl
adc
fsub
fnstenv
hlt
repnz
and
jo
loopne
out
dec
cmp
mov
add
outs
fmul
bnd
out
loopne
jnp
push
adc
add
icebp
mov
std
lds
pop
shr
pop
aas
and
add
ret
sub
fiadd
inc
in
movs
bound
pushf
sar
sub
(bad)
loope
add
mov
mov
iret
push
cmp
jle
(bad)
enter
dec
jae
jg
adc
fdiv
hlt
push
popf
sub
inc
xlat
int3
adc
data16
aaa
pushf
shl
or
mov
in
movs
ins
rcr
add
je
nop
in
mov
jmp
xor
sbb
inc
sub
ror
mov
sub
retf
div
cmp
inc
shl
fidivr
mov
mov
dec
sahf
test
jp
pushf
jmp
mov
push
inc
loop
fimul
scas
(bad)
ror
jle
mov
jp
xchg
mov
call
add
inc
push
aaa
adc
or
aaa
sub
ror
js
push
push
out
pop
adc
and
push
mov
mov
ror
jmp
repz
dec
push
fadd
sub
sbb
imul
es
loopne
jne
sar
inc
ja
retf
dec
jns
dec
stc
xor
mov
push
fisttp
jge
out
out
push
mov
and
lahf
ror
pop
xchg
push
add
repnz
in
push
or
ins
dec
fnstcw
mov
xchg
js
lahf
and
inc
sbb
popa
outs
pop
test
mov
sti
jmp
inc
mov
fldl2e
xchg
push
pop
lods
push
xchg
nop
and
fdiv
out
or
mov
jecxz
sub
ja
jo
(bad)
bnd
xlat
js
dec
pop
cmp
(bad)
scas
popf
iret
add
fld
cld
mov
and
sub
sbb
popf
mov
xlat
dec
stc
xor
je
cmp
test
mov
test
xor
lock
mov
push
scas
sbb
mov
sub
jae
push
cmp
test
push
mov
mov
mov
xor
pop
test
adc
test
dec
jmp
daa
popf
jo
repnz
pop
cwde
mov
pop
sub
sub
adc
mov
es
shl
xchg
or
jmp
mov
dec
fs
sbb
push
xor
mov
dec
mov
and
dec
mov
out
or
or
out
call
inc
in
inc
xor
fsubp
retf
mov
and
repnz
xor
pop
inc
test
mov
pop
sub
mov
push
enter
nop
jmp
add
or
es
daa
adc
mov
scas
push
das
fild
jne
and
xchg
dec
mov
(bad)
cmp
lods
fiadd
(bad)
mov
sub
jns
arpl
int
inc
call
es
pop
aad
(bad)
dec
cmps
fcmovnb
test
jmp
xchg
xor
and
scas
xchg
pop
(bad)
xor
(bad)
mov
sahf
push
cli
ret
xchg
das
jmp
sub
lds
gs
test
pop
mov
sbb
pop
sub
push
outs
add
adc
xchg
xchg
pop
inc
aam
test
mov
iret
mov
cmp
inc
cs
fldenv
mov
mov
dec
cmp
out
or
pop
push
jmp
push
pop
das
push
adc
(bad)
out
enter
rcl
outs
or
sbb
pop
sbb
fistp
mov
mov
cmp
cmp
add
cmp
mov
shl
in
fwait
rcr
aad
mov
jno
aaa
mov
and
call
cmp
xchg
jne
test
mov
(bad)
adc
shl
addr16
inc
push
adc
fwait
push
jge
mov
add
cmp
shl
aad
inc
fld
jb
adc
sub
in
call
add
lea
push
enter
inc
pop
sbb
cwde
jno
out
jae
and
xor
scas
repz
push
ret
mov
dec
sbb
dec
fcom
sbb
pop
aam
hlt
pushf
inc
or
jne
and
or
mov
push
test
xchg
xchg
enter
xchg
cwde
pop
xchg
js
inc
cs
cmc
sahf
es
pop
es
stc
int3
jecxz
sti
cmp
mov
fdiv
sbb
data16
stos
add
ror
mov
xchg
sbb
push
pop
mov
div
movs
(bad)
mov
out
stos
gs
fnsave
mul
mov
xchg
nop
scas
call
cmp
fwait
jge
(bad)
mov
lahf
je
mov
adc
lods
push
xchg
mov
out
or
pop
out
and
leave
push
fnsave
scas
hlt
or
mov
pop
loope
sub
inc
jecxz
and
inc
jmp
cld
inc
mov
and
or
dec
fiadd
aaa
lock
in
mov
push
push
jmp
or
scas
cwde
leave
lahf
fisttp
xlat
xor
add
inc
and
loop
aas
clc
inc
mov
xchg
ror
mov
movs
rcl
push
outs
scas
aam
xchg
ds
je
popa
dec
in
daa
stos
arpl
dec
mov
lods
cmp
jbe
cmp
cwde
sub
cld
add
(bad)
int
mov
inc
xchg
mov
mov
push
call
xor
sbb
imul
cmp
test
pop
adc
adc
arpl
imul
adc
cmp
fidiv
xchg
adc
jle
pop
sub
out
(bad)
push
mov
cs
and
push
adc
fwait
test
std
(bad)
xor
popa
jne
adc
pop
push
cmp
pop
(bad)
adc
or
cld
and
ja
jl
cmps
in
mov
fbstp
sub
ror
sub
pop
stos
push
sbb
(bad)
loopne
xchg
pop
arpl
sub
pop
push
movs
sub
mov
into
dec
rcr
repz
or
imul
xor
clc
dec
shr
ficom
jo
int
mov
movs
dec
add
pop
stos
fucomi
fs
xor
sub
jecxz
enter
and
cmp
sbb
in
pop
cmp
add
in
push
jge
data16
(bad)
lea
fldcw
pusha
dec
mov
in
pop
inc
pop
out
sub
and
push
lods
jle
popa
stos
pop
push
nop
call
gs
addr16
xbegin
push
jns
or
and
pushw
dec
xchg
xchg
xchg
xor
inc
xchg
and
jmp
test
xchg
call
out
sahf
pop
enter
lock
jmp
fnstcw
loopne
stos
jmp
push
mov
dec
mov
jl
cmp
mov
mov
in
inc
test
stos
mov
mov
jmp
std
dec
int3
adc
sub
out
jnp
dec
lods
mov
ins
mov
cmp
stos
and
jmp
stos
or
call
pop
jmp
xor
xchg
fild
das
xchg
fild
test
in
jle
sub
lea
mov
aas
popa
xchg
ins
push
sahf
push
movs
push
inc
inc
xchg
xchg
cmp
loop
and
int3
jnp
(bad)
sbb
aam
test
adc
add
jne
jmp
test
mov
cmps
call
out
ins
in
mov
mov
jmp
add
in
mov
push
aam
call
sub
adc
sbb
stc
push
jecxz
or
leave
cmp
sbb
jnp
test
mov
hlt
xchg
cwde
pusha
std
aaa
repz
ins
loope
jbe
dec
sbb
lock
sti
imul
(bad)
stos
ins
hlt
daa
mov
jo
mov
and
push
jae
fmul
pop
leave
inc
jbe
xchg
sbb
jecxz
xor
cmp
inc
sbb
or
inc
popf
dec
mov
sub
aaa
jae
pop
cmp
or
xchg
mov
cld
das
mov
das
fucomip
in
jmp
jl
push
and
mov
mov
pop
hlt
fnsave
jae
stc
jns
bound
dec
push
and
retf
push
add
cmp
push
shl
mov
cmc
push
hlt
ret
push
mov
repz
aas
jmp
dec
sub
test
(bad)
xor
xchg
or
dec
test
sti
test
pop
test
lds
fcom
sar
iret
inc
aam
movs
arpl
dec
add
and
imul
psllw
sbb
add
je
loop
fidivr
addr16
jbe
arpl
pop
sub
repnz
pop
in
sub
stos
add
inc
dec
repz
je
jle
rcl
and
mov
sbb
add
and
sbb
cmp
(bad)
xor
jbe
mov
jb
mov
mul
push
sub
pop
jmp
stos
es
sub
and
mov
jl
dec
mov
inc
icebp
std
shr
dec
(bad)
addr16
fstp
add
pop
jmp
mov
in
jo
mov
adc
sub
dec
jl
int
nop
and
popa
cli
icebp
sub
rcl
fdivr
sbb
(bad)
sub
fs
push
mov
sub
cmp
jns
(bad)
fwait
sbb
jmp
neg
xchg
lahf
cmp
rcr
iret
ds
dec
popa
mov
cmps
mov
xor
and
fwait
mov
xlat
test
cdq
mov
lock
pop
mov
sbb
adc
push
outs
fcomip
cwde
push
add
inc
adc
les
fistp
inc
pop
jg
mov
mul
push
fwait
repnz
repnz
add
or
jecxz
push
sub
cmp
in
movs
mov
push
jle
push
pop
mov
aaa
push
sahf
rcr
or
pop
push
aaa
sub
imul
dec
or
xor
or
(bad)
sub
mov
jecxz
mov
mov
mov
mov
pop
push
jno
mov
cmp
adc
sbb
and
call
push
xchg
jno
add
mov
push
loop
call
sub
fucomip
sbb
push
jp
rcl
clc
inc
xchg
pushf
ds
std
stos
mov
scas
inc
data16
clc
and
aam
stos
lods
jne
mov
(bad)
cmp
aam
pop
ds
mov
add
add
push
dec
jge
mov
movs
push
lea
xor
dec
inc
jns
push
dec
cmp
push
je
pop
repnz
in
mov
xchg
adc
das
pop
pushf
mov
retf
and
jmp
into
fadd
pop
ret
daa
jo
pop
in
loope
dec
adc
iret
hlt
cwde
sub
sti
fwait
xor
test
jl
in
sub
dec
jno
jns
mov
shl
das
jb
jbe
cmp
retf
sbb
mov
jbe
clc
jnp
jae
addr16
sbb
xlat
leave
add
mov
sbb
hlt
mov
nop
mov
scas
call
cmp
sub
mov
push
push
mov
pop
push
and
repz
enter
in
icebp
sbb
xchg
cli
xchg
xor
loopne
and
dec
xlat
std
and
ficom
jp
ror
mov
fs
inc
adc
adc
lods
loopne
cmp
(bad)
jl
add
lods
mov
ins
jns
xchg
pop
mov
mul
cmps
inc
mov
test
pushf
xor
int
sahf
sbb
sar
idiv
test
sbb
dec
inc
jmp
fiadd
gs
xor
ret
fadd
loop
jo
test
stos
or
cdq
lds
pop
xor
pop
mov
scas
jge
mov
adc
mov
add
lock
enter
test
data16
sahf
pop
(bad)
stos
jge
loope
sbb
push
jns
xchg
in
mov
sahf
ret
(bad)
fst
(bad)
jmp
xor
ret
xor
in
dec
pop
jg
clc
mov
ficomp
outs
mov
sub
or
push
cmp
sub
cmps
div
daa
xlat
xor
and
clc
loopne
(bad)
lds
neg
inc
out
jb
or
loop
es
cmps
inc
je
lahf
addr16
push
ret
out
ins
cmp
sub
outs
mov
and
out
out
adc
iret
das
mov
cmp
dec
lea
xchg
imul
(bad)
rcl
dec
lods
ficomp
pusha
loope
cmp
imul
ret
jmp
mov
icebp
mov
ins
mov
xchg
addr16
aas
cwde
pop
std
jg
pop
test
(bad)
jmp
sub
sbb
xchg
sar
and
cmp
inc
daa
jp
inc
mov
(bad)
mov
fcomp
dec
xor
push
cmp
pavgw
dec
dec
lock
lea
mov
js
pop
xchg
std
mul
jns
add
adc
das
out
adc
and
mov
pop
out
nop
out
(bad)
pop
stc
aad
test
mov
dec
pushf
jl
mov
and
std
inc
int3
dec
dec
(bad)
xchg
aam
into
lods
or
call
inc
shr
and
add
rcl
lds
pop
or
dec
lods
je
popf
inc
ins
icebp
outs
scas
jp
pop
adc
test
sbb
dec
pushf
jl
ret
xchg
sbb
rcr
scas
pop
scas
pop
test
js
stos
hlt
or
in
jg
jno
cmc
mov
xor
dec
ja
dec
jge
ret
pushf
mov
dec
xor
jecxz
jno
daa
dec
push
mov
xlat
mov
fisttp
fwait
(bad)
lds
push
adc
test
(bad)
js
sar
lods
mov
sub
mov
int3
sub
ds
adc
push
dec
adc
int
fistp
xor
push
adc
xor
lock
loope
xor
aas
shl
ins
stc
inc
cmp
loope
sub
or
xchg
(bad)
push
adc
les
xchg
add
mov
daa
mov
das
dec
lods
lods
push
jge
jno
cmp
sbb
in
and
pop
scas
mov
(bad)
mov
and
add
das
repz
imul
xlat
push
not
in
js
std
sar
mov
sub
push
pop
loop
call
(bad)
jno
in
and
and
mov
dec
jae
je
ins
ins
pushf
add
jecxz
aas
js
ret
sub
shl
inc
retf
loopne
mov
mov
or
test
ret
add
fisttp
inc
test
inc
add
xor
idiv
dec
add
ret
xchg
mov
adc
call
mov
scas
bound
sbb
pop
movs
dec
jnp
mov
mov
pop
cld
jne
mov
mov
arpl
jae
jmp
dec
retf
sbb
ins
mov
inc
mov
sub
inc
stos
xor
add
jl
ret
dec
mov
in
das
mov
icebp
popf
ins
gs
ss
pop
aad
xchg
(bad)
inc
add
test
lods
sahf
ins
call
jae
pusha
mov
push
loopne
icebp
xchg
jecxz
xor
out
pop
icebp
xor
js
push
sbb
in
rcr
add
sbb
xchg
xchg
cli
les
sub
(bad)
dec
pop
jle
sbb
jp
lock
out
dec
jg
loop
(bad)
push
cmp
rol
scas
or
pop
(bad)
mov
pop
or
pmullw
xchg
test
hlt
jl
mov
mov
and
outs
mov
mov
test
sub
cdq
fchs
out
xchg
jne
ret
das
inc
sbb
cs
repnz
push
pop
outs
repnz
jp
mov
loop
fnstenv
jnp
dec
pushf
sbb
mov
xor
(bad)
call
test
jecxz
js
std
add
inc
repz
pop
push
addr16
sub
stos
retf
adc
sub
fisub
inc
movs
wbinvd
hlt
pop
xchg
sbb
in
inc
mov
xchg
fs
gs
out
aaa
bound
jnp
aaa
retf
aas
fadd
repnz
sbb
cld
aaa
mov
pop
push
inc
inc
add
pop
mov
xlat
loope
dec
pop
test
nop
pop
pop
add
ret
pop
bound
jl
aas
stc
sub
cmps
mov
and
fld
int
pop
inc
mov
test
inc
(bad)
or
test
xchg
push
arpl
into
push
sbb
js
aas
or
inc
push
ins
jno
jg
gs
(bad)
ins
add
adc
mov
(bad)
call
mov
xchg
ret
cld
cwde
popa
mov
jle
push
xchg
loopne
lds
fmul
es
mov
scas
mov
and
and
aad
scas
out
jl
icebp
into
xor
fst
mov
or
(bad)
or
sub
or
vmovhps
ds
pop
dec
inc
mov
add
cld
(bad)
retf
cmp
bound
sub
(bad)
lock
cmp
jno
xchg
test
cdq
push
dec
ins
or
adc
pop
mov
mov
and
inc
movs
stc
test
lods
inc
jp
or
sbb
call
mov
pop
xchg
daa
movs
mov
stc
repnz
push
mov
mov
mov
xlat
or
mov
xchg
movs
sub
inc
loop
sub
cs
mov
or
mov
or
leave
or
push
fadd
mov
(bad)
xlat
popf
ficomp
into
sbb
iret
mov
jae
adc
das
out
mov
test
ffree
push
cmp
push
adc
cmps
fistp
xor
aaa
mov
sahf
xor
dec
leave
bound
cld
in
mov
ins
push
mov
retf
push
mov
push
shl
or
pop
xchg
ss
mov
dec
jbe
enter
sbb
jp
push
test
jns
sbb
fs
mov
imul
rol
iret
pop
stos
xchg
lahf
xor
mov
inc
inc
mov
hlt
xchg
ins
int3
mov
fist
add
es
jnp
stos
xchg
dec
call
or
or
sbb
loope
(bad)
cld
sbb
pop
xchg
push
mov
push
out
cmp
je
fimul
add
mov
xor
sti
jnp
not
xchg
daa
les
sub
test
cmps
sbb
retf
inc
push
aaa
clc
jle
pop
add
and
aad
mov
jg
repnz
movs
cmps
fsubrp
or
idiv
cmps
mov
loope
fsub
add
mov
add
cld
mov
fcomip
or
clc
push
sub
and
or
fild
push
mov
add
xchg
test
cld
jns
or
sar
loopne
dec
sub
add
or
ins
int
nop
add
dec
mov
dec
aaa
push
sahf
lock
or
and
ins
cli
mov
jae
int3
into
mov
inc
xchg
ds
(bad)
scas
aad
mov
addr16
pushf
ins
inc
dec
mov
xchg
cmp
push
pop
jecxz
mov
(bad)
inc
xchg
xor
mov
sti
int
mov
in
jb
mov
loop
out
sbb
mov
sub
xor
and
ror
movs
jne
sbb
fs
hlt
and
mov
lock
pop
inc
in
push
xlat
mov
jge
std
pop
sub
sbb
rol
out
fcom
cmp
loopne
icebp
fcomp
cdq
out
ins
test
sti
in
ror
pop
cmp
es
shr
jecxz
dec
ret
out
(bad)
jne
(bad)
add
lahf
mov
arpl
(bad)
sub
sub
jnp
cmps
push
call
pop
inc
test
test
mov
xlat
dec
pop
test
jmp
pop
adc
icebp
(bad)
jle
mov
lock
pusha
jmp
cmp
arpl
inc
fwait
adc
aas
fwait
pushf
test
inc
fwait
lods
inc
jne
adc
gs
daa
xor
sub
pop
add
pop
push
xchg
xor
xchg
mov
push
cmp
or
dec
or
xlat
xchg
mov
aaa
ds
inc
or
sbb
mov
jbe
xor
ss
repz
arpl
sub
jno
rol
cmc
jl
push
ss
jo
addr16
js
fwait
adc
popf
adc
add
mov
outs
out
in
jno
das
rcpps
sbb
test
xor
std
jmp
arpl
(bad)
das
inc
iret
xchg
or
aad
pop
sub
jne
fiadd
bound
mov
mov
adc
xlat
cs
lea
pusha
push
pop
dec
lock
and
in
les
fwait
dec
mov
mov
inc
rol
sbb
sbb
into
fbld
pop
je
scas
mov
mov
ss
cmp
pop
dec
imul
dec
mov
dec
(bad)
ror
cwde
dec
inc
jno
ins
adc
mov
sahf
inc
xchg
stc
jg
nop
xor
outs
jge
arpl
xor
jl
push
xor
jecxz
mov
(bad)
mov
int
movs
(bad)
sbb
loopne
push
in
(bad)
xchg
adc
cs
mov
cmp
jecxz
jno
mov
xor
or
aad
push
sbb
es
push
jnp
push
jo
fsubp
pop
pop
out
icebp
(bad)
sub
mov
push
adc
popa
nop
(bad)
sti
cmp
mov
mov
jge
dec
fcom
jb
aam
shl
sbb
push
cmp
mov
ins
pusha
add
retf
and
je
inc
ins
pop
rol
cmc
pusha
fcmovne
push
mov
adc
(bad)
sub
push
into
push
cld
retf
mov
inc
mov
xlat
sub
xchg
sub
add
jmp
adc
pop
retf
mov
(bad)
dec
imul
mov
jecxz
xchg
fcom
loope
in
cmp
repz
push
xchg
fsubrp
mov
xchg
mov
je
sub
rol
xor
inc
pop
and
(bad)
out
fs
mov
stos
mov
push
stos
lods
je
fwait
xor
push
add
inc
xor
fs
dec
retf
fstp
pop
out
or
adc
xor
das
sub
jg
aas
add
and
aaa
adc
mov
xor
ss
pop
iret
jnp
add
es
dec
(bad)
icebp
xchg
ds
inc
in
sti
push
sub
cld
add
sbb
xchg
(bad)
jae
jg
neg
fcom
mov
jmp
push
popa
add
and
repnz
inc
lods
inc
dec
mov
outs
cwde
and
dec
sbb
jbe
inc
sar
in
das
mov
ins
loope
(bad)
xchg
push
jp
or
sub
sbb
cwde
int3
jbe
dec
and
ja
ret
cli
sub
xchg
and
nop
add
clc
fmul
jns
sbb
mov
inc
push
(bad)
out
std
xchg
push
sub
and
push
bound
fdivp
lock
dec
add
outs
jbe
xchg
aad
push
sub
fidiv
xchg
cmp
push
mov
idiv
fdiv
cmp
jmp
pmullw
and
inc
gs
stos
adc
repz
test
out
loop
pop
repz
pop
fdivr
xchg
pop
xchg
dec
imul
pop
adc
adc
sub
cwde
or
out
retf
movs
mov
inc
mov
ror
dec
clc
fldenv
inc
mov
add
xchg
adc
cli
cmp
mov
add
push
ror
push
sub
popf
push
jo
scas
and
lods
xchg
fnstenv
jmp
and
dec
jmp
sbb
jge
add
pop
pslld
jp
iret
mov
jnp
and
lods
adc
stc
out
(bad)
hlt
and
xchg
mov
mov
loop
dec
mov
jb
shl
xor
pop
arpl
(bad)
call
push
out
pop
mov
mov
jmp
outs
cmp
or
test
mov
xchg
push
punpcklbw
in
xchg
fistp
adc
mov
je
cmps
dec
xlat
fcomp
dec
(bad)
pushf
mov
jge
jmp
call
push
or
mov
dec
push
adc
mov
out
fdivr
adc
sbb
push
in
stos
int3
sbb
cmp
mov
(bad)
retf
mov
xchg
aas
inc
movs
aam
rcr
sbb
daa
into
cmps
add
(bad)
(bad)
sub
test
pop
out
sbb
into
push
out
cld
data16
cmps
fmul
add
in
xor
add
mov
sub
mov
push
mov
sub
ret
mov
xchg
pop
in
mov
xchg
xor
(bad)
test
ret
jmp
bnd
cwde
fs
mov
jp
(bad)
gs
scas
fsub
(bad)
iret
inc
outs
mov
ret
imul
jge
push
or
out
push
xchg
out
outs
ret
addr16
jmp
sbb
push
dec
jo
(bad)
xacquire
fcomp
push
scas
sub
in
push
adc
cs
add
mov
xchg
and
jp
pop
mov
stos
cmc
in
add
mov
imul
(bad)
iret
cmp
sub
dec
iret
int3
retf
mov
fisubr
push
xchg
fistp
pop
pop
fyl2xp1
jb
pushf
test
and
das
mov
jb
jo
add
adc
lea
jnp
lods
jnp
in
in
je
push
xchg
(bad)
mov
sbb
mov
inc
shl
jecxz
movs
enter
mov
inc
out
inc
in
daa
dec
out
push
cmps
les
inc
arpl
movs
packuswb
iret
out
and
fwait
loope
fsub
sbb
and
ret
mov
bound
pop
cmp
fadd
lock
and
iret
sub
inc
rcr
inc
je
xchg
out
dec
ds
pop
pop
adc
shl
mov
sub
js
(bad)
cmps
dec
dec
les
movs
jo
or
jo
mov
mov
xor
iret
and
adc
mov
divps
pusha
mov
in
sbb
dec
les
or
cmp
loope
call
and
sub
xchg
out
call
push
sbb
sbb
sbb
and
retf
jne
(bad)
in
out
sbb
sub
cmp
dec
inc
xor
sub
pop
scas
fs
sbb
inc
test
pop
jbe
dec
retf
pop
sub
jbe
aaa
mov
push
push
adc
mov
fsub
std
lahf
xor
cli
das
pop
pop
mov
or
xor
lods
test
adc
js
push
pusha
xor
scas
xchg
xor
mov
popf
arpl
dec
ja
sub
hlt
add
sub
adc
xor
fbstp
or
in
(bad)
jmp
sbb
repnz
iret
(bad)
mov
jmp
mov
test
add
push
test
jo
and
es
adc
xchg
cwde
pop
push
int3
inc
lods
push
jno
cld
mov
movs
pop
not
int
gs
rol
mov
mov
into
out
mov
dec
adc
mov
dec
loop
push
data16
sub
or
gs
mov
inc
fstp
mov
(bad)
stos
mov
and
pop
imul
xchg
jmp
dec
(bad)
call
mov
pop
dec
sub
mov
ss
punpckhbw
or
pop
xchg
cld
pop
leave
movs
mov
dec
jmp
or
add
cmps
dec
aam
icebp
push
mov
sbb
fadd
mov
call
rcl
xor
pop
cmc
inc
icebp
lods
inc
call
test
fstp
or
test
dec
ficomp
mov
fldenv
sti
jae
repz
ret
iret
mov
mov
cmp
test
popf
push
stos
cwde
fsubr
stos
(bad)
jno
std
retf
in
fisubr
cmp
xor
dec
(bad)
mov
sbb
cs
test
retf
lahf
rcl
pop
push
push
addr16
stc
loope
or
sbb
xchg
fbld
(bad)
data16
mov
popa
cmc
fmul
pusha
xchg
div
mov
ins
cmp
inc
pusha
test
add
mov
pop
push
mov
repnz
xchg
inc
mov
fldenv
push
rcr
call
push
sbb
mov
leave
mov
or
or
outs
ret
iret
adc
clc
aam
mov
pop
shr
mov
nop
push
cmp
fs
cwde
out
pop
adc
ror
push
mov
dec
jp
retf
mov
test
arpl
cmp
push
jp
jno
cmps
pop
(bad)
mov
and
or
jne
pop
jnp
gs
imul
ficom
aam
stos
cmp
je
jle
sub
adc
add
xor
cld
adc
aas
sahf
mov
and
iret
dec
xlat
pop
xor
pop
pop
cmp
inc
fsub
sub
call
loope
jmp
arpl
and
push
leave
fisttp
or
arpl
in
out
xor
lahf
cmp
ret
xchg
clc
jecxz
call
mov
dec
dec
imul
mov
scas
cs
add
mov
adc
jb
test
add
dec
out
test
retf
scas
adc
and
fmul
ds
cmp
add
ficomp
aaa
loop
jb
cli
dec
out
cmp
dec
cmp
popf
push
xchg
cmps
pop
int
jae
or
xchg
dec
pop
pop
sbb
jb
movs
call
or
push
mov
call
jge
jge
fs
imul
sbb
fistp
fwait
xor
rcl
mov
xchg
ins
dec
iret
pop
scas
dec
inc
in
loope
retf
lock
push
pop
cmc
pop
xchg
mov
push
jmp
popa
sbb
(bad)
data16
jl
mov
mov
xchg
ret
add
inc
loopne
in
movs
cwde
clc
jle
mov
sbb
pushf
xchg
jb
call
add
pop
jg
push
xor
pop
pushf
repz
or
repz
xchg
out
icebp
rcl
int
push
xchg
int3
pop
mov
fwait
dec
inc
cmp
push
ror
and
js
mov
cmp
jbe
in
jg
sbb
in
jg
xor
xchg
(bad)
(bad)
frstor
push
xor
lds
cmc
in
icebp
jbe
shr
xlat
fsubr
stc
mov
data16
icebp
fld
mov
popf
adc
cs
repnz
data16
mov
mov
(bad)
in
sbb
cmp
pop
adc
adc
mov
pop
ja
ja
ja
mov
push
inc
imul
js
xchg
jmp
xor
xchg
daa
retf
outs
mov
sub
leave
out
fst
xor
adc
mov
retf
and
int
test
cmps
fmulp
or
xor
pop
mov
pop
mov
adc
arpl
xor
icebp
pop
test
(bad)
jb
push
inc
adc
int3
mov
test
std
sbb
ds
cmp
and
jp
xchg
scas
jp
jge
movs
pop
aad
cmc
pop
adc
push
into
jb
mov
xor
sbb
xor
ja
jg
and
rol
mov
and
push
and
in
ret
test
sub
xor
mul
xlat
scas
mov
(bad)
adc
add
pop
push
enter
hlt
ret
es
sub
hlt
in
stos
add
lea
adc
cmp
pop
shr
outs
dec
int
(bad)
jb
ror
and
inc
and
out
xchg
sbb
mov
adc
adc
test
cmp
and
clc
cs
mov
push
sub
and
xchg
add
jae
dec
adc
das
ds
pop
push
popf
push
shr
and
mov
fwait
push
inc
push
jnp
dec
sub
popf
push
pop
stos
(bad)
pop
jno
jnp
js
adc
adc
adc
adc
adc
push
lock
fcmovnu
(bad)
cs
int3
pop
sub
mov
rol
jmp
jp
icebp
mov
fld
outs
mov
cmps
(bad)
dec
aas
mov
mov
and
es
std
lods
fwait
mov
mov
sub
sub
cmp
stos
rcl
mov
sub
sub
out
xor
pushf
hlt
jl
shr
pop
int
pop
rcl
mov
ss
ja
mov
mov
jp
jp
or
mov
xchg
mov
or
ins
or
ins
inc
jmp
jbe
(bad)
mov
mov
xor
xchg
mov
aad
es
jle
scas
xor
add
cdq
mov
and
scas
pushf
xor
mov
xor
mul
je
test
xchg
fwait
push
sbb
mov
stc
or
push
stc
cli
(bad)
out
outs
imul
push
out
js
enter
mov
or
push
mov
jmp
ss
jae
lahf
xor
cmps
inc
push
inc
cmps
cmp
pop
imul
mov
lock
lds
cli
adc
push
or
or
sub
shr
xor
cmc
ret
sti
jmp
push
mov
xchg
nop
scas
add
mov
int3
ret
imul
(bad)
in
mov
or
sti
xchg
(bad)
sti
mov
mov
call
sub
push
mov
test
les
cmp
fldcw
std
pop
into
xchg
add
xchg
data16
call
jo
arpl
xor
iret
cmps
cmp
cmp
jmp
or
mov
xor
mov
in
out
ret
test
inc
push
sub
jle
iret
call
mov
aaa
and
xor
cmp
repnz
ret
xor
aad
mov
(bad)
cmp
push
xchg
mov
or
rdpmc
sub
mov
bound
shl
int3
or
and
cmp
mov
inc
inc
je
(bad)
jle
mov
movs
in
dec
aas
sub
mov
outs
mov
retf
mov
push
call
fnsave
stos
outs
outs
rcr
(bad)
repz
movs
loopne
jge
jle
add
icebp
popf
xchg
cmp
inc
sub
fisttp
pop
cmp
aas
mov
add
inc
rcl
jmp
pop
pop
test
stos
mov
mov
fdiv
les
bound
adc
inc
xchg
pop
dec
(bad)
jl
mov
dec
and
sbb
aas
out
cmps
fst
movs
aad
xor
test
stos
pop
cmps
test
jge
daa
leave
inc
sbb
cmp
rcr
pop
xchg
cmps
out
sahf
xor
cs
mov
mov
lds
xor
cmp
sahf
ja
data16
pop
int
and
sub
popf
pop
out
fld1
jmp
adc
mov
adc
shl
shl
cmp
add
sbb
mov
ss
mov
mov
or
push
(bad)
mov
cmp
(bad)
scas
add
mov
dec
addr16
out
inc
test
cdq
scas
(bad)
and
ret
lds
or
ins
dec
push
push
push
cmps
adc
aas
or
popa
rcr
imul
in
outs
jecxz
xchg
pop
xchg
xor
in
mov
iret
pop
mov
jmp
ret
cwde
jmp
ror
pop
je
add
cmp
shl
push
outs
xor
push
sub
fstp
cmc
div
xor
xchg
int
bound
inc
out
test
and
pop
cwde
fiadd
xor
mov
ret
cmc
pop
test
xchg
(bad)
iret
repz
and
(bad)
mov
das
(bad)
dec
push
fcomp
jmp
or
clc
fadd
or
mov
xor
in
mov
nop
and
imul
std
sbb
xchg
je
sub
fnstenv
cmp
push
stos
aad
mov
and
adc
sub
hlt
ss
lods
sbb
push
in
lock
rcr
bound
inc
mov
push
dec
cmps
hlt
in
push
(bad)
mov
inc
mov
ret
jmp
add
daa
enter
mov
push
std
mov
movs
addr16
out
stc
push
jg
ret
mov
ins
hlt
sub
or
rol
xchg
scas
xor
fist
pop
inc
cmp
in
push
mov
adc
int3
pop
repnz
js
adc
push
xchg
and
fcom
add
scas
cwde
dec
sbb
sub
xchg
lods
cwde
pop
test
jae
sahf
enter
jmp
adc
push
stos
xor
jmp
nop
call
fisttp
arpl
pop
cmp
cmps
int3
cmp
bound
jb
xchg
pusha
loopne
movs
(bad)
jl
cmp
dec
pop
into
aaa
dec
add
mov
push
cmp
mov
cli
jo
cmp
sub
addr16
inc
inc
pop
jb
push
pusha
jnp
sub
(bad)
daa
je
lods
enter
repnz
inc
pop
iret
pusha
(bad)
(bad)
and
addr16
and
jns
je
in
gs
push
sub
scas
smsw
xchg
and
push
lods
lods
cs
add
out
or
sbb
dec
test
cdq
or
popf
inc
mov
mov
cmp
out
push
xchg
stc
jbe
popf
cmp
loop
(bad)
xor
sbb
sub
punpckldq
adc
cmp
scas
push
or
int
rep
pop
adc
inc
mov
jns
inc
jecxz
or
stos
fld
adc
adc
mov
imul
aas
xchg
fadd
jns
mov
dec
sbb
jae
xor
pop
(bad)
push
cdq
iret
nop
and
xor
and
and
cld
cmp
inc
cmp
lds
or
or
mov
inc
loop
out
ret
mov
inc
movs
mov
pop
loopne
retf
jns
cs
cli
and
sbb
pop
pop
fistp
add
adc
xchg
sbb
jmp
in
push
jmp
mov
xor
mul
inc
js
pop
lock
cmp
mov
pop
mov
lahf
xchg
mov
out
mov
test
mov
add
add
std
dec
xor
mov
ret
inc
cmc
dec
stos
sar
push
cwde
push
mov
pop
jb
add
add
sar
cmp
fld
rcr
in
fcom
pop
cwde
ins
stos
mov
pop
test
mov
aas
adc
sbb
xchg
in
xchg
jge
inc
pop
stos
loopne
(bad)
test
out
mov
imul
shl
cmp
sbb
jb
mov
push
cdq
test
inc
int3
out
dec
aam
ins
xchg
cs
mov
jno
stos
loop
mov
push
adc
xor
test
mov
scas
mov
mov
add
js
sub
mov
cdq
and
bound
ds
out
inc
xor
test
xchg
shl
mov
pop
cmc
movs
popa
mov
or
jecxz
push
(bad)
dec
sbb
dec
ficomp
jns
mov
loope
mov
jae
mov
out
fsubr
mov
jno
std
fbld
das
sub
fsub
cmp
in
jecxz
ins
fstp
push
xchg
mov
retf
mov
and
fisubr
mov
xor
out
fldcw
shr
scas
jecxz
pop
pop
jb
cmp
add
sar
mov
int
dec
int
in
sbb
addr16
push
jl
pop
fcmovb
and
and
push
xor
je
aad
xchg
rcr
mov
inc
jbe
push
jae
ja
xchg
frstor
fwait
cmp
fimul
pop
dec
mov
(bad)
scas
xchg
mov
mov
mov
(bad)
add
mov
test
imul
pop
add
cmps
inc
fcmovbe
fdivr
dec
add
jp
mov
sahf
or
fidivr
push
(bad)
std
mov
test
jg
mul
mov
shl
fist
or
aad
inc
fs
iret
adc
ins
(bad)
(bad)
mov
aam
gs
fidiv
fldcw
pop
outs
in
jne
cmp
sub
cmc
std
mov
jne
xchg
sbb
test
add
jmp
add
lods
repnz
call
jp
jecxz
jb
bound
inc
scas
cwde
xor
dec
xchg
lock
and
push
test
jne
mov
call
jmp
push
and
push
stc
pop
stos
jo
sahf
xor
add
push
idiv
fild
(bad)
sti
repz
dec
mov
pop
sbb
enter
push
div
fwait
pusha
fstp
cwde
les
dec
and
mov
sub
mov
mov
ds
adc
mov
js
ins
and
test
adc
je
mov
aad
packuswb
retf
or
or
bound
xchg
out
mov
inc
popa
or
add
inc
(bad)
push
mov
adc
xchg
push
push
adc
mov
call
aaa
nop
xchg
jo
sub
test
pop
sub
adc
lea
pusha
ins
pop
pop
cmp
jmp
or
les
movs
(bad)
sti
lods
dec
sbb
mov
cmp
mov
push
daa
inc
lock
pushf
loope
push
cs
dec
mov
fnstsw
pushf
xor
mov
(bad)
lds
xchg
fdivr
pop
pushf
mov
inc
sub
outs
dec
mov
dec
adc
lock
xchg
int
jle
int3
aad
pusha
mov
inc
xlat
test
(bad)
aam
pop
(bad)
and
sub
(bad)
adc
jmp
addr16
leave
lea
xor
and
fwait
rcl
popa
cmp
std
mov
cmps
mov
rcr
nop
jo
js
sbb
sar
mov
idiv
adc
adc
call
mov
xchg
or
pusha
ins
mov
call
std
push
fnsave
sub
sub
push
pop
out
inc
pop
ins
push
js
adc
lahf
mov
idiv
xchg
and
popa
or
ror
fisttp
mov
add
aaa
mov
dec
sbb
jmp
inc
inc
mov
aam
mov
icebp
cmp
call
jno
test
out
retf
xchg
mov
xor
xchg
movs
(bad)
jo
xchg
loop
js
rcr
call
dec
xchg
xor
and
sbb
sbb
iret
pop
dec
inc
xchg
ins
rol
fld
lahf
(bad)
fst
mov
cld
dec
sbb
cli
sahf
lahf
and
cmp
or
mov
push
hlt
enter
or
rcl
movs
xchg
xor
mov
and
fsubr
or
mov
mov
add
xchg
xor
lods
rcl
les
push
mov
outs
or
test
lock
js
jmp
jae
sbb
jnp
cmp
xchg
clc
ret
adc
dec
sub
inc
mov
retf
adc
adc
sbb
mov
push
rcl
in
dec
mov
push
jg
ss
and
push
xlat
ss
int
jg
cmp
or
mov
rol
out
xchg
xor
pop
addr16
pusha
int3
cmp
mov
out
xor
mov
call
(bad)
lock
sbb
fwait
int3
stc
scas
aas
push
frstor
ins
loop
mov
dec
mov
mov
es
(bad)
adc
xchg
sbb
push
pop
and
popf
outs
mov
fadd
sub
pop
(bad)
cmps
test
adc
frstpm(287
in
push
cmp
dec
cmp
sbb
addr16
pop
inc
sub
cmp
cli
add
xchg
clc
xchg
mov
inc
out
mov
pop
aas
dec
adc
retf
mul
mov
mov
pop
mov
cmc
lock
loope
add
mov
sbb
rol
les
fidivr
xchg
pop
add
stos
cmps
mov
and
inc
xchg
(bad)
jnp
mul
add
into
pop
sub
cmp
push
xchg
mov
js
ret
aad
cld
pop
push
pop
adc
popa
pop
int
xchg
fldcw
add
jg
mov
jle
push
jmp
or
std
movs
fcomp
inc
jmp
inc
cmc
inc
repz
push
xchg
in
mov
pop
mov
pop
sti
jmp
lock
push
xchg
stos
mov
cmps
xchg
mov
call
fstp
xchg
(bad)
fcom
gs
pushf
(bad)
cmp
xor
jg
mov
fld
pop
push
and
ds
add
jnp
ins
popf
fild
aam
(bad)
xchg
xchg
das
cmp
leave
(bad)
hlt
push
loope
out
mov
fs
mov
sar
loop
mov
pop
inc
ins
gs
and
fs
cld
scas
mov
outs
inc
push
je
ja
nop
cmp
ret
jmp
sti
in
cmp
xchg
xchg
aas
js
ret
jmp
inc
imul
or
xor
outs
xor
(bad)
adc
(bad)
in
sti
or
pushf
aaa
ja
std
jecxz
ss
ja
or
shr
jg
or
fisttp
imul
stos
pushf
mov
fimul
push
outs
mov
into
or
lods
lock
std
xchg
xchg
cli
pop
sub
mov
inc
jmp
lock
lods
mov
or
sub
dec
cmp
and
fld
dec
mov
ss
adc
add
xor
rcl
(bad)
jmp
(bad)
loop
push
or
test
les
ficomp
les
add
mov
pop
stos
mov
or
dec
mov
cmp
nop
cwde
retf
lods
add
jge
jmp
out
jnp
std
push
call
out
addr16
inc
sysret
and
cmp
sbb
shl
lock
add
les
inc
fcom
push
pop
inc
push
hlt
pop
js
shr
scas
fwait
sbb
mov
int
daa
popa
mov
inc
pop
in
cdq
xor
xor
dec
mov
mov
cmp
pop
sub
mov
cmps
cmp
push
popf
sbb
fadd
cs
(bad)
into
call
pop
mov
nop
jo
mov
sub
cdq
sti
or
sahf
xor
test
es
ret
adc
in
pop
add
aas
push
adc
dec
(bad)
cs
loope
ret
cwde
mov
or
jb
or
cwde
lds
jno
xor
xlat
imul
push
sbb
hlt
push
pop
in
es
repnz
jecxz
scas
dec
mov
cmp
pop
lahf
or
out
int3
stos
fcomip
ds
out
jo
jl
and
aas
inc
jle
imul
adc
inc
pop
in
and
outs
fndisi(8087
pop
fs
sbb
jne
rep
lods
pop
dec
or
cs
test
adc
push
mov
mov
dec
push
push
call
mov
add
mov
js
mov
call
ficomp
loopne
int3
cmp
sahf
lods
cmps
or
add
icebp
jno
dec
fmul
pop
jge
mov
in
jp
push
pop
mov
xchg
fptan
adc
call
hlt
pop
aam
sbb
dec
push
jno
lahf
cmp
mov
mov
test
out
xor
jmp
sbb
dec
inc
sub
cmp
mov
jmp
xchg
mov
int
lock
fistp
mov
sub
pop
cmp
shl
xchg
push
or
fwait
mov
lods
(bad)
jle
outs
jl
cmp
test
pop
pop
or
ds
inc
sti
add
or
fld
call
imul
icebp
fld
fisub
add
pop
inc
jl
xor
adc
and
push
push
push
popf
fisttp
xor
std
daa
xacquire
pop
ins
xchg
jecxz
inc
(bad)
cmc
les
xor
(bad)
push
or
pop
out
jmp
ja
or
pop
je
cmps
mov
mov
gs
aas
and
and
sub
pop
xchg
jmp
push
mov
ss
push
clc
scas
inc
outs
les
dec
fisubr
add
movs
ss
jo
add
add
adc
mov
loopne
sub
cmc
(bad)
test
scas
lea
adc
in
mov
mov
je
cmc
mov
dec
leave
push
adc
lock
sub
sbb
jbe
fwait
fs
fcmovne
sbb
pop
inc
repz
or
shl
arpl
add
retf
push
(bad)
out
sub
out
sub
ins
(bad)
mov
sbb
hlt
cmc
xor
pop
pusha
pop
imul
jo
int3
hlt
(bad)
imul
mov
or
sbb
neg
pop
test
leave
in
xor
mov
pop
push
sbb
dec
cmc
enter
push
mov
neg
mov
xchg
push
fwait
mov
imul
aad
lock
mov
(bad)
out
movs
xor
pop
push
xchg
mov
inc
cmp
and
xchg
retf
mov
inc
mov
push
test
mov
div
pop
inc
mov
ror
mov
cmp
retf
nop
cwde
cwde
popf
mov
fisttp
mov
movs
pop
add
jge
nop
retf
adc
out
data16
inc
push
mov
inc
inc
mov
add
sub
test
int
or
pop
cmps
data16
stc
arpl
repnz
or
jmp
dec
pop
repz
cmps
mov
in
mov
iret
dec
int3
ss
push
loopne
jno
aad
std
xchg
adc
lods
das
in
mov
mov
sub
in
xchg
loopne
adc
in
ror
xor
jle
retf
rol
mov
sahf
cld
mov
mov
push
mov
int3
mov
std
aad
gs
jb
fs
imul
js
sbb
mov
je
inc
mov
xor
or
jae
inc
sub
mov
(bad)
sub
iret
pop
in
mov
mov
add
pop
mov
ror
pop
cld
mov
in
mov
add
and
push
xchg
mov
ss
test
fs
xchg
in
fsub
mov
fwait
jne
dec
sti
sub
stos
lock
test
xchg
icebp
jbe
aas
dec
and
sahf
pop
ret
mov
(bad)
movs
repnz
sbb
push
ins
sti
cdq
and
xor
xor
mov
adc
jl
dec
(bad)
je
das
jns
push
loope
lods
setne
pushf
nop
inc
cmp
pusha
jle
mov
movs
mov
ja
jno
jl
sub
retf
repz
sbb
stos
xlat
sub
pop
fisubr
ja
pop
add
test
cwde
jmp
sbb
lods
sub
ja
retf
out
adc
out
xchg
data16
lods
adc
stc
push
les
fstp
push
lock
jmp
push
jl
retf
push
pop
stos
outs
pop
pop
inc
fsub
ret
int3
ins
or
xchg
stc
(bad)
(bad)
(bad)
sub
shl
retf
(bad)
sub
cmp
push
add
aam
push
imul
ds
out
movs
or
fldcw
out
ins
ss
push
iret
lods
mov
or
ret
mov
mov
pop
add
sub
dec
stos
clc
sbb
ret
or
jb
or
inc
mov
mov
xor
jmp
arpl
mov
mov
ds
mov
fwait
lods
xchg
push
sbb
push
or
pop
push
pop
push
lea
aad
sub
pop
jnp
push
ss
adc
jmp
lods
push
bound
outs
pop
clc
add
sbb
cli
jns
mov
mov
popf
fisttp
cli
sbb
test
sahf
rcl
xor
jae
sahf
pop
out
jecxz
stc
fs
ror
cmc
in
bnd
inc
movs
test
mov
ds
pop
pop
jp
adc
or
inc
ror
(bad)
xor
xchg
cmp
jnp
and
jb
jo
std
dec
sbb
sahf
lds
(bad)
sub
repz
mov
xor
scas
ss
adc
mov
dec
dec
add
pop
outs
outs
mov
sbb
inc
xchg
ss
loop
push
pop
fnstsw
scas
(bad)
imul
jg
gs
pop
in
leave
data16
jbe
movs
push
cmp
pop
test
call
cmp
scas
imul
setg
aaa
xchg
test
rcpps
jmp
pop
test
mov
daa
popf
or
leave
outs
xor
retf
add
cli
pop
dec
daa
dec
in
leave
(bad)
jl
out
xchg
dec
in
nop
or
(bad)
fmul
ja
ret
gs
mov
mov
and
out
out
pop
cmp
mov
sbb
lea
lahf
push
scas
push
jb
hlt
xchg
pop
aam
mov
mov
out
fld
jl
xor
mov
popa
sub
cmps
ja
ins
int
popa
mov
ins
lods
add
jmp
mov
or
out
pop
or
pop
adc
push
sbb
inc
out
jbe
dec
or
js
mov
adc
stos
push
pop
adc
push
js
js
daa
ret
pop
push
call
inc
mov
(bad)
call
add
cmp
push
aaa
adc
push
mov
pop
mov
aad
sti
sbb
sub
out
dec
add
mov
jmp
(bad)
outs
xor
(bad)
aam
fistp
ss
jecxz
mov
and
in
mov
xor
jmp
fwait
mov
add
xchg
fiadd
mov
bound
scas
pop
mov
sar
dec
sub
int3
xor
lods
mov
xchg
stos
sub
or
cmp
aad
not
ja
int
sbb
daa
loop
pop
leave
int3
sbb
pop
mov
jnp
test
pop
ins
cmp
int3
retf
jae
retf
mov
sbb
push
aam
shl
fnstenv
(bad)
clc
mov
or
int3
(bad)
jnp
jmp
jg
(bad)
push
div
push
ret
push
inc
jmp
loope
mov
iret
push
or
cmc
xchg
mov
push
lea
sub
push
or
jl
mov
jae
and
(bad)
mov
push
sbb
pop
das
pushf
mov
jns
cdq
adc
mov
add
xor
xor
sar
sub
mov
in
stos
mov
vmovmskpd
loope
ret
and
nop
in
pop
jb
outs
in
mov
hlt
mov
aas
in
call
xor
or
imul
xor
push
lea
add
mov
xchg
lock
dec
idiv
or
sbb
jno
fucomp
(bad)
mov
xchg
xchg
(bad)
mov
xor
pop
bnd
pusha
mov
inc
xlat
(bad)
cld
and
in
ret
fnstcw
cmp
and
pop
push
stc
xchg
call
adc
cmp
jmp
inc
mov
shr
push
out
mov
stc
shr
mov
cmp
push
xlat
mov
repz
jne
int3
xor
sbb
stos
sti
inc
(bad)
jae
and
jmp
jno
jns
adc
xchg
pop
call
jb
mov
daa
scas
cmp
cmp
jmp
mov
mov
stos
call
adc
iret
dec
adc
retf
fwait
dec
mov
in
fwait
mov
lods
dec
je
xor
adc
xchg
add
mov
add
pop
sub
sub
repnz
mov
sub
repz
enter
jle
push
ret
xchg
inc
std
inc
or
aas
adc
or
popf
pop
mov
jo
add
push
mov
jae
loope
or
aaa
(bad)
icebp
fcom
push
aas
shl
into
hlt
jg
je
mov
rcr
and
fld
pushf
rcr
xor
cmps
sub
dec
loopne
aaa
cmps
cld
call
inc
aaa
lods
aas
cmp
loope
out
pop
fwait
add
and
pushf
mov
pop
mov
sub
in
inc
std
outs
dec
push
xchg
sti
lds
daa
js
push
lods
daa
lds
push
push
stos
cs
mov
retf
inc
dec
mov
jno
sub
fwait
ror
in
out
and
(bad)
(bad)
das
sub
ds
inc
aad
cmp
mov
out
push
inc
fcmovnb
push
xchg
mov
cmp
push
push
sub
aas
test
jo
add
rcl
jnp
int
out
push
mov
sbb
and
lds
mov
jno
mov
add
aam
mov
push
push
ret
jbe
push
outs
mov
enter
clc
repz
call
movs
dec
fadd
cmp
sub
mov
xor
leave
push
sti
and
(bad)
cs
cld
pusha
(bad)
mov
cdq
dec
pop
dec
iret
out
or
ins
fsub
iret
pusha
je
push
fdiv
and
lahf
std
pop
test
mov
jno
cmp
aas
and
test
fnstcw
lock
add
in
dec
mov
stos
mov
xchg
fild
test
xor
inc
dec
sub
mov
pop
ret
aad
pop
ins
lahf
mov
mov
or
idiv
fnstenv
and
jmp
fcmovb
scas
add
aad
add
dec
add
int3
in
pop
fist
or
xor
mov
ins
std
ja
push
add
(bad)
int3
cmc
mov
dec
or
xchg
(bad)
hlt
aam
arpl
lds
mov
and
scas
movs
or
minps
dec
int
xor
lahf
das
or
leave
aam
dec
shl
nop
mov
ret
fnstenv
out
jnp
mov
daa
xor
fld
jbe
inc
push
pop
cdq
ds
das
aas
retf
movs
scas
mov
adc
jmp
in
fadd
cmp
pop
fist
sbb
inc
adc
inc
cmps
(bad)
and
aaa
fild
xchg
push
sbb
test
in
in
std
retf
inc
xchg
popf
mov
bound
jmp
cmps
pop
pop
pusha
and
jbe
rcr
push
iret
mov
cmp
mov
jne
pusha
cmp
call
arpl
cs
push
ja
inc
dec
inc
mov
(bad)
fist
gs
imul
fs
or
pop
pusha
in
add
data16
pop
nop
adc
mov
mov
add
mov
push
cdq
mov
xchg
int3
test
fcomp
add
adc
call
cmp
out
cld
sbb
int3
mov
retf
pop
add
or
out
and
cmp
(bad)
cmc
mov
test
cmp
cmc
xchg
sbb
and
dec
ins
pusha
dec
inc
push
jmp
add
sub
push
jb
inc
xchg
clc
mov
pop
or
jl
daa
dec
in
out
or
outs
in
aam
call
add
dec
pop
and
fst
and
push
fimul
xor
jle
jmp
cmp
and
xchg
mov
push
or
push
inc
add
sub
retf
test
fidiv
jne
pushf
xchg
or
xlat
outs
dec
mov
pop
and
jg
and
inc
lea
enter
gs
ins
aas
ja
leave
or
int
xor
mov
jb
sub
sbb
push
mov
les
retf
fisubr
sub
mov
dec
and
int
sbb
inc
dec
push
sub
icebp
js
aaa
mov
mov
es
mov
cmps
cmc
cmp
sbb
lods
fcomp
xor
or
js
sbb
jmp
pop
mov
sub
adc
stc
add
inc
xchg
push
(bad)
in
cli
and
mov
ror
hlt
xor
int
jg
jl
add
jge
ins
mov
push
sub
xor
retf
dec
xchg
fwait
jae
sbb
repnz
and
out
ss
add
dec
sub
and
xchg
jno
adc
(bad)
(bad)
xchg
jnp
pop
call
out
cmp
add
and
scas
in
sub
movs
es
inc
fstp
hlt
dec
loopne
aam
js
mov
inc
sub
sub
mov
addr16
or
xor
cmps
inc
lahf
stos
or
inc
lea
sbb
std
into
in
and
scas
test
jno
adc
jbe
sub
scas
or
leave
push
jge
xor
push
jl
shl
scas
call
inc
iret
test
ds
movs
iret
leave
loopne
mov
mov
jne
xchg
pop
test
adc
jmp
aas
rol
mov
mov
mov
jns
or
fmul
jb
and
loope
dec
mov
int
sub
cld
xor
ror
scas
mov
dec
sbb
pop
cmp
gs
dec
adc
dec
push
mov
sahf
push
call
cmp
in
cld
inc
imul
push
stos
jg
cli
(bad)
cld
cvtpi2ps
mov
mov
push
loopne
dec
jmp
push
cmp
sbb
call
ror
push
sbb
cwde
ins
rcl
imul
push
ror
and
adc
je
pop
push
dec
jecxz
xor
add
rcl
xor
mov
popf
out
mov
fcomp
jns
push
ret
push
lea
xchg
(bad)
fcom
mov
fisttp
jns
mov
inc
push
mov
popa
(bad)
xor
js
ror
lods
cmps
xchg
cld
or
cmc
movs
cmc
stos
jne
inc
call
jb
jbe
or
out
sbb
lahf
pop
mov
adc
outs
push
daa
in
call
(bad)
lahf
push
push
push
mov
mov
or
push
out
(bad)
test
lock
pop
cmp
xor
out
pop
mov
sbb
in
and
push
stos
adc
pop
xor
xchg
es
and
pop
jb
sbb
movs
jmp
mov
fwait
repz
fcos
loop
pop
mov
jecxz
retf
adc
sub
mov
mov
pop
fdivrp
repnz
adc
pop
jl
rol
in
or
ins
inc
test
jg
stos
push
sahf
jmp
and
sbb
int3
std
(bad)
enter
mov
addr16
xor
inc
loope
fdivr
clc
test
cmp
test
pusha
push
mov
iret
mov
cmp
std
cmc
pusha
aas
jnp
aam
jg
fbld
scas
pop
mov
jecxz
jecxz
mov
push
adc
pop
sbb
xor
pop
jbe
push
cli
adc
xchg
cs
inc
retf
fwait
cmp
sub
mov
repnz
mov
jnp
in
and
mov
mov
xchg
mov
add
push
add
test
ins
(bad)
out
rol
cmps
inc
jmp
inc
repnz
or
dec
(bad)
mov
rol
xor
cmps
cld
cli
push
adc
mov
(bad)
ror
(bad)
(bad)
test
call
dec
push
test
or
(bad)
mov
inc
shl
mov
xor
sahf
jge
retf
add
inc
je
dec
(bad)
fisub
clc
enter
pop
stos
mov
jmp
inc
mov
hlt
aam
loope
daa
cmp
cmp
jg
jmp
dec
(bad)
xor
mov
sbb
scas
or
jge
sahf
mov
fadd
jne
cli
mov
adc
enter
jbe
rcr
imul
mov
(bad)
ins
loopne
mov
adc
hlt
xor
dec
test
dec
add
aam
sub
(bad)
mov
xor
jge
cdq
fistp
mov
xchg
popa
lock
ret
dec
cmp
(bad)
push
jb
shl
xor
fwait
pushf
jg
outs
mov
and
sar
and
je
sub
inc
or
int3
stos
add
pop
arpl
mov
sub
cmps
sub
ret
rcr
lahf
in
jns
in
push
cmps
test
cmp
movs
repnz
test
mov
jne
ss
and
fsubr
cli
stos
and
loop
(bad)
cli
or
xor
mov
mov
xchg
jge
mov
jl
or
push
mov
xchg
add
sbb
fisttp
(bad)
std
dec
push
out
xor
sahf
cmp
inc
mov
(bad)
(bad)
retf
lahf
push
jecxz
inc
adc
push
rcl
xchg
pop
jbe
inc
stos
out
fld
add
mov
push
movs
xor
(bad)
scas
movs
neg
mov
ins
lahf
pop
dec
stos
jmp
cmp
push
dec
ficomp
scas
or
pop
std
inc
test
mov
cdq
mov
mov
sbb
in
jb
cld
or
pop
aam
sbb
inc
(bad)
mov
jmp
test
dec
outs
arpl
dec
push
jbe
es
dec
scas
mov
xchg
bound
inc
std
daa
pop
js
fs
xor
pop
or
ss
xor
adc
gs
or
jle
adc
push
mov
int
mov
mov
or
cmp
nop
xor
enter
dec
push
ror
ret
popf
and
or
xchg
in
popa
nop
xchg
mov
sbb
and
xor
mov
scas
lods
in
push
arpl
(bad)
mov
add
stc
pop
not
ret
hlt
aad
arpl
retf
lods
xchg
rol
xchg
adc
fidivr
mov
pop
mov
xchg
scas
repnz
js
mul
xor
ja
fbstp
scas
pop
js
pop
(bad)
test
pushf
add
in
outs
cwde
outs
mov
sbb
ret
or
retf
or
mov
outs
mov
push
pop
adc
mov
(bad)
mov
push
clc
push
popa
loope
ins
in
arpl
add
or
icebp
xor
enter
loopne
test
lods
cld
ret
xor
call
pop
add
mov
sbb
in
inc
pop
(bad)
mov
std
popa
stos
jg
fst
dec
dec
into
cmp
inc
inc
pop
push
jo
mov
xor
or
(bad)
cs
cli
push
adc
sub
fldcw
adc
ins
cmp
jp
and
aad
dec
ss
jno
in
pop
push
sbb
mov
xchg
xchg
mov
jo
inc
ror
lds
sbb
outs
mov
add
(bad)
(bad)
jno
scas
in
aas
push
daa
sub
mov
adc
jb
sbb
jge
icebp
into
add
sub
nop
mov
or
and
inc
in
mov
loope
movs
jne
add
sub
inc
sbb
cli
mov
fdivr
xchg
into
and
gs
push
cmp
imul
fisub
inc
stos
xor
xchg
sbb
pop
aam
sub
mov
jb
mov
ja
popf
sub
pop
das
jecxz
sbb
mov
add
fiadd
adc
popa
and
rcl
push
cld
cmps
cmp
test
lods
push
sbb
clc
jecxz
and
retf
mov
data16
popa
xchg
or
inc
push
mov
add
mov
xor
mov
ret
mov
inc
std
cs
dec
out
imul
ror
jecxz
inc
mov
jno
or
out
fmul
out
imul
lods
xchg
aaa
and
pop
push
into
inc
mov
aaa
test
(bad)
outs
mov
shr
call
jb
in
(bad)
or
jge
mov
jl
shl
push
std
jmp
mov
mov
jno
xor
pop
inc
add
aas
(bad)
icebp
mov
cmp
cmp
push
loope
pop
sbb
nop
mov
inc
sub
out
(bad)
sti
shl
stos
(bad)
jp
jnp
sbb
mov
(bad)
mov
sbb
clc
inc
cmps
cmp
idiv
in
inc
int3
cmp
sub
int3
push
cmp
or
gs
iret
stc
aam
ins
dec
pop
(bad)
int3
cmp
adc
push
loope
loope
aad
std
jae
sahf
retf
psubsb
in
rcr
leave
xlat
ins
jns
(bad)
in
repz
mov
stos
xchg
popa
cmp
sub
ins
xchg
xor
rcr
(bad)
mov
or
cmp
and
push
loopne
in
mov
hlt
add
or
(bad)
(bad)
mov
or
ror
(bad)
fcomp
dec
les
mov
and
or
xchg
push
adc
push
nop
push
and
out
js
mov
pusha
push
push
pusha
mov
mov
je
cmp
cmp
inc
(bad)
inc
jbe
into
xor
adc
push
arpl
shr
sub
(bad)
cs
out
int
daa
int
push
fs
jae
rcr
mov
fmul
(bad)
dec
mov
fld
sub
mov
inc
out
mov
xchg
and
pop
mov
movs
add
cmp
ds
fbstp
add
aaa
cmp
bound
pop
cli
sbb
ins
out
xchg
mov
mov
dec
jmp
mov
xchg
(bad)
(bad)
es
jne
mov
jmp
mov
pushf
xchg
mov
jno
mov
or
mov
xor
pop
das
idiv
shl
push
cmp
sub
and
repz
inc
imul
adc
ins
and
sti
test
add
mov
push
sub
xor
inc
xor
gs
or
fst
push
mov
ins
inc
rol
jmp
cmc
arpl
push
(bad)
retf
sahf
cmp
adc
push
mov
lds
(bad)
bound
mov
sub
push
je
loop
cmc
push
cmp
push
sub
retf
ss
inc
sbb
icebp
sbb
sar
or
mov
pop
mov
add
and
lods
jmp
mov
mov
push
in
jl
push
jle
ret
or
jl
mov
inc
jmp
movs
call
rol
rcr
pop
in
sbb
mov
gs
repnz
test
cs
fmul
fldcw
in
add
in
or
push
sub
test
xor
pop
inc
sti
pop
cmp
mov
pop
inc
fisttp
and
test
mov
repnz
xor
jae
rcr
fisttp
add
in
xchg
xor
pop
stos
imul
mov
jo
aaa
cmps
xchg
sub
test
stos
(bad)
jmp
scas
and
ins
pop
jbe
or
cs
dec
inc
cdq
pop
ins
push
pop
xor
mov
cmp
lahf
inc
int3
xor
scas
in
sbb
les
pop
fld
push
pop
std
and
adc
dec
lahf
push
(bad)
and
out
xchg
cdq
data16
sub
clc
or
mov
mov
mov
or
mov
dec
enter
and
inc
repnz
jns
cld
scas
sbb
fidivr
add
aaa
ret
stc
pop
ffree
je
adc
(bad)
mov
dec
mov
sub
rol
imul
mov
pop
push
stc
mov
jnp
cli
shl
and
jbe
xor
and
fsub
inc
mov
xor
lds
stos
movs
cmp
pop
xchg
adc
adc
mov
out
cmp
mov
and
icebp
dec
adc
and
jmp
sti
sbb
sbb
daa
jle
cmps
mov
adc
out
orps
cmp
xchg
xor
adc
jo
adc
sbb
adc
pop
push
stc
fnop
add
dec
div
lock
sbb
loopne
(bad)
cli
or
sub
inc
sahf
sub
bound
dec
mov
xchg
fcmovnu
jnp
jge
movs
std
xchg
dec
shl
pop
push
or
mov
adc
out
or
cli
jl
iret
les
xor
pop
fmul
jns
xchg
sub
cmps
test
cmps
xor
fcom
xchg
xor
cmp
adc
jo
xchg
mov
push
xchg
sub
mov
mov
movs
push
pop
stos
dec
out
push
push
push
inc
mov
les
adc
mov
and
cwde
lods
xchg
or
mov
jmp
aaa
xlat
inc
and
xchg
inc
cld
jne
fs
xor
iret
ss
jle
jb
cli
movs
inc
or
or
aad
out
leave
fidivr
call
enter
jecxz
dec
xchg
jb
fbld
cli
sbb
(bad)
retf
cmp
sub
xchg
pushf
xchg
cmc
shr
fmul
cld
je
push
(bad)
repnz
jbe
pushf
adc
mov
sahf
cmp
loope
mov
rcl
add
cmp
je
fdiv
xchg
add
fdivrp
push
cs
popa
inc
inc
sbb
aaa
mov
cli
mov
(bad)
aam
pusha
sbb
mov
xchg
enter
push
jo
pop
cli
and
shl
push
pop
lds
ret
inc
leave
dec
mov
fild
push
sbb
and
cmp
hlt
popa
imul
xchg
jl
add
or
cli
mov
lahf
cs
push
(bad)
mov
mov
jbe
cs
sub
ins
cmp
xchg
stc
xchg
mov
xchg
adc
pop
nop
mov
dec
mov
adc
mov
inc
dec
xchg
jne
in
jl
fmul
in
outs
rcr
push
or
sbb
popa
jbe
loopne
sbb
cli
or
shl
call
imul
push
fdiv
add
mov
adc
ins
aad
cmp
das
ficomp
sub
call
xor
in
pushf
int
dec
dec
ds
test
dec
mul
scas
mov
mov
add
add
push
jbe
sub
pop
fdiv
jmp
test
add
dec
sahf
sub
cwde
rol
xchg
xor
mov
lahf
sub
into
push
enter
or
loopne
or
or
fwait
mov
lea
retf
sbb
popf
(bad)
test
dec
(bad)
mov
or
repnz
in
mov
(bad)
fild
cli
loopne
aam
xchg
jmp
xor
(bad)
fcmovne
add
sbb
xor
test
add
movs
adc
and
or
jge
iret
pop
cdq
and
call
and
nop
ret
jle
sbb
loop
dec
and
jnp
add
sbb
adc
jg
mov
xor
xlat
jg
adc
mov
dec
enter
adc
inc
mov
(bad)
push
pusha
and
(bad)
push
adc
cld
push
jmp
add
test
cs
ficomp
test
pop
xchg
jne
out
sub
das
xor
fs
mov
mov
iret
lock
adc
loop
dec
jb
movs
mov
sbb
fiadd
outs
shl
sar
lahf
jmp
xchg
loope
cmp
ret
pushf
mov
outs
add
sahf
mov
pushf
and
jbe
int
adc
retf
jbe
ret
mov
sub
pop
mov
dec
sbb
mov
jb
cmp
xchg
sub
sbb
xchg
mov
push
frstor
sbb
mov
inc
ins
movs
dec
or
sub
cmps
pop
cmp
or
jae
into
xor
push
push
out
and
sub
iret
scas
mov
mov
fisubr
in
xchg
arpl
mov
std
lock
cmp
popf
inc
cmc
xor
lea
dec
in
rcr
jge
dec
inc
mov
xchg
hlt
aam
jae
in
push
stos
mov
std
xchg
ret
pop
jbe
popf
out
adc
xchg
pop
pop
xlat
sub
jnp
(bad)
shr
or
call
inc
pop
mov
mov
aas
xchg
fsubr
mov
jae
ds
js
dec
add
or
idiv
stc
inc
cmp
adc
and
xchg
stc
shl
popa
gs
lea
sbb
call
inc
or
loopne
jmp
push
inc
push
jns
hlt
mov
lea
jbe
rcr
jne
fidivr
xchg
sub
clc
hlt
mov
mov
sub
dec
std
xor
ss
and
(bad)
pop
xchg
fidivr
pop
mov
retf
jmp
(bad)
push
lea
outs
adc
data16
stos
push
dec
ret
mov
ds
into
fimul
mov
and
les
dec
icebp
jns
add
push
inc
add
mov
or
add
int3
jmp
stc
mov
dec
not
loope
dec
fs
or
mov
mov
pop
xor
stc
push
push
out
fisub
add
retf
mov
or
fldcw
out
sti
pop
adc
shl
adc
(bad)
fimul
sbb
aaa
dec
hlt
imul
mov
repz
jb
cdq
sahf
and
sbb
push
in
addr16
mov
mov
outs
stos
cmc
fisub
jmp
mov
out
and
das
aaa
add
dec
bound
or
ins
fnsave
ja
adc
mov
das
out
retf
xchg
mov
test
xlat
js
jnp
mov
popf
mov
data16
push
push
movs
call
iret
les
retf
or
clc
xor
mov
mov
inc
mov
xchg
adc
lock
xchg
sub
mov
jne
inc
jp
xor
dec
shr
xchg
cmp
test
mov
adc
sub
pop
out
imul
mov
jno
out
call
addr16
retf
sub
add
sub
xchg
loop
jo
cmp
mov
add
pop
xchg
xor
jl
data16
inc
fbstp
(bad)
fdivp
sub
and
(bad)
dec
out
jbe
jp
in
adc
movs
cmps
jle
inc
retf
xor
ds
inc
pusha
iret
sti
push
pusha
ja
jb
add
es
adc
xchg
dec
int3
dec
(bad)
(bad)
mov
sub
adc
xor
mov
mov
ret
push
fwait
jmp
xchg
ret
xor
shl
inc
fsubr
scas
jmp
fist
into
jae
fadd
pop
enter
gs
gs
iret
add
mov
fild
cmp
fbld
pop
push
push
(bad)
es
mov
retf
aas
xor
sbb
mov
(bad)
imul
out
ss
and
cld
ja
imul
jg
jns
pop
cmp
xor
pop
cmc
popf
and
js
add
pop
hlt
and
push
pop
pushf
test
lock
xor
loop
cmc
retf
test
push
les
(bad)
gs
test
xchg
cmp
cmp
push
sub
inc
fwait
cli
cdq
imul
fsubr
inc
fwait
test
dec
adc
div
push
mov
stos
das
les
fsub
div
cdq
ins
push
je
jle
cmps
mov
std
jg
pusha
sbb
fdiv
les
lock
push
in
mov
push
ds
loope
fldenv
push
xor
jae
dec
inc
jmp
(bad)
mov
jbe
arpl
pop
(bad)
movs
hlt
cmps
mov
icebp
ret
arpl
or
dec
jmp
stos
mov
pop
mov
out
xor
es
push
lock
jl
adc
and
retf
ins
aas
and
sub
or
test
xchg
clc
enter
ins
and
mov
mov
pusha
add
or
dec
jb
or
sbb
lds
cli
ds
lock
adc
dec
mov
shl
es
adc
cmps
fnstcw
xlat
xlat
inc
mov
les
dec
xlat
(bad)
and
mul
ja
daa
lahf
das
ret
push
inc
hlt
iret
push
pop
dec
sbb
outs
div
es
out
mov
bound
push
mov
cs
sub
and
and
jo
inc
push
data16
mov
fadd
shl
jnp
xchg
popf
pusha
mov
add
adc
lahf
xor
sub
mov
xchg
cli
adc
mov
push
xchg
retf
aam
enter
jmp
xchg
push
sub
imul
dec
fsub
shr
ret
xchg
ds
and
mov
mov
mov
sti
std
cmc
int
(bad)
pop
mov
loopne
adc
leave
jecxz
cld
fcom
iret
pop
sub
(bad)
retf
xchg
mov
ror
xor
pop
push
iret
jbe
mov
movs
scas
sub
sbb
add
push
mov
and
jg
aad
mov
xor
arpl
ins
enter
clc
in
bound
imul
adc
shl
aam
jo
aad
xchg
sbb
fdiv
xchg
in
cmp
jo
pop
xor
ins
arpl
lea
(bad)
mov
in
pushf
mov
ror
or
out
sub
test
cmp
jg
push
outs
mov
out
pop
retf
cli
js
xchg
sub
fdivr
ss
jae
sbb
or
ret
jp
cld
dec
mov
shl
cmp
popa
icebp
nop
(bad)
xor
int3
dec
jl
xor
mov
xchg
mov
out
push
push
dec
push
mov
je
es
stos
lods
jae
aad
cmc
sbb
dec
jg
sbb
sahf
lock
pop
ror
or
jmp
lahf
add
mov
pop
cs
cli
je
pushf
idiv
dec
mov
pop
mov
icebp
sbb
and
cs
push
mov
std
pop
pop
(bad)
jno
jns
sub
in
imul
mov
int3
mov
(bad)
xor
xchg
xchg
pop
fwait
xor
xchg
push
xchg
jno
sbb
push
lds
cmp
xor
lds
scas
mov
jp
sbb
or
or
sub
dec
stos
je
mov
push
or
inc
dec
push
adc
jne
loopne
in
xor
cmp
xchg
cmc
mov
sbb
mov
sub
daa
test
cmps
xchg
cmp
loopne
jmp
mov
cmp
(bad)
in
sti
inc
mov
fisubr
sub
loope
sbb
sub
sbb
mov
xor
std
pop
jle
pop
add
adc
sti
retf
mov
dec
inc
add
stc
sub
hlt
inc
test
inc
xchg
or
ret
mov
or
mov
jp
mov
inc
ins
or
mov
mov
test
dec
sub
call
test
push
mov
mov
add
addr16
cmc
xchg
adc
mov
dec
pop
xchg
cmp
dec
retf
ss
sbb
cmps
or
(bad)
mov
mov
loope
mov
add
or
and
jge
stc
cli
leave
cmps
sbb
ret
adc
cld
push
cmps
jns
cmp
pushf
sub
leave
push
pop
imul
sbb
xchg
ficomp
(bad)
cld
(bad)
mov
retf
inc
mov
movs
inc
cdq
icebp
int3
mov
cmp
adc
sub
mov
sbb
mov
cmps
jg
stos
jecxz
inc
fcomi
adc
xor
xor
pop
sbb
mov
ins
and
add
retf
retf
cmps
jno
mov
lock
pop
xlat
or
push
pop
lods
inc
fcom
xchg
mov
fisub
sbb
outs
fwait
std
jl
nop
jno
inc
lea
or
add
adc
pop
add
ss
adc
mov
mov
cmp
adc
retf
jae
xchg
push
or
movs
xor
jl
test
stc
pop
dec
ss
mov
pop
mov
mov
cmp
gs
out
retf
dec
cli
arpl
(bad)
sbb
mov
jle
push
pop
add
fmul
and
pop
outs
mov
push
cs
fistp
inc
dec
jecxz
dec
mov
dec
add
aas
cmps
aaa
test
mov
xor
or
repnz
dec
mov
cmp
or
jbe
jmp
ja
dec
mov
pusha
stos
xor
jb
jae
test
(bad)
div
fwait
bound
sub
cmp
mov
ror
minps
jecxz
xor
movs
pop
jmp
push
pop
movs
test
rol
mov
popf
mov
push
inc
mov
adc
enter
outs
lods
ss
cmc
(bad)
sub
fwait
push
sti
cdq
dec
loop
mov
mov
into
dec
gs
fidiv
inc
fs
mov
cmp
pop
lock
lock
xchg
xor
call
test
inc
ror
fwait
ds
out
in
out
mov
cmc
imul
ror
inc
cwde
scas
loop
(bad)
(bad)
mov
dec
lods
fimul
cmp
xchg
sbb
or
jo
ins
cmp
ins
mov
sub
das
repnz
mov
scas
mov
pop
ins
mov
fs
gs
mov
mov
test
xor
push
jp
mov
stos
push
push
or
mov
dec
int
imul
icebp
pop
pop
dec
in
mov
rol
jno
das
test
(bad)
sub
fsubr
xchg
hlt
lods
popf
je
dec
and
mov
and
jmp
mov
xor
and
popa
popf
sub
outs
daa
or
and
adc
xor
cmp
test
mov
lods
sub
push
mov
(bad)
jns
push
ins
loopne
xor
retf
cmc
sub
arpl
cmps
out
adc
retf
pop
pushf
cli
xchg
xor
inc
iret
test
loope
jns
div
out
jbe
and
sbb
push
sbb
mov
setae
into
mov
jecxz
test
mov
popf
loope
je
mov
inc
jmp
dec
push
add
push
inc
shl
adc
push
scas
loop
jmp
cmc
jle
mov
xlat
call
adc
sar
ror
inc
fnsave
popa
inc
dec
or
push
rol
in
bound
jle
arpl
test
out
xor
jmp
es
sub
and
shl
loope
in
mov
loope
daa
mov
xor
mov
and
push
jmp
nop
stc
sub
push
mov
fld
ja
inc
mov
movs
mov
mov
inc
(bad)
dec
shl
imul
ss
cmp
mov
in
pop
push
adc
test
push
jp
aad
pop
pushf
ficom
out
ins
sub
and
les
push
lds
inc
scas
bound
add
cs
lods
call
outs
out
push
cmp
scas
shr
enter
iret
pop
mov
cmp
data16
lock
sbb
out
mov
jmp
jae
nop
jl
push
push
je
(bad)
fsubr
xlat
mov
cld
adc
sbb
stos
repnz
xlat
pop
cmp
mov
xor
xor
xchg
xchg
push
das
sbb
sahf
nop
cmc
sub
xor
sub
stos
int3
sahf
clc
jnp
stos
lahf
scas
fsubr
or
inc
pop
xchg
or
mov
pusha
mov
cli
add
aas
pop
sti
(bad)
call
xor
je
jae
mov
pushf
mov
aad
retf
call
jns
pop
pop
aaa
xor
or
mov
out
call
mov
pop
add
pop
(bad)
movs
fsubr
test
pop
pop
add
xchg
push
outs
les
adc
out
sub
push
sahf
leave
pop
popf
bound
sub
sbb
into
cmp
add
cmp
xor
xchg
inc
test
sub
ins
push
inc
jecxz
sbb
adc
xchg
mov
outs
cmps
fadd
daa
mov
ja
or
sti
sub
adc
lea
xchg
or
cmps
or
sar
pop
daa
lahf
call
inc
pushf
enter
movs
xchg
jmp
and
xchg
sbb
fs
in
add
mov
add
cmps
aam
cld
rcl
aad
pop
jg
sbb
mov
lock
dec
retf
or
xor
inc
popa
add
xchg
dec
and
cmp
xchg
adc
mov
and
inc
ret
xchg
fistp
push
mov
sub
cmp
jge
cmc
dec
nop
sbb
pop
mov
add
aaa
fld
cmp
ins
inc
inc
xchg
out
jno
sub
out
fsubr
cmp
sbb
test
repz
imul
movs
xor
inc
xchg
or
jbe
xor
pop
outs
mov
sbb
mov
stos
mov
sbb
test
repz
hlt
jl
pop
jmp
jmp
repz
out
test
ds
cmp
repnz
dec
inc
dec
call
pop
pop
mov
cmp
aas
or
gs
xor
jp
jle
jnp
and
xor
(bad)
ss
xor
push
and
ss
ins
mov
mov
mov
retf
repnz
inc
imul
repz
xchg
or
or
dec
ss
fistp
shl
inc
push
daa
push
pop
or
xor
inc
dec
(bad)
pop
mov
pusha
clc
nop
pop
pop
push
js
pusha
mov
shl
cmp
call
scas
dec
inc
and
inc
ficom
jno
jo
pop
fstp
dec
inc
sbb
stos
sbb
xchg
or
and
cmp
xor
mov
ror
or
aaa
rcr
mov
test
add
inc
(bad)
sub
mov
jns
mov
sbb
mov
push
fmul
push
enter
inc
mov
out
mov
xchg
loope
data16
xor
dec
lahf
or
and
jle
mov
jo
stos
stos
ret
jo
mov
adc
xchg
jmp
out
xor
in
jo
push
aaa
pop
ret
mov
or
test
leave
(bad)
loopne
aas
pop
add
out
loop
rol
bound
inc
adc
dec
and
int3
hlt
xchg
cmp
sub
fwait
pusha
ficom
dec
jb
mov
xor
jecxz
add
int3
sbb
lock
inc
outs
jmp
mov
ret
mov
fdiv
adc
jmp
xlat
mov
fwait
popf
inc
xchg
mov
lahf
cmp
ins
cmp
ja
push
mov
jle
inc
ret
adc
push
rol
xor
dec
cmp
sbb
mov
jo
scas
clc
(bad)
stc
or
add
outs
and
xor
jns
test
xor
adc
daa
sub
test
es
scas
jnp
sub
xor
stc
test
lods
dec
xor
jmp
fstp
mov
aad
mov
ret
xchg
xchg
adc
popf
fisubr
addr16
jnp
pushf
jecxz
mov
push
inc
(bad)
dec
inc
mov
aam
mov
jae
mov
shl
outs
popf
pmaxub
loope
rep
xor
pop
cmp
push
mov
push
sbb
sub
sbb
sub
cld
icebp
cld
stos
ror
mov
js
call
or
mov
push
sbb
or
test
jg
int3
xchg
cmp
sar
dec
test
data16
cmp
ins
and
push
xor
outs
pop
mov
inc
sub
cmp
and
jae
mov
and
cmp
lds
mov
pushf
js
enter
jo
punpcklbw
and
shl
sar
cld
sub
ds
daa
loope
fstp
jbe
lds
idiv
inc
xchg
jnp
mov
pop
add
inc
jg
repz
sub
ret
enter
out
mov
jmp
int
enter
cmp
push
or
div
push
sub
aas
or
inc
daa
ins
xor
add
hlt
xor
add
ds
mov
xchg
push
cmp
and
repz
aas
xor
cmps
mov
test
fiadd
retf
icebp
add
add
into
retf
adc
cmp
stc
nop
mov
test
data16
sub
mov
retf
test
dec
movs
inc
mov
les
neg
pop
adc
and
mov
push
xchg
(bad)
or
push
mov
fs
xor
push
les
xlat
or
ds
push
int
inc
push
fwait
mov
(bad)
push
fist
movs
icebp
pop
stos
cmp
cmp
sub
xchg
push
cmp
pushf
jg
pop
lods
into
pop
in
push
pop
pop
xchg
dec
movs
ds
xchg
scas
add
in
iret
or
shl
xchg
jl
mov
lahf
jns
mov
and
jle
aad
sbb
or
push
dec
sub
xchg
xchg
js
into
shr
sahf
push
xchg
lods
cmp
pop
test
das
std
push
add
ss
mov
lock
sbb
mov
pmaxsw
aas
fst
and
pusha
mov
push
jp
mov
inc
enter
xor
inc
mov
mov
pop
jno
inc
push
jg
jecxz
loopne
fistp
outs
lock
pop
jl
and
std
sbb
add
lods
fwait
lods
aam
inc
dec
jno
retf
cmps
inc
xor
jecxz
out
dec
in
loop
leave
jo
out
jp
rol
lods
jns
mov
rol
repz
gs
sub
sub
test
fisttp
imul
hlt
dec
ffreep
push
xchg
mov
cmp
std
setl
mov
retf
push
scas
fldenv
nop
sti
(bad)
clc
addr16
xchg
or
fsubr
movs
mov
mov
xchg
imul
lea
(bad)
dec
sub
fldcw
icebp
add
adc
mov
(bad)
sbb
arpl
pop
loop
popf
jle
fidiv
inc
hlt
xchg
adc
(bad)
jnp
jl
lods
cmp
cmp
xor
xchg
mov
out
add
mov
and
xchg
cmc
in
(bad)
out
aas
mov
xlat
cdq
out
jl
in
fst
push
xchg
jnp
add
gs
mov
aam
in
mov
cli
cmps
push
out
adc
xchg
shl
cdq
adc
popa
adc
xor
ins
popa
into
(bad)
(bad)
data16
inc
in
sub
xor
std
mov
rcl
retf
fistp
(bad)
mov
add
(bad)
daa
push
sub
push
cli
push
pushf
adc
gs
sbb
cmp
xchg
add
fs
mov
push
cmp
inc
jne
test
icebp
inc
cmps
rol
dec
iret
rcr
lods
xor
dec
xchg
or
sti
add
test
pop
shr
and
jae
loope
cmp
(bad)
idiv
sbb
shr
lods
cmp
xchg
sub
jnp
mov
into
scas
sub
mov
xchg
out
or
pop
jnp
mov
cmps
sar
dec
dec
ret
(bad)
xor
cmp
cmp
or
inc
inc
test
(bad)
cmp
test
xchg
sbb
pop
mov
fisub
div
stos
inc
cmc
aas
in
fstp
das
repz
imul
movs
mov
jg
push
es
icebp
inc
pop
jecxz
cmps
fist
pop
sbb
xor
popf
sahf
mov
jle
fild
fxch
inc
leave
(bad)
xor
mov
push
mov
mov
adc
mov
rcr
stos
int
inc
mov
mov
retf
pop
push
(bad)
enter
mov
jno
mul
ror
sub
adc
adc
or
mov
push
add
mov
shl
cmp
stos
dec
lods
mov
call
push
xor
push
gs
add
repz
adc
sbb
jo
pop
jb
mov
xor
pop
mov
clc
(bad)
paddsb
jo
cli
iret
out
mov
pushf
ret
mov
jl
sub
cld
jns
int3
jl
hlt
mov
mov
(bad)
imul
xor
xor
add
or
call
xor
(bad)
cdq
jo
pop
sahf
pop
mov
adc
or
add
mov
ja
mov
outs
jno
es
jns
out
sar
mov
pop
xchg
cdq
test
pop
sbb
shr
sub
pusha
dec
push
sbb
sbb
iret
fild
fisub
js
mov
mov
xor
mov
jb
sar
pop
push
lods
adc
loope
sub
cli
cmp
push
stc
push
std
add
sub
jo
mov
or
je
mov
jbe
xor
and
sub
aam
and
mov
lea
push
bound
std
and
bound
sub
pop
sti
jbe
add
sbb
fnstenv
scas
mov
stc
xchg
jp
mov
ds
out
mov
adc
cmp
adc
(bad)
adc
leave
dec
sbb
adc
push
mov
jg
inc
mov
lods
mov
xor
fisub
inc
adc
(bad)
nop
and
test
and
mov
aad
retf
int
jle
xchg
sar
jmp
mov
imul
add
or
adc
jb
and
stos
inc
pop
sub
xchg
jg
ja
setbe
add
push
adc
xchg
mov
pop
or
sub
aam
sahf
mov
or
ins
stc
mov
loopne
jb
hlt
test
cmp
sub
out
mov
rol
aad
test
inc
xor
pop
add
pop
in
out
adc
lea
cli
or
test
jbe
rol
bound
ficomp
call
inc
pop
aas
cs
addr16
out
sbb
pop
xor
std
push
mov
and
and
dec
stc
cwde
sbb
sub
outs
ret
push
inc
sub
jb
push
shl
push
jnp
sub
js
xor
jae
lds
fstp
fwait
xor
pop
repz
retf
ret
add
mov
xor
ret
cmps
movs
push
sbb
mov
xor
pop
dec
mov
jb
jmp
in
mov
cld
ins
loope
sub
pop
jg
idiv
adc
ss
push
push
movs
jbe
sub
fwait
pop
sub
dec
sbb
mov
cmps
cmps
inc
jne
mov
pop
das
mov
jo
xchg
add
repz
xlat
cmps
into
js
imul
(bad)
cwde
aam
loopne
dec
jecxz
outs
jnp
mov
and
cdq
dec
jp
push
mov
jno
in
add
aad
das
popa
inc
cld
movs
or
(bad)
jmp
add
sub
bnd
mov
(bad)
idiv
popf
mov
retf
and
or
shl
pop
jne
pop
and
jbe
pop
(bad)
mov
scas
add
dec
retf
mov
test
or
dec
ja
sub
in
xlat
mov
pop
mov
mov
out
xor
gs
je
faddp
pushf
test
int
dec
daa
cmp
stc
and
mov
stc
mov
jle
out
popf
push
scas
fsubr
sbb
pop
lea
add
push
call
push
push
dec
mov
jno
jne
jg
test
jne
sub
lss
es
popf
int3
icebp
nop
gs
jne
pop
in
jno
cmp
dec
sar
inc
dec
sbb
(bad)
es
gs
jl
cmp
inc
pop
push
aad
retf
sub
sbb
xchg
pop
jp
(bad)
xlat
shl
and
xor
out
push
ja
fst
ret
mov
ffreep
sub
pop
repz
xchg
jecxz
jnp
add
dec
cmp
popa
mov
imul
test
xchg
jl
mov
loop
lods
ss
fisttp
add
pop
xor
in
dec
mov
popf
loope
imul
imul
ret
xor
push
dec
push
sbb
les
jge
mov
cmc
cmp
push
xchg
or
xor
mov
retf
and
mov
jg
mov
add
shl
mov
cld
push
push
add
xor
mov
leave
neg
sbb
shr
jnp
mov
push
push
inc
lds
mov
sub
mov
movs
sahf
ret
daa
mov
mov
adc
pop
and
outs
(bad)
dec
sub
add
or
sbb
adc
pop
ja
cmp
xor
cmp
sub
add
mov
movs
call
call
mov
cs
push
sub
push
jp
and
pop
dec
push
stos
cmps
or
pop
mov
pop
dec
ss
dec
add
cmps
and
push
xor
arpl
jg
in
sbb
xchg
sub
imul
inc
xchg
dec
imul
push
in
xchg
or
xchg
pop
out
and
inc
arpl
xchg
jp
icebp
and
pop
loop
(bad)
and
mov
pop
jne
or
in
push
fimul
inc
cdq
loope
push
pop
jnp
add
das
fcom
pop
int
fist
pusha
in
mov
or
pop
adc
push
or
xchg
adc
sub
rcl
mov
pop
sub
pop
inc
in
fnstcw
xchg
ss
mov
and
inc
aam
add
mov
aas
lea
or
mov
and
push
mov
dec
cmp
int
inc
lea
mov
popf
out
push
xor
into
(bad)
sub
sub
fwait
sbb
movs
in
jnp
mov
idiv
or
add
mov
mov
mov
scas
fistp
push
xchg
ret
movs
mov
out
call
pop
xor
cmp
(bad)
adc
xor
in
or
cld
inc
inc
mov
out
cs
jno
(bad)
daa
ficom
push
dec
ja
mov
cmps
inc
ds
cs
mov
sub
cli
mov
lods
and
mul
dec
test
(bad)
dec
add
sbb
lods
push
and
cmc
jno
dec
xchg
icebp
xor
shr
loop
mov
or
add
inc
push
dec
in
es
test
mov
sti
ja
pop
dec
push
pop
bound
ror
xor
rcr
mov
inc
inc
and
enter
or
pop
push
fadd
or
bound
sahf
jle
mov
adc
push
stos
pusha
pop
xchg
pop
push
into
in
ficomp
add
mov
in
(bad)
add
dec
jbe
(bad)
pop
sbb
mov
mov
rol
js
inc
(bad)
std
xchg
test
cmp
cwde
mov
retf
aaa
imul
outs
dec
mov
jb
in
pop
je
aad
or
mov
fsubr
cs
scas
out
dec
popf
sub
adc
pop
dec
mov
shl
adc
jg
push
test
cmc
loopne
add
sar
out
mov
dec
and
nop
or
jbe
jp
mov
(bad)
and
pop
je
jae
scas
lea
(bad)
jbe
adc
jmp
rcl
xlat
and
xor
cdq
mov
jge
adc
outs
out
jg
mov
xor
push
xor
dec
in
inc
adc
jae
push
pop
out
bound
add
sbb
sub
inc
inc
imul
xor
and
push
scas
fimul
bound
adc
dec
(bad)
xchg
mov
test
inc
sub
pushf
fimul
out
dec
or
cs
mov
pop
mov
cdq
or
mov
sahf
dec
pushf
cmps
inc
scas
sub
scas
sbb
and
mov
bound
pop
ret
icebp
xchg
loop
adc
or
shl
outs
mov
push
fwait
jae
out
std
ret
(bad)
pop
xlat
int
lock
add
pusha
xor
push
push
lock
es
jp
int3
(bad)
xor
iret
(bad)
push
push
retf
mov
pop
fidiv
mov
jbe
not
and
push
popf
stos
cmps
sti
movs
mov
push
and
inc
dec
cmp
inc
sub
and
push
cmp
aas
pop
pop
add
mov
inc
stc
popf
jo
cdq
les
sbb
cmp
push
xchg
mov
mov
shr
iret
adc
popa
jno
dec
inc
fcom
mov
aaa
retf
(bad)
cwde
and
dec
and
hlt
ret
jo
es
shl
int
jo
push
div
ja
rcl
(bad)
cmps
xchg
dec
out
xchg
xor
retf
sub
cmc
add
(bad)
sar
xlat
jno
ja
movs
dec
sbb
jnp
fcmovnu
js
jp
jp
xchg
retf
mov
dec
test
push
loop
sub
adc
xchg
icebp
retf
cmp
add
test
mov
push
adc
push
inc
shl
push
and
push
xor
sti
out
mov
jbe
fucomip
and
mov
dec
add
les
xchg
mov
stos
pop
xchg
outs
sti
ret
push
in
(bad)
ins
cmc
not
mov
not
enter
jmp
or
call
xor
adc
jno
xchg
lock
aam
mov
(bad)
sbb
jb
movs
mov
xor
push
cwde
xor
retf
jb
test
stc
mov
sub
std
inc
sbb
dec
pop
fcomp
fdivr
test
or
mov
dec
and
push
sbb
ret
xchg
sar
sub
add
dec
js
stc
sub
lock
cmp
and
pop
adc
adc
sub
and
lock
mov
dec
sbb
xchg
or
enter
shl
xchg
jno
or
test
call
mov
sbb
mov
retf
fisubr
scas
sub
fdiv
push
aad
jge
push
mov
pop
out
or
lds
fsub
inc
push
sti
fs
iret
pusha
adc
xlat
pusha
xchg
add
jmp
stos
dec
out
xor
add
cmps
fimul
and
in
and
sbb
sub
test
shr
ficomp
jecxz
aam
repz
retf
mov
fucomp
xlat
jne
add
bound
xchg
sub
cwde
aam
sbb
xchg
xor
pop
push
movs
adc
div
addr16
jmp
adc
pop
push
inc
mov
mov
movs
data16
sti
in
lock
mov
push
mov
in
add
or
and
jge
movs
xor
(bad)
icebp
mov
push
fs
push
push
adc
dec
add
(bad)
jmp
ins
or
stos
xor
bound
adc
mov
mov
pusha
mov
stc
mov
sbb
pop
fisubr
adc
aam
adc
jns
ret
lds
fisubr
test
mov
pop
in
dec
(bad)
jb
stos
mov
add
xchg
fist
fwait
xchg
das
nop
jmp
xchg
arpl
push
retf
repnz
pop
or
mov
into
jno
mov
dec
stos
add
repnz
sub
sbb
fiadd
repz
dec
mov
sbb
imul
push
inc
rol
cmp
and
jp
push
dec
in
inc
cmp
cmp
mov
cmp
and
mov
(bad)
cld
sub
pusha
outs
push
cdq
popa
mov
sbb
fst
and
cli
into
(bad)
inc
sbb
jl
jmp
gs
imul
dec
adc
pop
sbb
fidiv
jl
cmp
aas
scas
and
lods
jae
sbb
rcl
lods
mov
inc
jbe
loop
and
adc
je
jns
lock
outs
je
repz
add
inc
popf
stc
ins
pop
xor
imul
mov
pop
inc
pop
xor
xchg
mov
test
mov
loope
lods
aam
cmp
dec
imul
xor
dec
inc
(bad)
es
xchg
and
rcr
ret
mov
cld
cdq
mov
das
out
push
and
sub
sbb
lock
jmp
pop
lods
lock
mov
bound
xchg
mov
jo
mov
(bad)
sub
daa
jg
cmps
xor
inc
leave
jmp
mov
les
loopne
mov
inc
xchg
pop
push
mov
push
inc
icebp
js
xchg
mov
or
popa
fs
jmp
cmc
push
inc
cli
out
pushf
rol
mov
lea
add
jbe
mov
in
movs
sub
add
mov
lods
or
sbb
adc
test
adc
lods
mov
add
or
into
aaa
test
jmp
lds
mov
test
xchg
push
jmp
push
or
xor
xor
xchg
inc
loopne
ret
lea
dec
push
std
jle
ret
add
inc
(bad)
push
fcmovb
add
jo
fistp
cmp
retf
dec
push
push
loop
ret
icebp
and
pusha
jle
mov
mov
jmp
jmp
push
dec
cmps
pop
xor
ffreep
mov
add
(bad)
popa
pop
and
push
imul
je
dec
fstp
mov
add
xor
xlat
retf
out
xchg
xchg
outs
dec
fcom
xor
sub
repz
fdivrp
movs
imul
in
mov
test
adc
xchg
loopne
adc
or
pop
mov
or
je
add
aaa
adc
int
cmp
inc
xchg
inc
xchg
pop
cmps
jle
aas
lahf
sub
mov
fs
pop
add
ins
ret
sbb
xchg
nop
cmps
dec
and
and
mov
push
push
in
inc
push
mov
push
leave
je
aaa
push
cdq
in
stos
jle
ins
jmp
arpl
in
xor
jp
add
xchg
lahf
(bad)
sbb
icebp
rcr
cmp
ins
out
xchg
clc
mov
or
out
shr
jmp
ins
aas
cmps
jnp
xchg
in
xchg
push
loope
sbb
inc
or
aam
int3
dec
adc
out
loopne
and
or
xchg
imul
inc
jno
test
mov
xchg
ror
jg
imul
rol
and
adc
imul
out
jmp
cmp
push
push
into
and
inc
lds
cs
ins
xor
lock
inc
dec
loopne
scas
add
mov
div
push
and
cwde
push
jne
push
xchg
jno
dec
cmps
ss
sbb
and
cli
adc
dec
data16
outs
jnp
xlat
(bad)
pop
mov
xor
push
xchg
stos
mov
bound
repz
dec
and
mov
fst
sub
mov
aaa
push
in
fdivr
jo
pusha
scas
in
push
mov
stc
rcr
xor
inc
(bad)
mov
jecxz
and
pop
cmp
cmp
mov
daa
ror
jmp
mov
mov
sbb
inc
mov
leave
xchg
test
daa
xchg
jecxz
jbe
test
lahf
pop
add
jle
pop
pop
aaa
jbe
std
push
neg
fld1
ja
enter
aas
sahf
sbb
pop
icebp
mov
call
iret
push
dec
mov
lods
mov
fcomp
inc
mov
pop
inc
cs
loope
test
mov
adc
sub
pusha
and
mov
dec
xor
retf
fimul
test
(bad)
loope
es
jnp
cmp
push
add
add
dec
xor
leave
inc
test
shr
ja
jg
outs
and
xchg
repnz
fwait
or
xor
ins
gs
mov
sbb
jmp
in
or
scas
push
inc
pop
cmp
test
(bad)
cmc
add
inc
xor
(bad)
and
push
mov
outs
inc
pop
or
adc
repnz
fist
mov
(bad)
mov
xor
gs
ins
ss
enter
mov
arpl
and
cmps
fdiv
sub
cld
test
sub
rcl
ror
dec
xor
pop
dec
push
push
fwait
mov
fldenv
ss
push
add
cmp
push
inc
enter
test
fistp
mov
cmp
adc
stc
xchg
aad
pop
cmc
jge
daa
aam
xchg
fwait
pushf
data16
enter
mov
sbb
push
retf
clc
ja
adc
sub
mov
jg
hlt
mov
dec
and
pop
test
ret
lds
inc
cmp
sub
mov
pop
push
push
mov
lods
inc
sbb
xor
popa
jg
pusha
sbb
push
cmp
xchg
adc
sbb
or
or
rol
jo
fwait
xchg
push
cmp
jno
out
sti
push
dec
sahf
in
ins
or
(bad)
movs
mov
dec
pop
cld
add
pop
leave
stc
pop
arpl
inc
mov
mov
cmps
inc
pop
jmp
pop
lea
sbb
mov
cwde
adc
sub
ret
nop
xor
ss
nop
pushf
cld
call
inc
leave
pop
int
pop
mov
stc
mov
movs
jle
loope
push
pusha
push
or
jl
cs
xor
into
outs
add
ret
push
and
in
push
xor
cmc
enter
outs
mov
sbb
popf
xor
push
(bad)
pop
(bad)
pop
adc
mov
lods
in
(bad)
icebp
xor
push
jl
cmps
ss
bound
or
cld
xchg
fbstp
loopne
sub
fs
adc
cmps
dec
std
adc
mov
mov
sub
mov
sub
push
rcr
inc
nop
popf
in
lea
scas
inc
adc
cmp
xchg
ror
dec
push
mov
lahf
cmovge
imul
aaa
sbb
xor
sbb
ins
shl
loope
mov
enter
jmp
out
retf
xchg
pop
or
add
pop
xchg
xchg
or
fcmovbe
inc
jmp
in
(bad)
pop
nop
sub
sbb
aad
das
xor
lods
enter
jmp
cs
retf
sahf
xchg
jb
in
out
cmps
sbb
xor
je
rol
in
dec
jns
adc
lods
jge
imul
dec
sub
or
lods
bound
aam
pushf
lea
retf
push
mov
inc
jb
sbb
mov
lahf
push
inc
int3
mov
or
(bad)
cmc
scas
xor
pusha
clc
cbw
fild
fcmove
jl
xor
data16
fadd
jp
test
mov
cs
loop
cmp
in
push
mov
mov
push
aas
inc
xor
cmp
pop
cmps
mov
bound
in
push
call
dec
loope
call
sbb
jle
sbb
push
cmp
call
mov
test
ret
mov
add
cmp
jge
ror
dec
dec
xchg
in
lock
inc
rcl
inc
es
sbb
std
sbb
add
and
inc
loopne
ds
xlat
mov
mov
mov
dec
in
(bad)
sbb
pop
jge
aaa
sub
cmps
jp
vmread
fs
jns
fistp
pop
dec
cmps
sbb
fs
mov
dec
add
popf
adc
mov
int3
cmp
jle
lds
mov
movs
sub
repz
stos
mov
xor
dec
stos
push
out
mov
pop
mov
call
sub
jbe
outs
xlat
test
jp
jne
mov
sub
push
mov
sar
dec
xor
in
inc
lds
sub
retf
mov
cdq
scas
mov
jmp
xchg
adc
shl
jge
mov
arpl
aam
and
imul
shr
dec
sub
inc
ss
ficom
xchg
xchg
cmp
in
mov
lock
loop
xchg
out
inc
mov
push
icebp
and
mov
xchg
rol
sbb
(bad)
in
adc
inc
call
push
lahf
nop
call
dec
add
das
gs
push
jbe
xchg
xchg
sbb
dec
outs
bound
cmp
shl
lea
shl
ins
jp
sbb
fwait
inc
shl
test
fwait
neg
stos
adc
add
retf
sbb
scas
add
dec
iret
mov
jbe
inc
mul
call
mov
sub
jae
sub
sbb
popa
idiv
sub
out
pop
movs
outs
dec
shl
push
pop
in
add
pmaddwd
repz
jecxz
and
adc
dec
mov
jno
push
fst
cs
lods
xchg
and
add
jno
imul
lds
push
test
pop
inc
pop
movs
push
rcr
xor
inc
sti
push
dec
daa
push
push
bndstx
jb
jno
jg
ins
ja
mov
pop
ja
mov
pop
jno
cmp
cmp
sbb
shl
gs
fdiv
push
push
fucomp
sbb
outs
test
push
or
inc
ins
leave
fs
pop
cdq
xchg
xchg
pop
mov
jmp
movs
loope
and
sub
adc
jbe
jbe
pop
fidivr
lahf
fdivr
enter
bound
mov
adc
arpl
mov
jmp
mov
cmps
into
aaa
jne
xchg
movs
scas
sub
dec
mov
cmp
pop
dec
mov
fwait
pop
out
in
test
pop
rol
and
push
sbb
mov
dec
cdq
lea
jmp
stos
test
fdivp
shr
mov
fild
add
loopne
ret
sahf
daa
imul
xchg
(bad)
out
mov
call
pop
int
inc
je
mov
ret
mov
(bad)
xchg
push
or
js
sahf
aas
inc
xor
aad
ins
or
iret
xchg
jmp
jae
sbb
es
pop
leave
popa
cmp
jbe
cmc
jmp
xor
and
xor
push
std
arpl
mov
or
mov
xchg
jnp
clts
test
mov
xchg
retf
inc
and
push
mov
cwde
mov
leave
xchg
outs
ret
cmp
jae
adc
call
cwde
sbb
dec
ins
push
push
and
stc
pop
popa
jecxz
jg
imul
inc
jge
mov
fxch
icebp
loop
add
rol
repz
mov
pop
in
inc
(bad)
test
lds
xchg
dec
inc
xchg
scas
push
ret
cmp
in
pop
push
sbb
cmp
push
mov
cdq
movs
adc
mov
push
sub
int
push
cs
mov
mov
jmp
pop
shr
mov
inc
fld
push
mov
out
vcvtdq2ps
or
push
test
add
mov
mov
pop
cmp
add
in
adc
push
cld
les
mov
out
dec
loopne
int3
ss
stc
inc
jge
mov
daa
jmp
cmp
lahf
pop
jle
xchg
push
adc
inc
pusha
scas
stos
and
sub
sbb
jns
test
int
jns
in
xchg
sahf
mov
aas
sbb
idiv
fwait
jecxz
mov
pop
adc
call
in
mov
test
sub
cdq
or
xchg
cld
inc
movs
fstp
jp
scas
push
pop
push
and
outs
in
sub
or
inc
mov
dec
iret
enter
dec
mov
adc
cmp
repnz
sti
pushf
out
sahf
pop
push
pop
jp
movs
pop
sbb
jmp
or
stos
(bad)
fisttp
into
out
cmp
sbb
xor
pop
or
shl
ret
sti
nop
xchg
xchg
adc
adc
aaa
fmul
jg
push
js
je
dec
inc
push
hlt
icebp
ret
xchg
push
sti
loope
bound
pop
mov
dec
inc
add
js
loopne
jae
adc
ret
mov
sub
pop
(bad)
pop
cs
push
jo
cdq
jbe
or
sbb
adc
(bad)
imul
push
mov
lods
xor
cs
int
mov
mov
rol
call
adc
mov
ins
aam
jne
ins
les
dec
(bad)
jmp
imul
xchg
mov
jge
mov
xchg
in
fwait
dec
pop
test
mov
lock
cwde
std
xchg
pop
push
sbb
pop
jo
cmp
jle
inc
jmp
xchg
push
sbb
inc
gs
bswap
jnp
(bad)
or
popf
mov
jle
mov
mov
lds
and
pop
into
adc
in
mov
nop
ret
push
inc
fisubr
pop
ss
jg
(bad)
(bad)
(bad)
xor
loope
clc
mov
les
jno
mov
or
add
scas
pusha
movs
mov
mov
loope
push
cld
clc
fcmovbe
add
xor
xor
adc
movs
mov
shl
test
cwde
cmc
dec
pop
push
inc
sub
lds
or
cmc
ret
stos
nop
ss
add
dec
lods
cdq
cmc
push
push
test
inc
ret
dec
ds
bnd
mov
push
push
push
jbe
stos
cmp
pop
cld
scas
stos
pop
jno
sbb
xchg
lods
icebp
mov
hlt
pop
pusha
out
mov
fild
push
mov
mov
cmps
das
(bad)
xlat
cmp
popa
cdq
mov
les
fidiv
lods
cmc
sti
nop
sbb
or
xchg
pop
test
add
xor
mov
(bad)
stos
push
xor
fistp
mov
fnstsw
loopne
aad
aas
enterw
add
sar
imul
xor
inc
add
fsqrt
in
adc
add
fwait
push
shl
cld
or
dec
xor
out
cmp
jmp
sub
mov
rcl
ja
pop
mov
cmp
mov
inc
out
popa
xor
jb
jae
mov
pop
cmp
leave
and
repz
add
lock
cmps
adc
push
sub
pushf
mov
sub
lods
xchg
mov
loopne
das
sahf
loopne
js
dec
aaa
push
hlt
and
outs
push
loopne
rol
test
in
xor
push
add
sub
out
inc
sub
inc
(bad)
fdiv
lahf
cld
xchg
jbe
jmp
scas
repnz
mov
pop
gs
mov
iret
shl
aam
addr16
stos
shl
call
in
inc
inc
ins
mov
jb
cmp
scas
int3
test
retf
cmp
aam
inc
movs
mov
adc
jb
push
dec
sub
pop
jne
cmp
movs
sbb
js
out
cs
inc
mov
cmp
pop
xor
push
push
and
xchg
or
leave
enter
inc
imul
sub
adc
mov
leave
xor
outs
adc
sub
push
fyl2xp1
mov
mov
cmp
xchg
int3
add
mov
scas
sub
out
outs
fstp
shl
ret
ffreep
cmps
popf
mov
mov
sbb
mov
pop
jmp
mov
data16
dec
test
std
sbb
nop
dec
xchg
imul
sbb
cmp
enter
aaa
sbb
xchg
inc
ss
and
stos
ja
add
jp
sbb
xor
imul
into
ficom
pop
retf
je
(bad)
push
cmp
add
dec
test
popa
mov
mov
jnp
mov
mov
jne
pop
out
pop
cmp
xor
nop
sbb
lahf
adc
dec
xor
(bad)
sar
test
pop
inc
fs
aad
popa
cdq
ficomp
jmp
xchg
pop
out
pop
bnd
xchg
fst
stos
push
xor
test
cmp
cwde
(bad)
push
and
aam
inc
add
ins
enter
push
clc
or
sti
or
and
(bad)
inc
push
adc
out
and
les
mov
aad
jg
mov
(bad)
mov
fdivr
je
push
ss
push
in
inc
sub
mul
push
shr
or
inc
outs
mov
into
daa
(bad)
jmp
std
int
jmp
mov
in
in
sbb
xchg
je
imul
adc
add
aam
cmp
scas
xor
sbb
adc
inc
clc
movs
sub
les
sub
pop
sub
int
and
js
adc
sbb
mov
call
dec
mov
cmp
cmp
jns
mov
jb
dec
jae
mov
push
mov
jp
pop
icebp
and
xchg
sub
mov
jge
pusha
repz
dec
inc
ficomp
jb
neg
int3
dec
or
fwait
cmps
mov
call
dec
daa
call
test
push
cmovs
push
jo
push
clc
fisttp
jl
je
stc
sbb
fist
or
xchg
mov
or
jmp
mov
pop
imul
ds
and
pusha
enter
mov
pop
add
xor
push
int3
test
fwait
or
pusha
push
shl
popa
jo
ds
push
enter
jmp
xor
and
ja
cmp
movs
jp
not
out
or
aaa
mov
and
push
movs
sbb
bound
and
ret
ja
mov
jns
mov
push
fnsave
pop
pop
arpl
rcl
jecxz
fsub
mov
or
and
mov
dec
jle
scas
lock
data16
mov
push
mov
cld
dec
inc
xchg
cmp
pop
cmp
les
sbb
enter
ja
sti
(bad)
xor
adc
mov
lods
mov
aad
mov
or
repz
mov
(bad)
sbb
xchg
xchg
sbb
not
inc
inc
out
xor
in
jg
jle
les
inc
imul
std
mov
hlt
mov
sub
mov
repz
cmp
imul
or
and
adc
or
jnp
scas
scas
shl
jbe
add
xchg
adc
jo
jbe
jmp
std
dec
popf
fimul
inc
xor
cmc
dec
sub
jbe
std
pop
loop
sub
sbb
out
popf
push
and
cmps
stos
jmp
cmc
(bad)
ss
rol
sti
adc
fistp
add
in
cwde
enter
mov
sar
mov
aad
stos
std
jl
rcl
sbb
or
or
xchg
sbb
arpl
or
lea
fs
cmp
push
neg
nop
scas
call
push
dec
scas
enter
mov
lds
inc
fwait
es
pusha
cmp
jnp
pop
or
xchg
mov
jo
inc
add
cmc
hlt
in
add
mov
jge
mov
popa
js
mov
mov
addr16
and
mov
stos
adc
cmp
cmp
mov
inc
mov
push
and
jle
or
adc
and
sub
outs
sysexit
pop
in
loopne
add
test
stos
int3
imul
mov
int3
xor
dec
pusha
out
jae
xor
outs
cmp
mov
or
in
shl
push
call
fwait
cs
jae
lds
xor
sub
aas
bound
stc
int3
es
inc
les
loope
mov
dec
adc
mov
imul
mov
repnz
test
ins
jmp
pop
push
adc
arpl
pop
xor
pop
ficom
or
add
ret
(bad)
xor
xor
lods
loop
or
lock
mov
stos
mov
and
sbb
sub
add
sub
push
adc
xchg
inc
xchg
loopne
ror
and
ins
or
leave
clc
push
out
mov
popf
add
test
jmp
cmp
sbb
mov
sub
sbb
aad
(bad)
(bad)
mov
pop
inc
lods
ret
inc
mov
inc
xchg
into
jns
fst
mov
ss
out
sub
cld
hlt
mov
and
mov
cli
inc
sub
adc
lock
(bad)
je
jns
push
dec
in
psubw
aad
inc
mov
lods
and
dec
loopne
push
scas
dec
jb
or
xor
mov
outs
inc
mov
imul
cmp
mov
push
pop
adc
cmc
sub
mov
ds
mov
adc
cmc
adc
push
in
mov
lods
mov
(bad)
push
inc
jbe
dec
xchg
pop
adc
cmp
fs
adc
stc
dec
cmp
pop
pop
repnz
ss
cs
out
(bad)
jb
stos
pushf
mov
cmc
xchg
test
add
sub
(bad)
stc
sub
xchg
pop
inc
fldcw
sub
lahf
push
movs
inc
pushf
cs
ins
cli
lods
loopne
pop
mov
add
retf
push
mov
lahf
and
xor
inc
je
fiadd
mov
das
sub
jge
test
inc
cli
mov
pop
add
mov
pusha
or
xor
push
pop
push
cmps
stos
cmp
sbb
(bad)
test
adc
mov
mov
or
push
stos
pop
in
and
(bad)
push
mov
leave
fild
push
int3
mov
pop
mov
inc
pop
movs
popa
xchg
call
out
je
addr16
sbb
mov
pop
xor
fcmovu
sti
scas
sbb
arpl
loop
pop
call
push
jb
push
sub
dec
push
mov
fimul
mov
sbb
cmp
pop
(bad)
je
imul
hlt
xchg
cmp
ins
(bad)
push
mov
or
fstp
cmp
pop
push
fidivr
out
mov
adc
inc
repnz
in
cmps
jmp
popf
xor
adc
push
and
jo
lds
aam
push
es
push
imul
ja
or
xchg
gs
cmc
or
cmp
pop
sbb
push
ins
pop
push
mov
inc
aam
adc
xor
mul
shl
and
dec
mov
sub
xchg
adc
push
and
or
aad
xchg
dec
sub
dec
mov
push
dec
loop
cmc
shl
test
sub
sub
jp
js
icebp
shl
sub
adc
in
jl
sbb
in
aam
in
push
int
jbe
movs
and
push
je
outs
mov
ja
shl
popf
fs
fst
lahf
daa
std
aas
xor
ins
cwde
lea
sub
mov
inc
sub
fwait
sbb
pop
pusha
lods
mov
test
cwde
xchg
xchg
push
iret
sahf
enter
push
and
mov
stos
sub
cmp
clc
push
push
(bad)
jl
cmp
mov
jg
xor
inc
jae
sbb
push
mov
in
adc
test
dec
dec
test
xor
jle
in
cld
nop
dec
aaa
or
ret
fcmovnbe
jnp
adc
dec
dec
rcr
push
pmulhuw
gs
loop
mov
adc
cmp
push
push
add
xor
icebp
sub
push
xchg
fwait
pop
lods
test
jno
push
mov
add
out
cmp
daa
loope
pushf
stos
in
daa
push
xor
leave
adc
leave
inc
sbb
(bad)
cmp
jb
(bad)
(bad)
sub
cmp
push
int
push
out
cmps
fstp
adc
retf
mov
adc
pop
lds
inc
adc
mov
nop
mov
sbb
sub
xchg
fldenv
movs
imul
aaa
dec
mov
mov
repz
mov
pop
xchg
xor
and
inc
sar
sub
in
fwait
outs
sbb
jge
leave
push
cmps
jmp
pop
lods
sbb
mov
mov
cmp
imul
xchg
cwde
jo
or
xor
retf
mov
dec
div
enter
retf
cmp
test
shr
jl
push
in
adc
add
stos
cmp
mov
or
or
jnp
call
ja
pmullw
mov
call
pushf
aas
(bad)
xlat
fstp
mov
adc
xchg
jne
sub
lea
dec
cmps
sub
or
leave
or
outs
xrelease
cmc
sub
leave
xchg
fidiv
xor
fldenv
out
movs
lahf
mul
xor
dec
enter
pushf
sbb
sar
inc
lahf
cmp
sbb
in
mov
je
test
(bad)
cld
pusha
lahf
lahf
out
pop
mov
ret
sahf
jb
pop
shl
retf
mov
les
out
xchg
pcmpeqw
push
pop
loope
push
in
mov
fimul
inc
inc
inc
mov
data16
sti
cli
popa
dec
in
pop
scas
fsubr
pshufw
mov
sbb
mov
sub
push
xchg
or
in
mov
sbb
test
push
jae
xchg
xchg
and
sahf
out
push
cs
mov
sti
cwde
rol
test
mov
cli
mov
mov
in
mov
dec
out
mov
dec
jge
mov
mov
mov
fld
cmps
sbb
jno
call
xchg
mov
cs
(bad)
or
cmps
mov
fstp
sbb
xor
sbb
or
scas
imul
out
jmp
push
test
xchg
mov
outs
nop
xchg
push
ds
ret
fbstp
outs
sbb
arpl
mov
xor
mov
or
adc
pop
inc
arpl
lock
pop
sbb
inc
inc
push
test
aad
frstor
inc
test
call
stos
pop
xchg
int
push
and
pop
outs
imul
daa
neg
and
xchg
xor
in
ss
jl
mov
or
mul
xor
mov
jmp
mov
or
sbb
jno
inc
repnz
dec
push
addr16
pusha
push
out
jge
inc
mov
xor
(bad)
(bad)
cli
daa
xor
scas
mov
in
out
mov
scas
aad
ins
js
scas
or
adc
addr16
scas
stc
cs
in
push
or
pop
mov
loopne
pushf
fld
movs
push
push
mov
cmp
movs
rcr
stos
dec
aad
or
shr
mov
mov
mov
jmp
xchg
iret
mov
(bad)
or
iret
xchg
std
ss
(bad)
das
stc
jo
mov
mov
sub
aad
nop
fild
push
lea
daa
add
adc
push
nop
rol
(bad)
inc
icebp
ror
xor
pop
cdq
or
sub
mov
fdiv
pop
sub
(bad)
inc
aam
hlt
sbb
and
cmp
or
adc
lods
inc
mov
cmps
or
clc
sbb
xchg
aad
call
in
mov
bound
push
test
(bad)
jnp
push
xchg
(bad)
imul
cmp
icebp
(bad)
and
xchg
or
push
jle
shl
xor
xchg
mov
mov
dec
out
setno
movs
push
pop
adc
gs
jle
add
and
push
in
xor
push
push
int3
dec
fdiv
fsubr
xchg
jge
cs
jmp
pop
sti
enter
sub
xchg
int
add
loopne
cld
out
sbb
adc
sbb
pushf
loope
cmps
ud0
stos
clc
adc
ror
sbb
mov
outs
pop
cmp
cmp
cmps
adc
push
dec
sar
jmp
sub
inc
sbb
fucomip
(bad)
jo
sti
das
leave
clc
ds
enter
mov
xor
xchg
ror
xor
fnstsw
xchg
nop
sub
movups
xor
or
jns
ret
jmp
call
lock
ss
dec
jle
inc
dec
shl
test
into
mov
out
mov
sbb
push
mov
and
push
popf
and
ins
pop
out
and
or
enter
mov
mov
iret
jle
iret
pop
neg
ja
test
repz
xor
mov
invd
cmp
xor
fsub
repnz
jge
hlt
imul
and
call
das
pushf
adc
enter
inc
stc
sub
fs
mov
sub
jg
(bad)
enter
and
add
add
out
js
pop
mov
add
sub
sub
ror
adc
cmp
out
btc
out
(bad)
fstp
mov
loop
fiadd
pop
fwait
test
fistp
sbb
in
rol
mov
adc
pop
nop
cmps
arpl
push
(bad)
retf
jb
and
add
adc
push
in
jo
stos
sbb
(bad)
xchg
or
xor
sub
cld
add
sar
sbb
add
sub
mov
pop
(bad)
adc
pop
rol
mov
xor
mov
add
not
xor
fild
retf
fcmovne
push
jno
les
mov
es
mov
cs
mov
rcl
push
dec
(bad)
fs
xchg
dec
xchg
dec
mov
jl
stos
jge
dec
inc
xor
lahf
ret
and
pop
dec
fadd
sub
add
mov
xor
mov
retf
fld
push
out
les
inc
movs
add
push
mov
and
mov
js
movs
or
inc
bound
rcr
jns
xchg
adc
gs
dec
vmread
xor
cmc
out
mov
dec
inc
loop
cmp
sbb
jo
ins
dec
add
cs
mov
add
mov
add
rcr
std
sub
push
aad
movs
dec
or
cwde
retf
ins
add
mov
sti
mov
test
movs
fs
and
jb
fisttp
sub
pop
jmp
cmps
xor
xchg
ins
dec
lea
(bad)
jmp
inc
xchg
and
(bad)
cmc
cdq
and
lds
cmp
jge
aad
jmp
mov
or
ds
inc
cs
(bad)
cmp
outs
xchg
call
pop
xor
jecxz
mov
mov
xchg
xchg
jmp
cmp
push
mov
in
mov
push
push
and
out
mov
in
in
or
outs
mov
jo
mov
outs
jmp
sub
pop
fisttp
xor
xchg
xchg
ds
add
sbb
cmp
aas
in
lahf
sbb
sub
push
ret
jae
in
push
and
popf
pop
les
ss
inc
pop
and
dec
in
cmp
lock
cmp
es
xchg
jo
push
jge
and
and
xor
add
iret
sti
aam
(bad)
mov
pushf
and
loopne
jnp
mov
call
dec
pop
(bad)
fild
mov
mov
into
cdq
fnstenv
pop
jmp
fsub
pusha
test
sbb
mov
mov
sbb
int3
xchg
add
in
out
push
jg
das
xchg
sbb
test
or
and
cpuid
shl
enter
scas
adc
iret
mov
sub
and
jnp
xchg
fwait
push
loop
push
je
add
pop
mov
mov
les
(bad)
shl
imul
or
ss
shl
or
aas
in
stos
xor
xchg
pop
push
dec
popf
push
aaa
sar
dec
adc
into
jne
mov
xor
mov
inc
dec
adc
push
das
xchg
mov
lea
and
ret
repnz
sti
bound
ja
leave
in
imul
imul
(bad)
cli
jp
mov
lods
out
or
not
push
inc
scas
push
adc
add
ds
aaa
fs
jnp
adc
jl
jp
sahf
pop
js
add
pop
jge
sub
test
pusha
cmp
dec
aaa
mov
cmp
sub
dec
xchg
shl
jle
and
or
cs
sti
nop
mov
in
(bad)
cwde
ins
es
hlt
add
sub
push
fdiv
movmskps
bsr
daa
loopne
sub
lods
aad
mov
ins
ret
repz
inc
call
mov
sar
mov
mov
or
nop
adc
push
aaa
data16
jae
rcl
shl
mov
fistp
push
inc
ins
jno
cmp
(bad)
push
dec
push
mov
cmp
jg
and
mov
jb
inc
cld
js
jecxz
sbb
jp
and
rol
mov
dec
cmp
mov
pusha
imul
test
xchg
adc
ret
(bad)
pop
adc
and
add
je
mov
in
push
sub
jns
pop
cmps
lds
loope
adc
jg
jecxz
cmp
fcom
push
popf
xlat
rol
les
xor
mov
(bad)
jmp
dec
push
pushf
xor
push
loop
das
in
sbb
mov
(bad)
hlt
sub
push
cld
pusha
fs
push
push
mov
pop
gs
mov
dec
add
xchg
int3
or
pop
push
aad
push
out
aad
rcl
push
lds
out
setbe
mov
add
popf
shl
lds
add
jnp
xchg
test
es
adc
cmps
push
push
push
mov
add
adc
inc
rcl
div
cwde
test
sub
mov
fcompp
mov
fldenv
daa
xchg
push
ja
pop
push
push
dec
sahf
xlat
jnp
jb
cmp
mov
pop
jp
je
in
cdq
mov
je
mov
into
aas
imul
pop
adc
inc
fidivr
jnp
push
js
lods
dec
stc
sub
ret
jnp
jg
ins
aad
rol
into
(bad)
pop
sbb
test
mov
fbstp
and
fmul
out
inc
push
outs
cld
pop
push
and
xchg
push
or
pop
inc
pop
sbb
mov
enter
stos
icebp
int
pop
inc
jo
fist
je
inc
sar
(bad)
shl
call
xchg
(bad)
mov
jns
fmul
loope
test
adc
inc
sub
push
sbb
mov
xchg
mov
fidiv
jle
mov
outs
test
stos
jnp
mov
ror
fwait
push
push
pop
cmp
add
inc
push
loopne
nop
std
jb
push
(bad)
or
enter
xor
mov
scas
stc
xor
xor
(bad)
mov
mov
dec
out
jbe
sbb
loope
fldcw
in
inc
lahf
aas
sbb
mov
xchg
mov
cmp
test
leave
mov
adc
std
scas
mov
sbb
stos
and
imul
stos
iret
retf
das
hlt
daa
pop
cmps
into
and
jle
push
jmp
adc
xor
and
lea
sub
das
add
sbb
mov
ins
(bad)
daa
ror
mov
gs
sub
mov
push
push
(bad)
in
loop
shl
inc
pop
mov
xor
lds
test
xor
pop
add
xor
inc
push
ins
mov
leave
inc
and
jmp
mov
xchg
in
retf
ret
aaa
outs
jl
gs
sbb
test
push
ror
xchg
or
lock
jecxz
loop
neg
inc
(bad)
(bad)
mov
sub
pop
inc
adc
pop
aaa
stos
push
scas
es
popf
iret
call
mov
sar
mov
add
ret
sub
or
mov
(bad)
ins
cmp
cwde
sub
test
mov
(bad)
dec
pop
fisubr
adc
pusha
and
fcmovnbe
cmp
lahf
popa
fwait
mov
pop
xchg
stos
scas
xchg
call
xchg
or
sbb
push
(bad)
retf
and
icebp
sbb
imul
pusha
xor
sbb
mov
sbb
jg
sar
in
xor
xor
retf
inc
sbb
push
pop
stos
pop
mov
ror
jb
out
outs
mov
fistp
fbld
pop
lods
adc
in
neg
gs
jecxz
out
push
mov
push
in
mov
inc
or
daa
push
aas
js
mov
mov
mov
mov
cmp
je
sub
mov
fwait
xchg
dec
(bad)
adc
push
ja
and
mov
sub
aaa
stos
mov
cli
jo
push
fist
push
xor
xor
jmp
xor
out
cwde
(bad)
idiv
pop
retf
test
cmp
and
repnz
std
fadd
repnz
sub
xchg
push
es
in
daa
sub
stos
cmp
or
cmp
pop
lahf
or
ret
fiadd
hlt
cmp
mov
stos
sub
and
or
add
sbb
pushf
ret
cld
fwait
push
sbb
mov
mov
loopne
imul
adc
outs
mov
sub
ins
stc
ret
ja
imul
push
daa
stos
icebp
mov
shl
xchg
sub
ins
sbb
and
mov
pop
jecxz
xlat
popf
(bad)
test
or
add
cwde
mov
push
sahf
xchg
pop
in
jno
dec
stos
xor
dec
cmp
popa
std
and
inc
loopne
dec
jle
push
xchg
jbe
sub
jge
push
inc
into
push
add
mov
call
pop
out
daa
adc
xchg
jmp
test
dec
pop
outs
and
xlat
pop
and
not
push
jbe
std
xchg
pusha
dec
sub
xchg
fnstsw
sti
rcl
mov
cs
(bad)
jnp
sbb
test
sbb
xor
jno
or
jo
push
xchg
mov
push
outs
jae
js
xchg
mov
pop
mov
xor
jmp
add
fldcw
or
mov
(bad)
mov
push
sub
mov
(bad)
push
and
cmp
jb
fmul
inc
jecxz
pop
(bad)
out
cli
mov
int
daa
and
aad
mov
stos
shl
lods
lds
push
or
adc
cmp
scas
iret
push
inc
ja
aam
ss
stos
mov
popa
mov
xchg
and
add
inc
jmp
in
sub
mov
xchg
ins
ins
push
xchg
push
data16
stc
jmp
sub
sbb
sbb
iret
sub
cmps
adc
fcmovbe
repz
bnd
pop
lock
ror
movs
pop
retf
scas
retf
rcl
enter
jb
inc
mov
test
sbb
cwde
push
adc
mov
fidivr
(bad)
push
movd
sbb
test
xchg
hlt
mov
dec
(bad)
fsub
iret
inc
push
sahf
sub
or
and
jae
push
gs
stos
fdiv
inc
xor
push
out
(bad)
icebp
(bad)
fist
(bad)
jmp
cmp
movs
sub
in
cmps
cli
sub
dec
and
dec
stos
and
cmp
call
cmp
mov
movs
mov
ja
sar
pop
add
fadd
std
pop
cmp
xchg
movs
out
mov
inc
push
pop
cmp
jmp
xor
pop
push
fild
push
inc
jmp
clc
inc
popa
and
out
shl
add
sbb
jmp
add
cs
xchg
sahf
dec
test
in
add
xchg
jnp
mov
pop
fisttp
sbb
test
inc
jl
aam
push
das
fiadd
xchg
add
mov
std
mov
sub
lods
and
add
sti
inc
ror
xor
aaa
lahf
fucomip
dec
scas
les
add
mov
pop
adc
pop
dec
jno
pop
shr
xlat
and
iret
lods
fucomip
fcmovne
in
jne
aas
cmp
xchg
mov
div
fidiv
(bad)
or
movs
sti
push
mov
jno
sti
sub
mov
pop
jge
pop
dec
mov
pushf
imul
ror
int3
sub
and
mov
or
(bad)
xor
ficomp
add
add
or
jecxz
sbb
adc
lods
rcr
enter
int
adc
ds
mov
xchg
add
mov
cmp
mov
add
push
xchg
add
pop
cmp
addr16
jbe
sbb
push
adc
sub
mov
pop
jns
pop
dec
sbb
cmp
xchg
push
(bad)
fist
scas
imul
pop
sub
and
pop
fdivrp
jns
in
nop
cmp
jle
lahf
fimul
call
push
sahf
dec
xor
add
mov
pcmpgtw
mov
test
cmp
fwait
or
pop
or
xchg
adc
popa
dec
sbb
adc
adc
mov
(bad)
mov
in
xchg
pop
push
outs
sbb
jae
sub
jle
sub
or
aas
fadd
loope
bnd
out
mov
jmp
mov
push
inc
(bad)
std
test
int
cmp
pop
sub
mov
rcr
in
push
sbb
call
arpl
pop
pop
cmp
mul
xchg
mov
(bad)
cdq
or
loopne
rcr
shr
pop
inc
pop
es
mov
(bad)
push
fdivp
xor
mov
dec
mov
dec
inc
mov
add
and
fsubr
adc
lds
clc
and
sti
ds
scas
test
sub
or
push
jo
call
sbb
adc
dec
mov
sbb
aaa
pop
fxtract
fild
in
and
push
and
cmps
dec
push
mov
pop
mov
xor
mov
retf
xor
out
gs
movs
ds
xor
pop
pop
xchg
repnz
retf
(bad)
sahf
mov
inc
xchg
mov
mov
movs
mov
pop
add
call
push
xchg
shl
inc
aaa
cmps
jb
cdq
sti
in
push
cs
ins
add
add
sub
into
(bad)
in
retf
sbb
into
cmp
mov
daa
cmps
ja
rol
(bad)
dec
lods
pop
adc
lods
sub
jb
dec
pushf
mov
pop
in
mov
pop
(bad)
neg
xor
sbb
sbb
iret
loope
stos
inc
fdivr
pop
or
jecxz
jns
inc
mov
cwde
gs
cmp
adc
sahf
inc
inc
dec
jo
push
sbb
xor
das
jns
loopne
pop
mov
movs
lgs
fdivp
jecxz
sbb
push
arpl
jmp
dec
mov
mov
and
add
lods
xor
outs
outs
int3
ja
repnz
pop
sti
aas
shl
inc
mov
loope
dec
mov
push
rcl
cmps
mov
or
mov
xchg
in
xchg
cmps
push
pop
xchg
mov
(bad)
fcom
(bad)
fadd
sar
pushf
test
xchg
jle
outs
jne
dec
dec
je
jmpw
add
test
mov
push
sub
sti
mov
int3
push
out
ins
mov
pop
pop
add
cmc
cmp
stos
jmp
add
sub
sbb
pop
mov
pop
lea
test
out
imul
mul
xchg
mov
rcl
sub
and
adc
xchg
xor
stos
cmc
jecxz
retf
mov
mov
add
in
push
call
push
loope
cld
cmp
pop
cmps
adc
retf
push
pop
add
cmp
xor
mov
(bad)
mov
mov
sbb
leave
in
push
daa
mov
aas
xlat
movaps
(bad)
and
inc
neg
test
adc
push
inc
dec
les
sub
fucomip
ror
retf
add
or
cmp
mov
and
imul
cmps
ins
in
cmp
dec
aaa
inc
dec
call
in
scas
xor
sbb
retf
sub
cmp
movs
lea
inc
sti
xor
es
fild
mov
mov
jbe
mov
xor
fmul
jne
jle
mov
(bad)
into
and
adc
outs
mov
shl
les
aas
push
mov
mov
xchg
add
gs
into
xor
or
cmp
gs
mov
mov
jno
xchg
iret
cmps
addr16
mov
stc
sub
and
jmp
dec
mov
sub
es
cld
or
lds
mov
xor
inc
mov
retf
mov
enter
les
jbe
mov
mov
(bad)
fs
cmp
cmc
loope
sub
repnz
pop
bound
in
pop
loope
stos
xor
ss
push
sub
cmp
xchg
movs
cld
rcr
jle
test
sbb
cmp
add
push
pop
xor
loopne
push
fs
cmp
inc
cmps
sbb
push
push
add
stc
and
rcl
push
movs
jmp
cmp
push
jmp
outs
cmc
fwait
enter
mov
jnp
pop
aaa
sub
cmp
es
jb
mov
mov
mov
xlat
shr
inc
cmp
sbb
ret
test
cmp
iret
xchg
cwde
xor
mov
pop
or
lock
movs
mov
xchg
jns
dec
and
pop
in
add
push
inc
jg
sub
and
mov
out
push
in
inc
fwait
cmp
fbld
cmc
push
add
jae
test
repnz
sub
imul
mov
hlt
jge
dec
ja
push
jecxz
or
jae
sub
inc
hlt
(bad)
mov
push
loope
jle
std
pavgw
fdiv
jge
ja
adc
mov
and
in
enter
imul
pop
add
cdq
aad
arpl
sahf
pop
mov
not
rcl
pop
and
mov
gs
push
add
push
(bad)
imul
or
lock
test
jno
pop
cmc
shld
mov
int3
stc
or
ret
add
out
sbb
push
outs
jbe
dec
test
mov
es
xchg
inc
push
aaa
in
retf
pop
adc
add
in
sti
pop
xor
imul
fsubr
frstor
mov
sbb
and
and
lock
xchg
sbb
std
out
aad
mov
adc
and
mov
fsubp
inc
and
push
jge
lock
daa
cli
mov
dec
sbb
pop
lods
adc
sub
push
mov
data16
scas
dec
lea
xchg
shl
dec
bound
out
xchg
xor
mov
xchg
lahf
popa
ret
pushf
mov
retf
jp
je
out
les
rcr
mov
scas
adc
mov
outs
(bad)
mov
dec
jo
test
int3
add
pop
lds
mov
(bad)
xor
or
push
mov
xor
or
push
push
xor
push
pop
push
cmp
adc
mov
add
sub
dec
scas
mov
aas
(bad)
sbb
cmp
mov
aam
scas
mov
cwde
out
sub
xlat
cmp
sbb
(bad)
enter
push
cmp
fstp
cs
push
mov
pop
imul
sub
mov
and
mov
loop
das
mov
in
sub
xor
and
(bad)
fisubr
movs
push
push
dec
mov
in
iret
rcr
std
pop
xchg
mov
test
xchg
mov
dec
nop
adc
jb
mov
loopne
xchg
ins
push
push
outs
imul
dec
in
or
sbb
and
pushf
rcl
cdq
mov
sub
adc
xchg
push
push
push
rol
shl
lods
test
xor
ins
jo
add
mov
xchg
repnz
imul
retf
push
and
dec
addr16
loope
push
dec
mov
jb
sbb
jbe
fdivr
mov
mov
add
mul
push
push
jns
mov
scas
sbb
test
xor
xor
add
stc
jmp
cmps
call
repnz
outs
rcr
push
ins
jns
pop
aam
mov
jmp
sub
dec
aam
inc
adc
repnz
mov
xchg
fs
fcomp
push
ins
sbb
or
mov
out
(bad)
dec
add
pop
fist
cmp
repz
pop
cs
retf
jle
outs
daa
(bad)
ss
jge
nop
jbe
rcr
push
jo
or
push
or
ror
cmps
sahf
aad
into
movs
mov
outs
add
inc
cmp
push
and
xor
pop
push
rol
jl
xor
sub
hlt
jnp
(bad)
loop
xlat
jae
in
int
or
and
add
icebp
xor
iret
jmp
arpl
out
int3
(bad)
fld
call
inc
xchg
and
stos
cmp
jns
sub
dec
jg
mov
lock
int3
pushf
cld
stos
mov
rcr
stos
mov
adc
aas
dec
lock
and
mov
lods
(bad)
add
sub
fstp
aas
jnp
jbe
mov
cmp
dec
mov
in
dec
jge
mov
push
or
out
cmp
adc
fisttp
mov
mov
push
inc
mov
stos
inc
xor
sbb
and
cmp
and
outs
imul
adc
adc
arpl
mov
ins
adc
in
sbb
in
or
add
imul
rol
and
outs
inc
push
fld
pop
pop
ret
cdq
jo
in
fld
sub
cmp
ficomp
sub
idiv
in
fidivr
popf
popf
cmps
pushf
cmps
adc
pushf
mov
jmp
mov
or
mov
jecxz
cs
ret
test
jbe
nop
bound
or
test
xchg
shl
mov
pop
and
lods
pusha
push
or
inc
lock
xor
pushf
ret
les
or
shr
ret
sbb
pop
and
shl
out
or
adc
retf
jb
xchg
hlt
mov
fcomp
sahf
cmps
outs
inc
mov
jecxz
outs
add
mul
dec
jle
xchg
lock
fwait
ja
xor
push
and
sbb
das
push
jno
add
cmps
pop
or
fidivr
(bad)
repz
push
adc
fwait
xor
addr16
fist
addr16
mov
push
jns
or
inc
enter
iret
std
aaa
in
loope
pop
daa
mov
cdq
loope
dec
mov
bound
aam
jns
sub
mov
xor
daa
pop
pushf
xchg
sbb
inc
adc
xchg
and
mov
ins
fisttp
push
mov
jae
and
cmp
rol
clc
and
in
int
int3
fbstp
mov
xchg
cld
add
pop
jns
xlat
jno
arpl
stos
or
jge
pop
jbe
add
pop
xchg
adc
mov
jbe
rcr
in
mov
cmp
stc
in
sahf
inc
cmpneqps
leave
xor
mov
jp
lahf
jecxz
sbb
add
aam
xchg
cdq
add
ins
retf
mov
sbb
stos
aaa
fnstcw
mov
loopne
mov
add
cmp
mov
push
xchg
sti
fnstenv
cmp
pop
push
inc
jg
daa
cli
sub
xchg
(bad)
in
mov
xor
scas
fdivp
and
inc
loope
cmps
out
cdq
test
sahf
sahf
or
clc
std
popa
lds
gs
sbb
xchg
push
sahf
setnp
mov
scas
dec
std
cld
adc
int3
jmp
sahf
jb
push
mov
cmps
test
outs
cmp
data16
dec
sbb
je
inc
mov
jg
xchg
jge
sahf
inc
push
fdivr
(bad)
mov
in
mov
push
jo
inc
push
pop
icebp
mov
jl
and
sub
repz
inc
xor
iret
scas
mov
pop
gs
cdq
popa
sub
dec
push
xor
stos
mov
(bad)
jl
icebp
xor
sbb
jb
dec
popa
lods
jmp
outs
shl
fist
mov
push
shl
cmps
in
or
in
out
mov
test
(bad)
jmp
cmp
mov
sbb
dec
iret
mov
mov
push
cwde
cmps
cmps
inc
push
retf
jge
pop
ja
cmp
call
xchg
pop
sar
xchg
mov
dec
push
nop
push
xor
scas
test
frstor
adc
test
or
repnz
(bad)
stc
push
popa
sbb
jp
adc
jmp
pop
mov
lods
add
repz
sub
ds
mov
fwait
jg
in
not
mov
jl
and
out
cmp
movs
and
pusha
fcmove
clc
mov
sti
out
pushf
mov
aam
adc
scas
pop
push
scas
dec
out
(bad)
fild
dec
movs
test
out
(bad)
pop
cs
jle
mov
addr16
add
pop
iret
dec
jno
or
out
push
cld
xor
cwde
adc
rcl
mov
not
jp
jle
mov
rcl
xor
cmp
(bad)
or
mov
jp
out
adc
push
push
mov
mov
fmul
dec
(bad)
shl
test
pop
loopne
out
xor
xor
int3
mov
cmc
inc
or
sub
or
aas
pop
je
jge
test
mov
inc
fsub
push
dec
add
fs
cmps
cli
enter
das
sbb
std
lods
cs
add
leave
jbe
fwait
mov
fwait
test
pushf
int3
push
pop
mov
test
test
popf
xor
pushf
pop
icebp
mov
shl
sub
pop
mov
mov
inc
or
loop
adc
test
pop
xor
mov
(bad)
es
mov
xor
cmc
ret
dec
fdiv
xchg
popf
xchg
push
div
pop
push
adc
aam
push
fisub
sub
jb
adc
fbstp
push
jns
jmp
dec
and
inc
arpl
xor
fstp
mov
mov
push
and
mov
cli
jno
ret
bound
out
sti
ins
xor
retf
stos
mov
lock
xchg
pop
popf
jne
inc
sub
cs
jne
int
lods
fucomip
repnz
mov
daa
xchg
xlat
mov
mov
ds
push
outs
xchg
mov
mov
in
repnz
fsubr
mov
mov
mov
fbstp
mov
add
and
pushf
xchg
bound
push
ret
cmp
test
pusha
in
and
jb
pop
inc
aaa
xchg
aas
pop
aaa
push
(bad)
dec
popf
pop
mul
cs
mov
shr
jg
lahf
sub
ss
stc
test
cmp
mov
(bad)
aam
add
out
pop
cmc
pop
xchg
xlat
push
push
(bad)
push
pop
mov
push
pop
idiv
pop
into
unpcklps
cdq
push
mov
lock
and
inc
xchg
icebp
mov
pop
adc
icebp
pop
(bad)
mov
bound
out
sti
mov
or
xor
sti
push
add
sti
inc
out
cmp
fistp
push
fist
gs
test
in
and
jo
push
aaa
cmp
sbb
fidivr
cmp
jp
rcr
jb
push
outs
adc
or
out
stc
mov
and
jb
loope
rcl
cmp
imul
call
stc
movs
and
loope
cmp
dec
leave
scas
xchg
dec
or
aam
mov
stos
repz
pop
xor
scas
in
dec
(bad)
fbstp
mov
out
dec
mov
mov
dec
sahf
xchg
xchg
outs
arpl
pop
sub
pop
jb
add
cmp
fldcw
out
sbb
xchg
(bad)
xor
adc
loope
das
mov
pop
push
adc
dec
cmp
inc
add
popf
inc
pop
addr16
jle
xchg
push
inc
sahf
mov
stos
xchg
js
jne
mov
pop
(bad)
pop
out
daa
push
jne
adc
mov
pop
cmp
pop
je
mov
jp
xor
inc
iret
fwait
jns
jmp
add
adc
sub
aas
sub
pop
inc
and
jl
push
mov
in
mov
xor
out
xchg
fcomi
push
xor
pextrw
dec
xor
test
jne
mov
popa
jns
(bad)
stos
sbb
pop
in
pop
dec
and
push
push
sbb
shl
adc
add
loopne
push
imul
enter
cmp
seto
xchg
addr16
lea
xor
aad
into
lods
xor
adc
adc
mov
movs
out
cmps
test
test
shr
xor
retf
mov
ins
cli
lods
popf
sbb
out
out
xchg
cmps
pop
or
adc
rol
std
iret
aaa
lods
out
inc
sbb
aaa
push
repnz
sub
push
aam
fmul
rol
jmp
cmp
mov
dec
adc
xchg
popa
and
(bad)
xchg
cmps
sub
iret
jae
lock
add
xchg
and
fadd
cmps
mov
xchg
pop
imul
aam
or
jl
pop
cmp
int
push
in
(bad)
lock
push
(bad)
pop
push
lods
int3
pop
xchg
mov
adc
jns
jp
gs
clc
mov
ins
lods
gs
sar
and
movs
stc
xor
rol
adc
cli
and
sahf
das
ins
ret
and
sub
inc
xchg
xor
popa
jnp
stos
int
sbb
enter
ds
out
pushf
jle
jmp
sub
in
js
and
jo
inc
imul
mov
inc
cmove
aam
lods
xor
sti
imul
test
adc
in
add
cmps
push
cmps
dec
lock
je
xor
xor
enter
pop
scas
mov
pop
xchg
xor
int
xor
mov
mov
and
dec
dec
stc
xchg
nop
cwde
fwait
xchg
outs
mov
aam
adc
push
pusha
inc
mov
cmps
mov
loop
pop
push
adc
jb
ret
outs
xchg
pop
and
xchg
in
(bad)
repnz
inc
ret
pushf
adc
add
bound
cmp
mov
out
fmul
dec
rcr
push
and
inc
aad
xchg
pop
cmps
lock
jo
rcr
mov
leave
outs
nop
jae
push
xor
pop
jp
jp
loope
lds
iret
bound
pop
push
lods
mov
mov
inc
sbb
mov
push
retf
push
imul
setne
nop
nop
sbb
xchg
lods
sub
lods
mov
pop
(bad)
cmps
lods
sbb
fadd
or
adc
mov
push
lahf
jbe
rcr
cmp
fbstp
adc
cli
or
inc
es
idiv
daa
jecxz
or
jne
pop
leave
int3
popa
mov
test
ss
mov
sub
adc
vphaddbd
or
imul
daa
push
xor
add
cmps
cdq
sbb
adc
mov
inc
jl
stos
mov
mov
pop
test
addr16
jmp
xlat
xchg
lock
push
jne
js
dec
or
sbb
jae
inc
add
enter
div
imul
shl
lea
xor
push
shl
pusha
stc
jb
xor
and
adc
bound
dec
xor
sbb
(bad)
inc
push
pop
or
popa
in
xchg
xor
cmp
jmp
mov
aad
fcmovnb
adc
dec
sahf
ds
pop
ins
xchg
cmp
(bad)
ror
push
retf
sbb
mov
mov
jo
mov
call
jns
pusha
pusha
fsub
fimul
pop
cmc
lea
push
pop
mov
int3
mov
dec
sub
(bad)
push
inc
add
sbb
xchg
jmp
jno
sbb
daa
jmp
cmps
mov
and
call
xchg
jmp
sub
shl
inc
les
test
sub
arpl
or
mov
adc
or
test
or
sub
sbb
inc
cmps
js
nop
xor
hlt
das
xor
adc
mov
mov
mov
push
int
lods
in
and
(bad)
push
xor
mov
cdq
mov
fdiv
adc
jbe
push
daa
pop
mov
push
stos
dec
nop
push
int3
ret
rol
mov
push
(bad)
sbb
add
sub
add
push
inc
jb
jg
pusha
push
mov
(bad)
fcomip
push
mov
imul
mov
loope
add
sahf
repz
sbb
sub
push
(bad)
mov
sbb
ret
xchg
sti
cmp
arpl
lods
out
adc
rcl
in
fdivr
xchg
mov
push
jmp
inc
mov
mov
repnz
int
or
xor
cs
test
and
sbb
into
out
jl
cmc
out
jo
or
lds
xchg
test
jl
(bad)
xor
mov
imul
daa
in
push
xor
inc
inc
inc
in
in
clc
out
fldcw
popa
cmc
out
rol
or
daa
adc
out
hlt
xor
jle
out
push
ror
pop
stc
test
fst
aad
out
xor
sub
outs
outs
bound
repnz
xchg
data16
jl
push
sbb
movs
jne
push
or
test
aas
out
dec
push
gs
adc
test
ja
pusha
mov
add
call
and
ret
scas
sub
js
(bad)
lods
je
xor
in
xchg
jo
in
je
out
fcomp
ja
jmp
xchg
(bad)
(bad)
(bad)
rcr
dec
icebp
(bad)
cwde
inc
dec
lods
jbe
(bad)
or
sub
fmul
mov
mov
clc
test
das
imul
or
sbb
inc
add
pop
repz
pxor
sub
lds
ss
jg
jne
cld
pop
cmp
ret
int3
sbb
ins
popf
loope
adc
in
test
std
mov
enter
iret
pushw
mov
sub
rol
fld
jbe
sahf
sahf
jbe
cld
dec
(bad)
push
pop
push
mov
int3
inc
test
mov
retf
retf
nop
pop
fld
out
iret
jp
mov
and
inc
data16
mov
push
and
push
mov
sahf
cmps
dec
and
mov
push
(bad)
xchg
mov
sbb
mov
out
and
dec
adc
fnstenv
push
mov
ins
dec
imul
fs
add
jae
fwait
jecxz
sbb
js
aam
leave
cld
fstp
jmp
cld
movs
add
adc
inc
adc
jnp
movs
jl
sbb
push
pop
fyl2x
push
xchg
sbb
inc
xor
push
scas
aas
sti
movs
daa
leave
bound
sub
js
dec
(bad)
mov
rcl
loope
movs
stc
mov
not
out
sbb
retf
jl
inc
(bad)
push
ds
imul
lahf
out
dec
inc
cmps
sbb
dec
lods
inc
xor
stos
lods
call
out
pushf
repnz
shr
lds
jb
cmp
pusha
js
inc
xchg
lock
movs
dec
xlat
cs
mov
(bad)
aam
mov
jo
out
xor
mov
or
or
mov
xchg
dec
rcl
or
inc
ror
pusha
jno
jmp
mov
xchg
dec
mov
lods
aaa
fnstsw
xlat
call
pushf
pop
sub
test
mov
cmp
mov
mov
push
or
(bad)
jb
pop
aas
aas
pop
dec
jl
jnp
mov
mov
sub
ds
mov
cmc
inc
test
sahf
mov
and
push
in
out
lods
imul
pop
pusha
and
xor
ds
sar
fcomp
push
sub
push
(bad)
push
cdq
ins
mov
jmp
sub
or
xor
leave
imul
ss
sti
jp
outs
fstp
sub
push
jl
jge
adc
inc
or
js
jmp
xor
jl
jno
ss
movs
test
fild
aas
and
ins
stos
adc
test
repnz
sar
scas
or
(bad)
push
and
dec
inc
ja
sub
imul
adc
dec
ss
xlat
mov
dec
cmp
lods
jg
aam
add
xchg
push
add
sbb
sbb
fisubr
mov
adc
movs
fidiv
and
test
push
and
cmp
nop
add
pop
push
aas
test
cmp
iret
nop
(bad)
popa
pop
cwde
mov
fild
push
xor
(bad)
fldcw
pushf
pop
mov
and
ja
mov
xchg
sbb
adc
jmp
inc
push
mov
jp
fwait
xor
cmps
sbb
pusha
push
loopne
dec
lock
add
clc
and
or
repnz
fild
pop
or
sbb
adc
aad
loopne
mov
or
or
shl
sub
mov
xchg
bound
sub
mov
in
mov
xor
scas
inc
add
je
ins
jle
mov
aam
jge
inc
jmp
push
sbb
dec
cdq
xchg
cmp
popa
xchg
int3
out
dec
jbe
cmp
mov
sahf
cwde
daa
test
int
call
xor
mov
dec
add
push
sub
sar
iret
into
imul
adc
mov
jmp
push
or
jo
hlt
xchg
jg
aad
pop
mov
movs
ret
in
push
neg
shr
sbb
mov
mov
or
xor
or
nop
fwait
das
pop
(bad)
mov
fwait
arpl
fadd
cdq
(bad)
fs
xchg
int3
push
inc
scas
(bad)
in
cld
inc
xchg
xchg
jmp
xchg
mov
pushf
loopne
mov
cmp
and
or
jbe
pop
jmp
les
jg
out
xchg
fwait
or
test
pop
(bad)
mov
xor
jmp
jle
mov
mov
or
(bad)
dec
xor
push
push
call
inc
sar
jecxz
jne
jb
jae
pminub
mov
fbstp
mov
std
sbb
mov
sar
outs
mov
or
(bad)
pop
mov
jl
mov
sbb
call
inc
fcom
sbb
retf
test
pusha
sar
ja
inc
cmp
cmp
sub
push
xchg
gs
add
popf
daa
imul
mov
fwait
push
mov
imul
outs
movs
pop
mov
or
jmp
cmp
jnp
(bad)
pushf
clc
cld
lods
sbb
inc
cmp
imul
les
mov
data16
xchg
(bad)
jg
mov
and
sub
in
push
ret
adc
push
push
mov
inc
cmp
mov
jge
fs
stc
(bad)
lods
xor
add
popa
push
adc
mov
out
es
sub
xchg
mov
aas
int
push
add
enter
das
jo
retf
jle
pop
pop
popf
data16
add
sti
cmps
jmp
idiv
fistp
jmp
test
dec
call
push
xor
stos
sbb
movs
add
aad
adc
pop
cmp
out
cmp
shl
jg
or
leave
add
data16
or
mov
xchg
xor
out
test
or
pop
cmp
inc
inc
popa
add
add
pop
fptan
push
imul
pushf
sbb
sub
mov
xchg
xor
xor
pop
rol
jge
xor
mov
mov
inc
loop
mov
pop
call
xchg
imul
push
std
jno
fidiv
xchg
mov
jl
(bad)
pop
lods
sbb
cvttps2pi
(bad)
icebp
enter
scas
xchg
or
fchs
mov
xchg
adc
or
cmps
or
in
mov
sub
out
pop
mov
or
mov
loop
and
dec
cs
repnz
shl
mov
fild
pusha
or
ss
or
in
addr16
mov
je
push
xchg
nop
outs
jbe
imul
and
pusha
fdiv
inc
jge
cld
sbb
movs
repz
sbb
cmp
loop
dec
inc
or
dec
sub
retf
les
stc
das
push
jns
cmp
adc
inc
ret
push
lock
aam
inc
cs
enter
ror
jecxz
repnz
mov
rcl
pop
mov
out
pop
dec
mov
adc
mov
inc
div
loope
out
lods
jp
sub
(bad)
ficomp
jnp
fist
add
cli
mov
ja
cmp
mov
inc
sbb
lahf
jge
pop
(bad)
cmps
enter
pop
les
push
sbb
inc
push
cld
stc
sbb
popw
dec
int3
jge
scas
adc
push
sti
pop
mov
fnstenv
movs
jae
xchg
imul
add
jbe
pop
or
push
cli
jecxz
je
int3
test
dec
mov
rcl
mov
fistp
jo
inc
int3
std
jmp
xor
pop
dec
push
or
gs
leave
call
int3
adc
push
scas
cmp
mov
or
mov
jg
jg
retf
push
sahf
sub
mov
inc
in
lar
xor
test
data16
aaa
push
std
add
cs
je
mov
push
jg
ror
sahf
xor
scas
jno
xor
push
xor
stc
test
or
xchg
pop
jecxz
jge
test
mov
dec
popf
das
jecxz
pop
add
movs
in
in
mov
xchg
push
(bad)
gs
xchg
cld
mov
cmp
cld
call
sub
js
cmp
sbb
xlat
or
pop
ds
mov
scas
in
loope
adc
sub
in
dec
daa
add
ins
mov
sbb
and
add
popa
mov
test
and
mov
and
rcl
sub
mov
retf
loop
cmps
xchg
sub
pop
nop
dec
jae
loopne
(bad)
js
mov
jnp
sahf
adc
mov
mul
xor
inc
inc
shl
inc
and
dec
jae
and
add
and
cwde
scas
jo
fst
fcmovnb
inc
ja
cmc
ds
mov
test
jae
cld
add
addr16
sub
mov
push
daa
xchg
mov
and
test
push
adc
ret
daa
jns
ds
inc
push
sub
push
es
jp
cmp
into
inc
jg
mov
out
lock
test
rcr
lock
retf
cmps
and
mov
call
nop
inc
scas
mov
aaa
adc
inc
sahf
inc
cmp
push
(bad)
hlt
popf
loop
xchg
addr16
fsub
sti
dec
stos
xor
xor
fnstcw
test
add
out
aaa
das
std
fimul
pushf
mov
adc
and
cmps
add
rcl
jmp
xor
fwait
int3
mov
mov
xor
jmp
add
lods
ror
jno
sub
scas
inc
std
push
es
jge
add
dec
xchg
pop
aam
out
ret
div
jge
mov
stc
fwait
mov
out
dec
je
and
int
jbe
sbb
sbb
fmul
test
test
dec
inc
out
outs
push
adc
sbb
add
mov
cwde
cwde
cmp
aam
pop
ja
(bad)
cmc
sub
cmp
rcr
lods
lahf
cmp
or
shr
jno
dec
mov
mov
fwait
ret
dec
xor
dec
ss
add
mov
xor
int
inc
mov
dec
sub
xor
dec
mov
jge
sub
cmps
sar
dec
inc
ror
push
ins
inc
jle
or
inc
or
xor
ret
lock
mov
pop
pop
fimul
push
xlat
add
xor
or
inc
pop
jns
jnp
out
cmp
adc
jne
pop
sbb
out
lds
rcr
mov
inc
(bad)
lock
xor
ds
add
push
and
movs
jbe
mov
jbe
out
inc
inc
lods
je
fimul
cmp
daa
push
icebp
inc
cmp
int
jae
fcmovnbe
mov
mov
jno
(bad)
dec
mov
push
sbb
data16
and
cwde
idiv
sbb
sbb
mov
sub
popf
sbb
push
or
and
push
cmp
fld
pop
dec
call
stc
push
jl
jae
jecxz
cmp
outs
pusha
sbb
stc
xchg
mov
(bad)
fadd
push
mov
shl
test
dec
and
cld
dec
jmp
mov
adc
shr
dec
ja
xchg
sbb
lods
ret
push
das
shl
int3
dec
jae
inc
scas
push
adc
pop
int3
xchg
movs
cmp
dec
sbb
mov
adc
in
cmp
sahf
or
movs
inc
fsubr
jecxz
push
shl
sub
sub
ret
repz
push
movs
(bad)
mov
mov
ins
stc
fist
icebp
cwde
inc
mul
pushf
xchg
mov
pop
or
pusha
jle
jo
xchg
bound
ds
pop
lahf
xor
les
xor
stc
mov
sahf
imul
pop
out
cmc
or
adc
push
mov
out
pop
push
dec
jmp
imul
das
clc
sbb
imul
jns
add
jne
pop
inc
pop
outs
out
popa
pop
pop
xor
lahf
fistp
inc
dec
es
bound
loop
add
lods
jo
xchg
xchg
ja
call
xchg
ror
jmp
cs
or
leave
lock
and
int
iret
xor
nop
dec
ins
push
push
sbb
rcr
adc
inc
pop
mov
xchg
add
aas
or
outs
push
loop
dec
mov
dec
ret
scas
cmp
jg
add
leave
call
je
cmp
dec
sub
push
movs
pop
rcr
push
fdiv
and
xor
lods
xor
cdq
popa
in
pop
and
sbb
(bad)
sub
jp
mov
out
jae
xor
mov
fcomp
cmps
jmp
adc
iret
or
push
cld
xor
lds
inc
jnp
cmp
mov
jnp
pop
sbb
mov
adc
repnz
xor
push
movs
repz
fstp
push
fldenv
adc
jecxz
mov
add
mov
retf
pop
enter
or
cmc
cmps
dec
pop
adc
bound
mov
pop
(bad)
jbe
push
sar
jns
pop
pop
dec
ins
mov
inc
xchg
jl
pop
js
jmp
repnz
stc
aam
push
mov
push
mov
inc
aad
jno
cmp
sbb
dec
scas
mov
add
jb
cs
mov
pop
ins
adc
shl
xchg
xchg
retf
scas
mov
std
mov
mov
mov
sbb
in
fdivr
ficom
cmp
jl
aaa
popf
fs
mov
push
xor
sub
push
pop
fcmovu
int3
and
stos
cs
xor
pushf
into
(bad)
mov
mov
mov
pop
jbe
cdq
push
psubsw
push
add
aam
push
arpl
hlt
pop
sbb
sbb
into
shl
mov
js
push
mov
imul
mov
call
(bad)
icebp
(bad)
xor
or
mov
or
mov
inc
out
sub
movs
xor
jae
cmp
sub
in
adc
or
push
(bad)
in
pop
aam
or
and
int
xchg
rcl
jns
mov
iret
sub
mov
cld
lock
jp
jne
les
push
push
cmp
gs
and
ss
push
outs
shl
stos
add
push
push
or
jmp
push
jg
pop
div
dec
jl
retf
jp
push
stc
jbe
lods
pusha
out
popa
cli
(bad)
sbb
or
arpl
cwde
mov
inc
in
mov
leave
inc
(bad)
(bad)
iret
repnz
mov
outs
out
sub
cwde
jmp
xchg
sub
xchg
add
pop
pop
xlat
stos
mov
push
mov
movs
cmp
ss
daa
out
mov
pusha
mov
dec
cmps
sub
mov
sub
mov
jb
sbb
sub
gs
idiv
test
js
mov
adc
pop
test
lds
je
xchg
sbb
sbb
loop
inc
add
inc
hlt
dec
xlat
stc
repnz
(bad)
ss
stos
mov
cmp
fsub
push
call
scas
cmp
dec
pop
shl
daa
jg
cld
lahf
dec
xor
ins
pop
(bad)
xor
sub
sahf
call
call
mov
int3
dec
sbb
and
jecxz
add
adc
sahf
vandps
jnp
sub
add
nop
jne
out
(bad)
fabs
xchg
adc
pop
outs
in
into
out
dec
or
jb
pop
lods
sbb
cwde
popa
mov
pop
bound
repz
push
cmp
mov
push
rol
icebp
adc
xor
dec
in
outs
call
inc
push
in
xor
xchg
adc
mov
ja
push
sub
in
mov
sub
inc
addr16
pop
xor
push
pop
mov
in
jns
cmps
les
popa
(bad)
adc
pop
add
pop
push
loopne
lock
adc
xor
inc
(bad)
movs
cmps
jge
mov
stc
loopne
sbb
dec
push
mov
jmp
push
cmp
gs
popf
shl
enter
shl
scas
movs
push
or
jb
jle
and
xor
pop
in
mov
ror
cmp
adc
movntq
into
mov
xchg
jmp
mov
inc
mov
fst
stos
js
push
inc
sbb
repnz
xor
pop
call
adc
lahf
bound
pop
dec
mov
enter
pop
push
dec
sbb
inc
or
lock
xchg
sbb
in
push
loop
fistp
and
xchg
push
(bad)
retf
dec
cmps
test
xor
das
mov
xchg
aam
inc
lods
and
or
push
push
dec
jnp
cmp
lahf
call
fimul
mov
cs
sti
inc
jbe
not
xor
sub
add
imul
jae
push
lds
adc
outs
sub
in
add
cmp
sbb
dec
xor
and
xchg
cmp
das
and
pop
add
data16
sti
push
pop
pushf
jbe
mov
mov
mov
jle
cmp
rcr
fs
pop
cmp
pop
adc
pop
sahf
iret
outs
pop
stc
xor
mov
adc
pop
xchg
push
outs
xchg
mov
das
test
shr
dec
jo
pusha
pop
and
jnp
(bad)
jo
(bad)
cmp
repz
add
dec
xlat
xchg
cmp
pusha
cmp
push
data16
(bad)
into
aam
cmp
data16
pop
(bad)
jae
das
cmp
test
or
out
fcomp
jbe
stos
xchg
mov
sbb
test
adc
bnd
cmp
loop
adc
adc
stos
or
mov
out
sub
cdq
enter
sar
pop
pop
adc
les
in
f2xm1
popf
mov
loop
cmp
stc
fsubr
cmp
(bad)
jmp
sub
sbb
inc
ret
inc
iret
inc
pop
sub
stc
adc
je
cmc
add
push
sahf
iret
xchg
sub
inc
inc
sub
and
shr
iret
mov
mov
test
pop
pop
jnp
sub
inc
dec
mov
ins
ins
cmp
jmp
jb
xchg
adc
sub
nop
imul
mov
push
rol
sbb
sbb
mov
aaa
in
mov
push
adc
in
call
jne
imul
in
lahf
pop
or
push
or
jb
jmp
xchg
(bad)
lods
hlt
aad
xlat
mov
cmps
push
out
popa
clc
mov
mov
xchg
loopne
mov
or
cmps
daa
stc
into
push
xchg
mov
(bad)
repz
test
fidivr
retf
stc
inc
xor
lods
div
xchg
bound
pop
sub
inc
xor
xchg
mov
add
retf
fcomp
setbe
fwait
sbb
cld
dec
jb
test
arpl
prefetch
cmp
xchg
lahf
xor
jo
xlat
out
and
add
inc
xor
out
loop
xchg
dec
or
int
popf
arpl
add
push
ret
int3
mov
sahf
iret
arpl
pop
sbb
jp
jbe
stos
adc
xor
pop
sbb
and
pop
xor
adc
xchg
mov
sub
or
add
sbb
sahf
mov
arpl
cmc
add
mov
cmp
dec
icebp
jo
out
mov
sbb
mov
hlt
adc
push
push
jne
ss
sub
dec
mov
xchg
add
scas
dec
jmp
rcl
dec
das
inc
stos
dec
and
and
out
out
add
ret
nop
dec
aam
je
sahf
int
cmps
cmp
int3
sub
pop
dec
sub
repnz
mov
mov
mov
xor
and
movs
mov
outs
ror
bound
inc
cmp
movs
xor
aaa
pop
xchg
cmps
push
mov
scas
cs
dec
ficomp
lahf
push
ret
dec
repz
pop
loope
cmp
ret
imul
lock
sub
gs
add
lods
cmps
mov
or
xor
xor
fdecstp
cmp
dec
cmps
cwde
mov
add
jecxz
jg
fwait
cmp
pop
pop
jp
or
ss
popa
mov
(bad)
jmp
xchg
adc
sar
popf
lods
out
add
iret
jmp
out
mov
addr16
pop
sar
mov
and
test
or
inc
mov
in
cmp
pop
cmp
loop
ss
ret
push
xchg
cwde
inc
aaa
jne
dec
mov
mov
jae
xchg
fisub
lods
lea
or
jle
in
retf
adc
test
test
enter
mov
pop
in
inc
jge
repz
and
push
addr16
movs
mov
pop
cwde
(bad)
sbb
dec
popf
neg
jp
sub
call
add
mov
call
jbe
in
dec
imul
adc
bnd
les
sbb
adc
rol
mov
adc
fist
iret
inc
mov
fwait
push
cmp
imul
lds
mov
in
icebp
fldcw
cmp
mov
push
push
mov
lds
dec
imul
in
out
dec
cli
std
retf
rol
popf
adc
push
sub
mov
sti
xor
inc
nop
sbb
dec
pushf
dec
mov
shl
ror
in
add
pop
jno
pushf
cld
jns
mov
sar
cmp
mov
inc
jo
sti
push
cmp
lds
xchg
mov
mov
xchg
and
sub
xchg
mov
cmp
mov
fld
sub
cs
movs
inc
movs
loop
mov
stos
fisubr
das
rcl
push
xchg
out
cmp
aaa
push
mov
pop
cwde
push
scas
mov
mov
je
xchg
mov
dec
jmp
rcl
and
scas
xor
pop
cdq
xchg
inc
jae
icebp
pop
(bad)
sti
push
shr
sahf
mov
push
js
in
outs
pop
sbb
or
fld
pop
and
std
xchg
pop
lds
frstor
ins
data16
xor
jb
popf
sbb
sbb
outs
cld
int
out
cmp
into
enter
into
mov
xchg
xchg
div
test
xor
arpl
add
adc
and
(bad)
push
imul
jg
fimul
push
imul
push
into
mov
mov
or
in
cmp
cli
or
push
(bad)
adc
jne
xchg
std
jns
and
hlt
fsub
rcl
loope
dec
mov
fild
cwde
cld
das
jmp
fmul
add
pop
pop
xor
cs
or
xchg
std
and
mov
hlt
outs
xchg
sbb
popa
clc
fs
push
push
into
ja
jge
sub
and
xchg
mov
mov
pop
mov
push
push
add
lds
and
icebp
lods
sub
cli
fcomip
sbb
ret
call
sub
enter
sahf
mov
ins
inc
loop
cli
mov
lods
icebp
jb
call
in
jbe
mov
inc
jno
sahf
push
cli
lods
or
xchg
inc
push
shl
mov
sbb
rcr
or
ins
mov
cdq
test
or
movs
ret
adc
inc
pop
xor
mov
test
push
jl
lods
iret
and
icebp
pop
imul
pushf
out
outs
std
jl
jno
outs
jecxz
jbe
xor
cdq
rcl
dec
jb
or
sahf
mov
cld
add
movs
ins
test
ret
mov
pop
lods
jnp
push
pop
xor
mov
inc
and
pop
movs
jmp
xchg
jge
das
fs
es
push
mov
jne
pushf
sbb
xor
mov
in
and
pop
loopne
gs
outs
lods
jl
push
inc
fistp
das
and
sbb
mov
movs
pop
mov
sub
aad
jo
jbe
jge
jnp
jge
pop
in
inc
scas
ror
xlat
xchg
pop
mov
inc
sub
addr16
pop
add
cmp
adc
in
jmp
ja
inc
mov
dec
jge
idiv
(bad)
mov
cmp
jns
sbb
aad
stc
out
or
mov
inc
sti
xchg
mov
pop
pop
cmp
mov
push
retf
and
mov
in
push
shl
outs
sti
repnz
mov
mov
pop
lock
(bad)
cmc
fild
iret
jo
xchg
dec
cli
cmp
pusha
imul
mov
mov
cmp
test
add
inc
sub
dec
cdq
mov
neg
jge
bound
iret
movs
jns
xor
movs
iret
sub
mov
cdq
hlt
jmp
xchg
mov
loope
dec
push
and
cmp
push
adc
call
mov
jge
(bad)
out
pop
lahf
jge
cld
push
push
or
sbb
fsubr
push
aaa
pop
xlat
jae
jnp
retf
ins
mov
and
loope
repnz
cs
inc
mov
je
pop
call
out
xlat
pop
enter
ret
sub
test
call
sbb
or
and
out
mov
sbb
aad
stos
shr
shl
xchg
sub
sbb
or
inc
fnstcw
jbe
(bad)
pop
(bad)
movs
xchg
sub
pop
lock
pop
mov
inc
imul
(bad)
loopne
(bad)
arpl
xor
push
jmp
rol
loop
sti
(bad)
pop
adc
addr16
mov
imul
jns
ds
xchg
jmp
ins
(bad)
into
stos
das
sar
popf
or
dec
jmp
mov
lock
xor
pop
push
call
cmc
inc
loop
sub
mov
inc
dec
movs
ins
(bad)
push
cmp
inc
inc
push
leave
pop
jp
lock
mov
jp
(bad)
aad
rcr
xchg
ja
mov
mov
pop
cs
inc
sub
add
out
inc
cmp
cmp
or
je
xor
xor
push
(bad)
call
js
jb
inc
aaa
shr
into
mov
rol
retf
test
jg
xor
cmp
aam
cmp
jmp
jmp
add
(bad)
enter
push
aas
ins
dec
adc
push
les
repz
int
xchg
fild
fidiv
or
pop
inc
inc
mov
adc
fist
cmp
cs
lahf
adc
xchg
repnz
xor
jge
pop
pop
popf
stc
push
jmp
jnp
pop
jecxz
data16
add
cmp
cmp
gs
xor
jno
push
jmp
js
sub
push
mov
mov
pop
cs
jae
push
jmp
ds
aaa
mov
push
fwait
jmp
dec
pop
jmp
dec
fdivrp
xor
pop
pop
lods
jnp
gs
retf
dec
xchg
je
jp
add
aaa
and
xchg
pop
push
or
jns
mov
mov
hlt
(bad)
fmul
(bad)
bound
lahf
popf
call
jb
ret
inc
hlt
sub
int3
cmp
jne
add
jb
aas
jb
add
mov
enter
mov
fisubr
sbb
(bad)
sub
je
in
push
nop
jns
sub
mov
js
and
cmp
cmp
fs
leave
repnz
jae
ins
mov
mov
jle
mov
push
aam
ret
inc
cmc
mov
inc
cmps
adc
jp
jnp
or
jl
inc
cmp
or
gs
shr
xor
repz
sbb
dec
jg
or
outs
dec
add
cmps
ja
pop
add
lea
mov
sub
test
jmp
daa
xchg
clc
inc
pop
(bad)
cdq
call
retf
or
iret
jnp
outs
mov
ins
inc
or
and
cld
dec
std
inc
das
das
inc
enter
jne
or
and
mov
mov
or
lea
xor
pop
pop
push
mov
mov
sbb
mov
pushf
cmp
js
addr16
push
mov
out
idiv
add
cmp
inc
cmp
scas
fsubrp
xor
dec
out
out
mov
lahf
mov
lahf
mov
push
mov
fcompp
and
xlat
scas
pop
adc
jge
mov
jp
sbb
add
mul
sbb
dec
or
jmp
and
std
(bad)
sbb
jae
data16
xchg
push
jg
sbb
sub
push
push
(bad)
fidiv
mov
cmp
mov
int
sub
fisttp
les
leave
mov
add
enter
int3
adc
push
hlt
cs
and
gs
jnp
jbe
xchg
jnp
adc
sbb
pop
movs
sub
cmp
mov
cmp
jecxz
xchg
jae
leave
xchg
jo
mov
int3
inc
(bad)
mov
out
sbb
cmp
scas
sub
ds
cdq
test
les
jmp
in
ficomp
push
adc
stos
cmp
fisubr
mov
pop
and
(bad)
loopne
add
jl
mov
div
pop
inc
sar
out
and
xchg
pop
push
cs
pop
sbb
das
lock
and
lahf
mov
ror
xor
pushf
push
push
(bad)
mov
jle
mov
xchg
ret
shr
pop
mov
sbb
add
imul
push
test
dec
push
test
or
dec
pop
pushf
loopne
push
sub
or
and
sub
je
xchg
lods
pop
rol
nop
aas
or
movs
and
mov
rol
in
movs
push
lock
test
les
fild
fld
cmp
mov
and
scas
fwait
xchg
xchg
pop
push
xor
popa
fdiv
aam
xchg
jo
mov
retf
es
not
add
in
mov
mov
lods
and
movs
pop
xchg
xor
shr
(bad)
in
jne
mov
int3
aas
mov
jno
ins
or
div
mov
jecxz
or
stos
and
ret
lods
retf
pop
aaa
lea
stos
hlt
mov
jg
mov
push
(bad)
dec
outs
mov
jge
in
xchg
xchg
btr
shr
mov
cmp
pop
aas
fwait
push
cdq
lods
je
imul
shl
mov
cmps
push
das
rcr
jge
pop
cli
inc
aad
movs
mov
pop
call
stos
xor
mov
test
ja
jne
inc
mov
mov
push
ins
cwde
push
mov
or
add
cmp
or
jecxz
scas
cmp
int
pop
dec
mov
daa
add
mov
mov
in
pop
mov
ret
push
packuswb
pop
and
stc
mov
enter
xor
mov
dec
fldcw
fbstp
out
test
fdivr
sbb
adc
mov
cmps
mov
int3
xchg
jns
(bad)
int
scas
dec
call
dec
push
ret
pop
jnp
cmc
mov
fmulp
mov
(bad)
bound
loopne
push
cmp
sub
int3
rcl
sub
lods
scas
dec
(bad)
mov
fisub
fsubr
js
aad
repz
rol
and
jno
jecxz
lock
push
stos
pop
dec
loope
icebp
inc
pop
add
aaa
imul
add
mov
sbb
gs
adc
push
adc
out
stos
push
push
cmps
or
jl
push
or
and
dec
(bad)
add
(bad)
and
push
lods
pop
aas
mov
call
jmp
popf
aaa
bound
jge
pusha
(bad)
shl
or
std
sti
clc
dec
pop
imul
mov
pop
mov
outs
mov
sbb
xchg
data16
stos
pop
aaa
repnz
cmp
stc
xchg
fsub
dec
dec
sbb
loope
not
shl
lea
cmp
cmc
or
adc
mov
sbb
loop
xlat
movs
jg
cdq
or
or
cdq
or
dec
pop
jb
ss
retf
pop
test
pop
add
gs
in
test
push
jns
gs
xor
cdq
popa
xor
inc
mov
mov
shl
ret
daa
mov
mov
stc
adc
or
adc
lods
or
jo
pop
cmp
repnz
test
and
jg
jnp
xchg
adc
retf
adc
das
ja
dec
jecxz
shl
pop
pop
pusha
mov
dec
jp
aad
xor
mov
add
mov
jl
imul
ficomp
out
pop
jne
xchg
ds
data16
dec
inc
idiv
push
cmp
jge
dec
enter
jb
jmp
adc
cmovns
iret
scas
dec
movs
xchg
cld
mov
cmp
in
imul
or
sbb
adc
dec
ins
scas
cwde
and
cli
xchg
sub
push
into
jne
mov
mov
in
push
sbb
fiadd
loopne
(bad)
push
push
(bad)
sahf
cmp
nop
rcr
mov
rcr
and
pushf
or
mov
or
in
jg
mov
mov
xchg
sbb
mov
push
hlt
push
aam
xor
addr16
lods
xchg
dec
dec
les
aad
pop
dec
daa
adc
dec
xchg
lahf
test
inc
jmp
test
jae
jl
add
(bad)
jno
shr
daa
psubsw
enter
add
xchg
or
test
fnstenv
stos
jno
popa
mov
mov
adc
imul
(bad)
int
fidivr
cwde
dec
popa
test
loopne
push
movs
mov
int3
inc
add
hlt
idiv
lds
les
pop
imul
push
jno
mov
mov
xchg
add
movs
mov
es
add
mov
sbb
lds
and
jnp
and
scas
pop
xchg
ss
push
adc
pop
jno
shl
clc
(bad)
pop
(bad)
cmp
xchg
add
push
mov
fisttp
adc
mov
or
sub
and
sbb
addr16
cmps
andnps
sbb
or
out
jo
xchg
(bad)
fs
add
cmp
cmc
daa
imul
cdq
gs
fnstenv
mov
inc
sahf
lahf
sbb
in
add
cmp
push
inc
jno
inc
sub
test
cs
(bad)
das
push
add
cmp
or
inc
add
pusha
sbb
pop
jns
mov
dec
mov
fs
push
aas
pop
out
bound
gs
ror
mov
xchg
mov
push
dec
mov
xor
mov
test
std
int3
mov
cli
pop
mov
inc
jbe
cmp
jge
inc
ror
push
jl
imul
loop
jno
test
jmp
or
jne
ret
ins
xchg
push
push
and
inc
mov
in
cmp
dec
fisubr
xchg
and
xchg
in
mov
adc
pop
outs
mov
out
add
leave
xor
sbb
push
dec
rol
into
jns
mov
pop
sub
rcl
mov
(bad)
mov
in
add
imul
pusha
ins
dec
(bad)
xor
mov
jnp
int3
sahf
mov
(bad)
or
xor
xor
(bad)
fld
aad
mov
shr
push
push
repz
iret
sub
ds
and
xchg
or
mov
aam
jo
cmc
call
mov
lods
lods
fisubr
sbb
sahf
mov
mov
xchg
repz
sub
out
addr16
fmul
mov
add
fs
cdq
cld
xlat
pop
mov
aaa
inc
jmp
cmp
lock
cmp
cmp
push
mov
fcomp
test
lahf
sbb
stc
int3
push
and
sub
or
cmp
sbb
hlt
loopne
aad
call
lahf
rol
loop
xchg
clc
ss
cdq
mov
xor
dec
arpl
mov
out
xor
jbe
stos
mov
mov
mov
push
ins
ins
adc
sbb
mov
dec
hlt
mov
ss
ins
mov
adc
pop
jmp
push
push
and
or
push
sti
cmp
fld
push
mov
and
xor
adc
rol
sub
je
inc
push
push
push
sub
addr16
mov
pop
inc
loopne
sbb
fstp
mov
fild
xlat
inc
maxps
jmp
push
push
cdq
in
imul
jnp
or
mov
dec
clc
cmp
movs
inc
add
pop
adc
cmp
xchg
fsubr
xor
in
jmp
inc
adc
push
aas
cmp
or
nop
clc
loop
scas
jns
aad
iret
in
push
xchg
rcr
(bad)
stc
out
push
mov
mov
inc
or
push
cs
mov
aas
lea
inc
js
push
pop
sub
idiv
push
mov
sub
scas
xchg
jns
xor
xor
xchg
and
inc
neg
std
je
cmpxchg
mov
bound
push
loope
lds
cmp
loope
imul
ins
dec
mov
add
repnz
xchg
inc
repnz
push
jno
sub
in
clc
ret
idiv
out
mov
rol
sbb
push
mov
fidivr
dec
rcr
add
pop
dec
add
inc
loope
mov
stos
mov
dec
pop
lods
mov
scas
or
jnp
mov
arpl
iret
sbb
es
cmp
fstp
ret
xor
or
pop
mov
retf
push
loope
and
fcmovu
fcom
add
hlt
or
or
cmp
add
lds
dec
add
xor
cmc
fs
add
inc
pop
mov
fmul
jns
bound
push
arpl
or
cmp
mov
cs
sbb
idiv
(bad)
push
aad
adc
mov
jp
mov
call
lahf
and
xchg
add
jae
cmp
and
push
shl
add
or
test
into
push
gs
xor
mov
dec
and
mov
test
cwde
add
sub
ja
int3
clc
fdivr
popa
adc
cmp
add
mov
mov
mov
jge
aaa
retf
mov
xor
jp
jo
retf
cmps
(bad)
std
xchg
out
or
push
dec
pop
jp
stos
or
js
call
xchg
mov
cmps
jle
sub
mov
push
xchg
mov
popa
leave
ret
push
jbe
movs
push
xchg
fcmovu
fs
retf
cmp
dec
enter
out
sbb
sahf
adc
xchg
xchg
adc
or
pushf
jbe
cdq
dec
mov
pop
cmps
add
xchg
test
imul
inc
jp
ret
mov
adc
les
inc
imul
idiv
lock
xor
adc
push
stc
dec
test
mov
pop
ret
jnp
pop
pop
cmc
and
(bad)
cmp
scas
pop
sub
push
push
push
dec
sub
or
ja
fnstenv
xor
in
jb
leave
sub
stc
sbb
xchg
cmp
inc
popf
sbb
mov
sub
mov
stos
mov
ret
inc
add
push
mov
sbb
lahf
push
push
sti
icebp
test
sbb
out
std
outs
out
into
fstp
jp
add
xchg
mov
daa
int3
add
cmp
push
sub
adc
add
sbb
or
aam
xor
test
dec
movs
cmp
das
pushf
std
je
push
xor
mov
shl
pop
mov
or
out
loope
jg
mov
xchg
adc
aad
sbb
and
cmc
ja
out
xchg
mov
cmc
and
sub
mov
jo
into
pop
mov
or
jo
mov
pop
pop
add
out
out
jmp
imul
push
rol
dec
hlt
xchg
add
lock
mul
xor
inc
pushf
or
inc
fsub
fst
mov
jne
jmp
test
mov
xchg
pop
dec
adc
cmc
mov
gs
cmp
pushf
mov
cmp
push
movaps
jns
sar
cmps
sbb
cmp
fs
int3
mov
adc
cmp
lods
jle
inc
push
fidiv
ja
(bad)
ins
add
out
adc
xchg
fst
jns
mov
pop
pop
dec
pop
pop
adc
inc
das
xchg
dec
ror
loope
ret
enter
rcr
ficom
movs
in
imul
aad
xchg
outs
add
mov
adc
into
xchg
adc
les
jg
adc
outs
dec
cmp
out
and
retf
push
mov
cwde
mov
int
dec
xor
dec
and
adc
jbe
jns
out
jecxz
dec
xor
xchg
mov
in
shl
mov
cmp
sub
adc
mov
xchg
mov
xchg
and
std
imul
repnz
xchg
out
push
jbe
jmp
add
add
sub
dec
mov
mov
mov
adc
xor
(bad)
mov
test
jmp
movntq
mov
or
ret
cli
sbb
jmp
mov
sub
lock
dec
mov
scas
add
(bad)
fild
mov
rol
sbb
out
adc
ret
movs
aad
repz
xor
xor
(bad)
jp
jb
sub
ins
daa
mov
sar
sahf
pop
cmp
scas
sbb
fsub
xchg
pop
cmp
repz
ret
push
mov
mov
lods
jmp
sar
sub
add
loop
pop
mov
inc
jecxz
stc
sub
outs
pop
in
mov
retf
add
cmps
jb
mov
lods
(bad)
jns
test
ret
pop
in
xor
or
lds
test
(bad)
jecxz
fisttp
cld
popa
mov
cmp
sbb
clc
xor
sbb
sbb
jle
sub
lods
out
xchg
call
(bad)
daa
push
xchg
std
cmps
jbe
jmp
xchg
mov
pop
xchg
sar
sti
sub
dec
pop
popa
repnz
daa
popa
pop
(bad)
jg
add
repz
rol
jno
adc
mov
ds
nop
cmps
scas
or
leave
sbb
sbb
retf
test
test
stos
lock
sar
mov
inc
adc
(bad)
mov
mov
push
js
cwde
int3
jmp
cmp
xchg
push
popa
sub
jbe
gs
int
scas
pop
ret
xchg
sub
adc
int3
mov
jl
dec
or
aaa
mov
jecxz
adc
int3
cmps
inc
jle
add
xor
xchg
mov
ror
mov
imul
or
mov
test
call
and
int3
stos
dec
jecxz
addr16
push
popf
inc
lods
inc
aaa
loop
test
enter
aaa
ss
rol
sbb
xor
sub
repnz
aam
rol
sub
push
sbb
cdq
add
in
(bad)
xchg
hlt
sbb
cmp
aad
xor
movs
jo
sti
push
clc
or
pop
or
js
fdivr
les
mov
and
mov
mov
push
popf
jne
loopne
popf
dec
pusha
ins
repnz
sbb
fidiv
rcl
pop
jmp
adc
data16
lahf
dec
push
sbb
sub
stos
scas
push
push
and
in
dec
pop
or
lods
cs
adc
popa
pop
adc
fidiv
mov
inc
sub
mov
pop
xchg
sbb
cmp
nop
dec
jbe
cmp
cmps
rol
xor
xor
cmp
mov
icebp
ror
jp
lahf
mov
dec
mov
lds
arpl
(bad)
clc
test
fsub
inc
ds
mov
jle
mul
adc
fstp
sbb
dec
push
pop
pop
retf
fidivr
aas
cmps
push
xlat
and
adc
add
lock
pop
inc
into
adc
out
jp
push
cmp
mov
sub
mov
add
test
xor
psubusw
stc
push
imul
mov
js
call
jp
cwde
jnp
mov
loopne
adc
daa
fidiv
or
pop
lods
pusha
add
js
retf
inc
inc
jmp
mov
add
loop
cmp
call
in
mov
jmp
dec
inc
adc
mov
mov
sbb
outs
cli
in
mov
xor
loopne
push
ficom
or
jb
movs
aaa
xchg
enter
aad
push
and
outs
push
and
imul
fwait
mov
popf
fidiv
jno
cmps
sbb
inc
jmp
fucomp
and
out
outs
dec
out
shl
pop
test
xchg
or
imul
fsubr
mov
fs
pop
mov
mov
sahf
sbb
cld
dec
data16
test
mov
and
push
mov
jmp
push
ret
out
mov
hlt
pop
js
leave
shl
popa
xchg
gs
cs
aad
and
outs
xchg
fist
scas
xchg
test
repz
movs
fisubr
adc
scas
inc
stc
lock
data16
adc
jae
outs
mov
mov
cmc
and
mov
movs
sbb
pop
out
rcl
mov
idiv
inc
pop
loop
xchg
lock
dec
and
sahf
jmp
stc
jmp
xchg
rol
in
fsubrp
dec
lds
out
mov
in
les
iret
xchg
mov
inc
cmp
ret
fistp
jg
mov
mov
iret
and
pushf
mov
push
xchg
cdq
push
call
(bad)
jecxz
cmp
pop
jns
inc
std
sahf
int3
jg
jecxz
loop
popf
inc
aas
cmc
cmp
xor
xchg
or
movs
sub
mov
dec
sbb
inc
(bad)
xor
push
mov
jecxz
sub
aad
adc
lods
or
sbb
addr16
fstp
pusha
mov
ins
or
xor
xor
push
shl
xchg
and
mov
repz
jecxz
fwait
and
retf
lahf
adc
and
dec
jl
ret
cs
pop
cmc
(bad)
int3
mov
push
(bad)
inc
and
push
dec
iret
dec
cmp
cli
inc
mov
add
adc
sahf
push
mov
mov
bound
and
jmp
xor
(bad)
hlt
scas
fwait
call
xor
push
and
mov
push
mov
dec
int3
(bad)
mov
dec
pop
ja
dec
test
loop
xchg
lds
push
popa
mov
daa
fmul
jl
dec
add
es
in
and
xor
aas
mov
sbb
sbb
xchg
lahf
iret
retf
stos
mov
mov
and
test
out
test
adc
ds
out
mov
and
repz
push
xchg
mov
xchg
mov
out
jecxz
scas
and
sbb
shl
and
pop
ret
adc
stc
sahf
mov
xor
jno
jmp
sbb
pop
mov
lea
ds
add
cwde
sahf
or
add
inc
int3
mov
pop
aam
xchg
repnz
popf
test
xor
loopne
mov
push
pop
sahf
movs
aaa
push
in
jl
inc
jecxz
movs
lock
imul
pop
shr
fisttp
fsubr
loope
inc
mov
jp
xor
iret
sub
test
add
adc
add
daa
(bad)
sub
fdivr
gs
fwait
or
mov
cmps
pop
into
inc
aam
stos
scas
add
mov
aam
cli
sub
aas
retf
xchg
add
inc
enter
mov
jno
mov
xchg
xchg
mov
repnz
lahf
sar
sub
mov
inc
pop
shr
pushf
cmp
setbe
or
movs
inc
outs
(bad)
cmp
sub
xchg
sub
nop
retf
inc
push
pop
inc
lock
stos
js
retf
(bad)
jmp
mov
mov
cmp
call
daa
ds
pop
xchg
cmp
jae
sar
sub
lods
(bad)
shl
loope
pop
push
dec
shl
into
mov
dec
pop
dec
stos
ficomp
adc
movs
mov
dec
in
push
jo
pop
lods
rcl
ins
xor
test
xchg
cmc
mov
sub
pop
jnp
cwde
test
ins
scas
ins
(bad)
mov
inc
dec
sbb
pushf
sbb
mov
loope
outs
sbb
lods
cwde
pop
dec
mov
xchg
and
pop
pop
or
imul
adc
push
mov
jns
and
enter
xchg
out
add
jne
cdq
dec
sub
cli
mov
lock
mov
sub
mov
stc
dec
pop
pop
adc
inc
push
imul
xor
(bad)
je
jmp
fstp
push
pop
mov
cdq
das
lods
daa
daa
xchg
cli
shr
xor
mov
pusha
add
add
mov
cmp
jl
cmp
push
sub
dec
dec
dec
push
loopne
or
sbb
cli
jp
push
mov
aam
popf
and
int
cdq
test
cli
lea
test
push
and
sub
fld
jns
jecxz
mov
bound
dec
mov
paddsb
sub
ja
pop
add
pop
test
or
daa
jp
cmp
xchg
jmp
outs
or
pop
sub
scas
sbb
test
mov
(bad)
jmp
movs
push
push
das
repz
lods
or
add
add
or
mov
xchg
dec
or
into
push
jge
lods
sti
pop
lds
test
xchg
jb
sbb
in
mov
enter
dec
fbld
into
ins
mov
ins
and
add
add
dec
repz
bound
outs
dec
das
adc
mov
ror
mov
(bad)
jle
pop
stos
outs
in
mov
aas
adc
adc
pop
pop
pop
popa
stos
ds
xchg
and
cdq
daa
mov
lds
and
push
push
fwait
addr16
jnp
add
(bad)
(bad)
cs
cmc
pop
mov
and
cmps
clc
mov
repz
pop
pop
loopne
mov
or
inc
call
stos
pop
and
pop
inc
mov
mov
sti
jb
repnz
movs
jmp
fldenv
out
or
dec
sub
les
pop
call
sbb
jno
sub
outs
imul
sbb
(bad)
cli
jmp
mov
push
js
jecxz
cli
das
aaa
int3
mov
fst
call
std
lahf
pop
sub
inc
outs
sbb
js
out
jae
add
out
mov
cmps
out
push
add
add
inc
retf
jecxz
inc
icebp
jmp
add
fcom
fnstenv
mov
cdq
je
cli
les
mov
xor
test
ret
sub
cdq
add
add
daa
xor
lock
push
mov
popa
mov
push
imul
mov
mov
mov
pop
jmp
lahf
stos
sahf
ins
not
loope
cld
inc
pushw
dec
data16
jge
pop
lods
cld
jae
shl
inc
(bad)
push
cmp
or
mov
std
jno
and
or
push
out
gs
mov
sar
(bad)
dec
sbb
sahf
sbb
jbe
ins
rol
mov
or
jg
aad
pop
jbe
xchg
dec
pop
(bad)
imul
enter
cli
xchg
pop
jo
(bad)
mov
fidiv
add
gs
lock
lea
mov
xor
inc
xchg
in
or
mov
jae
mov
jle
mov
fs
sbb
hlt
imul
fcomp
sub
ins
sbb
sub
clc
adc
cmps
lahf
clc
das
ins
xchg
add
sbb
inc
mov
fisubr
rcl
xor
push
scas
xchg
cdq
mov
or
les
jg
out
add
ja
pop
cmp
stos
out
push
push
aas
mov
into
icebp
jl
call
(bad)
je
inc
enter
scas
inc
push
mov
dec
clc
cmps
retf
xchg
outs
fld
cmp
in
aaa
push
int
jno
(bad)
push
pushf
pop
lea
and
or
and
cld
push
xlat
out
cld
es
mov
sbb
mov
stos
mov
xor
sbb
pop
fsub
(bad)
and
sub
push
leave
scas
repnz
and
scas
push
xchg
jo
and
cmp
stos
lds
cmp
dec
push
push
jo
adc
dec
arpl
les
ja
push
es
int3
push
add
jecxz
gs
inc
div
icebp
mov
sbb
ds
ret
mov
aaa
jmp
hlt
jmp
repnz
lods
addr16
mov
(bad)
aad
idiv
stos
adc
pop
inc
rol
sar
arpl
(bad)
jmp
daa
mov
ret
push
xchg
jbe
test
fld
shl
in
xchg
pop
icebp
aam
clc
ret
lods
pop
cmp
test
das
fst
inc
jecxz
cdq
dec
call
lods
in
and
aas
in
in
or
ror
repnz
xchg
retf
pop
cmp
mov
and
sub
rol
ss
inc
dec
mov
adc
pop
outs
xchg
in
retf
sbb
call
push
cmp
push
jne
xchg
or
sub
mov
or
test
xchg
hlt
and
in
in
jne
push
test
dec
test
sbb
div
lods
mov
ret
xor
popa
(bad)
sbb
push
movs
in
xor
sub
mov
push
jmp
out
cmp
ds
cdq
mov
mov
jo
imul
icebp
dec
ins
ds
in
out
dec
aas
cmp
pop
imul
cmps
retf
add
test
cmp
dec
mov
or
int
jmp
mov
std
or
adc
sub
xor
or
push
add
xchg
dec
sub
jns
fcmovu
cmp
mov
mov
call
mov
cmps
lahf
mov
dec
sub
(bad)
aad
jb
xchg
cld
xor
fs
pop
mov
push
fistp
daa
jmp
dec
mov
mov
cmp
mov
jg
sbb
and
and
in
sahf
xchg
and
call
(bad)
int3
adc
push
mov
cmp
shl
inc
shl
clc
imul
xchg
out
or
cwde
add
rol
mov
push
mov
mov
inc
ror
xor
xchg
push
pop
retf
mov
jg
or
mov
clc
mov
xchg
sbb
mov
popa
xchg
push
push
pop
jge
es
xor
push
xlat
stos
mov
xor
adc
and
stos
fstp
and
jmp
dec
cs
push
mov
(bad)
push
ret
ja
push
leave
inc
and
imul
leave
xor
int3
aad
movs
mov
pop
cwde
jmp
jns
jmp
jnp
(bad)
das
loop
(bad)
adc
out
sar
mov
test
pop
mov
test
cmp
mov
inc
inc
out
mov
popf
add
pop
repz
and
cmp
clc
inc
fmulp
out
int
aaa
(bad)
mov
iret
(bad)
es
add
dec
mov
sbb
mov
sahf
cwde
pop
adc
mov
aad
dec
push
mov
shl
test
std
scas
mov
ins
retf
add
loope
dec
sbb
ret
xor
fistp
xor
mov
and
sti
into
(bad)
sbb
adc
mov
or
imul
adc
push
pushf
pop
or
sbb
stos
es
dec
leave
(bad)
call
mov
loop
pop
cs
addr16
mov
es
shr
(bad)
push
fldenv
push
test
movs
pop
out
pushf
fst
(bad)
push
mov
movs
push
inc
icebp
out
cmp
mov
sub
rcl
xchg
test
mov
ins
add
mov
movs
cs
sbb
lods
pop
dec
movs
sbb
cs
lds
imul
sbb
outs
shr
pop
(bad)
adc
arpl
(bad)
cmp
inc
push
inc
mov
push
and
mov
je
repz
mov
pop
or
sub
ins
sbb
sub
popf
fimul
sbb
push
xchg
(bad)
cs
inc
xchg
ror
into
hlt
mov
dec
pop
imul
cmp
cmp
loop
inc
jb
pop
mov
(bad)
and
inc
clc
rol
push
xor
fucomi
pop
in
ret
imul
out
(bad)
add
outs
cmps
enter
mov
icebp
pushf
adc
and
fst
arpl
xor
push
shl
dec
sbb
arpl
pop
mov
outs
jge
ins
jmp
mov
sti
stos
mov
adc
sbb
lds
in
xor
int3
dec
jno
jmp
in
lods
adc
popf
ret
or
push
cs
dec
stos
test
cmp
xchg
sbb
inc
inc
fwait
rcr
fdivr
xor
jmp
push
cli
push
add
cmp
inc
in
loopne
pop
mov
retf
xchg
push
mov
retf
pop
in
add
dec
arpl
scas
dec
fldenv
pushf
pop
call
push
mov
rcr
bound
mov
loope
mov
sbb
sbb
sub
mov
pop
repz
repnz
jle
dec
(bad)
xor
cmp
sahf
out
or
mov
add
sti
jmp
js
(bad)
fimul
and
(bad)
sbb
fnstsw
push
loope
mov
lea
or
scas
and
mov
xchg
mov
cs
ror
mov
or
jle
fldcw
fcomp
xchg
sub
clc
repnz
push
mov
js
add
xor
pop
bound
les
mov
retf
jns
push
mov
cli
xchg
cli
enter
push
mov
jae
mov
and
mov
mov
retf
pop
jmp
neg
cmp
sbb
fmul
(bad)
jne
xchg
in
sbb
repnz
jmp
xchg
call
iret
rol
push
push
add
inc
pusha
sbb
cs
add
sub
mov
not
ror
std
mov
(bad)
mov
cmp
sahf
sub
mov
fs
ja
push
popf
xchg
test
fisubr
cld
pop
and
mov
scas
repz
out
pop
shr
cmc
repz
aad
mov
mov
sub
pusha
sbb
xor
jmp
push
cmp
aad
test
fisttp
inc
out
cmps
mov
imul
in
jae
inc
sbb
sbb
je
gs
movs
addr16
test
sbb
clc
cld
xor
cmps
mov
call
pop
xchg
push
adc
rcr
cmp
push
mov
cmps
fst
fs
xor
loop
dec
xchg
cmp
adc
out
(bad)
fadd
stos
rol
hlt
adc
or
es
cmp
and
leave
ret
movs
rcr
mov
pusha
scas
imul
jae
mov
push
sahf
int
inc
cmp
and
sub
out
sbb
push
bound
cdq
ror
or
cwde
(bad)
sar
scas
push
add
xor
popf
into
mov
xchg
sbb
push
or
aas
(bad)
imul
nop
sub
cwde
cmp
or
and
out
inc
add
push
daa
cmps
sub
and
(bad)
adc
jg
out
push
xor
xchg
adc
(bad)
jmp
mov
ret
in
retf
jns
push
outs
pop
ds
stc
or
adc
cmp
js
xor
adc
mov
js
sahf
push
cmp
sub
lds
inc
xlat
sbb
jae
(bad)
fld
adc
fisttp
loopne
rcr
dec
jmp
inc
sbb
dec
sub
nop
js
mov
mov
dec
pop
movs
mov
bound
lea
movs
dec
mov
mov
mov
jmp
and
inc
fcom
cwde
and
inc
sti
push
mov
(bad)
and
retf
je
xchg
pop
pop
jbe
fnsave
jp
xlat
mov
mov
sbb
cwde
aam
push
test
sbb
pushf
xchg
mov
stos
sub
and
xchg
adc
add
xor
call
popf
xchg
add
jb
add
mov
test
les
push
cmps
mov
(bad)
push
sub
inc
sbb
sub
loopne
add
fisub
mov
js
aas
add
repz
and
rcl
dec
adc
xor
cmp
retf
dec
mov
fidivr
test
inc
ret
inc
ds
sub
push
inc
pop
add
popf
data16
pop
out
fcomp
pop
vxorpd
xchg
inc
cmp
mov
leave
xchg
mov
mov
cmc
pop
sti
stos
lock
ret
adc
jmp
pop
in
daa
xor
loopne
pop
mov
adc
pop
je
iret
daa
inc
aad
daa
addr16
aas
in
(bad)
call
getsec
mov
fnstsw
neg
pop
inc
dec
sbb
ins
out
je
mov
or
push
or
inc
imul
test
mov
add
std
xchg
mov
push
inc
stos
dec
xchg
sub
xor
fcmovb
ds
ins
pop
in
call
sbb
das
les
cs
mov
rcr
mov
inc
mov
ins
and
xchg
pusha
push
dec
or
sub
stos
test
ds
inc
jge
and
jbe
inc
inc
ins
movs
add
pop
mov
dec
les
push
enter
rcr
mov
repnz
outs
inc
mul
mov
in
jo
lds
jae
add
jnp
and
mov
inc
xchg
outs
jp
fstp
in
adc
icebp
xchg
jae
add
rcr
mov
ja
pop
sbb
add
enter
fidivr
sbb
pop
jle
mov
mov
xor
into
aas
and
dec
js
push
adc
push
pop
(bad)
int3
xor
push
dec
movntps
ss
popa
adc
out
int
fwait
pop
push
jmp
pop
out
lahf
pop
data16
repz
loope
push
mov
leave
rol
stos
mov
dec
mov
mov
popf
lods
inc
shl
fsub
int
sub
pop
cmp
out
(bad)
out
ror
dec
jl
clc
adc
retf
sub
jns
cli
or
push
enter
or
mov
push
xchg
lods
cmp
shl
push
cld
aaa
fisub
push
mov
push
mov
fisttp
cli
mov
pop
pop
test
mov
mov
neg
fucom
int
test
jns
adc
clc
leave
pop
cdq
add
out
dec
or
mov
push
pop
inc
dec
lds
ins
(bad)
mov
frstpm(287
loope
clc
cmp
inc
in
lahf
push
mov
push
out
scas
cli
add
or
dec
rol
xor
repnz
and
(bad)
jge
dec
ja
xor
aaa
dec
jno
daa
sbb
mov
xchg
ja
arpl
aam
out
repz
cmp
inc
mov
ins
les
jle
mov
enter
dec
mov
aas
mov
das
clc
push
push
add
sub
xor
push
push
mov
mov
ficom
mov
cwde
ja
add
lods
xchg
push
fsubr
repnz
and
inc
adc
or
and
dec
scas
aaa
pop
and
mov
sub
cli
xchg
jne
jo
fxam
xchg
pop
mov
mov
test
push
pusha
popf
scas
jnp
or
addr16
js
scas
push
pop
sbb
out
aad
mov
fcom
into
and
push
xor
or
jns
shr
cld
add
adc
cmp
and
lahf
iret
sbb
and
fsubr
or
movs
outs
call
add
add
mov
lods
movs
pop
or
adc
lock
int3
nop
lahf
adc
enter
push
retf
lods
xor
enter
out
inc
fsub
mov
adc
pop
ret
lods
out
jae
push
cmp
adc
adc
(bad)
leave
arpl
cmp
jb
cmp
cmp
cwde
xor
inc
jge
push
xor
or
pop
mov
mov
popf
cld
dec
ds
inc
mov
cs
inc
push
ins
cmc
sbb
mov
adc
xlat
push
xor
dec
not
test
test
in
add
jnp
repz
rcl
pop
mov
jmp
cdq
mov
ja
sbb
mov
push
adc
retf
mov
xor
std
mov
mov
shl
icebp
stos
dec
lea
lods
int3
sbb
cli
call
rcr
and
adc
and
retf
gs
in
adc
mov
into
xchg
add
sbb
fsubr
aaa
mov
lds
sbb
mov
jmp
push
push
out
popf
fisub
or
push
mov
sbb
not
(bad)
out
dec
je
or
jl
aaa
enter
scas
ficom
or
or
dec
adc
fld
cmp
mov
movs
out
xchg
push
pusha
daa
bound
jbe
test
int
push
xlat
pop
retf
shl
aaa
pop
sbb
out
push
xor
xchg
mov
adc
pop
addr16
lods
ins
jb
lock
leave
cdq
mov
loop
jo
mov
mov
pusha
dec
aas
and
adc
cmp
addr16
sub
test
sahf
mov
shl
pop
stos
jbe
push
ja
dec
in
sub
push
jne
out
mov
mov
pop
int
xchg
sub
push
aaa
or
mov
add
or
sar
add
add
xchg
add
cmc
jge
pushf
mov
pop
ret
jmp
mov
in
sbb
jae
cmps
(bad)
aad
js
mov
jge
jle
and
retf
jnp
lods
pop
sbb
or
push
test
mov
in
repnz
scas
ret
add
and
ficomp
call
in
std
add
mov
mov
outs
push
mov
aaa
fcomp
mov
fs
stos
pop
and
cdq
leave
xor
(bad)
or
in
out
sub
fmul
inc
push
(bad)
js
jbe
xchg
sbb
ins
xor
rcl
rol
ins
dec
movs
fdivrp
pop
les
inc
push
mov
fisttp
iret
movs
or
imul
leave
push
test
iret
sti
cld
out
xchg
xor
mov
cdq
data16
sub
mov
jecxz
inc
stos
jmp
or
fadd
sti
push
out
xor
call
push
(bad)
out
add
in
push
or
mov
jle
scas
pop
cmp
mov
scas
cs
rcl
push
mov
push
cmc
out
add
jle
and
mov
mov
inc
sar
aas
mov
jno
imul
pusha
jnp
dec
cmc
div
mov
sbb
xor
jg
mov
mov
inc
loop
pop
stos
sub
data16
sbb
loope
xor
neg
bound
movs
je
mov
arpl
push
push
pop
rcl
add
jg
jg
pop
mov
imul
push
inc
imul
jp
pop
std
add
mov
fwait
femms
cs
ins
call
fistp
aaa
push
(bad)
pushf
mov
and
fwait
jecxz
mov
sbb
add
mov
ret
push
xchg
mov
cmp
mov
addr16
fisub
fld
mov
sub
push
jns
sub
ret
hlt
push
int3
pop
xchg
jb
sbb
mov
mov
push
mov
mov
bound
xchg
cld
retf
or
xor
add
scas
repnz
dec
mov
ror
adc
les
(bad)
sahf
dec
jmp
cli
mov
clc
dec
mov
btr
add
lods
call
mov
dec
add
nop
push
pop
mov
inc
mov
inc
ins
pop
pop
jl
shr
jbe
test
sbb
push
mov
xchg
outs
stos
pushf
add
xlat
(bad)
cdq
dec
push
add
out
sbb
dec
mov
pop
add
mov
(bad)
outs
sbb
xchg
sbb
imul
(bad)
shr
int3
mov
les
mov
shl
xchg
mov
jnp
cmp
es
jmp
leave
retf
adc
xchg
shl
scas
hlt
inc
xor
int3
js
jns
pop
add
and
popf
lods
hlt
pushf
ins
xchg
sbb
mov
cmp
inc
push
adc
in
pop
fs
sub
mov
loop
add
jmp
(bad)
retf
cs
test
inc
or
movntq
push
pop
iret
dec
xchg
sub
and
aas
mov
cli
dec
sub
mov
xor
enter
mov
rol
push
push
outs
rcr
nop
cwde
jne
scas
add
cmp
js
js
inc
and
stos
mov
ror
loope
mov
or
or
ret
stos
stos
addr16
jno
pop
lds
mov
(bad)
sub
sbb
mov
sub
rep
push
cmp
outs
enter
pusha
mov
outs
dec
ror
aas
sub
std
jg
dec
aaa
jno
mov
das
mov
fisubr
scas
dec
mov
mov
aam
daa
jns
cs
jg
cmp
adc
adc
jmp
ret
fnstcw
push
mov
push
jg
mov
repz
stc
test
outs
bound
fild
jno
inc
mov
imul
leave
pop
jecxz
and
ret
dec
jg
fidivr
mov
fsub
in
push
cli
daa
dec
aaa
push
or
sbb
sbb
dec
clc
mov
in
out
outs
cdq
shl
adc
mov
inc
fistp
sbb
mov
mov
xchg
and
or
out
jne
call
sbb
aaa
in
push
bt
pop
pop
jne
aad
pop
pusha
adc
sbb
xchg
adc
ror
xor
std
in
cmp
mov
ins
imul
and
sti
jmp
mov
in
aaa
mov
mov
dec
xor
out
stos
enter
gs
pop
rcl
retf
fild
gs
imul
mov
inc
jne
cld
(bad)
enter
add
aas
fnstsw
pop
rol
push
out
xchg
arpl
aad
call
add
jmp
push
push
xor
mov
jl
mov
imul
push
adc
xlat
and
shl
jecxz
(bad)
fisubr
iret
jl
xor
sahf
mov
icebp
jmp
jnp
cmp
rcr
imul
rcl
out
leave
dec
adc
dec
sub
fst
fmul
cdq
jmp
jnp
push
dec
fs
sahf
jp
hlt
outs
es
jge
call
popf
push
aas
inc
pop
(bad)
mov
push
ss
sbb
ins
pop
sub
ds
cdq
push
pushf
test
mov
mov
xor
fs
fistp
test
rcl
sbb
cmps
pop
jl
loopne
fisubr
imul
adc
sti
push
adc
push
nop
mov
xor
(bad)
jmp
in
(bad)
fst
push
out
mov
jl
cld
retf
(bad)
jmp
inc
jmp
mov
aaa
(bad)
jo
mov
in
loope
test
imul
jo
cmp
adc
push
mov
xor
test
enter
or
iret
test
ret
add
loopne
mov
xchg
xchg
in
sub
aas
mov
call
les
inc
ss
adc
pop
les
cmc
and
push
mov
dec
jo
cmc
cdq
jmp
and
inc
mov
xchg
cld
adc
push
shl
cmp
inc
mov
inc
movs
sub
xchg
add
jb
lods
jmp
jl
in
aad
gs
push
pop
adc
add
lods
adc
xchg
call
popf
or
sub
inc
xlat
xchg
add
dec
loope
addr16
dec
pushf
jb
jae
inc
jne
scas
or
pop
in
push
sahf
mov
push
inc
dec
ror
pop
fdivrp
hlt
out
adc
cmp
ja
jb
sahf
xchg
adc
pop
cld
movs
leave
les
aaa
adc
pop
mov
repnz
stos
mov
daa
push
mov
push
inc
or
sbb
loope
fsubr
mov
retf
scas
jns
retf
push
sub
cli
jmp
aaa
mov
(bad)
jecxz
cmp
mov
push
ror
push
dec
and
loope
(bad)
mov
outs
(bad)
dec
(bad)
pusha
sbb
lea
cli
les
js
(bad)
test
les
mov
mov
and
mov
cmc
gs
pop
movs
push
or
jmp
fs
xchg
dec
and
mov
(bad)
sbb
xchg
mov
push
jo
push
enter
jno
cmps
cld
or
out
pop
push
push
add
push
dec
cmp
push
shl
es
stos
test
xchg
js
and
xlat
or
ja
mov
sbb
stos
dec
jnp
jo
mov
les
cdq
or
arpl
es
icebp
xchg
add
mov
cmp
aam
mov
aam
sub
jae
lock
ss
mov
mov
add
cs
xor
dec
pop
repz
pop
pop
imul
(bad)
(bad)
push
cmc
shr
ficomp
xlat
movs
ss
push
sub
and
jmp
push
imul
pop
mov
gs
add
mov
fs
or
idiv
dec
pop
outs
cs
cwde
outs
pushf
addr16
inc
push
pop
les
rcr
adc
xchg
int3
xor
or
ins
sub
leave
mov
ins
repnz
jns
mov
stos
sbb
cmp
(bad)
(bad)
pop
or
sbb
or
mov
and
imul
pop
sub
add
push
xor
ja
or
xor
cdq
xchg
mov
popf
nop
mov
jmp
bound
pop
lds
cld
and
xor
sar
xor
cmp
shr
loopne
xor
jb
int3
sti
mov
cmp
shr
imul
fwait
xchg
dec
mov
sar
out
xchg
cli
out
test
sub
sbb
jno
das
jmp
mov
mov
mov
and
cmp
cmp
or
jne
stos
or
cdq
add
fcos
sub
in
sub
jae
es
jmp
xlat
lock
cmps
hlt
fnsave
ror
mov
fucom
inc
sbb
lods
enter
mov
in
xlat
int
sti
fiadd
ror
hlt
xor
or
add
xchg
jl
push
and
es
jp
xor
xor
and
or
adc
(bad)
mov
mov
fsubr
idiv
popa
sbb
retf
add
lock
in
inc
cmp
jns
test
sub
sub
test
jo
(bad)
add
mul
ja
cmps
(bad)
repz
(bad)
jnp
push
jp
call
push
iret
lock
inc
sbb
data16
pop
test
jb
hlt
out
dec
ins
mov
les
add
pop
mov
lahf
lds
cmps
inc
mov
jns
xchg
add
out
test
(bad)
sub
ret
out
jg
push
sti
push
leave
int3
mov
loop
inc
sti
inc
retf
mov
or
mov
push
leave
inc
dec
fild
dec
sbb
dec
adc
(bad)
jmp
jb
inc
cmp
sbb
loop
adc
ds
and
mul
add
xor
push
dec
les
hlt
inc
dec
mov
addr16
or
adc
adc
mov
ret
pop
cmc
push
fwait
ds
add
and
add
data16
jge
in
in
out
pop
mov
sub
sbb
push
fs
call
push
sahf
xchg
daa
cs
pop
fmul
mov
hlt
mov
xchg
pop
nop
inc
add
and
inc
jne
movs
add
cmps
mov
daa
add
outs
into
in
cmp
out
xor
cmp
jnp
call
ins
daa
mov
jg
es
lods
jge
jmp
daa
in
test
rol
adc
inc
xor
jnp
loop
ret
mov
aaa
and
int
les
push
xchg
mov
mov
enter
(bad)
mov
jae
sub
xlat
fstp
ror
(bad)
outs
sbb
push
add
and
or
adc
out
inc
(bad)
es
(bad)
push
and
pop
aaa
icebp
adc
pop
dec
jb
push
mov
cs
js
sbb
jne
ja
fcom
xchg
lds
dec
out
iret
xchg
mov
xchg
test
pop
popa
sbb
lahf
lods
ss
mov
mov
xchg
into
cs
ret
mov
and
das
push
loop
xor
(bad)
xor
jb
(bad)
sub
cld
lods
jbe
xchg
xor
fstp
xchg
(bad)
(bad)
retf
add
cmps
push
ins
scas
fwait
cmp
arpl
imul
fdiv
jo
movs
xor
or
(bad)
jecxz
jae
adc
xchg
xor
movs
lahf
push
mov
ret
out
cmp
outs
jb
and
ds
retf
sahf
es
bound
(bad)
push
add
jge
imul
rcr
add
pop
pop
dec
stos
inc
test
xchg
rcr
inc
mov
in
js
lods
jg
repz
(bad)
cmp
lock
cs
int
mov
add
ret
ret
div
pop
or
fsub
or
adc
sub
mov
lods
stos
pushf
cmp
add
mov
mov
frstor
mov
xchg
add
int
data16
adc
fnstsw
or
bound
lds
ja
xchg
add
xlat
outs
cmps
loop
pop
aaa
loopne
mov
lea
and
xchg
sub
inc
lods
fwait
xor
or
mov
pop
sub
pop
ins
xchg
jno
adc
mov
xlat
icebp
mov
mov
jl
fwait
stc
sub
adc
clc
xchg
sti
nop
das
mov
adc
das
ja
xor
xor
sub
dec
ja
sbb
in
rcl
cli
in
sbb
aas
push
mov
mov
mov
jmp
not
cmp
push
fwait
jns
xchg
push
push
sub
mov
cdq
push
int
sub
es
jo
lahf
push
dec
in
jp
jnp
xchg
ins
mov
sbb
dec
loopne
js
fisttp
mov
adc
loope
ja
sub
std
or
mov
pushf
cmc
and
outs
xchg
or
fidiv
inc
sbb
int3
hlt
sbb
push
into
aam
or
lods
dec
cmc
rcr
leave
add
mov
sub
mov
pop
rcr
in
or
cmps
and
dec
cld
sub
or
test
xchg
or
sbb
rcl
mul
jecxz
and
sub
push
mov
jne
(bad)
add
jg
outs
push
cwde
scas
repz
add
retf
pop
(bad)
xor
xchg
int3
sar
pop
pushf
int3
sbb
push
fild
into
or
aas
mov
leave
imul
clc
cmp
sti
jbe
nop
clc
jo
inc
(bad)
loop
push
movsx
repz
out
out
pop
test
fiadd
in
test
shl
pushf
scas
ds
je
dec
(bad)
into
sbb
out
cdq
aam
into
mov
ds
in
aam
mov
xor
xor
xor
xchg
or
out
mov
pop
out
idiv
dec
or
pop
add
fist
xchg
and
xchg
das
test
inc
sub
je
fs
dec
cld
fiadd
mov
std
icebp
inc
cmp
or
push
gs
mov
nop
or
mov
push
cmp
out
fsubr
repnz
bound
out
fiadd
sub
mov
mov
inc
jg
rcr
dec
xchg
add
sbb
jmp
mov
(bad)
loope
rcl
jno
imul
jae
sbb
push
push
mov
xchg
cmps
fadd
pop
mov
mov
bound
lahf
test
cmp
shr
(bad)
mov
jbe
push
xor
shl
test
das
out
repz
sbb
mov
in
lds
mov
mov
xor
retf
sub
mov
dec
and
add
push
out
js
cmps
cmps
std
sbb
repnz
pop
dec
or
cli
rol
fwait
enter
ja
cmp
movs
dec
jle
or
fistp
mov
add
jge
push
aas
and
iret
add
cwde
or
xlat
test
dec
es
push
push
div
sub
in
jg
xchg
and
aad
ss
je
bound
pop
xchg
xchg
mov
fnstsw
retf
addr16
mov
cmp
and
cwde
jno
test
or
es
adc
and
aaa
or
sbb
ss
cmp
xlat
imul
sub
aam
loopne
imul
jg
stc
jne
push
dec
jnp
xchg
mov
aam
mov
jmp
xor
test
cmc
sbb
pusha
jae
lahf
shl
push
adc
jbe
mov
pop
inc
call
inc
sub
pusha
mov
pop
mov
adc
jbe
std
sbb
add
jmp
add
xchg
nop
outs
jmp
sub
test
retf
das
jae
retf
push
popf
inc
add
jnp
add
cli
shufps
(bad)
lahf
ficom
jge
pop
inc
push
xor
mov
mov
clc
aas
xor
int
pop
ror
xlat
mov
mov
fimul
dec
repz
cwde
inc
xchg
cmp
cmp
mov
aam
in
push
adc
fwait
jle
or
jge
add
(bad)
push
adc
and
fst
sbb
sbb
sub
mov
(bad)
lahf
xchg
cmp
(bad)
loope
mov
imul
jne
aas
rcl
or
push
mov
or
stos
dec
mov
sbb
mov
mov
cld
mov
cmp
dec
xchg
push
jp
fsub
shl
inc
push
dec
lock
pop
fsubp
icebp
sub
and
gs
test
ror
mov
mov
pop
push
pop
jge
inc
xchg
mov
xor
lods
sub
in
cdq
scas
mov
lods
mov
sub
jne
xchg
and
aas
(bad)
xor
pop
(bad)
test
cmp
lock
xor
mov
pop
ins
stos
test
push
dec
ror
sbb
out
popa
icebp
mov
not
loope
(bad)
cmp
shr
sub
xor
nop
out
scas
lea
aas
push
add
cwde
mov
aam
jno
jmp
movs
ror
mov
and
in
xor
mov
xchg
out
packssdw
and
test
enter
dec
inc
sub
leave
push
mov
dec
scas
and
add
cmc
ret
sub
mov
(bad)
mov
xor
push
pop
(bad)
xchg
enter
aam
mov
(bad)
mov
jg
jae
mov
cmp
mov
mov
outs
adc
adc
in
repz
mov
dec
push
jno
adc
or
inc
(bad)
cld
xor
retf
leave
es
or
xor
in
add
sub
push
push
cmp
jbe
dec
push
pushf
int3
xchg
cmps
push
dec
mov
push
jp
jae
(bad)
cs
js
or
pusha
mov
cli
mov
xor
cmp
frstor
rcr
sub
ret
loope
fs
cmp
add
xor
lahf
adc
js
fld
inc
cmps
sbb
shl
(bad)
mov
dec
mov
push
xabort
jge
fst
and
iret
fnstsw
inc
jae
loop
xor
adc
xor
lea
ds
pop
ins
inc
(bad)
mov
(bad)
stc
cdq
push
cs
pop
repnz
mov
loop
rcr
sar
bnd
jae
sbb
jnp
sbb
mov
js
imul
scas
sbb
xor
mov
mov
dec
sbb
sub
adc
fnsave
inc
arpl
mov
fld
dec
in
cli
loop
cwde
mov
dec
pop
mov
loope
pop
jbe
pop
imul
add
xor
into
dec
push
(bad)
out
rol
sub
sbb
and
cmp
fsubr
mov
pop
inc
repz
aas
mov
adc
lods
mov
cmp
lds
cmp
pushf
loope
out
scas
pop
data16
add
retf
mov
mov
and
out
fadd
pop
mov
sub
ins
push
ja
in
out
ds
loop
pop
dec
sar
sub
or
dec
sar
sbb
std
or
mov
mov
xor
xor
test
push
call
fisubr
shl
xor
pop
jns
push
outs
pushf
inc
stos
adc
shr
mov
add
pusha
push
sbb
or
dec
(bad)
(bad)
imul
mov
(bad)
addr16
addr16
(bad)
inc
mov
mov
mov
mov
sbb
mov
scas
repz
mov
lods
jp
cmc
mov
sub
into
mov
repz
mov
mov
inc
cdq
mov
sbb
aam
ins
jnp
mov
mov
(bad)
and
add
xor
mov
pop
loop
xchg
sti
pusha
pop
mov
jns
jl
pop
pop
mov
lock
or
adc
(bad)
and
adc
fsubr
sbb
mov
inc
push
pop
cmp
leave
cwde
dec
shl
pop
movs
push
push
or
bound
mov
(bad)
or
ins
pop
mov
jo
jmp
dec
mov
frstor
xlat
push
xor
dec
add
jnp
mov
or
jnp
cmc
leave
mov
push
push
and
ror
mov
call
mov
mov
push
(bad)
(bad)
pop
sub
ins
retf
mov
sbb
in
mov
mov
and
loope
cmp
adc
push
mov
mov
fisub
dec
in
mov
jb
or
ja
xor
mov
sbb
pop
mov
inc
push
cmp
adc
cmp
pop
out
jno
stos
adc
lds
shr
popf
ja
or
pop
rol
jmp
(bad)
movs
repz
mov
imul
lods
pop
pop
shl
imul
inc
scas
stos
cmp
ss
rol
and
test
ss
aam
loopne
cmc
dec
dec
retf
jp
and
xor
es
mov
and
out
fwait
ret
xor
popf
mov
mov
mov
dec
lahf
jle
cmp
jno
or
mov
(bad)
mov
sub
and
adc
push
mov
and
push
(bad)
fsub
sub
jmp
std
jno
arpl
cmc
int
xchg
and
popf
push
movs
add
push
mov
jge
repz
adc
out
cmps
add
mov
push
aas
push
test
push
xor
mov
push
arpl
cmp
dec
ja
inc
in
ficomp
or
push
scas
aam
fnsave
out
mov
xchg
mov
outs
jecxz
mov
fiadd
iret
cmp
icebp
xchg
in
xchg
push
mov
arpl
lock
push
push
cmps
jns
lods
and
or
int
push
dec
push
dec
dec
mov
dec
dec
inc
sbb
push
push
retf
mov
jbe
adc
retf
and
retf
and
ss
jmp
push
xchg
or
nop
push
gs
xlat
cmp
mov
mov
sub
shr
arpl
(bad)
mov
mov
and
add
mov
mov
ret
mov
mov
repnz
cmp
(bad)
ds
sbb
shl
call
dec
dec
ss
jb
gs
push
scas
retf
fst
xor
pop
inc
mul
ins
les
pop
fisttp
jae
mov
rcl
add
mov
adc
push
xchg
jge
mov
mov
jle
lods
sub
xor
add
mov
add
jecxz
push
xor
inc
hlt
out
mov
lods
inc
les
jb
rcr
xor
mov
(bad)
retf
sbb
test
call
push
iret
imul
gs
ffreep
dec
inc
xchg
in
sub
fidivr
in
mov
(bad)
mov
lods
adc
sti
sti
cli
fistp
leave
stos
ficom
sbb
(bad)
dec
pop
mov
retf
lea
inc
add
mov
cmps
fstcw
lock
or
clc
fcmovnu
add
les
lods
imul
cmp
retf
lock
pusha
fcom
pop
call
inc
pop
mov
imul
daa
and
test
mov
pushf
(bad)
imul
mov
inc
(bad)
or
push
dec
adc
shl
jo
pop
push
push
cdq
movs
aad
sbb
std
xor
push
test
retf
in
inc
cmps
inc
add
call
add
scas
push
and
pop
or
jno
rcr
add
inc
mov
pop
inc
popa
push
cmc
xchg
mov
loop
adc
or
out
xor
and
mov
mov
xor
fidivr
or
out
inc
jb
(bad)
pop
mov
push
(bad)
cld
xchg
or
push
xor
out
mov
sbb
retf
popf
mov
es
fadd
loopne
or
jp
mov
out
or
jae
adc
mov
in
imul
icebp
mov
sbb
in
or
icebp
inc
mov
cmp
inc
pop
adc
mov
fwait
mov
and
xchg
not
ficomp
or
inc
mov
adc
cmc
inc
fisttp
pop
jo
cmps
and
pop
imul
test
xchg
push
(bad)
jmp
jle
stos
aaa
xchg
dec
jb
jmp
cwde
push
inc
cmp
pop
push
sbb
scas
push
jae
out
test
int3
gs
neg
mov
or
jmp
rcl
das
popa
inc
push
cmc
xor
and
test
sti
dec
(bad)
out
cdq
mov
sub
sbb
sbb
mov
ret
sbb
leave
bound
ds
and
scas
call
mov
aaa
hlt
fmul
push
pop
or
stos
cli
ret
sub
in
push
mov
rcr
or
mov
pop
inc
fimul
std
jl
push
in
jo
mov
and
add
lods
adc
ret
test
data16
in
inc
xchg
adc
or
(bad)
jg
es
ins
cmp
jno
push
js
vmovapd
aam
ins
sub
sub
add
mov
icebp
lea
xor
and
sar
push
lods
xchg
adc
test
sub
call
std
mov
popa
addr16
mov
shr
call
and
bound
(bad)
out
xchg
sti
fidivr
mov
adc
mov
clc
retf
pop
cdq
mov
sahf
in
sbb
aam
cmc
retf
ja
in
jnp
adc
ret
lock
enter
repz
pop
bt
arpl
xchg
add
add
adc
aaa
lock
scas
pop
rcl
int
mov
mov
or
retf
pop
fisub
xor
mov
leave
in
add
jb
pop
mov
lods
test
in
push
in
mov
mov
outs
test
fnsetpm(287
popa
or
jmp
mov
mov
xor
mov
add
xchg
sbb
aad
cmp
xchg
addr16
scas
or
mov
sub
dec
xlat
sub
or
inc
add
xor
push
jnp
ret
inc
push
push
pop
mov
jo
arpl
mov
sub
sbb
or
aas
mov
nop
pop
cmp
pop
add
movs
cs
movs
pop
sbb
sti
lds
in
iret
shr
or
xchg
mov
push
psubq
mov
jne
gs
loop
or
dec
push
cmp
in
push
dec
out
imul
cli
mov
adc
jmp
aas
mov
sub
test
clc
call
test
push
jmp
outs
cmp
xor
xor
cwde
retf
cmc
or
(bad)
shl
jo
dec
std
lds
xchg
movs
and
mov
imul
mov
add
(bad)
out
shl
and
jg
imul
inc
or
neg
add
mov
hlt
shr
jb
ror
xchg
je
mov
dec
jge
lods
mov
je
in
cmps
retf
push
gs
int3
jmp
call
inc
mov
or
adc
int3
push
push
sub
mov
add
xchg
or
push
cmp
ds
jecxz
loopne
iret
jmp
fwait
mov
xchg
mov
hlt
mov
daa
cdq
scas
(bad)
cmps
bound
sbb
jp
dec
cs
cmp
sub
xor
mov
and
sub
dec
push
jnp
jns
push
xchg
jl
ds
push
fwait
aam
push
loope
xchg
add
sub
dec
or
xchg
and
xchg
push
cmp
push
dec
sub
rcr
jno
(bad)
mul
mov
sahf
jecxz
cs
scas
and
ins
cmps
xadd
dec
call
stos
rcr
cmp
jmp
or
inc
pop
scas
jb
or
mov
mov
jno
jecxz
mov
es
pushf
sbb
cmp
je
jae
cmp
xlat
adc
fstp
adc
sbb
icebp
jo
enter
push
popf
call
or
in
fbstp
mov
lods
pop
jbe
dec
sbb
cmp
pop
jmp
mov
mov
sbb
sti
xor
std
lahf
add
ja
push
push
dec
inc
sub
sbb
imul
push
test
out
clc
lahf
pop
inc
std
cmp
dec
mov
cmp
dec
mov
jl
lock
sti
nop
push
mov
push
shl
jno
cmovo
pop
fcom
out
out
mov
mov
xchg
sub
outs
mov
mov
(bad)
sub
or
push
inc
xor
or
pop
addr16
cmp
pop
out
sti
hlt
cmc
jno
mov
push
sub
aas
cmp
lods
mov
stc
and
jg
mov
xlat
sbb
cmp
jnp
pop
les
inc
push
cwde
mov
sub
xchg
push
mov
outs
call
into
fs
mov
fadd
cmp
push
shl
dec
mov
addr16
cmp
scas
mov
sbb
addr16
mov
pushw
scas
pushf
adc
mov
fs
mov
mov
out
les
or
pop
in
jbe
pop
push
scas
add
arpl
xor
test
mov
mov
sub
jl
cld
cmp
xor
test
mov
pop
jge
mov
adc
(bad)
sub
mov
les
movs
xchg
sub
pop
enter
mov
fnstenv
test
mov
pop
xchg
mov
and
aad
(bad)
cdq
adc
xor
test
(bad)
bound
sub
mov
push
(bad)
cmp
mov
inc
xchg
mov
cwde
les
sahf
jmp
xchg
sbb
push
loopne
(bad)
mov
inc
sub
pop
imul
popa
xchg
in
adc
mov
jbe
ss
mov
adc
cmps
ins
xchg
call
pusha
pop
rep
ins
jl
cli
and
jp
adc
inc
loop
scas
push
inc
jno
(bad)
fst
pop
inc
ins
and
clc
inc
icebp
cmps
mov
xchg
fistp
mov
pusha
ror
das
imul
mov
pop
mov
and
imul
push
rol
jne
jg
cmp
scas
xor
add
out
js
repnz
xchg
lds
leave
outs
out
stos
dec
sbb
pushf
xor
fcom
mov
test
cld
pop
add
popf
repnz
xchg
inc
aas
and
mov
out
push
sub
cmc
sbb
jl
inc
cmp
ins
mov
pushf
or
sbb
cmp
cmp
xchg
(bad)
dec
js
test
out
les
cmp
rol
fdivr
and
mov
mov
gs
add
dec
(bad)
xor
xchg
lods
ret
xchg
xor
jo
int
sbb
(bad)
mov
test
cmps
adc
cmp
jmp
fld
cmps
movs
jmp
jg
xor
jns
repz
ret
jl
sub
mov
push
mov
add
mov
dec
call
test
inc
inc
retf
aaa
jnp
loopne
xchg
fadd
adc
data16
ins
repz
mov
ja
mov
mov
jo
mov
ret
pop
imul
pop
xor
ret
repz
push
add
pop
mov
adc
jae
out
shr
pop
ret
add
xor
inc
ins
dec
call
add
xchg
mov
lods
addr16
nop
inc
in
pop
push
sub
add
data16
jmp
jns
sahf
inc
xchg
loopne
movs
push
jp
jge
addr16
xchg
mov
aad
add
xchg
mov
cmc
add
or
sbb
lods
rcr
jmp
inc
and
add
das
cmp
lock
aad
mov
push
inc
adc
bound
mov
cwde
cmp
mov
nop
not
pop
add
jmp
adc
dec
push
pop
adc
mov
mov
inc
shl
mov
mov
push
xchg
fs
fcom
fincstp
lods
xchg
imul
jb
out
mov
in
adc
repz
hlt
xor
mov
xchg
int
lock
aam
imul
mov
ror
cmp
xor
popf
imul
jecxz
inc
sar
fwait
dec
std
pop
jno
popa
ficomp
mov
cs
mov
pop
pop
jne
int3
dec
add
mov
(bad)
(bad)
mov
into
cmps
or
dec
adc
sar
fdiv
jecxz
nop
outs
out
stos
(bad)
mov
test
jmp
push
fdiv
lds
mov
into
xchg
ins
push
sahf
popf
data16
jg
mov
std
sbb
outs
repz
out
icebp
and
test
cmc
out
pop
sbb
test
daa
sub
or
mov
es
(bad)
xor
addr16
xchg
shr
test
mov
sub
mov
cmp
xchg
push
xchg
out
mov
adc
fdivr
push
cmp
jnp
repnz
adc
pop
int3
ins
cs
pop
sub
fwait
mov
bound
jae
sahf
xor
mov
cmc
mov
rol
out
add
cmp
xchg
ja
add
sub
push
test
mov
aad
gs
ret
aas
pop
lahf
mov
scas
push
arpl
daa
not
repz
lock
ins
pop
and
not
jl
lods
je
xor
ins
jbe
in
(bad)
mov
jmp
jnp
or
(bad)
lahf
std
fs
add
cmc
arpl
jg
test
mov
cwde
or
cmp
inc
adc
cld
jp
mov
jbe
rcl
idiv
sub
cmp
shl
and
jno
movs
sub
adc
adc
or
out
mov
push
sub
arpl
push
jbe
jmp
push
xchg
test
push
inc
jecxz
jbe
push
jae
or
xor
xor
mov
aas
xchg
mov
xlat
ror
js
aam
repnz
mov
xor
hlt
mov
(bad)
loopne
dec
jae
inc
(bad)
dec
pop
nop
xchg
and
repnz
cs
add
retf
mov
pop
fs
jb
loopne
js
inc
pop
fisttp
inc
xor
adc
mov
push
cmp
mov
push
dec
dec
mov
sar
out
dec
pop
mov
or
mov
fsub
pop
daa
test
push
or
cmps
push
jg
(bad)
add
aaa
jae
jge
hlt
dec
mov
jo
or
call
inc
adc
test
mov
jns
shl
or
sbb
sub
cmc
or
or
gs
cmp
xchg
test
push
nop
rcl
and
xchg
cmp
push
or
outs
aas
jp
mov
sub
fsubr
jle
dec
aas
call
sti
sti
test
sub
fcmovnu
imul
les
push
xchg
adc
dec
shl
pop
add
pop
popf
shl
repnz
ret
dec
sahf
dec
movs
popa
or
shl
mov
push
cmp
cmp
je
repnz
mov
xchg
(bad)
dec
push
call
push
sub
ss
cdq
test
mov
ror
popa
les
lahf
movs
aam
stos
retf
scas
sbb
pop
jle
mov
xor
pop
shr
inc
add
cwde
sub
mov
mov
fisttp
push
retf
mov
xadd
xchg
sti
cmp
mov
cmp
cdq
push
call
mov
xchg
push
and
adc
fimul
int
ss
in
jp
jae
push
sahf
push
pop
fstp
sub
or
das
mov
fldcw
xchg
mov
sbb
jmp
ficomp
mov
retf
ffree
xchg
ss
cdq
mov
lahf
mov
mov
retf
int3
mov
xchg
aam
and
gs
in
xchg
rol
(bad)
paddq
push
mov
test
int
xor
xchg
ds
xor
out
imul
jns
push
pop
sub
mov
int
pop
adc
in
ficom
xchg
pop
jmp
cli
mov
je
add
int3
or
or
nop
div
pop
popa
mov
mov
mov
int3
retf
push
es
and
sbb
push
enter
or
shl
or
jl
(bad)
push
cmp
je
or
loope
mov
cdq
mov
mov
xor
inc
out
inc
pop
popf
jle
lahf
sub
pop
es
shl
push
dec
movs
cld
in
add
xchg
mov
test
retf
ffree
inc
fs
sub
jle
iret
jne
jbe
and
cmp
or
pop
pop
outs
push
fwait
pop
fadd
es
jp
mov
xchg
or
adc
int
in
cmps
add
gs
sar
xor
sbb
mov
sbb
fptan
xchg
lea
dec
retf
cmp
sbb
jle
xor
adc
xchg
inc
push
(bad)
pusha
sbb
movs
sbb
adc
dec
add
push
push
loope
adc
push
lods
pop
rol
scas
out
sub
pop
xor
inc
add
push
dec
jae
sahf
ds
add
mov
jne
cmp
jno
push
fnstenv
mov
xor
out
js
xchg
mov
xchg
adc
push
xor
dec
cs
lds
clc
adc
cwde
or
xchg
leave
stc
mov
add
adc
stos
mov
add
popf
mov
pop
push
mov
mov
aas
clc
and
out
je
xor
add
adc
dec
ja
xor
jns
mov
jb
aaa
sbb
cmp
xchg
cmp
sub
(bad)
cmps
dec
fdivr
xchg
scas
mov
test
xchg
xor
fwait
out
cwde
neg
cmp
sti
shl
ret
cwde
jle
es
push
movsx
out
lods
leave
mov
xchg
out
pop
ret
(bad)
not
outs
js
test
loop
test
xor
mov
mov
pop
in
sbb
rol
(bad)
jecxz
and
cmps
push
cld
jecxz
cmp
mov
inc
mov
push
jae
aam
icebp
(bad)
movs
cli
jns
and
inc
jae
or
(bad)
mov
sub
jo
and
and
cmp
mov
pusha
out
jns
push
imul
imul
les
sti
out
push
xchg
shr
and
loop
popa
dec
push
mov
mov
es
out
fcom
test
push
dec
retf
stos
or
rol
lock
(bad)
xor
retf
xchg
dec
cmp
cmps
inc
lahf
mov
stos
mov
adc
sbb
nop
pop
mov
sbb
push
mov
fdiv
or
xor
xchg
add
push
(bad)
fidiv
movs
pop
dec
lds
ja
sbb
in
fild
push
stc
adc
add
inc
xchg
pop
add
sbb
mov
ret
fsubrp
jmp
aad
mov
xor
xchg
arpl
cmc
dec
mov
mov
or
sahf
scas
jmp
fadd
sub
mov
mov
loope
jl
sbb
xchg
gs
cmps
add
mov
pop
cli
jo
push
rol
pop
mov
mov
mov
sbb
and
pop
mov
lods
movs
movs
and
jl
mov
jno
(bad)
sbb
or
retf
sub
and
in
inc
pop
or
and
cmp
rcr
inc
mov
ret
loop
repz
cmp
push
test
push
pop
test
stos
sbb
outs
mov
sub
xchg
sub
ins
push
xchg
or
into
mov
inc
or
outs
(bad)
fstp
cmp
pop
repnz
cmp
mov
lods
xchg
adc
fistp
enter
popf
pop
xchg
pop
stos
cmp
mov
adc
inc
fnstsw
cmp
into
inc
aas
sbb
stos
add
or
add
adc
sub
les
xchg
pop
adc
jne
cmp
mov
sub
ins
push
mov
in
imul
out
test
into
sub
adc
cmp
cmp
jnp
in
mov
cwde
ss
or
sbb
jnp
out
fiadd
jg
dec
dec
popf
mov
fs
ins
movs
mov
or
gs
mov
push
sbb
es
imul
cmp
sub
and
mov
rcl
or
ret
pusha
jle
aas
mov
loopne
xor
xor
retf
jb
leave
dec
into
stos
movs
lock
jnp
push
mov
jns
jmp
pop
pop
int3
mov
shr
std
das
xchg
icebp
jle
xor
outs
sbb
sbb
mov
pop
fimul
or
lods
sub
xor
xchg
mov
mov
cs
push
fs
inc
push
lahf
cdq
sub
mov
jno
adc
rcr
sbb
or
sub
ds
loope
or
jecxz
ins
jl
cmc
push
daa
(bad)
loope
popa
out
rol
adc
jecxz
popf
lods
imul
inc
lea
js
or
and
adc
jbe
push
and
xor
dec
pop
inc
sub
les
mov
scas
inc
sar
int
mov
ss
je
sbb
sbb
push
adc
xchg
pop
sub
stos
scas
sti
jb
push
test
sbb
push
(bad)
sbb
or
stos
cs
pop
nop
je
sub
sar
mov
dec
mov
add
add
fwait
pop
or
push
jnp
sbb
xchg
idiv
retf
or
movs
mov
adc
mov
and
add
push
inc
popf
xor
in
jo
or
jnp
add
cdq
rcl
test
dec
mov
or
cmc
sbb
and
rcr
(bad)
mov
fwait
dec
shl
xchg
lea
jnp
xchg
or
les
cmps
pop
jp
lods
and
jnp
pop
add
mov
inc
add
pop
dec
lods
xchg
mov
out
(bad)
push
xor
mov
pop
xchg
mov
push
xor
push
pop
lea
jo
(bad)
lock
retf
(bad)
mov
cmp
mov
sub
in
sub
xchg
ret
clc
sub
adc
or
cmp
or
int
jmp
jge
fidiv
shl
xchg
div
cs
inc
cmp
pop
jmp
push
sub
jae
and
jo
xor
sub
ja
mov
jl
fdiv
pop
mov
mov
adc
add
pop
movs
or
arpl
jg
out
stc
icebp
jl
mov
sub
or
in
movs
xchg
sbb
cdq
cmp
into
retf
sub
mov
dec
mov
movs
jb
inc
cmp
inc
ret
mov
mov
push
xchg
cmc
sub
inc
jo
or
sub
repnz
push
adc
mov
cdq
sub
dec
addr16
mov
xor
repnz
hlt
mov
cmp
dec
inc
sti
nop
pushw
xchg
popa
movs
jecxz
mov
jb
jbe
loop
or
mov
gs
int
shl
jmp
(bad)
and
inc
fimul
aaa
mov
sub
outs
ins
neg
jbe
cmps
xchg
and
mov
(bad)
ror
hlt
inc
in
cli
inc
hlt
into
sbb
fucom
push
xor
shl
call
idiv
fwait
inc
push
mov
pop
mov
retf
js
xor
xchg
clc
fdivp
pop
mov
push
call
cmp
ficom
and
mov
push
mov
popa
xchg
repz
inc
repz
test
out
enter
ret
mov
popa
call
(bad)
loope
xor
adc
jne
sub
cmps
call
cmp
imul
push
scas
js
sbb
mov
aam
jmp
push
add
mulps
daa
xchg
adc
jae
aad
sub
sub
sbb
adc
xlat
pop
push
xlat
fs
ins
cs
(bad)
lock
adc
fcomi
inc
int3
cmps
jge
cmps
jnp
in
stc
or
xor
paddq
stos
je
fsubr
stc
ja
xor
mov
dec
sub
outs
sub
(bad)
jge
das
sahf
xor
loop
xchg
cmp
push
(bad)
mov
sbb
push
sbb
mov
ret
idiv
enter
jnp
xchg
cmp
sub
in
jle
cld
pop
test
std
mov
clc
lahf
bound
add
(bad)
out
or
imul
xchg
xchg
out
fisubr
(bad)
or
fxtract
mov
(bad)
cmp
pop
popa
cmps
inc
mov
(bad)
dec
loope
or
xchg
xchg
pop
out
xor
loop
ret
or
call
push
out
jb
jnp
mov
mov
(bad)
in
pop
and
test
lods
pop
xchg
retf
aas
sub
xchg
icebp
retf
stc
into
xchg
xor
ds
(bad)
int3
add
retf
retf
sub
mov
cmp
clc
push
popf
push
cs
out
loop
dec
imul
inc
push
ins
pop
cdq
and
push
xor
pop
scas
xchg
mov
fxrstor
dec
gs
mov
cmps
jecxz
jnp
shl
push
and
dec
jmp
push
dec
ja
sub
test
test
lds
shr
pop
fcomp
sar
ror
pop
xor
xchg
fwait
stos
imul
lods
dec
fadd
or
inc
sub
iret
bound
rcr
push
add
mov
test
test
jl
repz
test
adc
cmp
test
xchg
push
pusha
sub
pushw
test
cld
lds
push
imul
jb
mov
aam
inc
push
fcom
xchg
pop
pop
adc
sahf
fcomip
test
int3
jae
add
push
sub
imul
pop
sbb
push
pop
xor
push
fwait
cld
jge
sbb
sahf
ret
jnp
cdq
sbb
add
mov
ss
ret
inc
jmp
icebp
call
fisub
repnz
in
aad
adc
adc
add
cmps
cdq
inc
add
dec
xchg
(bad)
add
out
mov
pop
test
pop
arpl
test
repz
add
mov
sbb
lock
push
repnz
mov
div
pop
in
sub
retf
cmp
sub
(bad)
lds
enter
rol
or
and
retf
pop
out
adc
ins
dec
fnsave
and
aaa
adc
push
mov
add
ds
pop
fmul
xor
jbe
xchg
clc
jo
push
cmp
aas
or
ror
cmp
push
ds
nop
stos
js
popf
adc
dec
cli
movs
jb
jg
and
cmp
pop
es
push
and
xor
mov
push
aas
fisttp
jno
mul
push
pop
and
sbb
jae
add
xchg
aas
cmp
test
sbb
sbb
cld
pop
lods
je
xlat
mov
aaa
and
add
sahf
nop
mov
add
fist
dec
cmp
movs
ret
mov
stc
dec
cwde
test
pop
push
pop
push
jmp
jmp
das
mov
pop
outs
inc
imul
nop
dec
fistp
and
aam
call
push
ret
pop
inc
mov
mov
mov
add
repz
in
loope
inc
getsec
or
adc
out
pusha
mov
imul
mov
sbb
xchg
aas
(bad)
cld
je
cmps
cmps
es
dec
sub
xchg
cmps
ficom
cdq
test
aam
lds
add
fimul
adc
(bad)
mov
stos
daa
mov
xor
sub
mov
cmp
mov
popf
sub
and
mov
dec
xchg
jno
jle
pop
iret
pop
xchg
ret
retf
cld
adc
sbb
cmp
cmp
imul
call
inc
push
xchg
in
xlat
cwde
xchg
push
sub
cmp
push
xor
icebp
jecxz
mov
sub
idiv
dec
cmps
cmps
jae
xor
push
in
and
jae
push
aaa
daa
out
into
and
sbb
sti
ds
lock
cld
hlt
cmp
jbe
gs
ret
inc
retf
test
shl
rcr
and
sub
jbe
cmp
cmps
adc
push
jg
stc
cmp
add
cs
jg
add
xchg
pop
std
arpl
or
cmp
and
outs
mov
xchg
arpl
cmps
push
inc
add
xor
aaa
mov
xchg
jge
xor
(bad)
cdq
mov
fs
mov
call
xchg
movs
push
in
fs
test
sub
jp
(bad)
hlt
and
adc
lods
ret
test
fnstenv
fnstcw
adc
inc
lea
lock
sbb
cmp
(bad)
adc
out
or
popa
enter
jecxz
nop
imul
mov
mov
ds
pop
sub
mov
nop
xchg
add
and
adc
test
gs
cmps
dec
in
sbb
fdivr
pusha
sub
repz
push
or
gs
jl
pop
mov
iret
bound
imul
in
inc
and
js
jno
cmp
loope
sub
or
jp
mov
repnz
xor
adc
int
push
fist
fisttp
jbe
add
cmp
push
arpl
mov
adc
mov
or
inc
adc
xchg
mov
or
jbe
mov
call
aas
call
adc
js
inc
je
mov
dec
adc
push
arpl
clc
bound
mov
call
and
in
xchg
outs
inc
popf
push
ss
sub
data16
pushfw
cdq
loop
mov
jecxz
mov
xchg
pop
cs
test
std
data16
ror
pop
es
xor
(bad)
mov
inc
jmp
aam
and
ret
adc
inc
sbb
scas
mov
xchg
jo
loopne
cmp
xlat
movs
xchg
mov
jl
dec
and
add
pminub
shl
int3
or
or
cmc
xor
cmp
mov
lds
out
mov
jmp
popf
push
mov
dec
dec
mov
jmp
loop
std
inc
test
sub
and
lds
stos
xor
push
out
pop
mov
rcl
jmp
iret
push
dec
sbb
xchg
repnz
rol
stc
int3
jb
sub
dec
inc
cld
xchg
sub
inc
pop
push
xchg
dec
lds
jmp
mov
scas
push
sbb
mov
outs
sbb
and
lahf
aaa
push
ins
popw
mov
es
sub
enter
bound
jmp
out
mov
ss
ins
sub
xor
outs
shl
sub
add
cmp
scas
stc
ins
adc
ret
inc
(bad)
inc
(bad)
(bad)
fimul
ficom
sbb
add
ins
jae
arpl
lds
xor
mov
sbb
push
pusha
cli
mov
psubsw
and
mov
xor
(bad)
xlat
mov
cmp
mov
stos
ds
cmp
jmp
shr
jns
rcr
push
jg
ror
dec
push
adc
and
jg
shl
cmp
push
sub
aas
xor
inc
out
sbb
xor
(bad)
or
or
arpl
in
inc
mov
xchg
imul
pop
pop
in
sbb
pop
in
gs
sub
xor
lea
std
(bad)
adc
jmp
and
and
or
sub
mov
cmps
cdq
out
jl
jmp
mov
movs
push
lods
mov
fcom
push
or
dec
xchg
lahf
push
pusha
mov
mov
fistp
cmp
loope
adc
and
aaa
mov
xor
add
jo
jg
inc
xor
enter
jae
push
push
push
popa
push
cmp
call
mov
adc
sbb
cmp
xchg
loopne
clc
add
and
sbb
push
je
push
arpl
pop
mov
sbb
dec
(bad)
loopne
mov
retf
push
cmp
fldenv
stc
jmp
xchg
fnstcw
cmp
mov
pop
mov
mov
mov
sbb
out
add
mov
fdivr
inc
sahf
mov
rcr
mov
ror
mov
sar
aaa
dec
fstp
pop
sbb
ret
sbb
fnsave
pushf
push
pop
repnz
in
stos
les
arpl
dec
inc
push
call
cwde
or
in
pop
push
cmp
mov
mov
nop
and
fsub
jno
mov
adc
ret
or
sub
mov
or
lods
or
push
std
scas
push
jle
fidivr
sbb
xor
xchg
xchg
dec
daa
mov
imul
or
add
adc
pop
dec
push
mov
push
mov
fisubr
mov
out
push
and
scas
mov
repz
jnp
xor
adc
and
in
retf
ins
push
push
push
movs
mov
in
rol
xor
adc
mov
out
dec
sub
sbb
fst
cdq
xchg
or
mov
fmul
add
iret
sub
out
or
jle
dec
jp
gs
imul
pop
mov
xor
or
lock
mov
call
add
xor
sub
mov
and
sub
out
and
mov
ror
inc
jmp
leave
in
adc
imul
sbb
dec
cmc
inc
add
scas
inc
daa
inc
dec
push
jge
bound
sub
pop
sub
out
clc
push
xor
test
sub
mov
lods
ins
mov
push
or
cli
(bad)
cmps
add
xor
jp
add
jmp
push
mov
lods
push
cmp
das
int3
cmps
mov
mov
jb
nop
data16
addr16
movs
daa
fistp
jbe
add
movs
mov
xchg
sub
mov
adc
push
imul
inc
sub
mov
scas
adc
sbb
jl
mov
xchg
hlt
in
adc
sbb
dec
mov
pop
and
mov
loopne
cmp
scas
push
loope
inc
xor
mov
call
xor
(bad)
or
push
fisttp
lds
add
pop
test
push
ret
fcmovnbe
out
inc
cmps
mov
loop
in
fnstsw
cmp
ds
mov
xor
bound
pop
lods
push
cmc
or
fcom
jns
dec
and
rcr
or
pop
adc
push
jne
shl
adc
icebp
mov
mov
adc
cmc
fstp
loop
sbb
xor
pop
push
(bad)
mov
xchg
sub
sub
xor
popf
movlps
jp
in
mov
int
push
push
inc
dec
cmp
pushf
xchg
test
jmp
or
stos
(bad)
fsubp
jmp
inc
mov
or
push
mov
cmp
je
nop
sub
jg
xchg
enter
mov
jae
xor
push
push
fcomi
or
aam
call
aaa
stos
add
add
and
sbb
dec
pop
xchg
clc
cmp
dec
shr
pop
dec
fiadd
push
mov
xor
inc
test
jmp
jno
ja
ins
retf
adc
data16
push
cmp
bound
mov
ds
inc
xchg
push
test
in
dec
jae
dec
pop
push
stc
repnz
push
jns
mov
push
lahf
and
test
(bad)
test
add
jle
shl
rcr
repz
test
pop
loopne
mov
js
loope
div
mov
mov
pop
out
sbb
add
pusha
adc
rcl
cmps
mov
sub
retf
gs
pusha
sbb
jbe
cmp
pushf
inc
sbb
xor
add
push
mov
mov
les
adc
xor
jbe
lods
loop
repz
inc
ins
push
scas
call
movs
jp
mov
dec
or
mov
lods
sbb
fbld
mov
movs
mov
cmps
sbb
test
sub
shr
je
push
fimul
pusha
xchg
lahf
xchg
pusha
add
movs
push
and
and
outs
repnz
aam
scas
lods
mov
(bad)
sub
lods
in
sbb
or
ds
cmp
jecxz
dec
ins
call
push
mov
push
jmp
out
js
sti
mov
sbb
jle
les
jbe
and
cli
cmp
dec
out
dec
cld
mov
sub
fisttp
add
add
mov
mov
cs
addr16
into
stos
cmp
push
arpl
inc
out
xchg
popa
ja
push
iret
test
xor
call
ret
outs
scas
xchg
aas
(bad)
movs
jae
sbb
pop
stc
add
lahf
ret
outs
iret
xchg
jb
mov
sti
fwait
sahf
sub
jbe
fisubr
dec
pop
mov
and
dec
je
inc
out
add
cld
out
out
xor
cmp
sub
xor
aaa
out
test
jo
fidiv
jecxz
iret
pop
xchg
ror
mov
or
loop
aas
mov
add
daa
xor
retf
jb
mov
mov
(bad)
xor
mov
push
pop
push
xor
cmp
jmp
cwde
fbstp
sbb
jge
hlt
add
mov
std
push
mov
mov
adc
pop
mov
and
adc
jbe
inc
jae
cwde
pop
mov
addr16
inc
imul
adc
dec
out
stos
popa
std
in
pop
call
stos
out
scas
or
cdq
adc
jb
fisubr
stos
sub
jns
retf
(bad)
mov
loope
push
push
stc
(bad)
into
mov
jae
iret
dec
or
hlt
and
jb
test
mov
mov
scas
sub
pop
jle
repnz
mov
sub
push
and
popa
test
sbb
cmp
ja
inc
mov
adc
(bad)
fst
fidiv
and
push
inc
lds
jnp
jae
add
sub
add
ins
cmp
push
rcl
sub
pop
mov
pusha
rcl
inc
xchg
jl
inc
pop
lock
imul
arpl
fmul
add
fwait
push
mov
cli
mov
xor
mov
or
aas
pop
out
ja
xor
cs
call
loope
cmp
xchg
pop
adc
cmp
pop
int3
int3
and
sbb
cmp
xchg
mov
mov
xlat
repnz
aad
cdq
out
cmp
sbb
ret
pop
sbb
and
fmul
(bad)
iret
sub
dec
std
cmp
ds
sub
adc
and
push
and
sub
push
mov
jge
xchg
shl
sbb
jge
mov
lahf
ss
(bad)
xor
push
inc
xchg
test
inc
cmp
(bad)
and
jmp
call
cli
dec
fidivr
(bad)
xchg
push
(bad)
loopne
pushf
arpl
loop
adc
cmc
xor
push
adc
fstp
pop
push
cmp
mov
movs
pusha
pop
add
gs
jae
mov
out
dec
xor
mov
loope
shl
retf
lock
sbb
hlt
stos
jb
mul
mov
or
std
jp
xor
cmp
js
not
adc
sar
push
inc
(bad)
movs
cdq
jo
push
test
mov
aas
mov
or
cmp
ret
sbb
mov
fst
push
jmp
pop
pushf
(bad)
sti
pop
sbb
mov
jl
adc
aas
mov
inc
popa
es
das
mov
(bad)
jae
in
push
test
fld
pop
je
add
pusha
add
adc
xchg
mov
pop
xchg
sub
and
out
lahf
push
mov
push
pushf
pop
rcl
nop
pop
mov
stos
push
jne
subps
stc
cmp
inc
cmc
rol
int
imul
repz
pop
stc
mov
mov
and
scas
mov
jb
lods
movs
in
mov
mov
sub
imul
add
pop
push
into
ret
aam
inc
xor
pop
add
add
ins
aas
and
or
mov
in
jbe
xchg
in
test
xchg
xor
cld
cmp
jnp
scas
xchg
cmps
sahf
jb
sbb
adc
adc
cmp
fdivp
mov
int
or
pop
mov
clc
scas
xor
popf
cmp
jne
pop
inc
pop
and
enter
xchg
push
sub
rcl
mov
sbb
sar
and
leave
mov
clc
test
sbb
and
fstp
inc
inc
loope
mov
js
js
pushw
push
xor
push
(bad)
div
rcr
mov
test
(bad)
aas
aaa
mov
je
ffreep
jne
xchg
push
fidivr
rcl
loope
and
jp
and
sbb
and
adc
test
pushf
ja
or
ret
imul
stc
popf
mov
inc
fldenv
pop
scas
sub
sub
je
mov
sub
clc
ds
inc
mov
or
sub
cdq
xlat
jmp
pop
cmp
clc
enter
shl
mov
push
cmps
rol
test
sbb
mov
cmp
pop
loopne
xchg
lea
outs
(bad)
xchg
mov
loop
xchg
pop
fdiv
imul
in
fidiv
mov
test
jecxz
xor
jae
in
bound
pop
mov
or
enter
jno
mov
dec
inc
cmc
cmp
scas
outs
(bad)
pop
ds
cmp
sbb
ss
xchg
test
add
stc
sub
adc
lock
cmp
jp
mov
and
cwde
out
push
or
js
lea
aaa
call
(bad)
mov
pop
sub
xchg
push
and
pop
popa
std
mov
mov
cmp
push
pop
outs
cmp
loop
clc
sub
imul
xchg
ds
xchg
pop
and
xchg
into
loope
xchg
jmp
fstp
outs
mov
or
int3
adc
jb
(bad)
shl
stos
fild
ins
mov
ret
rol
aad
jnp
ja
push
dec
add
es
inc
stos
arpl
out
sbb
pop
jle
sbb
jns
ins
cmp
cld
outs
pushf
cmp
or
jg
pusha
xchg
push
sub
xchg
or
into
pop
add
jmp
pop
repnz
jl
xchg
and
mov
sub
jp
test
mov
adc
cmps
inc
inc
xchg
out
mov
push
je
fdivr
imul
push
es
ds
adc
mov
in
add
mov
fsubr
inc
movs
push
sar
dec
call
int
out
jg
inc
imul
push
cmp
xor
aaa
jmp
adc
fs
mov
sbb
pusha
cli
sbb
enter
xchg
xor
sbb
cmp
(bad)
mov
clc
sbb
xor
(bad)
adc
lods
mov
dec
fwait
mov
test
mov
mov
sbb
sbb
xchg
stos
add
mov
in
stos
sub
bound
adc
pushf
movs
sbb
test
popf
mov
jmp
(bad)
ja
or
rcl
retf
pop
lods
test
sbb
int3
cmp
jmp
int
xor
adc
sub
xor
adc
stos
rcl
leave
mov
cmps
mov
jbe
out
adc
cmp
das
pushf
mov
sub
sbb
sbb
les
inc
dec
adc
inc
inc
jmp
cs
ret
push
fidiv
add
lock
mov
outs
stos
jle
retf
jge
int3
mov
ins
cmp
(bad)
rcl
fadd
inc
(bad)
mov
sti
pop
sbb
adc
call
jne
in
inc
add
and
jmp
pop
aam
pusha
out
push
dec
jbe
test
pop
dec
mov
fsubp
xor
mov
sub
cmps
jp
mov
xchg
bound
cmc
or
retf
les
inc
pop
ss
xor
fiadd
add
ror
repz
jl
nop
icebp
nop
xor
stos
mov
rol
retf
loopne
inc
dec
arpl
push
jbe
jnp
pop
push
pop
ins
aad
inc
pop
stos
jnp
arpl
and
iret
bound
cld
jbe
pop
sahf
cmc
mov
dec
pop
or
push
ja
in
push
mov
pop
std
data16
loopne
stos
(bad)
les
and
sbb
adc
pop
bnd
push
push
push
out
jg
in
hlt
fs
add
mov
(bad)
rol
movs
mov
lods
push
xchg
and
jae
enter
mov
xor
mov
repz
stos
mov
ror
or
mov
xlat
sub
mov
mov
inc
invd
in
add
and
mov
sbb
cmp
mov
and
sub
push
mov
push
cmc
or
std
push
stos
lods
jg
ins
dec
jbe
mov
inc
mov
push
inc
push
inc
ret
fistp
fsubrp
xor
leave
add
pop
push
rol
mov
dec
xor
inc
lods
xchg
push
add
or
outs
(bad)
mov
pop
es
fisttp
test
arpl
push
(bad)
jb
inc
mov
lea
int
sub
or
data16
xchg
push
mov
(bad)
mov
add
ficom
scas
loop
aam
out
pop
repnz
mov
sbb
and
jg
jno
xchg
sbb
daa
jmp
data16
ret
sub
repnz
outs
mov
adc
push
enter
je
out
sub
and
lahf
xchg
fisubr
push
xchg
test
fld
mov
ja
gs
jecxz
rcr
push
test
daa
xchg
or
sbb
ins
sub
push
cmp
sti
call
mov
jnp
call
nop
xchg
cdq
mov
jl
scas
test
and
pop
jb
mov
jmp
rcr
xor
sub
in
aad
and
cmp
aad
jmp
scas
popf
xor
mov
mov
push
xchg
pop
daa
pop
xchg
dec
pushf
dec
mov
cdq
xchg
cmc
mov
jl
popf
jmp
mov
and
or
(bad)
movs
call
popf
mov
je
cmp
js
aad
retf
mov
pop
clc
fs
mov
jecxz
push
cmp
ins
mov
push
dec
sbb
inc
sbb
neg
push
jle
dec
mov
jbe
rcl
xlat
jmp
jmp
add
outs
mov
jge
xor
ret
push
xlat
stc
out
cmp
movs
lahf
out
mov
fst
rcr
(bad)
adc
push
aad
cmc
push
mov
sbb
stc
jb
adc
jle
mov
add
daa
loopne
add
add
in
and
sbb
je
fsub
rcr
inc
sbb
inc
je
ret
jge
dec
imul
cmp
xchg
pop
jge
leave
jl
xlat
mov
mov
pop
loopne
mov
aam
adc
out
in
inc
in
fld
ja
mov
fistp
jge
jne
jo
dec
sub
sub
jno
test
cmp
or
add
pop
pop
ins
add
push
mov
sar
mov
jns
inc
jno
jcxz
add
pop
or
dec
push
xchg
add
ja
mov
mov
fsubr
ffreep
fadd
inc
call
mov
mov
je
aas
and
into
cli
or
inc
nop
out
pop
pushf
xor
imul
loop
ficomp
stos
movs
or
(bad)
dec
mov
add
rcr
out
cmovb
inc
lods
sub
or
in
cs
inc
xor
std
jmp
cwde
out
lds
mov
(bad)
cmovl
ret
sbb
or
or
out
(bad)
(bad)
and
mov
imul
dec
dec
and
jno
aas
mov
mov
and
add
fistp
lock
ror
(bad)
aam
dec
push
dec
stos
cmp
fisttp
in
mov
jnp
add
lahf
div
pushf
xchg
dec
add
hlt
jnp
xor
loopne
push
retf
pop
call
push
cwde
dec
loop
daa
and
aam
stos
enter
fwait
loopne
cmc
paddusw
sbb
(bad)
fistp
mov
mov
mov
mov
jbe
fisubr
call
xor
xor
and
addr16
mov
mov
lock
aad
push
out
shl
add
cwde
ror
sbb
aad
scas
popf
inc
out
sbb
push
shl
mov
sub
lds
jg
add
xchg
iret
gs
cld
ins
mov
cmp
mov
sbb
cdq
scas
iret
scas
jns
mov
sub
sar
jmp
mov
sar
cmp
(bad)
(bad)
mov
sbb
inc
loopne
sbb
mov
xor
ret
inc
lds
arpl
dec
test
fcomp
out
inc
xchg
mov
adc
cvttps2pi
dec
cwde
mov
pop
in
xchg
jb
sbb
pop
sub
les
pop
fs
jg
movs
sbb
xchg
jns
lahf
int
add
mov
fdivr
(bad)
ins
mov
cmp
push
mov
ins
sub
int
mov
mov
cmp
inc
(bad)
stc
leave
sbb
mov
(bad)
or
jne
retf
and
pushf
adc
xlat
lea
cli
or
sbb
sub
retf
(bad)
idiv
dec
bound
add
adc
lahf
mov
dec
jmp
add
leave
sbb
push
push
xor
mov
out
xor
and
add
fidiv
or
pop
sbb
shr
mov
ja
imul
cwde
mov
arpl
loope
jb
xchg
mov
dec
mov
sub
pop
inc
jl
ror
and
mov
xor
mov
nop
outs
inc
stos
clc
sbb
test
stos
ins
cli
and
push
scas
dec
push
dec
(bad)
in
push
cdq
xchg
pop
inc
ja
cmp
xchg
xchg
jbe
dec
ror
cld
or
fstp
mov
dec
or
jge
cs
xlat
mov
push
jg
or
fnsave
retf
repnz
sub
test
shr
in
xchg
adc
dec
sti
int3
and
push
add
lock
inc
jbe
and
enter
enter
or
hlt
sub
imul
mov
shr
mov
xor
scas
dec
sub
rcr
jmp
mov
pop
cmps
sub
pop
(bad)
mov
sbb
sbb
imul
or
dec
mov
mov
into
sti
pop
push
jp
repz
mov
dec
dec
and
or
lahf
jb
add
gs
in
ins
stos
fisttp
push
fdivr
fld
inc
repnz
mov
in
fisttp
pushf
mov
pop
and
out
inc
and
mov
mov
dec
leave
adc
test
pop
and
aad
not
add
inc
inc
pop
and
push
cmp
jo
stos
retf
jmp
rcr
fstp
add
in
cmp
out
push
xor
imul
das
ficomp
push
mov
push
push
and
movs
jecxz
sbb
cwde
addr16
or
mov
outs
and
repnz
cmps
adc
or
mov
pushf
inc
mov
add
mov
daa
jo
fstp
xor
mov
mov
movs
in
adc
mov
adc
dec
push
in
mov
sbb
sbb
das
push
arpl
imul
xor
pop
movs
inc
push
mov
add
(bad)
clc
jle
outs
nop
int3
mov
jnp
(bad)
mov
adc
mov
xor
mov
out
fdivr
leave
dec
or
inc
retf
imul
cdq
xchg
push
in
(bad)
int3
push
out
fidivr
dec
in
cld
jae
inc
mov
test
push
sub
out
push
pop
(bad)
xor
push
pop
ds
leave
rcr
mov
hlt
sub
sbb
fcmove
cli
call
mov
inc
jge
dec
add
stc
retf
adc
ins
in
pop
dec
jmp
in
sub
push
mov
xchg
mov
sbb
or
adc
xor
out
out
in
push
pop
jecxz
xchg
fucomip
dec
(bad)
cmp
jge
je
mov
and
loopne
lods
sub
mov
aaa
mov
xchg
das
push
or
das
lock
mov
pop
jl
and
xchg
xorps
xchg
clc
rcl
sub
neg
mov
pusha
mov
xchg
push
pop
call
sar
scas
xchg
or
lds
mov
in
adc
pop
xchg
mov
fldcw
imul
movs
mov
call
rcl
lods
jl
or
cmps
xor
jmp
mov
lods
xchg
shl
test
xchg
fstp
rcl
pop
add
pushf
mov
out
sar
or
add
cmp
push
add
(bad)
push
lea
jne
in
push
repz
call
sbb
cdq
xchg
push
in
jnp
cdq
cmp
dec
lods
int3
mov
or
xchg
push
adc
jb
dec
mov
aad
push
xor
stc
ror
rcr
mov
or
fdiv
idiv
sub
inc
jae
in
imul
mov
stc
sub
cmp
psubsb
movs
ret
pop
sub
repnz
gs
rcl
inc
in
imul
add
push
ja
mov
ins
pop
pcmpeqd
cmp
lods
js
adc
int
sbb
pop
xchg
popa
xor
jmp
frstor
cmp
xlat
cdq
pop
mov
pusha
fs
adc
sar
sti
imul
dec
icebp
shl
loop
inc
test
jmp
in
sub
inc
test
fs
rol
mov
mov
jnp
add
add
jns
xchg
outs
pusha
cmp
pop
xchg
fs
call
and
pop
sub
xchg
cmp
fistp
div
shl
mov
adc
sub
mov
loop
gs
stc
jae
imul
in
rol
repz
mov
icebp
dec
and
jmp
imul
imul
cli
call
cmps
loop
adc
sti
sub
cmp
outs
js
cmps
mov
das
mov
ror
mov
mov
pop
push
rol
popa
inc
ja
out
stos
jno
cmps
(bad)
test
mov
add
gs
mov
lahf
gs
fnop
fwait
dec
data16
fist
dec
aad
loopne
push
jmp
(bad)
fcmovnb
cmp
dec
jnp
enter
lock
push
sbb
aad
movd
loope
pop
cmp
icebp
jg
pop
fild
bound
popa
xor
sub
imul
mov
push
jmp
pop
aas
jecxz
inc
aaa
sbb
mov
xchg
fwait
into
xor
pushf
fisttp
pop
jmp
mov
mov
loopne
xchg
ror
mov
aam
jns
or
sbb
ss
sbb
adc
push
sub
mov
out
mov
les
lods
jno
fs
fdiv
jmp
xchg
or
mov
neg
(bad)
push
ins
fstp
mov
ss
mov
mov
sub
inc
mov
frstor
fdivrp
test
sbb
daa
xor
outs
xchg
jge
sbb
push
lock
imul
stos
and
xchg
mov
push
lea
xchg
jp
mov
pusha
add
pop
sub
les
mov
dec
loop
clts
bound
cdq
test
repz
mov
add
std
addr16
ss
adc
repnz
test
cmp
cmp
xlat
mov
and
dec
adc
cmps
mov
movs
mov
jl
mov
add
outs
jbe
inc
sub
movs
jl
into
add
cdq
adc
imul
sub
das
xlat
push
arpl
jmp
jge
addr16
stos
sbb
ficom
pop
jbe
call
xchg
sub
mov
in
sbb
xchg
loop
sbb
mov
(bad)
iret
repz
out
icebp
aam
aam
add
fisttp
jae
test
outs
or
or
xor
add
cmp
xor
movs
pushf
xchg
bnd
repz
mov
aad
cmps
inc
fldcw
xchg
frndint
enter
cmp
and
jmp
dec
sub
xchg
pop
jl
sti
dec
pop
fbstp
pop
adc
mov
sub
adc
movs
mov
mov
add
sar
mov
test
mov
repz
mov
pop
leave
or
cmp
push
int3
xchg
dec
call
adc
ds
push
call
pop
shl
add
add
bound
nop
and
mov
ins
and
mov
test
lea
icebp
xchg
pusha
imul
outs
xchg
xor
cmp
mov
add
dec
in
jle
stos
push
jbe
(bad)
mul
mov
mov
mov
stc
xchg
lds
xor
out
adc
jmp
outs
pop
daa
jno
idiv
int
mov
fnsave
imul
push
lahf
stos
push
dec
scas
(bad)
clc
push
mov
in
add
fwait
sbb
pop
cmps
adc
adc
cld
pushf
fidivr
fdivr
jle
aaa
xchg
cmp
cmp
xor
sbb
mov
and
pop
adc
in
in
loope
jp
xor
in
out
retf
mov
fistp
out
xor
sbb
je
dec
bound
pop
and
pop
mul
jbe
pop
push
lea
cmp
pop
leave
and
(bad)
in
mov
mov
out
push
xchg
into
mov
and
add
mov
jge
push
xor
xchg
(bad)
pop
repnz
rol
cli
loopne
and
xchg
push
mov
mov
imul
cmp
sti
push
jl
cmp
pop
jl
or
shrd
push
ret
add
icebp
es
mov
add
adc
sahf
shl
mov
inc
clc
addr16
mov
sbb
ins
mov
mov
sbb
lea
sub
pop
push
push
mov
fldcw
sub
cld
dec
adc
add
and
pop
jae
fadd
sar
inc
call
sbb
inc
fidiv
cmp
or
das
inc
test
fiadd
fucomip
jmp
(bad)
fiadd
mov
imul
push
dec
stc
mov
and
repnz
sahf
jmp
es
push
push
aam
inc
fsub
mov
mov
mov
sub
cld
jmp
cwde
test
add
mov
cmp
and
or
or
inc
dec
lods
cmp
fstp
xor
xor
sbb
dec
sub
mov
inc
ret
shl
inc
cs
xor
nop
xor
jmp
or
and
das
cmps
and
cmc
sub
scas
neg
push
lods
ds
(bad)
int3
loopne
into
mov
dec
and
inc
inc
xor
jns
scas
sahf
xchg
loope
mov
fsub
mov
call
jnp
sbb
popf
in
repz
or
imul
test
xor
dec
sub
dec
pop
popf
inc
or
sub
ficomp
mov
jns
dec
repnz
or
mov
(bad)
or
push
nop
sub
popf
pop
push
addr16
push
push
inc
sahf
mov
jmp
(bad)
hlt
movs
idiv
mov
stc
repnz
xchg
inc
in
rcr
fisub
iret
sbb
(bad)
sub
fist
fsubr
push
push
xchg
movs
test
fidiv
adc
jle
fcom
sbb
js
cmp
lahf
dec
icebp
jne
pop
mov
mov
mov
aam
not
or
xchg
lock
pusha
jp
jp
sahf
sub
cwde
ja
xor
pop
jb
or
outs
pushf
stc
mov
push
(bad)
fwait
int
stos
or
jbe
inc
ss
into
enter
and
xor
and
shl
and
inc
or
std
mov
rcr
cmp
xchg
sub
in
mov
pop
stos
in
pop
vcmpss
and
adc
push
icebp
ins
in
int3
(bad)
add
push
ret
xor
scas
test
cmp
sti
dec
cmp
mov
inc
add
push
jae
cmps
rol
ja
push
test
in
pop
dec
jbe
lea
loope
fwait
inc
or
xor
shl
sub
imul
xchg
fsub
mov
xchg
push
daa
dec
mul
sbb
fs
loopne
push
sbb
out
xchg
adc
imul
push
push
test
mov
stc
or
xchg
lods
je
push
jp
or
xor
or
inc
repz
iret
pop
in
shr
xchg
popa
mov
sub
cmp
test
dec
cwde
pop
mov
xor
cwde
inc
(bad)
adc
out
(bad)
cmc
mov
adc
sub
pop
xor
test
sbb
addr16
popa
mov
adc
push
cmps
into
and
push
push
pop
mov
xor
sbb
dec
in
(bad)
cmp
clc
es
mov
pop
call
jl
jl
test
adc
test
mov
fadd
pop
aam
jae
xor
(bad)
pop
pop
ja
jg
inc
and
pop
ja
adc
imul
and
xchg
cli
lods
dec
push
adc
dec
div
add
mov
xchg
mov
jne
sbb
adc
fcomip
enter
cmp
pop
scas
mov
(bad)
les
push
add
and
fisubr
jle
inc
xchg
jmp
inc
adc
mov
fucom
fidiv
mov
fisttp
and
out
gs
sahf
add
mov
sbb
lea
jge
gs
call
inc
fisttp
cwde
pop
sub
mov
fld
and
xlat
mov
iret
in
adc
add
leave
cmc
mov
int
scas
cli
jmp
test
clc
ret
popa
(bad)
pop
fistp
sub
shl
popa
scas
adc
jne
jnp
mov
xchg
pop
jae
stos
jecxz
pmulhuw
xor
jmp
push
rcr
outs
jns
aam
dec
nop
in
push
jmp
mov
popa
imul
jbe
add
div
xor
inc
fnstenv
enter
adc
mov
ds
les
(bad)
ss
sbb
adc
ss
ror
jne
std
fild
mov
mov
jo
cmc
mov
cmp
ja
mov
xchg
and
jl
in
call
jb
and
call
fst
mov
sbb
mov
mov
adc
xor
arpl
iret
xchg
das
xor
clc
fdivr
sub
sti
or
dec
int3
adc
push
loop
fstp
jg
and
or
shr
sub
call
adc
lds
mov
out
xchg
adc
inc
dec
cmp
(bad)
cmp
(bad)
retf
(bad)
stc
mov
add
out
clc
pop
rcr
loope
mov
mov
enter
scas
ins
ins
push
xor
loop
int3
retf
ss
(bad)
mov
rcr
popf
push
repz
sub
jmp
fiadd
mov
and
cli
pop
xchg
mov
(bad)
outs
sbb
sbb
ins
sub
int3
jb
das
test
iret
or
cli
inc
fcomp
xchg
adc
lods
dec
mov
xchg
ret
test
xchg
icebp
inc
ins
push
cld
mov
repnz
jo
jnp
jae
or
in
mov
xchg
out
push
test
bound
jp
icebp
inc
and
push
out
test
push
mov
or
fcomp
xor
call
mov
xor
outs
dec
push
jb
loop
sbb
ins
cmps
sbb
lods
arpl
add
clc
and
bsf
(bad)
loopne
cmp
pop
sub
pop
or
and
xor
fdivr
mov
xor
mov
stc
(bad)
jbe
inc
mov
pushf
mov
cmps
mov
test
mov
sbb
mov
xchg
mov
mov
out
(bad)
mov
retf
mov
loopne
icebp
pop
rol
xchg
(bad)
loope
cmp
aaa
mov
repz
or
xchg
out
push
pop
call
xchg
ret
and
jg
call
mov
adc
cmp
fist
cmc
sti
popa
fucomip
out
add
cwde
rol
cmp
dec
sbb
jb
aaa
add
iret
out
leave
dec
cmp
inc
(bad)
inc
lahf
dec
push
shl
cld
dec
pop
imul
pop
dec
pop
pop
cld
cmp
adc
adc
add
cmp
mov
mov
push
retf
xchg
ret
leave
and
mov
jnp
dec
sbb
dec
sub
mov
leave
movs
xchg
fidivr
cmps
sar
pop
call
dec
inc
into
pop
fwait
xchg
sbb
test
cmp
repnz
xor
outs
test
jae
pop
out
outs
js
xchg
rcr
popf
(bad)
jnp
inc
add
mov
aam
push
add
cld
mov
retf
dec
cmp
das
movs
mov
push
ins
dec
mov
bound
repz
sub
repnz
loope
adc
xchg
lds
inc
stc
lahf
lahf
repnz
cld
and
mov
push
adc
fidivr
cmp
xlat
fwait
(bad)
in
imul
pop
dec
or
mov
in
mov
sti
or
adc
in
(bad)
int
mov
in
repnz
cmps
push
aam
nop
(bad)
in
mov
cs
loop
in
push
inc
lds
and
push
or
lahf
mov
xchg
push
lods
xor
xchg
mov
xchg
retf
jno
std
fsubrp
rcl
adc
dec
pop
pop
cs
lock
test
jmp
outs
retf
scas
repz
xor
repz
xchg
stos
xlat
leave
xchg
push
or
or
hlt
vmwrite
mov
xchg
sub
arpl
pop
sar
repnz
mov
in
int
and
xchg
mov
sbb
movs
xchg
dec
jmp
mov
sbb
test
pop
add
pop
dec
jae
push
cmp
ins
or
out
fldenv
and
mov
fnstcw
loopne
cld
rol
lea
cmp
int
retf
adc
dec
jbe
sub
popa
cmp
gs
pop
jne
stos
jo
adc
dec
cmc
push
adc
pop
jns
dec
add
pop
cs
xchg
sbb
loopne
push
aam
shr
push
xchg
push
xlat
dec
mov
imul
nop
push
cmp
xchg
and
lock
pop
rcr
sbb
jno
sbb
fcmovnb
movs
or
(bad)
mov
add
aas
inc
sub
ds
mov
mov
pusha
js
movs
mov
sahf
ret
cmc
mov
int
dec
or
outs
mov
rol
xor
sub
fsubr
call
fmul
and
xor
jb
fimul
cwde
sub
jnp
adc
loope
xor
std
xor
mov
mov
jo
pop
inc
fcmovu
and
push
out
add
sbb
stos
xchg
sbb
jmp
mov
out
cmp
daa
xlat
dec
loope
pop
and
jbe
and
sbb
(bad)
fbstp
nop
dec
mov
push
xchg
jmp
mov
lods
call
fwait
push
push
dec
ins
lds
push
in
clc
into
jmp
mov
je
inc
mov
mov
test
mov
aas
and
mov
outs
pop
in
xlat
imul
and
push
fwait
add
fistp
sub
cdq
jp
push
ss
fcomp
jge
pop
push
pop
(bad)
or
inc
sbb
out
pop
mov
pop
xchg
neg
test
ins
popf
test
es
mov
sar
int
call
pop
leave
jle
js
dec
push
(bad)
dec
push
dec
cwde
hlt
sbb
shl
pop
ror
adc
adc
or
(bad)
fld
jo
push
sub
hlt
dec
and
std
xor
jp
push
repnz
mov
ret
xchg
dec
fimul
arpl
addr16
dec
cmps
jle
sbb
adc
in
retf
call
iret
movhps
loop
inc
lahf
pop
mov
(bad)
int
add
retf
pop
movs
push
int
cmc
retf
cld
stos
in
in
ins
in
jmp
into
out
pop
inc
cld
fiadd
adc
popa
ret
xor
mov
jmp
je
add
mov
jmp
sub
js
push
adc
mov
scas
jge
repz
mov
je
mov
clc
push
pop
(bad)
or
adc
dec
jbe
fs
inc
mov
lock
and
cli
push
mov
xor
push
lods
push
test
push
jne
jmp
(bad)
ffreep
xchg
mov
mov
pop
sub
gs
in
add
cwde
sub
mov
mov
jg
imul
adc
scas
mov
sub
mov
les
push
data16
es
cmps
jno
add
fs
aaa
mov
ins
sub
push
jle
mov
and
outs
arpl
popf
arpl
data16
xchg
cmp
push
mov
sbb
test
jnp
leave
adc
pusha
push
inc
(bad)
jae
pop
dec
lods
mov
push
inc
scas
ror
dec
jge
aad
pop
int3
jns
push
fwait
loopne
outs
jmp
aam
test
dec
dec
mov
push
pop
pop
cmps
stc
fwait
dec
xchg
mov
adc
popa
(bad)
ror
popa
mov
and
(bad)
cli
in
mov
sbb
retf
sahf
xchg
inc
stos
fwait
ss
xchg
or
push
sar
jnp
ret
ins
scas
push
retf
pop
aas
jp
pusha
inc
int3
retf
dec
xchg
push
cmp
daa
cmps
jne
or
dec
test
shl
fimul
inc
mov
les
xor
dec
mov
in
mov
pushf
ss
sub
jg
push
mov
das
push
sbb
stos
scas
jl
sbb
mov
xor
cs
cmp
test
push
pop
mov
xchg
cmp
or
jae
xchg
ret
pop
push
sar
pop
mov
jo
cdq
add
add
ret
out
clc
mov
call
call
xchg
add
pushf
jbe
sbb
dec
pop
lea
pop
fdivr
mov
push
fld
ja
loopne
(bad)
inc
mov
enter
xlat
sub
xor
cwde
xor
out
or
data16
xchg
or
mov
or
sub
movs
adc
fiadd
jne
and
movs
in
imul
mov
(bad)
mov
push
(bad)
sar
aad
gs
enter
sbb
pop
jg
sub
mov
sub
pusha
xchg
jl
in
xor
xchg
push
jns
pop
mov
dec
fsubr
(bad)
dec
inc
and
ins
arpl
stc
pop
jo
ss
lds
xchg
lock
xchg
jg
add
sbb
jo
scas
into
xor
xor
pop
dec
repnz
dec
clc
push
adc
mov
popa
call
into
add
jl
rcl
cli
jp
push
mov
pop
test
aam
popf
(bad)
push
mov
mov
pusha
mov
jno
scas
nop
mov
call
rcl
lock
clc
jg
xchg
ffree
xor
xlat
stc
push
loope
mov
rcr
push
shr
lods
ins
sbb
stos
add
je
idiv
ret
out
pop
adc
and
fs
add
pop
int
sbb
inc
xor
(bad)
push
mov
mov
jns
sub
mov
dec
sbb
and
jp
fwait
repnz
or
clc
push
cmp
cs
mov
rcr
mov
mov
xor
mov
dec
out
push
jge
js
cmps
clc
xchg
adc
cmp
sbb
push
ror
inc
xor
aas
out
or
xchg
ror
push
mov
mov
cdq
pop
cmp
mov
movs
xchg
icebp
dec
lods
icebp
sub
hlt
push
pop
xlat
xchg
hlt
daa
jge
lds
outs
stc
mov
dec
(bad)
fild
shl
fiadd
adc
dec
rol
test
xchg
leave
xor
inc
daa
and
leave
xlat
push
mov
fcomp
nop
and
mov
ss
retf
mov
ror
fild
bnd
outs
lea
sub
or
cmp
(bad)
mov
test
js
fisub
sub
pop
scas
call
jo
adc
or
das
add
inc
sbb
dec
dec
pop
jnp
push
push
xchg
dec
pop
inc
fwait
or
sub
or
xchg
stos
dec
(bad)
push
mov
fadd
inc
pop
push
iret
and
cdq
out
les
div
add
lea
jae
mov
shr
dec
mov
inc
ret
into
jns
jb
retf
sbb
inc
pop
mov
push
pushf
iret
inc
pop
or
out
lea
leave
iret
in
out
in
ret
dec
or
mov
movs
mov
dec
push
push
mov
mov
push
aaa
sbb
movs
jno
shl
add
jge
sahf
inc
sub
out
and
pop
pop
fwait
enter
mov
xchg
inc
xlat
call
cmp
rol
aam
pop
repnz
pop
xor
pop
int
repnz
or
dec
inc
dec
ds
movs
out
pop
pop
mov
sub
pop
dec
or
or
test
adc
hlt
dec
sub
adc
call
or
out
icebp
call
stos
mov
jg
dec
push
xor
loope
push
test
add
sbb
add
inc
dec
fnstsw
loopne
push
xchg
outs
ret
icebp
out
push
ror
or
adc
mov
mov
xor
cmp
or
ds
push
pop
mov
mov
fs
outs
xor
lods
mov
mov
push
sbb
cld
xchg
call
or
dec
sub
add
daa
(bad)
push
rcr
stc
dec
mov
xchg
sti
dec
pop
imul
inc
jae
int3
jmp
lahf
and
dec
addr16
cwde
mov
lock
or
jecxz
ins
dec
dec
mov
pop
(bad)
retf
retf
xsha1
cmps
(bad)
cmp
loop
xchg
not
dec
cmp
in
ret
ss
mov
sub
retf
mov
leave
loope
mov
push
imul
xchg
pop
or
dec
jle
addr16
movs
test
(bad)
ja
pusha
nop
mov
push
lock
in
gs
es
rcr
mov
outs
fprem1
mov
inc
and
dec
cmp
xchg
jmp
cmps
mov
shl
dec
inc
es
adc
jmp
sbb
syscall
dec
aaa
pop
cmp
pop
aaa
call
mov
call
pop
push
cmps
and
pop
pop
push
movs
adc
int
xor
ja
fist
lods
adc
mov
retf
jbe
pop
into
int
dec
cld
test
mov
fnstsw
outs
jmp
adc
xchg
mov
mov
stc
lock
mov
xchg
jns
les
push
mov
or
retf
dec
xchg
mov
mov
mov
mov
lahf
lea
adc
add
jmp
or
ror
mov
cmps
ss
dec
sbb
fisttp
push
jle
adc
out
xchg
jo
test
in
jo
mov
data16
nop
jle
outs
rcr
cmp
xor
push
lahf
add
jne
and
out
jne
mov
xor
sbb
mov
push
lahf
inc
test
into
div
or
jnp
loopne
(bad)
test
cmps
jns
leave
pop
pop
inc
add
scas
mov
in
imul
push
enter
cmp
iret
sar
rol
lods
push
jmp
cs
nop
sbb
popf
inc
in
lahf
cdq
mov
dec
ds
movs
sahf
xor
ja
clc
sbb
mov
ins
add
adc
inc
out
jo
test
adc
ret
lods
sub
stos
mov
jecxz
sub
xor
das
push
xchg
mov
lea
aas
call
mov
ret
and
xchg
popa
in
ret
shl
shl
jnp
bnd
or
ficom
or
leave
lahf
aas
cmp
inc
mov
dec
sbb
and
or
jg
loopne
jne
pop
xchg
dec
mov
mov
xchg
pop
or
xchg
push
inc
xchg
mov
je
inc
mov
fwait
gs
enter
push
xchg
stos
shr
fcom
sub
cmp
inc
or
pop
jecxz
sahf
pop
stos
dec
int3
ds
shl
fcmovb
xchg
enter
sub
ss
test
adc
cmp
fisttp
scas
aas
call
outs
mov
mov
in
data16
bnd
ds
pop
jae
or
dec
sub
(bad)
sbb
push
sbb
mov
jmp
cmps
dec
ror
jp
push
ds
bound
in
mov
fwait
shl
scas
arpl
jmp
dec
mov
sar
push
cmc
push
inc
jbe
shl
mov
popf
mov
add
sti
ja
(bad)
fistp
push
out
mul
mov
mov
or
jno
or
sub
test
or
xchg
cs
jmp
adc
loope
sbb
jns
dec
or
sub
jecxz
xchg
mov
(bad)
cld
add
mov
pop
in
loop
inc
das
mov
cmp
bound
(bad)
fcomip
and
aaa
movs
popf
ja
jno
inc
sbb
push
adc
sub
je
ficomp
jmp
or
jecxz
ret
lock
sbb
sbb
jp
retf
in
sbb
jmp
in
fiadd
dec
frstor
shl
xor
adc
adc
or
cs
repnz
push
mov
sbb
or
pop
retf
cld
inc
(bad)
pop
dec
lds
rol
mov
xor
shr
jp
retf
stc
or
ret
hlt
pop
and
inc
fstp
cmp
outs
pop
dec
inc
in
test
es
lods
fbstp
stc
shl
inc
and
and
int
and
inc
adc
leave
loop
xor
not
xor
mov
aam
adc
and
aad
retf
or
push
ds
or
stos
mov
and
test
push
dec
mov
pop
jmp
ds
push
pop
inc
jne
add
pop
fnsave
mov
ss
sar
inc
and
xchg
or
(bad)
ins
mov
je
out
leave
call
(bad)
outs
ds
std
movs
js
out
pop
push
sbb
std
(bad)
inc
xor
mov
out
inc
or
push
mov
jp
push
mov
gs
leave
sbb
ja
das
iret
das
push
push
adc
fs
mov
les
mov
lahf
(bad)
int3
xchg
xor
lods
adc
mov
imul
ror
jl
daa
add
adc
retf
mov
adc
outs
in
inc
fidiv
pop
and
fiadd
cmp
sbb
lods
hlt
jns
je
adc
add
cmp
cmp
jno
out
mov
xchg
mov
add
arpl
pop
sbb
or
pop
jns
jge
jg
cmc
mov
push
(bad)
(bad)
hlt
xchg
jnp
mov
aam
or
in
mov
add
fdecstp
aad
jg
fstp
repz
test
xchg
(bad)
retf
pusha
sbb
mov
xlat
out
ror
and
xor
and
sbb
retf
ins
inc
cld
xor
xor
dec
push
mov
mov
jle
out
cmp
adc
pop
dec
sub
(bad)
jle
mov
push
pusha
das
adc
int
add
mov
xchg
nop
cwde
iret
cwde
mov
adc
ret
popf
(bad)
pop
imul
jnp
sub
inc
sbb
into
cmp
push
imul
dec
push
cmp
aas
pop
imul
test
shr
pop
xchg
push
cli
adc
aas
xchg
and
pop
inc
cs
mov
popa
inc
inc
or
mov
fbld
jle
aad
and
jmp
adc
mov
hlt
(bad)
in
xor
jmp
or
jmp
xchg
jmp
push
test
or
pop
xchg
iret
dec
xchg
ja
jecxz
arpl
sar
and
sar
dec
ret
ror
xchg
nop
ins
movs
adc
std
add
icebp
leave
repz
mov
addr16
stc
jno
in
fisub
pop
repz
xchg
sub
bound
jg
daa
(bad)
fsin
or
or
(bad)
jp
or
(bad)
mov
ja
push
in
sbb
dec
ficomp
add
add
sahf
and
imul
adc
pop
pop
mov
jp
retf
inc
sbb
push
add
data16
es
cmp
mov
mov
cmp
xchg
or
sbb
push
stc
es
and
sbb
adc
in
in
icebp
cld
mov
(bad)
sub
xor
xchg
cli
mov
push
fstp
add
push
inc
adc
retf
xchg
cmp
scas
fistp
les
aam
mov
cmp
pop
xchg
push
(bad)
clc
fiadd
aad
call
sbb
push
jnp
xor
call
sbb
sub
xchg
cli
les
cmp
mov
or
int
adc
fimul
movs
sbb
inc
mov
(bad)
cdq
rcr
mov
mov
out
loop
pop
push
sub
mov
add
dec
xor
inc
or
fxch
test
inc
inc
adc
ret
cmp
dec
cmp
dec
rol
out
sbb
cli
sahf
jne
rcl
rcr
fimul
xor
int3
jno
mov
out
push
xchg
jecxz
in
lods
sub
ret
popf
adc
clc
xchg
aas
dec
jae
test
retf
xor
mov
xor
push
jae
inc
add
ret
sub
fstcw
xchg
ja
push
je
aam
out
xchg
cmp
mov
ficomp
std
inc
inc
sub
or
repz
xchg
out
neg
mov
data16
aad
stos
movs
cmp
cwde
cld
xor
xor
lock
xchg
jecxz
clc
or
xor
adc
pop
sub
push
push
mov
or
pop
stos
rcr
push
fild
retf
ins
and
mov
pop
cmp
mov
xor
cld
pop
mov
pop
push
sub
ds
sub
into
jb
pop
sbb
cli
les
and
jb
mov
hlt
sbb
scas
mov
xchg
neg
(bad)
out
in
lea
bound
ins
mov
sahf
jbe
inc
sub
inc
scas
jmp
mov
mov
jmp
ins
add
push
je
push
xor
push
dec
ret
jne
and
dec
stos
jmp
ja
mov
dec
ror
shl
pop
push
adc
fld
mov
stc
mov
mov
outs
mov
push
pusha
movs
jg
or
add
int3
int3
jge
xchg
out
jb
pop
je
pop
cdq
jmp
in
div
mov
or
cld
pop
loop
(bad)
mov
or
hlt
sbb
fcomp
cmp
daa
es
or
movs
(bad)
(bad)
ret
lods
xchg
data16
or
ins
pop
sub
xor
aam
cdq
xchg
adc
mov
sti
fstp
clc
mov
nop
mov
cmp
or
into
add
jp
dec
fs
jo
inc
fistp
repz
and
ss
into
fwait
out
ret
mov
std
xchg
inc
pop
es
mov
in
iret
jae
push
sbb
rcl
push
sub
call
ret
popf
cmps
lds
std
popf
inc
push
dec
cld
push
aaa
sub
aas
jp
sbb
cdq
lahf
imul
imul
fiadd
pop
inc
sbb
and
mov
stos
sbb
push
(bad)
cmp
cdq
xor
ja
imul
cdq
sbb
xchg
xor
sub
mov
add
and
data16
cmps
xor
xchg
fdivr
adc
or
(bad)
idiv
jmp
and
mov
push
jmp
dec
shl
in
sbb
(bad)
sbb
into
inc
cli
mov
mov
ds
js
out
mov
sahf
sub
mov
inc
xchg
fst
jbe
push
xchg
test
or
mov
sub
mov
pushf
inc
jecxz
push
shl
enter
fisttp
bound
or
adc
shl
iret
push
adc
mov
loope
xchg
out
outs
jecxz
pop
jae
call
stos
jbe
and
repz
(bad)
jmp
pop
std
mov
dec
xor
pop
ds
icebp
mov
dec
aaa
or
jnp
fcmovu
push
pusha
fidiv
adc
setp
lahf
fild
sub
sar
stos
adc
adc
and
xor
mov
add
xchg
loope
fisttp
add
les
(bad)
xor
ds
shl
not
mov
or
(bad)
push
repz
xor
mov
xchg
ret
lds
and
or
sub
lea
inc
and
cmp
cmp
xchg
loopne
lods
mov
into
mov
mov
pop
outs
je
dec
sub
sti
arpl
fst
mov
pop
lds
sahf
(bad)
imul
aad
inc
aaa
sub
xor
add
sbb
cpuid
mov
into
std
mov
jbe
sub
fstp
or
xchg
das
mov
dec
jbe
iret
test
ja
aaa
inc
mov
pop
(bad)
jecxz
xchg
out
into
ja
bswap
fst
or
repnz
stc
jle
enter
mov
repz
dec
xchg
repz
inc
pop
into
inc
xor
pinsrw
mov
push
sbb
mov
sbb
aaa
push
clc
cdq
call
dec
pop
loope
or
(bad)
ficom
fdiv
inc
add
stos
push
xor
fcom
popa
movs
cmp
pop
sysenter
rol
imul
sahf
push
xor
mov
dec
lods
outs
jae
fiadd
retf
popa
pushf
cli
lock
imul
and
adc
add
mov
bound
xchg
inc
repnz
push
mov
movs
retf
lds
sahf
mov
mov
xchg
ror
int3
div
gs
cmp
sti
sti
out
mov
sub
jns
fwait
mov
icebp
mov
dec
out
mov
add
outs
jne
pop
cmp
lea
ret
(bad)
movs
xchg
sbb
ror
mov
xchg
loope
xchg
mov
mov
out
aaa
jle
out
retf
clc
mov
std
jo
loopne
sbb
mov
mov
idiv
jnp
bound
mov
shl
xchg
mov
mov
fdivr
out
xchg
adc
outs
aaa
popf
dec
adc
dec
xchg
arpl
dec
pop
sbb
inc
hlt
neg
jmp
push
ror
xchg
jg
sbb
bswap
lds
addr16
push
repnz
inc
sub
push
and
inc
cdq
cmp
xchg
inc
mov
push
imul
aas
aam
not
ror
clc
sbb
in
enter
out
rcr
pop
push
cmp
inc
pusha
mov
cmp
pusha
mov
sbb
bswap
hlt
pop
popf
jno
xor
movs
retf
ja
lods
xchg
mov
adc
pop
xchg
call
mov
movs
aaa
mov
push
shr
cli
or
adc
jmp
sbb
pslld
scas
stc
adc
inc
push
scas
aas
aad
(bad)
mov
mov
add
xor
arpl
pop
into
stc
iret
cmp
jle
in
sub
push
mov
push
or
xchg
jno
pop
pop
cmp
inc
mov
mov
push
dec
sub
adc
(bad)
or
fistp
mov
mov
nop
pop
cmp
repnz
nop
xor
shr
and
cmp
into
pop
ins
test
pop
push
add
push
movs
enter
mov
aam
fwait
and
or
icebp
mov
or
sub
shl
xchg
and
mov
ss
enter
mov
or
mov
stos
scas
mov
dec
cmc
int
inc
jmp
or
lds
into
mov
or
jge
pop
sbb
inc
stc
(bad)
out
pop
iret
sbb
mov
mov
fisttp
pusha
arpl
xor
mov
mov
push
(bad)
jo
push
aaa
push
(bad)
jge
call
lods
mov
sub
fstp
mov
in
mov
sbb
pop
arpl
xor
cmps
add
data16
push
jno
pop
jb
mov
xlat
pop
cmp
mov
push
ficom
pushf
inc
sar
lds
dec
pop
or
and
inc
pop
std
or
daa
movs
js
push
or
adc
dec
inc
mov
mov
xchg
fsub
push
mov
sbb
mov
out
cmp
dec
in
inc
jmp
mov
push
cmp
cmp
imul
ret
inc
or
mov
imul
stc
mov
ror
int3
loope
pop
cmps
mov
xor
cwde
neg
push
ds
aad
jmp
cld
or
xor
fadd
push
stos
(bad)
sbb
pop
jae
jae
pop
and
rcl
ficomp
jns
movs
push
(bad)
sub
jmp
cmps
adc
and
mov
out
or
jp
add
aad
pop
sbb
nop
xor
xchg
loope
stos
xor
xor
fcomip
mov
adc
xor
sbb
into
pop
mov
xchg
pop
scas
(bad)
fs
xor
enter
sbb
sbb
push
sub
sbb
inc
and
or
scas
jl
test
in
dec
loop
and
mov
or
int3
sub
xor
sub
adc
mov
cwde
in
sti
outs
inc
cmp
in
cmc
pop
arpl
rcl
push
sbb
xor
xlat
and
cwde
daa
xchg
or
inc
push
stc
push
adc
or
js
lods
xchg
mov
cmp
adc
frstor
sbb
sbb
stos
inc
pop
xchg
outs
jno
inc
call
cs
xor
adc
out
mov
add
clc
xchg
sbb
out
adc
xchg
add
shl
leave
sub
es
retf
mov
sub
cs
pop
hlt
hlt
aam
jb
int3
inc
out
lahf
xchg
or
pop
cmp
add
jo
inc
ds
or
stc
mov
fst
retf
out
or
jne
inc
adc
jle
bound
xchg
mov
push
xor
js
test
jbe
stos
add
cmp
mov
loope
shr
maxps
lea
jae
cmps
xchg
inc
pop
mov
leave
sbb
stc
in
sbb
pop
xor
fs
pop
xchg
mov
ins
dec
sti
or
xchg
ja
ret
pop
stos
dec
addr16
test
retf
nop
push
not
(bad)
scas
fcomip
push
scas
add
les
or
sar
add
popf
outs
es
xchg
loopne
mov
mov
and
and
stc
xor
es
push
dec
popf
cli
cmp
fcom
pop
dec
jge
fnstsw
ss
push
fdivr
int3
mov
mov
(bad)
jbe
dec
xchg
cmp
and
hlt
int3
or
in
xchg
jecxz
dec
mov
cmp
call
dec
dec
adc
inc
adc
repnz
mov
pop
jns
sbb
js
scas
(bad)
repnz
sub
sub
sub
test
out
jno
lods
add
xchg
(bad)
and
icebp
mov
lea
loope
mov
adc
ret
clc
adc
and
cmp
or
push
lds
push
xchg
int
retf
pusha
cmps
lods
test
hlt
sbb
xchg
sbb
push
aad
movs
clc
sub
int3
aam
and
add
movs
loopne
jle
mov
mov
pop
imul
andps
inc
and
movs
push
xor
jb
mov
push
sub
(bad)
stc
jo
clc
and
(bad)
cwde
aad
xchg
xchg
bound
int3
sub
rcl
xchg
sahf
push
xchg
mov
sub
mov
jge
and
loop
xchg
inc
repnz
sub
enter
popa
mov
jnp
mov
call
ficomp
inc
xchg
adc
int
in
xchg
sub
dec
les
dec
push
fs
(bad)
push
cmp
adc
out
neg
fisubr
dec
adc
stos
inc
cs
and
or
jecxz
add
enter
pop
xchg
sbb
mov
shl
inc
mov
out
repnz
icebp
ja
pop
mov
in
push
retf
cli
and
sti
cmc
ss
into
xlat
push
cwde
adc
(bad)
leave
jl
mov
cmp
outs
sbb
mov
imul
dec
pushf
xor
sub
shl
mov
aad
mov
shl
or
(bad)
cmc
push
ins
bound
jb
leave
stc
test
out
and
lahf
add
rcl
mov
xor
jge
cdq
jecxz
imul
stc
sti
loopne
clc
add
jmp
xor
data16
push
adc
and
lods
out
outs
push
xchg
sbb
mov
aam
aad
arpl
jae
jmp
cmps
jle
cmp
(bad)
iret
push
sub
pop
xchg
add
rcl
sub
les
cmp
mov
pop
jmp
imul
adc
movs
add
adc
mov
ss
loope
dec
sub
arpl
push
stos
and
push
xor
push
mov
jnp
push
mov
cmp
jo
loop
jb
in
movs
inc
aam
int
and
pop
pop
leave
and
push
and
sub
out
lock
mov
(bad)
jmp
cdq
out
inc
jmp
loop
pop
push
cmp
jmp
add
xor
cdq
js
cmp
inc
and
mov
sub
dec
jecxz
and
iret
push
(bad)
sbb
sub
in
inc
fimul
xlat
jl
mov
lods
loopne
pop
pop
hlt
sub
sahf
sub
lds
mov
dec
aas
cmp
imul
mov
xchg
(bad)
and
jl
neg
push
mov
pop
out
inc
and
in
ja
in
mov
inc
xor
in
sbb
jb
test
aam
cmp
jge
movs
xchg
jl
xlat
or
gs
stc
out
pop
dec
push
out
pop
pop
push
jge
sub
call
jmp
retf
mov
bound
sbb
pop
test
movs
retf
shr
scas
ret
arpl
arpl
std
add
push
iret
mov
pop
jno
xchg
popa
arpl
pop
mov
jnp
mov
popa
cs
push
sar
sub
repnz
stos
cmps
fwait
sar
lods
or
xor
inc
jo
pop
inc
out
rcr
sbb
jae
dec
loop
jmp
cmp
loope
sbb
div
mov
push
retf
cmp
movs
popf
sub
mov
(bad)
jmp
clc
hlt
and
inc
(bad)
adc
ror
ret
sub
mov
xchg
repnz
out
and
mov
(bad)
add
push
enter
mov
pop
ins
or
fstp
repz
xchg
loop
hlt
out
js
jae
outs
xchg
adc
or
out
fcom
imul
iret
inc
sub
mov
emms
lock
xor
sub
push
cmp
scas
fs
sbb
dec
in
sahf
test
xlat
dec
push
mov
adc
cwde
fidiv
loop
xchg
je
mov
test
dec
cli
push
mov
mov
addr16
sti
add
movs
cmp
jecxz
push
inc
mov
fnstenv
sar
stc
push
dec
or
dec
test
sub
inc
dec
pop
fild
stos
retf
js
mov
(bad)
call
cwde
pop
inc
mov
out
xor
mov
push
adc
in
push
js
(bad)
push
push
popf
lds
adc
sbb
lea
out
in
sbb
movs
hlt
imul
jb
ret
out
pop
ds
in
lea
jl
clc
jecxz
jmp
jbe
adc
xor
test
test
sbb
in
aad
test
jb
push
shr
dec
jp
in
inc
loope
xor
pop
retf
cmp
outs
mov
pop
js
rol
add
lea
inc
leave
and
jle
push
loopne
call
xor
loopne
out
(bad)
adc
stos
cmp
xchg
int
test
xchg
mov
mov
das
jns
fistp
iret
cmps
mov
rol
dec
(bad)
fs
mov
imul
call
push
(bad)
in
movs
and
xchg
aad
sbb
scas
push
in
jno
bound
std
aaa
cmovge
push
popf
in
cwde
cmp
into
pusha
test
repz
dec
xor
(bad)
(bad)
pop
xchg
mov
jecxz
cli
mov
dec
sti
out
enter
jb
jmp
arpl
xchg
and
inc
mov
lock
push
inc
dec
clc
and
mov
sub
in
call
cmp
jl
aad
mov
and
(bad)
xchg
aam
dec
pop
fsub
fisub
jns
test
rcl
arpl
cli
pop
pop
pop
xchg
cmp
or
xor
and
jo
dec
loope
aaa
stos
jbe
outs
jmp
enter
sti
push
xor
dec
call
and
sahf
jb
jge
push
mov
mov
jl
add
or
or
cmc
cmp
jo
mov
or
(bad)
jecxz
or
ja
(bad)
addr16
in
dec
arpl
cmc
inc
mov
sbb
jge
pop
mov
push
shr
push
mov
sub
push
add
or
pop
and
scas
xor
cld
sahf
push
stc
mov
or
cmps
pop
sbb
pop
stc
js
inc
call
and
mov
push
mov
and
retf
(bad)
pop
es
inc
(bad)
idiv
repz
cmc
idiv
cmp
push
add
ja
jnp
retf
cmp
pop
jge
inc
xchg
out
js
jns
(bad)
xor
mov
cmp
test
dec
loopne
push
cli
jle
out
ja
pop
stos
loopne
add
ret
leave
add
rol
adc
fs
stos
and
popf
mov
mov
cmc
jae
jns
mov
pushf
scas
mov
sub
and
(bad)
hlt
mov
adc
or
sbb
jp
outs
push
cmps
mov
outs
call
jl
mov
loope
(bad)
mov
push
(bad)
hlt
cmc
push
movs
outs
test
adc
gs
xor
sahf
add
fisttp
fs
(bad)
dec
rcr
jns
xchg
inc
mov
sbb
out
jbe
mov
psubusb
mov
mov
add
pop
xor
sar
sbb
push
push
and
rcr
sbb
jp
imul
pop
idiv
jl
enter
adc
push
pop
lock
jg
xor
imul
mov
dec
(bad)
clc
adc
xor
icebp
fmul
sub
ins
mov
clflush
es
sbb
loope
shr
scas
inc
add
leave
stos
pop
jge
cmps
xor
push
mov
call
pop
movs
inc
enter
jmp
icebp
inc
in
stos
pop
aam
jmp
lahf
pop
lock
rol
jp
xlat
shr
repnz
add
inc
arpl
xor
sub
mov
sub
cdq
imul
stos
xor
push
push
aaa
inc
mov
cld
mov
out
cmps
push
dec
xlat
push
xlat
lahf
pushf
inc
sub
leave
cmp
stc
shl
call
scas
das
imul
das
dec
out
jne
std
jbe
loope
dec
jno
xor
pop
inc
(bad)
loope
pop
repnz
adc
pop
sub
and
sbb
inc
mov
inc
jne
or
jl
test
mov
rcr
xchg
je
jnp
imul
xchg
push
shr
push
sbb
and
dec
(bad)
aas
mov
rol
jg
inc
pop
imul
mov
cs
sbb
sub
cmps
push
loope
jg
mov
(bad)
or
or
jle
or
xor
stos
pop
pop
push
dec
test
xor
inc
jne
ins
push
and
ret
xlat
push
out
fcomp
sti
outs
xchg
xchg
mov
outs
cmp
in
mov
cmc
ss
enter
cmp
cmp
(bad)
pushf
dec
push
hlt
iret
mov
mov
out
push
cmp
ret
jae
mov
ror
movs
mov
push
cdq
in
push
xchg
test
jbe
mov
push
stos
les
pop
and
hlt
dec
inc
xchg
repnz
mov
jecxz
or
or
xchg
mov
inc
xchg
stc
xor
jp
sar
sbb
cmps
out
or
icebp
add
sub
cmp
lock
fwait
movs
push
xchg
aas
or
mov
inc
push
mov
imul
int3
sub
add
jmp
out
xchg
and
xchg
mov
mov
jle
cmp
jge
adc
fidiv
rcl
pushf
fstp
add
or
imul
push
adc
stc
xchg
or
xor
mov
sti
sub
cmp
push
inc
jne
inc
add
imul
jb
stc
cmp
sbb
popf
sbb
inc
movs
mov
ins
push
hlt
or
push
mov
dec
cmp
push
mov
loope
mov
aam
cmps
ror
lds
std
pop
pushf
ds
xor
fild
xor
les
and
fadd
es
jnp
push
int3
leave
dec
sub
or
enter
inc
mov
jmp
add
arpl
dec
sbb
shr
xchg
stos
aaa
enter
cmp
sti
adc
add
iret
outs
pushf
cmps
cmp
ins
xchg
jmp
dec
and
xor
retf
sub
xor
cmp
mov
cs
mov
hlt
pop
inc
int
aaa
jg
dec
sar
and
fdiv
cmps
jmp
inc
ret
xor
(bad)
cmp
psubq
jp
test
jmp
jnp
adc
daa
aas
ret
iret
dec
test
inc
mov
scas
or
sbb
sbb
mov
(bad)
mov
mov
xor
data16
mov
mov
pop
add
mov
outs
(bad)
mov
pop
jo
loope
push
es
ret
dec
push
inc
inc
or
imul
out
sbb
sub
aam
ja
popa
mov
add
push
xor
out
lahf
test
xchg
ficom
or
xchg
or
jno
and
not
pop
loope
test
or
popf
adc
loop
jg
jae
shr
loope
push
sub
adc
inc
dec
ret
imul
rcr
dec
xchg
leave
imul
jp
xchg
adc
popa
xchg
fist
mov
test
out
add
jge
out
push
mov
xchg
outs
mov
comiss
fs
fstp
test
pop
daa
pop
xchg
popa
push
aaa
mov
movs
mov
nop
inc
fcmovnb
fwait
aam
mov
push
mov
ret
cdq
std
shl
test
leave
add
mov
out
jnp
ret
mov
lahf
lods
mov
push
mov
cmp
jns
adc
dec
inc
mov
ret
push
ins
aaa
pop
loope
xchg
jle
adc
jmp
fs
mov
dec
call
mov
sbb
push
push
mov
(bad)
clc
in
rol
call
sub
xchg
sub
dec
xchg
cwde
popf
xor
dec
lds
mov
xchg
inc
jbe
add
add
xor
or
fmul
add
nop
sahf
ficomp
mov
leave
xlat
mov
fstp
bound
and
jb
jno
mov
mov
mov
fstp
jp
pop
push
arpl
jg
(bad)
aam
stc
xor
jmp
pop
stos
or
std
stc
mov
stc
or
xchg
out
mov
sahf
mov
push
ins
mov
xor
sub
inc
jmp
push
stos
cmps
outs
sahf
mov
sbb
test
neg
cld
and
and
dec
scas
fs
pushf
inc
imul
mov
sbb
test
fisttp
cli
mov
xor
fs
rol
xor
xchg
and
push
fs
cs
dec
repz
cmp
clc
clc
jae
psllq
nop
push
data16
mov
cmp
pop
leave
mov
push
out
sbb
jge
jg
adc
loope
mov
arpl
xchg
(bad)
mov
mov
xchg
fsub
mov
mov
gs
push
int3
xor
xchg
scas
test
movs
in
dec
int3
jo
push
shr
mov
cmp
cmp
leave
or
int
jle
or
mov
sar
inc
jb
xor
dec
add
jecxz
inc
ds
loop
push
push
cmp
mov
add
push
xlat
call
jg
adc
inc
xchg
mov
mov
mov
dec
xor
mov
mov
adc
or
scas
xor
clc
xchg
pop
mov
push
call
in
les
mov
xchg
loop
add
js
js
arpl
retf
mov
clc
loop
repnz
arpl
stos
cmp
ror
dec
pop
sub
lock
and
sub
pop
jmp
cmps
jne
mov
cld
xor
sbb
jo
mov
jg
pop
dec
cmp
and
(bad)
jmp
sahf
dec
lods
test
sbb
cmp
push
push
cmps
bnd
jmp
je
ret
mov
loopne
iret
sub
cmp
es
sti
iret
add
mov
es
dec
ja
xor
ret
xchg
loope
add
(bad)
pop
nop
rcl
jbe
ror
das
jne
aaa
ficom
loope
movs
fistp
fwait
lds
push
not
push
fsub
sbb
and
pop
fstp
pop
sub
imul
out
inc
push
sub
(bad)
addr16
ins
mov
inc
cwde
cmp
cmp
mov
das
das
stc
push
mul
shr
(bad)
int3
cmc
test
cwde
fld
inc
and
shl
mov
fmul
cli
cmp
jle
outs
add
aaa
jge
retf
xchg
sub
dec
cli
sbb
iret
push
inc
mov
adc
jge
(bad)
sti
cmc
clc
rcr
push
mov
test
add
lods
cmps
xchg
add
xchg
adc
mov
xor
jmp
dec
ror
inc
addr16
test
test
pop
xchg
fs
inc
jp
imul
popa
dec
jno
cli
xchg
dec
push
xor
push
popf
(bad)
push
sub
jb
sub
or
outs
xchg
and
aam
loopne
pushf
cwde
inc
mov
add
push
popa
retf
sti
shl
sahf
(bad)
dec
in
jb
lods
xor
xchg
shl
sbb
add
cdq
dec
jmp
fstp
mov
xor
bound
jmp
inc
xor
adc
jmp
test
enter
cmc
jmp
xor
dec
es
mov
xchg
inc
sbb
std
xchg
sbb
lods
dec
dec
jnp
cmps
mov
in
(bad)
(bad)
pop
cmp
int3
xchg
add
xchg
sub
in
mov
scas
std
sbb
ins
jb
ins
pop
(bad)
cli
or
fwait
jo
test
push
neg
cmp
jbe
jns
mov
dec
dec
dec
xlat
call
div
mov
lods
and
imul
mov
(bad)
nop
and
fwait
gs
(bad)
mov
iret
xor
mov
(bad)
inc
out
jg
inc
and
cmp
lock
jp
add
add
mov
mov
xchg
add
jl
loop
jno
mov
jnp
push
mov
js
push
or
lea
repnz
sub
mov
pop
lods
into
fiadd
jmp
outs
cmp
fld
out
mov
icebp
das
mov
fidiv
push
out
mov
pop
ror
stos
push
sub
(bad)
dec
ins
mov
rcl
je
cmps
lods
xor
test
dec
mov
add
add
fsubr
aam
cmps
push
es
imul
sbb
pop
(bad)
loope
frstor
fcom
repz
mov
xchg
adc
fs
cmp
fsub
mov
es
sti
rcr
pop
xor
and
xchg
int
cdq
adc
sti
jmp
xor
icebp
sbb
jmp
cdq
push
push
mov
mov
out
gs
imul
nop
lahf
outs
rol
dec
sbb
adc
add
sti
test
outs
ret
adc
jl
push
add
mov
leave
shl
ret
adc
mov
mov
adc
mov
sbb
pop
es
int
inc
into
pop
pop
shl
gs
rcl
inc
lds
lea
shl
jo
pusha
jl
mov
xor
inc
xchg
and
xchg
test
scas
sbb
sub
sbb
retf
shl
and
and
jp
cmps
movs
movs
xlat
xchg
sahf
and
sub
sbb
les
cdq
in
jno
test
mov
ret
ins
jb
xor
xlat
(bad)
imul
jge
jo
jne
jne
inc
pop
xor
gs
pop
mov
inc
push
out
dec
fst
cdq
or
inc
inc
loop
aad
daa
test
adc
mov
push
stos
retf
pop
stc
cdq
cmp
inc
clc
movs
cmp
sub
push
hlt
sbb
add
leave
inc
popa
call
xchg
outs
js
push
inc
pop
fdiv
push
adc
mov
and
movs
sar
push
out
or
sti
addr16
in
pop
imul
rcl
sub
stos
fisubr
sbb
push
add
movs
clc
push
movs
push
dec
cli
pop
push
iret
(bad)
jno
pop
xchg
dec
xor
inc
movs
mov
cmp
pop
or
mov
sub
jnp
pop
idiv
call
rol
or
repz
pusha
fwait
jge
push
scas
lock
cmp
imul
cmps
imul
inc
dec
ds
repz
inc
jae
sub
adc
outs
cmp
out
add
test
mov
call
inc
ss
mov
movs
jl
outs
jg
jmp
lock
test
das
sub
mov
xor
mov
retf
jae
pop
jg
jb
push
jg
push
cmp
mov
xchg
ror
xor
mov
(bad)
fwait
test
push
cs
fcom
add
aam
int
fmul
lahf
rol
inc
rol
repnz
cmp
jns
cmps
cs
add
and
repnz
enter
jmp
loop
mov
sbb
xchg
push
shr
test
ficom
out
cmp
fild
cli
aas
jb
fld
imul
inc
popf
mov
add
imul
push
sbb
sbb
jo
jmp
adc
mov
outs
stos
jno
add
sub
test
cld
mov
outs
dec
or
ja
push
dec
jecxz
and
js
sub
aaa
push
daa
ja
dec
mov
nop
daa
fsub
inc
int3
mov
repnz
bound
fldcw
adc
shl
out
and
xor
inc
add
xchg
jb
inc
(bad)
sub
xchg
pop
clc
cmp
fistp
iret
xlat
mov
pop
add
add
xchg
jecxz
dec
xchg
cmp
xor
xor
adc
lods
fadd
lds
inc
popf
xor
ss
mov
cs
mov
iret
cmp
mov
pop
js
push
jns
adc
push
aaa
stos
sbb
cmps
ins
popf
push
or
sbb
push
sbb
dec
ds
mov
outs
cmovbe
inc
jg
xor
and
out
pop
in
dec
push
push
pop
pop
inc
xchg
jge
int
xchg
lea
sbb
push
fist
xchg
loopne
pop
xchg
out
add
or
imul
retf
xor
mul
pushf
in
pop
jmp
adc
xchg
mov
mov
movs
push
hlt
std
inc
ds
xor
and
fs
cmc
push
adc
cmp
imul
xchg
nop
cli
mov
mov
out
in
pop
sub
mov
(bad)
xlat
jle
cmp
outs
repz
sbb
les
mov
repz
ja
fbld
xor
retf
rcr
aam
mov
jmp
sub
inc
data16
fwait
jno
adc
test
ret
mov
push
mov
les
std
jmp
and
push
xchg
test
out
pop
mov
(bad)
out
les
lods
push
jnp
loopne
fsubr
jg
pop
xchg
shr
add
adc
pop
jmp
mov
jecxz
jg
push
jbe
(bad)
lods
cmp
and
dec
inc
mov
cmps
pop
loopne
das
repz
iret
and
and
sub
pop
cdq
cmps
div
test
sbb
or
sti
hlt
(bad)
(bad)
lods
movs
mov
adc
int3
bound
call
aas
cmps
jle
add
jg
outs
outs
stc
scas
push
and
mov
and
pushf
sub
(bad)
xchg
sub
mov
mov
lock
jne
adc
das
sbb
fisttp
leave
cmp
movs
cs
fucom
mov
cmp
mov
nop
mov
cdq
sbb
or
in
jmp
and
mov
or
movs
cmps
imul
int3
inc
and
not
fisubr
push
das
es
dec
pop
enter
(bad)
pop
pop
das
pop
push
outs
imul
xchg
jae
aas
aas
arpl
ror
pop
enter
pop
add
rcr
mov
test
jo
mov
loopne
mov
data16
les
nop
add
iret
mov
inc
xchg
push
daa
adc
mov
out
pop
xor
hlt
mov
repnz
jle
add
fidivr
add
sbb
cs
mov
hlt
test
in
leave
cdq
sti
cwde
dec
loope
call
dec
(bad)
jno
sbb
stc
rep
arpl
call
cmp
jns
in
adc
or
lock
imul
jns
(bad)
jne
call
loop
xor
and
dec
inc
cmp
adc
xchg
inc
mov
stc
icebp
clc
lods
imul
test
stos
sti
fs
adc
cmc
jecxz
sub
and
shl
xchg
sbb
mov
mov
xor
and
pop
jnp
pop
test
dec
mov
xlat
aad
mov
fmul
call
adc
jl
aas
push
addr16
dec
jae
xor
pop
or
inc
mov
mov
sub
fidivr
or
dec
cmp
rol
jnp
test
pop
fmul
add
and
mov
xchg
add
outs
mov
dec
cmovns
xor
inc
xchg
fwait
aam
sub
sub
repnz
arpl
test
jno
mov
in
ins
xchg
xchg
dec
xchg
push
ret
jecxz
sub
pop
int
mov
mov
cdq
inc
lods
jg
icebp
loopne
scas
push
pop
ret
adc
push
jne
leave
enter
push
push
imul
test
popf
pop
add
call
mov
loopne
dec
in
outs
inc
retf
std
dec
inc
cmp
sub
and
cmp
pop
and
sbb
jb
ss
push
call
test
jle
push
and
int3
add
xchg
push
mov
or
sbb
push
mov
adc
in
xchg
fcmove
adc
add
test
push
jl
mov
lahf
lahf
addr16
popf
mov
mov
mov
movs
adc
fisubr
mov
pusha
and
and
dec
xor
inc
pop
xchg
lahf
pop
push
add
in
sbb
adc
push
stos
fidiv
xlat
xchg
jnp
cmp
jecxz
es
imul
jns
fcom
push
sbb
mov
lods
nop
adc
loopne
js
mov
adc
into
sub
mov
sub
mov
int3
fbld
and
mov
jne
shl
jno
ja
stos
js
sub
mov
std
sbb
call
in
mov
rol
xchg
ret
(bad)
cld
pusha
(bad)
ins
and
shl
and
nop
movs
ret
mov
or
xchg
mov
jmp
fucomi
sub
pop
sub
fld
mov
test
adc
pop
mul
mov
cmp
cmps
sbb
inc
movs
stc
mov
out
outs
daa
outs
cmps
lds
dec
inc
jno
fidivr
mov
fnstcw
jo
clc
hlt
xchg
inc
xchg
push
stos
lahf
pushf
ror
int3
lahf
test
pushf
cmps
daa
les
out
cdq
pop
lods
hlt
push
call
int
test
lock
fidiv
add
movs
jo
jo
cld
xor
jecxz
cld
int
aaa
jecxz
sub
mov
retf
loop
jns
dec
(bad)
sbb
shl
test
stos
jns
jge
imul
adc
dec
sti
test
in
jl
push
fadd
jne
dec
adc
xor
popa
and
sbb
xchg
fidiv
add
stos
jge
sbb
aad
push
enter
pop
and
cmp
jecxz
hlt
inc
ja
je
push
loope
and
mov
std
and
test
mov
xor
call
loope
stos
inc
leave
xchg
cmp
fnsave
mov
pop
and
and
and
sub
jge
cli
cmc
or
in
ror
add
stc
mov
iret
inc
retf
leave
out
mov
push
stos
and
lods
xor
xchg
add
das
int3
pusha
jae
or
out
int3
sub
xchg
xor
push
aas
cli
iret
dec
in
and
add
push
neg
in
or
cmp
into
retf
xor
mov
int3
ins
cmp
pusha
ins
pusha
mov
aas
aam
pop
aaa
fnstcw
and
fwait
inc
xchg
sub
mov
les
mov
scas
cmp
jb
jg
or
ins
call
jo
mov
rol
adc
sub
cwde
mov
jg
rcr
and
and
mov
cmps
or
movs
or
pop
mov
test
shl
ret
out
pop
push
cs
and
mov
push
(bad)
neg
jb
xor
imul
jae
clc
sahf
xor
mov
xchg
sti
(bad)
mov
adc
fs
es
inc
out
mov
popa
push
psubsw
push
(bad)
std
mov
das
pop
mov
popf
mov
sbb
cdq
xchg
imul
mov
inc
sbb
ret
call
xor
push
pusha
pop
and
sub
es
movs
jb
js
sub
test
ja
adc
xchg
stos
bound
out
in
mov
call
mov
xor
dec
cli
push
loope
jmp
add
push
ins
mov
mov
ja
jae
mov
jp
mov
jo
retf
out
imul
push
js
cmp
sbb
sbb
rcr
das
idiv
and
out
bnd
jne
push
mov
in
test
fwait
add
mov
xor
adc
push
add
ret
dec
inc
adc
xor
inc
out
inc
xchg
push
retf
in
xor
mov
pop
mov
es
std
es
xor
jle
mov
js
shl
mov
inc
fdivr
xchg
pop
mov
ds
(bad)
pushf
cmp
lds
lahf
in
out
add
addr16
mov
ss
iret
pop
lahf
bswap
add
lods
pop
out
ror
(bad)
movs
cdq
jecxz
clc
mov
dec
jmp
ins
js
rcr
cmp
cmps
jmp
push
mov
cmp
mov
push
inc
cmp
lock
cli
fcomp
je
mov
mov
mov
test
ja
addr16
mov
mov
xchg
mov
in
and
cmc
in
or
add
pop
icebp
mov
xor
mov
clc
pop
out
pop
add
dec
and
mov
mov
pop
mov
nop
sub
and
ja
retf
jo
pushf
je
or
test
call
and
ja
push
std
out
adc
lahf
ror
xchg
jmp
adc
enter
shl
cwde
pop
shl
push
hlt
dec
outs
cdq
or
mov
fistp
aas
sar
add
cmp
push
cmp
fmul
mov
jmp
or
mov
ins
call
dec
mov
das
mov
(bad)
repz
mul
sub
imul
clc
or
imul
push
je
cs
mov
inc
or
pop
dec
jl
enter
fwait
lock
stc
adc
sbb
loope
fdivr
ja
lock
inc
iret
out
mov
pop
mov
not
push
mov
aas
xor
and
fnstcw
iret
and
dec
xchg
test
retf
int
jp
fadd
or
test
and
xchg
sub
lods
stos
pop
test
cmp
sub
inc
xchg
cmp
or
xor
iret
mov
and
mov
inc
mov
sub
dec
mov
aam
into
dec
ret
mov
je
mov
dec
xchg
int
push
cmp
inc
or
scas
cmp
jbe
cmp
movs
and
xchg
inc
cli
cmp
lahf
in
into
fisub
jne
lods
sub
inc
sbb
xor
iretw
popa
jg
push
test
xchg
jnp
(bad)
arpl
push
(bad)
daa
sar
fs
dec
mov
push
fdiv
out
popf
mov
(bad)
mov
push
data16
dec
aad
lods
lods
inc
sub
mov
dec
(bad)
lods
ss
adc
pop
fsubr
push
(bad)
fs
pop
adc
mov
div
ins
ja
pop
retf
test
mov
pop
xchg
inc
test
scas
xor
aas
mov
jns
or
movs
ds
icebp
or
repz
(bad)
pop
rol
sub
jb
ds
cmp
dec
ja
out
outs
repnz
or
bound
cmp
(bad)
cmps
or
xchg
aaa
imul
or
retf
mov
pop
jae
and
mov
or
jae
nop
ja
aaa
mov
mov
clc
xchg
outs
jmp
aaa
or
sbb
das
faddp
lods
sahf
sets
outs
mov
pop
cmp
push
xlat
dec
cli
inc
(bad)
mov
(bad)
sar
or
shl
dec
adc
inc
pop
dec
fistp
adc
mov
pop
mov
test
jle
add
mov
shl
xor
outs
outs
out
jecxz
mov
lds
ss
xor
stos
in
retf
adc
cmps
(bad)
xchg
jge
pop
inc
dec
cmp
dec
jbe
stos
(bad)
mov
sub
add
je
sbb
and
jp
dec
cmp
es
nop
addr16
and
frstor
sar
dec
adc
push
pop
lahf
aam
sub
inc
pop
jbe
pop
fadd
bound
pop
fistp
movs
psrlq
daa
push
sub
ins
jno
and
jae
pop
sbb
cmp
adc
iret
xchg
jl
pop
jmp
adc
mov
std
push
cld
jp
xor
sbb
retf
xor
aam
fstp
sahf
ss
in
dec
cs
outs
out
test
cmp
adc
cmps
mov
movs
pop
adc
sbb
mov
dec
sar
outs
mov
push
ror
addr16
loope
xchg
xlat
test
inc
xchg
add
mov
fadd
inc
(bad)
cmps
shl
push
pop
cld
mov
std
aas
adc
(bad)
fcomp
lods
xor
jne
shr
pop
das
adc
es
and
fcom
repnz
sbb
xor
imul
push
pop
scas
stos
daa
in
mov
cmps
xchg
pop
push
(bad)
test
bnd
adc
mov
stc
jns
mov
shr
test
jbe
inc
not
pusha
popf
xchg
imul
stos
mov
lahf
loop
lahf
add
(bad)
xor
clc
test
mov
push
inc
pop
test
add
aad
out
add
lods
dec
mov
int
cmp
xchg
or
dec
pop
push
push
out
mov
and
popa
mov
mov
out
adc
adc
ror
sub
jg
mov
jno
je
out
add
push
inc
inc
test
sbb
sbb
movs
loop
mov
clc
cmc
fst
sbb
lahf
je
movs
retf
xor
sub
ror
add
jnp
fbld
inc
inc
sub
out
test
hlt
xchg
ret
sub
mov
xor
cld
mov
sti
es
call
mov
push
out
div
nop
sbb
loop
in
lahf
mov
dec
stos
jno
(bad)
sbb
imul
cmp
(bad)
xchg
fist
mov
imul
dec
xor
jno
stos
jo
pushf
mov
add
push
(bad)
enter
sbb
push
jmp
in
repz
jbe
in
das
mov
test
xchg
out
movs
popa
cli
leave
adc
aam
sub
mov
jge
cmp
push
fst
adc
outs
pop
cmps
or
adc
clc
mov
imul
xchg
sub
mov
shl
lods
jo
fisubr
lahf
repnz
jnp
push
sbb
sahf
ror
sbb
mov
add
out
in
pop
jmp
pushf
ins
sahf
dec
loopne
push
jge
daa
cmp
jno
jecxz
ins
jmp
cwde
aam
inc
rol
jp
lods
and
ret
stos
xor
cli
add
aad
popf
jp
xor
scas
out
ret
lahf
(bad)
ja
jl
jecxz
clc
outs
leave
loope
out
mov
cmp
out
xor
pop
and
mov
(bad)
sub
xchg
xor
bound
dec
push
(bad)
pop
xor
push
push
test
loop
xor
xor
mov
out
(bad)
leave
mov
data16
adc
retf
test
stc
sti
out
out
movs
shl
dec
sub
adc
sahf
mov
out
add
inc
push
jns
mov
push
jle
mov
mov
mov
fcomp
popa
std
(bad)
(bad)
cmp
mov
in
mov
jmp
bound
sbb
xlat
sub
cmps
fnsave
outs
inc
push
mov
test
into
lea
cmp
xchg
inc
pop
out
aam
loopne
and
scas
ins
sar
sub
push
ins
fs
imul
ret
enter
ins
movs
pusha
add
sub
add
(bad)
icebp
out
mov
and
mov
pushf
inc
pop
cmp
cdq
xchg
mov
je
gs
jnp
(bad)
cli
js
jbe
lahf
jmp
les
mov
sar
pop
jge
cmp
xchg
icebp
ins
pop
inc
push
gs
fld
xchg
or
pop
(bad)
imul
cmp
lahf
enter
mov
push
push
jge
push
push
xchg
les
sbb
imul
xor
sub
sub
dec
out
sbb
ins
outs
jmp
(bad)
cmc
mov
or
adc
or
and
icebp
dec
mov
in
push
(bad)
xchg
add
ds
lds
xor
mov
mov
or
mov
inc
or
lahf
mov
mov
inc
push
mov
adc
rcr
cmps
imul
cmp
sbb
sub
(bad)
icebp
popa
sar
add
cmp
dec
adc
cmp
les
mov
div
pop
push
add
ret
imul
dec
call
and
xchg
stc
pushf
leave
xchg
icebp
mov
pop
test
cmp
pop
pop
lds
inc
push
call
daa
pop
std
cli
push
imul
scas
pop
dec
out
je
xor
int
movs
mov
sbb
retf
scas
dec
outs
jne
or
stos
cmc
leave
mov
sar
repz
test
jno
dec
call
aam
mov
js
les
in
les
add
sbb
sbb
xchg
test
sub
js
stc
pop
sar
lods
mov
mov
inc
pop
add
cwde
mov
shl
iret
fld
hlt
movs
jne
nop
push
nop
out
mov
sbb
and
jae
test
fmulp
repz
outs
clc
inc
jle
mov
shr
ds
shr
cli
cmps
mov
jg
inc
int
add
jle
adc
ja
push
shl
xor
dec
cli
movs
xchg
inc
rcr
adc
xchg
mov
(bad)
mov
bound
mov
lds
sbb
jns
mov
out
or
daa
mov
mov
xlat
nop
lods
adc
ins
sahf
pop
xor
fwait
outs
stc
xor
mov
leave
xor
mov
push
shl
jle
mov
rol
push
fimul
xor
in
lods
mov
pop
retf
dec
mov
cmp
sub
outs
ds
cld
xchg
xor
(bad)
movs
pusha
fld
icebp
push
into
dec
jne
scas
mov
jp
test
adc
sbb
xlat
mov
and
cs
push
jb
push
outs
jnp
jg
inc
mov
xor
push
add
rol
or
ds
cmp
std
push
fs
xlat
mov
sub
inc
pushf
scas
xor
push
out
loopne
mov
add
pop
add
dec
test
(bad)
mov
add
rcl
pop
xchg
aas
das
sub
(bad)
(bad)
xchg
call
inc
ret
or
push
es
retf
out
push
fisubr
fimul
retf
or
ins
mov
aaa
inc
pop
sub
cwde
daa
or
inc
cmp
outs
loope
dec
push
jnp
mov
dec
cmp
mov
pop
dec
push
fwait
das
(bad)
mov
and
or
call
aas
xor
mov
xor
cwde
int
cmc
nop
or
addr16
outs
call
push
icebp
sub
push
pop
xchg
shl
push
mov
clc
push
and
test
xor
xchg
imul
add
jb
in
sbb
and
push
cmp
sar
ja
test
or
jp
and
xchg
repnz
fistp
pop
cmps
int
(bad)
mov
jecxz
lea
xchg
or
retf
lock
fidivr
mov
mov
movs
adc
xchg
out
push
push
fadd
aad
mov
xchg
sub
or
mov
push
push
mov
loope
xor
int3
in
add
pop
or
imul
mov
test
add
jmp
cwde
test
ins
jp
and
adc
xor
xchg
push
xor
cmps
xchg
add
jmp
aad
mov
sub
push
push
adc
(bad)
ror
jecxz
adc
stos
cdq
jns
push
and
addr16
mov
iret
fsubr
mov
arpl
int3
cs
(bad)
loope
pop
jb
and
cdq
push
in
and
dec
xchg
imul
enter
(bad)
jmp
daa
cwde
inc
cmp
aas
mov
data16
cmp
popa
mov
dec
rol
popf
movs
dec
mov
icebp
movs
mov
and
xor
or
popa
xor
loop
pusha
xchg
jecxz
movs
push
xchg
sbb
mov
dec
dec
and
in
jbe
xchg
pop
jle
jae
(bad)
retf
in
xchg
sar
enter
sahf
lea
jge
dec
jl
out
xchg
mov
icebp
data16
push
add
mov
sbb
sar
xor
test
xchg
sub
loope
cmc
inc
pusha
inc
sub
push
xor
mov
xchg
adc
dec
ins
xchg
mov
and
call
cmps
iret
scas
sbb
shl
xchg
lods
add
xlat
or
cmp
and
mov
xchg
inc
sbb
jmp
and
jmp
xchg
sub
push
aaa
iret
leave
xor
add
in
and
stc
inc
outs
(bad)
iret
lea
add
jno
popf
dec
fsub
loop
dec
dec
lahf
pop
sbb
retf
jb
test
(bad)
xchg
adc
adc
push
stos
mov
or
xor
pop
je
mov
add
adc
mov
(bad)
cwde
into
mov
cmp
rol
mov
loop
or
dec
sub
ja
nop
jge
and
fnstenv
clc
out
mov
test
loope
xchg
xchg
aas
mov
push
push
and
adc
push
cmp
test
and
pop
pusha
jbe
mov
push
js
mov
outs
jge
in
imul
dec
push
ror
pop
sbb
push
push
scas
push
add
cmc
push
jae
movs
xchg
int3
mov
sub
inc
test
call
inc
nop
and
je
xor
xchg
dec
fcom
loopne
and
push
inc
hlt
push
xchg
mov
jo
jp
retf
imul
mov
push
stos
and
pop
add
sbb
cmp
cmp
mov
fsubr
arpl
push
or
cmps
xor
mov
and
cli
lods
inc
(bad)
jmp
movs
cvttps2pi
or
push
imul
mov
cmps
call
pop
enter
daa
pushf
sub
arpl
(bad)
leave
fcom
icebp
loopne
sti
mov
mov
ss
push
cld
push
mov
fsub
pslld
mov
js
dec
push
sub
scas
mov
mov
pop
jbe
xchg
aaa
jo
enter
test
sbb
xor
mov
aas
push
inc
dec
mov
fsubr
aad
inc
pop
and
dec
dec
fisub
jmp
arpl
mov
and
dec
or
and
cmp
mov
sub
call
cmp
enter
sbb
pop
shl
and
cmp
xchg
mov
stos
mov
mov
mov
movs
popf
div
or
dec
mov
outs
aaa
call
es
and
(bad)
jns
push
pop
bound
cdq
rcr
mov
in
out
fcomi
jg
mov
loop
div
add
jns
mov
pop
pushf
mov
jmp
movs
das
cmp
scas
jge
dec
sbb
add
aam
dec
cmps
jmp
into
jmp
fild
test
shl
add
inc
popf
sub
shl
pusha
cmp
xchg
stc
fs
mov
adc
movs
push
scas
lock
int3
cmp
bound
adc
cmp
jle
jae
cdq
repnz
and
sbb
add
int
loop
jb
out
jmp
jns
dec
and
and
fadd
inc
mov
(bad)
call
adc
sbb
push
mov
dec
imul
iret
or
sub
jo
jle
es
int3
pushf
enter
fwait
popa
push
pop
adc
cld
(bad)
and
or
lods
inc
loop
loope
mov
xor
jo
sub
test
shr
add
jmp
xor
cmp
jecxz
test
jmp
xchg
cmp
xor
pop
mov
mov
(bad)
jns
mov
cdq
sbb
and
mov
jp
repz
(bad)
test
sahf
add
rcl
js
test
inc
add
xchg
cmps
sub
mov
sub
mov
stos
cmp
stos
data16
stos
sbb
xchg
or
xlat
mov
rol
mov
add
lods
mov
fnstsw
movs
in
gs
bound
mov
lea
xchg
xchg
push
sub
jmp
push
in
arpl
jno
aas
xor
dec
mov
fs
(bad)
(bad)
mov
xor
adc
mov
scas
xchg
cld
clc
mov
jge
mov
push
lahf
adc
shr
push
xor
push
jbe
cmps
dec
mov
loop
je
clc
retf
fbstp
fidiv
neg
fdiv
sub
inc
cs
(bad)
test
mov
mov
pushf
adc
movs
call
pop
daa
ins
adc
stos
inc
jle
xor
cdq
popf
add
(bad)
pushf
fist
mov
sbb
into
cmps
inc
cmp
add
pop
push
push
fistp
add
cwde
jmp
test
outs
rcl
pushf
ss
(bad)
aad
cwde
cmp
outs
(bad)
sar
push
push
pop
mov
pop
or
retf
in
inc
repnz
scas
out
das
and
jp
jnp
rol
sbb
test
mov
jge
jecxz
xchg
sbb
mov
icebp
pop
(bad)
inc
sahf
push
fcomi
mov
or
inc
mov
cwde
inc
lods
hlt
mov
cmps
nop
inc
std
out
mov
dec
es
outs
mov
cmc
cld
add
xor
iret
scas
ficom
adc
and
ror
dec
jp
cmp
mov
js
mov
cmp
ja
xchg
fwait
leave
ds
inc
(bad)
in
arpl
mov
or
lock
and
adc
cmps
push
(bad)
fadd
ror
push
adc
icebp
push
fnstcw
aad
mov
xor
repz
sub
cmp
das
fwait
int
push
call
xchg
and
out
imul
sub
cmps
retf
pushf
iret
ss
scas
pop
adc
pop
adc
aam
gs
aad
mov
push
movs
fs
cmp
inc
ss
and
jae
xchg
inc
test
or
xor
add
pop
mov
push
xchg
xchg
icebp
push
inc
or
push
sahf
and
push
stos
inc
dec
cmc
xchg
mov
cdq
dec
test
xchg
dec
or
or
pop
sbb
jmp
dec
cmp
inc
push
cwde
and
in
cli
movs
arpl
sub
addr16
(bad)
das
xor
mov
lock
jmp
add
inc
inc
fsub
jle
xchg
inc
cmp
pop
cwde
loope
adc
mov
and
les
das
es
std
add
cmps
push
mov
lds
jb
push
or
push
fld
leave
fistp
push
jns
jnp
ja
or
add
add
stc
popa
std
outs
jno
cmp
fwait
cli
cmc
popf
push
adc
inc
mov
add
sar
ja
inc
xor
xor
jae
and
jo
jge
pushfw
vpackssdw
rcr
shr
les
xor
sbb
in
loopne
inc
aas
loop
and
pop
retf
dec
cmp
imul
xor
pop
inc
mov
std
xor
pusha
adc
ror
push
outs
mov
aad
sub
push
push
mov
lods
add
ins
ffreep
mov
data16
mov
daa
inc
ds
xchg
push
or
jmp
cmp
cmp
xchg
(bad)
hlt
jp
xor
ficom
std
adc
cmc
mov
je
adc
fwait
add
pop
xchg
cmp
push
sub
adc
lea
movs
pop
in
push
sub
movs
scas
mov
(bad)
aam
sub
pusha
sbb
ror
hlt
cwde
test
call
pop
es
ds
cwde
xor
retf
es
xchg
xchg
test
pop
imul
scas
hlt
mov
push
fwait
test
fdivr
push
and
in
int
mov
xchg
ins
loopne
std
mov
mov
adc
mov
leave
mov
mov
or
aam
js
xchg
and
out
jne
mov
mov
loopne
mov
gs
or
aad
stos
add
cmp
movs
das
sbb
iret
push
xor
aas
inc
dec
(bad)
lods
inc
inc
popa
xchg
dec
aas
fnsave
shr
push
xchg
sbb
xor
es
repz
sahf
or
sti
dec
mov
sbb
ret
repz
push
dec
leave
or
mov
pop
dec
setp
mov
inc
jge
retf
mov
push
sub
jnp
adc
sti
pop
pop
sbb
daa
xchg
fnstcw
das
xor
test
lods
es
cmp
dec
sub
(bad)
lock
mov
aas
mov
adc
inc
iret
push
jbe
and
xchg
sbb
or
sub
xor
mov
or
pop
mov
sub
aam
imul
stos
dec
(bad)
jle
xor
das
cli
sldt
or
push
push
add
sub
sbb
les
mov
(bad)
xor
pop
cmp
fisub
daa
aam
mov
mul
pop
mov
pop
adc
xchg
loop
push
xchg
out
pop
mov
jo
push
js
iret
push
jle
daa
push
shl
adc
ret
mov
inc
imul
pop
aas
and
aaa
sti
lods
xchg
pop
push
in
sti
or
outs
pop
push
cmp
dec
shl
retf
mov
inc
mov
push
stos
retf
shl
mov
fst
rcl
adc
dec
push
fs
repnz
jmp
jle
pop
pushf
dec
add
mov
call
dec
sbb
xchg
ret
add
jo
mov
jle
dec
clc
adc
cmp
in
push
fadd
mov
fisubr
das
cmp
mov
add
daa
mul
sar
rcr
pop
pushf
mov
push
or
lahf
xor
call
dec
or
out
fs
adc
and
xor
enter
dec
gs
push
scas
add
inc
gs
dec
(bad)
fnstcw
xchg
lods
test
sbb
repz
jnp
pop
lods
adc
pop
outs
mov
push
(bad)
jae
ss
clc
sbb
push
cmp
xlat
retf
retf
sbb
in
and
xor
or
js
dec
(bad)
fst
ins
(bad)
cwde
fs
inc
rol
pop
out
add
inc
sbb
movs
ret
or
out
push
dec
ins
dec
mov
inc
pushf
mov
sar
inc
adc
add
ror
mov
sbb
ret
cmp
(bad)
mov
mov
in
or
jle
inc
cdq
(bad)
arpl
jno
rcl
mov
clc
enter
jecxz
pop
adc
sbb
pushf
loopne
loopne
div
aaa
aas
xchg
ins
inc
xchg
push
out
call
adc
(bad)
dec
fdivrp
ret
jle
jecxz
aad
xor
cdq
adc
or
loopne
mov
inc
adc
dec
and
lods
retf
pop
sbb
repz
xchg
in
mov
sbb
push
jmp
push
push
(bad)
mov
add
push
jle
mov
fs
ret
sbb
mov
loop
daa
sbb
call
les
pop
xchg
ds
cli
jp
repz
add
jmp
or
stos
cmps
fcom
lock
dec
out
imul
cmp
fs
jbe
push
dec
mov
sub
daa
movs
xchg
retf
xchg
retf
fidiv
pop
or
pop
xlat
int3
adc
popf
mov
lock
(bad)
sbb
jnp
or
ror
jbe
fsubrp
jno
jb
push
mov
push
add
ins
jne
push
cmp
jno
mov
ret
mov
push
or
stos
popa
jmp
fs
std
pop
rcl
lods
jp
sub
repnz
or
(bad)
xor
ins
call
cli
mov
dec
pop
add
jge
adc
inc
iret
in
xchg
push
add
enter
ins
dec
retf
cs
mov
hlt
mov
sub
call
mov
out
imul
add
(bad)
imul
jnp
or
push
test
mov
shl
paddsb
xchg
fwait
mov
outs
jmp
les
jle
stc
(bad)
sbb
(bad)
push
sbb
fnstcw
push
pop
cmp
and
popa
or
sub
ins
lea
es
mov
inc
xchg
sbb
mov
xor
mov
xor
push
push
(bad)
out
scas
enter
in
jge
sbb
dec
xchg
mov
cmc
(bad)
in
and
pusha
call
popa
mov
cli
aam
add
test
aam
stos
cwde
pop
shr
adc
mov
push
xchg
aad
ja
sub
cdq
out
xor
sahf
jno
(bad)
push
push
sub
repnz
es
and
xchg
mov
into
enter
xchg
xor
adc
push
rol
fnstenv
sbb
cmps
cmps
jbe
mov
mov
ja
imul
leave
scas
ins
push
idiv
repnz
or
xchg
jp
add
sti
pop
movs
js
push
xchg
jb
adc
sub
push
inc
out
call
scas
add
inc
fcomp
mov
jb
rol
sbb
fisubr
mov
xor
jno
bound
lods
das
out
pop
cdq
retf
repnz
movs
pop
ret
push
mov
xchg
loop
cs
inc
mov
push
(bad)
ins
and
fistp
sbb
call
lock
add
xchg
pop
ror
xlat
cli
out
inc
jecxz
int
cmp
jmp
adc
jmp
and
lock
cmp
(bad)
jecxz
retf
pop
scas
inc
retf
push
(bad)
shl
mov
stos
or
jno
adc
pop
popa
push
pop
mov
retf
adc
shl
fld
mov
pusha
pushf
inc
jle
mov
mov
loopne
lods
sub
mov
jp
or
and
and
dec
add
sbb
rcl
and
ret
call
ret
add
ss
add
mov
loopne
jo
(bad)
pushf
or
sub
jnp
and
and
arpl
mov
pusha
sub
sub
cmp
stos
int
out
mov
mov
xor
retf
out
(bad)
shr
mov
inc
mov
leave
dec
cmp
mov
outs
add
lods
aas
xchg
dec
mul
pop
add
cmp
aaa
ret
test
pop
dec
pop
inc
cdq
out
push
inc
inc
mov
int
in
xchg
js
adc
mov
mov
add
jmp
mov
inc
mov
jne
pop
out
add
jnp
fsubp
and
rcr
xchg
shl
pushf
mov
xchg
mov
sbb
gs
sub
call
dec
cmp
xor
in
lods
cmps
sub
into
stos
dec
push
mov
in
cmps
push
daa
adc
adc
fistp
shl
jbe
fmul
sbb
jp
or
into
inc
pop
dec
mov
push
dec
aad
(bad)
jno
arpl
call
dec
es
xor
in
int
mov
adc
lea
fidiv
test
neg
add
cmp
movs
call
mov
adc
shl
xchg
sub
xor
rcl
ja
adc
cld
sub
in
daa
mov
in
div
mov
cmp
mov
push
sub
mov
leave
and
xchg
fcmovne
jle
inc
sub
cmps
cmp
mov
push
mov
mov
or
xchg
fmul
gs
cmp
add
das
arpl
fidivr
(bad)
iret
xor
add
movs
pop
sar
mov
jp
test
pop
jns
lods
repnz
adc
shr
push
cld
jnp
movs
pop
les
imul
js
xor
ss
mov
xchg
loopne
fsub
inc
sbb
cdq
lods
or
outs
mov
loop
dec
ins
test
push
and
aas
dec
and
pop
push
int
loop
push
sub
(bad)
push
icebp
jns
jno
cmp
adc
addr16
dec
dec
in
xchg
pushf
(bad)
cmp
lods
inc
push
jp
pop
icebp
and
pop
mov
push
or
fidivr
dec
ret
fisttp
ficom
ins
ffreep
xor
cwde
sub
or
xor
sbb
dec
jns
arpl
dec
cli
clc
dec
jle
xchg
loop
loope
retf
jns
sub
pop
pop
xlat
mov
retf
icebp
mov
dec
femms
mov
ret
out
out
in
xchg
loop
xor
add
xchg
ror
xor
cmp
daa
dec
sub
addr16
in
inc
or
xchg
xchg
fadd
dec
inc
sub
sbb
and
mov
add
popa
sub
repnz
push
mov
outs
cli
mov
inc
push
addr16
inc
cmp
mov
sub
xor
dec
adc
sub
sbb
sbb
pop
and
xor
inc
sub
or
jle
jnp
xor
enter
int3
call
fcmovne
out
jle
inc
ror
retf
dec
or
cmp
imul
les
xor
and
xor
daa
sahf
jl
sbb
clc
cmp
add
sub
js
js
xchg
clc
cmps
pushf
jl
sbb
and
(bad)
jmp
xchg
arpl
jns
and
jle
in
aaa
sahf
dec
aaa
jmp
jmp
in
cdq
xor
nop
xchg
mov
dec
adc
aaa
push
xchg
int3
and
lods
and
cmps
adc
xchg
fistp
mov
movs
lods
shl
pop
cmp
popa
sub
sub
nop
xchg
dec
push
int
and
hlt
es
(bad)
cmp
cli
pop
sbb
sbb
mov
xor
pop
mov
pop
jbe
cli
(bad)
enter
mov
and
xor
int3
add
test
cwde
mov
rol
jmp
test
sub
pop
inc
jno
add
sbb
xchg
sub
sub
cmc
ficom
into
inc
rcr
jns
repnz
das
add
std
fst
mov
inc
icebp
lods
mov
call
xchg
lock
mov
dec
outs
push
xor
add
jns
adc
ins
movs
mov
dec
adc
rol
cmp
imul
fsub
mov
xor
lock
push
jnp
sbb
jmp
xor
clc
fld
test
or
faddp
jmp
shl
cli
dec
cmps
mov
icebp
adc
cmps
push
outs
les
xchg
fbld
or
push
call
cmps
inc
stc
fs
data16
pop
sahf
pop
sbb
sbb
cmp
cmp
inc
imul
jnp
push
jle
jle
push
and
je
sub
mov
push
cmps
xchg
mov
push
rcl
or
add
mov
cdq
test
out
xchg
jno
push
popf
mov
mov
xchg
jno
pop
pop
mov
mov
outs
sub
adc
cdq
retf
in
inc
dec
je
idiv
jae
dec
enter
xchg
out
or
add
dec
jb
in
push
or
mov
push
jmp
jg
cmp
pcmpgtd
add
add
js
mov
(bad)
pop
shl
push
pop
jae
cmp
and
clc
xchg
inc
adc
stos
leave
push
pop
and
xor
sub
jecxz
(bad)
out
movs
pop
(bad)
cmp
leave
push
jb
jle
cld
mov
or
pop
ins
fs
and
mov
sub
test
fimul
sub
push
icebp
movs
sbb
or
dec
jns
push
test
xchg
push
(bad)
movs
inc
adc
or
dec
push
xor
inc
lea
fstp
inc
or
mov
shl
jns
and
mov
or
loop
movs
inc
hlt
jl
lods
ds
jbe
shl
jns
dec
add
ins
lods
scas
stos
mov
inc
test
inc
cld
sbb
cmp
or
call
aad
nop
pop
popf
add
(bad)
push
in
jl
lods
or
mov
shl
das
cmp
inc
stos
cmp
jmp
inc
call
rol
imul
scas
pushf
into
ins
sbb
stos
pop
jmp
push
push
repz
nop
iret
and
sbb
and
or
mov
je
mov
ins
std
cmp
fwait
or
pop
push
push
jmp
lods
sub
inc
dec
out
pop
cmp
arpl
sub
pushf
popa
cmp
add
adc
repz
stos
mov
jp
out
xor
js
ds
into
je
frndint
cmp
imul
(bad)
mov
xchg
lods
mov
and
nop
in
sbb
push
call
out
sar
jp
jle
jge
xchg
inc
icebp
mov
mov
add
adc
jle
lods
cdq
and
mov
fisub
fsubp
arpl
cmp
adc
(bad)
dec
pop
dec
add
fdiv
data16
xchg
in
adc
aaa
retfw
add
(bad)
and
(bad)
cmps
in
out
bound
sub
cmp
inc
add
sbb
les
into
lds
inc
loope
inc
jg
jge
out
sbb
imul
imul
xchg
daa
fisubr
mov
out
mov
test
jecxz
ins
jnp
mov
mov
aas
leave
(bad)
sar
aad
fisttp
hlt
ret
jns
push
xchg
jmp
shl
or
in
jbe
popf
test
repnz
mov
sub
inc
mov
je
call
pop
push
or
jg
outs
jg
sub
adc
cmc
inc
and
and
nop
fucomp
mov
or
dec
lods
imul
sbb
(bad)
scas
pop
mov
out
inc
lods
push
imul
hlt
pop
push
mov
mov
push
or
xlat
ror
stc
push
push
sti
add
fst
out
jecxz
mov
(bad)
xchg
nop
jns
mov
pusha
gs
shr
mov
int3
sbb
pop
dec
jle
sub
mov
aas
popf
inc
jle
cmps
loopne
sub
rcr
xchg
cli
mov
adc
inc
in
ss
imul
cmp
sar
stos
xchg
sub
je
outs
(bad)
test
ret
jb
pusha
es
inc
jl
jl
or
cmps
not
fbstp
jp
leave
rep
adc
sub
jecxz
mov
test
xchg
je
mov
call
popf
jle
xor
mov
sub
sbb
xor
push
mov
ja
inc
mov
(bad)
mov
xlat
stos
push
(bad)
sbb
xchg
and
ret
aas
stc
xchg
push
sub
data16
int3
and
xor
jae
and
pop
repnz
lock
xor
adc
mov
movs
mov
mov
aaa
jb
mov
fwait
sub
addr16
inc
arpl
adc
add
aaa
jmp
jmp
mov
mov
push
sbb
and
cmp
xor
ss
jg
dec
mov
out
jp
sbb
stos
aaa
mov
ror
push
dec
gs
add
adc
and
or
lahf
jg
sbb
mov
inc
pop
push
test
cdq
les
sub
bswap
lods
xchg
mov
sar
mov
pop
add
loop
(bad)
push
adc
fnsave
sub
imul
outs
jbe
jg
dec
pop
imul
push
out
sbb
adc
cmp
retf
scas
inc
adc
enter
ss
jp
movs
inc
or
pop
shr
or
mov
cmp
in
outs
js
aad
mov
mov
es
pop
xor
ja
sbb
lods
retf
jmp
cmp
pop
mov
inc
dec
xchg
inc
add
movs
push
mov
(bad)
test
add
into
and
rol
mov
jl
add
push
cs
outs
or
test
cmp
int3
push
and
xor
and
aaa
test
adc
add
test
inc
push
das
inc
mov
cmp
inc
add
mov
cmps
xchg
pop
cmc
pop
jl
lock
mov
push
mov
mov
gs
push
mov
and
stc
fdiv
mov
dec
outs
loope
push
mov
mov
add
in
pop
cli
fld
imul
cwde
push
lods
sbb
cwde
loope
fdivp
stc
jecxz
mov
mov
xor
fisubr
fisubr
cld
xor
push
icebp
dec
fsubr
sub
mov
pop
rol
(bad)
jmp
outs
out
pop
shufps
cmc
add
(bad)
cmc
lea
test
sahf
pop
shr
mov
adc
loope
scas
adc
scas
push
sar
loope
test
dec
cli
and
pop
stos
adc
call
adc
retf
stc
sbb
push
out
mov
push
cmp
sub
dec
add
cmp
icebp
or
mul
mov
xor
lods
aam
loop
mov
pop
mov
or
push
add
lea
mov
aaa
inc
mov
jno
imul
fst
mov
sbb
pop
icebp
lods
clc
fs
push
push
xchg
ror
push
adc
mov
aam
adc
jnp
mov
mov
int3
mov
sbb
jle
lods
repnz
adc
sub
or
pop
rcr
or
mov
das
push
add
add
test
push
jmp
mov
aas
or
les
adc
and
inc
xlat
cmp
xchg
cmp
arpl
and
ror
cmps
sbb
fsubp
mov
xchg
inc
sub
sbb
ins
sbb
or
jnp
mov
push
test
xchg
mov
cmps
cmp
jmp
mov
pop
scas
xchg
(bad)
popf
iret
cmp
js
les
cdq
bound
stc
sbb
sahf
adc
sbb
xchg
dec
xchg
jmp
inc
mov
xor
pop
mov
jae
lods
sti
fwait
push
add
sub
ja
div
dec
xor
sbb
cmps
jecxz
ins
push
mov
jne
mov
adc
mov
scas
push
sbb
scas
jge
inc
es
pop
ror
bound
fnstcw
add
and
xchg
push
jmp
ror
stos
dec
mov
ret
inc
cmp
test
aas
inc
fidivr
sar
and
aad
add
push
pusha
fcmovnb
xchg
out
sub
inc
mov
repnz
in
add
hlt
inc
std
and
shr
(bad)
stos
or
outs
xor
adc
sbb
cmp
sbb
iret
sub
jno
in
imul
mov
test
shl
push
lods
sbb
es
xchg
inc
stos
dec
mov
and
mov
push
data16
jmp
nop
(bad)
and
ds
mul
std
dec
xchg
xor
stos
pop
imul
sub
das
(bad)
aad
clc
mov
out
fnstcw
and
jne
pushf
outs
inc
mov
pop
sahf
pop
pop
mov
stos
sub
inc
sub
not
aas
loop
imul
xchg
ret
jecxz
mov
(bad)
hlt
pop
and
sbb
fwait
cmp
stos
outs
and
adc
movs
push
mov
in
mov
ja
sub
mov
rol
mov
cmc
cmp
sti
iret
dec
push
jbe
xor
mov
adc
imul
push
aas
in
adc
data16
push
mov
xlat
push
vandnpd
ret
push
push
inc
inc
cwde
xor
mov
sub
int3
movs
mov
push
lock
and
pop
and
imul
pop
mov
inc
mov
fimul
ja
in
enter
dec
inc
or
lea
jmp
jb
fcomp
lock
sbb
(bad)
sub
mov
sti
xchg
es
in
loopne
cmp
pop
scas
stos
and
loope
xor
add
cli
mov
jp
in
sbb
ja
mov
inc
dec
aaa
fidivr
jns
lea
mov
ins
nop
mov
aaa
jbe
inc
arpl
pop
xor
pop
mov
inc
pop
test
fwait
icebp
rcl
ins
push
cmps
jecxz
sub
push
or
xor
(bad)
hlt
sbb
movs
sbb
dec
sbb
fs
mov
pop
in
(bad)
enter
ds
sti
ss
pop
in
hlt
mov
out
mov
push
inc
ror
in
cli
pop
mov
enter
xlat
sahf
mov
scas
(bad)
loopne
bound
fiadd
push
loopne
out
sbb
mov
push
push
and
iret
out
push
in
stos
sbb
enter
xchg
fnstenv
sub
enter
test
fcmovu
(bad)
iret
xchg
push
pop
mov
inc
jg
pop
js
xchg
pop
in
jno
repz
pop
(bad)
jge
jecxz
add
mov
add
pushf
jmp
std
dec
sbb
dec
xor
call
sub
add
mov
hlt
cmc
cmp
and
xor
sar
sbb
cli
lods
cmp
movs
outs
mov
jns
push
fsub
sbb
out
(bad)
mov
mov
pop
xchg
mov
pop
ret
add
and
cmps
(bad)
xchg
push
mov
ret
and
mov
aaa
mov
ret
les
or
lea
(bad)
frstor
int
pop
call
and
sar
out
daa
mov
xchg
call
rcr
dec
xor
jle
std
push
test
mov
neg
popa
fmulp
inc
cmp
stos
(bad)
jnp
(bad)
jne
mov
mov
sbb
push
(bad)
(bad)
push
sahf
xor
or
or
pop
mov
cmp
repz
stos
xchg
mov
ds
ja
bound
inc
add
repz
ins
push
jne
mov
sbb
mov
push
stos
stc
cmc
ret
movs
mov
xor
(bad)
fs
dec
icebp
ja
adc
lea
daa
sahf
pop
xchg
mov
ins
adc
pop
mov
and
push
dec
jmp
inc
jle
pop
(bad)
mov
or
mov
xor
int3
xor
jmp
mov
mov
pop
mov
jno
lea
ins
xor
sti
outs
push
jle
bound
adc
stc
in
dec
lods
mov
shr
jge
lods
push
lahf
or
out
(bad)
js
pop
mov
dec
xchg
imul
adc
rol
or
lods
xor
mov
and
dec
fstp
lea
loop
mov
or
inc
test
pop
scas
push
adc
(bad)
cmp
mov
ror
xchg
ins
sbb
mov
in
scas
aaa
sub
pop
pop
ins
mov
test
mov
cmp
pop
(bad)
(bad)
mov
gs
mov
loopne
or
ret
inc
(bad)
pop
mov
or
pushf
lea
xor
pop
jbe
mov
pop
retf
mov
xchg
mov
cli
and
xor
sbb
sub
sbb
pop
stc
mov
popf
aas
mulps
test
(bad)
nop
(bad)
push
inc
mov
(bad)
div
dec
push
jp
rol
ret
in
dec
jne
inc
inc
cmp
cmp
xlat
mov
or
outs
mov
and
test
or
and
pop
cmps
dec
in
jne
fadd
ds
add
mul
mov
dec
and
enter
and
dec
mov
add
das
mov
jmp
int3
cmp
clc
mov
fisttp
(bad)
sti
mov
cmp
push
dec
iret
mov
jbe
test
cmp
mov
dec
inc
cli
jp
push
test
out
ja
addr16
jge
hlt
pop
idiv
stos
mov
imul
add
and
fld
cwde
push
add
jecxz
icebp
inc
aam
aas
scas
inc
das
jb
or
and
jnp
sub
xchg
add
mov
imul
ja
sub
push
mov
or
shr
adc
call
je
add
ds
add
daa
mov
hlt
ret
xchg
xchg
push
out
lods
call
mov
inc
in
rol
mov
in
sub
mov
je
push
fsub
jns
add
inc
dec
jnp
push
ja
into
mov
in
aaa
sub
cmps
ins
jecxz
test
dec
(bad)
addr16
add
add
outs
push
movs
cli
fild
mov
xchg
or
popa
xor
jb
movs
enter
xchg
dec
out
ja
hlt
pop
ficom
das
lods
xchg
out
xor
stc
and
les
pop
inc
sbb
push
cdq
push
pop
retf
mov
push
inc
mov
aam
adc
test
dec
xchg
(bad)
in
sti
in
xor
retf
mov
in
pop
add
and
dec
imul
sub
xchg
repz
into
xchg
cld
jl
inc
adc
fdivrp
push
jl
jl
imul
xor
js
sub
bndstx
dec
and
mov
ja
and
mov
add
and
pushf
inc
xchg
movs
mov
gs
jo
je
xchg
and
(bad)
cmp
jg
mov
pop
hlt
stc
scas
mov
mov
hlt
das
stc
or
mov
(bad)
push
mov
and
jns
mov
jecxz
jp
(bad)
lds
leave
pusha
hlt
jmp
xor
push
fwait
rol
and
mov
rcr
xor
ror
test
cmps
mov
mov
push
mov
add
test
xor
sbb
mov
ins
jb
fld
inc
bound
sub
inc
cmp
inc
mov
and
dec
push
and
cdq
and
or
(bad)
jl
repnz
mov
dec
adc
pop
fidiv
in
iret
aam
fsubr
inc
fcomp
xchg
mov
rol
cli
xchg
jmp
mov
push
mov
shl
(bad)
jmp
out
stos
sub
xchg
dec
mov
push
jbe
(bad)
inc
xor
fwait
mov
imul
hlt
pop
push
mov
or
add
in
jp
and
fwait
leave
mov
addr16
lods
lods
xor
jb
int3
dec
cdq
jnp
(bad)
pop
inc
sbb
repnz
das
jb
jnp
cld
aas
dec
mov
icebp
test
aaa
icebp
and
pop
cld
jg
jmp
inc
fcmovbe
mov
jbe
(bad)
lahf
loope
pusha
inc
mul
daa
dec
arpl
jg
fld
adc
sbb
ss
push
mul
test
fild
xchg
call
push
inc
rcl
inc
lahf
(bad)
pop
push
jp
loope
int
mov
loopne
add
ret
fild
jmp
scas
sbb
mov
icebp
sub
jmp
sti
pop
xchg
sbb
jmp
add
clc
xor
call
aam
dec
mov
dec
dec
sub
cmp
xchg
add
xchg
repz
mov
sbb
retf
mov
xchg
lock
dec
adc
add
dec
call
jo
ror
jmp
dec
sbb
mov
and
sbb
add
xor
outs
mov
retf
jge
sar
outs
arpl
push
shl
push
inc
push
fsub
enter
jmp
outs
mov
mov
out
sbb
hlt
fdivr
cdq
mov
jg
inc
mov
and
mov
dec
cmp
clc
pusha
in
adc
(bad)
jmp
call
pop
outs
cmp
pop
pop
pop
mov
(bad)
aam
loop
add
xchg
mov
mov
repz
lods
sbb
mov
(bad)
sub
jno
or
loopne
dec
cdq
inc
bound
cwde
mov
mov
lahf
dec
jl
sub
mov
leave
aad
jne
push
mov
inc
stos
ret
iret
lahf
xchg
test
dec
dec
xor
aaa
jg
mov
sbb
pop
push
das
fs
(bad)
into
lea
pop
mov
aas
int3
call
push
xchg
test
mov
mov
add
cld
mov
adc
arpl
jns
test
sub
jge
push
inc
jns
rol
pop
es
fidivr
mov
movs
push
xor
ror
inc
repnz
dec
popa
(bad)
cmps
and
lods
push
xchg
dec
or
jmp
mov
js
xor
add
mov
xchg
sub
bound
or
dec
cwde
dec
sbb
sar
nop
pop
sar
ffreep
cs
adc
push
retf
inc
sub
ss
cmc
and
inc
and
div
sub
jle
psraw
jmp
mov
sbb
mov
mov
pop
add
xchg
js
cli
call
scas
in
jbe
mov
xor
sub
out
out
(bad)
jl
add
fstp
enter
xor
mov
or
mov
adc
in
cdq
scas
stos
mov
pop
iret
enter
mov
mov
add
mov
jne
lahf
aas
test
stos
adc
shr
xchg
push
ret
add
mov
test
xchg
lds
mov
dec
jmp
aam
sbb
push
jbe
jg
fidiv
lock
and
or
aaa
push
inc
aam
sbb
hlt
movs
cmps
sbb
cs
or
adc
or
dec
xlat
cdq
sbb
push
jecxz
sbb
stos
fadd
jp
adc
push
in
xchg
sbb
mov
mov
mov
push
nop
mov
jbe
ffreep
add
dec
arpl
cmp
fs
mov
leave
xchg
or
ret
sbb
shl
int3
push
cdq
mov
jne
mov
mov
clc
xchg
scas
push
or
nop
mov
imul
dec
cmc
jg
aaa
cmp
inc
inc
pop
dec
ret
adc
shl
push
jo
add
out
call
popf
or
enter
push
push
in
or
hlt
ror
lods
clc
mov
jbe
jl
jbe
je
add
arpl
mov
mov
xor
cmp
or
adc
xchg
in
adc
test
pop
inc
and
shr
pusha
in
call
pop
out
push
push
leave
pop
cmp
jge
test
xchg
icebp
gs
jmp
and
sbb
mov
pop
fdivp
fwait
push
fst
call
in
jge
pop
jne
pop
sub
imul
xor
push
retf
in
(bad)
sub
sbb
pop
addr16
cmp
inc
xchg
adc
sbb
push
movs
dec
push
ja
mov
cmp
sbb
add
loop
push
pushw
pop
xchg
stos
loop
test
std
fldl2t
push
jge
cmp
push
cmp
movs
add
call
stos
add
rcr
pop
xchg
mov
sub
les
pushf
leave
cwde
mov
pop
jge
pop
fdiv
(bad)
aas
push
neg
push
sti
xor
sbb
mov
or
dec
lds
xlat
xchg
push
retf
hlt
xchg
ret
jae
(bad)
fnstsw
mov
inc
push
ret
or
jg
icebp
mov
dec
cmp
mov
xchg
jno
and
mov
lds
mov
mov
adc
cmp
mov
es
std
fwait
loop
mov
mov
fidivr
test
jl
push
daa
fwait
js
aam
loope
call
repz
pop
scas
retf
jle
push
mov
sbb
leave
pop
and
and
and
aad
outs
out
icebp
push
inc
push
jno
jle
push
into
outs
cwde
retf
scas
jl
ins
arpl
mov
out
movs
aas
stc
inc
xchg
(bad)
xchg
pop
cdq
jbe
test
pop
sub
jg
fcomp
sub
fdivr
mov
mov
push
aam
mov
test
mov
(bad)
shr
cmp
out
movs
xchg
ds
fcmovu
mov
ret
pop
mov
ds
ss
adc
add
aad
pop
imul
test
or
pop
mov
pop
int3
pop
std
mov
mov
movs
hlt
push
sbb
(bad)
imul
mov
and
pop
adc
cmp
push
mov
pop
stc
inc
sub
dec
adc
in
stc
inc
les
out
jecxz
in
mov
jg
(bad)
xacquire
imul
push
add
jl
and
mov
cmps
and
retf
and
test
inc
pop
fs
push
cmp
adc
add
cld
dec
push
mov
jmp
jne
cwde
popa
sti
xchg
push
mov
out
aad
(bad)
cmp
mov
sub
mov
dec
fidivr
fcomp
rcr
jb
and
push
adc
sbb
inc
ror
test
adc
sbb
pop
retf
jo
cmp
dec
ins
neg
or
shl
movs
fcmovne
sub
aad
xchg
mov
nop
sub
dec
dec
jne
add
lods
jmp
rol
call
lods
or
mov
or
and
sbb
ins
std
fisub
xchg
push
arpl
xor
or
dec
inc
out
or
out
sbb
lds
xchg
sbb
data16
mov
mov
neg
dec
pop
pop
mov
and
push
dec
popf
pop
rcr
jp
repnz
pop
sbb
cmp
mov
sti
mov
out
retf
push
cmp
jp
test
test
xchg
sub
fisttp
repz
adc
jg
add
cmp
jb
jp
mov
xchg
mov
test
pop
pop
mul
sahf
adc
xor
sbb
or
fist
lock
out
pusha
cmp
mov
or
jmp
loop
loopne
(bad)
mov
or
cmp
dec
loope
ja
xchg
movd
movups
xor
add
push
cwde
div
pop
pop
jbe
sar
mov
call
ds
daa
std
hlt
pusha
(bad)
and
loop
cmps
xchg
fcomp
cli
dec
in
lea
and
dec
mov
pop
push
dec
xor
sub
les
repnz
mov
sub
push
adc
xchg
push
(bad)
pop
addr16
ficomp
ins
mov
addr16
sub
(bad)
in
and
ret
retf
mov
jge
arpl
ret
pop
(bad)
push
mov
es
int3
sets
cmp
and
leave
fstp
xor
mov
icebp
jge
enter
sub
popf
and
jp
pop
dec
push
sub
cmp
jb
iret
adc
cmps
add
push
jb
mov
mov
sahf
xlat
adc
lahf
mov
xor
sbb
daa
imul
(bad)
cwde
outs
xchg
push
clc
mov
enter
sbb
enter
int
sub
xchg
jmp
dec
pop
test
call
push
pop
retf
daa
xlat
mul
imul
dec
cmp
and
out
cmp
outs
push
out
lock
sub
push
cmp
sub
ret
mov
sbb
xchg
imul
jge
fs
fidivr
ds
imul
mov
mov
push
mov
in
out
xchg
xchg
ror
test
cld
sub
cmps
(bad)
sar
sbb
aaa
jmp
lock
ficom
lahf
retf
fldenv
pop
sti
(bad)
or
sti
sub
cwde
xlat
inc
sub
jg
jns
mov
sbb
cmp
jae
mov
cli
cmp
mul
es
lock
lahf
xor
daa
add
jnp
sub
inc
lods
out
push
fs
mov
fisttp
mov
mov
ja
sbb
out
pop
inc
movs
xchg
jb
pop
test
ins
mov
stos
adc
dec
outs
add
mov
or
aad
mov
dec
int
scas
scas
(bad)
cli
shl
pop
pop
xchg
add
mul
push
mov
add
and
xor
je
(bad)
in
cwde
cmp
out
inc
stos
or
inc
scas
mov
div
jnp
push
xchg
add
cmp
neg
std
push
jb
push
lea
mov
jbe
call
pop
inc
shl
xor
adc
js
mov
fst
xor
pop
dec
cmp
mov
xor
mul
rol
jge
dec
mov
icebp
ins
fistp
push
xlat
adc
lock
loope
xchg
dec
sub
dec
mov
cmp
xor
cmp
sbb
test
in
inc
out
push
mov
xor
sub
dec
cmp
mov
das
in
mov
push
jle
lods
(bad)
xchg
popf
xchg
test
ret
pop
sti
ja
mov
or
pop
mov
fst
sub
adc
cmps
movs
call
fnstcw
mov
das
dec
sti
repnz
retf
cmps
sahf
inc
scas
fild
popa
dec
mov
xor
das
test
mov
pusha
mov
ficomp
cmc
push
jae
fxch
fistp
mov
pop
jbe
(bad)
out
dec
push
add
add
cmp
cmp
pop
and
xchg
arpl
cmp
rcl
sub
je
jge
int
cmps
jns
xchg
or
fstp
mov
test
xchg
clc
into
div
(bad)
(bad)
pslld
mov
add
dec
in
jno
pop
cmp
jmp
pop
add
pop
aaa
lods
xor
loop
(bad)
es
sbb
and
enter
jmp
inc
rcl
mov
(bad)
aas
adc
push
shr
retf
and
outs
bnd
test
jnp
jno
sbb
movntq
ds
push
scas
jmp
jmp
in
jl
out
inc
out
fs
test
ret
jmp
mov
and
dec
(bad)
mov
sub
xor
sub
in
(bad)
push
pop
push
mov
push
add
add
enter
inc
mov
mov
clc
aas
aad
dec
ins
mov
out
mov
jp
aas
dec
outs
ficom
aam
mov
iret
mov
cmp
int
jo
sbb
sti
push
mov
mov
bound
jb
inc
outs
test
pushf
(bad)
ds
add
sbb
fucomp
jne
popf
adc
ret
pop
lods
test
adc
xchg
push
fnstenv
rol
aaa
pop
pop
adc
stos
and
xchg
add
xor
js
fwait
loopne
arpl
cld
rol
jp
cmp
adc
and
sub
mov
push
scas
adc
cmp
cmp
sub
xlat
push
je
inc
xchg
iret
fld
push
or
and
mov
call
lahf
pop
call
dec
push
mov
test
fsubr
add
in
dec
mov
sbb
sbb
rcl
sub
dec
cmps
jo
mov
imul
pop
std
inc
test
mov
and
(bad)
out
push
ss
xor
jmp
(bad)
sbb
ret
iret
cld
dec
(bad)
mov
mov
xor
xor
sub
sbb
jp
and
xchg
das
cmp
inc
inc
cwde
popf
pop
fidivr
shl
adc
lods
jne
pop
lods
mov
and
pushf
cli
ror
push
mov
(bad)
jae
ret
dec
outs
(bad)
xchg
mov
cmp
nop
idiv
int
fucom
adc
cmps
call
test
jge
jp
cli
push
mov
push
stos
mov
xchg
xlat
sbb
jle
clc
(bad)
dec
cmps
icebp
pop
add
outs
aam
or
(bad)
adc
pop
gs
enter
jecxz
jge
push
push
dec
sbb
mov
test
repnz
inc
xor
cld
fidivr
mov
int3
es
pop
mov
lea
xchg
das
cmp
pop
jmp
mov
dec
mov
xor
push
das
aas
mov
cmp
or
dec
pop
cmp
ret
pop
pop
outs
push
scas
dec
xchg
cmc
pop
sub
sub
aam
pop
xchg
adc
push
test
loopne
int3
fst
and
xchg
clc
hlt
dec
les
sti
fldenv
mov
leave
adc
inc
mov
xchg
sbb
pusha
stc
mov
mov
ret
repz
fisttp
fcom
retf
sbb
inc
int3
pop
or
sbb
xchg
in
idiv
lods
in
arpl
xchg
jp
inc
pop
push
(bad)
cld
cmp
imul
fcmovbe
mov
int
push
add
xchg
pop
daa
jo
cmp
dec
int
mov
aad
js
pop
lods
ins
sar
out
hlt
js
in
not
mov
mov
int
dec
mov
push
or
fdivp
js
pushf
push
dec
adc
fwait
mov
adc
cmp
and
(bad)
scas
(bad)
aaa
loope
cs
sbb
sub
dec
movs
mov
inc
pop
bound
arpl
sub
in
dec
jne
sub
(bad)
push
bound
cmps
sbb
xchg
(bad)
dec
push
mov
sar
(bad)
les
mov
cwde
cdq
add
adc
inc
xor
and
inc
cmc
dec
mov
aaa
adc
sahf
mov
or
imul
xchg
add
mov
idiv
inc
pop
cmps
inc
and
ss
fwait
mov
cmc
daa
loopne
sub
xor
retf
sahf
pusha
outs
pop
sub
cwde
das
cmp
mov
inc
mov
push
mov
push
jns
das
or
cld
popf
pop
outs
js
and
pop
je
xor
lods
pushf
add
and
or
dec
(bad)
mov
imul
push
jle
daa
sbb
or
xchg
xchg
mov
dec
mov
dec
ins
and
fsubp
cwde
int
inc
sub
addr16
sub
mov
enter
dec
mov
add
dec
test
aam
cmc
mov
xor
loopne
cmps
stos
sub
ss
pop
mov
or
test
pop
or
stc
neg
not
in
push
ins
ja
pop
cmps
pop
addr16
call
sub
jge
(bad)
loopne
inc
rol
pop
imul
xor
js
pop
mov
ss
fld
ficomp
out
and
sbb
adc
push
es
mov
sti
xchg
jae
adc
jb
jo
adc
xchg
mov
lds
test
cbw
mov
call
jmp
das
inc
retf
lea
lds
movs
xor
ins
dec
xor
out
push
xor
add
(bad)
lods
pop
leave
cmps
jge
xchg
mov
sub
add
rcr
icebp
add
inc
xchg
dec
mov
fiadd
jle
adc
call
push
out
push
cmp
sbb
ret
in
fimul
sbb
fwait
outs
inc
mov
test
dec
jb
cmp
lods
pushf
dec
mov
or
push
std
cmps
mov
xchg
xchg
ins
fld
jne
ja
lock
sbb
js
sbb
push
and
xor
popa
(bad)
push
(bad)
movs
es
ins
mov
xor
fsub
push
(bad)
(bad)
out
out
pushw
jae
rcl
xor
scas
jns
xchg
adc
mov
sbb
sahf
xor
cli
inc
daa
std
jg
pop
xor
aaa
add
iret
dec
adc
les
sub
pop
sub
loop
dec
push
push
(bad)
push
popf
(bad)
repz
xchg
rol
rcr
mov
loope
retf
div
addr16
les
cmp
fisubr
jo
cmps
sbb
mov
pop
fwait
cmp
mov
pop
into
or
cmps
xchg
test
pop
push
das
nop
ins
sbb
test
mov
xor
cmp
and
push
ds
jp
cmc
ret
sbb
push
and
adc
cmc
lods
aam
mov
dec
sub
repnz
cmp
cmp
jbe
lahf
inc
cmp
inc
ret
int
adc
out
mov
fild
pop
xchg
push
test
movs
jbe
int3
scas
(bad)
xchg
jne
retf
sbb
jle
in
lahf
dec
cwde
movs
jne
inc
in
adc
mov
inc
scas
push
and
jecxz
jp
jecxz
and
std
push
pusha
test
lods
sbb
jns
xor
add
into
or
mov
push
ins
pop
inc
lock
sbb
imul
dec
pop
test
sar
xchg
sar
or
dec
jnp
pop
or
call
ret
jl
sbb
adc
inc
nop
add
xchg
jne
push
dec
push
rol
and
push
test
movs
popa
fisttp
and
adc
jmp
out
sub
lods
jl
xchg
mov
mul
aas
ret
out
sbb
add
movs
fcom
test
fcmovbe
mov
test
jnp
cmp
sub
mov
cmc
sar
mov
pop
mov
clc
pop
add
dec
and
mov
xchg
(bad)
ss
mov
cmp
jecxz
into
xchg
push
jb
cmp
popa
in
pop
fwait
test
out
push
pop
(bad)
cld
mov
stos
jb
add
jmp
pop
or
inc
out
gs
xor
xchg
jb
fiadd
adc
pop
outs
iret
mov
loopne
in
inc
adc
push
ret
inc
enter
in
gs
scas
frstor
cmp
test
out
int
cmp
xor
leave
jl
xor
mov
(bad)
lahf
jl
loope
push
xor
shl
push
std
mov
and
in
int
mov
imul
cmc
jmp
movs
shl
retf
jae
cli
xchg
fld
mov
push
mov
xchg
sbb
push
fnstsw
or
cwde
stc
outs
fist
inc
push
mov
mov
or
pop
cmps
adc
mov
jecxz
add
adc
inc
inc
int
sub
push
mov
add
mul
and
movs
pop
int
fucomip
ds
pop
(bad)
jae
fstp
call
cdq
jno
sahf
rcr
and
push
inc
stos
or
jle
jns
loope
in
fisub
neg
fisttp
mov
push
cld
ja
rcr
bound
ja
retf
jae
je
lods
int
shr
mov
pop
fwait
dec
mov
int3
dec
sub
adc
or
je
pop
jecxz
ret
xor
mov
dec
daa
push
sahf
sar
adc
jl
(bad)
hlt
in
mov
out
outs
mov
or
fs
data16
and
push
sahf
in
and
out
rcr
aad
mov
jmp
dec
push
dec
fnstcw
cmps
hlt
out
inc
push
ror
enter
fsubr
mov
jmp
lds
lods
(bad)
push
mov
sbb
imul
movs
push
cmp
cld
xchg
jbe
jne
imul
rcr
cmps
inc
mov
cs
xchg
inc
adc
jbe
xor
imul
xor
pop
mov
xchg
or
jp
mov
mov
test
cmps
popa
das
and
mov
int3
in
push
test
sbb
add
inc
jg
inc
aam
adc
sti
jmp
and
fidivr
add
pop
mov
xor
test
push
pop
push
nop
icebp
mov
rcr
inc
mov
rcl
aad
in
dec
jb
leave
dec
jbe
xchg
push
loop
ret
cld
mov
movs
pop
jns
xchg
out
jno
pop
cdq
std
dec
jns
je
adc
inc
pop
addr16
sub
push
movs
sbb
xchg
inc
pop
out
adc
push
add
mov
fcmovbe
in
cmp
iret
mov
(bad)
jmp
mov
dec
test
fist
retf
adc
sbb
loopne
mov
fist
sub
fidivr
rol
push
adc
dec
push
shl
mov
stos
xchg
cld
dec
dec
pop
adc
gs
mov
sub
ins
pop
out
mov
sbb
std
fcmovbe
push
call
popa
fdiv
and
in
cld
adc
cli
pushf
inc
add
das
test
dec
add
xchg
mov
shl
in
mov
(bad)
cmps
int
test
popa
call
adc
inc
iret
add
les
push
push
dec
dec
inc
rol
cmp
into
xor
inc
cmp
and
cmp
mov
mov
shr
ja
cmp
jp
movs
addr16
mov
sbb
mov
pop
loopne
(bad)
sti
repz
mov
cwde
fistp
sbb
in
shr
pop
and
fdiv
(bad)
pop
mov
dec
mov
pusha
int
push
nop
fwait
(bad)
rol
ds
jno
movs
push
sbb
push
jge
jns
sub
push
test
push
pop
jge
cdq
int
and
jmp
cmps
inc
ins
loopne
xlat
dec
movs
cli
clc
mov
sbb
sbb
sbb
mov
cmp
inc
scas
cmp
addr16
inc
sub
mov
mov
ror
inc
cld
mov
mov
popa
add
loope
xchg
movs
rdtsc
sti
or
imul
jecxz
inc
mov
inc
fxch
mov
in
dec
jo
pop
jo
push
(bad)
push
int3
arpl
sbb
cwde
sub
xor
sahf
push
mov
add
inc
cwde
jne
call
mov
pop
or
mov
jb
mov
enter
mov
or
push
mov
xor
fs
mov
jns
call
leave
test
dec
pop
test
fcom
sbb
jno
pmulhuw
sub
jno
pop
jmp
mov
jno
mov
stc
jecxz
mov
cwde
adc
inc
add
sub
ja
add
dec
jmp
push
lea
jo
mov
mov
shl
in
mov
rcl
int3
pop
test
cmp
jae
add
shl
test
retf
cs
xchg
xchg
push
sbb
sub
xchg
mov
arpl
dec
adc
int3
sbb
add
aas
lahf
test
fnstcw
jnp
loope
cld
pop
mov
(bad)
lods
inc
jno
xchg
add
or
fild
dec
push
push
cmp
jns
neg
sbb
fstp
ror
push
ins
xchg
push
mov
ret
and
in
(bad)
mov
fcomi
sub
retf
add
sbb
inc
pop
cs
cdq
mov
jno
or
mov
inc
call
stos
ret
int3
ss
cwde
retf
lock
rol
push
and
or
jnp
retf
test
xor
pushf
and
repz
xor
mov
lods
cmp
adc
xchg
jnp
or
fcomp
iret
dec
les
loopne
test
mov
xor
push
jge
cs
mov
sub
inc
push
gs
iret
sbb
sar
xchg
movs
mov
dec
out
fs
lea
mul
xor
jmp
mov
or
outs
js
jnp
adc
mov
pop
jb
add
cmp
push
pop
bound
sbb
test
pop
xchg
jae
lahf
(bad)
sbb
jg
mov
mov
pop
out
mov
xchg
or
cli
jno
mov
mov
push
add
pop
sbb
inc
xchg
fcmove
pop
stos
mov
inc
mov
in
test
adc
push
fidivr
stos
cs
adc
pop
jle
mov
out
imul
bound
imul
movq
stos
cmp
pop
mov
lods
mov
or
sub
aas
stos
cmp
test
jnp
inc
test
popw
repnz
lods
sub
out
test
in
sub
mov
xchg
ss
and
pop
dec
sub
addr16
ret
mov
push
cmps
mov
mov
push
push
mov
dec
dec
dec
and
sbb
sbb
pop
cmps
int3
sbb
mov
fcomp
scas
mov
fs
popa
in
ret
js
jge
ret
shl
adc
retf
movs
mov
cmp
inc
mov
xor
in
pop
adc
jge
sub
sti
xchg
jns
xor
push
outs
mov
ss
lea
mov
mov
cmps
mov
cmp
jmp
pop
fld
pop
pop
lods
inc
pusha
push
push
adc
mov
clc
(bad)
fnstsw
ins
push
dec
xor
sub
pop
cmp
inc
pop
add
leave
stc
or
pop
pop
lods
pop
shl
pushf
mov
nop
fs
frstor
into
or
and
xlat
jl
push
test
sbb
add
inc
pop
in
aad
fist
jge
mov
int3
shl
xchg
xor
dec
daa
rol
inc
leave
repz
aad
adc
dec
dec
sub
jb
dec
(bad)
sbb
mov
in
xchg
pop
scas
aaa
dec
fadd
fwait
inc
imul
sbb
push
out
loope
push
xor
outs
int3
adc
fisub
mov
retf
rol
call
pop
xor
stos
mov
adc
mov
mov
les
mov
pop
mov
cmp
sub
adc
and
jle
fiadd
inc
and
fst
ror
shl
movs
sub
scas
xor
push
jb
add
fs
pop
ss
jnp
lahf
in
(bad)
rcl
fist
mov
aas
mov
pop
test
movs
xlat
inc
aad
std
dec
out
mov
lock
dec
sbb
movs
shl
pop
sub
mov
and
pop
jge
lods
(bad)
out
ins
ret
xchg
sub
repnz
pop
push
popa
fs
xlat
mov
push
ins
inc
loope
and
fwait
aaa
push
call
xor
shr
jl
cld
sar
es
inc
mov
adc
dec
imul
mov
xchg
jmp
adc
mov
mov
xchg
adc
jnp
rcl
inc
loopne
pushf
cmps
je
aad
or
ret
jecxz
mov
dec
push
repz
adc
inc
push
push
int
outs
iret
and
cmc
sbb
and
cmps
scas
cmp
xchg
fld
arpl
xchg
inc
or
cmp
ins
jmp
scas
jmp
ror
jle
xchg
out
pushf
neg
jecxz
ja
call
call
in
mov
out
jg
hlt
push
pop
inc
das
movs
jmp
js
cmp
push
mov
mov
dec
mov
mov
outs
ror
jne
imul
cli
jo
or
adc
dec
jp
out
dec
xor
add
cmp
mov
ins
xchg
cmps
out
fcom
paddsw
repnz
push
xchg
jo
xor
aaa
imul
pop
popf
pop
popf
add
mov
adc
jns
in
and
aas
rcl
shl
aas
rcl
lock
inc
mov
ja
call
(bad)
rcr
mov
mov
int
push
pop
loope
or
mov
bound
xor
ret
je
push
xchg
out
pop
das
inc
inc
mov
dec
push
pusha
call
mov
sbb
mov
es
fadd
or
jb
add
push
inc
and
scas
dec
mov
push
js
cmp
dec
push
jns
(bad)
push
pop
push
inc
in
js
and
cmp
xchg
pop
mov
bswap
int
or
jne
jo
into
enter
cmp
imul
popf
call
outs
cwde
jmp
pop
pop
repnz
ins
outs
popa
adc
out
ror
jo
bound
sub
cwde
jecxz
push
dec
fwait
lods
call
test
mov
sub
mov
inc
out
imul
inc
mov
xchg
(bad)
push
add
jno
or
(bad)
out
cmp
ins
loope
xor
and
cs
dec
and
adc
pop
mov
xor
push
xor
inc
and
adc
iret
push
jno
cmp
push
and
cli
in
and
bswap
in
int3
test
jmp
popa
xor
mov
mov
or
jle
xor
outs
call
pop
push
add
inc
mov
cmp
and
data16
push
push
dec
sub
addr16
and
out
mov
adc
mov
xchg
cdq
add
pop
popa
xor
xchg
pop
stos
cmp
lods
imul
in
push
add
cmp
or
nop
push
in
adc
cmp
scas
mov
test
gs
cs
push
xchg
or
xchg
sar
daa
into
outs
les
and
sub
ror
popa
in
adc
xchg
test
movs
inc
test
mov
push
out
add
jle
push
(bad)
enter
nop
sbb
adc
cmps
xchg
ret
adc
adc
fcom
pop
movs
pop
sub
jle
scas
cmp
add
test
pop
pop
mov
push
jmp
imul
scas
test
or
inc
(bad)
jg
sbb
xor
loope
mov
add
fstp
xchg
test
pop
loopne
fmul
bound
fst
shl
push
xor
add
jge
cmp
xor
out
mov
jno
xchg
push
adc
and
retf
adc
jb
or
mov
pushf
(bad)
loope
aad
daa
shl
sahf
movs
jecxz
loope
not
arpl
in
push
jno
movs
icebp
lock
(bad)
int3
mov
push
call
in
shl
ins
mov
and
jecxz
push
sahf
sub
sub
xchg
not
push
and
cld
sub
fld
dec
sub
push
lock
mov
aam
loope
mov
lea
cmp
jl
pop
lods
leave
ja
add
push
mov
cmps
pop
into
repz
(bad)
repz
daa
sub
xchg
jmp
or
add
dec
out
jne
out
mov
push
lds
aam
scas
lock
mov
sub
test
mov
repnz
or
cli
mov
icebp
test
enter
lds
cmc
mov
cmp
mov
stos
mov
je
mov
jmp
cmps
pop
pop
ins
stc
mov
jmp
sbb
xchg
cmp
pop
or
sahf
inc
sbb
mov
xchg
in
add
mov
jle
repnz
leave
ror
sbb
dec
mov
push
cdq
sub
xchg
mov
stos
jg
imul
in
mov
aam
fistp
mov
mov
xchg
cmp
ret
dec
fcom
mov
(bad)
mov
call
mov
pop
add
push
xor
call
popf
js
mov
add
inc
ss
movs
mov
and
inc
cmps
and
shl
icebp
xchg
or
cdq
mov
lock
mov
pop
sbb
pop
dec
and
sbb
into
mov
imul
out
cmc
inc
cld
sbb
lock
fcmovne
outs
aad
or
out
scas
push
js
pop
popa
sbb
(bad)
pop
mov
adc
sti
xchg
jae
dec
mov
fcomp
es
adc
stos
mov
cmp
jne
pop
in
nop
fwait
addr16
in
cwde
mov
div
sbb
or
cli
add
push
dec
inc
xchg
add
(bad)
xchg
dec
cmps
inc
mov
xor
xchg
cmc
sub
xchg
das
inc
cmp
push
stos
in
sbb
cmp
loop
std
shr
leave
xor
cmp
xchg
push
cmp
in
mov
data16
popa
dec
in
ds
lock
inc
push
sbb
icebp
cmp
fmul
xor
dec
push
int3
jge
in
xor
popa
mov
retf
js
cmps
inc
arpl
popa
jns
dec
xor
call
mov
mov
nop
cmp
ret
std
jg
mov
pop
adc
shl
xor
ror
nop
and
je
mov
jne
lahf
pop
jns
mov
push
pop
push
outs
dec
push
xchg
ds
stos
ins
call
adc
rcl
xchg
jnp
fist
adc
loope
mov
jno
pop
and
push
jl
test
ins
pop
sbb
test
hlt
pushf
jle
popf
sub
xchg
lock
jae
add
pusha
loope
in
adc
out
push
mov
dec
std
dec
icebp
xchg
add
out
jecxz
cli
shl
rcr
inc
adc
fyl2xp1
push
nop
ret
add
sub
scas
sub
mov
pop
sbb
in
mov
mov
cwde
jle
sub
pop
bound
cmp
and
sub
cdq
xchg
movs
call
add
(bad)
js
cmp
les
dec
jp
jp
retf
dec
jno
shl
push
mov
xchg
cmp
mov
jae
and
add
push
or
ret
adc
inc
sub
push
dec
les
outs
leave
enter
push
pop
or
pop
fnstsw
test
outs
add
and
mov
push
mov
mov
mov
mov
or
rcr
and
fdecstp
out
fadd
mov
aas
int3
dec
enter
pop
pop
rcr
mov
(bad)
jp
loope
ficom
mov
or
int
jmp
mov
mov
stc
data16
mov
fucomi
in
add
fmul
popa
and
into
xchg
jle
jmp
xchg
outs
mov
xor
xchg
outs
adc
add
(bad)
das
dec
pop
fld
aaa
push
jnp
jb
dec
mov
sub
push
jecxz
mov
xchg
mov
jmp
int
or
(bad)
or
mov
and
pop
retf
and
cmp
(bad)
sub
push
lds
stc
inc
xchg
mov
xchg
mov
cmp
xchg
mov
xlat
sub
hlt
repz
cwde
leave
out
in
sub
cmc
lds
js
dec
mov
mov
mov
int
fidiv
dec
jne
mov
jg
mov
arpl
pop
aad
ins
xchg
pop
movs
call
dec
(bad)
in
sti
jmp
push
(bad)
shl
ins
xchg
jecxz
mov
mov
int3
stos
dec
shl
jo
sahf
add
loopne
rol
inc
mov
mov
cmp
jmp
adc
pop
(bad)
jg
ret
fsubr
outs
ror
and
cmp
out
fnstsw
shl
or
fild
add
push
and
repz
jne
dec
leave
xchg
push
inc
test
or
add
push
call
fsubr
xor
pop
mov
or
mov
or
xor
sbb
inc
xchg
mov
lahf
lea
xor
jmp
movs
push
mov
cs
out
test
scas
push
xchg
push
pop
sbb
adc
dec
out
cmp
lahf
test
stos
push
int3
or
add
sub
inc
sbb
fdiv
sub
daa
fsubr
nop
stos
push
mov
and
pushf
dec
popa
mov
add
jp
mov
push
mov
add
pop
fcmovnb
jecxz
es
cmps
inc
push
daa
ins
fwait
xor
rol
sub
repnz
sbb
mov
nop
pop
adc
cmp
mov
je
mov
inc
and
inc
imul
ror
sbb
or
adc
cmps
out
xor
push
into
hlt
pop
test
popf
rcl
fldenv
popf
cmp
sbb
sub
and
cld
xchg
cmp
inc
fcom
xchg
inc
adc
or
push
push
mov
fsub
xchg
lahf
pop
and
jle
cs
loope
test
xchg
push
dec
pop
cmp
test
outs
and
into
inc
inc
rcl
cmc
mov
pop
jl
mov
dec
push
xchg
or
sbb
jo
fucom
(bad)
mov
mov
inc
loope
inc
sub
test
addr16
daa
repnz
stc
push
(bad)
loop
shr
outs
sub
ss
out
and
xchg
fistp
dec
imul
out
aaa
aas
mov
dec
jno
popa
nop
stc
xchg
push
mov
cli
jns
cmps
fisubr
mov
sbb
cmps
and
sub
xor
xor
(bad)
nop
cdq
int3
push
(bad)
or
xlat
xor
adc
dec
xor
mov
push
or
jo
mov
shr
jp
sti
jae
push
jmp
push
ret
outs
in
push
aam
iret
mov
sbb
jo
adc
arpl
fucom
outs
(bad)
cdq
sti
imul
xor
sub
ficom
out
xchg
or
xchg
xchg
es
mov
cmp
adc
mov
jns
push
push
(bad)
out
jmp
add
or
lds
aas
pushf
xchg
ins
lea
xchg
ret
ss
addr16
sar
lahf
in
(bad)
idiv
cdq
mov
into
dec
fmul
pop
cs
xchg
inc
mov
xor
gs
js
cmp
pushf
out
jnp
push
and
hlt
push
repz
jmp
or
pop
lahf
mov
and
imul
and
dec
mov
adc
fs
sub
push
xor
adc
dec
js
sub
xchg
scas
out
inc
add
sub
sahf
sub
add
retf
push
mov
cli
add
(bad)
call
jbe
xchg
in
jl
out
stc
cmp
imul
loop
(bad)
mov
movs
dec
mov
jnp
inc
jnp
push
xchg
xor
push
scas
out
into
hlt
xor
jne
sbb
push
scas
and
inc
mov
je
xor
out
jb
sbb
int3
mov
sahf
pop
ret
cs
jae
icebp
fsub
outs
xchg
mov
mov
push
out
ret
cmp
shr
scas
stos
retf
dec
xor
jns
xor
out
dec
and
xchg
and
jecxz
hlt
ins
test
mov
je
retf
xchg
sbb
popf
mov
lock
push
cwde
cmc
push
mov
dec
cmp
push
sbb
shl
mov
xchg
cmp
lock
mov
mov
retfw
scas
mov
inc
jg
fs
push
jecxz
mov
dec
push
pop
loope
out
add
sbb
push
out
cs
push
mov
cld
movs
retf
pop
lahf
inc
repnz
jl
sti
cmp
mov
pop
mov
pop
and
pop
adc
jle
inc
sub
or
ja
enter
fnstcw
push
std
pop
sbb
les
lea
mov
mov
mov
cld
mov
(bad)
dec
out
cmp
lea
or
xor
lock
mov
out
clc
out
aad
out
or
pop
fcomp
mov
pop
test
movs
jae
sar
int3
jg
cmp
ud0
or
and
pop
int3
in
stos
or
shl
xchg
push
repz
bound
jae
sbb
lds
push
sbb
mov
sub
xchg
test
mov
push
loope
inc
retf
data16
mov
(bad)
clc
push
xchg
rol
xchg
out
adc
jle
push
push
cwde
push
and
push
mov
dec
icebp
inc
push
mov
and
add
push
adc
mov
in
into
jne
xor
sub
xor
test
cmp
cli
jno
dec
cwde
imul
add
test
ins
repz
or
sub
or
and
sbb
jle
sub
adc
cmp
pushf
jmp
add
fdivr
pop
push
jmp
adc
cli
ror
inc
mov
sar
sbb
jmp
or
sbb
(bad)
adc
push
cmp
sbb
aad
imul
push
mov
push
push
mov
or
int
mov
xchg
lods
cmp
out
xchg
bound
cmp
push
xor
jmp
pop
mov
cwde
jae
shr
bound
popa
inc
cld
aas
push
mov
jnp
jl
inc
sbb
je
sub
(bad)
popf
xlat
dec
xchg
adc
fdiv
cmp
mov
inc
pop
fist
int
dec
mov
pushf
repz
sbb
xor
jge
imul
gs
sub
and
sti
inc
lea
xchg
outs
mov
popf
rcl
mov
xchg
pop
aad
shl
jb
mov
xor
push
lock
sbb
rcl
and
inc
enter
adc
sub
push
lock
mov
je
adc
mov
cld
jne
ror
and
ja
pop
fwait
aas
mov
xchg
cdq
lock
xchg
movs
shl
or
rcl
cdq
xor
test
js
cwde
loop
shl
cmp
bound
mov
cdq
rcr
int
les
pop
jmp
jg
mov
xchg
cwde
sub
sbb
jmp
mov
or
sub
mov
mov
daa
mov
or
and
mov
mov
in
in
inc
(bad)
sub
mov
inc
in
mov
pop
cmovb
daa
mov
(bad)
mov
(bad)
cmp
clc
ins
mov
cmp
and
(bad)
cmps
out
test
or
xchg
retf
mov
ds
xchg
xchg
and
jmp
push
cmp
cld
cmps
shr
fs
jg
and
aad
out
push
mov
cmp
and
push
add
jo
push
je
jb
mov
or
inc
test
cld
inc
iret
in
test
mov
pop
idiv
sbb
fadd
mov
ds
push
sar
xchg
data16
sub
cmp
cmps
lock
mov
cmp
or
out
loope
movs
adc
nop
movs
push
xchg
iret
jno
das
xchg
aad
out
xor
jl
xchg
repnz
bnd
out
jmp
adc
pop
ds
add
stos
push
xchg
mov
ja
mov
mov
fwait
iret
popf
inc
int
dec
jge
xor
sbb
cmp
aas
in
int3
mov
mov
dec
(bad)
adc
leave
repnz
ds
dec
jmp
out
mov
scas
imul
push
push
ss
and
fnstsw
inc
add
jmp
mov
pop
sbb
dec
mov
cmp
jge
fs
pushf
add
adc
sbb
stc
test
sub
hlt
hlt
jmp
leave
imul
test
iret
test
call
cmp
mov
and
scas
cmp
test
xor
add
xlat
nop
int3
movs
push
popa
add
xchg
in
cld
push
add
push
fchs
retf
and
test
idiv
dec
(bad)
push
jl
sub
and
cmps
xor
fcmovnu
push
icebp
push
fs
lods
int3
dec
pop
retf
test
mov
pop
pop
shl
enter
add
ja
call
xor
xsaveopt
inc
pop
dec
popa
aaa
mov
adc
jl
adc
xor
pop
mov
xor
fs
push
push
mov
hlt
mov
pop
cli
icebp
cmp
cmp
jp
int
mov
or
lahf
xchg
mov
stos
aad
push
inc
ds
fst
push
adc
cmp
or
retf
add
and
test
or
mov
hlt
adc
stos
cmp
push
adc
cld
popf
sbb
jne
movs
bnd
push
cmp
bnd
add
push
fiadd
cmps
cld
cmp
adc
sub
and
mov
cmp
clc
jmp
mov
rcr
fstp
jb
aam
mov
test
or
jns
shl
mov
push
pop
pop
cwde
les
xor
xor
cmp
jne
loope
call
mov
cmp
cdq
je
sbb
cwde
push
xor
mov
addr16
adc
mov
lock
push
out
and
bound
mov
test
or
int
push
in
cmc
imul
in
(bad)
repz
sub
rcr
repz
fbstp
xor
or
inc
aad
idiv
je
sub
mov
ins
mov
div
retf
xchg
inc
stc
adc
pushf
cmp
sbb
add
iret
mov
push
daa
sub
or
rol
rol
gs
push
ds
ins
adc
pop
fldln2
or
inc
retf
lods
sar
out
pop
sub
(bad)
clc
and
movs
ss
adc
sar
pushf
inc
add
sbb
fistp
lods
jl
ret
jmp
jge
mov
test
or
fnstcw
inc
push
cmc
mov
lea
jb
jl
push
idiv
jno
mov
cmp
int
shr
ins
mov
or
inc
in
mov
div
push
pushf
add
cli
dec
push
out
adc
into
in
or
add
add
scas
add
rol
mov
sbb
inc
retf
mov
jecxz
mov
int
pop
push
cmp
cmps
int3
movs
sub
sar
je
rol
mov
mov
jle
call
xchg
dec
push
aaa
repnz
mov
scas
in
idiv
sub
(bad)
fdiv
pop
dec
pop
loop
fisubr
dec
jecxz
sub
pop
repz
xchg
push
popf
les
jne
and
retf
call
lds
push
neg
xchg
mov
add
mov
add
lahf
cmp
mov
gs
pop
imul
dec
and
jp
shl
mov
cmp
mov
mov
jo
adc
push
push
pop
sbb
jl
xchg
addr16
sub
repz
in
mov
sbb
inc
mov
jne
ja
cdq
lods
inc
sbb
lock
adc
pop
adc
(bad)
xchg
push
jle
mov
mov
mov
push
ja
test
inc
sbb
(bad)
stos
mov
xchg
pop
inc
(bad)
xchg
add
cmp
jne
sbb
pop
stc
jne
ret
or
ficom
out
sub
push
mov
jecxz
add
xchg
lock
imul
push
in
in
cmp
test
inc
jge
sub
inc
sub
inc
sbb
dec
out
push
hlt
pusha
(bad)
in
or
ins
js
ins
push
sub
inc
mov
movs
push
mov
mov
cmp
inc
repnz
jecxz
in
aad
or
jnp
mov
mov
jle
test
in
jecxz
stos
mov
lods
pop
or
call
or
mov
cmc
mov
sbb
cmp
out
sti
cmp
inc
retf
lea
fwait
push
scas
xlat
pusha
jmp
push
and
mov
xchg
imul
jno
adc
mov
cmps
popf
dec
clc
push
xor
ds
jp
jmp
loope
dec
push
in
nop
shl
pusha
fucomi
mov
push
and
push
popa
push
and
push
test
fdivr
scas
es
mov
ds
inc
push
adc
(bad)
icebp
ret
fcomp
mov
push
jb
push
jg
shr
push
mov
lahf
pusha
adc
imul
adc
push
or
dec
fisttp
clc
mov
mov
hlt
jmp
dec
jnp
add
test
imul
in
ins
inc
push
lock
push
adc
pop
jecxz
dec
add
leave
pop
push
scas
shr
pop
in
outs
mov
xor
ret
fsubr
frstor
jl
jns
fcom
xor
sbb
sub
pushf
aad
fst
pop
or
inc
(bad)
push
outs
and
xor
cmp
loope
loopne
fsub
sub
retf
cmp
shl
rcl
push
mov
cmp
(bad)
hlt
push
dec
push
ds
(bad)
push
(bad)
ds
std
push
addr16
push
icebp
rcr
movs
inc
rcr
cwde
popa
fistp
push
cmp
ss
pop
sub
(bad)
pop
cmp
xor
sti
inc
sahf
stos
imul
jecxz
push
inc
test
and
mov
xchg
ins
sub
fstp
pop
in
inc
(bad)
xchg
hlt
or
mov
add
shl
cwde
xchg
or
aam
push
mov
xchg
sbb
pop
dec
test
sti
push
fwait
add
lods
dec
movs
sbb
jmp
xor
mov
test
pop
in
lds
mov
lock
sbb
je
inc
retf
nop
enter
mov
loop
inc
add
fs
js
pop
adc
gs
and
hlt
cmp
jno
jmp
xchg
cs
fsubr
aas
cmove
push
cmp
and
test
data16
test
enter
aaa
ss
and
lds
lahf
stos
inc
pop
fs
push
nop
sub
mov
cmps
lahf
mov
test
(bad)
ins
sub
xchg
sysret
sbb
xor
cmp
es
aas
mov
or
and
xor
add
ret
cli
rcr
inc
sbb
mov
sub
cmp
jg
fimul
sub
mov
push
cmps
jnp
xchg
arpl
fbld
push
mov
jmp
in
sbb
push
dec
push
icebp
aaa
jmp
fisub
inc
std
and
mov
xor
(bad)
mov
es
dec
cli
xor
or
rol
xor
or
adc
retf
pcmpeqw
outs
sbb
(bad)
push
in
pop
jnp
xchg
mov
jb
or
cmp
dec
xchg
loop
xchg
sbb
fs
cmp
iret
clc
(bad)
lock
cwde
xor
cmps
and
stc
push
and
xchg
push
inc
cmp
xchg
sbb
imul
js
ss
rcr
test
push
ss
shl
int
cld
mov
mov
xchg
mov
pop
sub
sbb
xor
shr
scas
mov
lods
or
loopne
push
xor
or
ins
sbb
fnsave
sub
jge
data16
jae
mov
cmp
test
and
sahf
inc
and
xor
mov
fnstsw
ds
dec
adc
add
dec
cmp
cs
(bad)
jle
in
cmp
mov
neg
in
leave
icebp
shr
and
aaa
cmp
adc
outs
fwait
stos
fcomp
or
push
inc
sub
call
add
xchg
xor
mov
cmc
loop
mov
shl
stos
or
mov
daa
call
adc
ror
xor
pushf
cmp
sbb
(bad)
add
and
not
shr
sbb
mov
mov
and
and
movs
(bad)
xchg
fcmovb
adc
call
fsubr
and
cmps
xchg
lock
movs
xor
add
or
xor
std
popf
jmp
mov
lds
dec
bound
mov
inc
adc
mov
div
cmp
mov
mov
stos
enter
jle
jnp
push
cwde
bound
mov
cwde
mov
lds
sub
pop
inc
push
or
and
movs
jbe
add
pop
fs
jecxz
loop
cli
push
cmp
cmp
push
dec
(bad)
ror
xor
test
sub
call
xlat
add
imul
mov
ss
xchg
mov
mov
bound
push
inc
jmp
stos
in
pop
dec
nop
mov
pushf
clc
dec
inc
adc
jg
in
mov
cmp
mov
pop
or
int3
ret
jns
test
hlt
rol
popf
ja
popa
jno
adc
add
jo
or
cmp
mov
test
jns
dec
sar
sub
cmc
push
loopne
outs
and
das
xor
cli
sbb
ins
rol
push
popf
or
cmp
fld
push
sbb
(bad)
ja
ret
sub
cs
aas
add
jle
data16
fucomi
cmp
adc
add
shl
inc
sbb
enter
adc
mov
(bad)
out
je
out
sub
cli
lahf
movs
and
mov
pusha
xor
jno
push
xor
movs
xchg
mov
pusha
cld
dec
and
xchg
jmp
xchg
sub
pop
sub
leave
jg
mov
ja
clc
dec
pop
test
xchg
xchg
jl
add
dec
sub
dec
push
popf
jbe
outs
jns
outs
fst
jmp
cmp
call
pop
sbb
ret
pop
pop
int3
dec
sbb
(bad)
ss
pop
sub
pop
cmps
mov
movs
mov
pop
dec
imul
pop
aas
push
mov
add
push
sbb
xchg
sub
mov
inc
sbb
mov
xchg
jge
stc
dec
je
adc
in
xlat
sub
xchg
jne
pop
loope
adc
adc
ds
mov
inc
cmp
mov
aas
mov
push
pop
mov
mul
inc
xchg
mov
out
out
stos
jno
mov
nop
sbb
push
pop
and
mov
push
arpl
and
push
out
push
inc
adc
pop
sub
aaa
push
xchg
cmp
push
xor
or
dec
and
sbb
int3
ins
push
pop
mov
ror
jae
or
sbb
push
cs
into
xchg
push
jp
dec
out
lea
cmp
jmp
add
sub
loope
or
sbb
fwait
aam
xchg
or
sub
fidivr
jne
add
pop
imul
sbb
xchg
popf
push
jge
iret
cmp
out
mov
cmp
shl
in
jp
jne
scas
pop
pop
mov
xor
test
mov
jecxz
or
aam
dec
jg
sub
adc
push
xchg
sub
xor
add
pusha
cli
lea
dec
ror
sbb
jp
mov
adc
inc
adc
jp
mov
lds
jne
mov
stc
ins
pop
push
daa
mov
dec
dec
clc
inc
push
movs
xchg
aad
jns
mov
sub
pop
sub
cmps
xchg
adc
sub
mov
and
movs
fcomp
cmp
out
ror
les
outs
cmps
add
sub
jb
xor
shl
cli
not
popf
xchg
cmp
mov
in
add
(bad)
push
in
and
mov
fisubr
jl
xchg
mov
add
into
add
xchg
mov
std
pop
mov
adc
test
fcmovu
and
or
loope
inc
sbb
add
cmc
cmp
div
dec
shl
push
fcom
fcmovbe
loop
int3
ins
mov
mov
cs
sub
sub
lods
ins
out
cmps
lahf
ins
(bad)
adc
mov
jbe
fisub
repz
sub
nop
(bad)
loope
push
lods
dec
xor
aaa
mov
lds
jmp
mov
test
gs
add
jne
and
loopne
xchg
and
dec
and
mov
xor
dec
outs
out
mov
push
cmps
adc
jmp
jnp
pop
push
cld
icebp
xchg
adc
aas
jg
mov
in
adc
inc
add
in
and
xchg
push
inc
sbb
iret
pop
iret
cdq
ret
and
movs
stc
mov
mov
in
mov
cmp
and
shr
loopne
repz
packssdw
mov
loope
mov
fcmovbe
aad
xor
sub
sbb
mov
xor
dec
test
lds
pop
mov
pop
fs
out
push
rol
fmul
int
dec
imul
sbb
inc
dec
xor
xchg
out
dec
push
sub
(bad)
adc
stc
inc
sbb
in
pop
movs
into
rol
mov
call
xchg
xchg
ret
dec
leave
mov
and
push
sub
mov
jg
call
push
shl
jnp
mov
and
xchg
call
clc
mov
imul
call
sbb
out
add
call
retf
pop
stos
mov
cs
cmc
inc
jnp
cmp
sub
add
push
pop
repnz
repz
sbb
jle
push
add
pop
(bad)
or
sbb
movs
xchg
lds
mov
and
(bad)
sbb
shr
add
outs
and
cwde
inc
data16
(bad)
cmc
lods
push
lods
mov
neg
mov
xchg
jb
sbb
sub
mov
sub
(bad)
rcr
xlat
xor
in
sub
fisttp
dec
push
(bad)
shl
inc
jle
adc
fbld
dec
sub
cwde
push
gs
fmul
and
movs
mov
mov
mov
in
(bad)
rol
cmc
dec
push
fimul
clc
dec
bound
js
mov
inc
adc
push
mov
adc
sbb
jo
xor
ja
add
(bad)
push
cmp
popf
jmp
out
dec
test
(bad)
pusha
mov
fwait
(bad)
dec
mov
push
outs
fiadd
inc
sub
push
dec
xor
out
mov
jb
(bad)
arpl
pop
(bad)
repnz
iret
mov
dec
cmp
stc
xchg
enter
mov
or
jnp
push
dec
inc
dec
movntps
ja
dec
mov
pop
adc
sub
mov
and
cdq
xchg
add
bound
push
xchg
aad
xchg
jnp
adc
adc
test
add
push
xlat
push
dec
outs
dec
test
stc
out
retf
arpl
jmp
neg
aam
sub
sbb
ss
sub
sub
ins
adc
sub
fwait
call
cmp
sbb
adc
add
fsubrp
test
clc
mov
mov
mov
mov
push
lahf
mov
out
mov
cmp
push
dec
fsubr
xchg
dec
jbe
dec
cmp
adc
(bad)
lahf
(bad)
inc
leave
xor
sub
inc
cmp
ror
xor
pop
sti
inc
xor
jg
lods
push
inc
pop
das
aam
fwait
loope
lods
add
xor
adc
cmp
dec
jnp
dec
nop
push
jmp
and
mov
les
mov
xchg
sub
enter
mov
outs
sbb
push
adc
ja
out
jle
int
pop
enter
xchg
and
push
jb
xor
mul
mov
xchg
add
sub
popf
ins
mov
stos
hlt
dec
dec
or
mov
retf
adc
push
pop
fadd
mov
fs
sub
cmp
xlat
mov
int
sar
aam
mov
rol
mov
(bad)
pop
lds
pop
loope
push
cld
push
pop
jmp
shr
test
jg
mov
add
or
mov
fwait
sbb
push
and
ss
or
in
gs
cwde
or
std
(bad)
shl
xchg
into
les
jnp
rcr
xchg
and
stos
add
xlat
inc
or
das
inc
jns
ja
add
in
fnstcw
pop
in
push
shr
movs
enter
add
sub
mov
fs
ret
(bad)
xor
mov
mov
add
into
jb
cmc
jge
xchg
dec
lea
es
add
jle
fnstenv
sahf
lods
call
and
inc
and
add
fcomp
mov
mov
pop
dec
add
or
xchg
inc
daa
sti
int
jge
ss
jle
loop
jl
imul
pop
out
mov
test
les
imul
mov
mul
push
out
aas
xor
push
cmovo
sbb
mov
es
fbstp
mov
repz
inc
jne
ss
pusha
lds
icebp
pop
sbb
inc
adc
out
es
shl
fstp
sbb
push
mov
popa
jp
and
mov
mov
push
push
xor
js
jb
retf
nop
cld
mov
jmp
jl
(bad)
frstor
pop
adc
jge
hlt
movs
jge
test
inc
xchg
lahf
aaa
stc
bound
ins
jne
popf
dec
dec
sub
dec
out
imul
mov
push
stos
in
and
inc
popa
push
scas
mov
mov
mov
mov
sub
or
inc
lds
fisubr
mov
cdq
and
push
mov
xor
or
neg
jbe
pop
xchg
cld
sahf
rcl
xor
es
pop
mov
jne
sbb
push
adc
dec
in
xchg
(bad)
sub
mov
sbb
and
sar
bound
sub
out
sub
mov
and
shr
push
jne
cmps
and
ret
cmp
xchg
mov
outs
mov
test
fst
out
jmp
stc
sbb
sbb
mov
and
ja
jmp
out
test
or
mov
arpl
and
push
je
xor
cmp
call
xchg
sub
and
xchg
pop
or
(bad)
hlt
shl
ins
pop
mov
sub
dec
add
test
out
sbb
sub
addr16
ret
mov
push
xrelease
mov
adc
pop
mov
stos
stos
pushf
sub
retf
and
pop
dec
push
mov
fstp
lds
inc
(bad)
(bad)
xor
push
(bad)
sbb
ins
loope
adc
sub
mov
pop
call
cmp
(bad)
cmp
ret
aad
je
or
cmp
jae
retf
adc
sub
or
out
fxch
push
add
aaa
adc
cld
xchg
push
sbb
mov
dec
add
lock
and
cld
ds
mov
adc
js
ss
jbe
jmp
mov
lea
out
jecxz
cmp
sub
mov
or
xor
sbb
xor
xchg
(bad)
les
sbb
imul
dec
and
lahf
dec
xchg
push
stos
dec
test
jns
or
pop
fdiv
xchg
pushf
add
xchg
call
int
mov
(bad)
sti
push
xor
and
iret
mov
inc
push
call
xchg
and
push
pop
out
xchg
nop
push
pop
shl
sub
inc
inc
inc
call
arpl
pop
arpl
sbb
inc
push
gs
mov
pop
xchg
cld
sub
popf
push
jns
sbb
je
leave
inc
int
or
xchg
mov
out
jb
mov
loop
loop
int3
pop
adc
mov
and
cmc
retf
frstpm(287
push
jmp
sub
cs
shr
fst
in
and
inc
push
jnp
xor
xchg
and
ror
stc
out
dec
inc
idiv
or
subps
jmp
or
push
ins
(bad)
outs
or
and
xchg
push
ja
cmp
or
mul
frstor
jle
add
push
bound
inc
test
lods
(bad)
mov
jle
in
bound
fbstp
xchg
jae
inc
inc
out
xor
(bad)
jmp
mov
sbb
ret
dec
popf
fs
add
jge
leave
clc
test
repnz
sbb
(bad)
dec
jl
lds
imul
sbb
push
mov
cmp
adc
cmps
icebp
sbb
cmp
xor
dec
movs
push
mov
cwde
jecxz
aaa
mov
ja
mov
pop
jmp
and
inc
sub
dec
sub
and
inc
dec
sub
inc
jae
aad
push
xor
mov
xor
mov
dec
xor
pop
inc
jbe
ins
out
mov
sar
mov
(bad)
dec
enter
sti
je
jg
sbb
gs
xor
lock
iret
inc
and
mov
int3
data16
xchg
xchg
mov
jnp
dec
jne
xor
retf
es
mov
adc
adc
push
imul
pop
retf
mov
cmp
in
jnp
or
jbe
mov
or
call
xchg
test
xor
mov
shld
xor
sti
add
dec
inc
ror
shl
add
ret
dec
adc
dec
outs
test
aaa
movs
cmp
test
(bad)
xchg
in
pop
icebp
out
or
rol
sbb
and
xor
aam
mov
inc
push
int
les
enter
push
inc
imul
or
add
xchg
xor
xor
fsub
xor
mov
in
add
cmc
aas
mov
aas
ins
(bad)
pop
ds
mov
lods
pop
(bad)
sti
fcomp
aas
mov
inc
dec
xchg
mov
enter
iret
sahf
in
inc
stc
aad
push
lods
imul
sbb
adc
enter
mov
es
cmp
jge
jmp
mov
popa
hlt
or
lock
xchg
movs
fisubr
mov
and
test
add
stc
ret
jne
pop
or
lock
(bad)
jg
jns
add
and
fmul
inc
pop
mov
ds
cwde
sbb
movs
ja
movs
ja
cmp
scas
rcr
xchg
in
repz
arpl
dec
cwde
mov
test
fidiv
cld
cmps
mov
outs
mov
adc
loope
xchg
call
or
fild
jo
jns
add
inc
mov
imul
ficomp
and
cdq
xor
in
movs
jge
dec
pop
inc
push
(bad)
mov
rcl
cmp
push
adc
fimul
int
push
repnz
(bad)
fiadd
loop
iret
sub
std
sbb
cmp
cmp
in
inc
out
inc
dec
sub
imul
aad
in
pop
add
add
sub
xchg
outs
call
bnd
mov
lods
add
in
add
cld
popa
pop
popf
pop
or
daa
jmp
out
add
stos
mov
test
cmp
xor
xor
push
xlat
sub
(bad)
in
cmp
int3
pop
jae
imul
fld
sub
(bad)
ffree
leave
cmp
pop
fist
push
cmp
ins
and
jmp
(bad)
ins
or
pop
sub
push
inc
inc
pop
push
push
fisttp
ffreep
cmps
stc
push
js
add
dec
lea
mov
fs
das
sbb
ins
mov
repnz
popa
jnp
(bad)
shl
(bad)
xor
cwde
mov
sbb
stos
cmp
or
dec
sar
in
in
ds
lds
and
mov
aaa
ror
lods
(bad)
sbb
mov
mov
fild
fld
sti
fwait
pop
xor
fs
pop
jo
cmp
cmp
cmp
adc
add
pop
loope
fwait
mov
mov
test
retf
pop
popa
mov
aad
fidivr
in
out
lods
popf
dec
adc
pop
sbb
sbb
jg
inc
xor
mov
cmps
jg
adc
dec
aad
jns
clc
ss
jg
test
in
rol
pop
lods
mov
inc
es
mov
cmp
fnstenv
push
clc
xchg
adc
js
sbb
cld
lock
in
cmp
lea
cs
jae
outs
push
dec
lods
test
fmul
movs
lods
jbe
and
dec
sub
push
cli
and
mov
ins
jae
and
add
repnz
imul
lock
adc
mov
cmp
mov
test
adc
push
dec
imul
sub
lods
gs
lds
push
call
retf
test
or
or
fld
cmps
sub
in
ficom
int
pop
push
cmp
and
cmc
mov
stc
pop
(bad)
pop
addr16
movs
add
mov
jge
add
stc
xchg
shr
popf
fwait
not
dec
mov
xchg
add
or
xchg
mov
aad
and
mov
cmp
inc
sahf
pop
jg
in
fiadd
ret
lock
mov
or
pop
add
aad
sub
mov
or
rcr
mov
std
jno
inc
cwde
sbb
add
push
jge
add
aaa
imul
pop
xchg
mov
shl
int
push
dec
push
bound
xchg
mov
dec
add
repnz
jo
icebp
imul
xchg
and
in
push
mov
je
fcmovnu
jb
mov
mov
aad
push
call
cs
dec
scas
nop
add
adc
ins
jno
in
sbb
mov
mov
sbb
push
adc
push
push
push
test
in
xlat
fistp
test
rcl
es
mov
sbb
movs
int3
or
fldcw
loopne
or
stc
xchg
add
nop
sub
shl
rcr
push
mov
repz
call
jg
retf
int
jnp
xchg
xor
sbb
xchg
dec
icebp
push
xchg
jns
push
es
les
aaa
add
cld
test
inc
or
enter
add
aaa
imul
test
loop
ret
cmc
(bad)
adc
push
mov
mov
neg
repz
mov
jp
in
std
clc
test
jmp
test
or
add
dec
or
(bad)
stc
mov
fisttp
aaa
dec
fsub
adc
fdivr
stos
js
(bad)
push
mov
(bad)
(bad)
in
dec
xor
dec
dec
shl
ja
mov
and
pusha
sti
aas
cmp
stc
nop
pop
int3
and
int3
nop
retf
clc
stc
test
mov
dec
push
push
mov
push
dec
aad
in
fcom
stc
pop
(bad)
jp
pop
pop
cmp
mov
jb
in
cdq
cmc
push
cmp
movs
sub
cmp
je
adc
xor
dec
es
stos
pushf
sub
int3
fwait
add
gs
pop
add
xchg
cmps
hlt
enter
iret
ror
cmp
push
jmp
or
push
mov
push
cdq
add
std
out
push
sar
icebp
nop
dec
out
or
pop
fstp
and
xchg
out
call
mov
pushf
jb
jb
xchg
push
dec
add
sub
loopne
movs
lock
push
cmps
or
(bad)
mov
adc
adc
shl
jg
push
fbstp
aas
outs
lds
xor
sbb
mov
sub
inc
xor
test
retf
mov
cmps
out
mov
out
scas
and
dec
and
dec
lods
popf
jns
inc
inc
les
aam
pop
cld
daa
rcl
loop
pop
bound
ins
loop
cmps
jl
outs
push
ins
imul
outs
dec
jp
or
test
sub
gs
sbb
lahf
pop
mov
dec
int3
mov
aad
outs
xor
sti
sbb
push
jb
mov
xchg
pop
jns
dec
xchg
mul
je
or
add
cmp
jmp
mov
sar
and
out
popa
stc
jno
xlat
aad
les
xor
push
dec
sub
inc
and
mov
mov
repz
xchg
pop
mov
int3
movs
rdpmc
mov
das
jbe
iret
mov
pop
cld
sbb
dec
jge
jb
push
mov
scas
mov
add
sti
mov
and
stc
std
mov
pop
in
das
xchg
push
stos
pop
cmp
mov
or
or
in
movs
jl
sub
mov
pushf
or
add
jg
adc
mov
mov
mov
sub
mov
push
fisttp
cmc
outs
push
push
into
or
ss
add
push
jb
mov
out
inc
inc
add
inc
xor
movs
dec
movs
bnd
xchg
jb
movs
add
mov
or
shl
cld
fsubr
mov
ja
jns
and
gs
aas
mov
loop
inc
aam
or
mov
xchg
or
dec
mov
add
xchg
xchg
mov
add
movs
scas
mov
add
lods
push
pop
add
int3
push
add
cmp
fbld
outs
stos
xor
lea
pushf
int
and
nop
push
xchg
stc
adc
call
clc
adc
or
push
jle
in
mov
icebp
and
cld
mov
mov
rol
test
and
add
mov
popa
xor
cs
fiadd
and
mov
sub
or
push
mul
ret
xor
jbe
shr
and
and
add
out
or
shl
lock
jo
xchg
clc
push
je
adc
and
int
inc
cmps
push
cmc
loope
sti
call
xor
inc
mov
cmp
call
mov
xor
adc
stos
test
mov
test
jae
shl
sbb
inc
fs
scas
bound
repz
(bad)
into
inc
out
xchg
pusha
or
push
jns
mov
push
and
movs
arpl
lock
js
jmp
mov
dec
or
lods
xchg
outs
xchg
adc
mov
xor
add
cli
mov
pop
pop
xchg
inc
repz
mov
in
jecxz
cmp
pop
push
or
cmc
xlat
or
inc
aas
scas
movs
or
jle
dec
mov
daa
stos
xchg
lea
retf
pusha
inc
dec
je
iret
sti
nop
fwait
sbb
mov
in
dec
sti
dec
retf
loop
inc
pop
in
ss
ficom
lahf
xchg
inc
pop
out
jbe
xchg
fisub
pop
mov
sbb
add
add
iret
xor
cmp
cmp
xlat
idiv
sbb
ret
pop
sbb
and
mov
(bad)
ret
sub
jns
sbb
sbb
push
xor
and
adc
sar
jbe
or
repz
retf
sub
sbb
lock
push
xor
adc
popa
in
cmp
adc
call
and
push
shl
scas
and
mov
nop
(bad)
(bad)
mov
push
test
stc
push
(bad)
mov
sbb
mov
out
jnp
mov
sbb
mov
std
retf
sub
mov
or
retf
cwde
ret
arpl
sti
pop
popf
mov
aas
and
dec
(bad)
stos
pushf
cmps
mov
sbb
repz
xor
sub
scas
and
add
mov
addr16
sbb
mov
jno
jmp
sbb
popa
out
js
rcr
push
sbb
cmp
imul
mov
scas
das
jge
in
retf
call
pushf
sub
nop
push
pop
adc
les
stos
outs
sbb
mov
out
xor
lods
and
push
sbb
out
xor
or
add
inc
sahf
ficomp
cdq
xlat
imul
mov
adc
mov
sbb
rcl
jle
sbb
gs
add
outs
(bad)
stos
std
or
mov
pop
dec
(bad)
loopne
cmp
out
and
jns
cmps
dec
mov
pop
stc
adc
push
sbb
sbb
mov
test
pop
(bad)
jle
pusha
(bad)
(bad)
fcomi
mov
inc
imul
mov
xor
xchg
loop
cwde
out
pop
mov
xchg
pop
pop
ret
mov
loope
js
push
mov
(bad)
pop
push
nop
mov
xor
mov
mov
dec
push
pop
icebp
jmp
pop
jno
inc
xor
imul
in
and
jb
inc
cmp
mov
or
popf
push
inc
inc
ins
clc
mov
xchg
sbb
pusha
push
test
xchg
mov
sub
cmps
ret
mov
add
ret
sub
jb
cdq
jp
cli
nop
add
stos
mov
adc
xor
inc
dec
lahf
add
sub
int
sbb
repz
cmc
add
mov
dec
cmps
stos
pop
jecxz
call
inc
enter
push
mov
dec
rcr
mov
jbe
mov
arpl
scas
out
cwde
xchg
das
fnstsw
xchg
add
inc
fcom
test
mov
inc
dec
out
push
ret
jecxz
rcr
xchg
dec
xchg
out
sub
lods
(bad)
xor
in
push
jl
daa
cmp
retf
jo
sub
push
inc
sbb
inc
inc
daa
or
(bad)
jo
lods
clc
push
xchg
adc
mov
xor
inc
lea
out
test
gs
xor
jnp
push
out
stos
jg
mov
(bad)
adc
mov
mov
dec
adc
xchg
stc
pop
dec
in
test
adc
js
jmp
ror
shr
push
dec
dec
adc
push
dec
sbb
retf
(bad)
sbb
mov
shl
jp
or
in
xchg
adc
mov
(bad)
adc
xchg
jns
dec
push
lods
dec
pop
dec
sbb
inc
or
ins
div
push
aad
sub
push
or
sahf
dec
and
(bad)
jbe
dec
xor
lock
jmp
sub
inc
mov
mov
xor
imul
xor
js
loopne
inc
jmp
pop
test
das
push
dec
cmp
xor
pop
mov
fldpi
mov
das
dec
arpl
ficomp
dec
inc
or
(bad)
mov
data16
bound
xchg
les
call
fdivr
sbb
retf
in
inc
adc
pop
mov
shr
mov
das
or
and
mov
mov
cmp
cld
daa
mov
call
sahf
call
repz
ret
jle
cmp
adc
push
pusha
aaa
ret
jbe
dec
cmp
fld
out
pop
mov
imul
mov
dec
xor
(bad)
push
fldcw
lahf
cmc
into
lods
xchg
cmp
(bad)
out
sbb
ret
push
rcl
test
nop
call
push
stos
jns
adc
mov
retf
lahf
xchg
sbb
fisub
xchg
xor
jae
repnz
aam
dec
(bad)
test
int3
test
sbb
cmc
cli
fwait
in
xchg
mov
fiadd
mov
popa
sbb
pop
mov
sahf
cwde
popf
packuswb
or
and
pop
out
cmps
outs
and
(bad)
push
and
test
ficomp
or
xor
cmp
test
cs
push
or
in
inc
scas
dec
cwde
ins
das
xchg
je
adc
outs
push
sahf
pop
lock
adc
repz
popa
sbb
xchg
and
add
int3
in
in
in
daa
cmps
ficom
in
cmc
cmp
outs
xlat
test
jne
sub
mov
aam
add
pop
es
cdq
add
mov
xchg
push
out
cdq
add
fs
adc
dec
fxch
rcl
pusha
inc
enter
sub
jmp
(bad)
push
adc
mov
(bad)
xchg
xor
sahf
enter
fiadd
push
cmps
dec
clc
xchg
pop
cmp
pop
cwde
sar
or
into
add
xchg
mov
jge
xor
retf
in
xchg
aad
or
addr16
scas
xor
sbb
mov
pop
mov
cmp
push
clc
cmp
hlt
(bad)
in
cmp
push
ror
add
mov
or
fidiv
cmc
sar
xchg
aam
ja
push
push
inc
push
dec
shr
cmp
mov
xchg
shr
es
call
retf
inc
xor
(bad)
cmp
jno
mov
mov
xchg
inc
lds
xchg
fstp
push
imul
ss
sbb
stos
jne
add
fild
gs
aaa
(bad)
lahf
sub
adc
imul
cmps
or
or
add
mov
adc
pop
aam
scas
popf
xor
addr16
aaa
cmps
sub
pop
je
popa
push
jno
popa
mov
push
popa
cmp
inc
dec
push
cmps
lock
dec
lock
adc
cmp
push
xchg
jmp
cmps
xchg
xchg
mov
out
add
arpl
rol
dec
retf
pop
pop
add
sbb
and
rol
and
ins
add
ja
xor
cwde
retf
jns
cmps
sub
fiadd
xchg
iret
int3
ins
cmp
aad
sbb
in
retf
in
mov
push
or
dec
jno
sub
cmp
xor
inc
loopne
mov
gs
outs
cmps
mov
mov
cmps
or
and
movs
pop
and
loope
lahf
adc
or
call
or
iret
sbb
fprem1
pop
popa
pop
out
call
fidiv
in
push
pushf
or
sti
mov
in
movs
call
out
dec
sbb
adc
and
repz
imul
movs
adc
cmp
sub
pop
mov
js
sub
mul
mov
scas
mov
mov
mov
cmc
add
mov
out
cmp
out
cmp
loopne
push
popf
loopne
mov
icebp
lods
and
test
out
stos
test
(bad)
inc
mov
ds
dec
mov
or
fild
(bad)
icebp
or
sub
popa
mov
fdivr
cli
loopne
fs
retf
mov
xlat
xor
adc
test
mov
sahf
mov
xchg
fisubr
leave
gs
push
int
bound
rcl
xchg
adc
pusha
cld
sbb
inc
xor
sbb
xor
cmp
movs
fnstcw
(bad)
xchg
and
shl
mov
push
aad
sbb
push
adc
sub
test
jno
push
fdivrp
in
pop
mov
mov
or
and
mov
adc
jae
mov
pand
int
mov
gs
sahf
inc
movs
fisttp
or
ins
pop
movs
xchg
cwde
jmp
ins
jp
(bad)
push
leave
mov
lds
adc
mov
mov
xor
imul
int
cmc
gs
pop
mov
jmp
inc
sub
push
call
or
sub
ds
push
dec
call
test
dec
dec
pop
mov
jnp
add
gs
lds
mov
or
aaa
out
inc
mov
addr16
or
(bad)
ja
hlt
adc
xor
mov
push
jge
loopne
dec
adc
dec
cmps
imul
loope
add
push
jbe
mov
int3
loopne
lahf
loopne
je
dec
add
test
lahf
leave
mov
jbe
push
shl
jmp
cmp
int3
les
jns
push
or
ret
aas
pop
mov
push
dec
sbb
pop
inc
and
xchg
or
sub
into
div
xor
dec
out
fadd
std
push
or
bound
and
in
adc
jl
mov
nop
mov
add
aam
fsubr
sub
xor
cmp
jo
adc
adc
int3
jae
lahf
mov
xlat
ret
sub
fcmovnb
mov
imul
repz
push
cdq
nop
je
inc
out
and
or
int3
fwait
mov
sbb
mov
clc
aas
cmp
mov
lods
ss
push
mov
neg
jns
adc
jb
push
jb
stos
add
inc
mov
out
push
cwde
ins
xchg
aad
bound
jl
sub
sbb
jb
adc
jno
lods
cs
pop
(bad)
ficomp
sahf
dec
div
jge
jge
cli
repz
sbb
mov
out
mov
mov
sub
cmp
ficom
pop
ins
xchg
xor
rcr
push
in
rol
cmp
icebp
jl
pop
xor
scas
leave
sub
(bad)
and
sub
out
add
out
ret
stos
push
cmc
(bad)
sahf
fcom
mov
dec
sbb
jl
sbb
inc
jbe
inc
in
sar
sbb
fwait
cmc
loop
pop
outs
adc
dec
ja
shl
cmps
xor
fdivrp
pop
dec
jg
shr
ins
cwde
mov
jg
cmp
push
add
sbb
pop
out
int3
sbb
retf
outs
mov
jb
cmc
lahf
retf
xchg
and
adc
inc
xchg
jnp
pop
and
xchg
jb
xor
rcr
sti
(bad)
inc
ret
dec
sbb
scas
or
scas
adc
loope
sbb
and
pop
sub
mov
pop
mov
add
jns
adc
sahf
movs
inc
out
pop
pop
xchg
push
repz
dec
test
fld
retf
in
dec
arpl
mov
je
adc
dec
push
fidivr
or
cwde
sbb
ror
mov
xchg
adc
sbb
rcr
jmp
cli
loope
sub
push
xchg
jae
pop
std
pop
xchg
arpl
fwait
scas
cmps
xchg
ret
pop
jg
dec
cli
out
pslld
fs
mov
icebp
retf
add
sub
push
fs
mov
mov
xchg
dec
out
push
adc
add
lods
push
fs
push
mov
cmc
mov
aad
pop
mov
cld
fwait
ins
bound
xor
add
int3
rcr
repnz
add
cmc
retf
xchg
ins
in
ds
cmp
mov
adc
or
test
in
js
ja
pop
daa
out
xor
out
rol
nop
int
xor
cmp
sub
push
jle
mov
popa
retf
mov
lock
shl
js
das
pop
lea
or
ret
rcl
mov
loop
or
aas
pop
mov
inc
not
mov
enter
cmp
lock
jne
xchg
dec
clc
push
inc
fld
data16
xchg
pop
in
dec
adc
into
adc
mov
mov
jmp
inc
xor
xchg
rol
inc
xchg
xor
cmp
pop
mov
push
mov
out
and
pop
mov
mov
les
or
loop
out
sub
cmp
or
in
mov
adc
shr
jl
xchg
and
push
add
pop
and
outs
sbb
jl
jge
or
in
xlat
in
fsubr
and
inc
loopne
lods
and
mov
pop
cmc
inc
sbb
jns
loopne
retf
jmp
jmp
daa
mov
ror
xchg
sbb
fsub
mov
sti
and
ja
pop
cmps
and
stos
retf
div
leave
repz
daa
push
mov
jl
fild
mov
sub
jl
fld
in
cmp
lds
jp
jns
fdivr
test
in
arpl
dec
jb
ss
pop
jge
adc
and
push
ret
aas
dec
xchg
std
cmp
mov
xor
push
sar
jmp
or
and
aad
iret
es
xchg
pop
lods
dec
out
call
dec
fisubr
mov
into
push
jmp
cmp
pop
retf
xchg
loopne
rol
and
pushf
fwait
xor
mov
xor
ror
push
mov
imul
adc
adc
imul
loop
scas
push
aad
pop
pop
movs
cli
adc
and
enter
call
mul
mov
cmp
jne
sub
or
jb
pop
or
loope
mov
movd
inc
fs
rcr
xlat
cwde
out
inc
or
mov
cmps
adc
cld
xchg
xchg
movs
out
outs
add
(bad)
mov
imul
sbb
fsubr
push
out
cli
push
and
pop
jne
xchg
inc
pop
mov
js
cmp
ficom
jne
(bad)
sbb
outs
lea
pop
sbb
scas
inc
add
add
and
mov
fdiv
aas
push
adc
or
lods
and
lahf
mov
cmp
pushf
xchg
xchg
nop
icebp
ja
cmp
(bad)
nop
das
or
fistp
push
pop
loopne
or
jno
xor
push
lahf
outs
(bad)
cmps
pop
or
push
jbe
into
cwde
fistp
div
pusha
mov
xor
outs
cwde
or
outs
mov
jnp
aad
pop
jp
jae
pop
lock
div
aad
fild
lods
loopne
fmul
fsub
imul
xor
add
movs
enter
sub
jl
inc
and
loopne
(bad)
sbb
sbb
pop
push
add
mov
out
test
(bad)
cmp
jp
cmp
add
(bad)
stos
inc
je
add
je
fs
rcl
push
or
shl
mov
mov
bound
inc
ret
push
sub
ins
fcom
add
or
sub
movs
ss
imul
cmova
fisub
dec
sbb
cmps
inc
scas
test
or
sbb
stc
ds
or
cmp
shr
inc
lahf
xchg
push
addr16
mov
adc
mov
mov
add
jns
jecxz
mov
and
xor
push
sahf
mov
inc
push
pop
jns
mov
fadd
(bad)
pop
push
movs
ret
or
cmp
jp
pushf
xchg
adc
add
jno
stos
sub
jo
and
or
pop
retf
int
lock
loope
movs
fst
push
or
cmp
imul
lea
sar
sbb
jle
jbe
push
pusha
ret
(bad)
ds
cli
hlt
or
or
jnp
xor
push
sub
jbe
into
mov
enter
mov
push
add
inc
je
or
das
ins
fldenv
mov
sahf
jbe
pop
inc
ins
das
jb
sbb
cmp
std
push
push
cmc
(bad)
call
popf
outs
pop
xor
push
jp
rcl
cmp
clc
jo
pop
inc
mov
mov
jne
idiv
call
inc
cmp
fmul
test
dec
push
js
pop
loope
sti
xor
xchg
or
vunpckhps
mov
dec
mov
jo
mov
loopne
dec
lods
fnstenv
cmp
xchg
push
dec
mov
(bad)
jl
in
js
dec
fwait
push
xlat
xlat
sbb
pusha
fidivr
in
jge
push
xchg
push
sti
(bad)
push
or
push
jmp
retf
inc
mov
inc
dec
pop
mov
jnp
xor
jp
hlt
jno
and
xor
pop
icebp
xchg
sbb
xchg
push
mov
outs
push
mov
mov
dec
adc
jmp
mov
push
dec
sbb
idiv
pop
inc
jno
movs
int3
or
std
sub
mov
mov
movs
dec
lock
lods
mov
and
arpl
push
pop
(bad)
mul
push
iret
jno
cmp
push
lds
xchg
dec
cmp
hlt
scas
pop
stos
adc
retf
push
inc
out
je
dec
adc
sbb
leave
ins
shr
arpl
frstor
add
(bad)
and
fisttp
dec
pop
(bad)
nop
loope
mov
jns
lods
sub
dec
stc
mov
rcl
es
lahf
ror
sbb
retf
and
mov
aas
pop
adc
leave
fisttp
xchg
je
and
mov
hlt
div
xor
outs
mov
add
arpl
add
pushf
ins
cmps
ss
inc
xor
fmul
sbb
pop
mov
cmps
fcmovu
push
dec
dec
stos
jo
adc
dec
or
push
imul
sahf
(bad)
and
ficomp
inc
or
xchg
or
cmp
aad
or
fisttp
pop
xchg
icebp
jge
pop
cmp
cmp
jae
and
dec
fwait
pop
jns
in
jmp
psrld
fs
push
test
fadd
fwait
cmp
xor
push
aas
fs
inc
and
pop
aad
out
(bad)
jnp
mov
pushf
data16
sahf
sbb
sbb
push
fcom
(bad)
dec
pop
pop
sbb
mov
sar
stos
rol
sbb
sbb
and
(bad)
outs
ret
inc
xor
lods
xor
xlat
ins
mov
outs
xchg
mov
or
add
sbb
inc
jecxz
std
frstpm(287
jo
sub
cmps
and
fcomip
imul
mov
not
mov
dec
data16
cs
jo
cmps
popa
mov
in
cmp
adc
mov
aas
lods
or
pop
mov
add
clc
and
cmp
mov
xor
sub
and
fistp
xchg
pop
out
mov
mov
neg
mov
inc
jns
push
ret
lea
adc
dec
xor
jne
mov
fmulp
(bad)
sbb
lods
dec
cmp
adc
retf
(bad)
push
clc
call
or
dec
jae
fstp
daa
js
mov
outs
sti
xchg
(bad)
add
mov
loopne
xchg
sub
(bad)
pop
rol
sbb
or
and
and
dec
test
cmps
and
xchg
fwait
push
inc
leave
or
movs
(bad)
sahf
xchg
mov
cmp
ud2
neg
push
es
cmp
ret
dec
shl
pop
xlat
sub
or
mov
adc
xchg
cld
xchg
fwait
jg
adc
rcl
cmps
cmp
hlt
lea
out
dec
or
scas
pop
js
push
jae
lds
ss
jmp
rcr
mov
mov
add
lock
xchg
mov
dec
cmc
fsubr
lahf
repz
and
mov
xor
or
aaa
jmp
mov
fsubr
jo
sar
lock
inc
xchg
and
bound
or
pusha
std
rcr
outs
stos
push
mov
inc
mov
and
lahf
xor
call
rcl
fadd
pop
sub
call
mov
cld
inc
xor
mov
or
xchg
mov
push
pop
pop
ret
mov
lea
cs
nop
in
xchg
ss
bnd
hlt
and
inc
fs
shl
mov
mov
cmps
test
in
jmp
lea
neg
popa
sahf
or
mov
test
or
inc
ja
(bad)
fsub
pop
pop
mov
jbe
pop
sti
and
dec
mov
sub
inc
dec
movs
gs
fwait
scas
mov
out
ftst
mov
or
sti
and
int3
mov
int3
retf
push
call
aaa
sub
out
test
in
fnstenv
les
test
cmps
test
les
popa
mov
mov
mov
inc
pop
test
sar
cmc
xor
fistp
mov
addr16
fcmovnb
fld
sub
dec
call
in
(bad)
les
push
push
pop
idiv
jmp
out
pusha
js
add
outs
ins
push
test
adc
test
aam
push
nop
ins
rol
(bad)
or
cmp
pop
jg
mov
sub
(bad)
hlt
mov
and
aaa
int3
popa
or
mov
(bad)
pop
xor
mov
fcom
ja
mov
jne
popf
icebp
sub
inc
gs
jmp
xchg
je
mov
xor
sbb
(bad)
cmc
aad
cmps
jns
cdq
or
movs
jbe
mov
or
push
dec
or
loop
cmc
mov
xchg
shl
jmp
mov
xchg
push
(bad)
cmps
pop
pop
jp
(bad)
mul
shr
dec
ret
clc
jae
(bad)
popf
clc
(bad)
jmp
jmp
arpl
jl
loop
adc
xor
retf
out
call
dec
scas
jmp
mov
aaa
push
add
mov
or
and
sub
and
into
dec
stc
jmp
scas
pop
icebp
fisubr
imul
cdq
or
xchg
enter
fbld
out
nop
xchg
dec
push
je
add
ins
xchg
leave
jp
mov
fsubr
or
cmp
test
sub
dec
xchg
sub
sub
int3
iret
jecxz
loopne
lods
add
mov
call
aaa
pusha
fst
and
cwde
pop
sbb
sahf
add
inc
aam
lea
push
fcomp
pusha
mov
aaa
dec
(bad)
retf
int
fdiv
xchg
jle
mov
jecxz
retf
jle
std
in
add
ins
cmp
inc
mov
dec
sub
push
push
les
xchg
imul
rcl
mov
(bad)
ins
pop
call
pusha
pusha
mov
push
shl
mov
out
adc
(bad)
jmp
lods
push
pushf
inc
xchg
retf
gs
and
push
xchg
ins
cwde
ret
fstp
shl
cs
xchg
xchg
(bad)
mov
mov
repnz
rcr
and
dec
xchg
stos
(bad)
push
sub
xor
cmp
push
fwait
add
mov
inc
outs
pop
mov
lea
sbb
xor
inc
in
(bad)
pop
dec
cmp
sbb
aad
mov
shl
retf
mov
hlt
loope
(bad)
jecxz
mov
(bad)
ss
scas
xchg
mov
ins
pop
ret
push
cmp
mov
sub
push
add
inc
inc
cmp
mov
out
dec
inc
dec
test
mov
add
adc
xor
aad
inc
mov
idiv
sub
mov
shr
cwde
jmp
add
pushf
lds
xchg
loopne
sub
push
sbb
ins
mov
mov
inc
and
bound
jle
xchg
daa
loop
jo
dec
test
in
pop
loope
vfnmaddpd
das
push
or
or
mov
daa
inc
push
mov
push
jp
and
xchg
cmp
xor
dec
pop
cs
out
ins
pop
das
out
add
push
imul
xor
imul
mov
mov
iret
das
scas
push
into
push
in
fbstp
aas
or
inc
jb
inc
xor
jp
and
out
imul
pop
loop
cli
cmp
loopne
(bad)
xchg
arpl
xor
pop
inc
fsubr
gs
sti
mov
inc
xchg
inc
out
jns
cmp
outs
jg
mov
jno
aam
stos
and
push
push
inc
ins
lahf
mov
rcr
cwde
scas
add
mov
inc
jmp
dec
fstp
mov
dec
mov
loope
gs
lds
ja
movs
push
pop
dec
add
hlt
push
call
popa
cmp
xor
push
(bad)
jl
add
cmp
enter
es
cld
mov
int3
jl
les
js
dec
add
enter
lea
mov
push
xor
sub
lahf
mov
mov
paddq
fs
repz
inc
shl
in
add
mov
xor
mov
scas
ins
pusha
xchg
jae
scas
or
jl
jbe
jecxz
gs
data16
jl
movs
dec
js
repz
sbb
ins
data16
cmp
fdivr
and
out
(bad)
fs
mov
bound
mov
sub
sbb
sub
stc
fistp
lahf
movs
mov
hlt
xor
outs
xor
movs
stos
add
mov
fisttp
test
fdivr
test
add
mov
test
xchg
pop
pusha
mov
dec
mov
sub
in
jle
sbb
pop
mov
sub
(bad)
mov
xor
in
adc
sub
ds
mov
sub
lods
mov
ror
mov
mov
and
adc
sti
push
mov
xchg
pop
sbb
mov
cmp
pop
add
(bad)
retf
xchg
and
and
mov
sub
dec
sbb
and
mov
adc
mov
fsubr
inc
mov
movs
mov
inc
ja
jne
and
cmp
ret
mov
add
jge
stos
ins
adc
push
add
xor
das
(bad)
repnz
loopne
scas
leave
and
mov
mov
pop
xlat
xor
fmul
pop
push
add
mov
pop
dec
adc
cmp
adc
mov
popa
cmp
arpl
je
inc
loop
push
movs
inc
pop
xlat
imul
add
sbb
lds
int
clc
sub
mov
xor
je
push
xlat
daa
mov
jno
sbb
jmp
mov
jae
push
int
adc
inc
scas
mov
es
sbb
lods
pop
cmp
scas
mov
and
jmp
adc
sbb
mov
fnsave
jo
pop
lods
test
push
out
inc
cwde
out
mov
out
cmp
rcl
das
ds
in
xor
call
or
into
stos
scas
add
popa
push
or
cdq
das
(bad)
call
cwde
out
push
push
arpl
adc
inc
mov
cmps
mov
jae
xbegin
or
cmp
mov
pusha
ror
out
enter
xor
push
rcl
jne
je
and
mov
aad
add
call
je
stc
dec
and
popa
xlat
aas
dec
sbb
mov
jmp
add
pushf
stos
fucomi
mov
out
mov
mov
add
sti
retf
cld
dec
test
icebp
push
(bad)
xchg
jno
mov
jmp
xchg
xor
mov
pop
push
aas
lods
or
fld
arpl
adc
rcr
aaa
or
cmp
movs
inc
loopne
jmp
imul
or
aas
sbb
jns
mov
dec
ja
in
out
sbb
jno
into
xlat
jmp
lahf
call
fwait
icebp
jno
cmps
mov
scas
push
mov
leave
out
mov
xlat
mov
pushf
sbb
and
clc
ja
jo
dec
sub
pop
pushf
inc
and
push
cmps
adc
add
lock
int
pop
xor
out
jns
hlt
adc
and
jl
mov
jmp
xchg
mov
push
cmp
mov
inc
inc
cdq
mov
xor
cld
mov
lahf
lds
cli
shl
adc
loopne
ins
movs
sbb
outs
mov
daa
push
adc
in
int3
es
jno
mov
mov
cmp
jg
fisub
iret
iret
mov
or
inc
outs
bound
nop
mov
mov
or
add
(bad)
rol
mov
fimul
(bad)
jmp
lods
xchg
cmp
test
mov
(bad)
dec
mov
(bad)
sbb
and
mov
mov
or
xchg
push
dec
inc
into
ret
(bad)
push
fwait
inc
call
adc
popa
jecxz
cmp
lahf
imul
iret
mov
rol
pop
aas
push
repz
outs
or
jne
xchg
stos
imul
pop
mov
inc
xor
pop
add
js
and
cld
imul
jb
fst
addr16
gs
mov
pusha
retf
add
test
pop
push
dec
mov
in
stc
and
push
push
rcr
push
fnstsw
push
int3
add
dec
adc
dec
and
outs
cmc
retf
or
mov
jbe
sbb
xchg
pop
aaa
or
into
xor
sahf
xor
cli
lods
clc
enter
cmps
ficom
mov
call
stos
mov
js
aas
push
mov
imul
mov
xchg
ins
dec
cli
scas
cmps
mov
adc
sub
mul
rol
push
fs
adc
pop
sbb
std
jbe
jo
pop
jae
jo
mul
ins
stos
test
sbb
mov
retf
jo
mov
xchg
mov
lock
xor
cdq
ror
addr16
jmp
adc
leave
xchg
push
pop
push
int3
lahf
shr
and
mov
cmp
pop
or
push
mov
mov
ss
jl
test
push
jo
xchg
push
mov
outs
mov
dec
(bad)
sti
inc
jnp
es
adc
lahf
and
mov
jp
aas
jg
ja
push
jl
jmp
xor
mov
cdq
sub
imul
daa
daa
imul
movs
fcomp
fcmovu
pop
sbb
imul
aaa
jmp
sub
sbb
sbb
push
push
std
jg
movs
and
mov
outs
push
mov
aad
mov
test
pop
aam
(bad)
dec
aam
popf
xor
mov
in
xor
popf
jg
mov
pop
sahf
lahf
jp
test
mov
icebp
pushf
adc
aam
xchg
xchg
jmp
mov
sbb
mov
sbb
push
xchg
or
movs
test
add
adc
xor
add
and
xor
mov
cld
inc
mov
test
pop
xchg
inc
and
out
test
cmp
fnstsw
sahf
sub
test
shl
call
xchg
jns
and
sub
push
add
pop
int
loop
ror
push
es
jb
call
add
xor
push
xor
mov
adc
test
rcl
jmp
int
jg
cs
adc
mov
jmp
ss
jns
mov
addr16
daa
(bad)
dec
stc
mov
sbb
scas
movs
push
mov
data16
jae
xchg
or
stos
loope
adc
shl
outs
add
or
jbe
mov
lock
pop
mov
add
movs
add
popa
shl
cmp
sti
cmc
mov
test
daa
dec
mov
mov
mov
push
popa
inc
aaa
add
jg
xchg
inc
mov
push
mov
sbb
adc
out
mov
into
(bad)
jecxz
jge
push
push
ss
fs
push
add
bound
cmc
neg
cmp
jns
xlat
rcl
les
xlat
rcr
inc
inc
hlt
fwait
sbb
cmp
neg
mov
stc
mov
jmp
dec
ss
mov
xchg
les
xor
pusha
mov
repz
out
or
add
inc
std
int3
popa
fwait
sub
test
push
retf
das
inc
xor
call
ror
mov
or
push
sub
jno
cmps
sbb
adc
sub
adc
push
test
and
xchg
xor
or
nop
xchg
mov
pop
push
mov
(bad)
int
pop
nop
dec
(bad)
clc
mov
pop
test
adc
std
fwait
pop
pop
pushf
sub
call
mov
mov
std
aas
test
das
fsub
adc
pop
stc
sbb
dec
and
jmp
adc
and
inc
(bad)
ret
fcomp
add
inc
icebp
xor
mov
or
mov
(bad)
(bad)
fldcw
mov
sub
fadd
inc
or
mov
gs
out
cmp
jmp
cmp
enter
data16
movs
or
dec
sub
or
mov
cli
loope
call
out
dec
rcr
ja
mov
or
out
sub
adc
cwde
mov
mov
cmps
pop
push
in
cs
pop
aad
add
mov
adc
sub
mov
addr16
in
and
in
mov
js
sub
sub
xor
aaa
sbb
call
xlat
add
push
push
xchg
pushf
push
and
inc
int
xor
mov
sbb
push
inc
retf
cmps
aas
aas
and
out
jmp
fimul
mov
jmp
lock
icebp
push
cmp
xchg
sub
mov
mov
jmp
ins
dec
push
loop
jo
xchg
scas
inc
or
mov
rcr
in
mov
enter
xchg
bound
loopne
lahf
in
mov
data16
fbld
ret
data16
pop
xchg
shr
sub
ins
mov
movs
loope
xlat
rol
xlat
ins
into
jp
inc
sti
cmc
jo
out
push
xchg
nop
lods
mov
sub
aad
adc
int
push
(bad)
fwait
add
je
xchg
xor
repnz
mov
sub
mov
jle
cmp
imul
xchg
mov
sub
sub
sar
scas
loopne
repz
fwait
inc
mov
call
jns
xor
sti
sbb
cmp
sbb
pop
test
push
jmp
xchg
(bad)
aad
mov
xchg
mov
ins
mov
mov
lods
add
fild
or
mov
jecxz
cli
iret
sub
stos
adc
sar
ds
xchg
xchg
mov
push
push
jle
int3
mov
or
cmp
inc
xor
rcr
sbb
jbe
pop
and
arpl
and
ror
xor
(bad)
clc
push
sbb
neg
outs
nop
aas
jns
pop
mov
icebp
ins
cmps
add
xor
xchg
aaa
adc
xchg
gs
ret
xchg
cmps
aas
dec
pop
popa
loope
int
pop
dec
cmp
gs
cmps
shr
fnsave
(bad)
pushf
imul
sub
sbb
imul
xchg
outs
cdq
adc
xchg
push
dec
in
jb
outs
aas
scas
push
pop
jle
pop
lods
xchg
shr
mov
test
movs
out
gs
add
sbb
add
cmp
ins
int3
pop
addr16
xchg
jp
test
das
mov
cmp
aas
(bad)
sahf
cmp
sar
push
les
add
xchg
sub
xor
jbe
in
xchg
popf
lea
arpl
pop
inc
fdivr
lock
nop
mov
mov
and
push
add
jae
aaa
popf
cmps
xlat
cwde
scas
cmps
shl
xlat
mov
mov
mov
xchg
pop
pop
push
jmp
ficomp
pop
push
inc
mov
cmps
scas
adc
inc
out
(bad)
daa
(bad)
leave
dec
fadd
lods
jnp
mov
mov
ret
jnp
mov
pop
sbb
js
jo
add
(bad)
in
or
pusha
lea
add
mov
jle
cs
mov
mov
cld
mov
movs
mov
pop
jae
idiv
xchg
mov
add
out
dec
inc
ja
pop
aaa
dec
gs
jle
cmps
cmp
iret
in
outs
mov
leave
call
cmp
push
push
repz
sub
jge
xor
jecxz
push
(bad)
enter
inc
enter
icebp
xor
addr16
cld
sbb
jmp
pop
fst
imul
sub
aad
(bad)
mov
mov
mov
rcl
cmp
and
mov
mov
out
test
push
loopne
hlt
lock
cmp
cwde
aam
sbb
das
cmp
(bad)
outs
mov
adc
loope
call
mov
mov
sti
neg
fldenv
les
imul
sahf
adc
mov
pop
arpl
mov
lock
les
hlt
xchg
adc
pop
lods
sbb
shl
xchg
bound
adc
retf
push
mov
cli
mov
jge
in
iret
dec
repz
lods
out
inc
mov
sbb
lahf
lods
arpl
cmp
or
sbb
js
xlat
out
lds
cmc
push
sete
jae
js
push
nop
mov
or
mov
icebp
inc
test
js
push
mov
mov
or
mov
movs
mov
push
cld
sbb
js
and
hlt
mov
shl
loopne
daa
cmp
(bad)
sub
sbb
jle
push
or
xchg
shr
xchg
sbb
cmp
mov
inc
into
xchg
adc
sahf
mov
inc
fcmove
mov
mov
pop
cmc
and
push
pop
mov
mov
bound
cmp
scas
fcompp
outs
xchg
xchg
push
jo
mov
push
lods
lods
or
pop
retf
loope
leave
jmp
mov
and
pop
bound
mov
and
pushf
or
fnstenv
imul
lods
cmp
call
nop
ret
test
mov
push
pop
cld
cmc
popa
or
mov
add
xor
je
pop
adc
stos
fidivr
pushf
std
call
jmp
int3
ss
inc
lock
rcl
out
push
rcr
push
sbb
ficom
movs
sub
push
jmp
sahf
sbb
pop
add
xor
sbb
(bad)
fist
pop
add
stos
jg
mov
cld
repz
jmp
in
out
(bad)
cmp
add
jae
adc
imul
fcom
loopne
dec
(bad)
jno
(bad)
(bad)
imul
fs
mov
les
xchg
and
jne
call
stos
add
pushf
repnz
icebp
mov
int3
mov
jns
hlt
sub
ds
lods
jae
push
or
(bad)
(bad)
repnz
fs
mov
out
adc
dec
nop
pop
sahf
addr16
xor
sub
or
sbb
sti
arpl
jge
jo
bound
call
stc
loop
mov
ret
punpckhbw
fst
sub
repz
cmps
mov
pushf
test
stos
cmps
les
push
pop
xchg
pop
hlt
pop
test
add
cmc
sahf
int3
xchg
lock
push
push
and
pop
push
cmp
mov
mov
pusha
rol
js
push
fs
pusha
mov
inc
or
push
adc
ins
pusha
int
out
clts
mov
pop
neg
in
jle
int
popa
mov
(bad)
mov
cs
clc
mov
xchg
add
into
test
sbb
js
stos
(bad)
jnp
loopne
jno
pop
lods
mov
push
fcom
sbb
out
xor
mov
xchg
mov
add
cmp
mov
sub
mov
call
repnz
sbb
xchg
mov
fisub
aas
mov
fnsave
mov
popf
vmovss
dec
jmp
test
jae
leave
leave
inc
lahf
fldcw
fs
out
jmp
xchg
mov
ins
repz
outs
sbb
in
lock
push
add
sub
pop
push
iret
sbb
(bad)
popf
fs
inc
(bad)
sbb
xchg
jo
xor
mov
mov
lahf
mov
mov
sbb
shl
(bad)
pop
inc
ror
daa
and
sbb
mov
retf
idiv
or
ficom
sbb
mov
aam
call
xchg
data16
lahf
inc
adc
dec
push
pushf
mov
sbb
mov
cmp
arpl
aad
push
mov
addr16
aaa
stc
inc
xchg
sub
mov
movs
arpl
or
data16
add
xlat
pushf
addr16
aad
inc
fisub
test
fld
add
xchg
dec
dec
xlat
jecxz
xchg
rcr
cmp
inc
add
pop
jge
in
and
test
xlat
pop
and
test
adc
or
inc
pop
inc
gs
mov
icebp
stc
mov
out
xchg
in
push
jle
and
sub
daa
fsub
adc
xor
outs
sar
jne
jecxz
xor
push
mov
popaw
in
(bad)
dec
call
cdq
cmp
mov
ss
mov
(bad)
mov
pop
jnp
pop
mov
adc
mov
aam
push
inc
xor
pop
rcr
loop
bound
sub
mov
mov
ins
div
and
xchg
jl
test
xchg
inc
jmp
push
jnp
add
and
int
sub
jl
mov
std
jecxz
pop
sub
repz
pop
adc
lods
jb
adc
rcr
dec
push
mov
test
mov
sar
(bad)
sub
inc
cmp
not
mov
ins
cmp
mov
icebp
in
mov
nop
pop
repz
mov
push
dec
adc
jo
pop
ins
imul
rcl
pop
pop
popa
or
(bad)
std
add
sub
dec
cmp
lock
sub
sbb
aam
sbb
inc
std
mov
(bad)
in
leave
aaa
fisttp
and
pop
sub
sub
pop
adc
(bad)
cmp
and
sahf
mov
and
int
cmp
mov
sbb
push
inc
cli
adc
in
movs
sahf
mov
sub
adc
cdq
adc
sbb
test
lock
ins
sbb
and
adc
and
test
nop
test
jge
aaa
add
arpl
mov
outs
scas
add
sbb
mul
push
mov
add
sub
inc
cmp
aad
pop
xchg
and
mov
mov
xor
nop
lods
mov
js
pop
mov
xacquire
clc
call
mov
xchg
push
(bad)
out
inc
dec
out
dec
lds
cdq
outs
movs
mov
xchg
imul
pusha
(bad)
enter
and
lods
xchg
enter
dec
dec
and
and
fisubr
dec
jmp
(bad)
push
dec
mov
pusha
cmc
mov
add
mov
retf
and
jb
adc
ret
cwde
mov
jmp
dec
dec
jmp
cmp
sbb
xor
retf
sbb
cwde
clc
hlt
jl
sub
outs
fimul
pop
mov
lods
sbb
adc
push
ror
(bad)
mov
pop
lock
dec
jo
push
xchg
ror
into
cmps
mov
and
js
sbb
push
leave
sub
sub
dec
mov
or
jnp
iret
fisttp
mov
(bad)
out
mov
jbe
ins
pop
gs
inc
bound
xchg
pop
and
(bad)
xchg
push
shl
and
sbb
mul
adc
mov
ins
adc
repnz
neg
jno
mov
stc
in
das
aam
push
push
outs
popf
fs
sub
test
jo
inc
pop
es
out
pop
fdiv
bound
popa
call
shl
lahf
rol
push
lds
add
aas
push
inc
jns
mov
jge
ret
dec
mov
rol
add
mov
mov
mov
ins
jmp
jo
push
imul
mov
inc
cld
xchg
jp
jp
test
idiv
jb
sbb
jb
pop
nop
cmp
inc
and
in
jp
ret
sub
pop
sahf
gs
js
rcl
cmc
and
xlat
and
inc
in
dec
mov
adc
test
sbb
dec
arpl
sar
jl
movs
cmps
jae
xor
mov
les
jns
xchg
(bad)
into
adc
loop
push
jmp
mov
xchg
mov
adc
test
xchg
fisttp
js
pop
lods
mov
lods
rcl
fcom
mov
or
cmp
xchg
lock
lds
jmp
outs
out
aad
push
jo
mov
sbb
cmp
lahf
ds
pop
xor
mov
std
outs
repnz
fisubr
sbb
xchg
or
mov
xor
imul
sti
xor
pop
and
bound
xchg
mov
and
jno
add
sbb
sub
cmp
pop
dec
mov
cmp
fstp
inc
and
and
sbb
add
rcr
mov
jns
mov
add
retf
pop
push
imul
lea
(bad)
xor
shl
lods
je
push
jnp
(bad)
push
test
js
loopne
xchg
call
or
cmp
das
(bad)
adc
leave
or
pop
mov
pop
mov
adc
cmc
(bad)
dec
inc
fnsave
sub
jo
lahf
mov
cmp
ins
push
mov
cli
mov
out
inc
sub
and
pop
jne
xor
dec
dec
xor
mov
(bad)
xchg
push
and
sbb
inc
jns
test
push
retf
call
retf
xchg
xchg
xchg
test
shl
xchg
adc
fcomp
jl
cdq
jns
data16
mov
jbe
mov
daa
stos
push
nop
pop
push
mov
sbb
lds
fdiv
fsubr
ins
in
je
bound
adc
icebp
dec
mov
ja
outs
mov
lea
push
retf
pop
mov
stos
(bad)
fnstcw
sub
sbb
pop
xchg
mov
and
retf
cwde
mov
jl
add
pop
push
mov
push
(bad)
pop
sbb
mov
out
mov
int3
or
pop
lods
or
fistp
fs
pop
std
addr16
inc
pop
inc
pop
daa
mov
fxch
mov
push
outs
mov
sar
mov
scas
stos
pop
or
mov
jne
mov
xor
mov
movs
jns
movs
pop
or
pushf
add
jmp
dec
jecxz
pop
add
mov
dec
xor
inc
jns
(bad)
stos
jnp
cmc
dec
jl
jp
add
aas
outs
mov
ret
imul
mov
add
cmp
mov
call
sub
scas
add
lds
sti
inc
fist
fcmovu
mov
jno
test
cs
sbb
push
popa
ins
scas
dec
movs
rol
fbstp
dec
(bad)
aas
fcmovnbe
lods
int3
repnz
pop
in
sub
mov
dec
rcl
or
adc
add
xchg
arpl
retf
dec
and
adc
mov
not
fstp
mov
(bad)
fstp
les
es
imul
mov
or
pop
enter
ror
lods
mov
cmc
leave
out
shl
int
inc
rcr
pop
xchg
dec
pop
adc
mov
jge
aas
push
dec
out
lods
movs
inc
jmp
pop
or
shl
sub
jle
push
push
outs
adc
jnp
cmp
sub
mov
fdivr
or
jmp
sub
pop
push
or
xchg
pop
scas
sahf
jnp
arpl
cmp
dec
in
mov
adc
add
sub
or
repnz
and
jmp
cmp
cmps
fdivrp
shl
adc
add
in
test
cdq
scas
addr16
xor
out
dec
mov
imul
cmp
fidivr
mov
scas
dec
ficom
in
rcl
xchg
xlat
out
into
mov
in
mov
gs
retf
mov
clc
cmc
sar
add
add
(bad)
(bad)
mov
mov
xchg
xor
xor
ja
mov
and
xor
push
(bad)
push
mov
cmp
std
dec
inc
call
out
add
mov
sahf
adc
sbb
enter
mov
repnz
movs
or
scas
lods
mov
shl
int
mov
mov
test
movs
adc
adc
add
int
and
inc
ss
xchg
jb
sbb
and
mov
xchg
or
sub
jnp
out
lock
jo
sbb
arpl
add
xor
mov
mov
out
outs
adc
dec
in
test
fild
sbb
jp
shl
outs
pop
adc
scas
mov
add
repnz
mov
mov
stc
jb
int
mov
mov
icebp
xchg
shr
pop
lea
xchg
mov
lds
add
jmp
les
jnp
mov
jle
mov
call
hlt
dec
rol
push
aam
mov
(bad)
jg
adc
and
cmp
aam
outs
cs
add
addr16
fisub
les
xchg
inc
test
xchg
sub
fwait
loop
cmp
repz
movs
ins
ffreep
dec
xchg
cmp
pop
or
pop
dec
in
test
push
jecxz
(bad)
inc
ins
mov
dec
lea
(bad)
jmp
cmps
add
into
mov
pop
mov
popf
inc
clc
imul
fdiv
repnz
leave
xchg
mov
pop
or
cmp
and
adc
push
jecxz
xor
add
jl
stos
outs
mov
cdq
nop
aam
cli
test
clc
lock
je
pushf
stos
pop
nop
rcr
dec
mov
mov
dec
xchg
cdq
mov
movq
int3
push
dec
pop
and
cmp
clc
(bad)
jmp
call
pop
pop
sbb
les
mov
fcom
or
mov
xchg
ds
fcmovnbe
sbb
fstp
dec
outs
and
retf
or
sub
mov
pop
popf
loope
inc
pop
pushf
jnp
cmp
dec
lods
imul
daa
pop
jae
ret
pusha
bound
mov
cmc
rcl
add
add
dec
test
push
imul
jmp
mov
add
stc
cli
cmp
jnp
mov
push
in
pop
mov
(bad)
cmps
xlat
dec
push
fidivr
dec
rcr
retf
sbb
call
ja
mov
mov
sar
mov
cmp
gs
aaa
mov
mov
mov
xchg
cmp
call
(bad)
xchg
rcl
mov
arpl
push
add
or
cmp
das
mov
jno
adc
dec
fisub
jae
fsubp
add
push
arpl
sub
sub
mov
adc
or
inc
inc
inc
pop
int3
test
push
ds
dec
int3
sub
clc
retf
icebp
das
inc
mov
cmps
add
in
xchg
and
clc
inc
je
ja
dec
test
cmc
xor
retf
mov
jno
(bad)
push
xchg
adc
dec
je
cmp
adc
inc
fwait
std
repnz
jmp
cmps
iret
icebp
ja
add
push
jb
cld
jnp
lock
sbb
sbb
sysenter
mov
add
and
jno
lea
pop
adc
push
daa
push
or
test
fs
xor
pop
dec
push
jne
add
mov
add
pop
movs
mov
loop
lods
mov
mov
(bad)
fld
ds
cdq
rol
jmp
xor
add
adc
jp
mov
jg
popf
mov
arpl
or
adc
add
arpl
dec
push
mov
aam
mov
(bad)
or
or
stc
sar
shl
adc
or
js
bound
fild
scas
push
mov
jne
xor
xchg
outs
jmp
pop
mov
adc
repnz
je
call
adc
(bad)
mov
stc
jnp
pop
fwait
or
dec
jo
fwait
sahf
stos
ds
sbb
into
das
in
inc
ds
shl
dec
shr
retf
daa
mov
jle
pop
add
repnz
(bad)
lock
dec
out
sbb
lods
repnz
out
jg
mov
dec
xor
scas
mov
mov
jl
mov
iret
js
xchg
ins
cli
in
outs
xor
outs
sub
sbb
je
add
xchg
ud0
xlat
xor
aaa
inc
mov
nop
mov
mov
icebp
pmaxsw
ins
adc
mov
mov
mov
xchg
xor
ja
rcl
xor
stos
inc
pop
add
jae
push
(bad)
jmp
jp
les
and
dec
pushf
and
test
sub
xor
test
int
jecxz
cmp
cdq
rcr
xor
push
aad
in
push
or
mov
lods
ds
push
adc
out
icebp
dec
dec
push
rol
int3
aad
pop
push
aad
and
jp
inc
movs
jnp
loop
adc
mov
addr16
jg
aam
rol
ret
add
and
jns
add
xor
mov
hlt
mov
or
push
xchg
jo
fs
push
rdtsc
mov
call
daa
mov
lods
loop
or
mov
mov
jnp
cwde
sub
xor
ret
ret
addr16
jne
cmp
cmps
into
jmp
outs
out
xor
movs
jl
out
daa
std
(bad)
sub
or
mov
imul
jns
or
inc
mov
daa
mov
cwde
xlat
pop
mov
inc
in
and
retf
iret
lds
imul
(bad)
fucomip
inc
lds
push
ret
or
xchg
dec
test
push
inc
mov
gs
je
pop
hlt
call
scas
pop
adc
das
xlat
repz
sti
adc
ins
pop
add
or
(bad)
push
or
xor
lahf
and
iret
fimul
(bad)
mov
dec
or
loope
ret
call
adc
std
mov
push
out
inc
jb
test
jmp
add
fcmovnbe
rcl
dec
in
aaa
out
push
push
call
jmp
xor
mov
out
shr
lock
(bad)
enter
adc
ret
rcr
out
aam
movs
ret
or
test
ss
out
mov
stc
mov
in
and
cli
ror
aad
xlat
cld
scas
cmp
dec
arpl
je
cmc
sub
or
pop
mov
dec
xchg
or
imul
cmp
xor
imul
pop
pop
ret
in
xlat
mov
jno
aaa
repz
fucom
mov
repz
inc
ds
leave
in
dec
push
push
ficom
jge
out
mov
jne
sbb
and
and
fist
nop
mov
in
push
enter
push
jmp
pop
cdq
jp
mov
add
pushf
xor
pop
cmps
test
sub
out
lds
xor
mov
mov
cmp
retf
mov
xor
sbb
dec
jmp
push
xor
mov
outs
repnz
out
out
fs
mov
mov
pop
add
mov
retf
in
mov
retf
out
das
(bad)
sbb
push
cli
mov
ins
add
lea
jns
dec
jbe
sbb
in
pop
in
mov
ins
pop
inc
add
xchg
mov
ds
test
lahf
faddp
push
mov
cmp
cmp
and
scas
mov
add
push
mov
(bad)
dec
loopne
ret
jp
jecxz
xor
push
jo
mov
test
push
sbb
pop
scas
cmp
cmp
jge
mov
cmps
jl
in
add
(bad)
dec
movs
mov
sbb
(bad)
adc
pop
fucomip
out
and
push
cmc
lea
sti
pop
adc
out
fstp
sbb
sbb
dec
rcl
fbld
das
daa
inc
mov
mov
dec
push
mov
and
push
fild
jle
fwait
repnz
fwait
mov
repz
mov
bnd
add
ror
mov
or
mov
xchg
dec
xchg
pop
aas
in
xor
mov
sbb
add
inc
aad
mov
inc
ficom
sub
rcl
cwde
popf
pop
mov
sbb
cdq
out
mov
xor
les
imul
pop
retf
xor
aas
sar
sbb
lock
adc
outs
test
addr16
cli
les
pop
int
dec
loopne
pop
dec
cmp
stos
in
and
js
push
cdq
js
test
ins
inc
xchg
imul
or
push
out
sub
sbb
and
int3
cmp
mov
push
mov
sub
adc
in
xchg
push
test
sub
fs
loopne
xlat
mov
jne
push
call
push
mov
punpcklwd
cmp
push
lods
jmp
stc
mov
mov
dec
stc
xchg
aas
arpl
loopne
popa
mov
cli
cmps
and
or
cld
(bad)
mov
fwait
sub
mov
cmp
sar
pop
and
repnz
push
adc
repnz
dec
fwait
sub
jns
mov
cld
cmc
in
jns
adc
jl
out
mov
mov
mov
cmp
jne
xchg
stc
pop
or
in
fimul
cld
aam
or
xchg
xor
inc
sbb
call
jl
mov
pop
in
jg
mov
aas
jmp
dec
xchg
enter
dec
xor
(bad)
mov
data16
xor
and
data16
dec
sub
std
cmp
and
imul
(bad)
enter
das
jp
xor
retf
dec
pop
xchg
sahf
test
jge
sbb
mov
xor
pusha
xchg
mov
movs
xchg
mov
and
femms
xor
repz
sbb
addr16
scas
jl
push
fs
call
sub
out
pusha
hlt
mov
jbe
and
xlat
outs
inc
dec
inc
sub
out
movs
push
push
xor
out
or
fsub
out
in
xor
xor
out
rdmsr
pop
or
mov
aad
xor
jo
push
dec
sar
jae
aas
pop
mov
out
ins
sbb
sbb
lock
popf
in
pop
mov
pop
call
cmp
adc
mov
sub
push
fs
sbb
into
pop
and
push
inc
cmp
jbe
rcl
inc
(bad)
sbb
pop
adc
push
xor
gs
sbb
jo
cli
sub
dec
mov
scas
fisubr
and
cdq
dec
cmp
ins
loope
push
xchg
mov
mov
mov
cmp
fnstsw
or
xor
shr
jmp
arpl
mov
loopne
push
jae
fdivr
int3
nop
popf
or
or
mov
scas
jge
push
pop
popf
mov
loop
pop
sub
pop
div
fcom
dec
rol
int3
xchg
xlat
jae
je
call
and
mov
xor
sbb
push
pop
xor
lea
mov
in
cmp
dec
pop
and
jle
push
hlt
in
sub
mov
mov
rol
push
sbb
or
adc
or
mov
stos
or
xchg
out
and
pop
dec
out
das
sub
stos
repnz
mov
gs
jb
imul
das
in
push
sub
mov
mov
pop
imul
xor
jmp
je
(bad)
fiadd
adc
nop
mov
or
push
aam
ror
sbb
xchg
jl
fucomi
sbb
adc
cmp
aam
push
ss
and
mov
das
call
pop
sub
shl
mov
push
adc
add
jg
aaa
xor
neg
psllw
scas
xchg
sbb
jbe
stos
(bad)
adc
aas
push
ret
and
mov
jmp
cmp
jnp
(bad)
les
fadd
fistp
icebp
or
das
mov
arpl
inc
leave
out
pop
gs
xor
in
ds
xor
sub
test
mov
adc
dec
stos
mov
jge
cmps
xchg
test
int3
imul
addr16
xchg
ins
es
jne
stc
dec
ins
pushf
ins
loop
inc
test
addr16
cs
es
dec
sahf
xchg
adc
pop
out
cli
int3
jmp
scas
shl
test
and
or
js
mov
(bad)
out
pushf
sti
stos
jp
pusha
push
jg
cmp
cmp
inc
xlat
aaa
(bad)
jno
lahf
cmpps
mov
and
cmp
xor
into
(bad)
xchg
and
mov
cmp
lods
ja
inc
fdivr
inc
xchg
pop
in
nop
xor
xchg
cmp
test
xchg
clc
mov
push
xor
stos
pop
sub
and
dec
push
mov
jbe
js
fnstsw
sbb
fisubr
mov
loop
movs
sti
xor
push
mov
sbb
das
pop
fs
or
xor
push
popa
call
cwde
sbb
inc
dec
add
xchg
int3
mov
push
sub
aas
retf
adc
inc
pop
nop
imul
pop
das
pop
xchg
and
and
(bad)
fdivr
lea
ins
movs
mov
rol
mov
mov
pop
and
ror
push
outs
sbb
lds
mov
pop
adc
xor
pop
pop
xchg
push
sub
sbb
cli
je
pop
leave
inc
mov
xor
dec
mov
pop
adc
pop
inc
push
movs
push
stos
dec
cli
ds
mov
repz
gs
pop
icebp
pop
pop
push
dec
daa
arpl
adc
sbb
dec
lods
das
lods
dec
jmp
imul
push
ret
jmp
jbe
daa
sbb
sbb
addr16
mov
jmp
or
pop
add
call
sub
enter
add
push
cmp
cmp
bound
cli
stos
xchg
fcom
pop
xchg
xchg
into
mov
movs
jmp
in
push
ret
jge
call
and
(bad)
fstp
add
adc
imul
cmp
fdivr
outs
xlat
scas
and
sub
mov
(bad)
icebp
es
cmp
jl
sar
ss
mov
stos
aas
sbb
jge
or
cld
xchg
push
add
adc
das
fisubr
dec
outs
out
(bad)
fisttp
arpl
pusha
inc
add
in
and
jbe
push
mov
or
sub
push
shl
add
(bad)
sub
aaa
mov
push
and
mov
fidivr
inc
sbb
outs
jp
(bad)
mov
jg
and
jl
popf
fdivp
icebp
ret
sub
mov
jae
mov
fidivr
or
repz
pop
sub
mov
sbb
cmp
sbb
lds
sub
lahf
leave
push
xchg
arpl
retf
dec
jnp
fbstp
pop
mov
add
mov
repnz
adc
fild
jae
or
pop
mov
sub
xor
jo
mov
jb
iret
inc
mov
mov
and
movs
test
imul
lea
call
mov
popa
(bad)
fstp
or
jbe
push
dec
loop
outs
(bad)
adc
out
loope
fs
jmp
push
mov
inc
int3
jmp
jecxz
jg
mov
push
xor
leave
push
xchg
sbb
cmps
or
mov
xchg
adc
add
cmp
jae
jne
outs
out
dec
clc
xlat
or
and
mov
or
or
jnp
mov
daa
xor
out
arpl
jmp
mov
(bad)
jo
popa
mov
inc
sub
es
push
cmps
xor
add
xor
fimul
push
cmp
jne
adc
shr
(bad)
sbb
or
pop
into
xlat
stc
adc
pop
push
popa
cmp
mov
cmp
adc
int
push
lods
sub
out
xchg
enter
xor
add
mov
ins
call
stos
ror
push
sub
test
sub
pop
ss
ret
adc
pop
mov
enter
test
addr16
jnp
mov
aam
mov
scas
or
pop
sub
outs
loope
push
out
jo
(bad)
mov
lock
ror
sbb
add
mov
nop
sub
xchg
and
push
cmp
mul
lahf
mov
ficomp
sub
cmp
or
lods
shl
sbb
(bad)
fnclex
mov
into
in
xchg
dec
jns
push
push
daa
daa
stc
sub
push
into
cld
repz
lods
xor
sub
sbb
fld
les
jmp
xor
jmp
ins
call
push
les
mov
adc
jl
es
mov
mov
or
repz
scas
mov
fidiv
stos
cmp
and
shl
movs
mov
leave
mov
fst
popf
xchg
clc
int
push
xchg
(bad)
fs
lods
push
popf
sub
repz
popf
adc
mov
mov
mov
iret
push
(bad)
sahf
sahf
sti
test
movs
cmp
mov
xor
inc
mov
scas
inc
mov
das
mov
(bad)
aad
mov
inc
int3
popf
sar
xchg
fild
mov
cmp
imul
out
jae
xor
xchg
daa
adc
mov
repnz
retf
sbb
jle
jae
add
push
retf
mov
jo
movs
pusha
lahf
mov
lahf
sahf
ja
mov
sti
jnp
test
push
lea
xor
stos
sub
and
(bad)
sub
cmp
call
inc
jge
mov
and
dec
mov
aas
add
js
inc
cmc
repz
mov
push
sahf
cmp
scas
push
mov
jmp
into
add
scas
in
xor
les
and
jbe
cld
xchg
adc
jmp
cmp
adc
cmp
cmp
aam
std
or
scas
(bad)
cwde
xchg
cmp
test
es
(bad)
out
pop
ins
xor
imul
push
mov
jo
loope
lock
sahf
fdivr
imul
cmp
(bad)
ins
into
add
shl
mov
xor
dec
ins
imul
pop
xchg
int
sti
rcl
jge
mov
int3
js
mov
cmovne
jnp
mov
mov
and
pop
mov
(bad)
inc
dec
cmp
sub
add
fisttp
pop
jnp
mov
dec
or
sub
push
shl
sub
call
and
jg
and
es
and
xchg
mov
lock
test
rcr
into
dec
dec
jge
push
(bad)
imul
das
rol
outs
dec
inc
call
xor
outs
xor
pop
jl
cmc
js
popf
shl
packsswb
data16
xor
push
mov
sti
in
test
hlt
xchg
test
pushf
cmp
mov
lahf
dec
jmp
and
outs
adc
mov
lods
in
cmps
gs
push
xor
retf
adc
add
cmps
inc
pop
jecxz
in
lock
stos
add
sbb
sub
xchg
xchg
jo
ins
sub
in
das
lods
sub
scas
pop
movs
out
xor
push
jge
xchg
push
arpl
dec
ror
or
sub
mov
cs
daa
daa
test
xor
ds
inc
out
pop
sub
sub
arpl
sbb
push
jl
loope
jns
pushf
xchg
push
out
stos
into
out
push
loope
cmp
jbe
mov
and
fwait
ret
push
or
mov
out
mov
sbb
call
pcmpgtb
inc
sbb
jp
aam
sub
cmps
add
jecxz
cld
aas
jmp
push
or
js
lahf
push
mov
in
ret
mov
pop
push
stc
movs
popa
dec
call
xchg
clc
inc
dec
cdq
sti
or
sar
push
iret
mov
test
jae
adc
pop
movs
jge
sub
xor
(bad)
mov
and
pop
lea
jge
mov
out
pusha
xor
jg
mov
pop
pop
repz
lea
mov
or
inc
xor
fwait
bound
icebp
xchg
jl
cmp
pop
sub
repnz
xor
inc
sub
mov
mov
pop
xor
bound
repnz
imul
and
cmp
clc
jl
push
in
push
(bad)
pop
comiss
inc
inc
push
nop
mov
nop
pop
ds
nop
pop
not
dec
xchg
stos
sbb
ins
dec
fst
loope
inc
daa
inc
mov
pop
jp
std
and
sub
(bad)
inc
stc
pop
mov
xor
mov
repz
vzeroall
add
or
repz
rcl
movs
adc
aad
daa
cld
jns
icebp
pop
test
ret
neg
jmp
push
out
cmp
pop
xchg
jmp
jbe
adc
imul
fimul
jo
ret
inc
cmp
jg
out
(bad)
repnz
jg
jbe
adc
and
sahf
mul
inc
adc
jg
mov
mov
push
nop
push
scas
xchg
add
sub
xor
xor
mov
js
inc
pop
repnz
test
jl
and
jmp
pop
and
js
stos
mov
fldcw
repz
(bad)
jno
cmp
hlt
pop
repz
dec
push
inc
dec
add
rcl
xchg
fld
rol
inc
sahf
ss
es
push
div
sub
jp
dec
pop
mov
movs
xor
sub
adc
dec
pop
jns
shl
xor
and
out
mov
aaa
xchg
jmp
xchg
dec
retf
and
(bad)
xchg
mov
loop
ret
push
mov
adc
push
call
addr16
jno
mov
iret
adc
cdq
leave
ret
push
arpl
cmp
stc
sbb
xlat
das
rcr
cdq
iret
(bad)
xor
sbb
and
lods
cmp
xchg
shl
icebp
xchg
fild
ror
test
dec
push
rcl
adc
aad
add
cmp
or
rol
xchg
cmp
fs
psrad
jg
test
inc
fs
mov
repnz
jo
jno
rep
adc
(bad)
sti
adc
loop
push
push
(bad)
dec
mov
xchg
pop
pop
jle
xor
jne
test
test
bound
into
retf
imul
pop
add
cmp
push
add
imul
xchg
bound
std
jno
in
push
movs
sub
mov
inc
mov
(bad)
scas
adc
outs
and
fdiv
inc
pop
xor
call
ror
fst
xor
mov
into
jne
sub
gs
adc
addr16
lock
jae
or
pop
pop
mov
xchg
arpl
fidiv
dec
xchg
add
in
rol
pop
mov
push
(bad)
sbb
lds
cmc
in
das
dec
in
sbb
lods
scas
lds
je
mov
loop
mov
sbb
jo
jmp
push
lds
pop
sbb
out
fdivr
stc
push
call
lock
adc
mov
xchg
test
cmc
inc
ds
xor
xchg
mov
inc
sub
daa
(bad)
xchg
cld
neg
add
pop
test
jne
mov
imul
mov
push
sub
xchg
sbb
(bad)
(bad)
mov
outs
lods
sti
pop
cmps
cdq
mul
adc
pushf
and
imul
aad
lock
gs
pushf
xchg
(bad)
scas
mul
cmp
and
shl
cmp
cmp
mov
inc
pop
cmp
sub
in
cmp
pusha
dec
shl
test
shr
sahf
cwde
adc
leave
mov
enter
dec
mov
cmps
dec
out
jle
test
cmps
das
dec
pop
jbe
sbb
cld
xor
rep
inc
and
add
mov
out
dec
mov
or
fdiv
shl
add
add
cld
fs
stos
out
xchg
pusha
scas
rol
mov
jl
stc
popa
xor
jge
and
jb
sahf
js
ss
in
scas
pushf
outs
and
jecxz
inc
mov
jl
mov
outs
fdivr
and
xlat
test
div
in
shl
aaa
mov
in
or
sub
xchg
inc
(bad)
push
into
test
into
jbe
cdq
jno
dec
dec
dec
mov
imul
sti
mov
dec
clc
mov
push
lds
daa
or
and
mov
pop
jnp
xchg
inc
jno
iret
fs
fild
or
fbld
(bad)
inc
xlat
inc
out
mov
mov
dec
push
adc
addr16
push
xchg
sar
or
bound
icebp
div
in
test
dec
cmp
and
xor
xchg
pushf
es
adc
ins
dec
jge
ins
inc
pop
into
enter
(bad)
in
repnz
sbb
sbb
inc
fild
jle
and
pop
rcl
das
mov
xchg
out
rcl
or
cmp
xchg
bound
xchg
push
ins
or
ja
aas
xchg
pop
mov
hlt
xchg
int3
jns
cs
dec
mov
mov
cld
xchg
jae
out
push
in
pushf
xchg
pop
jbe
aas
mov
imul
fmul
inc
sbb
cmp
ds
or
jmp
jne
imul
in
jbe
lahf
push
xchg
jne
test
adc
add
jmp
(bad)
aam
push
or
dec
adc
dec
sub
shr
in
mov
call
mov
xor
arpl
xor
dec
je
shl
call
shl
mov
mov
xchg
mov
es
movs
lahf
scas
icebp
pushf
in
icebp
lock
scas
push
push
mov
mov
dec
bound
xchg
cdq
(bad)
mov
mov
add
cmp
push
test
add
inc
cmp
xor
inc
stos
jo
mov
js
cmp
mov
dec
pop
out
std
ror
xor
jns
sbb
pusha
push
or
adc
hlt
xor
jo
cwde
dec
mov
sbb
push
retf
and
enter
xchg
push
out
xor
sbb
xchg
in
xor
mov
sbb
test
sbb
daa
pop
cwde
(bad)
in
xchg
push
mov
mov
add
dec
or
rol
or
or
ficomp
iret
frstor
push
loop
dec
call
xor
inc
jno
or
pop
test
je
jns
mov
es
div
gs
push
imul
pop
mov
cmp
scas
mul
or
dec
stos
ja
dec
xor
pop
lahf
stos
add
out
cmp
sub
rcl
mov
out
aaa
stos
gs
or
dec
pop
sub
xor
push
pop
push
inc
into
sti
out
popa
xor
clc
pushf
cwde
fs
xchg
xor
imul
in
pop
dec
mov
push
pusha
push
je
stos
pop
mov
retf
je
cmp
fld
fld
stc
imul
cld
and
xchg
imul
jbe
xchg
rol
mov
cmp
fwait
pop
mov
fbstp
or
(bad)
dec
inc
mov
outs
ficom
xchg
mov
ret
cmp
xor
fld
cdq
xchg
aad
push
push
xlat
mov
jnp
call
or
pop
adc
scas
lock
mov
lock
mov
xchg
iret
jecxz
mov
push
lds
mov
or
adc
push
loop
jb
sbb
mov
push
sbb
xor
adc
dec
mov
jbe
xor
or
stc
inc
enter
inc
lea
add
(bad)
mov
xchg
ins
mov
cmp
ror
cmp
jecxz
add
leave
or
outs
cli
imul
pop
stc
cld
scas
icebp
cli
movs
stc
sbb
and
mov
hlt
xchg
out
add
sub
sub
push
mov
clc
xlat
xchg
fmul
sub
mov
and
in
movlpd
add
(bad)
xchg
add
movs
cvtpi2ps
lods
out
fcmove
loop
jmp
cld
ss
int
adc
inc
dec
loope
and
sub
add
push
mov
lea
xchg
add
pusha
les
cmc
push
or
ss
or
xchg
jno
ror
movs
outs
mov
shl
fist
std
mov
dec
ds
mov
mov
pop
pop
mov
inc
pop
ins
test
mov
jb
jns
fcomp
or
mov
adc
mov
das
push
mov
aaa
dec
dec
lds
(bad)
or
fcmovnbe
hlt
add
aaa
retf
test
jecxz
das
sbb
jecxz
out
push
inc
movaps
aam
xor
mov
ds
or
fimul
sbb
jb
dec
imul
and
and
jmp
ret
imul
xor
push
popf
sbb
fs
imul
mov
jl
scas
or
push
xchg
cmps
fcomp
jns
es
cmp
push
mov
ror
add
sbb
rcr
daa
data16
mov
and
push
aad
sahf
xchg
pop
shr
call
pop
mov
xlat
dec
pop
aaa
in
ja
sbb
ins
inc
daa
push
in
mov
jb
jmp
mov
sbb
lds
mov
in
test
pop
fst
inc
in
push
imul
shl
pop
or
movs
pop
xchg
aaa
mov
or
pushf
fsub
xor
cld
add
in
pop
mov
adc
inc
pushf
js
ins
xchg
lds
jecxz
stc
and
cdq
push
and
push
jp
push
sbb
mov
std
or
mov
sti
xor
aad
fstp
xor
lahf
adc
pop
mov
cmp
lods
test
out
aaa
sar
inc
retf
popa
sti
inc
mov
ins
clc
outs
push
cmc
mov
es
in
mov
inc
xchg
fdiv
jns
sbb
imul
push
popf
bound
jp
xchg
xor
dec
mov
(bad)
in
test
add
mov
xlat
les
jle
cs
test
mov
adc
xlat
mov
(bad)
iret
lahf
push
aam
jmp
sbb
enter
xlat
cmps
inc
outs
fild
push
in
scas
push
aam
xlat
sahf
or
js
test
pop
stc
jnp
sahf
dec
ja
sahf
loope
stos
xchg
xchg
mov
retf
pop
in
repz
nop
fst
and
in
mov
mov
or
push
(bad)
push
mov
lods
dec
mov
inc
test
jecxz
sar
ja
ror
sti
mov
cmps
fmul
push
mov
add
repnz
repz
inc
arpl
daa
mov
ror
jo
sub
ds
or
jo
in
lods
mov
inc
lods
or
mov
jmp
hlt
xor
js
mov
dec
xchg
cmps
(bad)
jecxz
mov
jp
retf
inc
adc
xor
fs
jmp
(bad)
mov
mov
movs
clc
xor
rol
xor
adc
mov
dec
popf
fdivr
sahf
repnz
jae
or
xor
int3
adc
adc
xchg
push
pop
dec
std
stos
push
xchg
or
les
push
adc
popa
mov
ss
scas
stc
jb
and
ss
mov
repnz
inc
add
and
dec
or
loope
add
jg
xchg
xchg
cmps
into
(bad)
mov
arpl
pop
push
fisub
mov
loope
in
rol
imul
adc
push
or
sbb
jmp
rcl
and
bound
inc
xchg
das
xchg
popa
mov
popf
in
xchg
push
push
aam
fwait
fwait
popa
(bad)
in
cdq
xchg
(bad)
outs
xor
test
jo
mov
add
aaa
rcl
sbb
add
mov
mov
xor
jge
dec
xor
xchg
add
or
leave
push
outs
out
jne
loopne
iret
rcr
inc
pop
mov
call
shl
mov
data16
adc
xor
test
add
mov
dec
mov
lds
arpl
and
mov
shl
int3
push
push
jle
pop
and
les
add
int3
retf
es
sbb
cmp
or
jns
xlat
js
rol
cld
and
jcxz
and
add
fild
add
lock
retf
xchg
pop
pop
iret
jge
aam
sbb
add
xor
xchg
mov
pop
push
jae
(bad)
sub
jmp
cmp
ss
or
pop
mov
pop
push
dec
(bad)
(bad)
lds
lods
and
mov
push
les
push
sbb
call
xchg
ja
push
push
cmp
xlat
or
sbb
popa
movs
stos
jg
retf
aam
lods
int3
and
outs
cmp
ss
sar
lods
xchg
cmp
sbb
addr16
mov
cmp
retf
mov
pop
pop
sub
clc
push
and
stos
mov
jg
pop
cs
mov
daa
xor
jle
xor
dec
push
mov
mov
scas
cmc
call
mov
jge
jl
dec
ret
push
in
mov
je
fld
mov
mov
test
dec
sbb
adc
retf
inc
pop
shl
repz
inc
arpl
adc
out
aas
mov
pusha
hlt
jle
movs
mov
jecxz
int
out
sub
fs
popf
dec
mov
mov
push
push
jmp
or
ss
mov
push
cli
add
inc
ds
fxch
movs
pop
add
cmps
push
(bad)
dec
or
xchg
div
or
mov
popa
dec
jb
inc
mov
dec
in
pop
retf
in
push
mov
push
sub
xor
sub
repnz
push
jmp
jno
pop
sbb
sbb
dec
lods
inc
test
sub
sti
cli
mov
cwde
cmps
mov
mov
push
sbb
in
push
cmp
xor
cmp
sbb
inc
inc
or
xchg
sbb
movs
xlat
cwde
push
imul
mov
mov
imul
or
(bad)
repnz
jbe
lock
ds
rol
and
sub
test
jg
sub
adc
fiadd
sti
mov
or
mov
pop
sub
nop
cmps
jl
(bad)
cs
mov
push
push
ds
enter
retf
push
xor
cmps
test
or
cmp
sbb
lds
repz
push
and
push
mov
push
rol
push
jns
frstor
push
popf
jbe
mov
mov
adc
fwait
sub
dec
jne
xor
pusha
jecxz
add
into
xor
test
std
pop
jge
mov
fld
mov
ins
js
inc
imul
mov
or
ja
mov
inc
and
cmps
dec
gs
popf
or
jnp
or
pop
mov
ss
push
cld
adc
mov
in
mov
and
fcom
cli
popa
mov
fld
loope
cdq
mov
sub
sar
aaa
or
or
and
lods
cli
(bad)
jecxz
les
pop
dec
jge
cmc
push
mov
test
loope
adc
adc
cmp
nop
adc
xchg
lods
arpl
jno
call
rcl
mov
sbb
iret
xor
mov
es
or
cmp
add
rcl
sub
std
jge
ds
dec
sub
jge
mov
fbld
mov
jo
or
in
(bad)
pop
pop
push
xor
xchg
cmps
in
add
rol
sub
pop
fld
enter
ds
push
inc
sbb
mov
mov
sbb
lods
in
xor
or
cmc
inc
jne
ret
sahf
add
dec
push
adc
fwait
cmp
rcr
mov
xchg
pop
or
(bad)
gs
shl
mov
dec
pop
and
in
push
dec
adc
jb
or
xchg
push
mov
cdq
dec
sbb
leave
adc
add
jmp
xor
adc
mov
mov
or
push
test
sbb
loope
popa
adc
jb
inc
inc
cdq
fwait
jmp
aam
or
sub
cs
shr
cmps
aaa
inc
stos
mov
fmulp
mov
cwde
jb
or
mov
add
xor
mov
add
pop
or
cmp
test
sar
lds
sbb
jbe
cmps
push
xchg
ficom
aad
ja
cmc
pop
cmp
cld
(bad)
sbb
adc
jo
ficomp
mov
and
jecxz
mov
xchg
movs
in
jae
pop
sbb
ins
and
nop
pop
push
mov
mov
scas
xor
xchg
arpl
push
dec
mov
xor
mov
movs
mov
sub
pop
test
fs
fcmovnb
outs
cmp
pop
shl
mov
lods
push
(bad)
cmp
jae
mov
pop
and
sub
fadd
aad
push
jns
je
sub
mov
jno
push
sbb
push
dec
into
inc
cmp
xchg
sahf
or
pop
int
xchg
cmp
add
inc
test
xor
mov
loope
icebp
cmp
nop
cmp
je
push
push
stos
bnd
cmp
xchg
jg
jb
add
(bad)
call
popf
push
push
and
jo
lock
cmp
jnp
xlat
mov
aad
pop
rcl
cdq
fincstp
xor
jl
xchg
fiadd
fs
out
cld
cmp
icebp
call
push
push
shr
rol
fwait
int3
(bad)
jbe
mov
xor
mov
push
(bad)
rcl
aas
xor
pop
dec
(bad)
ins
rcr
test
ja
repz
jb
inc
pushf
rol
ja
inc
lea
xchg
add
icebp
rcl
test
cmps
retf
loope
adc
mov
cld
mov
sbb
daa
pop
add
jb
inc
ins
imul
sti
cmp
or
pop
cmp
mov
or
dec
add
aas
daa
jmp
sbb
addr16
adc
push
xor
mov
xlat
or
test
and
int3
dec
or
inc
push
sub
(bad)
popf
popf
xchg
test
shl
lahf
lods
sbb
xlat
add
in
mov
xchg
sub
push
hlt
sbb
cmp
test
adc
adc
jae
xor
sbb
(bad)
shl
fs
rol
cmp
sbb
jmp
repz
xchg
jb
stc
pop
xor
xchg
and
outs
test
or
in
ins
mov
imul
cli
mov
inc
mov
test
jns
jmp
test
pop
arpl
ss
xchg
inc
int3
jb
sbb
push
mov
mov
or
push
ror
lock
imul
rcl
pop
and
cmps
push
cwde
sbb
aad
push
cmp
adc
sahf
fcom
dec
out
pop
dec
inc
pop
jns
lock
(bad)
lock
sahf
arpl
and
aas
sbb
aam
fwait
into
dec
add
ret
cmp
pop
ins
jle
push
cmp
clc
popf
inc
jmp
adc
cmp
pop
std
and
mov
adc
jmp
sar
jmp
test
imul
or
sbb
xchg
out
sti
gs
jl
sar
fst
add
mov
push
iret
stc
clc
xor
sahf
pushf
and
js
sub
dec
add
ss
mov
test
xchg
lds
pop
pop
mov
or
int3
jnp
fs
mov
ror
pop
ror
lods
rol
mov
mov
push
xor
ins
ret
push
scas
inc
xchg
(bad)
imul
cmp
popa
jo
pop
adc
inc
retf
mov
stos
test
pop
pusha
bound
loopne
dec
xchg
push
push
inc
hlt
shr
pop
add
add
aad
cli
jne
dec
add
loopne
movs
(bad)
rol
sbb
or
arpl
in
cdq
push
jno
jo
sbb
jne
jb
xchg
mov
inc
or
sub
repz
(bad)
xor
jmp
add
xor
sub
push
and
or
mov
push
dec
cmps
and
push
dec
dec
fdiv
ss
fisubr
dec
movs
push
mov
out
mov
stc
jnp
cmp
inc
sub
dec
jecxz
jge
cs
out
push
in
mov
xor
imul
jg
cmp
sub
iret
ret
add
lahf
loopne
out
mov
inc
call
out
pop
fist
and
mov
fwait
in
xor
test
pop
shl
adc
gs
retf
into
push
test
add
(bad)
mov
mov
xchg
push
push
adc
inc
stos
sub
mov
fimul
dec
popf
retf
xchg
jae
pop
sub
push
fdiv
les
pop
lahf
movs
xchg
adc
in
enter
repnz
add
ds
jmp
lock
fiadd
std
loopne
sub
adc
addr16
dec
imul
sbb
mov
mov
mov
mov
xchg
scas
gs
jo
pusha
cli
dec
inc
leave
lds
aaa
(bad)
pop
cmps
mov
sub
jl
xor
ficomp
out
xchg
shl
mov
jno
repz
sub
and
dec
or
es
push
or
dec
enter
das
push
es
pop
fcom
rcl
mov
mov
xchg
es
cmp
jge
inc
and
xor
or
inc
sub
(bad)
mov
jmp
inc
test
fs
add
cmp
aaa
shl
jnp
repz
pop
jmp
outs
or
mov
stc
cmp
sbb
in
stc
retf
xchg
sub
xchg
jmp
mov
xchg
inc
movs
clc
and
and
mov
in
std
jg
jmp
xchg
adc
jmp
std
xchg
fisttp
(bad)
repnz
out
inc
dec
gs
imul
xor
repnz
(bad)
push
das
sub
cmp
retf
cld
dec
cli
adc
out
dec
jl
push
adc
and
test
sub
addr16
ins
(bad)
jp
je
sbb
cmp
jmp
adc
fs
lods
inc
mov
int3
rcl
(bad)
shr
test
fild
rcr
out
ficom
(bad)
adc
mov
out
push
jae
sti
lods
mov
mov
jmp
pop
popa
fild
out
in
xchg
and
add
popf
imul
in
hlt
test
shl
mov
and
call
dec
lea
in
hlt
xchg
test
adc
jb
xor
xor
mov
(bad)
jl
stc
iret
dec
jmp
or
dec
shl
retf
(bad)
ss
ror
pop
mov
or
xchg
fst
pop
xchg
xor
mov
pop
pop
or
test
jecxz
out
or
sbb
cld
shl
and
mov
loop
xchg
mov
jnp
xchg
xchg
in
or
jle
xchg
sub
jmp
shl
and
xor
cmc
inc
shl
mov
mov
imul
push
pushf
cmp
dec
mov
sti
ret
jbe
sbb
push
arpl
pop
je
dec
or
mov
jg
fstp
add
or
sub
sahf
add
or
mov
sbb
xchg
movs
lahf
and
js
xchg
lock
repnz
lods
sub
ret
push
aaa
loop
or
gs
or
mov
jg
dec
call
cmp
ret
loope
sbb
test
mov
pop
xor
cli
arpl
mov
xor
xchg
shl
push
inc
(bad)
mov
mov
cmps
push
fwait
popf
loopne
sub
dec
imul
inc
ins
xor
in
xor
cmp
cmps
dec
dec
lds
add
mov
pop
(bad)
mov
mov
add
scas
pop
add
dec
sbb
sbb
int3
push
movs
xor
jnp
push
push
pop
inc
test
js
jp
push
sub
pop
sbb
mov
mov
ret
mov
test
and
shl
dec
dec
dec
leave
adc
pop
mov
hlt
push
scas
pop
aas
ins
cmps
std
push
dec
add
mov
loopne
fs
add
enter
dec
dec
repz
mov
jns
cmp
add
sbb
cmp
and
lds
mov
das
loope
add
stos
in
out
loopne
dec
cmp
add
gs
xor
push
pop
sub
in
cmp
popf
aad
or
adc
mov
xor
mov
adc
(bad)
je
pushf
lock
add
mov
lods
adc
mov
xor
jg
mov
pop
jno
sub
xchg
adc
out
mov
lea
aad
xlat
(bad)
cdq
jns
inc
jmp
test
(bad)
pop
push
call
xchg
inc
or
push
and
sub
out
sub
out
xor
stos
imul
mov
inc
popa
and
inc
int
jo
cmpxchg
cdq
jge
xor
int
ret
mov
repnz
jp
retf
mov
sbb
jecxz
ins
or
xor
adc
sar
mov
mov
fnstsw
jg
hlt
mov
jns
sbb
outs
mov
nop
mov
xchg
movs
cdq
dec
pop
ins
gs
xor
in
cmp
test
or
fcom
fcomp
xor
pop
mov
(bad)
pop
jo
mov
jno
and
shl
mov
mov
ret
cmps
ds
loopne
mov
xor
aam
cmp
(bad)
leave
jmp
mov
iret
mov
mov
sti
push
inc
adc
mov
pop
and
test
pop
push
loope
repz
pop
dec
aad
pop
cdq
ror
scas
lds
add
and
test
gs
outs
pop
mov
cmp
pusha
jns
and
repnz
and
xor
lods
aad
in
and
cmp
mov
fcomp
ja
pop
push
push
mov
mov
xor
repz
fdiv
fld
hlt
push
sahf
mov
ins
dec
lods
mov
ins
cmp
aas
xor
pop
pop
out
call
inc
push
das
mov
and
call
inc
jbe
jmp
shl
push
fiadd
cmps
popa
test
clc
in
push
iret
in
push
cmp
and
mov
cdq
fpatan
dec
retf
retf
mov
cli
adc
into
cwde
inc
dec
retf
jmp
pop
mov
not
or
fisub
lea
push
rol
mov
jle
pop
lock
rcr
jl
(bad)
les
sub
jnp
fmul
or
xchg
scas
cmps
aam
or
mov
jns
shr
mov
dec
jp
adc
sub
push
aas
in
mov
mov
xor
stc
mov
add
jb
xor
cmps
pushf
pop
mov
or
mov
mov
je
sub
retf
adc
and
shl
sub
add
and
jmp
fadd
imul
enter
outs
xchg
stos
inc
adc
adc
pop
cmps
and
jp
xchg
xchg
dec
push
sahf
popa
sbb
xchg
sbb
popa
jb
hlt
out
movs
mov
sub
mov
iret
loope
loop
adc
in
xor
pushw
ss
add
dec
pop
test
test
out
ret
lds
mov
jns
add
movs
in
mov
daa
ds
leave
rcl
xchg
push
fdivr
ret
mov
xchg
push
sub
dec
fisubr
push
fisub
scas
push
(bad)
daa
sar
xchg
imul
nop
clc
push
mov
push
jge
push
add
add
mov
sbb
sub
test
daa
mov
das
gs
adc
scas
stos
pop
loopne
mov
fucom
cdq
jo
into
sahf
mov
mov
aas
and
jmp
adc
mov
aam
jmp
cmps
push
xchg
xchg
call
sbb
xchg
jecxz
lahf
into
nop
test
aaa
pop
pushf
cmp
dec
imul
sbb
push
call
stos
scas
mov
inc
scas
dec
mov
aad
dec
sysenter
inc
lahf
inc
out
(bad)
jnp
inc
mov
adc
mov
mov
mov
test
call
mov
push
fdiv
pop
aam
pop
and
test
push
push
xchg
mov
lods
jo
test
sti
sbb
sbb
ds
inc
add
(bad)
sub
inc
(bad)
mov
fadd
mov
sbb
popf
js
aaa
add
addr16
outs
push
or
into
ja
mov
shl
cmp
xchg
xor
rol
repz
imul
or
out
sub
add
dec
cmp
and
out
mov
jae
sahf
inc
lods
jns
aaa
xchg
cmp
xchg
shl
or
pop
push
daa
test
or
in
dec
dec
call
test
mov
and
stos
xchg
add
and
clc
push
dec
and
es
add
mov
outs
add
cmc
xchg
shr
mov
and
pop
(bad)
out
and
mov
int
mov
out
test
aas
ja
lahf
xchg
push
add
jmp
cld
jns
cmp
out
lods
inc
jmp
jb
out
outs
and
pop
xor
push
test
jecxz
mov
jl
cmps
push
stc
xchg
adc
mov
inc
ss
mov
jge
psrlq
xor
jmp
int3
addr16
retf
sahf
lods
jg
mov
jecxz
or
jmp
rcr
adc
aas
imul
popf
pop
xchg
test
dec
addr16
fs
adc
mov
adc
mov
sub
es
int3
fs
pop
ret
scas
push
outs
mov
aas
test
add
je
ss
out
neg
push
imul
sub
pop
mov
test
stos
or
cmc
and
inc
mov
hlt
test
lea
shl
jl
je
test
adc
pusha
out
pusha
shl
and
pop
pop
xor
push
mov
daa
cmp
push
xchg
jbe
mov
sub
pusha
push
gs
adc
mov
ret
mov
mov
es
js
mov
push
push
sbb
xchg
mov
jae
out
xor
int3
rol
jns
mov
or
jne
pop
mov
pop
mov
mov
mov
and
cmp
cmp
pop
adc
lods
fdivr
push
xor
jmp
into
and
repnz
test
cwde
in
mov
dec
pop
push
adc
pop
lock
dec
xor
mov
fs
daa
es
lods
cmp
mov
pop
push
mov
clc
jmp
ins
data16
add
push
les
inc
adc
xchg
lods
or
mov
pushf
push
add
pop
cwde
addr16
and
call
iret
mov
add
call
mov
int
(bad)
adc
test
inc
jnp
mov
jae
mov
xor
mov
push
aad
call
cmps
and
mov
mov
mov
lods
fwait
hlt
cmp
inc
cmps
push
add
pop
sub
js
retf
sbb
sub
push
mov
test
sub
fist
lods
jmp
xchg
out
popf
jae
xchg
pop
add
es
inc
and
aaa
cmp
hlt
xor
sahf
adc
sub
xor
add
sar
inc
push
mov
das
enter
ds
dec
int3
mov
inc
dec
es
pop
jae
sbb
call
jnp
ja
(bad)
jae
add
xor
enter
jl
test
or
popf
and
in
push
pop
pop
(bad)
out
dec
mov
push
jbe
xchg
test
cmp
sub
out
xchg
out
fs
sub
int3
movsx
es
inc
xor
cmps
pop
(bad)
cmc
sbb
(bad)
(bad)
es
fidivr
retf
movs
pop
and
jne
add
rol
cmp
loop
ret
or
mov
mov
add
xchg
sbb
xor
cmp
cwde
std
lods
cmp
lahf
jge
cdq
pop
shr
mov
pop
dec
mov
sbb
inc
fild
xchg
inc
or
aas
sbb
jg
pop
pop
repnz
test
jecxz
jmp
adc
std
xchg
jb
cmp
jno
icebp
mov
push
fidivr
push
movs
(bad)
jmp
jae
ja
popa
les
xor
inc
xor
repnz
push
mov
clc
fild
push
mov
jmp
pop
xor
sbb
and
dec
or
push
test
stc
enter
push
jge
nop
inc
inc
test
test
fadd
mov
cld
outs
and
sbb
dec
fist
pop
inc
pop
clc
xchg
iret
mov
test
mov
pushf
test
mov
add
mov
imul
add
or
mov
mov
dec
sub
xchg
sub
rcl
pop
sbb
in
add
cmp
lea
daa
in
and
xlat
cmps
mov
push
movs
xchg
add
xchg
inc
push
out
inc
jle
push
xor
jmp
aam
dec
(bad)
jnp
push
push
sbb
jnp
dec
repz
aaa
arpl
jns
popa
push
rcr
xchg
jp
mov
(bad)
fistp
xchg
cdq
or
xor
mov
sub
movs
inc
pop
dec
addr16
sub
xchg
mov
lods
pop
dec
sub
test
dec
test
(bad)
in
adc
add
pop
mov
xor
fcomp
outs
xchg
xchg
aas
or
and
cmp
mov
jnp
dec
daa
popf
test
dec
push
mov
fdiv
push
sar
jmp
cmp
pop
(bad)
jne
enter
fadd
push
xchg
jns
addr16
sub
push
jb
cmp
idiv
test
and
sbb
mov
nop
in
in
sub
rol
cld
aas
adc
push
bound
into
out
cmp
push
popa
popa
mov
int
(bad)
movs
mov
aas
test
jne
dec
mov
cmps
push
stc
lods
fstp
mov
dec
icebp
push
cwde
mov
loope
dec
pop
pop
movs
push
push
cmp
xchg
ja
(bad)
hlt
dec
loope
in
nop
stos
or
dec
and
mov
sub
adc
leave
adc
out
mov
adc
dec
or
cli
or
fld
in
push
repz
das
jl
mov
jno
adc
cmp
and
mov
setge
stos
xor
inc
jno
int
ss
push
sbb
jmp
ins
ja
xor
mov
sbb
pop
sahf
jmp
add
cmp
in
scas
lock
inc
sbb
mov
je
in
add
in
and
xor
out
sub
ret
mov
pushf
jo
retf
movs
inc
xor
inc
fild
std
mov
es
cmp
dec
cdq
lods
fst
ss
and
or
sub
inc
sbb
xchg
pop
cmp
mov
mov
leave
push
or
enter
(bad)
mov
sub
iret
xchg
sbb
addr16
in
dec
iret
fcomp
sub
jmp
ret
push
cmp
js
mov
pop
xchg
sub
push
adc
and
sahf
aad
retf
pop
dec
jl
xor
aad
xor
fistp
push
ja
push
and
jecxz
push
fwait
int
cmp
push
pop
push
xchg
sub
xchg
or
sar
mov
aad
lds
sbb
(bad)
cmps
push
mov
jecxz
lds
cmps
nop
cmps
inc
jle
xor
sti
push
jae
mov
inc
adc
stc
jno
in
and
fdivr
mov
cld
popa
mov
mov
mov
sahf
adc
push
adc
xacquire
frstor
and
mov
cmps
into
aas
push
aam
sbb
cmc
in
and
pop
mov
mov
(bad)
xlat
lods
loopne
jge
inc
lods
pop
dec
and
je
or
mov
sbb
dec
fs
repz
dec
or
pop
sbb
retf
jp
fsubr
jmp
cmp
mov
mov
and
data16
xchg
push
xor
imul
pop
add
xor
aaa
fcmovnbe
shl
dec
cdq
sub
stos
stc
xlat
push
cmp
aas
and
nop
pop
cmp
fs
(bad)
cmp
sahf
or
jnp
and
or
jmp
cld
stos
leave
test
mov
mov
push
mov
jb
les
stos
xlat
mov
sbb
gs
cs
das
or
das
call
sub
jae
mov
(bad)
test
out
add
mov
popa
sbb
fisub
mov
mov
lds
mov
addr16
add
test
repz
cmps
cmps
ss
sbb
xchg
mov
dec
(bad)
lods
xchg
es
xchg
pop
cmp
(bad)
xor
fwait
jbe
loop
stos
adc
inc
fnstsw
xor
push
imul
cmc
(bad)
dec
pusha
cmps
add
loopne
(bad)
mov
(bad)
add
sar
ja
addr16
push
mov
fwait
(bad)
pop
lods
stc
das
fsubr
add
pop
dec
jno
mov
sub
push
dec
movs
dec
and
lds
(bad)
scas
js
or
in
and
adc
int
mov
lds
dec
sub
sub
ret
inc
aam
test
dec
mov
scas
jo
aaa
inc
xchg
jnp
shl
sub
lea
ficom
add
fcomp
(bad)
aad
shl
(bad)
sbb
jmp
and
(bad)
fcmovu
daa
test
push
bound
rcr
aad
aaa
test
pusha
mov
imul
test
add
in
popf
adc
mov
add
pop
inc
das
push
pop
lock
lahf
outs
pop
inc
adc
push
adc
mov
mov
mov
stos
jp
pop
fdivr
mov
je
xlat
stc
repnz
test
push
lods
jmp
aaa
push
dec
jns
icebp
xor
mov
cmp
mov
dec
dec
dec
dec
jge
pop
push
sub
mov
pop
or
adc
push
jmp
dec
xor
arpl
cmp
xor
cwde
adc
mov
push
fxam
outs
mov
dec
ds
jge
add
add
in
pop
add
jmp
adc
mov
jno
mov
mul
test
xchg
mov
xor
aam
inc
clc
add
ins
cmp
popa
pop
(bad)
cs
cmp
inc
push
out
push
adc
push
jbe
fwait
les
aaa
addr16
in
inc
cmp
and
fwait
out
or
mov
add
xchg
mov
mov
add
icebp
push
popf
int
mov
or
jmp
shl
cmp
sub
test
or
mov
jnp
hlt
mov
pop
jecxz
call
cs
lea
test
fs
cmps
xchg
retf
shl
arpl
xchg
xchg
ins
imul
out
(bad)
jmp
or
daa
outs
(bad)
stc
xchg
dec
cwde
(bad)
movs
sub
xor
loope
jno
outs
fsub
mov
or
movs
sub
jo
lds
inc
pop
mov
in
popf
and
pop
xor
mov
outs
add
push
std
dec
in
test
cwde
mov
leave
adc
(bad)
aaa
ins
push
hlt
imul
mov
test
mov
push
std
add
adc
mov
aaa
fdivr
mov
rcl
std
pusha
in
pop
pop
icebp
mov
inc
in
or
mov
inc
sahf
imul
mov
add
add
inc
leave
cmp
test
dec
movs
dec
pop
or
mov
enter
adc
jl
test
sbb
outs
mov
adc
or
pop
aad
dec
rcr
inc
hlt
outs
cmp
in
xor
sbb
jo
jb
pusha
outs
or
sbb
mov
jo
cmps
ror
imul
fcomp
dec
pop
cmp
xchg
aas
mov
mov
mov
aad
test
inc
add
pop
hlt
rcl
mov
xor
rol
scas
fsub
adc
cld
pop
mov
and
add
je
adc
add
scas
mov
lods
out
imul
lds
(bad)
cdq
iret
retf
adc
in
fcom
mov
jbe
mov
sbb
dec
imul
fimul
cld
add
and
sub
inc
push
and
mov
stc
or
mov
call
psrlw
mov
aas
repz
shl
push
push
mov
fwait
mov
loopne
xchg
test
xchg
icebp
jg
sbb
pop
leave
in
ds
cmp
stc
scas
mov
inc
push
add
pop
dec
mov
je
push
addr16
and
mov
enter
repz
jl
dec
mov
pusha
das
pushf
sahf
in
rcr
sbb
mov
mov
(bad)
mov
dec
cmp
dec
test
push
mov
dec
pop
js
scas
mov
adc
xchg
mov
cmp
in
push
xor
aam
pusha
sub
xchg
inc
mov
mov
std
xchg
push
add
push
imul
sub
lods
cli
mov
and
inc
add
push
mov
(bad)
and
(bad)
xor
adc
pop
inc
fcomp
mov
movs
aam
call
movs
pop
ins
xor
inc
repz
repz
push
xlat
fcom
push
sbb
sub
movs
pusha
dec
out
ffree
jge
and
ffree
es
or
popf
cdq
retf
cld
xor
mov
add
or
jg
mov
movs
ins
ins
or
adc
cmp
cmp
pop
dec
inc
pushf
or
jle
ja
cmp
or
aad
iret
callw
cwde
sbb
scas
pop
sbb
jmp
inc
mov
dec
dec
or
movs
and
je
fs
imul
inc
push
repz
jns
xchg
pop
sub
rcl
push
push
mov
aam
jne
pop
xchg
pop
fistp
inc
and
ret
aas
stos
mov
jecxz
cmp
mov
xlat
in
sub
je
fs
mov
xor
fdivr
jmp
xchg
fcom
test
adc
outs
sar
addr16
xor
cmp
jno
cmp
lock
sub
retf
psllw
pop
mov
push
add
js
mov
sub
sbb
inc
popf
es
mov
jmp
mov
loop
test
retf
adc
mov
lea
jae
inc
stos
icebp
adc
mov
lock
outs
xchg
mov
ret
imul
cmc
pusha
ret
iret
sbb
cwde
mov
loope
cs
adc
cmp
arpl
call
sub
repz
sbb
pop
hlt
lock
(bad)
cld
in
and
loop
sbb
sub
sbb
mov
imul
jne
jge
jl
add
mov
xchg
jl
push
shr
xor
pop
or
test
jg
xchg
or
(bad)
inc
ret
xchg
loopne
aas
stos
in
or
jae
dec
pop
lock
out
aad
push
aad
mov
and
jge
sub
push
dec
jne
out
dec
jno
stc
scas
sub
fxch
pusha
inc
push
mov
and
ds
xor
mov
xor
xchg
xchg
push
jns
les
mov
arpl
add
ror
or
xor
adc
cmp
sbb
pop
out
jb
es
aam
cld
lock
jbe
mov
pop
iret
adc
inc
cmps
mov
pop
outs
jmp
jmp
or
bound
adc
cmp
sub
add
loope
or
pop
mov
outs
rol
mov
sbb
in
test
cmp
dec
mov
sbb
sbb
sub
imul
(bad)
loop
dec
(bad)
mov
cwde
call
ins
not
add
or
shl
adc
and
imul
js
xchg
mov
push
and
into
cmps
jb
xlat
adc
xor
test
jmp
arpl
jl
test
mov
sar
cmp
mov
repnz
adc
lods
leave
outs
xlat
jmp
sbb
mov
lea
enter
int
bound
push
dec
imul
xchg
cwde
mov
aaa
xor
adc
mov
or
movs
std
add
mov
(bad)
into
stc
fnsave
sub
outs
daa
mov
mov
pop
(bad)
out
mov
xchg
adc
rcr
mov
loop
adc
mov
test
xchg
and
loop
sub
dec
vpshaw
push
call
inc
mov
jno
loopne
aaa
icebp
cmp
push
pushf
icebp
jp
inc
and
add
push
stc
xchg
fcmovbe
inc
jns
dec
mov
in
gs
cmp
push
mov
jae
test
or
ror
stc
lods
lea
add
jmp
(bad)
call
cdq
sbb
ffree
clc
(bad)
jmp
xor
les
adc
(bad)
movs
loope
(bad)
loop
js
leave
stos
push
cmp
or
icebp
out
adc
xor
add
cwde
dec
pop
xor
and
movs
xor
xchg
sub
mov
jo
jg
lock
jns
mov
aam
xor
cli
out
(bad)
pop
xchg
add
jae
imul
cld
fwait
outs
out
jo
cmps
fisttp
inc
daa
sbb
imul
call
lods
lahf
push
jns
loope
jg
lods
dec
rcr
mov
jns
jmp
in
div
fsub
and
add
xor
js
retf
jnp
xchg
mov
mov
movzx
sbb
popf
sbb
ins
mov
scas
in
je
sbb
jge
lahf
adc
inc
rcl
adc
inc
lods
pop
pop
loopne
ins
sub
sar
mov
mov
sub
adc
lds
neg
dec
or
mov
inc
inc
arpl
rcl
and
fstp
aas
jg
scas
pusha
imul
push
cmc
and
dec
jge
jp
jge
add
imul
sub
jb
test
jb
ins
es
fs
sub
(bad)
dec
mov
ins
cmp
pusha
mov
call
mov
cmp
mov
fs
and
sub
dec
xchg
xor
push
xchg
fdiv
xchg
and
clc
int
mov
shl
and
sbb
popf
xchg
mov
push
sub
xchg
mov
retf
mov
mov
ins
mov
jecxz
(bad)
mov
sub
aad
mov
in
sub
gs
xchg
repnz
and
inc
sub
ss
sbb
sub
test
pop
sbb
and
xor
imul
or
add
cmovbe
cmc
jle
fld
out
nop
jmp
mov
mov
mov
gs
popa
not
fstp
sbb
adc
ret
jo
fisttp
cmp
in
dec
out
ficom
sub
outs
adc
mov
movs
sar
sbb
int
lock
daa
adc
in
sti
push
sub
push
mov
in
jmp
rol
dec
sub
out
aad
xchg
ins
fwait
push
mov
int3
retf
fisubr
test
sbb
and
xor
add
movs
push
cld
ret
jg
mov
ret
cmp
xchg
jbe
and
or
xor
jo
dec
cmps
rcr
push
arpl
mov
sub
sub
mov
or
jae
or
xor
push
jecxz
sbb
jge
mov
cmp
(bad)
call
imul
(bad)
fwait
inc
jmp
loop
bound
inc
jge
scas
pop
jle
push
adc
stos
ins
mov
sbb
and
inc
movs
sbb
sub
add
aad
pop
int3
mov
inc
(bad)
cmp
push
es
add
test
es
or
das
pop
sub
cwde
nop
sti
jnp
jmp
pop
dec
fcomp
mov
push
mul
push
and
xor
aaa
fldenv
ins
xor
adc
inc
dec
push
inc
lods
mov
pop
cmp
xchg
in
jbe
mov
dec
call
fs
mov
mov
mov
mov
jl
xor
jmp
xor
stos
xor
inc
loope
shl
jl
cmp
sub
jmp
jg
cmc
test
aas
jmp
ror
xor
int
repnz
mov
inc
xor
ds
xchg
sbb
test
cwde
jmp
std
push
xor
jnp
xchg
hlt
mov
cwde
inc
jno
mov
frstor
mov
nop
popa
jl
cs
add
scas
imul
cmps
cld
sub
hlt
push
adc
fcmovb
aaa
cmps
scas
jge
mov
leave
jbe
call
mov
cld
into
push
push
repz
sub
ffreep
popf
cmp
leave
adc
call
xlat
sbb
fsubp
jg
adc
cdq
mov
mov
not
sub
mov
dec
dec
fisttp
jp
add
or
sahf
push
mov
shl
ins
pop
xor
aas
cdq
out
sar
sbb
ins
(bad)
rcr
pop
loopne
ret
xchg
or
push
nop
ins
fstp
cmp
or
and
push
sti
pop
dec
je
int3
sbb
lock
lods
jne
out
stc
out
cmc
jp
faddp
addr16
lea
push
xor
test
push
mov
mov
mov
push
push
lahf
sbb
and
jne
xor
add
(bad)
movs
je
aam
cli
pop
cmp
movs
xchg
mov
iret
jns
adc
inc
leave
xchg
push
fisubr
repnz
cli
or
repz
xchg
and
push
(bad)
inc
cmp
dec
sbb
sbb
jae
mov
shr
cmp
adc
into
mov
js
jo
cmps
call
jnp
cwde
sub
or
stos
pop
push
fcomp
and
push
cmp
arpl
push
scas
loope
out
and
rcl
in
sbb
clc
lock
mov
cmp
push
test
movs
retf
jnp
cmps
dec
shl
cli
push
inc
mov
jb
ds
jno
inc
ror
test
mov
mov
punpcklwd
repz
push
psadbw
ins
daa
stos
std
(bad)
pop
lds
dec
sub
xchg
rol
inc
ins
mov
(bad)
or
lahf
call
or
inc
repnz
mov
cmps
cmp
cmp
sti
ror
sub
rcl
mov
and
pop
sub
cld
(bad)
lahf
test
pop
mov
pop
push
pop
std
mov
sub
into
xchg
rcr
sub
mov
dec
es
ficom
jne
fild
sbb
loop
inc
(bad)
icebp
int
xor
(bad)
cs
scas
pop
repnz
and
mov
pop
jecxz
hlt
fstp
mov
xchg
mov
sbb
addr16
xchg
pop
(bad)
ins
in
sub
dec
pop
sbb
cwde
mov
mov
sbb
cmp
ret
pop
cli
ret
adc
xchg
sub
xor
imul
cmp
cli
lahf
jp
cmp
mov
rcl
das
jno
mov
sti
mov
xor
mov
inc
sar
pop
mov
idiv
xchg
xor
pop
inc
sbb
jg
inc
pop
jns
ins
or
fcom
test
jno
(bad)
daa
inc
jmp
mov
stos
stos
sbb
cmps
movs
cmp
in
test
call
ja
popa
addr16
xchg
imul
jle
cmp
jmp
iret
pop
dec
adc
fisub
push
call
pop
fadd
push
call
jp
mov
in
sti
mov
mov
ficomp
arpl
and
add
inc
sub
sub
shr
(bad)
sbb
mov
fiadd
xchg
jle
je
into
popf
aam
mov
ins
adc
push
les
or
lods
rcr
dec
dec
jbe
jmp
or
xchg
mov
lock
outs
or
mov
jecxz
mul
in
add
repnz
out
push
clc
mov
loope
fiadd
(bad)
int
(bad)
push
mov
or
fsubr
mov
and
jno
xlat
loope
mov
les
jecxz
aam
push
repnz
movs
adc
jg
xchg
imul
push
sbb
mov
cmp
inc
and
mov
fisub
mov
fistp
test
je
cmps
cmp
aaa
jp
sub
arpl
add
cmp
push
add
sub
push
adc
or
xchg
mov
or
mov
add
xor
and
shr
fisttp
sub
je
or
adc
adc
sub
ja
sbb
in
clc
imul
add
pop
out
movs
int
or
aas
push
lods
pop
daa
movs
ss
sub
test
adc
jno
(bad)
test
dec
jae
mov
xchg
jo
mul
scas
xchg
adc
xchg
dec
popf
jmp
clc
fs
icebp
pop
mov
addr16
mov
and
test
adc
pop
leave
xchg
jnp
jno
sub
ja
out
pop
inc
scas
stos
mov
call
test
outs
add
js
cld
sbb
fwait
psubsb
sti
out
and
test
movs
pop
gs
add
mov
jo
(bad)
mov
out
mov
xor
mov
(bad)
hlt
loop
push
adc
jp
mov
lock
ret
mov
xchg
retf
int
ins
pop
sbb
in
adc
or
pop
arpl
inc
popa
or
imul
xchg
adc
xor
aad
push
(bad)
sub
jb
pop
inc
sub
loopne
out
sbb
ins
scas
pop
xor
jbe
xor
xchg
inc
cwde
test
in
xchg
mov
ins
les
cli
jecxz
inc
in
and
adc
retf
jae
icebp
pop
retf
and
or
xor
test
gs
mov
shl
(bad)
cmc
mov
out
hlt
pop
ror
mov
gs
adc
pop
ja
xchg
sbb
mov
mov
lods
inc
cmp
mov
mov
sahf
add
test
lods
jge
push
push
mov
mov
or
mov
push
ins
in
sbb
ja
clc
icebp
call
cdq
xchg
push
popf
ficomp
xchg
xor
addr16
pop
lahf
mov
cmp
cmp
mov
and
frstor
and
(bad)
aam
sub
inc
mov
sti
loopne
push
dec
xor
(bad)
repz
pushf
leave
xor
xchg
dec
or
push
fwait
push
push
sub
test
add
movs
xchg
sub
dec
jo
popf
jl
test
inc
sbb
rcl
cmp
out
mov
or
fwait
data16
sub
out
jnp
stos
adc
and
mul
mov
sbb
adc
xor
int3
(bad)
scas
dec
lahf
out
push
jle
sti
imul
cmp
jge
xchg
xchg
in
mov
lahf
mov
push
ret
aam
arpl
jle
(bad)
div
fld
stos
jbe
adc
test
daa
(bad)
cmp
inc
fsubr
xchg
and
pushf
mov
sbb
or
pushf
xchg
mov
jbe
imul
or
ins
inc
jmp
test
inc
cdq
xor
inc
sub
push
jp
loop
mov
outs
cmps
dec
pusha
fcmovb
aad
pop
sub
or
sub
arpl
xchg
loope
dec
(bad)
into
loop
sahf
add
or
mov
inc
ror
fnstcw
ror
and
inc
or
icebp
in
(bad)
call
jno
(bad)
rcl
into
scas
xlat
push
loope
mov
mov
adc
repnz
loope
xor
jns
pop
push
sub
fsub
xchg
inc
mov
hlt
data16
shl
loopne
pop
test
sbb
les
push
in
pop
sub
sub
sub
xchg
pmaddwd
(bad)
cmp
xchg
xor
inc
imul
or
jno
gs
cmp
in
(bad)
adc
xchg
bnd
nop
movs
dec
stos
pop
out
add
lea
fldlg2
cmp
or
mov
lock
cld
cmp
sbb
sbb
lds
sub
xlat
data16
push
adc
ss
fadd
call
inc
push
sbb
hlt
cmps
sbb
adc
push
sbb
arpl
fidiv
sbb
pusha
xchg
mov
push
cmp
ins
push
jg
enter
fsub
sub
stos
iret
mov
xchg
js
(bad)
fld
ss
pop
xor
imul
jg
lock
popf
jns
adc
push
xchg
lods
pop
xchg
xchg
(bad)
in
sbb
movs
icebp
xor
ds
mov
icebp
and
in
stos
hlt
es
test
dec
cmps
mov
pop
out
mov
sub
popa
adc
pop
fwait
adc
movs
stos
clc
into
lds
nop
stc
jbe
in
stos
adc
daa
jl
push
into
cli
test
mov
jmp
adc
sahf
cmp
call
mov
add
inc
mov
jo
or
sbb
lds
sub
add
test
inc
add
shl
mov
xor
shl
js
das
loop
or
pop
jne
aaa
data16
and
jl
sbb
and
jbe
xor
rcl
mov
pop
jmp
and
cli
into
(bad)
out
mov
adc
xchg
(bad)
test
sub
test
sub
push
lahf
(bad)
mov
les
pop
sub
(bad)
rol
push
cmp
jmp
mov
jp
in
add
xchg
scas
call
aas
xchg
nop
test
fs
and
pushf
int3
and
(bad)
rol
ss
mov
and
ficomp
test
add
push
xor
gs
fadd
pop
cwde
mov
or
xchg
pop
xchg
pushf
mov
(bad)
int
push
mov
push
not
(bad)
xor
add
adc
pop
pop
mov
adc
sbb
out
xchg
rcr
leave
sbb
shl
shr
mov
fnstsw
mov
stos
js
sub
inc
xchg
nop
aam
pop
es
mul
and
or
js
jmp
cmp
push
and
inc
mov
and
dec
and
cwde
or
jnp
shl
test
xchg
pand
test
cwde
ins
sub
jb
fs
shl
mov
shl
add
leave
daa
aam
push
fs
ins
push
or
call
jcxz
push
ins
dec
or
aas
xor
push
or
(bad)
cmp
xlat
fwait
dec
and
xchg
inc
cmp
test
rcr
in
out
inc
aas
(bad)
sub
pop
scas
mov
mov
jbe
mov
jnp
(bad)
adc
test
data16
je
shl
out
push
cs
pop
loopne
rol
test
out
imul
ins
xchg
pop
and
sahf
arpl
dec
xchg
cmp
jge
xchg
out
fs
pop
inc
cmc
jmp
test
shl
mov
sti
mov
jge
inc
inc
push
push
cmp
lods
jecxz
or
xor
inc
push
shl
push
das
test
add
jle
or
retf
jne
mov
fisub
sbb
ja
fist
sbb
jl
sbb
adc
mov
arpl
les
fdivp
ins
nop
(bad)
sub
data16
xchg
pop
int3
jnp
pop
jb
shr
ror
xchg
xchg
jl
inc
stos
repz
mov
or
std
push
push
data16
and
inc
lods
adc
aas
movs
add
scas
push
retf
shr
ds
pop
ja
jecxz
inc
dec
dec
add
pop
and
hlt
adc
and
std
dec
sub
aaa
movs
mov
in
sub
dec
(bad)
pop
adc
mov
jnp
xchg
mov
cmp
jb
mov
jb
inc
jb
xchg
and
jmp
push
sub
fidivr
stos
cmp
cmp
cmp
inc
xor
repnz
adc
outs
repnz
jp
xchg
jo
mov
inc
mov
cmp
mov
mov
stos
and
inc
mov
dec
xor
mov
hlt
pop
add
cmp
inc
cmp
rcl
(bad)
xor
in
add
push
jno
pop
(bad)
and
jg
lock
xlat
out
push
repz
fs
je
add
mov
sbb
leave
test
or
sbb
scas
jae
pop
xor
xor
cmps
xchg
pop
dec
fcom
mov
(bad)
bound
loopne
inc
mov
cld
hlt
jge
fstp
pop
sbb
mov
lods
jmp
xchg
jl
push
sbb
test
add
cmc
aam
(bad)
pusha
mov
scas
sub
ficom
xchg
sub
out
imul
fld
jg
add
mov
dec
call
movs
hlt
mov
adc
in
jo
ficom
add
lea
xchg
ret
mov
mov
movs
cmp
jmp
adc
push
push
mov
jnp
jne
into
ds
mov
movs
lea
jne
pop
push
aad
cli
push
and
add
out
or
xchg
leave
clc
xchg
shl
(bad)
push
mov
xchg
repz
add
addr16
aaa
je
rcl
dec
inc
xor
retf
mov
retf
add
mov
push
cmp
popf
sahf
and
adc
xchg
xor
les
xchg
push
repnz
jo
pusha
mov
add
mov
cmp
fisubr
fnstsw
jb
fcomp
sub
ja
and
std
dec
push
mov
mov
mov
nop
aam
test
das
cmp
mov
sub
repz
pop
pop
dec
das
std
dec
mov
push
push
mov
mov
xchg
stc
enter
out
mov
pop
push
mov
rcr
mov
lahf
jmp
aam
mov
cld
jp
and
ins
pop
jp
xor
mov
mov
fild
jmp
adc
mov
or
imul
cld
pop
jmp
add
pop
push
into
inc
pop
ins
repnz
mov
sub
ja
test
xchg
imul
movs
and
jle
movs
into
out
fwait
aam
pushf
cmc
pop
jnp
int
push
jae
jno
call
ficomp
mov
cmps
sbb
cwde
push
mov
push
xlat
stos
push
jns
push
sbb
lods
in
stc
fcomp
(bad)
xor
adc
movs
pop
retf
(bad)
fmul
mov
jne
enter
aaa
jg
pop
rol
pop
aam
dec
dec
dec
dec
jbe
mov
sbb
sbb
hlt
cmp
popf
pop
mov
(bad)
(bad)
cld
cmp
fwait
cmp
fstp
jnp
leave
sub
mov
std
fcom
mov
mov
(bad)
push
cmp
call
shl
mov
push
pop
lods
test
cli
and
rcr
aad
cmps
scas
movs
and
aam
cmp
mov
shl
inc
push
pop
cmp
add
mov
ret
scas
add
scas
iret
mov
inc
adc
mov
test
sbb
adc
adc
mov
cwde
sbb
mov
pop
mov
fwait
xlat
sbb
inc
imul
xchg
cmps
(bad)
push
retf
idiv
jl
sub
or
xor
mov
test
push
lods
or
or
es
mov
dec
sahf
aam
bnd
loope
and
or
dec
mov
jmp
leave
pop
mov
retf
mov
loope
xlat
mov
mov
sti
sbb
xor
add
stc
adc
and
mov
cmp
popf
jl
xchg
inc
mov
(bad)
sbb
mov
fdiv
cld
sub
dec
mov
add
inc
fimul
loopne
jl
or
ret
sbb
dec
lahf
mov
scas
mov
enter
sbb
gs
push
jmp
xchg
push
imul
test
fwait
ret
pop
(bad)
es
out
fnsave
push
(bad)
repz
sub
cmp
xor
push
mov
cmc
imul
mov
push
ds
mov
stos
add
out
mov
mov
mov
aas
shl
cmp
jmp
mov
mov
pop
sub
rol
adc
(bad)
(bad)
aam
ins
sbb
or
cmc
aaa
stc
dec
movs
dec
xchg
push
cs
rol
mov
(bad)
mov
and
(bad)
sbb
sar
into
lods
in
push
stos
js
and
xor
xor
aas
add
call
imul
ret
aas
lahf
sar
mov
or
loope
rcr
aas
adc
ins
mov
fistp
jge
lock
sti
daa
and
sar
jae
push
push
xor
repnz
add
bound
int3
xor
fwait
je
fld
xchg
jg
xchg
outs
and
daa
adc
lock
arpl
mul
sbb
jge
push
cmp
pop
xor
lea
xor
or
je
dec
push
movs
dec
xchg
pop
lods
dec
outs
cmp
and
xchg
ffreep
jecxz
push
mov
mov
adc
bswap
sbb
addr16
ss
pop
jge
xor
mov
and
add
neg
lods
paddsb
adc
cmp
cmp
dec
inc
dec
adc
test
fstp
test
sub
and
shl
cmps
lods
repnz
inc
fldenv
sbb
cmp
adc
cli
dec
and
mov
cs
mov
out
sbb
(bad)
jmp
lea
daa
not
rcr
jecxz
ret
lock
jmp
mov
out
fidivr
push
out
repz
ret
imul
cmps
scas
je
mov
sub
push
test
xchg
fnstsw
push
cmp
inc
ror
and
xchg
jg
lods
cmp
push
xchg
jl
mov
fistp
xchg
(bad)
cmp
xchg
out
mov
movs
movs
adc
(bad)
xor
hlt
xchg
xchg
call
xchg
data16
scas
cmp
loope
inc
pusha
and
jg
and
imul
fcom
sbb
jmp
stos
mov
imul
loop
xchg
es
bound
and
ret
scas
mov
movs
pop
ins
or
fcomp
fistp
and
dec
xor
ins
out
pop
inc
or
repnz
das
xchg
sbb
add
imul
stc
cli
(bad)
sub
sbb
int3
and
popf
push
inc
mov
sub
popf
xchg
and
pop
not
mov
(bad)
stos
nop
jge
addr16
sub
fnsave
pop
test
push
xchg
test
(bad)
sbb
sbb
loopne
cmc
pop
dec
jno
mov
adc
ins
jnp
cmp
stos
call
add
movs
fld
in
bound
and
faddp
rol
jo
test
jp
xchg
stc
jno
std
sbb
test
jg
xchg
pop
fldenv
sbb
dec
jl
cmp
push
mov
push
inc
or
jb
lahf
stc
sub
xchg
call
sbb
dec
dec
mov
dec
adc
sub
jmp
or
fild
repnz
xor
sub
cmps
adc
in
jae
xchg
aas
xchg
(bad)
pop
add
scas
sahf
sbb
punpckhdq
cmp
call
dec
aad
dec
cld
mov
repnz
xchg
inc
bound
xchg
(bad)
popf
popf
repz
scas
mov
pop
adc
ds
(bad)
jmp
(bad)
mov
test
fistp
fcomp
ret
(bad)
data16
mov
xchg
mov
dec
addr16
jb
sub
ffree
fs
not
sbb
cmp
xchg
psubusw
shl
icebp
or
dec
cld
fs
nop
(bad)
push
sbb
(bad)
arpl
in
stos
scas
push
mov
lahf
shl
mov
add
add
pop
scas
in
push
and
pop
fisub
cwde
dec
popf
pop
ret
jge
imul
clc
in
sub
xchg
pop
inc
and
out
test
mov
dec
mov
stc
mov
lods
cmp
aas
mov
push
adc
mov
cmps
add
sub
cs
sub
repz
mov
dec
das
and
pop
pop
mov
test
inc
sub
xchg
in
xor
cwde
movs
call
fisub
xchg
xchg
call
add
aaa
cwde
cdq
out
push
mov
pop
dec
int3
inc
retf
fisub
lea
mov
mov
xchg
or
push
ret
loop
mov
cdq
inc
sar
add
mov
sbb
inc
test
xchg
cmp
adc
cs
fmul
je
cwde
call
xor
popf
aam
sti
dec
sub
out
or
sbb
(bad)
xchg
jg
push
push
lea
pusha
cmp
jns
and
stc
outs
fdivr
bound
jmp
shl
pop
jns
imul
mov
mov
pcmpeqd
pop
inc
or
pop
mov
rep
xchg
push
mov
push
in
(bad)
mov
add
ins
mov
rcl
ins
data16
into
shl
xor
jmp
push
dec
push
rcl
mov
push
xchg
stc
mov
lods
pop
lea
jmp
fisttp
fdiv
sti
push
ja
popa
xchg
addr16
mov
xchg
scas
mov
daa
sub
dec
sub
sbb
mov
pop
sahf
dec
enter
cmp
xor
mov
push
scas
and
mov
cdq
mov
bound
or
mov
popf
jne
push
and
and
inc
xor
mov
pusha
dec
mov
sbb
xor
pop
dec
aam
mov
hlt
jmp
leave
icebp
jae
das
fld
jno
nop
xlat
and
mov
loopne
out
add
lds
test
daa
sub
ja
xchg
mov
xchg
leave
sbb
mov
jb
call
mov
xchg
retf
add
aas
(bad)
or
xor
das
adc
in
sbb
cmp
push
fwait
cmp
test
(bad)
ds
aad
fdivr
xor
mov
push
ret
or
xchg
inc
mov
out
fldcw
bound
push
sub
mov
(bad)
push
or
out
push
jb
push
xor
into
mov
lahf
iret
mov
or
in
ror
aaa
pop
call
inc
push
adc
ss
dec
sahf
mov
int
enter
add
sub
mov
mov
mov
pop
movs
movs
or
inc
das
jmp
maskmovq
mov
in
dec
push
sbb
or
stos
aad
push
add
fdivp
out
outs
scas
push
mov
pop
pop
movs
sub
push
nop
inc
gs
imul
clc
mov
cmp
sti
dec
cmp
ja
mov
ins
inc
mov
test
mov
xchg
mov
iret
mov
inc
sti
mov
fsubr
fnsave
or
imul
shl
jno
dec
jmp
test
retf
pop
or
pusha
inc
push
mov
fild
mov
mov
pop
jp
and
fnstenv
enter
nop
jge
out
fwait
pusha
ror
cli
pop
or
cmps
movs
in
bound
jmp
mov
pusha
add
pop
xor
mov
out
inc
mov
neg
(bad)
cmp
jo
sub
adc
mov
ss
inc
rcr
pop
std
ss
fwait
mov
xchg
call
jae
xor
sbb
xchg
fsub
mov
fistp
push
push
dec
lock
push
sub
cwde
int
(bad)
in
fld
push
sbb
mov
and
movs
push
cmps
push
dec
aam
add
(bad)
jb
clc
loop
jle
out
arpl
loopne
ret
adc
add
imul
jmp
push
sbb
jmp
imul
sub
(bad)
sahf
in
adc
les
cmc
jmp
mov
scas
xchg
mov
fwait
inc
xchg
fidivr
sub
imul
ss
jmp
je
xchg
jns
adc
test
and
jae
adc
je
repnz
inc
fsub
xor
xor
jmp
adc
sub
lds
imul
in
fldz
nop
or
add
loope
mov
ss
or
sahf
bound
(bad)
cmp
(bad)
xor
push
mov
jns
jle
loopne
sbb
jmp
fs
inc
jle
loope
mov
pop
dec
test
cmps
mov
mov
imul
ja
push
mov
in
shl
or
inc
je
(bad)
lods
test
and
test
test
fstp
and
into
(bad)
cwde
pop
iret
push
test
cmp
scas
jp
xchg
shl
stos
das
bound
sub
push
xchg
fdivr
add
push
jns
lock
jmp
jne
test
xor
push
jb
cmp
imul
test
jmp
cdq
inc
test
adc
pop
mov
fmul
cmp
fadd
xadd
sub
lds
out
pop
add
ficom
mov
mov
aaa
xchg
xchg
jge
inc
aam
adc
add
outs
retf
das
inc
cmp
inc
jg
or
dec
inc
hlt
cmp
pop
ins
stos
push
aas
dec
retf
sbb
das
mov
bound
addps
in
push
scas
cld
xor
dec
jle
ss
test
popf
fldcw
cwde
nop
mov
aaa
ja
stc
push
pop
push
push
pop
jb
aad
xchg
sbb
jecxz
jno
jl
in
mov
sti
jecxz
aas
aaa
xchg
mov
sbb
pop
cmp
mov
mov
ret
add
push
call
push
push
and
sbb
fnsave
push
lock
cld
bound
mov
push
mov
adc
jo
push
stc
imul
xchg
push
fidivr
cwde
inc
repz
push
shr
sub
neg
ret
sbb
shl
xor
cli
imul
mov
stc
or
test
xchg
jnp
daa
out
dec
loope
xchg
js
arpl
mov
jmp
or
mov
mov
mov
(bad)
adc
aad
jne
add
loop
int3
mov
lahf
xor
push
adc
and
sub
xor
cli
sub
nop
push
jecxz
leave
xchg
jmp
rol
adc
aam
imul
(bad)
stc
fidiv
xor
pop
cdq
pop
outs
or
fmul
stc
dec
xchg
enter
sub
fidiv
add
pop
out
cmp
sbb
dec
sbb
jle
push
sub
cmp
nop
xor
push
rcl
call
jmp
popa
mov
data16
clts
jae
lahf
bound
jp
xchg
clc
sbb
ins
push
(bad)
dec
sbb
les
out
popa
repz
or
cmp
push
imul
add
fwait
loopne
jp
sub
mov
fs
mov
dec
mov
add
adc
jecxz
push
jge
test
push
mov
scas
mov
add
mov
mov
pop
inc
into
retf
jmp
inc
test
lds
(bad)
mov
xchg
xchg
jo
mov
test
test
test
and
sbb
ss
or
mov
in
jmp
jl
add
icebp
mov
or
jp
sub
sahf
dec
pop
and
mov
sbb
pop
repz
inc
xor
or
hlt
mov
jbe
push
in
(bad)
fnsave
xor
dec
mov
push
gs
aad
stos
xchg
and
(bad)
jp
jne
pop
ror
add
push
outs
outs
jnp
(bad)
mov
std
loope
mov
imul
add
shr
out
into
add
(bad)
pop
and
push
jg
xchg
aas
jne
fdivr
push
mov
sti
cmps
les
sub
mov
ret
fsub
rcl
mov
sbb
and
js
sbb
in
cmp
xchg
frstor
cli
jae
fs
adc
cmps
popa
movs
retf
adc
mov
xchg
or
imul
dec
xchg
(bad)
mov
or
rcl
jle
in
in
mov
or
lods
je
add
mov
repz
imul
fisttp
inc
test
leave
daa
dec
sub
pop
jo
fcom
call
mov
cmp
arpl
movs
aas
addr16
fnstcw
call
mov
pop
push
loop
sub
(bad)
and
push
pop
push
or
leave
xor
or
mov
shl
xchg
scas
sbb
xor
dec
jg
sbb
and
sub
xor
mov
dec
xlat
or
in
add
jnp
pop
cli
pop
xor
push
rcr
aaa
test
retf
mov
scas
mov
and
cwde
push
fucom
in
dec
mov
or
sub
xchg
je
dec
sar
pop
sbb
mov
mov
and
test
jge
jecxz
aas
or
dec
xor
or
jno
aad
das
pushf
jl
jecxz
mov
dec
push
mov
mov
in
adc
fld
adc
mov
mov
rcr
fcom
mov
and
pop
sbb
mov
jg
mov
bound
and
mov
push
aaa
pop
dec
pushf
or
xchg
lahf
gs
rol
ret
sbb
popw
or
lea
fs
lds
popf
mov
sahf
xchg
int3
dec
or
jle
popf
div
rol
push
jne
dec
push
jbe
stc
(bad)
push
fwait
aam
inc
aad
shr
ret
cmp
into
mov
mulps
xchg
pop
adc
and
ret
inc
fidiv
push
pop
and
ret
xchg
scas
add
fstp
gs
lea
fistp
inc
inc
sti
daa
adc
lods
test
(bad)
in
mul
aam
jge
cmp
fs
loop
xchg
fwait
int
lods
lea
add
fld
jle
ins
shl
sbb
cmp
movs
retf
sbb
jle
sub
not
and
pusha
jae
cmps
mov
mov
add
in
stc
into
jns
push
xor
mov
popf
(bad)
mov
xor
inc
outs
jge
test
mov
sub
cs
mov
bound
add
add
out
add
call
mov
inc
jge
and
aam
(bad)
in
pop
jle
cwde
ja
into
and
cmp
repz
or
loop
daa
jae
lods
loopne
out
pop
cmp
jmp
outs
xchg
sub
dec
pavgb
jmp
mov
push
imul
cmp
xchg
add
sbb
dec
fst
dec
mov
aaa
pop
pop
push
jmp
mov
adc
xor
jmp
or
mov
aas
push
ss
xchg
push
call
pop
lock
mov
cmps
outs
or
adc
and
adc
inc
push
jp
int
push
cli
inc
int3
cmp
jmp
add
xchg
xor
cmps
ss
leave
lea
jno
sbb
test
mov
cmp
push
rcl
lea
push
iret
outs
inc
shl
and
cmp
cmp
loopne
fcmovne
add
sbb
mov
repnz
xchg
push
mov
and
sahf
loop
push
out
shr
mov
inc
ret
jg
ins
imul
aad
mov
sbb
dec
leave
pusha
popf
dec
pusha
pop
int3
cmc
xor
bnd
ret
lds
scas
sub
add
and
ins
pushf
xchg
jle
mov
int
aad
fsub
jmp
pop
out
push
push
inc
cmp
xchg
push
out
xor
jne
int3
pop
or
mov
fstp
or
and
inc
fnstenv
adc
fldcw
jb
mov
(bad)
jl
jnp
pop
pop
mov
xchg
jmp
add
push
xlat
mov
push
and
mov
not
lock
shl
bound
mov
cwde
push
cmp
call
das
popa
sbb
pop
leave
pop
pop
ss
daa
xchg
cmps
and
fisub
test
or
push
pop
jns
push
inc
sub
movs
fwait
xor
pop
hlt
xrelease
jae
fbstp
or
pusha
mov
pushf
sbb
loopne
cli
out
sub
fsubr
jg
cmp
jecxz
xor
cld
ins
adc
dec
jae
add
aaa
mov
sbb
sahf
dec
pop
mov
scas
(bad)
(bad)
mov
test
jp
and
lock
(bad)
fsub
mov
jno
popf
test
cmp
jp
pop
jmp
ss
shr
dec
push
in
pop
shl
test
lods
test
cs
push
in
dec
jne
mov
xchg
or
cpuid
sub
cld
gs
mov
fdivp
aas
lds
push
mov
jmp
out
loop
sbb
and
xor
mov
mov
loope
aam
adc
pop
movs
jge
(bad)
fistp
mov
sub
sbb
outs
fnsave
sbb
add
pop
fld
pop
mov
sub
dec
inc
fadd
cmp
hlt
in
lods
iret
mov
leave
in
sbb
rol
out
dec
int3
in
movs
retf
cdq
lock
loopne
or
not
xchg
or
outs
mov
into
arpl
sub
mov
stos
mov
push
cmc
ret
std
xchg
(bad)
ins
call
pop
inc
add
mov
js
mov
mov
rol
fdiv
outs
sub
mov
cmp
and
sbb
mov
sti
loope
retf
inc
std
xchg
inc
pop
fs
mov
cld
cmp
dec
stc
sub
out
rcl
mov
mov
or
inc
xor
pop
xor
adc
sti
jl
and
xchg
into
(bad)
sub
xchg
call
cmp
inc
inc
inc
lods
jae
push
cmc
imul
iret
mov
aad
dec
add
test
xor
lds
xchg
test
cmps
push
cmps
aas
pop
add
div
lock
inc
adc
es
or
in
in
jo
jge
jae
lods
xchg
cmp
into
jb
cdq
fs
daa
adc
out
xor
mov
xlat
(bad)
jnp
fbstp
mov
inc
push
mov
push
dec
arpl
ja
xor
(bad)
bswap
lahf
int3
inc
(bad)
gs
xor
jecxz
aas
movs
xor
jmp
add
dec
les
shr
scas
(bad)
mov
fstp
sub
pop
cmp
or
inc
sar
std
lea
movs
xchg
fdiv
fisttp
cmp
hlt
ret
movs
or
xor
sbb
jb
int
rcl
into
cmp
pop
and
push
ror
imul
jnp
fldenv
push
in
jno
mov
mov
idiv
adc
cmp
hlt
mov
add
mov
mov
sbb
inc
test
movs
jp
mov
cdq
std
add
mov
and
push
in
outs
(bad)
cmp
sbb
inc
mov
dec
and
dec
dec
mov
or
es
addr16
pop
popa
push
fisttp
call
inc
leave
add
nop
repnz
push
popf
cmp
ins
call
and
jne
mov
sub
adc
pop
jmp
cmp
xchg
pop
sbb
sub
xchg
cld
cmp
add
nop
jae
dec
rcl
jnp
mov
popf
cmps
xchg
cmp
xchg
jmp
mov
fucomp
loope
pop
call
(bad)
ss
hlt
jecxz
test
mov
fdivrp
sub
xor
inc
not
sbb
inc
and
cmps
dec
lds
or
jp
sbb
clc
nop
movs
xlat
(bad)
sbb
cdq
nop
out
aaa
push
fldcw
dec
sub
jle
loopne
and
dec
push
movs
push
jp
in
sub
test
cmps
pop
out
inc
imul
fst
jbe
iret
sti
movs
arpl
pop
dec
push
jbe
and
imul
mov
push
adc
fimul
je
std
cmp
inc
add
je
jbe
call
jecxz
mov
pop
vpunpckhqdq
inc
push
(bad)
loop
cwde
dec
mov
and
call
mov
nop
das
pusha
nop
mov
lock
mov
(bad)
test
retf
dec
mov
call
stos
adc
repz
cs
inc
cdq
jne
mov
cmp
or
or
or
sbb
iret
data16
mov
or
pop
push
push
or
dec
arpl
popf
mov
test
and
leave
pop
and
lea
xchg
inc
int3
ins
icebp
push
jns
jns
js
jae
data16
xor
shr
not
lea
scas
cld
dec
imul
daa
std
mov
lds
ins
das
sti
mov
ror
push
mov
stos
imul
das
sbb
jne
mov
or
sti
lahf
mov
ret
lock
sub
fnsave
or
fndisi(8087
sbb
test
or
(bad)
stos
clc
inc
push
stc
popa
data16
pop
pop
cmp
dec
retf
adc
add
shl
jo
in
bound
popa
call
(bad)
repnz
(bad)
push
popf
mov
adc
or
mov
mov
xor
int3
mov
sub
and
jecxz
fldenv
xchg
bound
or
push
or
pop
cmp
mov
(bad)
test
pusha
push
adc
pushf
xor
dec
retf
jle
mov
jmp
shrd
out
jl
xchg
cwde
pop
enter
inc
and
stos
(bad)
sub
clc
xchg
push
push
push
bound
(bad)
aad
push
loop
icebp
movs
pop
pop
sub
pop
stos
mov
push
leave
xor
mov
lock
sar
imul
iret
add
outs
mov
(bad)
daa
cmp
stc
es
push
enter
inc
in
adc
mov
adc
sar
mov
sar
inc
dec
and
fs
jns
push
sbb
pop
push
add
jp
retf
dec
mov
addr16
mov
mov
and
rcr
inc
sbb
push
mov
xchg
clc
adc
dec
retf
je
pop
adc
test
stos
hlt
rol
or
sahf
leave
repz
fcomip
inc
fidivr
call
adc
xor
mov
xor
aas
ret
jp
mov
cs
sbb
mov
cmp
and
nop
loopne
inc
jl
mov
push
js
repz
test
out
out
or
mov
cmp
and
xor
fcmove
aas
fist
push
js
inc
sub
mov
jmp
dec
or
mov
adc
and
ins
gs
cmc
test
stc
or
and
pop
psrlw
jbe
pusha
fmul
xchg
shl
dec
sar
inc
push
retf
sub
stc
and
aas
pusha
hlt
aad
xchg
pop
out
mov
xchg
push
leave
fadd
or
push
dec
jl
pop
pop
test
sbb
pop
push
dec
rol
xor
repz
call
icebp
cmps
in
int3
sub
mov
xchg
jecxz
push
sbb
jns
pushf
pushf
mov
ins
int
inc
into
cmp
test
ret
and
jo
ins
cwde
xchg
repnz
fild
mov
test
ins
cmp
addr16
jle
hlt
push
xchg
mov
fisub
fmul
popf
das
gs
or
ret
cmp
mov
dec
iret
hlt
fisubr
mov
push
test
push
sub
pop
adc
cld
mov
into
jb
mov
je
and
xchg
sub
(bad)
and
test
ins
sbb
(bad)
sub
pop
inc
iret
xchg
cmp
adc
mov
add
xor
sbb
push
dec
jmp
pop
(bad)
jo
push
clc
jl
pop
cli
jno
add
lods
das
adc
push
sub
sbb
mov
cmps
adc
out
cmp
or
xor
js
push
mov
xor
add
int
push
arpl
hlt
inc
dec
jo
pop
outs
mov
imul
ins
jno
push
repz
sub
sub
mov
ds
test
scas
cmp
lods
mov
ja
sub
pop
xor
cwde
mov
data16
ins
add
stos
(bad)
cmps
pop
jle
sbb
mov
sti
ss
dec
dec
mov
pop
push
sbb
popf
stos
ret
lds
sub
push
repnz
mov
mov
or
mov
jg
xchg
mov
pushf
retf
jno
inc
or
xor
bound
cmp
outs
xor
outs
cli
jae
leave
(bad)
dec
or
int
and
jae
mov
mov
push
cmp
xor
rcl
mov
push
(bad)
(bad)
(bad)
push
xor
stc
scas
xchg
les
dec
cmp
mov
into
(bad)
mov
sahf
and
fucomip
and
jbe
mov
inc
sub
lods
jns
fmul
loopne
in
xlat
xlat
sub
xor
ins
aam
sbb
mov
adc
mov
and
xchg
sahf
sub
and
push
mov
mov
jae
cmc
addr16
loop
xchg
jno
imul
stc
push
mov
ret
nop
add
enter
int3
into
mov
xchg
neg
sbb
mov
push
lock
aas
fstp
and
dec
jg
rol
mov
xchg
test
sbb
fcmovne
dec
fstp
sbb
repz
adc
inc
sub
dec
sub
mov
rcr
sub
mov
cs
jecxz
ja
inc
outs
dec
or
scas
cwde
cs
cmp
repnz
jp
(bad)
pop
test
sbb
js
cdq
and
fisttp
cmc
out
sub
xor
inc
in
loop
sub
push
cmp
jecxz
retf
ret
xchg
out
adc
jns
icebp
jae
adc
mov
test
jnp
push
enter
xchg
push
jb
and
pusha
repnz
jnp
mov
add
mov
fidiv
int
das
in
and
cmp
rcl
mov
pop
xchg
inc
mov
ss
lea
pop
pop
mov
outs
fadd
sbb
mov
lea
jp
jns
int3
fwait
cmc
and
test
je
push
data16
arpl
cdq
dec
fcom
fs
sub
push
(bad)
and
scas
lods
stos
movs
dec
or
jp
jae
scas
adc
sbb
(bad)
fwait
jg
(bad)
int3
xchg
cmps
inc
scas
add
popa
loop
add
jo
mov
mov
and
pusha
hlt
std
or
pop
inc
jbe
pop
xor
xchg
xchg
adc
addr16
or
push
push
mov
addr16
retf
aam
jge
call
jl
inc
or
enter
fs
cmp
js
stos
movs
jp
xchg
mov
push
mov
lods
pop
cmc
jp
adc
pop
adc
dec
pop
(bad)
fwait
test
rol
ds
ret
out
mov
adc
inc
mov
sub
pop
mov
lahf
sub
sub
cmc
lock
xchg
loopne
mov
sub
or
cld
jnp
icebp
bound
sub
(bad)
dec
imul
fwait
ret
mov
sub
aas
jns
dec
test
xor
hlt
fs
repnz
cmps
(bad)
dec
aas
arpl
or
(bad)
push
leave
lods
adc
fwait
jge
in
(bad)
std
iret
and
outs
imul
call
sub
jmp
push
sub
xchg
push
jmp
gs
cmp
or
push
outs
(bad)
mov
movs
aaa
and
popf
pop
fidiv
mov
cmp
xchg
scas
test
lods
inc
les
sub
stc
ret
movs
mov
sub
test
jne
add
jno
cmp
jmp
mov
fmul
and
push
jl
pop
push
push
lahf
push
sub
mov
and
mov
fst
cwde
inc
cli
dec
sbb
fcomip
call
repnz
rcl
sbb
jno
ficom
fimul
jnp
aam
hlt
arpl
fdivr
jae
test
mov
sbb
lods
(bad)
add
xchg
test
outs
ja
mov
pop
mov
sub
movs
fcomp
cli
and
test
aas
ficom
bound
icebp
repnz
int
xchg
push
clc
das
(bad)
and
xchg
jb
and
shl
sub
fwait
data16
pop
cs
in
in
mov
add
arpl
stos
mov
je
adc
fist
mov
or
xchg
jle
stos
test
fistp
imul
jb
fisttp
xor
call
aaa
out
jae
aaa
movs
push
(bad)
idiv
jg
push
fldcw
cmp
xor
push
inc
bound
int3
enter
retf
jnp
adc
loop
ss
jmp
ret
mov
mov
aas
mov
jae
xchg
hlt
bound
sahf
jbe
ins
in
popf
xlat
add
mov
mov
add
loop
xchg
fsubr
(bad)
adc
inc
into
ins
sbb
adc
adc
ror
dec
call
les
loopne
xor
jp
push
icebp
cmp
mov
das
call
dec
out
cmps
mov
in
or
pop
(bad)
(bad)
aam
in
mov
jge
dec
pop
loopne
xchg
daa
cmc
xchg
pushf
pop
jp
arpl
jns
sbb
jbe
ja
and
or
add
cmc
mov
mov
sbb
daa
push
inc
scas
xchg
fcomp
push
and
(bad)
push
pop
pop
jmp
loop
enter
fmul
test
gs
sbb
sbb
pop
loopne
pop
bound
add
loop
hlt
xchg
jno
(bad)
cli
ds
add
push
sbb
out
aas
retf
sbb
cmc
repz
dec
sbb
mul
lahf
mov
pop
cdq
cmp
fnstenv
mov
cli
mov
cmp
cmp
cmp
and
fistp
xor
inc
or
int3
adc
icebp
push
sub
push
int
fldenv
in
popa
xchg
jns
stos
dec
adc
adc
ins
add
loopne
daa
push
(bad)
cmp
mov
lds
xor
aaa
repz
cwde
pushf
aaa
xchg
shr
pop
pop
jl
test
cmp
daa
mov
mov
inc
sbb
into
xchg
pop
mov
adc
aam
dec
sahf
mov
das
inc
inc
cmp
int
sar
and
imul
inc
cmc
imul
mov
or
mov
xchg
and
xorps
int
cmp
inc
test
(bad)
mov
mov
fst
push
cmc
sar
mov
arpl
pop
fnsave
cmp
sub
scas
out
and
mov
add
outs
js
adc
and
ret
into
dec
(bad)
cmp
mov
movs
call
sbb
inc
sbb
sub
call
inc
cmp
mov
loope
fwait
outs
xor
pushf
mov
aas
test
frstor
jge
adc
cmps
(bad)
test
(bad)
push
rcl
repnz
cmp
xchg
js
inc
and
in
xchg
add
mov
mov
ror
test
xlat
sti
jecxz
sub
rcr
push
cmp
popa
push
push
xor
(bad)
gs
neg
fbstp
pop
mov
jo
(bad)
push
mov
xchg
(bad)
xlat
inc
out
(bad)
and
sbb
jnp
test
cmp
stc
dec
fs
pop
mov
adc
mov
mov
hlt
mov
js
mov
jge
ror
mov
fidivr
mov
cmp
pop
loop
dec
mov
mov
push
loope
movs
pop
sub
iret
mov
or
cli
movs
aaa
adc
and
iret
mov
jae
lahf
int3
xchg
jo
ins
fmul
push
pop
je
call
repz
xor
pop
fsubr
mov
fdiv
shl
mov
out
inc
iret
and
inc
int3
jno
sbb
or
(bad)
jmp
loop
add
sub
mov
in
and
psraw
xor
mov
out
or
(bad)
fadd
cmp
sub
pop
not
jl
pop
dec
dec
je
clc
adc
out
push
dec
ror
or
push
test
lods
inc
mov
(bad)
push
mov
in
movs
test
add
pusha
js
mov
or
test
stos
popa
lods
cmp
out
mov
jbe
mov
or
nop
fcom
jns
jb
jp
test
xchg
lds
dec
inc
push
sub
int3
mov
add
fiadd
mov
movs
inc
mov
xor
jb
mov
std
test
mov
fiadd
jge
inc
popf
cdq
(bad)
repnz
(bad)
daa
sub
dec
dec
cmp
or
and
pop
int3
into
mov
push
retf
sub
sahf
enter
mov
sbb
xchg
call
sbb
in
mov
mov
jecxz
inc
mov
dec
pop
pop
inc
xchg
das
dec
popa
dec
sub
cmp
div
fist
push
mov
push
jg
and
adc
into
pop
mov
pop
dec
mov
shl
sbb
push
les
jo
fldcw
inc
retf
fsubr
sar
xchg
inc
xchg
jl
dec
inc
test
mov
mov
cmps
mov
gs
or
or
adc
idiv
jne
xchg
dec
adc
xchg
nop
sub
div
cmp
sub
dec
jge
fcmovb
or
out
cmps
jbe
add
mov
xlat
sub
mov
inc
les
mov
sbb
adc
rcl
sub
hlt
lods
nop
(bad)
out
cs
lea
mov
(bad)
(bad)
mov
inc
dec
mov
mul
popf
adc
dec
inc
xlat
mov
xchg
fwait
add
enter
mov
out
push
rol
fidiv
sub
test
daa
gs
cmp
std
sub
bound
mov
loope
shr
inc
in
inc
ret
and
mov
push
movs
test
xchg
mov
pop
jmp
shl
movs
nop
inc
cmp
mov
pushf
dec
cli
leave
outs
cmp
and
adc
jae
jg
xor
mov
gs
inc
inc
mov
ja
es
xchg
icebp
mov
or
mov
xchg
sub
or
mul
add
std
mov
push
(bad)
adc
jae
sbb
xchg
mov
movs
sar
jle
push
sar
sub
aas
mov
jg
out
mov
mul
jo
push
dec
div
movs
jae
iret
xor
or
and
dec
dec
push
mov
cld
les
jbe
jmp
mov
adc
popa
xor
mov
pop
xchg
inc
adc
mov
sbb
out
push
fdivp
rdpmc
inc
js
pop
sub
cmp
arpl
jle
ret
aas
cmp
popa
sahf
test
loopne
movs
xchg
outs
adc
cwde
xchg
push
push
ror
cmp
ret
bound
aas
pop
pop
ja
shr
stos
fisub
repz
mov
stos
sub
sti
cmp
mov
pop
ss
(bad)
cld
and
jno
sbb
and
sbb
mov
fcomp
push
and
loopne
inc
lea
adc
out
jmp
mov
mov
jo
xor
cdq
test
cdq
inc
add
je
jns
cmp
into
movs
cwde
test
mov
mov
add
movnti
test
loopne
pusha
lea
jmp
inc
bound
fadd
or
dec
jl
stos
stos
add
js
jno
shrd
cmp
adc
mov
fdiv
pushf
push
or
pop
daa
jg
inc
sub
or
scas
mov
enter
in
xchg
mov
test
mov
dec
mov
push
pop
mov
or
(bad)
add
pop
mov
xchg
mov
les
sub
mov
pop
mov
test
test
dec
xor
stos
mov
movq
mov
bound
enter
dec
and
jecxz
out
push
mov
sub
cs
adc
cmp
jnp
in
stc
dec
test
das
adc
(bad)
adc
aaa
xor
fnstsw
and
lock
xchg
icebp
(bad)
imul
mov
push
aam
xor
xlat
lahf
xor
je
(bad)
adc
icebp
pusha
retf
fisubr
pop
outs
adc
loop
cmp
ss
jge
push
je
jo
leave
sub
xor
pop
int
out
cmp
and
sar
fdiv
ficom
out
int
xor
add
pushf
cwde
lahf
pop
sub
out
inc
fmulp
adc
inc
push
adc
mov
call
push
mov
pop
or
mov
jp
xchg
pop
mov
or
dec
sbb
ds
inc
stc
push
out
test
pusha
loope
rcl
xchg
je
cs
iret
ror
hlt
iret
bound
jge
test
out
jne
push
clc
push
enter
(bad)
out
hlt
nop
adc
(bad)
ja
stc
xchg
fstp
jge
mov
ins
scas
(bad)
mov
mov
mov
mov
mov
in
scas
and
pushf
js
push
lods
cmps
jmp
les
rcl
mov
inc
in
inc
inc
fnstcw
push
cli
out
call
and
or
mov
fistp
fsubp
mov
adc
std
xchg
dec
mov
sbb
mov
sub
xchg
add
shl
pusha
jg
xor
js
lahf
push
imul
sub
imul
push
test
cmp
mov
or
aam
mov
inc
jae
mov
lock
scas
push
mov
mov
add
gs
pop
add
pop
sbb
ficomp
pusha
inc
bound
mov
in
stos
mov
fs
test
arpl
shr
out
sbb
or
mov
sbb
push
mov
jmp
cmp
enter
sbb
cwde
fisttp
(bad)
lahf
cmp
sti
iret
mov
xchg
xchg
aaa
inc
add
jbe
movs
or
in
mov
or
mov
pop
jo
out
xchg
sub
or
retf
and
or
mul
or
fld
lahf
cmp
movs
xchg
mov
xchg
(bad)
fnstcw
les
and
loope
arpl
add
fnstenv
pop
outs
div
daa
outs
hlt
out
mov
add
fstp
mov
jle
mov
stos
mov
into
jo
jp
xchg
and
aad
sub
or
retf
outs
fld
icebp
out
ds
loope
clc
sub
mov
mov
test
pop
movs
jl
enter
sub
mov
jmp
push
pushf
sub
fsub
pop
jns
dec
xchg
fdivp
xchg
aad
shl
jecxz
adc
cli
add
ret
repz
test
cmp
leave
ret
mov
pop
cmps
enter
adc
fisttp
movs
or
mov
out
xor
rcr
sbb
xchg
dec
retf
test
scas
test
bound
popa
outs
ret
xor
arpl
stos
jg
pop
pop
xlat
sbb
mov
mov
int3
mov
xor
mov
imul
es
imul
mov
mov
test
imul
mov
xchg
mov
dec
pop
aam
dec
mov
dec
sub
pop
jae
sub
ins
retf
xor
push
jne
cmp
cs
popa
mov
bound
pop
mov
jle
fwait
dec
pop
jns
inc
push
mov
inc
push
inc
out
gs
inc
jnp
scas
xchg
xor
icebp
inc
sar
fwait
inc
jp
lahf
leave
push
inc
fs
stc
mov
jmp
daa
add
mov
push
sub
jno
cmc
xchg
inc
or
mov
lods
add
or
test
pop
retf
adc
mov
xchg
push
std
mov
cmc
mov
cwde
bound
push
lahf
clc
add
enter
xchg
or
jg
and
shl
popa
repz
pop
movs
iret
test
push
leave
(bad)
je
sub
mov
pop
push
into
(bad)
lods
inc
add
jb
sub
(bad)
loop
inc
inc
gs
inc
int
mov
sar
enter
push
push
inc
xchg
arpl
sbb
loop
in
arpl
lock
(bad)
or
dec
stc
dec
mov
(bad)
(bad)
cmp
sar
mov
inc
jmp
ins
sub
mov
sar
test
xchg
inc
push
sbb
pop
push
mov
nop
not
mov
leave
fisub
xor
mov
in
aas
pop
mov
shr
xor
add
(bad)
aam
add
iret
lods
(bad)
inc
jp
xchg
inc
add
mov
add
mov
adc
mov
popa
call
mov
or
in
inc
inc
mov
jbe
cmp
popa
cmp
xor
das
ja
sub
dec
mov
js
fwait
inc
and
mov
(bad)
movs
dec
jno
jl
inc
sub
cmps
ror
(bad)
push
inc
and
adc
or
or
mov
loopne
repz
ins
xlat
shl
sbb
and
pushf
enter
xchg
adc
pop
adc
mov
gs
das
sar
jno
lods
pop
lea
imul
aas
jecxz
leave
leave
mov
or
sbb
sub
iret
les
or
ins
outs
dec
mov
sar
call
cmp
leave
cmp
(bad)
pop
js
push
jl
loopne
push
cmps
fstp
test
in
in
pop
sub
jmp
pop
xchg
cmp
xor
ss
test
sbb
jle
sbb
and
sbb
(bad)
dec
lahf
stc
leave
jbe
movs
dec
ret
fld
add
popa
shufps
cmps
xor
cwde
test
shr
mov
jge
jb
sub
push
movs
nop
jno
jg
rcl
gs
sbb
or
outs
push
arpl
or
shl
nop
aas
int
scas
cmp
add
push
bound
jg
sub
loopne
mov
jo
out
mov
cs
lods
std
call
cdq
xchg
popa
pop
mov
fldenv
hlt
ds
(bad)
nop
imul
int3
mov
push
daa
cmp
jl
mov
les
cmp
cmc
xchg
mov
fs
jbe
or
(bad)
jo
dec
xor
push
in
dec
mov
dec
pop
mov
sbb
fidiv
add
and
(bad)
xchg
fiadd
push
in
adc
mov
mov
out
push
popa
dec
mov
sub
dec
movs
xor
sti
xchg
sar
in
js
sbb
aam
pop
xor
jne
pushf
and
lods
adc
pop
pop
sbb
jg
pop
inc
sbb
test
imul
pusha
test
mov
ret
popf
outs
(bad)
push
cdq
push
mov
push
cmp
jb
mov
fwait
mov
pop
cmp
cmc
adc
fs
ins
in
jo
call
mov
and
mov
imul
in
adc
push
and
push
mov
ret
into
xor
std
jl
cmc
test
fisttp
jle
inc
dec
or
add
fiadd
mov
(bad)
scas
mov
push
gs
loope
inc
hlt
jg
imul
lock
add
mov
dec
pop
aas
and
lods
cli
cmc
(bad)
ins
jp
in
fwait
add
popf
fwait
out
xor
out
pusha
add
mov
jnp
mov
pushf
out
adc
ret
fsubr
jmp
mov
bound
ss
mov
mov
dec
cmc
aad
aaa
sbb
mov
or
sbb
test
ins
push
pushf
mov
jne
pushf
call
iret
aam
push
sub
shl
data16
push
xchg
jne
pusha
mov
lock
dec
fisubr
xor
push
lahf
pop
and
int
in
and
clc
sub
sbb
pop
ja
sub
add
ror
xor
ret
pop
mov
jle
pop
imul
nop
pusha
pop
ins
popf
fwait
push
xchg
jnp
aad
loop
aad
pop
or
xchg
push
(bad)
clc
movs
add
sbb
mov
jecxz
add
sbb
pop
or
push
ret
fs
push
sbb
push
int3
xor
jecxz
pop
xor
in
or
out
mov
jnp
mov
std
push
(bad)
rcl
dec
xchg
adc
jno
scas
mov
mov
adc
pop
mov
jecxz
mov
out
inc
pop
mov
pop
into
xchg
retf
mov
mov
jnp
stos
cmp
fdiv
adc
test
xchg
mov
cli
es
std
mov
out
pop
adc
in
clc
mov
lahf
rcl
cdq
aaa
jmp
call
retf
div
push
mov
or
pop
aaa
out
sbb
outs
sbb
jg
add
cld
inc
xchg
loope
sub
sbb
in
xchg
push
jb
test
imul
mov
jae
gs
(bad)
push
or
add
rol
xor
and
iret
into
and
dec
icebp
inc
cmp
pop
xor
loop
nop
sbb
mov
mov
sbb
jb
xchg
mov
or
and
adc
aam
iret
clc
sar
cwde
aad
lods
pusha
int3
inc
pop
(bad)
jmp
pushf
shl
mov
or
inc
addr16
inc
cmp
mov
mov
xchg
call
sub
xchg
pop
pop
fistp
gs
out
mov
lahf
push
jmp
daa
pop
cmp
ss
int3
push
inc
adc
imul
and
retf
add
es
mov
cmp
std
daa
retf
inc
sahf
(bad)
inc
pop
cmp
aad
jg
das
and
xor
fisubr
pop
stos
movs
mov
push
jp
sti
jns
dec
sar
mov
inc
pop
es
mov
ror
stos
sahf
add
cmps
mov
les
bound
or
hlt
lods
fcom
sbb
jae
das
mov
or
mov
out
mov
sub
mov
das
les
mov
mov
cmp
(bad)
mov
icebp
mov
dec
and
add
push
fst
aas
mov
cmps
push
push
sbb
add
pop
xchg
ja
pop
cs
or
xchg
xchg
repnz
mov
sbb
and
and
lock
mov
pop
das
push
sahf
stos
arpl
icebp
push
pop
jbe
les
mov
xchg
or
pop
adc
sbb
or
sub
jns
mov
push
ficomp
jno
loop
jo
cld
or
aad
daa
sub
ret
imul
js
adc
cmc
int
sahf
sbb
pop
mov
les
repnz
retf
or
pop
data16
test
jecxz
mov
cmp
shl
cmp
(bad)
cld
mov
adc
popf
mov
ficomp
cmp
jnp
push
inc
fsubr
cld
shl
stos
and
pop
dec
inc
(bad)
(bad)
mov
sub
test
hlt
cmp
(bad)
aas
sbb
js
jp
sbb
ja
sub
jno
xlat
mov
xor
or
pop
stc
mov
movs
mov
pop
dec
adc
mov
cdq
or
call
jno
call
jmp
cmps
repz
loope
mov
repz
lods
test
jle
or
or
xchg
mov
mov
mov
and
jg
pop
loopne
and
cmps
push
inc
loop
shl
sub
loopne
(bad)
mov
fiadd
ficom
mov
outs
pop
mov
sub
sbb
or
pop
xor
mov
xlat
mov
lea
push
sub
push
mov
loop
mov
aas
in
inc
inc
sbb
adc
nop
enter
scas
push
sahf
inc
retf
lds
jecxz
stc
adc
ds
jo
cmps
dec
sub
xor
sbb
dec
int3
fcom
push
adc
jmp
cs
sub
xor
jne
fmul
out
pop
lahf
jmp
pop
in
shr
xchg
sbb
mov
jmp
out
cmps
lds
(bad)
mov
add
add
aam
and
dec
mov
mov
iret
dec
push
jge
push
mov
in
addr16
mov
ins
xlat
gs
cdq
loope
mov
ins
ins
hlt
xlat
cmps
adc
pop
mov
pop
sar
ins
movs
xor
pushaw
mov
mov
into
lock
ins
scas
mov
movs
(bad)
dec
gs
retf
sub
xor
and
jle
adc
fmul
dec
jns
data16
into
dec
js
outs
into
mov
pop
outs
jns
outs
inc
push
lods
shr
aas
add
dec
nop
pop
in
std
jbe
sub
fild
es
shr
cs
clc
jecxz
cmp
jge
ret
test
adc
inc
jmp
gs
movs
loope
push
dec
test
xchg
mov
pop
pop
retf
lds
dec
or
test
sbb
or
ds
cmp
ret
rol
sahf
loop
push
inc
scas
fs
mov
or
clc
pmulhw
in
cmp
xor
scas
cmps
xchg
push
mov
jno
lds
pusha
sbb
sbb
mov
xor
sbb
scas
adc
mov
clc
sub
lods
movs
out
icebp
jne
out
dec
adc
inc
(bad)
mov
push
std
fnsave
cmp
cs
adc
push
scas
iret
or
dec
(bad)
div
sbb
mov
nop
adc
sub
lock
inc
jno
out
lock
or
jo
inc
adc
jo
(bad)
cmps
daa
(bad)
mov
(bad)
mov
loope
jbe
popf
ds
xor
jb
and
jle
cld
inc
aam
test
push
jbe
mov
ret
xlat
nop
adc
fisubr
push
jb
lods
jp
iret
xchg
sbb
fs
nop
adc
pop
jmp
outs
pushf
movs
inc
pop
xor
repnz
ds
aas
sbb
and
lea
mov
mov
movs
inc
frstpm(287
push
adc
iret
jp
dec
scas
aaa
nop
jne
adc
lock
jl
nop
mov
dec
mov
dec
mov
ror
xchg
aad
jmp
sub
test
idiv
cs
fisubr
aam
sbb
and
je
cmp
retf
jmp
loop
inc
fadd
sahf
xchg
loopne
das
add
mov
int
outs
ds
sub
daa
mov
lods
out
push
loopne
jns
sbb
aas
das
push
sub
cdq
dec
inc
adc
or
retf
jl
and
int
push
pop
sbb
jo
(bad)
es
mov
aaa
push
jns
mov
mov
xor
leave
repnz
ja
xor
call
jp
in
push
xor
mov
into
aad
mov
fidiv
mov
adc
loop
and
cli
xchg
mov
js
dec
mov
sbb
loopne
shl
shl
xchg
xor
jmp
jp
mov
stos
pop
push
sub
dec
cmps
pop
aas
mov
rcr
aas
jmp
js
jb
and
cmp
jae
fs
mov
shl
(bad)
mov
dec
int
ret
ins
push
push
lods
test
push
(bad)
pop
push
push
xchg
repnz
sti
mov
es
jno
test
in
fstp
mov
aam
cmp
pop
add
test
mov
movs
and
outs
enter
aas
fnstsw
es
imul
imul
(bad)
(bad)
mov
adc
xchg
adc
xor
enter
xchg
jno
repz
idiv
mov
cmp
(bad)
sub
lods
das
push
xlat
(bad)
lea
inc
xor
ficomp
pop
addps
push
iret
jno
cmp
push
ins
mov
pop
int
mov
rcl
dec
mov
mov
es
js
cld
(bad)
cmp
pop
xchg
add
sahf
jle
out
out
ficom
mov
cmps
pop
cmps
fild
push
adc
mov
rol
mov
mov
xchg
bound
add
jmp
(bad)
or
cmps
movs
add
inc
fstp
jp
ret
sbb
dec
jle
(bad)
mov
mov
imul
sbb
xor
ja
popa
(bad)
add
fwait
in
out
cmc
push
dec
sti
or
mov
mov
cdq
in
fisub
div
mov
mov
mov
enter
sbb
adc
push
inc
pop
inc
loope
cmp
mov
and
xchg
prefetch
add
addr16
push
mov
sub
je
in
pop
sbb
in
jmp
adc
daa
and
pop
sar
jg
mov
imul
jb
loope
cs
ret
add
cwde
ror
inc
and
push
out
loop
jns
jmp
cs
out
cli
pop
test
popa
(bad)
cmc
mov
movs
shl
call
jns
cli
sti
inc
push
stos
jmp
test
es
xchg
xlat
aad
xor
sub
pop
push
jmp
mov
dec
rcl
icebp
xor
lods
pop
push
push
jg
inc
test
mov
(bad)
fcomp
call
push
stos
rcl
clc
and
inc
imul
dec
aaa
inc
pop
mov
ins
xor
sub
pop
ficom
stc
jle
outs
sti
(bad)
repz
sub
das
jmp
mov
add
jns
dec
lods
call
cmp
js
sbb
mov
inc
push
test
in
cmp
in
out
and
jo
lea
adc
cmp
cmp
leave
push
adc
and
push
aam
add
mov
and
ds
cmc
aad
out
test
data16
les
loopne
stc
pop
jg
xor
ror
icebp
fnsave
push
(bad)
cmp
mov
cwde
repz
push
jl
xor
ins
sub
aad
outs
add
push
mov
xchg
cmp
test
pop
adc
lods
arpl
punpckhdq
pusha
(bad)
stc
movs
fnstcw
ficom
jo
lods
xor
sbb
pop
test
(bad)
jb
in
movs
sbb
cmp
sub
jo
cmp
cli
sbb
cmps
add
and
or
xchg
rcl
in
loope
pop
rcl
shl
aas
jne
int
call
std
jae
in
mov
lods
ficom
cmp
and
in
rcl
jge
(bad)
sbb
adc
lods
cs
cmp
jg
mov
jns
sub
sub
movlps
xchg
jmp
sahf
sbb
add
and
pop
sub
cmp
pop
xchg
aam
or
into
or
jl
cmp
cdq
sbb
pop
mov
cmp
dec
int3
adc
xchg
dec
cli
add
add
into
push
icebp
test
and
inc
jl
cmps
retf
jb
adc
dec
push
mov
jl
aaa
test
dec
sub
in
fsubrp
ins
fadd
cmp
push
pop
imul
ja
pushf
or
data16
jo
sub
sti
movs
adc
pusha
faddp
sbb
jb
rcr
inc
mov
aam
push
dec
popf
rcl
in
pop
push
test
lods
sub
shl
push
stos
sahf
movs
pop
clc
ret
pop
mov
add
ja
int3
jl
fsub
xchg
inc
loopne
jae
into
(bad)
daa
and
and
xchg
add
mov
and
int
outs
xchg
pop
add
das
jmp
mov
retf
(bad)
pop
aas
mov
pop
(bad)
jmp
rol
out
dec
leave
jnp
jbe
jg
xor
call
jge
js
hlt
push
int3
out
ror
out
fmul
loopne
fdivr
std
pop
leave
mov
lea
mov
dec
lock
adc
push
mov
call
div
fadd
mov
adc
in
test
fs
dec
rol
mov
rol
pop
dec
dec
inc
pop
mov
jnp
mov
inc
jo
jo
push
or
icebp
sbb
int3
movs
pop
mov
sbb
(bad)
imul
addr16
mov
aam
in
dec
xchg
dec
scas
or
in
adc
add
into
hlt
adc
mov
cli
add
jae
out
sub
ror
imul
jmp
ins
and
jl
fisub
cmp
dec
add
pop
out
repz
pop
ficomp
call
sub
(bad)
or
call
mov
or
call
mov
test
inc
outs
pop
repz
xchg
in
mov
xor
(bad)
ins
inc
xlat
into
and
inc
dec
and
rol
retf
hlt
mov
jbe
movs
loop
out
sti
xchg
mov
not
sub
sbb
fild
imul
push
call
cmp
xor
xlat
inc
ins
mov
dec
cmp
push
sbb
inc
and
jmp
mov
inc
invd
dec
int
mov
push
jb
sar
add
dec
xchg
add
jnp
sahf
dec
sub
mov
hlt
cli
inc
add
imul
push
xchg
jmp
push
sub
call
dec
jbe
inc
fstp
add
xchg
cmps
sub
hlt
push
in
adc
call
mov
cmp
bound
shr
test
(bad)
out
loop
lods
div
rcl
rcr
mov
pop
sub
lock
lds
jne
mov
mov
aaa
push
push
(bad)
and
pop
pop
(bad)
int3
adc
(bad)
jecxz
loop
out
adc
test
jge
dec
sub
fdiv
jg
xchg
pop
repz
adc
popa
out
mov
sub
inc
(bad)
xchg
(bad)
mov
xchg
sbb
enter
dec
mov
aam
data16
pop
push
cmp
loope
jne
nop
dec
xchg
pop
cmp
adc
imul
or
in
shl
push
sub
xchg
add
test
sahf
sub
dec
mov
nop
xchg
dec
ins
scas
(bad)
imul
add
ja
jmp
mov
(bad)
test
lods
imul
in
pusha
addr16
xor
gs
jmp
call
jmp
in
jo
push
cwde
fisub
fs
sub
add
lods
cmp
movntq
pop
pop
pop
xchg
add
mov
out
mov
(bad)
call
xchg
xor
mov
out
jns
adc
aam
xchg
jo
add
popf
mov
adc
clc
test
adc
adc
push
loope
sbb
jl
loop
(bad)
div
pop
addr16
ror
push
icebp
scas
rol
lea
test
gs
jno
cmps
pop
add
jmp
jns
jnp
mov
repnz
and
mov
ins
sub
fadd
mov
sub
xchg
stos
jno
fmul
ja
mov
sub
push
sub
push
add
aaa
xchg
push
mov
push
xor
out
call
dec
dec
jnp
repnz
or
mov
mov
test
push
out
fwait
xor
test
cld
sbb
imul
mov
push
sbb
cdq
retf
call
mov
push
mov
lahf
and
lods
cmp
int
push
mov
loope
mov
cs
adc
fsub
ror
cwde
mov
rcr
unpckhps
addr16
pop
xchg
daa
cmp
mov
xor
(bad)
in
pop
pop
xor
jle
and
fadd
cmp
and
push
mov
lock
retf
mov
cmps
cmps
mov
inc
and
inc
dec
pusha
and
(bad)
(bad)
fnstcw
cmp
mov
sbb
std
or
adc
push
push
and
and
jle
lahf
or
aaa
loope
push
xor
scas
pop
mov
jge
test
out
lock
jle
adc
push
sub
lods
adc
push
cmps
xor
js
arpl
xchg
lock
pusha
and
mov
push
mov
jge
ja
push
xchg
xor
ror
(bad)
shr
jmp
ficom
xrelease
or
push
jo
call
mov
mov
int
sbb
add
aad
ret
pusha
and
inc
stos
mov
sbb
dec
push
sbb
jne
rol
in
pop
arpl
mov
dec
out
and
fistp
fiadd
mov
jmp
sub
dec
jb
cdq
retf
fwait
popa
cmp
jo
jbe
aas
fdivr
cmp
xchg
(bad)
mov
das
pop
mov
addr16
lds
ins
test
icebp
and
add
outs
cdq
dec
test
enter
int
inc
out
jb
pop
test
bound
mov
adc
push
std
push
lods
mov
add
dec
mov
pushf
ret
add
push
push
cmp
push
popf
cmps
jmp
retf
std
jmp
ret
mov
iret
inc
jge
cmc
icebp
leave
cwde
xchg
out
(bad)
stc
lea
and
sti
mov
dec
dec
dec
adc
cmp
pop
out
adc
clc
sub
hlt
cmp
jo
xchg
int3
pop
outs
dec
inc
mov
es
cmp
dec
imul
movs
cmp
pusha
leave
repz
sub
dec
pop
out
(bad)
lahf
inc
and
adc
push
ins
daa
or
out
loop
pushf
mov
mov
es
or
jns
loope
fimul
jnp
dec
adc
push
sahf
adc
mov
loope
xor
inc
dec
movs
sub
mov
push
jo
adc
and
push
jns
xchg
mov
inc
lods
pop
int3
mov
and
lock
xor
mul
cmp
mov
cld
les
inc
aaa
adc
xchg
stos
or
rol
pop
pop
movs
aam
and
push
outs
arpl
call
sub
push
sti
retf
ins
ret
fst
adc
dec
jb
mov
sti
lds
cmp
push
mov
fwait
pop
push
ins
int
mov
cmp
in
sub
mov
mov
sub
xchg
daa
and
sbb
stos
or
popf
mov
mov
mov
push
inc
rcl
mov
lods
add
call
call
mov
sti
push
xor
jnp
dec
lea
movs
pop
cs
xor
push
outs
push
mov
jmp
push
nop
call
hlt
fs
mov
inc
mov
pop
mov
stos
add
inc
jo
jp
dec
and
add
adc
cwde
add
cs
jg
ins
hlt
ins
in
bound
scas
jle
sub
nop
ins
mov
pop
cmps
sbb
jns
movs
add
test
outs
sbb
nop
jns
in
or
add
sbb
mov
sub
push
push
xchg
movs
iret
inc
add
or
aas
adc
dec
cmps
adc
lods
sub
sbb
push
test
xrelease
jbe
mov
sbb
mov
test
mov
in
in
adc
pop
or
hlt
cmps
stos
adc
pop
nop
movs
leave
jnp
mov
rol
lock
sbb
push
retf
dec
add
es
sbb
or
test
xor
or
js
pop
mov
(bad)
xchg
xchg
jmp
and
mov
jae
repz
mov
xchg
les
(bad)
and
sbb
repnz
dec
inc
je
jne
enter
cmp
push
push
adc
movs
mov
in
xchg
sub
stc
pop
ss
cs
or
std
xchg
fdiv
sbb
inc
mov
push
mov
imul
mov
and
xor
xor
fwait
in
movs
adc
xor
pushf
or
sbb
jge
sub
loope
cmp
cmp
mov
sahf
or
mov
jo
dec
je
mov
push
mov
int3
push
or
pop
pop
leave
or
aaa
ret
xor
lea
mov
push
movs
xlat
add
jle
imul
mov
repz
retf
jp
ror
int3
mov
and
dec
xor
sbb
pop
push
push
inc
xchg
mov
sbb
inc
bound
je
xor
dec
inc
repnz
call
xor
mov
pusha
ds
test
sub
imul
cli
mov
and
sar
and
(bad)
sti
call
mov
xchg
aad
shr
(bad)
call
lods
je
push
dec
mov
cmc
(bad)
jecxz
shl
stos
repnz
stos
ror
jg
repnz
mov
dec
(bad)
loopne
cmp
imul
inc
ret
cmp
rcr
imul
cmp
out
mov
(bad)
dec
ja
inc
push
adc
loopne
shl
or
or
or
sbb
add
rcl
test
pop
add
jne
cmps
cmc
adc
jns
shl
outs
adc
fwait
and
push
mov
add
arpl
fwait
out
push
xchg
inc
cmps
dec
rcl
shl
(bad)
dec
mov
scas
mov
mov
(bad)
stos
out
(bad)
jnp
mov
mov
sub
adc
in
fs
out
clc
xchg
rcl
retf
lods
push
push
test
shl
xlat
lods
imul
xchg
(bad)
in
adc
popf
mov
das
sbb
pop
mov
aas
ja
cmp
fisubr
adc
aam
and
out
jge
pop
addr16
scas
rcl
out
jae
(bad)
icebp
jne
or
cmc
fbld
clc
add
popa
std
imul
push
and
cmps
mov
sti
loope
(bad)
fistp
sub
mov
movs
outs
sbb
ficomp
xchg
adc
xor
(bad)
push
or
jb
mov
das
mov
inc
adc
ret
adc
lods
fldcw
add
inc
imul
lahf
mov
push
push
and
pop
aas
sub
jns
fsub
mov
popf
pop
fidivr
jae
imul
cmp
movs
mov
dec
jmp
or
sub
xor
movs
aaa
pop
ins
ins
repz
ds
ss
xchg
test
std
fidivr
ins
int3
jno
lahf
add
jmp
in
cdq
xor
aaa
dec
push
push
gs
pop
push
pushf
arpl
inc
mov
and
fdivr
push
loop
sub
jmp
fnstenv
sar
inc
inc
out
lds
mov
ja
gs
adc
jmp
cmp
cdq
jb
(bad)
sbb
xchg
add
call
xor
sti
inc
xchg
jae
sar
outs
aas
mov
test
mov
and
jp
fs
jle
sbb
mov
xchg
xor
inc
push
aam
xchg
repnz
jmp
dec
push
es
adc
iret
call
pop
jecxz
int
lds
cmp
stc
test
inc
or
daa
(bad)
mul
mov
and
cmp
pop
aas
mov
stos
movs
in
push
out
das
sbb
stos
xchg
js
push
jo
mov
(bad)
jbe
scas
aad
and
sub
imul
inc
pop
aad
pop
xchg
loope
repnz
bound
push
mov
pop
addr16
(bad)
loop
xor
fimul
xor
les
test
popf
nop
stos
mov
leave
xchg
ds
std
jl
ret
cld
push
je
sbb
jo
push
and
ret
fs
add
xor
jbe
or
test
mov
sub
addr16
leave
in
mov
leave
and
mov
xchg
cwde
mov
ret
cmp
pusha
test
dec
out
jo
sar
test
cwde
inc
xor
int
aas
push
test
jbe
mov
mov
es
rep
pop
xor
cmp
mov
xchg
mov
jmp
inc
inc
jle
adc
sbb
mov
(bad)
mov
lods
loope
jle
fucomp
repz
jbe
mov
add
inc
push
dec
fs
aad
js
cli
mov
adc
cmps
and
or
mov
pop
adc
adc
repz
int
retf
pop
adc
mov
arpl
fmul
mov
add
mov
cwde
or
pop
idiv
jle
loope
fisubr
fstp
sub
gs
bound
es
xchg
js
xlat
xlat
int3
and
ret
dec
dec
das
les
nop
inc
stos
sahf
jecxz
test
pop
cmp
pusha
aam
adc
dec
sar
retf
cmp
inc
sub
das
int
cmp
push
push
movs
icebp
mov
mov
dec
mov
stos
(bad)
test
arpl
adc
xchg
pop
and
sahf
jb
js
scas
add
scas
fwait
mov
or
jns
dec
fld
push
icebp
inc
add
sub
and
ror
and
push
arpl
xor
add
sub
int
cdq
sahf
inc
and
or
ins
fdiv
or
xchg
sub
int
loop
fst
dec
popa
mov
sub
bound
or
mov
popf
push
clc
jbe
shl
xchg
add
not
push
(bad)
jb
xchg
test
adc
push
sbb
and
mov
or
rcl
mov
xchg
or
mov
pop
cmp
sbb
sub
enter
and
(bad)
pop
shr
dec
mov
cmp
stos
xchg
mov
inc
pop
movs
pop
cmps
dec
jmp
stc
inc
adc
sub
mov
jg
sub
imul
pop
pop
(bad)
mov
mov
pop
jb
cmp
adc
nop
dec
xchg
xor
mul
loopne
lods
cmp
test
pop
fs
rcr
fwait
mov
lods
mov
fistp
sbb
es
sub
inc
push
cmps
mov
cwde
fcom
(bad)
mov
jno
mov
or
outs
es
call
in
xchg
ss
xchg
stos
stc
mov
adc
fimul
sub
xor
jmp
out
or
ficom
retf
test
cli
sub
ret
and
add
fmul
jle
js
in
cli
mov
les
je
imul
and
les
xchg
fldcw
rol
frstor
daa
test
stc
fistp
mov
inc
sbb
mov
test
jp
shr
call
cmps
loopne
sbb
xchg
stc
xor
clc
aam
bnd
mov
je
mov
pop
push
jb
enter
cmps
aam
lahf
std
daa
jnp
(bad)
ins
push
mov
ja
adc
and
sub
out
dec
and
in
out
or
pop
sbb
xor
push
aad
xchg
int
pusha
xor
adc
sbb
xor
cmps
mov
and
imul
and
dec
jle
std
pop
ret
dec
and
mov
sub
out
xchg
xchg
add
jp
pop
pop
daa
addr16
add
pop
imul
add
aad
setbe
and
xchg
jge
pop
imul
cli
jge
loop
pop
das
xchg
iret
lock
loopne
mov
adc
iret
dec
popf
mov
jle
lea
mov
xlat
fld
and
pop
iret
xchg
pop
inc
addr16
inc
mov
nop
outs
scas
or
push
retf
or
in
cld
mov
jecxz
std
push
stc
push
mov
dec
mov
outs
out
bnd
cdq
stc
div
imul
fcomp
xor
test
pushf
inc
movs
pop
and
shl
or
je
and
inc
sub
mov
out
stos
sbb
mov
je
jmp
adc
mov
pop
pop
pop
or
dec
scas
xor
in
fstp
sbb
loop
cli
xchg
imul
push
sbb
push
jp
idiv
je
js
mov
dec
adc
cli
mov
jp
xor
mov
mov
cdq
push
shr
scas
in
jnp
inc
clc
cmp
xchg
fwait
mov
ret
mov
jl
js
sbb
lods
test
inc
js
loope
aaa
push
and
nop
add
das
lock
scas
lock
(bad)
div
movs
es
cmps
push
lods
ret
js
call
adc
jge
sub
and
stos
mov
push
out
adc
mov
inc
push
bound
mul
mov
mov
retf
jecxz
fadd
add
adc
shr
out
pop
push
sub
lods
jp
sbb
xchg
cmc
mov
or
shl
cs
test
mov
mov
into
adc
test
into
lock
pop
hlt
(bad)
dec
push
add
or
cmps
out
pop
repnz
test
out
loope
ins
and
arpl
jecxz
jge
outs
inc
(bad)
enter
pushf
sti
dec
(bad)
leave
cmp
iret
arpl
arpl
loopne
inc
sbb
add
mov
mov
mov
loope
sti
in
leave
into
inc
and
xor
mov
aam
mov
cdq
shr
mov
adc
loop
inc
push
mov
ss
nop
sub
mov
adc
(bad)
cmp
cmc
jmp
mov
loop
push
mov
mov
push
push
dec
sbb
out
mov
or
cwde
(bad)
fwait
xor
pop
jmp
leave
xchg
or
test
mov
imul
sbb
jl
shl
sub
ja
push
inc
sbb
stos
out
call
or
jb
sub
(bad)
les
mov
scas
mov
sbb
je
pop
push
nop
lea
int3
test
gs
mov
jae
push
push
fwait
lock
pusha
jns
xchg
loopne
and
xor
(bad)
aad
mov
pop
in
add
jle
popf
lock
aam
shl
xchg
fbstp
add
cmps
loope
xchg
iret
xchg
mov
sbb
push
shr
fs
or
pop
and
add
icebp
mov
or
shl
fcmovb
pushf
adc
xchg
test
and
lds
cs
je
and
push
aad
popa
pop
mov
jns
pop
fnsave
and
adc
mov
loope
and
fld
(bad)
je
sbb
(bad)
and
or
mov
xchg
adc
loop
inc
jnp
call
mov
mov
xchg
lds
inc
call
xchg
outs
scas
mov
push
push
pop
scas
add
sahf
hlt
dec
dec
and
sub
repnz
dec
sahf
xchg
cmp
or
test
repnz
sub
fsub
push
dec
sub
cld
out
aad
cmp
scas
imul
jo
adc
mov
(bad)
adc
mov
(bad)
jmp
(bad)
idiv
xor
aad
jae
dec
(bad)
idiv
push
fld
mov
mov
call
sbb
(bad)
xchg
sbb
jb
ins
jp
es
mov
adc
mov
lock
and
jle
cld
lods
sbb
ret
jnp
push
push
aad
pop
(bad)
pop
fimul
adc
xchg
or
mov
jg
cmp
les
stos
jp
stos
cli
into
pop
xor
pop
lds
mov
jbe
or
cld
push
xor
repz
adc
scas
ss
mov
dec
mov
inc
fxch
shl
dec
shl
outs
mov
mov
or
lods
push
push
push
stos
inc
pushf
ds
adc
or
push
inc
mov
sbb
xor
ret
xchg
jne
cwde
rcl
arpl
in
stos
dec
and
scas
pop
inc
xchg
push
adc
daa
xchg
lea
mov
call
sub
fiadd
push
sar
fs
in
bswap
inc
push
dec
in
xchg
cmp
xlat
je
int
movs
call
std
jp
loope
push
jp
mov
mov
sub
popa
pop
stc
adc
fs
test
and
mov
cdq
push
stos
mov
push
aaa
out
add
mov
mov
mov
imul
jbe
push
jns
add
icebp
(bad)
out
mov
addr16
mov
pushf
jne
inc
repz
inc
rol
mov
aad
nop
jle
jmp
aas
jnp
js
jb
mov
retf
hlt
test
lds
adc
enter
mov
aam
push
lahf
adc
xchg
lock
push
mov
cmp
push
cmp
mul
add
pop
mul
cmps
popa
out
or
fwait
idiv
not
movs
push
sub
xor
ret
(bad)
xchg
inc
fimul
mov
jl
sbb
test
aaa
sbb
or
xchg
mov
add
and
add
dec
es
ss
jg
into
adc
std
jl
idiv
pushf
addr16
sub
sub
mov
mov
sbb
jnp
mov
push
loopne
jmp
cs
shr
jecxz
rcr
nop
pop
ja
cmps
mov
and
loopne
jmp
loop
ja
fadd
push
iret
and
nop
fdivr
mov
not
out
sbb
add
push
inc
pmovmskb
xchg
sbb
daa
jns
inc
test
out
outs
lods
sbb
loopne
rcr
push
dec
push
mov
imul
ins
(bad)
adc
dec
jae
mov
mov
pop
mov
xor
mov
fst
xchg
arpl
shl
je
jo
stc
fdiv
add
hlt
jl
movs
sbb
fwait
add
std
lock
push
out
fisubr
mov
test
cs
(bad)
sar
fistp
dec
movs
(bad)
mov
fisttp
ficomp
dec
sbb
mov
icebp
pop
xlat
ds
imul
sub
fs
(bad)
jns
fcom
addr16
aam
stos
outs
jae
fbld
call
fnstenv
cld
mov
fwait
repz
xlat
dec
movs
pop
mov
das
cmps
xlat
outs
(bad)
push
sub
ret
xchg
cmp
(bad)
mov
push
inc
stos
inc
mov
adc
aaa
popa
mov
jne
shr
xchg
and
sbb
(bad)
loope
dec
sbb
data16
mov
mov
xor
outs
xchg
lahf
popf
pusha
mov
inc
push
aaa
mov
and
repnz
je
push
mov
iret
iret
mov
(bad)
(bad)
scas
dec
dec
xor
xchg
mov
xchg
cmc
sub
stc
dec
mov
cmp
mov
jnp
out
dec
pop
movs
(bad)
pop
mov
xchg
ss
add
jae
(bad)
loop
aaa
cld
arpl
sub
jle
xchg
out
and
lods
mov
retf
push
fst
cmp
lock
adc
ret
fild
and
mov
mov
daa
popa
mov
sub
push
sbb
daa
inc
repz
mov
mov
daa
ins
mov
sub
sti
mov
dec
inc
das
push
xchg
jecxz
mov
or
das
in
sub
retf
or
xchg
sbb
(bad)
iret
fwait
adc
fucomip
sub
dec
ja
ret
fwait
int
bswap
cmp
ja
xchg
inc
das
mov
outs
jle
test
(bad)
jb
retf
jmp
popa
mov
lods
and
(bad)
jno
mov
cmp
js
stos
addr16
loopne
xor
clc
mov
dec
daa
call
in
imul
retf
xor
ret
ja
movs
sub
scas
push
cmp
loopne
ds
pop
retf
frstor
shr
imul
and
aad
call
jns
pop
mov
add
pop
out
pusha
xchg
call
loope
fisub
pop
jnp
fwait
int
outs
movs
dec
jle
xor
sbb
mov
xchg
sahf
inc
xchg
stos
sub
sar
loop
fwait
out
cld
cmc
scas
in
mov
sbb
mov
fistp
iret
xchg
popa
jne
in
push
inc
jno
aas
retf
jmp
aad
pop
mov
mov
adc
cld
push
stos
fwait
pop
cdq
jnp
push
pop
inc
fbld
gs
add
add
sbb
fdivr
sbb
sbb
jmp
add
sub
cdq
int
sub
iret
aam
push
popf
push
in
adc
jp
pop
movs
push
cli
leave
jp
jnp
jge
xchg
fnsave
add
xchg
lock
call
outs
pop
lock
repnz
adc
xchg
mov
ds
inc
sub
pop
mov
call
pushf
mov
lock
push
and
or
(bad)
lock
shl
movs
mov
std
jae
rcr
pop
push
mov
and
inc
(bad)
mov
out
loop
into
mov
mov
inc
js
push
clc
cld
jp
xchg
fdiv
add
daa
inc
stc
jns
or
cmp
mov
adc
pop
movs
xchg
sar
mov
or
fimul
xlat
sub
xchg
retf
jp
movs
cs
in
hlt
sti
(bad)
outs
(bad)
sbb
add
adc
je
cs
call
mov
mov
jnp
mov
repnz
jne
movs
loopne
mov
xchg
stos
push
into
clc
lock
sahf
jb
jmp
xor
mov
mov
aas
into
xchg
sbb
sub
push
mov
and
and
cs
imul
scas
sar
stc
jae
mov
cmc
xchg
imul
push
imul
lods
cld
push
sti
in
sbb
mov
test
aas
jg
ror
jecxz
aad
jl
xchg
xchg
pop
jmp
push
ins
bound
xor
lea
cdq
std
push
pop
cli
xor
rcr
idiv
mov
shr
mov
sub
jo
add
dec
sub
fucomi
or
nop
adc
mov
mov
push
sub
aad
sbb
mov
pushf
sub
(bad)
mov
(bad)
es
cmp
mov
shl
jae
cdq
jbe
pop
sbb
out
or
sub
out
daa
pop
(bad)
jmp
repnz
std
xor
push
inc
pop
mov
push
shl
mov
adc
dec
cmp
iret
push
test
or
aad
push
adc
jmp
lea
idiv
xor
ret
stos
add
add
jne
xor
jbe
adc
push
popa
adc
sar
add
cmp
fs
test
nop
gs
lds
out
lds
lea
dec
xor
push
out
mov
test
test
cli
popf
and
dec
mov
les
cmovno
fiadd
stos
inc
xor
scas
call
rcl
inc
shr
cmp
mov
sub
cld
sbb
icebp
jb
cmc
shl
icebp
lds
outs
add
mov
cmp
push
mov
pusha
xor
cmp
push
ret
or
sti
shl
inc
call
inc
pop
outs
les
pop
push
arpl
out
and
stc
int
cld
and
push
sti
int
jge
mov
ss
cmps
in
in
(bad)
repz
or
mov
mov
sahf
call
inc
adc
aad
and
mov
clc
pop
xchg
test
jmp
cmp
nop
mov
in
fidivr
xor
mov
(bad)
repnz
inc
cdq
fcomp
mov
xchg
cmp
scas
cmp
data16
jns
jo
ficomp
ds
xor
pop
adc
sahf
inc
dec
adc
add
cmp
inc
cmc
repnz
jo
shr
adc
pop
int3
mov
xor
cwde
pusha
adc
hlt
mov
ret
fucomi
inc
(bad)
cld
clc
pop
sbb
jmp
jecxz
push
ins
mov
mov
jo
pop
out
int
xor
rep
xor
pusha
mov
push
test
es
mov
loope
sub
jae
xchg
inc
cmps
ins
pop
ins
cmc
mov
mov
jne
fnstcw
cwde
fcmovu
pop
adc
pop
add
ffree
adc
or
loopne
adc
xor
xlat
xchg
addr16
jecxz
cmp
xchg
adc
inc
sbb
and
push
std
rcl
push
sahf
mov
pop
fadd
pop
aaa
add
retf
inc
idiv
out
out
push
gs
(bad)
adc
rcl
call
test
lock
adc
xor
ins
or
jbe
popa
sbb
and
push
sahf
and
sub
push
mov
mov
(bad)
nop
xchg
ret
(bad)
sbb
sub
inc
jb
hlt
popf
cs
add
dec
jmp
add
daa
ds
sbb
test
sbb
xchg
(bad)
out
arpl
pop
inc
repz
xor
out
popf
sub
pop
cmp
and
ss
pop
jb
mov
xor
cmp
iret
inc
mov
xchg
lock
sbb
and
sbb
imul
movs
mov
and
sbb
add
mov
dec
loop
mov
lea
sub
rcr
adc
pop
(bad)
cmp
xchg
sbb
push
cmps
out
jle
test
and
loope
retf
lea
add
imul
popa
jae
mov
out
fsub
add
and
push
je
xor
fsubr
mov
adc
cld
push
js
xchg
out
(bad)
fwait
dec
mov
cld
push
or
cwde
cmc
add
pop
jp
or
stc
mov
test
aam
scas
mov
cli
mov
pop
jp
push
(bad)
adc
jp
jle
inc
loope
cmp
sub
shr
sbb
add
scas
in
xor
jp
bound
retf
pop
or
pusha
jno
int
fst
adc
daa
cmp
nop
test
in
imul
std
jnp
lahf
jbe
mov
retf
mov
lock
(bad)
outs
leave
test
lds
cmc
imul
or
and
int
in
sbb
jno
lock
jnp
ss
jle
mov
pop
test
adc
inc
data16
sub
and
push
mov
inc
xchg
xchg
fnstcw
ret
sub
xchg
mov
lods
lea
sbb
(bad)
arpl
jge
rdtsc
xchg
or
out
cmp
cmps
aad
mov
int3
inc
ins
push
cdq
mov
dec
leave
gs
sbb
hlt
mov
fstp
and
stos
mov
jl
inc
sahf
fs
movs
sbb
js
popa
or
cmc
loop
das
call
adc
xlat
mov
xor
push
adc
mov
cmp
pop
mov
scas
or
js
scas
bound
push
lods
ss
mov
push
xchg
add
xchg
mov
shr
(bad)
xlat
rcl
mov
rcl
mov
(bad)
outs
cli
fsubr
outs
ins
je
adc
and
jae
outs
xchg
lods
mov
mov
clc
mov
sbb
mov
popa
int
mov
lods
xchg
push
pop
cmps
jmp
idiv
cmp
int
(bad)
ja
imul
test
lods
mov
sysenter
inc
lahf
sbb
in
test
pop
mov
(bad)
scas
aad
bound
pop
std
shl
xor
movs
cli
(bad)
test
jae
push
add
and
cmp
dec
test
addr16
add
fdivr
fstp
adc
and
cmp
(bad)
in
jmp
jmp
test
mov
in
pop
cwde
sub
lock
data16
xchg
ficom
pop
fwait
jbe
sbb
in
icebp
int
popf
cmps
(bad)
push
(bad)
cmp
popa
in
sbb
std
pushf
jmp
sbb
data16
lods
jg
movs
cmps
add
pop
dec
stc
aad
(bad)
fild
adc
cmp
in
ja
fistp
imul
imul
mov
repnz
pop
ret
or
pop
out
lock
div
shl
fs
enter
out
out
int
rol
pusha
mov
xchg
lods
lods
jno
xor
movs
mov
push
cmp
dec
imul
div
popf
ins
out
and
pop
bnd
lods
clc
outs
fistp
jnp
and
jne
pop
xchg
adc
mov
dec
sahf
fucom
mov
dec
mov
cmp
dec
fst
cmp
dec
out
pop
sbb
cli
mov
sbb
inc
xchg
cmp
cmp
aad
outs
icebp
mov
fidiv
fmul
mov
cmps
mov
ror
jo
push
mov
out
stos
jbe
push
stos
mov
(bad)
jnp
jp
mov
pusha
add
mov
jns
push
jmp
xchg
sti
imul
aaa
adc
aam
add
mov
jl
dec
inc
dec
mov
cmps
sub
ja
sbb
adc
rcr
jnp
mul
inc
cmp
cli
mov
push
xchg
data16
mov
stc
popf
(bad)
fwait
mov
movs
inc
mov
push
add
sbb
sbb
dec
jmp
sub
xchg
test
xchg
fs
and
sub
sti
stos
loop
sbb
add
mov
in
ret
les
loop
hlt
popa
ret
sub
jmp
call
pop
in
or
movs
popa
and
xchg
jmp
push
mov
lods
lds
repz
lea
rol
xor
xor
or
xchg
sub
out
mov
(bad)
sub
out
scas
shr
aad
jl
pusha
ss
shl
xchg
jns
cld
mov
imul
call
mov
mov
adc
or
cmp
dec
jnp
sub
and
rol
pusha
mov
and
jge
cmp
jmp
sub
je
dec
xchg
cmp
pop
call
dec
test
out
in
sub
pop
sbb
cmps
rcl
add
(bad)
adc
aam
jb
pop
xor
ds
jmp
clc
cmp
movs
pop
xlat
or
pop
cmp
push
scas
sub
and
call
sahf
ss
dec
inc
or
cmp
xor
arpl
int3
push
ret
lea
mov
cli
xchg
jb
stos
xchg
mov
fucom
push
loope
adc
dec
(bad)
fimul
test
mov
call
add
les
pop
cmp
inc
jbe
into
pop
into
(bad)
fbld
mov
xchg
sub
popf
leave
add
mov
push
stc
lea
jns
inc
jno
sti
stc
xchg
dec
or
stos
lods
adc
int
cmp
loopne
xor
xor
inc
leave
out
test
sub
iret
adc
arpl
or
xor
jbe
mov
dec
mov
xchg
jecxz
push
mov
and
out
or
inc
mov
test
mov
mov
fadd
ffreep
cdq
sub
dec
fcom
imul
push
ss
dec
cmp
jne
cs
test
xchg
jo
sbb
inc
cld
inc
push
xchg
jl
movs
sub
jl
pop
outs
ret
shl
or
shr
mov
bound
lods
mov
jb
aas
call
or
jns
and
cld
cdq
outs
repz
popa
sbb
(bad)
jp
fistp
mov
cmp
and
mov
xor
jecxz
scas
ror
jo
mov
or
into
lea
adc
cli
inc
push
mov
pop
popa
push
jnp
dec
lods
pop
sar
(bad)
mov
xchg
ds
cmp
sub
mov
out
in
fnstenv
dec
sti
adc
mov
pop
push
retf
push
jl
sbb
fs
mov
les
rol
push
push
pop
xor
xchg
sub
cmp
cmp
cli
jmp
test
jecxz
inc
enter
and
push
stos
mov
fild
mov
push
ins
adc
xchg
cmp
sub
jb
not
xor
adc
in
and
int3
push
pop
popa
or
addr16
out
arpl
mov
sbb
push
sub
adc
or
leave
jnp
jecxz
xchg
push
test
mov
add
xlat
or
cmps
gs
(bad)
and
xchg
mov
pop
sub
mov
shl
std
ss
cmp
mov
in
mov
scas
daa
push
pop
movs
and
and
mov
or
ficomp
popf
xchg
aad
jmp
mov
sbb
add
(bad)
hlt
push
test
inc
lods
adc
push
cmp
test
adc
push
push
sar
jmp
dec
dec
stos
sbb
jmp
push
mov
sbb
shl
neg
ja
dec
push
jp
loop
data16
outs
frstor
arpl
pusha
loopne
fmulp
ins
mov
inc
adc
pop
pushf
in
popa
dec
jl
cs
push
lds
push
popf
jno
dec
es
fucomp
mov
pop
add
mov
sub
push
pop
push
xchg
push
test
js
xor
add
int
rcr
mov
sbb
xlat
aad
sahf
push
fnstenv
movs
xchg
inc
imul
sub
inc
xchg
scas
xchg
fbld
(bad)
div
fdecstp
inc
sub
mov
mov
xor
leave
dec
retf
stc
ss
into
retf
not
rol
inc
inc
sub
std
mov
inc
call
cmc
cmp
(bad)
ud0
(bad)
sbb
loopne
mov
inc
inc
mul
jl
test
and
dec
mov
cwde
jns
cmp
xor
(bad)
imul
enter
mov
xor
repnz
lods
cmp
dec
cmp
mov
scas
or
inc
outs
fnstsw
cmp
repnz
jns
push
pop
addr16
mov
and
std
aaa
jl
mov
mov
jae
mov
or
lods
pusha
push
pop
movs
test
aad
(bad)
outs
(bad)
push
xlat
in
dec
not
push
jge
fwait
push
push
adc
xabort
pop
es
idiv
scas
jl
lahf
mov
je
inc
mov
lahf
popa
jae
neg
push
cli
push
imul
jge
push
stos
popf
xlat
ficomp
cmp
jle
inc
cmp
inc
ja
sub
sbb
sbb
icebp
and
push
cwde
test
or
iret
ss
dec
hlt
test
shl
sti
out
sbb
in
mov
pop
clc
mov
pop
sub
nop
scas
xlat
push
push
lock
cmp
dec
push
lods
loope
mul
cmp
hlt
imul
data16
xlat
bound
in
sub
mov
push
xchg
inc
clc
push
sbb
call
inc
adc
sar
aad
cmp
outs
out
inc
add
jbe
cmp
pop
retf
out
movs
cmps
dec
cmc
mov
and
push
pop
push
push
add
push
out
lahf
push
out
sbb
inc
cwde
xchg
(bad)
in
into
mov
es
stos
sub
cmps
jae
adc
push
int3
hlt
jecxz
dec
int3
push
sub
mov
lea
pop
dec
cli
int
or
ja
jecxz
jmp
mov
retf
jne
mov
and
out
pop
push
call
pop
xor
fld
je
jl
pop
fs
inc
adc
adc
in
sar
scas
mov
pusha
(bad)
fisub
push
fldenv
jnp
in
je
stos
pop
pop
xor
repnz
xchg
jno
sbb
nop
scas
imul
mov
jb
mov
xchg
fbld
xchg
cs
stc
mov
out
outs
fucomi
cmp
pop
sbb
jge
scas
cmc
sub
pop
sar
dec
jns
jmp
cmps
test
and
data16
jg
(bad)
arpl
aam
adc
aad
mov
rcr
cmp
mov
sahf
adc
cli
div
bound
ror
out
lods
iret
sbb
add
adc
pushf
or
adc
jb
repnz
test
xor
bound
sar
arpl
push
adc
push
mov
xchg
mov
pop
popa
lods
add
scas
dec
sub
inc
add
imul
mov
bound
or
hlt
mul
aas
ret
dec
xchg
aas
cmp
cmp
sbb
pusha
loopne
nop
shl
out
in
ret
pop
shr
cmps
and
jl
loope
mov
push
cmp
inc
lods
cmp
outs
shl
jp
mov
xchg
dec
dec
pop
pop
pop
add
mov
es
sub
push
xor
sub
mov
xchg
inc
mov
loopne
aaa
lock
jp
jle
push
sub
xchg
dec
imul
mov
xchg
js
out
sbb
(bad)
movs
jo
mov
ror
out
cmp
push
pusha
fmul
and
sub
in
mov
dec
inc
sahf
jno
sub
xor
out
or
push
mov
dec
imul
jae
jl
ins
and
cld
test
cmps
ss
inc
xor
movs
sbb
pcmpeqb
retf
inc
sbb
fs
mov
or
clc
cmp
dec
inc
or
add
pop
gs
fnsave
test
lock
inc
(bad)
mov
std
int3
push
pop
loope
sbb
push
and
mov
out
fs
lock
jo
adc
sahf
push
push
call
add
adc
jmp
shl
out
mov
into
ret
push
add
popf
mov
add
cmp
lods
xchg
into
test
je
call
xor
inc
or
pop
dec
pop
pop
in
and
in
daa
and
or
gs
dec
(bad)
mov
jge
ja
or
in
push
adc
add
xchg
aas
adc
push
xor
cwde
mov
retf
(bad)
rcl
sbb
mov
int
inc
sbb
push
mov
arpl
and
mov
mov
jbe
pusha
iret
pop
dec
lds
xchg
cmp
call
sub
and
adc
sbb
mov
or
jl
std
ds
stos
push
jg
inc
push
rcl
pop
push
imul
leave
aad
xchg
add
retf
adc
or
pop
aas
or
xchg
and
sub
out
in
xor
mov
mov
push
icebp
push
es
lea
lods
fist
or
sti
jl
mov
(bad)
xor
mov
or
cmp
lahf
sub
jae
and
cmp
or
push
(bad)
cld
and
int
jns
mov
pop
cli
and
and
xchg
imul
int3
or
loopne
fbstp
(bad)
and
call
(bad)
das
pop
leave
pop
lods
inc
and
inc
test
jp
inc
popf
cs
mov
mov
and
mov
dec
jb
mov
cmc
mov
pop
lock
push
arpl
mov
xor
les
das
sub
cld
lods
dec
dec
xlat
cmp
cmp
je
jo
scas
xchg
fwait
cmp
cmps
xchg
jb
sbb
psubq
rcl
dec
xchg
inc
shr
and
mov
(bad)
mov
ror
ss
xchg
cdq
mov
pop
js
retf
retf
push
push
cld
sub
sub
icebp
stos
arpl
dec
jb
jae
add
aad
mov
mov
loopne
fwait
cli
aas
mov
pop
stc
iret
xor
inc
jp
dec
(bad)
and
and
mov
mov
dec
iret
and
stc
jb
dec
sub
call
int
fcomp
mov
test
pop
adc
cmp
add
and
sbb
pop
inc
mov
mov
rcr
lods
arpl
add
arpl
push
jns
div
mov
adc
sbb
hlt
div
jle
add
test
xchg
jmp
and
aam
call
(bad)
xor
mov
mov
jne
scas
dec
idiv
cmp
(bad)
xchg
push
push
adc
jg
lock
xchg
repnz
jge
lock
fadd
mov
nop
cli
in
movs
in
add
cmp
jmp
rol
daa
mov
jae
pop
sar
xchg
pop
adc
lods
cmp
cmp
push
push
enter
rol
mov
add
jnp
push
sahf
jno
enter
ja
popf
jnp
jo
push
repnz
sahf
mov
ret
and
js
cmp
push
movsx
push
sub
ins
gs
test
je
mov
cmp
xchg
or
mov
or
cmps
jmp
std
add
(bad)
in
push
in
xchg
sti
data16
mov
movs
xor
adc
into
ins
rol
ss
mov
and
jne
imul
bound
cdq
mov
nop
inc
ins
push
mov
mov
pop
adc
arpl
mov
fdivr
adc
add
shl
push
pop
mov
in
test
fst
push
push
(bad)
aam
adc
cmps
repz
pop
mov
stos
fldcw
and
out
test
pop
icebp
xor
ja
sub
mov
mov
arpl
mov
adc
sti
adc
xrelease
add
jecxz
xchg
cmp
mov
inc
xlat
outs
loope
loope
call
and
movs
sub
cmps
mov
jmp
in
jmp
adc
or
fcom
rcl
mov
in
sbb
inc
into
imul
into
scas
test
cmps
repnz
not
outs
arpl
mov
sbb
test
adc
pop
cmp
lahf
je
test
test
cmp
mov
mov
jae
push
scas
sub
out
retf
mov
and
xor
cmp
mov
xor
xchg
mov
xor
xor
test
mov
mov
jecxz
push
leave
xor
in
sbb
xchg
push
stos
mov
sub
sub
daa
test
add
inc
and
sub
push
test
mov
xchg
(bad)
inc
mov
mov
mov
pop
add
add
jbe
je
fnstsw
in
rcl
or
mov
jae
fstp
xchg
adc
inc
jl
xlat
fwait
inc
jbe
inc
jecxz
loope
inc
aad
sar
mov
sti
gs
cmps
sub
or
mov
adc
jnp
or
mov
shl
jmp
inc
cdq
xchg
or
add
sub
sub
pop
adc
dec
addr16
out
sahf
jle
push
sub
sub
sbb
movs
cmc
les
push
jne
dec
xor
fmul
sbb
ret
cmc
cwde
enter
adc
cmps
test
into
out
repz
mov
ret
fnsave
stc
pop
push
cmp
mov
jle
(bad)
push
jg
push
xor
mov
test
xor
movs
int3
mov
push
cmp
push
lods
dec
push
dec
cmc
sbb
dec
in
sub
dec
push
xchg
loop
jl
sar
mov
repz
cdq
mov
pop
pop
in
cmps
xor
pop
ins
movs
sbb
sbb
add
jl
mov
dec
outs
cmp
ds
stc
ret
add
imul
ins
xor
inc
shl
jmp
inc
outs
aas
hlt
imul
lods
lods
movs
mov
xchg
retf
jmp
pop
mov
loopne
inc
mov
push
aaa
or
movs
aam
cwde
retf
test
xlat
push
mov
outs
leave
dec
out
jb
jge
movs
clc
xchg
test
xchg
enter
rcl
inc
outs
mov
hlt
pop
out
retf
je
inc
adc
xchg
lea
iret
jmp
fdiv
cmp
sbb
std
add
xchg
and
(bad)
and
xor
sub
cwde
(bad)
mov
in
loope
ss
ror
inc
jmp
dec
xchg
es
int
jne
sub
std
rcl
xchg
pop
fwait
int
or
push
xchg
mov
mov
into
pop
pop
popa
pop
adc
and
lods
mov
jb
aad
mov
das
rol
aam
test
or
xchg
sbb
cmc
xor
and
(bad)
adc
mov
cdq
sub
ror
(bad)
(bad)
jp
mov
sub
rol
xor
xchg
aas
cmp
call
mov
mov
test
aaa
leave
lds
imul
add
ret
xchg
scas
mov
push
adc
mov
pop
or
push
pushf
and
dec
xor
sbb
mov
or
or
pop
sbb
repnz
dec
lahf
push
pushf
(bad)
out
mov
jl
lods
inc
sbb
mov
cmp
mov
rcr
outs
jl
inc
les
mov
fwait
mov
test
retf
xor
dec
ds
push
cmc
daa
imul
cmp
xchg
cmp
dec
call
add
or
fsubr
imul
pop
cmp
jno
imul
adc
push
push
xchg
bound
add
sbb
adc
not
test
mov
mov
push
call
pop
hlt
adc
inc
sub
clc
dec
cmc
xor
cmp
(bad)
(bad)
lahf
xchg
jno
sbb
rol
pop
cmp
lods
js
push
sub
sub
pusha
clc
cs
add
fdiv
push
jmp
mov
add
add
push
sub
pop
out
ret
int
xor
gs
mov
add
aas
repnz
(bad)
cmp
je
sub
nop
adc
sub
adc
out
sbb
sahf
test
and
fstp
ret
data16
cmp
repnz
jl
jae
scas
daa
leave
js
inc
test
pop
movs
push
jno
int3
xchg
xor
jp
call
mov
mov
mov
lods
dec
jns
or
dec
pop
inc
jns
sub
xor
scas
int
or
mov
xchg
push
jo
inc
bound
pop
lock
enter
adc
call
cld
xchg
inc
stos
sub
fild
add
mov
inc
pop
mov
imul
mov
lods
or
shl
rcr
pop
icebp
popa
add
mov
mov
aam
dec
dec
sub
sahf
xlat
stos
add
push
jle
jmp
scas
mov
shl
dec
add
dec
cmp
and
pop
(bad)
icebp
ds
iret
movs
sub
mov
cmps
gs
ret
cmps
pop
dec
xor
cmps
dec
(bad)
stos
mov
jmp
test
sub
clc
test
sub
jo
jmp
pop
pop
fsub
es
daa
test
mov
or
jo
aam
push
imul
test
sbb
clc
jl
lods
dec
xor
loopne
pop
ins
movs
xor
repz
hlt
pop
push
ret
test
std
cmp
mov
or
fcom
mov
idiv
dec
arpl
into
(bad)
in
sbb
or
repz
test
outs
retf
fnstcw
sub
in
pop
jle
out
sahf
mov
shl
call
and
popa
shl
and
dec
nop
adc
xchg
(bad)
xchg
cmp
or
jle
shr
pop
sub
fninit
mov
pop
outs
add
adc
fldcw
jp
aaa
int
in
stos
out
in
push
popf
dec
xchg
adc
mov
or
outs
out
dec
sbb
mov
iret
outs
mov
pop
pop
cmp
dec
into
push
mov
fsub
into
stos
fnstsw
fcom
push
les
mov
push
pushf
fnsave
push
mul
loopne
aam
xor
retf
test
dec
ret
in
sbb
sahf
jno
lods
cld
daa
inc
xchg
mov
popa
test
mov
lods
sub
xor
dec
xchg
or
xchg
jecxz
xor
mov
push
int3
sbb
push
je
daa
fs
mov
ja
inc
lods
in
pop
test
rol
cmps
jecxz
pusha
fidiv
add
mov
mov
sbb
fld
jns
push
or
lock
sub
and
jle
pop
add
neg
jmp
jmp
dec
out
sub
je
jns
(bad)
clc
sbb
xchg
xchg
sbb
mov
(bad)
(bad)
xchg
enter
shl
jmp
adc
mov
in
sar
jge
cmps
mul
(bad)
xor
sub
frstor
mov
xchg
test
or
jmp
addr16
movs
sub
xchg
adc
clc
popa
jg
mov
repnz
fxch
inc
aam
jl
lods
js
push
add
or
inc
pop
push
in
call
call
(bad)
(bad)
jns
dec
mov
lock
gs
sub
inc
inc
jno
xor
sahf
jo
repnz
push
mov
xor
ss
stos
adc
stos
and
das
dec
sti
jns
in
inc
xchg
push
push
add
and
sub
sbb
dec
adc
jno
or
and
fs
pop
xchg
std
pop
mov
mov
data16
adc
cmc
and
jbe
hlt
sub
sub
loopne
cmp
adc
dec
(bad)
sub
sbb
aas
lahf
push
xchg
int
mov
xor
dec
adc
dec
lods
sub
(bad)
xchg
push
lds
cmc
sahf
mov
daa
aam
and
xchg
adc
(bad)
js
fbld
ret
mov
jo
retf
add
mov
mov
sahf
xchg
mov
jmp
sti
pop
sbb
mov
push
into
test
cld
jecxz
push
pop
retf
arpl
clc
dec
jl
push
push
push
outs
sbb
sti
pop
mov
fisttp
xchg
jmp
and
fwait
addr16
into
mov
adc
dec
lock
cmps
xchg
mov
adc
dec
mov
cmp
sti
rcr
das
adc
cdq
fimul
xchg
pop
add
ins
xchg
inc
mov
mov
(bad)
jmp
push
lds
in
(bad)
fild
adc
mov
lea
mov
sbb
ret
pop
xchg
jge
jg
into
xor
inc
adc
fcomp
sub
std
mov
push
mov
xchg
cmp
mov
int
mov
stos
mov
push
ret
pop
sbb
imul
mov
(bad)
outs
retf
cmp
mov
call
jp
or
inc
xchg
sahf
inc
loopne
push
adc
popa
cmp
or
scas
mov
dec
adc
lahf
fcmovnu
dec
jecxz
(bad)
(bad)
cmp
mov
mov
inc
es
adc
xchg
fistp
movs
mov
push
mov
and
cli
fimul
addr16
xor
push
dec
imul
fidiv
pop
mov
outs
rol
cmp
xor
cli
xor
(bad)
rol
mov
mov
mov
sub
mov
sub
imul
fwait
and
xchg
cwde
push
mov
dec
cmp
xchg
mov
daa
arpl
sti
outs
ret
cld
xchg
(bad)
hlt
mov
loop
mov
mov
rcl
lahf
push
into
sbb
mov
pop
ins
adc
retf
sti
ds
xchg
mov
out
jmp
jns
and
retf
pop
jne
cmc
sbb
or
xchg
xchg
shl
out
dec
push
int
test
xchg
sahf
add
cmps
pop
sbb
lock
fs
mov
cld
fnstenv
scas
xor
scas
mov
loopne
leave
xchg
loop
push
popf
or
or
jno
in
sbb
mov
paddusw
lahf
repz
add
jno
cmp
mov
jmp
push
ja
out
push
out
sub
fild
mov
(bad)
add
dec
sar
call
inc
out
mov
fcomip
cmp
dec
mov
fs
mov
sbb
push
jno
xchg
pop
mov
adc
sbb
mov
mov
xchg
mov
jecxz
inc
stc
push
sub
dec
or
test
aas
xchg
lods
repz
cmp
lock
aad
mov
out
fbstp
clc
push
ins
and
cmp
sar
(bad)
es
push
pop
out
mov
add
lods
xchg
pop
cmps
push
mov
adc
add
xchg
outs
jmp
shr
retf
imul
outs
pop
jae
cmp
data16
pop
mov
xchg
std
push
lds
or
mov
push
fsub
pop
in
add
push
repz
push
sbb
sub
xchg
mov
push
test
add
or
or
lock
sub
popa
jge
out
mov
jne
push
xchg
mov
mov
mov
pop
mov
fld
pop
pusha
mov
or
add
or
cmp
push
imul
mov
dec
mov
sub
mov
and
idiv
sahf
js
and
pop
cmp
mov
imul
cld
iret
mov
(bad)
sbb
hlt
pop
ror
cld
cmp
call
je
push
push
adc
pop
mov
leave
dec
arpl
sub
aam
push
fdivr
xlat
jne
pop
jl
push
cmp
jne
mov
sub
arpl
jle
cmp
pop
outs
pop
push
or
mov
add
fcmovne
push
xlat
and
jge
gs
inc
mov
mov
xchg
iret
cld
dec
movs
sysenter
mov
out
cmc
xchg
jecxz
out
push
retf
ret
mov
daa
mov
retf
out
add
inc
scas
xchg
mov
adc
fisttp
test
add
and
fist
stc
or
mov
mov
mov
ins
test
xchg
inc
or
inc
and
xlat
leave
mov
ds
int3
scas
fwait
out
mov
stos
retf
fist
(bad)
dec
fldcw
outs
mov
add
test
cmps
sti
repnz
hlt
(bad)
rol
aad
repnz
pop
mov
lea
sub
jge
aas
popf
or
(bad)
stc
mov
test
cmps
bound
lock
je
inc
out
xchg
popa
mov
inc
int3
fstp
lods
(bad)
aad
outs
cmps
and
jae
sbb
pop
and
mov
mov
xor
adc
movs
pop
xlat
outs
pop
(bad)
cmp
or
or
or
das
sbb
push
fisubr
aaa
mov
fbld
xor
jb
dec
(bad)
dec
clc
out
xor
lods
cmp
mov
fwait
mov
lods
jge
push
push
sub
je
mov
xchg
push
js
stos
inc
mov
bound
test
fistp
std
daa
daa
jne
pop
sub
(bad)
jne
jae
cwde
lahf
in
pop
push
outs
jmp
rol
pop
aas
(bad)
sahf
xor
nop
jp
pop
inc
leave
test
push
(bad)
fild
leave
(bad)
fidiv
add
mov
jmp
push
out
rcl
je
mov
ret
ret
sub
in
ret
push
mov
call
push
stos
xchg
nop
sti
push
fadd
xor
cmp
lods
shl
sub
xchg
sub
mov
test
sbb
nop
ins
jno
gs
daa
inc
iret
push
movs
add
mov
sbb
imul
mov
push
dec
xchg
mov
ffree
loop
lock
stc
mov
addr16
or
in
push
movs
sub
mov
call
and
fcom
sbb
pusha
enter
jp
add
sub
sub
push
outs
ins
lods
aas
test
cmps
and
push
(bad)
shl
pop
sub
mov
push
aaa
xor
aas
sar
adc
movs
cs
loope
push
mov
bound
cmp
ret
push
cwde
in
fdivr
xor
fwait
hlt
pop
call
sub
dec
clc
fwait
mov
shl
cs
xor
test
jp
dec
mov
or
cmp
sub
dec
rol
jne
jbe
mov
jge
nop
cwde
fwait
pop
daa
cmps
mov
(bad)
test
inc
in
push
mov
lods
cli
std
(bad)
popf
and
jmp
adc
sbb
fstp
retf
push
and
mov
sub
lea
inc
push
loope
sub
mov
pushf
push
adc
ror
lea
cmp
add
push
lea
sub
out
xor
aad
sbb
iret
inc
add
into
inc
adc
pop
movs
adc
lods
pop
xor
push
push
rcl
lahf
pop
addr16
sbb
inc
(bad)
pop
add
jae
loope
mov
nop
loop
push
cdq
daa
es
cmp
adc
(bad)
add
lods
xor
xchg
and
out
jmp
and
in
dec
and
xchg
addr16
stos
test
stos
mov
(bad)
std
out
jmp
jo
inc
xchg
(bad)
bnd
(bad)
enter
jmp
jne
cmp
push
in
jae
sub
jno
pushfw
sbb
adc
push
push
dec
sub
imul
lahf
and
call
and
pop
(bad)
mov
mov
mov
frstor
push
pushf
mov
cld
push
test
cld
push
test
sbb
dec
jmp
sbb
pop
enter
rol
arpl
sbb
dec
inc
pushw
lock
xchg
dec
xchg
adc
lods
jnp
add
mov
mov
mov
add
xchg
js
mov
cdq
push
loopne
sbb
push
sahf
mov
mov
mov
cmc
or
cmp
clc
out
cs
mov
cmp
(bad)
jmp
add
xor
bound
mov
lds
ror
shl
jg
xor
xchg
stos
mov
pop
and
ds
xchg
jb
fwait
add
cmp
xchg
imul
jne
test
jmp
inc
mov
jp
xchg
inc
or
dec
int3
cmp
jnp
lods
add
and
sti
and
pusha
loopne
cmp
(bad)
cld
jno
mov
js
dec
jecxz
pop
fnstsw
mov
push
jecxz
sub
add
sub
jle
shl
out
adc
xchg
mov
push
(bad)
cli
jno
sahf
not
mov
stos
cmps
test
loopne
popa
mov
fabs
imul
ret
mov
inc
neg
out
out
ret
jl
sub
jno
sub
(bad)
mov
js
int
jmp
sub
jmp
inc
sub
mov
stos
and
sbb
pop
retf
aad
add
sar
mov
mov
push
out
sub
jno
test
xor
xor
push
lods
push
jecxz
cli
lds
das
(bad)
call
xor
mov
cmp
je
dec
xor
sbb
inc
ins
test
inc
cdq
mov
into
mov
test
out
mov
mul
mov
fadd
outs
mov
cmp
(bad)
addr16
mov
jmp
shl
inc
inc
push
out
jmp
js
scas
ss
jl
adc
push
adc
ror
test
sub
cmp
mov
js
nop
inc
sub
test
add
out
loop
mov
lock
sub
or
add
mov
jnp
aam
in
cdq
mov
dec
add
rol
adc
imul
hlt
mov
lds
sbb
call
or
fiadd
repz
adc
sahf
das
pop
daa
push
loope
test
icebp
mov
mov
in
jo
stc
stos
bound
loope
inc
call
shr
xchg
(bad)
xchg
aas
icebp
(bad)
or
inc
xor
pop
push
xor
lahf
sub
and
bound
push
jnp
repnz
mov
cmps
pop
fmul
addr16
icebp
jge
push
ret
xchg
push
push
push
or
push
imul
xlat
mov
inc
inc
lock
movs
mov
fidivr
sbb
or
pcmpeqd
inc
xchg
jno
imul
lahf
add
popa
mov
dec
pushf
push
in
mul
out
inc
push
shl
mov
cmp
mov
fld
adc
test
in
jne
in
cs
mov
sti
lahf
sbb
ins
dec
jne
ds
xchg
lea
jmp
ret
mov
jmp
je
in
les
adc
push
test
inc
xchg
call
jp
and
mov
mov
mov
push
adc
or
inc
sub
imul
add
loope
into
xchg
and
inc
fdiv
in
xchg
jmp
and
dec
push
jb
cwde
inc
gs
fild
mov
or
sub
sbb
scas
mov
stc
inc
cmps
repz
jae
and
xchg
pop
ret
pop
mov
sub
jg
xchg
std
iret
adc
fist
scas
dec
test
cmps
stos
sbb
jg
shl
jae
or
mov
adc
aam
mov
xchg
pop
daa
mov
jns
cwde
push
pop
jbe
aam
mov
jl
or
add
std
outs
adc
jecxz
out
push
sub
sahf
and
add
xor
push
mov
(bad)
ds
rol
fsubr
xchg
jmp
leave
aaa
sub
popf
push
cmp
jbe
shl
retf
lea
mov
sbb
gs
sub
icebp
imul
sar
mov
mov
js
inc
(bad)
dec
jp
add
or
mov
sub
cmp
sbb
mov
outs
bound
jmp
iret
lods
in
imul
(bad)
jmp
iretw
jle
inc
je
xlat
mov
pcmpgtw
pop
mov
aam
ss
mov
idiv
cmp
xor
mov
popa
mov
stos
adc
xor
sahf
rcl
(bad)
icebp
sub
imul
jle
rol
mov
lods
shr
xor
push
or
or
push
cmp
cmp
shr
add
test
push
push
xor
addr16
scas
dec
iret
jb
call
cmps
dec
jmp
fninit
push
cdq
mov
in
cmp
out
jl
xchg
out
sub
or
xor
jmp
(bad)
rol
or
dec
sub
sbb
mov
pop
cmp
pusha
outs
outs
push
mov
jb
push
mov
add
loop
out
or
sbb
xlat
xchg
ror
lock
in
cmp
mov
jmp
les
lods
pop
sbb
loopne
xor
push
adc
jb
jmp
retf
sub
scas
je
test
inc
sbb
lods
(bad)
mov
mov
bound
lahf
scas
inc
sub
call
iret
inc
xchg
(bad)
mov
mov
lea
dec
push
scas
mov
outs
xor
mov
in
jp
retf
push
and
(bad)
ss
sbb
cli
mov
xor
jmp
pop
stos
pop
xor
lods
mov
in
test
adc
sub
mov
adc
ret
lods
add
mov
(bad)
mov
push
mov
xor
ins
aas
mov
or
jmp
pusha
and
bound
cmp
pop
mov
xor
xor
inc
inc
dec
mov
jae
(bad)
mov
mov
repz
jne
ins
sti
jmp
xor
aam
inc
cmp
not
dec
and
popf
cmc
pusha
sub
jae
scas
repz
fimul
mov
dec
or
mov
rcr
test
and
nop
mov
add
xchg
lock
lock
push
push
call
or
popa
mov
push
mov
mov
mov
mov
dec
mov
into
mov
mov
cdq
mov
and
es
adc
stos
inc
loop
push
mov
sbb
mov
xchg
cmps
cmp
xchg
pop
xlat
mov
adc
fxch
int3
es
scas
scas
data16
or
ja
cmp
outs
xchg
retf
ins
push
xor
icebp
inc
mov
xchg
nop
cld
pop
cmps
mov
mov
scas
in
clc
imul
scas
loope
out
cld
jb
jmp
pop
repz
out
mov
push
lahf
sbb
mov
ret
bound
dec
cmc
pop
push
xchg
jge
ins
inc
fucompp
push
adc
movs
sub
sbb
mov
mov
inc
int3
xor
push
imul
add
cld
hlt
xor
pop
sbb
or
sub
xchg
pop
(bad)
loop
or
repz
and
adc
stos
arpl
repz
inc
lahf
shr
ds
push
dec
dec
pop
sbb
cmp
mov
shr
aad
iret
out
and
iret
mov
in
das
xor
je
jo
scas
les
adc
add
push
sbb
(bad)
(bad)
fsubr
inc
push
add
xchg
push
jae
inc
into
sub
pop
sbb
leave
(bad)
xchg
clc
jge
add
push
xchg
jecxz
pop
inc
pop
bound
xchg
cwde
mov
pop
leave
sbb
xor
dec
(bad)
jmp
sbb
stos
jmp
cmps
push
inc
jecxz
pop
push
stos
jmp
mov
cmc
int3
pop
xor
in
adc
lods
stos
cmp
add
das
sbb
loope
ds
sbb
in
scas
adc
cmp
add
push
xlat
rcr
cmp
add
sub
xchg
(bad)
retf
inc
jg
or
jae
es
cs
jle
mov
sbb
and
adc
add
jb
xchg
popf
aam
cmp
mov
xchg
(bad)
adc
das
xchg
inc
mov
clc
cmp
arpl
out
ficomp
pop
stc
daa
lea
inc
rcl
cmp
sbb
fcom
or
jns
imul
jl
hlt
sbb
sub
mov
mov
push
sub
ror
stos
(bad)
(bad)
cmp
lock
(bad)
push
addr16
adc
mov
je
sar
jle
jmp
mov
ret
inc
(bad)
stos
push
mov
and
mov
out
ss
js
adc
jle
std
push
cmp
ficomp
jae
aas
(bad)
(bad)
bound
std
aad
xor
outs
lahf
mov
add
in
into
jmp
xchg
jo
and
sub
mov
jg
fwait
ins
jg
sar
or
xor
(bad)
and
pop
into
shr
mov
into
inc
xchg
inc
mov
lods
xchg
adc
and
mov
push
jp
shl
adc
shl
xor
lds
xchg
popa
xchg
sbb
add
mov
jns
arpl
inc
dec
xchg
(bad)
or
push
or
aaa
out
sbb
xor
pushf
scas
gs
jmp
push
shr
pusha
sub
sub
pop
iret
call
daa
add
and
jecxz
loope
iret
addr16
jno
loop
jmp
repnz
jbe
sar
out
sbb
mov
xor
aaa
cmp
(bad)
enter
stos
repz
push
adc
cld
add
adc
int3
jns
test
jmp
sbb
arpl
jne
fadd
mov
mov
add
fs
ins
jo
and
loop
pop
or
cmp
sbb
and
or
dec
cmps
adc
orps
mov
out
fild
or
xchg
cs
lds
(bad)
in
pop
pop
add
sar
cmp
in
and
in
hlt
dec
icebp
stc
xchg
scas
fisubr
jne
mov
dec
out
pop
mov
int
clc
fwait
push
je
pop
mov
ins
gs
cmc
mov
arpl
adc
les
sub
add
sub
scas
int3
out
cmp
stos
pop
mov
cld
adc
mov
pop
dec
dec
ds
jno
cld
imul
push
cmc
jo
push
jg
or
cmp
out
enter
int3
ret
jo
pop
mov
pop
mov
pushf
hlt
loope
jge
mov
pop
(bad)
cs
inc
xor
inc
bound
jo
popf
rcl
mov
(bad)
mov
daa
jb
mov
mov
loope
xor
mov
fcmovnb
out
cdq
movs
sbb
cmp
lock
outs
push
stc
and
jecxz
push
fisttp
pop
fsubr
lea
jmp
(bad)
jno
cmp
add
data16
jbe
and
pusha
xchg
push
mov
ret
push
jge
and
ins
mov
neg
sbb
push
xchg
jge
xor
movs
mov
mov
lea
push
(bad)
xor
and
jmp
dec
retf
imul
and
mov
mov
adc
dec
and
mov
lea
retf
xor
fnstcw
mov
or
sbb
inc
enter
leave
xor
frstor
mov
xchg
add
cli
out
call
sbb
adc
mov
cmp
mov
cmp
or
dec
and
adc
adc
dec
cmp
stos
addr16
mov
dec
and
nop
fs
pop
dec
mov
mov
call
mov
push
pusha
pop
jl
movs
(bad)
mov
add
(bad)
nop
pop
popa
(bad)
int3
push
push
addr16
cmps
int
xor
scas
scas
mov
mov
xor
inc
enter
ret
jp
out
or
sbb
shl
mov
jne
mov
cdq
or
jle
sbb
popa
fwait
icebp
lds
test
(bad)
pusha
bound
rsm
jecxz
xchg
pusha
cli
cli
call
cmp
jo
inc
sbb
sub
xor
inc
and
retf
cmc
and
neg
cmp
push
and
pop
popf
call
inc
push
into
aad
test
mov
rol
jmp
(bad)
shl
xchg
repnz
stc
xor
adc
dec
add
ficom
cdq
push
adc
cmp
lea
sbb
test
inc
inc
jp
mov
sbb
and
xor
cmc
ins
dec
mov
pop
mov
inc
pushw
add
retf
data16
cld
sub
cmp
inc
fnsave
sbb
sti
and
and
mov
fwait
mov
mov
leave
sbb
shl
test
xchg
aaa
or
clc
cmc
pop
fmul
push
popf
mov
or
scas
(bad)
loope
inc
push
out
or
add
call
loop
push
mov
adc
in
arpl
mov
or
shr
xchg
cmp
stos
das
mov
jae
jmp
mov
rcr
out
repz
or
pushf
dec
push
repz
imul
sub
cmp
outs
sbb
mov
push
hlt
fisubr
aas
mov
psubw
jp
and
add
(bad)
pop
add
push
lock
imul
push
je
cmps
inc
fwait
call
sub
xchg
icebp
sub
inc
cmp
xchg
push
add
aas
fild
shl
lock
mov
cmc
cmp
mov
and
nop
jmp
jns
cmp
repnz
push
js
jae
pop
into
sti
sbb
imul
lds
mov
hlt
add
data16
jbe
inc
imul
fld
fsubr
inc
jge
bound
inc
pop
(bad)
je
jae
mov
sub
loope
sub
mov
mov
cwde
inc
inc
test
pop
mov
addr16
pop
cs
xor
sbb
adc
mov
or
cmps
retf
inc
aad
xchg
pop
mov
aam
dec
add
adc
xchg
adc
jmp
push
in
inc
sbb
dec
ds
idiv
dec
out
sbb
shl
lahf
movs
adc
test
rcr
and
pusha
or
ror
adc
cmp
xor
push
sbb
(bad)
gs
out
mov
mov
xchg
fstp
mov
aad
inc
xlat
pop
outs
cmc
sbb
ficom
cwde
dec
cwde
or
mov
shl
and
inc
popa
(bad)
sub
sbb
paddd
loope
xchg
mov
sbb
pop
push
ja
loop
test
ins
out
scas
scas
adc
mov
sub
fnsave
jb
mov
adc
sbb
std
cdq
adc
jge
nop
sar
mov
in
outs
xchg
push
sar
add
int
jecxz
mov
adc
lods
std
or
adc
aam
mov
into
cmp
push
xlat
mov
and
jns
xchg
fisub
lods
retf
xor
pop
push
(bad)
shl
pop
mov
xchg
es
fnstenv
inc
int
ja
push
arpl
out
dec
jl
xor
xchg
cmp
jb
push
lock
fwait
jo
sbb
inc
jg
loopne
xchg
cmp
stos
and
retf
sub
(bad)
mov
jge
loopne
rcr
jmp
test
cmp
into
loope
xchg
jl
cwde
scas
fs
xchg
and
pushf
test
sub
xchg
dec
jge
aam
ins
jne
add
sbb
call
fcmovb
xor
mov
dec
mov
adc
xor
pop
ins
lock
xor
movs
dec
or
inc
stos
gs
xchg
add
cwde
pop
iret
mov
add
pop
lahf
inc
and
adc
call
enter
idiv
xor
aam
and
test
push
jl
out
sbb
add
out
adc
icebp
xchg
stos
in
popf
add
std
pop
mov
imul
inc
je
shl
dec
jg
sub
mov
xchg
stos
xchg
mov
jg
xor
ja
shl
shl
loop
jmp
arpl
push
add
call
out
cs
jns
dec
sbb
jge
pop
loope
mov
jp
xchg
inc
mov
in
inc
cmc
test
fucomp
pop
mov
ins
rcr
inc
mov
das
or
mov
cmp
stos
mov
rcr
cmps
loopne
cmps
ins
and
jae
pop
jecxz
aaa
jg
add
jnp
cli
or
xor
in
mov
scas
jmp
xchg
aas
xor
dec
sub
xchg
in
and
popa
mov
fild
push
cmps
xor
ror
mov
jecxz
xor
jnp
pop
inc
xchg
add
dec
aad
cmp
cwde
mov
mov
ja
inc
inc
mov
jmp
and
icebp
and
mov
mov
out
ret
dec
push
sub
push
jmp
push
mov
cwde
imul
jb
mov
in
jge
push
mov
pop
pop
mov
inc
xchg
movs
mov
lds
out
xchg
add
mov
xor
popa
mov
sbb
xchg
aaa
fcomp
jge
punpckhbw
scas
inc
pop
not
ss
out
inc
inc
fs
and
push
fldcw
dec
lock
sub
gs
push
in
test
inc
jge
icebp
jecxz
xchg
in
cmp
or
mov
int
mov
xlat
sbb
(bad)
fist
push
repnz
mov
fstp
mov
addr16
test
sbb
xchg
(bad)
inc
retf
lods
mov
test
cwde
stos
(bad)
fiadd
xchg
sar
jbe
sahf
mov
ss
rol
js
or
mov
sub
add
or
test
and
daa
lds
pop
jmp
add
add
mov
xchg
ins
push
mov
fld
mov
not
cmps
into
or
test
fimul
adc
test
sub
push
mov
fistp
sub
(bad)
loop
pop
sub
icebp
stc
lahf
(bad)
lock
fstp
loope
xlat
(bad)
sahf
ret
mov
call
push
fdiv
sbb
jne
gs
clc
(bad)
jg
pop
(bad)
sbb
int
scas
cmp
ret
mov
es
mov
mov
lods
retf
jp
aas
push
dec
push
in
stc
xor
dec
cmps
inc
mov
xor
push
in
pop
push
ret
(bad)
stc
fistp
inc
retf
dec
mov
cmp
sub
push
dec
stos
loop
and
mov
add
mov
jecxz
pop
mov
into
jmp
jmp
jbe
(bad)
stc
in
xchg
cmps
call
sub
add
xor
outs
xchg
and
mov
es
out
mov
inc
sub
mov
(bad)
(bad)
push
xor
add
dec
sbb
sub
inc
jmp
xor
sub
mov
sbb
xchg
mov
repz
into
xchg
retf
fdiv
xchg
push
fld
sbb
xor
add
inc
or
js
xor
push
cli
cld
sbb
in
rol
pop
call
lods
repnz
sar
and
scas
or
add
cmp
out
add
mov
fimul
lds
ins
xchg
in
(bad)
pop
(bad)
stc
call
aam
and
je
gs
pop
jb
inc
cli
leave
mov
jns
push
or
fidivr
jg
dec
ds
mov
test
add
cmp
sbb
or
int3
dec
push
int3
mov
stos
icebp
sub
movs
aaa
mov
mov
jecxz
aam
call
aad
into
mov
xor
adc
or
imul
lods
rcl
fmul
fs
imul
push
enter
data16
call
sbb
fimul
ret
inc
(bad)
cdq
xchg
sub
xchg
adc
and
or
lds
add
pop
ins
push
xchg
xor
sub
ret
test
and
adc
sub
addr16
lock
cdq
icebp
add
xchg
cmp
pusha
and
sahf
pop
mov
out
loopne
push
movs
jl
push
je
xor
xchg
out
mov
retf
shr
js
add
cmp
arpl
jg
dec
test
xlat
ins
rcr
jo
dec
pop
fmul
fs
sar
cmp
dec
or
sar
hlt
dec
cmps
addr16
ja
les
fs
pop
cmp
sahf
lahf
dec
mov
and
add
arpl
mov
sbb
push
and
dec
xor
jmp
mov
psubsw
lahf
push
push
fisub
jl
xchg
sub
das
jb
sbb
in
xchg
movs
mov
test
or
adc
push
ins
(bad)
jne
fisttp
(bad)
adc
cld
push
or
dec
and
pop
sbb
das
ret
ret
mov
aam
daa
test
and
imul
xchg
mov
(bad)
pop
fdivr
es
push
icebp
jle
std
inc
push
outs
and
or
movs
jmp
(bad)
sbb
cmp
call
jae
inc
ins
cmp
inc
and
xchg
ins
nop
pusha
push
les
add
mov
loop
popa
jbe
sub
ins
(bad)
push
sbb
shr
adc
cmp
push
xor
and
mov
int
fisubr
push
fldcw
in
push
outs
loope
sub
in
add
adc
aam
rol
inc
(bad)
(bad)
cmp
xchg
or
test
mov
rcr
mov
out
xchg
pop
cmps
(bad)
xor
retf
push
cmp
pusha
ret
mov
leave
in
scas
and
test
mov
jnp
cmp
mov
movs
xor
mov
xchg
inc
and
lods
or
ret
retf
jle
jl
scas
or
jle
pop
outs
inc
xadd
retf
dec
rcl
aas
sub
cs
mov
sbb
inc
(bad)
cld
sbb
push
out
lods
cli
sub
mov
adc
mov
lds
inc
out
ds
jl
push
inc
and
mov
or
mov
movs
cdq
mov
mov
outs
cmp
out
push
dec
xchg
xchg
sub
outs
ret
dec
push
lds
pusha
sbb
jp
mov
sahf
stos
cmps
or
ja
pop
sbb
pusha
ret
in
xchg
jl
sbb
dec
pushf
aaa
pop
xor
test
stc
nop
sar
je
cld
pop
mov
sti
(bad)
and
xor
test
ss
fs
cli
popf
loop
test
xor
movs
fdiv
push
mov
or
inc
nop
cmc
fimul
stos
push
mov
out
pop
enter
cmp
xor
sub
out
pop
out
mov
inc
adc
cdq
(bad)
jns
rcl
xchg
add
push
(bad)
fadd
lahf
xchg
out
lea
mov
mov
jns
cmp
das
push
pop
mov
movs
out
repnz
push
mul
imul
lds
(bad)
js
loopne
adc
out
inc
and
js
push
adc
dec
jb
sbb
sti
sbb
pop
std
sbb
mov
sbb
lods
rcr
jo
and
lahf
movs
(bad)
outs
dec
cld
retf
mov
cmps
sti
jnp
push
rcl
mov
ret
add
mov
cmp
(bad)
adc
fisttp
div
xchg
stos
scas
in
or
(bad)
and
rol
mov
adc
mov
or
pop
das
add
repnz
dec
mov
repnz
imul
gs
inc
or
ins
dec
jbe
das
adc
or
lods
inc
aad
fwait
jl
sub
and
mov
inc
dec
icebp
mov
cld
mov
sahf
aas
jmp
xor
mov
adc
jmp
dec
xchg
or
pop
aaa
mov
dec
jge
mov
jnp
shl
ret
outs
and
jp
jno
adc
sbb
in
loopne
mov
xor
test
ss
mov
ss
pushf
daa
ror
mov
dec
push
fld
xchg
aas
daa
sahf
inc
add
sub
lods
rol
pop
in
inc
pusha
sub
adc
or
push
push
loope
mul
out
and
call
cmps
xchg
retf
mov
mov
mov
dec
neg
pop
xor
push
icebp
fst
lea
dec
lea
cmp
jo
fdivr
ret
jge
stc
fs
xor
push
push
int
out
loope
sbb
sbb
xor
rol
pushf
loope
rcl
movs
push
lock
mov
and
rcl
or
and
inc
push
(bad)
or
mov
fdivr
cmps
data16
sub
and
pushf
daa
scas
inc
sbb
sbb
push
fidivr
imul
icebp
call
out
ror
lods
lods
in
cdq
cmp
rcl
std
dec
not
push
sub
jle
fldenv
dec
cli
movs
ret
repnz
cmp
dec
adc
aad
dec
mov
and
pop
sub
sbb
lds
leave
xchg
sbb
call
cdq
mov
lods
jb
mov
or
xchg
inc
dec
fist
add
jo
xchg
mov
or
push
inc
xchg
loope
inc
push
es
in
or
lock
inc
dec
icebp
xor
xor
xlat
add
int3
dec
mov
and
jp
jl
cmp
rcl
std
shl
imul
sub
cmc
ret
pop
loope
cmp
lods
push
adc
mov
jl
movs
sti
pushf
clc
sub
cvtsd2si
ss
mov
nop
(bad)
push
cmp
fldenv
ret
aad
sbb
(bad)
add
and
add
jg
sahf
les
es
loopne
xchg
test
sbb
adc
xor
mov
xor
stos
ret
mov
cmps
pusha
pop
sbb
scas
mov
push
and
sbb
push
dec
shr
xchg
xlat
xor
shr
test
mov
mov
in
cdq
mov
(bad)
and
jmp
nop
cmps
pushf
std
in
stos
clc
add
push
jae
(bad)
and
not
sar
enter
loopne
mov
repz
(bad)
out
sub
out
sub
mov
fs
ins
enter
pop
out
inc
jae
push
in
sbb
in
fdiv
lock
sub
cli
aam
add
cmp
cwde
dec
lds
movs
in
ret
mov
pop
jbe
div
ficom
adc
sub
jl
fbld
test
pop
push
ror
push
aad
inc
mov
cmp
mov
mov
(bad)
out
sahf
sti
cwde
out
inc
test
mov
ret
inc
cmp
sbb
lock
jbe
jae
sub
mov
ret
push
adc
xchg
jg
jge
jg
pusha
arpl
hlt
xor
mov
arpl
psubusw
mov
add
call
push
inc
or
les
inc
jle
mov
adc
maskmovq
test
mov
mov
and
mov
xchg
inc
adc
mov
add
lahf
sbb
daa
imul
push
aam
cmovg
xchg
mov
pop
sbb
pop
test
cmp
xchg
jge
jp
add
cmc
shl
sbb
repz
mov
cmps
pop
xor
mov
out
push
es
add
gs
enter
and
addr16
jmp
ds
jno
test
pop
or
retf
or
retf
sub
cmp
xchg
call
jbe
rcr
icebp
cmps
mov
cmp
ret
fdivr
outs
xor
add
inc
(bad)
mov
lgdtd
sbb
call
push
test
xor
jg
push
mov
ss
dec
cld
xlat
jo
lods
test
lock
mov
mov
icebp
or
bound
push
adc
inc
sbb
shl
or
pushf
scas
js
sbb
add
cs
je
ret
jl
jl
adc
pop
dec
aad
clc
cmps
lea
scas
or
cmp
inc
dec
fistp
test
lds
stos
fisubr
inc
mov
fwait
mov
daa
jle
jl
loopne
icebp
cmps
mov
(bad)
xor
or
or
js
popf
retf
aam
xor
and
test
scas
xor
add
pop
jmp
cdq
fsub
xor
jae
movs
int
inc
sbb
cmp
jno
repz
sbb
sbb
lds
add
scas
mov
jle
cmp
leave
in
pop
movs
sbb
inc
leave
in
std
or
and
adc
jecxz
hlt
outs
rcl
jmp
in
ret
mov
inc
cmp
outs
fld
(bad)
fistp
xor
stos
enter
mov
jae
mov
push
push
xchg
dec
adc
cmps
xchg
pushf
xor
loopne
test
pop
idiv
cs
mov
mov
sahf
and
sub
popf
daa
cmp
(bad)
mov
and
xchg
cdq
retf
xchg
ss
jg
ret
push
enter
add
outs
sub
in
dec
mov
outs
or
lahf
jecxz
cmp
jp
pop
aas
shl
sbb
or
cld
cmp
mov
push
mov
fistp
lods
mov
sbb
push
push
std
pushf
popf
adc
dec
push
xchg
mov
mov
and
sub
dec
jbe
push
add
js
mov
fimul
mov
in
or
pusha
xchg
mov
xor
or
adc
fisttp
mov
imul
loop
sar
loope
dec
popf
push
lods
xor
repnz
cmp
loope
sbb
adc
cmp
mov
out
(bad)
mov
fmul
push
cmp
hlt
mov
pop
push
mov
push
ss
xor
leave
mov
cmc
and
and
xor
ror
xor
fiadd
xchg
push
xor
out
sbb
sub
idiv
jae
adc
mov
lds
retf
in
fstp
fcmovnb
sbb
xchg
addr16
inc
std
sub
xor
in
(bad)
aam
adc
xor
mov
mov
add
ror
scas
jecxz
mov
arpl
es
imul
jge
leave
xchg
push
fistp
sbb
jo
fcom
dec
pop
jae
imul
pop
and
sti
addr16
je
fs
mov
inc
int3
inc
xor
lea
out
shr
arpl
dec
ficomp
or
mov
jnp
inc
add
mov
push
and
push
mov
fbstp
loop
pop
or
out
add
sub
xchg
push
es
jnp
es
inc
add
scas
jg
push
jge
cmp
push
push
inc
add
mov
or
jg
or
mov
mov
cs
inc
leave
or
pop
mov
scas
js
sub
iret
repnz
cmp
and
add
dec
call
mov
shl
ins
push
loope
or
dec
sub
repnz
cmp
mov
mov
mov
int3
push
xor
inc
push
jmp
jl
jo
sub
add
ds
inc
call
mov
or
shl
push
pop
sbb
ins
and
sbb
jmp
or
in
xchg
adc
lock
or
xchg
mov
push
aaa
mov
mov
sub
jnp
das
std
inc
fmul
mov
mov
push
push
xchg
dec
or
jmp
dec
xor
imul
mov
rcl
repz
scas
dec
es
mov
addr16
sbb
in
std
xchg
outs
push
stos
sbb
sbb
in
push
xchg
adc
jg
fwait
ss
lods
pop
pop
popf
mov
call
xor
sbb
adc
into
(bad)
in
pop
(bad)
aas
push
or
adc
mov
test
add
jl
add
sahf
ret
call
inc
das
push
xlat
sub
push
and
jmp
pop
and
xchg
sar
and
mov
popa
popa
mov
test
jae
aaa
ret
aam
in
mov
aad
ret
(bad)
dec
pop
xchg
mov
mov
ja
rcl
loop
mov
mov
dec
jmp
daa
shl
dec
icebp
push
loopne
mov
xor
shl
gs
mov
mov
mov
and
push
jo
inc
cmps
xor
ret
mov
movs
jnp
xor
scas
fistp
movs
in
mov
fwait
or
es
pop
pop
add
inc
push
(bad)
pop
lods
out
fsubr
lea
ds
push
mov
imul
cmp
xchg
jns
retf
fs
sub
push
adc
mov
add
cdq
ret
xchg
or
sbb
gs
ds
jo
xor
inc
sbb
pop
sbb
lods
inc
stos
fbld
mov
sbb
(bad)
in
cld
push
jp
repz
pop
pushf
mov
nop
dec
mov
dec
mov
xor
int3
cmp
cmc
or
cs
xlat
in
sbb
ds
into
lds
les
mov
adc
stos
xchg
push
scas
mov
dec
ins
xchg
into
sbb
std
aad
retf
mov
call
cmp
stc
cmps
fsub
sahf
fdiv
stos
inc
dec
movs
pop
out
xchg
sbb
cmp
sahf
push
mov
inc
stos
pop
ret
ficom
retf
pop
scas
inc
aad
call
dec
mov
jne
inc
lock
ja
cs
cmp
call
(bad)
(bad)
cmc
sbb
push
stc
add
cli
fcomip
adc
sti
loop
call
lock
cmps
cmps
ja
xor
inc
retf
sbb
test
jnp
push
jp
scas
mov
mov
push
adc
scas
adc
fbstp
out
inc
pop
sub
loopne
xor
push
test
rcr
test
ss
das
cmp
jge
sbb
jo
inc
icebp
test
adc
aad
sbb
push
push
not
fisubr
icebp
fiadd
jge
adc
test
rol
pop
cmps
ins
mov
push
inc
outs
mov
mov
loope
leave
mov
pop
repnz
test
ins
scas
sub
and
pop
call
lea
jbe
sub
gs
imul
jg
je
loopne
out
adc
(bad)
daa
mov
(bad)
jg
mov
jg
xchg
retf
ins
sbb
push
ret
adc
ret
mov
out
movs
jns
pop
pop
xchg
movzx
lods
mov
sbb
out
ins
mov
icebp
outs
and
es
sbb
nop
aaa
adc
and
dec
aas
stc
xchg
repnz
jle
sub
test
jecxz
dec
hlt
aas
xchg
mov
pop
cdq
out
mov
mov
jb
pop
jecxz
xchg
and
mov
frstor
sbb
pop
add
or
mov
sbb
xor
sahf
pop
ss
sbb
sbb
(bad)
cld
xchg
cmps
popf
sbb
pop
xor
aad
push
cmp
pop
jne
rol
xchg
pushf
imul
sar
scas
(bad)
sbb
daa
pop
xchg
pop
or
inc
sub
ja
dec
mov
call
dec
lods
(bad)
mov
mov
jns
dec
dec
add
(bad)
or
lea
cmpxchg
dec
out
or
movs
(bad)
xchg
sub
imul
(bad)
test
cld
xchg
jp
pop
mov
adc
enter
(bad)
lock
outs
ds
fdivp
mov
pop
or
push
out
(bad)
push
ins
sub
cs
sbb
sbb
pop
sub
inc
add
pop
sbb
xlat
repz
and
mov
dec
ror
loop
dec
mov
and
nop
rcl
mov
jo
mov
mov
or
daa
stos
aad
iret
lods
push
jno
sub
pop
push
or
or
jecxz
add
ret
mov
xchg
sar
xchg
cwde
cdq
xchg
stc
adc
xchg
icebp
add
ret
int3
not
push
loopne
dec
jl
cmp
mov
rcr
or
sub
das
and
ror
sub
inc
mov
jbe
cld
sbb
mov
ja
repz
cmp
mov
test
test
aas
fisubr
psubd
mov
add
or
and
fs
shl
ds
rcl
sar
sub
xchg
fwait
rcl
mov
aad
and
push
retf
lock
(bad)
int3
test
xchg
and
add
xor
xchg
xchg
inc
call
inc
retf
mov
dec
(bad)
xchg
inc
mov
lea
lods
icebp
push
fneni(8087
repnz
pop
push
fwait
ins
dec
jmp
in
mov
fidivr
out
xor
and
cld
sbb
add
and
mov
movs
adc
out
out
cli
and
lods
mov
lods
inc
sahf
xchg
xor
out
stos
pop
or
rcr
ins
pop
retf
(bad)
cmc
in
lods
loopne
mov
(bad)
jne
mov
scas
jge
mov
or
mov
add
and
sub
inc
leave
test
mov
inc
add
pop
lea
push
imul
cmp
xor
pop
outs
bnd
xor
mov
fmulp
mov
(bad)
pop
push
enter
je
sbb
(bad)
cmps
xor
push
xchg
add
movaps
(bad)
pop
aad
push
push
mov
adc
dec
int3
dec
icebp
jns
push
mov
iret
mov
imul
dec
xor
cmp
cmps
xor
push
lods
pop
cdq
fwait
or
sbb
loope
and
nop
scas
mov
xchg
icebp
add
data16
ja
fistp
and
loopne
add
mov
dec
xor
add
shufps
popf
push
cdq
mov
fsub
jmp
shl
cmp
add
mov
mov
mov
sub
ret
js
fs
aas
mov
mov
add
outs
cmps
push
push
jb
arpl
mov
mov
movs
jae
test
fadd
fld
pusha
dec
loope
mov
or
cmc
iret
and
nop
retf
adc
in
mov
and
mov
retf
stos
sbb
int
ficomp
cmp
jns
and
cmp
dec
(bad)
cmps
pop
or
in
fs
imul
adc
mov
adc
fs
cmp
pop
scas
xor
xor
(bad)
and
cld
gs
div
add
sti
iret
nop
imul
inc
stc
add
push
adc
in
xor
cmp
enter
ficom
mov
(bad)
jg
or
jle
popa
and
cmps
pop
jae
mov
rcr
push
jb
xor
fwait
dec
pop
sti
adc
and
jmp
sahf
mov
or
dec
stos
or
mov
add
inc
dec
jno
sub
add
and
push
jmp
xchg
out
into
popa
imul
repnz
sub
fdivr
sbb
cdq
cmp
cmp
mov
push
shl
stos
ins
jno
lea
leave
inc
fisttp
mov
in
fistp
ret
dec
and
not
and
mov
push
lods
xchg
js
mov
push
rcr
xor
xchg
ins
sub
xchg
(bad)
jecxz
int
adc
icebp
rol
dec
out
out
dec
int3
inc
lock
test
loop
dec
call
mov
mov
in
add
ss
aam
pop
add
xchg
gs
add
jp
outs
dec
fimul
inc
pushf
push
jne
call
arpl
add
retf
pop
sub
les
shl
pop
or
retf
add
push
pop
ss
mov
pop
in
ftst
inc
loop
sub
jecxz
iret
dec
dec
xchg
outs
lds
sub
lock
mov
outs
test
mov
pop
sub
into
cmc
xor
cs
sub
fiadd
pop
jg
popf
popa
out
pop
mov
retf
mov
clc
(bad)
dec
cli
add
mov
out
xor
out
test
add
mov
mov
inc
xor
and
dec
clc
push
(bad)
enter
sti
or
xchg
sbb
push
xor
cmp
ret
xchg
or
ss
inc
fs
fcomp
pop
or
ror
ins
stos
test
rdmsr
xchg
mov
push
shl
jae
in
jp
inc
test
loope
test
push
xor
fwait
icebp
add
inc
or
dec
mov
dec
imul
or
and
jmp
lock
jmp
mov
div
or
sbb
(bad)
jno
(bad)
or
out
in
mov
mov
aaa
xchg
jg
sub
pop
shl
bound
mov
sbb
pop
xchg
in
mov
and
shr
fnstsw
outs
fisttp
ss
test
outs
and
pop
inc
xchg
popa
add
and
cmp
and
or
cmps
ins
(bad)
int
push
gs
gs
imul
push
and
push
jnp
leave
call
enter
push
arpl
jp
(bad)
xor
ja
cmp
cmps
icebp
dec
pop
sub
jmp
mov
push
mov
and
lock
lods
or
loope
add
add
outs
test
dec
rcl
cmp
inc
lods
rcr
rcr
in
jl
das
jb
out
add
cmp
cs
jle
rcr
(bad)
fbld
fwait
adc
mov
popa
mov
mov
fnsave
inc
cmps
fs
lods
dec
call
fwait
popa
jb
push
fwait
(bad)
rcr
test
hlt
pop
add
push
aaa
mov
fistp
xor
or
jne
outs
call
rol
in
rcl
pop
jno
dec
push
cmps
push
inc
out
push
ficom
sub
outs
pop
xor
cmps
sub
ds
das
loop
(bad)
ds
jno
stos
jecxz
stc
in
inc
fsubr
jg
imul
out
aaa
adc
dec
dec
pop
and
adc
push
mov
mov
mov
pop
inc
pop
cli
mov
rcl
adc
push
hlt
fimul
sub
lahf
sar
call
popa
mov
aam
mov
out
adc
hlt
cli
and
jbe
mov
loope
push
push
mov
inc
nop
jecxz
add
xor
test
mov
mov
lods
xchg
shl
mov
adc
ror
mov
call
cwde
jns
push
repz
mov
adc
jae
ins
retf
mov
clc
ficomp
pop
test
lock
aad
movs
add
xchg
and
arpl
idiv
sub
leave
call
pop
rcl
jno
xchg
lods
push
mov
sbb
xlat
xor
pop
jmp
rcr
and
dec
xchg
in
test
xchg
jle
inc
and
pop
addr16
sbb
jo
mov
loopne
and
in
fisub
inc
(bad)
push
nop
pop
mov
test
cmps
mov
pop
sub
fmul
mov
mov
mov
in
jne
retf
jmp
pop
fsqrt
lock
cmps
jecxz
xchg
mov
dec
adc
gs
sub
out
fimul
pop
push
lods
xchg
les
loop
popa
xor
and
out
xchg
or
sar
mov
push
jp
mov
jmp
push
fwait
test
test
fisttp
repz
bnd
fisubr
jmp
in
push
sar
and
arpl
pop
xor
int
inc
out
nop
mov
shl
pop
pop
sbb
inc
ins
mov
and
xchg
sti
scas
pop
jl
call
stos
in
nop
test
xchg
mov
popa
mov
ret
adc
dec
xchg
loopne
push
or
sub
repz
dec
and
sar
inc
stc
je
pop
inc
adc
adc
sub
fld
mov
adc
aaa
add
daa
push
shl
inc
aad
icebp
stos
dec
inc
(bad)
and
mov
(bad)
rcr
cmps
lock
cwde
inc
xor
mov
mov
shl
(bad)
mov
dec
test
jbe
xchg
(bad)
cmps
les
fild
sti
aaa
dec
and
push
cmp
mov
(bad)
and
sbb
push
add
repnz
in
mov
mov
jo
js
adc
movs
mov
repz
lock
imul
cmp
mov
popf
outs
mov
or
cmp
and
rcr
or
dec
in
cld
clc
sbb
aad
mul
mov
int
loop
leave
inc
lock
pop
js
cmp
cmp
mov
cwde
fwait
jmp
(bad)
int3
push
out
lods
push
bound
fisttp
mov
xor
cld
aas
fbld
lahf
out
pop
sub
shr
neg
and
pushf
cmp
push
push
ss
mov
out
call
push
ja
ret
cmp
jns
pushf
scas
into
inc
mov
lods
data16
lods
inc
fdiv
int3
ror
mov
ret
adc
pop
mov
push
fnstenv
pop
in
adc
xor
je
or
out
imul
enter
and
int
imul
mov
std
mov
loope
pop
push
or
ret
add
test
jl
in
out
or
repz
(bad)
mov
push
adc
call
sti
cs
sub
inc
sbb
xchg
(bad)
out
lahf
call
and
repnz
pusha
loope
push
test
inc
add
fwait
cs
xchg
mov
inc
inc
push
mov
jmp
(bad)
imul
sar
jno
xor
add
fucomip
inc
push
into
test
add
inc
call
enter
out
outs
jae
js
mov
lahf
pop
lods
cmp
mov
jmp
arpl
out
ins
outs
mov
dec
(bad)
mov
or
stc
dec
out
loopne
jmp
and
test
xchg
and
stc
jle
ret
adc
jo
(bad)
fnstsw
cmps
into
jg
xor
dec
pusha
gs
and
inc
and
aad
mov
xlat
pop
int3
cmp
and
loop
retf
push
cmp
lods
cwde
xlat
mov
push
je
jno
and
mov
xor
addr16
jge
scas
add
mov
adc
and
leave
out
jmp
test
mov
xlat
clc
gs
test
iret
lahf
stc
mov
jno
mov
lods
mov
outs
(bad)
lods
inc
add
cmp
nop
xchg
xchg
movs
loop
mov
cs
movs
sahf
out
sti
in
lds
push
int
dec
push
bound
outs
enter
in
mov
icebp
mov
imul
jp
mov
stc
std
jno
movs
pop
adc
mov
dec
xor
push
sahf
push
mov
mov
repnz
or
(bad)
aam
out
in
(bad)
cmc
fimul
stos
test
pusha
lods
hlt
sub
sbb
sbb
jb
pop
and
test
out
loopne
xor
data16
add
cmp
jo
aaa
pop
mov
jecxz
inc
jne
data16
push
inc
ds
fwait
cmp
dec
ret
add
loop
movs
fidiv
ret
call
mov
ins
mov
shl
fdiv
mov
adc
jne
call
ror
cmp
ja
in
or
(bad)
jbe
cli
jp
push
test
jmp
jmp
(bad)
xchg
mov
dec
and
js
sub
test
sbb
and
mov
lods
icebp
(bad)
das
mov
loope
mov
jg
xor
and
aas
sbb
fisttp
mov
lods
fdivrp
nop
in
neg
xchg
daa
inc
ret
(bad)
(bad)
mov
add
(bad)
mov
out
mov
ficom
ficom
add
imul
fwait
icebp
add
pop
add
or
inc
adc
sub
stos
out
sbb
dec
xchg
jno
jns
xchg
sbb
fwait
mov
sbb
std
std
ins
add
cmc
(bad)
std
imul
enter
call
stos
cmps
xchg
sub
add
adc
mov
and
std
mov
ror
mov
dec
call
or
into
ins
xchg
dec
in
popa
jo
nop
pop
test
push
cmp
and
mov
int
int
int3
adc
jecxz
out
fst
retf
gs
mov
into
test
adc
jle
shr
jne
or
add
shl
inc
stos
outs
imul
lock
stos
cwde
fs
jg
lahf
or
dec
inc
jmp
sub
clc
ret
mov
or
mov
add
addr16
test
pop
(bad)
xchg
mov
sbb
mov
addr16
jmp
mov
call
aaa
sbb
(bad)
cli
xchg
push
rol
push
lds
cmps
cmp
ds
xchg
popf
je
push
pop
test
push
jmp
icebp
(bad)
push
inc
add
ret
clc
cmp
ror
ja
es
or
repnz
push
stos
push
pop
iret
pop
xchg
shr
je
mov
shr
mov
clc
gs
push
idiv
test
mov
and
pop
mov
rol
fsubp
add
pop
call
ret
xor
push
ror
mov
jl
mov
cmp
addr16
les
data16
add
fild
out
cmp
sbb
add
xchg
xor
or
out
pop
push
neg
adc
ficomp
or
push
fwait
push
dec
xor
(bad)
jl
pop
mov
pop
adc
in
arpl
shld
fwait
pop
das
cwde
in
ds
imul
(bad)
mov
jo
and
adc
test
mov
test
in
imul
mov
scas
in
movs
lock
jecxz
adc
add
xchg
int
dec
cdq
xor
push
dec
jg
inc
jmp
data16
add
imul
dec
sub
fdiv
(bad)
xchg
lock
dec
out
inc
ins
mov
(bad)
adc
retf
and
sbb
or
xchg
setle
dec
shl
imul
jmp
(bad)
movs
aaa
add
lock
xchg
movs
imul
sbb
fwait
cmp
repz
rcr
mov
mov
mul
or
dec
(bad)
lahf
lea
mov
add
xchg
pop
repz
aad
sub
pop
or
fistp
mov
out
fsubr
mov
push
mov
int
pop
hlt
and
stc
outs
out
retf
rcr
cmc
jmp
dec
pop
js
das
and
std
mov
or
les
dec
sub
push
jmp
pop
mov
scas
xchg
bound
push
add
pop
fwait
shr
arpl
pop
es
outs
popa
hlt
jmp
pop
pop
jno
lock
mov
mov
push
push
dec
ret
pop
(bad)
lock
imul
inc
cmp
out
add
ror
cmps
sbb
or
lahf
cli
call
mov
and
inc
fs
lahf
dec
pop
cmps
sbb
push
das
mov
sbb
jmp
xchg
imul
jecxz
sbb
push
shl
scas
adc
imul
jge
add
setno
cld
nop
cs
loope
inc
and
mov
mov
sub
pop
cmp
leave
imul
inc
xchg
sbb
pop
cmp
and
(bad)
mov
push
loope
das
stos
mov
add
mov
mov
xlat
aas
stos
jmp
ds
dec
xor
add
jg
dec
(bad)
loope
(bad)
sbb
ja
repnz
add
cli
mov
sub
adc
fidiv
xor
xor
mov
jmp
cmp
adc
ret
pop
rcl
cmp
or
or
sub
cdq
xor
jb
into
push
rcl
dec
cmp
out
jb
icebp
outs
push
jo
xor
cmps
sbb
je
push
push
push
ret
das
bnd
scas
inc
cld
call
and
push
sub
push
aad
pushf
sbb
arpl
jo
pop
sbb
not
outs
dec
mov
add
xor
cmp
push
stc
outs
jle
jmp
cdq
aas
cmp
test
sbb
test
cmp
rcr
push
mov
imul
pop
mov
out
loope
lds
adc
and
neg
pop
dec
sub
cs
sub
mov
(bad)
push
cmp
xchg
in
push
aaa
(bad)
cmp
(bad)
into
push
fwait
adc
cmp
inc
adc
and
out
pop
mov
add
xlat
xor
lock
arpl
mov
outs
scas
cmp
push
arpl
outs
jle
or
add
or
xor
or
mov
mov
aad
add
loopne
fisub
icebp
in
fld
jle
dec
in
mov
adc
ret
and
push
mov
ret
lea
imul
mov
sub
push
and
push
outs
mov
and
fldcw
std
and
gs
cmp
cwde
mov
dec
(bad)
and
inc
fcomip
stos
das
pop
loop
mov
push
xor
push
aas
ds
add
addr16
daa
jp
rol
jmp
cmp
inc
out
push
jae
call
mov
xchg
mov
(bad)
ror
rcr
jecxz
add
inc
clc
loop
mov
ja
fisttp
xor
jle
cld
and
sbb
and
leave
add
rcl
xor
in
(bad)
pop
mov
outs
test
mov
adc
daa
inc
pop
xor
mov
add
jle
add
and
shr
aaa
mov
add
mov
repz
cwde
jae
push
fnsave
and
test
mov
cmp
jge
cmp
out
sub
lods
pop
movs
ja
out
loop
add
repnz
or
mov
addr16
pop
stc
mov
jmp
das
(bad)
lea
lds
out
push
dec
in
jecxz
stos
jb
mov
in
(bad)
xchg
outs
jae
(bad)
cld
shl
push
xchg
cmp
jo
push
mov
mov
pop
out
cli
shl
sbb
shld
mov
jnp
aas
in
movs
mov
sbb
sub
mov
adc
mul
lods
(bad)
fidiv
sbb
push
pop
bnd
or
icebp
xor
mov
pusha
popf
push
test
inc
lods
cmp
xor
ins
xchg
sbb
dec
int
mov
cmps
sahf
push
xor
xchg
and
leave
jb
fmulp
push
outs
push
not
ins
inc
sub
add
xor
sbb
mov
adc
popf
lock
lds
pop
dec
push
jl
int
pop
or
ja
aad
xchg
mov
cmp
ds
cmps
je
imul
or
out
mov
jnp
lahf
sub
xor
test
bnd
loop
dec
mov
xor
adc
mov
movs
xadd
or
cli
lock
adc
movs
rol
out
xor
enter
xchg
pop
in
dec
add
shl
push
mov
pushf
inc
std
mov
dec
pop
scas
test
pushf
sahf
cdq
inc
pusha
lds
int3
jae
mov
push
mov
mov
addr16
mov
lods
fst
push
or
movq
mov
mov
les
jne
jmp
mov
mov
ins
ins
pop
shl
mov
inc
fdivr
adc
sar
call
clc
scas
rcr
repz
or
xchg
dec
sub
das
sbb
jnp
sbb
call
adc
out
mov
imul
or
sahf
cmp
push
mov
cmp
add
shl
add
retf
ins
sahf
cli
and
dec
sub
scas
jmp
xor
sub
shl
sub
loopne
sbb
outs
test
push
fdiv
nop
shl
jmp
pusha
jge
mov
pop
fsub
pop
jmp
in
imul
sbb
mov
xchg
cmp
leave
cmps
cdq
mov
retf
repz
cmp
mov
retf
xchg
push
or
movs
push
xlat
xchg
pop
cmc
scas
push
add
sub
out
cmp
or
push
fnstcw
jnp
mov
jecxz
mov
or
outs
or
movs
dec
rcr
stos
shl
add
(bad)
xor
sub
dec
ret
jmp
test
inc
ss
mov
fistp
dec
hlt
adc
dec
scas
adc
dec
jmp
dec
test
mov
fcom
add
cld
and
imul
inc
xor
fs
ret
int3
push
cmp
cmp
add
jno
retf
xor
push
sti
lea
lds
and
stos
or
cmc
mov
cld
jbe
jl
dec
adc
adc
xchg
jle
into
sbb
or
mov
adc
or
cmp
jno
(bad)
ror
mov
inc
dec
aas
daa
pop
cmp
sub
push
dec
jne
stc
imul
and
jnp
inc
mov
das
retf
clc
xchg
enter
jb
arpl
add
mov
jp
inc
pop
pop
jno
mov
aam
js
push
(bad)
dec
push
lock
jp
cmps
fwait
mov
cmp
or
add
(bad)
fdivr
aaa
stc
mov
push
data16
(bad)
orps
mov
inc
push
outs
cmp
mov
sbb
adc
fcmove
ja
or
and
cmc
sbb
jmp
jl
mov
sub
fnclex
cmp
fwait
mov
cli
mov
pop
out
outs
pop
xchg
out
cli
mov
(bad)
lea
or
test
in
ins
jecxz
popf
pop
ret
dec
xchg
push
xor
mov
mov
mov
xor
or
ja
cmc
mov
push
cmp
rol
adc
mov
in
in
out
adc
bnd
into
push
or
lods
popa
jge
xchg
fwait
mov
sbb
(bad)
call
jg
movs
ror
ret
xlat
pop
inc
push
int
or
shl
jmp
mov
ffree
or
mov
outs
in
test
enter
dec
push
sub
mov
jnp
movs
in
push
loop
mov
xchg
dec
int
add
push
mov
adc
stos
add
stos
pop
ins
rcr
push
sbb
sub
xchg
fwait
outs
or
addr16
sbb
adc
pop
and
test
push
add
shl
jge
ret
xchg
mov
and
cwde
scas
imul
retf
xor
cld
scas
test
ins
pop
fsubr
jl
push
push
popf
in
mov
(bad)
aad
cli
movs
repnz
push
or
fbld
out
pop
out
jns
xchg
scas
and
rcl
shl
loopne
test
aaa
into
adc
dec
sar
xchg
and
cmp
mov
adc
inc
in
xor
mov
aad
sti
icebp
mov
pop
jg
pop
jg
nop
test
xor
ins
pop
fwait
xchg
pop
js
xor
dec
mov
and
out
jmp
cwde
(bad)
daa
push
sub
sub
das
push
pop
and
mov
mov
callw
ret
inc
pop
push
or
addr16
gs
int3
fldenv
cwde
ror
test
jbe
adc
xchg
(bad)
jle
sti
mov
jl
and
pushf
out
and
das
pop
inc
cs
int
mov
jp
out
add
fbld
add
shr
ds
gs
or
pop
xor
sub
loop
out
cmp
xchg
test
jo
ins
call
dec
test
xlat
push
mov
dec
or
and
into
sahf
mov
vmwrite
inc
out
fs
(bad)
or
push
mov
pop
push
jae
mov
lea
icebp
jmp
push
mov
call
movs
cs
jp
retf
jnp
pop
pop
aas
inc
js
sub
fwait
sar
push
and
jae
shl
cmp
sbb
rol
hlt
retf
mov
dec
mov
jle
jmp
pop
not
jge
cmp
xor
jg
pop
ins
xor
push
(bad)
sar
jae
add
cli
mov
cmc
std
add
in
dec
scas
sahf
icebp
cmp
mov
mov
hlt
int
xchg
(bad)
sub
mov
mov
and
push
out
outs
push
shr
jae
test
test
loop
ins
daa
jl
movs
ins
pop
cmps
mov
mov
out
xchg
ja
dec
inc
pop
push
inc
outs
push
call
ret
mov
adc
mov
pop
je
retf
sub
jb
jecxz
mov
ins
push
add
inc
push
xchg
mov
pop
xor
and
fwait
jbe
dec
push
addr16
mov
data16
mov
mov
int
and
aam
sbb
(bad)
add
setnp
in
cdq
test
or
sub
rol
xchg
(bad)
sub
mov
adc
mov
cwde
xchg
cmps
pop
and
fisub
dec
mov
into
push
fsub
addr16
dec
jb
push
adc
popa
jo
call
lods
jmp
retf
add
xchg
stc
sbb
scas
mov
out
repz
into
push
pop
inc
shr
xchg
pop
(bad)
mov
call
sti
fbstp
sub
inc
cld
mov
jge
movs
outs
clc
out
dec
sub
test
enter
cmp
adc
push
push
jae
jae
mov
pusha
push
dec
inc
push
mov
clc
movs
cmp
cmps
cdq
jno
loope
in
retf
pushf
rcl
cwde
ins
test
inc
jne
pusha
lods
adc
or
das
push
dec
rcl
test
xor
jle
cmp
lahf
mov
adc
jb
(bad)
or
jl
add
mov
inc
sbb
into
mov
movs
pop
fmul
fist
imul
call
outs
mov
sbb
sbb
adc
cmps
xor
and
out
pop
imul
inc
call
and
adc
lahf
movs
and
mov
add
sahf
jmp
mov
add
cdq
lds
daa
leave
out
push
add
pusha
int3
inc
mov
cmp
popa
push
push
stc
mov
lods
or
cli
xchg
inc
or
or
xor
les
sub
mov
ffreep
xchg
stos
dec
out
jae
push
adc
dec
stos
outs
or
test
cmp
pop
mov
jae
and
xor
psllq
mov
popa
outs
cmps
ret
mov
shl
stos
add
jne
fld
addr16
jg
int3
xor
mov
imul
and
jmp
cmps
addr16
les
push
fstp
mov
mov
test
leave
add
mov
pop
bswap
aaa
push
(bad)
in
out
jle
scas
pusha
mov
push
sbb
xor
dec
retf
ret
shrd
sahf
movs
fcom
imul
and
adc
out
(bad)
mov
pop
push
jecxz
adc
lods
push
mov
popf
mov
outs
icebp
push
sub
push
popa
js
xor
arpl
(bad)
inc
jge
(bad)
les
adc
push
cli
sbb
popa
repz
dec
pop
dec
(bad)
in
mov
ss
fld
test
xchg
sub
add
and
arpl
mov
sub
sbb
cs
out
add
popa
push
sar
xor
bound
push
idiv
retf
adc
mov
in
sub
stos
sbb
fist
cmp
dec
inc
mov
sbb
test
(bad)
fadd
dec
or
mov
in
pop
jne
fsubr
shr
xlat
push
and
movs
mov
pop
ficomp
cmp
xchg
push
fcmovne
nop
inc
movs
into
inc
repz
xchg
xor
aam
ret
call
push
inc
xor
shl
xlat
test
call
loopne
pop
jge
repnz
fisttp
fld
mov
sub
xor
adc
aam
ins
xor
loopne
rcr
leave
imul
pop
or
adc
ins
cmp
mov
pushw
push
adc
inc
in
ficom
mov
sub
mov
ret
cwde
dec
mov
mov
or
push
das
mov
fidiv
mov
enter
lods
call
add
adc
mov
xchg
movs
imul
sar
daa
mov
ret
pop
mov
into
jge
call
push
jne
push
sub
push
aad
(bad)
ins
sub
dec
xchg
push
cmp
push
mov
inc
(bad)
cli
shr
ins
lock
cmp
push
ret
mov
(bad)
repz
jmp
mov
jmp
adc
cdq
mov
inc
pushaw
out
cmps
push
cmps
cmc
adc
ins
sbb
mov
mov
mov
mov
fimul
and
jno
jmp
inc
js
sub
out
inc
std
iret
cs
xchg
stos
jo
jbe
mov
adc
call
std
cmps
shr
sub
dec
(bad)
in
mov
add
jb
jbe
xchg
and
jg
sub
jne
(bad)
xor
test
pop
cmp
or
cli
neg
je
xor
icebp
xchg
outs
mov
sti
mov
jmp
cmp
ins
dec
or
push
rsqrtps
loop
cli
ja
adc
inc
sbb
push
jge
and
sbb
sbb
jb
lea
(bad)
daa
mov
add
jmp
in
shl
imul
sub
fdivr
xchg
cwde
dec
lock
mov
repnz
sub
add
push
adc
mov
movs
fisub
int3
sbb
ja
mov
pop
in
cmps
dec
not
mov
and
xor
clc
movzx
cwde
aam
ins
xor
jl
xchg
ins
xor
nop
mov
sub
call
pop
mov
or
push
mov
or
ds
add
sub
ins
sar
(bad)
aam
and
pop
cmc
fnstsw
out
int3
(bad)
jg
ds
mov
push
mov
cld
leave
test
shl
inc
dec
das
ret
pop
mov
jp
or
icebp
fiadd
pusha
mov
jl
jp
inc
ficomp
xchg
push
pop
repnz
sub
mov
xchg
and
std
pop
sbb
les
test
jne
jecxz
fidiv
into
lods
jo
iret
push
mov
mov
xor
mov
push
lock
jmp
cmp
cld
dec
xchg
jl
idiv
cs
call
sbb
pusha
icebp
pop
or
cmp
bswap
sbb
adc
jno
shl
inc
lods
push
mov
mov
adc
sub
outs
test
push
xor
xchg
mov
sar
loop
and
seta
add
lock
sbb
outs
sub
xor
add
call
cmp
fst
inc
cmp
stos
fistp
xchg
int
mov
in
add
jl
je
repz
xchg
sbb
outs
dec
dec
dec
add
sbb
push
out
dec
cmp
add
cmp
push
nop
popa
mov
jmp
push
pop
mov
mov
dec
dec
or
xchg
rcr
test
inc
adc
ins
mov
test
mov
scas
jbe
ror
test
out
sub
and
dec
pop
gs
ja
sub
les
je
cmps
sub
shr
cmp
(bad)
push
sbb
outs
xor
push
pop
mov
or
shl
pop
push
sbb
js
(bad)
das
push
jno
xchg
mov
mov
outs
popa
sub
mov
jge
jmp
xor
or
test
outs
loop
cmp
sbb
inc
div
sub
sti
mov
cmp
out
jbe
je
call
je
repz
mov
cwde
mov
(bad)
or
sub
add
sub
je
aam
xor
dec
out
popf
mov
sbb
jns
iret
fwait
movs
dec
adc
mov
sbb
stc
push
dec
push
fisttp
jno
lahf
mov
mov
xchg
push
scas
sbb
adc
dec
inc
or
or
mov
outs
pusha
(bad)
push
adc
jp
sbb
lods
clc
clc
out
neg
movs
jno
arpl
call
call
and
xchg
or
xchg
mov
inc
xlat
jge
pop
lods
lods
cs
mov
gs
mov
push
cli
repz
scas
out
cmps
scas
xchg
push
jo
test
sub
sub
jp
sar
pushf
push
les
xchg
mov
iret
and
les
fs
and
cwde
mov
sti
and
ins
sub
es
cmp
lock
out
aas
shl
mov
outs
cmp
pusha
sub
xchg
cmp
or
call
mov
add
xchg
push
mov
sar
or
out
call
outs
push
leave
adc
shl
mov
xchg
aam
lahf
mov
push
es
jmp
sub
mov
or
or
scas
mov
call
mov
fmul
cmp
aam
loope
imul
cmp
in
mov
daa
xor
sub
sbb
fistp
adc
rcr
dec
dec
push
mov
mov
lods
xchg
mov
leave
cmp
push
push
mov
jno
add
fiadd
or
dec
jnp
test
xchg
push
mov
mov
movs
add
xor
popa
or
loopne
xlat
or
push
aaa
nop
je
test
adc
pop
repnz
sub
push
movs
mov
cmps
es
in
push
push
(bad)
leave
add
push
popf
ret
fild
movs
popf
(bad)
(bad)
or
nop
ins
jno
bound
clc
sub
enter
and
adc
mov
or
mov
movs
add
dec
fild
add
push
push
aam
clc
in
rcl
cmp
out
mov
int3
clc
sbb
xor
xchg
clc
push
rol
mov
shl
add
inc
inc
sahf
cmps
mov
adc
jg
push
rol
mov
neg
in
add
stos
aam
and
pop
sbb
xor
jne
and
call
jmp
jo
pop
jnp
out
mov
or
xchg
xchg
pop
iret
rol
pop
gs
cld
mov
pop
and
retf
stc
cmp
or
sbb
jo
pushf
jnp
out
dec
in
leave
shl
mov
dec
jl
mov
lea
mov
mov
jno
xchg
pop
add
jle
in
test
(bad)
repz
sub
out
in
cmp
cli
mov
repnz
mov
adc
adc
xchg
pop
jmp
sub
xchg
sbb
xchg
dec
push
and
lahf
lahf
aas
div
test
sub
(bad)
loope
jp
inc
test
mov
mov
inc
mov
xchg
jae
stc
scas
push
dec
cmp
and
push
push
sbb
and
cdq
sbb
aad
aam
daa
cwde
in
cmp
sub
repz
mov
adc
pop
push
sbb
ret
cmp
movs
xchg
iret
fistp
dec
and
sub
jp
and
cmp
cmp
pop
bnd
int3
(bad)
cld
dec
mov
xor
mov
lds
out
mov
test
sub
jno
jmp
stc
inc
xor
lods
jno
imul
ja
mov
cmp
mov
add
fld1
cdq
sbb
retf
addr16
jg
lods
fisttp
jo
pop
(bad)
fs
mov
mov
into
dec
or
push
sub
mov
cmp
fdivr
pop
movs
or
mov
into
loopne
ja
mov
cmp
fmulp
loopne
dec
call
push
shl
push
xchg
push
inc
push
xlat
sbb
lahf
or
jae
inc
xchg
jns
ins
inc
inc
mov
sar
stos
push
inc
mov
mov
mov
and
xor
xor
les
fimul
into
loope
iret
xor
dec
pop
arpl
aam
sti
add
je
movs
adc
jl
jbe
test
stc
inc
pop
adc
fild
fs
mov
popf
push
sub
bound
mov
nop
push
inc
cmc
inc
int
and
adc
inc
or
xchg
cmp
rol
mov
sbb
dec
push
mov
loop
pushf
ror
lods
retf
xor
and
cmp
(bad)
(bad)
jmp
inc
sbb
das
rcr
xlat
sub
sub
fs
xor
inc
push
cmps
sbb
retf
cli
sub
mov
jle
xchg
mov
fnstenv
inc
push
add
sahf
mov
mov
xor
retf
add
adc
dec
stos
and
push
sub
xlat
retf
mov
movs
dec
scas
xchg
push
and
repnz
mov
jge
shl
stos
xor
movs
mov
rol
jecxz
xchg
leave
es
jg
sbb
inc
nop
es
sbb
xchg
xchg
scas
and
xchg
iret
push
test
enter
shl
jle
pop
loope
enter
xchg
adc
arpl
int3
(bad)
xchg
push
inc
adc
int3
mov
test
jge
xor
add
xchg
cmps
lahf
pop
test
cmp
add
pusha
sbb
lock
leave
int3
es
mov
mov
jmp
push
test
push
inc
cmps
or
out
push
sti
adc
fwait
ss
mov
adc
mov
mov
xchg
xlat
cs
ficomp
xor
gs
mov
jmp
call
jle
cmp
lds
pop
or
out
stos
pusha
xchg
jmp
dec
jbe
add
outs
fld
aas
ret
retf
int
xor
xor
or
mov
shr
(bad)
mov
loope
sub
imul
or
pusha
or
sbb
idiv
(bad)
test
inc
adc
mov
cmc
sub
ror
cmp
pusha
test
not
jb
lea
dec
rcl
mov
sti
xchg
stos
leave
js
imul
pop
push
pop
icebp
and
mov
sub
jp
jns
mov
dec
fadd
pop
jnp
mov
out
jmp
jae
addr16
and
popa
inc
mov
das
fist
mov
dec
push
adc
pop
js
xchg
in
call
sbb
in
stos
daa
xchg
loop
inc
scas
and
and
popa
xchg
jge
popa
cmp
out
xor
pop
sub
cmc
into
aas
inc
add
pop
mov
jmp
add
adc
and
aaa
fs
pop
les
push
ins
or
xchg
ja
xor
call
dec
outs
call
or
dec
jle
push
stc
dec
nop
fistp
shl
mov
inc
pop
mov
adc
push
mov
jns
sub
test
retf
jno
out
(bad)
call
cmps
dec
or
mov
sahf
fnsave
imul
cld
arpl
and
mov
fbstp
inc
test
leave
out
inc
push
loope
push
jo
inc
shl
popa
cmps
pop
rol
leave
cmp
inc
rcr
neg
outs
dec
jecxz
xlat
mov
jae
jp
mov
mov
push
in
aaa
jns
fcmovu
adc
repz
mov
add
test
push
sub
call
or
int3
pop
mov
mov
and
push
imul
fnsave
xchg
mov
pop
inc
pop
(bad)
fisttp
out
push
xchg
pop
xchg
sub
lods
push
add
sub
ret
push
xchg
xor
(bad)
scas
outs
and
add
hlt
mov
push
cli
push
dec
inc
aam
jne
ins
std
mov
push
pop
and
mov
pop
(bad)
xlat
xchg
jecxz
push
daa
cwde
mov
pop
xor
cld
pop
fst
jo
pop
mov
rcr
popf
mov
mov
push
sub
popf
sub
lock
ret
movs
repnz
in
sub
stos
and
fcomp
iret
push
ret
sub
mov
push
clc
adc
inc
(bad)
pop
aas
mov
inc
xor
add
sti
or
inc
pop
rcr
repz
(bad)
fisub
cmp
movs
sub
lods
or
imul
pop
gs
mov
fnstenv
adc
movq
adc
and
sub
(bad)
in
xor
add
daa
hlt
clc
call
mov
outs
xor
retf
dec
es
dec
fs
mov
inc
push
addr16
jle
out
push
and
scas
sbb
xchg
std
(bad)
(bad)
leave
ss
movups
adc
mov
das
or
clc
mov
or
xchg
sbb
mov
mov
fnstcw
pop
jo
mov
push
mov
adc
shl
jge
stos
repnz
xchg
scas
adc
dec
pop
enter
sub
aad
xchg
pop
cmps
cmp
sub
cli
nop
jmp
in
fidiv
adc
cmps
sti
push
cmp
cwde
jge
movs
aaa
in
push
mov
sahf
or
adc
add
sub
sub
test
adc
and
int
loope
popf
push
(bad)
adc
mov
jecxz
add
sbb
fwait
js
xor
lea
pop
ds
push
in
loopne
test
mov
sub
fimul
sub
or
pop
sti
cmc
shl
jne
sahf
jmp
(bad)
mov
xchg
outs
enter
sbb
push
rcr
(bad)
mov
loopne
dec
xchg
add
xor
mov
jno
ret
pusha
mov
adc
hlt
fistp
pop
sbb
and
inc
mov
cmp
mov
data16
xor
mov
xchg
inc
xchg
and
(bad)
jno
pop
fucomip
sub
shl
xor
mov
jb
cmp
jo
xlat
lds
inc
scas
mov
in
das
mov
cmp
call
mov
mov
ins
mov
sbb
(bad)
jo
sbb
fwait
add
dec
stos
pop
ror
pop
stos
and
mov
ins
leave
xchg
mov
lods
(bad)
rcl
jo
ret
in
mov
mov
mov
inc
ja
not
cs
sti
push
xchg
imul
shl
xlat
test
(bad)
inc
scas
ret
mov
and
ins
out
cmp
jecxz
les
pop
cs
pop
mov
clc
dec
add
movs
adc
cmps
sbb
(bad)
mov
mov
mov
xchg
loop
es
arpl
loope
pop
rol
mov
push
jns
sar
cmc
pop
sub
lds
test
pop
fimul
push
call
add
or
iret
add
jnp
out
fiadd
dec
stc
mov
ret
xchg
cmp
mov
inc
pop
push
fsubr
or
push
aas
hlt
dec
hlt
dec
pop
mov
pop
int
sbb
xor
imul
mov
cwde
mov
or
gs
pop
cmps
and
inc
(bad)
xchg
add
mov
adc
inc
lods
leave
aas
push
rol
cmps
aas
in
movs
jge
and
ja
mov
push
xlat
imul
repz
(bad)
hlt
ss
repz
push
div
or
enter
push
cmp
sub
push
pop
and
out
inc
cwde
jl
pop
jne
cld
rcr
sub
add
pushf
(bad)
je
mov
mov
loop
mov
xchg
and
sbb
ins
dec
test
psubsb
out
xchg
push
push
xchg
mov
dec
sahf
mul
stos
scas
mov
rol
adc
mov
mov
mov
enter
std
jle
arpl
xor
stc
xor
neg
mov
cs
or
mov
push
push
mov
sbb
mov
(bad)
mov
dec
jbe
adc
loop
xchg
movzx
push
std
iret
sbb
dec
pusha
xor
jo
push
mov
push
repnz
xchg
and
mov
mov
push
popa
out
mov
ret
not
push
xchg
sbb
dec
in
mov
sahf
sub
xor
sar
aas
jl
stos
call
in
push
or
xchg
xor
mov
mov
sub
push
pop
bound
ret
inc
inc
push
xchg
add
into
rol
movs
dec
mov
cmps
dec
push
xchg
test
lds
adc
adc
sbb
mov
jae
inc
jmp
jne
xchg
cmp
add
popf
and
int3
call
pop
xchg
std
inc
fild
jg
jg
sub
jns
xlat
cmp
sbb
sar
add
or
imul
scas
add
stos
fcmovb
pop
push
and
xchg
cmp
rol
cwde
imul
lock
data16
aaa
adc
(bad)
mov
jecxz
jae
inc
pop
mov
add
dec
jb
or
outs
leave
push
sahf
daa
popf
into
jmp
pop
nop
inc
sar
mov
in
mov
neg
scas
and
cmp
xchg
add
ror
and
loope
sub
sbb
adc
gs
ret
aas
into
stc
lods
movs
std
jmp
std
je
paddq
jecxz
mov
push
mov
arpl
pop
cmc
sti
fistp
lahf
mov
bnd
push
cmp
mov
mov
movs
aam
mov
mov
jmp
in
or
in
mov
jp
xor
jb
inc
jge
loopne
and
xor
fidiv
add
mov
jne
mov
pop
push
cld
jno
out
adc
clc
std
pop
in
inc
jmp
xor
inc
inc
jl
adc
aam
add
fidiv
mov
into
ss
lahf
dec
stos
dec
rol
or
sub
cs
aas
or
loopne
jecxz
ret
imul
sbb
in
add
js
imul
std
(bad)
dec
mov
xchg
adc
fistp
mov
or
xor
mov
xchg
gs
aad
mov
jno
jp
add
adc
int
sub
xor
out
add
inc
loop
pop
ins
xchg
shr
fwait
inc
call
outs
test
mov
cmps
adc
dec
dec
int
sbb
imul
daa
rcl
xor
mov
add
and
repz
retf
xor
test
dec
cmp
scas
mov
int
pop
nop
jne
(bad)
cmps
pop
cwde
xor
mov
pop
cli
mov
cwde
sub
retf
out
popf
cmp
aad
pop
jae
inc
sub
jb
test
cmp
mov
call
and
jg
push
cli
ret
mov
adc
daa
icebp
mov
das
call
in
add
mov
and
pop
push
xchg
push
pop
push
fisttp
stos
lods
lock
movs
cwde
xchg
call
mov
pop
sbb
pop
data16
in
mov
(bad)
fisttp
cdq
mov
popf
ficom
call
aam
movs
aad
inc
adc
jmp
adc
jo
sahf
xchg
xor
or
call
bound
pushf
jnp
and
paddq
mov
cmp
mov
outs
add
mov
xchg
neg
inc
push
sbb
das
fisub
iret
aad
dec
mov
push
jle
sahf
cmp
inc
call
addr16
cmp
push
cld
push
call
mov
lds
into
xor
adc
dec
jle
xchg
add
lods
push
(bad)
pop
inc
push
lods
sub
retf
sbb
inc
inc
sahf
push
or
scas
sub
and
mov
mov
xchg
ins
sti
mov
fadd
(bad)
loop
cmp
mov
mov
mov
(bad)
sub
push
movs
arpl
jl
sub
imul
xchg
dec
jbe
mov
daa
loop
add
or
fidiv
sub
fsqrt
xchg
rcpps
push
dec
and
fwait
fxrstor
ror
cli
jmp
(bad)
sub
cmps
fstp
pop
bound
inc
or
loopne
pop
add
ins
or
bound
sbb
sbb
test
call
enter
retf
and
hlt
daa
jbe
inc
xchg
add
add
xor
jnp
jmp
push
(bad)
std
jo
push
aad
enter
inc
push
sbb
mov
sbb
pop
ins
mov
xor
sub
rol
pop
cmp
loopne
adc
add
les
neg
adc
inc
push
xor
jmp
std
or
(bad)
cmps
push
fdivr
and
shr
push
lods
(bad)
pop
cld
jecxz
jle
loopne
lods
lock
mov
dec
jno
sub
sar
push
mov
dec
in
jae
jbe
lahf
mov
leave
cmc
movs
adc
inc
cmp
xor
and
push
push
fadd
mov
mov
scas
dec
bound
ja
mov
xor
jns
leave
pusha
xor
test
mov
int
push
fdivr
sub
ror
popa
mov
loop
in
bound
and
xchg
aas
popa
mov
frstor
mov
push
sub
addr16
(bad)
fnstsw
fsub
mov
mov
jo
iret
pusha
call
cmp
mov
nop
xchg
inc
and
dec
dec
call
xor
fs
fst
add
and
(bad)
int
push
ss
arpl
mov
pop
push
lahf
ss
mov
(bad)
pop
jmp
cdq
mov
pop
or
pop
sub
sbb
xchg
cwde
clc
test
cmps
fxch
lahf
pop
ja
push
pop
in
in
aam
xor
pop
pop
ja
xor
cmp
adc
(bad)
call
dec
add
fcom
cwde
outs
sub
push
pop
xchg
dec
push
mov
and
sbb
add
sub
dec
repnz
sub
outs
xor
cwde
dec
inc
mov
xor
adc
pop
pop
dec
popa
mov
arpl
stc
mov
adc
imul
(bad)
stos
pushf
jg
out
cmp
js
and
mov
and
and
ja
iret
or
xor
or
xchg
push
std
stc
pop
stc
sahf
lods
cmps
cld
sbb
test
int3
icebp
sbb
ret
div
ror
popa
push
xchg
add
fidiv
sbb
jmp
xchg
dec
ds
shr
add
repz
adc
push
clc
inc
dec
and
mov
out
cmp
sbb
pop
push
fisubr
in
lods
xor
mov
getsec
nop
addr16
lahf
adc
or
sti
mov
in
call
add
jecxz
or
pop
pop
ret
sbb
xchg
dec
push
jb
(bad)
lea
adc
movs
in
cwde
repz
add
cli
push
jg
jo
cwde
shr
push
push
xchg
aad
and
inc
stos
xchg
xchg
repnz
sbb
jp
adc
mov
mov
jne
pushf
stc
pop
mov
cs
outs
push
jbe
push
int3
push
and
shl
cmp
sahf
stc
(bad)
in
mov
xchg
xor
push
bound
jae
sahf
xchg
xor
jnp
cwde
mov
mov
jb
int3
push
ins
inc
dec
mov
push
je
add
addr16
in
inc
jmp
mov
sahf
sub
mov
stc
add
dec
cs
mov
mov
jg
push
jmp
push
dec
cmp
out
adc
fisttp
je
sub
ror
ins
fcomp
loopne
pop
stos
sub
sbb
mov
bound
push
cmp
push
jnp
popf
add
and
ret
mov
push
cmp
pop
cmps
push
sub
cmp
push
jg
lds
fwait
mov
jle
sub
pop
mov
jo
sti
and
(bad)
icebp
stos
les
or
mov
sbb
shl
loopne
das
mov
inc
loope
imul
jmp
out
mov
add
pushf
stos
sti
mov
sbb
fnsave
fisttp
inc
xor
test
pop
jmp
adc
pop
shl
jmp
iret
std
aam
push
sub
or
out
add
dec
cmp
dec
fild
push
inc
inc
mov
add
pop
pop
(bad)
cld
dec
xchg
aaa
pop
pop
ss
repnz
rol
and
and
mov
cld
sub
mov
dec
dec
daa
bound
dec
pop
inc
fnstenv
mov
push
or
pop
out
enter
in
in
dec
je
jae
sbb
mov
adc
jne
add
ja
jmp
stos
daa
mov
cli
pop
call
fidivr
icebp
or
or
inc
dec
jmp
xor
mov
cdq
add
and
(bad)
shr
not
jmp
movs
dec
xchg
sbb
push
pop
ins
pop
inc
add
xchg
sbb
nop
scas
add
mov
add
sbb
jg
jno
pop
and
(bad)
dec
pop
fstp
mov
cmp
inc
test
or
add
std
add
inc
mov
jb
mov
js
and
enter
aam
jl
mov
retf
fwait
push
jge
sbb
cli
daa
and
fwait
dec
stc
imul
jle
mov
push
cmp
cwde
mov
jo
outs
xor
jnp
dec
cwde
outs
loope
push
stos
pop
inc
test
sub
pop
or
adc
pushf
loopne
pusha
xchg
ret
mov
rcl
cmp
jo
(bad)
jo
xchg
repz
mov
or
lods
adc
in
sbb
inc
mov
rcl
imul
and
mov
or
ins
mov
pop
popa
push
pop
sub
pop
sbb
ror
cmp
push
xchg
sar
clc
xchg
leave
fidiv
xchg
clc
and
push
sti
(bad)
outs
jno
es
lock
add
nop
out
xchg
test
or
mov
pop
add
repnz
in
inc
jp
jp
imul
push
outs
add
push
scas
pop
xchg
ret
mov
mov
movsx
rol
mov
sbb
daa
ret
push
push
cmp
cmp
test
(bad)
bnd
(bad)
fdivr
in
clc
pop
in
ret
stc
push
scas
mov
or
sbb
cmp
sbb
or
clc
hlt
jg
js
mov
addr16
retf
push
sahf
push
fld
test
retf
push
adc
in
fld
push
pop
xchg
leave
jmp
adc
jb
dec
js
jmp
sar
bound
sub
or
xchg
sahf
cdq
pop
ss
mov
(bad)
jns
out
int3
xor
pushf
dec
sub
mov
mov
dec
mov
sti
outs
call
xchg
jmp
push
inc
mov
imul
fst
dec
dec
daa
icebp
outs
out
aad
cmps
jae
nop
int
mov
or
out
push
popf
xchg
and
aam
cld
inc
or
or
xchg
dec
int
cmc
xchg
jp
mov
mov
out
or
adc
push
mov
and
mov
(bad)
and
xor
arpl
jmp
mov
inc
sti
dec
cmps
lods
outs
clc
pusha
mov
jmp
hlt
mov
push
xor
or
mov
(bad)
call
or
loop
push
xchg
xchg
push
pop
js
daa
fist
mov
ret
sahf
jo
gs
pop
or
(bad)
jne
out
mov
shr
mov
loope
inc
(bad)
jns
int
push
mov
adc
or
repnz
push
pushf
test
dec
sbb
mov
addr16
stos
mov
bound
and
lea
pop
sbb
outs
jns
pop
or
aaa
fdiv
xor
xchg
xchg
iret
clc
mov
dec
add
mov
dec
test
(bad)
out
push
loop
and
dec
jl
and
fxch
sub
pop
sub
dec
test
inc
das
pop
ret
mov
xchg
lods
pop
fisttp
mov
jne
pop
sub
pop
adc
leave
ins
jne
retf
ret
inc
enter
or
mov
push
lds
sahf
jo
add
dec
or
stos
dec
fwait
jns
popf
and
dec
push
and
push
ds
mov
sub
aas
push
xchg
cmp
ror
rol
imul
neg
outs
pusha
fldcw
mov
test
mov
mov
ins
inc
call
sbb
stos
mov
int
sbb
adc
or
dec
movq
mov
pop
adc
(bad)
xor
mov
and
gs
and
sub
ins
adc
retf
push
jbe
cmp
mov
je
sub
jge
xchg
shl
xchg
nop
ins
mov
sbb
xor
mov
inc
addr16
and
pop
inc
cdq
adc
fld
add
es
out
pop
call
sub
retf
fcmovnb
or
jns
in
shl
mov
mov
stos
out
adc
das
in
inc
je
pop
stc
data16
(bad)
and
jae
mov
nop
xchg
cs
mov
inc
lods
jmp
pop
popf
mov
or
ror
aam
repnz
push
int3
cmps
jle
sahf
ret
mov
not
mov
cli
sbb
jecxz
dec
adc
rep
fstp
mov
sub
je
leave
bnd
inc
push
or
xchg
addr16
mov
push
inc
movs
sbb
lock
jmp
fsub
call
sbb
dec
xor
sbb
jg
std
in
inc
xchg
daa
inc
outs
daa
ret
(bad)
xchg
pop
xchg
je
sbb
fdiv
inc
adc
sbb
(bad)
mov
jae
add
das
aaa
cmps
retf
dec
lahf
or
(bad)
lods
sub
fwait
cmp
mov
xor
lods
dec
jb
xor
push
es
imul
and
jmp
(bad)
cmp
sub
dec
pop
ins
pop
aaa
movs
repnz
xchg
in
pop
adc
push
cmp
and
cmp
(bad)
add
(bad)
les
std
adc
loopne
pusha
push
adc
ja
jmp
adc
pop
dec
xchg
in
adc
js
clc
in
push
out
out
pop
pop
cld
mov
not
imul
cli
jns
jg
xchg
add
mov
ins
cmc
scas
ins
daa
cld
mov
cmp
sbb
inc
pop
mov
fs
pushf
lds
sub
(bad)
cld
mov
xor
je
cmp
sub
and
pop
lods
das
stos
inc
push
js
xor
scas
sbb
jp
out
das
push
rol
clc
xor
add
push
in
push
mov
test
push
addr16
cmp
mov
data16
out
sub
jmp
fisub
mov
neg
dec
dec
mov
push
mov
mov
xor
xchg
ins
retf
inc
aad
jne
cdq
xchg
aad
mov
jnp
in
daa
jne
mov
add
cdq
or
adc
les
inc
pop
jne
push
clc
mov
int
inc
inc
int
lock
mov
add
aad
test
iret
movs
dec
xor
es
mov
div
xor
push
ffreep
cmp
inc
sub
call
push
pop
cmps
je
shl
pop
mov
popf
jnp
movs
cmp
int
sub
pop
in
cdq
pusha
retf
test
or
(bad)
aas
imul
push
sub
and
mov
sbb
inc
inc
sbb
mov
jecxz
sub
mov
xchg
sub
stc
inc
(bad)
and
xor
sahf
adc
out
sub
adc
mov
push
add
mov
sub
je
mov
sahf
ss
push
dec
mov
std
pop
movs
and
push
mov
pop
scas
mov
pusha
loop
jno
retfw
popf
inc
loopne
sbb
jge
loop
cs
icebp
mov
mov
xchg
and
mov
jmp
mov
fcomp
es
inc
sti
outs
push
jg
(bad)
cmp
jmp
add
aas
sub
fldenv
shr
xchg
mov
or
in
mov
push
and
sbb
jnp
fisubr
xchg
retf
stc
mov
test
fistp
pop
jns
stos
aas
inc
mov
enter
cwde
pop
dec
test
xchg
lods
lds
sbb
jns
pusha
mov
jecxz
sub
xchg
xlat
out
mov
icebp
inc
cs
retf
or
lods
push
xchg
neg
out
mov
cmps
cmps
push
(bad)
pop
jbe
stos
push
or
or
dec
sub
push
mov
mov
(bad)
repnz
shl
or
bnd
ror
jns
(bad)
cld
jp
cmp
rol
outs
mov
dec
cmp
sbb
pushf
call
imul
sub
mov
jge
popa
rcr
ds
pop
loopne
ficomp
(bad)
and
jmp
test
mov
sbb
stos
int3
mov
mov
push
mov
stc
ins
pop
inc
pop
sub
das
test
inc
js
dec
repnz
ins
cmp
ins
jmp
and
mov
push
ins
push
and
out
xor
adc
dec
or
pop
loope
mov
pop
int
fisubr
pop
pop
fcom
movs
into
shl
or
or
call
inc
repnz
inc
lea
or
cld
or
mov
lock
(bad)
xchg
pop
dec
push
mov
xchg
std
lods
mov
pop
adc
push
ds
pop
in
sub
adc
cmp
and
iret
int3
sbb
stos
inc
pop
fsubrp
ret
in
movs
xchg
jp
mov
jbe
out
fld
es
cmp
(bad)
pop
push
mov
xor
pop
xrelease
jmp
das
ds
mov
stos
xlat
push
push
mov
fucomip
cmp
and
mov
sbb
cmp
popf
inc
mov
or
in
push
push
cmp
mov
push
sbb
daa
xchg
(bad)
rol
or
inc
mov
idiv
popa
jecxz
loope
sbb
jne
stos
test
xor
repz
retf
mov
cmp
fwait
enter
sub
pusha
or
push
and
cmp
mov
inc
jle
scas
mov
sub
or
scas
ja
(bad)
pop
div
fcomip
mov
xor
inc
dec
xlat
fs
push
inc
jne
iret
ror
ins
lea
std
test
xchg
sbb
pop
into
clc
leave
lods
push
ja
mov
adc
into
jmp
rol
pop
add
scas
fsubr
mov
pushf
or
mov
in
mov
adc
pushf
dec
hlt
cmp
lock
push
jecxz
jae
ja
or
pop
and
sbb
inc
aam
imul
enter
push
mov
jge
mov
inc
iret
jns
mov
push
cli
add
retf
xlat
fldpi
pusha
xor
cdq
inc
clc
jns
retf
lods
add
shl
jns
push
rol
pop
sub
mov
lahf
mov
vpmacswd
adc
inc
in
inc
or
mov
add
sbb
je
out
jae
dec
push
pushf
outs
push
(bad)
out
cmp
(bad)
mov
adc
jmp
mov
mov
retf
push
jmp
outs
mov
cmc
cwde
loope
outs
or
jo
push
mov
outs
nop
mov
int
les
test
xchg
mov
lahf
sub
nop
mov
daa
push
call
inc
or
add
and
call
cdq
jle
xor
cmps
retf
data16
dec
jge
js
bound
scas
inc
jp
mov
sub
shl
daa
loope
add
push
jno
shl
dec
mov
push
imul
lds
pop
and
movs
clc
mov
dec
sub
rol
shl
xor
pop
out
pop
adc
add
stc
ret
cmp
test
aas
cmp
or
ds
sub
add
mov
xor
cmps
cmp
hlt
jg
fidivr
(bad)
or
out
or
inc
(bad)
cld
xchg
mov
xor
mov
sub
mov
repz
sub
ror
jno
mov
mov
cld
jmp
jp
xchg
(bad)
xor
aam
lods
in
jmp
pop
xor
in
inc
add
push
xchg
call
(bad)
mov
lea
xchg
push
dec
mov
cvtps2pi
inc
sbb
push
mov
(bad)
lds
ins
popf
mov
and
dec
lods
jns
pop
(bad)
int3
push
mov
mov
hlt
jle
push
(bad)
sbb
(bad)
mov
movs
es
sbb
add
or
into
iret
cmp
stc
push
mov
dec
ret
cmps
and
pop
jne
push
pop
cwde
adc
test
ja
mov
mov
adc
(bad)
xor
pop
inc
mov
xchg
pop
loope
adc
(bad)
(bad)
outs
ss
inc
sub
or
icebp
mov
inc
and
jno
jae
jmp
mov
cmp
and
mov
push
mov
(bad)
fsubr
dec
cmp
or
pop
jmp
sbb
add
(bad)
pop
add
and
arpl
xchg
inc
mov
cmps
pusha
push
pop
dec
std
dec
invd
xchg
in
cmp
jb
bound
mov
jp
imul
loopne
inc
jmp
pop
dec
fisubr
loopne
(bad)
xchg
adc
rcl
jno
nop
das
mov
cmps
movs
adc
rcl
lock
in
pop
imul
div
inc
mov
sahf
movs
ja
cmp
mov
xchg
out
pusha
(bad)
in
sbb
and
push
or
ficom
test
je
nop
popa
add
outs
xor
fst
bound
mov
or
cmc
inc
push
push
aam
jecxz
inc
or
push
mov
fnsave
adc
and
push
loop
movs
mov
cmps
mov
cmps
aam
iret
push
int
xchg
jo
xchg
jl
inc
test
add
mov
mov
mov
into
xchg
or
xchg
xchg
or
jge
std
inc
mov
cmp
push
stos
pop
aad
fcom
imul
cli
pop
dec
rol
ins
adc
test
movs
pop
movs
ret
movs
add
dec
das
sbb
add
push
lock
mov
sub
mov
sub
dec
fnstsw
xor
push
jl
cmp
cmp
leave
sbb
lahf
adc
mov
mov
add
mov
sbb
fsubr
cmp
je
ins
test
sub
push
retf
mov
mov
sub
(bad)
sti
scas
stos
adc
(bad)
adc
sbb
jno
movs
and
les
cmp
and
bound
imul
mov
sbb
in
js
cmp
out
rol
mov
push
xchg
and
xor
sub
popa
aaa
data16
sahf
fcomp
cdq
mov
inc
xor
lahf
call
sbb
sub
add
daa
test
mov
add
ret
add
jecxz
sti
lock
nop
(bad)
pop
mov
sbb
push
sub
inc
pop
xchg
(bad)
jo
icebp
mov
sub
aaa
shr
cmp
out
fisttp
in
adc
mov
add
outs
lods
ror
sti
dec
leave
mov
sar
adc
mov
xor
fbld
call
mov
push
enter
xor
cmp
inc
mov
dec
out
imul
mov
xor
shl
jb
adc
(bad)
adc
(bad)
int3
mov
fucom
mov
dec
sbb
or
mov
xchg
sti
movs
mov
ret
fcomp
push
dec
dec
mov
pop
adc
enter
icebp
and
cs
das
pop
call
add
xchg
cmc
test
sub
sbb
pushf
movs
gs
add
xor
adc
or
mov
mov
dec
sub
call
mov
push
sbb
adc
jle
xchg
movs
mov
ins
bound
and
loopne
sbb
inc
sar
jae
rcl
addr16
sbb
push
dec
adc
loope
cld
data16
mov
(bad)
mov
or
sbb
test
clc
repz
fbld
inc
out
mov
fcmovnb
jmp
sti
or
sbb
push
dec
lds
je
sbb
in
pop
neg
and
push
and
push
pop
jne
imul
cdq
clc
xor
mov
xor
je
add
aam
add
cs
and
cmp
out
ds
lods
push
xor
jns
retf
mov
adc
clc
push
mov
xchg
movs
and
mov
pushf
mov
xlat
cmp
add
scas
dec
stos
sub
sub
push
adc
or
int3
add
sbb
dec
push
ja
clc
pop
pop
jo
xchg
push
nop
dec
add
cmp
dec
sub
add
inc
xchg
iret
xchg
ret
cmp
dec
sub
cmp
dec
or
mov
cmp
sub
dec
cmp
mov
pop
adc
inc
repz
ficomp
jb
out
inc
cld
jle
daa
idiv
mov
sub
in
push
lea
adc
xchg
movs
mov
sub
push
jbe
push
adc
jmp
xchg
push
xchg
pop
sbb
outs
cmp
mul
xor
dec
(bad)
sbb
mov
aaa
mov
pop
aas
sbb
jmp
push
js
and
xchg
cli
inc
test
xchg
enter
aad
loope
js
jmp
fwait
ds
pop
cmp
push
(bad)
mov
lea
cmps
shl
imul
push
loop
mov
inc
or
pop
mov
fucomp
or
inc
push
xchg
scas
mov
adc
lds
mov
popa
jp
(bad)
cmp
xchg
aaa
adc
mov
jo
dec
xchg
sub
adc
mov
push
int3
rcl
xchg
js
gs
push
sub
xchg
popa
inc
fcomip
stos
nop
call
mov
sub
push
(bad)
sub
pop
cmps
xchg
mov
retf
inc
ja
stos
dec
aas
mov
ins
dec
test
pop
adc
xchg
std
pop
pop
xchg
push
adc
jo
push
cmp
sub
push
les
cli
xor
dec
fnstcw
out
adc
mov
jmp
lock
mov
xchg
mov
(bad)
js
sar
fisub
call
push
add
mov
movs
gs
popa
dec
popa
xchg
xor
sub
push
jg
mov
es
jae
stos
xlat
mov
call
shl
add
hlt
dec
out
or
hlt
add
pop
mov
and
adc
push
js
pop
mov
or
mov
movs
add
shl
sti
aam
clc
int
dec
neg
jmp
jne
push
jge
xor
xchg
je
call
retf
int3
movs
aam
jmp
sti
dec
rcl
jb
es
iret
movs
in
or
dec
(bad)
jmp
js
xchg
iret
cli
popa
test
out
int
push
xor
jo
les
ficom
pop
jns
in
mov
mov
push
pop
mov
rcl
neg
jae
add
sub
dec
cmp
imul
lahf
dec
jg
dec
mov
outs
(bad)
movs
jns
(bad)
xchg
jae
imul
push
dec
repz
stc
or
sahf
cli
jno
shl
(bad)
cmp
adc
and
cmp
jo
inc
push
mov
outs
mov
call
hlt
xor
or
(bad)
jmp
fnsave
hlt
out
lds
out
xchg
in
sub
mov
call
fisttp
into
jno
inc
in
jmp
sti
push
repnz
inc
(bad)
movs
xchg
or
add
inc
lock
jecxz
xor
sbb
je
jo
leave
xchg
mov
adc
xchg
js
or
in
into
std
jb
icebp
sahf
xor
pop
mov
mov
popf
in
fdivr
push
jno
push
push
xchg
fcomip
test
scas
sbb
lods
adc
aam
pop
lods
shr
sbb
int
sbb
mov
test
je
lfs
inc
sbb
mov
sahf
xor
cld
inc
iret
pop
das
outs
push
and
lahf
xor
jbe
mov
dec
int
add
sub
retf
push
out
mov
fwait
mov
stos
cmp
dec
lds
or
pushf
test
out
cdq
sbb
inc
mov
pop
inc
add
push
or
and
push
xchg
xchg
add
call
dec
jle
(bad)
ins
jecxz
jl
mov
in
outs
cmc
fwait
jle
popf
(bad)
(bad)
sbb
sbb
imul
push
test
cld
xchg
sub
call
shr
lods
iret
cmp
leave
movs
test
xor
movs
sbb
xor
pop
shl
out
fadd
push
pusha
mov
adc
addr16
add
fdiv
or
adc
jno
push
push
push
push
mov
repz
in
test
fistp
(bad)
int3
adc
jp
pop
sbb
outs
leave
push
stos
push
xchg
ja
js
push
imul
mov
sbb
cli
cmp
out
data16
aam
cdq
xchg
stc
in
jp
cmp
(bad)
aad
dec
loope
push
pop
cli
shl
jae
and
test
pop
fcmovnb
mov
push
mov
imul
inc
iret
mov
es
xor
(bad)
mov
and
ins
fidivr
fisubr
push
push
cmp
popf
push
(bad)
in
push
add
mov
aaa
jecxz
xor
sbb
or
ins
inc
adc
push
das
jg
fucomi
test
dec
sub
mov
addr16
mov
xor
retf
(bad)
leave
les
push
inc
sub
retf
add
sbb
xchg
test
lds
inc
sti
mov
fs
addr16
mov
and
cmc
je
and
xchg
sbb
cld
aaa
movs
jb
pop
jo
inc
inc
retf
cli
in
mov
loopne
into
inc
and
push
dec
es
pushf
int
push
mov
loopne
je
xor
mov
xchg
dec
movs
jg
mov
fsubr
fst
mov
push
sub
ficomp
pop
fld
jecxz
fs
xor
sub
cmp
je
sti
cdq
std
(bad)
jmp
jnp
(bad)
and
mov
mov
dec
xor
sbb
scas
push
sub
jp
std
sbb
and
loope
xlat
jp
fs
popf
jl
retf
popf
fisubr
cld
movmskps
mov
rcl
dec
ret
dec
lods
cld
addr16
shr
lods
jo
dec
push
neg
or
mov
enter
mov
out
and
sub
mov
nop
stos
jnp
jb
add
and
xchg
js
jle
pop
in
sar
sar
and
(bad)
out
xor
mov
xchg
mov
dec
repnz
and
xor
test
ins
mov
xchg
jge
jno
and
retf
mov
or
sahf
leave
xchg
xchg
add
div
shr
pop
test
(bad)
cld
mov
repnz
mov
xchg
popf
outs
adc
inc
mov
pop
sbb
add
cdq
jp
dec
(bad)
xlat
ja
sbb
sub
adc
lock
loopne
dec
mov
sub
hlt
dec
dec
cmp
movs
push
aaa
aad
adc
bound
ret
mov
ds
cwde
sub
retf
lahf
push
jno
js
movs
fcomp
movs
pushf
push
mov
or
push
rcl
sub
imul
jno
inc
sbb
aam
add
(bad)
shr
mov
add
pusha
repnz
jge
pop
sti
mov
add
add
icebp
mov
fidivr
loop
retf
fcom
push
pop
mov
push
lods
xchg
clc
pop
push
and
inc
ret
and
cli
push
mov
out
cmp
and
sahf
pop
mov
ret
fidiv
cwde
aam
cmp
mov
xor
fdiv
mov
push
jl
cmp
jne
mov
cmp
pop
mov
mov
loop
cwde
pop
push
sub
jmp
leave
jbe
sub
and
daa
adc
xchg
mov
fnstsw
mov
inc
fisttp
cmp
repnz
or
(bad)
sub
iret
aam
fstp
inc
test
scas
in
adc
xchg
jmp
fdiv
jne
or
fcomp
xlat
shl
shr
mov
jb
and
stc
(bad)
ds
neg
out
and
mov
dec
adc
loop
mov
dec
xchg
jbe
fistp
aad
cli
test
fs
jno
sub
clc
mov
iret
or
xchg
dec
fs
pop
test
jae
cld
pop
mov
xor
fs
adc
outs
push
add
mov
lahf
push
add
call
into
inc
push
fucomip
std
lods
pusha
arpl
ror
jns
les
imul
cmc
sbb
call
call
mov
sahf
movs
retf
stos
mov
in
data16
gs
cmps
div
push
mov
cmp
dec
xchg
mov
xchg
clc
clc
mov
int
push
or
sub
ins
mov
mov
cmp
gs
mov
jmp
ins
jae
and
lods
adc
jnp
pop
dec
mov
mov
inc
movs
mov
das
xor
fdivr
mov
arpl
into
pop
jno
mov
cli
sar
mov
ret
out
(bad)
lahf
and
popa
add
jbe
adc
inc
push
cwde
sbb
data16
int3
and
sub
push
dec
dec
cmps
ja
mov
inc
jl
(bad)
in
cld
rol
stc
cdq
sbb
push
mov
les
xchg
cmp
scas
loopne
or
divps
clc
mov
test
xor
push
cmp
and
data16
cli
out
jo
push
xchg
int3
inc
ret
nop
push
test
and
popa
cmps
imul
jns
aas
dec
mov
jno
push
ror
xor
push
lds
add
jp
pop
xor
jns
mov
add
adc
xor
cmp
sbb
das
popf
mov
push
pusha
cmc
mov
xchg
fs
in
loopne
cmp
enter
push
mov
sbb
cmp
shl
sbb
(bad)
xor
or
mov
ret
aam
xchg
sti
mov
sbb
stc
cs
movs
add
inc
loop
loope
ins
test
mov
in
ds
scas
xor
pop
ror
shl
and
jbe
push
push
fild
les
ja
xchg
inc
in
lds
in
psubusw
movs
inc
push
gs
add
(bad)
xor
mov
dec
(bad)
into
cs
xchg
mov
mov
add
lea
push
inc
scas
pop
(bad)
and
cmp
xchg
and
jae
jno
sti
jecxz
mov
xchg
mov
test
fnstsw
fiadd
data16
mov
push
out
sbb
adc
jl
pop
lock
scas
or
xor
(bad)
fidivr
sbb
mov
popf
mov
xor
and
sbb
add
push
sbb
mov
xor
adc
ins
jo
sbb
fstp
mov
in
es
fucom
sti
pushf
push
add
cld
pop
data16
add
(bad)
movs
int
shl
and
iret
inc
pop
fild
rcr
call
mov
and
or
lahf
cmp
dec
imul
or
mov
xor
iret
stos
push
xchg
push
(bad)
test
in
or
(bad)
dec
mov
pop
cdq
push
pusha
cmps
ret
push
rcr
add
fwait
xchg
pusha
mov
fiadd
sub
lods
scas
jo
push
and
sbb
out
aaa
dec
in
mov
push
repnz
mov
sbb
inc
retf
rol
add
call
stos
inc
xor
xchg
xor
sbb
outs
in
jno
inc
(bad)
xchg
fistp
out
bound
dec
dec
jp
int3
adc
mov
outs
or
pusha
inc
addr16
imul
push
cmc
jnp
xor
vmovmskps
pop
aaa
jo
cmp
xchg
add
test
(bad)
cmp
mov
jae
sub
std
mov
jns
add
mov
dec
add
xor
cs
mov
int
scas
lahf
xchg
daa
mov
ds
add
loopne
push
xchg
cmps
test
gs
imul
sub
jno
adc
xchg
test
jbe
mov
sub
fnstenv
dec
stos
bnd
lea
dec
aas
inc
sbb
jb
cmp
in
std
(bad)
fdiv
ffreep
sub
pop
loop
cmp
adc
in
pop
or
shl
mov
cmps
mov
adc
or
test
cmp
xchg
adc
mov
mov
sti
sub
sub
pop
jmp
scas
mov
cmc
xchg
sbb
fisttp
xor
dec
adc
fdiv
in
pushf
and
jno
push
bound
out
mov
mov
mov
retf
jnp
mov
repnz
or
mov
loopne
ds
inc
adc
add
in
jno
and
and
mov
sbb
mov
add
sbb
mov
dec
outs
sar
mov
pop
jle
lods
cs
ja
retf
int3
jne
sbb
ror
pop
aas
or
iret
jo
mov
(bad)
cs
jnp
rcl
out
jne
xchg
cmps
call
(bad)
fcmovu
jle
sbb
lods
add
jns
hlt
mov
xor
pusha
daa
or
pop
stos
mov
test
add
pop
mov
jp
sbb
fcomi
(bad)
sahf
addr16
arpl
cdq
mov
dec
mov
cmp
out
lods
neg
mov
dec
and
sub
fdiv
add
jecxz
call
hlt
adc
fcom
pop
je
(bad)
pop
fdivr
pop
xor
sbb
movs
add
shr
jge
rcl
div
test
mov
xor
mov
je
dec
call
sub
pop
test
fisttp
setns
or
xchg
test
cli
les
dec
sub
adc
jno
cmps
mov
adc
shl
or
iret
or
jp
mov
add
dec
or
icebp
cmp
add
fldenv
inc
cmc
sbb
inc
scas
fcom
addr16
push
cmp
sbb
cmp
test
or
bound
xor
in
push
aad
mov
call
inc
enter
mov
jb
ja
popa
inc
je
adc
jmp
mov
les
or
push
pop
xor
mov
lock
add
movs
jne
aas
out
sub
inc
fcom
(bad)
ror
cmp
cmps
xchg
push
inc
pop
iret
int
xchg
sbb
fsub
or
jge
bound
std
bswap
pop
add
jo
mov
push
xchg
inc
sub
cmp
xchg
(bad)
push
sahf
in
jmp
dec
add
mov
jmp
mov
and
bound
xchg
(bad)
dec
iret
pop
pop
cmp
lahf
mov
lock
lahf
or
lea
mov
lahf
aaa
jecxz
sub
ss
or
adc
push
(bad)
or
cld
in
pop
inc
jl
jl
sbb
mov
sub
push
aam
pop
pop
mov
repz
pop
mov
push
sbb
jecxz
jne
sbb
and
and
icebp
mov
add
in
inc
lock
pop
(bad)
loope
push
or
cmp
or
push
repz
imul
mov
mov
adc
mov
out
inc
and
pop
enter
mov
inc
pop
call
movs
mov
xor
(bad)
adc
push
les
inc
xchg
and
test
sbb
repz
jmp
dec
or
adc
cmc
lea
shr
and
sbb
test
mov
or
jb
repnz
mov
push
fcom
xchg
jno
or
sbb
jecxz
sub
dec
pop
repnz
imul
ss
popa
fidiv
outs
xor
adc
push
add
and
jle
fdiv
(bad)
imul
adc
mov
dec
cwde
(bad)
jne
iret
aad
sub
and
sub
repz
and
std
push
cmp
mov
jge
and
dec
cli
mov
shl
retf
jno
cmp
jbe
push
cdq
call
ss
imul
mov
add
mov
imul
shl
add
outs
jo
add
rcr
mov
xor
mov
(bad)
iret
cmp
mov
adc
fucomip
sbb
(bad)
call
mov
xlat
inc
out
into
mov
push
add
rcl
aad
inc
stos
ja
or
and
and
sub
and
xor
dec
cmc
repnz
jmp
jo
mov
mov
bnd
sub
pop
test
cmp
(bad)
(bad)
mov
push
leave
fdiv
push
sar
adc
xchg
xchg
aas
in
fmul
and
loope
adc
sub
mov
sar
inc
inc
aas
xor
xchg
dec
jle
not
rol
shufps
(bad)
test
push
(bad)
push
pop
bnd
push
test
or
inc
mov
(bad)
jecxz
add
sbb
aaa
test
les
pop
test
xchg
(bad)
repnz
popf
std
stos
xor
les
dec
pop
mov
and
adc
xor
xchg
idiv
loop
clc
mov
mov
add
cmp
cmp
repz
xchg
nop
jo
cwde
ins
call
out
or
ja
movs
fucomp
push
adc
clc
xor
and
fisubr
push
outs
lods
ss
xchg
(bad)
in
int3
scas
sbb
and
fisubr
shl
mov
fwait
popa
jb
std
std
lea
pop
inc
fwait
ss
pushf
shl
das
cmp
and
cmc
mov
ret
mov
shr
jae
fwait
into
or
inc
push
mov
stc
mov
push
push
mov
ins
stc
sub
loope
cmps
mov
inc
mov
fsubp
mov
retf
ret
and
xor
mov
outs
dec
popf
mov
test
lds
xchg
dec
jnp
jecxz
shl
mov
dec
xchg
call
mov
(bad)
mov
xlat
mov
adc
push
lods
push
outs
push
iret
or
in
dec
enter
outs
push
push
pop
mov
test
inc
pop
dec
cmc
jmp
inc
or
test
cmp
fs
rcr
inc
mov
jle
push
pop
fs
fwait
jmp
sbb
sbb
and
dec
lods
xchg
test
or
and
in
inc
retf
mov
and
push
in
dec
sbb
es
xchg
sbb
js
xchg
rcl
dec
mov
mov
adc
inc
sete
mov
jb
mov
and
mov
push
or
loop
pop
ror
cmps
ins
fcmovne
aad
jle
mov
sub
ret
lock
pop
cmp
pop
mov
fnstenv
and
fisub
(bad)
mov
xlat
cmp
mov
adc
js
xchg
rol
push
addr16
dec
(bad)
mov
inc
dec
add
ds
lods
int
scas
test
xor
cmp
adc
es
cmp
mov
dec
or
(bad)
fisub
enter
adc
jno
hlt
add
lods
dec
and
xor
call
cmp
retf
retf
pushf
dec
add
ja
stc
es
inc
fstp
pop
or
stos
jne
or
ja
mov
sbb
jmp
pop
jbe
loopne
mov
sti
jmp
push
inc
movs
(bad)
mov
movs
mov
dec
adc
pop
cmp
mov
mov
in
push
lods
(bad)
icebp
xchg
mov
xchg
xchg
fisubr
ret
mov
(bad)
mov
cmp
cmc
sbb
xor
jge
mov
aad
test
arpl
movs
cmps
in
ins
dec
test
dec
cmps
jb
neg
fcmovnbe
sbb
inc
pop
imul
push
and
test
(bad)
imul
inc
xor
mov
pop
aad
fld
movs
mov
aad
adc
mov
cs
push
dec
inc
and
pushf
jl
ror
xor
cwde
jnp
loopne
iret
xchg
lea
mov
cli
sbb
call
fucomi
cmp
push
push
lea
movs
mov
fidivr
push
sbb
push
cwde
push
data16
cdq
ror
idiv
and
xlat
out
mov
leave
mov
mov
jae
rcr
mov
or
jno
cli
jmp
out
pop
add
pusha
add
mov
cli
daa
mov
and
lds
leave
dec
or
pop
test
popa
pusha
inc
sbb
stos
ficom
stos
(bad)
test
xchg
aad
addr16
int3
sti
and
or
stos
jmp
test
lods
pop
xchg
scas
mov
push
imul
clc
sub
cs
test
jle
pop
xor
adc
cs
(bad)
call
push
lods
mov
xchg
add
je
mov
cmp
aam
jmp
jp
mov
mov
mov
rcr
jle
and
or
fistp
movs
xchg
xor
dec
dec
(bad)
jnp
inc
scas
mov
lahf
push
xchg
out
xchg
or
push
jno
xchg
jbe
clc
imul
sub
cdq
movs
pop
out
sti
add
cli
cmp
scas
adc
mov
in
mov
stos
inc
lods
ror
xor
(bad)
mov
pop
jae
xchg
scas
mov
in
pop
clc
mov
out
push
or
loopne
pushf
jno
xchg
xchg
outs
sub
test
xchg
mov
push
push
retf
or
je
dec
ret
mov
sar
mov
or
arpl
jmp
in
sbb
sub
test
mov
(bad)
jg
pop
addr16
jae
cmps
push
xchg
sti
mov
or
js
mov
fstp
jbe
mov
push
rcr
lock
clc
jp
mov
repz
lods
or
xchg
mov
rol
popf
adc
loope
lock
pop
lahf
xchg
or
lods
push
dec
or
pop
jmp
xchg
movs
mov
mov
out
add
scas
sbb
lds
stos
dec
mov
ss
fidiv
clc
mov
jmp
aad
aas
sahf
mov
adc
jmp
and
cmps
sbb
push
or
or
hlt
cs
jmp
stc
rcl
sub
leave
mov
or
xchg
loope
mov
dec
int
dec
sub
int
xor
jb
pop
xchg
aas
pop
nop
sub
rol
inc
jp
fisttp
add
inc
(bad)
cmc
add
xchg
xchg
jl
mov
lods
pushf
or
mov
mov
xor
jge
sbb
rol
and
mov
leave
and
mov
clc
(bad)
jle
sbb
fisttp
(bad)
out
mov
imul
push
cmps
adc
sbb
jl
sbb
frstor
mov
cmps
cmc
push
mov
dec
push
or
jae
scas
xchg
jmp
mov
pop
mov
call
bound
or
aaa
hlt
pop
adc
jle
pop
adc
pusha
ret
jle
pop
xchg
mov
sub
push
adc
dec
xchg
mov
clc
iret
cmc
ficomp
mul
das
cmp
xchg
xor
mov
in
cdq
call
int
stos
call
fdivr
mov
or
jne
push
addr16
popa
inc
addr16
cmp
loope
psrad
lods
nop
mov
test
mov
sub
xor
test
push
jg
sti
sub
fcomp
(bad)
inc
test
xchg
dec
retf
leave
(bad)
fisub
inc
mov
dec
(bad)
aam
sahf
popa
mov
mov
jns
mov
cmp
cld
movs
callw
push
xchg
mov
js
pop
cwde
push
leave
xor
mov
push
push
push
imul
sbb
cmp
jb
jecxz
adc
sbb
inc
out
xlat
call
pop
mov
cmp
test
dec
pop
bound
mov
outs
cmp
movs
in
es
cs
imul
test
push
xchg
xor
shl
popa
gs
adc
mov
jl
out
mov
jle
outs
fimul
add
imul
inc
call
out
sub
jo
sahf
loope
push
add
mov
mov
and
push
test
mov
jmp
mov
dec
adc
sub
call
iret
enter
fistp
cmps
mov
cli
inc
xchg
int
movs
fnstenv
lds
mov
mov
rcr
je
sbb
and
jl
adc
add
add
add
add
ds
mov
add
jmp
xor
pop
mov
xchg
push
ss
(bad)
xchg
sub
sub
push
sub
lock
sbb
cmp
and
scas
gs
mov
mov
(bad)
clc
cmp
jg
bound
and
dec
push
pop
push
aam
nop
mov
cmp
add
sbb
jnp
ret
cli
inc
fs
mov
cmp
pop
das
or
loope
mov
out
and
mov
jp
inc
imul
pop
loope
and
pushf
pop
pop
jl
xchg
pop
push
or
jbe
(bad)
fwait
call
sbb
lahf
imul
cmps
mov
aam
jb
or
pushf
add
xchg
test
lods
jnp
scas
and
cs
clc
sar
inc
push
xchg
push
(bad)
mov
out
(bad)
sahf
movs
mov
pop
sbb
jecxz
lods
fild
ss
clc
loope
mov
xor
nop
aam
and
out
ss
enter
jns
stc
mov
push
dec
into
mov
jl
mov
xor
adc
aam
js
jmp
ss
or
mov
imul
mov
call
mov
adc
adc
push
xchg
mov
jle
dec
enter
dec
sub
push
cmp
popf
mov
mov
cwde
inc
sbb
mov
test
jp
add
xchg
push
inc
adc
push
adc
pop
or
mov
dec
sub
aaa
jge
mov
jae
cmp
loopne
push
stc
cwde
xchg
sub
fstp
bnd
dec
and
vcmpss
push
mov
push
js
les
mov
stos
out
leave
not
jae
int
sbb
push
or
and
mov
shr
sub
add
stos
jo
mov
stos
mov
push
loop
sub
push
pop
mov
adc
fnsave
ja
dec
test
sbb
pop
mov
(bad)
jnp
ret
imul
repz
mov
xlat
xchg
inc
ja
popf
and
int
mov
fst
xchg
mov
cs
ss
add
cmp
in
test
xchg
or
sbb
mov
push
push
inc
sub
ja
pop
call
in
std
dec
outs
mov
push
loopne
inc
sub
dec
in
sub
(bad)
cwde
or
push
das
jle
movs
mov
xor
inc
mov
in
cdq
test
pop
aas
dec
(bad)
cmp
fcmovnb
sar
jmp
pop
sub
shl
lods
call
sbb
rcr
mov
cmp
(bad)
in
dec
mov
jb
push
xor
sbb
dec
shl
jo
cmp
out
xchg
sub
or
add
push
arpl
fisubr
cmp
pop
or
shl
dec
mov
hlt
aam
rcr
inc
dec
rcr
sub
inc
sub
test
mov
inc
cmp
jae
and
mov
xor
pusha
or
pop
clc
dec
mov
mov
sbb
iret
lock
and
jle
mov
stos
xchg
into
imul
adc
jne
in
nop
sub
push
and
add
jp
fsubr
add
retf
sbb
pop
sbb
je
lods
ins
cmps
add
and
mov
nop
pop
pop
call
xor
shl
xchg
test
addr16
nop
mov
add
push
push
repnz
jo
rcl
cld
inc
call
sbb
pop
dec
leave
ror
mov
dec
pop
cmp
xchg
jbe
jmp
mov
hlt
push
mov
fisttp
mov
fild
in
aaa
push
gs
gs
imul
out
movs
sbb
inc
mov
dec
push
call
(bad)
ja
out
jae
data16
mov
inc
xchg
ror
jmp
stc
test
call
movs
sub
cli
mov
jno
movs
push
dec
fcmove
and
cmc
add
xchg
loope
sbb
shl
sub
fwait
mov
xor
pop
ror
icebp
stc
ja
out
sbb
fnstenv
icebp
and
mov
pop
mov
cmp
cli
loop
sub
cmp
push
bound
dec
xchg
data16
adc
sub
call
jecxz
ss
lahf
cmps
clc
out
jno
loop
inc
rol
add
mov
push
inc
mov
sub
(bad)
pop
mov
fldcw
in
xlat
fdivr
imul
xchg
imul
sbb
std
cmc
sub
loopne
sbb
clc
mov
xor
cmc
xchg
pusha
dec
retf
stos
adc
xor
in
stos
pmaxub
push
inc
imul
jecxz
pusha
mov
mov
cmps
std
and
sbb
cmp
and
jmp
mov
mov
sub
or
es
les
cmps
xlat
mov
sar
and
daa
dec
cmp
pop
stos
cdq
push
lods
push
adc
(bad)
mov
and
jmp
(bad)
mov
ds
cwde
sbb
push
in
dec
aas
and
aaa
arpl
xchg
test
in
xlat
in
add
sbb
ret
shl
xchg
xor
cwde
test
jmp
sub
test
das
sub
adc
dec
scas
mov
fcom
out
xchg
sub
jne
or
push
jmp
adc
dec
cli
dec
ret
repz
jp
fcmove
fstp
gs
push
not
jle
jns
inc
jle
mov
sub
or
jle
and
fstp
ss
pop
push
out
repz
adc
iret
in
stos
rcr
mov
pushf
loop
cli
(bad)
sti
out
ins
cs
xchg
mov
push
scas
loop
mov
stc
cwde
push
push
jnp
fild
fs
cmp
daa
inc
and
fcomp
(bad)
dec
jno
add
xchg
cdq
daa
push
xchg
or
cs
jnp
pushf
add
xor
stos
shl
or
push
les
aad
sub
fadd
mov
sbb
mov
sbb
xor
mov
mov
in
push
imul
cwde
cmp
push
sub
and
les
ja
arpl
sbb
jae
movs
loopne
imul
out
cmc
xor
jns
movs
cdq
into
xor
test
idiv
sar
xchg
imul
je
fs
(bad)
sti
in
rcl
sub
mov
sub
jno
das
(bad)
fisttp
sub
jb
sub
add
clc
xor
jb
adc
ins
sbb
idiv
jg
int
jnp
in
mov
repnz
push
mov
and
jnp
mov
jg
out
iret
ret
adc
outs
(bad)
xor
fcomp
dec
cs
adc
cmp
inc
adc
fwait
repz
mov
push
repz
lahf
push
call
or
test
add
xor
sub
mov
imul
add
jns
dec
sub
(bad)
lds
push
push
pop
(bad)
mov
rol
add
push
cmp
dec
(bad)
popa
cwde
jb
fnstsw
xor
sbb
jg
int
loop
movs
cmp
inc
gs
adc
lea
inc
mov
(bad)
mov
ret
stc
cmp
aas
lds
pop
ret
dec
lahf
aas
ins
lds
mov
add
int
dec
jle
in
inc
dec
and
mov
add
lods
or
mov
popf
loop
aaa
add
mov
jbe
cmp
mov
jle
sub
(bad)
(bad)
es
cmps
sar
push
and
test
or
pusha
imul
mov
add
lds
sub
test
out
test
adc
ins
push
(bad)
es
retf
(bad)
jle
ja
jge
xchg
cld
push
loop
xlat
sbb
xchg
(bad)
(bad)
out
pop
ins
xrelease
rcl
push
scas
mov
jns
jo
jbe
cmps
jp
rcl
in
(bad)
lahf
int
dec
mov
pop
outs
sub
sbb
fsubrp
or
sbb
or
aad
mov
fild
cwde
es
nop
mov
fldcw
xor
push
js
and
and
cld
add
daa
aam
inc
push
(bad)
mov
dec
jp
jecxz
mov
inc
push
test
aas
push
xor
mov
aad
dec
je
cmp
ins
push
lahf
jmp
addr16
push
pop
or
sub
(bad)
in
je
retf
out
iret
dec
lock
out
aas
neg
imul
adc
push
push
push
data16
push
mov
(bad)
sar
lahf
fisub
jae
adc
ins
ja
cmp
mov
xor
xchg
pop
sbb
lock
repz
sahf
iret
mov
inc
out
add
mov
mov
repz
movs
in
inc
xchg
(bad)
add
aad
sahf
loope
mov
into
inc
push
enter
(bad)
movs
jbe
iret
pop
push
(bad)
push
cmps
daa
test
adc
hlt
ja
and
mov
sbb
dec
jbe
mov
loopne
inc
lods
jge
mov
fcmovbe
fsubr
lahf
out
and
push
pop
inc
(bad)
jo
les
jb
xor
sbb
pop
popf
repnz
fsubr
jno
lahf
gs
les
sub
pop
dec
push
mov
call
pmaddwd
or
mov
xchg
sbb
xchg
out
int3
lods
in
mov
adc
test
ja
cmps
dec
imul
(bad)
mov
and
popa
lock
dec
mov
cmp
stos
(bad)
outs
sbb
lock
cmp
scas
icebp
sbb
mov
jmp
mov
icebp
sub
xchg
in
aad
cmp
jmp
mov
push
std
call
dec
or
adc
mov
popa
arpl
rcl
shr
daa
pusha
test
iret
loopne
dec
outs
adc
sbb
je
sub
jg
ins
adc
jmp
xor
cmps
cmp
int3
adc
cmc
loop
mov
int
rcr
jo
mov
outs
jno
into
xor
or
cmp
in
mov
mov
push
addr16
icebp
pop
push
(bad)
sub
pop
neg
lahf
xchg
xchg
and
mov
icebp
fstp
xor
scas
clc
retf
mov
inc
mov
test
or
xor
mov
jl
jp
push
(bad)
cld
cld
out
sbb
inc
ja
jmp
hlt
movs
jmp
in
sub
aas
mov
aas
xchg
jnp
test
std
jb
inc
aaa
jbe
xor
add
(bad)
push
dec
add
and
mov
idiv
pop
inc
xchg
shr
xor
stos
cmp
(bad)
adc
icebp
dec
dec
test
push
ret
shl
xor
mov
xor
pushf
in
das
pushf
js
call
mov
mov
jnp
repnz
or
loopne
cmp
fs
push
push
ds
push
mov
clc
fsub
imul
sbb
adc
test
mov
lods
cmp
jne
xor
xor
out
mov
(bad)
jns
rcr
or
out
retf
mov
cdq
aam
push
lods
inc
loop
sub
jne
push
jbe
push
add
lds
fstp
add
(bad)
push
xchg
inc
dec
mov
jecxz
ss
pop
sahf
daa
inc
and
aas
pop
sar
xlat
outs
xor
ret
or
mov
push
cmp
push
(bad)
stc
test
sub
jb
das
into
mov
(bad)
mov
adc
pop
xchg
mov
xor
call
rcl
adc
xor
inc
popa
ins
xor
push
and
ja
(bad)
sti
jns
dec
gs
bound
ret
aaa
or
jbe
into
ins
inc
fsubr
arpl
cld
aad
push
mov
pop
lahf
push
and
xor
xor
lods
and
xor
mov
test
scas
pop
stos
push
and
push
xor
lahf
inc
sbb
dec
retf
mov
lods
arpl
ror
pop
jp
fbld
retf
push
pushf
and
or
pop
mov
imul
jae
rcl
(bad)
add
sbb
adc
fimul
sbb
cmp
pop
out
sub
pop
test
xchg
in
ja
inc
add
or
vshufps
in
jecxz
mov
mov
lock
jnp
inc
lods
les
jbe
mov
add
lahf
mov
packuswb
(bad)
or
(bad)
setae
mov
sub
shl
mov
add
add
scas
sti
xchg
cmp
gs
clc
aad
adc
in
mov
inc
movs
imul
jmp
mov
pop
xor
adc
aad
push
and
dec
aad
mov
xchg
mov
fs
(bad)
(bad)
jno
mov
jle
adc
xchg
cdq
inc
sub
or
xor
cmp
enter
push
idiv
adc
jb
es
fdivr
ror
xor
inc
or
mov
jns
xor
or
(bad)
(bad)
mov
aaa
mov
xor
xor
xchg
out
in
popf
ret
mov
in
ins
icebp
loop
nop
add
aaa
mov
push
inc
mov
xchg
mov
dec
xor
xchg
mov
pop
dec
std
mov
or
jge
jecxz
xchg
cmp
cs
iret
aad
mov
fdivr
(bad)
movs
add
jp
xor
mov
push
add
adc
fnstsw
retf
cld
outs
mov
shl
jg
jbe
pusha
int3
(bad)
iret
mov
mov
sub
push
or
fcomp
jnp
ds
div
es
or
fwait
shl
cs
sbb
les
mov
xor
dec
jle
jp
jg
test
aas
fucomp
movs
mov
push
repz
aaa
mov
test
in
mov
dec
leave
pop
inc
sbb
jo
enter
lea
sbb
mov
dec
loope
(bad)
sub
cmp
(bad)
retf
les
movs
pop
push
add
push
and
mov
sub
call
pop
inc
mov
sbb
dec
imul
and
add
push
push
sub
pop
jle
pop
(bad)
sub
jmp
add
das
ds
adc
and
add
loop
mov
js
push
retf
adc
(bad)
(bad)
sbb
add
and
dec
mov
sbb
push
mov
fs
add
movs
imul
imul
out
inc
inc
jno
scas
inc
mul
pop
and
(bad)
fisub
aad
mov
ja
mov
adc
ret
arpl
inc
lock
mov
aad
div
dec
lds
test
jmp
ins
push
nop
pop
and
push
inc
iret
dec
loopne
cld
cmp
repnz
outs
push
push
lods
les
pop
inc
int3
xchg
mov
loopne
adc
bound
jg
fimul
iret
cmp
daa
jmp
(bad)
xlat
or
ficomp
sub
outs
shl
jp
fcmovbe
imul
rcl
push
mov
add
fdivr
sbb
inc
cwde
dec
arpl
sti
pop
and
jle
test
push
lods
xchg
xor
mov
scas
mov
mov
in
fld
fisubr
jle
add
pop
cmp
jecxz
hlt
test
jg
and
mov
out
push
test
fadd
or
test
xchg
movs
scas
xchg
or
push
sahf
int
sub
mov
aaa
std
push
aaa
arpl
out
pop
dec
and
dec
and
push
loop
pop
clc
xor
lahf
call
mov
pop
div
mov
adc
shl
test
jb
loop
hlt
pop
pop
cmp
dec
(bad)
mov
pop
mov
pop
neg
out
push
sbb
jns
xor
pop
cmp
cmc
sbb
imul
sub
xor
sub
inc
mov
fwait
add
int3
(bad)
div
jp
push
dec
push
lods
iret
fldenv
cwde
ret
mov
mov
repz
xor
stos
xor
and
sbb
push
test
mov
je
xchg
lods
sub
fcomp
and
enter
add
jg
scas
pop
pop
sub
mov
in
mov
add
outs
push
rol
add
imul
in
add
mov
mov
pop
mov
mov
jbe
cs
outs
(bad)
ficom
call
cdq
mov
pop
int3
sbb
cmp
pop
jp
mov
jbe
sbb
in
fwait
sub
cmp
shr
fdivp
adc
leave
jle
jge
add
xchg
cld
push
js
inc
or
mov
push
adc
cmp
ficomp
lods
cmc
sahf
mov
shld
mov
test
xor
js
jge
jb
dec
jecxz
pop
dec
push
jo
jecxz
in
add
pand
loopne
lds
js
dec
or
es
or
fwait
pop
xchg
js
push
push
dec
jmp
sbb
mov
xlat
fbstp
lods
pop
jg
stos
es
lahf
jbe
pop
xchg
sbb
(bad)
pop
or
jo
xlat
and
pop
stc
mov
pop
add
(bad)
aad
popa
(bad)
cmp
xchg
lock
pop
retf
fsub
movs
ins
xchg
icebp
pop
iret
pop
pop
pusha
cmp
div
cld
data16
test
adc
dec
mov
pop
or
push
(bad)
out
jp
add
ds
rcl
pop
ret
add
add
sub
xor
and
outs
in
xchg
pushf
jbe
adc
icebp
loop
stos
cmp
ret
fdivr
sub
dec
and
mov
fsub
push
push
sbb
and
or
dec
or
repz
jae
mov
jno
jno
out
push
xchg
stc
nop
sahf
stos
mov
and
retf
movs
loope
(bad)
test
xlat
(bad)
xor
dec
int
retf
mov
adc
inc
adc
addr16
pushf
push
fwait
in
ret
in
fwait
int3
jne
xchg
test
(bad)
pop
and
xchg
mov
sbb
xor
jmp
in
sbb
sub
sub
xor
leave
mov
repnz
inc
mov
jno
push
add
mov
mov
and
int
pop
cmp
pop
repz
cmp
jle
adc
retf
cwde
or
pop
in
pusha
jns
add
and
into
push
fstp
ds
retf
test
lock
daa
jo
retf
dec
mov
cmps
or
fisttp
mov
inc
lods
pop
cmp
mov
jbe
sub
xchg
jp
push
out
xor
inc
cmp
in
and
pop
(bad)
sahf
jmp
mov
xor
mov
xchg
mov
add
loope
fist
dec
jmp
lods
xchg
pushf
push
inc
mov
js
sub
dec
add
mov
or
fwait
dec
cmp
loop
pop
jge
jle
test
xchg
shl
dec
movs
lods
daa
sbb
ins
dec
js
sub
repz
mov
ins
sbb
or
push
into
cld
sbb
cmc
cmp
das
jo
xor
xor
and
mov
hlt
mov
push
push
ja
jmp
jae
aas
xor
xor
add
pop
push
stc
adc
dec
mov
sti
push
jp
(bad)
pop
fisub
int
enter
mov
inc
imul
jmp
out
pop
add
ins
(bad)
imul
adc
mov
std
imul
push
aam
push
add
retf
push
lock
out
imul
outs
mov
scas
xor
mov
pop
add
fsubr
ins
mov
adc
xlat
jle
icebp
div
(bad)
inc
int
call
stc
bound
sub
sar
loop
pop
popf
mov
repz
inc
add
retf
xchg
fsub
xchg
push
push
lahf
out
sub
test
mov
and
xlat
pop
pop
movs
scas
enter
push
xchg
push
push
jae
push
push
sbb
fdiv
and
add
and
sar
sbb
mov
dec
inc
test
mov
xchg
cmp
mov
add
shr
mov
mov
adc
sub
mov
fnstsw
or
rol
stos
lds
pop
xor
popf
cmp
scas
and
int3
stos
push
cmp
lods
inc
movs
fst
xor
lods
pusha
popf
sbb
bswap
inc
out
mov
jne
ds
dec
push
aad
dec
jle
pop
fdiv
dec
aaa
clc
ss
and
in
ss
mov
ror
push
inc
dec
aaa
mov
mov
add
jl
mov
in
hlt
xor
cmp
xor
(bad)
or
hlt
(bad)
(bad)
neg
repz
pushf
add
inc
cmp
int
and
pop
cwde
out
mov
mov
xchg
or
pop
imul
fild
ds
aaa
jp
mov
dec
inc
js
mov
jns
sti
popa
xlat
jo
outs
fs
(bad)
retf
push
and
sbb
icebp
pop
sub
dec
dec
cdq
cld
stos
xchg
stos
mov
add
sub
and
xchg
lods
xor
and
mov
call
push
mov
lods
mov
hlt
stos
arpl
xchg
xor
pop
mov
or
jp
and
push
cmps
call
out
push
cmp
push
jne
mov
dec
cmp
dec
outs
mov
pop
mov
jne
hlt
retf
out
add
je
inc
mov
and
pop
pushf
jl
add
bound
les
mov
(bad)
leave
jnp
mov
js
scas
xchg
add
out
aas
and
mov
movs
inc
iret
mov
sbb
inc
cmp
ins
(bad)
pop
sbb
in
mov
lea
cmp
xor
pop
imul
enter
bound
pop
lods
test
fwait
xchg
jl
or
out
pop
ret
cmp
shl
push
mov
sbb
push
cdq
or
cmc
test
dec
push
pop
loop
arpl
inc
xchg
call
push
xor
or
fsubr
adc
mov
sbb
pop
scas
jo
lods
jns
inc
test
out
iret
mov
jb
push
mov
out
out
adc
stc
push
out
inc
mov
out
adc
add
fimul
adc
mov
adc
das
ret
aam
out
cmc
stos
push
cwde
mov
xor
pop
mov
or
mov
in
push
arpl
daa
loop
jg
enter
mov
inc
mov
sub
mov
and
jmp
xchg
pop
sti
fwait
mov
jge
pop
imul
push
mov
retf
pop
pop
or
inc
dec
test
and
ss
movs
jp
adc
stos
pop
iret
add
imul
and
lock
test
adc
in
pop
out
(bad)
cmp
cmps
rcr
mov
mov
xadd
jmp
jmp
cmp
sub
mov
(bad)
jne
leave
mov
fbld
sub
scas
jle
fcomp
and
fild
(bad)
retf
dec
pop
lahf
push
mov
dec
sar
xchg
das
ficom
rcl
add
sbb
test
jo
xchg
lods
add
into
adc
neg
test
cmp
lds
mov
xchg
test
(bad)
retf
aas
lods
sar
jge
loope
(bad)
fcom
scas
mov
das
(bad)
ret
and
mov
ins
sahf
mov
and
scas
mov
adc
repz
sbb
sbb
cmp
test
and
xchg
scas
ret
lahf
repz
in
sbb
ja
ds
ror
add
cmp
xchg
cli
fs
push
fsub
mov
scas
lods
sbb
inc
push
int3
lods
sub
pop
push
inc
push
sub
jmp
xor
lea
mov
or
push
mov
pushf
and
mov
push
or
jmp
in
dec
clc
jle
push
aad
test
sahf
cmps
test
mov
adc
test
pushf
sub
pusha
fistp
out
cwde
pop
mov
popa
cs
mov
aas
shr
ror
test
idiv
xor
mov
(bad)
(bad)
adc
pusha
retf
push
push
xchg
sbb
pop
jle
jp
int
xlat
fist
jle
aas
xchg
xchg
push
mov
test
out
fild
push
dec
jmp
xor
xchg
mov
cmp
or
cmp
lahf
fist
dec
rcr
xchg
call
sysexit
fcmovnu
in
push
aad
cdq
and
jo
jne
push
push
fild
ja
clc
mov
shl
jno
dec
into
fwait
mov
out
mov
outs
add
(bad)
adc
push
or
shl
dec
push
dec
test
sbb
(bad)
je
fs
inc
jge
scas
ins
outs
jle
sub
mov
sbb
pop
lahf
mov
in
jl
std
xor
pop
pushf
fldl2t
fisubr
mov
into
clc
mov
(bad)
out
dec
mov
(bad)
stc
pop
lock
push
xchg
scas
aas
or
sbb
dec
std
jmp
ins
jmp
cmps
adc
in
push
bound
and
shr
push
loope
pop
jge
lds
cmp
aaa
inc
or
cs
or
aam
xchg
push
adc
push
push
loopne
push
inc
std
dec
cmp
mov
loopne
and
jp
pop
jmp
push
aaa
or
cs
gs
dec
ins
push
sbb
mov
jbe
or
sahf
adc
mov
in
das
test
push
lds
pop
sahf
not
adc
movs
mov
dec
out
mov
xlat
ds
sti
ds
xchg
jo
jp
das
pop
arpl
push
adc
push
push
fidivr
push
mov
ret
inc
cld
jmp
enter
xchg
sbb
pop
xchg
ins
repnz
fcom
inc
bound
scas
inc
sahf
enter
in
cmp
fldln2
nop
outs
and
xchg
ror
outs
mov
sar
stos
inc
je
xchg
popa
in
inc
popf
mov
push
das
cs
aas
stos
shl
inc
mov
or
dec
sbb
mov
adc
lahf
add
mov
adc
push
leave
ja
cmps
lahf
clc
mov
call
ror
xor
daa
adc
clc
sub
out
dec
mov
repz
pop
push
ret
std
inc
inc
jb
mov
xor
adc
imul
sub
scas
hlt
lea
in
mov
fs
mov
xchg
sub
pop
mov
and
int3
pushf
cmp
or
inc
add
das
xchg
mov
and
mov
test
test
pop
or
pop
fstp
int3
test
mov
popf
mov
(bad)
xor
cdq
sti
xor
pop
fidiv
mov
popa
adc
add
aaa
ja
xchg
popa
shl
lea
jae
push
sbb
sub
or
mov
cmp
cmp
and
jg
or
out
std
sbb
lods
mov
sub
data16
popa
pop
sub
imul
sub
clc
nop
ja
clc
das
cmp
fimul
xlat
(bad)
nop
enter
dec
rcl
sub
sub
push
fnstcw
stos
ror
or
icebp
sbb
and
cmp
mov
fsubr
push
fmul
call
leave
pop
clc
xchg
pop
loope
daa
mov
and
fmul
je
jno
jmp
aaa
or
nop
out
int3
movs
cmp
xchg
jo
pop
sub
inc
mov
scas
aaa
call
jnp
xor
enter
out
pop
xchg
loopne
pop
and
push
aad
popa
and
push
js
arpl
fcom
mov
mov
pop
dec
jp
ror
pop
add
popf
add
mov
push
retf
pop
in
fmul
or
cmp
lock
mov
mov
and
int
int3
ds
pop
push
mov
and
sbb
push
mov
add
xlat
dec
xlat
push
lahf
les
jbe
icebp
xchg
das
add
xor
dec
xchg
inc
add
in
and
inc
fs
xor
or
jg
cmp
(bad)
mov
adc
and
pop
sub
jg
gs
fild
es
add
sub
sahf
push
cld
push
or
fcom
addr16
jbe
test
dec
jmp
icebp
(bad)
mov
retf
in
push
jmp
leave
loope
leave
xchg
dec
sbb
mov
enter
inc
mov
ja
mov
or
xchg
shl
out
pusha
jnp
and
mov
fmul
pop
and
push
inc
sti
jmp
jmp
push
idiv
xor
or
jns
pop
sahf
cmp
outs
push
out
push
cmp
sar
or
aad
jmp
shr
fs
lods
mov
lock
out
xchg
rcr
pop
aaa
push
lea
jo
add
mov
jl
mov
push
gs
xor
and
out
fisttp
repnz
pop
retf
mov
jmp
ret
aas
add
dec
(bad)
frstor
mov
into
xor
cmp
pusha
dec
nop
cmps
mov
shl
clc
popf
pop
pop
mov
mov
out
mov
out
or
or
mov
lods
xchg
adc
pop
sbb
aam
adc
mov
mov
push
test
and
imul
lahf
aas
(bad)
jmp
mov
xor
push
jmp
and
js
(bad)
sbb
push
imul
in
inc
fistp
jne
aad
sbb
pushf
stc
fucomip
push
rcr
lea
(bad)
clc
cwde
fldcw
cs
mov
xchg
mov
into
xchg
into
fs
outs
or
dec
shl
cmp
mov
mov
mov
dec
xor
cmp
or
loopne
repz
in
dec
repz
push
shl
ins
mov
jmp
dec
mov
xchg
daa
jne
xchg
sbb
std
scas
and
scas
adc
das
cwde
adc
add
xor
sub
sub
loopne
inc
lock
addr16
jle
xlat
stos
cwde
and
jg
clc
cmps
addr16
xchg
add
pusha
les
jne
dec
xchg
xchg
js
pop
enter
inc
je
int3
mov
jns
lods
push
sbb
mov
mov
mov
adc
clc
test
lahf
loopne
push
into
movs
arpl
ss
cmp
aam
shl
sub
pop
cmc
jmp
aad
and
jns
sub
adc
cmp
push
lea
scas
xchg
ficomp
adc
retf
xchg
mov
pop
sbb
xor
sub
sub
imul
cmp
mov
loopne
xchg
jmp
and
rol
jl
jns
push
mov
addr16
movs
bound
rol
mov
mov
sti
(bad)
cmps
cmc
and
jo
mov
pop
inc
punpckhbw
int3
and
and
xchg
retf
cmp
pop
jns
pop
nop
ds
adc
int
xor
dec
push
rcl
push
loop
and
cmp
xor
mov
mov
retf
scas
movs
jns
jg
ins
pop
ret
and
pop
xor
pop
inc
pop
push
popf
add
xchg
mov
das
xor
daa
mov
xchg
fadd
dec
push
adc
mov
dec
jmp
pusha
jb
scas
cmp
and
push
mov
jae
pushf
pop
fnstcw
popa
or
pop
mov
and
inc
cmp
mov
pusha
lahf
in
dec
(bad)
dec
lds
adc
shl
lods
sahf
dec
ins
xchg
inc
in
icebp
xchg
mov
xchg
push
sub
scas
mov
inc
add
in
or
push
ror
lods
or
fcomp
xchg
pop
jle
push
cmps
sbb
xor
and
mov
mov
les
ret
inc
jbe
dec
or
sub
out
das
xor
es
mov
mov
or
daa
aaa
enter
dec
sbb
test
outs
popf
pop
xchg
std
fs
retf
dec
sub
stc
leave
push
(bad)
dec
xor
int
sub
push
push
cmp
push
lock
not
mov
mov
pop
clc
jle
inc
in
cmp
in
rcl
sahf
aaa
(bad)
std
jecxz
ror
sbb
mov
push
ins
sahf
mov
ficom
test
test
imul
jb
push
mov
xor
bound
add
mov
push
sub
xor
jp
sbb
fmul
(bad)
fstp
inc
inc
inc
mov
push
movs
push
out
(bad)
inc
das
(bad)
adc
js
lds
std
mov
mov
lock
fs
add
lds
sub
fistp
xlat
imul
and
repnz
pop
cmp
jecxz
mov
pop
and
and
push
fsubp
test
ret
fiadd
pop
push
pop
jb
xor
test
ret
mov
pusha
inc
xor
jl
dec
retf
adc
mov
pop
add
nop
or
sbb
add
add
scas
jmp
mov
ja
mov
xchg
daa
or
or
and
addr16
cs
stos
cld
mov
inc
pop
mov
je
jmp
leave
div
lods
and
sbb
jmp
stos
mov
jmp
pop
mov
push
in
and
jmp
sbb
mov
pop
sbb
xchg
mov
sti
adc
add
and
test
imul
add
retf
cmp
pop
ret
push
sbb
dec
pop
ja
pushf
push
ret
xlat
ret
nop
sbb
call
es
jbe
imul
mov
leave
rol
or
inc
out
inc
sbb
sbb
hlt
rcl
pop
xor
imul
retf
out
leave
fisttp
xlat
adc
or
jg
retf
test
mov
pop
inc
or
(bad)
clc
adc
(bad)
leave
cmps
fistp
add
xor
(bad)
icebp
call
mov
xchg
xchg
xchg
jno
in
stc
push
or
sbb
(bad)
outs
mov
cmps
shl
mov
pop
xchg
lods
jo
shl
fucomi
push
shl
lahf
adc
aas
jmp
pusha
or
or
call
mov
adc
mov
out
pop
add
ret
and
sub
enter
stos
cld
adc
ret
push
int3
mov
xor
adc
or
mov
and
cmp
lods
adc
repnz
repz
sub
cmp
xchg
xchg
sub
sti
in
xlat
loopne
jns
lds
lahf
fmul
arpl
push
fwait
nop
call
cwde
rcl
shr
xor
sar
dec
aas
jmp
mov
and
pushf
jge
outs
into
lods
int3
in
(bad)
dec
pop
leave
jmp
lods
inc
(bad)
lock
lea
lahf
jge
ret
fs
stos
sub
cs
jns
rcr
push
mov
in
and
je
mov
mov
jnp
loope
out
sub
jno
(bad)
push
stos
mov
sahf
loop
fdivr
mov
adc
mov
xchg
fcmovnb
push
dec
push
mov
jp
sbb
xlat
je
xchg
dec
and
test
sbb
push
std
sub
xor
cmps
push
popa
dec
inc
push
xor
retf
je
stos
mov
push
push
push
and
push
add
loope
lds
jae
js
xor
jbe
popf
std
mov
repz
out
pop
aaa
mov
dec
into
arpl
push
pop
jb
clc
pop
pusha
hlt
ss
(bad)
xchg
out
int3
cdq
retf
jns
and
or
dec
ror
ror
xchg
dec
mov
mov
sub
xor
add
ret
cmp
mov
cmovnp
mov
jl
or
and
daa
sar
in
push
pusha
mov
stos
sbb
cwde
sub
cs
test
push
sahf
adc
push
adc
jg
clc
or
mov
push
adc
or
not
int3
jns
jecxz
push
(bad)
into
sar
mov
daa
rol
(bad)
mov
cmp
pop
add
cmp
dec
and
xor
int
pop
and
test
movs
xor
mov
scas
mov
out
push
loope
cdq
xor
mov
movs
mov
test
fs
lahf
dec
jp
cmp
sbb
jae
xor
out
push
pop
adc
rcr
xor
pop
scas
neg
inc
mov
xor
leave
push
iret
ret
icebp
add
jne
mov
dec
add
fldenv
mov
mov
jmp
test
test
jnp
fiadd
pop
mov
popa
(bad)
(bad)
shl
push
nop
jne
pop
ins
cmp
push
iret
and
push
fldenv
mov
std
retf
cmp
xor
(bad)
nop
(bad)
(bad)
neg
jbe
out
sbb
stos
xor
mov
push
lock
dec
cmps
imul
sub
enter
xchg
xchg
ss
dec
push
push
push
adc
ud0
call
fisub
xchg
lods
xchg
dec
repz
jmp
aam
push
sub
dec
mov
inc
repz
pop
mov
(bad)
xlat
push
push
fnstcw
cld
or
xchg
or
test
(bad)
into
shr
dec
fdivr
pop
mov
jecxz
and
fbstp
add
ja
out
sub
adc
xchg
mov
fild
out
cmp
xchg
call
lds
push
add
int
pusha
test
cmp
not
frstor
sbb
pop
mov
clc
mov
sahf
xlat
int
jmp
jl
adc
and
push
dec
fmul
test
les
push
(bad)
bound
fs
add
sbb
dec
aaa
test
(bad)
mov
lea
std
pop
(bad)
int3
push
or
or
pusha
cs
std
fsubr
push
and
pushf
sbb
inc
jecxz
add
add
add
sbb
pusha
test
out
xchg
jg
retf
mov
jp
xchg
clc
xchg
mov
rcr
sub
mov
rcl
(bad)
dec
adc
mov
mov
cli
pop
pop
dec
iret
aas
loope
setno
xor
lea
mov
sti
cli
(bad)
std
fcmovu
jmp
cld
cmp
push
adc
mov
cmp
mov
fcomp
sub
jmp
test
outs
pusha
js
mov
outs
mov
mov
imul
out
mov
rcl
mov
add
jno
xor
jns
jae
inc
cmp
scas
adc
aas
inc
test
jnp
mov
adc
mov
ins
cmc
dec
jp
hlt
pop
hlt
dec
and
xor
js
xchg
in
cmps
nop
push
push
xchg
and
ja
das
mov
pop
repz
gs
lods
std
in
mov
loope
rcl
sub
loope
cmp
jge
adc
dec
sub
js
push
pop
iret
in
cmc
lock
out
cmp
or
ins
sub
mov
fsubr
push
mov
push
stos
and
mov
fild
sar
fnstcw
pop
sbb
nop
pop
and
shr
cli
mov
xchg
mov
and
mov
mov
mov
aam
enter
pop
cmps
sar
mov
mov
fcomp
sar
and
mov
sbb
out
push
or
inc
inc
xor
jo
fadd
jns
add
jp
je
pop
mov
(bad)
jmp
(bad)
outs
outs
cwde
jmp
popf
fimul
xchg
inc
mov
fnstsw
push
sbb
jo
push
ds
push
push
ret
sub
mov
cwde
or
dec
jnp
jmp
repnz
std
inc
push
sub
mov
mov
push
adc
xor
mov
shr
test
stos
sub
jns
mov
cmp
mov
retf
pop
imul
fcom
ffree
outs
push
add
into
cmp
add
repnz
or
push
retf
jae
mov
out
call
jp
mov
ror
sub
dec
xlat
pop
stos
pop
mov
jl
icebp
or
stos
fdivr
addr16
shl
or
ficom
xchg
dec
and
sahf
(bad)
inc
loop
loopne
repnz
pop
inc
and
aad
xor
mov
das
fnstenv
jnp
push
stos
scas
sbb
pop
adc
sub
mov
leave
scas
or
hlt
cmp
push
cmc
rcl
(bad)
leave
jno
mov
xor
push
adc
mov
mov
std
sbb
pop
test
mov
in
pop
dec
fcomp
sub
push
sub
jns
xchg
call
push
out
setp
jb
add
and
loope
mov
pushf
xchg
aam
lahf
fnstenv
xor
dec
xor
pop
mov
jbe
ret
imul
xor
mov
push
or
cmps
inc
xor
(bad)
pop
fucomp
jne
mov
out
jl
or
cmp
into
repz
cmp
aas
bound
loop
add
cli
lahf
mov
mov
inc
and
icebp
jno
mov
cdq
fwait
sbb
stos
imul
mov
pop
pop
imul
and
cmp
stc
pop
pop
ds
mov
and
xor
fdiv
sbb
jge
ret
(bad)
pop
mov
out
loopne
mov
loop
test
je
jo
lods
add
jns
repnz
push
mov
push
mov
cmps
pop
inc
popf
leave
(bad)
sub
xlat
adc
dec
ds
sbb
fucomi
fist
je
add
loop
cmc
ror
sub
jae
add
jmp
xchg
adc
cdq
mov
jge
popf
(bad)
ds
sub
push
mov
jmp
stos
cli
ss
pop
jl
lds
daa
mov
imul
cdq
sbb
xchg
mov
xor
lea
lods
sub
(bad)
inc
cmp
xchg
loope
push
aam
dec
mov
div
mov
icebp
sar
mov
cmp
sahf
sub
sbb
cs
outs
test
dec
(bad)
pop
fiadd
sti
inc
cmps
mov
add
popa
arpl
nop
xchg
mov
inc
js
inc
sbb
enter
inc
push
inc
sbb
test
dec
in
(bad)
(bad)
js
and
cmc
pop
stc
or
sub
add
pop
lds
test
sub
adc
xlat
in
leave
sub
mov
movs
mov
add
dec
xchg
inc
out
sbb
xor
add
mov
je
mov
push
std
fiadd
jmp
aam
push
adc
clc
ins
call
unpckhps
sub
leave
mov
jns
ror
cmp
xchg
cmps
mov
inc
or
xchg
in
std
aaa
data16
ltr
cmps
xor
stos
and
aas
jnp
repz
jbe
push
add
mov
and
jns
inc
ret
mov
xor
xor
out
sub
inc
add
push
sub
pop
daa
xchg
int3
fxtract
inc
inc
add
pop
sub
inc
inc
movs
jmp
arpl
movs
fldenv
out
rol
daa
ins
out
and
sbb
stos
retf
sbb
out
inc
sbb
add
jne
cmp
aaa
ds
xlat
adc
dec
call
lock
inc
lahf
xor
inc
cld
stos
adc
or
lods
push
push
jge
lahf
jno
repnz
adc
cli
mov
jge
in
xlat
or
sub
mov
ins
aas
pop
cli
xor
sbb
jp
jecxz
mov
movs
fsub
add
jbe
pop
cmp
out
cmp
xor
out
cmp
arpl
mov
push
push
pop
dec
lods
sbb
in
inc
mov
in
mov
xor
(bad)
inc
sbb
out
shr
pcmpeqw
faddp
adc
in
xor
out
and
cmps
sbb
sub
in
dec
and
dec
inc
sbb
out
rcr
cmp
mov
loope
mov
test
mov
imul
xor
xchg
xchg
aad
xchg
xchg
push
(bad)
xor
fisttp
mov
mov
stos
call
mov
enter
jo
inc
js
adc
pop
add
(bad)
fisubr
dec
add
mov
jo
pop
inc
mov
sub
add
dec
xchg
lds
cld
int
adc
int3
sub
push
pop
(bad)
fist
hlt
jne
cmp
mov
(bad)
mov
cmp
xchg
dec
sub
(bad)
pop
xor
clc
mov
int
xor
xchg
push
pusha
jns
hlt
xchg
dec
out
mov
jmp
push
cwde
jns
shl
movs
pop
ins
scas
inc
vunpckhps
mov
popf
inc
stos
sub
inc
imul
test
bound
mov
sbb
neg
xchg
push
add
mov
in
xor
idiv
in
fdivr
ficomp
cmp
or
lods
into
jnp
movs
cmp
out
or
jp
movhps
dec
mov
cmp
aam
or
sub
or
dec
rcr
cmc
mov
les
fidiv
jne
jl
fcomp
inc
cdq
shr
xchg
mov
inc
push
xlat
xchg
push
aad
and
pusha
sbb
pop
(bad)
fs
in
aaa
xor
sub
adc
js
dec
jnp
mov
dec
in
cmp
push
(bad)
jae
stc
gs
test
mov
add
imul
popa
jb
or
or
and
and
or
cmps
int
adc
push
pop
jmp
jecxz
jmp
jno
jmp
repnz
fisttp
bound
xchg
out
ret
jg
add
idiv
cld
pusha
adc
sbb
pusha
xchg
jne
pushf
dec
in
xchg
out
or
stos
aaa
cmp
and
dec
jmp
fiadd
pop
mov
mov
in
jo
icebp
ds
imul
mov
push
pop
xor
xor
dec
test
aas
xchg
pop
movs
dec
ret
ret
cmp
in
lahf
popf
xor
mov
pop
pusha
dec
push
repnz
push
lds
inc
push
sbb
(bad)
cmp
mov
mov
(bad)
mov
dec
clc
adc
pop
dec
fistp
jmp
inc
or
ins
bswap
mov
pop
adc
xor
jo
dec
sbb
jbe
mov
xor
xchg
adc
test
pcmpgtw
adc
into
fmul
popf
adc
popf
pop
sub
push
lods
mov
test
xchg
inc
or
pop
xor
dec
dec
rcl
xchg
and
sub
jp
loopne
dec
hlt
cmp
leave
push
and
mov
out
mov
les
mov
push
adc
aam
ret
test
aad
retf
inc
mov
jb
pop
xor
lock
mov
cmp
jge
in
push
inc
lahf
int3
retf
scas
(bad)
in
push
fnstsw
jne
mov
iret
xchg
xchg
xor
add
sbb
inc
int
mov
in
pusha
jnp
add
hlt
pop
lock
pop
adc
enter
cmp
jnp
cmp
popa
cld
mov
aas
sbb
mov
imul
push
clc
jo
scas
or
in
cdq
or
leave
std
fadd
jp
(bad)
ins
je
ret
arpl
push
nop
imul
in
push
outs
sbb
xchg
dec
repz
pop
xchg
sbb
jp
shl
out
(bad)
arpl
popa
adc
and
fcom
sub
and
dec
aas
push
lods
and
les
lock
cdq
inc
shr
mov
neg
adc
outs
rol
xor
xchg
daa
call
dec
sbb
leave
xor
cwde
(bad)
pop
mov
(bad)
repnz
add
xor
inc
movs
and
cmps
inc
sub
stos
adc
xchg
dec
pop
cmp
ret
sub
adc
jae
ss
inc
push
pop
cmc
add
test
lea
loop
add
inc
movs
push
call
leave
push
mov
push
hlt
fwait
ins
and
xor
jmp
mov
bound
jo
fs
mov
repz
push
xchg
xchg
add
mov
in
mov
xor
sbb
push
jne
adc
bound
rol
ret
sti
sbb
xchg
out
push
cs
and
pop
outs
aaa
aad
(bad)
xor
stos
dec
in
jg
sbb
dec
shr
icebp
cdq
cmp
lock
lds
rol
xchg
jne
mov
test
mov
not
cli
mov
sbb
and
cmp
fisub
cmp
inc
movs
ror
cdq
mov
xchg
mov
xor
xchg
push
mov
mov
xor
outs
add
push
stc
je
or
ror
mov
inc
jo
add
retf
dec
pushf
ss
cdq
inc
mov
mov
mov
stos
movaps
stc
xor
push
jne
pop
sub
scas
cmp
mov
icebp
rol
mov
sahf
ret
ins
imul
clc
mov
les
lods
jp
push
adc
aad
and
ret
pextrw
adc
mov
ret
sub
sub
dec
or
mov
mov
(bad)
ffreep
rcr
cmp
(bad)
mov
lock
fistp
xchg
ins
or
int
int3
frstor
nop
dec
je
addr16
test
ror
dec
leavew
adc
inc
pop
addr16
push
mov
mov
mov
push
jl
and
fucom
movs
jmp
sbb
dec
fmul
or
mov
fs
js
in
lods
popf
loope
ds
js
mov
adc
push
fmul
in
add
cdq
sbb
pushf
fwait
sbb
add
mov
mov
out
(bad)
mov
xor
ds
cmps
movs
ins
repz
scas
cmp
in
ret
inc
repz
inc
popa
inc
lea
mul
loopne
xor
push
push
ret
push
pop
shl
lds
and
test
into
imul
sub
sub
mov
stos
retf
jb
add
fdivr
adc
bound
dec
ins
xchg
add
xor
lahf
mov
lods
daa
inc
clc
(bad)
cli
jno
adc
into
inc
cmp
inc
loopne
idiv
or
out
cs
xlat
push
loop
adc
fimul
jge
push
enter
jne
cmp
adc
jmp
scas
pop
add
enter
ret
or
ss
mov
inc
and
push
mov
fidiv
mov
ds
loop
mov
dec
bound
dec
lahf
outs
pop
sbb
xor
fadd
lods
or
clc
inc
mov
dec
in
mov
sbb
pop
inc
xchg
jecxz
loop
mov
loopne
jl
rep
shl
(bad)
pop
jb
fwait
pop
popf
mov
(bad)
fucom
out
add
in
or
xlat
add
(bad)
in
int
mov
(bad)
loope
inc
in
movs
xor
cmp
loope
jmp
arpl
cmp
iret
das
push
or
or
loope
sti
gs
push
mov
jno
mov
mov
xlat
mov
adc
adc
mov
nop
add
push
shl
fidiv
into
push
rep
loop
mov
in
mov
xor
ss
pop
adc
sbb
xchg
or
btc
pop
jmp
sbb
ins
(bad)
and
push
cwde
dec
rol
xchg
loope
push
scas
dec
fcomp
stc
adc
enter
inc
cmp
or
xor
or
push
xor
adc
retf
xor
cli
popa
out
lds
push
out
sbb
iret
loopne
add
ins
and
(bad)
bound
sar
or
mov
aam
repz
cmp
push
shl
jmp
call
loopne
das
dec
enter
popf
add
jae
sub
dec
and
dec
movs
ins
int3
mov
adc
call
xor
mov
sbb
mov
mov
ja
push
pop
push
fs
xchg
or
jecxz
sahf
ret
in
jnp
std
xchg
das
push
in
mov
cmps
(bad)
out
push
mov
scas
inc
aam
loope
jecxz
xchg
arpl
mov
imul
cld
mov
out
sbb
mov
and
and
add
hlt
repnz
jge
aam
mov
mov
sub
dec
in
pushf
inc
xchg
or
inc
call
pop
rol
add
stos
es
lds
jg
stc
sub
or
(bad)
pop
xor
clc
aam
inc
mov
and
or
dec
loopne
dec
int3
or
add
dec
sti
daa
pop
jl
fdivr
push
mov
and
pop
mov
pop
cmp
bound
mov
inc
aam
sub
in
(bad)
xchg
aam
scas
cmp
scas
test
aad
jbe
sti
inc
push
mov
js
xor
ret
pop
mov
jl
fsub
mov
jno
ins
int
cmp
pop
xor
mov
ins
cmp
js
inc
outs
jg
cmp
mov
push
dec
test
adc
push
jp
in
xchg
frstor
loopne
jmp
xchg
stos
adc
cmp
dec
jne
dec
shl
sub
xor
enter
cmc
push
jbe
cmp
mov
out
bound
jecxz
rol
aas
aaa
call
adc
push
jo
sub
mov
dec
sar
pop
nop
test
shl
sbb
aaa
sar
sub
inc
sub
in
mov
imul
hlt
fisttp
in
mov
call
and
ins
xchg
jnp
enter
lock
xchg
push
lahf
cmp
xor
lds
sub
outs
xchg
push
jo
mov
or
jb
fcmovnu
int
and
(bad)
clc
daa
repz
cmp
xchg
(bad)
icebp
loopne
adc
push
xchg
push
rol
push
xchg
aas
scas
outs
outs
jbe
mov
or
mov
out
lods
(bad)
jb
push
test
pushf
pop
mov
lds
leave
sub
cmp
push
jg
pop
in
jne
cld
(bad)
daa
xchg
scas
aaa
xchg
int3
add
jge
mov
sbb
(bad)
std
push
mov
jl
inc
or
mov
hlt
loope
test
dec
ja
std
inc
pop
test
sbb
sbb
pop
push
mov
mov
pusha
int3
sub
ficom
push
mov
cmp
mov
add
fcmove
mov
xor
mov
(bad)
test
mov
inc
movs
cmc
je
or
arpl
das
or
(bad)
fcomip
test
mov
jne
icebp
cmps
mov
xlat
mov
mov
lds
push
mov
pop
cmp
idiv
aam
(bad)
pop
dec
dec
jb
cli
(bad)
(bad)
or
mov
lods
xor
fnstsw
cmp
movs
mov
adc
neg
push
out
cmp
ss
inc
(bad)
push
and
hlt
je
sar
mov
jecxz
adc
ds
call
mov
jne
sbb
pop
cmp
in
dec
loop
scas
jge
mov
mov
sub
dec
xchg
vmread
stc
jecxz
iret
cmp
imul
pop
add
(bad)
xchg
cmp
add
add
pop
lock
aaa
add
(bad)
rcl
ret
or
jmp
dec
sbb
xchg
cmc
les
scas
js
out
adc
mov
out
daa
jno
mov
arpl
ror
dec
dec
mov
xlat
pop
cmps
out
retf
cmp
inc
ss
inc
xchg
test
cmp
jae
cmp
sbb
fnstcw
sub
inc
out
out
mov
shl
mov
test
xchg
lods
adc
adc
inc
inc
mov
loop
mov
sub
add
mov
sbb
sub
bound
ds
inc
aad
repz
loop
mov
xchg
push
dec
leave
xlat
ror
idiv
cmp
cwde
or
sbb
(bad)
jne
scas
mov
rcl
and
retf
repz
cmp
push
jmp
xchg
scas
rcl
inc
mov
cwde
lock
aam
dec
retf
sub
adc
mov
hlt
test
mov
ins
push
pop
push
in
retf
sahf
cmps
std
mov
pusha
xor
mov
movs
push
psubd
push
or
push
cmp
outs
mov
(bad)
add
int
inc
dec
ret
rcl
xor
push
jle
popa
icebp
shl
shl
pop
arpl
xchg
popf
push
je
out
retf
retf
mov
mov
outs
sti
push
xchg
lea
enter
and
cdq
or
ds
out
sub
push
(bad)
stos
sbb
add
fild
test
push
sti
imul
jo
mov
and
dec
adc
mov
out
(bad)
adc
pushf
sbb
dec
cwde
pop
inc
fcomp
add
ss
enter
or
jecxz
cmps
mov
dec
stc
add
xchg
push
fs
dec
push
push
aad
lock
pop
lds
inc
sub
lods
data16
addr16
pop
fnstsw
(bad)
or
mov
fnsave
mov
aad
mov
leave
dec
jle
mov
hlt
mov
js
adc
and
xchg
jne
ror
test
xchg
mov
stc
sub
loopne
jno
call
dec
mov
inc
xchg
mov
xchg
call
lods
push
das
and
pop
dec
lds
popf
mov
in
les
and
arpl
(bad)
sar
neg
cmc
mov
pop
mov
push
daa
leave
pop
call
push
nop
hlt
or
and
ins
xor
add
mov
xchg
sahf
stos
jecxz
adc
or
mov
sahf
dec
sahf
push
scas
lahf
dec
loopne
xchg
cmp
jmp
ret
xchg
ja
push
adc
push
sub
or
(bad)
cdq
das
mov
push
fidiv
aaa
push
dec
sub
test
std
mov
sahf
mov
pop
dec
cdq
or
imul
mov
out
mov
xor
sub
lahf
rcr
ret
xchg
in
cdq
lds
test
xor
push
jmp
stc
scas
inc
sahf
mov
out
dec
push
dec
test
stos
dec
loope
or
or
ss
gs
ror
jbe
xchg
jmp
push
fwait
pop
fwait
in
in
push
icebp
jmp
sub
std
xchg
mov
(bad)
cmps
sbb
inc
adc
pop
popa
call
cwde
jnp
sbb
add
dec
hlt
ret
cmp
cmp
idiv
stc
sti
xor
clc
dec
sub
test
add
dec
shl
movs
lock
sbb
and
iret
les
jmp
jno
rcr
mov
mov
mov
jnp
xor
cmp
call
dec
test
lahf
outs
mov
sbb
sub
movs
cmp
mov
or
test
outs
push
lds
adc
adc
inc
mov
adc
aas
retf
fsub
test
xchg
cdq
xlat
scas
loop
outs
bound
vmwrite
test
addr16
fst
lea
enter
in
ret
push
xor
dec
mov
xchg
js
loopne
lea
sar
dec
pop
test
(bad)
cmc
pop
xlat
mov
fnstenv
aam
fild
mov
addr16
inc
sahf
xor
xor
cdq
sub
scas
or
inc
jecxz
xor
ret
in
mov
outs
test
and
cli
ret
in
adc
xchg
add
jmp
mov
mov
add
aas
cwde
or
xchg
aad
mov
mov
(bad)
mov
jne
xor
jmp
jg
fbstp
out
sub
fisub
pop
ins
ret
xor
adc
xchg
xchg
rcl
push
cmp
jl
push
in
push
xor
xor
cli
mov
add
inc
fwait
and
test
les
sbb
adc
mov
xlat
sub
repnz
bound
dec
cli
repnz
into
xor
mov
mov
cmc
pop
sub
mov
(bad)
test
or
lods
xor
sti
mov
inc
xor
cmp
jmp
inc
dec
jl
jmp
popf
xchg
inc
(bad)
fisubr
xchg
mov
test
jp
or
sbb
(bad)
arpl
arpl
test
ja
xchg
fisub
dec
and
mov
push
pushf
in
xchg
cmp
adc
pop
loopne
mov
push
xor
or
dec
adc
lods
mov
sbb
pop
repnz
idiv
xlat
out
inc
in
adc
test
fdiv
xchg
xchg
sbb
xor
sbb
xchg
cmp
clc
cmc
and
movs
arpl
ins
push
lock
out
cmp
mov
and
ds
fwait
out
test
cmp
dec
outs
adc
add
jecxz
cmp
stos
gs
push
xor
cmp
cmp
dec
push
xchg
inc
sub
rol
push
fsub
mov
(bad)
sbb
jmp
ret
leave
stos
es
or
test
cmp
pop
out
dec
inc
scas
push
fld
cmp
jmp
popf
imul
ret
imul
in
sbb
sbb
and
test
cmc
mov
(bad)
push
popf
pop
scas
(bad)
lock
arpl
(bad)
cmp
and
jne
xchg
test
xchg
out
cmps
pop
jnp
leave
sar
sar
cmps
fs
xchg
mov
mov
sub
mov
pop
cli
fldenv
dec
cmc
(bad)
jecxz
je
pop
into
stc
pop
push
add
xchg
ret
jecxz
cwde
inc
push
shl
pop
sbb
pop
jecxz
test
push
stc
js
stos
mov
mov
inc
jle
mov
push
push
push
fiadd
cmps
leave
lock
xlat
sub
jne
xor
mov
jns
xor
fwait
xor
cmp
ficom
ins
fnstenv
imul
push
inc
loop
(bad)
call
xchg
iret
mov
imul
movs
mov
js
dec
jne
(bad)
mov
mov
int
push
loope
pop
sahf
mov
push
jae
dec
sbb
inc
xor
fsub
test
mov
xadd
test
mov
test
xchg
ja
inc
mov
mov
dec
and
or
mov
inc
loopne
push
pop
ja
fstp
jmp
mov
inc
dec
loop
cmp
add
cmp
push
call
cli
data16
xchg
xchg
call
xchg
cmp
(bad)
fsubr
cmc
jae
lods
loope
and
gs
test
inc
mov
xlat
cs
xor
pop
inc
in
adc
cld
fdiv
stos
mov
add
stos
sbb
mov
loopne
sub
imul
loop
lahf
outs
or
mov
int3
pop
add
or
lea
into
out
cdq
jae
xchg
adc
pop
cs
mov
movs
mov
and
out
xor
popf
out
cmc
cwde
inc
and
jno
inc
add
mov
fs
xchg
or
imul
cmc
cmp
and
aad
ins
sbb
pop
and
xchg
ret
scas
push
dec
cmc
pop
sub
mov
movs
(bad)
fiadd
and
push
push
out
jne
sbb
or
fadd
inc
int
inc
pop
data16
scas
mov
lods
sub
adc
xchg
aas
mov
mov
setnp
js
cmp
jns
pop
(bad)
into
sub
das
pushf
fiadd
mov
lock
gs
push
mov
pop
jmp
lods
ret
pop
push
paddusw
sub
ins
mov
(bad)
mov
pop
fild
push
(bad)
out
xchg
out
dec
jle
push
push
popa
and
lea
mov
pop
lods
rol
ins
pusha
cmp
sbb
and
xchg
mov
je
cmp
fistp
jmp
push
and
imul
inc
mov
dec
xor
fbld
dec
mov
mov
xchg
ss
outs
stos
cmp
bound
out
jnp
jbe
sbb
mov
inc
fdivrp
inc
mov
cmp
sub
jecxz
mov
imul
aaa
pop
loope
js
jge
cmp
neg
xchg
pop
imul
stc
xchg
inc
sub
icebp
mov
dec
push
lock
outs
int
adc
out
ret
fist
pop
push
push
jp
test
pop
dec
add
in
dec
or
repz
retf
inc
lahf
add
jnp
int3
ret
popa
test
rol
ret
jo
pop
loop
cmp
mov
mov
xchg
or
movs
sbb
xchg
out
sub
adc
push
dec
jg
jecxz
sbb
in
mov
sahf
add
fimul
repz
fisttp
test
jmp
xchg
out
inc
mov
xchg
cli
addr16
cmp
jle
js
das
addr16
mov
nop
cwde
ss
pop
std
push
inc
fs
pop
test
sub
pop
inc
xor
sub
push
into
mov
jae
data16
jbe
and
xchg
adc
shl
je
mov
ja
inc
ret
aas
add
mov
gs
shl
push
mov
lds
jge
sbb
fchs
jne
mov
or
out
push
lds
sbb
idiv
ds
call
(bad)
iret
and
popa
jg
push
movs
dec
xchg
std
call
sbb
mov
into
add
test
enter
sub
fwait
in
sar
leave
(bad)
jne
jl
push
sbb
push
scas
gs
cld
jg
mov
jl
imul
inc
call
lea
pop
mov
sub
pop
xor
clc
les
adc
call
mov
mov
mov
test
jle
fld
jmp
add
cld
sub
sub
dec
test
sar
stos
out
jae
mov
ret
xchg
xchg
scas
xchg
imul
test
imul
(bad)
ror
inc
mov
mov
cmps
mov
les
rcl
add
xchg
ss
fs
mov
dec
test
js
test
jnp
movs
dec
push
enter
ret
mov
sub
rcr
fistp
xor
cmps
push
push
icebp
mov
push
or
inc
ficom
jmp
imul
and
icebp
sahf
je
mov
mov
mov
jmp
add
xchg
popa
stc
mul
and
fnsave
arpl
into
mov
in
retf
ret
imul
xor
adc
ret
stc
xchg
call
ins
inc
mov
push
in
int3
mov
test
das
add
aas
fidivr
push
repz
xchg
out
sbb
xor
push
or
jge
xor
out
add
xchg
test
lods
inc
shr
scas
fist
clc
addr16
rcr
jo
push
jle
ficomp
push
fidivr
bound
xchg
sti
pop
cmps
pushf
je
pop
cmp
or
jb
ss
mov
(bad)
out
rol
dec
push
scas
mov
mov
fstp
mov
das
jns
dec
ficom
shl
mov
enter
popf
dec
mov
push
imul
cmps
(bad)
loop
shr
retf
jne
jg
inc
ret
xlat
fdivr
xchg
mov
(bad)
sub
xor
in
jb
push
sub
pop
ins
xor
js
inc
mov
or
ret
fist
hlt
mov
popf
je
loopne
in
xor
cwde
inc
xchg
cmp
dec
hlt
or
cmp
ret
inc
push
sub
stc
fldenv
xchg
cmp
jecxz
retf
xchg
mov
jp
fnstsw
jecxz
sbb
icebp
std
out
mov
in
popf
sbb
add
jnp
in
mov
sbb
jns
pop
mov
dec
jp
inc
call
fwait
dec
mov
in
push
mov
popf
inc
push
jle
std
jns
arpl
jge
imul
out
push
test
add
mov
jbe
pop
xchg
cmp
inc
call
or
inc
call
lock
imul
cld
add
jo
inc
push
pop
ret
xchg
and
pop
push
sbb
call
test
retf
push
lock
sub
adc
jge
mov
repz
aam
inc
inc
std
mov
aad
xchg
stos
test
xor
jb
jge
clc
and
push
mov
add
stos
movs
add
sbb
mov
cmp
int3
push
loop
out
and
pushf
test
outs
mov
mov
sub
imul
(bad)
push
xchg
aam
add
pushf
jge
movs
fist
xor
push
out
sti
ins
cmps
mov
pop
in
jmp
not
call
mov
pop
xor
int3
ins
out
pop
sbb
push
pop
mov
fsubr
dec
xlat
push
jecxz
dec
jge
int3
mov
mov
ss
push
out
pop
test
xlat
(bad)
fisubr
mov
call
pop
jg
mov
mov
bswap
(bad)
aam
mov
push
mov
sub
xor
in
cmp
mov
mov
jge
push
fbstp
mov
push
je
test
imul
jnp
push
sbb
int3
push
adc
jno
xchg
fwait
fs
adc
ds
push
or
and
and
mov
lahf
imul
xchg
retf
in
xchg
dec
xchg
pop
je
cmps
arpl
xor
mov
outs
cmp
or
dec
xor
retf
sub
mov
mov
stos
popf
inc
pop
cwde
jmp
cwde
fmul
mov
out
iret
sbb
out
cmp
adc
call
call
sbb
call
jle
mov
mov
adc
shl
cmps
add
adc
jecxz
mov
pop
push
push
pop
mov
cmp
mov
xlat
and
test
lods
into
and
fsub
dec
scas
push
scas
retf
pushf
imul
es
call
lods
fwait
mov
lock
cmp
mov
mov
outs
(bad)
cld
out
test
or
pop
bound
imul
jno
sub
mov
js
leave
pop
gs
mov
mov
mov
(bad)
ins
pop
xlat
jge
xchg
jbe
(bad)
(bad)
cmp
lds
mov
xor
adc
cwde
std
pop
daa
pop
and
push
mov
cmp
(bad)
cld
test
jbe
fisttp
dec
lods
daa
jnp
adc
and
ret
inc
call
jae
mov
stos
fwait
iret
inc
xor
or
sub
aaa
gs
lahf
data16
add
iret
aaa
push
xor
pop
pusha
retf
and
mov
jecxz
mov
js
es
data16
ror
inc
push
and
inc
clc
fcomip
jmp
mov
jnp
cmps
jbe
(bad)
mov
(bad)
div
repnz
fst
stc
xchg
scas
mov
xlat
gs
add
and
mov
push
push
sbb
dec
in
xor
pop
jp
repz
hlt
mov
(bad)
jns
mov
cmp
and
inc
int3
mov
xchg
arpl
mov
inc
sub
fdivp
xchg
mov
js
pop
scas
jmp
repz
out
xor
xlat
mov
and
pop
or
ja
mov
push
cmp
jge
arpl
(bad)
and
push
dec
cli
mov
mov
mov
out
mov
mov
test
jecxz
inc
adc
dec
call
ret
movs
pusha
mov
add
lods
jo
cli
mov
inc
lea
nop
loopne
xchg
scas
das
add
dec
(bad)
xchg
data16
outs
inc
jnp
mov
rcl
cmp
clc
and
sahf
mulps
dec
addr16
fist
cmp
outs
and
fwait
pop
push
pop
test
mov
mov
ret
and
dec
call
outs
push
inc
ret
add
call
inc
xchg
aam
dec
hlt
lea
adc
fbld
lock
xchg
fwait
dec
js
push
xchg
imul
cmc
xlat
pop
daa
addr16
mov
ret
pop
test
adc
sahf
dec
cmp
shr
dec
xor
or
cmp
cmp
inc
inc
sub
mov
(bad)
sahf
icebp
xor
add
xchg
sbb
lods
mov
leave
sbb
lods
cmp
add
sub
js
scas
js
neg
bound
adc
mov
add
pop
fisub
sbb
mov
xchg
jl
test
loopne
adc
ins
fmul
icebp
call
mov
or
(bad)
and
mov
leave
and
(bad)
fnstcw
adc
cmp
in
push
jno
fst
and
aad
rcl
mov
or
ins
(bad)
pusha
pop
stos
shrd
xchg
ins
(bad)
sub
xchg
stos
mov
dec
clc
ds
repnz
cmp
cmp
mov
dec
or
addr16
pop
inc
pop
cmp
cmps
test
sub
mov
leave
test
cli
mov
and
dec
cwde
jl
xlat
(bad)
pop
pop
imul
aaa
mov
jecxz
ret
call
dec
ret
xchg
pop
pop
dec
sub
loope
sbb
jl
(bad)
cli
les
lods
repz
cs
lahf
pop
inc
jae
jb
add
mov
jb
inc
ror
cmp
ins
mov
add
les
dec
mov
fdivr
(bad)
jnp
rcl
lods
mov
sub
movs
jae
mov
jne
xlat
or
dec
addr16
pop
mov
xor
test
ss
push
mov
inc
retf
xchg
outs
out
int
movs
inc
xor
sub
data16
mov
mov
sbb
dec
cmp
sbb
enter
stc
scas
add
push
stc
dec
xchg
scas
cmps
mov
fist
neg
movs
jmp
mov
inc
or
fld
jmp
scas
aam
inc
push
(bad)
inc
retf
mov
jg
add
sub
test
add
mov
cmp
in
xor
gs
xor
adc
mov
cmp
adc
mov
sub
fidiv
push
mov
xor
jne
xchg
lahf
dec
call
jp
ret
mov
push
movs
cli
push
ds
mov
pop
ss
jae
adc
inc
mov
pop
cmp
(bad)
std
push
xchg
xchg
dec
popf
cmp
pop
mov
mov
cmp
inc
jne
xor
cli
or
xchg
jbe
jge
mov
ins
mov
adc
mov
mov
inc
sub
arpl
pop
adc
call
enter
adc
loop
sub
mov
mov
jecxz
push
xchg
jg
xchg
mov
out
ret
or
xchg
dec
push
push
or
hlt
ret
dec
jmp
clc
cmps
inc
call
fcom
jmp
outs
cmp
leave
(bad)
mov
inc
(bad)
int3
or
repnz
jns
test
xchg
jmp
adc
mov
add
lea
jnp
inc
scas
jno
dec
xor
adc
add
leave
dec
test
pop
sub
div
sub
push
es
fld
inc
jno
sub
xchg
repnz
cmp
and
in
xor
pop
shl
push
jmp
sub
outs
mov
mov
stos
pushf
lock
enter
push
push
mov
clc
sub
jl
sub
adc
dec
jb
sub
jmp
mov
mov
cmps
std
repz
mov
xor
xchg
in
fwait
out
xchg
and
lods
popa
movs
cmp
cmp
ins
dec
mov
mov
fs
dec
mov
enter
nop
cmp
jmp
pop
push
aad
test
(bad)
mov
mov
pushf
ds
sbb
xor
pop
push
inc
int
out
out
jo
jb
into
not
inc
popf
out
imul
sbb
es
sahf
das
dec
je
jmp
ss
push
sbb
mov
retfw
pop
push
into
fild
xchg
mov
leave
aas
add
in
mov
jno
(bad)
fld
xor
stos
out
xchg
mov
or
xchg
mov
pop
enter
add
pop
in
daa
mov
pop
pop
push
dec
int
cmp
push
test
mov
dec
outs
fldenv
inc
sbb
xor
mov
add
data16
push
and
add
dec
xor
xchg
xor
cmps
enter
xchg
jmp
fidiv
xchg
lds
push
push
shl
aad
or
mov
gs
adc
dec
lods
push
ror
ss
(bad)
stc
scas
fsub
xchg
cli
ins
adc
(bad)
fbstp
inc
rol
les
cmp
aaa
push
cmps
cdq
or
xchg
push
fisttp
pop
scas
jge
ins
es
cmc
cmc
je
cmp
sub
test
pop
xor
sbb
leave
fldenv
push
pop
cwde
in
and
cmp
repnz
dec
dec
xor
in
cmp
popf
push
shl
fwait
xchg
jnp
sub
sub
out
(bad)
mov
xor
pop
aaa
or
dec
mov
jecxz
sub
ins
ja
mov
call
jg
cmp
jp
ror
addr16
gs
mov
ret
popa
scas
mov
enter
in
jle
or
fmul
lahf
cmps
xchg
or
sbb
pop
add
ins
imul
mov
pop
jg
dec
jp
retf
jg
lds
mov
push
inc
pusha
cs
pop
arpl
hlt
add
mov
int
shl
stos
jbe
xchg
repnz
xchg
lea
and
(bad)
jae
gs
mov
jmp
cs
or
(bad)
mov
and
sbb
iret
inc
leave
das
retf
bound
mov
fsub
lock
push
xor
sbb
retf
cmc
pusha
jg
loop
mov
cmp
push
pushf
ins
mov
aad
aad
ss
add
retf
fdiv
xor
ficomp
(bad)
clc
push
je
fwait
add
add
fist
rcr
mov
ret
jbe
ror
retf
jge
xor
or
jle
jge
sti
sbb
(bad)
shr
popf
aas
out
(bad)
mov
test
xchg
lods
mov
fcomp
in
outs
cmp
mov
mov
jmp
dec
push
(bad)
push
xchg
cs
jbe
sbb
inc
xchg
sbb
lock
arpl
pop
dec
push
(bad)
mov
sar
jle
retf
int
mov
add
xchg
into
repz
inc
lds
jp
lods
inc
mov
retf
in
arpl
dec
xchg
mov
add
inc
frstor
jecxz
inc
inc
pusha
xchg
(bad)
ins
and
lock
pop
adc
mov
or
sub
mov
ds
bound
in
lds
lods
scas
call
lock
shl
out
iret
fsubr
ins
call
scas
std
ret
fidivr
dec
stos
xor
and
test
adc
add
or
sub
sub
pop
sub
outs
or
jmp
es
xor
add
push
pop
and
lea
sti
mov
sub
fistp
sbb
int3
into
scas
sub
dec
inc
test
mov
pop
xchg
imul
sahf
ins
cdq
out
push
mov
inc
cmp
push
int
push
xchg
(bad)
push
bound
out
xchg
add
cmps
push
icebp
and
xor
ret
push
shl
push
mov
xor
adc
mov
lahf
push
sbb
jmp
test
xor
push
gs
jle
push
mov
pop
ds
mov
int3
mov
xrelease
inc
repnz
xchg
push
out
je
and
fcomp
bound
outs
leave
jbe
push
ss
xchg
sub
push
lds
or
cmp
out
icebp
pop
and
dec
mov
pop
cmps
aam
jl
xchg
fistp
outs
push
push
ret
sbb
sub
sub
push
adc
push
mov
retf
xor
sub
add
push
sub
push
aam
jmp
jmp
bsf
stos
dec
xor
dec
les
xchg
adc
mov
mov
jae
lods
fist
sub
mov
cwde
loop
jp
cdq
imul
sbb
lods
in
(bad)
std
mov
mov
cmps
sub
jp
xor
xchg
xlat
pushf
xchg
jnp
inc
fwait
jmp
pop
mov
outs
stc
fimul
lods
jge
inc
scas
loopne
movs
xchg
add
mov
mov
mov
sub
dec
pop
jns
adc
cld
icebp
xor
repz
xlat
xchg
cmc
add
fdiv
lea
mov
mov
mov
pop
jns
mov
cmp
scas
repnz
jb
push
cmp
fist
outs
rcl
pop
xchg
jp
movs
sub
ds
jne
xchg
and
push
movs
sbb
fcomip
add
pop
pop
jns
imul
ins
jbe
push
fwait
sbb
push
jp
pop
sti
xor
jne
scas
push
push
sub
push
dec
mov
mov
and
stos
cmp
pop
addr16
cmps
in
xor
cmp
fdivr
add
aas
(bad)
sbb
into
movs
adc
les
sub
stos
adc
loope
adc
cmc
(bad)
push
sub
movs
mov
cmps
imul
mov
iret
or
loop
cmp
sbb
mov
jmp
scas
and
je
hlt
leave
retf
push
sbb
mov
adc
lds
xor
rcr
mov
xor
push
or
or
push
mov
mov
xor
fdivr
mov
pop
jb
pop
es
aam
sub
xor
add
dec
dec
xchg
mov
mov
ds
dec
icebp
cmps
cmp
inc
mov
fst
dec
push
fiadd
neg
cmp
or
outs
jmp
arpl
jns
test
ret
fmul
mov
ins
jae
and
or
pop
scas
imul
mov
lods
inc
jge
hlt
inc
aam
lahf
call
sbb
inc
repz
cmp
das
scas
mov
lods
jmp
cli
and
fdivr
mov
repz
sbb
lods
sub
xchg
pop
jl
into
in
(bad)
mov
mov
cmp
rcl
mov
ds
stos
push
jno
vandps
pop
shr
in
xchg
adc
fild
popa
call
xor
lea
fs
xor
fadd
add
dec
mov
sub
sti
shl
pop
push
mov
es
iret
pop
mov
xchg
jae
call
sub
sbb
test
stos
xchg
out
mov
test
pop
xchg
mov
dec
(bad)
mov
arpl
jb
and
hlt
outs
hlt
dec
sar
mov
sahf
pop
adc
out
cmp
test
mov
iret
leave
test
pop
(bad)
pusha
cmp
popf
movs
push
push
push
sbb
mov
sub
mov
push
jle
cmp
mov
jge
sbb
popf
std
in
arpl
mov
pop
push
adc
sub
sbb
add
cmps
sbb
xor
shr
pop
popa
scas
push
pop
jo
shl
inc
fsubr
and
in
aad
add
push
lods
rcl
pop
add
ss
dec
or
and
dec
ret
xchg
ss
loope
or
cmp
test
push
jns
xchg
pop
das
mov
sbb
ret
jecxz
inc
pusha
pop
add
xchg
std
adc
mov
jb
push
sub
out
xchg
xor
fcomp
inc
mov
pop
stc
and
fadd
sub
repz
mov
movs
cmp
ds
rcr
bound
popa
nop
fwait
cmps
movs
cmp
test
or
push
pop
and
hlt
jne
sub
ja
fisttp
imul
neg
stc
cmps
and
xor
inc
ror
sbb
mov
push
sbb
scas
arpl
out
div
cdq
outs
cmp
jne
jb
ja
mov
repnz
xor
retf
jp
pop
or
repnz
out
movs
mov
xchg
xchg
pop
adc
or
add
jmp
(bad)
mov
mov
sbb
xchg
or
test
fdivr
mov
loope
dec
loope
mov
sahf
popa
and
sub
xor
push
ret
sti
ds
sub
mov
sbb
ds
sbb
pop
cmp
lea
inc
leave
dec
dec
push
xor
pop
les
fisttp
push
cmp
out
mov
sti
xchg
movs
xchg
xor
sbb
xchg
repz
push
fwait
jg
ret
push
push
inc
fs
scas
push
mov
in
rcl
fidivr
add
sub
icebp
es
mov
xchg
jg
movs
jg
adc
dec
jne
xlat
cmp
pop
out
push
into
(bad)
out
enter
dec
setg
les
loope
and
jle
push
or
movs
jmp
lods
cmp
xchg
aad
and
mov
sub
call
imul
sub
sub
xlat
das
loopne
movs
jns
ds
and
mov
push
and
mov
pop
dec
sub
cmp
push
jbe
mov
jno
test
scas
in
cmps
jg
xor
jg
push
push
mov
pop
mov
mov
push
addr16
sbb
xchg
inc
in
push
out
pop
or
test
push
sub
iret
fsubr
jb
xchg
aaa
addr16
cmp
sbb
jle
inc
retf
mov
enter
cwde
mov
jmp
dec
jl
xchg
mov
outs
(bad)
xor
inc
ror
outs
dec
outs
out
and
and
lods
pop
loop
jle
jge
dec
arpl
add
mov
jl
pop
lahf
movs
and
sbb
aaa
sub
(bad)
and
inc
mov
cmps
jg
jmp
out
adc
mov
aaa
sub
iret
in
xor
mov
mov
sbb
ror
lahf
imul
mov
sbb
in
(bad)
in
add
bound
xor
xor
sub
pusha
sti
(bad)
fcom
push
stc
jmp
adc
jle
mov
and
and
sub
jle
push
add
lea
add
or
(bad)
lock
imul
mov
dec
push
fimul
mov
cmp
pop
(bad)
cmps
lock
inc
push
sub
call
or
or
push
xchg
jl
(bad)
lahf
test
out
mov
mov
iret
in
jl
xchg
popf
sbb
in
enter
cdq
inc
pop
inc
mov
cli
inc
and
mov
mov
dec
cdq
test
(bad)
into
retf
xor
pop
out
popa
and
ds
pop
inc
call
xor
xchg
cmp
dec
dec
(bad)
rol
icebp
xor
jle
scas
xor
scas
mov
push
pop
lock
sbb
in
(bad)
pop
jle
cld
dec
ins
lods
add
je
stos
lds
mov
mov
es
xchg
(bad)
cmc
add
mov
mov
mov
jp
xchg
shl
sub
lods
xchg
mov
inc
in
adc
ror
loope
xchg
add
xchg
mov
pop
js
sahf
mov
cdq
fisub
sbb
or
std
mov
push
cmp
in
jb
xchg
aaa
and
imul
test
movs
rol
test
(bad)
pusha
sub
outs
pushf
xor
in
push
jle
push
outs
push
ins
rol
cmps
mov
or
loope
sub
retf
sbb
(bad)
out
dec
repz
repz
mov
cdq
inc
movs
pusha
dec
add
xor
sbb
call
leave
test
pop
push
mov
not
fwait
mov
pushf
push
pop
lods
xor
cmp
sbb
push
addr16
adc
xchg
sub
cwde
pop
mov
shr
or
cmp
sar
gs
pusha
ja
mov
mov
inc
aaa
inc
pop
cmp
sbb
mov
and
lods
add
pop
mov
js
dec
sbb
fidivr
out
push
jbe
das
test
dec
out
ins
dec
enter
outs
pusha
(bad)
cmp
xlat
cld
inc
pmaxub
inc
stc
mov
dec
loopne
aaa
dec
out
inc
fst
mov
stos
mov
pusha
dec
mov
xor
js
xor
sbb
arpl
push
cmp
mov
push
pop
mov
stos
dec
aad
ins
or
add
add
ss
pop
cmp
arpl
pop
cli
inc
pop
push
sub
xor
mov
pop
neg
pop
xchg
(bad)
not
jae
popa
xchg
fbstp
jb
(bad)
cmp
inc
mov
sbb
jle
push
mov
arpl
out
into
hlt
leave
sbb
sti
push
jle
inc
inc
test
xor
mov
pushf
jo
nop
shr
sbb
push
test
fcmovnu
xchg
push
or
mov
xchg
pusha
inc
fiadd
f2xm1
in
nop
iret
and
(bad)
pop
ins
and
pslld
xchg
sti
mov
sahf
sbb
xchg
mov
jmp
xlat
cmp
push
loop
retf
pop
push
movs
push
and
jmp
xchg
shl
push
addr16
inc
(bad)
dec
adc
push
(bad)
and
dec
mov
rcl
(bad)
push
inc
xor
(bad)
popa
ret
and
sti
adc
lock
sar
stos
jne
stos
and
jecxz
stos
jb
fstp
sbb
fwait
sub
(bad)
mov
add
jge
mov
test
jge
int3
add
ins
push
and
and
inc
ss
pop
mov
add
mov
dec
cld
sub
sbb
sub
pop
mov
out
lds
pop
fild
xchg
jl
test
mov
xlat
xor
out
add
in
and
pop
retf
push
out
ret
arpl
dec
fist
mov
mov
call
leave
dec
ret
xor
push
sbb
pusha
test
xor
rcr
jb
push
or
pop
(bad)
inc
int
mov
outs
shr
xor
push
pop
mov
es
push
mov
sub
sbb
or
mov
addr16
icebp
outs
cmp
enter
imul
(bad)
jae
jbe
mov
jae
popf
clts
cmps
scas
fs
scas
inc
and
sbb
ds
mov
or
outs
movs
je
or
xor
out
movs
std
inc
add
mov
or
xchg
dec
jnp
xor
add
push
mov
rep
movs
fucompp
jecxz
out
ss
in
movs
adc
add
imul
nop
inc
fsubr
or
movs
push
les
dec
fwait
scas
pop
jmp
nop
shl
mov
jp
les
xor
mov
jmp
xchg
fwait
mov
(bad)
shl
pop
dec
aam
push
adc
mov
(bad)
fdivr
int3
pop
mov
jp
cmp
(bad)
loop
xor
test
adc
dec
push
or
into
sub
je
add
pop
(bad)
sbb
stos
movs
mov
dec
adc
mov
enter
sbb
lods
push
inc
outs
ja
ins
hlt
aad
cmc
mov
imul
movs
mov
add
mov
mov
sti
lahf
popf
sti
push
mov
sub
lds
xor
jmp
adc
jns
out
cli
jge
ja
mov
dec
sahf
inc
add
dec
hlt
test
mov
sub
loope
and
jp
inc
pop
sbb
(bad)
mov
inc
ja
jp
aas
pop
retf
and
jae
dec
fmul
and
xor
xor
pop
out
dec
cs
pop
inc
pop
inc
xchg
adc
int
arpl
loopne
mov
test
xchg
push
jbe
(bad)
(bad)
and
call
mov
mov
cmps
or
dec
stos
pop
stc
and
(bad)
and
xor
xlat
pop
jnp
push
jmp
mov
rol
dec
push
and
add
mov
mov
stos
sbb
retf
xchg
imul
aas
fucomip
outs
pop
add
inc
test
jbe
mov
and
aaa
ins
sbb
jmp
dec
mov
std
xchg
mov
leave
imul
pop
cmps
pop
repnz
fdivr
(bad)
xor
das
addr16
jmp
test
and
popf
jo
sahf
call
push
test
call
fst
ds
add
les
das
push
sub
jne
(bad)
inc
(bad)
xchg
pop
loop
xor
sti
test
inc
sub
scas
dec
mov
pusha
cmp
push
lahf
shl
dec
jmp
push
call
add
inc
pusha
scas
fisttp
pop
mov
in
(bad)
cmp
outs
jle
inc
mov
inc
adc
(bad)
pop
lock
xchg
adc
stos
iret
push
fbstp
add
mov
jae
movs
cli
dec
cmp
test
mov
out
xchg
in
jmp
xchg
lahf
pop
scas
pop
mov
retf
cmp
stos
add
sub
lods
push
pushf
sub
add
(bad)
pop
and
repz
call
out
or
aas
(bad)
jge
pushf
pop
imul
sti
icebp
or
push
fiadd
push
inc
(bad)
xor
mov
pop
mov
or
mov
pop
in
mov
adc
mov
lods
jnp
fadd
push
out
mov
sti
aas
jmp
js
xchg
jge
pop
fs
mov
jmp
out
xlat
jle
es
cmp
or
pop
jno
pop
lods
repnz
xlat
mov
xchg
(bad)
sar
ss
mov
jae
aad
push
int3
dec
fs
das
dec
add
aad
call
ins
jp
es
sub
push
loope
loop
sbb
jb
das
pop
push
ror
push
or
ja
xchg
call
leave
sbb
adc
pop
pop
std
dec
mov
push
lea
(bad)
dec
hlt
pop
in
sub
mov
add
cld
and
es
movs
ins
jp
sub
jbe
mov
dec
sbb
bound
push
jns
mov
rol
pushf
sti
sub
mov
inc
push
iret
sub
popa
aad
jnp
je
jmp
sub
mov
sub
icebp
(bad)
popa
je
and
loope
ret
push
dec
stos
pop
mov
popa
mov
fiadd
pusha
in
xchg
popa
adc
fstp
sbb
ficomp
mov
retf
fidivr
cmp
mov
or
xchg
jo
pop
clc
push
popf
loop
fst
jmp
sub
lock
mov
sbb
or
lahf
mov
std
or
loop
xchg
jl
imul
xor
fs
sub
jge
scas
mov
(bad)
retf
jmp
dec
jp
lods
mul
pop
mov
shl
test
dec
jae
ja
and
sar
in
sbb
add
push
sar
jno
jne
inc
adc
inc
push
gs
arpl
push
sbb
jle
fistp
aad
mov
jb
int
lea
addr16
sub
and
(bad)
push
mov
xlat
and
jno
jmp
je
push
pop
adc
mov
ja
push
cmps
stc
xchg
addr16
in
jo
loopne
cwde
out
into
sub
jne
mov
mov
xchg
test
cli
push
lds
bound
push
ds
ja
mov
jmp
retf
or
or
jae
jb
jne
shl
aas
sbb
ins
jmp
into
lea
in
xor
cld
mov
loop
sub
jbe
jecxz
test
(bad)
es
dec
pop
push
cmp
mov
pop
mov
fdiv
sub
mov
loopne
stc
mov
clc
adc
icebp
mov
push
mov
add
cdq
call
hlt
loope
xlat
ror
push
pop
or
mov
push
inc
pop
test
stos
mov
cmp
mov
mov
(bad)
pop
(bad)
call
xchg
jno
xor
nop
(bad)
leave
pop
cmps
jg
mov
add
lahf
cmp
cmp
or
pushf
je
loopne
mov
test
mov
xor
push
sub
push
sti
or
ror
cmp
jo
movs
shr
sub
adc
adc
mov
lods
xchg
jbe
popa
dec
test
in
adc
clc
lods
and
pop
xchg
xor
call
push
mov
je
add
xchg
dec
stos
adc
xor
(bad)
outs
loop
stos
sub
pusha
out
inc
jae
test
push
adc
inc
xor
pusha
ror
sub
dec
fldcw
and
ins
jb
or
ins
add
inc
and
mov
je
imul
dec
xor
cmp
mov
adc
in
repnz
xchg
jmp
sti
rcl
mov
dec
adc
cwde
ret
hlt
and
test
cmp
loopne
mov
enter
mov
xchg
jbe
push
ret
jmp
adc
inc
pusha
je
fild
xchg
(bad)
(bad)
std
mov
int
inc
jb
jle
outs
retf
call
dec
pop
mov
adc
rcl
les
ds
std
mov
test
xchg
repz
aas
cmp
push
rcr
aaa
adc
or
adc
add
ins
rol
mov
jno
xor
xchg
popa
add
inc
mov
adc
out
sti
xchg
data16
mov
es
int3
cmps
repnz
scas
pop
xor
sub
jg
loopne
je
push
jnp
leave
and
retf
mov
loope
enter
ror
jp
aas
xor
es
aaa
call
jmp
lea
outs
add
shr
cmps
adc
les
jp
sub
cwde
mov
enter
movs
xor
pop
mov
call
push
(bad)
ret
xchg
dec
iret
ja
sub
stos
push
sbb
out
jb
xchg
arpl
(bad)
xor
shl
push
adc
jbe
aam
xchg
imul
pop
adc
and
test
call
push
rcl
add
popf
not
mov
push
xor
xor
loopne
mov
outs
call
pop
pushf
xor
lods
fsub
stc
sub
cmp
or
push
(bad)
mov
inc
std
ins
aaa
pop
sub
push
sub
inc
movs
das
cwde
(bad)
rcr
loopne
jne
or
sbb
jno
icebp
sub
stos
sbb
adc
scas
fsub
shl
in
push
pop
cld
xchg
out
adc
out
ret
inc
cwde
in
outs
daa
mov
cmp
call
jns
dec
mov
fstp
out
add
(bad)
loopne
fnsave
ins
adc
xchg
daa
sbb
jge
repnz
push
sub
mov
jmp
mov
push
push
mov
cli
and
adc
push
mov
movs
sub
sub
aaa
outs
pop
jp
fdiv
xor
imul
pop
fiadd
mov
fistp
add
pop
ja
retf
add
js
aam
out
xchg
mov
xchg
pop
xchg
xchg
fsub
sbb
lds
pop
jb
leave
(bad)
cmp
cli
pusha
jmp
(bad)
ins
ins
sub
aaa
fdiv
mov
lea
mov
push
push
jno
sub
lods
dec
mov
add
pop
movs
fld
out
sbb
mov
std
ins
lods
stc
aaa
xor
cwde
adc
inc
popf
ret
xlat
pop
ins
pop
dec
dec
add
jmp
sbb
retf
and
jae
xor
push
leave
dec
adc
in
cdq
sbb
mov
pushf
push
ret
inc
inc
ins
rcl
in
mov
(bad)
push
ja
fs
jbe
or
or
retf
daa
push
dec
adc
mov
out
ja
scas
push
jno
loop
pop
xchg
mov
xchg
sahf
imul
lock
and
movs
fidivr
sahf
inc
mov
sub
movs
mov
mov
imul
retf
(bad)
sub
and
lods
mov
js
push
mov
fild
data16
cmp
jl
shl
ins
arpl
test
sub
inc
fdivr
mov
movs
imul
popa
mov
push
(bad)
shl
and
test
xchg
fimul
leave
cmps
xchg
and
in
mov
jno
xor
and
pusha
push
ja
fwait
xchg
sahf
rcl
jnp
mov
dec
push
and
pop
out
ins
xchg
mov
dec
inc
pop
dec
ja
aam
out
out
pop
cld
mov
xchg
jo
xchg
mov
mov
and
stc
mov
cs
push
cwde
xchg
pop
lods
scas
lock
xchg
lods
or
les
cmp
dec
iret
je
pop
stos
lahf
mov
and
push
dec
fimul
inc
(bad)
aas
cmp
ja
jns
clc
xchg
sti
push
test
mov
lods
mov
push
jge
push
push
popf
dec
sub
xchg
(bad)
jne
ins
push
sar
cmps
add
in
outs
dec
stc
dec
push
push
in
ficomp
sub
push
adc
pop
shl
imul
ins
repz
sbb
and
call
leave
mov
loopne
retf
loopne
ins
push
push
in
pop
fst
into
leave
mov
div
inc
aam
jbe
push
xor
pop
xchg
sbb
add
dec
mov
jae
dec
in
ret
and
sahf
outs
jae
outs
jp
not
push
ret
adc
mov
jg
retf
add
(bad)
pop
not
push
in
cdq
push
lods
in
xchg
jl
gs
mov
jb
adc
dec
shr
in
cmp
pop
xchg
mov
pop
mul
jmp
call
jno
jmp
cli
lea
adc
das
jle
out
loope
or
lods
imul
call
push
pop
jp
mov
xor
cmps
cwde
mov
in
pop
add
pop
xchg
inc
aas
call
loop
add
dec
cmc
shr
cmc
out
movs
cmp
mov
bound
push
into
test
dec
fcomp
outs
dec
int
and
aad
or
push
jmp
ror
repz
movs
rcr
xor
pop
and
cmps
or
out
mov
test
ja
mov
xchg
inc
jmp
out
or
test
cmps
cmp
add
std
(bad)
and
div
push
fisttp
ret
sbb
inc
dec
pop
jg
mov
dec
pop
je
xor
mov
out
ja
mov
pop
mov
in
dec
jmp
scas
sub
jge
cmp
js
dec
shl
adc
sahf
sbb
retf
adc
inc
pop
inc
sub
dec
retf
sbb
xor
loope
jecxz
xor
rol
mov
and
add
stos
xchg
push
or
adc
loope
(bad)
retf
mov
jle
out
xchg
fnstsw
test
xor
enter
add
lock
int
mov
fdivrp
les
call
mov
gs
les
sbb
add
daa
sbb
aam
push
and
cwde
jb
scas
icebp
pop
imul
jne
dec
int3
mov
xor
not
pop
dec
cmp
jae
bnd
push
dec
sbb
loop
std
in
pop
and
(bad)
and
push
pop
and
pop
(bad)
enter
addr16
jle
push
push
clc
jle
add
or
sbb
sbb
shr
xor
jae
push
aas
mov
not
and
aaa
inc
push
pop
repnz
add
sub
mov
jge
aam
dec
pop
adc
or
je
rol
add
js
push
std
and
daa
xor
sbb
call
call
or
mov
adc
lods
mov
fwait
es
push
adc
out
leave
add
(bad)
retf
jle
mov
mov
xor
stc
icebp
mov
dec
push
xor
in
dec
cmp
aas
loope
bound
or
push
dec
out
(bad)
sbb
mov
iret
or
mov
in
push
jl
mov
push
push
outs
or
mov
cwde
iret
loope
jmp
or
pop
stos
and
sbb
sbb
and
mov
or
idiv
jge
pop
scas
out
inc
add
pop
lahf
retf
or
stc
jo
nop
push
push
cdq
fisttp
enter
and
out
jle
add
adc
fiadd
(bad)
fsub
mov
pop
mov
jge
movs
xor
mov
test
in
stos
mov
retf
rcl
push
xchg
(bad)
mov
sbb
mov
add
loop
outs
pop
sar
and
cmp
push
out
scas
and
std
sub
lea
fnsave
sub
mov
inc
fist
stos
or
cmp
and
ja
cmps
jno
dec
jle
dec
cmp
inc
and
gs
push
mov
mov
inc
fwait
xchg
xor
inc
pop
sub
mov
mov
and
lods
mov
test
xlat
mul
clc
mov
jmp
clc
inc
bound
cmp
cmc
sbb
and
xchg
or
cmps
mov
in
ins
popa
jmp
sbb
and
push
int3
stc
gs
hlt
adc
ds
(bad)
stos
sti
inc
aas
inc
dec
mov
ins
pop
xor
imul
or
jmp
mov
jp
jno
lahf
mov
xchg
inc
pop
fisttp
clc
xchg
jle
ins
fdivr
call
into
popa
and
sbb
gs
and
cmp
mov
inc
mov
and
ret
fs
cs
mov
push
and
mov
adc
mov
gs
mov
call
(bad)
ja
pop
cmp
mov
stos
stos
or
mov
imul
lahf
dec
shr
adc
loop
dec
dec
movs
add
stos
dec
outs
jmp
or
(bad)
in
stos
push
mov
mov
clc
sub
fbstp
pop
and
ret
jae
(bad)
mov
cmp
xchg
jae
pop
mov
cmp
dec
sub
dec
mov
jle
pop
in
dec
fisttp
movs
mov
dec
mov
inc
xor
pop
jo
sar
rol
pop
mov
mov
pop
xor
add
adc
xor
or
popf
sbb
mov
cwde
mov
dec
dec
fsub
stos
xchg
push
stc
pop
fbstp
xor
and
scas
mov
cmc
lahf
xchg
inc
out
sub
adc
sub
stos
inc
call
shl
pushf
shl
repz
cmp
and
push
(bad)
shl
cmp
test
add
cmc
daa
push
cmps
add
nop
loopne
cld
push
pop
ja
mov
leave
xor
add
jo
cld
pop
or
cli
adc
or
mov
inc
inc
lods
cmps
dec
das
and
mov
pop
push
pop
mov
jae
jecxz
dec
jb
sub
mov
inc
stc
jg
push
(bad)
adc
popa
pop
cld
xor
dec
mov
sbb
xor
pop
adc
stos
and
inc
aad
clc
lock
div
and
aam
cld
jmp
pushf
je
rol
pop
into
stos
scas
pop
retf
pop
sar
loope
pop
in
arpl
stos
or
cwde
sar
lods
fwait
pop
lahf
mov
push
mov
bnd
jbe
sub
fsubr
and
mov
movs
cmp
add
jne
aam
pop
inc
jg
popf
add
xor
js
mov
in
and
out
add
mov
pop
jp
test
lahf
mov
into
adc
adc
(bad)
popf
out
push
pop
push
pusha
add
jns
sbb
jbe
js
sub
pop
mov
mov
and
sub
sub
xlat
fs
fdivr
pop
(bad)
dec
stos
cdq
lods
stos
das
xor
mov
cmp
xchg
inc
cmps
pop
push
loope
pop
inc
aas
push
bound
fbld
dec
mov
adc
not
mov
into
inc
cs
int
inc
inc
xchg
jnp
mov
add
retf
push
sti
scas
dec
int3
inc
iret
cld
xchg
sub
push
xor
fwait
js
and
adc
or
lock
lds
sbb
xor
loop
sbb
test
dec
iret
jmp
cld
pop
shl
push
pop
inc
lea
outs
push
xor
jns
ins
inc
movs
sub
aas
in
sbb
pop
push
pushf
pop
fbstp
adc
das
xor
xor
or
(bad)
jb
xor
xor
add
loopne
adc
std
ror
pushf
stc
lods
pop
cwde
inc
xchg
popa
ss
clc
daa
adc
inc
les
dec
(bad)
arpl
imul
test
les
push
test
jmp
int
mov
aaa
aaa
push
pop
loope
js
cmp
(bad)
clc
aas
cmp
scas
fcom
lahf
mov
add
popa
pop
cmp
sbb
jle
movs
or
test
cmps
cmp
or
sbb
and
shl
xchg
add
xchg
ds
jl
ss
retf
sbb
outs
cmc
sti
inc
sbb
pop
sbb
aaa
mov
(bad)
sub
imul
add
iret
and
adc
inc
xchg
dec
cli
cmps
mov
add
push
push
jl
mov
test
adc
cmps
pusha
aad
inc
sub
xchg
popa
fld
and
retf
imul
(bad)
aaa
mov
dec
or
cmp
out
adc
add
je
mov
sub
ds
pop
jle
loop
jae
xchg
ds
sub
inc
jno
push
jb
int
in
gs
lahf
sub
aad
(bad)
in
push
dec
add
mov
ret
push
lahf
test
inc
pop
jnp
inc
addr16
xchg
mov
cmp
sub
retf
sub
and
(bad)
or
cmp
push
sub
movs
cmp
outs
push
in
sub
jbe
adc
sub
push
fs
ss
pusha
push
shl
xor
adc
cli
xchg
(bad)
mov
cs
jnp
xor
mov
fistp
(bad)
sbb
fidiv
and
jmp
xchg
mov
inc
ror
ins
sbb
inc
mov
cmps
cli
cmp
out
int
and
jp
retf
fisubr
jmp
test
into
arpl
add
fcomi
or
pop
pop
sbb
les
loopne
aad
into
jge
icebp
adc
inc
xor
call
mov
inc
jg
pop
repnz
lahf
push
xchg
push
xchg
mov
gs
or
cld
lock
sub
mov
xchg
daa
lods
jl
out
inc
in
popa
fcmovb
in
addr16
lock
cmp
and
ror
jg
dec
mov
repz
adc
jmp
imul
dec
mov
xor
aas
xchg
pusha
push
mov
jmp
cmp
jmp
call
xchg
mov
mov
push
push
pop
sub
jbe
shl
inc
loop
cli
gs
adc
pop
mov
in
inc
es
enter
sub
pop
jne
pop
jae
xor
cmp
xor
jb
es
fld
les
mov
loopne
js
mov
sub
cmp
mov
sbb
scas
pop
popa
retf
xchg
cmc
ficomp
xchg
dec
xchg
mov
push
imul
xchg
xlat
jmp
add
out
mov
aas
jp
cmp
mov
cmp
xchg
call
int3
(bad)
mov
(bad)
mov
pusha
(bad)
pusha
and
(bad)
mov
ins
(bad)
out
jle
jbe
ret
cmp
and
jae
push
aaa
push
loop
gs
jg
or
shr
push
pop
es
lods
je
mov
jp
test
mov
div
pop
dec
pop
sbb
or
outs
push
cmps
fwait
cs
push
cs
or
mov
lods
push
xchg
es
outs
cwde
jne
(bad)
xlat
outs
retf
fistp
add
xchg
fcomip
mov
push
inc
xor
pop
mov
ror
inc
fsub
pop
les
clc
movs
mov
jo
into
movs
stos
fsubrp
xchg
les
data16
test
adc
outs
xchg
xchg
mov
pop
inc
cmp
mov
int3
jmp
fucomip
push
addr16
sbb
call
add
cmp
sub
ins
in
(bad)
xchg
bound
mov
xor
xchg
add
stos
ja
xlat
sbb
or
xor
jnp
fadd
imul
aam
sahf
out
sbb
xor
xchg
rol
cs
and
or
ret
xor
sub
sbb
push
fwait
add
clc
fcomp
dec
jle
rcl
jge
mov
enter
nop
pusha
in
inc
call
mov
inc
mov
mov
add
lahf
popf
dec
es
sub
jl
push
mov
adc
fcomp
xchg
enter
mov
ror
sahf
jmp
test
repz
add
sub
call
mov
push
jmp
adc
jmp
mov
sub
jge
pusha
or
adc
add
retf
retf
call
mov
mov
imul
fiadd
inc
xor
push
lods
mov
ins
pop
xchg
ror
or
ja
inc
rcl
xchg
xchg
mov
es
or
dec
icebp
pop
stos
jge
or
sbb
fdivr
jge
mov
add
jae
mov
call
fbstp
(bad)
and
jnp
jbe
pop
mov
pusha
cmp
pop
pop
push
mov
and
xlat
test
dec
fisttp
sar
adc
fwait
xor
xchg
or
dec
inc
mov
mov
push
mov
js
sub
jae
cmp
jle
jns
into
jg
repnz
add
cmp
je
cmp
jnp
or
lods
xchg
inc
icebp
mov
cld
sbb
out
fmulp
adc
xor
popa
sar
push
icebp
je
jne
add
dec
fidiv
icebp
in
push
(bad)
jae
ja
pop
mov
push
mov
int
fs
mov
mov
hlt
in
daa
sub
popf
and
iret
mov
lock
push
sahf
cmp
iret
xor
je
cmp
(bad)
fs
sub
push
pop
movs
jnp
leave
and
and
and
pop
add
cmp
sbb
pusha
test
shl
mov
lea
push
sar
pop
jle
loop
mov
push
mov
ror
inc
and
scas
loope
ins
xchg
inc
ret
clc
dec
and
xchg
pusha
jb
xchg
adc
sahf
jg
(bad)
cmp
cmc
ror
cmp
push
pop
xor
jno
jp
push
sbb
sbb
pusha
int3
adc
movs
sti
add
je
jecxz
sahf
rol
and
lods
cmp
mov
test
rol
jmp
outs
mov
addr16
sub
add
pop
add
addr16
hlt
das
out
in
sbb
inc
pop
push
bound
dec
push
call
mov
sub
mov
fs
loop
and
fisub
cmps
mov
jo
mov
std
ret
or
cmps
addr16
jae
pop
in
xchg
mov
pop
or
push
or
inc
push
dec
push
imul
add
fbstp
pushf
clc
inc
(bad)
fdivrp
or
pop
mov
mov
popa
mov
mov
mov
cmp
(bad)
popa
cs
lahf
pop
sbb
ret
inc
and
dec
add
jp
arpl
mov
dec
xchg
pop
lock
jo
popa
push
mov
inc
or
lahf
cwde
dec
sub
aam
adc
mov
adc
sub
clc
rol
cs
rol
inc
(bad)
and
and
jne
mov
mov
ret
cmp
fisub
ss
or
fisttp
jae
mov
and
cmp
jle
sbb
in
mov
push
and
sbb
add
das
cmp
out
retf
push
jge
mov
push
arpl
mov
mov
xlat
push
inc
js
adc
ins
sti
or
retfw
mov
add
adc
out
push
and
repz
clc
sub
pop
fidivr
push
das
jmp
jecxz
and
jg
lock
jae
call
stos
mov
ss
cmp
cmp
ins
jmp
pusha
outs
sub
mov
cdq
jge
aad
mov
xor
fst
in
cld
rcl
sahf
cmp
div
pop
sub
sub
push
jmp
popa
xlat
fidivr
cmp
(bad)
sub
call
xchg
or
xchg
pop
test
lds
lahf
jmp
clc
imul
push
mul
loopne
jle
mov
mov
js
aas
lock
in
pop
cli
out
or
mov
je
jecxz
jmp
mov
adc
mov
fcom
lds
push
mov
ins
inc
cmp
retf
rol
add
sahf
rol
sbb
xchg
xchg
(bad)
fnstenv
retf
jp
inc
gs
aam
ror
mov
sub
cli
test
sbb
mov
ins
lods
popf
xor
or
call
sub
jmp
nop
xchg
mov
lahf
stc
sbb
push
xor
leave
mov
or
xchg
je
xor
dec
paddw
ret
dec
(bad)
ds
cld
xor
jecxz
imul
hlt
not
pop
(bad)
loop
inc
jno
mov
mov
test
fst
or
in
lods
or
inc
pop
cmp
push
mov
push
(bad)
(bad)
pushf
mov
mov
xor
in
push
inc
cmp
scas
int
test
lods
or
xchg
inc
dec
cmc
pop
and
pop
idiv
mov
push
cmp
pop
and
pop
pop
sub
rcl
retf
jne
movs
jnp
std
stos
cld
jno
add
sahf
inc
scas
outs
leave
loope
push
int3
sahf
xchg
add
inc
rcl
sub
stos
xor
add
mov
xor
mov
popf
lods
(bad)
jmp
xor
mov
pop
mov
mov
xlat
imul
adc
imul
je
es
loopne
repz
push
pop
mov
stc
mov
xchg
xor
xchg
inc
xchg
das
jns
popa
push
fild
call
inc
shl
pop
cmp
push
push
into
popa
aam
popa
xchg
cli
mov
cmp
push
fwait
inc
pop
adc
movs
ja
sub
test
ror
ficomp
(bad)
cdq
push
jo
cmp
outs
in
inc
shr
or
fisttp
rol
dec
out
sbb
mov
js
mov
mov
mov
mov
adc
gs
xlat
mov
aam
sbb
rcr
mov
jmp
push
pop
aam
and
and
imul
pusha
lea
shl
adc
test
push
in
sbb
jmp
lds
mov
sub
(bad)
lock
inc
sub
stc
into
mov
not
push
jae
test
sub
out
pop
ror
inc
ins
mov
scas
in
xchg
lea
loop
shl
push
pop
pop
ret
cli
fidivr
pushf
retf
push
mov
gs
lock
add
and
pop
and
mov
data16
mov
jmp
test
stos
mov
sub
call
fst
test
sbb
push
inc
push
lods
and
dec
push
mov
push
mul
mov
push
mov
dec
push
lea
push
xor
sub
test
xor
inc
push
loop
mov
xchg
sub
cmovnp
(bad)
fsub
(bad)
cmovns
out
add
sti
aas
cmp
mov
in
mov
adc
dec
stos
inc
test
xchg
inc
test
test
sub
push
mov
stos
xchg
aad
leave
xchg
xchg
retf
inc
sbb
pop
or
fiadd
xor
loope
mul
out
xchg
neg
xchg
test
popf
and
inc
cmp
mov
jl
jmp
mov
in
jns
shr
outs
popf
push
jns
clc
mov
ja
mov
inc
cmc
and
je
sub
xor
arpl
pop
sub
lock
mov
or
mov
sub
xchg
mov
fcom
stos
adc
(bad)
pusha
and
test
pop
add
and
(bad)
dec
rcr
cmp
sahf
jge
jne
lods
or
mov
inc
mov
daa
call
and
xor
mov
das
mov
cli
scas
add
adc
rcr
lods
pop
inc
fisttp
lods
movs
xor
pusha
fmulp
in
outs
and
jl
mov
pop
mov
scas
fsubr
mov
pop
cwde
test
rcl
and
fdiv
pop
xor
ds
and
and
nop
adc
lods
enter
dec
jmp
rcr
fbstp
or
rol
xchg
mov
js
pop
jecxz
je
rcr
enter
adc
mov
mov
loop
dec
pop
movs
lods
inc
xor
mov
enter
mov
fnstsw
xchg
cmp
(bad)
and
test
pop
(bad)
daa
xor
scas
push
ret
sub
stos
test
mov
scas
ds
cs
(bad)
not
lods
mov
test
mov
rcr
lahf
fisttp
mov
xchg
sub
add
das
test
aam
sub
frstor
sbb
cmp
inc
sbb
aas
stos
mov
xor
sbb
inc
(bad)
jb
rcl
xor
xor
fdivr
inc
and
outs
lahf
push
mov
dec
(bad)
(bad)
adc
mov
or
fs
in
push
(bad)
add
das
cmps
test
or
out
call
dec
and
and
adc
pop
xchg
push
test
jo
pop
ins
leave
data16
scas
jle
xor
popf
add
add
dec
adc
aam
cmp
xchg
test
cmp
cmps
inc
jnp
jl
loopne
push
outs
push
movs
loop
icebp
sbb
fxch
leave
dec
push
add
jns
and
aad
jb
retf
adc
adc
pop
jecxz
add
xor
in
cmp
arpl
mov
test
pusha
inc
js
dec
sbb
pop
mov
loop
jae
idiv
and
les
out
std
fsubr
adc
xchg
mov
jbe
inc
cmp
daa
movs
loope
(bad)
adc
mov
sbb
jne
jns
pop
stos
(bad)
pop
sbb
mov
fnstenvw
sub
xor
and
sub
test
fnsave
inc
repnz
data16
push
xchg
or
ds
mov
push
iret
int
add
fdivr
daa
scas
clc
frstor
push
jl
popf
gs
fist
inc
mov
out
movs
sub
test
cmp
ficom
push
pop
add
dec
adc
mov
mov
jmp
out
jge
cmps
push
mov
lock
add
jmp
lock
push
pop
pusha
inc
cmp
or
in
push
aam
pop
mov
sbb
adc
sbb
add
mov
test
call
aaa
sahf
pop
xchg
mov
adc
push
sbb
repnz
xor
es
jl
movs
pop
mov
and
cmp
mov
mov
pop
shl
ds
push
iret
pop
movs
stos
mov
pusha
sub
bnd
and
xor
arpl
imul
lock
cmp
sahf
enter
mov
mov
js
sbb
dec
jae
(bad)
movs
mov
fnstcw
cmp
gs
push
add
and
pop
push
xor
sbb
cmp
push
je
fisub
leave
jmp
aas
jp
jmp
sbb
out
test
(bad)
xor
loope
mov
retf
ins
ins
pop
imul
shl
mov
retf
outs
daa
scas
push
mov
outs
jns
mov
rol
xchg
fst
push
mov
mov
and
movs
(bad)
push
ret
mov
(bad)
and
pop
push
fbld
fcom
mov
fadd
pop
cld
mov
fcomi
aam
xor
xor
xchg
mov
cli
pop
jecxz
adc
(bad)
int
and
jns
push
pop
mov
fstp
out
daa
mov
add
cmp
inc
pop
fs
idiv
aad
ror
push
(bad)
xor
jne
sbb
scas
and
pop
pop
sub
sub
push
dec
add
std
sahf
pop
js
call
mov
lock
add
dec
arpl
outs
xchg
mov
bound
aaa
adc
and
jle
mov
jp
push
sti
inc
inc
stc
rol
mov
gs
daa
cmp
or
mov
aad
(bad)
cmp
out
jno
pop
(bad)
out
inc
(bad)
outs
sbb
mov
test
jl
mov
pop
or
pop
shl
aas
dec
icebp
pop
into
out
xchg
dec
jl
enter
shl
stc
or
lods
pop
cmp
outs
out
mov
add
lds
mov
jno
ds
ret
cld
fwait
jmp
sbb
push
(bad)
xchg
mov
pop
bound
les
add
inc
and
out
fdivr
add
test
sti
cmps
xor
mov
into
jbe
mov
rdtsc
popa
in
dec
xor
inc
pushf
inc
das
ins
cwde
mov
cmp
in
mov
mov
pop
scas
xchg
gs
jo
add
cmp
js
cmp
cld
(bad)
mov
adc
or
shr
into
loope
pop
mov
push
add
inc
inc
(bad)
shl
jmp
sub
dec
jmp
ret
or
mov
jmp
out
jge
js
dec
sar
push
jg
sub
dec
outs
cmps
add
loope
inc
mov
and
mov
hlt
clc
pop
fist
repnz
xchg
test
push
pop
dec
sbb
jae
mov
cmps
mov
pop
jno
into
adc
lea
pop
and
push
or
bound
add
scas
fimul
add
loope
imul
jo
jbe
and
fwait
call
or
xor
jmp
int3
push
jg
dec
call
push
pop
push
mov
fidiv
jp
sub
dec
cmc
sub
ret
movs
or
xor
clc
test
mov
dec
inc
or
es
push
dec
jae
sbb
cmps
fldenv
imul
jbe
adc
or
test
jmp
mov
or
mov
xor
cs
inc
inc
data16
(bad)
mov
mov
mov
inc
bound
mov
sub
jg
jmp
mov
pop
dec
jbe
and
mov
popa
pop
(bad)
popf
and
pop
call
mov
cmp
sahf
ret
call
push
lea
pop
icebp
dec
ins
add
xchg
fmul
dec
addr16
scas
sub
push
outs
mov
mov
cdq
arpl
cli
pop
inc
dec
jecxz
les
pop
and
jmp
test
sbb
add
cmps
push
ja
ins
jne
or
mov
cwde
fwait
loopne
jo
repz
repz
xchg
js
mov
add
xor
call
add
out
fld
popa
xlat
(bad)
cwde
imul
aam
lods
imul
and
push
pop
cld
xchg
push
or
fidiv
dec
fidiv
(bad)
ins
jle
mov
mov
ret
xor
leave
pop
and
fstp
push
test
iret
adc
mov
arpl
pop
cmp
cmp
jmp
aam
hlt
out
mov
push
test
ins
call
stos
and
out
mov
daa
jmp
sbb
and
push
mov
add
cmp
iret
movs
mov
cld
mov
arpl
mov
lods
jnp
pop
dec
push
imul
fisttp
sub
and
sub
adc
jae
lods
mov
xchg
aaa
ins
mov
(bad)
sub
jo
sub
jmp
push
cmps
sbb
sbb
loop
mov
sub
aad
sub
dec
div
lods
lea
jle
and
add
dec
ret
mov
loopne
fdiv
xor
or
sub
out
ds
test
jl
sub
out
ins
xchg
ret
scas
(bad)
push
icebp
inc
mov
push
push
inc
lahf
jo
or
popf
jg
frstor
ret
adc
xchg
mov
fs
pop
push
fdiv
xor
stos
int3
or
popa
jno
mov
scas
pushf
mov
cmp
fimul
inc
mov
pop
fild
call
inc
pop
cmp
movs
dec
mov
cmp
dec
inc
dec
and
mov
push
or
adc
int
cld
mov
jno
popa
imul
ret
pop
mul
xor
pop
jb
push
inc
add
push
pop
mov
inc
sbb
jne
push
not
or
cmp
jg
adc
mov
sbb
(bad)
or
lahf
pop
xor
repnz
ins
shl
retf
ins
or
add
add
(bad)
sub
outs
outs
in
xchg
in
xor
add
mov
aam
mov
xchg
jne
and
add
push
lds
add
call
push
pop
pop
inc
popf
ins
or
sbb
test
(bad)
and
daa
sahf
retf
stc
mov
sub
sbb
ficomp
pop
xlat
inc
into
jp
dec
push
jl
dec
pop
mov
push
sub
mov
or
ss
push
(bad)
cld
add
jecxz
loopne
int
jne
mov
stos
lods
in
imul
inc
dec
out
mov
test
mov
repnz
inc
aas
movs
sub
push
push
cmc
gs
dec
(bad)
aad
or
test
mov
ins
les
dec
push
icebp
dec
leave
outs
test
es
ins
jp
into
push
sub
das
push
aam
popa
lahf
ins
(bad)
or
inc
mov
rol
xchg
inc
test
movs
push
daa
mov
cmp
add
cdq
aad
xchg
daa
jo
rcl
dec
scas
mov
sbb
retf
cwde
xor
repz
imul
sbb
push
xor
aas
xchg
fcom
int
sti
ins
add
into
test
clc
into
or
mov
adc
cmps
pop
cmp
pop
xor
mov
push
pop
push
push
jmp
lods
test
pop
mov
cmp
cmps
sahf
xor
lea
xor
in
or
es
sub
or
push
push
push
ror
mov
jae
pusha
adc
sbb
hlt
cmp
adc
adc
lahf
in
iret
xor
loopne
sub
sub
outs
rcl
in
js
add
mov
(bad)
out
mov
leave
aad
mov
lahf
nop
jl
jb
add
fisttp
outs
push
jge
add
nop
cmps
lds
sti
mov
and
mov
inc
(bad)
cmp
gs
xor
nop
pusha
fsub
loopne
out
stos
jle
and
bound
inc
out
call
call
and
mov
sub
xor
mov
mov
sub
cmp
pop
test
clc
loope
mov
xchg
test
out
xchg
sub
hlt
jb
outs
mov
inc
shr
mov
pop
mov
pop
jg
scas
cmc
pop
dec
dec
in
push
cdq
pop
mov
add
(bad)
clc
jp
call
jns
out
in
mov
inc
(bad)
hlt
dec
xchg
xchg
jecxz
gs
push
ret
or
mov
push
sub
and
cmps
or
je
and
out
test
sar
fadd
cmps
cmp
call
in
mov
sbb
mov
ins
mov
xchg
adc
xor
js
daa
leave
jmp
mov
js
mov
mov
pop
xchg
(bad)
xlat
call
fsub
lds
sahf
sub
xor
sbb
lea
lea
pop
pop
push
sar
pop
adc
adc
fcomp
or
repnz
pop
out
scas
adc
loopne
cmc
xor
pop
in
dec
ret
mov
or
push
pop
clc
(bad)
xor
push
push
mov
adc
scas
jne
sbb
div
iret
mov
xor
push
scas
sub
aam
jae
mov
push
or
stc
aam
sub
push
clc
inc
jns
mov
jns
sbb
in
inc
sbb
dec
shl
test
jb
ror
mov
cs
sbb
jne
in
mov
push
push
ja
hlt
in
ss
fisub
add
lods
mov
sub
xchg
adc
repz
add
xor
mov
call
push
je
ss
jmp
stos
push
jno
push
bound
ffreep
mov
stc
cmps
aaa
sbb
cmc
iret
xor
loopne
xor
mov
xor
adc
dec
push
pop
cmps
inc
adc
sub
cmp
(bad)
in
out
pop
aam
jle
loope
popa
pop
cmp
fcom
in
ret
js
cwde
mov
js
ret
jmp
cld
mov
push
sub
call
xchg
add
out
fcomp
not
and
(bad)
mov
cs
sub
jne
ins
mov
rol
pcmpgtb
xchg
xor
aaa
push
aam
adc
inc
lods
mov
ror
pushf
push
pop
mov
mov
repz
lods
jo
fnsave
mov
push
and
rol
fwait
adc
mov
shr
adc
aaa
iret
scas
cli
retf
dec
cmp
mov
mov
xor
and
pop
(bad)
adc
outs
rdpmc
call
mov
push
pusha
sti
adc
inc
jnp
in
pop
sbb
lahf
mov
push
lods
rol
hlt
hlt
shr
jl
jp
push
lahf
cmp
rcr
mov
fld
loop
xchg
cmp
xor
out
mov
pop
inc
push
aad
or
and
fld
pop
mov
jge
inc
inc
rcr
rcr
in
adc
jge
iret
adc
fcmovnu
dec
add
push
(bad)
cmp
jo
jnp
rcl
dec
push
das
push
dec
push
mov
sbb
mov
pop
into
pushf
pop
mov
pop
lods
pop
in
dec
pusha
sbb
daa
stos
popa
adc
xlat
jae
movs
push
xor
inc
cmp
int
(bad)
jg
dec
cmp
adc
mov
push
lods
mov
xor
push
pop
xchg
jp
ja
cmp
stos
mov
fcom
jns
xor
dec
in
fidivr
mov
sbb
inc
or
cld
(bad)
mov
call
jmp
ror
push
scas
or
ins
std
add
jge
cmps
jns
pop
sbb
cmp
aad
sub
mov
cmp
inc
cmp
jg
sti
jne
mov
mov
sti
or
loopne
mov
jb
shr
int
imul
shr
ins
in
adc
push
les
xor
lahf
scas
out
and
out
popf
aam
ss
mov
and
dec
push
jl
mov
cs
mov
fiadd
(bad)
pop
and
xor
sub
xor
inc
and
inc
aaa
push
push
out
sbb
mov
cmp
jmp
shl
popf
rol
or
mov
adc
cs
dec
sbb
fstp
(bad)
repz
jmp
jg
fisub
inc
add
mov
inc
ds
jae
or
js
aas
ret
push
stc
sbb
inc
push
ret
(bad)
cmps
shr
aam
xlat
dec
mov
adc
xchg
adc
add
shl
idiv
mov
pop
sar
repz
mov
jo
jmp
(bad)
xlat
or
and
or
aaa
addr16
pop
add
fcomp
and
in
xor
xor
sub
cmc
xchg
pop
xor
fisttp
jnp
adc
pop
inc
dec
ss
pop
and
xor
xlat
iret
add
inc
(bad)
fsubr
xor
std
js
mov
and
jb
repnz
dec
js
(bad)
jmp
hlt
mov
sbb
fnstenv
stos
aam
nop
inc
push
sbb
cmp
sub
fwait
sbb
xor
jmp
test
mov
sbb
pop
movs
sbb
stos
and
and
ret
xor
out
cmp
mov
xor
fwait
cmps
clc
cdq
or
sub
movs
jle
(bad)
sar
push
pop
push
cmp
cld
mov
movs
mov
sti
sub
data16
jbe
fnstcw
dec
dec
push
push
test
jne
mov
fiadd
mov
lea
xchg
je
jne
sti
jecxz
stos
popf
repnz
sti
push
cmps
call
(bad)
pop
call
jo
xchg
popf
jne
dec
dec
cmp
jle
daa
sti
or
mov
sub
push
(bad)
ret
cmp
test
xor
and
shl
inc
inc
stos
dec
daa
ss
ficomp
push
jle
stos
inc
loope
adc
push
addr16
ds
sti
jle
sbb
leave
or
inc
xor
and
aaa
add
xchg
jge
or
fst
arpl
xchg
gs
lea
leave
sti
push
add
pop
jns
call
adc
inc
sub
jmp
or
int
push
xchg
jo
jle
ss
sbb
sti
jmp
cmp
mov
mov
adc
addr16
imul
ds
mov
sahf
jmp
aaa
(bad)
mov
(bad)
lahf
int3
fmul
loop
shl
or
mov
mov
dec
ret
inc
sahf
mov
adc
jmp
xchg
fldenv
test
or
out
jmp
mov
shl
mov
sbb
test
jbe
retf
pop
jmp
cmp
jbe
adc
mov
add
mov
cmp
mov
xor
iret
or
push
sub
mov
nop
add
scas
add
in
lods
xlat
arpl
sti
pop
cmc
adc
add
inc
mov
fdivr
aam
cmc
sar
push
lock
or
repz
popf
fnstcw
fcom
popf
adc
imul
xchg
sub
jmp
outs
inc
repz
mov
cmp
jae
sub
loope
test
(bad)
dec
jge
(bad)
daa
dec
sbb
clc
loope
mov
xchg
ins
cmp
mov
inc
add
sub
int
loope
sahf
int
mov
sahf
sub
rol
aaa
jb
dec
xor
cwde
fucomip
fcomp
jae
ret
jbe
cmps
xor
xchg
iret
mov
cmps
cmp
or
aam
mov
add
call
daa
jno
idiv
xor
imul
not
push
pop
iret
lods
outs
push
sahf
cld
sub
mov
out
sar
and
mov
jmp
sub
jne
xor
and
jmp
adc
jae
in
movs
inc
(bad)
dec
sbb
sub
xor
adc
and
xchg
mov
adc
scas
into
xchg
pop
repnz
shl
clc
loop
and
div
xor
dec
outs
retf
(bad)
sub
dec
push
sbb
sbb
daa
(bad)
sbb
mov
inc
inc
xchg
fsub
add
mov
pop
cmp
xlat
xchg
ss
verr
mov
pop
push
jns
xor
je
mov
(bad)
in
push
call
add
push
jae
ds
sub
jmp
shl
add
push
in
test
stc
push
jno
cmp
jl
fst
stos
popf
cwde
xor
mov
mov
or
iret
push
iret
jb
out
(bad)
popa
or
pop
and
xor
nop
mov
scas
adc
hlt
shr
test
xor
iret
mov
sbb
cmp
mov
outs
(bad)
xor
popf
fcmovne
add
or
mov
dec
mov
mov
mov
inc
xchg
xlat
out
pushf
push
xchg
mov
mov
xor
push
mov
pop
movs
in
sbb
adc
push
imul
shl
scas
outs
cld
or
xor
rcr
adc
das
and
xchg
pusha
cmp
rcl
arpl
xchg
mov
xor
jbe
push
idiv
cmps
arpl
mov
stos
leave
cmps
add
jge
ror
int
jge
fldenv
dec
sub
mov
lahf
out
ins
and
sub
sub
mov
mov
rcl
je
dec
pop
(bad)
clc
jmp
sti
movs
cmp
daa
retf
dec
push
pop
repz
scas
js
cmp
ds
shr
fidivr
mov
aad
push
pop
mov
rcl
dec
sub
pop
popa
push
retf
clc
push
jl
loopne
clc
fnsave
lahf
xlat
popa
stos
inc
xchg
push
cmp
rcr
repz
lods
pop
lahf
push
or
or
xchg
btc
push
test
pop
cmp
sub
mov
sbb
fnsave
ficom
jno
xchg
repnz
jl
clc
cmps
fnsave
mov
sti
mov
popa
jmp
sub
cli
or
int3
xchg
cld
fs
add
pop
sbb
(bad)
and
fwait
sub
in
cmc
jg
mov
add
out
lods
mov
mov
xor
outs
imul
vpshufd
arpl
xchg
or
dec
je
xor
lods
push
loop
adc
jb
push
push
cmp
cmp
cmps
xchg
fcom
movaps
inc
data16
aas
fcom
mov
inc
push
mov
pop
es
stos
lds
iret
in
sub
lahf
push
aas
rcr
es
scas
lea
mov
js
jg
loope
adc
pop
add
xchg
xchg
icebp
or
mov
fstp
arpl
mov
push
mov
add
xchg
lea
mov
jmp
mov
pop
mov
rol
mov
gs
sub
lods
retf
(bad)
push
in
jae
ins
test
retf
ret
lahf
ret
daa
hlt
inc
pop
fcomip
or
xchg
ins
xchg
xor
or
mov
aad
pop
std
xor
and
or
popf
or
push
adc
aas
packsswb
pop
and
sub
and
push
jl
rcl
(bad)
add
jle
bound
push
sahf
fstp
mov
mov
inc
jb
mov
mov
jbe
(bad)
sti
adc
push
push
lods
cdq
dec
cli
xchg
out
sub
inc
mov
sbb
cmp
ins
ror
push
xchg
sub
addr16
mov
sub
fs
in
das
mov
jbe
and
xchg
or
cmp
repz
and
adc
jns
hlt
cwd
shr
mov
enter
test
mov
int3
pop
stc
aam
mov
cmps
sbb
pusha
push
adc
ja
add
out
and
loop
cld
enter
cmp
or
aas
sbb
mov
aas
jle
jns
sbb
cwde
push
push
addr16
inc
daa
jp
cdq
aad
enter
rol
outs
jmp
loop
jae
push
jl
xchg
and
sti
sub
inc
out
scas
fbld
push
in
imul
jmp
cwde
or
outs
and
mov
inc
rol
inc
sar
adc
xlat
(bad)
dec
test
mov
popw
int3
push
push
cmc
test
mov
sbb
fild
push
pop
out
int
add
xor
and
fimul
push
push
mov
iret
aad
xchg
jp
popf
aam
(bad)
in
jle
inc
test
lods
mov
mov
mov
repnz
xor
and
iret
movs
cmp
xchg
nop
mov
in
out
xor
fcmovnbe
ret
mov
call
mov
popf
(bad)
push
cdq
mov
cwde
sub
pop
xor
rcl
add
jl
fisttp
or
push
seto
adc
mov
xchg
cmps
retf
push
gs
pop
outs
cwde
jmp
aad
cwde
movs
leave
or
jle
jle
jne
pop
add
mov
inc
jecxz
cli
jmp
xor
retf
mov
fldcw
xor
sub
nop
inc
adc
mov
and
pop
outs
mov
jnp
scas
lea
push
jae
xchg
fcomp
push
scas
leave
test
cwde
dec
jecxz
cmp
pop
je
popa
mov
repz
sbb
push
in
cmp
push
lea
cmc
jecxz
add
push
int3
(bad)
fimul
push
hlt
int3
rcr
(bad)
push
out
xchg
mov
add
mov
retf
sbb
or
imul
outs
ins
xchg
xchg
push
mov
push
int3
retf
add
jl
dec
movs
sbb
xchg
dec
mov
jbe
iret
add
dec
lahf
inc
add
es
adc
repz
push
dec
or
imul
aad
and
icebp
sub
aad
nop
fdivr
retf
or
fst
je
xchg
fld
data16
xor
or
and
push
sbb
push
test
mov
out
sbb
sub
pop
push
xor
jbe
repnz
xchg
dec
in
int
out
cs
es
lods
fdiv
jb
ja
clc
push
cmps
jge
inc
jne
sbb
or
fiadd
push
push
push
adc
mov
jg
mov
lahf
lods
mov
or
push
push
lods
dec
in
sbb
(bad)
pop
xchg
push
jmp
xchg
xor
fs
cmps
xchg
into
mov
test
ins
(bad)
push
daa
in
add
push
pusha
sub
dec
mov
jnp
jb
push
mov
loopne
inc
push
(bad)
int
adc
cmps
ret
jb
cmp
mov
(bad)
and
gs
xchg
movs
pop
lock
stos
(bad)
mul
dec
leave
dec
loop
rcr
and
inc
sub
outs
mov
adc
das
dec
push
adc
test
sub
push
xor
mov
inc
les
stos
sbb
cld
scas
retf
jmp
movs
push
cmps
jmp
mov
lahf
mov
or
push
sahf
push
outs
adc
ret
in
adc
pop
dec
(bad)
js
out
adc
call
add
xor
rcl
cmps
test
dec
mov
repnz
ss
push
mov
sub
push
mov
dec
adc
out
fdivr
scas
nop
iret
shl
mov
dec
retf
jp
xor
imul
rcl
in
sbb
cmp
int3
cmp
stc
mov
jbe
sar
pusha
shr
jecxz
adc
imul
add
or
xor
mov
mov
xor
je
sub
arpl
sub
xchg
ror
push
aam
ss
and
imul
gs
add
out
push
jo
dec
int
das
ins
mov
pop
outs
jg
adc
iret
je
mov
mov
(bad)
pop
push
cmp
inc
ror
jg
inc
rcr
pusha
pop
daa
xor
pop
enter
mov
inc
seto
jg
arpl
adc
fnstcw
mov
in
iret
test
call
push
cmp
aam
adc
add
bound
daa
inc
and
lods
rcr
xor
inc
xlat
sahf
cdq
nop
and
shl
out
pop
and
les
xor
cld
stos
xchg
test
gs
push
int3
pop
mov
test
cmps
call
push
gs
ss
mov
sar
aas
mov
sbb
sub
pop
jg
mov
cwde
cli
jle
je
or
call
(bad)
dec
inc
jns
push
iret
or
mov
or
mov
jo
aam
sbb
add
jb
fwait
sbb
sub
adc
mov
sub
mov
scas
or
pop
movs
movs
xor
(bad)
inc
mov
mov
mov
push
push
jno
mov
mov
in
daa
push
mov
or
fsub
hlt
mov
das
or
lahf
xor
ins
xor
adc
daa
(bad)
loopne
int
sub
into
xor
or
div
stos
mov
inc
lea
push
pop
cmps
sbb
adc
jne
mov
rcl
(bad)
in
push
mov
or
lods
stos
call
movs
push
xchg
jae
call
and
int3
daa
sahf
jmp
mov
mov
jb
imul
mov
(bad)
addr16
mov
push
sahf
movs
ins
xchg
mov
adc
sar
cmp
and
test
mov
(bad)
or
scas
jno
mov
or
popa
mov
daa
stc
mov
jmp
in
js
pop
in
ja
push
inc
cmp
aad
push
jae
pop
rol
pusha
outs
ja
std
cmp
xor
js
popf
ins
jno
or
dec
add
jnp
mov
mov
das
das
jle
out
adc
adc
rcl
xor
cvttps2pi
pop
fidiv
aaa
jecxz
jo
movs
fninit
(bad)
mov
jbe
outs
movs
dec
jbe
jne
fist
inc
add
add
adc
jae
ret
cmp
push
in
data16
test
inc
int3
daa
dec
push
pushf
loop
loope
ja
lea
sbb
mov
xchg
pop
ds
sbb
or
idiv
cld
(bad)
out
inc
mov
dec
inc
push
xor
imul
xchg
push
mov
inc
stc
mov
jecxz
inc
jmp
sub
mov
fs
sbb
xchg
lea
js
outs
sub
mov
ret
rol
test
mov
jae
sbb
cmps
int3
push
fdiv
lods
scas
jmp
jns
mov
jg
arpl
cmp
into
test
push
dec
repnz
or
cmp
push
xchg
cmp
imul
xchg
mov
dec
mov
cmp
dec
outs
xor
jnp
das
mov
xchg
int3
and
repnz
mov
psrad
or
sbb
div
push
or
sub
(bad)
and
mov
leave
int3
push
jne
pop
add
bound
mov
inc
xchg
scas
jg
lods
repz
or
(bad)
repnz
add
ins
and
adc
fmul
test
shl
mov
and
or
loopne
cmp
fcmovnb
fdiv
mov
jp
push
jge
sub
mov
add
fnstcw
xlat
mov
cmp
mov
sbb
sub
xchg
(bad)
cmp
jnp
inc
jo
xchg
out
xchg
ss
dec
aad
or
(bad)
outs
inc
aam
cmc
pop
inc
mov
add
arpl
pop
out
in
sub
stos
jg
xchg
push
cmc
mov
(bad)
jecxz
pop
mov
cwde
xchg
xor
sub
mov
dec
push
cs
ja
js
push
and
and
repz
cmc
pusha
loop
test
adc
xchg
pop
sub
icebp
pop
in
inc
cmps
jmp
push
xchg
test
popf
sbb
cmp
icebp
outs
push
push
adc
call
mov
out
or
sbb
xchg
mov
pop
out
fist
lods
mov
cwde
(bad)
pop
push
jle
cmp
mov
adc
ins
lods
pop
addr16
test
jb
(bad)
cmp
inc
test
ret
bound
push
fmul
mov
iret
sbb
dec
stc
ficomp
in
movs
jmp
mov
pxor
mov
dec
xor
add
hlt
call
sbb
cli
in
cmps
xchg
bound
and
dec
push
xchg
fisubr
test
retf
or
ror
push
clc
outs
mov
dec
cmp
stos
jno
pop
gs
les
in
xor
dec
xchg
jg
mov
jp
call
fldenv
scas
aad
mul
lods
push
scas
test
pushf
popa
aaa
out
frstor
adc
jle
xor
or
xor
pop
test
inc
xor
or
ds
mov
nop
jno
sbb
jae
xchg
sub
xchg
mov
scas
xor
fwait
outs
add
mov
cmps
and
(bad)
das
mov
mov
(bad)
push
mov
in
pop
sar
loopne
add
in
mov
xor
adc
push
pop
nop
jmp
js
(bad)
pushf
jmp
test
sqrtps
mov
inc
pushf
in
fisub
ins
sbb
jl
xlat
sbb
pop
and
inc
mov
jecxz
cmp
inc
adc
out
jl
dec
retf
out
fidivr
inc
ror
inc
dec
rol
sub
ss
inc
rol
and
add
pop
ins
dec
cmp
pop
jge
repnz
dec
inc
cmp
popf
xor
mov
mov
call
mov
jmp
add
call
test
xor
imul
sahf
cmps
cmp
or
inc
ret
sbb
lea
jle
xor
es
cmp
(bad)
imul
fist
push
out
pop
es
jge
or
push
jne
pop
call
retf
(bad)
fistp
inc
xchg
pusha
fisubr
mov
and
adc
push
outs
jecxz
out
xorps
pop
inc
in
xchg
sub
cmp
lock
mov
adc
hlt
popf
bound
popa
dec
sub
xchg
cli
(bad)
push
adc
pop
arpl
retf
jo
adc
cmp
setbe
imul
pusha
stos
jecxz
push
mov
popf
inc
daa
repnz
adc
je
fisub
jmp
fidiv
jb
lods
inc
movs
(bad)
loope
xor
add
lahf
inc
adc
les
mov
in
aas
mov
enter
pop
(bad)
mov
lock
xchg
pop
jo
rep
iret
(bad)
mov
xor
popf
std
mov
sub
aad
dec
push
jmp
jne
sub
and
pushf
sub
xor
sub
pop
dec
adc
bound
cli
or
lock
cs
cmp
imul
fisttp
and
add
push
sbb
push
(bad)
out
mov
outs
sub
mov
stos
mov
xchg
int
jne
out
push
mov
dec
and
mov
mov
mov
adc
dec
les
mov
sbb
adc
jbe
jge
inc
sbb
mov
add
dec
jl
in
ss
pop
cmp
dec
dec
add
xchg
push
cmps
scas
cdq
push
ds
adc
inc
in
add
imul
cmp
and
push
out
repz
popf
xor
inc
stc
sbb
jae
sbb
aaa
pop
test
or
daa
jl
dec
lods
push
sbb
and
pop
jae
ja
mov
mov
sbb
pop
out
cmp
test
xor
and
fbstp
xlat
es
cld
aaa
cld
or
mov
nop
or
pop
jno
xchg
mov
inc
(bad)
aad
adc
inc
nop
les
pop
jg
jne
and
jecxz
mov
stos
dec
mov
outs
iret
cmp
mov
data16
ds
jbe
jmp
les
movs
lods
leave
push
inc
test
or
cmp
mov
popf
push
arpl
rcr
aam
jns
cld
pop
jmp
sahf
or
mov
stos
jno
repz
popa
jg
rcr
sti
fild
and
rcl
sub
and
(bad)
das
add
outs
(bad)
dec
rol
(bad)
xchg
xchg
fsubr
arpl
mov
(bad)
std
xlat
enter
mov
mov
pop
dec
or
add
in
sub
ins
jmp
inc
inc
sub
lods
ins
out
test
mov
cmp
movs
repz
int
pop
pop
push
cmps
add
call
jmp
ret
cmps
std
icebp
xchg
sub
leave
mov
cmp
(bad)
cmp
jbe
mov
mov
pop
sbb
or
jmp
std
les
mov
push
in
rcr
mov
pop
aam
(bad)
outs
stc
cmp
cmp
xchg
xlat
mov
add
outs
imul
test
and
mov
jg
sub
cli
sbb
push
fcom
mov
(bad)
fstp
imul
adc
dec
in
iret
mov
push
push
ret
inc
inc
std
xor
adc
out
call
sub
(bad)
dec
mov
adc
xor
sub
jbe
xor
call
mov
pop
pop
push
add
adc
loope
dec
add
scas
sbb
dec
mov
into
popf
xor
mov
xlat
cmp
mov
xor
push
dec
jno
and
inc
adc
(bad)
retf
xchg
adc
inc
xchg
push
add
stos
jmp
sbb
ficom
push
pop
cmp
cmp
or
sbb
mov
ja
cwde
loopne
fwait
cmp
iret
sbb
push
xchg
push
or
inc
dec
and
cs
ret
push
call
xchg
imul
mov
and
inc
mov
in
mov
popf
push
ja
xchg
mov
icebp
outs
out
aaa
popa
xchg
pop
jl
jns
add
mov
pop
jnp
movs
(bad)
mov
jb
aaa
adc
sub
xchg
ins
and
rol
(bad)
in
cmp
xor
lods
xchg
push
loop
sbb
cdq
aas
mov
push
stos
or
imul
xchg
pusha
scas
push
outs
xor
js
mov
jecxz
add
sbb
ss
imul
ss
dec
cmp
test
push
fidiv
ja
dec
addr16
rol
or
xchg
fcom
out
adc
lock
sbb
rol
mov
add
fld
and
popa
arpl
fs
movs
loop
add
leave
or
(bad)
xlat
aaa
les
sub
cmp
dec
lds
pop
gs
jl
add
cmp
cli
test
xor
arpl
and
stos
and
jb
(bad)
sahf
mov
mov
repnz
test
cmp
add
(bad)
xor
mov
adc
ret
clc
xor
mov
(bad)
xchg
repz
test
lods
sub
ret
mov
xor
mov
cmps
mov
cmc
in
jb
inc
iret
or
ja
mov
jg
push
jbe
pusha
rol
dec
or
call
or
pop
std
cmc
cmp
and
movs
inc
fwait
adc
fsubr
cmp
mov
sbb
sbb
sbb
icebp
mov
adc
fld
loopne
clc
ror
retf
xor
fmul
mov
ins
cmps
stos
nop
mov
cmps
aaa
test
sbb
call
shl
mov
cmp
mov
xchg
popa
into
jmp
data16
push
dec
dec
loope
addr16
dec
jmp
add
or
stos
jmp
hlt
fisub
and
and
inc
(bad)
mov
iret
xor
push
movs
sahf
fld
jmp
loop
mov
jae
xor
xchg
xlat
loop
(bad)
mov
pop
jbe
popf
xor
sbb
cmp
movs
add
loop
rol
daa
add
(bad)
ds
(bad)
retf
dec
fwait
pushf
mov
push
(bad)
mov
sti
test
cmc
sti
sub
sub
pop
das
in
pop
jae
lds
adc
(bad)
sub
icebp
rcr
push
or
sub
pop
pop
xor
mov
out
and
sub
or
cmc
xor
out
or
ja
mov
mov
jmp
mov
xchg
mov
scas
inc
std
and
stc
rcl
test
mov
lods
xor
xchg
(bad)
outs
dec
push
(bad)
jns
enter
jmp
mov
pop
push
data16
jmp
push
(bad)
cmc
ss
inc
(bad)
mov
inc
mov
sahf
pop
mov
xor
fst
mov
mov
dec
xchg
lods
and
pop
mov
adc
aad
retf
aas
pop
mov
mov
xchg
fsub
popa
fnsave
jo
mov
test
pop
mov
add
fs
sti
xchg
push
lds
test
lock
inc
xor
repnz
mov
cmp
sbb
xchg
mov
dec
add
rcl
arpl
sbb
mov
xor
scas
ror
dec
add
xchg
jecxz
pop
retf
(bad)
jmp
div
or
or
(bad)
adc
and
std
mov
pslld
out
data16
cdq
inc
mov
sub
imul
lods
imul
lock
mov
popa
and
cwde
mov
push
adc
sar
jecxz
and
test
in
jp
xor
addr16
pop
ds
mov
xchg
mov
stc
lock
add
adc
mov
push
in
stos
repz
addr16
mov
into
jmp
movs
mov
(bad)
int3
inc
out
sub
fiadd
std
test
sub
fcom
push
mul
sub
cmps
pop
scas
lods
jne
sbb
lahf
dec
sub
xlat
int3
xor
ja
jnp
cmps
mov
loope
jmp
sub
stc
mov
and
push
adc
mov
adc
int3
jnp
mov
dec
loope
bound
xchg
mov
repz
enter
data16
(bad)
adc
das
inc
fbstp
test
call
sbb
retf
xor
mov
mov
push
out
pop
cwde
imul
add
and
je
dec
cld
mov
adc
jo
int
dec
dec
add
addr16
sub
cmps
cmps
mov
sbb
mov
ret
xor
inc
jno
cmps
jle
ins
repz
jl
sbb
mov
cmp
fwait
sub
dec
push
inc
and
sbb
loop
icebp
lods
mov
or
add
outs
sti
jle
adc
and
push
mov
jno
jmp
(bad)
out
jbe
gs
cmp
ds
add
ret
dec
ins
daa
sub
dec
fdivr
pop
jae
adc
test
daa
lds
dec
sub
or
jmp
pop
fwait
dec
sbb
jp
mov
mov
arpl
and
sahf
sbb
mov
test
out
lock
fist
pop
lahf
arpl
push
and
addr16
je
iret
jmp
push
outs
dec
sar
scas
rcr
push
imul
fcmovbe
shl
pop
lds
cmp
xor
or
add
fucomip
imul
push
cli
jne
push
fucom
clc
pop
int
sub
and
jo
and
es
daa
je
es
rcr
scas
push
dec
sub
test
fisttp
hlt
pop
inc
lahf
out
mov
loopne
push
bound
out
inc
inc
rol
into
mov
(bad)
loop
fcom
xor
in
jle
vpsraw
lds
and
cmc
pop
dec
scas
jnp
scas
push
dec
mov
pop
fadd
sbb
rcl
jg
push
cmp
fimul
pop
push
mov
js
ins
or
(bad)
push
out
loopne
push
lods
sti
mov
xchg
mov
cli
jecxz
ins
mov
idiv
rol
cdq
(bad)
inc
lods
neg
and
(bad)
daa
xor
xchg
sbb
sbb
pop
in
or
clc
inc
int3
push
stc
xor
ror
stos
repz
cmps
mov
add
dec
std
lea
inc
cwde
pop
imul
xor
xor
cmp
mov
shr
dec
div
dec
call
mov
cmps
sub
sub
add
sbb
cwde
das
shl
inc
outs
imul
ins
pop
lock
(bad)
mov
jge
scas
(bad)
aam
dec
dec
std
out
rcr
sub
sub
cmp
inc
xchg
xchg
into
enter
inc
call
or
push
das
push
(bad)
xor
jmp
retf
pop
jno
ss
shl
(bad)
adc
pop
add
sub
mov
jmp
dec
sahf
rol
inc
fisub
lea
cli
sbb
xchg
pop
(bad)
fxch
fs
cmp
adc
push
sbb
inc
pop
fs
sbb
icebp
mov
jno
jb
hlt
fcomp
mov
and
mov
addr16
imul
minps
mov
rol
and
dec
cs
in
add
push
fisub
pop
popf
dec
fimul
es
lahf
jo
xor
sbb
imul
xor
fmul
and
jge
push
and
dec
sub
cmc
aad
inc
mov
adc
fs
sbb
pushf
push
imul
sub
outs
mov
outs
mov
es
cs
mov
test
or
cmp
imul
xor
mul
arpl
push
(bad)
mov
fistp
mov
mov
lock
dec
mov
or
fnsave
fsub
ror
loop
add
daa
repnz
add
fimul
sbb
dec
sahf
sub
ror
mov
fbld
dec
pop
jp
jg
and
popa
out
pop
dec
mov
or
arpl
dec
push
sti
push
add
fs
shl
jne
cmp
in
loope
mov
movs
inc
pop
leave
cmp
add
ins
inc
stc
data16
jg
xchg
out
jbe
sahf
fnsave
loopne
mov
or
lods
test
add
cmp
or
jge
out
mov
add
mov
(bad)
fcomp
jecxz
push
cmps
add
fs
fiadd
xchg
std
arpl
adc
xchg
xchg
cwde
jbe
rcr
sahf
xchg
retf
mov
fs
or
dec
daa
int3
cwde
pop
pop
and
call
mov
dec
je
xor
outs
dec
(bad)
loope
(bad)
dec
inc
sbb
inc
xchg
sti
and
push
ja
mov
jmp
mov
add
jp
je
jne
cdq
pop
and
dec
cmc
and
xchg
push
add
pushf
cdq
movs
cmp
sar
pop
(bad)
mov
cmp
lods
add
lahf
shr
cmps
pop
out
sbb
mov
xchg
jmp
sbb
mov
sbb
aam
xchg
(bad)
hlt
jl
mov
out
cmc
imul
xchg
or
pop
mov
and
push
loopne
mov
xchg
ja
shr
retf
(bad)
pop
xchg
mov
std
fnstenv
loopne
sbb
jecxz
inc
xchg
pop
js
sub
sub
or
ss
xchg
retf
pusha
pop
test
imul
xchg
imul
jmp
pushf
mov
(bad)
or
add
fst
cmp
xchg
push
retf
int3
xchg
arpl
(bad)
inc
cmc
adc
sub
pop
jb
push
cli
push
fmul
xchg
imul
aas
xchg
xchg
dec
je
cmp
xchg
stc
stos
int3
mov
pop
daa
pushf
aas
cs
push
jl
or
xchg
test
dec
and
test
mov
push
cdq
rcl
dec
shl
sub
out
iret
sbb
adc
nop
sub
jl
xchg
fnstcw
sbb
inc
aam
dec
inc
into
shr
je
in
retf
sbb
retf
movs
out
idiv
pusha
cmp
lods
vpsubw
adc
cmp
dec
js
jb
enter
xchg
lods
mov
push
clc
sbb
and
ja
xchg
pop
lea
cmps
mov
ins
cmps
cmp
mov
sbb
sbb
sbb
inc
push
dec
outs
cmp
mov
repz
aaa
inc
fisubr
fld
push
bound
mov
pop
dec
jb
mov
xchg
sbb
push
lock
test
sub
stos
cmp
fs
add
jae
movs
push
cmp
and
pop
fimul
xor
stc
imul
mov
dec
push
sahf
daa
or
dec
cmp
mov
test
in
push
call
aaa
cmp
fld
adc
lahf
xor
add
movs
xchg
and
out
ror
push
inc
mov
add
adc
call
pop
imul
mov
xchg
mov
ins
pop
popf
xor
dec
cs
mov
push
rcr
jns
sub
(bad)
mov
mov
sbb
cld
dec
push
or
xor
xchg
(bad)
push
cmp
gs
sub
xchg
pop
sahf
ss
and
cmc
pop
sub
lods
dec
add
addr16
dec
push
or
addr16
outs
xchg
mov
xchg
rol
test
aad
push
dec
mov
rcr
into
clc
(bad)
xchg
or
call
sahf
xor
xchg
jne
ja
fsub
sbb
pop
(bad)
retf
dec
inc
call
xchg
xor
inc
push
pop
push
int3
lods
jb
mov
push
fsubr
push
sbb
outs
push
sbb
xlat
xchg
jnp
ret
xchg
aas
std
sti
xor
mov
cld
pop
neg
pop
jl
jae
test
aaa
and
sbb
jp
inc
xor
pop
sbb
jge
(bad)
inc
mov
cmp
xchg
jmp
outs
popf
mov
add
jle
or
rcr
cmp
ins
jnp
clc
jnp
data16
(bad)
(bad)
jmp
leave
pusha
or
emms
sbb
sbb
push
fist
das
ror
lock
(bad)
sub
enter
push
xchg
mov
iret
outs
out
jg
and
add
mov
stc
xchg
(bad)
leave
test
das
jo
xchg
retf
mov
popf
mov
jb
inc
(bad)
cmc
xchg
cmp
mov
ins
or
sbb
mov
mov
test
stos
adc
jl
mov
jne
lock
xor
fwait
mov
fidiv
fs
fadd
outs
and
sbb
mov
adc
jae
test
mov
xchg
mov
test
retf
lods
add
push
push
sbb
and
cmp
xchg
jg
in
movs
xchg
push
inc
push
fwait
loop
pop
xchg
mov
jmp
mov
mov
aas
gs
cmp
fs
cmp
pop
push
add
enter
sub
add
frstor
cmps
mov
sbb
and
adc
jne
fnsave
rol
jmp
fidivr
pop
jns
in
mov
jge
dec
hlt
outs
sti
and
repnz
pop
test
popf
scas
test
cmp
icebp
xchg
scas
in
stos
test
cmc
sbb
loop
adc
add
ja
fcom
test
mov
pop
lea
retf
sti
fs
loope
aam
mov
enter
stos
aas
inc
test
lds
cdq
mov
xchg
cmp
rcl
jns
(bad)
es
and
mov
outs
and
scas
bound
js
jecxz
movs
and
push
cs
dec
dec
and
arpl
test
add
add
mov
pop
fstp
(bad)
ror
je
mov
test
jo
scas
jns
sar
lods
in
arpl
ret
inc
jmp
test
inc
fsubr
mov
lds
fdivr
pop
sub
jo
and
sbb
mov
mov
iret
out
sbb
and
movs
lds
jmp
mov
jnp
aad
pusha
add
repnz
es
aad
fs
ds
adc
jge
mov
sub
jo
in
in
outs
les
out
shr
dec
ret
xchg
jbe
nop
retf
or
(bad)
jbe
mov
xor
neg
xchg
ret
dec
or
mov
jmp
xchg
push
(bad)
(bad)
add
pop
dec
pushf
stos
icebp
aaa
stos
push
(bad)
out
cdq
cmps
les
mov
int3
inc
pop
fcmove
push
ret
adc
into
int
jl
push
jno
inc
or
outs
cmps
mov
jns
jecxz
cmps
pusha
jle
retf
cld
mov
cs
js
jns
cdq
ret
jle
lock
fcom
cdq
push
imul
sub
xchg
cmc
mov
mov
cmps
xor
je
cmc
addr16
adc
mov
sub
mov
clc
sbb
mov
mov
mov
or
pop
loope
cmp
(bad)
xchg
gs
pop
lock
cli
mov
sbb
ret
lock
cmps
cmp
hlt
call
jb
adc
fbld
lea
stos
jmp
lods
test
pop
fnstsw
xor
pop
(bad)
outs
xchg
or
inc
pop
mov
xor
addr16
inc
push
nop
xor
add
mov
ins
mov
mov
mov
cmp
cmps
dec
sub
cld
sar
add
inc
fs
cdq
dec
adc
or
mov
mov
fld
bound
or
sub
fs
cli
push
dec
pusha
mov
push
adc
and
sub
call
dec
idiv
cwde
mov
jmp
shr
or
add
xchg
enter
pop
pop
push
mov
dec
enter
add
mov
jg
cmps
xor
inc
mov
lock
xor
add
sbb
int3
add
je
out
sbb
call
mov
movs
adc
(bad)
dec
or
or
add
and
jmp
jo
cmc
jbe
data16
sti
popa
popa
pusha
inc
out
gs
data16
out
std
inc
outs
pop
gs
(bad)
int3
push
sbb
clc
xchg
xchg
sti
pop
xchg
inc
jo
inc
push
and
sub
movs
jnp
pop
not
inc
xchg
data16
out
addr16
lock
xchg
sbb
xlat
in
cmp
pop
div
xor
mov
or
adc
arpl
out
xor
pop
jmp
rcr
push
scas
(bad)
mov
(bad)
aas
into
or
adc
mov
rcl
or
repnz
imul
les
cwde
(bad)
mov
dec
jne
int3
mov
cwde
xchg
in
mov
outs
add
pop
mov
xor
scas
mov
and
and
xchg
sar
(bad)
fptan
sahf
mov
es
out
inc
std
fld
xor
sub
outs
push
pop
shr
mov
sbb
das
mov
jle
pop
mov
jns
movs
jbe
(bad)
sti
push
push
popf
push
cli
mov
add
add
xor
hlt
jg
je
adc
adc
and
xor
mov
repz
mov
out
mov
pop
out
sub
mov
enter
dec
iret
jp
push
rcl
cmp
pop
pop
sbb
(bad)
into
and
jecxz
addr16
dec
xor
xchg
out
stc
pop
cmp
push
cwde
adc
pop
pop
push
xchg
out
jge
test
and
inc
jns
xchg
loop
lea
sar
fimul
jnp
dec
push
aam
pushf
jmp
arpl
push
ret
out
mov
sub
pop
(bad)
fisttp
into
jge
repz
and
and
mov
adc
ds
push
loopne
push
jo
daa
pusha
in
mov
dec
in
pop
xchg
stos
sti
push
push
aad
or
retf
int
inc
cmps
pop
sar
retf
pop
out
aam
aam
es
inc
jae
and
es
jp
ins
jnp
adc
pop
icebp
push
data16
imul
and
sbb
dec
dec
ret
mov
aas
(bad)
jmp
lods
pop
aas
push
inc
and
xor
rcl
les
mov
ret
iret
gs
(bad)
jmp
das
icebp
div
inc
cmps
fstp
jp
gs
push
dec
push
aaa
ins
inc
rcl
es
ins
sbb
mov
and
or
fsub
scas
or
(bad)
mov
mov
std
mov
sub
ror
ins
or
add
xchg
fist
lea
rcr
mov
cld
dec
shl
dec
push
shr
out
fwait
or
sub
fdiv
xchg
cmp
jmp
sub
push
cli
shl
unpckhps
loope
es
loopne
aas
stos
mov
sbb
mov
fisubr
xor
xchg
enter
js
std
add
and
rcr
push
cs
xchg
cmp
mov
mov
lahf
push
scas
xor
dec
or
fist
out
add
sub
imul
adc
cmp
into
fidiv
mov
xchg
pop
xor
cmps
cmp
mov
xchg
push
loope
inc
jno
mov
mov
outs
pop
mov
(bad)
mov
lods
push
jno
rcr
sub
dec
or
sbb
pop
test
pusha
inc
xor
xchg
fldcw
scas
jmp
arpl
out
pop
xchg
inc
in
daa
ins
cs
stc
rcl
cmp
(bad)
repz
and
inc
mov
xchg
pop
add
into
dec
in
arpl
shl
mov
add
jp
mov
hlt
inc
mov
movs
adc
stc
sub
ret
dec
pop
repz
sbb
mov
mov
xchg
cmps
in
sbb
jmp
xor
xor
outs
cli
xor
fst
sahf
int
gs
sub
jl
rol
lock
or
sub
adc
and
sbb
addr16
mov
(bad)
rcl
mov
jecxz
mov
pop
add
in
xchg
mul
dec
cmps
jle
sub
call
add
mov
cmp
xchg
pop
mov
cdq
arpl
xchg
js
outs
stc
xor
pop
jp
test
fisttp
dec
jmp
or
xchg
data16
call
sbb
pop
mov
sar
jne
xor
inc
dec
and
jno
xor
adc
mov
gs
sub
mov
cdq
test
xchg
mov
cwde
push
adc
mov
loop
cld
jne
jb
test
call
and
or
mov
push
jo
jg
gs
out
loope
(bad)
inc
inc
sbb
ss
ins
cmps
pop
pop
rcr
sub
mov
test
and
jb
in
add
mov
call
dec
push
cmps
(bad)
push
jg
sbb
outs
and
movs
or
out
test
push
jae
rcr
mov
and
cli
in
add
xchg
or
mov
push
inc
fst
fs
mov
ret
push
sub
(bad)
cmc
pusha
adc
sub
or
pop
mov
lock
dec
mov
cmp
push
push
or
lods
adc
lea
aam
int
sub
mov
dec
xor
hlt
sub
ja
js
push
out
lds
mov
dec
mov
inc
sbb
mov
push
test
sbb
fs
fisubr
test
repz
inc
leave
mov
mov
pop
pop
cmp
stc
add
sbb
and
daa
out
and
add
jge
(bad)
not
push
adc
fsub
arpl
arpl
xor
dec
stc
mov
scas
lock
int
loopne
sbb
scas
xor
pop
pop
imul
popa
daa
ret
xor
or
shl
jns
retf
int
fld
pop
enter
repz
div
xor
xor
push
cld
dec
std
lods
outs
iret
(bad)
lods
mov
ins
push
sub
int
add
dec
in
mov
mov
xchg
sbb
mov
mov
stos
data16
xlat
test
fsub
popa
hlt
test
(bad)
fld
aam
adc
lods
daa
cmps
into
jg
sti
test
push
mov
mov
mov
div
clc
(bad)
sbb
jne
shr
xchg
xlat
popa
dec
sub
and
popf
mov
(bad)
cmp
cmp
and
pop
in
lods
mov
cmp
or
inc
lods
lahf
pusha
call
push
pop
mov
or
lock
push
outs
ins
out
sahf
mov
or
sub
and
fsubr
push
mov
int
jb
add
ror
inc
outs
(bad)
sar
pop
scas
push
dec
push
fdivr
loop
loopne
jmp
imul
mov
mov
in
stc
shl
pop
ds
test
jmp
ficomp
mov
sbb
aaa
call
jmp
rcr
jecxz
jno
imul
dec
ror
sbb
sub
and
dec
add
addr16
add
gs
in
shl
clc
in
mov
add
dec
sbb
into
jecxz
cmp
frstor
jns
xor
repz
mov
inc
sub
lahf
jns
jecxz
push
jo
mov
mov
jmp
mov
es
jmp
inc
cmps
add
mov
and
push
push
sbb
cwde
and
adc
xchg
or
sbb
lods
sbb
rcr
shl
mov
bound
(bad)
dec
jo
jae
shl
pop
lods
iret
scas
dec
pop
xchg
push
sub
cmps
movs
inc
add
xor
mov
xchg
std
jmp
jmp
cmp
fadd
push
cmp
(bad)
push
call
call
stc
adc
push
(bad)
sbb
jecxz
popf
jl
sbb
mov
cli
push
push
mov
(bad)
aas
xor
fisubr
mov
push
xchg
(bad)
out
mov
mov
hlt
sub
add
aad
ja
inc
push
inc
jnp
or
(bad)
lods
nop
pop
lds
add
ucomiss
mov
sub
adc
adc
daa
push
hlt
mov
stos
and
in
adc
push
test
imul
nop
sbb
dec
mov
pop
xchg
mov
out
pop
xchg
adc
out
xor
cmp
xor
test
ss
stc
jo
xor
mov
xlat
and
cmp
popf
mov
shl
add
lea
sbb
jmp
sar
push
jmp
popa
rcl
test
xor
lock
sbb
jnp
jnp
stos
xor
cmp
adc
xchg
mov
mov
or
rol
leave
dec
in
or
jg
cmp
movs
dec
cmp
and
lds
push
aad
ret
pop
test
mov
mov
rcr
rol
popa
bound
js
xor
(bad)
mov
call
shl
(bad)
outs
mov
cmp
jne
mov
popf
out
fld
mov
movs
aaa
mov
mov
xchg
adc
xchg
mov
fstp
nop
imul
add
scas
addr16
mov
mov
sar
lock
inc
test
xchg
pop
loope
inc
xlat
jg
cli
ret
inc
pushf
mov
push
andps
cmc
leave
lods
jne
es
inc
mov
imul
inc
or
dec
mov
push
lahf
es
mov
out
mov
mov
scas
scas
dec
xchg
sbb
dec
shr
sbb
xchg
xchg
lods
sbb
xor
dec
lahf
and
stos
stc
xchg
ja
push
xor
pop
mov
cwde
cmps
(bad)
mov
xor
sbb
ins
shl
movs
fsubp
jb
cdq
cmp
jmp
pop
push
cmp
cmp
sbb
scas
lock
or
pop
xor
add
or
cmp
xchg
mov
(bad)
adc
sub
das
nop
ret
jmp
in
and
mov
shl
test
out
pushf
jb
lods
adc
inc
add
rcr
jecxz
and
mov
loop
xchg
(bad)
pop
jb
inc
lods
sbb
xor
mov
cs
cmp
clc
aam
icebp
and
mov
stc
jo
movs
call
mov
xor
adc
mov
dec
and
inc
std
fcom
push
mov
cmp
std
push
sbb
push
in
sub
js
mov
xchg
leave
shr
les
fst
mul
pop
mov
(bad)
ins
test
fdivrp
mov
or
sbb
jb
ret
adc
xchg
or
popf
dec
jp
pop
push
xchg
into
inc
pusha
leave
push
dec
cmp
push
xor
scas
and
(bad)
jbe
loopne
sti
or
fisub
jno
push
and
adc
jge
sub
xchg
push
push
std
mov
loop
(bad)
jo
loopne
outs
or
xor
out
mov
sbb
repnz
cmc
xor
addr16
daa
inc
sbb
dec
js
jmp
stos
out
stos
dec
fdivp
fcom
fsub
icebp
push
mov
lock
jmp
ret
xchg
loopne
pop
pop
popf
fsub
cmp
pop
cmc
jl
xchg
add
lahf
xlat
retf
and
test
fisttp
push
mov
int
in
jne
add
stos
ret
cmp
and
xor
push
into
push
ds
mov
inc
ret
add
mov
mov
xchg
jnp
popf
pusha
test
retf
or
sar
push
push
dec
or
aam
push
mov
sub
mov
rcr
es
mov
push
in
mov
call
out
and
(bad)
out
fisubr
(bad)
aas
xor
mov
cmps
imul
popf
xchg
out
fwait
cmp
movs
dec
inc
loop
test
movs
cmp
les
ins
cmp
scas
jl
clc
adc
mov
lea
sar
pop
dec
rol
pop
xlat
ss
adc
adc
movs
jne
and
imul
jo
pop
ss
retf
inc
cmps
call
ficomp
iret
adc
sbb
xlat
mov
repz
and
pop
ss
adc
push
in
loope
(bad)
rcl
rol
pop
loop
or
lahf
arpl
sub
loope
mov
push
fmulp
jo
cmp
fisttp
push
mov
aad
xor
js
les
ret
inc
(bad)
enter
inc
jae
or
push
pop
pop
xchg
adc
aas
popa
mov
cmps
jnp
mov
inc
dec
retf
mov
adc
test
and
or
sbb
cmc
adc
pop
test
inc
xchg
jo
adc
sub
(bad)
mov
push
daa
rol
pop
inc
popa
es
xchg
stos
aas
adc
rcl
outs
ins
cmps
cmp
inc
and
jne
movs
or
mov
adc
sub
push
das
sub
add
mov
push
jmp
xchg
fs
movs
je
dec
dec
mov
jno
push
adc
mov
mov
outs
fbstp
or
cmp
mov
pop
mov
or
ja
mov
mov
(bad)
dec
imul
dec
(bad)
sbb
and
sbb
mov
and
sub
fsubrp
or
fild
ret
out
mov
jo
mov
push
rcr
rcr
push
in
fsubr
ficom
neg
mov
sbb
(bad)
sub
outs
push
shl
add
into
mov
mov
popa
mov
and
stos
into
vsubss
scas
dec
hlt
push
add
out
dec
and
mov
or
rcl
gs
add
test
pop
in
add
hlt
icebp
sar
cli
ficomp
push
retf
sbb
mov
cs
xchg
fcmovb
mov
xchg
jns
jl
xchg
adc
dec
push
adc
or
adc
mov
adc
fwait
push
cmps
mov
and
shl
clc
aam
loopne
inc
jmp
fsub
mov
fnstsw
ret
loopne
jmp
xor
enter
adc
fld
cmp
outs
popa
add
mov
or
xor
xchg
psubb
add
scas
jne
cmp
inc
daa
push
jns
mov
gs
adc
jmp
xor
repz
jmp
retf
clc
xlat
leave
scas
cmp
cmp
xor
inc
popa
and
inc
xor
cmp
lahf
pop
push
rcr
sbb
ret
std
push
mov
xor
mov
movs
out
fimul
out
adc
sub
pop
push
int
jl
sub
mov
repnz
xchg
mov
xchg
scas
mov
mov
cmp
and
repz
inc
(bad)
in
mov
(bad)
mov
jns
push
lea
pop
retf
clc
or
jge
cmp
mov
cmp
xchg
pop
jns
(bad)
int
add
dec
push
lods
cld
sbb
div
inc
pop
sbb
adc
add
mov
stos
jge
cld
into
jb
add
jb
or
cmp
mul
js
sub
or
(bad)
push
pop
xor
bnd
mov
(bad)
in
call
or
cmp
jno
adc
outs
cmps
cs
and
test
push
imul
pop
ds
test
mov
mov
pop
xor
sbb
mov
repz
or
dec
call
jbe
ins
xchg
mov
mov
mov
out
mov
mov
mov
jl
inc
fcomp
or
hlt
popf
inc
test
and
ret
cdq
pop
fild
cmp
out
mov
xchg
test
mov
gs
adc
icebp
fs
ret
out
xchg
sbb
dec
pop
fdiv
mov
cdq
mov
mov
xchg
pop
jmp
jl
imul
ret
jns
sub
ror
add
cmp
bound
inc
dec
les
std
enter
mov
or
ins
popa
aaa
sub
mov
xchg
mov
retf
push
shr
lds
jae
push
mov
jns
xchg
dec
jmp
js
scas
out
push
lods
dec
stos
mov
xchg
and
call
add
sub
fsubr
cmp
xchg
into
or
push
jb
bound
cmc
mov
xor
jns
jne
ja
pop
mov
daa
add
push
stc
xor
fwait
lock
sar
jl
dec
push
nop
aaa
mov
into
inc
imul
jp
or
push
stos
sbb
or
pop
call
rcr
stos
stos
push
mov
test
push
stos
ror
push
pop
jne
push
pop
icebp
xchg
xchg
sar
lods
clc
jmp
pop
adc
add
movs
aam
add
div
cmps
clc
fidiv
out
jecxz
sbb
xor
lea
fistp
mov
imul
xchg
jno
dec
mov
add
sub
aam
dec
sbb
jbe
pusha
iret
mov
(bad)
or
push
enter
movs
int3
dec
shl
inc
loopne
mov
fstp
mov
sti
xchg
jmp
inc
fist
frstor
push
xchg
mov
dec
shl
loope
movs
call
or
or
xlat
push
and
(bad)
pushf
sbb
xlat
cmp
mov
dec
out
lea
jbe
and
mov
mov
push
jp
leave
xor
das
xchg
inc
call
imul
xchg
rcl
mov
into
fcomp
jmp
cmp
pop
xor
sub
sbb
sbb
cmp
mov
call
lods
lock
xor
jmp
push
sar
mov
dec
das
pusha
mov
int
idiv
jb
aas
mov
pop
(bad)
xor
adc
cli
mov
and
out
inc
stos
xor
and
out
sub
or
or
fs
push
mov
pop
dec
out
xchg
mov
idiv
mov
push
mov
(bad)
ds
loop
mov
xor
mov
adc
int
mov
adc
pushf
int3
pusha
ja
sbb
cmp
sbb
inc
(bad)
mov
xor
xchg
push
cwde
mov
not
adc
mov
ds
mov
cmps
mov
pop
stc
mov
pop
cmp
cmp
aam
jge
inc
sub
clc
test
adc
inc
stos
movs
jnp
test
cmps
clc
shl
stos
xor
in
add
loopne
add
rcr
imul
(bad)
mov
jp
das
jmp
(bad)
aad
test
and
std
or
mov
ds
sbb
add
aam
ror
jg
jecxz
mov
pop
jb
int3
pop
inc
std
lods
movs
jmp
pop
and
pop
cmp
test
push
aam
cli
and
call
call
adc
jae
xchg
mov
pop
popf
add
les
test
ins
xor
push
dec
fs
sbb
mov
fneni(8087
into
(bad)
mov
mov
inc
inc
mov
sub
add
sbb
pushf
scas
jle
fbstp
jo
mov
xchg
pusha
pop
xchg
dec
test
adc
fidivr
lods
jo
repz
cli
out
jecxz
cmc
leave
or
fst
aas
pop
popa
push
dec
xor
jb
leave
mov
xor
xchg
cmp
fnstcw
push
xchg
pop
in
add
and
mov
sub
leave
es
loopne
sti
xlat
mov
sub
ror
push
xchg
mov
mov
mov
pop
sub
jns
and
jbe
out
fwait
out
mov
and
ret
or
aaa
push
in
add
adc
es
mov
jbe
outs
repnz
add
mov
cmc
dec
adc
iret
aaa
ret
out
lahf
jl
add
add
inc
test
jae
test
xor
cmp
rcr
pop
jge
jp
pop
cmc
lea
jle
mov
fnsave
loopne
mov
inc
xor
movs
add
leave
push
cmp
fidivr
cld
xor
cdq
pop
retf
cwde
or
mov
sub
jne
cli
popa
cmps
and
ss
push
inc
pop
sub
fnstenv
inc
nop
aam
and
popf
cmp
mov
add
in
mov
pop
jge
cli
or
or
daa
push
mov
mov
gs
jge
sub
sub
movs
push
mov
or
popf
mov
lea
inc
ss
push
dec
xchg
in
pop
fisubr
mov
xor
ja
push
cmp
outs
push
rol
jmp
test
jmp
pop
and
add
adc
pop
dec
jle
push
mov
xchg
jp
inc
xchg
fmulp
inc
(bad)
mov
shl
lahf
mov
dec
pop
push
iret
fwait
rcr
sub
out
inc
retf
dec
or
jmp
loop
pusha
inc
xlat
xchg
add
cmps
dec
(bad)
cmp
fwait
popa
xchg
and
mov
in
das
movs
pop
fs
pop
fst
ds
aas
sbb
enter
dec
and
cli
push
mov
xchg
jbe
push
sbb
pop
lahf
xchg
enter
pop
sub
int
rcr
sbb
dec
cmp
and
adc
cdq
stos
jge
xchg
jle
sub
push
jb
and
cmp
loop
jmp
repnz
sbb
pop
lds
adc
dec
dec
(bad)
lods
mov
xchg
xchg
clc
in
enter
pop
out
dec
push
sub
adc
ds
mov
bound
addr16
outs
xor
jp
dec
pushf
push
imul
dec
ins
add
mov
push
ud1
push
and
ret
add
mov
sbb
jp
leave
aad
lahf
ja
lods
push
fmul
sub
je
push
movs
jmp
(bad)
fcom
xchg
loop
sub
popa
mov
push
mov
add
outs
inc
mov
out
push
outs
jo
jge
enter
jne
lods
clc
loope
out
and
sbb
lods
jmp
pop
inc
ret
push
call
push
add
fst
jo
push
scas
in
or
cmp
inc
mov
aaa
fld
inc
call
mov
daa
int3
xchg
rcr
inc
pusha
clc
lds
mov
and
adc
adc
inc
out
std
in
xchg
push
mov
fcomp
test
ret
loop
mov
xor
(bad)
fidivr
xchg
sbb
jmp
mov
adc
xchg
dec
fisttp
js
fist
pop
fnstsw
and
inc
cli
mov
fist
shr
adc
popf
call
adc
aam
mov
xchg
jge
(bad)
xor
lods
fild
daa
cld
dec
dec
mov
repz
es
dec
dec
aas
repz
xchg
push
lods
(bad)
ficomp
and
pop
(bad)
std
add
push
xchg
cmps
sub
(bad)
and
das
add
jmp
nop
pusha
push
shl
xor
mov
jp
lds
pop
(bad)
in
sub
adc
add
jo
stc
sbb
push
stos
aam
sbb
sub
push
mov
mov
popa
aad
ja
mov
ja
std
xchg
jl
pop
movs
ss
aad
mov
int3
sub
mov
or
fwait
mov
inc
(bad)
cli
addr16
mov
or
cmp
aas
stos
xchg
or
push
mov
iret
and
shl
push
pop
sahf
push
or
jg
mov
pop
dec
mov
dec
imul
add
pop
lds
push
test
ret
inc
xchg
dec
sbb
clc
stos
js
mov
cli
xchg
movs
(bad)
pop
iret
or
cmps
push
push
xor
lods
xor
ror
ret
lock
or
mov
pop
hlt
(bad)
jecxz
xor
scas
inc
cld
cdq
(bad)
jecxz
dec
adc
sbb
inc
fbld
mov
or
fs
aas
fcom
aaa
imul
jbe
enter
std
sbb
push
out
int
add
mov
mov
and
cs
in
adc
popa
inc
test
imul
sahf
cmp
fsubr
xacquire
rcl
inc
stos
shl
jne
mov
pop
in
es
out
dec
adc
dec
pop
mov
cmp
mov
(bad)
and
ins
ja
out
cld
xchg
mov
enter
retf
cmps
mov
and
jae
add
enter
outs
out
pop
pop
and
inc
cmps
repnz
lods
and
push
cmps
sbb
adc
test
ficom
push
jle
int3
retf
hlt
(bad)
int3
sar
fmul
lea
sub
fdiv
mov
aaa
xor
(bad)
sub
(bad)
mov
aad
or
jmp
push
jge
xor
retf
loope
cmp
out
fwait
outs
scas
out
mov
dec
pop
mov
adc
sub
push
sub
lods
retf
sahf
dec
aam
mov
pop
pushf
mov
test
mov
inc
jmp
shl
mov
mov
cmp
stc
bound
(bad)
push
rcr
clc
nop
lods
adc
mov
inc
jo
inc
outs
dec
xor
popf
test
sub
or
ror
ror
lock
add
in
adc
(bad)
cmps
adc
cdq
cdq
pop
and
xchg
add
cli
iret
cmp
mov
adc
push
jmp
push
int3
adc
mov
popa
movs
dec
lea
and
pop
xor
jae
xchg
sub
pop
cdq
fcom
add
or
sahf
lock
mov
jb
mov
sub
stc
adc
dec
into
jbe
mov
mov
cmp
or
int
(bad)
stc
push
sub
aam
adc
mov
movs
shl
enter
cmp
aaa
cmp
ret
mov
mov
stos
push
scas
jae
icebp
jnp
jbe
mov
xchg
outs
push
cmp
pop
shl
jp
(bad)
shr
mov
push
push
push
hlt
cld
adc
mov
scas
jle
popa
push
lock
jb
loopne
and
push
div
repnz
sub
adc
jns
out
mov
inc
push
out
push
push
cmp
pop
push
xchg
test
out
retf
inc
mov
rol
sub
inc
mov
fwait
mov
sbb
into
lea
rcr
iret
popa
push
add
dec
push
pop
cmp
jle
sub
mov
loop
adc
dec
pop
mov
popf
rcl
cmp
fadd
push
cmps
int
sbb
dec
sbb
repz
sbb
repnz
mov
dec
push
out
inc
xor
add
xor
imul
pushf
jns
add
aaa
addr16
nop
movs
mov
into
mov
test
and
cmp
fcom
les
sbb
out
loop
mov
mov
xlat
sub
pushf
fsubr
inc
cmp
mov
mov
inc
int3
fisubr
test
sti
add
test
mov
dec
and
sbb
mov
jg
repnz
mov
jae
movs
(bad)
icebp
lahf
lods
mov
pop
pop
int3
std
sub
dec
inc
mov
xchg
out
mov
and
xchg
inc
sbb
mov
aad
dec
push
sti
test
data16
sbb
outs
mov
sbb
push
out
jmp
mov
lahf
inc
mov
arpl
sub
and
jg
dec
cli
fistp
and
sbb
push
inc
xlat
stos
mov
xor
pop
sbb
push
dec
(bad)
inc
mov
retf
test
add
movs
jae
(bad)
std
mov
test
pop
sar
dec
mov
lods
mov
push
enter
leave
push
jno
or
fistp
mov
dec
pop
inc
mov
and
call
adc
adc
dec
xchg
ret
cmp
out
mov
stos
jg
js
iret
mov
sti
cli
imul
push
xor
mov
ja
cmp
xchg
pop
inc
mov
or
out
fwait
outs
push
inc
std
xchg
(bad)
push
ds
pop
and
mov
mov
outs
mov
adc
jns
scas
push
xor
js
jns
cdq
pop
je
jns
fnsave
mov
mov
cli
popa
loope
imul
dec
xchg
mov
cmp
pop
out
xor
push
jno
ss
dec
dec
fnstcw
pop
sti
lds
or
mov
sbb
stos
les
xor
pop
das
xchg
sub
rcl
jmp
jecxz
dec
mov
jmp
sbb
jmp
xor
lea
push
cmp
pop
(bad)
and
dec
and
int
fld
in
xchg
(bad)
xor
(bad)
or
or
into
pop
arpl
cmp
(bad)
mov
repnz
aas
add
stc
outs
cmps
xor
lock
movs
cmp
cli
pop
mov
fwait
aam
jg
or
sub
xchg
jnp
iret
shr
jnp
mov
ror
inc
mov
(bad)
jecxz
and
lock
vsqrtsd
sub
jl
mov
cmp
mov
dec
sub
shl
ins
mov
mov
push
(bad)
js
mov
call
stc
scas
push
std
into
test
out
jp
adc
cmc
pop
and
es
sub
xchg
jmp
ror
fcmovne
std
test
lahf
mov
dec
inc
sti
pop
lahf
mov
sub
sahf
ret
mov
sub
scas
pop
addr16
ret
lock
sbb
mov
aad
push
dec
out
sub
mov
mov
cmps
inc
mov
lock
pop
add
push
xchg
xor
ins
lock
js
mov
hlt
js
mov
js
ds
rcl
sub
mov
and
movs
sub
add
pop
out
loop
ret
adc
jb
ss
lods
popa
outs
addr16
jmp
(bad)
in
test
inc
xchg
test
add
pop
jg
mov
test
stos
or
mov
call
sub
jnp
test
enter
push
int3
fdivr
fmul
push
je
scas
hlt
add
add
jg
icebp
mov
prefetcht1
add
jmp
fimul
and
or
aad
aam
mov
mov
mov
xor
adc
push
ret
out
js
bound
inc
mov
jae
mov
pusha
dec
jecxz
cmp
lock
ret
xchg
cmp
sbb
in
lock
inc
imul
push
mov
dec
or
jmp
sbb
in
ss
clc
das
cmp
je
xchg
pop
rol
into
pop
out
cdq
push
mov
repz
mov
out
leave
or
cli
fs
into
xchg
js
dec
adc
xchg
(bad)
ss
imul
adc
adc
icebp
xchg
inc
mov
cmp
test
scas
mov
fdivr
pop
mov
and
mov
mov
jbe
or
inc
inc
rcl
and
fdiv
pop
or
shl
lea
les
pop
inc
mov
lds
pusha
pop
shl
fs
cmp
inc
or
(bad)
jbe
dec
nop
ins
cmp
jne
jo
daa
xor
mov
fwait
outs
push
pop
jmp
adc
dec
aam
pop
ds
test
(bad)
retf
aaa
cmp
cdq
inc
mov
es
fdiv
int
call
repz
dec
outs
pop
les
(bad)
push
sub
add
ds
repnz
movs
pop
ja
adc
pop
fdiv
sbb
cmp
es
stos
or
sbb
js
adc
test
test
out
ja
and
fs
cmp
loopne
mov
adc
dec
mov
mov
(bad)
stos
and
mov
aaa
je
stos
and
xchg
jmp
or
mov
add
and
or
xchg
xchg
nop
push
gs
arpl
out
int3
pop
rcr
xchg
jecxz
sahf
fwait
cs
nop
jae
inc
rcl
hlt
push
test
mov
push
enter
inc
fnstsw
lahf
into
or
pop
fidivr
xor
dec
sahf
xor
push
(bad)
rcl
imul
sti
push
stc
clc
sbb
bound
jo
je
adc
cdq
push
std
into
jmp
call
mov
mov
inc
pop
sub
cmp
jns
push
mov
cs
mov
xor
ret
iret
or
shl
push
dec
out
mov
cmps
pop
inc
aaa
ja
iret
mov
loopne
jne
sub
cdq
fadd
lds
lods
mov
push
loop
lds
push
aaa
ret
sbb
js
jnp
in
xor
pop
outs
shr
mov
push
in
add
pop
stos
or
push
cmps
lods
cwde
adc
jecxz
push
sbb
inc
das
cmps
push
mov
sti
sbb
push
sub
pop
sbb
aaa
mov
lahf
xor
les
mov
jl
xor
es
mov
(bad)
(bad)
xor
cmp
cld
dec
jmp
jmp
test
popf
fwait
mov
jmp
jnp
dec
fldcw
jbe
ret
and
enter
(bad)
cwde
dec
push
fdiv
ss
out
push
xchg
push
dec
sbb
xor
cmps
and
stos
sbb
ret
mov
(bad)
movs
out
scas
inc
and
call
cmp
jg
ins
outs
xchg
sbb
and
push
mov
ins
popa
test
int
(bad)
loope
sbb
pop
xor
shl
xor
ins
adc
in
cmps
mov
mov
cmp
cmp
jmp
(bad)
imul
loopne
inc
mov
scas
adc
and
fisubr
sar
shl
inc
jg
jns
or
xor
sbb
retf
cmp
stos
cmps
in
daa
push
scas
clc
xchg
jp
sub
imul
sub
daa
cmp
sar
mov
sub
add
pushf
enter
(bad)
in
jno
ins
inc
cli
jnp
add
clc
dec
mov
hlt
movs
adc
cmp
adc
scas
or
push
mov
shl
push
mov
arpl
pop
cli
movs
(bad)
in
mov
mov
adc
pop
sub
aaa
lods
dec
popf
daa
push
pop
arpl
mov
lods
mov
fist
imul
ins
outs
or
dec
inc
or
pop
mov
mov
pop
shl
pop
jl
stos
add
in
inc
fimul
mov
adc
shl
(bad)
dec
popa
mov
cmp
mov
mov
mov
pop
dec
je
ds
dec
mov
out
or
push
inc
jns
aam
or
mov
and
rcr
sub
mov
fnstenv
std
mov
shl
or
xlat
ss
and
and
rcr
in
lahf
lock
pusha
xor
dec
mov
(bad)
ins
hlt
(bad)
push
dec
jecxz
int3
mov
das
out
push
xor
mov
cmp
jl
sbb
or
and
sbb
or
mov
mov
jle
pcmpeqb
cmp
cmp
mov
leave
push
scas
inc
xor
mov
push
fdivrp
pop
inc
les
test
pop
add
mov
dec
and
mov
push
inc
not
icebp
push
rcr
(bad)
icebp
and
and
pop
push
and
in
lods
inc
push
stc
rcl
sbb
pop
and
daa
imul
mov
jmp
xchg
push
fsubr
sub
outs
cmps
fild
ja
ins
pop
enter
mov
xor
pop
push
aad
adc
push
cdq
adc
icebp
cmp
mov
sar
pop
push
pusha
movlps
or
out
ja
mov
daa
cwde
mov
retf
data16
xor
jnp
stos
iret
jno
mov
jecxz
jae
fisubr
out
mov
fbld
movs
cli
(bad)
cmp
cmp
rcl
push
xor
cmp
pop
push
es
xlat
test
scas
pop
repnz
and
push
xlat
in
cdq
mov
adc
dec
out
push
pop
fwait
aam
repnz
xchg
lahf
or
ss
shr
push
dec
dec
pcmpeqd
xchg
movs
std
add
out
add
ins
pop
sub
inc
movs
fwait
add
adc
jbe
xchg
sbb
jo
cmp
jb
outs
fwait
ret
adc
rol
mov
jmp
cmc
aam
jo
adc
xor
sub
dec
daa
ss
test
adc
ror
neg
sub
out
sub
pop
repz
cmps
pop
popa
nop
fcmove
pop
push
jbe
xchg
mov
and
pushf
push
movs
pop
pop
es
jno
and
xlat
test
xchg
sub
add
in
mov
call
or
sbb
ins
jle
xor
adc
(bad)
(bad)
imul
pop
or
xchg
mov
fnstcw
lea
out
xor
movs
pop
ds
sbb
pop
jecxz
clc
stos
retf
rcl
push
xor
(bad)
int3
hlt
xchg
jg
push
mov
out
and
shl
ret
sbb
inc
add
pop
xchg
pop
fcomp
jp
push
pop
scas
int3
adc
loop
out
mov
stos
cdq
adc
mov
dec
push
out
fwait
mov
daa
mov
inc
sub
popa
mov
mov
xchg
mov
js
push
adc
pop
push
pop
outs
mov
dec
mov
stos
mov
out
pop
idiv
shl
jl
xor
std
in
pop
aam
push
mov
bound
push
and
dec
jo
xchg
or
mov
in
cmp
aad
sub
retf
retf
scas
out
imul
mov
mov
cmps
and
pop
mov
iret
sbb
jp
mov
jno
out
shl
icebp
ja
mov
aas
pop
movs
sbb
aaa
sbb
sub
scas
mov
int3
sbb
es
int
or
sub
(bad)
ins
cwde
cli
cmp
call
gs
inc
shr
xchg
sub
repnz
dec
jae
pop
add
sub
leavew
adc
sub
retf
jbe
repnz
lds
(bad)
shl
test
and
and
cmc
sub
or
pop
cs
fwait
jp
inc
mov
lods
icebp
and
jmp
cmps
mov
cmp
mov
mov
jp
pusha
stos
fidivr
or
pop
inc
jnp
push
adc
sub
ror
dec
outs
dec
repnz
hlt
fcmove
loop
test
inc
ret
test
enter
and
ficomp
or
sub
cmp
ins
dec
jmp
rol
call
jmp
pop
sub
lods
repnz
mov
ror
cmp
lds
pushf
dec
add
shl
loopne
jmp
(bad)
imul
nop
loop
push
mov
(bad)
rol
loop
pop
int3
adc
mov
mov
repnz
sbb
scas
mov
in
jmp
xchg
push
jle
add
popa
mov
movs
mov
ss
fsub
mov
mov
repnz
std
xchg
mov
ret
mov
sub
inc
nop
adc
mov
jg
jbe
or
ret
jg
sub
lods
xchg
sbb
stos
cdq
jl
ss
sub
push
cmps
push
inc
movs
xlat
jge
fdiv
mov
push
shr
inc
xchg
cmp
ja
ins
mov
xchg
mov
push
je
aad
test
pusha
cs
es
call
aas
hlt
jo
sti
retf
pop
mov
inc
test
fwait
std
scas
push
fcomp
and
sub
push
ins
push
es
sub
adc
and
outs
add
cmp
outs
xchg
fidivr
ss
ret
lods
mov
mov
and
and
cli
mov
ja
sbb
inc
fistp
and
cmp
out
jnp
or
les
ficom
pop
aad
icebp
pop
mov
arpl
dec
mov
inc
imul
inc
inc
ss
mov
mov
imul
sub
inc
outs
jp
add
mov
xor
inc
mov
cmp
pop
jmp
pop
fnstcw
mov
mov
or
pop
mov
iret
mov
lods
sbb
mov
(bad)
dec
mov
and
xor
sub
xor
pop
in
dec
and
stos
xor
inc
jbe
inc
outs
jp
mov
test
jnp
sbb
cld
adc
cmp
es
xchg
jp
mov
callw
add
shl
xor
and
fidivr
(bad)
mov
cdq
push
in
pop
cmp
(bad)
js
jp
inc
test
jo
test
hlt
ret
cs
jne
(bad)
xor
les
call
scas
movs
retf
pop
and
daa
xchg
xchg
addr16
leave
shr
push
mov
or
outs
mov
dec
int
pop
retf
ja
dec
adc
stos
mov
dec
call
xor
call
inc
mul
loope
push
arpl
test
jns
inc
lods
inc
mov
adc
sub
xor
shl
out
jp
mov
inc
and
or
mov
dec
and
sbb
lahf
rol
jae
hlt
mov
dec
jp
lods
xlat
out
xchg
sub
cmp
jbe
pop
push
mov
and
add
mov
repnz
adc
call
aad
pop
cmp
cmc
add
jo
pop
and
test
jmp
cmp
daa
cmc
dec
test
fwait
mov
or
mov
jae
out
mov
pop
out
movs
mov
sub
std
rol
call
and
adc
mov
fwait
cmp
(bad)
pop
jle
lods
mov
sti
pushf
movs
inc
outs
cmp
sub
xlat
nop
jp
imul
arpl
push
add
xchg
cmp
jmp
sbb
shl
cmp
in
push
aam
cli
icebp
inc
mov
sbb
inc
sub
sbb
jle
movs
push
jb
cmps
ret
outs
push
inc
or
pop
shl
out
mov
or
daa
repz
mov
pusha
test
xchg
pop
js
mov
fidivr
add
mov
pop
inc
cmp
idiv
es
push
jmp
out
xchg
push
jb
fs
dec
jl
loope
jle
nop
push
adc
xchg
pop
sub
inc
fcomp
hlt
sar
cld
ins
iret
rcl
test
dec
les
je
std
jo
jnp
imul
dec
jg
retf
or
mov
(bad)
es
push
or
push
shr
mov
cwde
mov
sub
jg
bound
or
pop
adc
and
movs
ins
sbb
imul
adc
jmp
ficomp
(bad)
loop
daa
cmp
push
bound
stos
xchg
sub
outs
fwait
xchg
xor
or
push
pop
dec
dec
les
push
mov
sahf
ss
pop
pop
adc
cmp
cwde
rol
add
movs
xor
imul
pop
imul
xchg
outs
data16
xor
dec
mov
cmps
xchg
stc
mov
popa
out
push
iret
call
addr16
bt
jmp
(bad)
int
cdq
cwde
test
adc
sub
jb
or
ret
sub
fisttp
adc
inc
push
int
jnp
inc
push
sbb
dec
sbb
frstor
in
repz
jno
jmp
mov
mov
lock
inc
add
cmp
xchg
jg
pop
fscale
out
sub
bound
mov
aaa
mov
lods
push
fadd
jg
leave
js
xchg
jo
adc
jl
adc
push
add
push
mov
pop
(bad)
rcl
ja
call
icebp
dec
and
mov
js
pop
jmp
xchg
and
sbb
in
bound
adc
repz
rol
loope
mov
fsubr
xchg
mov
loope
pusha
in
xor
adc
iret
fwait
cwde
mov
aam
xor
test
dec
inc
repz
xchg
xchg
fdivr
gs
push
and
pop
or
xlat
push
idiv
adc
sub
xor
mov
outs
push
and
mov
stos
enter
rcl
cmp
inc
mov
fnstcw
pop
aam
add
mov
dec
push
(bad)
stos
unpcklps
mov
imul
scas
push
lock
rcr
enter
fisttp
test
adc
fist
pop
outs
sub
cmp
cmc
mov
jmp
push
push
inc
dec
dec
pushf
cdq
mov
fldenv
leave
adc
or
mov
xor
ret
xchg
out
mov
add
ins
scas
shl
xor
out
in
lods
sbb
mov
push
out
xchg
sub
jb
pop
push
stos
test
pop
(bad)
(bad)
adc
mov
dec
jbe
in
cld
scas
jmp
(bad)
or
stos
daa
jb
repz
outs
mov
or
popa
pop
jl
push
mov
popf
shr
adc
in
jg
into
dec
sub
test
jmp
jl
mov
cmp
or
cmp
add
pop
shl
inc
add
loop
xor
add
adc
fwait
xchg
dec
or
call
jp
jle
sub
add
retf
cmps
jmp
xchg
xor
hlt
jmp
dec
cmc
jg
jo
outs
call
push
jge
push
leave
ret
jae
(bad)
lods
aam
cmps
adc
idiv
std
test
lds
imul
out
lahf
and
sar
mov
and
ss
rcr
xchg
sbb
je
test
mov
les
adc
jecxz
dec
std
sbb
lock
and
inc
adc
push
inc
and
(bad)
fcomp
test
outs
jge
test
mov
or
sub
cmp
mov
cdq
pop
jecxz
jns
jns
dec
cmp
cld
and
ins
aas
(bad)
pop
sbb
int
mov
mov
rcr
mov
inc
jnp
fist
and
mov
dec
pop
xchg
xor
xor
adc
xor
dec
aas
mov
xor
jae
cld
pop
arpl
loopne
xchg
xor
sub
cmps
xor
movs
mov
jecxz
pop
mov
jbe
dec
sar
mov
xlat
adc
sar
aam
dec
shr
mov
imul
aaa
push
pop
jo
sbb
cmp
add
ss
xor
cmps
jns
movs
push
shr
mov
mov
mov
sbb
add
add
cmp
aas
and
mov
cmp
adc
sub
push
clc
push
xor
js
dec
xchg
js
sbb
jge
jae
icebp
out
dec
outs
jg
retf
mov
js
out
aam
xchg
and
(bad)
push
jp
sbb
pushf
sub
or
loop
pop
cmp
ss
fsubr
scas
jnp
popf
mov
sti
adc
(bad)
loop
mov
imul
cmps
imul
pop
push
xchg
xor
ret
aad
adc
inc
inc
pop
stos
cli
inc
or
pop
or
mov
stos
and
fdiv
mov
or
fs
sub
push
in
cmp
shr
sbb
in
and
jmp
stc
mov
add
mov
fs
int
in
sub
bound
pop
pushf
dec
sbb
mov
enter
imul
ret
sbb
sub
pop
gs
push
lock
imul
(bad)
rol
popf
sbb
popa
mov
add
cmps
add
int
das
int
ins
mov
lock
neg
jb
es
sti
mov
pop
and
mov
loop
xchg
pop
mov
adc
fistp
in
mov
mov
pop
mov
outs
leave
xchg
in
inc
fbld
repnz
and
jo
popf
xchg
rcl
rcr
mov
les
push
popa
(bad)
mov
pop
hlt
sbb
add
sbb
xor
(bad)
fwait
sub
lods
lea
push
or
push
inc
pop
pop
inc
cwde
imul
arpl
xchg
sar
fimul
mov
jne
inc
aaa
pop
xor
cmp
push
add
pop
les
in
push
je
inc
push
mov
rdtsc
call
jmp
dec
mov
mov
fwait
aas
dec
sbb
aas
and
sbb
mov
push
fstp
popf
in
push
sub
test
xchg
outs
push
jecxz
rcr
pop
push
pop
sub
(bad)
jae
mov
pop
sbb
mov
fcmovnu
pop
cmp
xchg
push
lock
ins
adc
into
push
aas
add
ja
fst
dec
sti
test
xchg
retf
and
aad
rcr
cmps
add
inc
mov
jecxz
mov
cmp
int3
mov
sub
add
mov
pop
xor
imul
or
aad
mov
jmp
inc
pop
mov
push
and
cmp
rcl
repz
rcl
xor
fld
push
jmp
mov
lea
jecxz
pop
shl
push
sar
out
xchg
mov
or
xchg
jb
sbb
xchg
stos
test
sar
loope
mov
add
and
push
stos
outs
pop
add
je
sub
jmp
jge
lods
popa
repnz
mov
(bad)
aad
outs
out
add
les
xchg
iret
(bad)
ss
xchg
sbb
(bad)
sub
mov
shl
dec
pusha
stos
test
pushf
scas
aas
pushf
addr16
test
std
je
mov
(bad)
test
cmp
xchg
cmp
mov
(bad)
aas
mov
lock
or
or
push
stos
sub
test
or
scas
jl
push
inc
movs
push
aam
mov
inc
xor
sti
and
xor
push
jno
mov
mov
mov
dec
push
xor
fwait
mov
sbb
xor
mov
mov
dec
(bad)
xor
fwait
test
loope
retf
mov
mov
mov
adc
sub
jne
in
pop
jno
imul
sub
inc
mov
cwde
sub
push
data16
in
cli
inc
ret
sub
nop
inc
add
(bad)
in
mov
mov
out
mov
test
aad
pop
repnz
mov
or
cwde
mov
lods
adc
jae
inc
fsubr
loopne
test
push
inc
cmp
and
bound
xor
(bad)
cmp
and
jecxz
aad
cmp
add
repnz
test
pushf
pop
shl
pushf
rol
mov
std
push
sbb
(bad)
in
sub
dec
ja
cmp
(bad)
repnz
adc
xchg
sbb
and
dec
and
push
mov
xchg
mov
and
out
sub
aam
ror
arpl
cmp
imul
pop
and
in
daa
jecxz
mov
scas
pop
repnz
sub
dec
cdq
test
push
sbb
fistp
xchg
or
aaa
jp
lahf
dec
loope
jge
loop
push
and
adc
sub
xor
data16
add
mov
lea
push
dec
pop
push
scas
cwde
xlat
mov
test
sub
enter
test
inc
mov
js
mov
cwde
dec
mov
or
test
sahf
out
es
cld
icebp
scas
movs
outs
enter
mov
mov
jg
add
cli
jle
jae
dec
shl
sub
int
fist
inc
fisubr
mov
pop
push
push
push
jo
or
dec
les
repnz
xchg
adc
push
xchg
adc
arpl
dec
sar
cmp
ja
or
dec
(bad)
pop
rol
mov
dec
fsubr
jecxz
outs
sbb
pop
add
dec
popa
xlat
test
scas
xchg
aas
push
or
add
sti
jg
jl
iret
rol
or
je
or
mov
mov
fldl2t
lods
movs
pop
enter
fadd
push
pop
push
das
arpl
(bad)
in
adc
fnstenv
lock
jle
repnz
xchg
or
jmp
pop
push
out
jp
fistp
fwait
xor
or
cs
jmp
aam
ins
loop
es
out
retf
adc
outs
fistp
shl
scas
inc
jmp
add
sbb
and
out
ja
loopne
(bad)
xchg
out
test
outs
retf
fwait
mov
mov
(bad)
leave
ss
lahf
scas
call
lods
and
fs
repnz
ret
pop
mov
lods
xchg
into
pop
sbb
push
add
adc
jae
aad
push
jns
pop
ins
and
cmp
mov
loopne
inc
sub
add
jecxz
pop
popf
mov
fdiv
call
rcr
adc
ins
push
xlat
xchg
or
xor
xchg
mov
xlat
mov
cli
in
daa
pop
mov
js
ins
pop
push
repnz
mov
cwde
cmp
clc
push
aas
cmp
(bad)
sub
ins
or
ins
pop
cmp
mov
aam
popa
add
dec
mov
cld
arpl
dec
cld
stc
or
push
movs
data16
add
(bad)
or
lds
pop
sbb
add
jmp
cmp
daa
dec
cmps
dec
dec
into
jmp
daa
add
sbb
sbb
movs
je
stos
mov
mov
dec
mov
outs
sbb
mov
ss
ins
(bad)
movs
gs
pop
xchg
xchg
stos
mov
jle
shr
sar
jle
adc
mov
cmp
std
(bad)
cmp
test
retf
and
stos
popf
aas
dec
inc
imul
xchg
mov
(bad)
lahf
dec
fs
sub
pop
xchg
ret
sub
scas
sub
imul
cli
dec
mov
push
mov
push
xor
and
xor
pushf
dec
xchg
lock
or
neg
out
push
mov
ja
fs
es
add
pusha
sbb
xchg
xor
add
retf
jmp
(bad)
iret
into
push
or
ror
xor
test
das
(bad)
shl
out
sbb
adc
cmps
xor
sbb
int
nop
loope
mov
nop
or
sub
pop
js
retf
and
pusha
retf
mov
inc
jne
and
adc
jae
pop
icebp
fsubr
(bad)
fdivr
fistp
sub
mov
jl
popa
xor
lods
out
push
push
bound
jns
xor
xchg
or
or
push
xchg
jno
out
inc
sub
dec
xor
add
xchg
and
jmp
pushf
dec
push
jno
rcl
xchg
or
or
fcomp
(bad)
pop
test
and
mov
js
test
jecxz
mov
jp
out
pushf
sbb
jbe
xchg
shl
lea
ins
sub
xchg
cmp
mov
pop
in
mov
outs
jmp
(bad)
mov
cmp
sar
push
add
test
neg
pop
dec
stos
ud2
pop
push
shl
hlt
xchg
push
pop
test
lock
cwde
sub
leave
push
mov
loope
retf
push
mov
fistp
fld
arpl
imul
adc
and
and
mov
lds
and
std
mov
(bad)
jmp
mov
xlat
mov
ja
fwait
push
in
mov
jbe
(bad)
dec
repnz
sbb
inc
aaa
test
fsub
repnz
outs
ficom
jmp
imul
lods
push
xor
jmp
push
mov
loopne
sti
jmp
js
push
fld
push
loope
aad
out
pop
inc
adc
jg
jnp
jae
mov
cli
shr
pushf
pop
in
out
rcl
loope
xchg
lods
sbb
mov
sbb
xor
pop
mov
stos
out
neg
xor
sahf
addr16
sub
cmc
das
cmp
push
hlt
sub
les
cli
pop
and
sub
jp
into
fsub
cmp
push
mov
push
repz
add
lahf
stos
adc
pop
pusha
xchg
movs
ret
cld
add
pop
pop
jo
dec
test
addr16
jne
rcl
adc
out
out
jmp
add
and
cs
fmul
mov
in
push
fisttp
push
xchg
stc
mov
enter
fs
dec
mov
test
in
sbb
fsubr
jl
adc
push
and
pop
xor
pop
and
es
adc
dec
push
adc
push
adc
idiv
pop
pop
stc
push
xor
call
xchg
fistp
(bad)
iret
imul
inc
adc
ret
pop
(bad)
adc
add
ret
mov
and
add
das
cmc
and
test
cli
xchg
cli
push
dec
stc
push
add
sbb
sub
jmp
js
sub
int3
cmp
add
lock
aad
aaa
mov
mov
mov
ins
adc
xor
cmps
and
fldcw
clc
test
or
add
lods
jmp
adc
cmp
sbb
push
cmp
sub
mov
sti
mov
pop
ja
mov
xchg
xor
mul
jns
dec
repnz
cmp
and
rcl
repz
mov
inc
cs
mov
not
xor
mov
in
pop
std
and
or
stc
sub
test
fst
dec
outs
xchg
retf
ins
rcl
dec
mov
mov
xchg
mov
fbld
mov
mov
call
pop
jns
cmp
(bad)
cmp
mov
cs
xchg
dec
push
inc
push
cmp
cmp
outs
cmp
jmp
push
dec
mov
call
in
in
pop
xlat
rcl
js
xchg
jg
ins
test
fwait
cld
push
cdq
push
es
retf
xchg
arpl
sar
jb
outs
in
mov
fsub
xor
pop
inc
or
pop
xchg
xchg
push
add
or
outs
pusha
inc
mov
cld
mov
mov
cmp
xchg
fadd
int
jg
jecxz
dec
sub
jle
aam
xor
mov
xor
test
sub
xchg
dec
sub
imul
in
xor
hlt
call
jbe
inc
sbb
sar
mov
imul
inc
movs
bsf
pop
cmp
lods
dec
dec
aad
inc
test
fisttp
popa
rcl
jecxz
out
adc
pop
and
xor
outs
or
cmps
or
in
xor
retf
popa
pop
imul
cld
inc
movs
lahf
mov
stos
adc
lea
mov
hlt
mov
xchg
push
rcr
push
mov
scas
jo
ins
cmc
pop
pop
ds
jae
jbe
mov
repz
mov
loop
mov
sub
cli
and
into
add
(bad)
xchg
daa
sbb
(bad)
sub
sub
pop
(bad)
jmp
and
xchg
mov
cmp
arpl
cmps
mov
aad
or
jne
xor
pop
in
gs
arpl
and
sub
sti
dec
fild
jle
rcr
inc
(bad)
jg
mov
jle
mov
sar
fnop
inc
jbe
mov
push
mov
aad
pop
outs
jmp
and
pop
mov
xor
scas
outs
add
cmp
lahf
int3
stc
inc
jnp
(bad)
in
sbb
jle
or
sub
(bad)
aam
outs
movs
shld
inc
sub
push
adc
or
ficomp
fistp
and
scas
mov
or
inc
sbb
or
or
mov
ins
mov
adc
popa
fcomp
aam
jae
js
lds
rcr
sub
gs
fisubr
fnsave
cvtdq2ps
xor
xchg
outs
push
outs
rol
outs
cmp
inc
shr
cmp
sbb
std
sub
or
(bad)
rcr
pop
ret
cdq
sub
dec
fs
stc
stos
and
and
mov
ret
clc
mov
(bad)
pop
xor
nop
push
addr16
stos
pop
xlat
fdivr
jle
(bad)
hlt
outs
lahf
neg
sahf
push
sti
sub
cli
lds
inc
pop
xor
push
sub
cmc
pushf
and
push
in
xlat
stos
jle
sar
shr
popa
idiv
or
lock
test
out
mov
lahf
xchg
and
xor
xchg
cld
pop
fdivr
fdiv
ret
or
jmp
mov
scas
aas
je
cmp
xchg
loop
daa
xchg
sbb
hlt
mov
pop
mov
adc
(bad)
test
shl
(bad)
jmp
sbb
mov
inc
or
sub
into
enter
sahf
call
es
pusha
xchg
dec
cmp
bound
dec
lds
cld
sbb
push
adc
jmp
mov
retf
je
xchg
pusha
fld
cli
dec
inc
mov
mov
or
scas
in
(bad)
daa
enter
push
lock
ret
inc
pushf
xor
xchg
sub
imul
inc
sbb
cli
jne
mov
inc
lahf
cmp
jo
sub
inc
rcl
(bad)
int
sbb
out
enter
inc
mov
inc
shr
pop
xor
xor
pushf
inc
add
out
(bad)
les
mov
loop
mov
push
(bad)
cmp
jmp
mov
int3
repnz
inc
mov
xchg
or
out
jno
cmp
je
pop
test
addr16
jmp
dec
popf
enter
or
push
dec
adc
fs
pop
xchg
jle
call
int3
xchg
fwait
mov
jae
jnp
xor
lock
into
or
adc
sub
push
pop
(bad)
lock
outs
and
mov
cmp
push
push
enter
pop
cli
fmul
jge
and
into
(bad)
fisttp
and
pop
adc
and
(bad)
(bad)
sub
mov
pop
sahf
cs
movs
call
not
shl
xor
call
or
cmp
push
movs
inc
call
or
sub
xchg
out
imul
retf
and
movs
jae
scas
pop
cli
sar
mov
nop
retf
pusha
dec
mov
mov
inc
xor
out
xor
test
cmp
mov
nop
mov
push
(bad)
sub
in
movs
cmp
je
fcom
inc
jmp
cmp
push
xchg
pop
out
mov
(bad)
jnp
cli
lods
fcom
call
mov
xchg
(bad)
sub
inc
jo
dec
pop
stos
adc
pop
(bad)
xchg
add
and
push
or
sub
lods
not
movs
in
cmc
jns
dec
fsubr
adc
(bad)
and
xchg
cmps
pop
cli
repnz
loop
stc
fsub
call
push
rcr
cwde
mov
loopne
jae
push
lahf
sbb
pop
mov
adc
jecxz
call
push
loopne
gs
push
cmp
pop
push
cmp
inc
push
xor
mov
pop
jbe
jne
gs
mov
xor
std
cmps
test
mov
lahf
rcr
mov
outs
jnp
jmp
dec
push
in
sbb
ins
ja
add
adc
cmp
or
dec
xor
mov
and
aaa
clc
fs
jmp
jp
sbb
sub
pop
stos
xchg
ror
fidivr
pop
mov
dec
mov
fbstp
(bad)
jb
sub
mov
dec
and
add
std
pop
jge
test
in
aad
(bad)
pop
aaa
ficom
ror
je
in
mov
mov
out
iret
and
outs
mov
std
mov
loope
pop
aas
(bad)
fdiv
cdq
mov
(bad)
fmul
xchg
pusha
imul
mov
fcomip
jp
cmp
mov
inc
pop
jmp
jg
or
mov
mov
jmp
push
loope
ins
mov
fisttp
push
ss
hlt
js
push
jl
sar
into
mov
in
xchg
mov
data16
jnp
mul
pushfw
or
test
popa
add
sub
mov
push
sar
out
test
dec
jl
push
cmp
xor
nop
imul
test
stc
es
pop
aas
loopne
jae
cmp
pop
ja
cmps
push
stos
mov
add
mov
mov
push
jp
jg
push
loopne
sbb
add
jp
iret
mov
in
pop
mov
xor
arpl
push
scas
retf
mul
shl
xchg
std
jbe
push
mov
mov
in
sub
ss
rol
mov
aaa
es
popf
cwde
fistp
movs
mov
les
xchg
fwait
xor
sti
repz
mov
mov
jno
mov
push
jne
cmps
sahf
xchg
push
pop
into
cmps
mul
in
sbb
ficomp
movs
jmp
std
jmp
mov
push
mov
in
mov
lods
mov
push
retf
imul
jmp
mov
cs
ins
push
lahf
fild
jb
lock
jne
push
pop
lds
add
iret
(bad)
aad
and
cli
aam
aam
daa
jmp
mov
mov
out
sub
cwde
pop
xchg
fiadd
cmp
inc
jns
into
jle
or
mov
in
sahf
test
xor
call
cmps
xor
add
(bad)
test
or
mov
or
cmps
outs
sbb
sti
push
out
pop
arpl
jae
mov
pop
mov
nop
(bad)
stos
hlt
fsub
aad
cmp
stos
mov
xlat
cmp
imul
pop
sahf
cmc
dec
fisubr
inc
sar
cmp
add
sbb
imul
pop
mov
jmp
pop
outs
add
idiv
lahf
xor
sti
shl
(bad)
mov
mov
or
in
in
xchg
fistp
dec
push
inc
add
xchg
adc
push
and
in
inc
add
ss
mov
add
jle
fcomp
mov
aad
and
pop
popf
jp
sbb
add
xor
jmp
dec
mov
and
add
shr
xor
mov
es
sahf
(bad)
dec
(bad)
stos
(bad)
ds
lock
xor
hlt
mov
xchg
dec
arpl
enter
imul
sbb
mov
fwait
pop
lahf
inc
xor
adc
sbb
fisubr
and
jmp
xchg
cwde
add
fidivr
sub
mov
xchg
jp
adc
(bad)
jns
or
fwait
mov
fsub
ins
and
fwait
xchg
jg
jmp
push
inc
mov
test
out
in
popa
cmps
lods
mov
and
in
pop
jno
ins
loope
inc
adc
fldcw
mov
sbb
gs
shl
(bad)
xchg
jle
cmc
or
jno
cld
and
jg
fistp
jne
jb
jnp
sub
sub
and
cmps
iret
dec
sar
fmul
fs
fucomp
fst
popa
add
and
cmp
das
loop
mov
cmps
mov
sti
scas
movs
out
ja
mov
cmp
pop
icebp
loopne
and
inc
jb
inc
in
daa
add
(bad)
dec
fdivrp
jae
mov
dec
dec
pushf
and
inc
adc
scas
and
dec
outs
adc
and
xchg
in
xchg
sub
out
sub
and
or
jns
fwait
je
mov
inc
push
fs
fcom
fst
div
mov
das
bound
xlat
inc
call
into
aam
jmp
sub
xor
mov
in
into
pop
int3
inc
dec
fs
inc
dec
(bad)
jge
js
mov
mov
fiadd
pusha
shr
sbb
sub
jb
cmp
mov
popa
push
inc
mov
push
lods
jnp
pop
push
jge
sar
in
or
jmp
inc
jmp
adc
ins
scas
mov
ins
add
mov
add
sub
shr
mov
ret
push
pop
jo
outs
inc
cdq
mov
loope
mov
sahf
mov
or
das
and
pop
and
(bad)
lods
xchg
stc
mov
add
stc
pmovmskb
sub
jne
mov
fld
test
in
lahf
inc
inc
dec
mov
mov
sub
push
pusha
fsubr
shl
mov
mov
shr
test
mov
test
dec
imul
xlat
add
in
pop
and
cmc
stos
sub
fimul
sub
call
add
xor
mov
mov
sub
jmp
pusha
xchg
iret
ret
dec
jmp
ss
popf
repz
adc
inc
sub
jno
jnp
fcomp
(bad)
xor
sub
push
inc
push
and
jecxz
lds
stos
outs
stos
sbb
jnp
daa
fnstenv
sub
stc
cdq
push
movs
nop
ja
xchg
add
lds
out
loope
ret
add
in
(bad)
cwde
mov
and
mov
mov
mov
bound
dec
mul
or
xor
inc
in
and
push
sbb
imul
ins
mov
out
adc
mov
xchg
mov
cmp
stc
std
mov
jo
jle
das
fdivr
dec
push
mov
pop
mov
test
sub
cmc
cmps
fadd
mov
icebp
mov
in
pop
push
inc
push
and
scas
daa
sub
mov
(bad)
push
mov
add
ffreep
jp
pop
jg
mov
gs
cdq
cdq
sub
inc
adc
fnclex
add
call
outs
mov
xchg
xor
adc
in
xor
cmp
jge
push
inc
or
shl
les
jmp
adc
sub
stos
shl
xor
sub
xor
xchg
sbb
sub
mov
stos
or
sub
fidivr
aas
fsincos
sar
ds
inc
and
fwait
mov
push
dec
aas
ja
dec
inc
lea
and
jo
pop
cld
shr
pop
ds
ret
push
jb
jge
out
or
xor
call
stc
popf
ret
lods
push
cmp
(bad)
push
xlat
sbb
mov
jno
mov
repz
mov
add
mov
mov
sbb
in
cmp
retf
lea
push
pusha
cli
inc
out
mov
xor
mov
pop
das
xlat
retf
mov
jge
or
jecxz
push
pop
ins
push
and
lods
loopne
pop
aad
pop
jge
add
adc
xor
add
xchg
mov
loopne
fistp
push
and
les
je
leave
clc
jno
push
xchg
mov
push
mov
jg
pop
(bad)
mov
inc
push
data16
inc
ins
inc
push
pop
mov
mov
movs
in
fs
add
imul
mov
jns
cwde
daa
jo
mov
xchg
pop
cmp
lock
sub
popf
sbb
cmp
sub
and
jns
pop
loopne
adc
loope
mov
cs
adc
ins
dec
cmp
fiadd
sub
out
mov
fwait
jg
and
or
or
cmps
cwde
pop
(bad)
jb
jge
add
dec
jp
nop
enter
mov
xchg
cmps
fnstcw
mov
xchg
shl
repnz
mov
popa
mov
lock
hlt
xor
lahf
(bad)
ds
jmp
cmps
(bad)
sub
push
pop
cwde
ret
pop
dec
repnz
jne
push
or
shl
out
pushf
mov
push
pop
fsubr
push
sar
mov
enter
fidiv
ficom
push
ins
fnstcw
add
and
cmc
int
jns
jo
stc
out
test
fsub
in
pop
xchg
mov
sub
push
pushf
adc
mov
addr16
cmps
sbb
xchg
and
fsub
outs
push
in
aam
push
mov
mov
and
fild
int3
jl
arpl
jge
inc
movs
(bad)
icebp
int
mov
inc
(bad)
add
movs
xor
jg
dec
aad
sbb
pop
sahf
push
and
imul
addr16
add
cwde
les
xchg
cwde
scas
add
jnp
call
inc
test
xchg
or
fs
shr
cld
jp
pop
pop
es
repz
jnp
enter
pop
push
push
std
loop
adc
and
clc
sub
or
adc
mov
dec
(bad)
xor
cwde
neg
into
fnstcw
aaa
xlat
mov
inc
xchg
push
outs
sub
jp
push
add
sub
and
ins
pop
(bad)
in
rcl
push
lea
sbb
std
icebp
sar
jmp
data16
test
inc
call
and
dec
ret
inc
or
iret
fadd
nop
sub
mov
outs
sahf
mov
popa
dec
imul
int
rcl
pop
mov
(bad)
imul
fcom
xor
aam
and
lds
cmp
xor
daa
js
cmp
ret
adc
jnp
scas
icebp
in
pop
dec
popa
xchg
mov
aaa
cmc
scas
add
or
mov
aaa
push
sti
or
retf
cdq
(bad)
ins
sub
mov
xlat
fidiv
sbb
push
mov
cmp
dec
and
int
or
xchg
or
call
lea
and
popa
mov
sbb
push
sar
inc
in
xor
cmc
sbb
repnz
in
mov
not
adc
sbb
fchs
rep
ins
xchg
retf
stc
in
dec
bound
mov
push
fnstcw
in
fdivr
dec
xor
jle
outs
jecxz
pop
sbb
xor
fstp
add
push
sub
and
das
and
sub
xchg
mov
ficom
mov
mov
push
sbb
mov
xchg
xchg
loopne
jno
push
jle
stc
mov
jne
(bad)
cmp
test
in
mov
mov
mov
xchg
dec
jno
arpl
xchg
cmp
mov
mov
sbb
mov
and
ss
int
adc
rcr
daa
test
lods
ret
and
push
pop
mov
in
and
xchg
xor
ret
jmp
xchg
mov
fist
fsub
inc
jg
mov
push
cdq
sub
jns
xor
out
cmp
or
ins
adc
push
sbb
xchg
xchg
scas
popa
mov
out
jnp
jae
sub
or
std
fidiv
(bad)
xor
jae
xchg
jle
sbb
push
std
inc
repz
(bad)
mov
shl
pop
push
cld
in
inc
out
push
cdq
in
cmp
and
in
mov
xlat
jne
lldt
sub
imul
dec
mov
mov
fwait
xchg
cli
fcom
(bad)
in
out
or
