dec
in
mov
xor
int3
mov
sub
jae
push
in
ins
cmc
cs
jl
enter
lahf
idiv
or
sub
shl
sbb
sub
cmc
pop
sub
jl
cmps
mov
cmps
nop
je
pop
(bad)
inc
pop
in
pop
or
inc
dec
or
in
je
fs
inc
lahf
int3
jl
sti
aaa
sub
and
lods
sbb
enter
xchg
and
out
popf
cmc
cdq
jg
sub
inc
enter
pop
ins
cmp
aaa
or
push
jl
xchg
and
ja
nop
and
xor
cmc
leave
dec
nop
je
sahf
sub
cmps
xchg
jo
imul
jl
xor
ds
cmp
sub
jl
and
jl
enter
inc
cmp
sbb
js
jl
lea
and
je
xor
jl
sub
jo
scas
mov
js
mov
pop
ins
cmps
lea
fistp
ds
popf
nop
imul
imul
enter
imul
sub
jge
push
inc
adc
jl
std
dec
int3
outs
enter
cmc
inc
int3
outs
enter
js
jl
xchg
and
jb
and
or
push
push
cld
test
shl
cmp
int3
icebp
pop
cmp
das
xchg
out
add
mov
aas
jo
pushf
repz
mov
icebp
and
push
adc
dec
mov
inc
fcom
cmp
adc
(bad)
mov
sub
int3
ds
jl
sub
ja
jg
jl
scas
or
jne
mov
jns
pushf
mov
enter
and
sub
(bad)
mov
sub
jl
enter
xor
dec
cmp
ds
rol
jl
dec
mov
int3
outs
enter
enter
int3
les
enter
xchg
daa
cmc
rcl
ds
or
leave
jl
sub
xchg
fld
js
jl
ret
sbb
xchg
stos
dec
imul
mov
ds
push
ins
cmp
cwde
sbb
or
jl
sub
nop
ins
jg
sub
dec
and
and
jl
cmc
in
(bad)
call
enter
mov
js
jl
call
imul
add
ds
std
pop
int3
outs
enter
js
jl
in
push
cmp
enter
ror
movs
test
jl
add
jl
or
sub
jl
push
mov
sub
mov
or
movs
xor
movs
movhps
push
jg
enter
enter
mov
xchg
xchg
pop
enter
dec
xchg
(bad)
cmps
cmc
test
das
cmc
stc
fdivr
and
mov
shl
sub
and
jge
mov
aaa
sub
les
or
xchg
cwde
pop
enter
mov
ds
dec
dec
test
aad
jl
dec
mov
jl
mov
xchg
pusha
xchg
out
jl
aas
fwait
cmc
test
inc
mov
leave
fdivr
sbb
mov
out
popf
cmc
cdq
scas
and
sub
push
ins
mov
xor
mov
mov
enter
(bad)
jl
sub
jl
sub
or
mov
jl
movs
push
std
mov
jl
and
or
sbb
or
mov
or
and
add
sar
jl
and
or
jge
iret
les
enter
inc
test
movs
cmovge
popf
cmc
cdq
jge
sub
outs
mov
sbb
adc
enter
enter
aaa
or
add
jne
mov
dec
sbb
or
aaa
or
enter
aaa
or
sub
mov
js
enter
mov
ja
in
mov
test
or
cmc
leave
dec
nop
ins
jg
sub
pop
(bad)
(bad)
in
adc
xor
hlt
stc
movs
cmc
out
aaa
jns
cwde
mov
cmp
dec
jl
inc
dec
sbb
hlt
inc
mov
ds
adc
xor
sub
ret
mov
or
aaa
cmp
ror
or
cmp
cmp
imul
xchg
sbb
mov
inc
cmp
dec
mov
ins
dec
inc
jge
mov
rol
and
mov
cld
adc
jl
aad
cmp
enter
xchg
mov
jns
cdq
les
enter
cli
or
sub
cmps
mov
mov
add
dec
cmps
dec
add
or
jmp
ror
or
outs
enter
inc
mov
cld
adc
jl
aad
mov
jge
aaa
cmp
mov
(bad)
test
inc
push
jge
aaa
cmp
pop
add
shl
cmc
mov
shl
add
dec
jns
sub
cmp
jl
aaa
and
ja
mov
das
jp
mul
and
jbe
fcomi
mov
cs
cmp
inc
mov
xchg
addr16
jl
mov
(bad)
inc
mov
jnp
xor
out
lods
and
dec
inc
push
add
inc
cmp
fs
xchg
daa
mov
popf
cmc
cdq
jge
das
sub
and
lea
les
jl
fld
cmc
cmp
stc
mov
sub
test
dec
fsubr
mov
xor
mov
cld
xchg
cmc
mov
cmp
cmp
mov
sub
enter
cmp
fs
lea
cmc
jns
and
ja
mov
das
jp
test
jmp
or
std
imul
jns
jl
jl
aas
xchg
pusha
cmps
lea
int3
inc
cmc
(bad)
loope
mul
jae
cmp
inc
lods
pop
int
mov
adc
lea
cmc
jns
dec
mov
out
popf
cmc
cdq
jge
sub
pop
rol
sub
cmc
aam
test
jmp
jns
cwde
mov
les
int
jl
les
adc
cmp
jnp
and
pop
xor
add
cmp
add
add
sub
and
dec
pop
inc
ja
test
inc
mov
adc
enter
mov
and
das
sub
mov
jl
xor
test
enter
xchg
daa
and
popf
cmc
cdq
jge
das
sub
or
cmp
sar
sub
mov
jmp
inc
loopne
mov
ret
fucom
(bad)
cmps
rol
js
mov
das
je
popa
jns
sub
fwait
cmc
imul
or
sub
and
sub
and
ja
mov
nop
or
sub
cmps
mov
xchg
lods
aas
cmps
xor
sub
sbb
mov
jl
mov
fcomp
or
enter
fidivr
jl
aas
fwait
cmc
imul
cmc
imul
sub
sub
jl
int3
push
jl
lea
sub
mov
jae
or
cmp
sar
int3
sub
mov
ds
into
or
sub
jl
sub
mov
jl
stc
mov
mov
in
mov
xchg
jae
and
std
(bad)
and
mov
jns
cdq
les
jge
les
or
sub
sub
xchg
mov
movs
jge
inc
mov
ds
cmp
dec
mov
ds
fld
mov
les
jmp
fist
jl
adc
adc
cmc
mov
outs
enter
imul
neg
sub
push
movs
movs
or
pop
mov
ds
mov
icebp
stc
int
add
add
jl
mov
ds
dec
popf
adc
sub
inc
xor
inc
shl
jl
pop
(bad)
call
imul
sub
sub
enter
adc
mov
sub
icebp
cmp
cwde
idiv
and
cmp
jl
inc
cmp
cmp
dec
add
sub
xor
jae
jmp
sbb
mov
enter
dec
mov
sub
enter
cmp
outs
enter
in
add
outs
enter
jl
jl
lea
out
mov
jl
jne
movs
push
hlt
inc
mov
jle
inc
cmp
jl
jl
lea
rcr
fwait
xchg
int3
jl
sub
fincstp
push
shl
sub
pop
cmc
imul
sub
ds
mov
cmp
cwde
test
jl
imul
jl
dec
mov
fnsave
inc
inc
cmp
cmp
jmp
add
outs
enter
enter
icebp
stc
mov
imul
lahf
movs
dec
test
shl
cmc
mov
outs
enter
imul
neg
sub
test
imul
dec
push
fistp
sub
cmc
movs
fld
cmc
stc
cld
aaa
add
add
nop
and
add
or
jge
inc
mov
cmc
aam
test
jmp
sbb
lods
hlt
dec
js
dec
idiv
jne
pop
fnstcw
jl
inc
(bad)
cmc
aam
test
jmp
or
fsub
movs
xor
xor
inc
cmp
jg
adc
or
or
lods
cmp
icebp
push
pop
fidivr
sub
sub
mov
sbb
jl
sub
ds
xchg
movs
(bad)
xor
jbe
dec
xor
cmc
aam
test
jmp
add
js
ds
lods
enter
cmp
aam
fwait
cmc
imul
cmp
pusha
and
cmp
jle
(bad)
cmp
js
adc
add
clc
add
lods
cmp
test
sar
sbb
jae
adc
lods
cmp
jl
mov
jo
enter
inc
test
inc
mov
push
sub
jl
sub
adc
mov
jl
ja
jl
movs
lea
sub
xchg
or
enter
shl
scas
add
jl
xor
mov
fcomp
or
and
adc
push
jl
lea
mov
mov
xor
ret
rcl
aaa
or
xchg
and
in
sub
leave
jo
jl
enter
enter
lahf
(bad)
and
sbb
movs
jge
inc
mov
adc
adc
int3
mov
movs
jl
movs
dec
mov
call
and
xchg
aaa
and
test
hlt
leave
movs
cmc
out
mov
jl
les
jl
inc
stc
mov
ss
loope
cmc
out
aaa
leave
mov
ss
or
adc
xchg
jge
aaa
cmp
(bad)
inc
imul
sub
mov
(bad)
mov
jl
inc
stc
pushf
shl
sub
test
jne
pop
arpl
xchg
add
dec
mov
adc
sub
jl
dec
pushf
adc
sub
adc
push
jl
lea
inc
and
jl
hlt
leave
movs
cmc
out
inc
stc
mov
lea
sub
test
jne
and
je
enter
mov
or
xchg
aaa
(bad)
mov
movs
jne
adc
idiv
loopne
add
dec
xchg
in
enter
jbe
adc
fucom
(bad)
cmps
lock
inc
cmp
xchg
iret
jl
dec
dec
rol
cmp
jle
enter
aaa
add
enter
mov
icebp
stc
shl
add
aaa
(bad)
mov
movs
jne
adc
les
enter
inc
stc
rcl
ss
(bad)
retf
stc
sahf
aaa
add
xbegin
jae
dec
into
adc
cmp
mov
aaa
sub
jl
cmp
jl
dec
mov
into
shl
cmp
enter
jl
adc
inc
jl
jl
(bad)
stc
mov
hlt
leave
movs
cmc
out
mov
ds
cwde
fdivr
shl
(bad)
mov
sub
or
leave
adc
int3
mov
xor
xchg
pminub
cmp
les
ror
jl
es
shl
cmp
jl
sub
enter
mov
add
aaa
jl
pop
out
push
jge
jno
ds
rol
stc
mov
adc
cmp
mov
ror
jl
sub
jge
sub
fdivr
shl
(bad)
mov
sub
or
leave
adc
int3
mov
xor
xchg
xchg
fnstenv
cmp
les
ror
jl
es
shl
cmp
jl
sub
enter
mov
cmp
jo
shl
jl
pop
out
push
jge
jno
ds
rol
mov
adc
cmp
mov
ror
jl
sub
jge
mov
cwde
fdivr
shl
(bad)
mov
sub
or
dec
enter
jge
sub
(bad)
call
iret
inc
stc
aam
ss
mov
ds
cwde
fdivr
shl
(bad)
mov
sub
or
dec
enter
jge
sub
push
jge
mov
ds
sub
ins
enter
aaa
cmp
les
ror
jl
push
sub
jl
jne
adc
sub
or
inc
shl
jl
pop
aad
jge
mov
rol
cmp
mov
jl
mov
add
dec
ror
cmp
jns
jl
jl
inc
stc
adc
push
xchg
jmp
fnstsw
ds
lods
enter
mov
mov
ror
xchg
sub
jl
hlt
aas
lahf
cmc
test
inc
mov
adc
idiv
lock
add
xchg
cmc
cmp
sar
inc
stc
(bad)
shl
sub
movs
adc
sub
adc
sub
xor
leave
movs
cmc
out
dec
add
sub
jl
mov
adc
cmc
movs
sub
ins
lods
adc
jl
xchg
jo
adc
jae
mov
jl
lods
and
enter
push
jl
test
leave
jl
sub
stc
in
shl
sub
fadd
test
cwde
test
and
stc
test
sub
popf
ds
stc
in
sub
sub
jl
sub
cmp
adc
jl
mov
aaa
sub
test
cwde
test
cmc
cmp
dec
mov
jne
(bad)
stc
jge
enter
and
stc
cld
aaa
add
lock
cmp
sar
enter
aaa
add
sub
sub
inc
cmp
movs
or
add
enter
retf
jl
lods
cmp
stc
enter
jl
stc
xchg
shl
sub
sub
inc
cmp
inc
retf
jl
lods
and
jno
enter
aaa
add
adc
cmp
adc
sub
mov
or
dec
enter
enter
and
scas
and
jl
iret
inc
stc
lock
xor
aaa
leave
nop
shl
xor
xor
adc
int3
mov
xor
xchg
loopne
enter
fcomp
mov
ror
jl
test
inc
stc
in
ss
ins
add
aaa
add
jno
jl
enter
jge
adc
call
sub
jl
fild
rol
add
in
cmp
inc
movs
push
hlt
inc
mov
jae
mov
fnop
shl
cmp
adc
sub
lods
sub
jl
dec
fadd
adc
push
jl
lea
jl
sar
inc
stc
aam
sub
rol
adc
sub
movs
lea
cmc
out
dec
add
sub
js
adc
xchg
popf
sub
and
pop
sub
and
jl
scas
mov
sub
idiv
pushf
aaa
add
aaa
icebp
stc
test
add
ss
fdiv
fwait
xchg
int3
jl
sub
fyl2x
cdq
mov
nop
ins
movs
das
lds
enter
inc
rcl
sub
test
movs
movs
or
add
enter
leave
jl
scas
ins
hlt
adc
jl
test
cwde
adc
int
jl
test
cwde
test
jl
imul
shl
jae
enter
test
adc
push
jl
jge
adc
idiv
movs
aaa
add
call
movs
dec
hlt
inc
mov
jae
sub
scas
inc
dec
aaa
add
enter
mov
jae
jmp
adc
sub
cdq
mov
ror
and
mov
adc
cmc
movs
fld
cmc
stc
je
add
sub
clc
repz
jl
test
leave
jl
sub
js
cdq
js
adc
stc
adc
xchg
pushf
ds
stc
adc
dec
push
jl
dec
mov
movs
movs
or
icebp
shl
add
hlt
jge
pop
xor
stc
aam
add
aaa
icebp
stc
dec
aaa
add
test
add
scas
or
push
sub
adc
nop
pushf
ds
stc
adc
out
push
jl
dec
mov
movs
movs
or
shl
les
cmc
stc
jo
add
aaa
add
rol
cmps
dec
aam
shl
inc
stc
pushf
aaa
add
aaa
idiv
xor
cmp
jp
idiv
mov
add
sar
cli
xchg
dec
nop
adc
idiv
enter
adc
aaa
jae
div
sub
jl
sub
stc
adc
dec
xchg
adc
sub
sbb
sub
lods
adc
jl
and
lods
shl
sub
sub
jo
pop
sub
mov
shl
cmc
mov
shl
jl
and
test
sub
sub
inc
stc
movs
shl
sub
sub
inc
stc
mov
cmps
clc
sub
dec
mov
imul
cwde
test
add
popf
cmc
cdq
inc
aaa
adc
cwde
mov
fdivr
dec
imul
in
jl
sub
call
movs
lods
xchg
mov
cmp
cmp
or
sub
jl
je
jl
les
mov
jl
aas
sbb
push
sub
add
and
shl
inc
jl
jl
mov
cmp
(bad)
in
mov
jl
inc
cmp
lea
std
pop
adc
sub
xchg
xlat
jmp
add
xchg
in
imul
sbb
sub
jl
mov
lahf
ret
xchg
data16
test
jmp
cld
enter
jl
enter
mov
mov
jl
movs
movntps
or
cmc
leave
dec
nop
fs
mul
and
jmp
enter
inc
cmp
pop
jl
jl
push
call
pop
cmp
sub
mov
dec
shl
cmp
adc
cmp
je
mov
int
loope
enter
enter
add
mov
ins
enter
enter
inc
jl
ins
push
cmp
cmp
mov
(bad)
lock
enter
enter
inc
movd
sbb
enter
jno
mov
jl
lds
jns
cwde
mov
dec
inc
pop
and
xor
sub
movs
lea
cmp
sub
cld
jno
push
cmp
inc
and
jle
enter
push
cmp
ffree
push
cmp
jecxz
enter
int
jecxz
enter
add
mov
sub
jns
mov
jl
ror
jl
ror
or
outs
enter
push
cmp
dec
in
and
sub
std
xchg
sbb
lds
enter
push
cmp
cmp
and
shl
mov
push
cmp
dec
in
and
sub
(bad)
(bad)
xor
jl
int
cmp
push
cmp
adc
mov
push
cmp
dec
in
and
mov
lods
lds
enter
push
cmp
cmp
shl
mov
push
cmp
dec
in
and
jle
enter
add
mov
ins
enter
and
cmp
sub
enter
mov
push
cmp
dec
in
and
jle
enter
out
jl
lods
lds
enter
mov
cmp
sub
hlt
adc
cmp
ds
int
jecxz
enter
nop
jl
lods
lds
enter
leave
jl
lea
cmp
mov
jl
in
mov
in
dec
jno
mov
jl
lds
jl
imul
inc
mov
jl
std
enter
mov
cmp
mov
enter
and
cmp
mov
jl
popf
enter
int
enter
jns
push
cmp
jl
enter
add
mov
ins
enter
enter
or
cld
and
jecxz
sub
std
(bad)
fldlg2
jl
movs
cmp
imul
sub
outs
enter
cwde
fdivr
sub
mov
ja
iret
sbb
les
sub
cld
jl
enter
pop
jl
sub
inc
or
mov
jno
push
cmp
sub
enter
dec
ffree
push
cmp
jecxz
enter
int
jecxz
enter
out
jl
lds
enter
stc
mov
jl
add
cmc
in
aaa
jns
cwde
mov
shl
cmp
in
enter
cmp
imul
or
outs
enter
add
mov
lea
jl
movs
lea
(bad)
call
jle
mov
or
xbegin
cld
push
aas
cmp
sub
jns
mov
aas
popf
cmc
imul
cmp
sub
ja
push
int
in
ins
enter
push
cmp
cld
push
aas
jl
pusha
dec
add
sub
in
cmp
retf
lods
mov
js
in
cld
jno
push
cmp
push
in
mov
jl
sub
cmp
enter
scas
sub
imul
or
mov
jl
iret
(bad)
jns
pop
cmp
sub
jo
mov
shl
mov
imul
inc
js
adc
cmp
in
ins
enter
mov
(bad)
in
cmp
mov
push
jo
mov
shl
mov
imul
inc
js
test
jl
int
in
ins
enter
mov
(bad)
in
cmp
mov
enter
mov
imul
enter
and
xchg
cmc
cmp
inc
mov
sub
ja
jne
ret
pop
in
jl
int
enter
jne
mov
xchg
jl
movs
push
adc
xchg
mov
or
jl
imul
outs
enter
das
cmc
cmp
inc
mov
jl
and
and
fild
jl
adc
jl
and
and
fisttp
addr16
jl
and
and
fisttp
jl
jb
ds
and
and
mov
leave
test
jmp
and
scas
and
das
jp
(bad)
mov
fnstcw
out
fsubr
or
jb
jl
(bad)
aam
rcr
and
outs
enter
sar
inc
movs
push
hlt
inc
mov
icebp
imul
mov
jl
lods
test
or
sub
call
ror
cmp
ds
lods
lods
jl
and
enter
enter
leave
jl
sub
cmp
mov
enter
aaa
jns
cwde
mov
js
jl
enter
adc
mov
sub
jl
dec
jo
icebp
push
je
or
jno
jl
enter
lea
sub
cmp
mov
jl
hlt
stc
movs
cmc
out
inc
cmp
jl
jl
imul
sub
xchg
nop
dec
enter
push
icebp
cmp
sbb
or
aaa
or
inc
enter
int3
push
jp
mov
jl
lods
and
sub
or
and
and
cmp
ds
lea
imul
cmp
mov
jl
iret
inc
cmp
movs
or
and
mov
nop
xor
cmp
cmps
lea
cmc
jns
idiv
and
mov
xor
sbb
enter
popf
nop
cmc
imul
push
jge
lea
sar
cmp
pop
rol
cmps
lea
and
xor
ja
aaa
adc
cmc
test
int
enter
or
add
xchg
and
rol
sub
or
jo
sub
jae
int3
inc
inc
ror
jl
pop
cld
jae
push
enter
loopne
retf
jle
ror
jl
pop
aam
retf
jg
ror
jl
pop
fdiv
push
enter
dec
jbe
sub
idiv
cmp
cmp
inc
push
mov
call
push
nop
mov
fadd
out
(bad)
stc
jmp
enter
xor
fiadd
and
jl
enter
and
call
cmc
(bad)
dec
xchg
jg
jle
push
or
adc
(bad)
retf
cmc
xchg
jl
enter
jle
add
icebp
sub
adc
xchg
xchg
xchg
jl
and
add
icebp
cmp
scas
shr
sub
jbe
jl
inc
cmp
fdiv
sub
int
xchg
retf
cmp
cmp
cmp
test
(bad)
int3
imul
fadd
jns
enter
call
pop
mov
(bad)
je
jl
mov
jge
sbb
add
enter
int3
or
movs
xor
adc
js
addr16
test
(bad)
retf
sub
or
dec
inc
jp
mov
xchg
js
jle
jp
mov
jl
sub
ja
aam
xchg
jns
hlt
jp
pop
fdivp
movs
das
lea
lock
(bad)
int3
(bad)
mov
sub
hlt
inc
jle
lods
cmc
test
jp
mov
xchg
jle
hlt
jp
pop
cdq
cmc
test
into
jle
push
test
(bad)
int3
jae
sub
inc
xchg
sub
jl
sub
xchg
jl
enter
add
sub
int
xchg
leave
movs
inc
int3
cmc
cmp
inc
cmp
jg
sub
inc
sub
enter
idiv
jle
test
hlt
jp
pop
xor
cld
adc
jge
adc
inc
retf
cld
inc
sub
or
xor
xchg
sub
retf
hlt
inc
or
cmc
cmp
jnp
aaa
jl
sub
fs
daa
xchg
jl
cmps
popf
ins
icebp
js
jns
(bad)
dec
xchg
js
int3
imul
aaa
jl
sub
jae
fwait
xor
daa
mov
popf
cmc
cdq
scas
and
das
jp
cmp
ds
mov
adc
mov
xchg
jg
enter
aaa
xchg
jg
enter
inc
cmp
and
sub
mov
jl
enter
aaa
jns
cwde
mov
popf
ins
mov
cmp
in
cmp
stc
cmps
cmc
aam
movs
sub
pop
mov
pop
jl
jl
jle
arpl
and
mov
jl
pop
call
xchg
jb
adc
rol
jnp
fdivr
imul
xchg
(bad)
out
idiv
inc
js
mov
enter
inc
mov
loope
cmc
(bad)
leave
cmps
jge
inc
cmp
cmps
popf
mov
cmp
popa
js
mov
int
imul
leave
cmps
push
cld
inc
xchg
leave
lods
inc
int3
cmc
cmp
push
js
lds
bound
fadd
jl
add
bound
leave
lods
inc
int3
cmc
cmp
push
jnp
movs
int3
inc
jge
enter
(bad)
retf
or
and
mov
xor
sub
mov
jns
cdq
les
jl
(bad)
out
jl
fwait
sub
(bad)
into
xchg
repz
cmp
jl
cmc
jl
sub
(bad)
jmp
mov
ror
(bad)
jns
jl
jl
dec
rcr
fnstenv
test
dec
inc
jns
je
jl
mov
mov
outs
and
pop
aaa
cmp
int
shr
or
and
jae
pop
(bad)
xchg
shl
cmc
jmp
inc
add
and
inc
shr
xchg
daa
xchg
jl
cmps
pop
aam
shl
cmc
js
cwde
in
sub
retf
daa
add
lds
mov
mov
add
mov
xchg
jl
cmps
pop
fsub
cmp
in
cmp
dec
stc
pop
aaa
cmp
stc
pop
aaa
adc
(bad)
cld
inc
sub
(bad)
ds
jae
popa
aaa
add
aaa
jl
call
sahf
cs
inc
imul
clc
out
enter
pop
(bad)
xchg
shl
mov
imul
mov
pop
jl
jl
jne
mov
test
jge
sub
pop
test
aaa
cmc
stc
hlt
pop
add
enter
pop
add
or
jl
mov
cmp
adc
adc
enter
xchg
jl
movs
push
dec
movs
jl
test
aaa
cmp
or
enter
daa
add
push
add
enter
jl
jl
ins
nop
xchg
shl
jl
mov
aaa
cmp
nop
ret
aaa
add
and
shl
(bad)
mov
and
ins
cld
mov
mov
mov
dec
rol
mov
cs
sub
retf
enter
adc
jne
lods
aaa
jl
sub
push
mov
sub
push
jae
adc
cmp
jl
test
and
std
out
enter
dec
xchg
jl
call
adc
std
stc
shl
sub
jl
dec
lock
ror
jl
test
(bad)
cli
and
aaa
add
aaa
leave
movs
repz
adc
jg
sub
retf
daa
add
fstp
enter
daa
add
aaa
jl
mov
or
xchg
or
mul
fprem1
lock
mov
mov
aaa
cmp
and
int
jg
ror
mov
es
fsub
add
aaa
jl
sub
push
retf
ror
or
outs
enter
pop
add
jne
jl
ret
sub
stc
fdiv
aaa
xor
retf
push
jl
pop
loopne
shl
(bad)
mov
test
inc
stc
fdiv
aaa
xor
push
mov
pusha
das
retf
mov
dec
fsub
mov
retf
mov
dec
shl
clc
pop
add
aaa
push
pusha
mov
aaa
sub
cdq
adc
adc
mov
stc
clc
pop
add
aaa
or
cmps
dec
mov
stc
cwde
pop
add
aaa
cld
ror
add
enter
enter
pop
add
pop
les
and
jl
mov
and
sub
enter
retf
daa
add
adc
adc
icebp
test
aaa
xor
fisttp
enter
cmp
jle
fsubr
mov
cmp
adc
jl
sub
cs
mov
jl
movs
dec
int3
mov
and
jge
enter
enter
leave
jl
cmps
dec
mov
sub
xchg
jl
enter
mov
jge
dec
inc
jge
enter
enter
cmp
adc
push
jl
and
cmc
test
push
stc
fcomip
aaa
cmp
mov
cdq
sub
adc
mov
lock
add
mov
(bad)
retf
sub
(bad)
cmc
fmul
jg
lock
cmp
inc
int3
cld
inc
sub
jbe
fmul
jns
lock
and
int
enter
retf
mov
jle
jl
fdiv
aaa
cmp
imul
sub
xchg
jl
enter
int3
dec
jge
enter
aaa
icebp
cmp
cmc
stc
enter
(bad)
dec
cmc
mov
(bad)
idiv
fsub
add
fcomip
ins
imul
cwde
repz
or
dec
rcr
repnz
cmp
jmp
mov
cmp
ror
jnp
lods
hlt
inc
jge
enter
loopne
inc
adc
jl
sub
or
hlt
inc
jg
enter
fdivr
inc
adc
jl
sub
or
hlt
inc
jns
enter
retf
cmp
(bad)
push
add
mov
jge
aam
retf
xchg
adc
or
pop
add
aaa
xchg
or
aaa
cmp
(bad)
cld
ror
add
cmp
adc
imul
fsub
add
or
jg
xor
clc
cmp
mov
ins
ror
xchg
shl
std
rcr
add
sbb
jl
out
adc
stc
pop
aaa
cmp
stc
pop
aaa
adc
(bad)
cld
inc
sub
(bad)
ds
jae
add
add
popf
cmc
cdq
scas
and
das
jp
mul
and
cmp
mov
jl
imul
icebp
dec
pop
jne
jl
fnstcw
cmp
std
inc
xor
sub
icebp
add
inc
dec
stc
xchg
mov
enter
ins
icebp
add
inc
dec
call
sub
jl
fild
dec
mov
test
inc
enter
aaa
jge
imul
jg
call
or
dec
cmp
imul
ins
push
enter
sub
mov
aam
cmp
ds
(bad)
cmps
retf
jae
jns
inc
cmp
sbb
jl
lods
lea
jge
or
mov
imul
cmc
mov
aam
retf
in
mov
test
cld
imul
jge
out
dec
sahf
jnp
xor
es
xchg
sar
ins
mov
cld
imul
jge
outs
leave
mov
jnp
xor
sub
sub
retf
in
mov
cld
sub
jl
sub
sub
cmp
popf
test
retf
inc
mov
jl
es
jge
mov
js
imul
jae
scas
fwait
add
and
das
(bad)
retf
repnz
mov
jge
es
cmp
sub
cmc
mov
aam
retf
dec
jl
sub
js
imul
and
xchg
mov
jns
cdq
sub
cmps
mov
(bad)
push
xchg
cwde
sbb
lahf
cmc
imul
jl
stos
cs
inc
(bad)
jmp
aaa
cmp
adc
jl
aad
mov
inc
jo
jnp
push
into
xor
ror
add
movs
lea
in
sub
leave
jo
pop
sub
xchg
add
enter
ja
push
nop
sar
mov
int3
jl
xchg
loope
jl
aas
fwait
cmc
test
inc
mov
sbb
stc
sub
add
enter
sub
jl
enter
stc
mov
aam
test
jmp
and
jnp
mov
call
jl
mov
lea
sub
and
out
popf
cmc
cdq
scas
and
das
jp
ret
fnstcw
xchg
or
jmp
xor
adc
enter
retf
push
jl
retf
adc
sub
cld
sbb
or
enter
dec
add
enter
lea
or
dec
mov
fld
cmc
cmp
inc
mov
and
enter
dec
mov
xchg
cmp
add
cld
jl
fld
cmc
cmp
inc
mov
jo
mov
cmc
cmp
and
imul
or
and
sub
sub
lea
mov
enter
xchg
mov
jns
cdq
inc
les
sub
std
adc
(bad)
cmc
test
enter
enter
mov
jl
sub
or
and
mov
sub
mov
jno
enter
lea
sub
jl
les
sub
jo
or
mov
mov
inc
sub
or
jl
popf
sub
aaa
or
and
sub
push
jl
lea
mov
mov
ss
loopne
enter
aas
fwait
cmc
imul
les
xchg
daa
mov
popf
cmc
cdq
jge
sub
xchg
jle
push
aam
mov
jl
enter
enter
enter
aaa
or
sub
call
aaa
or
or
fwait
movs
lea
sub
jl
(bad)
sub
jl
imul
or
sahf
xchg
clc
jge
jl
(bad)
jmp
(bad)
into
cmc
test
xchg
mov
jns
cdq
sub
pop
sar
push
dec
cmp
sbb
iret
jae
sub
jge
imul
jo
cmp
cmp
inc
mov
cmp
jo
mov
sub
adc
int3
mov
fwait
jl
scas
or
dec
mul
outs
jae
int3
bound
std
pushf
ds
jmp
mov
and
cld
adc
jl
sub
js
add
mov
imul
push
int3
mov
fwait
jl
scas
or
and
mov
jns
cdq
sub
jno
test
(bad)
mov
push
lods
lea
adc
sub
jl
(bad)
das
jl
xchg
dec
add
jae
sub
sub
sbb
ds
jmp
imul
push
lds
xchg
ins
jg
jl
cmps
lea
cmc
jns
and
ja
mov
nop
or
pop
mov
inc
movs
push
hlt
inc
mov
jge
dec
sbb
sub
sbb
mov
enter
enter
inc
movs
dec
hlt
inc
mov
or
scas
mov
imul
jae
ins
retf
shl
push
les
sub
cmp
inc
mov
jae
mov
scas
or
imul
js
movs
nop
jle
cmp
push
sub
cld
adc
leave
cld
add
enter
lea
fwait
mov
imul
mov
sub
jae
imul
(bad)
(bad)
in
(bad)
jge
les
sub
js
inc
and
inc
ss
push
ss
sti
inc
movs
jge
inc
mov
retf
sub
sub
outs
push
cld
mov
jl
fwait
popf
sahf
jae
or
enter
movs
add
rol
xor
aas
popf
cmc
imul
jp
popf
je
fwait
call
into
(bad)
sar
fild
jl
inc
cmp
jg
je
popf
je
fwait
call
cmps
lea
mov
mov
mov
pushf
repnz
pop
lds
add
test
pop
or
pop
in
in
sbb
pop
cmp
mov
pop
in
in
mov
pop
in
in
ins
pop
in
in
mov
pop
in
in
pop
adc
in
mov
mov
sbb
xchg
aas
jge
in
test
pop
or
pop
in
in
sbb
pop
(bad)
mov
adc
pop
or
dec
pop
in
in
mov
fld
in
mov
enter
nop
in
in
mov
hlt
cmp
mov
enter
pop
in
in
mov
pop
in
idiv
in
mov
pop
in
(bad)
out
int3
in
in
mov
pop
in
add
pop
in
in
mov
pop
in
call
in
in
mov
pop
in
sbb
mov
xor
jl
mov
xor
jl
mov
mov
jge
mov
mov
mov
int3
in
in
mov
pop
in
in
scas
xor
pop
or
mov
pushf
repnz
pop
cmc
movs
mov
or
in
mov
pop
in
in
jl
in
in
mov
pop
in
in
fstp
in
in
mov
pop
in
in
je
in
in
mov
xor
in
sbb
pop
jge
mov
cmp
in
mov
mov
xor
pop
or
mov
sbb
movs
mov
or
in
mov
pop
in
in
jl
in
in
mov
pop
in
in
fstp
in
in
mov
pop
in
in
je
in
in
mov
jge
in
sbb
pop
jge
mov
cmp
in
mov
pop
in
in
dec
and
shl
mov
inc
cld
das
sub
and
jo
movs
lea
imul
nop
movs
lea
enter
sbb
inc
cmp
imul
mov
xchg
leave
enter
ja
jl
aas
sbb
imul
xor
hlt
jns
cld
add
enter
lea
cld
arpl
jl
imul
jl
sub
jl
and
xchg
aas
test
in
inc
cmp
inc
sub
pop
mov
ins
cmc
hlt
leave
mov
jle
jae
test
jae
int3
bound
enter
fdiv
movs
sub
fdiv
popa
xor
movs
fdiv
cmp
inc
mov
add
in
sub
jl
imul
jl
and
xchg
jge
cwde
icebp
cmp
(bad)
retf
leave
lods
sub
or
jl
mov
sub
hlt
leave
mov
jp
jl
dec
mov
jl
aas
sbb
imul
cmp
(bad)
retf
cmp
add
dec
jb
shl
and
ja
mov
nop
sbb
sub
xchg
ja
xor
inc
mov
inc
mov
jl
lds
cdq
cmc
mov
in
xor
aad
push
mov
sbb
xchg
scas
cmc
mov
or
stc
mov
jl
lea
mov
add
sar
(bad)
retf
or
rcl
cmc
aam
outs
enter
inc
add
or
aam
mov
retf
inc
mov
les
xor
jo
sub
movs
jg
or
ds
cmp
enter
imul
jmp
jg
xor
imul
fdivr
cmp
int3
fnsave
add
ds
cmp
xchg
mov
xor
cmp
inc
imul
sub
shr
jns
jne
jl
lea
sub
cmc
cmp
and
xor
test
movs
or
dec
sahf
ins
and
jne
jl
dec
xor
cmp
inc
add
(bad)
retf
scas
in
sub
inc
inc
mov
ret
jl
mov
ds
adc
in
jne
jl
and
sub
(bad)
mov
outs
enter
and
jmp
jg
cmp
imul
fdivr
cmp
int3
fnsave
add
ds
cmp
xchg
mov
cmp
mov
lea
sub
ins
jmp
js
clc
jne
jl
int
shr
cmp
mov
inc
mov
call
jmp
cmps
lds
push
inc
mov
ds
retf
sbb
shr
jno
jne
jl
les
push
daa
jge
sub
xchg
xor
mov
movs
push
jae
imul
jns
xchg
mov
inc
add
enter
retf
inc
enter
enter
rcl
sub
jl
lea
sar
jl
movs
cmp
cmc
jmp
jl
fwait
xchg
test
dec
in
mov
and
mov
nop
xor
jl
jg
sub
pop
test
cmp
dec
nop
adc
int
enter
jl
enter
pop
ds
arpl
sub
call
inc
mov
jl
sbb
push
cmp
cmc
mov
sub
test
add
lods
jne
mov
xchg
std
mov
idiv
lea
mov
call
ins
jge
mov
jnp
xor
out
lods
and
dec
inc
call
sub
inc
and
mov
test
enter
enter
ds
stc
sub
add
aaa
or
add
imul
ds
stc
xchg
aaa
sub
aaa
jl
inc
mov
inc
mov
push
mov
jl
sub
icebp
stc
xlat
xor
jns
sub
cmc
stc
fdiv
push
mov
jo
mov
enter
cmp
icebp
stc
fdiv
jge
sub
adc
xchg
mov
cmp
adc
and
enter
xor
cmp
jns
cwde
mov
adc
stc
adc
sub
ss
dec
mov
icebp
test
cwde
adc
repz
aaa
add
enter
enter
int
enter
mov
loope
ds
dec
add
enter
aad
jl
fwait
adc
repz
pop
ds
retf
lods
and
enter
xchg
and
in
sub
leave
cdq
sub
jp
test
mov
cmc
test
int
enter
mov
scas
lods
cmp
sub
lea
inc
sub
jl
sub
jl
sub
or
mov
jl
movs
cmp
mov
mov
inc
sub
lea
jmp
or
aaa
or
adc
adc
daa
mov
popf
cmc
cdq
jnp
dec
dec
scas
mov
test
mov
jl
inc
leave
sub
pop
fadd
jo
mov
jl
scas
or
and
sub
leave
lahf
ret
xchg
bound
cmc
aam
test
jmp
js
sub
push
sar
xchg
jp
enter
shl
and
popf
cmc
cdq
jge
sub
iret
in
sub
enter
cwde
icebp
cmp
cwde
push
jl
into
jl
sub
jl
sub
jl
pop
les
xor
enter
int3
dec
mov
xor
or
mov
or
adc
or
mov
jl
sbb
daa
cld
xor
or
and
xor
enter
xchg
mov
jns
cdq
inc
fsubr
sub
rcr
cmc
imul
sbb
jmp
add
jns
sub
mov
jmp
jp
mov
sar
mov
or
and
sub
jne
pop
int3
dec
mov
xor
sub
sub
jl
pop
fadd
xor
enter
les
xor
enter
rol
push
outs
enter
inc
cmp
shl
xchg
cmp
jae
imul
sub
leave
cdq
sub
jnp
(bad)
mov
test
cmc
sub
and
cmp
sub
retf
mov
lea
adc
inc
test
inc
mov
inc
inc
enter
enter
mov
sbb
fsubr
jl
rcr
or
or
test
sbb
cmp
cmp
xchg
cmps
aas
mov
inc
mov
in
mov
icebp
cmp
sub
out
popf
cmc
cdq
jge
das
sub
or
jo
imul
push
out
inc
sub
lods
hlt
inc
jno
out
test
leave
movs
sub
mov
jl
scas
or
cmc
aam
movs
idiv
mov
cmp
jbe
jl
inc
test
in
retf
imul
sub
mov
cld
adc
jl
push
inc
test
hlt
jp
pop
shl
cmp
jl
xchg
push
push
sub
sbb
imul
sub
and
jl
inc
mov
imul
sbb
mov
fcom
imul
jge
and
in
and
imul
and
mov
nop
cmp
sub
cmps
xchg
je
cmc
cmps
push
dec
movs
cmp
movs
push
das
xchg
mov
lea
jmp
sub
ins
and
cmp
dec
xchg
movd
jl
fisub
push
call
mov
sub
dec
repz
ss
mov
cmc
test
push
mov
dec
sahf
cmc
test
jb
nop
call
and
jns
cmc
stos
scas
nop
cmps
mov
sub
ds
xchg
shr
(bad)
call
ss
imul
shl
imul
sub
retf
xchg
mov
sahf
sub
push
mov
pop
lods
ds
dec
sub
(bad)
(bad)
aaa
add
xor
push
mov
aaa
add
dec
mov
movs
or
pop
iret
dec
mov
sub
rol
das
xchg
retf
mov
or
sbb
lock
enter
adc
jl
enter
aaa
add
aaa
test
inc
jne
adc
dec
idiv
inc
rol
jl
jnp
cmp
mov
dec
add
enter
inc
stc
lods
shl
or
jge
sub
xchg
cmp
sub
lea
add
adc
aaa
cmp
adc
jl
aad
mov
mov
xor
xchg
add
aaa
cmp
rcl
mov
rcl
rcl
mov
xor
adc
icebp
cmp
(bad)
mov
sub
lds
enter
xor
xchg
mov
adc
sub
jl
jge
adc
xchg
lock
xchg
xor
enter
enter
aas
test
(bad)
int
pop
(bad)
(bad)
cmp
pop
jl
enter
call
jnp
inc
mov
pop
lea
or
les
cmp
cmc
stc
in
add
es
aas
test
(bad)
int
outs
inc
cmp
shl
adc
je
sbb
ds
jge
adc
xchg
ins
imul
xchg
mov
enter
enter
aas
test
(bad)
int
outs
inc
cmp
shl
adc
je
fdivr
call
inc
mov
jl
ret
sub
mov
mov
cmp
lds
sub
jl
(bad)
not
lahf
adc
repz
dec
cmp
mov
adc
pop
ds
dec
add
pop
ds
and
mov
sub
lds
enter
xor
xchg
mov
adc
sub
jl
jge
adc
xchg
adc
enter
rcl
mov
xor
adc
sub
sub
(bad)
mov
fadd
xchg
daa
mov
ret
sub
mov
aas
mov
or
aaa
add
dec
mov
ds
leave
adc
adc
je
dec
jl
sub
mov
mov
aas
sub
lds
sub
jl
(bad)
not
lahf
adc
repz
jbe
jl
dec
mov
push
sub
xchg
in
enter
retf
jl
mov
test
inc
xor
shl
pop
aas
jl
inc
stc
mov
sar
add
mov
mov
jl
dec
mov
jl
jno
jl
enter
dec
xchg
jmp
xor
enter
enter
aas
test
cmps
jne
adc
sub
pop
ds
and
aas
sub
(bad)
mov
sub
lds
enter
xor
xchg
mov
adc
sub
jl
jge
adc
xchg
cmp
jl
call
xchg
jl
les
ds
jno
jl
enter
dec
xchg
fist
repnz
xor
adc
gs
sub
(bad)
mov
sub
lds
enter
xor
xchg
mov
adc
sub
jl
jge
adc
xchg
mov
jl
call
mov
fdiv
stc
shl
add
enter
mov
or
xchg
mov
ret
sub
mov
aas
mov
or
aaa
add
dec
mov
jl
aas
call
inc
mov
jl
ret
sub
mov
aas
mov
or
aaa
add
dec
mov
jl
jno
jl
enter
dec
xchg
jmp
push
outs
enter
enter
aas
test
cmps
jne
adc
sub
pop
ds
and
sub
(bad)
mov
sub
clc
or
je
adc
enter
enter
enter
xchg
ins
les
pop
inc
stc
rcl
cmp
add
or
inc
rol
xor
add
inc
test
ss
aas
test
out
test
data16
enter
or
mov
or
adc
cmc
stos
scas
nop
mov
aaa
sub
pop
ds
jne
jl
aaa
sub
or
cmc
fsub
mov
jmp
std
xchg
jo
adc
(bad)
inc
shl
add
aaa
or
jl
shl
sub
test
cwde
adc
repnz
xchg
fs
out
jl
jno
jl
enter
dec
xchg
fist
repnz
xor
adc
xor
and
mov
inc
mov
jl
ret
sub
mov
aas
mov
or
aaa
add
dec
mov
jl
jno
jl
enter
dec
xchg
fist
int3
mov
xor
adc
cmp
dec
stc
rcl
cmp
enter
cmp
adc
stc
test
add
add
aaa
xor
and
adc
inc
mov
jl
lea
test
and
sub
add
enter
loope
cmc
jmp
jl
icebp
stc
test
xor
jge
sub
stc
test
ss
and
adc
xchg
mov
mov
xor
cmp
sub
mov
adc
push
enter
nop
xchg
jbe
adc
enter
enter
cwde
jae
test
inc
clc
jns
aaa
add
fdiv
add
sub
mov
xor
add
jge
adc
idiv
shl
add
enter
idiv
or
(bad)
enter
fld
cmc
stc
xchg
aaa
add
les
jl
jno
jl
enter
dec
xchg
fist
repnz
xor
adc
mov
mov
sub
lds
enter
xor
xchg
mov
adc
push
ds
jge
adc
xchg
fcom
enter
rcl
enter
aas
test
(bad)
int
outs
inc
cmp
shl
adc
je
cdq
cmp
inc
sub
std
mov
xchg
jl
ror
adc
icebp
stc
sub
add
sub
enter
dec
mov
adc
jne
and
adc
adc
repnz
xor
adc
push
inc
sub
(bad)
mov
sub
lds
enter
xor
xchg
mov
adc
push
ds
jge
adc
xchg
je
enter
rcl
enter
aas
test
(bad)
int
outs
inc
add
adc
adc
je
fsub
mov
jmp
jbe
enter
xor
xchg
mov
adc
sub
jl
jge
adc
xchg
les
enter
rcl
mov
xor
adc
fld
enter
and
jbe
enter
xor
xchg
mov
xchg
arpl
jl
xchg
stos
jl
sub
mov
shl
sub
mul
xor
enter
fcom
es
aas
test
(bad)
int
outs
inc
xchg
mov
adc
adc
je
ret
jl
and
sub
lds
enter
xor
xchg
mov
adc
push
ds
jge
adc
xchg
pop
adc
jl
call
enter
enter
aas
test
(bad)
int
outs
inc
cmp
shl
adc
je
fwait
cmc
jl
xchg
ret
sub
mov
mov
inc
sub
lds
sub
jl
(bad)
not
lahf
adc
repz
push
jl
dec
mov
ds
leave
adc
adc
je
fdivr
call
inc
mov
jl
ret
sub
mov
aas
mov
or
aaa
add
dec
mov
ds
leave
adc
adc
je
pop
cmc
jl
xchg
ret
sub
mov
aas
mov
or
aaa
add
dec
mov
ds
leave
adc
adc
je
fsub
mov
jmp
jbe
enter
xor
xchg
mov
adc
sub
jl
jge
adc
xchg
jo
enter
shl
repnz
add
inc
retf
sub
xchg
mov
enter
fcom
es
aas
test
(bad)
int
outs
inc
cmp
shl
adc
je
fsub
mov
jmp
leave
shl
add
dec
mov
jl
jno
jl
enter
dec
xchg
fist
int3
mov
xor
adc
icebp
inc
sub
(bad)
mov
sub
lds
xor
stos
lods
(bad)
pop
sub
sub
xchg
xor
adc
adc
icebp
mov
test
dec
mov
jl
jno
jl
enter
dec
xchg
fist
int3
mov
xor
adc
inc
inc
sub
(bad)
mov
outs
enter
aaa
add
dec
mov
mov
enter
enter
aas
test
(bad)
int
outs
inc
cmp
shl
adc
je
xchg
repz
xchg
ret
sub
mov
mov
inc
sub
lds
sub
jl
(bad)
not
lahf
adc
repz
outs
inc
jl
dec
mov
ds
leave
adc
adc
je
sub
jl
mov
jl
sub
or
and
sub
cmc
stc
les
add
shl
add
mov
add
xor
adc
leave
xchg
shl
jl
sar
adc
xchg
push
sbb
jl
cdq
xor
adc
lods
dec
sub
cmc
mov
cs
stc
xchg
aaa
add
cmps
dec
nop
adc
and
ja
mov
nop
sub
jl
jnp
and
mov
cmc
mov
(bad)
repz
mov
and
cmp
outs
enter
add
enter
dec
mov
adc
sub
jl
lods
and
xor
sub
push
ret
adc
icebp
mov
adc
jl
lods
and
mov
aaa
adc
lock
adc
jl
and
jl
dec
xchg
push
fdiv
cmp
call
cmc
mov
movs
sub
jl
jg
sub
lods
fcom
xchg
lds
sub
fwait
cmc
test
inc
mov
adc
idiv
and
inc
jge
pop
mov
stc
mov
lea
int
jl
enter
xor
push
test
lea
dec
mov
dec
sub
imul
and
sub
mov
jmp
jp
and
enter
xor
fadd
sbb
jl
jns
div
push
xor
jbe
mov
inc
jmp
cmc
aam
test
jmp
xchg
push
sbb
jl
test
aaa
leave
(bad)
aaa
adc
or
shl
or
xor
dec
jl
inc
sub
or
es
icebp
pop
xor
jbe
mov
inc
jmp
adc
push
ds
and
sub
stc
call
cmp
jl
test
cwde
xchg
dec
adc
stc
test
jmp
std
dec
sub
sub
inc
icebp
jl
inc
int3
jge
sub
stc
enter
sub
addr16
mov
adc
sub
cld
xchg
aam
add
mov
dec
jl
stc
mov
jl
fiadd
jge
enter
add
aaa
sub
dec
jl
aaa
leave
call
cdq
pop
add
cdq
inc
add
cdq
push
icebp
stc
cwde
xor
inc
mov
aaa
(bad)
mov
shl
xor
jno
les
mov
jl
push
stc
adc
sub
inc
jl
inc
test
inc
mov
adc
icebp
stc
shl
add
enter
aaa
xor
dec
add
push
jo
adc
xchg
inc
adc
jl
call
add
cmps
sub
fwait
cmc
test
inc
mov
adc
jl
sub
mov
sub
shr
pusha
sbb
dec
xchg
adc
jge
lods
daa
inc
adc
enter
add
aaa
and
adc
icebp
stc
xchg
add
mov
jl
sub
stc
adc
sub
xchg
push
in
xbegin
sbb
test
xchg
mov
jl
sar
adc
mov
adc
jl
dec
add
(bad)
jl
scas
or
mov
ror
xchg
push
movs
xor
movs
psllw
shl
add
enter
enter
sar
enter
enter
mov
idiv
inc
xor
push
mov
adc
push
inc
enter
and
sar
adc
cmp
sahf
dec
jl
jo
and
mov
shl
cmc
mov
sub
stc
adc
sub
mov
jge
mov
stc
adc
sub
rol
aaa
cmp
dec
enter
xor
mov
mov
add
enter
dec
fchs
shl
cmp
adc
cld
jl
lods
daa
sbb
sub
sub
enter
xor
dec
jl
aaa
leave
fcom
aaa
adc
loopne
shl
xchg
jp
xor
movs
mov
ja
mov
cdq
scas
and
das
jp
mul
cmp
jp
shl
test
das
cmc
cmp
inc
mov
sbb
xchg
pop
enter
scas
cmc
sub
aaa
or
adc
sub
mov
sbb
mov
enter
scas
cmc
sub
fwait
xchg
mov
out
scas
cmc
sub
dec
xchg
in
enter
lea
jge
(bad)
retf
sub
leave
lods
jae
popf
mov
push
enter
enter
stc
mov
jae
or
cmp
inc
jp
aam
test
jmp
js
imul
sub
(bad)
std
jl
scas
or
sbb
mov
call
and
and
xchg
cmp
enter
fdiv
imul
jae
jns
icebp
cmp
sub
or
jl
movs
xor
movs
comiss
lea
jae
popf
cmp
retf
sub
inc
cmp
xchg
js
enter
xor
sub
adc
jg
jl
sub
jl
aas
sti
jl
movs
push
cmc
test
aaa
sub
lea
sub
sub
lea
jns
cdq
les
jl
push
dec
jl
fwait
sub
cmps
xchg
je
rol
dec
movs
xor
movs
btc
nop
sub
jl
aas
jmp
sub
icebp
stc
nop
sub
mov
inc
scas
mov
push
sub
cmc
mov
mov
jl
movs
xor
movs
comiss
shl
int
sub
(bad)
mov
push
aaa
leave
mov
aaa
add
enter
xchg
jl
fld
cmc
stc
xchg
sub
mov
test
mov
sub
stc
ror
sub
mov
sub
inc
push
jl
sar
enter
jge
pushf
shl
xchg
sub
enter
shl
xlat
or
sub
xchg
(bad)
jl
movs
xor
pushf
shl
cmc
mov
sub
fmul
xchg
and
in
sub
leave
jo
pop
sub
xchg
rol
enter
lahf
mul
and
aas
pop
outs
out
les
retf
mov
aaa
xor
loope
cmc
jmp
xchg
inc
clc
jl
movs
adc
mov
mov
inc
sub
movhps
jge
jle
jae
shl
(bad)
mov
outs
enter
cld
jl
scas
or
les
jl
cs
stc
fcom
add
aaa
cmc
mov
movs
push
adc
repz
enter
cwde
xchg
js
enter
rcl
enter
aas
test
(bad)
int
push
sub
stc
jl
aaa
sub
dec
jl
dec
mov
add
xchg
les
enter
enter
aas
test
(bad)
int
push
les
jl
jno
jl
enter
call
jnp
and
outs
enter
sub
dec
sub
(bad)
mov
sub
lds
enter
xor
xchg
mov
adc
sub
jl
dec
jl
shl
sub
mov
jl
scas
or
adc
pop
ds
dec
jl
shl
sub
stos
sti
jl
scas
or
cmc
fdivr
call
inc
mov
jl
ret
sub
mov
cmp
icebp
stc
sub
add
enter
and
sub
lds
enter
xor
xchg
mov
xchg
sar
jl
xchg
stos
jl
sub
mov
int3
aaa
sub
nop
mov
jl
aaa
sub
ds
jl
dec
mov
adc
pop
ds
dec
jl
shl
sub
or
dec
jl
shl
sub
(bad)
cli
jl
scas
or
xchg
lahf
cli
jl
xchg
ret
sub
mov
cmp
icebp
stc
sub
add
enter
mov
icebp
stc
sub
add
enter
dec
mov
jl
pop
cli
jl
xchg
ret
sub
mov
cmp
icebp
stc
sub
add
enter
mov
icebp
stc
sub
add
enter
and
sub
lds
enter
xor
xchg
mov
xchg
or
jl
xchg
stos
jl
sub
mov
int3
aaa
sub
nop
mov
jl
aaa
sub
(bad)
dec
jl
dec
mov
ds
stc
jl
aaa
sub
dec
jl
dec
mov
jl
jno
jl
enter
dec
xchg
fcom
int3
mov
enter
cwde
xchg
je
enter
shl
add
and
int3
aaa
sub
dec
jl
dec
mov
jl
jno
jl
enter
dec
xchg
fcom
int3
mov
enter
cwde
xchg
mov
enter
rcl
mov
enter
cwde
xchg
enter
(bad)
call
enter
enter
aas
test
(bad)
int
push
sub
stc
jl
aaa
sub
dec
jl
dec
mov
push
and
jl
aaa
sub
mov
jl
aaa
sub
dec
jl
dec
mov
jl
jno
jl
enter
dec
xchg
fcom
int3
mov
enter
cwde
xchg
cmp
rcl
mov
enter
cwde
xchg
dec
sbb
rol
aaa
enter
inc
stc
xchg
repz
xor
and
jbe
enter
xor
xchg
mov
adc
sub
jl
dec
jl
shl
sub
xlat
clc
jl
scas
or
xchg
fwait
clc
jl
xchg
and
sub
mov
cmp
jl
jnp
sar
sub
ds
sar
sub
outs
dec
jl
dec
mov
jl
jno
jl
enter
dec
xchg
fcom
int3
mov
enter
cwde
xchg
fcomp
jl
call
mov
enter
cwde
xchg
in
sbb
jl
call
idiv
mov
jno
jl
enter
dec
xchg
fcom
int3
mov
enter
cwde
xchg
sbb
jl
call
enter
enter
aas
test
(bad)
int
push
(bad)
(bad)
dec
jl
jno
jl
enter
call
jnp
and
outs
enter
sub
dec
sub
(bad)
mov
outs
enter
sub
dec
sub
(bad)
mov
sub
jle
sub
jl
sub
jl
jg
in
push
sub
cmc
stc
rcl
add
enter
sub
push
sub
push
jl
jne
mov
mov
aaa
sub
shl
xchg
push
sub
or
pop
add
stc
mov
mov
cs
stc
enter
movs
push
and
ja
mov
nop
mov
sahf
sub
addr16
jecxz
movs
xor
movs
ud0
mov
add
push
pop
jl
inc
and
aad
sub
imul
and
sub
inc
jmp
les
jl
fld
cmc
stc
test
add
enter
repnz
jl
and
shl
adc
cli
mov
jecxz
jl
dec
fadd
inc
enter
xor
mov
sub
adc
sub
jl
adc
adc
lock
adc
jl
retf
lods
and
cdq
shl
(bad)
mov
test
jle
sub
js
sub
icebp
stc
shl
add
aaa
sub
push
jl
jo
cs
mov
shl
cmc
mov
shl
das
icebp
test
cwde
xchg
outs
(bad)
aaa
cmp
les
and
sub
adc
lock
xor
adc
xchg
rol
enter
jl
adc
icebp
stc
shl
add
enter
aaa
xor
push
add
push
jo
adc
xchg
fs
jl
call
xor
mov
shl
cmp
mov
sub
in
shl
jl
xor
add
xor
mov
shl
sub
cld
sub
stc
fcom
aaa
sub
les
sub
jl
or
jl
sub
jl
test
cwde
push
jl
retf
sub
mov
jl
aaa
leave
aam
aaa
adc
inc
jl
aas
fwait
cmc
test
inc
mov
adc
outs
mov
lock
xor
adc
xchg
rol
enter
fdivr
sub
std
jmp
add
stc
adc
sub
mov
push
sub
cmc
mov
inc
and
sub
adc
enter
xor
add
aaa
add
mov
fcmovb
clc
jae
enter
cmp
adc
mov
icebp
stc
mov
sahf
xchg
mov
enter
stc
test
jmp
jge
inc
adc
jl
dec
in
adc
sub
dec
jnp
sub
jl
and
sub
icebp
stc
mov
fwait
xchg
in
(bad)
cmp
shl
dec
enter
push
jl
jge
adc
xor
push
sub
icebp
stc
mov
add
aaa
adc
std
mov
jge
adc
enter
adc
jl
ficom
sub
adc
lock
cmp
sub
mov
push
inc
ret
mov
push
sub
mul
mov
add
or
jg
leave
call
fstp
add
inc
stc
loopne
aaa
cmp
sti
sub
sar
adc
aaa
cmp
(bad)
cmc
test
das
cmc
stc
pop
xor
xchg
xlat
loopne
jl
dec
loopne
shl
jge
sub
icebp
stc
cwde
xor
rcl
push
jl
jge
adc
enter
loope
cmc
jmp
leave
fcom
aaa
adc
loopne
shl
and
ja
mov
cdq
scas
and
das
jp
mul
and
pop
inc
hlt
repnz
test
das
cmc
cmp
inc
mov
jl
inc
cmp
outs
loope
jl
popf
mov
js
ins
cs
mov
jmp
jl
dec
and
fwait
cmc
imul
gs
sub
or
inc
sub
call
les
cmp
inc
mov
cmp
mov
jne
sub
cmc
mov
movs
movhps
sub
icebp
cmp
cwde
sub
and
cmp
and
aam
test
jmp
and
in
sub
leave
jo
ins
sub
xchg
hlt
or
jl
jnp
mov
call
retf
inc
stc
add
xor
mov
xchg
xchg
add
jl
jmp
jne
mov
aas
adc
(bad)
jl
mov
aaa
sub
les
push
jl
mov
icebp
stc
sub
and
and
add
cmp
and
push
jle
and
push
sub
cmc
mov
in
sub
leave
dec
nop
jo
ja
push
pop
in
mov
jl
dec
(bad)
sub
jge
movs
(bad)
retf
imul
ds
lea
jl
inc
cmp
outs
leave
jl
sar
cld
(bad)
xchg
push
fwait
lea
adc
adc
jl
lea
jl
dec
mov
sub
enter
enter
in
cmp
sub
std
mov
dec
aaa
cmp
scas
xor
mov
lahf
ret
mov
aam
test
jmp
jl
mov
jns
sub
mov
jl
inc
enter
into
push
ins
(bad)
out
jl
inc
mov
dec
sar
clc
(bad)
xchg
lock
jl
fistp
jl
mov
or
cmp
jl
mov
or
ds
scas
push
jl
mov
or
cmp
jl
mov
or
cmp
les
test
inc
mov
dec
sar
push
jecxz
enter
enter
sahf
push
dec
sar
pop
jecxz
enter
enter
sahf
push
dec
sar
in
fild
xchg
ins
add
jl
sub
std
or
outs
enter
enter
loope
cmc
jmp
jge
inc
clc
or
cmp
jl
mov
or
cmp
jl
mov
or
ds
add
sub
jge
inc
clc
or
ds
jb
jl
inc
test
inc
mov
cmc
leave
cdq
sub
retf
push
movs
lea
sbb
loope
sub
inc
pop
sub
fistp
jl
repnz
cmp
inc
xor
dec
les
jl
cli
pop
jl
mov
fnstsw
sub
gs
sub
fild
mov
dec
cmp
inc
xor
dec
lods
imul
jl
inc
test
inc
mov
push
mov
jl
ret
out
jl
(bad)
in
jecxz
sub
mov
adc
push
jecxz
enter
enter
aaa
dec
pusha
mov
out
jl
(bad)
sub
mov
adc
pusha
jmp
or
jl
shl
dec
push
mov
jl
mov
jl
(bad)
mov
ds
mov
adc
push
jecxz
enter
enter
aaa
dec
pop
mov
jl
scas
out
jl
(bad)
in
cmp
mov
push
adc
pop
jecxz
enter
enter
leave
test
jmp
add
and
pusha
mov
jl
repnz
cmp
inc
xor
dec
test
ds
xchg
sub
mov
jns
cdq
inc
fsubr
sub
dec
mov
adc
adc
jl
mov
add
mov
dec
add
shl
sub
xchg
cmp
enter
cwde
xchg
adc
enter
cmp
les
test
inc
mov
dec
mov
jl
sub
idiv
shl
cmp
pop
lea
inc
enter
mov
adc
test
pop
jl
imul
ins
enter
std
dec
jecxz
enter
mov
push
cmp
dec
xchg
sbb
push
cmp
adc
test
xchg
test
enter
push
cmp
dec
sbb
jl
enter
push
jge
sub
cmp
lods
sub
jge
push
sub
adc
ds
cmps
cmps
outs
enter
jb
jl
imul
enter
retf
inc
enter
leave
push
jl
enter
je
jl
mov
je
cmp
sbb
movzx
enter
mov
jecxz
sub
sub
enter
std
dec
jecxz
enter
std
cmp
ins
enter
(bad)
jle
sub
sbb
add
jl
sub
adc
test
xchg
xor
enter
imul
dec
sbb
jl
enter
push
adc
cs
mov
jl
inc
shl
cmps
outs
enter
ficomp
sub
(bad)
outs
enter
std
dec
jecxz
enter
std
cmp
ins
enter
sbb
sub
fdivr
push
push
inc
enter
mov
adc
test
fbstp
mov
clc
push
jl
mov
jecxz
sub
jl
sbb
adc
leave
jl
inc
jbe
jl
mov
jl
inc
inc
cmps
ds
cmps
cmps
outs
enter
push
pop
jl
imul
enter
std
dec
jecxz
enter
std
sbb
outs
enter
lods
adc
sub
jl
cmp
adc
repz
adc
jl
enter
enter
push
cmp
ds
jl
outs
leave
jl
jl
push
pop
sub
adc
test
jge
enter
push
cmp
jl
mov
jecxz
sub
jl
sbb
push
jge
enter
bound
mov
cld
sub
adc
ds
stc
cmps
outs
enter
retf
sub
cld
(bad)
cmc
test
enter
push
cmp
dec
dec
push
jge
sub
inc
adc
enter
data16
sub
jg
lods
cwde
adc
repz
adc
jl
enter
enter
push
cmp
adc
jl
sbb
jecxz
sub
jl
sbb
push
pop
mov
adc
sub
enter
mov
cmps
cmps
outs
enter
dec
pop
jl
imul
outs
enter
jmp
or
cmp
dec
push
fcom
ror
jl
inc
fdivr
sub
jl
sub
adc
test
jl
enter
enter
imul
dec
sbb
jl
enter
push
push
sbb
jl
mov
adc
sub
sub
outs
adc
jl
adc
xchg
sub
jl
(bad)
clc
in
sub
jl
sbb
jecxz
sub
jl
sbb
adc
enter
stc
jge
sub
sbb
enter
(bad)
cmps
outs
enter
push
pop
jl
imul
xor
mov
sbb
jl
enter
push
push
sub
jl
mov
adc
sub
sub
sub
ds
adc
xchg
mov
pop
fistp
sub
jl
sbb
jecxz
sub
jl
sbb
fs
leave
jl
inc
pop
jl
sub
push
sub
adc
ds
jge
outs
enter
enter
jmp
sub
jl
sbb
jecxz
sub
jl
sbb
fs
enter
or
mov
cld
sub
pop
fidivr
sub
jge
outs
enter
enter
jmp
sub
test
inc
mov
dec
mov
jl
sub
dec
sbb
mov
mov
jl
inc
fcom
sub
sub
lock
ds
leave
cmps
ds
jl
sub
xchg
movs
or
push
cmp
dec
sbb
jl
enter
push
push
sbb
jl
mov
cld
sub
adc
ds
jge
outs
enter
enter
jmp
jecxz
sub
jl
sbb
jecxz
sub
jl
sbb
adc
enter
popa
jge
sub
bound
enter
sub
movs
outs
enter
scas
pop
jl
imul
outs
enter
aaa
add
out
jl
fld
cmc
cmp
inc
mov
xor
mov
rcr
sub
dec
xchg
or
jl
fst
ds
mov
add
mov
fisttp
ins
pop
jecxz
sub
test
inc
mov
je
mov
call
mov
and
xchg
std
cwde
jl
inc
enter
push
cmp
imul
push
cmp
cwde
idiv
aam
cmp
mov
adc
repz
adc
jl
enter
and
pop
sub
fistp
mov
dec
dec
mov
jl
sub
push
inc
cmps
lea
dec
cwde
push
push
sub
sub
in
ds
adc
xchg
scas
call
jecxz
sub
mov
sub
dec
dec
mov
jl
sub
dec
cmp
jl
cmps
lea
dec
cwde
push
sub
sub
sub
lock
ds
adc
xchg
adc
jl
(bad)
sub
jl
mov
jns
sub
mov
jl
inc
enter
rcl
les
jl
inc
mov
dec
sar
js
ins
enter
enter
aaa
dec
dec
mov
jl
sub
dec
sbb
mov
mov
push
sub
adc
ds
stc
cmps
outs
enter
push
arpl
xchg
loope
enter
xor
mov
sub
jl
outs
leave
jl
sar
xchg
loope
enter
enter
adc
jl
enter
enter
and
cmp
sub
cld
inc
mov
mov
jge
(bad)
leave
jl
sar
xchg
loope
enter
enter
mov
xor
enter
push
cmp
jl
mov
jecxz
sub
jl
sbb
push
jge
enter
fcom
push
inc
retf
jl
jl
mov
stc
test
arpl
(bad)
lea
(bad)
sub
jl
sbb
jecxz
sub
jl
sbb
push
jge
enter
fcom
sub
jl
das
enter
adc
ds
stc
cmps
outs
enter
xor
sub
push
jecxz
enter
aaa
adc
aaa
dec
dec
mov
jl
sub
dec
cmp
std
jl
enter
fdivr
sub
jl
sub
adc
test
jl
enter
enter
imul
test
std
dec
jecxz
enter
std
cmp
ins
enter
scas
adc
sub
jl
out
enter
enter
mov
adc
test
fisttp
jl
sub
dec
dec
mov
jl
sub
dec
cmp
cmp
jl
dec
mov
adc
test
jl
enter
enter
push
cmp
dec
sbb
jl
enter
push
push
sub
jl
mov
adc
sub
sub
sub
ds
adc
xchg
daa
(bad)
jl
(bad)
pop
fistp
sub
jl
sbb
jecxz
sub
jl
sbb
adc
leave
jl
inc
cs
sub
bound
enter
mov
ds
cmps
cmps
outs
enter
sbb
sub
add
outs
enter
std
dec
jecxz
enter
std
cmp
ins
enter
xor
cmp
bound
jl
mov
adc
test
(bad)
(bad)
sub
dec
dec
mov
jl
sub
dec
sbb
mov
mov
push
push
inc
fcom
sub
sub
mov
leave
cmps
ds
jl
sub
xchg
sbb
enter
pop
cmp
lods
jo
jl
std
dec
jecxz
enter
std
sbb
outs
enter
loopne
cmp
adc
sub
sub
lock
ds
leave
cmps
ds
jl
sub
xchg
pop
xor
jl
add
cmp
dec
sbb
jl
enter
push
push
sbb
push
push
jl
mov
jge
mov
retf
les
pusha
jl
imul
push
jl
std
dec
jecxz
enter
std
cmp
ins
enter
push
jl
sub
cmp
sub
push
bound
cld
jl
lahf
movs
outs
enter
mov
and
pusha
sub
(bad)
(bad)
xchg
cmp
test
aaa
and
add
nop
cmp
push
push
dec
dec
mov
push
sub
cld
jl
enter
enter
enter
aaa
or
data16
inc
mov
clc
mov
enter
sar
or
test
and
gs
call
ror
mov
jl
inc
cmp
inc
cmp
inc
cmc
enter
jge
sub
xchg
push
(bad)
aaa
cmp
rol
sar
or
sub
sub
and
or
call
lea
sub
sub
pop
fcom
cwde
mov
enter
pop
fiadd
xchg
dec
sbb
fwait
cmc
imul
cdq
lods
and
jge
enter
lds
xor
aam
enter
js
jl
dec
jl
shl
sub
jg
jl
movs
cmp
movs
push
xchg
xchg
xor
jl
and
jl
mov
test
inc
sub
rcr
adc
xchg
pop
xor
jl
push
aaa
jle
cmp
enter
aaa
add
enter
retf
or
cmp
stc
jl
aaa
sub
imul
aaa
xor
jl
push
aaa
js
cmp
enter
aaa
add
enter
int
ins
inc
clc
int
sub
stc
jl
aaa
sub
imul
sub
ins
adc
jns
jl
dec
jl
shl
sub
xchg
jl
lods
mov
jnp
fst
popf
mov
enter
cwde
xchg
call
fdivr
call
inc
mov
or
enter
aaa
add
enter
ror
inc
push
ds
stc
jl
aaa
sub
imul
and
ins
adc
jns
jl
dec
jl
shl
sub
outs
fistp
mov
ja
fst
test
cwde
xchg
push
cmp
jl
fsub
mov
jmp
adc
jp
jl
dec
jl
shl
sub
and
jl
lods
mov
jno
fst
test
cwde
xchg
test
enter
aaa
jb
cmp
enter
aaa
add
enter
enter
mov
adc
jl
dec
jl
shl
sub
sub
cmp
adc
inc
movs
outs
enter
mov
push
cmp
adc
mov
cwde
ss
loopne
mov
cs
stc
aam
add
aaa
and
add
cdq
jg
sub
pop
rol
jge
xor
aam
test
jmp
mov
les
and
lahf
das
xchg
sub
or
jne
mov
xchg
xor
enter
xchg
and
leave
dec
nop
dec
and
jl
jp
ret
ror
cmc
fdivr
mov
jmp
call
cmc
mov
sub
stc
xchg
(bad)
sub
push
sub
int
sub
lds
enter
xor
jmp
lods
jne
test
aaa
jge
cmp
enter
aas
add
enter
xor
adc
jp
jl
dec
xchg
mov
aaa
sub
jecxz
jl
movs
cmp
movs
push
cld
rcr
add
jp
jl
dec
xchg
mov
aaa
sub
sbb
jl
jne
test
aaa
js
cmp
enter
aas
add
enter
xor
adc
jnp
jl
dec
xchg
mov
aaa
sub
push
fnstsw
sbb
enter
xor
adc
jnp
jl
dec
xchg
mov
aaa
sub
ja
jl
lods
jne
test
aaa
jnp
cmp
enter
aas
add
enter
xor
adc
jnp
jl
dec
xchg
mov
aaa
sub
or
jl
movs
cmp
movs
push
cld
rcr
add
jnp
jl
dec
xchg
mov
aaa
sub
sub
jl
lods
jne
test
aaa
jbe
cmp
enter
aas
add
enter
xor
adc
jnp
jl
dec
xchg
mov
aaa
sub
(bad)
fdivr
cmp
mov
aaa
cmc
mov
shl
jo
cmp
enter
aas
add
enter
xor
adc
jl
jl
dec
xchg
mov
aaa
sub
mov
jne
test
aaa
jb
cmp
enter
aas
add
enter
mov
and
xchg
jp
aaa
xor
aas
call
inc
mov
jl
inc
into
ds
xchg
nop
shl
(bad)
mov
(bad)
cmp
cmp
scas
jne
mov
aaa
jl
test
jg
sub
mov
inc
mov
jl
stc
cmps
push
sub
or
outs
enter
aaa
cmp
shl
shl
and
jl
(bad)
jl
dec
rol
dec
mov
sub
cld
rcl
add
enter
aaa
add
leave
jl
jmp
icebp
test
cwde
adc
cmc
mov
xor
adc
xchg
hlt
xor
jl
call
enter
inc
stc
movs
(bad)
xor
dec
rol
xchg
inc
xor
jl
out
pop
addr16
jge
mov
jnp
xor
out
lods
and
xchg
xor
cs
test
cmp
inc
pop
fnstsw
sub
push
movs
outs
enter
add
enter
les
pop
fnstsw
sub
arpl
shl
add
enter
and
jl
dec
add
jl
movs
cmp
mov
aaa
cmc
mov
shl
sub
cmp
ds
dec
add
fistp
retf
movs
ds
stc
adc
sub
imul
push
shl
sub
and
jl
mov
aaa
(bad)
mov
shl
add
enter
xor
imul
mov
test
cwde
xchg
fdivr
enter
mov
icebp
stc
shl
cmp
shl
(bad)
mov
test
inc
stc
adc
cmp
int
xchg
sti
fidivr
inc
stc
test
aaa
add
fstp
cs
stc
clc
aas
add
xor
dec
sub
xor
outs
enter
mov
xor
adc
xchg
test
enter
fcom
sahf
mov
xor
adc
xchg
push
ds
xor
adc
xchg
push
cmp
jl
test
and
test
dec
sar
add
adc
jns
add
adc
movs
(bad)
cmp
std
mov
sar
test
aaa
icebp
stc
shl
add
enter
add
enter
inc
stc
adc
sub
outs
jl
inc
stc
lods
(bad)
xor
xor
adc
xchg
int3
aas
enter
sbb
jnp
lahf
push
cmp
push
outs
jl
inc
stc
mov
aaa
add
bnd
fld
cmc
stc
loopne
add
xor
mov
aaa
adc
add
jl
mov
aaa
sub
xchg
cmp
adc
add
lahf
xchg
xor
enter
xor
sar
test
aaa
adc
pop
mov
mov
jl
jl
mov
sub
icebp
stc
shl
cmp
shl
add
mov
ror
jo
or
and
adc
xor
jl
dec
mov
adc
mov
imul
and
xchg
mov
sub
sub
leave
jo
outs
sub
xchg
int3
cmp
jl
jp
(bad)
dec
sub
cmp
call
jl
leave
jl
sub
imul
add
and
ins
sub
push
jge
ss
movs
add
lea
push
cmp
loope
enter
enter
mov
jl
cwde
loope
sub
and
enter
enter
imul
jl
and
sub
sub
aaa
fnstsw
adc
movs
or
sub
jns
adc
or
and
jge
pop
fnstsw
sub
stc
int
aaa
sub
out
ror
ins
adc
cmp
bound
mov
lods
pop
pop
jl
jl
int
enter
mov
les
jl
jb
xor
sub
mov
xor
mov
cld
xchg
cmc
mov
(bad)
inc
jmp
mov
ror
xchg
dec
les
retf
and
xor
cmp
cmc
mov
sub
test
add
lods
jne
mov
mov
cmp
jg
adc
idiv
fwait
and
or
enter
and
pop
push
fimul
jge
and
stc
rol
aaa
or
rcl
test
cwde
adc
lea
ds
dec
fist
sub
jl
inc
enter
and
cmp
ret
sub
sub
stc
ffreep
aaa
sub
mov
in
enter
outs
xchg
adc
xchg
clc
jmp
cmp
rcl
jl
dec
fist
rcr
jl
movs
adc
movs
or
jge
loop
jl
mov
adc
lea
ds
mov
cmp
sub
cmc
movs
sbb
jne
xchg
shl
icebp
dec
sub
ds
jmp
sbb
inc
jl
ds
in
(bad)
adc
hlt
mov
push
outs
jl
inc
rcl
icebp
sbb
popa
jl
enter
mov
adc
lea
ds
call
inc
outs
sub
cmc
movs
sbb
jne
xchg
shl
icebp
dec
lods
push
ds
jmp
jl
cmp
fld
ds
in
(bad)
adc
hlt
mov
push
cmp
jl
dec
mov
xchg
shl
icebp
dec
jmp
jl
cmp
cmc
hlt
stc
movs
cmc
out
mov
js
sub
jl
sub
jl
inc
enter
and
jae
enter
mov
jl
les
jl
(bad)
(bad)
rol
jl
mov
dec
leave
xchg
shl
sub
imul
jl
inc
leave
xchg
shl
push
enter
enter
sahf
sub
xchg
jge
adc
or
and
jl
(bad)
les
retf
int3
mov
jl
shl
jl
imul
cmp
add
enter
daa
add
hlt
jge
pop
xor
jl
mov
ror
aaa
sub
mov
jl
inc
enter
cwde
push
jle
cmp
les
mov
lahf
movs
dec
enter
idiv
cwde
and
or
and
jns
adc
jl
lea
out
imul
loopne
jns
push
mov
or
push
enter
and
jae
enter
inc
movs
push
hlt
inc
mov
jl
enter
enter
sbb
jl
mov
jl
movs
lea
fld
cmc
stc
pushf
and
int3
xchg
shl
cmc
mov
sub
jl
imul
cmp
enter
inc
movs
jge
inc
mov
xchg
pop
(bad)
jl
inc
enter
push
cmp
jl
enter
enter
enter
mov
adc
test
fistp
jl
out
pop
adc
call
jl
enter
enter
and
shl
(bad)
mov
sub
inc
jl
enter
mov
xchg
mov
enter
adc
jl
and
sub
cmc
stc
and
push
sub
xchg
loopne
enter
cwde
sub
and
rcl
sub
cmc
movs
add
dec
les
test
cwde
adc
cwde
mov
adc
jl
cwde
enter
jge
sub
xchg
repnz
shl
pop
iret
call
jl
jl
vmwrite
cwde
mov
enter
pusha
add
enter
add
mov
push
jl
enter
enter
stos
jo
sub
stc
aam
aaa
sub
push
jl
xor
cmp
mov
mov
sub
sub
outs
les
enter
enter
aaa
dec
jl
mov
(bad)
jl
(bad)
shl
cmp
cwde
xchg
call
hlt
loope
cmc
out
inc
cmp
sub
push
jl
enter
lea
jl
sar
or
inc
cdq
std
shl
jl
fwait
sub
xchg
or
jnp
and
sub
mov
jmp
cmp
xor
pop
jge
sub
jb
aam
jae
inc
leave
jl
lds
sub
ins
jge
enter
retf
adc
jge
sub
addr16
cmp
inc
add
inc
inc
sub
dec
jge
sub
adc
inc
jl
jl
xbegin
adc
adc
jl
std
adc
outs
enter
aaa
xor
and
jge
inc
mov
jl
jge
adc
aaa
cmp
fdiv
stc
enter
mov
aaa
sub
cdq
sub
adc
cdq
jo
enter
dec
stc
jl
enter
xor
dec
cmp
jl
and
dec
mov
stc
clc
xor
js
mov
jecxz
mov
cld
mov
add
(bad)
int3
imul
cld
xor
mov
shl
inc
lods
pop
stc
push
jge
dec
pushf
adc
xor
stc
mov
test
cwde
push
jl
enter
push
jno
sub
test
inc
mov
ds
jae
mov
lods
enter
adc
outs
enter
xor
mov
outs
enter
mov
or
std
adc
outs
enter
aaa
and
enter
xchg
jnp
sub
dec
adc
mov
add
enter
xor
mov
sub
cmp
dec
jnp
enter
push
jo
sub
push
jnp
enter
mov
ror
sar
jl
movs
xor
adc
int
jl
inc
cmp
dec
mov
imul
in
fild
or
pop
int
(bad)
or
int
in
enter
int
loope
enter
int
fild
or
int
(bad)
or
int
fild
or
int
jecxz
enter
int
jecxz
enter
into
jl
inc
enter
and
jo
enter
add
enter
int
fild
or
dec
in
enter
js
ins
sub
or
jo
sub
add
and
mov
scas
ins
movs
adc
adc
adc
icebp
stc
hlt
xor
adc
stc
enter
(bad)
jl
inc
test
inc
mov
jl
dec
add
sub
mov
sub
cld
rcl
add
mov
ds
enter
enter
and
cmp
sub
xchg
mov
test
inc
stc
(bad)
shl
cmp
enter
jl
jl
(bad)
stc
out
enter
enter
dec
add
sub
adc
enter
add
hlt
jge
pop
xor
test
mov
and
shl
add
aaa
(bad)
mov
sub
or
push
jl
sti
movs
ds
jl
add
jl
std
clc
(bad)
xchg
and
enter
int
jl
mov
jl
aas
fwait
cmc
test
inc
mov
adc
icebp
stc
fnsave
push
movs
outs
enter
xor
adc
mov
sub
icebp
stc
shl
add
mov
sar
add
sub
jb
outs
enter
div
sub
dec
pusha
mov
sar
js
sub
icebp
adc
aaa
cmp
adc
jl
aad
test
push
jl
enter
mov
and
sub
or
cmp
les
jl
and
js
enter
add
dec
add
xor
dec
add
hlt
inc
add
jl
sub
fwait
stos
outs
enter
add
sub
dec
pusha
mov
sar
js
sub
stc
adc
cmp
add
jno
mov
jl
mov
aaa
sub
test
cwde
adc
hlt
mov
cmp
add
enter
fcom
sub
jl
test
cwde
or
ds
cs
sub
rol
call
adc
sti
mov
and
dec
lods
imul
jl
and
stc
shl
add
aaa
sub
movs
ds
stc
(bad)
shl
sub
ja
sub
mov
jl
inc
stc
adc
std
push
jecxz
enter
enter
xor
or
push
jl
pusha
stos
ds
jl
ret
sar
push
jecxz
enter
enter
retf
jl
lods
aas
mov
stc
shl
add
aaa
sub
stos
ds
stc
(bad)
shl
sub
jbe
sub
mov
jl
inc
stc
adc
std
push
jecxz
enter
enter
xor
or
push
jl
mov
jl
stos
sar
push
jecxz
enter
enter
retf
jl
mov
aaa
push
enter
xor
or
jl
sub
push
stos
outs
enter
call
mov
jl
ror
jl
lds
jle
sub
stc
xchg
aaa
cmp
retf
add
add
icebp
add
push
jl
in
ds
jl
aas
sar
push
jecxz
enter
enter
retf
lods
dec
xchg
test
hlt
jg
xchg
dec
mov
icebp
test
cwde
icebp
stc
fnsave
push
movs
outs
enter
xor
mov
mov
sub
icebp
stc
shl
add
mov
iret
jl
lods
jne
adc
jl
or
jl
sub
ins
stos
outs
enter
push
jnp
sub
dec
pop
mov
jl
imul
jl
mov
sub
stc
xchg
aaa
cmp
retf
add
add
icebp
add
push
jl
es
ds
jl
ja
jl
sar
pop
jecxz
enter
enter
retf
lods
dec
xchg
mov
dec
mov
ins
dec
inc
jge
mov
xchg
pop
pusha
std
xchg
pop
hlt
jl
mov
aaa
sub
test
cwde
adc
hlt
mov
cmp
and
(bad)
call
enter
inc
stc
cwde
shl
xor
sub
adc
mov
push
sub
jl
sub
adc
mov
jl
scas
int
jl
dec
mov
inc
enter
jge
adc
xchg
in
sub
jl
adc
or
mov
enter
mov
inc
sub
or
jl
pop
nop
adc
clc
in
sub
leave
mov
aaa
adc
icebp
stc
shl
adc
sub
jl
jge
adc
xchg
shr
enter
cmp
sub
sub
test
sub
jmp
cs
loope
shl
sub
jge
adc
xchg
cld
sub
jl
sub
stc
nop
shl
sub
adc
int3
mov
cmp
jns
enter
add
aaa
dec
cmp
jl
inc
enter
int3
push
jl
enter
enter
pop
cmp
les
jl
inc
stc
mov
aaa
xor
stc
test
jmp
jle
sub
jl
cdq
cmp
js
enter
push
jl
add
jl
xor
mov
shl
in
mov
add
enter
dec
nop
adc
mov
or
add
inc
test
inc
mov
adc
sbb
enter
jl
jl
enter
int3
push
js
movs
enter
add
sub
mov
enter
push
mov
dec
and
cmp
jl
inc
test
inc
mov
push
pop
les
jns
enter
add
cdq
scas
and
das
jp
test
in
cmc
test
lea
sub
jl
and
jl
enter
shl
enter
std
clc
(bad)
or
std
xchg
loope
enter
enter
xor
jl
repz
xchg
mov
jl
daa
aaa
dec
cld
lea
jl
pop
std
cld
(bad)
or
std
push
jecxz
enter
enter
in
cmp
sbb
jmp
js
enter
pop
cmp
pop
ret
or
cmp
jl
inc
test
movs
cmova
push
cmp
dec
or
cmp
jl
repz
pop
mov
jl
cmp
or
mov
ret
or
cmp
jl
repz
pop
mov
jl
push
dec
inc
or
mov
rol
jl
xor
sub
jo
cdq
les
das
cmc
cmp
inc
mov
xchg
mov
jl
sub
pop
mov
dec
fnstsw
sub
jp
xor
jecxz
sub
test
inc
mov
cmp
xor
jecxz
sub
dec
pusha
mov
inc
popa
jl
mov
loopne
cmp
xor
dec
pop
mov
jl
sub
push
mov
jl
sbb
sub
jp
xor
jecxz
sub
cmps
or
aaa
or
mov
sub
les
jp
aam
test
jmp
and
in
ins
jl
enter
ror
sub
jl
or
(bad)
ds
in
jl
enter
fmul
jl
enter
fmul
jl
enter
call
in
jl
enter
in
ds
in
jl
enter
clc
(bad)
ds
in
jl
enter
cld
(bad)
ds
in
jl
enter
sub
jl
sub
mov
pop
inc
jmp
sub
jl
call
sar
leave
cmp
adc
or
xchg
iret
jne
pop
int
test
jae
sub
mov
pop
pop
cmp
jl
push
jl
sub
jge
inc
enter
daa
add
and
ins
sub
push
jl
enter
in
inc
jl
enter
loope
stc
sub
sbb
in
je
in
jno
adc
sti
xchg
mov
push
mov
js
ins
jmp
or
enter
mov
jl
enter
mov
jl
enter
or
sub
jl
or
jl
enter
cwde
(bad)
ds
in
jl
enter
pushf
(bad)
ds
in
jl
enter
nop
(bad)
ds
in
jl
enter
xchg
(bad)
ds
in
jl
enter
test
ds
in
jl
enter
lods
(bad)
ds
in
jl
enter
mov
in
jl
enter
movs
(bad)
ds
in
jl
enter
mov
in
jl
enter
mov
in
jl
enter
mov
ds
in
jl
enter
mov
ds
in
jl
enter
dec
(bad)
ds
in
jl
enter
dec
(bad)
ds
in
jl
enter
inc
(bad)
ds
in
jl
enter
inc
(bad)
ds
in
jl
enter
pop
(bad)
ds
in
jl
enter
pop
(bad)
ds
in
jl
enter
push
(bad)
ds
in
jl
enter
push
(bad)
ds
in
jl
enter
push
in
jl
enter
ins
(bad)
ds
in
jl
enter
pusha
(bad)
ds
in
jl
enter
fs
ds
in
jl
enter
js
ds
in
jl
enter
jl
ds
in
jl
enter
jo
ds
in
jl
enter
je
ds
in
jl
enter
or
jl
enter
or
ds
in
jl
enter
add
jl
enter
add
ds
in
jl
enter
sbb
jl
enter
sbb
ds
in
jl
enter
adc
jl
enter
adc
ds
in
jl
enter
sub
jl
enter
sub
ds
in
jl
enter
and
jl
enter
and
ds
in
jl
enter
xor
jl
enter
xor
ds
in
jl
enter
enter
pop
in
jl
enter
int3
mov
sub
in
jl
enter
ror
sub
jl
or
mov
sub
in
jl
enter
fmul
jl
enter
fmul
jl
enter
ror
jl
enter
aam
ds
in
jl
enter
call
in
jl
enter
in
mov
sub
in
jl
enter
loopne
ds
in
jl
enter
in
ds
in
jl
enter
clc
mov
sub
in
jl
enter
cld
mov
sub
in
jl
enter
lock
sub
in
jl
enter
hlt
mov
sub
in
jl
enter
mov
jl
enter
mov
jl
enter
or
sub
jl
or
jl
enter
cwde
mov
sub
in
jl
enter
pushf
mov
sub
in
jl
enter
nop
mov
sub
in
jl
enter
xchg
mov
sub
in
jl
enter
test
ds
in
jl
enter
lods
mov
sub
in
jl
enter
mov
in
jl
enter
mov
in
jl
enter
mov
ds
in
jl
enter
mov
ds
in
jl
enter
dec
mov
sub
in
jl
enter
inc
mov
sub
in
jl
enter
pop
mov
sub
in
jl
enter
pop
mov
sub
in
jl
enter
push
mov
sub
in
jl
enter
push
mov
sub
in
jl
enter
push
in
jl
enter
ins
mov
sub
in
jl
enter
pusha
mov
sub
in
jl
enter
mov
sub
in
jl
enter
jo
ds
in
jl
enter
je
ds
in
jl
enter
or
jl
enter
or
ds
in
jl
enter
add
jl
enter
add
ds
in
jl
enter
sbb
jl
enter
sbb
ds
in
jl
enter
adc
jl
enter
adc
ds
in
jl
enter
sub
jl
enter
sub
ds
in
jl
enter
and
jl
enter
and
ds
in
jl
enter
cmp
jl
enter
cmp
ds
in
jl
enter
xor
jl
enter
xor
ds
in
jl
.byte
.byte
