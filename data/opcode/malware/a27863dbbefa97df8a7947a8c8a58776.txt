push
jo
jb
outs
mov
jb
mov
mov
jb
inc
mov
jb
jg
jb
(bad)
mov
jb
push
mov
jb
inc
mov
jb
popa
mov
jb
xor
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
jo
add
push
add
add
xor
dec
jmp
add
add
add
add
add
out
inc
add
add
mov
mov
mov
mov
cdq
mov
in
mov
mov
mov
mov
in
mov
movs
mov
mov
add
add
add
int3
xor
das
mov
aam
dec
lods
je
push
sar
aaa
retf
sbb
inc
test
sub
cdq
iretw
adc
pusha
rcl
scas
sub
add
add
add
add
movs
les
mov
in
mov
mov
movs
in
mov
or
mov
mov
movs
movs
mov
movs
in
mov
mov
mov
mov
add
inc
add
(bad)
(bad)
(bad)
jmp
ins
xor
xor
xor
ret
add
add
add
inc
inc
add
add
add
popa
xor
and
adc
add
push
add
arpl
arpl
add
jae
adc
add
add
add
add
sbb
popa
xor
sbb
add
add
add
add
cs
popa
xor
and
adc
add
push
add
arpl
arpl
add
jae
adc
add
add
add
add
sbb
popa
xor
sbb
add
add
add
add
add
ins
xor
adc
or
loopne
or
add
add
add
add
xor
adc
or
loopne
or
add
add
add
add
add
xor
adc
or
loopne
or
add
add
add
add
add
inc
imul
or
cmp
or
add
add
add
add
add
inc
imul
or
cmp
or
add
add
push
add
gs
add
pop
and
sldt
inc
sbb
add
daa
push
add
jbe
xor
adc
or
cmp
or
inc
push
add
add
or
push
push
arpl
ins
ins
xor
or
add
mov
inc
aaa
add
add
add
add
arpl
ins
ins
xor
or
and
inc
or
add
add
add
add
add
ins
bound
add
add
mov
push
add
ins
bound
add
sbb
inc
add
add
push
add
ins
bound
add
add
mov
push
add
ins
bound
add
sbb
inc
sbb
add
and
je
add
add
or
ret
pop
add
add
add
add
add
je
add
add
or
ret
push
add
add
add
add
add
je
add
add
or
ret
adc
add
add
add
je
add
add
or
ret
adc
inc
sub
add
push
pop
add
je
outs
outs
xor
push
add
add
je
outs
outs
xor
add
mov
adc
inc
sub
add
sbb
je
outs
outs
xor
push
add
add
je
outs
outs
xor
add
mov
adc
inc
sub
add
sbb
add
je
outs
outs
xor
push
add
add
je
outs
outs
xor
add
mov
adc
inc
sub
add
sbb
add
ins
ins
popa
outs
fs
or
inc
outs
ins
ins
popa
outs
fs
or
out
add
adc
inc
sub
add
sbb
add
ins
ins
popa
outs
fs
add
ins
ins
popa
outs
fs
lock
add
(bad)
inc
sub
add
sbb
add
ins
ins
popa
outs
fs
add
or
inc
outs
ins
ins
popa
outs
fs
add
or
out
add
push
add
add
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
out
add
or
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
out
add
or
inc
sub
add
push
or
inc
outs
ins
ins
popa
outs
xor
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
out
add
or
inc
and
add
adc
js
xor
add
or
out
add
add
je
add
or
inc
and
add
adc
add
je
add
add
or
out
add
add
je
add
or
inc
fcmovnb
add
adc
add
arpl
xor
add
mov
add
ins
je
add
fdivr
loope
sbb
imul
add
add
add
in
add
inc
jne
imul
add
add
cmp
add
loope
sub
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
add
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
xor
xor
xor
aaa
aaa
sub
xor
xor
das
xor
das
xor
sub
xor
xor
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
push
xor
outs
ja
and
js
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
inc
inc
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
aaa
inc
xor
aaa
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
inc
inc
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
push
data16
jne
outs
je
inc
cmp
cs
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
ds
out
add
inc
outs
bound
rol
add
(bad)
fild
test
push
add
add
add
add
add
push
push
or
or
or
or
or
or
or
or
adc
movups
push
or
adc
adc
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
or
adc
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
add
or
outs
add
add
add
adc
add
add
les
mov
add
add
add
push
pop
add
or
add
add
add
add
add
add
add
push
pop
adc
add
add
add
pop
add
add
add
xor
add
jno
and
xchg
mov
inc
push
and
bound
loope
xchg
mov
icebp
mov
inc
xor
or
shl
inc
es
test
add
add
add
add
add
add
add
add
adc
add
xor
adc
adc
adc
shl
bound
loop
(bad)
fiadd
or
add
add
add
add
add
in
aas
push
cmp
fistp
xor
sbb
loope
fcomp
cdq
outs
repz
out
test
adc
arpl
cmc
cmp
lods
pop
mov
fidivr
std
lock
xor
xchg
pop
icebp
sti
movs
pop
aam
cmp
mov
scas
lock
sbb
retf
jnp
add
adc
cld
sbb
fisttp
dec
cmp
sub
mov
jbe
in
std
rcl
push
sbb
loop
adc
ret
push
adc
rcl
jae
adc
push
sub
test
push
jno
inc
movs
addr16
or
and
test
sbb
inc
movs
aam
cwde
add
or
inc
mov
push
fidivr
js
mov
xlat
inc
mov
pushf
inc
(bad)
leave
sub
lds
cmps
inc
sbb
sub
dec
push
(bad)
ror
pop
sub
xor
add
add
xor
xchg
adc
or
aam
xchg
imul
sub
add
test
jo
sbb
ret
inc
cmp
adc
test
idiv
ret
cs
or
sbb
cmp
daa
mov
scas
sbb
xchg
(bad)
push
mov
popa
inc
sbb
push
jno
and
adc
push
add
xchg
push
ins
leave
and
adc
rol
mov
cwde
fxch
neg
xchg
repnz
imul
mov
out
loop
add
mov
mov
dec
cmp
add
rol
inc
or
jmp
mov
cdq
lods
push
pop
push
mov
push
fidiv
jnp
mov
int
cld
push
popa
push
movs
sbb
sbb
lock
mov
cmp
lea
cmp
adc
or
xchg
jns
adc
xchg
add
xchg
sub
lea
xchg
cmp
xchg
mov
dec
jbe
(bad)
mov
test
ja
cmp
retf
mov
imul
pop
pushf
test
addr16
addr16
lea
les
push
and
mov
xchg
(bad)
ret
pop
ret
dec
pushf
stos
pop
rol
jae
sbb
jae
adc
mov
cmp
push
clc
repz
dec
ins
imul
popf
mov
inc
loop
or
cdq
xchg
sti
mov
push
lahf
and
mov
mov
fadd
xchg
pop
xor
cmovb
ja
cmp
outs
mov
test
mov
sub
sub
loop
fmulp
sub
rcr
daa
sbb
fld
inc
int
stos
inc
fistp
stos
cmp
aas
jge
(bad)
jecxz
push
push
xlat
fsubr
iret
idiv
and
ret
jnp
retf
jae
arpl
cmp
call
mov
(bad)
fdiv
dec
ficomp
rcl
jmp
jmp
sbb
sub
(bad)
xchg
push
dec
clts
mov
sub
mov
lahf
or
pop
sar
xor
cwde
rol
push
sbb
and
push
sbb
inc
test
mov
retf
aam
ret
add
call
inc
inc
or
mov
(bad)
mov
inc
(bad)
push
in
add
add
xor
or
mov
mov
add
xchg
cmp
outs
sub
add
retf
cs
xor
add
test
rcl
push
sar
add
mov
addr16
add
mov
fnstcw
or
pop
push
or
mov
dec
test
sbb
cvtps2pd
rcl
push
ret
pop
mov
pusha
pusha
and
aam
fcom
test
ficomp
push
imul
adc
xchg
aas
add
mov
jns
(bad)
mov
fcmovnb
loope
int3
hlt
sar
jbe
and
or
lahf
clc
mov
das
jg
mov
fcomi
jecxz
out
sub
mov
dec
jno
mov
push
push
xlat
jl
xchg
xlat
ins
fisttp
mov
retf
popf
xor
(bad)
sub
mov
out
push
dec
sub
cld
sbb
imul
push
or
ins
dec
je
xchg
imul
xchg
jne
xor
loopne
mov
sbb
jl
cmp
jb
test
cmps
add
xchg
out
imul
sahf
fisttp
pop
pop
es
xchg
and
cmp
mov
xor
pop
sbb
sub
mov
cmps
dec
xor
test
into
push
and
ret
jno
jmp
push
dec
loop
lds
mov
push
dec
dec
js
das
and
add
sub
push
or
repnz
arpl
enter
push
and
repnz
xchg
adc
jne
leave
add
dec
xor
not
idiv
cli
push
stc
pop
in
xor
int
outs
jl
mov
fucomip
mov
pop
mov
pop
imul
push
pusha
push
and
jnp
icebp
idiv
test
or
pushf
retf
sub
rcl
test
cmp
in
pop
mov
fstp
push
mov
and
repnz
jmp
cwde
enter
in
lods
mov
mov
push
sbb
fidiv
sub
jl
xor
sub
cmps
ret
pop
test
cmps
pop
nop
pop
jnp
mov
popa
mov
sbb
jae
cmps
loop
imul
jo
sbb
stc
adc
in
popf
and
cld
adc
mov
lahf
xchg
xchg
inc
icebp
sti
call
in
ins
lds
sbb
add
sbb
sahf
cli
movs
jecxz
mov
cmp
ja
shr
cmc
pop
adc
sub
xchg
push
ret
dec
out
adc
in
stos
(bad)
and
mov
std
push
aam
dec
imul
jmp
pop
daa
and
imul
push
gs
movs
addr16
push
or
xchg
adc
pop
out
rcr
mul
pop
aas
jb
repz
jns
imul
pop
push
(bad)
and
pop
test
addr16
(bad)
and
(bad)
lods
imul
jb
mov
pop
out
push
hlt
push
mov
pop
fstp
xchg
mov
pushf
sbb
dec
fsubr
sub
add
adc
test
sbb
xor
test
adc
imul
and
test
(bad)
call
dec
push
add
ds
xchg
inc
inc
das
imul
(bad)
cli
adc
or
push
bndldx
shl
xor
mov
mov
test
sbb
test
lock
mov
loope
adc
add
and
inc
xor
mov
push
or
pushf
jae
sub
bound
and
sbb
push
or
push
and
mov
push
add
xchg
sbb
dec
or
or
sub
push
and
dec
bound
jmp
sub
pusha
and
aas
sub
lock
outs
aaa
cwde
mov
pop
push
shl
lock
addr16
dec
(bad)
icebp
ins
and
into
aam
cwde
pop
ds
push
mov
jp
dec
aad
pop
sbb
imul
mov
inc
pop
mov
inc
stc
xchg
add
std
retf
pop
sbb
xchg
mov
jg
push
fsub
std
(bad)
adc
pop
lods
xchg
aad
imul
stc
pushf
js
sub
dec
test
push
cli
adc
pop
mov
and
cdq
xor
xor
mov
cli
test
gs
pop
(bad)
pop
sbb
dec
push
in
arpl
inc
in
dec
push
jmp
imul
retf
aaa
or
cld
or
add
mov
jne
fist
dec
pop
adc
les
push
xor
clc
push
add
add
push
and
xor
std
(bad)
mov
xor
push
xchg
cmp
and
sub
xchg
(bad)
sbb
jp
xor
push
ss
jmp
lea
sbb
push
daa
mov
shl
movd
push
out
mov
fxtract
sbb
pop
xchg
and
dec
iret
bound
dec
sbb
or
(bad)
xchg
in
scas
add
addr16
ja
or
and
xor
std
mov
xor
push
data16
enter
in
not
cmps
and
pop
and
sub
sbb
(bad)
neg
ror
cwde
lock
arpl
jne
jge
fimul
addr16
add
and
scas
sbb
lods
pop
fmul
pop
mov
(bad)
out
ror
push
lahf
cdq
scas
and
xchg
ins
call
cmp
daa
adc
sub
sub
cld
cmp
and
and
dec
mov
mov
mov
pusha
jne
xor
sti
xchg
xor
lahf
push
pop
addr16
jns
test
enter
lods
cdq
jo
xor
daa
aas
adc
call
xchg
fist
not
rcr
mov
ds
ret
inc
adc
sahf
retf
push
fsub
test
arpl
push
ss
adc
imul
stc
xor
cmp
jge
mov
fst
loopne
add
stos
dec
clc
mov
fadd
xchg
mov
xlat
push
mov
sub
arpl
add
lea
sbb
or
jnp
mov
retf
push
inc
xor
pop
das
xchg
xor
cmp
inc
and
jbe
retf
(bad)
mov
ret
dec
inc
mov
popf
pop
ins
xor
sti
jg
out
test
xchg
jecxz
les
packuswb
ins
arpl
jb
pushf
pop
stos
cmp
in
pop
sub
std
rcr
movs
ffreep
lods
mov
dec
loop
sbb
pop
jo
cli
xchg
pushf
iret
inc
int
repz
mov
cmp
cmp
sbb
fiadd
inc
loope
lods
imul
push
sbb
inc
retf
dec
shr
push
pop
inc
xor
add
pop
(bad)
outs
push
ins
pop
pop
sub
ret
pushf
mov
inc
les
push
or
sbb
mov
and
push
test
std
fld
pop
loope
mov
call
int3
mov
sbb
inc
sub
add
dec
dec
sub
rcl
sbb
sbb
dec
sub
cdq
rol
loopne
cmps
dec
nop
sub
inc
xchg
cmp
sub
inc
add
sub
and
retf
fs
pushf
mov
inc
ins
inc
aam
mov
sbb
mov
push
and
mov
(bad)
xchg
mov
add
test
or
aam
dec
sbb
pop
add
sub
(bad)
add
jno
pop
mov
aam
ret
(bad)
mov
and
(bad)
pop
fs
inc
or
(bad)
ss
xchg
mov
movs
stos
mov
sbb
or
xchg
jo
scas
cmp
sbb
sub
sub
std
dec
mov
sar
or
jae
lods
cmps
inc
dec
mov
mov
stc
mov
xchg
je
adc
mov
mov
jbe
data16
cld
push
add
fs
mov
sub
aas
mov
xchg
xchg
imul
hlt
mov
icebp
mov
sbb
call
add
dec
and
clc
pop
frstor
test
add
jns
pop
xchg
add
push
popf
cmps
fwait
adc
mov
cmp
and
and
sub
cmc
and
jno
or
lds
sub
mov
and
mov
xchg
lea
scas
inc
dec
stos
and
out
inc
push
pcmpeqb
and
adc
adc
add
popa
push
nop
test
dec
add
adc
ret
mov
push
loopne
(bad)
mov
(bad)
xor
fidiv
ss
out
ins
ins
jae
dec
xor
sub
cld
push
fsubr
aam
pusha
push
sti
leave
enter
out
push
xor
push
aam
push
cmp
leave
retf
int
shl
fdivr
jae
xlat
mul
jae
frstor
cmp
pop
xor
je
fsubr
mov
repnz
test
frstor
mov
dec
outs
adc
mov
jmp
shl
neg
mov
cmp
mov
(bad)
ins
jg
pop
mov
inc
inc
add
enter
inc
into
xchg
push
cmp
mov
test
adc
fs
retf
je
mov
adc
pusha
loope
arpl
scas
xchg
sub
movs
sbb
lods
push
and
idiv
add
fwait
xchg
and
fcomp
stos
xchg
dec
pusha
mov
dec
sahf
je
stos
push
dec
std
int3
arpl
xchg
pop
jmp
mov
test
mov
mov
cmc
loope
ins
ins
scas
nop
xchg
mov
retf
arpl
int3
jbe
fimul
test
dec
cld
inc
inc
fstp
xchg
int3
fs
xor
adc
or
ins
repnz
sbb
pop
xor
xchg
mov
(bad)
xchg
mov
(bad)
loopne
(bad)
std
and
push
jecxz
nop
mov
nop
ins
pop
sub
call
test
imul
stos
clc
(bad)
in
xchg
test
pop
int
aaa
rol
xchg
outs
mov
jp
jne
jp
into
in
loope
ss
sbb
jnp
aad
fnstcw
lods
das
pop
xor
test
mov
into
cmp
icebp
shl
loope
in
push
mov
in
ja
and
jmp
std
dec
mov
sub
loopne
loop
adc
movs
or
adc
in
fstp
(bad)
in
sub
scas
(bad)
in
jae
sbb
(bad)
mov
aad
jne
sbb
lds
shl
pop
add
imul
aam
popf
xchg
mov
pop
pop
xor
and
ret
push
mul
pop
or
ja
mov
push
sahf
fcmovnb
inc
(bad)
test
ret
jge
les
cmps
sub
imul
mov
pop
mov
add
stos
cmp
and
sbb
in
std
dec
dec
pop
sti
inc
lea
xchg
aam
arpl
xor
mov
inc
adc
(bad)
fdiv
push
(bad)
fsubr
(bad)
cmc
std
cmps
call
retf
adc
push
push
mov
sub
jb
fimul
or
stos
stos
repz
jo
push
and
or
loopne
add
cmps
and
fild
pop
dec
aas
ror
push
adc
or
rcl
cdq
lea
les
bound
mov
enter
xchg
mov
dec
mov
data16
in
retf
test
xchg
mov
cmp
data16
inc
adc
add
cli
add
mov
and
pop
and
ins
sub
cmp
test
fimul
dec
xor
xchg
push
mov
cmp
sbb
cmps
stos
leave
xchg
push
ss
or
pop
mov
sub
jmp
xor
cmp
jl
iret
and
fdiv
mov
ins
lods
cwde
push
and
xchg
rcr
sbb
mov
repz
pop
js
sbb
sbb
(bad)
mov
sbb
pusha
retf
(bad)
repnz
call
arpl
popf
dec
imul
xor
adc
out
(bad)
mov
adc
xchg
cmps
sbb
mov
xor
lods
(bad)
into
aaa
cli
push
out
scas
adc
retf
pop
rcr
out
std
out
nop
push
out
mov
imul
test
es
mov
mov
push
dec
inc
retf
loop
push
sbb
push
push
lea
add
add
push
lods
sub
inc
arpl
push
aam
cmp
inc
xor
(bad)
rol
cmp
mov
in
push
dec
xchg
cmp
adc
in
sti
outs
sub
jo
jecxz
pop
cmp
dec
cmp
cmps
adc
sbb
inc
sbb
and
je
test
xchg
add
or
adc
cmp
lea
jno
xor
sbb
push
scas
into
adc
cli
in
sub
xchg
mov
div
mov
push
in
aad
sti
pop
xor
ror
cmp
lahf
repz
(bad)
cs
jbe
out
scas
daa
and
fmul
jne
std
xchg
neg
cvtps2pi
jle
xchg
das
cmps
in
mov
cmp
jecxz
dec
in
call
jg
stc
push
cli
bound
sti
dec
xchg
add
mov
ins
mov
mov
outs
push
ins
scas
outs
jnp
out
loope
(bad)
les
hlt
cwde
xchg
mov
iret
fisubr
xor
push
xchg
pushf
sbb
xchg
cmp
push
mov
or
sbb
jmp
add
sub
iret
mov
jb
jno
sbb
dec
xor
mov
retf
jo
stos
sbb
outs
shl
push
sbb
mov
pop
movs
pusha
pop
xor
scas
out
scas
fistp
cmp
pop
jmp
jo
inc
scas
aas
jge
jb
les
jecxz
(bad)
rcl
cmps
jo
pusha
and
scas
iret
dec
cmp
loope
scas
fdiv
fwait
xor
add
fisubr
ds
bound
sbb
ror
loope
gs
sbb
daa
mov
inc
cld
pop
je
dec
xchg
pop
push
ss
addr16
dec
mov
test
mov
mov
xor
mov
mov
repnz
fdivr
sahf
loopne
add
inc
and
sbb
outs
cmp
dec
fs
xchg
shl
fisttp
sahf
into
push
sub
scas
mov
sub
call
sbb
stos
ror
push
or
mov
xchg
lahf
xchg
test
mov
mov
push
adc
sub
and
add
iret
jmp
lods
ror
icebp
scas
inc
ret
call
test
in
popf
daa
xchg
mov
gs
addr16
and
mov
test
push
retf
mov
lahf
fwait
sbb
fisubr
fdiv
xchg
push
inc
push
mul
dec
mov
mov
(bad)
(bad)
fadd
cmp
std
jle
cmp
icebp
fbstp
jnp
iret
jo
xor
mov
(bad)
cs
scas
adc
loop
int
inc
stos
sbb
shl
pop
pop
sub
out
pop
pop
push
jne
cmps
fdiv
dec
sub
inc
leave
adc
fidiv
imul
sbb
jp
cmp
cli
lahf
aaa
leave
imul
xchg
sar
jp
repnz
lods
icebp
mov
jg
(bad)
daa
inc
and
lock
dec
mov
or
test
add
push
adc
jge
lock
jg
sub
aaa
sub
in
aas
rcr
retf
xor
fcmovnu
dec
cdq
pop
sbb
push
cmps
sub
xlat
mov
push
push
mov
pusha
adc
mov
sbb
add
dec
sbb
out
cmps
adc
or
cwde
adc
push
mov
push
loop
out
cmps
adc
gs
cmps
xor
ret
mov
jno
aam
popa
pop
fadd
and
mov
test
mov
sub
adc
and
shl
adc
jae
sub
jnp
and
add
jecxz
hlt
jg
sub
(bad)
cmp
fsub
add
cs
aaa
push
mov
mov
dec
jmp
push
(bad)
aam
cmp
mov
push
test
cmc
inc
dec
cwde
adc
fistp
sti
mov
xchg
xlat
pop
pop
mov
jmp
xchg
paddusw
mov
xchg
xchg
loopne
fwait
sbb
cmp
add
push
in
int
mov
jnp
dec
sbb
inc
js
cmp
push
dec
jecxz
daa
call
gs
dec
das
cs
jno
push
mov
loopne
lock
add
jne
sbb
int3
push
pop
add
std
push
shl
cwde
(bad)
repnz
or
mov
push
jl
aas
jge
adc
in
mov
je
cmps
sub
or
ror
push
xor
xchg
and
adc
sbb
mov
pop
test
div
aad
lds
cmc
and
sbb
cmps
push
push
dec
ins
outs
inc
jns
sbb
push
mov
and
xchg
imul
mov
mov
adc
jbe
or
add
jo
dec
xor
jo
fild
push
pop
retf
sub
ret
fild
imul
lods
lods
loope
popa
cmp
mov
sbb
jbe
repz
cmp
fstp
mov
push
in
fsub
jnp
xor
jecxz
js
aas
js
fucomi
sar
cmps
out
in
mov
jg
leave
lock
daa
and
in
dec
dec
jne
std
xchg
test
pop
stos
cld
xor
ret
ins
pop
dec
cs
(bad)
stos
je
mov
push
cli
bound
aam
jecxz
xchg
mov
mov
loopne
data16
and
mov
aaa
loopne
(bad)
int
jmp
lods
clc
popf
in
sbb
cmp
scas
rcl
mov
imul
cmps
dec
push
xchg
mov
mov
daa
add
and
cmp
pusha
pushf
jmp
call
cs
addr16
(bad)
scas
ds
push
enter
inc
pop
test
movs
jnp
mov
mov
sub
fld
fisttp
daa
xchg
push
ss
ret
lea
ins
pusha
repz
mov
lods
mov
push
xor
sahf
jne
aad
fist
shl
xchg
inc
jo
sbb
mov
cdq
daa
inc
or
repnz
push
inc
pause
je
xor
sar
push
pusha
mov
push
aam
sub
mov
xchg
adc
repz
or
sbb
jmp
(bad)
xchg
leave
sar
ins
xor
jbe
repnz
adc
(bad)
fsub
cwde
out
and
popa
leave
pop
push
sbb
push
fld
call
cmc
sar
bnd
in
fld
xlat
mov
mov
popa
out
jbe
fcmovnu
cmp
and
movs
dec
rcr
movs
mov
mov
mov
push
into
stos
leave
(bad)
out
fild
(bad)
out
push
mov
mov
mov
sbb
xor
inc
pop
sub
cmp
lds
imul
jle
mov
into
(bad)
xor
nop
movs
jge
dec
aam
ror
ja
call
and
jne
in
mov
dec
push
jle
mov
retf
dec
pop
(bad)
scas
or
and
cli
pop
dec
xlat
sub
inc
xor
cmps
int
shr
push
mov
repz
(bad)
adc
test
movs
stc
jns
push
push
dec
inc
xchg
jecxz
pop
imul
and
jae
jno
mov
arpl
or
dec
bound
or
retf
mov
mov
stc
inc
and
cmp
jmp
cmp
aad
(bad)
test
sbb
or
std
sub
xor
sub
cmps
fimul
(bad)
daa
inc
dec
jmp
adc
fwait
in
mov
or
add
push
inc
sbb
push
scas
jmp
jge
enter
mov
mov
mov
and
xor
mov
imul
retf
mov
add
add
xchg
xchg
sbb
xchg
enter
call
adc
push
(bad)
mov
sbb
ret
add
aam
and
cmp
pop
xor
xor
mov
sbb
or
cmovno
or
pop
mov
dec
imul
dec
test
push
rcr
(bad)
in
pop
mov
jns
fstp
xchg
cmps
inc
push
rcl
mov
ror
mov
in
(bad)
dec
dec
jle
xchg
call
xor
sub
sti
add
retf
rol
call
inc
outs
test
or
cmp
inc
repnz
jne
push
popa
xor
(bad)
test
imul
push
or
movs
adc
loop
mov
(bad)
pusha
adc
mov
outs
int3
pusha
ins
inc
fiadd
or
loope
mov
aas
push
cmp
jmp
dec
cdq
shl
js
xor
xchg
and
mov
xchg
fcom
sbb
cmp
cmp
out
dec
and
pop
and
cli
in
sahf
in
inc
mov
push
pop
out
jmp
hlt
add
enter
adc
outs
pop
fs
xchg
outs
sub
mov
shl
sub
and
xchg
lock
clc
aam
xchg
adc
mov
leave
(bad)
popw
loop
inc
jo
test
inc
fld
mov
mov
push
inc
inc
shr
and
rcl
inc
or
scas
sub
div
outs
ds
(bad)
(bad)
in
xchg
movs
dec
push
pop
lea
mov
mov
ins
push
push
addr16
fwait
xchg
std
cmp
gs
jle
test
aam
pop
mov
das
cmc
push
dec
mov
(bad)
retf
pop
ins
out
cli
pop
xchg
mov
out
push
inc
xchg
in
js
aaa
jl
cwde
call
mov
pop
jl
jbe
cmc
pop
and
pop
(bad)
xchg
iret
sub
(bad)
test
inc
pop
jecxz
add
add
push
push
and
aad
icebp
mov
cdq
or
xchg
out
sub
int3
jne
jo
lods
or
mov
jae
sahf
or
and
pop
out
push
or
sub
or
lea
inc
das
(bad)
out
mov
inc
ja
retf
dec
fdivr
mov
mov
adc
dec
push
lock
out
scas
xchg
mov
dec
dec
call
or
int
in
pushf
add
cmp
cmps
data16
loopne
mov
hlt
gs
in
cmp
add
fsub
xlat
(bad)
jp
mov
sbb
stc
arpl
test
inc
stos
mov
rol
push
std
cmps
data16
xor
popa
jo
inc
xchg
push
xchg
lea
pop
inc
or
mov
mov
ins
pop
adc
push
mov
xchg
fst
xor
mov
cmps
nop
lds
adc
pop
shr
imul
xor
int
dec
popa
sbb
add
jbe
inc
dec
and
jmp
sbb
ror
out
push
sahf
dec
fdivr
jbe
ins
mov
icebp
add
push
fistp
xchg
mov
imul
mov
gs
jno
sete
cmp
xor
sub
pop
mov
xchg
ss
movs
movs
add
cmp
test
cmps
(bad)
hlt
push
sbb
add
icebp
pop
mov
test
mov
lods
sub
inc
jmp
or
fsubr
loop
xchg
xlat
adc
neg
mov
aam
dec
loopne
sbb
scas
push
test
mov
pop
pop
jle
in
call
or
push
dec
dec
cdq
sbb
cmp
(bad)
mov
pop
inc
mov
ja
and
daa
and
aad
stos
(bad)
enter
cmp
add
loope
dec
sbb
mov
cdq
sub
push
in
outs
mov
cwde
pusha
fdivrp
call
popf
sti
cmps
xlat
mov
out
cmc
jbe
add
movs
and
adc
xor
adc
fstp
inc
sbb
jmp
push
daa
cmc
imul
(bad)
jbe
movs
add
xchg
jae
mov
inc
xor
stos
push
pop
scas
cmp
inc
inc
push
arpl
les
pusha
cmp
push
or
sbb
daa
push
jne
adc
movs
daa
sbb
shl
movs
mov
add
and
(bad)
in
mov
mov
mov
sbb
cmps
jne
fwait
sub
or
lods
outs
push
jo
or
pop
mov
xchg
push
or
lea
push
mov
jnp
sbb
sbb
mov
xchg
aas
mov
sahf
jmp
popf
fild
inc
hlt
jg
sbb
adc
or
clc
push
adc
inc
adc
inc
rol
daa
xchg
pop
test
inc
pop
repnz
push
(bad)
leave
dec
cmp
jnp
pop
out
mov
dec
(bad)
sbb
cmps
mov
dec
dec
adc
es
mov
test
adc
popa
add
loope
mov
add
fnstcw
mov
repnz
mov
clc
xchg
pusha
test
imul
aaa
into
scas
dec
sbb
jnp
adc
dec
mov
fiadd
(bad)
rcr
cmp
into
jne
add
or
push
retf
lock
inc
pop
cmp
xor
sbb
inc
push
dec
scas
or
pop
sub
pop
(bad)
sbb
pop
add
les
fild
and
(bad)
jae
sub
mov
push
pushf
inc
rcl
mov
(bad)
mov
pop
push
into
or
inc
lahf
mov
lahf
es
mov
inc
rcr
out
jns
xlat
cmp
(bad)
xchg
aaa
mov
dec
push
jne
outs
ds
fstp
test
xor
in
ret
mov
sbb
push
loopne
stos
sti
mov
js
addr16
push
outs
loop
jle
fsubr
xlat
push
in
pop
je
imul
in
enter
add
test
or
out
jnp
pop
cs
(bad)
leave
(bad)
sbb
fst
lock
mov
ficom
jge
mov
pop
pop
sbb
adc
shl
xor
outs
std
sbb
fld
leave
mov
jns
xor
ins
push
add
dec
jmp
lds
add
dec
cmp
or
or
sbb
jae
dec
pop
hlt
pop
iret
fst
jb
jge
fadd
mov
mov
xchg
add
xchg
fidivr
inc
sbb
xor
push
dec
in
jmp
pop
ins
rcr
cmp
leave
sub
add
mov
enter
xor
pop
ins
dec
mov
fcomp
sub
cmp
scas
dec
pop
ret
jnp
in
jp
jmp
cmc
cmp
push
and
shr
add
mov
nop
out
not
out
cwde
out
or
sub
ret
and
mov
xor
sbb
or
dec
adc
jbe
repnz
xacquire
in
(bad)
ds
fisttp
and
mov
(bad)
dec
int
add
jns
out
(bad)
shr
pop
aam
jno
mov
frstor
(bad)
daa
jns
jbe
hlt
dec
nop
loopne
stc
aad
lds
es
fiadd
or
popa
push
jbe
rcr
pop
call
fdivr
and
mov
push
fistp
push
aaa
jbe
mov
lds
cmp
adc
push
dec
sahf
fidiv
les
lods
test
mov
pop
and
loopne
mov
ja
in
mov
jne
mov
inc
into
xlat
pop
xchg
dec
mov
push
test
aas
shr
mov
jecxz
push
fucom
jb
jbe
stc
xchg
out
aaa
fisttp
dec
fld
adc
jg
inc
sahf
jae
jl
retf
sbb
adc
dec
inc
push
mov
(bad)
adc
into
xor
push
mov
les
mov
fiadd
bound
push
and
movs
push
dec
or
mov
adc
push
cmp
sub
sbb
retf
xchg
stos
xchg
mov
adc
retf
test
stc
jmp
les
cmp
mov
cmp
push
xchg
and
scas
push
adc
inc
sub
push
pop
dec
jo
sub
adc
pusha
mov
adc
cmps
(bad)
lahf
jne
dec
and
jb
push
sub
lds
ins
jno
out
leave
stos
dec
clc
or
int3
aad
add
jne
aam
int
call
inc
xor
jns
xchg
out
mov
jae
arpl
cmps
sub
adc
sbb
stos
inc
aaa
add
(bad)
add
dec
loopne
aad
add
cld
pop
pop
xlat
push
leave
cmp
push
or
cmp
shr
add
loopne
stos
enter
scas
push
in
push
(bad)
outs
pop
cmps
(bad)
mov
cmp
sub
and
mov
test
cmp
sub
fild
sbb
add
xor
inc
pusha
in
out
fild
lea
rcl
in
jge
mov
in
addr16
cmp
sbb
fs
cmc
cmp
(bad)
mov
ret
xchg
imul
push
les
or
jne
cmp
les
cmp
sub
or
mov
pop
mov
ror
mov
dec
ret
neg
jl
pop
imul
sub
cwde
mov
jge
hlt
mov
pop
adc
div
loop
out
mov
jg
aad
jno
or
push
xchg
mov
stos
clc
aad
pop
push
ror
rcr
cdq
ins
scas
test
push
stos
(bad)
pop
push
retf
(bad)
mov
std
xchg
push
out
rcr
mov
std
ret
in
xchg
out
stos
pop
xlat
sbb
scas
repz
cmps
mov
in
mov
js
inc
push
cmp
dec
addr16
jno
(bad)
popf
cmp
(bad)
fdiv
scas
jns
fstp
push
(bad)
push
mov
dec
(bad)
imul
and
mov
fldcw
fimul
fdivr
test
cli
icebp
xor
test
inc
aam
aaa
aad
aam
sbb
jne
out
mov
shl
add
xchg
sub
inc
fucom
jmp
inc
mov
jb
adc
aas
gs
mov
mov
out
enter
fstp
call
mov
popf
les
dec
cld
mov
out
sub
xor
xchg
push
push
not
and
daa
jo
push
cmp
movs
adc
sbb
jecxz
and
movs
out
push
fisub
xor
push
or
xchg
add
aam
xchg
sbb
push
lea
add
or
jl
fisub
mov
mov
das
adc
mov
jmp
and
ins
scas
sbb
cwde
jne
inc
or
pop
mov
in
mov
enter
lds
hlt
adc
mov
ins
mov
fld
or
out
mov
jmp
jl
bound
cli
pop
fdiv
mov
add
mov
loope
mov
xor
inc
leave
pop
and
jnp
cmc
arpl
mov
cmp
push
or
dec
jno
sbb
test
lea
cmc
jp
sbb
shr
shl
cmp
(bad)
call
clc
movs
jae
pop
sbb
jmp
lods
push
icebp
push
fcom
jp
outs
outs
jg
loop
pushf
pop
dec
mov
aaa
and
xchg
adc
dec
xchg
scas
cli
das
adc
cld
out
arpl
dec
inc
push
xor
pusha
dec
pop
fs
outs
ja
add
mov
jecxz
jle
mov
adc
jne
sbb
sbb
xor
test
jne
dec
and
sbb
adc
sbb
push
xchg
add
xor
push
sahf
sbb
in
jns
dec
and
repz
call
popa
cdq
and
or
inc
sbb
pop
dec
mov
cmp
fisub
mov
xchg
out
push
imul
loope
cmc
jno
jbe
iret
or
je
push
jmp
push
(bad)
cmp
loop
(bad)
dec
repz
pop
mov
fstp
in
test
lods
cmp
adc
fcomp
push
ror
dec
xchg
and
in
mov
daa
push
cli
mov
jmp
sub
popf
leave
cli
inc
add
adc
jae
jns
sbb
add
inc
push
jge
ja
mov
nop
xor
sub
inc
fs
stc
lea
les
dec
jbe
add
retf
sbb
lods
xchg
daa
or
test
aam
inc
mov
inc
xor
and
dec
push
(bad)
cmp
sar
xor
pop
fst
lahf
adc
add
cmps
mov
xlat
xor
sub
push
(bad)
jg
mov
ret
out
ds
(bad)
sbb
fistp
fdivr
sbb
jp
imul
cdq
in
add
xor
int3
cdq
es
stos
pop
cmps
jne
ds
sub
sbb
or
mov
add
mov
pop
ds
inc
out
rcl
xchg
dec
(bad)
lahf
pop
mov
or
cmp
loope
nop
scas
fisttp
bound
lock
(bad)
or
sbb
xchg
inc
xchg
repnz
push
inc
popa
xchg
or
sar
aas
mov
je
sbb
jp
(bad)
icebp
ja
jo
sahf
gs
mov
aas
gs
mov
stc
add
cmp
movs
adc
aam
sti
outs
popf
cs
push
pushf
push
out
inc
ja
push
mov
mov
std
dec
mov
xor
arpl
fidivr
inc
mov
jecxz
push
cmps
out
sub
nop
or
add
xchg
in
add
or
test
pop
sbb
mov
pop
repnz
adc
xor
jbe
inc
xchg
cmp
shl
(bad)
loopne
ficomp
(bad)
repnz
ds
cli
jae
arpl
push
dec
mov
into
xor
loop
int3
jae
ficom
cmps
loopne
push
push
movs
retf
out
test
cmp
int
(bad)
sti
and
jge
(bad)
inc
sar
push
pop
push
shl
mov
push
cmps
pop
aaa
cld
(bad)
inc
mov
mov
dec
scas
xlat
outs
popa
inc
cdq
sub
retf
les
jle
dec
int
stos
and
aad
mov
cld
rol
bound
(bad)
adc
dec
fstp
adc
jmp
imul
dec
xchg
push
sub
add
stos
stos
bnd
push
repnz
fcomi
inc
inc
ficomp
jns
fnstsw
inc
sbb
fimul
and
mov
or
fs
cmp
movs
jnp
jbe
outs
lds
fsubr
pop
push
outs
cdq
stos
jnp
pop
mov
dec
int3
iret
pop
mov
xor
stos
push
ins
add
sti
push
lds
stos
sar
(bad)
loopne
cs
out
mov
in
addr16
movs
fwait
jmp
outs
pop
or
call
add
xor
jne
arpl
les
xor
xor
(bad)
out
js
clc
push
add
add
mov
into
std
test
push
adc
inc
(bad)
in
sub
adc
mov
dec
int3
xchg
ds
ret
ret
inc
shl
push
in
scas
int3
or
(bad)
movs
cs
sub
pop
jge
push
lds
pusha
or
cmp
(bad)
xchg
cli
dec
iret
daa
xor
xor
retf
imul
push
or
add
mov
loop
cmp
in
mov
and
jmp
sub
mov
jmp
pop
pop
aam
xor
inc
out
or
cmp
jo
pushf
xlat
jbe
adc
fcom
mov
pop
and
push
rol
cld
xor
or
and
add
rol
pop
mov
ins
shl
cmp
add
xor
loop
lds
mov
aas
sub
in
(bad)
test
pop
and
or
lods
out
mov
pushf
ficomp
pop
cmp
sbb
sub
ss
mov
xor
cmp
pop
aad
cmps
test
sub
outs
pushf
or
sub
push
pop
mov
pop
(bad)
test
sar
mov
adc
loopne
or
lods
(bad)
sbb
retf
ins
shl
push
jmp
and
jg
push
sub
pop
test
das
imul
or
inc
outs
bound
push
daa
dec
or
cmp
rcl
mov
cmc
arpl
and
mov
dec
sbb
aas
cmp
inc
sbb
cmp
call
sub
or
xor
push
adc
mov
sbb
jmp
clc
lods
pop
out
jnp
cmps
ret
cli
pop
(bad)
out
aas
leave
clc
das
loop
mov
mov
jecxz
or
xor
jb
test
add
mov
in
adc
mov
adc
test
mov
movs
xchg
mov
outs
and
xchg
adc
rcl
test
cwde
mov
jo
adc
cmp
mov
xchg
(bad)
mov
inc
pop
sbb
ja
mov
push
sti
shl
popa
les
mov
pop
outs
icebp
rcl
clc
sub
std
adc
or
test
ja
mov
sti
scas
mov
jg
shl
mov
push
xchg
jno
lods
scas
ins
mov
int
scas
cwde
(bad)
(bad)
cmp
xor
cmp
xlat
and
add
retf
outs
fdiv
clc
mov
xchg
or
xchg
jbe
mov
mov
fdivr
loope
push
push
outs
(bad)
ds
adc
inc
imul
aad
cmps
shl
ret
dec
ret
mov
rcr
jmp
inc
enter
cmp
sahf
pop
adc
dec
or
mov
pop
xchg
arpl
(bad)
xchg
sub
enter
popa
push
inc
mov
outs
(bad)
shr
mov
nop
mov
push
mov
xlat
fs
xchg
call
outs
scas
enter
inc
mov
add
call
(bad)
dec
lods
aaa
sbb
outs
fld
js
lea
jg
stos
push
cwde
cmp
jbe
pop
inc
js
leave
sub
push
adc
pop
and
push
out
(bad)
push
fidivr
iret
mov
dec
int
dec
outs
movd
sbb
push
cmp
fwait
es
shl
daa
lock
and
hlt
in
call
sti
arpl
lds
cdq
pop
movs
jge
je
ret
push
nop
push
fdiv
popa
add
mov
sti
test
dec
sbb
mov
push
xor
pop
mov
std
xor
inc
xchg
(bad)
jp
sub
push
sbb
cmp
or
mov
inc
push
std
daa
sub
sub
pusha
xor
jecxz
jbe
and
lea
shr
cli
mov
rcl
scas
or
out
adc
sbb
out
scas
ds
jbe
cmp
push
push
xchg
scas
push
ins
lods
and
setbe
loopne
out
lea
mov
or
cld
mov
scas
ror
loop
add
cld
sub
outs
test
in
sub
jge
retf
inc
jo
xchg
jo
fisttp
daa
add
pop
and
std
daa
ror
inc
stos
loop
out
jbe
mov
hlt
cmps
out
mov
aam
xor
shl
xchg
pop
jb
jge
push
clc
rol
mov
aam
xchg
cmps
ins
fisubr
arpl
cli
imul
sub
xor
aas
jae
add
ja
and
arpl
push
enter
call
dec
inc
hlt
jp
out
push
mov
sahf
gs
dec
sub
mov
add
inc
ins
cmp
or
push
dec
sub
dec
sbb
inc
inc
push
fidivr
sub
push
mov
inc
inc
arpl
xor
xlat
and
cmc
or
mov
pop
ins
in
popa
sbb
pop
mov
or
outs
(bad)
mov
sub
(bad)
sub
xchg
sbb
sbb
mov
sub
inc
pop
or
mov
imul
es
out
cmp
adc
mov
iret
mov
mov
cli
(bad)
mov
mov
dec
call
mov
or
pop
push
outs
mov
fwait
cwde
or
stos
jl
ds
out
pop
inc
mov
inc
cli
push
push
je
xchg
pop
sbb
xchg
add
adc
mov
out
push
jmp
movs
pop
outs
rol
jbe
cmp
pop
xor
(bad)
shr
jmp
sub
pusha
jge
call
add
call
aad
(bad)
xchg
nop
dec
sahf
scas
inc
mov
mov
adc
out
jbe
cmp
mov
fisubr
jle
cmc
inc
jle
mov
retf
cmps
in
pusha
or
test
push
inc
pop
pushw
es
outs
mov
or
mov
or
mov
xchg
popa
ror
xor
fdivr
mov
sbb
ficom
push
data16
pop
cwde
(bad)
dec
mov
adc
int
jae
xchg
jae
mov
mov
call
lea
lea
sub
mov
mov
retf
fild
je
push
cwde
add
jmp
sbb
and
mov
and
ins
dec
out
leave
jecxz
pop
and
jns
xchg
jmp
pop
aas
loopne
mov
enter
fs
or
stos
int3
movs
push
neg
mov
ins
(bad)
inc
outs
fs
loop
movs
inc
adc
fmul
push
push
das
inc
je
fwait
inc
(bad)
fidiv
repnz
into
cmp
pop
fbld
and
xor
pop
outs
cdq
addr16
add
hlt
mov
push
jge
jmp
dec
fiadd
xchg
pop
ss
arpl
and
cli
dec
jl
imul
repnz
cmp
pop
mov
jo
mov
(bad)
(bad)
push
push
cwde
scas
jne
adc
cmps
sbb
adc
ins
dec
mov
xchg
or
push
sub
ret
dec
xchg
xchg
mov
cmp
lods
je
sub
jp
pop
mov
scas
in
test
outs
cmc
mov
imul
pop
mov
call
sub
pop
je
push
popf
icebp
(bad)
(bad)
ret
fistp
fnstsw
dec
ja
dec
hlt
sbb
shl
in
mov
(bad)
popf
and
repnz
js
rcl
lock
out
scas
(bad)
out
cmp
cld
je
clc
jmp
in
lods
cld
mov
jmp
stos
or
loope
mov
mov
inc
mov
mov
mov
nop
mov
ds
bnd
imul
dec
inc
sub
and
jge
xlat
mov
jg
enter
movs
aaa
cdq
scas
inc
sbb
stos
push
pop
mov
in
stos
xchg
mov
push
dec
jbe
add
pop
sub
sbb
inc
jae
dec
cmp
js
stos
aaa
ds
inc
jb
jl
jmp
cmps
mov
pop
in
xchg
lods
or
fstp
ss
jmp
stc
pushf
into
push
bound
sbb
int3
xchg
mov
mov
adc
xchg
jbe
jp
push
icebp
ror
mov
mov
jns
mov
or
out
mov
rcr
(bad)
mov
pop
mov
rol
fist
jp
outs
sbb
cs
aaa
pusha
jecxz
lods
cli
lahf
movs
cli
pop
popa
jmp
gs
mov
jne
ja
fucompp
movs
sbb
call
hlt
mov
fs
cmc
mov
outs
sub
xchg
xor
inc
cmp
mov
test
out
lods
mov
sti
(bad)
dec
mov
jp
mov
out
repnz
add
xchg
imul
out
jo
retf
(bad)
pop
cwde
movs
std
and
sub
lock
sbb
ret
cmc
(bad)
(bad)
push
fnstenv
or
in
or
test
dec
ret
shl
repnz
xchg
aam
mov
dec
jb
xchg
ficomp
aad
xor
pop
sub
push
fdiv
inc
cmp
(bad)
jmp
sahf
adc
jmp
add
cmp
adc
jb
in
das
and
xor
jecxz
gs
inc
or
jbe
scas
jno
sbb
and
cmp
cmp
jge
jl
loope
jge
pop
fwait
jns
scas
push
mov
scas
jo
pop
pop
jl
out
inc
mov
out
outs
aam
mov
xchg
in
fstp
jb
xchg
mov
cmc
rcr
add
daa
jmp
int3
inc
xor
ret
ins
cmp
jb
cmp
mov
fldcw
push
add
mov
test
adc
mov
inc
clc
push
ins
mov
nop
mov
loop
add
test
xchg
repnz
scas
xchg
imul
inc
add
loop
stos
ret
cmps
retf
ds
aas
xchg
outs
call
mov
or
leave
push
adc
imul
add
aad
sbb
movs
dec
jmp
dec
pop
js
or
xor
push
adc
mov
cs
adc
(bad)
(bad)
fwait
adc
adc
aas
call
nop
mov
jns
push
and
test
or
or
mov
jb
sbb
call
cmp
inc
movs
xor
(bad)
xor
xor
pop
pop
xlat
pop
ss
mov
and
mov
movs
inc
jp
test
pop
std
and
cdq
pop
dec
lods
pop
sub
cs
movs
setnp
sbb
jecxz
mov
dec
clc
sar
push
pop
xor
int
fnsave
jl
add
mov
jno
inc
dec
sti
sub
and
je
sar
add
jno
jne
xor
push
cld
lods
fnclex
xchg
jno
mov
ret
popa
test
xchg
inc
inc
dec
adc
jmp
adc
imul
(bad)
idiv
jle
ffree
jp
(bad)
jl
xor
imul
out
fwait
sbb
xor
inc
add
test
in
lock
test
ficom
fsubr
sbb
repz
xchg
neg
fidivr
imul
into
fsubr
test
jns
shl
rol
pop
dec
daa
mov
(bad)
scas
stos
rcl
scas
cmps
aas
test
lds
sbb
rcr
inc
ins
scas
bnd
mov
xor
sub
jno
dec
dec
imul
add
jns
icebp
test
clc
js
xor
scas
fild
mov
push
inc
xor
mov
cmps
daa
pusha
push
imul
addr16
mov
(bad)
stc
cdq
and
mov
dec
and
loop
inc
(bad)
lahf
jge
mov
(bad)
fst
clc
popf
fidiv
fprem
jmp
movs
mov
adc
mov
jnp
mov
in
xlat
das
das
aad
xchg
xchg
xchg
psrlq
jmp
leave
fnstsw
pop
pop
test
movs
xor
push
loop
(bad)
jmp
inc
imul
mov
push
xor
shl
mov
pop
sub
in
jmp
dec
cmp
mov
fdiv
xchg
or
jnp
pop
shr
jno
mov
adc
test
mov
lods
push
ins
sub
ret
ret
shr
iret
dec
adc
popf
arpl
(bad)
jno
jne
cmp
mov
dec
cwde
test
loop
in
imul
cwde
jb
neg
jmp
shl
rcl
pop
or
mov
mov
jmp
cmp
into
daa
aam
clc
dec
or
xchg
cmp
sub
mov
mov
push
fwait
leave
outs
inc
cli
add
arpl
leave
add
imul
retf
sahf
jno
jg
pop
mov
adc
xchg
iret
jmp
(bad)
fadd
sbb
adc
jle
sbb
fbstp
adc
lea
add
jnp
arpl
dec
pop
push
add
mov
cli
mov
lds
loope
mov
cld
dec
sub
aad
and
lds
fisubr
or
mov
jo
movs
mov
xchg
out
push
mov
jg
ins
mov
fst
inc
cmp
bound
cdq
cmp
jnp
xchg
ins
pop
dec
pop
ror
(bad)
mov
adc
xor
pop
mov
ins
scas
mov
cmc
arpl
je
or
mov
push
dec
pop
pop
in
or
movs
mov
mov
sub
leave
cwde
cmp
mov
lock
xor
lods
jge
cwde
jecxz
cmp
imul
ror
ins
iret
(bad)
hlt
lock
xchg
imul
or
in
xlat
fs
jno
arpl
test
cmp
repnz
mov
push
add
sub
adc
and
pushf
call
iret
push
sub
inc
and
(bad)
into
out
ret
and
popa
lods
push
and
fstp
mov
dec
mov
mov
dec
jmp
push
leave
jge
pop
shl
dec
adc
retf
jae
xor
arpl
jle
push
retf
hlt
inc
jae
mov
adc
mov
or
into
push
or
mov
mov
adc
test
cmp
lea
leave
lea
dec
outs
je
es
adc
adc
mov
adc
fs
fdiv
jmp
(bad)
mov
mov
lahf
loop
push
xor
data16
push
outs
lds
test
sbb
mov
push
xchg
add
popa
inc
fs
mov
sbb
xchg
inc
xor
lea
aas
add
sbb
add
mov
cmps
lock
fnsave
bnd
lock
aas
sbb
hlt
jb
fild
inc
lods
mov
into
das
shr
mov
out
xchg
std
stos
inc
(bad)
cmc
adc
iret
hlt
inc
data16
or
cmc
and
mov
sbb
cmp
cwde
idiv
mov
dec
loopne
mov
jle
cmps
mov
push
xchg
aad
sbb
pusha
fisub
lahf
adc
(bad)
ss
lock
cli
pop
jb
push
dec
adc
xor
push
cs
iret
jecxz
mov
retf
mov
push
cdq
mov
jle
scas
cwde
icebp
add
fbstp
pop
jecxz
out
js
add
jl
lahf
std
jg
mov
pop
in
fmul
jb
sbb
dec
mov
clc
push
cld
cmp
dec
and
lock
loope
mov
mov
jmp
sbb
lds
movs
shl
adc
adc
add
and
add
sub
dec
jb
out
aad
add
mov
data16
out
mov
fdiv
icebp
mov
into
xor
xor
adc
mov
sar
xchg
nop
sbb
in
out
jbe
call
sbb
adc
(bad)
shl
xchg
jmp
icebp
jmp
out
xchg
jmp
imul
mov
or
mov
push
mov
cli
push
mov
shr
inc
push
cmp
push
es
clc
sahf
out
js
adc
rcr
xchg
cmp
sbb
xor
retf
jae
test
in
mov
adc
dec
lods
cwde
pop
sbb
popf
push
and
lahf
dec
mov
sti
outs
xchg
lock
cwde
outs
dec
pop
adc
stos
mov
es
mov
jae
aad
retf
or
loop
imul
sbb
sbb
cmc
adc
ret
imul
scas
and
sbb
lods
or
in
icebp
in
cmp
xchg
int
inc
aas
adc
scas
adc
mov
push
cs
rcl
nop
or
mov
mov
ins
inc
ret
mov
dec
fcomp
mov
pop
stos
and
sbb
sahf
mov
mov
mov
rcr
lahf
out
mov
pop
mov
pop
push
fbstp
imul
arpl
pop
cmp
(bad)
jae
xchg
outs
(bad)
ins
mov
sbb
add
sti
mov
popf
into
push
fsub
push
in
ror
jne
sbb
cwde
fidiv
push
pop
iret
pop
clc
mov
cmp
xor
push
or
xor
inc
inc
cli
jg
out
xor
test
push
das
xchg
(bad)
push
mov
pop
xor
into
retf
mov
loopne
shl
pop
imul
aam
fadd
out
sub
and
mov
push
xchg
xor
pop
mov
lea
inc
call
or
nop
push
xchg
mov
lahf
sbb
mov
ins
pop
and
lahf
fidivr
push
loopne
xchg
pop
xchg
mov
std
scas
aam
ins
sar
icebp
rol
test
loope
jge
repnz
xchg
push
std
les
and
push
jp
fcmovnb
out
mov
(bad)
lock
push
lods
pop
imul
jmp
inc
and
cmps
add
int
or
add
adc
mov
arpl
or
test
dec
in
push
and
shl
loopne
adc
push
and
dec
pop
aam
or
xlat
pop
pslld
cmp
dec
div
mov
ret
lea
mov
ds
xor
or
std
cmp
xchg
(bad)
sbb
lds
sub
add
sub
dec
add
adc
and
mov
add
aad
int3
xor
(bad)
sbb
(bad)
stc
or
nop
std
das
jbe
xchg
in
aas
jecxz
(bad)
call
lock
cld
dec
inc
fwait
mov
enter
inc
repnz
push
sub
aaa
stc
gs
cmp
das
add
mov
cmp
jae
pop
and
arpl
jmp
fist
mov
jno
outs
or
es
test
jb
push
sub
and
cmp
sub
cmp
xchg
mov
push
inc
xchg
adc
dec
sbb
add
pop
jns
test
(bad)
mov
adc
xchg
inc
cli
shl
push
cmps
in
push
retf
es
cmps
cli
push
jb
add
cmp
int
inc
pop
mov
push
(bad)
aad
mov
stc
adc
push
jge
outs
inc
fadd
xchg
jno
call
arpl
pop
ins
mov
(bad)
mov
mov
sbb
sbb
xchg
jne
jo
gs
dec
cmps
dec
inc
loopne
movs
jnp
push
push
mov
cmps
cwde
pop
retf
push
xchg
sbb
test
adc
push
xchg
aam
jmp
pop
inc
sbb
pop
rol
movs
mov
ret
pop
mov
retf
popa
mov
int3
scas
out
data16
mov
mov
(bad)
mov
rcl
mov
into
jmp
lock
mov
or
test
push
je
fnsave
ja
mov
lahf
jo
mov
mov
cli
or
mov
pop
sbb
mov
jnp
mov
daa
push
cmovp
cmp
xchg
imul
xor
dec
fldenv
inc
pop
stos
in
or
xchg
fistp
jno
loop
sub
add
cmp
jae
cmp
(bad)
test
pop
add
lahf
or
mov
mov
xor
cmps
cmp
ds
ins
jbe
fidiv
fcomp
or
scas
mov
and
sbb
lods
jmp
fwait
cmp
mov
pop
loopne
jb
out
(bad)
popf
jb
inc
sub
add
pop
cmc
sub
xor
sub
push
fcmovbe
into
lods
sub
pop
cmp
xchg
xor
jnp
xor
(bad)
push
outs
pop
stos
fstp
sbb
jl
out
jecxz
push
cmp
jnp
pop
in
nop
mov
dec
sar
pop
dec
cmp
mov
jnp
sbb
(bad)
ror
aad
jo
push
xor
(bad)
scas
int3
cdq
(bad)
jb
inc
in
inc
mov
outs
stos
or
jne
cs
adc
inc
add
push
loop
test
push
xor
dec
jns
ins
add
dec
add
mov
or
xchg
push
jo
or
fisubr
jbe
jbe
inc
fld
daa
rol
mov
clc
(bad)
fld
mov
(bad)
xor
fistp
jno
loopne
dec
jbe
sub
(bad)
mov
push
push
(bad)
xchg
push
retf
push
loop
dec
inc
pop
jne
(bad)
jnp
mov
jb
mov
xchg
(bad)
push
pop
stc
das
aad
popa
jnp
(bad)
mov
loope
scas
xchg
rcr
in
aam
add
mov
ss
aam
hlt
(bad)
pop
dec
push
(bad)
add
dec
sub
pop
dec
xor
mov
cs
(bad)
pushf
jmp
in
jo
daa
or
pop
call
mov
(bad)
add
and
add
mov
xchg
inc
or
adc
test
movs
push
sbb
jne
jg
pop
adc
jmp
push
inc
into
add
dec
es
nop
test
push
inc
inc
js
inc
jb
icebp
xlat
jbe
(bad)
ins
pusha
and
inc
into
jg
mov
jge
mov
fcom
jg
pusha
(bad)
(bad)
adc
mov
mov
enter
add
cli
and
std
mov
pop
sub
pop
pop
scas
leave
in
cli
mov
div
(bad)
std
push
push
(bad)
mov
and
ds
jecxz
test
jg
mov
mov
pop
dec
fst
cmp
stos
jmp
cs
add
fld
and
call
mov
push
stos
das
mov
test
cli
fcmove
inc
fisttp
mov
mov
leave
mov
mov
(bad)
jae
outs
not
pop
inc
div
jmp
sub
lods
fcomip
mov
hlt
test
cdq
sbb
mov
cld
iret
je
(bad)
fstp
scas
jae
repnz
pop
jno
shl
ins
scas
sbb
mov
and
ret
leave
out
(bad)
push
retf
in
je
es
cmp
push
je
xchg
in
ins
sbb
jae
movs
adc
pop
pop
inc
dec
arpl
ret
mov
in
out
mov
mov
cmp
push
daa
outs
cmc
mov
in
mov
mov
pop
dec
pop
out
imul
imul
mov
mov
fcom
fnstsw
dec
movs
sub
mov
jo
xchg
inc
mov
addr16
dec
enter
rcr
popa
stc
xchg
test
in
(bad)
retf
lds
lods
push
out
test
in
lea
inc
xor
cli
out
dec
mov
push
ins
mov
xlat
or
out
sub
mov
pop
inc
sbb
mov
mov
out
out
inc
jmp
ja
stos
imul
repz
lahf
pop
pop
or
das
shl
hlt
bound
pop
ds
lock
(bad)
pop
fxch
iret
int
hlt
fstp
es
xchg
int3
jo
cmp
jne
and
sbb
inc
ins
call
cwde
inc
fld
inc
dec
and
mov
sub
mov
test
int
sub
inc
js
push
call
outs
dec
jae
loop
mov
jns
mov
popa
mov
ja
(bad)
lods
xchg
mov
fsubrp
popf
sahf
in
cmps
out
push
lock
pop
in
cmps
(bad)
xlat
test
xchg
push
fadd
loop
rol
arpl
and
add
ror
pop
sahf
in
push
ds
fisttp
cmp
mov
cmp
cmps
test
arpl
mov
loopne
cmps
in
scas
xchg
inc
mov
addr16
out
mov
add
cmp
cli
sbb
retf
push
xchg
(bad)
out
(bad)
mov
fst
popf
stos
fst
jbe
or
stc
mov
and
sub
dec
jecxz
dec
mov
xchg
cmp
add
dec
adc
scas
jp
icebp
shl
add
mov
pop
or
mov
jbe
fld
pop
shl
repz
(bad)
(bad)
in
cld
mov
sbb
mov
mov
sbb
mov
sbb
fisttp
pop
sahf
pop
sar
in
jbe
jl
rcr
mul
(bad)
add
dec
jno
(bad)
mov
adc
adc
(bad)
push
adc
sub
add
or
inc
xor
pop
and
dec
pusha
mov
mov
leave
xor
add
into
loop
out
rcr
mov
xchg
sub
clc
inc
sub
add
fsub
jnp
movs
(bad)
cmps
xchg
mov
jb
xor
stc
inc
fwait
mov
mov
jge
adc
mov
scas
sbb
clc
mov
lds
xor
mov
adc
jns
cmp
fist
cmp
jo
xchg
push
dec
pop
pop
inc
mov
stc
mov
mov
movs
clc
mov
jb
cs
jmp
sbb
sar
sbb
cwde
pop
sbb
cwde
sbb
push
ja
mov
inc
mov
dec
cmp
inc
sbb
xchg
mov
clc
sbb
pushf
test
sbb
mov
adc
cmp
sub
mov
add
sub
dec
push
or
and
in
scas
jb
cmp
cmp
fcmovbe
inc
stos
cmp
mov
fnstenv
push
lods
pushf
fs
(bad)
pop
int3
mov
jno
cmps
aas
movs
jg
push
pop
xchg
sti
add
mov
jb
mov
ret
mov
push
test
mov
mov
sbb
pop
sub
pop
pop
les
test
movs
data16
stos
xchg
cmp
arpl
jnp
sub
ins
xchg
mov
hlt
mov
cmc
sbb
mov
sbb
sbb
clc
mov
cs
repnz
sti
cmps
pop
jle
ja
inc
stc
sbb
loopne
into
shl
cmp
cmp
in
(bad)
int
cmps
dec
icebp
xlat
clc
sahf
xchg
in
in
xor
shl
out
jne
leave
(bad)
(bad)
cmps
sub
or
loopne
mov
(bad)
dec
jge
xlat
neg
shl
cs
loope
test
clc
adc
in
stos
and
aas
xor
dec
jecxz
adc
jecxz
shr
nop
xor
xchg
aas
push
movs
sbb
add
xor
pop
ins
mov
pop
arpl
(bad)
mov
loop
mov
xchg
aad
mov
push
xchg
mov
mov
and
sbb
push
ss
adc
call
inc
and
jae
push
sar
jo
pop
cmp
jbe
dec
fistp
pop
sbb
stos
ja
xchg
push
popf
mov
cmp
es
cmp
mov
xchg
pop
push
jns
mov
inc
push
push
mov
add
cmps
pop
xchg
inc
xor
jg
push
mov
sar
neg
pop
fwait
mov
call
xchg
jecxz
sahf
in
pop
fist
xor
pop
sbb
mov
mov
(bad)
fsub
outs
dec
push
ins
mov
movs
rcl
sar
sbb
mov
jae
inc
jbe
inc
rol
retf
lea
stos
xchg
xor
mov
addr16
dec
scas
sub
js
bound
push
call
cmps
fadd
mov
lea
jno
retf
xor
clc
cdq
pusha
jmp
lea
jp
mov
xor
arpl
add
movs
or
add
lds
fidiv
mov
call
sub
adc
outs
mov
out
popa
inc
mov
(bad)
js
push
xor
arpl
enter
dec
jno
mov
jns
icebp
or
or
xchg
push
xlat
xchg
push
mov
movs
adc
call
and
lock
imul
into
(bad)
pop
retf
xor
in
repz
(bad)
sbb
xlat
jno
cmp
add
xor
sbb
push
aad
(bad)
jge
pushf
pop
adc
cdq
mov
add
pushf
inc
push
cmps
sub
push
test
fistp
mov
es
retf
push
fs
sub
mov
inc
dec
fadd
sbb
lods
sbb
ins
push
into
dec
sub
and
jno
(bad)
adc
dec
inc
cmp
clc
arpl
retf
movs
jne
in
icebp
adc
mov
data16
adc
imul
inc
data16
mov
daa
cdq
mov
adc
jg
mov
nop
mov
mov
clc
sbb
mov
adc
mov
ror
retf
retf
ret
fldenv
dec
and
movs
mov
and
sbb
fdiv
scas
pop
(bad)
(bad)
(bad)
mul
call
pop
fwait
dec
scas
ficom
sbb
and
popf
mov
or
pushf
push
xor
and
adc
adc
adc
lea
and
push
cli
sbb
jle
test
jle
fst
sbb
and
add
xchg
(bad)
xchg
ror
push
sub
xchg
les
dec
add
ret
repnz
dec
pushf
mov
rcl
pop
adc
out
jmp
mov
stos
mov
lea
fdivr
icebp
xchg
inc
out
inc
(bad)
fnstcw
fadd
inc
mov
cmp
mov
fst
jp
(bad)
mov
xor
or
push
and
shl
jmp
rcr
stc
push
mov
cs
test
jecxz
enter
sub
outs
cmp
leave
fld
dec
js
ja
mov
call
mov
adc
rcl
xor
leave
inc
pop
mov
aad
xor
lds
xchg
mov
xchg
and
test
sub
les
in
lock
clc
sahf
inc
fcmovnbe
test
cmc
aam
stos
push
repz
jo
je
test
cdq
xor
test
inc
sub
xchg
xor
call
dec
popf
(bad)
sahf
loop
mov
in
pop
mov
push
je
in
in
push
inc
sub
movs
and
(bad)
sar
push
xlat
rcr
ins
outs
mov
dec
sbb
push
mov
xchg
lods
int3
loopne
stc
imul
push
cmp
stc
xor
clc
or
dec
movs
and
and
xchg
inc
add
mov
xchg
mov
scas
or
push
xchg
test
mov
dec
aad
jecxz
and
ja
cmp
sbb
dec
jo
jnp
sub
mov
call
add
and
xchg
sti
dec
dec
jo
xor
jb
and
and
add
jae
add
mov
(bad)
adc
stos
enter
cmp
mov
shr
in
push
adc
jbe
dec
add
cmp
cdq
or
movs
push
data16
pop
inc
pop
test
dec
sub
push
jb
mov
test
sub
cwde
outs
ficom
adc
je
xchg
fiadd
scas
sbb
adc
mov
ins
add
or
rcl
out
ins
je
mov
test
jge
mov
push
jle
jle
jno
push
cmc
in
out
js
movs
sub
and
ss
xor
sbb
ins
test
int3
stos
fisub
mov
cmps
mov
sahf
ror
or
scas
popf
inc
iret
xchg
add
test
mov
sbb
xchg
sti
add
jbe
inc
xor
mov
sbb
inc
inc
out
lods
jmp
jnp
or
xor
stos
mov
sbb
out
movs
xchg
mov
ins
outs
cs
in
push
(bad)
not
aaa
mov
inc
inc
push
ja
cmp
sar
(bad)
out
movs
jl
push
push
push
xchg
fnstenv
add
jnp
mov
les
adc
mov
mov
neg
add
sub
xor
push
add
jg
out
inc
inc
loope
mul
(bad)
les
cmps
ins
push
loop
add
aad
or
xor
or
mov
mov
push
stos
inc
jae
retf
out
pop
mov
fmul
push
xchg
push
fisub
sbb
add
xchg
or
jmp
dec
cmp
inc
dec
pop
jno
push
je
mov
clc
popa
push
dec
js
adc
cwde
push
test
sbb
add
ja
fldcw
retf
mov
(bad)
lock
das
jecxz
xchg
mov
(bad)
fbld
dec
dec
mov
stos
mov
add
imul
lock
sbb
mov
das
dec
not
addr16
jg
popf
imul
xchg
(bad)
out
test
iret
sub
(bad)
fisttp
xor
cmp
enter
or
inc
xor
cli
xor
and
je
dec
or
test
ret
mov
int
add
test
ins
ret
dec
loopne
xor
mov
out
adc
xchg
mov
sbb
push
sub
mov
sub
rcl
pushf
sub
jmp
push
(bad)
sbb
shl
fild
js
aad
pushf
add
mov
outs
jge
das
retf
push
jmp
xor
inc
test
inc
mov
and
adc
test
nop
and
and
sbb
add
push
int3
ffree
loop
mov
aad
pop
pop
cmp
and
adc
enter
cdq
and
dec
mov
xor
shr
ins
jns
push
inc
or
retf
jecxz
popf
push
push
jecxz
dec
pusha
sub
mov
(bad)
pop
xor
add
imul
fldenv
add
hlt
pop
in
repnz
nop
iret
aam
xchg
sub
add
jb
mov
cmp
fcom
test
cmps
lods
test
pusha
movs
push
dec
pop
ins
test
lods
mul
stos
adc
outs
cmp
lea
mov
xor
xchg
mov
inc
inc
add
retf
fisttp
cmp
aam
cmp
dec
mov
aas
dec
cli
test
mov
mov
jnp
pop
push
sbb
or
(bad)
rol
ficomp
jb
or
dec
jmp
jno
imul
int3
mov
mov
dec
nop
mov
int3
test
mov
popa
inc
(bad)
push
int3
std
in
mov
sbb
mov
ins
in
outs
sub
mov
pushf
lea
jns
outs
jns
xor
and
adc
int3
sub
mov
add
mov
push
dec
out
das
add
or
mov
scas
xor
out
adc
scas
sbb
mov
mov
dec
lea
out
inc
mov
push
and
cmp
jmp
mov
test
fcom
pop
mov
(bad)
imul
mov
out
adc
sbb
test
fnstsw
or
test
ja
test
retf
add
cmp
jmp
push
loopne
adc
mov
fadd
pop
add
push
mov
push
cmc
xor
dec
movs
stc
sbb
and
nop
in
adc
push
icebp
idiv
clc
fistp
adc
or
jne
adc
and
mov
adc
add
jno
inc
(bad)
sbb
adc
out
push
pop
push
in
outs
xchg
test
fsubr
mov
adc
sub
adc
retf
sub
ins
addr16
imul
test
xor
pop
lods
add
jmp
fld
jmp
(bad)
or
mov
mov
hlt
inc
(bad)
aas
push
cwde
xchg
jle
in
cld
add
cmp
jnp
add
jnp
repz
dec
std
les
adc
jne
xor
movs
push
pop
jne
mov
mov
and
popa
ss
pop
frstor
jo
pop
add
inc
push
and
fwait
mul
scas
and
fcom
inc
ret
aam
push
lock
xchg
dec
stc
lock
(bad)
push
(bad)
jmp
into
lea
sar
and
fs
adc
mov
popa
mov
push
cwde
ficomp
shr
stos
dec
sbb
(bad)
in
sar
xor
into
stos
gs
dec
and
push
cmps
xchg
shl
daa
mov
push
add
mov
(bad)
nop
adc
mov
jecxz
aam
popa
(bad)
repnz
cmp
fwait
into
or
neg
dec
stos
adc
jbe
das
data16
in
jmp
xor
sbb
pop
popf
arpl
sub
cmp
bound
call
mov
jecxz
movzx
inc
adc
xchg
cs
adc
dec
mov
mov
cmc
setne
sbb
out
test
ret
cld
inc
in
test
stc
cmc
jo
mov
mov
stos
daa
pop
add
or
and
scas
and
je
out
push
and
and
sub
test
mov
or
mov
adc
scas
out
cli
xor
aaa
or
inc
retf
in
pop
xchg
icebp
cmp
mov
outs
lea
mov
popa
mov
pushf
push
xchg
and
dec
add
and
mov
inc
ret
add
or
xor
cmp
mov
retf
frstor
sti
outs
cmovnp
popf
xor
xchg
loope
mov
sbb
ret
hlt
push
sub
mov
adc
xchg
add
adc
mov
inc
cmps
or
lds
retf
mov
adc
jp
push
sub
xor
mov
outs
aas
gs
pop
mov
repnz
jo
(bad)
sub
loope
pcmpeqd
out
xchg
pop
outs
sbb
inc
jno
jmp
sbb
dec
jno
push
mov
stos
and
sub
dec
jp
sbb
mov
dec
sub
cmps
add
aam
test
push
outs
rcl
outs
outs
add
je
lods
mov
arpl
add
adc
pop
fdiv
test
mov
xor
fs
mov
cmp
inc
inc
mov
(bad)
test
sbb
xchg
pusha
fstp
mov
cmp
pop
les
enter
sbb
mov
adc
mov
inc
add
jnp
leave
sub
xor
mov
dec
lds
xor
xchg
stos
sbb
pop
sub
sub
push
movs
jae
out
jo
and
aad
test
pop
imul
repz
xor
mov
ss
rol
stos
jge
icebp
xor
cmp
enter
and
(bad)
sbb
push
es
movs
aad
mov
outs
sbb
sub
in
sbb
mov
jbe
add
in
adc
shr
leave
pop
jl
(bad)
daa
push
mov
(bad)
shl
js
out
in
pop
aaa
(bad)
retf
(bad)
hlt
ins
out
loop
or
rcl
xor
arpl
nop
xchg
rcl
mov
mov
mov
daa
fist
das
add
sub
mov
cld
push
repz
mov
jno
push
mov
ins
mov
jb
les
and
mov
into
addr16
mov
outs
jmp
sbb
cdq
test
sub
bound
rcr
mov
into
sar
push
xor
add
mov
js
sub
shl
ss
pop
fisttp
(bad)
not
loop
stos
in
loope
push
push
sahf
xchg
outs
jmp
fcomp
lock
cmp
mov
mov
rcl
popf
inc
or
jns
cmp
dec
mov
iret
popf
inc
loopne
sub
or
cmp
xor
cwde
jp
shl
rcl
cmps
push
xchg
in
idiv
jb
int
add
lods
jae
inc
dec
sub
fst
mov
loopne
adc
and
mov
mov
cmps
nop
sbb
scas
mov
ds
test
push
push
inc
ret
or
outs
and
cmp
dec
cli
push
addr16
pushf
or
jae
adc
xchg
adc
fadd
and
test
or
pop
mov
adc
xor
add
push
xor
pop
scas
sbb
jl
adc
sub
in
retf
fist
sbb
pmaxub
add
cmps
jge
nop
push
mov
sub
popf
pop
or
sub
call
jo
mov
fs
jmp
mov
sahf
(bad)
test
ds
or
les
and
jae
add
(bad)
clc
call
jo
xor
sub
ss
push
xchg
hlt
xor
jb
inc
dec
push
pop
push
loope
aam
or
push
cmps
jle
and
cmp
xor
xchg
shl
sbb
jo
dec
imul
dec
cmp
pop
test
mov
mov
inc
mov
shl
adc
push
sub
mov
cmp
call
jp
sub
popf
shr
xchg
je
out
fcom
mov
xor
aad
mov
push
pop
out
test
js
test
ror
in
mov
add
movs
jnp
mov
in
loopne
inc
fcomp
xor
inc
push
aaa
ss
fs
clc
adc
ja
ins
pop
push
fcom
xchg
out
aam
ja
fidivr
mov
(bad)
pop
push
xor
shl
xor
push
imul
dec
not
push
sbb
into
or
push
mov
jecxz
or
xor
aaa
add
dec
call
xor
test
and
adc
push
xor
mov
sub
sub
das
jo
inc
push
ins
jbe
inc
pop
in
icebp
xor
dec
loop
in
test
xchg
adc
push
js
popa
pop
and
mov
adc
mov
test
dec
cdq
ffree
jo
dec
in
xchg
xchg
sbb
out
rcr
stos
fsubr
cmps
pop
jl
retf
fsub
stos
cmp
movs
pop
arpl
scas
push
mov
push
mov
or
mov
inc
sub
cmp
movs
sub
sbb
xor
xchg
sti
dec
inc
es
bound
in
rcr
sbb
lods
push
mov
sahf
out
jno
popf
sub
pop
out
fisttp
jmp
test
stos
es
icebp
mov
ret
xor
xor
cmp
xor
cmp
pop
in
mov
sar
cmc
ins
loopne
pop
or
sub
fwait
cs
retf
pop
pop
cdq
in
xchg
js
fisttp
cmp
and
leave
imul
rol
push
mov
lods
mov
pop
add
loope
nop
jge
push
icebp
into
(bad)
push
mov
lea
stc
xchg
mov
outs
add
bound
lods
jb
test
mov
lods
cmc
dec
and
inc
pop
cli
sbb
out
hlt
mov
sub
push
xchg
in
fcomp
int3
jae
ins
js
es
fld
call
pushw
cld
scas
sbb
and
xchg
cmp
fmul
fs
nop
(bad)
sub
shl
popf
jle
push
or
nop
mov
cs
daa
mov
mov
fisttp
int3
mov
xchg
adc
push
fcmove
jg
mov
xchg
jmp
inc
fcomp
push
mov
pop
pop
sub
push
xlat
and
add
fsub
rol
repz
cmp
xlat
(bad)
pop
cmps
jge
xchg
xchg
int
push
push
push
popa
cmp
push
xor
xchg
sub
pop
add
push
jp
rcr
jno
test
neg
mov
adc
xor
mov
xchg
mov
cdq
mov
pop
(bad)
mov
call
mov
inc
cmp
sbb
dec
pop
mov
call
dec
pop
loop
or
stc
call
mov
pop
out
into
pop
int3
(bad)
lea
sub
stc
ret
mov
fist
fadd
cmp
cmp
nop
sub
mov
cwde
lods
(bad)
add
(bad)
icebp
xor
loop
cs
stc
fwait
push
push
retf
xchg
sbb
push
mov
add
and
push
or
pop
test
push
add
aam
mov
cmp
aam
and
mov
xchg
cli
adc
aaa
pop
pop
call
retf
imul
fcomi
sub
sbb
mov
ss
test
ret
inc
cwde
movs
sub
(bad)
mov
in
cmp
inc
mov
pop
sbb
ret
jbe
cmps
mov
ins
xor
sub
fist
mov
mov
or
mov
mov
add
push
(bad)
es
xchg
add
cmp
sti
jne
mov
fstp
push
retf
jns
push
(bad)
mov
(bad)
std
mov
or
inc
xor
dec
gs
jns
cwde
jo
mov
enter
aad
je
inc
mov
push
or
or
imul
add
push
jp
(bad)
push
es
fild
pop
sbb
push
mov
cs
fs
fild
ficom
mov
or
adc
and
popf
inc
pop
imul
xchg
push
inc
sbb
(bad)
xchg
push
push
sbb
mov
adc
inc
call
adc
loope
inc
and
push
dec
ja
call
stos
xor
(bad)
in
test
stos
push
add
scas
cmc
xchg
adc
pop
sub
push
sub
jb
xchg
cmc
stos
mov
fstp
test
fsubr
push
cdq
cs
jle
lods
inc
fisttp
push
test
push
cmc
inc
mov
adc
cmp
inc
inc
in
test
call
mov
cdq
data16
cmps
mov
pop
xor
jmp
lock
xchg
xchg
shl
js
(bad)
pop
adc
ret
xor
mov
mov
pop
mov
test
mov
fs
xor
xchg
shl
das
pop
rcr
mov
(bad)
or
or
stc
xchg
adc
aam
(bad)
mov
pop
nop
and
fs
inc
push
xchg
add
test
mov
jne
mov
ret
outs
pushw
mov
test
and
xchg
jnp
pop
cmp
std
xor
mov
pop
out
cmps
in
ins
inc
je
aaa
xlat
and
ja
fdiv
and
push
aaa
xor
fild
xlat
add
dec
pop
mov
inc
rcl
jb
test
call
and
mov
rcl
add
xchg
(bad)
test
adc
push
outs
and
push
add
xor
add
outs
in
sub
inc
cli
outs
std
fiadd
and
cli
out
dec
mov
call
jmp
mov
int
sbb
xor
out
xchg
ret
xchg
push
push
push
sub
std
and
rcr
(bad)
xchg
(bad)
(bad)
daa
jne
out
cdq
mov
or
aaa
push
lods
push
nop
lods
or
inc
sub
into
xchg
mov
mov
xchg
inc
inc
pop
mov
or
inc
cld
xchg
dec
cld
xor
aas
xchg
out
imul
sub
fst
rcr
or
addr16
add
mov
sbb
and
push
push
movs
lods
mov
rcl
sbb
out
test
aam
xor
pop
test
mov
stos
push
sub
jbe
adc
push
jne
mov
in
imul
sbb
cmc
mov
ins
and
fbstp
fimul
stc
(bad)
hlt
lock
pop
fucomi
jmp
ins
xchg
ret
movs
fnsave
pusha
xor
dec
or
push
dec
rcl
gs
outs
jp
iret
cmp
les
pop
pop
test
je
add
ret
xchg
inc
movs
xor
out
scas
sbb
lock
add
xchg
(bad)
out
ds
push
adc
out
inc
imul
fucomp
leave
aam
xor
dec
popa
push
or
inc
or
lock
add
movs
xor
arpl
sub
inc
aas
sub
nop
or
add
nop
sbb
jmp
ins
je
xchg
icebp
jle
xlat
add
out
cmp
xchg
cwde
dec
out
jb
cmp
mov
sbb
jl
retf
pop
mov
sub
(bad)
gs
sub
shr
pop
push
push
xchg
lds
xor
cmp
push
and
test
test
aad
iret
push
add
test
add
call
mov
ret
push
test
mov
push
fcom
mov
bound
jae
rcr
push
jmp
imul
not
mov
hlt
cmp
jmp
and
mov
sub
or
jne
push
aaa
das
arpl
jge
add
outs
lea
inc
stc
scas
jbe
cmp
aad
aad
xchg
adc
shl
and
jmp
test
xor
push
inc
cdq
xor
shl
cwde
enter
leave
xchg
add
fs
dec
mov
rcr
sar
sahf
push
mov
jmp
lea
jge
dec
xor
pop
mov
jb
push
ficom
ins
mov
xchg
push
popa
retf
inc
push
loope
add
mov
mov
imul
lahf
retf
cmps
add
mov
push
sbb
jne
jmp
adc
jmp
jecxz
adc
(bad)
lahf
or
jp
addr16
test
mov
inc
push
cli
call
pop
add
call
imul
sub
push
pop
mov
gs
aas
dec
out
loopne
mov
call
stos
mov
sub
jmp
push
in
lods
jae
ffreep
fdivp
jg
and
jecxz
inc
outs
push
addr16
lds
pop
cli
mov
cmp
jg
push
mov
(bad)
lahf
cli
sbb
pop
shr
cli
or
(bad)
mov
std
or
popf
pop
shr
inc
mov
movs
std
push
aas
jmp
icebp
aad
add
add
dec
pop
inc
push
mov
push
dec
jmp
xchg
lahf
inc
movs
push
cli
lods
std
mov
push
dec
jmp
xchg
out
sti
xchg
and
add
pop
std
data16
sahf
mov
jns
call
fsubr
mov
clc
mov
fcmovu
jno
cmp
sahf
jmp
push
lods
pop
inc
mov
adc
sbb
fstp
xchg
add
pop
and
(bad)
add
push
in
and
aam
aam
test
or
jns
push
adc
dec
add
add
cdq
sbb
movs
ins
fs
out
lods
or
jne
sbb
dec
(bad)
idiv
cmp
push
and
add
sbb
(bad)
fst
mov
add
(bad)
out
ja
mov
cmps
pop
leave
push
pop
xor
mov
(bad)
out
jg
rcr
add
add
leave
sub
mov
push
mov
mov
popf
jmp
mov
dec
dec
push
sbb
mov
arpl
lahf
aaa
cmp
jecxz
test
in
push
mov
pop
sbb
mov
adc
adc
xchg
daa
cwde
cmp
push
fsub
in
loop
sbb
ja
rcr
jnp
(bad)
or
outs
retf
sbb
xchg
mov
adc
jae
cmp
and
mov
das
je
vpcomub
cmp
test
movs
cmp
ja
aam
add
sub
fcomp
xor
push
cmps
mov
mov
enter
fs
retf
test
in
nop
mov
mov
and
inc
add
push
dec
push
adc
dec
push
dec
and
or
call
cmc
inc
inc
jmp
retf
mov
or
cwde
and
mov
rol
ficom
sub
hlt
loopne
fist
mov
xchg
imul
mov
mov
jb
pop
(bad)
jp
call
mov
jnp
xchg
out
push
xchg
cli
push
cli
mov
xchg
dec
fisub
mov
or
(bad)
pop
mov
mov
sub
lods
int3
push
retf
cmps
sub
inc
xor
ffreep
sub
mov
mov
jo
lods
aam
add
aas
cmp
aad
cmc
outs
inc
pop
je
xchg
mov
sbb
xor
std
fimul
(bad)
fild
in
push
aas
sub
push
inc
loopne
jmp
in
mov
inc
ins
das
cdq
xor
mov
std
retf
ins
movs
mov
sbb
cwde
loopne
ficom
sbb
jmp
clc
sbb
sbb
rol
inc
outs
ins
ss
mov
pop
inc
test
push
xor
fldenv
and
out
sub
jbe
loop
sub
mov
dec
mov
in
mov
loope
and
inc
lea
push
stc
dec
push
or
sub
dec
call
mov
loope
sub
adc
sub
pop
out
aam
xor
lahf
int
adc
je
rcl
fnstenv
imul
mov
pop
and
inc
movs
ror
cmp
movs
call
ret
sub
lahf
jge
cmp
imul
mov
inc
out
mov
mov
sbb
idiv
adc
cmps
pop
inc
sbb
jae
ins
xchg
inc
cmp
clc
inc
dec
sbb
idiv
pop
fisttp
sub
mov
(bad)
cld
mov
aad
and
lods
mov
and
jmp
mov
push
xor
rcl
cmp
out
fucomi
dec
fcmovu
dec
xor
ret
adc
dec
mov
and
cwde
cmps
out
dec
inc
push
xor
lods
adc
push
and
int
fs
cmp
sbb
and
sbb
push
push
xchg
and
inc
sub
mov
dec
jae
jnp
dec
sub
mov
add
jbe
sbb
lods
cld
gs
sbb
jnp
pop
test
xlat
cmp
jo
pop
adc
call
in
fldcw
loopne
aaa
jle
je
and
jecxz
push
stos
sbb
mov
xchg
jo
jmp
pop
jecxz
sub
mov
mov
add
je
dec
push
and
mov
add
sub
int3
cld
dec
aam
scas
and
sbb
aam
les
cmp
mov
sub
mov
fist
sub
ret
and
ins
fcomp
imul
xchg
jo
cmp
inc
mov
mov
xchg
xor
pop
aad
sub
mov
fucomi
retf
fsubr
and
push
ret
mov
adc
in
jne
xchg
xor
inc
jns
adc
or
adc
push
jne
push
xchg
sub
xor
sbb
loope
sbb
sub
push
and
inc
cmp
xchg
mov
mov
arpl
out
aas
sub
outs
into
in
cld
into
add
call
mov
dec
add
fs
jno
mov
jno
push
xchg
mov
lods
jnp
cli
ja
aas
shl
retf
push
inc
cdq
xor
stos
and
mov
adc
mov
mov
inc
push
cmp
and
addr16
sub
and
sub
and
clc
push
mov
jmp
ins
call
or
aad
push
fld
or
out
ins
xchg
out
repnz
cmps
inc
mov
daa
das
cwde
push
scas
aam
mov
mov
jmp
adc
je
add
ret
loope
fisubr
and
fldenv
js
(bad)
loope
push
ret
ror
enter
push
(bad)
mov
int3
jl
mov
cmp
adc
pop
push
icebp
clc
test
outs
cmp
out
fstp
shr
ss
inc
mov
data16
lods
aad
icebp
sti
xchg
mov
jge
xchg
clc
fcmovu
jmp
test
daa
sub
js
pop
mov
data16
leave
loope
lea
dec
and
rol
pextrw
inc
fwait
test
mov
loop
call
sbb
scas
or
mov
hlt
pop
dec
mov
inc
inc
inc
rcr
rcr
push
push
push
pop
dec
or
push
movs
sbb
loop
xor
adc
idiv
hlt
xor
mov
nop
push
sbb
push
cmps
push
fs
(bad)
xor
mov
(bad)
(bad)
adc
int3
or
or
mov
jmp
adc
int3
stos
push
and
mov
daa
out
outs
cmp
push
ror
lods
cli
jg
in
(bad)
cwde
clc
xlat
das
fdivr
xchg
icebp
cmp
scas
ja
jne
xchg
jne
loopne
popf
fdiv
mov
and
sbb
push
inc
test
rcl
test
xchg
sub
sbb
shr
outs
mov
vcvtdq2ps
dec
ins
jb
xor
mov
xor
mov
push
sub
rcl
out
add
adc
inc
cmp
xchg
push
stos
cwde
ins
out
jp
dec
out
xor
lods
mov
fwait
mov
and
mov
in
test
or
ja
lods
pop
jg
xchg
sbb
sti
test
sub
sub
retf
out
pushf
stc
adc
mov
fcomp
jae
mov
imul
mov
call
pop
pop
mov
popf
add
test
icebp
in
sub
jl
mov
and
mov
sbb
lock
stos
inc
adc
mov
cmp
and
xchg
sub
je
aas
in
jno
and
mov
mov
and
push
add
dec
nop
or
and
test
pop
xor
mov
out
sbb
inc
nop
xor
dec
mov
xor
cmp
pop
sbb
push
(bad)
scas
test
jge
lahf
sub
int3
rcl
enter
xchg
sahf
in
cmps
jecxz
les
test
in
je
add
addr16
inc
jnp
lahf
aam
fisubr
fs
mov
jp
cmc
cmp
mov
adc
and
lods
in
pop
dec
add
test
pop
pop
(bad)
bound
leave
jne
loopne
pop
xor
mov
ret
mov
out
(bad)
mov
aam
sbb
(bad)
pop
lea
stos
pop
and
sub
push
outs
inc
out
cmp
add
cmp
push
mov
or
out
and
jmp
add
adc
shl
jmp
repnz
xor
or
pop
cmp
dec
lods
scas
pop
(bad)
fcomp
lahf
sbb
daa
push
push
(bad)
xchg
xchg
mov
lods
sub
push
sbb
in
inc
dec
dec
ror
push
jl
test
adc
frstor
pop
pop
cmp
and
fldenv
pushf
sbb
jmp
mov
dec
mov
outs
out
cmp
mov
mov
push
dec
and
leave
ins
(bad)
je
push
stos
mov
imul
sub
inc
outs
inc
shl
cmp
inc
dec
push
cld
mov
push
mov
fwait
jno
xchg
xchg
cdq
cmc
ja
(bad)
movs
fistp
imul
mov
or
loopne
dec
fs
fnstsw
adc
xchg
(bad)
push
rcr
push
ds
fmul
mov
xor
sbb
outs
imul
or
repz
dec
inc
sbb
pop
pop
lea
stos
push
mov
cmps
push
int3
test
(bad)
stos
mov
push
xchg
mov
test
push
dec
and
scas
les
test
mov
loop
pop
push
sub
push
in
or
push
mov
mov
inc
mov
pop
cmp
mov
cmc
and
adc
in
mov
or
enter
int3
scas
or
call
cmps
lods
leave
cdq
inc
(bad)
out
loopne
push
outs
jne
leave
call
sti
jle
fstp
neg
jnp
jmp
jne
(bad)
(bad)
push
xchg
(bad)
(bad)
enter
inc
jge
popf
jae
cmp
fs
jno
mov
mov
call
aaa
sbb
imul
sbb
into
test
add
jnp
and
sbb
or
in
in
fcmovu
mov
sbb
pop
std
dec
sbb
mov
pop
push
retf
dec
jnp
inc
mov
dec
jo
cmp
fcomp
mov
sub
and
xchg
jo
xchg
sub
sbb
fcmovu
inc
mov
pop
pop
or
js
xchg
push
mov
ins
mov
mov
sub
adc
int
retf
repz
push
cmp
sub
aaa
jecxz
mov
je
ficom
imul
scas
fwait
test
fst
fwait
or
loopne
imul
cwde
das
mov
sti
sub
shl
sti
push
js
mov
cmps
xchg
jmp
rcr
jbe
(bad)
push
je
movs
push
retw
sbb
dec
adc
movs
outs
cmps
push
fld
mov
push
or
pusha
outs
mov
aam
retf
neg
outs
sbb
pop
jl
pusha
inc
sub
mov
ss
xchg
pushf
fsub
push
ins
mov
outs
pop
or
add
push
out
and
cmp
imul
scas
jge
inc
or
pop
fsubr
sub
in
dec
mov
rcl
test
jge
fadd
adc
ins
push
cmp
cmps
out
aaa
inc
add
fstp
xor
rol
pop
jg
lods
mov
mov
enter
and
jmp
out
jnp
test
or
jbe
pop
arpl
ror
adc
mov
sbb
mov
xor
div
mov
les
or
int
push
push
(bad)
cld
sub
pushf
sbb
enter
jecxz
lahf
ins
sub
mov
aas
(bad)
cs
add
sub
nop
add
adc
arpl
and
adc
sub
sub
mov
sbb
or
pop
iret
cdq
(bad)
inc
mov
add
mov
inc
add
jb
retf
test
shl
shl
mov
pop
jmp
popf
or
xchg
add
fsubp
stos
cmps
(bad)
(bad)
sub
sahf
mov
mov
pop
sbb
jb
push
sbb
aam
out
daa
cmp
xchg
jecxz
loop
xchg
dec
int3
and
xchg
into
sub
jl
sar
cmp
repnz
fistp
and
or
push
sub
push
cwde
sbb
push
bound
mov
sti
test
and
pop
pop
dec
std
and
push
popa
mov
in
shl
mov
jae
lahf
push
mov
aaa
sub
shr
fbstp
call
retf
dec
iretw
mov
popa
push
aad
mov
(bad)
out
jge
nop
mov
test
or
jmp
pop
jp
and
loopne
mov
or
mov
mov
ss
inc
(bad)
lahf
add
xor
and
and
xchg
in
push
mov
fcom
rcr
inc
adc
mov
mov
shr
push
xchg
push
shl
dec
xchg
bound
pop
cmp
(bad)
sub
push
cmp
jnp
hlt
xor
imul
cdq
lods
sub
add
fild
and
stos
aas
fild
cmp
ror
movs
xchg
or
or
mov
cmp
stos
mov
cmp
xor
idiv
inc
dec
xor
and
repz
fisttp
movs
inc
sti
mov
dec
adc
and
add
fdivr
mov
out
xor
fs
popf
in
sar
mov
movs
add
pop
push
ret
pop
and
cmps
scas
dec
add
cmp
in
ds
inc
dec
mov
aam
or
jle
cmp
push
pop
ss
mov
pop
mov
adc
repz
int
addr16
push
fs
xlat
mov
cmp
ins
mov
aam
aam
xchg
or
ins
mov
aam
pop
jbe
jae
fst
add
pusha
in
push
test
imul
leave
push
dec
fidivr
mov
dec
mov
inc
not
call
xchg
out
fldenv
out
mov
sbb
adc
xchg
xchg
xor
in
mov
lods
sub
sub
or
sub
mov
test
in
jbe
mov
sub
mov
add
js
stos
sub
in
outs
(bad)
cdq
adc
cmp
sar
xchg
jle
shl
inc
xor
push
cld
ret
pop
add
jle
(bad)
in
jnp
aaa
push
mov
mov
xor
out
sub
xor
(bad)
adc
cmp
ror
and
retf
xchg
pushf
jb
popf
xchg
mov
je
cmp
sbb
dec
xor
xchg
adc
push
jg
(bad)
shr
push
cmp
adc
shl
cmp
ret
sbb
xchg
jmp
mov
movs
adc
push
dec
push
movs
xchg
cs
push
sbb
nop
xchg
inc
add
mov
sbb
mov
add
sub
ds
add
adc
or
es
sub
mov
pop
mov
push
mov
xor
sbb
xchg
or
xor
loope
xchg
aam
mov
outs
pop
push
lods
add
sub
test
pop
movs
outs
aas
test
std
push
daa
sub
aam
in
lods
xor
ret
add
add
int3
jae
arpl
pop
pop
add
xchg
icebp
mov
in
push
and
in
or
jp
xchg
dec
daa
sbb
inc
aam
jae
mov
pop
cmp
mov
mov
mov
pop
(bad)
jge
mov
ret
sbb
stc
sbb
mov
sbb
or
sub
sub
xor
adc
sub
sub
mov
pop
addr16
pop
bound
xor
push
mov
adc
adc
push
(bad)
sbb
pop
int3
inc
sahf
mov
or
sbb
sub
dec
cmp
test
vmwrite
in
je
div
sti
pand
cmps
inc
test
in
add
stos
fisubr
ret
sub
cmp
push
and
aad
sub
dec
dec
(bad)
xor
ss
ins
mov
and
leave
push
push
mov
add
adc
sub
in
lahf
xchg
fsubrp
sahf
pushf
xchg
arpl
ret
mov
icebp
cmps
clc
pop
and
rcl
inc
cmc
push
fwait
ret
test
pop
aam
xor
jmp
rol
mov
fwait
xchg
rcl
ret
adc
mov
sbb
mov
test
sbb
popa
push
jl
sbb
jmp
rol
repz
test
inc
adc
mov
xchg
das
outs
adc
pop
mov
sti
push
aam
cmp
cmp
shl
cmp
retf
dec
fisubr
add
in
push
ret
mov
inc
es
pusha
dec
cwde
push
(bad)
ficomp
les
into
lods
xchg
daa
imul
mov
mov
test
sub
loop
js
popf
scas
jp
dec
aas
or
jp
je
imul
or
cmp
push
or
jbe
mov
fwait
xchg
jg
xor
in
adc
fist
and
push
inc
lods
jmp
inc
mov
outs
fs
ds
pushf
shl
cmp
aad
xchg
or
cmp
and
mov
cmp
or
jmp
es
shl
retf
outs
xchg
or
mov
outs
test
push
mov
sahf
dec
lods
dec
arpl
add
xor
sub
xchg
and
push
and
xor
imul
add
xlat
or
popf
rol
jg
sub
pop
and
push
ds
mov
imul
jb
pop
cmc
sbb
bound
pusha
inc
dec
aaa
cmp
sub
jo
scas
aas
out
aad
xor
push
idiv
aad
dec
retf
pusha
cs
adc
mov
sbb
and
out
outs
sbb
mov
mov
push
push
mov
lock
enter
frstor
(bad)
shl
fist
movs
call
dec
ins
xor
mov
icebp
inc
sbb
leave
lahf
jno
inc
fisttp
arpl
out
gs
mov
cmp
adc
adc
sub
stos
sub
push
sbb
sbb
mov
nop
(bad)
and
jne
inc
or
jecxz
(bad)
mov
aas
bound
int
iret
jns
pop
dec
cmp
sbb
or
cmp
dec
xchg
add
leave
inc
inc
dec
sub
mov
add
mov
sub
lock
or
push
outs
mov
cmc
or
mov
inc
and
push
lods
cs
add
test
fst
ins
sbb
fistp
int3
jnp
ficomp
xchg
in
(bad)
retf
push
push
dec
sbb
cmc
or
les
loopne
pop
add
and
adc
xor
push
add
fucom
(bad)
push
(bad)
or
bound
imul
push
jmp
fdivrp
not
shr
dec
or
mov
or
enter
lock
retf
(bad)
out
repnz
cmp
sbb
inc
cmp
mov
cmp
mov
in
mov
pop
adc
mov
adc
jno
sub
add
rcl
outs
push
imul
or
lea
test
and
aam
push
ss
adc
ficom
xor
inc
test
out
cmp
stc
movs
cmc
out
dec
xor
sub
out
mov
push
pop
hlt
cdq
push
cmps
lods
push
daa
std
inc
fnstcw
push
das
inc
inc
jg
jp
ror
mov
mov
hlt
outs
lds
aam
ja
inc
aas
jae
ja
movs
pop
pusha
test
pop
sub
scas
xchg
add
mov
inc
adc
std
sbb
cld
or
cmc
pop
jne
mov
mov
push
mov
cdq
push
addr16
inc
test
fld
sbb
loop
xchg
push
mov
adc
inc
out
cmp
std
mov
sti
inc
jmp
nop
aas
lods
ja
addr16
not
sbb
js
movs
jmp
mov
jno
adc
push
cdq
add
sbb
cld
push
mov
jle
pop
mov
xor
dec
jbe
cs
daa
mov
jl
(bad)
rcl
(bad)
mov
or
rcl
jnp
and
mov
dec
inc
or
adc
dec
dec
push
inc
or
and
out
cmps
and
adc
pushf
xlat
fst
sub
sub
sub
lea
push
dec
cmps
sub
and
xor
adc
xlat
arpl
jb
ins
lea
xor
inc
scas
add
xchg
pop
mov
cwde
push
in
pop
or
icebp
add
sbb
cdq
retf
lea
push
int3
js
ss
pop
enter
ja
ins
inc
push
push
outs
rcl
out
push
mov
mov
rol
outs
jne
loopne
pop
pop
mov
xor
aaa
inc
in
xchg
fstp
loop
movs
pop
mov
pop
xchg
jmp
jae
jl
pop
dec
xor
jecxz
add
es
inc
and
ss
test
xor
adc
rcr
mov
add
inc
mov
mov
jmp
xor
pop
mov
pop
call
dec
rcr
cmp
add
cmp
dec
stc
add
and
jnp
int
cmps
int3
xchg
enter
pop
fldcw
int
mov
(bad)
or
mov
mov
gs
mov
or
popa
push
inc
mov
jno
cmp
mov
pop
enter
cdq
cmps
dec
stos
and
ins
rcl
inc
jge
call
shl
xor
dec
mov
xchg
xchg
sbb
test
scas
push
sbb
sbb
(bad)
or
repnz
cs
loop
adc
jne
fmul
sub
movs
add
mov
je
mov
mov
or
mov
outs
dec
hlt
out
fadd
aam
inc
cmc
pusha
inc
fwait
push
pop
sub
and
inc
jb
in
mov
sub
add
test
or
(bad)
leave
xor
pop
xor
in
loop
nop
imul
jp
cmp
xchg
or
add
jnp
test
pop
(bad)
cld
mov
xor
xor
lods
jb
jo
cmps
push
arpl
and
out
xor
sar
xor
add
ficomp
inc
mov
cdq
sub
or
les
test
mov
xchg
test
adc
mov
movs
je
and
sbb
into
jp
jbe
and
pop
lods
lods
int3
xchg
push
push
lods
lods
inc
adc
sub
addr16
and
movs
retf
xchg
mov
jecxz
imul
xchg
add
push
aam
test
xor
imul
dec
or
inc
jg
jmp
and
icebp
aam
add
stos
shl
pop
pop
fwait
jp
inc
movs
mov
push
imul
xchg
dec
sub
adc
or
gs
dec
add
repz
push
cmp
or
sti
xchg
aas
jne
xor
adc
into
cmc
inc
push
cmp
dec
in
stos
push
mov
pop
xchg
jae
test
test
adc
mov
mov
loopne
adc
or
pop
dec
mov
mov
mov
cmc
sbb
xor
xor
xchg
inc
int3
jae
fist
lods
adc
dec
or
jnp
and
push
xchg
movs
xchg
sbb
push
bound
sti
mov
jl
fstp
mov
jne
fs
fcomp
mov
ins
dec
(bad)
add
ret
dec
in
outs
jno
xor
adc
jno
push
push
inc
dec
dec
or
mov
adc
test
ret
mov
gs
jmp
stos
push
ret
pop
dec
fnstcw
jecxz
std
shl
mov
cmp
cld
sub
or
xchg
push
pop
out
repnz
(bad)
dec
xchg
scas
sbb
es
test
or
mov
or
push
les
and
mov
sti
dec
inc
mov
rcr
xor
aam
add
jge
cmp
rcl
cwde
fwait
sti
inc
sbb
push
xchg
je
ficom
in
xchg
push
mov
aad
rol
hlt
int3
or
dec
neg
jne
(bad)
mov
test
loopne
(bad)
push
jbe
mov
sbb
out
lods
sub
xchg
ret
shl
movs
dec
dec
loop
movs
(bad)
in
imul
push
cmp
jmp
bound
cmps
icebp
rol
shr
sbb
inc
fs
rcr
fld
aas
test
mov
(bad)
mov
fs
or
inc
push
lods
bound
add
add
dec
mov
xchg
or
in
adc
add
and
sbb
push
ds
xor
add
xor
jb
in
cmp
mov
xchg
imul
sub
push
jo
fst
push
cmp
je
mul
inc
jo
aad
inc
loop
cmps
sub
ins
ss
inc
push
sbb
add
mov
or
cld
dec
push
xchg
jbe
rcl
or
pop
cmps
and
xchg
xchg
mov
gs
or
inc
jns
data16
shr
add
push
test
es
mov
movs
sbb
inc
mov
imul
mov
out
aam
or
pop
int3
lods
popa
sbb
test
adc
je
add
movs
xor
mov
mov
(bad)
rol
sbb
pop
jmp
ror
mov
icebp
cmps
and
cmp
enter
xchg
sbb
inc
movs
mov
js
sbb
or
rcl
clc
jns
pop
cs
aam
and
xlat
or
hlt
rcr
jnp
cmps
inc
jbe
jge
sar
add
dec
in
shl
scas
lds
push
cmps
nop
je
xlat
add
scas
stos
clc
jecxz
mov
or
dec
fcomp
test
mov
sbb
cmps
cmps
and
out
ret
mov
lea
add
xchg
data16
dec
in
ja
or
scas
fs
rol
(bad)
fadd
sbb
cmc
inc
adc
aad
pop
fild
or
pusha
lahf
mov
je
cmp
das
and
add
mov
popf
inc
leave
ins
push
cmp
fst
jnp
jp
das
in
jmp
sbb
or
push
xor
in
shl
push
ret
sub
cmp
xchg
xor
lea
enter
retf
ins
mov
fwait
cmp
dec
push
test
out
jmp
jecxz
mov
add
push
dec
(bad)
dec
dec
push
push
fmulp
popf
js
lods
jmp
mov
aad
inc
shl
repnz
les
pop
push
loopne
mov
movs
inc
cmps
iret
in
xchg
neg
rcl
(bad)
out
mov
cmp
call
fwait
sar
ins
mov
jo
mov
pop
add
ficom
adc
aad
fstp
lea
add
jae
push
inc
pop
mov
xchg
repz
xchg
dec
pushf
lea
push
js
jae
test
sbb
and
push
xchg
pop
add
cmps
jno
aas
push
push
cmc
iret
jecxz
int
lahf
adc
inc
push
pop
shr
sub
jecxz
inc
sbb
mov
test
test
push
shl
inc
fiadd
push
dec
scas
mov
lds
inc
retf
jmp
push
rcl
out
xchg
rcr
data16
fld
mov
dec
add
or
push
sbb
xchg
movs
scas
pop
rol
test
ror
xchg
or
xor
jo
sbb
inc
shr
pop
push
add
and
call
add
fwait
in
or
and
int
xor
xor
hlt
hlt
cmp
leave
mov
jmp
ins
mov
lock
sar
dec
jns
fnstcw
scas
fistp
mov
add
stos
xchg
cwde
shrd
arpl
daa
dec
add
inc
imul
(bad)
pop
xor
push
adc
aam
push
mov
test
aaa
rol
pop
iret
push
mov
hlt
xor
popf
inc
jne
and
pop
ret
movs
scas
pop
mov
rcl
adc
jb
jae
nop
fadd
aam
mov
or
inc
fisttp
lods
sbb
push
je
xor
lods
call
xchg
xor
mov
stos
push
push
int3
retf
sbb
scas
mov
gs
adc
dec
arpl
out
dec
shl
clc
(bad)
mov
jae
(bad)
fsubrp
cld
ror
mov
push
sbb
jns
push
cli
punpckldq
push
stc
xchg
cmp
mov
sub
out
mov
sub
repnz
out
sub
jno
fucomi
cs
dec
xchg
mov
push
enter
push
fimul
das
je
clc
std
push
test
pushf
pop
adc
test
sbb
adc
in
cmps
test
mov
imul
push
xchg
xor
mov
repnz
mov
mov
jo
not
mov
es
es
xchg
xchg
add
(bad)
into
pop
jmp
rcl
dec
repz
imul
rol
push
push
mov
pop
mov
push
mov
ds
les
stos
jns
and
mov
shr
test
mov
push
xor
test
mov
sub
outs
dec
ss
push
addr16
jl
not
jp
xlat
dec
(bad)
jmp
aam
inc
in
add
mov
std
dec
(bad)
aas
jno
pushf
sbb
jmp
pop
push
sahf
outs
call
pop
xor
mov
imul
ret
sub
cli
push
int
inc
das
add
inc
int3
adc
pop
mov
rcr
outs
in
inc
imul
or
jle
mov
test
sbb
pusha
pop
or
xor
inc
cmp
jmp
sub
iret
sbb
and
scas
inc
add
test
stos
(bad)
fild
jle
sub
dec
cmp
fwait
out
jno
cs
imul
inc
sbb
pop
sub
push
or
add
pop
xor
mov
std
ror
push
pop
xor
xor
dec
sbb
jo
jecxz
cmp
mov
jle
jo
in
test
and
xchg
push
shr
inc
sub
pop
sti
xor
fild
lods
xchg
dec
out
jbe
cmp
fmul
inc
sbb
sbb
pop
into
cmp
pop
mov
sbb
inc
push
cwde
xor
and
sbb
and
inc
mov
lea
xchg
inc
push
sbb
es
sbb
pop
les
lods
test
sbb
inc
mov
and
sub
mov
cmc
test
mov
(bad)
dec
cmps
fisttp
test
jns
je
xchg
lods
aad
inc
fdivr
cmc
mov
push
pushf
cdq
or
cmps
cmp
movs
ins
mov
xchg
xor
push
scas
rol
mov
loopne
cmp
xor
arpl
mov
rcl
mov
push
push
lods
sub
or
mov
mov
jns
leave
push
cwde
xchg
lods
pop
sub
and
push
mov
adc
sbb
stos
push
jge
fcomp
mov
xchg
inc
mov
xor
outs
enter
mov
inc
popa
xchg
add
xor
xor
sar
pop
push
idiv
sbb
clc
xchg
inc
in
outs
jle
fucomip
fnstcw
jb
jmp
xchg
fwait
pop
(bad)
into
data16
cmp
and
movs
sbb
fs
and
xchg
addr16
pop
pop
cmp
mul
jl
(bad)
in
pusha
ffreep
pop
dec
test
sub
test
add
and
dec
mov
push
ret
xchg
retf
jecxz
dec
add
mov
push
or
aad
sub
outs
mov
mov
aam
test
mov
mov
xchg
mov
adc
mov
iret
adc
dec
shl
aaa
mov
int
cmp
and
xchg
pop
nop
and
inc
cmpxchg
pop
xchg
leave
mov
ret
dec
out
sub
dec
push
pop
jne
je
push
inc
jo
push
cmp
mov
movs
cdq
adc
mov
addr16
pop
dec
shl
dec
jo
ret
fsub
fcmovne
shl
push
adc
sub
push
fstp
and
mov
xor
shl
je
dec
sbb
sub
sbb
sub
fdiv
mov
jnp
sub
out
adc
not
and
push
aad
push
inc
sbb
test
dec
xlat
pop
ss
das
pop
dec
and
jnp
pop
bound
jmp
sub
push
cli
push
cmp
int
mov
vrsqrt14ps
and
rcl
xchg
mov
cmp
jp
jecxz
ins
mov
call
cwde
or
retf
push
shl
iret
inc
aad
std
jmp
imul
fimul
lahf
in
cmp
arpl
sub
clc
inc
mov
std
aad
mov
jnp
or
dec
mov
sbb
jnp
jle
or
ins
lds
push
push
jmp
or
sbb
jg
jae
and
lea
pop
sar
or
not
js
in
cmps
push
icebp
push
(bad)
inc
ret
and
sbb
mov
fsub
int3
aam
push
mov
push
adc
in
ss
dec
call
xchg
mov
inc
jb
adc
stos
or
sbb
mov
push
sbb
push
pop
(bad)
in
push
xor
sbb
mov
popa
inc
dec
push
jae
movs
xchg
fwait
inc
add
mov
inc
jmp
xor
push
cwde
cmp
sub
cmp
sbb
push
(bad)
les
sar
(bad)
jmp
icebp
ret
sbb
add
jns
loop
jnp
sub
pop
retf
jp
fsubr
hlt
(bad)
cmps
mov
(bad)
icebp
dec
add
ins
pop
repnz
je
call
push
sub
mov
xchg
test
xchg
jp
mov
iret
addr16
push
mov
xchg
rcr
ins
dec
cmp
add
lods
and
or
out
ins
or
push
mov
cld
(bad)
popf
aaa
jge
imul
call
sub
cmp
loopne
xor
cmp
mov
push
adc
mov
fisttp
dec
inc
sub
push
fmul
push
and
adc
add
jbe
inc
mov
lahf
pop
nop
inc
into
dec
add
mov
ret
jle
es
push
sub
dec
nop
cli
cwde
in
retf
push
test
fs
mov
sub
les
add
fld
xor
adc
rep
ret
inc
or
xchg
inc
sbb
in
out
or
sub
inc
and
sbb
out
cs
dec
adc
gs
dec
jns
mov
and
pop
mov
lahf
popf
add
or
fsubr
int3
sub
lea
popf
mov
mov
jns
cmp
lea
imul
js
sub
pop
scas
test
jnp
sbb
mov
push
pop
jnp
outs
mov
int3
pop
xlat
ja
cmp
jl
lods
mov
sahf
mov
fsub
(bad)
test
out
lods
push
mul
(bad)
sbb
or
dec
bound
xor
xchg
fcmovb
mov
jns
inc
sub
mov
into
shl
lods
(bad)
mov
mov
daa
aad
dec
sub
dec
cld
jno
scas
daa
pushf
mov
sti
imul
stos
in
loope
aam
dec
push
push
adc
loop
sub
out
pop
loopne
xchg
inc
sub
or
enter
jo
dec
pop
cmp
push
fstp
xchg
out
stos
push
or
jno
sbb
sbb
dec
sbb
push
mov
enter
pop
push
gs
and
mov
sbb
leave
leave
sub
mov
pop
ja
sub
jo
out
or
sbb
push
not
ret
or
test
mov
call
xchg
add
cmp
enter
jne
sbb
xchg
jb
pop
cdq
xor
pop
push
scas
push
out
sbb
scas
or
jecxz
mov
mov
and
test
bound
loope
adc
lods
gs
cmp
pop
cmp
dec
inc
call
ins
xchg
in
es
sbb
ja
jle
lods
sub
xor
push
paddsw
inc
and
outs
cdq
sbb
test
sti
push
mov
inc
loopne
xor
leave
jb
ret
jmp
mov
and
and
or
pop
call
xchg
iret
or
mov
xchg
mov
retf
movs
xor
mul
movs
enter
xlat
in
div
xor
cs
mov
sub
sahf
arpl
sub
or
xchg
pop
and
leave
shl
jmp
aad
div
aam
popa
mov
(bad)
aam
out
daa
gs
loope
xor
leave
in
or
mov
push
jnp
adc
xchg
mov
cmps
test
pop
sub
mov
mov
dec
(bad)
adc
mov
or
sbb
sub
mov
dec
outs
lea
gs
stos
cmp
(bad)
xchg
in
shl
jp
fbstp
pop
test
add
dec
or
xchg
test
and
dec
mov
test
int3
push
sbb
inc
repnz
and
movs
mov
push
mov
add
sub
dec
xlat
jl
pop
gs
dec
mov
(bad)
sub
push
aam
iret
in
inc
mov
into
xchg
mov
imul
sahf
adc
jmp
and
lods
add
repnz
xor
adc
in
sbb
cmps
cwde
scas
icebp
pop
xchg
mov
add
(bad)
iret
mov
(bad)
daa
xchg
in
lsl
sub
rcl
into
loope
xchg
movs
cs
adc
(bad)
sbb
jnp
shr
lods
jb
mov
dec
int3
(bad)
sar
adc
ins
das
mov
mov
or
out
jo
mov
int3
ret
out
push
mov
mov
push
(bad)
jmp
jae
arpl
fild
dec
in
(bad)
pop
sub
arpl
and
cld
dec
jo
sub
fisubr
mov
or
or
arpl
jns
stos
das
(bad)
adc
cmp
xor
jno
pop
and
push
pop
cs
aas
pop
add
mov
add
test
mov
jb
jmp
xor
arpl
mov
xchg
and
retf
or
out
loope
mov
pop
adc
not
pop
jg
fcom
xor
dec
and
mov
adc
movs
mov
pop
lock
and
inc
pop
pushf
or
jae
js
mov
dec
cs
add
mov
nop
call
cld
push
(bad)
pop
cmp
loopne
dec
mov
lahf
inc
mov
repnz
out
clc
cwde
fcmovnu
cli
mov
and
sti
push
fld
or
mov
test
stos
cmp
sub
or
xchg
lea
and
xor
mov
xor
and
int
cmps
cmp
add
jecxz
xchg
cmp
mov
or
xor
rcr
jmp
mov
(bad)
sbb
into
repnz
mov
jnp
push
xchg
in
cs
adc
cmp
xor
adc
xlat
cmp
jne
cmp
(bad)
pop
or
sub
push
jl
out
pop
inc
int3
mov
mov
push
ds
push
xchg
inc
out
test
movs
sbb
mov
mov
(bad)
jp
in
in
fld
mov
into
pop
out
cmp
add
(bad)
sbb
jb
xrelease
cdq
cmp
sbb
inc
or
push
pop
xchg
push
outs
test
call
jp
xor
dec
pop
adc
in
xchg
inc
adc
fsub
inc
inc
cmps
adc
xor
(bad)
fidiv
repz
out
shl
aam
stos
cdq
and
mov
dec
loopne
xchg
xchg
scas
sbb
inc
jecxz
scas
xor
cli
push
mov
stos
dec
daa
cmps
ror
cmp
push
nop
mov
dec
and
loope
and
inc
adc
and
jle
sub
mov
xor
sbb
js
mov
mov
stos
mov
rcr
lock
stos
ja
in
cmp
mov
scas
dec
inc
sbb
mov
xchg
adc
push
or
ja
retf
mov
pusha
jecxz
jnp
inc
sbb
cli
xchg
mov
or
adc
sbb
rcl
sub
sub
mov
xor
test
stos
inc
cmp
sbb
arpl
ds
test
imul
inc
or
mov
push
xchg
movs
adc
(bad)
mov
xor
adc
push
jae
or
push
push
stc
or
and
mov
mov
jmp
mov
repnz
inc
push
nop
xor
and
(bad)
fistp
xor
mov
mov
mov
push
cmp
mov
lods
mov
outs
mov
adc
dec
sbb
pop
jbe
cdq
ins
out
in
movs
sbb
popa
leave
jle
or
sub
and
es
dec
inc
push
pop
lds
lods
jo
push
test
ss
clc
cs
add
lds
adc
mov
hlt
sub
mov
mov
dec
mov
lds
dec
pop
sbb
popa
daa
retf
and
out
and
add
push
inc
fcomp
pop
mov
xchg
dec
fs
call
imul
mov
bound
jg
loope
pop
pop
sti
scas
mov
adc
xor
push
xor
hlt
in
sub
dec
cdq
mov
gs
sahf
mov
cdq
push
in
sahf
pop
adc
mov
aaa
das
mov
push
jne
ins
and
fbld
xor
jo
push
mov
movs
popa
dec
dec
fs
inc
out
movs
sub
mov
mov
cwde
mov
mov
inc
jae
or
ja
les
stos
dec
mov
add
pop
icebp
(bad)
mov
xchg
adc
push
sbb
jecxz
add
mov
pop
add
les
inc
mov
test
scas
sub
or
inc
mov
or
std
cmp
cld
lods
push
outs
ins
stos
rcl
pop
mov
xchg
fcmovbe
dec
out
rol
xchg
retf
outs
ror
loopne
retf
bound
push
push
pop
mov
mov
retf
pushf
in
mov
ja
(bad)
jp
imul
ss
ins
cdq
mov
mov
(bad)
aad
mov
and
cmp
push
push
in
(bad)
mov
mov
aad
cmp
out
mov
dec
test
arpl
pop
xor
xchg
xchg
adc
add
push
cmp
clc
or
cwde
mov
mov
sub
dec
add
in
mov
test
cmp
data16
mov
and
jns
gs
mov
fcomp
rol
rol
or
mov
int3
repnz
sub
or
dec
dec
pop
adc
and
sbb
mov
jnp
xor
push
aam
int
movs
jl
adc
out
xchg
repnz
jb
ins
mov
xchg
sti
mov
push
add
icebp
retf
sbb
lea
inc
or
addr16
loopne
ret
rcl
xchg
pop
test
mov
pop
aas
sub
fimul
push
push
ror
fcomp
and
pop
add
add
movs
stos
add
les
jle
loop
fmul
or
out
push
xchg
and
and
push
in
xchg
loopne
outs
adc
std
cmp
shl
fsub
in
xchg
sub
or
lock
shl
fs
mov
sub
push
add
jecxz
fstp
xor
push
imul
pop
push
jae
jno
les
add
test
repnz
movs
adc
(bad)
mov
add
mov
cs
mov
ins
jnp
xor
cdq
shl
push
jae
sbb
cmp
xlat
and
sub
mov
and
test
sub
sub
stos
jge
pushf
cmp
js
push
das
mov
cmp
ja
or
and
xchg
cmp
xor
loopne
xor
and
enter
(bad)
mov
in
leave
push
or
mov
xchg
pop
sbb
inc
inc
in
pop
popf
adc
pop
xchg
adc
jns
mov
out
test
dec
ret
idiv
(bad)
inc
fdecstp
fnstsw
sbb
jo
mov
(bad)
addr16
(bad)
lea
jae
sbb
mov
inc
ret
push
dec
rcl
mov
push
mov
dec
sbb
and
push
fcmovbe
dec
push
mov
pop
lock
jl
mov
mov
pop
fs
push
mov
iret
adc
xor
add
dec
jae
ds
cmps
stos
ja
cmc
mov
fisubr
lods
enter
into
sub
xchg
adc
jne
out
inc
push
scas
mov
push
mov
sahf
aad
daa
xchg
fcom
jb
icebp
adc
inc
mov
out
in
inc
ror
dec
xor
cmp
ret
or
test
bound
fwait
adc
add
mov
fcomi
mov
mov
fwait
pop
sub
push
fcmovbe
(bad)
retf
or
gs
rcr
push
sub
icebp
mov
inc
pop
movs
icebp
mov
or
test
push
sbb
imul
push
ror
add
mov
xchg
ret
lds
pop
ins
data16
push
mov
cmp
jl
(bad)
add
enter
sbb
arpl
jns
cmp
xor
movs
mov
dec
jecxz
out
mov
mov
or
or
sub
mov
jnp
sub
mov
(bad)
(bad)
data16
xchg
aam
(bad)
outs
and
inc
jg
mov
movs
(bad)
pusha
out
jbe
dec
sub
or
add
and
(bad)
sub
jle
mov
sbb
xor
test
std
mov
pop
fisttp
jno
xchg
cmp
cdq
cmps
lea
fcmove
jae
xchg
mov
cs
adc
cdq
or
cmp
rcr
ja
push
push
push
sbb
push
mov
dec
loope
loope
mov
dec
jae
lods
push
xchg
push
retf
in
xchg
add
imul
jecxz
icebp
mov
out
jne
jge
cmps
aad
int
les
outs
push
xor
jb
mov
aad
pushf
mov
push
ins
frstor
sub
dec
repz
movs
push
shl
mov
or
gs
shl
mov
test
inc
adc
xor
adc
retf
or
dec
daa
push
add
retf
out
push
in
mov
aaa
add
mov
sub
fst
into
dec
pop
imul
rcr
ds
mov
xchg
rcr
mov
iret
and
(bad)
sahf
movs
push
pop
adc
push
enter
test
sar
pop
nop
dec
repnz
sbb
test
test
in
mov
nop
dec
xor
pop
fld
call
sbb
shl
pop
enter
out
sbb
rcl
dec
pop
imul
out
scas
sbb
xor
mov
pop
sbb
jne
(bad)
aad
int3
shr
psubsb
movs
outs
dec
adc
sub
and
movs
and
or
lods
adc
lock
mov
xchg
mov
les
(bad)
sbb
or
test
sbb
xor
push
mov
loop
shr
cmp
sbb
pop
sti
and
mov
xchg
scas
pop
mov
in
stos
or
add
les
je
fdivr
jl
ret
mov
lock
push
outs
pop
jmp
xchg
add
les
loopne
push
sbb
sub
xchg
in
pop
dec
loope
not
or
mov
test
push
push
(bad)
popf
popa
xlat
push
mov
ins
ins
pusha
and
pop
jecxz
dec
inc
nop
out
int
adc
movs
inc
nop
push
fwait
test
retf
test
sar
and
ins
mov
inc
pusha
xchg
mov
mov
movs
mov
lods
mov
sbb
adc
push
inc
mov
sub
lds
ins
aaa
push
push
dec
mov
int
loopne
mov
imul
gs
mov
mov
(bad)
push
sti
or
lock
sti
fs
scas
xor
mov
cdq
xor
xor
(bad)
imul
push
xchg
aam
arpl
xlat
cmp
mov
mov
int3
mov
movs
std
(bad)
adc
sbb
xor
clc
cdq
jge
push
mov
fld
cmp
push
cmp
pop
cwde
div
aam
repnz
add
xchg
add
fs
movs
push
imul
rol
pop
aas
push
inc
sub
cdq
push
movs
or
push
pop
and
mov
inc
fwait
mov
scas
mov
sub
out
xchg
aam
test
push
mov
ja
pop
add
test
or
xchg
ror
jno
dec
push
leave
pop
sbb
loopne
or
lahf
push
je
loopne
int
ficom
inc
dec
fiadd
lea
pop
dec
(bad)
daa
mov
sbb
mov
xchg
lahf
test
or
xor
dec
test
pushf
add
pop
fild
xchg
(bad)
call
xchg
lea
ret
mov
jbe
pop
fiadd
aaa
bound
stc
call
popf
scas
dec
xor
fsub
cmp
cmp
loop
mov
mov
(bad)
gs
das
and
lods
push
sar
ja
frstor
(bad)
jnp
fbstp
pop
fstp
popa
cmp
test
push
add
cmp
push
jae
js
fsub
push
fisttp
fdiv
jmp
and
dec
jle
ret
sbb
leave
pop
jbe
fadd
retf
rcl
lds
sbb
sbb
cs
loope
out
std
mov
nop
enter
pop
or
nop
mov
inc
dec
pop
out
pop
xchg
adc
cdq
mov
xor
das
mov
inc
sbb
dec
fdivr
mov
and
(bad)
cmps
add
add
jecxz
add
cwde
or
cdq
jecxz
adc
nop
lea
or
or
popf
cmp
mov
dec
ds
add
push
iret
jne
xor
iret
pushf
es
push
cmps
mov
jno
scas
jo
mov
lock
jge
in
shl
in
cmc
cmp
icebp
inc
movs
arpl
mov
outs
mov
and
sbb
push
test
push
popf
ret
inc
add
add
and
inc
enter
cmp
jns
call
mov
jmp
and
outs
gs
sahf
repnz
jno
xchg
mov
rol
mov
retf
sbb
adc
push
xor
cvtps2pi
enter
je
movs
jb
adc
movs
cmp
daa
and
inc
jbe
sbb
mov
fs
and
mov
ficom
and
int
sbb
xchg
sub
xchg
pop
shr
test
and
out
in
mov
dec
and
inc
cdq
stos
mov
or
mov
test
mov
js
lods
ror
inc
popa
adc
mov
xchg
and
mov
xchg
jecxz
xchg
stos
sbb
xchg
mov
jg
xor
enter
cmp
aaa
cwde
movs
lea
mov
loopne
icebp
test
imul
jns
gs
adc
addr16
lds
jb
cmp
fisttp
and
pop
push
push
jmp
pop
popf
sub
xchg
sahf
pop
push
fcmovnb
push
movs
adc
adc
cmp
test
pop
test
fmul
sub
dec
rol
xor
pusha
inc
sbb
push
call
enter
xchg
lods
mov
cmp
mov
data16
or
dec
inc
cwde
not
test
or
and
imul
ins
cmp
push
and
mov
sub
pushf
sbb
call
xchg
xchg
pop
cmp
pusha
addr16
xchg
pop
aam
movs
out
inc
mov
push
xchg
and
fsubr
(bad)
clc
push
push
inc
push
outs
add
sar
jbe
movs
pop
push
and
cmp
enter
mov
jnp
push
jp
cmp
mov
dec
mov
(bad)
inc
ins
dec
xor
dec
xchg
mov
xchg
outs
adc
cmp
add
sub
mov
push
stos
add
pop
lea
lock
push
mov
pop
aad
xor
in
repnz
ror
sbb
adc
cmp
adc
bound
pop
mov
mov
mov
shr
retf
mov
je
mov
(bad)
imul
test
aam
shl
cmp
inc
jnp
push
mov
fmul
(bad)
jecxz
je
jb
ffreep
stos
cmp
int3
xchg
sub
(bad)
mov
and
(bad)
cmc
and
rcl
dec
stos
sbb
(bad)
mov
js
xor
movs
retf
loopne
fild
mov
xchg
loope
mov
push
loop
jb
stos
adc
xchg
(bad)
imul
push
mov
xchg
dec
cmps
popf
das
outs
lfs
jne
mov
pop
push
cmc
adc
sbb
inc
mov
xor
mov
fdivr
sub
cdq
std
mov
and
ror
and
adc
xor
or
into
mov
ins
sbb
pop
fstp
cmps
push
sahf
ret
pop
mov
push
(bad)
in
mov
xchg
sub
imul
mov
mov
xchg
mov
sub
inc
clc
and
outs
mov
lock
xor
mov
nop
test
js
push
nop
jle
sbb
xor
cmp
bound
lods
into
push
clc
mov
cmp
dec
sub
and
mov
adc
bound
aad
push
sahf
bound
or
adc
and
xchg
jo
push
test
lods
arpl
inc
xor
push
or
je
and
add
add
cmp
sub
mov
and
push
mov
dec
and
(bad)
nop
mov
aaa
pop
loopne
mov
cdq
pop
iret
push
rol
jl
aaa
test
pop
adc
mov
push
or
jns
mov
mov
inc
seto
add
mov
arpl
scas
clc
sbb
push
sub
pop
pop
pop
mov
cmp
daa
sbb
sub
(bad)
(bad)
dec
jnp
push
movs
sbb
push
cmp
sbb
retf
rol
and
popf
dec
sbb
fiadd
mov
dec
sub
popa
lea
push
not
movs
jne
pop
or
sub
fistp
ins
into
dec
mov
shr
sbb
sub
inc
inc
mov
mov
rcl
push
inc
leave
call
xor
inc
pop
je
out
loope
xchg
inc
in
gs
mov
mov
test
loopne
or
inc
bndldx
adc
call
mov
adc
sub
out
pusha
push
xchg
loope
ins
sar
push
mov
mov
aam
repnz
adc
sbb
inc
enter
adc
movs
adc
dec
fst
out
gs
ja
(bad)
or
jb
aaa
jns
loop
and
mov
fimul
mov
sbb
les
pop
push
push
mov
inc
cdq
fldcw
outs
clc
test
push
int
data16
sti
push
arpl
fld
pop
adc
or
xchg
addr16
adc
or
repnz
or
mov
mov
add
sub
dec
mov
mov
in
add
xchg
xor
sbb
(bad)
loop
scas
xor
int
mov
pop
fstp
cmps
inc
pop
sub
xlat
pop
xchg
push
push
mov
add
sar
and
and
shr
inc
push
push
xchg
cmp
xchg
mov
je
mov
int
sub
shl
push
add
lock
and
lods
mov
stos
mov
cmp
repnz
inc
popa
mov
dec
and
aam
aam
invd
jmp
retf
push
or
dec
in
fmul
mov
popf
sub
mov
shr
or
sbb
in
sbb
sbb
mov
test
in
cmps
ins
and
mov
sbb
loop
dec
and
xchg
jp
mov
jle
ds
mov
ret
lahf
sbb
(bad)
jb
clc
inc
xor
outs
xor
push
xchg
cmps
test
xor
aas
je
cdq
adc
dec
adc
xchg
mov
(bad)
out
mov
pop
jne
sbb
sub
ret
fs
add
cmps
cmps
jb
movs
imul
lods
or
push
or
adc
jb
mov
pop
pop
sar
(bad)
ftst
pop
adc
mov
imul
sbb
and
retf
dec
sbb
setno
push
jmp
mov
cmp
js
add
rcr
jno
aam
repnz
fidivr
shl
mov
je
test
nop
jmp
fadd
pop
add
xchg
js
lea
xchg
push
cld
dec
aaa
cmps
test
call
push
jns
out
in
and
mov
cmp
fcom
stos
lock
mov
cmp
inc
xor
dec
in
(bad)
imul
xchg
out
mov
sbb
loopne
jno
retf
aad
ret
enter
inc
inc
jmp
rcr
sbb
or
sbb
clc
jns
mov
xchg
iret
sahf
pop
(bad)
jbe
mov
jmp
popa
sbb
sub
inc
inc
lods
add
xor
inc
add
cld
adc
mov
or
and
dec
call
push
imul
add
xchg
xchg
(bad)
pop
dec
fisttp
outs
(bad)
jnp
cmp
sbb
mov
es
lods
xchg
sub
out
imul
dec
or
fistp
sub
inc
adc
inc
test
xor
in
movs
arpl
push
js
movs
ret
add
xchg
mov
cmp
lock
mov
shl
aaa
jo
cli
push
adc
retf
ja
and
inc
mov
cmp
fild
and
pop
into
or
inc
out
or
mov
xor
add
test
cmp
test
push
fcomp
test
movs
mov
std
cmps
jge
imul
int3
push
cmp
and
(bad)
scas
(bad)
arpl
or
(bad)
mov
sbb
lods
lea
mov
add
pop
fiadd
inc
jb
or
sub
xchg
or
dec
aam
push
into
mov
inc
xchg
fs
mov
mov
sbb
xchg
out
ins
add
arpl
xchg
or
fwait
cmp
shl
cwde
fs
xor
stc
push
mov
popf
pop
xchg
xchg
iret
pop
(bad)
retf
jg
pop
dec
addr16
fstp
jo
pop
push
bound
ret
jo
sub
cmps
adc
pop
nop
adc
and
lea
stos
and
cmp
add
pop
inc
xor
stos
mov
sub
cdq
dec
pop
sbb
lods
jne
xchg
cdq
or
ret
mov
cmp
add
push
adc
dec
in
mov
sub
shr
sbb
sbb
mov
retf
pop
idiv
sti
cld
sub
cmps
cmps
call
fidivr
fs
imul
pop
xchg
or
ds
mov
imul
gs
xor
test
int
arpl
popa
add
cmp
inc
push
push
mov
test
into
imul
and
fmul
aas
sub
std
xlat
jae
push
stos
push
mov
mov
and
daa
repnz
cld
push
xchg
(bad)
in
xchg
stos
sbb
mov
sub
fsubr
outs
jmp
jmp
jmp
mov
jbe
rcl
js
loope
cs
in
test
ret
popf
stos
fs
push
adc
or
jle
cmp
movs
mov
les
and
jle
mov
xchg
or
pop
xchg
sub
mov
sbb
(bad)
push
ss
pushf
adc
test
pusha
mov
add
outs
sbb
jecxz
mov
or
sbb
dec
adc
mov
or
leave
inc
in
ret
add
jnp
jecxz
inc
movs
cmp
and
push
pop
not
or
scas
loop
jno
mov
movs
outs
add
iret
loopne
and
cmps
add
add
leave
fdivp
call
xor
xchg
call
pop
mov
sbb
xchg
fs
xlat
ins
mov
mov
or
dec
ins
xor
imul
pop
add
mov
adc
or
aaa
dec
sbb
enter
loope
pop
jmp
cmp
retf
movs
fistp
adc
inc
mov
push
shl
imul
mov
mov
and
jnp
(bad)
es
stos
out
sub
ficomp
jp
rol
inc
in
lods
cmp
inc
scas
mov
push
lea
dec
jle
dec
xchg
cmp
ja
mov
gs
jnp
xchg
test
xor
or
xchg
pop
adc
mov
popf
mov
lods
push
sub
outs
pop
pop
mov
js
sbb
ins
xchg
dec
inc
cmp
fdivp
mov
pop
dec
fst
out
dec
ret
(bad)
dec
clc
cmp
or
xor
inc
loopne
pusha
mov
in
js
js
mov
sub
dec
les
pop
and
sbb
mov
mov
movs
sbb
sbb
shl
pop
push
fsubr
mov
imul
push
xor
cmp
(bad)
xlat
inc
and
mov
push
xor
retf
lods
pop
daa
gs
and
arpl
or
shr
push
retf
shr
out
xor
pop
lea
in
dec
lahf
sbb
sbb
mov
or
mov
in
mov
fadd
fimul
scas
loope
adc
mov
sbb
fst
jp
test
fmulp
ret
pop
or
push
mov
(bad)
mov
dec
cmp
xchg
xchg
in
push
lea
and
loop
imul
cmps
pop
mov
push
cmp
cmps
cmp
adc
adc
mov
mov
add
cmp
shl
pop
out
xchg
dec
add
adc
outs
popa
lods
sbb
cmp
and
das
mov
movs
outs
jl
mov
jecxz
outs
and
dec
sbb
bound
ret
ret
sub
dec
sub
test
adc
sbb
dec
inc
sub
push
add
jb
inc
dec
retf
add
js
adc
inc
adc
fcmovnbe
mov
cmp
xor
mov
mov
xchg
in
mov
dec
dec
push
mov
test
xor
mov
sbb
xchg
mov
data16
aam
dec
and
lds
clc
push
sbb
fdiv
jbe
lods
jbe
inc
repnz
or
leave
loop
cmp
jge
adc
out
mov
add
mov
gs
or
(bad)
ins
mov
rcl
jae
pop
bound
scas
int3
jne
adc
mov
inc
imul
and
test
je
inc
fcomp
jp
addr16
jno
std
call
lods
cmp
call
pop
int
cmps
pop
out
mov
loopne
fisttp
hlt
mov
in
pop
cmp
ja
and
mov
fisub
mov
test
mov
cmps
sti
popf
movs
popf
outs
push
loope
(bad)
jp
es
or
mov
shl
push
into
inc
shl
inc
sub
pop
ds
mov
jmp
inc
ret
push
or
fdivr
adc
test
loop
fdivr
int
pcmpgtw
adc
cmp
adc
retf
xchg
fs
lods
xor
or
jmp
aam
int3
adc
inc
and
inc
fadd
dec
dec
xchg
fisubr
pop
or
pop
int
pop
stos
call
mov
repz
stc
sbb
cmp
adc
cmp
push
leave
lea
push
xchg
add
xor
adc
aam
cwde
mov
movs
in
(bad)
pop
test
rcr
ror
and
jnp
fs
jnp
sar
jb
jge
out
sbb
inc
fist
cmp
dec
jns
mov
arpl
addr16
inc
jnp
cmc
sbb
rol
xor
ins
in
pop
add
out
xchg
inc
xor
ins
sar
sbb
xchg
(bad)
in
inc
mov
jmp
ins
outs
inc
jo
jmp
xchg
fucomi
sub
and
imul
scas
movs
mov
int
add
dec
jnp
cmp
out
xor
adc
call
hlt
mov
xchg
mov
ins
leave
pop
retf
lock
retf
les
(bad)
mov
clc
rol
cmp
pop
push
dec
inc
rcl
pop
and
or
and
sbb
push
loop
lahf
lea
cdq
mov
adc
pusha
dec
push
ins
mov
inc
ror
mov
mov
adc
adc
add
xor
shr
push
retf
rcr
cmp
push
mov
inc
loopne
and
xor
dec
in
push
lods
bound
push
data16
sub
jno
adc
out
add
rol
and
sbb
xor
mov
adc
lea
dec
adc
movs
mov
(bad)
shr
enter
(bad)
(bad)
pop
push
jp
shr
retf
in
stos
pop
dec
and
ins
fwait
xchg
pop
push
jb
sub
push
cmp
or
cmp
add
push
cmps
dec
sar
inc
mov
mov
and
test
rol
ja
jge
rcl
jnp
fwait
xchg
adc
pop
xor
jle
aas
xchg
les
mov
jg
cli
jnp
fisubr
popf
imul
sbb
adc
fnsave
push
mov
arpl
addr16
sbb
lds
iret
shl
retf
inc
fsubr
test
(bad)
cdq
js
and
push
xchg
mov
fadd
sub
or
enter
les
pop
pop
or
adc
lods
out
mov
ins
ins
and
mov
xor
cmp
inc
mov
push
daa
adc
je
shl
sbb
sub
xor
sub
fs
cmc
sbb
mov
in
loope
push
xor
(bad)
jo
movs
rcl
mov
pop
pop
call
movs
dec
ror
test
or
mov
xor
retf
pop
cmp
cmp
xchg
dec
xchg
pop
cmp
xchg
into
jno
cmps
lahf
inc
sub
cmp
push
imul
or
sub
sub
(bad)
inc
xchg
rcl
xor
push
hlt
mov
in
xchg
nop
(bad)
cmp
mov
push
sbb
fcmovnu
xchg
data16
or
pop
cmp
test
inc
or
cmp
adc
mov
adc
sbb
call
fs
aaa
inc
daa
add
mov
retf
and
enter
movs
and
into
fiadd
xor
jns
push
fisub
cld
test
movs
enter
movs
ins
mov
pop
adc
ret
scas
sub
mov
sub
jmp
xchg
ror
dec
in
inc
ins
ins
lods
mov
scas
add
and
pushf
push
rcr
jge
or
mov
mov
test
add
pop
mov
xchg
int3
repnz
jno
sub
call
xor
sub
adc
and
pop
sbb
stos
push
shl
ins
mov
adc
lds
popf
push
ins
imul
xchg
xchg
or
add
pop
lods
mov
(bad)
jg
mov
mov
(bad)
inc
sti
or
and
xor
mov
aad
mov
stos
neg
sbb
(bad)
or
xor
pop
fistp
add
add
inc
jns
out
inc
push
movs
lds
ss
enter
inc
add
push
lods
jne
or
sbb
rcl
or
aad
mov
shr
arpl
and
sub
dec
(bad)
bound
jne
or
es
clc
stc
mov
xor
mov
cld
inc
mov
ds
or
fcmove
mov
push
fwait
xor
xchg
dec
inc
not
jp
pop
dec
bound
sbb
add
(bad)
mov
ret
ret
adc
int
lea
and
jno
aam
daa
nop
movs
and
dec
test
pushf
cmp
mov
cmp
retf
call
xor
dec
ficom
shl
shr
xor
in
dec
mov
call
dec
rdmsr
push
int
scas
jo
or
pop
popf
and
test
sub
loop
cmp
xchg
mov
sub
add
sub
outs
pop
repz
sbb
dec
jg
hlt
dec
fnstsw
adc
xor
mov
outs
cmp
fstp
jge
pop
cmp
cdq
stos
aas
stc
jae
adc
scas
lea
ins
lods
adc
cdq
push
xchg
sahf
cli
mov
stos
loop
int3
jbe
bound
xor
sub
cmc
(bad)
xchg
and
adc
(bad)
mov
inc
sub
adc
inc
sub
xor
pop
aaa
add
mov
xor
mov
or
sbb
sbb
int
mov
mov
jae
mov
jbe
push
cmp
out
push
imul
push
push
fldcw
push
sar
jne
xchg
ret
and
mov
dec
push
popf
pop
cdq
xchg
jp
test
push
pop
dec
scas
data16
cmp
mov
(bad)
(bad)
cwde
lods
fnstenv
cmp
jp
and
mov
test
fdiv
ss
mov
xor
lods
ins
adc
sub
icebp
push
dec
inc
xor
in
adc
in
movs
sub
adc
(bad)
test
(bad)
lods
dec
clc
adc
test
ins
imul
test
inc
xchg
mov
js
or
arpl
mov
in
stos
das
mov
imul
and
push
jno
adc
jle
pop
inc
xchg
dec
iret
and
cmps
adc
add
fcom
enter
js
outs
push
loop
push
and
and
xchg
fnstenv
mov
jnp
sub
push
cmc
(bad)
das
jns
or
or
ins
jp
lock
cmp
(bad)
mov
popa
stos
mov
xlat
jle
aaa
pusha
jge
sub
in
mov
push
or
push
pop
fnstenv
pop
sub
dec
les
push
imul
(bad)
mov
inc
push
adc
add
sbb
jmp
lock
push
add
cmp
rcl
jne
and
aad
push
retf
mov
cmp
imul
or
mov
das
aaa
call
jl
adc
les
adc
xor
enter
sub
cwde
push
iret
or
mov
mov
leave
cwde
jmp
mov
bound
xchg
(bad)
xchg
dec
adc
mov
(bad)
sar
jne
cmp
xchg
clc
push
mov
fldcw
xor
sbb
add
and
mov
mov
call
jne
lods
jno
lods
jo
mov
push
pop
adc
jbe
sbb
mov
lods
test
or
stos
ins
jecxz
stc
fadd
int3
xchg
lea
mov
pop
ins
push
or
mov
sbb
bound
cmp
push
add
leave
outs
and
pop
data16
lods
xor
iret
lea
mov
push
sbb
aad
pop
inc
stc
xor
rol
mov
js
(bad)
xor
inc
out
mov
sbb
mov
cdq
lods
jmp
push
and
retf
or
mov
sbb
cli
mov
imul
pop
(bad)
lahf
les
ins
rcl
cmc
dec
pop
mov
popf
jl
adc
mov
test
mov
(bad)
leave
xchg
data16
rol
push
and
push
or
stos
add
sub
inc
cli
jl
dec
icebp
inc
movs
out
sbb
repz
jnp
enter
fdivp
aad
mov
test
dec
push
test
cs
sub
xchg
fiadd
push
fs
pop
jecxz
dec
out
test
movs
pusha
jae
and
imul
arpl
out
jg
dec
movs
stos
shr
mov
icebp
movs
jp
or
cwde
pushf
cmp
xor
or
xor
push
inc
xchg
iret
sub
retf
inc
and
ror
sub
stos
add
lods
xchg
cli
pop
inc
xor
jnp
inc
mov
sbb
arpl
inc
daa
jmp
ins
jecxz
pop
jge
push
sub
lods
pop
and
sbb
cwde
out
jecxz
fwait
mov
xor
and
leave
cwde
and
call
test
fistp
inc
lods
stc
push
mov
xchg
loop
sub
push
mov
sbb
xchg
aad
inc
jle
imul
inc
xor
mov
pop
les
sbb
out
lea
leave
jne
push
jno
xchg
dec
bound
sub
data16
sti
push
movs
push
and
outs
push
mov
cmp
xor
(bad)
adc
lods
dec
add
cmps
sub
adc
mov
data16
movs
sub
arpl
add
push
and
pusha
shl
imul
and
xchg
mov
push
push
int
dec
xor
fs
mov
push
ret
jbe
pusha
xor
jle
pop
pop
ret
cmp
arpl
repz
adc
cs
call
rol
out
sbb
pop
movlps
shl
push
in
retf
fild
xchg
pop
ds
shl
pushf
push
mov
call
test
test
add
std
push
sub
test
scas
push
ficom
push
xor
mov
(bad)
sub
loope
xchg
lock
jmp
aam
sub
xchg
xchg
imul
int
and
jge
sbb
mov
mov
inc
sahf
test
nop
xor
js
inc
dec
and
int
test
jecxz
movs
stos
inc
rol
dec
xor
not
mov
pusha
mov
cmp
loop
mov
jo
in
shl
mov
ret
loope
sub
repnz
and
xchg
loope
mov
stos
and
and
add
push
sti
dec
xor
mov
aam
mov
dec
pop
and
cmps
xor
jle
sbb
add
mov
mov
or
in
mov
and
sub
cs
xlat
sar
outs
jmp
mov
or
scas
(bad)
enter
test
sub
sbb
jnp
ret
sub
add
jne
repz
imul
mov
out
adc
pop
stos
cmp
mov
cli
push
inc
fcom
arpl
pop
push
xchg
aam
add
jno
outs
pushf
dec
xor
jno
test
sub
push
jge
out
jo
test
jno
pushf
call
bound
xchg
and
inc
or
out
(bad)
(bad)
das
adc
in
push
(bad)
push
loopne
mov
stos
inc
push
xor
pop
sub
lods
or
jo
neg
test
gs
mov
xchg
ror
das
out
xchg
mov
stos
pop
and
loope
sbb
inc
in
pop
hlt
dec
mov
inc
jb
jnp
adc
nop
fild
xor
xchg
dec
adc
dec
ss
shl
ficom
mov
cmp
adc
or
and
lock
mov
je
dec
and
adc
xor
fimul
ss
and
push
ja
and
xchg
mov
mov
mov
mov
(bad)
sub
dec
imul
mov
lods
inc
(bad)
jnp
mov
retf
outs
test
inc
loope
push
sub
and
out
addr16
(bad)
repz
sti
sub
xor
pop
in
add
std
xchg
pop
or
sub
daa
sub
loope
push
lods
xchg
jle
dec
pop
and
out
cmp
and
cmps
cmp
not
(bad)
xor
test
inc
cmps
or
mov
inc
add
mov
sbb
and
pushf
sub
push
stos
sbb
ins
xchg
push
mov
retf
add
cdq
imul
xlat
jb
jmp
imul
shl
(bad)
mov
mov
aaa
aaa
add
ja
pop
inc
pop
and
or
imul
aas
push
push
mov
add
es
mov
mov
sbb
mov
stos
adc
adc
retf
dec
adc
and
pop
lahf
fiadd
mov
inc
mov
sbb
lods
enter
test
lock
push
fsubr
retf
push
inc
jmp
push
inc
mov
xor
push
push
lods
xchg
(bad)
push
adc
int
test
xor
xor
sti
sub
xor
xchg
push
add
and
dec
sub
mov
cmp
out
cli
push
ins
sbb
outs
pop
arpl
test
icebp
cmp
cmc
or
loop
fstp
out
xor
or
icebp
stos
cmp
cmp
outs
mov
leave
jnp
out
sbb
add
jb
cmp
test
xor
ds
sbb
inc
push
pop
sbb
push
call
imul
inc
and
dec
sub
push
add
add
dec
inc
jmp
inc
retf
mov
loopne
add
pop
sbb
adc
add
add
inc
add
add
add
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
add
add
or
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
and
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
add
add
pop
add
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ficomp
add
add
add
push
add
mov
mov
movs
mov
mov
movs
movs
movs
movs
mov
add
pop
inc
sbb
add
cmp
add
add
add
add
push
add
mov
mov
mov
in
mov
mov
mov
scas
add
pop
adc
add
dec
add
add
add
add
add
mov
cdq
mov
mov
mov
mov
movs
mov
scas
movs
add
pop
cmp
add
or
add
add
add
add
add
add
in
mov
mov
movs
movs
mov
in
mov
mov
in
add
pop
lock
or
add
add
add
add
add
push
add
les
les
movs
mov
mov
add
pop
xor
add
dec
add
add
add
push
add
movs
mov
mov
mov
in
mov
mov
adc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
lock
add
add
push
add
mov
mov
in
mov
les
mov
mov
mov
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fcomp
add
cmp
add
add
add
push
add
mov
mov
in
mov
mov
movs
mov
mov
mov
mov
add
inc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
lock
add
add
push
add
in
mov
cdq
mov
mov
mov
mov
mov
adc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
cmp
add
add
add
push
add
in
in
in
movs
mov
mov
cdq
mov
movs
mov
cdq
add
adc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
cmp
add
inc
dec
push
add
adc
dec
dec
inc
xor
add
add
add
add
add
adc
push
outs
jb
push
popa
fs
outs
arpl
outs
je
xor
sub
add
loopne
loope
adc
ret
sbb
iret
add
add
iret
adc
mov
add
add
add
add
dec
add
add
add
add
add
adc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pusha
add
add
add
bound
add
arpl
add
add
add
add
data16
add
add
push
add
add
add
imul
add
add
add
outs
add
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
jl
add
jge
add
jle
add
jg
add
add
add
outs
add
je
and
inc
add
je
jb
jns
push
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
scas
sbb
cwde
cmps
add
and
xchg
addr16
iret
add
add
add
add
add
add
add
dec
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
add
outs
add
add
je
jae
adc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
add
add
add
dec
add
add
jb
add
xor
xor
xor
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
cmp
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
cld
inc
repz
(bad)
mov
out
cli
(bad)
mov
in
cli
jmp
loop
call
(bad)
out
inc
mov
lea
cs
(bad)
jnp
jb
xor
jae
pop
popa
outs
jae
arpl
xor
xor
data16
data16
popa
outs
xor
cmp
jnp
outs
outs
je
bound
data16
imul
jae
je
and
ins
imul
or
pop
outs
gs
je
jb
dec
jae
je
imul
xor
xor
pop
jbe
gs
imul
xor
jb
pop
jae
xor
xor
xor
ss
jae
ins
jne
je
pop
ins
popa
outs
xor
pop
data16
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
pop
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
bound
cmp
pop
daa
gs
daa
cmp
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
gs
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
cmp
daa
bound
daa
bound
pop
daa
gs
daa
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
bound
daa
arpl
daa
bound
daa
cmp
daa
cmp
daa
bound
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
gs
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
cmp
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
cmp
daa
arpl
daa
popa
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
arpl
daa
gs
daa
popa
pop
daa
popa
xor
pop
daa
cmp
daa
bound
daa
bound
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
daa
gs
daa
bound
daa
cmp
pop
daa
bound
daa
bound
bound
bound
pop
daa
bound
popa
pop
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
popa
pop
daa
arpl
daa
bound
pop
daa
arpl
daa
gs
daa
bound
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
daa
bound
daa
popa
xor
pop
daa
cmp
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
arpl
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
pop
daa
bound
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
gs
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
pop
daa
gs
daa
cmp
pop
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
popa
pop
daa
cmp
daa
bound
daa
gs
daa
cmp
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
gs
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
bound
arpl
daa
bound
daa
gs
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
bound
daa
bound
gs
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
cmp
daa
popa
xor
pop
daa
bound
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
popa
xor
pop
daa
bound
bound
pop
daa
bound
gs
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
cmp
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
pop
daa
arpl
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
arpl
daa
gs
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
daa
bound
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
arpl
daa
bound
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
gs
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
arpl
daa
bound
daa
cmp
daa
bound
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
daa
popa
pop
daa
bound
popa
xor
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
arpl
daa
bound
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
bound
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
bound
pop
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
arpl
daa
bound
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
popa
xor
pop
daa
bound
arpl
daa
gs
daa
bound
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
arpl
daa
bound
pop
daa
bound
cmp
pop
daa
bound
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
cmp
daa
bound
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
bound
bound
daa
gs
daa
popa
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
gs
daa
popa
xor
pop
daa
cmp
pop
daa
bound
pop
daa
bound
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
arpl
daa
cmp
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
cmp
pop
daa
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
daa
bound
pop
daa
cmp
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
bound
bound
daa
bound
daa
cmp
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
gs
daa
arpl
daa
gs
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
gs
daa
bound
daa
bound
pop
daa
cmp
daa
popa
xor
pop
daa
bound
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
cmp
daa
bound
cmp
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
bound
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
daa
cmp
daa
gs
daa
bound
popa
pop
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
cmp
daa
gs
daa
arpl
daa
cmp
daa
popa
xor
pop
daa
arpl
daa
bound
bound
cmp
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
arpl
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
bound
pop
daa
cmp
daa
arpl
daa
cmp
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
arpl
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
popa
xor
pop
daa
bound
cmp
daa
bound
gs
daa
bound
daa
arpl
daa
arpl
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
gs
daa
cmp
daa
gs
daa
bound
daa
popa
pop
daa
gs
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
bound
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
bound
pop
daa
bound
pop
daa
bound
daa
bound
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
arpl
daa
cmp
pop
daa
bound
pop
daa
arpl
daa
gs
daa
bound
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
cmp
pop
daa
bound
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
pop
daa
gs
daa
bound
daa
bound
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
bound
daa
arpl
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
gs
daa
popa
pop
daa
bound
daa
popa
xor
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
bound
daa
cmp
daa
popa
xor
pop
daa
bound
daa
bound
pop
daa
cmp
daa
gs
daa
bound
daa
gs
daa
bound
daa
bound
gs
daa
bound
pop
daa
popa
pop
daa
popa
xor
pop
daa
bound
pop
daa
arpl
daa
arpl
daa
bound
pop
daa
cmp
pop
daa
bound
arpl
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
daa
bound
daa
popa
xor
pop
daa
bound
popa
xor
pop
daa
bound
pop
daa
arpl
daa
bound
pop
daa
popa
xor
pop
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
gs
daa
cmp
pop
daa
popa
xor
pop
daa
bound
pop
daa
bound
pop
daa
bound
pop
daa
popa
pop
daa
cmp
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
bound
daa
bound
daa
bound
daa
arpl
daa
bound
pop
daa
bound
pop
daa
gs
daa
bound
daa
cmp
pop
daa
bound
pop
daa
bound
pop
daa
cmp
daa
gs
daa
cmp
daa
gs
daa
popa
pop
daa
bound
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
cmp
pop
daa
popa
xor
pop
daa
cmp
daa
bound
bound
pop
daa
bound
daa
bound
cmp
daa
bound
daa
popa
xor
pop
daa
bound
pop
daa
popa
xor
pop
daa
cmp
daa
popa
xor
pop
daa
cmp
pop
daa
bound
daa
bound
daa
cmp
daa
bound
pop
daa
bound
cmp
pop
daa
gs
daa
cmp
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
daa
arpl
daa
gs
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
daa
bound
bound
pop
daa
bound
pop
daa
bound
daa
bound
daa
popa
xor
pop
daa
cmp
pop
daa
bound
popa
xor
pop
daa
popa
xor
pop
daa
cmp
daa
bound
pop
daa
bound
pop
daa
cmp
daa
cmp
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
cmp
daa
bound
daa
bound
pop
daa
gs
daa
bound
daa
cmp
daa
bound
daa
bound
daa
cmp
pop
daa
bound
daa
cmp
pop
daa
arpl
daa
bound
daa
arpl
daa
bound
daa
cmp
daa
cmp
daa
bound
daa
gs
daa
bound
pop
daa
gs
daa
bound
pop
daa
popa
xor
pop
daa
popa
xor
pop
daa
bound
gs
daa
cmp
daa
gs
daa
bound
pop
daa
cmp
daa
cmp
daa
bound
pop
daa
cmp
daa
gs
daa
bound
pop
daa
bound
daa
bound
daa
gs
daa
bound
daa
bound
pop
daa
bound
daa
cmp
daa
arpl
daa
popa
pop
daa
popa
xor
pop
daa
gs
daa
bound
pop
daa
cmp
daa
bound
daa
arpl
daa
gs
daa
popa
pop
daa
popa
xor
pop
daa
cmp
daa
bound
daa
bound
pop
daa
arpl
daa
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
gs
daa
bound
pop
daa
cmp
pop
daa
bound
daa
gs
daa
bound
daa
cmp
pop
daa
bound
daa
bound
bound
bound
pop
daa
bound
popa
pop
daa
gs
daa
popa
xor
pop
daa
popa
pop
daa
popa
pop
daa
arpl
daa
bound
pop
daa
arpl
daa
gs
daa
bound
popa
xor
pop
daa
bound
pop
daa
cmp
pop
daa
bound
pop
daa
cmp
pop
daa
bound
daa
cmp
daa
bound
daa
popa
xor
pop
daa
cmp
daa
popa
pop
daa
popa
xor
pop
daa
popa
xor
and
jo
jb
or
or
add
add
add
add
add
add
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
mov
add
pop
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
loope
add
pop
add
add
or
add
std
sub
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
cmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
popa
ins
imul
add
shr
std
std
inc
add
inc
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
or
add
add
add
mov
mov
movs
mov
mov
mov
movs
movs
mov
mov
mov
mov
in
mov
mov
mov
cdq
mov
mov
in
mov
add
rol
add
add
add
add
add
add
add
add
mov
add
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
sub
add
add
or
add
add
add
movs
movs
movs
movs
mov
mov
in
mov
mov
in
movs
in
mov
mov
mov
in
mov
les
in
mov
mov
mov
mov
lds
lds
lds
lds
add
add
mov
add
add
add
movs
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
sub
add
add
or
add
add
add
movs
mov
mov
mov
mov
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
lds
push
add
add
add
add
add
add
add
add
add
lds
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
or
add
cmp
add
in
in
mov
mov
mov
mov
les
mov
mov
mov
les
mov
mov
mov
mov
mov
add
add
add
add
add
mov
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
movs
les
mov
mov
mov
mov
movs
mov
mov
mov
mov
movs
mov
(bad)
in
mov
mov
lds
loope
rol
add
add
add
add
add
add
add
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
mov
cdq
mov
mov
in
mov
mov
mov
mov
movs
in
mov
movs
les
mov
movs
mov
les
add
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
movs
scas
in
in
mov
mov
mov
mov
mov
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
or
push
add
aas
add
add
in
scas
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
adc
add
add
movs
mov
mov
les
mov
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
lds
push
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
sub
add
add
or
adc
add
add
mov
in
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
or
adc
add
mov
mov
mov
movs
mov
mov
mov
les
mov
mov
scas
in
mov
mov
mov
mov
mov
in
push
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
inc
add
add
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
lds
rol
add
add
add
add
add
add
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
movs
mov
in
mov
mov
mov
mov
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
in
mov
movs
mov
mov
mov
mov
in
in
mov
mov
(bad)
les
in
mov
mov
movs
mov
les
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
or
pop
add
inc
add
add
mov
movs
movs
mov
mov
mov
movs
movs
mov
mov
mov
mov
in
mov
mov
mov
cdq
mov
mov
in
mov
push
add
rol
add
add
add
add
add
add
add
add
mov
add
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
sub
add
add
or
and
add
add
movs
movs
movs
movs
mov
mov
in
mov
mov
in
movs
in
mov
mov
mov
in
mov
les
in
mov
mov
mov
mov
lds
lds
lds
lds
add
add
mov
add
add
add
movs
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
sub
add
add
or
and
add
add
movs
mov
mov
mov
mov
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
lds
push
add
add
add
add
add
add
add
add
add
lds
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
or
add
cmp
add
in
in
mov
mov
mov
mov
les
mov
mov
mov
les
mov
mov
mov
mov
mov
add
add
add
add
add
mov
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
xor
add
movs
les
mov
mov
mov
mov
movs
mov
mov
mov
mov
movs
mov
(bad)
in
mov
mov
lds
loope
rol
add
add
add
add
add
add
add
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
movs
mov
cdq
mov
mov
in
mov
mov
mov
mov
movs
in
mov
movs
les
mov
movs
mov
les
add
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
movs
scas
in
in
mov
mov
mov
mov
mov
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
in
scas
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
xor
add
add
movs
mov
mov
les
mov
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
lds
push
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
sub
add
add
or
xor
add
add
mov
in
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
or
xor
add
mov
mov
mov
movs
mov
mov
mov
les
mov
mov
scas
in
mov
mov
mov
mov
mov
in
push
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
sub
add
add
or
aaa
add
inc
add
add
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
lds
rol
add
add
add
add
add
add
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
movs
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
movs
mov
in
mov
mov
mov
mov
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
in
mov
movs
mov
mov
mov
mov
in
in
mov
mov
(bad)
les
in
mov
mov
movs
mov
les
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
cdq
movs
movs
mov
mov
mov
movs
mov
mov
in
cdq
mov
mov
mov
scas
mov
cdq
movs
movs
mov
mov
mov
movs
mov
cdq
movs
movs
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
mov
add
add
add
lds
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
inc
add
add
mov
mov
mov
in
cdq
mov
mov
mov
scas
mov
cdq
movs
movs
mov
mov
mov
movs
mov
mov
movs
movs
mov
mov
mov
mov
add
add
add
add
add
add
add
rol
add
add
add
add
mov
add
add
add
lds
lds
mov
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
add
or
inc
add
aas
add
add
movs
mov
les
mov
mov
mov
mov
cdq
mov
mov
in
mov
movs
movs
mov
mov
in
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
add
or
inc
add
inc
add
add
les
movs
mov
mov
mov
in
mov
les
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
dec
add
cmp
scas
movs
mov
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
in
in
mov
mov
mov
cdq
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
les
mov
mov
mov
les
mov
mov
mov
mov
mov
les
mov
mov
lds
movs
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
in
mov
mov
mov
movs
mov
(bad)
in
mov
mov
movs
mov
cdq
mov
mov
in
mov
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
or
add
dec
add
add
in
les
in
movs
in
mov
movs
les
mov
movs
mov
les
mov
mov
mov
movs
scas
in
in
mov
mov
mov
mov
add
add
add
loope
rol
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
push
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
push
add
inc
add
add
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
push
add
inc
add
add
mov
movs
movs
les
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
sub
add
add
or
pop
add
add
add
in
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
lds
mov
push
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
or
add
add
mov
movs
in
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
add
add
movs
mov
mov
les
mov
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
lds
push
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
sub
add
add
or
add
inc
add
add
mov
in
mov
mov
mov
mov
scas
mov
mov
movs
mov
movs
mov
in
mov
movs
mov
mov
mov
movs
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
in
in
mov
mov
(bad)
les
in
mov
mov
movs
mov
les
movs
movs
mov
mov
mov
mov
movs
mov
mov
lds
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
sub
add
add
or
add
add
mov
in
in
mov
cdq
movs
movs
mov
mov
mov
movs
mov
mov
movs
movs
mov
mov
mov
movs
movs
mov
movs
add
add
add
add
mov
add
add
add
lds
lds
mov
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
mov
add
lds
lds
push
add
add
add
add
add
or
add
inc
add
add
scas
mov
in
mov
mov
mov
cdq
mov
mov
in
mov
movs
movs
mov
mov
in
mov
mov
in
movs
in
lds
rol
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
movs
add
add
add
add
add
add
add
or
add
inc
add
add
mov
in
mov
les
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
movs
add
add
add
add
sub
add
add
or
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
in
in
mov
mov
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
les
mov
mov
mov
les
mov
mov
mov
mov
mov
les
mov
mov
lds
movs
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
in
mov
mov
mov
movs
mov
(bad)
in
mov
mov
movs
mov
cdq
mov
mov
in
mov
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
or
add
dec
add
add
in
les
in
movs
in
mov
movs
les
mov
movs
mov
les
mov
mov
mov
movs
scas
in
in
mov
mov
mov
mov
add
add
add
loope
rol
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
push
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
jbe
add
add
movs
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
js
add
add
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
sub
add
add
or
jnp
add
add
add
in
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
lds
mov
push
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
or
add
add
mov
movs
in
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
add
add
movs
mov
mov
les
mov
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
lds
push
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
sub
add
add
or
add
inc
add
add
mov
in
mov
mov
mov
mov
scas
mov
mov
movs
mov
movs
mov
in
mov
movs
mov
mov
mov
movs
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
in
in
mov
mov
(bad)
les
in
mov
mov
movs
mov
les
movs
movs
mov
mov
mov
mov
movs
mov
mov
lds
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
sub
add
add
or
add
add
mov
in
in
mov
cdq
movs
movs
mov
mov
mov
movs
mov
mov
movs
movs
mov
mov
mov
movs
movs
mov
movs
add
add
add
add
mov
add
add
add
lds
lds
mov
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
mov
add
lds
lds
push
add
add
add
add
add
or
xchg
add
add
movs
mov
les
mov
mov
mov
mov
cdq
mov
mov
in
mov
movs
movs
mov
mov
in
mov
mov
in
movs
in
lds
rol
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
movs
add
add
add
add
add
add
add
or
mov
add
add
movs
mov
mov
mov
in
mov
les
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
movs
add
add
add
add
sub
add
add
or
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
in
in
mov
mov
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
les
mov
mov
mov
les
mov
mov
mov
mov
mov
les
mov
mov
lds
movs
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
in
mov
mov
mov
movs
mov
(bad)
in
mov
mov
movs
mov
cdq
mov
mov
in
mov
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
or
add
dec
add
add
in
les
in
movs
in
mov
movs
les
mov
movs
mov
les
mov
mov
mov
movs
scas
in
in
mov
mov
mov
mov
add
add
add
loope
rol
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
push
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
call
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
sub
add
add
or
pushf
add
add
add
in
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
lds
mov
push
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
or
add
add
mov
movs
in
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
add
inc
add
add
in
(bad)
les
movs
in
mov
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
lds
push
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
sub
add
add
or
add
inc
add
add
mov
in
mov
mov
mov
mov
scas
mov
mov
movs
mov
movs
mov
in
mov
movs
mov
mov
mov
movs
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
dec
add
add
in
in
mov
mov
(bad)
les
in
mov
mov
movs
mov
les
movs
movs
mov
mov
mov
mov
movs
mov
mov
lds
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
sub
add
add
or
add
add
mov
in
in
mov
cdq
movs
movs
mov
mov
mov
movs
mov
mov
movs
movs
mov
mov
mov
movs
movs
mov
movs
add
add
add
add
mov
add
add
add
lds
lds
mov
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
mov
add
lds
lds
push
add
add
add
add
add
or
add
add
scas
mov
in
mov
mov
mov
cdq
mov
mov
in
mov
movs
movs
mov
mov
in
mov
mov
in
movs
in
lds
rol
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
movs
add
add
add
add
add
add
add
or
stos
add
inc
add
add
mov
in
mov
les
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
movs
add
add
add
add
sub
add
add
or
lods
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
in
in
mov
mov
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
les
mov
mov
mov
les
mov
mov
mov
mov
mov
les
mov
mov
lds
movs
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
in
mov
mov
mov
movs
mov
(bad)
in
mov
mov
movs
mov
cdq
mov
mov
in
mov
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
or
add
dec
add
add
in
les
in
movs
in
mov
movs
les
mov
movs
mov
les
mov
mov
mov
movs
scas
in
in
mov
mov
mov
mov
add
add
add
loope
rol
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
push
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
mov
add
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
sub
add
add
or
mov
add
movs
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
lds
mov
push
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
or
add
add
mov
movs
in
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
mov
mov
mov
mov
mov
in
mov
les
les
mov
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
add
inc
add
add
in
(bad)
les
movs
in
mov
mov
scas
in
mov
mov
mov
mov
mov
in
movs
mov
mov
movs
movs
les
in
in
mov
lds
push
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
sub
add
add
or
add
inc
add
add
mov
in
mov
mov
mov
mov
scas
mov
mov
movs
mov
movs
mov
in
mov
movs
mov
mov
mov
movs
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
or
add
dec
add
add
in
in
mov
mov
(bad)
les
in
mov
mov
movs
mov
les
movs
movs
mov
mov
mov
mov
movs
mov
mov
lds
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
sub
add
add
or
add
add
mov
in
in
mov
cdq
movs
movs
mov
mov
mov
movs
mov
mov
movs
movs
mov
mov
mov
movs
movs
mov
movs
add
add
add
add
mov
add
add
add
lds
lds
mov
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
mov
add
lds
lds
push
add
add
add
add
add
or
add
add
scas
mov
in
mov
mov
mov
cdq
mov
mov
in
mov
movs
movs
mov
mov
in
mov
mov
in
movs
in
lds
rol
add
add
add
add
add
add
add
add
add
add
lds
mov
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
movs
add
add
add
add
add
add
add
or
add
add
mov
in
mov
les
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
add
rol
add
add
add
add
add
add
add
add
add
lds
lds
push
add
push
add
add
add
add
add
add
add
add
loope
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
movs
add
add
add
add
sub
add
add
or
iret
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
movs
mov
in
in
mov
mov
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
rol
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
or
rol
add
add
add
les
mov
mov
mov
les
mov
mov
mov
mov
mov
les
mov
mov
lds
movs
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
in
mov
mov
mov
movs
mov
(bad)
in
mov
mov
movs
mov
cdq
mov
mov
in
mov
add
add
add
add
lds
push
add
add
rol
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lds
push
add
add
add
add
add
or
(bad)
add
dec
add
add
in
les
in
movs
in
mov
movs
les
mov
movs
mov
les
mov
mov
mov
movs
scas
in
in
mov
mov
mov
mov
add
add
add
loope
rol
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
mov
in
mov
cdq
mov
in
in
mov
mov
mov
mov
mov
mov
mov
mov
movs
movs
in
movs
movs
mov
in
mov
cdq
mov
push
add
add
lds
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
mov
scas
in
mov
mov
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
mov
mov
movs
movs
les
in
in
mov
mov
cdq
mov
mov
mov
movs
mov
mov
in
mov
mov
movs
movs
in
add
add
rol
add
add
add
add
add
add
add
add
add
add
lds
lds
loope
adc
rol
add
add
add
add
add
push
add
lds
rol
add
add
add
add
add
rol
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
mov
movs
movs
les
mov
mov
mov
mov
mov
in
mov
les
les
mov
mov
mov
movs
in
mov
lds
lds
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
dec
dec
add
add
inc
inc
add
add
cdq
movs
mov
mov
mov
mov
movs
mov
mov
movs
in
mov
call
push
dec
push
dec
imul
imul
gs
jb
add
push
or
add
add
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
mov
mov
mov
les
mov
mov
add
push
dec
imul
imul
gs
jb
add
add
pop
pop
or
add
add
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
add
add
mov
mov
in
mov
mov
cdq
mov
call
push
dec
push
dec
imul
imul
gs
jb
add
add
push
pop
or
lar
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
push
add
mov
movs
mov
movs
in
mov
mov
mov
movs
mov
movs
mov
add
push
dec
imul
imul
gs
jb
add
add
out
out
add
add
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
add
add
mov
mov
mov
movs
mov
movs
mov
sbb
push
dec
push
dec
imul
imul
gs
jb
add
js
xlat
or
add
add
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
inc
add
pop
add
add
add
add
add
add
push
test
add
add
sub
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
int3
ds
add
and
add
add
in
pusha
jp
pushf
ds
add
add
ds
add
inc
add
adc
test
inc
add
inc
add
test
hlt
ds
add
inc
add
test
add
inc
add
inc
add
mov
or
inc
add
jmp
mov
mov
jmp
mov
mov
jmp
add
add
sub
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
jge
add
inc
add
add
add
and
add
add
lods
ins
jp
cmp
inc
add
aas
inc
add
inc
add
mov
dec
mov
fcom
inc
add
xchg
inc
add
add
xchg
je
inc
add
inc
add
add
xchg
xchg
xchg
inc
add
inc
add
add
add
inc
add
push
mov
mov
inc
add
loope
mov
mov
inc
add
loope
add
add
jge
add
add
add
(bad)
(bad)
inc
add
add
inc
add
inc
add
add
add
inc
add
add
add
add
add
jp
and
add
add
add
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
add
add
add
inc
inc
add
add
add
adc
pop
inc
inc
add
add
adc
dec
pop
outs
adc
enter
and
inc
add
inc
add
add
xor
add
inc
fwait
inc
add
(bad)
(bad)
inc
add
add
add
add
add
fwait
inc
add
(bad)
(bad)
inc
add
add
inc
inc
add
adc
movs
adc
stos
adc
mov
cmp
mov
push
ret
push
add
add
aam
dec
lods
je
push
sar
add
add
add
sub
add
inc
adc
dec
add
add
add
mov
pop
cmps
dec
add
and
add
add
add
add
cmp
add
add
inc
add
add
lods
or
dec
mov
inc
add
add
add
add
add
add
pushf
int
add
add
add
xor
inc
ss
push
cs
dec
dec
add
add
add
add
add
or
add
add
add
add
add
add
push
add
(bad)
dec
add
add
add
add
add
add
add
add
dec
inc
add
adc
js
add
xchg
add
add
add
add
mov
mov
mov
mov
cdq
mov
in
mov
movs
mov
mov
mov
mov
mov
cdq
mov
in
mov
movs
in
mov
mov
in
scas
mov
mov
add
mov
mov
mov
mov
cdq
mov
in
mov
add
jge
add
add
add
pop
sbb
add
mov
inc
add
add
add
add
add
and
add
add
mov
and
add
add
mov
mov
add
and
mov
in
in
mov
add
add
add
add
add
add
add
add
add
jle
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
inc
inc
add
add
add
lahf
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
xor
add
add
add
inc
add
inc
add
add
add
mov
inc
add
lahf
inc
add
dec
add
add
and
inc
add
add
add
add
add
inc
add
sub
and
add
dec
add
add
add
inc
add
add
add
pop
inc
sub
fadd
add
inc
add
add
add
lods
add
add
add
inc
sub
cmp
add
inc
add
add
add
inc
lahf
inc
add
(bad)
(bad)
inc
add
add
add
add
dec
inc
add
pop
push
lahf
inc
add
(bad)
(bad)
inc
sbb
inc
add
add
add
int3
dec
inc
add
sub
mov
add
add
dec
add
add
and
inc
add
add
add
add
sub
enter
add
add
inc
add
dec
add
add
inc
add
add
add
sub
pusha
pushf
inc
add
add
add
add
add
inc
inc
add
adc
movs
adc
stos
adc
pop
inc
inc
add
adc
movs
adc
stos
adc
add
mov
inc
add
adc
stos
adc
test
inc
add
adc
movs
adc
stos
adc
rol
add
adc
movs
adc
stos
adc
clc
inc
inc
add
adc
movs
adc
stos
adc
and
add
adc
movs
adc
stos
adc
adc
add
cmp
add
rol
add
fadd
add
fadd
add
loopne
add
std
add
add
add
add
cmc
imul
adc
jns
cmps
push
sub
imul
adc
jns
cmps
bound
ins
sbb
jmp
test
cmps
iret
adc
out
dec
cdq
je
stos
ret
sbb
jmp
jno
xor
xchg
cmps
lods
mov
cs
cmp
add
add
add
add
dec
add
add
or
inc
test
mov
stos
scas
dec
xchg
cwde
aas
out
mov
sbb
rol
add
add
push
and
add
add
add
add
adc
add
adc
add
adc
add
adc
add
sbb
add
loope
add
push
adc
add
add
push
adc
add
add
add
test
push
add
lods
push
add
stos
push
add
stos
push
add
scas
push
add
scas
push
add
mov
add
mov
add
mov
push
add
mov
add
mov
add
mov
push
add
mov
push
add
mov
sbb
add
add
sbb
add
add
imul
add
imul
add
add
add
outs
sbb
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
jg
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
rcl
add
push
add
ret
add
add
add
jo
fs
ins
add
push
dec
imul
imul
gs
jb
push
imul
gs
jb
dec
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
neg
adc
das
dec
sti
xchg
stc
repnz
adc
das
dec
sti
ret
or
adc
adc
jne
mov
mov
movs
mov
stos
aam
push
sub
mov
dec
adc
stc
xor
add
add
out
add
inc
test
iret
pop
add
sub
test
addr16
xchg
cmp
cmp
inc
mov
xor
add
add
pusha
or
xor
cmp
inc
add
inc
add
add
add
add
add
add
sub
add
add
sub
add
cmp
sub
add
add
add
add
xor
inc
add
cmp
inc
add
inc
outs
ins
fs
xor
outs
arpl
dec
push
inc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
outs
ins
ins
outs
outs
inc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
gs
push
jl
rcl
mov
add
lock
sub
test
adc
sub
sub
rcl
mov
add
lock
sub
fild
dec
mov
(bad)
inc
out
das
popa
and
push
dec
lods
out
mov
repz
cmp
add
add
add
add
dec
add
add
cmp
push
movs
mov
push
and
stc
cld
les
dec
dec
dec
mov
repnz
popw
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
jb
test
(bad)
jmp
std
(bad)
jmp
(bad)
jmp
std
(bad)
inc
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
(bad)
xor
or
add
adc
add
or
add
sub
xor
or
add
adc
add
or
add
adc
xor
or
add
adc
add
or
add
push
in
xor
or
add
inc
outs
popa
bound
add
je
jb
arpl
outs
add
ins
je
push
gs
arpl
gs
jb
je
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
je
imul
je
imul
add
cmp
add
rol
add
clc
add
add
add
add
add
add
add
movs
add
add
add
add
add
in
add
add
add
add
add
add
aas
and
rcl
mov
add
lock
sub
aas
and
rcl
mov
add
lock
sub
aas
and
rcl
mov
add
lock
sub
mov
lahf
dec
mov
pushf
aas
push
mov
mov
xor
inc
popf
pop
bound
add
add
inc
add
add
out
add
add
and
dec
lahf
jge
pop
(bad)
ret
add
(bad)
sbb
cmp
fsubr
jg
add
add
out
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
retf
add
push
add
add
add
add
test
(bad)
jmp
std
(bad)
jmp
std
(bad)
dec
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
or
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
(bad)
xor
or
add
or
(bad)
inc
add
add
add
add
in
xor
or
add
inc
outs
popa
bound
add
jb
gs
je
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
bound
add
ins
bound
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
test
adc
sub
sub
test
adc
sub
sub
test
adc
sub
sub
das
cs
popf
retf
jl
in
dec
stc
icebp
adc
fcmovne
xor
add
inc
add
add
out
add
add
rcl
test
stos
cmp
sub
adc
lods
call
ss
out
push
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
or
add
add
add
add
std
(bad)
jmp
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
sbb
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
jne
inc
popa
jb
push
je
je
jae
popa
jb
xchg
or
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
cmp
adc
sub
sub
cmp
adc
sub
sub
cmp
adc
sub
sub
push
pop
cmps
xor
(bad)
daa
xchg
mov
(bad)
cld
dec
fwait
cdq
dec
xor
add
add
add
inc
test
lsl
add
mov
mov
pop
sub
mov
pop
cwde
outs
(bad)
mov
cdq
adc
dec
mov
add
call
push
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
stos
or
add
jmp
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
jb
jae
inc
popa
jb
push
jb
addr16
jae
inc
popa
jb
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
test
adc
sub
sub
test
adc
sub
sub
rcl
mov
add
lock
sub
addr16
popf
test
xor
lods
add
out
enter
mov
lea
add
add
add
inc
cmp
add
add
pop
inc
test
mov
adc
cmp
dec
cmp
add
add
popw
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jnp
add
jnp
add
add
add
add
add
add
add
add
std
(bad)
jmp
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
push
imul
gs
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
sar
mov
add
lock
sub
sar
mov
add
lock
sub
sar
mov
add
lock
sub
clc
or
leave
jnp
dec
test
leave
xor
cmps
jb
mov
inc
mov
inc
cmp
add
add
icebp
ds
adc
outs
mov
xchg
out
loop
repz
dec
mov
enter
push
ret
add
popw
push
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
imul
add
add
add
add
add
add
add
cmps
std
(bad)
jmp
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
add
push
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
push
imul
je
imul
add
dec
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
jg
sub
test
adc
sub
sub
jg
sub
test
adc
sub
sub
jg
sub
test
adc
sub
sub
test
pop
dec
call
cmc
or
push
movs
std
inc
mov
cli
out
inc
add
clc
out
add
inc
test
iret
pop
add
add
clc
out
jl
inc
xchg
rcpps
shl
dec
sub
test
jo
add
add
pusha
or
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
gs
imul
addr16
imul
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
aad
add
call
add
add
lock
test
adc
sub
sub
(bad)
lock
test
adc
sub
sub
(bad)
lock
test
adc
sub
sub
hlt
xor
dec
xchg
in
test
into
cmp
cli
xchg
pop
adc
and
fnstsw
add
add
add
add
dec
add
add
aas
imul
mov
ret
lods
cs
dec
stos
xchg
jno
das
and
add
popw
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
adc
add
jmp
std
(bad)
jmp
(bad)
jmp
std
(bad)
inc
add
add
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
fcom
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
push
add
add
add
popa
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
gs
push
ins
imul
add
cmp
add
rol
add
fadd
add
or
add
and
add
add
add
add
add
jp
add
xchg
add
add
add
add
popf
fst
add
lock
sub
popf
fst
add
lock
sub
fst
add
lock
sub
add
and
dec
sbb
stc
cdq
outs
dec
dec
mov
ja
xor
add
add
add
add
add
retf
push
lds
push
jbe
xchg
push
xor
popa
inc
inc
cwde
dec
and
ja
add
add
push
xor
add
add
add
add
add
add
add
add
inc
adc
add
add
add
add
add
test
(bad)
jmp
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
sti
std
(bad)
inc
add
add
add
add
add
add
(bad)
xor
add
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
jae
outs
ins
inc
je
outs
arpl
dec
push
inc
outs
ins
arpl
imul
gs
outs
ins
bound
dec
ins
popa
addr16
outs
ins
bound
or
add
add
add
sub
add
add
add
jg
add
(bad)
(bad)
inc
add
add
add
mov
add
push
popa
inc
add
and
add
add
adc
jp
inc
popa
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
cmp
inc
add
inc
add
inc
add
ds
add
inc
add
add
adc
xor
add
xchg
jg
add
add
add
inc
add
jg
add
add
add
adc
cmp
add
xchg
jg
add
add
add
sub
xor
inc
add
add
add
adc
cmp
add
cmp
inc
add
add
add
push
sub
dec
add
add
add
adc
inc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
adc
inc
add
add
inc
add
add
mov
inc
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
push
inc
sub
pushf
add
add
add
ltr
add
movs
add
add
add
sub
mov
inc
add
add
add
ltr
add
add
fsubr
add
inc
sub
mov
add
add
adc
add
add
add
add
inc
add
inc
sub
aam
inc
add
add
add
adc
add
add
add
add
inc
sub
fadd
add
inc
add
add
add
in
inc
add
add
add
sub
hlt
add
add
add
adc
add
add
add
add
add
inc
sub
add
add
inc
add
add
add
add
add
inc
sub
or
add
inc
add
add
add
add
sbb
inc
add
inc
sub
and
add
inc
add
add
add
adc
add
js
inc
add
inc
sub
sub
inc
add
add
add
adc
jl
add
adc
add
aam
inc
add
inc
sub
cmp
add
inc
add
add
add
xor
add
inc
sub
inc
add
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
sub
pusha
add
inc
add
add
add
and
add
inc
sub
push
add
add
adc
mov
add
je
inc
add
add
add
add
inc
sub
test
add
inc
add
add
jg
add
add
aam
inc
add
inc
sub
mov
add
inc
add
add
inc
add
add
add
jno
add
inc
sub
xchg
add
inc
add
add
add
pushf
jno
add
inc
sub
lods
add
inc
add
add
inc
add
add
adc
inc
add
inc
sub
mov
inc
add
add
inc
add
add
add
mov
add
sub
int3
add
inc
add
add
inc
add
add
add
jb
add
inc
sub
fadd
add
inc
add
add
add
add
add
jae
add
add
inc
add
add
inc
add
add
inc
jae
add
add
add
add
dec
add
add
add
add
inc
add
sub
xor
inc
add
add
add
add
mov
add
mov
add
cwde
je
add
add
add
add
dec
add
add
add
add
sub
aam
inc
add
add
add
add
mov
add
add
add
jne
add
add
add
add
dec
add
add
add
inc
add
add
add
add
add
jbe
add
sub
adc
inc
add
add
add
add
add
add
inc
ja
add
add
add
add
adc
enter
push
add
add
add
add
sub
add
add
add
dec
add
add
add
inc
add
add
mov
inc
add
sub
ins
add
add
add
dec
add
add
add
inc
add
add
add
js
add
sub
mov
add
inc
add
add
add
add
add
and
inc
add
sub
mov
add
add
dec
add
add
add
inc
add
add
add
sub
enter
adc
add
inc
add
fadd
add
and
inc
add
add
add
jnp
add
sub
fadd
add
sbb
add
add
add
inc
add
pusha
inc
add
adc
stos
adc
mov
add
pusha
inc
add
adc
stos
adc
mov
inc
add
pusha
inc
add
adc
stos
adc
fsub
add
pusha
inc
add
adc
stos
adc
add
add
pusha
inc
add
adc
stos
adc
sub
add
pusha
inc
add
adc
stos
adc
push
bound
int3
pusha
inc
add
adc
stos
adc
js
inc
add
pusha
inc
add
adc
stos
adc
mov
pusha
inc
add
adc
stos
adc
enter
int3
pusha
inc
add
adc
stos
adc
lock
int3
pusha
inc
add
adc
stos
adc
sbb
add
pusha
inc
add
adc
stos
adc
inc
arpl
int3
pusha
inc
add
adc
stos
adc
push
pusha
inc
add
adc
stos
adc
nop
arpl
int3
pusha
inc
add
adc
stos
adc
mov
pusha
inc
add
adc
stos
adc
loopne
inc
add
pusha
inc
add
adc
stos
adc
or
int3
pusha
inc
add
adc
stos
adc
xor
int3
pusha
inc
add
adc
stos
adc
pop
fs
add
pusha
inc
add
adc
stos
adc
and
pusha
inc
add
adc
stos
adc
adc
inc
add
pusha
inc
add
adc
stos
adc
shl
int3
pusha
inc
add
adc
stos
adc
clc
fs
add
pusha
inc
add
adc
stos
adc
and
add
pusha
inc
add
adc
stos
adc
dec
gs
add
pusha
inc
add
adc
stos
adc
jo
inc
add
pusha
inc
add
adc
stos
adc
cwde
gs
add
pusha
inc
add
adc
stos
adc
shl
int3
pusha
inc
add
adc
stos
adc
call
pusha
inc
add
adc
stos
adc
adc
add
pusha
inc
add
adc
stos
adc
cmp
add
pusha
inc
add
adc
stos
adc
pusha
inc
add
pusha
inc
add
adc
stos
adc
mov
add
pusha
inc
add
adc
stos
adc
mov
inc
add
pusha
inc
add
adc
stos
adc
fsub
add
pusha
inc
add
adc
stos
adc
add
add
pusha
inc
add
adc
stos
adc
sub
add
pusha
inc
add
adc
stos
adc
push
addr16
add
pusha
inc
add
adc
stos
adc
js
inc
add
pusha
inc
add
adc
stos
adc
mov
pusha
inc
add
adc
stos
adc
enter
int3
pusha
inc
add
adc
stos
adc
lock
add
pusha
inc
add
adc
stos
adc
mov
cmp
mov
push
ret
add
add
mov
inc
add
inc
add
(bad)
(bad)
inc
add
add
push
and
xchg
hlt
mov
sub
add
add
add
add
add
inc
add
add
add
or
add
add
add
add
add
pusha
inc
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
inc
add
add
add
jle
add
add
add
add
(bad)
inc
add
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
add
add
jle
add
add
add
add
add
inc
add
add
add
add
test
inc
add
(bad)
(bad)
inc
fwait
inc
add
jg
add
add
add
inc
add
adc
add
add
push
(bad)
(bad)
jmp
add
sbb
add
add
add
add
add
add
(bad)
(bad)
call
add
jg
add
add
add
dec
inc
pop
(bad)
inc
add
add
add
add
add
add
add
add
add
add
mov
les
mov
in
mov
mov
movs
in
mov
add
mov
movs
mov
mov
mov
mov
mov
scas
mov
add
mov
mov
movs
mov
cdq
les
mov
movs
mov
add
mov
mov
add
mov
mov
mov
add
dec
inc
outs
jb
xor
add
add
mov
mov
mov
mov
cdq
mov
in
mov
xchg
aaa
retf
sbb
inc
test
sub
dec
adc
sahf
lods
fld
mov
aam
dec
lods
je
push
sar
inc
mov
pop
lds
pop
dec
lods
xor
or
stos
add
xchg
inc
imul
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
or
xor
or
stos
add
xchg
lods
jg
add
add
add
add
add
add
add
inc
add
movs
inc
add
loope
push
inc
imul
add
xor
or
stos
add
xchg
dec
jo
imul
je
outs
outs
xor
dec
jo
imul
lods
xor
or
stos
add
xchg
inc
imul
imul
imul
dec
lods
xor
or
stos
add
xchg
push
imul
cli
dec
lods
xor
or
stos
add
xchg
inc
popa
je
xor
add
inc
popa
je
xor
add
adc
xor
or
stos
add
xchg
dec
imul
dec
imul
and
xor
or
stos
add
xchg
push
push
arpl
ins
ins
xor
add
add
je
add
add
je
add
add
dec
lods
xor
or
stos
add
xchg
inc
outs
ins
ins
popa
outs
xor
add
add
ins
ins
popa
outs
xor
add
add
ins
ins
popa
outs
xor
add
add
ins
ins
popa
outs
fs
add
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
inc
outs
ins
ins
popa
outs
fs
push
dec
lods
xor
or
stos
add
xchg
inc
jb
jbe
xor
add
ins
bound
add
inc
outs
ins
bound
add
loop
lods
xor
or
stos
add
xchg
push
gs
xor
add
push
gs
xor
add
sbb
xor
or
stos
add
xchg
dec
push
arpl
ins
ins
xor
add
add
ins
ins
popa
outs
fs
add
in
mov
mov
cdq
in
cdq
movs
cdq
les
mov
mov
mov
mov
scas
add
mov
mov
movs
movs
mov
in
mov
mov
in
add
enter
sahf
jg
inc
test
mov
stos
scas
dec
xchg
mov
mov
mov
mov
movs
mov
movs
mov
or
cmp
inc
fwait
mov
dec
lods
inc
cmp
outs
outs
ja
pop
jae
jae
gs
xor
pop
ja
jo
outs
arpl
push
dec
push
dec
imul
add
add
add
add
add
add
add
add
add
movs
inc
add
loope
push
movs
mov
mov
movs
(bad)
in
mov
movs
movs
movs
movs
mov
add
mov
movs
cdq
in
mov
mov
in
mov
mov
cdq
mov
add
les
les
movs
mov
mov
add
cdq
mov
mov
mov
mov
movs
mov
mov
movs
in
mov
add
mov
mov
mov
mov
movs
mov
scas
movs
add
add
xor
or
stos
add
xchg
dec
dec
inc
xor
add
add
mov
mov
mov
les
mov
mov
mov
movs
mov
movs
in
mov
mov
mov
movs
mov
movs
mov
dec
lods
xor
or
stos
add
xchg
push
imul
add
add
push
imul
gs
jb
add
outs
outs
ja
dec
gs
jb
add
call
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
cld
add
test
add
add
or
add
imul
gs
xor
add
add
adc
add
inc
gs
outs
fs
gs
imul
add
xor
add
add
add
inc
add
or
je
jmp
push
mov
call
jmp
add
add
or
cld
add
movs
inc
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
in
mov
add
add
add
add
add
add
in
mov
mov
mov
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
gs
xor
add
add
add
ins
ins
push
imul
outs
arpl
xor
inc
add
add
adc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
add
sbb
add
xor
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
or
add
adc
ins
sbb
inc
ss
dec
dec
add
add
push
imul
gs
jb
add
add
mov
add
add
add
add
bound
popa
add
js
ins
add
popa
add
ins
add
jno
je
bound
jne
imul
add
popa
add
add
jo
outs
add
imul
add
jns
ja
jae
push
dec
add
jne
jb
popa
add
add
add
add
popa
add
js
ins
add
popa
add
ins
add
jno
je
bound
jne
imul
add
popa
add
add
jo
outs
add
imul
add
jns
ja
jae
push
add
test
add
fadd
sbb
cmps
add
adc
cmps
add
and
and
and
and
and
and
add
fadd
adc
sbb
sbb
and
sbb
and
add
and
add
sbb
sbb
fadd
movs
add
and
and
and
and
and
and
and
and
and
and
and
and
add
and
and
and
and
and
add
and
and
and
add
and
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
movs
add
movs
add
add
and
add
sbb
sbb
sbb
sbb
popa
add
sbb
and
popa
add
and
sbb
popa
add
sbb
and
add
and
add
and
and
and
and
and
and
cmp
sbb
sbb
fadd
mov
add
add
sbb
and
sbb
sbb
sbb
sbb
popa
add
and
and
and
add
add
add
add
and
and
and
and
and
and
add
and
add
test
adc
sbb
sbb
sbb
sbb
sbb
sbb
cmps
add
cmp
sbb
sbb
and
sbb
sbb
sbb
sbb
fadd
mov
add
add
and
add
sbb
and
sbb
sbb
sbb
sbb
fadd
mov
add
add
and
and
and
and
and
and
and
add
add
mov
add
add
add
and
add
and
and
and
and
and
and
add
and
add
movs
add
sbb
sbb
sbb
sbb
sbb
sbb
cmps
add
fadd
mov
and
and
and
and
and
add
add
and
and
and
and
and
and
movs
add
and
and
and
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
fadd
mov
and
and
and
and
and
and
and
add
adc
movs
add
and
and
and
cmps
add
and
cmp
sbb
and
sbb
sbb
sbb
sbb
fadd
mov
add
and
sbb
sbb
sbb
sbb
popa
add
fadd
mov
add
and
and
and
and
and
and
add
and
and
add
and
test
test
cmps
add
and
add
and
and
and
and
and
and
and
and
and
add
adc
movs
add
and
and
and
cmps
add
adc
test
sbb
and
sbb
sbb
sbb
sbb
fadd
mov
add
and
sbb
and
sbb
sbb
sbb
sbb
popa
add
popa
add
and
movs
add
add
add
and
sbb
and
sbb
sbb
sbb
sbb
popa
add
sbb
and
test
mov
add
add
test
mov
and
and
and
and
and
movs
add
and
and
add
test
popa
add
and
and
and
and
and
and
and
adc
sbb
test
test
cmps
add
and
add
and
add
sbb
sbb
and
and
and
add
popa
add
test
cmps
add
fadd
adc
sbb
cmps
add
sbb
adc
sbb
and
sbb
sbb
sbb
sbb
fadd
mov
add
add
add
and
and
add
add
sbb
popa
add
fadd
mov
add
add
and
and
and
and
and
movs
add
sbb
fadd
mov
and
add
and
and
and
and
and
and
adc
sbb
add
and
and
add
and
add
and
add
and
add
and
add
and
add
and
and
test
test
cmps
add
and
add
and
add
and
and
and
and
and
add
cmps
add
and
and
and
sbb
test
sbb
and
add
sbb
sbb
and
and
and
add
and
and
and
and
and
and
and
movs
add
sbb
fadd
mov
add
add
and
and
and
and
and
movs
add
and
and
and
and
and
test
test
cmps
add
and
add
and
and
and
and
and
and
and
add
cmp
movs
add
and
sbb
mov
add
sbb
cmps
add
mov
and
and
and
and
add
and
add
and
and
and
and
and
movs
add
sbb
popa
add
fadd
mov
add
add
sbb
sbb
and
and
and
movs
add
and
and
add
and
add
sbb
sbb
and
sbb
sbb
sbb
sbb
sbb
test
test
and
sbb
and
and
and
and
and
and
test
test
cmps
add
and
add
add
and
and
and
and
and
and
movs
add
add
and
and
and
and
and
and
and
movs
add
and
and
add
add
and
sbb
sbb
and
add
add
sbb
popa
add
fadd
mov
and
and
and
and
and
and
and
movs
add
and
fadd
mov
add
and
and
and
and
and
and
movs
add
and
and
sbb
add
and
and
adc
adc
fadd
test
test
and
sbb
and
adc
test
test
and
sbb
fadd
mov
and
and
and
and
and
and
and
add
mov
add
add
and
cmps
add
and
movs
add
and
and
and
and
and
movs
add
and
and
add
add
and
add
and
and
sbb
sbb
sbb
sbb
fadd
popa
add
movs
add
and
and
and
cmps
add
sbb
and
and
and
and
add
and
add
and
and
sbb
sbb
sbb
sbb
popa
add
popa
add
and
and
add
add
add
add
sbb
sbb
sbb
sbb
fadd
mov
and
sbb
and
add
and
add
add
add
and
and
and
and
and
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
movs
add
sbb
and
and
and
and
and
and
add
add
add
and
and
and
and
and
and
fadd
mov
add
add
and
and
sbb
sbb
sbb
sbb
popa
add
popa
add
and
movs
add
sbb
movs
add
add
and
and
and
and
and
and
and
and
add
add
and
and
and
and
and
and
and
and
sbb
fadd
mov
add
and
add
and
sbb
sbb
sbb
sbb
fadd
mov
add
popa
add
sbb
add
and
fadd
mov
and
add
and
and
and
and
and
add
adc
movs
add
and
and
and
cmps
add
movs
add
add
and
sbb
sbb
sbb
sbb
popa
add
and
and
add
add
add
and
and
and
sbb
sbb
sbb
sbb
popa
add
popa
add
popa
add
sbb
adc
fadd
mov
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
and
sbb
fadd
mov
add
and
and
and
and
and
and
movs
add
and
and
movs
add
sbb
sbb
movs
add
add
and
and
and
and
sbb
sbb
sbb
sbb
popa
add
sbb
and
adc
sbb
and
adc
fadd
mov
add
and
and
and
sbb
sbb
sbb
sbb
popa
add
fadd
mov
add
and
sbb
sbb
sbb
sbb
popa
add
adc
sbb
test
test
and
and
sbb
sbb
adc
fadd
adc
sbb
add
and
fadd
mov
and
and
and
and
and
and
and
add
mov
add
add
and
cmps
add
adc
fadd
sbb
sbb
sbb
sbb
sbb
sbb
popa
add
and
and
add
add
add
and
and
and
sbb
sbb
sbb
sbb
popa
add
popa
add
and
and
popa
add
and
sbb
fadd
mov
add
and
sbb
sbb
sbb
sbb
sbb
sbb
popa
add
and
movs
add
and
and
and
and
add
add
add
and
add
and
and
and
and
and
and
and
add
add
movs
add
and
and
and
sbb
and
sbb
sbb
sbb
sbb
sbb
sbb
fadd
mov
and
add
sbb
sbb
sbb
sbb
sbb
sbb
fadd
popa
add
add
and
add
adc
sbb
cmps
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fadd
mov
and
add
and
and
and
and
and
and
and
movs
add
sbb
fadd
mov
add
add
and
and
and
and
and
movs
add
and
and
sbb
add
and
sbb
adc
test
test
cmps
add
and
add
and
add
sbb
sbb
sbb
sbb
popa
add
popa
add
and
and
and
add
and
add
and
and
and
and
and
movs
add
and
popa
add
mov
and
and
and
and
and
and
and
movs
add
add
and
fadd
mov
add
and
and
and
and
and
and
movs
add
sbb
fadd
mov
add
and
and
and
and
and
and
and
and
sbb
fadd
mov
and
and
adc
fadd
test
test
and
sbb
add
and
and
add
add
and
and
and
and
and
and
add
mov
add
add
and
cmps
add
movs
add
and
and
and
and
and
and
movs
add
and
and
add
add
and
add
and
and
and
and
and
movs
add
and
and
movs
add
sbb
sbb
and
and
sbb
and
adc
fadd
mov
and
add
and
and
and
and
and
and
and
movs
add
and
and
sbb
movs
add
movs
add
and
and
and
and
and
and
and
cmp
sbb
sbb
fadd
mov
and
add
add
test
sbb
sbb
sbb
sbb
sbb
sbb
fadd
popa
add
add
and
add
adc
sbb
cmps
add
and
movs
add
and
and
and
and
and
and
add
and
and
and
and
and
and
and
movs
add
add
add
and
and
and
and
and
and
and
and
movs
add
and
and
and
add
and
sbb
adc
test
test
cmps
add
and
add
and
and
and
and
and
and
and
and
and
add
popa
add
and
test
adc
mov
add
sbb
cmps
add
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fadd
mov
add
and
and
and
and
and
and
movs
add
and
and
and
sbb
adc
test
test
cmps
add
and
add
add
and
and
and
and
and
and
and
and
movs
add
add
movs
add
and
movs
add
and
and
and
and
and
and
add
and
add
add
add
add
adc
movs
add
add
and
adc
sbb
cmps
add
sbb
cmps
add
and
and
and
and
and
and
add
and
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
test
test
and
adc
sbb
and
fadd
mov
and
add
and
and
and
and
and
add
add
add
and
and
popa
add
and
and
and
add
sbb
and
and
and
and
and
and
add
mov
and
add
and
and
and
sbb
sbb
sbb
sbb
popa
add
and
and
test
test
and
adc
sbb
and
and
add
add
test
cmps
add
and
and
and
and
adc
sbb
cmps
add
and
popa
add
and
and
and
and
and
and
and
movs
add
and
and
movs
add
and
adc
adc
sbb
and
and
adc
fadd
adc
and
and
and
movs
add
and
add
and
movs
add
and
and
and
and
movs
add
and
add
and
add
and
add
movs
add
movs
add
add
add
movs
add
and
and
movs
add
and
add
and
adc
and
sbb
popa
add
and
test
and
popa
add
and
and
add
and
and
and
and
sbb
and
test
adc
movs
add
and
and
and
add
add
adc
test
adc
cmps
add
movs
add
cmp
adc
mov
add
and
adc
sbb
and
and
adc
fadd
adc
and
popa
add
sbb
and
and
and
and
and
and
movs
add
and
and
movs
add
movs
add
adc
sbb
and
sbb
and
cmps
add
popa
add
sbb
popa
add
movs
add
mov
and
and
and
add
and
and
and
and
and
movs
add
and
and
movs
add
and
and
and
and
and
and
add
add
adc
movs
add
and
and
and
and
and
add
add
and
and
add
and
movs
add
and
and
and
cmps
add
popa
add
sbb
and
and
add
add
movs
add
and
add
movs
add
mov
add
and
and
add
popa
add
movs
add
adc
test
adc
cmps
add
movs
add
cmp
adc
mov
add
add
and
and
and
and
and
and
and
and
and
add
add
cmp
push
add
xor
sub
push
cs
lds
cmp
movs
sub
push
add
xor
adc
jnp
inc
sbb
(bad)
mov
cld
cli
mov
or
sub
jno
inc
ins
popa
jae
add
add
adc
adc
xor
push
inc
dec
outs
je
jb
popa
ins
add
pop
fwait
inc
add
add
add
add
add
add
add
add
add
add
movs
inc
add
loope
push
cdq
movs
mov
mov
mov
les
mov
mov
mov
mov
inc
add
push
xor
jecxz
dec
test
je
in
xchg
(bad)
dec
mov
pop
je
mov
rol
sbb
adc
movs
sbb
loopne
je
xchg
and
lock
push
imul
gs
jb
add
outs
outs
ja
dec
gs
jb
add
outs
outs
ja
dec
gs
jb
add
add
add
outs
outs
ja
dec
gs
jb
add
outs
outs
ja
dec
gs
jb
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
xor
push
imul
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
aaa
add
add
push
imul
gs
jb
add
add
push
imul
gs
jb
xor
add
add
dec
lods
xor
or
stos
add
xchg
ins
bound
jb
imul
outs
outs
ja
dec
gs
jb
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
cmp
add
add
outs
outs
ja
dec
gs
jb
cmp
add
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
xor
add
add
outs
outs
ja
dec
gs
jb
xor
add
add
dec
lods
xor
or
stos
add
xchg
inc
jb
ins
xor
add
push
jb
fs
je
popa
ins
add
ins
bound
arpl
jae
push
outs
add
add
xchg
dec
lods
xor
or
stos
add
xchg
imul
add
push
ins
popa
je
outs
jb
add
push
popa
jb
imul
ins
inc
outs
ins
jo
outs
jns
add
inc
outs
jo
jb
addr16
add
popa
ins
xor
add
inc
outs
ins
jo
outs
jns
jb
fs
je
add
or
clc
add
add
add
add
jae
imul
and
add
add
jns
lods
xor
or
stos
add
xchg
add
add
add
add
dec
lods
xor
or
stos
add
xchg
and
and
pop
in
gs
clc
cs
js
xor
sti
inc
mov
pop
cmp
pushf
mov
ror
gs
lods
mov
ror
adc
pop
or
sub
jne
xor
add
add
lods
xor
or
stos
add
xchg
dec
inc
dec
inc
outs
jb
add
pop
add
add
sub
add
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
add
add
add
lahf
inc
add
add
add
add
add
push
loopne
inc
add
add
add
fwait
inc
add
add
add
mov
add
adc
add
or
inc
add
add
add
mov
mov
push
cmps
inc
add
add
or
dec
pop
adc
inc
add
inc
add
inc
add
sahf
inc
add
sahf
inc
add
jg
add
add
inc
add
fwait
inc
add
sbb
xor
add
lods
add
add
add
add
sub
mov
add
add
dec
add
add
add
inc
add
add
add
cmps
inc
add
sub
enter
or
add
inc
add
cmp
add
and
inc
add
add
add
inc
add
sub
or
inc
add
add
add
adc
inc
add
add
add
fs
inc
add
jg
add
add
add
dec
add
add
inc
add
add
add
add
add
stos
inc
add
sub
and
add
dec
add
add
and
inc
add
add
add
inc
add
sub
fadd
add
inc
add
dec
add
add
inc
add
add
add
sub
xor
inc
add
add
add
dec
add
add
and
inc
add
add
add
add
sub
lock
adc
add
inc
add
add
add
add
add
add
sub
je
inc
add
add
add
dec
add
add
and
inc
add
add
add
inc
add
sub
dec
pushf
inc
add
add
add
dec
add
add
inc
add
add
add
add
sub
pusha
pushf
inc
add
add
add
adc
pusha
add
add
add
mov
sub
xor
inc
add
add
add
add
inc
add
add
add
mov
add
sub
je
inc
add
add
add
dec
add
add
and
inc
add
add
add
inc
add
sub
mov
add
dec
add
add
inc
add
add
add
add
sub
movs
pushf
inc
add
add
add
dec
add
add
and
inc
add
add
add
sub
mov
add
add
dec
add
add
inc
add
add
add
mov
add
sub
aam
inc
add
add
add
dec
add
add
and
inc
add
add
add
inc
add
sub
in
pushf
inc
add
add
add
adc
add
add
add
add
add
inc
sub
or
add
inc
add
add
add
mov
inc
add
inc
sub
and
add
inc
add
add
inc
add
add
or
inc
add
add
add
add
dec
add
add
add
add
add
sub
add
inc
add
add
add
inc
add
add
add
sub
sub
inc
add
add
add
dec
add
add
add
add
sub
cmp
add
inc
add
xchg
add
add
inc
add
add
dec
mov
sub
dec
popf
inc
add
add
inc
add
add
add
test
sub
test
add
inc
add
add
inc
add
add
add
mov
sub
hlt
add
add
add
adc
mov
jg
add
add
add
inc
add
inc
sub
xchg
add
inc
add
add
inc
add
add
add
inc
sub
int3
add
inc
add
test
add
and
inc
add
add
add
rol
inc
sub
fs
inc
add
add
add
dec
add
inc
add
add
clc
rol
inc
sub
jl
inc
add
add
inc
add
mov
add
and
inc
add
add
add
ret
inc
add
sub
xchg
popf
inc
add
add
add
dec
add
inc
add
add
add
inc
add
sub
lods
popf
inc
add
add
add
dec
add
add
add
add
inc
sub
les
add
inc
add
mov
add
add
add
mov
inc
sub
fcomp
add
inc
add
rol
add
inc
add
add
add
enter
inc
sub
hlt
popf
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
inc
sub
sbb
inc
add
add
add
add
add
add
xchg
leave
inc
add
inc
sub
and
inc
add
add
add
pop
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
leave
inc
add
inc
sub
pusha
add
inc
add
add
add
add
add
mov
inc
add
inc
sub
xor
inc
add
add
add
or
add
add
add
add
retf
add
or
add
add
add
adc
fadd
add
sbb
inc
add
add
add
inc
add
inc
sub
pop
sahf
inc
add
add
add
adc
fadd
add
sbb
inc
add
add
add
add
add
sub
push
add
add
adc
loopne
add
sbb
inc
add
add
hlt
retf
inc
add
inc
sub
je
inc
add
add
inc
add
add
add
add
add
push
int3
inc
add
inc
sub
sbb
add
or
add
inc
add
add
add
sub
nop
sahf
inc
add
add
add
adc
in
add
add
add
add
inc
add
inc
sub
cwde
sahf
inc
add
add
add
inc
add
inc
add
add
add
mov
inc
add
adc
stos
adc
cmp
inc
add
adc
stos
adc
pusha
mov
inc
add
adc
stos
adc
mov
inc
add
adc
stos
adc
mov
inc
add
inc
add
adc
stos
adc
fsub
inc
add
adc
stos
adc
add
inc
add
adc
stos
adc
sub
inc
add
adc
stos
adc
push
mov
inc
add
adc
stos
adc
js
inc
add
inc
add
adc
stos
adc
mov
lahf
inc
add
adc
stos
adc
enter
push
adc
movs
adc
stos
adc
lock
inc
add
adc
stos
adc
sbb
inc
add
adc
stos
adc
inc
mov
inc
add
adc
stos
adc
push
lahf
inc
add
adc
stos
adc
nop
mov
inc
add
adc
stos
adc
mov
lahf
inc
add
adc
stos
adc
loopne
inc
add
inc
add
adc
stos
adc
or
inc
add
adc
stos
adc
xor
inc
add
adc
stos
adc
pop
mov
inc
add
adc
stos
adc
and
add
adc
stos
adc
test
inc
add
inc
add
adc
stos
adc
shl
inc
add
adc
stos
adc
clc
mov
inc
add
adc
stos
adc
and
add
adc
stos
adc
dec
movs
inc
add
inc
add
adc
stos
adc
jo
inc
add
inc
add
adc
stos
adc
cwde
movs
inc
add
inc
add
adc
stos
adc
shl
sahf
adc
movs
adc
stos
adc
call
lahf
inc
add
adc
stos
adc
adc
inc
add
adc
stos
adc
cmp
inc
add
adc
stos
adc
pusha
movs
inc
add
inc
add
adc
stos
adc
mov
inc
add
adc
stos
adc
mov
inc
add
inc
add
adc
stos
adc
fsub
inc
add
adc
stos
adc
add
inc
add
adc
stos
adc
je
inc
add
inc
add
cmps
inc
add
inc
add
adc
stos
adc
push
cmps
inc
add
inc
add
adc
stos
adc
js
inc
add
inc
add
adc
stos
adc
mov
lahf
inc
add
adc
stos
adc
enter
push
adc
movs
adc
stos
adc
lock
inc
add
inc
add
adc
stos
adc
sbb
inc
add
adc
stos
adc
mov
inc
add
inc
add
inc
add
adc
stos
adc
mov
cmp
mov
push
ret
mov
cmp
mov
push
ret
mov
cmp
mov
push
ret
dec
xor
push
lods
or
dec
mov
inc
and
and
pop
in
gs
clc
cs
lods
xor
or
stos
add
xchg
and
add
add
or
dec
inc
dec
inc
outs
jb
xor
adc
or
dec
inc
dec
inc
outs
jb
xor
add
add
jmp
add
dec
inc
outs
jb
xor
xor
ret
add
push
add
rol
add
inc
sub
add
add
add
arpl
xor
add
(bad)
inc
add
int3
push
pop
pop
adc
add
add
inc
add
add
add
mov
add
add
arpl
xor
add
mov
add
ins
je
add
fdivr
loope
sbb
imul
add
add
add
in
add
inc
jne
imul
add
add
cmp
add
loope
sub
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
add
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
xor
xor
xor
aaa
aaa
sub
xor
xor
das
xor
das
xor
sub
xor
xor
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
push
xor
outs
ja
and
js
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
inc
inc
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
aaa
inc
xor
aaa
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
inc
inc
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
push
data16
jne
outs
je
inc
cmp
cs
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
ds
out
add
inc
outs
bound
rol
add
(bad)
fild
test
push
add
add
add
add
add
push
push
or
or
or
or
or
or
or
or
adc
movups
push
or
adc
adc
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
or
adc
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
add
or
outs
add
add
add
adc
add
add
les
mov
add
add
add
push
pop
add
or
add
add
add
add
add
add
add
push
pop
adc
add
add
add
pop
add
add
add
xor
add
jno
and
xchg
mov
inc
push
and
bound
loope
xchg
mov
icebp
mov
inc
xor
or
shl
inc
es
test
add
add
add
add
add
add
add
add
adc
add
xor
adc
adc
adc
shl
bound
loop
(bad)
fiadd
or
add
add
add
add
add
in
aas
push
cmp
fistp
xor
sbb
loope
fcomp
cdq
outs
repz
out
test
adc
arpl
cmc
cmp
lods
pop
mov
fidivr
std
lock
xor
xchg
pop
icebp
sti
movs
pop
aam
cmp
mov
scas
lock
sbb
retf
jnp
add
adc
cld
sbb
fisttp
dec
cmp
sub
mov
jbe
in
std
rcl
push
sbb
loop
adc
ret
push
adc
rcl
jae
adc
push
sub
test
push
jno
inc
movs
addr16
or
and
test
sbb
inc
movs
aam
cwde
add
or
inc
mov
push
fidivr
js
mov
xlat
inc
mov
pushf
inc
(bad)
leave
sub
lds
cmps
inc
sbb
sub
dec
push
(bad)
ror
pop
sub
xor
add
add
xor
xchg
adc
or
aam
xchg
imul
sub
add
test
jo
sbb
ret
inc
cmp
adc
test
idiv
ret
cs
or
sbb
cmp
daa
mov
scas
sbb
xchg
(bad)
push
mov
popa
inc
sbb
push
jno
and
adc
push
add
xchg
push
ins
leave
and
adc
rol
mov
cwde
fxch
neg
xchg
repnz
imul
mov
out
loop
add
mov
mov
dec
cmp
add
rol
inc
or
jmp
mov
cdq
lods
push
pop
push
mov
push
fidiv
jnp
mov
int
cld
push
popa
push
movs
sbb
sbb
lock
mov
cmp
lea
cmp
adc
or
xchg
jns
adc
xchg
add
xchg
sub
lea
xchg
cmp
xchg
mov
dec
jbe
(bad)
mov
test
ja
cmp
retf
mov
imul
pop
pushf
test
addr16
addr16
lea
les
push
and
mov
xchg
(bad)
ret
pop
ret
dec
pushf
stos
pop
rol
jae
sbb
jae
adc
mov
cmp
push
clc
repz
dec
ins
imul
popf
mov
inc
loop
or
cdq
xchg
sti
mov
push
lahf
and
mov
mov
fadd
xchg
pop
xor
cmovb
ja
cmp
outs
mov
test
mov
sub
sub
loop
fmulp
sub
rcr
daa
sbb
fld
inc
int
stos
inc
fistp
stos
cmp
aas
jge
(bad)
jecxz
push
push
xlat
fsubr
iret
idiv
and
ret
jnp
retf
jae
arpl
cmp
call
mov
(bad)
fdiv
dec
ficomp
rcl
jmp
jmp
sbb
sub
(bad)
xchg
push
dec
clts
mov
sub
mov
lahf
or
pop
sar
xor
cwde
rol
push
sbb
and
push
sbb
inc
test
mov
retf
aam
ret
add
call
inc
inc
or
mov
(bad)
mov
inc
(bad)
push
in
add
add
xor
or
mov
mov
add
xchg
cmp
outs
sub
add
retf
cs
xor
add
test
rcl
push
sar
add
mov
addr16
add
mov
fnstcw
or
pop
push
or
mov
dec
test
sbb
cvtps2pd
rcl
push
ret
pop
mov
pusha
pusha
and
aam
fcom
test
ficomp
push
imul
adc
xchg
aas
add
mov
jns
(bad)
mov
fcmovnb
loope
int3
hlt
sar
jbe
and
or
lahf
clc
mov
das
jg
mov
fcomi
jecxz
out
sub
mov
dec
jno
mov
push
push
xlat
jl
xchg
xlat
ins
fisttp
mov
retf
popf
xor
(bad)
sub
mov
out
push
dec
sub
cld
sbb
imul
push
or
ins
dec
je
xchg
imul
xchg
jne
xor
loopne
mov
sbb
jl
cmp
jb
test
cmps
add
xchg
out
imul
sahf
fisttp
pop
pop
es
xchg
and
cmp
mov
xor
pop
sbb
sub
mov
cmps
dec
xor
test
into
push
and
ret
jno
jmp
push
dec
loop
lds
mov
push
dec
dec
js
das
and
add
sub
push
or
repnz
arpl
enter
push
and
repnz
xchg
adc
jne
leave
add
dec
xor
not
idiv
cli
push
stc
pop
in
xor
int
outs
jl
mov
fucomip
mov
pop
mov
pop
imul
push
pusha
push
and
jnp
icebp
idiv
test
or
pushf
retf
sub
rcl
test
cmp
in
pop
mov
fstp
push
mov
and
repnz
jmp
cwde
enter
in
lods
mov
mov
push
sbb
fidiv
sub
jl
xor
sub
cmps
ret
pop
test
cmps
pop
nop
pop
jnp
mov
popa
mov
sbb
jae
cmps
loop
imul
jo
sbb
stc
adc
in
popf
and
cld
adc
mov
lahf
xchg
xchg
inc
icebp
sti
call
in
ins
lds
sbb
add
sbb
sahf
cli
movs
jecxz
mov
cmp
ja
shr
cmc
pop
adc
sub
xchg
push
ret
dec
out
adc
in
stos
(bad)
and
mov
std
push
aam
dec
imul
jmp
pop
daa
and
imul
push
gs
movs
addr16
push
or
xchg
adc
pop
out
rcr
mul
pop
aas
jb
repz
jns
imul
pop
push
(bad)
and
pop
test
addr16
(bad)
and
(bad)
lods
imul
jb
mov
pop
out
push
hlt
push
mov
pop
fstp
xchg
mov
pushf
sbb
dec
fsubr
sub
add
adc
test
sbb
xor
test
adc
imul
and
test
(bad)
call
dec
push
add
ds
xchg
inc
inc
das
imul
(bad)
cli
adc
or
push
bndldx
shl
xor
mov
mov
test
sbb
test
lock
mov
loope
adc
add
and
inc
xor
mov
push
or
pushf
jae
sub
bound
and
sbb
push
or
push
and
mov
push
add
xchg
sbb
dec
or
or
sub
push
and
dec
bound
jmp
sub
pusha
and
aas
sub
lock
outs
aaa
cwde
mov
pop
push
shl
lock
addr16
dec
(bad)
icebp
ins
and
into
aam
cwde
pop
ds
push
mov
jp
dec
aad
pop
sbb
imul
mov
inc
pop
mov
inc
stc
xchg
add
std
retf
pop
sbb
xchg
mov
jg
push
fsub
std
(bad)
adc
pop
lods
xchg
aad
imul
stc
pushf
js
sub
dec
test
push
cli
adc
pop
mov
and
cdq
xor
xor
mov
cli
test
gs
pop
(bad)
pop
sbb
dec
push
in
arpl
inc
in
dec
push
jmp
imul
retf
aaa
or
cld
or
add
mov
jne
fist
dec
pop
adc
les
push
xor
clc
push
add
add
push
and
xor
std
(bad)
mov
xor
push
xchg
cmp
and
sub
xchg
(bad)
sbb
jp
xor
push
ss
jmp
lea
sbb
push
daa
mov
shl
movd
push
out
mov
fxtract
sbb
pop
xchg
and
dec
iret
bound
dec
sbb
or
(bad)
xchg
in
scas
add
addr16
ja
or
and
xor
std
mov
xor
push
data16
enter
in
not
cmps
and
pop
and
sub
sbb
(bad)
neg
ror
cwde
lock
arpl
jne
jge
fimul
addr16
add
and
scas
sbb
lods
pop
fmul
pop
mov
(bad)
out
ror
push
lahf
cdq
scas
and
xchg
ins
call
cmp
daa
adc
sub
sub
cld
cmp
and
and
dec
mov
mov
mov
pusha
jne
xor
sti
xchg
xor
lahf
push
pop
addr16
jns
test
enter
lods
cdq
jo
xor
daa
aas
adc
call
xchg
fist
not
rcr
mov
ds
ret
inc
adc
sahf
retf
push
fsub
test
arpl
push
ss
adc
imul
stc
xor
cmp
jge
mov
fst
loopne
add
stos
dec
clc
mov
fadd
xchg
mov
xlat
push
mov
sub
arpl
add
lea
sbb
or
jnp
mov
retf
push
inc
xor
pop
das
xchg
xor
cmp
inc
and
jbe
retf
(bad)
mov
ret
dec
inc
mov
popf
pop
ins
xor
sti
jg
out
test
xchg
jecxz
les
packuswb
ins
arpl
jb
pushf
pop
stos
cmp
in
pop
sub
std
rcr
movs
ffreep
lods
mov
dec
loop
sbb
pop
jo
cli
xchg
pushf
iret
inc
int
repz
mov
cmp
cmp
sbb
fiadd
inc
loope
lods
imul
push
sbb
inc
retf
dec
shr
push
pop
inc
xor
add
pop
(bad)
outs
push
ins
pop
pop
sub
ret
pushf
mov
inc
les
push
or
sbb
mov
and
push
test
std
fld
pop
loope
mov
call
int3
mov
sbb
inc
sub
add
dec
dec
sub
rcl
sbb
sbb
dec
sub
cdq
rol
loopne
cmps
dec
nop
sub
inc
xchg
cmp
sub
inc
add
sub
and
retf
fs
pushf
mov
inc
ins
inc
aam
mov
sbb
mov
push
and
mov
(bad)
xchg
mov
add
test
or
aam
dec
sbb
pop
add
sub
(bad)
add
jno
pop
mov
aam
ret
(bad)
mov
and
(bad)
pop
fs
inc
or
(bad)
ss
xchg
mov
movs
stos
mov
sbb
or
xchg
jo
scas
cmp
sbb
sub
sub
std
dec
mov
sar
or
jae
lods
cmps
inc
dec
mov
mov
stc
mov
xchg
je
adc
mov
mov
jbe
data16
cld
push
add
fs
mov
sub
aas
mov
xchg
xchg
imul
hlt
mov
icebp
mov
sbb
call
add
dec
and
clc
pop
frstor
test
add
jns
pop
xchg
add
push
popf
cmps
fwait
adc
mov
cmp
and
and
sub
cmc
and
jno
or
lds
sub
mov
and
mov
xchg
lea
scas
inc
dec
stos
and
out
inc
push
pcmpeqb
and
adc
adc
add
popa
push
nop
test
dec
add
adc
ret
mov
push
loopne
(bad)
mov
(bad)
xor
fidiv
ss
out
ins
ins
jae
dec
xor
sub
cld
push
fsubr
aam
pusha
push
sti
leave
enter
out
push
xor
push
aam
push
cmp
leave
retf
int
shl
fdivr
jae
xlat
mul
jae
frstor
cmp
pop
xor
je
fsubr
mov
repnz
test
frstor
mov
dec
outs
adc
mov
jmp
shl
neg
mov
cmp
mov
(bad)
ins
jg
pop
mov
inc
inc
add
enter
inc
into
xchg
push
cmp
mov
test
adc
fs
retf
je
mov
adc
pusha
loope
arpl
scas
xchg
sub
movs
sbb
lods
push
and
idiv
add
fwait
xchg
and
fcomp
stos
xchg
dec
pusha
mov
dec
sahf
je
stos
push
dec
std
int3
arpl
xchg
pop
jmp
mov
test
mov
mov
cmc
loope
ins
ins
scas
nop
xchg
mov
retf
arpl
int3
jbe
fimul
test
dec
cld
inc
inc
fstp
xchg
int3
fs
xor
adc
or
ins
repnz
sbb
pop
xor
xchg
mov
(bad)
xchg
mov
(bad)
loopne
(bad)
std
and
push
jecxz
nop
mov
nop
ins
pop
sub
call
test
imul
stos
clc
(bad)
in
xchg
test
pop
int
aaa
rol
xchg
outs
mov
jp
jne
jp
into
in
loope
ss
sbb
jnp
aad
fnstcw
lods
das
pop
xor
test
mov
into
cmp
icebp
shl
loope
in
push
mov
in
ja
and
jmp
std
dec
mov
sub
loopne
loop
adc
movs
or
adc
in
fstp
(bad)
in
sub
scas
(bad)
in
jae
sbb
(bad)
mov
aad
jne
sbb
lds
shl
pop
add
imul
aam
popf
xchg
mov
pop
pop
xor
and
ret
push
mul
pop
or
ja
mov
push
sahf
fcmovnb
inc
(bad)
test
ret
jge
les
cmps
sub
imul
mov
pop
mov
add
stos
cmp
and
sbb
in
std
dec
dec
pop
sti
inc
lea
xchg
aam
arpl
xor
mov
inc
adc
(bad)
fdiv
push
(bad)
fsubr
(bad)
cmc
std
cmps
call
retf
adc
push
push
mov
sub
jb
fimul
or
stos
stos
repz
jo
push
and
or
loopne
add
cmps
and
fild
pop
dec
aas
ror
push
adc
or
rcl
cdq
lea
les
bound
mov
enter
xchg
mov
dec
mov
data16
in
retf
test
xchg
mov
cmp
data16
inc
adc
add
cli
add
mov
and
pop
and
ins
sub
cmp
test
fimul
dec
xor
xchg
push
mov
cmp
sbb
cmps
stos
leave
xchg
push
ss
or
pop
mov
sub
jmp
xor
cmp
jl
iret
and
fdiv
mov
ins
lods
cwde
push
and
xchg
rcr
sbb
mov
repz
pop
js
sbb
sbb
(bad)
mov
sbb
pusha
retf
(bad)
repnz
call
arpl
popf
dec
imul
xor
adc
out
(bad)
mov
adc
xchg
cmps
sbb
mov
xor
lods
(bad)
into
aaa
cli
push
out
scas
adc
retf
pop
rcr
out
std
out
nop
push
out
mov
imul
test
es
mov
mov
push
dec
inc
retf
loop
push
sbb
push
push
lea
add
add
push
lods
sub
inc
arpl
push
aam
cmp
inc
xor
(bad)
rol
cmp
mov
in
push
dec
xchg
cmp
adc
in
sti
outs
sub
jo
jecxz
pop
cmp
dec
cmp
cmps
adc
sbb
inc
sbb
and
je
test
xchg
add
or
adc
cmp
lea
jno
xor
sbb
push
scas
into
adc
cli
in
sub
xchg
mov
div
mov
push
in
aad
sti
pop
xor
ror
cmp
lahf
repz
(bad)
cs
jbe
out
scas
daa
and
fmul
jne
std
xchg
neg
cvtps2pi
jle
xchg
das
cmps
in
mov
cmp
jecxz
dec
in
call
jg
stc
push
cli
bound
sti
dec
xchg
add
mov
ins
mov
mov
outs
push
ins
scas
outs
jnp
out
loope
(bad)
les
hlt
cwde
xchg
mov
iret
fisubr
xor
push
xchg
pushf
sbb
xchg
cmp
push
mov
or
sbb
jmp
add
sub
iret
mov
jb
jno
sbb
dec
xor
mov
retf
jo
stos
sbb
outs
shl
push
sbb
mov
pop
movs
pusha
pop
xor
scas
out
scas
fistp
cmp
pop
jmp
jo
inc
scas
aas
jge
jb
les
jecxz
(bad)
rcl
cmps
jo
pusha
and
scas
iret
dec
cmp
loope
scas
fdiv
fwait
xor
add
fisubr
ds
bound
sbb
ror
loope
gs
sbb
daa
mov
inc
cld
pop
je
dec
xchg
pop
push
ss
addr16
dec
mov
test
mov
mov
xor
mov
mov
repnz
fdivr
sahf
loopne
add
inc
and
sbb
outs
cmp
dec
fs
xchg
shl
fisttp
sahf
into
push
sub
scas
mov
sub
call
sbb
stos
ror
push
or
mov
xchg
lahf
xchg
test
mov
mov
push
adc
sub
and
add
iret
jmp
lods
ror
icebp
scas
inc
ret
call
test
in
popf
daa
xchg
mov
gs
addr16
and
mov
test
push
retf
mov
lahf
fwait
sbb
fisubr
fdiv
xchg
push
inc
push
mul
dec
mov
mov
(bad)
(bad)
fadd
cmp
std
jle
cmp
icebp
fbstp
jnp
iret
jo
xor
mov
(bad)
cs
scas
adc
loop
int
inc
stos
sbb
shl
pop
pop
sub
out
pop
pop
push
jne
cmps
fdiv
dec
sub
inc
leave
adc
fidiv
imul
sbb
jp
cmp
cli
lahf
aaa
leave
imul
xchg
sar
jp
repnz
lods
icebp
mov
jg
(bad)
daa
inc
and
lock
dec
mov
or
test
add
push
adc
jge
lock
jg
sub
aaa
sub
in
aas
rcr
retf
xor
fcmovnu
dec
cdq
pop
sbb
push
cmps
sub
xlat
mov
push
push
mov
pusha
adc
mov
sbb
add
dec
sbb
out
cmps
adc
or
cwde
adc
push
mov
push
loop
out
cmps
adc
gs
cmps
xor
ret
mov
jno
aam
popa
pop
fadd
and
mov
test
mov
sub
adc
and
shl
adc
jae
sub
jnp
and
add
jecxz
hlt
jg
sub
(bad)
cmp
fsub
add
cs
aaa
push
mov
mov
dec
jmp
push
(bad)
aam
cmp
mov
push
test
cmc
inc
dec
cwde
adc
fistp
sti
mov
xchg
xlat
pop
pop
mov
jmp
xchg
paddusw
mov
xchg
xchg
loopne
fwait
sbb
cmp
add
push
in
int
mov
jnp
dec
sbb
inc
js
cmp
push
dec
jecxz
daa
call
gs
dec
das
cs
jno
push
mov
loopne
lock
add
jne
sbb
int3
push
pop
add
std
push
shl
cwde
(bad)
repnz
or
mov
push
jl
aas
jge
adc
in
mov
je
cmps
sub
or
ror
push
xor
xchg
and
adc
sbb
mov
pop
test
div
aad
lds
cmc
and
sbb
cmps
push
push
dec
ins
outs
inc
jns
sbb
push
mov
and
xchg
imul
mov
mov
adc
jbe
or
add
jo
dec
xor
jo
fild
push
pop
retf
sub
ret
fild
imul
lods
lods
loope
popa
cmp
mov
sbb
jbe
repz
cmp
fstp
mov
push
in
fsub
jnp
xor
jecxz
js
aas
js
fucomi
sar
cmps
out
in
mov
jg
leave
lock
daa
and
in
dec
dec
jne
std
xchg
test
pop
stos
cld
xor
ret
ins
pop
dec
cs
(bad)
stos
je
mov
push
cli
bound
aam
jecxz
xchg
mov
mov
loopne
data16
and
mov
aaa
loopne
(bad)
int
jmp
lods
clc
popf
in
sbb
cmp
scas
rcl
mov
imul
cmps
dec
push
xchg
mov
mov
daa
add
and
cmp
pusha
pushf
jmp
call
cs
addr16
(bad)
scas
ds
push
enter
inc
pop
test
movs
jnp
mov
mov
sub
fld
fisttp
daa
xchg
push
ss
ret
lea
ins
pusha
repz
mov
lods
mov
push
xor
sahf
jne
aad
fist
shl
xchg
inc
jo
sbb
mov
cdq
daa
inc
or
repnz
push
inc
pause
je
xor
sar
push
pusha
mov
push
aam
sub
mov
xchg
adc
repz
or
sbb
jmp
(bad)
xchg
leave
sar
ins
xor
jbe
repnz
adc
(bad)
fsub
cwde
out
and
popa
leave
pop
push
sbb
push
fld
call
cmc
sar
bnd
in
fld
xlat
mov
mov
popa
out
jbe
fcmovnu
cmp
and
movs
dec
rcr
movs
mov
mov
mov
push
into
stos
leave
(bad)
out
fild
(bad)
out
push
mov
mov
mov
sbb
xor
inc
pop
sub
cmp
lds
imul
jle
mov
into
(bad)
xor
nop
movs
jge
dec
aam
ror
ja
call
and
jne
in
mov
dec
push
jle
mov
retf
dec
pop
(bad)
scas
or
and
cli
pop
dec
xlat
sub
inc
xor
cmps
int
shr
push
mov
repz
(bad)
adc
test
movs
stc
jns
push
push
dec
inc
xchg
jecxz
pop
imul
and
jae
jno
mov
arpl
or
dec
bound
or
retf
mov
mov
stc
inc
and
cmp
jmp
cmp
aad
(bad)
test
sbb
or
std
sub
xor
sub
cmps
fimul
(bad)
daa
inc
dec
jmp
adc
fwait
in
mov
or
add
push
inc
sbb
push
scas
jmp
jge
enter
mov
mov
mov
and
xor
mov
imul
retf
mov
add
add
xchg
xchg
sbb
xchg
enter
call
adc
push
(bad)
mov
sbb
ret
add
aam
and
cmp
pop
xor
xor
mov
sbb
or
cmovno
or
pop
mov
dec
imul
dec
test
push
rcr
(bad)
in
pop
mov
jns
fstp
xchg
cmps
inc
push
rcl
mov
ror
mov
in
(bad)
dec
dec
jle
xchg
call
xor
sub
sti
add
retf
rol
call
inc
outs
test
or
cmp
inc
repnz
jne
push
popa
xor
(bad)
test
imul
push
or
movs
adc
loop
mov
(bad)
pusha
adc
mov
outs
int3
pusha
ins
inc
fiadd
or
loope
mov
aas
push
cmp
jmp
dec
cdq
shl
js
xor
xchg
and
mov
xchg
fcom
sbb
cmp
cmp
out
dec
and
pop
and
cli
in
sahf
in
inc
mov
push
pop
out
jmp
hlt
add
enter
adc
outs
pop
fs
xchg
outs
sub
mov
shl
sub
and
xchg
lock
clc
aam
xchg
adc
mov
leave
(bad)
popw
loop
inc
jo
test
inc
fld
mov
mov
push
inc
inc
shr
and
rcl
inc
or
scas
sub
div
outs
ds
(bad)
(bad)
in
xchg
movs
dec
push
pop
lea
mov
mov
ins
push
push
addr16
fwait
xchg
std
cmp
gs
jle
test
aam
pop
mov
das
cmc
push
dec
mov
(bad)
retf
pop
ins
out
cli
pop
xchg
mov
out
push
inc
xchg
in
js
aaa
jl
cwde
call
mov
pop
jl
jbe
cmc
pop
and
pop
(bad)
xchg
iret
sub
(bad)
test
inc
pop
jecxz
add
add
push
push
and
aad
icebp
mov
cdq
or
xchg
out
sub
int3
jne
jo
lods
or
mov
jae
sahf
or
and
pop
out
push
or
sub
or
lea
inc
das
(bad)
out
mov
inc
ja
retf
dec
fdivr
mov
mov
adc
dec
push
lock
out
scas
xchg
mov
dec
dec
call
or
int
in
pushf
add
cmp
cmps
data16
loopne
mov
hlt
gs
in
cmp
add
fsub
xlat
(bad)
jp
mov
sbb
stc
arpl
test
inc
stos
mov
rol
push
std
cmps
data16
xor
popa
jo
inc
xchg
push
xchg
lea
pop
inc
or
mov
mov
ins
pop
adc
push
mov
xchg
fst
xor
mov
cmps
nop
lds
adc
pop
shr
imul
xor
int
dec
popa
sbb
add
jbe
inc
dec
and
jmp
sbb
ror
out
push
sahf
dec
fdivr
jbe
ins
mov
icebp
add
push
fistp
xchg
mov
imul
mov
gs
jno
sete
cmp
xor
sub
pop
mov
xchg
ss
movs
movs
add
cmp
test
cmps
(bad)
hlt
push
sbb
add
icebp
pop
mov
test
mov
lods
sub
inc
jmp
or
fsubr
loop
xchg
xlat
adc
neg
mov
aam
dec
loopne
sbb
scas
push
test
mov
pop
pop
jle
in
call
or
push
dec
dec
cdq
sbb
cmp
(bad)
mov
pop
inc
mov
ja
and
daa
and
aad
stos
(bad)
enter
cmp
add
loope
dec
sbb
mov
cdq
sub
push
in
outs
mov
cwde
pusha
fdivrp
call
popf
sti
cmps
xlat
mov
out
cmc
jbe
add
movs
and
adc
xor
adc
fstp
inc
sbb
jmp
push
daa
cmc
imul
(bad)
jbe
movs
add
xchg
jae
mov
inc
xor
stos
push
pop
scas
cmp
inc
inc
push
arpl
les
pusha
cmp
push
or
sbb
daa
push
jne
adc
movs
daa
sbb
shl
movs
mov
add
and
(bad)
in
mov
mov
mov
sbb
cmps
jne
fwait
sub
or
lods
outs
push
jo
or
pop
mov
xchg
push
or
lea
push
mov
jnp
sbb
sbb
mov
xchg
aas
mov
sahf
jmp
popf
fild
inc
hlt
jg
sbb
adc
or
clc
push
adc
inc
adc
inc
rol
daa
xchg
pop
test
inc
pop
repnz
push
(bad)
leave
dec
cmp
jnp
pop
out
mov
dec
(bad)
sbb
cmps
mov
dec
dec
adc
es
mov
test
adc
popa
add
loope
mov
add
fnstcw
mov
repnz
mov
clc
xchg
pusha
test
imul
aaa
into
scas
dec
sbb
jnp
adc
dec
mov
fiadd
(bad)
rcr
cmp
into
jne
add
or
push
retf
lock
inc
pop
cmp
xor
sbb
inc
push
dec
scas
or
pop
sub
pop
(bad)
sbb
pop
add
les
fild
and
(bad)
jae
sub
mov
push
pushf
inc
rcl
mov
(bad)
mov
pop
push
into
or
inc
lahf
mov
lahf
es
mov
inc
rcr
out
jns
xlat
cmp
(bad)
xchg
aaa
mov
dec
push
jne
outs
ds
fstp
test
xor
in
ret
mov
sbb
push
loopne
stos
sti
mov
js
addr16
push
outs
loop
jle
fsubr
xlat
push
in
pop
je
imul
in
enter
add
test
or
out
jnp
pop
cs
(bad)
leave
(bad)
sbb
fst
lock
mov
ficom
jge
mov
pop
pop
sbb
adc
shl
xor
outs
std
sbb
fld
leave
mov
jns
xor
ins
push
add
dec
jmp
lds
add
dec
cmp
or
or
sbb
jae
dec
pop
hlt
pop
iret
fst
jb
jge
fadd
mov
mov
xchg
add
xchg
fidivr
inc
sbb
xor
push
dec
in
jmp
pop
ins
rcr
cmp
leave
sub
add
mov
enter
xor
pop
ins
dec
mov
fcomp
sub
cmp
scas
dec
pop
ret
jnp
in
jp
jmp
cmc
cmp
push
and
shr
add
mov
nop
out
not
out
cwde
out
or
sub
ret
and
mov
xor
sbb
or
dec
adc
jbe
repnz
xacquire
in
(bad)
ds
fisttp
and
mov
(bad)
dec
int
add
jns
out
(bad)
shr
pop
aam
jno
mov
frstor
(bad)
daa
jns
jbe
hlt
dec
nop
loopne
stc
aad
lds
es
fiadd
or
popa
push
jbe
rcr
pop
call
fdivr
and
mov
push
fistp
push
aaa
jbe
mov
lds
cmp
adc
push
dec
sahf
fidiv
les
lods
test
mov
pop
and
loopne
mov
ja
in
mov
jne
mov
inc
into
xlat
pop
xchg
dec
mov
push
test
aas
shr
mov
jecxz
push
fucom
jb
jbe
stc
xchg
out
aaa
fisttp
dec
fld
adc
jg
inc
sahf
jae
jl
retf
sbb
adc
dec
inc
push
mov
(bad)
adc
into
xor
push
mov
les
mov
fiadd
bound
push
and
movs
push
dec
or
mov
adc
push
cmp
sub
sbb
retf
xchg
stos
xchg
mov
adc
retf
test
stc
jmp
les
cmp
mov
cmp
push
xchg
and
scas
push
adc
inc
sub
push
pop
dec
jo
sub
adc
pusha
mov
adc
cmps
(bad)
lahf
jne
dec
and
jb
push
sub
lds
ins
jno
out
leave
stos
dec
clc
or
int3
aad
add
jne
aam
int
call
inc
xor
jns
xchg
out
mov
jae
arpl
cmps
sub
adc
sbb
stos
inc
aaa
add
(bad)
add
dec
loopne
aad
add
cld
pop
pop
xlat
push
leave
cmp
push
or
cmp
shr
add
loopne
stos
enter
scas
push
in
push
(bad)
outs
pop
cmps
(bad)
mov
cmp
sub
and
mov
test
cmp
sub
fild
sbb
add
xor
inc
pusha
in
out
fild
lea
rcl
in
jge
mov
in
addr16
cmp
sbb
fs
cmc
cmp
(bad)
mov
ret
xchg
imul
push
les
or
jne
cmp
les
cmp
sub
or
mov
pop
mov
ror
mov
dec
ret
neg
jl
pop
imul
sub
cwde
mov
jge
hlt
mov
pop
adc
div
loop
out
mov
jg
aad
jno
or
push
xchg
mov
stos
clc
aad
pop
push
ror
rcr
cdq
ins
scas
test
push
stos
(bad)
pop
push
retf
(bad)
mov
std
xchg
push
out
rcr
mov
std
ret
in
xchg
out
stos
pop
xlat
sbb
scas
repz
cmps
mov
in
mov
js
inc
push
cmp
dec
addr16
jno
(bad)
popf
cmp
(bad)
fdiv
scas
jns
fstp
push
(bad)
push
mov
dec
(bad)
imul
and
mov
fldcw
fimul
fdivr
test
cli
icebp
xor
test
inc
aam
aaa
aad
aam
sbb
jne
out
mov
shl
add
xchg
sub
inc
fucom
jmp
inc
mov
jb
adc
aas
gs
mov
mov
out
enter
fstp
call
mov
popf
les
dec
cld
mov
out
sub
xor
xchg
push
push
not
and
daa
jo
push
cmp
movs
adc
sbb
jecxz
and
movs
out
push
fisub
xor
push
or
xchg
add
aam
xchg
sbb
push
lea
add
or
jl
fisub
mov
mov
das
adc
mov
jmp
and
ins
scas
sbb
cwde
jne
inc
or
pop
mov
in
mov
enter
lds
hlt
adc
mov
ins
mov
fld
or
out
mov
jmp
jl
bound
cli
pop
fdiv
mov
add
mov
loope
mov
xor
inc
leave
pop
and
jnp
cmc
arpl
mov
cmp
push
or
dec
jno
sbb
test
lea
cmc
jp
sbb
shr
shl
cmp
(bad)
call
clc
movs
jae
pop
sbb
jmp
lods
push
icebp
push
fcom
jp
outs
outs
jg
loop
pushf
pop
dec
mov
aaa
and
xchg
adc
dec
xchg
scas
cli
das
adc
cld
out
arpl
dec
inc
push
xor
pusha
dec
pop
fs
outs
ja
add
mov
jecxz
jle
mov
adc
jne
sbb
sbb
xor
test
jne
dec
and
sbb
adc
sbb
push
xchg
add
xor
push
sahf
sbb
in
jns
dec
and
repz
call
popa
cdq
and
or
inc
sbb
pop
dec
mov
cmp
fisub
mov
xchg
out
push
imul
loope
cmc
jno
jbe
iret
or
je
push
jmp
push
(bad)
cmp
loop
(bad)
dec
repz
pop
mov
fstp
in
test
lods
cmp
adc
fcomp
push
ror
dec
xchg
and
in
mov
daa
push
cli
mov
jmp
sub
popf
leave
cli
inc
add
adc
jae
jns
sbb
add
inc
push
jge
ja
mov
nop
xor
sub
inc
fs
stc
lea
les
dec
jbe
add
retf
sbb
lods
xchg
daa
or
test
aam
inc
mov
inc
xor
and
dec
push
(bad)
cmp
sar
xor
pop
fst
lahf
adc
add
cmps
mov
xlat
xor
sub
push
(bad)
jg
mov
ret
out
ds
(bad)
sbb
fistp
fdivr
sbb
jp
imul
cdq
in
add
xor
int3
cdq
es
stos
pop
cmps
jne
ds
sub
sbb
or
mov
add
mov
pop
ds
inc
out
rcl
xchg
dec
(bad)
lahf
pop
mov
or
cmp
loope
nop
scas
fisttp
bound
lock
(bad)
or
sbb
xchg
inc
xchg
repnz
push
inc
popa
xchg
or
sar
aas
mov
je
sbb
jp
(bad)
icebp
ja
jo
sahf
gs
mov
aas
gs
mov
stc
add
cmp
movs
adc
aam
sti
outs
popf
cs
push
pushf
push
out
inc
ja
push
mov
mov
std
dec
mov
xor
arpl
fidivr
inc
mov
jecxz
push
cmps
out
sub
nop
or
add
xchg
in
add
or
test
pop
sbb
mov
pop
repnz
adc
xor
jbe
inc
xchg
cmp
shl
(bad)
loopne
ficomp
(bad)
repnz
ds
cli
jae
arpl
push
dec
mov
into
xor
loop
int3
jae
ficom
cmps
loopne
push
push
movs
retf
out
test
cmp
int
(bad)
sti
and
jge
(bad)
inc
sar
push
pop
push
shl
mov
push
cmps
pop
aaa
cld
(bad)
inc
mov
mov
dec
scas
xlat
outs
popa
inc
cdq
sub
retf
les
jle
dec
int
stos
and
aad
mov
cld
rol
bound
(bad)
adc
dec
fstp
adc
jmp
imul
dec
xchg
push
sub
add
stos
stos
bnd
push
repnz
fcomi
inc
inc
ficomp
jns
fnstsw
inc
sbb
fimul
and
mov
or
fs
cmp
movs
jnp
jbe
outs
lds
fsubr
pop
push
outs
cdq
stos
jnp
pop
mov
dec
int3
iret
pop
mov
xor
stos
push
ins
add
sti
push
lds
stos
sar
(bad)
loopne
cs
out
mov
in
addr16
movs
fwait
jmp
outs
pop
or
call
add
xor
jne
arpl
les
xor
xor
(bad)
out
js
clc
push
add
add
mov
into
std
test
push
adc
inc
(bad)
in
sub
adc
mov
dec
int3
xchg
ds
ret
ret
inc
shl
push
in
scas
int3
or
(bad)
movs
cs
sub
pop
jge
push
lds
pusha
or
cmp
(bad)
xchg
cli
dec
iret
daa
xor
xor
retf
imul
push
or
add
mov
loop
cmp
in
mov
and
jmp
sub
mov
jmp
pop
pop
aam
xor
inc
out
or
cmp
jo
pushf
xlat
jbe
adc
fcom
mov
pop
and
push
rol
cld
xor
or
and
add
rol
pop
mov
ins
shl
cmp
add
xor
loop
lds
mov
aas
sub
in
(bad)
test
pop
and
or
lods
out
mov
pushf
ficomp
pop
cmp
sbb
sub
ss
mov
xor
cmp
pop
aad
cmps
test
sub
outs
pushf
or
sub
push
pop
mov
pop
(bad)
test
sar
mov
adc
loopne
or
lods
(bad)
sbb
retf
ins
shl
push
jmp
and
jg
push
sub
pop
test
das
imul
or
inc
outs
bound
push
daa
dec
or
cmp
rcl
mov
cmc
arpl
and
mov
dec
sbb
aas
cmp
inc
sbb
cmp
call
sub
or
xor
push
adc
mov
sbb
jmp
clc
lods
pop
out
jnp
cmps
ret
cli
pop
(bad)
out
aas
leave
clc
das
loop
mov
mov
jecxz
or
xor
jb
test
add
mov
in
adc
mov
adc
test
mov
movs
xchg
mov
outs
and
xchg
adc
rcl
test
cwde
mov
jo
adc
cmp
mov
xchg
(bad)
mov
inc
pop
sbb
ja
mov
push
sti
shl
popa
les
mov
pop
outs
icebp
rcl
clc
sub
std
adc
or
test
ja
mov
sti
scas
mov
jg
shl
mov
push
xchg
jno
lods
scas
ins
mov
int
scas
cwde
(bad)
(bad)
cmp
xor
cmp
xlat
and
add
retf
outs
fdiv
clc
mov
xchg
or
xchg
jbe
mov
mov
fdivr
loope
push
push
outs
(bad)
ds
adc
inc
imul
aad
cmps
shl
ret
dec
ret
mov
rcr
jmp
inc
enter
cmp
sahf
pop
adc
dec
or
mov
pop
xchg
arpl
(bad)
xchg
sub
enter
popa
push
inc
mov
outs
(bad)
shr
mov
nop
mov
push
mov
xlat
fs
xchg
call
outs
scas
enter
inc
mov
add
call
(bad)
dec
lods
aaa
sbb
outs
fld
js
lea
jg
stos
push
cwde
cmp
jbe
pop
inc
js
leave
sub
push
adc
pop
and
push
out
(bad)
push
fidivr
iret
mov
dec
int
dec
outs
movd
sbb
push
cmp
fwait
es
shl
daa
lock
and
hlt
in
call
sti
arpl
lds
cdq
pop
movs
jge
je
ret
push
nop
push
fdiv
popa
add
mov
sti
test
dec
sbb
mov
push
xor
pop
mov
std
xor
inc
xchg
(bad)
jp
sub
push
sbb
cmp
or
mov
inc
push
std
daa
sub
sub
pusha
xor
jecxz
jbe
and
lea
shr
cli
mov
rcl
scas
or
out
adc
sbb
out
scas
ds
jbe
cmp
push
push
xchg
scas
push
ins
lods
and
setbe
loopne
out
lea
mov
or
cld
mov
scas
ror
loop
add
cld
sub
outs
test
in
sub
jge
retf
inc
jo
xchg
jo
fisttp
daa
add
pop
and
std
daa
ror
inc
stos
loop
out
jbe
mov
hlt
cmps
out
mov
aam
xor
shl
xchg
pop
jb
jge
push
clc
rol
mov
aam
xchg
cmps
ins
fisubr
arpl
cli
imul
sub
xor
aas
jae
add
ja
and
arpl
push
enter
call
dec
inc
hlt
jp
out
push
mov
sahf
gs
dec
sub
mov
add
inc
ins
cmp
or
push
dec
sub
dec
sbb
inc
inc
push
fidivr
sub
push
mov
inc
inc
arpl
xor
xlat
and
cmc
or
mov
pop
ins
in
popa
sbb
pop
mov
or
outs
(bad)
mov
sub
(bad)
sub
xchg
sbb
sbb
mov
sub
inc
pop
or
mov
imul
es
out
cmp
adc
mov
iret
mov
mov
cli
(bad)
mov
mov
dec
call
mov
or
pop
push
outs
mov
fwait
cwde
or
stos
jl
ds
out
pop
inc
mov
inc
cli
push
push
je
xchg
pop
sbb
xchg
add
adc
mov
out
push
jmp
movs
pop
outs
rol
jbe
cmp
pop
xor
(bad)
shr
jmp
sub
pusha
jge
call
add
call
aad
(bad)
xchg
nop
dec
sahf
scas
inc
mov
mov
adc
out
jbe
cmp
mov
fisubr
jle
cmc
inc
jle
mov
retf
cmps
in
pusha
or
test
push
inc
pop
pushw
es
outs
mov
or
mov
or
mov
xchg
popa
ror
xor
fdivr
mov
sbb
ficom
push
data16
pop
cwde
(bad)
dec
mov
adc
int
jae
xchg
jae
mov
mov
call
lea
lea
sub
mov
mov
retf
fild
je
push
cwde
add
jmp
sbb
and
mov
and
ins
dec
out
leave
jecxz
pop
and
jns
xchg
jmp
pop
aas
loopne
mov
enter
fs
or
stos
int3
movs
push
neg
mov
ins
(bad)
inc
outs
fs
loop
movs
inc
adc
fmul
push
push
das
inc
je
fwait
inc
(bad)
fidiv
repnz
into
cmp
pop
fbld
and
xor
pop
outs
cdq
addr16
add
hlt
mov
push
jge
jmp
dec
fiadd
xchg
pop
ss
arpl
and
cli
dec
jl
imul
repnz
cmp
pop
mov
jo
mov
(bad)
(bad)
push
push
cwde
scas
jne
adc
cmps
sbb
adc
ins
dec
mov
xchg
or
push
sub
ret
dec
xchg
xchg
mov
cmp
lods
je
sub
jp
pop
mov
scas
in
test
outs
cmc
mov
imul
pop
mov
call
sub
pop
je
push
popf
icebp
(bad)
(bad)
ret
fistp
fnstsw
dec
ja
dec
hlt
sbb
shl
in
mov
(bad)
popf
and
repnz
js
rcl
lock
out
scas
(bad)
out
cmp
cld
je
clc
jmp
in
lods
cld
mov
jmp
stos
or
loope
mov
mov
inc
mov
mov
mov
nop
mov
ds
bnd
imul
dec
inc
sub
and
jge
xlat
mov
jg
enter
movs
aaa
cdq
scas
inc
sbb
stos
push
pop
mov
in
stos
xchg
mov
push
dec
jbe
add
pop
sub
sbb
inc
jae
dec
cmp
js
stos
aaa
ds
inc
jb
jl
jmp
cmps
mov
pop
in
xchg
lods
or
fstp
ss
jmp
stc
pushf
into
push
bound
sbb
int3
xchg
mov
mov
adc
xchg
jbe
jp
push
icebp
ror
mov
mov
jns
mov
or
out
mov
rcr
(bad)
mov
pop
mov
rol
fist
jp
outs
sbb
cs
aaa
pusha
jecxz
lods
cli
lahf
movs
cli
pop
popa
jmp
gs
mov
jne
ja
fucompp
movs
sbb
call
hlt
mov
fs
cmc
mov
outs
sub
xchg
xor
inc
cmp
mov
test
out
lods
mov
sti
(bad)
dec
mov
jp
mov
out
repnz
add
xchg
imul
out
jo
retf
(bad)
pop
cwde
movs
std
and
sub
lock
sbb
ret
cmc
(bad)
(bad)
push
fnstenv
or
in
or
test
dec
ret
shl
repnz
xchg
aam
mov
dec
jb
xchg
ficomp
aad
xor
pop
sub
push
fdiv
inc
cmp
(bad)
jmp
sahf
adc
jmp
add
cmp
adc
jb
in
das
and
xor
jecxz
gs
inc
or
jbe
scas
jno
sbb
and
cmp
cmp
jge
jl
loope
jge
pop
fwait
jns
scas
push
mov
scas
jo
pop
pop
jl
out
inc
mov
out
outs
aam
mov
xchg
in
fstp
jb
xchg
mov
cmc
rcr
add
daa
jmp
int3
inc
xor
ret
ins
cmp
jb
cmp
mov
fldcw
push
add
mov
test
adc
mov
inc
clc
push
ins
mov
nop
mov
loop
add
test
xchg
repnz
scas
xchg
imul
inc
add
loop
stos
ret
cmps
retf
ds
aas
xchg
outs
call
mov
or
leave
push
adc
imul
add
aad
sbb
movs
dec
jmp
dec
pop
js
or
xor
push
adc
mov
cs
adc
(bad)
(bad)
fwait
adc
adc
aas
call
nop
mov
jns
push
and
test
or
or
mov
jb
sbb
call
cmp
inc
movs
xor
(bad)
xor
xor
pop
pop
xlat
pop
ss
mov
and
mov
movs
inc
jp
test
pop
std
and
cdq
pop
dec
lods
pop
sub
cs
movs
setnp
sbb
jecxz
mov
dec
clc
sar
push
pop
xor
int
fnsave
jl
add
mov
jno
inc
dec
sti
sub
and
je
sar
add
jno
jne
xor
push
cld
lods
fnclex
xchg
jno
mov
ret
popa
test
xchg
inc
inc
dec
adc
jmp
adc
imul
(bad)
idiv
jle
ffree
jp
(bad)
jl
xor
imul
out
fwait
sbb
xor
inc
add
test
in
lock
test
ficom
fsubr
sbb
repz
xchg
neg
fidivr
imul
into
fsubr
test
jns
shl
rol
pop
dec
daa
mov
(bad)
scas
stos
rcl
scas
cmps
aas
test
lds
sbb
rcr
inc
ins
scas
bnd
mov
xor
sub
jno
dec
dec
imul
add
jns
icebp
test
clc
js
xor
scas
fild
mov
push
inc
xor
mov
cmps
daa
pusha
push
imul
addr16
mov
(bad)
stc
cdq
and
mov
dec
and
loop
inc
(bad)
lahf
jge
mov
(bad)
fst
clc
popf
fidiv
fprem
jmp
movs
mov
adc
mov
jnp
mov
in
xlat
das
das
aad
xchg
xchg
xchg
psrlq
jmp
leave
fnstsw
pop
pop
test
movs
xor
push
loop
(bad)
jmp
inc
imul
mov
push
xor
shl
mov
pop
sub
in
jmp
dec
cmp
mov
fdiv
xchg
or
jnp
pop
shr
jno
mov
adc
test
mov
lods
push
ins
sub
ret
ret
shr
iret
dec
adc
popf
arpl
(bad)
jno
jne
cmp
mov
dec
cwde
test
loop
in
imul
cwde
jb
neg
jmp
shl
rcl
pop
or
mov
mov
jmp
cmp
into
daa
aam
clc
dec
or
xchg
cmp
sub
mov
mov
push
fwait
leave
outs
inc
cli
add
arpl
leave
add
imul
retf
sahf
jno
jg
pop
mov
adc
xchg
iret
jmp
(bad)
fadd
sbb
adc
jle
sbb
fbstp
adc
lea
add
jnp
arpl
dec
pop
push
add
mov
cli
mov
lds
loope
mov
cld
dec
sub
aad
and
lds
fisubr
or
mov
jo
movs
mov
xchg
out
push
mov
jg
ins
mov
fst
inc
cmp
bound
cdq
cmp
jnp
xchg
ins
pop
dec
pop
ror
(bad)
mov
adc
xor
pop
mov
ins
scas
mov
cmc
arpl
je
or
mov
push
dec
pop
pop
in
or
movs
mov
mov
sub
leave
cwde
cmp
mov
lock
xor
lods
jge
cwde
jecxz
cmp
imul
ror
ins
iret
(bad)
hlt
lock
xchg
imul
or
in
xlat
fs
jno
arpl
test
cmp
repnz
mov
push
add
sub
adc
and
pushf
call
iret
push
sub
inc
and
(bad)
into
out
ret
and
popa
lods
push
and
fstp
mov
dec
mov
mov
dec
jmp
push
leave
jge
pop
shl
dec
adc
retf
jae
xor
arpl
jle
push
retf
hlt
inc
jae
mov
adc
mov
or
into
push
or
mov
mov
adc
test
cmp
lea
leave
lea
dec
outs
je
es
adc
adc
mov
adc
fs
fdiv
jmp
(bad)
mov
mov
lahf
loop
push
xor
data16
push
outs
lds
test
sbb
mov
push
xchg
add
popa
inc
fs
mov
sbb
xchg
inc
xor
lea
aas
add
sbb
add
mov
cmps
lock
fnsave
bnd
lock
aas
sbb
hlt
jb
fild
inc
lods
mov
into
das
shr
mov
out
xchg
std
stos
inc
(bad)
cmc
adc
iret
hlt
inc
data16
or
cmc
and
mov
sbb
cmp
cwde
idiv
mov
dec
loopne
mov
jle
cmps
mov
push
xchg
aad
sbb
pusha
fisub
lahf
adc
(bad)
ss
lock
cli
pop
jb
push
dec
adc
xor
push
cs
iret
jecxz
mov
retf
mov
push
cdq
mov
jle
scas
cwde
icebp
add
fbstp
pop
jecxz
out
js
add
jl
lahf
std
jg
mov
pop
in
fmul
jb
sbb
dec
mov
clc
push
cld
cmp
dec
and
lock
loope
mov
mov
jmp
sbb
lds
movs
shl
adc
adc
add
and
add
sub
dec
jb
out
aad
add
mov
data16
out
mov
fdiv
icebp
mov
into
xor
xor
adc
mov
sar
xchg
nop
sbb
in
out
jbe
call
sbb
adc
(bad)
shl
xchg
jmp
icebp
jmp
out
xchg
jmp
imul
mov
or
mov
push
mov
cli
push
mov
shr
inc
push
cmp
push
es
clc
sahf
out
js
adc
rcr
xchg
cmp
sbb
xor
retf
jae
test
in
mov
adc
dec
lods
cwde
pop
sbb
popf
push
and
lahf
dec
mov
sti
outs
xchg
lock
cwde
outs
dec
pop
adc
stos
mov
es
mov
jae
aad
retf
or
loop
imul
sbb
sbb
cmc
adc
ret
imul
scas
and
sbb
lods
or
in
icebp
in
cmp
xchg
int
inc
aas
adc
scas
adc
mov
push
cs
rcl
nop
or
mov
mov
ins
inc
ret
mov
dec
fcomp
mov
pop
stos
and
sbb
sahf
mov
mov
mov
rcr
lahf
out
mov
pop
mov
pop
push
fbstp
imul
arpl
pop
cmp
(bad)
jae
xchg
outs
(bad)
ins
mov
sbb
add
sti
mov
popf
into
push
fsub
push
in
ror
jne
sbb
cwde
fidiv
push
pop
iret
pop
clc
mov
cmp
xor
push
or
xor
inc
inc
cli
jg
out
xor
test
push
das
xchg
(bad)
push
mov
pop
xor
into
retf
mov
loopne
shl
pop
imul
aam
fadd
out
sub
and
mov
push
xchg
xor
pop
mov
lea
inc
call
or
nop
push
xchg
mov
lahf
sbb
mov
ins
pop
and
lahf
fidivr
push
loopne
xchg
pop
xchg
mov
std
scas
aam
ins
sar
icebp
rol
test
loope
jge
repnz
xchg
push
std
les
and
push
jp
fcmovnb
out
mov
(bad)
lock
push
lods
pop
imul
jmp
inc
and
cmps
add
int
or
add
adc
mov
arpl
or
test
dec
in
push
and
shl
loopne
adc
push
and
dec
pop
aam
or
xlat
pop
pslld
cmp
dec
div
mov
ret
lea
mov
ds
xor
or
std
cmp
xchg
(bad)
sbb
lds
sub
add
sub
dec
add
adc
and
mov
add
aad
int3
xor
(bad)
sbb
(bad)
stc
or
nop
std
das
jbe
xchg
in
aas
jecxz
(bad)
call
lock
cld
dec
inc
fwait
mov
enter
inc
repnz
push
sub
aaa
stc
gs
cmp
das
add
mov
cmp
jae
pop
and
arpl
jmp
fist
mov
jno
outs
or
es
test
jb
push
sub
and
cmp
sub
cmp
xchg
mov
push
inc
xchg
adc
dec
sbb
add
pop
jns
test
(bad)
mov
adc
xchg
inc
cli
shl
push
cmps
in
push
retf
es
cmps
cli
push
jb
add
cmp
int
inc
pop
mov
push
(bad)
aad
mov
stc
adc
push
jge
outs
inc
fadd
xchg
jno
call
arpl
pop
ins
mov
(bad)
mov
mov
sbb
sbb
xchg
jne
jo
gs
dec
cmps
dec
inc
loopne
movs
jnp
push
push
mov
cmps
cwde
pop
retf
push
xchg
sbb
test
adc
push
xchg
aam
jmp
pop
inc
sbb
pop
rol
movs
mov
ret
pop
mov
retf
popa
mov
int3
scas
out
data16
mov
mov
(bad)
mov
rcl
mov
into
jmp
lock
mov
or
test
push
je
fnsave
ja
mov
lahf
jo
mov
mov
cli
or
mov
pop
sbb
mov
jnp
mov
daa
push
cmovp
cmp
xchg
imul
xor
dec
fldenv
inc
pop
stos
in
or
xchg
fistp
jno
loop
sub
add
cmp
jae
cmp
(bad)
test
pop
add
lahf
or
mov
mov
xor
cmps
cmp
ds
ins
jbe
fidiv
fcomp
or
scas
mov
and
sbb
lods
jmp
fwait
cmp
mov
pop
loopne
jb
out
(bad)
popf
jb
inc
sub
add
pop
cmc
sub
xor
sub
push
fcmovbe
into
lods
sub
pop
cmp
xchg
xor
jnp
xor
(bad)
push
outs
pop
stos
fstp
sbb
jl
out
jecxz
push
cmp
jnp
pop
in
nop
mov
dec
sar
pop
dec
cmp
mov
jnp
sbb
(bad)
ror
aad
jo
push
xor
(bad)
scas
int3
cdq
(bad)
jb
inc
in
inc
mov
outs
stos
or
jne
cs
adc
inc
add
push
loop
test
push
xor
dec
jns
ins
add
dec
add
mov
or
xchg
push
jo
or
fisubr
jbe
jbe
inc
fld
daa
rol
mov
clc
(bad)
fld
mov
(bad)
xor
fistp
jno
loopne
dec
jbe
sub
(bad)
mov
push
push
(bad)
xchg
push
retf
push
loop
dec
inc
pop
jne
(bad)
jnp
mov
jb
mov
xchg
(bad)
push
pop
stc
das
aad
popa
jnp
(bad)
mov
loope
scas
xchg
rcr
in
aam
add
mov
ss
aam
hlt
(bad)
pop
dec
push
(bad)
add
dec
sub
pop
dec
xor
mov
cs
(bad)
pushf
jmp
in
jo
daa
or
pop
call
mov
(bad)
add
and
add
mov
xchg
inc
or
adc
test
movs
push
sbb
jne
jg
pop
adc
jmp
push
inc
into
add
dec
es
nop
test
push
inc
inc
js
inc
jb
icebp
xlat
jbe
(bad)
ins
pusha
and
inc
into
jg
mov
jge
mov
fcom
jg
pusha
(bad)
(bad)
adc
mov
mov
enter
add
cli
and
std
mov
pop
sub
pop
pop
scas
leave
in
cli
mov
div
(bad)
std
push
push
(bad)
mov
and
ds
jecxz
test
jg
mov
mov
pop
dec
fst
cmp
stos
jmp
cs
add
fld
and
call
mov
push
stos
das
mov
test
cli
fcmove
inc
fisttp
mov
mov
leave
mov
mov
(bad)
jae
outs
not
pop
inc
div
jmp
sub
lods
fcomip
mov
hlt
test
cdq
sbb
mov
cld
iret
je
(bad)
fstp
scas
jae
repnz
pop
jno
shl
ins
scas
sbb
mov
and
ret
leave
out
(bad)
push
retf
in
je
es
cmp
push
je
xchg
in
ins
sbb
jae
movs
adc
pop
pop
inc
dec
arpl
ret
mov
in
out
mov
mov
cmp
push
daa
outs
cmc
mov
in
mov
mov
pop
dec
pop
out
imul
imul
mov
mov
fcom
fnstsw
dec
movs
sub
mov
jo
xchg
inc
mov
addr16
dec
enter
rcr
popa
stc
xchg
test
in
(bad)
retf
lds
lods
push
out
test
in
lea
inc
xor
cli
out
dec
mov
push
ins
mov
xlat
or
out
sub
mov
pop
inc
sbb
mov
mov
out
out
inc
jmp
ja
stos
imul
repz
lahf
pop
pop
or
das
shl
hlt
bound
pop
ds
lock
(bad)
pop
fxch
iret
int
hlt
fstp
es
xchg
int3
jo
cmp
jne
and
sbb
inc
ins
call
cwde
inc
fld
inc
dec
and
mov
sub
mov
test
int
sub
inc
js
push
call
outs
dec
jae
loop
mov
jns
mov
popa
mov
ja
(bad)
lods
xchg
mov
fsubrp
popf
sahf
in
cmps
out
push
lock
pop
in
cmps
(bad)
xlat
test
xchg
push
fadd
loop
rol
arpl
and
add
ror
pop
sahf
in
push
ds
fisttp
cmp
mov
cmp
cmps
test
arpl
mov
loopne
cmps
in
scas
xchg
inc
mov
addr16
out
mov
add
cmp
cli
sbb
retf
push
xchg
(bad)
out
(bad)
mov
fst
popf
stos
fst
jbe
or
stc
mov
and
sub
dec
jecxz
dec
mov
xchg
cmp
add
dec
adc
scas
jp
icebp
shl
add
mov
pop
or
mov
jbe
fld
pop
shl
repz
(bad)
(bad)
in
cld
mov
sbb
mov
mov
sbb
mov
sbb
fisttp
pop
sahf
pop
sar
in
jbe
jl
rcr
mul
(bad)
add
dec
jno
(bad)
mov
adc
adc
(bad)
push
adc
sub
add
or
inc
xor
pop
and
dec
pusha
mov
mov
leave
xor
add
into
loop
out
rcr
mov
xchg
sub
clc
inc
sub
add
fsub
jnp
movs
(bad)
cmps
xchg
mov
jb
xor
stc
inc
fwait
mov
mov
jge
adc
mov
scas
sbb
clc
mov
lds
xor
mov
adc
jns
cmp
fist
cmp
jo
xchg
push
dec
pop
pop
inc
mov
stc
mov
mov
movs
clc
mov
jb
cs
jmp
sbb
sar
sbb
cwde
pop
sbb
cwde
sbb
push
ja
mov
inc
mov
dec
cmp
inc
sbb
xchg
mov
clc
sbb
pushf
test
sbb
mov
adc
cmp
sub
mov
add
sub
dec
push
or
and
in
scas
jb
cmp
cmp
fcmovbe
inc
stos
cmp
mov
fnstenv
push
lods
pushf
fs
(bad)
pop
int3
mov
jno
cmps
aas
movs
jg
push
pop
xchg
sti
add
mov
jb
mov
ret
mov
push
test
mov
mov
sbb
pop
sub
pop
pop
les
test
movs
data16
stos
xchg
cmp
arpl
jnp
sub
ins
xchg
mov
hlt
mov
cmc
sbb
mov
sbb
sbb
clc
mov
cs
repnz
sti
cmps
pop
jle
ja
inc
stc
sbb
loopne
into
shl
cmp
cmp
in
(bad)
int
cmps
dec
icebp
xlat
clc
sahf
xchg
in
in
xor
shl
out
jne
leave
(bad)
(bad)
cmps
sub
or
loopne
mov
(bad)
dec
jge
xlat
neg
shl
cs
loope
test
clc
adc
in
stos
and
aas
xor
dec
jecxz
adc
jecxz
shr
nop
xor
xchg
aas
push
movs
sbb
add
xor
pop
ins
mov
pop
arpl
(bad)
mov
loop
mov
xchg
aad
mov
push
xchg
mov
mov
and
sbb
push
ss
adc
call
inc
and
jae
push
sar
jo
pop
cmp
jbe
dec
fistp
pop
sbb
stos
ja
xchg
push
popf
mov
cmp
es
cmp
mov
xchg
pop
push
jns
mov
inc
push
push
mov
add
cmps
pop
xchg
inc
xor
jg
push
mov
sar
neg
pop
fwait
mov
call
xchg
jecxz
sahf
in
pop
fist
xor
pop
sbb
mov
mov
(bad)
fsub
outs
dec
push
ins
mov
movs
rcl
sar
sbb
mov
jae
inc
jbe
inc
rol
retf
lea
stos
xchg
xor
mov
addr16
dec
scas
sub
js
bound
push
call
cmps
fadd
mov
lea
jno
retf
xor
clc
cdq
pusha
jmp
lea
jp
mov
xor
arpl
add
movs
or
add
lds
fidiv
mov
call
sub
adc
outs
mov
out
popa
inc
mov
(bad)
js
push
xor
arpl
enter
dec
jno
mov
jns
icebp
or
or
xchg
push
xlat
xchg
push
mov
movs
adc
call
and
lock
imul
into
(bad)
pop
retf
xor
in
repz
(bad)
sbb
xlat
jno
cmp
add
xor
sbb
push
aad
(bad)
jge
pushf
pop
adc
cdq
mov
add
pushf
inc
push
cmps
sub
push
test
fistp
mov
es
retf
push
fs
sub
mov
inc
dec
fadd
sbb
lods
sbb
ins
push
into
dec
sub
and
jno
(bad)
adc
dec
inc
cmp
clc
arpl
retf
movs
jne
in
icebp
adc
mov
data16
adc
imul
inc
data16
mov
daa
cdq
mov
adc
jg
mov
nop
mov
mov
clc
sbb
mov
adc
mov
ror
retf
retf
ret
fldenv
dec
and
movs
mov
and
sbb
fdiv
scas
pop
(bad)
(bad)
(bad)
mul
call
pop
fwait
dec
scas
ficom
sbb
and
popf
mov
or
pushf
push
xor
and
adc
adc
adc
lea
and
push
cli
sbb
jle
test
jle
fst
sbb
and
add
xchg
(bad)
xchg
ror
push
sub
xchg
les
dec
add
ret
repnz
dec
pushf
mov
rcl
pop
adc
out
jmp
mov
stos
mov
lea
fdivr
icebp
xchg
inc
out
inc
(bad)
fnstcw
fadd
inc
mov
cmp
mov
fst
jp
(bad)
mov
xor
or
push
and
shl
jmp
rcr
stc
push
mov
cs
test
jecxz
enter
sub
outs
cmp
leave
fld
dec
js
ja
mov
call
mov
adc
rcl
xor
leave
inc
pop
mov
aad
xor
lds
xchg
mov
xchg
and
test
sub
les
in
lock
clc
sahf
inc
fcmovnbe
test
cmc
aam
stos
push
repz
jo
je
test
cdq
xor
test
inc
sub
xchg
xor
call
dec
popf
(bad)
sahf
loop
mov
in
pop
mov
push
je
in
in
push
inc
sub
movs
and
(bad)
sar
push
xlat
rcr
ins
outs
mov
dec
sbb
push
mov
xchg
lods
int3
loopne
stc
imul
push
cmp
stc
xor
clc
or
dec
movs
and
and
xchg
inc
add
mov
xchg
mov
scas
or
push
xchg
test
mov
dec
aad
jecxz
and
ja
cmp
sbb
dec
jo
jnp
sub
mov
call
add
and
xchg
sti
dec
dec
jo
xor
jb
and
and
add
jae
add
mov
(bad)
adc
stos
enter
cmp
mov
shr
in
push
adc
jbe
dec
add
cmp
cdq
or
movs
push
data16
pop
inc
pop
test
dec
sub
push
jb
mov
test
sub
cwde
outs
ficom
adc
je
xchg
fiadd
scas
sbb
adc
mov
ins
add
or
rcl
out
ins
je
mov
test
jge
mov
push
jle
jle
jno
push
cmc
in
out
js
movs
sub
and
ss
xor
sbb
ins
test
int3
stos
fisub
mov
cmps
mov
sahf
ror
or
scas
popf
inc
iret
xchg
add
test
mov
sbb
xchg
sti
add
jbe
inc
xor
mov
sbb
inc
inc
out
lods
jmp
jnp
or
xor
stos
mov
sbb
out
movs
xchg
mov
ins
outs
cs
in
push
(bad)
not
aaa
mov
inc
inc
push
ja
cmp
sar
(bad)
out
movs
jl
push
push
push
xchg
fnstenv
add
jnp
mov
les
adc
mov
mov
neg
add
sub
xor
push
add
jg
out
inc
inc
loope
mul
(bad)
les
cmps
ins
push
loop
add
aad
or
xor
or
mov
mov
push
stos
inc
jae
retf
out
pop
mov
fmul
push
xchg
push
fisub
sbb
add
xchg
or
jmp
dec
cmp
inc
dec
pop
jno
push
je
mov
clc
popa
push
dec
js
adc
cwde
push
test
sbb
add
ja
fldcw
retf
mov
(bad)
lock
das
jecxz
xchg
mov
(bad)
fbld
dec
dec
mov
stos
mov
add
imul
lock
sbb
mov
das
dec
not
addr16
jg
popf
imul
xchg
(bad)
out
test
iret
sub
(bad)
fisttp
xor
cmp
enter
or
inc
xor
cli
xor
and
je
dec
or
test
ret
mov
int
add
test
ins
ret
dec
loopne
xor
mov
out
adc
xchg
mov
sbb
push
sub
mov
sub
rcl
pushf
sub
jmp
push
(bad)
sbb
shl
fild
js
aad
pushf
add
mov
outs
jge
das
retf
push
jmp
xor
inc
test
inc
mov
and
adc
test
nop
and
and
sbb
add
push
int3
ffree
loop
mov
aad
pop
pop
cmp
and
adc
enter
cdq
and
dec
mov
xor
shr
ins
jns
push
inc
or
retf
jecxz
popf
push
push
jecxz
dec
pusha
sub
mov
(bad)
pop
xor
add
imul
fldenv
add
hlt
pop
in
repnz
nop
iret
aam
xchg
sub
add
jb
mov
cmp
fcom
test
cmps
lods
test
pusha
movs
push
dec
pop
ins
test
lods
mul
stos
adc
outs
cmp
lea
mov
xor
xchg
mov
inc
inc
add
retf
fisttp
cmp
aam
cmp
dec
mov
aas
dec
cli
test
mov
mov
jnp
pop
push
sbb
or
(bad)
rol
ficomp
jb
or
dec
jmp
jno
imul
int3
mov
mov
dec
nop
mov
int3
test
mov
popa
inc
(bad)
push
int3
std
in
mov
sbb
mov
ins
in
outs
sub
mov
pushf
lea
jns
outs
jns
xor
and
adc
int3
sub
mov
add
mov
push
dec
out
das
add
or
mov
scas
xor
out
adc
scas
sbb
mov
mov
dec
lea
out
inc
mov
push
and
cmp
jmp
mov
test
fcom
pop
mov
(bad)
imul
mov
out
adc
sbb
test
fnstsw
or
test
ja
test
retf
add
cmp
jmp
push
loopne
adc
mov
fadd
pop
add
push
mov
push
cmc
xor
dec
movs
stc
sbb
and
nop
in
adc
push
icebp
idiv
clc
fistp
adc
or
jne
adc
and
mov
adc
add
jno
inc
(bad)
sbb
adc
out
push
pop
push
in
outs
xchg
test
fsubr
mov
adc
sub
adc
retf
sub
ins
addr16
imul
test
xor
pop
lods
add
jmp
fld
jmp
(bad)
or
mov
mov
hlt
inc
(bad)
aas
push
cwde
xchg
jle
in
cld
add
cmp
jnp
add
jnp
repz
dec
std
les
adc
jne
xor
movs
push
pop
jne
mov
mov
and
popa
ss
pop
frstor
jo
pop
add
inc
push
and
fwait
mul
scas
and
fcom
inc
ret
aam
push
lock
xchg
dec
stc
lock
(bad)
push
(bad)
jmp
into
lea
sar
and
fs
adc
mov
popa
mov
push
cwde
ficomp
shr
stos
dec
sbb
(bad)
in
sar
xor
into
stos
gs
dec
and
push
cmps
xchg
shl
daa
mov
push
add
mov
(bad)
nop
adc
mov
jecxz
aam
popa
(bad)
repnz
cmp
fwait
into
or
neg
dec
stos
adc
jbe
das
data16
in
jmp
xor
sbb
pop
popf
arpl
sub
cmp
bound
call
mov
jecxz
movzx
inc
adc
xchg
cs
adc
dec
mov
mov
cmc
setne
sbb
out
test
ret
cld
inc
in
test
stc
cmc
jo
mov
mov
stos
daa
pop
add
or
and
scas
and
je
out
push
and
and
sub
test
mov
or
mov
adc
scas
out
cli
xor
aaa
or
inc
retf
in
pop
xchg
icebp
cmp
mov
outs
lea
mov
popa
mov
pushf
push
xchg
and
dec
add
and
mov
inc
ret
add
or
xor
cmp
mov
retf
frstor
sti
outs
cmovnp
popf
xor
xchg
loope
mov
sbb
ret
hlt
push
sub
mov
adc
xchg
add
adc
mov
inc
cmps
or
lds
retf
mov
adc
jp
push
sub
xor
mov
outs
aas
gs
pop
mov
repnz
jo
(bad)
sub
loope
pcmpeqd
out
xchg
pop
outs
sbb
inc
jno
jmp
sbb
dec
jno
push
mov
stos
and
sub
dec
jp
sbb
mov
dec
sub
cmps
add
aam
test
push
outs
rcl
outs
outs
add
je
lods
mov
arpl
add
adc
pop
fdiv
test
mov
xor
fs
mov
cmp
inc
inc
mov
(bad)
test
sbb
xchg
pusha
fstp
mov
cmp
pop
les
enter
sbb
mov
adc
mov
inc
add
jnp
leave
sub
xor
mov
dec
lds
xor
xchg
stos
sbb
pop
sub
sub
push
movs
jae
out
jo
and
aad
test
pop
imul
repz
xor
mov
ss
rol
stos
jge
icebp
xor
cmp
enter
and
(bad)
sbb
push
es
movs
aad
mov
outs
sbb
sub
in
sbb
mov
jbe
add
in
adc
shr
leave
pop
jl
(bad)
daa
push
mov
(bad)
shl
js
out
in
pop
aaa
(bad)
retf
(bad)
hlt
ins
out
loop
or
rcl
xor
arpl
nop
xchg
rcl
mov
mov
mov
daa
fist
das
add
sub
mov
cld
push
repz
mov
jno
push
mov
ins
mov
jb
les
and
mov
into
addr16
mov
outs
jmp
sbb
cdq
test
sub
bound
rcr
mov
into
sar
push
xor
add
mov
js
sub
shl
ss
pop
fisttp
(bad)
not
loop
stos
in
loope
push
push
sahf
xchg
outs
jmp
fcomp
lock
cmp
mov
mov
rcl
popf
inc
or
jns
cmp
dec
mov
iret
popf
inc
loopne
sub
or
cmp
xor
cwde
jp
shl
rcl
cmps
push
xchg
in
idiv
jb
int
add
lods
jae
inc
dec
sub
fst
mov
loopne
adc
and
mov
mov
cmps
nop
sbb
scas
mov
ds
test
push
push
inc
ret
or
outs
and
cmp
dec
cli
push
addr16
pushf
or
jae
adc
xchg
adc
fadd
and
test
or
pop
mov
adc
xor
add
push
xor
pop
scas
sbb
jl
adc
sub
in
retf
fist
sbb
pmaxub
add
cmps
jge
nop
push
mov
sub
popf
pop
or
sub
call
jo
mov
fs
jmp
mov
sahf
(bad)
test
ds
or
les
and
jae
add
(bad)
clc
call
jo
xor
sub
ss
push
xchg
hlt
xor
jb
inc
dec
push
pop
push
loope
aam
or
push
cmps
jle
and
cmp
xor
xchg
shl
sbb
jo
dec
imul
dec
cmp
pop
test
mov
mov
inc
mov
shl
adc
push
sub
mov
cmp
call
jp
sub
popf
shr
xchg
je
out
fcom
mov
xor
aad
mov
push
pop
out
test
js
test
ror
in
mov
add
movs
jnp
mov
in
loopne
inc
fcomp
xor
inc
push
aaa
ss
fs
clc
adc
ja
ins
pop
push
fcom
xchg
out
aam
ja
fidivr
mov
(bad)
pop
push
xor
shl
xor
push
imul
dec
not
push
sbb
into
or
push
mov
jecxz
or
xor
aaa
add
dec
call
xor
test
and
adc
push
xor
mov
sub
sub
das
jo
inc
push
ins
jbe
inc
pop
in
icebp
xor
dec
loop
in
test
xchg
adc
push
js
popa
pop
and
mov
adc
mov
test
dec
cdq
ffree
jo
dec
in
xchg
xchg
sbb
out
rcr
stos
fsubr
cmps
pop
jl
retf
fsub
stos
cmp
movs
pop
arpl
scas
push
mov
push
mov
or
mov
inc
sub
cmp
movs
sub
sbb
xor
xchg
sti
dec
inc
es
bound
in
rcr
sbb
lods
push
mov
sahf
out
jno
popf
sub
pop
out
fisttp
jmp
test
stos
es
icebp
mov
ret
xor
xor
cmp
xor
cmp
pop
in
mov
sar
cmc
ins
loopne
pop
or
sub
fwait
cs
retf
pop
pop
cdq
in
xchg
js
fisttp
cmp
and
leave
imul
rol
push
mov
lods
mov
pop
add
loope
nop
jge
push
icebp
into
(bad)
push
mov
lea
stc
xchg
mov
outs
add
bound
lods
jb
test
mov
lods
cmc
dec
and
inc
pop
cli
sbb
out
hlt
mov
sub
push
xchg
in
fcomp
int3
jae
ins
js
es
fld
call
pushw
cld
scas
sbb
and
xchg
cmp
fmul
fs
nop
(bad)
sub
shl
popf
jle
push
or
nop
mov
cs
daa
mov
mov
fisttp
int3
mov
xchg
adc
push
fcmove
jg
mov
xchg
jmp
inc
fcomp
push
mov
pop
pop
sub
push
xlat
and
add
fsub
rol
repz
cmp
xlat
(bad)
pop
cmps
jge
xchg
xchg
int
push
push
push
popa
cmp
push
xor
xchg
sub
pop
add
push
jp
rcr
jno
test
neg
mov
adc
xor
mov
xchg
mov
cdq
mov
pop
(bad)
mov
call
mov
inc
cmp
sbb
dec
pop
mov
call
dec
pop
loop
or
stc
call
mov
pop
out
into
pop
int3
(bad)
lea
sub
stc
ret
mov
fist
fadd
cmp
cmp
nop
sub
mov
cwde
lods
(bad)
add
(bad)
icebp
xor
loop
cs
stc
fwait
push
push
retf
xchg
sbb
push
mov
add
and
push
or
pop
test
push
add
aam
mov
cmp
aam
and
mov
xchg
cli
adc
aaa
pop
pop
call
retf
imul
fcomi
sub
sbb
mov
ss
test
ret
inc
cwde
movs
sub
(bad)
mov
in
cmp
inc
mov
pop
sbb
ret
jbe
cmps
mov
ins
xor
sub
fist
mov
mov
or
mov
mov
add
push
(bad)
es
xchg
add
cmp
sti
jne
mov
fstp
push
retf
jns
push
(bad)
mov
(bad)
std
mov
or
inc
xor
dec
gs
jns
cwde
jo
mov
enter
aad
je
inc
mov
push
or
or
imul
add
push
jp
(bad)
push
es
fild
pop
sbb
push
mov
cs
fs
fild
ficom
mov
or
adc
and
popf
inc
pop
imul
xchg
push
inc
sbb
(bad)
xchg
push
push
sbb
mov
adc
inc
call
adc
loope
inc
and
push
dec
ja
call
stos
xor
(bad)
in
test
stos
push
add
scas
cmc
xchg
adc
pop
sub
push
sub
jb
xchg
cmc
stos
mov
fstp
test
fsubr
push
cdq
cs
jle
lods
inc
fisttp
push
test
push
cmc
inc
mov
adc
cmp
inc
inc
in
test
call
mov
cdq
data16
cmps
mov
pop
xor
jmp
lock
xchg
xchg
shl
js
(bad)
pop
adc
ret
xor
mov
mov
pop
mov
test
mov
fs
xor
xchg
shl
das
pop
rcr
mov
(bad)
or
or
stc
xchg
adc
aam
(bad)
mov
pop
nop
and
fs
inc
push
xchg
add
test
mov
jne
mov
ret
outs
pushw
mov
test
and
xchg
jnp
pop
cmp
std
xor
mov
pop
out
cmps
in
ins
inc
je
aaa
xlat
and
ja
fdiv
and
push
aaa
xor
fild
xlat
add
dec
pop
mov
inc
rcl
jb
test
call
and
mov
rcl
add
xchg
(bad)
test
adc
push
outs
and
push
add
xor
add
outs
in
sub
inc
cli
outs
std
fiadd
and
cli
out
dec
mov
call
jmp
mov
int
sbb
xor
out
xchg
ret
xchg
push
push
push
sub
std
and
rcr
(bad)
xchg
(bad)
(bad)
daa
jne
out
cdq
mov
or
aaa
push
lods
push
nop
lods
or
inc
sub
into
xchg
mov
mov
xchg
inc
inc
pop
mov
or
inc
cld
xchg
dec
cld
xor
aas
xchg
out
imul
sub
fst
rcr
or
addr16
add
mov
sbb
and
push
push
movs
lods
mov
rcl
sbb
out
test
aam
xor
pop
test
mov
stos
push
sub
jbe
adc
push
jne
mov
in
imul
sbb
cmc
mov
ins
and
fbstp
fimul
stc
(bad)
hlt
lock
pop
fucomi
jmp
ins
xchg
ret
movs
fnsave
pusha
xor
dec
or
push
dec
rcl
gs
outs
jp
iret
cmp
les
pop
pop
test
je
add
ret
xchg
inc
movs
xor
out
scas
sbb
lock
add
xchg
(bad)
out
ds
push
adc
out
inc
imul
fucomp
leave
aam
xor
dec
popa
push
or
inc
or
lock
add
movs
xor
arpl
sub
inc
aas
sub
nop
or
add
nop
sbb
jmp
ins
je
xchg
icebp
jle
xlat
add
out
cmp
xchg
cwde
dec
out
jb
cmp
mov
sbb
jl
retf
pop
mov
sub
(bad)
gs
sub
shr
pop
push
push
xchg
lds
xor
cmp
push
and
test
test
aad
iret
push
add
test
add
call
mov
ret
push
test
mov
push
fcom
mov
bound
jae
rcr
push
jmp
imul
not
mov
hlt
cmp
jmp
and
mov
sub
or
jne
push
aaa
das
arpl
jge
add
outs
lea
inc
stc
scas
jbe
cmp
aad
aad
xchg
adc
shl
and
jmp
test
xor
push
inc
cdq
xor
shl
cwde
enter
leave
xchg
add
fs
dec
mov
rcr
sar
sahf
push
mov
jmp
lea
jge
dec
xor
pop
mov
jb
push
ficom
ins
mov
xchg
push
popa
retf
inc
push
loope
add
mov
mov
imul
lahf
retf
cmps
add
mov
push
sbb
jne
jmp
adc
jmp
jecxz
adc
(bad)
lahf
or
jp
addr16
test
mov
inc
push
cli
call
pop
add
call
imul
sub
push
pop
mov
gs
aas
dec
out
loopne
mov
call
stos
mov
sub
jmp
push
in
lods
jae
ffreep
fdivp
jg
and
jecxz
inc
outs
push
addr16
lds
pop
cli
mov
cmp
jg
push
mov
(bad)
lahf
cli
sbb
pop
shr
cli
or
(bad)
mov
std
or
popf
pop
shr
inc
mov
movs
std
push
aas
jmp
icebp
aad
add
add
dec
pop
inc
push
mov
push
dec
jmp
xchg
lahf
inc
movs
push
cli
lods
std
mov
push
dec
jmp
xchg
out
sti
xchg
and
add
pop
std
data16
sahf
mov
jns
call
fsubr
mov
clc
mov
fcmovu
jno
cmp
sahf
jmp
push
lods
pop
inc
mov
adc
sbb
fstp
xchg
add
pop
and
(bad)
add
push
in
and
aam
aam
test
or
jns
push
adc
dec
add
add
cdq
sbb
movs
ins
fs
out
lods
or
jne
sbb
dec
(bad)
idiv
cmp
push
and
add
sbb
(bad)
fst
mov
add
(bad)
out
ja
mov
cmps
pop
leave
push
pop
xor
mov
(bad)
out
jg
rcr
add
add
leave
sub
mov
push
mov
mov
popf
jmp
mov
dec
dec
push
sbb
mov
arpl
lahf
aaa
cmp
jecxz
test
in
push
mov
pop
sbb
mov
adc
adc
xchg
daa
cwde
cmp
push
fsub
in
loop
sbb
ja
rcr
jnp
(bad)
or
outs
retf
sbb
xchg
mov
adc
jae
cmp
and
mov
das
je
vpcomub
cmp
test
movs
cmp
ja
aam
add
sub
fcomp
xor
push
cmps
mov
mov
enter
fs
retf
test
in
nop
mov
mov
and
inc
add
push
dec
push
adc
dec
push
dec
and
or
call
cmc
inc
inc
jmp
retf
mov
or
cwde
and
mov
rol
ficom
sub
hlt
loopne
fist
mov
xchg
imul
mov
mov
jb
pop
(bad)
jp
call
mov
jnp
xchg
out
push
xchg
cli
push
cli
mov
xchg
dec
fisub
mov
or
(bad)
pop
mov
mov
sub
lods
int3
push
retf
cmps
sub
inc
xor
ffreep
sub
mov
mov
jo
lods
aam
add
aas
cmp
aad
cmc
outs
inc
pop
je
xchg
mov
sbb
xor
std
fimul
(bad)
fild
in
push
aas
sub
push
inc
loopne
jmp
in
mov
inc
ins
das
cdq
xor
mov
std
retf
ins
movs
mov
sbb
cwde
loopne
ficom
sbb
jmp
clc
sbb
sbb
rol
inc
outs
ins
ss
mov
pop
inc
test
push
xor
fldenv
and
out
sub
jbe
loop
sub
mov
dec
mov
in
mov
loope
and
inc
lea
push
stc
dec
push
or
sub
dec
call
mov
loope
sub
adc
sub
pop
out
aam
xor
lahf
int
adc
je
rcl
fnstenv
imul
mov
pop
and
inc
movs
ror
cmp
movs
call
ret
sub
lahf
jge
cmp
imul
mov
inc
out
mov
mov
sbb
idiv
adc
cmps
pop
inc
sbb
jae
ins
xchg
inc
cmp
clc
inc
dec
sbb
idiv
pop
fisttp
sub
mov
(bad)
cld
mov
aad
and
lods
mov
and
jmp
mov
push
xor
rcl
cmp
out
fucomi
dec
fcmovu
dec
xor
ret
adc
dec
mov
and
cwde
cmps
out
dec
inc
push
xor
lods
adc
push
and
int
fs
cmp
sbb
and
sbb
push
push
xchg
and
inc
sub
mov
dec
jae
jnp
dec
sub
mov
add
jbe
sbb
lods
cld
gs
sbb
jnp
pop
test
xlat
cmp
jo
pop
adc
call
in
fldcw
loopne
aaa
jle
je
and
jecxz
push
stos
sbb
mov
xchg
jo
jmp
pop
jecxz
sub
mov
mov
add
je
dec
push
and
mov
add
sub
int3
cld
dec
aam
scas
and
sbb
aam
les
cmp
mov
sub
mov
fist
sub
ret
and
ins
fcomp
imul
xchg
jo
cmp
inc
mov
mov
xchg
xor
pop
aad
sub
mov
fucomi
retf
fsubr
and
push
ret
mov
adc
in
jne
xchg
xor
inc
jns
adc
or
adc
push
jne
push
xchg
sub
xor
sbb
loope
sbb
sub
push
and
inc
cmp
xchg
mov
mov
arpl
out
aas
sub
outs
into
in
cld
into
add
call
mov
dec
add
fs
jno
mov
jno
push
xchg
mov
lods
jnp
cli
ja
aas
shl
retf
push
inc
cdq
xor
stos
and
mov
adc
mov
mov
inc
push
cmp
and
addr16
sub
and
sub
and
clc
push
mov
jmp
ins
call
or
aad
push
fld
or
out
ins
xchg
out
repnz
cmps
inc
mov
daa
das
cwde
push
scas
aam
mov
mov
jmp
adc
je
add
ret
loope
fisubr
and
fldenv
js
(bad)
loope
push
ret
ror
enter
push
(bad)
mov
int3
jl
mov
cmp
adc
pop
push
icebp
clc
test
outs
cmp
out
fstp
shr
ss
inc
mov
data16
lods
aad
icebp
sti
xchg
mov
jge
xchg
clc
fcmovu
jmp
test
daa
sub
js
pop
mov
data16
leave
loope
lea
dec
and
rol
pextrw
inc
fwait
test
mov
loop
call
sbb
scas
or
mov
hlt
pop
dec
mov
inc
inc
inc
rcr
rcr
push
push
push
pop
dec
or
push
movs
sbb
loop
xor
adc
idiv
hlt
xor
mov
nop
push
sbb
push
cmps
push
fs
(bad)
xor
mov
(bad)
(bad)
adc
int3
or
or
mov
jmp
adc
int3
stos
push
and
mov
daa
out
outs
cmp
push
ror
lods
cli
jg
in
(bad)
cwde
clc
xlat
das
fdivr
xchg
icebp
cmp
scas
ja
jne
xchg
jne
loopne
popf
fdiv
mov
and
sbb
push
inc
test
rcl
test
xchg
sub
sbb
shr
outs
mov
vcvtdq2ps
dec
ins
jb
xor
mov
xor
mov
push
sub
rcl
out
add
adc
inc
cmp
xchg
push
stos
cwde
ins
out
jp
dec
out
xor
lods
mov
fwait
mov
and
mov
in
test
or
ja
lods
pop
jg
xchg
sbb
sti
test
sub
sub
retf
out
pushf
stc
adc
mov
fcomp
jae
mov
imul
mov
call
pop
pop
mov
popf
add
test
icebp
in
sub
jl
mov
and
mov
sbb
lock
stos
inc
adc
mov
cmp
and
xchg
sub
je
aas
in
jno
and
mov
mov
and
push
add
dec
nop
or
and
test
pop
xor
mov
out
sbb
inc
nop
xor
dec
mov
xor
cmp
pop
sbb
push
(bad)
scas
test
jge
lahf
sub
int3
rcl
enter
xchg
sahf
in
cmps
jecxz
les
test
in
je
add
addr16
inc
jnp
lahf
aam
fisubr
fs
mov
jp
cmc
cmp
mov
adc
and
lods
in
pop
dec
add
test
pop
pop
(bad)
bound
leave
jne
loopne
pop
xor
mov
ret
mov
out
(bad)
mov
aam
sbb
(bad)
pop
lea
stos
pop
and
sub
push
outs
inc
out
cmp
add
cmp
push
mov
or
out
and
jmp
add
adc
shl
jmp
repnz
xor
or
pop
cmp
dec
lods
scas
pop
(bad)
fcomp
lahf
sbb
daa
push
push
(bad)
xchg
xchg
mov
lods
sub
push
sbb
in
inc
dec
dec
ror
push
jl
test
adc
frstor
pop
pop
cmp
and
fldenv
pushf
sbb
jmp
mov
dec
mov
outs
out
cmp
mov
mov
push
dec
and
leave
ins
(bad)
je
push
stos
mov
imul
sub
inc
outs
inc
shl
cmp
inc
dec
push
cld
mov
push
mov
fwait
jno
xchg
xchg
cdq
cmc
ja
(bad)
movs
fistp
imul
mov
or
loopne
dec
fs
fnstsw
adc
xchg
(bad)
push
rcr
push
ds
fmul
mov
xor
sbb
outs
imul
or
repz
dec
inc
sbb
pop
pop
lea
stos
push
mov
cmps
push
int3
test
(bad)
stos
mov
push
xchg
mov
test
push
dec
and
scas
les
test
mov
loop
pop
push
sub
push
in
or
push
mov
mov
inc
mov
pop
cmp
mov
cmc
and
adc
in
mov
or
enter
int3
scas
or
call
cmps
lods
leave
cdq
inc
(bad)
out
loopne
push
outs
jne
leave
call
sti
jle
fstp
neg
jnp
jmp
jne
(bad)
(bad)
push
xchg
(bad)
(bad)
enter
inc
jge
popf
jae
cmp
fs
jno
mov
mov
call
aaa
sbb
imul
sbb
into
test
add
jnp
and
sbb
or
in
in
fcmovu
mov
sbb
pop
std
dec
sbb
mov
pop
push
retf
dec
jnp
inc
mov
dec
jo
cmp
fcomp
mov
sub
and
xchg
jo
xchg
sub
sbb
fcmovu
inc
mov
pop
pop
or
js
xchg
push
mov
ins
mov
mov
sub
adc
int
retf
repz
push
cmp
sub
aaa
jecxz
mov
je
ficom
imul
scas
fwait
test
fst
fwait
or
loopne
imul
cwde
das
mov
sti
sub
shl
sti
push
js
mov
cmps
xchg
jmp
rcr
jbe
(bad)
push
je
movs
push
retw
sbb
dec
adc
movs
outs
cmps
push
fld
mov
push
or
pusha
outs
mov
aam
retf
neg
outs
sbb
pop
jl
pusha
inc
sub
mov
ss
xchg
pushf
fsub
push
ins
mov
outs
pop
or
add
push
out
and
cmp
imul
scas
jge
inc
or
pop
fsubr
sub
in
dec
mov
rcl
test
jge
fadd
adc
ins
push
cmp
cmps
out
aaa
inc
add
fstp
xor
rol
pop
jg
lods
mov
mov
enter
and
jmp
out
jnp
test
or
jbe
pop
arpl
ror
adc
mov
sbb
mov
xor
div
mov
les
or
int
push
push
(bad)
cld
sub
pushf
sbb
enter
jecxz
lahf
ins
sub
mov
aas
(bad)
cs
add
sub
nop
add
adc
arpl
and
adc
sub
sub
mov
sbb
or
pop
iret
cdq
(bad)
inc
mov
add
mov
inc
add
jb
retf
test
shl
shl
mov
pop
jmp
popf
or
xchg
add
fsubp
stos
cmps
(bad)
(bad)
sub
sahf
mov
mov
pop
sbb
jb
push
sbb
aam
out
daa
cmp
xchg
jecxz
loop
xchg
dec
int3
and
xchg
into
sub
jl
sar
cmp
repnz
fistp
and
or
push
sub
push
cwde
sbb
push
bound
mov
sti
test
and
pop
pop
dec
std
and
push
popa
mov
in
shl
mov
jae
lahf
push
mov
aaa
sub
shr
fbstp
call
retf
dec
iretw
mov
popa
push
aad
mov
(bad)
out
jge
nop
mov
test
or
jmp
pop
jp
and
loopne
mov
or
mov
mov
ss
inc
(bad)
lahf
add
xor
and
and
xchg
in
push
mov
fcom
rcr
inc
adc
mov
mov
shr
push
xchg
push
shl
dec
xchg
bound
pop
cmp
(bad)
sub
push
cmp
jnp
hlt
xor
imul
cdq
lods
sub
add
fild
and
stos
aas
fild
cmp
ror
movs
xchg
or
or
mov
cmp
stos
mov
cmp
xor
idiv
inc
dec
xor
and
repz
fisttp
movs
inc
sti
mov
dec
adc
and
add
fdivr
mov
out
xor
fs
popf
in
sar
mov
movs
add
pop
push
ret
pop
and
cmps
scas
dec
add
cmp
in
ds
inc
dec
mov
aam
or
jle
cmp
push
pop
ss
mov
pop
mov
adc
repz
int
addr16
push
fs
xlat
mov
cmp
ins
mov
aam
aam
xchg
or
ins
mov
aam
pop
jbe
jae
fst
add
pusha
in
push
test
imul
leave
push
dec
fidivr
mov
dec
mov
inc
not
call
xchg
out
fldenv
out
mov
sbb
adc
xchg
xchg
xor
in
mov
lods
sub
sub
or
sub
mov
test
in
jbe
mov
sub
mov
add
js
stos
sub
in
outs
(bad)
cdq
adc
cmp
sar
xchg
jle
shl
inc
xor
push
cld
ret
pop
add
jle
(bad)
in
jnp
aaa
push
mov
mov
xor
out
sub
xor
(bad)
adc
cmp
ror
and
retf
xchg
pushf
jb
popf
xchg
mov
je
cmp
sbb
dec
xor
xchg
adc
push
jg
(bad)
shr
push
cmp
adc
shl
cmp
ret
sbb
xchg
jmp
mov
movs
adc
push
dec
push
movs
xchg
cs
push
sbb
nop
xchg
inc
add
mov
sbb
mov
add
sub
ds
add
adc
or
es
sub
mov
pop
mov
push
mov
xor
sbb
xchg
or
xor
loope
xchg
aam
mov
outs
pop
push
lods
add
sub
test
pop
movs
outs
aas
test
std
push
daa
sub
aam
in
lods
xor
ret
add
add
int3
jae
arpl
pop
pop
add
xchg
icebp
mov
in
push
and
in
or
jp
xchg
dec
daa
sbb
inc
aam
jae
mov
pop
cmp
mov
mov
mov
pop
(bad)
jge
mov
ret
sbb
stc
sbb
mov
sbb
or
sub
sub
xor
adc
sub
sub
mov
pop
addr16
pop
bound
xor
push
mov
adc
adc
push
(bad)
sbb
pop
int3
inc
sahf
mov
or
sbb
sub
dec
cmp
test
vmwrite
in
je
div
sti
pand
cmps
inc
test
in
add
stos
fisubr
ret
sub
cmp
push
and
aad
sub
dec
dec
(bad)
xor
ss
ins
mov
and
leave
push
push
mov
add
adc
sub
in
lahf
xchg
fsubrp
sahf
pushf
xchg
arpl
ret
mov
icebp
cmps
clc
pop
and
rcl
inc
cmc
push
fwait
ret
test
pop
aam
xor
jmp
rol
mov
fwait
xchg
rcl
ret
adc
mov
sbb
mov
test
sbb
popa
push
jl
sbb
jmp
rol
repz
test
inc
adc
mov
xchg
das
outs
adc
pop
mov
sti
push
aam
cmp
cmp
shl
cmp
retf
dec
fisubr
add
in
push
ret
mov
inc
es
pusha
dec
cwde
push
(bad)
ficomp
les
into
lods
xchg
daa
imul
mov
mov
test
sub
loop
js
popf
scas
jp
dec
aas
or
jp
je
imul
or
cmp
push
or
jbe
mov
fwait
xchg
jg
xor
in
adc
fist
and
push
inc
lods
jmp
inc
mov
outs
fs
ds
pushf
shl
cmp
aad
xchg
or
cmp
and
mov
cmp
or
jmp
es
shl
retf
outs
xchg
or
mov
outs
test
push
mov
sahf
dec
lods
dec
arpl
add
xor
sub
xchg
and
push
and
xor
imul
add
xlat
or
popf
rol
jg
sub
pop
and
push
ds
mov
imul
jb
pop
cmc
sbb
bound
pusha
inc
dec
aaa
cmp
sub
jo
scas
aas
out
aad
xor
push
idiv
aad
dec
retf
pusha
cs
adc
mov
sbb
and
out
outs
sbb
mov
mov
push
push
mov
lock
enter
frstor
(bad)
shl
fist
movs
call
dec
ins
xor
mov
icebp
inc
sbb
leave
lahf
jno
inc
fisttp
arpl
out
gs
mov
cmp
adc
adc
sub
stos
sub
push
sbb
sbb
mov
nop
(bad)
and
jne
inc
or
jecxz
(bad)
mov
aas
bound
int
iret
jns
pop
dec
cmp
sbb
or
cmp
dec
xchg
add
leave
inc
inc
dec
sub
mov
add
mov
sub
lock
or
push
outs
mov
cmc
or
mov
inc
and
push
lods
cs
add
test
fst
ins
sbb
fistp
int3
jnp
ficomp
xchg
in
(bad)
retf
push
push
dec
sbb
cmc
or
les
loopne
pop
add
and
adc
xor
push
add
fucom
(bad)
push
(bad)
or
bound
imul
push
jmp
fdivrp
not
shr
dec
or
mov
or
enter
lock
retf
(bad)
out
repnz
cmp
sbb
inc
cmp
mov
cmp
mov
in
mov
pop
adc
mov
adc
jno
sub
add
rcl
outs
push
imul
or
lea
test
and
aam
push
ss
adc
ficom
xor
inc
test
out
cmp
stc
movs
cmc
out
dec
xor
sub
out
mov
push
pop
hlt
cdq
push
cmps
lods
push
daa
std
inc
fnstcw
push
das
inc
inc
jg
jp
ror
mov
mov
hlt
outs
lds
aam
ja
inc
aas
jae
ja
movs
pop
pusha
test
pop
sub
scas
xchg
add
mov
inc
adc
std
sbb
cld
or
cmc
pop
jne
mov
mov
push
mov
cdq
push
addr16
inc
test
fld
sbb
loop
xchg
push
mov
adc
inc
out
cmp
std
mov
sti
inc
jmp
nop
aas
lods
ja
addr16
not
sbb
js
movs
jmp
mov
jno
adc
push
cdq
add
sbb
cld
push
mov
jle
pop
mov
xor
dec
jbe
cs
daa
mov
jl
(bad)
rcl
(bad)
mov
or
rcl
jnp
and
mov
dec
inc
or
adc
dec
dec
push
inc
or
and
out
cmps
and
adc
pushf
xlat
fst
sub
sub
sub
lea
push
dec
cmps
sub
and
xor
adc
xlat
arpl
jb
ins
lea
xor
inc
scas
add
xchg
pop
mov
cwde
push
in
pop
or
icebp
add
sbb
cdq
retf
lea
push
int3
js
ss
pop
enter
ja
ins
inc
push
push
outs
rcl
out
push
mov
mov
rol
outs
jne
loopne
pop
pop
mov
xor
aaa
inc
in
xchg
fstp
loop
movs
pop
mov
pop
xchg
jmp
jae
jl
pop
dec
xor
jecxz
add
es
inc
and
ss
test
xor
adc
rcr
mov
add
inc
mov
mov
jmp
xor
pop
mov
pop
call
dec
rcr
cmp
add
cmp
dec
stc
add
and
jnp
int
cmps
int3
xchg
enter
pop
fldcw
int
mov
(bad)
or
mov
mov
gs
mov
or
popa
push
inc
mov
jno
cmp
mov
pop
enter
cdq
cmps
dec
stos
and
ins
rcl
inc
jge
call
shl
xor
dec
mov
xchg
xchg
sbb
test
scas
push
sbb
sbb
(bad)
or
repnz
cs
loop
adc
jne
fmul
sub
movs
add
mov
je
mov
mov
or
mov
outs
dec
hlt
out
fadd
aam
inc
cmc
pusha
inc
fwait
push
pop
sub
and
inc
jb
in
mov
sub
add
test
or
(bad)
leave
xor
pop
xor
in
loop
nop
imul
jp
cmp
xchg
or
add
jnp
test
pop
(bad)
cld
mov
xor
xor
lods
jb
jo
cmps
push
arpl
and
out
xor
sar
xor
add
ficomp
inc
mov
cdq
sub
or
les
test
mov
xchg
test
adc
mov
movs
je
and
sbb
into
jp
jbe
and
pop
lods
lods
int3
xchg
push
push
lods
lods
inc
adc
sub
addr16
and
movs
retf
xchg
mov
jecxz
imul
xchg
add
push
aam
test
xor
imul
dec
or
inc
jg
jmp
and
icebp
aam
add
stos
shl
pop
pop
fwait
jp
inc
movs
mov
push
imul
xchg
dec
sub
adc
or
gs
dec
add
repz
push
cmp
or
sti
xchg
aas
jne
xor
adc
into
cmc
inc
push
cmp
dec
in
stos
push
mov
pop
xchg
jae
test
test
adc
mov
mov
loopne
adc
or
pop
dec
mov
mov
mov
cmc
sbb
xor
xor
xchg
inc
int3
jae
fist
lods
adc
dec
or
jnp
and
push
xchg
movs
xchg
sbb
push
bound
sti
mov
jl
fstp
mov
jne
fs
fcomp
mov
ins
dec
(bad)
add
ret
dec
in
outs
jno
xor
adc
jno
push
push
inc
dec
dec
or
mov
adc
test
ret
mov
gs
jmp
stos
push
ret
pop
dec
fnstcw
jecxz
std
shl
mov
cmp
cld
sub
or
xchg
push
pop
out
repnz
(bad)
dec
xchg
scas
sbb
es
test
or
mov
or
push
les
and
mov
sti
dec
inc
mov
rcr
xor
aam
add
jge
cmp
rcl
cwde
fwait
sti
inc
sbb
push
xchg
je
ficom
in
xchg
push
mov
aad
rol
hlt
int3
or
dec
neg
jne
(bad)
mov
test
loopne
(bad)
push
jbe
mov
sbb
out
lods
sub
xchg
ret
shl
movs
dec
dec
loop
movs
(bad)
in
imul
push
cmp
jmp
bound
cmps
icebp
rol
shr
sbb
inc
fs
rcr
fld
aas
test
mov
(bad)
mov
fs
or
inc
push
lods
bound
add
add
dec
mov
xchg
or
in
adc
add
and
sbb
push
ds
xor
add
xor
jb
in
cmp
mov
xchg
imul
sub
push
jo
fst
push
cmp
je
mul
inc
jo
aad
inc
loop
cmps
sub
ins
ss
inc
push
sbb
add
mov
or
cld
dec
push
xchg
jbe
rcl
or
pop
cmps
and
xchg
xchg
mov
gs
or
inc
jns
data16
shr
add
push
test
es
mov
movs
sbb
inc
mov
imul
mov
out
aam
or
pop
int3
lods
popa
sbb
test
adc
je
add
movs
xor
mov
mov
(bad)
rol
sbb
pop
jmp
ror
mov
icebp
cmps
and
cmp
enter
xchg
sbb
inc
movs
mov
js
sbb
or
rcl
clc
jns
pop
cs
aam
and
xlat
or
hlt
rcr
jnp
cmps
inc
jbe
jge
sar
add
dec
in
shl
scas
lds
push
cmps
nop
je
xlat
add
scas
stos
clc
jecxz
mov
or
dec
fcomp
test
mov
sbb
cmps
cmps
and
out
ret
mov
lea
add
xchg
data16
dec
in
ja
or
scas
fs
rol
(bad)
fadd
sbb
cmc
inc
adc
aad
pop
fild
or
pusha
lahf
mov
je
cmp
das
and
add
mov
popf
inc
leave
ins
push
cmp
fst
jnp
jp
das
in
jmp
sbb
or
push
xor
in
shl
push
ret
sub
cmp
xchg
xor
lea
enter
retf
ins
mov
fwait
cmp
dec
push
test
out
jmp
jecxz
mov
add
push
dec
(bad)
dec
dec
push
push
fmulp
popf
js
lods
jmp
mov
aad
inc
shl
repnz
les
pop
push
loopne
mov
movs
inc
cmps
iret
in
xchg
neg
rcl
(bad)
out
mov
cmp
call
fwait
sar
ins
mov
jo
mov
pop
add
ficom
adc
aad
fstp
lea
add
jae
push
inc
pop
mov
xchg
repz
xchg
dec
pushf
lea
push
js
jae
test
sbb
and
push
xchg
pop
add
cmps
jno
aas
push
push
cmc
iret
jecxz
int
lahf
adc
inc
push
pop
shr
sub
jecxz
inc
sbb
mov
test
test
push
shl
inc
fiadd
push
dec
scas
mov
lds
inc
retf
jmp
push
rcl
out
xchg
rcr
data16
fld
mov
dec
add
or
push
sbb
xchg
movs
scas
pop
rol
test
ror
xchg
or
xor
jo
sbb
inc
shr
pop
push
add
and
call
add
fwait
in
or
and
int
xor
xor
hlt
hlt
cmp
leave
mov
jmp
ins
mov
lock
sar
dec
jns
fnstcw
scas
fistp
mov
add
stos
xchg
cwde
shrd
arpl
daa
dec
add
inc
imul
(bad)
pop
xor
push
adc
aam
push
mov
test
aaa
rol
pop
iret
push
mov
hlt
xor
popf
inc
jne
and
pop
ret
movs
scas
pop
mov
rcl
adc
jb
jae
nop
fadd
aam
mov
or
inc
fisttp
lods
sbb
push
je
xor
lods
call
xchg
xor
mov
stos
push
push
int3
retf
sbb
scas
mov
gs
adc
dec
arpl
out
dec
shl
clc
(bad)
mov
jae
(bad)
fsubrp
cld
ror
mov
push
sbb
jns
push
cli
punpckldq
push
stc
xchg
cmp
mov
sub
out
mov
sub
repnz
out
sub
jno
fucomi
cs
dec
xchg
mov
push
enter
push
fimul
das
je
clc
std
push
test
pushf
pop
adc
test
sbb
adc
in
cmps
test
mov
imul
push
xchg
xor
mov
repnz
mov
mov
jo
not
mov
es
es
xchg
xchg
add
(bad)
into
pop
jmp
rcl
dec
repz
imul
rol
push
push
mov
pop
mov
push
mov
ds
les
stos
jns
and
mov
shr
test
mov
push
xor
test
mov
sub
outs
dec
ss
push
addr16
jl
not
jp
xlat
dec
(bad)
jmp
aam
inc
in
add
mov
std
dec
(bad)
aas
jno
pushf
sbb
jmp
pop
push
sahf
outs
call
pop
xor
mov
imul
ret
sub
cli
push
int
inc
das
add
inc
int3
adc
pop
mov
rcr
outs
in
inc
imul
or
jle
mov
test
sbb
pusha
pop
or
xor
inc
cmp
jmp
sub
iret
sbb
and
scas
inc
add
test
stos
(bad)
fild
jle
sub
dec
cmp
fwait
out
jno
cs
imul
inc
sbb
pop
sub
push
or
add
pop
xor
mov
std
ror
push
pop
xor
xor
dec
sbb
jo
jecxz
cmp
mov
jle
jo
in
test
and
xchg
push
shr
inc
sub
pop
sti
xor
fild
lods
xchg
dec
out
jbe
cmp
fmul
inc
sbb
sbb
pop
into
cmp
pop
mov
sbb
inc
push
cwde
xor
and
sbb
and
inc
mov
lea
xchg
inc
push
sbb
es
sbb
pop
les
lods
test
sbb
inc
mov
and
sub
mov
cmc
test
mov
(bad)
dec
cmps
fisttp
test
jns
je
xchg
lods
aad
inc
fdivr
cmc
mov
push
pushf
cdq
or
cmps
cmp
movs
ins
mov
xchg
xor
push
scas
rol
mov
loopne
cmp
xor
arpl
mov
rcl
mov
push
push
lods
sub
or
mov
mov
jns
leave
push
cwde
xchg
lods
pop
sub
and
push
mov
adc
sbb
stos
push
jge
fcomp
mov
xchg
inc
mov
xor
outs
enter
mov
inc
popa
xchg
add
xor
xor
sar
pop
push
idiv
sbb
clc
xchg
inc
in
outs
jle
fucomip
fnstcw
jb
jmp
xchg
fwait
pop
(bad)
into
data16
cmp
and
movs
sbb
fs
and
xchg
addr16
pop
pop
cmp
mul
jl
(bad)
in
pusha
ffreep
pop
dec
test
sub
test
add
and
dec
mov
push
ret
xchg
retf
jecxz
dec
add
mov
push
or
aad
sub
outs
mov
mov
aam
test
mov
mov
xchg
mov
adc
mov
iret
adc
dec
shl
aaa
mov
int
cmp
and
xchg
pop
nop
and
inc
cmpxchg
pop
xchg
leave
mov
ret
dec
out
sub
dec
push
pop
jne
je
push
inc
jo
push
cmp
mov
movs
cdq
adc
mov
addr16
pop
dec
shl
dec
jo
ret
fsub
fcmovne
shl
push
adc
sub
push
fstp
and
mov
xor
shl
je
dec
sbb
sub
sbb
sub
fdiv
mov
jnp
sub
out
adc
not
and
push
aad
push
inc
sbb
test
dec
xlat
pop
ss
das
pop
dec
and
jnp
pop
bound
jmp
sub
push
cli
push
cmp
int
mov
vrsqrt14ps
and
rcl
xchg
mov
cmp
jp
jecxz
ins
mov
call
cwde
or
retf
push
shl
iret
inc
aad
std
jmp
imul
fimul
lahf
in
cmp
arpl
sub
clc
inc
mov
std
aad
mov
jnp
or
dec
mov
sbb
jnp
jle
or
ins
lds
push
push
jmp
or
sbb
jg
jae
and
lea
pop
sar
or
not
js
in
cmps
push
icebp
push
(bad)
inc
ret
and
sbb
mov
fsub
int3
aam
push
mov
push
adc
in
ss
dec
call
xchg
mov
inc
jb
adc
stos
or
sbb
mov
push
sbb
push
pop
(bad)
in
push
xor
sbb
mov
popa
inc
dec
push
jae
movs
xchg
fwait
inc
add
mov
inc
jmp
xor
push
cwde
cmp
sub
cmp
sbb
push
(bad)
les
sar
(bad)
jmp
icebp
ret
sbb
add
jns
loop
jnp
sub
pop
retf
jp
fsubr
hlt
(bad)
cmps
mov
(bad)
icebp
dec
add
ins
pop
repnz
je
call
push
sub
mov
xchg
test
xchg
jp
mov
iret
addr16
push
mov
xchg
rcr
ins
dec
cmp
add
lods
and
or
out
ins
or
push
mov
cld
(bad)
popf
aaa
jge
imul
call
sub
cmp
loopne
xor
cmp
mov
push
adc
mov
fisttp
dec
inc
sub
push
fmul
push
and
adc
add
jbe
inc
mov
lahf
pop
nop
inc
into
dec
add
mov
ret
jle
es
push
sub
dec
nop
cli
cwde
in
retf
push
test
fs
mov
sub
les
add
fld
xor
adc
rep
ret
inc
or
xchg
inc
sbb
in
out
or
sub
inc
and
sbb
out
cs
dec
adc
gs
dec
jns
mov
and
pop
mov
lahf
popf
add
or
fsubr
int3
sub
lea
popf
mov
mov
jns
cmp
lea
imul
js
sub
pop
scas
test
jnp
sbb
mov
push
pop
jnp
outs
mov
int3
pop
xlat
ja
cmp
jl
lods
mov
sahf
mov
fsub
(bad)
test
out
lods
push
mul
(bad)
sbb
or
dec
bound
xor
xchg
fcmovb
mov
jns
inc
sub
mov
into
shl
lods
(bad)
mov
mov
daa
aad
dec
sub
dec
cld
jno
scas
daa
pushf
mov
sti
imul
stos
in
loope
aam
dec
push
push
adc
loop
sub
out
pop
loopne
xchg
inc
sub
or
enter
jo
dec
pop
cmp
push
fstp
xchg
out
stos
push
or
jno
sbb
sbb
dec
sbb
push
mov
enter
pop
push
gs
and
mov
sbb
leave
leave
sub
mov
pop
ja
sub
jo
out
or
sbb
push
not
ret
or
test
mov
call
xchg
add
cmp
enter
jne
sbb
xchg
jb
pop
cdq
xor
pop
push
scas
push
out
sbb
scas
or
jecxz
mov
mov
and
test
bound
loope
adc
lods
gs
cmp
pop
cmp
dec
inc
call
ins
xchg
in
es
sbb
ja
jle
lods
sub
xor
push
paddsw
inc
and
outs
cdq
sbb
test
sti
push
mov
inc
loopne
xor
leave
jb
ret
jmp
mov
and
and
or
pop
call
xchg
iret
or
mov
xchg
mov
retf
movs
xor
mul
movs
enter
xlat
in
div
xor
cs
mov
sub
sahf
arpl
sub
or
xchg
pop
and
leave
shl
jmp
aad
div
aam
popa
mov
(bad)
aam
out
daa
gs
loope
xor
leave
in
or
mov
push
jnp
adc
xchg
mov
cmps
test
pop
sub
mov
mov
dec
(bad)
adc
mov
or
sbb
sub
mov
dec
outs
lea
gs
stos
cmp
(bad)
xchg
in
shl
jp
fbstp
pop
test
add
dec
or
xchg
test
and
dec
mov
test
int3
push
sbb
inc
repnz
and
movs
mov
push
mov
add
sub
dec
xlat
jl
pop
gs
dec
mov
(bad)
sub
push
aam
iret
in
inc
mov
into
xchg
mov
imul
sahf
adc
jmp
and
lods
add
repnz
xor
adc
in
sbb
cmps
cwde
scas
icebp
pop
xchg
mov
add
(bad)
iret
mov
(bad)
daa
xchg
in
lsl
sub
rcl
into
loope
xchg
movs
cs
adc
(bad)
sbb
jnp
shr
lods
jb
mov
dec
int3
(bad)
sar
adc
ins
das
mov
mov
or
out
jo
mov
int3
ret
out
push
mov
mov
push
(bad)
jmp
jae
arpl
fild
dec
in
(bad)
pop
sub
arpl
and
cld
dec
jo
sub
fisubr
mov
or
or
arpl
jns
stos
das
(bad)
adc
cmp
xor
jno
pop
and
push
pop
cs
aas
pop
add
mov
add
test
mov
jb
jmp
xor
arpl
mov
xchg
and
retf
or
out
loope
mov
pop
adc
not
pop
jg
fcom
xor
dec
and
mov
adc
movs
mov
pop
lock
and
inc
pop
pushf
or
jae
js
mov
dec
cs
add
mov
nop
call
cld
push
(bad)
pop
cmp
loopne
dec
mov
lahf
inc
mov
repnz
out
clc
cwde
fcmovnu
cli
mov
and
sti
push
fld
or
mov
test
stos
cmp
sub
or
xchg
lea
and
xor
mov
xor
and
int
cmps
cmp
add
jecxz
xchg
cmp
mov
or
xor
rcr
jmp
mov
(bad)
sbb
into
repnz
mov
jnp
push
xchg
in
cs
adc
cmp
xor
adc
xlat
cmp
jne
cmp
(bad)
pop
or
sub
push
jl
out
pop
inc
int3
mov
mov
push
ds
push
xchg
inc
out
test
movs
sbb
mov
mov
(bad)
jp
in
in
fld
mov
into
pop
out
cmp
add
(bad)
sbb
jb
xrelease
cdq
cmp
sbb
inc
or
push
pop
xchg
push
outs
test
call
jp
xor
dec
pop
adc
in
xchg
inc
adc
fsub
inc
inc
cmps
adc
xor
(bad)
fidiv
repz
out
shl
aam
stos
cdq
and
mov
dec
loopne
xchg
xchg
scas
sbb
inc
jecxz
scas
xor
cli
push
mov
stos
dec
daa
cmps
ror
cmp
push
nop
mov
dec
and
loope
and
inc
adc
and
jle
sub
mov
xor
sbb
js
mov
mov
stos
mov
rcr
lock
stos
ja
in
cmp
mov
scas
dec
inc
sbb
mov
xchg
adc
push
or
ja
retf
mov
pusha
jecxz
jnp
inc
sbb
cli
xchg
mov
or
adc
sbb
rcl
sub
sub
mov
xor
test
stos
inc
cmp
sbb
arpl
ds
test
imul
inc
or
mov
push
xchg
movs
adc
(bad)
mov
xor
adc
push
jae
or
push
push
stc
or
and
mov
mov
jmp
mov
repnz
inc
push
nop
xor
and
(bad)
fistp
xor
mov
mov
mov
push
cmp
mov
lods
mov
outs
mov
adc
dec
sbb
pop
jbe
cdq
ins
out
in
movs
sbb
popa
leave
jle
or
sub
and
es
dec
inc
push
pop
lds
lods
jo
push
test
ss
clc
cs
add
lds
adc
mov
hlt
sub
mov
mov
dec
mov
lds
dec
pop
sbb
popa
daa
retf
and
out
and
add
push
inc
fcomp
pop
mov
xchg
dec
fs
call
imul
mov
bound
jg
loope
pop
pop
sti
scas
mov
adc
xor
push
xor
hlt
in
sub
dec
cdq
mov
gs
sahf
mov
cdq
push
in
sahf
pop
adc
mov
aaa
das
mov
push
jne
ins
and
fbld
xor
jo
push
mov
movs
popa
dec
dec
fs
inc
out
movs
sub
mov
mov
cwde
mov
mov
inc
jae
or
ja
les
stos
dec
mov
add
pop
icebp
(bad)
mov
xchg
adc
push
sbb
jecxz
add
mov
pop
add
les
inc
mov
test
scas
sub
or
inc
mov
or
std
cmp
cld
lods
push
outs
ins
stos
rcl
pop
mov
xchg
fcmovbe
dec
out
rol
xchg
retf
outs
ror
loopne
retf
bound
push
push
pop
mov
mov
retf
pushf
in
mov
ja
(bad)
jp
imul
ss
ins
cdq
mov
mov
(bad)
aad
mov
and
cmp
push
push
in
(bad)
mov
mov
aad
cmp
out
mov
dec
test
arpl
pop
xor
xchg
xchg
adc
add
push
cmp
clc
or
cwde
mov
mov
sub
dec
add
in
mov
test
cmp
data16
mov
and
jns
gs
mov
fcomp
rol
rol
or
mov
int3
repnz
sub
or
dec
dec
pop
adc
and
sbb
mov
jnp
xor
push
aam
int
movs
jl
adc
out
xchg
repnz
jb
ins
mov
xchg
sti
mov
push
add
icebp
retf
sbb
lea
inc
or
addr16
loopne
ret
rcl
xchg
pop
test
mov
pop
aas
sub
fimul
push
push
ror
fcomp
and
pop
add
add
movs
stos
add
les
jle
loop
fmul
or
out
push
xchg
and
and
push
in
xchg
loopne
outs
adc
std
cmp
shl
fsub
in
xchg
sub
or
lock
shl
fs
mov
sub
push
add
jecxz
fstp
xor
push
imul
pop
push
jae
jno
les
add
test
repnz
movs
adc
(bad)
mov
add
mov
cs
mov
ins
jnp
xor
cdq
shl
push
jae
sbb
cmp
xlat
and
sub
mov
and
test
sub
sub
stos
jge
pushf
cmp
js
push
das
mov
cmp
ja
or
and
xchg
cmp
xor
loopne
xor
and
enter
(bad)
mov
in
leave
push
or
mov
xchg
pop
sbb
inc
inc
in
pop
popf
adc
pop
xchg
adc
jns
mov
out
test
dec
ret
idiv
(bad)
inc
fdecstp
fnstsw
sbb
jo
mov
(bad)
addr16
(bad)
lea
jae
sbb
mov
inc
ret
push
dec
rcl
mov
push
mov
dec
sbb
and
push
fcmovbe
dec
push
mov
pop
lock
jl
mov
mov
pop
fs
push
mov
iret
adc
xor
add
dec
jae
ds
cmps
stos
ja
cmc
mov
fisubr
lods
enter
into
sub
xchg
adc
jne
out
inc
push
scas
mov
push
mov
sahf
aad
daa
xchg
fcom
jb
icebp
adc
inc
mov
out
in
inc
ror
dec
xor
cmp
ret
or
test
bound
fwait
adc
add
mov
fcomi
mov
mov
fwait
pop
sub
push
fcmovbe
(bad)
retf
or
gs
rcr
push
sub
icebp
mov
inc
pop
movs
icebp
mov
or
test
push
sbb
imul
push
ror
add
mov
xchg
ret
lds
pop
ins
data16
push
mov
cmp
jl
(bad)
add
enter
sbb
arpl
jns
cmp
xor
movs
mov
dec
jecxz
out
mov
mov
or
or
sub
mov
jnp
sub
mov
(bad)
(bad)
data16
xchg
aam
(bad)
outs
and
inc
jg
mov
movs
(bad)
pusha
out
jbe
dec
sub
or
add
and
(bad)
sub
jle
mov
sbb
xor
test
std
mov
pop
fisttp
jno
xchg
cmp
cdq
cmps
lea
fcmove
jae
xchg
mov
cs
adc
cdq
or
cmp
rcr
ja
push
push
push
sbb
push
mov
dec
loope
loope
mov
dec
jae
lods
push
xchg
push
retf
in
xchg
add
imul
jecxz
icebp
mov
out
jne
jge
cmps
aad
int
les
outs
push
xor
jb
mov
aad
pushf
mov
push
ins
frstor
sub
dec
repz
movs
push
shl
mov
or
gs
shl
mov
test
inc
adc
xor
adc
retf
or
dec
daa
push
add
retf
out
push
in
mov
aaa
add
mov
sub
fst
into
dec
pop
imul
rcr
ds
mov
xchg
rcr
mov
iret
and
(bad)
sahf
movs
push
pop
adc
push
enter
test
sar
pop
nop
dec
repnz
sbb
test
test
in
mov
nop
dec
xor
pop
fld
call
sbb
shl
pop
enter
out
sbb
rcl
dec
pop
imul
out
scas
sbb
xor
mov
pop
sbb
jne
(bad)
aad
int3
shr
psubsb
movs
outs
dec
adc
sub
and
movs
and
or
lods
adc
lock
mov
xchg
mov
les
(bad)
sbb
or
test
sbb
xor
push
mov
loop
shr
cmp
sbb
pop
sti
and
mov
xchg
scas
pop
mov
in
stos
or
add
les
je
fdivr
jl
ret
mov
lock
push
outs
pop
jmp
xchg
add
les
loopne
push
sbb
sub
xchg
in
pop
dec
loope
not
or
mov
test
push
push
(bad)
popf
popa
xlat
push
mov
ins
ins
pusha
and
pop
jecxz
dec
inc
nop
out
int
adc
movs
inc
nop
push
fwait
test
retf
test
sar
and
ins
mov
inc
pusha
xchg
mov
mov
movs
mov
lods
mov
sbb
adc
push
inc
mov
sub
lds
ins
aaa
push
push
dec
mov
int
loopne
mov
imul
gs
mov
mov
(bad)
push
sti
or
lock
sti
fs
scas
xor
mov
cdq
xor
xor
(bad)
imul
push
xchg
aam
arpl
xlat
cmp
mov
mov
int3
mov
movs
std
(bad)
adc
sbb
xor
clc
cdq
jge
push
mov
fld
cmp
push
cmp
pop
cwde
div
aam
repnz
add
xchg
add
fs
movs
push
imul
rol
pop
aas
push
inc
sub
cdq
push
movs
or
push
pop
and
mov
inc
fwait
mov
scas
mov
sub
out
xchg
aam
test
push
mov
ja
pop
add
test
or
xchg
ror
jno
dec
push
leave
pop
sbb
loopne
or
lahf
push
je
loopne
int
ficom
inc
dec
fiadd
lea
pop
dec
(bad)
daa
mov
sbb
mov
xchg
lahf
test
or
xor
dec
test
pushf
add
pop
fild
xchg
(bad)
call
xchg
lea
ret
mov
jbe
pop
fiadd
aaa
bound
stc
call
popf
scas
dec
xor
fsub
cmp
cmp
loop
mov
mov
(bad)
gs
das
and
lods
push
sar
ja
frstor
(bad)
jnp
fbstp
pop
fstp
popa
cmp
test
push
add
cmp
push
jae
js
fsub
push
fisttp
fdiv
jmp
and
dec
jle
ret
sbb
leave
pop
jbe
fadd
retf
rcl
lds
sbb
sbb
cs
loope
out
std
mov
nop
enter
pop
or
nop
mov
inc
dec
pop
out
pop
xchg
adc
cdq
mov
xor
das
mov
inc
sbb
dec
fdivr
mov
and
(bad)
cmps
add
add
jecxz
add
cwde
or
cdq
jecxz
adc
nop
lea
or
or
popf
cmp
mov
dec
ds
add
push
iret
jne
xor
iret
pushf
es
push
cmps
mov
jno
scas
jo
mov
lock
jge
in
shl
in
cmc
cmp
icebp
inc
movs
arpl
mov
outs
mov
and
sbb
push
test
push
popf
ret
inc
add
add
and
inc
enter
cmp
jns
call
mov
jmp
and
outs
gs
sahf
repnz
jno
xchg
mov
rol
mov
retf
sbb
adc
push
xor
cvtps2pi
enter
je
movs
jb
adc
movs
cmp
daa
and
inc
jbe
sbb
mov
fs
and
mov
ficom
and
int
sbb
xchg
sub
xchg
pop
shr
test
and
out
in
mov
dec
and
inc
cdq
stos
mov
or
mov
test
mov
js
lods
ror
inc
popa
adc
mov
xchg
and
mov
xchg
jecxz
xchg
stos
sbb
xchg
mov
jg
xor
enter
cmp
aaa
cwde
movs
lea
mov
loopne
icebp
test
imul
jns
gs
adc
addr16
lds
jb
cmp
fisttp
and
pop
push
push
jmp
pop
popf
sub
xchg
sahf
pop
push
fcmovnb
push
movs
adc
adc
cmp
test
pop
test
fmul
sub
dec
rol
xor
pusha
inc
sbb
push
call
enter
xchg
lods
mov
cmp
mov
data16
or
dec
inc
cwde
not
test
or
and
imul
ins
cmp
push
and
mov
sub
pushf
sbb
call
xchg
xchg
pop
cmp
pusha
addr16
xchg
pop
aam
movs
out
inc
mov
push
xchg
and
fsubr
(bad)
clc
push
push
inc
push
outs
add
sar
jbe
movs
pop
push
and
cmp
enter
mov
jnp
push
jp
cmp
mov
dec
mov
(bad)
inc
ins
dec
xor
dec
xchg
mov
xchg
outs
adc
cmp
add
sub
mov
push
stos
add
pop
lea
lock
push
mov
pop
aad
xor
in
repnz
ror
sbb
adc
cmp
adc
bound
pop
mov
mov
mov
shr
retf
mov
je
mov
(bad)
imul
test
aam
shl
cmp
inc
jnp
push
mov
fmul
(bad)
jecxz
je
jb
ffreep
stos
cmp
int3
xchg
sub
(bad)
mov
and
(bad)
cmc
and
rcl
dec
stos
sbb
(bad)
mov
js
xor
movs
retf
loopne
fild
mov
xchg
loope
mov
push
loop
jb
stos
adc
xchg
(bad)
imul
push
mov
xchg
dec
cmps
popf
das
outs
lfs
jne
mov
pop
push
cmc
adc
sbb
inc
mov
xor
mov
fdivr
sub
cdq
std
mov
and
ror
and
adc
xor
or
into
mov
ins
sbb
pop
fstp
cmps
push
sahf
ret
pop
mov
push
(bad)
in
mov
xchg
sub
imul
mov
mov
xchg
mov
sub
inc
clc
and
outs
mov
lock
xor
mov
nop
test
js
push
nop
jle
sbb
xor
cmp
bound
lods
into
push
clc
mov
cmp
dec
sub
and
mov
adc
bound
aad
push
sahf
bound
or
adc
and
xchg
jo
push
test
lods
arpl
inc
xor
push
or
je
and
add
add
cmp
sub
mov
and
push
mov
dec
and
(bad)
nop
mov
aaa
pop
loopne
mov
cdq
pop
iret
push
rol
jl
aaa
test
pop
adc
mov
push
or
jns
mov
mov
inc
seto
add
mov
arpl
scas
clc
sbb
push
sub
pop
pop
pop
mov
cmp
daa
sbb
sub
(bad)
(bad)
dec
jnp
push
movs
sbb
push
cmp
sbb
retf
rol
and
popf
dec
sbb
fiadd
mov
dec
sub
popa
lea
push
not
movs
jne
pop
or
sub
fistp
ins
into
dec
mov
shr
sbb
sub
inc
inc
mov
mov
rcl
push
inc
leave
call
xor
inc
pop
je
out
loope
xchg
inc
in
gs
mov
mov
test
loopne
or
inc
bndldx
adc
call
mov
adc
sub
out
pusha
push
xchg
loope
ins
sar
push
mov
mov
aam
repnz
adc
sbb
inc
enter
adc
movs
adc
dec
fst
out
gs
ja
(bad)
or
jb
aaa
jns
loop
and
mov
fimul
mov
sbb
les
pop
push
push
mov
inc
cdq
fldcw
outs
clc
test
push
int
data16
sti
push
arpl
fld
pop
adc
or
xchg
addr16
adc
or
repnz
or
mov
mov
add
sub
dec
mov
mov
in
add
xchg
xor
sbb
(bad)
loop
scas
xor
int
mov
pop
fstp
cmps
inc
pop
sub
xlat
pop
xchg
push
push
mov
add
sar
and
and
shr
inc
push
push
xchg
cmp
xchg
mov
je
mov
int
sub
shl
push
add
lock
and
lods
mov
stos
mov
cmp
repnz
inc
popa
mov
dec
and
aam
aam
invd
jmp
retf
push
or
dec
in
fmul
mov
popf
sub
mov
shr
or
sbb
in
sbb
sbb
mov
test
in
cmps
ins
and
mov
sbb
loop
dec
and
xchg
jp
mov
jle
ds
mov
ret
lahf
sbb
(bad)
jb
clc
inc
xor
outs
xor
push
xchg
cmps
test
xor
aas
je
cdq
adc
dec
adc
xchg
mov
(bad)
out
mov
pop
jne
sbb
sub
ret
fs
add
cmps
cmps
jb
movs
imul
lods
or
push
or
adc
jb
mov
pop
pop
sar
(bad)
ftst
pop
adc
mov
imul
sbb
and
retf
dec
sbb
setno
push
jmp
mov
cmp
js
add
rcr
jno
aam
repnz
fidivr
shl
mov
je
test
nop
jmp
fadd
pop
add
xchg
js
lea
xchg
push
cld
dec
aaa
cmps
test
call
push
jns
out
in
and
mov
cmp
fcom
stos
lock
mov
cmp
inc
xor
dec
in
(bad)
imul
xchg
out
mov
sbb
loopne
jno
retf
aad
ret
enter
inc
inc
jmp
rcr
sbb
or
sbb
clc
jns
mov
xchg
iret
sahf
pop
(bad)
jbe
mov
jmp
popa
sbb
sub
inc
inc
lods
add
xor
inc
add
cld
adc
mov
or
and
dec
call
push
imul
add
xchg
xchg
(bad)
pop
dec
fisttp
outs
(bad)
jnp
cmp
sbb
mov
es
lods
xchg
sub
out
imul
dec
or
fistp
sub
inc
adc
inc
test
xor
in
movs
arpl
push
js
movs
ret
add
xchg
mov
cmp
lock
mov
shl
aaa
jo
cli
push
adc
retf
ja
and
inc
mov
cmp
fild
and
pop
into
or
inc
out
or
mov
xor
add
test
cmp
test
push
fcomp
test
movs
mov
std
cmps
jge
imul
int3
push
cmp
and
(bad)
scas
(bad)
arpl
or
(bad)
mov
sbb
lods
lea
mov
add
pop
fiadd
inc
jb
or
sub
xchg
or
dec
aam
push
into
mov
inc
xchg
fs
mov
mov
sbb
xchg
out
ins
add
arpl
xchg
or
fwait
cmp
shl
cwde
fs
xor
stc
push
mov
popf
pop
xchg
xchg
iret
pop
(bad)
retf
jg
pop
dec
addr16
fstp
jo
pop
push
bound
ret
jo
sub
cmps
adc
pop
nop
adc
and
lea
stos
and
cmp
add
pop
inc
xor
stos
mov
sub
cdq
dec
pop
sbb
lods
jne
xchg
cdq
or
ret
mov
cmp
add
push
adc
dec
in
mov
sub
shr
sbb
sbb
mov
retf
pop
idiv
sti
cld
sub
cmps
cmps
call
fidivr
fs
imul
pop
xchg
or
ds
mov
imul
gs
xor
test
int
arpl
popa
add
cmp
inc
push
push
mov
test
into
imul
and
fmul
aas
sub
std
xlat
jae
push
stos
push
mov
mov
and
daa
repnz
cld
push
xchg
(bad)
in
xchg
stos
sbb
mov
sub
fsubr
outs
jmp
jmp
jmp
mov
jbe
rcl
js
loope
cs
in
test
ret
popf
stos
fs
push
adc
or
jle
cmp
movs
mov
les
and
jle
mov
xchg
or
pop
xchg
sub
mov
sbb
(bad)
push
ss
pushf
adc
test
pusha
mov
add
outs
sbb
jecxz
mov
or
sbb
dec
adc
mov
or
leave
inc
in
ret
add
jnp
jecxz
inc
movs
cmp
and
push
pop
not
or
scas
loop
jno
mov
movs
outs
add
iret
loopne
and
cmps
add
add
leave
fdivp
call
xor
xchg
call
pop
mov
sbb
xchg
fs
xlat
ins
mov
mov
or
dec
ins
xor
imul
pop
add
mov
adc
or
aaa
dec
sbb
enter
loope
pop
jmp
cmp
retf
movs
fistp
adc
inc
mov
push
shl
imul
mov
mov
and
jnp
(bad)
es
stos
out
sub
ficomp
jp
rol
inc
in
lods
cmp
inc
scas
mov
push
lea
dec
jle
dec
xchg
cmp
ja
mov
gs
jnp
xchg
test
xor
or
xchg
pop
adc
mov
popf
mov
lods
push
sub
outs
pop
pop
mov
js
sbb
ins
xchg
dec
inc
cmp
fdivp
mov
pop
dec
fst
out
dec
ret
(bad)
dec
clc
cmp
or
xor
inc
loopne
pusha
mov
in
js
js
mov
sub
dec
les
pop
and
sbb
mov
mov
movs
sbb
sbb
shl
pop
push
fsubr
mov
imul
push
xor
cmp
(bad)
xlat
inc
and
mov
push
xor
retf
lods
pop
daa
gs
and
arpl
or
shr
push
retf
shr
out
xor
pop
lea
in
dec
lahf
sbb
sbb
mov
or
mov
in
mov
fadd
fimul
scas
loope
adc
mov
sbb
fst
jp
test
fmulp
ret
pop
or
push
mov
(bad)
mov
dec
cmp
xchg
xchg
in
push
lea
and
loop
imul
cmps
pop
mov
push
cmp
cmps
cmp
adc
adc
mov
mov
add
cmp
shl
pop
out
xchg
dec
add
adc
outs
popa
lods
sbb
cmp
and
das
mov
movs
outs
jl
mov
jecxz
outs
and
dec
sbb
bound
ret
ret
sub
dec
sub
test
adc
sbb
dec
inc
sub
push
add
jb
inc
dec
retf
add
js
adc
inc
adc
fcmovnbe
mov
cmp
xor
mov
mov
xchg
in
mov
dec
dec
push
mov
test
xor
mov
sbb
xchg
mov
data16
aam
dec
and
lds
clc
push
sbb
fdiv
jbe
lods
jbe
inc
repnz
or
leave
loop
cmp
jge
adc
out
mov
add
mov
gs
or
(bad)
ins
mov
rcl
jae
pop
bound
scas
int3
jne
adc
mov
inc
imul
and
test
je
inc
fcomp
jp
addr16
jno
std
call
lods
cmp
call
pop
int
cmps
pop
out
mov
loopne
fisttp
hlt
mov
in
pop
cmp
ja
and
mov
fisub
mov
test
mov
cmps
sti
popf
movs
popf
outs
push
loope
(bad)
jp
es
or
mov
shl
push
into
inc
shl
inc
sub
pop
ds
mov
jmp
inc
ret
push
or
fdivr
adc
test
loop
fdivr
int
pcmpgtw
adc
cmp
adc
retf
xchg
fs
lods
xor
or
jmp
aam
int3
adc
inc
and
inc
fadd
dec
dec
xchg
fisubr
pop
or
pop
int
pop
stos
call
mov
repz
stc
sbb
cmp
adc
cmp
push
leave
lea
push
xchg
add
xor
adc
aam
cwde
mov
movs
in
(bad)
pop
test
rcr
ror
and
jnp
fs
jnp
sar
jb
jge
out
sbb
inc
fist
cmp
dec
jns
mov
arpl
addr16
inc
jnp
cmc
sbb
rol
xor
ins
in
pop
add
out
xchg
inc
xor
ins
sar
sbb
xchg
(bad)
in
inc
mov
jmp
ins
outs
inc
jo
jmp
xchg
fucomi
sub
and
imul
scas
movs
mov
int
add
dec
jnp
cmp
out
xor
adc
call
hlt
mov
xchg
mov
ins
leave
pop
retf
lock
retf
les
(bad)
mov
clc
rol
cmp
pop
push
dec
inc
rcl
pop
and
or
and
sbb
push
loop
lahf
lea
cdq
mov
adc
pusha
dec
push
ins
mov
inc
ror
mov
mov
adc
adc
add
xor
shr
push
retf
rcr
cmp
push
mov
inc
loopne
and
xor
dec
in
push
lods
bound
push
data16
sub
jno
adc
out
add
rol
and
sbb
xor
mov
adc
lea
dec
adc
movs
mov
(bad)
shr
enter
(bad)
(bad)
pop
push
jp
shr
retf
in
stos
pop
dec
and
ins
fwait
xchg
pop
push
jb
sub
push
cmp
or
cmp
add
push
cmps
dec
sar
inc
mov
mov
and
test
rol
ja
jge
rcl
jnp
fwait
xchg
adc
pop
xor
jle
aas
xchg
les
mov
jg
cli
jnp
fisubr
popf
imul
sbb
adc
fnsave
push
mov
arpl
addr16
sbb
lds
iret
shl
retf
inc
fsubr
test
(bad)
cdq
js
and
push
xchg
mov
fadd
sub
or
enter
les
pop
pop
or
adc
lods
out
mov
ins
ins
and
mov
xor
cmp
inc
mov
push
daa
adc
je
shl
sbb
sub
xor
sub
fs
cmc
sbb
mov
in
loope
push
xor
(bad)
jo
movs
rcl
mov
pop
pop
call
movs
dec
ror
test
or
mov
xor
retf
pop
cmp
cmp
xchg
dec
xchg
pop
cmp
xchg
into
jno
cmps
lahf
inc
sub
cmp
push
imul
or
sub
sub
(bad)
inc
xchg
rcl
xor
push
hlt
mov
in
xchg
nop
(bad)
cmp
mov
push
sbb
fcmovnu
xchg
data16
or
pop
cmp
test
inc
or
cmp
adc
mov
adc
sbb
call
fs
aaa
inc
daa
add
mov
retf
and
enter
movs
and
into
fiadd
xor
jns
push
fisub
cld
test
movs
enter
movs
ins
mov
pop
adc
ret
scas
sub
mov
sub
jmp
xchg
ror
dec
in
inc
ins
ins
lods
mov
scas
add
and
pushf
push
rcr
jge
or
mov
mov
test
add
pop
mov
xchg
int3
repnz
jno
sub
call
xor
sub
adc
and
pop
sbb
stos
push
shl
ins
mov
adc
lds
popf
push
ins
imul
xchg
xchg
or
add
pop
lods
mov
(bad)
jg
mov
mov
(bad)
inc
sti
or
and
xor
mov
aad
mov
stos
neg
sbb
(bad)
or
xor
pop
fistp
add
add
inc
jns
out
inc
push
movs
lds
ss
enter
inc
add
push
lods
jne
or
sbb
rcl
or
aad
mov
shr
arpl
and
sub
dec
(bad)
bound
jne
or
es
clc
stc
mov
xor
mov
cld
inc
mov
ds
or
fcmove
mov
push
fwait
xor
xchg
dec
inc
not
jp
pop
dec
bound
sbb
add
(bad)
mov
ret
ret
adc
int
lea
and
jno
aam
daa
nop
movs
and
dec
test
pushf
cmp
mov
cmp
retf
call
xor
dec
ficom
shl
shr
xor
in
dec
mov
call
dec
rdmsr
push
int
scas
jo
or
pop
popf
and
test
sub
loop
cmp
xchg
mov
sub
add
sub
outs
pop
repz
sbb
dec
jg
hlt
dec
fnstsw
adc
xor
mov
outs
cmp
fstp
jge
pop
cmp
cdq
stos
aas
stc
jae
adc
scas
lea
ins
lods
adc
cdq
push
xchg
sahf
cli
mov
stos
loop
int3
jbe
bound
xor
sub
cmc
(bad)
xchg
and
adc
(bad)
mov
inc
sub
adc
inc
sub
xor
pop
aaa
add
mov
xor
mov
or
sbb
sbb
int
mov
mov
jae
mov
jbe
push
cmp
out
push
imul
push
push
fldcw
push
sar
jne
xchg
ret
and
mov
dec
push
popf
pop
cdq
xchg
jp
test
push
pop
dec
scas
data16
cmp
mov
(bad)
(bad)
cwde
lods
fnstenv
cmp
jp
and
mov
test
fdiv
ss
mov
xor
lods
ins
adc
sub
icebp
push
dec
inc
xor
in
adc
in
movs
sub
adc
(bad)
test
(bad)
lods
dec
clc
adc
test
ins
imul
test
inc
xchg
mov
js
or
arpl
mov
in
stos
das
mov
imul
and
push
jno
adc
jle
pop
inc
xchg
dec
iret
and
cmps
adc
add
fcom
enter
js
outs
push
loop
push
and
and
xchg
fnstenv
mov
jnp
sub
push
cmc
(bad)
das
jns
or
or
ins
jp
lock
cmp
(bad)
mov
popa
stos
mov
xlat
jle
aaa
pusha
jge
sub
in
mov
push
or
push
pop
fnstenv
pop
sub
dec
les
push
imul
(bad)
mov
inc
push
adc
add
sbb
jmp
lock
push
add
cmp
rcl
jne
and
aad
push
retf
mov
cmp
imul
or
mov
das
aaa
call
jl
adc
les
adc
xor
enter
sub
cwde
push
iret
or
mov
mov
leave
cwde
jmp
mov
bound
xchg
(bad)
xchg
dec
adc
mov
(bad)
sar
jne
cmp
xchg
clc
push
mov
fldcw
xor
sbb
add
and
mov
mov
call
jne
lods
jno
lods
jo
mov
push
pop
adc
jbe
sbb
mov
lods
test
or
stos
ins
jecxz
stc
fadd
int3
xchg
lea
mov
pop
ins
push
or
mov
sbb
bound
cmp
push
add
leave
outs
and
pop
data16
lods
xor
iret
lea
mov
push
sbb
aad
pop
inc
stc
xor
rol
mov
js
(bad)
xor
inc
out
mov
sbb
mov
cdq
lods
jmp
push
and
retf
or
mov
sbb
cli
mov
imul
pop
(bad)
lahf
les
ins
rcl
cmc
dec
pop
mov
popf
jl
adc
mov
test
mov
(bad)
leave
xchg
data16
rol
push
and
push
or
stos
add
sub
inc
cli
jl
dec
icebp
inc
movs
out
sbb
repz
jnp
enter
fdivp
aad
mov
test
dec
push
test
cs
sub
xchg
fiadd
push
fs
pop
jecxz
dec
out
test
movs
pusha
jae
and
imul
arpl
out
jg
dec
movs
stos
shr
mov
icebp
movs
jp
or
cwde
pushf
cmp
xor
or
xor
push
inc
xchg
iret
sub
retf
inc
and
ror
sub
stos
add
lods
xchg
cli
pop
inc
xor
jnp
inc
mov
sbb
arpl
inc
daa
jmp
ins
jecxz
pop
jge
push
sub
lods
pop
and
sbb
cwde
out
jecxz
fwait
mov
xor
and
leave
cwde
and
call
test
fistp
inc
lods
stc
push
mov
xchg
loop
sub
push
mov
sbb
xchg
aad
inc
jle
imul
inc
xor
mov
pop
les
sbb
out
lea
leave
jne
push
jno
xchg
dec
bound
sub
data16
sti
push
movs
push
and
outs
push
mov
cmp
xor
(bad)
adc
lods
dec
add
cmps
sub
adc
mov
data16
movs
sub
arpl
add
push
and
pusha
shl
imul
and
xchg
mov
push
push
int
dec
xor
fs
mov
push
ret
jbe
pusha
xor
jle
pop
pop
ret
cmp
arpl
repz
adc
cs
call
rol
out
sbb
pop
movlps
shl
push
in
retf
fild
xchg
pop
ds
shl
pushf
push
mov
call
test
test
add
std
push
sub
test
scas
push
ficom
push
xor
mov
(bad)
sub
loope
xchg
lock
jmp
aam
sub
xchg
xchg
imul
int
and
jge
sbb
mov
mov
inc
sahf
test
nop
xor
js
inc
dec
and
int
test
jecxz
movs
stos
inc
rol
dec
xor
not
mov
pusha
mov
cmp
loop
mov
jo
in
shl
mov
ret
loope
sub
repnz
and
xchg
loope
mov
stos
and
and
add
push
sti
dec
xor
mov
aam
mov
dec
pop
and
cmps
xor
jle
sbb
add
mov
mov
or
in
mov
and
sub
cs
xlat
sar
outs
jmp
mov
or
scas
(bad)
enter
test
sub
sbb
jnp
ret
sub
add
jne
repz
imul
mov
out
adc
pop
stos
cmp
mov
cli
push
inc
fcom
arpl
pop
push
xchg
aam
add
jno
outs
pushf
dec
xor
jno
test
sub
push
jge
out
jo
test
jno
pushf
call
bound
xchg
and
inc
or
out
(bad)
(bad)
das
adc
in
push
(bad)
push
loopne
mov
stos
inc
push
xor
pop
sub
lods
or
jo
neg
test
gs
mov
xchg
ror
das
out
xchg
mov
stos
pop
and
loope
sbb
inc
in
pop
hlt
dec
mov
inc
jb
jnp
adc
nop
fild
xor
xchg
dec
adc
dec
ss
shl
ficom
mov
cmp
adc
or
and
lock
mov
je
dec
and
adc
xor
fimul
ss
and
push
ja
and
xchg
mov
mov
mov
mov
(bad)
sub
dec
imul
mov
lods
inc
(bad)
jnp
mov
retf
outs
test
inc
loope
push
sub
and
out
addr16
(bad)
repz
sti
sub
xor
pop
in
add
std
xchg
pop
or
sub
daa
sub
loope
push
lods
xchg
jle
dec
pop
and
out
cmp
and
cmps
cmp
not
(bad)
xor
test
inc
cmps
or
mov
inc
add
mov
sbb
and
pushf
sub
push
stos
sbb
ins
xchg
push
mov
retf
add
cdq
imul
xlat
jb
jmp
imul
shl
(bad)
mov
mov
aaa
aaa
add
ja
pop
inc
pop
and
or
imul
aas
push
push
mov
add
es
mov
mov
sbb
mov
stos
adc
adc
retf
dec
adc
and
pop
lahf
fiadd
mov
inc
mov
sbb
lods
enter
test
lock
push
fsubr
retf
push
inc
jmp
push
inc
mov
xor
push
push
lods
xchg
(bad)
push
adc
int
test
xor
xor
sti
sub
xor
xchg
push
add
and
dec
sub
mov
cmp
out
cli
push
ins
sbb
outs
pop
arpl
test
icebp
cmp
cmc
or
loop
fstp
out
xor
or
icebp
stos
cmp
cmp
outs
mov
leave
jnp
out
sbb
add
jb
cmp
test
xor
ds
sbb
inc
push
pop
sbb
push
call
imul
inc
and
dec
sub
push
add
add
dec
inc
jmp
inc
retf
mov
js
add
cmps
or
add
add
inc
add
add
add
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
js
iret
adc
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
outs
outs
ja
dec
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
add
inc
adc
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
outs
outs
ja
dec
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
add
add
add
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
push
(bad)
lar
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
inc
add
add
int3
xor
cs
pop
cmps
dec
add
and
jbe
jecxz
dec
test
je
dec
lods
xor
or
stos
add
xchg
in
add
dec
add
add
(bad)
mov
mov
mov
mov
add
add
add
ins
xor
add
add
add
push
add
add
add
add
inc
sbb
add
cs
inc
imul
add
add
sub
inc
sbb
add
sub
jb
add
add
add
add
sub
inc
sbb
add
sub
add
ins
xor
adc
add
add
sub
inc
sbb
add
sub
xor
adc
add
add
sub
inc
sbb
add
sub
add
jbe
xor
adc
add
add
sub
inc
push
add
add
or
push
push
arpl
ins
ins
xor
or
cmp
add
add
or
add
add
add
add
or
dec
push
arpl
ins
ins
xor
or
loopne
push
add
es
add
add
add
push
add
ins
bound
add
add
mov
push
add
ins
bound
add
and
add
add
add
je
add
add
add
add
and
inc
add
add
popa
ins
xor
add
push
add
popa
ins
xor
add
mov
and
inc
sub
add
and
add
ins
ins
popa
outs
xor
add
or
inc
outs
ins
ins
popa
outs
xor
add
add
add
and
inc
fcmovnb
add
sbb
arpl
xor
add
mov
add
ins
je
add
fdivr
loope
sbb
imul
add
add
add
in
add
inc
jne
imul
add
add
cmp
add
loope
sub
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
add
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
xor
xor
xor
aaa
aaa
sub
xor
xor
das
xor
das
xor
sub
xor
xor
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
push
xor
outs
ja
and
js
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
inc
inc
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
aaa
inc
xor
aaa
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
inc
inc
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
and
push
data16
jne
outs
je
inc
cmp
cs
aaa
inc
inc
ss
xor
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
ds
out
add
inc
outs
bound
rol
add
(bad)
fild
test
push
add
add
add
add
add
push
push
or
or
or
or
or
or
or
or
adc
movups
push
or
adc
adc
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
or
adc
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
add
or
outs
add
add
add
adc
add
add
les
mov
add
add
add
push
pop
add
or
add
add
add
add
add
add
add
push
pop
adc
add
add
add
pop
add
add
add
xor
add
jno
and
xchg
mov
inc
push
and
bound
loope
xchg
mov
icebp
mov
inc
xor
or
shl
inc
es
test
add
add
add
add
add
add
add
add
adc
add
xor
adc
adc
adc
shl
bound
loop
(bad)
fiadd
or
add
add
add
add
add
in
aas
push
cmp
fistp
xor
sbb
loope
fcomp
cdq
outs
repz
out
test
adc
arpl
cmc
cmp
lods
pop
mov
fidivr
std
lock
xor
xchg
pop
icebp
sti
movs
pop
aam
cmp
mov
scas
lock
sbb
retf
jnp
add
adc
cld
sbb
fisttp
dec
cmp
sub
mov
jbe
in
std
rcl
push
sbb
loop
adc
ret
push
adc
rcl
jae
adc
push
sub
test
push
jno
inc
movs
addr16
or
and
test
sbb
inc
movs
aam
cwde
add
or
inc
mov
push
fidivr
js
mov
xlat
inc
mov
pushf
inc
(bad)
leave
sub
lds
cmps
inc
sbb
sub
dec
push
(bad)
ror
pop
sub
xor
add
add
xor
xchg
adc
or
aam
xchg
imul
sub
add
test
jo
sbb
ret
inc
cmp
adc
test
idiv
ret
cs
or
sbb
cmp
daa
mov
scas
sbb
xchg
(bad)
push
mov
popa
inc
sbb
push
jno
and
adc
push
add
xchg
push
ins
leave
and
adc
rol
mov
cwde
fxch
neg
xchg
repnz
imul
mov
out
loop
add
mov
mov
dec
cmp
add
rol
inc
or
jmp
mov
cdq
lods
push
pop
push
mov
push
fidiv
jnp
mov
int
cld
push
popa
push
movs
sbb
sbb
lock
mov
cmp
lea
cmp
adc
or
xchg
jns
adc
xchg
add
xchg
sub
lea
xchg
cmp
xchg
mov
dec
jbe
(bad)
mov
test
ja
cmp
retf
mov
imul
pop
pushf
test
addr16
addr16
lea
les
push
and
mov
xchg
(bad)
ret
pop
ret
dec
pushf
stos
pop
rol
jae
sbb
jae
adc
mov
cmp
push
clc
repz
dec
ins
imul
popf
mov
inc
loop
or
cdq
xchg
sti
mov
push
lahf
and
mov
mov
fadd
xchg
pop
xor
cmovb
ja
cmp
outs
mov
test
mov
sub
sub
loop
fmulp
sub
rcr
daa
sbb
fld
inc
int
stos
inc
fistp
stos
cmp
aas
jge
(bad)
jecxz
push
push
xlat
fsubr
iret
idiv
and
ret
jnp
retf
jae
arpl
cmp
call
mov
(bad)
fdiv
dec
ficomp
rcl
jmp
jmp
sbb
sub
(bad)
xchg
push
dec
clts
mov
sub
mov
lahf
or
pop
sar
xor
cwde
rol
push
sbb
and
push
sbb
inc
test
mov
retf
aam
ret
add
call
inc
inc
or
mov
(bad)
mov
inc
(bad)
push
in
add
add
xor
or
mov
mov
add
xchg
cmp
outs
sub
add
retf
cs
xor
add
test
rcl
push
sar
add
mov
addr16
add
mov
fnstcw
or
pop
push
or
mov
dec
test
sbb
cvtps2pd
rcl
push
ret
pop
mov
pusha
pusha
and
aam
fcom
test
ficomp
push
imul
adc
xchg
aas
add
mov
jns
(bad)
mov
fcmovnb
loope
int3
hlt
sar
jbe
and
or
lahf
clc
mov
das
jg
mov
fcomi
jecxz
out
sub
mov
dec
jno
mov
push
push
xlat
jl
xchg
xlat
ins
fisttp
mov
retf
popf
xor
(bad)
sub
mov
out
push
dec
sub
cld
sbb
imul
push
or
ins
dec
je
xchg
imul
xchg
jne
xor
loopne
mov
sbb
jl
cmp
jb
test
cmps
add
xchg
out
imul
sahf
fisttp
pop
pop
es
xchg
and
cmp
mov
xor
pop
sbb
sub
mov
cmps
dec
xor
test
into
push
and
ret
jno
jmp
push
dec
loop
lds
mov
push
dec
dec
js
das
and
add
sub
push
or
repnz
arpl
enter
push
and
repnz
xchg
adc
jne
leave
add
dec
xor
not
idiv
cli
push
stc
pop
in
xor
int
outs
jl
mov
fucomip
mov
pop
mov
pop
imul
push
pusha
push
and
jnp
icebp
idiv
test
or
pushf
retf
sub
rcl
test
cmp
in
pop
mov
fstp
push
mov
and
repnz
jmp
cwde
enter
in
lods
mov
mov
push
sbb
fidiv
sub
jl
xor
sub
cmps
ret
pop
test
cmps
pop
nop
pop
jnp
mov
popa
mov
sbb
jae
cmps
loop
imul
jo
sbb
stc
adc
in
popf
and
cld
adc
mov
lahf
xchg
xchg
inc
icebp
sti
call
in
ins
lds
sbb
add
sbb
sahf
cli
movs
jecxz
mov
cmp
ja
shr
cmc
pop
adc
sub
xchg
push
ret
dec
out
adc
in
stos
(bad)
and
mov
std
push
aam
dec
imul
jmp
pop
daa
and
imul
push
gs
movs
addr16
push
or
xchg
adc
pop
out
rcr
mul
pop
aas
jb
repz
jns
imul
pop
push
(bad)
and
pop
test
addr16
(bad)
and
(bad)
lods
imul
jb
mov
pop
out
push
hlt
push
mov
pop
fstp
xchg
mov
pushf
sbb
dec
fsubr
sub
add
adc
test
sbb
xor
test
adc
imul
and
test
(bad)
call
dec
push
add
ds
xchg
inc
inc
das
imul
(bad)
cli
adc
or
push
bndldx
shl
xor
mov
mov
test
sbb
test
lock
mov
loope
adc
add
and
inc
xor
mov
push
or
pushf
jae
sub
bound
and
sbb
push
or
push
and
mov
push
add
xchg
sbb
dec
or
or
sub
push
and
dec
bound
jmp
sub
pusha
and
aas
sub
lock
outs
aaa
cwde
mov
pop
push
shl
lock
addr16
dec
(bad)
icebp
ins
and
into
aam
cwde
pop
ds
push
mov
jp
dec
aad
pop
sbb
imul
mov
inc
pop
mov
inc
stc
xchg
add
std
retf
pop
sbb
xchg
mov
jg
push
fsub
std
(bad)
adc
pop
lods
xchg
aad
imul
stc
pushf
js
sub
dec
test
push
cli
adc
pop
mov
and
cdq
xor
xor
mov
cli
test
gs
pop
(bad)
pop
sbb
dec
push
in
arpl
inc
in
dec
push
jmp
imul
retf
aaa
or
cld
or
add
mov
jne
fist
dec
pop
adc
les
push
xor
clc
push
add
add
push
and
xor
std
(bad)
mov
xor
push
xchg
cmp
and
sub
xchg
(bad)
sbb
jp
xor
push
ss
jmp
lea
sbb
push
daa
mov
shl
movd
push
out
mov
fxtract
sbb
pop
xchg
and
dec
iret
bound
dec
sbb
or
(bad)
xchg
in
scas
add
addr16
ja
or
and
xor
std
mov
xor
push
data16
enter
in
not
cmps
and
pop
and
sub
sbb
(bad)
neg
ror
cwde
lock
arpl
jne
jge
fimul
addr16
add
and
scas
sbb
lods
pop
fmul
pop
mov
(bad)
out
ror
push
lahf
cdq
scas
and
xchg
ins
call
cmp
daa
adc
sub
sub
cld
cmp
and
and
dec
mov
mov
mov
pusha
jne
xor
sti
xchg
xor
lahf
push
pop
addr16
jns
test
enter
lods
cdq
jo
xor
daa
aas
adc
call
xchg
fist
not
rcr
mov
ds
ret
inc
adc
sahf
retf
push
fsub
test
arpl
push
ss
adc
imul
stc
xor
cmp
jge
mov
fst
loopne
add
stos
dec
clc
mov
fadd
xchg
mov
xlat
push
mov
sub
arpl
add
lea
sbb
or
jnp
mov
retf
push
inc
xor
pop
das
xchg
xor
cmp
inc
and
jbe
retf
(bad)
mov
ret
dec
inc
mov
popf
pop
ins
xor
sti
jg
out
test
xchg
jecxz
les
packuswb
ins
arpl
jb
pushf
pop
stos
cmp
in
pop
sub
std
rcr
movs
ffreep
lods
mov
dec
loop
sbb
pop
jo
cli
xchg
pushf
iret
inc
int
repz
mov
cmp
cmp
sbb
fiadd
inc
loope
lods
imul
push
sbb
inc
retf
dec
shr
push
pop
inc
xor
add
pop
(bad)
outs
push
ins
pop
pop
sub
ret
pushf
mov
inc
les
push
or
sbb
mov
and
push
test
std
fld
pop
loope
mov
call
int3
mov
sbb
inc
sub
add
dec
dec
sub
rcl
sbb
sbb
dec
sub
cdq
rol
loopne
cmps
dec
nop
sub
inc
xchg
cmp
sub
inc
add
sub
and
retf
fs
pushf
mov
inc
ins
inc
aam
mov
sbb
mov
push
and
mov
(bad)
xchg
mov
add
test
or
aam
dec
sbb
pop
add
sub
(bad)
add
jno
pop
mov
aam
ret
(bad)
mov
and
(bad)
pop
fs
inc
or
(bad)
ss
xchg
mov
movs
stos
mov
sbb
or
xchg
jo
scas
cmp
sbb
sub
sub
std
dec
mov
sar
or
jae
lods
cmps
inc
dec
mov
mov
stc
mov
xchg
je
adc
mov
mov
jbe
data16
cld
push
add
fs
mov
sub
aas
mov
xchg
xchg
imul
hlt
mov
icebp
mov
sbb
call
add
dec
and
clc
pop
frstor
test
add
jns
pop
xchg
add
push
popf
cmps
fwait
adc
mov
cmp
and
and
sub
cmc
and
jno
or
lds
sub
mov
and
mov
xchg
lea
scas
inc
dec
stos
and
out
inc
push
pcmpeqb
and
adc
adc
add
popa
push
nop
test
dec
add
adc
ret
mov
push
loopne
(bad)
mov
(bad)
xor
fidiv
ss
out
ins
ins
jae
dec
xor
sub
cld
push
fsubr
aam
pusha
push
sti
leave
enter
out
push
xor
push
aam
push
cmp
leave
retf
int
shl
fdivr
jae
xlat
mul
jae
frstor
cmp
pop
xor
je
fsubr
mov
repnz
test
frstor
mov
dec
outs
adc
mov
jmp
shl
neg
mov
cmp
mov
(bad)
ins
jg
pop
mov
inc
inc
add
enter
inc
into
xchg
push
cmp
mov
test
adc
fs
retf
je
mov
adc
pusha
loope
arpl
scas
xchg
sub
movs
sbb
lods
push
and
idiv
add
fwait
xchg
and
fcomp
stos
xchg
dec
pusha
mov
dec
sahf
je
stos
push
dec
std
int3
arpl
xchg
pop
jmp
mov
test
mov
mov
cmc
loope
ins
ins
scas
nop
xchg
mov
retf
arpl
int3
jbe
fimul
test
dec
cld
inc
inc
fstp
xchg
int3
fs
xor
adc
or
ins
repnz
sbb
pop
xor
xchg
mov
(bad)
xchg
mov
(bad)
loopne
(bad)
std
and
push
jecxz
nop
mov
nop
ins
pop
sub
call
test
imul
stos
clc
(bad)
in
xchg
test
pop
int
aaa
rol
xchg
outs
mov
jp
jne
jp
into
in
loope
ss
sbb
jnp
aad
fnstcw
lods
das
pop
xor
test
mov
into
cmp
icebp
shl
loope
in
push
mov
in
ja
and
jmp
std
dec
mov
sub
loopne
loop
adc
movs
or
adc
in
fstp
(bad)
in
sub
scas
(bad)
in
jae
sbb
(bad)
mov
aad
jne
sbb
lds
shl
pop
add
imul
aam
popf
xchg
mov
pop
pop
xor
and
ret
push
mul
pop
or
ja
mov
push
sahf
fcmovnb
inc
(bad)
test
ret
jge
les
cmps
sub
imul
mov
pop
mov
add
stos
cmp
and
sbb
in
std
dec
dec
pop
sti
inc
lea
xchg
aam
arpl
xor
mov
inc
adc
(bad)
fdiv
push
(bad)
fsubr
(bad)
cmc
std
cmps
call
retf
adc
push
push
mov
sub
jb
fimul
or
stos
stos
repz
jo
push
and
or
loopne
add
cmps
and
fild
pop
dec
aas
ror
push
adc
or
rcl
cdq
lea
les
bound
mov
enter
xchg
mov
dec
mov
data16
in
retf
test
xchg
mov
cmp
data16
inc
adc
add
cli
add
mov
and
pop
and
ins
sub
cmp
test
fimul
dec
xor
xchg
push
mov
cmp
sbb
cmps
stos
leave
xchg
push
ss
or
pop
mov
sub
jmp
xor
cmp
jl
iret
and
fdiv
mov
ins
lods
cwde
push
and
xchg
rcr
sbb
mov
repz
pop
js
sbb
sbb
(bad)
mov
sbb
pusha
retf
(bad)
repnz
call
arpl
popf
dec
imul
xor
adc
out
(bad)
mov
adc
xchg
cmps
sbb
mov
xor
lods
(bad)
into
aaa
cli
push
out
scas
adc
retf
pop
rcr
out
std
out
nop
push
out
mov
imul
test
es
mov
mov
push
dec
inc
retf
loop
push
sbb
push
push
lea
add
add
push
lods
sub
inc
arpl
push
aam
cmp
inc
xor
(bad)
rol
cmp
mov
in
push
dec
xchg
cmp
adc
in
sti
outs
sub
jo
jecxz
pop
cmp
dec
cmp
cmps
adc
sbb
inc
sbb
and
je
test
xchg
add
or
adc
cmp
lea
jno
xor
sbb
push
scas
into
adc
cli
in
sub
xchg
mov
div
mov
push
in
aad
sti
pop
xor
ror
cmp
lahf
repz
(bad)
cs
jbe
out
scas
daa
and
fmul
jne
std
xchg
neg
cvtps2pi
jle
xchg
das
cmps
in
mov
cmp
jecxz
dec
in
call
jg
stc
push
cli
bound
sti
dec
xchg
add
mov
ins
mov
mov
outs
push
ins
scas
outs
jnp
out
loope
(bad)
les
hlt
cwde
xchg
mov
iret
fisubr
xor
push
xchg
pushf
sbb
xchg
cmp
push
mov
or
sbb
jmp
add
sub
iret
mov
jb
jno
sbb
dec
xor
mov
retf
jo
stos
sbb
outs
shl
push
sbb
mov
pop
movs
pusha
pop
xor
scas
out
scas
fistp
cmp
pop
jmp
jo
inc
scas
aas
jge
jb
les
jecxz
(bad)
rcl
cmps
jo
pusha
and
scas
iret
dec
cmp
loope
scas
fdiv
fwait
xor
add
fisubr
ds
bound
sbb
ror
loope
gs
sbb
daa
mov
inc
cld
pop
je
dec
xchg
pop
push
ss
addr16
dec
mov
test
mov
mov
xor
mov
mov
repnz
fdivr
sahf
loopne
add
inc
and
sbb
outs
cmp
dec
fs
xchg
shl
fisttp
sahf
into
push
sub
scas
mov
sub
call
sbb
stos
ror
push
or
mov
xchg
lahf
xchg
test
mov
mov
push
adc
sub
and
add
iret
jmp
lods
ror
icebp
scas
inc
ret
call
test
in
popf
daa
xchg
mov
gs
addr16
and
mov
test
push
retf
mov
lahf
fwait
sbb
fisubr
fdiv
xchg
push
inc
push
mul
dec
mov
mov
(bad)
(bad)
fadd
cmp
std
jle
cmp
icebp
fbstp
jnp
iret
jo
xor
mov
(bad)
cs
scas
adc
loop
int
inc
stos
sbb
shl
pop
pop
sub
out
pop
pop
push
jne
cmps
fdiv
dec
sub
inc
leave
adc
fidiv
imul
sbb
jp
cmp
cli
lahf
aaa
leave
imul
xchg
sar
jp
repnz
lods
icebp
mov
jg
(bad)
daa
inc
and
lock
dec
mov
or
test
add
push
adc
jge
lock
jg
sub
aaa
sub
in
aas
rcr
retf
xor
fcmovnu
dec
cdq
pop
sbb
push
cmps
sub
xlat
mov
push
push
mov
pusha
adc
mov
sbb
add
dec
sbb
out
cmps
adc
or
cwde
adc
push
mov
push
loop
out
cmps
adc
gs
cmps
xor
ret
mov
jno
aam
popa
pop
fadd
and
mov
test
mov
sub
adc
and
shl
adc
jae
sub
jnp
and
add
jecxz
hlt
jg
sub
(bad)
cmp
fsub
add
cs
aaa
push
mov
mov
dec
jmp
push
(bad)
aam
cmp
mov
push
test
cmc
inc
dec
cwde
adc
fistp
sti
mov
xchg
xlat
pop
pop
mov
jmp
xchg
paddusw
mov
xchg
xchg
loopne
fwait
sbb
cmp
add
push
in
int
mov
jnp
dec
sbb
inc
js
cmp
push
dec
jecxz
daa
call
gs
dec
das
cs
jno
push
mov
loopne
lock
add
jne
sbb
int3
push
pop
add
std
push
shl
cwde
(bad)
repnz
or
mov
push
jl
aas
jge
adc
in
mov
je
cmps
sub
or
ror
push
xor
xchg
and
adc
sbb
mov
pop
test
div
aad
lds
cmc
and
sbb
cmps
push
push
dec
ins
outs
inc
jns
sbb
push
mov
and
xchg
imul
mov
mov
adc
jbe
or
add
jo
dec
xor
jo
fild
push
pop
retf
sub
ret
fild
imul
lods
lods
loope
popa
cmp
mov
sbb
jbe
repz
cmp
fstp
mov
push
in
fsub
jnp
xor
jecxz
js
aas
js
fucomi
sar
cmps
out
in
mov
jg
leave
lock
daa
and
in
dec
dec
jne
std
xchg
test
pop
stos
cld
xor
ret
ins
pop
dec
cs
(bad)
stos
je
mov
push
cli
bound
aam
jecxz
xchg
mov
mov
loopne
data16
and
mov
aaa
loopne
(bad)
int
jmp
lods
clc
popf
in
sbb
cmp
scas
rcl
mov
imul
cmps
dec
push
xchg
mov
mov
daa
add
and
cmp
pusha
pushf
jmp
call
cs
addr16
(bad)
scas
ds
push
enter
inc
pop
test
movs
jnp
mov
mov
sub
fld
fisttp
daa
xchg
push
ss
ret
lea
ins
pusha
repz
mov
lods
mov
push
xor
sahf
jne
aad
fist
shl
xchg
inc
jo
sbb
mov
cdq
daa
inc
or
repnz
push
inc
pause
je
xor
sar
push
pusha
mov
push
aam
sub
mov
xchg
adc
repz
or
sbb
jmp
(bad)
xchg
leave
sar
ins
xor
jbe
repnz
adc
(bad)
fsub
cwde
out
and
popa
leave
pop
push
sbb
push
fld
call
cmc
sar
bnd
in
fld
xlat
mov
mov
popa
out
jbe
fcmovnu
cmp
and
movs
dec
rcr
movs
mov
mov
mov
push
into
stos
leave
(bad)
out
fild
(bad)
out
push
mov
mov
mov
sbb
xor
inc
pop
sub
cmp
lds
imul
jle
mov
into
(bad)
xor
nop
movs
jge
dec
aam
ror
ja
call
and
jne
in
mov
dec
push
jle
mov
retf
dec
pop
(bad)
scas
or
and
cli
pop
dec
xlat
sub
inc
xor
cmps
int
shr
push
mov
repz
(bad)
adc
test
movs
stc
jns
push
push
dec
inc
xchg
jecxz
pop
imul
and
jae
jno
mov
arpl
or
dec
bound
or
retf
mov
mov
stc
inc
and
cmp
jmp
cmp
aad
(bad)
test
sbb
or
std
sub
xor
sub
cmps
fimul
(bad)
daa
inc
dec
jmp
adc
fwait
in
mov
or
add
push
inc
sbb
push
scas
jmp
jge
enter
mov
mov
mov
and
xor
mov
imul
retf
mov
add
add
xchg
xchg
sbb
xchg
enter
call
adc
push
(bad)
mov
sbb
ret
add
aam
and
cmp
pop
xor
xor
mov
sbb
or
cmovno
or
pop
mov
dec
imul
dec
test
push
rcr
(bad)
in
pop
mov
jns
fstp
xchg
cmps
inc
push
rcl
mov
ror
mov
in
(bad)
dec
dec
jle
xchg
call
xor
sub
sti
add
retf
rol
call
inc
outs
test
or
cmp
inc
repnz
jne
push
popa
xor
(bad)
test
imul
push
or
movs
adc
loop
mov
(bad)
pusha
adc
mov
outs
int3
pusha
ins
inc
fiadd
or
loope
mov
aas
push
cmp
jmp
dec
cdq
shl
js
xor
xchg
and
mov
xchg
fcom
sbb
cmp
cmp
out
dec
and
pop
and
cli
in
sahf
in
inc
mov
push
pop
out
jmp
hlt
add
enter
adc
outs
pop
fs
xchg
outs
sub
mov
shl
sub
and
xchg
lock
clc
aam
xchg
adc
mov
leave
(bad)
popw
loop
inc
jo
test
inc
fld
mov
mov
push
inc
inc
shr
and
rcl
inc
or
scas
sub
div
outs
ds
(bad)
(bad)
in
xchg
movs
dec
push
pop
lea
mov
mov
ins
push
push
addr16
fwait
xchg
std
cmp
gs
jle
test
aam
pop
mov
das
cmc
push
dec
mov
(bad)
retf
pop
ins
out
cli
pop
xchg
mov
out
push
inc
xchg
in
js
aaa
jl
cwde
call
mov
pop
jl
jbe
cmc
pop
and
pop
(bad)
xchg
iret
sub
(bad)
test
inc
pop
jecxz
add
add
push
push
and
aad
icebp
mov
cdq
or
xchg
out
sub
int3
jne
jo
lods
or
mov
jae
sahf
or
and
pop
out
push
or
sub
or
lea
inc
das
(bad)
out
mov
inc
ja
retf
dec
fdivr
mov
mov
adc
dec
push
lock
out
scas
xchg
mov
dec
dec
call
or
int
in
pushf
add
cmp
cmps
data16
loopne
mov
hlt
gs
in
cmp
add
fsub
xlat
(bad)
jp
mov
sbb
stc
arpl
test
inc
stos
mov
rol
push
std
cmps
data16
xor
popa
jo
inc
xchg
push
xchg
lea
pop
inc
or
mov
mov
ins
pop
adc
push
mov
xchg
fst
xor
mov
cmps
nop
lds
adc
pop
shr
imul
xor
int
dec
popa
sbb
add
jbe
inc
dec
and
jmp
sbb
ror
out
push
sahf
dec
fdivr
jbe
ins
mov
icebp
add
push
fistp
xchg
mov
imul
mov
gs
jno
sete
cmp
xor
sub
pop
mov
xchg
ss
movs
movs
add
cmp
test
cmps
(bad)
hlt
push
sbb
add
icebp
pop
mov
test
mov
lods
sub
inc
jmp
or
fsubr
loop
xchg
xlat
adc
neg
mov
aam
dec
loopne
sbb
scas
push
test
mov
pop
pop
jle
in
call
or
push
dec
dec
cdq
sbb
cmp
(bad)
mov
pop
inc
mov
ja
and
daa
and
aad
stos
(bad)
enter
cmp
add
loope
dec
sbb
mov
cdq
sub
push
in
outs
mov
cwde
pusha
fdivrp
call
popf
sti
cmps
xlat
mov
out
cmc
jbe
add
movs
and
adc
xor
adc
fstp
inc
sbb
jmp
push
daa
cmc
imul
(bad)
jbe
movs
add
xchg
jae
mov
inc
xor
stos
push
pop
scas
cmp
inc
inc
push
arpl
les
pusha
cmp
push
or
sbb
daa
push
jne
adc
movs
daa
sbb
shl
movs
mov
add
and
(bad)
in
mov
mov
mov
sbb
cmps
jne
fwait
sub
or
lods
outs
push
jo
or
pop
mov
xchg
push
or
lea
push
mov
jnp
sbb
sbb
mov
xchg
aas
mov
sahf
jmp
popf
fild
inc
hlt
jg
sbb
adc
or
clc
push
adc
inc
adc
inc
rol
daa
xchg
pop
test
inc
pop
repnz
push
(bad)
leave
dec
cmp
jnp
pop
out
mov
dec
(bad)
sbb
cmps
mov
dec
dec
adc
es
mov
test
adc
popa
add
loope
mov
add
fnstcw
mov
repnz
mov
clc
xchg
pusha
test
imul
aaa
into
scas
dec
sbb
jnp
adc
dec
mov
fiadd
(bad)
rcr
cmp
into
jne
add
or
push
retf
lock
inc
pop
cmp
xor
sbb
inc
push
dec
scas
or
pop
sub
pop
(bad)
sbb
pop
add
les
fild
and
(bad)
jae
sub
mov
push
pushf
inc
rcl
mov
(bad)
mov
pop
push
into
or
inc
lahf
mov
lahf
es
mov
inc
rcr
out
jns
xlat
cmp
(bad)
xchg
aaa
mov
dec
push
jne
outs
ds
fstp
test
xor
in
ret
mov
sbb
push
loopne
stos
sti
mov
js
addr16
push
outs
loop
jle
fsubr
xlat
push
in
pop
je
imul
in
enter
add
test
or
out
jnp
pop
cs
(bad)
leave
(bad)
sbb
fst
lock
mov
ficom
jge
mov
pop
pop
sbb
adc
shl
xor
outs
std
sbb
fld
leave
mov
jns
xor
ins
push
add
dec
jmp
lds
add
dec
cmp
or
or
sbb
jae
dec
pop
hlt
pop
iret
fst
jb
jge
fadd
mov
mov
xchg
add
xchg
fidivr
inc
sbb
xor
push
dec
in
jmp
pop
ins
rcr
cmp
leave
sub
add
mov
enter
xor
pop
ins
dec
mov
fcomp
sub
cmp
scas
dec
pop
ret
jnp
in
jp
jmp
cmc
cmp
push
and
shr
add
mov
nop
out
not
out
cwde
out
or
sub
ret
and
mov
xor
sbb
or
dec
adc
jbe
repnz
xacquire
in
(bad)
ds
fisttp
and
mov
(bad)
dec
int
add
jns
out
(bad)
shr
pop
aam
jno
mov
frstor
(bad)
daa
jns
jbe
hlt
dec
nop
loopne
stc
aad
lds
es
fiadd
or
popa
push
jbe
rcr
pop
call
fdivr
and
mov
push
fistp
push
aaa
jbe
mov
lds
cmp
adc
push
dec
sahf
fidiv
les
lods
test
mov
pop
and
loopne
mov
ja
in
mov
jne
mov
inc
into
xlat
pop
xchg
dec
mov
push
test
aas
shr
mov
jecxz
push
fucom
jb
jbe
stc
xchg
out
aaa
fisttp
dec
fld
adc
jg
inc
sahf
jae
jl
retf
sbb
adc
dec
inc
push
mov
(bad)
adc
into
xor
push
mov
les
mov
fiadd
bound
push
and
movs
push
dec
or
mov
adc
push
cmp
sub
sbb
retf
xchg
stos
xchg
mov
adc
retf
test
stc
jmp
les
cmp
mov
cmp
push
xchg
and
scas
push
adc
inc
sub
push
pop
dec
jo
sub
adc
pusha
mov
adc
cmps
(bad)
lahf
jne
dec
and
jb
push
sub
lds
ins
jno
out
leave
stos
dec
clc
or
int3
aad
add
jne
aam
int
call
inc
xor
jns
xchg
out
mov
jae
arpl
cmps
sub
adc
sbb
stos
inc
aaa
add
(bad)
add
dec
loopne
aad
add
cld
pop
pop
xlat
push
leave
cmp
push
or
cmp
shr
add
loopne
stos
enter
scas
push
in
push
(bad)
outs
pop
cmps
(bad)
mov
cmp
sub
and
mov
test
cmp
sub
fild
sbb
add
xor
inc
pusha
in
out
fild
lea
rcl
in
jge
mov
in
addr16
cmp
sbb
fs
cmc
cmp
(bad)
mov
ret
xchg
imul
push
les
or
jne
cmp
les
cmp
sub
or
mov
pop
mov
ror
mov
dec
ret
neg
jl
pop
imul
sub
cwde
mov
jge
hlt
mov
pop
adc
div
loop
out
mov
jg
aad
jno
or
push
xchg
mov
stos
clc
aad
pop
push
ror
rcr
cdq
ins
scas
test
push
stos
(bad)
pop
push
retf
(bad)
mov
std
xchg
push
out
rcr
mov
std
ret
in
xchg
out
stos
pop
xlat
sbb
scas
repz
cmps
mov
in
mov
js
inc
push
cmp
dec
addr16
jno
(bad)
popf
cmp
(bad)
fdiv
scas
jns
fstp
push
(bad)
push
mov
dec
(bad)
imul
and
mov
fldcw
fimul
fdivr
test
cli
icebp
xor
test
inc
aam
aaa
aad
aam
sbb
jne
out
mov
shl
add
xchg
sub
inc
fucom
jmp
inc
mov
jb
adc
aas
gs
mov
mov
out
enter
fstp
call
mov
popf
les
dec
cld
mov
out
sub
xor
xchg
push
push
not
and
daa
jo
push
cmp
movs
adc
sbb
jecxz
and
movs
out
push
fisub
xor
push
or
xchg
add
aam
xchg
sbb
push
lea
add
or
jl
fisub
mov
mov
das
adc
mov
jmp
and
ins
scas
sbb
cwde
jne
inc
or
pop
mov
in
mov
enter
lds
hlt
adc
mov
ins
mov
fld
or
out
mov
jmp
jl
bound
cli
pop
fdiv
mov
add
mov
loope
mov
xor
inc
leave
pop
and
jnp
cmc
arpl
mov
cmp
push
or
dec
jno
sbb
test
lea
cmc
jp
sbb
shr
shl
cmp
(bad)
call
clc
movs
jae
pop
sbb
jmp
lods
push
icebp
push
fcom
jp
outs
outs
jg
loop
pushf
pop
dec
mov
aaa
and
xchg
adc
dec
xchg
scas
cli
das
adc
cld
out
arpl
dec
inc
push
xor
pusha
dec
pop
fs
outs
ja
add
mov
jecxz
jle
mov
adc
jne
sbb
sbb
xor
test
jne
dec
and
sbb
adc
sbb
push
xchg
add
xor
push
sahf
sbb
in
jns
dec
and
repz
call
popa
cdq
and
or
inc
sbb
pop
dec
mov
cmp
fisub
mov
xchg
out
push
imul
loope
cmc
jno
jbe
iret
or
je
push
jmp
push
(bad)
cmp
loop
(bad)
dec
repz
pop
mov
fstp
in
test
lods
cmp
adc
fcomp
push
ror
dec
xchg
and
in
mov
daa
push
cli
mov
jmp
sub
popf
leave
cli
inc
add
adc
jae
jns
sbb
add
inc
push
jge
ja
mov
nop
xor
sub
inc
fs
stc
lea
les
dec
jbe
add
retf
sbb
lods
xchg
daa
or
test
aam
inc
mov
inc
xor
and
dec
push
(bad)
cmp
sar
xor
pop
fst
lahf
adc
add
cmps
mov
xlat
xor
sub
push
(bad)
jg
mov
ret
out
ds
(bad)
sbb
fistp
fdivr
sbb
jp
imul
cdq
in
add
xor
int3
cdq
es
stos
pop
cmps
jne
ds
sub
sbb
or
mov
add
mov
pop
ds
inc
out
rcl
xchg
dec
(bad)
lahf
pop
mov
or
cmp
loope
nop
scas
fisttp
bound
lock
(bad)
or
sbb
xchg
inc
xchg
repnz
push
inc
popa
xchg
or
sar
aas
mov
je
sbb
jp
(bad)
icebp
ja
jo
sahf
gs
mov
aas
gs
mov
stc
add
cmp
movs
adc
aam
sti
outs
popf
cs
push
pushf
push
out
inc
ja
push
mov
mov
std
dec
mov
xor
arpl
fidivr
inc
mov
jecxz
push
cmps
out
sub
nop
or
add
xchg
in
add
or
test
pop
sbb
mov
pop
repnz
adc
xor
jbe
inc
xchg
cmp
shl
(bad)
loopne
ficomp
(bad)
repnz
ds
cli
jae
arpl
push
dec
mov
into
xor
loop
int3
jae
ficom
cmps
loopne
push
push
movs
retf
out
test
cmp
int
(bad)
sti
and
jge
(bad)
inc
sar
push
pop
push
shl
mov
push
cmps
pop
aaa
cld
(bad)
inc
mov
mov
dec
scas
xlat
outs
popa
inc
cdq
sub
retf
les
jle
dec
int
stos
and
aad
mov
cld
rol
bound
(bad)
adc
dec
fstp
adc
jmp
imul
dec
xchg
push
sub
add
stos
stos
bnd
push
repnz
fcomi
inc
inc
ficomp
jns
fnstsw
inc
sbb
fimul
and
mov
or
fs
cmp
movs
jnp
jbe
outs
lds
fsubr
pop
push
outs
cdq
stos
jnp
pop
mov
dec
int3
iret
pop
mov
xor
stos
push
ins
add
sti
push
lds
stos
sar
(bad)
loopne
cs
out
mov
in
addr16
movs
fwait
jmp
outs
pop
or
call
add
xor
jne
arpl
les
xor
xor
(bad)
out
js
clc
push
add
add
mov
into
std
test
push
adc
inc
(bad)
in
sub
adc
mov
dec
int3
xchg
ds
ret
ret
inc
shl
push
in
scas
int3
or
(bad)
movs
cs
sub
pop
jge
push
lds
pusha
or
cmp
(bad)
xchg
cli
dec
iret
daa
xor
xor
retf
imul
push
or
add
mov
loop
cmp
in
mov
and
jmp
sub
mov
jmp
pop
pop
aam
xor
inc
out
or
cmp
jo
pushf
xlat
jbe
adc
fcom
mov
pop
and
push
rol
cld
xor
or
and
add
rol
pop
mov
ins
shl
cmp
add
xor
loop
lds
mov
aas
sub
in
(bad)
test
pop
and
or
lods
out
mov
pushf
ficomp
pop
cmp
sbb
sub
ss
mov
xor
cmp
pop
aad
cmps
test
sub
outs
pushf
or
sub
push
pop
mov
pop
(bad)
test
sar
mov
adc
loopne
or
lods
(bad)
sbb
retf
ins
shl
push
jmp
and
jg
push
sub
pop
test
das
imul
or
inc
outs
bound
push
daa
dec
or
cmp
rcl
mov
cmc
arpl
and
mov
dec
sbb
aas
cmp
inc
sbb
cmp
call
sub
or
xor
push
adc
mov
sbb
jmp
clc
lods
pop
out
jnp
cmps
ret
cli
pop
(bad)
out
aas
leave
clc
das
loop
mov
mov
jecxz
or
xor
jb
test
add
mov
in
adc
mov
adc
test
mov
movs
xchg
mov
outs
and
xchg
adc
rcl
test
cwde
mov
jo
adc
cmp
mov
xchg
(bad)
mov
inc
pop
sbb
ja
mov
push
sti
shl
popa
les
mov
pop
outs
icebp
rcl
clc
sub
std
adc
or
test
ja
mov
sti
scas
mov
jg
shl
mov
push
xchg
jno
lods
scas
ins
mov
int
scas
cwde
(bad)
(bad)
cmp
xor
cmp
xlat
and
add
retf
outs
fdiv
clc
mov
xchg
or
xchg
jbe
mov
mov
fdivr
loope
push
push
outs
(bad)
ds
adc
inc
imul
aad
cmps
shl
ret
dec
ret
mov
rcr
jmp
inc
enter
cmp
sahf
pop
adc
dec
or
mov
pop
xchg
arpl
(bad)
xchg
sub
enter
popa
push
inc
mov
outs
(bad)
shr
mov
nop
mov
push
mov
xlat
fs
xchg
call
outs
scas
enter
inc
mov
add
call
(bad)
dec
lods
aaa
sbb
outs
fld
js
lea
jg
stos
push
cwde
cmp
jbe
pop
inc
js
leave
sub
push
adc
pop
and
push
out
(bad)
push
fidivr
iret
mov
dec
int
dec
outs
movd
sbb
push
cmp
fwait
es
shl
daa
lock
and
hlt
in
call
sti
arpl
lds
cdq
pop
movs
jge
je
ret
push
nop
push
fdiv
popa
add
mov
sti
test
dec
sbb
mov
push
xor
pop
mov
std
xor
inc
xchg
(bad)
jp
sub
push
sbb
cmp
or
mov
inc
push
std
daa
sub
sub
pusha
xor
jecxz
jbe
and
lea
shr
cli
mov
rcl
scas
or
out
adc
sbb
out
scas
ds
jbe
cmp
push
push
xchg
scas
push
ins
lods
and
setbe
loopne
out
lea
mov
or
cld
mov
scas
ror
loop
add
cld
sub
outs
test
in
sub
jge
retf
inc
jo
xchg
jo
fisttp
daa
add
pop
and
std
daa
ror
inc
stos
loop
out
jbe
mov
hlt
cmps
out
mov
aam
xor
shl
xchg
pop
jb
jge
push
clc
rol
mov
aam
xchg
cmps
ins
fisubr
arpl
cli
imul
sub
xor
aas
jae
add
ja
and
arpl
push
enter
call
dec
inc
hlt
jp
out
push
mov
sahf
gs
dec
sub
mov
add
inc
ins
cmp
or
push
dec
sub
dec
sbb
inc
inc
push
fidivr
sub
push
mov
inc
inc
arpl
xor
xlat
and
cmc
or
mov
pop
ins
in
popa
sbb
pop
mov
or
outs
(bad)
mov
sub
(bad)
sub
xchg
sbb
sbb
mov
sub
inc
pop
or
mov
imul
es
out
cmp
adc
mov
iret
mov
mov
cli
(bad)
mov
mov
dec
call
mov
or
pop
push
outs
mov
fwait
cwde
or
stos
jl
ds
out
pop
inc
mov
inc
cli
push
push
je
xchg
pop
sbb
xchg
add
adc
mov
out
push
jmp
movs
pop
outs
rol
jbe
cmp
pop
xor
(bad)
shr
jmp
sub
pusha
jge
call
add
call
aad
(bad)
xchg
nop
dec
sahf
scas
inc
mov
mov
adc
out
jbe
cmp
mov
fisubr
jle
cmc
inc
jle
mov
retf
cmps
in
pusha
or
test
push
inc
pop
pushw
es
outs
mov
or
mov
or
mov
xchg
popa
ror
xor
fdivr
mov
sbb
ficom
push
data16
pop
cwde
(bad)
dec
mov
adc
int
jae
xchg
jae
mov
mov
call
lea
lea
sub
mov
mov
retf
fild
je
push
cwde
add
jmp
sbb
and
mov
and
ins
dec
out
leave
jecxz
pop
and
jns
xchg
jmp
pop
aas
loopne
mov
enter
fs
or
stos
int3
movs
push
neg
mov
ins
(bad)
inc
outs
fs
loop
movs
inc
adc
fmul
push
push
das
inc
je
fwait
inc
(bad)
fidiv
repnz
into
cmp
pop
fbld
and
xor
pop
outs
cdq
addr16
add
hlt
mov
push
jge
jmp
dec
fiadd
xchg
pop
ss
arpl
and
cli
dec
jl
imul
repnz
cmp
pop
mov
jo
mov
(bad)
(bad)
push
push
cwde
scas
jne
adc
cmps
sbb
adc
ins
dec
mov
xchg
or
push
sub
ret
dec
xchg
xchg
mov
cmp
lods
je
sub
jp
pop
mov
scas
in
test
outs
cmc
mov
imul
pop
mov
call
sub
pop
je
push
popf
icebp
(bad)
(bad)
ret
fistp
fnstsw
dec
ja
dec
hlt
sbb
shl
in
mov
(bad)
popf
and
repnz
js
rcl
lock
out
scas
(bad)
out
cmp
cld
je
clc
jmp
in
lods
cld
mov
jmp
stos
or
loope
mov
mov
inc
mov
mov
mov
nop
mov
ds
bnd
imul
dec
inc
sub
and
jge
xlat
mov
jg
enter
movs
aaa
cdq
scas
inc
sbb
stos
push
pop
mov
in
stos
xchg
mov
push
dec
jbe
add
pop
sub
sbb
inc
jae
dec
cmp
js
stos
aaa
ds
inc
jb
jl
jmp
cmps
mov
pop
in
xchg
lods
or
fstp
ss
jmp
stc
pushf
into
push
bound
sbb
int3
xchg
mov
mov
adc
xchg
jbe
jp
push
icebp
ror
mov
mov
jns
mov
or
out
mov
rcr
(bad)
mov
pop
mov
rol
fist
jp
outs
sbb
cs
aaa
pusha
jecxz
lods
cli
lahf
movs
cli
pop
popa
jmp
gs
mov
jne
ja
fucompp
movs
sbb
call
hlt
mov
fs
cmc
mov
outs
sub
xchg
xor
inc
cmp
mov
test
out
lods
mov
sti
(bad)
dec
mov
jp
mov
out
repnz
add
xchg
imul
out
jo
retf
(bad)
pop
cwde
movs
std
and
sub
lock
sbb
ret
cmc
(bad)
(bad)
push
fnstenv
or
in
or
test
dec
ret
shl
repnz
xchg
aam
mov
dec
jb
xchg
ficomp
aad
xor
pop
sub
push
fdiv
inc
cmp
(bad)
jmp
sahf
adc
jmp
add
cmp
adc
jb
in
das
and
xor
jecxz
gs
inc
or
jbe
scas
jno
sbb
and
cmp
cmp
jge
jl
loope
jge
pop
fwait
jns
scas
push
mov
scas
jo
pop
pop
jl
out
inc
mov
out
outs
aam
mov
xchg
in
fstp
jb
xchg
mov
cmc
rcr
add
daa
jmp
int3
inc
xor
ret
ins
cmp
jb
cmp
mov
fldcw
push
add
mov
test
adc
mov
inc
clc
push
ins
mov
nop
mov
loop
add
test
xchg
repnz
scas
xchg
imul
inc
add
loop
stos
ret
cmps
retf
ds
aas
xchg
outs
call
mov
or
leave
push
adc
imul
add
aad
sbb
movs
dec
jmp
dec
pop
js
or
xor
push
adc
mov
cs
adc
(bad)
(bad)
fwait
adc
adc
aas
call
nop
mov
jns
push
and
test
or
or
mov
jb
sbb
call
cmp
inc
movs
xor
(bad)
xor
xor
pop
pop
xlat
pop
ss
mov
and
mov
movs
inc
jp
test
pop
std
and
cdq
pop
dec
lods
pop
sub
cs
movs
setnp
sbb
jecxz
mov
dec
clc
sar
push
pop
xor
int
fnsave
jl
add
mov
jno
inc
dec
sti
sub
and
je
sar
add
jno
jne
xor
push
cld
lods
fnclex
xchg
jno
mov
ret
popa
test
xchg
inc
inc
dec
adc
jmp
adc
imul
(bad)
idiv
jle
ffree
jp
(bad)
jl
xor
imul
out
fwait
sbb
xor
inc
add
test
in
lock
test
ficom
fsubr
sbb
repz
xchg
neg
fidivr
imul
into
fsubr
test
jns
shl
rol
pop
dec
daa
mov
(bad)
scas
stos
rcl
scas
cmps
aas
test
lds
sbb
rcr
inc
ins
scas
bnd
mov
xor
sub
jno
dec
dec
imul
add
jns
icebp
test
clc
js
xor
scas
fild
mov
push
inc
xor
mov
cmps
daa
pusha
push
imul
addr16
mov
(bad)
stc
cdq
and
mov
dec
and
loop
inc
(bad)
lahf
jge
mov
(bad)
fst
clc
popf
fidiv
fprem
jmp
movs
mov
adc
mov
jnp
mov
in
xlat
das
das
aad
xchg
xchg
xchg
psrlq
jmp
leave
fnstsw
pop
pop
test
movs
xor
push
loop
(bad)
jmp
inc
imul
mov
push
xor
shl
mov
pop
sub
in
jmp
dec
cmp
mov
fdiv
xchg
or
jnp
pop
shr
jno
mov
adc
test
mov
lods
push
ins
sub
ret
ret
shr
iret
dec
adc
popf
arpl
(bad)
jno
jne
cmp
mov
dec
cwde
test
loop
in
imul
cwde
jb
neg
jmp
shl
rcl
pop
or
mov
mov
jmp
cmp
into
daa
aam
clc
dec
or
xchg
cmp
sub
mov
mov
push
fwait
leave
outs
inc
cli
add
arpl
leave
add
imul
retf
sahf
jno
jg
pop
mov
adc
xchg
iret
jmp
(bad)
fadd
sbb
adc
jle
sbb
fbstp
adc
lea
add
jnp
arpl
dec
pop
push
add
mov
cli
mov
lds
loope
mov
cld
dec
sub
aad
and
lds
fisubr
or
mov
jo
movs
mov
xchg
out
push
mov
jg
ins
mov
fst
inc
cmp
bound
cdq
cmp
jnp
xchg
ins
pop
dec
pop
ror
(bad)
mov
adc
xor
pop
mov
ins
scas
mov
cmc
arpl
je
or
mov
push
dec
pop
pop
in
or
movs
mov
mov
sub
leave
cwde
cmp
mov
lock
xor
lods
jge
cwde
jecxz
cmp
imul
ror
ins
iret
(bad)
hlt
lock
xchg
imul
or
in
xlat
fs
jno
arpl
test
cmp
repnz
mov
push
add
sub
adc
and
pushf
call
iret
push
sub
inc
and
(bad)
into
out
ret
and
popa
lods
push
and
fstp
mov
dec
mov
mov
dec
jmp
push
leave
jge
pop
shl
dec
adc
retf
jae
xor
arpl
jle
push
retf
hlt
inc
jae
mov
adc
mov
or
into
push
or
mov
mov
adc
test
cmp
lea
leave
lea
dec
outs
je
es
adc
adc
mov
adc
fs
fdiv
jmp
(bad)
mov
mov
lahf
loop
push
xor
data16
push
outs
lds
test
sbb
mov
push
xchg
add
popa
inc
fs
mov
sbb
xchg
inc
xor
lea
aas
add
sbb
add
mov
cmps
lock
fnsave
bnd
lock
aas
sbb
hlt
jb
fild
inc
lods
mov
into
das
shr
mov
out
xchg
std
stos
inc
(bad)
cmc
adc
iret
hlt
inc
data16
or
cmc
and
mov
sbb
cmp
cwde
idiv
mov
dec
loopne
mov
jle
cmps
mov
push
xchg
aad
sbb
pusha
fisub
lahf
adc
(bad)
ss
lock
cli
pop
jb
push
dec
adc
xor
push
cs
iret
jecxz
mov
retf
mov
push
cdq
mov
jle
scas
cwde
icebp
add
fbstp
pop
jecxz
out
js
add
jl
lahf
std
jg
mov
pop
in
fmul
jb
sbb
dec
mov
clc
push
cld
cmp
dec
and
lock
loope
mov
mov
jmp
sbb
lds
movs
shl
adc
adc
add
and
add
sub
dec
jb
out
aad
add
mov
data16
out
mov
fdiv
icebp
mov
into
xor
xor
adc
mov
sar
xchg
nop
sbb
in
out
jbe
call
sbb
adc
(bad)
shl
xchg
jmp
icebp
jmp
out
xchg
jmp
imul
mov
or
mov
push
mov
cli
push
mov
shr
inc
push
cmp
push
es
clc
sahf
out
js
adc
rcr
xchg
cmp
sbb
xor
retf
jae
test
in
mov
adc
dec
lods
cwde
pop
sbb
popf
push
and
lahf
dec
mov
sti
outs
xchg
lock
cwde
outs
dec
pop
adc
stos
mov
es
mov
jae
aad
retf
or
loop
imul
sbb
sbb
cmc
adc
ret
imul
scas
and
sbb
lods
or
in
icebp
in
cmp
xchg
int
inc
aas
adc
scas
adc
mov
push
cs
rcl
nop
or
mov
mov
ins
inc
ret
mov
dec
fcomp
mov
pop
stos
and
sbb
sahf
mov
mov
mov
rcr
lahf
out
mov
pop
mov
pop
push
fbstp
imul
arpl
pop
cmp
(bad)
jae
xchg
outs
(bad)
ins
mov
sbb
add
sti
mov
popf
into
push
fsub
push
in
ror
jne
sbb
cwde
fidiv
push
pop
iret
pop
clc
mov
cmp
xor
push
or
xor
inc
inc
cli
jg
out
xor
test
push
das
xchg
(bad)
push
mov
pop
xor
into
retf
mov
loopne
shl
pop
imul
aam
fadd
out
sub
and
mov
push
xchg
xor
pop
mov
lea
inc
call
or
nop
push
xchg
mov
lahf
sbb
mov
ins
pop
and
lahf
fidivr
push
loopne
xchg
pop
xchg
mov
std
scas
aam
ins
sar
icebp
rol
test
loope
jge
repnz
xchg
push
std
les
and
push
jp
fcmovnb
out
mov
(bad)
lock
push
lods
pop
imul
jmp
inc
and
cmps
add
int
or
add
adc
mov
arpl
or
test
dec
in
push
and
shl
loopne
adc
push
and
dec
pop
aam
or
xlat
pop
pslld
cmp
dec
div
mov
ret
lea
mov
ds
xor
or
std
cmp
xchg
(bad)
sbb
lds
sub
add
sub
dec
add
adc
and
mov
add
aad
int3
xor
(bad)
sbb
(bad)
stc
or
nop
std
das
jbe
xchg
in
aas
jecxz
(bad)
call
lock
cld
dec
inc
fwait
mov
enter
inc
repnz
push
sub
aaa
stc
gs
cmp
das
add
mov
cmp
jae
pop
and
arpl
jmp
fist
mov
jno
outs
or
es
test
jb
push
sub
and
cmp
sub
cmp
xchg
mov
push
inc
xchg
adc
dec
sbb
add
pop
jns
test
(bad)
mov
adc
xchg
inc
cli
shl
push
cmps
in
push
retf
es
cmps
cli
push
jb
add
cmp
int
inc
pop
mov
push
(bad)
aad
mov
stc
adc
push
jge
outs
inc
fadd
xchg
jno
call
arpl
pop
ins
mov
(bad)
mov
mov
sbb
sbb
xchg
jne
jo
gs
dec
cmps
dec
inc
loopne
movs
jnp
push
push
mov
cmps
cwde
pop
retf
push
xchg
sbb
test
adc
push
xchg
aam
jmp
pop
inc
sbb
pop
rol
movs
mov
ret
pop
mov
retf
popa
mov
int3
scas
out
data16
mov
mov
(bad)
mov
rcl
mov
into
jmp
lock
mov
or
test
push
je
fnsave
ja
mov
lahf
jo
mov
mov
cli
or
mov
pop
sbb
mov
jnp
mov
daa
push
cmovp
cmp
xchg
imul
xor
dec
fldenv
inc
pop
stos
in
or
xchg
fistp
jno
loop
sub
add
cmp
jae
cmp
(bad)
test
pop
add
lahf
or
mov
mov
xor
cmps
cmp
ds
ins
jbe
fidiv
fcomp
or
scas
mov
and
sbb
lods
jmp
fwait
cmp
mov
pop
loopne
jb
out
(bad)
popf
jb
inc
sub
add
pop
cmc
sub
xor
sub
push
fcmovbe
into
lods
sub
pop
cmp
xchg
xor
jnp
xor
(bad)
push
outs
pop
stos
fstp
sbb
jl
out
jecxz
push
cmp
jnp
pop
in
nop
mov
dec
sar
pop
dec
cmp
mov
jnp
sbb
(bad)
ror
aad
jo
push
xor
(bad)
scas
int3
cdq
(bad)
jb
inc
in
inc
mov
outs
stos
or
jne
cs
adc
inc
add
push
loop
test
push
xor
dec
jns
ins
add
dec
add
mov
or
xchg
push
jo
or
fisubr
jbe
jbe
inc
fld
daa
rol
mov
clc
(bad)
fld
mov
(bad)
xor
fistp
jno
loopne
dec
jbe
sub
(bad)
mov
push
push
(bad)
xchg
push
retf
push
loop
dec
inc
pop
jne
(bad)
jnp
mov
jb
mov
xchg
(bad)
push
pop
stc
das
aad
popa
jnp
(bad)
mov
loope
scas
xchg
rcr
in
aam
add
mov
ss
aam
hlt
(bad)
pop
dec
push
(bad)
add
dec
sub
pop
dec
xor
mov
cs
(bad)
pushf
jmp
in
jo
daa
or
pop
call
mov
(bad)
add
and
add
mov
xchg
inc
or
adc
test
movs
push
sbb
jne
jg
pop
adc
jmp
push
inc
into
add
dec
es
nop
test
push
inc
inc
js
inc
jb
icebp
xlat
jbe
(bad)
ins
pusha
and
inc
into
jg
mov
jge
mov
fcom
jg
pusha
(bad)
(bad)
adc
mov
mov
enter
add
cli
and
std
mov
pop
sub
pop
pop
scas
leave
in
cli
mov
div
(bad)
std
push
push
(bad)
mov
and
ds
jecxz
test
jg
mov
mov
pop
dec
fst
cmp
stos
jmp
cs
add
fld
and
call
mov
push
stos
das
mov
test
cli
fcmove
inc
fisttp
mov
mov
leave
mov
mov
(bad)
jae
outs
not
pop
inc
div
jmp
sub
lods
fcomip
mov
hlt
test
cdq
sbb
mov
cld
iret
je
(bad)
fstp
scas
jae
repnz
pop
jno
shl
ins
scas
sbb
mov
and
ret
leave
out
(bad)
push
retf
in
je
es
cmp
push
je
xchg
in
ins
sbb
jae
movs
adc
pop
pop
inc
dec
arpl
ret
mov
in
out
mov
mov
cmp
push
daa
outs
cmc
mov
in
mov
mov
pop
dec
pop
out
imul
imul
mov
mov
fcom
fnstsw
dec
movs
sub
mov
jo
xchg
inc
mov
addr16
dec
enter
rcr
popa
stc
xchg
test
in
(bad)
retf
lds
lods
push
out
test
in
lea
inc
xor
cli
out
dec
mov
push
ins
mov
xlat
or
out
sub
mov
pop
inc
sbb
mov
mov
out
out
inc
jmp
ja
stos
imul
repz
lahf
pop
pop
or
das
shl
hlt
bound
pop
ds
lock
(bad)
pop
fxch
iret
int
hlt
fstp
es
xchg
int3
jo
cmp
jne
and
sbb
inc
ins
call
cwde
inc
fld
inc
dec
and
mov
sub
mov
test
int
sub
inc
js
push
call
outs
dec
jae
loop
mov
jns
mov
popa
mov
ja
(bad)
lods
xchg
mov
fsubrp
popf
sahf
in
cmps
out
push
lock
pop
in
cmps
(bad)
xlat
test
xchg
push
fadd
loop
rol
arpl
and
add
ror
pop
sahf
in
push
ds
fisttp
cmp
mov
cmp
cmps
test
arpl
mov
loopne
cmps
in
scas
xchg
inc
mov
addr16
out
mov
add
cmp
cli
sbb
retf
push
xchg
(bad)
out
(bad)
mov
fst
popf
stos
fst
jbe
or
stc
mov
and
sub
dec
jecxz
dec
mov
xchg
cmp
add
dec
adc
scas
jp
icebp
shl
add
mov
pop
or
mov
jbe
fld
pop
shl
repz
(bad)
(bad)
in
cld
mov
sbb
mov
mov
sbb
mov
sbb
fisttp
pop
sahf
pop
sar
in
jbe
jl
rcr
mul
(bad)
add
dec
jno
(bad)
mov
adc
adc
(bad)
push
adc
sub
add
or
inc
xor
pop
and
dec
pusha
mov
mov
leave
xor
add
into
loop
out
rcr
mov
xchg
sub
clc
inc
sub
add
fsub
jnp
movs
(bad)
cmps
xchg
mov
jb
xor
stc
inc
fwait
mov
mov
jge
adc
mov
scas
sbb
clc
mov
lds
xor
mov
adc
jns
cmp
fist
cmp
jo
xchg
push
dec
pop
pop
inc
mov
stc
mov
mov
movs
clc
mov
jb
cs
jmp
sbb
sar
sbb
cwde
pop
sbb
cwde
sbb
push
ja
mov
inc
mov
dec
cmp
inc
sbb
xchg
mov
clc
sbb
pushf
test
sbb
mov
adc
cmp
sub
mov
add
sub
dec
push
or
and
in
scas
jb
cmp
cmp
fcmovbe
inc
stos
cmp
mov
fnstenv
push
lods
pushf
fs
(bad)
pop
int3
mov
jno
cmps
aas
movs
jg
push
pop
xchg
sti
add
mov
jb
mov
ret
mov
push
test
mov
mov
sbb
pop
sub
pop
pop
les
test
movs
data16
stos
xchg
cmp
arpl
jnp
sub
ins
xchg
mov
hlt
mov
cmc
sbb
mov
sbb
sbb
clc
mov
cs
repnz
sti
cmps
pop
jle
ja
inc
stc
sbb
loopne
into
shl
cmp
cmp
in
(bad)
int
cmps
dec
icebp
xlat
clc
sahf
xchg
in
in
xor
shl
out
jne
leave
(bad)
(bad)
cmps
sub
or
loopne
mov
(bad)
dec
jge
xlat
neg
shl
cs
loope
test
clc
adc
in
stos
and
aas
xor
dec
jecxz
adc
jecxz
shr
nop
xor
xchg
aas
push
movs
sbb
add
xor
pop
ins
mov
pop
arpl
(bad)
mov
loop
mov
xchg
aad
mov
push
xchg
mov
mov
and
sbb
push
ss
adc
call
inc
and
jae
push
sar
jo
pop
cmp
jbe
dec
fistp
pop
sbb
stos
ja
xchg
push
popf
mov
cmp
es
cmp
mov
xchg
pop
push
jns
mov
inc
push
push
mov
add
cmps
pop
xchg
inc
xor
jg
push
mov
sar
neg
pop
fwait
mov
call
xchg
jecxz
sahf
in
pop
fist
xor
pop
sbb
mov
mov
(bad)
fsub
outs
dec
push
ins
mov
movs
rcl
sar
sbb
mov
jae
inc
jbe
inc
rol
retf
lea
stos
xchg
xor
mov
addr16
dec
scas
sub
js
bound
push
call
cmps
fadd
mov
lea
jno
retf
xor
clc
cdq
pusha
jmp
lea
jp
mov
xor
arpl
add
movs
or
add
lds
fidiv
mov
call
sub
adc
outs
mov
out
popa
inc
mov
(bad)
js
push
xor
arpl
enter
dec
jno
mov
jns
icebp
or
or
xchg
push
xlat
xchg
push
mov
movs
adc
call
and
lock
imul
into
(bad)
pop
retf
xor
in
repz
(bad)
sbb
xlat
jno
cmp
add
xor
sbb
push
aad
(bad)
jge
pushf
pop
adc
cdq
mov
add
pushf
inc
push
cmps
sub
push
test
fistp
mov
es
retf
push
fs
sub
mov
inc
dec
fadd
sbb
lods
sbb
ins
push
into
dec
sub
and
jno
(bad)
adc
dec
inc
cmp
clc
arpl
retf
movs
jne
in
icebp
adc
mov
data16
adc
imul
inc
data16
mov
daa
cdq
mov
adc
jg
mov
nop
mov
mov
clc
sbb
mov
adc
mov
ror
retf
retf
ret
fldenv
dec
and
movs
mov
and
sbb
fdiv
scas
pop
(bad)
(bad)
(bad)
mul
call
pop
fwait
dec
scas
ficom
sbb
and
popf
mov
or
pushf
push
xor
and
adc
adc
adc
lea
and
push
cli
sbb
jle
test
jle
fst
sbb
and
add
xchg
(bad)
xchg
ror
push
sub
xchg
les
dec
add
ret
repnz
dec
pushf
mov
rcl
pop
adc
out
jmp
mov
stos
mov
lea
fdivr
icebp
xchg
inc
out
inc
(bad)
fnstcw
fadd
inc
mov
cmp
mov
fst
jp
(bad)
mov
xor
or
push
and
shl
jmp
rcr
stc
push
mov
cs
test
jecxz
enter
sub
outs
cmp
leave
fld
dec
js
ja
mov
call
mov
adc
rcl
xor
leave
inc
pop
mov
aad
xor
lds
xchg
mov
xchg
and
test
sub
les
in
lock
clc
sahf
inc
fcmovnbe
test
cmc
aam
stos
push
repz
jo
je
test
cdq
xor
test
inc
sub
xchg
xor
call
dec
popf
(bad)
sahf
loop
mov
in
pop
mov
push
je
in
in
push
inc
sub
movs
and
(bad)
sar
push
xlat
rcr
ins
outs
mov
dec
sbb
push
mov
xchg
lods
int3
loopne
stc
imul
push
cmp
stc
xor
clc
or
dec
movs
and
and
xchg
inc
add
mov
xchg
mov
scas
or
push
xchg
test
mov
dec
aad
jecxz
and
ja
cmp
sbb
dec
jo
jnp
sub
mov
call
add
and
xchg
sti
dec
dec
jo
xor
jb
and
and
add
jae
add
mov
(bad)
adc
stos
enter
cmp
mov
shr
in
push
adc
jbe
dec
add
cmp
cdq
or
movs
push
data16
pop
inc
pop
test
dec
sub
push
jb
mov
test
sub
cwde
outs
ficom
adc
je
xchg
fiadd
scas
sbb
adc
mov
ins
add
or
rcl
out
ins
je
mov
test
jge
mov
push
jle
jle
jno
push
cmc
in
out
js
movs
sub
and
ss
xor
sbb
ins
test
int3
stos
fisub
mov
cmps
mov
sahf
ror
or
scas
popf
inc
iret
xchg
add
test
mov
sbb
xchg
sti
add
jbe
inc
xor
mov
sbb
inc
inc
out
lods
jmp
jnp
or
xor
stos
mov
sbb
out
movs
xchg
mov
ins
outs
cs
in
push
(bad)
not
aaa
mov
inc
inc
push
ja
cmp
sar
(bad)
out
movs
jl
push
push
push
xchg
fnstenv
add
jnp
mov
les
adc
mov
mov
neg
add
sub
xor
push
add
jg
out
inc
inc
loope
mul
(bad)
les
cmps
ins
push
loop
add
aad
or
xor
or
mov
mov
push
stos
inc
jae
retf
out
pop
mov
fmul
push
xchg
push
fisub
sbb
add
xchg
or
jmp
dec
cmp
inc
dec
pop
jno
push
je
mov
clc
popa
push
dec
js
adc
cwde
push
test
sbb
add
ja
fldcw
retf
mov
(bad)
lock
das
jecxz
xchg
mov
(bad)
fbld
dec
dec
mov
stos
mov
add
imul
lock
sbb
mov
das
dec
not
addr16
jg
popf
imul
xchg
(bad)
out
test
iret
sub
(bad)
fisttp
xor
cmp
enter
or
inc
xor
cli
xor
and
je
dec
or
test
ret
mov
int
add
test
ins
ret
dec
loopne
xor
mov
out
adc
xchg
mov
sbb
push
sub
mov
sub
rcl
pushf
sub
jmp
push
(bad)
sbb
shl
fild
js
aad
pushf
add
mov
outs
jge
das
retf
push
jmp
xor
inc
test
inc
mov
and
adc
test
nop
and
and
sbb
add
push
int3
ffree
loop
mov
aad
pop
pop
cmp
and
adc
enter
cdq
and
dec
mov
xor
shr
ins
jns
push
inc
or
retf
jecxz
popf
push
push
jecxz
dec
pusha
sub
mov
(bad)
pop
xor
add
imul
fldenv
add
hlt
pop
in
repnz
nop
iret
aam
xchg
sub
add
jb
mov
cmp
fcom
test
cmps
lods
test
pusha
movs
push
dec
pop
ins
test
lods
mul
stos
adc
outs
cmp
lea
mov
xor
xchg
mov
inc
inc
add
retf
fisttp
cmp
aam
cmp
dec
mov
aas
dec
cli
test
mov
mov
jnp
pop
push
sbb
or
(bad)
rol
ficomp
jb
or
dec
jmp
jno
imul
int3
mov
mov
dec
nop
mov
int3
test
mov
popa
inc
(bad)
push
int3
std
in
mov
sbb
mov
ins
in
outs
sub
mov
pushf
lea
jns
outs
jns
xor
and
adc
int3
sub
mov
add
mov
push
dec
out
das
add
or
mov
scas
xor
out
adc
scas
sbb
mov
mov
dec
lea
out
inc
mov
push
and
cmp
jmp
mov
test
fcom
pop
mov
(bad)
imul
mov
out
adc
sbb
test
fnstsw
or
test
ja
test
retf
add
cmp
jmp
push
loopne
adc
mov
fadd
pop
add
push
mov
push
cmc
xor
dec
movs
stc
sbb
and
nop
in
adc
push
icebp
idiv
clc
fistp
adc
or
jne
adc
and
mov
adc
add
jno
inc
(bad)
sbb
adc
out
push
pop
push
in
outs
xchg
test
fsubr
mov
adc
sub
adc
retf
sub
ins
addr16
imul
test
xor
pop
lods
add
jmp
fld
jmp
(bad)
or
mov
mov
hlt
inc
(bad)
aas
push
cwde
xchg
jle
in
cld
add
cmp
jnp
add
jnp
repz
dec
std
les
adc
jne
xor
movs
push
pop
jne
mov
mov
and
popa
ss
pop
frstor
jo
pop
add
inc
push
and
fwait
mul
scas
and
fcom
inc
ret
aam
push
lock
xchg
dec
stc
lock
(bad)
push
(bad)
jmp
into
lea
sar
and
fs
adc
mov
popa
mov
push
cwde
ficomp
shr
stos
dec
sbb
(bad)
in
sar
xor
into
stos
gs
dec
and
push
cmps
xchg
shl
daa
mov
push
add
mov
(bad)
nop
adc
mov
jecxz
aam
popa
(bad)
repnz
cmp
fwait
into
or
neg
dec
stos
adc
jbe
das
data16
in
jmp
xor
sbb
pop
popf
arpl
sub
cmp
bound
call
mov
jecxz
movzx
inc
adc
xchg
cs
adc
dec
mov
mov
cmc
setne
sbb
out
test
ret
cld
inc
in
test
stc
cmc
jo
mov
mov
stos
daa
pop
add
or
and
scas
and
je
out
push
and
and
sub
test
mov
or
mov
adc
scas
out
cli
xor
aaa
or
inc
retf
in
pop
xchg
icebp
cmp
mov
outs
lea
mov
popa
mov
pushf
push
xchg
and
dec
add
and
mov
inc
ret
add
or
xor
cmp
mov
retf
frstor
sti
outs
cmovnp
popf
xor
xchg
loope
mov
sbb
ret
hlt
push
sub
mov
adc
xchg
add
adc
mov
inc
cmps
or
lds
retf
mov
adc
jp
push
sub
xor
mov
outs
aas
gs
pop
mov
repnz
jo
(bad)
sub
loope
pcmpeqd
out
xchg
pop
outs
sbb
inc
jno
jmp
sbb
dec
jno
push
mov
stos
and
sub
dec
jp
sbb
mov
dec
sub
cmps
add
aam
test
push
outs
rcl
outs
outs
add
je
lods
mov
arpl
add
adc
pop
fdiv
test
mov
xor
fs
mov
cmp
inc
inc
mov
(bad)
test
sbb
xchg
pusha
fstp
mov
cmp
pop
les
enter
sbb
mov
adc
mov
inc
add
jnp
leave
sub
xor
mov
dec
lds
xor
xchg
stos
sbb
pop
sub
sub
push
movs
jae
out
jo
and
aad
test
pop
imul
repz
xor
mov
ss
rol
stos
jge
icebp
xor
cmp
enter
and
(bad)
sbb
push
es
movs
aad
mov
outs
sbb
sub
in
sbb
mov
jbe
add
in
adc
shr
leave
pop
jl
(bad)
daa
push
mov
(bad)
shl
js
out
in
pop
aaa
(bad)
retf
(bad)
hlt
ins
out
loop
or
rcl
xor
arpl
nop
xchg
rcl
mov
mov
mov
daa
fist
das
add
sub
mov
cld
push
repz
mov
jno
push
mov
ins
mov
jb
les
and
mov
into
addr16
mov
outs
jmp
sbb
cdq
test
sub
bound
rcr
mov
into
sar
push
xor
add
mov
js
sub
shl
ss
pop
fisttp
(bad)
not
loop
stos
in
loope
push
push
sahf
xchg
outs
jmp
fcomp
lock
cmp
mov
mov
rcl
popf
inc
or
jns
cmp
dec
mov
iret
popf
inc
loopne
sub
or
cmp
xor
cwde
jp
shl
rcl
cmps
push
xchg
in
idiv
jb
int
add
lods
jae
inc
dec
sub
fst
mov
loopne
adc
and
mov
mov
cmps
nop
sbb
scas
mov
ds
test
push
push
inc
ret
or
outs
and
cmp
dec
cli
push
addr16
pushf
or
jae
adc
xchg
adc
fadd
and
test
or
pop
mov
adc
xor
add
push
xor
pop
scas
sbb
jl
adc
sub
in
retf
fist
sbb
pmaxub
add
cmps
jge
nop
push
mov
sub
popf
pop
or
sub
call
jo
mov
fs
jmp
mov
sahf
(bad)
test
ds
or
les
and
jae
add
(bad)
clc
call
jo
xor
sub
ss
push
xchg
hlt
xor
jb
inc
dec
push
pop
push
loope
aam
or
push
cmps
jle
and
cmp
xor
xchg
shl
sbb
jo
dec
imul
dec
cmp
pop
test
mov
mov
inc
mov
shl
adc
push
sub
mov
cmp
call
jp
sub
popf
shr
xchg
je
out
fcom
mov
xor
aad
mov
push
pop
out
test
js
test
ror
in
mov
add
movs
jnp
mov
in
loopne
inc
fcomp
xor
inc
push
aaa
ss
fs
clc
adc
ja
ins
pop
push
fcom
xchg
out
aam
ja
fidivr
mov
(bad)
pop
push
xor
shl
xor
push
imul
dec
not
push
sbb
into
or
push
mov
jecxz
or
xor
aaa
add
dec
call
xor
test
and
adc
push
xor
mov
sub
sub
das
jo
inc
push
ins
jbe
inc
pop
in
icebp
xor
dec
loop
in
test
xchg
adc
push
js
popa
pop
and
mov
adc
mov
test
dec
cdq
ffree
jo
dec
in
xchg
xchg
sbb
out
rcr
stos
fsubr
cmps
pop
jl
retf
fsub
stos
cmp
movs
pop
arpl
scas
push
mov
push
mov
or
mov
inc
sub
cmp
movs
sub
sbb
xor
xchg
sti
dec
inc
es
bound
in
rcr
sbb
lods
push
mov
sahf
out
jno
popf
sub
pop
out
fisttp
jmp
test
stos
es
icebp
mov
ret
xor
xor
cmp
xor
cmp
pop
in
mov
sar
cmc
ins
loopne
pop
or
sub
fwait
cs
retf
pop
pop
cdq
in
xchg
js
fisttp
cmp
and
leave
imul
rol
push
mov
lods
mov
pop
add
loope
nop
jge
push
icebp
into
(bad)
push
mov
lea
stc
xchg
mov
outs
add
bound
lods
jb
test
mov
lods
cmc
dec
and
inc
pop
cli
sbb
out
hlt
mov
sub
push
xchg
in
fcomp
int3
jae
ins
js
es
fld
call
pushw
cld
scas
sbb
and
xchg
cmp
fmul
fs
nop
(bad)
sub
shl
popf
jle
push
or
nop
mov
cs
daa
mov
mov
fisttp
int3
mov
xchg
adc
push
fcmove
jg
mov
xchg
jmp
inc
fcomp
push
mov
pop
pop
sub
push
xlat
and
add
fsub
rol
repz
cmp
xlat
(bad)
pop
cmps
jge
xchg
xchg
int
push
push
push
popa
cmp
push
xor
xchg
sub
pop
add
push
jp
rcr
jno
test
neg
mov
adc
xor
mov
xchg
mov
cdq
mov
pop
(bad)
mov
call
mov
inc
cmp
sbb
dec
pop
mov
call
dec
pop
loop
or
stc
call
mov
pop
out
into
pop
int3
(bad)
lea
sub
stc
ret
mov
fist
fadd
cmp
cmp
nop
sub
mov
cwde
lods
(bad)
add
(bad)
icebp
xor
loop
cs
stc
fwait
push
push
retf
xchg
sbb
push
mov
add
and
push
or
pop
test
push
add
aam
mov
cmp
aam
and
mov
xchg
cli
adc
aaa
pop
pop
call
retf
imul
fcomi
sub
sbb
mov
ss
test
ret
inc
cwde
movs
sub
(bad)
mov
in
cmp
inc
mov
pop
sbb
ret
jbe
cmps
mov
ins
xor
sub
fist
mov
mov
or
mov
mov
add
push
(bad)
es
xchg
add
cmp
sti
jne
mov
fstp
push
retf
jns
push
(bad)
mov
(bad)
std
mov
or
inc
xor
dec
gs
jns
cwde
jo
mov
enter
aad
je
inc
mov
push
or
or
imul
add
push
jp
(bad)
push
es
fild
pop
sbb
push
mov
cs
fs
fild
ficom
mov
or
adc
and
popf
inc
pop
imul
xchg
push
inc
sbb
(bad)
xchg
push
push
sbb
mov
adc
inc
call
adc
loope
inc
and
push
dec
ja
call
stos
xor
(bad)
in
test
stos
push
add
scas
cmc
xchg
adc
pop
sub
push
sub
jb
xchg
cmc
stos
mov
fstp
test
fsubr
push
cdq
cs
jle
lods
inc
fisttp
push
test
push
cmc
inc
mov
adc
cmp
inc
inc
in
test
call
mov
cdq
data16
cmps
mov
pop
xor
jmp
lock
xchg
xchg
shl
js
(bad)
pop
adc
ret
xor
mov
mov
pop
mov
test
mov
fs
xor
xchg
shl
das
pop
rcr
mov
(bad)
or
or
stc
xchg
adc
aam
(bad)
mov
pop
nop
and
fs
inc
push
xchg
add
test
mov
jne
mov
ret
outs
pushw
mov
test
and
xchg
jnp
pop
cmp
std
xor
mov
pop
out
cmps
in
ins
inc
je
aaa
xlat
and
ja
fdiv
and
push
aaa
xor
fild
xlat
add
dec
pop
mov
inc
rcl
jb
test
call
and
mov
rcl
add
xchg
(bad)
test
adc
push
outs
and
push
add
xor
add
outs
in
sub
inc
cli
outs
std
fiadd
and
cli
out
dec
mov
call
jmp
mov
int
sbb
xor
out
xchg
ret
xchg
push
push
push
sub
std
and
rcr
(bad)
xchg
(bad)
(bad)
daa
jne
out
cdq
mov
or
aaa
push
lods
push
nop
lods
or
inc
sub
into
xchg
mov
mov
xchg
inc
inc
pop
mov
or
inc
cld
xchg
dec
cld
xor
aas
xchg
out
imul
sub
fst
rcr
or
addr16
add
mov
sbb
and
push
push
movs
lods
mov
rcl
sbb
out
test
aam
xor
pop
test
mov
stos
push
sub
jbe
adc
push
jne
mov
in
imul
sbb
cmc
mov
ins
and
fbstp
fimul
stc
(bad)
hlt
lock
pop
fucomi
jmp
ins
xchg
ret
movs
fnsave
pusha
xor
dec
or
push
dec
rcl
gs
outs
jp
iret
cmp
les
pop
pop
test
je
add
ret
xchg
inc
movs
xor
out
scas
sbb
lock
add
xchg
(bad)
out
ds
push
adc
out
inc
imul
fucomp
leave
aam
xor
dec
popa
push
or
inc
or
lock
add
movs
xor
arpl
sub
inc
aas
sub
nop
or
add
nop
sbb
jmp
ins
je
xchg
icebp
jle
xlat
add
out
cmp
xchg
cwde
dec
out
jb
cmp
mov
sbb
jl
retf
pop
mov
sub
(bad)
gs
sub
shr
pop
push
push
xchg
lds
xor
cmp
push
and
test
test
aad
iret
push
add
test
add
call
mov
ret
push
test
mov
push
fcom
mov
bound
jae
rcr
push
jmp
imul
not
mov
hlt
cmp
jmp
and
mov
sub
or
jne
push
aaa
das
arpl
jge
add
outs
lea
inc
stc
scas
jbe
cmp
aad
aad
xchg
adc
shl
and
jmp
test
xor
push
inc
cdq
xor
shl
cwde
enter
leave
xchg
add
fs
dec
mov
rcr
sar
sahf
push
mov
jmp
lea
jge
dec
xor
pop
mov
jb
push
ficom
ins
mov
xchg
push
popa
retf
inc
push
loope
add
mov
mov
imul
lahf
retf
cmps
add
mov
push
sbb
jne
jmp
adc
jmp
jecxz
adc
(bad)
lahf
or
jp
addr16
test
mov
inc
push
cli
call
pop
add
call
imul
sub
push
pop
mov
gs
aas
dec
out
loopne
mov
call
stos
mov
sub
jmp
push
in
lods
jae
ffreep
fdivp
jg
and
jecxz
inc
outs
push
addr16
lds
pop
cli
mov
cmp
jg
push
mov
(bad)
lahf
cli
sbb
pop
shr
cli
or
(bad)
mov
std
or
popf
pop
shr
inc
mov
movs
std
push
aas
jmp
icebp
aad
add
add
dec
pop
inc
push
mov
push
dec
jmp
xchg
lahf
inc
movs
push
cli
lods
std
mov
push
dec
jmp
xchg
out
sti
xchg
and
add
pop
std
data16
sahf
mov
jns
call
fsubr
mov
clc
mov
fcmovu
jno
cmp
sahf
jmp
push
lods
pop
inc
mov
adc
sbb
fstp
xchg
add
pop
and
(bad)
add
push
in
and
aam
aam
test
or
jns
push
adc
dec
add
add
cdq
sbb
movs
ins
fs
out
lods
or
jne
sbb
dec
(bad)
idiv
cmp
push
and
add
sbb
(bad)
fst
mov
add
(bad)
out
ja
mov
cmps
pop
leave
push
pop
xor
mov
(bad)
out
jg
rcr
add
add
leave
sub
mov
push
mov
mov
popf
jmp
mov
dec
dec
push
sbb
mov
arpl
lahf
aaa
cmp
jecxz
test
in
push
mov
pop
sbb
mov
adc
adc
xchg
daa
cwde
cmp
push
fsub
in
loop
sbb
ja
rcr
jnp
(bad)
or
outs
retf
sbb
xchg
mov
adc
jae
cmp
and
mov
das
je
vpcomub
cmp
test
movs
cmp
ja
aam
add
sub
fcomp
xor
push
cmps
mov
mov
enter
fs
retf
test
in
nop
mov
mov
and
inc
add
push
dec
push
adc
dec
push
dec
and
or
call
cmc
inc
inc
jmp
retf
mov
or
cwde
and
mov
rol
ficom
sub
hlt
loopne
fist
mov
xchg
imul
mov
mov
jb
pop
(bad)
jp
call
mov
jnp
xchg
out
push
xchg
cli
push
cli
mov
xchg
dec
fisub
mov
or
(bad)
pop
mov
mov
sub
lods
int3
push
retf
cmps
sub
inc
xor
ffreep
sub
mov
mov
jo
lods
aam
add
aas
cmp
aad
cmc
outs
inc
pop
je
xchg
mov
sbb
xor
std
fimul
(bad)
fild
in
push
aas
sub
push
inc
loopne
jmp
in
mov
inc
ins
das
cdq
xor
mov
std
retf
ins
movs
mov
sbb
cwde
loopne
ficom
sbb
jmp
clc
sbb
sbb
rol
inc
outs
ins
ss
mov
pop
inc
test
push
xor
fldenv
and
out
sub
jbe
loop
sub
mov
dec
mov
in
mov
loope
and
inc
lea
push
stc
dec
push
or
sub
dec
call
mov
loope
sub
adc
sub
pop
out
aam
xor
lahf
int
adc
je
rcl
fnstenv
imul
mov
pop
and
inc
movs
ror
cmp
movs
call
ret
sub
lahf
jge
cmp
imul
mov
inc
out
mov
mov
sbb
idiv
adc
cmps
pop
inc
sbb
jae
ins
xchg
inc
cmp
clc
inc
dec
sbb
idiv
pop
fisttp
sub
mov
(bad)
cld
mov
aad
and
lods
mov
and
jmp
mov
push
xor
rcl
cmp
out
fucomi
dec
fcmovu
dec
xor
ret
adc
dec
mov
and
cwde
cmps
out
dec
inc
push
xor
lods
adc
push
and
int
fs
cmp
sbb
and
sbb
push
push
xchg
and
inc
sub
mov
dec
jae
jnp
dec
sub
mov
add
jbe
sbb
lods
cld
gs
sbb
jnp
pop
test
xlat
cmp
jo
pop
adc
call
in
fldcw
loopne
aaa
jle
je
and
jecxz
push
stos
sbb
mov
xchg
jo
jmp
pop
jecxz
sub
mov
mov
add
je
dec
push
and
mov
add
sub
int3
cld
dec
aam
scas
and
sbb
aam
les
cmp
mov
sub
mov
fist
sub
ret
and
ins
fcomp
imul
xchg
jo
cmp
inc
mov
mov
xchg
xor
pop
aad
sub
mov
fucomi
retf
fsubr
and
push
ret
mov
adc
in
jne
xchg
xor
inc
jns
adc
or
adc
push
jne
push
xchg
sub
xor
sbb
loope
sbb
sub
push
and
inc
cmp
xchg
mov
mov
arpl
out
aas
sub
outs
into
in
cld
into
add
call
mov
dec
add
fs
jno
mov
jno
push
xchg
mov
lods
jnp
cli
ja
aas
shl
retf
push
inc
cdq
xor
stos
and
mov
adc
mov
mov
inc
push
cmp
and
addr16
sub
and
sub
and
clc
push
mov
jmp
ins
call
or
aad
push
fld
or
out
ins
xchg
out
repnz
cmps
inc
mov
daa
das
cwde
push
scas
aam
mov
mov
jmp
adc
je
add
ret
loope
fisubr
and
fldenv
js
(bad)
loope
push
ret
ror
enter
push
(bad)
mov
int3
jl
mov
cmp
adc
pop
push
icebp
clc
test
outs
cmp
out
fstp
shr
ss
inc
mov
data16
lods
aad
icebp
sti
xchg
mov
jge
xchg
clc
fcmovu
jmp
test
daa
sub
js
pop
mov
data16
leave
loope
lea
dec
and
rol
pextrw
inc
fwait
test
mov
loop
call
sbb
scas
or
mov
hlt
pop
dec
mov
inc
inc
inc
rcr
rcr
push
push
push
pop
dec
or
push
movs
sbb
loop
xor
adc
idiv
hlt
xor
mov
nop
push
sbb
push
cmps
push
fs
(bad)
xor
mov
(bad)
(bad)
adc
int3
or
or
mov
jmp
adc
int3
stos
push
and
mov
daa
out
outs
cmp
push
ror
lods
cli
jg
in
(bad)
cwde
clc
xlat
das
fdivr
xchg
icebp
cmp
scas
ja
jne
xchg
jne
loopne
popf
fdiv
mov
and
sbb
push
inc
test
rcl
test
xchg
sub
sbb
shr
outs
mov
vcvtdq2ps
dec
ins
jb
xor
mov
xor
mov
push
sub
rcl
out
add
adc
inc
cmp
xchg
push
stos
cwde
ins
out
jp
dec
out
xor
lods
mov
fwait
mov
and
mov
in
test
or
ja
lods
pop
jg
xchg
sbb
sti
test
sub
sub
retf
out
pushf
stc
adc
mov
fcomp
jae
mov
imul
mov
call
pop
pop
mov
popf
add
test
icebp
in
sub
jl
mov
and
mov
sbb
lock
stos
inc
adc
mov
cmp
and
xchg
sub
je
aas
in
jno
and
mov
mov
and
push
add
dec
nop
or
and
test
pop
xor
mov
out
sbb
inc
nop
xor
dec
mov
xor
cmp
pop
sbb
push
(bad)
scas
test
jge
lahf
sub
int3
rcl
enter
xchg
sahf
in
cmps
jecxz
les
test
in
je
add
addr16
inc
jnp
lahf
aam
fisubr
fs
mov
jp
cmc
cmp
mov
adc
and
lods
in
pop
dec
add
test
pop
pop
(bad)
bound
leave
jne
loopne
pop
xor
mov
ret
mov
out
(bad)
mov
aam
sbb
(bad)
pop
lea
stos
pop
and
sub
push
outs
inc
out
cmp
add
cmp
push
mov
or
out
and
jmp
add
adc
shl
jmp
repnz
xor
or
pop
cmp
dec
lods
scas
pop
(bad)
fcomp
lahf
sbb
daa
push
push
(bad)
xchg
xchg
mov
lods
sub
push
sbb
in
inc
dec
dec
ror
push
jl
test
adc
frstor
pop
pop
cmp
and
fldenv
pushf
sbb
jmp
mov
dec
mov
outs
out
cmp
mov
mov
push
dec
and
leave
ins
(bad)
je
push
stos
mov
imul
sub
inc
outs
inc
shl
cmp
inc
dec
push
cld
mov
push
mov
fwait
jno
xchg
xchg
cdq
cmc
ja
(bad)
movs
fistp
imul
mov
or
loopne
dec
fs
fnstsw
adc
xchg
(bad)
push
rcr
push
ds
fmul
mov
xor
sbb
outs
imul
or
repz
dec
inc
sbb
pop
pop
lea
stos
push
mov
cmps
push
int3
test
(bad)
stos
mov
push
xchg
mov
test
push
dec
and
scas
les
test
mov
loop
pop
push
sub
push
in
or
push
mov
mov
inc
mov
pop
cmp
mov
cmc
and
adc
in
mov
or
enter
int3
scas
or
call
cmps
lods
leave
cdq
inc
(bad)
out
loopne
push
outs
jne
leave
call
sti
jle
fstp
neg
jnp
jmp
jne
(bad)
(bad)
push
xchg
(bad)
(bad)
enter
inc
jge
popf
jae
cmp
fs
jno
mov
mov
call
aaa
sbb
imul
sbb
into
test
add
jnp
and
sbb
or
in
in
fcmovu
mov
sbb
pop
std
dec
sbb
mov
pop
push
retf
dec
jnp
inc
mov
dec
jo
cmp
fcomp
mov
sub
and
xchg
jo
xchg
sub
sbb
fcmovu
inc
mov
pop
pop
or
js
xchg
push
mov
ins
mov
mov
sub
adc
int
retf
repz
push
cmp
sub
aaa
jecxz
mov
je
ficom
imul
scas
fwait
test
fst
fwait
or
loopne
imul
cwde
das
mov
sti
sub
shl
sti
push
js
mov
cmps
xchg
jmp
rcr
jbe
(bad)
push
je
movs
push
retw
sbb
dec
adc
movs
outs
cmps
push
fld
mov
push
or
pusha
outs
mov
aam
retf
neg
outs
sbb
pop
jl
pusha
inc
sub
mov
ss
xchg
pushf
fsub
push
ins
mov
outs
pop
or
add
push
out
and
cmp
imul
scas
jge
inc
or
pop
fsubr
sub
in
dec
mov
rcl
test
jge
fadd
adc
ins
push
cmp
cmps
out
aaa
inc
add
fstp
xor
rol
pop
jg
lods
mov
mov
enter
and
jmp
out
jnp
test
or
jbe
pop
arpl
ror
adc
mov
sbb
mov
xor
div
mov
les
or
int
push
push
(bad)
cld
sub
pushf
sbb
enter
jecxz
lahf
ins
sub
mov
aas
(bad)
cs
add
sub
nop
add
adc
arpl
and
adc
sub
sub
mov
sbb
or
pop
iret
cdq
(bad)
inc
mov
add
mov
inc
add
jb
retf
test
shl
shl
mov
pop
jmp
popf
or
xchg
add
fsubp
stos
cmps
(bad)
(bad)
sub
sahf
mov
mov
pop
sbb
jb
push
sbb
aam
out
daa
cmp
xchg
jecxz
loop
xchg
dec
int3
and
xchg
into
sub
jl
sar
cmp
repnz
fistp
and
or
push
sub
push
cwde
sbb
push
bound
mov
sti
test
and
pop
pop
dec
std
and
push
popa
mov
in
shl
mov
jae
lahf
push
mov
aaa
sub
shr
fbstp
call
retf
dec
iretw
mov
popa
push
aad
mov
(bad)
out
jge
nop
mov
test
or
jmp
pop
jp
and
loopne
mov
or
mov
mov
ss
inc
(bad)
lahf
add
xor
and
and
xchg
in
push
mov
fcom
rcr
inc
adc
mov
mov
shr
push
xchg
push
shl
dec
xchg
bound
pop
cmp
(bad)
sub
push
cmp
jnp
hlt
xor
imul
cdq
lods
sub
add
fild
and
stos
aas
fild
cmp
ror
movs
xchg
or
or
mov
cmp
stos
mov
cmp
xor
idiv
inc
dec
xor
and
repz
fisttp
movs
inc
sti
mov
dec
adc
and
add
fdivr
mov
out
xor
fs
popf
in
sar
mov
movs
add
pop
push
ret
pop
and
cmps
scas
dec
add
cmp
in
ds
inc
dec
mov
aam
or
jle
cmp
push
pop
ss
mov
pop
mov
adc
repz
int
addr16
push
fs
xlat
mov
cmp
ins
mov
aam
aam
xchg
or
ins
mov
aam
pop
jbe
jae
fst
add
pusha
in
push
test
imul
leave
push
dec
fidivr
mov
dec
mov
inc
not
call
xchg
out
fldenv
out
mov
sbb
adc
xchg
xchg
xor
in
mov
lods
sub
sub
or
sub
mov
test
in
jbe
mov
sub
mov
add
js
stos
sub
in
outs
(bad)
cdq
adc
cmp
sar
xchg
jle
shl
inc
xor
push
cld
ret
pop
add
jle
(bad)
in
jnp
aaa
push
mov
mov
xor
out
sub
xor
(bad)
adc
cmp
ror
and
retf
xchg
pushf
jb
popf
xchg
mov
je
cmp
sbb
dec
xor
xchg
adc
push
jg
(bad)
shr
push
cmp
adc
shl
cmp
ret
sbb
xchg
jmp
mov
movs
adc
push
dec
push
movs
xchg
cs
push
sbb
nop
xchg
inc
add
mov
sbb
mov
add
sub
ds
add
adc
or
es
sub
mov
pop
mov
push
mov
xor
sbb
xchg
or
xor
loope
xchg
aam
mov
outs
pop
push
lods
add
sub
test
pop
movs
outs
aas
test
std
push
daa
sub
aam
in
lods
xor
ret
add
add
int3
jae
arpl
pop
pop
add
xchg
icebp
mov
in
push
and
in
or
jp
xchg
dec
daa
sbb
inc
aam
jae
mov
pop
cmp
mov
mov
mov
pop
(bad)
jge
mov
ret
sbb
stc
sbb
mov
sbb
or
sub
sub
xor
adc
sub
sub
mov
pop
addr16
pop
bound
xor
push
mov
adc
adc
push
(bad)
sbb
pop
int3
inc
sahf
mov
or
sbb
sub
dec
cmp
test
vmwrite
in
je
div
sti
pand
cmps
inc
test
in
add
stos
fisubr
ret
sub
cmp
push
and
aad
sub
dec
dec
(bad)
xor
ss
ins
mov
and
leave
push
push
mov
add
adc
sub
in
lahf
xchg
fsubrp
sahf
pushf
xchg
arpl
ret
mov
icebp
cmps
clc
pop
and
rcl
inc
cmc
push
fwait
ret
test
pop
aam
xor
jmp
rol
mov
fwait
xchg
rcl
ret
adc
mov
sbb
mov
test
sbb
popa
push
jl
sbb
jmp
rol
repz
test
inc
adc
mov
xchg
das
outs
adc
pop
mov
sti
push
aam
cmp
cmp
shl
cmp
retf
dec
fisubr
add
in
push
ret
mov
inc
es
pusha
dec
cwde
push
(bad)
ficomp
les
into
lods
xchg
daa
imul
mov
mov
test
sub
loop
js
popf
scas
jp
dec
aas
or
jp
je
imul
or
cmp
push
or
jbe
mov
fwait
xchg
jg
xor
in
adc
fist
and
push
inc
lods
jmp
inc
mov
outs
fs
ds
pushf
shl
cmp
aad
xchg
or
cmp
and
mov
cmp
or
jmp
es
shl
retf
outs
xchg
or
mov
outs
test
push
mov
sahf
dec
lods
dec
arpl
add
xor
sub
xchg
and
push
and
xor
imul
add
xlat
or
popf
rol
jg
sub
pop
and
push
ds
mov
imul
jb
pop
cmc
sbb
bound
pusha
inc
dec
aaa
cmp
sub
jo
scas
aas
out
aad
xor
push
idiv
aad
dec
retf
pusha
cs
adc
mov
sbb
and
out
outs
sbb
mov
mov
push
push
mov
lock
enter
frstor
(bad)
shl
fist
movs
call
dec
ins
xor
mov
icebp
inc
sbb
leave
lahf
jno
inc
fisttp
arpl
out
gs
mov
cmp
adc
adc
sub
stos
sub
push
sbb
sbb
mov
nop
(bad)
and
jne
inc
or
jecxz
(bad)
mov
aas
bound
int
iret
jns
pop
dec
cmp
sbb
or
cmp
dec
xchg
add
leave
inc
inc
dec
sub
mov
add
mov
sub
lock
or
push
outs
mov
cmc
or
mov
inc
and
push
lods
cs
add
test
fst
ins
sbb
fistp
int3
jnp
ficomp
xchg
in
(bad)
retf
push
push
dec
sbb
cmc
or
les
loopne
pop
add
and
adc
xor
push
add
fucom
(bad)
push
(bad)
or
bound
imul
push
jmp
fdivrp
not
shr
dec
or
mov
or
enter
lock
retf
(bad)
out
repnz
cmp
sbb
inc
cmp
mov
cmp
mov
in
mov
pop
adc
mov
adc
jno
sub
add
rcl
outs
push
imul
or
lea
test
and
aam
push
ss
adc
ficom
xor
inc
test
out
cmp
stc
movs
cmc
out
dec
xor
sub
out
mov
push
pop
hlt
cdq
push
cmps
lods
push
daa
std
inc
fnstcw
push
das
inc
inc
jg
jp
ror
mov
mov
hlt
outs
lds
aam
ja
inc
aas
jae
ja
movs
pop
pusha
test
pop
sub
scas
xchg
add
mov
inc
adc
std
sbb
cld
or
cmc
pop
jne
mov
mov
push
mov
cdq
push
addr16
inc
test
fld
sbb
loop
xchg
push
mov
adc
inc
out
cmp
std
mov
sti
inc
jmp
nop
aas
lods
ja
addr16
not
sbb
js
movs
jmp
mov
jno
adc
push
cdq
add
sbb
cld
push
mov
jle
pop
mov
xor
dec
jbe
cs
daa
mov
jl
(bad)
rcl
(bad)
mov
or
rcl
jnp
and
mov
dec
inc
or
adc
dec
dec
push
inc
or
and
out
cmps
and
adc
pushf
xlat
fst
sub
sub
sub
lea
push
dec
cmps
sub
and
xor
adc
xlat
arpl
jb
ins
lea
xor
inc
scas
add
xchg
pop
mov
cwde
push
in
pop
or
icebp
add
sbb
cdq
retf
lea
push
int3
js
ss
pop
enter
ja
ins
inc
push
push
outs
rcl
out
push
mov
mov
rol
outs
jne
loopne
pop
pop
mov
xor
aaa
inc
in
xchg
fstp
loop
movs
pop
mov
pop
xchg
jmp
jae
jl
pop
dec
xor
jecxz
add
es
inc
and
ss
test
xor
adc
rcr
mov
add
inc
mov
mov
jmp
xor
pop
mov
pop
call
dec
rcr
cmp
add
cmp
dec
stc
add
and
jnp
int
cmps
int3
xchg
enter
pop
fldcw
int
mov
(bad)
or
mov
mov
gs
mov
or
popa
push
inc
mov
jno
cmp
mov
pop
enter
cdq
cmps
dec
stos
and
ins
rcl
inc
jge
call
shl
xor
dec
mov
xchg
xchg
sbb
test
scas
push
sbb
sbb
(bad)
or
repnz
cs
loop
adc
jne
fmul
sub
movs
add
mov
je
mov
mov
or
mov
outs
dec
hlt
out
fadd
aam
inc
cmc
pusha
inc
fwait
push
pop
sub
and
inc
jb
in
mov
sub
add
test
or
(bad)
leave
xor
pop
xor
in
loop
nop
imul
jp
cmp
xchg
or
add
jnp
test
pop
(bad)
cld
mov
xor
xor
lods
jb
jo
cmps
push
arpl
and
out
xor
sar
xor
add
ficomp
inc
mov
cdq
sub
or
les
test
mov
xchg
test
adc
mov
movs
je
and
sbb
into
jp
jbe
and
pop
lods
lods
int3
xchg
push
push
lods
lods
inc
adc
sub
addr16
and
movs
retf
xchg
mov
jecxz
imul
xchg
add
push
aam
test
xor
imul
dec
or
inc
jg
jmp
and
icebp
aam
add
stos
shl
pop
pop
fwait
jp
inc
movs
mov
push
imul
xchg
dec
sub
adc
or
gs
dec
add
repz
push
cmp
or
sti
xchg
aas
jne
xor
adc
into
cmc
inc
push
cmp
dec
in
stos
push
mov
pop
xchg
jae
test
test
adc
mov
mov
loopne
adc
or
pop
dec
mov
mov
mov
cmc
sbb
xor
xor
xchg
inc
int3
jae
fist
lods
adc
dec
or
jnp
and
push
xchg
movs
xchg
sbb
push
bound
sti
mov
jl
fstp
mov
jne
fs
fcomp
mov
ins
dec
(bad)
add
ret
dec
in
outs
jno
xor
adc
jno
push
push
inc
dec
dec
or
mov
adc
test
ret
mov
gs
jmp
stos
push
ret
pop
dec
fnstcw
jecxz
std
shl
mov
cmp
cld
sub
or
xchg
push
pop
out
repnz
(bad)
dec
xchg
scas
sbb
es
test
or
mov
or
push
les
and
mov
sti
dec
inc
mov
rcr
xor
aam
add
jge
cmp
rcl
cwde
fwait
sti
inc
sbb
push
xchg
je
ficom
in
xchg
push
mov
aad
rol
hlt
int3
or
dec
neg
jne
(bad)
mov
test
loopne
(bad)
push
jbe
mov
sbb
out
lods
sub
xchg
ret
shl
movs
dec
dec
loop
movs
(bad)
in
imul
push
cmp
jmp
bound
cmps
icebp
rol
shr
sbb
inc
fs
rcr
fld
aas
test
mov
(bad)
mov
fs
or
inc
push
lods
bound
add
add
dec
mov
xchg
or
in
adc
add
and
sbb
push
ds
xor
add
xor
jb
in
cmp
mov
xchg
imul
sub
push
jo
fst
push
cmp
je
mul
inc
jo
aad
inc
loop
cmps
sub
ins
ss
inc
push
sbb
add
mov
or
cld
dec
push
xchg
jbe
rcl
or
pop
cmps
and
xchg
xchg
mov
gs
or
inc
jns
data16
shr
add
push
test
es
mov
movs
sbb
inc
mov
imul
mov
out
aam
or
pop
int3
lods
popa
sbb
test
adc
je
add
movs
xor
mov
mov
(bad)
rol
sbb
pop
jmp
ror
mov
icebp
cmps
and
cmp
enter
xchg
sbb
inc
movs
mov
js
sbb
or
rcl
clc
jns
pop
cs
aam
and
xlat
or
hlt
rcr
jnp
cmps
inc
jbe
jge
sar
add
dec
in
shl
scas
lds
push
cmps
nop
je
xlat
add
scas
stos
clc
jecxz
mov
or
dec
fcomp
test
mov
sbb
cmps
cmps
and
out
ret
mov
lea
add
xchg
data16
dec
in
ja
or
scas
fs
rol
(bad)
fadd
sbb
cmc
inc
adc
aad
pop
fild
or
pusha
lahf
mov
je
cmp
das
and
add
mov
popf
inc
leave
ins
push
cmp
fst
jnp
jp
das
in
jmp
sbb
or
push
xor
in
shl
push
ret
sub
cmp
xchg
xor
lea
enter
retf
ins
mov
fwait
cmp
dec
push
test
out
jmp
jecxz
mov
add
push
dec
(bad)
dec
dec
push
push
fmulp
popf
js
lods
jmp
mov
aad
inc
shl
repnz
les
pop
push
loopne
mov
movs
inc
cmps
iret
in
xchg
neg
rcl
(bad)
out
mov
cmp
call
fwait
sar
ins
mov
jo
mov
pop
add
ficom
adc
aad
fstp
lea
add
jae
push
inc
pop
mov
xchg
repz
xchg
dec
pushf
lea
push
js
jae
test
sbb
and
push
xchg
pop
add
cmps
jno
aas
push
push
cmc
iret
jecxz
int
lahf
adc
inc
push
pop
shr
sub
jecxz
inc
sbb
mov
test
test
push
shl
inc
fiadd
push
dec
scas
mov
lds
inc
retf
jmp
push
rcl
out
xchg
rcr
data16
fld
mov
dec
add
or
push
sbb
xchg
movs
scas
pop
rol
test
ror
xchg
or
xor
jo
sbb
inc
shr
pop
push
add
and
call
add
fwait
in
or
and
int
xor
xor
hlt
hlt
cmp
leave
mov
jmp
ins
mov
lock
sar
dec
jns
fnstcw
scas
fistp
mov
add
stos
xchg
cwde
shrd
arpl
daa
dec
add
inc
imul
(bad)
pop
xor
push
adc
aam
push
mov
test
aaa
rol
pop
iret
push
mov
hlt
xor
popf
inc
jne
and
pop
ret
movs
scas
pop
mov
rcl
adc
jb
jae
nop
fadd
aam
mov
or
inc
fisttp
lods
sbb
push
je
xor
lods
call
xchg
xor
mov
stos
push
push
int3
retf
sbb
scas
mov
gs
adc
dec
arpl
out
dec
shl
clc
(bad)
mov
jae
(bad)
fsubrp
cld
ror
mov
push
sbb
jns
push
cli
punpckldq
push
stc
xchg
cmp
mov
sub
out
mov
sub
repnz
out
sub
jno
fucomi
cs
dec
xchg
mov
push
enter
push
fimul
das
je
clc
std
push
test
pushf
pop
adc
test
sbb
adc
in
cmps
test
mov
imul
push
xchg
xor
mov
repnz
mov
mov
jo
not
mov
es
es
xchg
xchg
add
(bad)
into
pop
jmp
rcl
dec
repz
imul
rol
push
push
mov
pop
mov
push
mov
ds
les
stos
jns
and
mov
shr
test
mov
push
xor
test
mov
sub
outs
dec
ss
push
addr16
jl
not
jp
xlat
dec
(bad)
jmp
aam
inc
in
add
mov
std
dec
(bad)
aas
jno
pushf
sbb
jmp
pop
push
sahf
outs
call
pop
xor
mov
imul
ret
sub
cli
push
int
inc
das
add
inc
int3
adc
pop
mov
rcr
outs
in
inc
imul
or
jle
mov
test
sbb
pusha
pop
or
xor
inc
cmp
jmp
sub
iret
sbb
and
scas
inc
add
test
stos
(bad)
fild
jle
sub
dec
cmp
fwait
out
jno
cs
imul
inc
sbb
pop
sub
push
or
add
pop
xor
mov
std
ror
push
pop
xor
xor
dec
sbb
jo
jecxz
cmp
mov
jle
jo
in
test
and
xchg
push
shr
inc
sub
pop
sti
xor
fild
lods
xchg
dec
out
jbe
cmp
fmul
inc
sbb
sbb
pop
into
cmp
pop
mov
sbb
inc
push
cwde
xor
and
sbb
and
inc
mov
lea
xchg
inc
push
sbb
es
sbb
pop
les
lods
test
sbb
inc
mov
and
sub
mov
cmc
test
mov
(bad)
dec
cmps
fisttp
test
jns
je
xchg
lods
aad
inc
fdivr
cmc
mov
push
pushf
cdq
or
cmps
cmp
movs
ins
mov
xchg
xor
push
scas
rol
mov
loopne
cmp
xor
arpl
mov
rcl
mov
push
push
lods
sub
or
mov
mov
jns
leave
push
cwde
xchg
lods
pop
sub
and
push
mov
adc
sbb
stos
push
jge
fcomp
mov
xchg
inc
mov
xor
outs
enter
mov
inc
popa
xchg
add
xor
xor
sar
pop
push
idiv
sbb
clc
xchg
inc
in
outs
jle
fucomip
fnstcw
jb
jmp
xchg
fwait
pop
(bad)
into
data16
cmp
and
movs
sbb
fs
and
xchg
addr16
pop
pop
cmp
mul
jl
(bad)
in
pusha
ffreep
pop
dec
test
sub
test
add
and
dec
mov
push
ret
xchg
retf
jecxz
dec
add
mov
push
or
aad
sub
outs
mov
mov
aam
test
mov
mov
xchg
mov
adc
mov
iret
adc
dec
shl
aaa
mov
int
cmp
and
xchg
pop
nop
and
inc
cmpxchg
pop
xchg
leave
mov
ret
dec
out
sub
dec
push
pop
jne
je
push
inc
jo
push
cmp
mov
movs
cdq
adc
mov
addr16
pop
dec
shl
dec
jo
ret
fsub
fcmovne
shl
push
adc
sub
push
fstp
and
mov
xor
shl
je
dec
sbb
sub
sbb
sub
fdiv
mov
jnp
sub
out
adc
not
and
push
aad
push
inc
sbb
test
dec
xlat
pop
ss
das
pop
dec
and
jnp
pop
bound
jmp
sub
push
cli
push
cmp
int
mov
vrsqrt14ps
and
rcl
xchg
mov
cmp
jp
jecxz
ins
mov
call
cwde
or
retf
push
shl
iret
inc
aad
std
jmp
imul
fimul
lahf
in
cmp
arpl
sub
clc
inc
mov
std
aad
mov
jnp
or
dec
mov
sbb
jnp
jle
or
ins
lds
push
push
jmp
or
sbb
jg
jae
and
lea
pop
sar
or
not
js
in
cmps
push
icebp
push
(bad)
inc
ret
and
sbb
mov
fsub
int3
aam
push
mov
push
adc
in
ss
dec
call
xchg
mov
inc
jb
adc
stos
or
sbb
mov
push
sbb
push
pop
(bad)
in
push
xor
sbb
mov
popa
inc
dec
push
jae
movs
xchg
fwait
inc
add
mov
inc
jmp
xor
push
cwde
cmp
sub
cmp
sbb
push
(bad)
les
sar
(bad)
jmp
icebp
ret
sbb
add
jns
loop
jnp
sub
pop
retf
jp
fsubr
hlt
(bad)
cmps
mov
(bad)
icebp
dec
add
ins
pop
repnz
je
call
push
sub
mov
xchg
test
xchg
jp
mov
iret
addr16
push
mov
xchg
rcr
ins
dec
cmp
add
lods
and
or
out
ins
or
push
mov
cld
(bad)
popf
aaa
jge
imul
call
sub
cmp
loopne
xor
cmp
mov
push
adc
mov
fisttp
dec
inc
sub
push
fmul
push
and
adc
add
jbe
inc
mov
lahf
pop
nop
inc
into
dec
add
mov
ret
jle
es
push
sub
dec
nop
cli
cwde
in
retf
push
test
fs
mov
sub
les
add
fld
xor
adc
rep
ret
inc
or
xchg
inc
sbb
in
out
or
sub
inc
and
sbb
out
cs
dec
adc
gs
dec
jns
mov
and
pop
mov
lahf
popf
add
or
fsubr
int3
sub
lea
popf
mov
mov
jns
cmp
lea
imul
js
sub
pop
scas
test
jnp
sbb
mov
push
pop
jnp
outs
mov
int3
pop
xlat
ja
cmp
jl
lods
mov
sahf
mov
fsub
(bad)
test
out
lods
push
mul
(bad)
sbb
or
dec
bound
xor
xchg
fcmovb
mov
jns
inc
sub
mov
into
shl
lods
(bad)
mov
mov
daa
aad
dec
sub
dec
cld
jno
scas
daa
pushf
mov
sti
imul
stos
in
loope
aam
dec
push
push
adc
loop
sub
out
pop
loopne
xchg
inc
sub
or
enter
jo
dec
pop
cmp
push
fstp
xchg
out
stos
push
or
jno
sbb
sbb
dec
sbb
push
mov
enter
pop
push
gs
and
mov
sbb
leave
leave
sub
mov
pop
ja
sub
jo
out
or
sbb
push
not
ret
or
test
mov
call
xchg
add
cmp
enter
jne
sbb
xchg
jb
pop
cdq
xor
pop
push
scas
push
out
sbb
scas
or
jecxz
mov
mov
and
test
bound
loope
adc
lods
gs
cmp
pop
cmp
dec
inc
call
ins
xchg
in
es
sbb
ja
jle
lods
sub
xor
push
paddsw
inc
and
outs
cdq
sbb
test
sti
push
mov
inc
loopne
xor
leave
jb
ret
jmp
mov
and
and
or
pop
call
xchg
iret
or
mov
xchg
mov
retf
movs
xor
mul
movs
enter
xlat
in
div
xor
cs
mov
sub
sahf
arpl
sub
or
xchg
pop
and
leave
shl
jmp
aad
div
aam
popa
mov
(bad)
aam
out
daa
gs
loope
xor
leave
in
or
mov
push
jnp
adc
xchg
mov
cmps
test
pop
sub
mov
mov
dec
(bad)
adc
mov
or
sbb
sub
mov
dec
outs
lea
gs
stos
cmp
(bad)
xchg
in
shl
jp
fbstp
pop
test
add
dec
or
xchg
test
and
dec
mov
test
int3
push
sbb
inc
repnz
and
movs
mov
push
mov
add
sub
dec
xlat
jl
pop
gs
dec
mov
(bad)
sub
push
aam
iret
in
inc
mov
into
xchg
mov
imul
sahf
adc
jmp
and
lods
add
repnz
xor
adc
in
sbb
cmps
cwde
scas
icebp
pop
xchg
mov
add
(bad)
iret
mov
(bad)
daa
xchg
in
lsl
sub
rcl
into
loope
xchg
movs
cs
adc
(bad)
sbb
jnp
shr
lods
jb
mov
dec
int3
(bad)
sar
adc
ins
das
mov
mov
or
out
jo
mov
int3
ret
out
push
mov
mov
push
(bad)
jmp
jae
arpl
fild
dec
in
(bad)
pop
sub
arpl
and
cld
dec
jo
sub
fisubr
mov
or
or
arpl
jns
stos
das
(bad)
adc
cmp
xor
jno
pop
and
push
pop
cs
aas
pop
add
mov
add
test
mov
jb
jmp
xor
arpl
mov
xchg
and
retf
or
out
loope
mov
pop
adc
not
pop
jg
fcom
xor
dec
and
mov
adc
movs
mov
pop
lock
and
inc
pop
pushf
or
jae
js
mov
dec
cs
add
mov
nop
call
cld
push
(bad)
pop
cmp
loopne
dec
mov
lahf
inc
mov
repnz
out
clc
cwde
fcmovnu
cli
mov
and
sti
push
fld
or
mov
test
stos
cmp
sub
or
xchg
lea
and
xor
mov
xor
and
int
cmps
cmp
add
jecxz
xchg
cmp
mov
or
xor
rcr
jmp
mov
(bad)
sbb
into
repnz
mov
jnp
push
xchg
in
cs
adc
cmp
xor
adc
xlat
cmp
jne
cmp
(bad)
pop
or
sub
push
jl
out
pop
inc
int3
mov
mov
push
ds
push
xchg
inc
out
test
movs
sbb
mov
mov
(bad)
jp
in
in
fld
mov
into
pop
out
cmp
add
(bad)
sbb
jb
xrelease
cdq
cmp
sbb
inc
or
push
pop
xchg
push
outs
test
call
jp
xor
dec
pop
adc
in
xchg
inc
adc
fsub
inc
inc
cmps
adc
xor
(bad)
fidiv
repz
out
shl
aam
stos
cdq
and
mov
dec
loopne
xchg
xchg
scas
sbb
inc
jecxz
scas
xor
cli
push
mov
stos
dec
daa
cmps
ror
cmp
push
nop
mov
dec
and
loope
and
inc
adc
and
jle
sub
mov
xor
sbb
js
mov
mov
stos
mov
rcr
lock
stos
ja
in
cmp
mov
scas
dec
inc
sbb
mov
xchg
adc
push
or
ja
retf
mov
pusha
jecxz
jnp
inc
sbb
cli
xchg
mov
or
adc
sbb
rcl
sub
sub
mov
xor
test
stos
inc
cmp
sbb
arpl
ds
test
imul
inc
or
mov
push
xchg
movs
adc
(bad)
mov
xor
adc
push
jae
or
push
push
stc
or
and
mov
mov
jmp
mov
repnz
inc
push
nop
xor
and
(bad)
fistp
xor
mov
mov
mov
push
cmp
mov
lods
mov
outs
mov
adc
dec
sbb
pop
jbe
cdq
ins
out
in
movs
sbb
popa
leave
jle
or
sub
and
es
dec
inc
push
pop
lds
lods
jo
push
test
ss
clc
cs
add
lds
adc
mov
hlt
sub
mov
mov
dec
mov
lds
dec
pop
sbb
popa
daa
retf
and
out
and
add
push
inc
fcomp
pop
mov
xchg
dec
fs
call
imul
mov
bound
jg
loope
pop
pop
sti
scas
mov
adc
xor
push
xor
hlt
in
sub
dec
cdq
mov
gs
sahf
mov
cdq
push
in
sahf
pop
adc
mov
aaa
das
mov
push
jne
ins
and
fbld
xor
jo
push
mov
movs
popa
dec
dec
fs
inc
out
movs
sub
mov
mov
cwde
mov
mov
inc
jae
or
ja
les
stos
dec
mov
add
pop
icebp
(bad)
mov
xchg
adc
push
sbb
jecxz
add
mov
pop
add
les
inc
mov
test
scas
sub
or
inc
mov
or
std
cmp
cld
lods
push
outs
ins
stos
rcl
pop
mov
xchg
fcmovbe
dec
out
rol
xchg
retf
outs
ror
loopne
retf
bound
push
push
pop
mov
mov
retf
pushf
in
mov
ja
(bad)
jp
imul
ss
ins
cdq
mov
mov
(bad)
aad
mov
and
cmp
push
push
in
(bad)
mov
mov
aad
cmp
out
mov
dec
test
arpl
pop
xor
xchg
xchg
adc
add
push
cmp
clc
or
cwde
mov
mov
sub
dec
add
in
mov
test
cmp
data16
mov
and
jns
gs
mov
fcomp
rol
rol
or
mov
int3
repnz
sub
or
dec
dec
pop
adc
and
sbb
mov
jnp
xor
push
aam
int
movs
jl
adc
out
xchg
repnz
jb
ins
mov
xchg
sti
mov
push
add
icebp
retf
sbb
lea
inc
or
addr16
loopne
ret
rcl
xchg
pop
test
mov
pop
aas
sub
fimul
push
push
ror
fcomp
and
pop
add
add
movs
stos
add
les
jle
loop
fmul
or
out
push
xchg
and
and
push
in
xchg
loopne
outs
adc
std
cmp
shl
fsub
in
xchg
sub
or
lock
shl
fs
mov
sub
push
add
jecxz
fstp
xor
push
imul
pop
push
jae
jno
les
add
test
repnz
movs
adc
(bad)
mov
add
mov
cs
mov
ins
jnp
xor
cdq
shl
push
jae
sbb
cmp
xlat
and
sub
mov
and
test
sub
sub
stos
jge
pushf
cmp
js
push
das
mov
cmp
ja
or
and
xchg
cmp
xor
loopne
xor
and
enter
(bad)
mov
in
leave
push
or
mov
xchg
pop
sbb
inc
inc
in
pop
popf
adc
pop
xchg
adc
jns
mov
out
test
dec
ret
idiv
(bad)
inc
fdecstp
fnstsw
sbb
jo
mov
(bad)
addr16
(bad)
lea
jae
sbb
mov
inc
ret
push
dec
rcl
mov
push
mov
dec
sbb
and
push
fcmovbe
dec
push
mov
pop
lock
jl
mov
mov
pop
fs
push
mov
iret
adc
xor
add
dec
jae
ds
cmps
stos
ja
cmc
mov
fisubr
lods
enter
into
sub
xchg
adc
jne
out
inc
push
scas
mov
push
mov
sahf
aad
daa
xchg
fcom
jb
icebp
adc
inc
mov
out
in
inc
ror
dec
xor
cmp
ret
or
test
bound
fwait
adc
add
mov
fcomi
mov
mov
fwait
pop
sub
push
fcmovbe
(bad)
retf
or
gs
rcr
push
sub
icebp
mov
inc
pop
movs
icebp
mov
or
test
push
sbb
imul
push
ror
add
mov
xchg
ret
lds
pop
ins
data16
push
mov
cmp
jl
(bad)
add
enter
sbb
arpl
jns
cmp
xor
movs
mov
dec
jecxz
out
mov
mov
or
or
sub
mov
jnp
sub
mov
(bad)
(bad)
data16
xchg
aam
(bad)
outs
and
inc
jg
mov
movs
(bad)
pusha
out
jbe
dec
sub
or
add
and
(bad)
sub
jle
mov
sbb
xor
test
std
mov
pop
fisttp
jno
xchg
cmp
cdq
cmps
lea
fcmove
jae
xchg
mov
cs
adc
cdq
or
cmp
rcr
ja
push
push
push
sbb
push
mov
dec
loope
loope
mov
dec
jae
lods
push
xchg
push
retf
in
xchg
add
imul
jecxz
icebp
mov
out
jne
jge
cmps
aad
int
les
outs
push
xor
jb
mov
aad
pushf
mov
push
ins
frstor
sub
dec
repz
movs
push
shl
mov
or
gs
shl
mov
test
inc
adc
xor
adc
retf
or
dec
daa
push
add
retf
out
push
in
mov
aaa
add
mov
sub
fst
into
dec
pop
imul
rcr
ds
mov
xchg
rcr
mov
iret
and
(bad)
sahf
movs
push
pop
adc
push
enter
test
sar
pop
nop
dec
repnz
sbb
test
test
in
mov
nop
dec
xor
pop
fld
call
sbb
shl
pop
enter
out
sbb
rcl
dec
pop
imul
out
scas
sbb
xor
mov
pop
sbb
jne
(bad)
aad
int3
shr
psubsb
movs
outs
dec
adc
sub
and
movs
and
or
lods
adc
lock
mov
xchg
mov
les
(bad)
sbb
or
test
sbb
xor
push
mov
loop
shr
cmp
sbb
pop
sti
and
mov
xchg
scas
pop
mov
in
stos
or
add
les
je
fdivr
jl
ret
mov
lock
push
outs
pop
jmp
xchg
add
les
loopne
push
sbb
sub
xchg
in
pop
dec
loope
not
or
mov
test
push
push
(bad)
popf
popa
xlat
push
mov
ins
ins
pusha
and
pop
jecxz
dec
inc
nop
out
int
adc
movs
inc
nop
push
fwait
test
retf
test
sar
and
ins
mov
inc
pusha
xchg
mov
mov
movs
mov
lods
mov
sbb
adc
push
inc
mov
sub
lds
ins
aaa
push
push
dec
mov
int
loopne
mov
imul
gs
mov
mov
(bad)
push
sti
or
lock
sti
fs
scas
xor
mov
cdq
xor
xor
(bad)
imul
push
xchg
aam
arpl
xlat
cmp
mov
mov
int3
mov
movs
std
(bad)
adc
sbb
xor
clc
cdq
jge
push
mov
fld
cmp
push
cmp
pop
cwde
div
aam
repnz
add
xchg
add
fs
movs
push
imul
rol
pop
aas
push
inc
sub
cdq
push
movs
or
push
pop
and
mov
inc
fwait
mov
scas
mov
sub
out
xchg
aam
test
push
mov
ja
pop
add
test
or
xchg
ror
jno
dec
push
leave
pop
sbb
loopne
or
lahf
push
je
loopne
int
ficom
inc
dec
fiadd
lea
pop
dec
(bad)
daa
mov
sbb
mov
xchg
lahf
test
or
xor
dec
test
pushf
add
pop
fild
xchg
(bad)
call
xchg
lea
ret
mov
jbe
pop
fiadd
aaa
bound
stc
call
popf
scas
dec
xor
fsub
cmp
cmp
loop
mov
mov
(bad)
gs
das
and
lods
push
sar
ja
frstor
(bad)
jnp
fbstp
pop
fstp
popa
cmp
test
push
add
cmp
push
jae
js
fsub
push
fisttp
fdiv
jmp
and
dec
jle
ret
sbb
leave
pop
jbe
fadd
retf
rcl
lds
sbb
sbb
cs
loope
out
std
mov
nop
enter
pop
or
nop
mov
inc
dec
pop
out
pop
xchg
adc
cdq
mov
xor
das
mov
inc
sbb
dec
fdivr
mov
and
(bad)
cmps
add
add
jecxz
add
cwde
or
cdq
jecxz
adc
nop
lea
or
or
popf
cmp
mov
dec
ds
add
push
iret
jne
xor
iret
pushf
es
push
cmps
mov
jno
scas
jo
mov
lock
jge
in
shl
in
cmc
cmp
icebp
inc
movs
arpl
mov
outs
mov
and
sbb
push
test
push
popf
ret
inc
add
add
and
inc
enter
cmp
jns
call
mov
jmp
and
outs
gs
sahf
repnz
jno
xchg
mov
rol
mov
retf
sbb
adc
push
xor
cvtps2pi
enter
je
movs
jb
adc
movs
cmp
daa
and
inc
jbe
sbb
mov
fs
and
mov
ficom
and
int
sbb
xchg
sub
xchg
pop
shr
test
and
out
in
mov
dec
and
inc
cdq
stos
mov
or
mov
test
mov
js
lods
ror
inc
popa
adc
mov
xchg
and
mov
xchg
jecxz
xchg
stos
sbb
xchg
mov
jg
xor
enter
cmp
aaa
cwde
movs
lea
mov
loopne
icebp
test
imul
jns
gs
adc
addr16
lds
jb
cmp
fisttp
and
pop
push
push
jmp
pop
popf
sub
xchg
sahf
pop
push
fcmovnb
push
movs
adc
adc
cmp
test
pop
test
fmul
sub
dec
rol
xor
pusha
inc
sbb
push
call
enter
xchg
lods
mov
cmp
mov
data16
or
dec
inc
cwde
not
test
or
and
imul
ins
cmp
push
and
mov
sub
pushf
sbb
call
xchg
xchg
pop
cmp
pusha
addr16
xchg
pop
aam
movs
out
inc
mov
push
xchg
and
fsubr
(bad)
clc
push
push
inc
push
outs
add
sar
jbe
movs
pop
push
and
cmp
enter
mov
jnp
push
jp
cmp
mov
dec
mov
(bad)
inc
ins
dec
xor
dec
xchg
mov
xchg
outs
adc
cmp
add
sub
mov
push
stos
add
pop
lea
lock
push
mov
pop
aad
xor
in
repnz
ror
sbb
adc
cmp
adc
bound
pop
mov
mov
mov
shr
retf
mov
je
mov
(bad)
imul
test
aam
shl
cmp
inc
jnp
push
mov
fmul
(bad)
jecxz
je
jb
ffreep
stos
cmp
int3
xchg
sub
(bad)
mov
and
(bad)
cmc
and
rcl
dec
stos
sbb
(bad)
mov
js
xor
movs
retf
loopne
fild
mov
xchg
loope
mov
push
loop
jb
stos
adc
xchg
(bad)
imul
push
mov
xchg
dec
cmps
popf
das
outs
lfs
jne
mov
pop
push
cmc
adc
sbb
inc
mov
xor
mov
fdivr
sub
cdq
std
mov
and
ror
and
adc
xor
or
into
mov
ins
sbb
pop
fstp
cmps
push
sahf
ret
pop
mov
push
(bad)
in
mov
xchg
sub
imul
mov
mov
xchg
mov
sub
inc
clc
and
outs
mov
lock
xor
mov
nop
test
js
push
nop
jle
sbb
xor
cmp
bound
lods
into
push
clc
mov
cmp
dec
sub
and
mov
adc
bound
aad
push
sahf
bound
or
adc
and
xchg
jo
push
test
lods
arpl
inc
xor
push
or
je
and
add
add
cmp
sub
mov
and
push
mov
dec
and
(bad)
nop
mov
aaa
pop
loopne
mov
cdq
pop
iret
push
rol
jl
aaa
test
pop
adc
mov
push
or
jns
mov
mov
inc
seto
add
mov
arpl
scas
clc
sbb
push
sub
pop
pop
pop
mov
cmp
daa
sbb
sub
(bad)
(bad)
dec
jnp
push
movs
sbb
push
cmp
sbb
retf
rol
and
popf
dec
sbb
fiadd
mov
dec
sub
popa
lea
push
not
movs
jne
pop
or
sub
fistp
ins
into
dec
mov
shr
sbb
sub
inc
inc
mov
mov
rcl
push
inc
leave
call
xor
inc
pop
je
out
loope
xchg
inc
in
gs
mov
mov
test
loopne
or
inc
bndldx
adc
call
mov
adc
sub
out
pusha
push
xchg
loope
ins
sar
push
mov
mov
aam
repnz
adc
sbb
inc
enter
adc
movs
adc
dec
fst
out
gs
ja
(bad)
or
jb
aaa
jns
loop
and
mov
fimul
mov
sbb
les
pop
push
push
mov
inc
cdq
fldcw
outs
clc
test
push
int
data16
sti
push
arpl
fld
pop
adc
or
xchg
addr16
adc
or
repnz
or
mov
mov
add
sub
dec
mov
mov
in
add
xchg
xor
sbb
(bad)
loop
scas
xor
int
mov
pop
fstp
cmps
inc
pop
sub
xlat
pop
xchg
push
push
mov
add
sar
and
and
shr
inc
push
push
xchg
cmp
xchg
mov
je
mov
int
sub
shl
push
add
lock
and
lods
mov
stos
mov
cmp
repnz
inc
popa
mov
dec
and
aam
aam
invd
jmp
retf
push
or
dec
in
fmul
mov
popf
sub
mov
shr
or
sbb
in
sbb
sbb
mov
test
in
cmps
ins
and
mov
sbb
loop
dec
and
xchg
jp
mov
jle
ds
mov
ret
lahf
sbb
(bad)
jb
clc
inc
xor
outs
xor
push
xchg
cmps
test
xor
aas
je
cdq
adc
dec
adc
xchg
mov
(bad)
out
mov
pop
jne
sbb
sub
ret
fs
add
cmps
cmps
jb
movs
imul
lods
or
push
or
adc
jb
mov
pop
pop
sar
(bad)
ftst
pop
adc
mov
imul
sbb
and
retf
dec
sbb
setno
push
jmp
mov
cmp
js
add
rcr
jno
aam
repnz
fidivr
shl
mov
je
test
nop
jmp
fadd
pop
add
xchg
js
lea
xchg
push
cld
dec
aaa
cmps
test
call
push
jns
out
in
and
mov
cmp
fcom
stos
lock
mov
cmp
inc
xor
dec
in
(bad)
imul
xchg
out
mov
sbb
loopne
jno
retf
aad
ret
enter
inc
inc
jmp
rcr
sbb
or
sbb
clc
jns
mov
xchg
iret
sahf
pop
(bad)
jbe
mov
jmp
popa
sbb
sub
inc
inc
lods
add
xor
inc
add
cld
adc
mov
or
and
dec
call
push
imul
add
xchg
xchg
(bad)
pop
dec
fisttp
outs
(bad)
jnp
cmp
sbb
mov
es
lods
xchg
sub
out
imul
dec
or
fistp
sub
inc
adc
inc
test
xor
in
movs
arpl
push
js
movs
ret
add
xchg
mov
cmp
lock
mov
shl
aaa
jo
cli
push
adc
retf
ja
and
inc
mov
cmp
fild
and
pop
into
or
inc
out
or
mov
xor
add
test
cmp
test
push
fcomp
test
movs
mov
std
cmps
jge
imul
int3
push
cmp
and
(bad)
scas
(bad)
arpl
or
(bad)
mov
sbb
lods
lea
mov
add
pop
fiadd
inc
jb
or
sub
xchg
or
dec
aam
push
into
mov
inc
xchg
fs
mov
mov
sbb
xchg
out
ins
add
arpl
xchg
or
fwait
cmp
shl
cwde
fs
xor
stc
push
mov
popf
pop
xchg
xchg
iret
pop
(bad)
retf
jg
pop
dec
addr16
fstp
jo
pop
push
bound
ret
jo
sub
cmps
adc
pop
nop
adc
and
lea
stos
and
cmp
add
pop
inc
xor
stos
mov
sub
cdq
dec
pop
sbb
lods
jne
xchg
cdq
or
ret
mov
cmp
add
push
adc
dec
in
mov
sub
shr
sbb
sbb
mov
retf
pop
idiv
sti
cld
sub
cmps
cmps
call
fidivr
fs
imul
pop
xchg
or
ds
mov
imul
gs
xor
test
int
arpl
popa
add
cmp
inc
push
push
mov
test
into
imul
and
fmul
aas
sub
std
xlat
jae
push
stos
push
mov
mov
and
daa
repnz
cld
push
xchg
(bad)
in
xchg
stos
sbb
mov
sub
fsubr
outs
jmp
jmp
jmp
mov
jbe
rcl
js
loope
cs
in
test
ret
popf
stos
fs
push
adc
or
jle
cmp
movs
mov
les
and
jle
mov
xchg
or
pop
xchg
sub
mov
sbb
(bad)
push
ss
pushf
adc
test
pusha
mov
add
outs
sbb
jecxz
mov
or
sbb
dec
adc
mov
or
leave
inc
in
ret
add
jnp
jecxz
inc
movs
cmp
and
push
pop
not
or
scas
loop
jno
mov
movs
outs
add
iret
loopne
and
cmps
add
add
leave
fdivp
call
xor
xchg
call
pop
mov
sbb
xchg
fs
xlat
ins
mov
mov
or
dec
ins
xor
imul
pop
add
mov
adc
or
aaa
dec
sbb
enter
loope
pop
jmp
cmp
retf
movs
fistp
adc
inc
mov
push
shl
imul
mov
mov
and
jnp
(bad)
es
stos
out
sub
ficomp
jp
rol
inc
in
lods
cmp
inc
scas
mov
push
lea
dec
jle
dec
xchg
cmp
ja
mov
gs
jnp
xchg
test
xor
or
xchg
pop
adc
mov
popf
mov
lods
push
sub
outs
pop
pop
mov
js
sbb
ins
xchg
dec
inc
cmp
fdivp
mov
pop
dec
fst
out
dec
ret
(bad)
dec
clc
cmp
or
xor
inc
loopne
pusha
mov
in
js
js
mov
sub
dec
les
pop
and
sbb
mov
mov
movs
sbb
sbb
shl
pop
push
fsubr
mov
imul
push
xor
cmp
(bad)
xlat
inc
and
mov
push
xor
retf
lods
pop
daa
gs
and
arpl
or
shr
push
retf
shr
out
xor
pop
lea
in
dec
lahf
sbb
sbb
mov
or
mov
in
mov
fadd
fimul
scas
loope
adc
mov
sbb
fst
jp
test
fmulp
ret
pop
or
push
mov
(bad)
mov
dec
cmp
xchg
xchg
in
push
lea
and
loop
imul
cmps
pop
mov
push
cmp
cmps
cmp
adc
adc
mov
mov
add
cmp
shl
pop
out
xchg
dec
add
adc
outs
popa
lods
sbb
cmp
and
das
mov
movs
outs
jl
mov
jecxz
outs
and
dec
sbb
bound
ret
ret
sub
dec
sub
test
adc
sbb
dec
inc
sub
push
add
jb
inc
dec
retf
add
js
adc
inc
adc
fcmovnbe
mov
cmp
xor
mov
mov
xchg
in
mov
dec
dec
push
mov
test
xor
mov
sbb
xchg
mov
data16
aam
dec
and
lds
clc
push
sbb
fdiv
jbe
lods
jbe
inc
repnz
or
leave
loop
cmp
jge
adc
out
mov
add
mov
gs
or
(bad)
ins
mov
rcl
jae
pop
bound
scas
int3
jne
adc
mov
inc
imul
and
test
je
inc
fcomp
jp
addr16
jno
std
call
lods
cmp
call
pop
int
cmps
pop
out
mov
loopne
fisttp
hlt
mov
in
pop
cmp
ja
and
mov
fisub
mov
test
mov
cmps
sti
popf
movs
popf
outs
push
loope
(bad)
jp
es
or
mov
shl
push
into
inc
shl
inc
sub
pop
ds
mov
jmp
inc
ret
push
or
fdivr
adc
test
loop
fdivr
int
pcmpgtw
adc
cmp
adc
retf
xchg
fs
lods
xor
or
jmp
aam
int3
adc
inc
and
inc
fadd
dec
dec
xchg
fisubr
pop
or
pop
int
pop
stos
call
mov
repz
stc
sbb
cmp
adc
cmp
push
leave
lea
push
xchg
add
xor
adc
aam
cwde
mov
movs
in
(bad)
pop
test
rcr
ror
and
jnp
fs
jnp
sar
jb
jge
out
sbb
inc
fist
cmp
dec
jns
mov
arpl
addr16
inc
jnp
cmc
sbb
rol
xor
ins
in
pop
add
out
xchg
inc
xor
ins
sar
sbb
xchg
(bad)
in
inc
mov
jmp
ins
outs
inc
jo
jmp
xchg
fucomi
sub
and
imul
scas
movs
mov
int
add
dec
jnp
cmp
out
xor
adc
call
hlt
mov
xchg
mov
ins
leave
pop
retf
lock
retf
les
(bad)
mov
clc
rol
cmp
pop
push
dec
inc
rcl
pop
and
or
and
sbb
push
loop
lahf
lea
cdq
mov
adc
pusha
dec
push
ins
mov
inc
ror
mov
mov
adc
adc
add
xor
shr
push
retf
rcr
cmp
push
mov
inc
loopne
and
xor
dec
in
push
lods
bound
push
data16
sub
jno
adc
out
add
rol
and
sbb
xor
mov
adc
lea
dec
adc
movs
mov
(bad)
shr
enter
(bad)
(bad)
pop
push
jp
shr
retf
in
stos
pop
dec
and
ins
fwait
xchg
pop
push
jb
sub
push
cmp
or
cmp
add
push
cmps
dec
sar
inc
mov
mov
and
test
rol
ja
jge
rcl
jnp
fwait
xchg
adc
pop
xor
jle
aas
xchg
les
mov
jg
cli
jnp
fisubr
popf
imul
sbb
adc
fnsave
push
mov
arpl
addr16
sbb
lds
iret
shl
retf
inc
fsubr
test
(bad)
cdq
js
and
push
xchg
mov
fadd
sub
or
enter
les
pop
pop
or
adc
lods
out
mov
ins
ins
and
mov
xor
cmp
inc
mov
push
daa
adc
je
shl
sbb
sub
xor
sub
fs
cmc
sbb
mov
in
loope
push
xor
(bad)
jo
movs
rcl
mov
pop
pop
call
movs
dec
ror
test
or
mov
xor
retf
pop
cmp
cmp
xchg
dec
xchg
pop
cmp
xchg
into
jno
cmps
lahf
inc
sub
cmp
push
imul
or
sub
sub
(bad)
inc
xchg
rcl
xor
push
hlt
mov
in
xchg
nop
(bad)
cmp
mov
push
sbb
fcmovnu
xchg
data16
or
pop
cmp
test
inc
or
cmp
adc
mov
adc
sbb
call
fs
aaa
inc
daa
add
mov
retf
and
enter
movs
and
into
fiadd
xor
jns
push
fisub
cld
test
movs
enter
movs
ins
mov
pop
adc
ret
scas
sub
mov
sub
jmp
xchg
ror
dec
in
inc
ins
ins
lods
mov
scas
add
and
pushf
push
rcr
jge
or
mov
mov
test
add
pop
mov
xchg
int3
repnz
jno
sub
call
xor
sub
adc
and
pop
sbb
stos
push
shl
ins
mov
adc
lds
popf
push
ins
imul
xchg
xchg
or
add
pop
lods
mov
(bad)
jg
mov
mov
(bad)
inc
sti
or
and
xor
mov
aad
mov
stos
neg
sbb
(bad)
or
xor
pop
fistp
add
add
inc
jns
out
inc
push
movs
lds
ss
enter
inc
add
push
lods
jne
or
sbb
rcl
or
aad
mov
shr
arpl
and
sub
dec
(bad)
bound
jne
or
es
clc
stc
mov
xor
mov
cld
inc
mov
ds
or
fcmove
mov
push
fwait
xor
xchg
dec
inc
not
jp
pop
dec
bound
sbb
add
(bad)
mov
ret
ret
adc
int
lea
and
jno
aam
daa
nop
movs
and
dec
test
pushf
cmp
mov
cmp
retf
call
xor
dec
ficom
shl
shr
xor
in
dec
mov
call
dec
rdmsr
push
int
scas
jo
or
pop
popf
and
test
sub
loop
cmp
xchg
mov
sub
add
sub
outs
pop
repz
sbb
dec
jg
hlt
dec
fnstsw
adc
xor
mov
outs
cmp
fstp
jge
pop
cmp
cdq
stos
aas
stc
jae
adc
scas
lea
ins
lods
adc
cdq
push
xchg
sahf
cli
mov
stos
loop
int3
jbe
bound
xor
sub
cmc
(bad)
xchg
and
adc
(bad)
mov
inc
sub
adc
inc
sub
xor
pop
aaa
add
mov
xor
mov
or
sbb
sbb
int
mov
mov
jae
mov
jbe
push
cmp
out
push
imul
push
push
fldcw
push
sar
jne
xchg
ret
and
mov
dec
push
popf
pop
cdq
xchg
jp
test
push
pop
dec
scas
data16
cmp
mov
(bad)
(bad)
cwde
lods
fnstenv
cmp
jp
and
mov
test
fdiv
ss
mov
xor
lods
ins
adc
sub
icebp
push
dec
inc
xor
in
adc
in
movs
sub
adc
(bad)
test
(bad)
lods
dec
clc
adc
test
ins
imul
test
inc
xchg
mov
js
or
arpl
mov
in
stos
das
mov
imul
and
push
jno
adc
jle
pop
inc
xchg
dec
iret
and
cmps
adc
add
fcom
enter
js
outs
push
loop
push
and
and
xchg
fnstenv
mov
jnp
sub
push
cmc
(bad)
das
jns
or
or
ins
jp
lock
cmp
(bad)
mov
popa
stos
mov
xlat
jle
aaa
pusha
jge
sub
in
mov
push
or
push
pop
fnstenv
pop
sub
dec
les
push
imul
(bad)
mov
inc
push
adc
add
sbb
jmp
lock
push
add
cmp
rcl
jne
and
aad
push
retf
mov
cmp
imul
or
mov
das
aaa
call
jl
adc
les
adc
xor
enter
sub
cwde
push
iret
or
mov
mov
leave
cwde
jmp
mov
bound
xchg
(bad)
xchg
dec
adc
mov
(bad)
sar
jne
cmp
xchg
clc
push
mov
fldcw
xor
sbb
add
and
mov
mov
call
jne
lods
jno
lods
jo
mov
push
pop
adc
jbe
sbb
mov
lods
test
or
stos
ins
jecxz
stc
fadd
int3
xchg
lea
mov
pop
ins
push
or
mov
sbb
bound
cmp
push
add
leave
outs
and
pop
data16
lods
xor
iret
lea
mov
push
sbb
aad
pop
inc
stc
xor
rol
mov
js
(bad)
xor
inc
out
mov
sbb
mov
cdq
lods
jmp
push
and
retf
or
mov
sbb
cli
mov
imul
pop
(bad)
lahf
les
ins
rcl
cmc
dec
pop
mov
popf
jl
adc
mov
test
mov
(bad)
leave
xchg
data16
rol
push
and
push
or
stos
add
sub
inc
cli
jl
dec
icebp
inc
movs
out
sbb
repz
jnp
enter
fdivp
aad
mov
test
dec
push
test
cs
sub
xchg
fiadd
push
fs
pop
jecxz
dec
out
test
movs
pusha
jae
and
imul
arpl
out
jg
dec
movs
stos
shr
mov
icebp
movs
jp
or
cwde
pushf
cmp
xor
or
xor
push
inc
xchg
iret
sub
retf
inc
and
ror
sub
stos
add
lods
xchg
cli
pop
inc
xor
jnp
inc
mov
sbb
arpl
inc
daa
jmp
ins
jecxz
pop
jge
push
sub
lods
pop
and
sbb
cwde
out
jecxz
fwait
mov
xor
and
leave
cwde
and
call
test
fistp
inc
lods
stc
push
mov
xchg
loop
sub
push
mov
sbb
xchg
aad
inc
jle
imul
inc
xor
mov
pop
les
sbb
out
lea
leave
jne
push
jno
xchg
dec
bound
sub
data16
sti
push
movs
push
and
outs
push
mov
cmp
xor
(bad)
adc
lods
dec
add
cmps
sub
adc
mov
data16
movs
sub
arpl
add
push
and
pusha
shl
imul
and
xchg
mov
push
push
int
dec
xor
fs
mov
push
ret
jbe
pusha
xor
jle
pop
pop
ret
cmp
arpl
repz
adc
cs
call
rol
out
sbb
pop
movlps
shl
push
in
retf
fild
xchg
pop
ds
shl
pushf
push
mov
call
test
test
add
std
push
sub
test
scas
push
ficom
push
xor
mov
(bad)
sub
loope
xchg
lock
jmp
aam
sub
xchg
xchg
imul
int
and
jge
sbb
mov
mov
inc
sahf
test
nop
xor
js
inc
dec
and
int
test
jecxz
movs
stos
inc
rol
dec
xor
not
mov
pusha
mov
cmp
loop
mov
jo
in
shl
mov
ret
loope
sub
repnz
and
xchg
loope
mov
stos
and
and
add
push
sti
dec
xor
mov
aam
mov
dec
pop
and
cmps
xor
jle
sbb
add
mov
mov
or
in
mov
and
sub
cs
xlat
sar
outs
jmp
mov
or
scas
(bad)
enter
test
sub
sbb
jnp
ret
sub
add
jne
repz
imul
mov
out
adc
pop
stos
cmp
mov
cli
push
inc
fcom
arpl
pop
push
xchg
aam
add
jno
outs
pushf
dec
xor
jno
test
sub
push
jge
out
jo
test
jno
pushf
call
bound
xchg
and
inc
or
out
(bad)
(bad)
das
adc
in
push
(bad)
push
loopne
mov
stos
inc
push
xor
pop
sub
lods
or
jo
neg
test
gs
mov
xchg
ror
das
out
xchg
mov
stos
pop
and
loope
sbb
inc
in
pop
hlt
dec
mov
inc
jb
jnp
adc
nop
fild
xor
xchg
dec
adc
dec
ss
shl
ficom
mov
cmp
adc
or
and
lock
mov
je
dec
and
adc
xor
fimul
ss
and
push
ja
and
xchg
mov
mov
mov
mov
(bad)
sub
dec
imul
mov
lods
inc
(bad)
jnp
mov
retf
outs
test
inc
loope
push
sub
and
out
addr16
(bad)
repz
sti
sub
xor
pop
in
add
std
xchg
pop
or
sub
daa
sub
loope
push
lods
xchg
jle
dec
pop
and
out
cmp
and
cmps
cmp
not
(bad)
xor
test
inc
cmps
or
mov
inc
add
mov
sbb
and
pushf
sub
push
stos
sbb
ins
xchg
push
mov
retf
add
cdq
imul
xlat
jb
jmp
imul
shl
(bad)
mov
mov
aaa
aaa
add
ja
pop
inc
pop
and
or
imul
aas
push
push
mov
add
es
mov
mov
sbb
mov
stos
adc
adc
retf
dec
adc
and
pop
lahf
fiadd
mov
inc
mov
sbb
lods
enter
test
lock
push
fsubr
retf
push
inc
jmp
push
inc
mov
xor
push
push
lods
xchg
(bad)
push
adc
int
test
xor
xor
sti
sub
xor
xchg
push
add
and
dec
sub
mov
cmp
out
cli
push
ins
sbb
outs
pop
arpl
test
icebp
cmp
cmc
or
loop
fstp
out
xor
or
icebp
stos
cmp
cmp
outs
mov
leave
jnp
out
sbb
add
jb
cmp
test
xor
ds
sbb
inc
push
pop
sbb
push
call
imul
inc
and
dec
sub
push
add
add
dec
inc
jmp
inc
retf
mov
add
js
push
and
adc
add
add
inc
add
add
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
(bad)
add
or
or
and
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
hlt
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
and
mov
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
inc
hlt
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
add
add
nop
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
lock
adc
(bad)
nop
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
add
das
or
add
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
inc
hlt
add
add
adc
push
imul
gs
jb
cmp
call
push
dec
push
dec
imul
imul
gs
jb
add
sbb
push
nop
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
call
add
sbb
add
add
add
popa
ins
xor
add
test
ror
adc
add
add
add
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
add
add
test
dec
inc
or
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
inc
daa
add
add
pop
add
addr16
outs
outs
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
inc
add
mov
add
add
add
add
push
or
ja
add
add
(bad)
rcl
mov
jo
add
(bad)
push
rcl
clc
mov
add
add
push
rcl
dec
ja
add
idiv
lock
inc
add
add
add
(bad)
clc
or
(bad)
inc
add
add
add
push
sbb
(bad)
push
inc
add
add
add
(bad)
(bad)
inc
(bad)
idiv
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
inc
add
add
add
push
(bad)
(bad)
(bad)
(bad)
push
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
inc
add
add
add
dec
dec
add
add
dec
add
add
add
dec
add
out
add
add
xor
xor
out
out
add
add
add
add
xor
add
out
out
add
add
add
add
mov
xor
out
out
add
mov
add
add
mov
add
or
add
stos
stos
add
add
add
stos
mov
add
add
add
stos
mov
add
(bad)
cld
pop
(bad)
stc
ror
lock
inc
add
clc
add
add
add
add
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
rol
pop
add
pop
add
add
add
aas
inc
jg
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
inc
jg
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
pop
push
or
(bad)
inc
inc
add
add
or
ins
bound
jo
jb
addr16
or
inc
outs
jo
jb
addr16
adc
or
inc
adc
and
nop
add
add
ins
inc
cmp
or
ins
bound
ins
jo
outs
jns
add
or
inc
outs
ins
jo
icebp
in
popa
add
outs
or
add
add
and
nop
add
add
ins
inc
inc
add
add
ins
push
popa
jb
imul
add
jbe
jb
outs
arpl
add
(bad)
sbb
add
add
and
nop
add
add
ins
inc
inc
add
add
or
ins
bound
jb
imul
add
jb
imul
pop
mov
jne
sbb
adc
sbb
and
mov
add
ins
inc
inc
add
add
or
ins
bound
popa
je
outs
jb
add
add
add
popa
je
outs
jb
popa
add
sti
add
add
push
add
sbb
and
mov
add
ins
inc
inc
add
add
push
add
push
jb
fs
je
popa
ins
add
add
add
outs
fs
je
add
jle
std
add
or
sbb
and
mov
add
ins
inc
inc
add
add
or
ins
bound
arpl
jae
push
outs
add
add
inc
jne
outs
jb
jp
outs
and
add
(bad)
sbb
add
add
adc
and
nop
add
add
ins
inc
push
add
add
adc
ins
bound
ins
jo
outs
jns
jb
fs
je
add
pop
add
outs
fs
je
and
ins
popa
and
ins
jo
icebp
in
popa
add
mov
pop
add
jmp
mov
add
ins
inc
add
add
add
add
outs
outs
ja
dec
gs
jb
cmp
call
push
dec
push
dec
imul
imul
gs
jb
add
add
add
sbb
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
hlt
add
add
adc
push
imul
gs
jb
aaa
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
nop
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
adc
push
imul
gs
jb
ss
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
prefetchnta
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
adc
push
imul
gs
jb
xor
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
movhps
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
movhps
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
unpckhps
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
adc
push
imul
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
unpcklps
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
outs
outs
ja
dec
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
movlps
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
hlt
add
add
add
outs
outs
ja
dec
gs
jb
xor
call
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
movlps
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
movups
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
movups
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
(bad)
verw
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
femms
add
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
prefetch
sub
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
adc
push
imul
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
(bad)
add
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
outs
outs
ja
dec
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
ud2
add
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
repz
add
add
outs
outs
ja
dec
gs
jb
add
sbb
push
dec
push
dec
imul
imul
gs
jb
add
pop
push
push
(bad)
add
mov
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jne
ins
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
xchg
jle
add
xchg
xchg
add
add
jg
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jg
add
jle
add
sbb
add
add
add
add
pusha
jo
inc
add
adc
xor
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
pusha
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
ins
or
std
pushf
js
add
add
sbb
adc
sub
add
add
sbb
and
add
add
add
sbb
add
add
or
add
adc
add
add
add
add
add
js
add
ins
or
std
pushf
js
add
add
sbb
adc
or
add
add
sbb
and
add
add
add
sbb
add
add
or
add
adc
add
add
add
add
add
js
add
ins
or
std
pushf
js
add
add
sbb
add
dec
add
add
adc
or
pusha
inc
add
adc
and
sub
add
add
add
sbb
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
cmc
add
add
add
(bad)
cld
and
(bad)
dec
add
add
pusha
(bad)
cld
and
jmp
dec
(bad)
fs
jmp
add
dec
cmp
add
push
add
add
add
dec
add
or
add
jmp
adc
add
(bad)
cld
and
cmp
adc
ss
cmp
sub
repz
add
(bad)
cld
and
sahf
add
push
adc
ins
je
in
or
or
jo
(bad)
cmp
adc
add
(bad)
cld
and
inc
cld
pop
imul
sti
std
xor
das
adc
ins
je
ins
jo
sahf
inc
js
add
jmp
jmp
add
fs
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
js
add
jo
add
add
add
add
sbb
add
add
sbb
add
add
add
add
add
adc
add
cmp
add
sub
add
sbb
add
inc
inc
add
or
or
imul
std
and
sub
ins
call
add
inc
inc
inc
add
or
or
imul
std
and
and
sbb
inc
inc
inc
add
or
enter
imul
std
and
sub
inc
jmp
movups
sbb
or
or
xor
add
ins
jmp
pop
call
dec
dec
inc
jmp
or
js
push
inc
inc
inc
add
or
or
ins
jo
and
sbb
sbb
or
or
das
jo
sub
js
push
lahf
inc
add
cmp
in
and
add
add
add
sbb
add
add
or
add
cmp
add
add
or
add
add
jo
add
ins
inc
add
add
pop
inc
add
add
dec
inc
add
add
inc
inc
add
add
push
inc
add
add
daa
pop
dec
add
add
out
js
xor
add
add
push
dec
add
add
and
js
in
(bad)
(bad)
pop
and
das
dec
dec
add
add
and
add
add
jno
(bad)
cmp
add
dec
pop
inc
jmp
add
dec
add
or
add
jmp
push
jmp
dec
push
add
pop
(bad)
cmp
ins
js
in
push
push
add
add
cld
jne
js
in
cmp
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
jmp
add
dec
push
add
add
(bad)
push
or
pop
cmp
add
(bad)
inc
ss
pop
(bad)
cmp
sbb
add
inc
jmp
ins
xor
sahf
or
add
add
xor
ins
js
ins
xor
cmp
add
dec
push
dec
add
add
xor
push
add
add
cmc
add
add
ins
xor
cs
inc
dec
push
pop
dec
or
adc
sub
(bad)
cld
pusha
sub
add
(bad)
ds
and
or
or
add
call
add
dec
push
push
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
or
add
add
add
add
add
add
push
add
add
inc
add
add
cmp
add
sub
add
add
add
add
inc
je
sub
add
cld
mul
je
dec
in
(bad)
jmp
or
add
add
jmp
inc
(bad)
push
sub
inc
add
add
add
ins
je
or
add
inc
int3
(bad)
cld
not
xor
jmp
inc
pop
sti
addr16
add
dec
std
imul
add
ins
je
or
add
xor
fdivr
add
jmp
inc
pop
sti
xor
add
dec
std
imul
cld
and
or
add
xor
fdivr
add
(bad)
std
dec
dec
or
cmp
cld
mul
enter
call
push
add
str
or
or
add
and
dec
adc
add
std
imul
or
add
and
(bad)
sub
sar
or
str
or
scas
add
sti
pushf
int3
(bad)
cld
mul
push
add
inc
inc
(bad)
xor
inc
(bad)
cld
and
adc
add
and
(bad)
sub
dec
jmp
enter
(bad)
(bad)
jle
(bad)
sub
ins
dec
inc
call
push
add
aas
inc
add
add
add
add
add
sbb
add
add
sub
add
add
or
add
add
js
add
cld
inc
add
inc
add
add
dec
inc
add
add
add
je
add
and
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jge
add
(bad)
(bad)
inc
add
add
add
add
add
inc
add
add
(bad)
(bad)
inc
add
add
movs
mov
mov
mov
in
mov
movs
mov
mov
add
movs
mov
mov
in
scas
mov
mov
add
or
inc
add
inc
add
inc
add
inc
add
movs
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
movs
inc
add
inc
add
add
movs
inc
add
inc
add
add
or
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
jg
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
mov
mov
mov
mov
mov
add
mov
movs
movs
cdq
mov
mov
mov
movs
movs
mov
mov
add
or
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
add
add
inc
js
sbb
add
add
add
and
cmc
add
add
pop
or
add
cmp
push
or
add
and
cmc
add
add
pop
or
add
cmp
push
or
add
and
cmc
add
add
pop
or
add
cmp
push
or
add
and
cmc
add
add
pop
or
add
cmp
push
or
add
and
cmc
add
add
pop
or
add
cmp
push
or
add
and
cmc
add
or
add
cmp
push
or
add
and
cmc
push
add
add
or
add
cmp
push
or
add
and
cmc
pop
add
add
or
add
cmp
push
add
add
push
pop
add
add
fs
call
cmc
add
add
add
push
inc
add
add
add
add
(bad)
ins
pop
dec
sbb
add
add
add
and
sub
inc
add
ins
je
pop
or
add
sahf
or
add
and
sub
xor
cld
adc
pop
or
and
cld
mov
push
xor
xor
push
add
add
stos
jno
inc
jmp
(bad)
stc
add
jmp
jmp
add
add
add
pop
or
and
inc
pop
or
add
jno
jmp
pop
or
add
jno
push
add
add
adc
cs
inc
pop
or
add
jno
jmp
add
add
add
add
ins
sub
ins
and
ins
and
or
adc
cmp
add
inc
add
pop
add
add
add
sbb
add
add
adc
add
add
add
add
add
js
add
and
add
add
add
add
push
add
add
xor
add
xor
add
cmp
add
add
ins
or
inc
je
add
cs
add
add
cmc
add
add
dec
dec
inc
add
dec
or
adc
add
(bad)
cld
pusha
add
add
inc
(bad)
inc
xor
cmc
add
add
cmc
add
add
dec
adc
or
add
or
add
add
(bad)
cld
pusha
add
add
inc
(bad)
inc
xor
sub
inc
add
jmp
lock
inc
(bad)
push
add
add
call
dec
(bad)
cld
and
jmp
(bad)
(bad)
jle
(bad)
jle
add
add
jmp
lock
inc
(bad)
push
add
add
(bad)
cld
and
call
inc
dec
cld
loopne
(bad)
cld
adc
cmp
add
(bad)
cld
and
call
xchg
add
add
inc
imul
(bad)
cld
and
cld
nop
std
addr16
sti
xchg
cmp
jo
add
sti
movs
pusha
(bad)
cld
and
jmp
inc
dec
(bad)
(bad)
jle
(bad)
lods
add
or
adc
add
cld
idiv
inc
sbb
loopne
add
add
jmp
hlt
add
retf
std
imul
(bad)
adc
add
ins
xor
add
jmp
adc
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
call
add
add
jno
push
ins
xor
add
call
adc
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
jmp
daa
add
jmp
adc
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
call
pop
jmp
dec
add
(bad)
cld
and
cld
nop
cld
adc
cmp
sub
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
call
pop
call
shl
pop
call
add
(bad)
cld
and
cld
mov
or
(bad)
(bad)
jle
(bad)
add
es
add
add
cmc
inc
add
add
dec
call
pusha
add
dec
or
adc
add
jmp
js
xor
adc
jnp
fs
add
cmp
cmp
mov
add
add
add
sbb
add
add
je
add
add
or
add
add
sar
add
sar
add
inc
add
add
inc
inc
add
inc
add
add
add
inc
add
add
sub
add
add
add
add
add
add
sub
pusha
push
push
or
add
add
add
add
add
add
add
add
add
add
add
add
nop
inc
add
inc
add
inc
pop
add
add
add
ins
or
inc
je
jmp
inc
cs
add
add
cmc
add
add
dec
dec
inc
add
dec
add
adc
add
(bad)
cld
pusha
add
add
inc
(bad)
inc
xor
cmc
add
add
cmc
add
add
dec
adc
or
add
or
add
add
(bad)
cld
pusha
add
add
inc
(bad)
inc
xor
sub
inc
add
jmp
lock
inc
(bad)
push
add
add
call
dec
(bad)
cld
and
jmp
(bad)
(bad)
jle
inc
loopne
add
add
jmp
lock
inc
(bad)
push
add
add
(bad)
cld
and
call
inc
dec
cld
loopne
(bad)
cld
adc
cmp
add
(bad)
cld
and
call
xchg
add
add
inc
imul
(bad)
cld
and
cld
nop
std
addr16
sti
xchg
cmp
jo
add
sti
movs
pusha
(bad)
cld
and
jmp
inc
dec
(bad)
(bad)
jle
(bad)
scas
add
or
adc
add
cld
idiv
inc
sbb
loopne
add
add
jmp
hlt
add
retf
std
imul
(bad)
adc
add
ins
xor
add
jmp
adc
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
call
add
add
jno
push
ins
xor
add
call
adc
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
jmp
daa
add
jmp
adc
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
call
pop
jmp
dec
add
(bad)
cld
and
cld
nop
cld
adc
cmp
sub
add
sti
xchg
add
sub
inc
add
movs
nop
(bad)
cld
and
call
pop
call
shl
pop
call
add
(bad)
cld
and
cld
mov
or
(bad)
(bad)
jle
inc
add
cmc
add
add
cmc
inc
add
add
dec
call
pusha
add
dec
add
adc
add
jmp
js
xor
jmp
adc
add
test
inc
add
add
inc
add
add
sbb
add
add
je
add
add
or
add
add
sar
add
sar
add
inc
add
add
inc
inc
add
inc
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
add
sub
add
add
add
add
add
add
add
add
nop
inc
add
inc
add
inc
add
add
add
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
sbb
add
sub
add
inc
nop
add
push
nop
add
push
nop
add
mov
add
call
add
cmp
add
and
inc
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
dec
gs
inc
popa
ins
ins
inc
outs
imul
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
outs
arpl
ins
ins
inc
outs
addr16
.byte
outs
add
