(bad)
bound
test
imul
mov
and
jns
lods
xchg
adc
jno
aas
lock
adc
shr
idiv
xlat
add
test
sub
nop
and
mov
fistp
mov
fnstcw
xlat
or
sub
dec
repz
adc
nop
not
pop
into
cmp
xor
js
jo
xor
outs
frstor
and
gs
or
icebp
mov
inc
adc
retf
and
ficom
loopne
mov
jp
sahf
lahf
lock
inc
or
push
stos
out
sti
pop
ja
scas
cmc
or
sub
inc
std
dec
in
call
dec
pop
cdq
mov
in
arpl
sbb
ds
out
sbb
mov
fcom
(bad)
(bad)
jae
call
jmp
sbb
fst
in
jp
mov
or
jmp
push
xor
sub
fnsave
test
bswap
call
sub
test
pop
jp
push
xchg
cmp
fimul
fwait
outs
xor
cmps
inc
add
clc
adc
loope
adc
inc
push
and
dec
sbb
into
and
xchg
(bad)
mov
jmp
mov
sbb
repz
inc
das
jcxz
or
push
(bad)
xchg
in
dec
mov
ins
out
mov
sbb
and
push
mov
jns
or
outs
pop
jle
stos
fwait
jl
mov
jmp
int
mov
push
ror
pop
call
outs
pop
adc
lds
sbb
push
mov
scas
popf
into
out
cmp
hlt
sub
out
jge
ja
test
inc
lods
(bad)
enter
or
(bad)
add
push
(bad)
mov
lods
pusha
pop
adc
inc
mov
adc
retf
push
repnz
imul
ficom
xor
dec
jae
pop
and
cmps
(bad)
je
pushw
lea
fstp
out
sub
cdq
sub
into
lahf
imul
mov
jmp
cmc
fwait
push
adc
gs
hlt
test
xchg
push
xlat
or
jg
jns
pushf
inc
adc
mov
div
cmp
mov
xor
cld
push
daa
adc
aam
lahf
mov
cmp
lea
dec
mov
stos
xchg
rol
fwait
inc
shr
xor
popf
mov
ret
js
pop
cmp
xchg
mov
jecxz
mov
inc
jae
js
jmp
adc
(bad)
and
jle
cmps
retf
fdiv
dec
pop
icebp
pop
clc
pop
nop
and
mov
repnz
in
sbb
xor
xchg
mov
ficomp
cmps
test
pop
mov
mov
imul
push
aad
adc
test
push
mov
sbb
stc
popa
pop
xor
ds
and
xor
je
jns
and
or
mov
mov
fwait
push
push
repnz
out
loop
mov
in
jbe
fdiv
(bad)
xor
leave
cmps
adc
cmp
push
sar
into
xchg
push
mov
mov
sbb
fmul
pop
xchg
and
in
enter
pusha
sbb
imul
inc
jl
push
jmp
push
fnstcw
(bad)
in
pop
rol
daa
(bad)
sbb
(bad)
aas
sbb
jo
inc
sbb
cmc
push
mov
rcl
rcr
je
cmc
rcr
daa
inc
jo
pop
push
pop
pop
ss
or
lea
test
jmp
icebp
in
mov
retf
mov
test
std
xlat
jecxz
fs
dec
xor
fstp
add
(bad)
lods
inc
push
mov
dec
mov
lock
jg
mov
popf
movs
mov
sbb
pop
cld
cmp
sbb
addr16
mov
and
in
je
lods
jno
das
mov
icebp
leave
xor
aad
sbb
inc
nop
(bad)
div
dec
add
mov
pop
popa
ror
dec
jl
out
rcr
jae
mov
xchg
call
cmp
xor
cwde
(bad)
cmp
inc
ss
inc
aam
sbb
sbb
sub
jo
data16
sbb
ror
sub
and
out
mov
push
sbb
mov
repz
or
inc
dec
call
jmp
imul
push
test
push
jl
sub
pop
mov
push
cmps
out
jmp
cmp
xchg
fistp
mov
or
or
in
movs
push
mov
jl
xor
ds
inc
add
loope
fsin
ins
push
pop
movs
addr16
cmp
push
test
pop
pop
jp
push
mov
push
out
push
sbb
not
sub
xor
ret
call
test
mov
aad
mov
add
ret
je
adc
mov
adc
mov
lea
pusha
xchg
call
stc
mov
ja
jmp
or
jp
(bad)
cli
xlat
xchg
cdq
fist
in
push
cmp
or
cmc
stos
jo
les
mov
mov
pop
mov
outs
mov
pop
adc
jp
(bad)
iret
sub
rol
pop
cmp
mov
mov
ins
ins
jbe
das
and
imul
fisubr
in
xor
shr
jmp
jp
xchg
fstp
lahf
add
(bad)
hlt
push
test
cmp
inc
arpl
scas
lahf
(bad)
fwait
add
mov
jne
push
js
pop
xor
push
sbb
jns
jb
adc
jmp
idiv
inc
mul
xchg
cmp
in
stos
les
adc
daa
call
push
dec
inc
sbb
sub
mov
dec
add
jns
mov
push
frstor
and
push
pop
and
xor
adc
pop
call
not
daa
fistp
mov
xchg
loop
cs
or
push
pop
or
push
pop
mov
test
cmp
push
or
mov
mov
xchg
push
call
movs
xchg
add
out
into
(bad)
dec
(bad)
xchg
les
data16
out
test
fld
pop
popa
xchg
adc
mov
pop
mov
xor
(bad)
jmp
outs
cmp
(bad)
neg
and
jecxz
jecxz
jmp
mov
push
sti
loopne
lock
std
push
aaa
outs
aas
in
mov
jae
mov
aam
lock
imul
mov
pop
test
pop
outs
(bad)
and
retf
mov
popa
mov
jg
xor
jno
add
int3
xlat
daa
hlt
mov
and
push
aam
pop
sub
hlt
or
and
outs
aas
sbb
push
jge
cwde
push
push
jmp
out
jg
fild
cwde
das
dec
and
mov
test
js
mov
or
push
pop
leave
repz
fidivr
test
cmc
jecxz
dec
xor
fadd
jne
sti
lea
cwde
retf
mov
jo
xor
xchg
or
in
out
mov
arpl
sub
mov
push
cmp
(bad)
cld
cs
sub
jo
mov
sbb
mov
xor
add
fbstp
mov
ficomp
inc
test
es
sbb
dec
inc
dec
sub
mov
retf
leave
ficomp
lock
arpl
dec
mov
test
js
adc
les
pusha
les
cmc
and
mov
inc
fimul
mov
sbb
cmps
sbb
xchg
bt
sbb
out
xchg
addr16
push
fs
data16
into
aad
adc
push
dec
call
in
push
add
fs
shl
cmps
pushf
push
fdivr
jecxz
dec
out
add
pop
xchg
xlat
cmp
adc
mov
pop
cmp
xor
mov
test
jns
aaa
jle
sub
call
popa
rcl
xchg
jnp
ret
dec
cmps
mov
mov
xor
outs
inc
hlt
out
popf
icebp
jge
je
xchg
or
jle
(bad)
inc
sbb
add
dec
pop
leave
inc
mov
xor
push
inc
mov
loopne
sbb
jne
cmp
mov
fnsave
xchg
and
jle
push
fst
adc
sti
sbb
int3
mov
out
out
out
(bad)
mov
test
mov
cld
call
fdiv
cmp
push
inc
sub
fst
sbb
mov
cmp
jg
popf
test
into
fdiv
retf
mov
pop
mov
leave
cdq
xchg
inc
sub
mov
mov
xor
ret
aaa
shr
jmp
push
ret
(bad)
shl
jp
rcr
jp
out
xor
(bad)
jae
cli
(bad)
jmp
sub
retf
std
iret
dec
int3
jb
cmp
ret
inc
and
dec
add
retf
je
into
pop
cdq
std
cdq
rcl
(bad)
cld
lahf
adc
mov
xchg
mov
arpl
ja
aad
in
add
out
jae
jmp
shr
aaa
add
rol
cmc
add
fsub
cmp
cdq
fidivr
mov
cli
ins
out
sbb
push
and
adc
sbb
pusha
loop
rol
push
je
or
es
mov
(bad)
cmps
out
stc
cwde
ficom
mov
aad
push
in
shl
inc
sub
jg
(bad)
push
(bad)
ja
enter
out
cmp
jbe
xor
mov
mov
jmp
hlt
mov
(bad)
xchg
rcl
mov
jle
and
daa
sti
and
leave
dec
(bad)
jns
or
aaa
in
popa
arpl
iret
out
test
xchg
lds
mov
mov
push
mov
int
nop
cli
out
test
popf
pop
or
addr16
in
jb
xchg
fcmovu
adc
fbld
mov
and
add
jnp
dec
mov
xor
cmp
sbb
into
cmp
xor
shl
popa
fistp
and
sub
push
into
mov
jecxz
in
or
push
ss
cwde
(bad)
(bad)
shr
push
pop
mov
push
xchg
xor
adc
cmp
in
nop
out
mov
cmp
mov
imul
sub
xor
xchg
jge
cmc
cmp
jmp
fiadd
shl
xchg
outs
(bad)
ins
inc
sbb
push
inc
xor
mov
cmp
enter
ret
push
(bad)
mov
adc
cmp
mov
sti
or
dec
(bad)
int3
pop
jecxz
mov
push
sahf
push
cmp
and
dec
ins
jmp
mov
add
sbb
xchg
test
add
jbe
mov
movs
and
mov
inc
scas
scas
call
bound
bnd
cmps
jmp
ds
stos
lahf
cmc
add
in
retf
jge
sahf
aad
addr16
pop
push
scas
inc
sub
(bad)
outs
(bad)
stc
cmc
mov
jp
(bad)
out
adc
das
in
mov
shl
pushf
inc
dec
pop
jg
repz
dec
ds
dec
les
inc
in
(bad)
loopne
stos
cdq
out
aam
sbb
cmp
mov
mov
arpl
push
sbb
inc
(bad)
(bad)
lahf
push
xor
ffree
inc
sti
push
pop
(bad)
xlat
push
aas
call
cmp
in
stc
pusha
and
enter
loop
dec
sbb
jmp
rcl
arpl
clc
adc
or
(bad)
out
mov
ins
test
jmp
pop
dec
xchg
lds
fucom
push
mov
push
adc
call
inc
push
mov
loopne
fist
sub
test
in
aas
fiadd
cmp
stos
test
mov
iret
je
adc
pop
push
push
ins
push
sbb
div
mov
sbb
lahf
jmp
push
mov
fninit
push
add
lock
jle
jle
push
ss
into
sbb
xchg
mov
daa
ins
ror
cmps
stos
xor
test
imul
(bad)
fidiv
jae
xchg
lock
jnp
les
sbb
or
and
sbb
sub
sub
in
cwde
inc
cmp
dec
pop
mov
mov
or
dec
stos
call
scas
call
test
dec
xor
mov
lahf
int
idiv
push
in
mov
mov
mov
pop
fisubr
arpl
adc
jmp
mov
dec
xchg
pop
push
lock
sbb
xchg
ds
leave
cmp
mov
xchg
pusha
or
push
cmp
leave
or
nop
je
inc
pop
sbb
repz
xor
xor
mov
out
jne
enter
lods
xor
and
out
mov
(bad)
or
cld
mov
idiv
xor
not
pop
mov
shl
push
shr
add
or
mov
(bad)
rcr
jge
push
xchg
mov
jae
test
pushf
xlat
lock
inc
push
and
pop
jge
test
fcom
fs
or
xor
push
cwde
lahf
xchg
jae
sbb
jb
addr16
mov
enter
push
div
jmp
in
push
jbe
sbb
xchg
es
xchg
push
addr16
mov
jns
jmp
jl
ret
daa
jl
cdq
and
mov
xor
sub
mov
dec
test
test
cs
mov
jne
cs
repz
(bad)
cld
pop
sbb
scas
ror
xor
lock
xchg
adc
ficom
mov
outs
lods
and
cmp
(bad)
out
sti
imul
dec
call
aas
out
ja
cs
mov
inc
in
ret
dec
xchg
test
fucomip
inc
inc
and
mov
das
jns
mov
movs
mov
mov
mov
jb
pop
add
in
add
addr16
lods
jmp
outs
pop
pop
and
adc
adc
(bad)
loop
sbb
push
mov
mov
push
dec
mov
je
out
aad
and
inc
xor
adc
sub
jb
je
push
inc
or
enter
lds
arpl
dec
cmps
ret
sysenter
pop
jmp
adc
push
aam
push
aas
jae
push
gs
outs
arpl
add
(bad)
mov
ins
jb
je
fwait
add
test
pop
push
lea
push
(bad)
int3
in
dec
fbld
(bad)
frstor
add
jbe
fdiv
pop
mov
mov
or
je
push
push
enter
loopne
popa
jo
inc
xchg
sbb
mov
xchg
push
mov
cmps
retf
pushf
xchg
ds
rcl
test
lock
ja
loopne
out
popf
xchg
xchg
aad
cli
test
loopne
int
fidivr
popa
scas
or
or
sbb
fbld
iret
aad
jg
or
xor
mov
mov
(bad)
int
stos
int
cmp
xchg
mov
dec
pop
out
jns
popf
pop
mov
or
aad
movs
daa
(bad)
mov
ret
cmc
mov
push
icebp
mov
sub
nop
jbe
in
mov
cmps
inc
jg
push
mov
dec
lds
jle
dec
jo
std
mov
jg
pop
lea
sub
and
xchg
cmp
mov
sbb
es
clc
ret
outs
jns
inc
jnp
into
xor
push
mov
mul
pop
ja
add
mov
imul
mov
mov
xor
ins
dec
loop
mov
push
(bad)
mov
push
lea
jo
sub
movs
xchg
mov
cmp
mov
fucomip
sbb
adc
scas
dec
scas
leave
xchg
ret
sbb
loop
adc
(bad)
enter
dec
jg
test
in
(bad)
xchg
push
(bad)
mov
mov
jmp
xor
(bad)
ficom
and
iret
inc
inc
or
mov
mov
cmp
jne
sbb
jge
jb
push
adc
gs
je
cmp
clc
loopne
or
xchg
mov
div
mov
fld1
mov
pop
push
pop
cmc
pushf
jne
adc
jle
int
cmp
xlat
test
popa
sub
(bad)
ret
jecxz
inc
aad
mov
adc
data16
pop
and
aad
add
sbb
enter
in
dec
ror
pop
sar
jmp
not
pop
dec
into
sbb
movs
outs
pop
fistp
inc
mov
sub
push
pushf
push
les
mov
shl
mov
mov
nop
mov
inc
fs
sbb
test
fisttp
sub
and
js
and
add
aas
sub
imul
loope
xchg
mov
test
jmp
add
call
and
mov
xchg
daa
ins
xor
push
sbb
jnp
pushf
push
icebp
popa
sub
adc
sub
mov
xor
fdiv
lar
add
cmp
mov
out
xchg
icebp
cmp
cwde
or
int3
out
cli
cmp
aas
outs
pop
leave
mov
mov
sar
xchg
scas
je
and
add
aaa
jecxz
js
out
and
add
add
jmp
sbb
hlt
mov
dec
inc
mov
lds
mov
and
mov
cmps
(bad)
adc
idiv
les
(bad)
pop
sbb
jb
or
mov
imul
cmps
mov
sub
and
test
dec
sbb
imul
cmps
out
movs
xchg
jae
sar
fsubr
sub
push
or
sar
push
aad
mov
and
dec
or
(bad)
adc
push
mov
cmps
pop
jge
sahf
in
in
out
sub
in
jmp
xchg
cmp
iret
fidiv
cmp
mov
(bad)
into
jne
adc
mov
pop
scas
fdiv
add
gs
jb
cli
xor
dec
fst
dec
jo
add
or
xchg
test
popa
mov
push
pop
and
dec
cld
(bad)
jnp
mov
xchg
fldcw
xor
jl
pop
and
and
pop
add
inc
jnp
mov
or
or
sahf
mov
and
jp
cld
sti
fimul
aas
adc
lds
aad
cs
test
fist
push
push
and
sbb
sahf
sub
inc
jge
cmp
pop
pop
stos
fadd
sti
(bad)
lock
or
jns
call
adc
test
xchg
test
add
(bad)
rcl
and
jmp
adc
mov
jns
popf
xor
icebp
mov
sub
mov
rol
(bad)
sbb
pop
xor
outs
(bad)
jecxz
or
mov
in
cld
in
int3
scas
jge
push
mov
fbld
jb
enter
clc
push
dec
mov
cs
xchg
jo
dec
push
(bad)
xchg
lock
xchg
xchg
test
mov
dec
inc
add
imul
fidivr
and
xchg
mov
and
dec
stc
jnp
(bad)
sbb
loope
clc
loopne
rcl
lods
dec
(bad)
jecxz
int3
into
adc
je
clc
push
aad
jns
iret
xor
and
addr16
dec
pop
out
sbb
jge
mov
js
or
cwde
sar
cld
jae
mov
xchg
add
jmp
pop
dec
adc
adc
ret
mov
push
mov
mov
retf
push
xor
ins
dec
mov
add
ins
add
pusha
sbb
sub
xchg
adc
jecxz
pop
pop
jae
dec
push
pop
test
retf
(bad)
and
mov
fdivr
dec
imul
imul
mov
ret
jns
lock
movs
and
icebp
inc
ror
sbb
dec
test
ins
ins
mov
cmp
stc
fnstenv
cmp
push
mov
or
jnp
int3
pop
cwde
xor
out
cmp
aad
mov
outs
mov
push
ret
inc
stos
pusha
dec
(bad)
mov
xchg
ja
call
iret
push
in
jle
or
jo
popa
retf
call
and
adc
xchg
outs
lea
(bad)
in
pop
sbb
call
cld
arpl
push
sub
into
push
xor
cwde
add
outs
out
pop
daa
shr
sti
add
movs
adc
mov
pop
adc
fimul
and
int3
cmps
fld
js
fstp
push
test
sbb
nop
xor
jmp
push
mov
jle
mov
xchg
mov
push
cld
mov
(bad)
in
mov
cmps
adc
jbe
out
test
mov
popf
retf
jecxz
cwde
push
cmp
movs
push
inc
movs
jns
ja
xchg
jno
pop
repz
sbb
jmp
push
sar
push
loope
inc
sub
pop
fcom
out
mov
sbb
xor
inc
(bad)
addr16
sahf
rcr
iret
or
sbb
xor
jle
cmovne
cmp
ins
push
outs
(bad)
and
js
fmul
into
ss
popf
push
int
gs
xlat
in
clc
sub
mov
mov
(bad)
push
cld
adc
sbb
cmps
push
mov
jnp
pop
dec
jns
cmc
mov
adc
mov
repnz
div
adc
dec
sti
pop
pop
out
pop
sti
inc
xchg
sub
push
lea
jno
cmp
scas
(bad)
out
std
push
retf
test
add
lahf
inc
and
pop
cmc
adc
push
stc
addr16
outs
pushf
jp
push
inc
scas
xchg
sahf
std
shl
mov
repz
aam
cld
sub
stos
xchg
mov
xchg
(bad)
inc
(bad)
adc
shr
fsubr
mov
imul
mov
repnz
mov
(bad)
in
pop
out
(bad)
dec
cs
fimul
leave
rcl
iret
sub
sbb
inc
fldenv
jb
arpl
lods
inc
jbe
scas
dec
aas
mov
and
push
out
adc
xor
ss
clc
hlt
jg
pusha
mov
(bad)
shr
jmp
add
stc
imul
mov
cmp
and
xchg
and
pop
dec
or
jl
adc
rol
ins
lods
adc
(bad)
rcr
out
push
add
(bad)
jb
push
sbb
pushf
imul
pop
outs
jbe
and
loop
mov
mov
lds
cld
lock
outs
sub
or
push
fmul
js
sub
jl
lods
leave
and
or
loope
mov
mov
xor
out
xchg
and
movs
and
adc
movs
dec
movs
in
clc
test
pop
sbb
std
adc
test
jo
and
xor
mov
fnstsw
pusha
loop
adc
outs
xchg
add
sti
pop
cmp
jge
jnp
dec
inc
cmps
retf
and
fsubp
xor
inc
lods
dec
cwde
jle
icebp
push
adc
lock
lods
xor
retf
add
jnp
and
icebp
rcr
and
jg
jbe
test
jl
push
pop
cmp
sub
inc
adc
pop
or
add
rol
sti
cdq
retf
add
daa
or
fwait
pusha
scas
xor
or
call
sbb
cdq
(bad)
adc
int
mov
sbb
clc
into
sbb
jo
das
(bad)
les
and
shl
mov
(bad)
(bad)
sahf
out
push
mov
jae
hlt
cmc
les
dec
das
adc
das
xor
ja
shl
(bad)
in
ror
dec
pop
loop
fmul
in
pop
stos
(bad)
or
and
nop
arpl
pop
xor
test
mov
jl
es
sub
mov
xchg
inc
jge
pusha
mov
(bad)
add
and
imul
cmps
jnp
xlat
fisub
in
xchg
sbb
and
push
popa
xchg
mov
gs
call
sbb
pop
in
in
jb
fimul
sbb
cdq
mov
cs
cmps
idiv
sbb
jecxz
mov
inc
cmp
in
cmp
arpl
mov
or
clc
sbb
jb
sub
or
shr
call
inc
jmp
push
mov
test
lods
or
popf
jnp
xchg
add
test
mov
dec
scas
outs
add
retf
call
jl
iret
aam
stos
push
xchg
pop
jl
lods
leave
pop
loop
mov
cmc
xchg
xchg
xchg
jge
mov
cmp
inc
hlt
inc
add
push
push
test
loop
out
aam
mov
das
xchg
lock
xor
(bad)
jmp
xchg
inc
popa
jbe
pop
sub
mov
mov
mov
shl
vmread
not
or
gs
add
shr
lock
ret
jl
mov
mov
pop
push
jbe
mov
cmps
push
cmps
jne
lock
fs
and
xchg
lds
adc
retf
or
icebp
xor
push
jnp
adc
mov
gs
adc
xor
jge
fwait
shl
sar
dec
std
dec
js
or
mov
push
(bad)
xor
sbb
std
push
pop
gs
sub
ins
push
aad
movs
push
pop
mov
cs
hlt
mov
pusha
xchg
movs
or
scas
and
fsubr
test
pop
and
mov
jg
cmp
aad
push
lahf
sar
sub
xchg
xchg
mov
xchg
xor
aam
push
sbb
xchg
inc
mov
jp
jns
fild
xor
and
aad
ficomp
inc
pop
sub
or
inc
jne
scas
sub
adc
addr16
pop
stos
inc
not
stos
dec
iret
mov
adc
fs
shl
fcom
jbe
push
and
mov
dec
aad
pop
loopne
cli
inc
pop
daa
sub
test
jne
repnz
inc
loopne
movs
xor
stc
mov
scas
pop
mov
fcomip
test
bound
add
outs
(bad)
mov
xor
test
lods
mov
dec
sbb
movs
mov
inc
push
out
pop
rcl
cmp
std
adc
loopne
sbb
cdq
sub
ja
lds
(bad)
std
imul
xchg
and
lods
aaa
push
push
ins
mov
clc
xchg
sahf
adc
sbb
(bad)
loope
js
jno
pop
(bad)
ins
jg
mov
and
fild
cmp
mov
jno
fstp
inc
add
push
sub
sub
std
push
outs
add
(bad)
stos
rcl
(bad)
cmc
(bad)
sbb
outs
xor
xchg
retf
sub
and
sub
cdq
mov
and
sub
imul
aaa
(bad)
sbb
mov
jne
and
test
or
shr
test
ja
lds
cmp
(bad)
lods
adc
or
or
mov
inc
sub
xchg
jnp
inc
addr16
sub
xchg
(bad)
cmp
sbb
and
cld
push
inc
ficom
or
mov
int3
sahf
test
and
iret
pop
jbe
and
adc
add
(bad)
mov
xchg
ins
fstp
fld
inc
push
lods
cmp
jecxz
lds
lock
fdiv
rol
fidiv
into
adc
jae
ror
aad
pop
and
lahf
mov
ror
jp
daa
mov
push
mov
imul
sbb
out
test
jo
fst
push
clc
push
cmp
adc
xchg
cmp
lahf
dec
bound
add
adc
mov
mov
mov
fcomi
pop
jae
retf
(bad)
ret
les
push
inc
mov
sub
jnp
stos
rcl
movq
sub
es
sub
fnsave
test
aas
push
mov
inc
jns
repz
pop
dec
jb
sbb
repz
jmp
hlt
stos
mov
arpl
mov
mov
in
sbb
mov
mov
push
push
mov
je
out
sbb
jl
push
mov
push
call
and
pop
pop
mov
mov
bound
jp
push
clc
push
inc
cmp
ins
jno
and
cli
mov
sub
pop
shr
das
fwait
mov
jnp
jb
mov
fld
mov
dec
jp
cmps
les
push
add
add
push
test
addr16
fisubr
cs
mov
adc
inc
push
js
add
pop
push
in
xlat
je
jl
sbb
inc
push
adc
push
or
or
fisttp
xchg
(bad)
and
sti
adc
cmp
jne
mov
mov
adc
mov
loopne
adc
mov
in
imul
xor
popa
jl
shr
out
pop
out
jp
fmul
pop
(bad)
loopne
movq
pop
cs
cmps
add
xchg
adc
xchg
call
sub
in
mov
ss
add
movs
jle
mov
(bad)
scas
stos
lods
ret
les
push
sbb
call
(bad)
in
lds
cmp
or
mov
dec
pushf
fwait
call
(bad)
ds
fild
cmc
(bad)
lahf
lahf
(bad)
outs
sub
and
retf
popa
in
mov
call
pop
xchg
push
pop
bound
lahf
(bad)
enter
xchg
sbb
mov
test
ret
xchg
mov
push
ffree
repz
cs
mov
inc
mov
test
loope
out
loopne
dec
cwde
aam
shl
dec
inc
sbb
dec
test
jmp
lahf
inc
pop
xchg
stos
and
xchg
mov
in
sti
xor
jb
aam
and
imul
outs
mov
mov
jo
pop
push
cld
add
xchg
or
test
int
test
fstp
inc
fidivr
xchg
xchg
mov
xchg
imul
xor
dec
fwait
push
faddp
mov
popf
cmp
sub
xchg
or
f2xm1
mov
xchg
(bad)
int3
aas
mov
push
xchg
std
xlat
sar
fsubr
cmp
cmc
loope
movs
jg
(bad)
lahf
and
jg
jg
sbb
mov
mov
retf
out
jmp
rol
adc
lea
push
inc
fnsave
adc
sti
xchg
out
scas
cmp
mov
cwde
cmp
ficom
inc
lods
loop
jb
sub
jl
cmps
sub
mov
scas
movs
lahf
ds
inc
dec
mov
(bad)
cmp
(bad)
out
or
sub
pop
ficomp
mov
(bad)
or
dec
nop
jge
inc
(bad)
imul
inc
call
outs
mov
loopne
ror
jne
cmc
pop
fisub
adc
stc
adc
imul
mov
push
push
gs
mov
cmp
push
daa
or
pop
xor
ret
cmp
fcmovnb
xchg
cmp
(bad)
dec
jno
jp
rol
jo
ret
inc
cld
lods
dec
fs
pop
das
test
jae
xor
sahf
or
add
fwait
mov
pause
xchg
out
pop
mov
scas
jle
pop
imul
add
xor
fisubr
(bad)
jge
repz
xor
jecxz
push
retf
int
sub
retf
les
cmp
mov
mov
data16
mov
aas
adc
sub
aam
mov
ss
dec
dec
aaa
(bad)
repz
sub
shl
push
pusha
aad
cmp
push
mov
dec
les
or
xor
jmp
mov
scas
push
pop
cmp
or
icebp
ficomp
jmp
imul
mov
push
pop
and
out
or
scas
add
fld
mov
out
cmc
mov
jae
inc
mov
int3
cmps
jo
adc
outs
fcomp
xchg
stos
out
bound
dec
sub
imul
das
ret
cs
cld
nop
retf
jge
popa
jns
cmps
and
sbb
sbb
push
jg
inc
mov
retf
test
(bad)
pop
test
dec
inc
aas
rol
call
and
fst
dec
push
call
and
mov
clc
fwait
add
add
aas
fs
loopne
xor
aas
stos
xor
xor
dec
sub
mov
retf
and
pusha
je
inc
dec
xchg
sub
push
jns
(bad)
ds
leave
imul
xchg
fwait
push
(bad)
jne
sub
mov
outs
ret
clc
push
pop
sar
add
test
psubb
xchg
ss
ffreep
cdq
retf
adc
inc
pop
int
mov
jg
or
je
cmp
scas
sar
lds
movs
mov
jp
outs
mov
fstp
arpl
movs
push
ja
adc
(bad)
sub
or
and
mov
xchg
aaa
adc
ins
leave
or
adc
arpl
jge
fcmovb
adc
fwait
mov
cmps
sahf
adc
mov
lea
dec
imul
and
arpl
and
push
cld
jl
mov
not
jae
nop
kaddw
or
and
je
dec
and
jl
push
dec
test
xchg
dec
fmul
xor
push
mov
test
dec
outs
push
repnz
mov
adc
inc
int3
inc
lods
adc
mov
fnstenv
jb
cwde
inc
mov
ins
xor
loop
pop
aad
inc
dec
stos
mov
(bad)
mov
mov
arpl
or
iret
les
push
fs
push
jnp
out
mov
sti
adc
js
aam
sub
adc
inc
inc
push
(bad)
lods
xchg
or
or
lods
cmps
retf
scas
cdq
aaa
inc
fyl2xp1
dec
mov
lds
mov
fdiv
fucomp
xor
xchg
jg
data16
xchg
ret
(bad)
dec
ret
mov
enter
sbb
sbb
inc
movs
ret
pop
push
mov
and
push
pop
vmovhps
retf
sar
mov
ficomp
pop
fimul
mov
jb
inc
xchg
mov
add
push
mov
jo
sbb
add
mov
add
lock
pop
mov
xchg
sbb
mov
adc
mov
out
add
outs
inc
in
rol
mov
adc
adc
(bad)
pop
push
(bad)
fadd
ins
and
(bad)
lods
mov
inc
and
push
pop
ret
cmps
mov
stos
sub
jle
push
pop
sti
iret
ret
imul
movs
call
add
adc
xchg
(bad)
repnz
call
sbb
mov
sub
inc
outs
jmp
fsub
lahf
adc
xchg
cwde
daa
xor
in
mov
xchg
sbb
and
xchg
mov
ins
xlat
xor
jecxz
jge
movs
jne
mov
jnp
adc
adc
adc
add
and
lds
lahf
(bad)
jp
mov
xchg
clc
arpl
dec
je
lea
mov
into
sbb
test
stc
dec
adc
lods
inc
clc
cmps
push
add
mov
sbb
outs
or
dec
pop
pushf
pop
popa
call
repnz
pop
pop
daa
pop
pop
sbb
rol
lods
stos
add
pop
(bad)
mov
lds
rcr
mov
xchg
(bad)
cmp
fcom
push
cmp
nop
jnp
popa
xchg
jl
xchg
in
dec
xor
int
bound
push
jp
rol
push
inc
pushf
in
jp
cmps
mov
push
or
mov
pop
add
jl
aaa
and
fisub
mov
jecxz
clc
das
jp
fbld
imul
sbb
or
pop
jg
je
mov
mov
mov
inc
popa
enter
push
pop
mov
push
push
or
xor
mov
out
xchg
movs
mov
test
mov
fs
or
mov
scas
add
arpl
mov
in
popa
aas
xor
pop
fisubr
push
retf
mov
push
fbstp
cmps
(bad)
jmp
jb
xchg
mov
repnz
cld
test
popa
cwde
fs
aas
adc
ja
fnstenv
and
into
ss
nop
sbb
xchg
push
adc
sbb
or
hlt
into
pusha
repnz
repz
push
pop
ds
scas
dec
shl
iret
shl
sar
les
rcr
dec
enter
js
idiv
cmp
push
jns
jp
jne
sbb
gs
out
ja
adc
sub
sub
adc
xor
xchg
xor
stc
xchg
arpl
xchg
jp
mov
inc
sbb
cld
mov
sti
iret
out
rcr
bound
das
jo
sub
scas
adc
clc
js
jg
mov
inc
in
ja
or
and
and
lahf
sar
jbe
mov
fnstcw
mov
xor
lods
pusha
fmulp
mov
xor
imul
xchg
movs
loopne
and
xor
xor
mov
cwde
xor
cs
lahf
rol
hlt
jno
xchg
sub
inc
and
sbb
mov
and
aaa
aam
fistp
xor
fmul
das
fsubr
mov
test
fs
inc
retf
sbb
das
jb
gs
mov
je
xchg
jecxz
xchg
inc
icebp
ret
pop
jns
ss
inc
ja
cmps
jne
outs
int
adc
xor
std
in
xchg
cmp
wrmsr
les
adc
dec
dec
push
pop
sub
nop
aad
stos
adc
jns
adc
or
lods
jmp
adc
in
jge
fdiv
jnp
push
adc
mov
gs
xchg
fmul
xor
jl
movs
and
addr16
sub
int
mov
mov
adc
not
and
stos
je
rcr
xchg
mov
dec
cmps
out
es
inc
retf
(bad)
aas
imul
in
jg
and
cmc
pusha
out
(bad)
pop
mov
daa
sub
mov
jo
mov
popa
shl
pushf
shl
jecxz
dec
or
aam
bnd
out
sbb
jecxz
mov
mov
mov
shl
dec
vsubsd
cmps
push
daa
outs
dec
inc
jb
test
pop
xor
adc
cli
dec
call
scas
addr16
fcomp
into
cwde
pop
scas
leave
pop
adc
jle
shld
ja
push
out
hlt
sbb
or
and
pusha
outs
add
jecxz
rcr
dec
ins
sbb
add
sar
iret
mov
sub
push
mov
xchg
lea
pusha
sbb
push
sub
sub
test
ret
push
retf
dec
push
lock
push
jo
arpl
and
cmp
gs
push
inc
loop
add
mov
xor
inc
xor
push
and
fadd
mov
mov
fadd
out
jmp
out
or
aad
mov
inc
mov
xchg
push
rcr
ret
(bad)
scas
fnsave
sub
dec
xchg
ds
xacquire
sub
ja
and
and
xor
sub
dec
sub
out
out
repz
cmp
jp
aas
inc
pop
shl
jno
ins
in
rcr
jmp
fiadd
pop
repz
js
add
fwait
xchg
mov
and
retf
mov
ret
ja
mov
cli
jb
add
test
jno
adc
(bad)
popa
xchg
jge
mov
add
scas
hlt
jle
push
mov
adc
jp
dec
sti
adc
sub
fs
inc
cmps
ja
in
lods
jmp
or
xchg
push
or
popa
addr16
das
aam
hlt
(bad)
(bad)
sub
clc
pop
cmp
into
jmp
bswap
pop
mov
adc
xchg
xchg
mov
mov
sub
add
addr16
xchg
(bad)
(bad)
xor
(bad)
mov
pop
scas
dec
daa
add
jns
fimul
jge
push
sub
ror
xchg
jmp
retf
adc
jbe
inc
fs
out
pop
pop
cmp
mov
xchg
addr16
adc
adc
push
mov
xor
sub
int3
jecxz
inc
shl
stos
xchg
pop
out
add
out
mov
sub
test
paddb
dec
and
xchg
dec
and
adc
icebp
enter
add
test
cmps
add
call
and
leave
fcom
rcr
cmc
cmp
aad
scas
push
sbb
movs
inc
sub
imul
adc
fisub
mov
mov
mov
ret
jmp
sub
inc
add
(bad)
xchg
jmp
mov
mov
jae
or
scas
mov
dec
iret
movs
je
pop
xchg
jle
(bad)
std
jle
cwde
cwde
jns
inc
mov
test
push
jge
(bad)
xor
sbb
mov
sbb
and
mov
and
fstp
test
je
mov
xor
aaa
jae
dec
xchg
in
sbb
fsub
popa
pushf
fstp
jge
aad
xor
xor
fmul
dec
lock
push
lea
test
mov
pushf
dec
add
mov
call
mov
sbb
push
mov
int
mov
and
add
pop
mov
test
jne
push
pop
ret
call
or
test
or
jbe
inc
shr
sub
dec
(bad)
in
movs
and
js
data16
push
sub
add
std
push
jg
stc
jno
mov
adc
imul
popf
push
pushf
adc
dec
mov
cmp
pop
stos
fadd
mov
and
jne
dec
or
sbb
cmp
inc
test
mov
cmp
cdq
imul
ret
or
jb
jp
dec
xor
jne
xor
gs
pop
push
scas
sbb
push
mov
mov
mov
xor
push
lock
cmp
mov
fbld
loop
repnz
xor
push
and
pop
mov
xchg
imul
(bad)
xchg
cmp
lock
fsub
jnp
int3
sbb
xchg
jecxz
pop
xor
dec
or
dec
xchg
loop
cmps
int3
add
call
shl
fild
imul
push
cdq
out
fist
dec
in
jle
adc
sbb
idiv
sub
shl
xchg
xchg
(bad)
cs
mov
jo
stc
in
fneni(8087
pusha
(bad)
call
aas
aaa
mov
pop
push
test
jmp
mov
pop
fldcw
adc
into
loopne
clc
inc
lods
or
xchg
mov
or
jbe
sahf
adc
mov
aad
pop
adc
test
aas
movs
frstor
or
ins
mov
pop
fidiv
pop
or
pop
push
inc
leave
js
push
dec
hlt
aam
daa
popa
in
shl
out
push
xor
sub
or
dec
call
out
pop
mov
inc
add
inc
out
int
mov
lea
xchg
inc
sbb
inc
pop
lock
jl
in
jl
dec
push
dec
ins
mov
sub
nop
jns
lahf
push
into
mov
jecxz
stc
xor
push
add
in
dec
out
inc
adc
mov
stos
xchg
mov
fcom
sbb
(bad)
out
jge
add
cld
push
cli
xor
into
pusha
jmp
inc
push
push
call
test
mov
stc
inc
xchg
aam
xor
clc
mov
iret
add
push
sub
icebp
es
push
in
and
sbb
pop
loope
cs
sbb
mov
add
jo
popf
movs
pop
loopne
xchg
jne
enter
dec
stos
inc
cli
lock
rcr
mov
clc
and
stos
xor
outs
(bad)
jmp
popf
cs
lds
mov
mov
(bad)
in
mov
jecxz
adc
ins
jmp
scas
dec
adc
add
push
fisttp
cmp
ror
sub
fs
mov
mov
ja
and
xchg
sahf
xor
pop
push
sbb
scas
dec
inc
xchg
xchg
add
adc
sub
aad
scas
ret
or
pop
lods
cmp
jecxz
adc
and
fstp
aaa
push
adc
cmp
clc
out
xchg
cmp
je
stc
mov
js
lock
adc
jmp
into
outs
stc
rcl
cwde
retf
and
xor
shl
mov
sar
pop
or
push
ss
or
in
cmps
mov
and
not
sahf
nop
es
xchg
mov
jecxz
sub
sbb
stos
mov
aad
lock
jae
inc
mov
xor
add
pushf
push
test
jns
stos
inc
mov
pop
adc
hlt
adc
push
adc
stos
jge
mov
cld
sub
fisttp
dec
mov
jae
sub
(bad)
std
movs
rcr
adc
jo
jmp
call
adc
in
repz
and
rol
cld
inc
js
add
mov
pop
xchg
pop
sub
retf
jno
int3
clc
xor
shl
cwde
rcr
cmp
sbb
push
push
dec
aam
ja
cmp
dec
or
mov
push
cld
cmp
or
imul
setl
fs
(bad)
pop
dec
or
popf
cs
arpl
pop
out
sub
or
test
aas
inc
sbb
push
ja
repnz
clc
in
fdiv
lea
adc
push
fadd
or
inc
call
xchg
push
fidivr
xor
cmp
inc
gs
xor
jle
sub
pop
or
(bad)
test
mov
cs
mov
pop
jo
loopne
in
popa
in
out
sbb
outs
loope
clc
leave
les
dec
inc
inc
jae
mov
cmp
arpl
lods
fst
jno
mov
jecxz
inc
sbb
xchg
fsub
mov
cli
mov
dec
fst
adc
xor
or
jns
jnp
mov
lea
adc
sbb
adc
xchg
pop
jae
loop
out
and
pop
jmp
inc
and
inc
ret
push
enter
mov
sub
pusha
fdiv
iret
push
mov
icebp
fwait
push
push
mul
pop
in
mov
lahf
dec
retf
es
shl
pop
mov
lods
or
mov
add
out
mov
dec
sub
xchg
pop
stos
out
lock
and
dec
dec
(bad)
loopne
pushf
mov
cmp
cmp
ret
push
sbb
or
cmp
sbb
push
xchg
ret
out
outs
and
emms
int3
ret
or
popf
imul
xor
pop
push
xchg
cwde
cmp
mov
dec
cmps
xchg
inc
push
mov
mov
mov
pop
jmp
jmp
icebp
cli
cmp
ss
mov
stos
or
(bad)
stos
xor
mov
adc
stos
sbb
jle
into
test
push
sub
stos
cmp
add
retf
xor
push
nop
retf
cli
xchg
outs
into
pop
cmp
stos
pop
jns
cmps
fwait
xchg
nop
repnz
gs
inc
js
dec
imul
movs
into
adc
or
mov
es
mov
aad
test
inc
bound
rol
mov
cmc
and
outs
ins
arpl
ret
lahf
fnstcw
ins
push
clc
dec
je
cmp
mov
scas
popa
clc
and
repz
jnp
fisub
lods
fidivr
sbb
mov
dec
shr
mov
mov
mov
shl
dec
inc
sbb
sbb
cmc
sti
xor
jmp
aad
push
sub
imul
ins
aaa
dec
and
cmp
dec
in
scas
out
daa
(bad)
rcl
mov
(bad)
imul
mov
pop
jns
or
and
xlat
(bad)
arpl
sbb
loopne
mov
cld
pop
mov
lahf
mov
lahf
jmp
jge
mov
and
sub
clc
in
mov
pusha
push
sbb
and
out
in
xchg
stc
jmp
(bad)
outs
and
cmp
xor
push
dec
mov
inc
shr
sub
xor
leave
js
sbb
xor
in
inc
inc
rcr
or
cmp
ret
sub
mov
xchg
fimul
mov
mov
mov
lods
xor
out
aad
sub
out
lock
cmc
add
xlat
loope
mov
mul
and
push
jae
or
or
aaa
in
das
jle
add
mov
out
rcr
mov
inc
stc
fstp
jo
jo
je
ror
div
jo
aaa
jg
out
aam
iret
inc
retf
sub
sti
adc
mov
push
out
cmc
push
(bad)
das
lds
js
pop
repnz
mov
mov
arpl
adc
or
fbld
loop
dec
pop
stc
mov
into
push
xchg
adc
push
sub
lods
inc
push
xchg
sub
fimul
jmp
mov
and
(bad)
out
mov
loopne
ds
in
mov
jle
jecxz
mov
xchg
ror
loopne
aaa
imul
push
or
or
mov
fidiv
mov
out
xchg
mov
adc
mov
sub
stc
xchg
hlt
fwait
push
inc
shl
inc
ret
bound
in
mov
mov
fisttp
mov
push
dec
pop
inc
adc
mov
push
push
mov
lds
push
loope
push
or
dec
add
(bad)
jo
mov
adc
sti
mov
ror
in
cmps
jb
neg
(bad)
stos
sbb
cmps
xchg
xor
dec
loope
lahf
in
and
les
adc
popa
cli
arpl
mov
ficom
sbb
pop
mov
out
push
nop
fs
(bad)
jg
inc
sar
pop
gs
push
frstor
push
in
scas
push
dec
fwait
sbb
pusha
mov
jmp
test
iret
xchg
and
adc
or
mov
inc
int
hlt
cwde
mov
dec
bound
pop
pop
sub
test
cld
jp
out
int3
aad
(bad)
cmp
lahf
lahf
add
js
jp
retf
aam
test
jmp
das
xor
adc
mov
out
mov
inc
cli
retf
pop
das
jmp
cdq
outs
cmp
push
call
stc
nop
push
ins
into
rol
inc
and
outs
retf
dec
mov
mov
jmp
xchg
or
mov
push
sbb
es
ds
out
rep
test
mov
adc
xor
sbb
dec
out
cmps
rcl
xor
(bad)
ins
pop
outs
lods
je
arpl
ret
or
sar
mov
xchg
loope
xor
xor
jmp
lods
cmp
xchg
jp
sbb
adc
sbb
inc
daa
add
aam
add
stos
xor
sar
es
gs
push
push
add
fwait
out
outs
jb
es
cmp
mov
adc
jb
sbb
int
js
mov
sbb
adc
sub
lahf
sbb
ret
out
lods
hlt
mov
xchg
pop
jbe
ds
xchg
inc
jle
xor
addr16
push
pop
and
or
adc
loop
inc
adc
sub
jle
fild
mov
stos
and
sub
dec
(bad)
outs
inc
inc
xor
push
scas
dec
pop
je
pop
lods
cmp
in
push
sub
xor
mov
scas
dec
sbb
push
movs
cmc
shl
xlat
push
das
(bad)
out
in
xchg
xor
add
adc
or
push
jmp
ror
cmc
or
sti
imul
sar
jbe
popa
mov
mov
xor
daa
jle
jle
out
sbb
xor
add
repz
mov
mov
mov
xor
stos
and
push
jl
icebp
push
cwde
test
push
(bad)
push
xchg
sbb
call
adc
leave
or
push
mov
retf
lods
test
add
push
adc
nop
int3
imul
int3
aam
sbb
xor
and
leave
inc
or
pop
cmc
xchg
sub
mov
stos
inc
sub
push
ficom
sar
mov
loope
pusha
or
dec
in
rcl
xor
dec
mov
iret
jg
mov
jno
dec
and
push
mov
es
mov
xchg
dec
movs
mov
cmp
clc
sub
fwait
dec
add
push
cmp
push
add
fcom
in
xchg
xchg
fs
xchg
addr16
test
fild
out
and
stos
js
sub
std
out
mov
cmp
movs
jle
or
xlat
mov
int
(bad)
scas
add
inc
adc
loope
xlat
test
(bad)
iret
adc
inc
jbe
fwait
mov
stos
push
daa
jecxz
sub
hlt
sbb
xchg
lea
and
stos
stc
call
ror
lahf
sahf
mov
fidivr
ror
sti
xchg
dec
getsec
inc
pushf
jp
pop
jmp
mov
add
mul
mov
lock
out
dec
push
add
xchg
(bad)
sbb
jmp
pushf
xchg
enter
sub
dec
xchg
fld
call
out
stos
inc
(bad)
mov
mov
cdq
xlat
jns
sub
jp
adc
jge
in
fs
xchg
jmp
mov
iret
dec
(bad)
dec
sub
int3
push
data16
fnstsw
add
sbb
arpl
sti
push
(bad)
(bad)
fisubr
clc
mov
push
leave
jmp
popf
pop
inc
push
mov
arpl
iret
xchg
stos
and
xor
xor
daa
and
jns
bound
adc
adc
neg
call
jo
mov
int3
mov
ret
pop
ret
mov
sbb
ficom
inc
mov
add
cwde
ss
mov
pusha
fist
jl
pop
adc
ins
daa
sar
add
ss
sbb
push
or
adc
mov
outs
pusha
inc
test
inc
fwait
inc
mov
(bad)
xor
xor
lahf
stc
test
cmp
add
mul
pop
lods
retf
adc
mov
xchg
push
aaa
imul
mov
mov
out
xor
enter
push
jmp
mov
mov
fcomp
inc
aaa
inc
and
jmp
fsub
les
xchg
dec
jbe
adc
sub
cmp
(bad)
xchg
pusha
and
jmp
sbb
lahf
test
rcr
mul
leave
lods
out
fwait
jge
push
xchg
test
sub
jo
or
jmp
call
ror
jecxz
lock
add
push
xor
mov
lds
fdivr
sti
ja
xchg
xor
pop
retf
mov
xchg
pop
push
mov
popf
sub
lea
in
sbb
test
and
in
jb
test
cmc
imul
lds
setne
adc
add
fild
sub
xchg
mov
push
loop
or
dec
lods
sti
pop
sub
fsub
je
je
cmp
xchg
shr
jmp
pop
out
inc
mov
pop
xor
sbb
fisttp
cwde
imul
retf
int
movs
fild
cmp
mov
loop
or
pop
bound
pop
out
pop
imul
ins
pop
add
dec
push
xor
or
out
in
(bad)
jo
jne
and
ds
push
and
sbb
scas
into
adc
sub
pop
in
test
div
mov
out
das
adc
cld
push
movs
outs
ss
xor
inc
adc
xor
dec
jmp
loope
mov
push
jmp
mov
inc
adc
repnz
add
mov
xchg
mov
xchg
mov
outs
jnp
add
ins
mov
mov
gs
inc
cmp
dec
scas
(bad)
pusha
pop
lock
mov
add
in
inc
dec
xchg
push
mov
gs
fwait
or
rol
daa
push
(bad)
and
sbb
mov
fild
sahf
sbb
adc
mov
jmp
or
mov
xchg
pop
aas
es
in
outs
popf
scas
cmp
cmp
jno
jns
ins
int3
adc
and
outs
mov
sahf
(bad)
jo
add
inc
imul
xor
mov
or
xchg
neg
cmp
rcl
or
outs
rol
dec
xchg
sub
jecxz
repz
dec
or
int3
in
inc
loopne
dec
pop
jge
loop
adc
jbe
ds
jle
and
lods
popa
scas
push
pop
dec
test
add
idiv
push
cmp
(bad)
cmp
cmp
(bad)
sbb
adc
ror
cmp
mov
mov
push
mov
mov
push
es
ja
rcl
jno
int
test
retf
aas
in
jmp
xor
xchg
test
ret
aad
ds
adc
xchg
jbe
imul
fcomi
mov
arpl
mov
mov
dec
das
jmp
test
adc
ins
retf
(bad)
into
mov
cmp
add
mov
mov
cmp
mov
adc
mov
test
retf
(bad)
dec
ins
aas
sbb
das
dec
lods
and
(bad)
arpl
add
sar
imul
repnz
cmovne
sub
jecxz
dec
jecxz
scas
(bad)
loopne
iret
loop
test
mov
fild
es
pop
rcl
ins
sbb
push
jne
sub
dec
cmps
xor
pop
dec
ret
lods
pop
out
shl
cmp
(bad)
xor
mov
inc
cdq
cwde
or
add
jge
mov
xchg
adc
and
xchg
pop
xchg
cmp
add
jl
pop
mov
xor
and
fmul
jne
mov
push
stos
push
mov
mov
sub
push
inc
inc
rcr
icebp
pop
cmp
add
std
push
(bad)
xor
push
retf
inc
lods
mov
xor
loopne
mov
jnp
stc
ret
push
push
pop
test
add
stos
xor
(bad)
shl
add
shl
jnp
ds
push
imul
xchg
shl
scas
sbb
sub
pop
ins
xlat
lds
or
das
inc
int3
lahf
adc
sub
mov
hlt
cmp
cmp
xor
std
mov
enter
test
mov
push
dec
int3
mov
cmp
out
mov
jo
(bad)
loope
sub
fs
stos
jo
cs
dec
dec
fdivr
inc
les
neg
mov
pop
inc
add
aad
sbb
xchg
test
rcr
pop
retf
push
xchg
pushf
aam
jo
es
scas
dec
lods
xchg
enter
cmp
push
std
push
push
popa
mov
inc
jecxz
(bad)
inc
addr16
xchg
or
pop
cmp
stc
xchg
pusha
or
mov
push
std
mov
cld
test
mov
pop
dec
add
xchg
jno
add
or
xor
sub
enter
push
jno
test
test
lahf
fnstcw
dec
jp
gs
(bad)
pop
mov
popa
scas
jp
pop
and
jb
add
jg
hlt
stc
adc
dec
jmp
or
jp
shr
mov
inc
test
popf
mov
sahf
mov
movs
cs
stos
pop
fisttp
cmp
inc
aaa
stos
lock
mov
xchg
xlat
inc
imul
imul
(bad)
ja
xchg
xchg
or
aad
pop
adc
stos
jmp
push
sar
add
push
xor
loop
mov
dec
daa
push
xor
or
lea
push
repz
ss
(bad)
dec
adc
out
ss
or
sub
cwde
dec
inc
loop
adc
pop
shl
pop
movs
ds
inc
jo
or
pop
js
and
outs
test
outs
or
outs
imul
jae
ficomp
mov
pop
jnp
sbb
jae
sbb
push
rcl
cmp
stos
sbb
push
retf
shr
retf
pop
(bad)
out
arpl
std
dec
(bad)
adc
popf
cmc
mov
push
xchg
fstp
jns
xchg
in
je
pop
je
push
pop
inc
pop
hlt
retf
sbb
retf
(bad)
cli
movs
rcl
and
push
jmp
sub
jle
enter
jge
sbb
daa
gs
aam
aam
cmp
(bad)
pushf
jns
add
ret
or
call
inc
cld
add
jns
lock
mov
jmp
in
(bad)
(bad)
aam
out
cmp
mov
pop
adc
test
ins
or
out
ret
cmp
icebp
add
push
or
pop
test
fldenv
mov
ja
addr16
cmp
mov
loopne
push
mov
pop
(bad)
test
sub
mov
inc
imul
ja
mov
sbb
(bad)
sti
(bad)
jmp
int
sub
cld
inc
jmp
cmp
adc
xchg
sbb
outs
stos
scas
mov
jmp
data16
icebp
cmp
aas
or
movs
mov
jmp
bound
mov
adc
icebp
pop
jmp
and
and
scas
xchg
sub
and
mov
cdq
xor
add
push
and
and
fwait
pop
lahf
lock
outs
mov
ss
dec
ins
sub
das
mov
scas
into
mov
jmp
or
sub
mov
stos
cli
mov
mov
imul
cmps
out
and
and
push
add
mov
xor
sbb
inc
ror
push
sub
imul
mov
ins
in
or
adc
gs
push
adc
jl
dec
leave
cmc
xchg
mov
adc
(bad)
adc
fs
rol
pop
jb
les
pop
call
aam
sti
sbb
xchg
inc
xchg
lds
mov
(bad)
sbb
ret
sar
xchg
xor
aas
mov
mov
jle
in
or
add
adc
sbb
lea
bndstx
test
and
shl
add
fst
pop
xchg
inc
mov
and
fwait
inc
push
movs
dec
test
cs
sub
repz
outs
cmp
test
push
xchg
jp
adc
xchg
sbb
out
inc
dec
lock
mov
jne
inc
mov
jmp
ret
xor
leave
stos
loopne
push
ret
adc
jle
and
add
imul
test
sbb
clc
nop
shl
fwait
sahf
test
fidiv
jnp
cmp
jle
popf
cli
(bad)
imul
loop
lods
xlat
scas
fwait
mov
mov
dec
push
leave
repz
imul
ror
and
daa
jne
push
nop
fdivr
jb
xchg
sub
movs
pop
dec
or
and
lahf
in
xchg
jle
pop
mov
sbb
mov
les
adc
imul
outs
adc
xor
mov
int
xor
and
add
imul
into
(bad)
enter
inc
mov
stos
jecxz
add
mov
pop
push
retf
adc
aas
add
mov
jb
push
or
dec
dec
cmc
test
ret
dec
jp
repz
fdiv
bnd
retf
jmp
add
pop
mov
(bad)
in
js
aas
push
push
xchg
and
jmp
or
stos
call
sbb
mov
int
rcl
call
xor
mov
inc
push
idiv
ins
dec
push
loope
mov
push
sub
sahf
mov
imul
jno
lock
das
arpl
adc
mov
(bad)
sahf
sub
add
mov
xor
dec
sahf
push
jne
add
pop
sub
cdq
adc
(bad)
sti
ror
shl
inc
test
and
mov
mov
ds
xor
std
retf
jno
jb
sub
pop
je
(bad)
int
sbb
dec
jno
cwde
dec
mov
fwait
mov
stos
es
fisttp
sbb
int
add
div
sahf
dec
outs
aas
aaa
pop
push
ds
jle
mov
out
cmps
adc
jp
pusha
xchg
and
(bad)
js
repnz
mov
sbb
adc
and
sbb
cmovbe
xor
dec
packsswb
adc
pop
jl
xchg
arpl
jno
sbb
out
push
(bad)
mov
leave
jbe
sahf
fwait
stos
push
rcr
inc
ror
dec
mov
scas
in
mov
xchg
or
das
pop
out
sub
push
lods
add
out
clc
sub
les
xchg
out
dec
xchg
add
dec
mov
das
stos
fiadd
je
pusha
cmp
and
cli
push
cmp
fist
sub
test
inc
lods
xor
out
lock
aad
mov
xchg
std
jmp
adc
dec
mov
mov
bound
xchg
into
adc
xchg
into
ja
and
sbb
mov
pop
sub
jne
mov
ss
sub
lock
aam
inc
aam
fwait
push
fisttp
(bad)
loope
or
sbb
pop
sbb
call
ds
ins
jo
in
xchg
pop
mov
and
sbb
push
mov
jb
jbe
pop
int3
dec
sub
and
xchg
adc
fwait
(bad)
loop
push
jnp
jns
jle
or
push
jp
inc
cld
les
cld
cli
sbb
shr
adc
inc
rcl
mov
xchg
xchg
pop
dec
cmp
and
xlat
or
xor
xchg
dec
inc
(bad)
aam
xor
in
test
mov
mov
sti
and
cdq
cwde
jle
fbstp
vmwrite
xchg
mov
pop
mov
push
in
outs
ins
mov
add
push
daa
push
jg
cs
add
sti
xor
int
cmp
sbb
test
xchg
nop
and
cmp
adc
adc
(bad)
pop
inc
ror
mov
mov
clc
popf
(bad)
neg
(bad)
aaa
mov
add
in
pop
shl
popa
dec
inc
ss
mov
or
sub
in
dec
jle
inc
sbb
mov
mul
push
inc
repnz
cmp
arpl
xor
sahf
sub
out
shl
jmp
cmps
pop
jg
dec
add
in
inc
out
sub
add
dec
clc
out
loope
iret
push
jl
aam
(bad)
jmp
adc
jns
rcr
mov
popf
jns
in
adc
sahf
inc
stos
xchg
push
mov
in
movs
ins
push
seta
inc
cmc
push
ficom
push
fsubr
not
aad
lock
ret
cmp
in
cmp
sub
mov
icebp
or
mov
repz
adc
pusha
jae
movs
push
sahf
mov
pop
pop
daa
push
cld
push
in
sbb
push
lods
lock
test
gs
inc
jnp
popf
sub
shrd
mov
mov
test
pop
ins
lods
inc
and
xor
xor
mov
movs
bound
cld
xchg
sbb
mov
jne
cmps
(bad)
fdivr
test
jb
(bad)
mov
(bad)
cld
pop
cs
cmc
std
mov
adc
iret
stc
cmps
stc
mov
into
jns
mov
jb
ror
shl
mov
iret
test
mov
fstp
sub
jno
iret
popf
xchg
inc
das
aam
dec
add
(bad)
sar
(bad)
mov
cmp
sub
dec
xchg
push
out
std
cwde
pushf
cmps
pop
shl
popf
push
out
in
sar
inc
sbb
adc
lock
addr16
sbb
dec
jo
or
sbb
fcmovnb
call
in
jmp
test
(bad)
jb
sahf
mov
mov
aam
mov
xchg
or
xchg
pop
gs
mov
adc
push
loope
jmp
pop
test
(bad)
and
fcomp
iret
fsubr
sbb
sbb
jg
call
lds
pop
push
leave
inc
es
out
call
push
and
sub
or
fs
fdivr
xlat
jg
dec
dec
outs
gs
popa
xor
adc
mov
js
test
mov
adc
xchg
lahf
fld
xor
cmp
movs
ror
adc
pop
jl
inc
add
sbb
mov
push
mov
push
sbb
fs
call
xor
cmc
pop
sbb
pop
xor
fnstcw
hlt
cmc
(bad)
lods
xor
aad
add
imul
sub
addr16
add
pop
fld
fucomp
mov
dec
xchg
shl
ficomp
mov
std
movs
cwde
popa
sub
cmps
jg
inc
jbe
mov
add
div
retf
popf
mov
mov
jns
popf
jg
jns
out
daa
shl
pushf
inc
sbb
dec
pop
mov
repnz
(bad)
shl
xlat
inc
pop
mov
xor
push
jg
xchg
inc
lock
mov
xchg
test
ja
(bad)
cmp
jb
push
sbb
xchg
cmp
test
xor
test
xchg
inc
call
addr16
out
jmp
out
cld
loopne
aam
ins
push
rcl
add
fimul
mov
pusha
(bad)
adc
fucom
js
dec
(bad)
jmp
push
ja
mov
inc
(bad)
out
mov
push
jge
mov
or
clc
dec
dec
push
out
push
pusha
dec
test
call
mov
mov
mov
sbb
div
xor
enter
gs
pop
dec
inc
xchg
xlat
jnp
add
aam
mov
ds
shl
inc
adc
je
mov
sub
jb
aad
sub
cmp
pop
stos
inc
add
xchg
pushf
or
inc
jmp
adc
ficom
mov
or
inc
popa
mov
push
jbe
mov
cmp
shld
cld
xor
imul
stos
sbb
int3
mov
mov
mov
popa
dec
int
xor
daa
(bad)
sub
xchg
test
xchg
inc
cmp
int3
add
inc
std
push
out
cmp
jae
add
jbe
adc
adc
mov
jg
in
rep
xchg
lahf
push
mov
dec
mov
arpl
xlat
pop
ins
in
mov
inc
cmps
xchg
adc
fdiv
pop
jl
fwait
(bad)
sub
loop
push
mov
mov
mov
idiv
push
fld
jno
add
mov
jo
hlt
loope
iret
or
jmp
test
mov
out
and
pop
mov
xchg
aad
jmp
push
stos
outs
pop
in
test
adc
inc
xchg
stc
dec
ins
pop
popa
rol
int
sar
out
les
ds
aas
jp
sbb
sub
adc
pusha
ins
test
sbb
mov
push
js
mov
je
fisttp
fwait
fwait
mov
xor
mov
and
jg
cdq
cmp
fld
leave
imul
dec
mov
clc
add
jl
add
inc
cmp
popa
mov
popa
test
pusha
mov
inc
mov
fisttp
pusha
push
add
or
mov
jo
pop
std
fld
mov
outs
sub
pop
ds
pusha
add
mov
loopne
outs
pop
es
or
sar
dec
jnp
mov
pop
jg
cmp
aad
mov
paddb
enter
popf
test
jg
lds
mov
mov
mov
pop
xor
xchg
xchg
adc
dec
mov
(bad)
mov
lea
stos
adc
pop
cmps
cmc
mov
mov
sub
fdivr
(bad)
(bad)
mov
mov
scas
sar
mov
arpl
push
in
lahf
push
lods
jb
xor
ret
ins
and
mov
mov
data16
sti
pusha
rcl
and
inc
add
push
sbb
fstp
pushf
fs
jmp
retf
and
or
xor
adc
aam
fstp
ja
ds
arpl
lods
mov
shl
lahf
mov
aaa
sbb
mov
pop
scas
xor
mov
hlt
fdiv
ds
cmp
mov
mov
xor
rcl
pop
xor
push
xchg
aaa
scas
or
cmp
jl
fst
jb
int3
cs
dec
stc
push
pop
mov
push
clc
jge
fisttp
pop
fimul
adc
clc
dec
ss
mov
adc
and
neg
and
mov
inc
aam
mov
inc
loope
cmp
add
mov
xchg
push
fild
cmp
push
call
mov
inc
xor
and
mul
stc
inc
pop
(bad)
dec
rcr
fs
loope
sub
and
mov
xchg
push
repz
sar
xchg
imul
jmp
mov
and
aam
and
jge
outs
fistp
popf
add
lock
cmps
and
or
add
xor
call
sub
data16
mov
popf
and
adc
fldcw
mov
push
and
shl
mov
sbb
xchg
pusha
(bad)
mov
aam
xchg
sbb
push
call
dec
ds
and
adc
xchg
mov
enter
or
and
int
pop
(bad)
in
sbb
leave
sub
pop
jbe
rcr
loopne
mov
ficom
push
jne
sub
test
test
dec
popa
cmps
xchg
sar
ror
out
outs
and
push
xor
ja
popa
inc
pop
aam
mov
(bad)
mov
adc
jbe
cmps
cmp
cld
icebp
cwde
in
lds
mov
and
xor
call
jp
retf
push
loop
cli
xor
adc
xchg
mov
jbe
(bad)
push
inc
pop
adc
inc
xchg
push
out
cwde
call
cdq
aas
push
sbb
jae
or
cmps
add
out
sub
dec
cmp
loopne
add
dec
mov
add
lock
jne
xchg
fnstcw
cmp
addr16
mov
xchg
nop
nop
or
inc
(bad)
pop
call
jno
pop
push
jle
xchg
xchg
or
jg
idiv
xor
cmp
int3
push
sbb
dec
mov
call
dec
pop
xor
mov
sub
popf
mov
jbe
add
cmc
cmp
sbb
icebp
push
sub
pop
mov
mov
sbb
xchg
dec
xchg
loope
dec
outs
sub
dec
xchg
imul
xor
jg
jl
cmp
pushf
sbb
imul
into
clc
xor
inc
adc
adc
retf
cld
mov
mov
pop
pop
in
jg
movs
into
mov
xchg
js
rcr
fcom
push
or
sub
mul
mov
mov
ret
rcl
fist
enter
pushf
adc
push
mov
dec
push
fucomip
call
jp
sub
in
sub
out
adc
imul
inc
xchg
jns
dec
sbb
sti
cwde
jmp
sbb
and
mov
adc
cmp
push
xor
dec
mov
mov
leave
push
mov
add
inc
add
xor
sub
push
dec
pop
jge
repnz
jae
mov
mov
xchg
outs
jecxz
mov
movs
ret
pop
sbb
push
push
push
fist
pop
addr16
mul
je
xor
mov
(bad)
cmps
push
mov
pop
inc
xor
fs
mov
dec
dec
lods
and
shr
sahf
inc
adc
je
add
aad
lock
mov
sub
ret
lahf
adc
mov
jae
aaa
not
out
xchg
cmps
sub
enter
rcr
pop
das
mov
xor
mov
sub
inc
lock
adc
jae
jne
mov
es
inc
add
and
outs
mov
xchg
dec
cmp
out
and
fist
push
repnz
push
dec
jp
jl
mov
inc
and
shl
or
loope
sub
xchg
sti
xor
std
es
mov
fnstcw
mov
mov
fild
call
cmp
and
out
jecxz
pop
out
lods
lds
cmc
mov
and
jne
inc
push
xor
jne
inc
add
(bad)
add
aaa
push
not
jmp
inc
sar
enter
push
sbb
push
push
mov
xor
mov
sbb
cld
push
jmp
mov
cmps
push
xchg
mov
retf
ficom
mov
or
push
mov
xchg
jo
jle
push
jmp
test
lahf
retf
ret
mov
arpl
pop
mov
test
lds
pushf
mov
jne
(bad)
jno
xchg
mov
pop
add
sbb
mov
sub
sbb
mov
test
data16
push
and
out
leave
dec
push
jbe
std
retf
sahf
hlt
ins
lahf
push
dec
out
mov
(bad)
and
or
mov
and
outs
in
in
sbb
retf
into
jb
mov
inc
neg
jno
jbe
stos
fdiv
cmp
mov
xor
jo
les
ss
aam
add
jp
fidivr
ins
or
and
jmp
outs
lds
cwde
pop
sub
mov
fisttp
jb
stos
dec
cwde
(bad)
leave
arpl
dec
sub
rcr
aaa
xor
movs
adc
push
mov
popa
mov
repz
outs
in
hlt
jae
es
popf
jns
or
xchg
movs
data16
popa
ficomp
sbb
fbstp
cli
das
shl
(bad)
mov
inc
retf
outs
cmp
xlat
jmp
mov
(bad)
cmp
mov
scas
mov
(bad)
dec
nop
push
jne
mov
mov
loope
in
pop
cmp
jno
mov
dec
inc
fldcw
push
inc
push
and
fmul
push
dec
jno
push
cmp
test
mov
sbb
or
xchg
jmp
push
sbb
dec
sbb
cmp
xchg
mov
sub
or
xor
clc
or
mov
pop
int
sti
mov
mov
in
add
test
add
mov
mov
cli
jg
fdivrp
stos
lods
cmps
es
jge
push
in
hlt
dec
bound
pop
xchg
or
pop
xchg
push
and
adc
jo
fucomi
fs
out
and
pop
mov
inc
push
jmp
out
arpl
scas
inc
aaa
xor
inc
out
aaa
cmp
cld
push
inc
data16
sub
or
cwde
nop
adc
fimul
sti
and
dec
cmps
mov
cld
or
lods
xchg
xor
cmp
dec
push
repnz
adc
adc
cwd
pop
retf
adc
out
and
mov
or
sub
mov
pop
popf
test
cmc
push
inc
in
in
sbb
cmp
lock
sub
push
jns
outs
int
xor
add
aad
sti
cld
mov
cmp
mov
push
lods
mov
push
movs
adc
add
das
inc
inc
or
js
or
mov
ret
add
dec
sbb
pop
dec
pop
mov
inc
aad
cmp
jmp
pusha
movs
repz
idiv
retf
sahf
jge
sub
mov
icebp
popf
xor
cld
cmp
icebp
ds
fiadd
(bad)
jo
jae
xchg
bnd
jnp
jae
sub
loopne
jmp
arpl
push
pop
add
adc
stos
xchg
out
cmp
pop
imul
mov
sti
add
neg
mov
xor
push
movs
jge
or
fsub
mov
sbb
push
sbb
sub
cmc
outs
fild
sbb
in
xchg
loop
retf
pop
mov
jne
add
xor
push
fisubr
sbb
js
jg
pop
(bad)
sti
mov
loope
push
cld
popa
pop
xchg
mov
sub
dec
addr16
ret
mov
push
adc
das
pop
nop
adc
shl
call
pop
popf
sub
and
cmp
(bad)
(bad)
inc
fwait
cmp
out
push
pusha
push
iret
mov
daa
jno
daa
push
mov
and
xlat
les
js
dec
dec
mov
shr
cmp
shl
cmps
imul
push
pusha
mov
sub
cmp
cmp
xor
push
pusha
gs
jmp
add
ret
fcmovb
repnz
pop
fucomp
aas
xor
rcl
je
int3
rol
inc
adc
sub
mov
adc
movs
push
xor
loope
inc
xor
jmp
ss
test
mov
sbb
loopne
mov
sub
and
test
jl
stos
inc
test
mov
push
push
fsubr
push
jl
sub
and
fdiv
mov
pop
push
xor
xchg
and
retf
stos
add
inc
es
lods
aam
fadd
div
lahf
fild
aaa
pop
jns
add
ins
or
(bad)
outs
call
stc
stc
dec
dec
outs
jle
pop
sar
adc
lods
sub
ret
popf
dec
and
mov
lahf
jle
jns
aaa
push
sbb
or
clc
sub
lds
push
sub
lods
cld
xchg
xchg
push
push
cwde
and
lock
addr16
imul
fs
mov
mov
rcr
xor
mov
es
fimul
je
sbb
jnp
xor
dec
inc
xchg
adc
jmp
xor
lods
jne
and
cmp
bound
adc
sub
jmp
into
mov
sub
mov
or
stos
sub
mov
pop
shl
push
sahf
push
and
dec
stos
or
cmp
adc
sub
cli
je
fisttp
mov
jg
push
and
pop
or
rcl
xchg
outs
lods
jo
xchg
fisub
jne
lahf
(bad)
mov
(bad)
lea
jo
xchg
adc
mov
mov
adc
sub
mov
lods
dec
inc
push
push
xchg
jle
jmp
(bad)
dec
xlat
pop
pop
shl
sub
mov
push
and
mov
push
test
push
fwait
cmps
daa
dec
and
test
dec
dec
or
inc
xchg
test
test
xchg
mov
fldcw
mov
bound
dec
arpl
sahf
adc
and
jg
ficomp
dec
loope
mov
mov
inc
div
aaa
mov
xchg
test
nop
push
imul
movs
iret
call
cmp
jg
out
pop
jl
pop
mov
scas
mov
stc
push
ficomp
xchg
stc
aas
pop
or
mov
leave
stc
or
adc
test
or
mov
inc
mov
jecxz
mov
xchg
in
in
lods
or
in
add
fld
out
xchg
sub
mov
push
ins
add
lahf
les
sub
test
(bad)
ffree
mov
jmp
adc
or
ins
das
bound
sub
inc
sahf
dec
(bad)
enter
popa
jo
jno
add
cmc
jp
scas
aas
call
push
add
dec
dec
rcr
bound
add
push
push
push
xchg
sub
aad
aad
cmc
pop
sub
push
lods
sub
mov
cs
jl
ja
xacquire
aaa
push
cdq
hlt
and
or
xchg
fdivr
outs
sar
xchg
jno
in
inc
(bad)
sbb
hlt
loope
sbb
cli
into
popa
clc
ror
adc
cmps
rcl
leave
imul
outs
aas
jl
mov
mov
shr
neg
scas
clc
(bad)
(bad)
mov
sbb
xchg
xchg
mov
pop
daa
cdq
adc
stc
adc
xchg
fsub
add
xchg
mov
xchg
jmp
xlat
hlt
div
(bad)
xchg
test
loope
sbb
mov
mov
xchg
mov
mov
int
outs
push
repz
mov
fstp
imul
add
mov
mov
and
xor
push
nop
mov
xchg
cmp
popf
add
cmp
or
mov
in
xor
xchg
inc
nop
lea
xor
aam
shl
mov
sub
mov
lods
outs
push
push
fmul
fbld
jmp
push
idiv
jae
(bad)
lock
std
xor
rol
and
cmp
lds
(bad)
jl
xlat
mov
gs
ss
frndint
push
xchg
mov
jmp
loop
outs
cmp
leave
xchg
iret
mov
dec
inc
inc
fisubr
mov
ror
and
syscall
nop
mov
fimul
push
scas
pop
fwait
out
lock
(bad)
sti
sub
or
push
mov
mov
movs
xchg
cmp
jo
in
sub
push
xor
cs
pop
push
cs
inc
cmp
add
jp
and
mov
in
and
mov
aad
xchg
lock
jne
or
cmp
cmp
inc
(bad)
sub
pop
jno
mov
into
xchg
xor
std
in
test
push
mov
jo
jb
cld
(bad)
jl
imul
jno
hlt
mov
pop
pop
inc
or
adc
mov
jne
inc
fldenv
adc
loop
pop
(bad)
je
add
sub
jne
test
sub
mov
cmps
sub
jnp
cs
sbb
jg
cmp
mov
retf
fiadd
and
add
outs
gs
js
cld
pusha
cmp
(bad)
jecxz
stos
cmp
cwde
lea
imul
sub
lds
pushf
inc
xchg
inc
sbb
mov
es
lahf
xor
fldenv
icebp
mov
push
add
pop
js
inc
push
jle
sbb
xchg
mov
sbb
jae
aad
ret
sub
into
pop
mov
cmp
pop
sub
out
js
ins
sahf
ins
sub
scas
pop
pop
xchg
ret
sub
int
mov
add
leave
add
sbb
sbb
cdq
cmp
scas
cmp
cmp
mov
pop
sbb
xchg
scas
fcmovnbe
sbb
mov
xlat
xlat
movs
jge
push
xchg
imul
fstp
cmp
loopne
pop
jge
cmp
mov
sbb
ret
inc
lahf
gs
mov
js
inc
push
inc
stos
and
xor
ins
pop
out
nop
and
inc
mov
adc
std
repz
stc
out
pop
mov
push
retf
in
jne
jg
imul
scas
hlt
pop
test
pushf
inc
js
ret
stos
jno
mov
les
mov
ds
ins
mov
adc
pop
mov
or
imul
vrcpps
xchg
pop
xchg
xor
inc
not
xchg
adc
cmp
pop
xlat
out
popa
push
mov
das
cs
retf
and
xchg
inc
rcr
imul
mov
dec
dec
cli
jle
jmp
mov
ins
push
jno
arpl
jae
scas
cdq
fcom
mov
cmp
iret
mov
and
aaa
dec
in
std
int3
inc
and
adc
cld
call
push
xchg
jle
jb
les
sub
add
and
lahf
dec
sbb
xchg
retf
xchg
call
outs
lea
jmp
push
fldcw
ret
les
mov
out
xor
mov
stos
mov
add
jmp
pand
int
sti
aam
sbb
dec
dec
fs
sbb
inc
cmp
cmp
push
dec
ja
imul
(bad)
fstp
dec
push
aam
inc
mov
imul
pop
sti
add
xor
bound
cmp
xor
jmp
aam
xchg
sbb
std
test
push
mov
adc
nop
repz
pop
call
(bad)
out
stos
stc
sti
lea
ret
add
mov
jns
test
inc
mov
ret
and
or
jecxz
inc
shl
push
and
and
mov
and
push
add
push
loop
mov
or
retf
loopne
mov
or
movs
xchg
adc
retf
inc
rcl
mov
retf
mov
push
cli
ret
cli
sub
and
scas
jo
pop
enter
push
rcl
cmp
stos
sub
shl
fisttp
stos
add
outs
mov
test
sub
ret
or
bound
cmp
data16
sbb
inc
jne
and
mov
and
sub
inc
add
mov
ror
dec
xor
hlt
mov
mov
mov
and
mov
ja
jl
add
cs
pop
addr16
jge
adc
mov
arpl
pop
push
or
or
lds
inc
(bad)
sbb
sti
sbb
movs
fcomp
les
addr16
shl
in
scas
aad
xchg
mov
jmp
daa
pop
adc
std
dec
pusha
pop
addr16
and
dec
pop
cmp
mov
mov
mov
int3
out
cmp
mov
std
or
into
pop
jg
ss
stc
clc
push
jns
aaa
ds
fnstcw
leave
int3
mov
sbb
in
faddp
retf
xchg
sub
(bad)
cli
rcl
jae
stc
dec
sub
dec
les
ss
dec
aam
enter
cwde
shr
push
mov
shl
popf
jg
sub
test
sub
punpckldq
adc
sbb
push
push
js
mov
cmp
cmps
dec
jl
xor
ret
mov
and
call
push
mov
inc
dec
or
icebp
mov
push
mov
test
add
xchg
das
cmps
mov
and
xor
ins
loop
or
cmp
test
xchg
js
inc
inc
iret
pop
out
ds
pop
call
in
stos
bound
inc
adc
test
int3
adc
(bad)
data16
shl
repz
adc
pop
cmp
cmp
arpl
pop
push
adc
xchg
call
loopne
inc
dec
lock
mov
loope
fist
mov
mov
sbb
out
test
into
not
mov
inc
sbb
jmp
xchg
shl
fadd
xchg
cld
or
ret
jnp
add
scas
arpl
neg
pop
lods
sbb
leave
push
or
pop
sub
jae
adc
mov
mov
jp
xchg
xor
pop
fsubr
jge
int3
mov
mov
rcr
mov
xor
push
das
bound
mov
or
popa
cs
push
pushf
outs
leave
mov
xor
ds
(bad)
call
inc
pusha
fmulp
push
xchg
aas
shl
and
into
and
mov
aad
sbb
fwait
push
mov
(bad)
pop
add
xchg
cs
jle
into
fs
arpl
inc
cmps
and
pop
cmp
inc
add
xchg
push
out
inc
jl
inc
jbe
mov
pop
cmp
mov
sub
data16
scas
sub
mov
xor
(bad)
ds
sub
(bad)
mov
mov
jmp
xchg
inc
scas
pop
or
out
adc
pop
sbb
test
div
ds
aad
pop
not
xchg
and
dec
stos
mov
jne
(bad)
mov
jnp
sub
retf
pop
dec
aam
dec
or
mov
xor
sub
xchg
(bad)
adc
cmp
cmps
inc
out
jb
fdiv
into
push
(bad)
mov
inc
dec
fist
dec
fidivr
ss
mov
in
loope
cwde
cmp
stc
sbb
data16
mov
inc
aas
mov
scas
push
in
sbb
in
iret
mov
mov
xchg
fwait
in
add
adc
and
mov
movs
mov
pop
pop
mov
adc
sub
cli
or
inc
imul
dec
mov
and
xor
lods
cmps
xchg
add
sbb
loopne
push
jno
in
lds
adc
push
adc
inc
add
inc
shl
mov
es
pop
dec
jecxz
push
lods
not
mov
jle
jne
int3
mov
sahf
movs
ret
ret
stos
sbb
mov
mov
xor
push
or
ja
ror
cmp
into
mov
fwait
push
jecxz
je
xor
push
jl
dec
mov
xchg
pminub
push
in
out
sbb
arpl
xchg
cs
sbb
cmp
xchg
sbb
scas
lods
inc
mov
iret
add
and
jno
test
add
push
mov
mov
or
mov
out
stos
push
mov
ret
jmp
and
pop
out
jae
ins
mov
(bad)
xlat
mov
(bad)
repz
pop
mov
xchg
or
jnp
push
div
add
or
jp
jne
sub
xchg
adc
lea
sub
sti
cmp
or
retf
pop
es
inc
mov
push
or
outs
inc
mov
xor
cli
mov
xor
xor
in
pop
mov
mov
inc
push
nop
in
or
sub
inc
jbe
ss
sbb
aas
or
mov
fcom
fcmovbe
xchg
sar
cmp
stos
adc
enter
pop
xchg
nop
fwait
xchg
cmp
lock
test
adc
jo
mov
or
mov
leave
adc
adc
jp
adc
or
dec
inc
mov
into
aam
sbb
xchg
sub
dec
std
jge
jmp
sar
(bad)
push
cdq
into
pop
xchg
in
mov
clc
push
js
(bad)
aad
push
adc
int
jecxz
sbb
jge
outs
test
xor
jle
inc
adc
test
mov
lea
pushf
mov
and
xchg
je
(bad)
div
ins
hlt
push
fdivr
adc
adc
dec
sbb
aas
push
outs
jge
push
push
(bad)
fyl2xp1
hlt
mov
add
jns
pop
xor
adc
int3
inc
cli
mov
xchg
ror
in
mov
cmp
arpl
cmp
retf
retf
push
cmps
jp
mov
iret
sub
(bad)
mov
cli
sbb
lods
inc
cld
xor
iret
jp
jo
push
inc
mov
xchg
in
push
cmp
sub
out
add
adc
rcr
mov
inc
ror
jo
mov
mov
div
mov
mov
cli
push
sahf
mov
not
add
popf
(bad)
or
fld
or
sub
rol
pusha
cmp
add
sub
adc
pop
loope
addr16
test
in
push
mov
adc
sti
test
out
sbb
mul
cmp
mov
aam
sbb
(bad)
loope
jmp
mov
es
loop
mov
leave
push
sete
loope
aaa
pop
jb
pop
pop
dec
loopne
or
push
js
sbb
aaa
ins
push
shr
cmps
daa
movs
and
mov
push
dec
mov
mov
xor
add
inc
sbb
pop
mov
mov
dec
mov
out
xor
arpl
das
stc
leave
stos
jecxz
aad
jns
jmp
cmps
mov
outs
or
int3
repz
bound
aad
test
mov
ds
scas
leave
arpl
and
fidiv
fisttp
cld
cmc
xor
loop
and
xor
(bad)
sti
out
outs
into
movs
aam
iret
data16
xchg
jae
xchg
out
dec
jbe
mov
push
lahf
mov
jo
adc
push
push
cs
retf
nop
jp
movs
mov
or
fisubr
inc
jmp
cmps
into
xchg
jle
sbb
xchg
or
fwait
ins
xchg
ss
xchg
cmps
jnp
aaa
cmps
and
xor
sbb
cmp
mov
xor
mov
dec
into
dec
mov
mov
(bad)
repz
daa
daa
mov
or
dec
jle
jnp
jns
push
and
mov
iret
cld
rol
lds
fisttp
stos
dec
enter
xor
jb
arpl
not
xchg
jnp
bound
js
adc
jg
sbb
dec
cwde
mov
into
clc
stos
hlt
movmskps
and
loop
push
cli
adc
xlat
retf
fstp
and
mov
sbb
cs
pop
adc
fcom
add
cmp
fbstp
in
jp
mov
push
ja
fldcw
hlt
nop
sbb
add
nop
icebp
inc
push
ret
mov
dec
and
lock
pushf
push
mov
movs
adc
jg
mov
mov
test
pop
mov
gs
stos
imul
ret
in
mov
mov
mov
dec
dec
mov
mov
inc
sbb
fwait
adc
lea
inc
xchg
cmp
cmp
dec
cmps
lds
jnp
repnz
xchg
daa
cs
arpl
pop
ja
and
fs
cmp
dec
cmc
mov
jnp
sub
int3
dec
or
aad
leave
data16
mov
jmp
out
inc
push
retf
leave
in
aad
cmp
jmp
jl
cmps
jno
xor
or
shr
jno
not
mov
or
ss
repnz
iret
cmp
mov
scas
fsubr
aaa
pusha
outs
jl
stos
and
xchg
push
lea
call
lea
add
jmp
add
rcr
xchg
dec
sub
jecxz
mov
loopne
stos
out
mov
jmp
or
ror
mov
int
loope
xchg
pop
data16
and
adc
and
aam
push
jg
stc
cmp
push
out
push
sar
dec
xchg
(bad)
retf
test
xor
ins
fld
repz
ja
scas
xchg
call
jae
xchg
retf
adc
xchg
dec
xchg
outs
jl
jge
stos
push
fdiv
xchg
mov
scas
mov
les
mov
(bad)
imul
add
push
sub
dec
xlat
adc
repnz
pop
jl
inc
arpl
out
shl
jge
sbb
cmp
repnz
add
int
or
sub
fdivr
inc
push
adc
das
movs
cld
mov
movs
daa
push
mov
push
dec
ja
std
push
xlat
add
or
cli
rdtsc
pop
pop
dec
popa
mov
and
dec
cmp
jl
sub
out
stos
and
xor
movs
sub
movs
jno
out
push
pop
test
push
lahf
dec
pop
ja
gs
ret
or
mov
jle
xlat
jnp
hlt
jecxz
enter
scas
psubusw
xchg
sub
ins
pop
xor
fidivr
ja
push
cli
jo
lock
jge
or
test
or
loope
pusha
dec
fistp
xchg
call
retf
gs
adc
sar
je
js
not
push
or
loope
loopne
pushf
nop
cld
icebp
xchg
js
or
jecxz
adc
jbe
mov
iret
cmp
rol
and
add
bound
repz
nop
xchg
jo
cld
xchg
pushf
arpl
stos
(bad)
mov
ss
hlt
push
jbe
xor
ficom
jo
jp
jne
jne
scas
cmp
stos
fcmovnbe
xchg
rcr
cvtdq2ps
add
in
xor
aam
popa
push
cmps
sub
push
lock
loope
imul
and
and
cmps
repz
call
push
mov
test
jg
pop
or
ds
popa
idiv
mov
sub
adc
arpl
cmp
ds
push
sbb
and
retf
mov
push
pop
lods
and
inc
stos
scas
xor
rol
lock
test
test
stc
ins
inc
push
or
ins
fneni(8087
out
xor
fst
dec
in
lock
mov
xchg
hlt
inc
add
arpl
xchg
jo
mov
dec
cmps
push
pop
push
int3
iret
pushf
int3
or
aaa
jbe
push
or
into
es
xor
xchg
jo
aaa
dec
dec
pop
int3
imul
into
mov
daa
out
add
(bad)
popa
imul
and
jns
sub
mov
movs
fwait
mov
shl
shl
sbb
jns
adc
ficomp
sahf
jns
jge
repnz
out
xchg
sahf
add
mov
sbb
test
int
jns
mov
sub
jmp
inc
jmp
sub
pop
loop
test
adc
pop
in
dec
cmp
test
loop
retf
lahf
pop
adc
popa
out
pop
movs
test
test
fcomp
xchg
ds
aaa
mov
mov
cmp
add
ins
test
add
xor
iret
bound
popf
lods
sbb
(bad)
xchg
xor
xor
es
gs
scas
nop
pop
(bad)
mov
sub
jb
in
pop
jnp
push
std
fwait
sbb
ins
jg
inc
pop
sbb
mov
out
push
movs
and
push
in
push
push
push
lods
mov
test
cmp
mov
or
pop
icebp
dec
ins
sbb
mov
ror
ds
ret
es
imul
in
push
push
push
(bad)
std
mov
mov
int3
jne
xchg
imul
movs
stc
xlat
cmps
aaa
mov
push
mov
inc
lahf
push
or
or
pop
jnp
cmps
sbb
push
vpcomq
dec
sub
cmp
push
jg
and
jb
inc
pop
cld
inc
das
xor
mov
adc
data16
adc
mov
mov
fidiv
dec
pop
xor
sub
jecxz
push
aaa
xchg
in
jge
shl
jp
test
aaa
ja
cwde
dec
adc
jns
pop
pop
jno
xchg
adc
int
push
jmp
mov
out
aas
mov
or
push
dec
addr16
jno
scas
out
inc
shr
sub
das
adc
seto
int3
mov
dec
aaa
cmp
into
mov
xor
daa
add
sub
adc
je
stos
nop
jne
lds
cmp
ret
fbstp
ret
push
sbb
aam
pop
outs
mov
and
pop
cmp
call
ins
rep
mov
xchg
cmp
mov
imul
stos
xchg
push
cmp
xor
cmp
sub
vmread
mov
pop
sub
xchg
cmp
lea
(bad)
xor
adc
xor
jecxz
adc
adc
mov
sub
int
mov
nop
sbb
cmps
push
rcl
push
sub
adc
out
adc
sbb
clc
sub
jle
inc
lds
pop
nop
daa
(bad)
mov
stc
sbb
js
test
nop
nop
push
xor
sahf
fld
sbb
adc
popa
sub
inc
int3
jmp
loope
jmp
shl
clc
dec
pop
mov
outs
rol
sahf
fnstsw
xchg
not
shl
adc
jle
fwait
xlat
add
retf
leave
or
sub
cmp
rol
sub
enter
retf
dec
sbb
xor
cmp
arpl
call
cld
sbb
or
add
ins
lock
js
imul
out
repnz
cld
xor
sbb
lods
ret
mov
lock
pop
test
mov
sbb
pop
add
add
jle
xor
popa
mov
or
adc
push
add
ror
adc
sub
push
test
sub
std
push
sbb
and
pusha
xor
sbb
out
lahf
push
xchg
adc
aam
adc
sbb
int
cdq
rcr
ror
retf
pop
ret
push
(bad)
(bad)
ja
or
xlat
jb
repnz
in
aad
pop
mov
mov
mov
adc
pushf
loop
mov
xchg
mov
in
sbb
mov
jns
jmp
je
call
jo
fidivr
push
rcl
pop
dec
loop
mov
add
sbb
jae
push
and
test
dec
(bad)
popa
ror
mov
pop
ins
sub
arpl
shr
(bad)
aam
xor
sbb
mov
jbe
sbb
leave
jl
xchg
in
xchg
inc
pop
add
push
stc
xchg
adc
fist
gs
sbb
call
mov
jae
pop
jnp
cmp
adc
push
(bad)
bound
movs
xchg
(bad)
or
sbb
xor
xchg
aas
imul
mov
add
(bad)
call
inc
(bad)
stos
inc
hlt
mov
pop
mov
jp
ja
aad
add
push
xor
or
or
imul
mov
dec
mov
inc
cmp
mov
or
mov
sahf
stos
cmc
sbb
mov
pop
std
inc
das
jp
dec
pop
and
mov
shl
and
inc
xchg
adc
arpl
call
sub
ror
outs
push
es
mov
adc
mov
popf
lock
retf
xchg
icebp
push
(bad)
lods
sub
mov
aaa
ss
inc
jo
rcl
and
(bad)
ficom
popa
es
push
add
dec
movs
mov
push
mov
loop
popa
xchg
mov
loop
xchg
push
mov
and
in
inc
jg
js
mov
mov
pop
mov
das
dec
jne
add
(bad)
pop
les
aas
frstor
outs
cmp
adc
xor
arpl
pushf
call
or
nop
add
mov
fcmovnbe
cs
lea
xor
ins
push
and
sub
bound
scas
(bad)
mov
test
pop
fcmovnu
and
mov
ret
push
rol
je
and
stc
jp
ss
cmp
push
mov
inc
in
cli
pop
and
lods
adc
fiadd
pop
adc
xor
jle
xor
mov
cli
jg
ins
mov
push
mov
xlat
cwde
fcomp
ins
int
int
mov
into
lock
pop
mov
cdq
cld
cdq
mov
and
xchg
push
cwde
fisubr
test
xchg
pop
loopne
and
fwait
mov
(bad)
pop
pop
inc
adc
xlat
or
std
test
aad
jmp
inc
xchg
(bad)
and
test
cli
cmp
jns
xor
and
pop
aad
and
cmp
push
rcr
ins
push
sbb
ja
mov
push
(bad)
(bad)
mov
jmp
call
mov
pop
mov
push
inc
out
ret
mov
pop
xor
stos
pop
add
xchg
std
cmp
sbb
xor
out
(bad)
mov
test
inc
add
les
cmp
cs
dec
imul
dec
sub
cld
adc
push
mov
fbstp
leave
and
movs
inc
(bad)
stos
in
mov
pop
sub
jo
xor
sub
repnz
mov
lds
fnstsw
ds
jbe
ret
and
nop
or
fwait
js
popa
fucomip
scas
ja
inc
(bad)
ins
add
sbb
fs
(bad)
jmp
jae
jmp
xchg
jl
sbb
jo
dec
(bad)
(bad)
aad
inc
sbb
retf
xchg
aas
test
sbb
push
mov
push
pop
jo
sub
adc
mov
fdivr
cmp
push
mov
push
push
cwde
imul
pop
and
add
ins
adc
push
(bad)
fsubr
pop
rcl
jecxz
data16
repz
sub
mov
test
jae
test
sub
nop
xchg
xor
bound
jae
dec
jo
xor
nop
and
cmps
fs
loopne
ss
or
aaa
sbb
add
cmp
xorps
mov
pop
shl
and
dec
xchg
push
mov
jl
dec
outs
repz
rol
xchg
sbb
inc
sub
or
stc
jo
test
cmp
das
adc
mov
inc
movs
data16
push
xchg
jae
into
sti
add
cmp
cmp
mov
sub
jae
sahf
jae
and
mov
xor
out
sbb
jns
mov
mov
mov
aaa
jo
loop
and
(bad)
sbb
mov
or
adc
movs
push
(bad)
fwait
mov
adc
(bad)
pop
dec
inc
cmps
dec
jl
rcl
dec
scas
or
or
cs
sub
clc
outs
mov
xlat
sbb
ror
mov
mov
cs
loopne
hlt
pop
jo
cmp
inc
hlt
cmp
pushf
in
hlt
lea
sub
addr16
test
cmps
test
xor
or
mov
cmp
mov
adc
int
popf
mov
mov
or
or
fimul
xor
pop
outs
xor
sbb
jmp
xchg
push
mov
cli
int
xchg
jmp
and
xchg
rcl
xchg
fdiv
or
push
adc
popf
push
push
jnp
data16
lock
sub
xor
jne
fwait
mov
jle
add
mov
arpl
popf
mov
in
pop
mov
xchg
call
push
jmp
in
rcl
jbe
adc
out
cmps
mov
cld
and
lods
icebp
les
dec
movs
nop
mov
xchg
je
sub
call
mov
scas
cli
push
cmp
iret
fs
xchg
or
cmp
cli
outs
push
jb
lds
mov
mov
lock
xchg
jle
rcr
dec
sbb
popf
jl
inc
or
sahf
or
ins
mov
jmp
cmp
pop
or
in
ror
popa
adc
ins
push
stos
mov
inc
xchg
cmp
xchg
pop
sub
add
xor
retf
call
jns
test
adc
cli
inc
xor
ins
jp
xor
jp
pop
mov
mov
adc
std
call
cmc
fwait
or
cmp
pop
jecxz
icebp
movs
fmul
fnsave
xor
jns
das
or
aam
dec
dec
adc
push
stos
sar
outs
pop
xchg
adc
cmp
push
mov
cmp
dec
sub
lea
cld
das
jae
sub
or
push
push
inc
cmp
imul
mov
stos
xor
rcr
mov
xor
xchg
push
pop
addr16
aas
out
fsub
pushf
rol
jae
cdq
inc
sbb
stos
pusha
loop
sub
outs
mov
or
adc
loop
das
sub
push
dec
mov
shl
or
in
test
mov
xchg
fcomp
(bad)
fisttp
lock
and
jle
dec
stos
repz
xchg
jp
add
xchg
jmp
mov
lods
cmp
cmp
dec
stos
je
leave
inc
iret
push
sar
add
jmp
and
js
push
push
mov
xlat
cli
push
loopne
sub
mov
push
mov
mov
mov
(bad)
mov
cmp
fisub
cmp
cs
shl
sahf
xor
ror
fdiv
fwait
cmp
(bad)
fstp
(bad)
aas
pop
and
je
cmp
lods
mov
outs
add
cmp
dec
shr
pop
jl
push
mov
mov
inc
cwde
mov
hlt
pusha
xor
and
in
sti
shl
push
dec
pop
addr16
in
imul
add
dec
pop
test
dec
push
xchg
lock
xchg
dec
popf
dec
sti
sar
lods
mov
sub
jno
arpl
ret
test
aam
dec
fsubr
mov
push
test
not
dec
bnd
pusha
xlat
sbb
test
test
push
scas
ins
fsub
ins
stos
mov
addr16
aam
inc
mov
inc
jne
dec
fld
pushf
loopne
adc
out
sub
and
out
cmp
inc
cmp
mov
cs
jg
mov
test
inc
in
sbb
test
sbb
sbb
cli
add
mov
movs
fwait
enter
dec
xor
inc
js
push
sub
popf
dec
sbb
adc
js
mov
in
int
jns
outs
out
out
stos
rcr
(bad)
imul
in
mov
add
mov
inc
lods
into
inc
scas
mov
xchg
sbb
push
sbb
iret
or
mov
mov
icebp
mov
inc
or
call
xchg
test
movs
ja
jecxz
push
test
adc
cmc
inc
xchg
sub
jae
movs
jbe
in
call
sbb
pop
(bad)
add
test
shl
test
mov
push
xchg
int3
and
xchg
xchg
or
gs
xchg
cld
bound
pushf
ins
pop
cmp
and
mov
retf
cmps
jns
inc
adc
xchg
lock
push
mov
push
ror
jo
xor
cmp
mov
ins
and
mov
jb
add
out
and
call
jno
xchg
ds
pop
cmc
dec
mov
jl
inc
push
mov
push
scas
add
xor
imul
jg
jne
fs
jno
pop
jnp
repz
mov
stos
(bad)
pop
inc
retf
xchg
sbb
pop
jecxz
xor
pop
fwait
or
mov
inc
or
into
pop
outs
addr16
mov
daa
stos
inc
fldlg2
xor
jne
or
jle
mov
pop
rcl
(bad)
call
int
fs
push
cmp
inc
stos
cmp
mov
aam
fcmovnbe
sbb
mov
cmp
leave
mov
(bad)
mov
sar
aaa
gs
cdq
(bad)
imul
(bad)
nop
aas
lods
shl
or
call
in
les
in
push
popf
sbb
xchg
test
or
mov
sub
adc
xor
or
inc
push
mov
or
(bad)
ror
ficomp
ret
and
add
mov
mov
icebp
xor
mov
aas
mov
mov
retf
imul
cwde
rol
mov
dec
or
push
push
jle
or
jno
xlat
or
xor
ret
xchg
sub
fild
push
sub
push
adc
push
xlat
aad
pusha
adc
pop
pushf
sub
mov
sub
mov
jb
inc
test
arpl
sahf
fcmovne
push
fs
inc
sbb
mov
jge
mov
sar
dec
cmp
mov
jbe
gs
jmp
hlt
jl
jmp
std
les
lods
push
mov
iret
xchg
mov
dec
xchg
and
rcr
jmp
pop
mov
adc
mov
push
aaa
push
xchg
push
je
vmread
es
fsub
jno
out
push
movs
dec
stos
jle
sub
inc
xchg
jns
mov
fldcw
outs
cmc
dec
movs
(bad)
sbb
lods
and
std
inc
clc
das
mov
cdq
ins
call
in
mov
and
mov
fwait
or
mov
cld
repz
and
cmp
push
cdq
fwait
mov
jmp
push
jb
scas
jg
cmp
add
fcomip
mov
sbb
xor
lock
es
jmp
mov
inc
sahf
inc
pop
cmp
aad
or
fsub
mov
xchg
add
push
sbb
and
push
scas
lea
mov
call
xchg
arpl
and
pop
loopne
dec
mov
push
neg
out
lea
jg
clc
pop
cmps
test
(bad)
cmps
and
pop
pop
mov
cmp
adc
cdq
out
fmul
daa
pop
jge
pop
sbb
aam
xor
movs
mov
push
pushf
jmp
sbb
jb
push
daa
int
and
mov
and
imul
or
out
div
movs
jb
xor
sub
mov
and
leave
cmp
stos
xchg
xchg
adc
mov
xor
jae
and
pop
push
or
ret
mov
cmp
jno
and
int
cmp
cmp
ins
mov
aaa
idiv
(bad)
push
in
push
pusha
retf
aam
repnz
mov
cld
sbb
cli
retf
test
addr16
add
push
leave
dec
fbld
sbb
imul
pop
in
mov
dec
dec
sahf
stos
pop
mov
pop
mov
hlt
imul
jo
enter
push
in
xchg
inc
mov
je
cmps
mov
xchg
cwde
hlt
jbe
arpl
sti
mov
in
outs
push
jnp
inc
or
ins
movs
jo
cmp
mov
aas
adc
imul
or
loop
cmp
push
pop
inc
aad
pop
push
rcl
jb
push
xlat
out
inc
cmp
pop
cmp
aaa
sbb
mov
mov
sbb
sub
adc
dec
addr16
shl
gs
shr
out
sub
inc
aaa
hlt
popa
xor
ins
jge
lea
push
xchg
(bad)
adc
pminsw
into
pop
jp
addr16
mov
mov
mov
call
add
sbb
xchg
or
jno
xor
int
pop
int3
cdq
mov
movs
ja
jae
ret
mov
mov
cmc
jno
xchg
dec
test
nop
mov
xchg
sub
add
xchg
cmp
mov
pop
int
icebp
mov
add
inc
push
jb
inc
inc
loope
adc
std
(bad)
pop
cmp
sti
lds
pop
mov
scas
inc
jge
jge
mov
mov
sbb
retf
and
scas
sbb
movs
xchg
add
inc
sbb
mov
xchg
dec
call
ds
mov
ret
je
jnp
aaa
arpl
sub
shr
(bad)
retf
inc
js
pop
mov
(bad)
pop
loop
jno
and
outs
jae
shr
or
sti
mov
and
stos
jb
mov
cwde
mov
jmp
add
dec
sub
arpl
js
test
push
or
and
mov
mov
fdivr
mov
or
or
xchg
mov
(bad)
int3
repz
sub
pop
adc
scas
push
loope
pusha
fwait
fwait
lock
fiadd
push
ret
push
xor
xor
in
lods
mov
sub
pop
mov
(bad)
jg
xor
aaa
pop
ja
aaa
aad
lea
fld
in
test
retf
jno
aam
mov
(bad)
or
jmp
cmp
in
dec
push
(bad)
int3
xor
clc
outs
jnp
pushf
(bad)
ins
movs
(bad)
shl
scas
shl
test
inc
es
ins
xor
jmp
not
sub
mov
pop
xchg
sub
adc
or
add
mov
fst
or
pop
mov
cmp
aam
iret
shl
test
arpl
xchg
push
xor
loopne
sub
cdq
xchg
xchg
and
cvtdq2ps
mov
fstp
sub
in
imul
mov
mov
or
les
cdq
pop
popf
hlt
fs
jbe
and
jmp
sbb
xor
cmp
shr
ds
xchg
xor
push
add
add
and
aas
cld
pusha
sub
cmp
dec
mov
jg
int3
clc
(bad)
sub
popf
mov
adc
sahf
sub
scas
icebp
mov
xchg
jae
sbb
dec
or
xchg
and
test
in
inc
mov
rcr
sbb
je
in
aam
retf
jno
mov
cmp
push
repz
idiv
or
push
(bad)
mov
arpl
add
and
repz
add
xchg
mov
in
repz
shr
iret
dec
mov
rcl
in
mov
sahf
fsubr
mov
int3
mov
bound
xor
xchg
hlt
add
pop
add
enter
int
cmc
push
and
and
add
in
mov
inc
pop
adc
mov
call
loope
sbb
fisubr
or
xor
rol
int
inc
jl
sbb
dec
sub
retf
out
cmps
ja
jl
mov
pop
shr
stos
shr
push
sub
xchg
or
movs
xchg
jns
jne
rol
sbb
dec
pop
movs
add
(bad)
dec
test
les
scas
mov
out
dec
dec
loope
daa
lds
xor
sbb
mov
pushw
movs
addr16
sub
pop
out
sbb
test
push
mov
imul
repz
sub
adc
sar
imul
inc
pop
ss
mul
jecxz
shr
nop
and
and
add
sub
adc
call
add
jp
shr
in
xchg
idiv
test
fadd
repz
in
cli
ds
in
mov
hlt
test
cmp
ins
cmp
fstp
push
fisub
sbb
pop
mov
xchg
sub
mov
mov
adc
mov
jb
add
repnz
addr16
mul
js
gs
daa
int
call
lds
in
nop
pop
mov
add
addr16
sahf
push
ficom
inc
retf
dec
xchg
mov
pop
jb
mov
aam
xchg
fisttp
add
sub
ret
jl
test
inc
dec
xor
xor
out
in
neg
aad
or
adc
jl
sub
lea
call
inc
test
mov
cmp
adc
ja
and
pop
sbb
aas
jns
out
pushf
xor
mov
pop
inc
xor
xor
fidiv
std
xor
ss
or
push
adc
pop
ja
push
push
mov
ins
call
inc
pushf
adc
xchg
and
xchg
jp
dec
scas
inc
(bad)
int
mov
ror
jmp
je
mov
or
inc
ins
shl
cmp
add
fisttp
ja
jo
stos
pop
dec
sbb
push
pop
ds
jo
adc
push
pop
mov
mov
fyl2x
je
(bad)
fild
cmc
cdq
dec
popf
js
loopne
outs
pop
fidivr
mov
loop
mov
jg
xor
fsubr
nop
jg
(bad)
jae
pop
pop
(bad)
out
sahf
sbb
mov
mov
inc
inc
mov
adc
jbe
aaa
xchg
outs
xchg
sbb
xchg
dec
push
xor
ds
adc
push
mov
fcomp
mov
sar
xchg
int3
ins
sub
or
shl
stos
add
add
push
mov
fdiv
sbb
dec
add
sbb
push
cmps
jmp
cs
fbld
sar
push
jnp
sbb
and
mov
in
xchg
dec
mov
fsub
dec
jg
ret
or
sub
inc
scas
inc
pop
cmp
cmp
out
lock
mov
test
inc
out
xchg
loop
dec
imul
cmps
ins
loope
push
mov
inc
or
std
add
jno
pop
cs
loopne
xcrypt-ofb
cmps
outs
fst
dec
jmp
ror
adc
fstp
xor
mov
jne
aam
mov
mov
in
pop
pop
cld
pop
(bad)
nop
jno
or
test
sub
stos
add
xchg
xor
loop
xchg
cli
stos
ja
in
stos
fcom
jle
push
mov
push
push
enter
aad
mov
pop
popf
inc
pop
lock
dec
or
mov
adc
and
imul
and
push
loopne
jg
pop
out
test
fmul
movs
and
cmp
mov
fwait
xchg
cli
mov
sub
jno
jo
mov
xor
ins
das
lds
es
xchg
inc
aam
sahf
aaa
dec
sbb
ds
add
inc
adc
push
xor
mov
mov
sahf
pop
mov
ins
pop
add
sbb
sub
sub
mov
fstp
sub
xchg
ins
push
jae
and
arpl
add
fst
mov
retf
mov
adc
das
mov
dec
call
lds
retf
bnd
xor
adc
pop
(bad)
sti
ret
add
pop
dec
pop
push
popa
pusha
add
cmp
sub
xchg
xlat
sub
imul
in
dec
push
xor
sbb
mov
xlat
add
iret
loope
in
mov
xchg
sub
shl
in
popa
test
mov
sub
je
dec
mov
out
shr
pop
cmc
xor
adc
inc
gs
xor
inc
(bad)
movs
jl
arpl
fisubr
mov
enter
jns
cwde
or
xor
add
inc
mov
cmp
shl
or
dec
sets
xchg
inc
test
jne
pop
pop
mov
clc
add
push
call
cli
push
mov
(bad)
xrelease
nop
push
mov
inc
fs
add
xchg
mov
push
or
cmps
stos
push
aas
ja
jae
inc
sub
inc
int
nop
add
test
sub
cmc
push
xchg
pop
jg
ss
in
ds
adc
dec
add
movs
(bad)
adc
pop
pop
push
hlt
scas
cmp
aaa
outs
imul
sbb
lea
int
(bad)
inc
inc
push
pushf
ret
retf
add
sbb
jmp
jecxz
pop
add
inc
push
mov
out
test
mov
or
inc
or
dec
aad
dec
pusha
push
xchg
adc
(bad)
fdivr
cmps
cmc
shl
clc
dec
or
iret
mov
mov
mov
cwde
xlat
loopne
in
sub
enter
push
pop
jne
sahf
inc
ss
mov
inc
mov
daa
fisubr
inc
push
cwde
fs
dec
dec
out
ds
arpl
call
nop
sbb
sbb
mov
xchg
xor
ins
jae
xchg
jae
sub
xchg
sub
cmps
std
adc
movs
sub
and
inc
adc
and
sub
or
ins
mov
int3
inc
push
shr
retf
dec
lahf
mov
mov
mov
data16
dec
xchg
or
fst
div
cs
dec
and
and
xlat
imul
sbb
inc
out
inc
sbb
jg
dec
aam
sbb
(bad)
psrlq
xchg
inc
std
push
aaa
push
or
jmp
sbb
jno
test
test
mov
inc
ins
lahf
popf
pop
inc
push
das
mov
sahf
push
test
mov
in
mov
test
mov
addr16
stos
adc
cmp
inc
repnz
(bad)
in
push
mul
int
jmp
mov
lock
xor
xchg
leave
ss
aam
jbe
addr16
xor
retf
jo
or
dec
js
pop
jg
pop
cmp
mov
or
add
bound
add
mov
ss
outs
fidivr
adc
dec
fild
dec
lods
stos
lahf
mov
xchg
mov
mov
cmp
sahf
xchg
add
retf
scas
xchg
mov
frstor
sti
pxor
call
ret
xchg
dec
dec
push
mov
mov
adc
xchg
bound
fidivr
or
xchg
jbe
jg
sub
add
inc
mov
retf
das
inc
mov
lock
dec
jmp
in
add
and
dec
and
popa
push
pop
push
sbb
mov
jb
push
(bad)
jmp
mov
add
jns
in
out
push
aam
sub
jg
mov
jmp
or
xchg
out
push
mov
stc
int
push
je
mov
pop
js
mov
popa
loope
scas
pushf
adc
sti
dec
aaa
pusha
into
sub
(bad)
imul
(bad)
out
leave
(bad)
ds
retf
out
add
clc
gs
mov
push
movs
push
mov
mov
clc
pop
mov
cmp
call
mov
jmp
adc
push
pop
retf
mov
sti
sub
cmps
jl
into
dec
push
in
jmp
retf
xor
sub
mov
sub
jge
sub
call
xchg
and
lock
pushf
sub
enter
ret
aas
mov
xor
mov
sahf
cmc
xchg
and
lahf
sbb
sbb
xchg
stc
ror
daa
and
fild
dec
pop
adc
cmp
jle
mov
ss
cmps
dec
mov
jmp
imul
cld
call
and
xchg
or
outs
movs
enter
ja
push
sbb
adc
ins
add
push
hlt
pop
(bad)
or
and
xchg
(bad)
xchg
or
pop
pusha
rol
mov
xor
xor
xchg
or
cmp
xchg
dec
sti
xor
pop
test
(bad)
xchg
rcr
ret
adc
jnp
lahf
sbb
pop
int
mov
jmp
in
addr16
push
out
pop
jg
jnp
mov
std
ret
sub
add
fnstenv
int3
enter
aad
mov
mov
outs
ret
pop
add
rcr
daa
aaa
dec
push
mov
jmp
jno
xor
xchg
ds
je
ja
mov
fst
lods
sbb
(bad)
lods
inc
mov
loop
shl
pop
aaa
rcl
nop
dec
push
xor
cs
cmps
shl
imul
and
retf
pop
and
xchg
in
pushf
adc
inc
mov
or
stc
les
push
icebp
js
ret
mov
(bad)
addr16
or
cmp
pop
dec
pop
repz
xchg
xchg
jg
push
jns
jae
push
sbb
mov
push
or
shr
and
std
aam
stos
xchg
add
sbb
add
xchg
jno
xlat
int3
mov
dec
aad
fistp
and
push
pusha
xor
jl
ja
fadd
or
xchg
inc
lds
xor
and
and
aaa
(bad)
mov
push
inc
sbb
jb
(bad)
jbe
dec
dec
mov
mov
shr
cmps
jmp
cwde
xchg
nop
cld
mov
fwait
(bad)
shr
stos
cmps
cmp
mov
(bad)
pop
add
rcl
loop
pop
hlt
dec
retf
push
sbb
test
ficom
aaa
lahf
and
arpl
outs
mov
or
lods
pop
mov
and
and
rep
jg
jle
dec
fmul
mov
mov
mov
jo
inc
ins
(bad)
mov
in
bound
lds
push
dec
and
mov
popf
dec
call
stos
arpl
mov
pop
test
mov
into
movs
sub
jb
mov
shl
push
mov
clc
addr16
ret
pop
mov
fwait
ja
mov
or
mov
js
mov
dec
or
or
je
repz
dec
lds
inc
fld
loop
jmp
mov
not
leave
or
fist
xor
scas
cmp
xchg
nop
call
add
repnz
pop
xchg
jbe
sbb
or
bound
retf
xchg
push
mov
cmp
out
sbb
(bad)
mov
pop
mov
add
aas
mov
ds
cwde
ds
aaa
push
mov
sub
jne
mov
fcmovb
ins
retf
dec
jo
xlat
div
jmp
dec
mov
dec
push
push
in
test
jecxz
jl
mov
push
sbb
(bad)
sti
sub
iret
cmp
jecxz
jne
in
lds
lods
adc
jmp
lock
stc
fdivr
xchg
rol
xor
bound
jg
jne
push
cwde
or
push
call
add
(bad)
hlt
and
sbb
dec
stos
mov
push
repnz
cdq
jmp
jns
and
sbb
mov
fs
ret
adc
aam
(bad)
pusha
push
js
nop
inc
pusha
jg
inc
cmps
imul
ror
es
dec
movs
mov
inc
shr
dec
xchg
xchg
inc
fsub
nop
adc
das
cmps
sub
sar
cmp
mov
mov
div
xlat
aas
ja
push
jmp
test
call
imul
pop
ja
test
ins
inc
sbb
pop
mov
xor
outs
xchg
push
sbb
push
stos
sub
xchg
aad
push
cmp
mov
cdq
in
iret
lods
imul
jmp
and
and
mov
add
add
hlt
pop
cmps
push
stos
cmp
sub
and
cmp
icebp
jg
cs
nop
(bad)
xor
cwde
xor
cmp
or
cmps
jp
sub
mov
sbb
add
jns
push
sub
sbb
scas
cs
loopne
in
xor
inc
int
inc
iret
push
push
xor
mov
push
cwd
daa
mov
fnsave
aam
aad
sbb
daa
xchg
jae
mov
je
mov
sar
cmp
push
pop
movs
fwait
and
or
mov
and
xchg
mov
mov
pop
mov
mov
mov
cmps
ja
cmps
addr16
loopne
pop
push
test
jge
jl
jmp
dec
mov
push
dec
sub
inc
fdiv
jne
sti
retf
test
or
cmp
cwde
div
daa
xlat
out
mov
arpl
mov
pop
jle
jo
mov
shl
ins
clc
xor
add
jb
faddp
mov
scas
gs
(bad)
fisubr
fld
in
cmp
or
mov
cwde
fs
dec
mov
repnz
mov
push
dec
aam
lods
inc
into
mov
xchg
mov
dec
fiadd
ins
mov
inc
pop
ror
push
inc
add
fcomp
jmp
ror
mov
iret
mov
push
addr16
jo
pop
add
inc
loop
ins
ins
stos
jno
inc
mov
add
add
cmp
scas
aad
mov
clc
push
mov
and
cmp
jl
inc
push
call
xor
aam
ja
xor
and
sub
pop
out
push
mov
sbb
and
xchg
je
sbb
pop
mov
fnstcw
retf
fs
int
dec
push
add
div
dec
lds
xor
and
sbb
or
adc
mov
mov
int3
into
add
mov
pop
loop
shr
cli
dec
div
pop
ret
jb
out
sti
gs
nop
xor
sub
mov
jno
cs
out
or
xchg
sbb
pop
jmp
cwde
or
dec
mov
out
cmovs
jmp
jmp
(bad)
cli
repnz
in
pop
mov
add
dec
or
popa
or
cdq
call
dec
mov
aas
mov
clc
enter
sub
int3
and
cld
js
cmpxchg
dec
push
xchg
div
adc
pop
inc
add
cdq
movs
and
fistp
or
push
shl
xchg
gs
jns
test
sbb
mov
or
call
cwde
jg
pop
jp
dec
pop
sbb
ins
cmp
mov
mov
inc
inc
push
pop
lds
pop
popa
pop
jmp
fcom
mov
movs
jmp
xchg
push
or
test
sbb
mov
jae
cmp
fld
cmps
xchg
fdiv
cmp
fmul
pop
mov
(bad)
out
inc
and
and
xchg
xchg
fs
xor
xchg
adc
pop
aam
dec
and
outs
push
call
sbb
lds
inc
and
lock
repnz
or
out
sbb
sub
sbb
xor
scas
xchg
fwait
jecxz
out
mov
sbb
repnz
(bad)
jmp
mov
stos
xchg
cmps
xchg
rcr
sub
popa
aaa
dec
adc
mov
or
loopne
mov
test
sbb
loope
or
pop
daa
cmp
mov
jge
mov
mov
jmp
mov
fidivr
int
inc
test
or
(bad)
pop
loopne
xor
pop
cwd
or
jmp
xor
xor
stos
shl
mov
add
sub
das
sub
scas
ror
dec
cmc
push
mov
pusha
cli
gs
cli
pop
call
sub
shr
xchg
test
stc
xchg
mov
div
pop
out
jmp
bound
and
cmp
pop
retf
ins
inc
ins
fmul
mov
or
repnz
or
cmps
jmp
dec
sti
cmp
sub
mov
test
adc
ss
xlat
(bad)
jmp
iret
fwait
rcl
mov
retf
cs
jl
sahf
xlat
das
and
retf
jnp
sbb
pushf
push
mov
bound
scas
xor
stos
pushf
stc
lods
pop
not
xchg
sbb
xchg
adc
mov
cwde
ret
loop
mov
cmp
stc
aad
pop
sbb
mov
bound
into
mov
(bad)
nop
ja
je
ror
es
pop
je
jne
scas
xor
loope
pop
cdq
sti
jbe
pushf
(bad)
jae
inc
fisub
mov
ret
outs
ror
mov
data16
test
and
(bad)
mov
out
xor
mov
push
sar
cmp
ins
ja
(bad)
enter
fst
test
push
(bad)
pop
inc
jmp
fwait
stos
mov
in
clc
push
(bad)
mov
ret
std
push
bound
fld
(bad)
cwde
movs
outs
fwait
and
push
xchg
inc
cmp
bound
adc
sub
fs
repz
(bad)
xor
jl
arpl
sbb
and
arpl
in
stos
add
xchg
mov
fs
xchg
pop
popf
push
fcmovnb
daa
mov
xor
or
push
fist
mov
popa
mov
xor
mov
(bad)
cmp
pop
dec
lock
push
inc
std
jno
into
inc
jnp
clc
inc
neg
rcr
sbb
ret
jbe
mov
fst
sahf
dec
mov
mov
pop
and
add
xchg
xchg
gs
outs
cld
out
cmps
jmp
test
mov
inc
push
dec
pop
xchg
cmp
pop
jl
mov
inc
addr16
jmp
popf
ins
or
pusha
mov
sbb
fisub
stc
xor
arpl
jbe
pop
cmp
pop
les
inc
push
jns
cmp
ins
fadd
mov
add
dec
bound
not
pusha
mov
xchg
push
(bad)
les
sbb
jno
cmps
daa
ins
cwde
and
lock
aaa
jp
ja
jns
add
add
push
mov
aas
not
lds
fs
movs
xor
mov
dec
dec
arpl
xor
add
ins
inc
stos
ins
sbb
fs
cdq
bnd
es
jg
out
and
sti
out
pop
and
movs
repnz
aaa
and
cmp
(bad)
or
pop
xor
pop
stc
mov
nop
sahf
and
stc
pop
sbb
je
push
xchg
(bad)
jge
push
mov
xor
inc
imul
xchg
pop
addr16
jne
sub
pop
(bad)
retf
mov
mov
jne
dec
xor
adc
loopne
in
mov
daa
ret
mov
enter
sub
into
and
mov
push
mov
mov
adc
cdq
mov
and
sbb
mov
call
ds
scas
js
les
mov
outs
or
imul
lods
sbb
xlat
popa
cvtpi2ps
pusha
mov
ret
sub
mov
loop
xchg
sbb
and
jb
cld
xchg
dec
gs
repnz
dec
outs
push
movs
nop
and
out
aaa
pop
xchg
dec
pusha
cmps
ds
sbb
cwde
pusha
popa
and
cli
mov
jl
daa
ror
push
mov
(bad)
(bad)
add
inc
sbb
and
adc
add
add
adc
lahf
pushf
xchg
push
xlat
pop
jns
fldenv
int
jmp
icebp
sbb
loopne
scas
neg
daa
or
push
inc
inc
sub
aad
ror
cld
popa
sbb
cwde
dec
fnstcw
sub
xchg
das
pop
mov
jo
mov
and
add
cs
pop
jg
pop
scas
imul
jmp
rol
or
sbb
jecxz
(bad)
(bad)
call
cmc
in
and
add
add
(bad)
gs
test
and
mov
mov
movs
(bad)
pop
aam
mov
and
jecxz
inc
(bad)
in
dec
mov
scas
pop
call
js
in
aam
test
sti
outs
int
jle
into
mov
fwait
adc
sti
inc
xchg
mov
repnz
pop
cmp
xchg
sti
sub
push
xor
iret
sbb
or
cmp
mov
dec
(bad)
repnz
adc
xchg
(bad)
out
push
fcomip
popf
fucompp
dec
mov
adc
cmp
mov
out
pushf
push
jecxz
ret
js
xor
shl
sbb
adc
aas
hlt
ret
mov
sub
in
dec
stc
dec
and
push
xchg
pusha
lods
xor
arpl
dec
dec
add
test
popf
jmp
phaddw
loop
sub
test
shr
addr16
mov
aam
mov
test
push
pop
in
push
lea
xchg
cli
ficomp
(bad)
jmp
mov
adc
xor
fwait
or
or
jge
mov
push
pop
cmp
fldz
pop
inc
adc
jl
repz
sbb
cwde
outs
dec
iret
push
stos
test
popf
dec
inc
mov
lods
movs
popa
mov
rol
jnp
xchg
inc
in
cmp
daa
add
(bad)
mov
lods
leave
fisubr
mov
loope
bound
stos
pop
adc
scas
xchg
fbstp
sub
retf
and
imul
scas
jb
test
xlat
(bad)
shr
mov
daa
cld
xor
(bad)
adc
cmps
push
or
adc
daa
jecxz
mov
std
pop
(bad)
push
and
mov
sbb
(bad)
int
scas
xchg
dec
rcr
fisubr
jp
les
sbb
ss
retf
xor
xor
bts
and
push
shl
loope
enter
imul
cmp
sbb
cwde
mov
arpl
mov
sub
mov
scas
mov
xor
mov
movaps
out
aam
fld
shl
xor
push
int
sar
pop
leave
daa
lods
(bad)
adc
jmp
ja
div
out
fsubr
mov
add
loop
sar
sub
sub
cdq
jmp
push
xchg
mov
pushf
cmp
mov
or
xchg
test
ds
cdq
push
repnz
stc
pushf
cmp
dec
inc
(bad)
mov
stos
inc
sbb
pop
pop
cmp
inc
and
pop
stos
test
call
in
push
in
cld
cmps
push
scas
fnsave
ins
ds
jge
loopne
(bad)
dec
xchg
jecxz
mov
mov
mov
out
push
loopne
repnz
mov
clc
mov
jmp
les
test
(bad)
jo
pslld
and
add
das
pop
lea
jmp
dec
mov
aad
and
and
jae
push
lahf
dec
pop
movs
inc
cld
pop
inc
push
cs
in
test
ins
or
add
pop
xor
xchg
icebp
push
cli
call
addr16
mov
out
imul
sahf
je
jae
ss
mov
lock
sbb
mov
fwait
jecxz
xchg
jnp
mov
add
mov
pop
ins
pop
xchg
sti
cmp
lods
sub
add
push
icebp
mov
push
adc
mov
jg
jmp
repz
add
sbb
mov
lods
(bad)
sbb
movs
add
pop
and
add
dec
inc
cmp
(bad)
(bad)
adc
mov
jge
push
retf
sbb
icebp
fwait
jle
mov
into
push
cmc
mov
dec
jbe
push
jb
cld
xor
(bad)
add
mov
push
and
iret
pop
dec
pop
pop
mov
sbb
fstp
xchg
dec
xchg
in
loope
(bad)
in
test
sub
xchg
imul
xchg
add
push
add
sbb
cmc
xchg
leave
daa
cmp
repz
jne
dec
cli
clc
sub
push
jo
inc
pushf
mov
jecxz
adc
outs
rcl
mov
mov
int
xchg
xchg
xchg
mov
push
jns
fmul
pop
pusha
pop
jl
dec
xor
mov
or
scas
jl
rol
mov
dec
(bad)
fsubr
lods
lock
pop
xchg
sub
repz
dec
jle
mov
in
retf
mov
cmp
fiadd
stc
fcmovb
inc
popf
popf
mov
sahf
fidivr
popf
repnz
or
or
sub
hlt
cdq
pop
pop
or
pop
inc
add
repnz
dec
cmps
imul
cmp
push
push
and
pop
mov
cmp
mov
test
fwait
add
loopne
jne
push
jae
add
sub
xor
sar
xchg
cmps
cmc
popa
ret
inc
imul
inc
dec
mov
xchg
push
(bad)
lods
mov
mov
in
(bad)
and
ror
push
(bad)
mov
add
push
pop
pop
pop
dec
lods
sub
xchg
popa
cwde
jne
repnz
pop
or
cmps
or
push
mov
jnp
ss
pop
push
add
not
aam
loop
inc
in
stc
push
xchg
in
jl
dec
call
mov
out
test
call
sbb
repz
fistp
push
xchg
adc
mov
(bad)
pop
stos
dec
out
pop
lahf
jge
jmp
sbb
aas
jge
in
sbb
pop
pop
inc
pushf
popa
scas
and
in
xchg
mov
add
rol
jne
mov
in
lock
mov
adc
rol
cld
(bad)
ftst
dec
mov
(bad)
lods
dec
or
hlt
jmp
dec
mov
test
pop
retf
pusha
mov
xchg
inc
or
ins
mov
fwait
xor
je
adc
lea
xlat
xor
cmp
cmps
inc
popf
(bad)
test
xlat
ror
cdq
cmp
sub
xor
mov
or
imul
cmp
jl
lods
cmp
retf
mov
cld
imul
or
test
out
push
pop
sbb
ja
dec
ficomp
test
cmps
dec
popf
add
pop
jecxz
xor
inc
movs
add
rcr
and
xchg
clc
inc
mov
movs
dec
std
fimul
scas
dec
pop
cli
lods
push
adc
jmp
xlat
pushf
adc
retf
test
xrelease
mov
ret
sbb
dec
neg
add
push
mov
dec
enter
jnp
in
sbb
sub
add
mov
add
pushf
xchg
push
or
sub
std
inc
or
test
dec
and
mov
imul
imul
cmps
loope
not
pop
sahf
mov
or
jp
cmps
cs
ffreep
sbb
xchg
retf
retf
scas
mov
fcomp
fdivr
mov
dec
ins
xor
or
imul
mov
pushf
(bad)
hlt
pop
jne
mov
repnz
add
push
lock
pop
popf
fisttp
cmp
add
sahf
mov
dec
and
cmp
shl
pop
in
dec
jge
adc
add
dec
fsubr
jmp
sbb
iret
add
je
or
cwde
sbb
pushf
inc
and
cwde
mov
xor
aad
stos
jmp
out
mov
add
add
daa
or
lods
adc
jp
jns
jb
pop
push
outs
inc
adc
mov
mov
pop
or
push
(bad)
sub
test
xor
stos
jbe
leave
cmp
cwde
sub
push
push
push
xor
mov
mov
out
addr16
mov
loop
cmps
push
or
mov
or
xchg
or
fst
cmc
into
daa
xor
xchg
xchg
aaa
mov
mov
and
gs
stc
add
into
bound
fisttp
pushf
jmp
outs
xor
pop
and
loopne
repz
push
inc
outs
retf
nop
pop
loopne
mov
cmp
and
inc
adc
movs
movs
sub
test
xor
aas
leave
popf
xor
mov
out
test
inc
out
cld
and
loopne
dec
and
int
mov
call
and
inc
mov
stos
cmc
stc
imul
test
sub
pop
fstp
leave
fidivr
pop
push
add
(bad)
sub
mov
mov
mov
mov
(bad)
fisttp
stc
jno
leave
mov
sbb
mov
cdq
ficomp
test
push
xchg
push
cmp
sbb
mov
or
jp
inc
push
cmp
lahf
xor
jno
sbb
pop
scas
aaa
or
dec
inc
cdq
mov
mov
pusha
cmps
sbb
(bad)
idiv
cmp
fnsave
xor
push
push
(bad)
jecxz
loopne
iret
loope
jp
inc
add
aaa
lock
cdq
pusha
arpl
dec
pop
and
sbb
std
popf
not
ret
xor
jmp
mov
mov
lods
scas
xor
xchg
pop
dec
sbb
imul
sbb
ret
push
addr16
xor
int
mov
inc
push
lds
call
mov
fldcw
push
mov
outs
mov
aas
add
jmp
inc
sbb
fwait
push
sbb
xchg
pop
test
enter
jb
retf
out
out
ror
cmp
inc
js
dec
pushf
fidivr
scas
or
sar
sub
outs
mov
push
pop
and
xchg
int
out
out
jbe
(bad)
into
mov
dec
aaa
mov
push
leave
stc
clc
sbb
xchg
repnz
test
es
outs
out
dec
stos
jne
sub
icebp
pop
xchg
popa
mov
or
pop
stc
movs
sbb
xor
cmps
stos
inc
lods
xor
inc
jno
fist
(bad)
out
shl
sub
or
je
das
cmp
sbb
(bad)
rol
xor
scas
ss
test
xor
loopne
mov
or
dec
ds
mov
lahf
xchg
sti
xor
xor
in
push
sub
(bad)
mov
inc
dec
sub
xchg
dec
bound
mov
cmc
inc
je
push
fiadd
out
pop
add
jne
cmp
dec
sahf
out
call
fbld
cmps
pop
xchg
cmp
mov
jecxz
div
call
and
mov
outs
pop
mov
mov
xor
or
sti
xchg
push
js
add
popa
stos
push
fcmove
xor
pop
push
jmp
push
je
sbb
xchg
pop
xchg
jle
int
retf
dec
jo
addr16
repz
mov
mov
stos
les
and
cmps
and
pop
jno
loop
xchg
and
sbb
pushf
jg
(bad)
out
mov
jp
fs
out
call
into
retf
daa
and
bound
ds
call
inc
adc
ins
(bad)
stos
push
jo
lea
fwait
and
pusha
ret
mov
clc
out
push
jl
fbld
and
(bad)
in
popf
jne
hlt
push
sbb
mov
sbb
scas
xor
repnz
and
ret
jne
mov
popf
pop
les
fdiv
adc
adc
(bad)
(bad)
dec
and
shr
mov
std
jae
arpl
push
cmp
xor
sub
mov
push
adc
xchg
inc
test
or
(bad)
addr16
mov
jl
xor
pop
xor
jp
xchg
test
sub
retf
pop
inc
sar
mov
pop
lods
push
sub
(bad)
mov
stc
scas
inc
mov
jp
(bad)
imul
outs
dec
mov
sbb
(bad)
pop
lods
rol
pop
and
dec
call
loop
stos
or
push
sbb
cmp
(bad)
ja
fs
dec
cmp
pop
mov
push
in
sbb
cwde
adc
stc
aaa
add
xor
dec
xchg
add
dec
ins
adc
mov
mov
sti
cmp
and
push
arpl
retf
enter
lock
jg
jmp
imul
cmps
add
inc
sbb
repz
xchg
or
mov
js
mov
std
mov
or
inc
retf
pop
mov
and
cmps
lock
cmp
pop
cld
call
cmp
and
jo
arpl
inc
shl
push
sub
in
mov
sahf
(bad)
and
fst
and
(bad)
sti
inc
and
int3
push
xlat
add
addr16
push
jnp
and
fld
inc
dec
pop
not
neg
ret
out
pop
cmps
lods
(bad)
icebp
arpl
dec
and
lds
push
or
add
mov
addr16
or
into
fld
call
les
mov
hlt
call
and
out
dec
loop
mov
sub
arpl
xor
jmp
mov
movs
or
jmp
mov
in
fs
push
cmp
jle
shr
shr
ins
shl
jo
das
mov
adc
push
inc
(bad)
outs
add
movs
test
cmp
popa
cmp
les
stos
data16
xlat
stos
int
pop
(bad)
cmp
mov
scas
add
cmp
loope
sub
fwait
cmp
mov
sti
mov
lds
in
pop
sbb
call
sbb
adc
jns
add
inc
mov
pop
std
lods
outs
mov
inc
test
adc
jb
cmp
push
or
dec
add
or
scas
inc
dec
jg
mov
xor
xchg
in
add
cmp
call
cmps
fld
mov
cmp
add
sti
inc
fld
stos
cmp
or
retfw
dec
psubb
or
scas
stos
sub
fwait
push
imul
add
imul
xchg
add
jge
jle
jne
rol
repz
(bad)
(bad)
push
pop
mov
loopne
adc
fwait
mov
or
mov
fst
bound
mov
addr16
sbb
in
cdq
add
adc
ret
jb
pop
loope
mov
and
arpl
adc
(bad)
mov
pop
int3
add
mov
jl
inc
mov
sub
mov
scas
jp
inc
dec
and
ror
xchg
sbb
ficom
pusha
jge
or
ret
inc
mov
xchg
ret
xor
mov
mov
push
sbb
bswap
push
sub
nop
pop
test
inc
outs
add
shl
fdiv
sub
out
push
jmp
(bad)
mov
cmp
xor
jbe
(bad)
mov
rol
fnstenv
sub
inc
sbb
xchg
lods
pop
push
xor
xchg
dec
int
call
push
jle
stos
fistp
sub
nop
pop
xor
xchg
nop
stc
es
ret
pop
and
inc
dec
mov
popa
imul
inc
hlt
daa
mov
jno
sub
out
xchg
ret
mov
and
push
pop
inc
(bad)
dec
pop
sbb
push
aaa
adc
cdq
aad
rcr
imul
mov
cld
jb
xlat
adc
push
mov
inc
into
sub
adc
xor
push
xchg
loope
inc
mov
lds
dec
(bad)
outs
push
sbb
xchg
mov
sub
pop
cli
cmp
adc
rcr
mov
clc
mov
push
jmp
pop
add
sbb
push
add
test
pop
dec
push
imul
sub
cld
pop
jmp
js
std
pop
scas
adc
fild
bndstx
test
xchg
lahf
stc
cmp
mov
cmps
push
test
add
pop
inc
xchg
sti
loope
sti
cmc
ror
cli
jbe
neg
popa
xor
lock
xchg
and
lock
or
repnz
(bad)
idiv
or
(bad)
mov
push
into
jmp
jmp
into
xchg
sub
loope
dec
cmp
ins
fstp
mov
ficom
mov
je
inc
mov
(bad)
xchg
mov
mov
mov
push
mov
mov
ret
loope
pop
xadd
jne
repz
sbb
jl
repnz
pop
pop
lds
add
inc
test
ficom
lahf
rcr
outs
call
mov
jecxz
and
je
(bad)
(bad)
popf
push
jecxz
repz
in
add
inc
jno
mov
lods
fstp
and
retf
mov
pop
and
cld
out
js
mov
push
add
xor
call
xchg
retf
out
jae
jmp
push
aaa
pop
mov
jmp
fidivr
inc
xor
rol
xchg
(bad)
jle
pop
es
push
jmp
xor
adc
xlat
leave
gs
cmp
fdiv
mov
mov
push
mov
mov
nop
cmp
and
movs
shr
aas
xor
imul
(bad)
rol
popf
and
and
loop
jp
inc
daa
cdq
inc
pusha
(bad)
cmp
imul
sbb
or
mov
hlt
inc
mov
repnz
push
ins
aam
(bad)
movs
inc
xor
dec
iret
(bad)
push
ss
jno
mov
(bad)
xchg
mov
out
mov
push
sar
ret
jno
pop
not
loope
and
sete
rol
pop
cli
jnp
inc
mov
movs
inc
sti
jne
xchg
dec
retf
fwait
jl
cmp
push
sub
mov
push
xchg
add
jne
inc
sbb
nop
sub
stos
bound
jge
(bad)
jmp
cmp
sbb
push
cmp
lea
clc
mov
dec
hlt
out
push
fldenv
(bad)
xchg
daa
cmc
cmp
pusha
jmp
cmps
and
cmp
xchg
mov
adc
ret
stc
mov
fcmovnb
clc
(bad)
push
mov
nop
jae
stos
inc
or
add
popa
aad
das
push
sub
outs
(bad)
and
leave
and
cmp
retf
dec
push
(bad)
int
scas
jns
and
fnsave
push
jae
cmp
jecxz
aad
mov
cmp
push
leave
mov
xchg
(bad)
in
xchg
loop
dec
add
inc
push
mov
jg
mov
loopne
xor
mov
cdq
retf
mov
out
pop
cmps
stos
inc
movs
(bad)
pop
cli
ret
and
xchg
sbb
mov
sub
out
or
adc
or
sub
and
xchg
jg
mov
dec
mov
adc
mov
mov
jb
and
cmp
or
jbe
xchg
repnz
mov
iret
lock
jb
repz
dec
sahf
ds
and
jg
arpl
cmp
not
iret
xchg
xlat
xor
mov
jbe
inc
pop
adc
getsec
or
pushf
mov
lock
push
cmps
mov
mov
pushf
sub
mov
rcr
mov
sub
push
mov
push
add
add
dec
or
sbb
inc
test
enter
outs
xchg
or
adc
push
mov
dec
sbb
mov
mov
add
fwait
out
and
push
scas
or
sbb
(bad)
and
pop
or
cmp
jle
aaa
arpl
ins
repnz
loopne
fs
dec
fs
repz
(bad)
mov
pop
dec
push
pop
pop
ror
jp
or
jb
pop
fiadd
imul
and
fldcw
dec
xchg
jecxz
sub
sub
push
arpl
push
out
mov
pushaw
push
sub
jp
add
mov
xchg
retf
out
adc
jbe
ror
cmps
call
xor
stc
lods
jne
sbb
push
cdq
and
cmp
fadd
add
gs
mov
ds
push
mov
jae
jmp
push
adc
or
sti
jns
in
in
call
ins
out
dec
inc
call
cmp
sub
xor
fnstcw
cdq
and
mov
mov
ds
fcmovnu
pop
sbb
int
das
mov
xor
mov
fucom
das
jns
adc
xor
cld
sahf
xchg
lahf
sbb
scas
js
es
xchg
fstp
sub
ficomp
dec
push
xor
or
mov
xor
push
jecxz
jns
mov
xor
dec
or
add
int3
fmul
pop
cwde
jno
out
inc
mov
(bad)
jb
out
ss
loope
retf
xor
loope
iret
jmp
rcl
cvtdq2ps
mov
or
lods
dec
sbb
pop
stos
mov
and
popa
dec
push
movs
ret
push
call
retf
cmp
jg
push
pop
pop
push
adc
(bad)
je
xor
xor
ficomp
push
out
dec
retf
imul
into
sbb
or
popa
mov
xchg
or
pusha
fwait
cmp
and
call
pop
(bad)
js
xchg
xchg
add
lods
xchg
xor
cmp
pop
and
dec
bound
mov
dec
call
push
scas
xchg
ins
ss
out
dec
adc
faddp
pop
mov
mov
and
xor
idiv
cmps
cmc
jmp
and
jmp
cdq
pop
leave
push
jg
push
or
xchg
adc
call
popa
cwde
ss
dec
jp
ret
mov
retf
loope
int3
mov
scas
(bad)
mov
jmp
pop
jmp
retf
xor
xchg
mov
das
dec
pop
mov
ja
out
loope
sahf
push
ficom
cs
pop
adc
shl
cli
xor
xor
push
inc
jmp
cmp
or
push
pop
xor
mov
jp
adc
pop
xchg
and
call
jbe
mov
sub
icebp
pusha
test
cmp
push
inc
leave
cmp
retf
add
sbb
in
mov
jmp
cdq
push
pop
jg
lods
(bad)
test
push
or
imul
cmp
stos
cmps
dec
in
aas
push
mov
xchg
fnstenv
pop
sbb
cmp
sbb
lahf
sub
(bad)
xlat
std
add
cmp
sub
popa
mov
sbb
jmp
push
repz
mov
jg
je
in
push
ins
push
dec
mov
out
push
xchg
mov
hlt
jbe
mov
(bad)
movs
mov
adc
inc
fld
pop
pop
add
pushf
stos
call
or
and
call
xor
add
int3
lahf
mov
inc
xchg
popa
pop
mov
mov
movs
ins
pop
and
add
out
and
daa
pop
sub
jbe
or
stos
xchg
adc
fld
adc
lock
dec
les
jo
cli
loop
xor
cmps
popa
lods
pop
xlat
vmulsd
movs
aas
mov
clc
mov
ret
or
and
push
push
test
aad
push
repnz
std
test
(bad)
cli
mov
pop
sub
repnz
loop
in
and
adc
inc
sbb
and
repnz
mov
sub
outs
cmc
add
out
or
push
jo
push
inc
sbb
loope
arpl
cdq
stos
push
daa
jmp
sub
xor
loope
push
sub
sbb
jmp
xchg
adc
mov
cli
fbstp
mov
jae
stos
mov
cmp
push
stos
les
inc
add
les
cmp
add
mov
pop
pop
sar
or
cld
add
cld
retf
xchg
and
aad
mov
adc
mov
pop
fsubr
movs
adc
push
pusha
xor
sti
in
push
xchg
adc
ds
xchg
push
int
jo
add
dec
mov
push
pop
dec
rcr
sti
adc
lock
hlt
into
lods
and
sbb
mov
sahf
sub
xor
mov
xor
ja
test
sbb
and
mov
scas
inc
pop
xor
ds
call
and
add
push
dec
mov
add
std
scas
hlt
push
pop
scas
jno
jb
mov
(bad)
lock
xchg
adc
cmp
pop
out
and
mov
(bad)
sbb
(bad)
xchg
add
dec
xchg
js
test
aam
ror
push
cld
rol
mov
cmps
test
inc
cmp
push
jns
mov
das
pop
mov
ins
mov
lahf
mov
call
mov
cmc
mov
cld
lds
rcr
cdq
mov
movs
jecxz
adc
in
xor
mov
and
es
xor
jmp
lea
(bad)
lods
stos
test
stos
in
xlat
cmp
or
loope
dec
sub
imul
nop
dec
retf
xrstor
out
mov
jmp
dec
or
ret
stc
sub
jle
push
dec
and
xchg
ins
sub
adc
mov
push
les
dec
ins
ror
rcl
mov
sub
cli
jmp
push
in
or
xchg
jl
push
inc
mov
dec
je
sbb
cmc
les
nop
ja
iret
sbb
bnd
fstp
mov
xor
dec
pop
idiv
inc
rol
movs
mov
and
lods
jmp
xchg
mov
mov
push
lahf
sti
jle
mov
or
xor
popf
inc
mov
jl
jle
xchg
push
int
jbe
add
out
fimul
jl
sub
cmp
xlat
add
push
cmp
dec
clc
and
cmp
dec
loope
mov
mov
jl
jb
add
shl
cmp
stc
jne
mov
jp
bound
sbb
cmp
xchg
cmps
icebp
addr16
xchg
stc
push
mov
dec
mov
test
rcr
js
sub
fimul
sub
cmp
call
adc
iret
jl
push
mov
fneni(8087
jecxz
rcr
jo
cmp
lods
push
push
inc
in
ja
fcmove
mov
hlt
jmp
aaa
cmp
mov
in
mov
stos
cmp
(bad)
sub
lea
popa
sti
iret
ret
setb
loopne
ins
ds
cmp
retf
push
mov
push
rcr
cwde
ret
(bad)
hlt
ins
mov
nop
xchg
add
sbb
cmp
pushf
and
jae
test
out
pop
fst
dec
inc
fwait
ins
outs
mov
adc
cli
(bad)
sbb
mov
jbe
test
dec
(bad)
mov
sbb
out
cmp
dec
retf
mov
bound
push
rcl
int3
out
mov
jns
jns
jmp
movs
das
(bad)
arpl
mov
pop
jle
rcr
push
cmp
sti
retf
mul
bound
jp
jo
jg
pop
scas
loopne
sar
push
push
add
mov
mov
dec
jmp
into
nop
imul
sti
ins
outs
dec
jl
jnp
int3
cli
sub
jno
fs
xor
call
push
in
dec
jbe
sub
inc
rol
jnp
test
lock
test
jns
pop
fld
mov
dec
xchg
inc
clc
arpl
dec
into
mov
cli
push
data16
jg
icebp
pop
mov
outs
pushf
push
out
push
lods
mov
cmp
(bad)
imul
add
sub
fsin
pop
dec
loope
mov
xchg
fdivr
sbb
lods
pop
rcl
jnp
and
scas
fdivr
(bad)
in
sti
xor
lahf
sbb
inc
mov
xchg
test
rol
sbb
pop
xor
or
push
or
and
lock
xlat
daa
ficom
js
dec
lock
jbe
adc
(bad)
sub
mov
loop
adc
inc
cmp
mov
dec
jbe
shr
xor
loop
and
pop
dec
data16
leave
fdiv
mov
hlt
out
and
stc
adc
dec
or
jo
mov
call
and
xchg
mov
xchg
add
sahf
int3
ds
pop
sbb
retf
jo
dec
adc
and
ds
sbb
aad
add
cmp
inc
ins
inc
out
outs
push
loop
dec
stos
mov
mov
mov
mov
movs
jg
mov
test
sti
in
jmp
popf
cmps
out
jb
(bad)
test
in
and
or
stos
aas
fwait
xchg
mov
fisttp
(bad)
lock
clc
xchg
clc
in
jno
dec
add
or
xor
mov
(bad)
fldenv
cwde
les
adc
(bad)
mov
and
dec
fucomip
leave
sbb
jmp
xchg
xchg
push
pop
loope
scas
jecxz
aaa
and
jle
pop
adc
mov
xchg
push
pop
fdivr
mov
(bad)
push
lock
aaa
xchg
stos
jo
jle
pop
fstp
aad
(bad)
or
mov
adc
pop
xchg
pop
inc
imul
mov
jmp
dec
lea
lahf
xor
mov
retf
shl
outs
mov
sbb
adc
data16
mov
mov
jmp
pop
enter
push
outs
push
sub
loope
enter
add
fiadd
jbe
or
xor
cmp
jbe
mov
and
outs
into
cmp
cmp
lock
or
dec
scas
adc
mov
and
xor
jnp
or
std
in
and
lahf
cmp
mov
cli
(bad)
or
inc
aaa
cmc
sub
mov
and
jne
inc
inc
and
fdiv
push
mov
cmps
outs
jnp
push
adc
daa
hlt
adc
mov
xchg
(bad)
jge
xchg
mov
cmp
push
dec
sbb
test
push
dec
sub
mov
js
inc
and
cs
or
xchg
xchg
mov
cmp
call
or
cmc
mov
jg
fistp
rcr
jns
inc
ins
jmp
or
(bad)
pop
cmps
rcr
xchg
fwait
jge
ins
ins
sub
push
sbb
jecxz
mov
outs
cmp
xlat
ins
mov
sti
jno
adc
jmp
xchg
cmp
xor
(bad)
xchg
aaa
cdq
mov
inc
loope
leave
dec
pusha
retf
adc
dec
cld
cli
add
xchg
rol
xor
outs
dec
fwait
jl
lods
jno
into
fist
dec
and
mov
cmp
cmps
sbb
jp
sar
in
fs
push
mov
pop
ss
mov
mov
push
xchg
jb
stc
pop
xchg
push
jecxz
fwait
dec
sub
in
inc
push
jge
mov
mov
nop
sbb
in
mov
rcr
sub
loopne
loop
in
fucomi
cdq
dec
sbb
jne
mov
xchg
jp
adc
outs
mov
enter
inc
nop
into
cmp
xchg
sub
add
ret
loope
mov
cmp
jb
retf
adc
inc
(bad)
mov
pop
mov
cmp
adc
inc
sub
pushf
xor
fcom
push
test
or
jo
xor
cmp
jecxz
sub
and
cld
lea
test
fdiv
and
sbb
es
gs
fistp
loop
ins
out
mov
pop
into
test
out
lock
mov
add
ja
in
inc
fild
lds
js
xchg
sbb
int
es
ja
mov
mov
in
cmp
fidiv
movs
ret
ja
xor
xlat
inc
(bad)
cmc
addr16
jmp
jno
push
mov
xchg
fist
push
dec
or
in
xor
(bad)
retf
cld
fs
cli
(bad)
in
inc
push
jo
movs
push
bound
push
popa
popf
es
test
fiadd
movs
call
movs
(bad)
je
in
jl
mov
inc
pop
or
mov
inc
scas
add
add
lock
sbb
mov
retf
sbb
sti
mov
nop
or
shl
xor
into
test
push
dec
inc
daa
cmp
jo
jmp
imul
lea
mov
iret
mov
test
test
fucomp
dec
das
icebp
mov
add
push
ds
fisub
xchg
mov
jle
pop
lds
cli
xchg
lods
and
and
jb
fmul
mov
sub
outs
pop
dec
shl
adc
sbb
ret
scas
pushf
popa
fsubr
addr16
inc
lods
pop
fnstcw
ficom
out
jl
lahf
and
xor
dec
fs
aam
retf
xor
cli
cmps
imul
es
push
mov
rcr
xchg
jl
ja
push
xor
xchg
and
icebp
xchg
jae
jno
or
push
push
repnz
mov
gs
and
jle
fdiv
lods
stos
xor
xchg
mov
movs
mov
or
call
dec
jo
lock
pushf
not
xchg
fld
cld
shl
icebp
fistp
sbb
xchg
jl
nop
jecxz
mov
rol
dec
lock
pop
push
mov
xchg
jge
jmp
cmp
out
sub
mov
imul
out
add
ror
loopne
jns
mov
push
sub
jb
cmp
inc
push
jne
(bad)
int
repz
int
leave
dec
out
loopne
rol
add
(bad)
rcl
mov
in
sbb
dec
inc
stos
inc
imul
jne
lods
xchg
in
jb
fcom
pop
push
xchg
gs
cwde
mov
ds
imul
mov
mul
sbb
cs
cmp
push
int3
mov
dec
push
int
sti
int3
jae
shr
push
xor
leave
and
pop
mov
sub
pop
call
inc
dec
cmp
out
push
push
(bad)
adc
and
fwait
xor
jo
mov
xchg
pop
jle
sbb
add
xchg
imul
ja
test
push
inc
jmp
(bad)
aad
(bad)
push
xchg
test
add
sub
and
sbb
push
(bad)
jmp
call
addr16
fcmovnu
xor
hlt
mov
lahf
push
cld
lea
(bad)
popf
and
outs
jecxz
cdq
mov
in
loop
out
mov
imul
test
cli
jo
ret
fisttp
push
adc
push
or
mov
pop
fnstsw
ror
sar
loop
iret
mov
mov
mov
repz
mov
pop
dec
inc
mov
jp
mov
fadd
loope
stos
dec
xor
(bad)
(bad)
jmp
sub
aad
popa
jb
or
push
loopne
jp
push
jecxz
aad
rcr
sub
int
inc
inc
cmp
aas
sbb
xchg
lds
into
in
add
sub
fdivr
or
or
cmc
jmp
mov
push
xor
and
mov
jns
and
movs
(bad)
mov
int3
cmps
jp
(bad)
or
dec
mov
clc
(bad)
sti
adc
scas
and
sbb
imul
push
lock
fcom
mov
push
xchg
add
jbe
gs
gs
cli
add
xchg
lock
push
repz
or
dec
sub
outs
mov
fmul
retf
or
fisubr
mov
pushf
mov
(bad)
xchg
pop
in
push
je
popa
rcr
movs
dec
aad
pop
in
cmp
add
cmp
dec
fdiv
sbb
call
dec
mov
mov
jo
jecxz
xchg
(bad)
movs
and
push
in
xor
leave
mov
icebp
cmc
les
jne
hlt
sbb
add
and
fiadd
mul
popa
and
sbb
sahf
jge
adc
fsub
jbe
xor
and
imul
jmp
jno
aaa
movs
add
sahf
loop
mov
aas
test
lock
rol
push
push
aas
in
xor
lds
fadd
cmps
adc
outs
(bad)
jmp
lods
(bad)
pop
push
sub
shr
cwde
cmp
add
mov
imul
add
add
call
popf
movs
neg
lods
fist
sbb
retf
retf
mov
or
aaa
hlt
sbb
jae
mul
xor
xchg
inc
outs
enter
and
pop
xchg
out
and
sbb
jg
arpl
outs
xchg
push
loop
cli
jno
fist
out
ja
pop
out
outs
shr
cmp
dec
or
int
imul
int
ss
add
rol
iret
shr
xor
xor
xchg
add
icebp
jmp
ror
push
fidiv
push
rcl
sahf
ja
push
imul
mov
mov
pop
aaa
push
scas
dec
or
je
into
mov
pop
sar
xor
mov
inc
fcom
out
fistp
cmp
mov
popf
add
pop
inc
add
dec
dec
in
sub
jecxz
ins
addr16
addr16
xchg
xchg
inc
mov
inc
cmovno
out
fnstenv
xchg
lock
pop
pop
aam
xchg
daa
push
sub
imul
and
jmp
mov
adc
add
adc
sbb
inc
push
rcl
call
pop
fadd
cdq
mov
movs
jge
ret
movs
shr
mov
xchg
push
ja
or
in
test
jge
enter
pushf
movs
data16
fcmovbe
int3
ins
jno
sub
sbb
pop
mov
rcl
call
cmp
or
daa
cmp
inc
out
aad
add
push
lock
add
xchg
lock
imul
xchg
adc
shl
shl
pop
fisubr
inc
push
(bad)
mov
test
pop
cwde
aaa
sbb
push
rol
stos
mov
xchg
mov
xchg
int3
jno
sub
sub
lds
cli
jne
in
mov
(bad)
or
rcl
mov
(bad)
popa
jge
inc
mov
add
push
out
jp
jmp
jbe
fwait
jmp
sbb
aam
pop
cmp
in
cmp
mov
push
xor
jne
add
jmp
push
stc
(bad)
jo
push
xchg
mov
push
imul
pop
outs
aas
arpl
and
loopne
adc
sbb
push
std
cwde
dec
shl
and
xor
xor
push
fpatan
in
test
add
dec
lahf
cmps
xor
pop
or
in
cdq
cmp
js
push
ret
(bad)
xlat
stos
sti
inc
mov
int3
fadd
jl
mov
in
cmp
jl
sub
dec
popa
adc
(bad)
jmp
inc
mov
jbe
fdiv
lea
dec
cmp
cmp
outs
out
or
outs
mov
add
and
adc
xchg
(bad)
pop
scas
or
cmp
mov
jge
or
out
dec
mov
or
adc
(bad)
xor
or
mov
xor
sub
in
cmps
jecxz
add
repz
(bad)
gs
(bad)
adc
add
inc
xor
loopne
mov
ficomp
jne
jmp
mov
(bad)
jns
(bad)
push
push
cmc
stos
push
mov
mov
inc
sub
pushaw
test
fdivp
jnp
and
ror
cmp
scas
add
and
sub
call
mov
test
pop
inc
add
loope
xchg
lds
popa
jbe
cdq
pop
test
push
pop
pop
xor
mov
xor
inc
in
cmp
sbb
mov
aas
and
aas
sbb
hlt
in
sub
mov
loop
push
and
shr
call
pop
mul
dec
cdq
jmp
dec
jno
adc
data16
mov
jne
cmc
fdivr
jle
and
push
xchg
inc
push
imul
adc
leave
jge
fistp
mov
cld
loope
sbb
xchg
mov
jno
or
xchg
stos
stos
hlt
sub
aas
pop
not
es
dec
push
inc
jnp
push
jge
jo
xlat
std
pusha
sbb
leave
xchg
xor
inc
rcr
xor
inc
inc
fist
in
push
xor
imul
popf
mov
or
ins
dec
ror
push
adc
test
dec
xchg
xchg
lock
fidivr
jnp
adc
push
(bad)
fld
cmp
out
pop
sub
mov
xchg
emms
mov
adc
cdq
in
les
les
popf
pop
pop
call
jmp
ins
ss
inc
mov
and
pop
int
int
(bad)
cs
jmp
and
(bad)
(bad)
xchg
mov
fiadd
(bad)
xor
xchg
and
enter
add
sub
mov
jg
cmps
add
test
fisttp
inc
push
ror
scas
push
shl
movs
xchg
sbb
and
stc
jl
mov
in
add
gs
outs
test
repz
add
stos
sub
jae
mov
adc
out
sbb
pusha
mov
push
call
mov
sub
aas
and
mov
mov
add
adc
int
add
lahf
or
hlt
imul
sbb
ror
pop
pushf
(bad)
fild
ja
mov
sub
mov
xchg
in
xchg
mov
out
or
push
aaa
test
rcl
mov
div
ficom
in
ret
push
lods
inc
loope
lds
shl
mov
sub
mov
jecxz
int
rol
jnp
mov
push
dec
mov
xor
test
aam
cmp
pop
or
movs
and
adc
mov
dec
(bad)
pusha
(bad)
jo
adc
cmps
pop
jbe
add
movs
dec
loopne
push
inc
add
xchg
push
in
out
push
adc
je
jg
adc
cmp
loopne
push
in
mov
stc
imul
adc
pop
jo
cmp
fnstcw
sub
dec
xor
add
lods
pusha
sbb
fcmovbe
or
pop
xor
mov
jg
(bad)
repnz
fidiv
addr16
enter
rcr
dec
dec
out
sbb
xchg
pop
imul
inc
adc
sbb
adc
cmp
scas
pop
sbb
(bad)
pop
arpl
mov
outs
popa
jge
jle
in
mov
add
jg
jl
fdivr
gs
push
inc
aad
(bad)
loope
jbe
pop
jmp
mov
nop
jecxz
out
je
ror
push
inc
and
cmps
mov
jno
jo
add
push
(bad)
cmp
inc
jmp
shl
sbb
sar
cmps
xchg
fsubr
sub
jge
mov
repz
xchg
dec
sub
ret
mov
add
push
dec
add
lock
push
xchg
je
mov
shl
pop
mov
adc
sbb
cmp
push
jnp
push
repnz
jp
mov
mov
loop
ret
or
xor
inc
dec
pop
sub
sbb
adc
outs
pop
jno
cmps
cmp
pop
clc
inc
cmps
add
jp
retf
int
test
sbb
lea
mov
jns
fstp
add
(bad)
mov
clc
adc
mov
frstorw
fimul
dec
jo
pextrw
mov
and
repnz
push
and
(bad)
in
jp
test
out
(bad)
mov
lahf
push
pop
push
dec
adc
xchg
cmc
xor
add
xor
daa
dec
loope
xchg
push
xor
push
sti
xor
icebp
xchg
and
push
add
lea
(bad)
std
xor
ret
push
xor
adc
mov
push
jo
pushf
les
es
(bad)
movs
mov
cmps
movs
es
aaa
into
or
retf
lea
ins
div
mov
push
lods
sub
in
push
add
mov
in
mov
icebp
(bad)
xchg
and
call
xchg
and
sbb
and
imul
push
mov
out
mov
or
add
pop
sbb
cmps
aam
and
pop
mov
or
cli
out
enter
and
rcr
or
ds
cmp
std
shl
pusha
gs
out
sub
pop
fs
test
icebp
call
xlat
and
ins
sbb
into
mov
daa
ret
cmps
call
repz
xor
dec
(bad)
or
xor
cmps
pushf
dec
cmps
fiadd
iret
mul
mov
aas
je
out
jno
or
mov
imul
mov
or
jmp
pop
lods
sbb
ret
stc
loop
fadd
push
imul
cmp
sub
(bad)
sbb
je
ficomp
out
shl
fcomp
sbb
mov
or
retf
pop
xor
xor
addr16
mov
loope
cmc
inc
cmp
xchg
sti
jmp
int
not
fcmovbe
(bad)
and
pop
xchg
in
ret
not
inc
jp
or
(bad)
dec
xchg
pop
test
pop
data16
mov
sbb
mov
jno
shl
test
ja
out
shl
mov
jmp
mov
popa
push
adc
dec
(bad)
add
dec
mov
and
sub
fs
push
adc
push
mov
cmps
aam
ret
je
sahf
loopne
and
adc
call
js
and
push
xor
pop
movs
call
push
inc
dec
jns
rol
bound
mov
or
push
scas
mul
test
lea
cdq
rol
imul
test
ret
push
inc
jo
adc
test
xchg
loope
jae
mov
fldenv
cmp
pop
(bad)
cmp
data16
mov
xlat
test
aaa
pushf
icebp
stos
fsubr
sub
(bad)
iret
push
xchg
es
xchg
iret
sahf
or
iret
aas
shr
pop
stos
cmp
dec
(bad)
jbe
push
mov
push
cmc
loopne
inc
ja
inc
sysexit
stc
adc
(bad)
sti
pop
inc
mov
inc
test
(bad)
fwait
loop
or
mov
sbb
mov
loopne
mov
icebp
add
aad
nop
inc
inc
dec
inc
jb
push
inc
cmps
xchg
test
std
push
sub
ret
mov
dec
pop
pushf
push
mov
add
and
jbe
call
jg
push
xor
mov
fwait
daa
inc
aam
std
lods
out
aaa
inc
ja
rcl
fs
add
lds
xchg
ins
pop
pushf
lods
xchg
dec
movs
imul
xor
add
bound
jnp
das
inc
mov
pop
retf
push
cmp
mov
nop
mov
mov
mov
leave
sub
sbb
adc
xlat
cmp
add
jp
dec
leave
mov
and
pushf
pop
repz
jae
xchg
xor
xchg
sub
pushf
icebp
jno
cmp
test
(bad)
inc
or
mov
ds
enter
dec
xor
call
in
pusha
mov
inc
scas
and
jae
adc
sbb
imul
sbb
mov
xchg
sti
imul
adc
jge
loopne
clc
adc
xchg
mov
cmp
retf
cli
and
aas
repnz
push
jp
push
adc
in
pop
jo
jp
(bad)
jp
pop
jg
mov
call
mov
dec
mov
ja
scas
xchg
lds
xchg
and
leave
loopne
add
(bad)
mov
test
jge
mov
pop
pop
hlt
rcr
jecxz
ss
test
daa
movs
mov
(bad)
in
jne
daa
jmp
(bad)
xlat
loope
stos
push
loope
into
scas
inc
mov
add
iret
leave
int3
das
pop
ins
in
mul
rcr
test
pop
cmp
xor
leave
popf
pop
es
inc
jb
xor
mov
mov
mul
sar
scas
xchg
das
push
and
dec
std
mov
add
pop
or
call
(bad)
retf
ins
icebp
push
aad
jmp
imul
pop
mov
lods
imul
scas
fdiv
dec
cmp
adc
xor
repnz
and
adc
jae
or
loopne
add
or
(bad)
push
das
outs
gs
addr16
movs
sbb
les
push
pushf
outs
xor
mov
pop
test
xchg
test
jmp
or
jns
ss
(bad)
outs
mov
out
clc
lea
out
xchg
fiadd
rcl
fstp
xchg
dec
leave
xchg
dec
xchg
push
push
dec
repz
sbb
dec
enter
out
jmp
ins
(bad)
call
fsubr
lods
psubusb
das
fxam
in
xchg
inc
(bad)
jmp
and
sahf
or
mov
lahf
lods
pop
call
mov
pop
pop
push
call
xor
aad
cmp
mov
jmp
mov
mov
add
pop
push
pop
test
dec
imul
xchg
fs
add
jns
cwde
adc
(bad)
inc
mov
je
fcom
push
mov
sub
or
rcr
mov
sbb
mov
sub
mov
push
inc
jae
es
mov
cmp
mov
sub
push
jnp
movs
call
jb
xchg
cmps
mov
repnz
cmp
or
jl
mov
pusha
in
movs
clc
sbb
cmp
mov
por
cmp
jae
add
push
adc
movs
add
(bad)
fbstp
push
or
pop
(bad)
push
dec
inc
cmove
bound
add
jo
push
pop
enter
inc
xor
xor
add
push
mov
and
inc
gs
inc
xor
cs
nop
fstp
jne
test
nop
js
jb
cld
mov
xor
ins
retf
loope
push
adc
shr
(bad)
je
xchg
arpl
je
sbb
hlt
inc
mov
test
mov
call
or
mov
cmp
shr
sbb
inc
lods
mov
cmps
out
xor
or
cmp
sub
push
out
cld
movs
test
push
dec
cmp
pop
mov
(bad)
mov
inc
lahf
xchg
shr
addr16
retf
out
(bad)
repz
sar
or
jbe
mov
dec
sbb
pop
dec
addr16
sbb
sub
ins
push
(bad)
xchg
js
xchg
mov
pop
adc
lods
dec
(bad)
xchg
xchg
into
jns
inc
mov
jo
or
sahf
nop
and
call
xor
into
mov
cmp
test
scas
mov
sbb
pushf
push
and
sbb
mov
outs
je
stos
mov
inc
cmp
or
fcomp
test
mov
(bad)
in
sub
call
and
test
ins
in
jne
aam
das
xor
aam
xor
pop
pushf
adc
mov
(bad)
mov
lock
mov
sbb
int
call
jg
int3
pop
shl
adc
mov
or
push
div
imul
inc
fild
push
adc
sahf
xchg
jne
jo
fstp
mov
mov
mov
mov
xchg
ss
shl
mov
inc
adc
dec
add
iret
lock
(bad)
fadd
je
jnp
push
outs
nop
dec
dec
rcr
dec
imul
cmps
cli
js
dec
repz
loope
in
pusha
dec
xor
(bad)
dec
cwde
cdq
pop
in
test
jecxz
pop
les
cld
lahf
leave
fwait
push
int
jae
out
push
(bad)
fs
pop
ja
(bad)
jae
push
(bad)
push
data16
lods
xor
cmp
mul
inc
movlps
in
(bad)
bound
jmp
jbe
and
add
xor
and
sbb
(bad)
loope
das
cmp
sbb
sbb
mov
loopne
push
xchg
int3
jnp
sub
pop
push
jmp
mov
js
ds
rcr
cld
in
xor
jnp
(bad)
pushf
and
int
pop
call
push
mov
sub
adc
je
stc
push
ror
repz
and
mov
retf
jb
mov
outs
mov
fist
and
jne
sbb
dec
imul
div
push
cmp
mov
pop
pop
repnz
sahf
mov
lods
mov
adc
mov
jge
adc
inc
movs
nop
lods
push
xor
inc
mov
test
(bad)
addr16
movs
mov
pop
mov
cdq
sub
sbb
pushf
cmp
test
ds
and
hlt
int
pop
sub
ret
loop
add
and
xchg
mov
cmp
push
xchg
dec
mov
inc
fs
cmps
inc
and
sub
ins
add
cs
cmp
test
mov
adc
dec
pop
ds
iret
push
xchg
and
les
inc
sbb
sub
xor
and
fld
movs
inc
mov
and
and
lahf
push
cmp
mov
push
cmp
mov
and
pop
test
add
test
mov
xchg
loopne
jecxz
jecxz
pop
pusha
inc
mov
sbb
scas
xchg
cwde
neg
loope
sub
mov
ss
aas
mov
mov
inc
nop
adc
inc
shl
mov
lods
repnz
jmp
cld
mov
data16
jmp
movs
jmp
xacquire
ss
add
in
dec
loop
ds
jecxz
push
lock
pop
xor
cld
xor
dec
leave
sahf
aad
(bad)
sar
cmp
stos
es
mov
popf
sub
fistp
mov
jecxz
xchg
mov
clc
je
add
xchg
sbb
jmp
inc
mov
ret
jle
push
xchg
cmps
adc
pop
aad
lock
pop
mov
push
jae
and
mov
inc
inc
jb
push
cdq
jbe
test
test
mov
sub
xchg
mov
jmp
aam
call
ss
jbe
or
test
or
adc
xchg
pop
les
sbb
lea
jge
cs
(bad)
pusha
das
lods
cmp
mov
push
mov
sar
jne
push
or
sub
jno
jle
mov
jmp
out
(bad)
push
mul
dec
and
in
mov
mov
cmps
add
aam
out
jne
stc
(bad)
fst
jle
push
jae
test
cmps
inc
xor
ins
cwde
adc
and
xchg
xor
ja
cdq
add
cli
mov
gs
scas
lahf
jl
push
mov
fstp
(bad)
jnp
or
imul
push
push
jg
adc
mov
push
mov
mov
push
test
imul
cs
jb
ret
pop
xchg
fdivp
mov
sbb
leave
xchg
add
jnp
aas
ret
mov
push
xor
push
je
jp
ja
nop
sar
lds
dec
es
pop
js
cmps
repz
ins
sub
add
dec
sub
xor
fwait
retf
shl
jnp
sbb
xchg
pushf
popf
leave
sbb
cmc
ins
mov
arpl
cmp
sub
mov
xor
inc
inc
sub
ins
inc
imul
inc
loopne
fiadd
pop
ret
movs
push
dec
sar
pusha
sub
loop
test
mov
retf
xor
fisub
xor
jo
in
mov
out
test
mov
mov
mov
mov
int
add
lock
cmp
sub
and
adc
addr16
cmp
les
lods
cdq
lock
or
(bad)
lods
(bad)
int3
xor
out
ret
pop
shr
stc
fsub
mov
out
push
fs
icebp
dec
sbb
pop
inc
dec
sub
cdq
test
imul
cmp
cmp
xor
dec
clc
mov
push
popa
jne
sub
pop
cmps
and
jae
xchg
pop
sbb
ss
mov
jge
jle
xchg
add
lock
xchg
add
jb
bound
out
jno
leave
lds
cli
xchg
sahf
adc
repnz
jp
(bad)
pslld
daa
push
lds
scas
das
or
mov
rcl
jnp
test
ror
(bad)
fistp
(bad)
xchg
pop
arpl
cmp
jmp
dec
jo
push
jo
(bad)
dec
ret
cmps
test
retf
cmps
mov
add
adc
std
repnz
xchg
xchg
xchg
dec
xlat
pop
ret
out
mov
in
psrlw
push
dec
xchg
and
mov
add
std
xchg
jmp
shl
cli
sahf
inc
ret
inc
and
lea
dec
pop
sbb
fwait
mov
inc
sbb
loop
pop
test
shl
loopne
out
push
out
out
pop
retf
and
popf
sti
pushf
add
and
mov
or
pop
into
lds
inc
popa
cmp
xchg
mov
mov
sub
pushf
mov
jo
dec
test
(bad)
cmp
mov
ins
and
ins
push
add
cmp
into
imul
in
repz
xchg
or
loope
mov
out
pop
sahf
and
frstor
sbb
add
adc
push
add
push
jg
mov
mov
in
in
aad
jg
push
movs
dec
imul
btc
ror
add
movs
mov
outs
fistp
aad
mov
add
jle
jno
push
and
sbb
jmp
ror
stos
mov
add
xchg
pusha
mov
mov
xor
in
loopne
pop
fisub
icebp
fisubr
sub
push
mov
xchg
fdivr
(bad)
retf
push
push
or
pop
inc
mov
ins
icebp
cmp
test
cld
iret
les
(bad)
mov
ds
jno
adc
sub
mov
dec
sbb
(bad)
ds
repz
or
dec
rcr
push
fs
xchg
imul
pop
mov
sub
pop
mov
pop
pop
(bad)
mov
repnz
inc
mov
into
out
mov
xor
call
(bad)
loopne
lods
cmp
es
mov
sbb
outs
rcr
lea
int3
js
pop
push
dec
dec
sub
cmps
jmp
test
fsubr
jno
cwde
iret
in
gs
rol
cmps
sub
test
add
mov
jb
daa
into
fisttp
push
lods
(bad)
push
jb
cmps
ja
xor
sub
lods
fldcw
pop
lea
push
lock
cmp
hlt
gs
ror
pop
dec
xor
int3
inc
ja
shl
cwde
pop
mov
and
dec
fsub
mov
je
dec
and
xor
sbb
xor
ret
pop
push
cmc
imul
daa
sub
lods
mov
jbe
jbe
aam
test
or
out
cdq
ds
mov
mov
fs
mov
aaa
mov
mov
mov
sbb
jmp
jle
xor
dec
sahf
mov
mov
lahf
cmp
add
or
bound
fdiv
inc
ins
idiv
ret
adc
cmp
popf
fcom
pop
test
imul
sub
ja
(bad)
pop
lock
imul
pop
and
(bad)
mov
dec
cdq
pop
push
fstp
in
retf
in
adc
sbb
das
in
(bad)
pushf
iret
mov
or
aam
push
loopne
adc
cmp
arpl
mov
sub
add
fist
and
mov
ret
lahf
sub
(bad)
cmp
pushw
call
jmp
push
cli
push
pushf
pop
lods
lods
enter
jae
mov
pop
jnp
movs
div
ins
call
sub
and
mov
sbb
add
lea
dec
dec
mov
repz
loop
pop
mov
dec
rcl
mov
or
sub
retf
sbb
xlat
aas
test
fld
jns
sub
mov
add
push
or
in
jns
fisttp
sbb
fidivr
jno
mov
rcr
adc
adc
test
sub
ja
sti
rol
inc
xchg
fmul
sbb
mov
adc
inc
jl
push
push
pop
cdq
and
shr
cli
pop
popa
pop
iret
scas
retf
mov
add
popf
rcl
sub
ret
aaa
jb
sbb
mov
fbld
int
xchg
ja
ficomp
push
jnp
nop
adc
imul
mov
dec
sub
xor
loop
sar
add
jne
dec
sub
imul
aas
xor
loop
iret
ret
and
adc
scas
or
mov
inc
rol
(bad)
push
jp
repz
push
or
sbb
dec
sub
add
inc
push
ins
fcom
pop
inc
rol
mov
aas
scas
mov
jl
in
jo
mov
(bad)
pop
dec
imul
fsub
push
aam
jle
fst
xor
cmps
stc
popa
mov
and
aas
int
jmp
hlt
push
inc
inc
dec
fistp
xchg
xchg
sub
pop
(bad)
(bad)
cmps
mov
adc
fbld
sub
pop
js
imul
or
cmps
mov
mov
popw
push
xor
call
in
or
add
ins
jne
xchg
mov
or
loope
adc
inc
test
jl
mov
imul
fcom
dec
out
repnz
sub
xor
mov
mov
mov
mov
add
fldenv
mov
in
ret
cmps
push
mov
test
fisttp
add
retf
inc
imul
push
xchg
and
jo
test
shl
fs
clc
shr
out
pop
inc
repnz
cmp
xor
in
out
sar
pop
push
stos
or
movs
fs
(bad)
icebp
(bad)
cmp
jno
das
pop
or
in
popa
mov
cmp
adc
jl
stc
les
enter
mov
xchg
popf
dec
add
imul
xlat
rcr
imul
out
fs
jbe
movs
aad
push
aad
pop
aas
std
jae
pop
xor
sbb
mov
add
sub
adc
push
out
les
test
sub
inc
push
popa
in
mov
(bad)
scas
inc
ja
mov
adc
mov
(bad)
or
xor
loopne
jnp
jnp
cmps
xor
pop
pop
push
repz
fimul
push
lock
cdq
push
ins
jg
and
jbe
mov
std
mov
dec
xchg
repz
inc
repz
(bad)
dec
and
ret
retf
pusha
pusha
xor
ds
sbb
sub
in
dec
inc
retf
inc
lods
mov
mov
fiadd
mov
ficomp
mov
jle
jb
xchg
hlt
dec
sub
xchg
imul
sbb
xchg
mov
mov
retf
and
fsubr
pop
fmul
mov
pushf
shl
inc
mov
mov
sub
inc
inc
mov
adc
pushf
inc
jb
in
cmps
int3
adc
fdivrp
and
out
aaa
sub
das
test
jnp
arpl
cli
jmp
xchg
push
mov
jecxz
in
ja
retf
sbb
test
pop
push
jne
mov
mov
cmp
mov
dec
xor
inc
imul
mov
cmps
jg
fstp
push
inc
clc
push
sahf
jle
scas
xchg
fsubr
je
mov
sub
test
cmp
test
ret
push
add
push
lahf
mov
cmp
sahf
call
sub
dec
outs
inc
clc
mov
jbe
lods
mov
lock
pop
dec
imul
outs
test
push
cmc
inc
xchg
imul
sbb
mov
pop
jae
jg
add
or
je
adc
mov
dec
bound
repnz
lock
inc
xchg
push
in
cdq
jb
enter
aaa
fistp
ror
outs
ret
aaa
(bad)
cmc
jb
mov
xchg
fcomp
(bad)
cmp
inc
retf
add
xor
sbb
push
inc
xchg
add
mov
rcr
pop
dec
adc
fsubr
enter
adc
xlat
scas
cwde
xchg
pop
in
bound
scas
sbb
xor
fist
scas
jmp
mov
and
add
sub
jle
and
jp
fwait
nop
jecxz
jge
xchg
cmc
adc
scas
inc
cmc
cs
popa
mov
cs
adc
shl
push
movs
jmp
xchg
push
push
call
aam
add
and
fadd
dec
cld
adc
push
or
or
mov
mov
movs
inc
movs
jnp
cmp
cmp
xchg
fcmovnbe
pop
cmp
mov
mov
inc
cmps
ret
xchg
jae
cmp
(bad)
mov
cdq
fsubr
mov
icebp
scas
mov
gs
push
mov
mov
add
adc
cmp
push
and
stc
pop
imul
lods
loopne
popf
daa
or
mov
pop
clc
jne
mov
mov
shr
retf
xor
dec
je
adc
jns
cmovp
call
adc
and
or
jns
mov
jge
xchg
into
jp
sahf
cmps
(bad)
imul
ret
push
aaa
mov
out
inc
cli
and
mov
sub
test
mov
int
inc
je
push
inc
mov
xchg
in
test
gs
pop
dec
shl
or
loop
ins
stos
adc
cmp
jb
movs
rcl
xchg
popf
sbb
jle
sbb
jp
inc
push
mov
cld
sbb
xchg
test
dec
or
mov
loopne
fxch
cmp
scas
mov
adc
in
loop
jge
push
jbe
sbb
(bad)
jecxz
in
pusha
fnstcw
jo
arpl
or
add
and
push
aad
call
in
enter
pop
pop
add
xchg
lds
test
mov
mov
repnz
cmp
outs
popf
push
xchg
dec
mov
sub
cdq
adc
mov
scas
sub
stos
lods
cli
add
call
fnstsw
push
ret
and
jmp
sbb
and
jle
(bad)
int3
icebp
int3
shl
jmp
and
dec
lahf
je
scas
xchg
movs
fldcw
in
xchg
test
mov
retf
inc
jle
call
jns
and
sbb
adc
or
cli
xchg
ins
sbb
xchg
das
jmp
cs
mov
jge
add
aas
mov
inc
lahf
lods
inc
sti
or
arpl
cmps
fst
xchg
fs
idiv
push
pop
adc
mov
push
pop
push
cmp
(bad)
(bad)
not
adc
imul
popf
sbb
add
popa
sahf
daa
cmps
pop
stos
fild
lock
xor
sub
aad
jnp
adc
outs
enter
pop
ins
(bad)
fdivr
jno
jb
inc
enter
cmps
add
cmps
dec
adc
in
dec
or
inc
pop
push
push
pop
pop
fidiv
fild
xor
xor
cmp
push
mov
push
sahf
pushf
pop
icebp
in
jge
inc
cld
test
jmp
xor
mov
outs
dec
mov
cmp
jg
in
clc
mov
adc
shl
jns
and
(bad)
mov
xor
or
sub
jmp
jp
mov
popf
push
or
mov
jmp
fwait
clc
je
or
pop
jg
test
lods
lahf
fldpi
mov
in
(bad)
shl
(bad)
xchg
pushf
xlat
rol
add
sub
jne
jb
or
cmps
dec
fst
repnz
cmp
mov
push
and
push
shr
test
xchg
mov
push
cmps
idiv
gs
jmp
push
cdq
cmp
inc
movs
xor
and
stc
cli
xor
mov
(bad)
enter
call
stc
arpl
add
mov
push
retf
sbb
push
ins
xor
push
and
pop
nop
mov
xor
mov
jmp
out
stc
push
pop
xor
mov
or
sub
mov
rcr
or
sbb
inc
xchg
and
pop
inc
sbb
push
fild
mov
loope
retf
scas
ret
xchg
dec
inc
fpatan
cmps
adc
xchg
push
repz
push
int3
sbb
dec
cmps
jae
sub
ja
jnp
imul
add
outs
inc
aad
lods
jbe
fnstsw
sar
cmps
cmp
push
mov
pop
dec
retf
push
stos
int3
adc
add
cmc
xor
xchg
mov
mov
retf
mov
popa
scas
ror
push
mov
cmp
in
inc
xchg
xchg
sbb
scas
iret
adc
cmp
ficom
push
inc
test
repz
mov
stos
pusha
(bad)
mov
fisttp
xor
add
pop
fs
stos
xor
pop
mov
pop
lea
and
inc
sbb
add
xor
jle
lahf
push
popf
out
clc
cmps
daa
jne
mov
or
outs
mov
push
repnz
rcl
pop
pop
fcom
inc
xor
fucomi
pop
add
add
mov
adc
pop
aam
jbe
lods
cli
stos
sub
mov
leave
mov
pushf
in
lods
xchg
inc
pop
pop
lods
pop
jge
inc
xchg
and
jmp
inc
add
mov
push
or
in
(bad)
fst
pop
inc
or
repnz
call
and
adc
aam
push
pop
sbb
push
ins
inc
cdq
(bad)
push
pop
push
mov
hlt
or
push
outs
imul
sub
xchg
adc
movs
sti
push
push
ret
cmc
xor
outs
mov
ror
lods
xor
and
adc
and
enter
adc
sub
or
push
dec
cmps
jmp
dec
ja
daa
and
xor
adc
icebp
and
sbb
push
push
inc
dec
jl
mov
xchg
and
push
jl
sahf
mov
mov
xchg
adc
into
pop
sub
pop
jb
fld
sub
ret
cld
and
jecxz
ja
pop
popf
sbb
ret
push
push
pop
dec
movs
xor
jle
dec
sub
pop
(bad)
pushf
or
stos
jbe
and
mov
sbb
iret
xor
out
rep
(bad)
call
fnsave
mov
cmc
es
call
xchg
out
pop
push
out
aas
pushf
jle
ret
sbb
movs
lahf
aad
push
lahf
(bad)
inc
gs
mov
xor
jne
js
jge
add
xor
xchg
clc
xchg
scas
lahf
dec
and
lea
mov
cs
ret
(bad)
jmp
adc
jbe
call
je
mov
mov
test
cmp
adc
sub
fild
mov
xchg
and
mov
or
(bad)
xchg
cmps
outs
sub
cmp
mov
fadd
mov
jg
test
inc
retf
dec
pop
and
scas
xchg
adc
das
in
jb
jno
ja
or
pop
add
call
cmp
mov
nop
in
in
dec
dec
inc
inc
push
(bad)
dec
mov
addr16
retf
loop
jl
test
in
aam
retf
mov
jecxz
outs
into
and
rcl
dec
cli
lods
ja
or
add
xchg
jmp
jae
daa
mov
int3
mov
jo
inc
adc
js
call
gs
cmp
xlat
ror
pop
mov
inc
std
inc
inc
imul
xor
inc
cmps
rcl
in
jl
(bad)
pop
jmp
inc
push
(bad)
sbb
popf
mov
jae
out
or
jo
cmc
inc
and
rep
ss
sub
in
aad
mov
fmul
icebp
jmp
sub
test
pop
pop
cli
cs
xor
repnz
xor
inc
test
mov
out
mov
test
mov
cmp
jns
mov
es
mov
mov
lods
adc
shl
dec
xchg
adc
mov
fdiv
out
leave
xlat
mov
ret
fnsave
test
jmp
int3
and
repnz
das
pop
test
in
adc
mov
movs
pop
push
or
and
adc
add
and
or
dec
aad
inc
aam
cdq
imul
mov
push
ror
push
pushf
jge
sbb
fwait
outs
and
lods
cmp
xor
loopne
rol
mov
mov
popf
cs
aam
or
std
mov
jo
push
push
jns
cmp
ins
pop
sub
push
enter
adc
nop
mov
imul
scas
in
mov
pop
fist
inc
loope
jge
jecxz
pop
add
sahf
enter
lods
das
shl
dec
rcl
xchg
and
in
sub
sbb
jae
ficom
mov
std
leave
das
jge
data16
pop
rcl
pop
adc
shl
inc
dec
jbe
pushf
and
pop
and
sub
popa
shr
shl
scas
test
xchg
lahf
ds
jnp
fs
mov
fnstsw
and
lahf
bound
fnstenv
dec
jp
ret
push
push
mov
lods
mov
js
pop
inc
loopne
sub
and
das
rcr
add
arpl
jo
or
sti
jmp
inc
fisub
mov
into
inc
and
adc
or
cmp
inc
fmul
inc
sbb
sub
ins
mov
dec
push
(bad)
xor
xor
inc
std
and
add
adc
cmc
mov
inc
xchg
ret
xlat
mov
pop
out
ror
adc
test
add
data16
outs
xchg
mov
jmp
xchg
xchg
(bad)
pushf
mov
in
daa
push
pop
mov
push
pop
mov
sub
adc
and
mov
gs
inc
mov
movs
repnz
aad
mov
xchg
scas
movs
lock
not
mov
popf
push
adc
xor
in
in
and
push
mov
movs
adc
bound
mov
mov
and
cmc
cdq
adc
jo
mov
mov
pushf
jp
inc
jne
mov
out
pop
jnp
xchg
xchg
jo
fs
push
dec
mov
fbstp
mov
dec
retf
dec
dec
sub
out
dec
push
xor
mov
cwde
sub
add
xchg
imul
aaa
mov
push
xlat
jno
fsub
jns
mov
mov
shl
mov
mov
fsub
inc
lods
ret
push
aad
push
cmp
ffree
or
adc
jg
mov
les
inc
clc
sub
lods
mov
imul
xor
adc
div
xchg
repnz
inc
pop
inc
stos
sbb
clc
mov
mov
push
or
cdq
in
test
xor
lea
cli
int3
test
test
xor
jl
push
(bad)
sub
pop
gs
pop
dec
pop
pop
mov
push
adc
out
and
es
pop
sbb
cld
(bad)
shl
sub
fimul
inc
jns
pop
xlat
sub
lods
fadd
sbb
adc
sub
jge
aad
inc
mov
fstp
add
and
push
adc
test
jo
lods
xchg
jmp
movs
xor
push
outs
or
jmp
adc
push
shl
push
push
outs
dec
fisubr
push
xchg
bndstx
inc
pop
mov
fcomp
enter
or
mov
outs
jmp
cmps
fisttp
fild
sbb
push
test
shl
pop
mov
popf
adc
inc
xor
shl
cmp
mov
ins
repz
or
test
mul
dec
test
cs
into
push
xor
add
adc
mov
in
loope
fcom
cmp
jbe
push
pop
sub
dec
jle
loopne
in
inc
adc
jg
gs
mov
jp
cli
in
scas
inc
aaa
push
dec
xchg
dec
(bad)
popa
mov
enter
shr
mov
outs
fld
xchg
imul
jae
lahf
fist
dec
(bad)
neg
adc
adc
addr16
sti
or
int3
fwait
jecxz
cmp
and
adc
sbb
shl
pop
and
inc
inc
fisub
cmp
add
into
cmp
cwde
gs
push
ret
and
xor
dec
xchg
or
sub
push
pop
push
xchg
mul
mov
mov
(bad)
imul
pop
sti
adc
and
adc
rcr
das
or
in
repnz
das
pop
cld
xor
or
xchg
dec
out
in
inc
in
das
dec
call
gs
sbb
sbb
xor
rol
mov
aaa
lds
dec
pushf
push
adc
pop
cmp
out
cmp
ret
pop
or
or
and
lods
dec
adc
push
cmp
sar
pop
movs
jmp
aaa
iret
jecxz
dec
mov
in
xchg
(bad)
sub
jg
add
or
mov
mov
push
lds
call
mov
fmul
jns
or
xchg
outs
call
call
inc
and
jp
jns
jns
retf
and
popf
sbb
sar
and
jo
xchg
mov
xlat
cmp
mov
leave
arpl
outs
arpl
mov
call
push
repz
pusha
test
mov
sbb
std
push
sbb
lds
dec
xchg
fcmovnbe
call
mov
jnp
imul
sar
in
adc
xchg
mov
fcom
jae
fistp
jno
pop
xor
ins
or
mov
jg
(bad)
push
(bad)
or
loop
mov
mov
ficomp
sbb
fld
out
and
or
retf
shl
and
out
dec
std
sub
sbb
push
mov
fldcw
data16
xor
sub
loopne
pop
adc
xor
inc
mov
cmp
inc
out
mov
and
cdq
adc
mov
xor
lahf
cwde
outs
mov
add
pop
addr16
mov
clc
mov
add
fwait
retf
jle
ss
jnp
daa
sbb
and
retf
leave
ror
xchg
je
aaa
or
in
je
cmp
sub
dec
lods
aaa
xchg
in
loope
sub
jno
int
into
xor
dec
cli
push
ja
mov
sub
bound
lea
jns
pushf
call
inc
nop
icebp
into
pop
xor
pop
jle
cmp
lahf
(bad)
adc
rcr
test
retf
cmp
and
push
inc
adc
jle
inc
cwde
(bad)
xchg
jne
sbb
lahf
fmul
mov
inc
xchg
push
hlt
int3
int3
retf
inc
jp
mov
add
mov
ja
arpl
jno
xchg
popa
shl
xor
sub
je
and
xor
out
out
(bad)
(bad)
gs
outs
imul
sub
fist
xor
(bad)
scas
mov
(bad)
scas
mov
pop
sbb
and
pop
int3
mov
loopne
(bad)
icebp
dec
mov
fisub
dec
push
fcompp
sub
or
pop
sbb
mov
popf
outs
or
fs
scas
push
xchg
mov
iret
push
dec
pop
mov
mov
call
jnp
jmp
jmp
mov
imul
inc
pop
adc
imul
jnp
jb
push
mov
test
sub
jmp
inc
pop
lahf
push
jp
xchg
mov
test
icebp
push
sbb
mov
cmp
inc
retf
xchg
nop
push
jl
stos
fiadd
xor
jb
fs
or
cmp
std
stc
fsub
xchg
retf
jmp
cmps
mov
call
movs
push
cmc
aam
popa
shl
adc
push
mov
cmp
stc
jbe
inc
fist
and
xchg
adc
mov
out
ss
push
stos
fld
(bad)
jnp
test
mov
iret
push
fidiv
jo
lods
fst
inc
sti
jg
out
retf
(bad)
sub
sub
mov
jecxz
imul
repnz
das
jg
movs
in
inc
retf
inc
cmp
xchg
jge
pop
test
pop
out
lahf
xor
mov
call
sbb
ins
xor
and
sti
mov
std
pop
xor
mov
push
pushf
loope
js
mov
add
push
movs
outs
mov
in
mov
pop
shl
mov
shl
inc
clc
cmp
rcl
jno
dec
je
mov
pushf
sub
jmp
lea
and
and
leave
je
add
in
fst
aaa
mov
in
jecxz
mov
jg
lock
ficom
mov
or
repnz
mov
(bad)
sbb
mov
enter
mov
xor
stc
and
adc
or
push
and
cs
out
cmp
xchg
or
rcl
and
pop
lds
or
pop
push
cdq
fsubp
jmp
iret
dec
xor
or
push
push
shl
dec
dec
sub
xchg
dec
les
fs
rcr
mov
imul
jge
loop
mov
out
xchg
in
inc
hlt
mov
pop
stos
jmp
iret
sbb
out
inc
fbld
ins
adc
lahf
xchg
rol
cmc
mov
addr16
inc
in
rcl
sbb
dec
call
(bad)
xor
shr
dec
jp
push
inc
mov
xor
jp
mov
fisubr
cld
cmp
repnz
stos
cmp
rcl
adc
out
(bad)
out
and
arpl
dec
pop
or
cmp
mov
nop
popf
jmp
dec
jmp
scas
int3
mov
out
pop
out
push
cld
imul
push
sub
pop
mov
cwde
shl
cmc
ds
movs
jne
adc
fcom
movs
or
movs
lods
xor
dec
push
sub
mov
imul
inc
xchg
adc
mov
xor
mov
xchg
mov
pop
sbb
test
loop
shl
ret
bnd
adc
or
inc
xchg
cs
sti
inc
cmp
retf
xchg
cmp
cli
mul
mov
xchg
aad
ins
or
push
xchg
popa
inc
xchg
push
push
loope
jg
hlt
xchg
xor
add
xor
mov
xchg
dec
jecxz
movs
ror
mov
fucomp
scas
mov
jge
fs
push
and
add
imul
retf
dec
fwait
ss
mov
aaa
(bad)
call
int3
push
sar
add
jne
jge
mov
out
pop
cmps
retf
fs
pushf
xchg
sahf
mov
call
mov
cmp
arpl
dec
xchg
iret
xchg
xchg
push
pushf
unpcklps
call
mov
test
push
cmp
sti
movs
jno
inc
icebp
out
mov
(bad)
hlt
das
pop
xchg
stc
hlt
mov
test
mov
std
cmp
sbb
mov
les
(bad)
popf
mov
and
aam
jne
adc
push
cmps
push
sub
jl
cmp
jo
xchg
movs
iret
xchg
test
mov
in
jb
mov
mov
fwait
cmps
jne
lahf
sti
pop
cli
cdq
idiv
clc
std
sbb
mov
movs
mov
ficom
push
fdivr
mov
lods
pop
adc
popa
sbb
pop
xchg
dec
jae
mov
sar
sub
jmp
cs
clc
(bad)
out
dec
jmp
jge
stos
ret
pop
fld
mov
xchg
xlat
or
push
clc
mov
adc
stc
stos
push
pop
xchg
mov
jmp
sub
ds
adc
add
pop
adc
data16
inc
adc
stos
test
shl
xchg
cmps
sub
push
cmp
cdq
mov
shl
inc
clc
add
int3
mov
push
cdq
inc
pop
xchg
jle
ret
sbb
mov
(bad)
sbb
sub
aad
out
repz
in
add
das
cmp
push
xor
mov
push
ficom
sub
loopne
inc
js
cld
mov
cs
xor
cmp
dec
jno
ss
add
aaa
dec
gs
pop
jb
xchg
add
fadd
aaa
nop
test
xchg
jecxz
fbstp
lds
adc
cmps
(bad)
xor
push
cmp
push
repnz
or
std
sbb
cwde
add
mov
sub
aad
lods
in
scas
and
adc
sub
mov
ret
loope
retf
jl
(bad)
repnz
pop
pop
inc
mov
xchg
fild
out
inc
fs
jnp
not
in
sub
cmp
cdq
jno
retf
fsub
dec
or
xor
add
jmp
add
lods
xor
push
sub
ins
pop
jne
jns
pop
mov
mov
mov
call
and
and
mov
pop
adc
les
fist
add
jp
inc
push
fdivp
pop
fadd
mov
mov
in
sub
xchg
cmp
test
or
sbb
out
test
xchg
dec
mov
mov
xchg
jno
push
pop
sub
dec
pop
jnp
xchg
sahf
add
das
sahf
(bad)
cli
adc
ficomp
cs
ror
pushf
out
or
or
add
cmp
mov
dec
mov
jmp
(bad)
jno
dec
pushf
sahf
adc
daa
inc
test
pop
(bad)
fcom
pusha
pushf
dec
rol
retf
mov
add
xor
sti
das
(bad)
add
in
add
daa
test
fst
mov
mov
rep
adc
cmp
xor
pop
dec
push
inc
aam
push
bound
sbb
inc
xor
cs
or
add
jmp
int
inc
stos
test
fisttp
mov
scas
jmp
xchg
pop
pop
cmp
xor
mov
shl
jge
add
mov
jne
mov
(bad)
cmp
adc
push
aas
pop
in
xor
sub
jbe
mov
sbb
push
cmp
push
les
push
sti
mov
ficomp
fsubr
cmp
or
fwait
and
mov
int
xor
and
and
pop
jae
dec
cs
push
xor
sbb
mov
fsubr
pop
cli
mov
jle
and
inc
mov
scas
jmp
mov
movups
add
movs
inc
push
cmp
add
push
mov
mov
sub
not
adc
dec
outs
and
sub
jg
fadd
rcl
call
xchg
add
iret
jnp
cdq
shr
xor
xchg
(bad)
je
int
ret
xlat
mov
ja
imul
push
push
fwait
add
pop
(bad)
repz
lahf
cmp
ja
dec
mov
aaa
mov
and
inc
test
aam
or
mov
movs
scas
mov
pop
cmp
out
nop
xchg
sub
adc
test
fsubr
(bad)
lahf
adc
sbb
pop
and
pop
add
cmp
jo
pop
pop
mov
sbb
mov
inc
inc
bound
fimul
dec
or
pop
push
xchg
xchg
dec
scas
sbb
mov
xchg
cmp
shl
aas
and
xor
std
and
mov
in
clc
std
mov
mov
mov
mov
jl
jle
mov
retf
dec
jno
dec
dec
adc
inc
mov
or
add
or
call
ret
mov
aas
int3
lea
call
pusha
mov
pop
ins
jge
inc
outs
cmp
mov
out
loopne
xchg
jb
add
stos
out
aad
popa
(bad)
and
pop
add
imul
repnz
adc
out
mov
inc
lea
xchg
sub
xchg
push
sbb
or
test
and
xchg
stc
dec
pcmpgtb
sar
arpl
lea
jae
push
retf
mov
push
xchg
or
xchg
jecxz
lock
pop
bound
sti
add
xchg
movs
and
pop
dec
lods
cmps
and
jle
in
and
sub
adc
mov
pop
cwde
js
stos
not
mov
fimul
cdq
xchg
xchg
stos
pop
aad
stos
lahf
jmp
cmps
nop
pop
cmp
fs
jnp
push
lock
(bad)
div
(bad)
in
imul
mov
lods
inc
push
or
ss
jo
pop
icebp
jb
adc
inc
test
adc
push
ror
fld
xchg
cdq
xor
push
xor
xor
adc
jae
jae
mov
sbb
xor
into
leave
sbb
sti
movs
mov
in
lock
push
cmp
jl
sbb
xor
xor
scas
sub
mov
xchg
inc
test
cwde
jp
jae
scas
xchg
out
out
mov
pop
inc
jmp
mov
add
outs
hlt
fs
fmul
popa
aam
jmp
pop
nop
ret
pop
xor
inc
lea
adc
sahf
jo
add
call
div
ret
mov
or
jne
mov
repnz
popa
in
mov
sbb
lods
sbb
outs
pop
xchg
pop
(bad)
add
push
daa
adc
sbb
mov
clc
neg
imul
ficom
mov
out
nop
and
in
aad
cmps
stos
retf
fdivr
pushf
mov
fisub
retf
mov
lds
jnp
aaa
inc
xchg
xor
xchg
out
cmp
xchg
and
sbb
out
jo
inc
sub
(bad)
shl
mov
add
(bad)
mov
in
dec
mov
call
imul
aad
cmp
je
xor
pop
sub
int
in
loop
ds
loop
cmps
fiadd
sub
cmp
arpl
push
cdq
cmp
sbb
sub
ins
ret
pop
pushf
xchg
mov
loop
fxch
jno
push
cmp
inc
sbb
sub
push
jle
cmps
mov
aam
cmp
adc
movs
push
xchg
std
fld
or
ja
aad
loopne
out
das
mov
add
pop
or
lahf
push
jl
cmp
pop
or
lods
ret
cmp
arpl
jno
xchg
aaa
inc
pop
bound
inc
mov
mov
adc
jl
iret
push
and
pop
aaa
xchg
inc
adc
xlat
int3
addr16
mov
iret
pop
retf
or
add
xor
out
loopne
mov
rol
pop
inc
jp
mov
or
inc
add
jge
test
cmp
stos
pop
sub
xchg
xor
add
pop
popf
sub
pop
(bad)
out
ret
xor
cmp
mov
popf
mov
sbb
leave
mov
pop
stc
mov
ret
nop
jmp
mov
adc
jae
adc
adc
push
lea
sbb
test
mov
jb
lds
pop
pop
call
pop
cmp
inc
(bad)
retf
pop
in
xchg
mov
push
out
je
xchg
lahf
das
xor
and
mov
cmp
pop
je
push
jnp
sbb
inc
imul
hlt
es
sub
fmul
pop
mov
shl
(bad)
(bad)
js
ins
dec
ja
pop
sbb
adc
int
fwait
cmp
jbe
pop
jmp
stos
jg
loop
enter
and
cmps
std
test
sahf
or
mov
jle
cli
in
(bad)
sbb
lahf
addr16
cwde
(bad)
aas
inc
mov
in
or
cmp
(bad)
inc
sbb
cmp
dec
aaa
icebp
inc
inc
shl
into
nop
add
mov
push
xor
inc
sbb
mov
aaa
pop
fadd
mov
pop
int3
jge
pop
push
dec
mov
call
enter
push
(bad)
rcr
mov
test
scas
(bad)
push
rol
rcl
or
gs
mov
ret
mov
sub
leave
dec
test
popa
es
mov
aas
inc
pop
mov
xor
pop
arpl
pop
sub
jp
in
push
inc
mov
xchg
inc
and
les
cdq
sbb
jo
ds
and
es
mov
cmp
in
clc
jmp
stc
xchg
dec
movs
clc
sbb
xchg
cmps
lods
pop
cdq
in
jg
std
ret
pushf
inc
sbb
das
or
xor
out
or
sub
mov
mov
sub
push
and
xchg
jne
outs
sbb
push
dec
sub
pop
(bad)
inc
add
mov
sar
rep
ja
loopne
shl
in
outs
sub
jle
retf
popf
dec
popa
lea
jg
push
ins
add
(bad)
mov
ds
adc
mov
dec
iret
call
inc
sub
shl
jnp
mov
inc
mov
mov
pop
dec
cdq
xor
pop
mov
mov
dec
sbb
test
test
cwde
daa
movs
(bad)
and
push
push
add
in
repnz
sbb
popa
mov
pop
jg
aam
push
cmp
int3
repnz
mov
xor
jne
mov
adc
push
loop
outs
clc
shl
lods
cmp
lea
iret
fs
fldenv
imul
out
dec
(bad)
int
mov
div
sbb
stc
push
pop
int3
sub
popa
xchg
retf
inc
into
sbb
xchg
ret
sbb
mov
inc
mov
mov
aaa
jmp
int3
lock
mov
test
mov
in
fs
jb
jne
mov
out
nop
fwait
out
(bad)
fcomip
imul
outs
mov
or
ja
mov
int3
scas
jae
xchg
cli
mov
cli
add
mov
xchg
ret
or
cs
sbb
dec
push
adc
dec
and
int
movs
fisub
movs
in
add
pop
fs
add
shl
and
and
add
pop
test
cmp
fistp
sub
pop
adc
xchg
cmp
shl
lods
test
std
and
cmp
test
jmp
pop
jb
test
hlt
mov
std
in
pop
ins
inc
lods
mov
or
call
or
(bad)
(bad)
test
mov
cld
cmp
test
retf
imul
mov
call
mov
fstp
inc
shl
xchg
xor
std
cmp
dec
xchg
pop
mov
sub
(bad)
lods
pop
ret
in
lea
dec
sub
out
aam
ins
pop
or
pop
add
xchg
test
cld
adc
div
dec
movs
add
and
les
mov
add
ds
ds
xor
outs
pop
in
inc
pushf
mov
lods
(bad)
imul
(bad)
ins
xchg
outs
mov
ret
cld
jne
test
pop
(bad)
xor
xchg
in
mov
mov
inc
push
jg
cmps
lods
xchg
stos
retf
cmp
jne
jl
xor
aad
mov
pop
xchg
jmp
pushf
xchg
mov
sub
cwde
mov
and
or
xchg
test
push
jl
jg
dec
jmp
clc
gs
clc
push
inc
aam
sub
clc
push
in
or
dec
outs
mov
jae
mov
jb
rol
adc
and
fld
cmp
push
popf
adc
jne
das
pop
mov
push
xor
fwait
or
fcmovu
out
cwde
adc
pop
xchg
mov
dec
jbe
xchg
(bad)
movs
ins
out
add
(bad)
cli
add
inc
fdivr
mov
pop
adc
cmc
dec
imul
imul
fisubr
adc
jne
sbb
and
das
aaa
mov
stos
add
lock
and
sub
xchg
hlt
push
(bad)
xchg
and
dec
ins
sbb
dec
retf
ins
sub
(bad)
repnz
mov
xchg
inc
aas
jnp
cmp
mov
jnp
or
mov
(bad)
mov
sti
mov
push
mov
jl
cld
lods
daa
sbb
nop
jl
pushf
pop
jmp
mov
out
data16
(bad)
mov
not
mov
inc
cmp
sub
mov
adc
cs
or
mov
loope
test
nop
cmp
mov
fnsave
jmp
sbb
(bad)
or
mov
lea
call
or
je
xlat
mov
in
mov
aaa
jno
ror
jge
iret
jbe
fwait
xchg
jns
add
cmc
loope
(bad)
fdivr
repz
fbstp
call
inc
fdiv
aam
int
daa
jg
add
adc
stos
mov
cmp
cmp
in
iret
push
pop
das
jno
mov
in
arpl
ror
mov
jmp
retf
push
sahf
aaa
cmc
mov
xchg
ins
enter
or
xor
repz
mov
mov
pop
rep
clc
sbb
retf
cdq
push
xchg
loopne
dec
aad
inc
xor
iret
callw
pop
pop
mov
add
pop
sub
mov
out
shl
push
push
dec
inc
pop
je
adc
xchg
ficomp
and
xchg
xchg
sub
adc
in
fstp
or
stos
cmp
adc
cli
jmp
repz
not
and
push
arpl
ss
jecxz
xchg
mov
sbb
pop
add
cli
stc
push
mov
(bad)
cli
mov
cmp
(bad)
xor
mov
out
pop
cmp
out
ins
push
out
retf
adc
and
sub
mov
push
sbb
sub
jmp
mov
sbb
sbb
imul
inc
pushf
add
and
mov
sbb
rcr
jecxz
inc
jbe
lahf
pop
clc
mov
inc
cmp
cmp
cld
push
iret
sub
xchg
pop
pusha
inc
mov
addr16
mov
push
add
sub
retf
push
jae
and
in
ds
shl
cmps
push
jle
mov
sub
adc
mov
dec
rcl
int3
jae
and
mov
or
les
dec
mov
unpckhps
jecxz
inc
cld
mov
push
mul
test
imul
xor
push
mov
xchg
jecxz
aas
mov
imul
dec
ins
rcl
adc
rol
pop
cmc
cdq
jno
adc
cld
inc
nop
les
shr
push
sbb
aaa
call
xor
and
add
xor
nop
mov
mov
std
sbb
fisub
lock
sti
mov
sti
into
addr16
mov
jno
mov
inc
add
adc
mov
mov
lods
mov
daa
pop
ret
cmp
pop
nop
mov
ins
fdivr
cmp
cmp
mov
push
jmp
mov
add
pushf
cmp
shr
fist
sbb
aad
pushf
test
add
sbb
sbb
jns
test
movs
sub
nop
lods
(bad)
jmp
jl
sbb
fwait
cmp
xchg
aam
out
int
scas
add
test
mov
lods
aam
push
in
in
xchg
push
clc
add
xor
loope
jmp
and
(bad)
les
test
pusha
(bad)
retf
cmp
xchg
inc
jae
mov
or
in
popa
outs
cs
fwait
jmp
dec
cld
or
ja
imul
mov
out
or
cld
pop
clc
mov
outs
mov
mov
add
aas
sbb
call
jo
pusha
fnstcw
dec
pop
xchg
mov
retf
mov
mov
loope
fist
ror
das
pop
(bad)
xchg
int3
ja
ret
cmps
mov
dec
(bad)
retf
cdq
lahf
and
sbb
push
xor
(bad)
out
jg
stc
xlat
jno
(bad)
sar
lods
ja
jno
movs
shl
adc
xchg
out
es
dec
inc
call
ror
adc
iret
gs
aas
cld
pop
xchg
add
into
rcr
and
iret
idiv
sub
push
cmp
mov
dec
pop
fucom
inc
cmp
mov
mov
test
pop
mov
test
pusha
cmps
andps
cmc
out
rcr
push
lea
push
(bad)
call
jae
adc
xchg
cmp
or
mov
inc
push
cmp
mov
push
bound
push
and
sbb
xor
dec
pop
xor
jge
add
pop
ret
dec
fcom
out
sub
push
and
arpl
movs
sub
mov
adc
jecxz
mov
ja
cmp
adc
or
and
daa
jge
jl
gs
adc
inc
dec
ins
sub
ret
out
scas
or
ret
adc
push
fnstcw
adc
lea
and
pop
int
rcr
adc
inc
jo
jle
stos
push
(bad)
push
sti
cmp
cs
in
pop
int3
xor
and
test
(bad)
adc
fdivr
mov
sub
cmp
sbb
aad
retf
mov
imul
push
pop
mov
aaa
jmp
lods
mov
sub
inc
int3
add
xor
pop
cmp
lds
mov
dec
sub
(bad)
jg
inc
xchg
pop
mov
sbb
mov
ja
and
inc
jns
test
and
sbb
not
movs
mov
cmp
push
mov
imul
and
mov
lea
mov
push
in
loop
push
xchg
fsubr
jno
loope
push
sub
std
jecxz
icebp
nop
(bad)
stc
mov
loop
lods
fnstsw
test
call
aad
lahf
or
mov
mov
mov
dec
adc
leave
adc
sbb
lods
adc
push
aaa
sub
push
fcom
les
adc
test
in
popf
mov
push
mov
add
sbb
mov
nop
push
push
pop
adc
pop
pusha
mov
inc
fisttp
inc
popf
push
loop
pop
mov
adc
mov
cmp
mov
ins
call
int
adc
cmc
pop
adc
mov
pusha
sub
push
mov
rol
dec
inc
xchg
and
arpl
mov
out
mov
jg
fistp
test
xlat
add
sbb
pop
sbb
add
mov
sets
xlat
xor
push
xor
mov
cwde
shl
pop
lods
das
mov
movs
sahf
and
pop
dec
and
xlat
add
mov
mov
rcr
ret
jno
dec
ss
div
aas
stos
mov
push
mov
xchg
ins
mov
jne
xchg
test
fcmovnb
in
cmp
leave
xor
(bad)
pop
jmp
cmp
dec
retf
fwait
ja
jne
pop
add
aas
mov
mov
add
inc
pop
aas
bound
pop
aaa
mov
sbb
xlat
fnstsw
lods
xor
fidiv
out
add
test
sbb
xchg
pusha
inc
add
mov
xor
addr16
xlat
ins
movs
test
ins
xor
daa
mov
call
pop
je
xlat
jbe
cmp
aam
clc
push
inc
cmp
jbe
cmp
xor
(bad)
adc
sub
in
repz
cs
sub
xchg
ins
jae
or
retf
shl
push
lock
adc
mov
dec
rol
sbb
retf
jp
(bad)
scas
xlat
dec
test
jae
imul
xchg
cmc
mov
ins
stc
ins
mov
inc
or
mov
adc
ds
push
pop
push
or
pop
(bad)
lock
pop
inc
imul
psrlw
aam
mov
imul
jge
cmc
xchg
into
retf
dec
jmp
or
add
mov
test
and
fwait
jge
xor
sbb
add
and
movlps
or
ins
out
jmp
push
dec
inc
aas
hlt
sbb
addr16
fimul
push
cmps
cmp
fnsave
mov
pop
jo
jl
mov
call
inc
retf
fwait
iret
loop
jle
scas
push
mov
xor
inc
or
pop
push
ss
jmp
sar
in
inc
cmps
inc
adc
jns
dec
or
xchg
shl
rcr
mov
fdivr
leave
jg
mov
dec
cmp
mov
xchg
mov
jmp
mov
imul
js
arpl
(bad)
rcr
bound
(bad)
cmp
mov
sbb
adc
or
jo
add
sahf
(bad)
mov
aam
fst
sub
nop
fadd
repz
and
and
pop
out
pushf
mov
mov
pop
pop
jne
cmc
jae
xchg
cdq
sub
xlat
mov
and
mov
cmps
add
mov
das
iret
push
cmc
cmp
ins
out
mov
div
sbb
push
data16
jb
add
lahf
bnd
mov
outs
sub
rcr
dec
test
ins
int
sti
mov
mov
push
adc
inc
enter
das
mov
into
stc
fs
sub
fadd
iret
mov
push
call
retf
loope
sub
jnp
cmp
sbb
sbb
in
(bad)
(bad)
retf
mov
stc
(bad)
add
mov
sub
lds
fmul
mov
pusha
push
adc
sbb
frstor
in
js
mov
pop
xchg
pop
dec
jmp
in
in
in
xchg
push
out
and
xor
jl
popa
mov
adc
mov
out
mov
mov
xchg
and
fild
sub
mov
lods
and
pop
clc
pushf
cld
pop
jbe
xchg
push
inc
mov
xchg
pop
imul
xchg
icebp
pop
sbb
je
push
adc
inc
jne
push
sbb
xchg
inc
xchg
into
out
lahf
or
xchg
lods
cmps
(bad)
icebp
leave
repz
sbb
fnstsw
imul
std
js
(bad)
loope
(bad)
aas
adc
loopne
or
imul
lds
adc
mul
and
adc
mov
push
imul
add
pop
mov
jo
ret
mov
(bad)
sti
xchg
aam
popa
jnp
ret
rcr
mov
test
stos
movs
into
nop
fwait
outs
in
mov
loop
cdq
push
stc
mov
mov
push
cmp
iret
pop
mov
cs
data16
bound
aad
clc
test
cmc
xchg
mov
xchg
(bad)
nop
loope
jg
int3
cs
sbb
and
mov
pusha
mov
ds
mov
ficom
mov
movs
imul
retf
mov
cdq
inc
mov
into
ds
inc
test
pushf
cmc
push
sahf
dec
lea
jp
cwde
inc
mov
sub
and
cmp
out
(bad)
sbb
out
sub
mov
or
frstor
cmp
loope
inc
sbb
jnp
jl
je
mov
ins
jae
and
jb
(bad)
std
test
inc
mov
rcr
mov
push
sub
sbb
je
movs
inc
mov
adc
fisttp
mov
cmp
sar
and
jns
xor
mov
inc
ins
adc
test
sar
retf
icebp
gs
adc
inc
mov
movs
int
xor
pop
das
xor
mov
inc
fmul
je
cli
jmp
lods
popf
cmp
mov
inc
lods
daa
arpl
jo
fwait
(bad)
hlt
stos
xor
mov
lea
sub
imul
and
retf
les
inc
pop
mov
mov
stc
aad
push
inc
mov
cli
stc
dec
les
ins
adc
cmp
or
stos
or
bound
xor
lock
es
or
mov
icebp
lock
ret
imul
test
in
enter
aad
sti
loopne
jno
jge
adc
repz
test
pusha
push
aas
pusha
fistp
mov
xlat
scas
stc
pop
(bad)
xchg
lahf
xor
jae
aaa
lea
mov
(bad)
out
jno
sub
les
dec
test
pop
aam
and
pop
(bad)
out
and
mov
aam
daa
dec
sti
test
test
mov
add
in
neg
dec
or
call
dec
xor
lock
jmp
mov
mov
jl
adc
adc
jae
fist
in
push
mov
fucomip
dec
stos
push
add
add
iret
stc
mov
mov
inc
gs
(bad)
push
push
mov
shl
div
bswap
(bad)
cld
les
dec
jmp
mov
jge
mov
pop
or
sbb
imul
jg
xor
push
add
idiv
sbb
gs
push
test
pop
mov
lock
sbb
sbb
stos
jmp
push
cmc
(bad)
sti
test
sbb
and
mov
adc
into
addr16
movs
js
push
push
push
adc
in
push
jecxz
add
das
adc
aad
aas
xor
jecxz
xor
jg
mov
push
aad
test
(bad)
sbb
aad
mov
in
add
(bad)
stc
aad
xchg
cmp
pop
lds
enter
repz
ja
repz
add
fiadd
fwait
mov
ins
(bad)
call
mov
imul
jmp
mov
cwde
ins
inc
push
mov
cmp
push
push
inc
dec
xlat
or
mov
jle
xchg
push
jne
jns
div
push
popf
or
scas
lock
push
pop
push
movs
and
xchg
daa
sub
add
ins
out
in
or
bound
test
pop
sbb
mov
fiadd
adc
lock
pop
dec
adc
stos
cmp
neg
(bad)
(bad)
fcom
xchg
(bad)
mov
xchg
xor
mov
in
stc
xchg
ja
mov
icebp
sub
ins
outs
mov
xor
xchg
pop
shl
dec
xchg
add
mov
clc
lods
out
xchg
ror
sar
mov
mov
sahf
pop
rol
nop
sub
loop
inc
in
push
sar
pop
jl
test
mov
push
mov
ficom
ret
rcr
push
jp
out
push
imul
cmps
and
adc
loope
clc
imul
cmp
adc
cmp
mov
push
sub
dec
and
add
in
mov
cmp
cmp
fld
xor
clc
pop
mov
aam
jne
repnz
movs
push
mov
push
mov
mov
mul
dec
and
push
and
ja
jp
xchg
ret
dec
add
cmp
lods
and
in
(bad)
cwde
fcom
push
aaa
add
push
xor
arpl
mov
lock
pusha
stos
pop
push
mov
inc
jae
test
stos
lea
sub
mov
adc
mov
push
scas
mov
xchg
or
mov
jo
rol
sub
jb
cmc
mov
mov
jle
sbb
pusha
cwde
mov
outs
repz
js
add
push
xchg
mov
sub
mov
add
jmp
mov
std
nop
xor
fisubr
add
and
push
cli
test
xor
(bad)
lock
fs
sub
bound
inc
jnp
push
mov
jge
lock
les
test
dec
sbb
jle
out
or
repz
dec
dec
jbe
je
retf
in
ins
inc
xor
and
lods
add
retf
in
lods
cmp
es
inc
pop
rcr
add
hlt
ret
sub
fs
imul
cdq
frstor
dec
pop
mov
nop
dec
pop
call
jge
cmp
fidivr
mov
cli
jae
out
push
int3
pop
lods
loopne
add
ror
pushf
xchg
lods
imul
pop
aas
dec
inc
scas
adc
pop
into
jmp
inc
mov
add
inc
(bad)
pop
out
cld
les
mov
les
sahf
sbb
in
adc
push
xor
jo
mov
jb
cwde
xor
repnz
or
(bad)
aad
rcl
(bad)
add
ret
hlt
lock
enter
add
jmp
scas
add
add
sar
outs
aad
xor
fild
fistp
inc
push
or
adc
or
ins
movs
dec
mov
cmp
repz
lods
and
and
and
jge
sub
jnp
js
popf
or
rcr
dec
push
adc
pop
xchg
jne
mov
mov
inc
xor
fcomp
cmp
or
aad
iret
mov
push
cmps
push
lods
out
out
xchg
and
push
lods
pop
jp
pop
jb
iret
aad
xor
retf
dec
jnp
imul
(bad)
xor
jmp
aam
in
xor
xor
sbb
aaa
inc
xor
mov
jae
xchg
inc
das
mov
scas
sub
(bad)
mov
or
out
mov
jle
and
and
mov
add
inc
iret
retf
inc
movs
sar
popf
sahf
cmps
jb
sbb
daa
xor
loop
(bad)
jnp
xlat
(bad)
push
pop
icebp
inc
cld
push
sub
fisttp
(bad)
into
faddp
adc
(bad)
sbb
cmp
xchg
jmp
das
add
add
cmp
out
mov
pushf
push
jae
imul
pop
(bad)
shr
sub
jne
jmp
ret
outs
xor
inc
mov
xor
dec
int
in
cs
lahf
mov
cmc
pop
rcl
lahf
and
push
and
sbb
std
ror
aam
or
dec
jge
xchg
cmc
sbb
push
mov
aad
sub
aaa
out
mov
jge
shr
ss
repz
in
sbb
mov
cwde
inc
push
das
in
mov
shl
push
and
cmp
dec
jge
in
mov
fld
mov
dec
lahf
pop
inc
inc
cld
out
jne
pop
jns
gs
int
int3
ins
neg
mov
popf
mov
mov
adc
lock
leave
mov
arpl
pop
test
lods
xor
sub
sub
cdq
fstp
sar
(bad)
(bad)
mov
inc
gs
sar
mov
inc
mov
movs
inc
cmp
mov
push
dec
inc
aad
loop
jns
pop
adc
(bad)
loop
dec
jno
cmp
pushf
ins
xor
mov
adc
cmp
mov
add
xchg
sbb
mov
jmp
pop
or
adc
push
lods
mov
ss
test
fwait
outs
sar
push
add
jo
or
push
lods
or
jl
ror
(bad)
jb
call
call
mov
add
or
pop
sub
daa
std
data16
ds
add
sahf
loop
lods
pop
aaa
in
out
and
stos
or
cli
lahf
xchg
sub
fild
(bad)
in
mov
clc
test
hlt
(bad)
and
xor
mov
imul
movs
mov
mov
retf
push
xchg
mov
and
jge
sbb
xor
ja
cmc
loope
push
test
add
and
enter
cmc
iret
mov
dec
aam
mov
hlt
outs
mov
popa
into
xor
or
sub
sub
or
fyl2xp1
ins
jno
dec
sbb
cmps
xor
stos
push
stos
jo
jp
retf
jbe
inc
in
add
rcr
dec
adc
leave
icebp
mov
icebp
dec
cmp
mov
xchg
repnz
sti
stos
jp
mov
adc
leave
and
loop
lahf
rol
add
xor
retf
jne
cmp
add
xchg
sbb
mov
mov
xchg
neg
xchg
add
inc
and
adc
es
es
mov
into
push
cli
ffree
inc
test
repz
cmp
lds
push
push
(bad)
jmp
mov
ins
or
jns
out
sti
mov
sbb
mov
mov
cmc
enter
xor
cdq
test
jmp
int
push
adc
data16
xchg
cwde
and
push
dec
ins
xchg
stos
idiv
xor
imul
add
mov
sub
mov
int3
sbb
je
dec
addr16
jmp
aam
mov
adc
adc
pop
mov
cld
aad
pop
jb
or
mov
shl
nop
bound
test
cwde
xchg
movhps
mov
dec
mov
cmp
push
mov
adc
and
nop
fwait
bsr
bswap
int3
dec
pop
jmp
shl
mov
ins
jno
mov
dec
jb
or
sub
xchg
dec
imul
movs
and
in
inc
shl
inc
push
rcr
xchg
pop
fisubr
retf
jbe
pop
cmp
call
clc
adc
stc
sbb
push
ret
jae
loopne
jg
pop
pop
mov
shl
push
cmps
fidivr
rcr
repnz
sub
out
mov
imul
xchg
cmps
lock
xor
aam
or
push
mov
inc
dec
scas
mov
out
dec
add
rcr
mov
push
mov
rol
js
test
xchg
xchg
adc
push
cmp
or
sbb
fistp
movs
(bad)
test
jecxz
les
xor
in
enter
adc
es
and
test
xchg
cs
fwait
movs
push
push
push
ror
rol
mov
dec
call
xlat
push
adc
dec
add
xlat
fstp
push
psadbw
loop
dec
inc
cdq
mov
fidiv
mov
sti
stc
push
in
dec
push
and
cdq
aam
test
inc
adc
and
cmp
retf
push
repz
lea
sub
fild
daa
stos
shr
enter
xchg
aam
ret
sub
cmp
loope
lods
(bad)
imul
into
scas
mov
mov
jno
(bad)
sbb
cs
inc
adc
mov
addr16
cmp
sar
push
xchg
(bad)
inc
icebp
mov
push
pop
sbb
out
inc
pop
rcr
cmp
xchg
mov
add
cmc
or
loopne
sub
inc
leave
cli
pop
mov
mov
icebp
xchg
retf
movs
push
pop
push
jle
fisttp
jg
outs
xor
mov
mov
ror
clc
cmp
sti
dec
mov
aad
jmp
or
mov
cdq
sbb
cs
movs
push
jnp
fbstp
fist
xor
push
inc
lahf
lods
pop
outs
mov
jno
xor
jo
push
push
and
int
(bad)
arpl
icebp
add
ins
movs
idiv
pop
inc
push
cmps
ins
pop
jmp
pop
clc
jne
or
pop
inc
loopne
in
out
jecxz
bound
pop
fs
mov
jb
push
aad
cmp
fmul
cmp
aas
fxch
cmp
pop
sbb
sub
int
repz
sub
mov
sub
neg
lods
or
cwde
outs
loopne
push
cmp
xchg
fsubp
push
es
test
cmps
lock
adc
jg
test
or
add
sbb
mov
ja
mov
aam
and
bound
mov
or
xlat
and
dec
xlat
out
sahf
lock
jne
icebp
xchg
or
push
xchg
stos
fbstp
push
ss
sahf
call
sahf
mov
and
cmp
dec
cmps
(bad)
and
mov
sbb
out
fidivr
or
mov
mov
aas
mov
dec
inc
cdq
rcl
jmp
and
or
dec
lods
cmc
repnz
mov
pop
cmp
fimul
jmp
inc
iret
jle
push
sbb
arpl
retf
jp
push
ja
add
ret
lahf
or
xor
out
ficomp
or
add
ror
jl
ret
and
jbe
push
mov
imul
daa
movs
or
sbb
int3
pop
div
jp
pushf
movsx
dec
icebp
mov
inc
jb
dec
inc
js
repz
cmp
jge
stos
sub
mov
push
lea
pop
cs
inc
sbb
sbb
push
xchg
mov
in
lds
scas
adc
inc
in
stos
stos
imul
(bad)
xchg
dec
cdq
out
and
lods
out
sbb
lods
fsubr
fistp
mov
cld
jecxz
fcmovbe
fwait
jne
popf
push
fbstp
push
lahf
arpl
pop
repz
xchg
stc
fisubr
cs
shr
out
call
addr16
pop
xor
stos
cmp
js
push
lods
pop
dec
popf
add
adc
cmc
fld
lea
lahf
xchg
fcmovbe
stos
adc
mov
xchg
into
or
or
push
movaps
mov
sbb
fnstcw
push
or
and
pop
xchg
in
jae
inc
js
pop
mov
imul
jb
inc
lds
sti
retf
mov
lahf
sbb
push
mov
mov
sahf
call
mov
gs
movs
xor
popf
cmp
(bad)
cs
cmps
sbb
pusha
adc
popf
sub
fadd
call
xor
xchg
stos
and
mov
inc
sub
sub
test
call
out
pop
inc
fs
stc
add
bound
sahf
pop
(bad)
sar
stos
dec
(bad)
mov
pop
(bad)
pusha
nop
push
push
out
jne
mov
lds
je
je
or
pop
cmp
sbb
(bad)
inc
cmps
cmc
test
sub
xor
push
jmp
popf
pop
jmp
pop
(bad)
(bad)
in
sub
and
cmp
mov
sbb
cmp
pop
sahf
add
cmp
push
mov
inc
icebp
mov
sub
xor
lds
cmp
cdq
int
inc
js
cli
lea
push
sbb
sub
enter
mov
stc
js
xor
jge
popf
retf
(bad)
jns
dec
cmc
and
mov
mov
imul
dec
mov
ins
xor
sar
dec
out
jmp
cmp
rcl
(bad)
jnp
adc
outs
mov
add
push
in
push
jp
jmp
mov
sbb
mov
dec
leave
mov
add
mov
in
in
mov
inc
add
push
jb
and
jmp
or
das
cwde
mov
dec
adc
icebp
hlt
leave
and
push
movs
cs
adc
xchg
xchg
cmps
fisub
and
cmp
not
xchg
pop
dec
rcl
outs
and
out
jecxz
daa
frstor
dec
fdiv
stc
daa
pop
xor
pop
pop
popa
(bad)
das
pop
cmp
push
leave
adc
fsub
dec
sti
sbb
outs
push
mov
test
mov
in
jo
mov
jg
test
mov
xchg
or
push
or
ficomp
stos
push
adc
adc
mov
fnstcw
push
pop
rol
jmp
add
hlt
shl
shr
or
push
je
xchg
or
or
cli
rcr
jge
mov
jecxz
and
add
and
xchg
ret
ins
xchg
in
aaa
or
addr16
rcl
movs
stos
in
dec
sub
push
pop
sub
xchg
mov
jp
jecxz
and
xor
mov
push
inc
dec
inc
add
sahf
sub
sbb
and
pop
fmulp
data16
test
and
cmp
mov
push
mov
xchg
mov
frstor
cmp
mov
call
inc
adc
jbe
push
push
pop
in
or
fs
js
popf
popf
pop
xlat
cmp
test
dec
mov
xchg
jmp
sub
jl
mov
jmp
sub
(bad)
pushf
repz
pop
call
ja
movs
xchg
mov
xchg
pop
lods
pusha
mov
add
mov
mov
data16
ja
sub
xor
(bad)
loopne
mov
inc
std
jge
add
sbb
(bad)
movs
sub
mov
or
into
fisub
or
std
inc
cli
pop
mov
mov
aam
xor
mov
mov
pop
pop
xor
movs
hlt
nop
sub
in
mov
nop
xchg
xor
inc
jns
frstor
shr
push
repz
movs
lods
cld
mov
push
fisub
dec
mov
retf
out
shl
in
mov
ins
rcr
cmc
cmc
shl
inc
stos
add
dec
fcomp
imul
ds
leave
ret
pop
sahf
cmps
add
ficomp
(bad)
fwait
inc
loop
push
aam
mov
lock
jp
pop
pop
push
jmp
sub
dec
mov
dec
sub
cli
scas
dec
hlt
push
sbb
popf
and
xor
xchg
xchg
jb
ror
jle
je
jnp
jno
sub
adc
adc
stos
xchg
mov
jbe
jmp
jmp
mov
mov
in
daa
inc
pushf
popa
cmps
or
xor
mov
test
add
in
mov
jae
shl
xor
inc
jb
das
int3
or
push
dec
mov
or
mul
inc
repz
dec
push
sbb
mov
xor
mov
mov
cld
mov
jg
push
lods
mov
lock
shl
inc
sti
ins
mov
xchg
jmp
pop
cmp
dec
inc
fistp
mov
call
adc
push
(bad)
retf
test
imul
mov
xchg
mov
leave
or
dec
push
retf
(bad)
xchg
outs
push
jecxz
xlat
and
xchg
push
shl
loopne
lock
mov
scas
call
out
sahf
cmps
mov
push
sub
dec
and
sub
sub
mov
sbb
mov
push
and
jle
lahf
jle
xlat
push
mov
and
ds
mov
sub
enter
sub
dec
jmp
pusha
cmp
jae
call
(bad)
int
add
loope
sahf
push
adc
push
aas
mov
into
and
jg
js
cmp
xor
cmp
icebp
imul
fidivr
les
adc
xor
xor
iret
push
daa
(bad)
mov
enter
dec
lea
inc
push
scas
pop
add
jmp
ret
xor
std
add
fisttp
mov
sbb
inc
hlt
je
and
add
pushf
lods
in
sbb
jbe
dec
int
lods
iret
sbb
xor
jne
jne
cmp
sub
sub
aad
jp
cmp
mov
jg
xor
aam
push
popf
out
push
sbb
mov
dec
mov
ja
cmp
clc
sub
jge
mov
pusha
xor
test
test
xchg
fs
or
push
mov
xchg
xor
mov
mov
jp
outs
lahf
add
mov
push
nop
sub
or
leave
fcmovu
repz
pop
jl
mov
add
add
pop
sbb
jbe
mov
data16
call
or
adc
popa
xchg
mov
repnz
rol
in
shl
or
sbb
lds
xchg
jnp
fld
in
aam
popf
js
push
ds
mov
repnz
jp
pusha
cmp
or
(bad)
pop
xchg
inc
sbb
xor
jbe
dec
or
pop
sbb
in
jne
in
test
sub
mov
add
div
sbb
test
ror
ss
int3
inc
xor
or
mov
dec
add
sub
fiadd
push
jp
and
inc
ret
(bad)
neg
shr
pop
xor
push
jbe
push
mov
mov
jmp
xor
xor
pop
xor
repnz
mov
sbb
rcr
sbb
retf
dec
mov
jle
icebp
inc
outs
sbb
sbb
and
sahf
xchg
cwde
stos
push
xchg
pop
push
outs
imul
jne
mov
bound
ss
xchg
scas
int
xchg
cmp
pop
(bad)
fsubr
movs
add
sbb
jo
outs
sti
popaw
hlt
(bad)
or
and
loope
xchg
outs
dec
jg
push
jp
aad
sbb
imul
or
xchg
fmul
or
dec
repz
lods
adc
inc
and
iret
add
pop
aas
nop
outs
out
shl
jo
bound
xor
fst
cmps
js
add
(bad)
pop
fmul
(bad)
daa
test
fs
outs
inc
fldcw
shl
push
imul
gs
mov
daa
mov
xchg
adc
icebp
jo
and
sti
lods
out
sbb
repnz
stos
xchg
cmp
test
jl
iret
cmp
jo
repz
rcr
iret
add
cmps
pop
jmp
ror
push
aam
pop
jmp
lods
ror
gs
sti
in
rcr
rol
inc
dec
shl
sbb
cld
and
paddd
and
xchg
xchg
gs
call
xor
or
ror
outs
pop
sbb
icebp
lods
mul
xchg
pop
cmp
outs
jl
jp
jge
xor
cdq
dec
out
adc
xor
mov
cmp
shl
push
dec
rcl
ins
and
dec
mov
jo
shl
into
xchg
arpl
call
and
rcl
xchg
mov
out
out
add
jmp
push
sahf
xchg
fsubrp
fsub
imul
xor
js
cmp
inc
or
sar
dec
mov
add
aad
(bad)
and
int
inc
cmp
push
movs
es
xchg
and
xor
push
xor
push
(bad)
cmp
inc
xlat
les
mov
or
call
cli
mov
mov
inc
lds
jae
jne
mov
fs
or
or
test
clc
push
pushfw
pop
arpl
pop
rol
test
(bad)
push
add
fisub
mov
jns
push
test
add
xchg
test
fs
popa
ret
mov
sbb
scas
push
dec
mov
ins
jmp
or
lds
inc
lea
pop
adc
popa
jmp
addr16
push
pop
cs
leave
sub
add
mov
or
fcmovnbe
inc
retf
adc
sbb
cld
bound
cmps
mov
(bad)
jl
daa
aas
and
addr16
xchg
adc
mov
shr
xchg
test
push
(bad)
(bad)
sti
lods
test
mov
adc
xchg
mov
add
sar
or
add
sub
lods
cmp
test
sub
test
lahf
mov
(bad)
adc
mov
scas
mov
ret
int
pop
cmp
cmp
lahf
xchg
jns
pop
pavgw
cmp
ja
push
cmp
push
mov
hlt
xchg
mov
fnstsw
jmp
ins
cmps
aad
mov
add
daa
cmp
in
jns
retf
or
test
cmp
dec
mov
or
aam
rcl
fcmove
js
xchg
jb
sbb
or
cmp
add
sbb
push
xor
std
mov
or
mov
lods
sub
push
jl
movs
sub
cmp
push
aad
jle
push
push
cwde
gs
popa
out
cwde
lock
xlat
xor
mov
add
xlat
xchg
adc
xchg
in
xor
fs
cmp
dec
or
sub
sbb
inc
shl
icebp
fisttp
jp
or
or
mov
fdiv
xchg
outs
leave
nop
mov
out
mov
outs
popf
cdq
mov
pusha
hlt
add
jp
leave
test
mov
and
mov
jns
pop
enter
mov
mov
push
mov
jge
sahf
lods
dec
(bad)
stc
push
nop
mov
das
popf
sbb
arpl
enter
je
mov
nop
popf
adc
sub
movs
aaa
stos
pop
add
sbb
pop
jmp
call
fidiv
aam
inc
dec
std
mov
xchg
push
gs
(bad)
mov
in
das
jae
into
add
jns
(bad)
nop
and
jecxz
mov
loope
mov
fstp
and
dec
sbb
cmp
out
push
iret
or
jmp
fiadd
out
cmp
push
adc
lods
out
sub
add
arpl
call
xor
popf
xchg
dec
mov
jae
(bad)
mov
imul
inc
mov
arpl
or
mov
lock
test
in
adc
ins
mov
or
cld
lods
pop
xor
(bad)
jmp
std
inc
pop
add
lods
test
dec
xchg
(bad)
faddp
and
jb
js
and
push
pop
in
(bad)
les
and
dec
(bad)
(bad)
pop
cmps
dec
xor
or
enter
mov
ror
out
pusha
test
push
xchg
pop
movs
pop
dec
push
mov
cs
push
ins
and
mov
cmp
dec
xor
cmps
pop
mov
fs
inc
or
mov
fbld
lods
jmp
lods
mov
daa
(bad)
push
sub
aaa
dec
pop
sahf
mov
lods
jecxz
daa
loope
ins
iret
popf
sbb
aas
add
pop
bnd
ds
imul
pushf
pop
sub
sbb
mov
jae
(bad)
push
mov
je
shl
mov
jmp
mov
lea
cdq
jl
adc
int
loopne
sbb
lds
dec
test
push
in
or
or
addr16
push
frstor
ins
push
mov
add
test
inc
xchg
jmp
xor
mov
jno
popa
(bad)
ret
mov
mov
lods
enter
or
clc
xchg
xchg
gs
or
sbb
or
inc
test
push
loopne
retf
push
mov
dec
adc
in
push
out
movs
(bad)
cmp
sub
stc
cld
pop
jbe
jge
popf
or
mov
mov
sub
aam
clc
lock
pop
aam
or
fs
cli
stos
jge
mov
rol
or
ret
mov
cmc
sub
in
mov
imul
cli
push
cs
sub
cmp
aas
test
inc
inc
jl
jb
shl
nop
fs
shl
add
aas
mov
fs
pop
pusha
push
fdivr
cli
loopne
push
mov
jnp
jns
and
(bad)
xor
adc
js
fadd
xchg
sbb
hlt
into
aam
mov
fidiv
adc
ficom
mov
jns
dec
jno
es
mov
cmps
add
jne
addr16
pop
adc
dec
nop
fwait
rcl
icebp
dec
jmp
loope
lods
pop
ds
(bad)
shr
movs
scas
and
arpl
fwait
into
push
inc
lahf
les
outs
and
jo
dec
and
jecxz
popa
in
imul
xor
test
jmp
retf
mov
je
jbe
dec
outs
fdiv
fadd
repnz
mov
push
gs
cld
scas
js
mov
ror
cmp
sub
sahf
dec
icebp
jmp
aas
in
mov
pusha
push
mov
in
call
test
push
ins
lock
out
xchg
stos
shl
std
bound
movs
fnstsw
inc
lea
rcr
enter
dec
sbb
mov
out
mov
adc
mov
pushf
lds
pop
mov
cdq
retf
pop
mov
movs
mov
push
mov
sbb
xchg
imul
pop
icebp
jecxz
inc
xlat
adc
mov
cli
mov
mov
(bad)
mov
jno
fistp
push
jnp
mov
arpl
jo
inc
sub
nop
gs
repz
leave
or
xchg
and
ins
clc
(bad)
pop
pop
pop
jmp
mov
dec
mov
sahf
mov
push
ror
shl
or
pop
sbb
push
movs
push
clc
stos
sub
sti
out
add
inc
imul
sub
jg
inc
(bad)
cmp
shr
(bad)
dec
jne
lock
cmp
movs
sub
ss
add
pop
mov
xor
cmc
mov
xchg
or
push
and
add
inc
lods
mov
dec
leave
jmp
or
pop
add
mov
and
shl
in
repz
and
lds
cmps
clc
mov
out
inc
das
cmc
jge
call
push
std
xchg
loop
push
stc
pusha
dec
nop
add
and
jbe
mov
mov
mov
xor
jecxz
leave
lea
aam
push
not
xchg
test
xlat
adc
push
mov
hlt
xchg
jmp
les
out
push
aam
xchg
aad
mov
or
test
jno
jle
push
and
sti
in
jae
sub
mov
jecxz
push
jns
outs
cmp
pop
sbb
mov
ficomp
sbb
jnp
inc
xor
pusha
cdq
aad
outs
sar
push
and
pop
inc
inc
ins
outs
js
and
outs
mov
sub
sub
xchg
div
shl
mov
jge
cld
mov
inc
pop
cmp
loopne
ret
inc
fcmovnbe
inc
cmp
(bad)
iret
cdq
ror
jo
pop
fcomip
imul
inc
rcl
ret
test
xor
mov
pushf
outs
jnp
movs
cmp
les
sti
(bad)
jl
push
arpl
xlat
into
ficom
es
pop
call
sbb
jns
adc
pusha
sub
push
xchg
mov
add
les
pop
jbe
xor
(bad)
jnp
xchg
add
ins
stos
js
mov
and
jg
cmps
push
dec
and
fnstcw
bound
sbb
xor
pop
ss
jno
int3
fdiv
sbb
push
(bad)
lods
push
fcmovnbe
pop
mov
loopne
jmp
dec
push
sbb
out
and
rcr
stos
pop
std
stc
jno
jb
cdq
adc
cld
in
pop
sub
loop
or
ins
icebp
enter
jb
jno
sub
xchg
outs
out
jne
ret
xor
lea
jne
sar
jle
es
mov
dec
cs
mov
and
and
rcl
loope
idiv
call
jne
push
iret
in
dec
dec
dec
cmp
clc
(bad)
bound
out
add
test
xchg
push
and
xchg
mov
sbb
icebp
jno
adc
mov
dec
idiv
aad
adc
cmp
in
pusha
pop
js
pusha
(bad)
mov
xchg
lds
add
ror
cmp
adc
and
push
lock
das
push
cs
pushf
adc
leave
or
test
pop
in
cmp
mov
aaa
push
add
stc
jb
adc
sbb
push
push
neg
out
icebp
sub
cwde
stos
aam
sbb
dec
and
mov
xchg
sbb
sti
(bad)
ret
and
xor
lock
mov
dec
test
int3
mov
xchg
mov
cli
push
jbe
cs
imul
and
mov
pop
popa
imul
mov
xor
xlat
ss
in
stos
xor
cmc
ds
sbb
xor
aad
mov
pcmpgtw
test
scas
mov
repnz
mov
push
rcr
jp
test
sub
xchg
jecxz
icebp
jo
mov
sbb
push
pop
icebp
adc
xchg
jbe
inc
clc
jmp
push
mov
inc
fwait
ret
stc
lods
fwait
std
std
arpl
cmp
test
stos
inc
loope
sti
push
and
stos
mov
mov
dec
ds
jge
pop
pop
jl
ins
outs
and
call
lea
sbb
inc
mov
mov
popf
loopne
sbb
jne
adc
cmp
push
mov
dec
cli
sbb
push
(bad)
sub
out
sti
and
xchg
and
push
int
or
xchg
sbb
mov
aaa
cmp
pop
push
gs
rcr
xchg
scas
dec
sbb
loop
jb
(bad)
add
cmp
fs
outs
or
test
pop
daa
inc
shl
ret
push
sub
push
sbb
pop
adc
ror
jle
retf
jbe
test
mov
lahf
rol
rcr
mov
cmps
stc
inc
push
sub
rcl
ret
xor
out
sti
fld
push
add
adc
and
jge
int
dec
and
int
pop
arpl
cli
cmp
div
rcl
out
cld
sub
fwait
pop
test
xor
sub
xor
aam
push
pusha
add
fmul
out
jp
clc
enter
imul
(bad)
out
xor
add
add
cwde
dec
add
mov
or
mov
xor
mov
aas
into
push
movs
sub
push
jo
scas
stos
push
scas
xor
ficom
fidivr
lea
dec
xlat
or
cli
jae
loop
mov
cmc
or
pop
stc
cmps
dec
repnz
push
ror
jge
stos
leave
mov
test
and
pop
dec
adc
pop
call
jns
push
or
enter
pop
sub
push
xor
rol
dec
push
or
imul
leave
mov
pop
jns
shl
xor
add
(bad)
cli
sbb
jb
push
dec
in
test
sub
inc
cmc
inc
iret
push
test
mov
inc
es
xor
jl
cld
dec
imul
nop
outs
xchg
int3
jmp
mov
push
inc
and
mov
dec
stos
mov
xlat
sub
ret
xor
sbb
mov
add
mov
mov
xchg
sub
push
adc
(bad)
ins
dec
fisub
or
loop
dec
or
(bad)
idiv
or
sbb
mov
enter
xchg
inc
inc
test
mov
dec
into
sar
xor
repz
mov
stc
mov
adc
mov
sahf
das
jnp
push
test
mov
adc
aam
xchg
fbld
sub
cld
out
adc
inc
mov
push
jmp
sub
hlt
inc
sbb
fidivr
gs
ss
dec
(bad)
dec
aas
aas
jbe
(bad)
aad
cli
and
dec
bound
arpl
pop
pop
mov
aam
mov
sbb
mov
sbb
mov
dec
mov
sub
into
fadd
sub
call
pop
bound
btc
ds
cli
ret
scas
repz
sub
add
mov
nop
shl
xor
cmc
pop
push
adc
test
push
in
inc
clc
mov
jg
in
jnp
jecxz
ja
pop
sub
lods
test
hlt
test
fnstsw
and
repz
xchg
xchg
cmc
xlat
xchg
daa
sti
mov
fsub
adc
and
jmp
lea
rol
or
xor
test
cmp
jo
mov
jmp
in
les
(bad)
push
adc
add
pop
ret
pusha
push
pop
pop
das
cld
cmp
jp
ins
mov
fwait
pop
rcl
inc
rol
xor
mov
cmp
xchg
cmps
fsubp
or
pop
cld
xor
pop
fcomi
push
xor
cmps
lock
sub
xchg
(bad)
or
dec
test
dec
xor
mov
cmp
int3
repz
sub
call
inc
xlat
sar
movs
mov
imul
sub
push
fiadd
inc
out
loopne
xchg
iret
xchg
mov
add
xorps
add
repnz
sub
or
xchg
pushf
retf
jmp
ja
shl
inc
aas
cmp
mov
retf
dec
fdiv
arpl
add
inc
xor
or
mov
(bad)
out
aaa
add
xchg
mov
xor
imul
cmps
mov
in
js
imul
cmc
mov
push
xor
out
fwait
jp
mov
in
mov
fsubr
int
nop
jge
mov
xchg
call
mov
iret
sbb
add
xchg
sub
cmp
das
daa
pop
pushf
mov
cmps
pop
rol
sti
sub
das
or
iret
xchg
mov
or
pop
inc
ds
scas
cmc
stc
aad
jle
rol
inc
dec
ins
or
out
pop
mov
and
cdq
(bad)
shl
mov
adc
iret
shl
jnp
loopne
int
mov
dec
and
leave
aam
and
jbe
cld
mov
jno
push
lods
lods
test
sbb
mov
js
(bad)
xor
cmp
cmps
aam
movs
add
shl
cmc
pusha
int
clc
jmp
sub
jp
sub
mov
and
fist
ins
arpl
pop
add
cmp
out
inc
pusha
and
icebp
mov
stos
pop
pop
(bad)
pop
inc
dec
jno
mov
mov
inc
scas
iret
fstp
retf
xor
xor
(bad)
into
pushf
ss
das
in
aam
out
test
nop
rcl
ret
outs
jae
ss
push
cmp
ja
push
retf
icebp
div
or
adc
invd
leave
aam
das
push
je
imul
nop
xlat
inc
sub
xlat
test
pop
rcr
pop
retf
imul
jbe
ins
lods
jae
add
(bad)
xor
lock
fcomp
stos
mov
mul
(bad)
push
ret
add
pop
and
popa
ror
ins
imul
push
in
pusha
push
inc
sub
mov
push
popa
ret
mov
adc
add
xor
cmp
pop
mov
aas
arpl
outs
dec
cmp
ins
adc
xchg
mov
sub
dec
leave
out
fs
(bad)
call
mov
ins
mov
mov
sub
call
paddq
jae
jne
sbb
les
ret
xchg
sbb
inc
scas
shl
sbb
sub
cmp
fistp
cld
mov
retf
stc
push
xor
dec
dec
lea
movzx
pop
mov
gs
xchg
mov
or
xchg
inc
push
sbb
fdivr
xor
cli
je
lods
push
dec
scas
cmp
push
(bad)
mov
test
jmp
inc
inc
daa
xor
adc
jns
call
sbb
push
xchg
aas
sub
xchg
outs
adc
or
pop
jno
mov
mov
mov
or
cmp
(bad)
cli
fcom
stos
mov
in
das
(bad)
cmp
jo
cs
aas
sbb
(bad)
pop
xor
fcom
movs
add
and
xor
sbb
or
fild
popa
popf
out
mov
or
inc
or
push
aaa
int
adc
movs
sbb
jmp
data16
pop
sbb
dec
pop
mov
ins
sbb
adc
mov
test
or
cmp
add
jl
mov
sti
mov
fsubr
mov
jb
ds
test
xor
ret
ret
xor
ss
dec
stos
mov
or
(bad)
jle
fmul
xchg
aaa
lock
(bad)
add
(bad)
clc
or
sub
jne
jns
xor
(bad)
mov
loop
mov
retf
out
push
dec
daa
jo
mov
jne
add
neg
stos
ret
dec
scas
lea
dec
iret
mov
(bad)
js
jbe
push
and
xchg
inc
loopne
ret
and
out
inc
neg
loop
adc
or
std
dec
xor
ins
sbb
in
out
sub
adc
inc
adc
adc
pop
je
fimul
cmp
mov
mov
xor
pop
repz
xlat
aad
pop
(bad)
fucomip
(bad)
lahf
popa
test
jge
mov
stos
dec
jl
data16
shr
push
outs
xchg
in
or
jnp
ins
inc
mov
iret
push
fucomp
inc
bound
int
fdivr
add
loopne
daa
inc
call
push
js
hlt
adc
push
retf
scas
leave
sbb
iret
lods
daa
retf
in
push
inc
or
mov
sub
xchg
jecxz
out
inc
mov
sahf
mov
mov
add
sub
xlat
cmp
mov
out
cmp
ja
stos
jne
xchg
xchg
in
cs
sub
and
dec
loopne
inc
add
mov
cmps
cmp
pop
fidiv
push
retf
push
cmp
adc
push
(bad)
mov
loopne
(bad)
adc
xor
push
neg
adc
inc
mov
pop
jns
or
adc
sub
imul
retf
cmp
inc
shr
jno
fisttp
jne
ror
and
fnstsw
dec
retf
sbb
cmc
mov
movs
imul
xchg
adc
sbb
gs
not
xor
call
test
jmp
dec
pop
cmp
fisubr
push
movs
and
out
jno
ins
stos
and
jecxz
int
mov
xor
nop
shr
adc
clc
add
lahf
retf
imul
inc
scas
cli
shr
jle
mov
mov
jmp
jne
out
hlt
pop
(bad)
jno
pop
mov
push
(bad)
and
retf
jne
rcl
in
push
mov
xchg
or
pusha
inc
dec
xchg
cld
ror
fwait
aas
retf
inc
xlat
js
sbb
add
lds
(bad)
ins
stos
test
push
sub
jecxz
xchg
nop
fdiv
and
sub
mov
inc
sbb
push
mov
loopne
in
add
std
arpl
cmp
(bad)
les
cmps
pop
call
dec
pop
and
xor
sbb
faddp
int
push
sbb
jl
jbe
test
sub
cmp
sbb
test
add
mov
push
mov
scas
xchg
(bad)
pop
mov
sub
jmp
add
popa
rcl
push
repz
add
int3
and
jne
retf
mov
cmp
stc
xor
xor
ins
add
shr
jmp
mov
stc
xor
cmps
fidivr
pop
test
ret
jp
sar
sar
rcl
jno
push
cmp
loope
aas
mov
sub
addr16
mov
cmp
adc
enter
in
in
in
add
std
cmps
out
fs
adc
dec
sub
not
pop
mov
or
push
lods
fistp
lahf
dec
cmp
mov
scas
push
push
aaa
xchg
test
pop
sub
rol
inc
sub
dec
inc
movs
fs
loop
cs
jmp
(bad)
cs
(bad)
fisub
mov
jmp
mov
das
fadd
push
into
out
rcl
ret
pop
into
xchg
jle
cmp
push
icebp
in
int
mov
ds
(bad)
pop
imul
dec
jmp
shl
add
inc
loope
xor
pop
in
sub
pop
(bad)
dec
and
xchg
repz
icebp
or
ficom
xchg
je
ins
sbb
outs
or
mov
int3
clc
je
arpl
stos
or
cmp
or
adc
sbb
outs
mov
jne
dec
mov
jg
pop
popf
dec
stos
push
cwde
(bad)
sar
addr16
ja
and
or
and
push
dec
jb
mov
cld
mov
xchg
xlat
xchg
les
mov
iret
std
xor
out
gs
sbb
outs
imul
inc
ja
dec
scas
das
mov
jmp
gs
data16
in
leave
push
loop
jae
jnp
push
cmp
call
test
cmp
add
inc
sbb
jmp
push
pop
inc
repz
inc
fistp
pop
hlt
mov
leave
loopne
mov
jb
cmp
sub
and
fadd
push
xor
in
sbb
push
(bad)
jp
jge
xchg
mov
fadd
sub
out
and
loop
shl
js
adc
xor
push
fidivr
enter
xor
retf
ss
scas
jb
mov
adc
inc
cmp
cmp
dec
dec
add
inc
imul
mov
popa
cmp
dec
dec
popa
and
into
ficom
mov
cwde
sub
es
fldcw
mov
mov
nop
(bad)
xor
arpl
push
nop
rcr
xchg
mov
das
or
push
fnstcw
push
jmp
sub
add
test
adc
pop
and
imul
sub
xlat
mov
ret
mov
iret
cmp
mov
ret
add
sahf
test
repz
mov
sbb
sbb
sbb
mov
ins
add
push
dec
into
sbb
es
push
xchg
into
shr
std
sbb
sub
jns
pop
pop
push
pop
cmc
jl
aam
out
add
jno
pop
ss
jnp
or
jmp
push
pop
pop
mov
leave
pop
cdq
push
mov
push
cmp
add
icebp
imul
call
xchg
cwde
mov
push
pushf
xchg
and
fistp
pop
fs
or
dec
sub
pusha
push
dec
xor
mov
pop
fmul
out
movs
jecxz
ret
cs
lods
into
pop
lods
pop
add
ds
dec
sbb
inc
std
and
cld
and
mov
cmps
mov
jmp
imul
jnp
retf
cmp
into
lea
adc
loop
je
out
js
mov
int
xchg
popa
nop
mov
ins
(bad)
movs
inc
(bad)
pop
out
popa
sar
popf
neg
mov
xchg
mov
or
dec
xor
inc
jge
push
push
fwait
jge
fwait
dec
cmp
sbb
(bad)
or
xchg
pop
and
ret
ja
dec
and
and
vmovshdup
mov
jbe
out
jecxz
pusha
pusha
or
gs
xchg
lods
adc
pop
aaa
mov
repnz
in
stos
nop
and
imul
cmp
mov
(bad)
lock
test
add
daa
cs
popf
sbb
call
sti
cmp
or
iret
sbb
mov
test
ja
aad
mov
add
inc
or
xor
push
mov
inc
xchg
push
cmp
mov
push
xchg
mov
mov
xchg
nop
leave
push
cdq
loopne
out
cmps
call
addr16
jo
sbb
jae
sbb
std
stc
rol
cli
idiv
mov
lock
or
enter
iret
sub
fsub
not
jb
mov
aaa
mov
mov
mov
(bad)
inc
jle
test
iret
mov
xchg
inc
rcr
arpl
dec
sti
pushf
repnz
jge
jno
imul
sahf
test
in
daa
xchg
jo
adc
inc
add
aaa
scas
add
and
push
inc
pop
cmp
and
data16
in
push
push
data16
add
pop
mov
and
sbb
mov
sub
rol
dec
test
sbb
push
sbb
cld
lahf
aaa
pop
test
dec
cmc
test
inc
hlt
mov
stos
pop
mov
add
pop
adc
add
jae
mov
dec
sti
inc
xchg
mov
mov
(bad)
clc
or
jno
xchg
pop
popf
dec
sahf
sbb
add
sbb
daa
int
into
sub
pushf
sbb
cld
sub
cmp
and
into
(bad)
fld
mov
aam
data16
pop
push
jnp
leave
pop
sub
xchg
aam
xchg
pop
pop
call
loop
sti
sti
std
push
mov
inc
(bad)
push
xchg
push
adc
loopne
imul
out
mov
outs
sahf
ret
fdiv
mov
add
dec
in
mov
aaa
je
cmps
fnstenv
pushf
mov
add
xchg
pop
pop
sbb
iret
dec
aad
pop
into
push
push
jo
mov
adc
xchg
dec
ss
mov
mov
aam
test
lds
inc
xchg
adc
push
sbb
popf
cld
sbb
scas
xchg
and
cs
cmovbe
jmp
aaa
inc
retf
outs
ret
xchg
dec
scas
push
sub
mov
xor
mov
retf
imul
iret
cmp
test
xchg
mov
jmp
pop
popa
clc
sbb
lahf
or
rol
fst
addr16
into
jmp
in
inc
retf
sbb
mov
test
xchg
dec
sub
cmp
jbe
push
mov
and
push
rol
shl
popf
int
push
dec
mov
pop
mov
mov
aas
cmps
loope
ret
retf
xchg
or
aad
lahf
push
ficomp
dec
xchg
mov
retf
pop
ret
out
stc
fs
sub
ror
xchg
jno
pop
jb
repnz
out
cmp
sbb
fidiv
dec
lea
sbb
add
push
sti
ins
push
stos
sbb
inc
in
pop
jl
cmps
into
gs
mov
shl
and
jns
out
call
add
xchg
sub
call
movs
or
aaa
and
xor
mov
push
pop
xchg
icebp
inc
lods
pop
add
dec
das
dec
pop
adc
outs
or
mov
push
push
push
adc
dec
movs
sub
cwde
jp
cld
ins
test
clc
push
cmp
movs
mov
push
es
fisttp
sbb
data16
pushf
fidivr
ja
jbe
mov
scas
and
fstp
and
mov
mov
adc
cdq
outs
push
in
xchg
xchg
mov
leave
xchg
sbb
in
xchg
(bad)
cwde
jle
sbb
xor
xchg
and
pop
(bad)
leave
retf
popa
fidiv
popf
popf
pop
mov
inc
cmps
call
xchg
pop
pop
or
xchg
retf
call
pop
mov
arpl
inc
and
pop
ret
rcr
js
sub
pop
fild
xor
into
or
into
fs
jnp
fsubrp
adc
icebp
xchg
and
mov
add
dec
sub
cmp
retf
dec
sbb
xlat
fdivr
mov
clc
pop
movd
retf
sbb
daa
hlt
cs
cwde
mov
dec
sbb
pop
mov
pop
or
and
and
jnp
pop
adc
mov
ret
ss
jle
aad
je
popa
dec
jb
xchg
pop
ja
cmps
imul
add
mov
dec
sub
lock
dec
retf
inc
cld
stos
inc
cmp
sub
or
jg
push
(bad)
and
mov
js
jp
cmp
div
fild
(bad)
in
jecxz
push
pop
loopne
(bad)
into
mov
add
movs
icebp
(bad)
xor
add
mov
push
movs
(bad)
pop
adc
retf
add
inc
jbe
scas
jmp
pushf
(bad)
in
cmp
mov
in
cmps
cwde
and
xchg
std
(bad)
sbb
dec
lds
test
out
mov
scas
jns
or
mov
jo
jecxz
sub
push
aad
mov
movs
stc
sub
pop
cmp
xlat
(bad)
jo
add
mov
adc
sahf
and
popf
jo
retf
ret
pushf
push
xor
(bad)
sub
jno
jno
les
ss
mov
xor
xor
movs
in
add
or
(bad)
mov
call
imul
jae
lods
mov
push
stc
leave
pop
(bad)
pusha
cmp
(bad)
pop
cmp
cmp
std
lahf
fistp
xchg
jmp
mov
cmp
xchg
pop
sbb
lahf
je
xchg
mov
frstor
xchg
sbb
mov
cwde
xchg
mov
shl
mov
jg
fs
pop
xor
scas
mov
inc
push
mov
stos
jl
icebp
in
(bad)
out
cmp
xlat
in
shl
pop
test
out
inc
sbb
sub
outs
popa
ret
out
pop
call
test
loope
xor
adc
sbb
lock
jge
jmp
test
jmp
or
shr
imul
mov
popa
(bad)
(bad)
or
or
cmps
retf
call
push
(bad)
out
cwde
nop
std
scas
neg
cli
sbb
adc
das
nop
xchg
(bad)
jnp
ins
idiv
or
cs
sti
add
cld
repnz
loop
es
out
mov
mov
lock
test
push
mul
jbe
xchg
or
loopne
in
pusha
shl
lods
jae
or
stos
leave
dec
fwait
pusha
sbb
xchg
jmp
imul
jmp
dec
daa
push
outs
jno
inc
jb
(bad)
lods
mov
mov
out
cld
out
int
mov
pop
jo
sbb
dec
aam
jp
stos
icebp
lods
mov
xchg
push
mov
fistp
push
xchg
out
jmp
scas
dec
addr16
es
retf
rcr
(bad)
call
ins
popa
scas
cmp
pop
frstor
je
inc
stos
fstp
and
add
pop
cmpxchg
mov
jno
bound
pop
and
ins
add
mov
in
and
ins
add
cmc
arpl
cmp
pop
shl
push
mov
pusha
push
repz
add
add
in
ret
xchg
loope
xor
rcr
adc
neg
leave
stos
pop
es
xor
push
xchg
mov
xchg
arpl
es
push
adc
jmp
mov
dec
dec
mov
jnp
leave
mov
adc
ja
inc
pop
cld
gs
aam
pop
in
fdiv
push
mov
push
cmps
push
sub
in
add
stos
inc
clc
cli
jl
cwde
mov
in
fnstsw
xor
mov
and
and
inc
jp
xchg
push
push
fwait
mov
xor
jmp
xchg
out
cmp
mov
inc
outs
cmps
mov
popf
stc
jmp
push
and
test
fistp
popa
pop
mov
jb
(bad)
jmp
pop
cld
jmp
cld
ds
jb
and
fucomp
in
ret
out
pop
pop
cmp
or
cmp
pop
jle
out
jl
cmp
ror
mov
xor
in
mov
clc
mov
scas
push
jg
inc
ror
jne
(bad)
jge
or
or
imul
mov
test
sbb
push
test
xor
out
or
ins
in
cwde
jae
sar
call
jns
aaa
sbb
dec
sbb
dec
push
xchg
fwait
pop
mov
aas
aas
outs
pop
aad
pop
not
adc
jbe
sbb
fisttp
push
mov
push
dec
in
push
leave
int
sub
lea
push
sub
test
push
dec
popa
jle
out
dec
inc
mov
ret
movs
mov
cmp
cmps
aad
popa
enter
or
mov
pushf
mov
mov
in
jo
jecxz
icebp
fisubr
jmp
shr
mov
cmps
xor
das
mov
and
(bad)
jl
ror
or
add
rol
inc
sub
mov
xchg
jo
push
enter
xor
pop
mov
scas
and
cld
call
les
sub
dec
movs
test
push
outs
adc
lea
add
push
push
mov
ja
inc
mov
loopne
mov
xchg
and
xor
jo
mov
jecxz
sub
mov
and
mov
bound
pop
sar
xchg
jmp
pusha
jle
aaa
mov
mov
movs
add
push
push
sti
outs
(bad)
push
repz
imul
adc
sbb
or
xchg
jae
cmp
loopne
cmp
lods
test
loope
or
sahf
cld
xor
mov
sbb
hlt
in
and
jle
add
popa
cmp
push
outs
inc
add
mov
xlat
xor
mov
xchg
dec
inc
cmps
lods
mov
pop
cmp
dec
repz
inc
adc
xchg
add
cmp
les
jecxz
jecxz
jg
cli
sbb
sti
cmp
cs
(bad)
and
cwde
jo
xor
mov
test
pop
out
or
xchg
jns
inc
mov
mov
mov
cmps
xchg
sub
scas
lea
sti
out
xor
xchg
dec
jl
adc
xor
ins
xchg
jl
xchg
and
inc
jbe
or
(bad)
ret
out
je
(bad)
loopne
add
ss
jo
adc
and
dec
mov
out
jmp
pop
xor
retf
jl
jmp
retf
cwde
ds
cli
push
and
mov
das
pop
pop
sar
xchg
rcr
mov
push
pusha
sub
imul
pop
ror
xchg
add
div
popf
je
ins
mov
stos
add
ret
mov
imul
inc
ja
enter
add
mov
mov
sbb
lods
test
fwait
xchg
dec
test
in
aaa
sub
sar
xchg
inc
stos
xchg
push
pop
fdivr
dec
rcr
add
pop
cwde
in
xchg
dec
xlat
ins
iret
and
xchg
cmp
dec
popa
cwde
sar
stc
aad
and
inc
pop
pop
enter
rcr
cmp
mov
lahf
idiv
push
dec
je
inc
or
xor
daa
fwait
jbe
mov
pop
mov
mov
addr16
pop
pop
or
stos
ins
out
call
dec
push
aaa
adc
lea
jmp
adc
add
adc
and
fcomip
into
iret
or
sti
lods
js
sub
imul
pushf
movs
iret
sar
adc
pop
adc
popf
aam
inc
mov
shl
cmp
sbb
add
outs
pop
call
mov
dec
xchg
stos
imul
or
xor
ficomp
mov
adc
test
jbe
add
out
dec
mov
out
mov
adc
or
xchg
pop
test
movs
test
int
imul
inc
test
mov
ret
pop
xchg
mov
sub
jecxz
fisttp
ja
pop
les
das
dec
scas
mov
inc
inc
xchg
add
(bad)
int3
inc
add
mov
add
push
mov
rcl
scas
pop
jecxz
mov
mov
sub
pop
mov
lds
xchg
jae
cvttps2pi
add
mov
add
(bad)
jb
test
pushf
push
adc
fst
mov
mov
rol
es
retf
or
ins
sub
sub
push
push
mov
and
push
into
dec
pop
ss
lock
adc
in
lods
out
dec
out
inc
xchg
jp
cmp
mov
test
jge
mov
(bad)
(bad)
cdq
inc
add
and
fs
mov
rcr
mov
iret
or
pop
neg
mov
xlat
adc
xchg
repnz
sti
enter
and
and
push
mov
lea
dec
add
xchg
test
jge
pushf
inc
sbb
mov
fs
lahf
dec
test
xchg
xchg
sar
push
push
in
xor
loopne
rcl
sti
mov
pop
lods
cs
cmp
or
or
pop
enter
out
push
dec
sub
dec
cmp
mov
loope
mov
push
adc
pop
adc
dec
stos
ss
jns
inc
popf
mov
shl
shl
cmp
add
add
inc
adc
fcomp
sub
(bad)
push
jbe
cmp
jmp
fistp
xchg
mov
push
pop
loope
cmp
(bad)
call
frstor
(bad)
loop
inc
push
adc
rol
pop
xor
push
inc
push
int3
stc
fnstenv
mov
dec
jnp
icebp
push
lods
jle
jl
in
pushf
loope
rcr
sbb
movs
adc
repnz
fdiv
xor
mov
ret
js
lods
mov
cld
push
cdq
ret
repz
sbb
jmp
ins
push
std
jp
cmps
pop
push
test
(bad)
mov
jmp
test
ss
push
in
(bad)
into
push
rcl
add
in
gs
(bad)
xacquire
fdivr
bswap
(bad)
int3
xchg
data16
lahf
test
leave
or
and
sbb
pop
pop
aaa
add
cs
xor
ret
xlat
or
iret
push
fnstcw
inc
scas
cmps
aas
and
xchg
jo
and
dec
scas
fsub
mov
sbb
cmp
cwde
and
test
cwde
fnstsw
xor
mov
mov
pop
test
imul
xor
loope
and
test
(bad)
(bad)
scas
dec
(bad)
loop
mov
(bad)
int
push
inc
jl
(bad)
(bad)
pop
fcom
test
out
clc
into
and
fild
mov
pop
fwait
inc
ret
ret
cwde
or
cld
ror
das
pop
push
pushf
sub
jge
bound
jbe
adc
sub
sbb
pop
push
aas
scas
sti
lahf
mov
sbb
jmp
aaa
ins
stc
loope
mov
loopne
push
popf
retf
aad
enter
push
neg
jae
(bad)
retf
nop
cmp
adc
xor
or
mov
xor
or
adc
cmp
imul
dec
ficom
mov
das
fs
pop
adc
call
std
bound
mov
das
fisttp
xor
push
gs
stos
mov
js
xchg
mov
mov
add
mov
iret
out
jg
cmp
xor
(bad)
and
lea
repz
pop
mov
dec
in
addr16
xchg
out
mov
pop
xchg
fs
aam
pop
mov
mov
xchg
xor
or
dec
sbb
or
mov
outs
inc
jle
ret
push
jle
call
outs
inc
enter
jmp
cld
lods
xchg
ret
not
stos
jbe
loope
sbb
data16
shr
xor
test
pop
lods
test
mov
jbe
inc
dec
sub
fcomp
add
dec
aas
call
fadd
sbb
aad
mov
cmc
call
nop
or
fs
test
push
and
movs
sbb
clc
inc
aam
add
dec
cmp
xor
xchg
ins
leave
(bad)
mov
mov
dec
fucom
and
sti
push
jmp
dec
mov
cmp
mov
stc
aad
xor
out
adc
int
clc
popf
jmp
xor
jge
cmps
sti
add
inc
fwait
or
jge
dec
das
popf
arpl
inc
cmp
or
add
out
mov
xchg
in
xchg
outs
add
fcomp
or
sub
sub
mov
sub
sahf
pop
lods
out
xor
fcomp
push
push
aaa
in
popa
in
jmp
ins
ins
pusha
stos
inc
mov
vpcmpeqw
ss
pop
ret
jae
fdivr
sbb
jbe
add
movs
(bad)
push
xchg
jno
xor
xchg
xor
add
je
aas
aad
test
or
xchg
dec
lahf
int
xchg
pop
and
sti
mov
jg
xchg
int3
loope
push
add
or
jae
shr
or
xchg
jo
popa
jle
sub
sub
es
jbe
adc
pop
xor
mov
cmp
int3
pusha
leave
lods
lods
aam
sbb
add
retf
fmul
lods
rcr
cld
jg
ds
out
pop
sub
imul
out
jns
push
sbb
lock
out
sbb
loop
jmp
inc
test
enter
and
push
aas
mov
out
lahf
sar
push
pop
popa
cmps
pop
mov
imul
data16
call
mul
xchg
retf
cld
mov
push
xor
pop
mov
scas
push
xor
mov
dec
sahf
or
push
mov
jmp
lock
dec
mov
test
dec
mov
dec
xor
dec
dec
sub
mov
push
scas
sbb
or
stc
sbb
cmp
call
retf
lea
sahf
mov
jns
mov
in
cdq
jo
mov
outs
jb
mov
xor
test
adc
jne
sbb
jno
sbb
push
repnz
cli
(bad)
outs
call
ss
cmc
fldcw
in
cmc
pop
lods
(bad)
pushf
mov
jmp
repnz
outs
jbe
xlat
add
push
jne
mov
movs
retf
pusha
outs
jb
adc
push
and
(bad)
lea
or
or
mov
jae
lea
cmc
dec
adc
aad
lods
push
lock
out
add
jg
ret
adc
xchg
pop
daa
cmp
cmp
or
xor
jmp
xlat
int3
dec
ins
dec
(bad)
in
out
(bad)
das
cmp
sub
jo
xchg
add
ss
fwait
movs
or
adc
call
pop
imul
xor
jmp
cmp
(bad)
jmp
sbb
and
lock
xor
cdq
fwait
rol
outs
nop
enter
pop
jno
fisttp
sbb
cli
xor
clc
or
stos
imul
add
push
mov
mov
or
cwde
adc
mov
or
test
lds
rol
xchg
sub
fbstp
sti
ret
sbb
sbb
imul
xlat
cmp
dec
pushf
cmps
cmp
dec
mov
mov
cmp
sub
xor
adc
fcomp
das
bound
jg
jne
or
sbb
jmp
jne
or
sbb
aaa
fadd
and
je
and
mov
cmp
int3
mov
test
push
adc
push
lds
add
or
jp
dec
mov
imul
(bad)
(bad)
dec
jecxz
push
dec
dec
out
ins
inc
mov
into
mul
mov
stos
leave
pushf
jnp
fsub
xor
arpl
pop
loopne
pop
xlat
sbb
rcl
xor
push
xor
ficom
mov
push
rol
xchg
pop
loopne
dec
shl
cmp
xchg
xchg
xchg
hlt
mov
fnstenv
retf
int3
out
jb
sbb
ret
cwde
dec
call
lock
adc
fsubr
sbb
push
jnp
xchg
clc
jp
mov
ficomp
push
inc
xchg
dec
xchg
cmp
push
jbe
movs
adc
mov
cmp
and
jae
pop
xchg
(bad)
adc
push
js
or
lds
test
nop
pushf
ins
movs
icebp
or
mov
sbb
xchg
les
lahf
inc
sub
call
push
jl
cmp
clc
xor
pop
jecxz
jge
shl
idiv
addr16
add
test
xchg
pop
enter
scas
xchg
(bad)
dec
dec
xor
jo
push
inc
dec
cs
add
sub
add
fwait
inc
bound
xchg
(bad)
int
push
pop
mov
ss
add
jno
mov
push
(bad)
xchg
mov
and
sub
shl
(bad)
sub
mov
mov
xor
pop
scas
inc
xor
fist
ret
cmp
(bad)
je
fist
pop
(bad)
imul
jb
imul
pop
mov
fwait
dec
and
xor
push
pop
mov
dec
pop
mov
mov
jmp
mov
or
das
pop
(bad)
cmp
pop
out
sahf
mov
es
push
xor
out
cmovns
sti
out
xor
jge
loopne
and
lahf
(bad)
int
movs
ja
xor
idiv
xchg
stos
inc
and
xor
ror
imul
cmp
sti
movs
shr
push
mov
int3
xchg
dec
pushf
cmp
push
icebp
pusha
pushf
pop
mov
test
scas
out
and
mov
int
movs
cdq
retf
mov
scas
dec
xor
cmp
cmc
xchg
addr16
or
cmp
sub
pushf
mov
leave
xor
mov
adc
mov
pop
pop
inc
repnz
push
addr16
mov
mov
and
(bad)
repz
xchg
mov
xor
pop
and
jl
aad
jp
or
add
mov
jns
icebp
sbb
es
jmp
pushf
xchg
cmp
rol
dec
pop
mov
test
push
pop
inc
and
in
call
test
add
sahf
cmps
loope
mov
inc
dec
cs
push
out
mov
jne
or
sbb
(bad)
mov
retf
stc
inc
imul
inc
xchg
shl
mov
cmp
xor
push
shr
adc
xchg
shl
xchg
mov
in
repnz
or
mov
adc
dec
fs
inc
cs
push
cmp
enter
ss
mov
aad
int
fxch
lea
xchg
fist
fwait
jp
add
push
aaa
sub
cdq
xchg
mov
imul
xchg
jle
mov
jl
dec
add
div
inc
stc
ins
out
imul
enter
in
rep
aad
fcom
cdq
add
mov
daa
sbb
in
lea
stos
xchg
pop
jnp
int
xor
cmp
clc
adc
loope
(bad)
arpl
cmp
jmp
ins
popa
(bad)
push
jmp
xor
and
int3
(bad)
loopne
cmp
mov
aas
shl
dec
in
(bad)
mov
rcr
mul
inc
popf
loop
je
inc
cmps
mov
bound
sbb
in
jle
enter
out
mov
add
push
push
ss
inc
mov
inc
(bad)
jb
jge
nop
les
adc
cld
test
test
movs
dec
ss
popa
add
fstp
call
jp
push
fwait
mov
ret
cmc
fistp
neg
lahf
sbb
aam
test
inc
daa
adc
out
mov
cli
jne
and
sub
and
cmps
pusha
mov
xor
inc
leave
cmp
(bad)
int
ins
popa
dec
daa
neg
mov
ror
cmp
in
xlat
(bad)
xchg
mov
mov
arpl
leave
lock
xor
jae
loop
xchg
out
push
jge
fcomip
(bad)
call
pop
rol
imul
dec
loop
popa
pop
stc
dec
pop
into
and
ficomp
ss
adc
mov
hlt
push
xchg
loopne
int
pop
test
xchg
xor
lds
mov
aas
xor
leave
in
daa
add
jmp
or
bound
or
sub
dec
test
adc
stos
or
mov
jge
dec
fisubr
lea
aam
lock
sub
es
pop
mov
xlat
fidiv
sar
dec
retf
xor
xor
fld
(bad)
lock
dec
ins
push
mov
iret
loopne
std
xor
ror
mov
imul
sub
sbb
sub
in
idiv
push
xor
bswap
pop
fsubrp
sub
push
out
xchg
inc
out
aad
test
xor
jno
arpl
sar
hlt
jmp
or
scas
sub
xor
shl
movs
xchg
push
lods
xchg
int
xchg
or
mov
iret
mov
ja
ror
into
jb
push
iret
jmp
and
inc
sets
sub
inc
push
pop
fldcw
cli
cmps
hlt
stos
mov
repnz
inc
jmp
lahf
mov
mov
pop
rol
mov
sar
loope
out
adc
aam
mov
push
(bad)
jmp
test
mov
retf
mov
xlat
mov
lahf
in
stc
fild
daa
mov
xor
and
loopne
call
mov
dec
icebp
fisttp
jns
jmp
xlat
mov
xchg
add
jo
cwde
mov
retf
iret
(bad)
mov
mov
mov
cmps
enter
aam
sub
push
stos
jmp
mov
cli
jbe
(bad)
mov
mov
inc
push
bound
ins
push
lods
pop
je
shr
xchg
xor
jmp
jg
repnz
xchg
adc
push
aas
mov
or
inc
mov
mov
xchg
movs
hlt
add
scas
je
dec
sbb
and
jno
neg
in
cwde
add
push
mov
add
xor
out
add
jge
xchg
mov
mov
add
and
jge
dec
cli
mov
sbb
mov
mov
popf
add
jae
pop
ror
cmc
xchg
daa
lea
mov
xchg
mov
repnz
adc
nop
mov
pushf
inc
in
out
add
iret
adc
cld
pop
movs
sub
daa
mov
mov
into
out
dec
jne
add
repnz
or
cmp
sbb
stos
dec
out
daa
leave
xchg
jmp
or
jecxz
pushf
leave
dec
sbb
fnstenv
jmp
outs
push
pop
mov
loope
test
push
fbstp
add
es
mov
mov
mov
sbb
xchg
push
cmp
daa
popf
gs
cmp
int
push
dec
push
mov
aam
test
cli
in
int3
mov
iret
or
cmp
retf
call
pop
mov
dec
arpl
clc
test
adc
adc
pop
adc
or
sbb
xchg
out
ins
xor
or
jo
pop
dec
out
and
push
out
xchg
dec
mov
and
jmp
inc
clc
ret
idiv
daa
cmp
xor
mov
stos
mov
sti
sub
adc
mov
cld
out
push
bound
mov
mov
sub
xor
cli
popa
fidiv
callw
bound
pop
ins
push
shr
xlat
shr
mov
inc
into
adc
dec
out
lahf
push
dec
cdq
(bad)
jmp
iret
inc
shl
sbb
ret
jg
int3
mov
daa
and
and
(bad)
daa
ins
sbb
mov
inc
jnp
dec
cmp
push
mov
je
xchg
repz
stos
push
outs
pop
call
pop
xor
mov
xor
into
inc
jne
fnstcw
sub
ror
repz
pop
enter
add
inc
or
push
(bad)
cmp
mov
pop
dec
fcomi
cmps
push
pop
sbb
mov
adc
retf
inc
jb
push
add
pop
pop
xchg
outs
push
add
xchg
pop
xor
dec
add
shl
pop
jl
stc
nop
xchg
in
aaa
mov
mov
imul
fs
jmp
fsubr
xchg
movs
jbe
test
inc
or
mov
ins
add
ins
xchg
add
stos
pushf
or
pop
mov
mov
mov
fadd
add
dec
xchg
pop
jns
rcl
dec
mov
sub
add
call
test
sar
sub
pop
stc
retf
jno
xchg
push
(bad)
xchg
jne
inc
jl
xor
shl
cmc
loopne
test
mov
enter
js
call
ins
mov
dec
mov
push
ins
sahf
adc
fild
and
push
jb
or
push
jne
add
mov
arpl
jecxz
(bad)
(bad)
add
mov
pop
retf
(bad)
cwde
ret
loope
and
xchg
xchg
xlat
sbb
scas
xor
stos
cmp
pop
or
cmps
and
test
sub
sbb
mov
mov
mov
adc
test
lock
(bad)
adc
enter
test
dec
inc
aam
sub
dec
shl
dec
(bad)
mov
mov
mov
scas
js
imul
je
add
paddw
cmp
icebp
stos
cwde
movs
outs
jmp
dec
cmc
mov
or
enter
(bad)
rcr
call
inc
std
jle
jp
popf
mov
stos
cld
in
push
scas
fndisi(8087
stos
shl
repz
mov
sbb
pop
gs
daa
js
nop
cmp
lea
dec
leave
xor
ss
jmp
pushfw
xchg
call
repnz
fsubr
pop
fidiv
fwait
inc
stos
pop
lea
call
gs
mov
xor
cmc
push
pop
into
test
add
cwde
push
test
retf
xchg
and
out
in
or
icebp
add
dec
ins
cmp
sbb
sbb
xor
or
ja
jl
mov
ret
mov
and
push
call
lods
pop
mov
add
and
fldenv
xor
ret
in
cmp
repnz
pop
dec
(bad)
jno
and
dec
jl
inc
dec
cs
fcmovnb
lods
dec
das
repnz
mov
mov
xor
mov
std
ins
pop
shr
mov
icebp
iret
repz
and
int
ret
jmp
sbb
out
add
mov
movs
mov
push
pushf
jb
out
add
jae
mov
push
push
mov
mov
jno
or
imul
lods
mov
sbb
jmp
movs
mov
mov
mov
das
jmp
push
movs
leave
into
ja
outs
loop
js
das
add
or
repz
xchg
jmp
dec
fistp
or
in
test
jl
inc
test
call
cmp
aas
sbb
retf
inc
shr
popa
call
js
mov
add
vxorpd
aaa
mov
daa
xchg
jecxz
ins
ss
pop
mov
inc
add
inc
sbb
cdq
xchg
(bad)
in
inc
mov
gs
ret
or
push
fbstp
xchg
mov
sub
push
lock
loop
cmc
pop
inc
daa
retf
icebp
into
sub
dec
ror
push
jle
into
outs
mov
rcr
les
pop
dec
mov
mov
jno
cwde
mul
push
fbld
fcmovb
push
push
iret
cwde
pop
sti
mov
or
bound
and
int3
xchg
(bad)
sti
enter
xor
sub
(bad)
dec
mov
push
sub
daa
sub
fadd
inc
jmp
ret
stos
mov
xchg
pop
cmp
loope
call
or
inc
jg
imul
lods
fcom
mov
and
inc
(bad)
clc
fmul
push
ds
pop
adc
daa
iret
sub
xor
xchg
mov
pop
call
xchg
ret
(bad)
mov
fnstenv
sbb
fstp
adc
xor
mov
mov
inc
test
sub
mov
add
imul
clc
out
sbb
and
mov
xlat
outs
movs
je
sub
movs
mov
cmp
mov
add
cmc
fisub
sub
and
push
mov
fimul
or
aas
mov
push
(bad)
pop
jb
call
sub
ja
xor
push
jp
and
ret
(bad)
inc
sbb
bound
cmp
enter
fdivp
jb
lock
ins
scas
out
cmp
xor
aad
movs
test
xchg
outs
cdq
not
mov
jmp
xchg
cmp
ja
mov
mov
push
cmc
(bad)
std
or
add
rcr
out
mov
outs
add
ret
and
test
daa
fstp
sbb
push
(bad)
pop
cld
jge
xchg
retf
cmp
or
fwait
or
mov
rcr
push
int
sahf
arpl
xchg
clc
pop
aaa
sub
mov
lock
popa
enter
and
fwait
addr16
push
repz
dec
sahf
fisttp
push
daa
loop
int3
jno
jecxz
dec
sbb
les
iret
outs
dec
or
jecxz
mov
mov
not
lea
inc
or
mov
mov
inc
movs
cdq
xor
gs
fwait
sahf
fs
push
clc
sbb
jae
js
ret
jmp
stc
bnd
mov
ins
repnz
mov
ds
and
hlt
imul
movs
xchg
pushf
fistp
leave
iret
xchg
xchg
sbb
out
fucomp
retf
mov
mov
and
outs
scas
cmp
into
rol
jp
and
dec
aam
int
and
fst
std
pop
push
popf
or
mov
push
jge
sbb
fld
outs
aaa
or
sbb
and
pop
mov
sbb
fwait
xlat
jmp
lock
cwde
in
sbb
fnstcw
div
or
xor
add
cwde
test
stc
ror
xlat
cmp
(bad)
push
push
in
test
inc
add
scas
mov
jmp
idiv
retf
or
or
inc
jge
xchg
fcomp
loopne
pop
jns
pop
retf
and
mov
jmp
or
sub
jle
ss
mov
dec
pusha
xchg
int3
mov
jmp
sub
imul
or
(bad)
mov
lock
inc
fidivr
stos
scas
or
push
dec
dec
aam
int3
gs
retf
stc
sub
jmp
cwde
mov
cmc
sub
cli
in
push
das
inc
jmp
out
das
retf
cli
add
test
push
shr
(bad)
lea
mov
and
push
mov
mov
mov
mov
enter
add
iret
daa
out
and
pusha
dec
and
jb
lods
add
mov
clc
pop
retf
dec
pop
jns
add
dec
inc
push
aaa
pop
jl
hlt
fdivr
inc
cmp
mov
inc
pop
pop
icebp
out
lods
movs
jns
stos
cli
xchg
retf
push
jne
pusha
cmp
or
xchg
idiv
jnp
inc
inc
es
aam
imul
mov
in
add
sar
mov
ret
movs
std
jo
clc
mul
fs
pop
pusha
dec
(bad)
sub
js
jno
aam
(bad)
fld
jae
mov
mul
sbb
mov
sbb
adc
(bad)
mov
fld
mov
(bad)
fsub
cli
cmc
in
imul
inc
dec
(bad)
ret
retf
push
mov
(bad)
sbb
ficom
das
(bad)
loop
mov
in
xlat
jns
adc
xor
ror
pop
and
jo
pop
jle
jbe
xchg
aad
shr
add
sbb
xabort
ret
sti
das
jge
sub
xchg
or
jae
dec
pop
iret
cmp
jle
sub
sub
jmp
jmp
leave
ins
adc
loop
jmp
pop
add
frstor
mov
call
retf
push
pop
enter
mov
jmp
repnz
jp
loop
pop
add
mov
popf
cwde
dec
sub
jl
idiv
push
jecxz
iret
das
sbb
add
mov
cmps
xchg
push
fild
jmp
rol
mov
scas
pop
aaa
mov
mov
push
inc
(bad)
push
fild
arpl
test
sti
add
daa
fidivr
pop
or
loopne
out
mov
imul
call
int3
call
pop
popf
or
fmul
xlat
mov
push
pop
sbb
push
shl
jae
ret
mov
pop
jmp
ret
ins
dec
add
es
sub
repz
rol
adc
jb
in
popa
inc
dec
jmp
cdq
push
out
mov
nop
rcl
shr
hlt
idiv
mov
in
scas
in
mov
pop
in
lods
or
xor
repz
outs
mov
int3
in
cmp
fnstcw
mov
xchg
mov
push
push
cmp
repz
fwait
stos
pushf
in
dec
ficomp
repnz
pusha
mov
mov
sbb
mov
in
repz
jne
test
shr
sbb
push
(bad)
cs
xor
movs
es
cld
mov
ret
inc
rcr
mov
sub
jne
scas
and
inc
iret
or
sbb
jge
push
mov
jle
jl
xchg
inc
bound
inc
dec
jmp
(bad)
xchg
cld
test
aam
cmps
inc
mov
mov
cmps
cli
loop
mov
ins
ins
dec
aad
xor
xchg
cmp
sub
in
dec
push
or
sti
cmps
stc
add
inc
push
out
pushf
(bad)
aad
cmp
test
sbb
xor
xchg
mov
fcom
push
cli
sbb
sub
mov
aam
adc
int3
inc
cli
jg
fs
add
xor
cmps
mov
repz
je
inc
fcomp
movs
jle
sbb
(bad)
out
inc
mov
or
push
sub
(bad)
retf
inc
out
(bad)
cli
push
call
xchg
cmp
loopne
rol
lods
js
jnp
pop
fdivr
pop
call
fdivrp
mov
sub
sbb
loopne
inc
pop
cmps
jb
push
je
pop
xchg
fwait
mov
lea
xor
adc
push
sar
cmp
les
mov
ret
jno
mov
mov
lods
or
pushf
lods
sbb
pop
mov
jge
mov
lods
in
jae
cmps
jo
test
cmps
push
sbb
mov
xchg
push
push
mov
retf
out
xor
jmp
dec
cli
retf
mov
call
fnstenv
dec
sbb
cli
pop
out
mov
fwait
movs
dec
jg
fst
add
cmps
add
mov
pop
and
mov
popf
cld
je
adc
jbe
cpuid
jecxz
iret
jp
mov
sub
dec
aad
push
inc
fdiv
xlat
pop
mov
fild
push
push
nop
loope
dec
add
fisttp
fcom
mov
enter
lods
das
in
call
mov
imul
push
sub
outs
aad
jb
(bad)
cmp
dec
push
sti
push
(bad)
out
add
out
mov
push
ror
xchg
out
lds
jecxz
fcom
int
pop
scas
jmp
cld
jno
ror
clc
ja
mov
cmps
sti
mov
outs
lds
rol
xor
cwde
shl
lods
or
cmp
sbb
xor
add
or
push
mov
push
out
retf
mov
mov
fstp
mov
repz
pop
aas
xchg
jl
sub
retf
popa
in
fcmovne
push
pop
fldcw
loop
in
scas
data16
test
jge
jne
jno
les
inc
ins
(bad)
call
jecxz
outs
ins
mov
adc
xor
dec
xor
inc
cmp
add
movs
sar
cmp
mov
test
daa
jmp
test
int3
mov
ret
ror
aaa
icebp
ins
mov
mov
fs
cmp
shr
add
lods
gs
or
push
ins
push
loope
xchg
add
push
sahf
mov
mov
mov
out
out
cli
xlat
aaa
fsub
ins
cmps
call
lock
mov
mov
int
cdq
pop
movs
stos
dec
mov
xor
jb
pop
pop
mov
push
jge
mov
pop
sahf
cmp
mov
call
sbb
ja
dec
repz
push
xchg
push
fwait
mov
fs
popa
sub
cmp
add
call
cmps
jb
(bad)
test
ffreep
fdiv
and
mov
xor
lahf
lods
adc
cmc
imul
push
iret
adc
jbe
imul
jns
fdiv
pop
xchg
retf
cmp
ror
mov
loop
cmps
rol
stc
adc
das
repz
int3
xchg
push
cmps
sub
mov
jne
adc
cmp
cmp
fnstenv
in
adc
mov
lahf
rcr
call
ins
cwde
hlt
jae
dec
nop
ins
je
adc
add
enter
fsubr
inc
or
sbb
int
aam
sub
mov
inc
mov
adc
sbb
(bad)
not
pop
or
jl
adc
pop
dec
std
jb
test
jmp
add
mov
imul
xor
sub
fdiv
bound
xchg
scas
aad
cld
pop
sub
mov
cmp
out
cmps
jbe
xor
mov
xchg
sbb
push
jg
jns
call
jge
and
inc
inc
jns
in
call
xchg
adc
fdivr
add
sbb
rcr
lds
dec
sti
aaa
push
add
mov
xor
or
mov
add
test
adc
das
xchg
dec
xchg
shl
sub
(bad)
xchg
test
jb
jbe
call
dec
cdq
xchg
pop
mov
icebp
or
aad
add
sub
in
je
fsub
sbb
inc
lods
xor
jl
xchg
xor
inc
out
mov
cld
cmp
add
xor
mov
adc
add
lock
xor
inc
pop
jmp
xchg
cmp
inc
cmp
add
movs
add
inc
call
pop
fsubrp
pop
pushf
shr
je
push
out
jmp
hlt
shr
mov
inc
leave
and
loopne
addr16
sub
out
jo
cmps
inc
ja
dec
adc
xchg
dec
loop
mov
enter
popa
imul
cmp
dec
cmp
fldcw
(bad)
ins
pusha
or
push
xor
mov
ins
fisubr
jmp
jo
pop
pop
mov
xor
inc
mov
push
push
inc
xchg
cmp
popf
ja
lods
mov
push
jb
div
jns
cmp
mov
mov
pop
cmp
jae
or
cmps
shl
cli
out
fdivr
mov
adc
jns
mov
push
mov
retf
jp
pop
dec
fwait
xchg
cwde
int
in
jbe
shr
outs
or
sub
sub
outs
les
shl
push
jmp
xchg
dec
ds
jmp
and
fcmovnb
adc
ret
ret
std
int3
out
dec
loop
cmp
pop
jmp
xlat
or
cli
add
and
dec
cmps
dec
mov
push
mov
jns
fwait
out
fs
fwait
mov
ins
mov
jne
sbb
mov
or
xchg
call
mov
or
cmp
(bad)
xor
xchg
sub
push
out
jmp
push
xlat
adc
pop
fidiv
inc
cmp
jbe
out
dec
and
popa
outs
mov
or
mov
mov
daa
cmp
pushf
ret
or
iret
mov
adc
push
fsubr
add
jno
and
mov
xchg
sub
mov
jle
mov
or
cmps
sbb
mov
fs
cdq
lods
fild
jmp
lods
mov
emms
in
inc
adc
es
neg
out
jg
cmp
shl
sbb
(bad)
cld
mov
ret
mov
(bad)
mov
in
aam
mov
enter
push
jle
add
aam
icebp
loop
lock
ds
(bad)
pusha
lods
(bad)
or
loopne
mov
les
sahf
inc
jb
bound
jo
jns
add
jp
sar
mov
fwait
icebp
adc
out
mov
popa
cdq
test
inc
je
leave
mov
mov
xchg
mov
mov
in
xchg
xor
jecxz
(bad)
sub
in
loop
lds
ss
inc
(bad)
popa
add
call
mov
repz
add
(bad)
ret
repz
or
daa
jnp
mov
leave
adc
sub
xor
popa
sub
retf
mov
or
repz
jns
sub
les
mov
jg
jne
sbb
jo
rcr
push
scas
bts
sbb
das
outs
push
int
cmps
mov
xchg
mov
in
dec
jge
pop
loop
cmp
sbb
inc
fcomp
jne
(bad)
xor
aaa
ins
hlt
in
adc
pop
sbb
mov
out
dec
nop
leave
sbb
dec
in
sub
nop
sbb
loopne
mov
xchg
mov
or
push
push
mov
scas
dec
popf
jecxz
cmps
out
jnp
mov
mov
lods
and
mov
pushf
pop
arpl
push
add
sbb
mov
cli
and
ror
and
mov
push
daa
pop
sub
pop
loopne
loopne
sbb
xlat
mov
retf
dec
cmp
and
or
push
xor
out
shl
jecxz
popf
and
push
jmp
mov
push
cld
sub
movs
sub
mov
fsubr
fwait
jbe
fisubr
sub
mov
(bad)
sbb
iret
jmp
xor
rcl
and
cmp
jno
data16
xchg
pop
ret
test
push
jmp
ret
pop
pop
call
sahf
inc
jl
jb
arpl
sub
cmp
out
dec
stos
dec
push
mov
xlat
arpl
cmp
cmp
add
rcl
jnp
dec
test
inc
bound
mov
clc
cmp
inc
lods
movs
inc
loop
sbb
sbb
div
fisttp
aas
gs
es
sub
pop
enter
gs
or
inc
pushf
mov
mov
ficom
gs
pop
xchg
jno
lods
je
sar
pop
mov
xlat
or
push
inc
mov
or
and
cmp
imul
pushf
dec
and
jb
sub
das
xor
test
in
jg
inc
sbb
call
aam
ret
or
dec
inc
dec
pop
mov
mov
mov
out
dec
dec
mov
cmps
jge
leave
loope
test
loope
adc
call
int
(bad)
push
(bad)
nop
(bad)
sbb
in
pop
mov
jmp
iret
adc
std
movs
test
pop
dec
sti
xor
xchg
gs
fidiv
stos
gs
cmp
cmp
daa
dec
in
sub
enter
enter
mov
jne
addr16
xchg
stos
in
(bad)
call
loopne
(bad)
jp
addr16
sbb
jbe
mov
stos
arpl
lds
sub
rcr
cmc
cmp
xchg
or
mov
imul
pushf
addr16
daa
add
in
mov
loope
mov
retf
cmps
nop
inc
repnz
adc
dec
jge
mov
push
jne
sub
ror
mov
inc
add
sbb
jae
jecxz
aas
jp
or
jecxz
arpl
out
add
push
inc
mov
daa
xor
stos
repnz
loop
repz
sbb
push
push
test
les
movs
push
inc
pusha
pop
sahf
loope
adc
clc
lds
mov
jecxz
jo
sbb
rcl
sbb
xchg
fwait
mov
adc
xor
and
mov
test
cwde
sub
aad
ja
hlt
mov
loopne
mov
mov
sub
enter
add
mov
(bad)
xchg
lods
leave
xor
inc
jp
cmp
mov
sbb
cmp
out
adc
in
mov
movs
mov
out
mov
imul
push
xor
mov
xor
pop
imul
pop
mov
ss
je
mov
sbb
and
push
and
dec
ret
pop
js
call
not
jno
iret
mov
sbb
push
je
and
in
pop
pop
xor
and
adc
dec
mov
push
lahf
std
in
cwde
inc
jnp
xchg
mov
cld
sbb
and
scas
push
mov
rol
pop
and
fwait
pop
mov
cmp
nop
pop
adc
call
xchg
and
ins
shr
std
scas
jo
mov
cld
std
mov
push
adc
push
xchg
out
cld
aam
sub
es
stos
mul
add
pop
mov
pop
add
jg
xchg
or
out
sahf
jg
pop
fs
pop
and
mov
call
dec
test
outs
out
mov
push
mov
cli
adc
xchg
dec
dec
jecxz
mov
mov
int
push
pop
sbb
fiadd
mov
xchg
xchg
lea
repnz
stos
ins
pop
fdiv
fstp
and
mov
stos
xor
pop
fidivr
sahf
ror
adc
ret
mov
(bad)
push
sub
ds
xchg
inc
cdq
retf
sub
test
fmul
sar
sub
loopne
clc
dec
jp
(bad)
dec
xchg
xor
inc
cmp
pop
xor
cmps
sbb
pusha
jb
shr
xchg
sub
mov
ret
adc
ss
inc
adc
retf
ins
push
bound
nop
pop
cdq
inc
sub
je
(bad)
push
push
call
xchg
jne
fsubr
push
dec
mov
sub
(bad)
xchg
inc
push
repz
ins
repz
push
cs
and
cwde
fbld
and
fstp
inc
jns
les
cmp
cmp
mov
mov
or
mov
sbb
mov
xor
mov
and
jl
push
mov
(bad)
cmp
mov
mov
pop
jno
push
imul
(bad)
sahf
jg
repz
repz
leave
sub
(bad)
bound
or
dec
daa
test
pop
fmul
imul
jecxz
iret
sti
enter
add
pop
cmp
adc
mov
mov
fld
(bad)
test
shl
jp
das
dec
mov
xor
jbe
fwait
cmp
or
mov
push
jmp
mov
dec
or
(bad)
add
mov
aam
scas
pop
fmul
pop
inc
push
sub
imul
data16
adc
aam
push
(bad)
cmp
cmp
mov
dec
lods
scas
jg
push
cmp
cmp
pop
sub
(bad)
dec
das
mov
pop
aad
in
sbb
aad
xlat
std
inc
es
rol
call
and
and
je
adc
(bad)
mov
mov
cmp
fisub
or
ss
and
xchg
jnp
lock
inc
add
pop
sti
fild
pusha
adc
adc
jne
lock
in
test
dec
xchg
stc
jb
xchg
aas
or
mov
stos
shl
mov
ins
dec
std
fcmovu
sahf
(bad)
pop
mov
inc
mov
ret
shl
adc
adc
pusha
and
mov
dec
mov
(bad)
pop
retf
push
dec
arpl
jmp
call
pop
test
out
mov
loop
inc
je
inc
jmp
stos
(bad)
rol
cmp
mov
pop
add
push
xor
imul
jns
push
adc
or
sub
sbb
jns
lods
scas
into
jge
inc
adc
or
xor
ins
ja
mov
jns
outs
(bad)
imul
xchg
lock
rcl
loopne
stos
in
ret
dec
cli
icebp
in
call
add
pop
sti
out
sbb
aaa
pop
xor
pop
lds
lds
mov
outs
loopne
cwde
shr
or
ja
or
and
push
cs
fstp
push
xor
nop
jo
outs
cmc
and
loope
ficom
and
sub
pushf
dec
jmp
adc
sub
shl
mov
inc
in
mov
dec
mov
sahf
pop
outs
retf
fstp
dec
sbb
movs
mov
hlt
jns
jle
cmp
mov
(bad)
(bad)
and
xor
in
pusha
out
cmps
add
xchg
or
and
xor
fidivr
rcr
push
sbb
pushf
nop
mov
jnp
sar
mov
mov
mov
xchg
and
lahf
push
adc
call
jmp
loope
cmp
not
and
out
dec
mov
push
xchg
fistp
cdq
sbb
sbb
ds
sbb
leave
xchg
(bad)
and
retf
fs
ins
fisub
mov
mov
retf
adc
inc
sub
mov
ins
sub
pop
cmp
fbld
out
pop
stos
enter
and
add
test
lods
out
xchg
xlat
sub
xor
mov
push
jle
aad
mov
cmc
pop
add
inc
test
mov
mov
sahf
add
xchg
lahf
jo
adc
rcr
test
push
jb
cmps
sbb
ins
or
mov
ds
mov
(bad)
je
mov
pop
lahf
leave
sahf
mov
mov
or
loope
sub
mov
pop
out
mov
jl
mov
xlat
push
mov
idiv
pop
xor
pop
push
int
or
fild
mov
mov
loop
test
loopne
bnd
out
pop
push
and
mov
pusha
(bad)
ds
push
lahf
cmp
icebp
mov
xchg
or
les
dec
jmp
push
cli
das
int3
mov
stc
pop
popa
jbe
lods
pop
test
fs
jns
loope
jns
je
enter
cmp
jp
popa
cmp
in
mov
lds
dec
fist
mov
leave
push
lods
ret
aam
adc
xor
sbb
mov
not
scas
scas
sub
push
xchg
dec
iret
enterw
cwde
fwait
or
outs
mov
xchg
xor
mov
cmp
cmp
mov
fmul
cmp
pop
out
in
jbe
pop
cmp
test
jnp
mov
popa
adc
cmp
lods
out
fstp
bound
jne
(bad)
or
loop
jno
xor
sbb
pop
add
rol
(bad)
arpl
cmp
sub
sub
xchg
into
fdivr
or
lods
ins
dec
jns
shr
popf
fisub
sbb
sub
dec
mov
(bad)
mov
xor
add
repnz
int3
fcmovnbe
push
test
jp
jnp
es
lods
out
inc
sbb
in
rcl
ins
jg
hlt
add
xchg
(bad)
sbb
(bad)
push
or
outs
gs
push
pop
or
sahf
fsubr
dec
sub
ds
aas
or
inc
dec
mov
stos
int
out
inc
adc
cdq
stc
xchg
test
mov
xchg
pop
or
push
jmp
int
nop
adc
mov
lds
push
dec
adc
and
ret
int3
mov
jbe
inc
lea
(bad)
js
sbb
cmp
and
mov
cmps
adc
addr16
scas
bound
ret
mov
test
in
sub
fwait
loopne
add
cmp
inc
push
sti
ins
cmp
cld
retf
sub
mov
into
and
xchg
ds
sahf
lock
push
mov
mov
retf
mov
scas
jno
addr16
fild
pushf
hlt
popa
jns
js
loop
in
and
js
dec
mov
add
cmp
pop
mov
loope
pop
cmp
das
pop
repz
sbb
mov
cmps
ret
imul
jo
jge
sub
or
sub
cmovg
xor
jmp
xor
or
sub
jmp
movs
outs
sbb
xor
mov
movs
hlt
js
mov
test
retf
jmp
pop
jne
mov
xchg
mov
cmps
hlt
test
test
into
pop
(bad)
add
(bad)
shr
push
mov
mov
test
inc
test
inc
add
mov
mov
sub
icebp
and
sbb
pop
inc
icebp
mov
out
rcl
cld
cmp
fcmovbe
cmps
repnz
inc
mov
jecxz
mov
loopne
fcom
(bad)
jae
fild
cmp
sub
out
sbb
dec
sbb
jmp
sar
mov
add
icebp
lods
cs
or
mov
(bad)
repz
adc
mov
jge
or
and
jns
push
push
jmp
mov
fadd
loope
adc
sbb
mov
fcomi
test
mov
pop
shr
push
push
scas
icebp
test
cmp
repnz
std
add
dec
sub
mov
push
xor
(bad)
and
push
dec
call
push
mov
call
cs
in
dec
in
cdq
imul
fwait
in
jg
rol
mov
fsubr
mul
rcl
xchg
pop
ficom
cwde
mov
adc
data16
xor
mov
test
movs
sub
dec
jbe
div
inc
aaa
jmp
nop
sbb
aam
mov
jle
push
out
xor
lock
jb
jnp
cmc
call
and
mov
repnz
and
ret
sbb
sub
cld
movs
sub
mov
and
ret
mov
pop
add
popa
push
mov
(bad)
jmp
sub
mov
pop
and
adc
sub
inc
clc
in
bound
rol
cli
loop
icebp
sub
outs
and
xchg
ror
lea
(bad)
sbb
popf
ficomp
pop
sub
fwait
push
loop
addr16
repnz
fcmovnbe
jae
mov
out
adc
iret
cmp
in
cmp
mov
sub
std
shl
pop
(bad)
out
arpl
call
ficom
jns
pop
and
(bad)
gs
xor
lods
test
dec
arpl
arpl
je
sbb
mov
sbb
pop
mov
dec
fisubr
pop
or
jae
je
sub
sbb
push
cmp
mov
jo
mov
push
xor
fcom
ret
push
pop
into
pushf
loopne
shl
jge
test
call
xchg
mov
scas
shr
pop
mov
rol
in
aad
cld
out
fs
mov
xchg
imul
mov
jnp
xchg
sbb
retf
jne
mov
jae
push
imul
(bad)
push
out
fsub
mov
stc
xor
shl
mov
sub
sub
fld
xor
mov
outs
inc
loop
mov
jl
cmps
xchg
stos
iret
aaa
call
movs
add
lahf
xor
das
(bad)
sub
cmp
pop
add
add
sub
or
mov
(bad)
clc
pop
maxps
scas
sbb
mov
push
jne
mov
in
lahf
push
push
xchg
(bad)
repz
mov
cmps
pop
outs
cmc
loopne
test
jne
add
cmps
jp
icebp
pop
mov
mov
sbb
add
ins
out
ret
sbb
je
shl
std
ds
dec
jo
je
sti
sbb
adc
fcom
icebp
add
pushf
ins
fsubr
inc
aas
mov
ds
in
jmp
aaa
stc
jno
pusha
mov
movs
shr
arpl
and
repz
sub
scas
jmp
es
lods
mov
arpl
call
xor
lods
popa
les
or
mov
xor
or
pop
mov
(bad)
in
pop
inc
fist
in
stos
pop
add
dec
cwde
cmp
inc
pusha
pop
sbb
and
mov
ins
pop
adc
cwde
xchg
retf
aam
or
mov
cmp
sbb
push
std
arpl
adc
inc
sahf
or
xor
push
xchg
call
rol
jecxz
dec
call
arpl
das
mov
dec
add
and
popf
dec
jmp
add
mov
stos
jmp
mov
push
pop
fisttp
sbb
loop
jmp
pop
mov
cmp
rcl
mov
pop
(bad)
fld
enter
cmps
mov
dec
aas
xor
(bad)
jecxz
inc
jo
add
jne
std
rcr
add
push
popa
ins
mov
xor
fstp
push
hlt
(bad)
out
xor
cli
xchg
mov
sbb
cmp
fs
xchg
retf
ror
or
xchg
(bad)
pop
mov
mov
(bad)
mov
sti
cmp
push
inc
mov
pop
movs
outs
xchg
fsub
push
adc
movs
js
ds
das
aas
iret
jae
ret
xchg
dec
(bad)
sar
(bad)
pop
push
ficom
xchg
fcom
mov
add
movs
imul
jo
xor
test
jmp
paddb
lea
fdiv
xor
jns
lock
cmp
mov
fcom
loope
jmp
or
push
gs
fcom
ss
rol
pop
push
pop
jmp
cmc
or
fld
mov
fimul
pop
fsub
nop
xchg
xor
mov
in
retf
addr16
jle
xchg
lahf
jo
mov
ret
test
(bad)
or
xor
mov
test
fwait
popf
sar
outs
rcl
imul
mov
cmp
pop
cld
sub
push
mov
adc
mov
inc
test
repnz
movs
mov
cmp
sub
rcl
mov
xchg
sahf
push
xchg
(bad)
test
movs
int
(bad)
jo
retf
repnz
ja
daa
loope
loop
rcl
std
pop
jno
imul
sub
stos
push
hlt
cmp
inc
xchg
dec
cmp
movs
xchg
sbb
retf
(bad)
xchg
addr16
scas
ret
sbb
inc
sub
popf
xor
ror
nop
push
ins
loop
and
jg
aad
out
outs
aam
out
push
int
popf
mov
js
or
not
cmp
sub
sbb
sbb
or
sbb
sbb
nop
test
es
adc
aam
mov
adc
mov
and
lahf
xchg
add
cmp
xchg
dec
leave
fwait
jg
(bad)
out
out
xor
paddsb
jno
mov
xchg
or
xchg
jmp
imul
xlat
out
test
int
idiv
push
rcl
and
cmp
pop
push
add
jge
xchg
fbld
js
aaa
sbb
into
xchg
jp
and
xor
fdivr
ins
in
cmps
loopne
or
je
out
adc
clc
jnp
mov
stos
test
mov
sbb
xchg
scas
jb
jmp
(bad)
out
daa
jecxz
inc
in
inc
adc
cmp
jne
dec
mov
sub
pop
mov
sub
iret
push
mov
movs
mov
sub
fbstp
mov
ficomp
sbb
cmps
cs
mov
popf
or
out
daa
pop
outs
rol
jmp
and
adc
lods
dec
jnp
nop
aam
push
mov
cmp
sub
icebp
xchg
bound
xchg
scas
dec
repz
lock
imul
cli
fst
jnp
jmp
hlt
lock
ret
fst
cmp
fisubr
aam
add
xor
mov
sub
stc
xchg
out
sahf
(bad)
(bad)
stos
retf
and
aas
pop
out
fsubr
push
mov
push
pop
iret
mov
mov
lock
inc
loopne
loop
mov
adc
aad
jae
mov
adc
aad
outs
lea
xchg
push
push
push
push
xor
lock
push
sub
out
and
mov
aad
or
(bad)
scas
cmp
cmc
mov
jp
idiv
cmp
pusha
gs
sahf
push
into
cmp
out
mov
xor
int3
mov
jge
das
pushf
mov
push
mov
nop
jecxz
jns
les
adc
nop
push
enter
mov
dec
sbb
lods
inc
pop
adc
int3
and
mov
mov
push
mov
pop
test
inc
cmp
and
sti
jecxz
sbb
pop
mov
dec
repnz
test
fcmovu
mov
fsub
ins
xchg
push
stos
pop
mov
add
loopne
cmp
in
and
int
(bad)
(bad)
adc
cmp
or
mov
or
mov
daa
xor
cmp
(bad)
mov
ds
jno
cmp
mov
mov
xor
sbb
aad
xchg
sahf
adc
fisubr
loope
sub
push
mov
hlt
dec
dec
fldcw
dec
icebp
call
popf
rcl
lock
xchg
mov
pop
sub
pop
pop
inc
ins
or
ficomp
pop
mov
popa
mov
mov
lds
inc
sahf
xchg
cmp
int3
add
mov
xor
mov
jecxz
loopne
jmp
push
outs
sub
and
inc
cmp
test
stc
cmp
inc
pop
mov
std
or
aad
mov
test
daa
loopne
out
into
dec
aad
popf
movs
imul
aaa
mov
inc
or
adc
ret
push
jb
cli
mov
imul
cmp
sbb
add
push
jmp
mov
fisttp
popa
add
sbb
aaa
xor
cmps
arpl
sbb
ins
std
neg
retf
ret
pop
(bad)
mov
daa
pop
mov
sahf
test
jb
test
(bad)
data16
inc
mov
scas
fidivr
adc
cmc
jmp
and
cdq
sbb
fcmovb
push
inc
in
outs
xchg
sub
push
fldln2
mov
xor
call
mov
jae
adc
imul
clc
xor
shr
cwde
mov
sub
out
arpl
lods
test
ss
outs
ret
mov
jae
and
retf
cs
dec
lods
daa
jmp
mov
mov
out
sub
inc
inc
dec
adc
in
lds
das
jl
sub
pop
mov
sub
xchg
fmulp
(bad)
enter
inc
sub
sub
or
mov
ins
in
add
add
test
and
cmp
xchg
mov
daa
dec
shl
sahf
pop
in
jle
inc
jecxz
int
daa
sbb
stos
mov
or
mov
es
push
pop
push
xchg
jge
inc
pop
pop
sub
pop
adc
inc
jge
mov
repz
mov
(bad)
mov
ror
mov
lock
jb
mov
cli
popf
push
and
pop
js
pcmpeqb
(bad)
cmp
mov
mov
jo
adc
nop
inc
in
mov
ins
jae
pop
mov
sbb
ds
inc
pop
xchg
adc
xor
pusha
rol
inc
adc
mov
jg
xchg
out
dec
test
ret
inc
xor
aas
cmp
stc
xlat
push
test
call
jne
aas
dec
test
xor
arpl
jge
xchg
mov
push
sub
arpl
push
push
(bad)
push
cmp
cmps
mov
jmp
mov
popa
movs
cmp
mov
lock
add
dec
mov
mov
add
pusha
mov
test
mov
sub
adc
inc
fstp
out
inc
sub
sub
dec
push
sub
aam
stos
outs
test
sub
(bad)
xchg
fs
je
fisubr
jne
jno
push
cmp
add
sub
push
pop
or
aaa
and
add
xor
add
adc
sub
pushf
adc
dec
xchg
sub
lahf
ins
shl
sub
in
jmp
jne
cmp
xchg
loop
jns
fcomp
loopne
jbe
inc
mov
adc
inc
mov
push
dec
lods
xor
inc
(bad)
out
mov
jle
(bad)
imul
sub
clc
cmp
(bad)
push
xor
in
xchg
movs
mov
call
or
(bad)
stos
outs
les
ds
(bad)
fbstp
push
cmps
pop
xor
gs
and
test
mov
sub
pop
pusha
fsub
loopne
mov
add
mov
add
mul
sti
repz
outs
(bad)
lahf
inc
neg
sti
ss
pop
xor
out
xchg
arpl
mov
sbb
sub
aad
add
(bad)
in
adc
xchg
dec
add
jp
out
rol
jmp
xchg
push
loop
popf
mov
sbb
pop
sub
add
inc
fbstp
imul
jae
or
call
fwait
mov
sub
loope
mov
add
sahf
add
push
bnd
jne
jecxz
sbb
test
clc
xor
dec
int3
xor
dec
mov
div
imul
jb
inc
ins
dec
xchg
shl
jns
rcl
(bad)
out
cld
iret
cmp
mov
sbb
pop
adc
mov
xor
stc
call
aaa
ret
mov
jp
lea
mov
stos
inc
stos
fidiv
popf
movs
and
xchg
mov
push
(bad)
xchg
xor
mov
mov
sar
sbb
cmp
pusha
push
addr16
adc
push
mov
lock
sbb
pop
icebp
jae
sar
pop
mov
push
outs
sub
xchg
pop
fidiv
xchg
scas
dec
mov
mov
push
ret
jle
jg
cs
aas
sbb
call
dec
inc
cmps
aad
xchg
jl
dec
jge
jb
sbb
iret
sar
adc
std
adc
sub
xchg
daa
hlt
out
xchg
(bad)
cpuid
dec
jae
mov
push
ss
mov
cmps
stc
and
call
and
jne
test
xchg
ja
leave
out
scas
push
lahf
mov
xchg
xor
cwde
xchg
pushf
mov
ficomp
jmp
not
(bad)
xchg
jno
or
push
xchg
retf
add
pop
ficom
add
rcl
stc
outs
(bad)
jo
cmp
ins
xor
mov
or
and
lods
jp
jnp
inc
xlat
cmps
(bad)
enter
add
mov
popf
dec
neg
mov
push
in
mov
mov
or
mov
or
cmp
mov
or
mov
push
push
enter
enter
pop
clc
pusha
das
mov
jmp
sbb
jmp
in
add
xchg
push
cld
dec
xor
pushf
xlat
lds
in
bound
xchg
dec
xchg
adc
pop
std
fstp
and
pop
lea
ror
jle
js
pop
cs
mov
outs
cmp
retf
cs
es
mov
mov
add
ror
mov
retf
xlat
fnsave
lods
sbb
dec
or
jb
sub
adc
jmp
aaa
add
mov
loop
push
jo
and
hlt
add
xor
push
xor
xchg
call
in
daa
inc
sub
mov
outs
inc
mov
mov
jns
add
(bad)
inc
(bad)
test
lds
aaa
push
sar
nop
inc
inc
psubsb
push
mov
(bad)
sbb
sbb
fs
and
lods
inc
mov
or
cmp
pop
jp
sub
xlat
sbb
pop
mov
jno
pushf
inc
mov
outs
xchg
out
pop
fisttp
fnstcw
xlat
push
xchg
jge
dec
or
fisttp
pushf
sub
add
test
jge
adc
hlt
aas
push
mov
mov
nop
jo
xor
movs
add
scas
push
mov
mov
dec
leave
data16
xchg
retf
fnstsw
mov
repz
and
pop
and
lods
mov
retf
jae
mov
adc
test
(bad)
and
inc
mov
outs
mov
shl
inc
adc
add
call
add
fidivr
sub
fld
aaa
pop
fucomip
ins
lock
mov
in
add
push
test
jmp
push
movs
mov
jno
jp
jp
retf
add
mov
enter
gs
dec
mov
jne
aas
retf
je
inc
xor
add
xlat
dec
outs
movs
mov
mov
or
push
sub
scas
sbb
shr
sti
sub
push
bound
gs
inc
popa
imul
pop
std
or
pop
push
pop
stos
sbb
ficomp
add
cdq
fldl2t
push
or
mov
sub
jns
into
mov
iret
mov
ror
out
movs
leave
push
les
out
int3
sub
push
cmp
outs
scas
push
pop
jg
lock
push
loopne
inc
pop
push
push
xor
pop
je
shl
clc
xor
cmp
ret
inc
sub
pop
adc
pushf
xor
repz
adc
retf
mov
mov
sahf
xchg
out
or
or
(bad)
cs
mov
shr
addr16
lods
adc
push
mov
mov
retf
repnz
ins
int3
sbb
mov
ret
(bad)
jmp
jecxz
jp
jno
fcomp
lds
loope
rcl
adc
and
mov
inc
xchg
and
les
fild
cmps
mov
add
jmp
ret
mov
xor
(bad)
or
jmp
call
mov
and
jne
push
push
test
push
xor
scas
mov
cmp
mov
push
sbb
jmp
cli
mov
and
inc
and
sub
aam
mov
pushf
es
adc
jecxz
aas
ins
ja
pushf
(bad)
mov
(bad)
cwde
in
sbb
rcr
or
xor
shl
sub
mov
xchg
mov
fist
ret
jle
test
jl
lahf
or
shl
inc
push
aaa
shrd
xchg
cwde
test
out
push
dec
cmp
mov
mov
aaa
sbb
pop
sub
and
lea
out
dec
repz
xor
outs
jne
pop
stos
dec
and
pushf
sbb
xchg
xchg
jecxz
mov
and
add
mov
jno
jl
cmc
test
cld
sti
pop
pop
mov
pop
lock
xchg
mov
rcr
mov
test
je
pop
or
add
pop
and
or
cmp
sub
jp
daa
test
jnp
cs
or
add
arpl
add
out
pop
sub
xchg
and
aad
sub
xor
cmp
(bad)
sub
xor
push
(bad)
adc
je
ret
inc
popa
inc
pop
ss
ds
scas
mov
xchg
leave
xchg
cld
repnz
into
push
mov
xlat
scas
mov
or
mov
stc
push
js
inc
inc
push
add
add
aad
push
sahf
out
cmps
adc
bound
push
push
xchg
js
or
div
jnp
ss
enter
rcr
pop
aam
leave
movs
pop
retf
scas
or
mov
sub
and
cmp
cld
inc
pop
movs
dec
fadd
cs
fistp
sar
into
scas
cmp
aas
fst
push
jo
cmovp
cld
adc
xchg
fsubr
test
push
jp
mov
push
or
mov
inc
cdq
push
xchg
mov
jmp
mov
test
push
mov
(bad)
data16
pop
sbb
fs
es
stos
xchg
fisub
dec
push
pop
dec
mov
mov
jns
inc
add
inc
popa
mov
mov
out
push
add
jb
cmps
jne
add
out
cmp
stos
in
or
movs
jno
sub
nop
aam
or
push
jae
inc
jo
xor
or
sub
fcomip
xor
call
and
fisttp
mov
or
or
clc
fisub
rcr
sub
mov
push
push
and
(bad)
add
bound
add
and
loopne
cmc
cdq
sbb
fwait
sub
je
icebp
dec
jne
jmp
or
add
push
into
cmp
(bad)
cmp
or
loop
rsqrtps
movs
xchg
mov
mov
xchg
push
add
pop
sbb
dec
pop
outs
repnz
repnz
je
push
popf
xor
cmp
popf
call
and
push
adc
ror
in
das
jle
or
sub
mov
mov
jle
push
adc
mov
(bad)
das
aas
xor
repz
pmullw
int3
scas
or
out
xchg
imul
xlat
scas
jmp
cmc
shl
xchg
je
fist
out
push
movs
push
pop
ret
jbe
dec
push
push
mov
inc
mov
adc
sti
test
mov
dec
aas
and
fnstenv
pop
(bad)
push
mov
add
push
push
ret
or
xor
ins
int3
shl
scas
add
push
test
mov
scas
js
mov
adc
imul
scas
ins
fwait
test
inc
outs
(bad)
jae
test
enter
mov
test
mov
fnstenv
or
mov
push
jl
or
fst
in
fsub
call
push
dec
cmc
mov
inc
sbb
inc
lds
fsubr
add
loope
gs
out
xor
lock
push
pop
ins
xchg
(bad)
jge
outs
cmp
pop
clc
mov
pop
test
cld
inc
enter
xchg
jnp
retf
xchg
popa
pop
xchg
mov
mov
aas
jo
cmp
inc
adc
mov
xor
pop
ffreep
fnstcw
inc
loop
aaa
mov
push
or
sbb
cld
xor
dec
xchg
adc
xor
std
in
xor
add
push
mov
or
in
xor
jecxz
sbb
not
jmp
jle
ds
test
cli
xlat
fsub
push
jl
or
xchg
(bad)
pop
fs
sub
sbb
sbb
daa
shl
dec
mov
(bad)
loopne
shl
jbe
add
(bad)
mov
pop
leave
adc
mov
and
xchg
jle
jo
inc
or
jmp
je
mov
pop
inc
ja
enter
pop
push
push
in
mov
inc
pop
cld
(bad)
sahf
push
and
fimul
shr
inc
sub
cmp
fcmovb
push
in
and
jg
fsubr
test
jl
and
pop
aas
jns
in
lock
int3
imul
xor
mov
cmp
and
fld
pop
dec
sbb
lahf
sub
push
xchg
cmp
jns
jo
les
les
xchg
jb
xchg
sbb
push
or
aam
cmp
pusha
mov
sub
inc
pop
push
jle
mov
ror
sbb
fisub
xchg
sub
ds
enter
and
sbb
fsub
sub
popa
pop
daa
aad
out
dec
jp
fdiv
scas
inc
repnz
xlat
shr
pop
nop
cmp
mov
pop
cmp
ss
mov
sbb
sbb
xlat
cmp
pop
xchg
mov
lea
lahf
mov
fld
cmp
mov
sbb
in
mov
cmps
lahf
retf
mov
aam
shl
(bad)
push
mov
push
iret
mov
scas
stos
rcl
dec
clc
dec
gs
mov
in
jb
pusha
fwait
cmp
and
pop
inc
(bad)
mov
(bad)
adc
sbb
inc
push
sbb
(bad)
gs
sbb
fsubr
pop
cmc
inc
dec
xchg
in
popf
push
sub
mov
xor
push
mov
outs
retf
jp
fmulp
mov
out
xor
fisub
fcmovne
add
push
pusha
xor
fsubr
fcom
and
mov
xchg
aaa
inc
push
in
inc
dec
cs
sbb
push
pmuludq
repz
std
lods
scas
sti
push
sub
sub
push
pop
dec
je
mov
aaa
mov
xor
pop
mov
scas
in
and
je
pusha
push
loop
test
or
cwde
jns
loop
test
clc
sub
xor
shl
jo
push
fcomp
in
sbb
sbb
int
bound
xchg
std
setle
test
bound
add
lds
sbb
mov
push
or
scas
jb
xchg
dec
punpcklwd
xchg
jmp
das
ins
push
sub
cs
xor
pop
fwait
retf
push
push
push
mov
adc
sar
scas
mov
stc
jmp
jae
fldpi
cld
lea
jb
test
arpl
xchg
xor
pop
sub
jle
xor
inc
sub
pop
ds
mov
rol
push
stos
mov
retf
scas
mov
pusha
pop
sub
retf
shl
imul
(bad)
adc
xchg
inc
jp
out
cs
mov
push
xchg
imul
mov
xchg
(bad)
in
mov
mov
in
cld
push
sbb
hlt
into
int3
mov
jae
push
or
nop
ss
test
jbe
fcmovbe
jmp
jg
lds
icebp
lahf
sahf
aaa
pushf
sbb
lods
push
dec
pop
js
jno
xlat
adc
jae
rcl
lods
call
mov
or
and
push
jmp
mov
popf
mov
jmp
(bad)
push
icebp
xlat
and
mov
rol
xchg
sbb
mov
in
fld
ins
push
shl
rol
or
rol
shl
lea
imul
loopne
pop
dec
into
jae
and
repnz
jecxz
inc
cmp
pop
gs
push
mov
mov
test
push
test
popf
loope
pop
push
xchg
mov
sub
mov
sbb
outs
sub
mov
xchg
push
lahf
cmc
std
adc
push
popa
shl
pop
add
jno
scas
dec
lea
fs
mov
jns
(bad)
nop/reserved
retf
hlt
test
aad
xchg
pusha
cli
and
jns
outs
fadd
jg
pop
cmp
xchg
and
shr
test
ret
jl
or
lahf
aas
push
jl
scas
adc
pop
jp
mov
dec
sub
imul
add
lahf
jne
cmp
jb
sbb
xor
std
aaa
mov
sbb
out
mov
sbb
pop
test
push
stos
test
popa
jp
(bad)
imul
outs
sbb
add
jb
fsub
jne
or
lahf
xor
call
(bad)
les
aaa
push
pop
xor
xlat
jns
and
sbb
(bad)
fsub
iret
push
cmp
cwde
mov
cwde
daa
push
out
xchg
mov
retf
in
pop
xchg
mov
lods
push
push
sbb
iret
xchg
js
out
push
jb
push
dec
fldcw
jno
cmps
mov
or
mov
(bad)
test
cdq
dec
loopne
or
mov
mov
fnstcw
push
mov
test
out
aam
mov
and
fist
or
mov
add
pop
push
es
nop
cwde
xchg
inc
(bad)
sub
dec
fcomp
test
or
neg
push
jno
cmp
retf
lods
es
jbe
je
pop
int
jbe
das
push
xchg
and
cmp
out
or
and
add
ficomp
(bad)
mov
icebp
pop
outs
lahf
je
in
xlat
sub
lock
jl
call
imul
and
ins
pop
mov
jl
add
add
mov
clc
ins
and
xchg
push
pop
fidiv
mov
xor
push
mov
test
or
jns
iret
or
mov
sbb
icebp
cmc
stc
and
mov
sbb
push
mov
pop
out
mov
and
pop
neg
mov
lea
xchg
repz
ja
loopne
shl
inc
int3
xchg
(bad)
mov
sahf
lahf
out
daa
cdq
push
movs
pop
mov
mov
push
imul
in
int
jecxz
cld
aas
test
imul
or
jmp
leave
mov
repnz
pop
mov
sbb
mov
jle
inc
jp
sbb
adc
mov
cdq
mov
push
clc
ins
and
pop
mov
mov
pop
stc
pop
inc
mov
dec
out
inc
mov
mov
add
in
int3
ficom
sub
dec
sub
leave
adc
(bad)
cmps
gs
jg
jmp
gs
loopne
cdq
jmp
push
sbb
ret
pop
lea
jmp
std
or
fdiv
jmp
stc
xor
das
popf
pop
rcl
aaa
mov
sbb
(bad)
loope
jb
ss
ins
jo
pop
pop
push
test
pusha
retf
int
(bad)
cli
cdq
fwait
inc
rcl
ficomp
std
out
and
xchg
(bad)
cmps
push
je
fwait
cmps
nop
lods
xlat
lods
adc
jmp
xchg
adc
arpl
jbe
fcmovnbe
mov
in
xchg
inc
xchg
stc
sahf
sbb
push
out
outs
xchg
adc
add
push
loop
sbb
jns
push
sub
jne
ins
sbb
sub
in
mov
inc
jnp
fist
cmc
addr16
xchg
cmp
(bad)
in
mov
xchg
arpl
dec
test
mov
dec
shl
cmp
jp
and
iret
push
xchg
push
int
push
mov
cmp
hlt
cmp
rcr
in
popa
int
mov
sub
int3
hlt
xor
sbb
xor
addr16
retf
or
adc
imul
ins
lods
mov
mov
sbb
scas
mov
push
pop
out
inc
xor
push
jbe
mov
mov
pushf
pop
xor
dec
sbb
ffree
mov
fs
cmps
out
mov
repz
enter
mov
push
push
icebp
cmp
xor
retf
fwait
jle
cmc
mov
(bad)
jb
pop
iret
push
mov
ds
sub
push
ror
sub
cld
int3
out
(bad)
ins
enter
or
shr
adc
js
fstp
dec
xor
rol
(bad)
xlat
call
mov
push
mov
std
dec
sbb
sbb
inc
and
aas
dec
into
fisttp
loop
stos
cmp
jg
xor
inc
test
arpl
imul
int3
sbb
jns
ins
fnstsw
enter
or
ficom
jp
xor
ds
mov
mov
xor
ret
loope
inc
int
cmc
mov
jmp
mov
inc
mov
pop
scas
pop
xor
cdq
mov
(bad)
pop
xchg
push
mov
fistp
jns
les
test
xor
pop
and
jmp
add
fwait
fwait
sbb
push
repnz
adc
pop
sub
call
pusha
and
test
pop
int3
adc
sub
outs
dec
sgdtd
xor
aam
sbb
ins
sub
dec
pop
into
mov
ss
int3
xchg
mov
pop
cmp
nop
or
shl
jmp
cmps
xchg
xor
mov
mov
movs
pushaw
fst
dec
mov
mov
ror
sbb
cmp
add
cli
add
adc
pop
jmp
xor
ret
test
aas
lods
mov
pop
sub
scas
pop
leave
mov
ret
mov
loopne
hlt
jmp
and
cld
adc
aad
mov
(bad)
mov
add
pop
into
outs
cmp
ja
movs
and
inc
push
inc
or
xor
fwait
sub
ss
push
mov
dec
inc
or
in
mov
scas
ret
jmp
retf
or
xor
sbb
aaa
inc
(bad)
aad
push
pop
sub
sbb
jge
xchg
mul
test
cwde
push
fs
add
lds
push
in
mov
xchg
test
mov
test
mov
push
lods
jnp
mov
aas
sub
cmps
nop
repz
ja
and
cld
dec
pop
push
popa
pop
pop
xchg
or
inc
xor
scas
test
hlt
icebp
and
xchg
inc
(bad)
sbb
mov
popa
scas
not
scas
mov
xlat
xlat
dec
dec
dec
les
inc
inc
ret
icebp
mov
mov
inc
std
lock
sbb
ins
xchg
arpl
push
jmp
icebp
add
ins
add
sub
pop
fwait
xchg
jp
mov
idiv
jecxz
xlat
xor
test
mov
gs
add
xor
cwde
push
fild
inc
std
sbb
xor
xchg
xchg
mov
mov
dec
push
js
mov
addr16
inc
aam
push
cmp
or
fadd
jne
das
cld
out
imul
(bad)
cld
call
out
xor
and
mov
pop
mov
addr16
mov
out
sub
retf
cli
sbb
push
pushf
xchg
and
icebp
cmc
mov
je
jb
enter
add
jl
jbe
jbe
cmc
or
movs
lahf
push
push
pop
add
fstp
sysret
sub
jo
das
addr16
mov
push
scas
repnz
mul
into
mov
ins
fcmovnu
mov
push
pop
pop
(bad)
ficom
cmps
popa
call
(bad)
js
and
jb
and
xchg
mov
out
in
pop
adc
push
test
bound
pop
sbb
cdq
add
stos
push
dec
cld
pop
pop
fdiv
cmc
stos
in
and
hlt
add
jmp
push
sbb
lahf
leave
mov
pop
(bad)
ret
jg
pop
cmps
push
xlat
movs
pop
mov
(bad)
(bad)
fcom
les
sbb
imul
ja
inc
mov
test
adc
leave
sysexit
pop
repnz
sbb
mov
lods
jns
xchg
push
popf
xor
leave
mov
push
hlt
sbb
push
dec
mul
pop
xor
ins
ins
mov
popf
push
loopne
pop
jns
mov
pop
je
nop
clc
adc
and
bound
jo
dec
jbe
mov
push
inc
outs
pop
enter
daa
icebp
cmc
adc
cmp
popa
addr16
lods
mov
dec
mov
or
mov
sbb
xor
mov
cmp
mov
jmp
sbb
fdiv
iret
mov
out
int
test
jg
lds
push
jl
adc
call
or
ja
(bad)
rcl
fild
jnp
cli
cmps
sbb
xchg
mov
test
sub
je
imul
mov
cmp
inc
retf
mov
lods
push
sar
jbe
add
and
adc
add
push
xchg
or
fdivr
(bad)
leave
inc
push
mov
data16
js
sub
lock
adc
inc
xchg
cmp
out
(bad)
iret
inc
stos
sub
push
and
inc
int3
mov
cmp
xchg
dec
sbb
add
jnp
cmp
cmp
iret
mov
in
push
xchg
int
out
or
push
or
push
pusha
(bad)
fiadd
lods
dec
mov
ds
add
(bad)
mov
jne
jle
sbb
scas
or
inc
adc
fcmovbe
jno
mov
scas
xor
sbb
sub
push
push
int
lahf
std
pusha
das
clc
(bad)
shr
mov
int
scas
xor
jge
mov
jb
arpl
mov
sub
mov
or
cmp
inc
sbb
loop
data16
fwait
lahf
retf
jl
je
adc
es
(bad)
loopne
retf
scas
mov
xchg
es
jbe
mov
cwde
xlat
jne
(bad)
push
sub
in
xchg
dec
mov
popf
sub
test
scas
xchg
psubb
and
add
sbb
push
sbb
es
and
sub
pop
xlat
push
pop
push
sbb
and
jno
adc
mov
test
push
ss
push
push
rol
adc
icebp
mov
cmp
and
add
sar
jmp
(bad)
cmp
sub
pop
(bad)
push
movs
sub
idiv
push
add
fiadd
mov
or
inc
sub
aam
ret
cmp
push
mov
jmp
fsubr
es
ret
shl
jge
enter
into
sub
mov
popf
icebp
add
shl
loope
js
inc
adc
push
es
rcr
mov
aas
retf
fsub
(bad)
dec
cdq
and
push
mov
lods
dec
jge
sbb
mov
lock
jmp
inc
ret
jecxz
sbb
cmp
xchg
push
gs
out
addr16
(bad)
out
sub
jns
xchg
lds
aas
add
mov
push
sbb
(bad)
(bad)
jns
push
xor
mov
sub
xlat
mov
pop
lock
jno
outs
adc
stos
and
xor
mov
out
jo
test
mov
push
iret
cli
ins
rol
(bad)
les
test
xchg
sbb
out
dec
inc
inc
dec
xchg
mov
pop
es
jge
cmp
push
xchg
sbb
ret
sbb
and
jno
add
pusha
pop
les
push
fdivrp
lds
inc
mov
or
dec
ins
in
cdq
in
imul
shl
sub
pusha
rcr
retf
ja
in
(bad)
call
xchg
dec
mov
loop
mov
push
inc
push
arpl
lea
lea
and
pop
pop
ror
sub
test
movs
jle
call
(bad)
sub
cmp
popa
inc
push
lahf
scas
push
xchg
out
fs
dec
jge
jmp
es
cmps
lahf
frstor
je
dec
xchg
jnp
ss
es
not
push
dec
dec
repz
push
and
push
aad
(bad)
in
shl
push
cs
out
push
out
xchg
ins
cdq
inc
popf
imul
add
cli
or
outs
mov
inc
jns
test
push
in
loopne
pop
stos
and
inc
pop
bound
sub
inc
(bad)
rcr
test
xor
jecxz
xor
lahf
iret
(bad)
jne
scas
jl
xor
dec
leave
jnp
push
inc
(bad)
xchg
or
and
pop
into
aaa
out
push
fild
stc
push
xchg
inc
cmp
(bad)
addr16
sbb
adc
or
rcr
mov
inc
outs
fisttp
jp
xor
inc
cld
sub
mov
push
sub
cli
inc
and
ror
and
mov
xchg
or
mov
idiv
pop
jge
lods
and
xchg
fst
add
xlat
mov
stc
imul
fcomp
and
sti
adc
xchg
xchg
sbb
cs
(bad)
jae
sbb
daa
pop
jecxz
mov
add
xchg
sahf
dec
push
dec
cmps
lahf
mov
xor
pusha
cdq
mov
fmulp
sub
shl
js
jp
cmp
shl
stos
sub
mov
mov
repz
stos
xlat
mov
jecxz
mov
push
into
int
(bad)
or
sub
xor
repnz
std
scas
mov
ficom
sub
leave
push
aas
pop
mov
lds
(bad)
into
xor
lds
add
dec
xchg
popa
sti
stos
sahf
push
adc
sti
div
pop
dec
mov
cmp
sub
popa
push
movs
jne
lea
repnz
xchg
or
rcl
push
ds
mov
mov
(bad)
shl
cmps
inc
bound
xchg
push
es
imul
scas
jo
movs
jnp
ds
jge
scas
jbe
inc
mov
inc
call
xchg
ds
popf
lods
outs
cmc
stos
inc
test
jecxz
mov
mov
push
movs
cmp
sub
(bad)
inc
xchg
adc
jp
xchg
jns
ins
or
jg
scas
popa
pop
jne
pop
pfsubr
inc
sbb
mov
outs
ror
adc
pop
fadd
sbb
loope
test
out
aas
mov
imul
arpl
rcl
add
push
sub
out
test
cmp
ret
xlat
pusha
mov
jne
mov
test
ja
ins
jp
loope
repnz
mov
dec
sbb
jno
push
or
arpl
call
cmp
add
ins
in
xchg
jmp
mov
std
rcr
push
xchg
mov
test
push
sbb
add
or
jge
and
iret
jne
mov
int
xchg
pop
gs
in
xchg
pop
inc
enter
ror
rcr
data16
push
cmp
les
cdq
mov
push
inc
(bad)
shl
adc
loopne
push
lock
in
cmp
enter
push
test
or
sub
push
xchg
jmp
push
adc
push
pop
pop
cwde
xchg
push
mov
popf
imul
je
sbb
or
popa
retf
ss
pop
arpl
idiv
mov
fidivr
in
mov
mov
mov
xor
icebp
and
pop
bnd
out
fmul
(bad)
loopne
mov
pop
je
jp
js
std
js
data16
in
adc
inc
outs
or
leave
mov
mov
mov
fsubr
xchg
push
cmp
fwait
jp
jg
pop
outs
mov
mov
mov
mov
gs
xchg
push
ror
inc
out
jae
jns
nop
xor
shl
call
(bad)
stos
and
stos
shl
shl
scas
jb
mov
(bad)
sbb
ds
imul
mov
xor
outs
adc
rcr
nop
inc
mov
dec
xor
sbb
pop
mov
cmp
pop
lods
xchg
jge
popf
jns
push
pop
xor
data16
and
sbb
sub
mov
ret
out
mov
les
mov
rol
loope
addr16
adc
sbb
xor
dec
dec
cmp
add
ja
cmps
ja
jbe
clc
ror
sbb
cmp
bound
mov
outs
scas
imul
mov
jne
and
or
push
icebp
add
fwait
ret
pop
pop
lods
aas
and
xchg
push
and
mov
mov
mov
mov
into
push
ficomp
jl
fstp
cmp
pop
js
xor
xchg
clc
jle
inc
mov
add
dec
shl
or
sbb
push
scas
mov
dec
rol
les
mov
test
aad
fwait
adc
in
lock
mov
retf
push
push
adc
loopne
ja
daa
outs
xchg
aas
mov
jns
pop
out
jmp
(bad)
popa
or
adc
mov
mov
push
call
sbb
mov
xchg
clc
xchg
call
sub
sub
loopne
inc
xlat
push
push
out
out
cdq
inc
jb
mov
(bad)
ss
mov
pop
ds
and
ss
mov
test
xchg
sbb
rol
movs
pusha
mov
mov
xchg
or
stos
repnz
mov
cmp
(bad)
xchg
or
push
pop
and
in
sbb
xor
jg
lds
jno
pop
(bad)
fsub
dec
loop
mov
call
lds
push
hlt
jne
adc
nop
(bad)
pusha
mov
xchg
mov
dec
xor
ins
or
push
and
out
cmp
aas
stos
adc
xchg
std
ud0
and
je
fldenv
mov
sahf
mov
jo
inc
push
ins
(bad)
and
ja
ins
xchg
mov
pushf
xchg
cmps
and
and
js
adc
loopne
dec
(bad)
push
cld
and
retf
mov
dec
push
or
(bad)
mov
loopne
cdq
cdq
jae
stos
mov
push
rol
je
dec
sbb
pop
and
push
pop
not
daa
addr16
in
xchg
fcomi
stos
es
cmp
xchg
sbb
sar
mov
inc
cmps
add
adc
lea
inc
inc
ins
(bad)
fcomp
repnz
xchg
adc
push
and
lea
adc
sar
adc
fmul
cmp
retf
ds
xor
in
xchg
out
add
mov
(bad)
xor
push
aas
scas
fstp
dec
(bad)
les
inc
les
sbb
adc
add
mov
dec
pop
sbb
add
sbb
cs
fisttp
fmul
mov
dec
jmp
dec
xchg
push
mov
aam
add
fnstsw
or
sbb
dec
cmp
out
jmp
adc
or
js
sbb
mov
cli
push
shl
jo
push
ja
mov
xchg
ins
test
adc
sar
mov
mov
inc
(bad)
push
in
cdq
dec
mov
aam
push
stos
xchg
inc
aam
add
add
dec
popa
nop
sar
xchg
jno
ror
loope
fmul
pop
adc
nop
cld
jp
sbb
pop
aad
into
cwde
pop
add
cmp
mov
pop
adc
jle
sub
bound
ret
sub
lods
push
(bad)
sub
js
mov
sbb
push
inc
dec
xchg
sub
arpl
mov
jbe
fld
daa
icebp
stos
xor
ds
xor
dec
(bad)
movs
and
es
fmul
inc
rol
pushf
mov
in
xor
fdiv
mov
test
pop
fs
(bad)
mov
out
lods
lods
xlat
lods
cmp
mov
int
xchg
hlt
mov
xor
ja
jl
(bad)
adc
js
lods
mov
and
or
in
mov
(bad)
addr16
adc
test
mov
push
xor
enter
rcr
sub
xor
jmp
imul
and
cmp
push
xchg
cmp
xor
jnp
in
fucom
mov
mov
mov
std
pop
int3
retf
loope
push
xor
and
push
cmp
jnp
mov
jg
jno
mov
(bad)
icebp
jbe
outs
cld
and
xor
or
push
ret
scas
mov
dec
adc
loope
stos
je
mov
fucomi
ins
sbb
add
jmp
popa
or
pushf
addr16
les
xchg
xor
mov
push
fwait
jns
and
retf
mov
xchg
cdq
int3
pop
jle
xor
sub
sbb
jne
or
jge
pop
mov
stos
(bad)
inc
jmp
cs
sbb
jnp
call
mov
mov
add
mov
stc
xor
add
mov
push
dec
test
cs
pop
xchg
loop
jge
outs
add
mov
adc
scas
xchg
jecxz
xor
jp
mov
add
mov
jbe
mov
dec
jns
inc
fs
(bad)
aam
lods
sbb
jge
sub
push
pop
mov
(bad)
xlat
test
dec
sub
dec
sub
adc
push
and
aaa
fiadd
pop
or
mov
inc
inc
xchg
cwde
mov
dec
imul
jae
pop
mov
imul
push
inc
pop
mov
out
cmp
cwde
mov
in
je
lds
ds
push
cdq
ds
rcr
out
rol
mov
mov
cmp
mov
nop
mov
jns
mov
and
adc
int
sbb
fidivr
inc
mov
xor
dec
mov
mov
mov
ficom
jb
sub
nop
xchg
loop
cmp
xchg
sub
pop
out
add
sbb
ror
mov
pminsw
mov
out
pop
jae
or
sub
leave
cmp
outs
push
data16
call
add
dec
dec
jns
rcl
mov
push
and
data16
push
pusha
push
dec
aam
into
dec
mov
mov
cmp
fs
mov
das
xchg
cmp
mov
cli
xchg
jmp
inc
dec
repz
jno
cdq
retf
cmc
jne
pop
push
lahf
pop
fs
in
cs
mov
cli
std
cmp
push
sub
fs
inc
clc
dec
std
jmp
xchg
xlat
jnp
js
(bad)
leave
push
push
(bad)
lea
push
dec
push
jge
jp
(bad)
xlat
and
dec
aaa
push
mov
and
adc
mov
mov
loope
js
mov
xor
xor
and
aaa
ret
fiadd
fsubr
inc
loopne
test
in
pusha
aas
mov
dec
cmps
loopne
jns
xor
adc
ror
int3
pop
mov
xor
mov
xlat
jecxz
inc
outs
dec
bound
popf
fdivp
in
cmps
cmp
xor
mov
enter
fcmovnb
sti
mov
shl
inc
dec
imul
loope
test
mov
ret
adc
inc
or
clc
dec
aaa
nop
cmc
fs
push
cmp
cmp
xor
jp
sbb
mov
pop
inc
mov
out
shr
inc
xchg
lds
sbb
mov
adc
shl
outs
pop
jo
movs
cli
mov
ja
jmp
mov
mov
jns
pop
push
dec
add
popf
lahf
inc
test
jg
inc
fidiv
mov
or
cld
sbb
in
mov
out
bound
adc
in
push
xor
ret
push
call
cdq
imul
ja
sbb
(bad)
(bad)
and
fidiv
sub
aaa
ins
loop
pop
mov
mov
stc
inc
push
int3
adc
xchg
xchg
cmp
xor
adc
(bad)
xchg
outs
popa
adc
imul
fstp
or
dec
push
test
(bad)
pop
jbe
jg
(bad)
imul
cld
lock
les
jmp
aam
xchg
loopne
push
and
movs
rol
jle
sar
mov
push
imul
add
dec
aad
in
mov
mov
pushf
sbb
aam
jnp
out
lahf
sbb
pop
cdq
xor
xor
pop
sahf
xor
ror
in
mov
mov
pop
mov
pop
mov
cld
outs
aaa
push
push
jo
cmp
add
jne
mov
sbb
call
jnp
lods
arpl
push
mov
mov
je
push
movs
into
dec
ja
or
imul
sar
call
iret
je
rcl
xor
rcl
mov
mov
inc
stos
mov
fstp
js
and
xchg
pop
push
dec
sbb
push
xchg
or
lahf
mov
xchg
scas
cmp
pop
mov
or
gs
cmp
pop
mov
add
cwde
jle
jnp
pushf
mov
sbb
pop
adc
shr
in
jecxz
add
pop
push
mov
pop
mov
push
jb
cwde
das
(bad)
inc
push
ret
fisubr
fsub
mov
jno
mov
in
or
mov
cli
inc
xor
cmps
clc
dec
(bad)
jo
out
rcr
mov
fdivr
add
sbb
jmp
es
mov
xor
inc
cmp
(bad)
dec
cmp
ficomp
adc
in
dec
push
dec
fwait
xchg
daa
out
xor
or
pop
xor
add
pmaxub
cli
ins
adc
or
jecxz
add
in
sbb
dec
repnz
push
in
stos
xchg
xchg
cmp
or
dec
(bad)
mov
cmps
or
sub
inc
mov
dec
jo
xchg
(bad)
pop
out
popa
push
adc
mov
xchg
lds
inc
pop
int3
jb
in
iret
clc
bnd
inc
ins
pop
shl
xchg
mov
fwait
fwait
inc
pmullw
not
mov
adc
mov
int3
dec
xchg
mov
or
mov
leave
stc
sti
adc
loop
dec
(bad)
pop
jmp
xor
and
int
cld
shr
xor
push
fst
icebp
mov
sub
or
icebp
sub
cmp
jecxz
js
cdq
inc
lds
jecxz
repnz
dec
clc
fst
mov
mov
mov
adc
inc
test
pushf
and
(bad)
call
xchg
inc
push
enter
fadd
mov
rol
inc
and
cmc
xor
jae
rcl
jo
mov
xchg
jns
cmp
int
clc
test
jns
sti
mov
loopne
mov
test
hlt
jns
icebp
cli
jg
mov
ret
mov
movs
xchg
pusha
mov
sbb
je
in
jns
jle
lods
mov
push
les
cmp
mov
or
loop
mov
fldcw
mov
dec
pop
loop
leave
xor
dec
xor
pop
outs
nop
mov
adc
repnz
mov
call
data16
jae
in
pop
mov
daa
nop
mov
sub
jecxz
or
(bad)
cmc
pop
sub
sub
fist
jb
mov
cmp
les
bswap
jb
mov
pop
inc
test
pop
jno
xchg
int3
sub
(bad)
not
xchg
cmc
xor
sbb
mov
rcl
rol
inc
fbstp
inc
xor
bound
lods
pop
inc
adc
or
pop
and
xchg
retf
leave
jmp
and
loope
mov
mov
push
xor
pop
dec
out
xor
push
mov
mov
stc
push
mov
data16
sbb
and
sbb
inc
sub
cmp
inc
add
dec
xor
or
pusha
mov
cs
fisub
scas
arpl
sub
or
fwait
xor
mov
or
mov
ins
sbb
retf
jb
add
sahf
mov
sahf
or
pusha
jmp
test
xor
mov
inc
sub
cmps
shl
dec
(bad)
adc
ret
jns
fidiv
clc
(bad)
je
ffreep
mov
icebp
xor
pushf
cmp
mov
sar
aas
sub
es
mov
push
repz
sbb
or
or
cmps
add
lods
inc
imul
xor
add
xchg
xchg
cmp
xor
movs
and
leave
ja
mov
mov
push
pop
ror
fnclex
mov
rol
mov
jmp
fcomip
popa
xchg
cmc
xlat
ret
mov
push
push
mov
mov
jge
test
xchg
add
adc
bound
add
addr16
pop
dec
sahf
int
ret
jmp
mov
dec
test
xchg
push
fwait
adc
xchg
out
mov
aam
ins
cmps
dec
mov
sub
xor
cmps
or
repz
jo
cmp
cmc
ins
int3
repz
gs
mov
bound
cmps
xor
ficomp
(bad)
jne
fmulp
mov
push
mov
loopne
dec
stos
mov
jle
(bad)
jno
lock
aam
jg
add
pusha
dec
jb
and
xor
(bad)
pop
stos
jb
or
call
(bad)
mov
pop
fsubr
xchg
lds
aam
jnp
mov
js
add
inc
loop
ins
shl
fisub
fld
ret
repz
jmp
push
inc
test
in
leave
jmp
sub
addr16
mov
xchg
repz
xchg
push
inc
ror
jne
mov
sub
add
add
mov
mov
sub
jmp
jns
jbe
shl
dec
mov
or
popa
xor
cmps
xlat
lods
add
mov
xor
loope
scas
cdq
xor
mov
imul
rcl
ror
into
out
jbe
mov
push
imul
mov
shr
clc
imul
dec
inc
aad
or
sbb
fdiv
xchg
push
push
pop
popf
jmp
out
push
jo
adc
lods
ja
mov
mov
sahf
mov
dec
or
test
mov
mov
jae
sub
mov
shr
sbb
cwde
es
cmps
xchg
mov
test
and
mov
push
push
pop
loopne
repz
push
jnp
test
mov
stos
mov
jmp
inc
fwait
repz
adc
ret
jmp
xor
jne
or
ret
test
fdivp
leavew
jge
aam
int3
or
or
push
int
cmp
mov
jecxz
push
push
xchg
inc
popf
bound
jo
mov
push
das
jmp
adc
(bad)
lods
sbb
dec
ret
call
push
ja
push
adc
jae
jb
imul
mov
lea
bound
mov
dec
adc
retf
scas
cmps
imul
cmp
dec
mov
and
loop
shl
mov
inc
(bad)
jae
out
cmp
mov
sub
ret
jb
jae
scas
shl
add
in
pop
fld
xchg
inc
add
pop
sbb
fistp
inc
and
loopne
inc
cmps
mov
jns
lods
add
in
pop
repnz
stos
mov
jl
xchg
lock
and
mov
repz
enter
test
mov
shl
pop
popf
mov
cmp
ja
es
adc
repz
push
sbb
cmp
sub
cmp
imul
jns
(bad)
(bad)
loop
add
xchg
xor
push
fisttp
add
mov
movs
jb
push
lods
dec
lock
(bad)
mov
mov
mov
add
aam
push
xchg
xlat
push
pop
dec
test
mov
cdq
xor
fsubp
rcr
inc
push
in
iret
push
(bad)
or
push
out
fstp
pop
fs
stos
mov
rcr
shl
dec
push
jg
xchg
movs
ret
popf
cmp
cmp
push
ss
fiadd
mov
push
sub
data16
nop
bound
daa
xchg
cwde
xchg
cmc
mov
lods
xchg
cs
jp
out
cmp
add
add
xchg
mul
test
(bad)
cmc
rcl
fistp
pop
add
cmp
rsqrtps
cmc
fimul
dec
mov
xchg
call
stos
aaa
test
mov
add
int
fimul
lds
push
pop
fchs
repnz
sub
mov
(bad)
and
adc
dec
add
cwde
hlt
aas
call
add
push
aas
or
cmp
(bad)
sar
inc
rol
icebp
push
(bad)
adc
mov
les
dec
pop
sbb
ins
push
test
out
xchg
sbb
retf
js
push
test
sahf
xchg
sahf
cdq
(bad)
cmp
push
pusha
mov
enter
vminsd
xor
lea
mov
test
fsubr
das
cmp
loopne
and
outs
or
loopne
cli
xor
cmps
leave
jb
jmp
sub
scas
dec
push
outs
pop
popa
or
add
idiv
(bad)
rcr
sub
push
push
(bad)
cmp
jmp
sub
jb
clc
and
test
loope
add
xchg
push
mov
add
xchg
in
push
adc
push
sahf
dec
sub
xchg
scas
push
adc
mov
sub
loope
pop
jg
jecxz
ja
es
stos
test
bound
(bad)
pop
push
sar
(bad)
or
es
push
int3
jns
ret
cmp
pusha
out
lds
xchg
adc
jmp
xchg
cli
sub
(bad)
jle
test
inc
rol
pusha
or
dec
into
popa
stos
popa
inc
mov
sbb
cs
call
sub
cmp
mov
cld
loopne
lods
or
leave
fidivr
push
mov
cwde
add
retf
dec
xchg
rol
pop
neg
xlat
xor
fld
in
sub
imul
inc
and
(bad)
mov
jmp
xchg
mov
sahf
lea
push
add
ret
fsubr
int3
adc
(bad)
ins
pop
jno
inc
les
es
test
sub
mov
sbb
pop
popa
and
xor
cmp
cdq
and
js
add
xor
push
icebp
mov
bound
inc
xchg
inc
sub
dec
jbe
or
je
xchg
movs
jnp
inc
ja
and
cmp
pop
xor
sahf
adc
sbb
not
ss
adc
jecxz
cdq
ficom
and
sbb
and
and
ins
xchg
mov
mov
sub
mov
xchg
mov
inc
aam
outs
xor
loope
sbb
aad
mov
xor
(bad)
std
retf
mov
inc
mov
das
stos
or
loopne
and
test
jge
out
mov
dec
cmp
mov
jae
inc
xchg
mov
inc
jmp
pushf
mov
fs
es
mov
outs
pop
movs
mov
sub
add
enter
imul
jmp
test
jmp
xchg
pop
add
adc
xor
adc
push
add
shl
sub
inc
ins
mov
mov
outs
jbe
ret
and
das
call
push
jnp
mov
(bad)
push
pop
mov
shl
jno
outs
popa
xchg
xor
push
cmps
stos
dec
loope
jmp
xor
pop
(bad)
sub
mov
mov
add
adc
mov
jbe
xchg
add
mov
jp
leave
stc
mov
or
push
sbb
dec
fstp
fsubp
test
(bad)
cmp
cmp
jne
scas
imul
notrack
inc
dec
dec
ss
and
push
sar
enter
mov
and
out
mov
cmp
and
std
lahf
push
sar
sbb
mov
pushf
add
mov
inc
inc
pop
test
cmp
or
mov
rol
cdq
lds
xor
js
ins
sub
popf
inc
mov
leave
push
clc
mov
je
out
into
and
mov
jge
or
or
mov
dec
and
sub
mov
and
call
repnz
out
in
add
jmp
adc
stos
aam
mov
mov
stc
and
sbb
mov
mov
loope
call
ins
addr16
stc
jbe
add
dec
dec
sbb
(bad)
dec
out
sar
neg
or
rcr
push
outs
call
into
inc
data16
in
push
xchg
les
mov
pop
test
mov
jl
mov
sub
test
pushf
dec
and
or
and
pop
add
bound
outs
je
mov
mov
imul
stc
jo
in
(bad)
fsub
test
movs
clc
stos
push
sti
leave
retf
inc
(bad)
push
loopne
xchg
repz
sti
scas
test
and
sub
xlat
add
aad
inc
fbld
mov
lods
mov
mov
mov
ret
sbb
shl
or
cmp
push
pop
out
fcomp
shr
fadd
outs
mov
mov
aam
enter
int3
or
test
and
aas
repnz
adc
xchg
pushf
inc
push
adc
(bad)
push
fwait
rcl
push
out
ret
aad
dec
cmp
cld
pusha
int3
add
mov
adc
and
sub
out
gs
mov
or
sub
add
mov
push
in
rcl
ins
mov
xor
sbb
mov
out
mov
(bad)
sar
fdiv
mov
pushf
ins
cmp
inc
jecxz
ds
ins
lds
cmps
nop
or
push
push
mov
out
mov
push
mov
outs
adc
retf
push
cmps
xchg
aaa
sbb
call
js
aas
push
loopne
sbb
movs
popf
mov
aam
mov
mov
je
push
add
push
mov
cmp
jae
sbb
pop
dec
push
sbb
sbb
enter
dec
js
adc
lods
mov
cmp
add
jbe
push
xor
aaa
sub
out
cdq
mov
les
mov
sub
shl
jecxz
add
movs
sub
jae
sbb
daa
jno
out
inc
pusha
add
aad
mov
push
fwait
pop
mov
pop
lods
shl
rcl
out
shl
sbb
push
mov
xor
movs
dec
test
xchg
jmp
inc
daa
cmps
stc
outs
loop
hlt
jnp
movs
adc
in
popa
inc
sub
lods
add
inc
adc
sahf
xor
dec
adc
repnz
inc
sub
mov
les
jno
ss
inc
out
pop
stos
xor
sbb
sbb
adc
sbb
adc
sub
push
push
sti
pop
adc
lahf
fisttp
inc
not
mov
mov
fdivr
adc
adc
sbb
lock
jns
pop
nop
je
es
inc
(bad)
xchg
test
fnsave
cmovb
jbe
icebp
add
movs
push
les
or
sbb
mov
mov
imul
std
or
adc
xor
das
test
cld
push
mov
or
mov
xor
daa
xchg
arpl
ins
jp
dec
ficomp
jl
mov
mov
lea
and
xchg
dec
call
jb
push
mov
jns
xor
sub
lea
cwde
shl
cmp
mov
(bad)
ja
movs
fstp
mov
adc
fadd
out
mov
popa
cmp
(bad)
cmps
xchg
arpl
fisttp
push
xor
jge
push
jp
(bad)
sar
aaa
into
pop
aad
dec
stc
sahf
fst
fsin
sub
mov
(bad)
inc
push
dec
cmp
dec
out
jecxz
or
mov
mov
fild
and
or
lahf
mov
fld
into
rol
sti
ins
addr16
(bad)
std
cmps
jmp
pusha
add
fdivr
jmp
mov
xchg
jmp
shr
ror
daa
add
add
and
or
pop
inc
mov
xchg
in
sub
cmp
idiv
add
pop
fneni(8087
aad
ins
fcmovnbe
(bad)
ins
pusha
inc
jl
aaa
test
cdq
mov
pushf
mov
xlat
cmp
leave
inc
pop
(bad)
call
sbb
shl
hlt
inc
xchg
sbb
(bad)
jge
inc
test
mov
frstor
xchg
mov
push
fidiv
sbb
pop
dec
xchg
movs
push
pushf
jge
repnz
ficomp
dec
sbb
lds
ret
clc
loopne
fidiv
inc
(bad)
mov
dec
std
(bad)
xor
gs
(bad)
sbb
not
jnp
jecxz
mov
aam
mov
inc
addr16
jo
jecxz
pop
or
adc
mov
xor
mov
outs
push
add
jge
push
push
loopne
mov
xchg
mov
ja
pop
xor
jns
stos
jge
mov
js
pusha
or
and
sbb
call
xor
leave
cmp
call
aam
dec
retf
ror
movs
lods
test
adc
sub
pop
mov
mov
imul
mov
jmp
nop
sar
adc
add
dec
push
faddp
or
inc
inc
adc
cdq
xor
inc
call
in
lahf
or
push
xlat
jle
inc
mov
jl
mov
mov
pop
cmp
sbb
push
inc
in
xchg
sti
scas
xor
xchg
ror
loop
nop
das
pop
mov
scas
dec
cmp
pop
out
inc
bound
out
das
xor
aam
outs
push
add
into
mov
add
push
mov
mov
in
mov
cmps
aas
std
xchg
sti
and
out
mov
dec
mov
ja
xor
mov
sbb
mov
mov
pop
mov
mov
in
jmp
mov
sub
out
in
fisttp
scas
xchg
ror
addr16
hlt
mov
jne
je
adc
rcl
xor
mov
retf
jno
data16
xor
or
mov
call
cld
sbb
push
stos
cld
ja
sbb
cmp
cmps
inc
xchg
leave
cmps
push
int
push
mov
es
sbb
fisub
fimul
jecxz
movs
pop
xchg
addr16
test
pop
pusha
lea
mov
in
add
shl
cmc
hlt
iret
push
inc
icebp
add
rol
pop
or
sub
pusha
add
icebp
cmp
push
pop
dec
dec
shl
sbb
cwde
dec
arpl
xchg
sar
mov
xchg
push
lods
sub
sub
mov
jns
mov
jae
aaa
pop
loop
jb
adc
add
emms
xor
add
adc
hlt
push
fcomi
xor
dec
sbb
aas
cmc
and
test
jae
loopne
retf
or
or
sbb
fdiv
cdq
adc
mov
pop
cmp
cmp
pop
cmp
shl
fs
lahf
mov
xchg
sub
xchg
loop
and
mov
data16
(bad)
ds
mov
frstor
outs
xchg
mov
pop
out
lods
aaa
fst
xchg
test
or
es
mov
cwde
call
jnp
test
jmp
mov
or
fisubr
nop
das
mov
mov
sar
xlat
add
rcl
mov
xchg
sub
sar
test
mov
push
inc
add
fild
imul
cmps
dec
sub
xor
cmp
or
adc
adc
dec
or
and
int3
adc
cmp
jo
xor
push
retf
or
mov
xchg
leave
loope
cwde
mov
repnz
jge
daa
(bad)
cwde
sar
dec
add
out
loopne
sub
sbb
hlt
faddp
sub
mov
mov
mov
inc
dec
aam
sbb
ss
dec
dec
xchg
push
repnz
(bad)
shr
cmp
in
mov
pop
pop
adc
out
jp
xor
test
out
aas
mov
in
mov
pop
xchg
pop
jge
mov
xchg
xchg
add
shl
dec
and
cmc
fild
(bad)
repnz
or
sub
inc
fldenv
out
xchg
mov
push
dec
iret
(bad)
fcomip
mov
out
retf
(bad)
lahf
lock
ds
jge
jmp
in
xchg
(bad)
inc
mov
push
mov
aas
arpl
mov
cdq
cmc
jl
mov
xor
ins
add
imul
jle
int3
imul
mov
das
push
jge
mov
push
xor
stos
mov
aas
repz
add
(bad)
xchg
sbb
ds
lahf
jmp
or
inc
dec
adc
sahf
retf
push
rol
pop
adc
dec
inc
pop
adc
mov
push
int3
jne
loope
push
std
call
mov
imul
jg
xchg
jmp
movs
and
stc
ss
xchg
call
sbb
mov
push
mov
xchg
push
enter
sbb
imul
pop
fbstp
inc
int3
mov
fiadd
cmps
mov
add
and
add
and
xor
nop
cmp
adc
pop
int3
or
sbb
std
push
and
fs
sub
retf
enter
retf
shl
mov
hlt
fmul
push
cmp
sub
iret
xor
or
in
repnz
cmp
pop
cdq
sub
mov
fnsave
push
mov
sti
leave
sub
test
mov
shl
std
rcr
nop
call
(bad)
cwde
push
icebp
sbb
out
mov
stos
mov
jl
mov
mov
aas
daa
push
loopne
mov
out
pop
pop
jl
movs
add
mov
mov
cmp
(bad)
aam
sub
in
cli
push
jbe
sbb
push
pop
and
repnz
xchg
mov
and
mov
mov
push
xor
adc
loopne
call
dec
or
and
arpl
bound
cmc
lods
aaa
test
sbb
jae
test
add
xor
sahf
dec
mov
jns
stos
lods
push
scas
mov
inc
stos
pop
pop
loop
stc
loopne
pop
cli
outs
inc
fmul
push
push
iret
adc
sbb
aad
sbb
movs
popa
hlt
sbb
in
xchg
jecxz
jle
call
or
jl
ins
or
enter
pop
aaa
imul
cdq
sti
push
pop
call
pop
js
mov
sbb
inc
mov
xlat
add
test
pusha
or
mov
imul
cmp
push
sub
dec
pushf
push
dec
and
mov
icebp
jp
inc
mov
dec
leave
mov
sub
int3
fwait
les
dec
jnp
stos
cdq
add
lods
xchg
das
not
daa
aam
and
arpl
imul
in
(bad)
int3
lods
inc
mov
pop
icebp
out
scas
xchg
inc
add
jns
inc
lods
out
xor
nop
xlat
push
dec
call
mov
loop
jo
aaa
push
dec
dec
addr16
xchg
mov
sbb
mov
xchg
xchg
fistp
xchg
or
pop
rcr
dec
and
stc
pop
(bad)
outs
push
jbe
dec
ss
sahf
fnsave
mov
stos
push
sti
sub
(bad)
rcl
jns
cmp
or
mov
pop
dec
or
adc
mov
iret
inc
jmp
jp
xchg
gs
pop
cmp
jo
(bad)
and
jp
xlat
sahf
jno
push
fucomip
ins
and
rol
inc
scas
adc
cmps
xchg
sti
loopne
cs
or
cmp
imul
sbb
xchg
out
es
or
and
and
or
pushf
inc
sub
or
pop
js
push
dec
mov
movs
inc
leave
cmp
inc
out
repz
cwde
mov
daa
xchg
ins
or
fidiv
rol
imul
in
xor
popa
add
and
pushf
add
fcomp
inc
cmp
test
add
mov
push
jge
cmp
aad
sbb
xor
std
xor
pusha
cmp
addr16
stc
mov
cdq
ins
pop
sub
(bad)
cs
dec
int
(bad)
jle
fadd
push
dec
xchg
jge
add
sahf
sbb
lods
jp
xchg
ret
(bad)
dec
out
or
nop
push
call
mov
sti
nop
push
retf
sub
mov
lock
mov
rcr
out
popf
cmps
add
and
sbb
imul
stc
cs
fisub
pop
test
inc
mov
adc
inc
lods
jg
shl
icebp
adc
imul
loopne
add
pop
push
lods
fstp
push
jae
sbb
xchg
pop
ja
cdq
cmps
stos
icebp
leave
sub
or
xchg
push
adc
leave
pop
sub
lahf
pop
(bad)
cmc
cmp
add
ds
inc
lds
adc
ss
adc
das
push
mov
push
add
and
sahf
adc
(bad)
adc
xor
fist
push
jecxz
push
ja
stc
and
bound
or
stc
daa
clc
sbb
pop
pusha
inc
in
sbb
xor
sar
dec
data16
ds
lods
cld
mov
adc
mov
div
xlat
mov
and
mov
loopne
jmp
push
cmc
cmp
xor
xchg
inc
aaa
add
xor
cld
hlt
jo
lahf
shl
jle
ds
ins
push
stc
dec
rcl
bound
push
sbb
jae
repz
aaa
sbb
xchg
add
mov
cld
aam
xor
adc
rcl
or
and
daa
je
icebp
add
fadd
jle
mov
or
and
jns
mov
cld
scas
pop
inc
xor
add
pop
jmp
push
adc
cmp
test
lds
sub
mov
test
mov
int3
in
je
leave
stc
push
sbb
loopne
loop
rol
and
jne
nop
or
mov
mov
sub
repnz
push
adc
into
ret
mov
jmp
and
cmp
pop
inc
out
dec
mov
ins
pushf
sub
cbw
jb
xchg
call
cmp
cmps
in
mov
stos
fstp
push
xor
mov
fimul
and
push
inc
ins
fnsave
cmp
pop
push
mov
sahf
test
data16
xchg
idiv
loope
dec
xchg
fdivp
in
jge
adc
bound
mov
(bad)
or
mov
sbb
out
add
mov
movd
pop
mov
pop
sti
jecxz
out
sbb
sub
in
ja
ds
sbb
jno
push
xchg
cli
sub
(bad)
push
mov
push
sbb
adc
cwde
mov
imul
fild
loope
movs
test
push
xchg
ins
add
sub
int3
push
pop
inc
dec
hlt
retf
data16
mov
or
mov
in
push
mov
pop
cmp
push
out
or
mov
aaa
push
push
push
push
ret
int
push
fnsave
jecxz
lea
cmc
movs
fcmovb
sub
(bad)
push
xor
cmp
shr
adc
shr
cmps
sub
es
mov
cmp
fs
or
int
jmp
in
mov
mov
(bad)
pop
cmps
push
fwait
rcl
or
gs
mov
and
bound
add
rcl
or
mov
sti
cmps
push
js
jno
xchg
xchg
sub
adc
sbb
sub
std
pop
shr
dec
mov
adc
(bad)
popf
mov
sbb
mov
dec
clc
stos
int3
add
dec
push
cmp
iret
lds
scas
sbb
daa
bound
fistp
mov
or
in
out
fstp
push
adc
(bad)
loop
gs
push
push
(bad)
out
leave
dec
jae
adc
pop
dec
call
xchg
cld
stc
adc
xchg
and
xor
jnp
mov
sub
or
pop
adc
aaa
addr16
mov
fsub
bound
and
sub
mov
pop
out
int3
push
or
jmp
cmp
imul
sbb
outs
cdq
push
adc
dec
mov
xchg
xor
aad
rol
and
mov
push
es
enter
sub
out
fsubr
pop
jl
add
xchg
jne
mov
mov
pop
repz
mov
movs
(bad)
push
mov
inc
popa
scas
mov
aad
pusha
mov
lods
push
hlt
mov
dec
push
push
pusha
fcom
xchg
loope
or
or
into
jmp
int
push
or
cli
cmp
test
jl
mov
ret
jae
mov
(bad)
into
xlat
or
pop
jnp
(bad)
jl
hlt
es
adc
push
jg
or
sub
lock
clc
loop
xchg
in
dec
adc
das
leave
das
fwait
cwde
ror
hlt
int
push
inc
and
xchg
inc
and
adc
out
jno
dec
mov
or
xchg
xchg
cmps
push
sbb
outs
push
and
(bad)
iret
cmp
cmp
imul
push
out
mov
outs
aad
push
shr
adc
xor
lods
sbb
xlat
push
loope
mov
inc
fwait
mov
nop
jns
xor
pop
xchg
cdq
xlat
xchg
pop
ror
bound
or
(bad)
jmp
mov
sub
or
hlt
ins
mov
sbb
xchg
and
dec
(bad)
cwde
loop
sar
jmp
sbb
cmc
mov
mov
call
sbb
or
shr
add
comiss
je
jne
test
stos
mov
mov
sub
dec
stos
ins
sub
sub
cmp
sub
into
imul
xchg
call
inc
push
jo
icebp
inc
retf
fisubr
dec
adc
adc
scas
fld
cwde
les
scas
add
aad
sbb
mov
pop
ret
movs
cli
test
scas
test
ins
mov
inc
push
js
mov
add
into
jl
cmps
adc
inc
jl
sbb
push
or
mov
jnp
sbb
xor
push
sub
je
out
jne
addr16
pop
call
popa
jo
hlt
and
adc
jnp
fst
mov
xor
loop
ror
cmp
add
int
mov
scas
dec
pop
fld
or
adc
inc
inc
jg
loop
das
xlat
and
mov
in
push
cmp
mov
into
xchg
dec
cmps
lods
aaa
xchg
xchg
adc
nop
aam
enter
aam
push
dec
dec
cs
jo
add
rcl
dec
fmul
jbe
scas
arpl
sub
pop
scas
movs
rcr
dec
mov
sti
inc
add
push
fild
push
mov
popa
imul
dec
nop
pop
(bad)
retf
mov
aad
pusha
inc
cmp
sub
loope
(bad)
outs
mov
push
lahf
cmps
push
push
(bad)
cmp
pop
fcomp
inc
or
rcl
in
imul
in
add
ins
test
xchg
dec
fnstenv
sbb
imul
xchg
mov
jle
aas
pusha
add
mov
das
sub
je
in
pop
pusha
push
lahf
pop
addr16
inc
gs
add
stos
jo
xor
dec
test
gs
neg
in
xchg
leave
aad
pusha
xor
xchg
xchg
inc
cmp
jns
retf
adc
loope
jne
repz
shl
bound
pop
dec
add
fdiv
fcom
pop
sub
retf
sbb
inc
and
test
pop
fs
test
sbb
frstor
int3
mov
leave
xchg
xchg
leave
test
adc
sbb
xchg
mov
test
sub
addr16
jp
inc
pop
sub
int
retf
jp
out
sbb
into
xchg
call
or
jbe
popa
xchg
xor
in
loop
arpl
aas
imul
jbe
mov
inc
in
add
inc
icebp
call
pop
jecxz
mov
pop
jo
outs
retf
xor
loop
test
xchg
mov
xor
mov
test
fiadd
xchg
js
lods
fld
test
xor
push
and
jbe
adc
sbb
xchg
adc
es
jne
loope
js
repnz
sbb
mov
pop
mov
inc
ds
sub
ins
push
and
jns
mul
adc
aad
adc
ret
int
or
test
sub
or
adc
shr
pop
sbb
xchg
mov
hlt
enter
pop
mov
add
ins
bound
pushf
pop
push
sub
out
test
add
mov
xchg
xchg
sbb
xor
push
clc
daa
fimul
adc
mov
dec
adc
jg
xor
and
mov
sub
dec
mov
xchg
dec
sbb
mov
in
ret
push
or
mov
pop
xchg
sub
xor
cwde
push
adc
fistp
rcr
cmps
fld
(bad)
cmc
ss
push
fmul
movs
dec
inc
pop
push
mov
add
rcl
and
(bad)
mov
je
ins
in
mov
sti
(bad)
(bad)
lea
xor
ret
push
lea
test
dec
sub
sbb
push
stos
ror
mov
arpl
jg
add
xor
in
jmp
(bad)
in
pop
lock
retf
int3
mov
arpl
lahf
clc
pop
aad
rcr
cmp
stos
jns
cmp
cmp
jmp
cdq
les
jg
jnp
sbb
jne
mov
out
jmp
mov
outs
(bad)
icebp
cmp
in
inc
inc
cmc
mov
or
jle
out
inc
(bad)
mov
mov
sbb
arpl
(bad)
iret
pop
loop
add
xchg
and
out
test
sbb
sahf
je
push
std
lea
pop
jbe
das
aad
push
xchg
jle
ds
push
stos
loope
fs
lods
das
and
cld
push
cld
in
hlt
call
xor
inc
push
clc
shr
outs
fidivr
xor
jl
sub
dec
cmp
adc
add
ds
jmp
das
mov
scas
stos
cmp
ficomp
sbb
cmp
adc
add
ret
mov
lds
pushf
daa
mov
aas
cli
jp
add
pcmpeqb
dec
xor
repnz
sbb
pop
pop
test
mov
mov
fwait
paddb
xchg
adc
and
push
ss
enter
ficom
lock
cmp
mov
out
mov
cmps
or
shr
add
mov
loope
imul
adc
pop
cmp
mov
(bad)
jecxz
loopne
sub
(bad)
xchg
outs
dec
pop
(bad)
sbb
test
packuswb
sti
cmps
popf
or
rcr
push
nop
scas
sub
xor
dec
arpl
in
mov
push
rcl
pop
xchg
jge
push
sub
loope
and
in
mov
enter
dec
cmps
mov
add
arpl
pop
mov
scas
ins
push
fimul
outs
xchg
inc
inc
mov
jmp
les
mov
pop
adc
jecxz
addr16
nop
fs
adc
push
jae
mov
mov
pop
(bad)
jbe
add
jae
cmps
mov
xchg
sub
xchg
outs
push
shr
lock
test
and
fcom
jo
xchg
jmp
sbb
in
cmp
sub
add
rol
xor
popa
aaa
push
adc
out
imul
cli
xor
push
push
(bad)
pop
test
mov
fimul
or
nop
or
mov
outs
les
je
std
and
jno
mov
mov
sub
xchg
jb
ja
push
fdivr
jo
std
shr
add
js
(bad)
and
mov
sub
adc
call
and
xchg
xchg
jp
rcr
xchg
sbb
push
out
inc
mov
pop
minps
sbb
dec
fidiv
sub
pop
sti
inc
jge
inc
pop
inc
push
mov
(bad)
adc
cdq
xor
adc
xchg
(bad)
cmp
jle
dec
out
jno
fldenv
add
and
mov
xor
xor
push
or
rcl
xchg
xchg
xor
repnz
ins
xor
lock
pop
xchg
add
push
call
stos
shr
shr
push
lock
cmp
sbb
pop
jle
movs
cmp
mov
jns
inc
movs
push
jg
mov
int3
push
pop
cs
cmps
rol
sub
push
mov
sbb
sub
repz
je
mov
es
jmp
daa
sbb
aam
inc
pop
out
out
sbb
inc
pop
mov
pop
sbb
cmp
sub
mov
push
xchg
mov
jecxz
stos
or
xor
adc
add
add
pusha
mov
pop
pop
sub
fild
movs
add
pop
ret
mov
lahf
test
hlt
scas
mov
inc
xor
sbb
(bad)
mov
repnz
stos
popf
push
cmp
popa
xchg
add
icebp
fnstcw
inc
shl
dec
ss
retf
outs
xchg
pushf
pop
pop
jle
mov
(bad)
(bad)
xchg
ja
pop
out
push
and
repz
mov
test
cmp
cli
xor
retf
push
dec
adc
mov
pop
(bad)
push
cmps
cmp
scas
add
inc
dec
sahf
sbb
retf
ds
imul
cmp
leave
mov
jge
and
loopne
pusha
push
pop
mov
int3
sub
sbb
sbb
scas
out
fadd
mov
ja
outs
jae
iret
rol
xor
out
mov
popf
xor
clc
test
add
cmp
xor
int
sub
jge
or
push
mov
icebp
adc
dec
fcom
jl
cmp
shl
push
imul
adc
iret
jne
dec
mov
out
inc
push
dec
pop
call
outs
sbb
mov
xlat
repnz
out
add
lock
mov
nop
scas
iret
jb
jle
jl
loopne
dec
mov
inc
(bad)
push
stos
pop
xor
jmp
sar
fimul
jnp
jnp
test
fisttp
or
or
mov
idiv
je
lock
mov
xlat
in
test
pop
inc
ret
jne
jo
push
pop
xchg
in
push
xchg
lahf
push
es
outs
popa
stos
pop
mov
sub
daa
fist
push
loop
add
cwde
push
pop
jg
push
in
xor
sub
shl
inc
pop
xchg
cmc
fucomip
dec
xlat
mov
ret
add
mov
xchg
jl
sub
retf
imul
enter
cwde
fild
ds
pop
fst
rcl
fisub
add
not
xchg
xor
cmp
jno
or
(bad)
inc
and
inc
xchg
mov
cli
cmp
cmps
push
lahf
jae
dec
test
call
pop
ja
mov
and
fcos
lds
mov
xchg
aaa
sub
pop
cwde
jne
ret
ret
arpl
adc
and
mov
jns
call
shr
and
mov
cmp
js
cmp
fnsave
in
cmp
jp
xchg
out
test
mov
std
jmp
loope
xchg
dec
fiadd
or
les
std
xlat
jp
cmp
xchg
repz
sbb
inc
mov
inc
out
gs
or
pusha
loop
out
jo
mov
mov
jmp
rcr
jl
push
lods
sub
jp
out
xchg
hlt
cli
mov
inc
add
xabort
ret
jns
shl
jecxz
outs
aad
loop
sti
xchg
fsub
adc
sub
mov
sub
push
or
mov
push
retf
and
imul
shrd
mov
sub
push
cmp
add
add
jl
xchg
aad
push
add
inc
xchg
test
pop
xchg
push
mov
and
jl
mov
lods
mov
mov
cwde
sub
jno
dec
movs
and
mov
rcr
mov
cpuid
aas
mov
into
push
dec
fmul
mov
int3
mov
gs
sti
jg
cld
popa
in
sub
add
repnz
div
shl
or
push
jae
adc
(bad)
push
add
jo
push
cwde
cmp
retf
fsubr
ret
jo
mov
retf
mov
mov
push
ds
mov
inc
xchg
out
ins
bound
test
(bad)
ror
jns
xchg
scas
icebp
ss
ficom
retf
mov
rcl
push
inc
sar
clc
fldenv
adc
pop
imul
xlat
pop
or
dec
push
jnp
and
or
adc
pop
hlt
jbe
sub
jne
pop
xor
(bad)
aad
lods
push
xchg
push
xchg
push
inc
pushf
sub
add
call
dec
inc
mov
mov
sahf
mov
xchg
test
adc
aad
dec
push
mov
jbe
xlat
pop
ds
repnz
int
pop
mov
sbb
inc
mov
adc
jmp
inc
xchg
mov
ins
add
stos
pop
push
aas
sbb
test
mov
scas
lahf
mov
out
mov
test
adc
mov
cmp
fisttp
mul
rcr
popa
or
enter
ins
cmp
shl
jle
or
int3
es
ficom
jmp
cdq
movs
pop
fwait
test
(bad)
(bad)
std
rcr
jno
les
xor
adc
xchg
shl
mov
jge
mov
jl
icebp
rol
stc
into
in
and
pop
imul
cmp
cmp
(bad)
out
mov
outs
push
movs
and
lds
mov
sbb
cmp
stos
scas
aas
clc
mov
adc
or
xchg
mov
pop
sub
gs
cmc
imul
jne
push
fsubr
cmc
lea
or
mov
pop
mov
sahf
mov
imul
xchg
inc
push
dec
push
sahf
and
fild
dec
retf
(bad)
cmp
dec
pop
fsubr
ds
movs
jge
popf
sub
ins
push
pop
sti
mov
dec
add
out
cmp
or
test
cdq
lahf
lahf
mov
sub
jmp
jnp
sub
pop
cmps
fdivr
sti
movs
sub
adc
jl
jge
vmread
(bad)
stc
cwde
adc
jmp
fidiv
test
stos
adc
jbe
test
or
loopne
enter
mov
je
pop
dec
ret
cmp
dec
lods
inc
add
add
add
outs
sub
fwait
mov
imul
push
lahf
arpl
aas
jo
(bad)
mov
sbb
lahf
jo
xlat
mov
cli
test
gs
fisubr
ins
pusha
mov
pop
xlat
add
dec
jmp
mov
popa
mov
popf
scas
fnstenv
jle
das
jge
(bad)
fldenv
mul
sbb
mov
fdivr
inc
fwait
mov
add
xlat
push
xchg
cs
js
inc
mov
jno
popa
(bad)
push
inc
popf
ins
ret
lock
jg
xchg
leave
aam
test
mov
js
rol
rcr
lods
jns
mov
into
push
dec
dec
dec
add
fld
cmp
mov
sub
retf
test
push
jmp
mov
dec
cli
(bad)
das
ret
pop
sub
jecxz
cld
mov
adc
pop
shl
cmps
fld
or
lock
popa
cmp
jp
mov
mov
call
and
sbb
dec
leave
mov
jp
push
test
ja
sub
push
push
xor
popf
lds
pusha
adc
add
mov
xor
add
inc
gs
adc
dec
retf
dec
std
pop
hlt
sbb
aaa
mov
mov
jb
pcmpeqw
sub
jp
std
jl
sub
jecxz
test
and
or
dec
dec
fwait
out
test
test
cmps
cmp
popa
int3
xchg
xchg
mov
faddp
inc
and
maxps
not
adc
cld
pop
jg
ins
call
shl
popf
sbb
or
sub
mov
pushf
pushf
add
jnp
or
adc
ins
push
and
mov
out
out
xor
dec
(bad)
lods
inc
ins
jb
aam
gs
or
dec
add
pusha
xor
stc
ret
push
jmp
shl
inc
mov
pop
fiadd
sbb
in
jg
popf
rcr
mov
jmp
jmp
or
cmps
enter
rcr
(bad)
sbb
out
out
xor
pop
loopne
push
sub
jns
dec
loope
pop
pop
inc
jb
outs
mov
rcl
jmp
push
imul
adc
test
sbb
pop
mov
mov
fst
loopne
test
jl
sahf
xor
mov
sub
push
add
ja
movs
pop
stos
rcr
gs
cmps
ret
cmp
push
sub
add
sbb
jno
xlat
inc
inc
pop
call
je
sti
dec
xchg
sbb
dec
call
cmp
dec
pusha
mov
imul
xchg
pop
rcr
lods
jns
out
sub
mov
je
test
mov
push
dec
test
mov
push
cmp
xchg
aam
mov
imul
sbb
xor
movs
mov
dec
pop
std
xchg
outs
in
jp
adc
(bad)
sub
push
call
adc
or
push
lock
dec
adc
test
mov
fstp
xchg
bound
icebp
arpl
dec
xchg
push
inc
loopne
pushf
ds
mov
es
loopne
mov
or
fimul
jmp
mov
or
push
xor
mov
cmps
or
push
adc
and
xchg
inc
sub
xchg
jmp
or
dec
and
sbb
fsubr
and
mov
inc
lods
neg
dec
int
loop
mov
adc
fst
xor
xchg
sbb
mov
retf
mov
pop
out
ret
mov
cmc
adc
mov
and
leave
ds
mov
js
jmp
pusha
jne
add
jge
mov
push
xchg
sub
or
push
mov
adc
es
daa
(bad)
inc
xor
popa
setg
aam
cmp
dec
and
push
scas
loopne
daa
mov
sahf
mov
add
inc
mov
cmp
mov
mov
mov
cli
jge
push
icebp
jbe
mov
adc
nop
cdq
adc
push
xchg
mov
mov
call
out
dec
mov
add
jbe
push
and
cmp
cwde
leave
inc
std
xchg
inc
test
fwait
or
imul
fwait
lea
inc
rol
hlt
cmp
xchg
or
(bad)
test
or
out
add
push
popa
xchg
stos
and
add
mov
fistp
test
mov
fwait
push
repnz
pushf
(bad)
cmp
mov
pop
adc
jecxz
retf
(bad)
mov
mov
jge
pushf
repz
in
call
pop
sub
shr
sub
inc
or
imul
sbb
mov
fwait
dec
dec
sbb
mov
fwait
mov
mov
movs
cmp
jmp
push
outs
das
inc
dec
js
dec
and
pop
or
retf
adc
stc
xor
xchg
adc
cdq
push
cmp
sub
scas
jp
xchg
pop
push
mov
cmp
adc
mov
cmp
push
das
pop
fadd
arpl
call
lea
movs
pop
loop
test
fmul
push
cs
push
imul
repz
push
mov
sahf
ins
or
xchg
pusha
adc
xlat
mov
movs
push
push
mov
jg
or
pop
scas
shl
jne
push
jmp
push
adc
loope
scas
out
dec
mov
repnz
jnp
xor
mov
sbb
into
pop
fst
inc
ss
cmp
outs
fstp
shr
xor
sub
and
jne
aaa
pusha
hlt
mul
jge
test
cmp
adc
add
outs
mov
jb
es
inc
or
cmp
mov
or
sub
pop
cmp
daa
add
mul
adc
inc
sub
push
mov
xchg
push
popf
addr16
(bad)
pop
lods
das
or
clc
adc
imul
adc
test
out
adc
sti
and
sub
popa
cli
fwait
jl
mov
xor
cmps
jo
test
inc
xchg
add
fnstenv
cmp
into
cmp
mov
bound
adc
xor
test
enter
mov
in
jle
dec
lds
fwait
cwde
mov
nop
and
pushf
sub
sub
jle
sti
add
retf
push
inc
add
cmps
inc
jp
icebp
jno
or
and
ins
and
push
mov
sub
loopne
call
pop
fisub
and
cmc
in
jl
addr16
jns
mov
xchg
lds
dec
fidivr
movs
sub
jbe
in
or
push
mov
sahf
and
xchg
inc
daa
mov
mov
aas
aas
scas
loop
inc
and
ss
mov
(bad)
mov
hlt
mov
test
dec
jl
pop
mov
push
std
into
push
cmp
push
mov
popa
adc
jno
xor
adc
jnp
push
mov
and
xlat
ds
adc
and
popa
loop
mov
pushf
push
mov
sar
xchg
mov
aas
xlat
push
mov
scas
test
shl
pop
movs
and
xor
test
jno
retf
dec
fisubr
iret
push
sbb
and
pop
ds
xor
adc
cwde
mov
adc
jp
xor
loop
shl
push
pop
and
mov
pop
push
outs
xchg
push
cmp
cmp
sub
pop
or
daa
mov
xor
movs
out
mov
adc
inc
and
cwde
or
push
ins
sbb
dec
pop
lods
rcl
fwait
add
cs
scas
mov
mul
leave
pop
rcr
pop
xchg
push
cs
cwde
stos
sbb
mul
sbb
rcr
data16
iret
mov
popf
and
add
rcr
bound
cmp
cmp
stos
mov
or
mov
xchg
mov
stos
pop
mov
jae
push
pop
mov
push
or
leave
test
rcr
cmp
inc
xchg
mov
and
mov
cwde
fiadd
add
cwde
jne
mov
popf
push
nop
and
add
xor
xchg
ss
and
and
in
inc
enter
xchg
xchg
repz
push
retf
jns
add
cdq
sbb
sub
push
movs
mov
sbb
sbb
pop
ins
jns
lahf
lahf
hlt
sar
es
sbb
push
int3
stos
outs
inc
mov
mov
fsub
(bad)
ret
pop
jecxz
sub
mov
xor
dec
outs
and
or
ds
xchg
xchg
xchg
mov
fistp
popa
xchg
dec
ins
add
mov
sub
popa
jo
mov
adc
mov
mov
imul
push
popf
push
xchg
push
jne
mov
mov
sub
push
fist
sti
pusha
xor
int
jae
jg
pop
xchg
xchg
aad
out
cmp
xchg
fdivr
ds
movs
adc
jle
mov
sbb
and
ins
not
fldcw
cmp
and
loopne
sub
sub
sbb
sbb
popa
test
and
pop
cmp
sbb
xor
mov
fst
ret
or
shr
inc
push
retf
push
mov
adc
sar
cs
rcr
xchg
or
pop
retf
or
mov
adc
bound
xor
mov
mov
pop
sahf
movs
sub
es
jne
cmp
jge
mov
pop
pop
rol
clc
outs
ret
addr16
jb
je
(bad)
cs
sti
in
push
mov
(bad)
mov
push
push
(bad)
pusha
shl
in
(bad)
stos
dec
jle
xchg
cmp
ss
sbb
cwde
dec
pop
sub
je
and
ret
inc
xchg
jmp
test
ins
sbb
ret
aam
pop
mov
dec
out
sub
mov
xchg
mov
fs
cld
and
pop
jmp
inc
lds
in
pop
jne
(bad)
mov
(bad)
cwde
ss
sub
mov
jne
push
sbb
mov
lahf
adc
or
out
ds
adc
loopne
ret
mov
cmc
push
add
xchg
inc
lods
cmps
fnstcw
push
mov
push
ror
sbb
mov
loope
jmp
ret
jecxz
fwait
mov
sbb
mov
pop
popf
repz
sti
ja
fcom
mov
push
add
sub
test
sbb
add
rcl
mov
test
fsubr
push
dec
inc
ror
xor
xor
stos
in
jmp
shl
xor
ret
xchg
es
cli
aas
out
lock
cmp
cmp
jae
fidiv
xor
sbb
sub
ret
sbb
adc
jl
lahf
(bad)
nop
push
mov
fidiv
xchg
mov
nop
sub
push
mov
cmps
rol
pop
test
ret
daa
das
in
and
jb
(bad)
push
out
fisubr
push
inc
clc
ss
pop
add
pop
dec
and
xor
sub
xor
inc
or
mov
inc
add
test
std
add
push
sub
xor
xlat
xor
loope
mov
mov
fistp
mov
out
iret
and
test
rcr
jnp
dec
inc
mov
and
or
ja
and
stos
jmp
inc
and
sar
add
or
fdiv
push
popf
jbe
or
xchg
nop
iret
ins
repz
pop
test
outs
sub
sbb
pop
test
cli
loopne
xor
mov
push
pop
push
mov
retf
inc
fsubr
pop
aas
jmp
aam
push
cmp
xchg
xchg
add
sub
adc
xchg
dec
jns
fsub
iret
and
ins
and
daa
mov
test
arpl
xchg
push
outs
xor
and
scas
cs
loopne
jecxz
pushf
je
cmps
fcmovnb
cmp
fistp
push
jle
and
call
adc
sbb
mov
sub
xor
jge
mov
cmps
push
push
repnz
xchg
in
xchg
add
push
sbb
sub
xchg
sub
pop
jnp
adc
out
addr16
xlat
jmp
dec
call
cmp
mov
mov
xor
xchg
pop
add
in
and
xor
adc
sar
mov
mov
pop
div
push
xor
xchg
icebp
imul
pusha
call
ss
mov
(bad)
aas
lods
dec
and
out
cmp
xchg
daa
scas
and
cmps
loopne
icebp
clc
pop
cmp
pop
ins
and
test
jmp
or
rcr
push
sbb
pop
mov
sub
mov
push
nop
xchg
xchg
mov
or
fdivr
sub
and
push
sbb
cmp
push
rcl
mov
cs
lea
stos
fcomp
push
movs
push
xor
lods
js
in
jl
mov
shr
cwde
ins
ins
lds
pusha
stos
sbb
mov
pop
retf
inc
xor
sbb
push
add
lods
test
xchg
fs
clc
or
ins
or
ss
lahf
ins
pusha
mov
adc
aaa
push
(bad)
mov
push
push
in
mov
jle
jmp
(bad)
movs
dec
inc
jle
imul
cdq
(bad)
cwde
pop
mov
or
(bad)
or
cmps
out
outs
mov
push
inc
adc
lea
aam
xor
dec
and
test
mov
mov
sub
popf
(bad)
adc
push
jg
pop
mov
or
hlt
lahf
jno
out
or
lea
add
adc
add
dec
xor
sar
jae
inc
sbb
cmps
mov
or
pop
retf
pop
cmp
shl
mov
mov
push
xor
jecxz
xchg
push
adc
scas
repz
sar
adc
xor
push
dec
fisubr
xor
add
xor
lods
icebp
inc
imul
and
loope
adc
mov
inc
leave
push
(bad)
push
nop
fist
sbb
mov
push
push
movs
or
int3
dec
jne
dec
lock
mov
xor
cmp
lahf
push
push
mov
pop
retf
mov
jno
inc
scas
cmc
dec
movs
stos
mov
dec
push
xor
(bad)
cwde
cld
push
jg
repnz
lahf
fwait
push
imul
push
xor
clc
cs
jmp
jecxz
pop
adc
add
fsincos
rol
js
adc
sbb
movs
fs
cli
div
mov
cmp
jne
xor
add
xor
scas
out
idiv
popf
movs
inc
push
mov
mov
fild
sahf
cs
ins
or
(bad)
and
rcr
icebp
mov
ret
lods
neg
outs
nop
jb
xchg
inc
push
dec
rol
add
xor
jge
add
call
jle
cmp
xchg
mov
mov
or
ds
and
mov
imul
sar
xchg
aaa
cwde
cmp
cmc
(bad)
leave
adc
push
and
push
cmp
int
out
ins
push
push
shl
pop
stos
jns
ss
in
aam
lods
shr
cmps
in
pop
fcom
arpl
fldenv
add
cmp
call
js
dec
inc
cmp
aam
mov
pop
stos
inc
dec
mov
into
cmp
pop
cmps
cmp
rcl
xlat
ret
xchg
cld
add
fwait
movs
ins
adc
fild
push
mov
in
xchg
mov
out
mov
pop
and
cld
jno
pop
cld
ret
div
aad
mov
sub
sbb
les
inc
daa
xor
daa
mov
retf
or
add
mov
jb
pusha
lahf
mov
jg
add
cmc
icebp
out
in
in
add
clc
repnz
push
add
out
popa
cld
fcmovnbe
div
ins
jns
fld
cmp
cdq
jb
and
mov
fld
mov
es
out
mov
into
scas
aam
sub
inc
inc
cmp
(bad)
frstor
sub
std
jbe
cmp
in
inc
sahf
call
out
sub
push
ja
je
out
pop
shr
adc
outs
movs
jb
ins
scas
dec
test
and
shl
mov
sahf
int
sbb
cmc
fs
sub
push
das
hlt
js
jle
(bad)
imul
repz
cmp
jmp
enter
mov
xchg
jp
pop
aas
lahf
xlat
and
pop
lods
sar
std
cmps
and
push
stc
and
cmp
and
jp
sub
addr16
dec
std
jmp
adc
push
cmp
jb
fst
dec
inc
xchg
adc
xlat
repz
test
push
add
xchg
in
xchg
aas
jmp
lods
or
cmps
lods
inc
jne
imul
xchg
not
jbe
inc
fcomp
out
scas
in
test
pop
ins
xor
dec
mov
sbb
jae
test
call
mov
shl
mov
stos
or
in
ins
iret
mov
inc
sub
add
fist
or
stos
inc
inc
and
jmp
lahf
sub
pop
scas
push
cdq
sub
ret
iret
xchg
adc
add
xchg
hlt
cwde
xchg
pop
mov
inc
mov
and
jl
inc
in
sub
test
in
sub
add
cmp
push
cs
imul
ret
push
pop
cmps
jmp
jecxz
adc
xlat
call
imul
jno
jl
pop
nop
arpl
daa
cld
jne
mov
push
rcl
fwait
out
das
sub
cs
mov
ret
sar
cdq
mov
dec
aas
stc
test
xor
ins
pusha
jp
or
ins
sub
xchg
ins
retf
or
(bad)
jns
xor
sub
cwde
dec
fdiv
pop
or
lods
and
movs
sub
enter
fadd
pop
mov
inc
fcomp
dec
lock
sub
bound
push
mov
cmps
pop
nop
cmps
dec
aas
xchg
in
(bad)
clc
mov
inc
ss
fwait
push
xchg
ins
dec
test
test
push
in
sbb
popa
pusha
das
mov
mov
mov
stos
push
or
jno
and
popa
ins
xchg
cdq
fisttp
bound
adc
fstp
mov
jns
sub
test
mov
cmp
jns
out
neg
into
dec
ret
or
jmp
mov
jae
imul
cmps
jae
and
mov
cmp
fisubr
or
loop
stc
in
out
fwait
into
nop
mov
inc
aas
pusha
out
(bad)
adc
jbe
mov
or
imul
fld
sub
test
(bad)
fmul
movs
cdq
add
loop
out
ficomp
test
xchg
hlt
xor
jbe
lods
in
bound
inc
stos
and
dec
cmp
nop
inc
pop
jno
cmp
mov
retf
call
rcr
data16
mov
aaa
mov
mov
mov
mov
mov
pop
lahf
(bad)
(bad)
sti
inc
pop
loop
aam
and
add
das
loope
sti
in
(bad)
xchg
lock
out
stos
mov
lahf
test
aam
sub
cmp
add
or
pop
shl
mov
pop
neg
fiadd
cwde
js
xchg
cli
test
dec
adc
lods
sbb
adc
and
retf
jp
gs
inc
adc
mov
(bad)
pop
das
aas
jns
mov
jbe
mov
movs
xchg
sbb
cmc
dec
jp
and
mov
dec
test
cwde
repz
jno
xchg
outs
adc
jnp
add
sti
mov
in
pop
mov
rcl
shr
jp
adc
aad
imul
nop
lods
arpl
jl
loopne
mov
idiv
add
pusha
retf
pop
test
stos
in
mov
cmp
add
jb
ror
xlat
mov
mov
test
test
mov
cmc
enter
test
scas
sub
sbb
jne
or
dec
push
or
sub
cmc
or
pusha
jne
xchg
outs
jne
icebp
xor
das
or
mov
xchg
in
adc
or
push
bound
pop
scas
stc
sub
(bad)
loopne
popa
(bad)
sbb
retf
xchg
push
outs
lea
or
in
or
cld
mov
pop
rcr
int3
pop
sub
call
push
into
push
sub
dec
fdiv
adc
inc
into
sti
in
(bad)
mov
lds
call
dec
add
cdq
lods
loope
and
or
jg
iret
es
pusha
fsub
adc
sahf
in
xchg
or
xor
icebp
inc
mov
mov
cmp
mov
inc
rcl
jle
add
xchg
(bad)
cmp
int
inc
in
mov
mov
rcl
pop
jnp
(bad)
sub
call
outs
jg
popf
mov
lea
xor
movs
fwait
mov
mov
push
in
mov
dec
test
sti
inc
shl
rcr
jg
and
jb
inc
aas
in
clc
shrd
retf
adc
cmps
mov
sti
aad
iret
cmp
data16
add
push
int3
mov
xor
stc
cmp
imul
aas
push
mov
sub
scas
add
xor
dec
shr
add
(bad)
jg
ins
call
and
mov
mov
repnz
pop
xor
fist
xchg
xor
ins
fld
jmp
inc
and
add
cmp
push
jmp
mov
clc
pop
cmp
das
imul
lea
out
add
sahf
xchg
(bad)
loop
and
cdq
repz
inc
add
adc
cmp
pop
xchg
sbb
cli
retf
pop
cdq
mul
ja
sub
repnz
(bad)
adc
test
ficomp
xchg
rol
sbb
add
pop
xchg
(bad)
cwde
xor
sahf
or
adc
ret
movups
sbb
push
cdq
fcmovnb
xchg
in
outs
ss
scas
add
imul
and
movs
adc
jg
fadd
mov
pop
jle
sahf
sub
jo
fdivr
fsub
adc
inc
movs
lea
out
shl
jp
mov
cmp
call
and
sbb
or
xchg
fdivrp
xchg
neg
sbb
mov
push
retf
mov
rcr
push
fs
mov
or
push
gs
fbld
mov
sbb
sub
sub
mov
(bad)
mov
in
adc
sahf
pusha
idiv
jl
inc
mov
adc
fs
leave
outs
repnz
out
into
adc
sahf
inc
dec
xchg
dec
daa
push
add
imul
repnz
stc
(bad)
gs
push
push
push
sbb
(bad)
pusha
pusha
add
and
or
std
cmp
fisttp
jns
jb
push
in
xchg
mov
or
ror
inc
mov
jecxz
inc
push
jecxz
mov
sub
call
ins
xlat
loopne
xor
adc
pandn
iret
retf
loopne
loope
jecxz
(bad)
xchg
dec
mov
cmps
push
add
mov
test
or
bound
mov
dec
mov
not
stc
fbstp
xor
cmp
push
popf
cdq
xchg
sbb
adc
jmp
loop
mov
mov
pop
mov
mov
fadd
jmp
inc
or
fsub
(bad)
aad
pop
adc
imul
xchg
push
mov
dec
xchg
into
inc
xchg
jmp
and
test
call
xchg
push
jmp
movnti
adc
(bad)
sub
scas
mov
js
sar
mov
sbb
jno
jmp
neg
out
nop
or
xchg
jl
fadd
into
(bad)
popf
div
addr16
movs
iret
jo
xchg
dec
dec
std
dec
outs
loop
loop
push
mov
fmulp
imul
mov
into
dec
out
sbb
add
and
popf
rcl
xor
movs
xchg
stos
pop
bnd
popf
adc
lods
or
mov
cmp
mov
xchg
or
cmps
sar
int
(bad)
pop
lods
jp
jecxz
jmp
out
cmp
sub
stc
mov
lea
out
lds
inc
sub
xchg
or
add
pop
cdq
push
push
fldlg2
adc
test
cld
jae
and
in
(bad)
(bad)
xchg
pop
push
ds
lods
aad
mov
mov
dec
test
sbb
sub
out
xchg
out
sahf
push
in
dec
out
(bad)
std
xor
out
sbb
jne
std
lock
push
xchg
jae
xchg
mov
call
jmp
dec
jno
push
mov
clc
fwait
push
cdq
out
or
lock
jo
lahf
xor
push
hlt
push
inc
jg
mov
ja
inc
scas
and
add
or
jl
popf
mov
mov
mov
lock
and
icebp
call
dec
sbb
jmp
adc
sub
and
xchg
xchg
mov
mov
popf
mov
mov
lds
mov
retf
les
popf
aad
or
sahf
push
mov
daa
push
test
pop
pop
sbb
lea
leave
inc
pop
push
mov
inc
call
push
mov
cwde
xchg
jo
jbe
add
xchg
cmp
ja
pop
xor
push
push
pop
pop
cmp
adc
in
loop
repnz
fstp
(bad)
pop
(bad)
inc
into
dec
or
(bad)
jecxz
fnsave
mov
pop
push
mov
cmc
xor
xor
aaa
aam
dec
sub
adc
(bad)
xor
ret
dec
sti
popf
test
pop
repnz
push
ret
add
sub
cmps
aam
dec
inc
jmp
jp
push
push
outs
inc
sbb
(bad)
idiv
arpl
jne
cmps
jae
and
push
iret
xchg
jl
call
mov
inc
fbstp
add
and
jbe
aam
xlat
mov
cmp
ins
retf
pop
adc
(bad)
push
popf
rcr
mov
lea
out
jae
pop
hlt
inc
fnstsw
push
xchg
lahf
push
push
clc
leave
or
loop
outs
xor
mov
xchg
cli
leave
xor
fld
es
mov
xor
cli
xor
enter
push
jmp
rol
push
in
pop
xchg
test
dec
das
out
push
int3
jle
inc
push
es
fbld
pop
sub
in
out
xor
push
mov
rcl
add
mov
inc
mov
sbb
push
lahf
fisttp
mov
jp
pop
push
push
mov
xor
repnz
add
pop
jbe
sahf
pop
pop
pop
pop
jo
imul
xor
sar
sti
retf
jae
mov
lahf
hlt
data16
repz
pop
cmc
adc
ins
std
lods
cmp
scas
enter
jmp
aaa
rcr
pop
sub
xor
jle
dec
je
mov
hlt
jmp
add
sbb
sub
cmps
cmp
(bad)
inc
lods
mov
cmp
xchg
in
or
ins
pop
push
repz
sub
sub
nop
lods
dec
adc
or
idiv
push
mov
ins
cmp
sbb
dec
inc
add
jl
dec
sbb
jl
mov
ror
call
push
xchg
std
rcl
rcr
(bad)
push
(bad)
call
iret
(bad)
bound
popa
dec
mov
aad
mov
xchg
sub
rcl
aaa
mov
out
adc
rcr
and
cmp
adc
pop
sub
add
(bad)
push
or
movs
ss
xchg
bound
cmp
leave
xlat
std
mov
sbb
mov
inc
xchg
out
mov
sar
sub
xchg
mov
mov
arpl
push
dec
pop
lods
test
clc
test
js
std
xlat
daa
arpl
in
retf
dec
fidiv
(bad)
inc
scas
cmp
sbb
arpl
(bad)
xchg
(bad)
lea
mov
mov
es
jbe
jns
mov
mov
mov
popa
mov
stos
lds
ja
push
lea
xor
cmps
mov
push
xor
fucomp
push
add
das
jp
(bad)
xchg
push
in
or
dec
lods
inc
adc
shl
cmps
cmp
jb
pusha
cwde
test
and
out
leave
add
or
dec
pop
mov
dec
lahf
sahf
jp
lods
mov
sti
sbb
pop
sub
(bad)
pop
dec
jg
repz
mov
in
aas
into
add
mov
sub
shl
pop
popa
dec
outs
nop
iret
jnp
xchg
inc
imul
retf
iret
cmp
mov
pop
icebp
mov
cmp
(bad)
enter
scas
(bad)
aaa
int
sbb
cmp
sbb
leave
inc
pop
sub
push
retf
sub
xor
pop
sub
cmps
cmp
ja
jns
or
xlat
outs
test
xchg
movs
adc
call
enter
loop
fdiv
or
(bad)
arpl
inc
mov
inc
xor
retf
in
js
jo
sub
push
inc
sbb
or
xchg
sti
fcom
pop
retf
push
test
jbe
call
mov
jmp
adc
ins
fwait
mov
lea
scas
lock
inc
or
mov
jp
mov
ins
mov
push
adc
add
movs
loopne
ds
pushf
and
fdiv
inc
movs
retf
inc
in
out
stos
jno
mov
add
loope
sub
dec
inc
fs
mov
push
les
sub
aas
sub
pop
loop
loope
or
mov
push
neg
cmps
sbb
mov
in
dec
push
mov
sub
gs
sbb
(bad)
test
ds
es
je
inc
jnp
outs
pop
popf
sbb
and
in
dec
xchg
aam
mov
out
in
add
add
and
in
test
int
fwait
out
add
jo
mov
push
(bad)
call
mov
popf
sti
sub
mov
jno
jae
out
shl
mov
jmp
lods
sbb
jno
test
or
fild
es
add
mov
or
mov
shl
mov
and
cmp
scas
dec
out
movs
fidivr
fs
cmove
mov
mov
adc
lock
add
ret
fiadd
ja
dec
adc
fcom
cmc
dec
or
and
or
cwde
outs
sub
outs
iret
cmp
mov
sar
pop
sbb
dec
push
jne
xor
jp
dec
sbb
ins
add
add
lahf
sub
xor
test
add
adc
loope
jmp
push
or
sahf
xor
es
pop
push
adc
scas
add
leave
dec
repnz
dec
nop
test
cmp
inc
popf
push
mov
mov
clc
mov
js
fsub
xor
out
adc
mul
rcr
out
std
pop
repnz
div
repnz
xor
popa
add
jp
arpl
cmp
sub
and
adc
sub
dec
imul
or
sub
xor
cld
push
mov
into
jg
sub
js
cmp
xchg
inc
sbb
fwait
retf
mov
mov
sub
adc
mov
mov
jb
inc
(bad)
stc
test
mov
sub
cmp
popa
sbb
popa
adc
mov
retf
enter
or
jl
cli
call
adc
(bad)
and
jbe
dec
adc
inc
fucom
cmp
enter
or
cmp
and
test
sbb
jl
or
in
into
jmp
dec
adc
stc
xor
fisttp
mov
jmp
sbb
cs
pop
cmp
shl
dec
in
loopne
es
jmp
inc
pusha
mov
scas
mov
sub
movs
std
mov
fcmovbe
rol
jne
stc
dec
sub
dec
mov
jne
push
xor
xchg
sub
xor
cmps
sub
adc
ins
movs
sub
imul
sbb
adc
or
dec
dec
xlat
inc
push
clc
mov
push
pushf
aad
mov
xor
or
aam
ins
or
test
dec
es
mov
adc
sbb
mov
sti
loope
xor
push
inc
mov
popa
mov
stc
add
outs
fmul
mov
mov
mov
add
retf
dec
addr16
(bad)
data16
std
push
aaa
adc
out
gs
in
xor
imul
ret
mov
jecxz
jae
loope
xlat
ins
jge
addr16
stc
rol
in
cmp
adc
mov
or
cli
add
cs
mov
xlat
pop
ret
test
or
pop
test
rcl
into
jns
addr16
xchg
push
mov
in
or
nop
mov
add
sub
ja
mov
sahf
mul
hlt
(bad)
test
pushf
or
pop
push
push
and
fsub
stc
arpl
mov
stc
fs
mov
fbstp
js
mov
push
xchg
sub
and
xor
cld
cmp
movs
pop
icebp
inc
push
sub
cs
aas
stc
fist
mov
int3
bound
mov
outs
rcl
jecxz
ss
xor
dec
adc
loopne
adc
cmps
push
and
test
and
int
xor
add
aad
sub
sub
pop
jae
ss
jecxz
adc
bound
cwde
pop
adc
pop
sub
in
mov
push
sub
and
or
cld
or
fmul
sub
rcl
mov
dec
pusha
lds
mov
xchg
sbb
or
or
mov
mov
fwait
push
shl
sar
mov
sahf
aam
xlat
pusha
in
ds
movs
repnz
mov
jmp
lods
aam
mov
push
pop
in
push
(bad)
cld
loopne
and
mov
pushf
cwde
mov
mov
pop
int
sub
push
pushf
inc
retf
sub
imul
mov
jge
or
or
sahf
daa
leave
sbb
test
cmp
adc
dec
adc
mov
pop
icebp
sbb
scas
xlat
repnz
daa
push
ds
daa
fwait
das
mov
and
pushf
fcom
loope
popf
mov
les
scas
hlt
clc
fs
inc
lahf
push
out
inc
aam
dec
dec
xor
imul
jb
pop
test
and
pop
jno
sub
mov
xor
out
lock
icebp
shl
jnp
fsub
mov
ret
inc
ror
das
ret
fisubr
mov
test
mov
push
retf
lods
(bad)
and
jne
retf
iret
jge
inc
test
stc
xor
and
loope
inc
cmp
jnp
mov
push
rcl
arpl
fsubr
test
call
(bad)
std
shl
pop
cld
cmp
cmp
sub
cld
aam
mov
xor
fs
inc
dec
mov
sub
imul
fwait
dec
push
inc
aad
push
outs
scas
mul
sar
shl
sub
ret
cmovge
les
jmp
or
ret
lahf
nop
fstp
or
rcr
push
fisttp
sbb
or
and
movs
mov
loop
aam
bswap
lds
and
js
mov
mov
repz
xchg
ins
xchg
ds
and
mov
ficom
xchg
shl
xor
push
out
push
and
leave
or
mov
jecxz
sub
mov
(bad)
mov
mov
hlt
bound
loope
xchg
mov
xchg
loop
mov
mov
jg
outs
das
mov
mov
stc
(bad)
std
adc
aas
fs
add
cmp
or
rcl
or
sbb
and
and
jns
mov
repnz
push
xchg
cmp
push
mov
mov
xchg
mov
cmp
and
mov
test
call
(bad)
mov
jns
fsub
xor
inc
in
jp
or
pop
cmp
mov
repnz
scas
xor
sbb
sar
mov
cmp
fdivp
adc
or
sbb
push
sub
mov
(bad)
js
jle
movs
pop
sub
xchg
mov
(bad)
or
pushf
push
cs
aam
cmp
paddusb
jle
push
cdq
out
add
js
push
retf
pop
add
shl
pop
pop
sub
call
add
sbb
test
data16
shl
aad
jmp
xchg
cdq
test
cmps
fmulp
add
mov
push
jb
ret
nop
addr16
aad
mov
loope
rol
das
jmp
jnp
idiv
retf
ins
mov
adc
jbe
jno
call
clc
inc
inc
ficom
retf
pop
test
dec
jb
cmp
xor
inc
xchg
or
into
fwait
sahf
and
aam
or
aaa
enter
(bad)
outs
lods
jbe
cld
popf
ds
jns
clc
dec
add
push
xchg
inc
into
jg
aaa
lds
and
pusha
ss
xchg
xchg
cdq
les
pop
pop
sub
jge
dec
xor
push
or
cmps
cmp
push
out
movs
call
mov
add
sahf
ret
ficomp
int
and
adc
xlat
pop
pop
pushf
call
xchg
movs
fcomp
ret
ret
pop
mov
or
xlat
aaa
cmps
adc
pop
sub
sti
aas
mov
push
jo
lods
test
bound
adc
gs
jle
inc
out
sbb
loop
xor
ds
cmp
mov
mov
xor
jl
add
and
push
inc
nop
jecxz
gs
(bad)
es
xor
sbb
xor
add
cmp
stos
xchg
jmp
mov
int
xlat
adc
pop
mov
ds
ret
icebp
mov
mul
jbe
sbb
jne
adc
call
lds
push
dec
imul
push
out
lods
outs
mov
stos
mov
(bad)
fisub
jb
xchg
fidiv
inc
ins
out
push
scas
mov
lds
adc
arpl
fwait
jb
mov
gs
pop
adc
dec
xchg
test
sub
lods
ficomp
xchg
retf
dec
jmp
addr16
jecxz
add
jle
neg
adc
das
je
cdq
sub
add
test
cmps
inc
pusha
aaa
outs
push
or
dec
push
jmp
cmp
xor
dec
jge
and
out
cmps
gs
inc
scas
adc
repnz
inc
add
jne
dec
sbb
pop
iret
aas
pop
fldenv
rol
add
xor
aam
add
pop
loopne
mov
adc
pop
and
jp
push
or
movs
out
jl
call
(bad)
pop
lds
xchg
jmp
mov
cs
(bad)
clc
xor
mov
dec
or
push
popa
push
fstp
rcr
cmp
loope
movs
imul
inc
push
hlt
or
xchg
adc
outs
popa
adc
inc
pmulhw
daa
clc
cmps
test
rol
psubw
pop
repz
lods
mov
jno
and
je
cmp
mov
jmp
call
enter
arpl
lea
cdq
jb
ss
shl
ds
adc
jnp
pop
fsin
inc
fisttp
cmp
in
or
repz
rcl
sub
mov
es
jmp
in
add
enter
idiv
in
pushf
cmps
xchg
rcr
icebp
or
fstp
cs
mov
push
imul
inc
adc
sar
pop
mov
mov
aad
ficomp
cmc
imul
ss
(bad)
das
(bad)
int
pop
dec
and
jae
fs
sub
jg
mov
out
or
push
dec
shl
jecxz
mov
out
movs
jp
jbe
cld
push
repnz
pop
lods
popa
int3
inc
adc
xchg
(bad)
sbb
mov
shr
or
int
inc
pop
retf
fs
sub
xor
mov
fnsave
inc
rol
fidivr
or
in
jmp
mov
xlat
mov
cld
arpl
into
jnp
ja
add
push
out
xor
repz
stc
xor
(bad)
jnp
xchg
jae
fld
(bad)
cwde
loope
scas
aad
cmps
imul
inc
dec
ins
pop
pop
loop
push
adc
int
xor
out
jmp
add
mov
shl
sbb
push
cld
inc
iret
jns
xor
cmp
repz
(bad)
pop
cld
imul
xchg
jb
xchg
xchg
mov
fsub
in
jp
jl
sbb
rcl
xchg
mov
or
pop
cmp
iret
call
and
pop
push
push
test
imul
xor
mov
clc
test
cdq
test
mov
pop
into
in
stos
adc
pop
inc
inc
int
call
test
or
loope
jl
fdivr
mov
adc
jmp
hlt
cmp
jge
xor
mov
cmps
cmp
mov
mov
jmp
or
sti
sub
jno
xchg
(bad)
addr16
mov
mov
sti
pop
fmulp
in
lods
push
xchg
stos
shr
pop
outs
lods
push
ss
or
and
pop
scas
add
inc
dec
xchg
dec
fcom
leave
fsubr
ret
jbe
outs
sbb
imul
scas
idiv
loope
cmp
out
fcom
inc
fstp
jno
das
ret
cmp
and
repnz
xor
ret
and
mov
cmp
into
into
int
jl
add
jecxz
pop
xchg
xor
and
adc
imul
or
sti
push
or
(bad)
push
pop
ret
ins
shl
mov
aad
xor
pop
(bad)
adc
out
adc
mov
inc
in
lock
(bad)
adc
and
mov
movs
dec
dec
iret
adc
not
stc
xor
std
mov
icebp
xor
and
(bad)
lock
rol
loop
mov
or
fs
ss
pop
scas
push
inc
aam
push
push
and
out
mov
or
pop
inc
js
cmps
jge
cmc
nop
add
mov
ja
mov
and
iret
scas
mov
test
loopne
pop
or
and
js
cmp
xchg
mov
mul
dec
lods
sbb
aad
retf
mov
call
mov
sub
xlat
pop
pop
rcl
sub
not
stos
inc
inc
clc
pop
mov
push
dec
(bad)
repnz
jbe
add
xchg
dec
push
jo
ds
das
test
and
retf
fcmovnu
js
and
mov
test
sbb
and
dec
into
adc
mov
into
ja
mov
or
xlat
test
fstp
jp
js
mov
cmps
jmp
mov
mov
mov
ret
loope
je
bnd
mov
scas
int3
rol
xchg
in
je
fsub
loopne
jo
ss
mov
push
sbb
push
xchg
mov
push
dec
and
pop
mov
fisub
test
xchg
pop
ins
mov
pushf
and
scas
das
cld
pop
ret
test
mov
ja
int3
and
test
mov
sub
xchg
mov
fistp
lahf
mov
sub
in
scas
mov
imul
add
xchg
mov
pop
pop
dec
lahf
mov
mov
imul
xchg
jecxz
aad
enter
xchg
popf
inc
sub
dec
sbb
outs
into
js
sti
iret
das
xchg
nop
mov
dec
pop
ja
add
push
pop
lock
xchg
pushf
add
push
in
fild
adc
mov
shl
call
mov
fidivr
xchg
and
xchg
mov
mov
xor
mov
push
or
fmul
xchg
int
xchg
pop
test
test
mov
jmp
dec
jg
dec
xor
sti
idiv
add
lock
push
stos
push
leave
lahf
or
aaa
(bad)
mov
dec
ds
mov
imul
add
mov
icebp
push
adc
call
into
out
push
clc
out
push
mov
lods
nop
fld
sti
and
dec
mov
add
xchg
enter
pop
jg
pop
mov
or
popf
shl
cmp
fst
dec
movs
jg
sbb
and
pop
pop
sbb
lea
ja
mov
xchg
mov
xchg
jns
or
mov
mov
out
pop
jb
mov
iret
mov
or
imul
pop
out
imul
call
pop
fmul
jge
xor
pop
xor
mov
push
nop
shl
fucomip
fwait
jno
or
or
jecxz
lods
inc
ins
addr16
inc
mov
mov
std
ret
pop
inc
dec
mov
div
adc
(bad)
cmp
aad
fs
lods
in
xor
in
jb
(bad)
jmp
mov
pushf
imul
mov
out
and
push
and
(bad)
std
push
cs
psllq
std
sbb
xchg
(bad)
xchg
shl
sbb
jg
dec
icebp
jmp
inc
or
dec
call
pusha
aam
sti
emms
mov
cdq
int3
ret
mov
outs
inc
pop
sub
stos
jge
les
loop
xchg
or
push
loopne
push
sbb
in
movs
or
add
dec
ja
adc
jmp
xchg
popa
arpl
jge
push
jle
clc
andps
adc
jae
cld
jo
add
mov
jns
add
dec
dec
push
mov
adc
pop
je
fcom
push
imul
xor
data16
lock
cmp
add
int
cs
pop
popf
aaa
in
repnz
dec
retf
imul
adc
fs
cmp
pop
add
cli
mov
dec
sbb
outs
jl
mov
sbb
and
ss
push
lods
lock
aad
dec
add
mov
adc
js
cmp
adc
les
push
push
nop
das
int3
imul
es
mov
ins
(bad)
ja
pop
cs
mov
loop
sub
in
nop
int3
popf
lods
sub
fild
push
movs
add
test
repz
push
ds
or
push
jnp
push
fidivr
ins
mov
inc
cmp
pushf
cwde
stos
and
cmps
or
mov
inc
adc
fsubr
fiadd
shr
xchg
test
cmp
(bad)
movntps
xchg
mov
sub
xor
lea
sub
mov
sbb
push
mov
mov
in
imul
fld
push
fsub
push
inc
sbb
pop
or
xor
cli
jb
ja
cmp
jbe
mov
retf
jg
ja
(bad)
pop
or
ja
movs
mov
inc
outs
add
iret
mov
ins
imul
movs
pop
cs
sbb
jbe
pusha
pushf
test
int
cmps
sub
into
clc
mov
add
mov
pop
xor
xchg
cmp
addr16
leave
xor
mov
cwde
sbb
ins
sub
jae
jbe
mov
push
push
(bad)
adc
rol
lss
daa
das
push
xchg
pop
in
cmp
xchg
mov
mov
or
loopne
inc
xchg
out
jge
and
cmp
call
retf
sub
int3
or
xchg
scas
shl
cmps
inc
adc
push
cmp
push
cmp
test
push
lea
jns
ss
pop
(bad)
sti
nop
push
push
cmps
mov
cdq
scas
sar
bound
push
sti
out
mov
test
push
jg
sbb
and
mov
mov
mov
shl
int3
sar
repz
mov
jmp
inc
and
mov
aad
pop
lahf
push
xchg
adc
out
imul
mov
and
jmp
jns
nop
cwde
int
leave
outs
inc
dec
ret
sbb
xchg
fwait
rcr
dec
sub
imul
or
mov
push
call
sar
sbb
into
cmp
arpl
add
mov
jne
es
lock
retf
mov
test
lods
mov
pop
std
cs
xchg
push
add
mov
fmul
pop
fprem
push
lods
ja
sti
es
and
or
das
js
ja
adc
mov
mov
mov
data16
ret
call
pop
addr16
lods
inc
lods
cmp
(bad)
jp
mov
xlat
ret
(bad)
cmp
sbb
mov
inc
ja
inc
push
aad
xchg
aad
jb
add
retf
xchg
sbb
cmp
xchg
or
jl
stos
popf
dec
sar
sar
inc
dec
lock
inc
mov
ins
pop
xor
fistp
xor
(bad)
sbb
push
frstor
mov
mov
xchg
test
or
(bad)
push
jge
bnd
push
xchg
pushf
push
cwde
mov
mov
inc
mov
retf
inc
call
ror
ret
mov
and
not
pop
and
or
lahf
test
mov
pop
sub
add
mov
push
mov
cmps
xchg
cwde
inc
(bad)
mov
or
aam
push
inc
adc
push
test
sahf
mov
cld
cmp
mov
push
rcl
add
push
inc
cmc
jbe
fs
shl
adc
mov
mov
push
lahf
push
cs
cmp
pushf
es
test
adc
jnp
xor
cli
cmps
push
cwde
iret
xor
adc
lea
add
stc
ss
scas
jo
test
sub
or
cmp
ja
xchg
push
ss
out
fidiv
dec
mov
imul
int3
inc
cmp
inc
mov
push
imul
jo
cmp
iret
addr16
inc
sub
mov
xchg
mov
push
shr
sub
dec
gs
aaa
idiv
fidivr
pop
dec
jae
fs
bnd
cmc
sub
mov
cmps
rcl
xor
mov
pop
xchg
ror
sahf
dec
jmp
xchg
pop
fild
push
data16
push
mov
jne
nop
cmp
(bad)
(bad)
movs
xchg
cli
fstp
dec
mov
nop
aas
inc
(bad)
cmp
out
or
movs
ret
inc
jae
sbb
dec
dec
jbe
cmc
movs
loopne
lock
mov
sbb
stos
jp
adc
in
mov
xchg
xchg
leave
dec
sub
mov
cmp
lods
cdq
ins
pop
inc
xor
inc
std
add
mov
in
mov
mov
and
push
in
outs
sub
aad
pop
jb
sbb
or
sub
sbb
or
cld
(bad)
retf
test
xor
adc
scas
out
movs
sbb
icebp
jecxz
fsubr
in
aas
push
cli
ret
out
jb
stc
cmp
inc
(bad)
aaa
sbb
(bad)
ins
out
jo
jle
imul
xchg
pop
aad
scas
adc
adc
add
outs
push
add
mov
sbb
lods
enter
test
ret
movs
repnz
cmps
push
(bad)
dec
(bad)
push
enter
and
imul
sbb
pop
stc
xchg
aam
loope
add
adc
pop
dec
and
std
adc
mov
pop
pop
xchg
push
sahf
pop
cwde
(bad)
ds
push
push
inc
cmp
jne
jnp
das
add
ret
mov
inc
imul
in
iret
jae
mov
jl
cwde
aad
mov
xchg
jle
mov
dec
or
xchg
cmc
ins
repz
xlat
(bad)
fst
mov
adc
mov
ins
and
inc
adc
pop
pop
hlt
sub
jmp
sbb
int
ja
pop
(bad)
sbb
mov
and
dec
test
inc
push
js
inc
das
dec
enter
pop
lahf
repnz
int
push
pop
pop
aaa
test
sub
sti
jnp
xor
(bad)
xacquire
xor
aam
push
lds
icebp
int3
sar
add
je
inc
sub
out
and
fcom
mov
test
xchg
add
pop
(bad)
xor
push
inc
and
call
ret
lds
jns
mov
jne
mov
lds
jae
sub
iret
imul
xor
mov
(bad)
mov
in
retf
pop
dec
sub
fisttp
nop
lea
inc
xchg
fisttp
pop
data16
mov
jno
pop
jge
fadd
aam
adc
pop
cmp
imul
sbb
pop
mov
in
pop
jmp
call
xor
outs
lds
or
or
gs
push
mov
xchg
adc
mov
cmc
shl
test
lahf
and
test
loope
test
shr
xor
xor
add
imul
inc
cmp
in
push
mov
dec
push
adc
ss
add
repz
je
jnp
and
pushw
push
das
arpl
lock
sub
shr
out
mov
mov
stc
or
add
or
in
imul
jle
xchg
je
aaa
jns
lds
iret
(bad)
mov
cmp
movs
inc
aam
mov
or
push
jno
js
adc
mov
lods
sbb
mov
or
pop
in
outs
inc
sbb
iret
mov
arpl
and
adc
loope
aaa
fwait
add
jns
push
xchg
cmc
ror
stc
push
out
call
xor
out
add
or
repnz
neg
gs
into
fnstcw
mov
icebp
sub
jecxz
cmps
xor
(bad)
cmp
aad
pop
cmp
daa
mov
ins
jnp
lahf
ret
movs
cmp
retf
xor
cwde
jmp
popf
mov
ins
push
pop
mov
(bad)
(bad)
test
(bad)
fdiv
hlt
popf
xlat
sti
jg
movs
xchg
push
pop
mov
ret
push
(bad)
sub
mov
cmps
das
push
mov
xchg
ins
cmp
stos
in
or
fnsave
call
les
pop
test
jb
cdq
mov
push
clc
pop
(bad)
(bad)
jae
jo
push
cmp
lds
outs
out
lock
inc
dec
dec
and
fdivr
pop
out
add
shl
xchg
inc
outs
inc
loope
mov
mov
inc
shr
jmp
(bad)
imul
pusha
int
call
sub
inc
mov
or
push
add
popf
in
mov
sti
mov
das
lds
mov
rcl
rcr
cmp
hlt
kaddb
test
arpl
fmul
adc
add
jecxz
dec
sub
mov
push
mov
test
cmp
test
mov
ds
imul
inc
xor
mov
fwait
cwde
cmp
inc
sbb
and
push
mov
icebp
js
mov
retf
pushf
or
jb
movs
mul
mov
sbb
gs
push
cmp
call
mov
mov
push
pop
das
daa
inc
inc
mov
ss
cs
sar
cs
outs
cdq
repz
sub
dec
jnp
mov
pop
dec
jecxz
cmp
adc
jb
dec
retf
cwde
push
(bad)
cmp
sub
js
mov
pop
adc
and
ins
inc
lea
jbe
int
mov
in
push
stc
out
enter
push
fimul
mul
or
ins
adc
les
xor
xchg
out
dec
xor
shl
ins
es
scas
push
mov
lea
loopne
and
aad
push
pop
xchg
push
stc
jns
sub
sbb
xchg
cmp
cmp
out
loope
addr16
mov
and
mov
(bad)
push
dec
mov
(bad)
mov
push
and
xchg
push
mov
add
outs
xor
cmp
xchg
add
push
retf
daa
push
pop
push
sub
mov
or
xchg
xchg
inc
adc
xchg
xchg
pop
pop
jg
movs
das
jmp
jmp
fnstsw
or
mul
sbb
movs
js
ja
jmp
or
or
fdivr
in
iret
in
sub
std
in
mov
repz
push
retf
or
stos
fld
out
mov
push
mov
outs
pop
push
outs
test
pop
sub
jnp
mov
mov
es
je
push
and
pop
mov
imul
jl
pop
lds
call
pop
xchg
js
std
addr16
arpl
sub
daa
adc
test
imul
inc
pop
cmp
cwde
fdivr
inc
call
test
push
int
addr16
mov
add
sahf
div
jge
(bad)
lock
bound
jmp
loope
std
test
xor
into
fnstcw
adc
or
sub
mov
xor
push
xchg
clc
pop
mov
(bad)
sub
inc
(bad)
icebp
sub
stos
je
fmul
nop
jg
mov
scas
call
and
jmp
cmp
add
mov
xor
nop
adc
addr16
push
mov
arpl
mov
mov
mov
call
push
dec
cmp
test
add
jle
adc
fimul
imul
rcr
fstp
sub
jp
or
hlt
inc
je
retf
cdq
out
pushf
inc
mov
mov
inc
sbb
xchg
mov
mov
fstp
cmp
lahf
loop
or
pop
cmps
add
rol
test
add
stos
mov
add
paddd
sub
sbb
imul
xchg
or
cmc
fnsave
cld
xor
ins
pop
mov
sub
inc
pop
mov
mov
lahf
in
push
mov
cld
(bad)
cwde
mov
mov
sbb
sbb
hlt
popf
idiv
imul
push
shr
sbb
int3
pop
push
push
fild
xchg
push
and
data16
sbb
fnstcw
dec
or
movs
jne
xor
fwait
(bad)
sbb
mov
inc
ds
jl
cmp
inc
jge
js
pop
gs
in
stos
mov
sbb
pop
xor
arpl
cs
stos
cmp
add
inc
out
xchg
les
xor
lds
add
(bad)
lds
(bad)
sbb
cld
or
pop
inc
mov
pop
adc
pop
jbe
stos
je
mov
call
mov
lds
jno
push
inc
ins
sub
aas
push
sbb
push
test
leave
cld
rcr
icebp
adc
out
lods
push
mov
inc
and
pop
aas
push
jp
xchg
jnp
adc
push
daa
arpl
xchg
popa
stos
pop
and
imul
aaa
sbb
out
sub
cmc
lea
cmp
dec
xlat
cmp
lods
jb
inc
push
sub
mov
repz
or
sbb
and
xor
adc
adc
pop
adc
ffreep
test
mov
sub
imul
(bad)
jp
xchg
ss
test
loop
jle
in
mov
outs
xor
jo
clc
and
sub
xchg
add
mov
arpl
pop
xchg
leave
js
mov
rcr
push
test
push
adc
ja
jle
xchg
dec
retf
inc
scas
cmps
les
cmps
inc
inc
lock
sub
cmp
mov
fnsave
pop
out
jae
inc
mov
call
outs
jbe
push
jne
and
lahf
xor
sbb
adc
movs
cdq
lahf
fldlg2
std
add
repz
inc
stos
adc
push
mov
scas
mov
pop
out
retf
mov
xlat
fcomp
jge
es
cli
cmps
ds
div
sub
sbb
jno
inc
cld
sbb
xor
(bad)
inc
scas
sub
dec
dec
add
std
fstp
or
jbe
(bad)
sub
setge
sub
cmp
mov
mov
in
ins
pop
jns
fisub
xchg
stos
jmp
jnp
cs
sbb
push
jmp
mov
(bad)
inc
sbb
xchg
and
jg
hlt
in
(bad)
mov
fdiv
pushf
fst
or
int3
pop
mov
retf
shl
fwait
push
push
sar
aas
jg
out
adc
jp
retf
push
mov
enter
call
xlat
cmp
pop
mov
ret
pop
xchg
mov
jbe
add
pop
cmc
movs
mov
jo
cmps
lock
mov
std
lahf
test
dec
ins
outs
ret
dec
jmp
mov
fcom
dec
test
clts
fistp
pop
mov
add
into
cmp
sub
movs
sbb
sub
sti
push
mov
push
sbb
adc
jno
mov
add
(bad)
pop
mov
adc
inc
jne
je
mov
inc
pop
or
add
push
rcr
xlat
jmp
(bad)
stc
jl
push
(bad)
ins
inc
(bad)
adc
inc
ja
jle
scas
or
movs
sbb
or
jmp
xchg
xchg
stos
emms
inc
adc
and
xchg
dec
ja
pop
pop
xchg
cmp
outs
repnz
pop
out
cmc
ja
adc
and
out
mov
arpl
pushf
test
pop
test
pop
dec
mov
dec
lock
or
inc
add
ss
xor
jg
push
icebp
iret
dec
push
(bad)
ret
xchg
daa
dec
loop
inc
xor
ds
repz
sbb
jge
cmc
mov
cmp
mov
test
add
inc
mov
in
mov
jecxz
fnstsw
mov
inc
jno
pusha
cmp
pop
(bad)
cli
es
push
js
int3
inc
and
bound
xchg
mov
test
dec
cld
mov
pop
push
sbb
mov
clc
inc
xlat
(bad)
cs
push
fadd
shl
push
les
push
pop
in
push
aam
mov
les
jge
mov
cmc
psubsw
into
mov
push
lea
fst
add
pop
xchg
jg
mov
xchg
fist
stos
iret
test
mov
or
mov
cmp
inc
xlat
dec
shl
jne
sbb
xor
jp
inc
push
cli
inc
pop
ins
xchg
(bad)
popf
fwait
into
mov
mov
mov
dec
fwait
jl
mov
jns
scas
loopne
cwde
push
add
xchg
into
daa
add
mov
mov
jne
test
adc
inc
lock
repnz
sar
not
fsub
test
mov
xlat
mov
popf
mov
cwde
je
test
repz
pop
jae
enter
sub
jp
cwde
cmps
or
xor
jne
add
mov
xchg
in
outs
jo
rcl
movs
push
call
add
add
dec
inc
sti
fldcw
das
test
pop
mov
adc
std
retf
add
sbb
call
mov
inc
test
movs
or
div
imul
fldenv
into
lods
sub
and
or
aaa
xor
sbb
jno
add
jecxz
xlat
cmp
mov
push
jl
mov
or
leave
addr16
mov
ins
daa
adc
movs
push
mov
mov
mov
gs
pop
sub
pop
(bad)
icebp
in
icebp
scas
into
cmovge
push
fisub
fnsave
push
xchg
lods
and
xor
test
ror
pop
mov
adc
sbb
push
scas
sub
and
jns
xor
fimul
ins
mov
push
das
aas
xchg
jae
sbb
out
scas
mov
xor
or
test
cmp
sbb
test
(bad)
data16
test
aaa
fidiv
cmps
pop
push
cmp
(bad)
sub
jmp
inc
lea
das
out
mov
not
pop
fwait
inc
dec
test
in
xor
mov
lods
inc
retf
je
loop
inc
cmps
adc
adc
sub
inc
pop
xchg
mov
mov
sbb
pusha
mov
jmp
push
sbb
pop
mov
std
mov
jne
xor
cmps
ret
xor
pop
cli
loopne
lods
lahf
cmps
imul
mov
mov
shl
ret
ss
(bad)
iret
jns
sar
ss
mov
lods
jns
push
and
movs
or
lahf
fsubr
call
je
bound
pop
outs
pop
or
stc
rcl
xor
xor
test
cmps
scas
loop
popa
call
(bad)
mov
push
data16
call
push
mov
in
inc
gs
and
pop
fnstcw
cld
out
push
out
or
jbe
sbb
ss
fdivr
cmp
mov
sbb
pop
or
mov
aas
lock
scas
ins
popf
and
int3
data16
xchg
pop
aam
outs
hlt
cld
or
dec
add
xlat
(bad)
fxch
mov
jns
cmps
arpl
(bad)
call
(bad)
push
(bad)
mov
jmp
out
lods
cld
mov
rcr
and
push
call
mov
popf
xchg
or
mov
ins
push
or
std
stos
out
hlt
push
hlt
in
aad
sbb
test
inc
pop
mov
jnp
out
nop
rol
aas
push
xchg
pop
pop
ss
cmp
dec
lods
movs
push
and
movs
xchg
out
or
jl
fcom
in
cmp
sbb
jle
je
call
or
dec
retf
inc
xlat
fwait
dec
xchg
sahf
(bad)
in
in
sub
ror
mov
neg
nop
add
dec
or
inc
and
jbe
in
daa
push
cld
dec
test
test
ins
pushf
cld
pop
adc
jl
mov
test
xor
xchg
jno
pop
push
sar
sub
inc
push
fiadd
test
xchg
das
int3
xchg
xchg
test
pop
stc
xchg
and
pop
inc
sbb
icebp
jmp
retf
sub
sbb
int3
pop
mov
and
movs
or
sub
ins
clc
mov
mov
fwait
and
mov
pop
popf
loop
fwait
int
xchg
lea
cmps
cmp
jle
js
lea
pusha
mov
adc
or
lahf
pusha
xchg
mov
inc
les
sub
les
test
jmp
sbb
(bad)
outs
sub
push
sti
or
test
adc
fsub
lds
out
dec
(bad)
(bad)
sub
sbb
jae
push
clc
add
xchg
mov
dec
popf
nop
push
retf
mov
mov
mov
jecxz
cmp
pop
mov
xor
ror
push
push
loop
test
push
cmp
dec
(bad)
inc
cmp
repz
pushf
sahf
stos
jmp
add
(bad)
popf
out
push
jmp
cwde
hlt
out
pop
loopne
sti
out
data16
adc
aaa
not
dec
adc
add
xchg
pop
mov
aad
sub
aad
push
lods
sub
cdq
sub
add
push
inc
das
push
out
outs
sbb
sub
adc
add
jmp
mov
push
lock
leave
in
repz
ja
jmp
sub
adc
cwde
push
test
inc
sub
sub
mov
cmp
retf
out
aaa
in
pop
jmp
call
cs
lods
(bad)
ret
sbb
call
(bad)
xor
jae
mov
mov
test
mov
xor
jge
in
ror
push
int3
mov
inc
adc
loop
mov
pop
mov
sbb
mov
(bad)
scas
pop
and
mov
inc
cmp
push
jbe
lea
jmp
xor
stos
in
cdq
jbe
(bad)
iret
popf
out
pushf
in
shl
mov
sub
sbb
cmp
hlt
mov
or
retf
and
cmp
rol
gs
adc
sub
adc
cs
mov
stc
test
std
jmp
int3
cmc
sub
or
pop
popa
cmc
stc
cmp
xor
mov
lahf
aas
out
or
pusha
cdq
stc
jl
inc
push
arpl
xor
adc
and
push
sbb
sub
push
lods
jle
cmp
jb
call
sar
pushf
pusha
lahf
and
inc
daa
fs
xlat
jo
pop
or
repz
iret
arpl
xchg
xor
sbb
mov
pop
in
and
jg
retf
in
shl
psrlw
pop
sti
popf
pop
rol
ins
xor
jmp
out
and
push
dec
and
in
adc
sub
fdiv
popa
das
mov
dec
into
dec
gs
jne
jmp
bound
jg
add
(bad)
lods
sub
aad
xchg
inc
aaa
mov
mov
loopne
scas
ins
sub
outs
mov
xchg
cmp
mov
jb
shl
or
test
xor
xchg
add
and
pop
push
aad
(bad)
movs
pop
call
sub
je
jbe
ret
adc
jmp
fwait
mov
xchg
sti
not
loope
inc
mov
jns
shl
mov
fldcw
adc
mov
xor
out
ret
push
and
push
jns
je
pop
stc
sbb
cmp
inc
inc
jbe
push
addr16
mov
fdiv
clc
loope
and
imul
gs
mov
call
test
aaa
sub
mov
in
push
rcr
in
dec
mov
fisttp
inc
repz
adc
xchg
pop
cmc
out
pop
fcomp
cmp
enter
mov
movsx
pusha
pop
mov
mov
stos
and
pop
and
cmp
adc
fs
movs
mov
inc
mov
jge
iret
ja
push
test
clflush
or
sub
addr16
or
(bad)
add
jle
test
push
sbb
ss
add
cmp
xor
mul
dec
out
out
clc
and
repz
fild
jae
(bad)
outs
add
mov
mov
jle
fidivr
cld
mov
mov
fidivr
je
add
inc
inc
pop
pusha
clc
mov
pop
dec
xchg
outs
rol
or
mov
jns
push
and
jl
pusha
call
jle
and
xor
pop
imul
rol
xchg
adc
out
fs
mov
(bad)
scas
out
pop
sub
mov
mov
sub
jnp
pop
stc
out
sahf
jge
in
xchg
cmps
cmp
add
cli
pop
lahf
fcmovne
neg
sub
out
sbb
shr
and
fmul
sahf
test
mov
sub
div
aad
inc
jo
daa
ss
jg
sbb
aaa
push
xlat
clc
pop
in
loope
cdq
and
je
ret
cmps
push
fsubr
push
mov
cmp
pop
pop
pop
pop
movs
test
js
xor
stc
pop
mov
js
push
aas
retf
fist
add
and
push
out
lods
pop
push
mov
mov
push
xlat
push
xchg
enter
and
imul
outs
xor
test
push
jmp
xchg
add
(bad)
daa
add
push
xchg
cmps
jg
pop
push
add
mov
out
ja
pop
adc
sbb
push
or
loop
leave
mov
xchg
(bad)
les
xor
jnp
jb
arpl
out
loope
ja
adc
sub
pop
adc
mov
sbb
push
out
pop
adc
xor
out
gs
cs
test
mov
int3
xor
ror
xor
mov
xchg
push
lea
call
or
scas
sbb
loopne
cmc
dec
mov
arpl
xor
xchg
dec
and
xchg
inc
scas
inc
adc
fidiv
xchg
outs
mov
js
and
dec
add
nop
cmp
push
inc
push
push
pop
dec
xor
pop
mov
jecxz
es
popa
xchg
jp
ja
lahf
inc
add
cli
retf
add
push
retf
cmp
sbb
stos
push
xchg
in
xchg
jns
es
or
pop
add
test
or
out
cdq
test
xor
add
pop
pop
xor
scas
xchg
cmp
shl
icebp
out
xor
or
mov
and
mov
pusha
xor
push
stos
mov
sub
test
cdq
cmp
scas
pushf
jmp
adc
and
ret
inc
stc
pop
mov
aam
mov
call
stos
push
add
cli
into
pop
cmp
jno
inc
xchg
cld
mov
pop
xor
dec
inc
cmp
xor
fstp
inc
or
push
xor
jmp
add
mov
fldenv
adc
or
or
fisubr
fucomi
pop
cmc
or
loop
mov
std
mov
add
fcmovu
push
in
fild
fbld
and
or
mov
pop
in
leave
ss
add
(bad)
add
rcl
and
xlat
fnstcw
sub
push
in
rol
inc
arpl
push
pop
fsubr
push
inc
movs
dec
lock
push
sbb
and
shr
xor
mov
mov
imul
iret
adc
test
or
cmps
cdq
sub
int3
loope
leave
or
retf
lods
inc
sub
push
not
jns
fst
jle
in
cmp
sbb
je
int3
jno
adc
and
push
mov
fadd
mov
and
push
cmps
cld
dec
push
sbb
inc
pop
sub
xchg
adc
jge
retf
mov
cmps
inc
push
bound
cmps
aaa
cmp
add
loope
lods
add
popf
lea
int3
mov
mov
lahf
ficom
sbb
push
sub
jmp
mov
or
sbb
or
rol
movs
ins
push
(bad)
sbb
push
jo
push
ja
push
into
and
leave
add
ret
aaa
scas
bound
addr16
ja
(bad)
cmc
popa
adc
or
pop
and
adc
shl
cld
jnp
and
add
add
add
int
dec
mov
xchg
sub
adc
psubusb
ins
rcr
sub
(bad)
addr16
adc
in
cmp
je
popa
jne
inc
neg
fimul
and
scas
sub
sahf
in
movd
es
or
mul
inc
pop
fdivr
dec
ins
(bad)
fmul
arpl
jg
cmp
adc
inc
mov
push
add
inc
arpl
inc
or
xchg
mov
jle
bound
bswap
(bad)
imul
mov
mov
jp
push
and
movs
js
test
jecxz
mov
inc
dec
mov
sub
adc
dec
scas
add
push
mov
mov
scas
mov
inc
push
and
or
daa
out
sbb
or
loop
das
sub
(bad)
jge
sti
popf
lods
fiadd
push
(bad)
rol
cli
cli
pop
or
shl
dec
retf
adc
cmp
mov
push
bound
(bad)
mov
xchg
pop
xor
(bad)
push
lea
mov
lahf
sti
lock
mov
adc
push
retf
pop
xchg
mov
(bad)
les
adc
dec
jb
adc
xor
dec
adc
push
dec
jge
mov
inc
mov
scas
xor
dec
cmp
mov
push
sub
pop
xor
mov
dec
in
xor
mov
sti
test
mov
mov
jne
ins
xchg
inc
or
fwait
ret
mov
add
mov
sbb
mov
dec
sub
dec
jne
pop
in
sbb
mov
cmp
mov
cdq
aas
sub
pop
call
pop
je
pop
in
push
daa
inc
lahf
xor
jecxz
ins
cmp
(bad)
pop
mov
xchg
push
push
repnz
cmp
push
stos
ja
jae
movntq
out
xchg
jg
shl
addr16
xchg
lods
cmp
xor
push
leave
dec
fcmovnb
inc
inc
scas
mov
push
retf
int
pop
pop
xor
pop
repnz
cmc
sbb
retf
daa
inc
mov
or
mov
and
je
sti
dec
rcr
ds
out
fild
arpl
push
and
mov
dec
jmp
and
mov
popf
daa
jb
bound
call
inc
daa
adc
iret
shl
xchg
es
adc
call
div
rcl
add
repz
push
pop
xchg
mov
add
jmp
sti
push
fild
outs
imul
cmp
je
cmp
imul
fld
xchg
retf
or
adc
in
jecxz
or
mov
and
rol
mov
dec
inc
mov
jo
xlat
or
sti
retf
iret
jnp
add
adc
loop
jbe
pop
stos
iret
iret
push
mov
call
enter
popa
sti
rol
push
(bad)
or
cmp
shl
mov
loope
dec
mov
sbb
test
or
mov
fcmovu
int3
mov
push
call
lods
ins
stos
fs
and
enter
jp
sar
or
jns
pop
xchg
ins
je
(bad)
xchg
inc
dec
mov
xchg
ins
in
loope
mov
adc
pop
pusha
cs
xor
cdq
loop
jge
or
mov
out
pop
push
mov
xor
pop
int3
sahf
mov
fs
retf
sbb
js
mov
cdq
mov
pop
ins
ins
out
sbb
jns
mov
push
inc
jecxz
inc
rcl
(bad)
cmp
js
push
push
sub
mov
inc
rcl
jle
sub
mov
sbb
ja
call
mov
ss
inc
hlt
call
test
mov
sub
dec
sar
iret
jo
and
dec
sbb
xchg
cmc
jmp
es
xor
and
xchg
jp
pusha
popf
push
rol
xchg
push
cpuid
hlt
push
in
or
jnp
inc
retf
xor
and
add
mov
bound
pop
jecxz
jae
call
repnz
jp
rcl
in
mov
mov
test
cld
push
jmp
jecxz
(bad)
arpl
hlt
inc
int
mov
out
lea
xchg
and
int3
dec
(bad)
scas
jne
nop
or
popa
movs
and
or
jb
js
sbb
jl
mov
xchg
cmp
pop
pop
popf
fcomp
dec
mov
test
mov
imul
push
lods
pop
ins
in
sub
pop
cmps
mov
scas
cmp
cmp
push
dec
shr
jnp
pop
inc
or
fwait
xor
lahf
retf
or
movs
push
ins
fstp
adc
push
popa
dec
add
mov
jl
push
das
push
jno
mov
test
xchg
sbb
push
into
xchg
(bad)
jl
in
sbb
push
cmp
cwde
mov
push
add
inc
add
cwde
movs
jle
mov
(bad)
add
aam
lods
pop
add
loop
rcl
sbb
rcl
mov
or
retf
sbb
xchg
mov
in
mov
xor
es
mov
into
xor
add
and
ss
mov
inc
push
das
fistp
jno
and
xchg
xlat
sub
bound
movs
mov
add
nop
inc
das
or
mov
mov
test
scas
cld
and
retf
out
xor
icebp
add
or
lahf
pop
lods
and
add
ret
sbb
xor
mov
daa
push
pusha
mov
pop
mov
aad
pop
neg
dec
add
sbb
clc
jno
aaa
mov
mov
cmp
jo
push
mov
cmc
pop
mov
ret
jge
add
and
rcl
jmp
out
cmp
out
mov
imul
sbb
fnstenv
rcr
push
popf
mov
hlt
adc
jge
mov
jge
inc
scas
scas
int3
movs
sbb
fs
gs
mov
sbb
pop
enter
xchg
inc
inc
xor
cmpxchg
por
jnp
mov
xor
adc
out
and
out
shr
into
inc
lock
jo
test
call
aam
or
scas
popa
aas
movs
cmps
test
pop
(bad)
jbe
(bad)
cli
ret
cld
pop
and
out
push
scas
test
test
mov
xchg
sub
stc
mov
sub
lea
shl
pop
cmps
mov
cli
xchg
mov
push
sbb
xchg
cmp
jl
inc
in
mov
pop
js
adc
pop
push
loope
jge
idiv
sub
mov
cmp
add
fistp
mov
lea
daa
fwait
and
or
jb
push
leave
(bad)
pop
pusha
int
and
pop
cmp
lods
int3
int3
mov
sbb
pop
js
and
cmp
jg
out
mov
dec
pop
sub
sbb
jmp
adc
cmps
clc
(bad)
mov
and
call
fcomi
ja
shr
or
add
inc
inc
movs
sar
lock
inc
ins
push
or
les
call
lock
and
mov
push
sbb
(bad)
sahf
jl
xchg
jb
mov
pop
ret
mov
ret
xor
cld
cmp
std
(bad)
shr
pop
inc
xor
jle
add
and
adc
sbb
lahf
mov
push
loope
jmp
les
ret
inc
mov
jg
add
dec
aaa
or
test
out
jb
fild
loop
inc
add
lods
cld
dec
push
popa
stos
inc
shl
in
imul
leave
loope
add
mov
adc
mov
cli
adc
cli
dec
in
adc
nop
cmp
add
mov
lds
mov
icebp
clc
in
mov
push
addr16
(bad)
cdq
xor
pop
sub
inc
cmp
pushf
std
test
les
imul
ror
jns
mov
sar
push
ud1
sbb
in
les
inc
fs
enter
push
ds
xchg
hlt
por
(bad)
cs
mov
pop
(bad)
jp
jl
out
sti
pop
and
popf
ret
lods
dec
adc
scas
sar
(bad)
mov
(bad)
aas
jnp
jmp
pop
pop
dec
push
arpl
dec
cs
cmp
jne
sar
stc
mov
pusha
lods
sub
push
cli
cwde
loope
sbb
sbb
cmc
add
rcr
push
adc
push
data16
test
mov
out
(bad)
sahf
push
jge
sub
in
cmc
fistp
sar
in
repz
mov
lds
push
outs
add
and
in
sbb
ret
jmp
fwait
movs
adc
or
sbb
xchg
or
mov
xchg
mov
xor
jae
repnz
or
nop
fwait
dec
(bad)
cmp
(bad)
jns
sti
(bad)
push
rcr
cmp
mov
(bad)
call
mov
mov
imul
sbb
icebp
stc
xchg
add
push
xchg
xchg
mov
mov
adc
shl
mov
pop
jmp
cmc
mov
mov
cmp
xor
and
xchg
add
cmp
outs
in
icebp
dec
lods
pop
pusha
xchg
inc
push
xchg
adc
adc
dec
(bad)
lahf
mov
call
jge
inc
(bad)
jmp
xchg
call
imul
imul
stc
lods
inc
add
(bad)
shl
dec
out
fcmove
aas
imul
and
mov
std
not
lods
jmp
push
in
mov
push
mov
mov
movs
adc
pop
aam
(bad)
and
ficomp
push
arpl
dec
ret
or
call
gs
push
cmp
cmc
stc
dec
stos
in
xor
std
cmp
neg
mov
retf
out
add
sub
(bad)
ds
cmp
lds
dec
push
pop
rcr
cmp
push
out
rol
cld
adc
imul
inc
dec
gs
fsub
push
and
add
ins
imul
rol
call
xchg
(bad)
or
sub
bound
ror
jg
xor
daa
retf
lods
push
mov
pop
stos
dec
cmp
pop
(bad)
lahf
(bad)
(bad)
pop
xchg
dec
nop
or
jl
(bad)
shr
jp
inc
dec
pop
jl
and
(bad)
cmc
sbb
repz
cs
push
dec
in
cdq
pop
sbb
push
je
sbb
dec
xor
adc
push
pop
xor
sbb
out
push
int3
out
inc
repnz
mov
mov
inc
inc
push
retf
jnp
adc
mov
stos
lahf
scas
inc
dec
stos
and
add
fadd
les
pusha
add
adc
movs
aaa
mov
mov
dec
push
test
es
xadd
xchg
push
mov
cmps
fs
jns
and
inc
aad
rep
out
aam
adc
lahf
repz
ss
aad
mov
and
dec
cmps
lods
lock
add
rol
cmp
in
push
sub
push
cmps
shr
in
push
fisubr
adc
ret
jmp
test
dec
jbe
ficom
jmp
(bad)
sub
aaa
sbb
cmp
fnstsw
mov
dec
adc
movs
retf
mov
mov
mov
cmps
cld
movs
add
outs
push
push
shl
std
adc
fdivr
pop
jl
iret
jne
cli
je
cmp
xor
jmp
jae
inc
mov
aam
inc
jecxz
sub
ret
xchg
pop
or
call
xor
mov
fnstsw
inc
dec
add
iret
popf
dec
scas
xchg
fst
mov
mov
bound
push
iret
jb
push
int3
mov
stos
mov
cmc
lods
adc
or
aam
fmul
in
(bad)
stc
(bad)
push
cmps
ret
out
jge
add
jno
icebp
(bad)
ret
push
movs
push
xor
xchg
jns
js
inc
xchg
je
mov
(bad)
call
inc
arpl
inc
lods
jo
jo
xor
mov
mov
adc
dec
hlt
add
dec
(bad)
sahf
jg
fisub
sbb
das
ins
leave
call
inc
cli
test
pusha
dec
xchg
cmp
lds
(bad)
aas
ret
mov
push
or
lea
xor
ins
cmps
sub
xor
fnstsw
dec
pop
dec
and
sub
inc
ret
mov
inc
mov
dec
xor
add
sti
popf
cmps
mov
xchg
mov
loop
add
cmc
(bad)
or
push
addr16
adc
mov
inc
adc
add
ret
mov
jno
jb
popf
cmps
jno
cld
fdivrp
jecxz
xchg
pop
inc
inc
add
int3
dec
rcr
push
adc
les
into
cmp
push
aad
jae
jnp
jl
and
mov
popa
icebp
or
sbb
outs
xor
push
mov
(bad)
sbb
sbb
(bad)
xchg
sbb
or
dec
mov
jbe
lahf
mov
mov
lea
stos
mov
out
loopne
rcr
mov
mov
and
shl
imul
mov
mov
push
sbb
mov
fisttp
(bad)
in
dec
adc
scas
in
xlat
test
push
dec
ss
cs
and
xor
add
ds
sub
(bad)
cmp
out
cmc
lahf
bnd
pop
sbb
(bad)
es
stc
outs
jbe
add
fst
mov
xchg
retf
xchg
bnd
icebp
jmp
cmps
xchg
(bad)
out
mov
aaa
test
cmp
xchg
push
in
(bad)
cwde
adc
add
dec
inc
mov
arpl
inc
jbe
ins
sbb
mov
retf
sbb
xchg
and
cmps
mov
push
cwde
inc
cmc
nop
sub
ss
jp
iret
or
jl
mov
in
ss
jb
dec
lock
lods
aaa
or
lods
add
mov
sahf
mov
dec
jb
xchg
mov
cmp
or
mov
aaa
pop
pusha
lahf
stc
mov
mov
retf
mov
out
iret
xchg
or
mov
jno
pop
inc
cmp
std
sbb
mov
inc
sub
mov
sbb
cmp
dec
or
mov
fwait
daa
(bad)
enter
cld
cs
addr16
fld
sub
sbb
mov
cwde
push
leave
dec
scas
maskmovq
not
push
or
and
ins
mov
add
push
add
lods
mov
mov
(bad)
sti
and
dec
mov
cmp
pushf
cwde
in
cmps
pop
and
cmp
addr16
mov
push
mov
div
rol
fild
mov
mov
and
xchg
dec
sub
ds
and
fwait
rcr
dec
fs
cmc
cmc
ja
js
bound
xchg
inc
(bad)
dec
std
out
pop
sbb
pushf
pusha
or
enter
lds
pop
xchg
jbe
mov
xchg
cmc
xchg
aam
adc
push
push
test
sbb
pop
inc
jmp
adc
pop
adc
jae
aaa
ins
out
jbe
repz
or
jmp
in
pop
(bad)
pop
out
xor
call
pop
iret
daa
mov
mov
stos
test
mov
lahf
jge
mov
xchg
lock
(bad)
jnp
mov
or
div
mov
cmps
push
sub
iret
fsub
add
sub
lods
pop
imul
mov
xor
hlt
jmp
adc
imul
dec
dec
cmp
enter
jnp
ins
sub
add
loop
xlat
fidivr
mov
cdq
loope
xchg
dec
push
pop
lock
lds
arpl
pop
ja
(bad)
cmc
arpl
mov
retf
push
out
inc
cmp
pop
xor
test
outs
mov
retf
and
stc
jle
(bad)
retf
fld
fst
clc
xor
dec
rcl
in
cmps
(bad)
mov
neg
xchg
push
popf
pop
or
and
inc
out
pop
pop
bound
add
cmps
mov
lds
xchg
fstp
xchg
hlt
sbb
or
xor
inc
and
fs
add
frstor
daa
dec
cmp
and
sbb
mov
push
ins
mov
pop
push
(bad)
or
adc
push
xor
add
xor
sub
push
xchg
pop
imul
sahf
pushf
xor
dec
mov
pushf
cld
fisttp
addr16
and
aam
into
add
xchg
dec
outs
cmps
push
sub
mov
fcom
outs
jo
push
mov
jg
aad
dec
mov
pop
cmp
fidivr
xchg
jae
add
xor
ds
sub
mov
sar
inc
adc
or
arpl
add
or
test
push
outs
add
add
cmp
mov
pop
mov
ret
push
cs
pop
adc
mov
jmp
add
adc
pop
add
int3
mov
add
sti
jb
and
retf
push
cs
pop
mov
popa
inc
sbb
mov
and
mov
pop
xchg
fild
data16
xchg
adc
add
addr16
cmp
outs
std
adc
lahf
push
jg
inc
jnp
loope
xor
mov
ins
push
int
or
movs
js
fnsave
add
adc
hlt
(bad)
enter
mov
retf
xlat
sub
and
and
sbb
outs
sbb
jns
cmp
xor
imul
pop
sbb
jg
mov
pop
jge
ror
cdq
dec
repnz
sbb
shr
cmp
push
int3
xor
pop
test
ins
fstp
sub
movd
adc
add
and
sub
adc
pusha
lea
mov
push
imul
retf
outs
pop
push
retf
xor
push
pop
ss
rcr
and
or
jae
out
inc
jns
movq
daa
push
jne
pop
xor
pop
xor
jbe
mov
xor
cmp
stc
dec
jno
xchg
stos
inc
lods
enter
ja
mov
sub
mov
xlat
mov
mov
push
aad
popa
push
scas
add
sbb
mov
jecxz
mov
mov
cmp
inc
mov
in
sub
fdivr
call
fwait
pusha
imul
push
fmul
test
out
enter
out
in
sbb
mov
fisttp
xchg
scas
sbb
aaa
sub
retf
fsubr
mov
div
div
(bad)
out
test
shl
jns
(bad)
or
int
and
ins
mov
dec
adc
adc
mov
dec
push
clc
jb
adc
pop
jge
mov
push
mov
cmps
cmps
and
out
inc
fdiv
sbb
(bad)
pop
or
jle
std
mov
sbb
dec
dec
aad
fdiv
add
xchg
adc
popf
sahf
sbb
pushf
xchg
fs
sbb
pop
sub
lock
inc
mov
sbb
out
or
mov
xor
stc
dec
push
and
inc
jo
mov
mov
pop
test
(bad)
stc
push
ins
ds
adc
cmc
sub
imul
ins
enter
(bad)
fdivr
add
mov
dec
add
inc
movs
bound
lahf
inc
push
or
push
mov
scas
jmp
test
mov
and
movs
out
fdivr
icebp
sub
adc
or
mov
movs
fwait
or
inc
push
in
or
outs
push
mov
out
jmp
out
xchg
into
mov
xchg
mov
gs
leave
nop
icebp
or
sbb
rcl
out
ins
inc
clc
daa
mov
inc
xor
(bad)
ins
(bad)
(bad)
(bad)
adc
rol
push
cli
and
inc
xchg
xor
and
in
sahf
xor
rol
mov
xchg
call
jge
mov
mov
shl
retf
push
inc
call
cbw
inc
sub
push
stos
popa
push
jb
movs
adc
nop
jecxz
mov
pop
pop
lds
pusha
not
mov
push
push
imul
(bad)
jae
pop
cdq
mov
or
(bad)
cld
push
out
xlat
or
jp
fld
push
mov
mov
fbstp
sub
cmp
xor
mov
sub
in
pmulhw
out
imul
inc
sub
sbb
ins
jg
popf
xchg
sbb
xchg
sbb
push
sbb
inc
push
nop
xchg
mov
loope
push
sar
dec
lea
(bad)
loope
xchg
addr16
or
aad
out
xor
mov
xor
in
pushf
sub
cmps
xor
pusha
shl
cmp
mov
add
cli
dec
shr
pop
sub
test
dec
ror
fwait
shl
adc
mov
jnp
and
push
pop
xchg
jne
aad
je
cli
xor
outs
inc
dec
ror
mov
pop
retf
movs
adc
scas
jo
lea
(bad)
(bad)
in
rol
xor
bound
sub
dec
pop
popa
lea
jp
jmp
mov
mov
jno
jbe
push
and
push
std
pop
xor
data16
int
xor
mov
ins
inc
outs
add
or
push
pusha
xchg
out
mov
xchg
pop
(bad)
sub
mov
cli
arpl
pop
sti
sar
lea
mov
outs
gs
clc
add
and
pop
aam
sub
mov
pop
stos
or
leave
add
fmul
clc
xor
sahf
call
mov
ss
mov
rcl
mov
cmps
inc
mov
ins
mov
(bad)
xor
nop
pop
cmps
xlat
jg
cmp
sti
lds
sub
add
adc
or
and
cli
div
sub
aas
retf
idiv
jp
cmp
adc
popa
dec
bound
jge
push
mov
dec
sbb
stos
mov
into
ficomp
les
stos
dec
and
mov
ror
cmp
xchg
push
fxch
mov
clc
and
cmc
aaa
push
retf
(bad)
retf
mov
add
pop
sub
add
or
mov
fs
(bad)
mov
cdq
pop
sbb
adc
and
std
sub
outs
pusha
in
pop
repnz
mov
and
inc
aad
xor
add
fwait
hlt
pop
pop
icebp
stos
cmps
and
mov
pop
dec
in
mov
mov
out
jecxz
cmp
or
cmps
jg
or
call
in
loopne
mov
cmps
xor
sbb
adc
dec
xor
adc
dec
jp
lock
cmp
rcr
push
fs
retf
xor
(bad)
push
(bad)
pushf
add
jmp
mov
scas
dec
add
fs
add
push
cmps
jp
add
and
addr16
jp
sub
pop
int3
stos
and
cwde
inc
pop
mov
inc
aad
fstp
adc
arpl
cmp
je
clc
stos
test
lods
lods
pop
cmp
mulps
fmul
(bad)
nop
(bad)
lock
ins
repz
(bad)
sahf
inc
sbb
(bad)
mov
cdq
sbb
mov
add
sbb
ror
fucomi
xchg
or
xchg
and
push
push
(bad)
sbb
cmps
out
icebp
das
(bad)
in
ss
jae
mov
mov
xor
jne
mov
xchg
in
sbb
pop
sti
pop
mov
movs
adc
dec
adc
inc
dec
mov
mov
mov
inc
mov
pusha
aam
cli
adc
lea
out
jl
pop
sub
test
pop
loop
inc
and
ja
ret
shr
mov
test
retf
sbb
shr
sbb
jo
inc
shr
inc
aad
and
jb
jp
test
add
fisttp
jge
fstp
inc
and
movs
dec
xchg
push
(bad)
repnz
mov
pop
sbb
pop
fmulp
sbb
rol
or
jg
lods
mov
ins
stos
scas
jns
in
mov
in
jmp
sub
ficom
sbb
daa
xchg
inc
loope
sub
mov
icebp
mov
aaa
iret
bound
add
xchg
leave
popa
sub
jb
or
fld
ds
xor
add
cmp
arpl
and
int3
hlt
and
adc
push
mov
hlt
rol
jg
fst
rcl
psrad
or
mov
outs
lahf
adc
inc
ins
mov
inc
sbb
fcomp
mov
and
adc
or
mov
cmc
(bad)
pop
sti
inc
(bad)
int3
pop
xor
jb
outs
jmp
cld
sub
bound
not
add
rol
(bad)
mov
call
addr16
jno
mov
inc
aam
retf
cmp
mov
and
mov
(bad)
sahf
aaa
mov
mov
jcxz
push
fcomp
or
call
dec
cwde
jmp
jl
xchg
sbb
sbb
sar
or
fs
lds
gs
daa
hlt
shl
arpl
ror
lock
adc
jg
dec
or
cmp
or
icebp
shl
dec
mov
push
inc
jmp
cmps
nop
gs
fistp
inc
push
aad
mov
cmp
out
shl
fidivr
cwde
shl
xchg
push
add
fcmovu
push
push
push
out
push
fnstsw
stc
pop
push
mov
sar
xlat
dec
push
ja
mov
jo
ja
out
adc
and
icebp
mov
sub
cli
pop
(bad)
mov
cmp
clc
xchg
loope
scas
mov
xchg
movd
xchg
jmp
js
mov
dec
cmp
or
jecxz
or
lahf
sub
pop
adc
mov
aaa
test
scas
sub
mov
jmp
leave
add
std
das
adc
dec
stos
jge
punpcklwd
pop
nop
sub
fnsave
sbb
jl
out
mov
xor
(bad)
xchg
add
(bad)
test
and
fld
or
sahf
call
add
xlat
(bad)
dec
push
mov
fsub
std
icebp
mov
ss
fnstsw
add
lock
inc
xor
mov
jmp
sbb
cmp
ins
adc
mov
cwde
je
or
xchg
jnp
cmp
ss
push
pop
adc
cld
cmps
or
sbb
leave
xor
pop
inc
(bad)
jno
test
mov
mov
push
mov
imul
clc
xchg
sti
lahf
or
(bad)
cmp
fnsave
fisubr
jmp
cwde
call
test
jecxz
pop
mov
sti
arpl
or
es
xor
cdq
adc
xlat
cmp
scas
int3
js
in
and
xchg
jmp
xchg
xchg
call
in
mov
shld
inc
push
jo
sbb
push
jno
sbb
cmp
xor
(bad)
retf
arpl
or
mov
push
fcomip
adc
popa
jge
xor
xchg
push
fidivr
sub
inc
dec
nop
xchg
fcos
add
mul
ret
stos
repz
push
pushf
(bad)
xchg
mov
or
shr
jmp
jae
pushf
mov
push
out
movs
ficomp
adc
gs
jmp
or
mov
in
ins
jle
jp
inc
xor
sbb
leave
popf
mov
mov
sti
sbb
xor
jbe
int3
add
ss
popf
xchg
jecxz
push
shl
mov
xchg
lock
pop
inc
xor
lea
dec
mov
or
ror
mov
fisttp
mov
mul
sbb
jecxz
daa
ja
ret
sahf
ins
cs
mov
inc
popf
pop
push
(bad)
repnz
sub
cmp
out
dec
mov
push
xor
xor
out
xor
push
cld
add
xchg
popa
stc
imul
iret
or
push
dec
sahf
dec
test
push
cmp
out
fistp
lahf
icebp
stos
loopne
and
pop
or
and
es
sbb
out
pop
pop
dec
xor
dec
adc
iret
dec
push
outs
or
mov
outs
movs
loope
movs
pop
das
cli
mov
mov
cmp
xor
(bad)
loopne
inc
sbb
das
sbb
nop
xchg
(bad)
jl
push
cmp
(bad)
adc
in
aaa
daa
mov
xor
in
push
push
addr16
das
fld
aaa
xchg
dec
sbb
movs
test
arpl
pushf
push
stc
pop
dec
adc
dec
or
and
xor
add
jp
test
repnz
push
pop
imul
push
shl
push
loopne
ins
or
adc
retf
in
dec
test
add
or
xor
das
shl
loop
inc
test
sub
es
ins
es
mov
dec
pop
sbb
xchg
jmp
jne
loopne
mov
lds
xor
mov
dec
mov
adc
pop
popa
test
sbb
mov
sub
lods
int
dec
enter
cmp
outs
pop
test
call
mov
test
pushf
add
add
cmc
push
cmp
and
cmps
inc
mov
xchg
or
pushf
shr
sbb
pop
stos
sub
ins
test
int3
mov
fwait
push
xchg
push
inc
cmps
es
das
xlat
mov
cld
adc
and
out
mov
movs
adc
and
jmp
cmp
mov
fldenv
push
out
outs
icebp
adc
jl
out
mov
stos
push
cmp
outs
push
cmp
lds
and
sub
shl
fistp
scas
add
pushf
mov
mov
iret
push
pop
out
dec
mov
add
ret
push
mov
ror
rcl
enter
add
xchg
add
mov
jge
cmp
mov
ss
adc
xchg
mul
scas
lods
fisubr
pop
jp
inc
cmp
push
mov
retf
scas
mov
rol
xchg
ss
dec
pop
push
stos
dec
pop
std
mov
loopne
xor
imul
mov
ja
cmc
sbb
inc
sbb
pop
push
cmp
mov
sbb
sub
mov
or
rcl
test
cmp
sub
test
in
adc
cmp
pop
test
and
daa
popa
hlt
mov
ret
adc
imul
cdq
mov
xchg
stos
push
(bad)
data16
inc
dec
aam
mov
mov
sub
push
lods
and
out
push
pop
add
add
pop
shl
push
scas
push
adc
test
jmp
dec
test
sbb
fistp
lahf
push
push
xor
mov
adc
or
mov
jne
in
fdiv
pop
cmc
sub
and
fsub
adc
cmps
xor
and
lods
repz
in
fiadd
or
jl
loopne
ret
test
dec
fadd
mov
ss
fs
mov
test
les
cmp
retf
cmp
xor
inc
add
(bad)
pop
adc
icebp
jecxz
dec
jp
xchg
retf
in
lods
mov
inc
ja
pop
stos
adc
push
shl
xchg
arpl
pop
or
(bad)
xlat
movs
out
mov
in
cld
push
js
outs
stos
push
add
mov
mov
call
out
addr16
and
arpl
mov
sub
ins
scas
xchg
je
fsubr
retf
popf
dec
mov
or
enter
pop
adc
fsubr
aad
sbb
jle
sub
arpl
and
inc
mov
in
pop
mov
sub
inc
cmp
int
aas
bsr
aas
inc
mov
add
cmps
mov
jae
jns
or
mov
ror
xor
jmp
movs
imul
mov
in
loop
push
ins
sbb
ja
pop
push
add
inc
add
jbe
daa
bound
cwde
adc
out
clc
pop
mov
out
inc
sbb
jae
or
add
jns
push
cmp
imul
xor
sub
mov
sti
jbe
cli
movs
push
pop
add
mov
into
inc
sub
mov
test
xchg
cmp
jmp
add
xchg
fdiv
scas
daa
cwde
cmps
sbb
add
pushf
push
fnstsw
inc
out
jge
xchg
ins
jp
push
mov
fcom
imul
mov
adc
jnp
inc
inc
xor
sub
add
(bad)
or
sti
sub
shl
xchg
gs
(bad)
push
pop
xchg
into
cwde
mov
or
xor
xchg
mov
js
int
sbb
and
popf
sti
scas
jp
jmp
sti
add
or
retf
push
adc
push
push
inc
je
add
es
inc
xlat
xchg
adc
xchg
aam
aam
(bad)
repnz
pop
dec
outs
jnp
xchg
cmc
mov
sbb
lods
xor
adc
ds
cmp
ret
mov
pop
sahf
mov
mov
shl
cli
pop
xchg
fs
jo
mov
lea
(bad)
test
mov
lds
jle
inc
xor
popa
cdq
fcmovbe
arpl
lods
sbb
fdivr
jns
sub
into
push
shl
retf
sub
pop
push
push
or
xchg
push
out
dec
mov
jmp
mov
adc
pop
pop
or
cmp
cmps
imul
and
mov
dec
adc
dec
je
lea
jle
dec
xor
adc
rol
idiv
rcl
addr16
pushf
nop
xchg
pop
push
sub
mov
outs
mov
jo
pop
inc
cdq
fmul
retf
or
and
out
pusha
sbb
cmps
lds
cmp
push
fs
mov
sub
cmp
mov
mov
jecxz
and
movaps
dec
xchg
into
lea
sub
sbb
aam
rcl
test
mov
mov
movs
out
mov
mov
cmps
cmp
push
outs
(bad)
adc
pop
and
and
in
clc
fcmovnu
dec
mov
in
push
add
cmp
add
mov
loopne
and
rcr
movs
push
sub
push
mov
shl
daa
pop
push
push
xor
xchg
inc
mov
ret
nop
into
addr16
mov
fwait
jne
sub
ficomp
dec
or
ja
shl
and
inc
xchg
(bad)
add
pushf
(bad)
jmp
lds
in
jo
in
cld
test
add
punpcklbw
(bad)
pop
push
pop
push
push
jne
mov
retf
cmc
xchg
ret
icebp
push
jle
xchg
mov
movs
push
push
stc
xchg
popf
dec
sbb
push
movs
adc
(bad)
fs
and
mov
mov
sub
nop
pop
adc
imul
int3
cmp
mov
mov
xchg
mov
inc
jge
jns
adc
sbb
mov
cmp
pop
out
mov
sub
retf
movs
cmps
xlat
rep
jg
enter
lods
xor
pop
aad
loope
cmc
loopne
fldenv
pusha
or
fisttp
cli
shl
xchg
cdq
idiv
aaa
repz
dec
vpsubw
mov
jl
sbb
in
and
xchg
(bad)
sub
and
or
imul
cmp
pop
jl
sbb
aad
sbb
scas
and
test
pop
loop
and
std
jg
sahf
push
jno
push
xchg
in
push
leave
repnz
add
arpl
add
mov
movs
and
jnp
fcompp
sbb
retf
add
pop
cmc
in
cmps
mov
dec
jmp
push
loopne
push
in
aam
pop
xor
test
(bad)
inc
mov
adc
imul
popf
push
push
(bad)
inc
dec
adc
adc
cmps
inc
in
cmps
xchg
inc
bound
mov
dec
xchg
in
cli
xor
dec
popw
jmp
or
pusha
outs
nop
je
and
or
add
fcom
inc
mov
xchg
pop
daa
nop
lds
fsub
inc
outs
push
stos
loop
push
xor
jbe
sub
fucomi
dec
hlt
push
(bad)
faddp
lea
mov
push
xchg
cmp
xor
mov
dec
lods
faddp
fisub
push
(bad)
neg
push
push
cmp
jb
cmp
add
push
mov
sbb
sub
jb
dec
xchg
and
mov
mov
(bad)
movs
push
pop
addr16
adc
or
test
jbe
push
retf
jl
sbb
push
call
sub
mov
push
inc
cmp
arpl
fist
pusha
sub
call
jbe
retf
sub
ss
lock
cld
daa
jmp
pop
shl
and
add
or
out
ds
icebp
add
push
loop
inc
mov
jb
repz
in
sub
inc
out
xchg
add
add
clc
xor
mov
call
sub
sbb
dec
inc
adc
sti
sbb
scas
add
stos
pop
xchg
lea
push
ficomp
dec
rol
mov
in
rcl
adc
mov
mov
or
jecxz
push
mov
test
xchg
pop
mov
jne
(bad)
jmp
mov
add
pop
retf
call
out
out
stc
xchg
in
test
movs
mov
outs
push
ins
or
rol
inc
out
cwde
push
sub
inc
xor
pop
clc
repnz
add
jae
add
xchg
add
movs
ins
das
inc
cwde
and
adc
cmp
jnp
xor
movs
out
pop
xor
mov
jmp
sbb
jno
sbb
fs
push
mov
inc
test
fcomp
pushf
dec
les
inc
in
rcl
xor
into
xor
js
popa
push
cld
dec
test
fnstsw
(bad)
popa
out
daa
(bad)
pop
mov
fidiv
xchg
out
pop
(bad)
xor
xchg
call
stc
mov
jbe
pusha
xor
push
jae
cmp
jmp
push
aad
mov
push
sbb
jb
test
push
add
dec
or
std
or
call
pop
push
dec
xor
popa
aas
les
jbe
test
fdivr
push
or
(bad)
cmp
pop
dec
mov
(bad)
hlt
popa
dec
loop
mov
sub
mov
out
nop
jae
das
mov
push
mov
loopne
sbb
outs
sar
(bad)
mov
clc
cld
ret
in
out
cmc
pop
mov
dec
rcr
adc
inc
das
add
imul
ins
cmp
inc
cdq
lea
(bad)
dec
pop
cmp
pop
cmp
loop
cmp
mov
mov
add
push
push
int3
and
cli
bound
lods
dec
sbb
and
fadd
jecxz
xchg
inc
sbb
jnp
mov
fst
pop
(bad)
mov
stos
in
jb
cmp
mov
adc
xchg
jle
clc
jnp
retf
mov
mov
xor
xchg
addr16
xor
fcmovb
not
dec
sub
jecxz
fstp
xor
mov
xor
inc
lahf
push
stc
repnz
icebp
mov
push
xor
loope
call
out
add
ss
or
sti
popf
pop
scas
jbe
or
out
xor
mov
cmp
inc
inc
jecxz
arpl
aaa
iret
xor
dec
xchg
inc
mov
xor
pop
imul
mov
retf
enter
iret
dec
adc
mov
cmps
or
retf
add
push
adc
mov
je
fidiv
cmps
aas
pop
cdq
and
mov
add
sbb
mov
and
shr
dec
cmp
jne
bound
mov
or
pop
dec
popa
fnstcw
sbb
imul
pop
(bad)
pop
out
or
sbb
inc
retf
lods
(bad)
popa
push
dec
add
lods
mov
mov
in
push
popa
les
inc
gs
sar
mov
(bad)
jge
mov
push
or
jnp
bound
xor
sub
xchg
add
std
out
mov
ins
jmp
push
dec
mov
adc
or
shl
lods
in
push
sahf
inc
inc
dec
add
in
jns
mov
stc
xchg
shl
rol
push
cmp
in
or
pop
sub
retf
mov
(bad)
xchg
pusha
mov
push
pop
loopne
inc
mov
mov
or
test
ss
(bad)
inc
ret
out
sub
or
inc
enter
add
xor
call
jmp
or
xchg
push
cmps
movs
je
loope
jb
xor
cmp
js
inc
xor
push
push
nop
push
mov
inc
repnz
jns
loope
mov
ds
aad
lods
loop
popa
test
jae
je
mov
mov
fwait
mov
jne
jo
leave
xor
fmulp
les
jecxz
mov
adc
add
xchg
lea
hlt
pop
ret
pop
out
and
push
mov
push
jmp
xor
and
adc
and
mov
mov
push
or
outs
or
pop
inc
(bad)
movs
cdq
sbb
mov
cli
and
jmp
pop
push
and
test
mov
outs
mov
loop
call
sub
pushf
jo
leave
in
out
call
aaa
mov
jmp
or
and
xor
push
sub
mov
jle
jp
mov
or
pop
push
cmp
cmp
mov
pop
jo
jg
(bad)
adc
mov
(bad)
mov
sub
sub
push
sar
dec
mov
loope
push
inc
cmp
(bad)
sbb
stos
xor
movs
test
pop
mov
test
adc
ja
(bad)
fcom
es
jne
mov
pop
jg
frstor
and
mov
(bad)
pop
test
mov
bound
fcomp
es
dec
add
inc
cmc
cmp
sahf
pushf
iret
popf
ret
mov
sbb
or
jmp
sub
imul
les
sbb
sub
pushf
movs
lea
jb
test
scas
js
pop
mov
fild
data16
neg
sahf
(bad)
aas
pop
cmp
movs
mov
icebp
rcr
cmp
sbb
pop
jnp
push
xor
(bad)
and
add
xchg
inc
mov
inc
out
cs
mov
retf
out
int3
push
push
popf
xor
ficom
inc
push
pop
out
mov
xor
out
push
aad
xchg
fwait
dec
movs
mov
std
add
fwait
jne
(bad)
lods
mov
int3
ror
shr
push
fdiv
pop
mov
inc
xor
test
pop
mov
inc
sbb
add
out
lods
inc
aad
stc
dec
fiadd
in
aas
xchg
xor
imul
retf
popa
cmp
lds
mov
sbb
jl
push
repnz
pop
mov
cmps
sti
ins
cwde
jb
mov
mov
jge
pop
loopne
fwait
loop
or
aas
nop
sub
ret
dec
push
loope
inc
shr
mov
cmc
ds
sub
leave
add
xor
aaa
dec
pop
cmps
fucomi
ret
adc
sbb
(bad)
cmp
scas
sbb
cmc
loopne
xor
dec
dec
imul
push
sbb
test
jae
mov
cli
test
call
add
or
jo
xchg
cdq
les
repz
push
cmc
mov
jno
dec
(bad)
addr16
ja
(bad)
sti
sar
cdq
sbb
push
inc
enter
popa
xchg
mov
aas
push
jo
ss
mov
fcomp
jmp
movs
fsub
mov
icebp
cs
fs
ss
sbb
repnz
dec
pushf
aas
jns
pop
pop
test
in
(bad)
push
mov
add
scas
dec
adc
test
mov
mov
jo
and
jge
xchg
aaa
dec
or
mov
mov
add
sbb
pop
nop
enter
paddw
jo
fwait
out
mov
sbb
out
int3
lahf
cmc
mov
icebp
movs
pushf
push
daa
and
sub
mov
mov
add
mov
adc
cmp
scas
mov
(bad)
clc
fcomp
(bad)
test
cdq
gs
xor
and
icebp
and
(bad)
in
repz
adc
and
jecxz
in
mov
jae
mov
cmp
(bad)
dec
pop
sar
sub
inc
xor
jo
fdivr
stc
stc
jle
xor
pop
xor
rcl
leave
sbb
jp
mov
pop
movs
mov
dec
adc
(bad)
loopne
dec
mov
repz
sbb
scas
and
popf
jb
add
adc
mov
cdq
xchg
sub
mov
lahf
mov
mov
jns
jae
test
mov
mov
push
add
iret
popf
xchg
sub
fwait
xchg
push
push
jmp
mov
push
push
inc
xor
sbb
mov
mov
sbb
and
adc
(bad)
mov
fucomp
and
movs
jmp
out
jge
or
nop
or
les
jg
stos
ja
lahf
inc
(bad)
push
mov
data16
push
mov
jae
lods
pop
gs
or
scas
mov
lods
jle
icebp
push
sub
sbb
sub
ret
jmp
hlt
jp
in
dec
jg
mov
push
data16
push
sub
stos
in
or
push
in
pop
stc
dec
dec
jmp
ins
test
sub
push
pushf
cmps
sub
mov
xchg
repz
xchg
leave
rcr
mul
jle
xchg
sbb
imul
mov
(bad)
outs
mov
jno
pop
imul
and
stc
fcomp
ins
jg
xabort
xchg
jns
ror
into
mov
mov
xor
and
pop
stc
adc
iret
pop
(bad)
in
ret
ret
dec
shl
loop
lea
sub
cmp
sahf
or
adc
nop
mov
imul
mov
arpl
mov
pop
pop
scas
cmp
mov
neg
(bad)
call
outs
sub
in
nop
fidiv
dec
jne
mov
mov
in
clc
sbb
shl
jne
nop
pop
xor
adc
jecxz
xor
push
sub
pop
sub
les
lea
fs
jl
xor
psrlw
inc
pop
cmp
lods
ds
retf
jo
xor
dec
outs
cli
and
dec
aad
or
add
adc
test
ftst
xor
stc
stos
adc
rol
dec
mov
iret
call
push
and
pop
pop
adc
jg
and
jmp
fld
pop
and
fldenv
fist
test
test
mov
mov
enter
xchg
add
mov
int3
hlt
cmp
xor
xor
or
lahf
shl
mov
pop
sbb
lds
adc
outs
(bad)
push
mov
cmp
pop
pusha
adc
push
ret
jae
push
mov
mov
fisubr
mov
and
jo
fistp
mov
repz
fs
dec
mov
and
cwde
mov
iret
xor
dec
nop
inc
gs
xor
leave
aad
fcmovnbe
idiv
stos
mov
pop
mov
mov
mov
xor
or
xor
xchg
scas
popf
repnz
jae
push
pop
in
outs
pop
fldenv
adc
pushf
dec
test
jb
push
clc
ins
or
cli
into
adc
inc
(bad)
and
retf
sahf
dec
jns
lods
mov
push
add
pop
imul
pop
es
cmps
aas
mov
scas
mov
pop
lods
stc
inc
mov
(bad)
std
loop
mov
mov
dec
adc
xchg
and
iret
out
lea
gs
cs
outs
add
and
int
mov
fcomp
mov
fwait
pop
jg
lods
outs
add
ins
jecxz
aaa
add
daa
mov
addr16
push
add
xchg
pop
imul
rcr
popf
dec
mov
mov
and
imul
dec
imul
out
clc
aad
(bad)
xor
scas
xchg
xchg
rcl
mov
pop
sub
mov
jnp
and
lock
rol
scas
mov
pushf
mov
mov
mov
mov
imul
pop
fisttp
es
xor
loopne
or
push
xor
ss
enter
push
out
jns
inc
stc
jmp
mov
and
pop
mov
inc
pushf
cs
arpl
sbb
sbb
imul
repnz
retf
test
add
xor
test
iret
sbb
pushf
movs
int3
cmps
and
dec
(bad)
cmps
int3
mov
xchg
ret
sub
cs
jno
nop
pop
addr16
add
adc
out
and
jae
(bad)
sti
xor
shl
out
leave
rcl
dec
(bad)
js
aaa
ins
daa
jmp
sbb
inc
sti
ja
out
mov
push
add
and
pop
jmp
shl
adc
retf
or
ror
or
dec
jae
sahf
dec
and
pop
cmp
ja
sbb
in
sbb
and
sti
fwait
xor
ins
ins
je
cmp
or
ss
stc
or
nop
imul
les
jne
dec
cmp
cmps
dec
adc
mov
and
sbb
in
(bad)
pop
repz
jne
cmp
dec
mov
stc
mov
rcr
push
loop
dec
cmps
mov
test
mov
dec
lods
cmp
inc
dec
in
movs
test
push
mov
xor
adc
push
sub
in
gs
sub
mov
test
or
cld
sub
out
push
mov
out
xor
fistp
out
in
mov
push
ja
dec
es
add
int
lahf
out
sti
movzx
nop
xchg
pop
add
mov
rcl
push
inc
js
dec
cld
jns
push
aas
xchg
aas
mov
or
and
lds
add
int
dec
aam
lods
(bad)
mov
sbb
mov
out
js
mov
inc
rcl
mov
or
out
std
mov
adc
cmps
movs
in
jge
(bad)
sbb
and
(bad)
aam
fisub
jg
movs
in
mov
mov
in
arpl
mov
mov
in
lods
pop
adc
mov
push
sub
cwde
cmp
(bad)
xchg
jns
gs
dec
push
xor
movs
in
adc
pushf
or
repz
loop
add
dec
jp
jmp
imul
adc
and
pop
add
push
jb
mov
or
cwde
mov
push
bound
pop
inc
jg
push
or
arpl
js
xchg
jg
ret
test
test
mov
shl
lods
push
gs
mov
mov
xchg
and
mov
add
lea
push
out
loop
xchg
sbb
mov
call
movs
cmp
adc
out
cmp
bound
cmp
push
not
push
stc
jge
(bad)
cmp
int
add
and
sub
mov
mov
shr
lods
repnz
xchg
push
fnstsw
xchg
adc
cmp
jecxz
pop
test
mov
mov
mov
pop
rcr
xor
popf
movs
ja
ins
movs
xchg
in
xchg
(bad)
leave
imul
mov
hlt
xor
imul
jmp
dec
and
dec
inc
sub
inc
loopne
test
ins
inc
lock
pop
pushf
mov
and
push
jae
fs
jno
dec
xchg
pushf
loop
stos
stc
test
sar
cmp
aam
nop
xor
mov
movs
loopne
jne
cmp
(bad)
pop
in
js
mov
inc
shr
jg
push
movs
push
dec
xchg
jo
sbb
xor
cmp
jo
movs
fnsave
std
fcom
dec
sub
mov
scas
adc
jg
xchg
adc
add
push
push
jo
jmp
jmp
jecxz
inc
leave
cmp
lods
fidivr
jne
fsub
sub
in
test
inc
jp
adc
pop
enter
mov
loop
ret
sub
cmps
das
call
jl
mov
leave
mov
cmp
outs
stc
ins
dec
arpl
mov
xchg
dec
jne
adc
pop
cdq
div
stos
mov
adc
test
dec
(bad)
inc
jmp
add
les
mov
mov
cmp
sbb
call
repnz
mov
ucomiss
lods
push
scas
outs
jmp
pop
lea
cmp
icebp
jbe
pushw
cmp
inc
jg
push
mov
shl
aad
jmp
data16
cmp
jb
sbb
pop
cmp
cmps
inc
cmp
js
iret
inc
mov
xchg
aam
dec
fmul
gs
xchg
out
dec
test
dec
rol
int3
and
mov
jne
pop
cmp
ja
(bad)
and
popf
inc
add
inc
scas
mov
lds
push
ja
push
fadd
add
hlt
mov
sbb
imul
scas
jb
outs
inc
push
sbb
inc
popa
cli
rcl
push
inc
pop
(bad)
scas
pop
(bad)
xor
lea
sbb
and
test
fadd
sar
add
xor
dec
pop
xchg
mov
add
sub
mov
call
push
push
in
mov
cmc
pop
adc
ins
fsub
dec
jmp
dec
xchg
xchg
mov
ret
mov
fcmovbe
add
and
(bad)
loopne
out
stos
sub
mov
aaa
jae
stc
cld
push
mov
shr
mul
in
movs
push
aaa
xchg
jmp
mov
add
dec
sub
pop
jbe
aas
inc
xchg
xchg
mov
add
mov
xchg
fstp
stc
faddp
in
into
mov
and
jl
(bad)
sar
mov
(bad)
pop
sub
dec
fmul
inc
je
mov
cs
jns
imul
jns
cmp
pop
in
pop
pop
push
repz
cmp
stos
mov
pop
std
(bad)
sub
jnp
outs
mov
mov
loope
retf
(bad)
inc
pop
cdq
jmp
or
jns
rcr
mov
cmps
sbb
scas
(bad)
pop
sbb
xor
mov
imul
ret
mov
aas
dec
push
push
mov
loope
mov
in
mov
mov
cmp
scas
enter
mov
dec
movs
push
loopne
pop
ret
push
mov
test
push
(bad)
das
test
and
(bad)
cmp
inc
test
add
pusha
(bad)
repnz
rcr
ret
dec
ds
cmps
sbb
(bad)
(bad)
jno
test
out
daa
mov
mov
outs
nop
inc
mov
cmp
cmps
scas
cmps
xchg
aad
cmps
jge
mov
push
outs
aam
add
in
mov
or
xor
aaa
pop
mov
outs
pop
or
rol
or
sti
jbe
stc
and
scas
adc
add
icebp
mov
dec
icebp
jns
inc
mov
(bad)
adc
xchg
imul
aam
movs
dec
fwait
mov
and
ins
adc
xchg
pop
ins
cmp
push
sub
lods
cs
jo
pop
mov
sbb
xchg
jecxz
mov
adc
cs
push
aad
adc
pop
loop
and
pop
jmp
retf
stos
pop
xor
jl
jmp
push
sub
ins
sahf
add
xchg
cdq
(bad)
adc
sahf
or
sbb
sbb
arpl
into
lds
stos
fild
sub
cli
cli
loop
push
push
or
jmp
out
test
or
mov
std
iret
sub
mov
nop
inc
add
xchg
jl
jle
pop
mov
mov
inc
push
mov
xor
xor
cli
add
outs
hlt
cs
mov
cld
or
arpl
cli
mov
scas
es
mov
lods
mov
test
lock
sti
loopne
jno
add
out
dec
dec
xchg
dec
(bad)
adc
push
loope
jae
jg
(bad)
test
sbb
jae
cmp
(bad)
jns
addr16
or
jmp
mov
ffree
jmp
fdivr
loop
inc
hlt
pop
xor
or
loop
mov
lahf
push
in
in
dec
ss
loope
ficomp
push
daa
mov
push
jle
sbb
pushf
sbb
jo
add
lds
popf
push
mov
or
addr16
adc
cmp
loopne
jae
leave
sub
pusha
add
sbb
mov
sbb
repnz
add
shl
lods
bound
xchg
leave
test
clc
outs
sbb
push
pop
sub
and
sbb
cmp
enter
pop
or
jle
xrelease
dec
std
sub
xchg
mov
data16
fisubr
push
jnp
mov
loopne
xor
aaa
aad
jmp
nop
cmp
repz
sub
push
pop
ret
jmp
aam
sbb
add
jp
ss
std
jl
mov
lea
or
leave
mov
lea
out
sahf
movs
jae
adc
dec
jl
add
fiadd
lahf
pop
in
adc
push
or
call
enter
mov
fild
mov
ins
jmp
aad
sub
cld
mov
mov
mov
or
push
push
cmp
xchg
xor
push
adc
cwde
repnz
push
jne
in
inc
mov
fs
pusha
sub
adc
pop
mov
fwait
lock
xor
stc
mov
pop
sub
adc
mov
jne
mov
shl
lods
pop
retf
mov
ror
pop
pop
adc
cs
test
sti
xrelease
inc
cdq
jno
fist
push
scas
(bad)
cmp
xchg
call
fbld
add
add
sbb
and
cmp
mov
icebp
adc
mov
daa
mov
test
cwde
jmp
into
cmp
sub
cmp
hlt
push
dec
add
jmp
or
repz
mov
test
mov
mov
cwde
jmp
lods
mov
mov
ret
push
test
fcmovu
and
and
cdq
jge
mov
pop
je
xchg
shr
push
adc
xchg
push
popa
dec
sbb
or
popa
jae
pop
pop
into
inc
nop
push
inc
repnz
(bad)
or
iret
test
jp
popf
aad
sub
fcom
xor
dec
je
or
movs
out
in
in
add
sbb
arpl
jg
dec
sbb
mov
mov
mov
xchg
imul
sar
push
adc
retf
sbb
fisub
das
cwde
or
fild
mov
stos
cmp
cmp
lahf
hlt
(bad)
sbb
imul
jp
jg
jno
fwait
inc
xchg
shr
test
pop
lods
add
add
imul
(bad)
lea
test
jbe
xor
sbb
rcr
aam
mov
fmul
mov
int3
fidivr
push
sub
or
jae
and
mov
jmp
mov
xlat
ins
adc
bound
lds
mov
push
and
(bad)
sbb
pop
pop
sub
popf
push
test
cmps
xchg
fnstsw
in
inc
adc
ret
mov
mov
ficom
push
int3
stc
fcomp
xor
adc
icebp
imul
dec
(bad)
or
lods
push
in
adc
out
sub
js
stos
dec
adc
bswap
out
clc
enter
mov
dec
or
and
fdiv
mov
xor
idiv
jmp
mov
and
clc
adc
imul
mov
dec
aam
int3
push
arpl
adc
iret
call
cmps
adc
jnp
popf
pop
push
je
test
inc
shr
mov
jnp
sub
mov
cmp
push
pop
ss
sbb
xor
clc
outs
add
sub
mov
icebp
lods
mov
cmps
cmp
in
fisub
mov
push
dec
popf
in
cmp
xchg
mov
(bad)
(bad)
mov
std
fcomp
push
and
jmp
cmp
xchg
or
pop
jnp
loop
sbb
ja
pop
pusha
stos
bound
in
adc
out
rcl
jne
sub
mov
bound
and
scas
ror
push
xor
icebp
ret
add
scas
std
aad
xor
xchg
add
add
or
cmp
dec
xchg
jmp
jno
mov
add
fcom
in
mov
sahf
xchg
int
pop
call
popf
push
adc
jge
pop
mov
les
pop
sub
mov
lods
psubd
jo
movs
cld
test
sub
sub
leave
push
(bad)
mov
jne
sahf
push
retf
inc
sbb
outs
rcl
ds
add
mov
cmc
and
add
push
sbb
or
(bad)
xchg
adc
xor
push
jb
jne
dec
and
cdq
pop
loop
rol
push
add
or
xchg
pushf
ret
jmp
popa
pop
inc
mov
mov
and
sahf
cmp
inc
push
test
arpl
aad
bound
push
outs
(bad)
xor
pop
loopne
cwde
dec
ficomp
add
jge
mov
fstp
int
pop
xor
sbb
cli
pop
jnp
adc
lods
ret
xor
pop
rcl
das
mov
fdivr
add
and
mov
in
cld
(bad)
cmps
jns
retf
jmp
sub
scas
mov
xlat
call
push
in
out
popf
or
out
ins
mov
lea
push
jne
arpl
ror
loop
in
cmp
lahf
push
ins
ret
addr16
jbe
sbb
cmp
jae
mov
(bad)
dec
mov
jmp
jecxz
mov
cmp
dec
pop
dec
jb
cmp
out
mov
xchg
jne
sbb
xor
cmp
int
std
(bad)
in
pop
data16
lock
sti
imul
sub
push
into
sbb
in
mov
test
xchg
popa
sbb
call
int
iret
je
aas
jg
mov
add
push
in
sub
mov
rcr
aam
int
xchg
mov
push
lock
rcl
scas
sub
scas
cdq
or
fwait
sbb
ror
dec
xor
(bad)
push
hlt
push
(bad)
sbb
mov
scas
jno
sub
je
and
mov
test
xor
push
dec
add
sub
imul
outs
int
ret
pop
(bad)
push
retf
sti
movs
push
aaa
iret
neg
(bad)
je
jle
repnz
dec
(bad)
imul
imul
or
das
cmp
cmc
dec
imul
in
sbb
jle
pop
xchg
daa
movs
adc
or
adc
adc
fidivr
ror
xor
pop
out
jns
xchg
mov
sub
rcr
mov
xchg
mov
stos
sahf
test
push
ror
nop
rcl
push
mov
int3
int
push
jns
ins
out
jmp
mov
imul
in
jg
inc
jno
mov
leave
faddp
mov
inc
out
or
sbb
cwde
jb
aad
sbb
rol
or
fldenv
js
xor
cmps
cmp
xor
sub
sub
ret
sbb
fnstsw
mov
mov
shr
retf
(bad)
ficomp
inc
mov
push
jmp
jp
in
out
lods
push
mov
clc
inc
sahf
int
retf
aaa
fldcw
and
hlt
iret
(bad)
(bad)
js
jnp
test
fiadd
mov
mov
pop
fnstcw
push
ss
bound
mov
cmps
mov
std
inc
lods
ror
jmp
dec
fadd
outs
dec
or
mov
mov
dec
mov
mov
enter
daa
and
lds
mov
mov
adc
in
jnp
sbb
adc
mov
in
stos
pmulhuw
aad
xchg
mov
jl
call
add
pop
gs
sbb
mov
scas
mov
mov
and
cmps
repnz
push
(bad)
jne
cdq
xchg
mov
(bad)
add
repnz
and
mov
push
add
or
inc
sub
or
mov
mov
in
stc
xchg
mov
scas
bound
mov
pop
jnp
sbb
xchg
lods
lods
loopne
cmp
in
mov
arpl
lods
in
ds
fs
cmps
jmp
ficomp
mov
lods
dec
rol
jle
test
dec
mov
je
mov
mov
jo
mov
retf
iret
(bad)
shl
ds
jecxz
lahf
jl
pop
jmp
call
scas
add
or
mov
sbb
es
addr16
cmp
or
mov
ror
xchg
mov
(bad)
es
jae
dec
xor
loopne
imul
and
cs
gs
mov
xor
mov
adc
sub
iret
xchg
inc
jmp
adc
and
xchg
stos
xchg
aad
xchg
inc
daa
jecxz
dec
xor
(bad)
jmp
pushf
out
stc
int3
xlat
into
inc
xchg
call
nop
or
jmp
mov
and
and
cmp
shl
push
cli
sbb
jecxz
mov
scas
fsubr
popa
and
add
loopne
or
pop
sub
imul
js
xor
repz
jge
lahf
std
cmp
dec
pop
and
inc
jmp
jle
popa
dec
dec
call
jns
mov
inc
xchg
test
sbb
adc
call
sahf
pop
pop
dec
addr16
xchg
cmp
ss
push
in
xor
fxch
push
les
out
lahf
nop
stos
jns
loop
jo
sti
adc
dec
ins
jecxz
mov
xchg
nop
in
mov
or
cwde
xchg
push
jmp
mov
shl
push
push
mov
int
popa
pop
and
pop
dec
stc
push
or
fild
xor
sbb
cdq
aad
ins
movs
aas
dec
in
cmps
out
sahf
xor
inc
sub
sub
test
loope
inc
or
xchg
(bad)
cmp
rcl
jae
mov
ins
add
retf
lahf
dec
xchg
xchg
test
adc
ss
xchg
mov
icebp
dec
xchg
mov
adc
adc
mov
aaa
cmps
xor
popf
loop
mov
sbb
lahf
cmp
jmp
jp
jo
inc
dec
in
adc
in
movs
jecxz
cwde
or
(bad)
sahf
ss
lods
loop
nop
(bad)
(bad)
jnp
cli
popa
jae
or
daa
das
leave
cdq
dec
mov
push
aad
mov
pop
cmp
movs
paddusb
je
dec
popf
leave
jbe
imul
sbb
mov
adc
inc
jecxz
dec
loope
sub
test
outs
mov
xchg
and
(bad)
loope
lds
mov
add
add
dec
out
jp
cdq
jg
in
sahf
loop
xchg
or
fadd
pop
fndisi(8087
or
cld
mov
push
push
push
in
pop
aaa
or
sahf
ins
xchg
mov
jg
xchg
jmp
add
icebp
clc
in
cmps
dec
ss
rol
dec
mov
mov
pop
aaa
mov
xchg
mul
mov
mov
(bad)
jmp
inc
movs
adc
push
fisubr
out
mov
loopne
(bad)
inc
je
add
dec
leave
iret
xchg
pushf
mov
mov
or
les
inc
ss
sbb
push
into
add
push
xchg
xor
imul
ret
push
(bad)
loope
imul
(bad)
call
sbb
rol
out
aaa
and
in
popa
sub
xor
cli
sbb
ss
scas
(bad)
clc
addr16
adc
rcr
mov
outs
or
inc
push
sub
mov
sbb
mov
sbb
int3
cmc
(bad)
pop
cmp
xor
push
adc
retf
mov
xchg
xor
sbb
test
fistp
nop
and
dec
inc
xor
or
idiv
std
cmp
fxch
stos
push
cmp
sub
cmp
mov
icebp
data16
mov
ret
in
inc
add
pand
add
mov
pop
int
das
nop
push
xchg
inc
cmp
sub
dec
cmc
jg
push
xchg
sub
enter
inc
sbb
fld
xchg
std
jmp
ss
xchg
ss
mov
pusha
sbb
aam
retf
repz
jbe
outs
cmc
mov
jb
xchg
inc
pop
xor
mov
mov
lds
push
cmps
jecxz
arpl
jmp
adc
xchg
cli
daa
or
pop
mov
out
ficom
jae
in
rcr
sub
inc
f2xm1
sti
pop
mov
sar
pop
(bad)
in
mov
fld
and
ins
lods
cmps
mov
push
dec
push
cmp
or
adc
push
and
ins
clc
add
sbb
fist
adc
enter
mov
call
dec
enter
mov
jne
out
call
and
test
pop
xchg
ds
out
cwde
jmp
xor
mov
rol
loopne
jp
cmp
xchg
(bad)
pop
dec
repnz
les
sbb
and
add
out
hlt
adc
repnz
jge
test
shl
sub
sar
cmp
jae
rcr
xor
mov
lahf
cwde
pusha
mov
call
jp
mov
add
inc
shl
mov
ds
pop
out
cmp
and
call
sub
sub
jnp
push
aam
mov
dec
sub
icebp
in
xchg
ss
adc
xor
xchg
sahf
into
fst
repnz
fstp
or
enter
les
loop
inc
mov
mov
cs
push
dec
mov
test
(bad)
mov
cmp
ret
in
sub
fxch
and
out
fld
mov
retf
pushf
jg
hlt
scas
cmp
fadd
mov
loopne
inc
es
mov
loop
scas
out
mov
sub
xor
mov
js
mov
stos
xor
fucomip
in
mov
sar
fisttp
scas
cmp
jnp
call
sbb
jmp
push
xchg
nop
mov
addr16
adc
dec
(bad)
nop
std
shl
in
xchg
and
repnz
xlat
mov
(bad)
imul
or
loopne
push
inc
aam
mov
or
mov
das
test
popa
shl
pop
adc
ds
bound
and
in
add
and
outs
fild
cmp
adc
clc
dec
cld
mov
daa
popa
mov
and
lea
adc
popf
inc
cmp
loope
in
cs
stc
mov
mov
test
gs
icebp
inc
shr
adc
sub
xor
xor
(bad)
sub
inc
and
out
ret
int
dec
adc
lods
mov
js
add
pop
pop
ins
test
and
mov
jle
inc
mov
sub
adc
dec
mov
outs
mov
adc
aad
test
xlat
pop
addr16
out
jg
push
or
(bad)
rcr
mov
rol
dec
pop
mov
aam
call
stos
pop
jne
mul
pop
fbld
not
ss
sbb
aam
sbb
push
sbb
mov
adc
cdq
mov
jmp
mov
dec
into
in
int
mov
ss
in
shl
sub
inc
sbb
cmc
xchg
cmp
je
inc
dec
sub
addr16
(bad)
fbstp
mov
mov
fmul
fs
lods
ror
fwait
inc
stc
mov
pop
sub
in
dec
pushf
jmp
ficomp
add
out
inc
push
retf
cdq
dec
es
pop
ins
jmp
and
shl
push
add
xor
and
inc
jp
push
or
sbb
mov
fisub
push
test
call
(bad)
out
lods
test
out
je
aad
inc
pop
push
sbb
cmps
lahf
leave
jecxz
and
push
xchg
push
jmp
inc
jbe
pop
cs
sahf
daa
cmc
add
dec
loopne
cmp
cmps
sbb
add
outs
lea
dec
or
push
(bad)
fwait
push
inc
xor
(bad)
sub
stc
jmp
das
push
fwait
pop
jns
xor
cmp
std
into
xchg
mov
les
mov
cmp
(bad)
mov
and
inc
fisubr
pop
or
pushf
sbb
push
pop
std
jl
xchg
dec
repz
mov
cmps
outs
lahf
add
sbb
inc
movups
test
popa
(bad)
cli
cmc
repnz
dec
push
xchg
ja
xchg
push
cwde
gs
mov
add
mov
push
add
cmps
lock
das
mov
sbb
loop
sbb
pushf
push
push
sbb
jnp
sbb
retf
iret
int3
(bad)
or
and
pop
enter
xchg
mov
cmp
xlat
xchg
inc
add
fnstenv
lds
sbb
add
test
je
sub
xor
js
fist
into
stos
xlat
sub
and
rcl
sbb
mov
out
(bad)
call
push
mov
xor
pop
xchg
fwait
push
lahf
sub
xchg
popf
xor
pop
fiadd
fwait
stos
loope
push
ins
dec
inc
mov
push
mov
ins
repz
pop
jge
mov
cmp
lds
cmp
mov
jnp
ss
xor
arpl
or
push
(bad)
gs
mov
test
pop
imul
mov
jbe
push
xchg
leave
inc
xor
jno
adc
hlt
sub
inc
jo
mov
mov
aaa
(bad)
jno
in
pop
jecxz
call
jo
inc
retf
xor
cli
mov
test
jne
mov
imul
inc
stos
mov
inc
or
mov
dec
add
(bad)
xchg
or
xor
cmps
stos
and
je
les
sahf
in
ins
out
ficom
xchg
mov
sbb
mov
adc
mov
push
outs
pop
mov
jmp
dec
clc
data16
pop
jmp
cmps
and
(bad)
xchg
cld
out
js
cld
in
data16
pop
push
inc
xchg
sar
ins
or
lods
hlt
xchg
scas
ror
shl
mov
pop
ins
shr
and
cld
addr16
ror
loope
sahf
ja
mov
push
mov
and
ficomp
adc
or
cwde
fwait
pop
cmp
push
mov
jmp
or
movs
dec
out
sbb
into
leave
in
dec
mov
jnp
aam
adc
jae
inc
push
jns
adc
lea
outs
sub
(bad)
out
xor
int
xor
scas
(bad)
out
adc
pop
xor
arpl
or
cmps
ins
dec
pop
outs
fadd
push
cmp
(bad)
pop
ins
and
pop
pop
mov
ror
in
cld
leave
push
jecxz
mov
bound
int
push
inc
imul
mov
mov
(bad)
mul
adc
rcl
pop
data16
add
ins
out
arpl
rcl
ss
xor
hlt
sub
jnp
sub
xor
mov
cmc
imul
add
aam
mov
sbb
mov
cmps
ficomp
call
dec
jmp
je
icebp
inc
pop
xchg
fmul
lds
add
rcr
in
jmp
xor
imul
jecxz
out
cdq
ins
ds
cmp
cld
hlt
sbb
addr16
inc
mov
jmp
xchg
and
jno
(bad)
inc
sub
adc
or
jbe
test
mov
jae
stos
pop
dec
mov
(bad)
test
pushf
push
sti
in
or
adc
mov
push
push
(bad)
push
mov
shr
ins
mov
xchg
push
xchg
out
push
jne
in
retf
and
punpcklwd
iret
(bad)
xchg
inc
fstp
lods
or
mov
movs
xchg
pop
jmp
sbb
pop
mov
inc
adc
jmp
arpl
sbb
stos
fcomi
stos
lea
(bad)
xor
aad
jmp
mov
jno
add
sbb
fwait
bound
pextrw
mov
xor
out
sub
add
pop
inc
xacquire
sbb
mov
and
icebp
sbb
fld
cmc
leave
inc
jg
push
in
scas
inc
push
xlat
push
pop
mov
data16
xchg
xchg
(bad)
outs
jnp
cmp
movs
sbb
iret
inc
fsubr
dec
jge
in
sbb
in
call
push
mov
xchg
xlat
or
cmp
xor
cwde
es
jno
jg
fucomp
dec
fiadd
idiv
cs
mov
sbb
jo
sbb
rol
ss
cmp
inc
xchg
das
or
mov
mov
jae
(bad)
mov
mov
pop
ins
rcr
fcom
bound
jp
mov
in
arpl
addr16
xchg
push
nop
push
dec
outs
cmps
add
ror
not
xchg
adc
xchg
xchg
rcr
rcl
mov
call
mov
lods
add
imul
movs
xchg
sbb
sub
fadd
cmp
cli
adc
xlat
fcomp
inc
stc
or
clc
dec
jge
and
cld
lds
and
dec
addr16
data16
(bad)
mov
xor
aam
fisub
cdq
cmp
lds
movs
dec
and
lods
sbb
or
das
push
adc
int
retf
call
mov
icebp
push
jg
add
and
xchg
loope
adc
popa
imul
lea
pop
lods
int
out
ffreep
cmp
(bad)
repnz
jo
iret
cmps
outs
sub
adc
inc
cmp
push
jnp
pop
xor
stos
out
cmp
stos
mov
in
out
pop
jne
cld
aam
sbb
mov
pop
dec
fidivr
xchg
push
sub
or
xchg
popa
inc
sbb
and
jne
or
sbb
(bad)
call
sbb
mov
xor
xor
push
pop
lods
adc
push
cmps
adc
std
or
mov
sub
xchg
rol
imul
mov
adc
daa
pusha
cmp
out
and
sub
mov
xlat
jmp
arpl
mov
or
xchg
xor
je
jae
add
test
cmps
cmps
jge
fs
sar
push
xchg
push
test
cwde
push
icebp
in
repnz
cmc
lods
loope
dec
ins
test
fidivr
jmp
pop
mov
jmp
jmp
xchg
pop
xchg
xchg
sbb
push
cs
and
das
push
aas
mov
(bad)
xor
push
in
call
add
popf
aad
stos
mov
test
js
add
sub
push
sbb
imul
adc
lock
sub
stos
xchg
sbb
daa
inc
fild
sub
(bad)
mov
inc
sub
push
add
mov
or
popa
lods
sbb
sub
movs
ja
dec
cmc
je
sub
push
mov
cmps
cmps
xor
mov
lea
cmps
daa
pop
fstp
scas
xchg
int3
sbb
retf
xor
ret
fs
pop
mov
jl
out
sar
cmp
dec
push
jmp
jmp
add
cmp
or
sub
add
out
mov
sar
add
and
retf
loope
or
sub
xchg
ja
xlat
(bad)
mov
(bad)
dec
mov
jg
ins
out
xor
inc
test
fiadd
dec
mov
leave
inc
and
imul
or
jbe
mov
outs
xchg
jle
xchg
add
aad
test
xchg
lahf
rcr
pop
inc
inc
cmps
jp
or
fistp
iret
ds
xlat
mov
mov
cld
inc
or
loopne
and
pushf
and
imul
outs
sub
mov
pmulhuw
dec
pusha
sbb
movs
sub
or
loop
pop
sbb
jnp
fcmovbe
jl
lds
pop
fisubr
(bad)
push
fcom
in
aad
pop
cmc
mov
adc
jo
popf
jg
outs
mov
fdiv
xchg
mov
sahf
out
mov
cmp
jl
push
sbb
jge
adc
mov
(bad)
loop
jb
add
mov
xchg
push
and
pop
or
or
xchg
push
scas
int
xchg
dec
aaa
mov
push
or
cs
stos
popf
daa
xlat
mov
mov
sub
dec
jmp
les
push
repnz
lahf
cmp
adc
mov
imul
daa
pop
dec
fnsave
stos
pusha
push
dec
imul
mov
cli
jecxz
fs
sub
std
jp
push
leave
aaa
in
adc
sub
mov
pushf
cmp
lahf
bound
mov
xchg
sbb
adc
movs
pop
aaa
lea
aad
in
dec
push
xor
fild
push
jg
jle
jg
out
in
jno
mov
cmps
adc
mov
pop
das
adc
xlat
xchg
sbb
add
(bad)
movs
pushf
xchg
cli
sub
pushf
push
shl
or
repnz
inc
xor
jb
in
add
shr
sar
sub
mov
test
fisubr
cmp
out
mov
inc
jle
lahf
mov
sbb
pop
pushf
push
(bad)
loopne
mov
mov
pushf
adc
xchg
mov
jnp
push
data16
mov
cmp
sahf
mov
out
or
jecxz
inc
pop
push
repz
out
aad
push
mov
push
jmp
(bad)
cmp
outs
xchg
call
xchg
fisubr
jne
and
inc
rol
pop
enter
loope
(bad)
mov
ss
es
in
pop
repnz
mov
fcom
fstp
push
das
mov
dec
popf
sbb
or
(bad)
mov
pop
fnstcw
cmc
pop
repnz
sub
pop
loop
or
sbb
out
fsub
in
cwde
popa
fild
iret
push
pop
adc
rcl
jmp
jno
xor
and
ss
inc
loope
aas
js
mov
sub
mov
stos
imul
push
bound
popa
sub
push
and
mov
xor
loopne
ja
ret
xchg
mov
and
or
mov
sub
pusha
add
mov
and
in
dec
pop
push
not
mov
fild
std
sahf
cmp
add
and
mov
mov
stos
pop
mov
lea
mov
imul
lea
lahf
push
enter
(bad)
loopne
add
movs
inc
or
and
mov
push
cmps
bound
mov
inc
mov
pop
aas
mov
mov
mov
in
fcmovu
icebp
sub
dec
xor
cmp
(bad)
mov
mov
pop
(bad)
fiadd
dec
or
js
cmp
adc
push
add
stc
shl
and
mov
call
inc
imul
nop
icebp
add
dec
mov
cmp
cdq
cmp
add
mov
fmulp
mov
or
std
xchg
xor
scas
bound
in
inc
rcr
(bad)
push
mov
cmp
push
ins
cwde
pop
repnz
pop
sbb
xor
test
mov
ret
add
pop
mov
popf
ins
lahf
icebp
jbe
icebp
xchg
mov
jmp
cmp
(bad)
fisubr
jg
dec
xlat
adc
mov
rcr
lods
push
xor
shl
mov
std
push
xchg
or
inc
sub
sti
std
mov
dec
xchg
and
sub
or
mov
out
sub
xor
mov
sub
popa
add
dec
mov
cmp
mov
clc
adc
mov
xchg
into
dec
pop
call
xchg
xor
sbb
dec
pop
pop
sbb
call
scas
arpl
xchg
sahf
nop
cmps
test
add
fisttp
inc
stos
or
or
mov
push
mov
lds
push
or
ret
js
hlt
xor
add
outs
jns
push
ret
je
lea
call
dec
push
sub
mov
(bad)
fwait
outs
stos
popf
mov
inc
xor
and
cmp
jo
data16
add
inc
dec
cs
xchg
mov
loop
js
and
inc
jle
pop
daa
add
cmc
pop
lock
mov
stc
shr
jmp
pushf
mov
cmp
shl
adc
jecxz
mov
or
jle
icebp
mov
out
cmc
ficomp
call
mov
call
fucompp
(bad)
icebp
fistp
les
out
pusha
inc
add
cmps
xor
ret
outs
fldz
ret
or
ss
push
outs
ret
sbb
pop
cmp
lock
test
cmp
mov
sub
cmp
dec
xchg
jnp
mov
mov
out
pusha
ds
imul
jp
ins
jne
loopne
outs
in
rcl
xor
jmp
repz
ins
push
jae
in
add
sbb
arpl
push
cmp
scas
lds
add
movs
mov
cld
jo
mov
jb
out
push
test
scas
xor
out
aaa
adc
ror
mov
scas
shl
gs
jbe
cmp
add
xor
inc
or
loop
xchg
jno
push
rep
push
inc
icebp
ins
xor
ds
dec
popf
repnz
mov
mov
jbe
repz
dec
xchg
jb
mov
adc
push
pop
rol
in
fwait
push
inc
mov
sub
dec
adc
cmp
jecxz
iret
mov
aam
fsub
mov
(bad)
xlat
pusha
push
outs
fild
pusha
and
xchg
dec
push
push
test
adc
push
(bad)
inc
sbb
enter
test
daa
sbb
fmul
push
imul
and
mov
imul
xor
cmp
sbb
jl
outs
jne
mov
dec
mov
lds
mov
test
push
xor
pop
mov
(bad)
mov
inc
adc
jmp
jp
(bad)
std
xor
fisttp
dec
dec
mov
push
or
pushf
(bad)
cwde
or
sbb
mov
stc
cli
dec
lods
(bad)
fwait
inc
int
jecxz
xchg
push
rol
inc
pushf
icebp
rcr
in
fcomp
push
sub
(bad)
mov
iret
daa
lahf
pop
sbb
iret
sti
and
(bad)
pop
cmp
js
jmp
or
imul
jl
mov
movs
mov
push
xchg
mov
das
xor
jns
or
data16
xor
cmp
or
cs
adc
push
jmp
and
pop
out
call
fwait
xchg
ins
fcomp
inc
sub
sbb
dec
xor
int
fdiv
xchg
test
jle
push
aas
jo
sub
mov
dec
push
pusha
inc
cmp
ret
lods
xor
shr
daa
mov
test
xor
mov
popa
in
sbb
frstor
movs
aaa
mov
sbb
int3
jbe
xor
fisubr
xchg
inc
leave
sub
inc
(bad)
adc
or
nop
dec
popf
jp
push
add
std
std
scas
sti
push
loopne
fwait
dec
popa
mov
xor
adc
test
jg
cmp
jecxz
mov
adc
sti
dec
mov
inc
mov
arpl
cli
jae
xchg
jo
and
inc
or
imul
aam
(bad)
jecxz
pop
add
cmps
pusha
adc
push
jl
addr16
push
in
mov
sub
jnp
sub
mov
icebp
lock
sbb
jno
jg
sbb
icebp
inc
inc
jmp
sti
in
retf
repz
scas
xor
xchg
adc
xor
mov
fild
aaa
cs
imul
loopne
in
call
cli
sbb
or
bound
outs
jmp
inc
mov
arpl
jae
addr16
sub
mov
into
push
js
rcl
imul
cmp
xchg
call
enter
push
loope
push
adc
jbe
xlat
aas
sub
mov
or
xor
lods
sar
push
cmp
pop
(bad)
dec
out
push
pop
pop
out
pop
dec
jo
test
ins
mov
push
cmp
jp
daa
xor
mov
icebp
push
rcr
div
fwait
ins
inc
or
cmp
jmp
xchg
cld
loop
cmp
push
adc
jg
add
arpl
cmp
bound
push
ret
and
mov
inc
(bad)
xchg
test
or
pop
popa
sbb
inc
neg
adc
pop
lods
stc
push
cmp
mov
fidivr
outs
xor
mov
pop
mov
stos
jecxz
(bad)
enter
movs
iret
ret
sbb
sub
sub
jmp
xor
stc
clc
sub
test
push
je
jae
pop
jbe
jbe
xchg
push
ins
mov
xor
push
cmp
mov
pop
in
inc
mov
aas
adc
mov
rcr
or
and
inc
cwde
test
imul
xchg
ret
sub
xor
and
sahf
push
jbe
pushf
mov
pop
enter
add
fidiv
pushf
fmul
leave
jg
std
and
xor
fwait
es
and
fnsave
pop
sbb
and
fld
popa
xlat
rcr
les
scas
push
and
stc
sbb
aaa
int3
sbb
fadd
or
dec
mov
add
and
dec
mov
loope
xchg
sbb
int3
data16
adc
call
add
push
inc
adc
pop
test
fwait
data16
jl
fimul
inc
jl
pushf
popf
jg
inc
hlt
iret
push
movs
test
mov
mov
push
pop
mov
mov
(bad)
xchg
dec
pop
into
fldcw
sub
add
repnz
dec
mov
mov
sub
xchg
add
mov
push
mov
imul
jmp
jbe
ss
push
mov
test
cli
xchg
lods
adc
inc
pushf
movs
mov
or
add
xor
jmp
inc
arpl
mov
scas
add
mov
push
jbe
iret
add
push
das
pop
add
xchg
test
fldenv
lahf
cmp
shl
push
call
sti
icebp
fadd
xchg
cmp
inc
jns
bound
pop
out
ins
iret
xchg
std
ret
out
adc
in
cmp
jno
out
unpckhps
out
loope
dec
popa
xchg
jmp
add
push
lds
cld
push
call
xlat
pusha
lea
dec
loop
(bad)
sub
ud2
xchg
popa
in
iret
scas
imul
repnz
ror
inc
sbb
scas
mov
mov
sbb
xor
imul
rcl
sub
xor
xor
push
cld
hlt
jmp
cmp
xchg
mov
loopne
movs
movs
inc
mov
out
scas
mov
mov
test
mov
mov
or
push
dec
sub
loopne
loope
sbb
test
xor
(bad)
js
adc
pop
(bad)
in
sqrtps
jmp
dec
fild
sti
push
stc
ins
add
call
push
or
push
inc
mov
xor
call
out
sbb
mov
sbb
jmp
sub
stos
sbb
and
sub
cmp
push
cmp
mov
je
xlat
add
test
xor
es
retf
das
in
dec
stos
arpl
(bad)
es
jno
es
inc
mov
jmp
jg
jne
adc
repz
imul
imul
inc
jb
xor
pop
bound
adc
mov
inc
pop
shl
icebp
xor
clc
leave
retf
les
jbe
mov
cmps
jmp
test
inc
xchg
aad
cmps
popa
adc
jmp
(bad)
jns
mov
mov
or
cmps
scas
inc
push
inc
jp
bound
xchg
(bad)
push
idiv
repz
adc
enter
iret
adc
ins
shr
adc
loopne
cmp
cli
xchg
sub
lds
outs
xchg
mov
adc
lock
xchg
sub
inc
mov
jbe
or
push
repz
dec
cmp
sub
xor
push
xlat
or
xchg
repz
and
scas
or
and
stos
mov
mov
fdiv
jns
hlt
gs
cmp
jg
mov
mov
movs
adc
and
cs
cmp
cmc
es
jmp
push
(bad)
pushf
xchg
push
(bad)
loop
mov
jae
mov
in
div
xor
test
int
pop
dec
mov
mov
dec
mov
pop
push
jge
lods
daa
ret
or
xchg
inc
scas
fst
daa
mov
xor
bound
mov
movs
and
lock
retf
mov
cmc
(bad)
pop
xor
test
adc
jge
push
or
xchg
shl
aad
popf
mov
pop
adc
push
dec
retf
add
xchg
sahf
sub
push
pop
mov
cld
push
sbb
inc
jge
pushf
fcomp
add
rol
aad
xchg
lods
add
pop
cmp
out
mov
push
xchg
cmp
and
ds
xchg
pop
pop
mov
inc
pushf
cmp
shr
adc
(bad)
pop
test
outs
mov
push
int3
addr16
scas
mov
inc
sub
push
mov
test
xchg
fiadd
enter
(bad)
fadd
mov
push
not
pop
arpl
pop
add
into
sub
sub
movs
inc
(bad)
and
hlt
loop
les
mov
cmp
lock
lahf
and
in
lods
jge
sub
or
cmp
push
inc
cmp
mov
or
or
lock
dec
sub
shl
mov
add
fild
movs
lahf
lds
es
sqrtps
mov
rol
xor
jge
leave
jecxz
push
fcomp
fucomip
clc
adc
xchg
popf
fst
(bad)
jecxz
adc
out
or
jmp
in
pop
gs
dec
lock
or
jmp
pop
jle
cmps
push
ja
push
cwde
xor
push
js
mov
inc
xchg
push
jle
pop
mov
mov
inc
mov
out
stos
rol
mov
mov
fwait
sub
dec
rcr
xchg
in
cs
sbb
clc
scas
sub
mov
cmp
out
xchg
mov
dec
jl
lods
mov
and
fimul
cli
jmp
pop
cmp
dec
hlt
lea
addr16
push
mov
mov
leave
jno
loopne
jo
out
adc
jle
inc
lds
cmps
rol
push
js
outs
clc
movs
jae
test
or
hlt
lods
pop
mov
xchg
leave
xor
sar
aaa
and
jmp
vpcmpgtw
int3
lods
xchg
mov
stc
adc
es
push
stos
test
jle
inc
ds
and
mov
and
sbb
rol
aad
jae
mov
not
jmp
fisubr
rcl
cmc
shl
aad
out
aas
pop
test
aam
lock
xor
xchg
mov
mov
lods
cmps
lds
mov
push
xchg
inc
fst
inc
or
daa
fidivr
outs
scas
je
scas
cdq
dec
dec
or
aaa
cwde
add
sahf
ins
test
(bad)
and
mov
mov
ftst
mov
fwait
outs
std
pop
pop
out
cwde
mov
xchg
mov
movs
je
popf
out
adc
lds
or
test
test
or
ss
jbe
pop
mov
fs
mov
fisubr
cmp
dec
cmp
dec
pusha
xchg
add
jno
inc
pop
idiv
imul
push
jbe
dec
dec
inc
cmc
std
xlat
sti
cli
inc
stc
out
xor
cmp
daa
neg
sub
lods
rol
xor
cdq
sbb
or
call
shl
mov
retf
loop
les
xchg
mov
dec
rcl
shl
fcom
push
shl
push
mov
mov
mov
or
call
jg
adc
jae
sub
mov
pop
mov
inc
jg
mov
jg
add
into
in
bound
mov
and
ja
add
hlt
test
std
push
out
ins
pushf
xchg
cdq
sub
imul
dec
aam
aas
and
add
adc
xchg
sbb
cmp
push
lods
xchg
cmc
jne
mov
int3
and
or
bound
in
das
push
ss
mov
mov
xor
cs
addr16
adc
dec
repz
pop
mov
jae
pop
mov
jae
push
je
jno
sbb
je
add
out
pop
int3
add
cmp
pop
adc
repnz
or
push
inc
in
repnz
js
mov
mov
fsubrp
sub
enter
sti
call
or
(bad)
ret
rcr
cmp
div
popa
jp
mov
cmp
mov
ror
into
jmp
inc
cmp
jno
jecxz
cmp
sbb
les
or
mov
pop
mov
fnstenv
adc
sub
call
jle
(bad)
adc
sahf
push
test
or
mov
not
sbb
std
pop
out
mov
sti
shl
sub
ja
xlat
lea
push
sub
or
pop
and
mov
xchg
sub
cld
sbb
out
retf
add
pop
das
and
pusha
jge
jmp
add
(bad)
sbb
shl
pop
xchg
in
pop
loope
cli
dec
iret
popf
push
(bad)
dec
test
fs
stos
adc
sbb
fmul
mov
sub
in
xchg
test
inc
mov
mov
mov
fs
outs
mov
lods
cmp
adc
icebp
sbb
push
sub
fld
jae
aaa
lock
jmp
pushf
std
arpl
xor
rol
push
sbb
cmp
call
xor
das
push
cmp
retf
repnz
dec
lock
int
or
mov
xor
ret
add
xchg
inc
iret
repnz
mov
pop
arpl
scas
je
in
shl
mov
popa
js
cmps
cmp
cmc
stos
sbb
push
xchg
push
xchg
fnstcw
mov
cwde
mov
push
sub
push
adc
or
add
popa
sar
or
ins
(bad)
int3
mov
pop
mov
or
and
in
pushf
out
retf
mov
dec
jb
out
and
xchg
stc
push
mov
std
mov
and
ss
test
adc
imul
not
mov
xchg
fld
pop
retf
xchg
cmp
sbb
gs
jg
rol
fadd
jae
jmp
adc
push
ins
mov
jp
xchg
call
mov
(bad)
xor
in
ja
or
mov
mov
inc
mov
loope
jmp
repz
dec
mov
test
rcl
enter
in
push
int
(bad)
mov
sub
leave
ja
pushf
cmp
out
adc
xor
push
or
add
sbb
cld
aam
dec
out
js
test
adc
xchg
out
sahf
inc
sbb
cmps
jge
fcomp
nop
push
dec
inc
shr
mov
xchg
push
in
mov
call
push
lea
arpl
sub
or
jae
inc
neg
aas
pop
add
sub
push
in
dec
arpl
test
mov
imul
test
mov
pop
mov
or
push
loope
stos
mov
cmp
mov
xchg
fwait
enter
out
rcr
push
pop
les
repnz
jae
xchg
sub
mov
push
push
sbb
and
jl
cs
adc
mov
lahf
retf
mov
xor
push
xchg
inc
enter
jnp
mov
sbb
aam
sub
addr16
dec
inc
daa
pop
int3
push
or
in
jecxz
mov
jmp
mov
xchg
out
into
out
data16
sbb
push
pop
cmc
push
jmp
mov
add
jo
jle
and
cdq
call
out
push
xchg
stc
pop
xchg
mov
ja
mov
test
jp
adc
mov
call
shl
imul
push
pusha
add
lods
je
aam
mov
outs
jb
or
mov
aaa
mov
push
pop
and
daa
sbb
cmp
push
cwde
xchg
jl
jle
std
adc
cmp
mov
inc
in
sbb
inc
test
data16
arpl
in
jne
dec
scas
dec
xchg
jge
pop
jb
into
jecxz
mov
sbb
fnstcw
loope
test
cmp
cs
outs
fild
lds
mul
push
add
or
call
pop
lea
pusha
or
pop
mov
cld
lods
nop
sbb
cmp
cdq
daa
sar
pop
scas
stos
in
pop
push
(bad)
push
mov
cmc
adc
sub
imul
sub
adc
int3
das
pop
push
mov
mov
test
jno
(bad)
fisubr
lods
fwait
push
jnp
ret
fs
cmp
not
int
call
cmp
mov
and
sbb
imul
jne
iret
fistp
test
pop
leave
call
cmp
stos
mov
pop
inc
int
out
pop
and
jl
xor
mov
sbb
(bad)
pusha
loop
add
(bad)
js
mov
lock
jno
push
pop
jae
mov
jo
push
push
or
fist
inc
pushf
xchg
rcr
std
and
push
xchg
test
and
cmp
mov
out
cmp
or
pop
push
xchg
cmp
mov
into
adc
xchg
sbb
inc
int3
loop
fnstsw
cmp
dec
cmp
mov
jno
add
or
and
cmps
mov
fadd
jmp
cdq
adc
fnsave
push
sbb
lahf
mov
pop
(bad)
fcmovbe
fwait
outs
mov
cmp
pop
(bad)
movs
adc
dec
dec
ins
lahf
and
aas
pop
mov
cmp
scas
fld
inc
stc
add
jecxz
add
cmp
int
int
lods
adc
(bad)
retf
adc
clc
mov
rcr
cwde
fsqrt
movs
and
xor
xor
xchg
lods
ja
mov
pop
adc
mov
mov
stc
jno
ja
xchg
cwde
mov
xor
jns
inc
inc
and
push
xor
xor
int3
sbb
mov
add
fiadd
sub
sub
nop
xor
fbstp
test
xor
fwait
scas
fstp
scas
shl
pop
cwde
jp
fistp
fs
test
lds
xchg
es
mov
out
inc
(bad)
shr
jmp
scas
aam
(bad)
ds
call
mov
outs
jmp
outs
sub
iret
repnz
mov
aad
fbld
add
repnz
fwait
leave
pop
(bad)
fbld
cdq
inc
and
cmp
pushf
stc
and
jae
ins
cmc
retf
popf
push
inc
jecxz
je
jnp
prefetch
or
mov
dec
cdq
pop
mov
not
jmp
mov
or
cdq
das
jno
movs
or
adc
dec
sar
lods
cmp
je
dec
ins
nop
nop
mov
pop
aam
xor
mov
fsubr
repz
aad
fst
nop
test
enter
sub
push
mov
ins
adc
xor
xchg
jns
fisubr
in
inc
pop
aas
loop
pop
mov
cwde
int3
push
push
cmp
sbb
jae
and
add
mov
add
jmp
pop
dec
jmp
xchg
or
test
in
mov
cld
pop
popa
sti
es
sti
test
lods
mov
jbe
xchg
call
pop
pop
loopne
rcl
xor
pop
fist
aas
cmp
repnz
js
into
popf
fld
add
jne
in
xor
jmp
mov
(bad)
or
cmp
and
test
inc
jbe
pushf
sbb
mov
and
icebp
fistp
movs
add
push
jnp
dec
aas
data16
inc
ja
rcpps
lods
aam
cdq
push
out
pop
xor
cmp
lods
in
jg
pop
lea
sbb
mov
pop
iret
sbb
pop
push
cli
popf
push
repz
xor
xchg
fcmovbe
out
sbb
das
xor
or
sub
rcl
shr
push
jg
cmp
xchg
inc
call
out
leave
daa
mov
adc
and
mov
cmp
cmp
rol
adc
push
dec
and
inc
or
(bad)
lahf
js
push
cmp
jmp
jge
mov
stos
xlat
jbe
stos
out
push
mov
inc
and
not
add
push
int3
fdiv
loope
sbb
cld
repnz
ja
inc
aas
inc
in
jno
inc
aam
mov
int3
add
fucom
popf
jmp
jp
loope
adc
rcr
jg
fisttp
mov
retf
retf
mov
mov
fsubr
xchg
mov
aas
out
(bad)
pop
jl
cmp
clc
arpl
dec
or
dec
sub
push
jp
adc
or
call
inc
leave
enter
jle
pop
sbb
fucomip
bound
aas
push
(bad)
jge
push
cmc
jno
jbe
mov
popa
and
and
xor
pop
retf
pop
into
sub
mov
cmp
repnz
out
and
xor
lods
ins
add
stos
jg
je
ret
jb
add
xor
lods
mov
ret
iret
mov
(bad)
outs
retf
cld
xor
xchg
xor
stc
and
call
or
cdq
cli
pop
inc
xchg
pop
(bad)
in
jmp
jl
xchg
loopne
(bad)
loopne
add
lods
push
scas
js
mov
cmp
jae
repz
mov
mov
sub
mov
idiv
in
or
xor
add
test
iret
je
sbb
call
mov
js
or
fistp
(bad)
mov
jmp
es
mov
pop
pop
xor
fist
jg
repnz
movs
push
xchg
jbe
xchg
ins
test
ds
sub
cmc
aam
mov
inc
idiv
dec
ret
mov
scas
stos
test
add
jo
cmp
dec
loope
xchg
ins
(bad)
gs
push
jne
xchg
pop
rcr
popa
(bad)
iret
test
xor
pop
sub
push
dec
xchg
pop
cmc
fimul
sub
int
lahf
test
out
cmc
push
(bad)
std
scas
in
fwait
mov
cs
popa
inc
jno
mov
lahf
mov
xchg
arpl
mov
in
stc
dec
scas
fsub
jecxz
mov
sub
or
leave
xchg
imul
mov
cmp
sub
sub
mov
inc
jne
sbb
pop
sub
mov
fmul
mov
ret
test
jbe
sti
ins
loope
pop
ja
cmp
xchg
outs
adc
mov
or
adc
jmp
mov
int3
jmp
dec
rcl
adc
cmps
out
fild
stc
call
(bad)
mov
xlat
stos
cmp
cdq
cmps
or
dec
mov
push
sbb
rcr
jmp
mov
or
stc
stc
(bad)
adc
nop
fs
xabort
ins
cmp
ins
loop
adc
mov
xchg
jae
aam
test
add
(bad)
and
neg
sbb
pop
fs
into
add
push
(bad)
cmc
stos
test
and
jmp
adc
imul
push
pop
ret
outs
lock
mov
ss
mov
sti
in
cmp
mov
fnstcw
xchg
mov
test
ror
fs
lds
lods
inc
sahf
ret
mov
and
invlpg
adc
test
stc
dec
rol
jle
lock
push
mov
cs
int
lods
inc
pop
mov
cmp
sbb
add
std
stos
mov
adc
ds
xchg
lods
and
addr16
bound
cmp
lods
cld
inc
(bad)
sar
inc
mov
xor
push
dec
and
imul
in
xor
mov
push
bound
push
loope
int3
push
sbb
mov
pushf
mov
lahf
sub
bound
mov
dec
not
pop
dec
aas
lods
push
mov
xchg
adc
jno
cdq
in
mov
jmp
and
inc
cld
or
out
pop
cmp
mov
mov
pop
jmp
imul
arpl
test
daa
dec
cwde
ret
mov
xchg
pop
add
inc
sbb
mov
jg
das
xor
mov
test
icebp
push
dec
xor
(bad)
xor
retf
test
dec
lods
inc
dec
rdtsc
jb
cmp
jo
and
je
retf
push
ret
icebp
stc
pushf
(bad)
enter
and
mov
retf
int3
fidiv
ins
sub
sar
data16
outs
xor
neg
popa
imul
int3
sub
retf
iret
xchg
sub
dec
pushf
mov
iret
sti
je
jne
icebp
pop
cmp
mov
inc
imul
and
aas
movs
sub
dec
cmps
imul
fmul
shr
je
pop
call
inc
out
(bad)
inc
sub
movs
push
(bad)
cmp
ror
sub
jecxz
hlt
cwde
mov
lods
scas
sahf
stc
loop
cli
jae
movs
dec
and
cmps
and
daa
mov
repnz
adc
js
mov
inc
or
lds
inc
and
jmp
adc
sbb
adc
outs
(bad)
hlt
cwde
ret
jae
fistp
push
gs
movs
leave
mov
aam
pop
mov
(bad)
fmulp
(bad)
push
in
sar
sbb
add
cmps
(bad)
div
test
jle
bound
cmp
repz
(bad)
dec
sbb
sbb
dec
jg
add
mov
mov
push
mov
add
and
ss
xlat
scas
inc
pop
mov
fcmovne
out
nop
retf
lds
jmp
dec
and
in
cmp
lock
or
xchg
(bad)
pop
sub
call
int3
mov
jmp
jns
push
in
loop
and
dec
add
and
mov
in
xor
in
(bad)
mov
or
add
das
cmps
cmp
pop
cmp
fild
pop
inc
and
and
int3
sahf
js
stos
in
bound
mov
xor
mov
movs
dec
dec
ins
dec
aam
addr16
push
mov
push
jecxz
mov
mov
xor
call
pop
push
add
in
(bad)
inc
stos
adc
test
jb
ret
daa
sbb
push
data16
frstor
mov
popa
jmp
add
mov
loopne
mov
mov
inc
add
pop
repz
fucom
push
xchg
lea
(bad)
mov
jg
out
jl
xchg
hlt
inc
push
mov
dec
cli
xor
hlt
add
jmp
xor
fwait
xor
add
arpl
scas
jne
mov
add
stos
daa
dec
fcomp
push
leave
mov
test
add
sub
popa
add
in
int3
or
imul
add
mov
fs
mov
js
(bad)
in
es
sbb
push
jns
stc
mov
pop
jb
cdq
test
outs
cwde
fimul
mov
repnz
mov
imul
pop
fisttp
(bad)
sti
cwde
cmp
pop
cmp
dec
mov
mov
ret
popa
cmps
xchg
jp
loop
adc
add
clc
loop
mov
xchg
or
or
xor
mov
jno
ins
push
aam
out
sub
jno
std
cmp
mov
jns
mov
mov
retf
scas
mov
icebp
cmp
cli
dec
(bad)
inc
test
push
sub
imul
push
das
into
sbb
xor
pop
stos
inc
mov
loope
call
mov
jmp
xor
jo
lock
pop
(bad)
shr
xor
cdq
fisttp
xchg
inc
mov
stos
cmp
sub
sbb
jne
or
mov
sub
js
repnz
mov
add
lock
xchg
ss
or
cdq
sbb
loope
out
sub
out
sub
jg
xor
or
add
iret
movs
mov
imul
pop
dec
pop
je
cmp
sar
sbb
jg
rcr
pop
sbb
icebp
mov
iret
ins
jae
in
pop
xchg
jnp
mov
dec
out
dec
mov
jne
push
add
stos
xchg
push
push
sbb
in
push
movlps
dec
call
mov
fucomi
inc
and
lds
inc
test
fs
test
mov
mov
(bad)
sbb
mov
pushf
push
xchg
out
and
retf
cmp
xlat
inc
jmp
dec
pop
ins
push
pop
sub
push
sub
jge
pop
std
dec
add
push
out
pop
xor
int
lods
scas
stos
arpl
dec
inc
loop
in
mul
cvtps2pd
shr
stc
loop
mov
push
fistp
sar
push
js
jl
mov
xchg
fs
aas
mov
fcomi
into
and
mov
sbb
and
lods
popa
mov
out
dec
adc
push
push
stos
mov
popf
inc
sar
sbb
arpl
push
enter
div
hlt
jns
xor
jmp
adc
push
jge
sub
or
add
div
aas
cmp
or
div
sub
dec
shr
je
jmp
sub
dec
mov
test
mov
test
in
out
xor
ret
jbe
retf
mov
cwde
fldenv
fcmovnu
bound
retf
jb
jle
call
sahf
sbb
cmp
(bad)
cmp
inc
cmp
add
dec
clc
dec
mov
cmp
and
fmul
stc
sub
fdiv
test
in
push
xor
pop
neg
cmp
sti
mov
test
adc
shl
xor
push
js
aad
scas
jmp
jecxz
xor
into
push
shl
and
out
movs
push
adc
sbb
repz
arpl
es
hlt
sbb
fucom
lock
movs
pop
xchg
mov
cmp
mov
popa
cmps
cld
adc
add
push
adc
push
xchg
daa
daa
jle
fsub
iret
push
outs
and
or
cmps
mov
lods
ret
jl
sub
xor
push
out
jmp
mov
jecxz
cmp
cli
inc
je
gs
scas
dec
addr16
pop
and
arpl
fwait
jl
cs
fs
sbb
scas
push
cmp
jnp
(bad)
hlt
imul
sub
retf
jno
nop
cmp
xor
in
in
xor
test
mov
mov
cld
add
sbb
leave
mov
adc
xor
jge
imul
(bad)
push
xor
inc
out
ret
mov
pop
cli
(bad)
fisubr
sbb
dec
icebp
sbb
xor
xor
(bad)
adc
add
dec
lea
outs
lea
mov
jmp
sets
xchg
or
pop
sar
es
mov
add
inc
test
xor
xor
xchg
xlat
int3
hlt
mov
pusha
push
loop
add
jmp
sub
ins
inc
stc
adc
mov
sub
fwait
js
pop
mov
ja
xor
or
mov
sbb
call
mov
rcl
jecxz
push
call
lds
dec
scas
jge
dec
jp
lea
clc
test
or
popf
mov
repz
push
lods
sbb
sbb
pusha
jecxz
sbb
or
or
les
jge
sub
fcmovb
pushf
stc
inc
int3
leave
add
int3
mov
and
stos
mov
das
nop
imul
mov
arpl
cmp
lahf
fild
mov
aaa
add
movs
icebp
lahf
jo
jmp
outs
jmp
std
pop
cwde
test
test
push
ins
fild
pop
cmp
ret
push
cmp
mov
xor
mov
sub
repz
add
xor
test
xchg
popa
dec
outs
dec
add
les
push
mov
iret
ins
imul
inc
ss
sub
cmp
push
sbb
popf
cmp
sub
test
adc
stos
les
mov
inc
cmps
lods
shr
movs
jp
ror
sub
inc
adc
push
and
out
xor
(bad)
cmp
xchg
in
adc
mov
das
adc
mov
mov
and
jecxz
cwde
dec
aad
mov
sbb
(bad)
mov
cmp
mov
push
loop
pop
inc
rcl
cmp
pushf
pop
mov
and
xor
not
in
mov
aam
add
test
ret
call
call
or
xor
or
les
mov
inc
sbb
add
mov
scas
(bad)
popa
stos
inc
cli
int3
sub
xchg
and
xchg
sub
add
jns
imul
repnz
sbb
add
cdq
mov
add
sbb
mov
sub
or
or
push
xchg
pop
fs
inc
pop
mov
xchg
jmp
(bad)
call
cmp
dec
fidivr
pop
dec
mov
and
enter
jno
fistp
cmps
add
ins
adc
adc
pop
fiadd
lods
enter
fdivp
push
adc
cmp
imul
mov
mov
shl
mov
adc
dec
out
sub
mov
fimul
test
xchg
cmps
aad
jnp
sbb
aas
sub
sub
xchg
pop
push
fidiv
shl
and
std
sub
adc
sbb
sbb
out
and
jle
(bad)
mov
dec
mov
retf
mov
ret
push
in
push
ins
repz
(bad)
jnp
outs
pop
sub
dec
adc
into
xchg
adc
ins
push
into
add
xchg
mov
add
jns
nop
jg
repz
gs
call
pop
dec
mov
fwait
mov
dec
outs
test
dec
aaa
or
or
add
lea
xor
popa
ds
test
sbb
or
adc
sbb
dec
ret
dec
mov
fbstp
jbe
adc
retf
gs
into
bound
add
dec
imul
xchg
mov
mov
dec
adc
rcr
ja
icebp
jecxz
iret
xchg
push
loope
jnp
fs
or
push
lods
jp
daa
popa
in
mov
loopne
es
sub
lods
nop
dec
stc
jns
pop
jnp
xchg
aaa
pop
cmp
mov
pushf
lods
rcl
and
aad
test
or
outs
call
popf
mov
(bad)
mov
outs
lods
cwde
test
cmp
popa
and
push
popf
int3
xor
cmp
sahf
mov
cmp
or
out
pop
jecxz
out
pop
mov
ffree
xor
jp
jecxz
fist
sahf
pop
mov
cli
adc
and
scas
bound
adc
shr
or
push
jno
push
iret
sub
cmp
stc
cmp
test
inc
ins
iret
sbb
jl
iret
ins
psrad
test
xchg
(bad)
aad
dec
loope
jle
sub
add
dec
sbb
popa
leave
pusha
repz
push
inc
nop
lahf
daa
add
test
mov
int3
lds
lea
inc
sti
bound
push
aaa
test
movs
sbb
mov
mov
xchg
ins
mul
xor
dec
outs
es
push
loop
test
into
test
pop
or
inc
int
bound
sbb
push
out
stos
outs
dec
jnp
mov
fistp
cmp
inc
adc
sti
pusha
adc
ins
xor
in
iret
(bad)
pop
xlat
or
nop
dec
out
mov
nop
xor
out
in
adc
stc
movs
lods
(bad)
jp
push
fwait
jg
test
js
aam
xor
push
fimul
mov
push
(bad)
loopne
jo
into
mov
out
xchg
aaa
sub
jo
adc
rcr
popf
ror
(bad)
enter
push
dec
mov
addr16
adc
xchg
outs
dec
mov
jno
pushf
xchg
js
(bad)
jo
sbb
sbb
(bad)
sbb
adc
retf
jbe
cs
push
cld
mov
movs
mov
sbb
aas
add
inc
xchg
push
ins
mov
icebp
repz
push
mov
and
test
jmp
push
cmp
inc
xor
call
xchg
push
pop
dec
and
xchg
sub
mov
dec
cmp
pop
mov
fdivr
mov
inc
xchg
in
call
dec
inc
jo
mov
mov
add
int3
arpl
and
popf
and
cmp
xchg
into
fisub
mov
idiv
mov
sub
lods
mov
fwait
repnz
mov
loopne
cmp
(bad)
int3
jmp
test
mov
push
mov
in
xor
rol
sbb
sbb
mov
cmp
cmc
pop
sbb
add
retf
dec
les
in
into
pop
push
lods
mov
cwde
fwait
sub
xor
sahf
fs
push
xor
mov
repnz
fld
push
fld
gs
xchg
std
test
jnp
in
pop
fadd
jecxz
xchg
or
cld
scas
xchg
cmp
or
lahf
scas
xchg
or
push
test
je
or
add
xchg
mov
sub
loopne
pop
xchg
retf
js
cmp
mov
and
leave
mov
adc
dec
cmps
sbb
mov
loop
pushf
pop
push
and
mov
or
sbb
jecxz
inc
(bad)
iret
push
(bad)
and
std
cs
sbb
ret
mov
push
and
into
mov
rcl
push
cmp
addr16
cmp
call
int3
mov
pushf
xchg
popa
dec
cmp
aad
jnp
int
pop
xlat
inc
(bad)
mov
mov
call
in
les
sub
mov
rcl
jecxz
mov
mov
xchg
shr
rcr
mov
mov
out
jno
cwde
cmps
fnsave
mov
clc
into
xor
aas
xchg
pop
repnz
jno
ins
int3
addr16
xor
in
push
div
test
xlat
in
jno
mov
jnp
iret
aas
arpl
sti
ss
loopne
pop
adc
and
mov
movs
repz
pushf
or
out
fwait
push
fcomp
adc
std
imul
sbb
(bad)
in
outs
adc
push
jns
pop
es
push
mov
ds
cmp
mov
inc
fistp
dec
inc
fs
jmp
add
mov
gs
jns
mov
addr16
imul
ins
dec
xor
ins
clc
repz
pop
bound
jae
mov
in
loope
mov
bound
in
inc
ror
and
ret
and
jg
imul
hlt
popa
sar
jnp
fistp
and
retf
ja
sub
jge
in
dec
xchg
sub
(bad)
push
adc
jb
add
cmp
sbb
push
xlat
inc
int3
enter
bnd
mov
pop
inc
(bad)
cli
or
fwait
xchg
mov
icebp
xchg
les
xor
jbe
sub
push
loope
aaa
mov
xchg
retf
push
dec
xchg
mov
(bad)
mov
ret
loope
mov
loopne
mov
jnp
daa
jns
dec
call
sbb
test
dec
adc
push
xchg
sahf
cwde
add
push
sbb
push
data16
test
add
jg
inc
inc
(bad)
in
add
xor
jp
cld
push
lods
imul
xlat
(bad)
cmp
scas
mov
jmp
mov
mov
arpl
mov
iret
jno
jecxz
mov
jmp
fistp
dec
sub
lahf
add
mov
aam
out
cmps
inc
adc
imul
add
and
jle
das
mov
movs
mov
push
inc
mov
pushf
loope
cmp
imul
pop
retf
cmp
repnz
sbb
jmp
ret
pop
ror
xchg
popf
repnz
and
add
dec
mov
mov
test
add
dec
or
xor
adc
out
fisub
stos
dec
cmp
rcr
sbb
sbb
xor
jecxz
xor
das
jns
(bad)
lahf
dec
sub
jne
and
and
pusha
jmp
push
popf
in
and
jns
ss
scas
pusha
call
test
xchg
jmp
stc
imul
push
inc
and
cmps
mov
pop
clc
dec
repz
or
add
mov
jb
rol
and
push
rcl
ins
in
mov
add
movs
cwde
push
xchg
sbb
fisttp
xchg
xchg
push
sub
xchg
neg
mov
pop
cmp
or
ins
pop
out
xchg
test
xchg
mov
js
(bad)
movs
mov
mov
push
ret
popa
jecxz
shl
lods
shl
mov
mov
jecxz
mov
pop
ficom
sub
rcl
lock
xor
mov
pop
ret
and
inc
push
fs
ss
cli
jge
sub
sbb
dec
add
xor
(bad)
or
ret
out
jb
push
dec
cmp
xchg
or
test
sbb
or
inc
in
in
cwde
add
call
rcr
add
shr
div
stos
add
push
dec
or
in
adc
mov
rcl
dec
dec
mov
test
add
mov
mov
inc
xor
ret
push
call
pop
pop
je
lods
push
push
mov
xor
in
inc
pusha
sbb
mov
pop
xor
(bad)
cmp
nop
sbb
mov
repnz
push
push
add
fild
and
jmp
(bad)
and
test
inc
lds
mov
sub
push
imul
cmp
fs
adc
mov
ret
addr16
ins
and
jo
dec
addr16
jle
xor
mov
and
and
mov
xchg
call
fnstcw
sub
cmc
mov
nop
mov
pop
bound
into
scas
lods
in
clc
loopne
push
lock
push
leave
dec
sbb
mov
push
aaa
das
push
in
add
out
pusha
sub
mov
sub
(bad)
inc
sahf
dec
cdq
fmul
jecxz
xor
inc
cld
inc
push
jmp
sub
repnz
in
push
add
mov
pushf
mov
push
sub
fisub
test
(bad)
pop
sub
push
mov
or
sub
mov
retf
into
mov
mov
int
std
(bad)
push
jg
inc
ret
and
mov
xor
push
in
scas
dec
mov
mov
es
push
aas
jne
fwait
xlat
mov
push
cmp
jmp
jmp
sbb
sub
push
sti
push
adc
and
ss
(bad)
cdq
jle
jb
pop
or
into
cs
jne
loope
(bad)
xlat
cmps
out
xor
push
xor
or
cmp
lods
loop
push
enter
sbb
addr16
cwde
and
dec
out
ret
and
push
jo
cmc
scas
das
pop
sub
jl
js
and
jmp
es
loop
dec
add
stos
xlat
add
adc
out
mov
mov
test
push
mov
ficomp
mov
mov
aas
hlt
add
and
mov
and
mov
cwde
cmp
adc
jecxz
call
adc
jmp
cmp
jl
push
xor
or
fdiv
push
mov
imul
jno
jne
pop
shl
and
ret
bound
xor
fistp
cli
push
and
std
inc
cs
xor
mov
cmp
call
mov
sbb
xchg
arpl
xchg
in
pop
lods
and
in
rcl
mov
fsubr
lods
xor
fsubrp
aas
rol
out
mov
cld
jl
cdq
xchg
fisttp
lds
int3
jle
(bad)
out
enter
popf
jb
xor
adc
test
add
pop
in
(bad)
fst
pop
mov
loope
xchg
xor
loopne
mov
adc
pop
xor
inc
fmul
sbb
pop
out
mov
int
mov
cmp
pop
and
adc
arpl
add
xor
mov
xor
inc
jle
fcom
mov
or
xlat
je
fist
cdq
jmp
and
test
adc
sbb
xchg
fcmovne
adc
mov
popa
ret
dec
jge
mov
sub
test
cmp
aad
nop
pop
adc
cmp
leave
out
out
loop
pop
stos
test
(bad)
sti
xchg
mov
div
aas
ins
xor
fdivp
pop
sbb
push
jmp
pop
sbb
push
rcl
push
and
enter
scas
inc
sub
daa
xchg
pop
test
cmc
or
call
lahf
in
xor
mov
push
mov
xlat
int
pop
test
jbe
jg
or
call
mov
lock
xchg
call
ss
in
faddp
aad
and
or
xchg
out
mov
(bad)
mov
das
cld
add
les
push
out
push
push
stos
dec
pop
test
jne
cmps
and
ds
dec
jl
adc
das
mov
cmc
test
jmp
stos
outs
dec
xor
nop
cmp
inc
or
mov
mov
push
jecxz
sar
stos
mov
loopne
pop
lahf
popa
mov
xchg
ins
pop
cli
int
shl
dec
sahf
repz
sbb
fsub
xchg
movs
scas
aaa
jnp
inc
dec
xchg
adc
inc
and
popf
sub
movs
dec
fsub
sub
mov
adc
and
add
add
xor
xchg
lahf
(bad)
or
sub
mov
mov
push
repz
fisubr
inc
arpl
lds
repz
and
enter
jns
and
ins
jne
(bad)
retf
int3
in
pop
push
pop
and
es
nop
js
add
and
cmp
out
mov
sub
dec
sbb
add
inc
jno
pushf
mov
fist
scas
jbe
or
pop
mov
scas
cmps
push
xchg
pop
xchg
out
outs
in
lahf
outs
lock
rep
test
and
xor
jg
and
pushf
rol
jle
and
mov
and
ret
sub
xchg
fdivr
mov
fild
lock
je
mov
imul
pop
setae
imul
pop
push
add
loop
not
inc
out
into
fldcw
cmp
xor
mov
mov
cwde
(bad)
jl
inc
jno
dec
dec
call
cmps
pusha
mov
in
sbb
fcom
rcl
mov
push
lods
pop
cmp
es
cs
mov
ja
mov
cmp
arpl
mov
adc
scas
out
cli
sbb
int3
imul
lods
fs
loop
xchg
or
pop
lea
jg
push
rol
xchg
mov
jnp
inc
js
and
mov
mov
arpl
enter
inc
and
lods
and
stos
ffree
sbb
adc
hlt
adc
and
cmps
movs
jmp
adc
bound
jmp
cmp
mov
push
mov
pop
sahf
mov
fdivr
clts
pop
(bad)
ds
dec
fs
mov
lods
fwait
inc
sub
and
sbb
sti
call
shl
inc
in
lahf
xor
pop
lahf
das
mov
mov
push
cmp
fistp
adc
test
out
(bad)
lock
add
(bad)
xchg
into
mov
cmps
or
aaa
cmp
dec
adc
icebp
dec
(bad)
hlt
jp
sub
xchg
mov
js
inc
fst
sbb
xchg
mov
call
popa
ret
dec
arpl
jmp
cli
add
add
in
in
fild
fcom
test
in
imul
or
cmp
cmp
xchg
js
xor
pop
lods
mov
mov
out
dec
test
imul
ja
xchg
sub
mov
sub
cmp
fidiv
or
ins
sahf
rcl
jmp
inc
xchg
fsub
data16
cld
arpl
dec
int
test
inc
fwait
adc
or
pop
or
js
and
push
and
xor
adc
xchg
jno
mov
mov
cld
fidivr
shl
cmp
repnz
inc
sub
and
xchg
inc
jp
mov
xchg
jecxz
jge
add
das
jb
lock
push
std
and
adc
jmp
sbb
leave
add
inc
sbb
arpl
arpl
and
pop
adc
jecxz
test
and
idiv
adc
push
sbb
fisub
cmp
inc
pop
ret
fnstcw
or
outs
inc
sub
pop
jecxz
out
sbb
out
mov
cmps
jge
in
push
inc
stc
dec
jl
xor
cmps
aad
jo
sbb
mov
mov
push
push
mov
push
stos
dec
sub
jl
lods
call
cmps
dec
adc
repz
rcl
fisub
dec
jecxz
jbe
pop
inc
mov
aad
push
dec
clc
aam
(bad)
jg
cwde
push
jnp
rcl
mov
sbb
cmp
(bad)
mov
call
nop
mov
imul
pop
dec
adc
inc
leave
pop
rcl
addr16
mov
clc
dec
shl
ret
hlt
mov
push
sbb
movs
xor
mov
(bad)
fidivr
inc
shl
sbb
mov
(bad)
mov
inc
cmp
push
mov
repz
stc
popf
cmp
inc
and
jge
add
aad
mov
cdq
pop
cmps
push
in
sbb
pop
inc
or
add
jle
leave
inc
fimul
push
jae
(bad)
sub
(bad)
mov
test
jb
stos
loop
(bad)
sub
clc
xor
popa
mov
ss
pop
fild
or
arpl
push
mov
mov
cmps
mov
clc
and
(bad)
and
jmp
int3
les
test
sbb
xchg
push
adc
ds
ins
cmps
fst
(bad)
xor
aad
int3
mov
in
iret
mov
and
inc
lods
push
test
cmp
les
xor
mov
loope
mov
xchg
retf
mov
dec
nop
cs
rol
or
mov
sub
and
cld
push
(bad)
xor
add
mov
movs
mov
jl
or
adc
mov
leave
imul
cmps
jecxz
in
enter
inc
icebp
movs
jno
lods
cld
aam
and
fcmove
jbe
or
cmps
shr
mov
sahf
aas
pop
addr16
or
call
add
test
push
fidivr
inc
push
arpl
and
shl
into
cld
imul
inc
add
mov
out
mov
xor
lock
xchg
pop
xor
xchg
imul
xor
and
dec
or
lds
sub
sbb
enter
mov
ss
out
out
aas
push
add
or
adc
add
ret
sti
pop
push
js
xchg
jo
jl
mov
mov
lds
mov
sub
mov
(bad)
and
push
aam
adc
adc
push
test
jns
lahf
adc
in
out
xor
idiv
loopne
add
add
dec
dec
add
movs
xchg
cli
dec
sbb
scas
xchg
test
lock
ja
or
fs
push
out
test
rcl
jge
mov
pop
ret
mov
sbb
cwde
fmul
dec
loope
pop
mov
test
aas
cld
enter
xchg
clc
xchg
out
loopne
jecxz
pop
adc
inc
xor
dec
mov
clc
mov
js
pop
xchg
into
js
adc
leave
cmps
rcr
xor
push
pop
jns
mov
(bad)
inc
and
mov
xor
xor
int3
les
mov
dec
sbb
(bad)
mov
inc
fiadd
(bad)
retf
and
cmp
jecxz
fdiv
or
rcr
arpl
or
jne
rcr
sub
outs
shl
pop
je
xchg
dec
sub
add
aam
mov
mov
jl
push
mov
popf
shl
out
arpl
scas
inc
dec
cmp
repnz
dec
imul
dec
and
xchg
out
sbb
and
pusha
jmp
(bad)
cmp
mov
and
pusha
stc
mov
in
fst
xor
es
arpl
test
iret
push
push
push
cmps
pop
in
dec
icebp
fidiv
call
xchg
loopne
mul
cmp
jl
out
ja
mov
dec
mov
pop
push
dec
les
inc
dec
mov
pop
loope
icebp
mov
mov
in
scas
mov
jnp
sub
xor
xchg
jmp
lahf
push
add
lock
stc
or
pop
xchg
std
popa
mov
aas
pop
mov
push
dec
sbb
adc
es
sub
and
xor
and
mov
sbb
push
jle
out
clc
fstp
xchg
add
sahf
mov
and
inc
pop
sub
pop
jp
aam
aam
(bad)
mov
std
test
xchg
mov
sub
shl
es
dec
sbb
xor
add
jne
push
or
mov
fisubr
ror
hlt
dec
lods
inc
xchg
gs
sub
jne
cmp
stos
cmp
and
inc
push
pop
or
push
out
push
pop
pop
int3
xor
push
mov
add
out
mov
lahf
ficom
das
fidivr
cmp
bound
cli
fs
adc
outs
mov
clc
and
adc
clc
inc
or
mov
outs
mov
fs
sub
iret
dec
sbb
xor
and
loopne
pop
loope
add
mov
nop
add
mov
adc
mov
mov
mov
scas
and
cdq
pusha
dec
or
popa
xchg
fsub
push
or
repz
push
out
loopne
in
mov
cmp
pop
mov
add
push
out
mov
test
xchg
test
inc
call
or
inc
stos
sbb
into
int3
cmps
inc
pop
ds
fstp
sar
lds
cwde
adc
test
mov
aad
sti
loopne
add
adc
jae
adc
fdiv
std
push
mov
push
and
iret
inc
loop
gs
cmp
lock
shl
pop
nop
stc
add
enter
push
movs
dec
or
mov
mov
inc
cmovp
loop
clc
(bad)
push
leave
pop
push
enter
pop
in
adc
inc
movs
pop
loopne
enter
sbb
push
pop
pop
cmps
ins
cmp
ja
inc
movs
mov
pop
push
das
iret
lock
movs
in
sub
fwait
das
shl
repnz
cmc
int3
jnp
pop
mov
in
cdq
call
jmp
pop
mov
mov
dec
or
inc
lock
(bad)
fild
sbb
push
popf
mov
jb
cmp
sub
dec
mov
dec
loopne
clc
mov
cwde
repnz
out
mov
in
out
inc
daa
mov
or
jne
push
rcr
test
mov
aam
pop
sahf
xchg
mov
jnp
fadd
mov
movs
leave
adc
dec
in
popa
mov
mov
and
leave
add
outs
or
fs
imul
mov
mov
inc
retf
dec
inc
push
jge
pop
mov
mov
loop
sahf
out
int3
stos
inc
push
outs
jae
mov
inc
int3
dec
pop
sbb
mov
test
cmp
imul
mov
sub
mov
cld
ds
mov
dec
imul
test
cmp
dec
or
(bad)
std
xchg
cdq
(bad)
cmp
in
lea
xchg
pop
loop
push
std
stos
add
inc
xchg
mov
mov
je
and
imul
pop
leave
inc
int3
sub
xchg
or
leave
jl
mul
loope
sbb
das
xlat
or
and
xchg
aad
adc
push
in
xchg
and
mov
jo
cdq
test
inc
adc
popa
leave
dec
and
cmp
dec
and
ret
loop
xchg
jae
jbe
lds
mov
(bad)
push
and
ficomp
xchg
idiv
mov
inc
ret
hlt
leave
aaa
test
dec
sub
nop
vpsadbw
mov
call
jne
pop
outs
push
cs
stc
fucomip
movs
xchg
jge
shl
add
cmp
jmp
mov
imul
xor
xchg
ret
arpl
nop
jp
scas
adc
iret
jmp
push
gs
imul
dec
cmp
mov
cli
xor
pusha
dec
or
rol
(bad)
repnz
mov
push
mov
mov
stos
in
arpl
das
in
repz
sub
dec
cmp
ret
call
int3
gs
cmp
out
dec
add
aam
les
mov
in
frstor
mov
fwait
mov
bound
mov
test
mov
push
pusha
xor
ss
ss
sub
and
sub
scas
jno
xchg
ja
icebp
mov
sbb
mov
mov
pop
mov
call
(bad)
pop
lds
push
xor
push
cld
xor
cmp
xchg
fsubrp
test
cmp
lods
fstp
mov
aad
mov
pushf
push
outs
aaa
adc
add
sub
jmp
ror
mov
ja
mov
enter
mov
gs
icebp
lea
or
push
inc
mov
inc
pusha
mov
shr
(bad)
rcl
mov
aad
pop
shl
pop
xchg
imul
dec
add
mov
ss
add
sbb
mov
xor
fistp
mov
in
sahf
cmp
sbb
or
nop
pop
fsubr
rol
rol
and
sar
jb
or
addr16
sbb
test
xchg
xchg
retf
out
push
nop
and
push
dec
cmps
pushf
fisub
fs
xor
lods
(bad)
jmp
lods
gs
gs
stos
loopne
jae
lea
cli
sti
and
dec
jns
sbb
imul
sbb
int3
push
xor
in
nop
xchg
cmps
test
fbstp
cmp
jl
mov
jns
loop
push
aam
add
inc
mov
loop
cld
mov
test
fstp
nop
dec
xor
mov
pop
(bad)
mov
fcom
push
sar
jmp
out
dec
rcr
cmp
sbb
push
mov
mov
sbb
jo
daa
dec
popa
mov
int3
out
push
repnz
xlat
ja
adc
inc
mov
loop
sbb
mov
xchg
hlt
jl
or
ins
imul
pusha
ja
aad
pop
inc
shl
pop
iret
ins
bound
bound
loop
call
jl
pop
stc
cmp
and
lds
fisubr
pop
mov
xchg
push
xor
cli
jg
out
mov
fadd
cmp
(bad)
cli
jle
std
jbe
retf
retf
or
jmp
repz
xchg
dec
mov
movs
jno
mov
mov
aad
inc
stos
fwait
push
inc
ss
adc
std
mov
inc
into
test
ja
jle
rcr
pusha
cmp
cdq
and
out
mov
movs
fwait
mov
xor
js
push
jl
call
shr
call
push
aam
and
mov
(bad)
push
in
adc
data16
into
out
xor
std
xchg
popa
dec
lea
pusha
pop
pop
fnstsw
xor
xchg
jmp
xchg
jle
shr
xchg
aas
and
cmc
in
vmulpd
push
dec
mov
lahf
fs
clc
icebp
inc
xchg
push
je
mov
xchg
stos
sub
pop
rol
sbb
loop
pop
push
ss
ficomp
dec
or
dec
out
jmp
(bad)
cdq
fadd
mov
and
adc
mov
push
ret
ss
aas
push
xchg
sar
gs
jo
jno
pop
fnstenv
aad
test
push
mov
sbb
pop
mov
cs
sbb
pop
pop
mov
fsubr
into
outs
test
jb
and
or
mov
add
adc
call
xor
aas
push
ins
adc
std
(bad)
out
data16
xchg
ins
mov
retf
inc
pop
add
xor
test
jmp
sbb
jmp
pop
push
ins
and
iret
ds
sbb
adc
rcr
sti
fdiv
sub
aam
cmp
ja
dec
xchg
sbb
jl
pop
mov
sub
ret
ficom
iret
das
jecxz
jmp
and
jno
cmps
outs
mov
ds
adc
iret
push
out
in
(bad)
mov
pop
mov
test
xor
push
sbb
xchg
sub
push
test
test
cwde
dec
mov
neg
outs
push
dec
push
and
(bad)
cmp
xchg
mov
mov
adc
popa
adc
je
mov
test
cmp
pop
or
scas
out
jns
mov
test
inc
mov
push
mov
adc
add
lock
push
push
adc
and
call
ss
out
mov
xchg
(bad)
xor
mul
sub
xor
(bad)
push
out
test
sub
out
push
cli
inc
daa
adc
mov
and
lahf
mov
dec
stc
cmps
sbb
pop
sbb
outs
ret
stos
out
inc
fidivr
lea
dec
inc
fs
popf
test
retf
loop
or
add
std
jbe
xchg
dec
pop
pop
mov
sub
(bad)
sbb
xchg
inc
call
adc
ficom
adc
mov
inc
gs
jo
rcr
aad
pop
inc
out
nop
clc
in
dec
imul
cs
push
sub
fcom
cdq
cmps
test
dec
mov
pop
pusha
ret
fwait
dec
int
or
mov
loop
imul
or
dec
push
add
jecxz
gs
sbb
ret
je
ret
sbb
int3
into
fnstenv
cmp
arpl
outs
xchg
fdivr
and
jmp
test
push
sti
pusha
xor
inc
mov
bound
cmc
push
scas
(bad)
sbb
push
and
jmp
add
std
jae
pop
scas
repz
mov
pop
cli
xchg
sbb
je
mov
mov
rcr
xchg
xchg
mov
xchg
dec
xor
pop
xchg
xor
adc
neg
jbe
xchg
mov
mov
dec
aad
lahf
cmp
lahf
or
cld
mov
fadd
sbb
pop
fnsave
fcmovnu
(bad)
stc
jge
xor
mov
jle
pop
in
pop
mov
cmps
push
gs
push
add
adc
lahf
shr
les
enter
cmps
pusha
pop
or
fwait
iret
shl
mov
cmc
lds
les
pop
pop
mov
dec
popf
jg
rcl
jbe
test
jno
and
mov
fld
mov
aad
mov
(bad)
scas
dec
push
call
movs
in
ins
mov
fstp
daa
test
aad
or
rcr
test
cmp
enter
(bad)
push
in
pop
int3
mov
inc
in
scas
bound
and
and
mov
outs
cmp
inc
sti
rcr
pop
sub
sbb
xor
gs
in
les
ds
outs
push
xchg
rcr
je
arpl
int3
add
dec
jno
pop
push
cmp
jmp
dec
imul
or
push
les
mov
xchg
pusha
cwde
mov
ret
(bad)
sbb
pop
mov
rcr
jnp
pop
jo
mov
sbb
test
pusha
sbb
stc
imul
ins
ins
xor
dec
(bad)
fcomp
adc
stos
icebp
sub
pop
or
dec
(bad)
xchg
push
cdq
or
and
xchg
cwde
test
xchg
daa
call
push
enter
jbe
push
push
das
lds
call
push
sbb
cli
mov
mov
inc
movs
dec
mov
adc
imul
pusha
es
dec
cmp
inc
mov
pop
outs
not
jb
fcomp
scas
add
cmp
ss
aaa
arpl
and
data16
jge
add
ss
cmps
lock
push
jno
xor
sub
xchg
stc
xchg
and
pop
xchg
jg
inc
lock
pop
mov
icebp
add
dec
outs
imul
xchg
cmp
ret
xchg
test
in
fidivr
in
call
cmc
mul
push
das
jns
cmps
inc
push
lods
cs
repz
mov
pushf
xchg
fwait
popf
aad
retf
(bad)
xor
mov
and
scas
pop
ret
sahf
ins
sub
xchg
push
xchg
adc
cmp
fcomp
inc
sub
sbb
cmc
pop
adc
adc
jmp
mov
cmc
shl
mov
dec
adc
mov
std
and
(bad)
cmps
fist
mov
mov
aam
cmp
and
rol
mov
adc
ret
and
imul
sub
pop
sub
(bad)
mov
outs
mov
aas
cwde
pop
leave
cdq
xchg
ja
mov
ret
pop
jae
cmp
mov
inc
mov
sbb
pop
ds
fild
mov
les
scas
arpl
leave
add
mov
popf
test
adc
shl
out
sbb
add
xor
idiv
xor
mov
push
in
xor
scas
stos
icebp
add
jmp
add
pop
repz
fsub
push
mov
or
cld
push
dec
arpl
mov
push
cwde
jmp
jl
pop
daa
lahf
mov
sbb
pop
int
pusha
xor
mov
mov
mov
retf
bound
adc
imul
mov
cwde
popf
inc
cdq
pop
pop
add
or
ror
retf
push
rcr
aam
mov
shr
mov
jle
scas
fs
(bad)
fild
outs
adc
or
test
push
cs
pop
pop
jne
ret
and
repz
jo
inc
lock
mov
pop
push
rol
inc
cs
jbe
xchg
push
inc
inc
xchg
movs
int3
xor
dec
cdq
ret
and
out
(bad)
inc
pusha
sbb
scas
dec
and
sar
jmp
mov
shl
push
cli
test
enter
cmc
dec
push
std
test
and
stos
mov
dec
push
into
xlat
or
sub
fisttp
push
(bad)
and
push
out
jge
jg
mov
mov
adc
scas
jp
out
inc
enter
mov
in
inc
lds
and
fild
push
cmc
test
or
or
sbb
xlat
pop
dec
jb
ins
jae
(bad)
cli
arpl
dec
cmp
mov
pop
pushf
fcmovnb
enter
xor
sub
or
xor
add
ror
jb
push
cmp
push
cmp
sub
dec
js
loope
add
xchg
inc
jne
jge
dec
imul
sub
(bad)
test
in
xchg
test
(bad)
loopne
jg
jnp
adc
sbb
loope
pusha
sub
lds
push
mov
add
sbb
pop
or
cwde
call
sbb
mov
mov
pusha
push
push
jnp
mov
js
aam
sub
das
cmp
pop
in
not
add
and
push
jge
pop
test
aaa
ret
nop
retf
sub
mov
jnp
cld
cmps
mov
mov
cmps
xchg
bound
idiv
mov
jge
xchg
jo
scas
pop
and
aas
aaa
sbb
imul
gs
adc
movs
inc
pop
jbe
dec
dec
mov
xor
push
cmp
retf
cmp
dec
fwait
popf
adc
cli
push
in
push
test
adc
in
and
or
xchg
arpl
mov
fstp
xor
movs
out
call
mov
icebp
xchg
cmc
jnp
inc
adc
sbb
xchg
fwait
pop
or
imul
xchg
lds
in
cmps
xor
inc
popf
push
(bad)
mov
cmp
pop
mov
push
mov
mov
jp
adc
jmp
fcomi
sub
dec
sbb
sbb
scas
mov
cwde
xchg
jg
add
test
inc
fldcw
xchg
inc
or
cmc
jmp
mov
mov
xor
xchg
lods
outs
aad
outs
shr
fisubr
xchg
ret
and
and
mov
scas
push
jl
movs
shl
(bad)
enter
sub
fimul
dec
jp
jae
test
pop
jmp
jae
jmp
push
inc
cmp
popa
dec
ret
push
mov
or
inc
lock
push
cmc
adc
jbe
icebp
dec
cmp
xlat
aas
mov
mov
mov
outs
shl
mov
call
jge
mov
retf
das
popa
movs
mov
jbe
inc
xor
dec
mov
jmp
std
jg
inc
daa
test
repz
mov
xchg
mov
sub
rcl
pushf
jp
dec
in
or
fidivr
addr16
pop
ds
dec
adc
or
inc
fwait
cmp
sub
push
lea
or
int
sbb
(bad)
adc
outs
stos
add
adc
in
fisttp
outs
imul
sar
mov
(bad)
int3
xchg
push
inc
addr16
stos
pop
jbe
mov
inc
mov
cld
sub
add
out
repz
push
out
xchg
es
jns
stos
loop
mov
pop
cmc
loope
cwde
inc
sbb
fnstenv
lods
ror
inc
movs
push
ja
aam
ror
jl
cmps
leave
push
mov
xchg
stos
call
jl
loop
pop
mov
add
(bad)
loope
imul
ss
(bad)
iret
test
add
and
(bad)
aad
test
fucomp
mov
mov
retf
sub
or
retf
(bad)
les
mov
out
jns
retf
sbb
and
aaa
int
mov
sub
fcom
xchg
das
sub
or
xor
retf
sbb
rep
dec
movs
inc
sahf
mov
xchg
fs
add
adc
fsubp
and
ss
jns
adc
daa
ror
xchg
pushf
xchg
dec
add
lock
cmp
pop
js
jl
icebp
cli
or
in
mov
mov
mov
push
add
jns
adc
xor
not
mov
aam
cmps
inc
xor
jg
in
xchg
iret
xor
jmp
nop
sbb
ror
cmp
int3
cmps
scas
dec
hlt
popf
jmp
sbb
int
rcr
xchg
dec
lahf
lahf
inc
dec
xor
push
popa
lods
xchg
fwait
pop
mov
rcl
data16
jl
stos
push
or
push
scas
hlt
xlat
inc
shl
shl
xchg
lds
jo
push
das
cmp
fisub
pop
sub
lods
mov
xor
test
jl
lds
call
adc
inc
icebp
and
dec
and
cmp
cmp
xchg
shl
pushf
jb
in
pop
lods
sahf
jl
mov
xor
mov
sub
lods
mov
aad
xchg
es
sbb
mov
stc
and
imul
pop
pop
je
sbb
push
aad
and
cmps
stos
retf
mov
stos
push
sar
mov
pop
mov
ret
std
sub
add
cld
add
fild
add
(bad)
data16
mov
popf
sbb
mov
into
mov
lea
cli
cmp
push
xor
stc
fcomp
sub
movs
or
add
dec
shr
stos
mov
(bad)
mov
loop
popf
xchg
movs
xor
sbb
sar
lea
inc
mov
shl
dec
mov
sets
out
and
pop
jle
ins
pop
inc
cmps
(bad)
sar
mov
repz
pop
sub
jae
aas
loop
add
mov
mov
std
stc
dec
in
imul
jge
aad
jo
mov
aaa
and
sub
scas
out
or
jl
mov
jmp
arpl
xchg
adc
push
xchg
cmp
scas
or
(bad)
mov
add
sbb
sub
and
sub
mov
dec
xor
dec
in
adc
popa
mov
push
inc
jae
jo
xchg
cmps
xor
ror
test
xchg
sbb
sub
in
xchg
xchg
repz
lods
lds
sub
and
je
or
mov
mov
das
and
aas
aam
xchg
xor
cmp
in
jge
xchg
inc
and
leave
jb
xchg
or
ins
xor
call
lds
mov
movs
push
push
push
or
nop
adc
sub
push
xchg
inc
lea
add
jmp
pop
inc
sub
pop
push
cld
pop
mov
and
xor
xlat
das
es
sub
dec
add
out
fistp
adc
into
call
mov
ss
inc
addr16
dec
mov
push
add
pop
add
ret
mov
imul
cmp
cdq
jne
leave
xchg
leave
les
cmps
lahf
push
mov
sub
test
iret
mov
sbb
enter
cmp
xor
cmc
fild
mov
ret
(bad)
adc
add
or
push
int
xor
das
push
enter
and
ret
nop
xchg
xor
icebp
inc
cmp
out
cmp
aaa
xlat
loope
pop
cli
loopne
mov
dec
mov
pop
repnz
mov
out
repnz
mov
sahf
push
and
inc
js
mov
cmp
(bad)
test
jmp
adc
mov
add
(bad)
xchg
outs
js
mov
pop
mov
into
mov
mov
sbb
push
stos
mov
pop
fwait
loope
retf
jge
and
cmps
xor
mov
adc
test
pop
mov
and
fistp
xchg
xor
movs
add
ss
lock
dec
mov
pop
pop
repnz
ds
sub
xchg
rcl
and
sub
cld
(bad)
pop
dec
push
pop
inc
xor
test
cmp
sub
push
sub
lahf
add
cmp
fldenv
sbb
pop
push
mov
cmp
mov
loope
xchg
aaa
jo
scas
stos
adc
or
push
test
scas
ror
out
push
arpl
jecxz
adc
popf
add
jnp
xlat
sub
popf
dec
or
or
inc
mov
int
adc
jg
lds
sti
loopne
xchg
or
bound
(bad)
lods
jmp
out
std
leave
cmp
adc
xor
xchg
(bad)
rcl
push
push
movs
cdq
mov
hlt
adc
jbe
add
cmc
in
and
push
test
in
inc
push
mov
dec
out
repz
inc
cmps
xchg
jae
adc
sub
fld
pop
fs
xor
ret
dec
cdq
shl
mov
fs
iret
adc
(bad)
test
jbe
mov
mov
ins
sbb
sub
xchg
mov
test
call
mov
sbb
xchg
in
lods
in
call
and
in
popa
mov
add
jb
gs
pop
xchg
mov
fs
jmp
fsub
xchg
sub
sbb
xor
ficomp
jbe
mov
out
mov
mov
mov
sub
add
cmps
xchg
adc
pushf
push
cmc
adc
fistp
sar
ret
jl
jp
adc
cmp
icebp
imul
std
xor
std
out
out
shl
add
cmp
inc
sub
into
pop
add
gs
xchg
xchg
jecxz
sbb
sbb
sbb
rcr
add
pop
into
inc
es
shr
(bad)
iret
movs
cdq
ror
pop
ss
ds
aaa
ins
rcl
aad
jne
rcl
push
jmp
(bad)
xor
adc
out
xor
dec
push
mov
xor
push
retf
fwait
shl
cmps
stc
dec
push
dec
in
aam
mov
xchg
aaa
das
dec
sbb
or
(bad)
jmp
clc
stc
sbb
scas
or
dec
and
xchg
clc
push
mov
cmp
mov
int3
or
shr
in
mov
test
out
jp
xor
sub
aad
icebp
xchg
pop
dec
xor
pop
mov
push
dec
inc
ja
not
rol
sbb
mov
sbb
or
xchg
outs
call
ins
dec
popa
push
adc
ret
push
call
dec
push
cmps
pop
nop
test
mov
and
adc
sti
popa
imul
fnstcw
stos
sbb
fldln2
les
xor
aas
cmp
aas
imul
icebp
dec
mov
xor
dec
bound
sub
pop
retf
int3
pop
lods
mov
add
ins
test
mov
ds
cmp
ret
cmp
out
sub
scas
inc
cs
xchg
pop
dec
dec
xchg
(bad)
and
push
mov
xor
(bad)
js
dec
cmps
je
bound
sub
outs
jne
cmc
mov
dec
jb
in
mov
es
sbb
out
and
adc
hlt
cmp
dec
inc
pop
sbb
pop
sbb
xor
stos
mov
sub
pop
and
pop
jb
cdq
call
sbb
repz
test
mov
lods
fsubr
hlt
add
mov
sub
das
shl
sub
nop
jb
push
inc
(bad)
sub
pop
xor
call
call
dec
lock
fild
leave
cmc
inc
leave
stc
pop
dec
fnstsw
jl
sub
jae
aam
push
cs
push
retf
adc
xchg
cmc
jge
cmp
ins
fstp
outs
pop
dec
iret
mov
cmp
aas
xchg
sub
cmp
fimul
addr16
int3
sub
in
inc
pop
pop
inc
test
jmp
sbb
sbb
mov
outs
pop
push
add
mov
jno
adc
push
pop
pop
repnz
sbb
sub
cmp
stc
mov
sbb
xor
les
mov
jns
xchg
xchg
inc
cmp
repz
es
mov
fwait
int
bound
add
dec
adc
mov
daa
push
loopne
(bad)
fs
loopne
sub
mov
pop
fdivr
repz
int3
sub
std
or
ss
xor
adc
retf
fisubr
or
repnz
pop
ja
or
hlt
fadd
cmp
lds
out
mov
add
dec
inc
in
jp
adc
jno
aas
mov
cli
int
sub
lods
mov
test
mov
aad
pop
cmc
movs
fild
je
js
sbb
inc
add
in
pop
cdq
int3
ret
adc
nop
cmovne
int
lods
ja
adc
jmp
inc
mov
(bad)
ins
retf
jo
fwait
mov
nop
(bad)
rcl
push
xor
jg
xchg
sahf
fisubr
lahf
add
ret
jae
jle
retf
cdq
and
inc
psubb
push
ret
jo
fisttp
sub
pop
scas
arpl
aas
(bad)
mov
ficomp
rcr
mov
ss
adc
mov
arpl
mov
lods
add
inc
xor
push
imul
enter
cmc
mov
sbb
out
jle
xchg
adc
(bad)
sub
int3
es
fmulp
dec
adc
xor
or
dec
imul
es
and
fwait
xor
outs
mov
(bad)
(bad)
fmul
je
aad
bound
cwde
adc
imul
add
push
sar
arpl
dec
pop
or
sub
nop
inc
test
popf
adc
sar
out
call
cwde
movs
xchg
sbb
mov
pop
jecxz
dec
adc
mov
mov
or
std
lock
cmc
xchg
in
jp
imul
retf
pushf
leave
repz
mov
inc
out
(bad)
cmp
mov
popf
lods
add
in
jno
cld
jnp
stos
fadd
int3
sbb
clc
add
inc
adc
cmc
add
xor
call
in
and
imul
add
jo
cmp
fcmovu
add
inc
push
je
test
ss
imul
mov
add
cmp
cmp
stc
imul
inc
mov
iret
and
jmp
jmp
lea
in
adc
ins
push
(bad)
jmp
mov
add
mov
inc
adc
(bad)
lock
adc
mov
test
loopne
out
(bad)
(bad)
(bad)
xor
push
xchg
sahf
repz
loope
cmp
add
jl
dec
cli
stos
loope
es
dec
adc
fistp
jb
xor
sti
adc
push
mov
mov
adc
(bad)
fs
cmp
and
pop
mov
fs
cmp
jne
movs
push
nop
repnz
and
add
or
adc
outs
aas
push
mov
mov
pusha
bound
sub
cmps
xchg
or
fstp
xchg
movs
fdivr
fmulp
movs
movs
out
pop
shr
jle
jmp
stos
xor
sub
(bad)
pop
out
xor
jge
loope
lods
enter
rcl
inc
fild
mov
(bad)
cmc
pop
mov
sti
mov
aaa
std
sbb
sbb
xchg
mov
fcom
cld
or
aad
je
xor
jnp
push
shl
outs
jp
adc
das
xchg
and
jb
imul
jmp
pop
and
pop
retf
(bad)
into
cs
fld
addr16
shl
add
sub
in
fbld
xchg
fsub
shr
dec
adc
adc
inc
les
icebp
pop
aam
std
lods
ds
sub
cmc
adc
imul
cld
ffreep
cmc
cmp
sar
jg
pop
das
mov
arpl
inc
xor
movs
dec
mov
fadd
mov
test
push
cmp
dec
cmp
test
xchg
add
rol
sti
lds
push
add
scas
add
movs
or
test
je
mov
pop
shl
sbb
add
ret
popa
dec
push
push
shl
add
mov
cmps
repnz
pop
or
(bad)
in
shl
pop
aas
aad
mov
xchg
hlt
xchg
mov
xchg
or
fist
stc
outs
jae
add
mov
and
jo
and
xchg
enter
sub
in
mov
push
fdiv
adc
stc
enter
dec
mov
and
mov
lea
stos
pusha
push
inc
xchg
cmps
mov
je
ret
jne
in
sbb
les
psadbw
or
stos
jne
and
adc
stos
shr
icebp
cmps
rcl
sbb
push
cmp
cmp
out
in
add
rol
ins
mov
pop
in
push
int3
jbe
jle
fidivr
aas
mov
aad
xor
into
es
cld
retf
imul
mov
dec
outs
mov
xor
repz
or
rcr
mov
xchg
in
test
and
adc
jecxz
push
add
mov
test
mov
and
sub
call
mov
sar
or
xchg
lock
xor
outs
inc
call
popa
inc
cmp
es
sbb
shl
sar
or
or
xchg
cmp
and
adc
push
cmp
adc
(bad)
sbb
mov
fstp
dec
dec
shl
inc
adc
or
mov
mov
xor
lods
mov
jne
movs
xor
stc
sahf
inc
adc
cmp
outs
inc
mov
add
mov
int3
rcr
es
pop
mov
inc
ret
push
aaa
in
lods
sub
add
jg
in
scas
pop
fisttp
outs
mov
in
xchg
adc
and
(bad)
xlat
push
adc
inc
xchg
inc
inc
lds
dec
push
in
sar
cli
xchg
mov
sub
xchg
mov
xchg
repz
fistp
outs
outs
mov
lods
push
fimul
call
fwait
daa
fstp
leave
jo
pop
daa
arpl
pop
fwait
out
dec
int3
adc
jle
jg
mov
retf
repnz
out
and
nop
xor
jp
dec
adc
push
push
inc
inc
mov
mov
pop
pop
or
xchg
sub
xor
int3
call
jne
jae
sbb
mov
sub
adc
jecxz
jmp
mov
inc
cmp
fucomi
pop
cmp
je
xor
fidivr
xchg
and
or
mov
mov
fs
(bad)
popf
jecxz
imul
popf
popf
adc
or
inc
mov
aam
pop
popf
sub
cld
and
ds
mov
xchg
mov
out
or
retf
int3
and
ds
adc
data16
and
loope
daa
mov
into
movs
cld
aad
call
arpl
sbb
lea
out
mov
cmps
xchg
(bad)
outs
out
push
or
xchg
in
push
data16
cmp
jl
jae
adc
frstor
hlt
push
sbb
add
mov
sbb
nop
add
jbe
adc
pop
jmp
(bad)
pop
jns
std
adc
pop
fs
int
xchg
(bad)
daa
stos
jno
inc
sub
sub
fdiv
loop
ins
ja
lahf
scas
cwde
dec
retf
mov
push
imul
jl
dec
mov
sub
xor
jmp
add
sub
out
inc
cdq
push
ins
in
aad
add
push
das
dec
xlat
push
sti
fdivr
jmp
ja
test
test
sub
cmp
ds
data16
ret
mov
scas
mov
in
inc
loop
sub
jp
gs
outs
lahf
shl
jno
jp
dec
rcr
pop
lock
dec
jmp
adc
push
sbb
adc
into
fnsave
mov
xchg
and
push
dec
mov
dec
add
push
pop
cmps
xlat
dec
out
mov
sub
mov
test
and
mov
cwde
loope
jmp
ss
je
(bad)
aad
sub
leave
adc
mov
xchg
imul
push
shr
cmc
popa
out
aam
cwde
pop
fdiv
shr
pop
inc
sub
je
pop
outs
cmp
test
xor
nop
or
xor
arpl
cld
xchg
push
outs
adc
imul
sub
imul
(bad)
mov
mov
cld
cmp
addr16
mov
mov
or
ins
(bad)
push
pusha
test
fiadd
mov
loope
sbb
dec
mov
inc
mov
jns
push
sub
pop
mov
xchg
mov
jecxz
(bad)
pop
sbb
pop
jecxz
repnz
ret
in
(bad)
fistp
shl
pop
sub
shl
pop
xor
mov
pop
mov
or
pop
and
ins
push
and
jns
repz
test
jae
sbb
push
mov
aam
mov
adc
mov
pop
mov
inc
push
pop
fidiv
ret
add
xor
mov
scas
pusha
push
push
lds
jmp
loopne
xlat
jo
inc
fcom
sub
retf
xchg
mov
xchg
popa
iret
xchg
sar
adc
mov
addr16
mov
cwde
daa
jge
cmc
imul
xchg
add
mov
retf
sub
adc
mov
loop
(bad)
adc
imul
inc
cdq
fistp
gs
xlat
(bad)
xlat
(bad)
test
ret
popf
adc
loope
test
arpl
stos
inc
fdiv
push
adc
and
adc
and
pop
adc
fild
(bad)
retf
pop
retf
xchg
or
retf
adc
and
rcr
daa
cmp
rol
mov
repz
jne
ror
xor
sub
jp
int
sbb
jle
cmc
xor
lods
dec
fmul
pop
psrlq
btc
daa
lds
push
loop
gs
fldcw
iret
cwde
cmps
lock
adc
in
xor
rcl
sub
mov
stos
cmp
pop
add
inc
sti
sbb
retf
fadd
scas
sahf
lods
aas
push
jmp
sub
imul
es
push
cmp
test
add
sub
inc
test
push
cmp
fimul
mov
hlt
idiv
dec
sub
mov
ret
mov
icebp
iret
mov
stos
test
in
inc
push
mov
hlt
inc
jge
xchg
mov
std
dec
ins
(bad)
xchg
je
mov
xchg
and
into
gs
inc
sbb
push
push
xchg
call
mov
inc
xchg
or
ror
js
fbld
mov
call
mov
rcr
out
dec
add
xchg
sub
clc
jg
jmp
stos
dec
add
std
popa
stos
fild
jge
jb
sbb
cmp
mov
pop
push
das
adc
add
mov
ja
jb
repz
outs
(bad)
gs
fwait
addr16
xchg
pop
out
mov
imul
(bad)
scas
inc
in
pop
into
neg
jne
and
dec
cmc
in
mov
scas
inc
into
cwde
sbb
xchg
sbb
ja
or
jno
jmp
lods
dec
ret
adc
pushw
cmp
fsub
xor
dec
jnp
mov
inc
and
aad
jbe
jbe
inc
imul
push
ins
pushf
movs
fidiv
inc
stos
test
addr16
push
jl
adc
jnp
out
and
iret
jg
test
and
and
xor
daa
dec
loope
rol
adc
popa
xchg
xor
mov
mov
add
outs
adc
sub
stos
push
adc
movs
lods
xor
and
adc
mov
dec
int3
fistp
cld
adc
dec
je
cs
loop
fs
xstore-rng
cmps
inc
jg
(bad)
fcomp
fisubr
mov
sub
loopne
add
pop
aas
psubd
jo
adc
and
cvtdq2ps
(bad)
retf
jns
xchg
mov
adc
dec
enter
cmp
mov
add
push
cmp
or
arpl
(bad)
xadd
mov
sti
ja
mov
pop
aaa
add
aaa
or
sbb
es
cmps
cmp
imul
dec
inc
xor
stos
add
and
loope
mov
mov
out
dec
or
add
jecxz
scas
fsubr
cli
cmp
push
into
sbb
cmp
je
test
(bad)
fwait
mov
mov
movs
cmps
pop
cdq
inc
push
ror
dec
(bad)
ret
push
pusha
ja
ins
mov
fcmovnb
push
xor
jl
pop
push
sbb
jle
sub
xor
mov
add
pop
jo
mov
aad
ds
lods
imul
mov
pop
push
test
cli
adc
or
rcl
jp
lock
pop
add
jns
scas
ins
iret
(bad)
jmp
(bad)
bound
pop
retf
cwde
out
xor
ror
shr
js
adc
sahf
imul
sahf
adc
adc
adc
pop
or
(bad)
pop
cmps
sub
addr16
mov
movs
repz
xchg
retf
mov
adc
jns
shl
les
mov
xchg
fisubr
inc
scas
cmp
inc
aas
adc
jecxz
popa
add
push
(bad)
imul
(bad)
xchg
add
xchg
pop
outs
js
fimul
iret
in
repnz
lock
mov
out
pop
out
xor
cdq
movs
repnz
rcl
push
ins
push
lods
dec
mov
div
and
icebp
inc
stc
js
test
rol
add
mov
inc
mov
and
shl
fisubr
pop
shl
mov
mov
jp
retf
test
gs
inc
mov
aam
mov
aad
dec
inc
xchg
mov
xor
sub
cmps
ret
jge
jl
icebp
mov
adc
xchg
imul
push
icebp
cmp
dec
mov
fwait
xor
test
in
mov
cmp
dec
pop
or
jb
jns
out
jecxz
jmp
ret
(bad)
and
cmps
movs
add
test
mov
jns
sar
mov
fistp
test
outs
push
push
ficomp
sub
call
pop
jns
mov
std
dec
or
fs
mov
neg
mov
mov
(bad)
std
inc
mov
stos
sbb
mov
imul
cmp
mov
sub
das
dec
mov
mov
rcr
cmp
in
mov
cmp
xor
adc
fiadd
jecxz
push
pop
and
pop
mov
test
jae
ja
test
xor
cld
cmp
test
(bad)
mov
hlt
shl
int
(bad)
adc
push
inc
mov
fwait
dec
jns
repnz
loopne
xor
repz
fdiv
inc
arpl
pop
and
xchg
imul
ds
out
push
jl
ins
jl
mov
mov
pop
sbb
arpl
popa
mov
into
jnp
lods
lods
ins
add
mov
mov
mov
out
movs
mov
adc
add
loope
ret
jo
ins
cmps
mov
clc
out
repnz
dec
and
loopne
push
call
and
xor
push
jmp
repnz
sub
retf
lods
jns
or
lahf
xchg
cmc
arpl
das
mov
test
xchg
pop
scas
test
mov
xor
mov
xchg
or
dec
sbb
cmps
movs
xor
int3
stos
xor
adc
mov
mov
mov
ins
jbe
cld
add
jecxz
and
dec
push
push
repz
ficomp
xor
repnz
xlat
icebp
mov
das
jnp
ja
(bad)
mov
mov
cld
mov
xchg
into
lahf
dec
dec
out
aam
test
sbb
dec
sub
addr16
jb
sbb
mov
adc
mov
arpl
stos
push
ficom
mov
push
popf
sbb
pop
pushf
les
data16
push
mov
std
mov
std
fmul
jmp
int
mov
clc
xor
stos
fstp
jne
pop
ss
fcomp
xor
imul
ins
mov
jbe
leave
popa
mov
sti
(bad)
clc
outs
adc
imul
fldenv
call
add
xor
repz
fisttp
lahf
sub
scas
jp
jg
mov
sbb
add
test
lods
mov
or
in
push
push
shl
es
(bad)
pop
lea
sbb
lds
cwde
mov
inc
xchg
pop
pop
or
mov
or
xor
je
fwait
loopne
movs
imul
pop
xchg
adc
fiadd
int
std
test
jo
fstp
arpl
and
inc
ret
pop
movs
jns
repnz
mov
(bad)
loope
cmp
push
cmps
cmp
(bad)
(bad)
fnstenv
push
push
movs
cmp
sbb
sahf
mov
aaa
std
sub
cdq
push
shl
push
div
jle
gs
outs
jl
mov
bound
int3
mov
mov
push
xchg
loopne
xor
div
repnz
loope
jecxz
mov
and
ror
sbb
(bad)
hlt
imul
pop
adc
ror
mov
xor
call
(bad)
dec
rcr
sbb
aaa
xchg
(bad)
sub
sbb
outs
mov
pop
mov
addr16
(bad)
cmps
jno
pop
push
dec
out
mov
pop
jecxz
mov
aas
push
sahf
fwait
psubq
cmp
mov
test
jne
out
dec
fstp
(bad)
hlt
xchg
arpl
imul
xchg
cmps
xor
adc
or
repz
aaa
aad
jb
pop
jmp
test
popa
repz
rol
popf
ffreep
mov
shl
pop
adc
out
cmp
mov
(bad)
push
hlt
aam
mov
iret
frstor
cli
leave
dec
lahf
loope
imul
or
and
mov
sti
cmovl
std
or
sbb
push
rcl
fwait
inc
jb
or
xlat
js
mov
xlat
and
sbb
int
xchg
out
sub
push
and
in
push
dec
push
pop
sub
jecxz
into
sub
xchg
test
gs
jae
cdq
mov
fidivr
jbe
aaa
lock
test
xchg
jl
je
cmp
push
and
mov
cmp
adc
sub
fwait
cmp
xor
inc
test
pop
test
xchg
je
(bad)
(bad)
outs
push
sbb
jo
(bad)
lock
mov
sub
jnp
add
mov
cmps
xchg
es
dec
mov
or
sub
call
ficomp
cmp
cli
test
rcr
dec
jge
mov
fnstenv
out
rol
jne
and
mov
xchg
push
xchg
push
add
outs
dec
pusha
mov
xor
mov
imul
xchg
gs
in
mov
xor
sbb
adc
js
fstp
test
outs
push
ror
enter
call
hlt
dec
dec
xchg
rcr
mov
in
ret
and
rol
cld
int
sub
mov
jbe
in
(bad)
ins
retf
xor
lea
into
push
(bad)
call
push
jecxz
sub
xchg
sbb
leave
(bad)
sbb
fdivr
mov
push
mov
jmp
xlat
sbb
push
mov
and
ret
mov
dec
inc
clc
enter
out
push
push
hlt
or
pop
sahf
(bad)
(bad)
movs
cmp
int3
fsub
mov
pop
daa
(bad)
lods
aaa
loop
imul
inc
mov
jmp
and
xor
mov
ficomp
nop
rol
je
mov
loopne
sub
fisttp
fidivr
add
jp
mov
aaa
mov
ja
ret
dec
test
test
cmp
aas
(bad)
loopne
mov
push
ror
lods
cdq
mov
xchg
dec
and
and
jl
mov
in
and
arpl
ficomp
dec
sbb
jmp
mov
int
ds
hlt
scas
(bad)
ficomp
dec
mov
nop
or
pop
sub
imul
or
sbb
add
mov
in
lods
sub
dec
and
gs
mov
fist
and
stos
es
jns
fs
addr16
xor
shl
ins
mov
(bad)
sub
sub
mov
loopne
jae
push
jmp
xor
sbb
bound
push
or
movs
call
mov
fwait
xchg
mov
outs
cmp
repnz
dec
mov
cmps
jg
nop
inc
cmp
gs
je
js
inc
pop
add
add
gs
dec
cmp
test
push
in
mov
pop
jecxz
push
cli
outs
test
imul
mov
ds
imul
int3
loope
push
rol
pop
adc
lock
mov
dec
mov
sub
mov
inc
push
and
lahf
jle
cmp
cmp
(bad)
mov
loop
imul
cmp
dec
pushf
sar
pusha
mov
dec
shl
cli
inc
mov
arpl
mov
mov
sub
xor
jecxz
ins
ret
push
loopne
into
push
push
mov
std
mov
imul
into
test
xor
dec
js
mov
xchg
les
outs
mov
sbb
shl
xchg
push
ins
add
jb
inc
(bad)
shl
sbb
retf
mov
lds
stc
lods
jno
(bad)
retf
into
jb
repnz
add
pop
aaa
sbb
mov
sub
outs
dec
rcl
es
push
outs
in
outs
mov
lds
inc
mov
loop
pushf
mov
sub
es
xor
pop
imul
les
jnp
jmp
mov
xchg
fsub
inc
jbe
cdq
stc
jb
dec
ins
sbb
(bad)
xor
data16
xlat
mov
mov
pusha
loop
cmp
or
cmp
xlat
pop
outs
rcl
or
sar
sub
push
sar
mov
push
addr16
rcl
leave
cmovns
mov
cmp
stc
pop
cmps
lods
inc
sbb
ins
inc
cli
xchg
mov
fucomi
mov
adc
test
and
mov
out
hlt
inc
mov
movs
movsx
mov
pop
mov
mov
mov
and
add
ja
push
stos
sub
and
or
cmp
mov
iret
ins
xchg
push
ror
arpl
arpl
shr
jmp
mov
jg
xchg
sub
jo
(bad)
sub
int
xchg
in
add
sub
lds
xchg
sub
or
adc
cmp
aas
xor
neg
jb
and
ss
jo
in
jecxz
(bad)
test
add
rol
int3
jne
dec
mov
inc
retf
sub
adc
(bad)
daa
and
dec
(bad)
call
jb
aas
push
dec
sbb
ja
push
mov
jecxz
xor
xor
ins
das
fiadd
ins
frstor
cmc
jmp
xchg
in
or
ror
push
pop
cmp
ret
imul
imul
dec
mov
cmp
pop
pushf
jl
cmp
mov
in
sbb
jp
push
bnd
pop
push
xchg
rol
push
mov
fiadd
dec
inc
pop
xor
movs
clc
sahf
(bad)
jmp
(bad)
sub
and
mov
mov
arpl
sub
repnz
adc
nop
int3
(bad)
jae
push
rol
out
sub
popa
sti
ss
cmp
stos
cs
xchg
adc
data16
xor
cmc
popa
bnd
retf
xchg
aad
data16
inc
stc
adc
call
in
cmp
sub
lods
ja
adc
mov
mov
and
inc
fsub
or
ins
test
rol
cmps
pop
repnz
test
pop
jge
sbb
cmc
int3
sbb
fwait
inc
loope
ja
test
fidivr
shl
push
push
xor
in
movs
dec
jecxz
shl
(bad)
adc
(bad)
lahf
add
push
mov
dec
cmp
mov
push
jae
add
mov
jae
mov
dec
out
dec
jae
lods
push
and
sub
ror
mov
push
push
outs
daa
in
dec
ins
sbb
pushf
pop
or
or
mov
cdq
lds
int
inc
not
lods
movs
into
lods
pop
sub
xor
mov
test
or
xchg
cmp
mov
sub
icebp
call
xchg
push
int
inc
xchg
lea
leave
je
outs
jbe
xchg
cmp
mov
and
and
call
jb
fsubrp
movs
mov
(bad)
shl
push
out
popa
ret
inc
and
and
mov
xchg
fwait
shr
es
mov
mov
jmp
daa
push
pop
enter
xor
push
mov
std
inc
adc
sbb
aam
mov
stos
xchg
adc
xor
pusha
push
movs
mov
mov
pop
adc
mov
add
fdiv
mov
push
adc
aad
mov
sub
adc
fcom
out
imul
dec
ja
dec
mov
mov
jge
jg
pop
fimul
into
std
add
adc
xor
ror
std
jmp
dec
mov
inc
repnz
cmps
dec
xor
mov
pop
add
fldcw
je
fimul
pop
inc
cwde
bnd
cmp
jmp
cmp
fsubr
push
mov
(bad)
les
arpl
and
enter
jl
jmp
scas
sbb
aaa
cli
inc
jecxz
adc
neg
cwde
rcr
ds
mov
sub
mov
adc
mov
pop
sbb
adc
(bad)
sub
mov
push
lods
mov
jmp
repnz
and
push
inc
cmp
mov
pop
rcr
les
jmp
retf
mov
outs
ja
inc
and
or
add
pop
repnz
and
or
xchg
movs
mov
rcl
daa
(bad)
popf
adc
cmp
jo
aad
or
rcr
mov
(bad)
call
pop
inc
rcr
mov
jbe
clc
or
pop
fwait
mov
ror
jge
test
fistp
pop
and
dec
jbe
out
bnd
cwde
push
test
nop
pusha
dec
repz
xchg
ins
xor
mov
jg
sbb
(bad)
fcmovnu
mov
inc
jle
mov
nop
movs
sub
pop
pop
shl
int3
dec
cmp
add
jle
les
clc
fabs
add
popa
mov
jg
imul
lods
movs
mov
test
shl
ins
mov
pop
cmps
mov
in
add
dec
sbb
fisubr
xchg
push
and
stos
add
dec
lods
mov
add
mov
or
jle
aaa
into
inc
sub
mov
pop
cmc
mov
retf
pop
jae
imul
test
(bad)
pop
mov
or
pop
lods
add
mov
xchg
loopne
mov
mov
xchg
or
mov
xchg
into
mov
mov
mov
jae
loope
ss
iret
sub
movs
adc
icebp
fldcw
ss
xchg
aad
fnstenv
xchg
das
dec
fsub
xor
les
ja
mov
ret
push
xchg
jp
cmp
imul
dec
jb
sub
cld
xchg
mov
cld
and
jno
call
adc
pop
mov
lock
sbb
mul
dec
ins
xchg
or
sahf
in
(bad)
mov
mov
jl
popa
adc
and
ja
mov
or
pop
(bad)
xor
jmp
out
sub
jo
fucomi
loop
jge
xor
lock
out
xchg
inc
(bad)
pop
cmp
or
sahf
sti
sbb
pop
dec
or
jecxz
ins
mov
dec
jne
mov
outs
pushf
jne
cmc
or
push
jecxz
shl
push
(bad)
xchg
lds
data16
cli
push
xchg
outs
pop
xor
call
jle
mov
rol
sbb
mov
adc
fisub
lock
imul
icebp
push
hlt
jmp
pushf
ret
xchg
ins
js
cld
adc
imul
pushf
push
dec
jb
stos
pop
jb
jecxz
dec
imul
adc
inc
cwde
shr
fistp
push
ja
sbb
addr16
push
movs
mov
aam
mov
push
pop
retf
inc
xor
in
lds
nop
mov
out
sbb
xor
bnd
jp
sti
jns
leave
pusha
cmp
dec
xor
cmp
mov
xchg
scas
jae
mov
bnd
inc
retf
mov
push
inc
out
mov
adc
and
mov
hlt
sahf
xchg
cmps
lds
adc
mov
sbb
in
mov
inc
sub
ins
xchg
call
out
(bad)
std
bound
cmps
cmp
adc
lahf
cmps
lods
test
fldcw
push
mov
cmp
xor
sub
aam
es
scas
push
jns
mov
aam
pop
inc
push
and
movs
add
call
and
push
bound
outs
ret
xor
xchg
push
jmp
mov
mov
maxps
lea
rol
jl
jl
dec
push
lock
pushf
out
call
shl
stc
add
hlt
cmp
cmp
fwait
cmps
xor
mov
push
mov
xor
std
push
fidivr
pop
dec
dec
mov
dec
jge
sub
cmc
pop
dec
das
dec
sti
or
mov
js
cmp
add
push
sub
push
mov
mov
mov
dec
mov
out
hlt
cmc
sbb
jno
sub
xchg
leave
fs
and
jmp
push
test
aas
into
xor
inc
in
xor
mov
(bad)
nop
push
dec
mov
mov
inc
fisubr
jb
ret
pop
jle
int
retf
out
iret
fidivr
fmulp
pop
push
pop
imul
fidivr
(bad)
mov
push
add
push
dec
xchg
(bad)
xlat
dec
jl
ret
xor
ins
mov
jb
pop
pushf
pop
nop
push
movq
movs
push
clc
xchg
dec
adc
imul
xchg
pop
shl
cmp
std
adc
aas
push
jl
int
gs
mov
ins
jmp
sub
push
imul
adc
and
retf
pop
mov
(bad)
pop
adc
pushf
mov
in
mov
fadd
shr
pop
and
xor
push
xchg
stos
(bad)
pop
mov
loope
imul
ret
adc
mov
sti
cmp
push
jne
cmps
jne
xor
mov
push
sub
nop
js
sub
add
pop
test
arpl
pop
xor
int
adc
add
xchg
fcomp
fwait
xchg
sti
adc
fstp
jle
mov
ins
inc
std
lock
add
sbb
sub
inc
pop
inc
in
pop
and
ret
sbb
jmp
add
aad
mov
push
int3
rcl
push
jmp
xor
nop
aam
and
mov
ficomp
ja
mul
cmc
ss
inc
mov
fdivr
int
push
iret
loop
cmp
dec
ds
ss
ror
fsubr
dec
test
pop
adc
fwait
inc
push
pop
xchg
push
sbb
scas
rol
pop
test
push
xchg
sub
jle
mov
out
or
cli
(bad)
call
fdiv
xor
add
jns
imul
jge
cli
ins
popa
fcmovbe
push
push
loope
push
pop
repz
fsubr
inc
int3
cmp
cli
sub
dec
push
push
dec
sbb
cmps
jb
xor
inc
xchg
inc
into
cmp
pop
frstor
(bad)
imul
ins
ds
cld
xchg
out
pusha
outs
fild
add
push
mov
sub
mov
retf
movs
arpl
and
xor
test
cli
xor
imul
mov
pop
jge
fsub
xlat
(bad)
jg
aaa
ss
fcomip
cmps
pop
and
xchg
(bad)
mov
push
mov
sbb
sub
jmp
lods
mov
push
xchg
jl
mov
or
mov
jecxz
pop
cmp
mov
push
cmp
jmp
or
inc
xchg
cmc
test
inc
xor
loope
pop
imul
add
pop
xchg
pop
lock
add
sbb
cld
sub
cli
inc
call
ss
inc
repnz
pop
jnp
in
push
push
daa
jge
xchg
std
outs
ins
mov
inc
mov
dec
(bad)
adc
xchg
inc
mov
jmp
scas
xchg
cld
inc
gs
inc
shl
ret
out
data16
nop
jo
jl
leave
ins
nop
hlt
movs
jae
loop
call
jnp
cmps
push
inc
mov
jle
push
outs
inc
sub
fild
push
adc
mov
jns
retf
jle
pusha
adc
adc
jmp
jge
adc
push
es
adc
test
lods
fcom
sbb
and
inc
pop
push
jb
cmp
xor
movs
jp
(bad)
jecxz
ja
jb
das
and
mov
mov
xchg
(bad)
movs
inc
xchg
fs
and
call
stos
pop
mov
cmp
bound
or
ror
mov
(bad)
pop
mov
dec
enter
jg
xchg
ret
jecxz
or
lock
jecxz
mov
dec
fld
adc
mov
std
in
repnz
cmp
das
scas
aam
sub
aas
jnp
std
outs
gs
pop
jecxz
pushf
and
sub
mov
xchg
std
fs
call
push
test
fdivr
push
test
push
cmp
push
test
jo
push
in
sti
pop
xor
cmp
iret
xor
xlat
fsubr
adc
mov
call
pop
inc
repnz
fist
pusha
pusha
shl
test
stos
lock
mov
scas
pushf
adc
cld
imul
or
imul
int
call
fisubr
mov
mov
leave
sbb
adc
dec
fild
(bad)
es
outs
popf
inc
adc
neg
lods
scas
das
cmp
xlat
out
mov
adc
and
fcmovb
cmp
mov
test
add
adc
add
pop
xacquire
pop
scas
adc
jo
lods
fs
fcom
inc
cmps
icebp
or
mov
les
pop
adc
inc
into
jbe
push
mov
pop
mov
and
imul
outs
popa
int3
and
mov
dec
call
push
test
and
rcl
sub
and
add
adc
xchg
fs
(bad)
int3
cli
jns
adc
lock
fmul
fsub
imul
movs
scas
mov
clc
daa
cmp
cmps
pop
pop
aas
je
cmps
dec
outs
cmc
and
imul
test
mov
pop
and
push
mov
mov
pop
(bad)
ret
stos
dec
cmp
or
gs
scas
mov
sar
push
xchg
imul
cmp
icebp
out
pop
rcl
daa
ss
ja
hlt
lods
retf
dec
jns
mov
or
pop
sub
push
iret
lahf
shr
into
mov
push
dec
dec
sub
ror
sti
shr
push
sbb
pinsrw
rol
mov
fistp
hlt
pop
icebp
xor
xor
fcom
dec
imul
mov
or
in
pop
les
add
fmulp
push
in
xchg
fisub
jns
sbb
mov
adc
test
xor
inc
daa
or
adc
xor
jl
add
and
aaa
jecxz
out
mov
add
jae
in
and
fld
dec
nop
cmp
js
xor
stos
adc
mov
jg
pushf
popf
mov
sbb
(bad)
in
pop
dec
ficom
repnz
es
pop
nop
js
cmp
(bad)
gs
and
test
xor
sahf
pop
push
popf
or
xchg
mov
js
jmp
aaa
mov
icebp
es
mov
imul
and
outs
jl
pushf
cwde
ret
movs
or
xchg
or
xor
xchg
test
and
jle
(bad)
retf
pop
lock
push
sbb
imul
cld
dec
inc
popa
mov
xchg
pop
shr
cmp
cdq
call
(bad)
rcl
adc
push
loop
popf
mov
cmp
or
aam
stos
cmp
xchg
mov
pop
add
fucomp
push
loopne
imul
push
pop
adc
adc
es
mov
xor
and
cmp
sbb
dec
cmp
or
xchg
idiv
retf
(bad)
repz
mov
out
fcmovnu
xchg
adc
aas
cmp
fcomp
hlt
jl
add
mov
mov
jno
inc
scas
stos
xor
fcomp
cdq
cmp
push
not
cmp
sbb
fist
sub
add
inc
ja
jb
shl
(bad)
rcl
mov
in
cdq
daa
xlat
and
call
jmp
push
or
mov
leave
xchg
pusha
inc
outs
pop
mov
je
rol
inc
push
mov
xor
aad
inc
(bad)
cld
cmc
push
in
xor
(bad)
pop
jg
pusha
and
popa
and
call
shl
mov
sbb
add
aad
jle
iret
mov
push
cmp
lds
jae
dec
stos
icebp
(bad)
sar
push
jecxz
(bad)
retf
rcr
and
leave
ficomp
push
xchg
outs
test
mov
frstor
repnz
call
inc
popf
or
hlt
xchg
push
ins
xchg
push
xor
xor
mov
pop
sahf
test
fbstp
xor
loope
sbb
inc
or
test
pop
pop
and
xor
imul
sub
fsubr
out
pop
jl
and
or
retf
adc
sbb
bound
popf
dec
xchg
jl
out
fnstcw
scas
inc
sbb
add
js
int
out
repnz
leave
xchg
rol
aam
jbe
in
xlat
rol
xor
outs
and
rol
and
inc
repnz
(bad)
cwde
inc
or
pop
outs
push
daa
outs
fs
dec
add
jb
add
push
inc
pop
jae
sbb
idiv
out
sub
aaa
mov
cmp
dec
sub
test
aad
sub
dec
push
inc
xor
ss
mov
fsubr
test
jne
xor
add
dec
mov
push
mov
mov
ja
mov
sub
mov
outs
or
ss
push
cmc
mov
or
cmp
pusha
cmp
arpl
out
add
xor
pushf
push
mov
(bad)
sub
push
shl
xlat
pop
lods
mov
enter
test
stos
adc
xor
cmp
iret
mov
add
clc
cmp
lods
inc
push
add
test
loop
stos
jnp
(bad)
les
add
les
jno
mov
(bad)
fmul
add
jno
js
outs
pop
out
adc
imul
xor
sar
clc
stc
int
jns
jbe
cmp
xor
(bad)
dec
jno
fnstsw
push
push
cmp
mov
xchg
loope
enter
add
popa
ins
pop
cli
adc
xor
xchg
retf
out
mov
rcr
ret
scas
dec
imul
add
inc
ins
sub
push
mov
mov
and
sub
xor
scas
jecxz
mov
cs
test
pop
push
dec
les
out
lahf
ins
cmps
cmp
push
xchg
push
and
scas
cwde
shr
popf
or
add
inc
not
retf
xchg
xchg
outs
stc
or
mov
retf
jge
les
in
idiv
rcl
jp
(bad)
and
lods
jmp
jbe
pop
adc
mov
inc
xor
sar
into
pop
ins
lea
imul
mov
push
sub
mov
pop
xor
push
or
movs
gs
push
call
loop
push
(bad)
push
or
mov
inc
xchg
rcl
mov
movs
and
and
(bad)
xor
jge
adc
stc
ins
and
or
addr16
sub
nop
jmp
mov
pop
dec
adc
retf
mov
(bad)
repnz
fwait
clc
neg
adc
adc
mov
ret
rol
push
dec
data16
ror
mov
jbe
xor
add
repz
test
test
fs
jmp
repz
add
cmp
fimul
or
xchg
mov
cs
jb
inc
jbe
jg
jmp
inc
sar
das
ret
xchg
xchg
daa
(bad)
cmp
or
xchg
into
and
outs
sub
inc
outs
ins
mov
inc
retf
push
mov
test
(bad)
sbb
mov
push
xchg
and
inc
cmp
sub
daa
mov
imul
xor
scas
cmp
mov
mov
push
xor
jb
jo
test
pop
outs
push
cmp
add
loope
adc
dec
ret
aaa
fst
push
xchg
(bad)
mov
jae
or
pop
ins
pop
adc
cmp
pop
sbb
gs
push
ja
fcmovnu
xor
push
pop
sbb
mov
mov
adc
pop
push
stos
cmp
mov
lods
ins
xchg
clc
arpl
scas
retf
outs
ret
dec
push
dec
sbb
shr
adc
(bad)
aaa
cld
cld
jnp
scas
adc
mov
shl
add
push
les
push
pop
pop
cmp
add
sub
sub
push
cs
add
or
sbb
mov
cmp
mov
mov
sub
jp
mov
rcl
push
push
mov
xor
dec
retf
jge
xchg
repnz
sbb
push
imul
dec
mov
lods
rol
nop
xor
ins
in
dec
xchg
push
or
test
lock
fcomp
leave
inc
jp
or
or
mov
pop
jmp
push
and
cwde
jp
add
inc
xor
imul
(bad)
aad
adc
pop
dec
pop
js
cmp
ja
das
or
sub
mov
faddp
mov
nop
cmps
cmp
sbb
dec
repnz
scas
push
icebp
dec
bound
test
add
xchg
xchg
call
add
in
arpl
adc
icebp
sar
xchg
jae
push
int3
in
inc
jno
in
adc
or
shr
cmp
add
dec
scas
int3
test
bound
fist
cmp
gs
inc
cmps
enter
dec
es
and
mov
lock
or
xor
sbb
sbb
ins
xchg
addr16
repz
fidiv
pop
push
add
xor
and
lock
ja
in
in
sub
movs
jo
cmp
pop
jns
pop
push
or
pop
push
add
xchg
cwde
in
mov
pushf
stc
out
imul
mov
dec
fs
jo
mov
jo
inc
pop
cmp
out
cdq
inc
adc
ret
cmps
mov
mov
in
repz
lds
or
dec
out
jne
mov
xchg
jbe
cdq
dec
out
mov
movs
stos
shl
mov
jmp
sub
call
push
imul
dec
add
test
dec
fwait
test
mov
mov
call
jmp
retf
cmps
dec
outs
add
ret
(bad)
sbb
xlat
sub
or
stc
fld
lock
adc
push
push
(bad)
cmp
fwait
test
dec
fiadd
xchg
mov
jno
imul
into
lock
hlt
outs
cmp
add
jl
outs
mov
pop
sbb
scas
xor
js
mov
jae
inc
cmp
iret
jno
xor
cmp
xchg
adc
(bad)
cli
and
cmps
shl
and
and
pop
mov
daa
dec
and
xchg
repz
push
adc
jmp
ror
sbb
fnstenv
jmp
mov
inc
sbb
daa
inc
mov
push
movs
fucomip
mov
push
(bad)
pop
dec
jnp
and
or
xchg
mov
aaa
xchg
stc
dec
(bad)
nop
mov
sbb
sbb
ja
dec
inc
jmp
lock
data16
popf
mov
add
int3
cwde
inc
or
shl
outs
lea
sahf
mov
test
mov
sti
(bad)
cmp
or
icebp
push
xchg
addr16
fistp
dec
mov
sub
pop
xchg
mov
scas
add
and
scas
jbe
push
pop
pop
out
xchg
jae
xchg
dec
xchg
jne
cmp
and
rcl
push
(bad)
(bad)
sbb
dec
add
dec
push
les
push
sbb
enter
inc
xor
jns
ins
test
cmovns
popa
inc
stc
pop
add
push
(bad)
pop
loop
pusha
je
imul
xchg
xor
shr
gs
xor
sbb
ret
mov
out
sub
fucom
fwait
pop
mov
das
add
retf
inc
and
push
push
inc
stos
pop
cvtps2pd
xchg
mov
push
mov
and
or
leave
fadd
inc
mov
imul
dec
mul
imul
mov
(bad)
cmp
push
cmp
or
or
sbb
and
push
jecxz
in
or
inc
xchg
fstp
xor
xlat
(bad)
dec
pop
jbe
pushf
scas
jo
jns
inc
aam
and
stc
aam
lods
je
push
ret
cmp
add
sbb
adc
js
call
lock
xchg
fadd
sub
cli
dec
imul
sbb
xlat
clc
daa
mov
ins
mov
fcomp
imul
iret
cmc
mov
ja
scas
leave
lods
jbe
mov
jbe
add
adc
xchg
(bad)
or
mov
pop
add
dec
mov
aas
inc
mov
aas
sti
or
push
call
and
or
fucomip
mov
jns
hlt
repnz
cmovg
add
push
addr16
into
fild
push
mov
(bad)
and
rcr
inc
mov
push
dec
mov
cdq
in
jne
movs
mov
in
push
daa
sub
popa
jae
iret
fild
jne
mov
cmp
sbb
pop
ja
(bad)
push
sti
lahf
and
scas
cmps
repz
push
and
out
int
or
or
les
push
imul
sbb
mov
test
push
aam
iret
rcr
jno
ret
mov
and
or
cmps
or
mov
je
mov
shr
mov
pusha
dec
xor
sbb
into
fimul
sbb
add
or
xor
inc
push
pop
jne
(bad)
lods
out
popa
pop
dec
pop
dec
scas
jmp
test
(bad)
sar
out
(bad)
lods
in
fwait
xchg
jno
push
mov
jle
mov
mov
clc
cmc
add
cmp
icebp
movs
and
ror
push
push
and
clc
out
sbb
int
mov
xchg
xor
movs
popa
sbb
dec
mov
and
rol
(bad)
int3
sbb
and
mov
ss
dec
popf
aam
jecxz
outs
ret
into
mov
btr
lahf
xchg
xchg
mov
sti
xchg
fwait
xor
mov
sub
pop
mov
(bad)
pop
aad
(bad)
cmps
and
js
pop
call
mov
inc
ret
outs
mov
pop
out
ins
sbb
subps
jmp
imul
fst
test
retf
fwait
daa
jmp
xor
mov
sbb
je
(bad)
sbb
cmp
repnz
gs
lahf
jl
scas
push
inc
int3
nop
(bad)
out
mov
mov
dec
cmc
(bad)
mov
inc
cdq
out
neg
adc
enter
mov
fnstsw
and
pushf
mul
or
xchg
inc
dec
enter
dec
(bad)
inc
mov
sub
mov
pop
cld
fwait
arpl
lods
icebp
mov
sub
xchg
xor
gs
adc
enter
mov
sub
(bad)
fdiv
int
stc
cmps
pop
dec
xchg
pop
pusha
mov
push
adc
lods
fisttp
test
bound
cmp
ds
repnz
mov
test
les
cld
shr
retf
scas
push
fwait
mov
inc
call
loop
inc
mov
test
sbb
and
imul
ins
or
lock
popa
push
mov
test
mov
out
xor
push
je
leave
dec
add
adc
and
jecxz
push
pop
add
cmp
imul
add
mov
pushf
shl
adc
adc
div
mov
test
sub
bound
out
xchg
mov
mov
fst
xchg
and
hlt
xor
fnstenv
jno
or
test
sbb
dec
call
iret
xchg
xor
js
adc
mov
cmps
or
movs
int3
and
movs
pop
retf
cmp
clc
inc
rep
daa
dec
rcr
data16
add
call
ss
sub
inc
lods
inc
add
dec
push
jbe
in
imul
jno
hlt
aas
sbb
sbb
xor
leave
in
stc
fcomp
hlt
pop
sbb
es
aam
mov
jmp
stc
test
(bad)
adc
dec
js
ror
dec
cmp
xchg
or
outs
aad
ja
call
jns
shl
(bad)
xor
sub
xor
pushf
mov
cmp
jnp
or
mov
lods
mov
outs
xchg
retf
movs
mov
fmulp
aas
or
inc
dec
mov
dec
into
mov
xchg
push
mov
out
ins
fidivr
test
push
aam
mov
inc
dec
scas
in
outs
enter
rcr
push
mov
pop
pop
or
mov
jl
into
mov
fdivp
in
jmp
mov
test
pop
adc
stos
out
lds
pop
das
inc
(bad)
dec
sub
inc
mov
sub
into
outs
and
enter
ds
pop
pop
jbe
mov
xor
sbb
jno
inc
mov
data16
adc
mov
retf
add
shl
cmp
sar
dec
(bad)
pop
xor
std
mov
adc
aas
gs
(bad)
daa
fisubr
mov
sub
dec
fnstcw
loope
xchg
scas
dec
xchg
pop
dec
cmp
mov
mov
cmp
in
aas
dec
les
mov
mov
es
fwait
pop
(bad)
fidiv
(bad)
mov
jno
mov
cld
pop
sbb
dec
jle
xor
xchg
mov
mov
js
pushf
sahf
push
push
call
mov
and
mov
daa
popf
ret
push
cmp
aas
repz
ins
jne
call
mov
mov
jns
in
loop
adc
adc
dec
sbb
push
sbb
mov
and
and
and
mov
push
out
push
jge
push
sbb
stos
pop
or
jmp
add
inc
out
leave
push
loop
jle
jl
test
dec
cdq
push
jne
fimul
jbe
fcmovbe
inc
jne
movs
jne
ins
fisubr
pop
aaa
popa
test
mov
mov
mov
inc
ror
outs
std
xor
(bad)
xor
dec
out
cmp
mov
mov
ja
out
push
jmp
addps
pop
adc
mov
(bad)
stc
add
data16
cld
mov
cmp
mov
mov
inc
dec
and
gs
or
inc
mov
add
js
hlt
inc
ins
or
scas
lods
repnz
xor
repnz
jmp
stos
push
sahf
sub
out
push
inc
mov
test
leave
mov
mov
enter
inc
push
push
pusha
sub
cld
push
arpl
fild
dec
(bad)
loope
dec
pop
and
pop
push
pop
gs
mov
add
imul
popa
ss
cdq
aad
mov
cmp
pop
cli
pop
not
outs
push
gs
jmp
(bad)
xchg
stos
pop
je
pop
push
push
pop
aad
imul
addr16
repnz
scas
add
popf
xchg
(bad)
sbb
fcom
jne
iret
aaa
xchg
dec
fisttp
jns
rol
mov
test
xor
or
jmp
sbb
or
inc
retf
adc
cdq
sub
sub
ins
mov
in
inc
adc
mov
cmp
and
xor
addr16
(bad)
push
adc
pop
mov
pusha
call
loop
jl
test
call
mov
mov
mov
adc
adc
xchg
mov
enter
nop
xor
loope
sub
and
dec
xchg
outs
dec
push
mov
pop
sbb
push
mov
and
adc
mov
xchg
dec
push
int
repz
sub
in
mov
ss
ja
xlat
jmp
clc
movs
fiadd
jle
pop
pop
fisubr
stos
xchg
pop
(bad)
add
cmps
inc
adc
adc
es
adc
sti
mov
sub
xchg
ds
dec
sbb
push
fwait
in
in
pop
sti
fs
jb
xchg
push
jmp
dec
and
mov
std
lods
rol
sub
mov
lock
mov
or
push
out
cwde
mov
sub
cmc
jno
in
push
fist
ret
mov
hlt
mov
es
push
push
mov
jb
stc
ret
sbb
nop
and
int3
pop
jns
cmps
cmp
loope
fild
xchg
test
std
rcr
in
popf
sub
sub
add
out
ins
dec
inc
test
lods
dec
(bad)
int
ret
push
cli
mov
je
dec
rcl
icebp
sti
xchg
xlat
lds
movs
adc
idiv
(bad)
or
imul
add
xlat
mov
inc
jecxz
loopne
mov
stos
xor
enter
add
mov
mov
test
ins
cmp
or
call
sahf
and
xlat
or
dec
mov
(bad)
data16
xchg
sahf
cmps
fnstcw
ins
jg
test
sub
fstp
mov
or
dec
add
fldcw
lods
(bad)
fiadd
jmp
mov
sbb
fwait
add
ins
jmp
push
cmps
lock
dec
mov
xchg
mov
call
adc
xchg
lods
pand
adc
adc
xchg
cmp
dec
outs
fwait
push
dec
std
clc
jne
aad
add
xchg
aad
push
push
or
jae
pop
dec
sahf
and
xlat
add
je
add
mov
add
and
mov
and
add
mov
(bad)
xlat
leave
(bad)
(bad)
pop
(bad)
dec
pop
ja
mov
xor
and
mov
xchg
xor
fld
push
retf
lahf
test
add
mov
rol
sar
push
mov
cmp
icebp
shr
xor
dec
push
jbe
sub
mov
in
ja
stos
mov
pop
push
imul
push
aad
aad
mov
in
and
jle
dec
jl
ss
cmp
loopne
mov
xchg
push
mov
outs
aaa
int3
arpl
outs
push
inc
div
cmp
mov
xchg
inc
push
add
jns
and
cmp
ja
inc
dec
sub
jmp
mov
or
int3
mov
retf
inc
cmp
inc
pop
std
fcom
lock
mov
mov
dec
inc
push
sub
in
(bad)
mov
mov
or
dec
mov
sbb
es
loopne
or
in
loop
xchg
sahf
pop
sub
out
xchg
test
lds
inc
cs
(bad)
xchg
xor
outs
jmp
imul
jp
test
dec
jbe
mov
xlat
mov
jnp
pop
imul
cli
outs
inc
sbb
mov
dec
ffree
push
and
mov
cld
xor
xor
ins
call
shrd
(bad)
idiv
and
and
cld
lea
xchg
stos
repnz
push
js
dec
adc
outs
pop
adc
xchg
cwde
lods
iretw
inc
adc
or
push
(bad)
mov
stos
sbb
imul
test
out
push
sbb
xchg
dec
dec
sub
mov
mov
sbb
fst
jge
call
jae
and
xor
inc
add
aaa
mov
out
mov
dec
xlat
dec
sub
pop
push
mov
adc
or
stos
repz
cmp
imul
xchg
inc
cmp
cmp
ret
ror
sbb
add
mov
out
push
lock
mov
pop
dec
mov
pop
xchg
inc
sub
sub
inc
xor
(bad)
iret
hlt
mov
es
inc
sbb
mov
sub
lods
fnstenv
jb
clc
and
add
mov
outs
add
cmc
inc
or
stc
inc
in
shl
push
push
es
mov
test
xlat
xor
jae
cli
cmps
outs
call
imul
jbe
and
sub
cmp
pop
and
imul
push
push
movs
mov
push
mov
cmp
test
sbb
lea
ret
mov
pop
(bad)
xchg
mov
rcl
lods
int
dec
jo
lock
shr
mov
mov
inc
aaa
add
jnp
add
daa
xchg
mov
and
in
movs
sbb
add
jbe
jno
mov
lods
pop
xor
loopne
jbe
jns
add
repz
mov
ss
adc
jge
movs
sub
dec
mov
sub
xor
movs
jnp
sub
das
jnp
xchg
sbb
ins
add
jmp
adc
in
nop
xchg
sbb
loope
movs
cmp
sbb
pop
and
and
popf
adc
cmp
iret
bound
jne
jl
ror
and
jecxz
xchg
jg
or
push
push
jle
mul
or
push
mov
std
je
mul
inc
psllw
adc
pop
fidivr
jns
mov
ss
mov
cmp
xor
(bad)
xlat
push
cmp
jnp
lods
mov
cmp
into
out
or
add
push
push
pop
jg
aaa
fst
in
fisub
(bad)
cwde
or
xor
scas
or
pop
xor
out
lock
fdiv
outs
lods
(bad)
out
inc
adc
jbe
jnp
imul
dec
pop
popa
jg
imul
mov
in
add
jne
mov
jmp
fimul
mov
aad
xchg
sar
xchg
mov
push
(bad)
sbb
pop
add
or
in
sub
icebp
rcr
add
pop
test
fst
call
add
pop
lods
jns
sub
push
enter
inc
mov
out
rcl
sbb
and
push
xchg
dec
lock
sbb
xchg
mov
cwde
stc
das
stos
loope
ficom
pushf
out
(bad)
mov
mov
ds
xor
sub
ret
stos
retf
add
or
imul
in
repz
mov
jbe
fsub
inc
push
in
pusha
mov
fst
retf
adc
cli
mov
jns
inc
les
add
cmp
inc
push
fisttp
cmps
ret
sbb
xor
xchg
pop
stc
dec
retf
cmps
mov
mov
rcr
idiv
mov
rcl
xor
adc
pop
mov
jno
popa
bound
out
sbb
mov
inc
aas
arpl
es
dec
sub
fild
push
xchg
lock
into
(bad)
cmp
dec
xor
stos
mov
lahf
(bad)
pop
loope
test
cmp
js
or
mov
std
in
scas
mul
push
jae
mov
(bad)
pop
pusha
fwait
loop
dec
xor
dec
das
mov
add
push
add
xor
adc
div
imul
jmp
push
icebp
pop
rcl
and
push
xor
cmps
aad
xchg
xchg
cmc
cmp
mov
es
shl
pop
push
or
imul
or
ja
and
push
xchg
clc
mov
test
mov
(bad)
outs
aas
into
dec
inc
jnp
lock
nop
jne
or
jge
ret
les
add
call
in
add
std
cmp
dec
sbb
jl
or
inc
ins
or
in
pusha
mov
fdiv
adc
out
lds
inc
mov
(bad)
ror
(bad)
fstp
or
sub
inc
xchg
or
sub
lahf
jge
add
adc
mov
jp
mov
adc
push
inc
add
sahf
je
jae
loopne
push
(bad)
push
aam
stc
and
scas
or
cmc
mov
mov
movs
scas
add
lds
lds
xlat
mov
(bad)
(bad)
in
push
test
adc
idiv
movs
adc
cmps
test
pop
aaa
cmp
xor
dec
test
shl
xchg
push
repz
mov
add
stos
push
adc
prefetch
mov
shl
push
cmp
mov
icebp
push
(bad)
xor
inc
sub
fs
shl
psubusb
xor
sbb
pop
add
scas
dec
xchg
out
jno
les
test
add
int3
(bad)
jmp
loopne
mov
mov
ror
jae
mul
mov
(bad)
fnstcw
xor
cmp
loop
mov
(bad)
sbb
repz
xor
adc
inc
push
mov
xor
out
lods
dec
(bad)
jmp
or
or
cwde
or
daa
movs
xlat
sahf
inc
(bad)
je
push
fbstp
pop
sub
jle
dec
xchg
lds
aas
pop
mov
or
popf
mov
les
push
ss
or
cmp
test
fistp
in
sub
retf
sub
lods
fadd
addr16
sub
mov
call
clc
aam
adc
cmps
lock
mov
add
ja
or
inc
dec
outs
or
mov
rol
sub
bound
dec
cld
in
jbe
or
add
leave
or
push
pop
add
mov
mov
(bad)
sti
mov
les
sbb
sbb
jo
jge
retf
jns
sub
xor
xchg
in
jne
jmp
jbe
fdiv
push
sub
idiv
sbb
shl
sub
or
fs
dec
fiadd
and
mov
sahf
jg
inc
push
sbb
sbb
(bad)
gs
cdq
stos
fnstsw
fistp
fs
add
or
ins
sub
sub
jb
sub
and
or
push
mov
lahf
push
call
mov
loop
push
gs
leave
xchg
dec
loop
mov
cmp
retf
movs
cli
in
into
sbb
stc
mov
sbb
sahf
push
jg
enter
ret
hlt
jg
mov
sub
shr
xor
rep
movs
nop
pop
out
ret
in
hlt
push
lahf
mov
out
dec
sub
xchg
xchg
push
and
jne
jmp
int
mov
mov
mov
bound
lock
call
add
(bad)
in
rol
jp
test
jno
int3
rol
cmps
(bad)
das
jp
enter
ds
adc
push
cmps
jg
inc
lahf
push
dec
cmp
mov
add
mov
hlt
ins
test
xor
retf
add
cmp
into
fsub
lods
repnz
push
sbb
and
pop
mov
aas
out
std
xchg
xlat
mov
mov
clc
mov
sub
or
cld
inc
aas
adc
into
popf
icebp
es
inc
rcr
aas
cdq
sub
stos
call
outs
aas
shl
hlt
xor
icebp
adc
sub
mov
mov
shr
pop
ss
std
test
jbe
mov
push
(bad)
inc
sbb
and
mov
stos
pop
shl
cmp
add
xchg
shl
aaa
adc
ja
xchg
sbb
pop
pop
inc
hlt
dec
bound
sti
inc
ins
dec
gs
stos
or
and
push
xchg
jmp
cmp
pop
cmps
add
push
fs
imul
sub
mov
dec
scas
sbb
and
mov
pop
sbb
into
ja
cld
addps
std
dec
js
sbb
out
inc
adc
rcr
cli
test
loope
sar
mov
sahf
aad
mov
fdivrp
adc
sbb
fisttp
mov
pop
gs
mov
jno
or
fdiv
repnz
daa
outs
leave
por
inc
add
jns
mov
sbb
shl
ret
outs
imul
jp
arpl
inc
addr16
(bad)
ret
out
fisubr
cmps
repz
sbb
jle
retf
push
loope
sar
mov
call
ja
jnp
and
adc
leave
loope
mov
(bad)
rcl
and
cmp
add
jo
and
add
add
adc
daa
imul
sub
addr16
out
pop
mov
imul
push
je
ds
xor
xchg
int3
dec
push
fs
test
(bad)
mov
rcr
retf
mov
pushf
sub
cmp
jecxz
jmp
xchg
dec
je
imul
test
adc
gs
dec
(bad)
shl
jl
cwde
sub
aaa
xor
xor
add
inc
sbb
dec
mov
dec
(bad)
push
aad
or
adc
push
or
mov
repz
scas
or
adc
repz
test
scas
sbb
les
outs
fst
cwde
int3
lock
test
popa
fwait
or
pop
add
pop
cmp
repz
xchg
sbb
out
bswap
add
mov
mov
mov
movs
add
(bad)
inc
dec
bound
jle
repnz
xchg
jmp
leave
pop
mov
inc
out
add
pop
sti
push
sahf
add
popf
sub
loope
xor
mov
test
ja
repz
test
or
bound
sbb
sub
adc
mov
cli
dec
or
inc
lods
mov
inc
inc
sbb
inc
popa
and
das
or
push
shl
and
mov
cld
jb
frstor
mov
push
ins
ja
pop
imul
outs
mov
add
sub
repnz
test
(bad)
fwait
push
clc
sub
dec
mov
dec
and
jbe
mov
add
lods
add
cmps
cmps
mov
adc
sbb
aad
pop
fcomp
cmps
shl
int3
ins
(bad)
ja
mov
adc
sub
test
aad
leave
in
or
xor
rcl
xor
cmp
sbb
sub
cmp
fs
test
jne
leave
mov
(bad)
cmps
retf
clc
mov
mov
push
push
push
mov
adc
test
shl
(bad)
cmps
or
pop
or
push
mov
ja
dec
mov
scas
xchg
xor
sub
mov
cmp
rcl
lods
cmp
hlt
sub
not
and
mov
mov
ds
push
(bad)
sbb
jle
or
ja
shr
in
push
dec
xchg
inc
and
push
cwde
pop
or
jns
sti
add
push
ds
adc
jecxz
punpckhbw
inc
or
add
outs
ins
push
retf
inc
fstp
ja
or
and
(bad)
xor
(bad)
sbb
xchg
cli
aaa
dec
je
xchg
adc
dec
push
repz
mov
aaa
ins
jmp
dec
pop
pushf
hlt
sbb
push
cdq
mov
popa
icebp
mov
mov
cmc
xchg
aas
dec
les
adc
into
(bad)
in
lahf
jmp
and
in
(bad)
(bad)
jae
stos
(bad)
adc
adc
or
mov
push
and
dec
and
jle
and
(bad)
icebp
or
pop
push
inc
pop
fcomi
fwait
mov
mov
(bad)
les
push
add
cmps
es
push
or
xor
mov
and
out
jae
push
adc
jno
pop
sbb
cwde
jo
das
xor
imul
dec
mov
shr
cli
adc
pop
push
ror
rol
add
push
sub
adc
mov
int
mov
cdq
mov
add
ins
outs
adc
xor
js
dec
call
adc
push
call
scas
(bad)
xor
sub
and
xor
xor
sub
(bad)
push
into
in
in
jns
and
sbb
jb
add
xor
repnz
cmps
cmc
pop
adc
pop
fcom
sbb
leave
shr
xchg
and
pop
adc
push
xor
ja
mov
and
jns
(bad)
mov
enter
pop
adc
test
pop
es
cmps
xlat
dec
sbb
repz
out
js
fwait
pop
fild
push
cmc
adc
pusha
sub
adc
push
out
ja
mov
cli
cld
imul
xchg
lock
mov
in
inc
hlt
test
retf
adc
push
mov
fcomp
dec
cdq
xchg
add
fwait
sbb
movs
sbb
aad
mov
xrstors
repz
addr16
imul
dec
test
enter
(bad)
xchg
inc
push
rcl
jmp
aam
pop
or
xor
mov
in
retf
hlt
sahf
ins
sahf
mov
fcom
(bad)
xchg
mov
repnz
sub
inc
pop
and
dec
pop
mov
inc
shr
jl
ins
add
and
push
pop
inc
sub
push
or
add
ret
xchg
jae
mov
sbb
into
xlat
cmp
xchg
dec
push
sub
jno
aaa
sahf
push
mov
mov
add
and
bound
mov
and
mov
(bad)
int3
xchg
mov
jmp
scas
or
retf
mov
sahf
add
sbb
lock
jle
cmps
xor
fisubr
out
popf
xchg
adc
add
sub
push
cmp
popa
xchg
or
dec
and
or
ins
inc
mov
mov
cmp
pop
add
xor
movs
aaa
adc
xor
rcr
test
fwait
jns
pop
in
jp
sahf
fsubr
iret
lea
stos
or
xor
aas
ret
dec
pusha
cmc
xor
and
call
sub
movs
repz
sbb
iret
shl
push
jne
pop
jmp
test
or
and
mov
push
jmp
fmulp
retf
cmps
lock
fmul
imul
sar
cmps
jne
icebp
outs
mov
mov
jg
ds
sar
inc
dec
ds
(bad)
xchg
aaa
pop
cmp
fld
mov
adc
imul
cwde
push
mov
int
or
push
pop
mov
popf
push
popf
movs
icebp
mov
pusha
cli
scas
mov
dec
enter
popa
inc
add
mov
xchg
ret
ret
cmps
inc
dec
mov
scas
imul
pop
sub
popf
and
pop
cmps
xor
cld
rcl
mov
jmp
jno
fs
sbb
pop
cmps
les
dec
fnstenv
add
pusha
add
xor
stos
jp
std
outs
hlt
imul
aaa
test
pusha
enter
or
dec
mov
(bad)
icebp
mov
jae
pop
bound
mov
outs
sbb
and
xor
mov
push
mov
loop
jl
adc
dec
mov
ds
jle
imul
into
call
fwait
outs
ins
mov
mov
ror
aaa
mov
jmp
mov
inc
cmp
lds
and
adc
adc
test
and
cmp
or
adc
mov
pop
push
clc
leave
cmp
mov
cmp
sub
mov
add
or
repz
sub
adc
int3
adc
retf
dec
cmp
stos
aad
stc
adc
ds
pushf
mov
adc
hlt
leave
ret
js
scas
fild
lds
dec
adc
adc
lahf
cld
retf
loope
ins
mov
shl
into
mov
push
dec
mov
xchg
dec
inc
mov
mov
adc
fwait
int3
test
push
pop
inc
outs
push
mov
dec
jmp
dec
sbb
jle
or
jo
jl
jg
mov
lea
xor
outs
stos
push
stos
nop
rol
push
data16
sahf
push
in
and
xchg
add
sahf
rcl
outs
xchg
test
repz
lods
push
push
sbb
dec
pop
push
jnp
or
mov
jo
fcom
enter
jmp
sbb
imul
dec
test
dec
daa
mov
mov
jno
pop
(bad)
es
cmp
pop
jno
xor
cdq
sub
sbb
in
inc
icebp
repz
or
ret
push
sub
push
fidivr
(bad)
or
mov
sbb
call
pop
inc
xlat
xchg
movs
movs
repz
jno
mov
jne
mov
imul
xchg
(bad)
(bad)
mov
test
mov
dec
xchg
mov
pop
sub
dec
mov
ret
ss
int3
retf
stos
pop
outs
loope
pop
movs
rcl
retf
xchg
adc
sbb
lds
push
daa
icebp
push
gs
cmps
retf
in
dec
mov
and
or
repz
(bad)
inc
xchg
sbb
xlat
ret
mov
sub
ss
or
cdq
test
adc
pop
mov
hlt
cmp
jg
ds
xchg
icebp
add
bound
xor
test
and
or
fwait
cmps
and
push
mov
adc
leave
fs
push
test
call
inc
jp
mov
push
js
and
fidiv
mov
into
aas
cmps
pop
dec
push
push
test
(bad)
lods
in
imul
popf
jecxz
pop
imul
jne
push
fs
out
stos
sti
mov
les
aaa
fidivr
cmp
cwde
inc
or
fild
mov
cmp
stos
mov
dec
mov
fisttp
popf
inc
lock
inc
idiv
and
ins
sub
inc
clc
pop
xor
into
xchg
inc
aaa
sub
xchg
mov
ds
push
push
or
push
cmp
lea
sbb
mov
sub
cld
lea
pop
sub
(bad)
push
push
aad
adc
mov
xchg
stos
ins
mov
sub
mov
test
add
sub
pop
or
jne
pop
jns
in
add
dec
mov
bound
sub
sbb
xchg
or
(bad)
jbe
xor
mov
ds
dec
mov
mov
ds
add
(bad)
sbb
push
das
adc
jbe
pop
xchg
sub
sti
imul
mov
sti
inc
pcmpeqw
clc
adc
in
mov
lods
push
cld
mov
or
pop
mov
add
push
cmp
xchg
repnz
cmp
lock
adc
std
mov
xchg
jle
das
in
sub
loop
leave
fcmovu
or
sbb
cmp
scas
les
not
retf
mov
dec
stos
inc
and
jnp
enter
lds
sbb
and
cwde
lock
data16
sahf
cmc
pop
aam
and
stc
cmp
push
cmp
push
mov
jmp
das
cmp
pop
fidiv
fiadd
rol
xchg
dec
cmps
icebp
in
mov
adc
clc
lea
mov
daa
cmps
ror
cmp
scas
mov
lahf
scas
mov
in
lds
lods
out
popf
sbb
push
cmp
daa
repz
add
or
push
mov
inc
ss
mov
inc
rcr
cmc
loope
add
mov
loop
xchg
jecxz
call
das
jle
or
imul
or
sar
sub
jmp
jo
pop
adc
popa
adc
mov
and
test
pop
push
mov
scas
dec
mov
adc
jle
push
movs
xchg
lods
scas
out
(bad)
and
int3
cmc
sti
push
jecxz
sub
mov
mov
xor
mov
and
dec
ror
dec
jne
not
ror
jp
aam
lods
xchg
enter
fsubr
stc
push
jnp
outs
aas
cld
jno
mov
xchg
std
fcom
outs
les
cdq
imul
push
jbe
adc
mov
cmps
cmp
push
adc
xchg
mov
test
dec
aam
or
dec
outs
and
adc
lods
jo
adc
retf
push
(bad)
pop
dec
test
leave
or
pop
nop
daa
dec
int3
int
or
cmp
pushf
dec
mov
hlt
or
data16
ss
addr16
je
cld
mov
jne
mov
sub
mov
sbb
mov
mov
mov
dec
int
or
sub
adc
pusha
aad
mov
ror
sub
cmc
and
jo
(bad)
jmp
sti
scas
and
add
xor
addr16
and
ins
push
inc
fld
sub
sti
ja
int
repnz
push
call
dec
test
cmp
inc
addr16
ss
hlt
es
les
sar
pop
sti
mov
leave
fld
push
jno
and
sub
fs
inc
mov
scas
test
test
cmp
sbb
adc
add
jg
les
adc
dec
shl
cwde
adc
mov
dec
ror
out
mov
(bad)
data16
jge
int
push
pop
pushf
add
repz
adc
jg
(bad)
cli
leave
outs
jle
pop
sbb
inc
repz
lahf
cmp
cmp
ins
sub
fs
or
or
add
xchg
out
test
mov
mov
dec
push
or
mov
push
je
push
pop
(bad)
stc
mov
push
hlt
xor
inc
sar
mov
push
ds
(bad)
add
and
mov
inc
cmps
add
sub
pop
stos
stc
cmps
aam
es
pop
and
and
test
stc
adc
loopne
pop
xor
jnp
hlt
sbb
or
jne
pop
cs
(bad)
cmp
test
adc
adc
xchg
xchg
and
in
(bad)
adc
jecxz
aas
dec
loopne
rcl
fld
inc
cdq
js
in
cmp
jo
popf
mov
and
in
add
mov
jmp
adc
hlt
pop
jg
rol
stos
stc
cmc
fwait
call
outs
pusha
sahf
scas
adc
jno
ins
hlt
pop
push
add
cmp
add
das
mov
mov
test
movs
sbb
pop
jae
mov
push
enter
outs
xchg
push
jne
stos
inc
sahf
push
bound
and
xchg
adc
cmp
(bad)
sbb
mov
mov
mov
mov
std
xchg
clc
int3
addr16
push
push
(bad)
xor
xor
mov
mov
sub
mov
mov
mov
out
cmp
pop
scas
mov
in
jae
arpl
fidiv
je
fwait
inc
dec
dec
pop
push
jb
mov
cmc
sub
gs
pop
std
mov
and
(bad)
mov
mov
in
scas
push
jg
inc
inc
test
(bad)
adc
stos
xchg
sbb
call
adc
(bad)
mov
push
nop
repz
mov
cmp
aaa
jle
neg
add
jo
pop
inc
(bad)
jmp
int3
mov
(bad)
imul
sub
out
repnz
or
ins
je
adc
mov
cmc
ret
mov
jmp
xor
mov
cli
jo
jle
aaa
jmp
das
fsubp
cmp
sbb
mov
pusha
daa
dec
mov
xor
jbe
cmp
arpl
add
add
fmul
cmc
mov
in
rcl
or
cli
fstp
sub
xchg
sub
cmps
xor
jp
ret
mov
pop
sub
xchg
mov
push
les
lock
lahf
xor
xchg
cli
or
push
jns
push
ret
pop
mov
addr16
jne
or
sbb
mov
out
push
test
cmps
ret
aaa
or
mov
or
push
jbe
jae
jbe
jo
cmp
add
neg
data16
(bad)
pop
int
jne
pop
fwait
imul
es
push
adc
mov
int3
sbb
push
ror
mov
xor
cmp
int
iret
push
push
test
and
pop
(bad)
pop
jns
aad
xchg
stc
leave
add
cmc
(bad)
add
jnp
out
jno
gs
stos
and
fdiv
fstp
push
jae
fbstp
xor
push
mov
mov
mov
jle
sar
test
cli
pop
mov
out
adc
pop
or
shl
adc
inc
lock
pop
imul
in
add
loope
shl
rcr
test
mov
xor
cli
dec
mov
aas
push
mov
cmc
push
ins
push
ret
(bad)
dec
mul
xchg
push
fwait
add
fwait
(bad)
push
mov
fneni(8087
dec
mov
loop
call
mov
in
les
mov
ss
inc
pushf
pop
lea
retf
aad
data16
xchg
xor
or
dec
ficom
in
neg
mov
or
repz
push
ss
ret
jg
test
pop
adc
mov
push
push
stc
rep
and
fwait
cmp
mov
daa
jg
xor
cli
or
adc
pop
fsub
movs
cdq
xchg
js
les
dec
and
pop
fidivr
xchg
pop
cdq
mov
or
mov
xchg
repz
test
popf
xchg
hlt
jns
out
lock
stos
sar
add
pop
jne
push
mov
ins
push
ret
push
or
sub
retf
jb
xor
jno
push
mov
dec
cdq
add
xchg
add
out
xchg
mov
mov
out
cld
xchg
xchg
jns
sub
fst
fbstp
lods
stos
retf
stc
call
and
inc
enter
pusha
push
test
mov
mov
push
std
aaa
jo
jge
retf
int
ror
dec
test
in
sub
push
mov
iret
jle
inc
pushf
test
in
retf
or
xor
sbb
inc
fdivp
mov
retf
xchg
cmp
add
and
fs
movs
pop
jmp
push
in
pop
pop
gs
int3
jno
jns
cmps
retf
mov
inc
mov
ds
test
sahf
pop
daa
cmp
neg
int
stos
jmp
pop
out
adc
lahf
idiv
stos
dec
adc
fisub
adc
dec
mov
add
fucom
stos
cs
cmp
(bad)
cmp
sahf
jg
setae
xchg
paddd
sti
xchg
sub
movs
push
add
jo
lods
out
pop
jp
jp
cmps
mov
dec
mov
fs
push
inc
dec
and
cmp
test
fcomip
cs
pop
(bad)
aad
lahf
nop
push
sbb
mov
ins
test
aam
or
call
xchg
aad
out
jns
jne
and
rol
ror
stc
addr16
xchg
fst
fild
popa
sub
clc
cmps
adc
push
dec
sbb
es
fwait
or
mov
loopne
dec
and
and
push
adc
dec
js
jbe
mov
loopne
and
dec
addr16
ja
push
shr
cmc
xchg
xor
es
pop
pop
pop
popa
push
stos
ins
mov
push
aaa
dec
(bad)
loopne
dec
adc
push
repnz
pusha
inc
repnz
aam
bnd
call
sbb
icebp
add
int3
cld
arpl
and
and
jae
inc
jmp
sub
sub
inc
push
cmps
push
or
cmp
mov
cmc
cmp
push
add
or
mov
pop
adc
or
push
je
dec
inc
movs
sar
shl
repz
jp
idiv
push
hlt
retf
fwait
mul
xor
xor
push
(bad)
mov
pop
sbb
test
dec
in
mov
aaa
or
lds
sub
fs
and
jle
or
ficom
add
cmp
jo
in
push
rcr
pusha
pop
sub
cmps
sub
fisub
inc
popa
and
mov
or
inc
(bad)
rcl
fstp
jnp
push
inc
lds
pop
adc
(bad)
sbb
call
mov
lahf
aaa
retf
or
inc
xchg
stc
mov
cmp
aaa
xchg
out
pop
adc
outs
cmp
push
or
sub
loopne
es
pop
jp
dec
popa
inc
xlat
mov
mov
ret
jne
enter
and
pop
sub
or
lea
push
pop
or
pop
adc
(bad)
cmp
add
inc
mov
dec
hlt
out
pop
jae
leave
xor
dec
ja
fs
jl
aaa
dec
mov
add
lahf
aaa
imul
cs
pop
stos
daa
inc
xlat
and
arpl
dec
ficomp
data16
mov
dec
out
sbb
mov
pop
xchg
sbb
mov
pushf
test
mov
cmp
jnp
fisttp
int3
jae
rol
inc
pop
add
mov
sub
sbb
pop
or
scas
pushf
inc
movs
jge
ss
mov
add
push
and
outs
pusha
add
sub
out
shl
add
push
sub
add
mov
add
xor
add
aad
jns
fimul
dec
mov
sub
jmp
sub
in
pop
push
sub
enter
mov
pop
cmc
cmps
ds
clc
call
js
or
mov
fmul
push
cmps
lock
jmp
out
push
jbe
clc
mov
xchg
and
in
(bad)
dec
in
cmp
xchg
mov
jb
lea
clc
fwait
mov
mov
cld
imul
mov
push
addr16
(bad)
retf
add
inc
cld
xor
ins
int
mov
pop
dec
pop
xchg
mov
xchg
add
inc
data16
mov
mov
pop
test
xchg
mul
rcl
sub
inc
add
enter
mov
in
add
test
adc
xor
movs
kmovw
mov
xchg
int3
lods
or
cmps
sbb
outs
push
arpl
inc
pop
shr
lahf
xor
mov
rol
imul
inc
dec
not
fs
xor
and
das
pop
mov
xchg
mov
add
imul
inc
adc
pop
mov
sbb
add
mov
adc
imul
dec
retf
sub
or
sbb
sbb
or
int
stc
push
pop
cmc
outs
mov
(bad)
pusha
mov
or
xchg
mov
inc
mov
add
arpl
arpl
cmp
mov
fldcw
ds
add
(bad)
pop
in
sbb
(bad)
int3
pop
xchg
xchg
fcmovb
lea
ins
push
stos
sbb
out
test
jns
and
retf
jle
mov
lods
mov
mov
outs
fs
sbb
int3
mov
push
outs
dec
add
out
cmc
scas
sbb
hlt
rcr
(bad)
xchg
mov
ins
push
stc
push
add
fisttp
scas
out
cld
inc
jge
in
mov
gs
out
cmp
adc
fisttp
jae
mov
xchg
add
cmp
aad
loopne
or
out
test
xchg
outs
sub
or
and
mov
push
pop
and
sub
pop
fsubr
in
rcl
pop
xor
sbb
dec
out
loopne
ja
inc
pop
or
adc
jne
popa
and
xor
jbe
sti
sub
cmp
dec
adc
mov
call
loopne
mov
xor
loopne
mov
jmp
lahf
lahf
cmp
ja
jp
cmp
mov
mov
retf
hlt
lock
scas
add
mov
or
jge
mov
sbb
inc
mov
scas
mov
out
dec
push
cli
push
inc
dec
add
add
or
push
repz
or
rcr
test
out
sub
ins
outs
sbb
out
ret
xchg
test
ins
out
aaa
dec
shl
popf
scas
adc
std
addr16
cmps
xchg
test
out
sub
adc
push
in
sub
or
pop
cwde
pusha
loop
stos
push
lock
mov
pop
arpl
xor
fmul
out
repnz
xchg
in
movs
popa
scas
inc
rol
test
lock
shl
(bad)
mov
push
sbb
xchg
cld
js
inc
cmps
hlt
add
push
inc
mov
or
or
jae
stos
mov
jne
xor
enter
mov
pop
ins
mov
dec
mov
xor
cmp
retf
pop
jg
ins
ds
js
push
mov
(bad)
daa
mov
xchg
int
stc
cli
aaa
(bad)
pop
lock
test
dec
add
mov
lahf
add
lods
test
sbb
shr
inc
inc
xchg
call
mov
fs
fldenv
in
ins
(bad)
out
in
lahf
in
xor
mov
call
pop
bound
pop
adc
xchg
xchg
enter
ins
enter
push
div
or
push
aam
inc
inc
and
mov
cli
fld
(bad)
jg
and
int3
imul
xor
mov
dec
push
xor
and
clc
ja
jne
div
push
mov
(bad)
bound
(bad)
xlat
loopne
(bad)
ror
xor
loopne
mov
pop
les
pop
das
xchg
adc
loop
sbb
xchg
xchg
in
fmul
or
je
pop
push
js
lock
mov
popf
fst
shr
dec
pop
push
inc
jbe
pop
mov
jge
or
cmp
test
push
mov
add
cli
(bad)
pop
inc
dec
jns
fist
retf
or
sub
(bad)
mov
fs
ret
push
icebp
xor
(bad)
xor
lahf
in
mov
inc
push
xchg
cmp
retf
fisttp
mov
xor
std
ror
dec
jg
or
shl
add
xor
mov
mov
cmp
cwde
and
jne
push
cli
push
cld
and
jge
fldcw
push
add
mov
pusha
and
fcmovnu
and
sti
dec
ret
push
cmc
cmps
jge
sub
sbb
xchg
cmps
cmp
and
sub
pop
jecxz
pcmpeqw
mov
adc
(bad)
cmp
movs
sub
cli
pop
sub
jp
and
cmp
fnsave
test
or
dec
loope
mov
out
adc
sub
pop
mov
dec
and
push
add
and
out
pop
(bad)
jmp
push
lds
hlt
aam
jmp
bswap
leave
(bad)
stc
sub
cwde
mov
or
jl
test
pop
movs
rcr
sub
dec
xor
cmps
shl
sub
imul
inc
jae
bound
mov
jmp
adc
push
shl
add
inc
aaa
fld
jne
sbb
dec
and
add
jne
adc
sub
scas
cmp
retf
fwait
pop
mov
icebp
pop
fimul
jo
sar
sbb
mov
xchg
rol
xchg
add
dec
lods
mov
mov
daa
jae
sub
paddq
loop
mov
not
cmp
cmp
xor
mov
mov
mov
movs
mov
jnp
or
loope
sbb
mov
mov
sub
dec
(bad)
mov
(bad)
(bad)
jge
ds
mov
outs
cwde
mov
xchg
xchg
jno
leave
xor
pushf
push
mov
dec
repnz
shr
inc
call
push
jne
or
cdq
jns
mov
pushf
call
lods
pop
fcomp
jo
cld
in
push
xchg
popf
movs
xchg
mov
or
es
mov
pop
or
sub
xchg
loop
imul
mov
popa
pop
push
push
fsub
mov
hlt
mov
aad
mov
pop
repz
pop
cmp
inc
cld
in
cmp
add
cmp
xchg
arpl
jmp
xchg
and
xchg
jb
out
sub
cmp
clc
inc
imul
ja
rcpps
and
test
ret
sub
push
into
jmp
shl
loope
out
ja
mov
adc
add
aas
fimul
dec
shr
jae
outs
stos
add
pop
jnp
loope
inc
sbb
sbb
imul
mov
xor
daa
pop
mov
add
adc
lds
jp
push
out
fwait
pop
inc
mov
arpl
adc
sahf
mov
sbb
push
add
cmp
cli
dec
add
test
scas
or
jnp
test
test
cmp
(bad)
and
and
outs
test
aas
and
push
cmps
retf
or
push
(bad)
mov
out
outs
xchg
and
daa
dec
xor
fwait
rol
enter
jl
mov
or
icebp
imul
inc
sbb
lods
sbb
arpl
in
inc
sbb
test
sub
sub
dec
push
xchg
daa
add
push
bound
ds
neg
cmp
in
cmp
(bad)
adc
dec
add
adc
jnp
out
dec
jo
fs
dec
out
xchg
int
daa
cmp
es
pushf
dec
out
(bad)
iret
xchg
ins
add
xor
call
ror
jge
cmps
xor
push
inc
cmp
cmp
or
(bad)
int
push
cwde
or
sti
dec
inc
stc
outs
xchg
and
sub
test
xchg
mov
int3
fstp
int3
imul
cmc
jle
cs
dec
leave
or
pop
mov
popa
enter
ret
sbb
loop
in
push
or
mov
jbe
dec
xor
inc
ror
adc
pop
sbb
(bad)
aaa
das
test
jmp
shr
push
in
sub
fild
inc
mov
mov
xchg
fdiv
je
popw
daa
and
jl
adc
and
cmp
mov
sub
xchg
ja
cwde
xchg
mov
mov
cmp
fs
mov
jae
(bad)
ds
or
pusha
pusha
xor
push
add
pop
inc
xchg
push
js
sub
add
add
jge
fldlg2
or
in
and
sbb
add
jbe
enter
mov
hlt
out
pop
mov
mov
xchg
inc
mov
sub
iret
std
clc
call
cmp
add
sbb
fwait
and
enter
pop
add
mov
imul
call
pop
call
push
enter
jecxz
push
xchg
push
push
inc
add
ret
xchg
rol
std
sbb
mov
xor
out
stc
lods
into
sub
dec
push
iret
icebp
das
push
pop
jne
jnp
or
je
mov
xlat
rcl
hlt
daa
test
and
xlat
xor
sbb
dec
inc
jns
in
mov
int3
mov
shl
xchg
xor
mov
mov
ret
mov
pop
(bad)
lock
lods
jg
loope
push
retf
adc
fdivr
or
jg
lea
repnz
out
add
stos
sub
sub
out
test
adc
jmp
(bad)
lock
test
js
xor
(bad)
ja
mov
push
shr
dec
outs
pop
sbb
shl
mov
xlat
and
lds
sbb
jmp
or
loop
test
call
hlt
add
cli
iret
ja
loop
scas
les
sbb
rcl
shl
pop
jo
in
mov
mov
add
push
xchg
js
fdivr
push
in
inc
movs
adc
fwait
ins
in
mov
js
xor
call
mov
sub
mov
gs
adc
data16
fisubr
push
mov
jbe
shl
fadd
das
mov
xor
add
fucomp
push
enter
sub
ficomp
xchg
sbb
jo
fdivr
lock
adc
addr16
call
add
or
xchg
push
mov
mov
pop
sbb
cmp
mov
dec
mov
xor
(bad)
pop
mov
pop
imul
clc
popa
jmp
(bad)
fiadd
sbb
dec
rol
xchg
mov
sar
mov
shl
dec
popa
outs
aam
(bad)
movs
aaa
ss
pop
fs
sti
pushf
push
or
popf
fucom
adc
pusha
xchg
or
aad
adc
dec
adc
fstp
jg
adc
xchg
outs
lds
and
or
cmps
pusha
je
test
ret
pop
pushf
shr
sub
cld
or
or
adc
sbb
(bad)
scas
lock
xlat
int
arpl
or
mov
inc
mov
js
mov
and
retf
sbb
in
push
retf
into
mov
outs
adc
not
pushf
sub
test
adc
push
mov
sub
push
je
data16
mov
add
dec
and
(bad)
lds
sub
bound
jg
(bad)
lea
dec
cmp
sbb
sbb
pop
(bad)
gs
retf
push
ja
jmp
add
pop
test
mov
xor
mov
test
out
(bad)
or
xlat
adc
xor
or
icebp
jb
jle
pop
xor
mov
pushf
xor
push
xchg
jb
clc
cmps
dec
outs
in
test
xchg
push
push
jmp
aad
pusha
lock
mov
rcr
outs
mov
inc
(bad)
xor
xchg
or
pop
(bad)
loopne
cmps
sub
pushf
adc
fist
or
fcomp
popf
aam
mov
jle
jp
push
inc
and
fld
arpl
jle
cmp
or
xchg
ins
lods
movs
cmp
out
shl
je
xor
mov
sbb
jne
xor
aaa
mov
outs
push
pop
push
neg
mov
je
ins
xor
jmp
inc
jl
jb
fldcw
aaa
inc
mov
test
mov
push
mov
jmp
pop
pusha
pop
dec
pop
outs
xor
xchg
mov
jb
adc
das
add
in
dec
or
aad
int
(bad)
dec
mov
mov
and
mov
out
adc
loopne
inc
dec
mov
sar
push
sub
dec
pop
sbb
es
mov
(bad)
jge
dec
push
mov
aaa
inc
sti
jmp
pop
movs
add
lock
mov
scas
dec
cmps
lods
xchg
rol
mov
dec
ficomp
(bad)
adc
sub
es
pop
xchg
fcom
mov
and
ja
adc
out
cmps
movs
pop
icebp
fcomp
data16
xchg
out
(bad)
das
sbb
add
push
movs
sbb
loope
into
fidivr
in
pop
or
in
jle
stc
add
mov
fwait
xor
jmp
adc
jns
cmps
mov
jnp
dec
adc
dec
xor
sub
adc
rol
ins
fnsave
(bad)
bound
test
sub
loope
mov
dec
xlat
arpl
pop
mov
scas
in
sbb
push
and
popf
call
push
ins
jmp
fild
or
push
(bad)
inc
arpl
push
xchg
jbe
pop
pop
popa
add
jno
(bad)
mov
out
cmp
cmp
in
mov
ins
cdq
daa
xchg
stos
mov
sbb
loope
xchg
mov
xor
sbb
dec
jg
mov
sub
les
pusha
push
jnp
aaa
movs
lods
pop
icebp
out
movs
daa
ror
mov
push
jmp
xchg
cmp
lock
cli
mov
int3
jle
add
dec
mov
cld
cmp
int3
mul
and
mov
ja
pop
push
mov
pop
xchg
sbb
fdiv
sub
dec
das
fdivr
mov
sub
cmps
loop
sbb
sbb
or
loope
call
jns
mov
icebp
xor
add
dec
call
mov
xchg
push
sahf
mov
mov
jo
leave
mov
xchg
xchg
cdq
inc
xor
mov
pusha
xor
push
cmp
sar
dec
sar
fld
inc
add
jbe
cld
pop
adc
mov
mov
xor
xorps
xlat
in
(bad)
jle
je
jp
inc
mov
test
add
pop
ffreep
mov
ja
push
(bad)
push
cmp
inc
push
lods
lahf
or
lods
push
jb
and
mov
ret
in
cmp
or
or
xor
popa
scas
dec
mov
push
mov
push
inc
std
fucomi
mul
sbb
pop
leave
and
call
jge
push
push
movs
mov
retf
sbb
mov
fld
sub
inc
mov
(bad)
int3
aas
cli
sub
pop
mov
jo
adc
lahf
mov
mov
xchg
lahf
jecxz
add
lock
and
jmp
fistp
sbb
mov
xor
inc
cdq
jg
aaa
inc
fnstcw
mov
or
pop
inc
outs
mov
(bad)
data16
out
ficomp
(bad)
in
or
sub
test
neg
cwde
mov
add
(bad)
call
jle
jmp
jae
push
ror
ret
aas
xchg
pop
aad
das
dec
mov
push
xchg
ins
ss
ins
push
fwait
mov
enter
(bad)
push
lock
ret
mov
fldcw
(bad)
sub
clc
pop
inc
ds
jb
sub
sbb
scas
dec
lods
cli
in
inc
jnp
imul
fld
cli
xchg
pop
or
stc
cld
(bad)
bound
mov
into
test
xchg
add
(bad)
jb
mov
mov
popa
arpl
test
xor
rol
dec
(bad)
aaa
retf
outs
stos
jg
mov
hlt
mov
adc
and
dec
add
xor
jle
push
dec
dec
(bad)
xor
aam
inc
mov
jns
jmp
xor
pop
sub
dec
test
cmp
int3
add
imul
or
add
mov
shl
push
dec
out
cmp
sub
fiadd
add
movs
not
or
xchg
shl
ss
jne
sbb
pextrw
mov
pusha
adc
aad
sub
and
xor
inc
pop
cmp
pop
(bad)
push
popf
cmps
ror
sub
mov
popf
dec
cmps
enter
movs
movs
cmps
add
jo
cs
inc
data16
mov
mov
mov
lds
loop
dec
adc
or
test
push
xor
xchg
mov
xchg
cmp
test
push
xchg
mov
aas
daa
jbe
out
and
addr16
cmp
inc
mov
shr
sar
in
cwde
shl
dec
cmp
sub
pop
cmp
cmps
sub
jno
and
movs
push
mov
scas
imul
aad
fwait
stc
mov
lahf
pop
fild
test
mov
xor
scas
sub
cmp
aaa
pop
mov
test
mov
mov
leave
sub
xchg
and
add
push
pop
nop
out
bswap
add
mov
mov
xchg
xchg
jecxz
mov
jmp
loope
ret
mov
adc
lds
pusha
push
repz
push
adc
and
mov
repz
inc
call
jae
jns
xchg
popa
cmp
xchg
bound
cmps
pop
or
in
jp
enter
mov
mov
fcmovne
nop
nop
ins
inc
and
add
push
push
(bad)
idiv
jge
jmp
pop
sbb
cld
sahf
es
jno
sbb
fmul
in
mov
idiv
es
inc
pop
jbe
add
mov
pop
scas
lods
cmp
fcom
pop
hlt
in
repnz
out
repz
lds
rcl
add
add
fs
push
inc
popf
int
sub
fwait
inc
sub
hlt
jecxz
int3
(bad)
imul
sti
or
ret
retf
push
stos
cwde
or
retf
pop
xchg
arpl
lahf
adc
push
(bad)
call
retf
mov
xlat
cmps
cmp
(bad)
mov
cmc
xchg
mov
cmp
fs
repnz
pop
sub
pop
and
fisttp
mov
xor
js
mov
jnp
xor
imul
pop
push
ficomp
fldenv
shl
xchg
in
sbb
or
sbb
mov
outs
push
cmp
pop
or
adc
inc
mov
dec
pop
mov
mov
mov
sub
and
es
repnz
mov
mov
inc
call
jmp
mov
pop
icebp
rol
mov
dec
out
cmp
shr
mov
sbb
daa
sbb
mov
xchg
sbb
(bad)
fild
hlt
scas
js
cmc
add
ins
das
pop
add
cmp
sbb
xchg
idiv
push
pop
and
or
mov
lds
sbb
sahf
push
mov
jecxz
add
jmp
std
pop
cs
ret
pop
sbb
mov
fisubr
or
int3
xor
arpl
mov
daa
mov
jle
scas
aam
sar
sbb
jp
out
cs
imul
jmp
ds
lea
sbb
gs
aam
mov
push
jne
repnz
mov
mov
dec
gs
sbb
or
out
pop
imul
ror
mov
lahf
dec
mov
test
sub
or
mov
enter
test
std
xchg
or
push
into
push
add
jl
icebp
add
and
dec
iret
or
mov
fs
mov
aas
into
xor
xor
in
push
out
ret
repz
cmc
mov
int3
cli
outs
retf
in
inc
jns
ret
inc
hlt
test
cmp
mov
sbb
pop
mov
(bad)
cmp
dec
adc
jl
sti
push
xchg
std
mov
imul
(bad)
popf
pop
scas
clc
pop
in
lahf
jae
gs
xor
fld
mov
ficomp
xor
sub
xchg
push
repnz
mov
or
adc
push
jmp
ds
add
jmp
push
xchg
xchg
dec
push
pop
clc
pushf
les
inc
jbe
int3
loopne
mov
dec
int3
dec
mov
or
hlt
xor
arpl
add
iret
pop
jmp
neg
inc
xor
scas
xchg
add
jb
mov
adc
outs
sti
add
sub
inc
xchg
or
sbb
push
sar
pop
jmp
dec
push
fimul
cmp
(bad)
adc
xor
or
loop
mov
rol
mov
ds
mov
daa
les
sbb
punpckhbw
repz
cmp
clc
ds
ins
movs
ins
push
dec
popa
mov
outs
dec
mov
popa
mov
push
pop
xor
cmps
leave
push
mov
sti
cmp
inc
je
push
and
add
add
imul
xchg
(bad)
ret
mov
pop
or
ins
(bad)
and
inc
add
sub
mov
outs
mov
pop
cdq
bound
popf
(bad)
adc
push
sub
ror
rcr
rcl
popf
loopne
and
cmp
scas
leave
call
mov
xor
nop
push
and
mov
xchg
jns
cli
out
sbb
add
inc
jmp
jp
push
mov
cwde
push
iret
xchg
test
out
lock
push
mov
pusha
sub
rcr
push
jg
cwde
scas
xor
xchg
pop
mov
and
lods
add
mov
jle
mov
sbb
dec
stos
sbb
loope
jns
jmp
jmp
adc
cmps
outs
pop
out
sub
into
pop
sbb
sub
fdiv
and
or
xchg
scas
test
and
jmp
adc
mov
bound
pop
jo
mov
and
push
ins
sub
pushf
arpl
sbb
retf
and
aad
pop
mov
cmp
je
mov
bound
outs
cmp
aam
dec
sub
dec
push
xor
je
lock
or
mov
dec
add
mov
inc
int
pop
push
and
ret
les
add
(bad)
icebp
fnsave
bnd
into
fwait
rcr
bound
mov
movs
pop
adc
push
hlt
pop
lock
fidiv
or
pushf
pop
das
sti
adc
cmp
scas
add
xor
popa
pop
imul
ret
daa
arpl
int
xchg
stos
mov
inc
loope
xchg
shl
pop
dec
fdivr
or
std
xchg
aad
retf
in
dec
lea
xor
dec
mov
mov
lahf
nop
pop
out
(bad)
push
test
push
inc
loopne
pop
loopne
mov
mov
xchg
test
lock
dec
cmp
ja
shr
dec
push
int3
stos
stos
dec
push
ret
push
mul
or
pop
movs
add
push
stos
imul
cwde
ins
pop
cmc
dec
out
das
or
scas
enter
push
and
scas
aad
ins
cs
jg
inc
mov
push
jmp
inc
out
xor
out
or
mov
xchg
mov
mov
retf
shl
cmp
scas
dec
(bad)
fild
(bad)
rcr
fiadd
add
jno
mov
mov
jmp
in
mov
xchg
xor
or
sub
inc
and
repnz
xchg
xor
add
or
cli
rol
xor
mov
test
leave
sub
(bad)
hlt
dec
inc
jae
ret
cmp
ret
ret
cmp
mov
inc
mov
pushf
mov
add
out
sub
dec
movs
jmp
(bad)
sbb
(bad)
or
ds
outs
sub
cmp
inc
jecxz
je
scas
jbe
pop
les
neg
sub
in
aas
add
hlt
ja
adc
int
cmp
push
mov
dec
lods
inc
sub
in
movs
pop
adc
movs
xchg
dec
ins
sub
xor
ins
pusha
cmp
aad
(bad)
psubusb
fcom
movs
dec
fs
mov
sti
std
fcmove
cld
outs
adc
mov
sbb
into
retf
fs
mov
pop
aam
xor
(bad)
fwait
add
stc
mov
adc
jae
and
add
movs
stc
lahf
xor
ja
fld
add
ret
test
xor
sete
in
mov
rol
add
dec
loop
iret
fimul
retf
pushf
sub
in
and
hlt
dec
sub
call
shr
xor
and
xchg
cmp
mov
addr16
mov
lods
repnz
inc
push
into
lods
jae
push
mov
push
cmp
sub
out
pop
mov
xchg
fwait
sbb
in
inc
int3
mul
(bad)
retf
icebp
adc
arpl
sbb
add
mov
mov
cs
lds
dec
ds
ret
ins
xlat
sbb
mov
jecxz
xchg
or
loop
mov
mov
pop
pop
jno
pop
shr
fsub
retf
loop
cdq
add
(bad)
dec
push
fwait
pop
and
pop
fstp
mov
pop
mov
int
mov
mov
dec
shr
test
ret
neg
movs
(bad)
cli
adc
add
(bad)
retf
mov
jmp
out
xor
sub
(bad)
int
scas
shr
rol
xor
std
ret
(bad)
stos
dec
call
pop
test
in
pop
and
jg
pop
adc
mov
lods
jecxz
int3
jo
mov
pop
ds
in
push
cli
and
or
sahf
inc
mov
inc
mov
dec
jge
pushf
sub
or
mov
jmp
push
dec
mov
stos
inc
cli
lock
jne
sbb
cmp
pop
dec
jo
int3
aas
push
pop
shl
sub
push
push
jae
dec
popa
lods
mov
jecxz
push
js
or
hlt
pop
xchg
sbb
or
js
retf
cdq
ret
fs
call
es
(bad)
push
mov
cmp
mov
(bad)
ret
mov
xchg
dec
aaa
mov
or
mov
mov
fcom
pop
mov
mov
faddp
cwde
(bad)
mov
in
stos
push
push
outs
iret
ja
push
data16
mov
mul
lahf
pop
adc
or
repnz
imul
int
pop
mov
or
push
mul
add
pop
lods
mov
xor
or
and
into
jb
stos
mov
fld
inc
iret
dec
(bad)
leave
adc
xchg
and
push
add
fwait
cmp
push
push
ret
adc
inc
enter
adc
(bad)
in
dec
test
arpl
je
out
jns
test
mov
push
popf
cmps
xchg
jle
mov
adc
imul
loope
xor
ins
push
(bad)
pop
rol
dec
push
mov
outs
mov
and
add
retf
xlat
div
sbb
inc
dec
cmp
int
and
aad
mov
inc
lods
call
sar
aaa
mov
xor
scas
mov
cmps
fmul
inc
xor
mov
jbe
xchg
ins
js
sub
sahf
pop
push
sub
cmc
dec
add
(bad)
push
push
ret
inc
out
mov
and
add
adc
dec
daa
dec
movs
(bad)
mov
inc
and
cmp
adc
and
pop
rol
(bad)
imul
push
(bad)
(bad)
or
sub
cmp
sub
pop
adc
outs
(bad)
cmc
jl
or
push
xor
dec
mov
out
and
icebp
lods
cmp
loopne
adc
in
into
push
rcr
jmp
sbb
stos
pop
and
xchg
jge
add
dec
sub
xchg
xchg
mov
lea
clc
xchg
mov
sahf
sbb
int3
pop
jg
pop
xchg
and
fdiv
cmp
push
cmc
(bad)
js
sti
clc
xor
pop
sub
pop
xchg
aas
ins
leave
stc
sbb
sbb
sti
stos
mov
sbb
adc
sbb
vpmacsswd
out
or
dec
mov
inc
cmp
(bad)
jae
push
sti
es
dec
sub
jnp
stos
or
pushf
jb
xor
sub
pusha
aam
xor
fwait
sub
inc
test
pop
sahf
jno
popf
mov
movs
xchg
mov
pushf
sub
xor
fcom
adc
add
mov
sub
jp
cmc
sub
jmp
cmp
gs
xor
dec
jl
dec
jg
or
pop
mov
sbb
je
das
dec
call
sbb
and
jb
xor
std
sbb
ror
ror
vcomisd
fwait
ret
add
shl
lods
fimul
mov
ds
pop
cli
pop
inc
stos
and
sar
test
pop
(bad)
xchg
cli
in
ret
mov
aaa
(bad)
div
hlt
movs
test
pop
cwde
mov
lock
inc
mov
shl
pop
in
pop
js
out
enter
pop
sub
push
pop
jbe
mov
in
xchg
aas
mov
dec
and
sbb
sbb
ror
mov
push
xor
clc
dec
push
jne
mov
bound
cmp
mov
and
pop
cmovnp
icebp
fisub
popa
call
fist
test
les
scas
dec
and
mov
nop
sbb
sub
mov
fwait
mov
cmps
retf
rcr
stos
jb
cmps
sbb
ss
clc
fwait
pop
dec
int
xor
lds
jp
push
movs
pop
push
and
int
in
pop
loopne
inc
adc
lods
ror
jecxz
inc
out
push
retf
inc
inc
cmps
sbb
pop
je
mov
iret
add
mov
bound
int3
retf
cmp
xor
push
inc
stos
xchg
mov
jg
cdq
mov
cmp
into
ins
leave
loopne
jnp
test
repnz
in
adc
mov
pop
out
cs
pop
nop
sbb
push
(bad)
push
pusha
scas
jg
mov
inc
sub
movs
pop
or
pop
sbb
lahf
push
imul
mov
loopne
bound
push
in
mov
je
clc
jecxz
std
mov
mov
add
imul
dec
jbe
call
dec
or
push
ret
push
jle
dec
push
jns
jae
aas
cmp
xchg
aaa
push
test
add
xchg
jnp
sub
je
in
mov
and
adc
sar
cwde
cmp
push
inc
ret
xor
ror
retf
in
sub
push
add
sbb
nop
push
push
pop
cs
hlt
js
cwde
leave
outs
out
cdq
jmp
je
mov
popa
jne
or
inc
xchg
sub
dec
fmul
popf
stos
cli
adc
add
fiadd
rcl
mov
mov
lea
dec
inc
jns
cmp
sbb
(bad)
lahf
jp
add
lods
add
bound
aas
and
fnstcw
mov
aaa
lock
and
pop
mov
cmp
xchg
cdq
cmp
xor
mov
jecxz
xchg
imul
mov
cmps
ja
jmp
shr
ret
fidiv
mov
(bad)
ja
mov
adc
mov
or
pop
rol
mov
xchg
inc
scas
or
inc
xor
jno
jnp
cmp
(bad)
ret
movs
or
cmp
add
jmp
or
repz
add
add
test
cs
adc
mov
test
add
mov
fcomi
xchg
pusha
push
mov
nop
icebp
cmp
sbb
xor
stos
mov
fcomp
cmps
setg
daa
pop
dec
pop
xor
(bad)
or
cmp
or
repnz
sub
push
retf
and
cli
inc
loope
mov
adc
sub
add
push
xor
aam
sbb
mov
in
xor
adc
sub
loopne
pop
idiv
cmc
mov
mov
test
pop
fistp
lods
jg
lahf
inc
push
fist
xchg
(bad)
xor
call
int3
or
fwait
lock
mov
mul
adc
movs
push
sbb
leave
cdq
pop
push
mov
out
mov
pop
mov
imul
iret
rcl
push
ror
sbb
or
and
xor
xor
jecxz
sti
ds
mov
ins
mov
inc
mov
in
dec
loopne
push
push
mov
(bad)
cmc
ficomp
(bad)
push
shr
jmp
ss
inc
les
fcomi
jge
cmp
sahf
adc
or
pop
mov
call
cwde
dec
es
xor
push
test
idiv
pop
xchg
and
bnd
ret
movs
push
stos
stc
ret
pop
loop
arpl
sbb
mov
iret
test
xchg
xor
adc
ror
and
into
add
dec
xchg
xchg
and
hlt
movnti
xchg
or
jnp
and
aad
pop
in
cmp
or
jl
push
cmp
cmp
ins
ja
int3
sub
or
les
rcr
pop
mov
shr
xchg
sub
mov
add
daa
mov
inc
(bad)
lods
sahf
mov
loopne
xchg
dec
(bad)
cmps
(bad)
jg
sbb
popa
mov
inc
stos
loope
stc
cmp
xlat
dec
into
(bad)
imul
sub
mov
lds
jae
repnz
fist
test
sahf
mov
cli
sar
adc
cmps
and
adc
lock
test
(bad)
loope
push
shl
jg
scas
sbb
test
jmp
inc
push
je
mov
sub
sbb
cmp
jno
adc
xor
fwait
mov
(bad)
les
popf
or
jmp
lahf
pop
daa
jno
sar
jecxz
test
test
imul
sub
int
mov
pop
inc
inc
aaa
data16
retf
add
push
jb
leave
ss
in
idiv
inc
retf
push
sub
leave
leave
(bad)
pop
mov
shl
int3
and
mov
hlt
retf
jbe
and
adc
bound
fdivr
jnp
js
mov
mov
push
mov
pop
inc
push
pop
cmps
movs
inc
popa
or
std
into
in
loope
sahf
add
inc
xchg
pop
scas
jg
stos
jo
aas
jns
adc
dec
test
retf
adc
rcr
xchg
lods
xchg
or
mov
retf
jmp
cs
mov
pusha
mov
cli
retf
loopne
into
faddp
leave
cmp
in
push
int3
cmps
iret
mov
sar
mov
stos
daa
aaa
push
xchg
lock
mov
movs
stc
push
dec
fyl2xp1
call
inc
mov
jg
cli
jge
xchg
xor
das
test
fldcw
sbb
mov
fnsave
mov
hlt
neg
scas
xor
push
jge
pop
les
xor
xchg
stos
movs
cs
arpl
and
pop
enter
fs
sub
into
sbb
mov
pop
pusha
mov
xchg
jbe
aaa
xchg
and
in
jg
mov
inc
jg
push
fucomi
xchg
popa
sbb
enter
loop
mov
sbb
add
jl
fs
adc
leave
adc
cs
inc
cmp
sahf
out
je
adc
jmp
lock
xor
out
stos
ret
std
push
inc
outs
adc
and
cld
cmps
stc
mov
mov
mov
icebp
nop
pusha
scas
in
push
add
cmp
jae
hlt
mov
outs
adc
sbb
jmp
cld
jmp
pop
test
(bad)
pop
xor
and
mov
jno
out
push
dec
inc
aad
mov
add
test
sahf
lods
stos
cwde
push
jnp
xchg
or
pusha
pop
retf
fimul
pop
nop
clc
jge
push
dec
dec
scas
push
lss
mov
std
imul
stc
mov
fdivr
lds
in
xchg
fcomp
mov
push
ja
iret
data16
dec
cmp
inc
mov
jle
pop
add
mov
ror
sub
in
fnsave
in
inc
xchg
inc
shl
pop
adc
imul
test
imul
xchg
fwait
retf
mov
ins
data16
fstp
xchg
sbb
(bad)
jmp
dec
cmps
push
cmp
or
repz
mov
or
jmp
xchg
jo
into
xchg
pusha
and
push
mov
sub
outs
mov
add
mov
fcomp
test
pushf
scas
movs
nop
push
pusha
outs
push
cli
aaa
arpl
push
and
and
popa
stos
sbb
pusha
push
inc
sub
shr
je
mov
das
push
sub
dec
inc
loopne
in
xor
cdq
idiv
mov
or
enter
push
and
push
push
mov
(bad)
fdivp
iret
sub
adc
stos
jbe
add
dec
dec
add
dec
and
stos
mov
inc
dec
push
stos
xchg
and
jno
jno
pop
js
sbb
pop
jmp
push
bound
or
mov
xlat
std
or
lds
adc
xchg
cli
jmp
popf
loop
ficomp
aaa
jnp
adc
sar
or
test
xchg
push
cmp
icebp
xor
xlat
(bad)
sbb
int
cdq
add
std
popa
jb
cmps
jmp
jge
ds
xor
or
cmp
xchg
(bad)
(bad)
fcomp
pop
fcom
add
push
push
call
mov
in
psubsb
add
das
out
mov
mov
test
inc
not
fsubr
cmp
cmp
pop
enter
dec
and
sbb
xor
loopne
ror
push
mov
ins
out
stos
xchg
jmp
sbb
fistp
dec
fcom
cli
and
inc
fiadd
cmc
ja
inc
push
fadd
cmps
(bad)
ja
jp
in
(bad)
out
adc
aad
les
xchg
push
jne
sub
push
fld
sti
adc
mov
or
mov
dec
(bad)
loop
or
sti
mov
idiv
pusha
mov
imul
pop
dec
out
cmp
sub
sub
mov
aad
inc
add
mov
cs
and
cwde
cmp
xor
mov
add
pop
lock
push
sbb
xchg
jl
call
rcr
mov
cmps
and
and
mov
adc
cmp
mov
in
mov
mov
pop
and
sahf
and
ins
pop
and
loope
ret
cmp
mov
outs
mov
sbb
out
popf
aas
popf
sub
call
pop
sbb
in
xor
mov
jl
adc
das
and
in
xor
mov
or
add
mov
and
push
adc
aad
mov
out
aas
jg
sahf
add
test
and
mov
jmp
push
lahf
arpl
test
mov
dec
fstp
mov
test
in
enter
std
push
movs
sbb
adc
cmp
(bad)
mov
cmc
mov
sbb
ja
enter
ret
adc
xchg
shl
test
push
out
test
mov
arpl
test
movs
ret
sti
pushf
popf
xchg
or
fidivr
add
retf
scas
dec
shr
je
(bad)
push
mov
cmp
inc
mov
leave
mov
pushf
pop
sub
adc
cmc
sub
dec
dec
sbb
test
cli
rep
in
lea
mov
ins
fs
xor
pop
and
mov
std
in
call
cmp
in
aas
jp
xchg
dec
fnsave
shl
and
sbb
inc
retf
push
jmp
fbld
jmp
xlat
loop
(bad)
xor
xlat
out
cmps
neg
push
in
test
adc
pusha
movs
push
in
push
cmps
mov
adc
mov
or
sub
in
rcl
gs
inc
imul
pop
inc
pop
xchg
pushf
cmp
cmp
js
cmp
mov
mov
adc
jecxz
adc
sti
loopne
lds
adc
cmp
in
int3
iret
add
shr
shl
and
inc
and
and
loope
leave
out
mov
sub
adc
test
cmp
push
inc
inc
mov
aam
or
xchg
push
cli
add
ss
daa
imul
fstp
pop
sbb
mov
push
lods
adc
xor
adc
(bad)
(bad)
jmp
test
(bad)
retf
xor
cmc
adc
and
cmp
xor
ja
dec
or
adc
cmp
inc
test
xor
lock
sub
ins
and
inc
or
scas
mov
adc
ins
loope
ret
mov
lahf
icebp
xchg
fist
daa
or
lea
lahf
sbb
call
sub
fwait
cdq
jecxz
inc
or
ja
fiadd
jbe
push
dec
sub
stc
sbb
pop
jae
jne
or
scas
ins
adc
hlt
clc
push
and
push
test
dec
ins
mov
jecxz
pop
or
jl
cs
pop
mov
out
mov
or
iret
(bad)
repz
jl
jae
jmp
mov
jg
in
clc
cmp
pop
movs
data16
jmp
sub
test
rcl
push
mov
pop
or
or
dec
pop
inc
adc
inc
and
aam
xchg
mov
iret
or
jb
pushf
jg
mov
sub
and
sub
ret
dec
lods
les
in
mov
inc
fld
pop
outs
mov
movs
push
std
xor
mov
dec
mov
jmp
cmp
mov
ja
out
and
push
add
xchg
and
sbb
mov
aas
adc
pop
jl
dec
out
dec
or
mov
add
xor
fcomp
push
mov
fwait
adc
nop
pop
sub
out
or
jmp
dec
dec
jmp
rdtsc
adc
xchg
or
add
test
sar
daa
aaa
leave
jmp
cli
popa
xlat
adc
sub
lea
mov
aad
jae
mov
pop
inc
xor
mov
sti
jmp
das
call
out
push
ins
push
nop
jnp
or
or
fwait
mov
sub
mov
call
into
sti
add
cmc
adc
cmp
mov
hlt
sub
(bad)
sub
mov
daa
pop
aad
jl
jmp
lea
fs
cld
shl
adc
fimul
jne
in
push
nop
(bad)
dec
icebp
shl
mov
cs
mov
xor
fs
repz
adc
shr
cld
mov
test
add
rol
push
loopne
movs
out
ins
push
mov
clc
frstor
and
jns
ret
js
sti
leave
xchg
repnz
jmp
fsub
inc
sub
cmp
inc
add
mov
add
out
in
inc
jg
mov
aam
mov
imul
add
shr
xchg
sub
in
and
outs
sub
outs
and
inc
lods
jb
dec
pop
test
aas
and
test
adc
retf
pop
stos
push
ror
mov
pop
or
lods
jmp
outs
sbb
sbb
pop
push
push
fdivr
and
adc
mov
push
fist
mov
loope
cmp
fld
aaa
mov
xor
xchg
sahf
jae
sub
into
icebp
mov
hlt
bound
lahf
fisubr
cmp
fimul
loopne
pop
pushf
pop
mov
push
das
movs
call
push
mov
jne
int3
imul
ins
(bad)
ja
int3
pop
cmp
imul
and
fs
add
lock
sbb
retf
sub
add
js
xchg
xor
xchg
out
adc
pop
add
ret
or
ficom
sbb
mov
lods
(bad)
out
test
and
cmp
bound
pop
pop
pop
jle
ja
das
xor
xchg
mov
js
add
mov
sar
add
rol
adc
jne
sub
nop
xchg
cmp
fst
cmp
push
sub
rep
ja
jl
imul
push
adc
fist
call
xchg
sub
sbb
jg
into
inc
lds
lds
sub
test
or
jbe
adc
rol
pop
inc
inc
shl
xchg
in
sahf
aas
sub
pop
mov
mov
adc
inc
in
inc
in
data16
fisub
cwde
cmp
outs
popa
es
xchg
icebp
jp
xor
adc
(bad)
clc
ds
into
ins
jb
jl
mov
loop
or
xchg
pop
pop
mov
sub
jg
fs
jmp
jnp
rcl
clc
jo
aas
jecxz
jp
fsubr
xchg
div
cmp
adc
mov
mov
and
cmp
jge
push
cmp
shr
push
mov
jmp
fldenv
repnz
sbb
aad
jae
(bad)
repz
mov
scas
and
inc
mov
mov
pop
mov
rol
push
je
(bad)
xchg
jg
lock
das
dec
sub
iret
push
or
js
daa
sti
dec
scas
imul
jne
push
pop
push
in
ret
and
add
dec
add
dec
push
xchg
test
shr
push
sub
mov
daa
mov
out
xchg
(bad)
and
pusha
rol
fisttp
and
(bad)
aaa
lods
push
sub
aaa
and
pop
gs
out
call
push
outs
push
aad
jge
mov
bound
je
cmp
addr16
sub
inc
cmc
mov
icebp
in
mov
inc
xor
bound
sub
adc
inc
and
inc
and
lods
test
xor
mov
push
(bad)
mov
popa
mov
fbld
lods
cld
and
test
retf
shl
aaa
shl
xor
xlat
iret
sar
xlat
add
stos
xchg
pop
xchg
pop
mov
push
and
jns
popf
pop
push
shl
dec
jecxz
(bad)
cli
iret
fstp
xchg
pop
(bad)
push
cmps
loop
ins
sbb
and
fstp
test
add
test
xchg
icebp
stc
cdq
mov
pusha
jmp
div
test
loop
pop
cld
repz
inc
jmp
sub
ins
(bad)
in
mov
mov
jbe
pop
mov
popf
xchg
dec
inc
inc
mov
clc
mov
test
push
and
sub
jnp
ins
in
ret
sbb
mov
adc
fnstcw
cmp
cld
pusha
ror
frstor
in
repz
arpl
rcr
dec
mov
cmp
je
cld
and
int
iret
(bad)
mov
retf
(bad)
mov
cdq
push
push
xor
ror
sbb
jp
or
push
or
in
sub
adc
aaa
cmps
(bad)
sub
push
mov
pop
lds
inc
jae
xchg
mov
mov
test
mov
add
mov
sub
out
loop
fmul
xor
inc
mov
jmp
mov
and
jno
jp
mov
and
xchg
and
inc
xchg
int
mov
(bad)
ins
test
fld
mov
sub
test
inc
sbb
sbb
xchg
pusha
add
push
jg
xor
clc
pop
outs
mov
adc
and
sub
stc
mov
ins
loopne
(bad)
lea
mov
cmp
xchg
popf
(bad)
das
imul
(bad)
nop
or
add
xchg
add
lods
repnz
fistp
test
push
dec
scas
sbb
addr16
iret
sub
jnp
and
fidiv
retf
hlt
mov
leave
shr
ret
jg
mov
out
cdq
jmp
xchg
(bad)
add
add
bound
cmp
(bad)
iret
pop
imul
daa
mov
arpl
push
pop
mov
pop
mov
repz
add
fdivr
mov
jmp
jo
mov
push
mov
hlt
or
cmp
(bad)
dec
test
pop
ja
cmc
sti
imul
push
push
sahf
mov
cmp
lahf
pop
sub
inc
pop
or
sbb
fsubr
jno
and
mov
push
and
ror
ret
inc
(bad)
cmp
xchg
sar
hlt
sub
imul
and
inc
pop
mov
in
cmp
push
mov
sub
loopne
dec
mov
ret
push
add
cli
ret
pop
int
shl
(bad)
sbb
sbb
nop
arpl
(bad)
xor
vmwrite
dec
add
outs
call
or
(bad)
enter
sub
sti
rcl
xor
pop
sar
sub
mov
in
shl
cmp
sub
push
inc
(bad)
jmp
or
cmp
xchg
or
push
scas
adc
push
ss
mov
enter
add
adc
call
outs
add
ffree
pop
cdq
xchg
fsubr
sbb
push
gs
aaa
std
jl
push
aas
out
aam
mov
xchg
xchg
jl
adc
(bad)
cmps
xchg
add
sub
and
xor
ret
les
push
xor
adc
lock
mov
stos
mov
cmp
enter
lock
cli
mov
jbe
cmp
lahf
mov
iret
or
push
mov
add
jae
xchg
mov
xchg
(bad)
dec
adc
out
pop
jb
hlt
xchg
dec
fdiv
mov
mov
in
je
cmp
jbe
push
sub
js
hlt
es
pop
adc
lods
xchg
(bad)
pop
or
add
or
mov
cmp
mov
ins
lods
cmp
adc
rol
sbb
lods
ins
shr
aaa
lea
jl
int
jns
fbld
ret
pop
jp
xchg
(bad)
das
sbb
ins
push
dec
mov
pop
test
mov
int
jmp
ja
mov
jne
jo
jecxz
ds
loope
retf
push
inc
push
adc
cmp
adc
pop
dec
mov
lea
xor
adc
hlt
and
cs
jp
aam
dec
pop
inc
outs
(bad)
xlat
mul
loopne
cmps
inc
nop
add
fs
pop
imul
loopne
arpl
aam
in
mov
or
jl
dec
inc
or
sub
dec
jae
add
mov
push
cs
xchg
scas
call
pushf
(bad)
or
ins
cmp
jbe
stos
or
adc
and
(bad)
out
add
ret
and
addr16
shr
push
push
push
mov
or
cdq
jge
mov
adc
call
and
idiv
sysexit
mov
stos
add
push
push
mov
je
xor
loope
pusha
adc
xor
jmp
aam
ret
push
xor
jle
cs
jae
daa
sahf
imul
dec
into
inc
xchg
sub
shr
in
sets
(bad)
mov
pushf
xchg
xchg
dec
imul
or
out
xlat
data16
stos
dec
lock
push
clc
fnstenv
xor
movs
push
sbb
push
sbb
cli
loop
rol
and
icebp
inc
sbb
lods
inc
xchg
dec
add
idiv
xchg
jge
adc
dec
mov
pop
in
inc
mov
mov
jne
mov
aas
movs
adc
sbb
mov
jge
dec
int3
dec
xchg
mov
aad
out
popf
inc
jge
dec
fdivr
jo
aad
(bad)
mov
outs
jo
adc
cdq
jecxz
adc
(bad)
out
sub
stc
cmp
clc
cmps
jg
lods
(bad)
jne
or
lods
cs
idiv
and
or
outs
mov
push
dec
and
mov
dec
or
inc
sbb
dec
inc
sub
mov
movs
int
rcr
sti
push
arpl
jne
adc
sbb
xchg
sbb
xchg
mov
xchg
push
adc
movs
leave
std
(bad)
aaa
hlt
and
out
add
mov
cmc
dec
pop
inc
rcl
lea
mov
push
gs
jge
sub
jg
(bad)
nop
fs
lea
add
repz
xchg
or
shl
mov
ret
leave
jg
nop
(bad)
test
jnp
aaa
push
and
inc
test
pushf
ret
xor
mov
fcomp
pop
test
retf
fcomp
(bad)
push
fmul
pop
cld
fisttp
jno
mov
inc
mov
sub
sar
jae
arpl
sbb
outs
push
in
mov
push
mov
mov
dec
xchg
dec
dec
pusha
fwait
ins
movs
and
cmc
out
in
cmp
and
out
cmp
cld
adc
mov
popf
stc
sti
(bad)
fisttp
pop
(bad)
fs
call
xchg
imul
nop
aas
(bad)
imul
sbb
(bad)
mov
fucomip
in
xor
lods
xcrypt-ecb
cmps
dec
pop
test
inc
push
xchg
(bad)
pop
lods
call
stos
ret
cmp
mov
or
push
mov
xor
and
xchg
mov
xor
lahf
pop
and
out
test
xchg
sti
pop
cmp
mov
aad
and
jg
adc
(bad)
repnz
shl
loope
jbe
in
add
pop
inc
ins
inc
mov
jmp
es
jno
mov
push
cs
dec
cmp
addr16
jne
and
mov
outs
pop
(bad)
loopne
or
cld
mov
(bad)
stc
and
test
inc
int3
adc
clc
dec
loope
push
data16
lock
int
out
ret
jno
push
cmc
xor
shr
cmps
sbb
and
push
push
cmp
sub
sub
mov
sbb
jnp
and
data16
push
nop
push
aad
inc
xor
bound
lock
jmp
clc
das
xchg
mov
clc
dec
or
push
cmps
inc
retf
fstp
cli
test
dec
push
hlt
out
iret
add
cmp
pop
test
sbb
cmc
dec
mov
mov
pop
pusha
mov
dec
dec
aaa
iretw
cmp
hlt
cmc
mov
mov
lods
xor
cwde
aam
arpl
mov
rol
sub
jmp
icebp
jno
add
ret
push
popa
mov
shr
fld
repnz
call
fidivr
test
outs
adc
aam
imul
lea
daa
jmp
inc
sar
ja
xor
iret
mov
inc
cmp
xor
pop
sub
popf
add
xchg
movs
mov
sbb
fcmove
ins
ins
scas
pop
js
jnp
inc
out
sub
push
xor
xor
pop
mov
cli
pop
dec
adc
mov
cdq
fiadd
and
xchg
push
mov
dec
dec
movs
xor
mov
xor
cmc
sbb
sbb
shl
movs
in
sbb
xor
mov
cmps
dec
fucom
adc
adc
hlt
or
mov
mov
(bad)
(bad)
xor
mov
mov
popf
mov
pop
push
mov
inc
cmp
cmp
(bad)
test
sahf
fild
out
jg
xchg
fisubr
or
aad
push
or
je
sub
pop
mov
ja
in
(bad)
gs
sub
xchg
adc
(bad)
in
cmps
mov
add
mov
push
imul
leave
lods
dec
push
adc
aam
arpl
dec
push
mul
scas
xchg
and
sub
rol
enter
mov
dec
xor
mov
cmc
into
and
and
les
test
loope
in
mov
pop
push
inc
stos
mov
ja
adc
rcl
scas
pop
scas
movs
pop
inc
stos
sti
jg
in
aam
sub
call
and
sar
xor
mov
(bad)
es
pop
mov
leave
adc
jle
repz
js
mov
fild
sub
repz
(bad)
sub
push
xor
fucom
mov
pop
aas
imul
adc
int3
add
out
push
sub
or
push
test
js
daa
fisubr
push
xor
std
mov
cmp
rcl
mov
jnp
sbb
repnz
les
inc
push
adc
lds
loop
fsub
fild
mov
mov
sar
pop
adc
jecxz
int
pop
push
stc
repnz
or
add
push
mov
call
jmp
mov
jg
dec
sbb
inc
and
adc
les
ds
mov
mov
xchg
not
dec
call
loopne
imul
adc
ins
js
mov
push
bound
sbb
add
daa
mov
pop
sub
jg
inc
les
icebp
call
mov
aas
xchg
ror
inc
daa
shl
mov
(bad)
in
test
mov
in
jnp
repz
jp
into
dec
int
mov
js
and
mov
jecxz
or
sub
ret
mov
inc
aas
ror
mov
in
fld
adc
sbb
sbb
push
mov
cli
xchg
std
test
and
clc
cld
or
stos
ins
pop
loope
pushf
pop
je
xchg
in
ds
lds
adc
sub
cmp
mov
cs
(bad)
repnz
sti
pusha
push
mov
shr
rcl
out
fsubp
lahf
jae
sbb
popa
sbb
or
lods
scas
cmp
push
lahf
enter
movs
js
lods
jne
loop
mov
jbe
mov
stos
xchg
pop
pop
(bad)
push
and
xchg
push
pop
iret
je
fs
stos
iret
inc
jbe
nop
shl
jno
call
push
cmp
nop
cld
mov
xchg
jle
lods
cmps
xchg
data16
movs
sbb
inc
inc
cld
fisub
cwde
mov
js
mov
mov
push
mov
ds
mov
out
xor
mov
cdq
out
and
enter
retf
dec
xchg
out
stc
adc
mov
fwait
into
mov
mov
ss
cmp
sub
mul
test
mov
mov
sar
jge
out
xchg
repz
pop
test
fld
sbb
push
sub
cmp
xlat
xlat
addr16
shr
jle
daa
push
clc
lock
shr
mov
push
sub
sbb
pop
push
ins
pop
mov
sbb
jnp
jg
(bad)
cmp
sub
push
and
rcr
adc
dec
into
adc
sbb
inc
jmp
add
inc
fwait
cli
mov
cmp
jg
jb
sbb
aaa
jmp
sbb
pop
inc
pop
pop
pop
add
jo
scas
iret
mov
out
add
push
int3
or
dec
dec
inc
lock
in
in
dec
pusha
push
ins
movs
sbb
addr16
jecxz
mov
or
push
bound
popa
push
xor
and
jbe
adc
in
div
mov
out
jne
ins
mov
inc
loope
mov
out
pop
and
mov
and
add
rol
pop
push
mov
sar
xchg
pop
fwait
lahf
mov
inc
jnp
push
and
push
push
add
mov
fwait
out
das
sub
movhps
pop
sar
add
add
pusha
bound
push
mov
mov
test
fst
out
cli
sbb
xchg
cmps
jl
fnstcw
dec
sub
lahf
push
not
pop
push
daa
add
cmc
leave
sbb
add
and
imul
xchg
call
daa
neg
xchg
or
push
mov
cdq
movs
and
cs
enter
(bad)
stos
and
test
pop
aaa
arpl
nop
aam
xchg
inc
fdiv
xchg
retf
cmp
fst
lahf
jecxz
outs
call
test
mov
(bad)
cmps
sub
pop
mov
mov
nop
adc
sbb
popf
xchg
jnp
inc
push
lea
mov
outs
or
gs
xor
jl
sub
jmp
pop
fild
in
or
xor
pop
sub
sub
cmps
dec
lea
and
fistp
jne
and
dec
fstp
dec
imul
fwait
jb
jge
cmp
dec
push
(bad)
push
jmp
sar
cmp
rol
int
cmp
and
(bad)
jnp
fild
inc
loop
xor
adc
retf
pushf
xchg
pop
retf
(bad)
jbe
outs
shl
pop
and
sub
ret
sar
addr16
add
cmps
sbb
push
pop
int3
inc
fbstp
mov
adc
pop
leave
lods
xor
test
sti
out
cmp
xchg
add
loopne
femms
push
sbb
fnstcw
mov
inc
rep
pop
sub
mov
or
data16
or
retf
sti
sub
jge
out
and
stos
ret
mov
or
lods
sahf
mov
or
popf
inc
cmp
loop
xchg
xchg
adc
xor
and
pop
mov
dec
dec
cmps
inc
int3
push
outs
push
test
repz
or
mov
mov
les
in
fsub
outs
cmp
das
or
lahf
or
lods
clc
jmp
cmps
xor
fld
dec
jmp
sub
fistp
inc
not
mov
xchg
xchg
int3
outs
xchg
mov
push
xchg
sub
(bad)
cld
pushf
addr16
cmps
out
pop
xor
push
inc
aam
pop
(bad)
aaa
jns
daa
mov
cld
outs
lea
movs
jne
pop
stos
scas
in
mov
sbb
mov
enter
pop
das
rcl
fwait
cld
xor
dec
mov
retf
inc
out
iret
pop
(bad)
shl
pop
(bad)
sub
cwde
mov
xor
cmps
int3
push
ja
test
add
std
mov
jg
push
mov
ficom
inc
or
push
mov
push
ffree
cmp
sub
ja
mov
pop
dec
push
xchg
sti
or
and
ins
mov
cmps
jmp
push
sbb
inc
xchg
dec
jo
sbb
cmp
cmp
adc
or
test
je
dec
fs
jno
pop
data16
cs
pop
sub
fwait
ror
(bad)
adc
lods
stc
and
jns
jl
mov
pushf
xor
fwait
jne
xlat
ins
cmps
add
xchg
mov
pop
xchg
mov
iret
xor
retf
xchg
xor
aaa
jmp
mov
arpl
dec
push
(bad)
mov
xchg
add
in
xor
jne
jecxz
inc
(bad)
jo
ins
sub
loop
push
xchg
mov
movs
mov
inc
mov
mov
xor
outs
jl
mov
mov
outs
jnp
ret
mov
mov
inc
(bad)
outs
jno
out
stos
mov
inc
mov
fnstenv
and
cmp
jns
lea
imul
and
(bad)
popf
adc
lds
lahf
jno
aaa
popf
mov
jb
xchg
mov
cmps
lock
mov
int
aas
ds
test
push
clc
outs
xor
cmp
lahf
ins
push
or
ja
clc
push
add
ret
jmp
stos
pusha
test
lahf
add
push
sti
pop
gs
add
push
sub
xchg
in
out
push
gs
ret
mov
mov
ss
loopne
div
jge
lahf
in
and
inc
stos
adc
jmp
mov
(bad)
xchg
and
sbb
mov
jne
and
push
clc
fwait
push
sub
fs
shl
out
(bad)
inc
pop
fistp
mov
cmp
std
pop
aad
mov
cmp
dec
push
in
mov
fistp
fstp
ret
pop
jmp
call
xor
mov
cmp
arpl
push
add
jnp
loop
ficomp
in
inc
stc
shr
imul
test
and
xor
jmp
pop
jae
test
pop
xchg
loopne
push
xchg
mov
sbb
xchg
mov
mov
lods
dec
or
sub
cld
fmulp
dec
clc
repz
adc
fiadd
retf
test
and
je
test
scas
sbb
or
pop
fild
or
xchg
or
(bad)
cs
arpl
loop
(bad)
je
das
lods
je
call
pushf
iret
sub
add
rcl
icebp
sbb
jecxz
(bad)
data16
adc
xor
jge
popf
cs
jbe
imul
sub
pop
js
fmulp
pop
dec
in
mov
adc
ds
pinsrw
dec
sub
sub
pop
cmp
call
jmp
int3
mov
jge
or
adc
rol
mov
push
jb
push
cmp
cmp
pushf
jmp
inc
dec
add
cmps
mov
lahf
aas
repz
jmp
mov
xor
xchg
dec
mov
jg
dec
xor
dec
and
jno
pop
in
add
jbe
pop
and
or
jp
jo
sar
cmp
pop
pand
les
cmp
xor
movs
inc
jnp
add
movs
imul
pop
jnp
sub
lds
jb
push
sti
inc
enter
sbb
sar
sbb
jg
shl
cmp
xchg
scas
jne
and
dec
nop
sbb
mov
out
clc
outs
mov
mov
movs
jnp
xor
adc
js
jecxz
pop
rcl
rcl
dec
pop
push
sub
push
sbb
icebp
dec
sbb
xor
movs
jl
dec
mov
dec
movs
mov
push
xchg
xor
cwde
xchg
xchg
push
adc
call
mov
test
int
sub
xor
cmps
mov
in
inc
in
mov
cli
pop
push
cld
sub
dec
stc
push
cli
jmp
sub
ins
adc
sbb
(bad)
or
xor
in
movs
lods
les
push
or
mov
push
push
mov
popa
mov
inc
clc
jecxz
inc
dec
and
pusha
mov
push
dec
in
mov
icebp
fbld
push
jae
adc
and
mov
mov
dec
pop
es
inc
imul
mov
mov
add
adc
mov
ret
cmps
fcomip
call
push
xchg
xor
mov
sub
xchg
aas
push
xor
les
call
jmp
data16
shr
dec
jmp
ror
sbb
mov
mov
xor
mov
cmp
pusha
pop
clc
mov
xchg
mov
push
and
arpl
retf
sahf
lock
mov
push
pop
or
shr
frstor
or
test
cmc
mov
lds
mov
dec
sbb
sbb
pop
mov
test
add
ja
inc
(bad)
and
fsubr
push
mov
das
sbb
xor
ss
addr16
xchg
test
int
mov
inc
inc
mov
mov
into
pop
dec
adc
(bad)
adc
adc
arpl
fnsave
fadd
pop
mov
(bad)
sub
inc
jecxz
xchg
adc
movaps
repnz
mov
adc
daa
rcl
fsub
clc
adc
loop
ins
xchg
ret
outs
jae
jae
and
rcl
or
sbb
outs
rep
lahf
imul
add
test
fstp
cwde
mov
mov
jl
inc
mov
xchg
xlat
cmp
xchg
test
xchg
cmp
dec
add
adc
sbb
sub
test
hlt
mov
push
pop
xchg
or
pop
fidivr
add
cwde
mov
add
(bad)
fdivr
cld
loopne
and
mov
push
mov
mov
jle
and
sub
(bad)
rcl
imul
mov
jnp
fcomp
(bad)
pushf
xchg
cmp
sar
loopne
mul
xor
sub
lods
push
sub
iret
xchg
les
xchg
(bad)
cld
outs
add
adc
sub
pop
std
dec
clc
add
xchg
or
pop
stc
lods
retf
aaa
add
fstp
adc
pop
mov
sub
fidiv
retf
loope
or
inc
(bad)
lods
fld
test
daa
out
mov
ds
dec
fcomip
and
aas
xlat
out
inc
pop
push
pop
inc
iret
sbb
push
mov
mov
cmp
fdivr
js
sbb
idiv
add
jns
cdq
mov
xchg
lock
loope
lds
inc
mov
cmps
mov
mov
cmps
cmps
aam
mov
push
sub
or
cmp
retf
xchg
mov
mov
mov
jne
movs
rcl
hlt
fld
or
movs
inc
gs
out
push
sub
jg
dec
xor
sub
mov
adc
icebp
fstp
sub
inc
mov
call
stc
lods
xor
je
ds
std
sub
push
or
sti
(bad)
shr
test
mov
push
cmp
inc
cmp
jmp
sub
ss
loopne
leave
sbb
cmps
mov
cli
test
scas
pop
aad
lods
mov
bound
dec
mov
(bad)
add
jb
stos
mov
aam
mov
inc
adc
push
fdiv
xorps
out
ss
leave
and
mov
aaa
xchg
stc
pop
js
pop
mov
xchg
and
and
cmps
pop
cmc
ins
shl
pushf
ins
mov
out
stos
popf
cmp
test
in
jl
dec
ss
dec
dec
jo
jbe
(bad)
ficomp
xlat
jnp
hlt
dec
adc
sbb
sub
(bad)
in
jmp
add
aas
nop
xchg
ja
(bad)
bound
loope
rol
adc
mov
hlt
mov
mov
cld
jb
push
ret
into
fld
or
inc
pop
inc
xchg
pop
sub
push
add
sub
push
push
leave
arpl
mov
lock
xchg
rcl
(bad)
jg
je
sub
lahf
sbb
movs
dec
mov
pusha
or
add
jecxz
pop
xchg
xor
xchg
or
pop
repnz
je
int3
cld
and
mov
add
add
fbld
cli
push
push
call
adc
or
js
mov
xor
push
mov
mov
cmp
enter
out
jge
fdiv
sub
leave
jp
adc
xor
(bad)
ret
fmul
push
std
sbb
push
je
movs
mov
mov
call
(bad)
xor
add
adc
mov
xor
mov
(bad)
sbb
movs
outs
push
or
ror
push
or
xor
push
jnp
sti
ret
fistp
loope
jmp
adc
imul
das
sub
mov
or
and
sub
push
push
mov
sub
sbb
popa
cwde
push
sbb
loopne
sar
cmp
ror
cmp
fsub
test
pmaddwd
sbb
dec
pop
lock
mov
test
in
jp
hlt
xor
xchg
rol
dec
nop
inc
ins
pop
mov
dec
test
psubusw
cmp
(bad)
lods
rol
mov
enter
lock
pop
fld
push
clc
(bad)
jge
clc
mov
(bad)
aas
aam
and
mov
mov
add
sub
aaa
clc
jecxz
dec
pop
mov
cld
sub
ja
repz
fdivr
and
adc
in
in
mov
push
xor
xlat
push
hlt
test
sub
xchg
shl
rol
ror
dec
jb
adc
fnstenv
test
retf
mov
and
sub
fnsave
out
jp
test
cmps
cmp
mov
push
dec
mov
mov
scas
cli
(bad)
test
pop
ja
test
push
adc
ficomp
sub
retf
arpl
(bad)
jno
or
xchg
xor
sub
out
mov
sub
cli
movs
outs
sub
(bad)
das
lea
(bad)
and
add
fsubr
push
std
xor
xchg
fnstenv
pop
ja
loop
sub
nop
or
push
inc
das
nop
jge
in
sbb
cwde
wrmsr
sbb
outs
add
cdq
fidivr
rol
cld
xor
pushf
ja
cmp
mov
pop
rcr
inc
sar
lods
pop
pop
lock
push
jmp
rol
xor
mov
call
aas
inc
add
xor
mov
scas
in
push
pop
cld
outs
aaa
xlat
inc
mov
inc
into
xchg
imul
jae
jno
dec
mov
xchg
rcr
test
inc
js
(bad)
mov
adc
in
js
mov
imul
sub
test
add
retf
popf
inc
(bad)
jle
inc
test
cmp
mov
imul
mov
dec
jmp
xchg
sub
loop
add
arpl
les
rcl
aas
and
(bad)
cmp
aad
xchg
mov
mov
mov
sub
xlat
push
mov
adc
and
mov
scas
xor
add
pop
shl
mov
sbb
es
imul
sbb
mov
rcl
arpl
sbb
adc
cmp
push
repnz
neg
outs
push
call
xor
sub
sub
pop
xchg
imul
push
mov
inc
mov
imul
cmps
aaa
int3
ret
push
cld
adc
adc
cmp
movs
(bad)
and
push
in
add
pop
aaa
push
pop
loop
rcr
shl
sub
mov
mul
loopne
add
bound
mov
daa
dec
jl
retf
call
pop
(bad)
clc
loope
cwde
mov
mov
sar
stc
xchg
xchg
fiadd
bound
mov
inc
int
(bad)
xchg
push
pop
push
cmp
cmps
lock
jbe
xor
cmp
(bad)
cld
dec
ins
mov
imul
out
lds
test
mov
les
ja
jp
sub
push
push
jge
xchg
stos
pop
xchg
daa
mov
test
icebp
adc
popf
cdq
or
push
push
mov
aas
sbb
movs
jmp
aaa
in
loopne
pop
int
jo
popa
test
jg
fdiv
mov
scas
gs
pop
mov
pop
int3
stos
lods
add
out
inc
xor
loop
cmps
imul
cmc
mov
sub
out
mov
(bad)
in
stc
mov
inc
pop
jge
(bad)
stos
push
out
aad
mov
punpckhbw
jnp
xor
push
xchg
neg
fstp
push
and
call
add
(bad)
jg
addr16
or
adc
pop
xor
jnp
dec
xor
mov
mov
mov
dec
lds
xchg
out
aaa
jmp
loop
(bad)
sbb
int3
mov
or
sbb
adc
xor
xlat
retf
xchg
sahf
sbb
and
fsub
popf
retf
inc
mov
mov
or
dec
js
inc
repnz
fidivr
mov
pop
mov
scas
lahf
mov
pop
pop
pop
and
bound
test
sahf
in
jecxz
leave
outs
jecxz
test
mov
cdq
dec
inc
int
lahf
in
(bad)
cdq
fld
inc
dec
mov
cmp
int
jae
add
repnz
push
pop
or
add
mov
jno
int
pop
(bad)
fbld
mov
pop
pop
push
push
shl
push
movs
popa
ds
sub
xor
jnp
nop
mov
mov
xor
add
jmp
push
out
pop
add
and
adc
sub
mov
ret
push
int3
sbb
in
jecxz
test
je
inc
jb
pop
jno
jno
mov
(bad)
clc
xchg
inc
mov
sbb
mov
out
dec
out
or
cmp
pop
hlt
pop
sar
test
das
push
cwde
rol
push
mov
push
jp
cld
dec
fstp
add
add
cmp
mov
cmp
imul
cmp
sbb
adc
adc
(bad)
(bad)
loopne
arpl
sbb
ds
dec
mov
call
xchg
int
bound
int3
(bad)
fisttp
xor
jb
ins
popf
aam
mov
or
repnz
push
out
and
xchg
mov
dec
(bad)
adc
jae
push
push
jge
or
or
test
lock
push
les
jecxz
dec
cmp
push
call
add
sahf
int3
jmp
push
pop
xchg
fimul
xchg
popf
pop
(bad)
fs
xor
pop
and
cdq
aam
jb
inc
loopne
sbb
ins
push
not
mov
mov
stos
fnstenv
dec
icebp
jne
mov
pop
ret
ret
psubd
or
inc
sti
ins
jl
push
or
cmps
(bad)
call
out
pop
inc
clc
test
mov
aam
jno
mov
push
and
mov
jbe
add
lahf
aas
dec
aad
stos
aam
mov
add
int3
mov
(bad)
fisub
cmp
outs
mov
cmp
in
cmps
(bad)
xchg
and
out
shl
aas
out
sub
cmp
not
clc
ins
repz
mov
loop
into
fwait
ins
xor
ret
aas
lock
inc
cmps
pop
out
dec
xor
out
sbb
repnz
xchg
pop
outs
nop
add
imul
fdivr
xchg
dec
aam
jmp
hlt
sahf
and
and
iret
je
jmp
and
in
mov
ins
lods
(bad)
ret
xor
lods
movs
jp
mov
outs
popf
scas
movs
les
sbb
jbe
adc
scas
lods
push
jno
hlt
or
sbb
pop
nop
jmp
sub
mov
lods
int3
ret
mov
push
xlat
mov
test
not
pop
lock
inc
movs
or
mov
dec
jp
xchg
push
ds
add
cmp
pop
rcr
mov
ja
jb
sub
mov
(bad)
xchg
sbb
mov
jmp
push
xor
leave
mov
push
jno
shl
popf
and
aaa
xchg
push
(bad)
mov
xchg
push
jp
fisub
add
add
pop
push
and
push
dec
add
push
cwde
fisttp
push
xchg
popa
lahf
and
fs
push
shl
cmp
icebp
dec
add
push
mov
pop
sub
in
std
cmp
mov
jne
xchg
(bad)
in
shr
std
ss
bound
in
adc
loop
or
fwait
sub
mov
enter
test
retf
lods
call
pusha
xchg
push
or
mov
mov
pop
out
add
push
jmp
mov
mov
jno
movs
jle
sbb
into
inc
jo
not
(bad)
sahf
or
sub
cs
push
sahf
in
das
sub
push
es
mov
and
xchg
add
push
ret
mov
jno
cmp
inc
retf
aam
mov
mov
mov
cmp
pop
retfw
push
imul
test
sub
add
add
or
pop
mov
sub
loope
or
sub
ret
imul
and
stos
stos
arpl
sahf
sub
dec
sub
(bad)
cwde
lods
and
adc
cmp
aaa
sub
retf
and
test
pushf
out
rcl
inc
pop
jp
sti
lea
loop
jecxz
fcomp
fcom
cmc
add
xlat
outs
in
fist
sbb
inc
xchg
cmp
pop
xor
adc
jmp
inc
pop
dec
and
mov
aad
sub
int
inc
data16
repz
mov
out
cmc
xchg
mov
ficom
sub
xor
inc
into
outs
mov
repnz
mov
inc
(bad)
(bad)
(bad)
jb
mov
gs
out
cdq
or
fadd
fld
dec
jno
clc
into
ror
lods
cmp
jns
push
outs
push
stos
ret
fld
xchg
icebp
(bad)
sub
(bad)
cmps
mov
push
push
xchg
and
jo
aas
mov
lock
pusha
ret
mov
xchg
repz
cdq
dec
mov
inc
leave
fwait
mov
and
repnz
push
sahf
pop
add
das
jmp
mov
xor
push
pop
cld
repnz
and
pop
outs
movs
jno
adc
push
gs
sub
pop
and
int
inc
or
cli
adc
std
or
sub
neg
lds
popf
xor
inc
adc
push
push
dec
or
loopne
jl
mov
pop
push
ins
sbb
out
dec
adc
lahf
outs
(bad)
mov
into
push
mov
sbb
(bad)
movs
je
pop
push
fstp
repz
imul
aas
stc
push
imul
and
fcmovnu
xchg
mov
xchg
pop
xchg
or
jmp
pop
and
arpl
dec
outs
add
xchg
inc
sub
or
push
mov
out
mov
pop
(bad)
out
inc
out
rcl
outs
int3
iret
sbb
mov
repnz
jnp
retf
jmp
add
and
sbb
push
ins
inc
xor
enter
call
(bad)
inc
stc
pop
dec
cdq
mov
aad
or
xor
inc
xchg
sbb
jns
pushf
xchg
sub
and
in
or
cmp
lahf
mov
shl
mov
ins
mov
cmp
xchg
cmp
mov
adc
call
jg
jg
mov
cmp
int
fnstenv
movs
or
enter
cmp
das
ins
aas
mov
xchg
(bad)
aas
cmp
ret
imul
xor
push
jbe
leave
mov
cmp
cli
repnz
js
test
push
xchg
sbb
adc
mov
push
jne
add
loop
xor
xlat
push
dec
xchg
jne
mov
sub
rol
sub
sub
mov
sub
icebp
dec
pop
xor
and
js
mov
jbe
sub
loope
mov
add
sbb
das
push
in
jg
push
mov
mov
or
enter
call
lds
xchg
pop
xor
add
mov
fst
xchg
or
repz
adc
pop
dec
cmps
add
pop
repz
dec
jne
pop
test
fild
xor
jmp
sbb
in
push
inc
sbb
adc
js
mov
jmp
jne
fs
mov
out
mov
out
cs
xor
das
out
inc
inc
clc
lea
pop
cmp
mov
jg
clc
cmp
ret
pushf
xor
aam
shl
pusha
adc
(bad)
lea
jp
dec
adc
jns
and
mov
and
add
push
ds
out
sub
out
dec
xor
leave
int
loop
rcr
rol
sub
movs
dec
mov
lods
pop
push
retf
add
xor
inc
fdiv
sti
cmp
loopne
dec
add
mov
jo
cmps
push
scas
mov
cmp
addr16
xor
rcr
fmul
in
aad
inc
daa
inc
fnstcw
dec
ret
jge
inc
sar
mov
jns
jmp
mov
jne
jecxz
rol
pop
jne
repz
jmp
cmp
test
clc
mov
mov
fsubrp
sti
sar
repnz
imul
xchg
dec
pop
jbe
xchg
mov
inc
jge
rcr
mov
adc
sub
ins
adc
ss
sbb
xchg
lods
loope
popa
mov
ds
pop
rcl
xor
test
sbb
jne
sub
sti
adc
cmp
cmp
cld
sbb
mov
jno
xor
and
or
fld
jmp
sar
xchg
aaa
repz
inc
loopne
push
dec
xchg
out
movs
icebp
pop
pop
xor
lods
pop
sbb
ret
mov
mov
lods
popa
push
pushf
xlat
arpl
push
push
cwde
js
xchg
dec
scas
sbb
(bad)
clc
adc
push
adc
mov
and
jp
mov
loope
sbb
pop
es
mov
lea
inc
mov
add
mov
imul
and
lahf
sahf
std
not
adc
inc
or
xchg
fwait
shl
int3
ds
jg
mov
rcl
ss
mov
imul
gs
add
rcl
or
fild
push
std
jle
and
clc
call
or
retf
mov
jmp
std
and
dec
je
cmp
div
das
popf
push
fs
xor
pusha
pop
mov
add
inc
dec
cld
xchg
mov
jnp
popf
aad
ror
outs
test
xchg
dec
test
stos
mov
je
(bad)
movs
push
jle
sbb
loope
adc
lods
imul
arpl
mov
lods
mov
pusha
(bad)
cmp
aad
fidiv
jecxz
push
in
test
test
jbe
ss
lods
and
mov
mov
(bad)
shl
ins
adc
jo
(bad)
mov
in
outs
retf
fisttp
loop
and
push
ins
lods
fs
hlt
(bad)
scas
jb
jne
push
mov
out
imul
mov
dec
adc
and
movs
movs
or
jle
rcr
or
add
outs
xor
in
mov
out
std
push
loopne
out
dec
dec
sub
or
popf
(bad)
pop
sbb
jo
pop
fstp
out
or
dec
mov
in
sahf
pusha
cli
lahf
js
or
loopne
mov
dec
sbb
imul
jbe
(bad)
pop
mov
mov
mov
pop
fcmove
push
test
ss
ss
sub
js
lea
in
dec
test
cli
pusha
stos
aam
lods
mov
(bad)
pop
test
sbb
adc
push
out
retf
cs
jge
xlat
sub
rol
es
sbb
cmp
(bad)
stos
pop
outs
mov
stos
inc
movs
in
jp
pop
xor
xchg
adc
sub
js
cmp
push
punpcklwd
aam
jle
dec
stos
(bad)
std
call
xor
add
outs
jbe
mov
push
mov
pop
mov
dec
sbb
lahf
jns
fimul
(bad)
aam
dec
jne
outs
ins
dec
loope
add
fdivr
pusha
mul
shl
add
xor
pop
xchg
imul
sub
push
nop
rol
rep
xor
jns
daa
stc
fst
push
pop
push
rcl
fadd
test
enter
loope
out
scas
or
inc
and
sub
popf
jo
jge
daa
cmp
xor
sub
xor
(bad)
fisub
test
lahf
mov
sbb
loope
jge
jmp
xor
jmp
loop
or
mov
ins
fcom
bt
lea
cmp
sahf
shl
xchg
(bad)
ins
xor
mov
sti
mov
push
out
imul
sub
out
xchg
sub
push
call
div
inc
jmp
fsubr
xchg
retf
or
icebp
aam
movs
enter
add
jnp
loopne
es
xor
in
ror
adc
sbb
jecxz
pushf
mov
inc
cmps
push
adc
dec
adc
add
cmp
mov
lods
mov
lock
pop
xchg
push
push
pop
js
push
ds
inc
repnz
adc
sub
push
mov
jne
adc
add
in
adc
(bad)
sar
pop
sbb
mov
dec
idiv
loop
loop
retf
daa
loope
fistp
lea
shl
pop
sbb
add
pop
je
xchg
xor
jo
cmp
push
xlat
jecxz
xor
repnz
and
loope
lods
shr
mov
outs
lods
test
or
xchg
je
sbb
jecxz
sub
sub
cmp
outs
into
(bad)
fs
cmp
push
es
cmp
or
fld
dec
jae
xchg
in
adc
mov
js
fs
mov
adc
inc
push
cld
ret
movs
out
test
or
push
push
sub
jmp
fs
js
test
add
push
pushf
imul
mov
adc
test
mov
pop
jmp
fisttp
xchg
jns
jo
pop
nop
adc
out
xor
xor
test
or
out
ficom
in
jnp
mov
add
inc
push
pop
out
mov
ret
retf
push
(bad)
jns
pop
sbb
daa
cmps
adc
sbb
dec
xor
or
sbb
cld
jno
aam
cmp
sub
pop
add
in
das
cmp
mov
mov
rol
or
jl
fist
pop
jne
push
add
fsub
dec
pop
icebp
inc
mov
pop
pop
iret
pop
test
rcl
xor
cwde
jne
jno
cdq
xlat
sbb
neg
mov
js
jp
or
push
cmp
mov
add
ins
fidiv
xlat
or
inc
jecxz
jns
pusha
jl
xchg
pop
dec
es
and
test
dec
xor
inc
push
pop
jbe
xor
xor
mov
mov
push
ror
pop
in
retf
pop
clc
mov
fs
xchg
cmps
fwait
mov
popf
stos
shl
shr
push
mov
mov
lds
loopne
inc
leave
movs
jno
add
mov
inc
dec
mov
ja
push
ret
pop
mov
and
jbe
popa
cmps
mov
jae
pop
jne
fisttp
inc
adc
mov
loop
retf
outs
test
test
popa
push
cdq
fcomp
xchg
dec
das
xlat
in
jmp
dec
xchg
cld
dec
outs
adc
ja
ror
call
mov
lods
cmps
fnstenv
sub
jge
loopne
popf
mov
mov
inc
inc
mov
xchg
cmp
xor
and
cmps
mov
mov
xchg
scas
add
and
cwd
shr
jb
cmp
inc
mov
imul
sub
jmp
pop
ja
sbb
xchg
int
sbb
mov
aas
(bad)
and
mov
cwde
pop
sahf
push
dec
push
push
xchg
fisttp
xchg
les
cmp
jp
mov
sbb
push
sub
push
jmp
inc
adc
push
popf
push
out
ds
xor
jp
out
ret
mov
push
popf
dec
in
in
aam
inc
lea
imul
adc
and
retf
inc
test
push
es
dec
jl
xchg
test
and
xchg
rol
xchg
int
pop
cmp
loope
mov
and
fisttp
mov
pusha
jae
repz
inc
loopne
lock
inc
test
sar
nop
idiv
imul
jae
xor
cmc
sub
bound
fnstcw
or
hlt
(bad)
jo
dec
add
and
scas
push
sub
fild
jbe
push
jae
jle
lock
jne
lea
sbb
mov
lahf
in
out
sahf
ret
addr16
push
sbb
mov
rol
cmps
outs
and
pushf
pop
add
iret
sbb
idiv
cs
iret
adc
jmp
aad
mov
push
or
xchg
test
les
stos
jge
and
inc
add
sub
lods
pop
hlt
popf
icebp
retf
sbb
cmp
stos
push
pop
nop
in
mov
pushf
adc
ins
mov
mov
movs
cs
cmc
lock
sbb
sbb
scas
and
inc
daa
test
pop
test
jp
loope
outs
les
cmp
scas
xchg
scas
push
in
push
cs
xor
in
mov
xchg
jecxz
adc
shr
adc
fldenv
push
push
jp
sbb
mov
lea
sbb
or
test
pop
cmps
sbb
mov
pop
or
jns
add
mov
and
(bad)
int
in
in
and
jle
fild
mov
sub
xor
repnz
les
mov
cmp
test
mov
jp
out
jbe
(bad)
sub
out
nop
mov
(bad)
mov
add
sub
outs
(bad)
cmc
push
(bad)
mov
pusha
jno
push
and
ins
dec
mov
cmovo
call
sahf
daa
lahf
add
jl
fadd
xchg
adc
mov
test
pop
in
cmp
daa
mov
imul
mov
jns
add
test
retf
push
cmp
mov
ror
imul
sub
mov
repz
addr16
jae
push
xchg
lods
mov
pop
pop
cmp
mov
sahf
loopne
sar
fs
sbb
call
(bad)
out
(bad)
sub
dec
mov
xor
retf
and
mov
(bad)
sbb
add
icebp
into
rcr
add
ss
bound
lahf
rcr
add
retf
loop
imul
les
pop
pop
fs
icebp
sti
or
mov
push
movs
das
ins
xchg
lods
call
cwde
sbb
jno
adc
sbb
jne
cmp
je
cmps
sbb
shr
add
pop
push
jmp
cmc
leave
aaa
or
enter
fsubr
(bad)
jp
out
and
popa
imul
or
cmp
fcmovb
stos
adc
xchg
and
cmp
pop
das
add
or
pop
imul
ins
mov
mov
enter
pop
in
imul
lock
in
shl
sahf
sub
xor
and
dec
scas
scas
mov
hlt
inc
addr16
adc
mov
cli
outs
addr16
cs
push
mov
and
int
cmp
push
js
and
mov
mov
popa
ficomp
xchg
jg
mov
sub
test
sbb
dec
xor
mov
(bad)
jmp
jns
adc
xchg
movs
mov
add
push
xchg
loopne
mov
push
xchg
xor
ret
cwde
pop
or
sbb
mov
jno
scas
dec
mov
jns
nop
shl
and
xor
cld
jb
xchg
pusha
mov
push
mov
inc
or
xchg
or
jb
fbld
int3
loopne
or
xor
cmp
jae
das
inc
shr
loop
add
idiv
mov
mov
xchg
cs
inc
aas
mov
sahf
hlt
das
das
lea
setnp
dec
pop
fwait
sbb
fsub
sbb
fxch
shr
jl
popa
dec
ins
cmp
div
mov
retf
jo
out
xchg
push
movs
xor
test
scas
aad
(bad)
mov
aas
cmps
push
pop
test
iret
add
aam
mov
fcomi
imul
adc
mov
push
and
push
mov
out
stos
xor
xor
add
xchg
cmp
jne
lods
(bad)
dec
jle
popa
outs
and
sub
inc
fcom
test
mov
xchg
sub
mov
dec
jno
dec
pop
bound
mov
jecxz
mov
ret
hlt
sbb
repz
lahf
dec
xchg
add
iret
in
enter
dec
mov
ss
gs
(bad)
mov
stos
mov
adc
sub
add
test
adc
mov
nop
fist
test
cmp
mov
cmp
and
sar
neg
(bad)
and
xor
mov
nop
dec
push
xchg
movs
xor
dec
mov
pop
test
push
and
repz
dec
enter
shl
stc
pop
adc
rol
fiadd
sub
mov
ins
loopne
arpl
cmp
inc
cmp
push
mov
icebp
jl
(bad)
js
sub
lods
int
mov
sub
icebp
jnp
jb
ror
mov
out
xchg
je
cmps
out
in
mov
jmp
pusha
data16
lds
or
test
cdq
bound
ins
adc
sub
xchg
imul
pop
cmp
mov
(bad)
sbb
add
bound
fst
pop
scas
adc
and
xor
mov
jnp
(bad)
xlat
stos
in
sbb
jnp
push
pop
out
sti
mov
mov
pop
(bad)
jmp
cmps
push
push
sub
stos
popa
adc
adc
test
jb
pop
lods
ror
pop
mov
lock
mov
(bad)
arpl
push
loop
sti
out
cs
push
and
fimul
cmp
pusha
inc
outs
mov
mov
dec
out
sbb
mov
jle
add
mov
pushf
cld
loopne
sub
sti
test
push
jge
push
aam
jbe
jo
les
(bad)
mov
mov
xlat
(bad)
mov
mov
cmc
mov
xchg
clc
les
lahf
lods
nop
cs
jo
and
xor
cld
sbb
fucomp
dec
jmp
and
mov
lahf
cmp
jle
stos
pop
xchg
and
mov
out
out
dec
fcmovu
mov
sbb
push
mov
sub
outs
xchg
push
sub
and
mov
leave
cmp
push
sbb
cmp
xor
xor
into
dec
mov
adc
and
(bad)
sub
int3
mov
pop
add
popa
push
add
aaa
push
sbb
faddp
pop
enter
mov
pop
lds
arpl
jno
icebp
sub
das
mov
add
(bad)
stos
enter
push
inc
stc
int
out
jno
repnz
mov
xchg
sub
push
aam
ret
jnp
xchg
(bad)
jmp
loopne
and
mov
dec
add
call
mov
push
add
sbb
add
dec
enter
jo
dec
call
data16
pop
mov
repnz
push
das
ja
test
add
xchg
pop
loop
imul
jmp
cmp
cmp
call
lds
out
je
test
pusha
bound
push
cwde
in
add
in
sbb
push
ins
sbb
out
mov
dec
xchg
outs
jle
sub
mov
aas
sbb
pop
rcl
rol
retf
push
div
add
aas
retf
mov
in
sbb
lods
movs
(bad)
jns
sbb
add
push
inc
sbb
jmp
xchg
gs
push
int
push
adc
sub
xor
call
sub
js
push
pop
jl
das
cmp
mov
sbb
jbe
add
retf
jecxz
(bad)
repnz
(bad)
(bad)
test
into
div
sbb
or
dec
xlat
xchg
sbb
cmp
sbb
fisub
mov
aam
jns
pusha
add
or
je
jge
cmp
retf
repz
cmp
into
jg
mov
imul
data16
inc
stc
inc
jmp
sub
test
inc
sub
xor
shl
xchg
in
mov
test
in
sub
aad
jae
aam
(bad)
dec
out
push
pop
jno
nop
sbb
add
fild
(bad)
xchg
pop
dec
shl
and
fs
add
enter
and
ins
push
inc
inc
jo
ins
jmp
push
adc
fdivr
pop
pop
jns
loopne
xor
mov
jns
jmp
jnp
mov
push
pop
data16
pop
hlt
stos
aas
mov
std
adc
push
mov
mov
xor
sahf
pop
inc
adc
jecxz
out
xchg
int
ret
icebp
jbe
jp
in
int
jmp
pop
xor
xchg
cmp
ss
fwait
scas
push
mov
adc
xor
push
fild
push
ins
(bad)
cld
imul
popf
or
or
stc
inc
jo
sbb
aaa
repnz
jl
mov
xchg
mov
pop
pop
cmp
sbb
inc
call
ror
and
jg
sar
inc
(bad)
enter
and
mov
in
test
out
ins
mov
pushf
cld
push
jle
xor
xchg
pushf
vdivps
call
dec
frstpm(287
pop
pop
adc
push
sbb
xchg
(bad)
mov
mov
jmp
adc
xor
cmps
fwait
jmp
mov
xchg
xchg
int3
ficom
xchg
fdivr
stos
sub
jne
xor
sbb
push
leave
pop
jmp
into
mov
imul
enter
or
or
cmp
outs
sub
fbld
test
(bad)
mov
mov
popf
cmp
call
int3
popa
scas
xor
mov
daa
inc
inc
lods
sahf
and
or
sub
imul
push
ins
aam
inc
cmps
pop
data16
loope
(bad)
(bad)
cmp
cmp
jne
je
lods
fs
sbb
out
popa
sbb
inc
adc
test
mov
xlat
and
cmp
mov
ins
aaa
and
sub
dec
(bad)
daa
and
scas
cmc
adc
xor
fld
dec
mov
aam
push
inc
jmp
add
mov
xchg
lods
push
xor
jl
inc
add
stc
inc
jle
neg
add
mov
fstp
test
pushf
fmul
sbb
adc
or
movs
xor
(bad)
fisubr
imul
out
xchg
xchg
arpl
adc
rol
sbb
mov
sahf
add
fwait
popf
lods
scas
das
jmp
cmp
data16
aaa
pop
xchg
lods
push
mov
or
cdq
push
sbb
mov
jl
sahf
dec
jl
mov
int3
ds
mov
ins
js
cmp
out
adc
and
add
dec
mov
sub
push
inc
imul
dec
mov
loope
jbe
sbb
lahf
mov
sub
mov
adc
imul
in
int
loopne
or
sub
pusha
mov
pop
ror
call
or
out
mov
xlat
inc
sub
xor
or
push
aaa
push
mov
(bad)
call
pop
mov
das
lods
dec
fist
es
aam
mov
pop
jmp
pop
and
cmc
mov
je
cmps
in
mov
add
fisub
neg
jp
jle
movaps
cmp
push
pop
retf
xchg
xchg
xchg
or
cmps
aam
cwde
xchg
mov
pop
push
mov
cmps
jb
mov
outs
es
sbb
test
aad
jb
xchg
jmp
icebp
dec
mov
add
aaa
add
jne
std
inc
jge
jp
mov
pop
pop
dec
mov
jnp
ss
pop
adc
mov
test
cmp
add
add
xchg
test
imul
addr16
ja
sub
mov
dec
lds
push
mov
mov
dec
ins
pop
sbb
dec
jg
pop
inc
aam
sti
xchg
sbb
mov
(bad)
xor
or
pusha
push
aaa
pop
xchg
(bad)
icebp
fwait
lods
std
(bad)
dec
out
and
inc
in
not
jb
inc
lock
inc
mov
add
movs
and
mov
sub
mov
lods
jle
push
cmp
and
ds
in
inc
cs
out
loopne
call
add
mov
imul
ret
cli
and
lods
mov
pop
icebp
mov
je
jecxz
fwait
(bad)
out
loope
mov
lods
movs
adc
mov
bound
cmp
shl
test
out
inc
xchg
lods
xchg
int3
bound
mov
sbb
xchg
sub
inc
inc
and
lds
mov
sti
mov
outs
sub
icebp
loop
enter
aaa
push
pop
call
daa
fiadd
imul
sub
ins
lock
xor
inc
xchg
jb
icebp
out
xchg
das
lea
sbb
stos
push
inc
lahf
imul
pop
test
mov
inc
adc
mov
cmp
enter
cmp
into
cld
sbb
add
add
adc
mov
in
dec
mov
stos
push
arpl
mov
xchg
(bad)
leave
adc
push
loop
pop
adc
lahf
fisttp
inc
popa
rep
adc
pop
mov
sbb
add
inc
(bad)
sub
add
jmp
and
mov
and
cmc
jmp
lea
lahf
pushf
bswap
xlat
(bad)
std
cdq
fwait
pop
cmc
ror
ja
or
cli
inc
gs
mov
pop
dec
cs
sub
add
ins
outs
movs
jns
sub
xor
scas
int
jle
or
ja
ins
movd
sub
jmp
mov
pop
sub
imul
retf
pop
clc
adc
cmp
sbb
and
cmp
push
clc
jg
sub
add
mov
cli
in
lods
not
cli
or
xchg
in
aas
mov
xchg
push
jno
mov
dec
imul
sbb
(bad)
mov
outs
push
iret
int
pusha
icebp
and
and
cwde
xchg
fs
out
scas
push
dec
and
rol
loope
ret
out
test
in
push
sbb
ins
sbb
mov
shl
(bad)
pop
cwde
ja
sbb
into
in
cmp
mov
fmul
add
or
adc
ret
jge
retf
in
lea
inc
repz
xchg
mov
xor
jo
sti
lods
mov
or
sub
data16
push
fist
cld
pop
in
mov
iret
jbe
mov
adc
(bad)
dec
mov
mov
icebp
sbb
das
push
cmp
push
aad
inc
sbb
jp
bound
cmp
add
add
loop
in
cmpps
retf
mov
xor
add
mul
int3
cmp
and
lods
(bad)
adc
(bad)
adc
adc
mov
dec
xchg
push
ins
add
ficomp
or
cmc
jb
jmp
aad
loope
xor
xchg
push
std
dec
test
imul
pop
leave
jle
dec
mov
mov
ud2
xchg
add
pop
mov
sub
xor
add
inc
cmp
ins
ds
unpckhps
xor
test
pop
fnstenv
mov
or
jmp
mov
xchg
ins
mov
(bad)
lea
sub
and
xchg
mov
jmp
adc
ret
xor
(bad)
retf
sub
pop
(bad)
sbb
xor
jecxz
mov
test
cmp
and
xchg
pop
mov
xlat
std
xchg
loop
(bad)
cs
adc
gs
ins
adc
cli
jmp
ret
mov
xchg
xor
or
and
push
loopne
push
shl
add
inc
loope
mov
inc
imul
xor
test
nop
outs
inc
jp
and
int3
dec
popa
push
dec
popa
das
cmp
mov
push
aam
iret
dec
scas
dec
push
mov
ins
xchg
mov
neg
outs
pop
in
pop
xchg
ret
xchg
mov
outs
hlt
inc
out
push
pop
mov
xchg
pop
lds
jmp
xchg
(bad)
mov
xor
outs
mov
and
call
sti
pop
mov
adc
mov
aad
adc
pop
cmp
and
adc
sbb
int3
push
and
mov
in
adc
push
jne
ror
ss
repz
xor
dec
(bad)
shl
mov
pushf
ins
push
das
sbb
bound
call
push
fwait
jae
repz
and
dec
jno
imul
outs
leave
pop
outs
je
pusha
jl
inc
lock
cmp
mov
cmp
dec
jno
push
and
shr
fisttp
push
jle
popf
hlt
icebp
inc
or
or
das
sbb
jae
jnp
popa
mov
pop
mov
dec
ins
scas
out
retf
call
ret
mov
das
ss
leave
xchg
and
xchg
sub
and
loope
movs
add
(bad)
dec
adc
int
(bad)
push
mov
ret
dec
nop
dec
dec
xor
call
mov
cmps
ins
(bad)
imul
call
push
inc
loop
and
or
push
seta
pop
stos
outs
jecxz
cwde
test
scas
fcmovb
cmp
in
sbb
xchg
push
inc
icebp
and
ret
ret
ss
pop
gs
jne
dec
enter
jg
fbld
or
mov
mov
pop
fstp
mov
and
ins
push
imul
jecxz
dec
sub
data16
aas
jg
add
adc
ins
not
cs
movs
xor
pop
in
cdq
imul
mov
adc
test
sub
cmps
arpl
rcr
dec
xor
xchg
(bad)
test
or
jne
inc
stc
xchg
retf
adc
and
xchg
mov
addr16
call
mov
ror
call
jnp
jp
aas
aam
pop
js
add
fidiv
cs
clc
inc
sbb
loop
icebp
stos
retf
or
loope
fstp
ds
fnsave
mov
add
dec
fwait
test
leave
out
icebp
fsubp
and
pop
xor
cdq
add
mov
or
fwait
stos
pop
dec
inc
or
mov
adc
pop
pop
mov
cwde
clc
fild
shr
movs
in
aaa
fwait
adc
jmp
push
sbb
out
mov
cmp
push
out
push
imul
and
xor
push
mov
gs
movs
cmps
in
stc
xor
xor
xchg
(bad)
mov
pop
jge
in
inc
add
push
rcr
mov
(bad)
sbb
or
into
jno
jb
mov
sahf
push
loopne
xor
sbb
scas
in
cld
(bad)
scas
xchg
(bad)
bound
adc
jg
cli
sti
ins
ret
arpl
xlat
icebp
xrstors
push
(bad)
(bad)
jg
xchg
mov
cwde
retf
leave
repnz
jmp
mov
xchg
stos
xchg
push
cld
retf
sbb
sti
sti
ss
sti
sbb
sbb
arpl
retf
cmp
repnz
mov
inc
jle
xchg
js
inc
jno
fsubr
outs
(bad)
fsubr
pop
rcl
iret
xchg
imul
repz
or
add
xor
test
test
out
call
cld
jle
jg
inc
out
xor
iret
je
dec
inc
mov
xchg
jno
sbb
mov
and
cld
pop
dec
mov
fild
ja
sbb
xor
stc
hlt
xchg
fcom
cs
enter
push
mov
ins
pop
pop
inc
(bad)
xchg
fst
jg
pop
es
test
push
pop
add
mov
sbb
and
mov
add
or
cdq
cmp
dec
lods
adc
idiv
mov
ror
and
jne
aam
popa
ins
arpl
pop
sar
js
jmp
ret
mov
outs
jnp
sbb
lds
rcl
push
inc
call
int
sbb
pmulhw
jp
shl
mov
pop
mov
add
pop
(bad)
aad
mov
daa
xor
test
sub
push
dec
ret
shl
pop
mov
lods
(bad)
sbb
test
shr
dec
lock
xor
mov
addr16
lods
pop
jb
fisttp
mov
clc
arpl
add
mov
jne
ins
fs
mov
xor
xchg
xchg
les
je
mov
(bad)
xor
or
adc
das
stos
pop
test
push
outs
in
ds
in
sub
jo
stos
jbe
inc
jle
mov
and
add
pop
(bad)
mov
jnp
jno
inc
jnp
jl
lahf
lods
aad
jmp
or
cmp
pop
in
and
add
fistp
jmp
pop
xor
fsub
xchg
sub
call
push
sti
fidivr
test
pop
pushf
add
push
test
(bad)
ins
cmp
dec
xchg
fstp
cmp
xor
cmps
dec
mov
mov
in
sti
ins
sar
ror
iret
mov
loopne
div
adc
retf
fucom
test
xchg
cdq
fstp
ins
aam
(bad)
dec
pop
push
cmp
xchg
gs
lea
adc
jp
xchg
(bad)
cdq
xchg
jmp
popa
push
mov
sub
mov
sbb
cmp
div
sub
inc
dec
inc
test
fcomp
pop
enter
stc
(bad)
push
test
push
jp
pop
retf
mov
and
mov
xchg
jmp
inc
pusha
cli
push
inc
stos
mov
imul
xchg
cld
inc
add
and
fldenv
and
mov
sbb
dec
mov
fbld
ficomp
sbb
mov
fst
xchg
mov
mov
rol
cmp
pop
mov
xor
cmp
pop
mov
lock
adc
cmps
mov
sub
mov
out
lods
xor
push
jge
pop
popa
ins
mov
out
call
(bad)
imul
mov
pop
push
mov
inc
push
mov
cvtps2pd
pop
out
addr16
sbb
push
sub
cmp
enter
retf
sub
add
jle
fcom
push
cmp
or
test
pop
shl
cmp
add
and
aaa
fimul
stos
iret
jmp
inc
or
ins
ins
inc
fld
repz
xchg
fst
pop
pop
test
dec
sahf
xchg
and
pusha
push
loope
dec
enter
inc
scas
adc
cdq
ins
push
pusha
adc
loop
call
add
stc
cmp
addr16
test
or
mov
sbb
inc
jo
mov
std
lods
mov
add
add
sub
sub
push
and
cmps
mov
daa
mov
call
adc
pop
out
enter
ss
add
or
push
xor
add
or
imul
add
rcr
mov
push
loope
arpl
loop
cmp
mov
pop
stos
(bad)
ja
shl
dec
(bad)
pop
outs
pushf
pop
sub
into
and
(bad)
shr
jmp
pop
sub
pop
mov
sahf
repz
sbb
sub
pop
dec
cmp
pop
in
mov
and
cmp
dec
sbb
iret
es
mov
das
(bad)
fdivr
dec
imul
int3
mov
test
daa
sbb
mov
and
mov
mov
mov
mov
addr16
ja
cwde
cdq
popa
or
add
out
sar
cmp
and
or
xor
dec
loope
mov
shl
push
or
jmp
xor
stos
ret
ror
inc
lods
cmp
test
jp
mov
mov
mov
dec
(bad)
sti
test
sub
cmp
pop
xor
mov
int3
jecxz
mov
out
dec
xor
fsub
mov
cmp
jbe
push
pop
into
jb
cwde
pop
sub
inc
fisubr
xor
xor
sbb
push
add
popf
mov
lea
out
rol
jb
push
dec
rcl
mov
retf
(bad)
push
sbb
inc
rol
mov
retf
push
mov
arpl
xor
cmc
push
loopne
add
push
fs
lock
pop
(bad)
repz
cmp
jo
push
bound
pop
dec
pop
fs
stos
adc
jle
sub
push
lahf
popf
jg
pop
scas
das
test
and
dec
inc
dec
aaa
int3
ss
dec
neg
sahf
pop
mov
dec
add
dec
lock
scas
mov
ret
fild
xor
add
dec
and
out
clc
shl
pop
or
adc
imul
pusha
push
pusha
cli
adc
out
icebp
pop
xchg
push
and
scas
push
push
scas
(bad)
loop
sub
sub
hlt
inc
mov
adc
lock
(bad)
adc
clc
xor
es
sbb
or
xchg
xor
inc
rcr
inc
ret
or
clc
add
cmp
(bad)
call
sar
cmp
ret
sar
mov
inc
sub
cld
push
adc
in
movs
cdq
cli
mov
dec
mov
fnstcw
cwde
dec
pop
jnp
movs
cld
jnp
shr
pusha
xor
mov
int
xor
pop
push
pop
pop
sar
retf
and
xchg
cmp
xchg
call
mov
out
sub
cmp
mov
loope
xor
aad
cmc
pop
ficom
test
ja
or
lahf
sub
sbb
xchg
xchg
movs
or
pop
xor
aaa
push
pop
mov
push
sbb
jle
pop
adc
sub
cmp
scas
jle
xchg
test
imul
adc
cmp
inc
out
dec
jns
aad
push
enter
nop
shl
mul
xchg
adc
(bad)
cmp
sub
mov
inc
lahf
mov
xchg
arpl
pop
popf
dec
or
or
mov
fwait
lea
sub
jmp
pushf
lods
cmps
call
pop
sbb
vpsubusw
test
cmp
enter
push
int3
adc
(bad)
ror
sub
inc
fstp
imul
jl
xchg
sti
cmp
push
retf
sub
jno
or
loop
push
out
push
push
fisttp
mov
cli
mov
push
dec
movs
pop
mov
popf
adc
mov
out
test
sbb
imul
ret
sub
dec
jno
clc
int3
xchg
iret
add
or
sbb
mov
mov
in
cs
fwait
outs
pop
sbb
lods
int3
imul
imul
ds
cmp
out
nop
inc
xchg
sub
inc
cmps
add
cmps
xchg
mov
je
int
cmp
jg
inc
(bad)
lods
jbe
and
mov
inc
pop
(bad)
inc
and
jb
add
js
adc
jge
ds
in
dec
jo
mov
stos
jmp
pop
cli
lods
cmc
sbb
pop
ja
sbb
cdq
jmp
nop
test
jnp
sbb
repz
jns
leave
jmp
pop
jmp
dec
popf
cmp
and
push
div
inc
cmp
pmaxub
pop
ins
ja
adc
inc
jnp
pop
ret
cmp
adc
stos
test
xchg
popf
std
sbb
mov
(bad)
jecxz
mov
inc
add
sub
pushf
cmp
sbb
adc
sub
test
mov
dec
xchg
sti
scas
shr
xchg
and
ins
and
lods
sbb
mov
repz
bound
inc
mov
addr16
js
and
in
imul
dec
dec
lds
sbb
ds
cld
(bad)
inc
scas
jb
xor
outs
dec
push
pop
imul
xchg
ins
ins
pop
push
jmp
and
cmc
int3
sbb
mov
movs
xchg
sbb
jl
cdq
imul
fldcw
out
push
call
add
rcl
mov
cmc
aaa
cmc
dec
and
adc
jne
push
mov
mov
adc
clc
in
lea
aaa
mov
jo
mov
repz
dec
jl
mov
xchg
mov
int3
rcr
dec
je
or
(bad)
adc
(bad)
push
cmc
fistp
dec
out
add
mov
imul
dec
dec
jl
xor
sahf
ja
addr16
stos
xor
movs
data16
xlat
cli
shl
adc
adc
adc
sahf
jecxz
loop
aam
mov
xchg
jbe
in
adc
into
mov
popa
push
mov
call
leave
or
rcl
push
les
mov
jb
xor
retf
cmp
inc
add
dec
inc
sub
and
ror
push
das
fwait
mov
pop
imul
popa
ds
aas
repz
daa
jg
aaa
push
pop
(bad)
out
mov
mov
imul
mov
stos
pop
into
neg
pushf
mov
or
xor
data16
rcr
jb
data16
jge
mov
stos
popa
sub
jne
jg
xchg
jge
clc
mov
adc
and
push
push
inc
cmp
imul
sbb
pop
mov
inc
jno
pop
cmc
jp
lock
adc
cmp
aad
push
sub
cld
mov
repz
xor
xchg
idiv
std
aad
mov
jb
mov
dec
mov
mov
mov
jb
mov
sub
add
cli
(bad)
out
dec
icebp
outs
into
pop
and
sbb
sbb
hlt
sub
lahf
imul
rcr
ficom
cmp
neg
mov
xor
inc
mov
sbb
sbb
ja
cli
pop
icebp
lock
shl
cmp
in
pop
repz
sub
pop
mov
xor
cmp
add
mov
add
das
xor
xor
lods
test
mov
adc
(bad)
jecxz
in
mov
mov
js
out
ins
xchg
jo
dec
adc
push
sub
gs
shr
fdivr
in
jae
aaa
fsub
call
(bad)
cmp
mov
mov
pop
sbb
in
dec
scas
aam
sub
imul
aam
xlat
mov
std
dec
jne
xchg
outs
movs
add
in
jge
inc
xchg
mov
push
mov
xlat
inc
xlat
je
movs
add
sub
mov
push
hlt
es
outs
in
cmp
stos
pop
or
loop
pop
loope
xor
xchg
aas
and
cmps
mov
mov
mov
sbb
add
mov
call
sub
inc
repnz
or
mov
mov
daa
cdq
jb
xor
into
sbb
sbb
(bad)
push
push
(bad)
cmp
imul
std
add
fild
pop
jge
jno
add
inc
loopne
push
jnp
call
sub
mov
inc
mov
and
icebp
sbb
stos
fld
movs
lahf
fdiv
cwde
add
dec
mov
sti
es
mov
stc
enter
sti
ja
sub
inc
mov
(bad)
es
aam
xchg
push
dec
sub
arpl
aaa
sti
push
push
pop
adc
jl
push
imul
sar
add
sbb
stc
adc
push
outs
div
aas
sbb
sahf
(bad)
outs
stc
fsub
iret
dec
adc
aam
stc
pop
sub
(bad)
aam
vpshad
mov
cmp
sub
pop
and
ret
mov
jnp
fwait
push
inc
imul
or
jne
xchg
add
shl
xchg
add
sub
mov
cmp
jp
mov
(bad)
and
xlat
dec
mov
test
or
push
test
lods
loop
push
xchg
xor
mov
push
or
out
(bad)
fisttp
popf
and
push
popa
iret
rcl
pop
sbb
or
xchg
sbb
push
adc
xchg
sub
test
rcl
xor
sbb
mov
dec
jmp
push
not
add
sti
sbb
cmp
sub
push
or
lahf
lock
dec
push
sub
repz
mov
mov
and
jmp
or
sub
sahf
ret
je
xchg
or
lock
sub
mov
aad
pop
shl
aaa
fistp
xor
repz
jecxz
les
xchg
inc
mov
fst
repz
sbb
push
mov
hlt
pop
lods
pushf
dec
adc
in
xor
shl
lods
fistp
push
jbe
mov
jge
in
repz
sahf
punpckhdq
fwait
jo
stos
out
xchg
cmp
pop
jb
and
ss
cmp
stc
shl
dec
sub
fistp
jae
imul
mov
sbb
sbb
sub
mov
xor
xor
fcomip
mov
pop
push
imul
pop
sbb
retf
xchg
pop
pushf
mov
aad
ins
aas
nop
cmps
dec
lods
push
cmp
nop
jmp
jp
xchg
fdivr
(bad)
fiadd
outs
mov
sub
(bad)
mov
pop
dec
jo
into
das
dec
(bad)
das
(bad)
mov
xor
and
mov
ins
xchg
std
pop
mov
xchg
push
or
inc
mov
mov
retf
dec
dec
ror
mov
mov
xchg
lods
je
repnz
out
jmp
add
add
adc
je
aas
pop
(bad)
cmp
pushf
inc
pop
mov
pushf
mov
xchg
or
test
mov
and
add
in
mov
inc
push
jae
push
push
push
mov
das
lds
mov
test
pop
mov
mov
test
retf
push
daa
std
xor
sbb
mov
pop
gs
inc
aam
mov
jmp
inc
jo
imul
in
stos
jno
mov
cmp
fidivr
sbb
iret
pushf
cmp
sahf
cmps
pop
mov
ins
int
je
ins
jnp
call
aad
in
stc
dec
mov
mov
adc
std
or
pop
dec
xor
cli
and
call
enter
jl
pop
xchg
sbb
mov
and
cmp
out
popa
jl
paddw
xor
mov
pop
mov
pop
outs
xor
pop
and
lock
mov
in
pusha
mov
stos
dec
jmp
data16
dec
mov
xchg
popa
sub
sub
enter
sub
popa
call
sub
js
jle
pop
push
xor
scas
or
jo
js
(bad)
shr
icebp
gs
cmps
mov
(bad)
xchg
aas
out
pop
jecxz
mov
in
popf
and
pop
push
int
clc
dec
add
ror
out
xchg
(bad)
outs
aad
add
cdq
fwait
or
outs
lds
sbb
jmp
inc
inc
dec
inc
push
ficom
daa
neg
int
jp
pop
es
fisttp
pop
aam
mov
xrelease
aad
in
arpl
jno
xchg
and
or
stos
push
jae
outs
xor
or
adc
movs
jg
and
outs
fmul
and
popf
cwde
push
pop
add
repnz
pop
ret
lods
fistp
repnz
sub
imul
pop
popa
push
fld
mov
xchg
fisttp
mov
dec
mov
mov
xor
mov
test
mov
and
fldenv
lock
pop
fs
sub
pop
shl
mov
jle
sti
lahf
stos
cs
fcom
cwde
pop
xor
mov
mov
aad
xor
adc
outs
xchg
xchg
int3
es
rcr
sti
dec
ret
rcr
inc
xchg
(bad)
fdivp
sub
add
xor
nop
into
inc
xchg
aas
mov
adc
push
cmp
inc
cdq
(bad)
dec
sahf
and
sahf
in
ret
imul
and
out
xchg
stos
(bad)
cdq
jl
mov
int3
inc
add
push
or
push
test
enter
fcom
iret
mov
xchg
ror
inc
adc
adc
xchg
lds
test
ror
cmp
or
xor
xchg
imul
test
mov
or
xchg
les
add
in
mov
and
inc
mov
and
push
lahf
mov
into
lods
push
(bad)
lds
jno
stos
imul
sahf
imul
sub
xchg
scas
gs
sbb
xchg
push
pop
mov
cmps
push
iret
adc
shl
xor
hlt
mul
(bad)
frstor
mov
sahf
in
ret
mov
fiadd
pop
sbb
test
dec
xchg
sub
inc
aad
xor
push
leave
xor
int
push
pop
dec
dec
and
in
bound
xchg
imul
xchg
bound
sub
pop
retf
xchg
cs
mov
cmp
lods
adc
sbb
push
mov
stc
push
popf
aaa
clc
je
push
dec
push
add
in
es
adc
lahf
cli
or
or
xchg
sub
or
ins
xor
repz
jmp
sbb
loop
ins
(bad)
call
mov
mov
pop
ror
and
(bad)
jg
pop
std
popf
ds
iret
cli
repnz
cli
test
push
xor
test
(bad)
pop
aam
pop
sahf
ret
iret
stos
(bad)
fild
dec
dec
pop
mov
and
cdq
add
sub
inc
loopne
xchg
gs
or
sar
dec
xor
push
fdivr
jecxz
add
into
mov
aas
dec
mov
dec
dec
mov
lahf
mov
add
aam
and
and
fidiv
pop
pop
imul
lock
mov
pop
push
shr
imul
pop
or
ins
mov
or
popa
iret
add
dec
push
xor
dec
or
leave
mov
daa
push
dec
or
fs
adc
dec
ret
out
mov
sahf
jbe
xor
push
pop
jae
aam
pop
out
les
inc
aaa
int3
mov
ror
in
mov
fidivr
cmp
mov
inc
pop
jl
sub
inc
loope
pop
add
test
dec
aaa
lods
aas
inc
outs
jg
dec
xchg
jnp
xchg
push
imul
dec
stos
or
or
push
inc
cs
out
add
cli
or
mov
inc
mov
(bad)
mov
inc
daa
dec
int3
sbb
bound
test
adc
mov
test
call
movs
fldcw
push
cli
xchg
ret
and
pushf
pop
cmp
mov
icebp
xor
loope
adc
retf
mov
mov
shl
pop
push
pop
in
jnp
hlt
push
add
dec
jae
retf
ret
mov
sub
xchg
and
xchg
movs
push
fdiv
in
ss
fcom
inc
adc
mov
shl
fcmovnu
add
push
inc
rol
int
jae
jmp
sub
(bad)
aam
(bad)
stc
mov
cmp
sbb
adc
cmp
(bad)
sub
rol
pop
mov
shl
(bad)
inc
dec
inc
pop
jae
dec
xlat
scas
in
adc
mov
sub
js
xor
cmp
inc
ret
xor
test
(bad)
pusha
push
sbb
mov
mov
jmp
lods
loope
fisttp
rol
sub
or
test
addr16
push
mov
and
pop
ds
ja
icebp
shl
lea
cmps
pop
inc
dec
ror
out
test
ret
push
pop
addr16
rdpmc
pop
cmp
(bad)
aas
pop
or
in
mov
cmp
inc
or
int3
mov
movs
jl
fidiv
push
xchg
or
scas
jb
jl
jne
out
push
jmp
xchg
add
mov
out
sti
mov
mov
iret
hlt
mov
xor
xchg
mov
repnz
sub
or
add
gs
cmp
imul
sbb
mov
mov
push
aad
jp
xchg
sahf
inc
xchg
push
fwait
jae
add
add
xchg
adc
inc
jb
cmc
popa
lock
or
adc
sub
xor
cwde
out
scas
pop
bound
and
mov
sbb
repz
jecxz
mov
(bad)
mov
neg
lahf
xchg
addr16
loope
(bad)
aad
xchg
int
mov
mov
push
jmp
push
test
push
mov
in
jmp
sub
dec
inc
adc
cdq
jge
aas
dec
push
fbstp
push
xor
and
movs
inc
inc
adc
jl
dec
loope
cmps
fdivrp
jns
cld
cmc
sub
cld
lods
and
xchg
cmps
sbb
jmp
mov
pop
shl
stc
(bad)
rol
or
lea
in
arpl
aas
ins
daa
jne
loope
jmp
loopne
aam
add
imul
sub
outs
test
inc
cs
repz
je
jb
xrelease
pop
mov
in
cmp
and
inc
loop
cwde
das
popa
or
mov
jnp
adc
xor
sub
mov
outs
mov
push
hlt
fwait
not
mov
imul
cmp
xor
mov
add
jecxz
jle
adc
imul
push
jmp
in
sub
jecxz
fsubr
repnz
stos
nop
cmp
dec
xchg
adc
pop
lods
push
je
js
xor
xlat
push
mov
add
outs
xchg
dec
test
bnd
movs
and
jmp
jno
(bad)
aad
fadd
push
mov
and
std
lods
repz
test
pop
xchg
or
and
push
jmp
daa
test
sub
out
fisubr
cdq
std
sar
popa
fistp
lods
jno
fwait
stos
inc
inc
test
neg
mov
inc
mov
movs
xchg
imul
push
loopne
(bad)
aas
dec
test
sbb
xchg
pop
push
mov
adc
aam
(bad)
adc
adc
dec
call
xchg
xor
adc
jle
lds
fs
es
xor
pop
(bad)
repnz
(bad)
mov
test
sub
cs
or
pop
inc
ins
movq
out
mov
hlt
es
add
sub
pop
cmps
inc
xchg
cmp
das
sub
mov
jp
mov
fmul
jg
mov
retf
addr16
xor
sbb
push
jbe
push
jecxz
dec
in
shl
push
fcom
icebp
out
ins
fld
pop
stc
rcl
fdiv
cmp
nop
dec
jns
and
cmp
or
mov
leave
jecxz
or
mov
adc
add
movs
imul
and
pop
scas
icebp
inc
out
push
xor
das
add
push
dec
hlt
xchg
fwait
in
and
push
add
inc
push
xchg
dec
ds
pop
aaa
and
jae
xchg
mov
jae
push
adc
inc
in
jl
fisttp
pop
inc
mov
pusha
or
div
jo
add
je
rcl
addr16
add
repnz
in
scas
xchg
xlat
(bad)
mov
cmp
dec
inc
sbb
retf
push
cdq
repnz
repnz
movs
fxch
leave
mov
ror
cmc
fimul
jno
iret
mov
adc
xchg
jae
outs
ss
jae
ret
mov
ja
cwde
int3
ins
jo
pop
pushf
fld
dec
mov
aaa
aas
pusha
cmp
inc
imul
mov
ds
ins
(bad)
bnd
or
dec
and
fsubr
dec
into
mov
mov
iret
ds
adc
test
sub
outs
pop
outs
sbb
and
inc
jae
jecxz
repnz
es
mov
sbb
push
adc
cs
or
inc
xchg
inc
sub
lahf
loop
ins
add
daa
les
in
or
popf
outs
nop
fcmovu
mov
(bad)
or
xchg
push
outs
jmp
push
inc
cmp
push
je
mov
sbb
pop
xlat
dec
and
jle
jp
mov
mov
(bad)
mov
mov
mov
ss
adc
idiv
repz
xchg
int
jo
les
pop
or
or
pusha
call
pushf
fs
jge
cmp
test
std
sbb
mov
and
fimul
adc
pop
test
mov
sar
add
mov
ficomp
fwait
or
or
add
and
pop
out
call
pop
fistp
push
das
cmp
call
jmp
test
pop
sub
or
push
bound
cmp
cdq
inc
mov
push
xor
jb
xchg
outs
pop
adc
and
pop
jl
popf
add
scas
fidivr
(bad)
sbb
lock
clc
push
pop
push
(bad)
fidivr
cmp
aam
mov
mov
push
or
jmp
jmp
pushf
cld
pushf
jge
xor
cmp
jmp
cmp
xchg
lods
clc
xchg
pop
fwait
adc
sti
sti
pop
push
jns
cmp
xchg
and
icebp
and
dec
mov
cmp
loopne
jmp
fld
movs
mov
xor
or
push
jbe
or
dec
int3
xor
lods
int
mov
scas
test
xor
popf
pop
push
xchg
add
pop
xor
in
fwait
and
mov
jmp
sti
cwde
pop
xchg
stos
aam
push
jae
lock
loope
and
enter
test
lahf
dec
call
les
push
lods
jg
sbb
cdq
mov
mov
mov
pop
or
pop
mov
push
lds
lods
cmps
out
bound
enter
ds
es
cwde
hlt
and
movs
jecxz
or
rcl
scas
in
call
sub
push
cmp
and
mov
push
mov
mov
cmp
ins
xchg
mov
pop
dec
lea
stos
scas
scas
movs
in
stos
psubusb
mov
idiv
push
repz
push
adc
sbb
out
sbb
je
jno
stc
rcl
jl
into
dec
push
mov
sub
add
xor
mov
mov
mov
or
dec
push
in
cld
fyl2xp1
cmp
sub
mov
or
push
fidivr
in
xchg
jae
scas
test
outs
test
ins
sub
sahf
sbb
and
inc
cmp
xlat
fs
push
stos
dec
dec
xlat
inc
lods
add
mov
pop
or
adc
std
pop
sbb
scas
adc
jb
sahf
ret
ins
ss
and
ret
ds
xchg
inc
mov
daa
and
xchg
dec
jb
xchg
cmp
nop
out
mov
cmp
js
repnz
mov
and
or
and
jbe
cmc
xor
xor
jge
add
gs
jge
adc
pop
clc
xchg
imul
shl
call
inc
cmc
icebp
cmps
dec
lods
mov
pop
push
inc
dec
and
xlat
dec
sub
jg
cs
xor
gs
cmp
loop
lods
out
leave
out
rcr
push
call
push
and
pop
scas
pop
and
xchg
in
xchg
pop
aaa
pusha
sbb
(bad)
in
gs
pop
mov
or
ss
out
lea
xor
xchg
add
daa
cld
adc
std
cmp
int3
mov
dec
fucomip
or
fisttp
(bad)
xor
cdq
ja
adc
pusha
movs
xchg
or
popf
outs
cwde
mov
xchg
or
rol
lds
push
push
das
in
pop
jl
lahf
push
xor
or
jl
mov
jno
xor
xor
jmp
push
ins
out
xchg
rcr
pop
mov
push
imul
sbb
mov
dec
cmp
xchg
into
loopne
xor
ret
sbb
push
div
cwde
lock
push
mul
stc
push
loopne
jne
aas
mov
sub
jle
das
cmp
push
cwde
mov
int
out
mov
xor
test
xor
ja
ret
sbb
pop
loopne
(bad)
mov
test
mov
call
scas
retf
mov
jb
mov
jmp
arpl
add
(bad)
das
cmc
loope
enter
lods
adc
push
push
ins
add
stos
xor
in
xchg
js
jmp
sbb
fwait
mov
in
inc
push
sbb
inc
(bad)
push
push
sbb
and
mov
push
pop
adc
imul
lods
pusha
fldcw
cmp
stos
adc
xchg
sahf
jl
icebp
lods
cdq
int
add
adc
in
call
out
daa
add
shr
lea
xchg
pop
push
gs
mov
dec
add
sti
ss
nop
sbb
cmp
inc
add
lods
adc
jno
dec
cmp
cmp
lock
push
or
push
repnz
push
sbb
mov
xchg
sub
rol
xor
aas
shr
popa
aad
jl
add
mov
or
iret
mov
sub
mov
pop
mov
xor
aad
add
inc
push
and
scas
cmps
xchg
ret
jecxz
pop
jns
ss
add
inc
add
sub
adc
stos
sub
or
retf
ja
int
xor
popf
dec
and
gs
pop
popa
dec
(bad)
leave
add
fwait
iret
loopne
scas
gs
push
mov
pop
mov
lods
(bad)
std
xchg
les
sub
xchg
lahf
dec
mov
loopne
push
pusha
jecxz
xchg
jle
cmps
jecxz
ret
cmp
xor
pop
xor
and
add
sbb
stos
shr
nop
jne
pop
push
jle
or
and
xor
(bad)
nop
xchg
hlt
and
mov
jmp
inc
loop
fadd
jecxz
jge
setg
mov
movs
or
adc
push
dec
cmp
cld
in
xchg
push
mov
push
push
xchg
imul
mov
enter
sar
in
cdq
dec
sub
cmps
lahf
cwde
fsubr
xchg
inc
sub
dec
inc
pop
xchg
dec
sar
rcr
lea
mov
xchg
vpmulhuw
sub
and
inc
mov
adc
pop
and
lahf
das
inc
mov
fs
call
push
sbb
das
popa
add
mov
dec
stos
mov
sar
inc
dec
stos
push
fmul
pop
push
lods
xor
jno
shr
push
push
dec
jb
sbb
or
retf
sbb
cld
mov
sbb
mov
pusha
test
icebp
scas
xchg
mov
lods
pop
jno
push
pop
leave
rcl
sub
(bad)
cmp
(bad)
nop
mov
hlt
lods
fsub
arpl
fsub
pop
jge
call
mov
iret
and
adc
fs
xchg
pop
test
pusha
pop
xor
(bad)
sbb
pop
paddd
icebp
(bad)
addr16
pop
xlat
push
sar
and
fstp
mov
mov
sub
push
in
or
mov
dec
cmc
shl
shl
mov
jmp
call
pushf
pop
inc
pushf
jb
test
mov
mov
es
xor
or
loope
nop
(bad)
shr
add
mov
idiv
push
in
cmp
ins
xor
cmc
aas
mov
push
or
xchg
and
xchg
std
adc
add
leave
enter
xor
xchg
jg
rol
or
push
mov
cld
and
les
xlat
inc
cmp
mov
or
jmp
xlat
push
jbe
sub
mov
and
and
xor
int3
fild
int3
xchg
ins
mov
or
xchg
add
sbb
lahf
ror
outs
out
jmp
pop
in
sub
out
aaa
addr16
iret
and
es
mov
fld
outs
rcl
iret
pop
xchg
in
out
mov
dec
inc
(bad)
jle
bound
dec
popa
cwde
ins
sahf
jmp
call
daa
jnp
dec
fimul
sbb
xor
sub
gs
fdivr
mul
mov
cmp
in
xlat
imul
ins
fsubr
imul
lds
cmp
adc
(bad)
jbe
mov
call
sbb
mov
mov
imul
add
jbe
mov
daa
sti
cmp
mov
inc
and
lods
scas
mov
in
aaa
les
mov
lods
jecxz
inc
mov
and
and
stos
jmp
(bad)
lock
call
mov
dec
xchg
inc
dec
jl
dec
jae
dec
cmps
and
loop
out
adc
icebp
inc
ds
scas
jmp
cli
out
jne
mov
push
or
inc
mov
stos
ror
test
inc
pop
je
jno
inc
nop
int3
fsubr
lods
and
shr
cdq
loope
sar
xlat
out
int
in
xor
adc
idiv
shl
dec
or
iret
jmp
jcxz
jmp
in
and
clc
add
repz
in
mov
inc
xor
or
mov
outs
add
jmp
loop
clc
inc
xchg
pushf
push
movs
jae
outs
lods
fcmovnbe
ins
push
aas
jb
dec
ret
(bad)
push
mov
iret
jae
mov
inc
call
movs
and
rcl
xchg
retf
pop
ja
loop
inc
lea
and
outs
dec
push
pop
outs
ds
sbb
sub
jo
cmps
test
push
lds
lahf
je
lahf
cwde
out
and
out
ins
retf
addr16
mov
imul
xchg
(bad)
xchg
push
and
dec
mov
xchg
inc
aad
or
cmp
xchg
inc
xchg
shl
cld
loopne
inc
scas
push
(bad)
mov
nop
push
lea
ret
jno
addr16
xchg
pusha
jmp
dec
ins
js
jle
sbb
inc
inc
jecxz
sbb
out
xchg
and
(bad)
out
push
push
mov
sub
ret
sbb
retf
repnz
mov
fst
les
aaa
xlat
mov
das
mov
inc
cmp
cld
or
ds
and
loop
popa
out
inc
mov
sub
ret
lahf
fmul
outs
inc
push
jb
mov
retf
push
les
fbld
outs
(bad)
and
in
aad
jge
push
mov
mov
push
push
loope
jmp
(bad)
loop
mov
sbb
fbld
out
movsx
in
xchg
and
test
adc
xlat
cmp
adc
push
cld
mov
jno
dec
stos
mov
fbld
lock
pop
iret
test
bound
das
inc
cmp
cmp
mov
jmp
neg
dec
and
mov
add
cmp
or
(bad)
es
jb
pusha
test
faddp
fst
popa
inc
(bad)
adc
push
(bad)
mov
mov
jb
in
cli
fsubr
aam
loopne
loop
sbb
arpl
repnz
inc
jo
mov
jae
test
cmps
aam
push
lods
mov
xchg
and
xor
aaa
mov
push
mov
fild
bound
lds
inc
and
test
mov
sbb
mov
sbb
adc
sub
int3
addr16
fcom
dec
mov
call
adc
xor
in
daa
cmp
mov
and
out
and
les
sbb
cwde
daa
cmc
xchg
out
push
jae
fld
add
mov
and
daa
mov
into
adc
dec
jl
or
dec
xchg
cld
mov
jmp
mov
loope
in
outs
bound
and
cli
push
test
data16
jecxz
add
xor
mov
xor
inc
sbb
and
xchg
mov
(bad)
add
jno
lock
mov
js
pop
aaa
int3
sub
outs
pop
mov
ins
ins
shl
dec
test
call
bnd
fwait
mov
jl
mov
jns
jge
sbb
lods
xor
stos
mov
sbb
add
adc
leave
pop
jne
pushf
inc
in
jne
adc
pusha
jmp
loope
jle
out
jo
push
stos
sar
fwait
pop
mov
or
popf
cld
add
fcom
cs
scas
lds
outs
xor
fdivr
cmps
dec
and
out
cmps
mov
adc
sub
jp
sbb
cmp
leave
and
fwait
pop
cmp
pop
cli
push
das
xor
jne
fwait
pop
and
repz
xor
adc
mov
mov
jae
out
pop
dec
mov
cmps
pusha
mov
xor
scas
cmp
xchg
sub
mov
popf
jno
sbb
sub
xchg
test
in
daa
cmc
nop
mov
test
stos
call
dec
sub
dec
pop
sub
inc
push
and
es
or
xchg
fiadd
mul
xor
jmp
popf
test
das
out
mov
sub
cmp
(bad)
adc
xchg
sbb
sbb
in
repz
adc
pop
mov
adc
popf
xor
inc
add
jle
ror
dec
mov
fidivr
lds
jle
aad
and
mov
sahf
into
popf
jmp
imul
push
icebp
mov
mov
jmp
dec
mov
scas
loop
lea
call
jp
pop
arpl
cmp
imul
dec
pop
fs
int3
cmp
aam
sbb
mov
fucomi
retf
neg
mov
aaa
into
and
add
fcom
rol
inc
push
call
call
jge
aad
xor
aad
and
xchg
cwde
aad
shl
or
mov
xlat
xor
cmps
pop
cld
cmps
call
sbb
and
push
loope
dec
mov
cmp
mov
fistp
adc
jg
out
imul
out
repnz
sbb
cld
push
xor
inc
data16
dec
dec
mov
mov
mov
mov
(bad)
ds
shl
or
jmp
pop
retf
cmp
mov
fmul
mov
repz
stos
pop
call
movs
in
(bad)
loope
xlat
lea
add
(bad)
fmul
jne
fbstp
mov
and
mov
jne
mov
mov
sub
ret
mov
lods
lds
(bad)
mov
cmps
add
shr
out
and
movs
mov
push
out
fwait
sub
pop
lock
add
inc
call
sub
ret
loope
cmp
dec
xchg
ret
adc
fstp
leave
cmc
push
ret
(bad)
enter
jge
imul
(bad)
and
sub
bound
cmps
mov
(bad)
xlat
sbb
jle
rcl
jp
jbe
outs
mov
or
sub
jp
mov
inc
push
push
sbb
xor
pushf
jbe
lods
loope
xchg
cmc
xor
jno
mov
ins
cmp
xchg
or
fild
fstp
inc
pop
dec
pushf
nop
pop
dec
cmps
and
mov
adc
(bad)
xchg
jne
int
add
inc
jle
mov
dec
mov
add
sub
sahf
cs
movs
cmp
sahf
push
pop
inc
in
xchg
shl
outs
xlat
push
pop
sub
adc
ja
(bad)
mov
jg
jmp
fild
loope
push
es
sbb
mov
lods
mov
sbb
push
loope
add
mov
xchg
pxor
cmps
(bad)
aam
gs
in
inc
jno
mov
push
inc
cmps
pop
mov
scas
sbb
cmp
inc
sub
stos
shr
in
ror
nop
mov
cmc
add
mov
mov
fisttp
adc
push
cmps
adc
lock
inc
sahf
pop
iret
xchg
(bad)
lock
xchg
xchg
pop
xor
cmp
jp
pop
xor
sub
jl
mov
mov
mov
sub
shl
sub
lods
aad
pop
xor
xchg
and
and
loopne
out
adc
pop
pop
xor
mov
jle
push
pusha
sub
xchg
xchg
cld
mov
ins
xor
(bad)
mov
out
repnz
idiv
sahf
in
test
push
mov
jns
inc
inc
loop
adc
xchg
jmp
sub
in
jecxz
dec
call
jp
mov
js
and
inc
and
push
sar
mov
inc
les
outs
inc
cmp
sahf
or
pop
fldenv
movs
dec
xor
inc
adc
(bad)
sub
cld
das
and
mov
dec
xor
addr16
cmp
jo
frstor
icebp
sub
les
xlat
in
fwait
add
jl
add
lods
jle
jno
mov
jg
jmp
xor
ds
xor
rcl
pop
aaa
mov
and
icebp
xlat
sti
fmul
mov
add
icebp
inc
mov
and
(bad)
lock
cli
dec
mov
in
mov
or
inc
mov
adc
sub
ss
ds
(bad)
fsub
push
inc
scas
push
jmp
sub
add
or
push
or
push
repnz
pop
call
(bad)
fisttp
loope
mov
push
lods
callw
sub
jne
push
adc
or
sti
loope
add
adc
xchg
jl
ret
dec
cmps
dec
lock
jmp
stos
xor
jmp
mov
ss
cmp
std
inc
mov
add
mov
push
add
rol
lock
mov
sub
rcl
(bad)
repnz
ins
icebp
inc
lds
push
mov
cmps
idiv
xchg
xor
lar
pop
ror
xchg
lods
js
mov
in
(bad)
imul
xor
call
push
mov
je
fmul
into
mov
inc
nop
mov
and
lds
xor
add
inc
pop
lds
retf
push
popa
out
repz
out
dec
jns
aas
push
les
stos
sub
and
movs
popa
pop
int
inc
fsub
sub
push
lock
cmps
mov
cli
xchg
sahf
adc
aaa
(bad)
pushf
sbb
popf
dec
mov
mov
cmps
or
xor
add
mov
test
les
jnp
xlat
retf
push
jp
movs
sbb
movs
lahf
call
mov
ret
jo
mov
test
dec
xlat
xor
jge
cmp
aaa
or
xchg
mov
(bad)
fst
sub
mov
bound
cmc
xor
pushf
arpl
add
xchg
add
lahf
fisttp
xor
out
and
jecxz
xchg
push
cmp
pop
mov
jmp
push
pop
int3
mov
sbb
cmp
push
jle
cwde
inc
dec
into
dec
jge
and
jns
adc
dec
push
sbb
dec
mov
fucomi
les
fist
shr
addr16
or
clc
and
add
cdq
fnstsw
push
stos
mov
xor
stc
ret
push
test
and
mov
sysexit
mov
int
or
add
fld
pop
cmp
stc
cdq
repz
mov
push
inc
fld
inc
and
lods
out
stos
imul
mov
dec
mov
enter
push
cmp
or
lahf
aad
into
ret
mov
mov
jge
cld
push
fs
jp
push
dec
popa
loopne
mov
and
mov
mov
cld
sub
jns
sbb
mov
push
adc
cld
test
adc
addr16
sub
jmp
pop
jmp
jnp
jmp
cmp
inc
jecxz
sti
push
jb
aas
add
mov
int3
push
fs
push
or
mov
inc
dec
mov
sub
sub
popa
or
je
adc
adc
xchg
jl
cwde
out
fld
aam
(bad)
lock
xchg
lods
int3
pop
sbb
push
jae
mov
push
ins
mov
rcr
js
test
out
mov
xchg
add
mov
adc
ret
fwait
mov
push
clc
push
lods
pop
or
shl
les
dec
push
(bad)
mov
xor
mov
aad
mov
sub
adc
adc
mov
push
pop
sbb
mov
nop
adc
jmp
outs
(bad)
in
fdiv
sub
xchg
pop
adc
pushf
repz
aaa
mov
lods
outs
mov
jl
call
add
push
or
jge
iret
xor
loopne
test
sub
(bad)
mov
jg
sbb
icebp
movs
push
leave
(bad)
int
sub
push
jns
ret
push
movs
gs
inc
push
xchg
cs
pop
cmps
jge
jo
dec
cmps
daa
icebp
test
or
das
shl
and
sbb
arpl
sbb
movs
sbb
cmp
int
int3
stc
shl
jbe
push
push
or
and
sub
xchg
mov
(bad)
inc
repnz
mov
cmp
div
jo
(bad)
jno
inc
out
int
mov
or
pop
mov
pop
cmps
mov
or
sbb
in
stc
mov
lock
repnz
arpl
(bad)
loope
dec
jnp
push
jg
aam
cmp
push
push
sti
xchg
push
rcr
or
jo
mov
pop
cmp
dec
mov
push
addr16
les
movs
or
daa
int3
adc
cmps
mov
dec
stc
fild
and
call
xchg
dec
inc
sbb
sar
cmp
dec
mov
cmps
or
mov
mov
ins
xor
loopne
(bad)
pop
ss
pop
sub
call
add
stc
pop
stc
std
and
sbb
lds
mov
repz
out
or
mov
pop
mov
push
mov
add
and
push
dec
cmp
adc
call
mov
inc
push
jmp
push
sub
leave
hlt
dec
push
mov
pop
das
lahf
pop
xchg
pop
and
ror
data16
sub
pusha
ror
fcomp
mov
pop
mov
leave
imul
pop
cmp
int3
mov
pop
adc
in
sub
div
mov
cdq
pop
push
jmp
hlt
aam
xchg
sub
xchg
dec
fisttp
or
imul
sahf
out
mov
mov
(bad)
cmps
into
cmps
mov
push
cs
pop
add
pop
aam
xor
ins
sub
bound
jo
dec
leave
adc
push
jmp
dec
fdivr
(bad)
xchg
ficomp
add
xchg
retf
mov
sbb
or
mov
jmp
pop
mov
bound
lahf
or
dec
xor
push
pop
dec
xchg
aas
in
aad
nop
fsubr
dec
pop
mov
sub
xor
fwait
adc
dec
or
sbb
adc
mov
or
xchg
lds
push
pop
jmp
test
or
in
mov
sbb
scas
and
or
shl
mov
jbe
fldcw
xlat
lods
push
aaa
push
mov
mov
(bad)
pop
or
xchg
retf
sub
retf
jmp
adc
jne
mov
test
dec
jbe
sahf
dec
push
jle
jo
test
add
sbb
retf
mov
add
movs
or
jl
ret
and
mov
and
sbb
lahf
and
shl
lods
popa
pop
fs
and
jb
mov
mov
xchg
mov
into
pop
xchg
sub
add
mov
test
pop
adc
(bad)
adc
movs
xor
enter
int3
cdq
mov
jmp
jne
pop
adc
cmp
adc
sbb
neg
xchg
dec
retf
sbb
sbb
jp
mov
dec
and
mov
outs
inc
outs
test
jmp
dec
fadd
retf
add
push
sub
cmp
mov
cmp
add
data16
inc
outs
cwde
xchg
mov
lods
push
shr
ss
les
fnstcw
dec
test
mov
fild
dec
ss
or
leave
dec
imul
hlt
in
int
cmp
jmp
mov
xchg
movs
jmp
outs
stos
push
dec
cdq
and
test
jae
xchg
popf
test
int
add
mov
les
mov
lods
sbb
and
ds
sbb
xchg
xchg
scas
or
fcomp
xchg
enter
inc
inc
mov
jno
ins
out
(bad)
cs
push
int3
sbb
aas
stos
in
sbb
outs
or
or
ds
sub
(bad)
or
add
mov
imul
in
les
cli
in
cmp
movs
pop
cmp
fwait
test
repz
cmps
cs
mov
fcmovbe
cmp
adc
retf
mov
bnd
dec
nop
mov
mov
xchg
jge
sbb
adc
add
call
into
add
dec
inc
jns
enter
nop
xchg
mov
and
sahf
xor
pop
repz
retf
mov
in
stos
lods
test
dec
mov
(bad)
cmp
sbb
add
sub
in
inc
pop
sub
and
test
pop
jmp
push
mov
lea
cmps
or
das
test
add
movs
inc
lahf
pop
movs
(bad)
dec
jle
mov
or
rol
and
inc
movs
jecxz
sub
test
lods
les
cmc
or
jmp
jb
in
(bad)
mov
or
and
fs
mov
rcl
or
push
xchg
and
sbb
push
mov
ffreep
icebp
jno
jae
push
or
mov
jnp
fs
jl
ror
add
sti
xchg
sub
test
mov
inc
dec
pushf
jle
call
retf
mov
das
fild
movs
adc
lds
adc
xor
fnstcw
jle
dec
icebp
stos
pop
xlat
mov
lods
aaa
mov
fiadd
adc
stc
int
jmp
sar
mov
push
adc
int
int3
ror
sub
pop
pop
cli
jge
push
push
add
inc
xor
fs
call
sbb
cwde
loop
test
ins
push
jbe
pop
(bad)
cwde
fs
add
or
pop
dec
stos
je
test
sub
mov
sbb
dec
xor
dec
mov
mov
(bad)
cmp
in
aas
idiv
in
jb
stos
pusha
cwde
outs
xor
adc
add
mov
scas
push
jnp
jmp
push
fmul
repz
ret
and
xor
inc
jmp
push
or
push
mov
cmps
icebp
sbb
xchg
ss
ds
xchg
push
imul
out
stc
dec
inc
add
(bad)
bsr
arpl
movs
sbb
hlt
retf
dec
push
xchg
inc
push
xor
aam
mov
popf
or
cmp
push
movs
cmp
xor
push
cld
pop
stc
sahf
pop
mov
jmp
or
aaa
dec
adc
out
inc
inc
lods
rcl
stos
pop
sub
sub
and
lods
push
sti
jnp
or
add
(bad)
(bad)
cmps
mov
cli
ins
push
pop
add
adc
dec
pop
cmp
add
jp
pop
and
xchg
rcr
scas
or
dec
jl
lock
mov
lahf
add
lahf
punpckhwd
jnp
mov
scas
loope
ja
jl
fldenv
dec
pop
jmp
mov
jge
arpl
jno
dec
mov
and
sbb
test
retf
inc
movs
rcr
test
out
(bad)
cmc
cmp
dec
mov
inc
jae
dec
aam
and
pop
rcr
jno
jnp
cmc
sub
dec
jo
mov
or
es
or
mov
cli
dec
jl
sub
aad
mov
cs
loop
mov
push
retf
push
retf
sbb
jb
in
mov
cli
into
add
xchg
enter
inc
repz
add
or
shl
fwait
cld
fsubr
pushf
loope
mov
add
xchg
mov
out
sbb
cli
add
push
inc
arpl
in
cmps
nop
ret
dec
sub
(bad)
fcomp
popf
mov
dec
pop
fcmovne
dec
popf
in
ret
cmc
icebp
add
shl
fs
int3
mov
push
inc
scas
mov
popf
push
push
test
and
enter
dec
jmp
or
movs
aam
mov
(bad)
sbb
aad
pop
inc
dec
in
and
movs
rol
and
mov
push
sbb
cmps
mov
aad
daa
dec
push
sbb
retf
xor
popa
add
dec
mov
cmp
mov
dec
cs
(bad)
call
push
inc
aam
daa
fs
aaa
mov
aam
jle
cmovp
outs
inc
mov
fnsave
xor
pop
iret
mov
sub
xor
int
cmp
outs
loope
xchg
and
jl
sbb
pop
inc
fild
sti
mov
fsubr
call
mov
in
inc
mov
or
out
pop
psubusw
imul
push
(bad)
and
and
mov
cmps
addr16
outs
push
inc
xor
ins
push
mov
jno
or
gs
sub
pop
mov
mov
adc
(bad)
js
inc
xor
jne
iret
or
test
sub
mov
dec
ret
push
or
pop
add
test
sbb
shl
mov
shl
inc
mov
ret
call
pop
arpl
cs
sbb
cmp
pushf
pushf
sbb
fwait
mov
int3
lea
scas
out
pop
out
jo
sub
ds
xor
inc
cmp
es
xor
inc
aad
xchg
add
add
mov
jo
shr
addr16
xchg
inc
mov
jmp
xchg
in
neg
adc
movs
add
jbe
gs
bnd
out
add
dec
(bad)
in
cmp
inc
retf
sub
sar
jb
pop
sahf
inc
jle
dec
movs
or
in
aaa
or
pop
mov
mov
dec
adc
add
jecxz
sbb
aaa
dec
pop
test
neg
fxch
pop
fistp
sbb
mov
mov
loope
mov
add
es
mov
pop
sbb
shl
pop
leave
cmp
add
xor
stos
mov
iret
push
add
fldenv
add
xchg
xchg
jne
xchg
repz
sub
out
jge
fidivr
fdivr
xchg
aad
push
mov
fdivp
adc
adc
add
jecxz
bound
inc
sbb
call
gs
or
(bad)
sbb
mov
or
in
mov
sbb
pop
cmc
push
and
cli
xor
push
aam
xor
outs
fmul
xor
jp
mov
jle
or
sbb
movs
test
lock
cmp
cld
jg
pushf
mov
je
daa
cmp
stos
mov
and
cmp
out
int3
jl
mov
xor
enter
lds
call
icebp
js
out
int3
mov
mov
sub
shl
repz
jp
sbb
sbb
jb
ins
ret
aad
movs
xchg
inc
pop
and
lods
xor
pop
ror
outs
pop
test
icebp
mov
add
out
add
cli
cmp
cs
mov
pop
or
mov
sub
ret
add
test
cmp
add
adc
sub
fs
mov
mov
sbb
add
sbb
sbb
test
div
loope
xchg
xchg
stos
jmp
daa
fwait
repz
xchg
sub
pop
in
adc
call
arpl
daa
and
shl
pusha
rol
mov
xchg
mov
mov
pop
out
cmp
loop
dec
clc
aas
mov
sar
mov
int3
push
cli
sub
mov
add
fs
mov
ins
cld
mov
repnz
mov
xchg
fidivr
jmp
and
cmp
lock
cld
push
lods
repnz
or
add
sbb
(bad)
loopne
call
pop
pushf
xor
mov
sbb
shl
dec
ins
jg
aam
gs
jb
xlat
jns
or
fst
fisttp
clc
daa
mov
outs
adc
(bad)
mov
jecxz
out
jp
int
pop
lock
sub
ret
push
sbb
jmp
mov
mov
mov
neg
xor
cmp
pop
and
or
lods
or
outs
ror
retf
jne
inc
and
sub
add
lods
xchg
xor
mov
xchg
jecxz
clc
sub
lods
push
mov
jmp
and
sbb
daa
dec
jo
dec
mov
stc
in
or
mov
push
out
mov
jmp
pop
mov
fisttp
cmp
and
call
add
or
xchg
add
dec
mov
ss
lahf
add
mov
cmp
xchg
fst
push
xchg
xor
mov
(bad)
mov
dec
xchg
cmp
add
out
push
adc
xchg
aaa
cs
jp
cmc
xor
movhps
int
jl
jne
call
das
sub
clc
int
dec
cwde
stos
mov
sbb
mov
fist
jb
addr16
loop
xchg
pusha
mov
jmp
inc
pop
outs
cdq
loope
stos
adc
bnd
cmp
jnp
jp
ror
xchg
pop
mov
loop
and
scas
imul
pop
mov
and
mov
cmp
fsubr
dec
pop
add
pusha
fild
push
popf
sub
adc
jle
jne
jo
push
lock
jle
mov
lods
iret
in
shl
retf
push
jmp
inc
shl
cmp
imul
dec
repz
xor
jmp
inc
add
xlat
fistp
jmp
adc
jecxz
stos
or
shl
or
pop
aad
xchg
or
sub
and
push
jbe
mov
jne
out
cdq
pop
inc
xchg
jle
inc
addr16
std
xlat
mov
sbb
fwait
out
ret
dec
pop
pop
pop
pop
xor
in
sbb
mov
rol
js
ja
and
mov
mov
out
fbld
sbb
push
cmp
aas
push
mov
cmp
test
retf
mov
in
cmp
(bad)
in
fwait
inc
inc
sub
push
ds
lods
mov
sar
nop
jg
pop
stc
pop
jmp
fidiv
loope
mov
xlat
xor
dec
jge
xchg
sub
hlt
and
scas
push
push
mov
jae
sub
stc
je
loop
fild
mov
push
in
repnz
or
and
jb
mov
sub
xlat
xchg
cmp
jmp
movs
add
and
sbb
mov
jbe
adc
in
push
add
stos
sbb
imul
imul
jae
cmp
loope
call
dec
repnz
inc
or
push
fnsave
scas
div
adc
mov
or
xchg
and
cmp
in
in
jo
test
sbb
push
ficomp
rol
add
cdq
out
mov
cmps
(bad)
sbb
cmc
rol
mov
xchg
fucomi
imul
push
data16
daa
mov
pop
sbb
lea
or
xchg
sbb
nop
add
(bad)
movs
mov
mov
inc
adc
fild
sbb
and
je
jmp
outs
int3
xchg
push
pop
dec
scas
mul
xor
popf
cwde
test
mov
neg
mov
ret
outs
inc
fist
cmc
repnz
mov
scas
in
stos
imul
and
cli
std
sbb
or
movntq
xlat
mov
jo
aas
out
sub
pop
sbb
shl
push
popa
mov
mov
retf
ins
sbb
dec
out
cmps
push
imul
ds
cmps
cdq
js
stc
xchg
add
xchg
push
(bad)
sub
mov
and
loop
repz
jge
rcl
call
push
scas
dec
les
cli
sub
in
inc
push
pop
aad
cmovp
cdq
fnstcw
adc
mul
das
sub
or
arpl
repnz
mov
mov
push
out
sbb
arpl
mov
fldcw
data16
repz
lods
or
dec
and
lea
jo
aas
xchg
shl
sbb
enter
dec
dec
popf
or
jle
mov
popa
inc
mov
xchg
out
and
and
adc
sti
lock
pop
out
fld
shl
int
(bad)
lock
dec
cmp
rcl
cmps
int
fs
sahf
dec
out
gs
dec
or
sub
out
pop
outs
gs
mov
adc
inc
leave
and
mov
and
xchg
aaa
xchg
scas
add
and
push
adc
sub
xchg
ins
cs
push
(bad)
std
fmulp
test
mov
fsubr
fs
adc
pop
movs
cmc
out
mov
mov
pop
or
pop
not
and
cs
mov
push
inc
push
inc
jle
fistp
repz
sbb
fsub
adc
js
jp
xor
fxch
adc
and
pop
mov
or
jno
pop
aam
add
pop
adc
xchg
xchg
push
mov
push
(bad)
pop
dec
ins
icebp
inc
xchg
out
fiadd
cld
into
dec
imul
cwde
cld
xlat
out
inc
and
aam
lods
pop
pop
nop
popa
icebp
test
inc
add
pop
mov
cli
ins
ret
inc
jne
repnz
ror
inc
mov
outs
pop
cmc
inc
lock
into
mov
ror
mov
mov
push
mov
popa
bound
inc
add
mov
int
leave
sub
repz
push
pop
scas
out
pop
lahf
fisub
and
fdiv
js
pop
adc
mov
ret
loopne
rcr
push
pop
gs
pop
push
das
cmp
jecxz
or
stos
push
pop
adc
inc
(bad)
pop
(bad)
in
adc
cmps
lods
scas
test
xchg
mov
pop
(bad)
les
xchg
mov
sahf
repz
jecxz
call
or
jl
aaa
test
add
popa
sub
push
xchg
int
dec
cmp
xor
(bad)
(bad)
pop
push
rcr
inc
dec
jmp
int3
push
jo
es
outs
dec
stos
into
clc
rol
imul
out
arpl
int3
mov
(bad)
mov
data16
push
mov
sar
jno
cli
ins
fimul
gs
pop
pop
pusha
scas
jmp
pop
int
pop
sub
sub
retf
lods
inc
enter
push
int
bound
and
and
dec
aas
idiv
or
sub
out
imul
(bad)
test
test
sti
mov
outs
sti
fwait
hlt
aam
cld
dec
sbb
mov
pop
jl
cwde
mov
mov
cmp
ja
pop
mov
push
xchg
fist
div
popf
push
mov
or
sar
sbb
sub
adc
je
pop
sub
mov
into
xor
sub
jno
(bad)
sti
or
pop
mov
out
cmp
add
push
cwde
push
sbb
cmps
dec
xchg
inc
jecxz
xor
rcl
jmp
sub
mov
or
pop
push
(bad)
or
xlat
push
(bad)
out
fistp
push
call
shl
add
and
dec
popa
ror
mov
(bad)
aam
mov
scas
sbb
cmp
adc
and
ins
mov
mov
ins
test
cmp
gs
add
not
int3
fld
(bad)
gs
(bad)
sbb
jg
xchg
fadd
out
clc
mov
add
sahf
jnp
inc
cmp
test
hlt
pusha
inc
push
repnz
inc
cdq
ret
into
aam
pop
(bad)
pop
sbb
scas
cwde
mov
pop
lock
xchg
cmp
dec
push
icebp
dec
add
or
(bad)
jmp
jmp
xchg
xor
inc
out
push
ror
sbb
cdq
mov
push
(bad)
(bad)
iret
sbb
pusha
cmp
ss
(bad)
cwde
xor
mov
in
fdivr
sbb
jl
mov
and
cmp
add
and
test
pusha
call
dec
outs
add
das
jo
mov
out
xchg
or
test
sbb
push
sub
mov
sub
pop
xlat
loop
lahf
mov
fdivr
bound
outs
jo
mov
pop
lock
inc
pop
xlat
add
popf
jo
dec
mov
movs
call
mov
or
cmp
cmp
add
(bad)
popa
mov
mov
mov
(bad)
dec
imul
mov
mov
sub
pop
xchg
hlt
pop
adc
push
dec
mov
mov
dec
mov
inc
test
or
push
sbb
imul
add
mov
xchg
lods
into
sub
add
stos
out
dec
std
pop
push
sub
mov
scas
daa
xor
jb
mov
xchg
pushf
in
cmp
enter
sar
push
cmp
xor
daa
cwde
js
adc
stc
in
lahf
dec
and
xchg
push
mov
sbb
stc
mov
push
cmps
push
call
and
stos
mov
dec
jbe
adc
(bad)
adc
sbb
or
inc
jmp
(bad)
fdivr
push
cmp
out
xor
in
jl
dec
popf
shr
stos
(bad)
dec
loope
inc
call
mov
popa
push
dec
dec
xlat
test
push
add
inc
jle
cmp
mov
mov
dec
and
ror
dec
outs
js
fsub
dec
add
xchg
jne
in
push
and
xchg
out
pop
aas
and
jae
hlt
psrad
push
push
adc
fs
and
jl
fsub
jnp
jmp
jno
std
mov
sbb
mov
lock
pop
push
stos
cmp
mov
cmps
dec
lds
or
push
push
inc
jnp
cmp
ds
scas
ror
pop
aas
iret
ins
sar
mov
or
adc
movs
jge
seto
add
jb
sub
rcr
cmp
in
sub
mov
mov
sub
xchg
and
xchg
or
icebp
and
mov
push
jmp
mov
dec
push
(bad)
in
je
mov
into
iret
pusha
xchg
jnp
sbb
(bad)
outs
mov
push
xchg
pop
out
mov
jb
inc
fild
cwde
add
dec
pop
dec
mov
call
pusha
adc
xchg
mov
(bad)
cmp
push
cmp
stos
pop
les
fistp
sub
xor
push
jmp
inc
ret
pop
add
push
(bad)
call
ss
test
pushf
movs
sbb
adc
sbb
push
and
and
jae
jnp
out
fimul
icebp
sub
mov
and
aaa
out
cmp
adc
stos
push
das
cmp
xor
cmp
add
sub
inc
cld
bound
pop
fs
je
dec
cld
cmp
adc
shr
cmp
inc
outs
cmps
mov
mov
mov
push
call
add
jo
and
mov
add
xor
mov
push
xchg
stos
scas
lock
sbb
mov
dec
xor
ret
mov
lods
gs
pushf
cmps
bound
mov
idiv
add
pop
pop
ja
pop
add
push
jns
ret
sub
pop
jle
adc
out
and
lods
outs
pop
push
(bad)
(bad)
dec
mov
ds
fisubr
and
push
cmp
fisubr
test
pop
movs
jns
jecxz
(bad)
sti
out
cmp
out
rol
rol
or
xchg
jl
add
call
adc
dec
sbb
cmc
outs
(bad)
sub
in
jmp
push
mov
mov
mov
push
aad
clc
inc
test
mov
push
mov
add
popa
jl
pushf
mov
int
push
dec
jle
sbb
xor
popa
test
out
dec
out
mov
int3
iret
ret
mov
push
jge
xchg
(bad)
call
gs
nop
adc
mov
pop
xor
cmps
pop
mov
inc
add
fadd
sbb
pop
add
call
mov
(bad)
cmp
mov
sbb
and
test
sub
jmp
ja
icebp
arpl
sbb
scas
cmps
repnz
stos
cmp
mov
daa
sub
cmps
ffree
xor
fwait
xchg
jb
pusha
enter
add
in
fstp
arpl
jbe
xor
xchg
in
mov
mov
rcl
xor
jnp
or
ficomp
out
mov
cdq
aam
fisttp
sbb
std
dec
cmp
adc
push
lea
cli
sbb
fst
fwait
popf
inc
ss
cmp
shl
cmps
pop
popa
and
push
mov
in
rcl
xor
rcl
mov
mov
test
(bad)
ins
xor
and
jmp
mov
sti
push
pusha
repnz
mov
mov
fs
lahf
sbb
mov
cmp
outs
push
dec
shl
inc
xor
ja
dec
lahf
mov
cmps
xor
add
pusha
cmp
arpl
mov
xchg
xor
test
mov
inc
popa
push
lock
das
adc
xor
sbb
pushf
add
and
jb
stos
xchg
mov
mov
retf
sub
xchg
in
add
jno
cwde
adc
div
adc
mov
and
push
pop
jle
ins
sub
movs
or
repz
jmp
test
adc
mov
sbb
sub
xor
sbb
xor
scas
dec
lock
xchg
mov
in
xor
adc
push
in
loop
add
sbb
out
adc
je
xchg
psrld
in
jbe
(bad)
jo
push
dec
push
(bad)
(bad)
adc
mov
mov
rcr
jb
dec
call
mov
inc
sahf
call
test
or
xor
push
into
sbb
test
push
out
xor
push
pop
stos
arpl
data16
cmp
aam
cmp
cmp
xchg
loop
into
dec
mov
mov
outs
xor
scas
or
inc
shr
lods
daa
push
jecxz
cld
and
sahf
out
sbb
adc
std
nop
sbb
pop
push
dec
shl
add
dec
push
inc
jp
dec
outs
pop
mov
addr16
adc
push
cmp
add
jae
adc
fsub
push
xchg
stos
cwde
lods
xchg
(bad)
retf
xor
std
jp
imul
adc
mov
mov
lods
sub
aas
xchg
xchg
test
out
xor
int
and
and
retf
add
lods
fidivr
mov
mov
mov
xor
mov
xchg
mov
xor
inc
adc
dec
push
mov
jl
pop
push
mov
xchg
mov
xchg
mov
out
imul
inc
and
js
sub
jne
ror
mov
sbb
fcmovnbe
fist
cld
fmul
mov
je
rcl
sub
mov
push
adc
loopne
add
mov
jo
and
ins
xlat
cmp
jl
jg
les
or
mov
idiv
jge
mov
test
dec
(bad)
lock
test
jp
ror
loop
ret
or
push
test
ins
jmp
ret
shr
cli
push
in
ss
icebp
call
push
mov
mov
pop
icebp
in
add
sub
jmp
mov
jmp
mov
push
ins
dec
fisttp
xor
aas
in
xor
pop
cmc
test
jle
lock
dec
imul
sub
xchg
sub
adc
sbb
push
rcl
sub
jmp
mov
fmul
add
enter
pop
jg
mov
pop
mov
inc
scas
iret
jecxz
mov
push
sub
shl
js
xchg
mov
pop
jno
mov
xor
fs
sbb
test
add
sbb
cmps
adc
fstp
mov
mov
ds
pop
adc
sub
push
imul
out
pop
imul
aam
stc
mov
mov
test
fisttp
xchg
sub
xor
clc
and
scas
ds
js
inc
loopne
or
es
in
sub
push
shl
adc
hlt
push
pop
sub
mov
push
stos
add
push
inc
test
adc
daa
stc
rol
fwait
fwait
es
pop
pop
push
repz
arpl
(bad)
jge
jnp
xchg
sbb
movs
xor
adc
and
jecxz
inc
and
(bad)
xchg
add
jl
scas
aas
mov
mov
pushf
js
cwde
nop
clc
and
or
xchg
pop
loopne
gs
sbb
jmp
daa
pop
stc
inc
or
adc
xchg
jmp
mov
call
jmp
inc
inc
fdivr
test
mov
cmp
jns
sub
sti
stos
mov
jg
inc
iret
or
leave
push
retf
(bad)
outs
mov
ins
xchg
int3
mov
mov
jb
mov
rcl
cs
push
jnp
aas
sbb
in
inc
xor
pop
dec
xor
(bad)
mov
mov
lods
stc
es
icebp
in
ss
push
inc
loop
(bad)
aad
pop
sti
pusha
dec
mov
sar
cmps
mov
and
movs
mov
inc
cdq
ins
xchg
enter
adc
push
jecxz
or
mov
dec
sub
inc
pop
fxch
xchg
leave
or
(bad)
mov
lock
xor
loop
xlat
loopne
or
pop
or
out
das
mov
xor
mov
push
xchg
mov
jp
imul
adc
jb
inc
xlat
fs
inc
(bad)
push
int3
jmp
into
mov
push
sbb
dec
inc
mov
sub
add
fldenv
leave
jp
mov
add
stos
clc
ss
out
retf
cwde
outs
xchg
adc
scas
dec
jb
les
mov
enter
pop
push
jl
clc
jge
push
stc
sbb
cld
out
or
call
out
mov
enter
ja
cmp
imul
pop
loopne
fimul
fcom
or
xchg
pusha
retf
push
ins
jno
mov
fld
std
pop
cdq
pop
or
test
cmp
adc
xchg
and
arpl
dec
mov
and
movs
pop
fucom
cmc
push
pop
retf
in
xchg
call
and
mov
jns
les
mov
push
js
mov
mov
pop
aas
cmp
movs
sbb
shl
pop
sub
fisubr
xchg
fisub
pop
outs
inc
cmp
inc
into
jl
push
sbb
mov
test
jp
xchg
out
cmp
jne
sub
cmp
leave
add
inc
dec
or
into
call
pop
jge
stos
push
stc
fiadd
xlat
xor
or
in
ficom
inc
mov
or
mov
bound
data16
clc
aaa
stos
push
adc
mov
out
xor
leave
mov
lock
sub
xchg
xor
lds
arpl
dec
or
xchg
xchg
outs
fistp
sbb
fstp
sub
push
cwde
jle
nop
jle
jle
cli
cmps
jno
mov
xchg
fcomp
xchg
push
jae
add
pop
add
popa
cmps
loope
das
js
jge
shld
sub
les
mov
out
and
rcr
xchg
add
inc
test
or
(bad)
loope
fstp
add
xor
cmp
sbb
mov
jmp
mov
aad
leave
repnz
mov
xor
xor
loop
sub
cmp
inc
jb
jnp
popa
push
js
dec
inc
gs
mov
push
out
(bad)
in
iret
(bad)
mov
ret
retf
adc
movs
inc
mov
int3
sbb
or
pop
mov
aad
push
mov
stc
and
mov
xor
mov
push
add
or
ret
or
mov
add
icebp
jnp
(bad)
push
push
(bad)
sbb
xchg
int3
out
imul
dec
(bad)
loop
repnz
add
pop
push
inc
or
cli
push
cmp
push
mov
fsub
mov
xchg
rol
jg
leave
aad
je
ins
mov
add
add
repz
sti
call
ds
das
pop
cmp
pop
jae
std
pop
(bad)
mov
out
push
adc
jle
repnz
cmp
repnz
adc
hlt
mov
cdq
mov
shl
ret
mov
(bad)
jecxz
push
mov
(bad)
in
repz
fsubrp
into
jg
sub
hlt
inc
int3
xor
pop
pop
add
cmp
adc
dec
ins
cmc
add
mov
shl
lea
fisubr
mov
jp
imul
mov
cld
mov
loope
dec
imul
and
pop
pusha
mov
jl
cmp
or
sbb
pop
mov
sub
jne
call
retf
mov
sbb
fnstenv
(bad)
pop
rcr
cmc
push
(bad)
sub
mov
and
aam
jp
push
loopne
xchg
add
in
lods
jno
out
jno
cld
fs
cmps
lds
adc
cmp
pop
loope
ja
xor
mov
in
add
pushf
push
pop
mov
nop
cdq
pop
movs
fcomp
push
or
cmc
je
add
dec
cmp
xchg
ds
in
pop
in
pop
cmp
inc
aam
mov
in
out
call
cmc
out
mov
out
imul
push
add
inc
xchg
dec
stos
inc
pop
test
push
and
mov
jl
push
nop
je
cmc
das
sub
in
push
aas
pop
dec
mov
repnz
imul
out
cmp
sub
push
loop
xchg
mov
sbb
repnz
jle
(bad)
stos
repnz
jle
clc
imul
mov
mov
mov
scas
adc
into
sbb
jne
or
ins
jle
push
xchg
mov
pushf
in
xchg
adc
aam
jno
inc
ror
popf
adc
pop
jb
xor
std
and
outs
(bad)
and
ja
add
mov
dec
mov
xchg
rcl
icebp
(bad)
test
leave
fcom
ss
push
fldcw
rcl
call
(bad)
push
imul
loope
xlat
add
ins
add
jbe
push
sbb
inc
std
std
xor
jnp
cmp
cmp
rol
jmp
aaa
xchg
fstp
dec
retf
add
fsub
xchg
aaa
loopne
add
cld
mov
xchg
lds
push
adc
mov
cmp
mov
call
jmp
fldcw
fistp
test
shl
and
jg
rcr
lock
jmp
(bad)
shr
out
xchg
lea
add
xchg
pop
inc
cli
and
mov
in
pushf
out
mov
aad
cld
xor
pop
jno
test
je
push
xor
push
ins
mov
retf
out
ret
adc
aam
jo
sbb
lahf
sub
ror
xor
mov
or
push
retf
xor
push
pop
ja
xchg
ret
cmc
cld
imul
scas
rcr
test
xchg
repnz
aas
adc
mov
xchg
add
in
rol
push
sbb
fstp
dec
xchg
jg
in
neg
xor
mov
xchg
je
ret
mov
pop
push
push
retf
cmps
(bad)
or
mov
adc
addr16
adc
in
sub
sar
sub
jp
retf
xor
or
pop
outs
(bad)
pushf
test
adc
xchg
call
mov
imul
pusha
pop
aam
aam
lds
inc
sbb
mov
call
mov
sahf
jmp
and
stos
scas
xchg
jg
fs
mov
push
jg
repnz
inc
sbb
nop
add
sub
xlat
test
call
adc
clc
dec
sbb
movs
xor
pop
mov
dec
shl
adc
mov
imul
and
(bad)
aas
dec
mov
inc
jb
loope
pop
cmp
cmps
sub
in
ins
add
test
retf
xchg
cwde
(bad)
pop
test
xchg
push
jns
ins
xor
cli
ss
lock
cmp
loope
jp
in
cmp
in
imul
and
mov
inc
sbb
mov
sub
xchg
out
inc
and
(bad)
in
ret
sub
(bad)
adc
push
jg
int
fs
xchg
jae
xor
neg
mov
or
jg
int3
xchg
(bad)
jl
inc
fistp
cs
pushf
xor
ret
push
test
pop
and
xchg
cmps
mov
ret
sub
cmp
outs
jb
jbe
outs
outs
lods
pop
or
jne
mov
xchg
inc
xchg
in
call
test
pop
xchg
xchg
sub
pushf
adc
scas
xchg
mov
push
lea
data16
jne
push
jb
xor
idiv
scas
dec
inc
aam
stos
add
arpl
nop
in
repz
inc
mov
ja
sub
mov
mov
mov
xor
jnp
fdiv
pop
adc
ja
mov
icebp
stos
adc
mov
cmp
ss
xchg
sub
sub
loopne
mov
mov
outs
xchg
outs
aaa
fdivr
mov
push
or
popf
push
push
mov
jbe
sbb
pop
or
xchg
mov
inc
lods
push
xor
das
int3
nop
dec
cmps
fild
sbb
sbb
or
inc
pop
int
pop
mov
fisub
clc
inc
dec
sbb
jne
mov
inc
xor
lods
push
xchg
rol
inc
(bad)
jns
mov
mov
pushf
mov
loopne
push
cmp
cmp
push
sub
sbb
jp
push
sbb
add
xchg
cmp
pop
dec
sub
data16
fsubp
or
icebp
xor
fisub
aam
jno
pop
shr
(bad)
jbe
ja
push
inc
je
int3
xchg
jb
fstp
push
jp
mov
mov
xor
call
ficomp
mov
dec
or
adc
adc
mov
idiv
xor
dec
leave
aam
pop
mov
add
(bad)
lods
sub
test
mov
aad
lahf
fnstcw
sub
call
sbb
loop
and
add
outs
sbb
cmp
inc
xchg
push
repz
ja
sub
cmp
mov
push
cmp
xchg
in
es
jmp
pop
fwait
adc
jo
vmovaps
sub
pop
out
inc
and
lahf
adc
xor
out
xchg
mov
xor
pushf
mov
dec
adc
xchg
leave
cmp
popf
and
sahf
jmp
inc
cmp
dec
std
(bad)
cli
jmp
push
icebp
lea
clc
stos
or
mov
pop
fistp
sbb
ret
mov
mov
fisub
add
mov
movs
movs
pop
mov
test
inc
in
pusha
xchg
retf
cs
cmp
xor
rcl
pop
cwde
loope
(bad)
bound
in
and
cmp
js
ret
push
dec
add
jnp
(bad)
nop
push
or
add
mov
fisubr
add
cmp
push
sbb
pop
jb
sub
retf
lods
xchg
push
push
sbb
retf
add
cmp
mov
rol
int
add
test
mov
push
fs
push
cdq
jns
or
and
clc
movs
inc
jmp
inc
mov
in
or
or
push
out
iret
arpl
outs
test
push
idiv
add
imul
xor
push
out
jle
pop
dec
dec
pusha
and
sub
in
call
es
repnz
bound
(bad)
cmp
(bad)
pop
lahf
fnsave
sub
push
xor
inc
jge
test
sbb
dec
test
adc
mov
(bad)
push
ins
mov
jmp
fcom
ja
jp
pop
push
dec
push
aam
adc
push
push
and
cli
jecxz
cdq
das
fwait
dec
mov
cwde
(bad)
loope
int3
adc
daa
shr
in
test
retf
xor
add
xchg
aam
cwde
pop
int3
std
daa
lahf
fdivrp
mov
inc
push
into
jne
sahf
sbb
clc
add
xor
adc
dec
mov
test
(bad)
lea
jbe
jmp
int
sbb
je
test
mov
rol
jae
dec
or
imul
mov
lods
(bad)
dec
sbb
sbb
pop
xor
sub
jno
adc
mov
or
ja
ss
or
hlt
push
adc
int
lahf
sub
push
jns
add
mov
stos
add
push
adc
xchg
inc
dec
(bad)
sbb
(bad)
and
fwait
mov
push
xor
imul
push
ficomp
movs
cli
dec
sahf
outs
das
jno
je
lock
(bad)
popf
inc
dec
fadd
ins
aaa
lods
xor
inc
inc
(bad)
iret
sub
add
pop
jmp
sub
ss
rol
lea
sbb
push
or
sub
bnd
retf
push
rcr
and
or
fmul
bound
jle
sbb
fistp
addr16
mov
frstor
sahf
mov
cmp
icebp
and
cmp
mov
pop
dec
xor
ins
jae
pop
outs
pop
fld
mov
xor
fwait
add
jg
lods
mov
jp
xor
jg
jbe
add
pop
arpl
inc
dec
out
and
jne
cld
fs
sbb
fisub
(bad)
mov
ds
pop
adc
cli
mov
dec
mov
xor
int3
and
add
sub
and
outs
sub
pushf
pop
jb
sbb
add
pop
or
xor
inc
push
adc
jmp
pop
xor
mov
jo
psubusw
xchg
adc
sub
push
xchg
pop
int3
xchg
inc
jmp
aas
fld
xchg
inc
lds
jge
xchg
dec
test
mov
cmp
xor
jp
or
dec
ds
cmc
int3
cs
iret
imul
(bad)
lahf
cwde
xor
les
xchg
or
les
jp
pop
or
xor
inc
xlat
fistp
imul
gs
cs
sti
shufps
ret
retf
push
popf
jno
xor
push
scas
push
and
test
pop
movs
sti
into
(bad)
cmc
les
adc
jno
outs
test
in
ins
pop
cld
rcr
adc
or
jbe
loope
cwde
mov
sub
popa
in
pop
leave
or
retf
mov
fadd
jae
loopne
mov
inc
push
popf
sub
fdiv
mov
stos
popa
mov
popf
xor
jns
popf
popf
xor
jg
mov
mov
xlat
jae
lahf
int
jg
xor
cmps
pop
or
push
pop
mov
pop
in
(bad)
out
pop
imul
xchg
mov
popa
cmc
cmc
or
addr16
retf
cmp
(bad)
scas
jl
sub
pop
xchg
lock
mov
stos
xchg
int
rcl
push
inc
shl
aas
mov
push
loope
push
movs
test
mov
aam
jnp
mov
cmp
push
mov
sub
sub
(bad)
push
mov
(bad)
add
pop
and
daa
mov
pusha
sbb
pop
xchg
xchg
mov
jbe
sbb
dec
int
jp
std
sbb
push
inc
sbb
cwd
pop
lock
mov
sahf
js
jp
or
aam
mov
sub
mov
adc
ins
adc
push
lock
pop
mov
pushf
sub
sbb
fwait
(bad)
mov
mov
adc
retf
(bad)
js
repnz
outs
or
retf
mov
jecxz
and
cli
xor
gs
xor
jb
push
mov
int
xor
dec
jl
and
cld
stos
pop
inc
lds
inc
std
in
cwde
add
pop
xchg
add
dec
iret
in
jne
mov
xlat
cmps
scas
inc
popa
mov
mov
xor
(bad)
mov
mov
loop
inc
jle
lods
cmc
xor
retf
mov
(bad)
retf
retf
mov
and
push
jmp
pop
movs
push
std
xchg
pushf
leave
ret
rcr
(bad)
and
inc
sbb
adc
jno
ds
les
sub
push
ins
fisttp
mov
cdq
push
mov
arpl
jns
mov
aaa
pop
cmp
pop
and
call
and
jns
mov
cmp
xchg
xchg
xor
adc
sub
xlat
arpl
rcr
outs
movs
int3
cmp
scas
daa
in
mov
in
retf
xchg
mov
movs
enter
std
(bad)
mov
test
sub
xchg
call
fisttp
scas
sbb
in
mov
mov
cmp
popa
add
aad
not
cmc
shr
mov
or
test
repz
cwde
pop
sub
add
out
lahf
jmp
arpl
push
pop
and
sbb
call
add
int
int
jecxz
ds
sti
mov
xor
dec
loope
in
add
inc
jae
cmp
mov
jge
jmp
lahf
fld
jae
es
or
cmc
data16
cld
inc
sub
gs
clc
sbb
clc
push
mov
js
into
inc
pop
add
psubsw
mov
gs
or
push
scas
dec
pop
call
pop
xor
(bad)
push
shl
xor
je
adc
dec
jmp
push
std
cmp
scas
(bad)
xlat
xchg
mov
cdq
mov
and
dec
sub
jmp
mov
mov
sub
rol
mov
imul
and
mov
aas
mov
sahf
sbb
arpl
push
push
push
cmp
push
fwait
sub
aam
scas
pusha
cdq
shr
ins
mov
sub
sbb
cmps
dec
xchg
mov
js
sub
sub
ins
mov
pop
clc
out
pop
cmp
gs
jmp
push
stc
mov
mov
xor
or
lahf
sub
daa
sbb
xchg
mov
xor
sub
jno
mov
pushf
outs
test
add
rol
in
inc
sbb
mov
pop
pop
cs
push
and
pusha
add
mov
jb
cmp
push
les
mov
js
mov
out
in
mov
add
in
mul
dec
cmp
pushf
jle
icebp
mov
xchg
cmp
frndint
mov
or
or
xor
pop
pop
aam
mov
cmp
mov
leave
dec
xchg
cmps
xchg
ja
icebp
leave
push
mov
sbb
(bad)
mov
aaa
aad
push
into
fisubr
jmp
icebp
clc
push
leave
shl
leave
call
in
dec
push
xchg
or
call
or
xor
cmp
add
ins
add
cmps
test
in
ss
mov
and
xor
lods
mov
jne
out
ret
out
jmp
add
xor
loop
cmp
mov
inc
add
sahf
inc
std
sub
xchg
push
test
jns
outs
xchg
stos
push
jb
rcr
jmp
clc
pop
mov
add
jnp
cdq
xchg
sub
inc
or
cmps
hlt
jae
pop
xor
popa
push
xor
cmp
adc
retf
cmp
movs
cmp
mov
hlt
call
xchg
lds
dec
mov
iret
pop
xor
and
sbb
stc
sub
push
lods
inc
mov
cmp
(bad)
cdq
loope
cmps
lock
sub
jb
mov
mov
out
gs
and
sti
ss
movs
lods
add
or
je
hlt
cmp
mov
adc
clc
iret
popa
js
pop
(bad)
cmp
(bad)
sti
in
gs
fsubrp
push
mov
test
mov
test
je
jge
pop
xor
push
sub
or
and
(bad)
stos
jnp
mov
cmp
sbb
add
cs
dec
cmp
and
cmps
retf
sbb
add
gs
sar
xchg
push
(bad)
cs
scas
and
aas
xchg
xchg
mov
adc
ds
or
dec
jmp
and
sub
je
push
gs
adc
int3
outs
mov
cwde
pop
jno
shl
or
bnd
aam
ins
mov
jmp
sub
mov
cmp
cld
sub
(bad)
not
mov
xchg
sar
mov
xchg
mov
push
pop
stc
(bad)
aam
iret
dec
sar
jbe
cmp
scas
cmc
pop
movs
push
rol
pop
js
mov
fnstenv
push
ret
mov
or
icebp
pop
sbb
and
pop
jmp
mov
mov
inc
mov
fucom
dec
outs
jmp
xor
cdq
jle
clc
inc
das
cmp
ds
mov
arpl
cdq
mov
dec
pop
push
repz
sahf
mov
or
pop
retf
or
push
mov
xor
or
push
mov
xlat
sbb
or
push
jbe
lock
cdq
icebp
test
cs
out
test
push
add
jle
aas
mov
repz
jl
jmp
dec
xchg
cmp
and
clc
inc
xor
jl
or
fimul
mov
jecxz
lods
es
add
cmp
and
pop
push
shr
ja
in
xlat
push
inc
shr
int
loope
cmp
(bad)
fiadd
pop
scas
or
addr16
dec
hlt
addr16
cmp
xchg
adc
add
scas
cmp
add
pop
call
jp
inc
std
cmp
and
iret
xchg
ret
pop
movs
pushf
inc
stc
xchg
pop
cli
out
retf
push
out
sbb
dec
xchg
dec
icebp
sub
pop
push
and
adc
adc
test
mov
cmps
adc
call
inc
imul
les
inc
adc
push
mov
gs
mov
nop
jb
mov
js
inc
idiv
mov
in
jecxz
les
or
cs
add
stos
cdq
je
sbb
enter
call
std
cdq
in
push
scas
xchg
sub
icebp
shr
push
jbe
lods
jb
jmp
clc
jo
in
pop
jb
cmps
rol
adc
pop
sub
jns
adc
jbe
mov
pop
in
jle
mov
data16
bound
test
nop
xchg
iret
push
and
push
xor
fcomp
cld
push
scas
div
push
cmp
jp
jnp
push
and
lods
jno
mov
mov
pop
xchg
jnp
and
rcl
(bad)
jg
icebp
mov
adc
loope
jns
jbe
jno
jnp
push
mov
ret
mov
aaa
sbb
mov
repz
jb
idiv
xlat
sti
mov
into
jne
fmulp
sti
(bad)
dec
cmps
cmps
mov
mov
out
out
push
pusha
jp
or
xor
inc
push
jnp
fldenv
or
js
cmp
push
imul
xchg
das
call
pop
std
mov
jnp
push
sub
and
in
push
daa
mov
push
cmp
xchg
shl
fxch
(bad)
xor
pop
mov
dec
sub
mov
sbb
lds
xchg
jge
call
ficom
sbb
pop
arpl
(bad)
mov
add
mov
es
sahf
mov
add
jp
inc
push
(bad)
fcmovb
cwde
cmps
les
mov
sub
mov
sub
dec
mov
or
loop
mov
(bad)
sti
int
dec
nop
xchg
test
leave
fs
add
xchg
in
lahf
sar
mov
inc
pop
add
add
aas
retf
cld
adc
(bad)
jns
(bad)
jmp
clc
xchg
mov
mov
jge
xchg
ret
sbb
xor
retf
pop
jbe
jb
xchg
ss
mov
xlat
jmp
adc
cs
retf
hlt
fstp
lods
push
in
pop
mov
xchg
les
xor
adc
xchg
push
das
int3
jnp
inc
sub
push
fwait
mov
xchg
sbb
sbb
jno
sub
xchg
jle
push
cmc
dec
int3
(bad)
push
scas
icebp
addr16
aad
(bad)
mov
cwde
jl
mov
xchg
jbe
push
stos
jne
push
push
cmp
sub
sub
clc
outs
xchg
(bad)
mov
adc
test
addr16
shl
(bad)
sti
mov
(bad)
scas
xchg
sbb
std
nop
aaa
movs
data16
sub
scas
or
rol
inc
push
stos
xchg
mov
xchg
lahf
mov
test
outs
pop
adc
sbb
jle
fs
not
push
aam
dec
bound
(bad)
loope
les
out
nop
cmps
rcl
dec
mov
jb
push
in
je
cmc
and
xor
and
andps
ins
push
pop
adc
adc
les
test
arpl
rcr
daa
pop
mov
stos
aad
in
or
arpl
shl
inc
xor
in
or
add
loop
sub
or
mov
dec
push
push
and
scas
dec
and
call
jmp
mov
xor
push
iret
inc
cmp
cmps
cmps
popf
ins
sub
mov
int
cmp
fs
mov
loope
(bad)
test
mov
add
jmp
and
add
mov
mov
lods
mov
or
shr
sub
inc
div
inc
or
js
dec
stos
push
or
gs
ficomp
pusha
enterw
dec
add
test
mov
inc
mov
pop
ss
(bad)
call
stos
xchg
scas
push
cmps
and
stos
or
ins
cmps
push
cmp
cwde
mov
sub
repnz
and
addr16
push
cmp
retf
mov
cmp
enter
fist
and
jnp
js
push
cmp
sbb
xchg
mov
gs
arpl
push
inc
mov
scas
je
xor
jae
loopne
mov
ror
cmp
adc
pop
mov
enter
adc
cld
lods
repz
add
rcl
xor
ja
lods
lods
mov
xchg
stos
push
sahf
sub
or
fnstenv
test
out
call
mov
mov
movs
call
imul
xchg
jmp
mov
adc
sub
loopne
les
mov
mov
inc
add
loope
add
cmps
iret
loop
cmc
pop
pop
lahf
dec
aam
mov
mov
shl
and
div
and
repnz
clc
repz
es
or
mov
or
xchg
push
pushf
cs
aaa
xor
and
mov
sbb
and
push
stos
sub
rcl
movs
stc
lock
dec
out
and
mov
cmp
loop
adc
bound
loopne
pop
xor
dec
cmp
sbb
jo
or
aad
fsubr
jle
(bad)
rol
inc
clc
xchg
xchg
aas
movs
jbe
and
int3
aaa
adc
xchg
xor
xor
sti
or
mov
sti
arpl
mov
mov
mov
jg
fiadd
cmc
sub
adc
or
fild
pop
(bad)
imul
xchg
mov
adc
sti
adc
xor
fidivr
push
aam
mov
adc
pop
and
add
push
add
imul
(bad)
outs
enter
mov
loop
fs
popf
mov
xchg
jmp
and
and
repnz
sbb
inc
fwait
mov
fwait
pop
enter
mov
adc
pop
in
lods
cmc
fcom
stos
bnd
xchg
push
call
sub
adc
outs
icebp
push
jae
scas
(bad)
outs
and
and
sbb
cmp
adc
scas
push
ds
or
dec
rcr
jns
xchg
push
pop
movs
mov
pop
xlat
or
sbb
into
out
ins
rcl
sub
mov
mov
aaa
(bad)
and
mov
mov
or
inc
aam
loop
add
call
cmps
rcl
mov
mov
sub
adc
dec
ret
outs
ss
les
in
mov
and
jno
jge
cmc
jnp
ret
lds
ins
or
add
xchg
push
sbb
push
je
mov
pop
jb
mov
ins
int3
and
inc
pop
mov
or
maskmovq
test
push
mov
cmp
inc
pop
jmp
in
fiadd
cs
in
jo
sub
out
push
inc
gs
mov
and
hlt
mov
sbb
sub
inc
lods
or
push
mov
pop
jle
push
aas
imul
adc
les
pop
jb
nop
jmp
jnp
loop
sbb
dec
mov
in
mov
xchg
nop
aas
cmp
push
dec
sar
std
cwde
repz
push
cwde
hlt
add
test
xor
addr16
or
(bad)
gs
pop
sahf
dec
cdq
dec
ror
scas
lods
loope
push
xor
cmp
pop
xor
jg
jne
push
xor
div
or
and
cmps
lds
push
and
sbb
jge
lock
cwde
xchg
ja
or
ins
cli
sub
je
dec
cmp
jle
mov
call
jl
xor
or
sahf
push
or
pop
mov
sahf
pop
sar
int3
xchg
pop
cmp
pop
fdivr
mov
adc
stos
test
pop
in
add
(bad)
add
mov
pop
mov
jae
scas
repnz
sub
cmps
clc
adc
fdivr
jge
xchg
add
stos
aas
pop
inc
test
mov
dec
sub
sub
sti
xor
fadd
js
(bad)
sbb
inc
les
adc
cwde
in
cmp
cs
mul
fild
mov
pop
sbb
(bad)
jnp
push
sub
loop
inc
cmps
adc
shl
or
ins
push
stos
jbe
and
or
loopne
leave
sahf
in
push
fstp
sti
xchg
movs
add
lods
mov
xchg
leave
pop
mov
fistp
pop
push
inc
add
mov
pushf
adc
gs
hlt
sbb
sbb
call
mov
in
ror
loope
aas
test
bound
leave
sti
push
add
pop
mov
call
cmp
rcl
jecxz
sahf
out
dec
popa
jl
mov
pushf
pop
sbb
daa
in
ror
xor
inc
push
lahf
and
lds
xchg
inc
scas
imul
inc
lods
movs
ss
test
ret
push
adc
add
ror
mov
sti
mov
inc
and
pop
push
pop
clc
out
popa
cmps
stos
jp
add
jnp
pusha
jmp
add
into
or
cmp
ret
not
scas
mov
cs
push
aam
clc
and
out
fdiv
and
mov
sub
retf
cld
mov
enter
mov
adc
mov
retf
clc
daa
jecxz
dec
lods
sbb
test
mov
mov
pop
ret
bound
icebp
mov
cld
dec
fnsave
pop
jge
fisttp
jnp
mov
loope
cmc
sbb
lahf
dec
pop
pop
cmps
inc
push
test
dec
push
sub
mov
imul
retf
cld
into
mov
push
pop
and
cmc
xlat
(bad)
int3
loopne
xchg
push
out
sti
jl
out
call
call
or
pop
dec
int
stos
aam
sbb
shr
aaa
push
stos
rcl
push
ins
fdiv
call
test
fdiv
mov
arpl
push
aam
repz
imul
xchg
sbb
gs
fs
icebp
mov
out
inc
xchg
pop
stos
test
repnz
mov
(bad)
icebp
cmp
push
jl
or
xchg
neg
stos
lods
cmp
popf
xor
add
xchg
addr16
cmp
sbb
dec
and
neg
cmp
cmp
sub
adc
cmps
nop
or
push
sub
stc
jbe
das
dec
or
(bad)
(bad)
in
xor
push
hlt
enter
loop
(bad)
lahf
xor
leave
mov
inc
cmp
mov
and
fnstcw
nop
jp
mov
pop
rcr
push
and
cdq
cmp
or
movd
push
imul
repnz
outs
xchg
pop
xchg
xor
push
sub
pop
and
outs
aas
(bad)
fiadd
arpl
lods
sub
pop
push
jns
pop
out
cmp
test
dec
or
fldenv
je
test
add
lods
sti
push
or
popf
pop
scas
push
test
mov
imul
adc
adc
int
aad
adc
jbe
scas
and
pop
ss
out
xor
movaps
movs
mov
fst
adc
adc
jmp
dec
jl
mul
stc
push
mov
lock
xchg
dec
std
mov
adc
mov
xor
xor
and
dec
and
mov
sbb
and
cmp
and
adc
xor
mov
mov
sbb
scas
arpl
dec
in
dec
mov
into
movs
mov
pop
xchg
jle
and
rcl
data16
cmp
pop
ret
mov
cmc
ja
ret
xchg
xchg
sub
dec
outs
and
mov
dec
jmp
call
fcomp
sahf
or
push
fist
lahf
pmovmskb
push
xchg
cmp
jmp
(bad)
push
out
sbb
les
test
pop
inc
dec
adc
out
(bad)
std
icebp
push
cmp
pop
jl
(bad)
scas
push
jmp
ficomp
call
mov
cmp
pop
pop
add
sub
movs
inc
xchg
push
inc
or
popf
rcl
rcr
aad
in
ret
and
jno
or
data16
shl
push
outs
adc
loop
fcom
bound
dec
or
xchg
pop
xchg
adc
inc
xchg
add
xchg
cmps
scas
and
mov
sub
enter
pop
mov
jns
std
jne
in
in
pop
dec
xchg
push
adc
jae
ret
push
hlt
and
rcl
dec
and
push
lods
mov
or
in
scas
scas
xor
push
lock
ret
or
mov
pop
mov
dec
arpl
shr
aas
stc
jle
adc
aas
push
jmp
in
dec
repz
mov
push
or
int
js
jno
jg
xor
mov
add
push
retf
xor
retf
int3
adc
test
xchg
xor
pop
loop
repnz
adc
rep
in
scas
inc
ds
jbe
nop
jp
imul
xor
clc
and
iret
push
sbb
scas
add
aam
(bad)
leave
push
mov
sbb
jp
dec
push
fwait
mov
test
or
sbb
shr
aad
mov
dec
loopne
aaa
pop
in
loop
inc
test
pop
mov
pop
pop
mov
and
(bad)
sub
pop
pusha
nop
mov
aaa
sbb
lods
ret
je
dec
jb
cwde
pop
mov
cmc
test
xchg
arpl
xchg
mov
push
add
push
lods
cmps
or
mov
ins
xor
fsqrt
mov
and
fmul
stos
scas
(bad)
mov
(bad)
int3
inc
dec
or
call
cli
add
and
dec
fild
iret
add
mov
jnp
ret
jae
cmp
push
add
cmps
lock
pushf
icebp
fmul
mov
push
das
cmps
dec
push
test
xlat
jbe
arpl
and
pop
mov
movs
or
enter
stc
sub
xchg
int
inc
aad
push
movs
mov
fcomi
or
or
add
(bad)
std
retf
ins
sbb
out
dec
addr16
shl
cmp
outs
or
push
dec
outs
lds
cmp
dec
pop
jmp
out
jg
les
scas
ds
in
push
mov
add
scas
add
cmc
adc
jns
in
gs
adc
retf
inc
addr16
mov
loope
sbb
xchg
jnp
inc
and
sub
ss
sub
sti
push
dec
mov
push
jne
push
xor
mov
(bad)
shr
mov
stc
clc
je
imul
adc
scas
mov
pop
(bad)
ins
jle
mov
pop
jae
ror
pop
xor
stc
adc
aaa
mov
xchg
daa
mov
adc
loopne
daa
jecxz
inc
inc
dec
imul
daa
dec
inc
jle
xchg
pop
xchg
(bad)
cmc
xchg
jns
(bad)
call
inc
dec
cmc
jp
add
jp
lock
jge
pop
enter
adc
push
push
mov
xchg
mov
fidivr
xchg
adc
shl
aam
aaa
cmps
pop
cmp
jo
adc
cmp
push
cmps
and
test
out
dec
int3
xor
repnz
push
mov
push
push
retf
cmc
jmp
mov
stos
test
jmp
repz
inc
pushf
push
pop
mov
and
push
es
shl
mov
dec
sahf
mov
iret
pop
fwait
arpl
sub
mov
shl
lods
fcmovb
stc
jge
fld
sbb
xchg
jg
push
adc
or
jmp
cmp
sbb
mov
test
fidivr
sar
cmp
jecxz
mov
out
sbb
mov
hlt
cmp
inc
shr
test
pop
in
sahf
cmp
push
jp
cmp
jbe
imul
popa
jp
jne
cmp
sbb
mov
mov
call
ror
call
sbb
lds
and
cwde
popa
nop
pop
test
outs
dec
sub
imul
out
or
xchg
outs
dec
aas
fistp
jb
pop
ficom
sub
jno
mov
cmp
ins
xor
mov
sub
daa
cwde
or
fnstsw
out
fcmovbe
out
mov
into
lods
push
adc
add
test
stc
inc
xchg
add
mov
add
(bad)
neg
(bad)
and
or
lock
jns
and
neg
stc
ret
jle
out
cs
mov
out
ins
cdq
or
lods
sar
(bad)
mov
xchg
or
inc
xor
jmp
mov
repnz
cmp
into
(bad)
std
or
xor
pop
cld
dec
outs
push
jbe
jnp
ins
add
adc
out
sub
mov
jo
stos
fstp
dec
loop
retf
loope
jle
out
std
imul
gs
adc
outs
(bad)
mov
pop
aad
jl
or
inc
xchg
pop
stc
out
nop
sub
loop
leave
add
pusha
in
inc
xchg
das
rol
jbe
or
and
pop
dec
cmps
xor
pop
(bad)
aaa
je
dec
xor
inc
pop
add
mov
sub
jecxz
test
adc
pop
(bad)
repnz
cli
jne
popf
int3
jne
addr16
clc
inc
ins
pop
rcr
in
adc
out
stos
lds
iret
sub
adc
stos
mov
sub
mov
pop
gs
call
mov
sbb
gs
sub
pop
rcl
popf
sub
pusha
daa
int3
je
and
xchg
push
sbb
fs
retf
shr
cmps
xchg
push
cmp
sub
aad
ds
fild
inc
push
push
cs
out
add
cmp
pmuludq
(bad)
adc
dec
lds
(bad)
or
dec
ins
adc
out
out
pop
jns
cli
sbb
loopne
pop
nop
cmp
cmp
cmp
rcl
out
sbb
fwait
add
jno
popa
xchg
jno
in
rcl
movs
or
aaa
es
in
int3
leave
mov
mov
sbb
xor
or
les
mov
sbb
into
int
sahf
fild
and
xor
or
icebp
jmp
retf
stc
mov
xchg
push
test
push
adc
ror
ret
add
or
jg
mov
cmp
inc
lock
sub
and
addr16
adc
cmc
icebp
test
std
mov
cmps
pop
jns
aam
out
sti
and
test
cmp
and
inc
mov
cli
xlat
rcl
jbe
inc
ror
sbb
or
retf
test
jmp
jno
xchg
push
leave
addr16
std
pop
or
mov
out
and
fld
jl
push
adc
or
mov
not
popa
inc
and
mov
in
fcom
shl
mov
arpl
jo
cmp
jmp
mov
mov
dec
sti
(bad)
mov
jno
(bad)
outs
mov
test
and
and
lods
xchg
mov
iret
or
scas
ret
imul
imul
ins
cdq
(bad)
xchg
push
jnp
xor
int3
sbb
mov
pop
les
xor
lea
js
mov
lock
adc
outs
jl
and
outs
lods
pcmpeqd
cmps
push
test
aam
jge
cld
cs
mov
aas
sbb
int
(bad)
out
pop
pop
jl
jmp
mov
je
movs
imul
scas
inc
hlt
pop
inc
lds
xchg
stos
mov
xlat
add
sub
in
jne
(bad)
fild
inc
loop
mov
xchg
daa
stos
adc
dec
xacquire
and
xchg
mov
bound
push
push
pop
hlt
stc
push
aad
rcl
cmp
pop
mov
xchg
dec
jg
not
in
push
inc
daa
into
into
out
scas
mov
dec
cmc
and
cmp
shl
or
inc
jle
mov
sub
mov
(bad)
int
jb
ins
pop
popa
or
push
add
mov
int3
pop
retf
aaa
int
or
mov
hlt
shl
aad
dec
loop
xor
ja
and
js
loope
test
mov
or
fidivr
jns
aaa
fbld
sub
mov
xchg
test
pop
movs
xor
add
sbb
popf
adc
gs
in
std
in
mov
cmc
ins
rcl
push
in
arpl
cmp
or
lahf
cmp
(bad)
dec
ror
inc
inc
jne
addr16
fadd
and
sub
or
jne
(bad)
call
jmp
int
fwait
mov
jecxz
mov
or
ins
in
adc
mov
mov
test
leave
ret
sar
cmp
pop
imul
loop
jl
mov
fiadd
imul
lock
xor
fld
inc
xor
jmp
inc
imul
shr
mov
frstor
fwait
in
adc
and
pop
push
cld
bound
into
mov
jl
mov
daa
inc
pop
scas
add
mov
gs
sbb
push
(bad)
lahf
xchg
mov
outs
lds
jnp
lahf
pop
xchg
pop
(bad)
rol
test
push
movs
aam
push
push
retf
xchg
mul
sub
xor
cdq
jne
repnz
pop
(bad)
mov
nop
leave
dec
cmp
push
es
sbb
iret
jo
dec
mov
push
retf
push
xor
pop
and
data16
mov
fidivr
fcomp
repnz
aas
mov
push
pushf
mov
fidiv
mov
xchg
test
or
sub
add
imul
pop
add
fimul
fisttp
call
stos
jbe
pop
dec
inc
jae
cmps
fst
xchg
lods
mov
dec
pop
aas
pop
(bad)
sub
dec
jb
cmc
push
call
call
mov
fstp
test
pusha
xchg
(bad)
out
inc
cmp
sar
and
test
mov
movs
mov
loop
cmp
mov
or
push
les
out
dec
mov
push
sub
mov
jae
(bad)
jle
fsubr
(bad)
xchg
mov
gs
(bad)
call
jns
leave
pop
ds
xchg
sbb
push
jmp
aad
cwde
fadd
push
popf
push
retf
xor
pop
lahf
or
aad
aad
dec
jp
inc
leave
and
xchg
(bad)
les
leave
fwait
or
xchg
fldenv
mov
iret
shl
(bad)
cld
cmp
inc
bound
mov
cmc
add
fs
jle
es
xchg
std
pop
pop
out
and
aam
xor
sbb
adc
sub
sbb
sahf
mov
stos
jmp
pop
fild
sub
cmp
sbb
cmp
pop
repz
inc
adc
mov
mov
aaa
adc
push
(bad)
dec
in
sbb
xor
and
mov
loope
addr16
ja
inc
lock
std
push
int
xor
dec
or
test
push
ja
dec
inc
in
bound
adc
and
jmp
gs
pushf
adc
mov
sbb
xor
sub
ja
jmp
fwait
pop
mov
xchg
cmp
fadd
ret
mov
(bad)
and
pop
cmps
bnd
jae
rcr
jle
and
popf
out
neg
inc
xor
shl
ret
cdq
pop
neg
icebp
je
mov
push
arpl
enter
push
jmp
sub
jmp
pop
mov
push
sub
mov
hlt
mov
or
xchg
sar
and
pop
inc
inc
out
clc
mov
inc
lods
idiv
dec
icebp
mov
stc
cmp
inc
fwait
cmp
add
stos
mov
es
mov
cmc
cmp
int3
ds
movs
mov
pop
lock
retf
adc
in
add
mov
jns
or
push
loopne
mov
mov
test
push
sbb
call
loop
mov
jmp
pop
jo
jl
mov
add
adc
push
out
gs
rcl
les
mov
outs
xor
sbb
outs
es
mov
leave
stos
jae
faddp
popa
(bad)
jmp
or
in
cmp
mov
data16
div
xor
adc
pop
rcl
adc
enter
push
xor
daa
rcr
popa
stos
or
xor
imul
dec
pop
pop
xor
stos
movs
das
scas
into
and
mov
mov
nop
ret
push
jae
enter
ret
push
sbb
getsec
mov
xor
pusha
or
mov
fucomip
js
mov
and
mov
out
pop
mov
mov
loop
aam
fldcw
fs
icebp
rep
test
jns
cld
std
fld
pop
xchg
in
or
sbb
leave
mov
cmp
js
imul
mov
fistp
mov
aas
mov
fwait
fwait
lds
stc
ins
in
call
mov
xor
add
vpsubw
xchg
clc
movs
push
mov
mov
cmp
add
jae
neg
ja
sub
xor
fstp
or
pop
(bad)
shl
ins
(bad)
jmp
lock
fcmovnbe
sar
add
lahf
jae
mov
movaps
out
mov
fsubr
inc
imul
sub
adc
mov
sahf
add
fst
lods
dec
idiv
xchg
sti
leave
pop
icebp
xchg
push
mov
mov
push
neg
add
cmps
test
or
add
xchg
data16
shl
shr
dec
add
out
jo
push
push
add
mov
mov
ss
xor
sbb
mov
mov
push
add
sbb
iret
inc
mov
cmp
push
clc
(bad)
dec
push
and
inc
jns
in
aaa
cdq
loop
test
sub
fs
sub
xor
aam
xchg
xor
push
fidivr
xor
sbb
ins
popf
xchg
das
(bad)
clc
mov
fdiv
add
xor
add
push
dec
xlat
jns
je
dec
std
xchg
sbb
xlat
sub
aam
pop
aas
lods
pusha
xchg
(bad)
int3
cld
xor
add
retf
push
lahf
pusha
adc
lds
sti
daa
(bad)
cli
outs
adc
scas
fiadd
in
bound
mov
cs
aas
(bad)
jo
adc
jb
push
repnz
adc
sub
call
outs
jns
fldenv
sbb
jg
movs
(bad)
adc
xchg
push
pop
int
push
bound
push
jle
cs
or
int
test
adc
mov
mov
pop
mov
stos
mov
sbb
enter
xchg
pop
(bad)
pop
fdivr
push
int
cdq
shl
or
shr
and
sbb
jne
adc
jp
mov
(bad)
and
mov
ss
(bad)
rol
pop
fidivr
inc
arpl
add
pop
fs
ret
pop
repz
xor
scas
dec
pop
pop
push
fwait
das
xchg
es
clc
sar
test
inc
test
xchg
cmps
jmp
ret
mov
mov
jle
xchg
sub
and
mov
imul
fs
mov
jp
dec
inc
shl
mov
dec
sub
sub
push
jecxz
pop
int3
lea
(bad)
cmps
js
inc
push
sub
nop
adc
adc
in
js
pop
mov
std
dec
jb
xchg
or
dec
inc
xchg
mov
call
mov
and
sub
lds
lods
clc
mov
clc
mov
sahf
test
push
frstor
mov
push
fld
ins
pop
ficomp
mov
sub
test
mov
adc
mov
outs
mov
(bad)
nop
or
pop
cmps
dec
sahf
xor
int3
and
xchg
cli
push
push
fdivr
imul
sbb
inc
jle
sub
cdq
data16
mov
jge
repnz
jae
dec
and
add
sub
pop
xor
icebp
sbb
dec
xchg
fild
rol
dec
mov
icebp
push
(bad)
js
jecxz
shl
push
jae
loop
stos
test
mov
cmp
mov
jo
mov
hlt
pop
push
or
mov
add
jp
and
and
adc
pop
push
dec
push
fs
imul
push
jb
push
(bad)
push
sub
and
mov
add
push
test
jno
sbb
or
xchg
shl
or
xchg
int
outs
or
in
xchg
sub
leave
xor
mov
aam
xchg
ins
sahf
xor
push
pop
loop
or
cld
pusha
sbb
cmp
jno
(bad)
test
mov
movs
mov
sbb
test
jno
in
mov
inc
mov
js
rol
es
clc
call
dec
inc
or
not
loope
bound
xor
xor
das
fdiv
xchg
and
int3
dec
cdq
and
push
in
std
in
mov
push
sub
and
out
push
jae
out
mov
and
mov
or
arpl
fild
push
mov
and
add
je
dec
cmp
mov
mov
inc
sub
lods
sar
pop
shl
into
aas
aad
(bad)
add
sub
lods
(bad)
mov
push
(bad)
cs
faddp
ret
push
loop
sub
inc
sbb
mov
push
mov
dec
jg
xor
sbb
mov
jno
std
xchg
mov
mov
clc
sar
popa
adc
cld
cmp
(bad)
push
pop
ror
mov
inc
cdq
repz
xor
ss
aam
xor
out
(bad)
sub
(bad)
sbb
ret
cmp
sbb
gs
scas
fdiv
jmp
fwait
test
cmp
pextrw
lea
adc
xchg
or
cld
add
pop
fsub
fst
pop
into
cmp
xchg
loope
mov
mov
mov
xor
add
fist
retf
inc
ss
mov
ret
xchg
stos
aas
sti
cmc
mul
mov
les
mov
add
jge
dec
cmp
jmp
xor
sub
mov
fisub
add
or
xchg
jl
dec
pusha
ss
sar
out
movlps
aas
xchg
mov
cmp
test
xchg
into
(bad)
aas
cmp
outs
sub
cmp
in
je
adc
(bad)
stc
mov
lods
pop
mov
clc
fs
repnz
xlat
xchg
ret
aam
push
sar
(bad)
lock
fdivr
cmp
stos
sub
loop
dec
push
adc
push
int
and
cmp
cmp
jb
out
add
ins
(bad)
push
fisttp
pop
gs
adc
pop
dec
jg
repnz
and
and
push
scas
adc
gs
jns
dec
aaa
or
shr
mov
and
sahf
sbb
or
jmp
xchg
retf
pop
and
daa
std
adc
cs
mov
leave
mov
jg
xchg
push
neg
and
xchg
jge
inc
jb
and
out
push
outs
loopne
inc
mov
mov
repz
lea
adc
mov
ds
aas
call
add
repz
inc
pop
adc
div
fnstsw
pop
add
sbb
mov
jecxz
mov
push
lods
pop
leave
sbb
enter
or
pusha
pop
bnd
cmp
shl
rep
scas
push
clc
mov
outs
inc
in
cmps
inc
leave
mov
sti
scas
mov
adc
jg
adc
jae
jge
mov
jmp
mov
xchg
pushf
div
aas
mov
push
js
push
or
xor
adc
mov
inc
mov
popf
xchg
or
xchg
adc
mov
loope
dec
ror
test
xchg
push
mov
ins
cmp
cdq
cs
push
pop
out
cld
dec
sub
(bad)
test
sbb
pop
test
pop
int
mul
gs
xor
movs
daa
inc
xchg
dec
out
std
stos
xor
sar
ins
push
pop
jecxz
jo
push
mov
mov
dec
and
xchg
mov
add
jbe
inc
or
mov
mov
inc
adc
aaa
es
popf
dec
outs
jl
enter
jmp
pop
aas
cmp
(bad)
retf
sub
inc
in
mov
rol
sbb
inc
jnp
mov
xor
sub
mov
lds
cld
fwait
(bad)
jmp
inc
mov
mov
cmp
or
xor
sub
or
add
pusha
xchg
fld
pop
push
pop
xchg
not
ror
out
dec
icebp
or
dec
push
call
push
movs
in
mov
sub
mov
dec
test
shl
mov
push
mov
arpl
inc
test
emms
cdq
fdiv
out
sub
rol
jg
sar
xor
adc
cdq
mov
jmp
jo
sbb
dec
imul
and
inc
fsub
pop
dec
jmp
outs
dec
cmp
xchg
sub
icebp
loopne
cmp
inc
jnp
or
jae
test
adc
out
cdq
mov
pop
es
mov
mov
push
cs
xor
inc
stos
jmp
cwde
movs
xchg
repnz
lods
bswap
ins
add
fistp
xchg
inc
out
pop
or
sbb
cmp
add
aaa
in
xchg
push
pop
jecxz
das
push
mov
jmp
movs
push
aas
xchg
fcmovnb
(bad)
sub
mov
cwde
add
cmp
xor
test
nop
pusha
xchg
push
shr
cdq
adc
sub
and
fst
ror
shl
push
xor
loop
dec
iret
cli
mov
test
jmp
mov
adc
push
dec
pusha
das
cmp
or
push
jns
dec
pusha
jle
mov
lock
inc
loopne
pop
mov
pop
outs
fisub
pop
retf
je
aam
and
xor
shl
xchg
dec
push
(bad)
stos
adc
cmps
mov
xor
jle
sub
inc
imul
lods
jmp
(bad)
in
adc
jnp
mov
je
imul
imul
xor
dec
imul
rcl
test
and
cs
xchg
xor
mov
stos
jo
imul
xor
add
aam
arpl
rcl
xchg
pop
mov
sub
aam
mov
fbld
xchg
jp
arpl
mov
and
inc
sub
movs
(bad)
(bad)
scas
outs
mov
outs
and
dec
adc
jmp
outs
dec
mov
lds
mov
inc
mov
mov
int
rcl
sti
mov
popf
loope
data16
retf
cmp
ret
or
(bad)
pop
adc
adc
dec
in
sbb
sub
dec
mov
(bad)
lods
pop
jo
loopne
xor
loope
or
dec
mov
arpl
es
or
out
inc
shl
adc
or
ins
lods
in
movs
cwde
dec
in
xor
sbb
sbb
add
clc
adc
or
pop
sar
cmp
inc
dec
ret
lods
test
pop
fs
inc
jmp
and
or
sahf
jle
gs
fcomip
into
mov
popa
mov
mov
or
inc
clc
cli
movs
inc
das
mov
outs
clc
add
popf
push
mov
dec
pop
adc
cmp
xor
or
pop
xor
in
inc
sub
adc
or
movzx
jmp
xchg
pop
(bad)
stc
mov
push
test
in
in
sbb
mov
aas
sub
ss
jnp
retf
or
in
ins
iret
pop
mov
and
jp
dec
sub
popa
xor
ins
in
xchg
or
cwde
daa
pushf
repnz
xchg
xor
(bad)
test
imul
test
mov
jp
mov
inc
ret
aam
iret
xor
fwait
mov
popf
add
aad
cld
jmp
pop
mov
iret
(bad)
paddw
in
cmp
xchg
mov
adc
adc
repnz
shl
gs
(bad)
mov
sti
pop
cmps
or
frstor
pop
inc
or
jmp
xor
lock
bound
mov
and
push
mov
(bad)
mov
and
out
ins
add
xchg
(bad)
bound
adc
je
xor
xchg
jmp
shr
scas
push
das
mov
pop
mov
xor
outs
push
xor
sbb
cmps
in
mov
in
sub
in
pop
call
ret
mov
and
bound
cmovno
fld
cmp
daa
cmp
idiv
test
not
inc
inc
pop
jno
std
push
add
sbb
jge
(bad)
popa
and
loop
out
inc
stc
inc
dec
jb
imul
call
adc
add
shr
push
leave
cmc
out
pop
dec
sbb
sbb
test
or
pop
daa
pop
ret
xchg
mov
inc
mov
add
repnz
sub
xor
pop
nop
cmp
fdivr
jbe
cmps
mov
lods
or
push
in
sbb
push
fisttp
cmp
and
and
and
(bad)
stos
outs
sub
test
adc
push
and
add
push
pop
repnz
sub
xchg
popa
xor
sti
cli
int
inc
mov
mov
jl
mov
pop
push
(bad)
or
jecxz
or
imul
jg
cmp
dec
pop
icebp
sub
and
lea
bound
mov
xchg
push
inc
xchg
ret
and
shl
pop
dec
sub
(bad)
fcmovnu
lds
das
sbb
imul
mov
shl
jmp
mov
xor
mov
sub
lods
in
cmp
or
retf
mov
mov
repnz
aas
mov
int
xchg
pop
aas
lods
rcl
cli
pop
out
dec
inc
jae
mov
jg
loop
lods
or
mov
ss
sub
and
cmps
loope
pop
inc
add
pmuludq
aas
push
mov
mov
sbb
jle
and
js
xor
xchg
xchg
push
sub
icebp
sar
inc
mov
and
pop
pop
shl
pop
mov
mov
pusha
jbe
loop
pop
mov
push
mov
inc
pop
pop
jmp
and
lods
ret
pop
ror
push
mov
(bad)
cmp
outs
int
das
addr16
push
aad
in
cmc
ds
data16
sbb
mov
out
add
movs
(bad)
ss
(bad)
xor
add
mov
lock
mov
jecxz
mov
sub
xor
adc
hlt
fcom
int
xchg
xchg
(bad)
pop
not
add
out
add
dec
(bad)
retf
mov
(bad)
nop
int3
cli
je
mov
or
xor
arpl
(bad)
repnz
pop
adc
xchg
rol
test
inc
es
jbe
mov
jmp
pop
int3
jp
cmps
loope
call
sbb
popa
xor
dec
in
push
ficomp
sub
es
push
mov
aad
movs
outs
addr16
sbb
xchg
mov
inc
mov
sahf
ds
pextrw
ins
cld
fwait
push
and
clc
mov
mov
imul
enter
adc
test
loop
retf
ja
jne
push
std
adc
inc
in
cmp
cmp
clc
inc
in
or
jne
scas
pop
xchg
movs
sub
jmp
sar
xchg
jle
or
cmps
jl
sbb
nop
div
xchg
xlat
out
jmp
hlt
cmp
fimul
fldenv
xchg
or
cmp
pop
outs
cmps
jmp
rcl
in
pushf
ss
inc
push
adc
pusha
cmp
lods
retf
xchg
pop
mov
test
push
and
mov
jns
mov
lahf
pop
(bad)
xor
test
fst
add
inc
push
sub
loope
cmp
cmps
mov
pushf
(bad)
mov
dec
imul
out
mov
adc
cwde
xchg
test
cmc
cmp
dec
mov
cmp
mov
push
mov
scas
sub
push
xchg
push
test
jbe
pop
push
fdiv
ins
jns
retf
daa
les
adc
dec
mov
imul
into
sbb
xchg
pop
add
ja
cld
into
cld
mov
mov
inc
test
dec
pop
enter
(bad)
fsubr
mov
inc
movs
jge
inc
inc
dec
fisttp
ins
xlat
mov
(bad)
mov
dec
or
fistp
in
xor
sub
xchg
pop
pop
es
shl
call
add
cmp
sbb
arpl
jmp
lods
cmp
cwde
xor
pop
and
sahf
and
sub
ret
rcr
or
adc
adc
ret
xor
push
popf
cmp
xchg
inc
mov
cmp
mov
mov
(bad)
fdivr
push
xor
cmp
mov
leave
sbb
jne
pop
(bad)
mov
js
cmp
dec
adc
jo
mov
ja
ins
lods
mov
push
cmp
rcl
adc
dec
xor
jp
call
fild
rol
daa
(bad)
mov
adc
(bad)
jnp
aas
aas
mov
jmp
loopne
jge
mov
mov
and
cmp
shl
into
ds
pop
cs
sar
dec
jo
pop
loopne
ds
push
sbb
push
shl
mov
xchg
adc
imul
(bad)
mov
cmp
repnz
in
xlat
cmps
add
cmp
push
sbb
fdiv
lods
std
xor
push
ins
pop
pop
jmp
xchg
sbb
jne
aas
jo
xor
pop
jmp
loopne
push
cld
dec
(bad)
adc
imul
enter
fisub
pop
in
div
mov
mov
mov
iret
adc
sub
sub
shr
fimul
(bad)
rol
aaa
pop
out
jbe
addr16
sub
call
xor
in
test
(bad)
or
icebp
xor
push
jo
push
push
mov
push
dec
sub
add
sbb
es
aaa
std
test
hlt
repz
es
cmp
cmp
xchg
test
popa
ficomp
ds
into
hlt
xchg
inc
pop
ret
mov
jmp
adc
into
daa
inc
and
imul
stos
sub
inc
retf
loope
xchg
imul
fst
inc
jne
jns
xchg
shr
jl
std
jae
cwde
rol
push
mov
and
sub
test
in
mov
pop
adc
shr
test
mov
outs
push
loop
rcr
xchg
loop
mov
lds
push
cmp
xchg
lods
std
sub
jmp
pop
lods
and
mov
outs
dec
jp
pop
je
in
fwait
cmp
mov
dec
mov
xchg
or
or
inc
xchg
jns
jae
inc
neg
sub
add
(bad)
pop
xor
jmp
shr
mov
xor
fstp
aas
mov
cmp
loope
sbb
jb
test
cwde
(bad)
mov
push
out
lahf
mov
data16
ret
loope
rcr
cwde
mov
adc
jns
mov
push
cs
sub
aam
cli
pop
loope
jl
mov
xlat
imul
xchg
push
xor
das
mov
pop
popa
xchg
mov
inc
int3
add
les
inc
cdq
xchg
bound
xcrypt-cfb
cmps
daa
cmp
into
cmp
into
xor
and
sbb
mov
bound
cmp
push
or
retf
ret
retf
call
mov
clc
js
lods
mov
or
dec
pause
jle
mov
mov
push
loopne
jp
dec
pop
or
or
dec
mov
xor
mov
cmc
popf
icebp
popf
mov
xlat
add
dec
ret
add
pop
adc
cmp
dec
movs
pop
mov
in
popf
adc
and
mov
pusha
dec
(bad)
fcmovnbe
mov
outs
stos
cmp
loope
ja
hlt
sahf
je
sbb
repnz
imul
int
cmp
rcr
(bad)
mov
fs
iret
outs
lea
mov
dec
sbb
lods
call
clc
cmp
ficom
out
movs
mov
push
dec
dec
adc
jo
xchg
dec
clc
call
dec
test
push
sbb
mov
jbe
mov
xor
enter
jmp
fsubp
call
(bad)
sbb
(bad)
dec
cld
add
add
ret
call
movs
pop
dec
jle
and
push
or
stos
jns
fstp
mov
cmp
mov
or
inc
add
jne
mov
dec
ficom
mov
push
push
sub
test
cmp
loop
push
scas
add
add
(bad)
lods
sub
pop
jp
jecxz
jp
ins
das
and
adc
push
jecxz
pushf
fld
push
idiv
xchg
jmp
hlt
push
xchg
(bad)
mov
jo
mov
mov
add
scas
dec
and
pusha
retf
mov
out
fld
cmps
sysret
jns
jle
pop
dec
retf
jno
in
div
out
imul
add
mov
scas
int
jge
xchg
fidiv
(bad)
mov
or
lea
pop
ds
js
or
pusha
cwde
nop
loope
inc
adc
sbb
cmp
clc
icebp
sar
scas
sub
add
psubw
addr16
neg
or
sbb
hlt
cli
inc
cmps
mov
adc
jge
lds
movs
xor
int3
aaa
mov
stc
dec
push
xor
jo
mov
pop
mov
xor
ins
adc
ins
dec
sahf
fdivrp
dec
repz
out
fild
daa
test
ja
gs
repz
lds
addr16
inc
shl
mov
pop
and
dec
or
mov
adc
add
clc
rol
jge
cmp
sbb
mov
xchg
in
retf
out
loopne
cmp
fisubr
jge
sub
rcr
fnstenv
lock
push
js
fimul
cmp
repnz
add
inc
jmp
pop
or
hlt
dec
jmp
lea
sub
fsub
movs
add
scas
mov
or
jmp
je
(bad)
jecxz
jnp
jbe
adc
gs
xchg
repz
pop
pop
xchg
popa
(bad)
and
and
or
lods
mov
push
mov
mov
or
fs
xor
sub
cdq
adc
bound
stos
shl
push
xor
cmps
inc
fnstcw
movs
pop
sub
dec
sub
shr
ret
jge
xor
ins
popf
loopne
outs
push
dec
cmp
das
xor
xor
fwait
inc
mov
stos
jge
lahf
push
jge
push
jmp
cmc
loop
jmp
test
inc
xor
push
lods
fld
xchg
sub
mov
pop
ficom
in
pop
(bad)
enter
push
in
inc
xchg
int
sub
sub
pushf
aaa
mov
and
call
enter
mov
mov
mov
ins
fidiv
(bad)
ror
out
jns
fcmovb
cli
outs
cmps
pop
out
jl
or
mov
xchg
or
add
mov
fstp
sbb
cmc
inc
(bad)
out
push
adc
cmp
add
mov
jae
sbb
lods
scas
sahf
sub
cli
jo
pop
les
lea
(bad)
pop
icebp
sub
rol
mov
pop
or
push
push
jg
cmp
dec
xor
xor
fisttp
or
cmp
mov
(bad)
sub
das
jge
cmps
sbb
adc
or
(bad)
mov
push
shl
xchg
adc
and
lods
stos
jnp
jno
push
inc
outs
inc
arpl
mov
jns
cmp
and
cmp
out
cmp
mov
mov
mov
inc
movs
idiv
mov
dec
or
and
inc
cmps
arpl
fiadd
(bad)
xchg
stos
mov
sbb
daa
sbb
out
test
add
jg
push
aad
push
sub
add
pop
pop
jnp
adc
inc
out
retf
sbb
ss
call
jb
pushf
dec
sti
push
aaa
retf
adc
lods
icebp
(bad)
shl
xor
ret
pushf
movs
pushf
lds
mov
cmp
pop
aad
fst
lods
leave
add
fst
mov
add
add
mov
in
test
cs
jne
mov
fmul
outs
or
jle
jmp
jle
pop
jo
call
or
jns
(bad)
loop
arpl
jecxz
jo
cld
pop
push
cmp
rol
cdq
xor
imul
cmp
jae
adc
fimul
and
(bad)
ins
stos
xor
imul
in
out
mov
movhlps
mov
(bad)
test
adc
test
retf
jnp
(bad)
jb
test
mov
adc
imul
mov
jp
and
data16
inc
cs
pop
lods
xchg
out
push
mov
cmc
aaa
test
retw
cld
or
pop
or
ror
xchg
stos
enter
nop
sbb
dec
call
mov
xchg
arpl
push
popf
xor
cdq
aad
inc
mov
jp
sahf
add
nop
jle
enter
aaa
fwait
jne
pop
movs
jge
mov
sbb
out
popf
imul
stos
sbb
pushf
xchg
mov
fst
not
add
jmp
repz
jmp
jb
js
mov
mov
fnstenv
jmp
xchg
inc
je
push
std
sar
pusha
retf
mov
ins
call
and
xchg
pop
(bad)
sahf
movs
or
ret
retf
movs
cdq
cmp
sbb
pop
lods
ins
(bad)
leave
cld
ss
jns
ds
imul
arpl
mov
mov
mov
mov
mov
and
add
sub
mov
push
cmc
sbb
adc
pushf
xor
loope
dec
or
pop
stos
pop
pop
push
mov
fcmovne
mov
add
jmp
push
xchg
inc
xlat
loope
div
arpl
jg
cmp
das
mov
mov
and
jnp
(bad)
inc
inc
leave
ins
mov
mov
xchg
cld
inc
mov
mov
aad
xchg
hlt
in
movs
js
add
and
daa
inc
bound
enter
mov
pushf
cmp
xchg
aaa
cmp
lahf
push
mov
outs
sub
xor
fstp
inc
fild
clc
mov
inc
sub
pop
xchg
cmp
scas
into
int3
bound
mov
cs
jmp
cmc
cmp
lods
movs
into
ins
jmp
xor
ins
out
xlat
jmp
xchg
stos
lods
shl
cld
fmul
inc
adc
cld
push
call
mov
mov
jge
sub
and
add
pop
(bad)
pop
push
dec
push
push
lods
xchg
dec
push
cmp
cmp
sbb
(bad)
fcomp
add
jbe
jmp
mov
pushf
cmp
das
(bad)
test
dec
push
cmp
aaa
out
nop
xchg
leave
fs
jmp
mov
daa
ficom
pop
xor
mov
int
xchg
sar
sbb
icebp
mov
dec
neg
in
and
or
xchg
rcl
mov
jae
cmc
or
cli
xchg
stc
movs
xor
dec
(bad)
into
or
and
pop
xchg
out
movhps
mov
fldenv
add
das
stos
xchg
and
(bad)
or
fwait
xchg
outs
shr
cmp
outs
xor
aaa
stos
inc
push
adc
(bad)
int
jg
js
xchg
es
call
sub
sbb
inc
xor
aaa
mov
lock
add
adc
add
(bad)
and
cmp
ret
or
lods
push
inc
ja
cmp
mov
nop
jae
dec
retf
sbb
inc
aad
jecxz
enter
jge
outs
sub
jmp
inc
sub
cmp
push
shr
add
or
xor
addr16
cs
ret
pushf
mov
dec
mov
std
fcomp
(bad)
mov
inc
outs
icebp
fldcw
ins
xlat
mov
(bad)
mov
pushf
in
mov
mov
inc
arpl
mov
or
mov
mov
(bad)
push
mov
fmul
repz
pop
ficomp
push
xor
cmp
js
inc
shl
xor
push
xor
or
loopne
inc
int
ss
xchg
movs
inc
pop
loopne
loop
mov
add
mov
pop
imul
loop
das
outs
aad
in
int3
mov
outs
add
xor
push
test
or
loope
xor
mov
stos
popf
inc
test
sbb
xor
xchg
and
pushf
xor
shr
ret
into
dec
jmp
cmps
or
and
mov
das
mov
hlt
sbb
cmp
adc
mov
je
inc
push
inc
ds
mov
addr16
xor
mov
xor
xor
(bad)
imul
enter
sti
data16
jmp
stos
mov
int
push
mov
mov
shr
pop
cmps
xchg
(bad)
lahf
jns
fnstenv
dec
outs
les
adc
push
cmp
cmp
mov
sbb
in
cmps
fisubr
cld
mov
call
push
aaa
jmp
adc
test
scas
movs
mov
adc
push
mov
or
scas
jge
mov
sbb
add
inc
cwd
mov
adc
jg
lods
sahf
xchg
dec
out
adc
push
imul
aam
push
adc
in
sbb
xor
sar
or
sub
mov
xchg
push
or
or
mov
popf
push
test
add
clc
jg
ds
test
jno
mov
dec
inc
dec
adc
push
mov
jl
(bad)
mov
into
bound
rcr
daa
clc
add
xor
lock
rol
inc
inc
out
std
ror
bound
push
add
dec
shl
pushf
xor
and
inc
pop
in
cs
inc
jbe
(bad)
xchg
test
adc
pushf
push
scas
xlat
stc
in
gs
jbe
add
mov
mov
leave
sbb
ret
dec
xchg
jmp
ror
xor
lds
add
fs
or
jg
imul
les
push
sub
mov
mov
and
stos
push
ins
sti
aas
je
adc
out
adc
js
outs
mov
adc
lea
scas
loope
jecxz
adc
jo
dec
mul
mov
jnp
push
retf
fs
inc
jno
push
add
js
sbb
jle
jge
xor
xchg
and
or
sub
imul
aaa
adc
sbb
mov
mov
or
mov
push
jecxz
and
enter
das
test
mov
popf
retf
out
cmp
add
loopne
mov
inc
adc
inc
push
cmp
outs
jle
and
ret
sbb
cmp
je
or
iret
mov
push
adc
ins
sbb
jmp
push
push
xchg
sar
mov
cs
pop
inc
loope
or
inc
sub
sub
movs
pop
popa
in
(bad)
fwait
ret
lds
add
out
xchg
xchg
call
hlt
mov
ja
add
push
or
lahf
push
inc
jnp
jmp
scas
lock
cmp
or
cli
pusha
pusha
sbb
inc
lds
sbb
(bad)
pop
fwait
adc
xchg
cmp
push
or
pop
sbb
pushf
aaa
mov
(bad)
daa
add
and
adc
(bad)
push
mov
int
cmp
push
pop
jle
adc
adc
adc
inc
jno
dec
push
xor
mov
adc
mov
pop
es
push
(bad)
pop
sub
fwait
mov
cmps
xchg
in
cmps
jne
aas
lods
xchg
add
das
mov
add
or
sbb
pusha
xchg
push
adc
cmc
xchg
dec
pop
jge
test
jnp
shr
nop
sti
lods
pop
pop
push
xchg
outs
mov
adc
push
jno
mov
cmp
call
retf
pop
dec
xchg
mov
leave
inc
loope
test
xor
nop
sar
pop
mov
xor
push
and
lock
in
mov
mov
add
jbe
sti
enter
stos
or
sbb
test
outs
inc
jge
pusha
retfw
stos
xor
aas
mov
or
cld
xchg
mov
rcl
in
not
ror
cmp
add
dec
dec
mov
popa
jae
into
cld
rcl
sbb
xchg
mov
(bad)
fsubr
xor
out
and
fldenv
and
arpl
cld
adc
mov
mov
cmp
mov
push
jmp
dec
jae
test
jl
mov
lahf
fisttp
fdivr
test
arpl
jmp
push
adc
pop
mov
popf
iret
or
ss
call
jle
iret
jne
movs
adc
dec
push
and
ret
xchg
jmp
lea
sbb
push
sbb
dec
cmp
pushf
sub
ror
or
and
jmp
add
push
pushf
(bad)
sbb
ret
adc
push
pop
inc
inc
fwait
stos
mov
jmp
add
(bad)
push
push
mov
aaa
sub
cmps
pusha
dec
data16
test
popf
icebp
js
and
push
sub
mov
inc
std
pop
sub
mov
aas
cmp
pop
mov
cdq
inc
pop
jb
sub
data16
or
daa
daa
jmp
pop
xor
lods
add
sar
in
cmp
jecxz
int3
sub
nop
mov
popf
xchg
imul
mov
(bad)
dec
stos
sub
xor
push
or
aaa
ins
push
mov
test
imul
mov
and
test
sbb
add
push
into
adc
dec
adc
and
mov
cmp
shr
or
mov
(bad)
mov
xchg
in
out
add
test
xchg
gs
nop
fistp
mov
sbb
mov
adc
call
lsl
cdq
pop
shl
pushf
sbb
int3
xchg
ds
and
arpl
dec
cmp
mov
icebp
fnsave
aaa
and
mov
repz
sbb
shl
jno
push
jbe
mov
(bad)
inc
push
sub
nop
or
add
mov
(bad)
cmp
scas
call
test
js
mov
int
cld
xchg
repz
add
je
sub
mov
cmp
mov
push
adc
(bad)
xlat
out
mov
jmp
push
inc
call
fmul
jns
into
mov
add
into
mov
sbb
(bad)
mov
jbe
es
jmp
mov
jne
pushf
and
fist
pop
or
pop
ins
fbstp
shl
ror
mov
push
mov
xchg
dec
out
push
fnsave
dec
xor
sbb
jmp
fistp
mov
test
enter
push
add
js
jae
rol
repnz
mov
mov
sbb
pop
push
inc
mov
adc
xor
arpl
inc
mov
repz
mov
loope
lds
xchg
daa
or
sub
ss
xchg
add
fst
sub
or
sbb
add
pusha
(bad)
push
fucom
xor
je
js
push
mov
fs
sub
and
mov
pop
icebp
jmp
lods
add
in
xchg
push
xor
ror
out
xchg
mov
(bad)
std
cli
loopne
test
out
jl
inc
pop
out
(bad)
fidiv
xchg
sub
adc
retf
ins
pop
jbe
mov
add
dec
cmp
cmps
sahf
inc
call
and
(bad)
mov
xchg
movs
sahf
(bad)
ss
mov
js
rcl
sbb
outs
mov
xor
mov
stos
(bad)
retf
jne
ins
nop
pop
jnp
adc
or
push
pop
or
js
xchg
adc
rol
pop
jp
test
mov
xchg
iret
mov
into
aas
or
jmp
mov
xchg
mov
jb
addr16
aaa
jb
retf
jp
and
icebp
and
rol
mov
and
idiv
mov
xchg
push
lds
mov
sbb
xor
cli
pop
test
cmp
test
push
js
mov
xchg
adc
or
push
push
adc
inc
mov
cmps
sbb
sbb
in
sbb
int3
adc
or
sahf
ss
xchg
(bad)
hlt
and
mov
cmp
jns
shl
rol
clc
dec
push
mov
mov
daa
test
retf
sub
xchg
(bad)
call
push
minps
mov
lea
mov
push
fdivp
inc
push
arpl
sbb
sbb
pop
(bad)
icebp
xor
das
dec
mov
das
push
xchg
lods
mov
retf
xor
das
cli
mov
adc
jmp
xor
sbb
inc
push
push
hlt
jne
stos
dec
sti
mov
mov
dec
jg
call
(bad)
scas
icebp
xchg
xchg
push
mov
cdq
inc
mov
outs
jns
imul
mov
mov
xlat
xor
sub
mov
dec
clc
or
jae
jnp
sub
xchg
add
dec
add
xchg
cli
mov
sbb
test
fld
push
cwde
pusha
push
out
imul
adc
and
je
jmp
mov
imul
push
cli
imul
cmp
fdivp
push
mov
dec
mov
adc
out
ror
inc
push
call
cwde
out
sbb
sub
rcr
mov
mov
jo
mov
popf
and
retf
jg
mov
fcomp
ins
push
ins
cmp
xchg
pop
fcomp
pop
sub
pop
out
dec
dec
int
xchg
mov
popf
(bad)
pushf
inc
adc
stos
mov
mov
push
mov
aam
outs
je
mov
fisub
mov
fiadd
inc
xor
or
inc
sub
dec
pop
or
retf
adc
movs
mov
ds
fwait
mov
cmp
cmp
mov
movs
xor
gs
adc
test
fwait
push
stos
push
fld
retf
loop
ss
or
in
call
je
sahf
adc
fisubr
aam
cs
fcos
add
ror
js
mov
stc
cmc
ins
inc
sar
jl
xor
loopne
lea
or
test
lea
fnstenv
cwde
mov
call
in
or
mov
sbb
jmp
adc
std
jmp
stos
sbb
test
sbb
in
jl
sub
xchg
mov
add
xor
push
pushf
stc
repz
push
fisub
(bad)
jo
jge
imul
outs
sbb
add
ds
sbb
jge
(bad)
stc
mov
loope
push
xchg
and
xlat
pop
xchg
hlt
sbb
test
or
stos
popf
adc
movs
int
ins
adc
and
fld
push
(bad)
jno
xchg
fisubr
add
sub
daa
push
xor
mov
dec
mov
lea
mov
pusha
lahf
aad
pop
mov
int3
lds
pop
es
push
xor
sub
push
dec
ins
and
scas
mov
fiadd
ret
mov
movs
push
retf
call
add
xchg
sbb
dec
jae
test
pop
movs
adc
push
ror
ret
or
jmp
push
jle
pop
das
add
inc
out
or
add
ja
or
out
xor
shl
lahf
popf
mov
dec
enter
ret
fwait
in
sub
dec
push
in
out
std
sbb
xor
popf
inc
ret
mov
test
sub
vmulpd
xchg
mov
sbb
and
(bad)
fstp
push
or
in
push
les
out
imul
and
inc
mov
fist
mov
inc
and
xor
enter
dec
out
cmp
je
inc
ja
jle
(bad)
jecxz
sub
(bad)
in
adc
push
dec
sbb
(bad)
mov
mov
dec
dec
lea
mov
sub
mov
xchg
imul
push
add
xchg
enter
inc
ffree
lock
adc
test
jbe
jnp
pop
fbstp
out
or
xchg
mov
jns
mov
or
push
test
mov
rcl
movs
fmul
out
sub
fwait
enter
push
ja
add
mov
in
cmp
sub
dec
loope
mov
adc
cmp
iret
inc
bound
xchg
in
xor
pushf
or
and
icebp
ds
in
pop
add
sbb
xchg
jmp
es
arpl
into
xchg
push
xor
xchg
pop
sbb
xchg
mov
cli
xor
mov
lock
sub
dec
cmp
(bad)
mov
mov
dec
test
pop
ja
push
enter
ret
add
fsub
pusha
adc
cmp
jno
loopne
sub
call
push
jnp
stos
sbb
mov
mov
push
push
inc
(bad)
mov
(bad)
fidivr
imul
test
jl
or
and
jmp
gs
inc
mov
cmp
addr16
imul
sbb
(bad)
daa
stos
cmc
dec
jecxz
pop
inc
mov
jle
pop
lds
and
imul
dec
jle
ret
xchg
jge
jmp
sub
data16
jnp
adc
push
rcl
imul
retf
loope
ret
shr
out
add
cmp
adc
not
addr16
mov
pop
(bad)
sub
jne
js
or
nop
jno
fdiv
pop
lds
sub
fst
jo
test
dec
div
sub
int
rcl
(bad)
dec
mov
push
and
mov
gs
scas
sahf
add
cmps
inc
ja
or
cmp
test
sbb
call
arpl
aam
jmp
les
loopne
test
shl
mov
inc
arpl
test
inc
cmps
call
or
xchg
das
dec
leave
inc
jno
aad
jle
cmp
retf
push
cmp
jmp
stos
ins
mov
mov
js
mov
mov
inc
arpl
and
cmps
push
mov
xchg
push
daa
leave
fwait
gs
ja
sbb
mov
cmp
mov
pop
ror
mov
daa
mov
pop
and
out
ja
cmp
test
inc
or
cmp
bound
repz
in
sub
ja
jnp
loop
mov
std
mov
sub
leave
out
mov
fs
int
mov
rol
shl
cmpps
movs
sbb
test
sub
push
add
jns
mov
aad
and
xor
dec
pop
mov
stos
cmp
dec
xchg
call
div
in
nop
mov
test
sub
or
xchg
xchg
pop
movs
icebp
daa
push
mov
inc
xor
push
ret
pop
ins
sahf
pop
aas
push
pusha
pop
push
push
or
add
push
(bad)
mov
call
and
scas
mov
std
sahf
les
ret
outs
dec
scas
ss
xchg
in
xor
cwde
mov
mov
sub
stos
pop
cld
repz
movs
out
adc
mov
mov
mov
mov
neg
std
cmps
icebp
xor
push
jmp
js
aam
repnz
data16
pop
fistp
ins
sub
inc
sub
cld
mov
pop
dec
adc
sub
int
push
out
sar
sub
ret
stc
fstp
stos
jmp
add
out
mov
pop
xlat
or
movs
sub
in
jmp
cmp
mov
mov
fchs
xor
mov
mov
mov
mov
call
sub
retf
js
mov
or
test
sahf
jecxz
adc
loop
int3
arpl
scas
cmp
lea
lea
std
(bad)
mov
jno
js
or
in
neg
ds
and
inc
pop
mov
mov
sbb
dec
inc
jne
out
jnp
and
loope
es
jp
shl
xor
jne
call
movs
aad
cmp
and
xchg
dec
mov
retf
mov
xchg
mov
cs
jmp
add
call
clc
(bad)
dec
pop
stos
mov
int
jg
cli
lods
call
lock
popf
je
outs
jg
(bad)
push
xor
dec
fbstp
jno
das
dec
mov
cli
shl
xchg
jb
scas
dec
cdq
jb
jecxz
mov
js
xlat
inc
pushf
pop
mov
inc
or
leave
inc
or
mov
arpl
std
xchg
es
or
sub
int3
and
test
push
or
cmc
or
pop
jbe
cmp
leave
mov
(bad)
mov
loop
xlat
inc
inc
repz
enter
pop
cdq
jo
mov
sub
jns
lahf
adc
mov
repz
sbb
cmp
fsubr
sbb
dec
ss
mov
cmps
pop
cmp
pop
xchg
fiadd
sub
jmp
addr16
lea
std
(bad)
fwait
xchg
ret
out
jp
ret
cmps
cmp
clc
mov
mov
pop
loope
out
or
cs
inc
fcom
inc
fsub
jecxz
(bad)
(bad)
and
scas
sahf
into
sub
mul
iret
mov
into
adc
add
cmc
mov
and
mov
scas
lods
xor
in
jg
or
mov
leave
mov
int3
(bad)
(bad)
pop
push
cli
adc
sbb
jne
xor
jl
mov
les
sti
shl
jbe
cmp
xchg
popf
daa
sbb
(bad)
cs
lods
lea
int
jb
adc
add
or
adc
cmps
xor
or
hlt
push
jp
fwait
pop
inc
pop
xlat
out
jmp
out
retf
xchg
in
in
sbb
stos
out
rol
cmp
into
xchg
lahf
push
shr
ins
inc
in
cmps
mov
mov
inc
jecxz
adc
add
and
sub
xchg
xchg
repnz
loop
mov
pop
pushf
inc
out
dec
inc
int
test
adc
cmps
imul
lds
(bad)
fidivr
jno
jmp
bound
shl
in
jns
mov
and
cmp
cs
loopne
sub
push
push
mov
test
loopne
call
repnz
gs
jecxz
pop
imul
pusha
xchg
dec
dec
call
xchg
inc
ret
int3
(bad)
mov
push
push
mov
hlt
cwde
push
push
stc
call
dec
mov
sahf
(bad)
xchg
xchg
xor
xor
lea
jns
xchg
pop
popa
jp
ret
das
add
jae
pop
sub
add
call
adc
dec
arpl
mov
in
mov
movs
cdq
push
stc
std
cmp
mov
xor
fild
and
icebp
add
pop
mov
sub
ret
out
sub
jnp
mov
loope
jb
dec
jae
adc
scas
cmp
xor
sub
jno
xor
call
mov
cmp
mov
fwait
sti
jecxz
push
jg
xchg
scas
cmp
push
lods
sbb
fld
imul
leave
sti
in
pop
sahf
mov
scas
(bad)
loop
loop
imul
pop
icebp
xchg
and
std
push
jmp
cmp
fs
fsubr
pop
(bad)
fldcw
or
cmp
out
adc
(bad)
call
push
push
iret
sub
into
sbb
js
lock
push
inc
jno
jns
jmp
sub
or
mov
or
and
mov
call
dec
add
ins
mov
sbb
and
out
jb
add
dec
sub
sub
cmc
sbb
shl
cmc
das
fs
leave
cmps
aaa
jb
pop
pop
pop
out
test
cwde
enter
xchg
in
mov
mov
mov
sahf
(bad)
das
imul
ins
stos
jge
xchg
jmp
shr
cdq
(bad)
cmc
pop
popf
into
ins
inc
mov
das
js
gs
pop
push
mov
adc
mov
push
fwait
ins
push
cmp
mov
xlat
dec
adc
push
push
or
ss
adc
mov
xchg
xchg
push
(bad)
xchg
jle
stc
adc
es
test
push
loopne
gs
xchg
mov
and
sub
imul
dec
retf
jbe
jp
xor
cmps
ins
test
es
adc
mov
aaa
sbb
retf
sti
mov
int
mov
xor
add
mov
mov
sti
ror
and
test
dec
and
dec
sub
mov
mov
in
(bad)
dec
cmps
add
xor
gs
fisttp
pusha
dec
imul
push
jo
movs
int
add
clc
xchg
mov
dec
je
cdq
cdq
(bad)
add
lea
fwait
push
inc
in
cwde
outs
sub
mov
sahf
ret
inc
ror
adc
pushf
mov
push
shr
hlt
aam
aas
and
test
bound
fnstenv
sar
and
push
push
jecxz
jae
mov
adc
aam
fsubr
push
nop
push
(bad)
ins
mov
mov
and
mov
scas
stc
fisubr
adc
fild
lea
lods
mov
jnp
jl
jg
push
adc
sub
stos
div
inc
in
sahf
or
(bad)
in
sbb
jae
xlat
retf
pusha
or
push
or
mov
jmp
retf
dec
jl
test
push
sub
mov
scas
mov
clc
les
pop
cmp
movs
mov
(bad)
push
jmp
push
xchg
jmp
frstor
adc
es
push
push
es
push
inc
stc
cld
fwait
movs
sub
sub
xchg
dec
and
test
(bad)
pop
out
pop
add
mov
test
das
into
fadd
mov
inc
test
stos
and
push
ror
lds
inc
push
nop
sub
sub
in
(bad)
out
shl
(bad)
or
mov
mov
mov
das
cmp
jbe
or
(bad)
mul
cmp
and
clc
ret
xchg
ins
aas
jae
cmp
mov
sti
cmp
mov
int3
add
loope
pusha
adc
push
dec
fild
mov
lea
dec
sub
sbb
cmp
adc
cdq
aad
mov
ins
xor
sbb
stos
mov
int
jnp
dec
xor
push
pop
mov
stc
fs
sub
(bad)
mov
hlt
cmp
mov
add
hlt
popa
dec
popf
cld
popf
lea
mov
rol
outs
scas
retf
ret
bound
inc
or
sbb
mov
mov
iret
out
aaa
jmp
je
add
mov
cmp
es
or
es
movs
pusha
aam
push
adc
popf
sbb
aad
pop
out
push
mov
or
jnp
neg
mov
inc
std
jle
bound
mov
(bad)
stos
aad
pop
pop
sub
inc
inc
xchg
fisttp
jmp
mov
mov
push
fsubr
dec
adc
push
mov
addr16
mov
repnz
xchg
cmp
lods
xchg
sub
int
cmps
inc
add
mov
mov
adc
jmp
xchg
xchg
xlat
in
popa
mov
ja
add
lods
xchg
add
call
scas
fiadd
into
loop
and
mov
pop
retf
lods
ss
cmp
div
adc
inc
outs
(bad)
adc
pop
clc
ret
shr
adc
pop
ret
or
pop
push
clc
or
shr
aaa
hlt
xchg
imul
cmc
jmp
loope
push
in
or
rcr
xchg
jbe
out
ror
ja
in
and
leave
aas
mov
imul
repnz
push
jo
xchg
pushf
fsqrt
sahf
retf
leave
cs
popa
clc
int3
js
jnp
xchg
outs
es
or
sbb
mov
fs
(bad)
jl
ins
je
(bad)
aaa
retf
pop
xor
pop
daa
xchg
mov
mov
cmps
ins
add
mov
call
stos
ins
cmp
pop
pushf
pop
or
fmul
cmps
into
inc
clc
stos
push
add
mov
add
mov
scas
push
mov
sbb
repnz
rol
loopne
retf
or
mov
repnz
lods
inc
or
add
jmp
cmps
adc
jmp
add
or
cdq
xchg
test
xchg
scas
jns
mov
pop
fwait
in
pop
dec
cs
add
or
sub
mov
data16
push
mov
mov
jo
in
stc
xchg
mov
push
mov
arpl
es
leave
mov
inc
mov
cld
test
leave
push
mov
pop
push
dec
jo
sub
and
xor
int
retf
dec
out
outs
rcl
neg
xchg
fistp
sub
(bad)
daa
pop
push
js
xchg
cmps
aaa
mov
push
jl
inc
push
adc
push
pop
inc
inc
mov
mov
ds
icebp
mov
mov
add
jb
ja
fcomp
push
sub
mul
xor
lods
mov
dec
jmp
push
es
add
xchg
sub
out
mov
mov
ja
test
mov
pop
push
mov
sub
inc
(bad)
aad
dec
mov
xchg
lea
stc
lahf
(bad)
jge
pop
or
jo
push
fidivr
es
lahf
fidivr
out
and
mov
inc
sub
in
pushf
xchg
mov
icebp
xchg
xchg
inc
fwait
xor
xor
jle
jbe
int3
mov
cmp
cld
adc
pop
dec
popf
arpl
retf
sub
and
test
mov
dec
pop
push
int3
sti
ja
call
fistp
and
loope
fcomp
(bad)
fstp
xchg
inc
xor
pop
jmp
pop
stos
test
dec
xor
popa
leave
cmpps
pop
mov
mov
adc
repz
sub
jecxz
fdivr
mov
jl
push
and
push
sbb
sub
sub
lahf
fisub
dec
mov
leave
gs
jne
aaa
repnz
jg
(bad)
into
std
shl
adc
and
ret
jge
cwde
sub
pop
leave
jae
mov
or
cmps
dec
and
dec
jmp
jo
sub
mov
jle
fstp
mov
mov
add
adc
inc
or
push
test
(bad)
mov
mov
cmp
vmovlpd
and
xor
and
test
push
dec
ja
iret
or
add
mov
sub
ja
mov
in
cmp
cmp
xchg
jb
add
stos
jb
jns
sub
dec
jb
ss
addr16
daa
sbb
mov
popa
fstp
pop
xchg
adc
in
pushf
push
pop
cwde
(bad)
ror
shl
fstp
jmp
lods
mov
and
pop
jp
sahf
dec
mov
ins
cmp
aas
cmp
gs
xor
push
and
les
sub
and
test
push
jl
or
add
pop
mov
(bad)
mov
push
or
mov
mov
js
mov
jo
inc
fimul
xor
or
jb
gs
and
add
bound
ds
cli
retf
(bad)
das
or
hlt
mov
pop
cwde
jns
test
ret
push
jae
pop
dec
push
dec
cld
retf
fild
pop
pop
add
jl
stos
mov
into
sbb
and
xchg
fsub
cmps
mov
int3
sub
sbb
test
hlt
ins
nop
lock
(bad)
call
adc
in
imul
(bad)
hlt
gs
jmp
daa
aam
inc
mov
aaa
pusha
sbb
sar
xchg
mov
sbb
pop
mov
jae
and
enter
int
mov
(bad)
cmp
shl
fild
loop
jno
add
xor
scas
std
xchg
loop
push
clc
shl
adc
call
mov
addr16
rcl
push
jae
sbb
inc
add
inc
lds
jno
mov
inc
cmp
lods
push
das
dec
pop
bound
test
imul
and
ror
push
cdq
dec
mov
jno
into
jne
test
fwait
ins
sbb
push
jnp
mov
or
sub
jmp
mov
in
push
lahf
mov
xchg
(bad)
sbb
lods
pop
or
mov
mov
fs
jmp
sti
sbb
gs
and
dec
ins
out
adc
loopne
ror
cmps
dec
iret
sar
dec
in
jne
jl
fld
cli
push
jno
call
push
loop
ret
into
movs
not
pusha
push
inc
ret
repnz
test
inc
pusha
pop
adc
pop
aam
retf
mov
and
push
inc
es
in
adc
sar
push
inc
xor
ficom
pop
inc
std
out
jge
aad
ret
xchg
jecxz
rcr
test
cmc
inc
push
jl
leave
mov
lock
jns
jl
push
push
dec
popf
and
inc
mov
mov
push
cdq
sub
fnsave
mov
sbb
jge
hlt
sub
push
pop
xchg
outs
popa
mov
test
and
mov
xor
inc
js
xchg
sar
cmp
ss
sahf
adc
jmp
outs
push
test
gs
cmp
fadd
push
jp
repz
fsubr
js
inc
dec
adc
sub
(bad)
leave
retf
pop
mov
mov
push
or
stos
daa
repnz
lods
dec
mov
jmp
and
fidiv
lds
xor
mov
sub
out
enterw
xchg
shrd
push
(bad)
xchg
icebp
or
call
push
lock
movs
mov
adc
push
push
imul
popa
mov
add
mov
pop
cld
test
(bad)
jp
outs
dec
and
fwait
jl
jbe
sub
jl
pop
and
clc
or
test
cmp
nop
ss
jmp
xchg
in
fs
popa
mov
out
adc
inc
sub
movsx
dec
pop
mov
inc
mov
push
(bad)
jmp
push
test
stos
cmp
mov
sub
jmp
mov
jo
mov
fwait
jg
repz
push
icebp
aas
addr16
push
lock
lods
inc
add
jns
ins
leave
push
stc
les
xchg
mov
fs
adc
jo
jae
daa
sbb
jge
cli
(bad)
movs
dec
aas
push
xor
dec
xchg
fs
mov
(bad)
adc
inc
xchg
retf
jge
outs
in
scas
xchg
ins
jbe
xor
jle
cli
mov
mov
sahf
out
sub
xchg
or
outs
test
pop
push
pop
add
jle
into
lods
jmp
jl
mov
not
shr
jmp
stc
loope
(bad)
shl
ror
jecxz
(bad)
into
repz
dec
mov
push
cs
xchg
mov
and
mov
mov
pop
ds
fimul
scas
push
arpl
stos
xchg
in
xchg
xchg
frstor
and
rcr
pusha
jne
jns
stc
dec
(bad)
stc
fs
call
retf
loope
or
in
cs
cwde
mov
add
or
inc
bnd
lods
sbb
xchg
jmp
test
push
pop
fisub
daa
les
add
loopne
jns
jns
lods
mov
icebp
or
(bad)
ins
scas
ins
xchg
adc
jb
dec
xchg
cld
data16
lods
aad
xor
mov
fstp
jnp
ret
imul
mov
(bad)
xlat
pop
(bad)
icebp
xor
rol
out
retf
sbb
dec
push
jbe
and
push
xchg
repnz
ins
pop
imul
dec
js
int
push
loop
imul
sbb
shr
cmp
stos
(bad)
rcl
push
in
pusha
sub
mov
cwde
push
mov
or
jmp
sbb
and
cmp
adc
xlat
xchg
aaa
dec
or
in
daa
jecxz
retf
gs
jge
cmc
push
dec
data16
mov
mov
stos
pop
cmp
test
jg
je
sub
and
movs
loopne
add
mov
cmps
(bad)
pusha
vpunpckhbw
lock
(bad)
shl
les
in
xchg
icebp
sub
mov
imul
pop
jg
mul
sub
ss
pop
inc
mov
iret
or
jb
mov
cdq
sub
test
push
pop
das
lock
ss
mov
push
push
cld
popa
xchg
pop
add
cs
inc
nop
les
mov
movs
sbb
(bad)
stos
or
aam
stos
jne
mov
out
push
rol
cs
xor
push
ret
adc
pop
rcr
mov
push
leave
jmp
call
and
jmp
jb
in
es
or
add
add
mov
sub
jl
loope
sbb
scas
jmp
ret
push
inc
in
and
cs
sub
aaa
inc
lds
xchg
cwde
adc
(bad)
dec
repz
mov
ds
aas
inc
ja
xor
inc
ret
mov
cmp
cli
cmp
add
push
fadd
fisttp
stos
cdq
add
addr16
xor
stos
or
and
ss
cmp
pusha
adc
add
pop
lahf
xor
xchg
dec
adc
imul
in
pop
out
pop
loop
into
inc
xor
stos
arpl
push
adc
cli
loopne
add
jmp
sahf
(bad)
sub
inc
jge
adc
push
mov
add
fcom
mov
push
cmp
or
jmp
pusha
jb
rcr
loope
adc
jnp
xchg
sti
push
in
(bad)
mov
xor
jmp
or
dec
mov
test
sar
dec
mov
lds
test
mov
cmp
out
pushf
(bad)
sahf
jno
cmp
mov
inc
push
sbb
mov
stos
push
fidiv
mov
and
add
frstor
nop
outs
lods
adc
cmp
jle
pop
xchg
or
pop
aas
popa
adc
pop
scas
push
cmp
add
shr
cmp
aam
rcl
test
fnsave
mov
ins
movs
js
test
pop
xchg
enter
fisubr
aad
inc
movs
js
xor
mov
std
xor
ret
pop
inc
(bad)
in
out
inc
stos
call
xor
mov
or
mov
mov
stc
push
std
adc
mov
xchg
jb
mov
and
call
cmp
int
aad
sub
ficomp
repnz
inc
adc
div
and
mov
xor
dec
push
stc
xchg
mov
iret
fdivr
call
shl
or
icebp
out
dec
mov
push
inc
sti
inc
cld
mov
sub
jns
outs
lods
and
dec
adc
imul
cld
mov
adc
cwde
adc
mov
aam
pop
jmp
and
sub
repnz
mov
aas
mov
(bad)
dec
lds
cmps
sub
xchg
stos
xchg
xchg
or
push
js
mov
jne
jmp
jb
adc
xchg
(bad)
or
shl
sub
out
daa
sar
xchg
lods
add
std
sub
call
or
inc
fistp
rcr
sub
jmp
mov
mov
jge
jl
cmp
ret
jmp
adc
sbb
push
sahf
pop
jle
ins
bound
in
pusha
add
adc
clc
jge
bound
and
adc
pushw
outs
inc
xchg
out
xchg
dec
sbb
jno
das
cmp
cld
pop
add
adc
jecxz
inc
stos
mov
or
fsubr
popf
push
sub
mov
mov
inc
and
retf
sbb
div
int
sub
push
jae
or
in
pushf
pop
push
and
and
cwde
dec
jns
inc
xor
sbb
mov
jl
imul
cli
repz
jmp
mov
jb
bound
sbb
cmps
syscall
loop
es
das
ds
movs
ret
out
push
mov
push
lea
scas
mov
mov
or
dec
cli
inc
(bad)
aam
ret
loope
retf
in
test
mov
push
push
les
xchg
out
jp
addr16
inc
call
jmp
or
mov
call
cld
mov
ror
nop
clc
push
cmp
jg
cmp
cmp
pop
js
jb
inc
scas
dec
mov
xchg
dec
jle
clc
out
call
retf
stos
inc
test
dec
fsubr
inc
imul
sahf
sbb
dec
lock
dec
retf
mov
push
dec
aam
add
sub
add
rcr
fwait
or
repnz
push
scas
pop
or
push
cld
push
mov
popf
jle
call
cmp
fmul
stos
sti
pop
sbb
imul
mov
sbb
je
sti
or
pop
jbe
ss
pop
pop
xor
sub
enter
pop
add
and
imul
icebp
outs
jb
mov
movs
out
sbb
imul
dec
add
sub
push
jg
mov
nop
xor
ss
mov
inc
stos
or
xor
jmp
cwde
aam
shr
push
pop
in
ret
cli
pusha
out
call
cmp
push
mov
sbb
jae
jg
or
js
cmp
push
pusha
test
cmp
lock
cmp
mov
dec
imul
push
stos
or
cmp
arpl
enter
scas
leave
in
mov
loope
cmp
jl
stos
xchg
mov
mov
les
arpl
xchg
(bad)
mov
hlt
cs
and
scas
lods
and
or
and
(bad)
jg
push
push
add
mov
repz
adc
sbb
mov
and
jecxz
jae
push
sub
pop
jae
(bad)
mov
ror
inc
ins
fwait
jl
sub
out
in
sbb
xchg
cmp
xchg
jae
gs
adc
test
mov
clc
out
mov
add
(bad)
fld
cld
cmp
clc
and
cmps
bound
xor
cmp
movs
mov
fld
jg
mov
xchg
mov
je
cld
inc
jns
push
sbb
test
adc
inc
ja
xchg
loope
mov
inc
jnp
sahf
and
mov
leave
cs
jle
xlat
stos
out
dec
repz
mov
push
iret
loopne
mov
cld
mov
jae
jg
dec
and
add
data16
outs
test
dec
rcr
les
jbe
aas
push
lock
lods
sahf
cmp
ss
outs
pop
add
mov
or
imul
and
les
sub
mov
pop
sbb
loopne
inc
cmp
sbb
retf
xchg
xor
pop
inc
ja
jno
cdq
or
retf
adc
mov
out
int3
std
pop
ss
das
jge
adc
ret
push
fcomp
test
add
ret
in
jne
fisttp
mov
xchg
dec
adc
loopne
xor
inc
push
adc
aad
xor
cwde
mov
arpl
xchg
mov
mov
cmp
cwde
(bad)
dec
add
daa
int3
cdq
mov
xchg
movs
ss
inc
dec
inc
pop
dec
adc
sbb
jno
scas
and
retf
jns
cli
and
and
test
sbb
mov
cmp
adc
out
or
jae
dec
arpl
stos
adc
inc
stos
mov
mov
dec
icebp
ja
xchg
pop
in
or
(bad)
rcl
imul
inc
mov
inc
push
cmp
shl
and
int
push
call
mov
ret
mov
sbb
xor
retf
inc
cmps
jmp
dec
xor
xor
leave
es
pusha
(bad)
ja
jecxz
fsub
aas
xchg
iret
add
fst
pusha
or
imul
loop
popf
xchg
mov
aam
xor
inc
xor
inc
mov
inc
mov
(bad)
in
xor
stos
jmp
pop
iret
in
xor
(bad)
and
retf
jno
rcl
inc
retf
pop
(bad)
or
pop
push
inc
repz
dec
retf
dec
pop
call
aam
push
inc
pop
mov
fnstcw
lock
adc
test
add
cmps
popf
xchg
mov
ins
jae
test
jge
dec
and
lds
pop
imul
mov
xor
jmp
adc
or
sar
jo
rcl
or
mov
mov
outs
(bad)
adc
mov
adc
jp
mov
aad
cmp
sbb
adc
lahf
pop
cmp
ficomp
cmps
sub
inc
jb
jmp
xchg
xchg
pushf
fiadd
ror
iret
cmovne
dec
sub
icebp
mov
or
cli
jne
push
call
sbb
mov
mov
pusha
shl
mov
add
setg
mov
je
sahf
push
push
cmp
push
rol
clc
mov
jmp
inc
inc
mov
sar
retf
ds
dec
test
sbb
jp
ret
out
call
add
outs
or
xlat
inc
mov
(bad)
jge
scas
fidiv
cld
inc
mov
imul
mov
cmp
xchg
pop
add
retf
jne
add
jp
mov
sub
retf
dec
push
pop
pop
sbb
dec
push
cli
fwait
adc
jl
mov
cmps
es
push
cs
loope
(bad)
jg
fwait
lods
out
scas
lea
push
test
inc
shr
xor
call
lods
les
and
das
mov
enter
imul
adc
mov
adc
push
inc
repz
imul
loopne
je
dec
enter
pop
xor
inc
mov
cwde
dec
sub
std
and
dec
sbb
jo
jl
test
out
retf
fs
pop
cmp
lahf
into
dec
cmp
mov
add
pop
lods
dec
xchg
cmp
pop
push
aaa
psrld
das
inc
idiv
pop
rcr
mov
xchg
sbb
adc
mov
inc
cld
fmulp
sub
push
sub
je
clc
test
repnz
mov
pop
lods
mov
push
adc
xor
cmp
inc
mov
sub
or
(bad)
xchg
stos
pop
lods
push
pop
das
fst
scas
jecxz
aam
out
push
push
and
sub
mov
xchg
and
movs
or
push
sbb
fdivr
iret
push
cwde
mov
movs
pop
iret
cmp
data16
mov
test
loop
test
xor
add
jb
and
xchg
sub
mov
not
inc
call
pusha
inc
and
push
cmp
or
dec
fs
push
adc
jmp
mov
mov
adc
xchg
xor
fild
aam
test
pop
sar
aad
mov
adc
fsubr
cmp
adc
shl
fimul
je
push
das
inc
call
je
movs
data16
outs
in
les
int
(bad)
scas
test
mov
dec
mov
jmp
xchg
mov
pop
mov
fnstcw
dec
rcr
xchg
cmp
xchg
(bad)
cli
xchg
xchg
sub
sbb
sub
xchg
add
sar
inc
out
pop
mov
dec
mov
ret
repz
dec
psrlq
sbb
in
push
mov
adc
(bad)
push
jb
dec
ror
or
mov
ins
add
xor
dec
out
test
cld
ror
mov
pop
mov
out
mov
xchg
xchg
push
dec
mov
jbe
add
lods
mov
pop
cmp
sbb
xchg
jne
jne
and
dec
cmp
cmp
adc
sub
mov
pop
inc
test
or
dec
mov
shl
sub
push
mov
mov
push
int
and
mov
xor
xor
mov
and
add
ret
mov
mov
das
xor
xchg
cs
mov
ret
test
sbb
shl
aam
pop
test
nop
(bad)
adc
sbb
cmp
(bad)
in
inc
ds
data16
je
sub
mov
imul
std
or
popf
fsub
adc
shr
mov
xchg
test
xor
call
mov
(bad)
das
dec
jmp
dec
in
mov
push
mov
push
pop
xlat
in
aaa
cdq
mov
sub
xchg
pusha
pop
in
in
mov
inc
std
in
jbe
adc
sub
inc
data16
push
lds
mov
daa
mov
aad
push
mov
neg
push
mov
es
das
xor
loop
stos
jne
mov
xchg
xor
dec
retf
retf
xchg
in
xor
mov
dec
mul
mov
pop
hlt
or
fwait
(bad)
popa
push
js
sub
mov
push
adc
push
pop
cmp
fbstp
inc
xlat
adc
inc
add
dec
scas
add
inc
adc
loop
dec
or
rcl
outs
mov
cdq
xchg
xchg
xor
push
mov
clc
inc
and
xlat
pop
push
arpl
ins
dec
les
mov
aaa
fimul
inc
pop
sahf
xchg
(bad)
clc
push
cld
push
and
pop
fdiv
dec
sub
cli
in
test
gs
jnp
fs
mov
imul
pop
add
jp
mov
cwde
jmp
jl
cmps
pop
cld
sti
pop
je
pop
aaa
push
xchg
mov
or
xor
mov
retf
add
les
dec
jp
inc
repz
ds
cld
movs
jmp
mov
(bad)
fisttp
in
movs
xor
std
mov
cmps
(bad)
outs
sub
retf
add
pop
cwde
cli
lods
aad
out
mul
jl
in
and
rep
rol
dec
out
js
mov
outs
retf
mov
sub
inc
mov
inc
ret
dec
out
out
jne
leave
call
lods
enter
out
int
xlat
or
(bad)
mov
pop
xchg
inc
sti
and
pop
popf
jb
call
xchg
fisub
fdivr
scas
mov
cmp
cmp
movs
lea
fistp
xchg
push
aad
out
sti
sub
push
ror
mov
repz
cmps
fdiv
sub
mov
mov
sub
aam
and
idiv
cdq
add
ds
(bad)
std
or
cmp
out
mov
and
ror
retf
mov
cmp
int
lds
call
popa
jmp
fisubr
pop
in
cmc
pop
push
test
lock
xor
(bad)
ds
adc
rol
jnp
sti
mov
ins
jmp
ss
clc
(bad)
aas
movs
mov
test
aaa
retf
inc
sub
ds
mov
popa
scas
data16
clc
cmc
cs
xlat
jle
mov
ss
xchg
ret
mov
dec
cmps
push
inc
mov
rep
lods
xor
and
imul
jnp
fmulp
(bad)
mov
ja
rol
and
cmp
fdivr
add
lahf
es
in
out
cmp
jo
add
icebp
cli
fmul
sbb
dec
movs
aaa
dec
xor
jmp
cmp
push
shl
out
mov
ss
pop
and
adc
call
test
into
inc
cmp
mov
dec
cmps
cmp
in
clc
xlat
ds
and
fld
xchg
mov
enter
sbb
cmp
mov
(bad)
mov
fidivr
nop
and
push
das
pop
xchg
out
xor
aad
jmp
pop
cmps
inc
cs
pushf
and
popf
push
add
xchg
push
add
(bad)
jmp
ret
sub
clc
in
cmp
xchg
jae
inc
add
retf
dec
cmp
jmp
shr
xlat
mov
jle
jo
adc
xchg
in
push
jns
jp
dec
and
stc
mov
aaa
adc
sbb
sub
sbb
mov
or
mov
out
cdq
mov
dec
out
xor
sbb
fist
stos
pop
mov
push
xchg
loop
fcom
lods
dec
lock
test
sbb
data16
sbb
xchg
movs
cmp
lea
pusha
or
fdivr
adc
dec
sti
inc
adc
cmc
cmps
aaa
out
movs
rcl
jnp
aaa
sub
call
jbe
addr16
push
nop
lds
js
xchg
mov
jge
and
jge
push
jne
arpl
movs
or
mov
call
jno
scas
aas
pop
mov
mov
mov
aam
repnz
cmp
aaa
outs
sbb
pop
cwde
aas
inc
pop
and
push
jno
jmp
rcr
xchg
scas
dec
mov
dec
stos
test
sub
xor
and
dec
stc
clc
mov
imul
xor
jae
stc
mov
test
(bad)
fsub
pushw
arpl
out
sahf
retf
das
add
dec
xchg
retf
inc
cmc
sub
mov
jp
jp
lock
jmp
mov
mov
(bad)
loop
cwde
cwde
lods
xchg
sub
mov
les
movs
xchg
lahf
lahf
leave
sbb
xchg
inc
add
icebp
in
(bad)
test
pushf
out
hlt
pushf
ror
cmps
fmul
leave
pushf
sbb
rcr
jmp
mov
xchg
ret
mov
cmp
repz
repz
dec
pop
test
nop
jmp
sub
inc
imul
push
int3
hlt
adc
retf
lock
mov
adc
adc
push
stos
call
jmp
inc
cmp
adc
cmp
retf
mov
lods
sub
call
test
xor
test
int3
dec
(bad)
aam
fs
jmp
sti
pop
dec
push
xchg
stos
sub
clc
mov
push
lods
jl
data16
sub
iret
arpl
push
daa
jecxz
outs
xchg
adc
lock
sub
pusha
inc
push
mov
sbb
jp
mov
jmp
dec
push
jns
sbb
gs
sbb
div
test
int
jb
jnp
fbstp
xor
sbb
mov
lock
mov
mov
jecxz
(bad)
mov
add
pop
xor
outs
nop
jmp
pop
test
mov
xchg
fistp
fidiv
shl
jb
push
imul
add
loopne
mov
add
mov
add
in
mov
out
jo
mov
add
rcl
xchg
and
dec
jmp
dec
(bad)
retf
add
pop
(bad)
cwde
fnstcw
loopne
push
and
and
fwait
arpl
loop
pop
add
outs
fcomp
inc
sbb
cmp
dec
addr16
fisub
jne
test
aam
ret
inc
mov
in
shr
jmp
mov
test
clc
fwait
scas
adc
addr16
xchg
pop
jne
repnz
and
js
add
ds
jg
adc
push
arpl
cmp
fdivr
ror
xor
or
mov
mov
sti
xor
pop
jae
mov
adc
jb
repz
mov
dec
rol
(bad)
fidivr
xchg
adc
lods
xchg
add
test
js
xor
pop
in
mov
xchg
mov
xchg
push
lock
enter
xor
pop
and
in
call
ss
pop
les
clc
push
in
(bad)
fbstp
adc
dec
in
pop
out
out
and
push
mov
mov
sbb
sti
fsub
push
sbb
mov
arpl
sbb
add
adc
mov
jp
iret
iret
aas
aaa
pushf
fistp
pop
jno
jmp
not
cmp
mov
popa
or
xchg
dec
jmp
push
(bad)
cld
test
xchg
sub
inc
ret
and
add
pop
fst
movs
ins
add
cwde
out
mov
in
ds
ds
loop
jge
lods
jb
cwde
sbb
mov
jp
not
inc
stc
xchg
sar
test
ret
ror
add
push
pop
cmp
shr
repz
out
enter
inc
or
sub
fdiv
mov
jb
out
mov
sbb
push
push
jge
ds
adc
jmp
ret
repz
outs
and
lods
dec
and
int3
in
call
sti
sbb
js
xor
(bad)
jns
xchg
rcr
int
cs
int3
shl
cmp
sbb
clc
inc
add
push
mov
pop
fidivr
sub
mov
out
lea
dec
in
repnz
in
jge
js
push
inc
add
dec
jne
test
out
icebp
retf
xchg
mov
int
out
or
xor
and
fdiv
mov
adc
add
xchg
retf
call
push
jecxz
lahf
adc
push
stos
sbb
repnz
xchg
gs
pop
jg
add
mov
or
pop
inc
aad
cmps
mov
sub
cmp
shl
or
ds
pusha
shl
cmp
pop
iret
xlat
aam
push
xchg
add
stos
xor
add
arpl
jle
and
xor
xchg
fidivr
fild
loop
inc
xchg
fwait
mov
push
stos
aam
mov
cli
jno
in
in
dec
ret
jp
pusha
retf
xchg
pop
fisubr
sub
push
xor
mov
xor
das
or
xlat
xor
dec
outs
and
out
fcomp
mov
add
push
sub
pop
push
loopne
or
jmp
sbb
push
cmp
daa
rcr
dec
test
inc
jle
scas
xor
fild
mov
cmp
inc
shl
and
pop
jae
xlat
je
fimul
lea
cmp
pop
aas
in
aaa
jmp
jne
sub
outs
xchg
ja
and
cmp
out
inc
aad
pop
fldln2
test
jno
out
es
sub
mov
mov
mov
or
xor
fmul
sbb
xchg
ds
adc
retf
enter
sbb
inc
xor
dec
add
pop
test
pop
and
push
adc
mov
push
ret
mov
lods
mov
push
jg
and
pop
daa
add
mov
jbe
and
or
jo
leave
pop
fdiv
repnz
mov
inc
or
mov
aam
movs
sbb
call
and
sbb
xchg
cli
aad
neg
pop
(bad)
mov
and
inc
push
imul
ret
add
loop
cmp
adc
sahf
rcl
repz
mov
jbe
xchg
inc
and
xor
sub
jb
scas
int3
xor
cdq
ret
jmp
adc
rcl
scas
xchg
sti
xor
enter
mov
pop
cmps
xor
lods
jmp
mov
(bad)
cmc
mov
jge
push
jno
ja
push
mov
jmp
jmp
ret
jge
push
xchg
mov
jnp
dec
test
retf
jl
(bad)
repz
aam
mov
and
aaa
jbe
jmp
adc
loop
xchg
out
stos
dec
jl
(bad)
std
in
fs
lds
xor
les
(bad)
ins
shl
xor
call
fwait
movs
pop
add
retf
enter
jp
adc
ins
out
dec
mov
cs
shl
push
adc
jp
test
stos
mov
hlt
adc
ja
mov
scas
mov
lahf
das
push
xchg
lods
and
js
jmp
in
sub
les
cmps
lock
xor
loope
or
bound
call
(bad)
xchg
pop
adc
clc
pop
xor
inc
sub
add
sti
enter
jmp
(bad)
test
add
jmp
cwde
fidiv
or
stos
ds
mov
mov
icebp
in
push
sti
mov
xchg
not
in
jg
out
mov
and
jle
mov
mov
mov
std
lods
lock
xchg
push
cmp
or
fst
mov
stos
adc
push
rol
inc
mov
mov
adc
aaa
retf
(bad)
push
add
inc
jne
mov
iret
loopne
jl
dec
dec
sub
and
fldcw
popa
xor
fisubr
ins
(bad)
aaa
nop
cmp
cs
mov
retf
or
or
or
cmp
pushf
push
inc
mov
stos
ret
inc
call
stc
add
leave
out
imul
xor
xchg
stos
ss
cmp
push
or
sbb
nop
or
jae
mov
scas
inc
imul
outs
cli
int
jge
imul
(bad)
lock
pushf
shl
cs
and
popa
fimul
jo
inc
sub
push
push
outs
and
fsubr
push
popa
(bad)
sbb
xlat
ins
xchg
test
icebp
mov
pop
xor
jp
adc
push
test
mov
lods
and
test
std
jle
jne
xlat
lods
and
jp
lods
cmp
inc
jbe
test
popa
adc
adc
mov
jg
retf
push
sub
mov
add
inc
je
add
adc
xchg
outs
dec
popa
lahf
jae
cli
mov
mov
pop
xchg
das
jecxz
inc
xor
aad
out
sbb
or
xor
mov
sbb
in
adc
or
or
das
pop
lock
inc
daa
cmps
pop
int
push
and
std
ins
sub
mov
cmc
inc
xlat
push
iret
int
dec
inc
icebp
iret
ss
in
std
ja
std
sbb
jnp
push
jns
push
fidiv
int
cdq
or
push
and
stos
sub
repz
mov
rcr
sbb
ret
pushf
dec
dec
xor
jns
xchg
and
daa
mov
dec
pop
inc
shl
test
xor
cli
imul
xor
into
and
int
mov
aad
mov
push
lahf
dec
mov
scas
or
leave
popf
jnp
imul
xchg
mov
pop
movs
mov
(bad)
outs
mov
out
jne
add
mov
dec
into
aas
and
jns
ret
nop
xor
int3
outs
stos
rol
stc
add
imul
or
fmul
bound
mov
cmp
pop
mov
push
cmp
xchg
les
xor
popa
mov
call
pop
cli
push
(bad)
xchg
jns
shl
lahf
xchg
rcl
cmp
and
sbb
call
vaddsubps
iret
push
aaa
(bad)
push
pop
dec
neg
cmp
imul
mov
inc
jae
mov
cwde
clc
pop
pushf
mov
inc
ficomp
cdq
push
mul
xor
or
jne
je
add
adc
imul
outs
aad
adc
jns
cmp
jnp
adc
adc
inc
cmps
dec
fisubr
ret
ficomp
jbe
push
push
loop
mov
and
(bad)
lea
add
fistp
xchg
push
cmp
sbb
jge
mov
fcom
pop
pop
jle
movs
jne
cdq
dec
adc
xchg
imul
push
aas
(bad)
jno
push
sub
loopne
int3
retf
sbb
repnz
dec
test
inc
lock
lods
adc
outs
test
dec
adc
pop
and
inc
sub
enter
xor
add
xchg
imul
cbw
xlat
ins
adc
jle
xor
jle
test
adc
add
sub
inc
xor
repz
aaa
mov
js
cmps
add
sbb
cmp
mov
add
sahf
sbb
(bad)
cmp
mov
adc
push
popf
xor
sub
movs
hlt
inc
je
rol
or
aas
jbe
lock
das
dec
sbb
cmps
push
sti
leave
jno
fmul
shl
imul
xchg
pop
xor
xchg
adc
cmp
add
loope
push
bound
push
je
xchg
xor
and
dec
ss
enter
cmp
xchg
jo
jne
ins
es
mov
leave
shl
nop
popa
cmps
xlat
stos
pusha
scas
adc
mov
in
ret
inc
mov
mov
dec
js
ffree
test
push
mov
mov
je
xlat
hlt
data16
xchg
mov
mov
out
xchg
mov
pop
mov
push
je
out
xor
loop
pop
sub
daa
(bad)
setne
pop
mov
xchg
mov
pop
scas
add
mov
rol
hlt
pop
icebp
nop
(bad)
pop
pop
sahf
mov
out
jl
inc
mov
mov
icebp
popa
pop
fcom
inc
xchg
adc
pop
add
call
lock
mov
sbb
add
push
out
or
sub
ret
nop
sub
mov
inc
sub
inc
lahf
mov
and
idiv
jns
dec
dec
dec
and
ins
or
hlt
sub
ret
add
mov
sbb
fprem
ja
ror
pop
mov
out
jb
sub
es
mov
test
fst
xlat
pop
push
imul
ins
je
shr
mov
push
sbb
or
cmps
jno
inc
jns
cmp
xor
out
pop
or
inc
mov
data16
mov
pop
jnp
jmp
inc
adc
inc
gs
jae
int
nop
sbb
shl
arpl
and
dec
add
stc
sub
jp
imul
int3
push
sub
rol
sub
icebp
and
xchg
dec
jl
xor
add
xor
xor
inc
jbe
xchg
push
inc
sbb
push
repnz
mul
dec
cmp
out
repnz
(bad)
cld
mov
ds
or
pusha
mov
repz
int
and
push
sbb
movnti
and
xchg
xchg
adc
jecxz
jne
aas
add
popa
jne
and
xor
dec
test
mov
mov
cld
out
iret
or
push
test
or
retf
ins
lods
fidiv
nop
jecxz
mov
mov
adc
jae
mov
(bad)
dec
push
push
jne
and
fnstsw
inc
fs
mov
push
mov
nop
jmp
cwde
mov
pop
xor
mov
inc
sahf
jae
pop
push
scas
cdq
jmp
retf
cmps
xor
fwait
ror
outs
jo
test
sbb
push
pop
into
mov
push
loopne
jae
inc
cmc
dec
push
imul
rep
lds
jno
test
jno
mov
out
ja
data16
mov
sbb
jo
push
dec
stos
repz
jo
jnp
inc
pop
mov
cmps
stos
pop
or
test
ror
and
rcr
adc
pop
nop
ficom
jmp
popa
cmp
and
(bad)
icebp
test
test
(bad)
and
jne
mov
xchg
mov
jo
xor
xchg
cdq
cmp
push
dec
xchg
or
ins
lods
pop
push
or
fwait
in
out
xchg
std
and
ja
in
dec
and
push
cmp
imul
jmp
adc
int3
int3
nop
mov
mov
mov
xchg
test
imul
adc
mov
pushf
inc
icebp
retf
and
test
fmul
cmp
pushf
gs
xor
retf
mov
stos
cmp
rcl
imul
push
mov
aam
cmp
clc
aad
push
(bad)
shr
scas
pusha
shr
pop
inc
lock
pop
test
jbe
cmp
ins
push
or
ror
cmp
iret
jg
cwde
int
icebp
pop
adc
cmp
adc
push
push
push
xchg
pop
cmp
(bad)
pop
mov
stos
dec
in
es
jl
ret
es
pop
hlt
or
xchg
fist
pop
retf
mov
into
cmp
shl
arpl
out
push
sub
(bad)
mov
pop
push
jo
fcom
inc
imul
shr
sbb
inc
aaa
sbb
jmp
loopne
(bad)
jne
cwde
dec
xchg
xchg
in
(bad)
push
sbb
xchg
lods
dec
shl
loope
nop
or
test
add
lods
aam
ret
retf
mov
jb
leave
outs
int3
rol
ds
ja
in
dec
test
jge
fiadd
sti
inc
xchg
xor
jge
push
stos
and
and
je
pop
(bad)
inc
mov
scas
scas
mov
popa
and
es
xchg
das
rcl
inc
jl
adc
jns
sbb
and
aad
xchg
and
(bad)
jae
das
aaa
pop
dec
jo
loope
adc
adc
hlt
mov
xchg
cmp
in
dec
inc
jne
dec
mov
out
dec
fwait
fwait
test
pop
jle
mov
cs
sub
das
push
add
and
loope
(bad)
and
mov
jae
js
fwait
retf
cmp
add
mov
aaa
xor
mov
test
inc
clc
jmp
shr
jnp
mov
or
mov
push
nop
cmp
shl
shl
mov
data16
xor
mov
jg
jge
xor
sbb
imul
fst
in
jmp
ror
lea
ror
not
add
bsf
adc
mov
mov
sbb
mov
add
test
les
sub
int3
pop
test
push
jge
into
xor
rcr
jecxz
ficomp
imul
frstor
jmp
and
aaa
cmovle
(bad)
ds
retf
jae
mov
sub
sahf
scas
xor
pop
xabort
cmp
and
or
or
jae
enter
or
sbb
sbb
cs
sbb
xchg
fldpi
nop
jb
addr16
shr
add
(bad)
xchg
scas
or
jo
pop
jbe
ret
push
jbe
mov
add
mov
add
loope
sub
fisub
loop
mov
call
add
inc
mov
pop
xor
int
xor
xchg
add
movs
inc
and
out
cmp
dec
dec
in
sub
push
retf
fsub
shl
mul
and
sub
xlat
pop
test
pop
imul
call
rol
dec
outs
push
sbb
nop
sub
or
popa
push
xchg
idiv
arpl
movs
add
mov
out
push
mov
sbb
bound
adc
scas
ins
idiv
hlt
mov
or
popf
enter
jbe
ja
xchg
xor
sub
sub
shl
es
xchg
push
lods
rcr
out
xchg
dec
xchg
in
and
inc
cmp
mov
and
sbb
or
cmp
mov
sub
or
cmovns
stos
loop
loopne
adc
or
cmp
sbb
std
mov
or
pushf
mov
movs
(bad)
into
push
push
stos
sbb
add
in
lds
dec
(bad)
(bad)
and
push
movs
mov
adc
inc
mov
std
sub
out
icebp
sbb
mov
lods
xor
bound
pusha
xchg
mov
mul
outs
mov
cld
sub
cld
(bad)
(bad)
fs
jmp
call
mov
xor
pop
je
jle
jle
mov
adc
mov
or
sti
adc
(bad)
cmp
out
or
or
pop
mov
sub
lock
sbb
sar
jle
std
cmp
cwde
fsub
mov
pop
push
fild
(bad)
and
ficomp
adc
and
jo
lods
push
cli
cmps
or
cli
adc
push
in
int
cmp
cld
leave
loope
imul
pop
xor
xchg
std
jnp
jle
test
or
cli
into
pop
int3
fcom
movs
bound
lea
inc
mov
mov
lahf
mov
mov
ds
adc
cmp
cmp
push
mov
movs
imul
mov
daa
leave
sub
adc
(bad)
pop
jno
bound
sub
cdq
jmp
pushf
je
bound
mov
outs
js
mov
lods
stos
xchg
in
jns
sbb
push
in
loope
sbb
pop
cmps
inc
add
mov
in
adc
jns
fs
jecxz
or
xchg
dec
push
jo
pop
xchg
mov
popf
js
jno
xor
pushf
push
mov
test
fld
ret
pop
cmp
call
push
add
pusha
repnz
xor
xchg
inc
mov
mov
cwde
cld
imul
hlt
xor
lock
and
cmc
mov
bound
sub
mov
or
lods
push
fyl2x
or
xor
daa
xlat
pop
int3
pop
out
test
push
ja
mov
push
jecxz
(bad)
mov
pop
inc
push
pop
sub
in
xchg
jl
loopne
xor
mov
pop
in
(bad)
push
pop
cmps
nop
mov
mov
retf
les
ins
xlat
xlat
movhps
sbb
mul
ins
jnp
mov
fld
out
adc
ds
adc
pop
xchg
imul
mov
xchg
pop
inc
ins
mov
imul
std
call
js
imul
(bad)
mov
hlt
push
inc
push
adc
pop
cmps
test
inc
cmp
push
and
(bad)
jg
jno
xor
fcom
(bad)
ss
sbb
sub
popa
ins
inc
mov
dec
and
nop
dec
dec
xor
loop
loope
push
push
cmps
pop
mov
pop
fisttp
fsub
cmps
ja
xchg
or
or
jge
mov
mov
sbb
dec
push
jns
loopne
inc
jnp
jmp
fsubrp
pop
in
adc
dec
jge
leave
sbb
jp
shr
jmp
inc
dec
aas
pop
mov
jmp
les
mov
rcl
movs
or
data16
je
gs
sub
inc
cmc
mov
xor
sti
mov
sbb
(bad)
xor
pop
jle
mov
adc
cmc
lods
gs
xchg
sub
fbstp
xchg
mov
xchg
adc
bound
or
lods
and
dec
aas
mov
jg
mov
xchg
mov
ret
(bad)
or
popa
scas
mov
test
call
cmp
pop
adc
mov
push
dec
movs
or
push
or
ins
sbb
aas
pusha
jb
lea
repnz
jle
push
and
pusha
das
add
mov
call
movs
and
push
leave
xor
jg
or
cli
mov
mov
add
mov
adc
mov
cmp
push
repnz
outs
jmp
mov
(bad)
jnp
or
add
stos
xchg
inc
enter
es
adc
push
sar
pop
fidiv
push
xchg
push
sub
sub
movs
fisttp
(bad)
(bad)
retf
xchg
test
inc
aaa
dec
jmp
push
ja
mov
mov
dec
int3
shl
loopne
retf
dec
dec
stc
lock
xchg
rcr
std
cmp
jns
adc
adc
push
add
cmp
sar
inc
dec
aaa
mov
mov
sbb
jge
test
dec
addr16
mov
add
cli
and
jg
jl
dec
adc
rcl
ss
xor
ror
stos
enter
cli
xchg
stc
in
ins
enter
(bad)
int3
xor
sub
mov
lahf
cmp
stos
test
imul
push
test
adc
cmp
sbb
pop
xchg
out
add
jg
ja
jl
in
aaa
fld
jmp
imul
inc
(bad)
mov
scas
data16
das
jl
fnstenv
push
cmp
inc
xchg
addr16
data16
rep
xchg
mov
add
cmp
adc
cld
cmp
enter
and
mov
movs
jmp
inc
push
out
pop
jg
movs
mov
sbb
mov
sub
add
das
pushf
jnp
jmp
loopne
mov
icebp
xor
mov
sbb
dec
xor
lods
mov
xchg
mov
sub
cmps
cmps
mov
adc
mov
imul
adc
imul
inc
or
leave
cdq
xchg
dec
mov
out
jge
xor
jo
pop
add
ss
push
sbb
and
mov
cmp
and
mov
movs
out
movs
addr16
mov
jns
fdivr
sahf
add
mov
mov
sbb
push
pop
jbe
mov
jmp
pop
leave
addr16
add
out
(bad)
fcmovb
xor
sahf
clc
mov
mov
cmp
jnp
ret
dec
mov
out
push
xchg
(bad)
mov
int
jae
fbstp
or
push
rcl
cs
aad
cmp
jg
add
xor
pop
mov
add
fwait
in
imul
inc
push
adc
cmp
jae
iret
and
ret
dec
or
mov
inc
inc
push
adc
sub
sbb
mov
retf
test
imul
inc
(bad)
(bad)
iret
clc
fdivr
xchg
loopne
cmp
and
mov
jmp
inc
ret
aaa
loopne
dec
push
or
into
fld
repz
push
mov
mul
add
sahf
popa
add
mov
aam
sub
addr16
dec
mov
icebp
loopne
push
or
inc
daa
push
daa
jge
stc
push
sbb
movs
inc
ja
lea
imul
arpl
sbb
push
cmc
jp
outs
dec
mov
ins
scas
(bad)
pop
mov
inc
or
repnz
cwde
mov
sbb
ror
gs
scas
cmp
cmps
pop
ret
mov
rcr
xchg
fs
movs
push
les
add
test
jecxz
mov
stos
aas
or
fs
aaa
shl
clc
xor
pop
in
fcomp
mov
(bad)
sbb
into
and
jmp
std
and
inc
cwde
sbb
bound
xchg
mov
in
jo
por
jmp
adc
outs
sbb
jbe
cmp
loop
adc
mov
fmulp
call
adc
aas
jno
cdq
dec
arpl
bound
mov
cmps
int
push
shr
fwait
add
jge
add
mov
push
sub
pop
cmps
or
pop
aaa
aam
int
mov
xchg
mov
in
adc
iret
sti
loope
mov
mov
push
mov
test
jp
pushf
shr
pop
cmp
mov
hlt
sbb
mov
inc
mov
lahf
adc
xchg
jbe
stos
pop
pop
adc
out
jmp
daa
inc
lods
jle
push
outs
cmp
out
mov
fisttp
or
adc
movs
mov
clc
fs
xchg
jae
jno
or
xchg
add
pop
cmp
push
imul
xchg
jmp
or
jl
out
aad
stos
out
and
aam
test
inc
sbb
ss
aaa
xlat
sbb
mov
push
sahf
mov
and
push
xchg
mov
mov
xchg
sub
dec
sub
icebp
sti
jl
xchg
adc
push
in
jg
sub
add
repnz
icebp
ds
xchg
sub
stos
pop
and
jp
enter
scas
movq
mov
fwait
in
mov
mov
inc
dec
gs
cmp
jno
xor
xor
shr
adc
pop
xor
idiv
call
push
ror
cli
add
pop
pop
or
and
and
arpl
xchg
dec
push
arpl
or
jge
jmp
imul
rcr
push
push
cli
cmp
sub
xor
enter
mov
or
jae
dec
stos
mov
clc
dec
and
sub
sub
(bad)
xor
cdq
imul
into
bound
sbb
lahf
dec
and
nop
leave
inc
mov
jmp
mov
enter
mov
sbb
mov
push
mov
push
adc
call
jb
add
sbb
push
pop
popf
push
dec
cwde
shl
xchg
pushf
cmps
dec
xchg
stos
mov
dec
mov
clc
mov
jmp
xchg
dec
cmp
test
xchg
mov
inc
in
ffree
retf
jle
adc
or
pop
and
xchg
jo
mov
fstp
cmp
(bad)
outs
or
pop
xor
dec
pop
das
add
out
aas
int
aam
test
hlt
mov
mov
psubq
cli
inc
test
fnsave
repnz
pop
mov
fiadd
adc
mov
shr
cdq
and
mov
into
test
and
idiv
pop
or
push
inc
rcl
das
push
shr
repnz
test
leave
lock
in
cli
inc
fisub
sub
add
je
(bad)
dec
mov
(bad)
mov
ficom
popf
sbb
ins
stc
into
or
jp
call
ins
inc
(bad)
jl
adc
sub
sbb
or
jns
push
daa
bound
xlat
sbb
clc
jmp
adc
push
inc
push
lahf
jg
push
adc
dec
cmp
sub
fild
ror
(bad)
(bad)
leave
jmp
retf
pop
add
stos
mov
pop
jp
pop
ficom
add
(bad)
mov
out
sti
arpl
call
adc
mov
test
cmc
add
pop
jmp
push
je
and
mov
test
pop
cmp
or
push
or
xchg
in
sahf
sub
ret
movs
pusha
std
mov
dec
fidiv
sahf
fisubr
pop
loopne
sbb
cdq
mov
or
push
in
cmc
les
jg
shl
mov
test
fcom
dec
ror
cmp
dec
xor
cmp
aad
or
test
dec
sub
js
ret
out
cmps
movs
leave
or
cld
and
or
cwde
fdivr
in
or
in
ins
adc
jno
repz
inc
int
adc
ds
mov
push
add
cmp
fidiv
push
sahf
push
mov
inc
ins
adc
inc
add
dec
jb
jnp
ret
mov
inc
or
push
jmp
sbb
or
lds
or
inc
and
xor
add
outs
jmp
ins
cli
ins
mov
sub
not
test
test
inc
cli
cdq
add
cwde
je
sar
sti
cmp
(bad)
into
std
pusha
jo
cli
and
sbb
mov
mov
fdivr
and
inc
push
and
call
jmp
outs
cmps
mov
retf
stc
jns
adc
imul
jb
mov
lds
inc
out
cdq
push
and
in
mov
in
pop
mov
mov
call
aam
ret
sub
sub
sbb
out
lock
jne
dec
jne
xor
test
sub
in
sbb
and
or
sbb
inc
mov
(bad)
gs
pop
outs
inc
push
pusha
xchg
outs
or
std
dec
mov
and
mov
aaa
add
ds
hlt
sub
adc
fstp
punpckhbw
rcl
add
dec
mov
sub
ret
add
int
mov
sub
and
and
mov
inc
jae
push
mov
cwde
add
xor
mov
or
jecxz
mov
btr
stos
repnz
or
fsubr
imul
ja
enter
mov
popa
fwait
and
pop
jmp
mov
xchg
repnz
test
push
or
(bad)
outs
mov
or
and
xchg
pop
lods
mov
xchg
retf
rcr
and
pop
cdq
sbb
(bad)
mov
dec
mov
adc
or
in
std
sbb
std
add
mov
clc
clc
add
sub
fdivr
jae
jo
xor
cli
movs
mov
or
add
sub
cmc
mov
(bad)
sbb
xchg
loope
sub
sar
fistp
iret
out
and
cli
pop
lds
fistp
ror
inc
ret
xor
test
ins
xchg
adc
sbb
aas
dec
cld
cli
adc
lods
ja
inc
cmc
nop
jmp
aad
sti
ja
imul
xor
sbb
outs
cmp
(bad)
dec
jle
push
pop
pop
js
pop
or
retf
push
imul
outs
mov
movs
add
and
add
adc
mov
xchg
(bad)
(bad)
out
xor
and
add
adc
loope
out
sbb
call
or
lods
jmp
fwait
mov
test
mov
out
cdq
retf
(bad)
fst
movs
(bad)
shl
pop
push
dec
es
jp
mov
test
add
push
(bad)
fs
fnstenv
mov
lea
jne
pop
fidivr
and
imul
mov
lock
mov
pop
jg
sbb
jo
cmp
ja
mov
std
lods
pusha
es
push
not
pop
sbb
enter
inc
jmp
cld
out
psubw
aas
call
mov
outs
inc
xchg
xchg
pop
adc
std
fstp
sahf
js
fiadd
popa
stc
add
test
dec
dec
xlat
(bad)
fsub
push
fmul
popa
(bad)
movs
jge
ret
(bad)
push
or
add
add
push
add
bswap
cmp
icebp
stos
jp
jae
stc
mov
ds
ja
mov
sbb
mov
jecxz
dec
adc
and
cmp
cmps
adc
call
dec
xor
(bad)
or
cmps
stos
js
adc
ins
pushf
repnz
jmp
fmul
retf
icebp
push
jmp
sbb
mov
jecxz
addr16
fcom
test
hlt
fs
shr
xor
loop
retf
ret
rol
sbb
pop
and
mov
fadd
lock
int3
dec
or
addr16
ret
add
jb
xchg
dec
pop
xchg
push
xchg
adc
push
cs
push
into
test
sbb
push
mov
pop
mov
mov
lods
pop
jge
es
jle
mov
ror
dec
fnstenv
icebp
into
or
inc
cmp
stos
or
loop
xchg
lahf
adc
mov
sbb
and
inc
xor
addr16
sbb
sahf
mov
or
push
mov
xchg
popa
add
pop
js
scas
(bad)
pop
fwait
and
jb
movs
pop
push
dec
add
cld
adc
mov
push
jg
call
and
mov
(bad)
jmp
sbb
sub
xchg
inc
xchg
inc
ror
test
mov
adc
adc
outs
loope
jno
and
popa
dec
and
vmwrite
cwde
dec
pop
enter
(bad)
sub
jge
dec
xchg
mov
mov
dec
dec
ss
xor
jne
mul
push
mov
aas
sti
pop
jns
movs
ror
clc
int3
or
ret
std
fdivr
mov
jg
xchg
std
arpl
push
fs
(bad)
repnz
push
cmp
into
adc
loop
addr16
nop
mov
jb
add
ss
sbb
dec
jb
lock
sbb
xchg
(bad)
clc
out
not
loop
mov
stc
leave
arpl
mov
xor
scas
inc
lods
xor
sti
xchg
popf
dec
popf
sbb
adc
call
retf
push
adc
movaps
add
push
inc
shr
or
xchg
popf
sbb
jae
std
mov
mov
mov
or
cmp
add
jg
xchg
je
in
addr16
push
retf
cmp
call
js
ins
lods
jle
bound
call
xchg
dec
lea
les
loop
xchg
fcomi
loopne
es
in
fimul
mov
mov
adc
daa
dec
daa
stc
and
dec
ds
ficomp
imul
push
xlat
stos
jge
cwde
mov
imul
xchg
out
es
add
and
cmp
hlt
inc
imul
push
sar
pop
add
int
cmp
aaa
pusha
sub
lods
ror
inc
push
enter
and
test
or
and
inc
sahf
cmp
and
sbb
cld
push
adc
mov
jge
xchg
mov
push
dec
mov
jae
lock
imul
test
cmc
aaa
dec
stc
mov
and
or
xor
mov
sub
xlat
inc
mov
pop
xor
popa
scas
fcmovu
push
repz
lock
dec
lock
scas
retf
jmp
fwait
(bad)
inc
xor
es
pop
sbb
mov
mov
mov
cdq
add
repnz
popa
and
mov
cld
mov
add
movs
ds
mov
test
xchg
xor
xor
mov
ds
jmp
add
mov
jmp
and
aaa
repnz
repz
imul
pusha
int3
stos
int
mov
pop
add
les
gs
cmp
jb
arpl
xor
fwait
sbb
daa
test
(bad)
sbb
fsub
test
adc
and
mov
and
dec
pop
mov
mov
xchg
sbb
enter
sbb
mov
inc
jae
dec
(bad)
clc
sbb
(bad)
pop
test
or
add
(bad)
mov
jmp
sub
mov
pop
xchg
sahf
cdq
dec
mov
scas
mov
addr16
vminpd
daa
sub
mov
int
test
mov
pop
test
movs
or
mov
adc
mov
(bad)
fimul
(bad)
cmc
or
or
mov
adc
dec
push
push
popa
pushf
dec
push
inc
fmul
jns
mov
and
cmps
div
iret
int
scas
movs
shr
mov
test
mov
aam
arpl
(bad)
retf
inc
aaa
or
data16
test
push
cli
dec
push
push
cmc
shl
fld
mov
cwde
mov
dec
inc
adc
xchg
and
push
dec
repz
and
cmp
out
mov
out
sbb
daa
jle
pop
je
pop
rcl
push
retf
jg
xor
dec
push
fidiv
mov
daa
into
cmp
push
aas
lahf
mov
ret
inc
(bad)
enter
and
in
and
adc
sahf
(bad)
pop
aad
out
sahf
sbb
inc
lock
xchg
xlat
cld
mov
dec
stc
dec
mul
cld
out
dec
sub
pop
jp
sti
mov
jno
dec
clc
ins
inc
lock
push
mov
mov
xrelease
dec
movs
add
out
retf
add
jge
in
into
dec
push
sbb
aas
pop
lock
sbb
jp
and
sbb
imul
or
xor
mov
xchg
pushf
loopne
jno
push
loop
std
mov
fsubr
xor
jg
(bad)
mov
jb
push
cmp
mov
add
push
push
arpl
xchg
jo
push
aas
pop
push
push
sbb
dec
fs
adc
xor
xchg
sbb
jbe
mov
sahf
iret
sub
push
les
mov
addr16
jle
fadd
idiv
jae
out
rol
cld
mov
or
pop
fadd
mov
sub
push
inc
push
adc
mov
dec
lods
lods
loope
mov
sbb
xor
std
cmp
je
jno
loop
push
push
cmp
push
fstp
dec
mov
sbb
adc
jecxz
std
sub
or
mov
test
adc
cmp
mov
mov
inc
fwait
adc
xchg
jecxz
mov
addr16
in
(bad)
push
pop
(bad)
out
pop
loope
sbb
clc
push
bound
xor
push
mov
jp
sahf
popf
lods
fmul
fld
sbb
scas
push
adc
pop
sbb
je
imul
pop
lds
stos
popf
jne
dec
xlat
in
sub
sbb
scas
rcr
push
add
mov
sub
cmp
in
adc
out
or
std
mov
rol
inc
int3
and
movs
stos
and
aaa
or
adc
xchg
in
pop
and
popf
or
test
dec
mov
leave
fldcw
shr
iret
mov
aad
push
push
les
dec
out
jb
inc
nop
popf
pop
sbb
and
jle
cmp
push
rcl
inc
ins
ret
cmps
cmps
push
dec
fdiv
mov
adc
mov
(bad)
ret
jl
test
and
loop
dec
fwait
mov
sbb
idiv
inc
ret
in
(bad)
imul
push
movs
pop
add
mov
je
jo
loop
push
retf
cmp
cmp
pop
dec
pop
mov
retf
rol
pop
rol
mov
adc
and
xor
push
std
sbb
stos
dec
in
dec
push
sub
cmps
xchg
mov
lds
xchg
into
dec
mov
dec
adc
sub
fldenv
dec
sub
or
in
add
sub
cli
mov
stc
fimul
jb
gs
adc
into
jl
jo
lock
sub
sbb
pop
dec
div
jp
xchg
sub
push
add
or
adc
pop
pop
jne
in
mov
hlt
jo
pop
mov
or
pop
adc
outs
mov
jmp
dec
xor
jmp
push
or
popa
inc
pushf
shr
xchg
scas
inc
clc
pushf
ror
mov
outs
test
(bad)
cmp
(bad)
inc
cmp
sbb
mov
icebp
icebp
push
xor
pop
adc
in
out
push
call
push
mov
stos
xor
sbb
jbe
sti
pop
test
iret
push
pop
daa
push
das
and
mov
test
(bad)
cwde
jb
dec
call
mov
aas
inc
fldcw
(bad)
and
adc
mov
mov
inc
jg
or
mov
ret
inc
inc
pop
dec
or
hlt
pop
arpl
jnp
adc
call
pop
out
cwde
lods
cmp
mov
call
sub
retf
inc
fs
ins
jecxz
ror
jae
adc
cwde
sub
cmps
pop
sub
stos
jnp
ins
sub
xchg
mov
push
test
stc
pop
sub
pop
loope
iret
dec
jmp
pop
pop
stos
ret
sub
adc
rol
js
das
sub
adc
sbb
sbb
inc
call
vmread
push
inc
or
and
xchg
jle
or
push
jl
(bad)
ss
sti
lds
or
jecxz
data16
sub
mov
test
lods
popf
add
cld
jbe
jno
aas
xor
gs
(bad)
hlt
mov
inc
pop
add
xchg
retf
xchg
sub
jg
add
adc
push
push
out
sub
or
das
mov
mov
mov
sti
into
xchg
leave
pop
mov
push
out
retf
daa
(bad)
jmp
sbb
test
mov
push
es
or
mov
in
lea
enter
aam
adc
lods
mov
jns
nop
scas
mov
fwait
std
rep
or
cmp
sti
popf
imul
jo
lahf
adc
inc
repz
jne
sub
or
mov
add
xchg
adc
fisttp
xor
mov
loopne
xchg
and
outs
movs
sbb
push
ja
jmp
mov
test
dec
rol
lods
cmp
or
pop
push
scas
mov
fnsave
xchg
mov
pop
not
popf
sbb
push
push
(bad)
sub
push
xor
shr
rcl
enter
inc
repz
(bad)
(bad)
repz
push
int
out
mov
ins
fwait
mov
addr16
scas
out
popf
cwde
mov
shl
shl
push
sub
inc
xor
mov
or
fistp
les
xor
int
cld
jbe
test
dec
jne
(bad)
add
and
mov
add
adc
(bad)
retf
lahf
loope
cmp
inc
nop
shl
push
popa
inc
ins
cli
call
push
(bad)
pushf
ja
enter
sub
sbb
cmps
(bad)
iret
push
xchg
xor
lods
cdq
(bad)
daa
jle
and
xlat
scas
outs
ja
pusha
bound
inc
sub
lds
add
xchg
test
ret
(bad)
retf
ficom
push
xchg
xchg
adc
sub
lods
cmp
rol
jne
js
xor
jg
mov
pop
jne
add
iret
into
jmp
ja
mov
aad
jnp
cmps
xchg
fbld
push
sbb
fwait
mov
pop
jg
pop
add
nop
test
sbb
pusha
jle
jnp
cmc
jo
nop
sbb
xor
inc
call
dec
adc
inc
cmp
lock
lahf
adc
popa
pop
sub
pusha
cld
retf
dec
xor
cld
aaa
jl
icebp
cmp
add
dec
pop
and
mov
xchg
add
jge
ret
cmp
or
adc
popf
sub
pop
inc
mov
adc
sub
or
adc
push
push
test
ror
lea
cwde
int3
ins
aad
jnp
mov
loop
add
dec
jp
int
test
popf
icebp
adc
mov
jp
jb
dec
adc
mov
aam
mov
push
xchg
stc
adc
repnz
scas
ret
xor
int
push
inc
(bad)
sbb
and
sbb
repz
inc
mov
cmp
stc
dec
jge
push
fcmove
out
cmp
cdq
pop
test
lar
inc
mov
sub
repz
out
shr
iret
and
mov
xor
inc
jo
add
fisttp
call
inc
add
or
data16
and
dec
aaa
mov
xor
xor
and
or
lods
cmc
movs
jae
inc
mov
sbb
clc
ins
cdq
mov
mov
push
push
push
sar
and
ds
add
mov
shl
dec
ins
dec
pop
scas
call
lds
xor
or
popa
push
fcmovu
dec
sub
mov
aas
pop
xchg
scas
inc
or
jbe
xor
mov
mov
adc
fisttp
sar
imul
or
sbb
push
cmp
inc
mov
dec
dec
dec
mov
hlt
xchg
push
dec
in
adc
mov
jno
dec
pop
cli
push
std
aam
dec
test
mov
cmp
neg
shl
cmp
cld
cmp
push
or
js
inc
enter
imul
test
inc
jg
inc
aas
push
fstp
jno
xchg
push
pop
jmp
in
sub
mov
inc
push
repz
lods
sbb
mov
ficomp
pop
aas
sbb
loopne
and
lock
repnz
movs
shl
gs
mov
cmps
clc
fistp
mov
xor
xor
jb
(bad)
xchg
icebp
jb
in
cs
jl
es
push
add
arpl
arpl
aaa
and
aam
iret
cmps
fwait
mov
or
test
or
enter
ja
mov
push
loopne
pusha
cmp
cld
or
push
xchg
cmc
push
adc
mov
mov
push
gs
mov
and
cmp
js
xor
sub
leave
cmp
mov
imul
test
pop
add
pop
or
sbb
cmp
inc
jns
test
int
call
outs
loop
adc
(bad)
mov
in
xchg
pop
lds
loopne
out
test
sub
jge
sbb
dec
push
nop
cs
enter
pop
fbstp
loope
repnz
retf
inc
cwde
sbb
out
loope
cdq
cmps
pop
jecxz
dec
std
iret
cmp
push
pop
cwde
cmps
lods
pop
xchg
jge
pop
addr16
adc
sbb
xchg
dec
stos
ret
rcr
(bad)
cs
mov
inc
int
ds
(bad)
jmp
cld
adc
popf
mov
cmps
popa
sub
iret
ja
xchg
xchg
jg
mov
movs
outs
cmp
sub
ja
or
inc
pop
xchg
das
jecxz
mov
mov
jle
js
addr16
mov
sub
neg
cmps
stos
ds
jg
pop
arpl
inc
stos
jle
lods
and
lock
inc
push
inc
and
stc
push
and
push
mov
dec
fiadd
js
jae
test
sbb
js
mov
adc
inc
bound
js
xor
cmp
out
pusha
leave
fs
call
in
enter
lahf
loop
outs
add
into
loop
xchg
add
sub
jae
cmc
mov
sbb
(bad)
aaa
xchg
cdq
clc
push
shr
int
test
sbb
ja
rol
(bad)
mov
cmp
jno
mov
mov
push
push
jmp
out
mov
sti
cs
push
cwde
xchg
movs
mov
cmp
sbb
push
pop
push
movs
ret
out
popf
cmp
je
cli
jnp
jnp
or
fdivr
mov
mov
xor
ss
cmc
cld
mov
shl
or
adc
jmp
shl
movs
cmc
mov
xchg
push
xchg
(bad)
fmul
retf
mov
add
int
pop
(bad)
pop
push
repnz
fsubr
pop
inc
sbb
jb
in
cdq
push
int3
push
in
stos
push
xor
iret
adc
outs
pop
xchg
mov
xor
test
pop
sub
iret
add
adc
jbe
mov
inc
inc
clc
push
test
and
jae
pop
lods
loop
shl
mov
mov
imul
xlat
retf
arpl
cmp
popa
enter
cmps
repnz
inc
mov
and
sbb
dec
dec
sub
pushf
addr16
stos
aam
(bad)
mov
dec
sbb
sub
sbb
mov
retf
jne
xchg
frstor
jne
out
mov
or
and
pop
aad
jo
popf
loope
hlt
loop
addr16
lods
adc
ror
add
mov
pushf
movs
mov
repnz
hlt
pop
adc
push
(bad)
outs
cmp
jmp
dec
out
pop
(bad)
in
daa
sbb
in
and
int3
push
pop
xchg
mov
dec
call
aad
mov
popf
pop
in
ret
xchg
mov
arpl
js
ret
dec
bound
push
mov
imul
outs
sbb
pop
mov
int
xchg
add
mov
jb
jecxz
pop
icebp
bnd
fmul
mov
push
add
sbb
and
fstp
mov
mov
shr
and
and
sub
add
pop
adc
test
xor
adc
push
clc
push
sub
xchg
lahf
cmp
mov
dec
stos
lods
sbb
inc
jmp
mov
call
imul
xchg
neg
rcl
or
push
xlat
fist
(bad)
test
test
mov
add
rcr
jmp
sub
frstor
rcl
(bad)
loop
(bad)
pop
sar
sahf
jns
fidiv
into
add
pop
push
mov
imul
test
loope
addr16
xor
jo
push
jmp
test
dec
out
xlat
xchg
jnp
xor
jns
inc
cmp
shl
es
mov
push
jne
push
mov
lods
jbe
mov
cli
lods
jbe
xchg
idiv
jae
sub
xchg
mov
xchg
fist
cwde
inc
jmp
push
cmp
aad
icebp
mov
jnp
loope
outs
fcomp
cmp
xchg
dec
loope
vmwrite
xor
sub
ja
int
jmp
repnz
pop
jg
lock
out
xchg
sahf
(bad)
(bad)
sti
icebp
jl
push
add
aas
shl
fmul
mov
gs
sub
ja
pop
jo
push
or
popa
leave
aas
shl
sahf
sbb
inc
xlat
push
jns
pop
outs
push
mov
cmp
out
je
sub
das
jno
or
sar
or
les
jg
jb
popa
lock
cmps
sub
mul
sbb
inc
mov
mov
nop
in
cmp
int
mov
sbb
imul
movs
sub
dec
rcr
test
xor
test
gs
(bad)
lods
dec
and
jge
jp
push
xchg
and
mov
jb
mov
inc
test
and
imul
shl
or
lea
inc
dec
nop
iret
test
data16
xor
mov
test
jecxz
call
push
fwait
nop
push
or
cmc
pop
xor
scas
jno
cmp
(bad)
sar
inc
sbb
cmp
sahf
mov
popa
js
xchg
stc
cs
fwait
add
mov
(bad)
xor
xor
dec
cmp
adc
sbb
cmp
dec
inc
sar
sub
xor
imul
inc
call
pop
add
adc
xchg
hlt
mov
scas
pop
inc
or
test
pusha
sbb
loope
mov
mov
xlat
adc
or
lahf
xchg
lods
sub
in
push
int3
out
mov
stos
cmp
mov
dec
repz
dec
sbb
dec
xchg
xor
inc
enter
push
mov
mov
inc
push
cli
jge
aas
xchg
mov
je
cdq
iret
add
nop
out
dec
sar
or
stos
adc
test
cmp
or
dec
inc
dec
(bad)
div
cmps
loope
mov
inc
(bad)
repz
or
mov
pop
mov
ret
gs
js
mov
retf
jge
push
or
inc
sar
ret
push
fsub
sbb
mov
pop
push
test
and
test
push
(bad)
sub
mov
mov
mov
sub
mov
ja
sbb
stos
fnsetpm(287
add
call
ds
mov
jb
cld
into
xor
jle
cmp
xor
pop
push
jne
mov
push
pop
xor
jnp
leave
or
jne
dec
lahf
movntq
and
fist
jns
sbb
repz
or
(bad)
scas
mov
(bad)
or
xchg
jb
adc
dec
in
sbb
cmp
in
daa
std
cmps
mov
out
jbe
sub
popa
outs
ss
ins
xchg
addr16
xchg
xchg
(bad)
pop
je
pop
in
std
pop
mov
inc
dec
enter
pop
mov
lods
add
sub
jns
xor
jnp
pop
and
pop
mov
pop
test
lods
xchg
push
mov
adc
pop
push
scas
dec
mov
mov
sbb
(bad)
lahf
loop
(bad)
imul
popf
loope
push
push
ins
mov
pop
bound
xchg
xor
ins
out
cmp
hlt
and
cli
and
adc
or
int3
daa
or
mov
daa
mov
enter
mov
sbb
shr
xchg
(bad)
fcom
movs
mov
jmp
cmps
cdq
adc
lahf
mov
pop
fdivr
ins
jmp
outs
jg
out
psubusw
lahf
test
leave
push
sub
ror
cdq
jmp
scas
inc
out
test
popa
(bad)
daa
in
aaa
add
psadbw
inc
sub
mov
test
pusha
or
lods
out
pop
addr16
and
mov
stos
sub
jns
and
das
mov
sbb
call
test
addr16
lahf
repz
inc
enter
jns
push
ss
add
fcom
lea
pop
je
sbb
push
(bad)
inc
stos
jbe
(bad)
int3
adc
(bad)
call
ror
jl
mov
mov
xchg
shr
jg
cmp
fbstp
xor
dec
mov
bswap
outs
sbb
loopne
inc
cmps
sub
jle
mov
scas
and
call
push
mov
sbb
popf
sbb
aad
cmp
fadd
mov
jp
ds
adc
jo
nop
mov
xor
mov
sub
sbb
and
test
jg
pop
sub
xchg
fs
out
inc
and
mov
and
cmp
inc
dec
loop
rcr
cdq
adc
call
rcl
cs
sub
je
je
retf
lds
mov
dec
cmp
frstor
push
sbb
mov
cmp
shl
test
xchg
addr16
ret
inc
push
push
outs
mov
sti
ds
cmp
mov
dec
add
fild
sbb
jbe
push
dec
xchg
aaa
mov
(bad)
xchg
(bad)
cmp
nop
cmp
mov
push
outs
dec
mov
dec
cmp
inc
test
popa
dec
les
std
or
imul
sub
fmul
dec
xor
std
jge
cs
pusha
stos
movs
(bad)
mov
pop
and
sbb
xchg
dec
jbe
ins
movs
adc
cmp
les
mov
in
and
popf
mov
cmp
cmp
add
int
sar
jno
adc
pusha
aas
inc
add
(bad)
jne
sbb
stos
push
jmp
loop
shr
mov
aaa
jnp
je
mov
ja
cmp
(bad)
hlt
ins
leave
xchg
popf
inc
js
cld
adc
jp
stc
and
sub
cli
loopne
mov
mov
mov
or
add
adc
fisub
mov
push
bound
xor
sub
stos
out
leave
or
pusha
xchg
pop
sbb
mov
mov
mov
stc
mov
inc
xor
pushf
repz
fldcw
inc
inc
ins
mov
arpl
pop
rcr
mov
pop
fild
xchg
pop
push
push
sub
adc
sub
out
sbb
in
ins
lea
xor
scas
sub
js
repz
pusha
inc
add
and
mov
dec
pop
(bad)
fisubr
dec
sub
cs
cli
bound
popf
div
(bad)
aad
sbb
loope
or
addr16
push
dec
push
fwait
lahf
sub
pop
iret
into
(bad)
cvtpi2ps
and
fptan
sahf
call
xchg
xor
ja
das
push
pop
dec
mov
movs
pop
mov
push
leave
dec
and
je
push
mov
out
add
add
popa
mov
nop
inc
adc
popa
inc
shr
push
mov
dec
mov
ret
sub
cmp
sbb
les
shl
(bad)
sbb
in
mov
adc
or
cdq
push
or
jmp
or
pop
sbb
into
fbld
pop
pop
inc
mov
bound
(bad)
lahf
pop
ins
mov
mov
mov
push
push
enter
push
sub
jne
ror
add
mov
cmp
sbb
xchg
sbb
xchg
inc
push
fwait
ins
push
std
aas
jmp
ins
adc
(bad)
dec
and
dec
inc
inc
inc
cwde
popf
add
xchg
clc
mul
or
xor
outs
repz
repz
(bad)
xlat
gs
sub
push
push
mov
cmp
je
fsub
push
xchg
inc
call
fadd
mov
lea
popf
iret
push
clc
jg
ins
ins
(bad)
inc
mov
out
je
adc
xor
shr
xchg
cmc
jne
cld
push
adc
mov
pop
push
xchg
xchg
mov
enter
lock
jl
adc
mov
jno
pop
hlt
push
pop
and
(bad)
push
or
dec
test
rdmsr
in
pushf
sti
add
call
jne
pop
repnz
sbb
js
ss
jl
(bad)
rcr
and
push
jmp
push
stos
fcom
jmp
xor
push
xchg
mov
adc
xlat
or
cld
adc
cmp
or
xor
add
leave
and
or
jb
pop
scas
dec
jecxz
inc
ins
jmp
sbb
outs
mov
mov
and
mov
sti
push
lahf
ins
or
jns
mov
dec
(bad)
jae
fs
int
adc
push
pop
xchg
xchg
jne
pop
push
call
mov
jb
and
push
adc
push
neg
ret
sbb
test
inc
sar
add
cmps
mov
(bad)
bswap
jg
or
mov
mov
dec
sub
mov
mov
test
int
push
jle
mov
aaa
jae
je
add
push
gs
jmp
aad
fld
push
outs
xor
or
data16
(bad)
mov
push
scas
in
daa
test
lods
neg
adc
fimul
outs
sbb
out
mov
imul
adc
aas
ror
out
mov
dec
shl
xor
jo
sub
jmp
ins
cmp
jns
push
pusha
cli
hlt
inc
jb
popa
jmp
xchg
iret
and
push
add
add
pop
out
arpl
xlat
cmp
dec
out
enter
and
ins
mov
inc
jmp
retf
inc
jecxz
mul
inc
inc
fs
jge
push
ja
fild
cli
mov
(bad)
cdq
cmp
pop
gs
inc
adc
and
pop
mov
jle
repz
mov
mov
(bad)
mov
imul
icebp
cli
jg
call
mov
cmp
and
mov
out
mov
cs
cmp
std
sbb
inc
stc
xor
ret
push
mov
cli
lea
or
cdq
jno
fcmovbe
hlt
cmps
repz
cdq
cmp
sub
inc
mov
sub
xchg
jo
rol
jge
mov
dec
dec
retf
fbld
mov
mov
push
sar
pushf
in
loope
in
xor
cmp
add
test
pop
pop
retf
es
ds
jmp
sub
test
cmc
fldcw
int3
dec
cmp
int
and
cli
mov
sbb
fst
fisub
xchg
jmp
inc
push
mov
pop
adc
mov
jmp
push
mov
ins
lods
xchg
jl
aaa
cmp
xchg
ret
adc
or
movs
out
lds
adc
dec
xchg
outs
loop
jl
adc
mov
(bad)
and
xchg
sub
push
dec
xor
(bad)
sub
aaa
dec
add
int3
or
lods
fnstcw
repnz
cmp
(bad)
out
inc
test
sbb
push
ret
push
popa
dec
test
stos
xchg
jle
dec
pop
aad
leave
xlat
ja
popf
jno
or
fsub
movs
js
add
mov
jl
test
mov
loopne
sahf
or
clc
sub
es
pop
xchg
pusha
inc
cmp
cwde
ror
jbe
bound
push
sar
stos
int3
int
jo
cmp
adc
in
xchg
cmp
mov
push
test
rcl
mov
mov
dec
loopne
addr16
inc
loop
shl
cmp
or
shl
leave
jmp
fs
out
adc
or
xchg
dec
mov
and
test
push
and
jb
push
mov
(bad)
fcomp
call
and
lods
(bad)
ins
arpl
push
outs
(bad)
scas
not
xchg
pop
mov
xchg
cmp
jmp
and
mov
std
dec
rcr
mov
rcl
pusha
stc
mov
push
lock
push
add
push
cs
into
lds
jmp
fmul
cdq
mov
mov
test
loope
pop
sub
mov
mov
adc
cmc
inc
sbb
mov
adc
data16
lahf
mov
retf
push
dec
sub
pusha
and
push
or
aaa
xchg
js
adc
aas
mov
push
ret
(bad)
cdq
push
mov
ret
pop
ret
ret
arpl
adc
imul
std
add
jno
mov
out
push
mov
out
xlat
inc
jo
jne
stos
mov
add
push
(bad)
(bad)
sub
jo
das
popa
shr
fwait
scas
sub
outs
test
mov
and
sbb
es
nop
push
shr
jecxz
hlt
or
jne
mov
mov
mov
inc
jmp
sub
inc
push
mov
cmc
mov
ss
imul
je
cwde
mov
movs
jge
add
test
into
xor
js
or
loope
hlt
push
cmps
fimul
push
mov
sub
adc
pop
shr
sub
pop
or
rol
js
push
push
ins
jne
push
sub
mov
cmps
cmp
movs
mov
movs
inc
jo
pop
test
push
nop
stos
push
lods
cmp
and
cmp
int
mov
dec
push
mov
sbb
cmp
or
retf
out
aad
xor
nop
pop
test
movs
sbb
pop
leave
data16
adc
hlt
push
(bad)
lds
or
add
test
xchg
xchg
dec
lds
mov
push
jno
mul
mov
fcmovu
popf
js
xor
pop
sub
mov
cmps
sub
or
test
mov
or
xor
test
sahf
inc
inc
pop
or
xor
out
push
addr16
(bad)
dec
test
test
xor
ret
push
adc
idiv
(bad)
cld
cmp
add
inc
or
call
out
mov
jl
push
fdiv
pop
jl
dec
and
rcl
xchg
xor
mov
pop
ret
jbe
out
sbb
jns
push
sub
inc
mov
xchg
push
add
adc
mov
fcomip
mov
pop
ins
in
push
js
sub
mov
into
adc
bound
xchg
clc
mov
xchg
scas
push
in
pop
scas
push
popf
lahf
jbe
nop
mov
ja
clc
into
xchg
call
adc
cwde
fisubr
sub
or
jno
adc
cmp
int3
cmps
xor
xor
xchg
into
test
jnp
movs
ins
ds
inc
xchg
dec
(bad)
jg
movs
mov
dec
push
div
sbb
adc
xchg
inc
and
clc
sbb
in
icebp
mov
xchg
push
xor
jp
fist
(bad)
ja
call
dec
sub
cli
pop
cmps
mov
mov
jl
xchg
ror
adc
jge
dec
and
pop
push
or
fdivr
mov
jge
loopne
inc
cmp
hlt
mov
xchg
jmp
mov
aad
js
stos
and
adc
movs
push
call
xor
push
outs
aad
xchg
enter
imul
(bad)
sti
mov
stos
test
xchg
or
jl
mov
(bad)
mov
xchg
sub
jns
add
sar
neg
xor
daa
push
fistp
push
jae
add
xchg
leave
mov
aas
loopne
mov
adc
adc
sub
enter
lea
mov
inc
mov
pop
sbb
sub
(bad)
call
sbb
xor
aaa
push
call
retf
jge
and
cmp
xor
sahf
lock
repz
fstp
ss
mov
inc
aaa
in
xchg
inc
pop
popf
mov
jmp
fidiv
fsub
fs
mov
push
jecxz
xlat
xor
pop
mov
mov
repz
mov
popf
push
in
(bad)
nop
ret
cwde
xchg
jmp
push
xor
pushf
xlat
cld
sub
cwde
sbb
lea
cmp
stc
jae
enter
mov
sbb
in
out
pop
movs
imul
popf
mov
push
ss
das
jns
xor
ds
sbb
lds
mov
sbb
xchg
in
stc
xchg
xchg
sbb
pop
ss
iret
jns
out
inc
fbstp
pop
xchg
inc
mov
mov
inc
call
xchg
aas
ja
jmp
cmc
loop
shr
and
js
stos
mov
rcr
ror
les
pop
cli
sbb
xchg
mov
mov
aas
das
and
je
popa
rcr
add
jge
inc
outs
mov
int3
inc
ins
mov
retf
push
jp
pushf
out
dec
icebp
ja
mov
xchg
mov
mov
mov
add
dec
into
fsub
add
adc
call
sub
or
cmp
idiv
fmul
popa
dec
dec
mov
in
out
xchg
xor
fsubr
pop
push
mov
inc
sbb
add
arpl
jnp
sub
dec
daa
into
dec
rol
movs
pop
and
fnstenv
push
bound
lea
mov
or
cmp
mov
dec
mov
test
out
lds
fcom
mov
scas
inc
pop
out
sub
imul
inc
mov
lahf
int
mov
dec
lsl
inc
pushf
test
mov
dec
pop
ret
cmps
data16
adc
mov
fdivrp
fadd
jge
inc
pop
mov
jge
add
push
ret
ss
mov
or
popf
mov
push
add
mov
push
movs
jno
int3
cmp
or
mov
psllq
sbb
adc
sti
jb
fdivr
jbe
aad
xchg
sbb
inc
in
pop
dec
mov
mov
push
call
or
push
loopne
cli
xchg
add
mov
cmps
imul
pusha
pop
fucomip
mov
and
dec
xchg
out
push
pushf
test
jp
push
addr16
sbb
mov
jo
rcl
ja
sub
push
lods
sub
int3
loop
xor
sbb
test
cvtpi2ps
sar
mov
jecxz
cmps
xor
mov
pop
in
rol
jbe
test
fidivr
test
dec
sub
mov
retf
cmc
cmc
(bad)
add
pop
ins
adc
jo
fucomp
lock
hlt
cmp
psubd
or
cmp
adc
pop
in
enter
lods
jno
xor
lock
mov
test
sub
pop
retf
jle
mov
xor
xchg
jmp
shl
mov
sub
add
cmp
mov
xor
push
imul
aad
jl
dec
test
pop
pop
add
pop
loope
adc
push
xor
pop
push
push
enter
inc
mov
mov
cmp
or
inc
jns
push
cmp
lahf
mov
jl
cmp
jmp
mov
mov
les
(bad)
mov
scas
cmp
inc
adc
add
xor
jecxz
dec
repz
aaa
pop
inc
(bad)
in
pusha
sahf
ror
inc
push
jle
add
cmps
jl
add
cmp
lss
and
out
inc
add
or
lea
jne
fadd
push
adc
ret
mov
add
cmp
xchg
ret
mov
(bad)
adc
push
or
js
aam
or
xor
movs
adc
lahf
cwde
call
cmp
imul
ret
pop
jb
test
fmul
loopne
xor
add
ins
mov
dec
jmp
rcl
inc
adc
std
fisttp
movs
clc
mov
xor
pusha
sbb
je
sub
imul
loope
ds
lods
add
iret
mov
int
pop
rcr
push
div
aad
xchg
test
in
cmp
hlt
fld
stc
jns
cmp
jo
shl
test
pop
repnz
in
sub
sub
mov
or
push
sets
hlt
test
mov
lds
pop
adc
ins
dec
fs
stos
test
sub
adc
xchg
clc
push
sub
adc
sahf
test
push
mov
push
rcr
call
sub
rol
mov
add
sub
ret
mov
js
cs
sbb
jns
push
xor
cmp
(bad)
popf
sub
jb
aas
bound
mov
fsub
push
aad
(bad)
cmps
and
(bad)
pop
xchg
and
repz
shl
push
pusha
ins
dec
stc
xchg
int3
and
dec
ss
cmc
mov
or
sbb
mov
inc
push
push
loopne
inc
loope
add
out
mov
fsubr
loopne
bound
lahf
fisubr
ds
and
jns
cmp
cli
ja
lahf
loopne
sti
data16
mov
ret
in
loopne
sar
or
fsub
imul
movs
std
jbe
mov
retf
jno
cmp
mov
push
lock
call
xchg
adc
arpl
cwde
sub
mov
and
ja
mov
pop
leave
ins
cmp
pushf
xchg
(bad)
cmps
xchg
fist
fimul
(bad)
not
retf
sbb
dec
cwde
lea
xor
cmp
dec
sub
cs
outs
cmp
mov
test
retf
sub
and
and
cmp
and
cmp
xchg
(bad)
xor
inc
daa
das
push
xor
mov
and
jae
in
aad
es
std
jae
out
sbb
int3
push
js
xor
lods
jp
inc
inc
dec
(bad)
pop
in
mov
add
mov
fs
or
jg
mov
adc
sbb
or
out
dec
push
xchg
xor
fstp
imul
adc
push
or
add
outs
fmul
pushf
xchg
dec
ins
pushf
inc
mov
scas
test
fiadd
jmp
stos
jecxz
sar
(bad)
mov
mov
pop
cli
data16
mov
out
mov
addr16
sahf
pusha
ret
inc
inc
push
sub
add
out
or
ret
xchg
adc
inc
push
xchg
pop
outs
pusha
jl
push
aas
test
shr
aad
push
js
leave
bound
movs
leave
inc
sub
push
or
scas
stos
ror
and
cmp
mov
pusha
inc
add
push
aad
and
pop
mov
mov
mov
sbb
retf
push
pop
lods
mov
fcomp
mov
sbb
and
rcl
mov
shl
pop
dec
in
scas
xor
jb
dec
push
mov
int3
cld
jne
fs
lds
into
out
bound
lods
ss
arpl
lds
gs
mov
ror
arpl
or
in
sti
pop
mov
dec
adc
pop
cmp
int3
icebp
or
add
pop
pop
push
call
xchg
sbb
or
cmc
stc
pop
add
add
(bad)
add
and
adc
retf
mov
jp
jno
xchg
stc
sub
dec
mov
fsub
cwde
push
pop
sti
call
pop
or
sbb
push
pop
call
and
test
adc
or
iret
cld
test
mov
xor
mov
les
inc
outs
nop
shl
and
pusha
sbb
pop
sub
cld
sahf
sbb
mov
sbb
sbb
imul
stc
and
xchg
sahf
and
add
clc
push
(bad)
cli
movs
pop
jle
xchg
xchg
mov
or
out
sbb
or
out
jns
imul
gs
ror
dec
repz
retf
add
xchg
sahf
xchg
repz
call
out
mov
stc
mov
pop
mov
push
(bad)
lock
loope
dec
mov
rol
out
add
test
jne
jge
(bad)
loopne
test
add
jno
mov
cmc
fistp
push
inc
or
xor
xchg
imul
ins
add
popf
xchg
cmp
sub
or
xor
(bad)
jecxz
or
hlt
(bad)
(bad)
cs
dec
sub
xchg
inc
mov
cwde
outs
stos
pop
add
rol
jnp
retf
outs
retf
imul
inc
in
inc
fnstcw
push
xchg
repnz
hlt
(bad)
mov
test
test
sub
cmp
add
ss
cmp
or
cmp
pusha
dec
sub
test
adc
push
mov
enter
fs
or
arpl
inc
jp
fild
repnz
sbb
push
dec
clc
leave
mov
sbb
fldenv
cdq
retf
shl
cli
sbb
or
adc
adc
jecxz
mov
inc
dec
mov
mov
rol
(bad)
fdiv
lods
xlat
add
retf
pop
sbb
jo
mul
adc
mov
cmp
out
mov
sti
xchg
test
movs
push
mov
loopne
mov
out
lods
(bad)
in
xchg
dec
mov
ds
xor
inc
les
mov
cdq
push
xor
xchg
push
push
mov
sub
add
and
jne
dec
or
clc
dec
in
lea
cmps
inc
push
add
pop
ins
not
lock
out
sti
jnp
popa
pop
js
jbe
sbb
jge
cmp
call
rol
lods
pop
mov
and
jne
mov
cs
imul
(bad)
adc
clc
push
cdq
push
pop
sahf
fld
push
(bad)
int3
mov
sbb
iret
out
adc
jg
xor
inc
in
pop
arpl
jle
mov
pop
xchg
ja
pop
ins
ror
repz
daa
(bad)
js
cmp
jmp
sbb
jmp
test
xchg
and
push
push
in
sub
sub
jge
pop
out
cmp
pop
fnstenv
stc
repnz
or
mov
jb
mov
or
sub
dec
and
mov
outs
push
mov
leave
add
add
inc
arpl
scas
into
inc
mov
add
sbb
outs
adc
jae
ficom
pop
(bad)
inc
sub
stc
bound
aaa
cmp
cmps
or
(bad)
add
pop
call
hlt
imul
mov
jg
repnz
add
out
test
aad
dec
mov
int3
mov
hlt
adc
dec
and
sub
call
fwait
aad
les
mov
mov
mov
repz
mov
inc
or
icebp
das
mov
fs
cld
(bad)
xchg
sbb
or
sti
cld
inc
jo
sub
scas
pop
mov
jle
(bad)
jmp
fs
aaa
push
out
dec
push
push
scas
loope
imul
loope
jno
adc
ret
jb
loopne
movs
sahf
dec
pop
jns
dec
test
sbb
xor
jmp
push
sbb
mov
test
inc
jecxz
lods
cmp
push
add
or
in
and
jmp
(bad)
ds
call
adc
ja
add
push
push
inc
shr
add
test
sahf
sbb
push
aas
cs
enter
imul
fisubr
push
xchg
nop
sub
cs
add
(bad)
inc
inc
pop
mov
dec
jg
ja
in
cmps
mov
and
sbb
nop
mov
push
rcl
jecxz
int3
test
clc
sahf
mov
out
outs
pop
add
test
push
dec
mov
cdq
inc
pushf
cld
mov
cdq
and
and
enter
jg
sub
pop
push
sbb
in
mov
add
sbb
mov
cmp
add
inc
(bad)
cli
cmp
int
cmp
pop
repz
sub
clc
cmps
push
sti
(bad)
mov
(bad)
jbe
test
lods
or
aaa
sti
push
fwait
jno
mov
icebp
xchg
jae
into
fmul
je
mov
and
cmp
test
mov
addr16
icebp
mov
cld
pop
or
(bad)
repnz
outs
mov
jo
cmp
mov
fisubr
cmps
pop
mov
neg
(bad)
cmp
ins
xlat
lods
mov
xor
adc
mov
call
ins
int3
int3
mov
dec
imul
add
adc
mov
dec
(bad)
dec
pop
sbb
call
inc
sub
retf
imul
shr
aam
in
mov
adc
cmps
xor
jb
imul
shl
sub
dec
mov
pop
mov
ror
test
sbb
mov
push
xor
cmp
in
add
(bad)
bound
ret
in
cmp
aad
movs
mov
fdiv
imul
push
xor
mov
mov
frstor
mov
shr
sub
addr16
mov
lds
mov
pop
iret
xor
enter
bound
xlat
and
mov
dec
in
jae
cli
mov
ret
jno
(bad)
out
sbb
mov
ror
cmp
xor
sar
arpl
inc
lods
ss
inc
repz
push
js
jmp
mov
xchg
sub
test
push
jle
hlt
outs
ret
fsubr
(bad)
lock
frstor
pop
sar
dec
mov
mov
(bad)
fld
jecxz
lock
xchg
and
push
(bad)
cli
pop
jge
jne
jb
test
in
cmp
pop
nop
loopne
(bad)
mov
scas
scas
cmp
bound
fs
inc
push
xchg
cmp
rol
call
add
cmps
sbb
fdiv
rol
lods
stos
push
add
cmp
sub
jae
pop
ds
bound
or
dec
inc
aad
xchg
call
in
xor
or
out
sbb
mov
pop
imul
push
mov
xlat
retf
mov
jecxz
dec
stc
call
in
loop
xlat
inc
sbb
in
pop
push
jecxz
cdq
mov
cli
scas
or
dec
pop
or
retf
jbe
dec
retf
inc
inc
sub
rol
loope
adc
pop
push
adc
xchg
mov
ss
stc
das
hlt
lahf
sub
xchg
mov
push
(bad)
in
pop
inc
outs
xchg
and
sub
cmp
xchg
xchg
cmp
or
ins
scas
fstp
pop
mov
mov
mov
or
dec
outs
(bad)
jmp
pop
xchg
sbb
in
cmp
into
out
add
je
push
jmp
cmp
fiadd
enter
jb
push
xor
adc
cmps
pop
xor
fldcw
and
shl
jp
xlat
push
icebp
cmp
push
and
sbb
rcl
loopne
pusha
and
add
push
jl
mov
aam
sbb
pushw
and
pop
sub
cdq
and
pop
outs
xchg
imul
pusha
aad
daa
lods
enter
loope
inc
adc
imul
es
popa
test
clc
test
xchg
jecxz
xor
mov
mov
cs
sti
inc
jge
mov
gs
mov
xor
out
std
hlt
fisub
fiadd
inc
popf
pop
lahf
movs
adc
mov
hlt
fstp
or
sahf
or
inc
inc
push
adc
lea
das
sbb
push
pop
jmp
sub
retf
out
push
pushf
xor
fistp
lock
xchg
push
not
gs
adc
neg
jmp
inc
addr16
mov
cmp
mov
and
lods
ja
mov
cmp
add
imul
inc
push
arpl
mov
lea
addr16
push
jecxz
and
push
popf
xlat
push
push
les
mov
mov
push
in
scas
ins
jge
pop
retf
dec
(bad)
(bad)
cld
ror
or
daa
sahf
lock
lods
lahf
mov
jae
mov
call
xchg
push
cmp
bound
push
stos
dec
dec
aas
ds
jnp
cmp
neg
mov
hlt
push
pusha
lock
mov
aaa
mov
pop
push
loop
sbb
fdivr
mov
bound
mov
add
xor
and
fidiv
jne
inc
scas
clc
inc
sbb
cmc
add
ficom
mov
cmp
jb
sahf
mov
pop
mov
lock
test
fstp
push
mov
mov
test
pop
les
rcr
imul
aaa
mov
xchg
lods
mov
cmp
xchg
jmp
jp
xchg
pop
mov
aad
mov
test
mov
fmul
or
xchg
fadd
test
call
push
pop
inc
out
xor
jb
mov
pop
cmps
bound
sub
retf
xchg
push
(bad)
xor
mov
dec
sbb
jno
xchg
out
int3
fsubr
les
jmp
imul
sbb
push
pushf
jo
xchg
pushf
test
pushf
pop
into
push
imul
cmp
sub
das
mov
fild
inc
aaa
push
enter
sahf
fcom
(bad)
stc
or
and
or
je
xchg
int
icebp
pop
push
pop
jle
jnp
jns
pop
out
call
push
cli
xor
(bad)
int3
and
xchg
xlat
test
jl
mov
xor
push
mov
cmps
dec
fist
retf
xchg
fisubr
dec
fucomip
add
daa
dec
sub
stos
push
mov
loop
add
adc
out
jmp
inc
cmp
bound
shl
loop
hlt
shl
imul
out
and
mov
sub
inc
(bad)
xlat
mov
dec
into
push
or
jmp
push
hlt
loop
out
icebp
add
das
pop
cmp
ja
jl
fisubr
sub
mul
mov
mov
mov
cdq
inc
mov
sbb
ficom
cwde
xchg
jno
or
stc
xchg
pop
push
out
push
into
aas
add
adc
mov
xchg
mov
adc
test
adc
xor
inc
mov
loope
xor
fwait
pusha
xchg
jns
jae
aas
mov
add
ret
jno
add
pop
sub
mov
pop
sub
(bad)
shl
int
mov
(bad)
int3
fwait
cmp
xor
es
xor
inc
aas
sbb
shl
inc
arpl
jg
push
js
(bad)
popa
sbb
mov
jns
icebp
add
mov
ret
push
ret
cs
popw
mov
push
es
and
sbb
xchg
mov
out
cmp
jecxz
loope
sub
test
xlat
outs
pop
add
in
jmp
rcr
and
dec
mov
fs
lods
nop
jl
fwait
bound
and
shl
sub
add
(bad)
aas
test
ins
rcr
sub
das
movs
mov
std
adc
retf
out
push
imul
sbb
or
pop
mov
sbb
retf
clc
xchg
push
add
xor
dec
inc
push
mov
test
ror
aas
sti
jmp
mov
or
cwde
jns
cld
cmp
pop
test
arpl
int3
jb
shr
jl
cwde
ins
xchg
sub
xlat
je
mov
and
(bad)
cwde
arpl
ffree
jge
adc
cmp
sar
ins
stos
dec
inc
dec
rol
sbb
nop
scas
pop
and
bound
add
rcl
and
fld
ins
js
or
add
jo
dec
in
and
jp
movs
cs
push
test
icebp
add
ins
and
dec
icebp
mov
les
popa
pusha
mov
and
and
in
stc
ss
xor
jae
sub
cs
imul
pop
mov
inc
jne
dec
mov
pop
sbb
cwde
(bad)
(bad)
sub
jle
dec
leave
inc
xchg
in
add
(bad)
sbb
inc
sbb
pop
pop
ds
cmp
sbb
mov
iret
lods
pop
mov
ficom
sbb
cmps
je
(bad)
push
fdivr
push
or
sbb
mov
js
xchg
cmp
dec
mov
jmp
cld
fs
mov
dec
(bad)
cmc
cwde
fwait
das
aam
adc
jp
dec
mov
add
icebp
(bad)
pop
fisttp
cdq
fidivr
fstp
jle
mov
data16
sub
push
idiv
mov
push
lahf
cs
sar
inc
ds
cmp
mov
ret
or
mov
dec
pop
out
xchg
inc
cmp
dec
sub
fldl2t
xor
(bad)
pop
sbb
fmul
mov
push
retf
std
iret
cmp
cld
inc
cwde
in
pop
into
jo
mov
movs
mov
pop
mov
adc
shl
aam
or
xchg
fbstp
mov
pop
sub
sub
mov
cmp
inc
ror
jne
arpl
push
mov
sbb
and
ja
jno
test
sar
mov
or
jae
retf
inc
push
jmp
cli
leave
aas
hlt
fcomp
dec
mov
cmps
push
fisttp
push
stc
dec
out
aas
sbb
fs
fdiv
scas
pop
cmp
jnp
fwait
push
pop
cmp
int3
pop
pop
in
daa
push
pop
call
or
mov
test
mov
sub
inc
lock
dec
push
lahf
cs
jbe
mov
mov
icebp
into
jecxz
ret
int
jae
xchg
adc
mov
sahf
rol
cmp
out
xlat
and
sti
sbb
lods
fistp
xchg
stos
fcom
stos
test
push
and
loopne
mov
inc
js
je
push
ja
ja
sbb
pusha
cmps
in
cmp
out
push
sub
sbb
mov
retf
aam
into
cwde
mov
mov
push
jbe
fidivr
(bad)
xlat
fist
movs
dec
aam
add
dec
pop
push
add
js
ins
mov
loopne
push
pop
xchg
outs
out
mov
jns
adc
dec
pop
cs
mov
dec
jl
dec
mov
mov
or
iret
jo
loopne
gs
hlt
mov
or
inc
daa
test
popa
lods
lds
cwde
push
and
mov
sbb
cmp
mov
push
inc
xlat
movs
iret
pop
xor
push
stc
nop
and
aas
cmps
popa
push
das
sbb
adc
mov
js
popa
adc
sahf
xor
call
lea
sbb
sar
mov
shr
adc
jmp
daa
inc
dec
out
add
cmps
out
clc
stos
xchg
lock
mov
outs
push
mov
(bad)
mov
dec
ret
push
addr16
xlat
mov
jo
mov
or
push
scas
adc
ret
fld
aas
and
inc
pop
retf
adc
imul
and
jmp
jnp
fsubrp
push
int3
xchg
pop
fild
(bad)
pusha
lea
xchg
icebp
fist
test
mov
or
adc
jo
inc
add
js
jecxz
push
fwait
sub
shl
nop
iret
xor
sbb
and
push
fisubr
push
dec
or
inc
and
cmp
int
xchg
sub
xlat
pushf
cs
adc
into
and
mov
mov
shl
push
push
mov
jg
in
mov
inc
lods
outs
cmp
xor
mov
adc
xor
gs
hlt
lods
jns
std
mov
mov
jne
sbb
jle
clc
in
(bad)
sbb
fsubr
xchg
retf
pusha
mov
inc
loopne
loop
sub
pop
call
sbb
sahf
dec
pop
mov
pop
lods
push
jns
jmp
je
dec
jmp
cmp
or
in
add
push
shl
repz
loopne
fcmovb
mov
pusha
test
std
inc
in
sahf
sub
inc
hlt
xchg
dec
add
add
(bad)
fisubr
and
adc
xchg
pusha
loop
fsubp
in
dec
cmp
imul
ins
loop
jno
mov
pusha
add
xchg
cmps
loop
cvtps2pi
repz
inc
mov
mov
mov
(bad)
in
fwait
adc
add
pop
and
mov
int
xchg
pop
sti
into
stc
jno
jnp
sbb
pushf
and
xchg
daa
cmp
in
scas
xor
mov
xchg
and
out
push
aad
test
mov
(bad)
dec
popf
mov
or
das
sahf
dec
fstp
fwait
push
nop
(bad)
es
mov
pop
mov
iret
aaa
aam
pop
mov
sbb
hlt
lea
add
adc
and
mov
pop
je
js
call
or
jns
jae
mov
jg
outs
or
xor
mov
or
cmps
mov
sbb
popf
or
in
stos
pop
fist
xor
pop
mov
in
imul
sub
jge
mov
add
data16
push
aas
aaa
dec
test
(bad)
cwde
pop
aam
stc
push
cmp
jecxz
mov
mov
or
in
and
retf
inc
shl
cmp
dec
mov
mov
retf
or
std
mov
push
ja
or
pop
fsub
ss
or
in
(bad)
cmp
adc
arpl
(bad)
stos
shl
dec
mov
outs
sar
sub
mov
mov
mov
xchg
lods
cdq
pop
jbe
and
clc
push
mov
mov
rcl
mov
and
sti
adc
mov
pop
lock
cmp
out
jae
lock
xchg
mov
dec
pop
sahf
shl
jecxz
cmp
fsubr
js
cmp
mov
push
add
and
or
shl
jnp
repnz
movaps
or
loope
lods
jns
hlt
inc
pushf
xor
stos
loope
pop
call
ret
std
into
dec
je
sbb
cmps
push
test
dec
adc
mov
ror
dec
loop
add
or
popa
and
push
(bad)
cmc
repnz
adc
dec
sub
rcl
sbb
pushf
adc
fpatan
fs
cmp
aam
int3
ins
push
aad
push
stc
sub
dec
adc
adc
(bad)
and
add
fcom
lock
dec
xchg
mov
fsub
cmps
stos
div
jge
or
fisttp
shl
dec
sub
cld
xchg
idiv
mov
sub
imul
pop
xchg
pop
mov
mov
cmp
and
and
jp
aam
ins
ins
pop
out
adc
sbb
ds
pop
dec
sbb
cmps
fwait
xchg
scas
mov
add
cmp
movs
pop
iret
pop
xchg
and
hlt
cmps
cs
jmp
arpl
clc
daa
xchg
xor
inc
xchg
retf
adc
sub
das
int3
xor
or
pop
sbb
shl
in
cs
mov
xor
jae
rol
loop
jnp
nop
jo
cld
retf
push
inc
or
enter
sahf
sbb
jns
jns
or
push
dec
mov
or
rcr
les
aas
push
pop
mov
fldenv
out
pop
adc
mov
leave
jmp
fdivr
push
jg
mov
(bad)
xor
out
xchg
test
or
push
call
jl
ss
mov
and
cmp
mov
int
in
fstp
mov
cdq
enter
cld
dec
repz
jne
mov
or
pop
push
or
adc
jnp
int3
outs
pop
xor
sahf
fmul
mov
add
in
dec
jnp
cmc
test
fmulp
xchg
jne
push
and
push
mov
or
cmps
xor
lock
lea
jmp
cmp
(bad)
dec
aad
pop
push
xor
dec
popa
and
jle
jmp
mov
pop
retf
xor
pop
mov
pop
mov
js
mov
imul
fild
jo
adc
push
cmp
xchg
div
call
arpl
mov
xor
push
popf
pushf
and
jmp
jmp
icebp
mov
push
mov
add
adc
mov
sub
push
popf
es
jmp
fs
sub
imul
sti
xor
sub
mov
cmc
fsincos
fs
sub
cmp
std
leave
(bad)
xchg
jp
inc
(bad)
jp
in
out
xor
xchg
mov
lock
xor
enter
mov
inc
leave
pop
mov
aas
inc
test
dec
cmp
pop
jl
in
sbb
adc
aam
ss
jmp
jae
mov
imul
cs
jae
ror
es
adc
or
div
ss
inc
pop
pusha
adc
pop
stos
mov
or
das
retf
adc
jo
lahf
outs
mov
imul
inc
mov
sbb
xor
xor
sub
rcl
add
push
add
mov
cmp
sbb
sbb
out
fisubr
out
retf
adc
jb
push
ins
icebp
icebp
push
jae
jecxz
lods
cmp
sbb
push
pop
popf
sub
hlt
nop
lods
and
jae
les
lods
inc
mov
sbb
jnp
icebp
aaa
pop
and
xor
gs
int
inc
pop
pop
push
add
rcl
(bad)
sub
push
inc
into
inc
rdpmc
mov
rcl
mov
imul
or
add
popa
fisub
and
in
cdq
push
or
in
loope
into
sbb
mov
jge
repz
movs
fidivr
mov
mov
scas
adc
ret
loope
aas
mov
pop
add
lods
jno
mov
loop
fnsave
fidivr
xchg
out
sahf
xchg
ja
xor
aad
add
push
inc
adc
stos
aam
pushf
cld
cmp
add
and
push
jb
fwait
ret
(bad)
push
mov
and
imul
pop
bound
loop
rol
fisubr
cmp
std
mov
aam
iret
retf
mov
inc
pop
or
clc
fidiv
dec
mov
imul
(bad)
rcr
pop
int
dec
cli
and
fidivr
out
int3
adc
into
inc
cmps
xchg
xchg
mov
das
inc
fild
jmp
inc
or
and
fwait
xchg
and
cmps
xchg
dec
je
(bad)
cld
jnp
jno
push
sub
stc
call
out
mov
cdq
or
sar
movs
jmp
inc
mov
lds
cmp
mov
mov
push
mov
mov
imul
in
into
in
mov
mov
inc
push
stos
in
jp
jae
retf
jnp
or
rcr
cdq
clc
xor
mov
push
pop
or
dec
mov
push
pop
mov
push
inc
xchg
dec
xchg
cmp
(bad)
aad
in
loop
mov
sar
data16
test
fnstcw
mov
mov
movs
mov
mov
xor
adc
push
jmp
gs
jecxz
cli
mov
add
xchg
(bad)
repnz
pop
jge
(bad)
xor
test
mov
pusha
add
dec
add
bound
push
push
(bad)
daa
into
jg
or
test
jl
in
adc
pop
daa
lds
pop
add
repnz
adc
or
mov
xchg
ret
mov
mov
out
sahf
sub
inc
add
test
pop
daa
dec
stc
mov
cmp
hlt
adc
inc
dec
push
pop
daa
add
mov
jle
pushf
push
inc
cmp
sub
xor
xor
retf
mov
inc
push
cmp
mov
call
andps
sbb
lahf
rcl
adc
jb
push
cmp
jno
arpl
mov
add
out
sub
xlat
repnz
or
lods
xchg
mov
mov
sar
push
popa
enter
pop
mov
lds
lods
push
gs
push
cwde
and
xor
jp
sti
(bad)
mov
pop
ins
ss
jae
das
mov
dec
call
sub
fwait
dec
into
(bad)
mov
sub
xor
iret
adc
jg
rcr
mov
mov
sub
fimul
add
popf
dec
push
in
dec
xchg
out
jge
mov
popa
and
inc
in
dec
jne
stos
pop
int3
cld
adc
data16
lods
sbb
lods
push
xchg
push
sbb
jns
fild
clc
mov
xor
cmc
repz
mov
call
pop
mov
sub
mov
cmp
adc
adc
sti
mov
adc
mov
mov
cwde
stos
mov
jmp
lock
jle
bound
dec
outs
mov
mov
mov
dec
mov
je
sbb
or
loop
aaa
or
in
inc
ret
call
push
pushf
mov
adc
dec
jle
jp
retf
nop
jmp
iret
pop
repnz
and
sbb
mov
inc
cmp
test
sub
fwait
sub
in
push
pop
pop
scas
bound
test
idiv
cmps
and
pop
mov
sar
mov
jg
inc
mov
jbe
inc
xchg
stos
adc
(bad)
aad
in
xor
aam
jmp
out
adc
inc
cmp
aam
scas
mov
das
mov
(bad)
mov
sbb
dec
faddp
mov
pop
hlt
sub
int
cli
sbb
push
movs
mov
rcr
add
sar
and
loop
ficomp
mov
mov
popa
div
mov
mov
jmp
mov
movs
(bad)
mov
fisubr
cmp
inc
mov
addr16
popa
ret
or
lds
mov
xchg
dec
je
lahf
cld
lea
mov
(bad)
out
xor
add
addr16
pop
inc
shl
mov
das
inc
jns
daa
(bad)
mov
test
ret
inc
cmps
inc
push
retf
cmp
es
push
test
adc
lods
and
mov
shl
add
push
pop
retf
xlat
je
pop
dec
add
ja
je
xchg
mov
(bad)
mov
push
add
shr
dec
sahf
outs
movs
xor
xor
int3
test
push
dec
test
cmps
mov
gs
mov
ins
xchg
test
outs
in
ds
rcr
inc
ins
mov
xchg
push
(bad)
jb
cmps
int
dec
in
dec
adc
or
ins
fdivr
mov
pop
xor
test
(bad)
jbe
out
xchg
or
fwait
sub
or
adc
mov
dec
ret
in
into
lock
sbb
sbb
ret
ror
js
jb
cmp
pop
pop
sahf
pop
test
in
ror
mov
push
int3
pop
inc
jmp
mov
cmp
xacquire
sub
cdq
mov
js
mov
je
jp
mov
or
outs
hlt
mov
in
loopne
sti
lock
(bad)
out
and
ds
gs
gs
out
xor
jmp
arpl
xchg
icebp
jno
(bad)
lock
jo
cmp
inc
push
jbe
push
add
pop
mov
adc
sbb
push
and
outs
and
pop
scas
cmp
test
loop
in
dec
push
sub
or
rcr
sbb
pop
outs
rcl
js
jp
dec
sub
xchg
add
adc
add
call
inc
sbb
out
jle
mov
push
(bad)
pop
fild
xchg
sub
es
jp
jle
pushaw
stos
pushf
fnstenv
or
mov
pop
inc
xchg
ret
mov
dec
add
and
in
xchg
xchg
push
jae
pop
nop
adc
int3
xor
shr
leave
push
sbb
jecxz
leave
inc
dec
dec
and
add
sub
iret
xor
in
pusha
shl
fidiv
xchg
ins
adc
sahf
pop
mov
push
inc
mov
mov
cmp
int3
iret
les
inc
retf
inc
daa
rcr
cli
inc
in
sub
imul
xlat
jle
(bad)
push
add
mov
inc
mov
shl
loopne
cld
sbb
(bad)
es
outs
mov
call
fwait
into
sub
out
push
test
mov
fucomi
mov
xchg
xchg
aad
jmp
call
test
cmp
fstp
xchg
adc
fist
ss
cli
push
or
xchg
lods
inc
xor
std
mov
push
cs
pop
push
sub
and
jo
sub
cmp
and
jl
enter
xor
xchg
add
mov
and
sahf
cmp
test
movs
lods
call
mov
retf
cld
retf
jbe
dec
(bad)
push
enter
out
jo
(bad)
pushf
mov
faddp
mov
xchg
or
in
cmp
popf
sti
push
mov
adc
jmp
jmp
add
ins
add
push
stos
sar
out
mov
dec
dec
xchg
inc
es
sub
fdivr
inc
data16
mov
test
retf
pop
jae
jns
jge
mov
ret
out
pop
xchg
and
pop
outs
mov
popa
cs
and
cmps
call
or
pop
mov
loopne
test
outs
xchg
in
fcmovnbe
mov
out
shl
es
mov
push
xchg
ret
push
jecxz
sub
(bad)
cmp
ret
fadd
jbe
cli
aas
enter
sub
dec
scas
mov
adc
in
retf
in
test
mov
nop
push
adc
std
inc
pop
add
push
lahf
jmp
adc
adc
fsubr
fimul
pop
pop
jge
int
inc
xchg
cld
adc
lahf
xchg
fld
jb
addr16
neg
scas
cmp
mov
fnsave
xor
popa
mov
test
iret
shl
gs
cs
pop
popa
cmps
shl
in
jge
xchg
(bad)
or
cmp
rcl
inc
jne
mov
shr
sar
or
sub
loopne
out
(bad)
scas
inc
push
pop
xchg
inc
inc
push
int
dec
adc
arpl
pop
mov
aaa
xchg
add
mov
add
icebp
and
push
xchg
stos
pop
add
mov
sti
push
adc
rcr
nop
jo
loopne
jecxz
test
sub
xor
jo
mov
data16
movs
inc
ins
fild
and
in
or
dec
mov
sbb
mov
(bad)
adc
push
aaa
sar
lea
(bad)
stc
loop
test
mov
retf
xchg
adc
sbb
jl
imul
js
cmp
es
mov
loope
pusha
or
repz
push
adc
clc
shl
pop
inc
add
pop
outs
lea
out
lea
icebp
outs
add
je
xchg
or
mov
scas
and
and
movs
cmp
in
inc
push
mov
jl
pop
mov
out
rol
retf
and
xchg
scas
and
sahf
dec
ret
fs
mov
lock
outs
fwait
jns
inc
lods
pop
add
push
xchg
adc
fsub
fmul
sbb
dec
add
js
clc
cdq
ds
cld
fmul
mov
popa
xchg
jbe
cs
shr
pop
push
mov
out
(bad)
push
retf
pop
mov
aam
jle
repz
pop
fidivr
cdq
pop
cmp
sbb
mov
add
dec
scas
lock
jae
lds
(bad)
xor
push
xchg
dec
push
fimul
dec
mov
shr
adc
aas
push
clc
jae
ins
shr
stos
fwait
sub
pushf
mov
aad
lods
fst
int3
(bad)
(bad)
mov
int3
pop
mov
test
mov
fcmovne
sar
sbb
dec
and
cmp
test
pop
neg
push
mov
sub
xor
aas
lahf
sti
mov
mov
in
retf
leave
inc
adc
fist
jle
jmp
push
adc
sub
dec
nop
stc
mov
xchg
lods
or
movs
imul
push
fld
out
xlat
in
cmp
out
mov
clc
aad
shl
sbb
xchg
ret
fwait
mov
inc
test
mov
dec
cli
dec
push
jge
fsubp
loop
pushf
push
std
bswap
data16
jbe
mov
(bad)
jecxz
mov
mov
call
adc
jo
dec
outs
jne
ror
mov
xchg
hlt
mov
sbb
sti
fucomip
dec
fs
shl
mov
sub
out
sub
push
xchg
adc
ins
jg
mov
xor
popa
pop
std
out
jl
into
test
add
xchg
test
(bad)
stos
loope
mov
push
cmp
ins
cmp
popf
mov
push
stos
aad
push
sub
pushf
int3
sub
inc
jp
add
mov
mov
push
mov
and
mov
(bad)
shl
xchg
adc
jbe
retf
and
xor
iret
out
adc
div
pop
inc
sub
ds
(bad)
jno
push
mov
sub
stc
cli
xchg
cmp
js
imul
clc
aas
mov
outs
(bad)
clc
inc
mov
movs
lds
cmps
ror
int
mov
or
cmp
js
out
mov
into
sub
xor
movs
jne
xchg
retf
pop
mov
jp
xlat
jo
icebp
int3
xchg
sbb
std
inc
xor
ret
imul
in
xlat
sbb
mov
retf
in
rcr
test
retf
and
cmps
xor
inc
sbb
ror
xchg
push
rol
add
sub
mov
bound
cmp
and
(bad)
jnp
adc
sbb
xchg
push
iret
xor
pop
pop
fwait
adc
and
inc
enter
or
xor
and
and
aas
fwait
mov
cmp
ss
loope
fs
sbb
test
stc
add
xor
in
outs
ror
jl
and
mov
xchg
mov
mov
ins
int3
scas
lahf
pop
push
call
hlt
cdq
or
icebp
dec
cmc
mov
out
xchg
push
mov
or
stos
or
push
jg
out
add
jmp
arpl
sar
cmp
xchg
cmp
dec
mov
jo
sbb
cmc
sahf
add
lods
(bad)
sti
(bad)
cmc
lds
jno
and
adc
pop
mov
xchg
xor
outs
mov
sahf
hlt
ins
sub
stc
inc
out
jle
or
mov
push
xchg
(bad)
or
cmp
cmp
pop
add
push
loop
std
xchg
mov
retf
mov
out
or
mov
cmps
and
dec
daa
stos
ret
mov
sub
outs
cmp
enter
dec
mov
in
xor
sbb
adc
lods
sbb
fwait
jg
int3
add
iret
pop
sub
push
outs
push
jbe
cmp
sbb
ret
mov
push
cmps
cmps
ret
pop
sbb
mov
retf
xlat
enter
outs
mov
cwde
dec
int
shl
push
add
(bad)
out
outs
xchg
mov
cmp
int
cmp
mov
xchg
aad
pop
int3
mov
icebp
rcl
jns
add
push
rcr
shl
inc
sbb
cwde
adc
pop
push
scas
call
jmp
dec
clc
push
pusha
inc
fmulp
retf
daa
pusha
sub
std
std
aaa
mov
es
mov
or
test
stos
dec
imul
inc
(bad)
fcomp
inc
dec
sub
ins
pop
lea
(bad)
mov
ss
aam
sti
inc
dec
scas
mov
xor
loope
loope
sti
pop
loopne
xor
sub
jmp
ror
adc
aad
mov
push
push
add
xchg
outs
sbb
in
sub
lds
xchg
sub
or
popa
out
push
adc
or
push
jns
cmp
rcl
in
popf
icebp
arpl
xchg
jmp
test
jl
loop
mov
mov
jmp
or
mov
push
sar
push
movs
retf
inc
repnz
adc
xor
mov
dec
sub
pop
aaa
mov
test
xor
dec
xor
loop
push
idiv
cld
pop
das
ss
aas
inc
cmp
lock
adc
inc
push
pushf
loopne
jmp
inc
mov
out
sbb
dec
push
mov
into
xchg
add
in
adc
add
jmp
inc
mov
push
mov
mov
ret
cmc
mov
add
or
(bad)
mov
rcl
hlt
jo
push
dec
or
jg
push
and
sub
cmps
aam
ror
shr
jg
jmp
mov
ror
ss
pop
jns
jg
mov
call
fild
mov
or
shl
jae
jne
retf
adc
cmps
sbb
sub
mov
je
scas
push
add
rcl
lea
(bad)
jl
pushf
fs
sbb
movs
ins
mov
hlt
fwait
push
pop
ins
sbb
pop
or
call
test
and
repz
in
movq
gs
cli
add
xchg
jle
adc
mov
cmp
cli
movs
pop
adc
arpl
dec
call
mov
in
sbb
sbb
shl
jl
jle
jmp
fisubr
mov
add
stc
xor
test
(bad)
in
and
pop
jmp
add
cmp
les
lods
sbb
jmp
test
mov
mov
les
cmps
add
ins
push
sub
push
or
arpl
scas
fistp
pushf
dec
inc
fs
jmp
nop
push
mov
js
fs
pop
push
push
ret
ret
ins
pop
push
sahf
pusha
sub
in
movs
push
add
addr16
push
sub
mov
xchg
cli
cmp
or
push
mov
cmp
adc
fcom
jle
in
ret
out
jbe
sbb
pushf
int
sub
jo
jp
xchg
inc
rcl
sti
mov
adc
aam
cmp
les
mov
cmps
and
mov
out
mov
xor
bnd
xchg
dec
lea
mov
sub
retf
clc
loope
outs
and
pushf
aad
jge
repz
inc
repz
call
inc
das
aad
push
into
test
jo
fild
xor
mov
xor
jmp
or
dec
int3
xor
popf
fadd
sahf
dec
cld
sbb
iret
hlt
cmp
jnp
outs
sub
ins
add
sbb
or
pop
or
jle
popa
sbb
vcvtpd2ps
xchg
push
stc
jge
cmp
ret
mov
in
xor
fmul
outs
int3
repnz
clc
retf
xor
bound
aaa
fnstenv
pop
pop
xchg
adc
jb
rcl
gs
add
lahf
arpl
add
leave
xchg
dec
sub
arpl
mov
fmul
or
fstp
sti
sub
dec
sbb
mul
xchg
or
ds
and
or
lods
xor
retf
xchg
xchg
and
xchg
dec
sub
iret
mov
fisubr
sbb
ret
xchg
je
dec
popf
lds
push
repnz
sbb
das
cli
lea
frstor
mov
or
retf
mov
and
daa
mov
dec
lahf
cld
push
xchg
clc
lahf
mov
ins
mov
scas
cmps
bound
jge
cmp
jb
movs
out
rcl
sbb
cmp
inc
jecxz
outs
jmp
out
mov
sbb
push
add
or
das
mov
sbb
sub
dec
mov
in
adc
(bad)
getsec
sbb
retf
popa
xor
outs
fwait
inc
icebp
daa
sub
mov
test
jp
mov
mov
out
(bad)
std
repz
adc
pop
ud0
jno
imul
or
arpl
dec
js
xchg
sbb
test
fmul
cwde
add
shl
pop
add
cli
sbb
out
movs
adc
push
out
or
out
les
mov
fcomp
cmps
adc
push
call
shl
cmp
stos
sbb
mov
dec
mov
sub
(bad)
mov
and
rol
sub
rsqrtps
xchg
or
in
shl
movs
or
mov
cmp
(bad)
sti
shl
jp
xchg
fwait
ds
mov
rcr
aaa
cmp
loop
aam
sub
mov
in
sbb
sbb
test
es
inc
iret
(bad)
jmp
mov
jmp
mov
in
mov
sbb
pop
mov
icebp
sub
dec
xor
xlat
add
jmp
cmp
lods
push
cmc
or
sub
sbb
push
ja
push
fstp
xor
cmp
xor
adc
data16
movs
(bad)
push
push
nop
adc
mov
adc
dec
mov
nop
and
fsub
xchg
pop
mov
cmp
test
imul
out
je
imul
pop
repnz
iret
push
repnz
jp
(bad)
or
aad
fidiv
push
shl
sbb
pop
push
jle
xor
inc
mov
push
push
mov
mov
(bad)
scas
dec
adc
test
add
xchg
dec
xchg
out
jmp
int
xchg
ja
sub
popa
dec
bound
in
pop
mov
in
lock
and
std
sar
and
test
outs
cmps
pop
mov
jb
pop
cwde
nop
add
mov
mov
stos
test
arpl
int
stos
pop
cld
stos
cmp
lock
(bad)
std
xor
imul
or
pop
fadd
retf
mov
data16
dec
inc
lods
sbb
retf
repz
adc
sbb
and
push
mov
push
and
in
push
xchg
xchg
stos
adc
mov
ins
dec
int3
loopne
int3
jp
mov
leave
inc
pop
ror
and
je
and
repnz
out
xor
clc
ins
mov
mov
out
inc
cbw
int3
out
adc
(bad)
ret
jmp
pop
xchg
xchg
mov
mov
js
push
mov
push
ins
je
push
mov
push
push
iret
aam
mov
mov
ins
mov
sbb
jo
jns
cmps
inc
cmp
dec
xor
addr16
es
ss
dec
mov
out
cli
xchg
cmp
test
mov
sahf
cmc
dec
xor
or
mov
mov
in
rcl
mov
inc
sbb
outs
rep
sbb
xchg
pop
js
lods
loope
adc
fwait
xchg
adc
jo
adc
sti
push
sbb
mov
outs
les
pop
outs
imul
push
repz
push
push
mov
mov
jns
mov
mov
js
leave
xchg
fldcw
fistp
aam
pop
pop
es
xor
ins
dec
stos
in
les
cld
out
inc
rcl
cdq
cmp
jle
jno
and
inc
dec
inc
repnz
mov
jge
fiadd
idiv
dec
js
outs
ss
jle
jae
pop
dec
fwait
int
push
mov
inc
je
adc
push
cmp
cmp
pop
jmp
out
sbb
sti
or
adc
ret
in
repnz
mov
cmp
xlat
add
and
ins
in
leave
lods
push
add
mov
inc
mov
inc
or
and
mov
cmp
push
sbb
pop
adc
push
sar
icebp
imul
or
jmp
push
xor
shr
ds
jb
add
jno
retf
and
and
clc
lock
xchg
scas
push
adc
movs
int
ins
dec
mov
retf
ins
pusha
(bad)
daa
push
mov
std
sbb
fstp
sbb
jmp
ins
xor
xchg
lock
jmp
jo
mov
pop
stos
mov
and
dec
dec
xor
push
lds
jbe
lea
lea
jl
pusha
mov
xor
ss
jno
push
rcl
inc
xchg
mov
jnp
push
retf
inc
jmp
or
loop
pop
dec
add
dec
popa
mov
sub
sub
std
cmp
push
and
dec
dec
lods
lods
in
jg
adc
jns
out
test
xchg
and
cwde
gs
adc
push
mov
pop
shr
stc
lock
out
in
jg
and
or
dec
lock
and
mov
pop
das
int3
mov
mov
mul
in
repnz
fisttp
inc
pop
jno
les
sbb
mov
daa
mov
xchg
aam
jp
jae
sbb
mov
xchg
push
cmp
hlt
inc
push
fiadd
data16
fstp
cmps
ss
retf
mov
mov
(bad)
push
in
outs
push
ds
or
pop
push
and
es
in
fwait
std
nop
push
mov
jb
dec
lahf
fs
mov
pop
lods
gs
cli
sub
daa
loopne
cmp
xor
xchg
or
call
aad
aaa
jno
jp
shl
and
push
ret
xor
retf
cmp
inc
dec
mov
add
lds
arpl
dec
je
jmp
mov
loopne
cmps
test
push
(bad)
std
cmp
dec
or
test
test
nop
jp
test
mov
daa
pop
ret
imul
repz
imul
rol
adc
and
sbb
psrad
push
xor
clc
ds
dec
test
adc
in
push
sar
(bad)
mov
push
retf
jns
mov
and
mov
mov
xchg
bound
aas
ja
inc
sbb
in
stos
sbb
push
cmp
ja
jge
lock
fadd
xchg
cmp
in
sub
icebp
test
or
cdq
adc
stc
je
jo
inc
imul
out
idiv
out
ja
pop
popf
xchg
push
or
sub
and
mov
and
add
mov
outs
adc
aam
mov
xchg
pop
cs
mov
xchg
xor
pop
cld
or
dec
mul
out
adc
hlt
sti
xor
and
jb
pop
jle
xchg
or
or
or
push
ficom
sbb
movs
mov
div
imul
(bad)
ficomp
mov
out
retf
loop
sub
rcl
ret
std
sub
push
mov
nop
lds
sbb
jnp
test
je
xchg
and
loopne
lahf
push
pop
ja
(bad)
sub
(bad)
lock
dec
mov
add
sbb
or
pop
shl
(bad)
add
ins
push
cmp
cmp
jne
fstp
jns
mov
adc
retf
stc
in
cmp
(bad)
adc
inc
mov
imul
js
bnd
(bad)
loope
push
cld
push
jnp
xor
aas
and
aam
adc
outs
(bad)
sti
cmp
pop
mov
shl
gs
mov
ret
rcl
jmp
mov
(bad)
icebp
push
mul
jb
es
sub
inc
in
repz
fsubr
mov
mov
lock
sub
sub
inc
icebp
test
and
inc
out
jbe
jl
sbb
jmp
cdq
retf
loop
fcmovnbe
pop
(bad)
cld
push
push
addr16
shl
pop
pop
adc
test
aaa
and
jle
mov
jmp
add
sub
lods
lods
inc
pop
sub
cmp
push
jnp
cmps
into
daa
pop
icebp
or
test
dec
hlt
pop
mov
jp
xchg
(bad)
push
add
jns
inc
push
dec
leave
xlat
es
inc
dec
push
inc
sbb
inc
loopne
cmp
(bad)
pop
xchg
daa
mul
and
jae
pop
inc
pop
adc
hlt
ds
popa
cmp
adc
inc
xor
mov
aam
int
shr
daa
cdq
mov
call
sub
cdq
lahf
jnp
dec
stc
scas
jl
dec
push
dec
xchg
mov
xor
adc
ja
lds
mov
stos
push
ror
(bad)
inc
push
cwde
sti
sub
je
dec
cmp
fsubr
stc
pop
adc
rol
mov
mov
jmp
popa
pop
sub
sub
pop
clc
jbe
retf
fwait
shl
jp
jecxz
jmp
or
ffree
mov
pop
or
adc
dec
dec
pop
ss
arpl
mov
lods
hlt
adc
test
into
pop
xchg
fst
dec
sbb
push
movs
adc
(bad)
(bad)
cmp
dec
mov
add
ds
add
cdq
pop
scas
shr
xchg
push
das
xchg
mov
scas
ret
inc
sahf
fldcw
or
fldenv
push
imul
test
dec
cmps
or
sti
test
dec
inc
pop
stos
cmp
(bad)
ficomp
xor
popf
test
mov
push
clc
call
jns
fxtract
xor
inc
bound
add
mov
sub
cmp
ja
jl
xchg
inc
(bad)
mov
repz
rcr
sbb
lock
(bad)
sahf
out
xor
ss
ret
push
daa
mov
shr
adc
jno
repnz
inc
pop
iret
idiv
retf
enter
adc
jmp
je
inc
pushf
nop
adc
add
cmp
sti
xor
loope
mov
adc
push
mov
aaa
add
xor
or
fdivr
stc
fsubr
rcl
imul
and
sbb
das
pushf
popf
loop
pushf
daa
cmps
or
jp
loop
std
popa
clc
sar
or
fsubr
ins
daa
rol
adc
out
in
cld
pop
and
arpl
test
sbb
xchg
scas
mov
sub
mov
mov
push
stos
xchg
out
std
mov
xor
pop
cwde
pop
pop
jns
ins
xor
push
mov
xchg
cwde
add
pusha
jle
fadd
jp
mov
ja
sbb
mov
gs
mov
pop
or
push
inc
mov
arpl
fldenv
xchg
jge
fbstp
out
cmp
fist
sar
or
jno
(bad)
mov
or
fistp
xor
or
pop
adc
sub
ror
rcr
mov
push
sbb
rcl
or
dec
aam
leave
enter
in
je
sbb
into
xchg
or
imul
fdiv
jb
pop
and
sub
in
out
xor
push
jp
and
mov
xchg
or
cld
movs
add
js
les
iret
movs
bound
mov
push
aaa
sub
int
mov
and
es
scas
in
push
int
leave
int
push
out
jecxz
lock
outs
and
and
out
out
out
add
push
push
ja
jbe
cmps
sub
sub
(bad)
ins
mov
pushf
dec
test
int3
xchg
popf
repz
lds
or
jno
or
lds
in
dec
or
stc
xchg
(bad)
icebp
mov
cmps
out
mov
retf
cmps
ss
out
bound
jmp
outs
icebp
push
push
mov
(bad)
jl
or
push
fwait
sub
je
mov
add
dec
shl
xchg
sahf
jbe
or
(bad)
dec
(bad)
dec
cdq
(bad)
fsubr
adc
push
adc
loopne
dec
leave
pop
ds
loopne
(bad)
(bad)
push
mov
dec
aas
fucomi
dec
jae
xor
and
fldpi
xor
leave
or
add
adc
repnz
pop
xchg
and
push
ds
dec
pop
lods
jbe
add
mov
in
ss
xlat
ret
sar
(bad)
and
xor
jmp
fstp
les
jbe
add
scas
jns
lea
fstp
lock
and
or
sub
(bad)
sub
das
retf
dec
dec
mov
retf
jmp
dec
xlat
outs
movs
adc
or
sub
(bad)
inc
into
or
call
xor
and
jl
jne
cmp
movs
jecxz
xor
movs
mov
sbb
jecxz
xchg
(bad)
stc
sbb
lahf
jp
out
clc
jo
movaps
sti
repz
and
loop
mov
add
ret
jae
ret
ja
ret
and
cld
pop
mov
in
cdq
jle
pop
pop
pushf
out
jg
sbb
mov
call
jg
aaa
leave
sbb
xchg
inc
jae
mov
cbw
icebp
aaa
push
int3
xchg
test
add
sub
pop
xchg
ja
xor
rcr
ins
pop
jmp
dec
aam
test
inc
mov
movs
xor
add
repz
and
gs
jmp
(bad)
cs
rcl
pop
outs
inc
add
adc
xchg
dec
xor
inc
and
das
(bad)
scas
adc
leave
add
jmp
inc
rol
ror
daa
aaa
loop
jle
xchg
call
mov
pop
xlat
cmp
or
(bad)
xor
outs
cdq
mov
adc
pop
jns
out
xchg
push
out
xor
fcomi
xor
mov
mov
sbb
adc
retf
jne
test
jns
mov
js
lea
xor
mov
popa
adc
(bad)
and
imul
jle
shl
imul
sbb
xor
cmp
dec
and
(bad)
mov
pushf
imul
js
xlat
or
or
push
icebp
cs
test
jbe
xchg
(bad)
retf
pop
imul
inc
add
sub
xor
loopne
call
mov
mov
mov
and
and
enter
xchg
sbb
inc
repnz
pop
data16
not
loop
ja
xchg
fidivr
jno
xchg
or
jo
scas
js
or
addr16
mov
je
push
mov
sar
lds
das
aaa
mov
stos
xchg
adc
retf
aam
dec
int
iret
mov
ret
jp
sub
jno
fcomip
sub
(bad)
sub
js
add
mov
mov
hlt
scas
loope
pop
xchg
sub
or
out
add
dec
dec
sub
or
in
xor
mov
mov
retf
cmps
aam
jle
fstp
test
lods
dec
mov
into
mov
fsub
fstp
sbb
mov
outs
cs
fsubr
adc
dec
jae
test
das
pushf
nop
sbb
in
cmps
xor
mov
cmp
push
repz
or
(bad)
sub
sbb
and
push
dec
mov
cmps
mov
shl
pop
call
repz
out
dec
jb
dec
and
jmp
adc
push
scas
cmps
adc
add
mov
into
retf
lods
scas
sbb
aaa
fdivr
mov
mov
cmp
inc
pop
push
inc
pop
sbb
test
dec
es
das
outs
jo
push
jnp
mov
push
std
or
push
adc
sbb
pusha
test
jb
pop
pop
and
or
fadd
repz
int3
adc
add
loop
frstor
mov
ins
or
out
or
mov
mov
loop
jb
repz
inc
cld
pusha
push
or
mov
mov
sub
pop
shl
pop
dec
retf
dec
sub
push
psubsb
cmp
xor
mov
push
ret
push
sbb
sub
stos
add
dec
imul
adc
inc
sti
test
test
dec
inc
pop
mov
ds
in
pop
test
icebp
lods
pushf
jmp
pop
mov
mov
fs
and
das
popa
add
jge
cmp
or
dec
jns
int3
mov
add
pop
ins
xor
xchg
lock
or
jg
dec
xor
in
cld
pop
push
sub
ins
iret
jo
cmp
push
xchg
sub
xor
dec
add
push
pop
mov
popf
mul
sbb
cmp
cdq
add
rcl
mov
adc
jp
movs
retf
hlt
dec
icebp
ret
adc
jecxz
cmp
call
imul
clc
sub
fcomp
test
stc
aas
lods
test
in
jo
add
xchg
push
cmps
cmp
out
jb
push
into
popa
in
xchg
or
jne
jmp
add
xor
fisubr
xchg
fwait
addr16
adc
push
daa
jb
aad
std
sub
mov
leave
push
into
div
pop
push
cld
das
push
cmp
(bad)
push
mov
cmp
inc
mov
movs
pop
mov
test
lds
dec
lahf
cmp
retf
xchg
push
es
cmp
jmp
mov
mov
test
xor
pop
pop
jle
rol
jbe
jnp
aaa
cli
nop
rol
mov
add
xchg
pop
inc
imul
xor
push
fwait
sub
adc
ins
jns
mov
(bad)
neg
aam
mov
inc
mov
(bad)
arpl
dec
fimul
retf
mov
mov
push
int
cmp
cmp
push
fs
sbb
inc
mov
sbb
xchg
push
(bad)
(bad)
jnp
push
shr
push
cmp
outs
nop
test
mov
ds
mov
fisub
ja
dec
jb
push
dec
aas
jmp
inc
cmp
sti
jecxz
mov
enter
(bad)
and
(bad)
add
es
dec
(bad)
repnz
mov
jmp
cld
or
add
inc
push
cmp
fstp
or
cdq
rol
pop
test
imul
jno
sbb
add
push
sub
daa
(bad)
pop
inc
inc
shl
mov
inc
sbb
jg
retf
pop
outs
jle
add
push
cld
push
fwait
inc
dec
dec
jo
sub
push
out
push
cdq
stc
inc
pop
ins
int
mov
xchg
dec
les
lock
cmp
cdq
add
pop
xchg
ret
inc
les
mov
xor
jl
aas
inc
movs
sub
or
and
std
mov
cmp
aaa
cmc
cdq
cmp
ja
lahf
inc
ret
mov
retf
cmp
xchg
jmp
add
push
pop
jp
pop
mov
pop
clc
mov
cs
popa
rcl
add
lock
pop
nop
ins
adc
hlt
stos
inc
add
pusha
inc
xchg
mov
int
inc
popa
outs
out
mov
sahf
cli
add
in
lods
push
sahf
jg
sub
fistp
test
fwait
test
out
rcr
mov
push
test
(bad)
jle
js
and
pop
and
lea
adc
add
ss
mov
jl
add
repnz
add
inc
xchg
jb
mov
popf
(bad)
mov
cmp
adc
cmp
mov
inc
sub
clc
psrlw
pop
cs
mov
stos
xor
out
adc
lahf
jo
das
dec
mov
imul
je
mov
nop
stos
rcl
cmp
dec
xchg
mov
jp
(bad)
xchg
xor
push
into
retf
and
movs
cmp
or
adc
cmp
push
mov
out
fdiv
test
sti
dec
fldenv
inc
or
xchg
cmp
cld
cmp
fprem
gs
test
aam
sti
movs
cdq
movs
xchg
sti
or
inc
out
jb
(bad)
mov
test
jbe
cld
popf
imul
retf
dec
std
sub
cmc
repz
in
mov
mov
repz
mov
sub
sub
xchg
das
jns
in
iret
jns
sbb
jle
jnp
sbb
in
scas
inc
push
fnstsw
cmps
adc
adc
add
popf
mov
stc
cli
out
mov
and
sub
mov
rol
cli
repz
jg
jecxz
xor
ss
outs
push
addr16
pop
mov
sahf
mov
daa
in
cmp
movs
nop
add
xor
pop
dec
ins
mov
(bad)
out
iret
xchg
bound
push
mov
popa
sar
sar
mov
and
push
cdq
mov
jmp
and
push
aam
retf
ss
out
sbb
xchg
xor
and
into
xor
stos
push
call
and
xchg
or
sub
sbb
adc
(bad)
push
hlt
cmp
jnp
pop
test
adc
in
nop
mov
shr
or
test
xchg
out
mov
mov
ins
shl
into
jmp
jmp
and
in
aad
das
test
pop
jmp
imul
mov
mov
test
loopne
mov
out
adc
push
ins
mov
ins
dec
xor
jge
jmp
mov
dec
rcl
or
sub
sub
mov
fsubr
adc
add
ret
(bad)
fld
shl
xor
or
jge
push
repz
sub
fsubp
adc
mov
dec
inc
ds
xchg
and
xchg
leave
add
das
aaa
les
xor
fist
test
imul
push
clc
push
das
push
pop
pop
jle
stos
mov
xchg
add
ins
push
push
mov
inc
push
push
push
lds
movs
mov
jb
out
xor
mov
out
pop
rdtsc
jecxz
adc
jb
dec
pusha
je
addr16
ins
push
cmp
and
fnstcw
inc
push
mov
aas
mov
hlt
and
jge
jns
adc
jl
mov
xor
cli
sub
push
xor
or
xor
es
loop
es
cmp
pop
xchg
hlt
imul
cmp
fisubr
jb
retf
and
dec
(bad)
push
(bad)
rcr
pop
adc
mov
cmp
fisub
dec
in
cwde
stos
adc
and
bound
pop
jb
es
push
retf
retf
fmul
addr16
mov
inc
mov
call
sahf
sub
xor
xlat
mov
sub
lods
and
mov
into
stos
neg
mov
loop
jb
repnz
cs
or
mov
inc
aas
dec
add
push
xlat
imul
sub
jno
pop
mov
repnz
popa
inc
fmul
(bad)
(bad)
das
dec
lods
pop
dec
mov
xchg
sbb
aaa
in
and
push
rcl
(bad)
cmps
pop
push
shl
sbb
pop
sbb
or
adc
sar
ja
push
pop
mov
jecxz
add
xor
shl
xchg
and
adc
cmp
inc
pop
jl
pusha
pusha
outs
je
pop
jecxz
lea
repz
out
sub
test
mov
cs
or
frstor
int
out
lea
xor
fucomi
cwde
mov
push
pop
out
scas
shr
fs
ja
inc
outs
or
mov
in
cwde
stos
test
jne
cmp
mov
addr16
in
js
mov
dec
ins
mov
mov
pop
xchg
xor
pop
sbb
inc
push
retf
leave
and
cmp
mov
xor
jl
jmp
sub
leave
sub
sbb
or
loope
aam
push
fsubr
jae
fild
mov
xchg
xchg
adc
mov
jae
mov
loop
cmp
mov
fstp
dec
mov
retf
lahf
aad
mov
xor
mov
sbb
sub
loopne
cli
enter
xchg
stc
xor
outs
test
push
mov
fs
rcr
mov
fbstp
and
mov
test
popa
test
xchg
xor
pop
mov
inc
dec
cli
lods
iret
(bad)
xchg
prefetcht1
jb
stc
jns
push
jno
push
pop
aaa
test
iret
shl
mov
jle
outs
or
dec
push
sub
or
xlat
pop
popa
popa
sahf
loop
inc
leave
in
sbb
fidiv
cmps
add
jg
or
(bad)
jge
inc
pop
retf
mov
mov
stos
daa
add
ret
fidiv
jmp
mov
loop
scas
clc
ja
into
xor
inc
dec
stc
mov
call
int3
popf
push
inc
adc
shl
xchg
dec
mov
sub
daa
ins
xchg
dec
clts
cli
mov
ret
out
retf
push
mov
(bad)
mov
dec
mov
imul
ja
popf
xchg
add
sbb
adc
stos
shl
sar
test
ss
not
cmp
ficomp
out
pop
rcl
inc
cmp
dec
daa
push
xchg
jmp
call
in
inc
push
jmp
pop
(bad)
jmp
retf
add
outs
xchg
or
mov
and
sbb
jb
ret
jecxz
mov
xchg
jmp
dec
add
pop
(bad)
jbe
and
mov
ds
fild
(bad)
xor
fwait
dec
ins
stc
mov
dec
inc
push
mov
outs
cmp
jae
jns
xor
or
jae
aas
fidivr
mov
nop
push
retf
sub
xor
out
or
sub
dec
xor
arpl
push
dec
mov
pushf
iret
push
popf
mov
ins
sbb
xchg
fwait
aam
add
or
xor
inc
int
ins
push
and
int
cmp
sbb
jle
jns
push
adc
arpl
or
jbe
pop
add
adc
mov
or
mov
or
in
add
pop
ss
repz
xor
xchg
test
mov
sub
push
jo
nop
aad
in
stos
mov
adc
in
inc
scas
mov
mov
stos
hlt
icebp
jp
xchg
push
xor
es
mov
and
dec
mov
loope
jbe
(bad)
cmp
mov
dec
push
nop
repnz
fistp
test
data16
cmp
mov
fwait
rcr
jg
or
iret
mov
or
iret
add
xor
mov
push
jmp
mov
aam
add
lods
out
repnz
test
cmp
scas
xchg
shr
add
test
ror
out
dec
jle
pop
shl
cli
lods
mov
xor
repz
add
fnstsw
lods
dec
sub
mov
retf
sbb
adc
add
repz
fldz
enter
pop
sti
cmp
inc
loopne
sbb
mov
pop
sub
retf
cmp
mov
pop
std
mov
fwait
adc
into
popa
in
sbb
xor
xchg
out
ins
pop
push
xchg
cld
jne
cs
mov
jb
jle
or
mov
sbb
cmc
in
lods
imul
pop
push
or
pushf
sub
cld
fs
dec
inc
fiadd
pop
push
std
adc
jb
add
aad
test
xor
in
push
les
sub
sub
(bad)
pop
cmp
xchg
aam
sub
mov
pop
push
fs
push
or
das
and
cmp
test
ja
fldcw
pop
lock
cdq
or
or
repnz
inc
into
pop
xchg
inc
cmc
xor
aas
nop
ret
aas
jl
pop
inc
adc
sub
xor
je
imul
mov
push
mov
je
lahf
cmp
jae
add
scas
rol
fcom
adc
(bad)
daa
sub
xor
jb
adc
xor
nop
mov
add
call
and
aaa
movs
inc
or
push
sbb
loop
ror
test
pop
dec
sub
or
retf
shl
stos
jecxz
cmp
xchg
pop
xor
sbb
mov
div
cmps
ret
push
fnstcw
cmc
ret
adc
test
pop
idiv
out
push
mov
das
call
mov
fisub
ds
pop
or
inc
and
jmp
inc
enter
popa
ja
ror
fistp
xor
jge
mov
add
pop
pop
cmp
dec
sbb
jae
push
ss
or
cmps
out
aaa
out
aaa
fucom
in
mov
loopne
std
retf
adc
add
pop
cmc
cmp
loop
out
adc
inc
cwde
sub
cmp
pop
ret
aaa
(bad)
lods
jo
sub
scas
jae
nop
clc
add
xchg
sbb
call
cmps
inc
mov
dec
mov
pop
out
push
pop
and
ror
iret
sub
stos
lahf
pop
cs
and
icebp
lahf
sbb
push
adc
sub
jae
push
mov
mov
fst
scas
push
stos
jmp
sar
aas
outs
sti
lea
sub
rol
xchg
inc
sahf
xor
mov
add
ret
sub
mov
dec
cmp
and
add
add
add
lods
jae
(bad)
push
sub
imul
or
add
jl
add
add
push
dec
mov
add
movs
xchg
mov
sub
sbb
jmp
mov
or
dec
mov
xchg
ret
(bad)
pop
bswap
(bad)
push
xor
add
or
dec
mov
lods
fisubr
imul
sahf
fisubr
or
sub
stos
adc
out
gs
cmp
ret
sub
or
xor
ror
movs
mov
mov
add
pop
cld
ins
outs
or
sbb
and
xchg
bnd
ror
sub
push
mov
mov
sub
mov
cmp
pushf
cmp
sub
mov
mov
out
das
sti
fdiv
sti
shl
or
aas
adc
pop
xor
stc
and
cmp
push
mov
or
xchg
push
mov
inc
js
mov
mov
movs
inc
mov
mov
push
mul
je
mov
arpl
test
lods
dec
cmp
adc
cdq
cmps
and
mov
retf
adc
sbb
pop
push
mov
sub
mov
std
push
push
loopne
popa
stc
mov
jo
xchg
pop
add
pop
mov
sbb
movs
out
xor
mov
adc
ja
mov
movs
adc
lds
sbb
dec
sbb
add
and
sbb
pop
mul
scas
pusha
adc
mov
outs
jge
mov
mov
add
test
loop
neg
icebp
iret
and
imul
enter
out
xchg
addr16
push
in
or
mov
inc
and
adc
ss
icebp
mov
jno
scas
aam
popf
push
rcl
test
call
or
mov
sub
pop
pop
xor
dec
pop
cmps
add
(bad)
loopne
sub
or
ja
fucomi
cmps
inc
fsubp
aaa
shl
adc
out
pop
js
outs
push
or
sbb
fnsave
add
retf
retf
push
dec
or
out
sti
out
nop
mov
pop
adc
dec
mov
xchg
push
cs
add
or
xor
cmp
aas
jns
popa
ror
cli
loope
inc
add
mov
test
call
cmps
xor
icebp
or
pop
push
test
repz
(bad)
jns
(bad)
out
xchg
push
sub
cmps
int
adc
or
jo
add
xchg
stos
(bad)
(bad)
xchg
rcr
lock
fmul
add
(bad)
sahf
bound
jne
ror
adc
or
inc
sti
arpl
xor
call
ja
inc
in
sbb
adc
push
mov
inc
loopne
and
mov
and
and
ret
xchg
neg
xchg
xchg
shl
jmp
fstp
xor
stc
lock
popa
cdq
mov
sbb
xchg
es
call
test
(bad)
add
jmp
lock
das
(bad)
nop
inc
inc
jmp
es
(bad)
cmp
imul
outs
pop
sub
xchg
mov
je
xchg
mov
or
mov
mov
xchg
and
xchg
sbb
mov
cs
mov
test
adc
fsubr
xor
retf
or
and
or
add
ror
sub
cwde
cmc
cwde
lock
js
dec
and
mov
retf
xlat
div
loopne
retf
(bad)
cli
scas
and
pop
sahf
jge
jge
cmc
stos
dec
call
cli
jle
jecxz
scas
iret
cmps
aas
jg
out
lahf
iret
xchg
mov
in
ret
(bad)
mov
cdq
and
sub
aam
sbb
fwait
mov
dec
les
int3
outs
add
lea
test
pop
movs
or
ret
stos
ins
pop
jl
pop
mov
cmp
mov
xchg
sbb
nop
(bad)
sub
ret
shl
mov
dec
sbb
add
sub
push
jbe
add
test
xor
pop
jge
cmp
add
int
in
jecxz
cmp
jne
rol
push
push
cmp
(bad)
xchg
or
stos
scas
retf
adc
scas
inc
neg
xchg
lods
add
icebp
std
arpl
stc
or
loop
pop
push
loope
adc
dec
fld
cmp
dec
inc
xor
mov
mov
inc
movs
mov
es
call
sub
ret
retf
scas
adc
push
pushf
push
mov
cmp
outs
mov
adc
fwait
inc
xor
sub
dec
lods
xchg
clc
in
(bad)
(bad)
inc
pop
(bad)
jns
test
outs
pop
ins
add
push
movs
xor
out
and
js
mov
out
loope
xor
(bad)
in
mov
jle
jp
pop
nop
das
and
std
in
jne
push
int3
or
sub
jg
int3
scas
inc
jl
jo
and
mov
mov
jns
push
mov
cmp
pusha
mov
pop
mov
in
jae
scas
pop
out
ins
push
jo
loopne
js
jbe
pop
inc
cwde
add
and
ret
jne
push
xchg
cs
stos
sub
sahf
xchg
fldenv
call
retf
jle
inc
mov
sub
fcom
aaa
or
sbb
repz
sbb
cld
pop
add
add
or
pop
jmp
xchg
xor
div
outs
inc
xchg
daa
rol
repz
inc
adc
mov
add
cmc
cmps
jmp
cdq
jl
sbb
cs
mov
out
jmp
lods
xchg
push
je
test
push
test
sti
and
cmp
push
xchg
add
fcmovnb
or
or
pop
cmp
cmp
jge
push
or
loop
iret
push
out
retf
(bad)
clc
xchg
push
xor
push
mov
rcr
cmp
mov
in
mov
cwde
cmp
outs
add
int3
xlat
lea
pop
cmp
xor
jnp
sub
cmp
add
dec
and
jae
mov
lods
fsubr
inc
lahf
adc
test
dec
loopne
arpl
sub
pop
sub
adc
jmp
neg
mov
je
cmp
push
adc
xchg
lods
push
out
movs
inc
iret
lds
aad
rcr
dec
and
and
stos
xor
ins
add
lds
(bad)
cld
pop
jbe
call
popf
mov
fistp
xchg
dec
and
dec
or
lods
outs
and
cmova
out
repnz
and
xor
adc
aad
xchg
(bad)
aad
in
stos
loope
repnz
repnz
nop
and
test
iret
sub
das
add
test
mov
pop
mov
jnp
fldenv
jle
pop
pop
rcl
jne
sub
mov
dec
inc
(bad)
add
inc
pusha
adc
lods
idiv
call
ja
mov
or
pop
stos
inc
std
sbb
(bad)
popf
mov
push
aas
cmps
and
enter
mov
sub
mov
mov
xor
sbb
inc
mov
nop
mov
test
fs
in
mov
gs
rcl
sbb
inc
imul
dec
adc
mov
outs
inc
jno
adc
cli
lock
mov
test
xchg
cmp
imul
pop
test
mov
adc
lahf
xor
aad
adc
lds
jbe
pop
jnp
xor
test
pop
adc
push
idiv
lahf
dec
les
sbb
fst
mov
or
(bad)
jecxz
scas
jnp
push
popf
pusha
mov
push
cmps
dec
mov
xor
out
or
cmps
in
push
retf
aas
cmps
js
stc
sub
(bad)
sti
pop
and
sti
pusha
mov
mov
add
sbb
jmp
es
fwait
stc
push
sti
cli
inc
sbb
and
int
les
pushf
mov
inc
stos
cs
jae
push
xlat
in
aad
inc
jns
(bad)
int3
lods
dec
xchg
mov
xor
(bad)
and
stc
(bad)
mov
rcr
aas
repnz
sti
shl
push
add
ror
scas
fistp
ret
inc
xchg
inc
jno
sub
out
xchg
data16
pop
xor
in
repz
push
fcomp
pop
xchg
js
mov
vmwrite
jle
pop
xor
enter
dec
mov
mov
inc
test
scas
mov
inc
sbb
cmp
ret
xor
icebp
jl
push
or
cmp
(bad)
cli
je
pop
out
in
pop
into
loope
dec
sub
jae
out
bound
lods
lea
xor
inc
mov
popa
sar
stos
inc
jb
into
mov
jl
sub
xor
cmc
dec
dec
psubw
fcomp
mov
xchg
mov
adc
test
inc
xor
aam
ins
sbb
dec
fistp
pop
or
rol
leave
stc
or
xchg
sub
lea
shl
push
enter
sub
pusha
jg
cmp
sbb
and
data16
lea
or
inc
sub
das
pop
das
dec
cmp
jno
add
repz
in
cdq
dec
aaa
inc
sbb
test
adc
push
mov
cdq
pop
fwait
adc
jns
add
mov
mov
fidivr
in
push
dec
not
mov
movs
icebp
neg
rcr
fwait
sub
sub
jne
rol
loop
retf
std
cmp
fs
or
adc
sbb
push
shl
or
ins
sahf
and
outs
and
or
in
scas
jge
lock
and
loopne
int3
xor
pop
in
enter
shl
pop
repz
nop
hlt
cmc
aas
into
mov
push
outs
lahf
rcr
ins
xchg
pop
mov
xchg
mov
mov
xchg
aad
sub
jge
or
cmps
mov
push
sbb
shl
popa
jnp
and
pop
add
sbb
outs
dec
imul
icebp
cmp
iret
push
sbb
pop
das
lock
ds
push
xchg
add
icebp
cld
les
cli
and
test
jb
inc
inc
add
xchg
xor
fs
jl
xchg
and
mov
scas
cmp
add
and
dec
dec
or
mov
xchg
pusha
les
neg
ja
rol
outs
lahf
sbb
xor
enter
sbb
mov
outs
rcl
ss
mov
enter
pop
mov
xor
shr
xor
pop
das
push
or
add
mov
xchg
inc
jle
push
int3
neg
loopne
sub
fbld
and
sti
arpl
inc
les
inc
aas
int
sub
mov
call
dec
je
test
mov
cs
call
idiv
movs
inc
mov
test
adc
cmp
push
loope
mov
mov
outs
(bad)
icebp
mov
cmc
mov
mov
xchg
out
pop
lea
hlt
mov
or
popa
push
jmp
or
test
sub
pop
adc
retf
sub
jle
mov
jae
fdiv
in
or
int
or
jbe
pop
(bad)
add
inc
(bad)
adc
cmp
pop
sbb
cli
xchg
cmp
push
into
rcl
data16
or
pop
push
jecxz
call
sbb
adc
cmp
fdiv
push
and
add
sbb
fwait
js
xor
scas
or
xchg
(bad)
mov
fstp
pop
mov
lea
test
jle
cmps
xchg
rol
(bad)
adc
imul
ja
repnz
sbb
(bad)
rol
sbb
ficom
lock
xchg
inc
lds
add
or
fistp
mov
inc
xor
pop
in
cmp
iret
jbe
sti
mov
neg
mov
addr16
es
ins
out
cdq
nop
out
mov
and
mov
pop
xchg
arpl
add
push
cmp
outs
hlt
jmp
lock
push
imul
in
arpl
(bad)
sub
adc
or
fs
and
gs
mov
push
outs
lods
fcomp
ret
mov
sub
mov
cmp
or
jecxz
jno
outs
xor
ins
cmps
test
adc
sub
push
pop
sar
add
jo
cmp
in
aaa
add
and
repz
mov
ins
out
and
jp
adc
call
adc
clc
int3
and
test
rcr
fimul
inc
push
mov
xor
adc
jge
sahf
les
cmp
fmul
fcomi
jno
or
test
popf
adc
xor
rcl
(bad)
test
fwait
inc
iret
jnp
inc
ror
jecxz
mov
push
call
out
lahf
sbb
xor
dec
ins
push
rol
xchg
dec
arpl
dec
leave
mov
push
sbb
pop
aad
or
fild
pushf
lock
sbb
stos
mov
lea
into
mov
xlat
push
dec
mov
pop
pusha
sub
xchg
sub
and
mov
push
jge
adc
lahf
sbb
ds
retf
mov
sar
in
ror
(bad)
imul
fstp
(bad)
mov
aad
xchg
je
inc
push
cs
inc
ins
dec
mov
dec
mov
push
pop
out
pushw
fstp
movs
loopne
xor
dec
pushf
jne
dec
fs
push
arpl
xchg
fxtract
mov
sti
out
dec
adc
rcl
pop
xchg
dec
push
push
inc
lods
cmp
adc
sub
(bad)
adc
mov
jl
fisttp
clc
ins
xor
cmp
add
imul
aam
sbb
and
mov
(bad)
or
and
clc
mov
push
jle
push
sbb
out
int
cdq
mov
dec
mov
and
cmp
leave
xor
inc
mov
movs
es
je
(bad)
adc
jne
pop
xor
jg
or
in
dec
add
neg
xchg
sub
dec
shr
adc
push
lock
nop
rep
into
mov
rcl
cmp
push
xchg
or
inc
and
jmp
xchg
repz
and
outs
jno
(bad)
dec
push
stc
xor
loope
stos
jne
xchg
ins
adc
mov
xchg
inc
fcmovnb
scas
add
movs
and
dec
and
(bad)
pop
call
pop
inc
cdq
sub
xchg
sahf
call
out
iret
(bad)
add
daa
xor
aas
cwde
dec
ins
cmp
(bad)
cld
adc
adc
push
mov
pop
push
ins
sub
mov
fcom
jle
sbb
jb
adc
inc
cmp
fwait
shl
or
pop
cld
cmps
inc
dec
sub
(bad)
sbb
jmp
scas
div
cld
jns
dec
jg
stos
outs
mov
mov
pop
ds
add
mov
push
push
pop
leave
mov
jp
add
lods
jbe
or
mov
or
jge
mov
mov
and
and
jmp
in
push
add
aad
sbb
loope
xrelease
jle
nop
or
push
adc
cmp
in
(bad)
xor
cmp
loopne
sub
jb
xor
fiadd
pop
xchg
and
mov
dec
mov
daa
daa
outs
adc
outs
gs
jns
test
jb
addr16
adc
movs
push
mov
dec
repnz
mov
push
add
mov
inc
retf
push
stos
stc
dec
cmps
in
popa
adc
(bad)
fwait
pushf
mov
(bad)
or
stc
mov
pop
(bad)
mov
push
(bad)
or
jae
and
outs
or
and
in
mov
out
inc
xlat
adc
call
je
push
mov
mov
test
mov
je
test
aaa
into
icebp
outs
push
adc
pop
sahf
push
dec
into
(bad)
gs
cmp
loopne
inc
(bad)
or
adc
push
retf
sbb
ds
jb
inc
daa
imul
add
shl
out
push
enter
cmps
jg
adc
jns
jmp
sbb
cs
sub
add
mov
add
dec
xor
mov
inc
mov
or
sbb
fcomp
repnz
call
data16
jl
ss
and
dec
push
retf
pop
cmp
aaa
mov
movs
inc
dec
pop
(bad)
cmp
retf
pop
scas
cmp
cmp
inc
(bad)
popa
xor
push
adc
(bad)
push
es
jmp
mov
and
dec
int3
push
pop
sbb
dec
fwait
shl
inc
movs
push
(bad)
ss
dec
dec
sbb
dec
stc
mov
test
cmp
out
mov
mov
rdmsr
pop
or
and
mov
cmc
mov
add
sbb
nop
and
xchg
mov
int3
mov
enter
nop
aas
mov
push
js
push
mov
lds
adc
xchg
sbb
int
stos
nop
mov
scas
dec
imul
js
scas
sahf
hlt
mov
repnz
ret
inc
jg
pop
add
adc
dec
xor
mov
sahf
fist
push
adc
je
aad
cwde
stos
mov
aaa
sub
lahf
jae
movs
mov
fmul
mov
push
(bad)
pop
popa
in
jl
sbb
shl
mov
inc
jo
(bad)
push
daa
push
scas
cmp
jg
inc
retf
pop
(bad)
jmp
adc
neg
push
and
shl
push
push
xlat
jne
sbb
daa
unpckhps
jno
mov
clc
xor
cmp
imul
inc
imul
xchg
adc
jg
adc
cmc
mov
ss
ja
stos
inc
in
pop
pop
push
sar
xchg
xchg
and
pop
push
clc
mov
sar
push
push
push
jmp
imul
push
sbb
fld
cmp
outs
sbb
jle
mov
xchg
dec
and
push
xlat
adc
cmps
ss
cmp
push
int
mov
stos
inc
mov
and
xchg
pop
cmp
mov
fstp
dec
aas
js
cmovle
fwait
sar
bound
jecxz
pop
stos
push
xor
dec
loopne
lahf
xor
inc
ss
or
jmp
icebp
pusha
jmp
mov
mov
mov
jmp
push
jge
stc
add
test
inc
and
pop
mov
fs
dec
nop
xchg
adc
lock
or
(bad)
dec
sub
adc
and
cmp
dec
frstor
mov
pushf
dec
pop
xlat
(bad)
(bad)
push
ret
sbb
out
xchg
(bad)
in
jge
shr
rol
inc
(bad)
cs
(bad)
cs
xchg
dec
lea
iret
push
add
stos
xor
push
in
stc
pop
(bad)
leave
sbb
cmps
out
push
xlat
and
ins
xor
mov
xchg
scas
jmp
ins
cmp
lea
xor
nop
mov
xor
cmc
or
cmp
xchg
pmaxub
retf
and
in
in
dec
neg
dec
sti
sbb
xchg
xlat
les
aam
outs
jge
sub
or
cli
icebp
stc
pop
mov
push
nop
jge
inc
outs
jno
xor
add
cmp
mov
iret
pop
sbb
ret
xchg
add
xchg
test
int
mov
ja
adc
lock
jle
mov
aad
test
leave
xchg
cld
xor
lock
adc
xchg
adc
jb
pop
sub
(bad)
hlt
jne
stos
movs
lods
mov
sub
mov
push
popf
sbb
mov
inc
icebp
lods
or
imul
arpl
inc
cs
xchg
mov
sub
jo
inc
xchg
cmc
inc
add
mov
or
xor
test
and
mov
std
fsub
fld
not
xor
push
pop
sbb
idiv
imul
ins
repnz
or
fiadd
sub
pop
or
push
in
out
mov
lods
jns
jnp
aad
sbb
sbb
sar
jge
adc
(bad)
pop
not
sub
dec
jecxz
lahf
and
fsubr
ror
icebp
sbb
sahf
pop
in
cmps
mov
into
jecxz
push
ficomp
stos
jb
or
cmp
pop
call
dec
popf
push
fwait
int
call
cmp
dec
pop
sbb
repz
mov
mov
adc
bound
adc
lock
mov
in
ja
push
fdiv
mov
mov
dec
test
mov
xchg
cmp
adc
fisub
(bad)
adc
push
cmps
loop
repnz
inc
rcr
retf
neg
div
icebp
mov
dec
inc
data16
out
mov
xor
inc
fsubr
xlat
fistp
lahf
mov
jl
ficom
add
xchg
outs
inc
cmp
dec
mov
fs
imul
adc
push
arpl
test
mov
mov
sbb
std
les
enter
xor
jmp
stc
mov
stos
rcl
sub
sub
xchg
add
movs
inc
xchg
retf
push
js
push
loope
xchg
xchg
add
into
lock
shl
xor
mov
and
loope
dec
jbe
or
jb
mov
shl
movs
not
clc
mov
mov
out
popf
mov
mov
dec
jo
jmp
fs
addr16
and
scas
add
call
adc
call
pop
(bad)
fcom
sub
scas
rol
fisub
jp
xchg
in
aas
add
lahf
mov
in
xchg
cmp
add
jae
pop
mov
nop
cdq
(bad)
sbb
ds
shr
add
out
imul
gs
das
imul
sbb
jge
jl
jmp
ja
adc
out
int
sub
fwait
mov
xrelease
cld
pop
aad
rcr
cli
stos
push
js
xchg
jecxz
stos
push
dec
(bad)
in
ffreep
pop
cmc
xchg
mov
lahf
cmps
pusha
dec
ss
push
mov
call
enter
gs
cmp
sti
jge
aad
pusha
add
(bad)
sahf
xchg
cdq
jo
cmp
test
dec
add
fldenv
pop
cmp
outs
popf
sub
mov
push
mov
sbb
mov
pop
jp
and
ss
bound
loop
fcomp
pusha
xor
cwde
scas
xchg
dec
inc
push
add
mov
lock
stos
movs
push
adc
je
cmp
and
dec
jge
aad
sbb
inc
ds
inc
gs
mov
ins
ds
add
mov
fwait
mov
push
in
lods
retf
push
fs
add
retf
jno
jmp
mov
jb
inc
out
scas
out
out
addr16
pop
aaa
mov
test
dec
in
or
call
sahf
data16
imul
push
fst
push
inc
lahf
jp
mov
(bad)
and
sub
or
sub
mov
push
sub
jno
data16
(bad)
add
cmp
test
dec
push
rol
push
xor
es
inc
hlt
and
inc
fcmovb
rol
stc
aas
cmps
sub
xor
rcr
fsubrp
push
in
xor
xchg
dec
jbe
fs
ret
je
cmps
push
aas
dec
mov
mov
mov
arpl
jnp
nop
(bad)
clc
and
cwde
adc
xchg
daa
into
dec
xchg
xor
mov
and
ror
dec
dec
daa
movs
mov
pop
mov
add
mov
mov
sub
aaa
fs
mul
mov
shl
(bad)
stc
loope
xor
mov
pop
data16
add
das
bound
pop
push
js
xor
dec
dec
scas
pop
fistp
jl
stc
jb
xchg
jbe
gs
ret
xor
dec
or
cmp
inc
dec
cld
xor
mov
jmp
cmp
fsubrp
and
mov
mov
icebp
sub
cli
bound
repz
outs
in
aad
xchg
fldcw
inc
xlat
sub
and
mov
idiv
inc
das
jl
push
imul
fisub
mov
add
inc
pop
dec
arpl
loopne
iret
mov
jae
rcl
or
jecxz
out
mov
fmul
outs
mov
xlat
das
pushf
mov
imul
and
mov
or
or
loopne
dec
aam
or
jecxz
ss
outs
and
add
stos
rcr
(bad)
push
in
push
or
inc
aad
sbb
adc
push
xor
adc
jns
daa
es
mov
adc
jmp
dec
into
ret
call
or
into
loope
ret
jp
aad
(bad)
inc
test
cmps
ja
loop
sub
mov
adc
pop
ja
push
js
push
aas
stos
imul
jmp
call
push
lds
inc
iret
outs
pop
sbb
fwait
imul
mov
fwait
cmp
pop
adc
dec
mov
in
in
ror
xchg
push
lea
ins
ja
pop
cwde
xchg
lods
ret
bnd
fcmovb
sub
cmp
xchg
(bad)
repz
xor
add
ror
mov
inc
inc
dec
pop
cmc
fs
pop
cmp
inc
and
pop
mov
dec
loop
and
adc
mov
mov
popf
and
arpl
inc
jb
add
aaa
je
daa
mov
inc
push
inc
inc
jno
mov
pop
shl
rol
sbb
inc
dec
shr
(bad)
push
int3
mov
popf
lods
cmp
push
test
xor
mov
sar
fdiv
arpl
lock
mov
jl
test
mov
pop
int3
pop
xchg
pop
cmc
test
popf
cmp
repnz
jmp
sub
je
sbb
mov
mov
sub
inc
movs
and
dec
mov
popa
ret
mov
frstor
pop
in
pop
lea
inc
aam
mov
sbb
retf
sub
push
push
sar
xor
jle
ror
xor
mov
in
dec
adc
cwde
les
js
paddsb
sub
popa
xor
popa
jg
xchg
call
cmps
ins
or
or
jge
movs
ins
daa
pop
stc
cmp
nop
adc
cmp
mov
lea
cmp
int3
push
and
push
outs
outs
pop
dec
jmp
jp
fcom
adc
outs
stc
ins
dec
outs
popf
aaa
loope
stos
retf
inc
test
les
xchg
ss
ds
mul
(bad)
hlt
mov
mov
inc
add
xchg
call
dec
in
cmp
out
add
imul
adc
and
add
fnstenv
xor
outs
pop
or
sbb
jns
cmp
xor
jns
lahf
adc
mov
ret
cmps
(bad)
jb
test
daa
cmps
stos
jl
adc
pop
fs
sub
xchg
mov
outs
and
retf
scas
cmps
popf
movs
(bad)
or
test
rol
or
cmps
cmp
iret
xchg
or
int
mov
mov
sbb
sub
out
and
(bad)
imul
jae
or
jno
retf
dec
push
test
cld
scas
das
outs
in
cmp
inc
xchg
shl
push
dec
push
xchg
js
dec
fnstcw
pop
fidivr
jbe
mov
and
mov
inc
cwde
pop
dec
inc
cmp
in
popa
in
cmc
fist
add
sub
push
les
retf
fs
dec
pop
mov
scas
les
repnz
popa
lahf
mov
adc
mov
mov
les
imul
add
fisub
movs
scas
jnp
mov
outs
push
out
shl
popa
and
scas
push
test
iret
xor
or
mov
cwde
shr
fmul
sub
dec
repnz
stc
repnz
xchg
mov
pop
xchg
std
add
out
xchg
loope
jle
push
adc
sar
push
mov
sub
push
xchg
loope
add
or
and
lahf
xchg
fstp
enter
aaa
inc
jecxz
stc
xchg
dec
das
test
add
iret
mov
fcom
das
cmps
push
out
js
std
mov
push
out
mov
lods
cmp
mov
loopne
push
sbb
cmps
adc
ret
mov
mov
aam
gs
(bad)
stc
cmps
clc
stos
dec
xchg
or
push
push
sub
data16
jb
sahf
or
dec
in
(bad)
hlt
cmc
jnp
popf
mov
cmc
push
imul
shl
push
mul
xchg
in
dec
cmps
fld
mov
fisub
jmp
stc
ss
lea
stos
jl
xor
adc
pop
add
inc
push
hlt
mov
(bad)
aad
cs
add
(bad)
shl
int
loopne
jecxz
rcr
xchg
mov
jecxz
shr
mov
ins
sub
aaa
cmp
mov
push
gs
popf
add
shr
into
mov
les
and
and
mov
pop
loop
jo
arpl
sub
jns
sbb
sub
shl
lds
(bad)
mov
pop
loopne
or
mov
push
pop
loope
sub
or
mov
aad
pop
out
cmp
int3
cmp
cmp
pop
mov
ss
push
mov
inc
xor
jmp
out
scas
das
and
dec
jns
repnz
jae
xchg
jecxz
pop
and
movs
sbb
dec
push
or
inc
adc
adc
das
out
push
popa
mov
inc
xlat
add
jb
cdq
aaa
je
mov
add
cmp
(bad)
fs
aam
mov
psubd
retf
dec
leave
and
jecxz
xor
push
jnp
push
adc
(bad)
mov
inc
add
mov
cmp
jbe
outs
out
and
mov
push
mov
cmp
mov
and
jp
into
mov
sub
dec
loopne
xchg
ds
mov
add
out
les
(bad)
dec
xchg
clc
bound
lahf
jb
repz
ins
fucomip
scas
mov
push
adc
repnz
and
fcomp
out
ret
int3
fcom
inc
mov
icebp
jecxz
dec
or
sar
mov
fsub
inc
addr16
mov
jmp
cmp
(bad)
int3
sub
psubusb
lods
mov
cmp
mov
pop
inc
outs
push
cmp
xchg
dec
enter
(bad)
jo
jge
adc
(bad)
loopne
jns
imul
jno
xor
in
xor
out
rcl
inc
jmp
pusha
(bad)
jg
dec
rcl
jbe
mov
lds
clc
cs
rol
adc
jge
cmp
fist
int3
xlat
push
fwait
aad
sub
jl
inc
or
jno
dec
jno
dec
inc
dec
mov
cmc
stc
cmps
leave
mov
loopne
jb
imul
inc
jnp
pop
fcomp
sbb
jge
jne
std
mov
push
(bad)
fld
stos
jae
add
loop
push
stos
movs
pop
shl
(bad)
repz
mov
mov
int
and
ficomp
xor
cli
mov
arpl
in
jl
cli
ret
dec
mov
push
xchg
push
push
lds
push
xchg
sahf
push
cmp
cmc
cmp
sbb
cmp
jb
pop
cld
div
stos
scas
jns
ss
adc
cmps
sbb
fcomp
fdivrp
jecxz
jbe
xor
mul
push
imul
or
fwait
jmp
retf
push
rol
push
retf
or
xor
fldcw
popf
mov
int
cli
(bad)
inc
push
(bad)
push
dec
cld
or
hlt
(bad)
(bad)
mov
add
pushf
das
pop
mov
lods
out
std
dec
sbb
pop
aam
mov
shl
call
call
pop
scas
out
ret
popa
stc
cwde
jae
xor
push
xor
dec
stos
outs
out
cmp
out
icebp
(bad)
fld
xor
inc
ret
xlat
ins
cmp
das
mov
cdq
outs
xchg
jge
inc
out
mov
shl
fcmovnb
mov
imul
sbb
aad
pop
je
push
cmp
jb
dec
push
ss
mov
dec
inc
and
xchg
rol
jb
fimul
movzx
lahf
xchg
push
and
rep
clc
sahf
aaa
pop
xchg
xlat
push
(bad)
and
and
fisub
or
pop
and
pop
pop
xor
xor
mov
mov
sti
mov
outs
pushf
push
inc
pop
retf
adc
inc
pop
jns
jmp
outs
cmp
mov
stos
(bad)
xlat
inc
icebp
imul
or
das
xchg
je
fistp
shr
and
jmp
sub
pusha
cli
cmp
sbb
leave
jge
aas
jg
cmp
(bad)
sti
lahf
imul
add
adc
cdq
neg
sbb
mov
cmp
out
sti
pop
ds
mov
in
pop
fwait
or
dec
test
scas
rcl
sub
dec
xchg
faddp
xor
gs
push
pop
jno
jae
retf
push
or
cli
stc
cmp
stos
into
stos
mov
sub
mov
loopne
sti
inc
mov
add
test
push
scas
push
test
inc
sub
sub
and
xor
or
push
ds
lods
sbb
push
xchg
sbb
popf
fwait
fwait
and
add
push
dec
call
test
loopne
lock
dec
xor
jge
jnp
add
fmulp
mov
sbb
cld
les
(bad)
mov
or
pop
sub
(bad)
ss
or
pop
mov
test
jae
rcr
pop
xchg
and
mov
jge
arpl
iret
test
sti
arpl
icebp
adc
or
mov
adc
fstp
les
test
jp
ds
jmp
pushf
sbb
test
scas
ds
es
and
push
and
loopne
(bad)
(bad)
or
lea
jecxz
test
jp
adc
inc
std
bound
ficom
shl
dec
jp
sub
(bad)
dec
inc
outs
sbb
div
in
xchg
cmp
xchg
xchg
mov
push
sub
aas
shl
loope
mov
movs
dec
movs
iret
add
sub
rcl
pushf
add
out
and
xor
movs
out
xchg
iret
and
xor
lods
sbb
repnz
dec
shl
jp
mov
xlat
mov
xor
or
fwait
out
loope
mov
ds
jb
(bad)
mov
lock
js
daa
repz
xchg
or
mov
cmc
cmp
iret
int3
cwde
je
push
int3
fsubr
scas
in
dec
rcl
pusha
sub
aaa
cli
push
dec
inc
bnd
jnp
add
xchg
adc
pusha
sub
push
mov
xchg
rcl
ja
hlt
push
mov
push
cwde
push
pop
and
adc
xchg
gs
jl
or
cld
(bad)
fsubp
inc
push
mov
adc
jge
cmp
and
ret
addr16
adc
pop
imul
add
jp
stos
add
jne
jecxz
sbb
or
jbe
add
das
retf
out
fbstp
sub
pushf
inc
in
inc
mov
out
or
adc
cli
inc
pop
push
fisub
mov
or
mov
jmp
jae
and
dec
and
push
dec
fsubr
lahf
xchg
(bad)
cmps
or
aad
or
fild
(bad)
in
aad
adc
sbb
pop
data16
rcr
loope
push
or
xlat
push
mov
sub
xlat
cmp
xchg
cli
or
addr16
ret
inc
jo
pop
cld
jo
jo
mov
mov
fld
hlt
dec
add
push
add
pop
retf
add
mov
aad
mov
pushf
mov
inc
into
test
sbb
cmps
mov
xor
loopne
out
das
mov
cs
out
mov
pusha
pop
dec
inc
neg
ficomp
mov
imul
sar
cli
outs
es
mov
fdivr
pop
ds
loope
loop
sbb
xor
jmp
adc
shl
and
aas
inc
sbb
sbb
aad
mov
outs
out
pop
and
push
call
push
jl
(bad)
pop
and
push
lods
jbe
std
push
jne
mov
(bad)
cmps
in
sbb
inc
sbb
cmc
xor
sub
jae
inc
cld
idiv
cmp
mov
xchg
dec
out
les
gs
or
idiv
adc
xor
push
iret
(bad)
bound
outs
test
ja
push
sub
(bad)
enter
pop
push
cmp
push
mov
or
mov
in
xor
jns
jmp
shl
arpl
add
fist
out
mov
pusha
cmp
and
cmp
inc
daa
mov
arpl
das
jno
es
push
or
repnz
cmp
ds
cmp
dec
mov
adc
call
cmp
cs
lock
pop
xor
inc
mov
idiv
dec
push
outs
mov
mov
fwait
int3
push
xchg
ins
inc
inc
dec
sub
iret
int3
cmp
std
dec
mov
mov
in
call
fdiv
sub
gs
add
xlat
fldcw
mov
clc
repnz
mov
pop
nop
xor
and
dec
inc
repnz
lods
or
loopne
sub
sbb
mov
cld
jbe
fcomp
sahf
xchg
retf
adc
mov
lea
xchg
loopne
shl
push
and
std
dec
xor
dec
fadd
in
xchg
mov
xor
cdq
(bad)
loope
dec
test
mov
mov
or
ds
or
lods
mov
jno
leave
in
adc
retf
(bad)
std
test
pop
or
add
sbb
movs
pop
mov
ins
add
pop
pop
test
and
mov
mov
aad
ret
fs
loope
es
rol
je
mov
jmp
mov
adc
xor
das
jge
ds
inc
stos
fnstsw
(bad)
pop
(bad)
push
dec
inc
add
sub
div
hlt
rol
stos
pop
and
push
mov
inc
pushf
rol
call
pop
(bad)
(bad)
inc
cmps
add
jo
ins
not
test
mov
shl
(bad)
add
jnp
or
int
icebp
cmc
sbb
pop
pusha
pop
clc
sub
adc
(bad)
jae
lea
mov
jmp
mov
sub
xlat
in
inc
scas
fwait
mov
test
aas
in
popf
je
std
cmp
dec
std
xchg
sbb
movs
xor
xchg
pop
ss
test
or
sub
push
sbb
push
mov
and
sbb
inc
cmps
adc
(bad)
popa
or
out
fild
jmp
fcomip
xchg
fisttp
bound
ret
sub
int3
nop
jmp
or
push
inc
cwde
jg
popa
sbb
jecxz
stos
push
dec
and
out
push
ds
xor
lahf
ret
sub
daa
std
mov
or
frstpm(287
jae
out
mov
dec
jmp
icebp
fistp
mov
or
or
and
mov
jl
mov
xchg
mov
adc
arpl
out
pop
and
push
cmp
in
push
sbb
movs
loope
jle
(bad)
fidiv
mov
ins
adc
out
sbb
ror
pop
or
sub
jp
sbb
retf
popa
xchg
fisttp
fbstp
mov
jnp
push
lods
pop
jmp
xchg
sahf
jge
call
sti
pop
xlat
les
lock
sub
test
das
ins
push
pop
xor
sar
cmp
cld
sbb
push
adc
mov
data16
aad
mov
xchg
pop
cmp
sahf
fnstsw
and
fdiv
mov
dec
ror
and
test
or
into
inc
push
ds
dec
mov
sti
lock
adc
dec
xor
ret
and
adc
rcl
sub
sbb
sbb
into
icebp
jg
aam
addr16
inc
retf
sub
ja
das
xor
mov
imul
mov
push
jns
out
test
movs
rcl
stos
xlat
aad
xor
xchg
arpl
add
cmp
out
jae
mov
outs
dec
test
add
xchg
mov
add
add
mov
nop
xchg
xchg
dec
xchg
and
imul
ja
push
dec
cmp
xor
pusha
lods
adc
push
les
daa
cdq
push
inc
call
cmps
fmul
mov
jb
and
lea
call
xchg
popf
or
jl
ss
cmp
adc
inc
imul
mov
push
mov
push
call
shl
js
add
xchg
fs
pop
sahf
cmp
add
xor
mov
fidiv
cmp
xchg
xor
lea
mov
(bad)
dec
nop
cmp
mov
adc
adc
outs
shr
fdiv
jmp
lods
movs
adc
xor
mov
mov
mov
dec
push
fnsave
xchg
push
jg
fcmove
js
mov
ret
push
jmp
dec
mov
fisttp
outs
jnp
add
lods
mov
jmp
in
pop
mov
push
sbb
inc
(bad)
mov
test
ja
call
xchg
(bad)
mov
push
add
dec
add
xor
ret
pop
adc
mov
add
rcr
jmp
xchg
repz
push
popa
mov
mov
mov
out
arpl
or
dec
xchg
test
mov
dec
arpl
int3
adc
mov
and
push
xchg
mov
cmp
ja
cmc
lock
xchg
dec
call
mov
push
nop
and
test
aas
fst
retf
cld
dec
sar
push
cwde
sahf
ret
fidiv
push
cmp
xor
(bad)
cmp
or
mov
pushf
jne
fimul
dec
pop
stc
xchg
xor
lahf
or
and
xchg
dec
sbb
stos
je
sahf
scas
mov
les
and
or
or
rcr
rcl
leave
mov
pop
xchg
push
dec
jge
(bad)
shl
xchg
(bad)
popf
loopne
scas
pop
inc
out
jecxz
mov
rcr
or
test
dec
dec
jne
push
sar
movs
adc
mov
xor
mov
stos
fld
mov
mov
xor
dec
add
sbb
lods
sub
popa
aaa
out
daa
xchg
pop
jmp
or
in
pusha
loop
movs
xchg
movs
mov
xchg
sbb
aam
jg
sbb
and
shl
fsub
add
inc
fisubr
xchg
mov
in
pop
mov
mov
cmps
int3
mul
movs
sbb
(bad)
aam
call
inc
das
add
sub
sub
dec
cs
cmps
cmp
xchg
data16
ret
test
push
push
sbb
jmp
inc
push
stos
pop
or
jbe
jno
cmp
pop
add
jmp
dec
sbb
mov
jge
enter
jnp
gs
add
into
add
ret
out
dec
lds
mov
daa
cmc
mov
and
inc
es
mov
pop
aad
pop
(bad)
fcomi
dec
fistp
mov
dec
mov
and
dec
xchg
add
jmp
pop
fwait
and
mov
cmps
sub
push
sub
xor
fnstenv
loop
imul
pop
push
adc
outs
adc
dec
or
aam
jo
cmp
loop
aad
mov
popf
aas
mov
inc
jl
dec
mov
mov
cld
test
loope
add
jge
xchg
inc
ret
dec
dec
not
xchg
sbb
mov
jmp
pop
test
bound
sbb
(bad)
xor
or
sbb
xchg
and
adc
add
xchg
mov
aas
out
add
jne
mov
push
push
retf
and
cli
cwde
xor
jne
pusha
mov
add
adc
out
and
cs
or
shl
sub
pop
rol
(bad)
call
int
jb
pop
adc
rep
in
aas
jo
jmp
and
sbb
jg
aas
stos
cwde
push
leave
dec
xor
js
and
(bad)
push
cwde
frstor
and
sub
in
xor
daa
mov
pop
cmp
inc
dec
dec
mov
or
jl
fs
push
add
es
fstp
pop
adc
sbb
sbb
icebp
inc
cmps
rol
int3
lahf
lds
mov
hlt
movs
mov
mov
mov
pop
add
or
cmp
or
aad
or
push
add
and
jo
inc
fild
push
cli
ret
xor
sbb
mov
mov
mov
in
xor
ror
xor
mov
dec
jno
or
jmp
test
xchg
or
and
inc
test
mov
arpl
scas
je
lods
mov
push
pop
hlt
sub
dec
int
and
(bad)
test
xor
inc
xchg
mov
cli
ror
sar
loopne
into
mov
or
dec
scas
repz
sub
xchg
pop
aam
sub
call
inc
mov
push
add
ficomp
shr
sub
or
enter
pop
out
loop
cmp
mov
into
int3
sbb
pop
mov
out
icebp
sub
inc
movs
cmp
cmps
inc
arpl
add
xor
imul
add
arpl
and
movs
data16
push
xchg
in
ret
dec
aaa
add
pop
(bad)
jmp
popa
ja
test
in
mov
or
dec
jae
push
ret
mov
dec
or
cli
gs
xor
and
pop
jp
and
cli
or
or
or
and
inc
std
push
mov
sti
mov
in
loop
into
aas
ret
addr16
pop
fsub
bound
push
mov
rcr
push
(bad)
dec
fucomi
scas
sbb
xlat
push
pop
inc
mov
out
sub
ret
jmp
pop
cmc
jp
add
repnz
outs
push
mov
sbb
repnz
out
mov
mov
push
xor
mov
icebp
mov
mov
das
push
test
sar
icebp
cmp
es
inc
push
cmp
mov
cmp
sbb
daa
pop
jmp
cs
xor
mov
sub
inc
outs
push
and
sar
adc
mov
in
(bad)
gs
mov
sub
push
and
xor
dec
sahf
mov
push
and
ins
jmp
sub
scas
xor
xchg
(bad)
rcl
inc
mov
cmc
pop
push
dec
movs
ins
fld
stos
mov
pop
outs
push
add
push
cs
std
xchg
int
lahf
arpl
or
pop
jmp
cmp
sub
mov
pop
inc
call
sbb
scas
adc
xchg
mov
cld
pop
daa
jne
or
lock
push
into
or
jnp
pop
arpl
or
pop
popf
in
retf
pop
mov
ja
jp
add
mov
arpl
scas
lods
sti
or
(bad)
mov
push
sahf
xchg
push
call
jbe
aam
adc
daa
push
leave
sbb
pop
xchg
mov
pop
sbb
adc
(bad)
in
scas
mov
sub
inc
ret
fwait
xchg
int3
movs
loopne
dec
xor
jo
jbe
in
jno
mov
push
push
pop
and
push
repnz
pop
jae
push
ret
sbb
jl
add
adc
cmps
es
imul
test
cmp
mov
test
arpl
mov
popf
in
or
jle
xchg
inc
push
sub
mov
dec
or
push
call
movs
jae
mov
lahf
aam
movs
out
sub
pop
jmp
in
(bad)
movs
outs
or
std
pop
push
jge
push
sub
mov
cld
xchg
mov
daa
leave
cwd
adc
cmp
push
xor
sbb
in
cld
mov
js
rcl
add
jge
inc
mov
in
out
dec
mov
adc
jp
push
sbb
xor
rcl
and
addr16
vshufps
je
les
sti
and
sbb
iret
add
stos
out
pop
sub
sub
aaa
jnp
inc
or
xchg
adc
iret
ja
dec
ins
xchg
arpl
jne
adc
ror
out
pop
pusha
popf
pop
and
adc
cmp
cmp
test
cmc
dec
mov
stos
and
or
enter
cmp
push
jb
pop
aaa
repnz
xor
push
push
sub
call
in
mov
repnz
bound
hlt
call
pop
xchg
std
xchg
retf
pop
adc
xchg
jp
pop
dec
adc
fcomp
aam
ret
paddw
aaa
scas
push
jp
sub
aam
cmc
dec
sbb
xor
rol
hlt
rol
rcl
arpl
outs
clc
call
inc
or
adc
shr
or
nop
lock
out
mov
dec
nop
and
scas
or
or
je
sub
jl
xor
xor
and
rol
test
adc
inc
aam
fisub
jnp
fcom
jge
pop
retf
pop
(bad)
and
dec
jge
cmp
fstp
or
dec
cmp
mov
cmp
mov
cmp
sbb
lahf
leave
fcompp
pop
mov
jae
dec
iret
sub
inc
icebp
stc
or
jno
sbb
jno
jmp
cld
fdiv
(bad)
adc
jle
cmp
neg
mov
imul
and
test
(bad)
movs
mov
xor
mov
ja
or
jl
nop
fsub
pop
pop
inc
sub
dec
inc
call
add
sub
test
xlat
adc
sbb
call
iret
out
inc
xchg
(bad)
jmp
cmp
xchg
in
sub
mov
dec
push
push
(bad)
xchg
fistp
xchg
aam
mov
sbb
ret
lds
popa
xor
xchg
ja
call
and
inc
push
mov
xchg
std
adc
or
adc
jo
pop
mov
sbb
inc
fwait
sahf
(bad)
pop
inc
sti
xchg
aad
add
dec
sub
aaa
das
push
jno
lods
test
xor
pop
mov
stos
scas
push
mov
inc
jp
mov
fsubrp
div
les
push
or
mov
(bad)
dec
push
popa
repnz
push
test
pop
sbb
jecxz
aaa
mov
jl
mov
mov
dec
(bad)
push
mov
data16
adc
pop
(bad)
jg
fstp
push
ins
out
aas
sahf
pop
js
pusha
into
inc
iret
cld
cmp
loopne
fidivr
or
arpl
movs
fisubr
lock
sti
nop
ret
dec
dec
cmps
out
inc
adc
clc
jb
ins
lds
cmp
repz
loopne
push
mov
fdiv
jge
inc
out
stc
sub
loop
xor
loopne
es
jne
sub
hlt
xlat
push
(bad)
add
cwde
xchg
dec
push
inc
out
mov
cmp
mov
mov
adc
and
mov
mov
sub
into
mov
push
mov
push
sub
cmp
(bad)
pop
cli
clc
in
std
hlt
in
mov
jle
add
lods
call
les
cld
mov
cmps
mov
test
call
jp
push
sahf
push
fmul
not
dec
jecxz
fcomp
jbe
or
fsubr
mov
iret
(bad)
inc
jno
jae
or
arpl
fdiv
sti
retfw
sub
enter
add
ror
mov
int
ss
push
repnz
pushf
outs
popa
pop
pop
lea
les
test
mov
jbe
and
pop
xchg
cld
adc
add
inc
xchg
pop
lahf
test
fimul
mov
int
mov
sbb
movs
mov
dec
inc
cld
add
push
mov
jno
dec
aaa
dec
outs
jno
div
mov
stos
icebp
shl
fnstsw
bound
hlt
aas
pop
pop
cmp
pop
dec
sbb
ret
push
and
or
xor
and
add
inc
pop
and
xor
jae
inc
jmp
mov
or
data16
mov
xchg
jl
(bad)
out
test
xchg
lock
shr
dec
punpcklwd
sti
add
pop
jbe
repz
imul
stos
retf
fistp
xor
or
imul
dec
outs
adc
jg
addr16
jmp
retf
ins
or
xor
push
sbb
cmp
(bad)
jnp
sub
mov
(bad)
hlt
icebp
mov
cmps
mov
loope
outs
not
popf
jns
scas
or
sbb
push
push
jmp
stos
push
and
xchg
push
fucomp
mov
int
push
pop
push
je
ins
push
xchg
mov
mov
icebp
mov
lds
cs
or
mov
call
pop
add
(bad)
ins
sub
jns
pop
bound
(bad)
ss
push
imul
cmps
mov
jmp
out
stos
je
pop
cmp
sub
mov
sub
mov
sub
push
mov
mov
and
inc
jno
popf
or
hlt
cmp
ins
push
jp
repz
xchg
sti
outs
stc
test
retf
jb
cmp
jo
ret
push
ds
cmp
xchg
cwde
shl
sbb
mov
int
or
mov
xor
ins
jg
add
push
in
aam
pop
(bad)
adc
clc
adc
lods
(bad)
fimul
inc
ffree
outs
fdiv
ja
sub
pop
jns
outs
int3
adc
fidiv
mov
mov
mov
fcompp
push
rcr
mov
call
pop
add
(bad)
mov
xor
mov
push
ja
pop
aas
push
call
mov
iret
or
popa
ss
test
xchg
cmps
nop
jle
jnp
repnz
iret
dec
push
sar
out
jbe
sbb
addr16
daa
adc
sub
out
pop
mov
lods
push
movs
sbb
jae
pop
pop
add
fsubr
out
pop
push
test
or
icebp
fldcw
aaa
sub
sbb
iret
in
ret
inc
pop
ret
push
inc
xchg
jmp
pop
loope
dec
and
dec
cmps
sbb
leave
sbb
cwde
sub
jg
jo
xchg
push
stc
or
xchg
outs
dec
xchg
mov
adc
pop
xlat
dec
in
fdivr
and
mov
loope
jge
shr
mov
(bad)
sub
adc
jne
push
push
cmps
shr
xor
mov
das
fwait
inc
das
mov
dec
jmp
add
movs
(bad)
stc
mov
shr
mov
pop
sbb
pop
push
adc
imul
pusha
sbb
popf
xchg
jge
push
pop
mov
(bad)
daa
or
ins
mov
aaa
xchg
mov
add
add
pop
rcr
jnp
scas
xchg
pop
rcr
out
mov
ret
mov
sbb
ds
sub
and
leave
test
int
out
sti
addr16
sysexit
xor
push
test
out
pop
and
mov
and
neg
push
cmps
pop
mov
aam
lods
vpmullw
adc
dec
pop
fadd
out
xlat
mov
fwait
bound
sbb
or
fld
(bad)
mov
pop
repnz
fld
(bad)
pop
mov
push
jnp
mov
ja
das
popa
jge
test
sti
xlat
dec
(bad)
out
sub
push
dec
or
jle
add
sbb
hlt
mov
dec
xchg
stc
inc
and
in
cwde
shl
mov
cmp
adc
les
aad
xchg
mov
jmp
gs
int3
xor
cmc
pop
fcos
(bad)
arpl
or
es
or
dec
add
mov
jl
jne
pop
mov
mov
push
ja
(bad)
mul
cmp
mov
ret
cmp
rcr
call
mov
xchg
dec
push
add
jecxz
sbb
dec
and
inc
push
mov
add
push
pop
(bad)
cmp
stc
mov
sar
cmp
pop
lods
out
adc
hlt
add
fild
sbb
push
jcxz
std
cmp
or
and
pop
ret
shl
test
retf
mov
xor
sbb
(bad)
cld
mov
call
outs
jge
out
rcl
cdq
out
in
inc
or
and
dec
ror
out
jmp
and
out
mov
les
das
lahf
adc
inc
push
xchg
pop
scas
inc
cdq
dec
cmc
jecxz
sbb
fsubr
xchg
or
mov
push
neg
adc
lahf
les
mov
cmps
out
out
sbb
data16
rcr
push
out
jno
add
sahf
mov
or
jne
or
or
je
ja
mov
call
arpl
popa
ror
and
pop
pop
fild
loope
cmp
addr16
and
push
cmps
(bad)
sti
rol
in
(bad)
(bad)
pop
mov
lods
pop
push
lea
aam
sbb
icebp
add
sbb
sbb
jno
rol
mov
inc
mov
xor
jmp
or
pop
push
ret
pop
xchg
dec
sbb
icebp
xchg
add
mov
rol
enter
adc
test
sahf
inc
and
imul
sub
js
cmc
cmps
xor
enter
inc
push
iret
mov
pusha
jns
jl
mov
int
icebp
mov
inc
lds
jp
sahf
sbb
pushf
out
push
xor
aad
push
pop
icebp
xchg
sahf
push
std
js
jmp
and
int
pop
pop
inc
bound
jmp
xor
pop
stc
test
pop
mov
push
loop
sub
pop
call
fisttp
dec
outs
nop
je
sub
push
retf
mov
xor
cmp
(bad)
adc
sti
jbe
dec
jecxz
(bad)
nop
arpl
sub
std
dec
ret
sar
mov
out
jl
test
xchg
shl
inc
mul
xor
scas
add
sar
and
js
int3
pop
dec
cld
lods
out
mov
mov
jmp
retf
push
push
xchg
dec
pop
inc
mov
cmp
mov
sbb
gs
mov
push
push
jmp
cmc
fnstsw
in
cmp
lea
ins
rol
add
jmp
inc
icebp
or
jmp
dec
xchg
outs
jo
sbb
xlat
adc
adc
mov
push
stos
js
gs
ffreep
pushf
outs
or
not
rcl
mov
lods
mov
cmp
xchg
loopne
ins
mov
into
or
xchg
(bad)
cli
in
mov
fdivr
popa
add
lahf
loope
rol
jae
xor
and
(bad)
cli
mov
and
push
dec
lods
test
shr
aas
fcomp
pop
inc
pop
and
test
cdq
pop
repz
push
and
pusha
out
daa
int
mov
loopne
add
mov
dec
mov
xchg
mov
(bad)
sar
jmp
mov
(bad)
inc
push
and
pop
sar
xor
sbb
call
fucomp
pop
inc
push
sub
into
mov
push
inc
add
xor
cwde
test
add
xchg
shl
mov
lock
dec
xlat
dec
int
or
inc
shl
pop
into
daa
inc
sbb
inc
or
add
lock
sub
cmp
jp
fbld
inc
cmps
pop
inc
mov
push
aaa
sub
dec
pop
jo
pop
push
push
mov
hlt
dec
push
push
sub
sar
inc
jne
(bad)
imul
fstp
push
sub
push
sbb
(bad)
jae
fisub
add
xor
push
jb
push
nop
into
out
loopne
in
add
popf
stos
mov
cmp
push
cmp
push
nop
push
out
movs
sub
ficomp
test
pushf
int3
mov
mov
retf
jbe
(bad)
sbb
cdq
push
push
or
pop
lods
dec
add
jb
adc
push
inc
and
aad
mov
div
or
pop
jne
lahf
js
das
hlt
mov
imul
movs
lahf
xchg
xchg
repnz
jp
pop
push
inc
xor
das
scas
addr16
ins
and
lock
dec
jb
or
(bad)
inc
adc
cmps
stos
cmp
aas
imul
xor
scas
mov
rol
scas
mov
rcl
pop
inc
pop
xchg
adc
sub
in
adc
ins
jo
js
popf
cmp
bound
jb
nop
push
(bad)
adc
sbb
xchg
adc
or
jl
pop
icebp
(bad)
fiadd
cmp
(bad)
push
cmps
sti
push
adc
push
div
test
ja
clc
test
fiadd
push
cs
jo
mov
das
push
adc
xchg
mov
sti
lods
out
xor
push
iret
pinsrw
pop
test
add
cmp
into
sub
xlat
or
mov
mov
sbb
jg
mov
and
xor
leave
popf
adc
fild
jae
pop
xchg
jmp
outs
pop
pop
mov
fs
jmp
fwait
pop
(bad)
dec
retf
clc
ret
das
cmp
mov
nop
call
inc
mov
and
mov
and
cdq
inc
mov
out
jmp
push
or
mov
mov
in
fs
and
xor
sbb
push
fsubr
jge
faddp
lock
adc
outs
not
test
lods
(bad)
mov
ret
pushf
and
jmp
pop
xor
clc
and
repnz
add
mov
dec
bound
cmps
xor
int3
(bad)
pop
mul
jne
cmp
push
lods
xchg
call
mov
out
mov
and
and
scas
ins
mov
fstp
daa
jle
push
neg
mov
loop
xchg
xchg
gs
in
mov
sbb
mov
mov
or
push
or
jle
mov
dec
addr16
and
push
add
out
mov
call
xlat
mov
aad
icebp
cli
hlt
push
dec
mov
mov
add
inc
lds
xchg
cdq
xchg
fidivr
pop
cmp
and
popa
fwait
test
dec
clc
not
xor
mov
mov
push
clc
xor
adc
mov
sub
ds
cmp
hlt
test
push
add
jbe
add
imul
(bad)
aaa
pop
arpl
neg
out
inc
xor
stos
cmp
add
push
adc
push
inc
sub
retf
clc
js
xchg
or
or
or
mov
loope
mov
pop
dec
pop
arpl
add
and
and
fadd
in
and
jbe
mov
pop
push
fnop
dec
xchg
or
fstp
pop
jp
mov
mov
lea
add
fbld
xchg
jle
and
adc
icebp
jbe
xor
retf
into
cmp
(bad)
nop
xor
dec
imul
mov
dec
push
jne
cmc
jl
test
aad
call
jbe
mov
mov
cmc
into
xchg
dec
rcl
adc
aaa
and
pop
aaa
inc
lods
test
es
add
daa
mov
mov
adc
not
aaa
enter
xor
xor
ficomp
aaa
xchg
neg
inc
mov
mov
cwde
inc
mov
push
outs
or
mov
sub
mov
out
sbb
jmp
mov
into
je
gs
in
retf
bound
dec
push
fwait
xor
mov
cli
hlt
mov
fdiv
mov
cmp
sbb
(bad)
in
xchg
outs
fbstp
jne
cdq
mov
cmps
stc
je
das
stos
out
call
xchg
bound
xor
add
or
cmp
push
arpl
inc
in
jg
test
adc
cmps
sbb
jns
rcr
xor
xchg
cli
xor
into
add
fmul
push
mov
push
int3
imul
xlat
xor
je
addr16
xchg
daa
dec
xchg
dec
mov
(bad)
call
out
lea
jmp
jb
fs
push
das
enter
inc
in
and
cmp
or
pop
sub
xor
ja
retf
adc
scas
cld
pop
loope
lods
repz
sbb
inc
daa
sub
mov
aas
repz
sti
jge
outs
in
fnstcw
adc
arpl
mov
std
fdiv
out
cli
mov
jb
xchg
stos
(bad)
retf
setns
aas
xor
repnz
jne
pop
jg
in
mov
jo
scas
or
inc
(bad)
and
cmp
or
clc
sti
mov
je
adc
das
out
retf
adc
jg
popa
xor
mov
cwde
int3
outs
jg
lahf
mov
lea
or
dec
sub
sbb
(bad)
xor
sbb
lock
int
add
sub
jmp
mov
push
les
ret
mov
aas
and
jbe
outs
shr
adc
pop
xor
loop
dec
shl
outs
push
sbb
and
pushf
jnp
adc
fcom
sbb
fs
mov
pop
repz
dec
aaa
lea
mov
sbb
lock
or
scas
adc
xor
pop
sub
cmps
sbb
dec
mov
fwait
(bad)
(bad)
cmp
push
sbb
cmp
(bad)
icebp
and
ror
or
xchg
daa
cmp
test
fadd
xchg
and
rep
cvtps2pd
and
sbb
call
lea
enter
inc
cdq
out
ret
dec
jecxz
inc
lahf
cwde
sub
mov
jp
cli
call
mov
push
push
data16
sbb
cmp
dec
cmp
mov
push
adc
jae
fidivr
mov
or
fcmovnbe
jg
cwde
cdq
dec
shr
mov
fsub
xchg
clc
xchg
or
sti
xchg
call
out
das
mov
ss
pop
sbb
call
sar
push
in
pop
jnp
js
xor
(bad)
adc
inc
outs
(bad)
pop
mov
(bad)
and
push
mov
cmp
je
cmp
(bad)
mov
mov
push
call
into
fst
rcl
sbb
push
fimul
jle
pop
and
jbe
cmc
ret
jl
xchg
sbb
imul
mov
push
ss
sar
fmul
sub
sub
xor
ret
inc
jecxz
push
inc
xchg
fst
cdq
enter
in
sub
cmp
push
rcr
in
dec
pop
pop
adc
ins
add
xor
jno
scas
and
jae
inc
ss
dec
cmp
(bad)
cmps
cmps
dec
mov
sub
clc
dec
add
test
popa
or
mov
pushf
inc
adc
adc
jnp
retf
daa
fist
jnp
inc
adc
mov
fst
push
mov
mov
cdq
and
call
adc
push
sahf
mov
sahf
pop
sbb
push
add
(bad)
je
push
sahf
xchg
push
xor
pusha
jge
jbe
out
sbb
sbb
test
jmp
jecxz
cmp
retf
inc
adc
outs
jo
inc
inc
and
mov
push
scas
add
dec
and
sub
adc
(bad)
or
sub
dec
mov
jmp
dec
xchg
inc
mov
dec
(bad)
(bad)
or
cmp
mov
mov
adc
cmp
xchg
xor
adc
pop
pop
xor
cmp
jmp
jg
sahf
stos
cmp
icebp
out
xchg
dec
xchg
fwait
rol
adc
popf
sbb
les
mov
sbb
dec
xor
xor
mov
xor
adc
cmps
dec
mov
fwait
xchg
je
xor
jbe
test
retf
add
xor
inc
adc
jbe
xor
(bad)
push
hlt
mov
push
jmp
js
outs
rcr
fmul
cmp
sbb
popf
xor
cli
pop
int3
add
mov
pop
retf
push
cmp
add
xchg
popa
cdq
movs
call
xchg
push
imul
dec
jne
stos
lods
mov
push
sbb
ss
jmp
xlat
inc
mov
add
jecxz
pusha
mov
dec
dec
push
sub
aas
sbb
mov
mov
push
int
ss
or
cmps
inc
ret
test
fldenv
cmp
cmp
inc
lahf
aam
and
pop
cmps
in
(bad)
cmp
inc
fnstenv
push
add
jne
and
cmp
push
dec
xor
shl
hlt
mov
ja
xchg
push
add
adc
jno
pop
sub
xchg
adc
cwde
out
sbb
inc
mov
or
xor
adc
stos
mov
out
test
mov
xchg
stos
sub
sub
mov
and
xchg
rcl
and
push
movs
in
(bad)
test
hlt
inc
(bad)
fist
jecxz
mov
movs
inc
sub
xchg
(bad)
loopne
rol
mov
add
inc
sub
iret
jns
jnp
cmc
add
fcomp
dec
ins
mov
sbb
aas
lods
jns
adc
push
sbb
pop
pminsw
ins
lahf
lds
cmc
daa
ins
fwait
or
std
aad
mov
pusha
test
and
adc
xor
out
dec
and
cmp
ds
jb
push
xor
add
and
mov
adc
call
xchg
mov
cs
mov
or
pop
mov
aam
ficomp
retf
out
jle
push
xor
rol
jmp
dec
pop
(bad)
mov
call
(bad)
push
loopne
repnz
enter
rsm
ret
and
out
jmp
ret
add
mov
cmp
mov
xchg
hlt
xor
sti
pop
cld
adc
pop
xchg
mov
pop
mov
xchg
inc
xor
stos
mov
test
dec
dec
sbb
jmp
mov
dec
push
cs
inc
mul
sar
or
mov
mov
sub
or
mov
pop
pop
ret
fcomip
sahf
fcompp
dec
(bad)
scas
sbb
mov
pushf
xlat
fisttp
adc
les
xor
xchg
mov
jmp
stos
mov
sbb
mov
in
ja
push
jle
push
mov
sbb
lahf
daa
loope
aaa
inc
mov
mov
fisub
out
std
and
call
inc
(bad)
cli
dec
push
cwde
xor
retf
xor
inc
cmps
mov
repnz
loopne
stos
ins
mov
pop
cmp
add
pop
mov
movs
fmul
loopne
les
xor
in
cmp
mov
dec
and
hlt
dec
mov
fiadd
mov
cmp
push
jbe
call
pop
adc
sbb
adc
movs
loopne
and
cmp
inc
cmp
fidiv
and
jecxz
jg
xchg
mov
and
push
loop
or
cmps
add
loop
add
sub
dec
add
jne
pushf
outs
shl
popw
pop
push
and
xor
in
jbe
cmc
xor
scas
cmp
mov
enter
loope
popa
hlt
fisub
add
(bad)
mov
jne
xor
gs
(bad)
push
mov
bound
jbe
add
mov
inc
enter
add
movs
sub
jmp
jne
xor
cmp
lahf
jl
sub
jns
jl
inc
call
xchg
mov
cli
loopne
xchg
add
mov
lods
add
lock
in
adc
cmp
fwait
leave
(bad)
out
into
xor
bound
pop
in
in
push
or
jmp
sub
ss
and
cdq
arpl
es
sub
das
das
add
mov
jo
cmps
bound
push
stos
lea
retf
rcr
mov
cmp
push
adc
popf
and
rcr
sbb
pop
pop
xor
inc
sahf
test
push
ss
movs
adc
inc
push
test
inc
retf
mov
pusha
mov
jmp
test
cmp
je
push
rcl
(bad)
sti
lods
push
push
fstp
gs
(bad)
xchg
mov
add
dec
in
repz
sahf
cmp
scas
fidivr
jne
loopne
jmp
mov
dec
jb
xchg
imul
adc
mov
jl
push
sti
cmps
cmps
dec
sub
xor
add
enter
and
test
add
(bad)
sbb
mov
pop
jnp
inc
call
iret
ror
sbb
add
pop
ret
cmc
pop
std
jno
test
das
lods
push
mov
and
cmp
jp
dec
stos
mov
jge
test
cmc
cdq
adc
div
jb
movs
lods
sbb
adc
dec
popa
cmp
mov
push
call
cmp
jge
pand
sub
in
xchg
ror
inc
mov
cs
fstp
test
ds
and
outs
sbb
add
push
add
jl
sub
bound
mov
mov
xor
je
pop
ficomp
pop
js
stos
mov
mov
popf
cwde
pop
adc
inc
fdiv
and
push
cdq
add
icebp
fcom
inc
xor
mov
adc
leave
call
pop
pop
das
sbb
jb
das
test
mov
sbb
loope
xchg
test
or
aaa
jmp
leave
fs
out
dec
jecxz
cmp
push
fstp
sbb
mov
into
jo
pop
dec
in
push
lods
lahf
mov
fld
loopne
in
sub
mov
xor
adc
jnp
imul
lock
adc
movntps
(bad)
stc
pop
lock
mov
or
xlat
xchg
pushf
pushf
js
or
inc
sub
or
fs
out
cmc
fsub
push
xchg
sub
and
jae
mov
ja
movs
lahf
fcomp
xor
jecxz
and
pop
push
mov
and
outs
cwde
pop
ficom
aaa
paddsb
push
sbb
(bad)
call
stos
es
xchg
imul
ins
mov
ret
mov
xchg
inc
mov
push
xchg
out
enter
xchg
add
div
jl
adc
cmp
mov
ret
jecxz
pop
mov
push
es
dec
xor
test
mov
inc
nop
sub
inc
push
stos
imul
mov
sbb
pop
mov
jl
shl
jnp
mov
popa
xchg
retf
pop
test
js
push
sub
jl
push
fistp
cwde
dec
xchg
inc
mov
cmp
jg
cmp
sbb
(bad)
xor
mov
in
mov
scas
jns
ficomp
mov
and
adc
dec
cmp
lahf
push
push
add
sub
pop
dec
pop
inc
push
or
lods
mov
or
pop
popa
inc
pop
mov
lods
addr16
imul
repz
and
(bad)
sub
xchg
dec
jp
enter
sub
in
jp
and
dec
mov
xor
mov
push
aad
jae
inc
iret
daa
pop
lods
lea
and
cmps
fwait
bound
mov
cmc
inc
ins
or
mov
lods
dec
cli
lds
mov
xchg
add
test
in
xor
sbb
mov
sbb
pop
in
xor
lea
repz
jo
cwde
inc
jmp
pop
jge
shr
pop
in
adc
xlat
sbb
retf
test
dec
xchg
sbb
add
push
out
outs
loop
ror
cmp
sub
inc
push
sub
into
(bad)
scas
xchg
mov
push
jns
in
imul
and
push
fisubr
ret
xchg
test
test
mov
out
repz
dec
mov
and
or
push
movs
or
sbb
push
mov
xor
xlat
icebp
xor
push
fimul
jno
mov
sub
dec
mov
jmp
data16
dec
mov
and
push
or
fimul
fwait
adc
aaa
inc
cmp
es
xchg
je
(bad)
cmps
fwait
pop
xor
outs
and
push
fwait
pusha
or
dec
or
add
jb
daa
pusha
mov
(bad)
les
fcom
outs
es
sbb
test
test
scas
pop
mov
aad
sbb
or
sub
or
(bad)
push
ja
cmps
ficomp
retf
shl
push
sub
(bad)
inc
int
jo
repz
fcomp
arpl
or
mov
cmp
ss
fnstsw
inc
lds
adc
and
mov
ds
dec
(bad)
jmp
(bad)
pop
retf
pop
dec
imul
out
jge
push
mov
enter
push
push
out
cli
xor
cmps
fidiv
fdivr
and
stos
mov
pop
lds
push
scas
pop
lock
or
fidiv
in
mov
dec
push
movs
xchg
pop
fs
jg
sub
pop
jl
test
data16
xchg
jmp
ror
hlt
mov
retf
(bad)
cdq
std
cmp
xor
adc
out
test
test
sar
jle
sar
adc
dec
fisubr
pushf
enter
imul
rol
push
push
xchg
nop
mov
jmp
imul
pop
jae
shl
push
and
ja
inc
(bad)
or
pop
ret
mov
repnz
stos
shl
cli
(bad)
and
adc
mov
mov
out
and
sub
mov
sub
cmc
int
pop
lods
dec
test
fist
rcr
push
dec
pop
pop
mov
dec
fnstenv
xor
or
and
ret
icebp
mov
xor
aas
pop
jne
or
mov
popf
mov
sub
mov
ja
in
dec
sub
push
pushf
rcr
test
inc
loop
(bad)
lods
xlat
call
ds
icebp
inc
(bad)
ret
jb
imul
test
sbb
xor
ss
inc
les
fisttp
mov
inc
lods
mov
xor
mov
shl
add
repnz
sub
mov
pop
loope
ror
out
btr
push
(bad)
jns
add
xor
addr16
xor
mov
push
sti
mov
mov
icebp
sbb
and
and
push
mov
sbb
enter
dec
lahf
pusha
adc
cmp
leave
adc
lds
bound
lds
or
push
fadd
test
in
jge
(bad)
add
and
bswap
inc
push
(bad)
scas
push
xchg
lods
cdq
jle
out
inc
sti
adc
mov
inc
out
bound
test
or
cmp
push
in
nop
cld
popa
pop
popa
mov
mov
cmp
xchg
mov
(bad)
int3
ror
sub
loope
mov
dec
into
addr16
pop
mov
pushf
mov
xchg
ss
mov
(bad)
sbb
outs
ret
mov
sub
jae
push
scas
rol
mov
shl
add
cmp
xchg
das
ja
pop
stc
jl
jge
cmp
ror
outs
fidiv
ja
(bad)
mov
push
fs
movs
mov
xor
jge
mul
sahf
loopne
xlat
in
arpl
jecxz
cmp
dec
push
mov
sbb
out
push
cmp
pop
pop
sar
mov
pop
cmp
icebp
(bad)
movs
jnp
adc
push
jmp
jnp
pop
cld
fld
ss
jge
shr
nop
dec
jb
mov
dec
jne
pop
(bad)
outs
cmp
(bad)
lods
addr16
repz
mov
cdq
icebp
lea
mov
mov
sbb
dec
stc
push
(bad)
xor
jb
and
sub
or
dec
cli
add
(bad)
cmp
xchg
mov
xchg
push
(bad)
loopne
push
adc
sti
stc
mov
lods
shl
pop
cmp
pop
pushfw
pusha
repz
mov
stos
sub
inc
mov
sub
add
rol
add
movs
out
arpl
pop
jl
mov
hlt
push
cmc
fmul
mov
mov
int3
sbb
(bad)
xlat
add
fst
into
mov
sub
cmp
mov
in
push
imul
push
fwait
(bad)
xchg
arpl
cs
push
pop
or
push
fild
les
jmp
cwde
retf
jmp
mov
mov
int
mov
xor
mov
adc
jmp
cld
sub
sti
out
dec
imul
imul
repnz
and
out
sti
lahf
rol
add
inc
xchg
dec
outs
ds
mov
sbb
pop
xchg
outs
push
hlt
jnp
or
jo
inc
movs
or
inc
xchg
sub
and
pop
jb
xor
ds
cmp
cmps
pop
sbb
ins
mov
dec
sub
inc
mov
out
jo
jle
sahf
std
or
inc
aaa
mov
mov
or
stos
dec
shl
js
jae
mov
mov
pop
inc
lods
dec
jno
es
jp
jne
add
pop
in
mov
out
sar
sti
or
aad
push
xor
add
xor
stc
mov
cld
push
shl
jbe
shr
int3
mov
dec
js
sub
xor
inc
sub
not
inc
sub
inc
and
ficom
jno
retf
mov
mov
add
mov
(bad)
repz
pop
les
and
mov
jb
jb
push
dec
shld
into
leave
sar
dec
mov
shr
mov
cmps
sbb
addr16
ret
leave
fiadd
call
popa
out
cs
mov
push
loop
mov
jmp
daa
cmps
jmp
jecxz
ror
jle
adc
scas
(bad)
stos
xchg
bnd
push
shl
fwait
jb
es
or
rol
pop
das
in
push
sub
inc
add
and
mov
lahf
pop
mov
sub
push
mov
aas
push
gs
sbb
pop
pop
scas
(bad)
test
ss
push
aaa
movs
out
jbe
(bad)
ss
in
pop
push
lods
xchg
aam
rcr
(bad)
xchg
sub
inc
out
sub
add
cmp
pop
ins
xchg
xchg
cwde
fisub
pusha
rcl
rcl
cdq
jge
mov
test
fwait
pop
leave
lds
mov
loope
les
call
jl
push
aam
or
xchg
push
push
(bad)
fimul
rcr
cmc
jmp
sti
jg
jge
out
sub
mov
or
loope
fwait
ret
(bad)
mov
or
pop
(bad)
jmp
cmp
fisubr
or
mov
cmc
loope
or
push
xlat
adc
test
les
test
add
mov
int
out
call
dec
cmp
and
or
fstp
jo
popf
pop
aam
cmp
sbb
aam
inc
fs
(bad)
retf
pop
cmps
rcr
fst
xchg
imul
mov
in
out
xor
jmp
stos
push
aas
out
or
test
repz
(bad)
pop
cmps
sub
adc
mov
or
xchg
xlat
add
sub
fiadd
dec
xchg
(bad)
fidiv
adc
pop
sbb
lods
pop
cmp
and
lea
dec
pop
cmp
add
sbb
jo
aam
cs
pop
cmp
xor
nop
jbe
fwait
jecxz
jp
popf
pop
sub
aas
fcomp
push
xor
ds
stos
jp
jb
nop
lds
jae
data16
xchg
sar
inc
rol
xor
push
push
mov
jg
(bad)
aam
mov
cmp
adc
in
pop
push
daa
mov
iret
cmc
lods
lahf
add
scas
cmps
mov
addr16
pop
inc
add
jle
mov
mov
adc
jge
xchg
cld
mov
sub
dec
mov
cmps
imul
pop
jbe
jg
sub
mov
mul
call
adc
jne
ror
push
call
mov
pop
mov
sub
rol
fmulp
add
sahf
xor
les
pop
pop
leave
pop
dec
xor
cmp
dec
(bad)
mov
arpl
cmps
pop
aas
cli
inc
call
push
(bad)
cmps
daa
dec
hlt
retf
xor
adc
iret
ins
sbb
aas
pop
icebp
mov
jns
xchg
inc
rcl
dec
push
enter
popa
push
(bad)
loope
arpl
ins
dec
sti
mov
sub
and
mov
stos
out
sbb
adc
(bad)
in
or
stos
mov
and
xchg
push
and
stc
aam
or
push
jl
retf
repnz
inc
lock
xor
cmp
movs
and
pop
call
test
sub
lahf
into
movs
int3
int3
pop
cmp
and
sbb
icebp
repz
or
(bad)
pop
jle
adc
mov
mov
out
adc
inc
into
xor
xor
cmp
push
xchg
iret
xor
mov
mov
pop
add
adc
mov
sahf
xchg
pusha
adc
jecxz
lods
iret
jae
push
cmps
mov
pop
add
(bad)
test
jg
xchg
mov
inc
les
sub
addr16
or
(bad)
mov
stos
pushf
ins
(bad)
cdq
push
test
adc
add
addr16
inc
add
xor
ret
sbb
lods
bound
fs
push
jmp
test
push
sub
repz
xchg
cli
outs
or
repnz
(bad)
mov
call
int
retf
sub
or
jecxz
adc
stos
xor
das
mov
pmulhw
ficom
repz
xchg
sub
(bad)
xchg
cs
ins
lahf
pop
sbb
leave
iret
adc
push
arpl
ffree
xrelease
rcr
and
xchg
pop
aam
xchg
leave
mov
cmp
fld
xor
sbb
mov
mov
(bad)
ss
test
xchg
imul
inc
cdq
cdq
pop
cmp
jecxz
inc
inc
sub
mov
test
jns
retf
cmp
jb
push
mov
sbb
mov
add
sbb
pop
add
lock
das
jne
mov
sub
in
hlt
xchg
(bad)
retf
mov
imul
mov
add
pop
pushf
push
movs
push
xchg
push
ret
call
push
mov
inc
push
add
sbb
shr
adc
cmp
rcr
and
js
push
mov
jp
lods
pop
jae
adc
popf
dec
fst
mov
test
test
dec
stos
(bad)
push
fisttp
stos
push
mov
in
mov
and
lds
pop
test
mov
or
adc
pusha
cs
in
or
xchg
jl
sbb
lahf
mov
pop
sub
add
cmp
retf
push
cmp
add
sub
loopne
ret
arpl
inc
loope
(bad)
js
rcl
mov
fimul
repnz
fs
pop
test
xchg
mov
adc
jle
das
icebp
div
sub
std
inc
(bad)
mov
mov
clc
fild
rol
mov
(bad)
mov
or
int3
dec
mov
(bad)
or
mov
mov
cmp
in
cmp
add
sub
pop
mov
xchg
out
push
cmp
test
mov
inc
sub
shl
(bad)
(bad)
test
inc
mov
add
call
icebp
ja
mov
pop
pop
and
push
daa
mov
jb
lods
lea
jo
out
aam
dec
push
and
aam
mov
dec
jp
xchg
add
cmp
(bad)
stos
or
sub
mov
xor
iret
movs
fsubp
push
pop
or
retf
sub
cmp
outs
inc
push
mov
push
out
add
adc
or
in
push
push
scas
xor
in
sbb
dec
in
add
cmp
ror
pop
leave
pop
xchg
push
outs
adc
mov
int
pop
iret
fdiv
int3
or
pusha
mov
mov
push
imul
mov
adc
xor
imul
js
or
popf
and
sbb
mov
and
push
mov
or
pop
fs
xchg
in
mov
push
inc
push
mov
jae
sti
addr16
mov
enter
jg
pop
addr16
xlat
mov
dec
mov
jmp
int
test
pop
(bad)
cmps
aas
xchg
adc
inc
pop
test
dec
iret
repnz
cmp
test
xchg
mov
mov
pop
cmp
jl
(bad)
sub
cmps
mov
shl
out
inc
test
sbb
sub
(bad)
mov
push
mov
imul
loopne
and
jle
js
pushf
in
adc
ret
in
or
sar
repnz
test
out
gs
lds
shl
dec
bnd
mov
jl
mov
and
xor
clc
pop
adc
in
into
aad
push
scas
fstp
sbb
xlat
pop
cli
out
stos
jge
iret
fwait
or
out
dec
inc
mov
arpl
call
hlt
nop
sub
lock
outs
mov
inc
jle
push
into
aam
sti
pop
or
aam
sub
fsub
jnp
cld
dec
idiv
js
in
mov
sub
add
cmps
stos
cld
inc
jne
test
repz
or
pop
out
std
adc
mov
test
ds
clc
fisttp
mov
dec
cmp
(bad)
mov
inc
add
or
aaa
push
jmp
fwait
imul
jp
pop
push
call
or
add
jmp
mov
mov
mov
dec
inc
adc
pop
mov
es
xchg
push
frstor
fldcw
rcr
add
xlat
out
or
fld
ret
jg
xor
push
stc
mov
jmp
cmps
or
lahf
iret
in
mov
xchg
xor
inc
mov
cli
pop
dec
inc
iret
xor
icebp
push
and
rcl
lods
(bad)
mov
sbb
test
(bad)
sbb
jecxz
inc
mov
aad
push
push
scas
sbb
loopne
sub
sub
(bad)
pop
dec
jp
sub
push
rol
push
popa
sbb
or
jb
mov
rcr
stc
jge
repz
mov
ret
into
xchg
pop
jmp
push
and
cmp
or
lahf
fld
inc
imul
or
sub
fnstsw
stos
jp
inc
jmp
sahf
imul
lods
mov
ss
je
jmp
repnz
imul
mov
adc
fs
jl
test
mov
adc
call
nop
jae
fwait
and
xchg
out
cmp
imul
imul
xor
sbb
pusha
ficomp
xlat
add
ins
cmp
fs
push
add
adc
push
icebp
sub
(bad)
inc
call
stos
test
cli
or
int
repnz
mov
mov
and
movs
push
adc
fild
loop
test
addr16
sbb
cmp
mov
in
mov
adc
mov
mov
pop
push
je
mov
lods
cmp
push
jp
sbb
shl
arpl
and
(bad)
rep
or
retf
in
test
xchg
cmp
out
jae
out
gs
fcom
imul
sub
cmp
pop
adc
dec
dec
pop
lods
test
pop
jae
imul
clc
mov
mov
mov
dec
dec
dec
daa
mov
lea
pop
mov
xchg
xchg
arpl
jmp
imul
mov
repnz
test
pop
inc
repnz
(bad)
jmp
push
cli
aam
cmp
push
mov
int3
xchg
sbb
dec
mov
pushf
inc
mov
mov
or
shr
stc
sti
inc
jmp
ret
std
pop
out
or
rcl
xchg
or
mov
popa
test
ret
pop
push
cdq
das
fldcw
pop
lock
sar
(bad)
fcom
(bad)
mov
data16
lock
imul
add
shr
and
out
leave
mov
adc
imul
pop
retf
adc
das
repnz
out
dec
jl
inc
arpl
sub
mov
pop
cvttps2pi
mov
xchg
movs
mov
ja
cmc
pop
int
push
jbe
sar
loopne
loopne
movs
sbb
or
cmp
arpl
std
test
fldcw
outs
inc
jmp
jle
cmp
shl
dec
ror
pop
adc
push
jbe
loopne
nop
or
leave
call
repz
std
clc
add
xor
cwde
sti
xor
ret
cmp
cwde
ins
mov
or
out
pop
in
(bad)
pop
(bad)
stos
out
xor
aas
mov
cmc
popa
sub
dec
cmps
sbb
pop
or
xchg
in
out
ret
repnz
xchg
jno
ins
outs
xor
popa
leave
aad
mov
je
jge
jecxz
pop
mov
sub
repnz
cmp
pop
sub
mov
loopne
stos
das
cmp
cmp
(bad)
addr16
mov
in
mov
and
inc
ss
pop
push
sbb
aam
mov
mov
shl
mov
xor
je
or
scas
mov
jb
jmp
out
pop
fld
push
cdq
inc
fcmovnb
fisubr
arpl
mov
pop
dec
add
add
mov
add
sahf
push
frstor
or
bound
xor
clc
cmc
clc
or
jns
pop
sbb
(bad)
repnz
ficomp
push
sub
pop
and
push
movs
sahf
fsubr
ins
and
test
dec
or
push
cwde
sbb
pop
clc
push
ds
add
cmps
and
and
outs
sub
or
js
fisttp
xor
xchg
jecxz
pop
push
push
or
xor
das
pop
div
pop
pusha
jb
cld
scas
rol
xor
inc
dec
add
setp
(bad)
cmp
cli
mov
loope
mov
inc
loopne
adc
inc
(bad)
adc
pushf
sbb
jmp
jns
dec
fidivr
push
loopne
(bad)
shl
and
or
inc
clc
ror
sub
out
in
jmp
mov
mov
lock
push
xchg
outs
mov
xchg
and
sahf
(bad)
pop
aad
lock
scas
ins
add
add
shl
retf
sti
inc
pushf
or
mov
jae
pop
fwait
push
stos
pop
jmp
inc
dec
adc
jo
ret
inc
(bad)
jns
push
scas
jbe
(bad)
add
cmp
sub
pop
sbb
add
gs
fldenv
pop
fild
(bad)
fucomp
stos
dec
sub
out
xor
and
dec
fild
jns
shl
popa
pushf
mov
push
lea
jp
lock
inc
fwait
ret
mov
inc
xlat
lock
scas
or
dec
mov
lock
pop
sub
inc
push
add
jo
xor
sbb
push
(bad)
fcmovnbe
pop
int
and
sbb
add
dec
push
pusha
pop
and
(bad)
ja
pusha
jae
or
jns
add
xor
test
shr
inc
push
and
ficomp
or
inc
pop
cdq
sbb
mov
jecxz
mov
mov
fisttp
push
pop
jmp
call
adc
jmp
loope
fdiv
sub
jmp
pop
mov
call
cmp
and
xchg
pop
movq
popf
std
shl
aam
shl
cmps
das
push
out
call
ins
test
cmc
sbb
sub
push
mov
mov
pop
mov
jg
cmps
or
nop
ficom
mov
in
bound
retf
push
mov
pusha
or
inc
sub
shr
and
fwait
or
pop
and
jg
inc
out
jne
or
adc
xchg
pop
stc
cld
xchg
lock
scas
mov
in
mov
pop
repnz
pop
lods
add
push
mov
mov
shr
xchg
ja
and
mov
sbb
jmp
mov
call
jae
push
inc
push
pop
push
in
bound
imul
and
ja
hlt
cmp
cmp
pop
mov
scas
mov
adc
xchg
mov
push
dec
xlat
jae
and
fimul
call
or
in
jbe
ins
mov
lods
gs
push
mov
and
cmps
loop
data16
in
imul
and
and
push
movs
iret
stos
mov
(bad)
dec
jae
addr16
jmp
(bad)
push
out
xchg
sbb
not
dec
adc
aad
jmp
cmp
fnsave
arpl
mov
push
(bad)
rcl
sti
pop
sbb
push
fs
dec
sbb
fmul
scas
jae
outs
inc
nop
sub
retf
movs
leave
jnp
pop
xchg
jmp
sub
jne
push
daa
aam
in
push
dec
call
movs
sub
cwde
fld
lds
test
or
and
mov
dec
pop
sub
xcrypt-ecb
cmps
dec
hlt
inc
sbb
push
sub
inc
push
loopne
inc
push
sub
das
rol
iret
ror
add
ins
scas
pop
es
inc
outs
add
adc
push
js
inc
push
std
rcr
mov
pusha
pop
xor
jo
shl
xchg
ret
ja
and
retf
ficom
shl
inc
push
mov
xlat
jmp
int
movs
iret
leave
dec
adc
aas
outs
rol
out
ret
std
arpl
mov
sbb
stc
mov
lods
call
cmps
ret
jmp
je
push
mov
inc
iret
inc
mov
lds
mov
push
mov
mov
push
fidivr
xchg
fstp
das
popa
xor
push
addr16
jg
in
arpl
mov
pop
add
dec
fsubr
ja
and
mov
mov
fld
jb
push
push
lahf
pop
mov
frstor
mov
sbb
mov
mov
aaa
inc
jl
ret
adc
push
or
vpmulhuw
shr
imul
add
(bad)
dec
leave
jae
mov
scas
ins
mov
mov
aaa
add
cmp
xor
cmp
jg
out
movs
les
push
pop
mov
xchg
inc
loopne
sub
cdq
cld
sbb
scas
les
adc
sub
xchg
dec
leave
pop
ja
retf
retf
and
pop
lods
(bad)
jns
pop
mov
cmps
push
ret
fiadd
mov
xchg
pop
jbe
adc
(bad)
cmp
xchg
bound
jb
push
cwde
ins
(bad)
je
mov
(bad)
daa
ret
sbb
pop
retf
mov
arpl
js
nop
sub
pop
jns
add
cmp
push
push
aas
stos
pushf
movs
adc
push
add
xor
jb
jnp
lock
push
nop
loop
pop
ror
aad
mov
in
cmc
and
mov
bound
pushf
loop
iret
cmp
je
sar
xor
or
xchg
and
jb
mov
or
add
mov
jp
sbb
and
mov
push
mov
inc
pushf
push
jp
xor
shl
push
enter
mov
mov
jmp
cmp
ss
jb
enter
add
stos
jl
dec
mov
adc
xor
out
sahf
adc
mov
daa
arpl
movs
mov
fld
jge
or
sub
idiv
xlat
lds
int
pusha
imul
sbb
les
movs
or
jmp
dec
aad
xchg
je
mov
clc
mov
popa
lea
jecxz
mov
mov
and
jno
and
jb
cmp
push
sbb
stc
dec
mov
test
bound
div
jb
cmp
les
cmp
(bad)
inc
mov
mov
retf
push
adc
mov
daa
cmp
push
sbb
mov
out
jge
rcl
xlat
sbb
fcmovne
xor
inc
scas
leave
bound
fdiv
aad
fwait
and
ret
push
in
je
data16
jl
scas
and
jne
jecxz
ins
or
mov
(bad)
pusha
pop
push
and
inc
cmp
pop
add
rcl
icebp
mov
lahf
pop
jb
test
pushf
lea
out
cs
push
jl
push
mov
(bad)
(bad)
adc
adc
cld
push
add
(bad)
cwde
jbe
mov
pop
jmp
add
cwde
inc
jp
sub
push
jmp
cld
sub
aas
leave
int3
jbe
outs
(bad)
sub
mov
iret
dec
mov
into
mov
addr16
test
cli
enter
mov
leave
int
stos
fwait
mov
data16
jno
fcomp
mov
fst
mov
jbe
dec
outs
mov
(bad)
lock
das
xor
sbb
retf
ret
mov
mov
aaa
(bad)
aam
adc
scas
add
sar
daa
arpl
in
mov
in
movs
adc
dec
cli
aam
sbb
jns
(bad)
sub
pop
rol
dec
mov
arpl
xor
rol
xchg
adc
mov
cmps
cmp
ficomp
in
sar
outs
pop
cmp
sbb
adc
popa
fild
push
mov
inc
enter
cmp
add
add
pusha
lds
test
jg
adc
or
jne
jp
xchg
je
inc
dec
stos
jp
out
frstor
sbb
out
dec
xchg
popf
out
loope
lahf
loopne
push
ret
push
sub
outs
xor
sbb
push
sbb
out
push
out
icebp
stc
cdq
ret
js
jge
sbb
imul
loop
repz
lock
out
in
push
or
inc
xlat
push
das
icebp
sub
popf
xor
xor
sbb
mov
and
cmc
test
cmp
mov
and
or
pop
call
dec
scas
iret
jae
add
imul
pusha
pop
xchg
jne
adc
(bad)
mov
inc
pop
inc
adc
inc
popf
dec
outs
sahf
sbb
aam
movs
mov
push
pop
lock
scas
mov
mov
test
jae
cdq
int3
test
(bad)
mov
mov
into
aam
xor
(bad)
cmp
mov
stc
ret
std
les
imul
fwait
mov
mov
outs
pop
add
mov
or
and
popa
mov
(bad)
lods
push
mov
ret
sub
jp
cmp
cli
sar
push
mov
scas
jge
repnz
sub
cmp
in
or
jne
mov
add
iret
cmp
mov
pop
lds
sbb
stc
and
and
lods
inc
pusha
pop
jns
(bad)
das
psubw
dec
xchg
inc
xchg
out
add
cdq
fnstcw
lea
jae
xchg
shr
cmp
or
or
xchg
xchg
mov
lods
or
shl
dec
mov
call
and
mov
test
stos
cmp
movs
jb
xor
aam
mov
push
push
in
add
cmp
int
mov
fmul
pop
js
sbb
xchg
cli
fldl2e
xchg
mov
mov
or
in
pop
inc
adc
pop
fsub
icebp
lahf
cdq
in
inc
inc
popa
clc
stos
es
inc
loop
jbe
(bad)
aam
pop
cwde
xor
jecxz
shl
cli
mov
mov
or
leave
add
iret
enter
inc
mov
add
cmp
adc
cs
xlat
mov
(bad)
xor
lds
dec
repz
lds
inc
out
cli
aam
dec
shr
cdq
fcomp
push
push
or
adc
rcr
mov
adc
and
mov
pop
(bad)
sbb
jnp
sbb
call
(bad)
in
xchg
cmp
call
xor
in
test
nop
lea
js
test
pop
pop
pop
icebp
retf
xor
jns
inc
add
and
icebp
inc
(bad)
not
mov
cmps
push
test
and
inc
push
xchg
adc
jg
jmp
cmps
pop
jmp
jno
xchg
ja
cmp
in
loopne
in
adc
repnz
pusha
pop
mov
ret
fwait
enter
sbb
push
dec
add
jnp
pop
call
repnz
test
jne
jmp
jg
inc
cmps
ror
adc
pop
mov
loop
add
int3
or
inc
or
push
sbb
sbb
nop
lds
cmp
(bad)
mov
(bad)
fist
cmp
pop
jo
push
into
(bad)
imul
jg
sar
cmc
das
stc
jnp
mov
(bad)
int
fbld
jmp
test
inc
cmp
jb
dec
dec
sub
or
push
in
adc
dec
mov
jbe
popf
jmp
lea
mov
pop
pop
xor
xor
mov
add
out
lock
and
les
push
pop
out
jl
int3
pop
call
loopne
test
stc
mov
iret
sub
push
push
inc
arpl
cmp
jl
jae
out
xor
enter
fwait
ud2
arpl
ja
lock
pop
mov
js
sub
xchg
xor
sub
push
call
out
cmps
mov
xchg
jmp
mov
mov
mov
cld
call
cmps
pop
xchg
outs
or
call
fidivr
loopne
ficomp
mov
retf
pop
ss
cmp
fcmovnb
push
mov
pop
and
adc
test
add
add
pop
cli
inc
fwait
mov
inc
fbstp
mov
rcl
aaa
jg
in
push
movs
sub
jge
jle
pushf
push
add
mov
add
scas
pop
(bad)
xlat
mov
pushf
out
btr
add
rcl
mov
outs
inc
pop
mov
test
mov
lock
mov
cmp
dec
dec
cmp
in
mov
xor
xor
stos
es
fcom
aas
test
mov
scas
iret
cdq
jnp
pop
gs
test
adc
in
ss
icebp
dec
jo
xor
repz
push
pop
fwait
shr
cmp
fcomp
mov
test
int
aas
jl
adc
popf
cld
leave
mov
in
xor
ror
mov
mov
fadd
dec
mov
cmps
outs
sub
sub
dec
ror
inc
neg
mov
mov
mov
mov
and
sahf
movs
imul
loope
pop
ins
pop
or
sbb
pop
or
jb
pop
cs
jg
mov
dec
lods
pop
fldcw
add
stos
mov
inc
in
fdiv
dec
xchg
xchg
std
xchg
adc
jge
pop
mov
add
(bad)
pop
out
push
mov
dec
cmp
mul
pop
fcomp
test
inc
jge
(bad)
fnstenv
cmps
rcl
mov
sbb
sub
test
jge
add
lock
mov
cli
dec
stc
adc
loopne
push
jmp
xchg
lods
add
push
(bad)
stc
mov
mov
jbe
sbb
mov
mov
mov
nop
jle
jmp
jecxz
cld
es
(bad)
jecxz
ficomp
mov
cmp
in
(bad)
sahf
pop
xor
out
retf
shr
fld
push
movs
add
dec
sti
cdq
push
cdq
adc
loop
inc
dec
jns
mov
daa
and
mov
pop
jnp
add
jecxz
(bad)
mov
cs
div
jnp
push
and
jmp
in
test
or
iret
or
fwait
push
outs
ret
sbb
adc
(bad)
(bad)
sbb
add
mov
mov
ror
leave
scas
pop
sub
jmp
add
outs
scas
add
dec
mov
fucom
lock
jae
mov
jl
push
gs
(bad)
adc
dec
lock
inc
push
stc
push
cmps
outs
pop
cmp
test
sbb
add
jecxz
fistp
push
xor
aam
xchg
xor
(bad)
push
pop
mov
mov
sti
nop
cwde
cld
(bad)
xchg
cs
sahf
adc
scas
mov
retf
shl
sar
jmp
pop
adc
pop
fs
cmp
push
retf
sbb
cmp
jne
loopne
mov
(bad)
xchg
les
in
jl
mov
jae
outs
bound
hlt
xchg
cli
cmps
adc
sub
cmp
test
fsub
dec
pushf
push
inc
push
and
xchg
leave
pop
or
fimul
mov
pop
rol
out
sbb
mov
stc
push
dec
jbe
stos
sbb
sub
sahf
mov
in
add
xor
xchg
cmp
push
hlt
mov
loop
cdq
std
sub
int3
mov
fdiv
pop
cmp
xor
test
pop
sahf
add
add
mov
add
(bad)
or
jg
jle
mov
sub
pusha
repz
mov
call
and
sub
add
mov
push
jb
adc
jge
dec
ficom
cmp
pop
mov
jbe
push
xlat
adc
in
xchg
add
adc
mov
xor
rcl
inc
xchg
fsub
or
stos
add
fild
ficomp
or
jg
adc
cmp
sahf
push
mov
inc
leave
sub
or
jbe
mov
cdq
mov
mov
rcr
dec
jno
pop
(bad)
and
adc
sti
xor
cmp
jne
sbb
ss
(bad)
xchg
in
dec
mov
test
mov
and
aaa
mov
enter
retf
ins
jns
gs
push
add
or
jecxz
pop
data16
mov
fsubrp
das
mov
loope
sub
ret
mov
xchg
dec
dec
mov
loope
mov
outs
push
ins
pop
(bad)
sub
icebp
sti
enter
pop
push
push
push
cmp
jge
cmp
xchg
dec
mov
pop
(bad)
call
and
jbe
fisub
mov
retf
call
mov
sbb
xor
test
pusha
jmp
cmp
shl
out
jbe
test
jbe
(bad)
xor
push
push
jge
push
add
(bad)
jo
jno
xchg
add
mov
aam
dec
(bad)
xchg
xor
push
add
js
push
or
rol
jmp
hlt
xor
xor
or
ins
xorps
(bad)
sbb
push
mov
mov
sbb
jne
xchg
mov
push
imul
xor
add
std
leave
repnz
dec
pop
xchg
test
xchg
not
cld
inc
sar
pushf
repnz
pop
ss
lods
arpl
dec
jae
jmp
div
sahf
imul
adc
outs
cs
dec
sbb
jno
(bad)
xchg
xchg
fdivr
mov
(bad)
cmp
ja
pop
stos
jno
push
loopne
jge
push
mov
adc
sub
or
or
inc
out
daa
movs
es
ss
ins
mov
aad
int
sub
iret
mov
lea
sub
jbe
nop
outs
mov
ret
lock
xchg
inc
sbb
sti
add
mov
in
test
or
outs
mov
dec
inc
jmp
stos
sub
xchg
inc
outs
mov
dec
cmps
inc
push
dec
jmp
test
retf
bound
pop
sti
ret
sub
mov
out
sar
mov
into
mov
(bad)
clc
repnz
mov
repz
cld
or
mov
dec
cmp
add
adc
je
bound
mov
dec
mov
test
add
pop
cmp
hlt
(bad)
jns
leave
mov
push
sbb
jp
inc
movs
mov
lahf
pusha
mov
xchg
mov
add
sbb
nop
cmc
scas
pushf
movs
and
int3
arpl
adc
inc
(bad)
pop
pop
push
adc
dec
push
(bad)
mov
(bad)
cdq
push
test
add
nop
inc
icebp
mov
dec
sub
es
call
ror
xor
imul
mov
jo
inc
pop
test
fisub
jne
sbb
loopne
loopne
addr16
jmp
js
add
adc
xor
mov
jmp
(bad)
sub
aas
pushf
loop
sbb
out
enter
xchg
mov
or
enter
test
lds
fmul
loope
inc
push
jge
pop
xchg
into
inc
push
adc
pop
rcl
test
int3
mov
add
rol
and
add
push
push
and
or
daa
ret
idiv
xchg
xchg
mov
jns
jle
mov
jno
xchg
xlat
fwait
jle
retf
cmps
ds
sbb
sti
ret
test
(bad)
xchg
mov
retf
mov
lock
push
xchg
out
sbb
jb
dec
mov
mov
stos
cmp
xchg
icebp
add
xor
dec
movs
add
(bad)
int3
jmp
mov
inc
sar
fwait
sub
popf
dec
repz
out
add
sbb
cmp
ja
mov
mov
arpl
jb
jb
dec
jle
fmul
arpl
inc
cs
sbb
push
std
(bad)
(bad)
jecxz
scas
data16
mov
pop
mov
jbe
int
fwait
arpl
or
xlat
js
call
fcom
(bad)
scas
lea
cs
in
in
inc
jmp
into
fdiv
pop
enter
mov
hlt
retf
stc
aas
push
pop
mov
ds
retf
mov
sti
mov
or
mov
mov
call
dec
or
jmp
std
cmp
sbb
add
inc
and
xlat
or
dec
ss
mov
call
and
inc
shl
pop
push
jae
mov
test
call
pop
rol
inc
movs
jmp
mov
nop
mov
xor
aas
jno
push
outs
sahf
mov
loope
xor
sub
jno
cmp
mov
cld
sbb
ins
inc
xchg
and
push
push
shr
mov
fdivr
sti
sbb
mov
mov
xor
(bad)
lods
jnp
lods
pop
mov
xchg
dec
fadd
pop
or
cld
add
pop
jmp
xchg
repnz
cmps
mov
sub
ret
mov
es
xor
arpl
mov
mov
lods
cs
mov
sub
sub
inc
jbe
(bad)
mov
fist
mov
adc
lds
inc
ds
adc
mov
dec
outs
pop
push
fdivrp
das
pop
pop
sbb
mov
mov
adc
lock
jae
cs
js
mov
or
sub
retf
neg
pop
or
push
stos
repnz
pop
ds
les
pop
into
repnz
gs
pop
dec
dec
mov
ins
mov
sbb
fistp
pop
mov
jp
inc
adc
inc
in
xor
push
adc
repnz
mov
jns
fdivr
popf
sahf
idiv
or
and
not
fwait
pop
or
retf
rcr
xchg
dec
cmc
repz
lahf
frstor
dec
imul
pop
lock
xchg
xor
or
ror
cld
xchg
(bad)
out
in
dec
scas
ficom
js
jo
add
dec
dec
and
sbb
dec
sbb
cmc
gs
cli
mov
mov
aad
imul
repz
rcl
sbb
sbb
adc
enter
shl
in
es
xchg
mov
push
pushf
mov
and
and
mov
fnstcw
jno
fcomp
or
imul
mov
cmp
fld
les
aas
dec
mov
add
retf
cmps
push
fsubr
inc
inc
adc
sti
leave
ret
popf
mov
mov
xor
outs
ficomp
into
outs
jp
adc
mov
mov
cld
daa
cld
mov
out
xchg
jbe
pop
sti
in
jl
test
lea
shl
add
xor
shl
nop
inc
sbb
jp
xchg
gs
iret
push
xchg
sbb
imul
pusha
les
and
or
xchg
aam
shr
andnps
pusha
push
stos
ficomp
call
mov
addr16
mov
adc
pop
mov
fidivr
add
nop
nop
fmul
fild
sub
cdq
leave
das
lods
jl
jnp
inc
jle
aaa
call
repnz
das
das
add
std
sub
cmps
push
shr
mov
pop
push
jmp
pop
mov
mov
pushf
fs
pop
jg
fcomp
loopne
add
dec
pop
inc
je
inc
jne
jae
push
outs
aaa
retf
and
fmul
imul
push
pop
mov
jmp
mov
int3
in
fmul
cmp
int3
fisubr
inc
xchg
mov
adc
lds
lods
push
lahf
pushf
std
cld
je
sub
mov
cld
add
imul
js
repz
pusha
cmp
neg
cld
push
adc
test
xchg
mov
inc
es
into
loope
outs
push
jecxz
fwait
lods
or
mov
addr16
fdivr
imul
sub
cmps
in
sar
aad
std
sbb
outs
les
cmp
adc
retf
call
jle
dec
fsubr
fsub
jecxz
cli
imul
jb
jae
sub
sbb
mov
stc
shl
jmp
data16
into
dec
mov
sbb
adc
xchg
ucomiss
aaa
add
imul
sbb
push
popa
or
xchg
xchg
jp
sbb
cmp
(bad)
sub
mov
adc
jb
xchg
loope
fucompp
pop
sbb
xor
mov
lahf
or
mov
pushf
sbb
enter
imul
out
lods
inc
fwait
out
mov
pop
leave
dec
bound
jb
pop
jmp
dec
pop
adc
or
jns
jae
mov
jnp
ja
inc
fistp
idiv
push
push
test
push
or
adc
cmp
and
adc
out
sbb
push
lds
xlat
mov
test
nop
fwait
js
not
push
aas
dec
sbb
pop
mov
jle
and
dec
ins
sub
loop
ja
and
imul
sub
sub
push
mov
pusha
inc
mov
in
adc
sbb
rcr
xchg
and
sub
add
cdq
inc
out
pop
(bad)
test
or
cld
cmp
mov
(bad)
pop
and
jge
call
inc
call
pop
aas
add
fcmovu
mov
jl
cmc
aaa
cmp
les
mov
or
ret
pusha
out
pop
imul
sti
sub
imul
imul
mov
out
(bad)
push
(bad)
jns
xor
sti
test
sti
or
push
mov
popf
les
dec
jnp
clc
push
data16
cmp
in
aaa
unpckhps
push
ins
fdivr
push
or
jne
jl
xor
cmp
xor
and
xor
retf
push
imul
dec
addr16
jg
mov
outs
es
jns
jl
cmps
rcl
sub
push
and
mov
or
push
lods
fwait
jae
sbb
pop
lods
leave
push
pop
jno
into
mov
sahf
sbb
adc
(bad)
cmp
jae
push
aas
imul
mov
and
mov
cmp
dec
std
sbb
fwait
mov
nop
sub
mov
push
stos
push
outs
dec
sbb
mul
stc
std
cld
pushf
cld
cmp
daa
mov
(bad)
into
in
dec
(bad)
cmp
mov
adc
add
ficomp
aad
pop
mov
push
repz
sub
jecxz
cmp
aaa
aas
mov
pop
shr
outs
mov
adc
test
xor
xor
in
into
push
pop
xchg
push
ja
cdq
scas
dec
clc
stos
ss
mov
pop
es
bound
mov
rcr
push
jae
nop
lock
aam
ins
call
test
dec
dec
lock
cmps
mov
adc
adc
push
ficom
adc
and
push
jle
or
mov
mov
cmp
sub
movs
retw
mov
loope
aaa
shl
(bad)
xchg
js
and
in
sbb
clc
mov
cmc
fcomp
mov
aas
pop
sbb
test
mov
or
dec
cmps
push
sti
or
in
sub
mov
xchg
cmps
jmp
aam
add
or
push
scas
mov
out
jno
xor
jge
mov
mov
in
jns
jbe
push
out
dec
push
push
push
repnz
pop
mov
mov
mov
inc
dec
push
dec
enter
std
sub
retf
adc
jge
lock
inc
jp
dec
mov
mov
jg
(bad)
in
and
ffreep
mov
mov
jns
enter
aad
pop
stos
call
aaa
aaa
stc
ds
jb
pop
cmps
(bad)
sbb
retf
and
into
and
mov
pop
test
test
arpl
dec
enter
out
push
(bad)
cmp
mov
cmps
mov
push
jge
or
cmp
pop
pusha
push
mov
jo
pop
push
fdivr
cli
adc
mov
mov
arpl
daa
shl
out
or
mov
ret
or
in
add
(bad)
mov
mov
fldcw
cmp
xchg
ins
in
cdq
xor
addr16
adc
xchg
mov
adc
cs
sahf
inc
and
mov
std
in
nop
fs
cmp
js
add
mov
js
mov
mov
cmp
stc
inc
gs
add
cwde
popf
in
hlt
mov
cmc
inc
mov
xchg
ds
jb
inc
shl
leave
pop
fist
ja
not
stos
adc
aad
mov
pop
add
adc
sub
and
sahf
jl
fld
or
test
rcl
scas
pushf
movs
fisttp
sub
scas
push
movs
movs
mov
xchg
sbb
cmp
cmp
sub
dec
adc
cmp
jae
and
add
or
and
test
add
mov
mov
psadbw
xchg
js
mov
imul
sar
cmp
add
in
stc
mov
adc
pop
push
daa
mov
shl
xchg
add
neg
jo
pop
xchg
imul
xor
jne
aad
int3
outs
push
(bad)
arpl
enter
fisttp
push
or
cmp
adc
dec
in
inc
add
push
scas
xchg
cmps
aad
pushf
add
push
add
in
into
clc
xor
jb
mov
adc
push
mov
imul
aad
pop
mov
icebp
adc
lahf
adc
enter
pop
cmp
xor
fist
adc
jp
fstp
cs
sub
rcr
pop
ss
mov
adc
jecxz
pop
pop
cwde
and
push
mov
aad
rcr
adc
xchg
cld
into
out
ins
adc
and
push
fild
push
js
mov
sahf
sbb
dec
imul
cdq
jns
cmp
addr16
jmp
add
cs
cmp
ret
mov
aaa
popa
dec
scas
jae
mov
jp
inc
leave
cmps
jmp
jecxz
sub
adc
push
push
xor
pop
fistp
pop
lds
pop
in
or
and
in
pop
jl
dec
int3
cmp
mov
outs
pop
std
ins
pop
sbb
dec
sar
pop
or
inc
push
mov
div
and
or
loop
or
aas
aad
lods
or
aam
jge
jnp
ret
dec
push
jmp
ss
push
test
mov
(bad)
mov
pop
cmc
adc
mov
cmp
xor
xchg
stos
mov
inc
mov
out
iret
cs
push
jne
je
sub
mov
xchg
or
sub
lahf
repz
(bad)
fldz
gs
es
in
mov
movs
mov
daa
mov
xor
mov
or
xchg
cli
es
jne
fnstenv
jb
pop
sahf
jo
jnp
jbe
sbb
mov
or
mov
fdivr
mov
xor
jb
dec
xor
icebp
or
ret
push
push
icebp
loopne
call
xor
repz
push
push
sub
mov
dec
stos
clc
mov
not
xor
jo
or
sub
mov
out
dec
xlat
sbb
addr16
repnz
sub
inc
push
cmp
neg
aas
mov
outs
fucom
loopne
adc
jmp
mov
je
cdq
cmc
imul
pop
js
mov
xchg
mov
add
je
cmp
mov
push
loop
(bad)
retf
push
add
retf
stos
mov
js
push
shl
inc
(bad)
in
jns
jb
ror
frstor
adc
cmp
cmp
pop
and
mov
mov
mov
cmc
test
bound
inc
pop
imul
fwait
mov
pandn
stos
(bad)
xor
add
sti
gs
mov
mov
out
in
paddw
pop
or
jo
scas
nop
es
or
sar
mov
loop
inc
push
(bad)
loop
xchg
push
cli
pop
dec
aaa
and
xor
inc
imul
fwait
push
lods
sub
push
mov
pop
shl
leave
push
clc
loope
pushf
xchg
fs
mov
aas
jno
mul
retf
pushf
jbe
inc
xchg
repz
sbb
stc
pushf
inc
mov
mov
mov
pop
dec
sbb
aaa
rcr
push
xchg
jnp
mov
mov
pusha
bt
push
dec
retf
xchg
outs
ret
mov
push
das
jmp
(bad)
aas
xchg
or
cwde
rcr
pop
jno
into
daa
in
in
popa
int3
gs
outs
loop
mov
retf
sub
inc
imul
movs
mov
jo
repz
jmp
and
ficomp
fimul
sbb
xor
add
out
fild
mov
or
mov
inc
xchg
xor
lods
dec
pop
mov
mov
pop
and
xlat
shl
and
jp
hlt
int
stos
and
mov
shl
lea
dec
and
add
mov
sub
daa
sbb
cmp
dec
leave
out
stc
and
sbb
fstp
ret
stc
mov
jle
loopne
sub
mov
mov
call
cwde
mov
add
pop
ins
pop
jne
and
stos
dec
mov
or
retf
loopne
(bad)
ret
add
cmc
inc
lock
and
call
sub
ret
cmps
add
test
xor
stc
mov
and
outs
and
pop
sbb
test
test
push
pusha
mov
or
fsub
fmul
repz
xor
gs
cs
xchg
(bad)
rcr
call
ja
add
fild
mov
push
test
jne
and
cld
sar
lods
stc
dec
aaa
cs
dec
std
cdq
adc
push
das
test
test
out
pop
rcr
inc
imul
mov
adc
push
xchg
std
add
pop
pop
mov
shl
dec
test
and
daa
sub
pop
xor
mov
sub
push
adc
lea
adc
add
xchg
fs
loope
xor
xor
dec
cmp
and
xor
add
mov
xor
clc
mov
cs
mov
xor
fcom
loop
loope
aam
or
cmp
je
inc
fdivr
out
sbb
xor
mov
add
mov
ror
dec
inc
aas
mov
mov
adc
push
adc
loop
inc
mov
xchg
add
push
add
sbb
shr
xor
jno
ret
int
fs
mov
stc
arpl
mov
out
push
cmp
or
shl
pop
jl
jbe
(bad)
hlt
jge
loop
and
cmp
jmp
sub
lahf
icebp
cmp
and
inc
push
push
psllq
jnp
xchg
daa
retf
add
div
xor
sub
adc
fcmovu
ss
mov
xor
lds
cwde
sub
dec
dec
test
ret
sub
in
sub
ins
sbb
add
mov
xor
out
and
ds
mov
js
fwait
xchg
je
dec
in
xor
or
popa
push
xchg
inc
sbb
lds
cmps
mov
aad
xchg
pop
aas
mov
outs
and
cmp
mov
fild
popf
movs
loopne
inc
or
or
push
xchg
jmp
(bad)
and
jecxz
mov
mul
cmp
sbb
pop
retf
sub
retf
push
mov
ins
push
out
push
sbb
and
pop
inc
dec
fiadd
aam
pushf
dec
xor
das
inc
push
out
int
imul
and
add
adc
es
rcr
inc
push
imul
cmp
dec
ja
mov
inc
scas
scas
movs
sub
mov
and
add
call
adc
mov
xchg
mov
sub
pop
adc
or
mov
dec
ins
div
pop
arpl
and
(bad)
mov
adc
lar
inc
pop
test
xchg
jmp
jmp
leave
or
inc
js
sti
xlat
and
mov
add
ror
arpl
push
pop
xchg
mov
out
dec
cmp
mov
jmp
test
hlt
jne
hlt
cmp
jg
in
mov
lods
sbb
jb
adc
inc
adc
and
sahf
sbb
fidiv
jmp
and
dec
scas
hlt
fdivr
ja
retf
mov
mov
std
push
cmc
bnd
jl
mov
hlt
push
scas
popf
out
and
sbb
mov
push
xor
imul
cli
outs
scas
and
mov
fcmovb
mov
xor
adc
and
jbe
or
xchg
je
jmp
stos
sub
inc
sbb
dec
adc
fsubr
lahf
sub
ins
and
sbb
inc
iret
and
enter
mov
dec
(bad)
xchg
cmps
aam
sub
stc
rol
cmp
cmc
inc
into
popf
inc
pop
fldcw
mov
clc
add
xchg
and
mov
(bad)
neg
movs
popa
mov
adc
xor
retf
inc
xchg
fimul
mov
rcl
pop
push
cdq
adc
push
cmp
cs
cmp
inc
or
pop
aam
xor
mov
sub
inc
sbb
inc
sbb
mov
dec
mov
stos
mov
xor
dec
stos
jns
movs
sbb
pop
retf
pop
dec
popf
dec
retf
push
pushf
jae
imul
ret
mov
add
mov
shr
sar
(bad)
retf
xor
hlt
mov
dec
xor
pop
mov
sub
ins
dec
int
push
pusha
inc
adc
lea
push
mov
cmps
scas
push
lods
popf
mov
xor
scas
outs
xchg
sbb
push
pop
loopne
sub
ret
(bad)
popf
dec
cdq
and
test
dec
ss
mov
inc
push
inc
aaa
aad
fs
jnp
adc
fadd
shr
mov
ins
outs
sti
loop
jl
in
test
cmp
mov
and
out
mov
xchg
daa
mov
(bad)
fistp
sbb
add
push
jle
add
mov
cmp
aam
jmp
lea
mov
icebp
add
jg
jo
adc
jmp
sub
lock
aad
xor
fsubr
fwait
cmp
jnp
inc
pop
and
in
imul
repnz
jns
xchg
jecxz
leave
push
ret
cmc
mov
mov
es
push
xchg
stos
add
shr
and
push
pop
js
cmp
int3
jmp
jge
adc
push
jle
out
(bad)
fdivr
sbb
(bad)
sub
arpl
cld
stc
fwait
(bad)
fld
adc
cmp
pusha
arpl
call
in
fcmovb
dec
xor
inc
or
pop
mov
sub
dec
ds
cdq
cld
mov
repz
jae
mov
lock
pop
call
jmp
rol
xor
jmp
out
loopne
es
push
shl
mov
push
out
jle
mov
fidiv
cli
sbb
add
sub
mov
jne
retf
dec
or
xor
mov
addr16
nop
jg
int3
sbb
cmp
push
mov
iret
mov
mov
dec
les
je
ret
jg
push
stos
push
push
adc
lahf
ss
inc
mov
in
fnstenv
dec
test
jns
sbb
xor
pushf
int
sub
pop
in
aam
xchg
loope
or
push
movs
sbb
test
sbb
call
sar
test
mov
sar
sbb
jb
inc
das
or
repnz
cmp
sahf
arpl
sub
js
aas
and
aaa
sbb
xor
test
sub
sub
jne
cmp
jne
aam
xchg
in
cmp
xchg
ficomp
bound
mov
jg
xor
adc
sbb
std
in
inc
add
test
sbb
cmp
outs
xchg
adc
mov
adc
arpl
sub
sub
xchg
(bad)
mov
addr16
retf
in
or
std
repnz
add
sti
push
shr
sbb
adc
add
shl
outs
rol
es
cdq
lahf
jnp
mov
inc
or
fisub
loope
retf
sub
pop
push
icebp
jl
jo
jle
jmp
dec
push
sbb
mov
movs
inc
adc
pop
mov
xor
xchg
mov
int
out
push
and
push
pusha
jl
(bad)
loopne
test
cwde
add
cmp
fbstp
or
xor
sub
inc
(bad)
xchg
jl
add
loopne
rol
in
cwde
and
(bad)
dec
xchg
lods
pop
inc
data16
sbb
xor
(bad)
pop
dec
mov
lock
dec
ins
std
mov
or
pop
ins
icebp
xor
push
jp
push
inc
or
push
jbe
popa
pop
outs
xchg
lea
pushf
retf
pop
clc
in
xchg
mov
in
mov
(bad)
xchg
jb
sbb
pop
out
stos
ins
icebp
mov
fisub
cwde
shl
pop
sub
push
rol
fucomp
jne
mov
sti
xchg
jmp
push
mov
(bad)
test
cli
xor
popf
dec
icebp
adc
(bad)
mov
xchg
dec
mov
sub
nop
mov
imul
inc
jne
pop
push
push
mov
sub
call
cmp
movs
dec
into
int
test
daa
imul
mov
lea
arpl
ret
dec
rcl
inc
mov
push
idiv
sar
hlt
aad
sbb
out
jnp
add
out
mov
pop
dec
(bad)
arpl
ret
test
icebp
std
inc
adc
mov
jb
fadd
xchg
mov
call
or
pusha
daa
adc
and
fld
mov
test
inc
stc
aam
pop
test
pop
jbe
in
mov
scas
mov
in
or
in
push
or
jo
add
sub
imul
jmp
outs
lock
add
out
leave
xchg
adc
sub
inc
ror
int
sahf
mov
aad
dec
push
xchg
and
jg
inc
pop
mov
scas
imul
lds
cmp
sub
lods
lods
xchg
(bad)
int3
stos
scas
push
jo
cdq
aaa
sub
push
jnp
fcmovbe
push
shr
arpl
(bad)
stos
mov
leave
push
aad
push
add
push
push
das
(bad)
int
sti
cmp
pusha
jne
neg
push
push
lock
inc
mov
fcom
std
aaa
scas
cli
inc
push
jne
out
xchg
inc
das
jecxz
into
or
mov
fsub
fwait
outs
xchg
repnz
ins
std
mov
pop
xchg
mov
mov
pop
mov
shl
(bad)
jge
push
sti
mov
div
sbb
mov
cmp
or
out
cmps
fld
fnstsw
hlt
sbb
mov
jp
or
out
jne
pop
test
fild
mov
xchg
out
ja
cmp
jle
jge
pop
test
lods
xchg
js
addr16
mov
sbb
cmp
adc
das
hlt
adc
cmp
xchg
stos
jne
dec
sub
fs
ror
pop
sbb
cs
mov
xor
call
(bad)
mov
fsub
cmc
xor
movs
mov
imul
pop
mov
dec
pop
inc
and
popf
jns
call
sbb
mov
fucomip
inc
ins
inc
mov
sbb
mov
mov
or
scas
mov
jno
loope
sbb
arpl
mov
pop
xor
int3
fnsave
mov
dec
add
pop
clc
outs
fnsave
cmp
js
fild
ror
stos
fild
xchg
mov
movs
in
fist
xor
mov
mov
shl
psubusw
cmp
call
jb
push
ja
(bad)
sti
jl
dec
aaa
mov
mov
inc
or
pop
pop
adc
loope
push
cmp
and
mov
jb
dec
dec
lea
jp
adc
jbe
(bad)
mov
imul
mov
dec
xchg
cmps
push
out
mov
sub
pop
dec
cmp
sub
xor
aad
mov
enter
sub
mov
mov
aaa
add
jo
hlt
jg
pop
aaa
jmp
jecxz
cmp
or
xchg
push
xchg
pop
or
mov
lds
or
(bad)
sbb
mov
push
stos
inc
cmp
push
cwde
dec
lds
fstp
cmp
movntps
retf
xchg
mov
sti
in
pop
mov
xchg
push
rcl
aaa
sub
jle
repnz
popf
arpl
test
loopne
mov
nop
stos
int
test
mov
cld
fst
inc
paddq
fadd
movs
fistp
mov
sub
ret
cmp
sub
jecxz
arpl
in
stos
adc
xchg
inc
frstor
inc
jbe
pop
les
adc
add
mov
fs
jmp
sbb
mov
sbb
hlt
xor
mov
loope
scas
inc
aas
(bad)
lods
jge
(bad)
fisubr
stos
jge
ficom
sbb
fsub
iret
xor
(bad)
enter
repnz
(bad)
gs
sbb
fisttp
retf
rcr
outs
retf
ds
lods
xlat
pop
hlt
push
adc
jle
or
(bad)
pop
(bad)
je
cs
iret
data16
mov
cli
daa
ret
cmp
push
or
push
cmp
dec
and
std
pop
lods
movs
cmp
fcomp
cmp
jb
in
dec
call
mov
jns
fcom
test
or
sub
or
sub
push
cmps
or
setb
scas
das
xlat
push
inc
add
dec
fimul
stos
jae
bound
ss
stc
(bad)
sbb
pop
inc
mov
sti
inc
nop
sbb
addr16
loope
xor
xchg
add
fld
pop
add
or
cld
bound
push
rol
mov
retf
pushf
test
pop
jnp
lea
ret
or
adc
(bad)
mov
movs
int
mov
gs
inc
outs
mov
cmp
enter
mov
pop
into
xor
and
fnsave
xor
xor
stos
movs
cmps
mov
into
mov
mov
mov
jl
lahf
push
push
in
mov
cli
jmp
sbb
jge
daa
ficom
adc
sbb
adc
pop
idiv
scas
push
cli
ds
mov
cwde
jo
sbb
int3
sbb
dec
push
(bad)
jp
jae
mov
mov
sti
inc
jmp
or
ror
cs
(bad)
xchg
sbb
push
ds
xor
add
retf
(bad)
push
stos
pop
mov
rol
push
repz
mov
mov
stc
rol
loop
push
adc
into
call
aaa
rcr
les
mov
adc
or
sbb
outs
jecxz
cmp
ret
xchg
xchg
mov
cld
sti
out
ins
sbb
cld
scas
aad
(bad)
pop
inc
leave
jmp
lods
cdq
(bad)
aad
retf
xor
dec
push
cmp
(bad)
retf
push
retf
push
das
jbe
sub
xor
loopne
mov
inc
dec
mov
into
mov
dec
jb
mov
aaa
mov
jno
outs
test
fadd
dec
imul
mov
fisubr
xchg
popa
ins
lds
es
aad
cmc
sbb
inc
stos
add
mov
pusha
xor
sub
ds
and
lahf
call
jmp
xchg
outs
arpl
fcom
mov
push
push
push
fstp
call
cmps
cmp
push
mov
popa
xchg
adc
pushf
mov
scas
pop
packsswb
int
jecxz
push
push
in
sub
inc
adc
jecxz
cdq
and
stos
sbb
popa
shl
xchg
or
mov
cwde
add
aam
rcl
mul
fist
pop
and
or
outs
pop
cmp
and
adc
fisttp
mov
lds
mov
out
mov
jns
xor
xchg
add
jne
cdq
xor
repnz
shr
into
pop
mov
inc
push
mov
gs
xchg
xor
call
sbb
inc
(bad)
out
ja
mov
xchg
or
mov
ret
stc
mov
mov
dec
sub
movs
test
lods
xchg
or
jns
pop
mov
pop
ret
ja
(bad)
xchg
sahf
or
jmp
pop
cmp
aad
into
xchg
xchg
mov
enter
add
rcr
xor
mov
pop
mov
scas
je
xchg
mov
jge
loop
cs
rol
pop
bound
cs
inc
pop
jae
lods
xchg
mov
jg
(bad)
lea
jg
std
test
cld
jmp
mov
sbb
icebp
lods
mov
hlt
jb
test
ja
adc
jp
ins
out
stos
and
inc
lahf
aaa
imul
loopne
lahf
imul
outs
lea
dec
cli
cld
retf
inc
push
mov
or
loopne
daa
add
imul
pop
fld
mov
xchg
js
inc
cmc
add
or
mov
enter
mov
popa
das
sar
loopne
mov
dec
and
cs
push
(bad)
gs
outs
ins
sub
cmps
outs
shl
jne
pop
push
je
cmc
pop
rcl
fs
cli
sub
cld
arpl
sti
push
lea
adc
xor
mov
add
mov
stc
fcomp
adc
std
iret
aad
mov
repnz
jl
scas
outs
and
sbb
sub
mov
pop
arpl
mov
cs
cmp
push
jne
cmp
or
mov
add
or
sar
ss
add
rcr
cmp
out
pop
add
pop
int
int
inc
push
sub
xchg
ror
dec
outs
test
je
shl
imul
push
pop
lock
dec
jge
mov
scas
mov
test
or
es
mov
dec
loopne
mov
pop
ss
cmp
cli
int
cli
sub
call
inc
add
aas
mov
and
fist
xlat
jbe
test
dec
pop
pop
mov
icebp
lock
aam
mov
repnz
movs
sbb
repnz
sti
retf
cli
mov
dec
ins
push
jecxz
jmp
(bad)
mov
dec
rcl
fmul
loopne
sub
xchg
and
sahf
dec
lods
out
push
or
pop
je
inc
or
mov
and
xor
xor
xchg
dec
push
mov
movs
(bad)
xor
fiadd
mov
sbb
das
sub
cmps
inc
(bad)
jg
xchg
jnp
adc
pop
popf
sub
dec
mov
push
out
js
out
sub
test
jns
pop
sub
add
ror
retf
stos
call
cmps
add
inc
test
adc
outs
adc
or
mov
sub
mov
mov
daa
jne
(bad)
jno
mov
test
outs
cmp
mov
daa
lods
xchg
dec
jae
sar
xor
imul
xchg
lock
imul
call
dec
mov
fsubp
cld
adc
inc
call
cmp
and
in
add
iret
fbld
xchg
dec
not
lea
jbe
mov
std
imul
cmp
xor
lods
stc
dec
dec
jl
imul
mov
adc
push
sbb
lahf
push
add
push
mov
dec
mov
sub
lea
dec
fsubr
add
aaa
xor
lahf
inc
fnstcw
lods
shr
fidiv
inc
(bad)
cmp
adc
das
lock
sahf
int
fdiv
fisub
js
push
into
inc
mov
ja
pop
and
movs
sbb
add
cld
and
sbb
pop
lock
and
lahf
call
sub
cwde
mov
jne
jnp
(bad)
ss
xchg
fucomip
adc
mov
sub
xor
(bad)
and
jmp
push
cmc
dec
fisubr
jne
add
xchg
push
call
xor
aaa
cmps
and
int
outs
pop
pop
or
fnsave
cmps
cwde
inc
jne
push
arpl
dec
xor
pop
stos
pop
cs
push
jno
(bad)
setle
pop
popa
xchg
cdq
sbb
push
loope
test
pop
in
icebp
dec
add
scas
dec
or
inc
mov
push
cmc
ret
mov
xchg
sbb
iret
pop
pop
nop
das
test
mov
mov
add
sub
sbb
out
or
ja
xor
call
jg
scas
add
inc
retf
mov
in
mov
add
jg
jbe
popf
cmp
xchg
fadd
jle
and
rol
push
xchg
loopne
dec
push
dec
gs
popa
mov
ret
or
hlt
js
aam
ja
scas
pop
ja
xchg
packuswb
pop
mov
fcom
mov
mov
or
bswap
loope
fstp
mov
xor
das
xchg
mov
xor
pop
cmovg
sub
mov
out
pop
adc
push
ds
cmp
cmp
lods
test
loopne
mov
das
inc
jg
imul
ds
imul
gs
repz
mov
sbb
mov
rcl
cld
int
fist
xchg
ret
cmp
push
sbb
mov
test
mov
pusha
jle
dec
popf
dec
mov
(bad)
sub
mov
jno
sub
imul
(bad)
sbb
adc
jl
sbb
lahf
inc
jp
sbb
loopne
imul
pop
add
push
inc
test
sbb
icebp
adc
cs
dec
sahf
or
sub
int
(bad)
sub
pop
cmp
jmp
or
test
ret
sub
xor
fidivr
imul
cmp
add
sbb
mov
scas
ja
scas
in
cmps
sbb
adc
adc
es
and
movs
or
nop
xchg
imul
pop
push
jmp
and
and
pusha
in
cmp
jp
cmp
imul
retf
(bad)
fsubr
retf
fcmovnb
mov
in
mov
repz
test
sar
mov
dec
les
lods
fst
pop
int3
test
sbb
cmp
dec
dec
jg
movs
lahf
ror
jae
sbb
pop
pop
test
jo
jno
sbb
pop
adc
(bad)
jge
mov
mov
cwde
mov
in
lods
stos
add
aas
test
mov
xchg
fisttp
aad
push
movs
jmp
xchg
mov
(bad)
and
loopne
mov
movs
clc
push
inc
push
mov
jne
sar
loope
and
test
jecxz
dec
loope
xchg
ret
clc
xchg
push
inc
dec
lock
leavew
js
and
call
xchg
and
stos
sub
stc
dec
das
jne
outs
jno
mov
cmp
sub
add
js
loopne
push
lods
push
push
icebp
test
mov
jne
cwde
ficom
sbb
data16
inc
shl
mov
not
test
mov
lahf
mov
pop
pusha
ds
push
xchg
push
mov
mov
mov
or
fisubr
mov
cli
inc
push
stc
repnz
inc
pop
repnz
mov
imul
clc
in
call
ins
xchg
js
add
icebp
xchg
mov
jle
pop
pop
mov
add
cld
mov
scas
repnz
push
ss
cmp
repnz
je
dec
inc
adc
xchg
loop
xchg
(bad)
out
adc
cwde
bound
adc
and
pop
sbb
mov
arpl
jmp
ja
clc
(bad)
movs
push
je
jmp
or
jle
(bad)
sub
aam
adc
jne
push
or
xchg
dec
add
xchg
pop
retf
ret
mov
or
mov
or
adc
fwait
cmp
mov
nop
cld
(bad)
xor
jmp
test
adc
out
mov
lods
(bad)
push
icebp
gs
fisttp
dec
hlt
push
aad
push
xchg
sub
cmps
cmp
fs
inc
pop
jb
xchg
cmc
daa
jmp
pop
repz
test
scas
and
retf
pushf
mov
outs
sbb
inc
push
xor
adc
push
mov
test
jp
jno
sbb
(bad)
outs
xor
mov
push
mov
fdiv
or
sbb
mov
jns
pop
mov
and
ror
data16
test
fdivr
sub
mov
cmps
les
movs
scas
movs
ins
push
adc
fadd
mov
fprem1
pop
inc
pop
pop
lahf
xchg
push
jecxz
pop
(bad)
call
test
add
pop
outs
jne
cwde
jne
fmul
and
lods
imul
jb
jmp
push
cld
inc
ret
vmovhpd
sub
or
sub
pushf
fst
jb
and
inc
push
cmp
cmp
sbb
inc
out
push
outs
in
fdivr
repz
outs
jbe
hlt
push
fidiv
pop
int
and
dec
cmp
pop
add
es
aaa
jl
aas
xchg
cmps
test
aam
mov
lods
test
(bad)
mov
sub
inc
test
rol
cwde
cmp
mov
nop
enter
imul
lahf
(bad)
in
lahf
jns
lds
xlat
add
lods
into
push
mov
pop
icebp
jae
bound
push
mov
pop
ins
cmc
cmovle
mov
clc
sbb
aam
mov
mov
cdq
xor
ja
and
sahf
rol
popf
mov
jae
inc
cdq
out
or
add
cmps
or
push
(bad)
sub
jg
(bad)
repnz
test
inc
jmp
dec
pop
(bad)
cld
test
call
cmc
(bad)
push
and
outs
mov
xchg
dec
xlat
jle
adc
fist
lds
jb
lods
lock
inc
out
mov
jmp
aas
dec
test
movs
inc
or
fnstenv
inc
push
inc
jge
mov
cmp
icebp
fcomp
bound
mov
sbb
adc
(bad)
xchg
sub
ja
adc
mov
mov
jo
sbb
pop
inc
add
xchg
jg
cwde
imul
sub
add
imul
push
test
add
je
push
mov
add
add
mov
inc
hlt
xchg
jb
scas
fsubr
arpl
adc
in
cdq
fld
lock
xor
(bad)
ret
gs
inc
jge
push
push
sub
cmp
mov
int
pop
xchg
mov
dec
adc
loop
mov
dec
rcl
retf
and
jne
in
xchg
sub
mov
loop
or
lds
dec
inc
mov
xchg
sbb
mov
add
mov
inc
mov
cmps
fcomp
(bad)
test
jecxz
call
push
mov
jl
xlat
loope
sti
hlt
gs
jb
in
ins
adc
or
push
and
push
sub
jecxz
add
mov
push
loop
(bad)
jp
dec
stc
(bad)
cmp
mov
pop
adc
aas
push
int3
iret
push
(bad)
in
or
or
lods
xor
icebp
mov
(bad)
cdq
cs
rol
out
(bad)
push
fidiv
inc
aad
scas
scas
ficomp
mov
xchg
stos
xor
stc
push
add
pop
cli
mov
sub
xor
pop
cmp
mov
call
shl
int3
xor
mov
mov
push
lods
inc
xchg
adc
push
aam
and
sbb
fcomp
fild
mov
mov
int3
std
dec
movs
add
add
sti
adc
sti
fwait
jnp
lahf
mov
pop
mov
fild
repz
cmps
movs
cld
(bad)
js
add
clc
cmp
mov
cmp
or
mov
and
push
cmp
test
or
sub
ja
pop
das
mov
dec
add
xor
push
cld
xchg
and
ror
sbb
sub
mov
pop
adc
test
adc
push
shl
adc
test
repnz
xchg
adc
xor
jns
lock
shl
dec
ins
and
sahf
mov
loope
addr16
and
jp
cmps
push
sar
mov
jbe
sahf
fld
rol
pushf
push
jb
xchg
inc
cmp
ss
dec
sets
cwde
push
mov
xor
aas
or
scas
inc
fwait
ret
cmc
jno
iret
add
mov
movs
add
cmp
in
std
ss
fsubr
mov
add
xor
lods
enter
(bad)
xchg
test
push
std
idiv
inc
mov
mov
cmps
imul
add
mov
ins
inc
cmp
add
xchg
adc
push
imul
sbb
xchg
adc
and
inc
test
les
loop
repnz
fld
inc
cs
test
imul
cmps
lahf
and
mov
imul
out
xor
aaa
mov
push
test
stc
xor
les
add
jmp
int3
mov
pop
xor
sub
mov
shr
xchg
in
and
ficomp
mov
pop
ds
sub
push
scas
jmp
rcr
(bad)
arpl
push
push
cmp
xor
pop
cmp
out
push
nop
das
or
lds
sbb
stos
xchg
inc
xor
mov
cmp
out
push
stos
push
cdq
add
sub
sbb
inc
jl
push
pusha
pusha
leave
out
(bad)
xor
adc
xor
cli
out
dec
imul
add
and
lods
push
add
push
outs
enter
fnstsw
shr
dec
mov
loopne
aam
inc
iret
dec
cmps
push
fstp
enter
dec
add
jge
mov
outs
aaa
jecxz
cmp
cmc
loop
in
in
lock
pop
call
addr16
fdivr
inc
paddq
ffreep
push
stc
ror
icebp
and
out
jae
sti
test
xchg
xor
int
mov
sub
cmp
mov
jno
mov
std
imul
jnp
lea
cs
mov
jmp
mov
das
not
(bad)
sub
sbb
sar
xchg
xchg
mov
std
jge
mov
mov
mov
jge
mov
retf
enter
loope
push
ret
cmps
out
das
sbb
or
mov
or
cmc
sub
ins
push
aas
xchg
hlt
push
mov
mov
pop
push
dec
xor
push
add
mov
cli
aam
dec
arpl
and
cmp
inc
in
fadd
lods
rcl
add
jno
xchg
jns
sbb
es
jl
or
xchg
cwde
out
jno
push
push
cmp
push
aas
sbb
mov
pop
mov
popa
(bad)
cmp
xchg
xor
ret
movs
dec
cmps
mov
jmp
cs
ffree
in
movs
hlt
pshufw
push
lods
mov
add
jmp
cmp
mov
iret
fcmovnbe
inc
or
mov
lods
adc
inc
ja
fadd
cmp
scas
test
push
fsubr
repz
(bad)
popf
jnp
jmp
adc
enter
xor
ins
mov
out
clc
daa
shl
lds
dec
pop
adc
aad
aaa
dec
dec
sbb
jae
sbb
jno
mov
or
movs
daa
jmp
int3
aaa
push
fs
mov
xchg
popa
adc
repz
jmp
(bad)
aad
cmp
lods
jnp
test
fwait
test
lock
rol
mov
iret
push
sub
loopne
adc
in
ins
xor
je
inc
aaa
ficomp
or
idiv
imul
xor
and
ret
or
imul
leave
sbb
and
push
clc
loop
hlt
push
sahf
lock
dec
in
sub
int
das
daa
aad
fiadd
fidiv
push
cmp
(bad)
or
call
mov
push
jecxz
in
or
jns
data16
jne
data16
(bad)
sbb
lock
adc
pop
int
xchg
cld
scas
cs
jmp
enter
push
movs
inc
dec
jne
out
inc
test
mov
dec
iret
aad
add
inc
mov
jb
jo
pop
fwait
push
jns
data16
addr16
sbb
jl
lods
inc
xor
mov
mov
je
repnz
inc
dec
or
dec
xchg
xchg
adc
pop
mov
cmc
cmps
push
push
or
mov
add
ret
add
mov
mov
fwait
jo
pop
sti
add
dec
(bad)
jl
jmp
pop
mov
push
push
mov
or
retf
mov
rol
xchg
nop
adc
dec
sahf
hlt
dec
cs
xchg
dec
xchg
gs
mov
xor
stos
and
cmc
(bad)
icebp
add
mov
pop
push
call
or
icebp
cmp
push
inc
gs
(bad)
cmp
jp
lahf
lahf
adc
jo
shl
pop
adc
fwait
cmp
imul
xor
mul
cmps
pop
stos
aaa
lods
in
xlat
cmp
inc
mov
daa
repnz
in
ss
sbb
lahf
pop
adc
addr16
cmp
mov
fadd
int3
ins
clc
xchg
int3
cmp
test
ds
add
aam
adc
dec
lods
adc
mov
push
js
mov
ss
push
int
xchg
gs
pushf
retf
inc
cmp
xchg
ror
imul
mov
adc
jbe
sbb
(bad)
mov
call
cwde
or
xor
dec
(bad)
xor
cmp
lds
inc
mov
sbb
das
mov
sbb
mov
ds
add
xchg
and
jmp
jns
sbb
pop
nop
popa
add
adc
neg
test
sbb
cmp
data16
outs
pop
pop
in
fiadd
and
jp
or
add
cwde
add
push
int
mov
(bad)
xchg
adc
loope
mov
ja
and
adc
outs
pop
pop
fdivr
dec
dec
in
jle
jl
rcl
or
push
(bad)
pop
pusha
out
das
div
ds
mov
xchg
push
rcl
cmps
adc
push
sbb
sahf
sbb
cmp
push
jae
aas
pop
or
retf
push
xchg
pop
jecxz
jmp
mov
add
dec
lock
(bad)
fistp
sbb
std
inc
inc
jb
push
call
movs
(bad)
xchg
cmps
ins
push
fiadd
lods
ss
pop
mov
scas
cmps
adc
xor
mov
retf
pop
scas
sbb
mov
and
repz
jae
dec
lock
in
push
cmp
mov
pop
outs
es
data16
std
pop
rcl
and
or
rol
jp
dec
test
loop
ins
add
rol
push
rcpps
retf
es
fcomp
fld
jo
fmul
jmp
push
pop
push
jl
pop
loop
cld
loopne
mov
lock
das
idiv
add
add
test
dec
mov
and
cmovno
(bad)
stos
adc
jnp
test
cmp
or
xor
dec
xchg
inc
adc
fnstenv
scas
inc
cmp
cmp
add
mov
shr
add
adc
dec
int3
sti
cmp
aas
push
add
push
mov
rcr
push
rol
out
mov
add
hlt
js
or
xchg
sbb
test
and
cmc
packuswb
push
outs
jg
add
sub
dec
shl
push
cdq
or
dec
les
xlat
pop
and
cld
inc
push
js
(bad)
mov
lds
pop
adc
stos
adc
sub
call
or
pop
push
inc
cld
dec
jae
push
into
xchg
jecxz
in
push
arpl
mov
jp
pop
dec
cmp
push
and
movs
jmp
xchg
popa
pop
sbb
int3
inc
mov
fcmovbe
shl
xor
movs
retf
popf
loop
mov
cli
loopne
adc
jg
mov
inc
test
imul
shl
push
and
clc
pushf
jmp
cmp
jbe
xchg
sub
stc
inc
lods
jne
push
xchg
out
mov
sbb
rol
fidivr
mov
jae
and
shr
pusha
sub
dec
sti
dec
sbb
out
(bad)
jo
std
out
or
repnz
rcl
sbb
into
repz
out
pop
or
inc
pop
adc
cmc
sbb
into
movs
jecxz
adc
jne
push
leave
add
jo
leave
fstp
mov
sub
popa
sub
pushf
xor
ret
add
add
enter
push
into
add
dec
cld
pop
cmp
leave
cwde
shr
sti
mov
movs
fist
aad
inc
es
lds
leave
cmp
lds
les
fldcw
stos
inc
enter
test
scas
mov
mov
mov
and
mov
loop
outs
ss
ret
out
xchg
loope
jbe
popa
cld
retf
ds
or
jno
dec
pop
pushf
ret
mov
push
xor
daa
xchg
jecxz
or
mov
icebp
in
and
lods
xor
xchg
loopne
pop
iret
loop
or
jne
js
adc
test
dec
repz
adc
jnp
mov
ror
shr
or
jecxz
repnz
test
pop
pop
sbb
cmp
imul
je
jl
or
cmp
or
inc
popa
(bad)
xchg
imul
inc
mov
out
arpl
push
jl
movs
push
ins
stc
cld
cmc
aas
jmp
dec
add
(bad)
loop
cmp
inc
test
inc
and
xchg
mov
mov
(bad)
xchg
mov
pop
in
xchg
into
int
leave
pushf
nop
or
push
lods
mov
daa
lods
xchg
cmps
dec
shl
inc
aad
ret
inc
inc
cmp
bound
or
pop
mov
inc
adc
sub
cmp
jno
(bad)
stc
pusha
xchg
adc
mov
or
addr16
or
jno
mov
push
pop
fcom
inc
sub
scas
aam
fcomp
dec
fld
add
jae
dec
mov
aam
push
and
outs
mov
jo
mov
push
jge
xor
cmps
cmp
es
adc
pop
stos
fist
into
dec
jp
inc
and
push
pop
fucom
repz
test
add
xor
leave
fwait
mov
sub
test
cmp
mov
sub
mov
inc
retf
mov
dec
add
les
add
enter
jle
mov
pop
sub
xchg
inc
psrlw
out
outs
inc
mov
mov
dec
and
data16
out
sbb
std
cmp
neg
outs
daa
mov
and
fstp
ins
jl
inc
sbb
lock
dec
call
ss
(bad)
cli
and
jl
pop
in
xor
inc
jo
(bad)
out
ret
ret
and
sahf
mov
in
jmp
addr16
cmps
inc
ror
mov
test
pop
sbb
xor
push
outs
xor
out
mov
add
popa
cmps
add
add
popf
scas
clc
and
xor
(bad)
pop
and
pop
and
pop
dec
mov
and
push
int3
test
call
scas
jnp
ja
ja
arpl
sub
xchg
cmp
ror
sub
repnz
dec
imul
push
push
int3
imul
mov
call
xchg
call
lds
and
int3
xor
mov
(bad)
retf
xchg
sahf
movhps
cs
pop
xchg
mov
inc
xchg
jp
sahf
mov
ficomp
lods
es
push
in
movs
add
add
mov
xchg
jge
shr
jmp
adc
icebp
test
sbb
out
push
(bad)
test
sar
pusha
xor
dec
jge
jmp
push
inc
sahf
sahf
stos
dec
ds
sub
push
(bad)
ins
sti
sar
loop
jno
sub
ret
imul
xor
adc
ja
mov
pop
jo
cmp
int3
mov
ror
mov
and
xchg
cmp
dec
in
ror
mov
xor
int
test
fcomp
clc
dec
shl
pop
sbb
(bad)
in
fisttp
xchg
pop
mov
je
fdiv
mov
sbb
jb
sub
daa
dec
cwde
jbe
push
mov
mov
cmp
add
mov
(bad)
adc
sbb
dec
out
xchg
dec
push
jnp
test
mov
fstp
mov
mov
sbb
mov
mov
sub
(bad)
xor
dec
dec
movs
cmp
cmp
mov
sub
mov
jae
gs
jb
in
push
cmc
xchg
and
pop
or
add
xor
imul
sbb
inc
shl
lds
jmp
sbb
add
ins
cwde
or
xchg
jmp
punpcklbw
xchg
aam
lea
mov
sbb
ret
sbb
mov
pusha
shl
inc
cmp
and
retf
inc
in
(bad)
sbb
cmp
and
enter
out
test
ror
dec
outs
aam
loope
pop
imul
dec
sbb
dec
push
pop
mov
aas
mov
mov
(bad)
cdq
(bad)
jo
pop
mov
xchg
movs
mov
push
add
jmp
sbb
pop
mov
pop
cmp
cmp
mov
mov
pushf
and
call
arpl
stos
in
cld
shr
in
cmc
gs
cmp
sub
gs
jle
mov
pop
lods
js
push
jle
mov
sbb
pop
dec
inc
js
mov
repnz
sbb
fs
in
lds
retf
pop
dec
ss
movs
in
stos
cli
adc
cmps
push
ror
fdivr
pop
pop
rol
sbb
jl
push
es
xor
jge
scas
ss
jno
ins
inc
mov
xor
out
sub
inc
ret
mov
gs
jmp
and
fiadd
cmp
jge
ins
js
fs
cmp
int3
je
mov
jp
pop
adc
cmps
push
test
inc
ret
cwde
pshufw
loop
cmps
inc
or
mov
loope
jae
out
(bad)
cs
xchg
les
bound
and
adc
mov
in
push
jo
pop
dec
cdq
cld
rol
jle
out
mov
es
fmul
add
jle
les
sub
imul
push
fs
or
je
(bad)
sar
mov
or
sar
xchg
arpl
not
mov
int3
mov
cmps
push
sub
mov
pop
pop
das
pop
stos
ds
mov
xor
jecxz
inc
xchg
adc
pop
push
lahf
xor
movs
je
sbb
lods
push
aam
fistp
add
push
mov
push
jp
inc
cmc
mov
std
out
and
cdq
xlat
xchg
(bad)
test
pop
fsub
(bad)
call
in
adc
aas
mov
or
popf
mov
add
sub
cwde
xchg
pop
or
push
cwde
fld
sbb
or
sub
pusha
sub
ror
adc
in
je
cmp
ss
lods
stos
into
fist
in
mov
inc
inc
adc
jb
shl
aas
daa
or
into
rcr
fcmovnu
enter
jg
out
loop
(bad)
dec
or
sbb
push
lods
inc
adc
icebp
cmp
es
outs
sub
hlt
sub
sub
arpl
rcl
push
push
leave
rol
cs
mov
ret
int
add
dec
mov
cmp
retf
xor
lods
cmp
cmp
and
mov
scas
adc
ja
cmps
inc
popf
xchg
hlt
mov
mov
add
inc
test
popf
(bad)
pop
or
cmp
imul
sbb
lock
sub
(bad)
sub
jns
pop
mov
sti
xchg
pusha
mov
cli
push
sub
mov
mov
test
add
pop
popf
and
cld
movs
out
adc
pop
pop
cmp
adc
mov
add
sbb
dec
push
aaa
push
sbb
ret
cli
xlat
mov
int3
adc
aam
ret
add
jb
retf
fimul
and
mov
add
mov
sbb
pop
xchg
out
xchg
mov
cmc
jle
jbe
dec
js
fstp
out
shl
cmp
push
lods
and
jge
add
imul
test
test
mov
jl
call
(bad)
xchg
aam
cmp
aas
int3
movs
mov
jnp
mov
adc
xchg
pop
push
inc
jo
mov
mov
dec
push
jge
fisub
pop
sbb
test
jl
or
mov
sbb
pop
inc
or
lods
cmps
pop
jo
add
aaa
ins
fild
or
and
jp
push
sbb
dec
fmul
jge
addr16
pop
and
xchg
add
xor
(bad)
inc
sbb
inc
out
ss
movs
jae
and
xchg
gs
and
dec
mov
clc
jae
mov
jae
jle
aad
push
sbb
scas
nop
aaa
cmp
sahf
xor
xor
mov
imul
mov
mov
and
jmp
pop
sub
push
mov
dec
movs
inc
dec
or
shl
cs
stos
push
mov
and
sbb
pop
or
fist
add
dec
inc
and
mov
xchg
fdivr
icebp
pop
mov
(bad)
fs
jmp
ins
sbb
enter
adc
xchg
test
ins
jbe
es
cmp
push
adc
out
ja
pusha
mov
shr
sub
fdivr
adc
jge
and
inc
leave
cmp
or
daa
xchg
and
cmp
cwde
mov
push
push
not
repnz
mov
sbb
mov
test
sbb
in
ins
adc
pushf
jecxz
xor
mov
sub
nop
aas
mov
sub
call
dec
pop
loop
mov
sbb
sti
sub
hlt
jb
aam
stc
cli
xor
(bad)
mov
lods
mov
and
test
sbb
out
mov
nop
cmp
stos
jle
mov
out
(bad)
push
mov
or
add
sbb
retf
mov
inc
pop
sub
ret
loopne
test
inc
pop
dec
out
in
repz
(bad)
dec
mov
adc
or
inc
inc
in
fnstenv
rcl
add
xor
aam
cmp
jbe
xchg
sub
sbb
and
pop
popa
add
mov
cmp
sub
xor
and
jmp
sbb
jmp
scas
cdq
pop
shl
push
push
sub
adc
nop
mov
or
or
adc
and
cmp
loope
mov
jae
jo
xchg
test
add
xchg
(bad)
adc
add
jne
jno
cmp
in
xchg
stc
gs
repnz
lods
popf
div
inc
inc
jno
push
adc
mov
cmps
js
outs
cmps
sub
or
xor
cmps
imul
pushw
aad
or
in
push
ret
bound
mov
or
jmp
jmp
push
jno
jb
sbb
inc
add
mov
retf
and
int3
loop
cli
xchg
out
jne
push
pop
adc
add
fstp
aam
cwde
cmp
ret
jg
inc
mov
das
ficomp
iret
and
fldcw
ror
jae
xchg
lea
(bad)
(bad)
div
mov
or
or
add
sar
(bad)
mul
into
add
ror
(bad)
mov
dec
out
xchg
int3
jl
sub
and
popa
or
mov
push
retf
fimul
fidiv
leave
or
int3
xor
pop
aam
pop
ud0
inc
mov
sub
fist
dec
or
mov
xor
xchg
out
push
and
dec
lock
sbb
cmp
sbb
aam
loop
les
(bad)
jecxz
fwait
cld
pop
xor
pushf
loop
in
mov
fnstcw
push
inc
loop
cmp
ss
push
loop
jmp
sub
adc
popa
ja
mov
adc
std
sbb
lods
push
xor
mov
jecxz
xchg
xlat
push
jecxz
into
xor
jl
pop
fbstp
and
jl
ins
and
pusha
push
adc
aaa
stos
sub
cmps
dec
test
dec
stos
push
xlat
neg
pop
loope
pop
sub
xchg
push
dec
mov
retf
outs
out
sar
aam
ins
dec
in
or
addr16
pop
sbb
mov
jl
stc
mov
stc
mov
(bad)
sbb
stos
outs
ins
sub
enter
mov
fs
jne
std
push
mov
jns
push
lods
inc
jg
sub
fcompp
scas
mov
xchg
adc
dec
jnp
inc
dec
test
cdq
adc
lea
je
mov
and
fucompp
fdiv
mov
fadd
push
rol
jo
jno
adc
cld
cmps
ficom
dec
rol
or
mov
lfs
getsec
jne
daa
dec
sbb
pop
dec
in
xchg
ins
add
pop
mov
mov
mov
out
pusha
jecxz
into
cmp
adc
stos
in
sub
push
addr16
cmp
cmps
xor
icebp
sbb
out
leave
es
xchg
jmp
sub
enter
(bad)
fist
gs
(bad)
loopne
test
std
mov
push
fldcw
xchg
jb
cmp
in
retf
jg
shr
or
adc
pop
add
adc
clc
lods
bound
and
pop
data16
(bad)
add
sahf
out
bound
sbb
or
stos
sbb
xchg
test
jne
add
dec
and
sub
adc
shr
fs
lods
dec
lahf
imul
inc
sbb
mov
mul
aam
jbe
ds
xchg
push
outs
(bad)
mov
mov
jmp
lods
cmps
es
add
sbb
in
cdq
cs
cmp
clc
fs
pop
scas
inc
jle
sbb
cmps
lock
jne
popa
mov
rcl
push
std
and
pushf
loopne
or
cmp
ins
sub
mov
mov
imul
xor
push
pop
cmp
call
aaa
fmul
adc
adc
cmc
arpl
call
cmp
mov
xchg
jnp
mov
jo
gs
retf
(bad)
neg
call
(bad)
and
cmp
cmp
dec
rcl
sbb
outs
loopne
in
xchg
hlt
mov
ins
pop
gs
call
movs
sbb
or
sbb
sub
cmp
arpl
dec
mov
stos
(bad)
dec
jmp
mov
into
(bad)
arpl
sub
sub
inc
out
mov
iret
in
sar
cmp
cmp
push
cmp
(bad)
cmc
fwait
daa
mov
ja
pop
cdq
or
adc
imul
scas
adc
xor
lods
cld
and
loope
ret
adc
clc
mov
sub
jne
bswap
stos
popa
jge
(bad)
mov
and
nop
jle
add
jp
pop
cmc
fwait
mov
add
dec
ja
jbe
push
fld
adc
jmp
(bad)
jmp
jb
rcl
aaa
add
or
pop
(bad)
xchg
mov
pop
repnz
arpl
push
inc
sbb
sti
xchg
push
(bad)
adc
mov
dec
xchg
sub
shr
out
fisttp
mov
inc
repz
and
repz
add
jecxz
jb
call
push
aam
out
xchg
fcomp
rol
jp
mov
inc
xchg
inc
push
push
cmps
shl
stc
add
jnp
icebp
inc
xchg
fst
jle
jge
call
icebp
xor
xchg
das
cmp
mov
fwait
js
and
pop
add
adc
neg
in
cmp
(bad)
movs
inc
test
or
mov
into
pop
lds
(bad)
fistp
movs
mov
jmp
jg
push
in
(bad)
scas
rcl
inc
mov
fidivr
xor
out
push
jl
leave
loope
jl
sub
call
nop
xchg
lahf
stc
sub
popa
aas
lea
sub
and
and
add
mov
int
cmp
jns
mov
dec
stos
imul
cs
xchg
jbe
mov
pop
cmp
sbb
pop
or
out
push
push
test
and
sub
imul
cld
jne
mov
xchg
mov
cmp
lahf
adc
inc
addr16
aam
mov
mov
add
add
cld
fsub
and
cmp
gs
sub
dec
mov
sbb
push
xor
adc
jo
add
ss
xchg
pop
(bad)
imul
leave
hlt
inc
call
inc
mov
sbb
push
cld
ret
mov
adc
sub
mov
and
and
sub
mov
leave
inc
test
pop
scas
dec
ins
mov
aam
xchg
xor
or
jns
add
daa
jae
sbb
mov
push
inc
pop
xchg
pusha
arpl
les
ss
push
sbb
outs
xchg
fidivr
daa
jmp
or
add
ins
dec
inc
mov
push
pusha
sbb
adc
rol
mov
fsub
mov
sub
pop
mul
pushf
scas
(bad)
mov
xchg
inc
lods
popf
imul
addr16
adc
jg
retf
xor
dec
push
sub
sub
cmp
dec
mov
xchg
repz
mov
push
out
sbb
mov
sub
and
xchg
and
inc
ins
inc
sbb
(bad)
ret
fldcw
aas
loope
jb
fdiv
xor
in
cmp
pop
cmp
lds
push
jns
fst
mov
out
int
add
xchg
and
test
dec
xchg
int
pop
retf
push
push
ret
ja
jb
into
sahf
fucomip
ficom
pop
xor
mov
jno
clc
sbb
jne
ja
adc
jg
shl
dec
lock
mov
mov
mov
and
rcr
jge
icebp
out
ret
add
(bad)
sti
sub
mov
xchg
aad
(bad)
sub
xlat
or
and
mov
jmp
ror
int3
addr16
push
xor
push
add
cmps
aaa
loopne
ins
xchg
test
data16
mov
push
push
mov
sahf
arpl
dec
stos
mov
jl
sub
add
mov
inc
(bad)
inc
adc
data16
pop
xor
mov
inc
aas
fbstp
popf
push
dec
mov
mov
xor
mov
retf
and
shl
push
dec
and
or
scas
mov
popa
xor
mov
xchg
xor
adc
clc
pop
cwde
xor
stos
mov
loope
dec
in
mov
fmul
dec
dec
fstp
repz
jmp
mov
mov
mov
xchg
pop
mov
dec
push
adc
dec
test
mov
mov
add
push
push
mov
inc
sub
xor
add
idiv
idiv
test
mov
nop
loop
sub
lahf
xchg
es
repnz
mov
inc
mov
ja
inc
ins
pop
and
pop
rsqrtps
mul
rol
add
retf
repz
mov
pop
mov
push
xchg
sbb
pop
inc
test
pop
loop
push
ret
fstp
sahf
into
retf
fnstcw
shr
pop
das
dec
not
dec
inc
gs
cmc
adc
mov
jbe
pop
mov
push
jo
movs
mov
aas
movs
data16
inc
gs
cmp
sub
dec
push
data16
mov
mov
add
mov
sub
add
inc
dec
test
dec
push
add
xchg
mov
mov
fimul
xchg
sbb
jb
mov
outs
pop
cmp
cs
loope
push
mov
mov
pop
retf
add
outs
xchg
sti
fnstenv
mov
call
loope
cmp
jne
mov
stc
pop
push
cdq
iret
jb
addr16
push
data16
jne
pop
gs
outs
add
or
xchg
ja
clc
xor
in
push
stos
adc
sbb
fucom
add
sbb
pop
mov
and
rcr
retf
ins
js
dec
cmp
sub
lds
mov
sub
and
sub
neg
mov
and
dec
lds
xchg
and
xchg
jecxz
and
lds
pop
xor
or
dec
add
dec
rsqrtps
aaa
adc
and
lea
and
out
loope
pusha
ss
aas
fdivr
dec
dec
mov
inc
imul
daa
gs
inc
and
idiv
in
(bad)
hlt
je
pop
daa
sar
pop
mov
pop
nop
popa
fcomp
mov
adc
or
add
bts
jns
push
rcl
cmc
sub
adc
xchg
sahf
lods
jge
pop
pop
scas
out
push
push
sar
jo
fdivr
add
cwde
lock
mov
jne
call
and
jne
sub
out
das
cli
and
cmp
adc
jl
sbb
pop
cmps
sub
fisttp
mov
out
(bad)
aad
push
mov
loopne
push
(bad)
imul
in
clc
retf
cmp
out
mov
pop
lods
outs
pop
and
xchg
xor
lock
add
xchg
jmp
push
push
xchg
repnz
mov
scas
cdq
jbe
mov
shr
fs
cmp
ret
fstp
call
mov
das
inc
cli
(bad)
scas
xchg
into
adc
xchg
sub
xor
je
lea
xor
cmp
and
mov
scas
arpl
xor
outs
ss
adc
sti
pop
loope
dec
fnsave
jecxz
cli
inc
inc
pop
(bad)
and
push
cmp
sahf
sbb
(bad)
mov
fadd
gs
gs
loopne
movzx
mov
xchg
dec
int
call
std
sbb
xor
xor
mov
sbb
je
xchg
pop
or
lods
cmc
xchg
js
adc
cmc
jns
js
movs
rcr
fadd
dec
in
mov
stos
shr
and
clc
lds
ds
ss
xchg
inc
mov
cmp
push
in
jae
cmp
ret
and
ins
sub
pop
into
rol
xchg
sub
add
sbb
pop
pop
xor
je
push
mov
mov
and
jle
adc
mov
into
add
push
bound
iret
sub
adc
inc
add
shl
arpl
xchg
shl
test
jo
mov
fsub
sbb
bound
sub
sub
fcom
aas
gs
or
dec
fisttp
and
ret
jmp
outs
push
sbb
push
das
xor
mov
or
mov
cmp
fnsave
(bad)
dec
sahf
cld
jb
cmp
sub
cmp
mov
rol
call
(bad)
cmp
ins
lock
mov
push
push
inc
mov
inc
es
jg
(bad)
repz
scas
jle
push
gs
jmp
aaa
xor
jne
sub
sbb
scas
cmps
cld
adc
inc
sbb
in
mov
mov
dec
iret
push
rol
add
aaa
aaa
test
lods
rcr
cs
xchg
std
adc
fxch
lea
aas
dec
je
out
sub
mov
cmp
mov
cmp
inc
pop
(bad)
fsubr
dec
jg
or
jno
fs
gs
and
test
push
dec
loope
push
std
dec
aad
aad
stc
or
cmp
(bad)
lods
mov
or
sbb
sbb
adc
repnz
xchg
sti
test
es
sub
push
xchg
push
mov
lds
fcmovne
outs
mov
retf
and
fisttp
push
pop
fmulp
out
pop
hlt
ror
pop
es
push
das
mov
dec
mov
sub
(bad)
mov
in
(bad)
mov
mov
pop
imul
mov
pop
stos
adc
xchg
out
ror
and
mov
push
jmp
mov
sub
in
push
inc
cld
mov
inc
test
xchg
ror
aad
test
xchg
dec
jge
out
test
xchg
jp
scas
mov
movs
jnp
fnstenv
iret
pop
mov
les
mov
ret
ret
jno
and
mov
mov
or
mov
sbb
adc
rcl
cmp
jp
mov
lahf
mov
cdq
cmp
pop
sub
sbb
in
popa
or
test
mov
mov
mov
bound
push
paddb
popw
jmp
pop
jge
lods
pop
dec
mov
outs
jmp
or
add
fisubr
push
bound
xchg
jbe
ds
adc
lods
call
xchg
jg
mov
cld
adc
out
sbb
push
sar
hlt
je
mov
fbstp
mov
add
xor
sub
jne
(bad)
iret
mov
cmps
mov
sbb
push
add
jae
jb
xchg
js
(bad)
in
xchg
dec
hlt
cmp
mov
fdivr
push
pop
sbb
in
test
aam
xchg
cmp
test
jns
add
pusha
ss
leave
cmps
retf
sbb
loope
iret
jmp
ret
mov
ins
add
(bad)
repz
mov
jnp
push
adc
mov
inc
sub
lea
sar
icebp
mov
or
or
pop
xor
ret
xchg
inc
ret
jg
add
mov
xor
les
pop
das
adc
xchg
ret
loop
jecxz
and
pusha
adc
popa
mov
inc
xchg
inc
mov
pop
bound
mov
sbb
xchg
xchg
mov
sbb
stc
pop
add
mov
test
xchg
jle
add
adc
and
mov
push
test
out
and
cmps
test
xor
pop
and
push
movs
bound
push
and
pminub
pop
xor
popf
push
inc
pop
mov
cmp
dec
cli
pop
mov
mov
xchg
addr16
das
dec
lods
ja
(bad)
and
sub
jno
adc
jle
push
adc
xchg
adc
jg
add
imul
jge
jmp
int3
inc
jne
add
lods
rcl
dec
(bad)
mov
daa
shr
dec
xchg
pushf
(bad)
lods
mov
loopne
or
leave
mov
(bad)
and
mov
cmp
mov
out
dec
clc
mov
push
xchg
aad
jne
nop
in
push
scas
jns
push
dec
adc
daa
cmp
call
add
in
js
fidivr
popw
or
icebp
ror
test
dec
cdq
inc
sub
ins
and
into
retf
push
sub
add
in
shl
sub
lock
iret
dec
cmp
mov
xor
mov
xchg
pop
add
push
xor
test
inc
push
shr
cld
shr
aad
es
xchg
jmp
jmp
(bad)
scas
cmp
fprem
push
int
push
jo
shl
sbb
in
ins
adc
fisttp
jo
aam
in
sbb
ror
aam
or
fisttp
mov
push
mov
adc
add
sbb
and
scas
fdivr
adc
mov
test
stos
gs
fcmovu
push
xor
mov
test
xchg
jae
(bad)
xchg
push
dec
ja
es
in
iret
dec
push
dec
cs
ret
test
cmp
inc
xchg
mov
mov
pop
mov
sub
test
jns
jge
push
push
lods
xchg
shr
inc
lds
pushf
out
xor
pop
mov
inc
xchg
xchg
bound
lahf
out
out
loopne
cmp
popf
fnsave
mov
mov
sub
ret
cli
lahf
bound
mov
outs
sbb
call
dec
pop
inc
mov
or
add
je
ds
jmp
xor
mov
push
fstp
leave
and
std
test
xor
in
jle
cmp
inc
icebp
cmp
jge
dec
or
enter
addr16
jne
cs
mov
push
push
push
push
data16
sbb
sahf
cli
or
rcl
ins
pop
jae
adc
mov
and
jl
jbe
mov
xor
xor
pop
mov
mov
mov
push
ins
add
cld
stos
push
test
popf
dec
or
in
mov
jne
sub
inc
adc
loopne
aaa
jp
sbb
test
xchg
adc
imul
and
jmp
mov
retf
push
xchg
dec
mov
(bad)
push
cmp
add
mov
or
mov
jne
inc
mov
mov
push
jbe
test
push
lods
mov
aam
stos
lods
stos
dec
cmp
dec
inc
xchg
xchg
sti
in
mov
out
call
mov
sub
adc
scas
cld
xchg
push
mov
mov
fs
xor
jl
dec
sub
imul
adc
adc
jmp
ds
(bad)
push
and
push
loop
pop
arpl
and
in
push
or
pop
dec
in
sbb
dec
pop
imul
mov
or
bound
or
jns
pop
lods
ret
lock
xchg
sub
pop
pop
cmp
adc
and
jl
fmul
mov
xor
pop
and
mov
jae
cmp
jge
adc
xchg
(bad)
(bad)
cdq
and
dec
adc
xchg
xor
and
scas
mov
add
in
ins
mov
or
rcr
mov
(bad)
(bad)
jb
xor
pop
shl
dec
xchg
punpckhwd
test
outs
mov
mov
scas
dec
lds
cmp
out
repz
aas
shl
out
xchg
jp
and
mov
or
mov
ss
std
in
aad
imul
mov
dec
popf
loop
mov
or
test
inc
test
cmps
push
jp
xchg
dec
popa
mov
and
(bad)
mov
rcr
cmp
inc
call
inc
fld
ins
and
loope
outs
sub
fcomp
ds
jae
sub
pop
daa
sub
adc
test
jle
xchg
(bad)
or
push
add
out
push
inc
xchg
movs
adc
out
push
jmp
mov
into
enter
xchg
or
mov
outs
jecxz
mov
xor
adc
xor
jg
xchg
adc
dec
mov
pop
jae
mov
mov
jns
cli
cmp
shl
nop
lahf
push
pop
sbb
les
push
add
push
lods
repz
mov
repz
mov
stos
ret
sbb
or
add
nop
cmp
nop
sar
sbb
call
fisttp
inc
mov
les
outs
fwait
xor
retf
dec
movs
sbb
xchg
pop
add
adc
sbb
pop
pop
shl
test
mov
xor
dec
pop
cmps
into
pop
aam
add
out
ret
inc
adc
lahf
xchg
loop
daa
pop
jp
(bad)
jge
add
jecxz
xor
mov
(bad)
fucom
xor
mov
adc
in
ret
mov
out
pop
sbb
mov
pop
dec
(bad)
(bad)
into
aad
jne
imul
xchg
aaa
dec
jb
inc
dec
cmp
sbb
jge
cli
pop
outs
scas
not
push
(bad)
mov
popa
int3
push
sti
cmp
inc
pushf
not
pop
jl
fsub
outs
rol
add
dec
push
adc
into
pop
mov
lds
jns
pop
xchg
mov
fsubr
pop
adc
mov
int3
hlt
into
pop
sub
and
mov
leave
sub
sbb
cdq
(bad)
cmp
outs
dec
mov
int3
out
adc
icebp
add
adc
jb
sbb
(bad)
and
sub
push
je
int3
(bad)
mov
dec
stc
sti
and
jmp
mov
xchg
mov
and
arpl
mov
hlt
and
jae
xchg
add
push
mov
faddp
inc
ss
out
inc
pop
test
lods
pop
inc
add
cmp
dec
inc
jp
sbb
xchg
pop
or
dec
imul
mov
clc
iret
out
mov
fisub
xor
shr
repnz
push
jae
aam
lods
inc
js
mov
std
stc
mov
xlat
jno
sub
sar
fidivr
sbb
call
lods
enter
mov
xchg
lods
sub
lods
jmp
jmp
repnz
cmp
jle
test
jmp
repz
xor
out
fisub
mov
ja
cld
(bad)
mov
push
cmp
sbb
sub
pushf
and
je
cmps
into
fcmovnbe
add
sti
(bad)
pushf
pushf
sar
jae
mov
jecxz
mov
retf
enter
dec
mov
push
scas
cmp
es
jmp
bound
cli
loop
add
out
cmp
add
mov
int3
outs
jb
stc
dec
daa
cmp
out
inc
sub
push
lahf
xchg
mov
ds
jmp
inc
sbb
mov
sbb
mov
cld
es
into
and
neg
mov
(bad)
es
and
mov
pop
ss
jne
imul
in
add
mov
pop
sub
xchg
dec
push
je
xchg
sub
add
scas
movs
sub
test
pop
and
(bad)
jae
jmp
cmp
push
push
cmp
jb
mov
jg
les
and
xchg
out
test
fisubr
push
jp
xor
into
mov
lahf
repnz
sbb
xchg
mov
(bad)
mov
(bad)
vcvtdq2ps
fwait
and
jp
movs
sbb
sbb
mov
in
daa
pop
mov
mov
movs
sub
ins
cmp
xchg
ins
mov
js
xchg
ds
xchg
pop
scas
std
dec
mov
test
xchg
dec
xor
mov
call
mov
xor
hlt
jb
adc
cs
push
and
call
dec
mov
xor
mov
stos
add
(bad)
not
cli
pop
retf
(bad)
rol
cli
das
hlt
pushf
sub
hlt
fwait
shl
jae
std
mov
lahf
push
inc
test
inc
(bad)
adc
or
push
inc
dec
pop
jns
jl
pop
or
or
sbb
xor
in
cmove
rol
xchg
sahf
xor
shl
pop
xchg
cld
add
scas
sar
jno
das
leave
mov
jnp
enter
pop
loope
lea
mov
aas
xlat
xor
xor
adc
fwait
cwde
loopne
ins
adc
add
cmp
and
inc
adc
dec
xchg
mov
pop
xor
icebp
rcr
dec
popa
ret
out
jmp
test
xchg
call
xor
mov
pop
push
jo
lahf
aad
lds
sub
es
imul
fidiv
(bad)
push
add
xor
push
aas
sbb
mov
test
push
xchg
in
push
pcmpgtd
jno
js
jl
into
jmp
inc
inc
pop
mov
retf
fiadd
push
xchg
cmp
adc
lods
and
jmp
clc
mov
jno
fisubr
out
outs
scas
inc
jl
inc
(bad)
jl
jb
mov
xchg
push
sub
lods
xor
fcomp
dec
adc
sub
sti
pop
and
xchg
retf
sti
pop
jns
(bad)
call
jge
icebp
(bad)
mov
dec
icebp
cmps
addr16
loopne
sub
dec
xchg
stos
and
outs
adc
scas
ss
repz
cdq
xchg
add
test
push
cmp
lods
ds
sar
xor
fild
aad
cmp
mov
cdq
mov
pop
(bad)
inc
pop
cs
push
fdivr
dec
out
fs
outs
and
out
inc
loop
mov
pusha
cwde
fdiv
mov
pusha
xchg
push
aas
int
xchg
mov
outs
mov
push
movs
sti
sti
(bad)
fs
in
add
cdq
push
repnz
inc
push
shl
pop
loopne
and
sbb
cli
mov
popf
and
and
adc
(bad)
xlat
ja
xor
mov
ficom
ficomp
lock
retf
cmc
sbb
psubsb
push
pushf
push
push
push
aad
div
ds
inc
inc
sbb
sbb
mov
ror
adc
xchg
jp
lea
sub
inc
mov
push
lea
rcr
sbb
mov
fwait
inc
lods
cmc
mov
ficom
push
cmp
jne
pop
(bad)
jmp
lods
cmp
pop
fs
add
cli
push
(bad)
fldcw
xchg
jo
dec
stc
mov
sbb
jmp
out
les
sbb
mov
test
das
push
pop
hlt
pop
sti
push
not
sub
repnz
enter
jecxz
jae
ret
or
imul
fild
jp
add
jne
mov
cs
mov
and
icebp
and
adc
mov
inc
inc
ss
jne
call
out
mov
arpl
jge
dec
cmps
mov
sahf
outs
sub
jmp
dec
xchg
inc
aaa
inc
dec
arpl
loope
jg
aas
xchg
retf
pop
enter
jmp
fst
rcl
sub
out
into
popf
jae
adc
ror
add
pop
or
inc
pop
mov
ror
repz
inc
xor
inc
mov
xchg
pop
fadd
fst
les
mov
loop
mov
mov
xor
daa
adc
or
retf
mov
mov
stos
mov
or
daa
les
lea
leave
xlat
sti
jae
aad
adc
and
jg
or
push
mov
cmp
cwde
dec
data16
retf
pop
cmc
and
lds
and
je
ss
xor
xor
retf
cmp
and
dec
arpl
mov
ror
mov
rcr
jecxz
dec
lods
stos
dec
in
clc
mov
or
retf
dec
mov
scas
dec
cmps
(bad)
retf
mov
inc
movs
sbb
add
iret
int
xchg
js
cmp
test
jno
js
cmc
mov
scas
dec
imul
shl
push
fld
popa
inc
lahf
dec
(bad)
enter
adc
cmp
mov
ds
cmp
pushf
mov
pop
push
adc
sar
stc
sbb
imul
or
push
aad
fcom
leave
hlt
mov
(bad)
or
jbe
adc
jle
rcr
popa
popa
and
inc
push
clc
push
push
mov
xor
fisubr
in
mov
adc
mov
pop
mov
cdq
(bad)
leave
mov
ret
scas
and
jge
lea
or
js
into
dec
into
push
in
pop
mov
xlat
push
retf
clc
mov
repz
call
outs
test
pop
cmps
out
gs
mov
and
push
div
mov
inc
xor
sahf
test
mov
scas
and
adc
call
movs
cmp
fiadd
(bad)
fnsave
sub
scas
xor
sbb
sub
jne
xor
or
mov
inc
pop
or
xchg
and
and
or
mov
cdq
mov
popa
out
adc
aad
mov
xchg
sar
add
sub
inc
fxch
pop
and
in
shl
add
aam
fidivr
ret
inc
dec
aad
out
xor
jg
test
sbb
pusha
xchg
test
adc
push
and
cmp
dec
test
inc
je
aas
imul
(bad)
push
inc
stos
aam
push
shr
mov
sbb
cmp
into
mul
push
lds
cld
mov
leave
imul
andps
shld
jns
push
outs
retf
adc
xor
sub
sbb
or
mov
(bad)
stos
clc
mov
or
and
mov
loopne
cmp
shr
inc
fwait
stos
lahf
mov
add
or
and
mov
data16
fst
(bad)
popf
test
pop
jnp
fld
xchg
pop
loope
jmp
dec
iret
pusha
xchg
inc
push
imul
loop
jns
mov
ins
inc
sahf
addr16
(bad)
inc
xchg
int
dec
add
jns
inc
sbb
fsub
cli
lods
enter
movs
push
xor
jg
jb
imul
fild
int
mov
addr16
popf
test
rcl
xlat
loopne
int
rcl
inc
fcom
push
jo
test
jmp
mov
mov
or
sbb
dec
push
movs
xor
dec
je
and
bound
shr
cmp
sbb
and
ins
loopne
mov
pusha
xor
(bad)
push
cmps
loope
rol
gs
sbb
cmp
xchg
out
and
lods
lahf
inc
int3
jl
rcl
pop
push
pop
je
xlat
mov
inc
sub
push
out
dec
(bad)
mul
sub
cmps
das
pop
ins
(bad)
mov
mov
nop
adc
aas
mov
mov
mov
mov
add
dec
movs
mov
cmc
pop
mov
jb
add
xchg
aas
cli
rcr
sbb
cmp
or
mov
(bad)
adc
sbb
xchg
xchg
es
sahf
sub
sbb
mov
and
pop
popa
jns
adc
mov
and
jmp
mov
jge
loopne
xor
xchg
(bad)
cmp
fisub
into
pop
dec
jno
wrmsr
test
mov
push
sar
cmp
sub
push
ins
mov
and
jle
inc
jo
jns
les
(bad)
jp
rol
adc
push
stc
sub
rcl
leave
scas
inc
cmps
mov
mov
in
call
cdq
or
les
mov
outs
adc
push
les
sar
iret
xchg
cmps
push
sahf
inc
inc
ror
ret
lea
cmp
loope
add
data16
pop
pusha
pop
retf
cmps
leave
aaa
mov
loopne
xchg
inc
xor
bound
add
push
pop
loopne
push
mov
push
mov
push
mov
fstenv
pop
add
dec
pop
pop
pop
aam
dec
jb
mov
inc
push
pslld
jb
push
pop
mul
add
xchg
jecxz
pushf
mov
or
jne
push
and
pop
cmps
push
movs
ret
push
or
jns
cmps
jg
xchg
rol
xor
or
cs
push
cmps
pop
stc
mov
ds
ds
inc
stos
pop
data16
or
leave
cli
int
dec
adc
dec
icebp
enter
int
add
adc
jg
mov
cli
inc
and
push
and
and
repnz
pop
push
fucom
jecxz
popa
addr16
es
mov
mov
adc
or
gs
or
cmovno
out
mov
(bad)
shl
pop
cld
mov
dec
(bad)
mul
ins
adc
jns
mov
or
sub
ins
mov
xor
sub
jnp
in
inc
retf
(bad)
in
mov
or
mov
and
cmp
mov
popf
xor
out
add
pop
push
mov
ss
sahf
xlat
dec
cmps
adc
and
cmp
mov
arpl
ret
jb
enter
or
adc
sbb
in
cmp
push
add
(bad)
jl
das
dec
aaa
cmp
mov
pop
jle
adc
push
(bad)
aas
aam
outs
pop
dec
or
out
push
(bad)
cld
push
daa
sub
add
adc
pop
call
cmp
cmp
pushf
pop
mov
imul
aad
mov
pop
xor
out
or
mov
dec
mov
je
xchg
sti
call
or
sub
sbb
or
cli
(bad)
mov
cwde
pushf
xor
adc
push
sbb
inc
cli
jns
(bad)
push
mov
jae
xchg
jecxz
loopne
push
mov
rcr
fst
dec
mov
mov
push
imul
jb
loop
cli
test
push
shr
sub
mov
mov
sub
add
(bad)
int
inc
scas
pop
fild
or
icebp
push
ret
fild
xchg
jo
and
pusha
inc
xor
dec
fistp
mov
sub
or
jecxz
mov
xchg
lds
jmp
or
movs
and
popa
xchg
sbb
pop
push
(bad)
or
ja
vpavgw
sub
mov
imul
jmp
mov
ret
mov
mov
xlat
retf
or
dec
xor
push
mov
jge
xchg
mov
mov
cmp
jns
mov
sub
xor
retf
mov
fcmovu
cmp
aam
mov
pop
rcpps
add
sbb
xor
xor
jp
cmp
fild
clc
sub
ja
scas
outs
xor
shl
icebp
or
dec
mov
xor
mov
mov
out
sub
inc
or
(bad)
cli
test
ss
mov
fidivr
lods
movs
xor
outs
inc
xchg
pushf
out
(bad)
cld
js
jle
out
jno
arpl
mov
mov
xchg
inc
push
out
lock
fisttp
into
mov
js
jle
pop
outs
popf
mov
shl
mov
hlt
fbstp
jns
into
fsubr
inc
pop
jp
bound
mov
inc
aaa
lods
popa
(bad)
adc
sbb
push
mov
sbb
in
out
aas
outs
cmps
pop
scas
sub
mov
(bad)
(bad)
in
(bad)
xchg
mov
mov
jb
cmp
inc
(bad)
stos
cmp
or
jnp
mov
movs
and
push
(bad)
and
push
sub
jge
and
jmp
xor
mov
adc
adc
stos
ins
push
imul
and
mov
or
push
cdq
and
cli
into
sub
xchg
jmp
jno
mov
cmp
add
les
es
fst
xchg
dec
bound
mov
sub
push
call
ret
adc
out
sahf
inc
xor
mov
std
xchg
fwait
out
mov
pop
rcr
aam
dec
dec
mov
fs
loopne
jmp
adc
sahf
cmp
jmp
mov
into
xchg
repz
mov
es
dec
sub
lahf
popa
cmp
div
or
sub
in
popf
cmp
pop
mov
sub
and
push
or
(bad)
xor
call
xor
sti
mov
mov
pop
pop
push
enter
dec
out
loop
stos
jns
nop
popf
shl
or
sbb
fsub
cmp
cmp
push
pusha
mov
jg
fsincos
or
mov
jle
xchg
fsubrp
add
gs
enter
mov
or
pusha
test
jne
jne
scas
ret
jbe
or
inc
scas
loop
daa
push
loope
inc
and
es
lahf
test
xor
add
ret
jecxz
les
jns
add
inc
mov
jno
retf
lea
jg
jne
xor
inc
mov
fisub
sub
mov
nop
jmp
rcr
sbb
jecxz
arpl
xchg
fbstp
xchg
hlt
sbb
mov
je
mov
adc
test
and
test
push
scas
cmp
pop
outs
push
mov
adc
xchg
out
iret
movs
(bad)
sbb
xchg
mov
mov
cdq
int
sbb
and
cld
and
hlt
ds
ins
pop
leave
jg
mov
pusha
cmp
dec
jl
mov
adc
test
cmc
ror
adc
aaa
inc
mov
xchg
mov
mov
push
inc
mov
std
pop
imul
or
xor
pushf
sub
out
cmp
aam
int3
int3
(bad)
nop
ins
ja
ret
icebp
rcl
sbb
and
(bad)
jge
sar
idiv
pop
jae
jnp
fidivr
jge
sbb
data16
out
mov
fwait
mov
pusha
leave
pop
neg
dec
out
jmp
jmp
xor
ins
aas
mov
mov
stos
jp
cwde
fdivr
push
mov
mov
push
or
cmp
aad
pop
add
call
iret
push
cmp
out
push
add
add
sub
outs
fild
xchg
imul
in
mov
fwait
dec
std
dec
ja
pop
jmp
push
push
(bad)
out
ds
dec
pop
out
jmp
arpl
popf
nop
add
xchg
and
pushf
call
add
pop
in
cmps
sub
sbb
jne
sbb
les
sar
(bad)
fnstenv
mov
jge
aaa
retf
or
ins
mov
mov
fisttp
adc
adc
sbb
sub
loopne
add
xchg
push
(bad)
mov
sub
jecxz
add
or
sahf
test
xchg
loope
jecxz
xor
leave
xchg
outs
fmul
inc
jno
out
ror
and
lods
mov
xchg
push
bound
inc
xor
pop
aaa
adc
iret
mov
mov
dec
xchg
movs
popf
ss
jmp
into
aaa
ror
pop
pop
scas
push
mov
cdq
xor
and
jne
xor
leave
aam
add
retf
lock
jmp
(bad)
cmp
icebp
xchg
repz
xor
mov
xor
cmps
mov
(bad)
pop
and
jmp
call
jbe
add
pop
xor
dec
xchg
jmp
adc
sbb
pusha
es
(bad)
pop
int3
les
inc
addr16
mov
or
or
and
pcmpgtb
push
cmp
jp
pop
cwde
clc
pop
adc
mov
mov
retf
scas
scas
int3
push
clc
ret
dec
dec
pop
retf
popa
push
cmp
imul
sahf
dec
repnz
push
and
das
aaa
dec
jne
sbb
imul
int
xor
xlat
push
les
dec
mov
pop
jecxz
inc
fdivp
inc
loopne
and
push
xchg
jge
pop
jae
jmp
fisttp
lods
mov
in
(bad)
imul
das
icebp
xor
or
mov
push
pop
xchg
daa
call
ret
push
add
es
ret
and
fldcw
iret
mov
push
fwait
ret
sub
sbb
icebp
js
retf
push
cmp
pop
js
in
sbb
std
and
and
loopne
dec
sbb
daa
fisttp
adc
sahf
sbb
inc
popa
mov
jp
rcr
cs
mov
jno
sahf
jge
(bad)
fdivr
mov
dec
imul
test
idiv
or
push
std
shl
aad
mov
or
pop
adc
retf
pop
add
outs
jg
or
(bad)
int3
pop
jnp
xor
aad
jnp
fisubr
push
jb
shl
and
xchg
mov
mov
rcr
mov
xchg
cmp
inc
call
shr
xchg
inc
xchg
jmp
mov
outs
pushf
iret
or
xor
jecxz
xor
std
jp
lahf
fucom
cmps
jp
or
xor
jmp
shl
je
fbstp
xor
js
sbb
jmp
loopne
jb
into
sub
lods
(bad)
pop
lahf
(bad)
clc
dec
popa
sahf
or
ins
mov
xchg
fadd
in
mov
std
es
push
fucomip
mov
mov
pop
lods
scas
pop
jne
and
loopne
sub
xor
adc
pop
mov
mov
pushf
or
(bad)
out
jnp
jmp
pop
icebp
xor
imul
fwait
sar
sub
inc
call
xor
not
int
fild
mov
and
imul
hlt
mov
mov
pusha
jns
mov
mov
out
mov
fidivr
(bad)
sahf
cmp
stos
cdq
sti
das
or
ss
lock
mov
inc
mov
in
pop
mov
jecxz
or
sub
shr
jo
pop
pop
mov
inc
mov
and
jl
push
mov
ret
shl
cmps
(bad)
imul
mov
pop
aam
mov
mov
int3
(bad)
jmp
jno
pushf
xchg
in
je
repz
mov
leave
mov
xchg
int3
mov
xor
push
dec
jne
shl
push
sub
pop
leave
call
test
mov
cmp
dec
jp
xlat
push
mov
and
sub
sbb
retf
push
int3
(bad)
aam
adc
adc
jb
jmp
mov
ror
sti
push
push
ja
fsubr
icebp
adc
cli
and
dec
pop
ffree
imul
push
or
cmp
fdivr
and
(bad)
stc
mov
xchg
dec
or
arpl
adc
push
jbe
jb
cmp
je
xchg
loopne
adc
xchg
(bad)
and
xor
xchg
and
data16
ds
pushf
out
loopne
mov
js
stc
xchg
pop
jp
repz
jns
sub
(bad)
mov
in
mov
xor
mov
pop
push
inc
dec
retw
xchg
icebp
push
test
dec
je
ja
(bad)
mov
jno
loopne
fst
add
inc
fst
call
bound
enter
xor
sbb
clc
add
mov
daa
mov
push
dec
inc
es
and
imul
cmp
pop
mov
inc
xchg
(bad)
out
or
rcr
xor
mov
fisub
popa
div
adc
push
lahf
mov
lds
ja
dec
dec
and
mov
xchg
int
xchg
jle
push
into
scas
mov
and
jl
das
nop
test
test
or
and
retf
or
pop
and
pop
sub
pop
jne
pop
add
pop
pmuludq
dec
movs
sar
enter
ins
push
stos
les
stc
jb
movs
push
std
(bad)
cmps
outs
in
mov
int3
dec
aam
pop
popa
nop
out
mov
leave
daa
mov
fldcw
iret
shl
out
dec
cmc
lea
shr
pop
out
jmp
loopne
loope
fs
push
ror
or
sbb
add
cld
xchg
aas
dec
inc
pop
in
jnp
and
leave
xor
(bad)
test
std
mov
mov
xchg
xor
sub
xlat
arpl
cmps
push
arpl
adc
ss
mov
mov
add
idiv
mov
js
das
jbe
ret
test
pop
movs
jnp
sub
fbstp
xor
shl
mov
enter
iret
cli
fild
or
mov
stc
addr16
cmp
xchg
fwait
push
(bad)
je
nop
test
xchg
jl
jge
and
or
or
stos
dec
sub
mov
inc
arpl
retf
fs
xchg
lea
cmps
das
xor
adc
ds
shr
jae
not
sbb
out
inc
adc
cmps
stos
(bad)
aas
dec
jb
shr
ret
fist
pop
rol
jge
mov
add
scas
push
pushf
jbe
sub
dec
sar
or
cdq
into
push
push
jmp
enter
fwait
je
jns
(bad)
movs
and
xor
es
xchg
xor
jmp
dec
cld
ret
xor
and
cmp
out
push
les
xor
inc
sub
xor
mov
cmps
aam
rcl
inc
sbb
dec
pop
xor
cmc
imul
xchg
cmp
cwde
xchg
mov
inc
mov
sbb
push
pusha
sbb
cdq
jnp
push
xchg
pop
add
rol
cmove
call
test
pop
push
push
stos
pop
outs
add
mov
enter
lds
mov
dec
mov
push
or
dec
pop
jecxz
arpl
cmp
pop
jns
jge
vcmpeq_uspd
leave
xchg
push
sbb
repz
or
pop
push
jge
inc
cmps
xchg
jbe
gs
and
shl
pop
mov
xchg
mov
bound
and
xchg
ret
mov
stos
out
jns
cld
sbb
or
lods
xchg
and
nop
call
fcomp
shl
adc
cmp
fcom
cmp
(bad)
mov
fmul
fidivr
popf
sti
ins
aad
test
dec
loopne
or
(bad)
dec
les
repz
add
xor
mov
loopne
sbb
add
pop
rol
into
push
cs
push
pusha
or
in
outs
icebp
(bad)
lea
dec
in
and
jecxz
int
fdiv
sbb
retf
call
outs
stos
adc
push
(bad)
inc
push
jg
les
sub
je
jecxz
inc
jmp
call
inc
xchg
adc
gs
push
mov
sbb
shl
scas
pop
loope
sub
fs
dec
mov
call
xor
repnz
dec
xchg
jbe
sbb
cmp
pop
cs
loope
and
arpl
inc
in
idiv
add
out
mov
add
xor
gs
adc
sti
dec
xor
cmp
sbb
scas
mov
cmp
mov
adc
iret
add
loope
std
sub
dec
inc
es
cmc
jb
addr16
push
dec
inc
mov
jns
dec
push
in
stos
test
inc
add
icebp
retf
fisttp
test
imul
inc
xor
jb
cmp
test
movs
xchg
pushf
fistp
jmp
and
mov
sbb
popf
aam
int3
cmps
sti
es
sbb
fdiv
std
mov
push
push
xchg
stc
sbb
jbe
bound
hlt
pushf
or
retw
pop
jp
enter
test
push
(bad)
(bad)
xor
mov
jecxz
adc
add
add
inc
push
daa
push
sub
push
fdivr
mov
(bad)
xchg
mov
in
test
inc
movs
mov
outs
ja
jb
pop
sub
mov
scas
jb
out
push
xchg
jl
jns
outs
adc
stos
out
pop
out
jb
popf
in
daa
cmps
jecxz
cli
enter
push
xor
mov
ret
jmp
and
loopne
xor
out
mov
xor
call
js
mov
outs
cmp
cwde
mov
sbb
repnz
cdq
push
leave
mov
push
iret
sar
cdq
mov
push
(bad)
imul
mov
adc
xchg
inc
and
jp
ins
sub
sbb
adc
jmp
xor
xchg
pop
jmp
pop
pop
aam
fs
pop
adc
push
ret
xchg
popa
aad
xchg
inc
ds
dec
outs
leave
xchg
jae
cmp
mov
adc
adc
jle
adc
repz
cld
sbb
sahf
repz
xchg
cs
shl
adc
dec
mov
outs
fwait
push
sbb
mov
mov
sbb
mov
call
data16
sbb
fiadd
xor
pop
adc
push
iret
jns
test
cli
mov
mov
pop
add
cmps
xor
aas
stc
mov
push
push
loopne
cmp
sbb
fidiv
or
mov
inc
xchg
add
jg
jns
and
jnp
imul
clc
gs
push
xchg
sbb
fiadd
jge
int3
jecxz
imul
jl
std
pop
fisttp
call
shl
push
mov
test
sub
test
sbb
je
mov
leave
cmp
scas
xor
inc
fwait
sub
int
hlt
ja
or
cdq
mov
rep
pop
cmps
inc
(bad)
call
aas
not
sahf
popf
jne
sub
fst
loopne
pop
sbb
xor
jge
fimul
xor
mov
sub
mov
xor
push
xchg
sar
in
sub
dec
sti
inc
adc
mov
leave
sbb
jnp
ins
daa
pusha
push
call
jecxz
mov
xchg
sub
cmp
pop
out
lahf
inc
fsub
push
jno
pusha
int
cmp
enter
call
push
ss
dec
pop
pop
or
xor
dec
pop
ja
shl
repz
(bad)
jno
adc
mov
and
rcl
retf
or
dec
push
int3
lahf
add
repnz
or
inc
in
cmps
outs
dec
in
dec
dec
repz
popa
dec
popa
popa
ins
movs
out
push
and
fs
inc
adc
add
mov
jbe
push
xchg
push
xchg
xor
int3
xchg
push
js
pop
imul
ss
(bad)
lock
dec
cdq
sub
outs
pop
sub
shl
gs
push
cmp
push
mov
fadd
mov
push
xchg
fnsave
push
cmc
adc
jb
jae
sbb
cmp
jp
dec
aad
mov
push
fbld
push
pop
xor
pop
sub
loope
mov
popa
mov
imul
pop
xchg
mov
shr
cmc
mov
mov
fmul
idiv
xor
imul
fsub
arpl
jns
xchg
push
retf
fwait
xchg
or
adc
gs
or
sbb
jle
imul
push
jo
sbb
push
cmps
jp
(bad)
adc
ror
xchg
test
and
pop
test
cmp
enter
hlt
rcl
(bad)
movs
mov
daa
push
dec
cs
xchg
jg
gs
jne
and
xchg
addr16
test
mov
fisub
cmps
or
stc
xchg
mov
xor
out
sub
sub
push
cmc
cmps
imul
push
jnp
cmp
mov
add
push
push
mov
and
ss
ja
jno
mov
test
pushw
neg
mov
out
mov
add
inc
out
sub
hlt
xchg
jbe
cmps
icebp
cmp
pop
imul
enter
call
imul
stos
not
jnp
loop
pop
adc
push
cmp
fisub
jmp
adc
repz
add
call
repnz
adc
sub
(bad)
dec
push
fsubr
adc
call
xor
mov
and
jne
inc
rcl
adc
rol
fsubr
ss
push
pushf
ret
and
mov
in
mov
jle
inc
mov
std
mov
mov
pop
pop
in
push
(bad)
xchg
(bad)
jp
pop
clc
pop
mov
mov
das
int
jmp
lahf
inc
jl
jno
jecxz
fcmovb
adc
jno
xor
fwait
std
loope
pushf
cdq
sub
xchg
pop
fs
into
mov
mov
pop
mov
es
jmp
jb
inc
or
mov
sbb
mov
pop
out
fsubr
pop
fist
iret
xor
in
sar
cmps
into
push
xchg
push
div
mov
hlt
int
mov
nop
in
call
movs
cwde
icebp
dec
shr
jno
pop
mov
jb
js
fwait
xor
dec
ret
out
es
test
or
iret
in
jo
push
in
(bad)
hlt
xlat
cmp
scas
idiv
pop
in
fs
sbb
aaa
int3
pop
out
sbb
push
in
push
mov
pusha
repz
mov
(bad)
and
fst
mov
in
aam
sbb
sub
sub
push
hlt
adc
or
gs
mov
cmp
fcom
and
dec
xor
in
pusha
out
lea
sbb
fidivr
adc
push
dec
inc
cmc
cmps
out
sbb
mov
cmp
xor
mov
daa
mov
lds
push
in
dec
fs
mov
sbb
fdivr
push
push
jae
mov
addr16
ins
cmps
call
cdq
(bad)
into
out
pop
add
inc
cmps
add
cmp
(bad)
enter
ret
loopne
push
jno
pop
mov
ds
lahf
idiv
jno
movs
cmps
push
jmp
xchg
or
xchg
push
add
mov
popa
lock
jge
test
sar
pushf
and
call
ja
and
push
sub
and
std
or
les
pop
pop
bound
and
adc
jno
fcmovbe
retf
in
out
xlat
and
inc
push
out
and
outs
popw
ret
sub
out
out
rcr
scas
mov
(bad)
pop
outs
mov
vpsubb
test
adc
in
jle
cmp
adc
ds
lahf
dec
adc
dec
jge
leave
jecxz
test
es
push
lea
xor
sub
dec
jecxz
mov
push
inc
dec
sbb
xor
jecxz
mov
pop
daa
inc
leave
fldenv
pop
inc
outs
pop
inc
aaa
icebp
sub
out
jbe
data16
lods
and
(bad)
in
add
(bad)
cmps
test
loop
bound
jge
scas
sbb
call
dec
inc
ret
jle
mov
cmp
in
and
jle
aam
ret
jbe
div
jg
test
aad
mov
xchg
(bad)
jmp
mov
rcl
inc
pop
mov
test
mov
enter
push
mov
outs
jecxz
dec
test
jge
dec
sub
(bad)
loop
(bad)
ins
mov
dec
xchg
inc
mov
mov
lods
retf
mov
fsub
ror
cmp
xchg
dec
jl
call
popf
sbb
movs
mov
xlat
push
out
test
bound
dec
push
sub
and
arpl
jne
aad
push
push
xchg
repz
xor
or
adc
add
inc
stos
call
ret
jl
cmps
mov
jl
cdq
add
sub
sbb
jb
jns
pop
jo
xor
sbb
xor
shl
dec
push
popf
sti
sar
popf
adc
and
comiss
ret
mov
cmp
hlt
rol
nop
movs
imul
push
leave
mov
cmp
mov
sub
ret
and
pop
xchg
pop
xchg
jae
push
cmp
mov
cmps
mov
sti
and
loop
mov
mov
adc
scas
add
lahf
je
xor
sub
push
stos
jb
pop
popf
pop
fsubrp
sub
xor
xchg
fstp
loopne
xchg
push
inc
xchg
add
xchg
fcomp
mov
jmp
outs
(bad)
test
cmp
xchg
rcl
aaa
mov
xor
shr
popa
clc
clc
lods
dec
movs
dec
dec
inc
fs
xchg
sti
fisub
enter
pop
movs
mov
push
fisttp
xchg
sbb
mov
call
icebp
xor
aam
cmps
je
cmp
dec
mov
jae
inc
inc
cdq
fsub
fwait
sub
into
and
cmps
sahf
jo
xor
hlt
dec
lock
sar
ins
loopne
and
jmp
aas
xor
inc
jp
or
adc
ret
adc
gs
ror
(bad)
rol
mov
xor
fst
(bad)
mov
or
(bad)
xchg
mov
adc
jmp
js
xor
(bad)
out
xor
int3
or
push
lahf
aaa
pop
clc
pop
out
mov
cwde
bound
mov
outs
call
aam
or
neg
fistp
sbb
jp
jnp
jmp
sar
pop
inc
sbb
pop
mov
jae
adc
push
in
adc
dec
fdiv
push
mov
xchg
push
xor
sbb
adc
mov
xor
outs
or
jo
pop
pop
pop
ror
mov
mov
lds
sub
sbb
into
jmp
fdiv
mov
in
lock
xor
dec
inc
xor
sar
or
xchg
lods
sub
shl
xor
pop
xchg
mov
movs
push
mov
adc
dec
adc
es
jbe
and
dec
popf
mov
and
data16
sti
stos
mov
jg
sbb
push
stos
xor
sbb
cmc
jmp
ret
scas
push
add
retf
jge
xchg
iret
sbb
int
pushf
out
sahf
add
dec
xlat
pop
(bad)
enter
popa
repnz
pop
push
outs
stc
sbb
or
lea
(bad)
fstp
adc
mov
movs
mov
jne
cwde
leave
lods
fisubr
les
pop
enter
mov
into
ja
lgs
mov
and
test
add
leave
mov
jecxz
leave
xor
mov
push
lods
add
pop
push
inc
lock
jle
nop
add
movs
rcl
mov
cli
cmps
aas
inc
out
jmp
addr16
fist
sub
jp
daa
inc
sbb
and
(bad)
or
mov
pop
jecxz
icebp
dec
dec
stos
stc
add
shr
cs
push
cmp
inc
adc
or
xchg
lock
das
cmps
neg
inc
xchg
(bad)
bound
sub
arpl
cwde
icebp
ins
xor
adc
test
jmp
rcl
mov
mov
sbb
hlt
(bad)
and
sar
adc
fadd
inc
retf
addr16
dec
xor
cmp
pop
cmps
sub
add
push
ins
neg
pop
mov
repnz
retf
pop
in
adc
jb
inc
(bad)
imul
fnstenv
sbb
out
jae
ret
arpl
loope
and
retf
enter
outs
popf
mov
(bad)
mov
(bad)
popf
popf
mov
push
jmp
lods
cmp
loope
das
mov
int3
mov
pop
stos
mov
adc
or
and
sahf
xchg
xchg
mov
repz
stc
jnp
sub
enter
dec
and
add
bound
add
repz
shl
cmp
pop
rcr
jno
cld
sub
xchg
out
int3
inc
mov
xchg
mov
dec
nop
jg
sbb
out
or
mov
scas
ror
push
cmp
jp
push
movs
mov
mov
scas
repz
inc
add
sar
fiadd
cmp
inc
test
adc
sar
cdq
or
mov
or
push
push
lock
shr
arpl
push
sbb
test
xor
sbb
enter
add
xchg
mov
jno
pushf
jmp
nop
cwde
add
or
ds
cdq
adc
lahf
aam
unpckhps
mov
fs
mov
rcl
inc
stc
and
or
pop
popf
xchg
xor
movs
clc
test
rcl
(bad)
aas
add
scas
jl
lods
mov
push
adc
gs
iret
push
mov
jmp
cmc
dec
adc
mov
inc
sub
cmps
push
cmp
std
cwde
inc
retf
aaa
out
mov
mov
push
push
xor
pop
test
and
inc
or
push
addr16
mov
pop
xchg
pop
jl
mov
(bad)
lods
jp
push
add
loop
xchg
(bad)
mov
hlt
sbb
sbb
xor
and
jge
test
push
fwait
add
sti
scas
push
xchg
shr
pusha
sar
scas
leave
cmp
outs
jmp
mov
push
test
or
cmp
inc
icebp
dec
lds
imul
inc
leave
mul
jno
or
inc
inc
ds
pop
rol
shl
inc
int
push
pop
es
mov
iret
jmp
adc
ins
mov
sub
sub
mov
or
push
mov
xor
lods
cmp
test
mov
jb
test
lea
dec
dec
jnp
sub
call
sub
pop
mov
push
in
rcr
push
and
or
xchg
outs
jmp
push
cdq
xor
fadd
ret
in
rcl
adc
push
rol
loopne
int3
es
dec
cmp
repnz
xchg
fdivr
push
lock
scas
int
sub
push
int3
mov
mov
dec
mov
push
(bad)
adc
pop
mov
mov
(bad)
pop
cli
adc
sub
movs
jno
test
pop
std
outs
jb
mov
shr
sahf
adc
popf
test
xchg
outs
mov
cmps
cmp
jo
shl
(bad)
fdiv
jae
pop
xchg
(bad)
ja
adc
cmp
inc
test
ins
out
dec
icebp
scas
rol
xchg
dec
cmp
jnp
push
sahf
jg
or
(bad)
cmp
es
xchg
pop
out
je
cld
repz
into
sub
and
lds
inc
xor
mov
(bad)
mov
inc
mov
jg
cwde
hlt
(bad)
mov
pop
out
lahf
pop
dec
cmp
fwait
cmp
and
imul
(bad)
cld
dec
fisttp
cdq
stc
jmp
lds
xor
lea
cmp
shr
mov
iret
jle
sub
aas
lods
xor
inc
xchg
xor
add
fimul
mov
cmps
jae
outs
sbb
retf
rcl
pop
lahf
dec
mov
imul
add
cmp
mov
test
mov
dec
push
lods
int3
imul
repnz
xor
mov
mov
rcr
jnp
fsub
push
scas
mov
cld
pop
sbb
(bad)
add
cmp
lods
loope
or
repz
pusha
inc
adc
out
jge
mov
dec
test
mov
mov
add
jns
mov
xchg
int
rol
inc
sub
adc
stc
inc
movs
jecxz
(bad)
out
sub
dec
xlat
add
arpl
pushf
add
mov
adc
call
ret
mov
inc
out
aas
pop
ins
xor
mov
pop
ins
xor
mov
jl
out
ins
addr16
cmc
das
ud2
lods
xchg
mov
xchg
out
sub
cwde
or
jp
push
jnp
mov
in
jae
sbb
sub
mov
push
shl
aam
cmp
leave
xor
cmp
lods
jge
daa
add
les
adc
push
dec
or
out
mov
add
sub
add
sub
(bad)
sbb
add
imul
add
jmp
inc
cmp
hlt
mov
(bad)
jb
hlt
sub
pop
adc
retf
mov
xchg
lods
mov
push
push
data16
pop
js
ret
test
lods
ds
sbb
jns
adc
ins
lods
pop
outs
lock
daa
outs
lods
fldcw
mov
test
dec
adc
nop
fcom
or
fdiv
pop
pop
cmp
ins
fisub
(bad)
push
mov
mov
mov
loope
inc
mov
(bad)
pop
inc
in
leave
jg
xchg
ds
jb
scas
outs
xchg
daa
or
or
lods
enter
xchg
popf
cmps
call
mov
push
jne
aas
sar
pushf
popf
add
int
(bad)
pop
or
push
mov
fs
retf
mov
mov
sbb
std
ret
cmp
or
call
jle
sar
or
inc
test
mov
jns
test
pop
mov
ins
dec
push
pop
dec
mov
xchg
adc
ror
cmp
scas
cmc
pushf
std
push
inc
or
sub
or
mov
outs
xchg
or
adc
(bad)
(bad)
enter
sbb
jp
arpl
xor
out
adc
rcr
ret
push
das
adc
sub
test
into
mov
leave
push
je
jp
ins
push
ja
es
repnz
mov
xor
pop
out
mov
adc
push
scas
mov
es
push
and
mov
ins
mov
or
jle
aas
or
sbb
mov
jb
out
sub
enter
jae
dec
xchg
pop
ins
in
mov
pop
jmp
hlt
jmp
inc
stos
out
mov
leave
jae
mov
inc
dec
jne
jne
out
jmp
sbb
test
sbb
add
xor
pushf
stc
cmp
xchg
jecxz
ss
pop
add
mov
push
adc
cwde
es
cs
mov
inc
imul
jmp
push
(bad)
cmp
cld
repz
push
cmp
iret
fcmovnu
mov
les
inc
dec
jnp
inc
xchg
out
jmp
adc
out
fimul
xor
rcr
push
mov
pusha
jbe
jge
sub
mov
jo
pop
cwde
stc
sub
lahf
sub
jb
ins
leave
in
lods
and
sti
fcom
scas
push
rcr
cwde
pop
adc
fucomip
add
cmc
jecxz
das
lahf
mov
mov
cli
mov
jecxz
mov
xor
fwait
movs
jno
mov
pop
sub
sub
or
pop
scas
push
push
cs
sahf
imul
cwde
sbb
into
xchg
jae
push
jae
mov
or
add
sbb
xchg
out
ss
fcom
ins
jg
rol
lods
cmps
push
cmp
pop
mov
cmp
xchg
pop
sbb
add
sbb
ret
xchg
pop
imul
loope
ss
adc
pop
stos
popa
mov
rol
jg
js
mov
jne
lds
add
mov
jmp
jg
fldenv
pop
pushf
enter
adc
adc
mov
call
xor
adc
add
sbb
lock
aas
icebp
and
mov
imul
inc
dec
jmp
fistp
test
ja
leave
xchg
push
inc
xchg
and
stos
sub
xchg
jnp
aam
outs
jb
outs
test
mov
pop
sbb
push
mov
dec
mov
pop
(bad)
sub
xor
std
mov
test
or
mov
sbb
fcomp
or
data16
cmp
cmp
hlt
or
in
getsec
stos
inc
outs
xchg
mov
cld
jmp
cmp
nop
mov
and
xor
dec
in
fs
sar
daa
sbb
call
ficom
cmps
dec
add
in
pop
sbb
shl
inc
xchg
je
pop
inc
jns
arpl
mov
pop
shl
out
xor
add
cmps
pop
outs
push
int3
stos
sub
clc
and
loop
ins
cmp
cmp
cmp
sbb
into
ret
dec
inc
pop
dec
jl
sub
xchg
enter
add
pop
popf
add
or
pop
fst
inc
(bad)
gs
cmp
test
push
mov
adc
leave
test
pop
xchg
or
std
std
stos
out
mov
pop
add
addr16
aad
nop
adc
mov
aaa
jg
jbe
sub
xchg
and
jmp
shl
into
sub
sbb
in
or
xor
push
pop
dec
adc
in
hlt
mov
ins
pop
inc
clc
inc
add
ficom
push
sti
push
xchg
hlt
inc
sar
and
das
push
(bad)
push
mov
xor
inc
mov
jl
push
xchg
mov
and
in
out
movs
pop
(bad)
jne
cmp
push
and
imul
mov
jp
aaa
shl
fucomi
retf
cmp
dec
out
aas
aaa
mov
xchg
inc
leave
pushf
not
(bad)
cmp
lods
mov
pop
dec
shl
out
mov
ja
fidiv
dec
call
or
dec
mov
ins
out
sbb
lods
mov
mov
sbb
sub
pushf
jo
je
rol
data16
daa
mov
lea
mov
xor
and
fs
lds
sti
mov
add
xor
popa
out
cs
push
lahf
mov
inc
dec
imul
jnp
push
xor
retf
fcomp
dec
loopne
cld
out
xchg
aas
cmp
cld
or
arpl
add
dec
jne
outs
retf
sub
jae
sbb
jbe
push
leave
mov
aas
sar
add
xchg
inc
push
int3
xchg
add
jbe
jns
add
and
dec
lods
aas
ret
movs
ret
jae
ins
mov
mov
mov
xchg
jbe
add
and
or
sahf
jo
cld
popa
(bad)
pusha
fisttp
ss
int
test
mov
mov
cmps
mov
pop
cmps
dec
pop
sub
inc
fcmovb
xchg
dec
lock
xchg
ss
leave
icebp
int
fcom
addr16
mov
jmp
cmp
mov
cs
mov
and
sahf
mov
call
lods
sub
adc
aas
nop
inc
push
inc
xchg
xchg
shl
cmps
inc
je
mov
xor
imul
pop
aad
mov
adc
jge
popa
out
arpl
mov
out
jmp
and
aaa
and
dec
retf
inc
xor
repnz
jnp
jae
sbb
les
jmp
ret
repz
(bad)
icebp
add
dec
cli
sub
push
pop
lock
jl
cmp
fild
jo
push
and
clc
repnz
jae
inc
inc
xchg
hlt
test
mov
bound
jno
rcl
jl
es
mov
inc
jg
movs
inc
jns
sbb
loopne
fld
scas
jp
adc
test
cmps
loopne
inc
in
jns
sbb
nop
push
lods
in
repz
icebp
pop
dec
push
jmp
xchg
or
add
aaa
lock
aas
jnp
inc
xor
popf
pop
les
jmp
rcl
push
lahf
xchg
dec
iret
xor
xor
sub
(bad)
mov
call
adc
pop
fisttp
xor
add
mov
push
jecxz
pop
xchg
xor
shr
add
les
test
dec
adc
outs
sub
or
or
cwde
out
cmps
stos
shl
bnd
xchg
mov
cmp
jge
push
xor
pop
dec
rcr
cdq
dec
xor
cld
test
out
(bad)
pop
mov
and
icebp
out
mov
or
lock
sbb
inc
je
ret
mov
inc
sbb
js
retf
jp
ret
dec
jecxz
arpl
dec
cmp
in
movs
pushf
cld
mov
xchg
mov
into
pop
and
(bad)
lock
pop
repnz
xchg
sub
jge
imul
int3
test
js
stos
repz
clc
jae
fs
add
pop
or
xor
repnz
sub
sub
scas
dec
mov
retf
enter
aas
and
cld
xchg
inc
idiv
mov
push
mov
test
test
xor
loope
imul
mov
fmul
out
pushf
je
push
xor
cmp
cmp
mov
ds
mov
pop
nop
jmp
js
xchg
aaa
fisubr
mov
outs
pop
(bad)
cmp
mov
cwde
and
mov
dec
out
jecxz
push
fs
and
ins
jmp
lds
not
inc
fst
shr
hlt
ror
out
sbb
fsubr
lods
rcr
pop
pop
in
fild
je
adc
shl
call
push
push
adc
sbb
test
inc
cmp
mov
fnstenv
pushf
(bad)
ins
lods
imul
or
arpl
fild
cmp
rcl
lea
or
out
jl
or
(bad)
cmp
out
mov
ja
mov
fisttp
out
out
xor
jae
mov
(bad)
aad
xchg
xchg
pop
pop
(bad)
add
(bad)
mov
inc
cmp
cmp
(bad)
es
movs
mov
test
cmp
fs
ss
jne
(bad)
fwait
call
dec
cli
xchg
cld
sbb
mov
(bad)
cdq
jmp
cmp
ins
aad
or
add
pushf
adc
inc
mov
jl
call
adc
(bad)
in
jnp
retf
aaa
add
jbe
sahf
adc
stos
sub
sbb
xchg
xchg
mov
mov
push
rcr
or
inc
js
call
inc
push
add
sub
jbe
dec
pop
cld
cmps
inc
clc
icebp
adc
and
push
and
inc
inc
add
xchg
xor
clc
leave
sbb
adc
xor
jp
xlat
inc
push
add
je
stc
scas
out
xchg
je
in
rcr
xchg
(bad)
std
jmp
out
pop
rcl
mov
jp
lock
in
jo
ja
lahf
aas
add
iret
bound
pop
ja
je
dec
mov
test
mov
cmp
lods
sbb
imul
mov
xor
xor
repnz
adc
xchg
gs
and
and
xchg
push
cs
fimul
inc
push
in
int
rcl
pop
pop
repz
sbb
ret
leave
ins
imul
add
jo
xor
test
repz
fs
mov
cmp
jae
je
popf
mov
shl
out
inc
pop
mov
fnstcw
xchg
adc
jnp
in
sub
lea
lods
sbb
push
dec
icebp
fidivr
jl
retf
fucomi
mov
popa
dec
fistp
mov
or
and
(bad)
jmp
or
je
mov
push
push
cdq
shl
adc
dec
mov
or
out
cmps
add
repz
popa
addr16
dec
push
push
out
imul
fadd
dec
aam
aam
mov
xor
rcl
sub
jbe
movs
cld
mov
dec
loop
adc
dec
cmp
xchg
mov
jmp
rcr
dec
and
mov
mov
push
pop
pop
dec
and
fist
scas
out
mov
push
mov
or
pop
mov
inc
add
jae
sbb
not
in
icebp
retf
mov
lods
cli
lods
mov
xor
mov
repnz
es
outs
or
(bad)
mov
mov
es
scas
das
mov
or
hlt
jl
cwde
movd
sbb
or
(bad)
das
push
ror
inc
dec
imul
jmp
stos
mov
rol
movs
(bad)
jle
or
jp
sbb
cmp
movs
fsubr
add
or
xchg
pop
push
cwde
inc
mov
mov
xor
ja
imul
sbb
push
fmul
stos
push
jp
icebp
inc
pop
aam
jp
hlt
sbb
and
int3
cmp
mov
inc
jl
xchg
jge
ja
lahf
jecxz
cdq
pop
sar
cmp
mov
xchg
das
(bad)
jmp
arpl
repz
push
sbb
xor
xchg
xchg
retf
lahf
xor
ret
jb
test
add
inc
lds
(bad)
sbb
mov
push
push
(bad)
mov
inc
push
pop
inc
mov
push
out
ret
sub
in
cmps
xchg
xchg
lods
and
push
cmps
add
scas
mov
shl
sub
inc
mov
mov
cld
cdq
les
mov
sbb
cmp
mov
sar
mov
pop
mov
inc
test
mov
leave
aad
dec
pushf
loope
mov
lea
and
adc
std
shl
int3
jb
fisttp
sar
aad
cld
lds
or
gs
fsubr
jmp
rcl
js
repz
mov
fwait
call
fdivp
std
loope
std
mov
(bad)
mov
fdivr
cli
data16
sub
jbe
push
xlat
imul
mov
sti
int3
scas
push
call
inc
xchg
xchg
push
xor
rol
pop
sbb
adc
xor
ins
shr
sub
jge
mov
pop
mov
jae
aas
data16
call
or
and
add
inc
pop
nop
inc
mov
movs
movs
jae
sub
inc
sub
inc
scas
int
ja
xor
mov
lea
or
(bad)
push
mov
mov
or
push
cmp
push
cmp
mov
data16
mov
retf
mov
cmp
pop
dec
push
xchg
cdq
xchg
stos
fidiv
and
mov
lods
sar
add
lock
add
ret
cmps
and
in
xor
out
pushf
push
adc
(bad)
in
aam
push
mov
mov
or
inc
pop
cmp
sbb
xchg
push
mov
test
and
(bad)
hlt
dec
lods
pop
sbb
daa
add
inc
retf
sub
mov
xor
loopne
cli
popf
cmp
or
(bad)
cmc
jne
shr
push
pushf
jg
(bad)
rcr
or
push
mov
adc
addr16
std
add
inc
in
sbb
leave
aam
test
pop
inc
retf
popf
mov
lea
mov
retf
jno
xor
or
in
inc
icebp
adc
pop
dec
aas
ss
sub
adc
loop
mov
enter
out
nop
into
loope
dec
out
test
xor
xchg
cld
dec
ret
add
and
adc
imul
fld
or
jge
or
outs
aaa
jmp
adc
in
sti
(bad)
icebp
inc
dec
inc
loop
sbb
sub
(bad)
add
loope
aad
les
sbb
dec
mov
pop
dec
not
imul
mov
jo
fmul
and
fstp
mov
movs
jae
push
cmp
sub
rol
jmp
xchg
sbb
(bad)
test
ja
add
retf
jp
mov
sbb
test
sub
mov
lock
aas
push
mov
push
in
ret
call
les
in
fisubr
mov
xchg
push
dec
je
retf
ins
dec
and
sahf
das
popf
mov
hlt
xchg
adc
jnp
ins
dec
xchg
ins
fcomp
lahf
pop
xchg
pop
stos
xlat
push
add
lahf
mov
in
test
inc
xor
lock
jp
or
jle
adc
or
jnp
sbb
mov
mov
mov
or
mov
stos
or
out
xor
in
xor
push
fldenv
xchg
xchg
jne
push
pop
jmp
rol
push
jmp
shr
shl
das
inc
add
sahf
aaa
scas
into
in
adc
pop
push
xor
sti
push
or
cmp
sub
mov
ds
jnp
mov
(bad)
ss
push
mov
xor
ja
adc
sbb
fiadd
jp
sbb
sub
pusha
movs
ins
mov
xlat
mov
sbb
ins
inc
gs
cmp
inc
mov
cmp
fwait
out
pop
sbb
or
mov
mov
idiv
mov
add
ret
cmps
sbb
call
imul
aam
mov
xchg
cmc
sbb
adc
pop
sub
or
pop
push
push
movs
(bad)
aad
pop
mov
mov
xor
jp
nop
sbb
movs
mov
sub
sub
(bad)
push
jnp
mov
sub
push
add
aas
stos
call
xchg
(bad)
call
mov
inc
int
into
data16
leave
push
mov
scas
les
fist
cmp
mov
xchg
jl
push
das
shl
repnz
and
mov
or
inc
pop
fisub
adc
xchg
or
cmp
(bad)
popf
and
push
test
dec
das
ficom
push
inc
push
or
xchg
adc
mov
(bad)
cli
xor
aam
fwait
or
fsubrp
daa
xchg
dec
stc
fdiv
hlt
lods
jae
sbb
addr16
pop
mov
les
xchg
cmps
mov
mov
jge
xchg
sbb
fldcw
dec
out
pop
call
push
fadd
cwde
mov
inc
pusha
in
add
mov
and
jg
mov
push
(bad)
out
call
inc
and
mov
pusha
sahf
out
mov
int3
xor
cwde
repz
arpl
push
inc
xor
cmp
arpl
pushf
push
adc
aaa
popf
scas
push
frstor
adc
mov
or
cmp
xor
inc
push
rol
mov
jmp
out
setg
add
fwait
cmps
(bad)
clc
lds
jns
cmps
shl
push
pop
or
ins
movs
or
fst
loopne
and
cmp
js
pop
push
ins
cmc
lahf
xchg
retf
fbld
imul
cmp
push
jne
jl
(bad)
sbb
mov
add
scas
dec
jae
inc
pop
inc
push
retf
outs
mov
cdq
daa
mov
pusha
bound
xchg
mov
cmps
dec
pcmpgtd
pop
lea
test
aaa
sbb
mov
ret
je
add
fistp
popf
add
and
mov
in
test
call
push
lods
ds
mov
dec
xor
rcl
mov
xor
xor
imul
vmwrite
stos
push
xchg
mov
and
das
add
adc
dec
mov
sar
pop
push
les
or
pop
dec
out
adc
(bad)
lahf
sub
mul
mov
mov
or
xchg
add
sbb
je
sar
push
or
(bad)
jp
sbb
inc
xor
jae
movs
or
stc
sahf
arpl
cwde
or
retf
mov
aam
das
sahf
inc
cmp
(bad)
push
outs
xchg
xor
fs
pop
push
lock
sub
mov
pop
inc
rcl
cmc
pop
stos
les
mov
adc
loopne
sub
(bad)
pusha
cmps
jo
pop
lock
mov
std
gs
test
mov
mov
sub
push
ja
and
xlat
dec
push
inc
aas
cmp
xchg
mov
(bad)
add
pop
imul
ds
pop
std
leave
adc
and
push
mov
adc
jb
idiv
out
inc
mov
leave
pop
xlat
repnz
push
dec
and
daa
and
push
test
inc
arpl
mov
and
movs
sbb
xchg
dec
sbb
fnstcw
(bad)
in
and
jle
mov
fstp
inc
dec
test
pop
sti
sub
and
loopne
dec
pop
jmp
or
out
fs
mov
sbb
add
movs
loope
xor
xor
pop
sub
sub
stos
dec
inc
addr16
cmp
push
call
inc
bound
jecxz
aas
dec
(bad)
cmp
in
xchg
js
push
aas
cmp
sar
mov
ins
mov
mov
xlat
sbb
xor
cs
in
sub
cdq
or
inc
dec
dec
loop
mov
test
or
mov
dec
mov
or
scas
sbb
pop
sbb
cmp
into
aam
out
mov
pop
stos
ins
pusha
ret
inc
scas
inc
dec
pop
out
push
pop
lds
pusha
in
mov
les
mov
(bad)
out
mov
mov
mov
mov
data16
mov
dec
ds
mov
scas
mov
mov
xchg
test
inc
lods
adc
rcr
iret
adc
repnz
sub
jmp
frstor
cli
inc
jo
test
lea
fisubr
jecxz
dec
div
mov
dec
cmp
jge
shl
int
stos
push
cmc
outs
push
outs
adc
in
retf
fwait
push
and
call
and
push
(bad)
pop
call
test
outs
sti
jmp
mov
in
outs
jns
or
xchg
out
nop
sbb
mov
sub
into
push
je
in
repnz
adc
add
scas
ror
cmp
popf
outs
inc
xchg
rol
test
jnp
sbb
aaa
(bad)
rcr
imul
gs
dec
(bad)
xlat
(bad)
cli
(bad)
aam
xor
jmp
xchg
or
sub
mov
or
jnp
mov
mov
outs
jo
(bad)
imul
ins
shl
inc
sub
shr
movs
iret
cld
dec
ret
xchg
icebp
sahf
add
les
test
inc
mov
inc
pop
or
cli
outs
adc
push
push
adc
ins
xchg
lock
mov
enter
push
cmc
jmp
mov
ret
loope
not
clc
inc
mov
fs
aaa
lods
std
and
sub
xchg
mov
inc
dec
je
aaa
adc
lahf
lds
push
pop
xchg
std
dec
mov
mov
test
mov
or
test
pop
cmp
jmp
mov
sar
fild
or
push
cmp
cmp
add
aas
addr16
stos
int
ror
loop
je
mov
das
add
pop
frstor
mov
fwait
push
add
call
ins
call
cdq
std
(bad)
aaa
jne
inc
repnz
(bad)
es
cmp
sbb
sbb
es
push
add
add
xchg
stc
test
mov
sbb
jns
cwde
stc
retf
mul
lea
mov
push
out
enter
cld
cmp
sbb
pop
xlat
sub
xchg
dec
shl
xor
xchg
stos
xchg
cli
xor
jle
and
sahf
mov
(bad)
das
pop
and
call
mov
repnz
dec
add
pop
sub
int3
cmp
sbb
ins
pusha
ret
(bad)
out
add
imul
mov
jo
mov
mov
je
mov
mov
sti
addr16
stc
add
shl
xor
or
fcmovb
popf
loop
xchg
or
loopne
add
and
jmp
push
jl
cld
cmp
mov
(bad)
mov
mov
test
fisub
test
mov
mov
mov
mov
fdiv
xor
mov
data16
inc
(bad)
sub
call
dec
jns
push
movs
movs
aaa
jo
stos
cmps
or
mov
jb
cmps
mov
(bad)
loopne
cmp
aad
mov
add
push
rol
add
cmp
push
fsubr
mov
nop
and
or
xlat
xchg
movs
add
and
sub
jl
mov
arpl
xor
sub
das
and
mov
push
mov
sub
inc
mov
shl
cmp
test
fld
and
xchg
pop
out
jno
mov
fwait
(bad)
xchg
aaa
jle
jmp
retf
and
mov
(bad)
pop
add
and
cwde
cdq
push
fisttp
push
pop
push
cmp
mov
lods
dec
cld
sub
fistp
out
sahf
popf
xor
aas
adc
lods
and
pushf
pop
mov
int
scas
(bad)
(bad)
clc
das
mov
jl
outs
xchg
jge
leave
push
dec
pop
cmps
fs
pop
add
leave
cmp
lds
cdq
cmp
pusha
push
xchg
add
pop
pop
cmp
sub
movs
call
dec
(bad)
aad
mov
(bad)
pusha
mov
xchg
stos
jmp
mov
loop
je
loop
mov
or
das
xchg
(bad)
mov
sub
push
add
sub
cmp
nop
movs
daa
or
and
sbb
popa
push
jb
retf
push
fdiv
repnz
ret
add
pop
xor
(bad)
out
ds
and
jmp
out
pop
adc
xchg
sbb
pop
add
push
pop
cli
fstp
adc
aam
in
mov
inc
imul
xchg
mov
cmp
bound
mov
call
test
pop
pop
arpl
ja
ret
push
xlat
iret
push
jmp
into
mov
ror
xchg
inc
jo
icebp
mov
shl
shl
inc
jns
push
fcom
add
mov
jno
ror
stos
icebp
mov
data16
inc
rcr
mov
pop
adc
mov
mov
jb
xor
movs
lods
mov
or
pushf
pushf
mov
and
in
(bad)
cmp
stos
stos
stc
loopne
push
xchg
stos
jge
aad
outs
pop
sub
mov
out
and
lahf
or
mov
stos
inc
jae
scas
gs
mov
leave
jae
loope
and
sbb
stc
popa
fcom
inc
or
xor
xchg
add
or
push
call
sub
dec
add
adc
leave
arpl
adc
sub
aas
pop
mov
xchg
jle
fistp
call
call
std
push
int3
jecxz
and
not
addr16
jmp
mov
adc
dec
sbb
add
inc
push
xor
mov
adc
inc
lods
mov
int3
dec
add
ret
scas
icebp
inc
dec
and
(bad)
xchg
push
xor
adc
xor
test
retf
nop
mov
pop
fmul
pop
cmp
mov
pop
test
lock
xor
push
xor
jg
xchg
imul
jno
gs
mov
std
pop
pminub
jbe
jbe
es
xchg
xchg
aam
std
scas
push
pop
mov
hlt
add
sub
mov
rcr
sbb
inc
pop
in
scas
pop
cmc
or
in
mov
cmp
pop
mov
and
fistp
in
push
push
inc
hlt
cmp
pop
jmp
inc
les
add
pop
leave
lahf
pop
cdq
test
loopne
fcom
imul
rcl
imul
imul
ret
fidiv
add
push
mov
(bad)
add
sahf
popa
(bad)
mov
mov
out
dec
or
adc
stos
das
in
and
inc
and
lea
lock
mov
(bad)
cld
mov
pop
dec
cmp
mov
fsubr
imul
stc
jg
push
fimul
bnd
pop
in
xlat
pop
push
int3
jle
sbb
js
push
div
arpl
inc
imul
imul
inc
fld
jp
cmp
call
jns
(bad)
ret
mov
fcomp
mov
xor
setno
rcr
pop
or
mov
and
push
inc
push
jo
add
fidivr
fist
jg
lods
cmps
jbe
out
mov
repnz
call
enter
sub
rcl
xchg
pop
sub
xchg
enter
dec
out
dec
bound
fld
aaa
push
out
arpl
cmp
fidiv
xchg
add
jp
std
aaa
xchg
add
fdivr
dec
push
retf
(bad)
fbld
call
icebp
and
stc
fbstp
cmp
add
ret
ret
mov
shl
jnp
fmul
nop
mov
repz
in
pop
sbb
stc
sub
sti
and
pushf
mov
stos
cmp
jp
lods
xor
mov
adc
in
and
or
mov
mov
jno
fild
and
dec
xor
lods
fsub
movs
pop
jmp
in
pop
retf
cmp
out
into
adc
stos
icebp
(bad)
fs
mov
or
push
test
mov
pop
or
adc
(bad)
cld
jle
ss
fimul
mov
sub
and
icebp
fld
pop
daa
xor
enter
fiadd
pusha
call
inc
repnz
iret
retf
fstp
jbe
sub
ins
and
inc
add
push
sub
ret
xor
or
or
adc
pop
lock
lock
and
ins
stos
add
or
(bad)
jae
push
rcr
bound
jb
not
sbb
cmp
mov
addr16
or
mov
(bad)
sbb
cmp
repz
popf
push
cli
out
sub
jecxz
pop
mov
ret
jo
xchg
and
stos
je
scas
hlt
hlt
xchg
mov
xchg
call
mov
mov
mov
aam
mov
retf
jb
fsubr
mov
dec
xlat
iret
enter
and
fnstsw
or
jno
inc
enter
adc
or
bound
jne
pop
mov
stos
sbb
mov
leave
or
outs
mov
add
add
cli
pop
xlat
mov
or
dec
cld
shr
rcr
out
dec
rcl
adc
add
sahf
or
sbb
and
sbb
mov
push
out
push
iret
and
dec
inc
inc
jg
test
js
pop
jle
clc
push
push
ja
or
and
das
addr16
inc
js
pop
sahf
repnz
cs
out
inc
jae
popa
push
sbb
push
popa
or
(bad)
retf
mov
mov
loopne
mov
pusha
mov
je
or
in
das
aas
out
sti
test
and
lahf
call
leave
mov
cmps
pop
adc
movs
and
sbb
stos
xor
cli
and
xchg
lds
repnz
cmp
clc
ss
daa
std
repnz
out
lahf
sti
les
(bad)
fyl2xp1
add
mov
retf
dec
pushf
lea
pop
sub
jle
inc
enter
mov
and
ins
jb
std
push
cli
jmp
pop
mov
dec
div
xor
cmps
jmp
inc
pop
fdiv
sub
mov
nop
mov
stos
jne
adc
sub
fiadd
xchg
aaa
div
mov
call
loop
jbe
inc
retf
dec
aad
outs
add
mov
jmp
sub
stc
pop
(bad)
cli
popa
mov
test
cmc
(bad)
xchg
test
and
dec
js
loop
jmp
jmp
sub
add
aas
outs
daa
mov
ret
outs
push
add
jno
sar
clc
addr16
lea
jnp
in
mov
jp
out
pop
xor
or
pop
inc
out
cmps
repz
ja
or
mov
call
push
add
and
lahf
(bad)
outs
or
xchg
push
xor
jae
push
fdiv
cld
sbb
lods
cmp
(bad)
cli
push
push
fwait
cmc
jle
lods
inc
iret
mov
fs
jg
jmp
jne
adc
shl
inc
pop
rcr
in
sahf
mov
sbb
arpl
ja
or
or
les
pop
jbe
shr
sbb
ss
add
mov
jecxz
jne
pop
push
sub
xchg
jge
mov
movs
xchg
and
add
push
xlat
dec
test
jp
sub
repnz
mov
sbb
je
mov
add
sar
xchg
sub
out
xchg
xchg
aam
in
dec
mov
adc
out
jb
mov
sti
retf
mov
sti
xchg
push
xor
xor
dec
repz
and
sti
fmul
mov
imul
mov
cld
sub
data16
sub
sub
sub
outs
aam
add
loopne
jno
cli
jge
and
outs
shr
cs
push
arpl
cdq
and
xchg
jnp
fnsave
mov
rcr
stos
xchg
pop
lds
(bad)
mov
add
data16
ja
imul
push
and
fdivrp
pop
sub
into
or
clc
lmsw
ret
movs
fadd
cmps
mov
fmul
scas
push
cmp
cmp
push
pop
jne
and
mov
adc
aam
test
ret
fs
cmp
jle
sub
xor
sub
iret
ins
jno
push
and
repz
xor
shl
cmp
xor
sahf
pop
in
pop
inc
cs
dec
cdq
out
inc
mov
and
jae
cdq
xchg
call
xchg
retf
lds
sub
pop
leave
jmp
iret
(bad)
xchg
arpl
cmc
test
jle
push
push
neg
mov
xor
in
bnd
mov
pop
(bad)
out
mov
push
sbb
sbb
call
jo
sahf
mov
jecxz
inc
enter
sbb
movs
xchg
adc
sbb
push
push
fcom
rol
mov
retf
out
pop
retf
outs
jno
(bad)
jecxz
mov
push
clc
add
jge
push
in
dec
and
loopne
movs
mov
push
or
rol
ret
xor
or
dec
lods
adc
stos
mov
das
loopne
mov
mov
sub
jb
cdq
psubw
mov
push
sub
mov
cmp
sti
dec
jecxz
fisub
cmp
jmp
test
hlt
dec
sub
or
js
push
xor
and
add
jbe
retf
pop
sbb
je
js
daa
sbb
test
xchg
mov
imul
fs
lods
in
sub
ds
push
fsubr
dec
aad
mov
mov
push
mov
dec
adc
scas
aas
pop
pop
sub
add
mov
lock
push
cwde
add
ror
inc
imul
(bad)
ret
ret
ds
jb
jae
sbb
arpl
mov
pop
xchg
test
mov
ret
mov
xlat
popf
dec
mov
cmp
xor
movs
lds
mov
mov
aam
cld
inc
add
dec
mov
inc
xor
fisttp
leave
imul
xchg
sub
sub
add
les
xchg
rcl
int
cmc
and
xor
push
jno
out
mov
retf
dec
cld
inc
inc
lahf
jge
mov
test
inc
jno
push
and
adc
enter
nop
and
fs
test
pop
cli
retf
shl
sbb
mov
cmps
mov
fs
imul
loope
icebp
mov
test
test
dec
or
dec
jmp
xchg
scas
shr
jno
sar
and
ins
sbb
ret
mov
mov
push
push
jecxz
jns
dec
jns
pop
lea
loope
ja
pop
sar
fst
mov
fldcw
aaa
inc
test
pop
inc
cmp
or
scas
pop
xor
push
lods
arpl
mov
mov
sub
mov
cs
aam
out
fst
out
call
not
sub
rol
stos
div
movs
jmp
test
sar
inc
sub
inc
cmp
mov
outs
iret
push
push
mov
add
jae
add
xor
ds
nop
iret
pop
pop
ins
(bad)
pop
xor
and
jno
in
ret
nop
out
idiv
add
xlat
shl
(bad)
pop
mov
push
add
xor
jne
push
dec
outs
xchg
xor
(bad)
cli
jne
fsubp
cmps
xchg
xor
dec
xor
push
xchg
jge
and
movs
cdq
mov
mov
cmp
jbe
outs
and
xor
cmps
jge
push
xor
mov
xchg
(bad)
sti
cli
(bad)
and
pop
dec
xchg
out
mov
or
repz
psubb
fimul
ja
add
inc
out
movntq
pop
pop
loop
xlat
mov
add
arpl
lahf
sub
fs
xor
adc
inc
mov
cmp
rcl
sub
ja
enter
addr16
fs
das
out
fnstenv
xchg
dec
sar
add
mov
daa
push
push
add
mov
pop
nop
cdq
add
lods
mov
call
retf
or
(bad)
sahf
lds
add
por
or
sbb
jne
sub
mov
jbe
mul
and
adc
mov
and
popf
inc
mov
cmp
mov
pop
aas
push
out
add
add
or
xor
pop
mov
loop
fwait
pop
inc
xor
push
cld
fsub
loope
fcmovne
fwait
mov
cmp
and
mov
call
into
push
adc
test
aam
jb
cmp
add
xchg
adc
leave
call
retf
iret
inc
fnstenv
push
sub
xor
and
mov
mov
and
loop
sbb
inc
rcl
mov
sahf
ss
std
jg
mov
jge
ins
jge
cld
jae
retf
hlt
out
xchg
push
and
jge
cmp
xor
pop
lahf
mov
pop
daa
mov
pop
cmp
js
cwde
cli
mov
in
xlat
sbb
mov
sub
push
jmp
into
push
fs
ret
scas
fcmovb
inc
aad
jnp
mov
push
ins
jg
rol
test
inc
pop
xchg
neg
std
sti
adc
mov
or
and
add
repz
(bad)
addr16
xchg
cmp
xchg
js
jmp
push
add
cld
pop
sbb
hlt
dec
mov
fidivr
gs
shl
sub
addr16
lock
addr16
retf
adc
gs
loop
daa
test
mov
lea
mov
xor
std
jne
scas
cwde
mov
neg
out
sub
movs
not
and
jmp
not
leave
iret
aad
jno
out
rol
fldcw
sub
call
jno
dec
jg
scas
loopne
cwde
lds
ja
ja
xchg
dec
in
imul
int3
cdq
dec
pop
sahf
mov
mov
sub
stos
fidivr
aas
push
mov
mov
mov
ret
inc
popf
out
pop
gs
bound
xchg
mov
outs
push
stc
and
mov
or
in
cmps
imul
xor
cmps
inc
shl
out
inc
sbb
(bad)
jb
(bad)
popa
cli
mov
mov
add
or
and
mov
push
push
dec
in
push
xchg
ja
xor
or
mov
sbb
daa
aaa
or
rcr
and
mov
mov
cmc
lock
adc
arpl
push
mov
mov
js
loope
cmps
sub
repz
inc
sbb
jbe
out
mov
jo
mov
push
clc
dec
fnstenv
mov
xchg
shl
rep
xchg
arpl
mov
xchg
xchg
lods
loope
jle
push
movs
dec
dec
push
xlat
scas
xor
mov
push
(bad)
repz
mov
test
and
cmp
pop
sbb
xlat
fcmovne
sahf
retf
loope
lods
outs
out
imul
push
es
stos
adc
ds
mov
call
les
gs
mov
xor
mov
add
les
sub
fist
call
mov
ret
popf
mov
dec
push
imul
nop
mov
out
or
cmp
inc
(bad)
icebp
cdq
fld
and
je
mov
xchg
out
lods
sbb
dec
xor
dec
inc
mov
cmp
fstp
addr16
mov
jp
bsf
and
iret
push
inc
dec
dec
sub
adc
pop
fxch
retf
les
aad
(bad)
(bad)
mov
test
daa
mov
das
mov
jne
daa
aad
push
mov
lods
push
pop
dec
xor
cwde
or
mov
push
push
or
adc
and
xchg
and
add
ds
aaa
jl
fisub
in
fdiv
jg
loop
leave
repnz
(bad)
xor
mov
and
into
or
jmp
and
and
pusha
rcl
jno
pop
outs
movs
dec
cdq
psadbw
mov
fcmovnu
scas
add
das
movs
xchg
mov
lea
sub
movs
arpl
repnz
and
(bad)
pop
dec
inc
sbb
xchg
or
in
push
adc
rcl
push
mov
dec
push
fisttp
xadd
out
push
cmp
fist
mov
and
sahf
jns
add
inc
cmp
jae
push
cmp
inc
dec
aad
cmp
jo
adc
movs
cmp
pop
or
ret
pop
ret
pavgw
repnz
pusha
fsubr
inc
inc
mov
gs
movs
pop
mov
dec
mov
cli
(bad)
repnz
mov
retf
ins
mov
sub
and
(bad)
(bad)
les
and
inc
(bad)
fs
xchg
movs
call
xchg
cmp
scas
fs
mov
sub
dec
fisttp
in
fdecstp
(bad)
std
movs
pop
add
mov
cld
cmp
cmp
jp
scas
movs
enter
mov
stos
sbb
or
outs
sbb
popf
lea
push
out
es
fidiv
inc
mov
pop
pop
shr
jno
or
lods
cmp
data16
mov
mov
cwde
mov
lock
sub
jmp
or
push
adc
mov
dec
add
ret
ret
(bad)
xchg
jae
adc
mov
xchg
push
cmp
cmp
cmp
xor
sahf
mov
jp
cmp
iret
cmps
loopne
inc
or
dec
xor
adc
mov
cmps
jae
xor
cmp
nop
iret
push
sub
sti
sub
popf
call
mov
jne
fiadd
add
jne
fdivr
jns
add
xchg
sbb
ds
mov
inc
xor
cld
es
in
nop
sub
(bad)
int
and
repz
push
bound
ins
shl
outs
push
cmp
jecxz
mov
mov
pushf
std
dec
xor
adc
and
xchg
sbb
repz
and
inc
push
imul
jo
push
iret
jmp
inc
imul
cmp
lods
stos
fxam
out
push
stos
or
xchg
cmc
cmp
sbb
or
lea
inc
xor
je
movs
mov
lods
in
imul
in
xchg
sbb
push
and
pusha
cwde
sbb
mov
push
lahf
cwde
push
loop
mov
cmc
rcl
loopne
jmp
test
test
in
aam
mov
data16
stc
pusha
jmp
push
add
ss
or
into
cmp
sub
iret
jae
je
xor
movs
jl
xchg
dec
sbb
fbld
jle
mov
aam
call
xor
push
test
pop
movs
jl
add
in
lock
jge
pop
cmc
jl
cmc
outs
push
test
clc
sub
sub
sti
fstp
sub
bound
push
stos
pop
cmp
outs
mov
dec
in
in
data16
inc
dec
or
repnz
or
inc
cli
pop
xchg
jne
lods
in
xchg
push
mov
and
lock
jo
mov
add
aad
test
adc
or
mov
inc
fisubr
mov
inc
nop
pop
pop
call
test
sbb
in
sub
pop
(bad)
lea
mov
push
lods
jmp
push
sbb
mov
jne
call
inc
gs
push
cwde
sbb
cli
xor
mov
loope
es
les
bound
sub
pop
je
sub
add
in
lods
test
xchg
in
and
jmp
mov
pop
in
imul
xor
(bad)
jg
shl
mov
or
(bad)
pop
stos
cs
out
call
dec
nop
inc
xchg
call
add
sub
add
push
shl
enter
repz
fnstenv
jl
int3
mov
gs
or
inc
mov
add
push
pop
xchg
sbb
(bad)
aas
es
dec
ja
shl
push
jl
cmp
xor
cmps
pusha
pushf
mov
aas
ficom
cld
aad
fwait
(bad)
jae
cmp
mov
jge
loope
xchg
jl
inc
and
mov
xchg
or
(bad)
mov
cld
pop
outs
fnstcw
out
xor
test
pop
in
cld
adc
or
sbb
aaa
mov
js
and
push
mov
inc
or
push
hlt
mov
retf
lahf
xor
jo
adc
(bad)
sub
stos
inc
scas
pop
sbb
test
inc
push
(bad)
rol
test
fcmove
test
bnd
inc
test
mov
ret
add
mov
das
dec
addps
push
add
out
aas
inc
jmp
lahf
mov
fist
dec
adc
xchg
and
outs
push
and
call
inc
sahf
mov
mov
fadd
mov
fcomp
ins
fnstcw
pop
sub
mov
lds
push
sbb
dec
aad
in
sub
mov
mov
popa
out
test
dec
xor
fist
xchg
pop
and
test
jb
pop
lock
adc
arpl
xor
xchg
sar
jns
arpl
cld
inc
test
(bad)
sub
in
add
leave
pop
and
jecxz
lods
adc
cmps
add
mov
add
or
fs
es
outs
mov
mov
ds
pop
hlt
xor
cs
push
xor
dec
sub
movs
pop
mov
ja
daa
jb
inc
test
aaa
xor
jmp
or
xlat
mov
push
div
add
and
call
or
mov
mov
push
iret
mov
mov
jo
or
lahf
xor
push
out
sbb
loope
inc
xor
or
mov
lahf
and
mov
adc
popa
ja
cli
stc
cs
(bad)
dec
sub
mov
or
mov
add
push
rol
jl
or
inc
xor
xlat
xabort
addr16
ins
sub
loopne
int3
add
cmp
(bad)
and
add
sub
and
dec
movs
xor
fistp
mov
jnp
jle
arpl
or
retf
fldenv
mov
popf
movs
xchg
imul
sbb
push
(bad)
jmp
not
test
inc
xchg
(bad)
sahf
or
adc
pop
jmp
das
mov
push
dec
aad
xlat
mov
jne
cmps
push
ins
xchg
mov
jl
in
xor
fidiv
leave
out
push
cli
xor
rcr
mov
cmp
cmc
fidiv
mov
jp
(bad)
sahf
xchg
loop
pop
ret
stos
push
movs
ss
jl
cmp
push
js
jmp
xchg
pop
add
sbb
sbb
ds
xor
pop
cmp
add
(bad)
xchg
xor
fwait
loope
call
ins
mov
or
or
lods
xchg
sti
pop
mov
stos
mov
(bad)
adc
mov
jp
dec
mov
xchg
mov
add
pop
and
inc
imul
arpl
mov
push
das
neg
jnp
out
(bad)
fstp
ins
bound
les
add
shr
mov
movs
pop
pop
mov
inc
into
rcl
xchg
cwde
stos
out
fiadd
adc
pop
int3
loope
jmp
cmp
add
dec
sti
mov
frstor
outs
sub
rol
das
pop
push
add
adc
xor
sub
cmp
aas
sbb
es
in
push
mov
dec
je
sti
retf
pushf
and
push
rcl
jmp
xchg
das
nop
je
sub
repnz
push
mov
or
in
scas
ret
jno
mov
cld
test
cmps
das
ficom
mov
movs
jle
mov
ins
xor
jb
in
in
shl
cmp
popf
ds
sbb
rcl
mov
lods
pop
mov
sub
rcr
clc
ret
inc
retf
mov
dec
fidiv
mov
jne
icebp
imul
outs
adc
jnp
push
mov
jns
cmp
xchg
fcomp
push
mov
loop
mov
lods
cmp
pop
ins
cmp
and
xchg
(bad)
pop
imul
into
jecxz
hlt
xor
adc
test
push
mov
lds
cmps
cmc
cmp
aam
and
and
je
loopne
scas
ret
sub
mov
loop
mov
pop
aam
ret
test
jns
dec
mov
or
loop
mov
sar
pop
outs
dec
cli
sahf
add
push
cmp
sub
or
ins
cmp
adc
mov
inc
or
pop
xchg
out
pop
xchg
aas
xchg
and
mov
add
fimul
mov
and
clc
fs
out
sbb
adc
jo
fmul
pop
or
lds
pop
dec
scas
pushf
sub
lods
int
push
dec
fs
xchg
data16
repnz
or
in
int3
mov
push
(bad)
jg
sbb
fistp
out
and
(bad)
pop
in
(bad)
xor
jae
sbb
(bad)
aas
xchg
mov
or
push
dec
inc
sub
ficomp
pusha
jne
outs
in
fmul
fld
sub
mov
jbe
daa
xchg
or
pop
movs
or
jb
aad
(bad)
out
sbb
in
cmp
ucomiss
cmps
aad
sbb
push
jg
push
hlt
mov
dec
and
movs
in
fisub
xor
cs
jne
add
sub
icebp
ss
and
out
call
(bad)
test
sbb
cld
and
xchg
cmps
mov
xor
(bad)
test
rcr
or
jne
push
dec
jae
push
ficomp
rol
mov
sbb
mov
cld
dec
sbb
jb
jmp
cdq
imul
out
or
mov
inc
int3
cdq
shr
inc
jnp
inc
push
cdq
stos
push
or
cmp
mov
sbb
cld
sub
lock
rcr
ins
push
dec
jo
cdq
in
test
inc
cwde
test
leave
cmp
push
push
ins
frstor
sbb
add
jno
repz
jl
sub
and
fbld
fldl2t
sub
pop
bound
pop
mov
sub
dec
xor
loopne
aaa
sahf
jl
jge
shr
pop
xchg
enter
jmp
clc
adc
popf
and
outs
push
add
mov
imul
es
xor
int
sbb
inc
xchg
inc
xor
cmp
sub
add
pop
iret
imul
les
leave
test
(bad)
addr16
dec
int3
push
test
(bad)
mov
fimul
jl
add
clc
in
dec
xor
mov
add
cld
iret
mov
sub
push
add
cmp
mov
cmp
movs
mov
push
mov
inc
mov
xchg
adc
adc
mov
pop
js
or
inc
gs
and
or
pop
jne
and
jmp
arpl
jl
jle
jg
jns
or
sub
adc
cld
in
test
cmps
in
sub
pop
or
or
ins
fwait
inc
pop
push
jle
enter
test
push
push
stos
fistp
cmp
xchg
inc
(bad)
je
call
and
(bad)
fisubr
or
popaw
sbb
inc
lds
(bad)
imul
iret
rcr
ss
dec
jp
or
bound
mov
fsubp
mov
sbb
sub
popf
arpl
pop
mov
dec
adc
jecxz
retf
lds
hlt
fwait
push
aas
pop
aam
push
push
push
push
mov
in
outs
xchg
cmc
xchg
data16
(bad)
xchg
test
push
xchg
mov
pop
ja
stos
(bad)
mov
mov
jge
addr16
les
shl
lahf
je
and
in
(bad)
aas
imul
sub
(bad)
sahf
nop
pusha
test
push
or
ret
js
test
aas
movs
pusha
fs
sub
loopne
in
sbb
xor
clc
or
jmp
sub
hlt
mov
sbb
les
aas
fsub
fild
push
pop
icebp
pop
out
stos
enter
mov
dec
or
xchg
adc
ss
arpl
mov
dec
(bad)
iret
xlat
fdiv
xor
retf
dec
iret
call
cmp
movs
enter
mov
test
sbb
shl
cdq
or
push
xchg
push
push
hlt
xlat
add
fcomp
jnp
shl
loopne
(bad)
rcr
xchg
inc
ins
fmul
inc
add
out
arpl
sub
pop
mov
leave
call
xchg
or
cld
loopne
push
sub
and
sbb
cs
and
into
dec
push
test
movs
push
std
sub
cmc
mov
das
mov
inc
clc
xchg
xchg
pop
(bad)
daa
lea
and
push
xor
loop
xchg
and
xchg
sub
data16
inc
mov
push
scas
(bad)
stc
inc
movsx
ins
push
bound
call
movs
mov
test
out
ss
sub
or
nop
je
lds
popa
das
fstp
jg
cmp
stos
and
mov
arpl
(bad)
mov
cwde
mov
movs
imul
pop
movs
push
xlat
icebp
pop
jb
ds
mov
adc
pop
stos
iret
jecxz
sbb
cmp
leave
jecxz
das
mov
xchg
and
fild
xchg
adc
jmp
stos
pop
inc
daa
popf
cmps
pop
sub
cdq
lahf
rol
push
jne
jnp
mov
mov
je
das
or
xchg
or
ss
(bad)
dec
lahf
sti
pop
fs
(bad)
cmp
movs
nop
mov
cmp
dec
push
sti
fisub
clc
sbb
dec
dec
(bad)
and
jecxz
pop
add
cdq
inc
int3
lods
lock
add
retf
xchg
icebp
stc
pop
sar
push
push
test
out
lds
and
xchg
jmp
sti
cs
push
mov
(bad)
jmp
mov
add
scas
mov
mov
adc
cs
out
xor
inc
fdivr
call
aad
sub
add
sahf
pop
call
or
adc
mov
xchg
lods
imul
imul
mov
rol
push
xchg
test
sub
or
mov
rcr
dec
dec
and
pusha
xlat
mov
inc
je
mov
mov
lds
imul
sub
sbb
push
jnp
aas
(bad)
xor
mov
retf
mov
inc
sbb
in
(bad)
xchg
enter
cmp
lods
pop
iret
or
es
cmps
jg
jmp
sub
and
xchg
idiv
mov
das
xlat
popa
xchg
mov
adc
push
pop
outs
(bad)
call
lock
scas
inc
pusha
sbb
(bad)
rcr
push
adc
and
or
mov
add
stos
imul
or
inc
mov
in
mov
xchg
cs
outs
and
pop
cmps
imul
rcr
pop
pop
dec
jecxz
push
dec
pop
mov
retf
(bad)
pop
addr16
test
shl
mov
sbb
pop
dec
test
mov
(bad)
ja
mov
iret
sbb
cmc
inc
xchg
pop
lahf
psubd
and
mov
je
add
inc
pop
(bad)
adc
clc
lods
not
xchg
lods
aas
cmps
sbb
dec
inc
add
loopne
(bad)
stos
das
int3
test
aas
pop
jnp
mov
cmc
jbe
(bad)
xchg
cmp
dec
fwait
add
ds
mov
stos
(bad)
xor
imul
mov
push
dec
push
jnp
pop
popf
(bad)
(bad)
sbb
jnp
push
jmp
fsubr
jg
lahf
jecxz
jp
xor
stos
les
movs
cmp
iret
dec
and
xor
fnstcw
ret
retf
sub
mov
push
aas
sbb
test
fiadd
pop
neg
xchg
xor
movs
pushf
fnstenv
cld
sbb
dec
std
mov
inc
sbb
xchg
dec
das
int
test
pop
pop
adc
scas
mov
iret
mov
mov
jl
in
mov
xchg
sbb
js
aas
dec
pop
xchg
in
cmc
push
mov
jo
inc
fldcw
icebp
sbb
jae
pushf
dec
dec
in
mov
mov
ror
push
or
adc
mov
scas
xor
arpl
or
(bad)
sbb
and
pop
mov
mov
daa
sti
ror
ins
call
sbb
retf
pop
mov
ins
dec
repz
xor
je
(bad)
or
sub
ret
popf
sub
jnp
aaa
jnp
pop
and
mov
out
cmp
add
pop
inc
cwde
xchg
ss
sub
jae
adc
sbb
mov
mov
inc
sbb
sti
jg
mov
jl
ja
add
arpl
mov
(bad)
jge
outs
xor
ficom
adc
(bad)
in
and
push
inc
and
xchg
mov
xchg
mov
imul
push
fiadd
pop
in
or
adc
loope
adc
rcl
mov
sub
mov
cmc
icebp
div
xchg
sbb
je
cmps
into
lea
and
ss
sbb
loopne
or
xchg
xchg
call
jge
sbb
fsub
mov
cmp
dec
les
leave
push
sub
cmp
js
std
dec
mov
inc
add
or
stc
and
sub
(bad)
push
jp
add
hlt
jns
jg
and
pop
lds
fucomip
mov
sbb
or
jg
mov
sbb
xor
jmp
jl
loope
or
loop
mov
or
popf
mov
icebp
sub
push
cmp
or
mov
lods
and
test
jo
loopne
or
retf
xchg
sub
(bad)
mov
add
jns
mov
loope
jns
inc
xor
lods
loop
pop
push
lock
aaa
gs
or
js
fcompp
mov
sbb
(bad)
lods
push
cmp
mov
in
and
push
push
fist
mov
xchg
inc
ss
mov
scas
adc
sar
jecxz
xchg
call
cmp
cdq
loopne
fisub
mov
and
adc
push
test
int3
pop
inc
hlt
shl
cmp
jno
movs
stc
pushf
js
add
dec
loope
or
(bad)
pop
leave
sub
dec
adc
enter
popa
dec
int
cmp
into
lock
shl
rcr
and
jne
jp
in
mov
sub
fld
mov
jp
arpl
mov
cmp
into
int
add
and
mov
loopne
xchg
add
ret
repnz
pushf
cmps
into
sub
mov
and
jne
mov
fs
movs
outs
fild
icebp
aaa
movs
sub
push
loopne
sbb
sar
push
aas
pop
cli
sub
inc
mov
bswap
cs
pavgw
mov
enter
pop
ins
fild
nop
and
jg
adc
lds
fiadd
xor
jmp
sbb
sub
(bad)
mov
jne
bound
in
push
out
push
mov
push
cmp
mov
out
dec
jecxz
mov
outs
jno
mov
sbb
pop
mov
xchg
(bad)
cmp
mov
pop
retf
push
pop
and
leave
test
xchg
push
dec
or
(bad)
xlat
jg
mov
test
pop
push
ret
in
inc
mov
jmp
loop
fsub
std
jecxz
popf
add
addr16
bound
sbb
or
inc
rol
in
and
fnsave
push
clc
jg
cmp
dec
pop
in
sub
jmp
fistp
jns
or
nop
jge
lock
xor
rcr
or
mov
push
fnstcw
mov
popa
stos
mov
sub
dec
inc
mov
aas
cmc
xchg
shl
outs
mov
xchg
bound
mov
movs
aas
mov
adc
pop
xchg
or
mov
sub
mov
iret
popf
pop
ins
pop
cmp
jns
cmp
enter
test
aam
cs
mov
xchg
push
mov
xchg
bound
mov
fimul
fbld
cli
dec
xchg
xchg
test
das
aad
xchg
stos
inc
push
mov
push
lahf
out
mov
add
inc
jmp
pop
les
div
and
inc
outs
nop
adc
jl
sub
scas
dec
xchg
inc
or
and
push
pop
movs
fwait
lock
dec
sub
dec
pop
in
pop
dec
push
rcl
cmp
js
mov
lods
out
stc
lods
xchg
ins
mov
jge
pop
popf
fidivr
sbb
push
cs
pop
xor
popa
xor
xor
mov
inc
icebp
mov
movs
add
(bad)
mov
jo
arpl
and
cli
sahf
imul
mov
sbb
out
test
pop
inc
int
mov
cmps
cli
push
sbb
push
in
xor
xchg
sub
shl
dec
inc
mov
mov
mov
xor
ins
or
popf
dec
cmp
in
add
adc
mov
loopne
mov
mov
inc
mov
push
ret
lods
xor
imul
repz
pop
or
ds
aaa
fucomip
or
and
xor
jns
arpl
dec
dec
inc
test
adc
mov
and
dec
ficom
push
jbe
ins
out
stc
inc
pop
js
pop
xchg
mov
jg
pushf
dec
mov
mov
and
xor
sbb
jmp
outs
jge
mov
and
loopne
sub
les
jne
inc
aad
sti
fs
sub
xchg
push
mov
mov
inc
stos
mov
or
add
mov
out
xchg
pop
fcom
ret
inc
dec
pop
xchg
movs
jae
int3
inc
or
inc
cmp
ds
push
mov
sbb
in
mov
and
outs
data16
sub
aaa
jmp
into
dec
mov
dec
icebp
mov
jo
pop
lea
adc
data16
scas
ins
cmps
sbb
cli
sub
and
adc
sar
mov
pop
cmc
jo
stos
dec
sbb
xchg
icebp
or
push
or
ret
sbb
and
por
mov
xor
dec
test
in
cdq
retf
ins
out
xchg
cmp
(bad)
or
lea
ret
into
stos
mov
or
(bad)
leave
in
push
and
ja
and
inc
or
in
inc
movs
add
xchg
jmp
ficom
push
xor
xor
sub
or
aam
fbstp
int
jno
mov
inc
lahf
ins
stos
push
mov
outs
push
mov
and
jns
cmp
push
mov
mov
adc
mov
repnz
aas
cmp
clc
or
mov
adc
stc
push
mov
mov
jbe
push
inc
push
xor
out
mov
enter
sbb
adc
jg
cmp
inc
push
xlat
or
sub
lods
mov
adc
sub
loop
movs
jne
scas
pop
mov
inc
scas
popa
pop
lea
jno
nop
cmps
mov
pushf
sub
das
cmp
cwde
xchg
cwde
sbb
mov
jnp
dec
ret
ss
pushf
dec
dec
xchg
fs
push
ds
leave
mov
in
pop
cwde
or
adc
pop
jmp
cmp
lods
in
test
(bad)
mov
push
fisttp
dec
aam
cdq
lds
sti
sbb
mov
retf
and
(bad)
adc
ss
inc
loopne
push
test
and
shl
cmp
mov
jae
sub
mov
les
mov
sti
mov
mov
cmp
loopne
mov
inc
and
out
cmps
sbb
mov
push
es
fisub
pop
sbb
leave
and
data16
test
repz
cmps
jnp
popa
(bad)
mov
retf
jg
es
sbb
scas
dec
adc
push
xchg
xchg
xchg
jge
ja
out
int3
ins
cs
retf
jo
ins
sub
jl
mov
retf
pop
out
imul
call
mov
xor
jle
retf
mov
ss
xor
ror
jmp
scas
lea
dec
daa
or
xchg
dec
jns
jmp
xlat
mov
mov
clc
loopne
std
fdiv
pop
in
test
(bad)
shl
sub
outs
cmp
je
push
add
aam
mov
test
nop
cmp
mov
mov
inc
call
xchg
pop
mov
aas
aaa
xor
and
fidivr
(bad)
fdivr
sbb
inc
sub
mov
es
ins
(bad)
mov
mov
cli
mov
push
sub
loop
sbb
sbb
add
cmps
(bad)
mov
xchg
mov
loopne
out
sar
cmp
cmp
mov
jne
sub
mov
cmc
mov
xchg
mov
inc
aas
retf
int
or
shl
ficomp
(bad)
sbb
mov
in
cmc
inc
inc
daa
vmwrite
jmp
adc
jne
sbb
imul
push
mov
fcmovbe
nop
mov
int
pop
popa
cmps
mov
stos
ficom
mov
hlt
jle
jg
jl
mov
mov
push
push
dec
cmp
or
push
xchg
jbe
ret
mov
(bad)
cmp
stc
inc
jg
mov
cs
mov
daa
xchg
sub
push
int
test
leave
test
adc
fmul
push
push
inc
sub
inc
imul
or
imul
scas
pusha
fcmovnb
out
nop
nop
aad
icebp
jecxz
loop
xchg
jmp
push
cli
inc
mov
xchg
jecxz
xlat
cmp
fnsave
or
inc
nop
mov
js
pop
push
cmps
sub
ret
scas
cmp
dec
push
push
sahf
das
cld
mov
das
sub
aaa
sar
sbb
in
and
sbb
pop
in
out
push
(bad)
fsubr
xor
popa
jae
nop
scas
leave
jp
dec
mov
scas
ss
mov
inc
jmp
rep
lds
mov
push
or
fld
sahf
(bad)
add
scas
mov
xchg
or
jecxz
out
call
cmovno
or
xchg
aaa
xor
sub
dec
cwde
xchg
inc
out
in
add
jo
nop
adc
pop
cmp
test
mov
add
jmp
movs
into
jo
mov
xchg
popf
sub
mov
movs
mov
or
imul
scas
dec
xchg
aaa
cwde
xchg
cmp
mov
pushf
push
push
sbb
sub
rol
jmp
cmps
pop
sar
rcl
push
cmp
mov
or
xor
mov
call
cmp
fimul
pop
xchg
cmp
inc
or
pop
ins
sub
arpl
mov
ja
loopne
lock
xchg
add
pusha
in
lahf
fwait
mov
xor
call
cmp
dec
mov
retf
jae
cmp
adc
add
out
call
(bad)
adc
pop
call
jge
aaa
pop
retf
mov
cli
adc
xchg
jbe
fimul
retf
sub
mov
push
push
jae
or
mov
fdivrp
and
das
push
dec
mov
ficom
xchg
cmp
dec
test
lods
sbb
mov
xchg
dec
xor
push
cld
test
fldcw
push
out
pop
aad
jmp
xchg
dec
(bad)
in
fidiv
fisttp
icebp
mov
dec
jne
push
jmp
jno
pop
aas
and
arpl
cmp
inc
cmp
xchg
imul
jno
mov
pop
pop
dec
mov
mov
inc
jmp
les
sub
dec
data16
scas
imul
sub
cdq
push
push
aam
and
dec
pop
jnp
aaa
dec
imul
ja
mov
add
mov
inc
int
xchg
dec
xchg
sbb
inc
cli
cmp
pop
mov
inc
in
inc
icebp
repz
xor
movs
not
mov
push
je
mov
mov
pop
push
jmp
xor
dec
inc
inc
and
jo
push
push
(bad)
sbb
and
in
(bad)
(bad)
or
mov
mov
std
fxch
lods
push
jns
jge
aam
mov
in
sbb
jmp
dec
pop
nop
outs
iret
(bad)
addr16
pop
movs
sbb
aaa
ret
cli
aas
outs
jp
rcr
cmp
sbb
popa
popf
icebp
in
pop
xor
lds
mov
in
fprem1
inc
scas
cmp
push
xor
ror
inc
test
push
push
pop
das
ins
ins
ss
mov
not
xchg
arpl
addr16
mov
xchg
and
mov
test
push
ins
fcomp
mov
mov
pop
repnz
mov
adc
test
jmp
inc
je
xlat
mov
mov
mov
test
push
in
mov
or
retf
dec
test
pop
and
and
or
aad
jae
cli
leave
jae
adc
(bad)
xchg
imul
out
xor
push
adc
(bad)
jbe
and
jnp
mov
lods
pop
(bad)
dec
xlat
jo
jg
mov
pop
repnz
outs
pop
fs
fcom
sub
mov
or
jp
(bad)
jle
dec
pop
or
mov
sahf
stos
pushaw
mov
dec
(bad)
addr16
push
xchg
push
xchg
(bad)
jns
xchg
or
or
std
pop
pop
or
add
out
cmp
sbb
dec
sub
pop
or
pop
frstor
xor
icebp
data16
ret
nop
and
dec
outs
cmp
cdq
lea
push
xor
std
std
stc
dec
pcmpeqb
fbld
mov
popa
add
fwait
or
das
rol
xchg
into
iret
mov
scas
mov
shr
outs
push
and
aaa
mov
sbb
std
cmps
mov
jne
(bad)
repnz
jl
jge
add
xor
mov
pop
fcmovu
xchg
shl
lock
nop
lahf
jno
bsr
xor
push
dec
and
pushw
sbb
xchg
pop
sbb
(bad)
sar
fidiv
mov
test
pop
aam
xchg
ror
or
inc
out
add
pop
cmc
aam
mov
and
mov
(bad)
jbe
loopne
sti
and
loopne
test
xchg
sbb
int3
mov
cmp
or
int3
mov
add
(bad)
fild
jg
ins
rcr
iret
imul
mov
ret
push
jp
sub
xchg
dec
repz
sub
arpl
jmp
lods
push
fdivrp
or
jle
and
jge
popf
fstp
dec
and
ja
aas
pop
dec
xchg
cs
sbb
inc
or
jno
fwait
pushf
mov
gs
dec
inc
das
push
lea
ins
cmc
xor
popf
pusha
xor
dec
aaa
arpl
pop
sbb
xchg
dec
popf
(bad)
(bad)
scas
arpl
add
push
mov
sbb
xchg
jmp
(bad)
mov
(bad)
outs
inc
push
and
cmp
or
adc
loop
ret
je
mov
xchg
js
or
ret
loope
ficom
and
dec
cld
xchg
imul
adc
dec
cmp
jne
aas
mov
popf
dec
jo
fs
mov
cdq
cmp
xor
ins
shr
int3
das
gs
add
(bad)
sahf
repz
xor
aad
in
and
jno
cmp
mov
dec
xchg
ds
or
or
cmps
ss
push
repz
xor
ss
ret
cmp
mov
and
mov
das
lahf
sbb
pop
movs
sbb
das
mov
cmp
push
test
add
xor
jg
inc
and
xchg
or
test
push
repz
idiv
push
cmc
repnz
jmp
jg
int3
fisub
push
inc
ja
out
test
push
cmps
out
add
ror
movs
push
mov
jg
inc
mov
mov
pop
mov
aam
aaa
push
jp
aas
dec
jno
aas
jmp
push
fist
mov
xchg
sub
cmc
xor
gs
lods
loop
or
mov
xlat
xchg
sbb
dec
inc
sub
pusha
iret
or
dec
and
int
fcomp
xor
gs
mov
stos
xchg
mov
jl
xor
add
add
or
in
out
xor
or
sub
sub
xchg
ja
loop
shl
inc
lea
repz
add
xor
lock
pop
pop
cmp
adc
adc
ja
xor
jg
adc
(bad)
adc
sub
cmp
add
push
out
adc
fist
aad
push
cmc
jb
ds
mov
bound
and
dec
inc
daa
push
xor
mov
sbb
imul
in
xor
push
jmp
mov
mov
iret
icebp
(bad)
pusha
sbb
out
sti
(bad)
mov
mov
mov
mov
in
sub
adc
push
arpl
gs
rcr
fstp
push
push
es
(bad)
fimul
aam
xchg
dec
cs
and
mov
push
jne
inc
les
hlt
inc
xor
test
std
aam
adc
cmp
cmp
dec
fstp
data16
out
(bad)
xor
push
jmp
mov
hlt
mov
outs
je
push
outs
js
push
test
mov
jbe
cmp
adc
jp
ins
in
sub
mov
aad
xchg
pop
sbb
xchg
add
adc
mov
cmp
add
pop
sti
call
pop
inc
ret
push
pop
xchg
mov
pop
adc
into
nop
gs
push
into
in
cmc
lahf
fsubr
lods
jne
sahf
stos
sar
push
jne
iret
dec
or
adc
(bad)
sub
cmovle
stos
loop
push
xchg
fist
mov
sbb
cli
and
xor
jo
inc
int
add
gs
push
add
sub
inc
jecxz
cwde
and
outs
stos
cwde
test
sbb
sub
movs
adc
push
mov
inc
repnz
out
sub
dec
(bad)
lods
(bad)
mov
mov
push
and
paddw
mov
(bad)
(bad)
lods
enter
fst
(bad)
in
nop
sbb
lldt
xchg
jae
mov
dec
pop
mov
jb
xchg
mov
leave
add
or
scas
push
sub
in
je
fimul
or
sbb
push
mov
mov
adc
mov
pop
sbb
push
stos
ret
cmps
xchg
jb
fistp
ins
mov
mov
xchg
mov
leave
xor
imul
outs
mov
inc
sub
into
imul
gs
in
pop
mov
push
pop
cli
in
iret
pop
repnz
(bad)
mov
sti
and
pushf
dec
jo
pop
pop
adc
adc
cwde
and
cmp
cmp
push
cdq
test
sub
mov
lods
sub
daa
mov
xchg
jmp
mov
jmp
das
test
xor
loop
pop
mov
mov
test
and
cmp
cs
xlat
push
retf
jo
mov
fwait
pop
stc
push
cmc
call
shl
pushf
aas
sbb
gs
aaa
lods
xor
inc
stc
push
mov
(bad)
daa
(bad)
cmp
sub
xor
jl
cmp
dec
add
(bad)
jl
adc
mov
lods
rcl
lock
mov
xor
sub
ins
popa
leave
(bad)
lods
mov
push
or
ins
lods
lds
mov
ds
into
les
cmps
pop
(bad)
mov
push
or
ss
xchg
pop
push
add
int3
add
pop
out
xchg
jge
adc
mov
(bad)
sbb
push
les
dec
rol
call
imul
test
pop
sub
cdq
jnp
or
aas
mov
and
ror
push
mov
mov
sbb
push
stos
adc
jnp
pop
stos
and
popa
out
adc
lock
xchg
fimul
mov
push
in
dec
rcl
lods
push
cwde
(bad)
mov
xchg
jae
or
mov
lock
fld
and
fist
(bad)
push
jno
outs
jno
pop
cmps
outs
mov
clc
inc
popf
fs
xchg
(bad)
mul
jbe
mov
or
(bad)
cli
and
cmc
push
sbb
xchg
xchg
loopne
hlt
inc
mov
cmc
dec
push
mov
mov
out
sub
popf
aas
push
lods
dec
enter
out
cmp
mov
retf
sbb
mov
mov
add
test
adc
sar
pusha
xor
xchg
adc
icebp
das
shl
fild
lea
mov
scas
cs
lahf
cmp
cwde
sbb
les
mov
xor
or
push
adc
jecxz
lods
cmp
mov
push
adc
dec
push
push
add
mov
inc
call
or
jno
xor
sub
cs
repnz
cmp
jne
xchg
(bad)
test
(bad)
inc
lods
add
je
aam
xor
ins
shl
rol
sub
adc
mov
daa
pop
ret
ret
mov
dec
les
leave
(bad)
add
mov
popa
pop
push
jno
add
test
push
dec
push
xchg
pusha
inc
mov
aaa
mov
sbb
sbb
push
add
inc
ins
pop
ret
or
rcl
dec
dec
push
jmp
add
xchg
pop
add
mov
push
call
dec
imul
add
xor
mov
fldcw
arpl
inc
jecxz
adc
push
xchg
repnz
mov
cmp
clc
xchg
jle
iret
je
aas
shl
adc
push
inc
mul
repz
cmps
inc
xchg
sub
inc
std
add
sub
xor
fimul
ds
pop
jg
jmp
bound
inc
or
mov
fimul
das
add
mov
out
xor
add
mov
outs
pop
fisub
popf
pop
(bad)
pop
cmp
or
shl
push
retf
inc
adc
pop
pusha
repnz
movs
(bad)
ret
clc
cs
mov
push
daa
inc
stos
mov
sub
mov
adc
add
dec
and
ins
stc
bound
out
(bad)
cmps
retf
sbb
imul
add
jbe
(bad)
out
out
adc
mov
jbe
dec
mov
inc
pop
(bad)
fdivr
lahf
lea
or
retf
mov
sbb
or
je
mov
sub
dec
xchg
xlat
sbb
mov
pop
add
fwait
push
mov
add
daa
add
mov
jae
jmp
jmp
or
(bad)
imul
aaa
sahf
loop
or
sbb
daa
xchg
jmp
cs
test
stos
jae
jmp
mov
push
xor
cmp
push
fnstsw
jns
adc
int3
dec
or
push
and
(bad)
cmps
cmps
jnp
sub
call
test
cmp
push
pop
push
xor
stos
cli
fst
scas
cmc
dec
test
stos
nop
mov
xlat
int
add
inc
sub
outs
retf
ret
call
xor
xchg
and
xchg
xor
lods
inc
stc
mov
sahf
leave
shl
out
sahf
dec
inc
out
push
sub
pop
mov
xor
outs
iret
adc
cmp
cmp
sahf
add
pop
mov
sahf
add
and
mov
xchg
ins
in
test
pop
add
mov
xor
test
shr
inc
and
jns
inc
cmp
xchg
out
fiadd
jp
xor
lods
dec
xchg
push
inc
and
(bad)
leave
jbe
xlat
fisub
cmp
(bad)
dec
cli
sub
mov
add
ret
pop
push
and
cmp
into
out
xor
sti
fiadd
pop
sub
in
pop
aam
mov
sub
pop
jne
leave
sti
ficom
mov
jge
push
cmps
es
fdivr
fisub
retf
cmp
mov
cld
mov
jbe
push
xor
inc
or
jecxz
icebp
retf
or
add
jo
mov
dec
adc
call
stos
mov
xchg
or
push
sub
ins
dec
inc
mov
lock
sbb
push
in
loope
aaa
push
inc
rcr
mov
mov
daa
jp
cmp
loope
sub
inc
gs
aas
cmp
jae
test
iret
aas
test
out
mov
mov
xor
mov
push
xchg
std
pop
cmp
add
sub
cmp
add
ror
ss
imul
mov
mov
rcl
fidivr
push
jge
mov
xor
xor
pop
in
cmp
push
aaa
or
add
fisubr
and
sub
push
push
push
movs
rol
inc
rcr
movs
ins
ret
jecxz
inc
sub
in
js
mov
in
test
sbb
gs
imul
jge
lahf
leave
sub
mov
leave
pop
test
add
bound
ror
push
cmp
std
out
sub
out
outs
cs
adc
lds
jne
mov
pop
pop
and
sahf
fs
stos
mov
pop
pop
mov
cmp
pop
dec
sti
dec
ss
test
(bad)
sub
adc
paddw
sbb
gs
cmc
cmc
into
mov
in
jg
pop
mov
fst
xchg
cli
jecxz
mov
mov
adc
repnz
pusha
cli
xor
ins
int3
jbe
in
sub
or
adc
rol
inc
cld
xchg
or
sub
mov
or
bound
leave
xchg
ficom
aad
mov
pop
call
data16
mov
lods
movs
cli
out
std
lds
fild
dec
sub
pop
fadd
inc
lods
or
adc
out
(bad)
cmp
jmp
stos
std
mov
or
sahf
inc
stc
dec
popf
jp
push
loope
imul
std
mov
cmp
daa
nop
imul
pop
ins
push
popf
pop
dec
jae
(bad)
loop
adc
imul
out
pop
bnd
inc
in
aas
sub
mov
repnz
pusha
inc
pop
adc
or
in
fs
fs
aaa
fstp
movs
sbb
dec
add
fs
stos
lea
xchg
mov
mov
je
sbb
pop
and
in
mov
push
je
sbb
mov
stc
enter
and
outs
push
or
pop
sub
add
cdq
test
cmp
(bad)
das
rcl
jl
loop
push
jo
sar
call
mov
outs
mov
cmp
in
cs
int3
imul
retf
push
test
inc
push
xchg
nop
lea
sub
jge
mov
in
test
sub
ins
(bad)
int
clc
int
iret
cdq
xchg
add
jns
data16
call
scas
movs
in
es
js
adc
cmp
loope
cs
adc
rcr
lock
js
jmp
mov
repz
lahf
loope
xchg
mov
dec
pop
mov
pop
pusha
mov
cmp
xchg
aas
arpl
cmp
test
rcl
aas
push
adc
sub
ins
aad
std
mov
enter
imul
retf
(bad)
cli
call
fwait
dec
mov
fs
push
mov
(bad)
pusha
add
iret
add
mov
cmp
xlat
inc
data16
xchg
outs
fild
pop
sbb
adc
dec
cmp
shl
and
jmp
movs
jl
jge
dec
jge
mov
lods
test
dec
(bad)
cld
dec
repnz
mov
sub
adc
adc
xchg
mov
push
nop
loopne
adc
aad
jbe
(bad)
int
(bad)
jmp
call
xchg
xor
mov
cmp
lahf
sbb
sub
inc
repz
mov
xchg
and
push
movs
repz
mov
and
xor
push
dec
add
retf
add
mov
mov
jbe
repnz
pop
or
mov
cld
pop
push
sub
push
mov
pop
in
and
into
fst
pop
sub
fisttp
mov
aam
stc
cli
mov
add
sbb
pop
dec
mov
or
or
xor
in
sbb
cmp
add
mov
mov
xor
ja
cmp
out
fldcw
cmp
mov
adc
pop
cwde
or
test
mov
and
rcr
or
mov
shl
repz
neg
imul
adc
neg
push
pop
jg
push
xor
test
and
call
in
test
xchg
push
out
jp
mov
int3
mov
fs
rol
(bad)
stos
frstor
retf
dec
stos
(bad)
aaa
scas
sbb
or
xchg
cmp
or
rcr
adc
dec
and
pop
pop
add
sub
jbe
lds
in
inc
dec
xor
inc
test
mov
sbb
psubusb
mov
jl
lods
xlat
test
ds
mov
sahf
mov
xor
ds
cmp
xchg
movs
cs
rcr
inc
jmp
or
jl
lds
and
(bad)
or
sub
gs
das
sub
int
jns
das
jp
xor
int
lods
js
add
adc
scas
lods
jne
inc
fst
mov
cmps
ds
mov
mov
test
sub
add
test
push
out
les
fcom
xchg
psubusw
sti
push
cmp
or
das
inc
unpcklps
push
rol
add
in
out
retf
cwde
xor
cli
ja
cmc
adc
into
inc
(bad)
mov
push
sti
jmp
jmp
(bad)
or
test
xchg
mov
cld
jecxz
jmp
xchg
and
jns
(bad)
ds
sti
enter
push
lds
sbb
cmps
pop
sub
arpl
jle
jg
aad
aas
cmp
pusha
addr16
aad
sub
and
call
ret
inc
cmp
aas
js
pop
dec
and
inc
sbb
pop
jne
imul
adc
ret
mov
adc
or
cdq
inc
leave
mov
or
cmp
and
pop
sahf
xchg
cmp
not
mul
sub
xchg
sbb
out
sahf
in
iret
inc
dec
and
cmps
pop
rol
inc
ins
sub
and
jo
or
lock
xchg
loopne
and
mov
shr
es
popf
stos
(bad)
mov
adc
fsubr
sbb
push
push
jae
or
(bad)
(bad)
pop
mov
adc
push
test
jmp
mov
jg
adc
lds
mov
cmc
sbb
maxps
jns
add
fs
sub
daa
repz
add
sub
retf
adc
in
adc
sub
pop
add
push
xor
(bad)
dec
xchg
outs
sbb
push
dec
shr
shl
pop
mov
inc
in
(bad)
aas
mov
dec
std
int
add
jne
mov
(bad)
stos
int
stos
movs
(bad)
dec
fiadd
mov
int
(bad)
jns
movs
dec
lods
add
add
push
(bad)
arpl
push
ret
(bad)
repnz
cdq
ret
inc
das
out
test
add
jno
fld
test
dec
idiv
into
inc
push
stos
jg
jg
add
or
mov
jge
jnp
sbb
sti
pop
adc
jb
int3
inc
xchg
loope
xor
dec
mov
in
fisubr
push
xor
in
cmp
(bad)
(bad)
jo
iret
mov
xlat
nop
adc
pusha
jge
test
stos
push
inc
add
sar
dec
ret
(bad)
and
pop
cli
fsub
pop
ret
fstp
inc
dec
imul
sub
daa
push
push
mov
sub
sahf
pop
out
and
mov
or
inc
inc
(bad)
jg
mov
js
mov
add
push
adc
(bad)
clc
jmp
into
mov
inc
mov
push
ins
jbe
movs
dec
mov
jecxz
sub
xor
(bad)
cmp
and
dec
jne
mov
aaa
int3
adc
popf
jno
pop
sbb
stc
sar
clc
shl
in
inc
pop
dec
call
aaa
ja
les
mov
mov
and
jne
shr
bound
retf
stos
cmc
sub
(bad)
pop
xor
scas
fs
inc
lea
movs
push
dec
push
xchg
loopne
jl
cmp
aaa
shr
push
dec
push
hlt
sbb
and
and
outs
rcr
pop
mov
push
jb
rcl
jmp
xchg
sub
repz
pushf
fnstsw
xor
mov
cmp
push
pop
xchg
test
xchg
popf
cmc
int3
loope
dec
push
xor
imul
enter
lods
push
push
or
or
icebp
iret
jmp
inc
push
dec
repz
das
push
arpl
fidiv
test
shl
fnstsw
adc
out
stc
xchg
jbe
(bad)
pop
rol
jmp
jae
jle
xor
adc
xor
inc
dec
xchg
ss
js
popa
mov
ret
push
sub
mov
and
int3
dec
cmp
pop
inc
cmp
mov
push
xchg
lods
or
retf
icebp
add
loope
push
pop
out
ss
xchg
jmp
mov
lock
outs
into
cs
mul
cwde
inc
mov
js
xor
movs
push
mov
push
adc
pop
retf
add
inc
adc
push
mov
lahf
loopne
sbb
cmp
idiv
jbe
ja
mov
out
mov
xor
dec
retf
into
mov
sub
(bad)
loop
aad
pop
push
adc
cwde
lea
mov
mov
mov
mov
lods
xor
push
jns
xchg
dec
mov
cli
push
or
jl
jno
fadd
loope
xor
ins
pop
jb
xchg
and
sbb
les
xor
mov
mov
sbb
inc
imul
sbb
mov
mov
jno
outs
aad
sbb
push
cld
or
pop
aam
nop
dec
adc
clc
jecxz
mov
fcom
sbb
xlat
mov
fdivrp
ins
clc
int
cld
mov
xor
mov
or
and
aaa
imul
hlt
stc
(bad)
scas
xor
adc
test
xor
cmp
loopne
scas
pop
inc
jle
inc
dec
test
cmp
ins
icebp
mov
out
sar
sub
jo
mov
fbstp
in
aaa
jae
call
(bad)
adc
popa
cs
bound
cmc
sbb
push
movs
movs
lock
xor
fsubr
inc
cwde
sahf
mov
add
sub
and
repz
adc
test
stos
outs
and
cmp
pop
out
sahf
arpl
mov
jb
sbb
in
mov
push
cld
(bad)
lahf
les
xor
mov
inc
add
lods
outs
pop
fs
jbe
repnz
mov
lods
sbb
movs
dec
out
iret
adc
mov
and
in
dec
call
xchg
jo
mov
cmp
into
(bad)
sub
into
imul
cmp
fcmovnbe
jecxz
mov
pop
mov
jo
mov
test
in
(bad)
loope
jg
lahf
mov
cmp
pusha
fs
cld
sub
sbb
add
xor
or
test
and
call
wrmsr
mov
jns
mov
in
sti
(bad)
jmp
je
ins
fld
mov
push
push
mov
sub
fsubp
xor
push
push
clc
sbb
(bad)
xlat
xor
in
sahf
arpl
xor
(bad)
jle
stos
outs
jns
or
mov
mov
jnp
push
in
shl
test
je
inc
push
xchg
or
pushf
mov
div
push
cld
and
adc
shr
es
sti
lahf
dec
push
(bad)
cmc
mov
mov
enter
xchg
cmc
xchg
sbb
sbb
jecxz
nop
or
xchg
ja
repz
mov
and
jo
push
cmp
enter
repnz
outs
or
aaa
mov
in
mov
outs
cmp
imul
dec
sbb
(bad)
push
js
sub
popa
xchg
std
pop
sub
gs
aam
mov
mov
pop
add
arpl
pop
mov
aam
dec
xor
lock
push
inc
jno
mov
loope
dec
pop
fsub
sub
das
pop
sub
add
mov
loop
dec
sbb
xlat
jecxz
test
in
cld
out
retf
and
dec
movs
test
dec
nop
adc
jbe
push
sub
loopne
mov
aam
xchg
cmps
cmp
mov
mov
popa
xchg
nop
pop
xor
out
mov
cmp
sbb
popf
xchg
call
xor
add
pop
fiadd
sbb
repz
mov
aad
leave
and
add
in
pop
mov
push
jp
xor
xchg
test
add
stos
lahf
mov
push
(bad)
sbb
in
inc
mov
pop
adc
std
push
adc
mov
dec
xchg
in
or
mov
repnz
out
mov
mov
xchg
or
fidiv
pop
scas
outs
mov
and
in
or
jb
out
inc
fcom
cmps
cmp
cs
sub
jno
add
push
call
(bad)
rol
lods
xor
and
scas
retf
cmp
mov
xchg
xchg
xchg
lock
rcl
adc
mov
ds
popa
imul
stos
pop
test
mov
mov
int3
into
mov
retf
aaa
mov
cdq
dec
loop
div
push
nop
sub
and
cmp
adc
mov
push
test
cmp
loop
xor
sbb
inc
(bad)
repz
je
dec
jne
mov
fsubr
shr
jecxz
cmp
dec
mov
jp
jp
dec
push
lock
mov
adc
pop
test
lahf
xor
add
mov
push
aad
out
scas
fucomip
mov
(bad)
mov
test
push
cmp
fmul
fisubr
sub
outs
ror
jbe
jg
mov
mov
pop
movs
fwait
jg
pusha
(bad)
not
xor
and
xor
dec
and
in
mov
sbb
shl
inc
stc
pop
inc
mov
adc
aad
jmp
ret
mov
xlat
adc
ss
or
ss
xor
sahf
lods
out
push
push
mov
rol
fdiv
scas
mov
test
enter
push
idiv
jno
sub
cmp
xchg
sub
dec
call
add
cld
(bad)
ins
(bad)
and
sbb
(bad)
outs
inc
outs
xchg
scas
das
aad
stc
add
scas
sbb
rcl
ins
xor
cli
fs
push
lea
fs
div
ret
dec
int
xor
push
jle
shl
pusha
sti
repz
movs
sub
push
bnd
jg
sbb
adc
mov
clc
push
clc
mov
pushf
aam
mov
in
fimul
into
inc
jb
addr16
sbb
and
popa
jg
les
push
lea
pop
fstp
nop
mov
jb
std
dec
jae
jno
mov
cmps
push
call
jl
jns
xchg
and
mov
or
jno
les
popa
scas
pop
cld
adc
sbb
push
mov
inc
mov
in
pop
ror
in
ss
xor
adc
jmp
sbb
jo
ror
jecxz
loopne
adc
lahf
sti
imul
in
or
pop
shr
mov
imul
adc
xchg
lahf
push
call
push
jbe
add
stos
cmps
inc
mov
sub
std
test
mov
not
fsub
and
adc
sub
xchg
ret
push
add
mov
jp
adc
(bad)
(bad)
sbb
jne
sahf
out
cld
ins
mov
push
dec
sahf
cmc
sub
stos
sar
dec
mov
xchg
mov
lds
pop
ins
push
inc
das
pop
pop
es
add
mov
jg
push
out
cmc
frstor
movzx
bound
gs
call
loopne
inc
fst
push
push
jo
jle
xchg
int
es
mov
in
call
pop
sahf
in
xchg
mov
ins
inc
add
mov
sbb
sub
dec
ja
(bad)
in
pop
call
mov
(bad)
xchg
inc
test
pop
dec
retf
imul
and
out
je
loopne
fst
mov
clc
ja
pop
xor
xor
pop
in
setbe
sub
xchg
jp
jo
call
adc
mov
inc
mov
pop
mov
popa
push
or
xchg
outs
sti
scas
mov
sbb
pop
push
pop
and
nop
inc
in
and
fwait
xchg
out
sbb
and
or
sbb
fsubr
inc
jle
xor
loope
inc
outs
mov
or
adc
std
dec
pop
or
or
jnp
add
push
(bad)
jp
inc
aas
mov
or
mov
xchg
iret
jno
cld
mov
or
test
jge
push
sahf
stc
inc
aaa
pop
stos
dec
cmp
pushf
and
enter
repz
fisttp
cmp
cmp
xor
fcomp
sbb
fwait
idiv
cmp
or
popf
jge
out
retf
dec
sbb
xor
mov
add
cmps
sub
push
lock
xor
arpl
retf
ins
call
mov
jg
aaa
push
xor
cmp
and
ror
js
popa
popa
lds
fbstp
inc
sbb
in
mov
inc
adc
fs
and
push
add
jb
mov
mov
dec
sbb
sbb
test
cmp
in
rcl
lods
(bad)
ja
push
inc
inc
retf
cmps
mov
inc
popf
add
loopne
div
mov
rcr
sbb
rol
inc
xor
pusha
pop
push
or
xchg
mov
mul
or
in
mov
sub
xchg
pop
ins
mov
mov
retf
imul
mov
pusha
popa
out
jmp
gs
add
outs
dec
pop
dec
shl
dec
and
pop
fdivr
mov
xor
test
aaa
test
pop
push
push
add
xor
xor
jle
push
mov
mov
loop
arpl
xchg
mov
mov
inc
or
and
imul
ret
leave
scas
jg
xor
test
inc
lds
iret
out
repz
and
and
nop
xchg
lods
cmp
xchg
and
jecxz
xchg
or
movs
movq
adc
mov
(bad)
imul
iret
stos
mov
ss
lock
enter
and
mov
scas
int3
jno
sbb
stos
test
or
mov
push
cmc
push
jmp
adc
daa
mov
jmp
shl
mov
push
sub
adc
es
test
pop
jge
je
xchg
loope
xchg
rol
cs
sub
xlat
xchg
loope
cmc
in
xchg
cli
ss
dec
fdivr
xor
repnz
jmp
or
dec
lea
jp
(bad)
jl
inc
mov
sbb
sub
rol
pop
(bad)
fnstcw
jns
std
pop
push
ror
fst
jmp
jo
cmc
popf
ins
fld
repnz
cld
adc
ret
scas
scas
cmp
sbb
sub
jge
ficom
jge
push
test
popf
adc
gs
dec
push
rol
mov
aad
test
pusha
dec
dec
sub
and
mov
pop
cmp
mov
xlat
xlat
dec
repnz
ins
ret
hlt
lods
add
jmpw
dec
cmc
mov
jmp
cmc
out
mov
jo
mov
dec
pop
push
rol
inc
std
xor
js
pop
inc
xchg
push
outs
push
out
dec
mov
push
sub
das
mov
and
fidiv
ins
imul
retf
jecxz
lock
mov
sub
test
mov
inc
cmp
mov
in
mov
enter
mov
pop
sub
arpl
leave
mov
dec
inc
xchg
fsubr
dec
repnz
and
fcom
test
cmps
and
or
scas
add
(bad)
mov
(bad)
push
scas
out
repnz
mul
inc
adc
lds
iret
test
je
frstor
arpl
xor
leave
jne
add
test
inc
xor
(bad)
popa
test
movs
jecxz
adc
pop
pop
dec
loopne
add
push
adc
jbe
push
int3
ret
inc
cmp
mov
push
dec
jecxz
xchg
scas
cmps
jne
inc
out
fmul
(bad)
cmp
mov
rol
lds
js
cld
xor
and
or
adc
mov
fidiv
adc
pop
push
pop
push
sbb
sbb
(bad)
cmc
push
arpl
ins
push
fsub
ins
or
push
xchg
arpl
pop
mov
ins
sahf
or
mov
push
(bad)
rcl
aad
push
das
dec
fadd
xchg
mov
push
push
sbb
outs
mov
xor
ins
test
call
xor
sub
ds
and
call
xchg
lods
dec
(bad)
sub
inc
xchg
mov
inc
xor
inc
movs
jns
out
test
sti
rcl
jnp
in
mov
lods
jl
rcl
popf
xchg
sbb
xchg
jmp
pop
mov
ret
(bad)
pop
test
mov
aad
shr
cmp
leave
xchg
or
out
pop
shl
pushf
add
jbe
into
pop
mov
out
cld
mov
fnstcw
jmp
aas
std
aad
je
test
shl
sub
cs
loope
push
cmc
rol
int
fstp
adc
jne
loopne
push
ret
outs
push
jecxz
push
test
out
retf
add
pop
bound
fidiv
rcr
fwait
dec
add
cmp
xchg
call
imul
push
add
sub
fldenv
mov
pop
mov
xchg
into
test
mov
int3
inc
push
push
mov
lock
mov
sub
ret
popf
fisub
std
je
fstp
xlat
push
sbb
jo
shl
ret
retf
test
leave
nop
sub
mov
and
dec
scas
sti
ret
test
aam
int
sub
les
inc
adc
rep
fldcw
outs
pop
rcr
add
leave
(bad)
sbb
adc
in
enter
mov
data16
dec
push
pop
xchg
jae
rcpps
das
mov
jbe
jge
shl
xchg
dec
iret
ror
adc
fnstsw
enter
stc
and
push
int
js
pop
(bad)
test
lods
jle
lds
(bad)
movs
outs
jne
fcmovnu
inc
lds
sti
stos
and
mov
sti
jge
outs
(bad)
sbb
retf
xor
into
outs
pop
movs
xchg
jge
loope
sub
jns
cdq
shl
push
mov
mov
imul
lock
mov
pushf
test
ds
add
cli
pop
jge
out
dec
push
(bad)
jmp
mov
sub
jp
inc
sub
push
mov
cmp
dec
in
retf
adc
add
push
ins
arpl
and
inc
mov
retf
jmp
sub
mov
jo
push
bound
xchg
mov
fwait
push
lds
pop
jp
call
dec
xor
add
and
rol
cli
shl
adc
sub
cld
clc
jae
out
push
repz
or
and
mov
xchg
dec
test
out
lds
rol
jno
mov
fld
xchg
dec
out
adc
out
mov
push
push
cwde
das
outs
sbb
gs
mov
add
push
cmps
rol
sub
pop
pushf
aaa
leave
mov
pop
daa
jl
ins
xchg
stos
ins
or
and
dec
je
add
scas
lahf
fidivr
scas
mov
test
jbe
aas
ja
jno
ret
inc
or
shl
fadd
pop
inc
lods
mov
mov
adc
jl
push
arpl
dec
add
ins
adc
add
mov
and
adc
jmp
retf
fdivr
test
bound
pop
inc
mov
clc
dec
sar
mov
pop
scas
xchg
stos
add
adc
and
mov
mov
dec
xchg
adc
and
sbb
lea
movhlps
ds
adc
gs
xchg
and
mov
pop
and
cli
loope
or
sahf
jmp
sbb
adc
push
sub
(bad)
sub
aaa
fidivr
sbb
inc
adc
mov
jge
push
xor
push
loop
ret
push
or
call
lahf
pop
mov
fadd
xor
nop
jb
fadd
cmps
mov
rcl
addr16
rol
and
fnsave
cwde
out
inc
(bad)
sub
dec
dec
mov
sub
test
xcrypt-ecb
cmps
dec
cmc
ret
fisttp
add
push
sbb
es
mov
dec
repnz
xchg
sbb
adc
fidiv
in
and
push
sar
stc
or
sub
adc
movs
adc
push
lds
mov
pushf
repnz
push
dec
push
leave
mov
addr16
(bad)
push
ror
hlt
imul
dec
xor
mov
xchg
sub
aaa
mov
sbb
dec
movs
or
mov
test
cmp
arpl
xchg
imul
mov
pop
imul
leave
cwde
pop
nop
jle
dec
mov
inc
nop
cmp
je
aad
and
mov
loopne
xchg
pop
push
(bad)
mov
dec
inc
and
sub
adc
pop
push
xchg
fnstenv
pop
scas
xchg
mov
push
cdq
jge
jnp
xor
sahf
and
test
xchg
mul
push
ins
dec
lahf
test
push
pop
shl
in
clc
fs
xchg
scas
cmps
sbb
jp
push
aas
push
add
mov
cmps
(bad)
ds
cmp
or
adc
or
sub
jge
sahf
sbb
mov
(bad)
in
fadd
fidivr
out
and
cmps
lods
mov
sbb
stos
xchg
xchg
call
fld
(bad)
cs
or
scas
mov
pop
cmp
fnstenv
dec
mov
repnz
popa
dec
and
call
mov
add
daa
repz
mov
fsubr
mov
mov
adc
es
fisttp
inc
clc
and
dec
sahf
inc
pop
jne
mov
inc
or
fwait
sbb
(bad)
mov
stc
sahf
in
(bad)
aas
add
repnz
push
push
call
mov
sbb
ror
push
mov
std
in
fmul
addr16
xchg
ds
add
outs
ins
xchg
ds
jb
(bad)
retf
call
pop
scas
out
or
gs
retf
xchg
out
leave
xchg
pop
jb
movs
add
imul
mov
sub
ins
dec
out
xchg
or
dec
int
inc
lahf
scas
adc
or
ret
stos
(bad)
sbb
mov
call
outs
icebp
push
jmp
adc
sub
lods
xchg
div
sub
xchg
ret
mov
jge
add
xchg
sbb
jne
cmp
mov
ficomp
xchg
cmp
mov
sbb
cmp
jmp
cmp
adc
cs
adc
in
xchg
es
jmp
daa
outs
inc
mov
xor
inc
mov
sub
cmp
add
mov
ds
data16
imul
bnd
push
push
push
add
lock
jge
add
nop
cmp
xor
in
js
(bad)
push
pop
mov
mov
nop
aad
leave
dec
nop
out
retf
dec
pop
aam
xchg
addr16
xor
xor
rcr
test
mov
sub
inc
(bad)
jne
fcmovnu
inc
lea
or
adc
push
stc
stos
in
push
aam
xchg
stos
aam
xor
pop
aad
mov
sbb
iret
into
sti
xor
clc
jo
jo
popa
jmp
mov
jmp
scas
push
das
inc
add
sbb
imul
out
ins
loopne
jae
repnz
xchg
into
mov
cs
pop
lods
jb
lds
xchg
(bad)
adc
mov
lock
cmp
sub
fnstenv
pop
jb
sti
and
aam
fnstenv
mov
pop
mov
xchg
fwait
mov
adc
mov
mov
sbb
sar
push
idiv
aaa
loop
xor
hlt
adc
jmp
jae
jae
loop
jb
mov
sbb
ficom
ins
cmp
push
adc
jae
stc
js
in
xor
mov
inc
or
lds
aam
add
in
test
icebp
mov
neg
pop
fdivr
pop
mov
imul
cmp
or
mov
jecxz
call
dec
(bad)
rol
fldenv
xchg
addr16
mov
sub
jno
push
inc
imul
sub
jg
fadd
(bad)
and
ficomp
mov
movs
jg
ret
inc
push
test
adc
or
scas
std
adc
sbb
push
and
adc
retf
mov
shl
mov
ins
lods
jp
pop
or
xchg
pop
inc
mov
jle
loopne
or
sub
or
outs
sub
nop
shl
fld
inc
xchg
cmp
stos
loop
mov
int3
and
loopne
out
pop
push
fwait
mov
inc
dec
push
(bad)
hlt
(bad)
movs
inc
sbb
cdq
cmp
mov
mov
outs
xor
and
mov
push
lods
sub
mov
repz
retf
arpl
stc
mov
adc
les
(bad)
leave
ret
dec
clc
add
and
arpl
nop
xor
push
sbb
movs
pop
mov
cmp
sub
lods
test
adc
cld
bound
sub
inc
mov
mov
lods
lds
jecxz
or
dec
xchg
clc
adc
xor
xor
pmaxub
hlt
xor
test
push
sbb
test
cmc
push
or
pop
adc
cmp
mov
or
dec
or
pushf
jne
ins
js
inc
je
stc
popa
cwde
cmp
adc
or
loop
lahf
out
mov
sub
jecxz
xchg
cdq
pop
jns
xlat
cmp
xchg
sbb
jo
mov
outs
pop
and
mov
xor
pop
add
ds
jmp
dec
(bad)
stos
adc
jecxz
sub
lds
shr
fistp
imul
lds
jge
push
out
(bad)
jns
push
dec
xchg
push
ins
pop
sti
cs
scas
jbe
cmps
mov
mov
adc
sbb
cmp
(bad)
pop
add
xor
and
mov
sbb
pushf
leave
bound
clc
cdq
into
(bad)
push
or
jnp
loope
jb
push
sbb
cmc
hlt
rcr
lods
push
add
icebp
stos
xchg
inc
and
add
loopne
clc
out
sub
das
test
ficom
pop
adc
and
call
mov
lahf
xor
pop
fs
or
jns
(bad)
mov
pushf
jg
in
and
push
sbb
(bad)
ficom
outs
in
lss
dec
sahf
sub
adc
lods
ret
fsub
repz
mov
repnz
scas
push
cdq
mov
jg
ret
lods
pop
fucomi
add
daa
aaa
push
sub
shl
fdivp
add
imul
daa
mov
adc
ins
in
mov
lods
sbb
push
rol
jae
loopne
out
mov
dec
xor
xor
push
jp
or
scas
push
inc
jmp
jae
cmps
aad
mov
mov
xor
pop
movs
ret
mov
ja
ss
fild
push
lock
fs
cmps
bound
jl
lea
mov
mov
cmp
or
out
shl
adc
nop
push
inc
aas
adc
sub
sbb
dec
sti
xor
ret
mov
xlat
push
clc
jecxz
cmp
xchg
lock
sbb
mov
cmp
cmp
cmp
mov
mov
xor
inc
in
shl
test
jae
mov
shl
inc
sub
dec
(bad)
fs
mov
cmp
sub
aad
cmp
vpshld
aas
jmp
push
dec
in
xor
mov
je
shr
hlt
mov
inc
jo
mov
test
out
cli
lock
ret
aad
pop
and
lods
push
and
lods
shl
mov
lahf
les
adc
in
and
fcmovbe
sbb
ins
dec
outs
cmc
nop
test
pop
and
jle
mov
fdivr
cmp
pop
xlat
fs
cmc
mov
mov
cmp
sub
jmp
mov
pop
fcmovnbe
fdivrp
mov
cmp
ins
pop
bound
jmp
xchg
sti
mov
popf
mov
xchg
sti
in
sbb
inc
jecxz
fld
dec
iret
mov
mov
mov
(bad)
xlat
and
in
pop
jb
das
cld
lea
test
jns
inc
mov
jg
mov
outs
cmp
aad
scas
popf
add
movs
fisub
and
push
lods
enter
inc
arpl
pop
sub
push
mov
enter
imul
dec
jns
sub
fstp
pushf
sbb
xor
xchg
or
outs
jb
cmp
cmc
pusha
and
movs
jne
(bad)
(bad)
sar
out
xor
lods
xchg
(bad)
pushf
std
lock
inc
mov
inc
or
jb
mov
mov
rcl
push
scas
scas
mov
mov
mov
mov
cld
hlt
and
adc
and
dec
clc
rcl
dec
scas
inc
sub
stos
aas
xor
lock
mov
test
lea
mov
jae
out
scas
pop
sbb
sbb
enter
test
cmp
add
xor
xchg
ins
pop
dec
loopne
mov
or
or
fdivp
adc
inc
adc
push
stos
movs
nop
int3
(bad)
adc
rol
jecxz
mov
jae
cld
jno
fcom
fwait
out
inc
mov
rol
or
xor
xlat
scas
lea
sti
lock
nop
xor
sbb
stos
jl
ds
mov
xor
pop
into
mov
out
mov
out
push
and
sub
jb
or
js
lds
xchg
call
shl
xor
or
push
(bad)
mov
shl
pushf
jb
push
pop
mov
fbld
mov
rcr
cmp
fistp
mov
mov
jle
jg
dec
mov
adc
daa
rcl
xchg
pop
mov
add
jns
fidiv
es
xchg
dec
mov
idiv
xor
hlt
mov
pop
in
inc
fist
bound
cmp
das
inc
inc
ret
mov
pop
mov
jbe
ja
mov
je
jmp
dec
jl
sar
mov
mov
inc
cmp
push
push
inc
mov
addr16
shl
(bad)
(bad)
and
sbb
and
sti
push
nop
sbb
add
imul
sbb
mov
or
sub
pushf
icebp
iret
dec
mov
mov
jo
fnstcw
out
xchg
test
jns
pop
mov
fmul
shr
inc
pushf
ins
and
jle
jmp
fcmovnbe
stos
das
push
dec
rol
clc
jp
sub
xchg
mov
cld
add
cmc
jle
mov
cdq
js
popa
dec
add
sbb
scas
out
outs
sub
xor
movs
addr16
fist
mov
ins
fidivr
dec
(bad)
fcom
shl
xchg
ja
jecxz
sbb
mov
into
add
mov
fcmovb
adc
ficomp
inc
ss
xor
sar
repnz
lods
movs
jle
aaa
(bad)
push
xchg
push
jb
jns
sbb
xchg
pop
xchg
pop
js
icebp
call
and
push
mov
ja
mov
cmc
mov
iret
aaa
ss
addr16
mov
data16
les
or
fldenv
aas
aam
scas
test
or
imul
outs
mov
sbb
lds
sbb
cmc
push
repnz
shl
push
adc
sub
mov
pusha
loope
push
mov
xchg
mov
les
pop
inc
lods
movs
or
mov
push
xor
or
inc
not
(bad)
pop
clc
dec
mov
lods
adc
cld
mov
xor
ret
or
mov
mov
(bad)
jmp
out
mov
ss
pop
xchg
mov
cmp
jl
cmp
jb
nop
fisttp
cwde
inc
mov
and
jo
lea
pop
pusha
mov
sbb
adc
aam
add
ja
lods
popa
add
movs
pop
lock
sti
psrlw
addr16
not
xor
xor
(bad)
cmc
rol
add
pop
cmovle
aad
outs
jg
rcr
(bad)
mov
dec
jns
imul
popa
mov
fbld
test
pop
xchg
pop
mov
pop
inc
jp
xchg
iret
mov
mov
outs
add
mov
in
(bad)
ficomp
ds
fsub
daa
and
xchg
scas
inc
dec
rol
or
ficom
xor
mov
stos
or
sbb
sbb
xlat
cmp
xchg
gs
inc
xor
je
adc
mov
call
jge
rcl
sbb
movs
or
out
dec
sbb
test
xor
cli
popf
leave
pop
js
adc
mov
(bad)
fdivp
sahf
inc
and
add
xor
xor
retf
pop
sub
mov
xchg
jp
sbb
repnz
sbb
inc
jp
xor
jp
hlt
xchg
movd
bound
cmp
sete
push
and
pop
(bad)
jp
mov
fdivr
retf
mov
stc
add
dec
add
dec
xor
nop
mov
dec
sti
adc
jno
ror
lods
lock
pop
adc
jno
out
outs
mov
icebp
jne
test
or
fsubr
push
fistp
fist
cwde
push
and
fidivr
pop
pop
lods
jmp
add
fist
ins
and
sbb
push
pop
movs
push
nop
out
dec
jns
xchg
sti
inc
imul
add
test
mov
cs
mov
(bad)
sbb
bound
xchg
fsubr
mov
jg
bound
dec
jns
dec
mov
mov
daa
inc
add
sbb
lds
fnstcw
add
ins
sbb
call
xchg
or
pop
lods
xchg
push
add
xchg
pop
dec
out
xor
adc
dec
daa
xchg
mov
(bad)
aam
jae
pop
inc
dec
pop
jp
cld
dec
je
cmp
dec
add
jns
jle
and
daa
and
sub
out
xchg
clc
aad
fwait
add
pop
add
or
adc
cli
scas
and
sub
dec
mov
mov
ins
das
jmp
test
mov
push
pop
data16
inc
sbb
cmp
test
das
mov
fisttp
outs
mov
dec
(bad)
mov
push
push
mov
(bad)
(bad)
test
cld
cmp
or
jp
mov
jmp
sti
fist
test
mov
out
pop
pop
push
(bad)
pop
xor
repz
iret
addr16
mov
push
xor
sub
movntq
or
inc
(bad)
(bad)
out
mov
mov
arpl
xchg
rol
mov
rcr
xchg
and
enter
mov
jg
inc
dec
pop
jnp
xchg
(bad)
paddusb
outs
jmp
ret
adc
push
and
outs
lods
adc
daa
aad
aad
jb
jo
sbb
mov
cmp
mov
inc
test
(bad)
xor
jb
and
jl
mov
aam
inc
out
mov
stos
mov
pop
jnp
mov
dec
fs
scas
sbb
dec
dec
sub
jo
cdq
fwait
pop
push
mov
push
out
pop
into
ror
mov
adc
dec
add
lock
daa
sbb
mov
xor
jg
jmp
xchg
cs
cmp
mov
push
sub
sbb
mov
cli
popf
cmp
icebp
mov
enter
dec
xor
mov
lahf
stc
mov
fsubr
cld
or
pop
mov
popf
add
test
out
in
pusha
imul
jbe
xchg
aaa
pop
ins
sti
add
loope
cmp
pop
data16
mov
aaa
int3
sbb
bound
add
mov
int
dec
aas
push
div
push
repz
shl
cmp
pushf
and
movs
mov
push
inc
fwait
mov
adc
inc
out
sub
mov
dec
pop
cmp
mov
jnp
cmp
cmc
jnp
sub
mov
mov
and
sbb
pop
scas
aaa
sbb
jb
xor
jbe
scas
pushf
mov
cld
in
or
jmp
sbb
repz
jbe
lods
xlat
cmps
mov
jp
cld
jmp
xchg
push
icebp
push
mov
jbe
push
jne
xchg
cmp
sbb
sub
fistp
mov
mov
jno
jge
in
aaa
and
cmp
jp
pop
sub
pop
sahf
push
cmp
lea
jno
loop
pop
push
je
out
and
inc
addr16
dec
xchg
sub
shl
add
jo
and
add
mov
add
(bad)
sbb
mov
imul
add
aaa
and
xor
pop
lock
cmp
and
(bad)
cwde
das
inc
lods
sub
add
pop
or
fnstsw
fwait
popa
mov
jbe
cmp
imul
mov
mov
adc
lock
mov
pop
mov
out
loope
mov
cmp
dec
jno
xor
repnz
cmp
ss
mov
mov
fiadd
inc
test
out
push
or
xor
fsubr
in
ins
add
fsub
daa
jmp
fwait
xchg
iret
test
daa
mov
xchg
jo
add
sub
mov
inc
fld
(bad)
test
cli
fsub
inc
mov
int
shr
jns
int3
rol
int
ds
fimul
push
xor
rol
adc
pop
sub
hlt
jne
jne
and
inc
cmps
add
lods
jmp
and
arpl
add
leave
and
gs
sti
xchg
mov
neg
fidivr
leave
jg
push
pusha
sahf
js
mov
sub
je
div
fwait
xor
mov
mov
pop
aam
sub
mov
ror
mov
sbb
repz
inc
movs
adc
and
sbb
idiv
cmps
cmps
adc
scas
push
je
inc
xchg
cmp
dec
add
and
imul
lock
sahf
mov
ret
int3
and
das
bound
sub
lea
out
lock
outs
mov
les
jno
gs
aas
iret
mov
imul
daa
mov
call
shl
test
inc
sbb
mov
aas
call
add
jo
sbb
js
add
(bad)
pop
retf
dec
fcom
add
nop
dec
into
clc
and
jnp
pop
mov
mov
sbb
cld
sbb
addr16
and
popf
leave
xor
fild
xchg
xor
test
jg
pop
fst
xor
gs
xor
jo
retf
imul
aad
pop
rcr
push
cmp
mov
push
mov
inc
xor
fucom
std
ffreep
xor
cld
cmp
ror
retf
push
mov
idiv
cli
sti
(bad)
pusha
push
sub
mov
sbb
mov
leave
dec
lods
or
mov
bnd
add
push
sbb
dec
mov
aam
sahf
jae
ret
js
dec
xor
mov
pop
imul
mov
outs
outs
inc
test
jb
mov
and
xchg
lock
inc
mov
lock
add
cdq
jns
rcl
fwait
cmp
pushf
mov
mov
leave
in
(bad)
(bad)
(bad)
aas
sbb
sbb
xchg
jle
jg
push
in
pop
pop
cmp
inc
out
fnstcw
sub
jl
dec
stc
xor
cmp
popa
push
jecxz
mov
dec
lahf
stc
sub
cdq
stos
cs
fidivr
dec
pop
call
aad
cs
xor
dec
jmp
sub
pop
(bad)
mov
dec
and
imul
jno
pop
sar
inc
repnz
mov
mov
inc
arpl
not
data16
jb
mov
(bad)
test
pop
fldenv
push
out
mov
jge
push
mov
(bad)
cmp
dec
cs
cmp
stos
fsub
xor
pop
retf
retf
leave
push
add
int3
xor
mov
(bad)
mov
mov
sub
mov
lods
push
mov
and
in
popf
cmp
jg
mov
lds
int3
(bad)
in
fwait
xor
cdq
stc
sub
mov
cmp
(bad)
loope
mov
into
jne
std
mov
jo
cmp
mov
loop
push
movs
or
(bad)
mov
test
or
mov
mov
jno
add
inc
mov
mov
pop
(bad)
scas
stc
sbb
btc
scas
sub
outs
sub
mov
int3
dec
pushf
lahf
inc
mov
xchg
fld
adc
ret
mov
scas
push
dec
pop
adc
daa
popa
cmp
add
pushf
cmp
(bad)
test
mov
std
bound
cmp
fsub
dec
push
dec
ins
mov
hlt
pop
pushf
pop
cdq
call
mov
in
dec
push
in
xor
rol
push
bound
or
xchg
cmp
mov
mov
sbb
fst
in
stos
sub
cmp
adc
call
add
stos
stc
sti
xchg
adc
pop
jl
mov
mov
adc
push
stos
cmp
mov
xor
cli
xor
mov
jno
inc
hlt
in
das
mov
and
push
xchg
push
(bad)
pusha
jmp
sbb
and
arpl
gs
stc
xchg
pushf
rol
movs
mov
add
jmp
sbb
cmp
sub
sbb
add
pop
pop
into
or
hlt
ins
xor
xchg
xor
nop
int3
outs
pop
dec
mov
xor
inc
add
lods
sub
inc
push
popa
pop
fwait
adc
outs
push
mov
aaa
gs
cmp
inc
lods
fadd
jo
sub
out
mov
(bad)
(bad)
pop
sub
ss
pop
push
jae
call
movs
outs
jp
xor
mov
pop
inc
cdq
out
push
jnp
sub
imul
pop
ja
ins
repnz
and
cmps
shl
inc
sub
fist
shl
inc
ror
or
imul
mov
inc
xor
into
stos
fisttp
inc
shl
cld
mov
mov
addr16
popf
shr
pop
mov
in
in
add
dec
repz
xor
outs
mov
jbe
or
aad
sub
xchg
lds
scas
mov
add
repnz
push
cdq
jnp
sbb
aaa
vmovlps
mov
mov
and
xchg
jne
mov
inc
(bad)
(bad)
nop
adc
loop
pusha
fucomi
add
ins
lea
(bad)
shl
enter
adc
cmc
into
add
adc
xor
pop
sub
mov
mov
pop
fs
mov
jbe
pop
xor
mov
cmps
or
mov
jg
mov
cmp
pop
and
jno
mov
data16
inc
mov
shl
ret
js
lods
dec
jg
or
push
jo
out
xchg
ret
jno
int3
cmp
pusha
addr16
js
sbb
ja
cmp
add
hlt
pushf
and
movs
popf
movs
js
jb
lods
push
repz
loop
pop
push
jge
add
(bad)
jmp
movs
ror
mov
(bad)
xor
fstp
xchg
lds
adc
adc
jo
hlt
mov
pop
es
in
scas
and
inc
stos
shl
cmp
push
push
jmp
inc
out
sbb
mov
sti
addr16
add
xchg
test
xchg
jmp
in
xchg
adc
and
push
xor
stos
je
add
das
fxch
mov
lea
mov
cmc
sub
pushf
add
sbb
or
test
jne
push
jbe
retf
pushf
xchg
rcl
mov
cmps
sub
push
xchg
xchg
pop
mov
xchg
cwde
sub
jmp
(bad)
sahf
(bad)
and
into
jmp
xchg
pusha
cdq
pop
retf
pop
fisttp
fdiv
or
add
sub
cmps
xchg
cld
mov
nop
dec
mov
dec
sar
mov
pop
jecxz
stos
xor
leavew
cmp
inc
push
call
mov
push
fwait
ins
and
dec
mov
shl
fisub
sbb
mov
sub
mov
sbb
and
fiadd
xchg
je
sub
popf
jecxz
xor
dec
sbb
(bad)
or
cdq
rol
in
or
sti
in
ja
jae
xchg
jb
sahf
cmp
leave
sbb
ja
push
imul
test
adc
and
scas
sbb
fwait
xlat
aaa
ds
sub
cmp
stc
test
push
push
aam
mov
call
in
push
or
bnd
ret
jne
inc
retf
pop
mov
add
and
dec
dec
jl
aad
jae
ret
push
mov
and
repz
fwait
mov
sbb
movs
movs
jne
loopne
fucom
je
test
stos
xor
mov
cmp
mov
gs
and
int
xchg
jae
sub
push
popf
mov
add
lahf
aad
xor
mov
or
outs
out
sub
gs
test
adc
and
js
les
or
jno
dec
test
(bad)
clc
add
out
(bad)
dec
xor
aad
sbb
xor
xchg
sbb
fst
sub
mov
enter
fimul
jae
mov
retf
fidiv
xor
jge
lahf
ror
xchg
mov
in
outs
scas
and
(bad)
icebp
jmp
test
mov
jb
mov
in
in
mov
sbb
cmp
xor
lock
dec
and
ins
cs
jbe
inc
test
call
or
test
scas
cs
dec
test
lods
jae
push
or
lea
mov
push
shl
inc
sbb
add
jmp
adc
xchg
jno
ins
scas
(bad)
jl
fld
mov
cmps
mov
adc
cld
pop
or
and
test
daa
outs
sahf
jle
ins
stc
add
das
cmp
jle
test
loope
push
push
push
nop
int
ins
ins
retf
dec
sbb
mov
and
mov
aam
mov
arpl
mov
js
(bad)
jmp
pushf
or
ficom
(bad)
dec
stos
jmp
ins
jge
add
stc
stc
mov
cmps
lea
popa
sbb
jge
push
sub
and
cwde
enter
ror
adc
ins
adc
add
and
mov
aad
mov
sbb
inc
xor
push
fist
push
int
iret
jle
xor
stc
pop
lock
icebp
dec
dec
jb
cwde
lahf
push
cmps
pop
out
mov
dec
iret
dec
addr16
and
add
or
scas
mov
and
cli
in
(bad)
cmp
(bad)
sar
int3
inc
call
out
rcl
pushf
add
scas
(bad)
(bad)
jl
sar
cld
fimul
mov
es
in
mov
and
retf
(bad)
ins
imul
aas
rcl
data16
(bad)
in
ja
popf
and
repz
pop
sbb
pop
in
in
aam
add
pop
das
(bad)
and
xchg
inc
test
xchg
sar
(bad)
pusha
sub
(bad)
loope
lds
rcl
je
jae
dec
into
js
push
mov
in
aas
and
mov
repnz
in
xor
jb
stc
jg
enter
or
dec
jns
xor
mov
mov
dec
xor
sub
or
jge
dec
inc
(bad)
enter
mov
adc
rcr
adc
popa
rol
pushf
loopne
mov
inc
mov
xchg
xchg
pop
xchg
fs
pop
mov
xlat
daa
fldcw
call
push
mov
pusha
mov
mov
dec
sbb
xor
test
loope
xchg
jmp
jne
sar
mov
outs
push
ret
hlt
popa
retf
xor
xor
(bad)
cmp
cmp
das
mov
jl
dec
mov
jne
out
ds
and
and
out
and
int3
or
leave
outs
adc
push
(bad)
pusha
cld
push
int3
xor
jmp
pop
test
jecxz
cmp
cmp
xchg
or
cmc
mov
scas
add
hlt
mov
dec
xchg
pop
sar
mov
pop
shl
xchg
ja
lahf
rcl
mov
or
stos
cmp
(bad)
out
out
sub
xchg
jmp
clc
jmp
ds
xor
in
push
cmp
ficom
mov
jmp
or
sbb
jne
out
pop
mov
test
xchg
mov
xlat
ror
jns
cmps
rcr
mov
sub
and
sbb
cmc
test
cmp
add
inc
jle
sbb
fild
rcl
loop
fmul
cmp
cld
ds
enter
fsub
jmp
aaa
ror
scas
mov
push
out
adc
neg
cmps
add
xor
in
ret
stc
cwde
mov
cmc
cmp
cdq
out
daa
lods
test
cdq
sub
outs
js
fisub
test
mov
cmps
jge
jle
xchg
cmps
icebp
ror
push
(bad)
xlat
mov
jmp
aas
arpl
adc
(bad)
jno
in
sbb
das
mov
adc
adc
and
mov
and
pop
push
jg
or
cmp
leave
js
jecxz
cmp
add
sub
and
mov
pop
jp
out
outs
mov
sti
push
push
leave
inc
inc
scas
ins
outs
cli
mov
dec
scas
push
repz
xor
daa
mov
dec
inc
mov
mov
(bad)
adc
sub
push
mov
out
xchg
fs
repz
adc
daa
into
stos
sub
icebp
or
jbe
hlt
mov
js
mov
and
dec
mov
mov
or
int3
push
loopne
jl
sub
adc
jo
mov
sub
add
xchg
out
cmps
dec
jae
fistp
adc
shr
jne
(bad)
jnp
(bad)
(bad)
mov
ins
lods
inc
enter
mov
adc
xchg
and
enterw
jno
dec
sbb
xchg
(bad)
dec
push
sbb
daa
or
xor
sub
mov
cld
ins
and
push
dec
retf
cmp
or
daa
jb
call
push
xor
and
test
call
test
shl
lea
imul
push
in
je
xor
push
mov
pop
dec
mov
out
popa
or
add
lods
mov
fdiv
ror
mov
jb
and
dec
pusha
mov
test
lds
sbb
cs
out
iret
sar
push
mov
xchg
xor
mov
cli
mov
adc
out
mov
je
rdmsr
xchg
test
test
in
ins
inc
(bad)
and
imul
pop
jecxz
gs
push
(bad)
pushf
xchg
popf
stc
mov
xchg
pop
sbb
clc
pusha
es
in
pop
push
add
add
adc
and
xchg
jb
xor
data16
je
fild
jl
icebp
or
sub
adc
ds
daa
lock
into
pop
dec
cmp
mov
(bad)
outs
retf
sbb
popf
rcl
out
add
push
jg
pop
sbb
push
push
mov
ins
jns
xchg
fs
mov
stc
xor
mov
and
hlt
daa
in
lds
cmp
aaa
sti
xchg
xor
fimul
imul
dec
ret
lea
dec
cmps
push
mov
sub
das
retf
test
pop
test
jle
popa
in
lods
retf
inc
lds
rol
mov
sub
mov
xchg
(bad)
(bad)
mov
sub
(bad)
stc
sbb
es
mov
sar
xchg
ret
cdq
or
xchg
pop
dec
fwait
jae
mov
mov
push
xlat
dec
es
(bad)
cmp
je
cdq
adc
mov
mov
jg
aam
xchg
xor
div
and
nop
in
cs
inc
jmp
shl
call
pop
pop
shr
mov
and
xchg
xor
arpl
cld
repnz
test
push
mov
xor
mov
adc
loopne
lds
cdq
aas
mov
(bad)
xchg
sub
push
cwde
add
cmp
enter
aad
dec
mov
cmp
jbe
rcl
mov
repnz
adc
mov
ds
dec
aam
fs
sti
pop
call
scas
movs
adc
das
test
jmp
in
shl
ins
dec
xlat
sub
sbb
js
test
push
ins
in
jmp
pop
scas
jl
imul
push
adc
ret
sahf
pop
xchg
pop
ret
jne
and
inc
cmp
adc
cmp
inc
maxps
cmp
push
movs
stc
mov
sbb
add
xchg
pop
(bad)
shl
push
adc
adc
mov
push
and
cs
mov
lea
in
jb
mov
pop
and
push
dec
ins
push
push
hlt
ror
(bad)
lock
leave
mov
rcr
jmp
lea
pop
mov
sub
dec
cmc
mov
out
mov
repz
add
and
fidiv
div
xchg
jmp
or
ret
(bad)
xor
xlat
mov
ret
adc
into
mov
sbb
push
xor
xchg
mov
add
sub
fs
enter
mov
cs
adc
mov
rcr
iret
pushf
mov
jmp
adc
xchg
enter
fbld
jnp
jmp
loope
mov
pop
call
adc
sub
cwde
call
mov
scas
sub
scas
sub
xor
repz
and
inc
dec
repnz
outs
ds
les
pusha
or
sbb
dec
xchg
mov
jmp
mov
std
mov
pusha
jmp
and
cmp
call
ror
(bad)
adc
cld
lds
das
pop
xor
sub
adc
shr
pop
cmp
dec
stos
mov
or
je
push
imul
mov
scas
push
inc
xor
mov
fcom
popa
pop
mov
cld
mov
inc
gs
sbb
and
pop
xor
leave
jmp
cmps
xor
mov
mov
nop
or
jl
addr16
or
stos
sahf
push
mov
shl
jge
pop
push
push
or
div
xor
jb
push
mov
adc
(bad)
in
cmp
out
mov
mov
(bad)
or
arpl
stos
stc
retf
inc
or
cmp
nop
inc
jge
xchg
int3
mov
add
and
pop
xor
xor
cmc
mov
or
repnz
into
xchg
dec
mov
push
pushf
push
stos
fild
fdivp
fs
pop
jb
jmp
jge
jmp
mov
std
jb
sbb
cmps
iret
pop
mov
jbe
mov
mov
xlat
fild
mov
test
call
xchg
jbe
mov
std
lahf
inc
inc
in
dec
mov
imul
mov
es
je
and
in
add
and
dec
sub
xchg
jp
fstp
mov
mov
movs
add
add
popf
daa
popf
ss
and
jne
cmp
arpl
imul
outs
(bad)
fidivr
sbb
icebp
cli
dec
lock
sti
aam
and
push
popa
sub
mov
pop
sub
pop
mov
push
pusha
outs
mov
loopne
imul
test
leave
(bad)
repnz
cld
pop
scas
or
ror
adc
aam
inc
lods
ss
inc
out
mov
fisttp
inc
out
adc
adc
mov
(bad)
(bad)
cmps
xchg
xor
mov
hlt
jae
sub
sub
stc
std
aas
outs
int3
pop
xlat
jmp
pop
mov
inc
xchg
leave
(bad)
in
cli
mov
fcomip
push
cmc
jnp
test
aas
and
fld
mov
xor
add
jb
cld
sbb
(bad)
fisub
inc
hlt
mov
xchg
adc
xor
call
idiv
pusha
add
mov
mov
ja
fcomp
int
cmp
mov
cs
(bad)
xchg
sub
add
sbb
lods
pop
and
stos
dec
jmp
cs
pop
adc
sub
idiv
sbb
ins
or
(bad)
fs
mov
sub
scas
imul
push
sbb
es
xor
out
inc
sbb
in
mov
xchg
sbb
mov
mov
pop
leave
outs
outs
xchg
fsub
and
inc
xchg
push
push
jl
dec
in
adc
push
mov
xor
and
or
inc
mov
push
sar
push
mov
mov
fnsave
mov
push
aam
mov
aaa
cdq
(bad)
xor
jmp
test
fld
adc
(bad)
pop
inc
(bad)
leave
mov
dec
(bad)
nop
and
cmp
movs
push
cli
out
mov
in
in
ja
pop
inc
in
mov
(bad)
push
xchg
xor
in
mov
pop
push
iret
mov
loope
xchg
dec
jo
mov
icebp
sbb
jge
sub
popa
cli
ficom
jo
sbb
mov
xlat
mov
and
xor
stos
out
xchg
or
fmul
sbb
xor
pop
daa
rol
fiadd
mov
aad
add
sbb
sbb
fwait
mov
adc
iret
mov
mov
xor
in
test
xor
rcr
jecxz
je
sub
aaa
xchg
inc
inc
stos
sub
les
hlt
cdq
mov
jle
xchg
int
or
push
mov
xchg
push
aam
sahf
movs
jns
push
cld
(bad)
push
sbb
fcomi
pop
fstp
ja
mov
sbb
or
ret
mov
xchg
push
mov
popa
mov
loop
int
lea
cmps
jnp
and
fbld
sub
push
(bad)
hlt
idiv
call
add
sub
xchg
inc
jmp
adc
jns
clc
rcl
pushf
hlt
mov
sbb
movs
lock
les
pop
pop
adc
stos
clc
adc
pusha
ret
dec
push
(bad)
rol
or
mov
ins
rcr
cmp
sbb
ror
das
and
push
or
aas
into
add
fisttp
push
iret
mov
or
and
dec
aaa
clc
ss
xchg
mov
xlat
aaa
xor
call
movs
sar
and
mov
and
sbb
xor
popf
cmps
aam
fwait
data16
out
aas
pusha
jmp
sbb
cld
mov
jmp
sar
in
push
mov
cwde
jae
(bad)
addr16
inc
cmps
into
sbb
data16
mov
inc
pop
sti
add
cmps
xor
push
loopne
add
or
add
push
xor
xor
retf
fisub
sahf
mov
adc
jae
mov
int3
cwde
or
aad
imul
pop
aaa
popa
test
add
mov
sub
int
jle
mov
je
test
fistp
ins
and
add
xchg
xor
lods
pusha
stos
sbb
xor
sub
mov
mov
ds
mov
dec
fdiv
xchg
xchg
push
mov
mov
stos
mov
aas
fild
xchg
pop
dec
mov
popf
bound
mov
inc
ret
bound
pop
xchg
xor
pusha
mov
cwde
mov
leave
lahf
xor
add
jnp
mov
sub
rcr
pop
sbb
dec
call
xor
mov
sub
mov
push
jns
retf
push
jecxz
mov
(bad)
push
push
ret
push
xor
and
sbb
xchg
imul
lods
jbe
add
aaa
xchg
xchg
mov
dec
inc
movs
add
fdiv
aam
xchg
jbe
loop
push
arpl
adc
outs
adc
hlt
pop
xchg
jle
sub
repz
nop
push
sbb
pushf
mov
cld
mov
lea
xchg
jmp
outs
or
arpl
sar
mov
pop
xor
test
rcl
cld
xchg
sbb
sub
xchg
dec
popf
push
add
hlt
ret
nop
pop
lods
sub
xlat
repnz
adc
sbb
push
or
movs
outs
lea
popa
pop
popf
and
fstp
loopne
mov
cmp
arpl
cmp
cmps
adc
sbb
xchg
pop
add
movs
push
sub
push
add
fsubr
cli
add
sbb
repnz
mov
xchg
sbb
mov
cmp
lods
sub
xchg
cmp
loope
mov
inc
mov
sbb
pushf
xchg
mov
xchg
stc
lea
adc
retf
data16
leave
rol
cmp
fs
retf
loope
test
cmps
pop
std
mov
pop
out
and
test
sub
es
popa
cdq
sti
jnp
mov
stos
call
addr16
pop
dec
mov
or
popf
clc
arpl
mov
loope
das
cmps
xchg
outs
cdq
aas
jmp
cmp
sub
call
test
out
dec
sub
scas
and
cmovns
int3
xchg
dec
push
gs
push
in
or
push
mov
adc
and
fisubr
sub
stos
fisubr
lds
scas
out
mov
inc
dec
loope
jmp
inc
and
adc
popf
ret
pop
jp
aam
lods
cs
jecxz
out
dec
adc
mov
into
add
div
(bad)
in
cmp
jmp
push
scas
loope
inc
sub
sahf
repnz
pop
cmp
out
and
and
ds
rol
sbb
leave
scas
xchg
out
jns
pop
cld
gs
cmp
out
(bad)
lods
sbb
imul
jb
jmp
xor
dec
pop
in
push
rol
adc
and
dec
call
js
cmp
jl
mov
inc
and
pop
lds
fstp
pop
shl
push
xor
(bad)
adc
in
popa
outs
jne
cmps
ret
and
push
xor
lds
xchg
lods
xchg
add
dec
jb
dec
fiadd
push
cli
push
movs
nop
popf
retf
retf
xlat
pop
dec
dec
cli
call
mov
sbb
mov
shr
dec
mov
ds
dec
push
xor
jle
xlat
xchg
mov
dec
aam
imul
into
xor
je
mov
inc
cmp
dec
mov
movs
cmp
sbb
push
mov
fs
lahf
aam
leave
xchg
daa
(bad)
das
pop
and
mov
sbb
mov
push
adc
inc
cdq
jnp
push
fwait
cmp
in
stc
test
call
xlat
fisubr
cdq
xchg
aad
fidiv
mov
enter
xchg
dec
lods
shl
add
xchg
mov
icebp
loope
rcr
out
pop
push
sbb
mov
(bad)
or
jmp
popa
xor
mov
fmul
das
ds
xchg
xchg
add
push
sbb
dec
add
out
cmp
jb
es
dec
(bad)
mov
ror
and
iret
shl
xchg
arpl
mov
pop
out
ret
sar
xchg
mov
imul
popf
out
dec
jae
ret
mov
add
loope
stc
(bad)
pop
in
(bad)
ds
pushf
mov
leave
loop
or
ins
or
in
enter
ficomp
stc
jb
xchg
clc
dec
mov
jne
jo
push
add
lahf
pusha
pusha
repnz
inc
call
lods
stc
jbe
push
pop
jb
push
dec
pop
jae
mov
inc
inc
push
jno
ret
repz
or
add
mov
push
fmul
cld
push
pusha
outs
and
lahf
arpl
bound
out
sub
ins
loope
cs
ins
rcl
js
or
cmp
mov
mov
or
stos
sub
imul
jne
(bad)
fbstp
or
loopne
mov
out
popa
in
pop
cmp
mov
pop
adc
movs
call
clc
inc
imul
xor
std
adc
sub
mov
clc
and
dec
aam
add
xor
or
mov
cdq
int3
addr16
cmp
inc
cs
repz
leave
sbb
in
xchg
pop
lock
pop
mov
sbb
std
stos
stc
loope
scas
sub
(bad)
xchg
jns
cmps
fist
sar
cli
call
cmp
stos
std
retf
cmp
and
js
mov
dec
ins
sbb
inc
cmp
xchg
jbe
jae
jb
aas
mov
jb
push
and
ret
retf
out
pop
add
repz
pusha
inc
pop
cld
dec
sbb
dec
lea
dec
or
add
ret
in
inc
out
(bad)
jmp
jg
js
jmp
cmp
lea
cmp
push
daa
movs
push
jl
aaa
cld
mov
pop
cmp
xchg
aaa
jge
inc
hlt
mov
cli
loope
jecxz
push
inc
arpl
in
sub
pop
xor
mov
fidivr
cmp
nop
in
mov
loopne
(bad)
ds
pop
aad
in
xchg
pop
cmp
cld
std
mov
(bad)
ffree
mov
add
sahf
movs
mov
push
inc
mov
test
cmp
pop
jne
mov
mov
out
ins
or
and
ss
sahf
(bad)
jbe
mov
cld
mov
cmp
pop
lea
jmp
lds
sub
inc
in
mov
shr
xchg
fnsave
mov
dec
je
nop
mov
nop
cld
out
loop
mov
sahf
fs
mov
icebp
sub
aaa
shl
addr16
mov
cwde
jns
jg
repz
fs
inc
xchg
jo
scas
xor
retf
sub
mov
pop
js
nop
mov
stc
fisttp
pop
adc
and
sbb
pop
cmp
out
or
inc
test
and
push
outs
sub
mov
pop
scas
jl
cld
out
cli
(bad)
or
mov
adc
pushf
fs
test
xchg
inc
fnsave
adc
inc
xchg
xchg
pop
lea
pop
daa
add
and
mov
(bad)
cmovg
in
jg
inc
mov
loopne
xchg
movs
jecxz
in
jbe
cld
sub
pavgw
mov
loop
jo
retf
je
(bad)
das
(bad)
mov
icebp
dec
mov
adc
xchg
xor
mov
cmp
in
ja
int3
push
jne
xchg
lea
sub
cdq
mov
inc
fcmovnu
cmp
mov
in
fimul
adc
cmps
mov
fld
in
xchg
or
pop
ins
dec
pop
xchg
push
ret
(bad)
ja
es
mov
xchg
out
push
stos
cmp
jecxz
loope
xchg
mov
ds
adc
xchg
fnstenv
pusha
sbb
ja
mov
(bad)
je
jecxz
scas
dec
cmp
ds
in
retf
loopne
and
shr
mov
xor
jnp
aam
fadd
sbb
retf
scas
mov
imul
push
xchg
mov
inc
dec
arpl
test
aad
out
jecxz
push
dec
int3
lahf
outs
jmp
pop
push
pop
lods
and
(bad)
rep
sti
outs
push
mov
fld
xchg
aas
mov
ins
and
pop
xchg
push
int3
mov
inc
movs
jae
pop
mov
inc
shr
mov
lea
xchg
test
out
addr16
inc
cmp
mov
mov
test
outs
movs
mov
cmps
mov
xchg
mov
int3
shr
adc
stc
inc
dec
int3
cmp
frstor
retf
fldpi
sub
aas
das
adc
push
sbb
mov
inc
data16
test
push
dec
mov
adc
and
out
jge
mov
push
iret
pop
stc
retf
sbb
ins
(bad)
dec
call
in
mov
(bad)
imul
add
cmp
fst
or
mov
xor
cmp
dec
nop
mov
xor
fiadd
dec
cmps
xchg
in
xchg
ret
sub
in
xchg
dec
cli
inc
sahf
lods
lahf
mov
xchg
mov
xchg
pop
pusha
fisubr
fcomp
dec
in
jmp
dec
or
cmps
adc
jle
mov
xor
push
out
outs
mov
xchg
lds
or
adc
les
adc
fst
push
retf
push
outs
dec
inc
imul
push
fild
retf
mov
or
je
pop
pop
fidivr
jo
bnd
clc
pop
scas
addr16
jg
mov
stc
leave
or
sbb
cmp
stos
iret
fild
outs
(bad)
je
add
stos
fbstp
xor
rcl
out
jg
xchg
sub
popa
sub
imul
mov
mov
pop
add
shr
and
push
xchg
repz
fs
stos
xchg
jnp
cmp
add
into
xor
call
dec
jo
fwait
and
(bad)
or
fsub
shl
imul
push
add
push
movs
or
push
jne
cmp
xor
stc
aaa
bound
cmp
adc
mov
gs
call
movs
in
fs
outs
fiadd
loopne
dec
add
jmp
push
lods
or
xor
inc
mov
cld
adc
(bad)
sub
xchg
xchg
int3
pop
stos
dec
jnp
fsubr
push
imul
jbe
mov
pusha
cmp
inc
push
xchg
cmp
dec
lods
iret
xlat
mov
arpl
and
call
mov
inc
stos
xchg
inc
out
mov
pop
xor
add
pop
dec
test
add
test
ret
dec
in
bound
imul
mov
ret
push
and
clc
loop
imul
cwde
fcmove
cmps
dec
in
jp
shl
mov
in
or
addr16
cmc
dec
pop
loope
fsub
ins
inc
je
adc
enter
push
int
test
lods
cmps
mov
pop
xor
add
mov
imul
retf
and
mov
imul
call
pop
nop
jbe
ins
aas
daa
mov
ins
mov
and
adc
pop
xor
sbb
cmp
mov
and
mov
(bad)
mov
or
std
lahf
pushf
cmp
pop
lods
inc
movs
jge
adc
(bad)
jmp
adc
push
inc
leave
inc
test
outs
mov
xchg
ins
in
pop
xor
rol
pop
loope
sbb
pop
xchg
mov
lock
retf
in
imul
mov
push
and
mov
xchg
je
dec
int
cmps
jnp
jle
out
test
xor
xchg
adc
icebp
or
lock
imul
add
inc
cs
adc
fild
daa
repnz
push
in
je
and
out
inc
jnp
cli
ficom
leave
icebp
inc
aaa
je
(bad)
cdq
push
xchg
fdivr
in
(bad)
aam
jle
mov
xor
mov
cs
pop
sti
mov
push
jl
fimul
fcmovbe
mov
and
ret
retf
jge
nop
mov
scas
jmp
pop
in
push
xor
js
leave
add
pop
fcomp
inc
faddp
jmp
cld
fsub
pop
mov
cmc
enter
cmp
int
push
and
inc
imul
scas
ret
sub
outs
pop
mov
sbb
dec
sub
not
dec
push
cli
push
(bad)
jmp
bound
sbb
cmps
cmc
out
loop
pop
cli
adc
sbb
sti
mov
out
test
(bad)
fbstp
adc
dec
nop
out
lods
mov
lods
inc
mov
sub
dec
in
and
cmps
cmc
ja
push
push
int3
jno
repz
out
adc
fadd
mov
jecxz
ror
mov
(bad)
lods
dec
xor
push
xor
nop
aad
adc
imul
xlat
sub
mov
add
dec
push
je
iret
aaa
popf
xchg
fsub
dec
outs
or
or
repz
jecxz
imul
pop
xor
lods
cmc
lahf
pop
cmps
out
jb
out
das
xchg
cs
push
data16
xor
daa
aaa
fisub
sbb
sbb
arpl
imul
pop
cmps
mov
mov
pusha
push
(bad)
jae
lds
and
movs
pusha
loop
xchg
scas
aad
adc
int
inc
fadd
xor
(bad)
cs
cs
xchg
shr
and
fs
sub
movs
ins
int3
jne
mov
jno
or
(bad)
push
fadd
inc
jo
aas
push
sbb
mov
pop
and
test
or
call
inc
repnz
clc
adc
or
daa
and
mov
in
ja
pop
sub
dec
icebp
push
out
retf
imul
comiss
aad
sub
cmc
aas
push
mov
(bad)
mov
xchg
lea
pop
(bad)
in
popa
outs
loopne
cmp
pusha
xlat
popa
xor
pop
inc
fwait
xor
scas
mov
mov
mov
and
cmc
fild
inc
push
and
je
fdiv
mov
mov
cdq
xor
or
les
cwde
ins
add
push
loope
rcr
lock
leave
and
jb
add
jmp
xor
sti
xchg
sti
lods
fs
aam
dec
push
adc
in
push
adc
push
fdivrp
sbb
inc
sub
aas
cld
arpl
daa
ret
mov
jmp
daa
repnz
sub
ja
jno
rcr
rcl
(bad)
xchg
loopne
ins
pop
push
pop
ficom
sub
fcomi
dec
inc
aas
add
xchg
dec
mov
jmp
dec
mov
xor
pop
xchg
lahf
mov
in
lea
mov
inc
mov
push
cmp
xor
pop
out
shl
mov
(bad)
cld
stc
adc
push
retf
push
push
mov
xor
in
cmp
add
pop
sar
push
xchg
sub
dec
sbb
push
fs
cmps
or
out
jnp
mov
es
loopne
nop
retf
outs
test
dec
mov
jmp
push
(bad)
mov
and
jge
push
mov
icebp
cmp
(bad)
in
test
in
push
sub
add
push
sub
mov
mov
ror
pop
adc
in
loop
sbb
daa
push
xor
sub
out
in
or
inc
out
loopne
mov
pop
ror
sub
push
xchg
mov
dec
aam
add
add
sahf
jo
retf
outs
stos
xchg
call
cmp
cmp
mov
dec
adc
xor
pop
fnstsw
popf
jge
das
add
adc
push
test
xor
sub
adc
mov
push
cmp
aas
ret
mov
xor
xor
xlat
lahf
lahf
mov
fisub
jae
adc
addr16
mov
mov
je
pop
xchg
mov
adc
outs
mov
sub
popa
xchg
cwde
cwde
stc
push
(bad)
nop
add
pop
(bad)
fldpi
sbb
popf
xchg
adc
pop
rol
mov
mov
xchg
cmp
arpl
inc
xor
(bad)
stos
push
dec
sbb
mov
mov
ins
fwait
sbb
fadd
xlat
inc
mov
daa
iret
pop
pop
(bad)
outs
push
cld
jmp
sub
and
stos
dec
dec
nop
bound
cmp
das
nop
xchg
mov
inc
cmps
xchg
test
xor
mov
mov
shl
add
xchg
sbb
inc
scas
aas
cdq
mov
push
cdq
jno
mov
fbstp
xor
int
or
jp
mov
retf
call
cli
push
in
pop
push
jno
pushf
test
movs
pop
fnstenv
add
dec
sbb
sub
mov
aam
dec
push
faddp
shr
cli
push
dec
jne
inc
xchg
hlt
xchg
lock
addr16
or
inc
add
add
dec
das
inc
hlt
sbb
xchg
and
xchg
inc
dec
jg
imul
cli
aas
mov
aaa
loopne
dec
push
jae
mov
cmp
pmuludq
popa
push
or
pop
jae
rcr
push
or
inc
push
push
pusha
push
xlat
stos
push
sbb
fcom
sbb
shl
sti
fld
push
adc
dec
xchg
data16
inc
jo
dec
xor
add
aad
adc
dec
mov
arpl
or
jb
dec
sbb
test
or
dec
cld
test
mov
dec
repz
shl
xchg
and
lock
nop
pop
push
jb
cld
cmp
movs
scas
mov
mov
scas
cmps
and
add
data16
(bad)
or
xor
dec
push
xchg
pop
cli
rcr
pop
int
inc
repz
(bad)
mov
fcom
lods
dec
push
rcr
stc
ret
out
(bad)
sub
cmp
xchg
add
adc
ss
jp
push
or
sbb
jns
mov
sbb
mov
lock
push
mov
test
xor
pop
inc
mov
aam
push
hlt
xchg
mov
push
push
xchg
std
mov
shr
inc
dec
pop
shr
aam
dec
mov
inc
cmp
movs
dec
mov
pop
cmp
inc
loopne
dec
les
push
(bad)
pop
pop
test
jnp
fwait
pop
xor
mov
xchg
jbe
retf
icebp
in
imul
loop
inc
int3
cmc
dec
mov
int
jo
pop
pop
(bad)
retf
bound
dec
ror
std
movs
jg
sub
pop
push
mov
xchg
jbe
mov
loop
or
xor
jp
stc
sub
mov
xor
jbe
arpl
stos
push
outs
mov
mov
out
xchg
enter
mov
xor
(bad)
jb
mov
mov
retf
and
(bad)
es
and
mov
pop
adc
sub
dec
dec
sar
jg
scas
cmp
fist
fdivp
sbb
and
mov
mov
sahf
pop
xor
out
xchg
jnp
push
stos
mov
dec
inc
adc
jp
adc
mov
in
push
push
popa
xlat
mov
ss
popa
pop
in
jmp
jle
xor
mov
dec
aam
sbb
xlat
ror
mov
lods
push
push
pop
(bad)
push
shr
(bad)
ret
int3
xor
pop
mov
mov
out
sbb
push
push
repnz
dec
sub
fidivr
fucomp
cld
icebp
nop
push
and
jg
mov
sbb
enter
enter
repz
data16
fwait
xchg
cli
adc
mov
mov
pop
pop
and
cmp
push
dec
mov
cwde
enter
jmp
scas
sub
push
sub
mov
out
jmp
rcr
xchg
xchg
aad
sub
inc
sbb
push
(bad)
add
retf
loope
inc
sbb
add
icebp
add
push
jmp
jnp
dec
mov
icebp
ja
cmp
push
jl
out
repz
pop
in
inc
jmp
adc
scas
in
mov
and
and
int3
push
mov
mov
adc
xchg
cs
xchg
dec
repz
xchg
ja
fs
or
sbb
xor
sub
or
data16
rol
mov
jnp
hlt
psubw
or
sti
pop
or
lods
push
sar
shl
and
adc
push
lods
out
sub
or
jb
std
xchg
fs
jmp
in
dec
jmp
call
push
jg
xor
or
mov
lods
mov
xchg
outs
push
mov
push
mov
call
sbb
pop
cmp
xor
cmp
retf
ins
iret
cwde
dec
test
push
mov
lahf
add
sti
scas
in
adc
mov
cmp
rcr
sub
mov
mov
adc
sub
inc
mov
cmc
mov
retf
enter
les
pop
xchg
enter
xchg
mov
clc
outs
test
and
push
jno
inc
nop
sub
ins
pop
jl
dec
inc
iret
sbb
fcmovb
jne
imul
adc
lock
aad
mov
sub
stos
pop
xlat
ja
imul
pop
xor
mov
addr16
mov
and
pusha
xchg
mov
mov
mov
sub
mov
mov
cmp
mov
mov
mov
int
dec
push
je
mov
xchg
aam
add
jnp
sti
dec
jg
inc
jp
mov
popf
ins
mov
fimul
or
sbb
inc
adc
in
xchg
inc
fwait
mov
or
shl
scas
push
out
cmp
outs
inc
inc
push
mov
nop
pop
and
pop
ja
div
mov
out
sahf
sub
retf
in
popa
call
pusha
xchg
cmps
stos
das
(bad)
sub
dec
not
mov
data16
sar
sbb
push
les
(bad)
cmp
dec
xlat
mov
jmp
mov
or
jns
push
js
pop
in
mov
jns
inc
leave
jl
out
ins
sbb
mov
ret
jmp
(bad)
push
mov
push
cmps
call
movs
lods
out
mov
movs
les
cdq
add
mov
xchg
jmp
and
xchg
je
outs
jo
mov
out
mov
jecxz
mov
jno
xor
xor
stos
shl
pushf
cs
sub
dec
fcmovnu
add
test
movs
clc
shr
jno
push
dec
and
lahf
fnstcw
mov
add
nop
push
addr16
cmp
mov
aam
sub
mov
call
test
mov
and
pop
jnp
mov
popa
mov
cmps
mov
cmp
inc
clc
daa
(bad)
je
repz
sub
lods
addr16
sub
bswap
fmulp
iret
pop
(bad)
xchg
sbb
mov
adc
cmps
retf
data16
mov
sbb
jae
out
pop
mov
xchg
push
xchg
inc
or
push
lods
cli
sbb
(bad)
icebp
hlt
pop
push
iret
push
imul
push
imul
inc
push
cmp
dec
mov
fcmovbe
push
bound
ss
adc
mov
jb
push
lock
or
jae
dec
xchg
push
shl
cmp
ret
call
dec
cmp
jno
rcr
js
loope
mov
mov
mov
push
inc
test
inc
adc
xor
stc
push
rcr
pop
pop
fild
ins
pop
inc
loopne
dec
ret
mov
loope
inc
fld
retf
sti
mov
popa
(bad)
(bad)
pop
push
cmps
outs
icebp
mov
sbb
mov
movs
adc
pop
loop
add
mov
adc
inc
sbb
out
inc
or
jno
mov
rol
inc
adc
xchg
and
push
add
xor
push
stc
dec
test
cmc
leave
mov
gs
dec
fwait
or
push
loope
mov
mov
mov
xchg
mov
(bad)
dec
ins
sbb
inc
xor
pushf
cs
and
int
cmc
sub
push
rol
(bad)
movs
adc
imul
cli
xchg
sub
shl
and
out
push
pop
pop
xchg
sub
fild
mov
(bad)
sar
cmps
arpl
(bad)
push
mov
stc
repz
pop
or
xchg
mov
sub
jne
cs
jle
rol
xchg
out
adc
aam
enter
das
into
sub
mov
loopne
or
fwait
ret
rol
sub
jg
push
movups
push
xchg
and
push
sbb
mov
mov
pop
xchg
fdiv
int3
imul
dec
movs
outs
mov
nop
mov
test
pusha
aad
in
jnp
in
test
outs
mov
ror
gs
xor
push
movs
push
pop
or
push
clc
sti
xor
fisttp
sub
push
jno
or
mov
sbb
lds
sub
pop
mov
adc
jns
inc
or
inc
mov
mov
sbb
xchg
pop
xchg
aaa
cmp
xor
jnp
std
fucomp
cmp
push
nop
jmp
(bad)
aas
fdivr
jle
scas
push
movs
mov
add
popf
icebp
cli
call
cdq
out
ds
in
into
rcl
call
cwde
fmul
retf
lods
or
out
cmps
je
mov
jae
fbstp
push
bound
pop
pusha
cmp
add
adc
pop
adc
jge
dec
cmps
pushf
ror
xchg
jecxz
stc
jnp
cli
stos
ja
mov
ret
mov
retf
sbb
and
movs
pop
push
dec
in
sbb
push
sub
push
test
xor
mov
xchg
mov
mov
int
mov
cs
out
mov
pop
test
or
mov
ret
loop
and
pop
sbb
cmps
cdq
pop
mov
jge
stos
loopne
adc
xor
rcr
dec
cmc
add
push
pop
bound
push
jg
mov
pop
xor
ficomp
hlt
inc
nop
es
mov
adc
popa
mov
loop
sbb
outs
sbb
mov
sub
cli
mov
push
jle
mov
inc
sub
(bad)
outs
sbb
mov
pop
mov
hlt
cmp
scas
mov
mov
jmp
out
adc
sahf
pop
mov
pop
aam
std
(bad)
int3
add
and
and
push
add
(bad)
in
pop
ja
arpl
sub
add
sub
jle
mov
lods
adc
inc
scas
xchg
std
(bad)
and
(bad)
xchg
fisubr
mov
ja
jne
jle
xchg
xchg
mov
cs
xchg
clc
lahf
cmp
jecxz
imul
test
mov
add
mov
call
jns
sbb
fisub
rcr
fld
mov
sbb
sbb
fldenv
lods
pop
leave
mov
lods
ja
lahf
add
icebp
(bad)
jp
jp
mov
xlat
scas
or
adc
or
bound
aam
div
and
cmp
adc
das
ins
sbb
jmp
movs
ins
std
or
mul
ret
mov
shl
stos
dec
xchg
int
scas
cmp
call
mov
retf
(bad)
cmp
icebp
fs
vprotq
xchg
push
pop
or
fnsave
sub
fcmovb
sub
push
dec
imul
mov
push
test
mov
rol
jns
fs
sub
shl
lea
xor
fucomp
push
in
hlt
icebp
push
adc
sbb
sub
in
(bad)
adc
rol
dec
ins
xor
sub
jge
pop
adc
rol
cs
xchg
pop
lahf
aaa
ror
arpl
pop
push
adc
jl
sbb
adc
lods
or
cmp
fwait
cmp
nop
jnp
inc
inc
ror
push
pop
sub
mov
add
popa
fidiv
cmp
push
je
sbb
jl
inc
ret
push
dec
pop
add
lock
xchg
ins
xchg
ds
scas
xor
sub
jle
fild
push
adc
sub
fidiv
jns
jmp
push
fucom
mov
and
fild
gs
imul
xchg
js
cmp
jp
xchg
js
test
fst
enter
cmc
jmp
cmp
sub
add
clc
fdivr
ficomp
retf
jp
mov
retf
rcl
test
retf
ds
sbb
xchg
xor
shr
jne
lods
jecxz
and
pop
imul
mov
add
mov
and
cmp
mov
and
jp
adc
outs
cmp
push
(bad)
push
ret
or
(bad)
cmp
xor
mov
adc
pop
push
(bad)
sti
add
sub
(bad)
ret
xor
cwde
call
or
jmp
btr
or
xchg
(bad)
jle
jne
in
ins
push
push
mov
jne
in
push
adc
das
fild
pop
rol
loopne
fistp
add
loop
jo
xchg
xchg
xchg
out
shl
pop
pop
xor
jge
jl
sub
test
outs
retf
cmp
sub
les
(bad)
and
neg
adc
ja
push
mov
lahf
mov
loopne
push
pop
jo
fwait
jno
jne
pcmpeqw
out
dec
xchg
or
push
test
fnstenv
sub
push
enter
imul
sbb
test
cld
lods
mov
in
xchg
inc
push
sub
xor
mov
add
movs
enter
jnp
mov
xchg
mov
iret
sub
popa
mov
xchg
fnstsw
retf
mov
jl
les
pop
cmp
add
dec
fs
test
inc
lods
into
push
push
out
fstp
mov
dec
dec
sub
std
push
pop
push
pop
sub
fs
nop
push
cmp
xchg
mov
inc
mov
in
fst
clc
ds
cs
pop
fild
push
(bad)
cmc
fcomp
rcl
add
add
cs
add
adc
ins
sbb
xchg
dec
push
rcr
dec
inc
sbb
or
fdivr
in
xchg
fild
mov
xlat
outs
mov
mov
shr
shl
lea
and
fcom
inc
bound
or
or
mov
retf
jge
retf
sbb
imul
jl
popf
mov
outs
retf
div
imul
mov
jge
xchg
gs
(bad)
pop
jge
outs
adc
ret
add
fisubr
movs
jne
add
mov
gs
cmp
mov
dec
inc
(bad)
in
retf
mov
in
loope
add
pop
sbb
retf
outs
mov
and
bound
sar
mov
daa
and
dec
dec
leave
push
addr16
jle
sub
xchg
push
xchg
xor
mov
pop
inc
dec
imul
cmps
call
je
popa
cmp
ret
out
mov
inc
mov
ret
loop
pop
sbb
ins
popa
pop
push
int
out
sbb
pop
inc
ret
mov
add
adc
sbb
xor
xchg
je
mov
cmps
mov
jae
xchg
pop
(bad)
cmc
dec
mov
fcom
dec
lds
shr
sbb
fst
push
(bad)
ins
sbb
xchg
adc
loopne
lods
lahf
es
and
icebp
pop
js
inc
nop
int3
mov
pop
dec
stos
dec
ss
push
lods
jnp
xchg
out
dec
jge
xlat
and
mov
push
and
jbe
mov
in
sub
dec
sbb
cmp
lock
jg
jnp
in
jae
pop
repz
cmp
jne
inc
jge
fiadd
xor
jmp
repnz
and
cmp
push
aam
fs
repz
mov
xchg
clc
stos
rcl
mov
jmp
enter
test
pop
pushf
cmp
push
xor
sub
xor
retf
in
call
in
mov
bound
inc
push
clc
or
inc
loop
arpl
mov
gs
and
jmp
nop
pop
lea
shl
fnstenv
or
sbb
sub
jecxz
(bad)
push
cmp
mov
xchg
(bad)
out
jecxz
pushf
in
rcl
jo
out
mov
cmp
sbb
ins
and
data16
hlt
mov
or
in
xchg
lods
mov
popa
call
jmp
fcomp
fld
jge
pop
or
or
sbb
jecxz
inc
arpl
or
popf
jo
add
adc
imul
aad
lods
jno
xchg
js
stc
fcomi
mov
rcl
sbb
and
cmp
pusha
jle
mov
mov
mov
lea
sbb
sbb
jnp
xor
popf
push
xchg
dec
movs
not
sbb
loope
in
stos
out
xchg
or
or
popf
add
or
sub
(bad)
aam
test
clc
ins
add
push
jecxz
inc
cmp
loopne
jmp
add
inc
xchg
dec
xor
stos
les
mov
jb
fisub
adc
sbb
addr16
push
xlat
xchg
pop
ret
ss
mov
call
xor
push
or
dec
add
mov
dec
out
ret
jg
icebp
das
sub
iret
jecxz
dec
and
sub
pop
xchg
leave
pop
(bad)
sti
or
sub
pushf
xor
imul
or
cmp
cmps
ins
sbb
xchg
pop
test
fst
out
and
sbb
dec
push
jbe
vpsrlq
outs
or
in
(bad)
mov
outs
jl
sbb
(bad)
xor
mov
ja
cmp
push
(bad)
push
icebp
dec
mov
jecxz
inc
into
cwde
adc
jecxz
pop
outs
xchg
sti
xchg
xor
mov
xchg
add
movs
(bad)
mov
out
pop
sbb
mov
xchg
lahf
mov
jns
jns
les
or
out
pushf
cmc
into
or
mov
int3
jp
xlat
ret
(bad)
pusha
jmp
cwde
ds
gs
add
mov
out
(bad)
movd
stos
sub
add
xchg
lods
test
xor
add
and
imul
pusha
sahf
shl
dec
or
pop
adc
rcr
or
les
pop
ins
lods
stos
jmp
push
mov
popa
mov
inc
ss
aaa
mov
shl
mov
inc
sbb
sbb
(bad)
and
pop
cdq
(bad)
in
ins
and
lds
lods
cmp
sahf
or
ds
pop
push
adc
cmp
movs
pop
shl
cmc
cmp
and
push
cmp
jmp
dec
cmp
outs
xchg
stos
mov
in
jge
mov
vcvtuqq2pd
push
sub
shl
aad
movs
xor
adc
rcr
add
sar
out
add
into
adc
out
inc
inc
call
nop
daa
out
add
int
call
js
push
cmp
ficomp
cld
inc
repnz
inc
shl
jns
fsubp
cmc
cmp
mov
inc
imul
add
push
mov
cmp
or
mov
(bad)
push
push
rol
ins
mov
jns
or
dec
inc
lods
xchg
arpl
lods
sti
jo
add
cdq
ret
retf
retf
loope
(bad)
mov
lods
xor
lds
jbe
cmps
not
xchg
fimul
mov
and
mov
mov
mov
leave
in
(bad)
lock
jle
dec
or
dec
idiv
and
repnz
lods
pushf
call
adc
cli
popf
cmp
in
repnz
enter
jb
mov
xor
mov
stc
aam
dec
jne
shr
sbb
bnd
out
dec
sahf
imul
rcr
adc
push
mov
or
and
mov
(bad)
data16
hlt
movs
jns
sub
aaa
pop
inc
mul
pop
xchg
movs
call
cmp
or
cwde
test
dec
sbb
sub
ins
and
push
push
cmp
stos
arpl
or
push
add
mov
pusha
dec
xchg
cmp
mov
cmps
add
or
cmp
or
cmc
jns
mov
jle
mov
ror
dec
adc
shl
mov
ja
pop
xor
jno
ret
jnp
inc
fs
jb
sub
cld
push
leave
add
jmp
in
push
adc
shl
lods
inc
jle
mov
add
lods
dec
xchg
push
mov
inc
mov
fwait
or
pop
sbb
pop
sar
sub
or
out
xchg
sub
xlat
repnz
cmp
nop
retf
in
ins
push
jg
dec
push
xchg
push
push
sub
sub
hlt
in
push
in
xchg
das
pop
rcr
lods
ret
test
pusha
cmp
jb
shl
bound
call
or
scas
mov
repnz
(bad)
mov
cmps
int3
outs
clc
jg
pop
pusha
leave
inc
rcr
in
retf
aaa
pop
push
movs
retf
jge
(bad)
popf
fild
daa
cdq
movs
add
cmp
push
add
retf
jg
pop
mov
pop
fnstsw
xchg
not
sar
and
int
outs
test
mul
arpl
out
or
push
loop
loop
data16
mov
outs
jae
ins
xor
mov
push
push
pop
int
sbb
or
les
ret
pop
fadd
dec
inc
icebp
lods
push
sbb
xchg
movs
scas
out
mov
cs
xlat
out
pop
aam
(bad)
cmps
inc
enter
mov
cmp
sbb
push
xchg
mov
outs
retf
mov
mov
sub
cdq
call
sbb
aad
sbb
mov
lods
hlt
mov
mov
push
or
faddp
jb
and
mov
lods
push
jg
xchg
sub
into
sbb
sbb
xchg
mov
out
(bad)
pop
mov
xor
xor
jae
xchg
sbb
in
je
add
xor
lock
inc
jbe
push
cmp
loope
scas
mov
test
jge
or
scas
push
loopne
adc
or
imul
fcomp
loopne
or
mov
int
push
pop
loopne
cdq
ins
pop
cmps
sub
call
push
aaa
xor
mov
xor
push
gs
cmp
pusha
mov
mov
pop
lods
pop
pop
sbb
(bad)
cli
pushf
cmp
dec
mov
sub
cmc
lods
ret
sti
ss
mov
push
aas
or
bound
pop
push
not
or
sar
ret
dec
xchg
inc
xchg
ret
adc
adc
ret
or
mov
cmc
jne
xchg
mov
fst
bound
adc
das
pushf
pop
ds
adc
and
jo
aaa
inc
sub
jmp
clc
dec
je
and
test
lods
sub
xor
popa
mov
scas
stos
dec
lea
mov
mov
inc
jbe
adc
xchg
int
pop
daa
push
data16
call
jge
sub
adc
cmp
pop
je
sbb
out
repnz
fist
inc
fisubr
push
jmp
in
ror
rol
cmp
outs
in
ret
add
fsub
dec
pop
and
or
ret
push
jae
push
call
fiadd
jo
mov
and
out
xchg
imul
fistp
hlt
mov
test
sti
pop
mov
or
ss
dec
rcr
stos
dec
jle
pop
aas
sub
cmp
push
call
mov
mov
cld
push
mov
dec
(bad)
imul
adc
xchg
and
and
xchg
jo
sbb
and
jne
xor
sbb
xchg
sbb
push
test
pop
pop
sbb
mov
stos
jo
mov
jg
cmp
in
cmc
sub
bound
dec
shl
in
and
fwait
mov
ret
push
shr
xchg
xchg
ret
xor
dec
enter
adc
sbb
fadd
movs
fld
iret
mov
jecxz
and
cmps
jae
icebp
shl
bound
add
add
mov
add
or
aam
jb
pop
push
sub
and
cmps
mov
xor
sub
cmp
xchg
inc
fnstcw
cdq
ja
sbb
jecxz
stc
mov
cmps
sub
sbb
(bad)
fsub
fist
bnd
ja
test
mov
pop
sar
ret
mov
std
xor
sbb
retf
jmp
shl
jo
adc
dec
adc
or
jb
fcom
xlat
jmp
push
and
adc
cdq
xchg
adc
inc
add
add
push
and
gs
and
loop
bound
mov
cmp
inc
out
cmps
lds
push
or
pop
pop
cdq
or
inc
ins
adc
cmp
(bad)
addr16
xor
cld
sar
pop
cli
mov
sbb
or
jg
push
call
es
unpcklps
xchg
sbb
jmp
inc
bound
daa
mov
lods
int3
mov
mov
cmp
mov
xlat
popa
add
(bad)
test
into
xchg
push
pop
and
and
mov
lds
push
xor
fisttp
das
add
cmps
mov
inc
aaa
mov
sbb
cdq
cmp
inc
(bad)
out
dec
dec
rsqrtps
jns
mov
mov
sti
add
ret
jae
imul
jmp
mov
imul
inc
push
mov
in
sub
les
ja
retf
push
lods
ins
xlat
icebp
ror
sub
repz
rcl
xor
ret
pop
mov
inc
and
or
mov
or
lahf
hlt
and
pop
je
mov
dec
dec
mov
loop
sahf
mov
sub
sbb
jle
xchg
mov
and
mov
aaa
pushf
or
sub
xor
imul
int
jecxz
mov
inc
xor
test
stos
sbb
shl
pop
push
sti
push
cmp
mov
xor
in
jg
xor
mov
mov
test
sub
cmps
aas
xor
sub
mov
jp
push
and
pop
adc
out
mov
dec
sti
cmp
add
dec
fdivr
jecxz
shl
cld
pusha
xor
stc
aas
sub
cmps
xchg
popa
jbe
test
jnp
xchg
lahf
or
repz
cmps
inc
or
inc
call
sbb
cld
lock
ins
jae
addr16
fidivr
push
xchg
sbb
mov
sub
xor
xor
mov
(bad)
in
xor
in
(bad)
dec
repnz
jle
jecxz
jg
mov
clc
icebp
sbb
jp
adc
and
xlat
loopne
cmp
pop
pop
inc
push
mov
and
ja
lock
or
or
mov
mov
add
pop
jmp
mov
add
jg
je
pop
jns
and
(bad)
call
mov
inc
imul
enter
jl
jae
loopne
daa
cmp
sub
cmp
and
out
cli
hlt
dec
cmp
les
outs
sbb
aad
inc
outs
mov
jecxz
add
xchg
xor
cmp
sub
or
fnstcw
outs
ret
jmp
out
jg
or
cmp
inc
push
mov
jmp
adc
cmps
add
into
or
jp
cmp
and
and
inc
mov
push
clc
cmp
adc
dec
popf
and
xchg
xchg
std
cmp
in
in
movs
test
mov
retf
sbb
fs
data16
pusha
xor
pop
add
mov
loope
sbb
call
imul
clc
dec
test
cmp
pushf
pop
push
xchg
inc
pop
and
or
cmp
(bad)
cld
adc
xchg
loop
push
sub
xrelease
inc
dec
xlat
rcr
aas
(bad)
sbb
or
aaa
les
mov
retf
mov
div
cdq
ins
sbb
xor
into
gs
xor
aad
out
(bad)
lods
popf
add
cmp
lock
adc
cmp
jne
mov
add
mov
and
jb
test
call
stos
jno
imul
xor
or
in
fcom
cmp
sbb
mov
dec
lods
cmp
outs
push
jg
sbb
or
ja
push
push
dec
fidiv
dec
rol
(bad)
xor
xchg
add
int3
test
arpl
addr16
pop
das
push
mov
movs
lods
and
call
pop
mov
jne
fstp
push
loop
adc
mov
pop
lea
test
jo
dec
push
mov
mov
les
imul
fs
int3
pop
adc
jmp
push
fidivr
repnz
repz
jecxz
dec
cmps
fcomp
data16
adc
loopne
adc
mov
fwait
mov
or
fcomp
mov
sbb
mov
mov
add
xchg
(bad)
ins
imul
cmc
dec
mov
arpl
cmp
icebp
(bad)
cmp
cwde
lds
bound
push
arpl
mov
mov
bnd
lods
into
cwde
loop
mov
jno
xlat
adc
xor
js
fmul
sub
jo
(bad)
xor
push
push
and
adc
push
cmp
mov
inc
xchg
inc
mov
sbb
and
push
push
push
fdivr
dec
ds
cld
fs
adc
scas
cmp
lods
push
sbb
cld
sbb
cdq
fdivr
jmp
retf
mov
mov
mov
sbb
cmp
or
dec
adc
pop
or
cmp
gs
rol
and
lea
pop
fs
add
add
fild
pop
adc
push
rol
mov
das
cld
pop
dec
sub
(bad)
(bad)
fild
add
(bad)
neg
dec
push
daa
sbb
in
mov
fild
inc
sti
jo
mov
movs
inc
or
es
sub
inc
or
(bad)
push
sbb
jecxz
cmps
icebp
xchg
mov
jecxz
mov
into
mov
xor
out
mov
push
pop
mov
rcl
mov
pop
fisttp
ins
sub
clc
mov
add
outs
dec
xor
mov
push
test
xchg
push
push
je
sar
fild
into
movs
lahf
push
mov
adc
jmp
movs
mov
push
adc
mov
cmp
fnstcw
ret
int3
retf
xor
dec
sub
xchg
fs
cmp
adc
(bad)
cld
jg
cmps
(bad)
dec
dec
fcom
mov
fld
in
xor
adc
or
mov
gs
add
loop
lods
movs
retf
xor
ss
mov
outs
xchg
mov
leave
pop
cdq
rcl
pop
addr16
add
xchg
retf
mov
ja
movs
icebp
jle
jnp
fnstcw
cs
ds
popf
mov
xor
ds
mov
jmp
div
mov
pushf
pop
imul
fisttp
stos
call
call
or
sub
xchg
jmp
ja
xor
aaa
es
mov
mov
cmp
loope
or
sub
gs
inc
and
cs
popf
ja
mov
mov
cs
sub
nop
pop
xor
inc
popa
imul
pop
jae
add
scas
jl
push
add
adc
in
imul
gs
inc
mov
xlat
bnd
ins
enter
jmp
sar
or
call
rol
cs
mov
push
dec
gs
and
cmp
sub
jge
shl
test
lods
mov
pusha
jmp
div
imul
xchg
jb
fwait
scas
jno
sub
pop
cmp
xchg
addr16
and
inc
inc
cmps
xor
dec
push
popf
fisubr
push
jb
cmp
rcr
xchg
xchg
adc
fist
shl
jnp
mov
icebp
ror
mov
fdivr
sub
push
aaa
(bad)
into
pandn
adc
and
fs
or
in
mov
mov
and
dec
inc
lock
test
pop
jbe
sub
dec
in
test
mov
or
cs
pop
into
sbb
(bad)
dec
dec
mov
add
xor
pushf
lods
lds
nop
or
inc
xchg
movs
push
retf
or
jne
lods
lock
dec
pop
sbb
retf
dec
and
inc
cmp
mov
stc
push
mov
div
xor
test
call
jb
jns
ins
cmp
adc
pop
mov
pop
aad
jne
inc
movntq
xchg
mov
fiadd
or
in
hlt
adc
mov
add
cmc
imul
aas
mov
push
mov
rol
jnp
idiv
ror
sub
gs
ins
das
add
fimul
nop
ror
xchg
dec
sbb
mov
enter
shl
ret
out
xor
mov
cmp
pop
inc
jmp
inc
xor
xor
imul
js
es
push
jecxz
xchg
out
cs
iret
je
mov
sub
pop
dec
(bad)
xor
stos
dec
test
sub
cmp
xor
and
stos
loope
push
push
jns
loop
push
in
mov
ret
fiadd
dec
imul
fwait
retf
xor
sbb
jle
(bad)
adc
xor
rcl
mov
add
sub
sbb
loope
add
adc
sahf
int
xlat
aam
push
test
jbe
inc
add
aad
cdq
add
iret
lods
in
pop
cmp
push
pushf
push
js
push
dec
ins
repz
jmp
loope
fld
cmps
aaa
lahf
jmp
or
sahf
xor
test
pop
fiadd
jg
dec
enter
adc
add
add
call
jne
dec
out
cwde
add
std
inc
sti
call
jo
sub
push
and
lahf
pop
cmp
adc
inc
in
push
sub
int3
jmp
jne
xor
cmp
or
push
mov
mov
mov
addr16
jmp
lds
retf
jb
out
sahf
cs
arpl
mov
scas
dec
aam
adc
pop
sub
stos
sub
mov
cmp
adc
push
xor
daa
movs
and
and
jge
sub
popa
std
add
in
jo
pop
call
or
mov
shl
xlat
fst
ins
or
and
ins
xor
into
push
lds
mov
hlt
adc
test
cmp
cdq
jle
es
xor
push
inc
sub
into
inc
movs
stc
cmp
add
cmp
idiv
xchg
cmp
stc
fld
inc
jbe
inc
adc
push
cmp
scas
push
repnz
scas
mov
shl
daa
aaa
mov
dec
(bad)
out
jo
sar
inc
lahf
push
nop
xor
and
cs
sub
ss
hlt
into
jg
xlat
pop
or
push
daa
in
in
ja
and
mov
scas
mov
mov
std
sahf
mov
inc
mov
scas
jno
aaa
pop
xlat
inc
fisub
ficom
and
outs
ret
fdiv
or
jns
mov
pop
xlat
rcl
iret
pop
push
(bad)
sub
mov
or
cmps
(bad)
mov
sub
add
das
popa
in
pop
aas
outs
jg
lods
lds
xchg
imul
pushf
pusha
mov
cmp
cmp
lods
fwait
mov
add
push
fld
xor
cmc
and
push
mov
repz
inc
xor
js
lock
(bad)
loop
jbe
xchg
gs
sub
mov
stos
in
cmc
lds
retf
pop
test
xor
inc
aaa
add
cmp
jecxz
sbb
scas
movs
movs
xchg
in
call
jecxz
(bad)
dec
sub
jnp
adc
jb
popf
aam
movs
or
lods
icebp
jmp
scas
es
mov
add
xchg
leave
or
push
pop
ja
xor
lods
imul
(bad)
das
mov
pop
push
rol
jp
int
inc
mov
adc
fwait
dec
(bad)
aad
push
scas
pop
ret
adc
and
int3
sub
mov
(bad)
sbb
int
or
inc
push
mov
push
clc
mov
mov
xor
sti
mov
pushf
inc
(bad)
jp
mov
jae
add
out
lods
ss
jmp
fistp
cmps
pushf
mov
adc
xor
pop
push
push
enter
adc
inc
inc
push
sbb
imul
(bad)
cmps
cli
sub
ds
stc
jg
dec
push
mov
lock
add
mov
cmp
mov
xchg
(bad)
push
cmp
adc
ins
int
pop
sub
dec
fbld
rcl
popf
mov
sub
std
sti
sbb
pop
sub
scas
fwait
inc
fldcw
lahf
test
aad
fstp
jmp
xchg
xor
adc
(bad)
sbb
add
cmp
repnz
sub
inc
ss
arpl
mov
ins
xchg
into
cld
cmp
jg
sub
into
fnstsw
adc
repnz
inc
xchg
cdq
jl
jbe
sub
add
in
add
or
add
pop
push
retf
inc
jmp
xchg
das
xcrypt-ecb
cmps
retf
dec
jl
push
gs
add
jp
fbstp
mov
jo
bound
adc
shl
pop
xchg
into
and
push
jne
add
out
retf
add
loopne
mov
mov
fisubr
or
fs
cmps
pop
cmp
ror
mov
retf
je
mov
jecxz
cmp
cmp
xchg
inc
iret
sub
ss
pop
xchg
imul
jmp
adc
mov
or
popf
movs
movs
pop
call
add
fdiv
cmps
lock
or
xor
push
jp
inc
xchg
jge
cmps
or
cli
push
fmul
dec
iret
xchg
test
test
cmps
rol
std
pop
nop
mov
adc
out
add
pop
jmp
imul
xor
inc
lods
into
sub
rol
in
dec
rcr
scas
cwde
rcr
or
push
cwde
and
mov
mov
sbb
ret
adc
xchg
dec
loope
in
jns
out
add
sub
jbe
arpl
push
aaa
js
push
stc
stos
push
push
pushf
ins
aas
sub
fild
cmp
xor
push
add
out
cmp
sbb
mov
enter
(bad)
sbb
mov
add
mov
jne
dec
mov
push
cmc
fist
popf
inc
mov
xor
es
jb
imul
pop
jo
addr16
ins
stos
test
inc
ja
lahf
dec
mov
mov
sub
cmps
shl
dec
lds
gs
xchg
jno
addr16
mov
sbb
(bad)
push
jbe
out
cmp
leave
jnp
scas
sbb
xlat
retf
mov
test
mov
out
and
sbb
sti
mov
mov
jne
xchg
hlt
das
jge
sub
rcr
and
aad
jo
cmp
shl
push
or
loop
in
jecxz
retf
and
mov
push
das
mov
in
out
rol
int
mov
out
xor
inc
mov
sbb
in
rep
mov
jl
mov
imul
outs
inc
xchg
lods
cli
mov
cmc
out
cdq
jmp
je
xor
cmps
ret
push
or
xchg
inc
dec
jno
imul
lods
xor
pop
push
add
pop
mov
inc
jne
and
xchg
xchg
cmp
cmp
pop
mov
mov
iret
push
movs
pop
dec
mov
inc
cmp
xchg
mov
pop
out
xchg
shl
inc
shl
or
inc
jmp
lahf
or
arpl
cmc
jno
lods
movs
(bad)
fcmovnb
shr
shl
xchg
ss
cmp
inc
xchg
jecxz
mov
ret
sar
stos
fs
pop
loope
lea
sub
int3
std
enter
addr16
inc
mov
out
stc
xor
cmp
in
ins
add
test
std
cmp
push
in
sub
call
test
lahf
jnp
ficomp
pop
xchg
arpl
lods
push
xchg
inc
lds
shl
mov
pop
push
into
xor
fldcw
mov
call
inc
push
cmp
test
push
test
lea
mov
pop
xor
mov
ins
movs
call
push
sub
jecxz
jmp
repnz
cmps
out
aad
dec
or
movs
ds
pop
xor
sti
js
push
mov
mov
or
or
ret
jb
adc
ja
lahf
das
jl
mov
adc
lods
arpl
pusha
mov
push
loop
not
jnp
pop
fcomip
vmwrite
sub
sbb
or
(bad)
push
adc
mov
jne
dec
outs
arpl
in
aas
push
dec
je
dec
(bad)
(bad)
fmul
arpl
repnz
cld
dec
add
cmp
pop
cmps
or
mov
xor
pop
or
mov
xchg
outs
sti
sbb
test
pop
call
pop
retf
(bad)
adc
icebp
mov
xchg
jbe
push
or
xor
test
or
and
int
xchg
leave
sbb
mov
dec
in
dec
xchg
cmp
xor
sbb
scas
mov
cs
(bad)
fwait
push
mov
mov
or
(bad)
cmp
mov
js
adc
lods
mov
mov
fistp
retf
jb
push
adc
cs
inc
out
mov
mov
das
lods
mov
leave
imul
and
mov
and
lock
dec
xor
mov
test
inc
sub
xor
sub
jp
adc
jno
sahf
cmp
inc
data16
cli
fld
xchg
and
das
call
mov
mov
(bad)
xlat
sbb
ja
cmp
mov
mov
add
inc
sbb
lahf
sbb
cmp
retf
jb
stos
mov
mov
lahf
xor
and
(bad)
push
retf
cmp
cld
or
call
mov
jl
mov
adc
idiv
adc
xor
sub
inc
imul
popf
mov
imul
popf
mov
push
js
push
jmp
and
setae
inc
add
dec
neg
lahf
loope
call
push
mov
fidivr
test
loopne
mov
mov
and
dec
inc
cmps
(bad)
jge
dec
pop
dec
leave
test
push
mov
mov
cmp
dec
pusha
push
pop
lods
pop
jmp
out
inc
pop
iret
cli
jae
jne
mov
out
fiadd
mov
jbe
movs
xchg
movs
pop
fstp
popa
push
dec
movs
(bad)
js
imul
ror
stos
pop
loopne
mov
out
popa
ror
je
dec
in
fsub
add
xchg
ror
iret
pop
mov
mov
and
outs
pop
rcr
cld
xchg
xor
sbb
sbb
cld
int
push
loope
scas
mov
adc
xchg
adc
add
dec
hlt
inc
add
sar
pop
stos
pop
ret
call
sub
jbe
pop
mov
jp
jns
int3
out
inc
das
xor
enter
pushf
cmp
test
mov
sub
cmps
dec
ret
pop
ja
or
lea
cdq
cmp
add
test
cmp
fisttp
xor
out
loope
(bad)
mov
add
add
or
cmp
adc
jo
adc
sub
stc
mov
pop
call
mov
xchg
inc
jl
loopne
jmp
fst
cmps
rol
and
mov
sar
cmp
inc
arpl
data16
gs
jnp
call
jg
mov
test
mov
test
aas
pop
shl
(bad)
call
sbb
mov
xchg
pop
fcomp
test
cmps
call
arpl
test
xor
daa
mov
arpl
daa
(bad)
and
or
or
(bad)
and
scas
in
aad
jp
test
call
stos
pop
(bad)
xlat
sbb
shr
jbe
push
and
adc
jecxz
adc
mov
xchg
cmp
ins
inc
lds
inc
xor
cli
or
mov
sub
pusha
add
dec
and
pop
and
mov
mov
sbb
jno
xchg
(bad)
pop
lock
retf
jmp
push
pop
and
push
ds
add
xor
sar
push
out
push
adc
test
cli
pop
dec
sub
into
ins
xchg
gs
retf
rcl
or
add
jmp
loope
popf
shl
loope
je
and
fcomp
imul
push
add
or
adc
nop
push
mov
push
mov
ins
mov
cmp
cmc
jmp
into
xor
xor
ins
loopne
das
adc
or
lahf
rcr
jmp
icebp
enter
jb
push
push
dec
pop
push
pop
xor
cld
xchg
add
sub
add
les
add
loopne
mov
push
adc
in
add
add
test
cmp
repnz
scas
nop
movs
scas
push
hlt
outs
sahf
jmp
jecxz
mov
xchg
or
add
mov
rcr
mov
stos
ret
mov
sbb
rcr
jmp
shl
mov
push
xchg
out
lahf
pop
or
aas
jb
fisttp
jmp
jmp
adc
and
hlt
int3
cmps
sub
or
cmp
inc
cmp
adc
dec
das
loop
jno
mov
pop
mov
std
sub
pop
pushf
mov
adc
lds
mov
es
lahf
(bad)
out
in
ds
and
mov
cmps
(bad)
and
lock
inc
shr
ss
mov
lahf
arpl
and
inc
adc
nop
stc
lahf
cmp
scas
cli
jp
(bad)
pop
xchg
inc
and
pop
sbb
pop
jecxz
inc
sub
xor
jae
nop
adc
gs
test
rcl
jnp
in
pop
or
dec
mov
jb
inc
push
pop
shl
cmp
mov
mov
fdivr
sbb
jp
add
mov
das
sbb
add
nop
retf
ins
(bad)
xor
lahf
in
sub
popf
repnz
push
outs
push
(bad)
shl
fst
aas
push
jno
test
dec
loop
and
mov
js
test
cmp
xchg
adc
push
jp
ds
retf
jp
xchg
xchg
push
neg
bound
push
data16
cli
inc
dec
inc
mov
xor
adc
hlt
hlt
shr
inc
push
dec
iret
dec
add
or
imul
pop
pop
js
push
gs
jne
pop
test
mov
or
mov
movs
sub
in
mov
mov
stc
shl
cmps
jg
xchg
add
sti
cmp
cli
pop
jle
add
neg
cmp
sar
jae
push
loop
mov
pop
sbb
dec
mov
mov
sub
inc
getsec
sbb
fbld
arpl
inc
cmp
mov
in
or
dec
push
xchg
test
lock
xchg
fxch
aaa
ror
arpl
test
int
in
mov
xor
pop
into
pop
push
jmp
jecxz
call
cmc
dec
aas
mov
adc
mov
out
mov
mov
(bad)
pop
push
test
push
xlat
xor
adc
sti
(bad)
in
popa
cli
cmps
or
add
xchg
xchg
lods
inc
into
inc
add
adc
and
or
sub
pop
ret
mov
mov
out
imul
cmp
sbb
arpl
sub
loopne
mov
bound
arpl
loope
outs
and
(bad)
mov
sbb
les
mov
aam
shld
jbe
inc
nop
inc
mov
hlt
jmp
lods
imul
cmc
xlat
push
imul
outs
hlt
xor
adc
jmp
sub
dec
into
out
inc
aad
add
out
jmp
mov
addr16
movs
cdq
mov
mov
(bad)
fnstenv
mov
jb
jno
test
jo
mov
mov
pop
cld
inc
mov
fist
stos
mov
jecxz
jmp
dec
das
jecxz
and
mov
imul
cld
xchg
arpl
push
dec
mov
jg
fsub
repnz
pop
stos
sub
mov
bound
mov
pop
cdq
mov
xchg
retf
mov
out
test
inc
imul
iret
shl
ins
bndldx
and
jmp
pop
clc
add
loope
add
xor
fistp
cmp
sbb
push
push
pop
lds
adc
leave
jle
hlt
aad
arpl
mov
xchg
icebp
xor
cli
sbb
repz
inc
icebp
stos
repnz
add
xchg
mov
pop
xor
pop
mov
in
mov
inc
xor
stos
dec
mov
jecxz
mov
xchg
jle
xchg
mov
jl
dec
cmp
pop
test
les
nop
fistp
and
arpl
enter
dec
adc
or
outs
add
movs
and
xor
mov
mov
div
adc
jno
sahf
call
pusha
mov
dec
adc
movs
int3
inc
cmp
int3
je
ret
stos
cs
inc
nop
dec
jno
dec
push
push
sti
mov
sbb
inc
xor
add
mov
ret
daa
pop
push
lea
ja
xor
or
mov
xor
ja
pop
cdq
mov
cwde
push
cmp
mov
xchg
cmps
xchg
jns
push
sub
sbb
mov
(bad)
hlt
sbb
arpl
jb
movs
push
cdq
mov
lock
jecxz
mov
or
(bad)
pop
mov
push
lea
pusha
mov
sub
jecxz
cdq
pop
fist
fcom
fld
int3
mov
or
jns
pop
sbb
xor
mov
xor
adc
sub
lods
dec
enter
jp
repnz
retf
add
fst
or
test
mov
pushf
out
xchg
mov
mov
xor
xchg
jecxz
stos
out
mov
add
or
push
or
jp
retf
jnp
push
cld
enter
call
jp
rcl
dec
or
gs
cmps
enter
lahf
jnp
movs
cmp
ins
call
mov
icebp
cmp
test
scas
scas
add
push
xlat
sub
test
xlat
les
fsubr
mov
fwait
loope
xchg
iret
repz
xchg
sbb
cmps
into
xchg
int3
xchg
(bad)
pop
cmp
cld
dec
pop
dec
cmp
mov
jge
and
loopne
cmp
icebp
lods
test
cs
lods
mov
in
xor
xchg
jle
adc
xchg
mov
inc
inc
sub
add
jecxz
mov
mov
pop
scas
pop
xor
jo
fcomp
xlat
jno
lds
sbb
test
add
bound
retf
jb
outs
stc
or
inc
stos
jae
fisttp
mov
test
loop
ds
jmp
(bad)
retf
ins
push
leave
sub
outs
sbb
pushf
inc
das
rcl
nop
xchg
call
add
out
test
lods
sub
dec
sbb
mov
imul
inc
jae
and
inc
lahf
enter
jmp
jge
dec
xor
int3
jle
aam
(bad)
and
jbe
call
mov
lock
add
sahf
dec
cmp
push
mov
cmp
and
inc
sbb
test
or
inc
fadd
xor
dec
sub
add
fdivr
ret
mov
cmps
rcl
mov
and
jo
imul
hlt
repz
jo
or
xchg
push
push
jecxz
and
popf
jmp
fisubr
ins
dec
hlt
mov
push
dec
les
dec
outs
xchg
shl
loop
xor
int3
pop
push
xor
(bad)
pop
xor
xchg
fimul
fadd
fs
mov
add
mov
loope
dec
or
in
fadd
leave
divps
pusha
push
jne
mov
adc
xor
(bad)
pop
lahf
pop
mov
mov
icebp
scas
fwait
inc
fdiv
mov
test
sbb
pop
and
push
cld
jno
dec
inc
jmp
or
jl
xchg
jl
ror
mov
sub
mov
xchg
out
mov
call
imul
push
ror
(bad)
mov
call
xchg
cmp
jb
xor
jo
sbb
cmp
xor
outs
jecxz
jp
inc
jl
stc
call
popa
mov
aad
inc
dec
sbb
fcom
jle
stos
jp
or
sub
out
adc
outs
mov
mov
outs
or
scas
add
pop
rcl
cmp
sti
cmps
fcomip
push
cmp
xchg
pop
ss
sub
gs
es
pop
out
rcr
pop
jl
dec
push
xor
xor
or
arpl
outs
inc
shl
loop
outs
hlt
in
scas
je
and
outs
mov
movs
cmp
mov
adc
data16
mov
push
outs
pop
ret
out
pop
sbb
movs
movs
sbb
adc
daa
mov
stos
xor
jno
mov
aam
or
or
idiv
aad
or
jp
xor
data16
pushf
addr16
test
jmp
outs
jno
pop
jns
ds
imul
test
test
scas
out
fidivr
jno
fcomi
jmp
jne
call
pop
push
adc
mov
push
aas
dec
fs
push
out
das
mov
sti
addr16
push
aam
dec
adc
and
(bad)
jae
mov
std
pop
scas
mov
pop
test
or
or
sub
fs
test
inc
cmps
stos
jp
loop
xor
mov
in
das
hlt
jmp
xor
jne
inc
push
inc
xchg
in
pop
das
mov
retf
ins
fisub
xor
pop
push
xlat
(bad)
sahf
loopne
xchg
mov
arpl
sbb
shl
dec
jne
imul
push
push
mov
mov
cmp
mov
arpl
xor
push
and
cld
push
push
je
inc
inc
sbb
mov
rol
mov
or
xchg
add
popa
mov
xor
bound
jbe
jo
dec
rcl
out
(bad)
xor
mov
adc
lock
add
or
and
adc
cmp
rol
push
les
xor
pop
loope
aaa
add
push
lods
mov
push
inc
popa
xchg
xor
pop
push
ror
xor
cmp
les
repz
cs
jae
ss
sbb
push
lea
mov
push
fistp
mov
or
dec
addr16
mov
lock
(bad)
je
add
fcmovnb
dec
leave
lods
or
mov
popa
std
call
mov
in
repnz
adc
mov
mov
pop
sti
add
mov
mov
call
jmp
cmp
scas
adc
xor
rol
mov
cwde
enter
xchg
stos
pop
push
or
mov
and
lods
sub
mov
fnstenv
(bad)
ds
xchg
dec
mov
outs
jns
aaa
cmp
popa
add
xor
inc
hlt
xchg
xor
dec
mov
loop
dec
cwde
push
sub
imul
pop
rcl
int
nop
stos
inc
in
push
fisubr
mov
pushf
ja
dec
mov
jns
je
and
cmp
lds
pop
lods
inc
repnz
popf
ds
xor
ret
sbb
adc
fwait
sahf
adc
sub
dec
xchg
inc
pop
xchg
inc
jp
xor
pusha
out
jle
sbb
xor
pop
imul
dec
xchg
xor
xor
mov
ds
call
enter
repz
icebp
fcmove
ds
retf
std
dec
xor
shl
das
sub
in
fcomip
fcom
out
loopne
bound
mov
hlt
popa
sub
mov
inc
lods
addr16
inc
or
sub
lods
xor
sbb
imul
outs
adc
scas
outs
cmp
call
fstp
inc
pop
mov
inc
mov
pusha
pusha
jo
pop
push
ret
fsub
int
hlt
js
stc
pop
sbb
jmp
adc
lock
lods
jmp
add
imul
mov
cmp
adc
lods
retf
xor
stos
push
(bad)
jmp
test
jecxz
nop
(bad)
imul
inc
in
pop
in
sub
sbb
ret
add
xchg
mov
fsubr
test
dec
mov
push
sub
sub
test
cmp
mov
jge
outs
gs
and
cmps
(bad)
out
out
loope
ret
in
lock
movs
jecxz
dec
imul
or
retf
leave
out
push
xchg
adc
adc
in
into
cmp
adc
jge
imul
jecxz
or
ins
xor
adc
pop
or
pop
stc
bound
in
jne
(bad)
retf
push
pop
scas
daa
mov
movs
ret
out
test
pop
hlt
jne
inc
test
mov
mov
test
retf
jl
movs
dec
(bad)
or
(bad)
cld
inc
dec
iret
imul
mov
jp
sbb
rol
mov
sbb
and
cmp
sub
out
lock
jns
rcr
scas
sbb
xor
mov
adc
push
pop
pop
push
shr
adc
lea
sbb
pmuludq
out
mov
push
mov
lock
es
fisttp
mov
xchg
test
mov
xor
mov
fbld
(bad)
cmp
mov
add
clc
xor
test
xlat
and
loop
call
addr16
outs
xchg
jecxz
fist
sub
dec
mov
mov
inc
sub
sar
or
sbb
stos
fdiv
stc
inc
fiadd
(bad)
sbb
xor
scas
and
aad
cwde
test
es
ror
and
mov
adc
pop
call
mov
cmps
jle
or
inc
int
mov
and
add
pop
retf
and
cmp
mov
cmp
xchg
js
jno
into
xor
outs
mov
pop
push
mov
daa
fcom
push
lea
sub
and
leave
xchg
cmp
xchg
dec
call
xchg
mov
ret
pop
or
int
cmp
push
add
or
dec
in
jnp
fisttp
jmp
mov
loope
xchg
je
mov
aas
dec
stos
call
fdiv
xchg
les
in
aam
pop
out
shl
add
mov
cmps
jae
xor
out
xchg
dec
out
cmc
and
pop
imul
lods
add
test
loopne
aas
mov
mov
adc
(bad)
mov
and
mov
cli
xchg
jbe
sar
scas
es
or
inc
pop
mov
es
push
adc
test
inc
das
leave
iret
lods
mov
cmp
mov
ret
rcr
(bad)
rcr
(bad)
icebp
cmps
sub
sti
lods
js
pop
xor
cld
ss
sub
sub
cmc
dec
mov
xor
lods
stc
cmp
inc
mov
shr
inc
bound
push
je
imul
inc
xchg
stos
sti
leave
jecxz
imul
(bad)
out
ret
inc
push
in
jns
test
stos
in
sar
mov
and
jb
iret
aam
mov
imul
push
adc
in
or
ins
jo
cli
add
pop
jae
or
dec
int
or
mov
cwde
fstp
outs
movs
inc
inc
xchg
sbb
cli
or
ret
push
jge
adc
dec
inc
mov
add
outs
mov
mov
xchg
(bad)
xchg
popf
jmp
push
xchg
sub
ins
pop
cmps
cmc
cli
call
gs
push
push
adc
xchg
xchg
xchg
iret
call
shl
data16
shl
jns
push
xor
xlat
sbb
mov
loope
(bad)
mov
aam
icebp
pop
int3
shl
nop
lea
mov
lahf
xor
and
or
movs
inc
or
fs
leave
popf
mov
xor
daa
sahf
dec
pop
and
ja
out
(bad)
rcr
cwde
scas
mov
imul
hlt
repz
mov
jle
mov
pop
stos
repnz
mov
in
dec
fucomp
push
mov
xor
or
xchg
movs
stc
test
dec
pushf
pop
mov
lahf
int3
sub
cmp
adc
jmp
mov
sbb
mov
dec
in
lock
cmp
out
push
outs
(bad)
jle
lods
fs
aad
adc
fsubr
jbe
jge
pop
inc
push
or
cmp
adc
ins
add
and
push
pushf
dec
lods
(bad)
rcl
and
mov
fstp
xchg
(bad)
imul
xor
outs
mov
ins
mov
cmps
or
inc
jbe
dec
mov
popf
adc
xchg
push
xchg
dec
fwait
xchg
cs
loopne
(bad)
jae
sbb
xor
call
sbb
retf
movs
inc
jecxz
(bad)
(bad)
and
enter
pop
ins
les
jmp
sub
adc
mov
mov
imul
jae
push
imul
inc
lahf
movs
enter
jg
jbe
dec
xchg
xchg
push
sub
add
dec
mov
lahf
pop
and
call
int3
ret
adc
call
sub
cwde
mov
dec
retf
lock
push
adc
mov
pusha
imul
dec
lea
js
or
jno
out
xor
fmul
push
pop
cmp
in
rol
sub
imul
sub
push
push
stos
cwde
mov
jmp
(bad)
test
xor
mov
movs
call
loope
jl
popa
and
cmp
mov
jne
mov
push
push
movs
xchg
scas
cld
shl
bound
fld
mov
jl
push
lods
in
xchg
pop
sub
xchg
sub
mov
or
inc
ja
(bad)
cmp
outs
jae
jnp
mov
fs
mov
jnp
dec
push
and
jp
lods
push
xchg
push
cmp
ins
leave
div
adc
daa
push
dec
inc
inc
push
pop
adc
scas
push
mov
hlt
int
out
add
or
mov
xchg
xchg
(bad)
daa
dec
addr16
or
clc
jge
iret
inc
and
loope
mov
cwde
mov
or
xor
dec
ins
or
bswap
ins
arpl
scas
std
xor
repz
fld
mov
aad
mov
or
xor
daa
popf
sbb
or
or
(bad)
leave
push
jns
scas
popf
das
outs
adc
test
fnstcw
mov
mov
sub
call
ja
jo
sbb
cmc
sbb
and
and
xor
jbe
scas
cmp
or
and
mov
adc
imul
xor
dec
repnz
cmps
pop
retf
xor
arpl
cmps
push
repz
cdq
je
sub
mov
cmps
je
jg
ror
adc
mov
pop
jo
out
mov
sbb
push
pop
loop
mov
aaa
inc
cmp
adc
mov
ins
clc
pop
(bad)
out
and
fld
mov
jb
mov
sar
outs
stos
push
(bad)
fwait
jle
call
mov
push
xlat
mov
sub
push
cmp
xchg
xor
stos
mov
ins
lods
cdq
je
(bad)
adc
or
cdq
sbb
mov
jmp
pop
sahf
dec
inc
shl
cmp
push
push
movs
cmc
jo
popa
cmp
mov
and
or
sub
pop
cmc
(bad)
sbb
or
add
rcr
fwait
pop
in
push
mov
rcr
(bad)
lods
adc
jg
sete
aad
sets
loop
push
cmps
adc
mov
jb
mov
outs
ins
stc
jmp
add
cmp
pop
repz
icebp
sar
sub
mov
cld
paddb
or
mov
sbb
mov
xchg
enter
xor
push
enter
loopne
rcr
jmp
adc
cdq
xor
ror
xor
pop
xchg
mov
sbb
ret
push
in
xchg
out
xor
add
repz
or
jl
sbb
dec
xor
jl
fxch
push
pop
mov
jmp
arpl
xor
cmc
xchg
std
ret
or
jmp
mov
xor
fldcw
push
cli
out
or
cmp
cwde
push
mov
nop
out
movs
div
mov
sbb
dec
fcom
cli
mov
cdq
test
adc
inc
sbb
pop
mov
jne
sub
inc
sub
in
cmps
xchg
inc
add
adc
ins
cmp
lea
ret
fist
xchg
sar
es
test
gs
outs
(bad)
jns
in
mov
xchg
xor
cs
push
jnp
pop
mov
loopne
mov
rcl
inc
mov
xor
outs
sub
mov
or
(bad)
pop
adc
jb
pop
cld
cdq
(bad)
cmp
ss
cs
xor
ins
inc
mov
xlat
out
sar
jge
sti
push
enter
pushf
cmp
scas
call
mov
cmp
cmp
call
or
pop
gs
xor
lds
cmps
stos
in
mov
cmps
mov
je
sub
xchg
pop
enter
jecxz
push
xchg
mov
pop
dec
rol
xchg
and
loopne
mov
dec
ret
cmp
mov
popa
pop
fiadd
cs
in
push
or
stos
jge
(bad)
jbe
cli
jbe
inc
fdiv
add
push
dec
pusha
lahf
mov
mov
mov
inc
or
movs
imul
xchg
out
push
scas
aas
sbb
std
das
xor
adc
pop
lock
(bad)
xor
stos
sub
cdq
add
sub
ret
adc
or
and
adc
cwde
mov
xchg
push
mov
neg
sar
adc
or
push
shl
sahf
xor
jl
pop
(bad)
xor
pop
mov
jl
or
sub
sbb
mov
jg
jle
mov
xchg
retf
cmp
push
add
jne
dec
(bad)
jmp
push
out
ror
(bad)
add
sub
ins
pop
stos
jl
mov
pusha
addr16
push
movs
es
xchg
jecxz
cwde
jecxz
cdq
dec
pop
rol
push
rcr
loope
les
and
mov
and
xchg
mov
jl
xchg
sti
pop
arpl
outs
push
mov
mov
aaa
dec
mov
sti
adc
popf
bound
cs
cmp
adc
test
add
xor
dec
fucomip
jle
cdq
sti
(bad)
adc
shl
inc
jae
not
dec
inc
mov
bound
add
(bad)
pop
push
adc
add
xchg
or
mov
jmp
js
xor
mov
sbb
in
loopne
mov
ror
mov
mov
jp
ins
arpl
push
nop
mov
enter
mov
mov
mov
sbb
aad
stc
add
mov
xchg
fcomp
pushf
mov
sbb
push
xchg
test
cmp
cmp
or
fimul
in
pop
pop
mov
mov
cmp
ins
(bad)
pop
push
lock
fdivr
cmp
addr16
push
fwait
xchg
xchg
bound
dec
aaa
js
(bad)
xor
lods
xor
mov
inc
cmp
xchg
ror
(bad)
loopne
or
dec
ffree
in
push
test
jle
enter
rol
popf
pop
dec
jne
ficom
mov
xor
cs
mov
mov
pop
retf
add
repz
mov
xor
sbb
inc
gs
mov
das
out
int3
push
xchg
aam
mov
bnd
imul
or
cdq
jmpw
xchg
and
jo
aam
mov
nop
jne
in
jb
(bad)
lea
jb
fadd
jnp
mov
inc
arpl
das
lock
popf
sbb
les
cli
shl
and
test
popf
xchg
mov
(bad)
sbb
in
mov
cmps
pushf
pop
dec
fldcw
fdivr
cmc
scas
mov
cmp
jmp
sbb
aam
mov
out
nop
dec
mov
jle
xchg
call
pop
vpunpcklqdq
enter
push
fmul
popf
add
aam
mov
pop
fsubp
jno
add
sub
lahf
inc
mov
loope
jmp
popa
add
push
das
out
sub
fdiv
jbe
neg
xchg
adc
mov
cdq
hlt
sub
aad
pop
xlat
add
xchg
mov
jns
cld
pmulhw
imul
xchg
dec
inc
add
lea
mov
add
xor
mov
add
jge
mov
std
mov
les
mov
scas
add
ret
idiv
mov
and
in
mov
into
sub
(bad)
jbe
adc
mov
and
lock
dec
adc
mov
repnz
jmp
xchg
retf
mov
aad
adc
lock
cmp
(bad)
push
jg
and
retf
inc
jge
outs
inc
fs
jle
and
je
in
sub
in
push
adc
out
data16
mov
loopne
in
add
push
mov
ficomp
mov
movs
xor
fldz
outs
pop
or
test
pusha
imul
or
out
pop
and
pop
add
mov
out
sub
out
js
sbb
mov
ror
aas
gs
pop
lds
iret
ins
inc
cmps
in
scas
arpl
(bad)
test
or
mov
call
mov
pop
retf
clc
pop
gs
inc
stos
je
mov
mov
(bad)
pop
fdivp
fnstsw
dec
xor
pop
ficomp
mov
sub
sub
(bad)
xchg
loopne
cs
push
aam
jae
(bad)
vcmpss
rcr
mov
add
jecxz
cs
add
ja
xor
push
cmp
cmps
loop
test
add
arpl
in
leave
mov
or
jns
or
and
ficom
int
jns
cmps
jae
popa
and
jb
mov
imul
pusha
(bad)
mov
or
xor
(bad)
rol
adc
mov
inc
sbb
mov
repz
push
cwde
xchg
cmp
pop
inc
les
leave
test
dec
xchg
dec
or
clc
ins
push
cs
icebp
div
popa
fcom
retf
int
je
pop
jecxz
cmp
sti
mov
xlat
in
and
lods
cmps
mov
pop
and
popa
sbb
push
mov
add
dec
sbb
call
lahf
inc
std
(bad)
mov
push
cmp
fcomp
sbb
dec
popa
lods
cdq
push
jo
mov
jb
sub
popf
mov
data16
enter
mov
pop
xor
shl
adc
retf
push
or
inc
scas
(bad)
adc
movs
(bad)
mov
and
stc
jae
add
in
mov
lock
sbb
ret
mov
ret
fucomi
jb
adc
xchg
inc
add
adc
enter
in
fcomp
dec
enter
rcr
inc
xor
rcl
xchg
xchg
pop
cwde
dec
(bad)
jno
mov
xchg
adc
cmc
push
dec
iret
scas
mov
jg
mov
cdq
sbb
jmp
test
dec
test
mov
dec
cmp
inc
loopne
rcr
xchg
ret
or
es
jp
dec
cmps
inc
jnp
enter
popf
and
or
(bad)
or
xchg
mov
call
xchg
add
in
lds
sub
mov
jp
fdiv
outs
lahf
dec
int
fmul
les
es
iret
cli
mov
pop
pop
mov
xchg
jl
pop
movs
or
pop
aas
into
pop
xor
dec
pop
call
test
mov
repz
inc
pop
sahf
ficom
lahf
popf
cmp
test
pop
jmp
fdivr
jmp
pop
adc
jmp
test
mov
js
(bad)
(bad)
dec
mov
and
in
(bad)
in
retf
cmp
data16
int3
sbb
dec
addr16
jl
or
jno
or
pop
inc
jns
mov
xchg
sub
dec
fwait
add
aas
popf
add
fiadd
cmp
aad
jns
xor
repz
out
movs
adc
mov
retf
dec
ror
dec
out
imul
sbb
pop
xchg
mov
clc
cmps
pop
and
xchg
or
aad
imul
aam
mov
jecxz
bound
dec
xchg
jl
(bad)
mov
mov
sub
pop
das
repnz
out
outs
jg
mov
inc
xchg
scas
push
inc
shl
mov
push
pop
lds
dec
adc
cdq
les
in
cmc
mov
ins
ret
push
jl
xlat
xchg
mov
mov
cli
clc
add
icebp
sub
jg
mov
rcl
jmp
outs
jae
and
clc
enter
dec
add
(bad)
enter
clc
scas
or
mov
push
movs
xchg
inc
cmp
jne
mov
loope
js
ja
in
or
cmps
aam
out
mov
jae
xor
dec
js
js
mov
in
int3
cmp
ins
outs
mov
xchg
sub
mov
mov
fisub
or
dec
jmp
mov
push
mov
jb
aad
mov
adc
stos
sbb
inc
clc
push
imul
ficomp
and
lea
adc
ficomp
js
jnp
fcom
jb
test
adc
jbe
loopne
dec
adc
add
rol
cmc
sbb
sti
pop
outs
mov
sub
sub
mov
inc
sbb
cs
sar
jbe
mov
sub
adc
scas
jne
imul
pop
daa
daa
cwde
sahf
jbe
sbb
cld
ja
jae
jnp
sahf
pop
adc
daa
jle
test
jl
cwde
ins
fldenv
lods
mul
outs
ret
call
imul
int
mov
(bad)
jno
push
ror
add
push
stos
adc
mov
push
pusha
dec
lds
mov
dec
mov
cdq
movs
lods
imul
mov
outs
adc
jge
(bad)
es
mov
fstp
mov
lds
dec
fcomp
cmps
popa
jle
aaa
(bad)
pop
xchg
jmp
xor
or
push
lahf
mov
cs
idiv
(bad)
cmp
loop
push
sti
out
and
jl
xor
jmp
mov
fild
fidiv
fwait
xchg
sub
mov
add
rol
nop
into
pop
push
xchg
loope
imul
or
fld
repz
mov
push
inc
pop
iret
movs
cmp
fwait
mov
in
push
lods
scas
stc
(bad)
sbb
xlat
imul
pop
mov
dec
je
push
mov
clc
loope
iret
mov
xor
leave
cmp
das
scas
pop
hlt
sub
mov
(bad)
push
xchg
add
sub
jae
push
fs
add
and
cmovge
mov
cli
adc
xchg
leave
aad
sub
(bad)
xor
aaa
add
add
int3
mov
loop
xor
aaa
mov
and
inc
enter
cwde
lahf
(bad)
mov
dec
js
dec
imul
mov
or
add
mul
pop
inc
int
inc
mov
cmp
in
xchg
cdq
push
(bad)
bound
mul
or
push
mov
(bad)
imul
in
daa
jno
pop
cmp
retf
inc
js
pop
jno
test
mov
(bad)
mov
and
xor
or
mov
push
push
fldcw
push
pop
and
sbb
and
loope
scas
icebp
adc
imul
push
setne
pop
in
and
push
in
xchg
ror
ds
imul
mov
lea
cdq
out
gs
or
(bad)
add
push
jo
das
ret
inc
lods
mov
rcr
pop
add
mov
cmp
call
jno
call
mov
jae
dec
xor
mov
cwde
dec
in
push
loope
leave
stos
dec
mov
into
stos
fimul
jecxz
mov
stc
pop
mov
leave
jne
push
push
adc
(bad)
mov
mov
jl
pushf
lds
adc
repz
outs
movs
call
xor
mov
in
fs
jle
mov
push
add
push
movs
cmc
ret
int3
dec
jg
mov
loop
mov
ins
cdq
sbb
popf
fist
fnstsw
add
rol
add
ja
add
out
cdq
cmps
push
bound
and
cmc
out
movs
mov
jo
mov
adc
fadd
inc
rcr
scas
cmp
addr16
imul
and
sbb
lds
dec
int
jns
pop
sub
(bad)
jmp
push
test
dec
rcr
test
imul
and
rol
out
mov
fwait
(bad)
fsubr
pop
fdivp
retf
repz
adc
inc
shl
push
push
mov
call
xor
jecxz
mov
inc
icebp
call
mov
mov
fcomp
xor
out
ins
adc
cmp
xor
cmc
popf
mov
adc
mov
jg
or
test
jno
dec
xor
icebp
push
jp
data16
jecxz
mov
and
mov
sub
push
pusha
ins
xor
xchg
cmp
cs
inc
pop
dec
shl
or
jb
jbe
fidiv
fidiv
cmp
or
in
(bad)
sti
pushf
cmp
lahf
call
mov
leave
sbb
jne
sbb
imul
sbb
movs
shr
sahf
inc
mov
mov
jecxz
push
pop
sub
out
and
nop
out
jmp
outs
(bad)
int3
jns
xchg
mov
cmp
xlat
pop
das
mov
add
jbe
cmp
mov
pop
pop
or
fs
ror
pop
or
push
xchg
push
das
inc
nop
retf
jns
mov
out
aad
jae
shl
das
leave
and
mov
(bad)
mov
dec
adc
push
push
es
in
cmp
add
into
out
dec
inc
call
push
sub
pop
adc
and
fisub
mov
xchg
sub
cmp
push
xchg
push
or
addr16
iret
inc
mov
inc
dec
mov
or
mov
sbb
out
lock
gs
pop
add
retf
shr
pop
adc
int3
test
rcl
sub
lahf
call
or
cs
pop
stos
adc
pop
sub
pop
or
or
inc
push
mov
jmp
mov
jne
repz
pushf
add
xchg
mov
or
and
lods
cwde
scas
les
mov
mov
mov
or
mov
outs
imul
loop
push
ja
inc
out
pop
mov
ja
add
(bad)
imul
loope
outs
sbb
jg
iret
ja
mov
mov
retf
jo
adc
repnz
add
in
xor
adc
push
aad
repz
icebp
jmp
repnz
xchg
std
push
(bad)
sub
out
outs
inc
imul
adc
hlt
imul
cwde
mul
sahf
xor
sbb
enter
jbe
lds
pop
or
mov
sub
test
inc
mov
shr
xchg
int3
dec
iret
test
cmp
les
xor
and
fsub
leave
(bad)
enter
push
inc
lock
pushf
sub
mov
retf
sub
xchg
mov
jecxz
(bad)
dec
mov
xchg
fs
mov
adc
in
jmp
mov
int3
inc
call
mov
not
pop
adc
mov
in
xor
arpl
mov
jnp
fnsave
leave
mov
dec
cmp
cmps
(bad)
push
mov
xor
lea
xor
inc
or
mov
dec
dec
ja
(bad)
stos
xchg
repz
pop
add
test
mov
iret
xor
leave
pop
loop
mov
fidiv
mov
sbb
mov
movs
pop
cmp
xor
sub
pop
adc
pop
mov
ret
leave
cli
dec
mov
je
in
ds
std
mov
lods
jno
xor
push
mov
and
xchg
sbb
not
aad
scas
adc
push
mov
std
sub
into
add
xchg
adc
xor
dec
fistp
test
icebp
dec
or
jns
call
fmul
jmp
out
cmp
std
stc
stos
stos
and
push
adc
sub
sbb
push
mov
mov
jae
ja
hlt
xchg
clc
pop
sub
inc
sub
pop
jo
gs
icebp
leave
jg
xchg
inc
xchg
fwait
fwait
xchg
xor
mov
sub
out
std
ins
in
dec
stos
and
not
cmp
lods
push
stos
mov
in
loopne
xor
clc
cmp
pop
ret
push
mov
iret
pop
div
shr
mov
adc
dec
imul
inc
jne
pop
aad
jmp
(bad)
loopne
js
xchg
sbb
cmps
inc
movs
movs
cmp
stos
add
in
sti
and
leave
pop
xor
inc
sbb
iret
(bad)
mov
pop
xlat
jb
push
cmp
test
cwde
push
test
sbb
mov
loope
pushf
ja
and
out
mov
mov
aad
dec
pop
fisubr
inc
xor
sub
cmp
xor
xchg
xchg
adc
lahf
or
push
loopne
jg
icebp
lods
sub
and
and
sbb
add
sbb
adc
test
sub
push
in
imul
loop
jmp
nop
sub
pop
in
(bad)
xor
pop
call
sub
and
(bad)
cmp
or
cwde
retf
fwait
add
imul
stc
bound
ss
add
hlt
pop
xchg
dec
ja
add
inc
push
add
sbb
cs
enter
test
test
clc
pop
call
mov
mov
dec
(bad)
mov
cmps
cmp
mov
movs
movs
into
(bad)
aas
clc
sbb
rcr
test
sub
out
push
les
push
retf
paddd
mov
inc
daa
pop
hlt
imul
xchg
cmc
sahf
fwait
jmp
mov
and
push
jmp
xor
int3
shl
jmp
mov
push
sbb
and
in
stos
cdq
pop
fst
mov
bound
jmp
mov
addr16
adc
sahf
push
mov
cmp
xchg
sbb
jnp
or
pop
mov
pop
(bad)
mov
lea
xchg
sbb
dec
jmp
outs
push
mov
cmp
cmp
not
gs
cmp
jnp
inc
gs
mov
sub
(bad)
xor
pop
popa
scas
(bad)
mov
(bad)
das
dec
push
xchg
or
movs
and
loop
push
ds
imul
test
dec
xor
(bad)
pop
cmp
fcom
push
xor
into
and
inc
in
iret
sbb
cli
sti
int3
lahf
xlat
jns
sbb
inc
push
nop
inc
into
pop
adc
dec
dec
inc
sub
ss
movs
adc
in
push
pop
sbb
cmp
shr
call
test
adc
cdq
dec
xcrypt-cbc
cmps
pop
popf
clc
xchg
cs
jmp
dec
mov
push
ret
sub
js
push
and
xor
fistp
test
xchg
inc
lahf
pop
or
loop
mov
in
fisttp
jnp
cs
cmp
(bad)
clc
xlat
cmp
ja
sub
adc
dec
inc
xchg
pusha
mov
or
jecxz
add
sar
xchg
mov
sti
adc
or
inc
and
gs
mov
lock
adc
push
or
jge
(bad)
sbb
jbe
and
test
fdiv
xor
retf
mov
pushf
pop
loope
xchg
cmp
pop
(bad)
mul
jbe
shr
dec
cmp
(bad)
ret
outs
leave
xor
mov
sub
mov
pmaxub
es
lods
inc
inc
mov
outs
aam
dec
and
mov
mov
xchg
adc
ins
mov
cwde
std
push
sahf
ins
sub
adc
add
arpl
pop
ins
pop
push
xor
dec
sub
adc
div
dec
dec
sbb
cdq
std
aaa
dec
add
jge
int3
out
jb
and
jecxz
cdq
je
and
retf
mov
jle
aas
cmp
add
jb
idiv
pop
xchg
jge
cs
call
adc
add
inc
fs
ja
fcom
sbb
cmp
pcmpeqd
sub
(bad)
sub
ret
cmps
nop
imul
mov
sbb
fisttp
push
xchg
daa
cmps
fisubr
and
cmp
mov
cs
dec
adc
xor
std
jns
push
pop
push
or
lods
cs
or
sahf
sub
sub
pop
es
loopne
pop
pop
sbb
xchg
mov
cmp
mov
scas
aas
test
or
and
and
(bad)
gs
pop
fcmove
loope
movs
sub
mov
xchg
pop
sub
or
scas
jns
dec
mov
enter
push
pop
jbe
test
xchg
adc
aas
ins
mov
sar
inc
or
mov
mov
(bad)
add
rcr
lods
frstor
shl
fst
inc
pop
jnp
xchg
inc
div
loop
stc
pusha
popf
cli
mov
sub
mov
ds
sti
inc
test
xchg
pusha
inc
cs
cli
dec
icebp
cmp
lahf
pop
retf
jnp
jl
lods
xchg
aad
repnz
cmp
sbb
cmps
stc
neg
jb
mov
and
movs
call
sbb
clc
xchg
and
xchg
test
mov
cmps
(bad)
clc
jg
out
addr16
lods
pop
pop
sbb
retf
les
in
xchg
inc
shl
das
xor
cmp
fist
jmp
cmp
retf
shl
or
aam
xlat
sbb
(bad)
xor
mul
xchg
fcomp
ins
imul
dec
push
jle
push
xor
adc
adc
scas
cmps
pop
(bad)
and
scas
fiadd
cmp
mov
jmp
in
leave
test
or
(bad)
in
mov
(bad)
push
jl
and
pop
add
push
in
pop
adc
dec
mov
test
xor
cdq
mov
in
leave
sbb
inc
and
xor
ficomp
(bad)
arpl
movs
mov
xchg
sbb
xchg
mov
bound
sbb
ins
aaa
sbb
in
push
fisubr
inc
cs
out
outs
std
ins
faddp
nop
lock
add
ficomp
mov
js
movs
adc
cwde
jmp
nop
jmp
in
sar
adc
push
icebp
ja
leave
jecxz
push
xor
(bad)
cmp
add
push
xor
inc
gs
add
and
pop
xchg
add
ror
pusha
in
xlat
rcl
aad
adc
popa
scas
dec
aas
jne
out
(bad)
scas
xchg
sbb
or
outs
cmp
inc
cdq
mov
std
lahf
jae
jge
xchg
xor
cmp
test
adc
clc
cmp
inc
inc
(bad)
xor
pop
call
ins
or
jg
pop
push
jbe
mov
add
jl
lea
out
test
pop
cmp
add
out
neg
fwait
adc
out
call
lahf
mov
add
push
fxam
lods
jl
sub
mov
scas
mov
or
mov
adc
and
inc
movs
adc
idiv
lahf
cmp
(bad)
out
xchg
imul
outs
mov
xchg
cmps
retf
push
and
xor
cmp
test
mov
pop
push
mov
ins
inc
lods
inc
ror
out
xchg
fwait
jae
mov
sar
and
push
jmp
jnp
ja
xlat
test
add
push
(bad)
pusha
inc
push
nop
loope
sahf
adc
jb
push
mov
mov
mov
div
mov
jmp
aam
es
repnz
es
and
jne
into
out
mov
mov
dec
adc
cs
repz
pusha
lock
test
mov
xor
div
cmp
nop
and
pop
dec
sbb
(bad)
ins
in
and
sbb
add
out
clc
sub
fstp
push
push
mov
cmp
jne
add
je
jle
sub
in
xchg
jle
(bad)
out
push
mov
int
cmc
sbb
repz
xor
repnz
mov
cmps
fwait
and
div
jb
xchg
pusha
imul
fst
adc
pop
aam
lea
fdiv
dec
xchg
push
(bad)
jnp
addr16
mov
add
add
test
xor
mov
popf
xchg
sti
jle
stc
jp
(bad)
cmp
cmps
mov
jl
aad
sub
pop
mov
enter
mov
retf
leave
sbb
ror
mov
pop
in
in
cmps
call
adc
adc
test
retf
xchg
je
add
movs
in
push
jg
cmc
sub
inc
add
cld
in
outs
mov
mov
aas
push
mov
test
hlt
ins
sub
mov
ret
jmp
cmp
aad
inc
and
cs
aaa
mov
xchg
loopne
mov
push
add
dec
xbegin
inc
into
adc
adc
rcr
mov
fdivr
mov
bound
mov
mov
sub
ss
and
jg
ficom
ret
shl
inc
mov
xor
dec
icebp
arpl
in
mov
xor
inc
pop
rcr
add
cmp
into
and
cmps
jb
and
xor
pop
in
aad
ror
inc
mov
movs
dec
shr
mov
or
int
push
xlat
cmps
je
arpl
jo
and
rcl
call
mov
es
icebp
mov
std
mov
push
push
rcl
cld
adc
fsub
adc
js
add
das
push
mov
jecxz
mov
push
(bad)
and
in
and
xchg
mov
add
aaa
test
(bad)
dec
loopne
add
div
push
cmp
es
mov
repz
gs
icebp
xor
push
rcl
inc
jns
mov
add
mov
fucom
mul
dec
loope
cs
xor
(bad)
push
xchg
and
pop
add
dec
sti
push
xchg
hlt
(bad)
or
ror
sub
dec
into
and
sbb
cmc
push
xor
pop
in
mov
mov
in
dec
xchg
add
xchg
ret
(bad)
push
push
cmp
in
and
mov
je
push
sbb
add
fistp
adc
mov
test
jg
sbb
nop
lock
xchg
mov
mov
mov
cmp
add
int3
adc
push
mov
xor
ret
fs
js
data16
push
jne
stos
adc
xor
scas
loopne
cmp
dec
cmps
push
adc
mov
scas
or
imul
xor
repz
ja
ins
rcl
out
dec
sti
sbb
xor
idiv
xor
and
pop
in
sbb
jl
out
inc
adc
fisttp
daa
fmul
jl
and
pop
and
mov
mov
stos
cmps
xchg
pop
cwde
inc
xchg
mul
sub
loope
sub
xor
adc
mov
lock
pushf
rcl
sub
in
jmp
adc
lea
imul
jge
dec
mov
jmp
push
mov
jge
xor
test
lods
and
adc
push
pop
or
inc
test
retf
pop
out
xchg
dec
push
xor
add
imul
dec
or
inc
loope
mov
push
cmps
cli
xor
cwde
movs
lahf
pop
jge
cdq
cld
xchg
scas
xor
ins
shr
push
jmp
dec
xchg
fadd
push
fimul
data16
dec
out
test
pushf
mov
or
add
(bad)
fcmovnu
sub
pop
mov
mul
mov
jmp
(bad)
jmp
js
cmc
mov
test
or
xchg
sbb
sub
imul
add
pusha
loope
ret
xchg
jmp
cmp
mov
icebp
out
inc
leave
mov
aaa
test
jae
sub
mov
dec
movs
mov
sbb
jno
clc
mov
rcl
aam
pusha
mov
pop
lods
and
pop
jecxz
jp
xor
out
jg
mov
xor
adc
cwde
cmc
mov
sbb
or
and
inc
mov
ja
sbb
mov
fdivr
inc
fimul
movs
cmp
mov
neg
push
stos
sbb
pushf
(bad)
adc
or
jmp
and
aad
mov
jnp
aam
pusha
xchg
xchg
std
popa
xor
jmp
cmp
stos
(bad)
xor
lods
jmp
jmp
je
pop
push
int3
loop
scas
sub
jnp
out
sbb
(bad)
dec
adc
retf
xor
cld
loop
xor
xchg
mov
das
inc
les
pop
sbb
mov
mov
enter
pop
fcom
outs
jl
mov
push
dec
and
or
or
dec
push
xchg
mov
xchg
rcl
dec
add
mov
aad
xlat
out
sub
popf
fisttp
je
(bad)
retf
sti
int
dec
mov
scas
jb
pop
in
or
out
xor
xchg
cdq
es
cli
cmp
ret
and
repnz
inc
jo
lea
enter
fstp
dec
xchg
inc
cdq
fidivr
mov
sub
addr16
jmp
js
shl
jo
pop
xor
leave
mov
jmp
enter
out
jmp
fucomp
and
std
std
fimul
add
mov
mov
push
movs
rol
pcmpeqw
push
sub
push
push
fidiv
outs
movs
aaa
mov
and
dec
retf
push
dec
push
aad
ret
xchg
sub
push
mov
xchg
push
push
inc
xchg
push
sub
movs
lds
ins
add
sub
pop
inc
mov
iret
ror
fst
inc
push
ins
popf
daa
or
fwait
jno
add
iret
rcl
rep
pop
jecxz
fxch
push
cmp
stos
stc
mov
lock
mov
mov
mov
repnz
lds
sbb
int3
in
pop
sub
and
call
add
cmp
add
(bad)
retf
out
or
and
xor
sbb
mov
inc
stc
enter
xchg
push
jmp
out
pop
ret
cmps
adc
test
mov
jle
pop
cmp
sti
hlt
outs
or
adc
xor
or
pop
or
dec
push
enter
cmp
push
lock
jb
sub
lea
add
dec
ficomp
dec
mov
pop
mov
stc
pop
fs
lods
cli
out
xor
sub
retf
bound
jge
dec
mov
call
dec
push
(bad)
mov
pop
inc
jl
dec
lods
inc
mov
aad
loope
push
ret
in
(bad)
xor
adc
pop
and
cwde
push
ss
sti
pushf
mov
mov
add
sbb
cmc
sub
cmps
pop
leave
out
mov
es
das
in
movs
sbb
and
xor
jecxz
xchg
inc
aaa
scas
sbb
mov
and
imul
shl
or
push
or
push
call
fwait
jae
mov
jb
adc
cli
mov
(bad)
xchg
aad
sub
cmp
cmp
lock
mov
imul
scas
jle
mov
or
dec
jmp
mov
mov
(bad)
loop
das
fcom
or
scas
ret
test
and
pop
mov
jp
mov
mov
pop
sti
repz
js
pushf
cmp
push
sar
mov
jmp
addr16
out
sub
test
arpl
mov
mov
cmp
adc
rol
pop
and
adc
mov
and
dec
mov
adc
loopne
jne
cld
aas
imul
aam
sub
jp
cwde
xor
push
scas
mov
out
and
mov
loopne
pushw
js
lea
fcom
call
movs
inc
jp
lea
adc
cmp
bound
fwait
mov
bnd
pusha
(bad)
leave
xchg
adc
xchg
rol
inc
sub
inc
inc
sbb
(bad)
leave
xchg
dec
jmp
in
mov
dec
jmp
aad
std
(bad)
fiadd
push
jbe
ret
cmp
mov
mov
clc
loop
mov
sbb
dec
cli
mov
push
sbb
push
cmps
xchg
pop
dec
push
arpl
mov
fs
cmp
arpl
dec
fnsave
jecxz
pop
repz
ja
sub
cmps
jno
pop
or
sbb
cmp
dec
pop
add
cmps
cmp
(bad)
leave
mov
lahf
push
mov
xchg
(bad)
xor
xchg
(bad)
lods
mov
cld
nop
mov
(bad)
(bad)
push
push
mov
out
inc
gs
in
in
xor
push
and
pop
retf
sbb
cmp
jnp
sub
pusha
int
xor
mov
aad
aad
ins
push
inc
jmp
mov
ja
mov
loope
pop
ss
jb
inc
(bad)
mov
dec
mov
xor
mov
pop
iret
(bad)
ja
mov
sub
dec
test
in
jnp
inc
stc
push
icebp
add
test
mov
push
int
push
imul
xchg
pusha
inc
xchg
dec
aas
cmp
int3
push
dec
pop
dec
jg
pusha
inc
test
aam
je
lock
cdq
inc
sub
bound
xor
ins
jle
sub
push
aam
jmp
mov
jl
push
jnp
xchg
mov
das
mov
jns
push
outs
mov
div
rcl
into
test
mov
iret
inc
ret
pop
in
sbb
and
pop
mov
aad
inc
sub
mov
and
fwait
sar
(bad)
enter
adc
dec
mov
mov
and
daa
jle
ret
dec
jg
imul
movs
mov
outs
or
pop
jae
and
daa
fild
int3
push
xor
add
fadd
(bad)
xchg
stos
test
sbb
jno
imul
or
stc
cli
xchg
call
pop
add
sbb
fincstp
sti
xchg
popa
dec
add
pop
loopne
push
push
dec
or
inc
enter
pop
aaa
cs
fsubp
cmp
ret
mov
or
lldt
push
iret
cmp
pop
xchg
sub
lods
fmul
xchg
and
mov
sbb
push
(bad)
xor
sub
scas
jp
pushf
cmps
push
inc
push
test
push
push
lods
sub
fcomip
int
(bad)
out
gs
inc
sub
aad
mov
dec
clc
retf
and
ficom
mov
cdq
cmp
pushf
jge
movs
inc
pushf
xor
push
mov
dec
mov
add
(bad)
adc
and
ins
aaa
jnp
fcom
or
or
outs
mov
scas
stc
xor
inc
push
mov
cmps
push
sub
mov
and
pop
outs
adc
or
jge
inc
inc
rcr
fstp
outs
sub
push
test
cs
and
xchg
xor
sub
repz
pop
mov
jmp
mov
pop
(bad)
mov
fmul
add
shr
xchg
call
retf
test
in
mov
fs
ins
xchg
pop
out
jmp
xchg
loope
test
pop
mov
add
pop
add
pop
cmps
cmp
xchg
cli
(bad)
cmp
dec
cld
mov
xchg
sbb
push
cmc
in
cmps
sbb
jno
pop
xor
cmp
jne
sbb
shl
les
or
outs
add
icebp
dec
je
movs
cmc
jnp
outs
lods
add
sub
pop
aad
xchg
dec
add
iret
push
mov
mov
fsub
(bad)
ficomp
mov
scas
stc
popa
cdq
jp
cmps
jo
ror
adc
xchg
add
add
inc
es
mov
mov
jb
inc
adc
sub
mov
inc
int
jne
mov
jecxz
movs
imul
movs
dec
inc
cli
sub
xlat
bound
cmps
mov
pushf
enter
xor
cwde
sbb
pop
aaa
xlat
sbb
dec
jne
pop
fadd
adc
xchg
sbb
mov
dec
mov
xchg
or
xchg
xchg
nop
(bad)
adc
fsub
xchg
test
enter
jmp
jmp
pusha
ins
sub
add
adc
inc
inc
or
mov
dec
xchg
jmp
fdivr
and
(bad)
ds
cli
push
adc
std
fstp
repnz
(bad)
test
jae
nop
fcmovbe
in
cdq
gs
popa
setg
push
pop
add
inc
test
movs
add
fs
imul
icebp
gs
cmp
in
xchg
shl
imul
sbb
dec
fidivr
add
xchg
mov
gs
fdivr
xchg
adc
jl
inc
ret
xor
pop
xor
(bad)
imul
movs
retf
pop
add
pushf
sbb
jbe
aam
stos
out
inc
enter
data16
push
push
mov
adc
add
mov
dec
or
dec
xlat
inc
jo
inc
fisubr
xchg
stos
and
or
pop
jnp
ret
(bad)
jecxz
mov
(bad)
xchg
std
imul
out
xchg
mov
test
xlat
ins
lds
enter
xchg
shr
ret
movs
mov
outs
mov
mov
add
ror
test
mov
unpckhps
(bad)
test
icebp
pop
xchg
cmp
mov
loopne
cmp
ss
inc
rcr
mov
pop
xor
xor
jmp
lods
test
add
and
jg
ds
aad
es
pop
dec
movaps
sub
movs
pop
jno
add
or
fst
pop
or
cld
inc
(bad)
dec
fwait
xchg
mov
or
enter
or
in
outs
fst
pusha
movs
and
jecxz
arpl
mov
aam
and
pop
out
or
fcomi
pop
sbb
and
sahf
(bad)
xor
test
dec
pop
dec
fld
mov
loopne
jle
cmp
sub
and
cmc
rcr
repnz
lods
and
sbb
pop
shr
scas
jo
cmp
je
int
int
lods
scas
enter
sub
xchg
inc
fsub
out
dec
jp
jmp
mov
test
outs
sub
(bad)
int
mov
push
test
push
or
mov
push
xchg
cwde
inc
in
inc
jmp
mov
repz
ds
cmc
pop
fisubr
in
mov
mov
repz
xchg
xchg
mov
cmp
cmps
shl
aam
es
inc
inc
xrelease
dec
repz
nop
nop
(bad)
in
jmp
pop
dec
add
into
jmp
xlat
jge
mov
imul
push
sub
enter
popf
jae
iret
sbb
aam
add
cmps
mov
aas
lock
retf
fistp
std
rol
sar
xchg
jne
cwde
xchg
cmps
or
mov
rol
cmps
mov
xchg
ss
xchg
clc
and
xchg
xor
sub
mov
cdq
and
lods
sbb
cs
ins
ds
call
shr
je
es
dec
lds
ret
cdq
ins
mov
and
pop
sbb
mov
lds
xor
int3
in
loop
sub
adc
push
mov
xor
xlat
xlat
out
jb
dec
in
mov
rol
sub
jecxz
dec
push
dec
adc
pop
arpl
shr
pop
stos
and
jns
mov
cmp
bound
inc
cmp
cmp
fwait
sbb
sbb
into
mov
repz
pop
fcom
idiv
mov
cmp
test
push
and
ret
imul
sbb
cmp
and
xchg
cmp
leave
iret
sbb
mov
out
cmp
daa
pop
add
outs
leave
push
mov
mov
add
sub
nop
(bad)
in
sub
mov
lods
fbld
mov
les
aas
and
(bad)
dec
or
adc
mov
push
adc
and
and
lea
(bad)
fstp
cs
fnstcw
mov
cmp
adc
in
pushf
mov
xchg
dec
icebp
sbb
outs
js
loopne
jbe
adc
dec
mov
cld
ret
or
add
xchg
mov
stc
adc
xor
(bad)
xchg
sbb
ret
cld
adc
push
and
and
scas
and
test
mov
sbb
gs
mul
pop
sar
cmp
pop
jmp
sub
inc
int3
push
in
hlt
mov
xchg
add
test
ret
repz
xchg
daa
or
test
fsubr
or
adc
mov
jnp
cmps
jbe
adc
repz
cmp
mov
cmp
cld
inc
ja
ret
sub
pop
mov
adc
xor
mov
cmp
sub
rcr
xchg
test
popa
jg
in
adc
add
and
jb
movs
adc
in
cwde
jle
push
das
cmovg
ret
mov
cmp
pop
inc
pop
dec
mov
or
cs
mov
and
inc
pop
jno
sbb
cld
imul
idiv
(bad)
xchg
push
outs
ret
out
xchg
rcl
push
sub
xchg
and
or
jmp
(bad)
jae
jbe
sub
cmp
push
outs
ss
call
mov
add
xor
dec
and
and
xor
ret
push
loope
sti
test
adc
push
xchg
xlat
dec
and
ja
popf
into
adc
pop
outs
into
mov
out
jo
mov
jb
outs
(bad)
sti
mov
or
into
out
jne
rol
stc
mov
outs
inc
and
aaa
(bad)
pop
sbb
mov
adc
nop
push
dec
sub
ss
sbb
cmp
cli
mov
loopne
xor
cmp
test
call
adc
jg
and
movs
add
or
mov
in
sbb
clc
bound
aad
jne
in
test
mov
mov
cdq
jmp
in
stc
sbb
sub
lahf
mov
push
jecxz
repnz
xor
scas
sti
cmp
stos
cmp
inc
jno
push
adc
mov
push
cmp
repnz
pop
adc
mov
das
in
enter
mov
sub
mov
arpl
popf
sahf
enter
fcomp
dec
scas
daa
dec
mov
scas
xchg
ds
and
int
psllw
sub
mov
add
mov
jb
push
in
sub
int3
sti
ror
cdq
adc
ror
fs
nop
imul
cmp
int
cmp
adc
or
fsubr
push
mov
int3
int3
jg
sub
popf
mov
cmp
mov
push
cdq
rol
xchg
push
retf
stc
pop
test
mov
xchg
lods
test
and
mov
outs
xchg
push
test
xchg
clc
fwait
mov
inc
pop
stos
jle
cwde
int3
sub
out
xrelease
mov
in
or
and
cmp
or
and
adc
sub
or
iret
jns
mov
cld
pop
jnp
xor
pusha
mov
(bad)
dec
fisub
cwde
cmp
jo
dec
leave
sbb
int3
jnp
inc
out
and
pop
push
pop
add
dec
mov
hlt
xchg
and
sbb
pop
jl
in
dec
xor
mov
mov
pop
je
dec
dec
cmp
add
test
ror
push
mov
hlt
lock
in
adc
inc
xchg
push
cmp
shl
std
test
in
jecxz
mov
mov
jb
movs
and
xchg
mov
fistp
arpl
sbb
iret
mov
cmps
icebp
push
mov
and
inc
and
cmc
push
mul
add
pop
inc
leave
ins
jecxz
dec
or
dec
or
iret
je
mov
adc
jnp
cwde
aas
pop
aas
hlt
mov
(bad)
hlt
pop
retf
addr16
clc
push
inc
pop
mov
sbb
and
mov
dec
loope
sub
jp
mov
push
jle
leave
test
scas
ins
loope
push
push
inc
and
les
test
jb
push
pop
sub
dec
movs
sub
push
jne
(bad)
(bad)
push
fs
push
sahf
pop
aaa
stos
sub
mov
cdq
repz
pop
jle
sbb
push
aas
jne
cmc
xchg
push
push
inc
out
inc
(bad)
push
pop
and
add
jnp
jns
jle
ss
addr16
loope
psraw
pop
lods
cmp
sbb
pop
repz
push
mov
dec
ss
xchg
push
inc
test
mov
out
add
hlt
xchg
cli
adc
aas
xchg
aaa
ret
add
fistp
dec
xchg
ins
iret
cdq
mov
cmp
test
adc
(bad)
push
mov
dec
mov
into
mov
adc
imul
inc
into
xchg
mov
xchg
xor
jo
dec
into
or
stos
dec
and
out
or
ficomp
ja
mov
xor
stos
inc
inc
push
enter
sbb
pop
ds
fst
rol
sbb
push
retf
add
dec
dec
fistp
push
pop
sahf
(bad)
cmp
jae
pushf
or
pusha
fbstp
mov
or
leave
fdiv
mov
ror
rcr
add
xchg
popf
retf
mov
(bad)
mov
push
clc
out
inc
test
mov
bswap
ret
jp
iret
jmp
dec
mov
mov
aad
push
inc
add
cs
add
mov
inc
mov
cs
mov
fucom
(bad)
cs
(bad)
aad
mov
push
sbb
pop
jne
sbb
mov
sub
jo
fucom
inc
loopne
and
imul
mov
jmp
sub
xchg
test
sub
lahf
pop
(bad)
movs
lock
or
add
mov
or
aam
into
ret
dec
clc
push
xlat
lods
cmps
dec
out
xchg
xor
ins
mov
cmc
jge
adc
das
xlat
hlt
ret
fsubr
and
ficom
pusha
test
pop
jge
loope
in
sbb
mov
sbb
ins
mov
xchg
lahf
push
in
mov
test
jl
in
dec
sahf
jbe
lods
add
hlt
mov
pop
sbb
mov
add
cmps
mov
retf
(bad)
repz
mov
push
inc
mov
movs
inc
mov
push
aas
(bad)
pop
fcomp
(bad)
(bad)
pop
jge
outs
mov
popa
xchg
or
adc
outs
push
sahf
pop
adc
jmp
scas
mov
out
mov
outs
sub
mov
mov
pop
imul
outs
mov
jg
iret
xor
sahf
(bad)
data16
adc
std
std
dec
dec
inc
mov
lds
jg
jns
mov
fwait
push
movs
rcr
cmp
movs
dec
jle
leave
push
fwait
test
jmp
adc
mov
clc
jmp
jg
mov
add
icebp
push
(bad)
mov
shl
mov
add
and
xor
aam
stos
fst
xor
ret
sbb
js
rcl
data16
cmp
pop
sbb
rol
xor
fmul
sub
fisub
int
sbb
cmp
xchg
mov
and
sar
pop
push
popf
add
rcr
movs
lds
aas
stos
loop
dec
push
dec
hlt
jae
or
and
js
ret
jecxz
pop
mov
cmp
sub
cmp
jle
and
sbb
sub
(bad)
sub
scas
jmp
shl
jle
xor
sbb
addr16
inc
int3
xchg
adc
pop
loop
mov
xchg
mov
pop
push
sbb
dec
xor
das
xchg
jle
ds
xor
inc
retf
cmp
mov
scas
outs
jbe
pop
pushf
test
cld
ror
and
fisttp
test
loop
(bad)
xchg
sbb
out
sub
repz
pushf
or
ss
xlat
cmp
sub
and
and
add
cmp
xor
mov
out
jae
cld
loopne
scas
jge
fsubr
lods
sbb
mov
push
into
mov
adc
retf
mov
repz
inc
sti
inc
pop
loope
or
inc
ret
sub
icebp
jmp
ror
xor
push
sbb
push
ret
adc
fmul
pop
pusha
dec
adc
mov
mov
test
push
enter
inc
mov
aaa
jbe
(bad)
sbb
pusha
(bad)
mov
push
dec
nop
cmps
sbb
jle
fcmovnbe
cmp
popa
and
jl
stc
push
xor
dec
ret
mov
in
xor
push
push
pop
outs
or
sbb
sahf
call
(bad)
or
add
pop
jge
xchg
jecxz
jo
inc
inc
retf
mov
pop
scas
ds
push
add
cmp
rol
mov
dec
mov
cwde
outs
call
mov
sub
sahf
in
lds
out
repz
sbb
sub
lock
loope
daa
mov
xor
fstp
sbb
add
ins
js
rcl
push
fst
push
lds
nop
xchg
iret
add
add
push
jp
dec
out
fcom
stos
ja
icebp
retf
jae
test
ins
or
mov
fnsave
xor
mov
test
iretw
xor
cli
ja
cwde
xchg
xor
cmp
mov
sbb
or
xchg
loope
int
fild
cmp
imul
xchg
int3
inc
jbe
dec
inc
sbb
retf
sar
icebp
inc
jns
xchg
imul
sub
jg
mov
add
les
fdivp
scas
mov
or
arpl
pop
xchg
fwait
sub
ins
sahf
cmp
pop
lea
mov
mov
push
test
into
es
mov
and
xor
xchg
jns
inc
test
push
and
pop
jp
fimul
std
test
jl
mov
jge
mov
push
mov
push
add
and
pop
mov
pop
loope
or
or
arpl
movs
fcomp
call
and
lock
push
push
das
in
shl
push
movs
test
daa
int3
mulps
ror
cmp
or
hlt
push
mov
mov
mov
test
popf
fnsave
sti
adc
fdivr
push
mov
out
into
push
aaa
stos
sub
lds
out
test
sti
xchg
and
fmul
out
jmp
sbb
std
ds
sub
test
hlt
jne
cmps
leave
jl
and
das
mov
mov
jg
mov
scas
test
pop
xchg
in
jo
mov
xor
icebp
ins
fisttp
jne
sar
leave
cdq
fdivr
aas
icebp
jmp
or
mov
mov
mov
fcomp
mov
stc
das
sub
pop
inc
jecxz
cs
fstp
sub
jns
sbb
cwde
xchg
fsubr
mov
xchg
xor
fild
add
mov
or
popa
sub
sar
or
mov
lock
mov
loope
pushf
shl
(bad)
in
(bad)
xlat
inc
and
out
jno
or
cli
push
jl
enter
(bad)
into
jp
xchg
sub
mov
jg
or
mov
fisubr
iret
fwait
js
push
fdivr
(bad)
in
cmp
jbe
cdq
(bad)
fstp
imul
mov
and
vmwrite
sub
addr16
pop
psubd
arpl
daa
and
imul
cmps
mov
dec
mov
aad
in
pop
fild
xchg
adc
in
leave
inc
repnz
cmp
repnz
mov
iret
sub
push
ret
dec
jge
cmp
jp
adc
lods
fdivr
clc
mov
cdq
pop
and
dec
in
leave
mov
sbb
sbb
xchg
adc
je
cmp
test
iret
and
mov
aas
(bad)
xchg
push
or
inc
call
call
pcmpgtd
mov
das
hlt
lods
or
push
jno
xchg
sub
sub
dec
xlat
test
push
mov
push
sbb
js
xor
nop
int3
mov
add
loopne
sbb
ficom
inc
int
ss
fdiv
shr
adc
mov
nop
mov
mov
mov
pop
ss
push
or
add
mov
rol
push
dec
xlat
cmp
loop
cmc
or
pop
xor
rcr
jmp
adc
sbb
or
scas
fld
bound
cmc
cmc
aad
in
fucomip
or
xor
pop
sub
addr16
xchg
jne
cwde
daa
xor
lock
fidivr
sahf
mov
xchg
outs
dec
dec
mov
xchg
adc
or
mov
sub
mov
imul
adc
push
jle
pop
push
sbb
cmp
js
jmp
pushf
mov
xor
mov
mov
adc
push
pop
fs
pop
mov
adc
cmp
dec
add
mov
cld
cmp
or
sub
sahf
or
clc
fwait
push
cmp
push
mov
or
push
fnstcw
ror
or
sub
cmp
xchg
mov
jns
xchg
pushf
cmp
add
dec
div
(bad)
adc
mov
push
clc
dec
mov
into
jecxz
sbb
pop
jecxz
dec
lods
retf
jp
dec
and
pop
push
out
adc
mov
in
sti
int
push
out
fimul
jmp
push
jg
inc
mov
pop
int
cwde
add
mov
cmp
inc
lea
fdiv
(bad)
and
jle
inc
pop
pop
mov
add
mov
or
lods
sbb
mov
out
xlat
and
mov
mov
ja
fnsave
mov
pop
into
mov
rcr
cmp
sar
mov
ins
je
data16
and
adc
fdivrp
addr16
mov
mov
jb
icebp
or
pop
shl
sub
xchg
popf
(bad)
fwait
jb
pushf
pop
mov
pop
ret
sbb
xchg
pop
push
data16
nop
jecxz
mov
aas
xchg
or
add
jns
popa
mov
mov
jnp
in
inc
pop
mov
(bad)
mov
cs
les
stos
repnz
push
popa
push
shl
std
(bad)
jmp
and
xchg
push
pop
mov
pop
repnz
xchg
dec
xor
xchg
ins
push
std
jmp
push
dec
scas
mov
and
inc
jp
ss
pop
test
adc
mov
push
loop
sbb
test
sbb
mov
jp
and
adc
jnp
add
stc
xchg
xor
mov
push
add
push
jns
or
push
xlat
or
pop
js
out
ret
repz
cli
inc
xor
rcl
push
sbb
cmp
xor
idiv
lods
out
pop
clc
xchg
cdq
dec
xchg
imul
mov
imul
shl
fidivr
mov
cmp
mov
fwait
cli
and
retf
pushf
jge
call
rcr
add
xlat
jb
in
leave
dec
xor
mov
mov
loope
loop
mov
es
mov
push
scas
or
jmp
xchg
sub
dec
in
ins
clc
jg
ret
xlat
adc
jae
(bad)
push
push
mov
nop
add
dec
dec
daa
push
ds
retf
outs
lds
dec
sti
push
pop
(bad)
cmps
hlt
(bad)
in
cwde
std
in
jno
fcomp
retf
call
aad
sub
loop
mov
xchg
push
push
pusha
mov
pop
(bad)
je
jae
mov
sahf
dec
call
pop
sti
xor
loopne
nop
pushf
xchg
stos
mov
push
dec
test
jmp
mov
jp
push
fdivp
xor
mov
outs
mov
xor
fbld
xchg
pop
fst
add
push
mov
repz
add
sub
push
mov
jo
arpl
(bad)
scas
aaa
jmp
and
dec
and
cdq
mov
movs
add
imul
dec
mov
das
push
and
inc
mov
aad
sbb
dec
dec
cli
dec
retf
fisub
pop
popf
dec
stc
xor
imul
ins
inc
ja
pop
fidivr
sub
cmp
mov
(bad)
cwde
nop
xor
scas
iret
xchg
adc
push
mov
pusha
pop
sub
in
sbb
xchg
ja
sub
mov
dec
rcl
clts
mov
movs
jl
aas
and
add
mov
push
loope
sub
sbb
cmps
repnz
sbb
push
test
fwait
enter
push
mov
fdiv
test
(bad)
dec
cmp
mov
mov
mov
fucomip
movs
test
mov
pop
sub
movs
pop
or
xchg
ins
xchg
outs
lea
scas
sbb
lods
sub
jl
in
outs
imul
fwait
inc
movs
xchg
and
cdq
inc
retf
pop
lahf
fistp
push
dec
jae
sbb
mov
scas
aad
dec
mov
pop
rcl
inc
inc
test
int3
adc
mov
or
cmp
jno
xor
in
fidiv
xor
test
push
xchg
(bad)
sub
pop
lock
sar
outs
fimul
loop
in
fsub
repz
cmps
push
mov
(bad)
pop
jnp
ins
push
mov
test
outs
cmp
push
inc
in
sub
ret
dec
dec
test
sub
test
mov
jno
lods
push
xor
inc
mov
xor
dec
push
cs
imul
sub
add
int
(bad)
cmc
sbb
inc
xchg
cmp
jge
mov
adc
add
adc
push
stos
mov
leave
and
(bad)
(bad)
hlt
mov
sahf
mov
fcom
sbb
retf
xchg
jle
test
sub
or
popf
fld
sub
xchg
pushf
or
gs
mov
xor
mov
arpl
into
imul
or
mov
dec
add
and
push
xchg
sbb
push
cdq
xor
int3
jl
push
mov
inc
or
leave
(bad)
sahf
jo
mov
adc
mov
fs
xor
jno
dec
mov
sar
jae
sub
mov
cwde
pop
xor
or
hlt
inc
fcmovbe
and
je
or
dec
(bad)
addr16
lahf
lods
not
or
daa
xchg
adc
adc
cmps
and
outs
cmp
xor
sahf
fidivr
adc
nop
iret
cmc
inc
mov
retf
push
lock
push
add
pop
cmp
xchg
mov
jnp
sbb
ins
pop
mov
inc
xor
push
and
mov
fcomp
inc
or
cli
mov
rol
jp
cld
sub
data16
or
addr16
xlat
pop
sbb
push
popf
dec
or
dec
ds
aad
xor
gs
lock
ror
xor
pop
push
retf
sbb
out
mul
mov
and
movs
cld
jg
adc
cs
and
jns
or
jnp
push
or
xor
pop
rol
pusha
fsub
or
xchg
pop
jne
xlat
or
jl
add
aad
(bad)
enter
lahf
mov
retf
mov
mov
and
imul
inc
addr16
mov
cli
lods
xchg
or
xlat
inc
ds
ss
test
cmp
pop
outs
es
cmp
std
sub
mov
mov
lods
inc
fucomip
(bad)
xor
into
mov
nop
push
retf
lock
cmps
scas
mov
inc
enter
lods
hlt
enter
icebp
clc
xchg
mov
in
pop
inc
dec
idiv
adc
mov
mov
mov
pop
call
jns
hlt
add
int3
imul
lods
lods
mov
pop
fadd
fs
add
(bad)
fwait
xchg
cmp
dec
jmp
push
xchg
test
js
cwde
sahf
jmp
jl
arpl
sub
(bad)
in
aad
mov
cld
retf
push
mov
lea
pop
dec
pop
ds
or
jecxz
and
and
xor
push
pusha
cmp
call
shr
in
add
sbb
fiadd
call
and
mov
xchg
das
je
sti
out
or
and
add
pop
mov
shl
aas
cmps
xlat
sar
mov
xchg
cmp
sbb
mov
les
popa
gs
sub
stos
and
shr
jns
jp
push
cdq
xchg
mov
movs
cli
scas
ins
jbe
daa
jecxz
mov
cmp
les
in
push
sar
xor
and
push
(bad)
in
imul
push
ds
mov
test
add
popa
jno
xor
outs
jo
repnz
adc
jne
in
xor
rol
and
push
ja
add
inc
pop
dec
fwait
pop
scas
dec
xlat
aaa
mov
cmc
inc
sub
push
mov
sbb
push
hlt
repnz
imul
stos
out
jle
pop
unpcklps
pop
mov
push
pop
inc
retf
jns
xor
cmp
jp
icebp
sbb
out
js
in
int3
xchg
sub
neg
out
adc
icebp
out
rol
rcl
out
lock
fiadd
cmp
dec
mov
out
dec
jp
pop
mov
xchg
xlat
mov
ror
call
int3
cmps
jbe
xor
gs
lods
in
test
add
xchg
cwde
test
cdq
mov
daa
adc
(bad)
stos
mov
or
push
jg
loope
in
or
cmp
mov
cmp
push
xchg
scas
fiadd
xor
out
stos
std
mov
or
popa
adc
push
mov
pop
sahf
pusha
mov
fs
cvtps2pd
call
sbb
jge
and
mov
mov
or
mov
push
or
mov
pop
mov
push
jb
movs
xchg
test
scas
out
loop
outs
test
fnstsw
pop
or
fidivr
enter
xchg
mov
jne
jmp
out
call
pop
jle
pop
ja
icebp
mov
mov
std
pop
sbb
(bad)
rol
loop
sub
mov
hlt
stc
or
cmps
or
dec
les
cmps
repnz
(bad)
outs
and
js
rcl
mov
bound
xor
mul
movs
push
(bad)
xchg
cwde
les
std
xchg
stos
lods
ror
jbe
mov
js
(bad)
pop
dec
adc
mov
add
pop
xchg
jecxz
pop
dec
add
cmc
loope
and
mov
mov
sub
fs
pcmpgtd
add
mov
scas
sub
adc
in
outs
mov
ss
ds
cli
mov
dec
mov
dec
cmp
out
loopne
(bad)
into
in
jge
outs
out
push
mov
cmp
out
inc
jb
leave
shl
push
scas
push
imul
sub
inc
mov
jmp
mov
or
push
enter
xor
sar
bound
(bad)
sub
xchg
icebp
mov
push
and
and
sub
in
and
arpl
loop
sbb
lods
inc
cld
movs
nop
call
pushf
push
out
push
mov
cmp
inc
(bad)
repz
xchg
dec
call
in
inc
cmp
int3
sub
sub
je
div
outs
mov
data16
mov
icebp
mov
retf
test
jmp
inc
mov
nop
mov
clc
add
out
jae
pop
and
dec
hlt
lods
push
lahf
cwde
iret
adc
stos
push
jecxz
dec
xchg
ja
xchg
add
aaa
sar
xlat
dec
jl
add
xchg
in
ret
pop
es
push
mov
je
mov
movs
je
int
lods
and
xchg
js
fld
sub
jl
push
and
xchg
fcom
(bad)
pop
mov
loopne
sti
push
call
jns
cld
leave
pusha
push
aam
jecxz
scas
int3
mov
cmps
scas
sbb
jo
imul
fistp
sti
jae
push
repz
out
push
ror
push
nop
ret
retf
dec
push
out
push
mov
inc
inc
retf
and
and
and
ss
std
jae
dec
push
clc
add
mov
pop
(bad)
out
push
sub
fs
sub
call
xchg
out
xor
std
lahf
mov
fwait
ds
popf
std
jg
push
(bad)
leave
mov
rcr
mov
bswap
pushf
dec
popf
gs
mov
pop
mov
aas
pop
mov
dec
push
nop
js
mov
xor
hlt
fcomp
test
mov
adc
mov
mov
jne
xchg
push
push
fild
mov
cmp
sub
push
stos
(bad)
int
outs
cs
sbb
loopne
mov
jo
dec
mov
shl
fwait
sar
out
dec
inc
mov
jno
jns
pop
mov
pop
mov
jle
jmp
xchg
inc
mov
sub
lahf
rcr
(bad)
jle
cmp
mov
sbb
and
cmp
sub
sub
and
sbb
and
in
xor
cwde
imul
pop
mov
fdivr
inc
push
sbb
aas
ss
or
ss
dec
dec
jbe
popf
jno
xor
sub
ror
je
movs
pop
hlt
jno
aad
dec
inc
push
mov
sar
(bad)
or
in
xor
cmc
mov
retf
push
ins
xlat
jecxz
dec
mov
cmc
jp
mov
jne
add
retf
sahf
aaa
xchg
je
js
sbb
xchg
fcom
fst
or
push
mov
sub
daa
or
int3
cmp
movs
out
jns
popa
adc
sbb
(bad)
sub
js
mov
xor
adc
lds
or
jnp
movs
out
or
or
mov
push
fdivr
push
or
push
add
aad
stc
rcr
repz
cmp
or
rcl
sbb
fisttp
jg
or
mov
(bad)
cdq
ror
mov
mov
jl
cmc
xchg
ins
hlt
sbb
imul
test
repz
addr16
mov
and
xchg
ins
fiadd
dec
dec
xchg
outs
call
pop
fst
jp
pop
adc
dec
enter
gs
mov
add
icebp
cwde
shr
in
adc
adc
dec
add
out
mov
cmc
inc
mov
retf
data16
pop
movs
or
mov
push
mov
popa
inc
xlat
pop
xchg
mov
lods
fnstenv
stos
outs
xor
mov
test
dec
dec
jne
fimul
sub
ficom
mov
paddusw
jmp
cmc
outs
mov
mov
nop
jmp
mov
mov
test
test
sbb
adc
scas
cmp
aam
or
jle
mov
popf
(bad)
(bad)
or
cmps
dec
loopne
adc
mov
neg
mov
jo
aaa
out
push
sbb
outs
sub
fadd
jne
inc
std
xlat
leave
out
mov
sub
and
clc
mov
movs
loopne
cmp
push
aad
jmp
inc
push
sbb
call
add
mov
shr
adc
scas
push
daa
fmul
adc
ins
lds
mov
or
or
lods
shr
and
inc
in
out
mov
inc
jp
add
and
jl
sbb
inc
xchg
loop
lock
pop
pop
aam
out
aad
mov
sti
adc
hlt
movs
jo
gs
repz
lahf
fwait
mov
add
inc
or
call
mov
jp
inc
das
xchg
cmp
and
retf
mov
(bad)
icebp
ror
and
test
ja
adc
or
xchg
add
(bad)
cdq
push
hlt
mov
inc
test
aaa
dec
jbe
rcl
mov
pop
in
mov
push
scas
dec
sahf
test
add
or
je
mov
jne
inc
cmc
(bad)
mov
inc
and
push
jle
ret
jns
sub
xlat
or
icebp
pop
leave
inc
aam
jge
dec
dec
push
jnp
xor
jbe
adc
and
pop
call
cdq
and
pusha
ins
ins
cmp
loop
xchg
out
add
add
push
ficom
adc
outs
retf
bound
mov
inc
pop
mov
icebp
mov
inc
xor
dec
sbb
jno
sub
loop
xchg
mov
jge
push
pop
pop
or
mov
in
xlat
or
push
pop
or
mov
aaa
sahf
fsin
sbb
and
mov
xor
and
mov
enter
retf
mov
jae
push
and
jmp
and
stc
(bad)
ret
or
call
dec
mov
sbb
dec
call
adc
lock
xor
xor
add
add
hlt
xchg
(bad)
repz
adc
xor
xchg
mov
and
gs
inc
push
cmc
bound
mov
mov
jns
mov
int3
retf
in
bound
inc
inc
icebp
cdq
sub
cmp
int3
lock
sbb
data16
xor
test
pcmpeqw
jbe
arpl
test
ds
pop
push
dec
pop
(bad)
sbb
movs
rcr
bound
stos
sub
cmp
xchg
jae
inc
mov
sub
pop
cmp
fst
jo
jmp
sbb
sbb
inc
mov
iret
outs
jmp
cwde
or
and
psadbw
xchg
and
xor
pop
push
cmovp
stos
jbe
sbb
inc
push
test
ret
lea
xor
adc
jbe
add
mov
(bad)
fiadd
fnstsw
lahf
adc
dec
test
and
add
shr
outs
mov
inc
pop
ss
xchg
xchg
pop
and
or
stos
enter
push
add
and
popa
cwde
mov
int
xchg
cmp
movs
mov
sub
fbld
out
xlat
outs
sub
scas
outs
sub
and
pushf
ds
sbb
xor
jmp
outs
push
xchg
pop
cwde
xor
mov
xchg
fild
mov
and
push
addr16
xor
fistp
pop
clc
add
ret
test
cmp
xor
mov
push
jnp
in
xchg
push
jge
loope
inc
cmp
mov
mov
pop
or
adc
lea
add
jo
fldcw
sub
(bad)
rcl
js
push
ret
xor
pop
(bad)
push
sub
pop
out
or
cmp
seto
fisub
sub
jno
shl
fstp
xchg
cmp
jns
sahf
dec
pop
ds
cmps
call
inc
imul
push
and
xlat
out
pop
loopne
rol
inc
bound
mov
js
ja
mov
push
es
fwait
jle
xor
cmps
mov
daa
sub
sbb
fimul
mov
add
adc
and
pop
sub
sahf
dec
unpckhps
dec
test
add
in
arpl
jns
aaa
sahf
jle
shl
(bad)
in
cwde
ins
ins
xor
test
scas
add
adc
aas
push
add
or
test
movs
sub
push
loope
add
cmps
shl
mov
lods
js
mov
xchg
call
popa
push
nop
scas
xchg
repnz
mov
xchg
jae
add
mov
and
xor
inc
fcmovnb
aas
mov
scas
or
mov
dec
call
pushf
sub
push
imul
shl
pop
jecxz
jge
mov
and
inc
xor
dec
(bad)
xchg
add
stc
xor
inc
mov
inc
call
mov
stos
mov
addr16
add
inc
inc
dec
sub
sar
data16
ret
jmp
push
push
or
adc
dec
arpl
or
out
pop
cmp
dec
push
fs
loope
neg
pop
jge
adc
ret
sbb
xor
push
(bad)
or
clc
mov
stos
stos
pop
fdiv
cmps
loop
test
inc
cmp
into
mov
sub
cmp
cmp
scas
pop
ret
in
mov
lock
mov
add
test
cli
lahf
add
in
and
push
adc
loop
or
(bad)
sbb
cs
jle
adc
arpl
bound
sbb
retf
sbb
jnp
(bad)
outs
fwait
push
pop
ret
(bad)
ins
inc
cmp
(bad)
leave
sub
jno
sbb
hlt
test
mov
jae
(bad)
push
mov
out
stos
rol
dec
mov
jno
mov
mov
cmp
fst
adc
sub
cli
push
xchg
mov
push
leave
pop
xchg
cs
inc
mov
adc
pop
ja
js
cmp
dec
jg
call
push
add
imul
sar
xchg
inc
fbld
inc
mov
test
inc
xchg
lods
xchg
enter
jp
dec
lods
mov
mov
push
push
push
pop
xchg
pop
sti
mov
or
adc
icebp
and
iret
xor
sub
or
mov
dec
add
push
and
inc
enter
mov
arpl
xchg
pop
in
lock
lea
(bad)
fdivr
push
push
xchg
daa
dec
push
pop
push
sub
std
sbb
add
movs
cs
pop
sti
sbb
add
or
add
or
mov
and
cdq
jmp
bound
and
sbb
mov
jmp
stos
lods
dec
es
adc
mul
loope
test
out
dec
data16
cmp
les
data16
xchg
lods
jmp
inc
mov
nop
adc
jmp
neg
mov
xor
xchg
push
clc
jbe
out
push
iret
jne
stos
sub
mov
das
or
ins
pushf
pusha
sub
das
pop
int3
sub
mov
cmp
sub
ficomp
xchg
xchg
sbb
mov
push
push
rol
gs
pop
mov
ret
push
in
out
jmp
push
out
cmps
xor
xor
or
dec
fistp
jecxz
xchg
add
xchg
outs
xchg
shl
nop
xor
push
fldcw
ins
call
cs
out
mov
(bad)
sub
sbb
les
in
bnd
pop
jmp
psraw
clc
or
mov
jmp
cmps
push
out
mov
sub
gs
add
outs
jmp
imul
fcom
push
jge
mov
repnz
inc
shl
sbb
sbb
adc
mov
imul
push
push
cld
add
xor
dec
(bad)
repnz
jno
xor
adc
(bad)
mov
test
icebp
pop
pop
cmps
into
xchg
repz
rcl
sub
mov
mov
ds
ins
sbb
daa
inc
or
cld
iret
ret
(bad)
pop
std
mov
add
inc
xchg
xor
adc
fistp
cmp
adc
inc
test
js
mov
dec
(bad)
push
cmp
or
ret
mov
hlt
mov
xchg
dec
xlat
(bad)
repz
xchg
ins
cmp
iret
fidivr
cmp
aas
sbb
add
cdq
out
dec
fstp
pop
test
mov
popa
leave
jge
jb
(bad)
cli
pop
fild
mov
out
outs
outs
movs
xor
sub
outs
repz
and
je
xchg
inc
dec
sbb
push
and
movs
lahf
and
into
xchg
idiv
fxch
lods
pop
pop
or
(bad)
retf
jl
in
add
dec
retf
jecxz
mov
and
add
mov
push
inc
inc
daa
xor
mov
cs
(bad)
(bad)
lods
fdiv
adc
sahf
mov
hlt
mov
pop
test
cmps
push
adc
arpl
cmp
jecxz
sub
retf
xchg
scas
add
aam
jle
jne
cmp
push
test
dec
or
leave
clc
push
adc
jno
jae
adc
pop
pop
loop
adc
ss
add
mov
icebp
or
mov
ja
test
dec
cmp
or
lea
lods
daa
mov
inc
mov
mov
adc
es
fisubr
mov
xlat
lock
imul
jae
mov
pushf
xchg
data16
out
dec
inc
jle
mov
in
stos
imul
xchg
mov
movs
ror
and
js
push
xor
movs
pop
push
scas
add
and
pop
xor
dec
push
ds
and
xchg
ds
jmp
ss
call
inc
cmp
cwde
fldcw
inc
jmp
lds
mov
lea
arpl
pop
mov
jecxz
pop
sbb
cli
gs
ins
and
aas
popa
mov
xor
xchg
leave
mov
cmc
add
in
mov
adc
sbb
out
mov
(bad)
dec
pusha
sbb
pushf
mov
test
leave
xchg
adc
pop
out
arpl
repz
shl
or
lds
mov
jne
leave
jns
push
test
inc
cmp
or
test
out
aam
out
mov
cmps
loop
and
mov
(bad)
xchg
sar
push
test
out
and
jle
int
add
sbb
xchg
jo
dec
mov
lods
rcr
pop
sbb
fldcw
mov
cmp
cmp
inc
jg
(bad)
call
sbb
addr16
in
mov
dec
sbb
xor
pop
call
imul
rcl
push
inc
fcomp
aas
and
ror
add
std
retf
fdivr
jne
pop
mov
mov
jo
mov
js
mov
ja
stc
kortestw
jno
pop
adc
fwait
mov
pop
pop
jge
inc
mov
xor
jmp
jle
(bad)
rcr
lahf
cmps
mov
jmp
mov
inc
(bad)
adc
push
out
aad
xor
jno
das
jbe
mov
sub
push
sti
push
dec
sub
fdiv
push
or
in
paddusw
pop
(bad)
lods
(bad)
retf
mov
push
cmps
and
jmp
xchg
and
xchg
enter
sbb
sbb
mov
rcl
mov
adc
pusha
cmp
push
cmp
mov
xchg
pop
dec
push
jbe
dec
mov
int3
push
jecxz
xor
lahf
xor
popa
or
fcomip
jg
xchg
or
scas
loop
test
loope
adc
mov
dec
mov
jp
repz
fimul
pop
mov
xchg
xchg
or
movs
push
loopne
popa
jmp
pop
xchg
enter
call
ret
cmp
adc
sbb
xchg
jmp
sbb
(bad)
pop
(bad)
ficomp
mov
push
xor
mov
popa
imul
push
imul
in
in
icebp
retf
mov
pushf
jo
inc
xchg
dec
rol
sub
and
ins
and
sar
pop
add
loope
inc
and
scas
xchg
mov
dec
rcr
inc
push
xor
sti
ja
mov
cmp
cmp
mov
arpl
(bad)
dec
jg
out
inc
popa
add
call
sub
push
call
(bad)
pop
in
cli
jo
nop
jo
mov
inc
in
movs
mov
mov
mov
sete
mov
out
inc
daa
sbb
sti
shl
xlat
and
fild
into
sub
jecxz
mov
into
div
adc
popa
xor
and
js
cmps
test
and
out
hlt
jge
hlt
aad
mov
ficom
rcl
adc
stos
test
lea
pop
mov
ret
retf
and
fs
push
pop
stos
dec
pop
sbb
mov
push
and
xchg
jle
mov
loopne
xor
or
out
adc
dec
xchg
jb
pop
imul
aaa
xchg
dec
mov
js
or
push
les
scas
mov
sub
das
mov
fs
adc
in
mov
push
rol
add
sti
rol
je
xchg
int3
jo
add
dec
sbb
pop
pusha
pusha
push
out
mov
lods
cli
sub
xchg
lock
out
pusha
fild
jge
arpl
movs
pop
inc
xchg
pop
popf
(bad)
ins
xchg
push
jg
push
sbb
pop
retf
cmp
mov
sbb
xor
xor
enter
mov
push
mov
fmul
fcmovnu
out
xor
mov
mov
lods
xor
cmp
cmps
pop
mov
into
mov
add
push
imul
sub
jl
jp
into
mov
mov
inc
mov
cmps
push
mov
sub
inc
inc
jle
gs
ror
inc
inc
pop
xchg
or
or
aas
adc
cli
ja
mov
aas
nop
push
inc
cmc
jno
scas
mov
pop
mov
or
cmp
dec
jmp
test
(bad)
push
sbb
cmp
shl
ds
rep
shl
fcomp
imul
or
dec
out
mov
addr16
leave
jl
xor
outs
test
jno
stos
dec
mov
sbb
or
out
dec
test
test
add
call
pop
retf
mov
inc
jns
add
inc
sub
pop
mov
inc
repz
sbb
cli
fldenv
mov
sub
repnz
data16
mov
aad
out
pop
sti
pop
push
ror
lods
(bad)
mov
xor
retf
sub
lea
sbb
jno
xor
xor
lock
push
push
jge
adc
ret
sub
out
inc
and
fisttp
hlt
mov
nop
push
jae
xchg
into
out
xchg
cld
mov
(bad)
add
aad
jl
adc
or
or
push
add
inc
xchg
cmp
iret
out
pop
sbb
sbb
mov
mov
xchg
pop
mov
call
cmp
shl
sub
pusha
outs
adc
xor
or
fs
sub
clc
fcomp
xchg
mov
pop
mov
push
lea
fadd
jecxz
mov
fbstp
cs
adc
add
out
(bad)
mov
mov
dec
fbstp
(bad)
loop
inc
shr
inc
jo
xchg
sub
fdivp
or
jns
and
outs
mov
adc
imul
enter
call
sar
ret
rcr
sub
mov
adc
shl
aad
xor
cld
jne
push
jb
inc
mov
(bad)
out
adc
pop
mov
je
xor
and
push
div
push
(bad)
(bad)
adc
push
pushf
mov
in
sub
xor
icebp
xchg
ret
daa
inc
or
loopne
or
call
add
(bad)
outs
iret
call
jmp
mov
mov
mov
jbe
inc
pop
fcom
dec
fisub
adc
dec
adc
sub
test
pushf
fst
mov
fwait
push
or
ror
div
push
pushf
jle
dec
and
pop
jg
cdq
sub
push
xchg
shl
into
jg
(bad)
idiv
jl
mov
sub
int3
xchg
xlat
add
jne
sub
jmp
int
mov
add
movs
enter
in
inc
jge
js
or
clc
cmp
shl
sub
cld
mov
addr16
push
int
mov
or
and
fcom
jmp
das
add
sbb
aam
cmp
adc
out
ret
(bad)
xchg
push
add
mov
cmp
push
mov
out
cmp
mov
mov
test
jnp
add
xchg
test
and
test
push
sbb
push
out
sbb
inc
jle
inc
mov
stos
sbb
dec
jnp
sbb
(bad)
pop
sub
test
mov
fwait
add
or
dec
into
pop
and
add
je
or
xchg
imul
ror
push
mov
popf
xchg
and
lds
dec
jmp
dec
rol
push
retf
jne
inc
pop
mov
push
mov
std
mov
sar
or
jle
popw
mov
or
cld
adc
inc
dec
es
fdiv
rcl
mov
jb
nop
sub
dec
icebp
(bad)
adc
jbe
jo
push
cmp
stc
jle
(bad)
nop
and
stos
ins
add
ins
dec
add
sub
(bad)
pop
ins
loop
mov
lods
fimul
stc
mov
ror
test
daa
mov
mov
movs
in
popf
pop
fscale
cmp
icebp
pop
sub
mov
inc
arpl
pop
mov
neg
rcl
(bad)
xchg
inc
or
sub
popa
in
sub
cmp
inc
xor
jle
add
xor
(bad)
sahf
ret
pusha
data16
(bad)
cdq
xchg
fadd
push
pop
setne
rcr
mov
imul
mov
dec
test
push
adc
pop
out
mov
sbb
pop
mov
dec
sub
push
push
add
mov
cmp
sbb
inc
ins
fcom
in
loopne
sbb
jecxz
aaa
idiv
add
test
pop
mov
sti
sbb
sub
add
xchg
fisttp
jne
mov
add
lods
inc
mov
stos
dec
mov
dec
aad
jl
sub
scas
(bad)
mov
sbb
pushf
loopne
out
xchg
sub
vcmpps
inc
adc
or
loop
fst
lea
imul
sub
pop
ret
out
mov
pushf
mov
mov
mov
in
outs
fwait
dec
sbb
add
popa
mov
outs
clc
int3
mov
inc
sbb
push
ss
sub
stos
movs
add
pop
std
hlt
cmp
cmps
adc
dec
add
inc
aad
xchg
xor
sar
outs
aaa
mov
sbb
leave
cmp
jmp
xlat
movs
pop
ins
test
enter
call
call
ss
push
jl
mov
outs
xchg
jp
xchg
ins
es
xchg
fcmovne
xchg
and
ss
jne
adc
sar
sub
add
add
rol
mov
call
pop
mov
xchg
push
push
loopne
sar
je
and
retf
jl
int
lods
or
cld
sbb
repnz
(bad)
jb
nop
dec
cli
and
test
jb
enter
jno
dec
sahf
push
mov
fld
cld
imul
(bad)
inc
or
arpl
inc
push
or
sub
push
add
cmp
sbb
daa
nop
mov
out
shl
xchg
push
test
aad
iret
push
call
mov
into
inc
jo
dec
lods
ja
sbb
jmp
aaa
push
xchg
mov
out
scas
repz
jmp
pushf
dec
or
mov
into
mov
int
cmp
out
in
daa
icebp
dec
sbb
add
call
add
inc
mov
jmp
in
out
fist
lahf
(bad)
mov
dec
imul
cmp
xor
not
add
xlat
dec
push
adc
(bad)
inc
lds
call
jp
or
pop
xor
pop
adc
mov
shl
ret
mov
or
jecxz
cmp
js
adc
fldenv
(bad)
mov
cmp
jmp
jecxz
repnz
inc
jge
and
nop
jmp
xor
rcl
iret
inc
jno
(bad)
sti
mov
in
repz
hlt
lock
xchg
and
add
jmp
test
dec
pop
movs
movs
mov
mov
jg
dec
pop
(bad)
jb
ja
imul
call
sbb
pop
inc
push
push
xlat
fs
in
fsubr
mov
jecxz
ins
push
or
xchg
and
dec
pop
test
dec
retf
out
jecxz
pop
dec
push
idiv
sub
sbb
pop
sbb
fcmovbe
outs
stc
enter
mov
xchg
scas
mov
pusha
aaa
lds
pop
stos
stos
mov
and
jne
outs
mov
sub
out
aas
mov
xchg
push
les
inc
imul
loopne
ds
call
xchg
ror
es
in
int3
sbb
mov
add
call
rcl
(bad)
aaa
fsubr
inc
sar
aad
sbb
imul
push
mov
push
in
jno
lock
cld
bound
jb
(bad)
inc
popa
cmp
inc
add
imul
cmps
push
adc
dec
adc
sti
js
mov
pusha
movs
adc
push
push
sti
pop
cmp
mov
ret
in
push
xchg
addr16
(bad)
jmp
pop
cmp
cmp
in
push
dec
sbb
jb
jecxz
cwde
in
inc
and
adc
outs
(bad)
inc
repnz
jp
popf
mov
daa
mov
xchg
fs
sub
call
sbb
rol
cmps
xchg
jnp
lods
cmps
and
sti
ss
das
adc
pop
mov
adc
sub
push
out
cmc
js
in
jnp
imul
stc
push
sub
hlt
(bad)
lods
push
popa
xchg
cmp
pop
pop
gs
cmp
es
imul
adc
stc
mov
add
mov
mov
es
fs
inc
pop
shl
in
xor
cmp
dec
pop
in
leave
jl
shr
cmp
es
inc
pop
mov
out
jg
sar
outs
push
ins
and
rcl
neg
or
(bad)
cmp
pop
cmp
sti
pop
push
dec
mov
push
inc
jae
fs
fistp
jmp
jnp
movs
sbb
pusha
pop
retf
mov
dec
pop
lea
fcom
mov
lods
jns
rcr
aam
lea
inc
fsubp
add
ret
fcmovb
cmp
dec
mov
adc
outs
addr16
pop
stos
mov
cmp
xchg
in
xchg
dec
out
hlt
inc
or
mov
ror
push
pop
push
mov
push
fnstenv
cmp
add
ins
or
mov
xor
js
js
or
mov
push
add
jmp
and
xchg
outs
sti
das
add
mov
mov
add
icebp
in
cmp
push
add
int3
sbb
jns
sbb
dec
mov
mov
inc
cmp
ja
mov
inc
inc
sub
mov
jae
adc
mov
add
mov
jbe
sbb
mov
fidivr
es
xchg
mov
jge
addr16
daa
xchg
or
std
mov
sbb
xor
push
push
mov
lods
dec
cmp
lahf
mov
sub
inc
or
push
in
fucomi
shl
cmp
inc
fsub
sbb
pop
and
xchg
add
mov
xchg
add
dec
or
pushf
xchg
inc
dec
jge
jbe
popa
int
repz
inc
lods
jbe
and
and
rol
mov
std
aad
xlat
adc
loop
imul
call
or
or
test
out
sbb
rcr
imul
cwde
ror
dec
push
mov
mov
xor
pop
cmp
pop
mov
push
pop
and
inc
xchg
das
pop
ja
in
(bad)
xor
(bad)
dec
jbe
pop
test
hlt
in
imul
add
sub
pop
xor
std
jne
test
sub
rol
push
xchg
call
sahf
add
sbb
(bad)
ret
and
loopne
bnd
into
xor
sbb
xlat
jle
iret
fbstp
ds
pop
fadd
xchg
lock
sti
scas
cmp
fsubr
dec
rcl
mov
(bad)
jb
mov
jmp
in
sub
xchg
jg
sub
sbb
pop
inc
xor
loopne
xchg
inc
pop
push
fcmove
and
pop
sub
and
xchg
adc
jnp
or
adc
lahf
int3
mov
scas
add
push
hlt
ficom
es
dec
jl
iret
in
push
mov
ja
pusha
test
int3
jl
arpl
(bad)
pop
repz
(bad)
push
dec
rol
and
test
mov
jo
sbb
xchg
xchg
cmp
jecxz
repz
pusha
mov
sbb
bound
sahf
xor
sbb
cwde
lds
mov
je
sub
xchg
(bad)
clc
push
or
xchg
mov
call
cmp
out
arpl
mov
pusha
aam
mov
cmps
loop
das
sbb
xor
gs
adc
mov
sti
retf
lahf
dec
les
or
sar
hlt
repnz
inc
sti
mov
stc
jns
sbb
jmp
add
push
aam
add
push
ror
movs
or
retf
jle
mov
loopne
mov
fwait
xor
mov
pop
sbb
xchg
inc
(bad)
dec
jge
add
pop
ins
jmp
shl
in
bound
(bad)
push
icebp
push
and
or
add
inc
or
add
xor
sub
cmp
cmps
ret
cli
retf
test
lahf
lods
jb
shl
mov
ret
retf
sbb
and
stos
push
xlat
lods
sar
mov
cwde
sbb
xchg
inc
inc
fs
mov
jmp
(bad)
mov
push
push
sbb
retf
pop
xchg
stos
(bad)
mov
mov
bound
inc
js
push
sbb
outs
xchg
sbb
mov
out
popf
test
leave
mov
fiadd
pop
sbb
xchg
cmc
fwait
loope
cmp
adc
sub
jns
rol
pop
cmp
adc
pop
sbb
lahf
jp
js
mov
rcl
xor
dec
xor
xchg
xchg
pop
ins
pop
mov
dec
(bad)
mov
dec
sbb
xchg
adc
sbb
cmp
ss
xchg
xchg
aad
mov
mov
adc
imul
push
bound
sub
dec
retf
ins
mov
add
adc
jbe
adc
cwde
imul
pop
fwait
cmp
test
mov
xchg
mov
enter
dec
sub
xchg
aaa
call
lods
xchg
adc
or
imul
xchg
cs
xchg
mov
fnstsw
jns
out
icebp
sar
pop
iret
jl
add
pop
mov
loop
scas
dec
cmc
call
dec
xor
cmp
cmp
fwait
push
sub
mov
cmps
cmp
jne
nop
(bad)
pop
imul
out
adc
and
jbe
push
aas
inc
cmps
mov
cld
cli
inc
adc
and
adc
bnd
xchg
sahf
test
adc
ror
gs
lock
test
das
cdq
out
(bad)
icebp
clc
xadd
dec
mov
push
imul
rcr
repnz
repnz
lock
sub
loopne
ja
pop
sbb
pop
jns
dec
sbb
std
add
or
movs
in
retf
lock
mov
sar
add
mov
inc
mov
into
scas
test
and
mov
push
out
jg
cmp
dec
xor
adc
push
int
adc
mov
push
ds
neg
jmp
fstp
pop
cmp
loope
test
inc
sub
call
xor
mov
and
arpl
or
scas
add
(bad)
in
sbb
mov
and
jp
nop
pop
mov
(bad)
mov
add
fidiv
mov
mov
mov
mov
mov
mov
(bad)
jae
dec
or
fnstenv
mov
sub
and
imul
(bad)
loope
and
adc
enter
pop
in
jl
pop
sbb
mov
loop
sbb
int
mov
xor
mov
jne
pop
inc
mov
jmpw
aad
int
bound
mov
mov
(bad)
daa
jl
xchg
ret
(bad)
xchg
jae
(bad)
idiv
jno
push
xchg
ds
test
arpl
or
out
mov
js
rcl
xor
push
call
sub
mov
cmp
pop
adc
ficom
sbb
cld
mov
cmp
repz
inc
loop
fs
dec
ins
mov
push
scas
xlat
sub
popa
push
sahf
cmps
sbb
(bad)
adc
jmp
and
cmp
fwait
and
sub
iret
push
add
mov
sub
in
sar
mov
stos
pop
(bad)
in
cmps
fnstenv
sti
adc
push
sbb
push
stos
cmp
and
mov
fistp
jo
movs
push
aam
(bad)
push
outs
sub
or
jmp
mov
popf
mov
or
les
call
ficom
pop
test
or
cmp
mov
pop
inc
lahf
pop
jae
retf
sub
push
fldenv
or
out
push
imul
jmp
dec
imul
icebp
pop
rol
inc
and
xchg
sbb
inc
stos
ret
cwde
xor
and
js
(bad)
mov
cmps
mov
in
mov
or
sar
repnz
idiv
xor
test
shl
repz
fist
cmp
xor
jo
loopne
mov
pusha
into
push
xchg
lahf
pop
pop
inc
xor
into
push
adc
cli
fwait
xor
mov
fnsave
push
inc
xchg
or
repz
into
cmp
sbb
scas
inc
mov
lahf
mov
pop
call
mov
out
jne
pop
lahf
jge
mov
pop
pop
mov
mov
(bad)
add
push
xchg
xor
adc
xchg
jecxz
or
cmp
push
lahf
jge
data16
dec
std
lock
inc
push
movs
das
push
in
fmul
lods
or
idiv
sar
out
out
dec
(bad)
fcmovu
loopne
mov
retf
dec
ins
and
(bad)
rcr
push
push
sub
sti
jg
and
pop
sub
call
and
jp
xor
cmp
arpl
and
mov
push
into
mov
dec
cmp
or
fist
xor
sub
out
call
repnz
and
xchg
arpl
push
fist
imul
xor
mov
test
and
rol
jo
imul
inc
or
mov
adc
jg
ins
push
mov
loope
or
add
or
(bad)
clc
cdq
hlt
and
fisub
loop
add
popf
clc
inc
popa
dec
retf
out
repnz
pop
aaa
sbb
and
xlat
and
mov
pushf
addr16
cmp
mov
sbb
(bad)
std
lods
mov
outs
je
in
clc
xor
adc
lahf
push
xchg
sti
shr
jmp
mov
fwait
in
mov
es
add
movs
jne
mov
ja
test
lods
xor
push
adc
cmps
fwait
pop
loopne
pusha
dec
(bad)
adc
xchg
outs
scas
sub
hlt
dec
jno
mov
push
hlt
mov
push
mov
ins
iret
in
enter
inc
adc
std
jns
push
xchg
add
xchg
xchg
test
and
mov
or
push
inc
into
nop
add
xor
mov
fadd
jo
rol
sbb
sub
gs
lods
in
es
or
cdq
imul
mov
push
push
inc
inc
popf
lods
rcr
cvtps2pd
cli
or
ret
push
les
adc
add
push
cwde
out
imul
fiadd
mov
jle
iret
sub
mov
sub
fcom
rol
inc
jmp
push
xchg
leave
stos
jle
xor
outs
inc
xchg
mov
xlat
mov
mov
or
lahf
mov
div
test
or
outs
fsubr
adc
dec
ins
mov
pop
cmp
mov
xchg
aad
shl
lods
mov
cmp
aaa
loopne
aaa
ss
adc
push
or
nop
mov
mov
add
pop
movs
imul
jne
xchg
aad
add
dec
int3
and
sub
rcl
pop
out
adc
xchg
and
mov
xchg
xchg
call
jl
ret
mov
jnp
icebp
mov
stos
fldcw
ins
sti
sbb
cld
out
xchg
push
loop
cs
add
xor
sub
adc
(bad)
shl
mov
push
sbb
jg
sub
adc
push
add
sbb
push
adc
pushf
mov
push
imul
sar
and
int3
in
inc
leave
jp
cmp
imul
nop
inc
js
nop
jle
sub
xchg
add
test
pop
mov
mov
retf
jmp
dec
xchg
lea
mov
inc
popa
adc
jne
popa
mov
sub
ret
mov
push
(bad)
xor
test
jg
inc
adc
xchg
inc
push
inc
jge
mov
and
cli
dec
and
popa
(bad)
repz
jns
ja
or
push
inc
cs
inc
inc
out
arpl
stos
add
inc
lahf
and
xor
lds
cmp
fst
or
sub
mov
outs
ret
sbb
mov
adc
nop
jae
in
xchg
scas
and
mov
mov
lea
bound
pop
stc
sbb
lods
adc
les
call
fidiv
add
sbb
pop
lahf
cmp
inc
inc
cmp
jb
loop
xchg
mov
gs
sub
scas
(bad)
adc
and
mov
or
jb
call
or
mov
cmp
mov
shl
lods
enter
jns
xor
(bad)
stc
stos
mov
sar
xchg
arpl
loope
sbb
pavgb
add
pusha
and
test
xor
call
fdivrp
adc
addr16
(bad)
daa
jle
and
es
movs
in
fwait
lods
test
jg
jl
sub
mov
fs
xor
jp
and
mov
mov
sub
cmps
ret
and
std
fisubr
or
dec
inc
aaa
int
mov
cmp
inc
add
mov
lahf
not
ret
test
xchg
sahf
scas
in
pop
mov
cmc
loope
mov
xchg
jnp
rol
sbb
jno
xchg
mov
lock
ret
mov
ins
not
mov
cmp
sbb
les
rol
bt
rcr
cmps
je
leave
(bad)
lock
repz
test
dec
jp
mov
mov
outs
test
jmp
mov
mov
push
rol
xchg
push
fild
cmp
dec
imul
cmps
xchg
cmc
push
mov
fst
push
call
dec
push
int
in
push
retf
das
in
retf
dec
mov
scas
cmp
test
xor
cmp
es
mov
or
pop
scas
or
push
stos
and
inc
scas
push
lock
js
cmp
xor
xchg
adc
cmp
xchg
(bad)
mov
dec
add
test
out
or
mov
(bad)
mov
jo
sub
in
inc
cmp
rol
add
pop
jns
cmovae
push
push
dec
out
mov
rol
add
mov
add
fidivr
int
aas
sub
add
push
cmc
cwde
cmps
ror
push
xchg
call
dec
cwde
add
push
data16
mov
lods
cmp
jle
sbb
cld
call
mov
fwait
out
stos
(bad)
repz
(bad)
xchg
ja
cli
cmps
sub
rcl
or
add
icebp
pushf
mov
in
jb
ja
test
fisubr
mov
rol
xchg
fincstp
shl
aas
adc
add
adc
or
retf
push
push
dec
retf
out
xor
xor
sub
mov
mov
data16
or
retf
dec
jne
jg
cmp
xchg
fdiv
inc
cmps
jne
loop
sub
sti
cmp
pop
sub
cmp
nop
push
pusha
(bad)
xchg
shl
arpl
fdiv
pop
xchg
xchg
jmp
lods
sbb
repz
lock
xor
clc
jmp
pop
ins
sub
adc
(bad)
ins
jmp
out
mov
es
push
xchg
out
(bad)
shl
xchg
jns
cmp
sub
push
jle
loope
add
xor
push
lods
ficom
mov
sbb
mov
cmp
test
(bad)
push
xor
ja
stc
sbb
cdq
stos
sub
cmps
outs
movs
dec
mov
jae
sbb
call
pop
imul
sub
jmp
xor
rcl
xchg
mov
daa
int
xchg
jle
push
gs
cwde
adc
mov
xor
xchg
outs
cli
jmp
cli
imul
xchg
jo
cmps
cmp
cmp
jg
dec
or
mov
inc
movs
sbb
(bad)
lahf
clc
inc
imul
or
dec
leave
lods
push
mov
adc
push
leave
sbb
ret
ins
mov
push
int3
adc
js
movs
bound
xchg
jns
leave
aaa
fs
ret
(bad)
pop
scas
and
push
mov
fist
outs
cmps
mov
call
mov
test
adc
ins
inc
call
loope
je
sub
mov
pop
cmps
(bad)
repnz
push
mov
aaa
sti
push
and
xchg
lock
push
xor
idiv
push
cmp
lea
ins
ds
xor
push
add
mov
repz
mov
xor
dec
lock
rcl
mov
add
sub
retf
pop
mov
adc
(bad)
repz
dec
xchg
test
clc
imul
cmps
retf
dec
int
dec
sbb
cwde
aaa
bound
cwde
mov
int
ds
and
sub
(bad)
iret
push
sbb
sbb
push
push
push
fwait
iret
push
jmp
dec
fisub
mov
add
xchg
lods
scas
jne
stc
movs
and
xor
inc
cmc
pop
jmp
jge
xor
adc
inc
mov
retf
jg
jmp
jb
cdq
sbb
xchg
ffreep
or
addr16
dec
loop
fsub
cmp
cmps
in
jbe
call
ins
push
nop
fcom
mov
inc
and
jmp
idiv
or
push
xchg
cdq
mov
or
rcl
dec
cmp
xchg
sbb
nop
sbb
imul
mov
pop
xchg
sub
in
mov
test
(bad)
clc
icebp
mov
inc
vminsd
popf
mov
stos
clc
xor
sbb
adc
mov
mov
inc
and
call
lock
jg
retf
xchg
push
test
(bad)
aad
scas
sub
in
xor
int3
rcr
sbb
or
adc
test
iret
loopne
sbb
mov
jmp
aaa
les
xchg
scas
mov
int3
and
(bad)
fdiv
mov
std
arpl
push
lahf
cmp
jecxz
aam
push
mov
call
wrmsr
push
xchg
pushf
push
(bad)
daa
gs
dec
and
(bad)
int
xor
xlat
or
xor
sbb
jae
das
inc
or
pop
call
cmp
mov
(bad)
jp
outs
push
push
push
mov
pop
or
pop
gs
(bad)
fld
sbb
imul
dec
add
xchg
stc
add
sbb
fisttp
push
cmps
scas
cmps
pop
in
lock
xor
aad
(bad)
pop
push
xchg
dec
gs
xchg
sbb
cld
or
in
jo
add
adc
mov
fs
and
mov
pop
stos
les
jecxz
and
and
mov
(bad)
loope
popf
gs
retf
mov
scas
outs
push
push
js
add
sub
test
pop
or
(bad)
loop
fiadd
mov
or
popa
push
sub
jo
lds
adc
jne
xlat
fimul
iret
sbb
pop
push
je
jmp
(bad)
add
push
mov
or
xchg
mov
icebp
ds
push
popf
ret
jl
in
sub
std
xor
inc
movs
sub
adc
call
es
xor
movs
push
test
xor
xchg
sbb
pusha
xor
mov
fnstsw
(bad)
mov
sub
and
shr
(bad)
cmp
imul
loop
loope
adc
and
nop
push
mov
adc
mov
loop
jne
xchg
inc
je
adc
mov
xor
xor
xor
dec
cmp
in
cs
rol
repz
push
jo
and
or
cmps
idiv
and
and
mov
inc
div
repz
loope
out
mov
mov
or
or
or
retf
jge
adc
mov
mov
arpl
push
lahf
cmp
and
iret
push
ins
jp
call
add
aad
out
test
jmp
test
sbb
cmp
mov
mov
imul
ja
cmc
pop
mov
aas
mov
jge
jmp
cs
pop
adc
fsubr
cld
test
(bad)
mov
out
lahf
dec
in
cmp
xor
leave
push
and
hlt
and
popf
mov
stos
fcomip
jnp
cmp
add
jno
cmps
aam
pop
pop
int
jnp
icebp
sbb
sub
and
jbe
pop
pushf
out
or
not
test
shl
(bad)
repnz
cld
inc
rol
lock
pop
shr
sbb
rcl
cmp
adc
pop
mov
sar
pop
sar
dec
mov
xor
push
and
les
(bad)
fisttp
jbe
ror
push
test
scas
int
in
and
dec
or
fs
xchg
leave
fcomp
inc
adc
test
imul
loop
mov
loopne
xchg
pop
push
fdiv
adc
sbb
(bad)
aad
add
loope
sub
(bad)
jge
retf
sub
in
(bad)
das
pop
mov
ins
das
popa
add
jb
cwde
in
dec
sbb
mov
xlat
fisttp
mov
mov
adc
mov
inc
stos
push
fbld
ret
leave
mov
aas
mov
lock
inc
inc
rcr
iret
push
push
dec
jnp
ret
or
in
mov
and
cmp
aam
out
sbb
jmp
out
je
rcr
inc
sub
std
pop
mov
int3
jo
mov
push
sbb
cdq
outs
push
xlat
push
das
inc
call
xchg
pushf
jecxz
aas
retf
jl
mov
call
inc
push
dec
sub
mov
cmp
icebp
or
add
mov
ss
fmul
mov
daa
adc
out
stos
movs
push
adc
or
cwde
mov
fisttp
sbb
out
nop
inc
jbe
addr16
pop
inc
xchg
and
ins
test
popa
lds
and
push
mov
sub
sbb
rol
or
pop
adc
jmp
mov
mov
inc
sub
ds
inc
sahf
addr16
pop
push
fimul
mov
sub
pop
xor
mov
fstp
call
out
xor
cmp
mov
mov
cs
pushaw
in
mov
call
call
in
dec
retf
icebp
inc
scas
in
ss
fs
inc
inc
mov
leave
leave
data16
sti
sub
movs
into
jno
sbb
jecxz
pop
mov
fisubr
loope
mov
loope
sub
cmp
mov
push
xchg
pop
jg
jmp
adc
int
repz
movs
xlat
pop
call
sar
xchg
cwde
(bad)
fisubr
sbb
cdq
outs
stc
ret
and
icebp
jle
icebp
mov
mov
std
call
fcomp
retf
aam
lods
adc
lahf
push
js
jmp
cld
push
inc
adc
adc
ja
shr
cmps
dec
int3
bnd
adc
cmp
push
push
mov
mov
bound
adc
jo
pushf
xchg
push
add
aaa
xchg
outs
mov
lock
push
stc
cmp
imul
sahf
xor
jmp
shr
test
xchg
call
adc
lods
es
sbb
cmp
cs
stc
pop
cmp
inc
jl
pop
and
cmp
jle
es
popa
dec
je
lahf
cld
xchg
and
lea
xchg
fs
adc
mov
test
fucomip
popa
aaa
inc
loop
sub
repz
sub
stos
push
hlt
sub
loope
mov
xchg
cwde
addr16
jg
fnsave
sub
pop
add
mov
mov
add
sub
and
pop
std
sub
loope
push
pop
add
mov
rcr
and
mov
lds
retf
xor
ins
mov
lock
popf
fldcw
push
xchg
mov
push
xor
cli
lock
and
and
jnp
push
xor
loope
int3
cmp
dec
loopne
cmp
enter
and
cmp
outs
cmp
or
dec
nop
push
retf
(bad)
out
sbb
xor
mov
out
xchg
mov
sub
mov
xchg
rcr
popf
adc
iret
cmp
lods
and
xchg
jmp
jns
inc
loopne
out
jae
out
sbb
enter
lods
inc
mov
xchg
ja
dec
mov
push
pop
push
sub
adc
into
push
and
dec
mov
inc
clc
mov
mov
xor
dec
xchg
jle
sbb
inc
ins
pop
pop
neg
cdq
xor
add
dec
clc
icebp
(bad)
ds
xchg
jo
xchg
aad
push
sub
shr
push
test
fnsave
sub
pop
js
fs
push
and
lea
mov
dec
xlat
aam
mov
rol
pop
pop
stc
inc
fimul
mov
jp
and
inc
test
(bad)
iret
dec
sub
jle
push
movs
sbb
cmc
jge
cwde
fidivr
(bad)
mov
or
push
neg
rcr
and
mov
hlt
rol
dec
jp
les
dec
test
jns
pushf
sub
mov
js
add
aam
jmp
mov
(bad)
fild
loop
mov
in
ja
dec
scas
outs
ins
mov
cmp
(bad)
call
ins
(bad)
pop
popf
xor
scas
lahf
ins
inc
shr
inc
mov
sub
rol
sub
into
cs
jb
enter
mov
jl
imul
mov
sub
nop
cs
mov
add
push
imul
das
cmp
mov
call
mov
jo
push
(bad)
cmp
mov
popf
add
fs
neg
dec
out
push
mov
mov
xchg
pop
inc
nop
jl
sbb
xor
repnz
outs
div
dec
sub
rol
js
clc
aam
in
popf
sbb
stos
cdq
fs
adc
es
pop
add
add
adc
sbb
mov
jecxz
jne
inc
ins
jge
aam
mov
push
mov
xchg
inc
mov
mov
inc
mov
mov
xchg
pop
mul
sahf
sbb
push
adc
lds
aas
adc
or
ficomp
adc
push
mov
int3
fst
adc
shl
mov
rol
push
mov
mov
jecxz
addr16
dec
push
pop
call
pop
push
add
add
jns
push
add
cmp
fist
loop
mov
fdiv
xor
cmp
aaa
mov
lock
adc
dec
pop
addr16
stos
icebp
pop
shr
hlt
pop
shl
fstp
push
and
jmp
rcl
pushf
cld
sti
jmp
shl
stos
or
lods
push
pop
shl
retf
adc
xchg
xchg
mov
cli
mov
outs
lock
and
push
inc
dec
jbe
dec
sub
(bad)
dec
ds
mov
(bad)
pop
lahf
xchg
and
jnp
pop
fnsave
lahf
jb
rol
dec
rol
test
jb
rol
test
sar
ins
dec
mov
call
sub
jno
jg
stos
(bad)
pop
retf
ss
(bad)
xor
mov
imul
hlt
mov
fisubr
scas
scas
push
in
add
push
sub
stos
pusha
jo
stc
dec
mov
and
mov
xchg
popf
push
or
jmp
mov
gs
inc
adc
gs
xor
stc
pop
lods
mov
jo
or
mov
jp
out
jno
ret
push
nop
ss
mov
fnsave
cmp
daa
in
fistp
fld
inc
ss
mov
hlt
push
mov
je
cmp
jmp
scas
sub
outs
pop
outs
mov
or
int
cmp
movs
pop
call
dec
jmp
and
pop
icebp
inc
adc
xchg
adc
ret
call
dec
movs
xor
sbb
int
dec
out
test
sub
pop
mov
ins
add
mov
xor
mov
shl
les
xor
push
stos
inc
pushf
outs
fisub
out
dec
shl
pop
or
out
lods
cs
jl
lahf
jb
(bad)
xor
in
sahf
fidiv
imul
inc
sub
cmps
imul
popf
xor
jle
pop
sbb
mov
jnp
popf
pop
inc
cmps
lea
fsubr
pop
aas
mov
mov
loop
test
jp
jne
mov
add
push
inc
xchg
mov
stos
jmp
pushf
dec
stc
sub
adc
and
shr
fstp
cmp
arpl
stc
std
push
xchg
and
push
or
clc
mov
or
mov
sub
je
push
dec
mov
xchg
sub
clc
mov
cmp
add
lods
or
push
cld
pop
mov
jge
and
(bad)
add
sbb
adc
outs
out
inc
dec
call
cmp
repz
dec
xor
(bad)
aam
push
mov
pusha
cli
ins
or
fadd
(bad)
xchg
sbb
sub
addr16
push
inc
lods
push
xor
mov
lods
lock
scas
(bad)
adc
pusha
retf
sbb
mov
movs
jno
(bad)
xchg
mov
cmp
inc
xchg
popf
fsub
std
jnp
push
add
xchg
les
cdq
adc
sbb
int
sbb
enter
repz
ja
push
sahf
loop
push
cmp
aas
into
ret
stc
cmp
int3
mov
pop
mov
int
pop
scas
lea
stos
push
mov
sbb
in
test
jbe
mov
mov
daa
daa
fsubr
scas
push
dec
pushf
xchg
jbe
sar
pushf
fs
icebp
imul
in
lods
push
ret
cs
xor
in
xchg
popa
(bad)
cld
lods
jmp
adc
push
mov
retf
adc
retf
push
cmps
int3
arpl
sahf
out
cli
xor
sub
jne
push
test
loopne
pop
or
mov
test
dec
cld
repnz
xor
mov
stos
cmp
add
inc
push
rcr
xor
daa
(bad)
sub
push
adc
pop
cmp
cmp
push
xor
adc
sub
pop
adc
cmps
movs
ficom
popa
pop
mov
ds
stos
adc
movs
int3
add
movs
and
push
push
div
cli
add
jge
pop
ins
dec
lods
(bad)
movs
out
movs
push
jmp
(bad)
aad
js
add
and
shl
and
inc
fisttp
in
imul
(bad)
push
pushf
inc
jno
cmps
les
mov
dec
nop
push
push
test
enter
mov
into
outs
(bad)
mov
mov
xor
call
sub
push
in
xor
inc
std
dec
fs
scas
or
sahf
xchg
scas
cmp
jmp
in
mov
inc
mov
test
or
pop
out
(bad)
ror
call
enter
xor
loope
retf
xor
add
pop
pop
cmp
stos
mov
in
out
scas
dec
out
nop
scas
fwait
push
test
cmp
and
mov
mov
pop
pop
push
fstp
(bad)
ss
mov
mov
rcr
cmps
mov
std
leave
int3
les
js
mov
dec
jb
neg
in
popf
add
adc
adc
call
pushf
mov
mov
mov
inc
push
mov
lahf
hlt
call
out
stos
jge
fisub
imul
dec
push
sbb
mov
add
pop
lea
adc
cmp
sub
ins
daa
fs
inc
add
mov
adc
sbb
rcr
cmp
push
cmp
push
sub
fadd
xchg
sub
dec
push
cmp
push
aad
push
lods
add
(bad)
mov
push
push
pushf
xor
xchg
call
inc
mov
(bad)
(bad)
sar
jbe
pop
add
add
mov
call
rcr
imul
jnp
cmc
cmc
sti
cmp
adc
stc
cmc
dec
sbb
xlat
xchg
sub
and
mov
loopne
mov
jmp
imul
mov
jmp
fdivr
in
pop
imul
pusha
xchg
cs
push
in
out
adc
push
sbb
sahf
pop
xchg
cdq
xchg
mov
adc
shr
es
cmps
test
inc
cmp
mov
xor
rcl
sub
jle
xor
repnz
pop
or
outs
imul
fisub
popf
add
adc
movs
(bad)
jle
fsubrp
push
stos
mov
cmc
mov
jb
(bad)
pop
fs
mov
xchg
sub
adc
in
inc
cmp
push
dec
test
xor
js
and
jp
rcr
mov
push
ins
pop
icebp
mov
adc
stos
sti
arpl
dec
daa
dec
dec
cmp
push
xchg
das
aaa
adc
add
pop
cld
cmps
(bad)
retf
out
jmp
sbb
jne
jo
test
test
jmp
ret
jo
xchg
js
retf
jae
xor
ds
out
mov
xor
(bad)
fdiv
sub
sbb
add
adc
xchg
fcom
xor
dec
push
add
and
add
stos
cmp
dec
call
ja
out
sbb
cwde
mov
jns
jbe
dec
or
fadd
repnz
xor
scas
xchg
inc
push
test
push
fdiv
mov
pop
stos
daa
in
or
sub
jo
ret
cmovg
add
stos
sbb
jmp
lods
enter
add
das
sahf
fldenv
sbb
dec
adc
stos
(bad)
xchg
jmp
xchg
or
or
xchg
cdq
(bad)
pop
movs
lahf
lods
outs
and
push
in
movs
lahf
es
jns
and
popa
sbb
out
scas
pop
mov
cs
outs
push
pop
jg
int3
cdq
mov
dec
push
cwde
mov
sbb
ins
xor
repnz
mov
loopne
jbe
and
std
cs
inc
sar
push
movs
(bad)
bnd
push
or
ins
pop
sbb
sub
arpl
cmp
clc
and
add
xchg
(bad)
sbb
std
mov
retf
sar
add
mov
rcl
mov
aas
jmp
mov
inc
xchg
movs
jns
aad
sbb
jg
ror
test
fadd
or
lods
add
jae
dec
and
mov
test
add
xchg
imul
mov
sub
hlt
test
outs
cmp
push
inc
adc
out
xlat
enter
push
lods
sbb
and
or
test
mov
sbb
aaa
or
mov
and
lahf
mov
(bad)
mov
xchg
enter
(bad)
(bad)
sub
js
js
pop
cmp
jle
jle
es
mov
dec
push
push
clc
jae
scas
lea
test
popf
sbb
out
ins
xchg
popf
jg
sub
jnp
cmp
int
push
lahf
push
arpl
clc
jle
pop
and
pop
xchg
pop
xor
jbe
dec
sub
sar
iret
dec
mov
sub
cli
xchg
jbe
cmps
jecxz
cmc
out
sbb
pop
icebp
adc
mov
sub
sbb
mov
lods
inc
sub
jnp
daa
and
popa
enter
popf
mov
sahf
ds
mov
mov
sahf
sub
mov
inc
call
jb
cmpxchg
retf
and
call
test
iret
pop
jp
out
add
xchg
jnp
jne
jmp
test
scas
popa
mov
or
jne
mov
inc
mov
mov
inc
add
dec
xchg
adc
cmp
nop
ret
movs
test
push
shl
(bad)
cmps
push
jg
inc
xchg
(bad)
mov
or
fnsave
or
dec
cmps
in
jae
and
inc
add
ficom
sar
aam
adc
and
add
out
stos
add
sti
(bad)
test
push
repz
xchg
add
jae
(bad)
jns
je
inc
xor
or
mov
jmp
sub
out
aaa
cwde
pop
xchg
mov
enter
jmp
out
xlat
pop
imul
push
mov
fild
mov
(bad)
adc
jl
dec
sub
shr
loop
mul
sub
in
mov
es
or
dec
stos
mov
jl
mov
dec
fisttp
sub
add
pop
pushf
cmps
loopne
test
ja
or
jne
cwde
xlat
xor
xchg
cs
into
mov
out
or
test
mov
sete
xchg
sbb
cmp
pop
xor
jge
mov
hlt
sbb
cmps
dec
adc
popf
test
push
shl
cld
or
arpl
cld
arpl
sbb
call
iret
adc
fs
mov
loop
adc
sbb
out
xchg
jae
xchg
cmp
icebp
imul
leave
out
les
adc
test
lods
xor
sete
mov
or
adc
sbb
mov
jmp
xor
hlt
call
(bad)
and
outs
jl
adc
dec
jg
dec
sub
ins
mov
lods
jle
jecxz
in
stos
imul
mov
aam
test
push
(bad)
(bad)
(bad)
in
or
outs
pop
(bad)
sar
nop
jmp
lds
shrd
bound
loope
outs
aam
jmp
sub
sbb
jg
or
out
loope
scas
sbb
cwde
pop
jo
xchg
cmp
test
mov
xor
mov
stc
(bad)
retf
add
rol
mov
test
(bad)
scas
stos
jo
clc
pop
fwait
int3
adc
cwde
xor
or
jb
jb
ss
ins
aad
or
and
dec
mov
mov
mov
dec
push
jmp
(bad)
or
pop
shr
lds
(bad)
lahf
mov
pop
push
call
inc
push
into
add
sub
dec
movs
jne
and
jae
fwait
mov
imul
leave
fld
mov
dec
addr16
mov
pop
retf
aam
pop
test
arpl
sbb
inc
ds
(bad)
xchg
fmul
(bad)
enter
ror
repnz
inc
ins
nop
ja
cmp
add
aaa
add
jle
push
repnz
sub
ror
push
xor
mov
push
imul
and
inc
mov
add
into
cmp
lea
stos
push
mov
pop
mov
pop
xchg
imul
loopne
repnz
push
loopne
sub
mov
cs
(bad)
mov
int
retf
push
cmp
xchg
test
iret
sti
fimul
bound
and
cmp
shl
fsubr
push
stos
outs
pop
inc
jne
pusha
and
adc
sub
mov
push
mov
xchg
adc
cmp
cli
in
mov
mov
pop
and
out
sub
xchg
(bad)
sub
pop
pusha
fsub
pop
aad
or
push
scas
loopne
jg
rcr
neg
inc
das
sub
jl
(bad)
cs
adc
mov
shl
mov
or
rcr
mov
(bad)
mov
loope
hlt
xor
push
sti
test
lods
lahf
jp
mov
icebp
and
xchg
dec
push
les
sbb
(bad)
xchg
mov
xlat
adc
mov
sub
push
xor
addr16
inc
je
popa
jbe
lock
add
jle
sub
call
ret
jge
rol
out
dec
adc
enter
movq
inc
hlt
leave
ret
xor
hlt
shr
and
jnp
push
xchg
jle
inc
pop
mov
sub
lea
jle
lods
bound
ret
pusha
popf
adc
or
mov
jb
mov
(bad)
dec
or
xchg
cmp
imul
jno
sub
dec
jl
cmp
xor
bound
jecxz
mov
mov
add
lods
sub
shr
inc
cmp
jb
sbb
xor
stos
fnstsw
pop
jge
inc
mov
test
and
aad
cmps
xchg
ret
lods
dec
dec
shl
adc
pop
or
mov
add
jno
ret
xlat
xor
xchg
push
inc
sub
out
sbb
mov
mov
ror
imul
bnd
inc
div
cmps
cmp
stos
dec
mov
xchg
aas
adc
pop
mov
or
mov
sbb
pop
mov
fs
dec
stos
sti
sbb
pop
sbb
lea
pushf
cmpxchg
out
arpl
mov
out
dec
fcomip
inc
movs
pop
or
aam
sahf
and
in
cmps
out
push
adc
fisttp
and
adc
imul
shl
mov
cmc
pop
jmp
arpl
dec
inc
dec
jo
pop
jl
push
adc
pop
mov
(bad)
cmps
test
cmp
push
sbb
xor
jno
sub
retw
(bad)
test
(bad)
fwait
sbb
pop
ret
outs
nop
cs
jle
jb
push
mov
in
popf
mov
cmc
adc
mov
add
lock
pop
in
adc
mov
ds
xor
inc
test
sbb
addr16
cld
push
push
shr
and
lods
jp
xor
cmps
jp
sbb
ins
dec
lahf
sub
cmp
push
or
add
dec
or
pop
pusha
std
mul
push
adc
nop
aam
cld
jecxz
bound
ds
jecxz
sbb
enter
fwait
dec
xchg
jo
xor
retf
inc
jns
(bad)
out
clc
add
gs
push
or
inc
sub
and
fstp
and
retf
ins
aaa
stos
aas
in
mov
out
fnsave
add
mov
jle
bound
xchg
inc
ror
add
adc
adc
into
jb
mov
and
in
add
mov
bound
mov
jnp
mov
sti
repnz
xchg
and
adc
mov
cld
repnz
push
xor
mov
jb
lods
inc
pop
loop
jecxz
lods
jge
dec
aaa
jnp
out
cwde
mov
pop
xor
mov
(bad)
pop
int
ficomp
lods
inc
popa
xor
jnp
std
mov
out
xchg
dec
sub
and
js
mov
(bad)
out
jbe
(bad)
add
adc
iret
shl
fs
push
lahf
pop
pop
int3
or
cmp
add
call
sahf
mov
push
mov
retf
(bad)
jp
and
dec
call
xchg
adc
mov
fsub
mov
retf
sbb
test
jmp
cwde
scas
repz
loop
loope
aas
outs
lahf
sub
or
push
add
outs
sar
sbb
mov
xchg
jae
mov
or
inc
lea
cmps
pop
hlt
nop
icebp
shl
aaa
mov
xchg
enter
xor
adc
mov
movs
xor
jl
xchg
adc
mov
inc
or
es
nop
(bad)
test
or
dec
stos
dec
fwait
pop
mov
sar
sbb
cdq
dec
ja
push
xor
adc
arpl
pop
inc
cmp
pushf
sub
fsub
add
pop
sub
popa
add
sbb
mov
(bad)
push
loop
ffree
xchg
push
into
(bad)
sbb
ss
shr
or
inc
xor
(bad)
ins
mov
xor
pop
and
cdq
mov
arpl
lods
loopne
mov
mov
imul
je
stos
push
add
repz
not
ror
shl
push
mov
sbb
mov
add
and
mov
inc
mov
loopne
icebp
dec
sti
pop
mov
mov
scas
and
pop
pop
(bad)
test
push
sar
mov
xchg
xor
jne
fadd
sti
xchg
pop
and
cmp
sub
jo
mov
cmc
mul
pusha
es
mov
add
or
pop
int
mov
sub
push
sub
shl
pop
mov
jae
push
and
test
gs
mov
fsubr
mov
pop
cmp
xor
inc
jle
or
pop
or
mov
sub
jmp
and
sti
add
(bad)
pop
imul
hlt
jb
clc
push
test
adc
mov
pop
sub
cmc
mov
xchg
pushf
push
adc
push
aas
adc
mov
loopne
jge
add
in
ror
mul
ins
pushf
jmp
sbb
ret
hlt
pop
pop
sahf
pop
in
shl
aas
dec
ret
repnz
out
pop
int3
mov
in
and
xchg
(bad)
sti
and
cli
and
jno
fidivr
adc
mov
and
loopne
push
movs
inc
pop
cmp
jge
movs
push
ret
push
push
add
jae
rcl
xchg
inc
push
or
mov
pusha
hlt
mov
cmps
adc
jmp
fisubr
pop
or
inc
adc
lahf
scas
and
xlat
xlat
js
idiv
sub
pop
test
pop
xor
sub
jno
jl
pop
jge
int
xchg
add
xor
les
mov
ja
mov
aam
(bad)
(bad)
das
cmp
addr16
loopne
jnp
sub
retf
jp
and
xor
push
cmp
mov
dec
minps
cmc
xlat
jne
aam
inc
outs
xchg
push
mov
mov
inc
sahf
aaa
pop
cmps
jns
sub
sub
pop
sub
xor
add
mov
mov
dec
mov
pop
jl
(bad)
jg
loop
outs
cmp
inc
cli
call
push
mov
shr
xor
into
popf
test
add
das
inc
shr
jmp
sbb
in
mov
into
daa
adc
inc
dec
add
add
repz
loope
or
test
inc
sub
js
dec
imul
add
pop
or
fld
(bad)
repnz
loope
or
push
xchg
popa
adc
lock
cmp
mov
mov
xchg
push
pop
pop
and
xchg
or
aaa
fldenv
add
push
cmc
mov
jg
or
aas
pop
adc
lock
cli
pop
lods
enter
add
cmps
sub
(bad)
dec
shr
sub
arpl
adc
cwde
mov
add
and
repnz
mov
push
out
jno
mov
jge
fcomp
aaa
bound
mov
fs
mov
mov
inc
cmp
mov
scas
cmps
(bad)
fdivr
div
push
repz
retf
fwait
xor
inc
ficomp
les
adc
std
and
cld
pop
pop
out
fbld
test
aad
push
ins
xor
sub
cmp
les
(bad)
push
retf
xlat
jo
xchg
repz
pop
push
mov
or
stos
stos
mov
das
ja
ins
add
or
or
in
mov
sub
cdq
add
stc
in
sub
sbb
ror
xchg
push
mov
push
je
ficom
pop
stc
dec
ins
dec
push
dec
xor
mov
in
xlat
fst
mov
repz
in
fcom
pop
ds
push
lods
ret
aam
jecxz
mov
and
shl
dec
mov
push
ja
push
movs
clc
arpl
mov
in
pop
or
mov
aas
inc
in
out
push
imul
sub
xlat
je
push
out
add
loop
mov
ret
test
dec
stos
dec
nop
fistp
icebp
leave
jno
leave
cld
jge
in
stos
jnp
lahf
test
push
out
xchg
mov
add
bound
cmp
or
dec
in
mov
mov
pop
cld
pop
inc
sub
mov
xchg
jl
add
cmp
call
xor
jns
sti
pop
xchg
repnz
out
jmp
mov
mov
and
jp
push
lds
xchg
inc
call
scas
or
aas
in
adc
pop
push
into
retf
aam
inc
or
jmp
push
es
xchg
sbb
mov
dec
es
jmp
shl
dec
mov
cmps
jmp
mov
xor
fcmove
or
push
jns
add
ins
stos
(bad)
mov
pusha
pop
ja
mov
lds
sti
shl
xchg
pop
ret
inc
out
xchg
pusha
mov
jl
imul
inc
enter
jp
sub
shr
and
push
cmp
push
test
loopne
push
into
out
mov
test
es
dec
jae
sahf
and
push
mov
jns
enter
enter
cs
mov
(bad)
retf
push
mov
fnstcw
or
test
adc
rol
in
pop
sbb
ror
cmp
arpl
or
lock
aad
dec
adc
pusha
scas
dec
scas
sub
leave
dec
xchg
cmps
xchg
cld
mov
adc
stos
adc
mov
fidiv
pop
stos
iret
pop
or
push
inc
in
dec
scas
into
and
push
xchg
xchg
xchg
test
and
mul
in
inc
pop
dec
test
dec
repz
pushf
(bad)
pushf
popa
pusha
mov
imul
imul
jge
fiadd
not
push
fsubr
pusha
xlat
rcl
mov
repnz
inc
adc
inc
fiadd
mov
mov
outs
mov
adc
jmp
outs
jae
adc
or
arpl
push
hlt
fcmovb
jns
enter
mov
sbb
repnz
inc
sbb
inc
xchg
out
pop
add
xor
sbb
sbb
xlat
mov
fld
popf
pop
push
xor
(bad)
mov
in
out
jmp
ds
mov
adc
popa
jg
pop
aas
call
xor
out
fs
ds
lds
mov
mov
cwde
pop
in
out
mov
sub
outs
push
test
mov
cli
imul
cld
inc
out
jo
je
push
ins
xor
add
jg
movs
mov
cmps
xor
mov
adc
icebp
cmp
sub
cs
pop
test
xor
sub
div
push
jae
mov
pop
lds
push
dec
add
cmps
lahf
popa
aad
lock
pop
push
in
jge
arpl
movs
loopne
retf
jmp
hlt
aaa
cmp
nop
jns
adc
or
mov
in
ds
sbb
fsubr
adc
pop
and
loope
pop
dec
cmp
imul
xchg
scas
xchg
jo
out
mov
jns
(bad)
call
sar
test
ja
shr
adc
inc
(bad)
dec
sbb
and
adc
iret
xchg
dec
scas
ret
cmc
sahf
stos
push
push
sti
and
adc
adc
into
stos
adc
or
add
daa
jae
xchg
lds
out
cmc
fiadd
fwait
sub
lds
in
icebp
and
mov
fwait
js
push
mov
popa
push
in
mov
jbe
xchg
es
mov
cs
xchg
cmps
jno
stos
mov
jle
pop
xchg
je
shl
dec
pop
in
pop
inc
add
xchg
push
jl
test
mov
shl
test
sbb
mov
mov
in
xchg
mov
inc
cmp
pop
mov
push
out
stos
(bad)
cli
dec
xlat
mov
adc
cmp
fadd
sti
push
adc
push
fst
(bad)
leave
stos
stc
inc
out
xchg
xchg
(bad)
retf
pusha
add
loopne
pop
pop
jnp
outs
das
sub
outs
arpl
push
stos
pusha
push
xchg
cwde
dec
jg
outs
xor
icebp
sbb
cmp
jg
mov
test
das
adc
sahf
sbb
mov
ja
and
ret
fcom
xchg
jb
into
and
(bad)
jno
popa
push
scas
sbb
jo
std
sub
in
das
xchg
push
pop
mov
xor
mov
ins
rcr
ja
jge
(bad)
(bad)
lock
repnz
ret
add
sbb
or
shr
aaa
push
and
rcr
adc
leave
pop
bound
inc
push
mov
adc
cmps
push
imul
pop
(bad)
jns
aad
jns
jmp
mov
inc
and
jecxz
mov
mov
es
or
mov
xor
lods
ss
adc
sub
cmp
or
ss
cmp
aad
and
das
and
mov
mov
js
and
sub
mov
mov
mov
and
add
dec
test
imul
sub
lahf
sbb
sub
mov
mul
mov
lea
sahf
test
imul
xor
add
cmps
in
lea
xor
dec
inc
arpl
dec
cmp
pop
xchg
mov
sub
adc
in
movs
cmp
cmp
push
mov
retf
jne
in
pop
push
psadbw
out
dec
movs
push
jne
(bad)
in
les
mov
inc
inc
push
sbb
jns
jns
enter
xor
cmp
pushf
loope
dec
xlat
imul
test
lahf
push
in
jne
bnd
ins
rol
ret
inc
sti
push
icebp
xor
and
mov
mov
fcom
fsubr
sahf
mov
into
pcmpgtw
dec
mov
push
jecxz
shl
mov
(bad)
gs
mov
scas
or
sbb
idiv
retf
cmp
scas
ret
inc
ins
dec
xor
fs
out
inc
(bad)
fsubr
lods
jecxz
mov
rcl
call
pop
push
jbe
sbb
jp
inc
push
arpl
inc
cmp
int3
icebp
std
jp
xchg
adc
xor
pop
or
cmps
sub
jo
jo
push
xchg
pop
mov
cdq
pop
sub
jp
jg
ds
outs
repz
in
pop
imul
fist
test
mov
pop
sub
or
jp
popa
and
dec
mov
jne
or
mov
fadd
das
lahf
jnp
inc
inc
push
cmp
test
movs
inc
loop
mov
jae
pop
jmp
pop
jne
mov
(bad)
cdq
and
inc
bound
scas
mul
mov
loope
jns
cmp
sub
adc
pop
mov
out
ror
test
inc
test
add
outs
add
fadd
push
aas
ret
jne
sti
dec
std
test
and
and
ins
fdiv
outs
nop
push
jp
inc
fnstcw
dec
dec
jecxz
in
bound
inc
mov
or
xchg
sub
outs
in
in
jl
pop
jae
xchg
lods
mov
pop
jp
lock
push
pop
pop
in
or
mov
xchg
push
jo
sub
sub
adc
jnp
jle
mov
jo
inc
mov
div
mov
dec
stc
dec
mov
push
cli
adc
enter
pop
push
mov
ins
stos
inc
sub
jmp
pop
sub
lock
mov
or
push
jmp
xor
gs
jg
xchg
loope
adc
pop
out
sub
loopne
dec
cmp
xchg
or
cmp
and
out
jae
dec
xchg
aas
hlt
jl
mov
sti
cmp
test
shr
push
test
cmp
push
sahf
dec
mov
xchg
(bad)
repnz
adc
iret
push
mov
jecxz
(bad)
jbe
sbb
sbb
retf
mov
shl
push
ficomp
dec
sbb
inc
shl
fwait
sub
push
pop
jne
sub
iret
mov
clc
pop
sub
or
inc
iret
xor
jmp
std
cmp
(bad)
in
jbe
stos
lea
mov
dec
je
stos
pop
dec
jae
ins
dec
std
imul
jb
in
dec
xchg
adc
lahf
out
push
hlt
mov
mov
(bad)
jl
xor
mov
aam
mov
push
stc
leave
and
mov
fcomp
call
test
inc
sar
jg
push
out
and
and
test
jmp
ret
xor
fadd
outs
(bad)
xor
bound
imul
pop
xchg
push
or
mov
mov
retf
rol
sbb
pop
cmp
popa
sti
in
xor
mov
outs
mov
aas
movs
pop
cmp
and
mov
fcmovnb
call
enter
sbb
xor
(bad)
jmp
scas
sbb
push
ins
xor
and
cmps
jno
int3
jne
nop
adc
inc
jne
mov
inc
jns
in
pop
hlt
add
jecxz
test
fcmove
or
ss
jmp
jnp
je
daa
jne
repz
int
and
enter
(bad)
cwde
pop
mov
mov
cmp
lock
fst
ror
data16
pop
jbe
lods
jne
xor
jmp
movs
mov
stos
mov
or
sar
mov
jae
dec
stc
adc
and
stos
fsubr
fiadd
rsqrtps
add
jge
mov
les
shr
fucomp
jmp
fs
and
sahf
xor
sbb
nop
mov
pop
fs
jb
not
xchg
inc
mov
data16
push
mov
adc
or
jns
mov
fild
out
rcl
sbb
jns
xchg
add
cwde
mov
imul
data16
push
sub
sar
mov
adc
call
pop
pop
lock
xor
cmc
pop
or
push
in
(bad)
fisttp
in
cmp
jecxz
and
mov
(bad)
mov
sub
aas
out
int
adc
mov
cmp
and
in
daa
out
jbe
dec
fist
or
mov
aam
stos
mov
xor
xchg
xor
and
dec
ffreep
or
xor
mov
mov
dec
cdq
sar
cmp
pop
out
xor
add
call
rcr
(bad)
ror
stos
into
mov
std
retf
ins
pop
mov
dec
inc
mov
sahf
fcom
adc
xchg
adc
pushf
cmp
in
int3
arpl
or
fnstsw
pop
push
sub
mov
mov
mov
sbb
or
fist
xchg
xor
xor
test
test
enter
sbb
dec
cs
cmp
jge
(bad)
pop
mov
sub
pop
adc
sub
cdq
cmp
mov
push
fimul
xchg
(bad)
cmp
add
mov
pop
ja
add
daa
sub
sbb
imul
mov
fs
int3
fdiv
sbb
pop
dec
xor
mov
xor
pop
mov
movs
out
mov
shl
shr
fistp
arpl
dec
std
mov
xor
(bad)
or
in
lock
cmp
dec
dec
mov
mov
mov
cs
adc
(bad)
mov
mov
xchg
imul
call
lods
push
jae
inc
adc
enter
fs
xor
adc
jb
pop
xchg
pop
xlat
mov
jno
push
cwde
popf
and
call
mov
mov
repz
sbb
pop
pusha
jg
mov
(bad)
repz
in
div
adc
cmp
mov
push
dec
js
leave
ret
xchg
mov
mov
push
push
lods
fcomp
je
inc
leave
inc
push
test
into
xor
dec
daa
pusha
iret
div
call
cs
mov
push
hlt
dec
clc
jno
in
jg
dec
pop
outs
sub
xchg
loopne
sbb
mov
and
or
repz
call
mul
jns
fwait
std
loopne
and
icebp
fs
arpl
loop
xchg
mov
mov
push
sub
pop
sbb
cdq
xchg
cmc
push
adc
sbb
sti
and
and
jecxz
jp
mov
adc
push
fmulp
mov
cdq
add
outs
out
test
sti
mov
push
jmp
sbb
int3
sub
xor
neg
ins
pop
jl
rcr
cmp
fwait
mov
mov
arpl
add
mov
loopne
mov
std
out
mov
hlt
mov
push
pop
icebp
es
clc
stos
mov
jne
pop
aad
inc
std
pop
lods
push
mov
fimul
jne
in
outs
adc
jbe
mov
cmps
sar
out
sub
stos
cmp
jle
sbb
add
sbb
lods
(bad)
mov
inc
retf
jno
outs
ror
ins
imul
inc
test
xor
iret
xor
inc
mov
add
xchg
es
out
mov
sbb
xchg
cmp
ins
or
retf
inc
add
dec
pop
or
enter
popf
jecxz
mov
dec
into
push
mov
ret
retf
cld
or
inc
out
cmps
or
xor
sub
mov
fidivr
sahf
or
pop
jo
mov
fisub
add
xchg
mov
out
cmp
sbb
test
cmp
xor
lahf
mov
nop
clc
dec
xchg
lea
les
push
icebp
pop
in
cwde
test
mul
push
xchg
jns
std
xchg
mov
jmp
enter
mov
sub
aam
ret
sub
and
iret
lods
sbb
dec
(bad)
adc
inc
pusha
jp
or
inc
cmps
and
sub
repnz
adc
das
stos
retf
les
mov
or
mov
jle
xchg
mov
neg
cmp
shl
mov
jb
in
and
mov
xchg
test
pop
in
leave
cwde
dec
inc
outs
and
loop
dec
js
add
daa
es
jb
addr16
dec
ss
mov
mov
iret
sub
cmc
xchg
xor
inc
xchg
leave
dec
mov
test
cmp
push
adc
sbb
pop
lods
cmp
dec
ins
dec
pop
hlt
call
lock
call
icebp
xlat
push
popa
outs
pop
cld
lahf
push
or
or
push
pusha
push
repz
mov
test
sbb
mov
aad
scas
shl
cmc
scas
out
clc
xchg
and
scas
out
xchg
stc
jmp
adc
clc
rol
push
je
push
jmp
sbb
aas
scas
push
clc
addr16
retf
mov
call
xchg
imul
cmp
dec
lea
push
add
out
ret
aas
in
sbb
rol
cwde
pop
inc
fimul
sub
sub
adc
inc
mov
cwde
lahf
pop
loop
mov
dec
or
inc
push
mov
ins
(bad)
lds
jns
add
inc
dec
jnp
adc
push
(bad)
in
inc
mov
sbb
call
hlt
cmp
add
ds
xor
sbb
arpl
mov
mov
stos
aad
jmp
lods
cmp
dec
movs
push
mov
std
jne
add
dec
mov
es
in
fbstp
call
xor
cmp
fmul
mov
scas
outs
mov
into
mov
int
jp
movs
daa
push
mov
jbe
cmp
rcl
mov
pop
fidiv
ins
pop
adc
imul
in
mov
push
jmp
xor
cmp
lods
nop
ficom
arpl
xchg
xor
jecxz
repnz
push
pop
mov
cwde
sahf
fdivr
jp
loop
mov
in
push
xor
loope
and
fs
sbb
(bad)
push
cmp
push
adc
adc
cmps
loopne
aaa
ds
out
sbb
jne
xor
mov
repz
xor
rol
loop
mov
lahf
or
js
pop
or
hlt
add
mov
out
jmp
mov
pusha
sub
mov
mov
xchg
mov
jmp
clc
push
rcl
jnp
(bad)
dec
daa
ins
leave
fs
add
addr16
push
push
mov
mov
and
shl
add
cdq
xor
int3
fwait
cmp
test
pop
mov
pop
sti
add
lahf
ds
jle
ss
xor
push
mov
or
inc
inc
rcr
outs
mov
push
ror
dec
dec
sahf
xchg
cmp
sub
xchg
mov
pop
pop
(bad)
pop
ret
adc
or
and
rep
cmc
mov
mov
dec
sub
mov
jns
imul
adc
fnstcw
push
xor
clc
cmc
dec
stos
daa
inc
inc
jbe
iret
xchg
lods
lea
dec
mov
jae
mov
ret
nop
cs
pmaxsw
pusha
(bad)
icebp
fisttp
aaa
not
adc
cs
mov
mov
and
in
pusha
ret
dec
cld
fbstp
adc
inc
lea
ja
mov
xchg
jge
add
fsubr
mov
imul
out
xchg
add
arpl
jg
sar
repnz
xchg
fild
nop
out
lahf
cmp
stos
popa
fdivrp
enter
daa
and
add
or
into
xor
loopne
mov
jl
push
jp
push
fs
das
bnd
sub
or
mov
or
mov
inc
pop
xchg
ins
mov
ss
loopne
and
lds
mov
inc
cwde
(bad)
getsec
hlt
cmps
jle
mov
sar
inc
fsubp
stc
push
aaa
je
sbb
push
mov
sub
xor
sbb
dec
fst
jnp
fcomp
pop
adc
mov
mov
dec
mov
daa
out
fidivr
loop
cwde
adc
dec
push
movs
icebp
mov
(bad)
sub
in
mov
xchg
mov
icebp
mov
push
pusha
inc
xor
adc
je
out
inc
inc
pop
cmp
xor
cdq
rcl
and
addr16
pop
sbb
mov
mov
mov
add
call
inc
sti
or
xchg
xlat
push
shr
mov
stc
cs
sbb
jg
sbb
shl
pop
dec
jb
push
sti
mov
rcr
in
fwait
xchg
cs
(bad)
(bad)
out
repz
cwde
test
aad
neg
repnz
dec
xor
out
mov
inc
cmp
add
inc
pop
adc
inc
enter
arpl
and
or
sub
sbb
and
std
(bad)
mov
(bad)
cmp
dec
repnz
inc
mov
mov
scas
add
repz
and
imul
in
push
jno
lds
into
out
aas
pop
movs
fistp
and
(bad)
scas
push
cmp
and
adc
fwait
into
ret
out
sub
pop
adc
enter
xchg
ficomp
les
setno
dec
push
jno
in
xor
adc
xchg
mov
and
mov
and
pop
shr
and
sub
dec
sbb
call
leave
jmp
sub
push
or
aam
jecxz
add
xchg
addr16
dec
mov
fs
enter
in
jno
or
test
sbb
js
inc
shl
mov
dec
inc
(bad)
push
pop
popa
cli
and
sub
adc
in
xor
jo
mov
or
out
int
add
mul
call
imul
or
fwait
enter
jae
test
and
mov
je
pushf
scas
ret
in
outs
rol
xchg
jne
popa
scas
rcr
pusha
sub
push
dec
mov
aad
inc
popf
pop
pusha
je
in
and
cmp
adc
loope
out
imul
cmc
mov
loop
loop
adc
div
push
xor
dec
push
pop
pushf
popf
and
lock
and
push
mov
outs
cli
or
dec
add
mov
or
retf
shl
test
adc
ret
and
jmp
fisubr
mov
cmp
jecxz
add
sub
dec
jmp
loopne
xor
cwde
sub
daa
xchg
leave
scas
push
dec
loop
cmps
xor
cmp
sub
stos
push
sbb
movs
retf
retf
je
jmp
outs
dec
in
cwde
sbb
or
sbb
and
dec
jecxz
loope
pop
loope
movs
cmc
mov
fisubr
jg
out
push
fs
sub
sbb
imul
mov
shl
repnz
push
jbe
pop
fidiv
inc
in
push
ret
in
or
sub
ss
dec
(bad)
nop
sti
pusha
scas
(bad)
mul
mov
cmp
int3
mov
mov
scas
arpl
pop
jmp
stos
mov
sbb
sub
adc
mov
sbb
(bad)
ret
sbb
dec
iret
push
int3
stos
or
je
add
and
shr
sti
retf
test
(bad)
pop
and
adc
inc
mov
ret
scas
adc
je
mov
push
and
or
sub
mov
int
setg
inc
push
jb
jnp
stc
std
dec
jle
lds
popf
jnp
ins
xchg
int3
mov
mov
xor
add
push
mov
lods
imul
mov
push
cwde
pop
adc
pusha
add
pop
out
imul
cwde
jp
sbb
xchg
jp
ds
xchg
pop
jb
cwde
es
sub
mov
loope
aaa
or
jge
dec
loop
int3
adc
xchg
cmp
ss
push
ins
push
pop
sbb
cdq
(bad)
pop
pusha
lods
inc
lock
and
pushf
gs
pop
cdq
stc
push
test
pop
jl
mov
std
jne
test
xor
mov
scas
push
outs
sahf
add
test
test
js
jae
dec
xchg
int3
fdivrp
adc
adc
and
push
inc
jnp
add
fiadd
int3
pop
into
push
fcomi
and
arpl
jmp
push
add
inc
push
sbb
(bad)
adc
dec
bound
xchg
imul
(bad)
iret
cmp
data16
pop
jl
and
mov
mov
mov
dec
(bad)
dec
pop
sbb
jmp
cmp
sub
icebp
pop
cli
mov
adc
inc
push
pop
mov
das
dec
and
xor
or
inc
cs
jg
and
in
(bad)
mov
fwait
xor
sub
pop
in
dec
fwait
jl
xchg
loop
push
test
repnz
jns
leave
cdq
xchg
add
jo
add
es
fwait
jp
pop
sbb
sahf
push
push
in
inc
adc
adc
stos
sahf
and
dec
cmp
mov
xchg
push
sub
shl
enter
cmp
mov
data16
mov
xor
retf
ret
sub
add
xlat
aam
mov
leave
xchg
xchg
mov
dec
dec
pop
repnz
fcmovnb
and
or
mov
push
cmp
mov
int
adc
sub
pop
fmul
push
sbb
add
cmp
(bad)
daa
shl
mov
ud1
lahf
in
repnz
ret
jle
xchg
mov
jae
mov
nop
sbb
mov
loopne
fcmovne
jmp
in
sbb
call
jbe
pop
xchg
adc
xchg
sbb
pushf
hlt
pop
leave
xchg
out
mov
adc
test
jmp
xchg
mov
mov
loope
pop
loope
shl
mov
sbb
inc
or
dec
mov
cmp
push
stos
mov
repz
mov
jae
dec
xchg
inc
fwait
pop
mov
cmp
jle
adc
pop
icebp
das
push
mov
xchg
scas
inc
push
add
stos
cmp
and
and
frstor
dec
cs
movs
(bad)
mov
add
ret
jp
lea
xor
inc
mov
add
ret
pop
adc
iret
mov
push
aaa
test
xlat
std
movs
or
dec
bound
in
sbb
pop
sub
pop
retf
pop
je
xor
xlat
shl
jno
jle
mov
push
xchg
shr
inc
mov
or
mov
pop
xchg
push
cmc
cmps
aas
xlat
mov
sub
adc
jb
cmp
pop
fsub
aam
mov
xchg
pusha
fs
mov
jb
xchg
push
ret
leave
push
add
sbb
ret
xlat
imul
fisub
mov
lods
cmp
or
pop
cmps
sbb
test
push
leave
push
dec
and
(bad)
sbb
or
imul
loope
pop
lock
shl
cmps
xchg
inc
addr16
push
mov
xor
and
mov
dec
dec
sbb
mov
retf
mov
dec
mov
std
push
ret
addr16
push
test
cmp
cld
xchg
loope
mov
repz
inc
mov
push
pop
dec
test
pusha
pop
out
mov
inc
icebp
stos
ret
mov
cwde
add
jae
icebp
test
leave
pop
call
and
popf
or
test
push
out
and
imul
fst
ss
je
bound
lods
fiadd
js
std
or
inc
mov
xor
mov
loop
(bad)
shl
pop
mov
xor
movs
adc
xor
pop
cmp
mov
add
arpl
(bad)
(bad)
lock
add
not
mov
in
in
mov
xchg
dec
or
pop
cdq
int
in
mov
and
out
icebp
jb
hlt
push
adc
ss
in
xor
movs
jl
lahf
mov
movs
test
dec
lds
dec
in
mov
repz
inc
retf
mov
rol
pop
adc
cmc
mov
or
mov
inc
inc
push
mov
(bad)
or
jecxz
jmp
inc
into
loopne
andnps
jns
loopne
mov
pop
(bad)
cmps
jns
(bad)
mov
cmps
mov
leave
(bad)
dec
pop
push
out
or
iret
add
sti
shrd
neg
leave
into
push
xlat
push
ins
(bad)
or
(bad)
out
outs
cmp
mov
cmc
js
jle
and
xchg
int
inc
xchg
popf
dec
ja
push
into
mov
mov
mov
retf
inc
fimul
je
ror
jo
cmp
lods
xor
int3
pop
cmp
push
xchg
pop
cmp
jnp
mov
xor
test
xor
ret
in
add
jmp
mov
jle
jmp
shl
push
jns
lahf
dec
fsubr
sar
adc
shl
lea
dec
int
pop
jecxz
(bad)
outs
stos
mov
push
or
pop
or
or
push
mov
adc
sub
dec
std
jl
js
add
ja
out
or
inc
jno
ins
or
adc
jge
inc
xchg
aas
call
and
xor
mov
outs
ins
in
cdq
jb
cmp
inc
mov
sub
std
push
xchg
push
pushf
pop
mov
cmp
xchg
mov
in
adc
lock
in
mov
outs
mov
adc
sbb
fadd
mov
mov
sbb
cdq
mov
sbb
pop
das
adc
add
dec
test
jp
ds
lahf
or
dec
add
or
jg
pusha
in
sub
(bad)
xor
push
jo
inc
scas
movs
hlt
lds
mov
aas
das
mov
inc
xlat
fld
cld
or
out
(bad)
ja
dec
push
inc
pop
daa
ficom
shl
int
xchg
js
scas
aam
mov
dec
mov
rcr
mov
fwait
stc
inc
mov
push
shl
(bad)
scas
mov
sub
mov
out
push
repz
daa
in
gs
daa
dec
es
out
repz
inc
pop
cmc
mov
jae
sub
mov
sub
jg
icebp
call
lods
mov
ret
dec
inc
rcr
adc
pop
(bad)
ins
aam
sar
aas
mov
hlt
xchg
mov
and
(bad)
cmp
mov
sar
sub
dec
(bad)
jb
and
and
xlat
sub
inc
cmp
mov
cs
cld
inc
out
movs
fnstenv
cmp
mov
daa
in
sbb
(bad)
jecxz
imul
shl
mov
jle
in
aas
xchg
imul
mov
xor
int3
das
jbe
shr
retf
xor
ret
mov
out
inc
mov
popa
cdq
fwait
pop
and
fdivr
mov
dec
lea
pop
mov
push
out
or
dec
out
jno
mov
repz
sti
(bad)
xchg
add
repnz
mov
fcmovu
jecxz
imul
push
or
bound
in
dec
cmps
pop
jmp
push
addr16
int
std
out
imul
adc
repnz
adc
stos
mov
addr16
stc
pop
retf
loope
ds
out
cs
add
cmp
jne
xor
int
rol
sar
inc
dec
add
push
push
mul
daa
mov
push
jne
xchg
jo
jne
popf
inc
popa
popf
out
nop
idiv
mov
(bad)
out
or
int3
xchg
fidivr
xchg
xor
pop
jbe
mov
in
fmulp
add
inc
jns
sbb
xchg
sub
scas
imul
aaa
pop
call
push
out
fstp
(bad)
sahf
ins
lea
mov
scas
xor
mov
sub
ds
jp
xchg
in
add
adc
loop
and
or
mov
and
pop
jbe
addr16
inc
add
add
cmp
push
jb
push
in
call
call
add
inc
cmp
cmp
mov
iret
mov
dec
lods
fdivrp
cmc
inc
fwait
bound
or
popa
xchg
cld
or
adc
add
call
ss
fidivr
pop
xchg
pop
test
mov
and
imul
add
sbb
sbb
mov
les
retf
neg
push
fwait
out
pop
shl
pop
pop
(bad)
mov
les
rcr
pop
mov
jne
and
dec
adc
xchg
dec
adc
mov
stos
jp
test
or
popf
adc
add
stos
pop
mov
add
iret
repnz
or
call
inc
mov
aam
mov
fucom
sahf
xor
push
in
into
jge
retf
into
pusha
(bad)
aam
sbb
add
repz
pop
adc
je
call
jno
dec
and
out
daa
sub
jne
or
loope
sub
jnp
ins
fucomi
fst
or
jmp
(bad)
gs
push
push
mov
(bad)
xchg
xor
mov
imul
xchg
add
dec
push
call
test
pop
popa
repz
loope
cmp
jbe
retf
fdiv
push
mov
out
movs
xor
jecxz
adc
lea
test
cmp
jecxz
aaa
push
and
mov
cmp
add
xchg
add
ds
aas
mov
jnp
add
mov
cmp
stos
jno
scas
and
(bad)
daa
sub
xchg
xlat
jmp
movs
or
xor
push
jno
xchg
retf
fidiv
jb
mov
pop
mov
call
and
clc
push
sub
mov
mov
rol
xchg
pusha
cmps
mov
sar
lods
aad
cmp
(bad)
adc
fbstp
cmps
psrlw
clc
cwde
cmps
aad
xor
dec
push
shl
fs
fcom
jno
scas
push
(bad)
jbe
(bad)
mov
ja
mov
fwait
outs
hlt
shl
test
mov
sub
sbb
mov
(bad)
xchg
adc
cmp
addr16
jno
enter
add
repnz
ficomp
retf
aam
fs
push
lods
fcomp
mov
cmp
and
(bad)
jge
mov
dec
pop
xchg
jmp
dec
pop
das
mov
adc
fincstp
int3
(bad)
out
inc
scas
xchg
repz
mov
mov
sbb
movs
ret
mov
js
mov
fdiv
movs
outs
outs
ja
cmp
popf
enter
sbb
jnp
call
sub
xor
(bad)
repz
and
mov
mov
jno
popa
mov
test
retf
stos
push
imul
ja
mov
inc
repz
cmp
clc
push
imul
or
das
int3
aad
cld
(bad)
sub
mov
xchg
outs
outs
push
js
(bad)
(bad)
ins
mov
imul
mov
mov
and
popa
mov
or
pop
mov
jns
rcl
adc
aad
ret
sub
inc
xchg
(bad)
arpl
xor
mov
dec
sbb
inc
icebp
retf
leave
cmps
jne
mov
call
(bad)
shr
popf
xor
xchg
push
add
iret
jmp
repz
add
in
clc
scas
shr
popf
imul
xlat
mov
movs
es
or
in
call
inc
adc
ja
mov
cli
(bad)
in
jecxz
cmps
lods
inc
daa
fisub
mov
bound
sahf
aam
mov
adc
sbb
sub
xchg
lods
dec
cwde
push
jl
mov
movs
cmp
lods
and
jno
jl
jl
enter
mov
pop
js
jl
sbb
out
sub
xor
ins
mov
iret
jmp
fisttp
dec
cld
test
push
adc
test
or
xchg
imul
mov
xchg
mov
pop
sub
adc
ret
pop
dec
movs
sub
in
xchg
jp
int
sbb
mov
jns
push
push
mov
inc
pusha
call
add
mov
jbe
pop
dec
or
push
leave
adc
cmp
jb
mov
inc
out
fsubr
sbb
dec
xor
cdq
inc
jle
jge
das
cdq
push
into
test
adc
inc
dec
adc
mov
pop
push
mov
ficomp
es
add
cmp
sbb
pop
ins
fstp
(bad)
dec
cmp
lahf
lods
in
jns
(bad)
(bad)
stos
call
(bad)
(bad)
sbb
popf
int
inc
clc
jns
mov
jb
lock
ins
cmp
les
push
adc
mov
or
je
adc
pop
push
jmp
shl
xor
add
dec
dec
sub
pop
pusha
add
cli
lods
push
jg
add
xchg
adc
and
(bad)
(bad)
and
ins
ficom
mov
(bad)
mov
fucomi
repnz
test
sbb
dec
mov
mov
inc
and
cmp
sbb
repnz
in
cmp
gs
cmps
pop
test
ror
cmp
sbb
xor
mov
push
es
pop
in
(bad)
loopne
mov
in
adc
sbb
into
push
inc
add
mov
pop
dec
pusha
add
push
mov
push
sbb
mov
out
mov
cli
int3
imul
jmp
enter
ret
in
(bad)
addr16
clc
push
(bad)
(bad)
adc
jnp
mov
outs
lods
arpl
xchg
out
scas
in
out
and
mov
push
sub
ds
cdq
ins
dec
in
fild
stc
fisub
jle
add
inc
dec
sbb
add
sbb
or
add
jbe
jb
cmps
mov
jbe
cld
push
mov
scas
mov
test
xchg
lds
sbb
fiadd
dec
mov
sti
sti
repz
cmp
loop
(bad)
pop
and
dec
xchg
js
mov
aas
daa
xchg
jno
lods
jp
mov
daa
cdq
xlat
loopne
adc
jl
rcl
jp
outs
xchg
cwde
push
lods
sbb
cmp
iret
jo
mov
dec
cdq
adc
pop
dec
aad
arpl
jecxz
mov
mov
jno
xchg
inc
and
jnp
int3
ins
xor
sub
jbe
movs
mov
scas
addr16
push
retf
xchg
xor
jge
test
add
daa
sti
ins
xor
pop
xchg
dec
mov
cmp
ins
shr
lock
cwde
cmp
ret
lods
xchg
push
sub
xchg
repnz
mov
loop
icebp
and
dec
pop
popf
sub
jg
or
faddp
gs
mov
(bad)
out
push
cli
cmp
jmp
sub
in
gs
es
int3
test
push
dec
fild
adc
dec
nop
rol
dec
out
add
out
mov
jns
mov
pop
mov
mov
xchg
(bad)
nop
nop
xor
add
out
sub
leave
arpl
push
push
mov
mov
fcmovb
(bad)
or
bound
popf
sahf
js
sbb
cld
pop
cmc
call
rep
clc
xor
repz
mov
(bad)
sti
push
jbe
sub
cmp
repz
xchg
jp
adc
add
mov
xlat
sbb
cmp
cwde
rcr
jle
imul
add
je
jp
aaa
mov
sbb
xor
imul
jno
shr
inc
mov
imul
std
xchg
xchg
and
ins
jno
jo
aaa
pop
call
es
mov
push
jp
or
stos
std
cmp
loopne
cli
out
nop
sti
ja
dec
loopne
sahf
sub
cmc
push
dec
pushf
sub
dec
inc
(bad)
jge
pop
mov
lea
imul
inc
nop
sar
cmp
dec
mov
ds
dec
out
adc
sub
jnp
shl
dec
js
pop
mov
aad
jo
in
adc
adc
inc
ficom
rcr
imul
cs
and
gs
mov
adc
pop
into
das
cld
jns
pop
in
pusha
mov
push
add
xchg
xchg
in
sbb
idiv
or
test
lds
adc
push
test
(bad)
or
jne
jbe
fld
icebp
pushf
or
dec
cmp
jae
push
bound
daa
mov
xchg
call
pushf
pusha
jmp
in
dec
xor
dec
aam
arpl
iret
sbb
(bad)
dec
and
inc
and
in
into
mov
test
mov
jmp
jns
lods
bound
rcr
into
dec
mov
gs
dec
cwde
ret
fs
call
mov
jne
mov
jb
xchg
or
(bad)
outs
cld
idiv
cdq
xor
add
(bad)
sub
mov
ret
enter
sbb
sbb
je
xlat
lods
dec
fs
or
mov
xor
ror
push
or
push
push
test
test
mov
sub
jno
pop
or
xor
iret
mov
rcr
aad
mov
mov
or
and
enter
or
push
sub
icebp
pusha
(bad)
cmp
nop
jb
dec
test
pop
mov
aas
push
jl
ja
ins
ret
addr16
nop
retf
cmps
mov
cmp
dec
and
(bad)
cld
jns
cmp
pop
sbb
in
not
jae
clc
or
xchg
outs
push
sbb
inc
push
mov
jbe
(bad)
test
mov
lock
nop
sbb
lock
pop
inc
call
out
mov
sti
jecxz
fmul
xchg
push
cli
mov
xchg
or
push
cld
sub
jl
pop
sahf
pop
jmp
cmps
(bad)
adc
mov
inc
mov
cdq
adc
frstor
pcmpeqw
es
mov
popf
mov
xchg
out
jo
call
mov
int3
movs
dec
sub
fs
sub
rcr
cwde
xchg
push
fsub
push
mov
nop
(bad)
std
cmp
or
sahf
push
arpl
xchg
pop
pop
(bad)
shl
into
mov
les
inc
sbb
add
test
and
cdq
jbe
dec
fdiv
(bad)
aam
sub
jb
fistp
dec
sbb
pop
inc
test
xor
rcr
cmps
inc
dec
inc
ja
adc
cwde
push
fld
ss
mov
mov
mov
out
dec
xchg
pop
sbb
mov
stos
pop
pop
sub
xor
arpl
and
repz
jge
and
aas
add
mov
dec
cmp
or
dec
in
scas
ret
out
or
xchg
test
or
mov
call
jp
push
or
aad
js
imul
lods
mov
(bad)
(bad)
stos
out
sar
cmp
sbb
sahf
retf
shl
inc
fnstsw
inc
dec
mov
sbb
into
out
push
or
jle
outs
dec
jmp
lds
ins
push
ret
test
mov
(bad)
mov
sbb
cwde
pop
loopne
jecxz
dec
je
out
out
dec
and
stc
or
sbb
push
es
push
sub
rcl
(bad)
mov
push
xchg
pop
mov
das
test
dec
call
dec
xor
push
mov
sar
pushf
outs
sbb
lds
inc
popa
ss
pusha
pop
(bad)
cmc
dec
iret
stos
or
push
jbe
and
jl
mov
call
leave
sti
add
jns
rol
cmp
daa
push
adc
sbb
int
dec
mov
stc
sbb
jp
movs
mov
cli
aam
mov
fld
in
jle
ja
int3
mov
je
jnp
cmp
mov
hlt
xor
ja
push
jae
and
lahf
xor
dec
jo
inc
push
adc
mov
push
fs
cmp
add
loopne
loop
jecxz
lahf
ds
xlat
retf
stos
pop
call
(bad)
cmp
xchg
mov
inc
xlat
xabort
xchg
sub
call
jae
retf
xchg
sti
xor
mov
xor
retf
and
sti
mov
sbb
in
jecxz
adc
inc
shr
xchg
hlt
xchg
cli
aad
mov
dec
jmp
add
mov
adc
cmp
repnz
mov
je
data16
xchg
ret
mov
cmps
mov
xor
fst
cmps
pop
dec
mov
outs
fadd
ret
rol
cdq
mov
ins
lahf
stc
shl
pop
test
loop
cmc
mov
xor
jne
scas
and
fs
mov
sbb
ja
inc
inc
sub
test
scas
cdq
popa
in
pop
ins
xor
movs
in
fcomp
test
inc
push
test
or
int3
inc
aam
pop
ret
aaa
fwait
iret
sbb
ret
inc
loopne
inc
mov
adc
inc
gs
shl
icebp
out
jne
jecxz
jmp
retf
xchg
jl
or
das
stos
jmp
push
movs
(bad)
jecxz
jmp
ret
fbstp
add
dec
stos
movs
dec
movs
pop
loop
cmps
dec
sbb
repz
sbb
jmp
and
fldl2t
ds
call
mov
test
push
or
fdiv
jae
mov
test
cmp
scas
ret
xor
js
sbb
bts
fisttp
jbe
mov
adc
xlat
cmp
xor
push
mov
arpl
sub
repnz
sbb
or
sbb
dec
(bad)
sbb
out
mov
mov
inc
fidivr
jl
add
push
outs
hlt
fadd
in
adc
popa
rol
jb
loop
test
les
cmps
arpl
xor
inc
mov
cdq
nop
hlt
push
inc
mov
aaa
sub
inc
pop
push
lds
inc
ss
sub
pop
movs
je
cmp
mov
ret
sbb
sbb
add
sub
fdivr
je
fadd
cmps
mov
adc
mov
stos
mov
aam
sub
std
jns
sub
jnp
mov
or
mov
inc
pop
jmp
dec
shr
ins
cmp
loope
mov
div
pop
pushf
mov
daa
loopne
js
gs
mov
or
fidiv
inc
mov
inc
mov
int
mov
push
mov
xor
sbb
fcmovb
mov
dec
jecxz
mov
outs
es
jg
outs
sbb
imul
mov
call
cmp
(bad)
inc
retf
add
in
mov
adc
js
inc
sub
std
test
test
add
call
mov
in
imul
mov
stos
repz
aad
sbb
(bad)
fisub
imul
xor
inc
push
std
xchg
sbb
lds
dec
jbe
and
sbb
fwait
cmp
data16
mov
add
mov
out
sbb
daa
sub
inc
mov
mov
dec
sar
call
imul
cmovo
or
add
in
and
cmc
mov
call
mov
xchg
mov
ret
ins
cmp
push
push
jae
adc
push
test
test
push
ss
fimul
into
sub
sahf
and
cs
imul
pushf
xlat
mov
pop
mov
icebp
or
test
test
push
into
movs
and
mov
mov
sti
jle
sbb
pop
ins
mov
and
push
inc
icebp
daa
cld
mov
add
mov
idiv
inc
adc
fidivr
shl
in
dec
mov
mov
popf
fadd
int
stos
jp
pop
sub
out
push
mov
stos
ja
sbb
inc
dec
idiv
or
mov
imul
ret
fcomp
cmc
and
jmp
(bad)
aam
adc
and
jbe
enter
push
dec
cmp
pop
pop
mov
sti
adc
push
icebp
stos
fidivr
pop
clc
les
mov
sub
jmp
inc
int
jno
xor
sbb
sub
rol
test
and
aas
push
cld
mov
pop
mov
jg
sbb
and
stc
lock
(bad)
jmp
(bad)
push
and
add
push
in
sub
jno
int
and
push
xchg
stos
fld
dec
aas
push
out
jp
fstp
adc
stos
stos
vaddsd
cld
dec
sar
sti
inc
adc
call
(bad)
imul
neg
dec
fld
lock
out
movs
xchg
mov
sbb
push
rcl
sahf
das
jle
stc
xor
jnp
imul
sub
das
aad
lock
pop
test
or
hlt
or
iret
mov
add
shr
jle
jl
fistp
fist
mov
ja
mov
addr16
sub
cmps
mov
lods
fnstsw
push
pop
sahf
cmps
int3
loope
ins
mov
inc
push
dec
(bad)
hlt
cmp
push
push
dec
ds
std
stc
jecxz
mov
mov
xchg
cld
jmp
and
adc
jg
sub
cmp
add
pop
add
inc
clc
inc
jmp
push
sub
cs
xor
fwait
popf
mov
dec
inc
jge
mov
es
cmps
stos
fsub
push
lds
gs
add
inc
xlat
scas
lock
jae
repz
or
scas
add
mov
jmp
jae
nop
push
jae
retf
adc
sbb
push
jae
mov
je
mov
xchg
mov
add
mov
jp
sbb
pop
push
cdq
cdq
movs
or
xchg
inc
jmp
mov
push
int
pop
sbb
xor
cmps
cli
ret
movs
inc
ja
pop
movs
movs
into
in
sbb
mov
xchg
leave
and
fcomip
call
inc
cmps
jp
js
iret
xor
jno
test
sbb
call
iret
mov
and
arpl
test
xchg
pop
dec
xor
adc
push
std
mov
inc
adc
and
cmp
pop
cmp
pop
sti
idiv
iret
les
shl
cmps
int
push
mov
mov
jl
pop
or
pop
mov
bound
dec
out
push
call
mov
dec
mov
mov
adc
cmp
cli
(bad)
std
stc
adc
adc
(bad)
aad
(bad)
cmps
leave
aaa
fnstsw
xchg
clc
repnz
xor
push
pop
mov
cmc
fs
sbb
push
ds
out
or
enter
jecxz
or
(bad)
hlt
lods
not
cmps
fmul
iret
jl
xchg
loope
inc
xor
(bad)
fwait
lods
xchg
(bad)
jmp
xchg
sub
popa
(bad)
fs
retf
out
jle
mov
add
jne
int
stos
xchg
push
sub
xchg
mov
jg
jp
cmc
sar
xchg
cwde
mov
aaa
in
xlat
lods
in
cmp
push
outs
push
outs
inc
(bad)
mov
data16
aas
dec
sti
arpl
jo
daa
mov
add
aaa
pop
ret
js
test
test
retf
xor
sbb
cmc
jle
imul
and
add
stos
les
test
das
jp
cmc
inc
iret
ficom
outs
loope
cwde
cmp
jns
cmp
leave
(bad)
out
test
push
push
rcl
dec
mov
jo
pop
push
add
loop
cmp
push
in
retf
jo
xor
xchg
arpl
sub
push
inc
test
out
pop
sub
arpl
jp
lods
cwde
sbb
(bad)
pop
push
xor
pop
(bad)
xor
mov
into
popf
adc
aaa
adc
(bad)
xchg
add
xchg
pusha
or
cmp
push
fdiv
test
xchg
scas
in
mov
xchg
aas
fs
ret
into
push
outs
jae
and
shl
dec
sub
aaa
or
push
xor
cmp
cmp
pop
or
add
mov
hlt
mov
pop
mov
sbb
mov
lds
rcr
into
and
dec
les
popa
inc
sbb
xor
mov
mov
int3
sbb
sub
xor
stos
mov
retf
aam
out
mov
mov
ja
lahf
jnp
lds
dec
fist
loop
inc
sub
push
pop
push
dec
xor
movs
jecxz
fisttp
cs
xor
sub
ins
mov
xor
pop
es
or
xor
test
and
rcr
fcom
es
(bad)
out
sbb
aas
cld
jmp
(bad)
in
inc
sub
lahf
test
xchg
outs
lea
mov
std
pop
adc
test
fs
data16
push
xchg
jns
popa
jmp
fimul
inc
or
mov
repnz
push
fwait
and
mov
je
outs
xor
push
fild
inc
jmp
repz
pusha
xchg
scas
dec
test
jmp
mov
pop
(bad)
je
out
pop
jecxz
addr16
ret
inc
sub
adc
pop
bound
pop
clc
inc
mov
pop
xchg
adc
xlat
pop
sar
mov
sub
xchg
jbe
mov
scas
call
(bad)
jbe
lahf
and
rol
call
clc
imul
outs
(bad)
xor
dec
fisttp
adc
ror
mov
les
outs
and
or
mov
pop
repz
jns
push
and
sbb
stos
bound
int3
jle
push
sbb
mov
xor
add
pop
or
mov
adc
cs
xor
push
daa
mov
mov
dec
sub
sub
aad
aas
mov
jecxz
sbb
cmp
ins
sahf
dec
in
js
dec
add
and
xchg
test
fistp
pop
icebp
and
mov
dec
popf
sar
push
pop
jle
dec
xor
cmp
push
dec
fisub
gs
push
fistp
cdq
call
fwait
retf
in
clc
mov
scas
test
call
pavgw
cmp
jp
adc
in
call
lahf
mov
xchg
outs
xor
sbb
or
arpl
ins
mov
adc
inc
repz
cmp
cld
add
gs
jmp
jle
jl
push
add
ins
and
aam
push
sub
repz
(bad)
mov
or
push
pop
jle
and
ret
cmp
(bad)
jnp
jle
and
repz
add
and
add
jp
mov
pop
dec
pop
adc
dec
lock
and
shl
mov
cmp
pushw
movs
in
push
xor
mov
aam
in
pushf
jnp
jnp
pusha
mov
inc
popf
cdq
xor
aad
add
repz
ror
fdiv
mov
adc
dec
(bad)
stos
or
fild
and
cmp
mov
mov
mov
sub
cmps
in
shr
add
jle
cmp
push
mov
in
fstp
fstp
jmp
inc
retf
add
pop
jne
pop
sbb
add
aad
mov
stc
lock
lock
cmp
push
out
jge
xchg
lods
aam
mov
jmp
adc
pusha
lock
inc
xchg
inc
loop
inc
cmp
xchg
push
(bad)
outs
jne
loop
adc
ret
fwait
sti
data16
mov
ja
adc
fild
das
and
icebp
addr16
(bad)
loope
rcr
lock
jecxz
mov
pop
clc
xor
push
jmp
jecxz
out
xor
fst
test
inc
leave
fst
(bad)
repz
pop
sub
mov
xchg
push
into
sbb
inc
mov
lods
pop
xor
leave
mov
xlat
push
cmc
mov
cld
mov
push
mov
hlt
pop
cwde
ins
movs
in
inc
movs
leave
lods
dec
push
test
nop
cld
iret
pop
add
cmc
adc
inc
popf
out
xchg
and
add
cmp
cmp
sub
shl
fbstp
sbb
push
sub
xor
cmp
dec
push
out
cmps
mov
and
inc
pushf
cmps
inc
sbb
lahf
cdq
ds
mov
or
push
jns
push
mov
or
out
test
in
ror
idiv
cmp
push
daa
mov
sub
ss
(bad)
in
cli
cmp
mov
sub
mov
mov
sub
iret
mov
cli
cmp
xlat
mov
dec
jp
sub
xchg
lock
pop
int
enter
push
leave
cli
mov
xchg
out
mov
jg
sub
inc
pushf
retf
mov
sbb
mov
popf
xchg
mov
mov
dec
push
cmp
adc
xchg
aad
push
ins
pause
or
in
pushf
sbb
pop
cs
and
push
jae
sbb
xchg
mov
pop
into
aam
add
cmp
fcomp
xor
sbb
leave
popf
jae
pop
sti
mov
outs
push
sub
aas
xor
test
cwde
push
rol
shl
cwde
push
adc
mov
shr
jmp
fdivr
outs
ins
movs
aad
in
ins
vmwrite
cdq
je
adc
and
leave
pop
imul
pop
push
add
add
pop
jns
je
retf
adc
xchg
(bad)
out
inc
test
scas
retf
dec
fld
pushf
xor
adc
sub
inc
inc
jnp
jo
sbb
cld
popa
xchg
pop
enter
jns
ds
cdq
cli
sub
mov
test
arpl
cmp
mov
bound
addr16
stos
push
pop
or
dec
cmc
add
in
push
push
xchg
ds
fst
lahf
(bad)
popf
dec
push
adc
fwait
xchg
cmc
aam
loope
mov
jne
mov
fs
add
fs
adc
aaa
dec
in
fild
ds
out
sub
ror
jbe
repnz
icebp
shl
(bad)
pop
loopne
xchg
dec
pop
rcl
repz
(bad)
int
xchg
(bad)
retf
jnp
fs
loopne
mov
add
xor
fsubr
ins
adc
xor
cs
xor
iret
lods
test
pop
pop
mov
test
xchg
ja
ret
jb
shl
mov
mov
daa
data16
cs
daa
adc
les
sahf
and
mov
or
xchg
fld
push
push
popf
xchg
xchg
stc
add
push
sbb
xchg
mov
rcl
sti
retf
pop
mov
rcr
in
inc
mov
sbb
fsubr
aam
or
aad
int3
jns
into
popa
in
(bad)
mov
xchg
mov
mov
push
lds
(bad)
sbb
test
and
inc
mov
cld
leave
push
pop
cmp
cmps
mov
mov
lods
ror
push
or
sub
or
mov
jp
out
in
ins
jl
jo
rcl
sub
leave
sti
jge
imul
sti
jns
mov
jo
lods
cmps
add
sub
jmp
push
call
jbe
push
jne
stos
stos
in
dec
in
bound
stc
gs
dec
push
ror
lock
popa
mov
stos
pop
jnp
cwde
cwde
movs
push
jecxz
xor
and
sub
outs
jns
(bad)
enter
adc
mov
mov
outs
and
add
loop
jb
daa
dec
(bad)
shl
pop
cdq
pcmpgtw
xor
lahf
loope
vmwrite
(bad)
mov
xchg
xchg
pusha
jge
out
and
retf
mov
push
sar
test
repnz
imul
fwait
xor
or
test
test
test
les
outs
ret
iret
test
scas
mov
inc
jo
jns
pop
push
out
xchg
iret
int3
int
adc
ins
neg
xchg
mov
jbe
fst
(bad)
jecxz
pusha
dec
out
and
jle
scas
pop
shl
ret
(bad)
lods
mov
fidivr
sar
dec
mov
sbb
loop
and
adc
jb
inc
lods
loopne
jns
loope
fidivr
loop
repnz
inc
sub
push
out
sub
ret
fs
sbb
dec
adc
sahf
cmp
test
and
(bad)
jno
stos
in
pop
jg
jle
mov
push
(bad)
mov
add
aad
push
adc
mov
push
pop
add
sbb
scas
dec
out
xchg
scas
frstor
mov
dec
adc
adc
fdiv
pop
ret
sti
ficomp
out
cmc
adc
pop
sub
sub
xor
cmc
dec
shl
inc
add
cmp
jl
cmps
inc
mov
fucomip
sub
cmp
stc
pop
in
xchg
jmp
js
js
inc
xlat
retf
dec
cs
fld
inc
lods
test
sub
cli
bound
lahf
fwait
mov
xchg
enter
lods
push
sub
add
in
xchg
fisub
not
sbb
mov
retf
xor
mov
or
popa
std
mov
stos
pop
outs
sub
not
adc
jne
psrld
pusha
jbe
shl
test
cmp
cmp
mov
aad
adc
cdq
pop
retf
push
pop
cld
repnz
pop
fisub
cmp
fwait
call
das
mov
jl
push
mov
cmpxchg
jns
sar
mov
lods
pop
pop
outs
xchg
in
sahf
data16
cld
sub
mov
sbb
push
lahf
addr16
mov
imul
lods
dec
cmp
inc
imul
ds
mov
mov
xchg
shr
pop
call
lahf
mov
xchg
cmp
jmp
mov
pop
mov
cmp
or
lods
jmp
cmp
sub
and
cmp
fwait
sbb
bound
sahf
push
pop
rcl
mov
mov
cmp
push
add
stc
ret
xchg
and
mov
push
and
adc
jp
rcl
inc
icebp
aad
mov
pop
scas
fidiv
pop
cmc
into
out
sahf
or
popa
in
inc
jge
popa
pop
jl
aad
sbb
cdq
xchg
cmp
or
test
xor
ret
dec
bound
xor
jbe
out
lea
add
xchg
out
adc
sub
cli
adc
mov
loope
jge
nop
hlt
in
icebp
mov
jp
retf
mov
(bad)
mov
cld
out
test
cmp
jl
lock
pop
adc
xlat
and
(bad)
jmp
mov
push
shr
test
(bad)
push
cmps
sub
jmp
jg
xor
mov
mov
add
xchg
dec
hlt
xor
cmps
mov
push
rcr
xchg
mov
xor
rcl
repz
mov
sar
stos
mov
loop
test
test
popa
pop
xchg
dec
es
addr16
mov
and
pop
cmps
sub
jae
push
mov
cmp
cli
or
inc
push
jg
mov
rcr
mov
dec
fcomp
outs
hlt
push
mov
inc
dec
movs
(bad)
out
mov
es
loopne
test
lods
and
sub
push
inc
repnz
mov
stos
add
pop
dec
jge
mov
xor
cmp
jb
mov
pop
das
stos
bound
add
push
jl
push
sub
cmc
jbe
dec
adc
mov
inc
pop
cmp
pop
sub
mov
outs
sbb
pop
ret
in
dec
repz
sbb
cld
mov
pusha
(bad)
mov
lds
and
and
push
movs
mov
movs
mov
clc
pop
repz
ret
mov
xchg
push
pop
pop
fadd
fisttp
inc
fstp
push
adc
call
mov
push
popa
xor
xchg
out
cmp
push
lods
into
mov
fisttp
sub
mov
push
test
push
add
lea
fist
mov
xlat
push
xor
push
into
mov
mov
push
push
cmps
(bad)
jl
in
out
xchg
jo
mov
cmp
jmp
(bad)
js
pop
sub
sbb
inc
and
sbb
repz
rcr
jecxz
mov
cld
sub
pop
in
sub
call
pop
dec
imul
inc
xlat
cmp
sub
(bad)
mov
ret
push
mov
adc
in
icebp
or
pop
sub
dec
ror
push
sbb
neg
ins
or
pop
push
test
retf
ins
jmp
mov
ja
sub
popa
inc
mov
sub
or
cli
adc
inc
stos
neg
iret
push
mov
xchg
cmps
cmp
pop
gs
(bad)
dec
(bad)
fsubr
into
call
xchg
inc
scas
mov
(bad)
rol
jne
or
add
and
and
mov
idiv
push
out
imul
(bad)
pop
adc
jmp
retf
dec
gs
sar
mov
add
outs
popf
xchg
jl
sbb
in
xchg
push
outs
cmp
mov
arpl
jae
or
dec
ficomp
push
xor
inc
mov
xor
(bad)
mov
clc
inc
and
mov
imul
loop
adc
jmp
pop
add
loope
iret
lods
outs
jge
dec
jmp
mov
add
test
into
xor
adc
aas
retf
mov
sbb
sub
dec
inc
cmps
packuswb
pop
jne
push
cmp
repz
pushf
or
jmp
jae
cmps
xor
and
xor
mov
cmp
std
sub
push
bound
dec
sbb
lods
das
mov
imul
pop
ds
or
cmp
js
mov
add
add
adc
test
sub
fistp
jp
outs
sub
mov
sar
jge
fld
sbb
jno
mov
add
inc
fild
mov
jmp
frstor
cmp
xor
fiadd
into
ds
sub
cmps
adc
inc
popf
mov
std
pop
and
pop
pop
mov
xor
je
int
dec
in
jns
xor
call
push
sub
test
cmp
arpl
lods
sbb
adc
sbb
pusha
cmp
dec
pop
dec
ss
adc
xchg
jno
cmp
cmp
arpl
xor
(bad)
jge
out
add
dec
mov
jecxz
rcl
adc
in
into
movs
inc
fsub
jl
in
enter
or
cmp
outs
jmp
push
cmc
mov
inc
push
pop
cmps
add
sub
(bad)
adc
lods
lock
jl
cmc
out
xchg
mov
push
(bad)
fldcw
mov
pop
mov
lahf
xlat
aas
pushf
test
mov
jne
push
inc
je
idiv
dec
mov
retf
imul
leave
mov
xor
test
add
es
test
push
inc
push
pop
out
out
mov
mov
mov
in
js
lock
mov
mov
xchg
mov
jbe
fidiv
adc
out
fisttp
fist
sbb
cmp
jae
in
out
xchg
inc
leave
sbb
dec
xchg
push
sti
scas
mov
les
xchg
and
xor
jle
fsubr
adc
mov
inc
cs
dec
pushf
addr16
ret
sbb
jge
mul
sub
xchg
out
or
call
jno
or
or
cwde
test
cdq
rcr
mov
or
pop
out
loop
je
jp
add
cmc
retf
jne
ins
jecxz
dec
push
mov
or
sbb
ss
mov
in
imul
fld
test
mov
push
or
mov
inc
xchg
ret
gs
jmp
push
add
add
sbb
xchg
or
mov
aaa
adc
iret
pop
push
or
icebp
sub
aaa
mov
stc
ror
jge
jnp
div
sti
pop
xlat
and
cmps
and
push
pop
das
out
jmp
push
jp
cdq
mov
jne
add
xor
jmp
pop
inc
jecxz
inc
aam
sub
mov
int3
ficomp
sbb
into
mov
call
sub
cmps
stos
xor
and
adc
fs
scas
mov
ffreep
xchg
push
dec
fdivr
ins
jns
lea
out
rcr
outs
xor
test
xabort
ss
aaa
cs
das
ffree
sub
lods
jmp
out
jecxz
cmp
lock
mov
or
nop
sbb
pmullw
(bad)
xor
jns
icebp
adc
sbb
ror
mov
(bad)
stos
dec
jbe
(bad)
push
in
add
in
xchg
repnz
fst
cli
pop
aas
mov
adc
loop
(bad)
lea
aam
or
push
mov
aam
mov
mov
adc
xchg
jbe
add
in
cmps
int3
push
cmp
dec
mov
jae
daa
movs
test
jne
daa
cmp
or
ror
hlt
test
mov
ins
xchg
sub
lahf
dec
lahf
pop
sbb
neg
shl
jns
cmp
mov
cmps
add
mov
pop
xor
mov
call
jns
and
and
mov
pushf
ins
pop
mov
das
fld
pop
nop
sbb
hlt
pop
test
addr16
mov
imul
push
imul
loop
cmp
cdq
xchg
jmp
mov
or
add
mov
and
sbb
stos
cmp
inc
and
sbb
cs
push
loop
lahf
cmp
dec
test
cmp
dec
gs
mov
inc
test
retf
and
push
cmp
cmp
pop
xor
pop
jp
mov
inc
cmps
sub
sahf
xor
push
leave
ss
repnz
out
fcom
jg
fistp
inc
inc
pop
hlt
pop
sbb
and
out
call
mov
push
mov
sbb
loope
(bad)
xor
dec
fistp
sti
mov
push
shl
push
jo
mov
cld
pop
into
lock
cmp
loopne
fbstp
inc
popa
test
mov
dec
cwde
push
clc
clc
lea
push
shl
xchg
ins
jmp
xor
add
jns
and
sti
push
cld
push
mov
pop
hlt
sbb
adc
inc
inc
adc
or
inc
test
push
mov
(bad)
pop
cmp
setns
mov
or
pusha
dec
in
mov
call
loop
add
push
dec
(bad)
sahf
retf
std
jmp
cmp
add
scas
jmp
ins
sahf
mov
sbb
sub
pop
mov
push
adc
div
out
mov
clc
call
mov
push
ins
push
call
retf
nop
into
xchg
dec
cmps
sbb
fbld
or
mov
pop
mov
movs
and
ret
push
mov
or
neg
xlat
mov
or
repnz
in
dec
cmp
fsub
xchg
pushf
mov
ja
mov
test
mov
and
bound
ret
add
pop
movs
pop
mov
(bad)
push
mov
jg
cmp
cmp
mov
loop
scas
mov
in
adc
cwde
and
sti
ret
pop
in
adc
inc
cmp
cmp
xchg
fdivr
ds
aas
arpl
and
jae
push
sub
add
inc
jl
fldcw
call
dec
xchg
jno
int3
pop
add
mov
clc
hlt
adc
out
aad
xor
lds
jl
and
and
sar
jae
cmps
mov
fwait
push
out
ins
push
inc
xchg
(bad)
jl
cmp
enter
ret
and
add
sahf
xchg
mov
ret
pusha
fwait
lea
prefetch
clc
jnp
dec
into
sbb
pop
inc
or
out
out
add
es
in
test
or
cmp
xor
push
ins
(bad)
(bad)
div
call
sub
pop
and
mov
or
jno
pop
cli
dec
add
fs
int3
stos
(bad)
in
ror
ret
popf
(bad)
das
in
adc
out
stc
mov
popf
sub
leave
add
add
nop
push
or
pop
pop
cmp
sbb
fdiv
pop
push
mov
comiss
or
rcr
mov
inc
add
out
cmp
jmp
pusha
sysenter
and
xor
loop
mov
(bad)
push
sbb
adc
or
mov
xchg
call
fwait
cld
mov
inc
push
mov
lock
das
xchg
pop
xor
fwait
pop
mov
(bad)
push
inc
dec
xchg
pop
mov
inc
cmp
in
xor
test
scas
stos
cwde
test
mov
out
nop
test
movs
sbb
rol
cmp
repnz
push
cdq
cmc
sub
aas
sti
dec
scas
push
fstp
jl
pop
sbb
out
xchg
or
ficom
and
outs
sub
(bad)
jp
adc
sbb
cmps
(bad)
and
push
mov
mov
xchg
call
and
mov
xlat
pop
mov
cld
std
sbb
cmps
mov
scas
sub
pop
push
push
fdivr
xor
or
sub
icebp
inc
jecxz
in
pop
les
sti
sub
add
add
out
aam
mov
(bad)
call
rcr
scas
dec
ret
pusha
dec
fidivr
bound
xchg
cmp
mov
dec
sub
or
sbb
shl
and
dec
outs
movs
mov
mov
cmp
movs
and
cmps
out
bound
jg
dec
call
cmp
in
mov
push
outs
sbb
pop
push
lahf
add
push
enter
mov
mov
imul
in
and
shl
arpl
fdivr
or
addr16
inc
add
mov
stos
xor
jmp
inc
pop
out
sub
out
cs
fcomp
cmp
inc
push
jns
adc
in
addr16
jl
std
inc
aas
mov
adc
lods
retf
pop
hlt
pop
mov
xchg
in
xchg
jl
pop
aam
push
lahf
jbe
mov
jno
and
mov
ins
into
fadd
ror
in
push
retf
(bad)
sub
aaa
adc
xchg
rol
xor
cmp
jb
fsubr
add
retf
and
sbb
sahf
add
jne
dec
push
dec
mov
or
mov
and
cmp
jne
sub
cmc
test
or
es
pushf
mov
and
mov
in
add
js
outs
or
mov
cs
in
xchg
cdq
fisubr
mov
xchg
icebp
sub
xor
mov
mov
loopne
imul
into
add
mov
jo
push
add
push
enter
add
add
push
dec
cdq
push
call
push
jbe
pop
lods
fsubr
imul
pushf
mov
dec
ror
in
jnp
mov
push
fdivr
fld
push
jmp
test
in
jge
rcl
daa
repnz
sbb
add
sbb
add
mov
xor
xor
xchg
cld
jmp
lods
and
fld
add
jle
daa
in
sbb
popf
mov
fldenv
(bad)
es
adc
cmc
add
dec
sti
mov
cmc
dec
fisttp
aas
or
rcl
jp
adc
loopne
std
retf
sbb
push
add
shl
jmp
adc
push
adc
ins
mov
and
call
pop
sub
sub
or
cld
sub
xchg
outs
inc
shl
pop
into
or
imul
cmp
push
xchg
neg
cld
mov
cmp
push
movs
pushf
ret
ins
jno
jmp
jge
(bad)
xlat
inc
inc
imul
fsub
daa
icebp
repz
cs
adc
sub
repz
call
shr
je
xor
in
les
push
xchg
push
das
xchg
mov
lea
shl
popf
enter
xor
pop
pop
cmps
fwait
jbe
ds
mov
pusha
adc
inc
test
pushf
sub
daa
mov
(bad)
mov
xchg
add
test
add
xlat
cwde
and
mov
jmp
jmp
movs
mov
arpl
jmp
aad
ins
pop
aam
pop
pop
sbb
dec
imul
ds
jmp
cmp
add
dec
aaa
jmp
xchg
ss
and
out
std
sub
mov
inc
sbb
mov
lods
aam
hlt
hlt
pop
ins
outs
out
lds
mov
jbe
xor
cmps
in
dec
rcl
cs
cmp
xlat
(bad)
inc
test
jp
or
push
cmp
sbb
add
mov
out
mov
adc
jge
cmps
mov
mov
(bad)
jns
pop
stc
sahf
pop
adc
fdivr
ins
add
sbb
cmc
and
int3
xchg
pop
fild
and
mov
int3
mov
xchg
sbb
push
mov
push
retf
nop
fs
adc
pop
shl
arpl
or
outs
mov
adc
hlt
adc
movs
cmps
pop
mov
xor
jg
inc
ins
jle
lds
add
aam
arpl
push
bsr
xlat
aas
arpl
std
hlt
xchg
jp
in
push
and
lods
sub
test
add
or
push
imul
repnz
inc
call
cdq
aas
jge
mov
jae
jb
pop
popa
and
mov
jnp
cs
jp
imul
shl
mov
push
adc
or
jo
pop
pusha
and
call
adc
test
outs
inc
jge
sbb
cmps
or
mov
out
(bad)
pusha
out
in
mov
sahf
fiadd
lods
call
in
jnp
data16
xor
sub
fcomp
out
in
arpl
sub
or
xchg
mov
push
stos
and
pop
mov
mov
sub
push
retf
iret
push
stos
mov
out
jbe
inc
in
adc
mov
and
or
ds
movs
mov
inc
or
stc
mov
and
mov
mov
pop
test
mov
pop
pop
ins
iret
push
sub
loope
mov
pop
in
enter
test
sub
add
movs
cmp
xor
xchg
loope
jge
dec
mov
into
inc
mov
test
sbb
(bad)
call
or
cmp
inc
xchg
mov
mov
imul
push
movs
retf
dec
push
and
rol
pop
into
mov
(bad)
dec
mov
or
xlat
aad
out
push
test
cmps
push
fdivr
test
loop
xor
(bad)
(bad)
psubq
xchg
dec
xchg
mov
xor
cdq
in
sub
stc
ret
dec
sub
out
dec
in
or
push
fdivr
ret
push
add
mov
sbb
dec
pop
shl
jmp
loope
fadd
jo
cmp
gs
xlat
mov
jmp
movs
mov
call
dec
cmp
clc
fsubr
xor
cmps
push
jmp
sbb
call
xor
pop
ss
cmp
clc
cmp
mov
(bad)
std
(bad)
fst
push
or
js
jmp
jo
outs
pop
or
out
lods
cmp
clc
mov
and
sub
or
out
mov
mov
repnz
jecxz
mov
mov
loope
(bad)
sbb
jg
sub
xchg
xchg
cmps
mov
out
pop
adc
lahf
sbb
arpl
mov
loopne
ds
cmps
loop
shl
mov
push
inc
push
aad
js
retf
mov
fcmovnb
out
cmc
mov
push
push
pop
retf
das
scas
dec
mov
cmc
add
mov
aas
cmps
(bad)
div
rcl
and
mov
dec
es
imul
(bad)
les
push
test
push
hlt
dec
mov
les
mov
nop
or
jg
xor
movs
aas
les
jmp
mov
sub
sub
sti
or
icebp
and
hlt
ja
(bad)
stc
loop
out
sbb
add
cmp
and
sets
loopne
xchg
xchg
mov
ds
leave
gs
adc
mov
in
xor
es
in
test
sbb
and
xor
fdivr
lods
into
(bad)
popa
adc
pusha
arpl
mov
lea
fisub
mov
jle
jo
adc
jno
adc
push
sbb
imul
sbb
sub
jmp
xor
xchg
xchg
cdq
lds
loopne
ins
lods
add
mov
jnp
aam
rcr
ftst
mov
aad
jno
leave
mov
retf
call
push
mov
enter
pop
xor
addr16
cdq
xchg
out
(bad)
or
xor
bound
cmp
cwde
mov
loop
shl
imul
pop
lock
mov
pop
inc
sub
push
movs
mov
mov
ja
mov
and
cmps
rcr
es
enter
inc
xor
pop
out
pop
imul
ja
xchg
jae
xor
inc
das
sbb
sub
and
mov
add
popa
inc
add
and
adc
push
jmp
fldcw
inc
mov
mov
push
in
xor
xor
mov
jge
mov
xor
daa
retf
enter
popa
xchg
push
retf
push
loop
mov
push
sub
(bad)
div
add
(bad)
xor
pop
and
push
ss
fdiv
mov
rol
imul
aaa
adc
dec
xchg
add
ins
mov
dec
mov
imul
inc
add
xchg
push
cmp
hlt
xlat
inc
cdq
xchg
int3
stos
les
mov
sub
test
stos
aaa
fidiv
sbb
scas
pop
add
and
ret
and
and
cmp
or
ret
movs
or
mov
xchg
jb
jmp
lds
sbb
(bad)
jmp
movs
mov
cmp
inc
add
ret
or
pop
and
or
(bad)
loop
(bad)
ja
addr16
cmp
mov
and
nop
sbb
sub
std
mov
jmp
out
cmps
jp
test
imul
adc
ss
xor
inc
mov
mov
mov
cld
ror
jmp
jmp
adc
cs
icebp
idiv
mov
push
or
fcmovu
cli
fucomip
popa
jno
push
sub
push
mov
cwde
sub
(bad)
sbb
sbb
dec
je
pusha
sbb
mov
repz
xchg
out
sub
call
cmps
rol
xchg
cmp
out
sub
loop
or
je
lahf
dec
mov
div
fmul
dec
jl
push
push
lods
dec
xor
std
shl
push
mov
cs
pop
mov
(bad)
cmps
out
adc
rcl
mov
push
inc
sub
stos
mov
test
bound
cdq
add
std
fwait
mov
ds
push
mov
inc
or
lods
addr16
or
mov
jb
aad
repnz
movs
mov
clc
jp
int3
iret
sbb
(bad)
aas
jae
mov
scas
je
in
sub
cmps
or
inc
pop
(bad)
jecxz
mov
cmps
not
or
shr
sub
inc
sbb
xor
cmc
frstor
ins
loope
lods
lahf
jg
ins
pop
inc
xchg
pop
in
call
daa
mov
imul
stos
das
xor
leave
add
push
push
pop
sbb
push
sub
loope
mov
push
les
icebp
sub
das
and
pop
ret
pusha
enter
(bad)
(bad)
hlt
jp
inc
(bad)
xchg
ret
sti
leave
gs
xchg
shl
and
lods
and
pop
stos
xor
mov
dec
popa
out
sub
(bad)
mov
pop
repnz
lea
inc
sbb
(bad)
pop
mov
xor
jmp
loope
data16
out
xchg
dec
jg
shl
stc
dec
jle
mov
jae
xchg
pushf
cmp
xchg
adc
mov
out
fadd
xor
les
aam
push
mov
(bad)
retf
adc
leave
push
fst
clc
int
lds
sbb
repnz
jnp
jnp
mov
leave
inc
inc
fldlg2
hlt
pop
jnp
xchg
cmp
inc
inc
movs
aam
xlat
dec
xchg
push
sti
clc
cmps
and
mov
dec
ins
cmp
inc
xchg
pop
out
or
bnd
daa
into
imul
mov
push
inc
pop
jl
scas
sbb
(bad)
xchg
and
movs
rol
and
and
fiadd
into
shr
mov
aaa
sub
mov
sub
sbb
cmp
pop
cmp
mov
sti
cmp
cdq
xchg
dec
dec
cmc
jnp
push
push
xor
mov
lahf
or
test
add
lahf
xor
add
fisubr
addr16
nop
or
enter
xchg
or
mov
jg
out
lock
dec
stos
mov
cdq
cmc
int
xchg
(bad)
jmp
cld
mov
jge
jnp
fld
jl
dec
adc
icebp
adc
add
(bad)
adc
xor
int3
ror
cmp
cmp
inc
sbb
xchg
mov
rcr
jge
mov
add
and
fidiv
rol
or
mov
push
fadd
mov
add
outs
xor
jnp
xchg
mov
retf
test
or
out
leave
pop
icebp
mov
ins
lods
dec
mov
out
dec
pop
mov
cmps
je
or
sbb
fcomp
jmp
ret
imul
stc
push
scas
jg
mov
or
icebp
push
push
sbb
call
and
mov
and
adc
pushf
xchg
test
fwait
ins
or
push
pop
pop
dec
(bad)
sbb
leave
loope
sub
dec
test
gs
xchg
mov
cmc
cld
popf
lods
das
gs
cli
aad
retf
ficomp
mov
push
ret
mov
or
dec
cld
xchg
cmps
retf
out
repnz
pop
arpl
(bad)
mov
push
cmps
sub
cld
adc
test
repnz
mov
outs
push
mov
rcr
push
cmp
cli
clc
int
(bad)
icebp
out
fs
dec
mov
aam
jmp
inc
sbb
pop
xor
mov
xchg
ficom
push
movs
lods
sbb
lock
dec
ja
add
mov
xchg
(bad)
mov
or
sbb
les
ret
js
xchg
lods
or
or
push
xor
adc
ss
data16
repz
rcl
fld
imul
sar
(bad)
aam
fldcw
je
xor
stc
sbb
cs
int3
jge
nop
out
sbb
cmp
and
cmp
imul
adc
ins
out
mov
rcl
add
loop
lahf
cmp
inc
mov
das
jnp
test
or
xor
xchg
push
cli
push
aad
mov
push
rcl
dec
out
movs
cwde
mov
pop
mov
call
sar
stos
mov
mov
pusha
stos
out
mov
cmp
jnp
sahf
scas
sbb
adc
lds
mov
or
jo
lahf
xor
pop
mov
lock
add
inc
retf
mov
xchg
add
pop
sar
lods
mov
into
out
movs
mov
xlat
(bad)
movs
addr16
mov
mov
rol
(bad)
xlat
sbb
(bad)
mov
cmp
mov
pushf
push
les
and
leave
call
xchg
(bad)
imul
stos
mov
sub
fdivr
sbb
call
stos
push
das
mov
or
fwait
mov
or
pop
xor
mov
dec
mov
ja
scas
dec
jbe
stc
jp
and
imul
pop
ins
ds
inc
fcmovu
out
outs
cmp
xor
pop
ret
jmp
adc
add
lds
sub
push
dec
mov
dec
push
fnstenv
add
or
push
cli
shr
fild
scas
rcl
pop
and
pop
xchg
test
loope
clc
or
mov
clc
mov
repz
push
fs
inc
inc
push
call
lods
lahf
dec
push
sahf
mov
jno
push
mov
in
xor
adc
mov
cmc
jno
adc
and
loop
popa
inc
jne
sub
push
xchg
push
ror
dec
xchg
cli
mov
dec
cli
dec
dec
call
loopne
mov
inc
pop
imul
lahf
dec
hlt
ins
fs
in
enter
push
mov
loopne
jno
bswap
fsub
test
shl
sbb
adc
push
or
addr16
cmp
leave
ret
int
cmps
mov
lods
gs
jbe
outs
mov
sub
inc
inc
aam
pop
mov
sbb
idiv
aas
mov
push
or
and
mov
mov
cli
or
pop
aam
ss
or
fimul
mov
jmp
dec
add
and
xlat
mov
cmp
cld
arpl
pop
arpl
leave
pop
pop
mov
jae
repz
aam
jb
and
outs
outs
jno
cld
ror
out
sbb
adc
or
(bad)
jns
fld
popf
aam
xchg
std
call
into
test
pop
fisubr
std
ret
nop
jbe
cdq
sahf
jno
outs
xor
jg
les
fwait
push
outs
clc
dec
icebp
cwde
jmp
fs
sbb
outs
(bad)
rcr
sahf
cmp
sub
pushf
jmp
(bad)
jno
std
retf
pop
and
bound
add
fidiv
movs
mov
xor
dec
leave
push
mov
js
stos
inc
push
jl
push
xlat
sbb
outs
fcomp
xchg
call
popf
loop
sub
inc
loope
test
jns
add
pop
inc
lahf
(bad)
stos
inc
push
outs
retf
loop
add
and
cmp
cmp
rcr
or
outs
push
das
nop
xchg
cmc
xchg
adc
xchg
push
cmp
xchg
(bad)
fstp
and
shl
stos
pop
fmul
adc
lahf
sub
scas
mov
xor
xchg
mov
outs
addr16
ja
xor
cmp
clc
cli
lahf
ret
adc
cmps
loop
mov
gs
xchg
xor
cmp
dec
ror
call
cmp
jne
nop
mov
mov
and
lods
shr
push
es
(bad)
cli
jle
outs
sub
pop
or
jnp
pusha
stos
imul
pop
or
mov
adc
in
loope
jae
icebp
pop
fcomi
push
pushf
mov
mov
and
lock
frstor
call
fsub
sahf
fst
xor
jno
cmps
dec
sub
xor
xchg
sbb
(bad)
jb
mov
jbe
cmp
push
jge
ja
push
push
adc
outs
push
arpl
and
mov
adc
pop
out
pop
pop
vcvtps2dq
mov
add
xchg
sub
xchg
lods
popf
fs
repnz
push
les
pusha
and
push
in
popa
fwait
ret
adc
inc
pushf
and
add
cmp
test
and
cmp
ds
adc
jmp
push
adc
cmp
mov
dec
jnp
push
int
jecxz
je
xchg
aam
and
hlt
or
push
adc
shr
pop
jl
nop
lods
fld
les
pop
jmp
popw
jo
and
push
xchg
retf
outs
lods
fmul
xchg
push
aaa
jne
or
shl
imul
pusha
mov
repnz
out
push
bound
inc
adc
les
push
outs
rol
(bad)
(bad)
mov
mov
adc
dec
sub
bound
xor
adc
stos
add
adc
ret
fstp
dec
xor
loop
call
push
xchg
iret
mov
pop
out
jne
mov
popa
call
push
pop
push
enter
mov
mov
push
mov
ja
cld
mov
adc
int3
shl
outs
jp
push
(bad)
ss
hlt
fisttp
test
mov
mov
mov
jp
pop
sbb
sbb
ds
pop
xor
mov
mov
call
mov
in
xlat
push
pop
cmp
lds
add
dec
and
fiadd
js
add
ror
out
dec
cmp
ins
in
sub
ror
rcl
mov
push
dec
imul
fstp
dec
jae
inc
stos
mov
mov
rcr
pop
pop
add
cmp
and
jmp
outs
cmp
ja
repnz
sbb
jl
and
adc
cmps
cmp
push
mov
movs
push
fwait
dec
xor
dec
sub
shl
add
jbe
xchg
pop
call
out
mul
and
outs
loop
(bad)
adc
mov
loop
jecxz
in
or
addr16
aas
(bad)
rcl
inc
push
fild
add
je
fist
ret
sti
and
ret
inc
inc
fdiv
xor
and
and
jg
mov
(bad)
lidtd
movs
adc
call
mov
retf
stos
popf
test
scas
sub
pop
mov
test
stos
nop
sub
enter
push
push
inc
sbb
jl
fistp
mov
ficomp
mov
jp
ret
iret
lods
adc
dec
cmp
popa
jge
rcl
movs
push
cld
sti
stos
rcr
out
adc
or
std
push
fwait
push
ds
pop
cmps
test
call
mov
add
leave
cmps
vpsllw
retf
cmc
sbb
sub
sub
pop
xor
aam
jb
enter
gs
pop
jae
push
mov
mov
dec
fadd
dec
out
mov
aam
adc
pusha
pop
xchg
push
mov
jno
ret
enter
jp
xlat
fstp
cli
push
mov
scas
std
cdq
(bad)
lock
mov
loop
outs
mov
or
cli
fadd
xchg
add
popa
leave
pop
mov
jbe
mov
push
stos
or
mov
push
sti
div
(bad)
mov
into
sti
nop
movs
inc
(bad)
sub
mov
arpl
push
pop
adc
jp
dec
inc
popf
push
cli
test
(bad)
mov
imul
(bad)
jbe
daa
inc
in
xchg
jmp
fucomp
je
mov
adc
jge
out
or
mov
add
popa
test
cmc
(bad)
dec
xchg
not
sbb
ja
sub
fiadd
jne
retf
push
jg
cmp
jmp
jge
scas
aad
lahf
xchg
jae
jp
mov
movs
pop
je
movs
jle
mov
mov
clc
mov
mov
or
jns
add
in
out
retf
scas
es
jnp
mov
(bad)
push
xchg
sbb
xor
mov
ds
test
outs
cmps
xchg
retf
dec
or
pop
hlt
iret
idiv
pusha
fwait
pop
cmp
jle
mov
mov
xchg
push
cmp
inc
xchg
mov
xchg
jp
dec
mov
push
dec
mov
push
xor
fistp
pop
fwait
lahf
mov
sbb
mov
jo
out
aaa
mov
lock
scas
jnp
push
pop
mov
inc
mov
arpl
mov
cmps
add
mov
or
stos
jae
retf
adc
(bad)
(bad)
mov
arpl
push
and
stos
mov
mov
mov
push
sub
(bad)
out
in
xchg
cli
imul
add
adc
out
jle
std
shl
daa
lahf
div
push
lods
sti
push
or
pop
cdq
or
ret
adc
xor
push
stos
mov
cmp
cmps
je
xchg
shl
pop
fcmovne
xchg
and
fstp
add
outs
xor
sub
imul
scas
js
hlt
sbb
call
movs
sbb
xchg
sbb
xor
sub
cmp
ret
rcl
add
dec
xor
ret
out
and
fcmovb
out
sti
cmp
jno
dec
xor
mov
jmp
cmc
xchg
dec
vpsubb
mov
sbb
sub
and
ret
sbb
xchg
jp
pop
in
lahf
(bad)
dec
cmp
cmp
xchg
sub
or
push
jo
rcl
mov
test
dec
xor
mov
xchg
jmp
xor
or
sub
inc
or
mov
shr
fld
inc
ror
push
jecxz
mov
fnstcw
loope
cdq
movs
lock
pop
es
aam
retf
push
mov
dec
sub
add
call
sbb
sub
cdq
mov
sub
in
jp
out
retf
push
sbb
jmp
dec
and
std
inc
sbb
lea
add
cmp
ds
fidivr
add
jge
shl
fsubr
xor
(bad)
sub
pop
sbb
int
loop
data16
cmp
or
js
fsubp
gs
adc
and
add
pusha
ins
rol
push
push
rcl
ja
inc
jne
out
mov
mov
(bad)
fnsave
aam
lea
fwait
sbb
xchg
pop
add
dec
enter
push
in
in
dec
push
xchg
xor
and
sbb
dec
mov
xchg
jle
xlat
ds
call
mov
fist
fstp
cs
add
sti
dec
xor
loopne
mov
call
sbb
inc
push
imul
shl
popa
in
inc
repnz
aas
sub
out
ss
je
mov
xor
push
push
jecxz
mov
outs
aas
sbb
and
add
pop
inc
daa
mov
jmp
or
mov
dec
rcr
and
jnp
loope
push
shl
push
jle
pop
jmp
sbb
stos
mov
out
mov
dec
cmps
mov
jnp
jg
leave
(bad)
jae
sbb
dec
das
mov
cli
xor
ftst
add
ret
leave
mov
mov
push
(bad)
mov
adc
jbe
retf
cmps
mov
xlat
in
in
inc
xchg
in
inc
(bad)
sbb
lock
ja
xlat
or
adc
call
mov
mov
imul
pop
repz
out
pushw
inc
stos
adc
inc
hlt
retf
add
xchg
sub
fadd
nop
xor
das
jle
pusha
dec
mov
aad
inc
pop
scas
movs
or
fwait
mov
shr
adc
lahf
jb
add
mov
xlat
mov
xchg
bswap
cmps
sbb
in
and
fmul
stc
stos
mov
(bad)
fmul
add
xlat
dec
jmp
xchg
(bad)
sbb
mov
or
iret
ja
lds
aad
jl
inc
cmc
fld
mov
push
mov
test
sbb
dec
sbb
mov
jg
push
jne
inc
ss
adc
jl
movs
inc
aas
int
nop
fimul
rcl
mov
das
adc
cld
pop
push
sub
mov
dec
sbb
xor
xchg
loop
ds
sub
mov
pop
push
loopne
mov
(bad)
imul
in
jnp
add
xchg
inc
fs
icebp
stc
sub
call
cmp
xchg
push
mov
or
or
push
jmp
pop
mov
xor
aas
lods
and
xchg
ja
lds
jle
gs
xchg
int
pushf
std
cwde
and
jbe
push
and
sbb
popf
les
mov
pusha
loop
shr
fisub
in
not
sahf
pop
mov
dec
push
cdq
pop
and
call
inc
daa
jl
cmp
icebp
repz
gs
adc
lock
adc
loopne
or
fldenv
pop
stos
jno
ins
inc
icebp
cmp
xor
pop
pop
stc
lods
fwait
adc
adc
sub
std
xchg
sbb
sbb
cmps
clc
pop
aas
movs
prefetchwt1
addr16
sbb
pop
mov
jmp
movs
repz
sub
test
mov
in
popa
test
jp
adc
jae
push
jle
xor
adc
mov
lahf
in
call
xchg
or
push
adc
jmp
mov
mov
push
mov
outs
es
das
or
mov
nop
xchg
pop
sub
int
in
jmp
movs
jge
or
mov
jnp
push
sbb
fwait
add
in
loopne
jns
or
mov
xor
adc
xchg
jp
mov
out
add
shr
cmp
scas
adc
pop
pop
xlat
fs
or
sbb
aas
dec
retf
mov
call
pusha
xor
jno
ja
imul
mov
mov
jp
in
jge
pop
fwait
and
ficomp
out
mov
jb
mov
cmc
mov
aad
test
pop
dec
retf
mov
mov
xor
and
imul
out
imul
inc
test
pop
cli
xor
mov
inc
jno
arpl
mov
push
mov
out
data16
xchg
lods
push
lahf
xor
and
div
fmul
fcomp
push
test
pop
shl
add
cmp
mov
sar
adc
jns
into
jnp
add
fs
or
ds
pop
lods
push
inc
lds
das
dec
xchg
mov
push
stc
inc
lss
outs
cmp
sar
movs
adc
pusha
inc
(bad)
cmp
adc
add
xor
dec
fwait
push
es
cmp
hlt
mov
jl
in
xor
in
cmp
test
or
jne
retf
ret
shl
sbb
es
jne
(bad)
dec
add
pop
and
and
icebp
(bad)
aas
int3
jl
jb
loop
sub
and
inc
cmp
mul
(bad)
fdiv
xchg
inc
shl
(bad)
dec
pusha
mov
mov
inc
rcl
ds
inc
jne
scas
jmp
aam
sub
push
dec
jns
popa
add
push
scas
sub
std
fistp
cmp
popa
push
mov
sahf
pop
loopne
in
mov
mov
in
adc
jb
nop
(bad)
push
lods
xchg
lahf
push
dec
cld
cmp
pop
aaa
sub
add
pop
xor
lods
push
inc
retf
cs
cmp
or
fisub
push
bound
add
es
pop
mov
in
lea
xor
outs
push
and
jge
bound
(bad)
scas
add
nop
in
sbb
push
sar
sbb
pcmpgtb
sbb
jle
mov
pop
pop
imul
push
dec
shl
pop
(bad)
jecxz
mov
std
movs
out
clc
aad
stos
sbb
add
mov
or
test
enter
fnstsw
ins
mov
sbb
imul
pop
clc
clc
mov
test
cmp
push
pop
dec
adc
xor
sbb
xor
push
push
xor
jecxz
mul
jmp
fwait
xchg
sub
jl
aas
cmps
vphaddubw
jae
inc
loope
jne
repz
cmp
cmp
sub
sahf
(bad)
cmp
pop
fs
(bad)
fs
adc
inc
pop
jnp
scas
sbb
lods
dec
inc
cmp
movs
aam
sub
dec
sub
mov
mov
fcomp
lea
daa
test
push
out
rol
add
imul
aas
and
mov
mov
enter
fwait
outs
sbb
mov
(bad)
les
imul
sub
adc
retf
ds
inc
out
pop
(bad)
or
stc
fldcw
push
cld
dec
js
push
xchg
(bad)
sub
pushf
mov
fild
movs
lahf
jnp
nop
xor
cmc
dec
out
addr16
enter
mov
shl
ins
and
shl
hlt
inc
aas
pop
jno
inc
jg
fs
add
dec
push
in
in
call
add
shl
lea
cmp
sub
mov
push
(bad)
mov
adc
(bad)
jne
lods
add
in
loope
ins
enter
jae
fld
test
xchg
unpcklps
shl
and
push
mov
clc
xor
sbb
mov
mov
scas
add
or
call
push
pushf
cwde
shr
sub
cli
fldcw
mov
and
hlt
repnz
imul
jnp
mov
aaa
jmp
test
daa
xor
lahf
les
lods
gs
sti
cmps
icebp
lods
sbb
xchg
std
and
pop
xor
stos
xchg
xor
mov
bound
sub
sti
xchg
sub
and
xor
pushf
sub
mov
inc
mov
dec
mov
out
ret
inc
push
popf
cmp
and
mov
push
jp
inc
hlt
or
and
jns
lock
sbb
xlat
mov
mov
ins
(bad)
mov
xchg
cmps
hlt
lahf
dec
adc
xchg
jg
xchg
int3
outs
sub
push
push
test
imul
test
es
mov
out
out
cmp
adc
push
ret
lahf
iret
add
xor
xchg
stc
pop
addr16
cld
adc
fnstcw
loope
mov
(bad)
test
out
and
pop
scas
pop
pop
sbb
mul
addr16
cld
push
mov
out
fdiv
iret
adc
jb
cmp
daa
push
push
sbb
add
xor
shl
xlat
jecxz
data16
fdivr
clc
pop
add
dec
sub
fadd
sti
inc
cmp
jae
dec
xchg
pop
add
push
cmps
jb
adc
popa
dec
lea
mov
push
pop
xchg
add
adc
int3
or
or
mov
loopne
pop
shl
push
pop
mov
jne
enter
sub
iret
xchg
std
aam
pushf
add
push
pop
loop
lahf
sub
push
sti
push
jnp
adc
sahf
sbb
pusha
xor
ins
icebp
fwait
(bad)
sub
shr
sub
push
std
fsubr
pushf
dec
sahf
sbb
pusha
mov
mov
add
xchg
add
out
jge
inc
pop
inc
or
cmp
mov
test
loope
dec
enter
test
test
je
dec
or
fisubr
or
shr
push
push
push
addr16
or
xchg
(bad)
outs
and
lods
or
lahf
aaa
pop
inc
test
inc
adc
out
pop
call
xchg
repz
lods
push
daa
in
rcr
or
cmp
call
cld
movs
aad
in
stos
mov
push
inc
adc
jne
xchg
daa
xchg
xor
xor
test
pop
loope
in
add
cmp
ja
sti
int3
sub
cmp
dec
xor
dec
out
lds
movs
cmp
in
test
jmp
outs
popa
inc
mov
adc
mov
popa
dec
push
(bad)
or
out
bound
pop
sahf
push
mov
loopne
lea
push
(bad)
sti
jp
push
call
test
das
iret
stc
pusha
aas
xchg
inc
repz
movs
sbb
mov
int
sahf
test
scas
push
lahf
mov
pop
cmp
fsubr
mov
sub
mov
dec
aad
xor
and
rol
aaa
and
(bad)
ins
ds
test
imul
sbb
lds
sub
sti
pop
adc
pop
mov
and
inc
jns
xor
(bad)
out
inc
sbb
dec
cmp
data16
aas
cmp
xchg
jp
jmp
add
adc
or
cmp
jns
add
inc
mov
push
stos
pop
imul
sub
dec
int3
test
jg
mul
test
xchg
repz
test
mov
push
pop
dec
cmc
xor
aam
test
aad
xchg
sbb
lock
xor
lahf
cwde
jnp
daa
lds
jge
mov
aas
(bad)
cmp
ins
daa
mov
xor
jecxz
pop
pusha
push
dec
es
push
lods
sub
shl
push
cmp
xor
call
xchg
and
sbb
dec
mov
inc
dec
(bad)
aaa
inc
das
adc
mov
cwde
dec
xlat
enter
ja
pop
data16
stos
mov
sbb
lods
mov
imul
fs
adc
pop
dec
jns
ret
pushf
not
mov
push
inc
test
xchg
test
fbld
cmp
cmps
das
inc
mov
das
fwait
pop
test
lahf
mov
or
push
arpl
leave
or
mov
sbb
add
gs
fstp
imul
stos
adc
cmp
in
xlat
dec
je
cmp
sbb
sbb
das
or
stc
mov
mov
xor
jecxz
and
jg
jmp
jno
pop
sbb
push
imul
sbb
xchg
pop
jb
cmc
cmps
pop
mov
clc
popa
xor
std
sbb
push
pusha
push
sub
enter
sub
mov
loop
out
arpl
mov
pop
jne
jp
sahf
sahf
test
imul
pop
jmp
(bad)
aas
inc
mov
mov
jb
jge
jecxz
repz
gs
sub
mov
into
fidivr
add
mov
sub
test
jecxz
sar
sub
scas
add
jno
push
leave
jae
stos
in
xchg
lods
fidivr
jle
out
jmp
add
rcr
cmp
add
mov
cmp
sub
pop
inc
inc
cmp
nop
das
dec
retf
jmp
push
and
fstp
push
sub
add
jbe
enter
mov
push
hlt
into
loope
mov
cwde
jl
lods
je
pop
adc
sub
jecxz
mul
imul
xchg
jecxz
mov
pushf
stos
mov
fcomp
add
mov
sar
dec
scas
inc
jo
test
and
lods
fmul
and
cmc
cdq
inc
sbb
ins
push
mov
push
inc
jp
test
cmp
push
stos
jno
push
mov
test
es
enter
sbb
or
xchg
dec
jnp
enter
dec
fs
fsubr
mov
repz
ret
dec
mov
or
inc
mov
xchg
add
lods
fcomp
jmp
ins
dec
and
clc
hlt
sbb
adc
(bad)
shl
cmp
mov
push
push
pop
pop
lahf
push
xor
sahf
out
js
push
out
sub
inc
add
retf
adc
out
inc
shl
cmp
test
pop
xchg
jecxz
xlat
adc
dec
jbe
push
sar
jecxz
shr
je
sbb
(bad)
jbe
inc
sub
xor
sbb
cmc
out
fnsave
jle
in
inc
dec
jb
out
sbb
pop
xchg
mov
push
gs
and
push
add
lods
aad
push
jns
xor
stos
push
mov
into
cmps
je
fmul
sbb
lahf
int3
jge
sub
iret
out
mov
pop
rol
shl
mov
enter
inc
add
cmps
xchg
fwait
cmp
push
inc
pusha
xor
mov
ret
stos
stos
xlat
repnz
xchg
xor
in
or
sub
out
or
and
push
mov
cdq
xlat
sbb
shr
pop
xor
mov
jbe
inc
mov
popa
push
adc
jge
stos
add
clc
adc
inc
outs
push
(bad)
sub
std
xchg
vsqrtss
mov
mov
adc
adc
pushf
aam
(bad)
(bad)
inc
aas
sbb
push
fcmovnu
sub
jbe
rol
mov
sub
mov
add
loopne
pop
adc
test
jns
mov
das
aad
cmps
dec
mov
sub
pop
jae
stos
fidivr
fwait
or
inc
jns
sahf
mov
sbb
sbb
inc
frstor
jb
imul
out
or
push
sbb
loop
test
shl
retf
adc
lods
aaa
lea
enter
cmp
mov
mov
retf
push
ret
push
push
sub
jmp
mov
rcl
jns
jl
stos
movs
call
lahf
leave
adc
mov
pop
mov
or
cmp
xchg
jl
mov
add
jmp
int3
lock
pop
das
and
ds
ret
sbb
xchg
pop
mov
pop
and
mov
dec
ret
or
sbb
jmp
dec
dec
fwait
push
mov
sbb
push
mul
push
or
loopne
bound
retf
pop
pusha
jae
hlt
(bad)
leave
enter
stos
outs
aad
lds
push
test
xchg
mov
repnz
pop
leave
ror
ins
dec
mov
stc
sbb
mov
ins
pop
inc
fstp
push
scas
or
mov
adc
and
(bad)
push
out
dec
jle
sub
mov
cdq
pop
daa
pop
or
sbb
lods
repz
stos
jb
idiv
xchg
sub
xchg
shl
dec
retf
dec
inc
pop
mul
xchg
jae
cmp
mov
les
fstp
jle
mov
(bad)
push
call
mov
movs
jo
push
nop
pop
or
mov
push
pop
add
ss
outs
(bad)
cmps
call
adc
lock
xor
push
adc
pusha
lds
push
xor
push
sub
inc
cmc
sbb
cwde
push
gs
sbb
and
mov
xchg
push
std
and
icebp
jmp
popa
inc
scas
jno
hlt
mov
inc
lods
in
push
(bad)
and
in
pusha
popa
stos
lock
jbe
cmp
scas
add
in
nop
sub
cdq
aaa
mov
pop
cmp
cmc
and
xchg
push
pop
call
add
aas
mov
inc
adc
mov
add
adc
mov
lea
in
mov
mov
test
les
data16
pop
scas
fnstcw
(bad)
repnz
dec
in
adc
dec
mov
sub
ss
lds
and
xchg
cmp
(bad)
test
push
jmp
cmp
jmp
or
out
icebp
adc
mov
push
jp
sar
sbb
sub
or
hlt
fwait
rcr
aaa
push
pop
loopne
into
aaa
fcomp
sar
loopne
retf
fld
push
adc
or
mov
cdq
(bad)
mov
cmc
test
(bad)
mov
scas
je
and
sub
std
jnp
jp
pop
push
pop
in
ins
cmp
and
mov
ret
pop
adc
mov
jo
xchg
fadd
jmp
and
daa
repnz
(bad)
and
lods
and
cwde
leave
xor
jl
jnp
mov
outs
fldln2
out
loop
mov
pop
outs
stc
std
(bad)
jg
jmp
ret
repz
xchg
ss
in
jecxz
and
or
mov
jge
xchg
dec
inc
fdivrp
enter
cmp
mov
or
enter
daa
fdivr
int3
add
fmul
xor
mov
dec
sti
xor
xor
cmp
sbb
popf
out
xchg
sbb
mov
cmps
pop
cs
gs
sub
int
dec
push
jp
mov
dec
push
push
inc
adc
add
arpl
dec
je
(bad)
cmc
(bad)
sbb
push
push
push
mov
pop
dec
iret
add
addr16
push
sbb
not
outs
inc
xchg
imul
mov
push
dec
push
pushf
jo
lods
push
pusha
hlt
add
adc
dec
sub
pop
pop
push
pusha
lods
cmp
push
jecxz
mov
loope
(bad)
fst
std
mov
sub
jmp
mov
xor
mov
test
(bad)
adc
jns
sbb
dec
(bad)
jnp
out
push
inc
and
jmp
mov
fwait
mul
out
jno
jmp
retf
mov
pcmpgtw
inc
fs
mov
fidivr
int
mov
dec
sbb
adc
scas
push
in
fist
in
cmps
jle
jnp
or
in
(bad)
sub
or
in
or
fucomi
lods
sbb
sub
ret
aam
(bad)
sub
mov
call
fsub
push
mov
or
fist
test
std
clc
and
inc
leave
jmp
fwait
lds
fld
int
repz
loope
or
(bad)
dec
or
mov
inc
or
xchg
dec
cdq
inc
xor
test
inc
les
jns
imul
rcr
mov
cwde
pop
lock
cmp
stc
cs
add
mov
(bad)
cmp
adc
call
cmps
push
das
rcr
adc
popf
inc
mul
mov
lods
outs
add
cmp
mov
or
and
ja
jnp
nop
repnz
xlat
fbstp
retf
xchg
ja
test
dec
into
lods
xchg
mov
(bad)
retf
dec
ins
pop
test
sti
push
and
and
mov
fst
inc
test
and
inc
pmulhuw
mov
fstp
cmp
adc
jnp
pop
mov
test
dec
and
int3
or
mov
fbstp
rcr
pushf
dec
xchg
inc
pop
inc
test
mov
(bad)
nop
das
push
add
cmp
mov
push
addps
test
fsubp
fs
and
iret
add
movs
push
xor
cwde
and
sar
add
retf
mov
jae
pop
aaa
cmp
sub
test
enter
fmul
ret
icebp
push
jns
shl
js
adc
ins
repnz
inc
push
stc
lock
cli
jl
test
aad
ss
jne
pop
sub
dec
lods
je
arpl
inc
add
shl
xor
mov
pop
mov
xor
mov
rcl
xchg
jbe
int
test
xor
cmp
add
xchg
cdq
add
adc
int3
das
inc
pop
fadd
jnp
jg
inc
scas
adc
imul
std
pop
test
imul
mov
lods
push
jg
std
fmul
fwait
mov
add
das
and
pop
add
out
dec
pusha
and
pop
test
ficomp
push
stos
and
cmc
pop
iret
nop
fild
shld
aaa
inc
sbb
hlt
(bad)
mov
pop
mov
push
jecxz
mov
jmp
and
jno
jbe
lahf
bound
xchg
aad
shl
shr
dec
xor
xchg
or
xchg
pop
pushf
lods
xlat
xor
xor
mov
and
mov
jo
pop
push
dec
dec
cmps
mov
pop
les
fwait
imul
pushf
pop
cmp
add
idiv
jbe
jl
jle
cmp
shr
mov
add
aaa
dec
jae
lds
bound
loope
cli
popf
xchg
push
jp
xchg
push
aaa
lock
pop
inc
jo
mov
dec
or
mov
sub
mov
pop
div
enter
je
inc
inc
pop
pop
mov
jp
test
sub
jecxz
icebp
push
mov
pop
jmp
xchg
(bad)
jnp
push
sub
inc
xchg
loope
cmps
add
shl
push
cs
shr
xchg
nop
mov
out
loop
out
out
pushw
(bad)
shl
rol
or
les
dec
pop
std
xchg
pop
lods
pop
mov
adc
mov
sbb
lahf
xchg
jmp
inc
scas
aaa
int
mov
push
sbb
sbb
lods
(bad)
or
mov
inc
(bad)
loopne
xchg
xor
test
es
pop
sahf
inc
bound
cmc
cmp
pop
jns
bound
or
or
jno
adc
out
repnz
pop
cwde
push
xor
dec
pushf
push
sub
or
cs
test
inc
sbb
int
js
sbb
and
test
cmc
dec
(bad)
(bad)
mov
into
xor
pop
jl
dec
xor
and
test
xor
sar
jmp
movs
fstp
mov
shr
inc
sub
fstp
sti
dec
aam
mov
stc
xor
lock
push
test
call
sbb
lds
jbe
fs
mov
xchg
mov
or
fstp
and
out
jne
push
out
inc
shl
or
ins
pop
xchg
dec
mov
ror
mov
xchg
pop
not
lea
sbb
in
sub
in
out
xchg
out
or
or
mov
stos
sub
sbb
push
add
add
mov
jmp
js
push
lods
and
sbb
(bad)
jbe
lods
or
mov
repnz
cs
cmp
and
sub
pop
clc
add
nop
mov
in
push
into
mov
sub
mov
xchg
mov
rcl
cmp
scas
ds
mov
in
call
cmp
adc
jb
mov
je
rol
pop
cli
mov
xchg
rcl
loop
imul
scas
or
dec
(bad)
pop
sti
inc
sbb
sub
(bad)
cmps
mov
xor
pop
and
jge
mov
sub
aas
mov
(bad)
adc
rcl
(bad)
popa
lea
ss
push
rcl
mov
add
pcmpgtw
js
cmp
arpl
sub
clc
idiv
jl
aad
loop
push
sbb
cmp
and
(bad)
(bad)
popa
in
jne
cmp
jno
xor
dec
pop
mov
lds
add
mov
xchg
int3
arpl
sub
xchg
add
sbb
jnp
shl
jae
sbb
pop
and
ds
jp
imul
sub
xchg
mov
dec
scas
or
enter
nop
mov
pushf
add
test
(bad)
fist
cmp
ds
or
js
pop
dec
je
popf
mov
xchg
jae
inc
mov
mov
jae
adc
shl
xor
loope
add
mov
idiv
mov
jns
inc
in
mov
cli
or
fldcw
pop
and
mov
cld
cmp
arpl
mov
jg
test
out
mov
clc
cmc
fcmovb
in
cmp
(bad)
std
les
pushf
cmps
mov
xor
(bad)
fistp
mov
jg
cwde
push
mul
mov
dec
jle
ins
add
cli
icebp
adc
sub
mov
cmp
out
cmp
stos
push
leave
adc
ins
cld
test
pushf
outs
loopne
sub
call
scas
push
jae
push
int3
sub
std
js
add
loope
push
add
aad
mov
cs
jl
or
jle
dec
xor
hlt
sub
jbe
(bad)
nop
sbb
mov
jnp
mov
ficomp
mov
mov
xor
data16
js
mov
sbb
sahf
stc
push
mov
xlat
or
repnz
push
inc
jp
sbb
out
cmp
mov
rcr
in
shl
jmp
bound
shl
nop
mov
mov
jne
arpl
cli
inc
jmp
add
pop
(bad)
stos
mov
push
movs
cmp
or
shl
mov
js
sub
out
mov
inc
pop
sahf
cmp
adc
ret
mov
inc
jle
push
sub
out
dec
pusha
mov
inc
lds
retf
fwait
outs
inc
ins
pop
fbld
fwait
aad
mov
xchg
jnp
mov
sub
enter
lds
sub
and
cs
inc
aam
ret
out
bound
jmp
jo
lock
and
jecxz
(bad)
call
or
rol
inc
mov
stos
and
not
inc
mov
std
sub
imul
dec
sbb
sti
pop
stos
jge
aaa
sar
test
shl
jnp
cmp
push
call
mov
sbb
dec
ds
mov
push
loope
xor
idiv
arpl
jmp
sbb
lea
jns
jge
fld
mov
imul
cwde
cs
jge
or
jp
pusha
or
aam
xor
jbe
lock
imul
inc
jb
addr16
addr16
pop
cmp
sar
sahf
aaa
int3
cmp
aas
in
retf
das
retf
add
cmp
lods
cmp
dec
dec
pop
in
jecxz
jg
mov
lds
mov
dec
movs
sbb
inc
mov
es
(bad)
loope
sbb
mov
inc
ds
mov
pop
push
sub
mov
out
mov
call
adc
lahf
ret
or
(bad)
mov
dec
or
sbb
xchg
stos
mov
clc
imul
jns
inc
in
xchg
xchg
imul
daa
sti
add
aas
mov
ror
clc
mov
nop
add
push
out
iret
mov
dec
lods
in
ja
cld
cmps
mov
in
and
test
data16
std
(bad)
lea
scas
(bad)
hlt
aas
lea
push
mov
push
or
xchg
dec
inc
stos
fdiv
inc
psubusw
inc
mov
fucomp
ja
mov
jns
gs
xchg
mov
jae
retf
movs
adc
outs
(bad)
jg
pop
xor
push
outs
mov
shr
and
mov
(bad)
adc
mov
iret
stos
icebp
hlt
rcr
loop
push
pop
aad
loope
icebp
nop
jae
cld
pushf
lods
inc
xchg
jg
sbb
jne
mov
ins
add
iret
adc
(bad)
sbb
pop
xchg
xor
leave
punpckhbw
mov
mov
adc
imul
iret
addr16
inc
lods
out
pusha
aaa
dec
int
cmp
inc
mov
clc
(bad)
sbb
ret
lahf
shl
outs
lds
hlt
jns
push
(bad)
xchg
xor
adc
mov
xor
and
stos
test
dec
pusha
jne
adc
scas
push
jb
ss
int3
adc
mov
call
inc
and
ret
inc
mov
mov
imul
bound
or
je
push
pop
or
jmp
push
or
call
ror
or
movs
gs
mov
scas
push
mov
(bad)
ret
xchg
push
aas
(bad)
and
adc
pop
pop
retf
mov
jbe
pop
hlt
jb
or
cmp
mov
push
push
enter
fwait
push
push
jne
rcl
outs
jo
hlt
pop
pop
mov
mov
fs
(bad)
popf
fidiv
inc
add
ins
ins
mov
fbld
outs
dec
jne
xchg
fmul
ss
cmp
shr
mov
jbe
push
repnz
gs
pop
adc
mov
sub
shr
and
inc
int
and
pop
push
fadd
mov
jbe
inc
call
dec
pop
inc
fstp
jmp
in
pop
lock
xor
dec
or
imul
jne
stos
sbb
xchg
int
adc
call
add
push
enter
xor
jb
pop
mov
and
adc
dec
cwde
push
mov
popf
sbb
push
in
cmp
dec
stos
and
scas
inc
clc
test
cmp
loop
mov
xor
mov
jmp
iret
(bad)
push
adc
inc
hlt
mov
mov
sbb
imul
cmc
xor
lods
sti
(bad)
popf
lds
icebp
(bad)
sub
mov
pop
xor
call
hlt
cmp
dec
popa
push
push
aas
out
test
int3
mov
test
dec
into
pop
dec
inc
bound
jmp
movs
fsubrp
enter
retf
leave
fmul
aad
(bad)
cmovne
fisttp
pop
or
mov
sub
mov
ja
sbb
or
rcl
xor
stos
ret
test
sbb
sbb
jmp
inc
sbb
fmul
jle
xlat
movs
jo
jne
cmps
ret
(bad)
inc
int
and
movs
inc
push
ret
jge
adc
mov
pop
pop
out
push
scas
mov
(bad)
mov
or
hlt
jg
(bad)
les
adc
and
sub
xor
lods
in
(bad)
imul
cwde
addr16
jl
mov
sti
adc
cmp
sbb
pop
or
faddp
inc
push
ds
dec
inc
in
movs
mov
push
sbb
add
jecxz
les
loope
(bad)
lods
(bad)
shr
sar
popf
push
dec
pusha
ins
rcr
aaa
sub
lea
hlt
sub
pop
xchg
fild
dec
xlat
and
mov
idiv
aaa
xchg
mov
nop
pop
in
mov
xchg
sub
adc
jbe
fidivr
psrad
push
or
faddp
push
bound
pop
movs
xchg
std
loope
sar
adc
xchg
in
leave
push
sti
adc
mov
adc
jmp
mov
in
jmp
fs
pop
sbb
xor
mov
mov
fs
dec
mov
jo
dec
xchg
cli
pop
inc
pop
push
test
mov
stc
cdq
adc
stc
mov
jmp
(bad)
sub
cli
fs
mov
push
fwait
popf
(bad)
stos
sar
into
mov
sub
push
inc
loop
pop
push
test
cmps
mov
jnp
and
push
pushf
push
cwde
std
or
repnz
mov
enter
ror
lods
popf
inc
push
fwait
cmc
retf
jb
imul
rcr
ins
scas
das
inc
xchg
mov
loope
add
jo
movs
aas
jl
push
push
ret
pusha
lods
dec
stos
adc
pop
sbb
nop
inc
aas
or
add
add
mul
cmp
pusha
ss
popf
fucom
push
imul
add
adc
mov
jle
sub
sub
pop
mov
and
push
hlt
and
mov
add
cwde
out
jle
dec
ret
sub
stos
lea
or
dec
sahf
fild
mov
ins
dec
mov
adc
cmp
(bad)
pop
cmp
scas
test
xor
jbe
(bad)
ins
or
pop
inc
jbe
push
push
jp
cmp
inc
mov
mov
jle
adc
cld
pop
enter
mov
mov
lahf
enter
sbb
pop
dec
(bad)
in
retf
fs
jne
retf
out
lock
add
adc
mov
stc
xor
pop
fwait
sub
adc
dec
shr
rcr
dec
add
popf
test
xchg
or
xor
mov
push
lahf
add
jcxz
shl
pop
into
pop
add
jb
cmp
int
fadd
gs
daa
(bad)
sbb
pop
mov
mov
fmul
test
lea
mov
not
push
push
and
sbb
outs
jmp
out
pop
or
sub
and
fld
mov
imul
(bad)
into
inc
stos
jmp
push
stos
mov
xor
add
xchg
je
cmp
sbb
scas
repnz
dec
jmp
popa
sub
mov
bound
ret
cmp
cmps
jl
clc
mov
adc
in
pop
fs
fcmovu
jmp
cmps
or
into
scas
or
lea
std
int
xchg
les
imul
add
int3
sub
mov
pop
cld
cmp
xchg
repz
inc
push
inc
mov
and
fs
fiadd
xchg
pop
shl
mov
pop
jb
sub
ins
xchg
cwde
pop
adc
iret
cmp
sub
scas
clc
mov
jno
popa
adc
push
aad
sbb
cmc
dec
shl
std
ds
dec
aaa
jp
mov
jne
dec
inc
xor
and
push
or
jae
jmp
mov
mov
mov
push
xor
cmps
pushf
sub
push
mov
movs
mov
jmp
into
leave
mov
test
mov
mov
cmp
cmps
loopne
jl
cmp
pop
call
(bad)
repnz
imul
add
scas
ret
and
out
pusha
inc
je
add
jnp
mov
cmps
jmp
mov
inc
add
jg
test
inc
cmps
sub
pop
ins
xchg
mov
dec
(bad)
mov
inc
add
mov
les
in
arpl
mov
hlt
arpl
icebp
sub
aas
cmp
pop
inc
sub
fwait
xor
out
pop
push
sar
cmpxchg
outs
inc
or
push
bound
add
mov
cwde
test
inc
jae
pop
dec
jne
xchg
je
repnz
jb
and
jo
repnz
fisubr
cmps
mov
(bad)
pushf
mov
mov
js
fild
aas
call
mov
out
jb
add
test
data16
leave
int
jl
out
cld
and
add
popa
lods
push
(bad)
pop
scas
sub
retf
cmp
not
or
mov
ja
mov
mov
pusha
mov
das
adc
push
shl
mov
add
adc
outs
adc
ret
cmc
xchg
stos
dec
imul
mov
mov
sbb
out
lods
mov
jne
aaa
inc
jns
adc
jecxz
in
sbb
or
test
or
mov
mov
xlat
jo
je
and
daa
loopne
dec
push
ffree
push
les
push
pop
cmps
push
fimul
jg
jecxz
popf
jnp
sub
and
or
div
idiv
jl
pop
cmps
scas
and
and
or
popa
mov
repz
xchg
repnz
dec
pop
add
dec
fcomp
test
mov
xchg
inc
mov
sbb
xor
lds
neg
push
jnp
push
arpl
sbb
bound
je
dec
shr
mov
loop
aaa
jecxz
sbb
repz
inc
shr
clc
cwde
je
stos
loopne
loope
push
add
dec
push
test
sahf
mov
inc
test
or
sub
mov
jnp
cmps
cwde
adc
test
sub
stc
pop
cmp
shl
dec
cmp
sub
out
sbb
js
push
je
cmp
je
jnp
jp
mov
cs
mov
mov
mov
mov
xchg
(bad)
adc
mov
pop
arpl
ds
xchg
inc
xor
adc
das
push
xor
test
clc
push
mov
imul
cmps
scas
mov
inc
add
pop
pop
mov
push
mov
push
or
cmp
xor
and
add
push
cmp
xor
pop
push
and
mov
loop
dec
loop
sbb
xchg
dec
shl
sbb
(bad)
rcl
mov
and
xor
retf
mov
dec
fwait
or
cmc
js
aam
xchg
push
push
popa
fstp
lock
xchg
out
hlt
jo
jmp
aaa
in
imul
mov
clc
push
fist
add
ffree
and
cmp
(bad)
gs
test
ficomp
sar
rcl
mov
outs
pop
sub
cmps
dec
mov
pusha
cmp
jo
out
ins
mov
inc
inc
pop
xor
aaa
ficomp
inc
(bad)
pop
pop
push
sti
mov
js
sbb
std
(bad)
mov
in
dec
pop
shl
imul
sti
sbb
cmps
out
dec
jl
xor
(bad)
nop
mov
imul
or
in
sub
xlat
mul
dec
fisubr
xchg
push
sti
adc
fadd
iret
push
frstor
inc
(bad)
pushf
ret
jl
pop
(bad)
icebp
out
and
mov
push
inc
mov
(bad)
cdq
add
std
inc
gs
jp
pop
xor
mov
push
cli
add
pop
pop
inc
int3
fwait
call
ret
push
rcl
xchg
mov
repz
xchg
cld
int3
push
xor
out
pop
and
push
xchg
les
xor
outs
mov
fiadd
rcl
js
je
sti
sbb
pop
push
and
stos
add
dec
add
xchg
push
dec
into
xor
call
or
mov
jbe
shl
test
jle
rcl
inc
icebp
test
inc
std
sbb
div
out
adc
add
shl
push
gs
cld
mov
aaa
sbb
fs
fmul
in
jae
fisubr
jo
push
mov
xor
into
ja
and
jp
imul
dec
pop
push
out
push
jecxz
add
dec
mov
xor
push
xor
ins
dec
scas
xchg
lock
sbb
cmps
mov
retf
xor
sbb
ins
mov
in
xor
int3
popf
data16
inc
adc
xor
lock
xchg
mov
sahf
or
popf
sahf
xor
pop
jecxz
dec
sar
add
les
ror
sar
xor
sbb
cmp
add
call
or
inc
pop
jmp
cmp
xchg
jb
cmps
pop
cmp
neg
mov
nop
mov
push
xchg
jnp
mov
call
sti
adc
fs
jno
movs
pop
jnp
in
gs
mov
inc
xchg
push
xchg
ins
jns
sub
hlt
pop
mov
in
sbb
or
sbb
and
shl
ss
mov
je
pop
movs
push
mov
clc
cld
fmul
pop
cmps
aaa
stos
and
enter
outs
cmp
mov
aad
push
dec
pop
xchg
adc
rcl
jmp
xor
sub
jmp
push
and
movs
mov
inc
jne
test
hlt
sbb
repz
aam
sbb
std
mov
rcl
xchg
cmps
fild
dec
jge
inc
les
je
stc
sub
xor
sbb
pop
retf
outs
sbb
in
rcr
ret
dec
jl
std
adc
ret
movs
jg
out
cld
ins
mov
inc
in
jns
cs
mov
je
and
daa
call
scas
sub
loop
cli
into
cmp
jg
loopne
ss
test
push
xchg
mov
je
loopne
sbb
(bad)
rcr
jecxz
jmp
mov
pusha
loopne
(bad)
in
cli
dec
pop
fiadd
xchg
pop
dec
xor
in
cmp
add
pusha
into
enter
pop
pop
movs
xor
xor
stos
xchg
pop
je
inc
add
(bad)
pop
outs
push
dec
pusha
test
shr
imul
out
dec
jp
cmp
mov
push
shl
inc
scas
jle
and
fnstcw
jae
xor
sbb
sub
inc
dec
xchg
jns
mov
add
loopne
fdiv
and
std
or
stos
add
pop
adc
ins
push
cmps
dec
xor
repz
xor
mov
mov
jnp
mov
cmp
mul
movs
adc
cmps
fbld
push
xlat
ja
mov
movs
mov
xor
mov
out
cwde
inc
addr16
scas
add
int
adc
add
inc
push
dec
ins
(bad)
cmp
out
stos
outs
mov
je
lock
ror
aas
adc
cmp
push
(bad)
popf
dec
jl
mov
sub
std
ja
cdq
push
(bad)
mov
add
add
fisubr
add
jns
mov
mov
jae
loope
(bad)
mov
fistp
(bad)
lds
cmp
and
in
sti
mov
(bad)
dec
cmps
jge
sub
mov
loope
xchg
nop
stos
not
dec
push
sbb
mov
and
dec
pop
in
xor
adc
pop
iret
mov
repnz
jmp
push
repnz
mov
dec
pop
sar
xor
ret
and
pop
inc
xchg
(bad)
dec
xor
jp
dec
jmp
push
mov
mov
or
lods
ret
std
test
dec
mov
push
mov
js
shl
dec
js
cdq
push
cmp
add
mov
sbb
xchg
adc
cmps
lods
icebp
and
imul
sub
std
dec
mov
popf
in
sbb
std
push
mov
mov
aad
test
outs
or
repz
retf
dec
scas
mov
push
jl
neg
loopne
hlt
pop
jnp
cwde
test
out
pop
mov
or
mov
mov
mov
sbb
outs
or
in
adc
std
das
fnstsw
out
inc
dec
pop
ins
test
aas
jnp
or
xrelease
into
push
adc
arpl
sub
imul
xchg
jge
retf
in
push
or
push
add
rcr
mov
inc
lods
leave
push
not
pop
aas
sub
adc
(bad)
sub
into
retf
mov
inc
inc
xchg
leave
adc
sbb
adc
jae
loop
push
jl
out
stos
mov
push
and
arpl
lods
ss
or
ja
jl
or
add
scas
mov
mov
call
xchg
adc
fcomp
ror
mov
gs
adc
push
(bad)
scas
(bad)
mov
jmp
pop
(bad)
outs
mov
call
pop
movs
mov
mov
sti
lods
xchg
or
(bad)
outs
mov
dec
and
mov
sub
inc
add
rcr
out
xchg
imul
out
jecxz
jmp
test
sbb
ret
int3
dec
repz
inc
imul
imul
push
mov
mov
test
add
xor
mov
mov
sub
fwait
dec
mov
mov
mul
gs
ret
leave
sbb
lods
sbb
pop
cmp
aas
mov
push
cwde
stos
xchg
push
xchg
pop
nop
sub
fucomi
mov
jmp
cmc
cmp
call
pop
inc
lds
imul
lea
sbb
inc
push
push
mov
fwait
xchg
adc
xchg
test
dec
(bad)
or
ins
mov
stos
jmp
in
lods
rol
jo
out
xor
inc
movs
daa
js
test
sbb
fidiv
mov
xor
jns
sub
loope
sti
ja
add
sbb
test
in
dec
mov
pop
les
cli
add
das
aad
xchg
adc
dec
cmp
push
pop
(bad)
(bad)
arpl
xchg
aaa
ret
cmp
and
mov
jge
jl
and
xor
imul
mov
cli
(bad)
jp
sbb
rcr
jno
push
dec
xor
jnp
pop
cmps
or
in
leave
in
test
adc
adc
mov
xlat
(bad)
pop
in
and
mov
jo
mov
pop
inc
ins
push
fdivr
shl
aad
mov
icebp
push
adc
pop
sub
adc
int3
ss
inc
movs
pop
dec
and
lods
ja
mov
xchg
je
push
xchg
les
imul
or
sub
test
dec
shl
xchg
cmp
jno
push
stc
popf
fnsave
dec
mov
jbe
push
pop
jmp
inc
sar
lds
adc
aas
rcr
mov
out
call
xchg
inc
push
sbb
xlat
mov
xchg
adc
push
xchg
(bad)
outs
neg
jle
push
mov
fist
(bad)
mov
add
xchg
add
js
lds
movs
sbb
xlat
jb
pop
or
test
fsub
xchg
bound
push
sar
sahf
(bad)
jecxz
sbb
adc
or
or
nop
xor
fcomp
loop
push
repz
xchg
add
mov
push
xchg
daa
dec
lods
adc
add
out
mov
loopne
dec
push
dec
sbb
sbb
mov
or
sub
or
mov
aam
and
mov
pop
fiadd
sub
aam
test
mov
fs
fdiv
pop
into
daa
test
dec
jmp
(bad)
scas
loopne
ret
xlat
(bad)
sbb
or
and
push
add
mov
xchg
je
cmps
scas
aas
mov
ja
lds
imul
add
in
pop
lock
gs
call
pop
fwait
pop
sub
or
lahf
jle
xchg
mov
inc
push
ja
popa
lods
sbb
jae
nop
(bad)
in
call
mov
xchg
pop
pushf
ins
jbe
mov
daa
push
mov
cmc
mov
adc
jmp
cmp
xor
bound
adc
ret
jmp
retf
(bad)
mov
out
pusha
(bad)
bound
out
sbb
ja
mov
dec
mov
adc
hlt
jmp
mov
daa
xor
call
mov
arpl
or
loopne
je
es
and
xor
outs
es
pop
xor
imul
pop
and
fadd
jecxz
aam
inc
inc
and
push
ss
mov
loopne
and
add
int
test
arpl
int3
jle
dec
cmp
mov
xor
inc
pop
jns
gs
adc
cmp
sub
fadd
shl
pushf
pop
fiadd
push
sbb
stc
aad
fcmove
das
in
lods
sbb
mov
repz
test
add
adc
or
xor
jecxz
ror
std
test
mov
nop
and
push
jmp
mov
aaa
movups
mov
push
fwait
in
jmp
(bad)
lods
int3
push
mov
mov
mov
(bad)
jbe
pop
fnstsw
outs
sbb
ins
cmps
sbb
pop
ja
in
outs
mov
and
ds
cs
adc
add
je
xor
and
ret
and
arpl
movs
sbb
retf
daa
retf
inc
pusha
out
and
out
cmp
test
data16
fist
pop
es
mov
jo
mov
xor
xchg
cdq
adc
add
mov
xor
sbb
fidiv
push
adc
cmp
xor
push
pop
adc
sub
inc
dec
imul
retf
push
ds
pusha
pop
jno
xchg
push
(bad)
xchg
fst
adc
jns
es
fwait
jle
jmp
push
pusha
(bad)
sbb
pop
sub
and
mov
and
and
mov
cmc
test
lahf
cmp
mov
pusha
add
outs
retf
xacquire
cmp
jg
cmp
sub
movs
ins
cs
cmps
xchg
aam
out
repz
outs
xchg
push
cmp
dec
mov
dec
das
movs
mov
(bad)
pop
mov
(bad)
in
sub
dec
add
mov
out
inc
inc
adc
jno
out
enter
mov
jp
cli
in
add
movs
daa
mov
push
icebp
call
and
movs
and
push
sbb
cmp
dec
add
sub
inc
jb
jmp
add
(bad)
mov
test
fwait
outs
sbb
mov
xchg
dec
xor
push
sub
scas
add
leave
mov
stc
pushf
add
lock
je
inc
mov
xor
push
push
pop
dec
iret
(bad)
fcomp
repnz
sub
das
ror
nop
sub
push
pop
mov
pop
iret
ins
aam
xchg
push
add
and
mov
(bad)
test
fld
mov
mov
mov
cmp
fistp
ins
inc
adc
test
sub
fcmovu
push
sbb
dec
jmp
pop
movs
sub
rol
addr16
sub
push
call
pop
mov
pop
jmp
cmp
push
jg
aad
ins
inc
pop
pushf
cmc
ret
int
jmp
jbe
add
mov
movs
mov
stc
push
aam
sahf
lock
sbb
int
adc
cmp
inc
daa
lods
(bad)
xor
pop
xchg
not
sbb
cwde
inc
test
mov
push
dec
ret
pop
loope
mov
and
or
cdq
pop
call
pop
sti
stos
or
bound
repnz
pop
jbe
out
pop
inc
dec
xchg
scas
les
in
xor
push
pusha
fisttp
mov
jg
mov
push
ficomp
xor
movs
aam
inc
pop
(bad)
jp
sbb
movhps
mov
gs
xchg
pusha
xor
mov
pop
and
adc
cmps
mov
sbb
jge
(bad)
xor
push
test
push
(bad)
lods
jl
sub
sahf
push
stc
or
jbe
(bad)
fst
push
imul
mov
jae
cmp
dec
outs
xchg
mov
dec
retf
loopne
sar
sbb
and
dec
xlat
mov
push
xchg
aaa
mov
mov
and
fmul
pop
sbb
rol
mov
popa
mov
rol
lock
cld
inc
cwde
ret
push
ins
cmp
das
mov
in
sub
imul
pop
mov
daa
scas
jmp
cld
dec
int
enter
pop
jmp
(bad)
sub
ds
shl
iret
push
stc
fwait
(bad)
sub
xchg
cdq
mov
div
fdivr
or
outs
sub
repnz
imul
mov
pop
pushf
dec
pop
test
jno
dec
(bad)
ret
into
or
(bad)
std
fiadd
mov
bound
jns
dec
retf
inc
clc
mov
pop
cli
fs
movs
call
fwait
pop
mov
pop
jmp
mov
int
jbe
jns
xchg
and
arpl
ins
test
into
mov
jne
add
xchg
push
push
fld
test
call
loopne
mov
push
rol
iret
popf
call
push
or
shl
leave
loope
xchg
prefetchnta
(bad)
pusha
ja
add
cli
neg
fild
or
and
adc
or
and
out
or
icebp
stos
sub
fidiv
mov
es
and
mov
pop
jbe
imul
pop
dec
inc
mov
(bad)
jl
jle
outs
jnp
xor
clc
stos
dec
add
repz
jl
inc
mov
jnp
lahf
into
ins
sar
mov
mov
addr16
fist
xor
les
loopne
cmp
(bad)
aas
test
rcl
cmp
xchg
(bad)
inc
sar
push
push
shl
icebp
inc
(bad)
stc
jne
jl
and
xchg
into
out
sar
rep
xchg
shr
xchg
inc
gs
adc
sbb
sub
pop
cwde
fs
movs
icebp
and
aaa
mov
test
dec
add
add
xchg
sbb
scas
fild
inc
imul
add
cdq
and
pop
test
mov
(bad)
pop
outs
mov
lock
xchg
jge
ds
js
cwde
or
dec
sti
loope
jmp
in
jecxz
test
aas
fsub
movs
vpcmpeqw
movs
les
adc
push
ja
popa
inc
loope
fstp
(bad)
xor
mov
mov
push
sbb
jge
idiv
lds
xchg
ficom
or
add
scas
pop
fcmovnbe
imul
icebp
gs
mov
mov
je
icebp
add
dec
adc
sub
sub
pavgb
push
mov
mov
pop
call
loope
(bad)
ins
or
ins
out
rcl
rcr
aad
push
sub
inc
aaa
dec
push
enter
jmp
leave
cli
jno
pop
push
jno
jmp
idiv
out
sub
pop
mov
test
popa
pusha
xlat
pop
mov
add
push
push
ret
call
push
ja
movs
aam
iret
ja
pop
or
addr16
cmp
lea
adc
xchg
lds
mov
pop
or
fs
mov
xchg
loope
or
dec
cmc
popf
cmps
hlt
mov
into
mov
xor
cs
jmp
imul
cmp
sar
mov
sbb
or
xchg
sti
mov
shl
into
loopne
daa
sti
fisttp
scas
mov
fcmovbe
imul
ins
int
mov
stos
leave
ins
cmc
xchg
pop
cmp
mov
cld
inc
out
outs
lods
mov
test
gs
iret
cmp
dec
mov
ror
in
mov
inc
xor
out
stc
cmp
mov
sbb
mov
(bad)
stos
dec
(bad)
dec
or
ror
pop
jl
movs
arpl
and
xor
cld
xchg
test
jl
push
push
xchg
mov
sbb
add
cli
(bad)
(bad)
in
daa
test
adc
inc
xchg
es
sub
inc
mov
(bad)
jle
(bad)
in
jae
adc
data16
mov
xlat
daa
xchg
(bad)
xor
dec
pop
call
adc
cwde
(bad)
addr16
int3
das
mov
adc
dec
ror
popf
stos
push
mov
push
adc
lods
ss
sbb
mov
xchg
dec
hlt
or
lds
loopne
mov
pop
inc
cld
push
fstp
cmp
sub
inc
push
sbb
(bad)
jo
adc
std
movs
pop
pop
mov
lahf
test
rcl
icebp
loop
daa
enter
retf
mov
in
bound
push
cmp
or
cmp
mov
outs
(bad)
jle
lods
add
dec
mov
mov
adc
stos
or
adc
sbb
add
fwait
push
mov
nop
sbb
dec
push
lds
js
arpl
pop
jl
push
jle
jno
leave
mov
rcl
inc
mov
inc
push
sub
adc
movs
xchg
mov
mov
mov
neg
ss
call
dec
dec
pop
push
and
(bad)
test
pushf
aam
mov
cwde
test
arpl
dec
inc
idiv
and
(bad)
pop
cmp
daa
data16
aas
neg
aam
ret
in
shr
lock
mov
sbb
cwde
ret
push
pop
dec
xlat
sti
or
and
rcr
jp
dec
adc
push
xchg
std
cmps
add
cmps
xchg
push
fsubr
in
mov
mov
retf
jo
std
dec
add
lock
sub
int
sub
jne
lahf
mov
push
ja
xchg
mov
rol
icebp
repz
rcl
outs
lahf
scas
push
jmp
scas
adc
pop
xchg
xchg
imul
sub
xchg
fidiv
imul
(bad)
mov
lahf
xchg
cmp
int
mov
sub
jmp
and
mov
mov
movs
int
in
sbb
mov
adc
imul
in
ss
js
ds
xor
pushf
in
into
add
mov
pop
adc
and
xchg
jle
or
and
mov
fidivr
gs
mov
cmp
int
icebp
inc
ss
mov
bound
loopne
push
test
adc
pop
imul
lock
mov
(bad)
lea
shr
jnp
shl
xor
jecxz
sbb
jne
adc
hlt
cmp
mov
mov
mov
xchg
jecxz
and
jp
adc
and
mov
movlps
lea
fmul
push
idiv
mov
(bad)
inc
add
in
shl
push
aas
jecxz
mov
movs
push
clc
mov
int
push
pushf
pop
cmp
fidivr
mov
cmp
in
icebp
push
push
pop
loope
or
daa
arpl
dec
repnz
adc
cmc
out
mov
inc
jmp
bound
call
pop
sbb
jge
aam
je
iret
push
sbb
cmp
lods
call
stos
inc
outs
mov
retf
cwde
fwait
pop
repz
or
mov
je
repz
push
mov
push
scas
retf
fdivr
nop
jae
out
je
inc
ins
and
pop
test
add
mov
call
call
(bad)
mov
pop
aad
adc
adc
push
pop
or
sbb
push
inc
(bad)
scas
les
jl
add
mov
cmp
dec
imul
sahf
movs
jmp
xchg
xchg
mov
push
enter
out
jle
mov
push
fiadd
pop
pop
pop
jge
sbb
mov
inc
jp
inc
mov
or
pop
cmp
dec
addr16
lea
(bad)
js
fcomp
fmul
and
and
jge
xor
push
and
mul
adc
fwait
pop
out
xor
inc
and
arpl
mov
sub
push
pop
pop
jne
dec
xchg
imul
inc
cmps
lahf
stos
popf
add
les
(bad)
mov
mov
addr16
sub
fild
and
repz
cli
bnd
jl
in
out
pop
xor
mov
add
retf
stos
mov
fistp
jmp
add
sti
ror
jns
adc
ror
push
inc
add
vmaxss
pop
rcl
out
es
add
pop
dec
sbb
xchg
and
dec
sub
or
inc
xor
shl
cmp
push
push
mov
or
jae
mov
wrmsr
cld
frstor
mov
xlat
mov
and
nop
cmp
jl
out
(bad)
mov
mov
ss
and
int3
cld
push
sahf
test
cmp
scas
aas
repnz
cmp
ss
nop
jmp
cdq
repz
mov
ss
gs
popa
adc
cld
jle
mov
xlat
movs
neg
xchg
and
je
fist
dec
add
test
mov
lds
jl
fs
je
add
xchg
mov
push
xchg
ins
dec
sub
add
inc
(bad)
lods
jmp
scas
aas
adc
(bad)
pop
int
retf
cmp
rcr
or
dec
sbb
xor
jl
rcr
sub
popa
or
and
repz
std
or
push
lock
cmps
(bad)
sti
imul
call
in
mov
push
and
sar
shl
jge
add
push
out
pusha
into
lds
cmp
mov
sub
ds
(bad)
sbb
mov
sar
stc
pop
dec
outs
iret
mov
mov
sar
mov
xchg
jmp
mov
in
push
adc
stc
je
xor
fcom
jl
dec
and
inc
cs
daa
movs
popa
jle
fmul
fs
sub
mov
loop
ds
push
mul
test
sbb
scas
frstpm(287
sbb
in
std
les
mul
scas
fist
dec
ret
fcomp
sub
popf
scas
fidivr
cmps
push
xor
fidiv
mov
in
les
inc
xchg
adc
jo
popw
sbb
repz
in
inc
cwde
ins
jns
cmp
cmp
mov
les
dec
aaa
(bad)
mov
mov
es
add
mov
mov
lahf
pop
cmp
add
jg
pop
add
xchg
push
daa
sbb
mov
or
dec
mov
and
cdq
stos
(bad)
push
or
leave
(bad)
xchg
xchg
inc
div
dec
lahf
js
jbe
pop
xchg
movs
sub
inc
jmp
dec
iret
xor
mov
fiadd
mov
psadbw
loope
jmp
ins
dec
retf
fmul
(bad)
lfs
out
out
mov
add
push
sub
jl
fdiv
jne
jbe
stos
sub
(bad)
xlat
shl
add
push
mov
jno
mov
jne
sub
adc
cmp
sub
add
xchg
or
mov
inc
scas
loopne
or
js
int3
xor
inc
sub
inc
inc
ins
ror
inc
shr
fst
and
mov
xchg
aaa
(bad)
push
loop
push
xchg
aad
dec
pushf
test
jecxz
sub
aas
xchg
test
push
ficomp
data16
lds
jmp
mov
or
sar
jo
and
das
pop
jecxz
cs
cld
push
add
int3
ror
in
or
mov
mov
mov
mov
sub
xchg
cmps
jg
loope
xor
pushf
cli
xchg
sub
pop
push
mov
push
mov
and
jp
dec
ret
pop
jnp
push
out
inc
out
std
adc
sub
aad
mov
pusha
xchg
(bad)
mov
sbb
jbe
test
inc
lods
(bad)
jecxz
gs
imul
xor
add
fld
retf
xchg
movs
jmp
or
xchg
scas
cs
pop
jae
push
(bad)
out
outs
sbb
cmp
jecxz
dec
push
xchg
or
jle
in
mov
stc
mov
ficom
div
retf
fistp
std
cmp
call
movs
inc
inc
hlt
jns
cdq
cmps
ss
daa
push
enter
enter
sbb
mov
popf
in
fs
int3
add
adc
xor
add
cli
cmp
pop
inc
in
cmc
pop
ds
sbb
xlat
xor
adc
adc
icebp
data16
(bad)
xor
jg
dec
jmp
mov
ja
icebp
mov
loop
test
scas
daa
pop
(bad)
test
mov
and
cwde
dec
call
pop
ret
test
call
push
sbb
jmp
or
xor
es
(bad)
hlt
or
in
mov
sbb
outs
pop
and
adc
clc
dec
scas
pop
adc
nop
push
push
sub
fsubr
call
jge
mov
outs
clc
push
lahf
test
mov
clc
rsm
cli
les
sub
out
xor
mov
and
dec
dec
pop
aad
mul
outs
dec
push
xchg
push
adc
out
jge
fcomip
test
xor
add
cli
add
lods
mov
rcr
rcr
cmp
mov
nop
push
repz
push
jg
loop
ds
rcr
jge
add
fist
dec
das
ret
cmp
mov
(bad)
pusha
inc
pop
mov
add
mov
lds
ss
dec
pop
in
cmp
daa
stos
dec
or
push
xchg
jne
lahf
pop
sbb
hlt
dec
xor
cmp
fmulp
xchg
jge
dec
xchg
sbb
fst
or
test
loopne
xor
leave
jmp
mov
gs
and
outs
ins
jne
rcl
retf
std
or
jno
int3
test
aas
jp
retf
mov
ret
mov
xchg
enter
and
out
jmp
lods
(bad)
std
add
ja
dec
dec
xchg
scas
jae
(bad)
jo
pop
and
add
push
pop
lahf
pop
popf
test
push
jno
ins
mov
mul
fwait
inc
and
or
sbb
adc
cmp
push
fcomp
add
jno
inc
jns
js
xlat
xchg
adc
adc
fisttp
and
outs
(bad)
ja
mov
xor
or
cld
lds
cdq
cmp
push
(bad)
retf
rol
pop
stos
inc
(bad)
lea
nop
xor
push
sub
add
xchg
sbb
pop
in
bound
pop
mov
inc
pop
fs
in
or
repnz
or
and
int3
call
lods
pop
adc
inc
dec
test
cdq
push
ret
mov
nop
adc
fmul
retw
push
xchg
std
call
popf
push
pushf
int3
lahf
push
jno
dec
pop
sbb
lods
and
ror
cmp
fst
mov
xchg
adc
int3
ja
mov
inc
es
dec
call
or
inc
daa
call
xchg
dec
mov
push
hlt
and
push
pop
cmc
rcr
adc
fadd
rcl
mov
cmp
and
sbb
and
stos
cmp
xchg
mov
daa
push
repnz
out
aam
pop
rcr
fistp
std
les
push
jmp
push
fcomp
add
shl
icebp
jno
ds
les
and
dec
jmp
xchg
inc
xor
outs
mov
pushf
scas
pop
push
outs
lods
adc
push
test
adc
rol
xchg
int
cmp
dec
mov
inc
lock
jns
pop
retf
add
inc
or
mov
pop
std
and
mov
(bad)
jge
ins
fmul
rcl
xor
jp
ret
pop
inc
cmp
jle
clc
stos
push
cld
jp
jle
sub
or
scas
dec
aas
int3
xor
test
bound
mov
pop
outs
leave
inc
loopne
aas
lds
xchg
push
out
jno
mov
inc
popf
outs
mov
les
call
jmp
ins
dec
test
adc
repz
cmp
and
test
mov
fmul
(bad)
addr16
sbb
pop
sbb
inc
addr16
dec
mov
std
mov
fcom
test
daa
adc
test
out
icebp
jbe
push
fwait
push
sub
lahf
pop
loope
dec
mov
xchg
jg
inc
jmp
and
push
(bad)
jmp
add
mov
cmp
aaa
pop
cmps
fsub
fs
addr16
les
mov
loopne
(bad)
fldenv
adc
or
mov
fiadd
push
popf
(bad)
xor
add
imul
sbb
rcr
and
sti
cdq
pop
jle
loop
js
pop
mov
mov
enter
gs
scas
inc
call
mov
adc
or
pop
(bad)
int3
leave
mov
aaa
lea
int3
aam
dec
add
dec
daa
pop
mov
aaa
lock
xchg
loope
in
js
idiv
sbb
mov
xlat
cs
out
js
fs
push
nop
mov
sbb
xor
iret
dec
ins
cli
xor
fcmovnb
(bad)
(bad)
xor
(bad)
xchg
jo
loope
jbe
sub
mov
sub
xor
xchg
sbb
cmp
sti
sub
xchg
mov
sbb
jp
inc
xor
outs
push
cmp
xor
xchg
mov
pop
fs
xor
sbb
cs
mov
icebp
ret
aad
loope
std
jae
add
iret
xchg
xchg
div
retf
xchg
dec
gs
and
imul
sbb
ds
pop
push
rol
in
xchg
mov
shl
xchg
jb
retf
mov
mov
xchg
cmp
lea
js
or
cmp
cmc
iret
not
cmp
add
int3
push
jl
neg
pushw
das
jo
xor
nop
cmps
mov
(bad)
imul
les
add
aam
adc
mov
std
test
dec
test
(bad)
mov
sbb
jo
sub
xor
sub
jp
lahf
mov
(bad)
out
mov
mov
mov
call
cmps
xor
xor
inc
gs
or
sbb
jmp
mov
mov
sbb
inc
push
adc
ficomp
mov
xor
cmc
mov
xor
xor
mov
inc
mov
inc
lods
sub
lahf
bound
mov
xchg
es
cld
cli
jl
or
mov
sbb
mov
pusha
pushf
add
jl
mov
inc
or
fild
cs
jo
ror
retf
and
sar
aad
scas
push
mov
cld
jmp
idiv
fsubrp
fst
mov
add
add
cmps
adc
ficomp
popf
lea
pop
xchg
mov
inc
mov
and
(bad)
je
mov
mov
daa
cmp
adc
stos
test
aam
imul
aas
inc
jle
outs
mov
push
out
es
std
scas
data16
daa
push
push
push
idiv
mov
push
cmp
lock
jg
xchg
cmp
pop
cmp
adc
imul
scas
and
mov
int3
int3
cmp
nop
nop
sub
or
push
mov
scas
inc
xor
aaa
cmc
arpl
mov
imul
push
mov
ficom
pop
cmps
lea
pop
pusha
call
mov
jo
int3
arpl
xchg
dec
popf
pop
pushf
xchg
push
(bad)
std
xor
retf
hlt
and
les
sahf
out
loopne
xchg
fdiv
mov
shr
popf
adc
test
xor
lock
sub
or
sbb
enter
es
jb
outs
mov
retf
clc
test
test
mov
jae
and
fld
icebp
jp
mov
xchg
push
daa
pop
jmp
xlat
push
lds
in
scas
or
stos
rcl
cmp
rcr
vminps
mov
into
adc
pop
rcl
jge
pop
xchg
inc
pop
push
mov
rcl
dec
(bad)
sub
dec
cmc
cmp
adc
fyl2xp1
out
jp
sbb
mov
lahf
jae
cs
popa
jle
shl
outs
in
sub
and
jl
push
lahf
mov
and
inc
jecxz
pop
and
inc
jmp
pop
jp
xor
ror
ret
push
mov
sbb
and
and
sub
not
push
dec
jmp
push
fidivr
lea
in
cmp
(bad)
icebp
outs
std
adc
xor
bound
and
pop
cwde
cmp
or
mov
pop
aam
(bad)
xchg
aad
cmp
sub
sti
jle
fst
mov
mov
xor
push
or
pushf
mov
sahf
test
mov
retf
jecxz
in
xor
cmp
into
pop
call
pop
data16
dec
jle
xlat
push
cmp
cdq
mov
and
pop
mov
jp
dec
push
pop
push
fcom
mov
push
push
pop
movs
cli
ds
mov
adc
int
nop
adc
or
lock
cmp
hlt
int
inc
mov
cmps
cmp
push
and
dec
add
into
data16
xchg
cli
dec
(bad)
cmp
sub
push
mov
js
mov
xchg
xchg
stos
or
pop
push
cmp
call
and
je
push
xchg
(bad)
xchg
adc
rcl
push
adc
xchg
rcr
mov
cli
xor
nop
into
mov
into
xchg
sbb
lods
push
in
je
xchg
nop
xor
stos
scas
fcmovb
mov
mov
mov
dec
les
pop
xor
maskmovq
idiv
ins
ds
pop
je
jmp
jle
inc
(bad)
outs
js
movs
adc
retf
xchg
cmp
(bad)
dec
test
xor
cmp
xor
mov
inc
or
(bad)
in
cli
jno
pop
jge
jns
(bad)
imul
adc
dec
mov
mov
adc
mov
call
ds
out
into
pop
(bad)
dec
cmp
popf
pop
mov
fs
mov
or
cdq
sub
and
imul
or
(bad)
in
dec
pop
pop
movs
or
jle
test
stos
cmp
jne
sub
jmp
ror
or
xchg
mov
mov
push
adc
push
jne
pop
sub
mov
xchg
sti
fs
xchg
push
xor
push
mov
dec
std
or
push
and
jle
test
es
sub
test
add
and
xchg
jmp
sub
or
pusha
fdivr
enter
das
fstp
inc
lods
sbb
xchg
ret
xor
cmp
js
adc
push
pop
jns
mov
test
pop
push
xor
xor
cld
mov
nop
jmp
movs
dec
mov
out
pop
xchg
div
into
and
(bad)
arpl
loop
stos
xchg
sbb
cwde
sar
int3
ds
dec
push
adc
xchg
stc
imul
jmp
or
mov
xchg
xchg
xor
sahf
(bad)
clc
fimul
sahf
pushf
jge
aam
movs
loop
mov
jno
and
shl
dec
leave
adc
mov
clc
jecxz
movs
loope
mul
cmps
push
retf
xchg
dec
lods
das
es
imul
and
mov
mov
call
dec
and
ins
add
lods
shl
sub
outs
xor
data16
pop
shr
imul
pop
pop
pop
pushf
and
ins
hlt
pop
push
lahf
pop
cld
aaa
cli
push
movs
xor
mov
loope
sar
push
or
jge
cmp
mov
dec
push
icebp
mov
stos
or
(bad)
fimul
jae
xor
dec
cwde
out
fnstcw
xchg
lods
pop
in
scas
scas
pop
or
sub
pop
pop
mov
mov
(bad)
push
xchg
inc
fmul
sbb
mov
dec
add
xor
jo
mov
les
inc
jno
retf
adc
call
pop
mov
mov
fdivrp
sahf
aad
ds
and
push
push
imul
lock
inc
ins
sahf
add
push
lods
addr16
inc
(bad)
fld
sub
cmp
cmp
cmps
push
ins
stos
cmovb
repnz
movs
xlat
test
repz
fsubr
mov
and
jo
es
jmp
cmp
jp
xchg
out
sub
leave
mov
out
and
out
xor
lahf
push
and
lock
add
jp
inc
sbb
mov
je
mov
stos
int
dec
leave
rcl
js
mov
movs
and
test
jl
mov
aas
ins
xchg
lahf
(bad)
jbe
mov
sbb
or
cmp
mov
adc
fcmovbe
cmps
(bad)
and
idiv
mov
mov
es
jp
(bad)
sti
mov
aas
jmp
xchg
(bad)
cs
mov
mov
adc
xchg
jge
cmp
mov
test
lea
add
dec
cmp
xor
mov
push
mov
ins
sub
push
dec
popf
xor
gs
cli
mov
xor
call
call
or
(bad)
cld
inc
dec
adc
or
dec
and
xchg
lahf
and
aam
cvtps2pi
mov
mov
inc
sbb
stc
(bad)
leave
icebp
repz
pop
and
loop
cmp
data16
mov
mov
jge
out
mov
(bad)
das
retf
stc
add
dec
sbb
test
movs
out
call
popf
or
repz
and
jne
add
mov
or
inc
xchg
push
clc
cmc
aad
push
sbb
in
in
pop
sbb
or
retf
mov
or
in
jae
repnz
cmp
and
ja
repnz
fisub
adc
pop
mov
jno
xchg
(bad)
xor
sbb
cmc
jmp
in
mov
dec
(bad)
cwde
shl
xchg
rol
push
sub
in
jp
mov
pop
sbb
or
mov
push
jb
out
call
das
inc
lds
mov
fwait
in
rcl
rol
push
popf
push
xchg
hlt
pop
sub
movs
cmps
push
ds
mov
daa
jmp
es
xchg
cwde
out
scas
sbb
pop
pusha
pop
imul
mov
gs
out
movs
das
jl
daa
jge
movs
loope
adc
stos
into
mov
cmp
cdq
dec
pop
cmp
or
sub
mov
stos
cmps
and
lahf
push
cmp
cmp
rol
xor
dec
shl
xchg
pop
cmps
jne
loop
push
xor
call
xor
fistp
add
mov
mov
pusha
mov
jl
mov
cmp
popf
in
mov
ins
sbb
arpl
adc
pop
xchg
jmp
(bad)
jno
repnz
mov
cwde
jmp
ins
(bad)
mov
lds
sbb
dec
dec
dec
sbb
movs
push
ret
mov
into
lods
push
mov
popa
pop
mov
inc
dec
scas
or
cmp
jl
adc
jecxz
dec
mov
jmp
int3
sub
fadd
ret
in
xchg
popa
fsincos
nop
mov
fild
xchg
mov
push
js
push
nop
mov
cmps
sti
sahf
push
lods
dec
ror
fimul
push
pop
dec
cdq
iret
(bad)
mov
jns
call
xor
lods
lods
test
fisttp
popa
xchg
test
jecxz
not
mov
test
sbb
mov
jmp
div
call
push
(bad)
out
(bad)
test
int
inc
sbb
mov
mov
shl
ffree
cmp
dec
sub
inc
xor
and
cmps
cmc
sar
arpl
or
add
out
add
mov
jle
sub
repnz
icebp
push
fnstsw
iret
into
out
je
dec
repnz
sti
jecxz
xbegin
dec
push
loope
push
sbb
mov
inc
fld
imul
dec
xchg
dec
xchg
push
xchg
mov
stos
cdq
dec
pushf
test
fild
or
out
dec
xchg
add
mov
cmp
mov
leave
mov
inc
mov
and
(bad)
push
lock
repnz
sub
fwait
data16
fcmovu
dec
ds
sbb
dec
icebp
mov
dec
imul
inc
pop
cmc
sub
push
inc
pushf
jae
push
les
push
xchg
lock
mov
cmp
lods
mov
sbb
jno
add
add
inc
cmps
loopne
in
inc
cld
inc
in
ins
mov
add
js
mov
adc
and
cwde
aad
sub
psrld
mov
sbb
jmp
test
mov
push
jo
fs
sar
mov
mov
cs
mov
in
shl
dec
fiadd
inc
cli
push
sub
sti
push
and
pushf
or
add
dec
repz
and
xchg
test
inc
aad
sbb
popa
stc
mov
aas
ins
ret
xor
in
(bad)
out
(bad)
push
dec
daa
pop
scas
repnz
bound
stos
test
dec
mov
dec
xchg
push
cmp
and
pop
jle
test
mov
aaa
shl
rol
cmp
mov
daa
xchg
ins
push
mov
xor
add
mov
aam
jae
dec
xchg
out
arpl
ss
clc
xor
inc
je
xchg
inc
pop
or
stc
sti
xor
pop
retf
mov
pop
cld
sbb
rcl
fld
mov
or
or
sub
jmp
push
pop
into
xor
mov
sbb
mov
fidiv
hlt
lock
push
add
mov
sub
popf
cmp
cmp
add
xchg
ins
inc
int
gs
push
and
rcl
ret
inc
stos
inc
jne
cwde
xchg
pusha
outs
cmps
add
push
dec
popa
outs
repz
jmp
test
pmaddwd
(bad)
fscale
test
add
mov
call
arpl
test
shl
xchg
int3
and
sti
sbb
sub
shr
movs
or
mov
cdq
pop
or
data16
popa
outs
fistp
jne
lods
ds
xchg
cwde
inc
add
cmp
mov
inc
cli
outs
xlat
pop
or
push
arpl
outs
adc
mov
ja
xchg
jmp
dec
fnsave
xlat
sbb
xchg
adc
add
or
stc
xor
jae
pop
enter
sbb
push
das
(bad)
push
scas
inc
jns
jbe
cmps
out
inc
push
sbb
retf
retf
inc
xor
and
es
sbb
push
cmp
int3
and
cmp
arpl
xor
add
add
jmp
mov
mov
or
sbb
add
jge
fstp
xchg
enter
jmp
or
pop
scas
hlt
cmp
and
gs
mov
retf
lds
sar
fiadd
xor
shr
(bad)
jo
mov
push
jo
cli
add
sbb
mov
inc
lods
inc
ret
jno
inc
psraw
cwde
dec
jp
(bad)
cmp
call
fimul
sbb
bnd
jno
dec
adc
adc
xor
fidiv
stc
mov
dec
jmp
xchg
mov
or
mov
ret
jae
sbb
adc
cmp
inc
lds
repz
jno
and
adc
retf
test
mov
fwait
std
jg
div
dec
and
sub
in
fild
xchg
push
mov
mov
pushf
aad
adc
add
fstp
repnz
in
jecxz
push
aam
mov
shl
je
xor
push
cmc
or
ror
dec
sub
and
stc
sar
rcr
xor
pop
popa
test
mov
push
jno
call
ror
aad
bound
mov
pusha
std
lds
dec
lock
inc
xchg
daa
add
and
cwde
push
add
xchg
fstp
les
jge
aam
cs
dec
mov
lock
mov
mov
pusha
sub
pop
push
call
fdivr
stos
fnsave
pop
sbb
sub
pop
fcomip
mul
into
sbb
shl
adc
pusha
mov
mov
outs
adc
jmp
imul
(bad)
mov
and
xchg
cmps
mov
test
repnz
ret
ficom
jnp
mov
xor
aad
adc
imul
sbb
imul
adc
mov
pop
daa
fadd
add
or
in
sub
adc
imul
int3
add
cmps
cwde
int
sub
xchg
inc
jne
mov
outs
or
sub
pop
ret
jno
inc
mov
mov
js
loope
xlat
clc
dec
mov
lock
xor
add
add
cmp
adc
and
outs
(bad)
mov
mov
in
sub
and
jle
loopne
loop
loop
add
fmul
test
jb
add
mov
cwde
out
xchg
or
mov
xlat
pushf
loop
sbb
sbb
fadd
enter
rcl
imul
stos
test
(bad)
xor
cli
mov
mov
mov
mov
in
iret
int
(bad)
dec
arpl
sti
inc
out
inc
and
jmp
ret
into
aad
imul
loop
xor
cwde
iret
inc
fcmovb
out
pop
ins
ss
pop
outs
loop
inc
js
inc
jmp
mov
add
and
stos
push
stc
dec
jae
add
cmp
pop
movs
inc
push
pop
cmc
dec
sub
ins
fs
or
sub
enter
pusha
add
into
pop
and
pop
pop
jnp
pop
jp
fisttp
mov
inc
add
pop
and
mov
mov
repz
xor
or
push
cli
mov
fcomp
addr16
xchg
js
mov
sub
xchg
out
dec
mov
or
jmp
out
loope
cmp
cs
xchg
jmp
shl
inc
push
adc
gs
adc
popf
inc
pop
cs
stos
mov
cli
xchg
shl
(bad)
pop
push
jp
in
add
cmc
jae
push
mov
hlt
sar
cmp
test
push
dec
aaa
movs
fiadd
(bad)
jecxz
imul
and
test
sub
add
cmp
mov
outs
in
cmp
cmp
jmp
fidivr
sub
sbb
ss
imul
jb
int
(bad)
adc
dec
(bad)
pop
xchg
imul
jl
clc
enter
inc
mov
dec
hlt
xor
push
jge
dec
sbb
adc
xor
rcr
popf
pop
enter
fdiv
call
imul
in
inc
push
jmp
adc
or
and
add
stos
es
inc
(bad)
hlt
jbe
mov
fadd
sbb
clc
(bad)
mov
xlat
into
xor
cli
cmp
outs
and
fld
and
retf
sub
in
outs
dec
mov
shl
les
data16
jo
cmp
jle
adc
scas
push
xchg
xor
cdq
sbb
outs
leave
push
fimul
jge
jns
inc
jg
and
test
dec
add
sahf
dec
fdivr
mov
ja
xor
adc
rol
sbb
jle
mov
sbb
and
xchg
cli
sub
lods
loopne
leave
int
scas
and
push
push
imul
ret
push
sub
cmp
dec
mov
mov
fisub
fisub
inc
std
out
fxtract
shr
(bad)
lock
sbb
cmp
jmp
ret
cmp
or
jg
mov
movs
xor
inc
push
dec
fnsave
ja
xor
lahf
fldenv
retf
add
outs
pop
push
push
jp
std
sbb
and
fcom
hlt
pushf
or
bound
stos
add
aas
lock
gs
repnz
xor
pop
std
mov
push
jo
mov
push
sbb
mov
or
in
adc
fld
jle
fs
icebp
pop
dec
xchg
push
jecxz
fisttp
imul
push
mov
sbb
add
mov
repz
data16
pop
pop
pushf
or
or
fwait
xchg
push
stos
xor
pop
(bad)
sbb
call
push
jmp
enter
lock
outs
push
xchg
inc
adc
repnz
test
sbb
lds
cmps
out
jmp
mov
fwait
pop
jg
lods
dec
and
ja
pop
ret
arpl
xlat
pop
or
xchg
xchg
mov
or
aam
or
sysenter
lea
dec
test
nop
(bad)
call
jne
call
lods
jge
lods
sbb
mov
xchg
add
sar
push
fnstsw
ja
test
mov
or
jle
lahf
cmc
sub
jns
daa
cmps
mov
sub
pushf
push
adc
mov
outs
and
jg
mov
aam
sbb
stos
dec
dec
sbb
retf
ins
movs
xor
pop
fdivr
loope
adc
repz
into
in
xor
xor
pop
xlat
mov
in
sti
and
mov
fbld
push
adc
cmp
mov
out
int
xor
cld
sbb
xor
(bad)
adc
stc
fstp
fist
mov
ins
xchg
mov
mov
(bad)
ficomp
mov
ds
xchg
jae
fsub
out
repnz
movs
sub
dec
(bad)
les
cmps
xchg
or
push
ficomp
add
cmps
adc
(bad)
xchg
cmp
pop
push
inc
lahf
in
push
sub
and
ins
xor
fdiv
cmc
mov
mov
in
das
in
cmp
jbe
fidiv
inc
xchg
in
jbe
les
xor
dec
sub
inc
dec
sub
out
aad
test
ins
cmp
fucomip
outs
xchg
ins
jno
sub
xchg
aas
push
pop
cmp
(bad)
call
in
mov
pop
dec
add
sub
push
rol
push
enter
scas
cs
jnp
stc
test
iret
sub
data16
sbb
sub
sbb
ret
repz
mov
adc
and
out
mov
mov
push
push
movs
fst
sahf
outs
pop
jecxz
fdiv
cmp
lahf
jno
shl
jbe
ins
pop
fcom
push
push
retf
imul
jle
dec
ins
ret
data16
neg
repz
(bad)
in
pusha
push
call
imul
cmps
iret
fistp
add
clc
aam
sahf
fwait
and
jbe
xchg
popa
enter
jecxz
mov
xor
aas
xchg
repz
push
pusha
fiadd
and
mov
xchg
pusha
sahf
xor
or
or
aam
mov
add
mov
or
push
pop
rcr
popa
scas
not
sub
mov
and
pop
bnd
mov
jmp
xor
pop
enter
ret
sahf
mov
nop
push
cmp
loop
lock
out
mov
mov
cld
icebp
bound
or
xor
cwde
xor
jns
xor
adc
outs
arpl
and
cli
leave
inc
add
mov
scas
shr
jns
test
or
push
in
mov
in
pop
int
gs
or
pop
xchg
data16
or
pop
movs
(bad)
loop
dec
jmp
jnp
lea
cmp
and
cmp
je
mov
xchg
lahf
push
leave
int
pop
cmps
mov
jbe
ss
cmp
aad
ret
push
push
ss
adc
add
lea
in
mov
mov
sbb
push
adc
adc
movs
pop
jae
fdivr
dec
xchg
loop
(bad)
fistp
mov
shl
adc
call
jmp
shr
and
mov
call
mov
lds
mov
add
jb
dec
retf
xor
or
mov
dec
dec
pop
cmc
cmp
adc
in
pop
mov
adc
loopne
in
je
std
mov
push
loopne
jg
mov
inc
dec
xor
mov
in
sbb
shr
out
sub
cmc
push
xor
mov
in
pop
sbb
cld
or
iret
jb
push
adc
ret
mov
cli
dec
(bad)
sub
nop
sub
pushf
fwait
xor
stc
sub
fdivr
mov
rcr
jns
ret
mov
jle
add
test
sti
test
xchg
(bad)
out
pop
or
stc
dec
cmp
sub
leave
(bad)
retf
xchg
sub
in
jle
call
les
rcr
pusha
and
push
lea
jecxz
pop
(bad)
arpl
icebp
imul
push
xchg
pop
inc
dec
addr16
pause
jns
pop
gs
jmp
push
fisub
add
int3
mov
imul
xor
or
cli
pop
mov
out
or
jp
cmp
in
push
mov
ins
mov
inc
jmp
out
pop
arpl
cld
jne
sti
sbb
cli
adc
imul
int
inc
pop
adc
int3
aad
mov
and
mov
lds
add
push
pusha
xor
dec
pushf
push
mov
in
add
outs
pop
jo
aam
and
imul
sub
jle
lahf
clc
and
aam
or
sub
pop
rep
push
sbb
jmp
in
cdq
sti
imul
js
inc
ret
imul
mov
test
ja
cmps
adc
movs
out
adc
popf
add
mov
ja
data16
dec
mov
push
jmp
pushf
imul
pusha
inc
repz
cdq
mov
push
test
mov
ja
adc
retf
(bad)
jge
xchg
xor
sbb
jnp
mov
fcmovne
mov
mov
neg
icebp
outs
int3
movs
test
aaa
xlat
pop
dec
push
add
stos
dec
add
iret
mov
int
ret
mov
push
sar
fidivr
jbe
out
mov
push
jns
ret
pop
adc
jp
and
cmp
xor
cmp
repz
and
inc
mov
adc
cmps
cmp
inc
mov
std
xchg
sahf
mov
mov
pop
and
nop
popf
fimul
ss
out
adc
ds
sub
mov
lahf
xchg
mov
sub
pop
scas
cmp
repnz
ins
push
fs
mov
jecxz
push
repnz
ss
sbb
cmp
jnp
lods
or
call
pop
call
or
loope
test
push
daa
das
pop
(bad)
add
and
repnz
mov
jge
mov
pusha
sub
sahf
mov
in
(bad)
and
pop
dec
and
test
jo
popf
mov
push
cmp
jge
xchg
(bad)
clc
popf
les
gs
add
push
test
pop
(bad)
sti
enter
mov
adc
iret
lods
scas
mov
pop
jb
adc
sub
mov
push
leave
pop
inc
mov
call
push
push
imul
sub
dec
xchg
xor
mov
and
mov
retf
pop
fistp
psllw
xor
mov
mov
sbb
cmp
test
mov
jecxz
in
sbb
pushw
sbb
cmc
aaa
lahf
mov
cmp
scas
push
inc
icebp
dec
sub
sub
push
mov
loope
jns
out
rep
mov
movs
fist
mov
fwait
lods
jle
test
ret
xor
jecxz
and
sar
mov
das
xchg
xchg
dec
xchg
out
fbstp
retf
inc
mov
pusha
mov
dec
into
test
jb
push
mov
je
add
sub
xlat
call
pop
sub
out
in
adc
test
push
cwde
imul
push
mov
jecxz
mov
inc
push
mov
call
or
cmp
jbe
push
fsubr
enter
jb
xor
jb
pop
jg
in
dec
fild
inc
ds
cmp
push
jne
outs
sub
xlat
jns
jno
xchg
into
out
adc
mov
rol
ins
arpl
push
imul
sti
lds
cdq
dec
fdivr
(bad)
xchg
xor
int3
lea
push
out
mov
mov
mov
inc
loop
sub
mov
test
dec
mov
addr16
ffreep
js
jle
out
pop
push
sahf
aam
call
add
loop
mov
bound
dec
or
fild
cwde
popa
in
stos
pop
scas
sub
mov
cmp
add
dec
or
dec
lods
out
in
popf
push
mov
dec
popa
lea
mov
and
dec
retf
pop
(bad)
test
in
mov
fwait
sub
fwait
sub
lahf
add
mov
aaa
or
sahf
push
xchg
push
add
popa
inc
fisttp
jmp
das
sbb
lods
add
scas
leave
retf
pop
fistp
push
hlt
(bad)
retf
or
sub
inc
mov
into
pushf
mov
push
xlat
jbe
fdiv
mov
int
dec
movs
sbb
rcl
xor
cwde
jl
data16
xchg
in
lea
dec
pop
lock
xor
test
outs
jno
mov
jns
test
jb
pushf
fnsave
mov
xor
leave
retf
daa
mov
popf
mov
lods
mov
xchg
or
int
sub
rcl
jmp
imul
adc
dec
adc
pop
inc
xchg
push
cwde
mov
mov
mov
sub
in
fsub
jmp
gs
call
and
int
pop
xchg
push
rol
test
push
sbb
rcl
fcom
pop
xchg
scas
mov
mov
ficom
addr16
push
cdq
cmc
scas
scas
xor
mov
xor
ds
shr
mov
cmc
out
or
rcl
lea
mov
mov
idiv
cld
or
jmp
mov
lods
outs
jmp
clc
in
xchg
xchg
cld
sub
std
jbe
call
and
mov
fnstcw
mov
sti
adc
or
jp
movs
pop
clc
nop
in
popa
pop
or
mov
or
jae
pop
cmc
sti
retf
inc
scas
movs
pushf
call
out
dec
jb
loope
outs
push
test
mov
add
mov
jb
pause
cli
pop
cmp
and
(bad)
mov
dec
adc
int
je
cmps
aas
add
sti
nop
fwait
lock
xor
loope
outs
pop
cmp
xlat
fistp
popf
frstor
mov
cmc
movs
loope
pop
jle
jmp
iret
mov
ds
cmp
inc
je
call
sbb
add
sbb
mov
stc
daa
sti
movs
cmp
(bad)
fnsave
adc
clc
sub
push
not
adc
fcom
dec
sti
or
div
lods
hlt
test
jo
jmp
and
aad
mov
outs
xor
xor
xor
mov
mov
hlt
repnz
xchg
push
pop
loope
pop
ins
pop
dec
stc
sbb
xlat
adc
imul
inc
in
inc
or
mov
mov
movs
adc
mov
xor
mov
dec
lds
(bad)
sbb
sbb
mov
call
cmp
inc
mov
scas
jg
cli
inc
sar
sub
mov
(bad)
loopne
push
pop
push
add
lahf
and
and
xchg
(bad)
sti
jecxz
jmp
ret
sub
pop
mov
stos
ja
shr
xor
sahf
jbe
mov
mov
sti
push
xor
repz
adc
scas
fcmovu
mov
mov
out
xor
mov
push
popf
pushf
aad
stc
shl
sbb
jge
sub
inc
xor
je
(bad)
into
push
mov
xor
in
ins
inc
repnz
fcmovu
rol
loopne
xchg
cmp
imul
xor
or
dec
movs
popf
in
test
repnz
shr
cs
mov
ret
jae
iret
lahf
fist
sahf
call
jo
push
sub
cmc
add
fcom
call
int3
xchg
inc
mov
adc
cmp
jmp
cmpxchg
out
test
movs
pop
xchg
dec
fidivr
mov
sbb
mov
test
and
fist
cmp
mov
xor
push
jb
int
loop
js
mov
movs
jbe
xchg
push
cmp
push
sti
xadd
mov
call
sbb
adc
xchg
xor
mov
ror
ffree
or
jg
xchg
leave
ret
mov
out
sub
cmc
mov
xchg
loopne
push
pop
push
mov
in
outs
shl
ficom
push
jbe
je
stos
lock
push
outs
jmp
rcr
out
retf
mov
and
xchg
ss
dec
ret
push
adc
add
dec
test
cmp
jo
lods
shl
or
adc
cmp
aad
ds
fcmovbe
mov
repz
dec
clc
in
pop
cmp
dec
pushf
push
push
add
(bad)
call
sub
xchg
div
out
iret
xchg
xor
push
xchg
fbld
loop
pop
mov
ds
dec
mov
pusha
cmp
mov
inc
movs
and
sbb
or
mov
jl
mov
add
push
aad
jne
fcom
sub
retf
dec
ins
push
jmp
rcr
retf
sbb
xchg
cwde
fidiv
jae
xor
fsubr
shl
ficomp
xchg
movs
movs
or
pop
retf
icebp
adc
pop
ja
dec
popa
xor
sar
mov
add
fist
mov
mov
inc
sahf
sub
dec
retf
and
jle
ret
add
pushf
inc
cmps
xchg
inc
mov
pmuludq
xor
pop
jns
movs
retf
out
imul
cmp
push
iret
pop
mov
ja
inc
push
mov
test
push
sub
xchg
out
jg
push
adc
dec
xchg
daa
pushf
pop
xor
sub
aad
stos
movs
push
and
data16
jle
or
jne
outs
xchg
mov
sbb
pop
or
jo
fmul
sbb
pop
not
fst
cmp
jge
test
mov
pusha
fdivr
mov
inc
mov
pop
in
lods
xor
add
or
retf
or
imul
fcom
out
inc
sbb
adc
jmp
xchg
cmp
or
mov
shr
inc
jmp
and
xchg
xchg
xlat
and
fmul
xor
xchg
mov
das
dec
addr16
(bad)
pop
lock
xchg
jbe
fild
sbb
xlat
aad
lods
ret
bound
or
pop
loop
push
jmp
ficom
call
pop
lahf
inc
stos
mov
push
int3
mov
(bad)
fistp
push
inc
js
(bad)
movs
adc
xchg
test
enter
imul
mov
ret
mov
daa
pop
xor
js
jae
push
cmp
sub
ins
not
mov
or
adc
(bad)
dec
(bad)
lock
test
mov
rcr
das
fdivr
call
adc
push
pushf
cmp
and
test
in
push
adc
out
ds
shl
cwde
xor
push
clc
sub
call
push
aaa
mov
aad
mov
(bad)
inc
bnd
xlat
mov
and
xchg
jns
sub
nop
jecxz
scas
jbe
das
into
push
in
xchg
jmp
mov
mov
fwait
xchg
imul
jecxz
pusha
popa
(bad)
mov
enter
adc
or
aas
lods
data16
pop
xchg
sbb
out
mov
pop
jle
mov
mov
mov
in
jb
xor
or
cmp
push
jae
mov
loopne
xchg
add
call
(bad)
stc
adc
pop
das
pop
stc
call
sub
inc
sub
(bad)
jecxz
addr16
mov
mov
inc
xchg
mov
clc
xchg
sar
pop
sub
push
fistp
jmp
jno
adc
adc
xor
jmp
je
jnp
xor
sub
das
mov
mov
cmp
mov
das
and
cmps
outs
bound
inc
sbb
or
fnsave
icebp
ret
sbb
js
jmp
in
push
adc
aaa
cmps
repnz
ds
mov
cmp
les
movs
sub
xor
call
mov
mov
mov
or
mov
adc
add
fs
(bad)
mov
std
(bad)
mov
mov
sub
push
dec
mov
in
popa
inc
(bad)
mov
mov
sbb
add
cmps
dec
test
test
mov
sti
xor
(bad)
out
ret
xchg
or
xchg
fwait
shr
mov
popa
and
pushf
sbb
inc
ins
sbb
aas
(bad)
int3
jno
mov
sbb
or
lods
fsubr
adc
adc
sbb
xchg
cmp
(bad)
xchg
call
sbb
adc
mov
and
push
outs
jecxz
push
movsx
cmp
not
xchg
shl
cmps
mov
repnz
sahf
(bad)
sbb
xchg
test
xor
jae
mov
mov
xchg
pop
ret
push
loop
cmp
(bad)
outs
fidiv
cld
addr16
int
mov
sbb
(bad)
cmc
lock
clc
xor
inc
adc
jmp
test
mov
stos
cli
dec
inc
addr16
bound
aaa
movs
xchg
cmp
cmp
xchg
cli
fstp
mov
fcomp
xchg
call
shl
push
iret
dec
out
(bad)
imul
ror
(bad)
jp
out
mov
jo
dec
mov
dec
add
iret
mov
sahf
mov
out
das
inc
test
jg
ja
mov
ds
sub
xor
mov
sbb
out
ins
clc
adc
std
jbe
je
sub
and
sbb
js
cwde
mov
pop
mov
imul
pop
lock
(bad)
jg
add
ins
fidiv
add
xchg
pusha
cmc
jo
cmp
aas
stc
push
retf
(bad)
in
adc
pusha
int3
xlat
add
ins
cmp
out
hlt
sbb
mov
jecxz
mov
lods
pusha
jmp
stos
push
and
mov
push
sbb
sub
lds
ja
mov
frstor
xor
js
pop
call
sti
sbb
test
stc
mov
add
cmp
cs
and
sbb
in
mov
fdiv
xchg
xor
push
xchg
rol
lock
mov
adc
mov
iret
push
jg
sub
dec
jmp
aam
aad
cli
call
nop
cmp
pushf
rol
mov
sbb
daa
or
(bad)
inc
(bad)
outs
push
sbb
dec
xchg
sbb
sub
xchg
gs
fidiv
dec
mov
imul
jecxz
in
mov
(bad)
mov
lods
add
lahf
pop
mov
and
retf
mov
addr16
call
cmp
pop
xchg
xchg
and
gs
mov
and
dec
and
std
std
mov
fnsave
aad
(bad)
popf
or
sbb
outs
and
mov
xor
das
dec
mov
out
xor
inc
push
stc
hlt
push
pop
sbb
dec
dec
pop
xor
pop
mov
xchg
fmul
push
loopne
inc
add
aad
jbe
ds
retf
sbb
(bad)
rol
retf
lods
and
xchg
adc
imul
dec
mov
push
jae
outs
scas
fild
jmp
fsub
xchg
clc
xchg
sub
bound
sub
fwait
sub
movlps
xor
jmp
fwait
or
mov
pop
js
add
push
mov
jo
and
inc
jb
(bad)
or
xor
repz
in
cmp
bsr
nop
ja
(bad)
fbld
lea
retf
dec
jns
gs
ror
or
pushf
imul
xchg
fistp
and
jne
pop
mov
sub
ret
cld
push
sbb
repnz
mov
fnsetpm(287
dec
push
dec
lock
inc
lahf
mov
inc
push
pop
imul
loope
xchg
jecxz
xchg
or
push
arpl
js
pop
(bad)
inc
out
loope
pop
in
mov
sti
add
loopne
hlt
dec
xchg
mov
jg
test
(bad)
xchg
fisub
(bad)
sbb
jl
and
push
or
rcr
int3
call
jg
push
push
adc
test
jg
push
sti
xor
xor
mov
mov
push
je
ds
or
dec
xchg
in
fisubr
push
inc
das
inc
scas
mov
xchg
retf
pop
push
jg
xchg
cmc
inc
xor
jl
std
in
imul
fwait
inc
push
enter
cmp
inc
retf
jno
test
les
sub
aas
xchg
ins
xor
or
repnz
jbe
mov
test
jnp
data16
mov
dec
dec
or
scas
test
jle
aam
mov
add
shl
mov
pop
aaa
addr16
add
push
out
jnp
rcr
add
fimul
test
jno
out
sbb
mov
call
(bad)
xor
ret
sub
mov
push
es
or
sar
stos
loopne
or
jnp
(bad)
add
retf
xor
push
sub
xlat
lock
lock
popa
jge
mov
fisubr
mov
mov
aam
ret
dec
(bad)
inc
push
lea
fsubr
push
inc
les
leave
mov
in
test
mov
dec
cmc
lahf
mov
nop
add
into
cmp
outs
jne
adc
pusha
jne
mov
xlat
aam
cmps
in
je
mov
outs
xor
stos
xchg
or
mov
xchg
(bad)
and
mov
in
sar
inc
sub
mov
mov
sbb
ins
rcr
imul
into
pop
and
aas
mov
inc
mov
in
cmc
add
xor
in
ins
pop
out
aad
inc
or
xchg
mov
jmp
aas
lock
xchg
repz
add
movs
xchg
arpl
jbe
mov
mov
cmp
fcomip
fstp
xchg
pushf
mov
bnd
mov
fcmovnbe
xchg
and
outs
dec
imul
mov
ins
sti
jmp
call
jecxz
jle
fs
mov
and
jnp
inc
bound
sbb
or
ret
and
popa
scas
mov
jmp
jmp
das
add
fnstcw
test
enter
mov
ins
shl
loopne
test
mov
cli
ret
push
inc
(bad)
je
iret
into
(bad)
daa
inc
sub
jecxz
aam
movs
fistp
je
mov
mov
in
shr
add
add
data16
clc
lea
test
inc
loopne
call
mov
outs
fwait
and
mov
out
mov
push
and
jbe
mov
inc
aas
and
nop
inc
adc
mov
cdq
fcom
int
or
jecxz
fidivr
adc
dec
arpl
out
jae
jns
adc
cdq
es
mov
nop
push
test
fwait
cmps
and
sbb
pop
jmp
leave
fstp
adc
popa
daa
stos
add
push
mov
jl
loope
popf
jns
push
adc
push
lods
mov
mov
xor
push
add
jecxz
sub
pop
mov
cs
sahf
imul
push
shl
sub
mov
fld1
jle
add
fdiv
xchg
sub
sbb
shl
cdq
push
sbb
jbe
pop
js
mov
jle
ds
popf
int3
inc
xchg
or
stos
cmp
fldcw
mul
xchg
in
adc
xchg
push
mov
mov
sbb
rcr
repnz
sub
shr
mov
not
repz
rcl
fdiv
gs
inc
sbb
adc
mov
inc
add
dec
fcomp
push
stos
mov
outs
dec
cmps
ret
xchg
or
ja
xor
inc
or
push
aaa
fadd
enter
gs
out
fcomp
sbb
and
and
rcr
sti
pop
in
jmp
push
mov
jg
sahf
mov
dec
stos
jno
das
mov
dec
mov
int
icebp
sbb
add
std
unpcklps
mov
fwait
add
jo
push
scas
neg
add
pop
int3
sbb
lock
mov
cmp
adc
out
pusha
outs
and
enter
loopne
ret
rcl
sahf
hlt
(bad)
xor
adc
dec
ret
sub
lahf
xchg
jnp
daa
push
mov
xor
jp
pop
ins
loope
in
mov
test
test
stos
cmp
xchg
mov
lods
add
sahf
inc
push
fwait
aam
fimul
inc
je
imul
into
pusha
xor
in
xor
into
jbe
ror
data16
sbb
(bad)
fstp
and
sub
fwait
fwait
divps
and
not
enter
ret
sub
or
je
clc
xor
ins
jecxz
push
mov
push
jmp
(bad)
aas
cmp
xor
in
ins
mov
sar
xchg
test
and
mov
xor
fcomp
jle
dec
fnsave
stos
mov
pop
add
aaa
aad
(bad)
adc
in
push
sbb
cmp
test
xor
cli
pop
inc
push
lods
cmp
adc
jno
enter
sbb
sti
call
ret
dec
pop
sbb
clc
test
xor
xchg
pop
mov
aad
xor
pop
mov
push
loop
xchg
jecxz
cmp
in
mov
shl
xchg
es
mov
sbb
arpl
push
ss
ficomp
inc
or
xlat
jnp
mov
scas
aas
push
xor
and
mov
lods
sar
cmps
pop
cwde
outs
dec
retf
fxam
dec
jno
jb
(bad)
xor
mov
pushf
inc
addr16
push
jnp
sub
jmp
push
rcr
lahf
inc
pop
add
ins
add
stos
xchg
mov
mov
jae
sub
fucom
cmp
xor
pop
mov
jecxz
mov
sub
mov
movs
mov
pop
jl
jb
cmp
cmp
jl
stc
sbb
push
cdq
push
in
and
repz
sub
daa
mov
jae
sahf
in
bswap
pop
enter
lea
push
aad
dec
sbb
mov
jle
add
push
push
add
inc
(bad)
xchg
ins
push
jmp
cmc
xor
cmp
mul
add
sub
shr
xchg
pop
inc
pushf
mov
data16
je
ret
mov
jmp
and
sahf
jns
sbb
adc
push
addr16
mov
cmp
inc
and
pop
aam
mov
sbb
jmp
(bad)
mov
xchg
pop
or
adc
stc
adc
and
sub
mov
mov
sub
jmp
out
dec
and
test
or
push
int3
outs
adc
mov
lods
fisubr
jecxz
adc
mov
sbb
shl
mov
shr
push
addr16
and
cmp
push
js
mov
push
adc
mov
inc
mov
adc
out
push
(bad)
cmp
push
xchg
inc
mov
scas
hlt
dec
icebp
xor
retf
jmp
mov
inc
adc
popf
add
(bad)
dec
xor
adc
rcl
xor
clc
sbb
scas
or
cmps
lds
mov
push
pop
push
cmc
xor
cmp
ret
scas
icebp
jns
rcr
rcl
mov
add
mov
out
jge
mov
fild
in
mov
adc
jne
mov
xchg
push
mov
xor
sbb
inc
stos
sbb
cmp
std
pop
xor
lahf
test
or
test
jmp
xchg
in
xor
adc
(bad)
cs
inc
mov
and
std
loopne
xor
xchg
cmp
enter
mov
into
ror
enter
add
(bad)
enter
ins
xor
mov
xor
call
in
cmp
je
pop
aam
push
fwait
mov
inc
mov
inc
jnp
pop
fiadd
push
add
pushf
fsubr
popa
sub
(bad)
scas
jle
xchg
push
aam
push
fisubr
xchg
and
xchg
mov
mov
out
cs
ja
dec
mov
xchg
repz
fwait
jne
adc
rcl
out
dec
inc
add
(bad)
mov
sub
and
pusha
jns
(bad)
fmul
test
stos
inc
test
loopne
popf
mov
jg
pop
cli
dec
dec
out
aas
shl
movs
xchg
test
bound
fnstsw
sbb
cmps
(bad)
or
add
add
(bad)
pop
test
(bad)
cli
jne
sub
sahf
dec
out
arpl
mov
inc
sub
scas
jp
(bad)
call
pop
mov
adc
jge
lea
es
xchg
sbb
pop
ds
call
mov
pop
adc
outs
pop
fild
inc
xchg
imul
movs
addr16
mov
cdq
mov
fwait
or
xchg
pop
(bad)
and
mov
sbb
jge
mov
xchg
inc
int
fld
jae
mov
stc
cli
icebp
scas
mul
push
push
adc
mov
out
imul
mov
nop
fisub
adc
lock
fucomi
cmp
sbb
neg
sbb
neg
cmps
push
and
inc
mov
adc
popf
mov
rol
inc
or
sbb
fistp
mov
cmp
xchg
push
dec
or
mov
mov
cmp
adc
out
or
xor
pop
jp
sti
fs
adc
mov
dec
popa
mov
loop
dec
add
mov
call
push
jo
(bad)
js
jb
arpl
bound
test
pop
outs
jecxz
fild
xor
and
cmc
sub
ins
dec
mov
xchg
stos
aam
ins
jecxz
test
outs
push
ja
rcr
inc
adc
fbstp
add
jg
xchg
fs
out
add
scas
sti
mov
(bad)
xlat
jecxz
pop
outs
movs
in
sahf
mov
int3
push
cmp
rcr
ja
getsec
mov
xchg
nop
arpl
add
mov
pop
ins
dec
or
jno
dec
jb
mov
inc
sub
call
xchg
add
push
xchg
adc
aas
adc
ins
mov
pop
mov
jl
pop
sub
cmps
jmp
inc
aad
push
inc
test
ins
jo
movs
adc
in
(bad)
loop
mov
repnz
(bad)
int
adc
fmul
repnz
sti
hlt
push
mov
pushf
xor
pushf
jmp
popa
sbb
dec
cmc
jne
jae
jmp
outs
sbb
sub
mov
lock
ins
js
outs
xchg
add
into
inc
bound
mov
cmps
dec
cmp
repz
jg
std
aam
xor
stos
adc
or
es
out
sub
xchg
mov
stos
pop
or
adc
xchg
dec
idiv
xchg
cli
adc
cmp
cli
test
js
cmps
retf
std
pop
test
fst
scas
cmp
outs
cmps
push
sahf
ret
call
and
mov
push
cwde
pop
sbb
mov
aas
push
pop
pushf
idiv
test
aad
aad
(bad)
xchg
mov
ja
xchg
in
fdivr
mov
sbb
clc
push
adc
dec
jb
and
lahf
mul
mov
push
dec
(bad)
adc
xchg
xchg
add
pushf
pop
jl
push
cmp
xlat
mov
or
adc
retf
lea
retf
aas
loopne
clc
jle
and
sub
ins
xchg
outs
adc
mov
std
mov
ret
scas
pop
dec
cmp
hlt
mov
(bad)
loope
xor
xor
icebp
cmp
adc
imul
jl
jbe
inc
jb
(bad)
xchg
ror
dec
shl
mov
xor
push
in
retf
jae
xor
or
push
out
in
daa
push
enter
xchg
pop
fmul
jp
cli
jmp
pusha
jnp
call
ins
cmps
out
mov
adc
xor
shl
jp
loope
pusha
inc
pop
cmp
xchg
and
or
arpl
fimul
lods
xlat
repnz
xchg
mul
aam
jl
mov
pop
push
int
ins
aas
fisub
stos
(bad)
inc
pop
dec
adc
fcomp
cs
mov
adc
sahf
mov
out
int3
pushf
sub
call
jne
dec
sub
sub
std
xor
xchg
stos
jmp
(bad)
add
sbb
shl
clc
imul
lds
(bad)
loopne
aaa
aas
xor
js
or
push
lods
adc
sub
out
inc
sbb
jge
jp
mov
outs
jno
jne
outs
daa
xchg
ret
loop
xchg
pop
jge
adc
ins
push
stc
scas
or
cmp
daa
aam
shl
dec
jecxz
jle
int3
cmp
and
dec
(bad)
jns
sub
retf
jmp
out
mov
push
lea
sahf
cmp
cmp
fwait
shl
les
push
ds
in
mov
mov
jle
cs
imul
scas
xor
repz
sub
inc
outs
sbb
sbb
fistp
xor
push
pop
imul
mov
mov
arpl
aam
xor
sti
pop
push
cdq
lock
sub
xchg
test
push
add
pop
jnp
out
adc
lock
cmp
movs
das
pushf
mov
jb
cmp
jae
or
scas
pushf
mov
cmp
cld
mov
and
call
sub
movs
out
push
and
dec
mov
cmp
daa
fstp
jle
mov
or
sbb
xchg
aas
aaa
jnp
mov
cmp
jne
ja
movs
ja
in
ins
inc
emms
sbb
jmp
mov
cs
mov
in
jmp
shl
les
arpl
mov
push
and
add
and
jl
dec
ins
pop
jmp
call
rcl
sub
mov
add
imul
scas
(bad)
mov
inc
xchg
push
or
dec
adc
fs
out
imul
pop
xor
or
cwde
inc
test
dec
adc
inc
or
gs
jno
jecxz
dec
xchg
loop
in
push
add
mov
and
adc
sbb
lds
inc
mov
jae
call
in
test
dec
dec
ror
inc
push
xor
popf
cld
adc
stc
sub
rol
sbb
int3
push
mov
lahf
or
mov
test
jb
xchg
or
jno
pushf
push
nop
aaa
push
jle
pop
push
scas
das
sub
and
push
mov
retf
mov
test
adc
mov
repz
fs
daa
lock
es
xor
(bad)
ror
test
stos
push
adc
jp
lea
(bad)
jo
xchg
mov
fwait
sub
(bad)
xchg
outs
jno
jae
outs
mov
bound
and
clc
je
ss
pop
pop
fs
push
shl
out
leave
scas
mov
ret
mov
sbb
or
jl
push
cmp
add
push
and
fmulp
mov
retf
xor
cmps
jmp
pop
push
and
sub
dec
jp
scas
xchg
imul
jo
add
into
pop
cld
arpl
sub
rol
lea
inc
mov
jnp
cmps
jbe
ins
push
stos
lods
mov
push
xor
popf
xchg
dec
push
enter
mov
add
push
hlt
cwde
pop
dec
out
or
js
push
xchg
gs
fdiv
cmc
add
int
(bad)
(bad)
shr
mov
xchg
inc
lea
cmp
adc
mov
xor
or
dec
xlat
cmps
loop
test
mov
popa
ror
test
lods
idiv
das
icebp
adc
test
clc
call
push
xchg
clc
mov
push
movs
sahf
rcr
push
movs
out
fiadd
jae
cmps
aas
sbb
xor
in
int
rol
fidivr
clc
dec
jae
and
in
js
cs
movs
das
adc
adc
outs
jmp
push
inc
call
popa
jo
jle
iret
push
jb
imul
fs
push
and
rol
repnz
ror
mov
add
dec
mov
push
aam
xlat
arpl
pushf
xchg
jecxz
(bad)
xchg
cli
popa
sbb
add
data16
aas
cmp
out
sbb
or
mov
aaa
fldenv
stos
ret
fstp
jne
loope
in
xchg
ret
les
jg
leave
push
ret
aad
lahf
jge
(bad)
cs
pusha
push
mov
fsub
add
pop
inc
cmp
test
and
repz
mov
movs
loopne
jecxz
jo
loopne
or
mov
cwde
retf
fwait
inc
adc
idiv
adc
popf
mov
push
sub
inc
pop
retf
sbb
or
fistp
add
icebp
mov
out
add
sbb
daa
fidivr
xor
or
gs
cmp
add
int
lahf
ror
xor
push
fdiv
mov
push
xchg
mov
aaa
or
stc
mov
cmp
inc
mov
imul
sub
and
fnstenv
jnp
aad
push
dec
imul
dec
ss
jmp
rcr
loope
sbb
ds
add
xchg
outs
xor
sub
imul
add
enter
fs
cmps
ins
pushf
add
mov
in
xor
fnsave
clc
jp
movs
je
mov
and
mov
push
mov
jmp
pop
dec
lea
xchg
mov
clc
xchg
pop
push
and
movs
jmp
scas
mov
mov
xchg
in
or
push
cmps
xor
mov
pop
scas
cli
pop
outs
fild
dec
and
mov
push
cwde
add
adc
lock
mov
outs
pop
movs
sar
and
jns
in
sbb
(bad)
ins
call
sbb
add
adc
fs
mov
fnstcw
mov
fxch
and
cmp
xchg
loop
outs
xor
loop
inc
out
ja
in
mov
cmps
fidivr
pop
call
aad
pushf
test
repnz
inc
loope
es
mov
retf
mov
mov
cmp
cmp
push
cmps
pop
mov
movs
rcr
dec
mov
cmp
cmp
outs
cmp
and
xchg
imul
(bad)
sub
leave
icebp
test
sub
lahf
cs
add
jg
cmp
repnz
jns
bsr
push
les
xchg
icebp
push
call
cmps
icebp
popf
dec
sub
aaa
add
pop
pop
and
sar
(bad)
or
xor
leave
stos
repnz
pop
push
dec
and
add
and
ficom
xor
xchg
hlt
in
sahf
out
rep
rcl
pop
push
shl
scas
addr16
cs
mov
lahf
add
movs
or
jmp
add
js
xor
(bad)
out
fild
stos
jmp
fld
sbb
popf
test
out
test
retf
jmp
test
and
or
stos
into
nop
push
clc
pop
xchg
dec
rcr
test
push
inc
arpl
or
test
pop
ds
pop
push
aaa
out
in
bound
cmp
or
aad
xor
test
jmp
imul
or
bound
jnp
mov
pop
clc
in
push
fist
pop
(bad)
test
icebp
jle
test
or
and
inc
add
lea
outs
push
xchg
mov
dec
(bad)
mov
mov
fisubr
adc
add
xchg
sub
shl
fstp
ss
pusha
icebp
pop
and
lea
stos
aam
inc
div
test
fcomp
lahf
data16
add
pop
xor
mov
out
loope
out
sbb
nop
mov
popa
inc
icebp
jge
iret
pop
cmc
and
nop
jo
add
imul
sbb
push
enter
mov
fmul
cmp
sbb
test
(bad)
and
inc
sbb
push
cmp
push
mov
aam
(bad)
xchg
jbe
mov
xor
pop
cdq
mov
cmp
mov
cs
out
jmp
push
or
add
or
ss
push
sahf
lahf
adc
adc
dec
pop
and
stos
movs
jl
sbb
mov
sub
lods
mov
xchg
fnstenv
push
shr
ds
iret
loopne
rol
jo
lods
dec
scas
jle
addr16
movs
imul
dec
jno
jl
and
pop
cmp
(bad)
add
adc
pop
aas
scas
mov
dec
fstp
jg
test
arpl
pusha
or
push
jo
jne
pop
add
mov
pop
rcr
fstp
pop
cdq
fistp
xlat
stos
xor
sbb
scas
ror
imul
adc
mov
pop
xor
inc
sahf
or
jg
inc
sub
sbb
imul
aas
and
sub
call
adc
push
clc
mov
jecxz
inc
imul
popa
(bad)
pop
mov
fidivr
push
or
mov
lods
mov
out
fstp
test
xlat
or
push
sub
ret
or
std
mov
test
aas
and
and
dec
mov
push
ja
iret
xchg
mov
in
popf
jmp
call
(bad)
fistp
(bad)
loope
dec
out
mov
jle
inc
ins
imul
pop
pop
shr
sahf
sbb
sub
jns
maskmovq
les
mov
dec
sahf
xor
cmps
push
loop
cs
aad
sub
lods
into
into
pop
cld
retf
cmp
jmp
hlt
scas
xchg
mov
mov
push
inc
and
push
push
xchg
inc
int
push
fidivr
pop
test
das
lock
jge
pop
int3
push
jbe
xlat
fstp
jmp
pop
mov
call
loope
xchg
mov
ins
out
(bad)
int
mov
fwait
es
shl
arpl
and
aam
pop
add
dec
lock
jg
pop
jg
div
cmp
popa
xchg
repz
outs
out
jae
mov
mov
adc
imul
jns
mov
arpl
in
stc
mov
cmp
or
xchg
lock
adc
ret
out
adc
ins
pop
loope
mov
stos
mov
ins
dec
xchg
adc
cmp
cmc
inc
lock
cmp
(bad)
push
push
mov
sub
pop
imul
jno
add
add
cmc
push
movs
fcompp
mov
test
mov
cmp
(bad)
sub
(bad)
das
dec
xchg
push
test
pop
in
mov
mov
out
xchg
xchg
lahf
xor
and
mov
fist
into
sbb
je
ja
cmp
pop
stos
jno
push
adc
shl
add
cwde
pop
pop
add
push
xchg
adc
dec
xor
call
push
xchg
xchg
lea
hlt
rol
xchg
jmp
pop
xor
in
inc
mov
imul
jns
(bad)
aas
pop
adc
push
int
mov
sbb
jae
pop
test
es
lea
mov
push
enter
push
add
(bad)
cmp
xor
pop
jo
dec
int3
xlat
mov
push
fld
push
outs
dec
loopne
dec
test
cdq
inc
jae
xchg
inc
fs
xor
pop
pop
scas
mov
cmps
fs
mov
int3
daa
push
push
mov
push
cwde
movs
pop
or
aad
sub
mov
enter
scas
scas
cld
bound
or
in
xchg
add
jg
push
add
fsub
jae
call
jno
inc
pop
(bad)
xchg
push
add
and
mov
xchg
mov
cmps
stc
jnp
inc
cmp
mov
mov
pop
or
mov
psubw
xchg
inc
jae
cmp
mov
call
inc
lods
movs
jae
mov
adc
inc
push
dec
push
inc
mov
test
ins
imul
adc
cli
push
cld
jns
mov
or
popf
sbb
add
mov
in
xchg
cmp
add
jle
mov
dec
adc
in
mov
stos
add
jb
jbe
xor
xor
clc
sti
mov
data16
xchg
pop
sti
stc
cmp
add
(bad)
neg
mov
stos
ret
push
imul
xchg
jb
ds
pop
xor
mul
sahf
punpcklbw
scas
or
in
dec
pop
mov
pop
add
out
or
outs
hlt
push
inc
les
sbb
push
sbb
hlt
(bad)
cmp
ins
(bad)
js
bound
push
test
push
aad
stc
sbb
js
retf
ror
or
jmp
adc
mov
ds
mov
xchg
jbe
fs
retf
stos
cwde
xor
(bad)
(bad)
jecxz
mov
mov
repz
fimul
xor
scas
shl
mov
jmp
in
(bad)
cld
dec
leave
outs
cmps
fadd
push
jnp
sti
cwde
call
icebp
pop
mov
(bad)
jns
sub
xchg
addr16
int
mov
pop
sub
xchg
jae
mov
lahf
sub
xchg
xchg
add
and
movs
mov
xchg
jmp
daa
adc
xor
loop
lods
das
adc
jmp
cmp
cmp
adc
cmp
jp
les
sub
popa
ret
jp
(bad)
cmp
cmp
imul
into
lds
jne
jg
pop
aaa
int
les
xchg
fdivr
loopne
js
and
out
mov
sar
retf
sar
and
pop
push
(bad)
and
mov
clc
add
add
gs
xor
fsub
lods
ins
sbb
mov
cmc
mov
mov
xchg
mov
xchg
push
mov
std
sbb
adc
mov
push
or
mov
sub
pop
add
in
lea
sahf
xor
xlat
or
(bad)
bound
cwde
pop
data16
(bad)
pop
dec
sti
movsx
mov
nop
jnp
lods
cmp
ins
popf
ss
xor
bound
(bad)
cdq
inc
lahf
cs
shl
call
mov
push
push
sbb
pop
or
inc
js
sub
xlat
inc
int
jns
test
rcl
lea
xchg
fwait
and
or
push
jae
iret
das
jecxz
mov
cmps
in
pop
cmc
lods
push
arpl
mov
out
shl
(bad)
data16
jnp
ffree
div
jno
sub
repz
ret
loop
add
js
pop
inc
cmp
pop
cmps
sub
push
nop
add
xchg
xor
sbb
sub
add
stos
mov
mov
call
mov
mov
mov
out
popf
test
sub
add
lods
fcmove
sbb
cli
outs
ja
sbb
mov
sub
jmp
xchg
sub
jbe
test
sbb
mov
fwait
out
xor
mov
jg
int3
rcl
cmp
ret
ret
xchg
test
sbb
popf
stos
test
rcr
xor
jae
and
mov
setns
and
jmp
sub
cmp
pop
int
loop
dec
fistp
pop
jp
lods
(bad)
mov
jbe
pop
dec
inc
mov
sbb
clc
lahf
scas
loop
push
mov
into
(bad)
adc
out
mov
daa
call
(bad)
pop
pusha
adc
xchg
movs
jge
sbb
push
aas
push
sar
sub
rol
sbb
shr
adc
jmp
and
pop
push
cmp
mov
jno
or
jmp
movs
rcr
mov
xor
push
in
mov
fbstp
mov
or
sbb
neg
mov
fnstenv
jns
fadd
dec
data16
xor
ret
loopne
fcmovnbe
add
pop
stc
mov
push
imul
xor
mov
push
dec
fstp
xor
stos
xchg
lds
jnp
mov
(bad)
xor
into
adc
imul
lods
loop
icebp
idiv
outs
imul
and
jp
fild
add
sbb
fisttp
dec
jno
mov
retf
pop
xchg
fs
jl
arpl
dec
xchg
push
adc
push
push
aaa
shl
cmc
cmps
push
mov
(bad)
adc
mov
push
jb
icebp
leave
mov
mov
sub
aas
loop
or
rcr
push
js
and
push
push
xchg
mov
pop
imul
(bad)
icebp
imul
leave
cmps
cwde
inc
fwait
cmp
sbb
sti
mov
stc
shl
sub
fs
add
adc
dec
push
test
(bad)
loop
cmp
dec
loopne
data16
adc
inc
jne
jp
mov
adc
call
xlat
fisttp
xor
mov
sbb
xchg
mov
pop
or
int3
fsub
mov
mov
arpl
(bad)
xor
or
xor
dec
mov
adc
sub
add
shl
jge
add
fwait
pop
sbb
cs
mov
mov
mov
mov
inc
adc
iret
test
(bad)
stc
les
js
fcomp
jae
add
cmps
daa
sbb
inc
sbb
ds
movs
std
adc
sahf
pop
or
xor
cli
pop
xor
ffree
cmp
sub
mov
jmp
or
dec
imul
mov
cmp
xchg
(bad)
(bad)
loope
jp
pop
fisub
idiv
mov
adc
out
stos
or
and
(bad)
add
cmp
and
xlat
or
inc
add
mov
jae
retf
push
(bad)
or
mov
sbb
stos
adc
psubsb
add
pop
xor
retf
xchg
dec
fnstsw
movs
push
addr16
push
push
xchg
shl
inc
test
frstor
nop
out
ins
mov
add
shl
inc
imul
nop
daa
jmp
(bad)
jmp
rcr
jp
pop
adc
dec
hlt
mov
push
xor
jne
inc
adc
inc
push
shr
lea
outs
sar
fiadd
(bad)
xchg
enter
fstp
xchg
xor
fucomi
xor
cwde
fsub
xchg
inc
cld
jo
arpl
xor
xor
jns
and
into
clc
jae
push
xor
sub
jle
fidiv
push
inc
cli
arpl
xchg
inc
hlt
cdq
mov
icebp
mov
inc
int3
dec
cmps
jmp
inc
and
out
xchg
jge
mov
int3
push
stos
cmc
int3
idiv
call
sti
inc
pop
jg
fcom
(bad)
dec
pop
arpl
pop
imul
gs
jp
sti
gs
test
(bad)
int
nop
sub
in
pop
xchg
fldenv
neg
adc
in
ins
cld
sahf
sbb
or
xor
fcom
cmp
jl
ja
jmp
jge
inc
mov
xor
jmp
jmp
pop
xor
dec
xor
(bad)
shl
or
jmp
repnz
pop
push
jp
xchg
jbe
bound
test
ss
les
or
repz
lock
push
dec
pop
add
shl
mov
inc
stos
mov
addr16
jl
mov
arpl
jmp
push
cld
mov
push
and
jo
jns
fdivr
daa
aas
push
leave
int3
adc
dec
sbb
iret
xor
or
sbb
stc
lock
mov
mov
xlat
jge
sti
cmp
mov
fbstp
xchg
icebp
mov
pop
pop
mov
mov
jne
movs
adc
mov
scas
inc
arpl
dec
inc
(bad)
cdq
mov
push
pop
outs
loop
push
out
xchg
adc
out
jne
rol
aam
mov
fisttp
add
or
mov
xor
leave
movs
jno
stc
stos
pop
lock
dec
pop
and
jge
pop
inc
lea
push
jp
cmp
sbb
push
daa
mov
cmp
add
pushf
dec
mov
mov
in
leave
jo
inc
sbb
test
pop
xchg
cmp
shr
dec
sub
inc
and
cmp
xor
popf
je
inc
push
js
jnp
mov
addr16
jge
pusha
jmp
pop
iret
and
cmp
push
mov
stos
idiv
out
aas
push
movs
pushf
xchg
adc
inc
mov
(bad)
outs
addr16
fsubr
fimul
sahf
inc
dec
dec
test
mov
and
stos
or
mov
stos
cmp
jnp
call
test
mov
pop
leave
jmp
mov
mov
not
(bad)
popa
inc
fwait
neg
mov
std
mov
jmp
fld
xchg
cmps
(bad)
mov
ins
add
out
cmps
adc
shl
dec
mov
out
add
mov
dec
mov
test
sbb
mov
xchg
lea
lock
loope
inc
sbb
sbb
pop
aam
hlt
mov
push
mov
lds
inc
cli
dec
ret
pop
cmp
jp
out
push
sub
pusha
out
or
sub
data16
xchg
xor
or
lods
or
jno
aad
(bad)
enter
sti
mov
outs
test
mov
mov
in
out
jge
mov
mov
ja
add
bound
jp
int3
lahf
sahf
jo
stos
aas
mov
lods
std
lds
pop
xchg
and
popf
(bad)
sti
sbb
jbe
sbb
dec
push
clc
mov
mov
outs
mov
inc
mov
(bad)
nop
jns
dec
or
gs
jb
lock
dec
gs
mov
dec
lahf
fidivr
or
iret
mov
into
cld
leave
rcr
out
pop
dec
sbb
fisttp
inc
in
xchg
xchg
aad
imul
xor
push
mov
pop
retf
aaa
mov
dec
int
repnz
cmp
or
cmc
mov
jne
jbe
rcr
pushf
test
mov
mov
mov
pop
aaa
mov
outs
clc
repnz
ror
in
jno
cli
retf
mov
jb
ins
fld
fdiv
or
mov
sar
mov
ss
jo
sub
pop
popa
mov
jne
and
add
repz
lods
cmp
add
ins
in
add
push
mov
test
pop
push
sub
ds
and
pusha
cmp
aaa
retf
and
xchg
je
push
loop
jg
fcmove
inc
out
xor
sub
in
enter
jmp
xchg
sbb
mov
neg
or
retf
and
xor
outs
and
xchg
aas
imul
cmp
and
arpl
add
mov
xchg
push
test
add
push
and
mov
lods
or
and
pcmpeqd
pop
pop
add
call
shl
mov
(bad)
push
movs
cmp
dec
or
adc
out
and
into
jae
jmp
sbb
call
ret
and
(bad)
mov
cmp
data16
fcomp
out
sub
xchg
ins
mov
adc
fchs
push
es
sub
or
je
sbb
jmp
xchg
jmp
add
sbb
mov
sbb
and
(bad)
mov
jmp
fdiv
push
push
sbb
mov
stc
sub
jne
xor
pushf
cmps
daa
mov
cld
call
sbb
test
pushf
inc
shl
loopne
or
std
lock
clc
in
dec
out
shr
mov
aad
jno
jp
test
jno
cli
retf
lock
push
jnp
mov
mov
out
lea
fsub
dec
sub
pop
int
in
aas
mov
jae
cmp
and
test
out
and
icebp
xchg
push
popa
add
loope
xchg
outs
repz
or
add
and
jo
or
and
inc
pop
mov
pop
(bad)
stos
popf
mov
pop
xchg
daa
shr
mov
jbe
jmp
in
mov
xchg
cmp
shl
mov
inc
pusha
gs
sub
test
mov
retf
inc
add
and
add
xor
pop
sbb
jl
ficom
adc
cmp
xchg
ins
or
arpl
sub
push
cmp
scas
jmp
inc
push
mov
add
mov
sub
add
(bad)
daa
lahf
out
stos
or
sahf
jmp
jns
cmp
imul
fistp
imul
push
xchg
cmc
nop
(bad)
leave
xor
lock
inc
ins
aad
push
out
sub
mov
jmp
and
call
dec
jp
jl
mov
ja
sbb
xor
(bad)
or
lock
pop
test
call
mov
fmul
ret
cmps
mov
cmp
lods
jle
outs
mov
pushf
loopne
dec
cmp
add
push
loope
push
mov
or
inc
dec
pusha
and
(bad)
data16
arpl
out
fstp
and
cmp
jno
scas
(bad)
mov
aaa
(bad)
into
popa
jmp
xchg
stc
push
mov
int
dec
push
push
ror
fisttp
jmp
xor
out
adc
(bad)
adc
cmp
in
sahf
bound
je
dec
test
jmp
jg
cdq
jb
ins
fsubr
cmp
mov
mov
aam
(bad)
or
mov
or
fild
pushf
ss
pop
mov
loop
outs
mov
mov
mul
test
(bad)
into
or
jns
xor
cli
das
mov
test
dec
dec
and
gs
mov
xor
scas
sbb
jecxz
dec
cli
imul
sub
call
scas
stos
in
cmp
ins
dec
xor
sub
mov
cmps
movs
sub
mov
mov
jp
adc
fwait
iret
outs
push
loopne
mov
movs
sub
sbb
mov
xchg
jne
pop
ins
into
jmp
ficom
dec
dec
pop
push
sahf
xchg
or
popa
cs
ret
inc
mov
aam
inc
jge
sbb
(bad)
adc
aad
ficom
inc
jne
mov
adc
push
hlt
dec
pop
inc
out
add
cli
fisubr
popf
clc
fwait
sub
sti
popf
mov
(bad)
sbb
cld
jg
jp
add
int
ins
mov
aas
mov
imul
inc
into
xchg
std
daa
add
ins
out
mov
and
sahf
div
pop
adc
sub
mov
cwde
stos
pop
sub
imul
mov
dec
adc
(bad)
cmp
pop
dec
std
jae
les
mov
jns
cmp
jle
jno
and
jno
jmp
dec
movs
mov
les
pop
lock
or
pushf
les
add
lock
or
xor
dec
stc
cs
call
and
lods
sbb
cmp
ror
es
fbld
fldenv
mov
pop
and
pop
push
ret
retf
inc
sub
jl
mov
sub
and
in
out
mov
push
and
mov
xchg
pop
cmp
enter
cmp
and
xor
adc
jl
ss
inc
loope
xchg
jns
pop
fwait
jmp
fcomp
jb
xor
xor
mov
jg
sbb
xor
out
sub
in
jle
sub
mov
adc
jecxz
lea
addr16
pusha
cmp
mov
dec
and
xor
dec
stc
lds
je
or
ret
and
ins
dec
jecxz
cs
jne
into
inc
mov
and
fwait
cmc
xor
sub
cwde
adc
xor
sub
in
mov
jle
xchg
bound
push
cmova
stos
jns
mov
ret
jb
adc
dec
imul
mov
das
iret
mov
adc
or
inc
push
and
ret
or
xor
or
or
nop
jg
hlt
inc
cdq
push
mov
pop
enter
and
fistp
(bad)
add
mov
call
adc
into
and
or
push
or
(bad)
and
pop
shl
adc
out
dec
shl
xchg
ins
pop
push
push
add
xchg
sub
js
cmp
int
xor
or
sub
jno
jbe
inc
(bad)
sub
movs
add
aad
sub
and
jbe
inc
inc
xchg
cmp
in
cmc
movs
aad
mov
mov
cmps
cmp
addr16
leave
(bad)
push
cs
sbb
pop
outs
aam
xchg
or
sub
dec
lods
pop
dec
ds
inc
daa
xor
aas
adc
or
push
adc
imul
iret
jle
sbb
pop
add
lods
sub
mov
jne
inc
add
push
daa
adc
lods
sbb
cmps
dec
fstp
out
aas
stc
into
cmp
or
xor
outs
pop
outs
rol
cdq
retf
inc
aas
mov
sar
imul
and
outs
mov
inc
sub
and
push
int3
xor
arpl
mov
out
repnz
pop
xor
sbb
rcl
xchg
push
(bad)
sar
jecxz
and
das
lahf
aad
mov
call
push
add
sbb
loope
mov
sti
mov
and
and
out
fxch
aas
retf
(bad)
call
add
out
nop
pop
retf
cmc
push
inc
rcl
mov
pop
cmps
cwde
sbb
mov
inc
leave
fcom
cmc
ins
nop
push
or
fld
and
out
daa
jns
(bad)
dec
push
test
movs
scas
inc
call
jno
or
cmc
jecxz
mov
adc
pusha
popa
or
outs
call
call
fcomi
das
sahf
aam
fwait
aaa
scas
pop
popa
mov
dec
out
sar
pop
loope
(bad)
in
jge
dec
sub
inc
repz
imul
mov
out
push
sub
xor
xchg
(bad)
test
mov
test
push
(bad)
iret
movs
inc
in
cmp
fiadd
adc
mov
pop
xchg
cs
movs
pushf
xchg
fisubr
hlt
xor
cmp
unpckhps
jg
je
icebp
ins
jl
jmp
addr16
pop
fisub
stos
push
pop
or
mov
mov
mov
xor
stos
xor
in
add
test
ins
in
leave
mov
jp
xchg
jne
cmc
mov
ss
test
pop
ja
jecxz
mov
setae
inc
cmovns
sub
sbb
push
jge
in
ret
sub
aam
and
or
push
leave
jl
inc
adc
and
iret
in
push
push
or
test
lahf
jg
ds
mov
cmp
add
cmps
pusha
into
mov
sub
ss
cmp
in
cmp
push
retf
jbe
ss
cmovge
test
xchg
push
mov
daa
or
jge
shl
shl
fwait
in
inc
mov
sub
cmps
sbb
clc
mov
addr16
es
mov
popf
sbb
pop
ja
jae
bound
lds
pop
ficomp
jle
push
movs
adc
sbb
mov
ror
dec
lods
add
sbb
imul
aad
push
mov
aas
jno
dec
dec
popa
es
mov
xor
mov
sub
stos
aad
mov
fst
ins
fistp
sbb
xor
ins
lods
out
push
(bad)
and
sub
push
jp
mov
aaa
sub
add
(bad)
and
add
xor
dec
out
adc
movs
jecxz
pop
in
enter
and
add
and
mov
aaa
mov
cmps
jmp
js
sbb
xchg
sbb
cli
dec
std
inc
std
rcr
lock
loop
sub
xchg
ins
jb
pop
data16
ficom
cmp
leave
or
add
inc
fwait
xor
adc
cmp
xor
and
daa
fsub
mov
cmps
jb
jne
fild
pop
jl
sub
mov
jnp
mov
aam
pop
and
jge
and
jmp
in
sub
rcl
mov
pop
lea
hlt
loopne
fs
loopne
mov
arpl
test
fcom
cmps
inc
into
call
adc
xchg
xor
fwait
in
pop
mov
inc
and
adc
loop
ds
push
(bad)
jb
sbb
ins
icebp
retf
jp
inc
jae
paddsb
pop
dec
fwait
and
lods
push
adc
stos
push
push
xor
sar
cmp
arpl
xor
das
cmp
sbb
xchg
sbb
sbb
(bad)
in
neg
ins
retf
sbb
pop
jle
and
dec
cmp
popa
outs
push
mov
sub
ret
mov
dec
xchg
sub
cmc
pop
mov
and
pushf
jmp
and
int3
mov
hlt
pop
adc
and
shr
mov
(bad)
ja
inc
push
(bad)
repnz
mov
xor
pop
nop
pop
add
test
ror
jns
pop
aaa
pop
into
xlat
scas
idiv
call
and
jl
sub
lods
pop
sub
mov
jbe
stc
jecxz
cmp
xchg
sub
(bad)
mov
xor
xchg
mov
sub
mov
fld
mov
shr
xchg
xchg
dec
sub
stc
cmovns
outs
push
stos
in
sti
push
xor
or
(bad)
cmp
inc
push
cmp
scas
or
in
adc
js
fidiv
mov
dec
add
dec
arpl
ss
mov
or
and
pusha
aaa
mov
fild
inc
or
lods
shl
pop
add
mov
sub
and
inc
or
pushf
js
lock
adc
and
jmp
loop
mov
test
aam
inc
sbb
inc
adc
mov
mov
push
scas
xchg
pop
jp
pop
pop
ds
ja
mov
mov
pop
xchg
rcl
in
mov
jp
repz
and
and
mov
test
(bad)
mov
mov
div
xchg
jg
movs
push
xor
jge
sbb
sti
daa
jmp
ret
push
(bad)
mov
dec
mov
lahf
xor
and
out
loope
mov
dec
es
xchg
push
test
mov
leave
mov
push
arpl
(bad)
dec
arpl
xlat
jmp
das
repnz
xchg
xor
movs
add
cld
ins
movs
mov
out
xchg
test
pop
jae
int3
sub
pushf
out
inc
or
test
sbb
fcom
sub
es
dec
cmp
xchg
test
push
in
cmp
sbb
test
mov
rcl
xchg
and
shl
ror
popa
jge
jns
push
xlat
stos
push
adc
mov
xchg
xor
push
or
(bad)
cmc
and
sbb
jb
mov
fadd
mov
jns
hlt
jecxz
loopne
jnp
shr
adc
xchg
movs
mov
ds
(bad)
pop
jg
pop
and
repz
xor
sub
or
lock
adc
mov
in
cmp
js
(bad)
movs
mov
pop
push
(bad)
mov
pop
xchg
std
call
lods
xor
jg
push
or
ja
inc
xor
xlat
hlt
aam
retf
sbb
popf
dec
iret
fstp
sbb
rcr
sbb
xchg
mov
in
jl
cmc
push
mov
xchg
cmc
push
inc
push
nop
loope
xchg
rol
mov
arpl
jge
sub
(bad)
in
xchg
clc
or
icebp
push
stos
shl
jbe
mov
inc
nop
test
pushf
xlat
push
cmp
pop
pop
(bad)
out
popf
sbb
jecxz
test
sub
clc
push
ds
adc
pop
xor
xor
ret
or
push
jae
push
dec
jmp
ret
sub
inc
lock
push
jle
jecxz
sti
inc
fimul
mov
ret
ja
repnz
cmp
sub
xchg
dec
cmps
movs
(bad)
dec
fldcw
ja
mov
les
or
inc
inc
add
mov
or
jp
ror
mov
ss
pop
pop
jns
imul
loopne
mov
loope
icebp
mov
fidivr
enter
clc
push
sbb
pop
adc
pop
jno
mov
mov
repz
jne
mov
xchg
or
fimul
int3
(bad)
xchg
push
or
seta
fndisi(8087
aam
cli
or
call
fxtract
xchg
mov
cmps
mov
cmc
xchg
pop
dec
call
xchg
retf
add
inc
outs
xor
cmps
sar
shr
sbb
retf
arpl
pop
xor
xchg
fs
mov
fistp
cld
loopne
xor
pusha
push
loop
jp
ja
iret
sub
out
xor
das
xlat
xchg
out
jg
daa
mov
mov
stos
sub
dec
lods
fbstp
mov
cmp
arpl
cmps
and
stc
in
pushf
or
push
push
stos
lods
mov
retf
jns
pop
xor
or
mov
bound
sub
mov
pop
lock
stc
retf
cwd
scas
movs
mov
add
leave
ss
sub
mov
sbb
int
dec
in
pop
jmp
jae
aas
xchg
sbb
fiadd
jp
cmp
js
mov
jge
and
test
fidiv
and
test
call
and
std
stos
and
inc
jno
sbb
loop
mov
sbb
sbb
test
fmul
test
ds
outs
mov
cmps
mov
aas
sar
sub
icebp
ins
pusha
adc
(bad)
stos
mov
push
test
popf
sub
mov
pop
pop
xor
lds
fidiv
js
out
pusha
retf
inc
jecxz
cs
call
jmp
push
ss
mov
aam
cmc
sbb
js
push
adc
ret
mov
dec
mov
rol
dec
jo
and
add
push
mov
fsubr
js
mov
aaa
ss
mov
popf
fidiv
out
daa
js
rol
jae
test
imul
or
(bad)
sub
scas
cmp
aas
cmp
repnz
nop
jne
push
add
scas
jp
enterw
out
pop
xchg
adc
dec
jl
shl
add
mov
repnz
xchg
xchg
mov
or
sub
mov
(bad)
popa
popf
shr
xor
leave
out
fist
je
dec
sub
or
sbb
fs
push
popf
fnsave
pop
jmp
sbb
call
adc
add
adc
xchg
adc
fadd
test
ror
inc
out
fcomp
inc
cmp
cmp
scas
and
ds
fnstsw
dec
outs
pop
iret
mov
das
push
and
nop
sub
xchg
clc
test
mov
or
ret
into
add
push
fwait
jne
and
adc
and
lods
retf
cmps
inc
mov
scas
ds
mov
not
sub
daa
shr
mov
sahf
sub
bound
cmps
sbb
ret
jmp
das
pop
jae
sbb
pop
(bad)
mov
pop
les
in
sub
fs
xor
out
and
test
ins
call
jecxz
test
inc
xor
cmp
icebp
or
sub
xchg
cmp
leave
pop
mov
push
inc
sub
and
aas
loope
jns
mov
push
les
das
fidivr
sbb
lods
adc
sbb
mov
cmps
pop
pop
mov
push
(bad)
push
mov
inc
xchg
outs
adc
sbb
or
and
rcr
and
jbe
mov
xchg
push
cld
test
fcom
je
jle
xor
mov
sbb
push
mov
aaa
popa
and
inc
pop
pop
mov
movs
js
or
xchg
out
cmp
inc
xor
xchg
add
(bad)
xlat
movs
jne
(bad)
sub
and
pop
pop
push
das
jmp
mov
ret
xor
mov
movs
in
mov
(bad)
ds
sub
mov
loopne
jo
adc
test
pop
imul
test
stc
mov
cmps
xchg
sub
ds
xor
jp
frstor
scas
mov
int
xchg
(bad)
push
or
adc
adc
xor
mov
ret
cmp
outs
call
or
movs
xchg
shr
in
(bad)
daa
dec
or
push
dec
mov
mov
push
xchg
or
ret
cmp
mov
icebp
adc
pop
jge
mov
xchg
scas
mov
adc
js
std
in
push
inc
inc
jbe
stos
dec
sub
pop
repz
loope
ret
js
das
ds
add
lock
icebp
adc
pop
push
sbb
cmp
test
adc
inc
push
xchg
dec
sub
les
xor
adc
aam
xor
scas
xchg
stos
cmp
sbb
cld
clc
enter
out
out
xchg
ror
xor
push
ret
pop
xchg
cmp
push
cmc
mov
cwde
movs
jne
sbb
lods
or
push
mov
inc
mov
int3
xchg
push
mov
dec
inc
mov
div
scas
and
add
push
repnz
in
push
aad
fst
jecxz
scas
sbb
test
lds
dec
stos
mov
call
sbb
and
test
stos
mov
inc
pop
inc
cmp
lods
jno
mov
push
pop
push
icebp
xchg
in
iret
std
push
test
ffree
fst
inc
fst
enter
and
xor
in
test
or
enter
(bad)
pushf
mov
outs
ss
cs
jmp
mov
cmp
mov
int3
out
out
lods
test
nop
rol
pop
mov
dec
lock
push
and
sbb
push
leave
add
rol
fcom
aas
std
jbe
xor
les
cmc
cmp
jmp
inc
pop
inc
repz
sti
daa
xchg
jnp
cmps
xor
jp
mov
dec
adc
(bad)
mov
ins
sub
add
mov
shl
jge
cld
dec
repz
xchg
xchg
and
mov
mov
(bad)
movs
pop
inc
jne
push
xchg
inc
push
js
retf
pop
push
push
push
jg
mul
push
pop
push
or
mov
jne
clc
fmul
pop
ds
sub
adc
cmps
and
js
mov
cmp
and
fcmovnbe
push
push
sbb
adc
out
out
inc
sar
das
fisubr
pop
and
and
or
xor
(bad)
nop
bound
out
sbb
(bad)
jecxz
in
sbb
les
aam
jns
pop
jne
outs
and
inc
and
outs
pushf
pop
nop
push
push
sahf
sub
fmul
inc
cmps
arpl
sbb
arpl
dec
sbb
xchg
cmp
call
push
jp
out
in
add
movs
mov
inc
xchg
int
in
adc
cmp
jle
rol
or
mov
sbb
xchg
sbb
dec
fs
add
add
xor
mov
dec
fnstcw
std
cmp
push
cmc
pushf
and
test
mov
mov
cmp
out
or
out
cmps
push
inc
push
dec
scas
xchg
mov
jae
loope
clc
dec
cmp
jp
mov
fs
sbb
xlat
push
sub
sahf
add
stc
mov
xor
push
cli
pop
pop
scas
nop
inc
dec
rcr
sub
(bad)
cli
aam
shl
mov
cmp
(bad)
loopne
call
mov
cmps
movs
aaa
mov
sub
int
sub
xlat
pop
sub
fwait
cmp
jg
dec
mov
or
stc
fidiv
mov
(bad)
cli
adc
dec
xor
lods
imul
popa
pop
cmp
dec
push
or
mov
sbb
divps
pop
mov
inc
and
call
frstor
mov
mov
and
in
ja
jmp
xor
and
fld
push
pusha
mov
jecxz
sub
mov
jns
hlt
dec
mov
or
jge
mov
ss
xacquire
mov
mov
in
mov
dec
inc
and
adc
mov
(bad)
out
in
pop
imul
sbb
push
nop
xor
jge
dec
fwait
popf
std
fsubr
sbb
rcr
push
jne
iret
push
cli
(bad)
sbb
jmp
mov
in
xor
sbb
sub
sbb
iret
shr
ja
jns
push
iret
sbb
ficom
sti
mov
fucomp
push
out
rol
pop
jg
fcomp
loopne
lds
push
ffreep
adc
scas
push
xor
call
and
add
repz
sub
jecxz
lock
push
jbe
jge
mov
mov
and
or
jne
adc
jo
in
cmp
mov
jo
push
add
mov
xchg
popa
sub
pushf
lods
pushf
mov
cli
out
or
or
stos
test
enter
cmp
test
mov
push
mov
xchg
inc
pop
mov
outs
mov
cmp
imul
test
clc
sub
repnz
jecxz
stos
xchg
imul
hlt
cld
inc
lea
mov
cli
inc
aad
inc
or
push
mov
das
jp
(bad)
cmp
es
cmp
arpl
or
xchg
dec
xor
mov
cdq
mov
(bad)
(bad)
xor
inc
adc
sbb
or
enter
pop
mov
aad
call
push
retf
cdq
push
and
(bad)
jbe
js
test
dec
push
fcomp
hlt
loop
mov
jnp
iret
push
or
ret
fwait
add
push
neg
mov
mov
je
mov
xchg
mov
cmp
leave
dec
popa
add
not
nop
shr
cmp
div
push
mov
test
les
or
dec
stos
mov
shl
outs
div
addr16
xlat
arpl
cmp
mov
adc
(bad)
out
push
scas
mov
ret
sahf
scas
mov
mov
test
icebp
aam
mov
inc
xchg
pop
inc
jp
and
and
push
pop
loope
push
inc
adc
bound
cmp
xchg
jae
xchg
js
pop
adc
pop
ss
xchg
sbb
nop
push
ds
inc
add
xor
xchg
stos
out
inc
pop
daa
iret
jge
shr
repz
and
push
fidivr
adc
mov
or
xchg
or
cmps
and
test
sti
add
cld
xchg
jno
(bad)
in
shl
and
shr
mov
jns
neg
mov
push
fidiv
push
jle
(bad)
pusha
lods
mov
lds
sub
xor
pop
xor
xchg
adc
ds
outs
push
loopne
cmp
fstp
repnz
sti
popf
int
dec
jp
movs
call
sti
ss
dec
xchg
cmp
cmp
push
ficomp
call
jle
ja
stos
jl
cmc
shl
push
pop
mov
out
ja
es
push
test
xor
jl
or
les
movs
fcomp
dec
or
lahf
jbe
lods
and
outs
ret
scas
dec
out
jae
dec
sahf
fcom
stc
sar
mov
cmp
pop
adc
pop
rcr
xor
sar
sub
int3
mov
scas
into
sbb
nop
dec
pusha
push
or
push
test
push
push
push
mov
lods
mov
sub
inc
lods
jns
rcl
(bad)
jae
retf
push
call
call
jne
pushf
mov
call
xchg
shl
(bad)
push
lods
mov
scas
dec
addr16
ss
ret
fwait
jg
xchg
das
or
xor
cmp
cmps
dec
xchg
jg
call
rcr
jge
shl
and
pushf
mov
cmp
adc
push
or
and
add
push
mov
div
mov
dec
inc
mov
outs
mov
stos
fwait
dec
lods
pop
cli
dec
ret
jge
push
mov
and
nop
gs
popf
sar
adc
pop
sar
add
push
pop
mov
sub
add
xlat
inc
or
out
ret
fild
out
sar
aas
pop
fisubr
call
cmps
and
sahf
scas
mov
dec
rcl
and
sti
inc
movs
adc
(bad)
sub
adc
pushf
and
push
imul
xchg
or
pop
in
mov
movs
cs
jae
lds
mov
push
and
out
push
jmp
outs
xor
adc
add
aad
xor
(bad)
(bad)
push
icebp
sahf
sub
js
hlt
retf
inc
fsubr
imul
fistp
sub
and
adc
push
call
fisttp
lock
xchg
shr
repnz
and
mov
push
(bad)
mov
and
and
cmp
sub
inc
sub
push
or
loope
xlat
fsubr
aad
cmp
ja
out
adc
xlat
dec
fdiv
mov
push
xlat
(bad)
xor
lods
pop
jae
mov
mov
add
mov
fidivr
ret
and
dec
adc
loop
jp
inc
pop
outs
dec
ins
jge
fmul
and
sbb
push
xchg
popa
into
jno
xchg
mov
lods
mov
pop
pop
fs
pop
fcmovne
leave
stos
xchg
jns
in
mov
outs
scas
ficomp
cs
lea
xlat
cmp
dec
dec
and
jmp
jle
addr16
iret
add
mov
jb
ins
pop
push
inc
inc
pop
push
nop
sub
sbb
mov
ins
jae
(bad)
push
nop
bound
adc
xchg
xlat
xchg
iret
mov
hlt
lahf
cmp
pushf
push
pop
clc
not
jno
jo
cmp
mov
in
into
pop
push
or
popa
mov
lock
mov
xor
das
mov
add
pop
(bad)
(bad)
outs
and
sbb
jb
scas
arpl
shr
(bad)
(bad)
dec
sub
aas
xor
and
out
mov
pop
xchg
xor
pop
push
mov
jo
dec
jmp
inc
scas
ret
xor
dec
test
mov
daa
inc
cmc
sub
in
lea
jecxz
fisub
ins
sub
aaa
popf
stos
retf
ret
and
sub
add
pop
(bad)
lods
jge
movs
sbb
mov
ja
rol
fwait
adc
call
div
mov
ret
and
mov
mov
ja
fild
ret
push
outs
pop
mov
fabs
sbb
sbb
mov
outs
mov
push
and
out
enter
and
test
pop
es
icebp
sbb
adc
mov
jns
sar
fwait
mov
out
push
pop
mov
sahf
stc
movs
sub
add
out
cmp
adc
(bad)
jmp
add
std
retf
sbb
mov
push
sbb
sub
mov
sbb
push
adc
mov
mov
nop
loopne
outs
inc
dec
or
xlat
inc
and
enter
ss
dec
inc
inc
lds
jno
outs
pop
cmp
and
sub
dec
and
push
pop
dec
cmp
add
inc
mov
cmp
push
cmp
cmp
inc
adc
xchg
(bad)
mov
push
sbb
lahf
sar
movs
push
mov
fistp
xchg
pop
rcr
inc
push
scas
xor
cmp
test
push
fucom
leave
out
repnz
xor
sbb
xor
sub
sbb
xchg
lods
push
lahf
add
stos
das
test
cli
jle
mov
retf
and
or
fld
nop
sti
popa
cld
push
addr16
imul
jle
jg
mov
ds
loopne
cdq
popa
sbb
cmp
lds
xor
test
mov
cmp
movs
cmp
sbb
std
mov
add
mov
shl
jle
mov
cdq
mov
pop
cmp
js
fnsave
push
jnp
pushf
mov
movs
jae
xor
mov
loope
jl
mov
mov
jns
sub
loop
mov
cmps
scas
and
out
loop
jb
stos
ins
sub
mov
lahf
fwait
push
push
lds
aad
pop
in
gs
stc
mov
xchg
mov
call
mov
std
adc
(bad)
popa
das
ja
dec
enter
mov
shrd
push
and
mov
xchg
retf
int
clc
ds
rol
retf
dec
xchg
add
fsubrp
xchg
fdivr
add
call
or
pusha
dec
addr16
cld
not
cmp
movs
aaa
sahf
in
and
push
sub
adc
or
xchg
mov
movs
cmps
push
arpl
addps
inc
(bad)
dec
loop
dec
bound
pand
push
pop
pop
ret
aas
pop
add
add
ins
and
mov
xor
aas
popf
adc
inc
ja
fwait
(bad)
clc
test
lahf
jne
push
mov
jae
inc
dec
popa
sar
aas
aam
jmp
inc
or
push
mov
dec
dec
jle
test
adc
shl
inc
fwait
cmp
sub
aam
fist
fidivr
sub
aaa
rcl
enter
sbb
jp
lahf
mov
adc
sbb
aam
daa
xchg
mov
push
mov
cmps
push
xchg
test
mov
or
push
xchg
mov
jmp
out
cli
pop
adc
popf
push
fidivr
ror
ins
inc
mov
cmp
fcom
or
push
movs
xor
mov
imul
out
in
dec
cmp
cmp
fdivr
out
ins
daa
adc
ror
mov
fcomp
cmp
xor
out
test
sti
call
dec
cdq
adc
mov
cmp
mov
cmp
cmp
mov
cmp
push
idiv
fld
pusha
jge
out
lahf
xchg
mov
jmp
rol
cmc
inc
cmp
les
stos
sub
mov
(bad)
js
or
daa
cdq
fimul
ret
mov
ret
dec
xchg
cmp
ins
or
std
jb
push
sub
jns
aam
mov
int3
jmp
lea
cs
(bad)
iret
sbb
sbb
out
adc
test
popf
mov
jne
and
ins
rcr
stos
and
bnd
jecxz
je
inc
outs
in
popf
push
inc
cmp
mov
adc
sbb
push
mov
outs
push
fs
push
gs
jl
dec
ret
add
lock
daa
dec
rcr
xlat
and
mov
inc
fidivr
or
jle
nop
fsub
and
popa
outs
std
mov
out
test
imul
pushf
jge
cmp
ins
inc
mov
push
or
out
and
dec
pop
aaa
loope
shr
cmps
mov
cmp
rol
xor
out
div
fsubr
jno
(bad)
pop
test
xor
outs
inc
int3
scas
fcmove
(bad)
jmp
mov
push
popa
mov
mov
add
push
imul
outs
mov
(bad)
inc
push
shr
xchg
xor
(bad)
aam
adc
lds
xchg
push
repz
mov
fimul
adc
sub
lahf
(bad)
imul
jo
inc
sahf
push
mov
icebp
xchg
cmovp
pop
pop
pop
ins
ret
int
(bad)
fiadd
xchg
add
and
xchg
into
pop
inc
(bad)
fmul
je
or
push
imul
sbb
(bad)
xor
pop
jns
push
movs
adc
inc
inc
rol
test
mov
imul
test
ss
pop
adc
nop
and
stos
in
loopne
cmps
pusha
out
in
repz
test
data16
mov
xchg
outs
aaa
(bad)
mov
stos
mov
inc
cwde
lock
clc
aaa
mov
push
sbb
aaa
adc
cmps
jo
js
dec
cmp
in
ror
movs
add
or
fidivr
jbe
pop
repnz
es
data16
out
or
data16
cmp
or
arpl
sub
sub
sbb
cli
pop
(bad)
jns
dec
int3
retf
inc
bt
arpl
outs
add
out
iret
push
mov
cs
pop
out
test
add
mov
inc
mov
mov
imul
jecxz
and
dec
dec
push
or
sar
sar
das
jns
xchg
dec
lea
popf
lea
icebp
sbb
aas
imul
repnz
pop
bound
rol
sti
ret
xchg
mov
imul
dec
cmp
pop
mov
sbb
jne
mov
and
pop
(bad)
fdivr
inc
(bad)
mov
mov
inc
iret
and
scas
jae
sub
mov
sbb
mov
fcmovnu
pop
mov
mov
popa
retf
jg
push
sbb
cmp
pop
ror
push
out
jne
data16
dec
cli
rcr
cmc
jge
fidiv
retf
xlat
cli
cmp
retf
jmp
inc
xchg
pop
mov
sbb
jnp
std
xchg
aaa
cmps
xor
sub
(bad)
adc
outs
fadd
and
jnp
jg
and
cld
xchg
or
inc
out
out
std
cmp
adc
add
outs
jns
sahf
cmp
cmp
jmp
mov
add
jmp
and
(bad)
test
stos
out
(bad)
xor
sbb
cmp
cmp
mov
idiv
addr16
sub
fwait
jno
add
popa
stc
sbb
mov
test
add
mov
jae
pop
adc
ror
add
loop
mov
sbb
cwde
enter
out
jne
aam
(bad)
cld
push
rcr
sub
mov
sub
test
xchg
push
xor
call
push
ret
call
sbb
pop
jbe
push
out
outs
cmp
add
xchg
add
nop
(bad)
adc
jp
sbb
mov
jno
divps
shl
pop
bswap
inc
pop
pop
push
mov
rol
jae
cli
(bad)
mov
rcl
xlat
lock
stc
outs
fwait
dec
aaa
imul
cmc
psllw
add
es
das
cmp
(bad)
retf
jne
popf
sub
sar
xlat
fcom
jno
adc
inc
int3
(bad)
out
int3
fst
mov
popa
jl
aas
push
cmp
pop
sub
ret
addr16
in
inc
adc
push
mov
into
in
stc
jne
or
ficom
mov
popa
adc
sub
or
or
fcomp
cmps
adc
xchg
retf
mov
into
mov
loopne
popa
or
xchg
inc
mov
hlt
cmp
xchg
(bad)
push
inc
aas
subps
bound
or
or
in
arpl
lea
retf
mov
lods
xor
test
out
mov
call
add
inc
jne
xor
inc
hlt
dec
jge
and
leave
out
jmp
add
shr
fcomip
aas
inc
aas
ret
sar
sti
jbe
mov
or
push
sub
cmp
push
or
bnd
xchg
popf
cld
pop
stc
sbb
inc
sub
add
cmc
sbb
enter
and
(bad)
adc
jo
div
xor
ret
inc
xchg
int3
dec
pop
adc
and
jo
outs
in
jns
cmps
push
sub
out
shl
mov
(bad)
or
mov
retf
(bad)
scas
cmp
pushf
sar
or
jg
cmp
jae
aad
enter
jbe
jecxz
in
test
adc
test
xchg
and
cli
shl
sub
rol
sub
push
lds
stos
mov
retf
stos
xchg
in
rcl
in
mov
in
bound
xor
jecxz
retf
jne
or
pop
push
add
int
daa
xor
add
out
(bad)
jecxz
jge
jge
dec
mov
push
fdiv
lea
cmp
repz
ret
clc
(bad)
dec
mov
jmp
inc
xchg
adc
mov
aaa
jg
dec
jp
lds
les
mov
jmp
neg
pop
push
jo
es
jns
mul
popa
pop
xchg
mov
mov
rcr
movs
jle
aas
jmp
xor
out
inc
cmp
pusha
popa
mov
call
or
int3
in
enter
cmp
inc
mov
adc
cs
dec
test
out
or
add
test
xchg
scas
ror
mov
and
test
sub
mov
stos
pop
ror
mov
(bad)
pop
add
push
(bad)
jl
add
pushf
jecxz
dec
aam
sbb
(bad)
dec
jge
cmp
pop
cmp
sbb
shl
mov
in
call
enter
adc
mov
adc
pop
es
mov
neg
ins
and
hlt
and
(bad)
jnp
repnz
pop
cld
pop
inc
jb
add
xchg
lods
xchg
jmp
sar
pop
fwait
xchg
call
aaa
pop
jl
cmps
xor
lea
sbb
push
inc
pusha
jnp
inc
add
xchg
data16
jmp
xlat
test
sub
pop
sbb
nop
xor
(bad)
cmp
lock
cmps
adc
pop
pop
mov
je
inc
or
popa
cmp
pop
imul
rcr
int
aam
call
xchg
or
mov
push
xchg
add
mov
cmp
jecxz
inc
mov
mov
xchg
mov
cmp
jns
ins
sub
add
add
mov
adc
(bad)
ins
cmp
mov
jmp
rcr
es
adc
or
mov
div
ror
js
std
jmp
jns
neg
dec
mov
ja
mov
xor
pusha
cld
pop
sub
cld
mov
sbb
mov
scas
xchg
push
or
and
xchg
mov
adc
and
push
js
mov
clc
jmp
arpl
cmc
cmp
(bad)
idiv
adc
out
fimul
(bad)
enter
cmp
loop
in
aas
jl
mov
push
pop
into
retf
scas
xor
fcom
shl
jle
add
ret
jl
gs
push
dec
xor
lea
mov
adc
cmp
and
(bad)
out
cdq
bound
cmc
idiv
pushf
jo
sub
mov
int3
mov
fsub
lock
test
retf
mov
fadd
xchg
je
call
xchg
fdivr
push
gs
sub
pop
jmp
push
popf
jg
sub
dec
pop
sub
dec
fisub
clc
adc
jnp
outs
int3
inc
es
and
out
mov
movzx
sbb
pusha
aaa
xor
mov
pop
pop
addr16
(bad)
xchg
mov
adc
xchg
fsubr
pop
dec
jp
mov
mov
psubsb
mov
loop
div
fcomp
icebp
pop
ror
or
inc
mov
add
inc
mov
adc
xor
out
jg
push
pop
pushf
fmul
cmp
jnp
push
xchg
sbb
mov
push
jnp
dec
xor
test
dec
mov
les
add
mov
inc
dec
and
cmp
mov
pop
cmp
fwait
js
loope
(bad)
aas
cmp
dec
fwait
aas
mov
pop
xchg
inc
shr
sbb
and
mov
dec
dec
pop
mov
cmp
jl
dec
(bad)
lods
sub
sti
cs
xor
pop
mov
(bad)
pop
shr
idiv
pop
adc
test
test
pop
inc
setae
mov
xor
dec
mov
jmp
add
lock
and
adc
test
mov
add
xor
bound
ret
lock
and
and
popa
daa
dec
xchg
adc
jp
dec
sbb
dec
fwait
push
imul
cmp
rol
test
js
adc
jmp
imul
repz
bound
in
adc
mov
xchg
test
jbe
clc
pushf
mov
mov
sbb
and
xchg
mov
pusha
ja
hlt
repz
mov
push
xchg
add
mov
mov
pop
xchg
aam
and
or
xchg
fcomp
inc
mov
and
cmp
push
push
jns
sbb
adc
test
pop
arpl
mov
pop
ret
mov
mov
daa
mov
mov
repnz
test
cmp
test
sub
neg
adc
jbe
mov
jecxz
mov
jmp
pop
add
ror
adc
mov
pop
jb
jmp
enter
mov
imul
dec
stc
int3
pop
mov
mov
mov
fimul
clc
out
popf
dec
xchg
sbb
mov
mov
test
mov
pop
add
imul
in
xor
inc
dec
cmovg
mov
shl
and
movs
mov
arpl
jg
jmp
ffreep
shr
push
nop
cmp
leave
daa
iret
outs
pop
rcl
test
pop
mov
push
cmp
and
clc
stos
or
jae
hlt
pop
or
pop
cmp
in
call
sbb
out
or
out
mov
loop
mov
jno
into
xchg
mov
jne
in
in
mov
test
(bad)
jmp
push
xor
cmps
xchg
or
stos
sbb
and
or
retf
adc
mov
or
shl
push
pop
lahf
gs
leave
xor
cmps
lods
jmp
and
repz
bound
inc
jns
out
fs
jb
xchg
inc
scas
(bad)
jo
dec
jo
dec
popa
retf
js
mov
jl
fnstsw
lds
and
inc
dec
mov
pop
loopne
cmp
in
(bad)
test
movs
in
cmc
ins
cmp
neg
and
mov
ret
inc
sti
call
jns
and
pushf
mov
clc
mov
aam
mov
sub
mov
cdq
pop
sbb
pop
fs
and
pop
neg
(bad)
test
inc
outs
cs
popf
movs
inc
gs
adc
sub
cld
push
add
cmps
mov
or
out
xchg
add
fdiv
push
cmp
loop
retf
es
movs
cmp
stc
pop
push
loop
lds
mov
(bad)
mov
mov
xlat
mov
sbb
jmp
inc
or
sahf
cli
mov
xor
call
mov
pop
retf
aas
out
and
sti
mov
cld
xchg
jle
je
loope
(bad)
fadd
jp
push
adc
nop
push
fwait
addr16
mov
jne
rcr
js
mov
sub
sub
lock
lahf
push
add
test
test
add
jle
push
jns
or
in
fimul
and
and
and
mov
daa
sub
pushf
fwait
add
mov
adc
nop
in
xchg
loop
cmp
lahf
mov
iret
repnz
loopne
out
les
push
pop
jg
push
pop
xchg
push
cli
clc
mov
sbb
fisub
pop
movs
cmc
pop
cmps
(bad)
adc
push
das
mov
dec
fsub
aam
sar
mov
and
(bad)
rcl
ficom
xlat
fisttp
push
pop
lds
retf
add
lods
pop
shl
pushf
mov
scas
mov
inc
les
mov
shl
xor
xlat
fucomp
das
adc
loop
push
not
imul
sub
mov
lods
repz
fs
jmp
les
push
rcr
retf
rcl
push
sbb
jecxz
mov
(bad)
jns
ins
and
or
lods
sub
mov
(bad)
inc
mov
lahf
retf
jne
sahf
dec
cmps
add
jg
scas
dec
cmps
in
adc
movs
test
or
test
in
jl
test
jl
sbb
xchg
mov
mov
sub
movs
outs
sbb
mov
test
rcl
mov
and
push
in
cmc
pop
mov
mov
(bad)
iret
cdq
ret
into
xor
push
cmp
into
fdiv
inc
ja
data16
push
cli
stos
add
dec
test
stos
mov
inc
xchg
mov
push
ss
cmps
inc
mov
ins
popf
sar
mov
sub
mov
or
iret
loop
mov
add
sub
push
pop
rcl
sub
dec
xlat
and
lea
push
test
in
inc
enter
imul
scas
add
sub
mov
lods
test
imul
jmp
ret
movdqu
test
dec
pop
mov
aam
mov
lock
jmp
sti
fsubr
xchg
xor
pop
(bad)
outs
lods
fsub
add
jle
mov
mov
aaa
xor
cmp
xchg
ret
jl
outs
and
(bad)
jae
out
leave
sbb
cmp
movs
cld
loopne
sar
retf
(bad)
mov
imul
sbb
lahf
fmulp
aaa
jge
jle
inc
add
daa
addr16
mov
cs
movs
outs
sbb
fidivr
push
ret
xor
dec
popa
push
aas
lds
adc
mov
pop
lea
and
push
popa
outs
int3
test
fwait
les
leave
pop
cmp
popa
mov
dec
lahf
(bad)
or
nop
mov
pop
das
fld
fdivr
arpl
sbb
icebp
aaa
jecxz
jae
dec
jns
push
movsx
inc
aad
dec
adc
xchg
aas
out
aad
pop
push
push
loopne
(bad)
je
stos
lahf
cs
stc
retf
mov
xchg
mov
nop
loopne
pop
push
ins
mov
(bad)
cmp
inc
fbstp
adc
push
sbb
loope
fbld
dec
outs
inc
dec
lds
popa
cmp
sub
test
adc
and
or
push
and
pop
mov
sbb
stc
sub
lods
cmc
jnp
ret
out
push
out
pushf
bound
jg
ss
dec
(bad)
aad
jae
jae
repnz
push
stos
add
xchg
push
aaa
inc
pop
mov
loopne
test
(bad)
cmp
push
aaa
push
cs
pop
popf
sbb
jne
dec
test
and
outs
out
hlt
jmp
(bad)
in
dec
in
push
cmp
add
and
test
or
inc
xor
cmc
movs
cwde
xor
sbb
test
cmc
mov
stos
int
mov
test
xor
cmps
jnp
test
or
jne
mov
sub
jae
pop
mov
cmp
mov
lock
jne
pop
nop
mov
cmps
pop
(bad)
test
popf
mov
and
xchg
imul
(bad)
cld
out
adc
xchg
imul
xlat
mov
data16
cmps
jae
mov
retf
pop
xor
sbb
add
shl
ds
ins
into
mov
jmp
mov
js
fcmovb
sbb
xchg
enter
iret
test
adc
inc
xchg
(bad)
push
lds
imul
jle
inc
gs
mov
sbb
retf
sahf
dec
test
or
loope
nop
push
mov
pop
dec
and
nop
in
push
push
xchg
neg
inc
sbb
or
imul
jno
fbld
ret
dec
push
arpl
mov
or
pop
xor
sub
cmp
sub
cmc
mov
test
js
lds
jge
pushf
or
scas
pop
ret
in
stos
mov
mov
pop
hlt
sub
add
jno
jb
or
test
inc
jb
mov
test
adc
cmp
xchg
retf
jp
(bad)
jl
stos
call
cmp
dec
gs
inc
out
dec
or
push
push
mov
fcom
or
and
dec
add
jns
lahf
push
push
rep
outs
cli
rol
jae
cmps
js
push
in
and
xor
cmp
push
out
sbb
add
xchg
cmp
and
cmp
(bad)
push
out
cmp
retf
stos
fsubr
in
xchg
sub
int3
xor
pop
pop
and
mov
mov
enter
dec
xchg
jg
jae
lahf
push
imul
add
push
call
xchg
xchg
push
fistp
xor
bound
inc
test
arpl
movs
js
div
push
pop
popf
inc
jae
not
mov
cmps
pop
mov
adc
push
int3
test
or
lea
push
pop
and
in
or
jmp
test
retf
sbb
adc
xor
je
inc
clc
dec
(bad)
xchg
lock
hlt
push
fidivr
mov
push
pusha
cmp
fadd
cwde
imul
adc
shr
cmp
lea
xchg
(bad)
jmp
aad
cmps
mov
inc
adc
lock
pop
test
fcmovbe
cmp
sbb
mov
mov
xchg
xor
or
fsubr
sub
cli
scas
sbb
in
call
imul
lahf
aad
ins
(bad)
fnsave
cld
pop
jmp
ja
sbb
xor
xchg
pop
jno
and
loope
mov
sub
dec
jbe
ficom
jne
leave
repnz
dec
pop
fpatan
mov
xchg
adc
and
mov
push
(bad)
pusha
(bad)
loope
movs
mov
cmp
sub
ret
push
mov
aaa
or
adc
stos
adc
icebp
enter
(bad)
or
or
mov
xchg
pushf
xor
cmp
in
aad
cmp
jg
cld
sub
nop
xchg
pop
mov
dec
(bad)
cdq
pop
mov
and
js
cwde
mov
cmp
jp
cdq
adc
loopne
fld
cli
les
lods
int
pop
test
push
xchg
jb
push
push
jle
add
or
dec
ins
ds
in
movs
jmp
push
push
sahf
mov
jns
xor
or
shl
imul
(bad)
bound
je
fadd
movs
and
push
ror
push
enter
ror
cmps
jg
jmp
movs
iret
xchg
pushf
repz
cmp
test
(bad)
icebp
je
adc
imul
outs
std
fist
fild
ror
pop
dec
inc
aam
mov
push
fs
jmp
and
pop
push
dec
mov
push
jo
shr
mov
pop
lods
cli
xchg
(bad)
aam
sti
and
mov
cmc
push
pop
mov
lods
loopne
sbb
in
outs
push
add
sbb
jae
mov
jb
mov
es
mov
rol
xor
mov
or
(bad)
push
sub
sti
mov
imul
(bad)
mov
sub
aad
push
sbb
and
das
xchg
aad
fnstsw
nop
je
pop
sbb
or
mov
mov
cmp
or
scas
sub
in
xchg
shl
inc
cmp
cmc
sbb
push
aas
add
gs
mov
stos
mov
and
xchg
bound
fmul
inc
cmp
jge
mov
pop
stos
xchg
cmp
cmp
cmp
sbb
movs
xor
mov
retf
loop
js
stos
mov
push
push
mov
sar
mov
(bad)
or
add
test
pop
xchg
nop
mov
out
and
hlt
mov
das
and
dec
inc
call
or
ss
xor
jmp
sbb
out
stos
add
(bad)
mov
fisub
fisubr
inc
(bad)
sti
pop
push
inc
outs
push
mov
adc
out
clc
in
mov
push
push
clc
retf
mov
xor
sbb
xor
xchg
sub
sbb
out
test
mov
and
ret
mov
les
sub
nop
scas
cmp
cmp
mov
jnp
xor
cmp
push
inc
or
daa
pop
jns
div
mov
xchg
mov
outs
imul
or
pop
mov
mov
sar
out
inc
sub
xchg
jecxz
cmc
fwait
or
int3
adc
adc
jno
pop
xor
popf
loopne
pop
je
jl
jae
div
jo
sub
sar
mov
mov
dec
push
sar
mov
adc
or
push
dec
ins
mov
out
fwait
sub
add
in
in
push
mov
adc
add
mov
xchg
and
push
jp
mov
es
call
cmc
cld
jo
aaa
sahf
push
mov
rol
jmp
xlat
inc
cmc
xor
cwde
cmp
je
mov
les
test
add
mov
mov
bound
push
stc
mov
and
das
movs
push
sbb
int
sbb
call
pusha
arpl
mov
mov
dec
cmp
adc
test
pop
push
into
lods
repz
icebp
out
sub
lods
mov
cmp
inc
mov
ja
inc
jge
leave
and
push
mov
push
(bad)
and
push
pop
push
rcl
retf
dec
inc
hlt
or
mov
in
xchg
inc
jb
loop
adc
xlat
jmp
mov
fild
mov
shr
loope
jge
fwait
icebp
mov
aas
cmps
mov
ret
sbb
mov
push
or
sbb
jmp
enter
mov
fs
daa
scas
pop
mov
or
or
sub
scas
cvtpi2ps
mov
in
push
pop
loope
aas
cli
stos
xchg
dec
xor
mov
jbe
aaa
xor
scas
xchg
sti
clc
xchg
movs
sahf
add
jmp
push
or
mov
ja
(bad)
movs
fdiv
aaa
or
out
mov
cmp
cmp
jle
and
jecxz
ins
or
sbb
es
ds
ret
pop
mov
fisttp
sti
sbb
retf
inc
mul
cdq
pop
jb
push
lahf
pop
nop
loopne
mov
and
mov
in
cdq
in
xor
mov
cwde
sub
inc
jne
je
ins
lds
mov
pop
push
xchg
retf
push
mov
dec
iret
and
adc
ret
or
xchg
mov
imul
mov
jno
sub
cmp
add
adc
lahf
outs
xchg
sti
jb
jp
xchg
test
add
jnp
imul
cmps
jl
or
rcl
mov
adc
sbb
dec
out
scas
mov
fldenv
outs
xchg
add
xchg
or
cmp
xor
push
cmp
imul
ficomp
mov
cwde
push
mov
cmc
jb
jnp
push
xchg
rcr
sahf
enter
mov
sbb
sahf
daa
scas
in
neg
outs
adc
sub
xchg
pop
(bad)
xchg
mov
cwde
jge
pop
inc
lahf
cld
(bad)
push
ror
push
fadd
mov
or
jo
rcr
mov
xchg
ret
das
and
rcl
leave
popf
fisubr
in
or
xchg
add
shl
scas
es
push
push
dec
dec
cdq
inc
add
mov
ret
(bad)
dec
or
call
and
pop
jne
sar
or
jnp
dec
jle
dec
test
mov
out
and
fcmove
mov
jmp
push
aad
push
(bad)
cwde
pop
pusha
popa
dec
repnz
test
jo
mov
adc
xchg
sbb
xchg
mov
inc
cmp
fisttp
add
and
cs
adc
dec
push
addr16
push
outs
mov
cmps
fst
and
popa
and
mov
adc
add
je
xchg
xor
(bad)
repnz
arpl
shr
adc
pop
(bad)
pop
push
or
push
ret
enter
sub
adc
mov
xchg
jle
jmp
call
mov
cmc
sahf
fwait
js
add
sub
push
stc
jnp
pushf
cwde
jb
jnp
aad
(bad)
push
or
xchg
outs
outs
dec
mov
loopne
ins
xor
hlt
dec
je
imul
or
xor
fimul
or
sti
jl
les
and
mov
xchg
inc
push
and
lds
push
ss
cmps
push
inc
outs
std
iret
fcomp
jb
mov
daa
aad
in
dec
dec
dec
mov
add
loopne
inc
(bad)
cmps
std
dec
dec
data16
mov
inc
lods
test
inc
test
push
out
mov
push
imul
or
xor
sbb
inc
sub
xor
inc
pushf
mov
out
bound
mov
jl
xor
add
ins
mov
repz
ret
jg
lods
ficom
pop
fmul
push
adc
pop
pop
cmp
pushf
sub
fldcw
xor
sbb
xor
add
ror
retf
sub
mov
mov
in
dec
lock
fs
mul
outs
mov
lods
icebp
xchg
or
pop
adc
(bad)
mov
inc
jle
clc
jge
lods
push
inc
xchg
repnz
ficomp
outs
sbb
xor
mov
cmp
inc
jmp
mov
loop
sub
mov
inc
mov
imul
push
jne
mov
test
mov
cmovns
xor
pop
in
mov
pop
pop
out
jecxz
cmps
jnp
pop
cmp
nop
sbb
ret
pop
std
mov
fstp
fwait
movs
popf
add
inc
not
rol
imul
fst
lods
dec
adc
sbb
mov
push
popf
mov
cwde
(bad)
jmp
push
js
out
or
sbb
push
imul
nop
jle
sar
fadd
lea
sahf
les
cli
push
ds
(bad)
sti
jae
mov
dec
jmp
push
xchg
fmul
jmp
daa
enter
icebp
pop
fwait
into
aad
out
outs
push
test
xchg
(bad)
fistp
xor
aaa
js
pop
int
jnp
lea
scas
cli
add
das
shl
cmp
movs
(bad)
jae
call
or
ins
add
loopne
mov
mov
xchg
push
cmp
dec
clc
xchg
adc
fsubr
jge
sub
outs
jne
(bad)
inc
(bad)
imul
mov
stos
push
pop
in
ret
jnp
mov
sbb
push
call
jo
pop
mov
dec
aad
shufps
jae
ret
and
test
xchg
push
repz
and
movs
loopne
jg
add
ficomp
cmc
call
popa
mov
sbb
adc
dec
pop
icebp
cli
test
fisttp
movs
clc
inc
xor
jg
cmc
xor
lock
push
lock
inc
test
(bad)
sbb
jno
cmp
cmp
fdivr
xor
pusha
ss
pop
not
add
imul
(bad)
out
and
enter
jmp
push
outs
js
push
jge
in
fnstenv
dec
sahf
xchg
je
movs
in
xor
ret
arpl
fimul
sar
jb
fs
adc
pop
jl
shl
pop
mov
xchg
pop
sar
repnz
adc
sub
test
inc
loope
retf
arpl
pusha
inc
cmp
pop
jae
add
int3
lods
das
test
xchg
cmps
movs
into
or
inc
xor
jno
mov
movs
or
pop
sar
inc
xchg
bound
stos
ds
daa
rcl
dec
(bad)
out
mov
(bad)
xchg
and
inc
sbb
pop
and
mov
cmc
or
(bad)
sbb
fild
cmp
loopne
idiv
popf
inc
mov
xor
jmp
jb
xchg
hlt
mov
xor
xchg
mov
dec
add
bnd
mov
inc
dec
lahf
xchg
mov
lea
inc
pop
bound
mov
aam
add
mov
es
jb
jns
sub
pop
and
dec
stos
cmp
mov
fnstenv
test
mov
(bad)
push
dec
pop
repnz
mov
add
outs
(bad)
ret
cmc
push
jecxz
rcr
call
pop
test
fcomp
or
dec
out
pop
inc
dec
repz
pop
push
into
pop
sub
mov
jne
cmc
lods
in
(bad)
in
push
xchg
pop
mov
lods
rcl
add
push
xor
pop
(bad)
fisub
adc
fwait
ret
repnz
add
xor
outs
xor
arpl
pop
pop
mov
vphaddbq
rol
cmp
loopne
xor
cmp
jl
outs
out
mov
daa
jns
jp
call
ret
add
call
mov
std
enter
aaa
push
fsub
lahf
movs
inc
test
fld
arpl
xor
jle
jno
sub
adc
popa
cmp
sbb
iret
inc
je
loop
pop
test
movs
xchg
mov
call
loop
nop
xchg
sub
cmovb
jbe
add
xchg
jo
cli
inc
fs
mov
push
inc
fwait
popf
repz
xchg
jle
mov
add
data16
test
xchg
lods
xchg
push
xchg
pop
pop
jge
fs
mov
ds
fwait
dec
pop
pop
adc
fsub
sbb
add
das
fnstcw
imul
inc
mov
mov
popa
mov
int
push
stc
das
push
pop
clc
ds
test
push
adc
cmps
sahf
dec
cmp
jmp
sbb
aaa
xor
add
popa
jmp
popf
data16
ins
xchg
add
je
jbe
or
test
scas
sub
ins
cmp
dec
jnp
shl
fmul
ins
pop
sbb
and
fdivr
sub
push
jg
cmp
icebp
in
loopne
sti
pushf
jnp
(bad)
lods
push
shr
and
call
(bad)
xchg
jg
ficomp
shl
mov
retf
aad
cmc
loope
aaa
sub
fld
sub
(bad)
stc
xchg
les
adc
xor
das
sbb
mov
xchg
sbb
inc
pushf
sahf
or
inc
into
xor
ds
add
and
rcr
mov
push
sbb
mov
in
aas
in
pusha
mov
scas
xor
leave
cmc
iret
shl
(bad)
and
out
out
test
add
cwde
xchg
ror
fild
and
(bad)
aam
sbb
movs
outs
shl
or
ror
sbb
lods
jmp
leave
test
aam
inc
mov
cmp
and
jne
add
fcomp
and
dec
lods
mov
push
pop
sahf
push
inc
sub
and
mov
xor
mov
xchg
xchg
push
add
retf
iret
cmp
adc
(bad)
mov
pushf
stos
xchg
mov
enter
mov
mov
test
sbb
cmc
add
sahf
hlt
sub
dec
pop
retf
(bad)
cli
rol
neg
dec
pop
mov
lds
inc
bound
mov
adc
in
xchg
mov
sbb
or
ror
retf
int
mov
xor
ficom
xchg
cmp
xor
dec
out
std
and
dec
xchg
fs
cld
into
xor
jg
add
in
popa
popa
jae
adc
push
add
aam
mov
xchg
cmp
jns
movs
loopne
retf
aaa
cs
or
mov
cli
stc
fiadd
out
stos
pcmpeqb
push
out
leave
mov
or
xor
push
add
xchg
dec
cmp
js
imul
add
inc
stc
lock
scas
bound
xor
dec
shld
fistp
ss
cmp
add
(bad)
pop
lods
cmp
jns
imul
mov
jmp
pop
gs
lds
daa
dec
int3
sub
ret
xor
sub
mov
pop
push
dec
into
lods
je
xchg
pop
pop
mov
retf
pop
cmp
dec
pushw
call
adc
pshufw
in
mov
xor
jmp
sbb
add
cs
cmc
mov
outs
cmp
fldenv
fcom
and
push
add
jge
push
adc
xchg
repnz
or
cmc
and
mov
test
call
mov
int
cmp
jb
out
xor
dec
sti
ss
out
stc
sbb
in
mov
mov
lock
jbe
bts
leave
pusha
cmps
shl
mov
ret
les
cmp
data16
test
add
test
(bad)
jno
add
xchg
xchg
sbb
rcr
mov
fnstenv
ror
(bad)
out
push
popf
fild
sbb
and
xor
jb
pusha
dec
loop
or
mov
aad
add
popa
test
stos
jns
cdq
pop
dec
sahf
mov
loopne
cmp
xchg
into
shr
jp
fwait
add
adc
(bad)
pop
cld
inc
aaa
sbb
add
dec
shl
jmp
lds
jae
sti
mov
mov
xor
retf
mov
mov
scas
mov
and
lods
adc
rcr
jo
(bad)
mov
pop
xlat
sbb
xchg
enter
sbb
adc
jg
int
add
or
pushf
cmp
in
scas
jl
fimul
ins
pop
ins
pop
xchg
sahf
jecxz
dec
mov
stos
mov
stos
and
sub
xlat
mov
mov
mov
sbb
pusha
cli
bound
mov
out
movs
mov
in
and
inc
icebp
push
adc
mov
mov
imul
push
mov
test
imul
outs
cs
fwait
sub
mov
int3
inc
(bad)
jne
repnz
lods
ds
cmp
mov
mov
jmp
mov
xchg
dec
and
ds
test
sbb
in
jno
les
or
dec
daa
sbb
leave
jmp
jns
sub
jne
or
cmp
(bad)
hlt
stos
jge
push
movs
mov
das
repz
fild
out
test
rol
fstp
cmp
push
into
ret
in
push
call
sub
clc
test
mov
pop
mov
pusha
lods
enter
pushf
pop
fild
pop
xor
xchg
jmp
stc
es
adc
cmp
enter
sbb
dec
out
fucomp
cmp
push
and
fs
fsubp
scas
or
fwait
adc
xchg
nop
addr16
cmp
imul
lock
pop
rcl
pop
inc
mov
mov
sahf
and
pop
sar
iret
movs
out
(bad)
fst
xor
sahf
push
adc
or
add
inc
mul
jae
aam
xchg
cli
adc
iret
jmp
jl
repz
addr16
inc
adc
test
mov
loopne
dec
sub
arpl
movs
pop
jne
sub
cmp
pushf
mov
push
xchg
popf
popf
adc
test
cmp
aas
cmc
mov
add
sub
leave
outs
add
sbb
data16
ds
dec
push
inc
mov
pop
pop
shl
xor
adc
in
cli
test
dec
xchg
call
sub
lahf
pop
pop
and
or
popa
xor
jecxz
enter
ss
mov
mov
fdiv
cwde
cmps
pusha
xchg
mov
sbb
pop
push
add
xchg
aam
ror
ret
mov
in
call
add
dec
adc
xor
push
inc
push
iret
in
mov
jg
adc
dec
loop
xchg
std
int3
inc
nop
aad
(bad)
mov
inc
push
arpl
call
xchg
and
mov
xor
adc
xor
in
lahf
sbb
pop
dec
bnd
fwait
xor
(bad)
sbb
jae
repnz
repz
rol
inc
loopne
pop
cld
sub
push
adc
mov
mov
clc
popa
and
mov
stos
or
pop
mov
jp
gs
inc
shr
adc
iret
or
jb
sbb
jp
mov
mov
and
mov
stc
inc
rcl
sbb
mov
mov
repnz
mov
push
push
xchg
cld
imul
jle
dec
shl
jp
fwait
popa
xchg
mov
(bad)
mov
dec
mov
out
pop
data16
fisttp
adc
test
das
and
xor
sahf
xor
out
pop
in
dec
int
scas
mov
ins
sbb
push
cmp
idiv
mov
rcr
stos
dec
xlat
aas
jmp
imul
test
jmp
mov
test
retf
push
scas
mov
pushf
inc
leave
in
mov
bound
xor
jecxz
(bad)
jle
movs
movs
mov
mov
ss
mov
fs
adc
cmp
std
in
(bad)
pop
xchg
leave
jae
jo
jns
or
std
push
xchg
aaa
in
adc
pusha
sbb
retf
ins
shl
dec
mov
pop
out
cmp
aaa
call
jns
stos
inc
xchg
cli
repnz
gs
hlt
ins
xchg
les
mov
gs
dec
add
mov
popf
dec
or
xchg
inc
into
cdq
mov
cmp
xchg
mov
dec
stos
addr16
test
repnz
or
cld
pop
xor
dec
pop
jnp
loop
icebp
icebp
jo
loop
stc
jmp
arpl
out
mov
and
sub
ds
sbb
aad
cmc
std
xor
ret
jp
sub
mov
loope
xor
and
mov
imul
cmp
clc
mov
ds
mov
dec
fst
mov
sbb
add
jmp
cwde
outs
xor
dec
out
pop
mov
lea
mov
fistp
push
cmp
mov
lahf
add
or
dec
into
out
or
jmp
push
lods
and
push
jae
sbb
push
test
mov
mov
int
and
add
add
fadd
ret
bound
cmp
xchg
push
out
ror
mov
call
test
jle
jl
ja
aaa
call
mov
fcomp
adc
scas
jae
mov
push
xor
outs
sahf
jmp
or
shl
cmps
cmps
dec
scas
mov
dec
sub
popf
or
and
stos
inc
mov
lahf
shl
pushf
nop
and
mov
inc
ficomp
dec
std
or
fiadd
cmps
aad
add
(bad)
dec
add
cmp
mov
jecxz
cmp
ins
add
and
push
jns
inc
or
imul
mov
inc
ds
std
call
xor
and
or
xor
lahf
sbb
jae
imul
loop
bound
xor
mov
mov
rcr
cwde
jmp
std
jmp
fistp
cmp
loop
mov
jno
mov
dec
les
mov
mov
adc
pop
fistp
add
ss
cld
movs
repnz
(bad)
push
lods
shr
jno
dec
or
jmp
push
adc
icebp
jne
push
aam
dec
inc
call
push
pop
addr16
repnz
ds
adc
mov
inc
repz
push
adc
cs
and
cld
add
xor
sub
xchg
adc
dec
and
mov
hlt
(bad)
iret
push
stos
cmp
jp
retf
mov
aad
sub
scas
arpl
xchg
adc
cmc
lahf
rcr
fsubr
lds
mov
call
aas
inc
dec
mov
test
test
or
pop
loop
ficomp
lea
push
dec
fsub
jmp
bound
push
pop
stos
test
js
xchg
out
ins
inc
sbb
fdivp
dec
mov
jp
pop
pop
sbb
pop
cwde
sub
repz
push
ja
or
(bad)
sbb
cli
out
xor
frstpm(287
mov
pop
loopne
fmulp
aad
movs
hlt
pop
mov
jl
mov
dec
mov
inc
loope
inc
les
dec
mov
mov
jle
pop
mov
rol
inc
push
std
cmp
adc
mov
mov
out
lea
cmps
sbb
repnz
popf
push
ss
lahf
daa
cmp
(bad)
inc
mov
jmp
adc
lods
(bad)
repz
or
cmp
out
stos
pop
adc
push
stc
dec
push
jmp
or
sub
xchg
add
clc
sahf
mov
inc
mov
mov
into
add
fcomip
scas
inc
sbb
loopne
mov
inc
sar
xor
mov
gs
cmp
adc
(bad)
push
xchg
and
inc
repz
xchg
data16
ds
cmc
pop
sub
cs
(bad)
in
xchg
jle
mov
in
push
jp
js
sbb
jmp
mov
pop
add
cli
retf
cmps
xchg
pop
jae
mov
in
int
jmp
jg
loopne
(bad)
inc
xchg
dec
test
cwde
(bad)
xchg
mov
cmp
cdq
inc
icebp
mov
shl
inc
dec
cmp
sbb
test
(bad)
aad
sub
xchg
mov
fld
jns
mov
xor
mov
mov
mov
sub
dec
fcom
ja
mov
(bad)
add
push
(bad)
mov
inc
rol
mov
sub
fidivr
add
adc
scas
pop
cld
dec
fcmovnbe
scas
or
xor
(bad)
mov
or
mov
mov
jecxz
ins
ins
or
xor
(bad)
out
out
repnz
push
push
mov
mov
push
jbe
pusha
jno
test
jle
and
sbb
outs
push
and
sahf
xchg
and
pusha
pusha
pop
call
cmp
pop
or
xadd
shr
fs
dec
fld
jecxz
out
xor
and
into
sahf
and
or
xchg
in
js
loope
fcom
lods
jo
imul
pop
xchg
jmp
cdq
add
addr16
lock
or
pop
out
jne
xchg
pop
xchg
rol
sub
ficomp
xor
imul
call
shr
scas
cld
jns
je
(bad)
mov
jb
adc
jle
adc
mov
in
dec
inc
adc
xchg
xchg
repz
rol
test
xlat
inc
ret
fisttp
jb
dec
push
test
pop
adc
pop
mov
rol
shr
cmps
add
test
add
loope
stos
or
cwde
inc
jmp
pop
arpl
mov
es
je
aam
add
idiv
push
jmp
inc
mov
sub
and
out
mov
dec
adc
adc
mov
test
lods
add
sbb
(bad)
lods
rcl
mov
sbb
mov
in
cmp
xor
push
ret
add
inc
add
retf
mov
not
xor
scas
fist
mov
jne
movs
gs
inc
adc
stos
pushf
(bad)
fisub
mov
sbb
add
cmps
push
or
fsubr
enter
pop
mov
lock
dec
mov
imul
popa
inc
add
dec
sbb
push
js
sub
or
mov
jo
mov
test
pusha
jmp
fmul
adc
sar
mov
imul
and
int
mov
add
or
mov
mov
arpl
mov
mov
inc
pop
mov
and
pushf
xor
vpaddsw
movs
add
cwde
shl
stos
dec
xchg
(bad)
sahf
in
pop
fsub
push
xor
push
add
sub
retf
iret
cmp
leave
fist
or
dec
adc
jmp
inc
mov
ror
or
jle
sbb
mov
mov
xchg
dec
cdq
pop
out
das
push
scas
enter
loop
dec
iret
fwait
and
aaa
push
mov
test
cmp
mov
sbb
enter
bound
ja
mov
loope
and
rcl
test
mov
fcmovnbe
inc
iret
(bad)
push
mov
jmp
push
xor
xchg
fsub
retf
xor
inc
add
xor
in
daa
dec
jno
xchg
mov
xchg
inc
hlt
mov
or
mov
repnz
loopne
lea
mov
pop
movs
fwait
icebp
rol
push
(bad)
mul
pop
add
inc
in
call
push
ds
jl
push
add
outs
les
ret
pop
cmp
js
sbb
out
lods
leave
push
pop
scas
push
add
ret
xor
jge
or
inc
push
sub
imul
dec
push
je
fdiv
xchg
std
(bad)
outs
nop
icebp
mov
pushf
inc
xchg
or
mov
push
jmp
sub
xor
outs
jo
pop
xchg
repz
xchg
mov
sub
test
jecxz
mov
dec
fistp
or
imul
test
(bad)
cmp
aad
mov
cdq
and
rcr
and
push
pop
lods
or
xor
mov
inc
jle
shl
outs
int3
xchg
push
outs
pop
sub
jecxz
daa
in
stc
mov
ss
(bad)
or
in
fcom
ins
mov
push
and
ins
mov
mov
dec
cmc
pop
hlt
xchg
frstor
sub
ins
jle
rep
ja
(bad)
iret
adc
outs
outs
jnp
xchg
retf
lods
pop
dec
call
fsubr
or
jg
(bad)
data16
fild
pop
(bad)
push
adc
div
cmp
or
leave
sub
xlat
outs
pusha
push
jmp
mov
pop
jl
ficom
pop
inc
cmp
enter
add
or
or
inc
pop
arpl
inc
cs
shr
xchg
sub
jae
inc
imul
sahf
mov
in
out
not
stos
add
sbb
cmp
sub
leave
pop
das
int3
imul
mov
mov
dec
jne
outs
dec
push
loopne
ds
out
inc
stos
cld
xchg
xchg
mov
inc
mov
test
arpl
test
lds
xor
int
(bad)
jecxz
(bad)
test
jp
ss
cmps
in
aaa
scas
or
nop
dec
mov
and
dec
fwait
push
cmp
and
pop
sbb
rcr
and
dec
xchg
xchg
cmp
arpl
pop
lods
inc
dec
stos
sbb
mov
outs
retf
mov
loope
std
or
jp
or
jb
je
ret
mov
jb
adc
into
out
adc
push
jo
dec
dec
movs
mov
movs
shr
in
adc
ja
test
lds
in
add
mov
lds
sub
or
xchg
and
xor
cmp
xchg
inc
jnp
inc
dec
imul
cmps
mov
lahf
dec
jnp
adc
xchg
sub
sub
mov
xor
dec
(bad)
fnstsw
jae
outs
cmp
sub
pop
in
out
fisub
fimul
in
mov
add
rol
sub
imul
addr16
js
call
movs
in
out
add
and
mov
nop
sbb
test
mov
ss
rcl
fsubr
std
xchg
ins
adc
cld
mov
pop
hlt
aad
xor
add
sub
imul
inc
loop
sub
mov
data16
fcom
retf
ins
enter
mov
lds
les
mov
addr16
(bad)
into
aad
add
jp
loop
jmp
adc
sbb
dec
sbb
add
aas
jmp
mov
cmps
mov
sti
mov
mov
mov
movs
jno
aas
sti
cvtps2pd
jae
mov
fs
mov
jg
jge
daa
clc
popa
popf
fs
push
adc
sub
fisttp
xchg
pop
jle
dec
ins
push
das
sar
retf
sti
pop
fdivr
cwde
fwait
sar
mov
mov
mov
shl
add
daa
test
pop
or
pop
and
fdiv
push
les
and
out
push
mov
mov
daa
or
pop
sbb
arpl
sbb
pop
sub
push
(bad)
adc
test
fs
call
test
adc
aas
daa
aaa
test
cmp
nop
sub
push
scas
addr16
les
push
cmp
push
sbb
sub
push
not
mov
test
in
adc
(bad)
std
and
cmc
inc
rol
xor
pop
les
cld
rol
lods
lods
xlat
mov
ret
repnz
ja
hlt
cwde
in
mov
mov
dec
sub
enter
pusha
faddp
xchg
rol
movs
add
add
jl
mov
out
xor
sbb
in
jl
imul
and
test
imul
rcr
daa
test
sub
idiv
loope
jmp
adc
pusha
call
mov
adc
inc
and
aad
xor
in
mov
ret
mov
push
aaa
retf
pop
inc
fsubr
(bad)
jae
push
jmp
dec
inc
idiv
mov
call
pop
xchg
mov
loope
and
inc
aas
lds
mov
xor
adc
out
movs
mul
pop
dec
repnz
dec
xchg
bound
xchg
dec
iret
outs
xchg
cmp
stos
fwait
pop
jo
mov
or
cmp
xor
mov
xchg
test
scas
daa
sbb
test
xchg
or
pushf
dec
sti
jl
arpl
push
out
ret
mov
popf
or
mov
retf
dec
mov
mov
inc
lods
inc
(bad)
je
int
sbb
mov
jns
sub
arpl
push
aad
cmps
xor
lea
add
arpl
std
pop
stc
dec
or
(bad)
out
xor
sbb
xchg
into
jo
xor
jns
addr16
ins
or
call
inc
mov
loop
out
aad
out
ja
or
(bad)
aad
or
pop
pusha
push
adc
aas
fdiv
(bad)
push
bound
clc
xor
push
(bad)
out
xor
push
and
ret
cmp
dec
enter
adc
mov
jmp
add
push
push
inc
push
dec
mov
mov
inc
(bad)
push
and
fist
nop
sbb
jmp
add
push
inc
cmp
shl
fld
pop
shl
sti
add
repnz
cmp
retf
in
popa
cmp
call
lock
ret
add
mov
and
push
ja
aad
out
mov
arpl
mov
aam
inc
jno
scas
fsubr
push
push
sbb
adc
sub
pop
mov
jg
test
cmp
and
and
fbld
call
(bad)
pop
dec
lds
icebp
out
mov
mov
dec
fild
push
scas
xchg
jo
shr
mov
mov
xor
test
popa
lds
and
mov
dec
xchg
daa
mov
ret
add
inc
lahf
or
push
xchg
call
xchg
push
data16
not
in
stos
(bad)
loopne
into
mov
loope
mov
mov
cmp
stc
jp
addr16
mov
or
nop
iret
pop
sbb
inc
xor
aaa
dec
lea
rol
jl
mov
xor
or
outs
movs
call
addr16
pop
mov
xor
fcomp
add
lock
bound
cli
sub
ret
loop
sti
popf
push
jge
xlat
mov
and
add
call
sub
mov
ret
popa
sbb
mov
popa
popf
clc
inc
stos
out
cmp
in
iret
ret
loop
std
push
es
pop
pusha
pop
mov
sub
imul
lods
push
(bad)
push
in
xchg
pop
push
sub
adc
mov
or
xchg
loop
cdq
ins
jno
icebp
int3
les
push
dec
stos
mov
jmp
mov
xchg
shr
add
in
xor
mov
sub
aas
call
arpl
les
fdiv
sbb
sub
mov
adc
pop
inc
lock
xor
in
jb
stos
cmp
push
dec
jbe
dec
mov
(bad)
jg
fs
int
cs
es
pop
pop
pop
sub
sbb
cs
loopne
ja
repz
jmp
fidivr
outs
pop
lods
scas
pop
cmp
imul
push
add
lock
mov
fidivr
push
iret
push
sbb
mov
xchg
xor
sub
imul
mov
ds
pop
shr
rcr
fstp
cld
(bad)
lock
sub
pushf
dec
cwde
jns
cmp
ins
cmps
sub
in
jmp
scas
and
push
mov
test
xlat
pop
ins
mov
imul
shr
mov
pop
add
mov
aam
jno
cmp
sub
je
xchg
repz
pop
sbb
loope
jp
fwait
in
jo
mov
sbb
aas
dec
inc
dec
push
out
inc
pop
cmp
out
aad
(bad)
imul
sahf
das
push
call
fbstp
and
call
mov
mov
sbb
cmp
mov
jle
pop
or
dec
add
cld
mov
popa
jl
add
dec
cdq
aad
data16
jmp
and
add
fwait
add
xor
xor
pop
cmp
enter
inc
fmul
ret
aas
mov
push
js
cdq
pop
imul
push
leave
(bad)
hlt
sub
shr
xor
sbb
jge
nop
xor
dec
pop
mov
cmp
inc
test
mov
leave
xor
or
adc
jne
cld
push
pop
fisttp
ins
jo
pop
out
outs
mov
scas
lods
xchg
imul
bound
adc
data16
std
jle
sbb
or
mov
mov
and
and
ins
test
dec
jle
out
loopne
xchg
sbb
es
loop
imul
pop
sbb
mov
sub
inc
fisubr
pop
ds
adc
mov
pop
pop
add
jg
dec
std
or
jb
iret
ins
push
dec
fcomp
jge
xchg
jle
loope
cmp
outs
mov
das
or
nop
in
scas
cmp
das
data16
xchg
es
ins
stc
sbb
in
fisttp
mov
push
mov
jge
out
int
add
sbb
fdiv
test
jecxz
adc
cdq
fwait
sar
mov
gs
jle
jge
or
add
rcr
xchg
jp
or
jo
add
or
or
into
mov
pop
jb
or
pop
inc
sbb
mov
add
or
cmps
(bad)
pop
jae
fsub
fld1
rcr
into
out
(bad)
stos
cmp
(bad)
stos
mov
ds
scas
bswap
pop
bound
push
pop
pop
dec
rcr
outs
dec
add
mov
mov
mov
sbb
fstp
mov
mov
aam
dec
push
or
test
xor
mov
inc
cld
xchg
or
mov
xor
ins
movs
adc
mov
ficom
xchg
cmp
sub
pop
std
lds
pop
inc
mov
daa
ja
cmc
nop
repz
aad
adc
add
mov
inc
fbld
push
pop
das
shr
fisub
sti
repz
adc
retf
sbb
mov
xchg
enter
repz
sub
stc
nop
mov
gs
stc
pushf
retf
in
xchg
stos
mov
mov
adc
jle
adc
call
inc
push
std
test
inc
repnz
stos
xor
pop
outs
cmps
sbb
dec
js
xor
sbb
test
inc
cmp
test
adc
imul
adc
aam
out
add
mov
(bad)
xor
mov
cwde
inc
sub
jmp
add
daa
xor
mov
ins
xchg
add
xor
or
call
sub
ror
out
pop
int3
jecxz
mov
rcr
push
cmp
fwait
aas
es
adc
out
push
fmulp
cdq
fdiv
enter
inc
repnz
push
sbb
test
adc
pop
(bad)
std
mov
lock
jle
mov
push
push
xchg
fs
jmp
inc
data16
add
and
ret
xor
enter
jno
arpl
fst
mov
push
mov
addr16
sbb
pushf
xor
cld
sub
add
cmp
inc
je
inc
sbb
mov
movs
(bad)
xor
mov
ja
call
mov
or
arpl
mov
jecxz
ror
jmp
or
call
push
pop
xor
and
fisttp
mov
outs
push
pop
sti
mov
imul
js
xlat
ror
lea
adc
mov
mov
scas
mov
sub
inc
pop
add
jae
cwde
ret
das
fcomp
pushf
out
les
ret
mov
(bad)
stos
mov
leave
bound
xor
adc
rcr
mov
out
cmp
loop
fisubr
lds
xlat
adc
dec
add
sbb
int3
push
test
adc
rcl
ds
into
call
jne
loopne
push
out
jne
push
pop
sbb
jge
outs
jne
cs
in
fwait
xchg
retf
push
aaa
ret
out
loop
adc
sbb
cmp
mov
cmp
mov
and
or
repnz
jae
icebp
push
xchg
dec
xor
xchg
cdq
dec
or
pop
xchg
xlat
xlat
stc
cdq
clc
or
cmp
mov
aam
jb
gs
adc
or
jne
xlat
and
ins
dec
loopne
es
push
rcl
into
out
fisttp
iret
(bad)
fstp
popa
cmp
cwde
repnz
dec
adc
inc
push
je
or
or
xchg
xchg
adc
aam
popf
in
cmps
test
xlat
aam
(bad)
jge
dec
jno
add
pop
dec
mov
mov
daa
fnstcw
push
pusha
inc
fwait
jp
push
in
scas
inc
adc
mov
jle
adc
out
adc
jb
push
pop
stc
push
mov
dec
mov
pop
movs
pop
jmp
and
inc
pop
std
sub
ins
jo
pop
or
mov
pop
mov
add
and
cwde
or
cmp
cmp
es
aam
ror
push
(bad)
(bad)
xchg
xchg
mov
neg
jmp
mov
sbb
xchg
je
mov
xor
scas
in
xor
hlt
pop
adc
xchg
jge
adc
xor
jl
das
mov
mov
in
jmp
fmul
xchg
clc
sbb
int
or
push
push
ins
add
jae
cmp
mov
cmp
inc
rcr
imul
and
add
in
sahf
xchg
arpl
adc
outs
or
fisub
inc
das
pop
or
push
mov
mov
jp
sub
push
dec
outs
retf
cdq
mov
xchg
adc
xor
push
adc
sub
adc
xchg
cmp
jb
jo
mov
sbb
pop
shl
cli
xchg
mov
repnz
in
stos
push
nop
sbb
mov
sub
jmp
aad
loopne
jle
popf
inc
loopne
mov
dec
(bad)
lods
cs
ret
xlat
lods
sbb
push
mov
sub
out
jae
out
call
sub
mov
shr
cmps
and
in
ds
push
lahf
out
pop
leave
pop
push
mov
test
jno
std
ja
jle
aam
imul
in
shl
gs
sbb
and
mov
loop
fld1
mov
arpl
sub
mov
test
inc
push
lock
xchg
jae
jbe
cwde
rol
add
mov
pushf
movs
mov
jge
adc
cdq
xor
test
test
adc
dec
lock
add
rcr
mov
jmp
mov
mov
and
or
aam
out
repz
or
mov
pop
pop
das
pop
inc
sub
in
movs
inc
in
call
add
jns
aas
cmp
stos
or
mov
xlat
mov
loopne
push
sti
cmp
cmp
mov
test
popa
mov
sub
aas
cmp
xchg
fs
mov
ins
xchg
and
gs
stos
arpl
pusha
shr
mov
test
lock
test
or
call
push
add
jmp
ret
aad
pop
fwait
mov
out
scas
add
inc
pop
xchg
sbb
or
mov
cmc
jge
cld
add
add
bound
cmc
push
xchg
lods
jle
mov
imul
adc
xchg
sbb
movs
cmps
hlt
mov
es
out
add
lea
push
mov
call
int3
xchg
sbb
mov
rcl
fdivr
imul
ss
sbb
adc
fsubr
addr16
and
jp
dec
cli
pushf
mov
jmp
(bad)
mov
jecxz
inc
lea
jp
cmps
dec
push
and
pop
xor
push
arpl
dec
xchg
fwait
and
shr
dec
mov
outs
clc
xor
jnp
cwde
push
sbb
sti
ins
das
jmp
ds
addr16
push
nop
vsubps
jo
addr16
aam
push
adc
cmps
pop
pushf
cmp
or
ins
sub
addr16
push
fnstenv
out
inc
pop
add
mov
idiv
mov
inc
imul
pop
cmps
hlt
fs
adc
shl
inc
jmp
aad
mov
es
(bad)
jl
psllw
mov
pop
xor
pop
mov
or
loopne
xor
jge
pop
scas
xchg
xchg
fcomi
pop
jp
or
fisub
sbb
xor
ins
ja
and
arpl
mov
xor
sub
mov
or
xchg
daa
test
pop
mov
mov
fs
loopne
pop
lahf
sbb
sbb
mov
test
jl
pop
hlt
mov
xchg
xchg
mov
mov
lock
mov
outs
mov
fld
cwde
aad
cwde
test
ss
imul
js
scas
dec
mov
sub
lods
and
jo
je
in
pop
lds
cmp
inc
pushf
mov
out
dec
popf
jecxz
pop
pusha
rcl
jno
add
jp
movs
cmp
mov
mov
add
jns
test
loop
test
std
imul
es
test
push
addr16
jns
pop
ret
out
and
sar
imul
data16
ret
push
shr
cs
aad
retf
rol
(bad)
xlat
lock
xchg
daa
mov
mov
jne
push
(bad)
cmps
aas
cmp
loop
imul
iret
hlt
popa
pop
ret
dec
sahf
lods
sbb
ret
push
fld
test
das
sbb
pop
je
xchg
or
mov
dec
pop
sbb
adc
aad
and
add
xchg
repnz
add
clc
lds
adc
(bad)
cmc
pop
push
or
xchg
pop
jnp
iret
inc
mov
repnz
mov
dec
push
faddp
in
retf
sub
das
or
xor
dec
jl
aaa
and
jbe
add
lock
(bad)
push
mov
mov
daa
cli
sbb
mov
push
pop
dec
cmps
(bad)
mov
mov
stc
fdivr
xchg
inc
xchg
inc
outs
popa
pop
das
out
sbb
aam
push
push
fsubrp
xor
adc
push
or
das
mov
sbb
imul
xor
jp
retf
jo
adc
ja
push
in
add
jmp
adc
dec
es
adc
mov
and
sub
dec
movs
inc
int3
mov
stos
mov
ja
sub
dec
cld
xor
sub
pop
daa
mov
pop
mov
pusha
sahf
mov
sbb
inc
xchg
fcomip
retf
jmp
mov
push
ret
mov
sub
mov
rcr
inc
lods
mov
xor
in
xor
bsr
jne
lea
jae
xchg
int3
stos
xchg
adc
jmp
sbb
add
and
adc
xchg
push
in
mov
cli
mov
call
or
aaa
in
ret
movs
fs
or
aam
jbe
xchg
adc
(bad)
out
cmp
sti
pop
stos
jl
mov
cmp
loopne
inc
mov
out
cdq
in
inc
test
sbb
loop
retf
push
(bad)
gs
outs
sub
jle
out
dec
lahf
hlt
push
nop
push
mov
cmps
(bad)
jge
cmps
push
ins
int
std
test
lock
repz
test
bound
in
(bad)
outs
sub
movs
nop
xchg
stos
div
pop
or
push
outs
sbb
mov
test
bound
enter
jo
push
fdiv
and
add
mov
cmc
mov
cmp
mov
cmps
jne
mov
xor
mov
test
pop
mov
xchg
lods
dec
sub
xor
stos
mov
xchg
xor
and
aad
js
fistp
pop
and
and
hlt
pop
out
jl
jp
inc
nop
push
movs
(bad)
hlt
icebp
sbb
outs
pop
scas
out
sbb
xchg
pushf
jbe
in
cmp
fisubr
repnz
test
cmps
inc
fisub
and
mov
push
rol
push
jb
inc
gs
test
test
xchg
fsub
outs
sub
sub
xchg
pop
(bad)
mov
clc
test
es
cmp
jg
cmp
add
(bad)
scas
pop
rol
scas
cmp
xchg
sbb
push
fstp
imul
rol
push
cmp
mov
das
in
cmp
fs
jp
adc
aad
pusha
pusha
xor
dec
test
lods
or
popw
xchg
fild
cli
mov
push
aam
jo
inc
push
and
jne
rol
xchg
jmp
jns
inc
mov
add
shl
xor
enter
xchg
push
and
dec
sub
test
js
cs
dec
push
pop
(bad)
out
scas
sbb
push
test
jg
mov
xchg
xchg
das
sbb
js
sbb
add
out
(bad)
in
pop
aad
xor
sbb
sub
jne
test
aaa
je
jle
loop
fldenv
xor
mov
rol
out
call
jae
sub
(bad)
xchg
cmp
xchg
cmp
scas
jecxz
add
shl
frstor
push
pop
popf
fidivr
xor
xor
xor
sub
ins
sti
call
jle
xchg
fs
jae
pop
dec
sar
outs
xchg
movs
std
leave
popf
sbb
ins
mov
xchg
jl
fbstp
xchg
scas
int
out
arpl
mov
sub
jbe
mov
push
pop
sahf
int3
test
rcl
inc
push
mov
add
out
mov
gs
cwde
sub
stc
pop
pusha
push
bound
mov
mov
scas
mov
ret
hlt
cmp
jns
mov
shl
xchg
mov
xor
mov
ss
int
jp
mov
aad
lods
ss
push
data16
scas
iret
mov
add
stos
daa
xor
out
div
lock
mov
repz
mov
and
push
cmp
jns
in
loope
jle
adc
pop
out
jns
outs
int
jns
mov
fcomp
scas
jbe
mov
and
outs
xor
inc
and
push
(bad)
jmp
dec
(bad)
jno
push
(bad)
mov
and
jnp
scas
mov
(bad)
(bad)
jle
scas
shr
mov
or
jg
shr
pop
scas
cmps
enter
inc
add
leave
in
sub
dec
das
and
sub
adc
sub
or
cmps
mov
add
(bad)
adc
sbb
jb
add
mov
xchg
xor
js
dec
fsubrp
stos
mov
out
jge
popf
je
push
leave
xchg
add
les
sub
movs
mov
and
adc
xchg
xchg
mov
retf
cs
ds
add
stos
js
pop
lock
mov
test
loopne
jbe
(bad)
xacquire
imul
dec
js
movs
jle
and
loopne
enter
lds
jnp
xor
mov
aas
ds
mov
push
mov
cmc
js
mov
pop
dec
imul
popf
cmps
push
xchg
and
and
mov
mov
xchg
xchg
sar
dec
nop
mov
cs
iret
jle
enter
popf
sub
fcom
mov
shr
cmps
(bad)
pop
xchg
push
or
mov
bound
sbb
sub
and
pop
loope
hlt
retf
jmp
shl
fdiv
pop
jmp
xlat
xor
fmul
dec
jmp
int3
pop
inc
hlt
iret
cmp
cmps
jp
inc
cmp
jo
les
shl
mov
mov
mov
sti
pop
mov
movs
pop
sub
pop
dec
push
movs
push
sbb
jns
ins
jne
(bad)
adc
mov
cld
lods
ins
(bad)
push
cmp
sbb
cs
(bad)
ficomp
pop
sub
je
es
jl
test
xchg
lahf
ss
pushf
clc
(bad)
aam
push
push
and
jmp
add
fidivr
and
out
mov
xor
pop
xor
hlt
lods
sub
adc
adc
sbb
cmps
iret
push
lock
cmp
std
and
cmp
mov
lahf
adc
sub
aaa
aaa
or
sub
mov
jo
imul
gs
lea
cmp
mov
mov
xor
into
mov
push
cmp
shr
lock
pop
les
aas
js
(bad)
jb
sub
xchg
hlt
int3
int3
and
pop
jge
rcl
aaa
ds
(bad)
mov
das
push
xor
and
sub
mul
xchg
out
loopne
neg
outs
and
xor
leave
mov
dec
dec
fs
call
ja
aaa
(bad)
in
cmp
inc
pop
int3
les
mov
into
in
dec
adc
fsub
push
cmp
cwde
shl
retf
ret
mov
enter
out
rcr
pop
stos
push
or
ret
fadd
add
xor
fadd
into
cmp
pop
in
daa
dec
xchg
or
add
mov
jne
or
ret
xor
xchg
(bad)
push
cmp
mov
lea
cld
sub
cdq
jae
adc
dec
loop
data16
dec
aad
lods
jge
(bad)
jns
jecxz
xor
and
cwde
adc
sub
out
icebp
neg
fmul
jo
mov
cmp
out
icebp
iret
nop
rol
push
aaa
pop
sahf
pop
dec
mov
push
inc
xchg
dec
adc
lds
push
mov
es
idiv
cli
pop
pusha
out
jae
scas
push
sbb
iret
adc
leave
adc
enter
fidiv
mov
(bad)
inc
leave
mov
sub
adc
repz
ror
dec
dec
inc
mov
jmp
pop
inc
popf
dec
sbb
jecxz
xchg
cmp
jle
data16
mov
dec
mov
pop
mov
fwait
ret
mov
adc
dec
pop
xor
jmp
sahf
les
mov
sbb
xchg
mov
pop
std
lock
lds
sti
retf
dec
idiv
stc
mov
xor
retf
cli
xchg
sar
or
scas
cmc
ret
and
push
pop
outs
mov
cmp
and
cmps
movs
(bad)
mov
(bad)
clc
sbb
mov
in
dec
nop
jo
xor
fstp
dec
jno
mov
call
ins
outs
into
pop
ja
pop
jecxz
mul
push
cmp
jno
test
dec
sub
jle
or
pop
(bad)
mov
xor
push
(bad)
xor
sbb
jo
inc
pop
push
loopne
mov
ins
aaa
mov
inc
loope
std
jbe
call
adc
or
iret
inc
lea
fstp
sbb
ds
ins
pop
jne
push
(bad)
bound
pop
mov
add
sub
iret
test
or
inc
lahf
mov
es
daa
inc
div
pop
or
add
and
(bad)
mov
das
pop
popf
ret
mov
ficomp
jno
loop
movs
push
dec
sahf
or
test
aaa
cmc
test
push
cmc
out
add
pop
adc
pop
push
pop
jmp
push
sbb
jg
or
je
push
push
loopne
pop
mov
xchg
push
adc
mov
push
cmc
cmps
loopne
outs
inc
sub
jp
cmc
push
ins
retf
mov
jo
and
imul
push
pop
jo
sbb
xlat
pop
sub
adc
add
cmp
ret
(bad)
cmp
mov
jmp
xchg
sahf
jno
mov
xor
lahf
add
in
in
out
or
mov
mov
ins
push
ja
adc
rol
cmp
or
add
ins
mov
mov
dec
add
xchg
add
stos
addr16
jmp
add
setae
jne
iret
les
dec
into
and
sbb
je
popf
retf
adc
mov
mov
inc
mov
xchg
fcos
loope
out
mov
cs
loopne
nop
cs
popa
push
shl
leave
mov
dec
pop
sbb
icebp
pop
sub
and
jmp
or
jg
les
gs
clc
dec
stc
mov
pop
pop
mov
xchg
pop
pop
mov
pusha
mov
bound
int
pop
dec
pusha
inc
cdq
mov
mov
fild
pop
add
xor
int
sahf
jge
aas
cmp
mov
add
pop
jle
sbb
aaa
xor
mov
cs
add
mov
mov
ins
inc
dec
mov
or
jmp
jb
cs
inc
nop
or
mov
sub
jp
sbb
mov
in
and
jmp
aam
pop
test
sbb
dec
mov
out
(bad)
retf
or
ret
mov
out
sahf
cmp
add
fwait
push
lods
mov
push
jmp
add
or
jg
mov
sbb
inc
push
mov
adc
dec
sti
pop
cmps
icebp
test
mov
dec
mov
movs
(bad)
cmp
mov
xlat
outs
test
jmp
mov
pusha
int
pop
adc
mov
js
movs
add
loop
and
sbb
mov
(bad)
repz
add
sub
outs
out
fnstenv
lods
cmp
mov
jp
xor
xor
dec
(bad)
push
or
mov
fwait
cmps
inc
(bad)
push
call
mov
push
popf
int
daa
jl
loopne
addr16
add
repnz
jo
xor
pop
retf
push
fnstcw
popf
cmp
ins
cmps
inc
std
sub
std
outs
xor
mov
rcl
mov
or
xchg
fs
sti
xor
mov
sub
mov
mov
xchg
arpl
sbb
jne
rol
inc
jl
jmp
fcom
mov
push
ins
movs
(bad)
cmp
inc
shl
cli
xor
cs
mov
fwait
pop
pop
inc
js
mov
or
das
cmp
adc
lock
push
jo
fwait
sar
rcr
dec
je
sbb
inc
xchg
mov
into
out
mov
jecxz
or
dec
mov
jo
xor
mov
mov
nop
sub
ret
xor
addr16
xor
popf
inc
stos
xchg
in
mov
cmp
sub
jp
inc
stc
sub
pop
cmp
ret
cmp
fstp
or
adc
add
xor
add
sbb
ret
pusha
in
xchg
push
test
cdq
xchg
mov
test
add
scas
xor
aaa
xchg
test
jp
pop
data16
sub
mov
sbb
into
or
xchg
mov
lods
sar
sbb
xchg
adc
push
push
daa
jg
sbb
add
lods
mov
int3
int3
add
cmps
mov
arpl
mov
push
arpl
retf
aas
loop
fldenv
gs
mov
das
mov
ja
jne
push
jb
(bad)
stc
(bad)
sbb
sub
test
jle
stos
xor
push
dec
inc
adc
and
mov
in
xchg
out
leave
test
cmp
bound
into
sub
mov
mov
outs
data16
and
test
pushf
jns
nop
and
jne
pop
call
call
repz
rcl
pop
push
adc
pop
jle
xchg
dec
mov
pop
jecxz
ins
jbe
mov
sub
mov
inc
dec
test
ins
pop
outs
xor
jns
test
pminsw
xor
test
mov
test
call
in
loope
scas
jbe
fst
out
stos
in
push
jb
stos
mov
in
lods
nop
es
mov
push
inc
dec
push
cmp
daa
ins
into
mov
sub
neg
lods
jns
jmp
imul
rol
jno
inc
adc
adc
mov
ficom
cmps
(bad)
mov
hlt
sbb
sub
shl
mov
test
aas
add
mov
mov
or
push
jge
xchg
lock
dec
outs
test
or
mov
jbe
and
cmps
in
inc
outs
movs
leave
clc
xlat
(bad)
fsubr
xchg
icebp
dec
popf
inc
jae
fisub
mov
(bad)
push
push
lods
daa
shl
je
scas
jp
inc
dec
push
ret
jle
not
pop
out
sbb
retf
and
mov
das
ins
not
mov
xchg
into
not
popa
retf
retf
lods
ret
cmp
into
or
pushf
add
sbb
stos
jmp
inc
dec
mov
pop
ds
ds
fistp
out
dec
repz
(bad)
fnstcw
mov
inc
xor
push
cld
and
jmp
mov
xchg
aam
xchg
in
cdq
inc
inc
std
sbb
(bad)
sbb
hlt
inc
lock
repz
sbb
sar
retf
xor
adc
push
test
mov
rcl
mov
sbb
mov
hlt
xchg
sbb
sti
leave
push
cmp
mov
cmp
in
cmps
add
jl
retf
mov
pop
test
rcr
aaa
push
sbb
(bad)
mov
dec
imul
sbb
mov
or
xchg
xor
sbb
add
fdivr
shr
(bad)
and
jecxz
mov
lea
fadd
add
pop
add
shl
inc
mov
in
sbb
out
test
dec
mov
ins
add
cmp
mov
movs
mov
inc
jnp
cli
mov
xchg
add
xor
pop
imul
cmp
jp
or
scas
int3
jbe
jp
loopne
data16
cmc
dec
add
ret
imul
add
mov
dec
cmp
test
sub
xchg
imul
cmp
popf
sbb
jle
imul
popa
adc
jmp
(bad)
fld
cdq
ret
sub
xchg
iret
jbe
xchg
add
popa
mov
xor
push
push
stos
mov
jl
outs
xor
xchg
outs
sti
(bad)
fwait
out
xor
bound
test
aad
pop
outs
mov
ins
mov
mov
and
fwait
sbb
mov
jg
inc
scas
retf
lods
or
int3
ds
(bad)
repnz
cmc
leave
cmp
lock
pop
dec
mov
mov
(bad)
cmps
sub
ins
into
mov
test
pusha
mov
mov
leave
ret
cmp
leave
jne
pop
inc
addr16
ja
xchg
in
(bad)
stc
push
imul
jns
push
push
add
out
scas
and
mov
clc
sti
enter
add
add
jmp
mov
and
or
pop
xlat
xor
pop
add
test
or
stc
xor
popf
xor
(bad)
xchg
pop
mov
xor
ret
fdecstp
or
inc
mov
sbb
shl
nop
inc
mov
cmp
xor
sbb
mov
jnp
sub
adc
xlat
jle
cwde
mov
loope
iret
add
xlat
or
clc
and
push
outs
jmp
(bad)
imul
scas
pop
cli
(bad)
mov
lods
das
mov
dec
dec
pop
and
or
fmulp
cdq
in
cmp
dec
jne
add
sub
repnz
or
mov
push
sbb
icebp
jg
fdiv
repnz
mov
test
adc
cdq
inc
outs
jbe
pop
nop
fidiv
pop
sbb
mov
outs
dec
push
pop
cs
push
dec
push
sub
out
jl
and
arpl
fld
mov
ret
inc
je
sub
hlt
jge
mov
fucomp
test
pusha
test
int
movs
daa
sub
inc
or
arpl
cmp
xor
mov
or
test
jae
inc
mov
add
bound
adc
sbb
pop
repnz
add
fidivr
nop
dec
push
inc
adc
imul
mov
and
mul
popf
clc
mov
lock
sbb
push
lock
jg
gs
outs
in
(bad)
(bad)
shl
bound
inc
pop
pop
daa
push
sbb
or
cmp
pop
jbe
js
xchg
jne
and
or
pop
int
shl
cmc
xchg
sbb
mov
sahf
test
mov
dec
adc
lods
inc
rcr
cmp
ffreep
mov
aam
pop
xchg
(bad)
pop
retf
adc
fisubr
pusha
rcr
inc
test
repnz
lods
ins
xchg
dec
movs
cmp
rcr
cmp
fdivr
cmc
and
lock
repnz
(bad)
push
or
or
add
popa
mov
jne
dec
(bad)
xchg
lods
cmps
sub
cmp
pop
xor
add
push
and
xchg
es
dec
sub
adc
adc
aaa
fnsave
(bad)
shl
xor
cmp
(bad)
cli
jb
lds
aam
or
int3
sub
or
mov
imul
iret
mov
dec
inc
and
jge
leave
std
cmp
outs
in
dec
mov
leave
mov
pop
jl
sub
movs
inc
dec
xor
jns
mov
jle
es
sub
test
sbb
ret
mov
mov
sbb
jbe
scas
lea
add
fisub
out
rcl
push
pop
lock
and
mov
test
aas
std
shl
jae
and
ins
outs
mov
movs
shl
or
cmp
lods
push
rcl
adc
and
icebp
and
add
out
push
push
jae
push
jg
inc
cwde
test
add
jecxz
cs
test
push
out
out
sar
gs
sub
inc
fs
clc
add
in
movs
mov
cmp
dec
push
jecxz
dec
pop
cmps
mov
int3
xchg
xchg
add
movs
test
stc
mov
popf
(bad)
sbb
push
jg
(bad)
fcmovbe
jl
adc
and
jecxz
cwde
lahf
and
cdq
imul
sbb
adc
xor
sub
xor
pop
xchg
test
ins
stos
push
mov
test
js
xchg
int
or
and
xchg
hlt
sbb
mov
stos
sbb
mov
pop
add
(bad)
jne
fisttp
in
mov
mov
jge
ret
shl
jnp
int3
fidivr
arpl
xchg
jae
jmp
shl
adc
repnz
das
pop
push
sbb
ret
out
and
fs
jno
sub
sub
xchg
inc
lods
sbb
mov
cwde
fsub
xchg
ss
ins
shl
fwait
cmp
leave
fucomip
adc
iret
popf
aaa
addr16
scas
sahf
push
or
bound
xor
cmps
mov
mov
and
add
dec
cmp
into
xchg
loopne
pop
mov
es
inc
dec
sbb
or
not
test
mov
(bad)
adc
aad
pop
fcomp
scas
cmc
mov
stos
mov
add
dec
or
idiv
stos
sub
outs
outs
lea
popf
sti
std
sbb
and
pop
and
test
dec
jne
and
imul
add
loop
adc
cld
addr16
lods
dec
aam
xchg
ja
sub
loopne
cmp
xchg
ror
cmc
fdivr
out
fld
ins
xlat
pusha
cli
xchg
hlt
dec
push
in
inc
mov
jae
cli
test
(bad)
mov
scas
push
xchg
call
sub
mov
lods
sti
cmp
mov
sti
lea
dec
inc
scas
loop
out
mov
mov
xchg
jo
cdq
out
das
hlt
add
ror
push
mov
push
cdq
loopne
stos
mov
inc
outs
and
stc
mov
mov
jnp
ret
mov
sti
sbb
jecxz
and
ins
push
movs
mov
enter
pop
rcr
call
mov
sub
cmp
pop
jle
jg
les
rcr
stc
dec
xor
fbld
(bad)
aam
xchg
xor
jae
cmc
aaa
enter
jmp
push
dec
mov
pop
std
test
jns
cmps
inc
add
ret
adc
or
(bad)
je
fwait
scas
es
pusha
ret
icebp
xchg
pop
enter
mov
sub
adc
jl
out
jns
movs
pop
pop
stos
dec
jecxz
xor
aad
cld
in
enter
call
sub
enter
retf
(bad)
sub
sbb
aaa
dec
pop
out
push
dec
sahf
imul
inc
inc
mov
xchg
loopne
ja
xor
mov
(bad)
pushf
ins
jge
stos
mov
in
adc
cmp
aad
pop
dec
(bad)
addr16
pop
les
or
inc
dec
xor
call
movs
test
jecxz
or
ret
push
test
int
outs
xor
jmp
jl
or
push
fs
mov
jg
sub
mov
imul
test
das
xchg
mul
test
jecxz
xor
inc
scas
and
fcmovnu
xchg
aaa
or
inc
xchg
das
sbb
retf
sbb
xchg
clc
sbb
sbb
sub
stos
cld
movs
sub
int3
icebp
and
ins
xchg
ins
daa
dec
mov
push
dec
pop
xor
daa
sbb
mov
ret
jp
add
jp
cwde
jge
jl
shl
jno
sbb
lea
fidiv
adc
xchg
test
sbb
mov
xchg
fwait
lods
pop
and
test
pop
jl
dec
ret
xor
mov
out
jbe
add
mov
jmp
(bad)
sahf
mov
pop
inc
popf
pusha
addr16
out
jno
xor
ficom
movs
push
test
popa
mov
mov
call
sub
mov
sub
cdq
cwde
push
mov
mov
iret
shl
pushf
test
leave
cmp
mov
enter
repnz
mov
lea
cmp
xor
aam
push
out
jns
or
xchg
or
sub
cdq
(bad)
rcl
pop
mov
cmp
adc
scas
push
in
addr16
add
arpl
ins
jne
fist
stos
dec
bound
(bad)
jno
gs
xchg
sbb
adc
dec
cmc
aaa
mov
je
cmp
frstor
or
push
sub
and
jno
mov
inc
adc
jmp
pop
xor
push
call
and
mov
push
aam
out
mov
mov
inc
rol
aaa
mov
pop
xchg
dec
rol
stc
adc
mov
inc
imul
and
add
cld
sbb
cld
add
push
aad
xchg
xchg
out
inc
pop
adc
je
jp
sbb
jo
cli
inc
std
daa
mov
div
push
data16
fs
cs
pusha
(bad)
call
and
pop
jo
loope
scas
hlt
in
mov
es
fwait
shl
retf
and
mov
rol
push
mov
xor
sub
cmp
sar
rcr
aas
cld
iret
push
jl
lidtd
out
push
outs
cdq
stos
xchg
adc
and
je
(bad)
and
nop
ret
mov
out
cwde
or
mov
test
stc
shl
dec
jl
mov
mov
push
mov
(bad)
pop
cmp
xor
sub
aas
inc
sbb
imul
bound
in
icebp
mov
aad
jp
loopne
sub
pushf
out
addr16
add
pusha
fnsave
hlt
jb
in
mov
mov
out
jle
adc
hlt
push
inc
or
mov
mov
mov
adc
fstp
sub
mov
inc
push
aam
mov
add
xor
push
mov
inc
mov
xlat
int
mov
ss
push
sub
push
dec
shr
shl
(bad)
stos
dec
loope
aam
jne
push
cmp
dec
out
outs
mov
outs
push
add
inc
inc
ins
loope
push
cmc
lods
div
or
xchg
add
push
rcr
inc
mov
call
inc
jno
inc
dec
sti
enter
pop
stos
xchg
aad
fldcw
push
and
jae
add
scas
and
clc
push
fcom
mov
movs
into
loope
fs
int3
pusha
xlat
pop
and
or
add
outs
fsub
push
jl
inc
jmp
adc
inc
jae
lods
out
pop
lds
sbb
mov
push
adc
and
add
jecxz
mov
js
ret
fld
cld
mov
and
and
cmp
xchg
enter
stc
push
fisub
aam
je
adc
call
pop
jne
jo
pop
cwde
or
sbb
test
js
fs
lock
std
dec
xchg
pop
in
stos
call
add
ret
ret
call
hlt
adc
lock
fs
sbb
daa
outs
jecxz
ror
enter
int3
fadd
jg
or
popf
test
add
leave
fs
dec
xor
dec
mov
add
xchg
aaa
rcl
sbb
clc
sbb
sti
shr
enter
das
and
fmul
mov
pop
jno
nop
inc
lahf
cli
cmc
icebp
fdiv
cmp
mov
add
add
fst
jns
mov
cmp
inc
push
add
(bad)
sub
or
pushf
repnz
mov
lods
iret
mov
xchg
fbld
lock
pusha
cmp
jmp
in
pop
clc
pop
xor
adc
js
sub
repz
inc
adc
push
loop
mov
push
jns
jg
sub
dec
add
sub
call
(bad)
add
add
dec
and
jns
stos
enter
shl
stos
es
pop
scas
fld
rcl
lds
dec
pusha
rcr
cmp
adc
mov
les
dec
fs
call
or
mov
sbb
push
loop
sbb
mov
inc
imul
sub
jo
push
mov
(bad)
jb
mov
test
adc
movs
(bad)
adc
jbe
out
bound
shl
adc
cmps
mov
hlt
stos
imul
sbb
dec
aad
gs
or
xlat
icebp
cmps
sub
fdiv
loopne
clc
mov
imul
call
xchg
push
popf
push
outs
dec
lds
fmul
mov
jp
lahf
mov
or
jns
scas
push
sbb
popa
into
jle
pop
sub
cli
pop
pop
inc
push
jns
pop
icebp
mov
and
mov
inc
jmp
and
loop
jo
scas
sub
fadd
add
repnz
pop
push
jae
mov
std
cmp
jg
inc
lods
(bad)
call
cmps
mov
and
lds
adc
scas
mov
int3
(bad)
iret
sub
inc
push
jp
add
movs
cmp
mov
mov
in
mov
mov
adc
adc
pop
and
or
pop
jnp
fild
mov
mov
das
pop
push
lds
dec
iret
ret
xchg
mov
imul
daa
jmp
cmp
inc
repnz
lahf
mov
xor
sbb
fs
inc
in
xor
aaa
adc
adc
ds
stc
ds
imul
lods
cld
push
mov
xchg
sub
imul
icebp
fs
mov
clc
inc
xchg
test
js
add
ret
dec
add
push
scas
fadd
pop
push
push
cmc
out
cmp
nop
dec
lahf
nop
(bad)
(bad)
or
mov
add
bound
sar
out
pop
mov
out
popa
jmp
and
add
sub
jmp
mov
or
iret
xchg
jne
jmp
sub
shr
ss
jmp
jnp
or
push
aaa
shl
add
or
jl
imul
(bad)
retf
cmp
enter
sar
popa
sbb
xchg
or
ret
int3
rcl
jmp
adc
pop
loope
jge
shl
adc
popf
dec
mov
push
stc
imul
push
mov
sahf
add
push
outs
(bad)
ins
mov
imul
and
in
cs
fdivr
dec
stc
push
addr16
ds
xor
movs
cmc
dec
xor
pop
movs
add
shl
push
out
inc
push
push
inc
adc
jge
rcr
push
mov
cld
jecxz
je
rcl
inc
cld
adc
rcl
push
pop
movs
pop
inc
jmp
in
mov
adc
xchg
cmps
sahf
ds
sbb
repz
sti
inc
mov
loop
cmps
xor
mov
ja
inc
pop
outs
fmul
or
stos
mov
sbb
stc
movs
and
dec
jne
ins
jmp
jbe
inc
or
inc
bnd
popa
sub
ret
xchg
dec
(bad)
mov
jp
and
ficom
retf
add
push
popa
jl
mov
mov
dec
mov
push
gs
icebp
push
pop
scas
fild
sbb
or
and
jbe
inc
sub
sbb
test
dec
std
div
xchg
std
add
cwde
out
and
(bad)
scas
sbb
mov
enter
mov
dec
test
inc
aam
jge
popf
sti
retf
jecxz
repz
push
mov
les
les
and
shl
add
movs
rol
scas
retf
xor
les
fs
inc
shr
pop
aam
xor
call
sub
jl
lds
jne
push
lods
data16
pop
leave
and
les
dec
loope
dec
push
cmps
fdiv
iret
aas
sub
or
lods
pop
and
out
jbe
add
cs
xchg
dec
jae
ror
cmp
in
jp
jo
ret
push
xchg
jb
out
xchg
bound
popa
lea
cmps
inc
enter
fst
not
sar
retf
pop
sub
and
int
adc
pop
test
and
fs
lods
aaa
pop
inc
in
cdq
mov
and
and
mov
mov
pop
xchg
idiv
ss
jno
or
es
aas
or
ror
rol
inc
mov
push
inc
aaa
jne
dec
xlat
mov
xchg
adc
xchg
jo
sub
outs
sbb
mov
inc
jl
dec
ds
and
cmps
scas
out
retf
mov
std
sbb
inc
cmp
mov
dec
mov
push
std
repnz
or
ja
sbb
jns
mov
(bad)
sbb
and
scas
lock
popa
lods
jmp
xchg
rcl
ss
into
mov
call
jle
sub
push
sahf
ror
push
xor
sub
loopne
xor
or
push
(bad)
(bad)
std
sbb
fadd
jno
push
stc
movs
int
and
dec
std
xor
adc
int
mov
pop
push
cld
mov
das
push
xchg
(bad)
mov
sbb
add
sub
mov
xor
dec
jo
movs
adc
xchg
jge
dec
jns
xchg
call
dec
fst
ret
pop
mov
inc
sub
mov
scas
xor
das
mov
mov
leave
push
sub
mov
loop
shl
push
ror
stos
mov
mov
xchg
adc
mov
sub
sahf
jnp
scas
test
test
mov
je
and
xchg
xor
mov
mov
jle
lds
cmps
xor
mov
cmps
ja
jg
stos
sub
jo
sub
cmp
cmc
lds
sti
out
(bad)
jl
sub
jle
fstp
inc
or
pusha
sti
pusha
arpl
ins
jecxz
sub
in
scas
xchg
push
or
and
mov
aad
sub
ss
inc
inc
stc
(bad)
cmp
sbb
data16
cmp
fcom
in
cmp
jne
add
jg
cdq
and
inc
pop
xor
mov
dec
aaa
and
dec
aaa
cs
add
sbb
gs
cmp
mov
xchg
or
ins
rol
cmp
dec
mov
push
inc
enter
int3
sbb
lods
mov
std
mov
jb
fdecstp
pop
out
jnp
adc
pop
jbe
add
pop
pop
and
mov
arpl
or
pop
lahf
(bad)
gs
or
xor
(bad)
xor
push
sbb
je
xor
adc
imul
and
test
dec
xor
call
rol
cmp
sbb
add
jle
inc
loope
xor
jge
into
loop
jnp
into
jge
xchg
jl
sbb
sub
jl
fstp
movs
jl
loop
call
popa
jge
add
xor
fcomp
jge
rcl
adc
push
hlt
add
movs
mov
lahf
push
sti
je
pusha
and
and
cmp
fadd
retf
cmp
mov
mov
sub
fisttp
or
xor
cmp
push
mov
les
sbb
xor
outs
and
mov
(bad)
xchg
mov
stos
pop
into
call
jne
pop
mov
and
cmp
jle
xor
(bad)
pusha
jmp
mov
popa
jle
movs
cmps
(bad)
and
add
loop
sub
dec
jecxz
in
dec
mov
adc
cli
jge
and
and
add
cmp
ror
jae
sbb
push
or
mov
mov
xor
jmp
ja
jne
test
in
mov
lock
xor
stos
add
xchg
sub
(bad)
jno
pminub
js
pushf
mov
enter
adc
sbb
sbb
call
pop
sbb
pop
(bad)
jmp
outs
enter
adc
in
dec
dec
es
sub
adc
xor
ret
and
std
call
sub
and
push
xchg
inc
mov
icebp
xchg
addr16
pop
outs
retf
enter
sti
popaw
(bad)
mov
loope
cmp
add
and
jne
xlat
in
(bad)
inc
push
inc
push
hlt
cmc
ds
jns
out
mov
mov
jle
sbb
jnp
(bad)
(bad)
cld
sti
lds
xchg
mov
push
add
retf
or
add
push
test
loopne
arpl
dec
inc
(bad)
mov
call
loope
jmp
cmps
dec
xchg
xchg
imul
or
sbb
enter
or
jle
mov
jmp
mov
sub
xor
mov
pop
and
cmp
aas
and
shl
ja
add
adc
(bad)
ins
popf
ret
cmp
cmp
or
cmp
repz
adc
sbb
push
push
test
mov
pop
jnp
add
push
aaa
xor
mov
test
dec
xor
mov
push
shl
jecxz
call
out
lds
out
pop
xchg
mov
fstp
pop
loopne
or
ror
add
xor
fs
push
(bad)
fbld
push
xchg
dec
enter
movs
cmc
jns
mov
jo
sti
icebp
jnp
push
jns
push
sbb
fisub
xor
mov
loop
sbb
jle
ins
aam
xor
pop
neg
xor
fdivr
dec
(bad)
clc
or
fnop
test
mov
pushf
int
fstp
adc
pop
cwde
sbb
mov
ret
idiv
xchg
push
in
adc
mov
mov
push
clc
inc
jp
xor
xor
leave
jo
mov
inc
not
pop
xor
pusha
add
lea
and
mov
fcmovnb
ret
push
pop
das
mov
xchg
dec
iret
and
lea
leave
into
cld
out
mov
pop
std
leave
or
adc
sbb
cmp
mov
imul
(bad)
in
mov
and
clc
push
movs
leave
test
or
fucomip
sub
lds
cmc
push
(bad)
pusha
ret
sub
pop
inc
adc
nop
or
inc
in
dec
lods
xlat
cmp
mov
outs
mov
inc
(bad)
xchg
cwde
jmp
jecxz
adc
clc
pop
mov
dec
scas
xchg
cmp
into
enter
in
push
fild
xchg
data16
daa
push
pushf
cmp
repnz
mov
mov
cmps
cmp
and
nop
clc
fst
bound
imul
fidiv
data16
add
and
in
repz
nop
xor
push
in
xor
loopne
push
sub
adc
popf
outs
adc
dec
and
ins
push
xlat
mov
push
(bad)
adc
or
popf
sar
mov
shl
and
cmps
mov
xchg
xchg
add
arpl
xor
mov
loope
inc
ror
inc
pop
and
lds
dec
add
mov
fld
add
(bad)
cli
popf
repnz
mov
xchg
xchg
addr16
push
and
or
test
cmc
push
out
arpl
gs
sbb
pop
retf
xchg
fadd
sub
inc
ja
push
pop
jg
sar
mov
pop
sub
xchg
sbb
mov
aas
pop
es
pop
icebp
dec
fdiv
add
inc
call
add
and
adc
adc
xchg
xchg
outs
fmul
jge
push
or
and
mov
xlat
jne
or
loopne
(bad)
mov
ret
jne
mov
outs
(bad)
mov
jns
je
pop
xchg
test
loopne
mov
xchg
adc
cmp
cmp
add
aad
cmp
xor
mov
(bad)
cs
cli
movs
ds
stos
out
sbb
jns
cmp
xchg
test
add
imul
push
cli
mul
cs
das
setg
jmp
push
(bad)
addr16
jb
test
loop
inc
mov
shl
mov
test
mov
push
sub
in
xor
test
mov
mov
aas
push
xor
aad
jg
push
out
aad
loopne
call
jg
cmp
mov
push
mov
mov
call
aas
jae
mov
sub
push
push
sti
and
mov
mov
adc
mov
imul
add
dec
add
adc
mov
pop
cmps
mov
popa
out
(bad)
test
dec
rcr
inc
retf
aad
fcomp
pop
jg
neg
cs
mov
add
sub
sbb
sbb
sahf
xor
lahf
cs
hlt
add
push
add
cmc
fcom
mov
pop
in
addr16
cwde
dec
cwde
xor
pop
jno
fisttp
sub
adc
adc
cs
daa
int3
retf
pop
jno
push
sti
sahf
push
push
dec
and
pusha
sbb
fiadd
fcmovbe
icebp
rcl
call
or
sub
(bad)
adc
aam
jecxz
mov
fmulp
cs
adc
in
cmps
cdq
ins
mov
push
mov
inc
push
aam
push
push
dec
jnp
inc
xor
sub
pop
and
fsub
(bad)
loopne
add
(bad)
push
retf
stc
pop
sbb
cmps
lods
cmp
stos
sub
and
sub
hlt
add
ret
jmp
in
mov
jecxz
jmp
sbb
push
lock
je
fmul
or
mov
cmp
out
popa
les
ins
ss
scas
push
xchg
xor
ins
mov
frstor
je
ins
xchg
mov
jnp
dec
jl
adc
xchg
jecxz
(bad)
cmp
scas
mov
test
pop
fsub
lods
and
rol
int3
pop
push
fsubr
leave
or
mov
mov
das
xlat
mov
pop
mov
int
jp
add
mov
dec
mov
mov
mov
pop
push
call
ret
mov
and
dec
xor
mov
fs
dec
mov
push
inc
daa
sbb
and
test
iret
sub
ret
gs
test
dec
sub
(bad)
and
aam
nop
repz
std
pop
pop
retf
xor
or
ds
movs
and
test
pushf
mov
hlt
push
les
sub
fisub
adc
ss
not
ins
movs
mov
pop
sub
cmp
mov
pop
jno
sub
ret
(bad)
or
std
pusha
push
(bad)
(bad)
mov
sbb
sbb
(bad)
mov
hlt
add
mov
xchg
mov
mov
push
xchg
cs
(bad)
jecxz
mov
test
mov
mov
shl
(bad)
fwait
push
jmp
sbb
adc
xchg
jge
xor
jns
retf
sar
aas
inc
std
not
add
call
xchg
mov
mul
pop
sub
test
jae
mov
bound
pop
out
(bad)
not
jno
cs
dec
(bad)
cmp
call
fsubr
loopne
jne
fmul
sub
mov
xchg
and
aad
pop
lock
scas
push
jne
ret
pop
cmp
leave
mov
sbb
cli
rol
inc
lods
mov
fcmovbe
push
jo
mov
push
adc
pushf
cmp
xor
sti
xor
lahf
loope
xchg
in
sub
ror
fcmovu
hlt
aam
test
(bad)
movs
dec
outs
jmp
les
sub
clc
push
cmp
das
outs
pop
sbb
lods
or
sbb
cmp
or
fneni(8087
inc
xchg
mov
ds
sahf
ins
xor
loope
shl
xchg
mov
dec
icebp
sub
popa
arpl
jge
or
mov
fnstsw
sub
(bad)
mov
push
in
fcmovnu
lods
xlat
and
(bad)
inc
cld
daa
js
fdivr
xor
or
pop
into
inc
fwait
stc
cmp
add
es
sub
ds
(bad)
repnz
jge
test
mov
jle
int3
xor
and
outs
dec
(bad)
mov
jo
jo
adc
push
pop
pop
out
jl
cmp
repz
fstp
xor
bound
cmps
jge
(bad)
out
ja
or
sar
gs
stos
add
bound
inc
int3
or
xchg
inc
lahf
sub
ins
jmp
pop
bound
out
imul
stos
sbb
jmp
icebp
push
sar
cmp
xor
das
daa
add
fs
(bad)
sbb
repz
call
add
(bad)
hlt
inc
mov
jge
fmul
call
xchg
dec
or
scas
scas
jo
or
and
sub
push
mov
and
popf
mov
and
mov
mov
int
popf
add
jne
sar
jle
jns
jg
or
and
retf
push
cld
into
xchg
scas
mov
push
add
sbb
inc
pop
scas
xor
jns
xor
mov
jle
sub
fwait
shl
pop
pop
adc
dec
or
div
xor
sub
jns
pop
jno
pop
mov
bound
mov
sub
mov
mov
movs
cdq
ret
and
add
push
or
sbb
fistp
or
push
and
adc
pop
add
hlt
loopne
and
imul
into
sar
mov
ret
pop
scas
mov
nop
sbb
cwde
mov
(bad)
cmp
mov
inc
ja
outs
inc
aaa
je
xor
data16
rcr
cld
ins
shl
(bad)
ss
ins
push
ins
xchg
lock
jne
add
xchg
fs
scas
push
packuswb
into
je
push
adc
pop
push
fwait
mov
scas
dec
cmp
jnp
sbb
add
pop
arpl
js
mov
push
and
mov
imul
xor
mov
mov
fcom
pushf
jle
enter
cdq
mov
or
cmps
outs
pop
mov
cmp
(bad)
xchg
popf
and
sbb
iret
xor
xlat
add
shr
movs
lds
jne
shl
mov
jl
mov
fiadd
pop
push
sbb
xchg
pop
mov
and
das
aaa
push
push
cld
out
(bad)
bound
call
pop
ss
xor
popa
dec
arpl
(bad)
inc
js
push
shr
and
shl
leave
shr
cmps
das
or
imul
aam
movs
ja
out
cmp
push
inc
imul
fst
sbb
movs
add
ins
dec
push
nop
push
ss
call
jbe
pop
inc
and
out
imul
xchg
jno
(bad)
neg
js
or
(bad)
nop
ror
mov
push
mov
int3
xor
enter
pop
jl
inc
adc
stos
jo
mov
or
xchg
loop
push
mov
and
repnz
push
push
arpl
xlat
rcl
dec
push
mov
mov
inc
das
sbb
mov
aaa
es
dec
sbb
jb
test
xchg
(bad)
cmp
(bad)
inc
movs
fst
or
cli
cdq
pop
pop
popf
add
sub
mov
pop
test
mov
mov
stos
or
mov
add
into
pop
cmp
scas
dec
mov
mov
jnp
xor
in
pop
and
ret
jne
(bad)
mov
xor
jae
xchg
cwde
mov
and
data16
(bad)
jge
jl
into
(bad)
mov
aas
ret
jp
loopne
lods
sbb
push
jb
leave
add
outs
xor
retf
ret
stos
jno
lahf
data16
movs
cmp
push
mov
mov
jle
xor
dec
push
ror
push
ins
into
fst
arpl
mov
pushfw
mov
inc
mov
push
or
or
popf
outs
add
mov
arpl
mov
inc
pop
cmp
cmp
mov
addr16
push
xchg
mov
and
push
dec
mov
push
arpl
push
jp
push
rcl
jns
jge
or
push
out
xor
or
jl
or
aaa
mov
and
ins
pop
pop
pop
cs
fcom
xchg
data16
pusha
mov
or
mov
xchg
dec
test
in
or
in
pop
out
mov
in
scas
inc
clc
shr
pop
nop
fcomp
repnz
adc
push
imul
inc
or
mov
sbb
stos
repz
push
cmp
jl
cmp
sbb
push
sub
dec
fidivr
out
sbb
xchg
pop
or
pop
inc
jmp
push
or
stos
(bad)
mov
neg
movs
dec
jmp
ins
sub
or
ja
xchg
push
inc
mov
and
rcl
xchg
jg
imul
sbb
mov
icebp
xlat
mov
repz
dec
arpl
test
dec
jae
arpl
xor
lods
sbb
inc
inc
dec
fmul
mov
stc
pop
and
retf
and
scas
sub
cmp
out
jne
and
mov
jo
sub
and
xchg
jle
mov
mov
add
xor
inc
dec
(bad)
inc
arpl
cmps
cmps
ret
xor
cmps
add
js
scas
xchg
push
pop
shl
jmp
add
fistp
ins
das
mov
mov
fstp
jae
les
jns
sub
xchg
sar
pop
lods
mov
adc
lods
lock
ror
adc
aam
test
(bad)
adc
frstor
sub
fcmove
(bad)
in
cmp
sub
(bad)
jle
pop
push
mov
out
imul
in
jmp
add
rcl
xor
dec
pop
popf
push
dec
lds
repz
rol
nop
in
stc
xchg
mov
add
arpl
hlt
and
shr
pop
xchg
mov
pushf
lea
(bad)
jb
sar
fwait
fwait
leave
mov
bound
pop
in
pusha
out
or
jne
mov
and
lea
mov
or
mov
std
daa
div
sub
fwait
sbb
add
mov
mov
sub
add
or
lods
mul
sbb
pop
mov
and
loope
add
and
arpl
push
mov
push
lods
jne
aaa
(bad)
or
sahf
mov
mov
or
dec
lods
pop
das
inc
out
fdivr
mov
stos
(bad)
int
inc
xlat
cmp
cmp
and
xchg
out
imul
mov
adc
aas
or
or
mov
cmp
loopne
movs
shl
das
mov
test
cmp
imul
lea
mov
add
and
jmp
out
test
fsubr
jecxz
rcl
mov
sbb
cmps
xchg
(bad)
call
bound
sub
mov
jno
rol
mov
or
les
jl
mov
retf
retf
or
xchg
popf
aam
mov
dec
neg
dec
dec
lea
int
in
cwde
inc
lock
xchg
add
cs
retf
mov
mov
cwde
sub
loopne
xor
push
loop
scas
(bad)
mov
xor
mov
xor
bound
inc
push
pop
mov
cmc
cdq
repnz
rep
dec
leave
push
mov
add
lds
nop
inc
pop
sbb
add
push
xchg
sar
add
je
xlat
cmps
out
mov
pop
adc
mov
adc
(bad)
cdq
adc
dec
xchg
mov
inc
nop
dec
rol
int
dec
(bad)
push
mov
clc
push
jae
add
inc
fidivr
xor
sbb
shl
adc
leave
jo
jo
sub
or
jb
int
nop
mov
push
je
popa
imul
retf
pop
dec
cmp
xor
sbb
ins
clc
pop
push
popa
sbb
femms
mov
pushf
ins
in
jmp
pop
mov
pop
mov
pop
xchg
push
inc
call
jbe
dec
mov
push
dec
daa
hlt
es
cmps
jo
pop
rcl
push
sub
mov
fiadd
and
push
xor
rol
jge
rol
fisub
aas
dec
imul
ds
pop
pop
pushf
xchg
(bad)
jmp
dec
outs
mov
scas
mov
push
fdivr
call
ror
and
dec
push
ja
test
js
mov
jbe
jg
pop
fstp
rol
in
push
mov
rcr
mov
jne
icebp
loopne
movs
xchg
lea
and
push
cli
push
lods
mov
push
test
ja
cmps
or
movs
pop
mov
cld
mov
jo
cmps
or
push
imul
pop
adc
in
or
push
fisttp
xor
inc
dec
mov
(bad)
and
and
fstp
ins
cmp
adc
xchg
sub
cmp
ja
das
outs
out
movs
adc
jl
test
and
cmp
in
into
inc
outs
sub
mov
adc
shl
lds
jmp
dec
(bad)
jecxz
or
lds
push
or
mov
inc
jmp
mov
cmp
cmc
mov
ret
shr
sti
inc
or
mov
mov
sbb
sbb
hlt
add
dec
mov
xor
js
fnstsw
ja
fadd
in
ret
or
ins
shr
arpl
add
pop
pop
adc
leave
outs
fadd
mov
test
cwde
push
jns
adc
ret
adc
add
inc
das
mov
mov
mov
je
(bad)
aas
push
mov
in
jnp
repnz
(bad)
cmp
adc
adc
cmp
stos
sar
and
div
sahf
idiv
push
loopne
sti
(bad)
jl
ret
pop
retf
not
outs
sti
mul
push
sub
jl
xlat
add
mov
xchg
rcl
nop
loop
xor
add
imul
mov
aaa
call
jo
push
xchg
mov
mov
call
call
pop
inc
jnp
repz
es
cli
pop
(bad)
adc
cmps
inc
not
mov
or
or
push
(bad)
into
mov
mov
sti
aam
pop
rcl
movs
fdiv
neg
sbb
inc
retf
sbb
dec
adc
mov
jno
and
cmp
cmps
scas
test
lahf
mov
aam
jnp
mov
sar
or
ins
jns
push
fxch
push
(bad)
mov
into
jg
dec
data16
mov
(bad)
test
dec
scas
mov
in
mov
xchg
call
jns
imul
push
sahf
adc
enter
fidiv
adc
lds
sbb
mov
and
sub
loop
or
jns
clc
add
sub
add
popf
imul
xchg
or
(bad)
jg
dec
cmp
sub
cmp
adc
xor
fld
xor
mov
add
cmp
jbe
dec
test
push
mov
dec
xor
ja
jle
pop
jle
cmp
std
jecxz
test
dec
cmps
pusha
mov
hlt
sbb
out
in
and
bound
popf
outs
and
lea
retf
bound
fist
clc
jne
sbb
ror
fldenv
inc
call
lea
dec
cli
adc
cmp
js
lahf
lds
jl
stos
dec
arpl
ja
pop
sub
call
mov
jge
xor
pop
lods
out
out
mov
lahf
mov
jecxz
dec
xlat
adc
jl
cmps
dec
sbb
lock
push
or
mov
xchg
and
xor
dec
push
lock
sbb
jecxz
pop
add
cdq
icebp
xchg
jmp
fist
and
(bad)
and
xchg
mov
(bad)
pop
push
xchg
push
sub
sub
cmp
jmp
xchg
jno
jae
shl
bound
xchg
jno
scas
jns
pop
fild
call
sub
(bad)
addr16
cmp
aas
call
mov
fstp
adc
sbb
push
xchg
push
test
repnz
xor
lods
test
pop
movs
cwde
cwde
addr16
pop
inc
lock
dec
inc
enter
jmp
inc
mov
mov
out
inc
call
dec
loopne
mov
cmp
int3
stc
lock
inc
sub
or
pop
sbb
xor
movs
icebp
xor
cmps
xchg
and
or
enter
pop
popa
scas
mov
stos
xor
in
jl
ds
push
pop
ins
jmp
pop
aas
scas
aad
(bad)
inc
add
add
ins
fist
cld
cmp
mov
jae
or
mov
sub
dec
cli
das
xchg
cmp
mov
stc
jns
push
add
mov
cld
ret
sub
scas
ins
adc
stos
idiv
adc
shl
mov
in
inc
scas
inc
add
out
and
std
mov
aad
jmp
fptan
dec
lods
es
and
push
into
mov
xor
xor
xor
loopne
xchg
cdq
cwde
ins
jns
inc
add
rcl
je
(bad)
sub
adc
retf
mov
mov
pop
sub
cdq
popf
mov
repnz
inc
pushf
les
mov
mov
push
dec
les
iret
pop
stc
mov
or
sbb
jmp
outs
mov
rcl
and
mov
or
(bad)
mov
leave
xchg
(bad)
(bad)
mov
cdq
cwde
imul
jno
add
pop
jbe
dec
jbe
mov
std
jle
iret
xchg
(bad)
int
inc
shr
leave
xchg
mov
imul
jmp
inc
and
std
iret
fiadd
add
enter
cmp
retf
sub
jge
add
repnz
jbe
icebp
outs
mov
repnz
xchg
imul
call
jl
clc
popf
fst
xor
or
int
inc
xchg
cld
cmps
mov
cmp
jns
loop
fidivr
dec
cld
cld
pop
xchg
out
and
outs
sbb
jecxz
inc
mov
xchg
mov
test
push
add
jns
sub
shl
push
sub
push
pop
les
aad
outs
rcl
sub
mov
dec
xchg
xchg
or
or
scas
movs
xor
icebp
rcr
inc
and
mov
and
rol
push
jo
int3
pop
mov
sub
retf
cmp
mov
and
xor
(bad)
sub
sbb
xor
mov
das
sub
sar
ss
scas
mov
and
cmc
call
jmp
out
xchg
jecxz
cmp
rcr
mov
test
add
ins
jl
hlt
pop
cs
ins
in
dec
jbe
cmp
imul
jle
push
sti
dec
push
cvtps2pd
ror
lea
mov
(bad)
sbb
jb
xchg
pop
out
adc
ret
popf
xchg
test
xor
pop
xchg
and
or
pop
pop
mov
xor
ins
ins
fcmovnbe
ret
push
scas
cmp
xchg
cmps
dec
pop
(bad)
add
test
mov
aas
lds
mov
xor
sbb
pop
or
ret
ja
icebp
repnz
(bad)
repz
dec
jo
xchg
div
ins
nop
inc
and
jae
test
or
es
jmp
inc
dec
cli
inc
sti
mov
stos
idiv
dec
cmps
jecxz
out
jge
ret
pushf
mov
add
mov
xor
(bad)
mov
pop
shl
xor
mov
adc
xlat
xor
std
xchg
dec
ins
into
dec
(bad)
fisttp
out
lods
in
or
add
clc
fdivrp
pop
ins
ds
in
pushf
cmovp
(bad)
push
mov
mov
test
into
push
mov
cmp
je
ret
retf
jl
fs
(bad)
pop
add
fistp
jo
add
adc
add
std
sar
test
test
xchg
push
inc
stc
mov
mov
dec
stos
jne
in
jle
pop
rol
xor
(bad)
jns
in
shl
jmp
popf
in
ret
fs
ret
push
dec
jle
mul
sub
arpl
test
jbe
sbb
mov
ror
jne
xor
les
jo
or
mov
leave
pop
retf
add
jo
sub
inc
mov
in
dec
adc
ret
retf
ds
test
mov
lea
xchg
sub
jecxz
fdiv
xor
and
xchg
aad
rcl
push
(bad)
arpl
cmp
inc
jns
aas
xchg
mov
imul
rol
mov
sub
das
lods
js
xor
and
add
bound
sub
push
jns
fist
adc
jne
pop
dec
and
dec
and
aad
mov
movs
and
inc
sub
jle
add
sbb
pop
scas
sahf
aad
sbb
scas
sbb
pop
in
cmp
loope
jle
jo
scas
xchg
rol
mov
ja
adc
mov
xor
in
das
(bad)
xchg
jl
sti
or
mov
in
rol
dec
std
daa
call
sub
loopne
xlat
addr16
add
mov
or
mov
stos
fistp
loop
add
repz
scas
xchg
mov
dec
retf
movs
jne
jbe
stos
fild
sbb
sbb
ficom
sub
dec
call
push
xor
cmp
scas
pop
rol
xchg
mov
sbb
adc
dec
adc
mov
dec
mov
mov
mov
inc
(bad)
push
push
jne
xchg
inc
jp
mov
loopne
pusha
jo
mov
(bad)
(bad)
mov
push
out
mov
sub
and
cld
pop
inc
dec
dec
dec
fcmovne
push
pop
ja
push
mov
mov
or
sbb
push
repz
mov
pop
fucomp
aas
repz
mov
sub
ret
mov
or
pop
mov
inc
dec
pop
cdq
lahf
inc
rcr
xor
push
jp
sahf
dec
or
jns
cli
out
mov
outs
xlat
push
jae
stos
dec
vunpckhps
push
mov
cmps
dec
es
adc
or
shl
add
sar
or
scas
mov
xor
sub
aad
dec
ror
test
jnp
ja
xor
ud1
push
cmp
lds
lds
fucomi
(bad)
mov
ds
add
and
xchg
or
dec
imul
ss
repnz
jb
xor
ins
int3
shr
inc
ins
popa
dec
push
push
push
sub
std
(bad)
in
push
mov
test
dec
or
sbb
jne
fld
cs
(bad)
mov
mov
pop
inc
sbb
mov
sub
call
xchg
arpl
mov
iret
dec
pop
loop
sub
test
xor
and
mov
mov
loopne
and
in
inc
jecxz
or
outs
pop
loope
pushf
inc
in
pop
add
cmc
or
mov
jmp
call
fiadd
cmp
pop
mov
pop
(bad)
push
pop
loopne
cmp
or
ds
pop
out
push
add
cmp
mov
aas
(bad)
cmc
pop
out
xchg
adc
daa
inc
mov
sbb
push
sub
aad
jns
ss
push
lods
adc
loop
daa
ror
test
xlat
jecxz
out
shr
or
inc
mov
std
mov
mov
adc
in
and
int3
jb
inc
mov
inc
mov
jecxz
les
and
xor
cmp
test
test
shr
or
mov
cld
neg
icebp
loope
cmps
dec
das
mov
jnp
mov
cmc
ins
jne
push
or
loope
and
int3
jnp
addr16
arpl
push
sub
dec
shr
xchg
sbb
mov
jmp
dec
push
test
mov
dec
shr
jb
adc
ja
int3
lea
mov
dec
cmps
mov
push
inc
cmp
mov
xchg
add
imul
or
(bad)
and
test
mov
push
fist
push
adc
xor
and
sub
outs
jg
(bad)
pop
test
xchg
aam
test
or
jns
jnp
repz
xor
ins
xor
xchg
mov
adc
and
xor
das
retf
pop
pop
pushf
fs
push
jno
das
push
inc
je
scas
jno
mov
sub
mov
cmp
add
mov
jbe
fidivr
xor
xor
xchg
jnp
adc
cmps
test
push
pop
add
pushf
cld
pop
jmp
std
pop
and
lods
leave
mov
aad
cmp
dec
push
sub
xlat
dec
fprem1
sub
dec
jp
pop
in
les
sti
lock
out
mov
fistp
push
mov
mov
mov
mov
sub
icebp
in
hlt
jmp
dec
sbb
and
(bad)
cmps
test
dec
pop
cwde
xor
cmp
nop
push
mov
in
push
cld
inc
bound
lods
rcr
pavgb
xor
stos
pop
shr
mov
push
es
or
xchg
cmp
sbb
xchg
inc
xor
es
pop
xor
outs
repnz
mov
imul
dec
jno
fcomp
es
aas
xchg
movs
hlt
les
or
das
and
xor
xchg
call
mov
repnz
fst
or
call
or
or
pop
pop
push
fucom
jb
aam
fild
ret
and
or
jb
cmp
xor
movs
or
add
jno
fwait
mov
clc
or
dec
cmp
jge
lea
pop
stos
movs
dec
pop
and
addr16
pop
(bad)
arpl
pop
std
inc
or
mov
xor
out
lods
retf
imul
adc
xor
push
xor
jb
popa
xchg
jg
movs
jp
pop
and
pop
jno
bsr
cmp
fs
into
sbb
bound
xchg
or
popa
in
cmc
add
push
imul
addr16
fwait
sub
or
adc
cmp
jge
jbe
scas
fdiv
push
jno
mov
jmp
rcr
in
arpl
xor
aad
push
add
pop
cmp
and
addr16
push
mov
jae
mov
lea
addr16
jb
mov
sbb
adc
rol
punpckldq
retf
mov
call
push
mov
scas
sbb
pop
add
iret
fsub
jl
jnp
cmp
sbb
push
jecxz
int3
js
imul
add
dec
mov
daa
loope
not
sbb
out
jg
sbb
xor
push
and
push
outs
mov
sub
jmp
pop
pop
stc
fcomp
ss
pop
sbb
repz
adc
adc
add
(bad)
lds
lods
inc
xchg
xchg
adc
inc
lahf
rol
cmc
stc
jns
adc
lods
mov
js
lock
inc
dec
xor
mov
dec
sti
arpl
sbb
in
xchg
jns
mov
daa
in
clc
push
dec
mov
jb
mov
mov
and
or
(bad)
shl
mov
leave
or
jns
jle
sbb
push
mov
popa
ror
inc
and
mov
xchg
sbb
retf
ins
pop
cli
or
loop
in
enter
mov
mov
push
or
scas
out
jb
(bad)
jge
fcmovbe
adc
inc
inc
or
shr
xor
cmp
stos
jmp
(bad)
ret
xchg
jno
xchg
test
mov
fsubr
mov
cmps
mov
mov
sub
pop
repz
addr16
jno
out
jl
lahf
xor
ss
push
call
sbb
pop
retf
sbb
ja
xor
mov
xor
call
das
test
adc
xor
lock
addr16
lds
and
jb
add
push
sbb
cmp
pop
in
call
pop
pop
and
cmp
shl
clc
dec
xor
xchg
sbb
retf
pop
ret
bound
imul
fcomp
icebp
mov
push
fimul
xchg
popa
test
rcr
xchg
fsubr
cmp
dec
and
sub
movs
punpckhbw
sahf
test
stc
cmp
pusha
push
mov
outs
mov
jno
dec
xor
xchg
jae
adc
data16
cmps
add
jl
jae
dec
call
hlt
into
sti
adc
adc
jne
add
and
xor
push
fadd
xchg
mov
fiadd
mul
sub
xchg
adc
push
add
(bad)
popa
jl
add
and
sub
pop
push
push
cmp
lds
mov
jmp
icebp
(bad)
jns
aas
call
and
push
push
cdq
das
add
daa
movs
mov
test
cld
lock
in
fist
dec
lea
cmove
cld
cwde
fisub
lods
fsubr
xchg
in
or
and
ds
inc
imul
pop
pop
inc
inc
popf
push
fcmovnu
into
cmp
pop
sbb
cmp
aad
mov
mov
imul
mov
cmp
icebp
jecxz
mov
sub
jns
test
cdq
pop
cmp
sbb
sbb
mov
push
cmp
pop
fwait
inc
bound
retf
out
mov
lahf
or
pop
xchg
(bad)
rcl
add
pop
shl
cmp
xchg
sahf
fisubr
out
adc
ds
div
xchg
or
ror
(bad)
jmp
pop
repz
jmp
retf
cmc
and
mov
xchg
gs
lock
lds
sbb
xchg
int3
mov
and
mov
xchg
mov
dec
mov
jmp
pop
inc
call
je
cmps
and
sbb
into
mov
lahf
fcomp
jmp
jp
or
jnp
lea
(bad)
fs
pop
repnz
gs
int3
sub
inc
add
xchg
cdq
jmp
xchg
mov
adc
add
sbb
mov
jnp
pushf
repz
lods
add
add
stos
ret
inc
mov
cs
inc
(bad)
pop
jnp
mov
fs
int
and
ss
jbe
sbb
dec
in
ds
aad
cmps
jl
push
and
cs
out
pop
push
je
imul
push
sub
inc
jmp
sbb
sbb
add
lahf
push
pusha
or
mov
mov
adc
jns
adc
push
sti
sbb
mov
loopne
fadd
out
adc
cmp
rcl
lods
jbe
test
out
inc
push
shl
loopne
xchg
xchg
adc
and
inc
mov
cmc
mov
pop
das
push
cmp
mov
in
fwait
push
sbb
jmp
push
(bad)
inc
or
mov
ds
inc
pop
inc
pop
jl
cmc
out
push
test
mov
out
add
aam
add
xor
sub
test
jae
jae
lock
xor
out
hlt
icebp
popa
adc
(bad)
xchg
cmp
popf
ret
cmp
push
rep
fnstcw
mov
cmp
jp
call
rol
cmp
arpl
hlt
and
mov
cmp
outs
imul
mov
inc
cmp
into
repz
mov
jno
jnp
leave
inc
lahf
sbb
test
(bad)
out
cmc
shl
push
pushf
cld
aas
dec
inc
stos
jmp
adc
adc
aad
sar
mov
or
mov
and
fnstcw
test
test
sar
mov
(bad)
add
add
stos
loopne
cdq
xchg
(bad)
xchg
jcxz
aas
add
pop
adc
mov
(bad)
repnz
mov
mov
imul
mov
mov
outs
(bad)
pop
test
inc
scas
cmp
mov
ret
push
push
add
mov
pop
rcl
ins
xor
sbb
out
jl
aaa
push
mov
ins
sub
shl
out
dec
or
lahf
mov
pop
ins
shl
mov
cwde
inc
inc
push
mov
adc
stos
and
push
xchg
and
(bad)
pop
sbb
inc
dec
jp
jns
or
ret
jg
sub
and
or
mov
in
int3
add
popa
test
adc
mov
iret
loope
nop
xor
inc
lods
xchg
sahf
cmps
push
sahf
ret
stos
(bad)
in
arpl
sbb
sbb
mov
pop
jmp
fs
cmps
sbb
mov
sbb
cmc
mov
dec
or
mov
js
add
mov
push
sbb
cmp
inc
cmp
aaa
retf
sub
std
ins
mov
shl
mov
cli
push
jg
xor
mov
xchg
imul
fsubr
bound
jmp
scas
imul
les
dec
pop
xor
jo
pop
cmps
(bad)
jo
repnz
jg
std
cli
push
outs
mov
dec
push
test
pop
cmp
dec
and
leave
xchg
push
test
cdq
xor
mov
dec
sahf
fild
dec
pushf
jnp
adc
ficomp
push
mov
ret
pop
jecxz
and
xchg
sahf
cli
fld
rep
add
sub
mov
ins
test
push
lock
dec
and
cmp
xor
into
dec
xchg
mov
stos
and
outs
pop
movs
and
test
daa
mov
fadd
push
and
xchg
xchg
push
inc
cdq
xor
cmp
dec
call
bound
xchg
lds
sub
out
mov
mov
mov
stc
mov
add
sub
lahf
fwait
int3
lods
test
add
and
repnz
and
shl
cs
add
cmp
cs
iret
imul
jg
rcr
xor
inc
xchg
cmp
push
push
(bad)
jle
loopne
fisub
ja
cwde
mov
cmp
xor
js
mov
test
push
fiadd
ds
stos
dec
and
aas
sti
lahf
cmp
dec
jle
hlt
jmp
push
clc
push
addr16
clc
sub
(bad)
fwait
xor
push
inc
cmp
xchg
mov
call
cmp
dec
add
dec
iret
out
mov
ror
mov
test
fwait
(bad)
adc
test
or
lock
rol
(bad)
das
dec
mov
and
pop
sub
xchg
outs
lds
es
lods
gs
movs
bound
popf
int3
xor
xchg
add
(bad)
lods
mov
or
inc
fs
cli
gs
(bad)
scas
jmp
ficom
lahf
test
jae
js
jge
sub
push
sbb
mov
in
xor
or
cmc
mov
cdq
adc
or
push
and
pop
aas
mov
xchg
outs
xchg
arpl
fld
mov
push
mov
rcl
sbb
mov
sub
sub
push
push
lahf
dec
sbb
mov
enter
sub
xor
call
ret
inc
pusha
in
imul
mov
into
test
jnp
cmps
mov
jnp
mov
push
pop
inc
adc
(bad)
mov
(bad)
jecxz
push
loop
pop
push
les
pop
and
xchg
lock
inc
sbb
push
mov
sbb
or
sbb
push
add
sar
jl
jecxz
push
xchg
cmps
xchg
(bad)
cwde
adc
mov
or
int3
cmp
pop
pop
ins
inc
mov
cmps
not
cmp
sbb
inc
or
push
sbb
push
ret
inc
scas
repnz
dec
neg
imul
fimul
ret
adc
cld
outs
xchg
xor
sub
mov
(bad)
cmp
fmul
sbb
jl
dec
aas
retf
cmp
cmps
adc
mov
loope
dec
shr
dec
mov
fidiv
mov
xchg
cmp
mov
inc
xlat
dec
cmp
xchg
cmp
xor
lahf
lods
test
aas
or
stos
pop
xor
adc
inc
sbb
cld
push
movs
in
outs
repnz
mov
sub
push
(bad)
(bad)
lods
(bad)
mov
std
lds
shl
dec
cmp
cs
das
jge
fmul
daa
sti
mov
mov
mov
sbb
xlat
out
fisubr
or
add
or
cmp
fdivrp
mov
jae
sbb
fnstenv
push
hlt
jo
and
cmp
cmps
into
cmp
out
pop
dec
jne
fsub
jno
out
adc
push
loopne
inc
inc
sbb
sub
add
imul
inc
daa
jno
rol
aaa
jmp
sbb
cmp
xor
add
popa
sbb
cli
bound
sahf
cwde
jg
stc
or
cwde
sbb
popw
shl
and
mov
out
mov
js
mov
dec
(bad)
mov
lds
jp
fidiv
outs
jp
setns
jp
outs
and
(bad)
out
xlat
cmp
push
ds
test
pop
mov
xchg
outs
push
pop
adc
pop
stc
mov
aad
hlt
sbb
jmp
hlt
lahf
xchg
sbb
push
cmp
adc
(bad)
addr16
in
cmp
pop
scas
enter
(bad)
and
sub
mov
xchg
cld
xor
push
mov
das
repnz
nop
ret
mov
call
popa
push
sub
retf
inc
xor
cmp
cmp
aas
bound
fistp
ins
or
inc
xor
add
cmp
push
or
loope
fadd
jbe
jl
mov
xor
push
rol
xchg
sbb
stos
mov
in
pop
test
ins
dec
out
dec
fwait
test
shl
sahf
jnp
lods
cld
loope
push
jno
sbb
xchg
jnp
push
cli
or
rcl
jne
mov
out
lahf
push
sbb
dec
or
add
js
jno
pop
sub
push
mov
push
pop
stos
mov
adc
fiadd
jg
pop
xchg
pop
iret
in
inc
fxch
pop
jmp
cmp
jae
and
dec
xchg
sbb
inc
cmp
pop
and
ret
sbb
pop
dec
dec
or
jge
or
mov
sub
adc
inc
add
sbb
dec
and
outs
fisttp
or
xchg
mov
pop
in
mov
cmp
push
(bad)
(bad)
adc
or
std
mov
jmp
cmp
mov
stc
(bad)
movs
fnstenv
or
mov
mov
jo
fidiv
shl
jecxz
arpl
or
jnp
(bad)
or
xor
mov
je
push
movs
test
push
cmp
cmovs
jmp
fbld
mov
and
mov
pop
inc
xor
xchg
aaa
ins
mov
out
in
xchg
mov
repnz
test
outs
in
repnz
addr16
lods
bound
out
push
aad
or
add
jo
popa
mov
ins
loopne
add
pop
pusha
popf
jns
mov
scas
add
popf
call
jnp
stc
adc
add
ss
pop
xchg
push
add
mov
ret
push
pusha
adc
pop
sbb
or
lock
jge
xchg
arpl
mov
mov
cmp
jns
int3
mov
mov
je
test
jns
xchg
mov
pop
ror
push
dec
out
sub
xor
test
div
aad
adc
cmp
fwait
retf
repnz
add
cmp
inc
iret
xchg
add
push
cmc
repnz
adc
loope
cld
and
lods
iret
inc
push
fidivr
dec
mov
icebp
(bad)
dec
mov
fucomip
push
add
inc
xchg
sub
fidivr
adc
shr
rol
loop
push
cmp
mov
mov
shr
push
movs
leave
(bad)
out
cmp
add
inc
mov
push
add
cmp
ds
cmp
mov
push
repnz
cli
pop
and
jbe
push
push
test
rep
dec
ins
dec
pop
lock
push
shr
ficomp
lock
bound
add
fisub
jp
out
jmp
xchg
cli
sbb
inc
test
popa
mov
push
pushaw
mov
add
jge
add
sub
aaa
sub
sbb
and
sub
dec
and
push
lahf
ucomiss
mov
push
clc
(bad)
pop
pusha
pop
pop
xchg
int3
sbb
xchg
or
cmps
call
lods
add
imul
call
popf
addr16
xchg
inc
lods
push
pushf
fild
bound
pop
(bad)
mov
inc
lods
mov
ret
xchg
hlt
mov
ret
je
cdq
jne
fs
outs
add
sub
stos
mov
hlt
jl
jbe
out
les
push
adc
sub
sbb
xchg
loop
repnz
out
push
leave
stos
jnp
jge
and
jns
dec
inc
(bad)
mov
sub
fs
dec
les
jp
push
pushf
sti
xchg
or
mov
pop
jmp
xor
sub
dec
or
jno
cs
fistp
or
es
call
loopne
jmp
add
inc
imul
jp
sbb
mov
inc
ds
aas
out
mov
xchg
jg
sub
jns
add
(bad)
mov
inc
cmps
adc
stos
mov
jmp
lahf
fwait
shl
sti
(bad)
bound
stos
sahf
and
(bad)
sub
xchg
iret
inc
mov
ret
jns
ds
mov
pop
jae
sbb
push
repz
ins
adc
lds
mov
je
inc
push
idiv
cld
sub
jle
xor
xchg
or
xor
adc
fsub
cld
pusha
pop
mov
or
retf
mov
cs
leave
test
call
xchg
out
sahf
cs
inc
in
add
jg
xor
test
popf
scas
mov
cmps
loop
inc
and
xor
and
push
mov
cmps
nop
mov
push
loopne
mov
inc
mov
shl
pop
mov
adc
lea
pushf
mov
popf
sbb
repnz
les
mov
adc
cmp
jns
push
ins
pusha
mov
ins
xchg
jg
cmp
sub
and
sub
fld
bound
ror
mov
out
test
(bad)
movs
push
addr16
loopne
fucom
jle
or
xchg
stos
mov
cmp
cld
call
fwait
lea
shl
inc
mov
inc
dec
mov
fadd
das
and
xchg
out
ins
xchg
dec
jbe
cmp
mov
hlt
call
sub
scas
jl
sub
fisub
fs
hlt
and
popa
lods
mov
push
scas
jae
es
and
or
js
ret
mov
cmp
(bad)
cmp
and
push
ja
nop
pop
addr16
mov
jbe
inc
pop
stc
push
sbb
pop
sbb
daa
rcl
mov
mov
mov
retf
or
add
jne
popa
jmp
nop
or
add
retf
test
dec
shr
ret
les
jg
or
add
jmp
adc
movs
dec
popa
xor
xor
ret
cmp
xor
outs
icebp
or
das
mov
add
sub
sub
jo
xor
pop
mov
test
popa
mov
jno
(bad)
push
aas
mov
cmp
xchg
dec
out
test
xor
(bad)
xchg
pop
dec
add
jb
pop
inc
aas
sub
xor
push
popf
inc
(bad)
test
jp
mov
add
sub
ud0
stos
test
xor
in
xchg
cdq
cmps
in
xor
jns
mov
loope
jnp
adc
inc
jl
out
jle
in
mov
sub
push
gs
dec
in
daa
or
ja
outs
dec
mov
in
adc
das
jae
add
loopne
dec
jb
fs
xor
loop
call
push
adc
into
jmp
out
repnz
cmc
xchg
(bad)
call
and
xchg
xor
add
push
or
jl
not
mov
sar
mov
add
loope
dec
loopne
lahf
in
ret
pop
ds
cmc
lods
mov
push
dec
fisub
addr16
and
in
in
push
inc
pop
stos
mov
jmp
mov
setbe
sbb
or
arpl
lods
ins
xchg
test
push
or
cmp
bound
nop
not
call
mov
adc
sub
jp
aas
call
mov
call
jns
push
bound
fwait
lea
rcl
mov
(bad)
push
pop
rcl
or
pop
rcr
pushf
push
jg
outs
inc
mov
xchg
shl
gs
add
xor
mov
add
and
pop
mov
inc
data16
(bad)
push
cmc
ins
pop
pop
cmp
les
pop
pop
mov
cmp
das
popf
adc
jmp
out
arpl
and
add
ss
into
push
outs
sahf
xchg
popf
jle
test
call
aad
xor
sbb
xor
push
sbb
mov
jl
sbb
mov
cdq
rep
pop
sbb
sub
pandn
(bad)
retf
mov
mov
dec
(bad)
jno
pop
in
clc
xor
xor
in
jle
push
mov
lahf
xor
pusha
stc
test
sub
cmp
test
xor
jbe
in
sbb
add
pop
loop
leave
inc
sub
mov
shl
add
mov
imul
jnp
xor
call
jmp
sub
repz
add
das
pop
(bad)
sub
xchg
mov
inc
out
push
pop
retf
hlt
aad
and
xchg
aad
inc
es
jbe
cmp
repnz
icebp
test
jmp
inc
jnp
dec
test
dec
call
xchg
scas
cdq
das
pusha
pusha
popa
dec
add
outs
push
sahf
(bad)
or
or
dec
pop
mov
dec
pop
mov
mov
sti
xlat
int3
pushf
mov
gs
int
jg
jae
ins
or
je
ins
stos
jnp
mov
sub
pop
xor
sbb
repz
cdq
and
(bad)
fisub
mov
and
into
arpl
jl
or
mov
data16
pop
push
and
push
sub
xor
mov
bnd
sub
dec
inc
ficom
push
mov
xor
inc
fsubr
stos
pop
jno
xor
jae
sbb
test
cmps
test
mov
push
leave
adc
aad
icebp
dec
mov
push
cmp
cmps
cmc
adc
mov
pop
jp
pop
mov
sbb
mov
xchg
loopne
outs
sahf
cmps
inc
cs
push
imul
and
retf
push
jmp
push
daa
xor
sub
mov
aam
retf
mov
xor
inc
sub
call
dec
std
jmp
fdivr
mov
rcr
adc
mov
sub
inc
jbe
pushf
lods
mov
jns
jl
mov
movs
jmp
out
adc
cmps
dec
bnd
adc
fisub
pop
icebp
cmp
lds
cmps
jmp
jge
ins
cmp
jae
pop
push
pop
xchg
mov
cmp
jae
cmp
sub
lds
or
xchg
sbb
xchg
ret
leave
js
adc
mov
fnstsw
add
push
arpl
push
(bad)
sub
or
test
jg
stc
jg
push
clc
push
xchg
add
dec
mul
mov
or
ja
and
popf
inc
(bad)
cwde
and
clc
sbb
push
and
push
lahf
mov
sbb
inc
rcl
push
and
add
xlat
dec
adc
xlat
sub
pushf
(bad)
(bad)
and
or
daa
ds
sahf
dec
sub
out
fsub
in
add
mov
jno
push
pop
cmp
and
pop
sbb
dec
and
stos
sbb
mov
push
xor
inc
das
and
adc
call
xor
or
data16
sbb
jno
in
mov
xchg
adc
out
jl
jecxz
sar
mov
int
loope
or
mul
iret
mov
enter
imul
aas
scas
ret
mov
adc
hlt
mov
xor
mov
pop
mov
pushf
pop
in
mov
inc
or
lahf
arpl
and
retf
jge
in
std
lds
aad
cwde
jb
or
xchg
test
or
out
aad
push
mov
outs
pushf
cmc
pop
(bad)
in
nop
repnz
pop
add
scas
adc
jmp
sub
jle
jge
stos
push
mov
mov
fs
pop
rcl
jge
movs
call
push
mov
jg
or
pusha
push
lods
test
mov
push
mov
jecxz
addr16
mov
mov
mov
std
mov
inc
jmp
or
xor
icebp
movs
hlt
cmp
pusha
rcl
cdq
inc
mov
loopne
push
push
mov
fidivr
pop
sub
inc
int3
lock
pop
cmp
sti
(bad)
leave
comiss
rcl
mov
pop
enter
cs
cli
xchg
or
cli
arpl
pop
add
jmp
mov
xchg
pop
jb
add
stc
push
loop
push
dec
retf
sbb
jl
xor
jnp
jnp
aas
cmp
pushf
int3
outs
inc
cmps
add
jp
mov
xlat
xchg
xchg
jecxz
in
cmps
push
or
jmp
aad
jmp
push
add
test
fs
and
pop
dec
cmps
loope
(bad)
stos
movs
std
add
inc
add
pusha
bnd
and
clc
jl
sbb
lea
lds
sahf
cmp
mov
ins
cmovl
out
repz
bswap
sti
enter
aaa
dec
ja
adc
shr
add
lock
in
inc
shl
sbb
(bad)
cwde
daa
xor
nop
sbb
into
cmp
lock
xchg
jge
xchg
repz
sub
retf
or
cs
add
loope
das
jle
and
add
dec
dec
cmps
ds
xchg
stc
cmp
das
test
add
loopne
sub
xor
pop
jle
jno
adc
lahf
push
sbb
lsl
movs
push
pop
jns
xchg
cld
mov
pop
out
stc
push
mov
addr16
pop
data16
pop
mov
je
xchg
adc
cmp
hlt
mov
pop
jnp
loop
sub
fldcw
stos
outs
fnsave
cmc
stos
mov
push
xor
je
inc
inc
dec
adc
or
mov
neg
jmp
les
add
cmp
mov
jmp
(bad)
mov
pop
jg
les
lock
movs
test
add
js
ins
add
jbe
sbb
pop
stc
cdq
dec
mov
jbe
lods
mov
cli
pop
and
ret
fsubrp
out
mov
cmps
not
retf
cmps
pop
cli
loope
dec
inc
xchg
popa
pusha
adc
push
sub
jl
outs
stc
sti
adc
or
je
sti
pop
push
xchg
fs
sub
dec
es
aam
je
fld
pop
(bad)
jl
sbb
bswap
test
xor
sbb
mov
int3
jl
jno
sub
in
ins
cdq
jge
xchg
ins
into
in
cs
pmulhuw
push
lods
pop
adc
pop
test
inc
xor
pop
shl
jp
push
or
cld
retf
sub
aas
stos
cwde
aad
aad
js
mov
shr
mov
lods
js
xor
stc
xor
push
leave
jae
xchg
sbb
sub
push
lea
push
lock
push
adc
out
push
mov
mov
popf
mov
lds
fimul
or
or
ja
imul
pop
xchg
movs
xor
mov
pop
adc
cli
push
outs
jne
je
sti
call
popf
adc
xchg
fmul
sub
cmp
dec
ret
mov
cmp
das
mov
loope
fldenv
cmc
mov
mov
pop
or
jg
cdq
ins
xchg
cmp
loop
aam
int
(bad)
mov
popw
xchg
sub
hlt
ds
into
jl
rcr
fsubr
je
and
lock
ret
(bad)
jmp
rcr
arpl
sub
sbb
ficomp
add
or
jmp
mov
shl
cmp
sbb
imul
cmps
js
aam
aas
lahf
sti
jae
fcom
xchg
or
fcom
xor
pop
jmp
pushf
mov
in
pop
dec
sub
xor
xor
mov
fdivr
test
leave
aas
cmps
cmps
(bad)
pop
mov
jp
jno
mov
jmp
adc
pop
addr16
push
enter
test
scas
adc
pop
mov
or
(bad)
mov
popf
jmp
sbb
sub
call
ja
fucomi
in
div
(bad)
dec
int3
das
call
push
mov
jno
dec
in
es
mov
xor
in
add
adc
xchg
cmp
sbb
inc
pushf
or
retf
fadd
(bad)
gs
cli
das
jb
movs
sbb
mov
xchg
hlt
jmp
pop
xrelease
idiv
dec
fwait
xchg
lds
add
sti
ret
call
add
scas
sbb
mov
sar
fsub
int
mov
mov
out
(bad)
in
jnp
push
add
push
out
lds
fsub
add
jnp
repnz
jnp
mov
mov
sub
push
xchg
clc
jno
aam
(bad)
dec
inc
push
xor
dec
jb
imul
push
jg
or
cld
ror
call
jo
add
mov
call
push
dec
ret
and
sub
pop
or
out
(bad)
adc
sub
jmp
(bad)
call
xchg
(bad)
cmp
adc
xor
psrad
adc
addr16
mov
jbe
mov
pop
adc
hlt
mov
mov
xchg
fwait
movs
sbb
push
(bad)
sbb
xor
stc
cmp
jl
adc
(bad)
repnz
js
jno
xchg
cli
xchg
stc
retf
adc
pop
push
sbb
jbe
pusha
inc
stos
rcr
push
nop
pop
sub
adc
fild
sub
fnstenv
data16
(bad)
adc
sub
jbe
mov
sbb
out
mov
fldenv
pop
fistp
cld
scas
cmp
pop
ja
inc
push
cmp
dec
jl
push
lods
shl
outs
lock
xor
fs
dec
sbb
retf
aad
cmp
cmps
cdq
add
push
or
jne
rcr
pop
cmp
lds
xchg
mov
xchg
push
xchg
sbb
aaa
ja
into
xor
iret
cld
inc
or
push
test
mov
in
stos
shl
jge
mov
neg
cs
aam
push
int3
sub
xlat
sub
inc
push
pushf
mov
leave
gs
outs
aam
shl
and
scas
sub
ss
leave
scas
sti
inc
fbstp
mov
pop
sub
out
sahf
loope
inc
ds
pop
loopne
mov
cmp
mov
shl
sbb
adc
jp
lock
shl
jb
xchg
jecxz
adc
push
iret
or
mov
and
idiv
jp
adc
int3
js
push
jmp
jmp
dec
mov
in
dec
int
popa
pop
mov
icebp
sbb
push
dec
ret
(bad)
adc
jp
outs
jnp
fldln2
pop
fst
adc
push
(bad)
out
popf
and
push
sbb
mov
jns
aas
cld
cdq
mov
mov
or
(bad)
push
scas
out
cmp
les
pop
push
out
clc
pop
inc
push
pop
mov
adc
aad
push
movs
ja
das
sysenter
jne
inc
pop
test
pop
retf
lock
fs
pop
shl
outs
aas
xor
(bad)
adc
lea
scas
out
cmps
movs
pop
call
dec
xor
mov
or
outs
sbb
retf
cmps
addr16
fbstp
(bad)
cmc
fild
add
push
push
mov
mov
pusha
retf
aas
xchg
pop
adc
aam
cmps
xor
or
add
mov
cmp
mov
mov
int3
sbb
mov
movs
std
clc
pusha
cld
sbb
test
sbb
out
adc
data16
fimul
dec
xchg
in
repz
cmp
adc
into
out
jns
xchg
push
or
dec
or
dec
stos
jne
add
pop
mov
pushf
ret
into
dec
push
std
jne
test
shr
xchg
popa
movs
das
jae
mov
je
test
dec
push
iret
fldenv
push
add
push
sbb
push
inc
dec
jmp
call
pop
outs
push
mov
push
push
aaa
pop
in
push
mov
xor
mov
out
sbb
std
cdq
not
cmp
xchg
out
enter
fld
cmp
mov
add
cmp
ds
out
stos
cmp
inc
xor
cli
and
adc
jecxz
xor
lods
inc
sbb
mov
sbb
in
mov
jmp
xchg
imul
les
pop
lds
outs
pop
xor
lahf
hlt
pop
jno
mov
add
data16
(bad)
jae
mov
inc
in
jge
in
mov
pop
shl
xchg
pop
adc
mov
xlat
pop
mov
shr
sub
sub
jns
xchg
ret
dec
mov
cli
mov
cmc
sbb
ins
add
fsub
pop
cmp
xchg
pop
jno
test
push
popa
or
xchg
fcomp
mov
dec
mov
inc
int
mov
or
clc
fwait
aas
push
vpavgw
xchg
stc
aas
sub
mov
lods
mov
das
adc
xchg
loope
test
inc
jl
bswap
dec
mov
and
outs
add
clc
mov
mov
push
push
arpl
daa
int
out
pushf
push
(bad)
sub
mov
push
cmps
adc
cdq
test
retf
sbb
movnti
push
(bad)
sbb
hlt
xchg
xor
mul
or
mov
les
pop
imul
inc
pop
imul
xor
sbb
or
ror
jb
and
jmp
mov
aas
sbb
xor
xor
sbb
outs
cmp
ins
repz
dec
iret
inc
sbb
sub
sub
and
stos
pop
clc
test
lods
data16
into
movs
add
add
lock
pop
or
test
stos
dec
inc
imul
leave
mov
(bad)
movs
inc
test
mov
pop
pop
jnp
dec
test
aaa
mov
ds
(bad)
dec
xor
stos
mov
shr
xchg
pop
xor
imul
mov
and
sbb
cmp
cmc
cs
fdivr
nop
fimul
mov
movs
sbb
iret
daa
pop
or
inc
popa
push
out
or
mov
in
jmp
test
das
daa
out
xchg
(bad)
bound
jno
jno
cs
es
adc
ins
sbb
add
repz
mov
movs
lahf
sub
add
mov
mov
retf
iret
dec
mov
or
clc
pop
(bad)
popf
or
bound
jne
and
fdivp
fcom
inc
push
(bad)
(bad)
aas
shl
inc
add
in
xchg
repnz
clc
sbb
push
push
mov
out
or
stos
mov
add
test
cmps
add
push
in
or
mov
mov
inc
mov
ss
sbb
pushf
and
adc
retf
lods
xor
jb
cli
pop
inc
pop
xchg
xlat
ins
iret
dec
dec
push
int3
test
adc
sub
cmp
mov
leave
lea
lds
push
shl
test
fxch
outs
inc
jmp
jp
mov
(bad)
imul
sbb
mov
mov
pop
lahf
mov
cmp
cmps
dec
xchg
sbb
sbb
or
dec
fisttp
jb
xchg
add
push
fbld
xchg
lock
in
xlat
sub
mov
sub
add
fwait
cmps
adc
push
icebp
and
in
nop
std
call
adc
push
outs
jle
dec
mov
add
in
shl
imul
jo
sar
idiv
mov
sti
xor
out
push
xor
shl
mov
(bad)
jge
pusha
pop
fdivr
mov
xchg
mov
call
cmps
sbb
ins
jne
sbb
rcl
fcomp
icebp
repz
jbe
mov
dec
sahf
stc
mov
pop
sar
push
scas
sar
mov
mov
sub
adc
shr
ja
cmps
jg
(bad)
mov
xor
xchg
sbb
xchg
jne
ja
out
iret
lds
xchg
cmp
jbe
xor
mov
xchg
dec
inc
jmp
and
push
push
pop
daa
aaa
add
dec
fimul
loop
out
push
jo
hlt
gs
add
cmp
test
pop
mov
outs
lods
shl
mov
adc
int
loop
ret
jb
retf
in
mov
retf
mov
fsubr
inc
loopne
cmp
test
cmp
dec
retf
cmp
call
pop
and
jno
and
sub
call
(bad)
lock
adc
and
dec
push
pop
js
push
(bad)
call
push
imul
aam
(bad)
and
inc
imul
xchg
pusha
inc
lods
arpl
inc
fisttp
shl
and
sbb
pop
mov
retf
jo
stc
ret
in
in
dec
test
mov
sbb
int
xor
xor
xor
movs
cmp
jmp
cmp
or
cli
lock
fdiv
fsubr
xchg
sbb
das
fnsave
add
pop
movs
mov
cld
mov
xor
ins
inc
cmps
loop
jmp
xor
inc
dec
and
pop
ret
push
jge
out
dec
adc
out
add
push
les
mov
adc
push
(bad)
xor
jge
lods
(bad)
mov
dec
mov
or
xchg
mul
in
xlat
xchg
or
push
push
aad
cmc
retf
mov
ffree
(bad)
dec
enter
shl
(bad)
mov
into
push
fst
inc
popa
mov
out
int3
add
mov
adc
or
imul
(bad)
jle
retf
cmp
push
cmp
mov
repz
shl
push
mov
xor
jno
or
jl
adc
movs
stos
cmps
push
mov
or
mov
and
xchg
add
push
retf
xor
es
sub
cmps
push
out
out
jp
mov
pop
call
outs
pop
sub
add
mov
mov
cmp
test
jecxz
sub
lock
mov
sub
push
pop
ss
sbb
pop
fnstsw
ins
xchg
pushf
or
ds
jecxz
retf
push
test
add
mov
pop
popa
scas
(bad)
cmp
test
mov
mov
arpl
xor
imul
dec
adc
jne
adc
outs
jne
adc
movs
ja
addr16
int
jb
pop
pop
pop
in
and
mov
pop
jmp
movs
pop
out
out
xor
retf
(bad)
jae
sub
lods
(bad)
out
jmp
xchg
sub
les
sti
adc
push
xchg
retf
imul
fwait
adc
dec
cmc
push
jge
lods
and
mov
adc
aas
lds
xchg
inc
daa
iret
xchg
fsubr
jmp
cli
(bad)
pop
mov
jnp
jge
leave
xchg
ss
sub
pop
push
outs
add
out
xchg
push
mov
fsubr
call
sub
xchg
shl
mov
mov
js
xchg
and
fs
mov
mov
jno
leave
gs
das
lods
pop
icebp
jne
dec
fistp
shr
pop
mov
dec
or
xor
call
stc
lock
add
pop
cmp
xor
push
mov
mov
hlt
adc
ja
add
shr
cmp
jae
pop
sbb
int
call
jo
ret
cmp
sub
jmp
jnp
cld
xchg
std
jl
jecxz
lds
xor
outs
shl
fldenv
(bad)
imul
call
aaa
daa
fild
pop
xor
jge
mov
xchg
pop
and
dec
inc
and
test
ret
in
loop
(bad)
loopne
jl
adc
sub
gs
aam
mov
ret
out
push
js
popf
mov
jne
jecxz
das
or
jmp
jno
in
xchg
jmp
ror
inc
push
jno
(bad)
xor
add
ds
and
jl
mov
xor
push
adc
dec
xor
bound
jns
fisub
sti
into
cmp
xor
or
cld
and
(bad)
and
xor
std
leave
mov
xchg
call
jmp
push
cs
xchg
sub
jo
pop
jo
mov
pop
sub
retf
stos
or
mov
imul
sub
outs
sub
rcr
jl
xchg
and
pusha
add
xchg
or
retf
dec
dec
cmps
mov
mov
jnp
mov
dec
push
mov
or
mov
lds
fs
aam
cmp
or
push
rep
loop
popa
gs
dec
popf
mov
std
xchg
pop
in
xlat
test
aam
fcom
mov
imul
pop
push
jmp
sbb
(bad)
(bad)
pop
shr
fst
mov
hlt
cs
push
repnz
pop
nop
les
or
pop
out
xor
(bad)
push
imul
call
cmps
dec
out
jmp
mov
xchg
fidivr
xlat
in
mov
iret
ds
xchg
pop
mov
pop
sub
jno
fdiv
cli
in
mov
pop
mov
cmp
aad
mov
or
daa
lods
arpl
imul
loope
inc
xchg
add
sub
stos
pop
pop
mov
loope
sbb
cli
(bad)
mov
outs
scas
sub
and
pop
call
fidivr
shl
mov
cmp
cdq
sbb
into
pop
aad
fst
pop
nop
daa
retf
sti
mov
outs
inc
imul
jno
cld
push
push
retf
push
dec
aam
cdq
dec
jmp
mov
mov
jg
sbb
cmp
cmc
mov
jns
xchg
adc
jl
pusha
arpl
lods
or
shl
inc
xor
adc
adc
gs
cs
nop
shl
sub
inc
or
add
fstp
fmul
jo
in
rcr
or
in
in
out
scas
push
fst
pop
clc
(bad)
dec
enter
popf
jae
pop
ret
(bad)
xchg
dec
popa
adc
and
popf
inc
mov
pop
dec
pop
lahf
xchg
scas
and
sbb
xchg
xchg
inc
mov
js
pop
and
aam
dec
in
imul
mov
add
enter
add
cmp
ss
(bad)
adc
xor
retf
sub
imul
scas
pop
enter
dec
adc
jo
call
lea
pop
dec
sbb
lock
jbe
test
shrd
xchg
jnp
cwde
shl
in
push
cld
shl
cmp
mov
mov
sub
retf
push
mov
fisttp
data16
mov
(bad)
pop
ins
mov
mov
addr16
push
jmp
or
sub
or
pop
sahf
sahf
bound
arpl
mov
addr16
inc
imul
jbe
nop
mov
mov
jmp
mov
iret
scas
cmp
adc
rcl
and
les
mov
inc
out
sbb
dec
push
sub
fdiv
mov
pop
inc
inc
int
inc
(bad)
daa
sub
push
test
shl
out
jns
or
out
sub
dec
movs
leave
mov
mov
outs
test
xchg
aas
pop
adc
xchg
sub
xor
sti
call
mov
or
fs
pop
push
jns
daa
lahf
aas
data16
xlat
into
cmp
loope
mov
and
jno
out
push
cmovo
mov
jne
mov
adc
cdq
bound
loope
jb
and
clc
pop
scas
pop
adc
mov
sub
cmp
xchg
and
popa
inc
mov
add
out
pop
xchg
ja
adc
mov
sbb
jp
pop
mov
into
icebp
inc
aam
push
cli
sbb
xchg
lods
or
in
pop
xor
lods
and
jne
jl
loope
add
call
dec
test
(bad)
sti
mov
in
adc
inc
or
movs
mov
stos
push
data16
cmp
adc
call
icebp
pop
adc
test
(bad)
cld
out
jp
sahf
xor
push
xchg
sbb
lock
mov
or
cmp
in
xchg
sub
push
adc
or
sbb
ret
test
xchg
fstp
sti
cmp
js
sti
sub
clc
adc
sub
xor
sub
xor
xor
jb
mov
movs
in
dec
scas
mov
inc
mov
fdiv
stos
dec
push
sbb
ret
jecxz
push
mov
mov
adc
int3
ds
cwde
sbb
retf
fild
jl
adc
(bad)
mov
sbb
mov
out
or
(bad)
sbb
imul
fstp
loop
js
scas
mov
outs
scas
loope
pop
sti
sbb
xor
pusha
jp
mov
test
call
(bad)
sbb
jb
retf
or
out
imul
cmp
or
push
sub
mov
je
sbb
xchg
arpl
pop
xchg
sbb
mul
out
pop
add
out
add
push
scas
push
or
inc
sbb
xor
jg
les
add
adc
jge
xchg
pop
retf
mov
mov
mov
jb
(bad)
dec
adc
mov
add
fcom
pop
and
cmp
push
add
mov
test
xlat
in
retf
and
leave
adc
in
mov
mov
mov
call
push
jb
xor
inc
mov
xchg
xor
cmp
cmps
mov
cld
add
adc
push
inc
jle
scas
(bad)
inc
aad
imul
test
jg
stos
popf
nop
(bad)
mov
push
mov
adc
xor
mov
je
xchg
jp
in
stos
add
ins
cmp
rcr
push
cld
sahf
mov
rol
mov
ja
mov
push
enter
mov
add
(bad)
std
out
xlat
pop
pop
jle
add
push
lods
lock
and
xor
popf
pusha
inc
popf
ins
or
mov
or
pop
cmc
mov
xor
ja
jl
inc
into
(bad)
jno
fs
sti
push
stos
into
mov
scas
out
cmp
fimul
xor
icebp
pop
jp
fsub
cmp
mov
daa
push
je
mov
push
push
in
sub
(bad)
pop
adc
pop
mov
ins
add
test
adc
cmp
add
ins
inc
mov
mov
mov
add
int
xchg
rol
jno
jp
test
and
push
mov
ret
dec
jno
dec
cmps
add
std
into
fadd
sbb
stos
shr
(bad)
pop
mov
out
pop
jo
daa
repz
in
xchg
enter
xchg
jmp
inc
in
outs
pop
popf
push
inc
repz
int
shl
test
repnz
jae
pushf
jmp
or
and
ins
aaa
dec
lods
sub
pop
push
(bad)
fcmovbe
cld
push
sbb
jle
mov
jb
icebp
iret
popf
sti
cmp
jno
xchg
mov
cmps
jnp
mov
pop
int
mov
xor
(bad)
mov
adc
mov
sbb
add
ds
xor
ss
test
and
xor
push
jmp
mov
mov
out
xchg
or
add
mov
and
nop
and
jo
and
mov
pop
mov
mov
int
xchg
loope
hlt
ds
xor
cs
retf
cs
cdq
in
fild
pusha
retf
dec
pushf
loope
xor
imul
pushf
cwde
repz
and
jecxz
adc
in
mov
js
fwait
mov
dec
add
int3
std
sbb
jno
sbb
inc
jmp
mov
enter
test
outs
or
hlt
scas
sar
imul
mov
fstp
std
add
push
sbb
ret
pop
out
out
cmp
stc
cwde
jbe
sub
cmp
jae
pop
stos
mov
nop
xor
or
dec
mov
gs
stos
pop
mov
jo
push
int3
(bad)
aam
call
fcomp
jle
nop
pushf
sahf
add
stos
test
or
mov
sub
imul
das
or
scas
(bad)
int
pop
mov
push
push
or
pop
fisttp
mov
sub
lea
jno
inc
xchg
fidiv
movs
ret
shl
scas
or
and
(bad)
ja
dec
inc
pop
or
push
mov
mov
cli
cmp
fdiv
add
scas
rol
sub
lds
push
or
bound
stos
xchg
fsub
push
dec
out
imul
shl
add
pop
pandn
push
sbb
pop
or
mov
cmp
sub
cmp
xchg
and
mov
loopne
push
outs
jle
into
aam
dec
arpl
enter
mov
daa
mov
push
jno
dec
push
mov
and
(bad)
(bad)
out
les
cmps
cmps
dec
jmp
or
add
inc
retf
push
into
cwde
sti
add
push
push
cmp
fistp
dec
mov
xchg
and
call
push
cwde
fwait
xlat
sar
push
mov
xchg
and
punpcklbw
mov
cli
cld
jbe
lods
dec
dec
cmp
add
xchg
xor
xor
mov
dec
addr16
push
mov
not
mov
mov
xor
clc
pop
mov
in
ret
movs
or
lahf
shl
clc
jp
popf
xchg
sti
cmps
xor
mov
fiadd
mov
(bad)
jge
or
sbb
movs
inc
ror
dec
dec
stos
pop
push
leave
dec
out
xchg
mov
loop
popf
xchg
inc
(bad)
out
rcl
es
in
cmps
xchg
outs
push
xchg
fisttp
xchg
push
mov
mov
outs
test
dec
sbb
in
scas
push
pop
adc
mov
inc
jmp
fxch
jmp
aam
repz
(bad)
mov
or
mov
mov
jns
enter
mov
scas
out
xchg
push
mov
jmp
xchg
push
movs
xor
xchg
jo
xchg
xor
mov
sub
stos
aas
pop
lods
dec
jae
sub
add
mov
or
cmp
or
ret
xchg
or
pop
call
add
jl
mov
or
in
jge
stos
sub
mov
adc
(bad)
jle
xor
daa
add
dec
mov
xor
dec
lahf
fwait
adc
lea
sbb
push
(bad)
movs
ja
std
adc
mov
mov
xchg
das
mov
sbb
push
mul
push
outs
fistp
mov
mov
clc
inc
mov
scas
stc
sub
mov
or
jbe
les
mov
cmp
sbb
jmp
push
imul
mov
push
adc
mov
sub
test
inc
int
or
fld
mov
lds
lods
out
push
test
jae
sahf
cdq
cmp
cmp
gs
clc
movs
fst
jae
ins
mov
bound
or
sbb
or
enter
jb
mov
cld
cmps
add
cmps
or
sar
out
fwait
adc
scas
push
sbb
jbe
push
pop
test
jno
push
fimul
pop
xchg
sub
inc
xchg
fcmovb
push
mov
out
mov
sub
(bad)
xchg
push
es
ja
pop
pop
add
pop
pop
frstor
dec
pop
xor
mov
push
and
pop
pop
cmp
jl
pop
sbb
jmp
out
jo
rol
leave
sahf
and
mov
push
test
cmp
jl
stc
cmps
stos
pop
jecxz
ins
test
sub
xchg
repnz
retf
xchg
dec
fiadd
cmps
cmps
rcl
push
adc
xlat
jne
dec
adc
dec
iret
in
mov
sbb
pop
cmps
in
(bad)
cmp
xchg
jle
jmp
jge
mov
mov
mov
mov
sub
sub
xor
test
pop
aad
fldlg2
jg
in
retf
mov
mov
je
mov
fisub
inc
cwde
dec
inc
fnstcw
sahf
in
(bad)
shr
(bad)
test
lahf
stos
out
adc
ficom
xchg
inc
mov
jae
std
lods
mov
xor
cmps
xor
popa
adc
sbb
mov
jbe
push
and
jmp
dec
mov
lock
mov
ins
rcl
mov
sar
pushf
sub
jnp
mov
pushf
mov
clc
jecxz
cwde
push
mov
adc
ret
mov
mov
cmc
cdq
or
cmp
pop
cmp
mov
hlt
mov
mov
mov
data16
adc
xor
xor
arpl
xchg
cli
sub
(bad)
sub
cmp
pop
cmp
mov
les
imul
sbb
mov
pop
push
loop
and
sub
adc
lahf
imul
xchg
xchg
popa
adc
pop
(bad)
dec
fcmovb
int3
xor
add
es
mov
jmp
adc
in
and
jnp
not
rcl
cmps
test
out
shl
or
xlat
jl
pop
jae
hlt
dec
cwde
mov
sbb
sbb
stos
aaa
adc
sbb
enter
clc
and
xchg
xchg
aam
arpl
sub
int3
retf
fcomp
jmp
shr
mov
in
xchg
in
fadd
adc
test
and
push
cmp
adc
push
hlt
xchg
inc
adc
xchg
mov
shr
loop
popf
jb
pop
pop
cdq
cmovo
jecxz
fsubr
or
mov
or
addr16
jmp
inc
push
outs
loope
fcmovnu
repnz
dec
inc
mov
(bad)
clc
std
aam
pop
(bad)
mov
add
mov
test
mov
scas
ret
mov
push
push
xor
cdq
rcr
aad
(bad)
mov
push
(bad)
out
lahf
pop
pop
jno
xor
jnp
inc
sahf
(bad)
jmp
xchg
sbb
movs
push
sbb
dec
popa
lock
push
cmp
clc
repnz
cdq
xor
mov
sar
stc
adc
ret
cmps
jp
adc
(bad)
push
stos
lahf
inc
pop
xchg
fiadd
in
enter
into
(bad)
jnp
lods
stos
cmp
dec
jno
ret
xchg
jmp
cmp
pusha
or
sbb
or
mov
xor
rcr
aaa
(bad)
out
out
aas
cwde
pusha
ja
hlt
jecxz
std
inc
scas
pop
iret
sub
mov
push
push
pop
ins
push
xor
icebp
stos
cld
or
xor
cmp
jae
(bad)
mov
push
sbb
or
jmp
add
add
push
or
pop
fs
sbb
fnstcw
xor
push
outs
pop
fidiv
cmp
(bad)
stos
test
or
popf
dec
jnp
xchg
mov
mov
inc
dec
jne
pusha
pop
aaa
fwait
pop
(bad)
daa
dec
and
retf
stos
lahf
pop
fist
fdivr
(bad)
retf
mov
push
lahf
xor
addr16
retf
xchg
inc
mov
push
xlat
retf
retf
pop
dec
dec
das
push
jnp
cmp
jnp
mov
(bad)
mov
push
sbb
fimul
sbb
mov
pop
jno
cli
loop
mov
or
inc
jg
nop
mov
das
jo
shr
and
inc
cmp
add
cvtps2pd
mov
adc
xchg
in
loopne
jmpw
sbb
lds
fiadd
jge
and
dec
loopne
test
push
lea
jle
pop
cli
lea
outs
fwait
inc
das
int3
cmp
xor
mov
mov
or
add
push
neg
cmp
xor
dec
ds
push
xchg
jg
movs
fincstp
cmp
sub
out
inc
test
ret
jae
div
in
push
cwde
test
push
test
loopne
dec
jle
daa
dec
repz
adc
pop
bswap
hlt
mov
add
sbb
mov
ret
or
cmp
out
jne
jnp
icebp
push
cmp
inc
stos
mov
je
dec
mov
fstp
cwde
push
cmp
mov
xor
push
sub
xchg
mov
jns
cmp
add
(bad)
(bad)
jl
stc
and
mov
cmp
jns
not
and
sbb
cmp
push
xor
dec
mov
aad
add
inc
fistp
hlt
pop
xor
mov
dec
js
jg
inc
mov
lock
sbb
mov
aas
push
jmp
(bad)
jo
sbb
clc
jnp
xlat
and
addr16
test
inc
out
loope
dec
dec
pusha
fcmovbe
das
mov
mov
add
fs
daa
ja
mov
dec
push
aam
sbb
idiv
aaa
(bad)
pushf
cmp
pop
jp
cmc
jb
pop
mov
sar
dec
jne
jl
std
mov
xor
outs
dec
cmp
mov
or
scas
repnz
pop
gs
xor
xlat
cmp
div
jbe
push
sar
lock
xchg
dec
fstp
mov
ds
movs
jmp
les
(bad)
dec
outs
not
cld
and
pop
lock
mov
pop
jbe
iret
or
aad
or
pop
cmp
inc
adc
pop
hlt
pop
xchg
xor
in
repz
fidivr
loope
ror
lods
ins
fxch
add
sahf
loopne
in
sub
bound
cmps
xchg
idiv
and
loopne
mov
adc
retf
adc
retf
push
fcom
cmp
and
cmp
push
repnz
xchg
int3
push
pop
sbb
sub
aad
(bad)
and
xchg
daa
or
mov
and
fcom
mov
icebp
mov
sub
cwde
cs
cli
adc
mov
xor
sahf
(bad)
jg
nop
push
(bad)
mov
in
imul
mov
icebp
jo
(bad)
adc
fst
jns
pop
or
out
test
and
cdq
sbb
adc
and
lea
mov
loopne
add
shl
adc
(bad)
xchg
xchg
cld
xchg
adc
ror
ror
fdivr
xchg
cmovb
jnp
imul
sahf
push
inc
jge
iret
push
std
push
and
in
dec
mov
inc
out
xchg
sub
mov
xchg
or
jecxz
ss
pop
pop
hlt
repz
(bad)
xor
es
jnp
or
repnz
cld
push
push
aas
mov
jb
cmp
repz
xchg
pop
inc
pusha
adc
dec
fcomp
sub
stc
inc
lods
fs
push
inc
cmp
add
inc
aad
and
dec
mov
sahf
jno
jb
sbb
and
cli
out
push
xchg
add
(bad)
lods
mov
dec
and
and
jo
sub
add
int
or
ds
and
ins
pop
mov
push
(bad)
pusha
(bad)
rcr
inc
push
loop
dec
mov
adc
sbb
imul
push
add
aam
cmp
fsubr
cdq
xor
dec
and
push
sbb
outs
sub
jne
push
jns
adc
pop
in
in
retf
and
out
sub
stos
out
(bad)
sbb
inc
cs
mov
xor
dec
aaa
adc
cmc
ins
cmps
adc
mov
sbb
dec
nop
pop
add
add
inc
test
add
sub
push
sahf
xchg
(bad)
pushf
pushf
ss
in
lods
(bad)
dec
and
rcl
sbb
(bad)
ins
fs
push
pop
and
push
jne
lds
or
in
loop
xchg
cmps
sub
jle
test
dec
mov
inc
mov
es
in
or
sbb
xchg
or
mov
pushf
xor
xor
xor
(bad)
jp
pop
dec
mov
jo
jl
pop
lds
mov
dec
std
in
jnp
push
add
mov
repz
fnsave
call
shr
sub
xchg
xchg
jge
push
fcomp
call
cmp
fstp
mov
fs
test
lock
cmp
cwde
dec
xchg
xlat
dec
clc
test
pop
mov
jge
mov
mov
outs
sub
push
gs
out
jbe
mov
xchg
xchg
sar
loope
in
loopne
lods
jg
jnp
pop
jns
or
iret
iret
aad
scas
and
pushf
add
adc
fiadd
add
sub
xor
cmp
sbb
xor
jb
daa
xchg
imul
call
adc
mov
add
stc
lods
fistp
adc
mov
inc
dec
or
(bad)
sbb
push
cmc
rol
bound
mov
cli
loopne
xor
mov
arpl
sub
mov
bndldx
push
js
fist
js
call
dec
inc
sbb
clc
adc
(bad)
push
into
je
xchg
into
hlt
test
ds
push
call
cld
test
sbb
mov
shl
ds
cmp
add
data16
ror
lahf
repnz
lds
(bad)
je
xchg
dec
push
push
call
ret
call
inc
xchg
mov
ror
sahf
mov
(bad)
jl
sahf
daa
(bad)
imul
adc
out
jne
mov
or
xchg
fcom
sbb
ret
test
jl
ret
sub
icebp
shl
stos
(bad)
pop
cmp
add
cmp
das
ror
push
fisubr
aaa
push
test
sub
or
mov
repz
xor
out
dec
and
jle
clc
enter
inc
push
leave
jne
sbb
ret
mov
rcr
lahf
fild
xor
push
jno
outs
shl
dec
push
test
jae
cmps
mov
inc
(bad)
sbb
mov
jno
mov
inc
inc
pop
lock
dec
repz
ss
icebp
pop
ret
lds
ins
int3
inc
adc
ret
std
and
mov
test
add
pop
outs
and
adc
inc
push
int3
pop
not
imul
inc
hlt
mov
mov
ret
(bad)
aam
jl
jmp
push
or
imul
jno
into
sub
(bad)
jbe
inc
inc
adc
adc
sbb
lods
pop
sbb
cwde
adc
es
mov
imul
in
mov
mov
add
bndstx
call
sti
push
in
hlt
addr16
xor
jno
xor
stc
(bad)
push
fild
cmpxchg
leave
sub
xor
xor
mov
test
daa
add
push
out
xchg
lahf
add
or
cmp
das
pop
sub
jno
and
adc
out
in
aam
cwde
sub
cmps
pop
mov
add
dec
and
mov
stos
xor
mov
or
sub
mov
aas
retf
cmp
loope
jbe
jo
pop
repnz
enter
mov
movs
lahf
mov
xor
cmp
mov
mov
stos
inc
cdq
jnp
mov
cdq
test
lods
adc
(bad)
mov
jmp
cmp
(bad)
pop
add
or
ja
ret
cmp
(bad)
jmp
jns
repz
add
mov
add
test
and
push
rcr
sbb
dec
sub
movs
popa
mov
jmp
push
fadd
(bad)
mov
sub
mov
push
and
sbb
icebp
lods
lods
stos
dec
inc
retf
fidiv
jmp
adc
jo
xor
cs
ins
nop
sbb
adc
jbe
mov
ja
clc
pop
pop
mov
mov
inc
popa
mov
test
sub
mov
cmc
dec
fdivr
mov
arpl
cmp
sti
mov
scas
das
xor
xchg
mov
lahf
cmp
sub
rol
(bad)
enter
sub
jno
xchg
dec
adc
xchg
addr16
pop
ret
jb
popf
jns
test
mov
and
imul
xor
nop
ret
mov
iret
xchg
push
dec
int3
add
lock
pop
xor
pop
sbb
cdq
es
inc
stc
pop
push
cwde
cmp
jmp
pmulhuw
enter
fisttp
jb
fcomi
mov
jno
mov
ror
pop
jno
sub
xor
jmp
aaa
call
fs
stos
outs
xchg
jl
cmp
movs
xchg
xor
addr16
sub
ins
and
sti
aam
lahf
mov
call
mov
mov
ins
(bad)
add
cs
into
add
or
aad
pop
sbb
lods
out
dec
adc
pop
std
push
int
shr
jne
bound
adc
test
fdiv
test
rcr
jo
int
push
xor
fs
pop
or
popf
push
mov
and
cmp
dec
inc
lods
mov
mov
cmp
jno
call
mov
jl
popa
repnz
jle
cmp
test
lds
leave
and
out
add
pop
adc
mov
stc
cmp
hlt
cld
pop
in
and
idiv
call
mov
sbb
push
jp
xor
push
int3
fisttp
dec
pop
gs
mov
cdq
mov
lahf
jb
pop
and
fist
je
inc
imul
iret
mov
(bad)
xchg
(bad)
loop
push
push
sbb
scas
inc
pop
pop
or
mov
int3
and
nop
int3
pushf
pop
mov
sub
pop
inc
hlt
(bad)
icebp
push
clc
push
mov
(bad)
shl
pop
ja
sbb
cs
call
pop
out
cld
loopne
inc
cli
test
jge
addr16
cmc
arpl
test
dec
(bad)
bnd
cmc
pushf
adc
jle
ror
retf
jecxz
imul
xor
iret
icebp
in
mov
lock
mov
sub
jnp
sub
inc
xor
mov
mov
pop
and
inc
(bad)
fldcw
pop
sbb
add
sbb
stos
outs
repz
add
imul
adc
test
push
jle
cmc
cld
lods
cmps
ja
out
cwde
mov
xlat
popa
jno
lods
fcomip
jno
out
stos
addr16
push
or
bound
cld
(bad)
sbb
in
pop
out
mov
inc
xchg
add
test
dec
push
mov
pop
jmp
mov
fisubr
or
aas
call
lds
iret
jmp
enter
xor
dec
sbb
and
xor
pop
or
and
jle
cld
jno
cmps
out
inc
sbb
sbb
xor
(bad)
sbb
mov
repz
adc
cli
xchg
or
(bad)
pop
push
sbb
cmps
inc
jo
fisub
and
sub
(bad)
scas
push
xchg
mov
out
xchg
pop
or
push
pop
pop
pop
je
movs
xor
mov
jo
popf
rcl
cli
loopne
xor
sbb
ins
loopne
xchg
jge
dec
test
lock
cmp
cli
mov
mov
push
div
jmp
cmps
push
out
sub
push
test
test
int
hlt
popa
push
enter
sub
pop
cmp
cs
jno
std
sar
mov
mov
movs
add
fsub
sbb
(bad)
push
repz
sbb
cmp
int
cmps
xchg
cmp
dec
or
pop
mov
or
adc
mov
mov
daa
ins
add
popa
jno
xchg
lds
dec
mov
retf
jne
out
retf
jne
adc
sbb
cmp
(bad)
outs
and
mov
sbb
int
fwait
sub
pop
mov
xchg
cmc
mov
ins
jne
sub
pop
and
iret
std
mov
fiadd
jns
(bad)
(bad)
mov
xor
jbe
mov
not
repz
mov
add
xchg
sub
mov
das
mov
ins
dec
daa
mov
arpl
shl
std
(bad)
loope
xchg
ja
cmp
or
enter
test
cmp
sbb
add
xor
inc
or
dec
and
ins
daa
xchg
sbb
enter
icebp
out
pop
ret
mov
pop
adc
jp
cwde
mov
cmp
jp
pop
xchg
pop
xor
add
int3
mov
cmp
fstp
std
out
jmp
push
xchg
mov
sbb
cmp
psrlq
(bad)
fnstenv
mov
lods
int3
cmps
mov
add
adc
jecxz
icebp
jno
aad
pop
xor
popa
mov
into
pop
or
stos
xor
loope
cmc
pop
mov
sub
cmp
pushf
xchg
lods
push
pop
xchg
lock
jne
push
stc
pop
mov
add
mov
xchg
dec
sub
push
ss
ins
inc
cmp
push
in
std
push
lods
mov
shl
mov
std
cmps
jb
push
and
xchg
neg
mov
jl
call
xchg
jnp
or
mov
jb
xor
or
aas
sbb
imul
mov
sub
in
dec
mov
retf
mov
or
push
cmp
fs
jp
jnp
mul
fsub
je
hlt
and
(bad)
jl
data16
pop
mov
daa
cmp
jmp
mov
(bad)
gs
mov
adc
adc
cmp
cmp
add
xchg
lock
mov
push
shl
xchg
xor
mov
add
outs
mov
add
shl
and
repnz
into
aaa
or
inc
cs
mov
push
or
add
call
sar
push
cmp
(bad)
leave
push
std
out
push
aad
pop
dec
call
mov
push
and
shr
mov
mov
push
sub
movs
sub
or
cs
icebp
or
test
shl
push
pop
enter
add
les
lahf
xlat
jns
iret
mov
push
sbb
mov
jg
int
dec
stos
pushf
push
cmps
test
mov
das
dec
lods
adc
ss
ins
fsub
dec
daa
pushf
sub
mov
push
xchg
and
pop
gs
imul
xor
mov
fisttp
lods
data16
nop
push
sbb
int
adc
sbb
arpl
pop
stos
push
adc
mov
mov
js
mov
aas
and
inc
xchg
dec
adc
pop
lahf
dec
inc
sbb
or
aad
ja
mov
adc
push
mov
xlat
sub
mov
sub
xchg
cld
mov
sub
jo
add
cs
cmp
push
push
ins
rcr
out
or
out
jg
push
push
and
or
aaa
xchg
mov
jmp
rcr
sub
jns
(bad)
bnd
sti
outs
add
mov
ret
pop
cmps
fsubp
pusha
or
cli
call
mov
cmc
cmp
call
pop
jp
xor
in
add
mov
xchg
push
(bad)
inc
lock
xor
aaa
ret
xor
mov
dec
push
mov
leave
sti
push
add
xor
fsubr
push
(bad)
dec
retf
inc
adc
stos
or
ins
add
jecxz
int
inc
pop
ffree
sahf
ror
dec
xor
pop
das
xchg
scas
movs
mov
push
mov
adc
add
aam
push
outs
retf
loopne
push
add
inc
inc
mov
sub
mov
cdq
mov
or
movs
xchg
dec
leave
movs
jae
test
and
mov
fiadd
icebp
rcr
ds
jge
cmp
fistp
cmps
xchg
hlt
out
cmp
iret
pop
stos
enter
mov
cld
jle
cmp
in
sub
push
int3
dec
xchg
in
inc
xor
mov
std
jle
add
xchg
cmc
push
jno
mov
daa
jp
dec
shl
mov
cli
repz
xor
mov
pop
outs
sub
stos
mov
iret
ins
dec
test
xor
shl
pop
jbe
popf
pop
inc
sbb
jmp
inc
aas
stos
pop
cmps
call
out
xor
xor
push
jle
sub
mov
in
cmp
adc
xor
movs
ret
arpl
inc
rcl
jmp
mov
pop
(bad)
add
sahf
jle
mov
mov
daa
scas
jno
(bad)
(bad)
adc
loop
call
or
and
rol
mov
inc
iret
mov
adc
cmp
dec
test
push
ror
rcl
dec
pop
in
addr16
cmp
xor
sbb
adc
mov
mov
dec
pop
sbb
jae
loop
je
xor
(bad)
cwde
shr
pushf
les
fsub
lods
mov
out
lds
pop
je
inc
ror
test
mov
jno
mov
add
retf
mov
push
add
dec
mov
jae
jbe
pop
adc
sti
jne
movs
push
ja
or
push
idiv
or
out
inc
or
pushf
fild
inc
pusha
inc
pop
mov
stos
pop
int
jns
jl
pop
test
mov
push
in
loop
(bad)
mov
hlt
xor
cmps
add
out
stos
mov
pop
dec
sub
pop
movs
pop
rol
test
adc
stc
jle
xor
sbb
dec
sub
(bad)
push
out
loopne
xchg
out
in
mov
pop
fwait
ja
sbb
and
fdivr
mov
aam
test
js
or
mov
out
lods
adc
loop
sbb
push
(bad)
jno
adc
bound
test
idiv
fst
mov
mov
pop
cmp
add
and
cmps
dec
sbb
cld
pop
fisttp
in
in
add
out
sub
xor
xor
inc
mov
ins
push
cmp
cli
add
mov
icebp
jmp
cdq
jb
test
cld
mov
adc
les
mov
push
aaa
out
icebp
push
aam
std
pop
aad
(bad)
aam
imul
cdq
call
jle
popf
mov
adc
add
sbb
retf
sub
mov
sub
ins
cmp
mov
(bad)
adc
pop
cmp
clc
clc
xor
jg
sbb
inc
xor
aam
inc
xchg
jno
mov
and
jne
add
cld
or
mov
stc
push
rcl
cmp
inc
lds
(bad)
loopne
or
pop
in
inc
inc
pop
xor
(bad)
and
push
fwait
icebp
sbb
and
xchg
ror
fwait
add
xchg
cmp
movs
fld
fsubr
mov
jl
adc
popf
and
xchg
xchg
shr
out
and
xor
loop
or
add
adc
(bad)
fisttp
mul
enter
cmp
add
xlat
push
test
add
mov
mov
cmp
cmps
aad
in
fidiv
dec
adc
sub
push
mov
xor
adc
add
fucom
test
(bad)
cdq
mov
pop
in
stc
mov
cmps
outs
jg
pusha
lods
ins
(bad)
and
retf
sbb
out
and
or
test
lods
cli
xchg
movs
sbb
mov
sub
mov
loopne
mov
test
fs
sub
cmp
in
arpl
add
sub
in
ss
and
inc
xor
movs
cmp
les
inc
pop
fwait
sub
cdq
and
cmps
ror
jecxz
push
daa
nop
fidivr
add
sar
les
les
retf
mov
mov
add
(bad)
frstor
pop
pop
mov
adc
pop
cli
pop
add
outs
and
fild
out
adc
mov
not
push
pop
xchg
in
push
(bad)
hlt
jmp
adc
xchg
pop
sub
cwde
xchg
dec
rol
jl
jbe
mov
imul
das
dec
(bad)
cmp
mov
ret
dec
jp
mov
shr
mov
pop
sbb
popa
inc
sub
cmp
pop
mov
sub
out
fcomi
inc
mov
push
les
mov
cmps
rcr
or
mov
inc
mov
push
mov
mov
adc
xor
push
cdq
fisttp
bound
out
(bad)
ror
cmp
sub
or
out
pop
sub
xchg
lds
adc
(bad)
jae
and
and
dec
or
mov
mov
push
jl
jecxz
mov
iret
jno
stos
mov
cmp
push
push
jl
das
iret
gs
dec
jbe
in
stos
ja
xchg
jnp
icebp
retf
cmps
cmps
mov
lea
and
or
sbb
(bad)
cwde
xchg
pop
jle
mov
lahf
dec
mov
cs
enter
(bad)
push
icebp
adc
cmc
jg
jb
jo
iret
xor
adc
dec
ror
and
and
xchg
fimul
pushf
es
or
in
fxch
sub
cmp
inc
retf
inc
repz
imul
jge
cwde
or
cli
pop
or
xchg
out
fs
ss
lods
dec
xchg
cdq
and
lea
retf
adc
cmc
mov
and
jle
mov
sbb
add
push
pop
out
push
pop
retf
stos
ret
and
pop
stos
pop
push
xlat
adc
movs
pop
out
dec
mov
ret
xor
pop
push
jecxz
outs
mov
mov
jnp
mov
rcl
es
nop
xchg
aas
mov
cdq
and
clc
or
(bad)
push
mov
test
jmp
xor
mov
sbb
inc
fs
jb
(bad)
in
xor
out
jno
into
xchg
and
xchg
js
retf
mov
inc
mov
mov
push
xchg
mov
push
add
adc
push
icebp
out
daa
outs
xor
enter
jns
inc
inc
fmul
test
(bad)
mov
ss
ins
inc
stc
std
adc
jno
fwait
lods
dec
repz
int
jmp
sbb
sbb
sub
bound
int
enter
jmp
jbe
or
or
mov
jge
fcom
fadd
sub
fwait
mov
stos
dec
cmps
sbb
sti
and
push
sub
loop
je
jp
sub
jp
imul
call
mov
test
fisttp
jge
mov
fbstp
scas
mov
cmp
jae
xor
mov
imul
outs
add
dec
xchg
bound
dec
sub
mov
push
outs
dec
add
cdq
push
fwait
jl
or
pop
movs
cmp
loop
jle
(bad)
xor
jp
sahf
mov
inc
xor
xchg
ins
pop
cmps
pop
dec
(bad)
mov
mov
cmp
data16
adc
(bad)
test
test
jp
jge
fptan
and
shl
stos
fs
adc
das
retf
pop
sti
test
mov
arpl
adc
inc
inc
pushf
retf
cmp
cs
xchg
ret
inc
int
xchg
out
out
stos
mov
and
and
retf
aas
pop
les
cld
cwde
or
jb
cmp
and
or
mov
adc
sahf
pop
imul
outs
fcmove
mov
push
mov
arpl
fistp
mov
jmp
xchg
mov
ja
xchg
mov
fs
fisubr
sub
add
sti
mov
xchg
bound
jmp
sbb
push
sub
pop
mov
pop
mov
scas
add
mov
pop
adc
pop
out
xor
mov
xor
enter
or
pop
dec
pop
adc
call
pop
leave
pop
mov
lahf
jo
(bad)
arpl
mov
int
int3
jne
jmp
sub
and
jb
jns
adc
dec
inc
jne
or
fwait
cmp
out
loop
cmp
fs
add
ja
loopne
inc
loop
push
adc
xlat
in
fist
je
ja
(bad)
repz
bound
je
dec
lds
mov
pop
pushf
add
or
adc
jmp
adc
stc
into
int
mov
or
mov
call
es
push
mov
ins
loopne
arpl
cdq
inc
or
push
mov
and
sbb
inc
mov
pushf
mov
sub
adc
cmps
(bad)
pushf
push
xor
push
(bad)
sbb
sub
push
pop
xchg
shr
in
jnp
or
cmp
(bad)
push
fbstp
mov
mov
or
shl
jp
mov
adc
push
repz
adc
popa
mov
pop
mov
mov
fs
pop
rcl
mov
xor
push
rcr
nop
in
xchg
daa
jle
rcl
xchg
xor
(bad)
pop
jge
inc
xchg
xor
cdq
or
pusha
dec
sub
and
out
xchg
sub
les
retf
div
sahf
call
retf
push
popa
jecxz
push
vorpd
mov
or
cmps
scas
inc
pop
or
pop
xchg
mov
or
ins
lods
jno
push
int3
push
ror
ficomp
mov
and
or
outs
add
retf
cli
adc
gs
xchg
pop
add
(bad)
and
pushf
mov
sub
pop
stos
push
add
cmps
cmp
inc
pop
jnp
addr16
xchg
jl
inc
cmp
fiadd
mov
in
ficom
mov
pop
mov
pop
xlat
xchg
jl
mov
mov
test
cs
movs
ins
jle
clc
hlt
(bad)
(bad)
loop
cmp
pop
shl
add
out
int3
jno
nop
aas
daa
fsub
retf
sub
push
push
mov
sub
add
add
clc
fadd
inc
shr
pop
cmps
mov
test
bound
sub
push
js
and
imul
pop
pop
dec
xor
jle
push
dec
loopne
and
rcr
int
je
mov
and
and
int3
lods
cmps
cmp
push
mul
push
inc
jb
pop
test
cmps
add
dec
movs
fadd
loop
int
and
clc
idiv
pop
dec
fidivr
adc
and
xchg
retf
int3
outs
repnz
std
mov
xchg
lahf
xchg
ss
jle
mov
sbb
mov
jmp
jge
das
test
push
les
add
add
or
inc
shr
lods
ins
call
jge
or
cwde
or
ss
iret
cmp
adc
in
test
out
rcl
cmps
sbb
aas
pop
xchg
jmp
out
mov
add
jnp
call
sub
cwde
xor
pusha
rcr
imul
mov
pusha
test
dec
jmp
and
jbe
das
stc
and
pop
test
xor
push
push
cmp
xor
lds
fnstenv
imul
or
dec
inc
or
lods
rcl
retf
xchg
repz
int
(bad)
mov
popw
and
xor
sbb
or
(bad)
inc
(bad)
lds
(bad)
outs
addr16
test
cmp
pop
popa
add
inc
shl
pop
lahf
xchg
iret
cmp
rol
div
cli
jle
pusha
sub
adc
cmp
rcr
xchg
mov
inc
lock
or
sar
and
add
xchg
xchg
into
mov
movs
into
(bad)
out
xchg
jae
nop
dec
ret
call
lock
adc
enter
xlat
out
outs
lock
adc
xlat
inc
mov
test
dec
loopne
and
push
add
sbb
movs
ins
pushf
mov
cmp
pop
cmp
cmp
or
pusha
cmpxchg
and
repz
aam
xor
xchg
pop
fdivrp
pop
push
fidivr
aad
xor
daa
push
xor
sar
je
pop
scas
lahf
sbb
xor
add
or
mov
enter
test
stos
mov
pop
and
pop
inc
int
daa
adc
repz
add
sbb
idiv
mov
(bad)
xor
mov
(bad)
push
sub
loop
mov
bound
jbe
sbb
push
outs
loop
bound
mov
pushf
jb
inc
(bad)
mov
pop
jns
xchg
xor
retf
cmp
dec
repz
push
adc
ret
pop
jbe
sbb
jo
repz
inc
cs
(bad)
les
jbe
xor
out
out
into
mov
mov
push
cdq
and
pop
stc
cmp
and
push
jmp
and
and
enter
aas
les
xchg
(bad)
(bad)
mov
sar
ret
in
fiadd
push
xor
mov
movs
inc
ds
pusha
cmp
adc
rdpmc
cmp
inc
in
add
xor
dec
in
stc
push
scas
mov
in
sub
iret
xor
stos
xchg
outs
jno
and
shl
icebp
xchg
mov
mov
out
jle
push
mov
iret
test
add
mov
call
cmp
(bad)
test
mov
jl
in
xor
iret
or
mov
aad
xor
inc
mov
sbb
jmp
pop
push
jne
imul
sbb
push
inc
ficomp
dec
loop
popf
cmp
xchg
outs
shl
ins
popa
mov
jns
mul
push
and
cld
pop
lods
adc
xor
aam
xor
jae
xchg
jnp
and
gs
dec
inc
dec
imul
inc
add
rcl
xor
aam
xchg
fs
clc
adc
test
rcr
ficomp
jmp
push
arpl
scas
jno
sub
push
mov
movs
xchg
jg
icebp
or
push
xor
ror
dec
jb
push
jo
jmp
or
xchg
loope
xor
push
daa
or
xchg
mov
sbb
pop
cmp
ds
pop
jo
add
cmps
mov
shr
push
scas
xchg
xor
adc
loopne
cmp
jecxz
call
mov
jp
fsubrp
sar
mov
inc
pop
adc
and
jge
inc
cmp
repnz
dec
xor
sahf
mov
lea
or
fmulp
rol
cmc
call
cli
dec
cs
pop
adc
jg
xor
push
or
js
inc
mov
addr16
jae
and
or
jp
sbb
leave
add
fnstsw
mov
mov
inc
adc
xor
mov
shl
fisubr
mov
mov
push
in
outs
jbe
in
sbb
test
dec
jne
mov
dec
push
mov
call
fist
(bad)
out
sbb
mov
inc
in
ret
or
je
and
in
cmp
js
xor
cmps
adc
inc
jp
push
iret
addr16
in
pop
pop
loopne
jl
xchg
jae
pop
and
pop
scas
inc
inc
popf
les
(bad)
or
in
mov
push
add
inc
sar
lods
je
ss
test
or
xor
add
sub
scas
mov
xchg
mov
jnp
inc
and
jl
call
mov
cwde
mov
pushf
call
push
fwait
out
mov
jmp
cmps
push
lea
push
pop
push
or
fild
mov
out
sbb
shl
(bad)
or
lock
adc
sbb
das
mov
cmp
add
jne
fcom
loop
out
enter
add
jge
cmc
mov
sbb
pop
out
int3
add
in
loope
cmps
pop
fcomip
mov
mov
shl
cld
cwd
mov
mov
jns
imul
and
or
in
enter
outs
jno
in
cdq
lods
adc
je
pop
cmp
push
jl
loop
lock
aad
cmp
call
clc
sahf
jbe
add
fwait
mov
nop
and
mov
ret
inc
mov
mov
pop
aad
mov
ins
shl
add
or
movs
aas
test
jg
dec
sbb
repnz
add
cld
jg
test
movs
data16
mov
and
add
jns
sbb
fsin
call
inc
aas
adc
aas
inc
mov
sub
int
in
pop
or
xchg
mov
mov
imul
jne
dec
or
imul
xor
dec
in
cmp
fistp
pusha
(bad)
dec
adc
add
or
sub
pop
pop
mov
mov
inc
push
mov
mov
outs
mov
sti
mov
add
and
enter
std
xlat
(bad)
push
cdq
pop
mov
xlat
push
ja
inc
pop
(bad)
push
lds
mov
xchg
clc
je
pop
push
mov
sbb
pop
push
jg
and
push
int3
inc
cld
ds
cmp
jg
xor
adc
add
rcl
stos
dec
icebp
mov
cmovp
rcr
jp
pop
push
cmp
sub
in
retf
inc
inc
push
fwait
mov
iret
mov
lods
mov
inc
pop
add
inc
jns
aas
into
push
xor
mov
cmp
ds
inc
xor
cdq
test
add
sub
pusha
leave
mov
push
stos
fs
movs
icebp
jbe
fs
arpl
inc
dec
inc
push
or
xor
dec
frstor
arpl
(bad)
lods
adc
pop
popf
cmp
lods
dec
and
pop
repnz
cmp
sbb
fbstp
out
rcl
aam
xchg
pop
aaa
mov
std
xchg
test
jl
cmp
daa
jns
dec
cmps
stos
stos
into
dec
inc
ror
std
push
pusha
pushf
push
cld
mov
inc
out
push
sbb
(bad)
sbb
pop
mov
add
mov
mov
and
xchg
int
loopne
jnp
push
or
sbb
in
push
mov
xchg
push
sbb
icebp
gs
or
mov
fistp
xlat
cs
mov
popa
jno
mov
cmp
cmp
ss
fsub
jp
dec
daa
and
enter
fstp
or
call
popa
dec
popf
push
add
dec
or
dec
aam
pop
sbb
xor
fld
daa
daa
mov
test
push
and
cli
sbb
shl
test
mov
jle
xor
adc
dec
cmp
xchg
fsub
loopne
push
(bad)
push
push
push
dec
xchg
hlt
in
or
cmps
jne
popf
mov
popa
mov
xchg
add
xor
aad
and
cs
ins
out
push
or
cmps
dec
cmp
sbb
mov
shl
jle
push
cdq
dec
in
bound
inc
imul
repnz
jb
add
mov
xor
lock
xor
cmp
lods
mov
sbb
mov
in
test
inc
pushf
nop
xor
xlat
adc
or
test
pop
adc
ins
push
cmps
dec
fisubr
sbb
mov
fiadd
fmul
inc
je
cmp
pushf
inc
jge
pop
popa
fistp
es
clc
push
sbb
xor
adc
rcl
sub
(bad)
pop
or
je
mov
scas
pop
repz
rcr
(bad)
and
pushf
fcomp
pop
sub
ret
sub
movs
sar
dec
loopne
aad
mov
ret
in
jb
or
sbb
data16
mov
pop
(bad)
(bad)
sti
outs
fld
mov
out
cmp
add
push
jo
cdq
lods
cmp
xchg
inc
mov
sub
xchg
xchg
sub
add
add
cmp
cli
xor
mov
shl
sub
cmp
mov
jl
inc
cmp
fwait
jmp
lea
fcom
jnp
and
add
pop
clc
iret
adc
mov
(bad)
addr16
out
(bad)
pop
push
push
div
daa
es
add
dec
dec
cmp
and
addr16
in
lds
mov
in
sub
loope
in
mov
sub
add
in
es
fadd
out
push
cmp
mov
icebp
xor
mov
push
scas
mov
loope
int
push
ret
das
fdivr
not
out
call
mov
push
cli
out
mov
ja
rcl
push
(bad)
jmp
xchg
mov
inc
fild
push
inc
dec
imul
into
sbb
xchg
cld
sbb
cmp
lahf
mov
jmp
(bad)
shl
mov
scas
mov
mov
ret
pop
std
out
and
outs
mov
push
(bad)
lahf
shl
push
movs
out
stos
mov
cs
mov
mov
arpl
sub
add
mov
pop
push
fs
sbb
jo
aad
cli
or
mov
mov
stos
sub
adc
xor
es
cmps
ret
xor
mov
mov
sub
mov
retf
mov
adc
sub
and
sahf
sbb
inc
pushf
sbb
lahf
mov
or
(bad)
fdivr
and
test
leave
movs
mov
(bad)
adc
cmp
hlt
stos
jne
sbb
xchg
inc
xchg
in
clc
xor
adc
ret
fidivr
test
or
pop
ss
fstp
pop
inc
inc
(bad)
into
aam
mov
adc
adc
retf
mov
mov
popa
fwait
sub
fbstp
dec
sbb
ja
(bad)
bound
adc
in
fisub
cmps
mov
push
fiadd
mov
mov
adc
mov
pop
sub
sbb
call
or
jmp
and
push
push
mov
ret
and
add
or
add
pop
pop
cmp
dec
ds
jo
dec
add
mov
push
or
test
(bad)
add
cmp
inc
xor
pop
(bad)
shl
jge
outs
inc
mov
xchg
mov
dec
fnstenv
mov
cmps
or
in
mov
add
mov
inc
out
adc
dec
inc
jb
outs
inc
ds
adc
loope
sbb
js
jbe
es
lea
popf
aad
cwde
cwde
(bad)
cld
(bad)
ins
fidiv
sbb
lods
and
cmp
inc
fild
in
aam
sub
dec
ins
pop
or
cmp
mov
(bad)
loopne
ror
ds
in
mov
not
pop
fdiv
das
into
lds
dec
push
dec
or
movs
repz
push
mov
vunpcklps
fbld
(bad)
fsubp
mov
cmp
push
test
jns
push
sub
cld
popf
outs
add
fisttp
scas
dec
mov
fadd
inc
fs
stos
fild
pop
shr
dec
mov
gs
in
(bad)
sbb
adc
test
test
fimul
jmp
push
mov
add
(bad)
imul
rol
jns
test
jle
add
jne
dec
ret
cmp
cmp
add
jmp
cmp
mov
out
sub
scas
cmc
jmp
iret
lods
out
mov
sub
jg
hlt
cmp
pop
jo
sub
cmp
push
jo
mov
pop
nop
cmps
xor
inc
js
sub
dec
arpl
pop
ins
in
fs
xor
push
and
imul
shl
mov
scas
pop
ins
mov
and
out
mov
dec
xor
push
fcomp
push
xchg
adc
pusha
inc
pop
imul
stc
loop
fist
retf
dec
jbe
dec
sub
stos
enter
dec
fwait
out
in
test
ds
sub
movs
into
sbb
cli
ss
aaa
pop
and
hlt
dec
(bad)
aad
pop
test
sbb
out
add
fwait
enter
retf
jg
push
xchg
loop
imul
ret
sub
push
in
mov
inc
popf
aad
repnz
jg
mov
cmp
sahf
sub
ins
sbb
das
jmp
aas
cdq
cmp
xchg
pop
sbb
mov
sub
movs
xor
lods
in
fcmove
adc
adc
or
dec
jne
cmp
mov
add
xchg
xor
bound
and
xor
jmp
inc
jge
not
pop
push
fcom
jmp
add
sbb
cmp
mov
mov
outs
cmps
pop
or
bound
cld
loope
ficom
xchg
in
bound
pop
std
ja
bound
mov
mov
jp
outs
pop
adc
movzx
pop
and
xor
outs
not
pop
or
leave
xlat
mov
inc
ss
loop
fstp
add
outs
cmc
and
jnp
cmp
xchg
aaa
jmp
mov
or
lds
iret
pop
jne
hlt
pop
fldenv
retf
jbe
ret
xor
pusha
dec
shl
mov
lods
dec
test
mov
je
inc
mov
ins
adc
(bad)
daa
ins
pusha
jg
out
dec
jmp
push
arpl
not
push
mov
jae
push
or
mov
dec
idiv
ret
mov
enter
xchg
dec
inc
mov
(bad)
ficomp
jb
sbb
cmps
shl
sar
xor
mov
(bad)
pop
pop
add
jl
imul
dec
adc
outs
sub
test
pop
mov
fwait
rol
imul
pop
pop
jmp
int3
aaa
jmp
dec
test
jg
stos
fadd
fisttp
xchg
lock
jnp
(bad)
leave
inc
or
mov
bound
fwait
push
mov
jmp
sub
pop
addr16
dec
aas
repz
xchg
pop
call
push
sub
in
aam
dec
adc
xor
popf
push
out
xor
mov
shr
test
sub
or
ins
test
ret
mov
stos
jne
push
xchg
imul
idiv
cmp
jo
push
and
sub
or
(bad)
pop
sub
xchg
inc
lahf
pop
and
aas
call
test
out
cmp
movs
out
jne
add
cdq
gs
push
mov
add
sub
nop
mov
jle
jge
sahf
inc
xchg
out
test
adc
pop
mov
or
lods
int
in
cmp
cmp
rcl
jae
xchg
rcr
push
mov
data16
les
mov
gs
xchg
jecxz
mov
leave
fsubr
js
out
or
sar
cmp
sti
inc
scas
xor
dec
ret
push
mov
cmp
pop
rcl
and
pop
sub
xchg
es
xchg
adc
nop
mov
mov
movs
xor
sub
mov
xchg
scas
add
cld
adc
mov
out
out
fptan
mov
or
jns
jne
das
push
xlat
pop
out
adc
rcl
and
rcr
dec
jae
movs
push
adc
adc
sbb
sbb
mov
dec
test
jmp
outs
mov
jp
test
inc
fstp
movs
pop
push
rol
or
jmp
jne
cs
out
jnp
dec
xchg
scas
ds
push
jnp
ret
add
fst
add
or
mov
add
inc
leave
(bad)
cld
dec
inc
pop
std
cs
lock
aad
add
out
cmc
in
mov
dec
mov
dec
push
outs
(bad)
xchg
pushf
add
iret
and
xor
mov
addr16
mov
or
fisttp
add
mov
add
sbb
inc
imul
mov
inc
mov
je
nop
fst
or
and
cli
push
popf
cs
inc
cmc
jne
pop
out
mov
sbb
jle
rcr
lahf
adc
dec
es
push
dec
mov
cli
lods
cmp
or
sbb
rcr
push
pushw
pop
inc
(bad)
outs
je
cli
in
pop
(bad)
jl
mov
mov
cli
mov
inc
xor
cwde
xchg
mov
lods
mov
int
jae
sahf
jno
neg
retf
loop
jne
push
xchg
mov
outs
mov
jmp
scas
pop
idiv
je
imul
sar
fisttp
dec
jns
shl
or
sub
(bad)
add
idiv
push
retf
or
gs
sub
mov
xchg
jns
sbb
cmc
js
mov
pop
dec
cpuid
xor
in
push
nop
loopne
mov
mov
push
test
pop
je
mov
xchg
jae
sbb
adc
rcr
sbb
repnz
sub
stc
pop
test
test
mov
cmp
xchg
mov
ret
dec
es
js
mov
xor
cmp
sbb
aas
sub
xchg
jb
dec
fnstsw
jo
push
sub
inc
lea
xchg
jg
add
fbld
push
ror
sub
out
sahf
movs
pop
in
js
xchg
adc
mov
repnz
cld
dec
mov
push
int3
jg
jge
mov
mov
aad
adc
sbb
test
xchg
mov
int3
cld
in
xchg
pusha
push
sbb
(bad)
push
sahf
add
ins
xchg
pop
mov
test
leave
bound
lds
rcl
xchg
sbb
xchg
push
xor
and
psubq
pop
into
repz
shl
add
sub
in
jmp
jg
xor
int
xchg
or
dec
mov
add
sbb
test
sub
or
push
jmp
rol
call
xchg
adc
push
outs
bound
jecxz
in
in
add
std
iret
lods
dec
cmp
push
fwait
mov
xchg
or
jbe
cmc
jno
jmp
xchg
es
(bad)
pushf
es
add
cld
cmp
dec
ja
in
sbb
inc
dec
jbe
and
addr16
pop
xor
daa
retf
fld
push
mov
cmc
dec
clc
mov
popa
jmp
out
xchg
inc
div
adc
arpl
cmps
sar
jp
add
sbb
mov
stos
(bad)
imul
bsf
pusha
inc
mov
jmp
scas
mov
out
int
jo
cmp
adc
xor
in
mov
(bad)
adc
pop
mov
shr
int3
mov
test
mov
inc
jne
fwait
mov
imul
cmp
sub
out
adc
movs
sar
(bad)
lea
jg
xchg
(bad)
call
fidivr
sbb
sbb
leave
xchg
cmp
jne
stc
sbb
mov
adc
jle
neg
push
push
and
mov
dec
out
pushw
adc
mov
lock
xlat
stos
test
nop
mov
pop
push
dec
hlt
popf
jo
imul
sbb
mov
pusha
dec
jo
push
jae
dec
cmc
mov
and
popa
test
mov
jnp
add
sbb
xchg
bound
sub
sub
(bad)
and
stc
pushf
pop
test
mov
mov
scas
jae
js
inc
mov
in
fstp
int
cmp
fwait
jnp
fs
sbb
pusha
mov
test
pop
gs
stos
dec
(bad)
mov
sbb
fild
in
call
mov
sti
idiv
sahf
adc
lds
stos
mov
cld
mov
inc
and
xor
sbb
es
mov
inc
sub
lea
pop
jmp
ja
push
jmp
sub
pop
ret
and
(bad)
call
bound
sub
xchg
xchg
push
pop
jbe
retf
jge
push
fidivr
lds
stos
outs
jp
les
adc
cmp
or
dec
pop
push
jno
xor
xchg
dec
jbe
daa
lds
ror
aad
int3
mov
inc
mov
jmp
std
nop
daa
nop
xchg
das
sub
ficom
iret
xor
cmp
cli
(bad)
movs
sbb
idiv
cmp
lds
pop
mov
mov
mov
push
and
mov
jle
push
movs
jnp
lahf
in
sbb
dec
aaa
sub
sub
lods
mov
add
mov
dec
xchg
mov
lods
add
jle
xor
mov
out
push
jne
sub
sub
mov
hlt
cs
movs
in
push
push
mov
out
and
enter
mov
cmps
ror
cld
popa
loop
test
arpl
push
in
jno
aas
jge
in
push
push
dec
cmps
(bad)
fcomp
daa
push
fcomp
aad
stos
and
mov
lock
call
mov
pop
xor
call
in
fisubr
mov
and
aad
(bad)
stc
into
mov
and
cs
jmp
dec
sub
jns
mov
push
cmc
and
ret
stos
or
sbb
push
pop
sub
xor
movs
hlt
add
retf
pop
mov
dec
mov
lods
js
leave
lods
sar
sbb
loope
test
add
push
sub
jp
loope
and
(bad)
aam
mov
pop
or
or
lods
hlt
inc
xor
das
xchg
jb
push
or
out
push
ins
mov
cmps
aaa
or
adc
es
pop
je
fs
loopne
lods
xchg
into
std
js
in
and
xor
pop
mov
push
pop
push
aas
pop
ret
mov
fs
cld
repnz
push
mov
retf
push
js
das
dec
imul
or
jo
push
mov
pop
test
jle
sub
push
sbb
add
inc
sub
sbb
dec
add
pop
das
into
dec
mov
xor
sub
imul
mov
into
setns
aam
inc
ror
rcl
mov
jp
add
mov
or
rcr
test
jbe
xchg
arpl
fstp
jge
jp
bound
cld
dec
std
test
jl
xchg
sbb
call
loop
and
mov
call
test
lods
fiadd
aas
repz
lea
dec
pop
dec
fiadd
mov
inc
out
scas
and
arpl
fild
pop
cmc
mov
cmp
add
jne
xchg
ds
lea
cmp
push
sbb
repz
ds
pusha
sub
icebp
jne
test
jmp
jl
retf
cmp
ss
mov
call
xchg
fisubr
jge
adc
repz
aad
dec
sub
test
stc
cmp
dec
mov
pop
dec
pop
outs
repz
cmp
xor
std
mov
pop
sbb
test
out
outs
lock
nop
pop
outs
cmps
or
add
pop
push
mov
fldcw
lahf
scas
ins
out
ja
retf
repz
fdivr
(bad)
mov
and
loope
(bad)
aad
call
push
lods
or
push
sar
jno
adc
sbb
xor
(bad)
mov
pop
and
or
sub
jne
scas
loopne
aaa
jmp
test
pop
mov
jecxz
loopne
inc
push
push
lea
cwde
mov
dec
xchg
pop
cmps
sub
movs
dec
push
mov
loopne
fimul
es
jge
(bad)
iret
popa
fild
xor
stos
xlat
cli
shl
sahf
fldenv
jnp
out
mov
pop
test
aas
(bad)
or
out
xor
pop
dec
fs
loopne
jle
cmp
es
fiadd
jl
cwde
cmp
lea
mov
add
in
cwde
outs
(bad)
lea
and
mov
adc
dec
ins
scas
ficom
and
icebp
retf
jno
adc
push
sub
out
add
imul
in
push
repnz
in
in
pop
pop
call
enter
mov
nop
stos
and
xchg
loop
ja
inc
cdq
lods
cmp
xchg
sub
jmp
dec
repnz
lock
pop
cmp
jl
dec
ds
or
shl
sub
cmc
call
and
pop
stos
pop
popa
lock
das
mov
mov
cs
mov
arpl
cdq
fnstsw
clc
imul
ret
shr
ret
and
sar
cli
out
call
mov
hlt
ret
or
ret
mov
lods
es
jl
sbb
or
outs
push
ror
push
movs
push
aad
gs
icebp
sbb
lock
jl
rol
scas
clc
push
push
mov
scas
mov
inc
sub
pop
adc
add
and
in
stos
xchg
mov
test
jb
repz
add
cmp
retf
sub
retf
mov
or
pop
xor
lahf
daa
sbb
std
rcr
in
xchg
pop
lods
movs
(bad)
outs
lods
inc
mov
loope
push
adc
xlat
scas
mov
mov
int3
out
inc
mov
popf
cmc
and
sub
repz
inc
or
sbb
in
mov
je
xchg
mov
push
fxch
push
in
dec
sbb
int3
dec
sti
add
fadd
(bad)
jnp
xlat
cmp
pop
sbb
mov
push
out
add
adc
repnz
retf
and
sar
into
and
int
pop
dec
pop
into
fisttp
inc
out
(bad)
sub
fbld
pop
les
addr16
enter
aas
aam
inc
mov
cld
cmp
dec
jp
fdiv
push
aam
or
xor
scas
or
lahf
(bad)
cmp
inc
fistp
loope
aaa
add
fld
dec
mov
js
cmp
(bad)
sub
jnp
push
arpl
daa
mov
push
inc
pop
adc
mov
rcl
cmps
in
std
and
cmps
xor
adc
or
dec
ror
sub
pop
scas
pushf
mov
aad
ds
mov
pop
imul
adc
jge
xor
and
out
cmp
add
jbe
gs
aam
out
inc
cwde
(bad)
mov
(bad)
pop
stc
mov
sub
je
imul
xor
fchs
idiv
aaa
ss
in
sar
popf
sbb
shr
mov
cmp
(bad)
iret
test
sub
xchg
stc
cmc
test
movs
mov
xchg
cmp
retf
push
sbb
mov
sar
scas
dec
(bad)
repnz
mov
mov
jo
mov
and
retf
sub
ror
in
int
bextr
in
sar
inc
xor
pop
shl
imul
sub
push
dec
mov
retf
test
add
movs
dec
aas
inc
das
adc
repnz
jle
pop
xlat
aas
add
adc
mov
push
fidiv
imul
or
jne
fucomi
retf
aaa
xor
dec
call
pusha
repz
test
retf
xchg
imul
nop
stc
std
lods
into
jmp
bound
shr
dec
or
out
adc
cmp
cmps
(bad)
aad
push
pushf
mov
add
add
es
xchg
scas
push
fld
fldenv
xchg
movs
inc
outs
retf
add
mov
add
dec
mov
ret
jle
call
shl
shl
jle
jnp
mov
mov
jge
and
repnz
out
push
add
dec
dec
in
push
mov
dec
mov
test
in
lea
sahf
add
inc
out
mov
xchg
mov
lds
div
test
out
lods
pop
push
push
stos
or
mov
xor
jae
jmp
sub
jne
das
push
pop
repz
pop
cwde
add
sti
idiv
and
mov
cmp
pop
xchg
retf
dec
(bad)
dec
pop
imul
add
push
xchg
jmp
enter
lds
mov
shr
push
jecxz
cld
add
ja
pop
push
xor
mov
mov
int3
mov
xchg
test
cmps
pop
test
into
arpl
push
pop
xor
mov
sti
jne
xlat
pop
inc
adc
inc
sbb
fild
into
dec
mov
inc
push
gs
push
cmp
cdq
pop
pop
push
shl
push
mov
(bad)
std
or
gs
mov
sbb
repz
mov
sub
mov
jo
push
mov
jns
nop
popa
xor
jecxz
and
sub
fcmovnu
sbb
nop
push
test
mov
out
daa
pop
lods
cmp
mov
jno
int3
mov
aaa
jae
jb
mov
stos
xor
shr
dec
jb
xor
lds
cwde
addr16
stc
mov
push
jbe
pop
xchg
push
lods
into
ds
out
daa
ficomp
es
mov
jge
(bad)
fmul
movs
xor
jecxz
ret
cmp
or
ret
fimul
push
adc
jmp
adc
mov
in
mov
int3
or
clc
pop
cmps
jecxz
jg
adc
mov
loopne
pop
xchg
js
xchg
sbb
add
cdq
clc
shr
push
fdivrp
pop
lea
scas
adc
adc
xchg
cdq
in
out
xor
mov
in
test
mov
mov
in
mov
fadd
jmp
or
pop
and
rcr
fldcw
mov
mov
jmp
mov
sbb
or
inc
and
int
rol
ins
inc
pop
call
dec
jno
inc
icebp
sub
and
call
scas
call
jae
jmp
sub
movs
fcomp
out
out
fld
lock
mov
dec
in
push
xor
sbb
rol
xchg
das
jb
(bad)
mov
lea
xchg
lods
mov
jne
mov
add
jecxz
out
dec
(bad)
idiv
ret
rcr
inc
mov
dec
inc
loope
in
xchg
adc
aam
cmps
jae
pop
das
pop
xor
sub
jp
push
out
add
xchg
adc
sub
loop
repz
lahf
pop
test
jo
push
cmp
cmps
push
cld
movs
and
ret
or
sbb
(bad)
xchg
(bad)
neg
push
stos
pop
jne
sbb
(bad)
sub
mov
inc
mov
sub
adc
clc
std
mov
cmp
mov
cmp
cmp
std
jne
xchg
push
add
inc
movs
add
lea
add
scas
add
inc
add
push
mov
pushf
xchg
jbe
push
(bad)
test
jmp
mov
out
jo
xor
jge
cmp
sbb
jb
lock
popf
aaa
push
ss
not
jp
and
dec
mov
(bad)
push
jno
cmp
aad
les
ret
retf
dec
prefetch
jp
or
inc
dec
pop
(bad)
fistp
sti
std
mov
(bad)
fstp
ins
inc
mov
or
mov
ror
dec
mov
pop
add
out
or
or
xor
ret
retf
dec
dec
dec
(bad)
xchg
test
(bad)
adc
and
xchg
sbb
ret
ror
inc
xor
cmc
xor
fadd
xchg
and
adc
icebp
cmp
pop
into
xchg
mov
mov
jnp
test
adc
xor
pushf
add
or
add
std
jno
test
daa
std
adc
das
adc
push
fs
inc
pop
daa
mov
push
scas
mov
pop
js
xor
arpl
add
cmp
mov
sbb
and
pop
iret
xor
cmp
gs
sub
adc
mov
cld
sbb
and
daa
push
mov
add
ret
cmp
stos
not
fld
jno
lods
stos
xchg
pandn
test
mov
adc
mov
fadd
nop
dec
(bad)
jo
test
dec
adc
mov
push
test
dec
pop
sub
inc
arpl
pop
pushf
test
xor
xchg
dec
repz
add
pusha
sub
mov
mov
imul
push
add
add
lahf
(bad)
mov
jno
push
test
cdq
mov
push
sub
sub
rol
mov
and
outs
xor
cli
and
bound
data16
xor
pop
lds
cli
in
cmp
pushf
mov
pop
mul
das
mov
xor
je
rcl
pusha
enter
jmp
xor
mov
jnp
jmp
lock
mov
ss
mov
les
cdq
push
cmp
jmp
out
or
xchg
fwait
sub
cs
and
or
mov
fmul
mov
fistp
ror
outs
and
mov
fidiv
xlat
test
push
imul
mov
mov
sub
add
and
out
push
dec
jg
aad
inc
inc
ds
imul
pop
push
mov
mov
cwde
pop
dec
icebp
(bad)
mov
inc
loope
sti
jne
and
push
inc
es
and
mov
sar
xlat
lahf
enter
jae
fwait
sub
sub
retf
das
dec
adc
add
sbb
js
mov
mov
sti
shr
mov
fild
xlat
adc
mov
fs
sbb
xor
mov
sahf
sbb
lods
in
repnz
dec
push
inc
cli
jno
hlt
and
ret
out
sub
pop
in
stos
mov
ja
dec
jmp
stos
pop
jmp
sahf
into
(bad)
xor
pop
lds
push
out
imul
dec
adc
dec
(bad)
mov
xor
and
aam
dec
pop
mov
test
ror
or
pop
push
imul
sub
mov
xchg
inc
cmp
stos
sub
mov
adc
pop
xor
or
(bad)
in
div
ficomp
mov
xchg
daa
loop
retf
dec
add
xlat
pop
(bad)
in
stc
pushf
jp
pop
ins
dec
clc
inc
lods
sahf
sbb
pop
cli
pop
jb
dec
leave
fist
lds
mov
cld
stc
inc
clc
call
int3
test
fst
stos
scas
sub
jg
jno
mov
jmp
lds
loopne
mov
pop
(bad)
push
jl
out
jle
cmp
lea
add
psrlw
mov
mov
scas
mov
xor
fld
or
ret
cmps
loopne
addr16
jmp
stos
sbb
mov
sub
(bad)
leave
mov
mov
mov
mov
add
and
push
jge
fdiv
or
sbb
xor
and
cwde
int
xor
sub
mov
(bad)
adc
dec
outs
adc
(bad)
stc
mov
inc
xchg
push
mov
call
fstp
adc
mov
out
jmp
xchg
jb
jle
std
int
loopne
add
xchg
repz
push
add
sbb
clc
mov
or
loope
cs
push
add
mov
pop
jmp
xchg
sbb
mov
push
xchg
adc
mov
cwde
dec
sub
lods
ror
cmp
ins
cld
movs
xor
in
push
sahf
popa
add
retf
push
sti
mov
sbb
xor
mov
push
dec
loop
call
sub
xchg
add
mov
jmp
mov
cdq
jecxz
xor
in
dec
inc
gs
pop
scas
test
or
ja
lahf
shl
in
hlt
mov
imul
cmp
pop
das
inc
jo
mov
ja
mov
call
call
in
inc
mov
sub
jecxz
das
xchg
cmps
cs
jl
adc
jg
ja
pop
sub
dec
call
sbb
jg
and
adc
(bad)
mov
xor
shr
stos
sbb
shr
push
out
aas
or
arpl
or
push
aad
out
(bad)
jmp
push
data16
scas
dec
loop
rcl
sub
loopne
pop
dec
mov
iret
cmp
add
gs
in
xchg
aad
retf
sbb
imul
(bad)
outs
mul
(bad)
lds
mov
aad
das
dec
movs
pop
sbb
jmp
mov
(bad)
bnd
mov
or
popa
cli
into
ja
loopne
sub
mov
xchg
ins
inc
or
bound
nop
mov
nop
int3
or
test
mov
add
or
jnp
cwde
std
xchg
call
pop
jmp
cmp
jo
std
and
push
cmc
cli
call
(bad)
aam
into
jnp
add
xchg
push
mov
or
inc
test
(bad)
outs
mov
daa
xor
lock
cmp
sbb
xor
pop
out
or
xor
lods
xchg
mov
out
sar
icebp
xor
test
mov
dec
addr16
adc
test
jg
jb
pop
add
imul
and
xor
ds
ret
das
or
pop
push
and
stc
int
sar
jmp
ja
jle
or
pop
fcmovnbe
sbb
add
in
pushf
(bad)
xchg
sbb
jecxz
bound
cmps
add
in
mov
sbb
cmc
in
popa
clc
or
mov
jno
in
mov
mov
arpl
inc
mov
pop
mov
outs
ds
or
xchg
mov
pop
es
pop
add
mov
or
mov
or
sub
and
rcr
shr
xchg
jl
scas
imul
frstor
sbb
mov
and
(bad)
aad
add
bound
cmp
jb
popa
dec
xlat
sub
xchg
inc
xor
inc
sub
mov
loop
cdq
and
cli
int
std
sbb
ss
out
push
mov
test
pop
out
popf
les
mov
jg
add
inc
ror
add
or
xor
add
sub
icebp
push
outs
mov
jnp
xor
(bad)
or
jmp
xor
lea
gs
cmp
movs
jo
fadd
sti
cmp
jmp
ins
inc
and
scas
pop
in
iret
mov
out
jo
add
out
dec
inc
aaa
jb
push
leave
mov
aas
inc
scas
lea
test
imul
pop
or
push
adc
pop
bound
sahf
fbstp
mov
jo
adc
mov
pop
repz
xchg
cli
fild
lds
mov
lahf
adc
push
es
shl
lahf
xchg
cs
movs
jmp
xor
mov
sub
outs
rol
push
dec
data16
push
push
adc
loop
and
sbb
loopne
jl
xchg
pushf
inc
les
pop
pop
lahf
lods
mov
(bad)
rcr
jl
in
sub
(bad)
js
and
pop
adc
jle
ins
mov
add
fs
lea
ficom
push
or
shl
xor
addr16
loope
jbe
push
hlt
mov
adc
idiv
pop
gs
aad
mov
inc
dec
ja
jo
lahf
push
sub
xchg
arpl
push
ret
inc
fisub
fisttp
mov
dec
xor
mov
ja
add
cmp
pop
mov
loop
cmp
jbe
sub
mul
pcmpeqw
pop
or
mov
mov
jb
(bad)
jge
in
pop
popa
push
push
dec
pushf
bswap
ins
int3
xchg
pop
adc
fwait
cmp
xor
xchg
bnd
in
sbb
ja
out
lods
mov
sbb
outs
cmp
ror
(bad)
cdq
jp
add
mov
push
dec
ror
push
out
stos
js
ds
nop
push
pop
add
test
adc
gs
ret
cmp
mov
cmp
(bad)
movs
scas
pusha
push
fld
scas
push
mov
jl
retf
in
imul
imul
movs
gs
ja
jbe
ja
hlt
test
addr16
jmp
adc
sub
bound
call
mov
xor
xchg
sahf
sub
mov
or
mov
mov
in
hlt
and
adc
fstp
outs
dec
jmp
jp
adc
cld
and
repz
dec
fwait
sbb
cmp
xchg
mov
fwait
or
fsub
mov
fidiv
xchg
sub
mov
jecxz
push
fisttp
push
sbb
into
gs
stc
cmps
sar
out
pop
pop
fld
cli
fdiv
or
daa
shr
cmp
cwde
xor
mov
jp
movs
and
pop
into
fdivr
punpcklwd
les
in
or
mov
ins
stos
retf
xor
mov
jp
jecxz
inc
dec
fsub
mov
xchg
xor
sub
stos
dec
(bad)
or
es
inc
shr
je
adc
xchg
mov
cli
jne
out
jae
popf
aas
call
cmp
outs
sbb
(bad)
mov
mov
xor
fwait
mov
adc
outs
mov
dec
aas
sbb
cmp
retf
enter
and
daa
inc
jecxz
adc
ret
jle
pop
pop
out
leave
in
cs
mov
lea
pop
fimul
out
retf
mov
mov
jo
fs
or
inc
in
js
inc
dec
push
pop
or
outs
mov
mov
dec
or
cmp
lahf
lea
popf
and
scas
stc
ins
in
cmp
fisttp
jae
mov
push
xor
call
(bad)
jno
and
mov
mov
pop
popf
pop
(bad)
clc
cmp
push
pushf
data16
je
addr16
jmp
aad
adc
ret
jg
pop
cwde
in
adc
adc
push
(bad)
pop
add
icebp
test
lds
add
pushf
ds
fdiv
clc
int3
sbb
pop
mov
test
push
mov
and
jno
clc
out
(bad)
mov
sub
add
scas
sub
jns
stos
scas
jl
fidiv
(bad)
and
mov
dec
std
sub
into
sub
test
add
push
aam
jmp
js
inc
outs
cmp
in
das
popa
mov
xor
movs
cld
xor
xchg
jmp
jbe
pop
icebp
inc
jp
jle
mov
cmp
jge
shl
sub
jmp
in
das
pop
jg
ins
mov
jnp
lds
and
adc
jo
or
loop
cmp
iret
sar
sub
adc
jle
and
cmp
inc
outs
adc
imul
test
imul
ud2
sub
pusha
mov
daa
test
popf
popf
pop
scas
xor
xor
ja
mov
adc
xor
jle
and
jns
xlat
adc
pop
pop
pop
popf
cmps
pop
loop
das
fwait
mov
lock
stos
out
mov
out
mov
jg
or
sar
mov
sub
sar
pop
pop
cmp
mov
mov
(bad)
aas
repnz
aas
adc
mov
add
call
(bad)
jae
mov
push
xchg
cmp
imul
dec
repnz
mov
sbb
push
sbb
(bad)
jae
jb
mov
jbe
sub
push
sub
scas
xor
cli
and
mov
and
mov
push
sbb
xor
pop
(bad)
(bad)
neg
sbb
push
mov
faddp
outs
mov
call
mov
or
lods
add
imul
push
out
push
daa
cld
aad
movs
fdivp
rcl
repz
je
in
pop
addr16
ins
sbb
es
cwde
shl
jmp
div
mov
and
call
shr
fcomp
sub
test
sbb
add
jge
lea
pop
jae
pop
icebp
fld
call
jle
xor
test
jle
in
stc
inc
jnp
daa
dec
pop
mov
jp
jae
(bad)
leave
gs
lods
retf
in
sub
fwait
pusha
ins
jl
or
cmps
rcl
int3
lahf
and
dec
inc
cmp
and
test
and
std
sbb
enter
loop
adc
push
(bad)
popa
ins
rcr
and
sti
cmp
jmp
mov
test
add
ins
jae
loopne
or
mov
stos
xchg
and
(bad)
loope
or
and
outs
pop
xor
jmp
jl
sub
and
dec
xor
jmp
xor
add
inc
js
jle
ret
(bad)
jmp
pop
std
in
push
mov
sbb
mov
mov
cmc
jge
sbb
mov
push
outs
xchg
daa
push
adc
mov
repz
leave
inc
and
fistp
hlt
jmp
or
in
loopne
and
dec
cmc
lds
pop
add
dec
or
dec
mov
adc
ror
inc
iret
out
pop
in
cmp
out
mov
dec
jbe
push
xchg
pop
xor
shl
in
inc
add
push
mov
pop
jne
pushf
(bad)
stos
fbld
(bad)
cmps
pop
cmps
mov
sbb
jp
daa
push
or
add
popf
je
aad
inc
outs
in
and
(bad)
in
outs
lock
aad
fucomi
or
cmp
cmps
mov
jmp
daa
adc
push
jg
cmp
ja
xor
into
inc
add
pop
xchg
jl
call
je
sub
jae
daa
shl
icebp
lock
(bad)
bound
mov
jg
xor
pop
jecxz
out
push
enter
pushf
call
lods
or
xchg
lock
or
addr16
push
or
dec
imul
les
movs
pop
test
xchg
jp
dec
pop
xchg
adc
mov
fdivr
jge
sahf
mov
iret
push
xor
(bad)
cli
sub
int3
or
out
stos
repnz
aaa
lds
mov
or
mov
cli
or
mov
stos
(bad)
push
in
arpl
cmc
xor
(bad)
mov
popf
mov
mov
cmp
iret
aad
and
dec
imul
cmc
jae
sbb
and
in
add
dec
push
add
dec
cmc
cmp
jecxz
mov
inc
nop
xlat
call
mov
mov
pop
js
mov
outs
push
icebp
xor
push
fisttp
xchg
sbb
sub
in
push
mov
sub
in
cmp
adc
lahf
cmp
sbb
pop
and
push
ins
cmps
loope
movs
xor
(bad)
jns
xchg
fiadd
loope
aam
xchg
dec
stos
inc
jae
dec
sbb
cmp
add
mov
sahf
call
pop
add
jl
mov
movs
in
lock
div
adc
mov
cmp
std
fcomp
xchg
add
add
bound
adc
and
rol
xor
test
in
sub
jb
jmp
dec
data16
int
sub
mov
sub
mov
push
scas
sub
fbld
cwde
test
fcom
push
call
jl
jbe
inc
mov
mov
fcomi
jg
cli
cmps
mov
in
pop
cmp
pop
outs
dec
leave
test
nop
(bad)
popf
aaa
jnp
ror
and
pop
fimul
jo
jmp
mov
cmps
ret
adc
or
cmp
rcr
mov
test
movs
(bad)
cmc
jne
in
dec
call
or
cmps
jge
pop
mov
xor
or
shl
push
nop
loope
out
dec
sbb
ffreep
inc
push
pop
dec
mov
xor
pop
mov
out
xchg
jg
jl
imul
cdq
ins
outs
mov
pop
cmp
stc
into
hlt
repnz
mov
repnz
inc
xchg
mov
inc
pop
pop
and
cmps
jmp
cmp
retf
aad
lods
sub
jp
aas
sub
cmps
inc
or
mov
shl
adc
retf
ret
and
test
pop
stos
and
int3
je
mov
push
(bad)
mov
(bad)
sub
jle
cmp
pop
push
xor
call
sbb
stos
cmp
imul
scas
and
div
pushf
cmp
inc
mov
sub
cmp
popa
aam
and
ror
add
js
adc
call
(bad)
outs
in
dec
sub
cli
movs
aaa
in
test
or
mov
add
test
dec
add
mov
pop
push
mov
push
adc
cmp
scas
(bad)
mov
cmp
pop
call
mov
(bad)
(bad)
adc
fadd
fmul
pop
(bad)
out
test
daa
pop
stos
(bad)
push
(bad)
mov
push
stc
popf
loop
cs
add
mov
icebp
sti
fadd
icebp
lods
mov
daa
add
fwait
jbe
imul
xor
xchg
mov
sar
pushf
push
sub
imul
dec
mov
in
fmul
rol
inc
sbb
fild
add
ins
mov
sti
out
and
mov
or
fisttp
inc
imul
mov
push
sti
(bad)
cdq
test
(bad)
jns
cmp
in
cs
add
mov
jle
add
mov
sub
or
xchg
movs
mov
int3
mov
jb
js
inc
rcl
sbb
out
dec
add
mov
push
mov
add
xor
push
and
aas
test
adc
movs
lahf
mov
xor
lds
ror
mov
jne
pop
popf
mov
dec
aaa
fnstenv
sub
push
add
inc
and
xchg
les
fnstsw
xchg
cmp
mov
adc
outs
dec
jae
nop
cmp
imul
cmp
iret
ins
imul
shr
pop
pop
in
data16
lahf
(bad)
lods
jns
ins
dec
mov
pop
in
sub
call
js
sub
mov
mov
iret
mov
mov
test
and
ficomp
repnz
leave
pop
daa
dec
sar
mov
imul
ins
xchg
jge
test
jnp
call
icebp
mov
enter
adc
(bad)
cmps
jns
outs
sub
mov
(bad)
es
test
and
call
int
icebp
retf
sub
add
push
retf
repnz
push
pop
test
sahf
ins
mov
movs
push
mov
in
int3
pop
gs
arpl
mov
mov
mov
pop
cmp
mov
std
clc
push
loopne
or
rcl
adc
ins
pusha
call
jmp
mov
fisubr
sub
call
test
xchg
or
sbb
jge
push
add
dec
enter
cmps
push
xchg
pop
adc
xchg
out
and
mov
lock
ds
loop
mov
or
stc
pop
mov
dec
mov
test
mov
cmp
pop
xchg
mov
dec
dec
xchg
test
add
jo
shl
xchg
mov
mov
call
inc
jne
cwde
(bad)
rcr
rcr
and
mov
mov
jmp
inc
mov
int3
mov
inc
outs
and
inc
jp
push
push
sub
push
jmp
cmp
mov
inc
shr
inc
ds
test
icebp
shl
jb
sub
add
xchg
mov
icebp
pop
push
shl
out
or
sbb
inc
sub
cmp
xor
jnp
sbb
cmps
dec
push
arpl
scas
std
lahf
jnp
dec
cwde
cmp
dec
mov
jg
iret
xchg
xor
xchg
in
in
sub
add
int3
push
and
add
jno
mov
std
or
retf
mov
sbb
xlat
(bad)
fisub
pop
inc
or
pop
in
push
int3
test
mov
das
mov
stos
and
aam
stc
pop
inc
scas
leave
mov
fwait
test
jno
or
jbe
sub
outs
fwait
inc
imul
sub
mov
push
jns
lahf
mov
retf
movs
adc
and
mov
mov
push
pushf
mov
test
xchg
icebp
and
test
mov
int
imul
movs
retf
je
cmc
add
xor
les
in
jmp
pop
jmp
xor
ret
jle
and
add
nop
push
mov
stc
test
push
movs
aas
jmp
cmps
jl
and
jge
(bad)
push
push
jnp
cmp
pop
sbb
call
push
pop
js
into
popf
movs
lds
push
outs
jmp
mov
lods
sahf
mov
out
mov
jnp
xlat
loope
fadd
adc
lock
mov
xor
sbb
or
or
mov
inc
lds
push
not
xlat
pop
xchg
dec
mov
xor
(bad)
lods
push
mov
stos
push
inc
ds
jo
popf
cld
je
hlt
pop
enter
xchg
stos
ret
pusha
xchg
xor
call
mov
and
sbb
jo
je
loopne
pop
jmp
arpl
cmp
xchg
pop
inc
pop
fdiv
adc
lods
test
cmp
outs
les
fmul
dec
sub
repz
push
xchg
xor
loop
repz
stc
repz
mov
jp
or
dec
call
pop
imul
mov
movs
cmp
(bad)
pop
cmps
in
inc
pop
sub
lock
lock
outs
xor
push
sbb
movs
push
test
adc
das
jge
jb
xor
aam
std
cmp
inc
or
das
xchg
or
push
jmp
test
push
mov
jae
loop
ret
and
cmps
lahf
mov
in
mov
xor
pop
test
jb
mov
in
ins
clc
loop
ror
rol
cmc
mov
mov
mov
cdq
mov
xchg
int
add
and
mov
xchg
mov
sahf
mov
and
push
cmp
mov
mov
push
mov
push
cmps
sub
aas
xchg
add
sar
js
sbb
pop
jbe
xor
push
loop
pop
and
fiadd
sub
leave
jp
jp
rcr
pop
js
mov
push
shl
sti
in
lock
push
pop
hlt
cmp
out
clc
and
pop
or
pusha
mov
xchg
test
dec
mov
jo
xchg
mov
mov
inc
sub
(bad)
and
mov
les
jg
pop
shl
cmp
mov
(bad)
mov
lods
xchg
adc
and
into
jecxz
add
repz
movs
dec
mov
pop
in
call
jg
outs
pop
pop
icebp
shl
in
adc
xchg
add
mov
mov
aas
xchg
(bad)
fucomi
add
or
cs
pop
mov
or
add
pop
scas
or
lods
adc
add
call
lahf
pop
mov
or
call
mov
in
mov
xor
push
mov
mov
pop
mov
pop
fadd
bound
rol
pusha
or
pop
out
(bad)
mov
movs
xchg
loope
mov
cmp
arpl
outs
and
(bad)
out
jno
das
int
xchg
or
add
out
mov
or
xor
fidiv
ror
mov
xchg
push
pop
mov
push
or
out
ret
pop
mov
pop
push
gs
and
or
push
lods
jecxz
mov
xor
mov
into
xchg
and
loopne
mov
mov
test
(bad)
ins
push
add
in
scas
and
es
mov
fsub
stos
lea
movs
(bad)
shr
xor
sti
arpl
push
popf
jge
mov
bnd
mov
push
add
scas
push
sub
(bad)
or
mov
and
ret
cld
std
les
(bad)
mov
mov
mov
in
xor
xchg
add
adc
inc
sbb
mov
add
addr16
outs
adc
dec
jle
out
lds
sti
stos
mov
inc
push
test
iret
push
imul
lods
xchg
test
out
xchg
sbb
das
pop
je
sub
and
cwde
dec
inc
xor
aas
pop
cmps
or
mov
mov
xlat
aad
sbb
cmp
loope
mov
bsf
push
in
cmp
mov
out
inc
(bad)
mov
ins
in
das
cmp
mov
sbb
lock
mov
xchg
pop
and
ss
retf
out
mov
sbb
xchg
mov
push
mov
daa
pop
call
mov
push
nop
pop
push
push
(bad)
dec
lods
inc
shl
xchg
mov
xor
mov
inc
sub
inc
outs
call
jl
aaa
push
loope
cmp
xchg
mov
fsub
movs
hlt
(bad)
test
pop
and
daa
inc
loop
adc
mov
lds
nop
mov
push
loope
(bad)
push
mov
loop
repz
xor
je
iret
add
mov
xlat
repnz
jo
jb
and
loope
retf
dec
or
push
push
or
push
shl
repz
sbb
lahf
push
lods
adc
mov
sub
daa
mov
in
sbb
out
push
iret
dec
not
hlt
pcmpeqw
(bad)
and
repz
ret
cmp
sub
adc
mov
loop
bound
loopne
push
pop
leave
retf
mov
clc
cmps
or
jnp
sbb
aaa
xor
outs
shl
sub
sbb
in
cmp
out
mov
xor
pop
pop
sbb
push
test
lods
stos
lds
test
and
retf
add
jne
das
std
xchg
jae
inc
push
add
movs
dec
shr
jne
jbe
mov
or
in
and
add
lods
cmp
or
pushf
inc
scas
adc
sub
mov
push
es
push
rcr
or
or
das
pop
xchg
and
or
or
or
das
sub
sbb
and
inc
sub
sbb
bound
in
cmp
mov
jl
hlt
fdivr
jmp
rol
xlat
mov
cmp
mov
xlat
fdiv
test
sbb
enter
out
jge
pop
sbb
xlat
push
pusha
sub
test
lods
add
add
mov
sbb
push
loope
inc
push
push
jl
pop
scas
xchg
mov
data16
cmc
sar
add
das
lds
jle
jecxz
(bad)
xor
popf
mov
rcr
div
(bad)
aam
stos
xchg
jge
in
clc
mov
call
(bad)
fisubr
stos
cdq
ins
addr16
outs
hlt
aad
xor
arpl
iret
add
fcomp
inc
mov
fadd
fs
addr16
pop
inc
lock
(bad)
sub
das
sub
pop
and
push
mov
js
jg
cmp
pop
xchg
data16
cmp
xor
lahf
jbe
jp
mov
es
inc
push
xor
cmc
(bad)
jg
cmp
out
mov
cmp
scas
dec
dec
retf
push
jge
xor
pop
and
cmp
loopne
shl
and
call
call
cwde
ds
icebp
xchg
cli
and
mov
pop
mov
loopne
aas
push
(bad)
fsincos
jb
xor
imul
lds
pop
and
dec
out
add
retf
mov
ret
out
jle
mov
shl
gs
adc
or
pop
sbb
push
and
and
ret
adc
push
cwde
js
adc
cdq
jne
repnz
sub
lea
adc
or
test
fild
les
out
ret
shl
push
xchg
test
jmp
mov
mov
loop
(bad)
daa
jns
cld
pop
dec
fsub
add
cmps
(bad)
push
(bad)
lds
and
or
jno
dec
cmp
xor
push
and
nop
or
imul
sbb
push
shl
dec
xchg
mov
push
or
mov
out
lods
lahf
xor
repz
add
sub
push
daa
outs
fwait
ret
pop
in
mov
jp
inc
retf
dec
xchg
adc
(bad)
mov
gs
jno
pusha
jp
test
mov
adc
xlat
xor
push
and
cmc
ja
adc
sbb
push
data16
lods
arpl
push
lods
xlat
hlt
dec
and
mov
dec
pop
and
jns
test
jle
fisttp
mov
adc
sbb
cmc
xchg
mov
mov
inc
inc
(bad)
mov
data16
fldcw
xor
les
xor
test
mov
sbb
xchg
jb
ins
or
(bad)
ins
imul
ror
push
leave
jmp
enter
or
aaa
sar
push
push
adc
push
adc
(bad)
add
nop
cli
and
movs
pushf
inc
cmp
sub
dec
cmp
jle
shl
mov
sub
sahf
jl
(bad)
shl
and
jmp
fcmovnbe
adc
in
lods
jp
js
(bad)
cmp
cmps
dec
pop
mov
setbe
cmc
dec
dec
ds
or
mov
rcr
xchg
mov
ins
imul
pusha
inc
pop
out
push
inc
pop
xchg
push
jb
pop
aaa
es
xor
shr
loopne
xchg
mov
add
fmul
or
or
and
aad
xchg
mov
mov
rcl
push
push
loope
jmp
pop
push
cmp
addr16
rol
dec
adc
hlt
leave
mov
mov
mov
push
fadd
loopne
test
add
dec
jle
pop
std
ins
cmp
or
cdq
inc
fdecstp
aam
outs
loopne
mov
lock
and
push
add
mov
push
out
or
add
dec
sub
xor
data16
in
xor
cmps
(bad)
mov
pop
add
cmp
(bad)
sub
sbb
out
jb
and
outs
mov
int
pop
or
in
iret
lods
push
test
aas
mov
mov
call
ins
lea
sub
stc
ret
out
les
push
push
sbb
jmp
jne
lods
cmps
jle
dec
xchg
xchg
ffreep
xor
popf
mov
mov
lods
mov
cmp
add
stos
mov
int
jo
retf
test
fs
ret
xchg
fwait
shl
int3
xchg
mov
pushf
int
mov
imul
rol
adc
hlt
aas
stos
push
(bad)
push
shr
imul
test
dec
neg
push
fidiv
push
std
inc
shr
rcl
out
jbe
and
in
jp
push
sub
fs
ins
shl
jae
jns
mov
dec
sub
unpcklps
and
test
inc
mov
push
sub
adc
jbe
pop
push
adc
mov
dec
mov
ds
jae
aam
imul
loope
and
pop
cdq
test
lods
int3
xor
sub
jge
fistp
or
dec
jmp
test
sar
mov
sub
ja
mov
hlt
mov
lods
shl
jne
sbb
inc
test
jmp
nop
mov
or
push
pop
xchg
lahf
repnz
aam
sbb
mov
push
mov
inc
add
dec
push
jno
div
enter
xchg
mov
mov
leave
lds
sbb
add
xchg
add
xor
dec
xor
loop
into
std
adc
xor
adc
scas
pop
and
jecxz
pushf
fisubr
push
cmp
test
out
xchg
mov
xlat
stos
mov
rol
lods
push
sbb
xchg
fsubr
mov
retf
mov
and
add
xor
dec
(bad)
jp
dec
fwait
movs
setb
gs
add
mov
jg
lahf
and
fild
loope
dec
add
clc
ins
enter
sbb
xor
cmp
push
je
xchg
fwait
dec
mul
cmp
jmp
mov
sub
dec
jnp
fsub
inc
fist
mov
cmp
jne
push
sbb
sub
and
adc
jbe
cmps
dec
dec
push
data16
jb
and
jecxz
and
mov
xchg
shr
inc
shl
sub
(bad)
mov
popf
repnz
dec
jmp
stos
pop
loope
dec
jg
mov
aaa
or
dec
repnz
lock
test
and
inc
stos
jmp
ret
test
jle
add
cli
dec
pop
into
inc
ret
(bad)
outs
lock
iret
jb
mov
xchg
xchg
mov
xchg
mov
in
(bad)
xor
mov
int3
and
jle
fidiv
sar
(bad)
mov
adc
and
jb
sub
add
adc
jmp
shr
dec
mov
pop
mov
fs
xchg
jp
xlat
mov
lock
sbb
inc
push
mov
test
arpl
jle
ss
leave
cwde
mov
nop
mov
jmp
arpl
mov
ins
mov
or
idiv
adc
xor
pop
lds
call
sub
pop
xchg
push
ss
mov
add
je
arpl
and
xor
jo
das
jp
jp
je
out
outs
push
arpl
add
fmul
gs
shl
rcl
sub
(bad)
ins
fisubr
pop
mov
mov
and
popf
rcl
cs
aad
sbb
push
xchg
je
popf
cmp
cmp
pop
std
dec
sar
sub
pop
clc
(bad)
inc
xlat
sbb
iret
xor
leave
and
dec
fcmovnbe
mov
inc
(bad)
xlat
or
sub
ja
lds
inc
sbb
pop
repnz
ret
jns
std
dec
hlt
clc
mov
jno
and
nop
jl
mov
adc
mov
gs
call
xor
mov
loopne
mov
xor
mov
xchg
in
ins
int3
stos
adc
sub
sub
fsubr
jbe
dec
in
push
enter
mov
loopne
dec
fdivr
jns
(bad)
out
ja
add
rol
retf
mov
div
nop
or
aad
in
lock
jge
mov
ins
mov
neg
push
(bad)
jle
xor
out
push
lods
lahf
inc
ds
or
adc
push
inc
xor
pop
mov
adc
dec
add
enter
sbb
push
movs
je
stc
ret
out
mov
and
and
enter
and
pop
ret
pop
xchg
cli
cwde
dec
sub
call
push
pop
imul
jbe
iret
popa
jle
push
(bad)
add
xchg
push
dec
dec
jp
mov
test
mov
and
fisubr
fcmovbe
pop
jno
in
aaa
jmp
enter
jo
es
sbb
jbe
fdivr
ins
push
cmps
inc
jmp
push
jge
stos
test
arpl
ins
hlt
mov
jns
push
mov
sahf
fsubp
ret
push
lods
aas
and
sub
xchg
mov
add
pusha
into
adc
cli
dec
repz
mov
call
push
ret
push
mov
pop
loopne
sbb
jne
sbb
jl
pop
fidiv
push
jg
call
stos
sti
pop
gs
repnz
xor
scas
add
push
xchg
push
xor
sub
adc
mov
jmp
push
repnz
push
mov
retf
pop
jmp
dec
lods
shl
or
stc
test
sti
pop
sti
gs
xchg
sbb
arpl
retf
lods
popa
lock
fsubr
sti
mov
or
cdq
sti
pop
jno
mov
inc
cmps
mov
dec
repnz
xchg
mov
mov
cmp
sbb
mov
jns
stos
pop
add
lods
sub
into
scas
repz
(bad)
iret
xor
ja
iret
xchg
jle
retf
push
sbb
sbb
loope
add
mov
push
pop
mov
push
mov
push
out
shr
pop
jno
push
sahf
mov
es
int
and
test
ins
pop
fstp
push
cmps
mov
cmp
cmp
jmp
sbb
enter
dec
mov
jns
loope
add
adc
les
adc
adc
push
mov
test
neg
test
jp
dec
scas
popf
pushf
or
jo
fdivr
bound
scas
call
mov
ret
jae
mov
inc
mov
aas
scas
pop
imul
in
into
popa
and
and
dec
pop
loop
sti
pusha
pop
inc
and
scas
(bad)
jo
push
retf
mov
jecxz
mov
pop
cmps
inc
cld
mov
ins
push
push
add
test
mov
iret
pusha
dec
ins
inc
jne
lahf
mov
sub
mov
sti
lods
cld
arpl
sub
(bad)
fs
jb
jns
(bad)
push
ret
add
pop
or
jo
into
jno
(bad)
mov
repz
push
stos
bound
adc
pop
fcomp
and
leave
pop
fsub
xor
sbb
jge
inc
push
mov
ss
inc
adc
mov
ret
and
push
fisttp
xchg
cmp
mov
out
cwde
ja
inc
xlat
aas
daa
cmp
sar
inc
jp
push
sbb
int3
ja
mov
jg
nop
clc
pop
pop
mov
icebp
adc
sbb
loop
retf
sub
pop
clc
and
mov
cmp
ror
movs
fucomp
fcmovbe
shl
dec
sbb
leave
sbb
jge
mov
mov
push
stos
jle
outs
and
inc
push
xchg
ja
push
xor
clc
mul
call
fwait
pop
lods
cmp
pop
sbb
push
inc
mov
retf
xor
test
test
retf
int3
cwde
das
push
(bad)
pushf
movs
movs
jle
gs
ds
pusha
aaa
fistp
adc
lahf
adc
sbb
mov
arpl
push
loopne
xor
stos
in
mov
shl
push
loope
loop
or
dec
pop
jg
mov
loop
ja
adc
adc
adc
jmp
add
or
(bad)
ds
jbe
and
out
ss
pop
sar
sti
xor
xor
cwde
xchg
sti
(bad)
je
mov
fsubrp
cmps
adc
adc
sbb
push
shl
mov
cmp
mov
cmp
inc
cmp
popa
daa
xchg
(bad)
and
and
sub
je
push
xchg
jp
cmps
call
into
iret
sbb
movs
ficomp
pop
push
cwde
pop
loope
mov
xchg
sbb
out
outs
es
and
xor
mov
pop
inc
mov
mov
cmp
and
pop
xchg
cmp
xchg
fs
in
pop
dec
popf
jg
iret
add
xchg
call
push
mov
xchg
lods
or
mov
retf
or
dec
adc
mov
mov
push
retf
push
jp
daa
lea
push
sub
sti
in
xor
mov
out
jae
aas
push
mov
jo
dec
adc
mov
shl
and
cmp
sbb
mov
ins
loope
xor
ja
xor
in
cmp
pop
shl
mov
ins
sahf
cld
dec
and
mov
jns
xchg
ror
rcl
jle
mov
call
mov
pop
js
sub
daa
or
popa
mov
jb
cmp
pop
movs
jo
jae
or
rol
push
jne
sub
mov
nop
rol
daa
(bad)
mov
jecxz
sub
gs
retf
mov
inc
rol
loop
repnz
mov
icebp
aas
dec
sbb
add
fld
mov
pop
pusha
xchg
imul
ficomp
cli
adc
rcr
scas
lods
xchg
mov
loopne
add
dec
call
xor
inc
ss
add
adc
dec
cld
jp
in
pop
pop
pop
sbb
or
push
jmp
popa
int
xor
nop
xchg
(bad)
test
sub
ror
iret
jbe
lea
pop
inc
mov
cdq
ret
(bad)
dec
sbb
outs
xor
mov
adc
sti
rdtsc
repnz
mov
push
je
and
out
loope
pushw
or
sub
or
sub
inc
ds
das
mov
pop
inc
inc
rcl
bound
mov
movs
adc
cmp
xchg
xchg
mov
mov
outs
repnz
lock
ds
(bad)
jbe
ror
mov
test
inc
dec
fdiv
jno
mov
(bad)
arpl
imul
neg
jmp
or
fwait
jmp
xchg
ins
inc
mov
jge
push
or
outs
into
jne
push
add
inc
jg
sbb
or
fs
in
xchg
in
movs
inc
cmp
inc
cmp
scas
fs
loopne
nop
dec
mov
call
sbb
or
scas
push
mov
jo
pop
cmc
rcl
add
dec
or
or
stos
mov
fcomi
mov
fnstenv
imul
rcl
(bad)
and
xor
aaa
lea
repnz
fidivr
cmp
repz
lods
jecxz
cmps
pushw
pop
cmps
and
fsubr
lea
add
(bad)
aaa
pop
and
(bad)
jmp
adc
xchg
xor
in
mov
and
sub
adc
mov
xlat
retf
test
inc
xchg
push
loopne
pop
into
cmp
cmps
(bad)
out
cmp
and
xchg
jl
push
jbe
fistp
pop
add
xchg
push
dec
into
cdq
xlat
inc
sub
sti
stos
inc
xor
cmps
sbb
int3
shl
leave
pop
mul
mov
ret
inc
mov
fnstsw
mov
push
mov
test
test
out
jg
sbb
adc
pop
xlat
and
mov
xor
mov
retf
inc
outs
cmp
jb
rol
gs
ja
lods
inc
(bad)
std
test
ins
xor
(bad)
cmp
mov
popa
gs
nop
dec
popa
gs
addr16
in
or
sahf
ror
sub
xchg
mov
mov
hlt
cmp
mov
mov
shl
push
xor
xchg
iret
sahf
jae
xchg
cdq
mov
(bad)
jmp
movs
popa
adc
scas
in
(bad)
xchg
fst
sbb
test
inc
xchg
fidivr
mul
sub
pop
aam
out
icebp
mov
arpl
mov
push
mov
pop
ja
sbb
mov
fimul
pop
or
jg
repnz
neg
lds
dec
sub
mov
or
mov
fsubr
fadd
sub
adc
pop
daa
lahf
pop
sbb
sbb
div
sub
jbe
push
pop
or
jmp
ds
jecxz
push
sbb
xor
gs
cld
push
repnz
in
ins
stos
sub
cmp
jbe
pop
(bad)
daa
pop
push
retf
addr16
popf
xchg
sbb
cmp
gs
jp
cmps
scas
aas
adc
sbb
in
icebp
xchg
pop
xor
mov
sub
dec
push
popa
push
mov
xchg
xchg
mov
sti
sbb
hlt
push
call
arpl
fs
jmp
std
sbb
xor
fchs
pop
mov
jb
fistp
or
fild
push
fcomp
retf
mov
into
jae
xor
ror
mov
jns
add
adc
imul
aam
dec
ja
mov
adc
push
fsub
jmp
or
inc
test
arpl
sub
shl
shl
xchg
fs
popf
inc
scas
xchg
sti
sbb
call
and
pop
dec
mov
arpl
cwde
cld
xor
test
jmp
out
call
jns
fldenv
(bad)
(bad)
xor
daa
or
aas
daa
cdq
lods
mov
jmp
push
jbe
nop
jecxz
push
mov
loope
pop
sbb
rcr
dec
fild
add
out
ret
push
pop
sub
push
int3
iret
sub
div
inc
loop
xor
call
lea
add
pushf
push
sub
popf
mov
jecxz
cld
icebp
in
and
sub
mov
sub
sub
xchg
ins
out
aad
retf
add
test
cmp
sub
in
fstp
test
mov
cmp
and
or
push
in
or
xchg
cwde
and
sbb
js
leave
mov
cmp
sbb
sar
ins
arpl
ret
scas
or
lods
mov
test
or
push
pushf
test
sbb
mov
repz
cs
fiadd
pop
loop
retf
ret
movs
adc
test
nop
fs
retf
sahf
cmp
jmp
(bad)
sub
adc
xor
fisub
out
mov
pop
push
and
cmp
inc
cld
hlt
push
jo
int3
scas
(bad)
pop
pop
(bad)
ror
adc
add
jnp
mov
cmp
stc
push
dec
push
fistp
and
push
xchg
cmc
push
mov
or
fstp
cmc
in
mov
or
jge
popa
sub
ret
dec
or
popa
fld
in
pop
out
lods
push
pop
arpl
pop
in
and
sbb
jnp
sahf
dec
mov
or
or
call
and
xor
sbb
in
cmp
mov
adc
fcomp
outs
inc
movs
and
stc
aaa
aaa
dec
mov
mov
mov
fwait
jne
inc
pop
sub
mov
sub
cmc
fild
inc
fcom
push
mov
pop
aad
mov
mov
xor
jecxz
xor
xchg
je
push
mov
xlat
and
and
xor
inc
cdq
push
std
out
inc
iret
clc
push
pusha
lods
jge
scas
cmp
loope
xchg
pop
jge
out
nop
out
iret
ret
jnp
dec
pop
jmp
(bad)
adc
pop
push
sahf
pop
jp
sub
jnp
adc
inc
mov
test
and
addr16
or
push
xchg
ss
fwait
idiv
int3
add
mov
dec
(bad)
rep
ret
xchg
dec
jae
xlat
sub
leave
mov
or
imul
dec
out
sub
cmps
dec
das
cmps
pop
cli
cmp
add
stc
xchg
push
mov
add
pop
ret
push
mov
rcl
test
test
inc
popf
push
imul
xchg
test
xchg
jb
cmp
or
jmp
test
out
scas
mov
xchg
mov
mov
xor
adc
xchg
jo
push
daa
jecxz
and
inc
and
push
clc
mov
mov
dec
std
gs
push
jmp
gs
xor
sub
jp
fdiv
test
adc
je
outs
cwde
mov
les
xor
outs
ins
cmc
mov
js
fistp
ret
retf
call
cmp
add
push
adc
mov
add
cwde
int
or
jge
in
mov
aad
xchg
pop
jne
dec
loopne
xor
js
pop
push
jmp
push
scas
mov
enter
cwde
imul
xchg
push
in
aam
inc
adc
inc
enter
sahf
mov
cmp
jl
and
pop
out
push
sbb
int
dec
pop
sar
cmp
xchg
inc
jns
add
add
jns
xor
imul
test
lds
mov
popa
(bad)
pop
lock
hlt
ret
fneni(8087
jo
ds
jne
push
xchg
push
and
fcmovbe
add
arpl
popf
mov
out
inc
mov
pop
popf
sar
cmc
jl
rcr
cdq
or
fist
lock
xchg
(bad)
aam
mov
mov
imul
out
fwait
sub
ins
fimul
push
lahf
movs
xchg
cmps
dec
not
inc
ret
dec
sbb
in
cwde
outs
adc
sar
and
and
sub
div
les
push
push
mov
dec
sti
inc
fs
sub
cmp
(bad)
lds
dec
(bad)
sub
lods
jns
mov
adc
ret
cmp
push
push
enter
arpl
mov
jecxz
ja
cmp
in
push
mov
mov
mov
ss
sbb
ret
js
and
fwait
and
or
push
out
or
jae
(bad)
repz
jecxz
dec
lods
mov
sar
jno
push
add
adc
out
xor
mov
inc
aas
retf
or
leave
mov
mov
shr
jp
jo
pop
cmc
std
adc
dec
fsubr
fcmovnu
xchg
aaa
xchg
inc
sti
cwde
(bad)
in
push
int
ds
movs
mul
jns
ins
test
mov
imul
xor
mov
add
adc
lahf
mov
mov
icebp
push
mov
xchg
mov
mov
test
sub
cmp
pop
xchg
enter
push
and
ss
sbb
iret
xcrypt-ecb
cmps
dec
inc
and
stos
fisttp
mov
in
out
push
mov
and
cwde
mov
retf
jo
adc
ins
pop
push
xor
outs
clc
pop
or
cmp
inc
retf
add
jl
xchg
hlt
or
sbb
movs
jbe
shr
mov
mov
je
lds
sahf
push
addr16
shr
int3
and
lock
in
neg
test
fs
inc
fxch
pusha
xchg
sub
mov
test
(bad)
enter
(bad)
pusha
xchg
inc
xchg
push
jnp
lods
or
dec
push
push
repz
lea
rcl
mov
mov
ret
cmc
and
(bad)
adc
outs
mov
mov
pop
pop
jmp
inc
mov
xchg
jo
pop
pop
(bad)
sub
pop
or
outs
iret
or
scas
sti
jne
pop
jg
sbb
fist
leave
popa
popa
out
xchg
rcr
fld
out
(bad)
fbstp
aas
cli
xchg
fisttp
movs
cwde
out
mov
icebp
cmc
mul
cmp
repnz
aad
cmp
outs
dec
xchg
scas
bound
or
push
imul
push
mov
add
fsub
clc
(bad)
aam
mov
adc
cmp
dec
mov
in
cmp
shr
retf
addr16
imul
sbb
mov
nop
sub
test
sti
in
or
add
stos
xchg
fwait
mov
and
outs
xor
pop
arpl
jbe
jmp
push
xlat
or
xor
cs
push
cld
movs
jmp
imul
jns
clc
fwait
retf
in
push
cmps
cld
outs
xor
jp
push
cs
outs
adc
mov
daa
inc
mov
shr
inc
movs
inc
ins
fwait
test
movs
jo
test
cmp
fmulp
lods
pop
xchg
fild
cmp
in
fadd
mov
add
mov
rcl
(bad)
mov
cmps
mov
mov
mov
or
cmp
data16
test
(bad)
popa
std
stos
fidiv
mov
mov
cld
scas
cmc
add
aas
inc
cli
cld
repnz
sahf
mov
xchg
adc
sbb
test
push
out
jae
lock
inc
aad
xchg
dec
push
and
or
xchg
and
xlat
sar
push
dec
lock
shr
test
sub
cmp
xor
cdq
cmp
jge
add
push
outs
ds
das
jae
adc
pop
jb
call
push
pushf
or
pop
push
pop
push
(bad)
jo
push
(bad)
cli
mov
int3
out
rcr
call
stos
stc
dec
xor
scas
outs
imul
push
mov
mov
rcl
jmp
push
in
movs
sbb
jbe
xor
movs
fimul
clc
mov
pop
das
addr16
mov
jg
jno
and
xchg
cs
sbb
push
or
addr16
add
inc
mov
push
xor
push
(bad)
(bad)
mul
jl
xchg
xlat
stos
mov
push
sti
in
hlt
bound
jp
push
mov
mov
hlt
xchg
(bad)
enter
add
rcl
daa
xor
jb
adc
cmp
jae
sbb
cmp
jnp
inc
sbb
and
imul
xor
aas
rol
xchg
(bad)
das
outs
mov
inc
nop
push
out
or
movs
cmp
loopne
inc
test
inc
inc
not
inc
xchg
add
into
sbb
mov
and
dec
sti
lods
push
mov
jle
jle
ins
xchg
xor
gs
pop
loop
fldcw
lds
sbb
test
aad
in
fsubr
xor
add
push
adc
pusha
aad
bound
loop
retf
into
fist
dec
adc
into
jmp
add
xchg
dec
inc
jg
dec
pop
push
lods
cmps
retf
xor
pop
das
inc
cmp
ja
adc
pushf
fdivr
dec
and
push
mov
(bad)
std
dec
pop
je
mov
and
sub
fisttp
xchg
cmps
das
scas
mov
pop
or
dec
xchg
mov
push
cmp
mov
xchg
mov
in
imul
int3
daa
repnz
js
pop
inc
leave
iret
ins
imul
stos
cli
ins
fsubr
(bad)
pop
mov
cdq
cmps
or
push
xchg
dec
outs
sub
es
inc
loop
call
ss
sbb
mov
jmp
jp
scas
aam
push
mov
je
xor
cdq
cmp
mov
sub
lahf
ins
mov
(bad)
xlat
pop
test
cmp
xor
rol
mov
sbb
cdq
inc
and
and
movs
out
or
data16
call
lods
xor
jno
fisttp
js
sbb
(bad)
jbe
hlt
jb
push
mov
mov
movnti
rol
iret
sahf
dec
ret
sbb
jle
jl
push
inc
outs
(bad)
fwait
gs
jns
mov
mov
jl
push
repz
mov
out
and
cvtps2pd
test
addr16
fisub
and
movs
out
call
push
push
cs
jo
js
outs
push
dec
scas
mov
jle
popf
(bad)
rol
cmps
ins
mov
stos
shl
dec
inc
and
push
call
repz
aad
lds
hlt
test
or
ret
sbb
frstor
mov
jno
lock
xlat
add
xor
pop
or
add
iret
jo
xchg
mov
fwait
xchg
push
xor
cmps
stos
jbe
call
sbb
sub
mov
scas
jns
fistp
ja
es
sbb
mov
out
aam
ins
xor
pop
fsubr
lock
cmps
or
aaa
push
out
scas
inc
shl
xor
and
fdivr
cmp
out
cs
sbb
popa
ds
cmp
icebp
cmp
fwait
in
mov
mov
dec
jns
jne
pop
xlat
test
std
test
mov
and
cmp
xchg
lods
xor
imul
(bad)
test
mov
retf
fs
mov
mov
xor
sub
mov
xor
sub
es
dec
sbb
ror
and
addr16
bound
cmp
adc
jp
inc
scas
or
mov
lahf
stos
mov
add
in
imul
jge
popf
cmc
(bad)
ficomp
mov
mov
jo
add
out
movs
pop
cmp
test
and
mov
imul
xchg
mov
pop
lds
stc
out
ficomp
sar
into
mov
mov
jecxz
sbb
inc
in
fnstenv
push
fistp
mov
lds
lods
std
inc
pop
pop
sbb
sbb
test
or
and
and
loopne
push
icebp
push
push
cwde
cmp
inc
out
add
mov
mov
icebp
pop
lea
sbb
sub
jp
mov
sahf
xlat
lods
dec
mov
jmp
cmp
(bad)
mov
sahf
aam
push
sbb
pop
inc
fiadd
mul
aam
outs
or
push
fcomp
cmp
(bad)
std
loop
cdq
iret
dec
xchg
mul
dec
pop
mov
call
xor
cmp
xchg
or
js
mov
sub
jae
jl
xchg
out
push
pop
dec
mov
inc
fmul
pop
rol
jmp
jmp
fs
data16
in
shl
aaa
data16
mov
js
mov
pop
add
sahf
stos
je
cmp
out
fwait
and
adc
push
sbb
jge
sbb
inc
xchg
clc
shl
int
cmps
adc
fbstp
fidivr
sbb
pop
dec
xor
adc
scas
lahf
push
xchg
jg
sbb
jecxz
mov
fcomp
ins
out
fst
lea
push
inc
outs
dec
mov
fs
ret
loopne
scas
push
xor
xchg
pop
inc
jo
retf
fwait
(bad)
les
ins
inc
popa
ja
inc
int3
xor
adc
add
pop
pop
movs
add
lea
sub
xchg
in
mov
outs
cmp
enter
adc
push
push
sbb
and
clc
data16
pushf
lea
(bad)
and
mov
(bad)
push
add
cmp
inc
and
mov
pusha
mov
ret
add
test
loop
leave
push
pushf
call
rcr
pushf
fld
and
and
jne
imul
je
outs
mov
mov
(bad)
popa
cmp
mov
mov
inc
or
repnz
lahf
inc
cdq
inc
fs
and
xor
cmp
aam
pop
jae
inc
jecxz
pop
xchg
repnz
stos
jg
in
cmp
(bad)
ret
into
pop
dec
mov
inc
xchg
dec
pop
sub
sub
shl
call
dec
push
imul
std
mov
ss
lahf
xchg
scas
enter
xchg
std
rcl
cld
push
cdq
lea
dec
pop
test
jbe
and
ror
mov
pmulhw
(bad)
pop
jmp
xor
push
int
sub
fstp
mov
pop
dec
jmp
cdq
sar
jnp
pop
dec
add
or
xchg
mov
sbb
das
cmps
adc
fisttp
fs
int3
ror
frstor
bound
int
dec
xchg
test
pop
or
ss
imul
inc
dec
gs
retf
jmp
shr
push
xchg
mov
inc
cmc
mov
and
jmp
push
jo
(bad)
sbb
test
lock
leave
mov
ftst
or
in
pop
movs
retf
sti
fs
leave
mov
lds
inc
add
xchg
jg
stos
cwde
loop
dec
les
sti
imul
pop
jnp
ds
out
cmp
add
and
push
dec
loope
and
loopne
cld
ins
ret
je
sahf
mov
dec
or
iret
cmp
in
lods
cmp
nop
and
dec
xor
mov
and
dec
lock
(bad)
out
js
mov
cmc
cmp
push
fstp
(bad)
call
(bad)
std
lahf
sbb
sahf
push
sysenter
pop
pop
test
stc
imul
mov
inc
pop
ret
dec
pop
xchg
inc
dec
or
inc
scas
xchg
out
lds
sbb
mov
cmp
xor
push
lea
jp
mov
out
lahf
mov
jge
or
jl
xchg
test
mov
pop
adc
clc
inc
xor
and
and
pop
xchg
mov
sti
push
pushf
idiv
dec
mov
dec
out
(bad)
repz
or
mov
inc
dec
xchg
ror
aad
xchg
out
gs
mov
xor
rol
pop
lahf
or
test
adc
out
shl
(bad)
fidivr
and
pop
sar
jg
loopne
push
in
or
add
repz
int
mov
popf
mov
nop
sbb
mov
lods
or
mov
outs
mov
pop
ds
push
xor
inc
rol
test
mov
cli
mov
in
or
inc
fwait
pop
inc
pop
mul
xlat
ins
cmp
std
std
pushf
or
(bad)
fidiv
(bad)
pusha
ins
mov
jmp
test
mov
or
arpl
push
cmp
mov
fcomp
inc
add
xor
adc
fcom
pop
pop
int
rcl
xchg
cli
ror
mov
hlt
ret
xor
in
xor
or
xchg
test
ja
sbb
loope
pop
scas
shl
inc
rol
push
sub
outs
jbe
stos
bnd
inc
enter
xchg
loop
pop
or
push
adc
mov
lods
aaa
sub
push
dec
std
out
lock
icebp
push
es
adc
icebp
xor
loope
inc
cs
fdivr
stos
test
jp
jbe
(bad)
mov
pop
ret
cmp
pop
(bad)
call
and
jl
sub
jnp
enter
lods
mov
shl
loop
test
push
movs
(bad)
dec
sub
push
fild
call
push
adc
sub
mov
stc
pop
sub
icebp
mov
(bad)
jnp
jmp
imul
jae
rcr
out
out
mov
mov
push
bound
cld
ins
sbb
shl
push
fstp
pop
xchg
retf
call
mov
(bad)
mov
or
pop
fs
loope
in
loopne
mov
in
jo
xlat
cmps
loope
jnp
(bad)
test
mov
pushf
shl
sbb
test
and
loop
pop
rol
bound
pop
adc
movs
pextrw
dec
aas
daa
cmp
stos
mov
aas
jl
sbb
out
add
lods
cmp
test
adc
dec
adc
sar
sbb
sub
jl
sbb
and
fcmovnbe
push
pop
xor
jl
retf
mov
mov
rol
inc
xor
mov
mov
cwde
(bad)
xlat
pop
lods
and
sbb
rol
push
and
mov
push
jp
mov
jg
bound
js
or
test
pusha
mov
add
and
xlat
sub
and
mov
pop
xchg
ret
in
mov
sbb
push
add
sbb
mov
(bad)
cmp
in
arpl
push
inc
jge
cmp
(bad)
stos
cmc
inc
adc
fimul
mov
mov
outs
je
xor
sti
inc
sbb
sbb
dec
dec
push
jbe
fist
mov
and
fisttp
cmps
out
jns
pop
mov
jae
pusha
cli
aas
add
fmul
cmp
es
es
jle
sbb
cmp
fs
dec
lock
jnp
pop
mov
cmps
inc
mov
dec
mov
bound
out
pop
in
mov
xchg
mov
js
cld
push
out
pop
jmp
les
rcl
test
mov
xchg
ss
ss
enter
and
or
dec
sbb
jae
xor
out
clc
sti
ret
mov
dec
jb
ror
jo
outs
aad
retf
xor
shl
pushf
and
scas
sbb
inc
mov
mov
daa
call
xor
push
adc
test
ficomp
std
sbb
dec
sbb
dec
push
aaa
push
mov
outs
add
fiadd
cs
rcl
iret
das
xchg
xchg
sbb
aaa
adc
inc
jmp
leave
pop
cmps
in
sub
xlat
loopne
mov
pop
mov
lea
and
adc
sub
sbb
push
push
sbb
out
pop
int
mov
jb
shl
cli
add
fisttp
rol
xchg
mov
push
xchg
mov
mov
mov
fidivr
sti
(bad)
arpl
jno
fst
sub
cmp
loop
imul
in
dec
sub
clc
push
or
push
(bad)
cmp
and
and
jb
push
iret
sbb
(bad)
mov
stc
mov
xor
cmc
push
sbb
out
cmps
in
fwait
sti
(bad)
into
xlat
movs
dec
xchg
mov
cld
jmp
inc
retf
test
sub
das
mov
jnp
iret
xchg
xor
push
test
dec
cvtpi2ps
push
movs
cmp
imul
and
xor
rcr
xor
outs
dec
shufps
lahf
pop
xchg
add
adc
out
xchg
loop
add
push
add
test
push
xor
mov
cmp
int
fild
xor
add
push
dec
mov
js
sar
or
nop
arpl
push
pop
mov
inc
mov
add
sbb
outs
or
pop
(bad)
call
nop
inc
push
pop
jno
inc
adc
push
shl
xchg
mov
jo
movs
icebp
(bad)
(bad)
jbe
das
rcr
das
call
fistp
push
imul
jmp
jnp
pop
cdq
rcl
out
repnz
cmc
mov
sbb
xchg
jo
ret
movs
xchg
nop
mov
mov
add
jbe
sub
adc
loop
cmp
cmp
mov
out
push
cdq
(bad)
inc
fimul
mov
pop
nop
loopne
loop
dec
lahf
fldcw
adc
inc
aas
jl
and
add
push
adc
dec
mov
(bad)
call
fidiv
rcr
xchg
in
je
aam
and
sbb
jle
jmp
mov
mov
push
fimul
dec
or
mov
jae
dec
push
jmp
jg
popa
push
and
inc
inc
adc
and
lock
imul
pop
pop
jb
and
or
dec
out
pop
ja
cmp
sub
cmp
aam
sbb
ret
push
sbb
xor
xchg
addr16
das
add
fsub
push
jne
adc
mov
cmps
sar
push
cwde
push
test
pop
in
fstp
or
inc
mov
mov
and
fisttp
and
xchg
push
int
aam
add
push
jecxz
out
mov
iret
cld
dec
loopne
xchg
pusha
push
pop
nop
push
jmp
mov
dec
add
loop
enter
sub
popa
out
gs
sbb
mov
retf
not
idiv
pop
pop
in
adc
mov
push
(bad)
out
into
out
call
push
and
or
add
idiv
and
leave
jbe
movs
pop
jecxz
push
pop
not
in
jbe
mov
dec
(bad)
or
test
ins
adc
mov
scas
iret
sub
cli
out
cmp
movs
fstp
mov
fistp
push
jo
dec
sar
mov
aaa
ror
inc
jg
xor
shl
or
and
add
dec
mov
cmp
repz
clc
in
pusha
stos
inc
sbb
sub
mov
pop
cmp
jp
dec
xor
xchg
es
and
pusha
cwde
lahf
mov
and
rcr
in
ins
aaa
jae
jns
or
mov
bound
enter
pop
je
jne
lods
sbb
inc
test
xor
push
nop
xor
pop
mov
scas
jge
cmp
push
xor
push
jmp
retf
lahf
out
add
and
jae
push
das
retf
iret
inc
aad
fidivr
mov
clc
mov
imul
retf
sbb
shr
jl
mov
(bad)
outs
repz
dec
ror
sbb
jg
xchg
enter
loopne
jg
jnp
dec
sahf
pop
out
mov
adc
fsubr
and
(bad)
push
cmp
ins
or
aaa
push
jnp
fucomi
mov
push
or
repnz
fiadd
mov
adc
cmp
pop
popf
loope
sub
mov
jg
je
out
pop
movs
sub
lods
dec
aam
jle
in
and
das
shl
mov
ror
dec
inc
movs
adc
mov
rol
jae
adc
push
inc
pop
pop
(bad)
inc
and
idiv
adc
mov
imul
imul
je
sub
dec
jo
add
rol
(bad)
xor
outs
sahf
fwait
(bad)
cli
mov
mov
sbb
xchg
std
aaa
sbb
mov
mov
sbb
cmp
jle
(bad)
sti
push
or
in
sub
and
mov
dec
repnz
popa
xor
mov
rol
cmps
loopne
and
pop
pushf
shl
fiadd
push
sar
cli
dec
(bad)
add
mov
stos
fptan
cmp
mov
push
sbb
rcl
cdq
jp
fldenv
pop
inc
fisttp
les
ss
neg
retf
cpuid
jmp
jg
pop
aad
dec
cli
test
xchg
mov
dec
lods
icebp
aam
dec
inc
sahf
aam
(bad)
fs
in
xor
inc
dec
sbb
shl
mov
cmp
xor
adc
mov
jnp
cs
in
aaa
call
cmp
or
mov
dec
mov
or
lds
cmp
dec
jl
shr
cmp
pop
mov
jmp
into
adc
movs
pop
pusha
ss
and
push
or
imul
pop
dec
sbb
pusha
cmps
xor
xchg
sbb
mov
in
sub
xor
push
dec
cs
jno
xchg
out
rcr
jbe
leave
push
sbb
mov
mov
mov
stc
imul
daa
cmp
mov
leave
shr
jmp
movs
(bad)
adc
mov
fistp
or
jp
push
pop
data16
out
and
jg
call
or
outs
dec
(bad)
leave
les
jle
test
mov
cmp
sbb
ja
retf
jmp
out
cmp
cs
sar
jae
inc
(bad)
popf
xor
test
outs
pusha
adc
and
pop
pop
enter
pop
xchg
outs
ja
aaa
loop
clc
push
pop
add
idiv
shl
jmp
and
fsub
push
call
sub
in
mov
mov
and
outs
push
test
int3
cwde
cmp
rcr
ins
jmp
retf
inc
mov
arpl
and
jno
test
push
(bad)
mov
movs
push
(bad)
lock
mov
in
mov
daa
jecxz
and
push
sub
ss
pop
mov
mov
test
cmp
lods
pop
call
data16
jmp
push
arpl
add
pop
xor
jo
xchg
pop
push
jo
mov
adc
mov
sbb
ficom
stc
rcl
iret
mov
fisttp
cmc
mov
sar
mov
sar
xchg
jbe
mov
sbb
loop
loop
xor
jge
fild
mov
outs
push
jns
mov
adc
push
bound
out
mov
cmp
dec
stos
(bad)
(bad)
push
mov
movs
inc
push
mov
xchg
xchg
add
adc
leave
test
cmp
sahf
repz
xlat
and
pushf
xchg
pushf
fst
jne
pop
mov
adc
xchg
xchg
xchg
ret
popf
popf
xor
push
dec
test
(bad)
adc
fs
stc
mov
ins
aad
cli
sbb
das
dec
call
out
sub
mov
(bad)
rcl
cmps
pop
xchg
and
div
(bad)
(bad)
jb
movs
repnz
mov
fisubr
repz
mov
mov
sbb
in
(bad)
imul
cmps
xor
jbe
jecxz
mov
in
fimul
mov
mov
pop
sbb
jo
cmp
mov
dec
mov
ja
xor
fild
and
or
sub
or
mov
aam
sub
add
jp
sub
jl
pop
jb
frstor
mov
mov
push
inc
push
sub
inc
out
push
rol
jae
and
(bad)
cwde
mov
inc
call
xor
push
sub
ins
xchg
jge
adc
test
pop
pop
and
mov
enter
fist
loope
mov
pop
mov
dec
pop
mov
mov
and
jecxz
lock
retf
adc
je
inc
xchg
and
add
mul
xor
jae
add
jecxz
mov
xchg
mov
cmp
loopne
fisubr
mov
jmp
and
rcl
sbb
cmps
je
inc
cmp
ins
and
push
into
bound
fcom
shl
mov
xor
and
enter
arpl
add
inc
dec
or
mov
sub
aas
les
imul
call
jo
sub
call
ret
adc
add
repz
dec
inc
mov
jns
jmp
mov
jle
jl
call
pop
pop
test
test
push
adc
mov
mov
jge
icebp
outs
sbb
lds
ins
mov
cmps
in
mov
arpl
jle
test
mov
lds
mov
lahf
mov
jmp
xchg
aaa
stos
movs
cmp
sub
push
mov
repz
xchg
mov
rol
xor
dec
enter
arpl
sub
pop
sbb
outs
scas
fdivr
push
mov
out
jg
pop
imul
dec
sbb
jmp
ins
jl
outs
cmps
push
gs
xchg
cmp
(bad)
push
or
cmp
dec
aaa
or
repnz
and
lds
adc
push
pushf
loop
mov
ins
and
in
add
retf
jle
fist
je
aaa
push
ror
out
mov
mov
dec
scas
sahf
adc
add
mov
xor
dec
inc
mov
test
call
loop
xchg
lds
mov
(bad)
aad
or
push
xor
sti
mov
out
retf
inc
add
push
mov
sub
clc
xchg
jmp
jnp
jl
and
gs
mov
jle
mov
idiv
adc
pop
cmp
jb
adc
pusha
cs
push
pavgw
inc
data16
mov
pop
mov
(bad)
cmp
and
push
sub
mov
xchg
aam
add
call
inc
lds
xor
push
loopne
mov
je
inc
getsec
test
loop
adc
stos
call
pushf
dec
pop
xor
xor
out
pop
dec
cwde
es
sbb
shl
pop
test
push
das
jp
in
cmp
inc
jbe
pop
jge
or
(bad)
pusha
mov
adc
xchg
rol
fisubr
inc
ins
std
stos
retf
repz
sbb
frstor
cmp
std
push
push
add
cwde
stos
cdq
inc
test
adc
mov
inc
adc
dec
sbb
shr
sub
cmps
jecxz
inc
rol
das
push
mov
mov
scas
loopne
cmp
or
pop
and
sub
(bad)
stos
push
stc
mov
mov
cdq
xchg
out
rcl
aam
lods
pop
and
mov
sub
cmp
mov
addr16
sbb
push
inc
std
mov
add
sub
imul
mov
sbb
add
ja
xchg
adc
mul
and
and
xchg
mov
std
call
push
leave
inc
pop
test
lahf
dec
dec
inc
cdq
cmp
shr
cmc
stos
or
cmp
ja
in
push
in
mov
daa
inc
pop
mov
test
mov
daa
test
ret
mov
or
pop
mov
ja
sbb
mul
aad
ret
adc
idiv
(bad)
mov
dec
stos
xchg
xchg
retf
in
cmps
cmp
movs
pop
sub
movs
aas
jno
push
rol
mov
pop
push
jns
xor
movs
cmp
out
stc
cwde
mov
pop
mov
mov
or
(bad)
int3
cmps
dec
mov
sub
pop
xor
loopne
cmps
push
pop
pop
fdivr
sbb
psubb
mov
shr
and
mov
push
int3
imul
jecxz
call
ret
sub
xchg
pop
ret
jmp
out
add
loopne
fwait
retf
xchg
sahf
clc
ret
cdq
and
cs
inc
jle
pop
mov
loop
xor
add
hlt
mov
test
xchg
rcr
mov
(bad)
jmp
mov
add
daa
mov
fucom
push
dec
pop
xchg
les
and
sti
xchg
dec
push
adc
(bad)
ds
test
scas
mov
cmp
(bad)
rol
xchg
cli
mov
addr16
jg
pop
inc
gs
(bad)
cmps
dec
test
out
sbb
nop
fwait
out
sub
xlat
mov
dec
mov
and
movs
mov
js
lea
mov
xor
loopne
sub
mov
pmaxsw
cmp
lods
pop
popf
fmul
fsubr
and
std
mov
(bad)
fnstcw
or
aas
sbb
pushf
pop
fidivr
jecxz
in
push
or
mov
inc
inc
js
sub
pop
sbb
lods
rcl
shl
bound
dec
mov
pop
push
pop
jbe
push
mov
or
lods
jp
scas
nop
aas
inc
stc
ficom
sub
jl
push
dec
daa
push
lods
lahf
and
mov
(bad)
(bad)
pushf
or
xor
pop
pop
sbb
rcl
shl
push
sahf
cld
mov
iret
xlat
imul
xchg
dec
jno
mov
stc
xor
imul
mov
mov
sbb
in
xchg
dec
fst
fidivr
(bad)
sub
repz
sub
aam
mov
mov
test
test
mov
adc
lds
xchg
add
sub
vsubss
dec
jp
scas
push
pminsw
jg
sti
lods
mov
cwde
les
aam
ss
pop
gs
dec
fisub
adc
mov
mov
mov
repnz
mov
sbb
cmps
loope
mov
xchg
pop
xor
add
xor
inc
push
jmp
call
or
icebp
and
jbe
lock
fisubr
repnz
loope
pop
cmc
jno
arpl
into
outs
xchg
int
rcl
xchg
ret
fist
out
jmp
inc
stc
or
std
adc
jle
dec
test
jp
retf
clc
outs
adc
enter
(bad)
mov
int
imul
ror
cmp
repz
adc
mov
aaa
(bad)
outs
aaa
xor
div
stc
out
push
test
or
imul
sbb
in
sub
fcomp
jne
mov
loop
cli
rcr
aad
scas
jae
rol
shl
mov
xchg
jecxz
dec
in
or
push
out
cld
aam
sub
cmc
out
jno
xor
xchg
jo
mov
fistp
fmul
xor
xchg
jb
xor
dec
dec
jmp
test
gs
cmc
add
fbld
test
pop
mov
dec
inc
enter
(bad)
hlt
xchg
popf
push
call
push
popa
out
aam
or
rol
imul
xlat
in
cmp
xchg
int
mov
ins
push
into
jo
pop
jne
jmp
push
out
cmp
hlt
jbe
es
inc
(bad)
sbb
dec
fwait
adc
ret
imul
adc
pinsrw
sub
pop
shl
sub
mov
test
push
aas
mov
mov
and
add
sub
sbb
test
sbb
xchg
enter
clc
pop
dec
sub
xchg
pop
in
xor
not
mov
push
inc
int3
jmp
loope
pop
(bad)
mov
mov
pusha
out
ficom
jp
sbb
retf
cld
popa
push
sar
scas
mov
pop
sbb
mov
ins
out
fnstcw
adc
mov
scas
fprem1
and
jns
fild
aam
ds
mov
push
mov
mov
add
bound
out
sbb
push
xor
sahf
icebp
mov
pop
cmp
iret
sbb
sbb
mov
(bad)
xor
cdq
mov
jmp
popf
xor
cmp
icebp
mov
aam
mov
jmp
inc
sub
(bad)
xor
mov
enter
jl
lods
nop
and
mov
jge
mov
mov
xor
fs
enter
mov
push
mov
jge
lahf
fcmovbe
add
mov
dec
int3
pop
ret
and
sbb
add
call
dec
pop
int3
fwait
ret
inc
or
pop
pop
ja
mov
push
cmp
and
inc
lods
pusha
arpl
cli
iret
or
movs
cdq
dec
adc
inc
or
add
cmp
in
jb
xchg
pop
xlat
pop
jge
inc
fcmovnb
xor
hlt
jnp
js
movs
jge
shr
inc
jmp
fild
push
xchg
dec
and
ds
fld
fmul
repz
and
aaa
call
leave
shl
jecxz
adc
adc
cmp
adc
stos
cmp
mov
or
(bad)
push
inc
sbb
ss
test
outs
or
pop
sub
ret
movs
adc
sahf
cmc
jg
pushf
jp
fldenv
(bad)
sahf
mov
pop
dec
cmp
mov
imul
movs
push
les
cmp
das
aad
leave
push
(bad)
(bad)
xor
outs
popf
movs
push
jne
dec
xchg
out
aaa
jg
sub
loop
inc
xchg
(bad)
or
and
push
(bad)
pop
or
mov
sbb
lods
cwde
js
dec
(bad)
loope
cdq
fwait
and
sub
mov
xor
(bad)
push
jbe
dec
sahf
xlat
retf
gs
retf
pmaddwd
into
gs
loop
jae
mov
test
pop
sbb
pop
sub
retf
stc
and
mov
inc
lods
sub
lock
retf
add
xchg
imul
iret
sahf
sbb
jg
mov
mov
xchg
mov
repz
mov
adc
and
jmp
sbb
jb
xor
add
jge
gs
push
mov
jmp
outs
mov
scas
jo
push
imul
mov
seto
fbld
retf
sbb
push
cmp
arpl
aaa
push
mov
sbb
sbb
imul
add
push
mov
out
lds
fbld
xlat
(bad)
iret
sub
int3
jno
aas
xor
push
push
test
cmp
mov
pusha
cmp
in
je
int3
movs
or
repz
push
lock
(bad)
scas
test
add
iretw
sub
push
out
jo
(bad)
fstp
dec
cdq
push
mov
pop
xor
and
jmp
adc
pop
int
retf
(bad)
mov
jb
lds
push
sub
jge
dec
pop
sub
cmps
mov
fs
push
or
(bad)
js
adc
push
mov
xor
dec
push
xor
mov
out
add
add
fldcw
add
xchg
xor
push
inc
call
xor
test
mov
enter
out
ja
xchg
fidiv
sub
fbstp
nop
xor
leave
ins
shl
dec
mov
mov
mov
aam
pop
or
mov
xchg
sbb
call
bound
pop
arpl
js
gs
(bad)
xor
xchg
pop
je
jne
hlt
lods
pop
call
mov
std
mov
out
rcr
adc
popf
push
add
ds
jecxz
jmp
sub
cs
inc
outs
add
xor
mov
pop
cdq
xchg
jno
jne
push
dec
sbb
inc
and
jns
pop
cmc
in
mov
xor
fist
rcl
add
mov
adc
cld
mov
pop
mov
or
arpl
dec
fnsave
(bad)
cmp
js
adc
inc
jb
cdq
mov
push
movs
test
adc
sbb
mov
jae
mov
or
pop
ror
repnz
pop
add
push
iret
div
dec
(bad)
mov
sbb
push
push
push
test
xchg
cmp
int3
cmp
and
nop
xor
adc
jo
shl
or
sbb
int3
sahf
(bad)
dec
fistp
int3
repz
inc
inc
sar
ja
cmp
mov
loope
stc
mov
lahf
push
xchg
jecxz
inc
mov
inc
jne
test
mov
mov
fist
dec
ret
sbb
jae
push
scas
mov
repnz
lds
sbb
push
or
jb
inc
pop
enter
aas
jmp
in
jns
sar
or
mov
ins
(bad)
jp
push
lea
add
nop
mov
movs
daa
mov
mov
outs
movs
mov
xchg
popf
add
mov
or
or
aam
fsub
in
mov
loopne
idiv
daa
into
fnstcw
xor
hlt
loopne
fnstcw
retf
sub
jl
jmp
fsub
push
push
mov
mov
mov
fwait
or
push
cmps
pop
pop
fmul
mov
dec
xchg
arpl
cmc
xor
into
test
cld
pop
call
pop
inc
xchg
fst
sbb
mov
cmp
cmp
adc
test
or
out
popf
imul
es
mov
adc
addr16
sbb
adc
jbe
adc
out
push
or
and
dec
jb
sar
sub
xchg
loop
dec
out
arpl
jecxz
jns
imul
adc
(bad)
(bad)
pusha
xchg
pop
pop
fs
mov
out
mov
arpl
xor
gs
cmps
mov
das
add
dec
loopne
movs
dec
sbb
inc
sbb
fcmovb
je
scas
in
sahf
stos
xor
sar
fisttp
add
(bad)
call
xchg
or
fwait
jl
mov
lods
icebp
addr16
push
retf
mov
cs
pop
shl
and
add
xor
add
cld
ror
lods
stc
mov
and
arpl
sub
mov
push
jl
cmp
sub
icebp
data16
pop
repnz
add
push
inc
cmp
sub
push
cmps
and
jne
inc
(bad)
push
and
loopne
aas
sub
mov
and
xor
loopne
add
add
sbb
ds
pop
jnp
or
ror
ret
test
xor
dec
jg
cs
sbb
xlat
inc
sub
ret
mov
scas
les
cmp
fld
shr
cli
jnp
dec
mov
mov
ja
sbb
fidiv
mov
inc
cs
sub
movs
cmp
xchg
frstor
sar
imul
movntq
sti
aam
and
push
fild
(bad)
xor
mov
mov
pop
test
mov
sub
imul
mov
sbb
popa
mov
sub
push
outs
pop
das
jns
mov
ret
sub
xchg
xor
cld
arpl
ds
dec
jns
stos
mov
mov
xor
dec
loop
int3
out
sti
add
sub
and
mov
mov
ror
sbb
push
xchg
push
push
ja
push
and
out
addr16
es
sbb
xlat
mov
daa
xchg
mov
fdivr
cwde
inc
adc
popf
pop
mov
(bad)
aas
dec
dec
repnz
cwde
pop
jmp
retf
jecxz
jnp
scas
or
adc
inc
pop
and
adc
sbb
fdivrp
push
sbb
dec
out
push
shl
test
and
xlat
repnz
xor
je
mov
fsin
xchg
add
mov
jb
xchg
pop
lea
or
mov
clc
sub
repz
(bad)
inc
mov
pop
sbb
lock
and
jns
add
cmps
inc
jecxz
xor
fcmovbe
outs
sbb
add
shl
xor
add
jmp
jp
jmp
xor
ins
in
movs
arpl
cmp
movs
test
push
cmps
test
push
mov
lods
jp
repnz
pop
hlt
jno
out
shr
ret
or
mov
inc
mov
xor
mov
cmps
xchg
mov
cmp
pop
jge
jne
cs
add
clc
and
sub
out
mov
out
mov
sbb
mov
add
call
cmp
cwde
pop
sti
stos
int
mov
mov
xchg
dec
int
jbe
mov
xchg
or
jmp
push
imul
out
push
dec
popf
cmp
mov
or
push
jg
lods
push
popf
loope
fcom
mov
dec
mov
shl
add
pop
pop
pushf
ja
ds
xlat
jns
cli
stos
(bad)
and
dec
pop
cmp
movs
cmps
lock
bound
adc
jbe
dec
and
jnp
mov
cld
out
pop
xchg
fnstenv
pusha
mov
sub
cmc
sbb
adc
mov
test
xor
sbb
cs
pop
sub
xor
ja
cmps
(bad)
mov
shl
(bad)
lods
fcom
retf
pop
inc
mov
dec
sahf
int3
adc
std
cmps
jmp
dec
fwait
inc
mov
ins
cwde
adc
and
xchg
outs
ss
cmps
inc
es
shl
les
jge
sbb
jnp
jg
push
test
mov
xor
jnp
mov
clc
cmc
pop
xor
fs
push
pop
gs
(bad)
jmp
cmp
test
xor
fwait
mov
jle
xchg
dec
pop
mov
idiv
pop
mov
jecxz
inc
xchg
mov
jmp
cs
nop
aad
mov
add
jns
bound
and
shl
sbb
loopne
arpl
mov
sbb
hlt
mov
mov
arpl
outs
fwait
and
pop
fild
test
daa
fs
bndldx
jnp
not
and
pusha
jl
push
mov
push
shl
push
jle
(bad)
jecxz
mov
cmp
pop
dec
inc
mov
mov
mov
push
dec
in
adc
xor
fld
xor
cli
sti
in
movs
add
mov
push
aas
and
hlt
daa
movs
mov
mov
mov
enter
xor
pop
imul
add
dec
out
jbe
in
sub
mov
repz
jne
std
frstor
imul
ror
mov
retf
pop
push
leave
in
mov
fld
pop
jg
fs
fxsave
jb
mov
or
repnz
nop
cmps
mov
(bad)
outs
ss
mov
and
loop
push
add
add
test
sub
sar
xchg
nop
mov
pop
pop
jp
push
xchg
cs
push
xchg
pushf
mov
inc
pop
cdq
lahf
sbb
mov
je
add
jg
sar
dec
xchg
call
add
sbb
aam
sbb
dec
add
gs
fs
lods
jp
cmc
mov
sbb
push
js
leave
jge
pop
les
mov
lahf
cwde
mov
mov
cmp
dec
jg
xchg
test
jae
in
nop
xlat
lods
sub
out
lock
ret
xchg
nop
test
xor
stos
(bad)
push
mov
inc
cmp
xor
push
fcomi
pop
pop
imul
add
ins
fs
add
ret
fbld
idiv
ret
out
push
fldcw
(bad)
or
in
iret
mov
jno
cmp
arpl
push
pop
xor
inc
cli
and
movs
jp
(bad)
stc
sahf
mov
shr
retf
aas
fcomp
push
sub
push
loopne
shl
push
lea
jo
cmc
sar
enter
popf
and
sub
retf
aam
(bad)
in
rcl
es
pop
jb
adc
inc
daa
mov
mov
out
mul
in
pusha
imul
push
xchg
xlat
and
ins
out
or
jp
add
std
xchg
push
nop
(bad)
xchg
movs
int3
pushf
fstp
jae
mov
jnp
cmps
into
sbb
shr
cmps
xchg
cmps
mov
xchg
pusha
lahf
jmp
and
test
in
retf
jmp
xor
imul
bound
ja
das
jmp
out
pusha
push
xchg
jb
loop
repnz
inc
xchg
call
push
mov
inc
scas
fidiv
push
iret
icebp
cmps
jno
cdq
jp
stos
inc
movs
add
sar
les
jb
pop
inc
mov
xor
imul
test
push
outs
nop
push
fnstcw
aas
jno
sbb
rcl
scas
and
pop
xor
sbb
mov
repz
sub
retf
(bad)
or
jecxz
in
pop
mov
dec
lods
push
pop
dec
add
bound
addr16
sub
fistp
ret
test
shr
repnz
scas
cli
xor
das
mov
inc
sar
hlt
jne
ficom
es
sub
cmp
sbb
push
cmp
pop
cli
inc
inc
movs
test
jecxz
xchg
add
data16
adc
push
popa
into
mov
push
jmp
mov
dec
sub
xchg
or
sti
inc
inc
xor
and
dec
dec
sti
inc
fidiv
or
fisttp
lods
cmp
adc
gs
(bad)
lock
push
shld
nop
sub
cdq
or
and
jmp
cwde
adc
adc
push
push
ds
cli
sbb
jmp
enter
cmps
sysenter
imul
lock
out
xor
gs
add
mov
stc
cmp
jns
sub
fptan
cmp
mov
add
pop
and
sahf
xchg
push
mov
retf
sbb
cdq
dec
or
push
fild
or
call
rcl
out
bound
lods
sub
cdq
popf
inc
and
les
(bad)
bound
nop
xchg
stos
mov
cli
adc
scas
xor
sti
jmp
(bad)
dec
xor
sbb
int3
mov
test
xor
cs
xchg
adc
xrelease
sti
sbb
fld
jmp
pop
addr16
(bad)
dec
call
xor
cmp
aaa
ror
and
push
mov
sbb
jl
adc
mov
pushf
movs
sbb
adc
jne
mov
push
dec
call
movs
adc
push
aam
adc
xchg
pop
adc
inc
popf
and
cmps
cmp
or
(bad)
out
retf
dec
call
pop
imul
and
xor
fld
lods
jns
jecxz
iret
push
mov
fdiv
and
xor
mov
leave
sub
lea
test
inc
pop
dec
mov
icebp
je
and
cmp
mov
push
iret
push
retf
cmp
push
movs
cmc
pop
sbb
cmp
scas
stos
cmp
imul
lock
(bad)
pop
retf
jae
mov
xor
sub
shl
(bad)
cmp
sbb
(bad)
mov
aas
std
pop
and
jmp
xor
out
mov
jmp
push
or
jl
and
inc
loop
lahf
fs
sbb
(bad)
push
inc
stc
or
inc
test
test
xchg
sbb
scas
outs
sahf
adc
lds
aaa
inc
hlt
imul
fsubr
(bad)
int3
pop
rol
ss
push
cmp
inc
ja
push
inc
aam
sar
outs
fstp
popf
not
pusha
addr16
repz
add
adc
push
xchg
aam
int
mov
pop
inc
into
int3
cmp
mov
xchg
sbb
dec
mov
mov
add
cmp
cmp
lds
pushf
jge
sbb
cmps
cmp
xor
mov
retf
loop
xchg
pop
cld
(bad)
xchg
mov
cmp
mov
lods
test
cmp
xchg
fldenv
and
add
pop
lods
iret
xor
repnz
sub
inc
or
popf
outs
shl
int3
cli
push
cmp
sbb
adc
add
mov
sub
cmc
dec
scas
xchg
mov
mov
mov
adc
outs
dec
shr
nop
call
pop
push
pop
push
or
push
or
scas
and
mov
mov
mov
mov
and
sub
mov
lods
jp
out
fwait
std
pop
sahf
xchg
cmps
movs
cmps
idiv
arpl
xor
pop
sub
cld
test
shr
test
sbb
loope
mov
lods
jno
add
cmp
xor
into
fwait
jnp
inc
cwde
adc
hlt
scas
leave
dec
mov
stc
fmul
inc
(bad)
and
bound
cmc
les
clc
(bad)
mov
xchg
loope
inc
add
xchg
cmp
sub
mov
xchg
pop
mov
scas
jmp
(bad)
mov
add
push
add
push
in
mov
mul
inc
pop
sbb
es
(bad)
popf
pop
jnp
dec
hlt
test
loop
pop
test
dec
lods
mov
add
mov
int3
test
dec
mov
stos
je
and
cli
jg
xchg
test
movs
cmp
loope
movs
xor
xchg
sub
pop
fwait
in
in
adc
or
mov
aad
ds
enter
stos
arpl
mov
dec
das
iret
sub
cld
shl
dec
mov
push
inc
sub
mov
sub
ret
or
jg
loop
pop
jmp
call
je
jmp
out
dec
cld
enter
sub
jo
leave
jge
push
jmp
aas
mov
jg
sbb
out
test
inc
inc
fs
sar
jae
in
mov
inc
pushf
and
push
or
inc
in
xor
mov
add
icebp
retf
push
(bad)
aas
fsubrp
xchg
mov
push
sar
ret
mov
test
iret
add
xchg
cld
fucom
fist
sub
xor
daa
(bad)
fisttp
cmp
sbb
push
jno
mov
jmp
lds
fisttp
pusha
rol
dec
aam
out
outs
push
xchg
pushf
pop
inc
cmps
fist
stc
aaa
push
in
adc
cmp
mov
icebp
jp
addr16
cmp
test
cmps
stos
scas
sbb
mov
ror
sbb
popf
dec
ja
push
and
(bad)
sub
sub
and
add
mov
ja
lock
imul
loope
sub
inc
fldl2t
mov
and
test
fisub
adc
iret
xchg
daa
mov
(bad)
cmc
cmp
sbb
and
in
and
stos
leave
lods
and
and
bnd
xchg
out
mov
sub
xor
xchg
adc
jo
xor
push
jae
inc
sti
mov
pop
xor
jmp
cmps
retf
sub
mov
or
inc
dec
adc
jno
iret
or
stc
es
lock
push
mov
dec
add
or
js
arpl
inc
imul
pop
xor
add
pop
and
dec
xchg
pop
out
xchg
sbb
dec
inc
xchg
add
jns
jbe
ror
cmps
aaa
retf
in
aam
pop
or
mov
xor
or
push
dec
or
xchg
inc
cwde
ja
jb
in
stos
repz
and
movs
mov
frstor
cwde
jnp
and
dec
shr
mov
xor
push
add
pusha
sub
or
adc
scas
aam
xchg
mov
mov
popa
jnp
or
mov
vpmadcswd
sbb
adc
lods
inc
sub
cmps
popf
mov
leave
add
pop
mov
xor
fild
ret
pop
pop
inc
test
xor
xchg
movs
xor
sub
dec
adc
ins
sbb
jmp
mov
push
and
xor
push
or
adc
fs
xor
sbb
mov
dec
movs
mov
inc
je
jmp
movs
not
pop
adc
and
dec
call
fisubr
call
mov
rcr
pop
mov
shr
rcr
jbe
jb
or
mov
aaa
dec
dec
iret
out
cmp
jb
mov
inc
arpl
and
std
icebp
and
cmp
xchg
popa
inc
adc
fs
dec
cmp
inc
jno
fdiv
(bad)
les
int
je
nop
add
mov
xlat
xchg
push
mov
push
enter
xchg
pop
sub
jnp
xchg
and
mov
pop
scas
or
shl
jb
dec
and
mov
push
xlat
repz
adc
mov
scas
mov
ss
push
xchg
ret
stos
fcom
xchg
cmp
mov
arpl
sti
sbb
xchg
sub
xchg
sbb
push
jp
pop
rcl
das
adc
gs
xchg
daa
fldenv
xchg
out
cmp
scas
sahf
aas
mov
xchg
sahf
inc
(bad)
mov
or
scas
fidiv
jno
xor
push
movs
dec
or
jb
out
cmp
and
pop
jp
aaa
cmp
xchg
fld
mov
or
xchg
inc
sahf
out
clc
rcr
push
xor
xor
gs
inc
dec
jg
pop
xchg
mov
fmul
cmp
pop
sbb
push
pop
mov
mov
ins
jle
loope
es
add
and
pop
fmul
jb
cmp
and
add
mov
push
call
mov
fidivr
pop
jge
ret
or
cmps
mov
cmp
sub
cmp
test
rcr
dec
mul
fdiv
outs
cmp
cmp
jle
lahf
shl
pop
adc
mov
mov
aas
and
xchg
jmp
adc
cli
retf
dec
pop
mov
mov
out
test
stos
xchg
(bad)
or
loope
rol
pushf
jl
outs
and
adc
ficom
fcomp
xchg
scas
fcomi
sub
sbb
xchg
sbb
icebp
xchg
mov
call
or
add
lahf
inc
pop
inc
lea
mov
clc
jl
add
sub
jo
xchg
je
cmc
cmp
iret
adc
or
test
fwait
mov
and
cmp
mov
jb
add
xlat
test
sar
out
addr16
pop
bound
aad
pop
push
nop
xchg
mov
xchg
mov
ret
(bad)
mov
or
lods
dec
sbb
push
lea
sub
inc
push
xlat
add
inc
mov
pop
lahf
in
test
lock
sub
pop
xchg
sbb
or
fisubr
rol
aas
in
inc
gs
mov
xor
jl
(bad)
jge
popf
xchg
sub
jg
mov
je
mov
sahf
sbb
les
cmc
push
jecxz
jne
mov
xchg
retf
adc
inc
in
pop
xchg
adc
mov
xor
pop
bound
jle
mov
retf
pop
jb
lds
inc
inc
inc
xor
mov
add
sub
mov
fdivr
jge
(bad)
fidivr
jl
int
cmps
and
inc
xor
repnz
xchg
sub
sbb
pop
push
imul
and
imul
(bad)
push
push
dec
add
jmp
cmp
fcmovne
pop
les
pop
fadd
(bad)
fwait
inc
pushf
jns
outs
pop
mov
adc
ss
dec
scas
loope
cmp
gs
fwait
jae
outs
xchg
mov
jp
es
mov
inc
pop
dec
dec
mov
jbe
sub
xor
test
or
cli
bound
rcr
aad
and
add
sub
mov
les
or
sbb
std
mov
mov
mov
ret
lods
hlt
mov
and
mov
xchg
inc
sbb
push
dec
xor
(bad)
xchg
ret
out
push
mov
aad
popa
addr16
xlat
lock
ss
dec
in
sbb
and
sbb
enter
int
lods
call
mov
repz
xchg
or
pop
sbb
cmp
mov
sub
push
loope
cmp
mov
jmp
and
mov
test
in
das
(bad)
test
retf
push
add
popa
mov
or
mov
iret
jmp
idiv
add
add
add
nop
jmp
dec
push
nop
loope
mov
idiv
jp
sahf
fimul
mov
lahf
mov
test
jl
repz
mov
mov
shr
int3
call
sbb
sub
clc
stc
xor
xchg
push
add
ret
mov
ja
dec
jne
sub
inc
jbe
xchg
ins
mov
or
push
out
dec
lea
sbb
mov
ins
cmp
mov
clc
rol
(bad)
pop
mov
aad
xchg
test
les
mov
leave
daa
add
(bad)
in
pusha
sbb
loope
adc
mov
and
mov
jae
fld
(bad)
push
mov
call
adc
xchg
cmp
push
mov
retf
cmp
sub
fidivr
hlt
cdq
cld
pusha
je
sahf
pushf
sbb
rol
sti
inc
daa
ins
xchg
push
inc
cmp
xor
and
sub
pop
mov
gs
aam
(bad)
cmp
cmp
mov
test
dec
sbb
cmc
je
jecxz
mov
imul
mov
call
push
cmp
push
mov
lahf
das
(bad)
mov
jae
push
pop
xor
mov
add
fdiv
clc
push
push
sahf
ins
fdiv
dec
pop
pop
fcmovnb
add
or
test
leave
jecxz
(bad)
ffree
add
push
jno
push
inc
mov
dec
leave
xor
jae
adc
or
pop
sbb
int
jne
fcmovu
pop
xor
sti
bound
add
push
xchg
shl
push
mov
iret
cmps
dec
adc
inc
icebp
dec
aas
aad
nop
repz
test
test
jbe
mov
mov
jmp
inc
mov
test
xor
ret
daa
add
and
sub
fwait
loopne
xchg
ins
add
fwait
nop
inc
(bad)
cmc
dec
mov
xor
leave
dec
push
mov
mov
ret
jmp
test
fsub
sahf
mov
push
mov
je
dec
ret
test
cmps
cmp
out
clc
iret
ret
sbb
js
fnstsw
outs
add
int3
(bad)
aad
leave
cmp
icebp
popa
jo
enter
sbb
repz
rcl
pop
push
adc
shl
stos
and
jae
ret
pop
jg
sbb
sbb
xlat
ins
test
sbb
adc
fs
das
(bad)
iret
adc
jae
fild
popa
pop
lahf
out
push
popf
sub
adc
fstp
faddp
add
mov
rcr
sub
in
jno
inc
arpl
jno
mov
pop
and
push
xchg
ins
cld
sbb
fnstenv
or
pop
leave
and
xchg
sub
data16
imul
sub
or
mov
bound
pop
and
test
js
ss
ror
pop
shl
jo
and
faddp
bound
cmp
dec
dec
data16
call
add
pop
or
pcmpeqw
mov
ret
jecxz
rol
pop
add
push
xor
push
outs
jnp
mov
cwde
mov
in
mov
mov
sbb
sub
push
inc
sbb
mov
push
inc
inc
cdq
aas
lahf
imul
push
xchg
pushf
sbb
mov
leave
xchg
fwait
shl
sub
mov
xchg
add
xor
loop
test
dec
ins
xchg
(bad)
arpl
adc
es
loope
jbe
mov
movs
xlat
adc
stos
rcr
(bad)
shr
or
(bad)
xchg
jg
cmc
sbb
loop
(bad)
sub
xor
mov
imul
and
stc
ja
inc
push
pop
stc
ss
js
dec
and
mov
push
jmp
mov
push
das
inc
ror
inc
inc
iret
rcl
cmp
xor
mov
mov
js
lock
test
sub
add
sbb
or
mov
inc
shr
mov
dec
add
sbb
adc
aaa
inc
sub
jb
or
add
in
xchg
iret
mov
int3
xchg
in
loope
arpl
int3
and
imul
popa
test
add
add
cld
icebp
je
js
and
popf
fnstenv
das
mov
sub
or
pop
jne
xchg
mov
scas
xchg
xor
pop
lods
jg
mov
scas
sbb
movs
xchg
les
leave
mov
jcxz
mov
inc
ja
ins
int3
push
std
sub
movs
mov
pop
sbb
dec
and
dec
shr
aam
jmp
sbb
mov
xlat
cld
mov
mov
cmp
(bad)
dec
dec
out
scas
cwde
cwde
aad
dec
mov
in
movs
shl
sub
jmp
fnstenv
adc
retf
clc
cli
hlt
mov
addps
and
jmp
js
dec
sub
cdq
movs
shl
mov
lods
inc
sbb
dec
gs
retf
and
into
xchg
adc
mov
cmc
popa
xor
fiadd
jle
jbe
retf
push
xor
sbb
jmp
or
fidiv
scas
and
cdq
sub
shr
(bad)
(bad)
je
sbb
ja
or
xor
xchg
in
mov
mov
or
and
and
loop
jge
push
fiadd
rcl
lahf
xchg
cli
jmp
and
add
dec
or
or
icebp
mov
cld
fisttp
scas
dec
scas
(bad)
mov
and
sub
arpl
(bad)
mov
shl
dec
ins
les
fidiv
inc
addr16
adc
inc
stos
aad
pop
jo
cmp
sbb
add
popa
shr
mov
pop
and
in
xor
rol
cmp
pop
xchg
fisttp
and
rcl
les
add
retf
sbb
ret
fiadd
ins
push
shr
mov
ins
sti
mov
mov
or
cmp
test
scas
(bad)
stc
mov
ret
cli
jbe
in
fadd
pusha
push
xchg
and
inc
(bad)
xchg
pop
int
sub
les
push
sbb
add
lods
out
push
sar
add
add
movs
push
aam
dec
lahf
add
sub
iret
fild
jbe
mov
test
nop
jg
mov
cmp
push
xchg
mov
sbb
jg
fs
movs
shr
mov
popf
lahf
pop
jb
shl
adc
outs
adc
mov
push
iret
imul
mov
cmp
pop
repnz
mov
scas
ds
rcr
popa
add
jnp
xor
adc
les
adc
pop
sbb
jne
mov
outs
push
pop
clc
(bad)
cmp
push
sar
call
dec
mov
jbe
movs
xchg
dec
bound
ficom
pop
cmp
js
loopne
jge
pop
repnz
pop
test
and
in
or
or
push
es
pop
xchg
int3
addr16
lock
stos
mov
jmp
pop
sbb
dec
mov
popf
mov
sbb
cmps
pop
rcr
push
xchg
jmp
push
or
jge
fwait
mov
in
or
in
mov
mov
push
push
sbb
add
adc
mov
mov
pop
jno
and
shl
add
loope
xchg
push
data16
loopne
pop
in
iret
and
in
inc
fcos
int3
(bad)
or
rol
push
jg
loope
cmp
adc
aam
mov
or
test
mov
mov
sahf
shl
and
daa
push
sub
mov
pop
fs
shufps
int
(bad)
aaa
mov
pop
scas
bnd
gs
dec
les
add
rcl
ss
mov
(bad)
(bad)
and
data16
inc
stc
jne
pop
add
xor
mov
cwde
lock
xor
mov
test
mov
test
pushf
test
(bad)
xor
pop
jmp
cmps
ss
cmp
add
(bad)
adc
xor
mov
xor
pusha
in
fsubr
daa
test
jns
pop
pop
sbb
jge
push
pop
xor
push
lds
mov
repz
call
sbb
into
js
in
sbb
adc
mov
icebp
scas
test
ins
jge
pusha
add
push
rcl
in
mov
shr
shl
push
mov
retf
xchg
push
mov
fnstsw
mov
ret
mov
xchg
or
jae
jmp
mov
test
mov
repz
in
cwde
pop
xchg
sbb
mov
cmp
mov
adc
push
inc
or
dec
mov
(bad)
cmp
stos
bound
adc
xor
in
jmp
into
arpl
push
repz
jge
pushf
mov
mov
and
(bad)
popf
inc
hlt
push
or
inc
xor
pop
or
pop
icebp
inc
jl
ror
retf
cs
arpl
and
pushf
sbb
push
in
mov
scas
fnstcw
into
pop
mov
(bad)
arpl
pop
mov
xchg
push
test
dec
das
pop
aam
xchg
dec
mov
fisub
jmp
ins
mov
xor
push
imul
lea
lea
popaw
int3
in
pop
sar
stos
popf
xchg
jl
push
cld
hlt
fmul
out
lods
mov
sti
aaa
sub
mov
jl
fwait
xor
loopne
daa
cs
xchg
jecxz
ficom
ret
cmp
push
pop
fidivr
scas
test
mov
mov
push
or
pop
ins
sub
jl
jl
fdivr
cmp
push
sbb
sti
sti
aaa
adc
pop
sub
xor
push
push
add
out
xlat
in
clc
mov
loope
mov
test
and
push
add
jle
or
shl
push
adc
shl
push
pusha
push
mov
push
or
dec
bnd
enter
ret
pop
dec
dec
mov
call
ins
mov
cmc
pop
pop
cmp
xchg
sbb
and
(bad)
xchg
in
pop
daa
fild
jmp
imul
jns
imul
arpl
scas
sbb
adc
mov
popf
push
inc
fimul
sbb
push
jmp
jo
scas
mov
mov
sbb
add
loop
sub
cmp
lds
xor
jle
fcom
or
push
sar
or
push
in
scas
mov
inc
push
fucom
xchg
xchg
out
pop
mov
cmp
adc
xchg
aaa
mov
fldenv
daa
add
mov
or
std
(bad)
idiv
fld
cmp
mov
xchg
pop
retf
push
jb
push
fild
mov
and
in
dec
xor
lock
cwde
jge
mov
aam
adc
xchg
into
jecxz
iret
ins
aas
sbb
or
add
stc
mov
cmp
out
mov
jg
sub
and
inc
xor
in
xor
cmp
pop
mov
mov
sbb
out
mov
ins
mov
xchg
icebp
mov
xlat
mov
cmp
xchg
outs
aaa
cld
add
out
movs
and
inc
clc
call
pop
adc
div
sub
add
push
xchg
sub
stos
(bad)
push
cwde
movs
mov
adc
lods
scas
pop
rol
or
and
or
push
movs
lods
sbb
inc
(bad)
jno
mov
cld
mov
fs
shl
jne
fisttp
test
or
mov
sbb
mov
sub
movs
adc
mov
fsub
push
jecxz
ror
loop
mov
repz
cmp
inc
retf
popa
cld
shl
cld
shr
xchg
sar
and
push
nop
pop
mov
mov
leave
push
inc
lahf
xor
or
jmp
and
adc
repz
fcmovb
cmp
pop
mov
aaa
ret
xchg
xor
xchg
dec
pop
pop
call
cli
sub
mov
popa
ins
call
in
nop
pop
mov
inc
cld
cli
add
mov
sbb
(bad)
(bad)
imul
mov
cmp
push
pop
scas
push
push
aas
lock
out
rol
imul
add
cmps
mov
icebp
jl
add
stos
ror
je
jg
mov
call
xlat
sbb
out
and
(bad)
xchg
(bad)
out
sub
xchg
push
xchg
sbb
sub
icebp
mov
arpl
fisub
stc
pop
stos
stos
mov
mov
pop
dec
fild
frstor
add
cmp
ror
sub
les
fdivr
mov
pop
leave
lds
mov
jbe
cld
pop
adc
adc
jno
out
adc
jne
mov
leave
clc
shr
jno
int3
sub
jns
mov
mov
shl
mov
mov
jne
test
push
dec
aad
inc
(bad)
imul
mov
mov
add
mov
sub
(bad)
xchg
fs
or
mov
pop
sub
sub
jmp
cdq
or
pop
pop
jns
dec
sbb
pop
ins
test
gs
dec
out
pop
adc
fmul
ja
fisttp
loop
sbb
in
repz
ja
(bad)
clc
ss
or
mov
imul
or
sbb
dec
leave
shl
pushf
mov
cmps
xchg
inc
lods
xchg
(bad)
mov
into
mov
jge
or
adc
fneni(8087
bnd
jo
fdivr
out
in
sub
mov
fldcw
mov
add
loopne
mov
add
add
mov
and
mov
shr
repz
addr16
and
or
dec
outs
pop
inc
xor
push
adc
rol
jb
sahf
arpl
jmp
dec
mov
scas
sub
jg
iret
mov
or
pop
mov
xchg
pusha
xor
pusha
cmp
or
out
int3
pop
sbb
jle
pop
mov
push
xor
or
pop
cmps
fdiv
ss
mov
adc
or
call
xchg
ror
cmp
stos
into
sub
stos
sub
jb
mov
cmp
cwde
mov
test
dec
test
and
dec
adc
xor
movs
clc
js
ja
cmps
test
pop
aam
dec
add
inc
mov
mov
cmp
imul
sub
xchg
paddusw
ins
add
retf
pop
sbb
mov
arpl
cmovs
jmp
mov
hlt
mov
add
sar
mov
xor
imul
cmp
lods
daa
shl
aas
sbb
fwait
push
rol
pop
push
pop
add
fs
call
pop
test
cld
cmp
xor
mov
jecxz
jnp
jp
xor
dec
aam
and
jmp
jae
leave
and
inc
imul
(bad)
cmp
add
out
ret
xor
fs
(bad)
cmps
cmps
mov
and
nop
pushf
mov
fst
fmul
fmul
inc
push
aaa
rcl
je
(bad)
call
dec
and
inc
or
stc
pop
movs
hlt
aaa
inc
stos
fdiv
jmp
mov
and
cmp
sbb
leave
jp
cwde
and
sar
in
sub
mov
mov
sbb
movs
pop
test
xchg
cdq
es
dec
mov
sub
stos
cmp
ficomp
test
sub
jp
in
push
or
cmp
test
mov
sub
cs
call
cdq
sbb
cli
shl
jg
je
imul
pop
ror
cmp
mov
xchg
adc
loop
pop
movs
xchg
sbb
and
sbb
xchg
adc
sub
sbb
cmp
stc
sahf
dec
sbb
mov
adc
push
sbb
test
or
bound
adc
adc
mov
mov
mov
data16
xchg
pop
xchg
out
stc
je
data16
xor
ret
mov
jnp
sbb
xor
repnz
xlat
jbe
pop
icebp
sti
sub
ins
push
mov
stc
mov
mov
fcom
pop
sar
repz
sub
cmp
scas
push
sahf
xchg
mov
xor
sub
mov
(bad)
stos
out
int
adc
or
hlt
push
and
mov
sbb
pop
sahf
jmp
add
adc
jmp
pusha
out
in
pop
(bad)
js
jmp
mov
jnp
loop
cli
add
(bad)
add
mov
cmps
das
adc
lea
sbb
mov
xor
pop
iret
loope
jmp
lock
into
push
mov
je
mov
repnz
pop
dec
(bad)
xlat
sub
sub
popa
imul
sti
ins
retf
and
leave
xor
out
mov
mov
mov
push
arpl
cmp
cld
jnp
(bad)
pop
pop
adc
enter
scas
xchg
or
into
add
jnp
call
xor
push
mov
jnp
call
stos
and
sbb
xor
repz
or
fnsave
push
stc
sub
lods
jns
mov
das
std
mov
push
or
jl
call
inc
inc
xor
mov
push
jle
mov
or
mov
bound
outs
dec
sbb
xchg
js
sbb
push
pusha
or
ss
clc
push
sti
add
popf
outs
push
(bad)
outs
cli
sbb
inc
std
not
add
inc
(bad)
sbb
nop
or
mov
jecxz
and
cmc
dec
xchg
scas
idiv
popa
ins
cmp
mov
ret
out
inc
pop
into
jno
sbb
push
xchg
data16
adc
and
ins
in
pop
fsubr
push
mov
jmp
sub
mov
das
daa
and
mov
enter
lahf
pop
sub
mov
push
inc
scas
or
cs
fdiv
mov
in
dec
and
cmp
adc
jmp
out
push
mov
push
cmc
das
pop
sub
pop
lods
dec
mov
adc
jecxz
cmp
jmp
fiadd
adc
out
stos
push
mov
and
inc
(bad)
xchg
push
adc
jbe
jae
jnp
push
(bad)
xchg
imul
mov
xchg
cld
call
jb
outs
test
add
mov
mov
pop
inc
pushf
ret
iret
and
icebp
fdivr
xchg
gs
fidivr
xor
fisub
sahf
stos
adc
xchg
mov
shl
pusha
sahf
xlat
cmp
dec
stos
cmp
fxch
test
push
std
or
aad
xor
retf
in
mov
dec
ficom
pop
sar
leave
je
fld
add
xlat
sub
outs
and
ins
rcr
add
neg
add
test
mov
jmp
aaa
xor
xchg
cmps
outs
add
dec
add
loope
jmp
(bad)
sar
or
ins
inc
jge
fdivr
scas
outs
cmp
pushf
pop
and
and
sub
sbb
out
cmp
retf
out
dec
adc
jae
xchg
dec
add
arpl
push
mov
int3
push
sbb
push
pop
inc
ret
popa
lods
adc
cdq
and
pusha
push
dec
push
pop
jl
xlat
call
(bad)
or
lock
aam
shr
ja
mov
mov
sbb
jmp
sbb
cmp
pop
or
mov
addr16
xor
repnz
pop
xchg
pop
lock
fdivr
call
add
mov
in
lahf
adc
rol
fadd
fidivr
test
xor
pop
mov
or
or
out
test
loop
adc
inc
inc
jbe
mov
xchg
sbb
xchg
inc
mov
loop
xor
jl
retf
icebp
ja
inc
xchg
inc
cmp
ror
push
sti
push
shr
sub
mov
dec
xchg
mov
mov
lock
xchg
pop
mov
nop
and
shl
retf
or
inc
sbb
aad
aas
xor
push
mov
jns
pop
add
mov
dec
jmp
push
fs
add
test
xchg
stc
(bad)
sbb
push
or
scas
xchg
sub
xchg
aaa
xchg
adc
mov
sti
hlt
pop
xchg
mov
adc
adc
arpl
mov
mov
jo
dec
pop
mov
cmp
mov
xchg
in
in
retf
jecxz
in
pop
adc
mov
sbb
mov
jmp
rep
push
repnz
dec
cmp
sub
cmp
pop
push
push
ins
jle
cmps
(bad)
(bad)
xchg
shl
mov
and
pop
mov
push
in
xchg
cs
iret
rol
imul
pop
jmp
ret
repz
lods
mov
and
mov
add
retf
rcr
cmp
cmp
jns
scas
add
repnz
sar
test
sar
retf
cmp
nop
pop
outs
fucomi
and
push
cmps
lods
cmc
sti
fstp
inc
pop
xor
xchg
dec
dec
and
xor
ss
cld
nop
inc
gs
clc
pusha
leave
inc
sti
adc
test
jns
and
out
jge
or
jecxz
mov
pop
mov
sub
(bad)
pop
gs
mov
jl
rol
cmp
into
fadd
mov
pop
fisubr
aaa
(bad)
int
xchg
mov
jp
push
hlt
or
std
fld
(bad)
and
and
push
lods
push
push
xchg
neg
dec
fistp
jnp
lea
ret
jmp
aam
adc
call
(bad)
sbb
cmc
adc
movs
cmps
fsubp
sub
mov
je
test
or
(bad)
jne
sub
inc
mov
sahf
dec
mov
fiadd
push
pop
fdiv
shl
div
loopne
jne
icebp
adc
bnd
clc
loop
mov
pop
jmp
adc
inc
jle
jp
sbb
aad
pop
push
jp
test
and
pop
(bad)
dec
or
jno
mov
inc
mov
sbb
xchg
push
sbb
test
dec
pop
rcr
sbb
je
mov
push
or
fmul
fistp
jge
jp
mov
push
stos
add
div
push
rcr
das
out
arpl
int
push
pop
cmp
inc
(bad)
div
icebp
loop
(bad)
inc
jle
sbb
push
adc
(bad)
js
xchg
div
mov
lock
fadd
cmp
add
add
lahf
aas
or
mov
adc
jg
outs
sbb
push
ds
mov
enter
ins
aad
ret
scas
push
cdq
mov
loopne
div
sbb
(bad)
fwait
pop
out
idiv
cmp
js
add
cli
dec
out
loop
cmp
mov
aas
inc
inc
scas
sub
retf
lahf
stc
popf
dec
repnz
sbb
int
jg
test
pusha
pop
push
mov
pop
inc
inc
shr
arpl
lods
or
cmc
scas
adc
pop
test
pop
mov
hlt
mov
xchg
or
(bad)
pop
push
scas
xor
and
dec
into
mov
and
push
and
inc
or
xchg
sub
xor
push
bound
or
xchg
pop
add
xor
je
cmp
adc
adc
imul
mov
daa
xor
int3
xor
dec
sahf
mov
lea
push
xchg
mov
add
cmp
stc
mov
shl
mov
and
jge
loop
push
push
push
mov
cmp
mov
mov
fnsave
mov
shr
jo
out
xchg
cdq
add
popa
and
test
shl
lds
mov
ins
jmp
or
js
jo
xchg
mov
xchg
cwde
dec
jp
nop
test
push
out
iret
nop
stos
mov
pop
fild
pop
rol
add
inc
inc
xchg
aad
inc
xor
fidivr
repz
push
movs
popf
pop
out
cmp
mov
sar
sbb
(bad)
fsubr
adc
cld
shl
add
jmp
iret
out
or
push
cld
adc
cdq
mov
xchg
test
stc
mov
(bad)
sbb
fiadd
jmp
ds
push
loop
nop
outs
aaa
dec
cs
mov
sahf
stc
sbb
gs
cmp
or
aaa
ror
inc
les
(bad)
mov
mov
dec
add
clc
lods
fisubr
retf
cwde
or
push
cmp
add
in
fcom
rol
jp
(bad)
and
cmp
push
clc
fcomp
fist
and
(bad)
pop
cmp
jcxz
fldcw
inc
stos
pop
and
in
or
sbb
jmp
sbb
jmp
mov
jecxz
pushw
add
adc
aaa
mov
icebp
popa
inc
sbb
cli
fistp
inc
sub
xor
loope
mov
xor
inc
and
push
dec
xchg
ss
dec
push
pop
pop
stos
sbb
in
jmp
iret
inc
push
popa
mov
cmp
adc
lock
test
sub
push
add
ror
popf
adc
or
push
out
inc
xchg
pusha
sbb
or
xor
adc
cmp
push
loopne
les
ficomp
add
mov
mov
mov
add
outs
mov
cmps
push
in
cmp
sbb
mov
inc
add
xchg
leave
bound
jl
cs
inc
sub
enter
popa
cmps
mov
aas
js
cmp
sub
xchg
cli
cld
retf
ja
cmps
jl
adc
ret
or
lds
add
bnd
dec
cmps
sti
jecxz
rol
in
into
pop
push
outs
pop
rol
outs
nop
das
xchg
sub
xchg
fimul
pushf
jne
movs
jle
into
inc
aad
mov
cmp
lds
fs
test
repnz
mov
inc
sub
or
scas
scas
mov
imul
arpl
jne
sub
push
or
jge
mov
bnd
icebp
xchg
pop
sub
jmp
ja
rcl
lea
push
sbb
and
popf
frstor
jnp
es
jl
repnz
(bad)
retf
aad
(bad)
fisubr
retf
in
(bad)
(bad)
fistp
arpl
in
rcr
pusha
test
movs
pop
retf
pop
into
or
push
xor
cmps
push
int3
aas
lahf
pop
inc
xor
jns
jne
es
mov
ss
fsubr
fs
(bad)
dec
std
sti
fs
stc
into
mov
into
or
jg
test
das
shl
ins
scas
in
inc
call
jmp
inc
mov
dec
mov
sahf
and
inc
jb
into
test
push
cmps
adc
in
je
or
or
add
push
pop
sub
fisub
ficomp
sahf
jmp
sbb
ja
sbb
cmp
mov
push
xchg
pop
and
(bad)
or
mov
movs
loop
mov
pop
pushf
xor
inc
test
cdq
fsub
ret
jmp
les
inc
aad
(bad)
ins
cmps
add
cmp
ss
mov
test
jg
cmp
xchg
xchg
rol
shr
enter
add
ja
cmp
add
stos
mov
push
dec
out
(bad)
push
pop
push
push
or
pop
mov
mov
jmp
cs
cmp
mov
iret
cmp
inc
lods
imul
ds
push
sub
lods
aam
dec
cmp
xchg
stc
in
dec
in
push
lds
scas
xchg
sub
enter
bound
jle
jge
int3
mulps
mov
adc
out
int
aaa
ins
iret
loop
sub
cli
imul
dec
sti
jnp
sar
push
xor
mov
adc
iret
jno
push
nop
xor
sbb
pop
jo
les
pop
mov
clc
ds
sti
xchg
int3
adc
push
test
jno
xor
test
sti
es
stos
jns
adc
mov
stc
or
adc
jbe
ins
sti
xlat
(bad)
shl
ins
ret
test
mov
ss
mov
aam
sub
daa
retf
push
sahf
mov
fsubr
movs
into
and
cwde
(bad)
jge
and
nop
mov
or
lods
pop
outs
test
cmp
ins
pop
xchg
mov
pop
ins
inc
mov
imul
sub
or
adc
push
pop
repnz
pop
fiadd
mov
mov
shl
fistp
jecxz
lds
and
jae
xchg
jno
inc
push
fmul
push
mov
fiadd
aas
out
push
mov
mov
jle
and
cmp
mov
mov
rcl
(bad)
nop
mov
stos
cmp
sti
sbb
neg
in
nop
jl
pushf
movs
lods
push
out
out
cmp
xor
push
push
push
call
mov
jmp
pop
aad
jge
mov
ins
sbb
mov
sbb
test
xor
aad
retf
(bad)
pop
pop
inc
repz
dec
ins
xchg
and
ret
mov
jmp
pop
std
inc
xor
xlat
cmps
mov
shl
ret
xlat
jb
popf
(bad)
fcom
aas
jmp
mov
sbb
stos
jg
sbb
cmp
cdq
xor
add
push
nop
xor
adc
in
xor
cmps
mov
mov
dec
inc
xchg
push
les
jae
pop
movs
icebp
icebp
xor
push
in
lea
jo
lahf
fist
sbb
jg
sub
push
fcom
mov
xor
sub
push
xor
movs
pop
xor
in
gs
dec
cmp
inc
xchg
sub
ret
mov
aad
sbb
pop
lahf
or
xchg
xchg
mov
pusha
ficomp
fdivrp
in
sahf
push
out
movs
repz
das
call
push
call
int
inc
inc
in
pop
jne
push
cmp
adc
inc
xor
and
mov
dec
dec
cmp
inc
push
xor
fistp
adc
sbb
inc
adc
or
inc
sub
mov
cdq
daa
inc
inc
mov
ins
and
jecxz
pop
mov
jo
jl
addr16
test
vmwrite
xchg
pop
test
lahf
(bad)
fcomi
loop
retf
jg
push
xchg
mov
test
psadbw
jmp
repz
nop
fisttp
mov
aas
xchg
add
inc
mov
lods
mov
fwait
repnz
popf
mov
cmp
mov
sub
inc
je
lea
pop
aam
cld
es
inc
outs
or
pop
out
test
add
push
adc
dec
mov
sbb
sub
je
and
mov
sbb
pop
xchg
mov
popf
dec
jg
dec
or
call
pop
lock
sub
jg
addr16
out
cmps
dec
mov
inc
int3
cwde
adc
cdq
in
sar
or
stos
inc
sub
inc
dec
out
push
pop
ja
(bad)
in
push
shr
ja
mov
push
adc
mov
pop
mov
mov
inc
push
(bad)
cmp
rol
sub
div
dec
ja
not
push
rcr
or
fild
les
adc
imul
jns
std
shl
mov
adc
mov
out
loope
push
cld
jns
fadd
ret
imul
jle
ds
test
mov
push
mov
push
or
or
pushf
retf
jne
sbb
call
cmp
mov
add
mov
push
out
mov
jnp
sub
or
jg
push
xchg
add
dec
popf
loop
sbb
in
pop
sbb
aam
neg
loop
sub
fimul
add
lods
jge
js
and
jle
add
mov
sub
dec
jns
lods
out
pop
pop
mov
add
adc
clc
aam
pop
add
lods
in
add
sahf
push
cmc
gs
fimul
jo
inc
mov
pop
addr16
mov
sub
out
neg
addr16
mov
jb
mov
data16
jmp
push
in
fmul
push
mov
and
inc
push
push
adc
xor
arpl
xchg
ret
out
push
lahf
std
test
mov
adc
pop
cmp
out
pop
ret
sahf
ret
pusha
xor
shl
inc
xor
jecxz
jne
outs
xor
add
jo
(bad)
sahf
jmp
xlat
pop
leave
add
icebp
mov
imul
jg
xchg
sbb
test
dec
shl
mov
in
rol
add
(bad)
push
push
mov
enter
fadd
xor
out
add
clc
test
push
outs
jbe
pusha
xchg
fwait
pop
ret
pusha
mov
mov
in
mov
sbb
dec
pop
fist
pop
into
scas
out
int
adc
sbb
mov
outs
jl
out
jne
jae
sbb
mov
rcl
jmp
or
inc
inc
test
xchg
pop
cld
clc
(bad)
call
dec
or
jg
push
cmps
xor
mov
outs
sar
cmps
xor
jne
mov
sbb
add
jo
icebp
outs
adc
pop
mov
ds
mov
loope
or
adc
daa
outs
fcomp
out
jg
lods
stos
ret
adc
push
fwait
inc
lea
repnz
ret
retf
sub
pop
inc
pop
mov
retf
and
pop
adc
sub
repz
add
xlat
cmc
fwait
inc
lds
ret
ins
pop
ficomp
out
mov
ja
pop
(bad)
dec
outs
cs
xchg
stc
pop
adc
mov
test
fistp
repz
iret
(bad)
(bad)
nop
je
push
cmp
push
xor
jnp
sbb
shr
push
data16
test
xor
call
sub
cli
sar
sti
movs
xchg
sbb
xor
xchg
retf
bound
push
cmps
sub
pop
sub
mov
out
out
loop
fild
ja
out
mov
xor
std
das
aad
and
test
dec
in
mov
fsubp
jl
xchg
or
jo
fld
cli
aaa
test
dec
int
jp
stos
inc
cli
inc
out
cmc
or
fmul
outs
shl
mov
push
mov
shl
and
sbb
outs
mov
pop
in
sbb
cmp
lock
mov
pop
fld
push
popa
jp
adc
fbld
adc
stos
xchg
and
nop
mov
fldenv
sub
jae
cmp
lods
jno
mov
push
jmp
mov
arpl
xor
cmps
mov
mov
add
mov
retf
icebp
cli
cld
pop
pop
xchg
add
dec
or
(bad)
push
dec
lock
jecxz
cmps
nop
and
add
mov
push
push
cwde
and
dec
xor
in
adc
outs
and
jnp
sbb
lfs
mov
loopne
js
int3
ret
mov
sbb
sti
retf
inc
cmp
xchg
adc
test
je
lock
mov
mov
xor
std
xor
nop
int3
inc
ds
repz
push
dec
aam
icebp
adc
outs
jmp
jmp
jg
xchg
jle
ins
(bad)
arpl
mov
jl
mov
ja
popf
dec
popa
xbegin
fwait
test
sar
mov
gs
cmp
ds
lock
shl
or
xchg
(bad)
mov
push
jge
xor
push
aas
cwde
movs
dec
stos
fiadd
ret
daa
js
clc
pop
mov
xor
jno
mov
and
or
call
xor
retf
sub
stos
addr16
loope
sub
or
sub
les
daa
(bad)
bnd
mov
retf
xor
jge
or
lds
xchg
jnp
mov
mov
lock
dec
cmp
jno
mov
sbb
jb
mov
pop
shl
stos
daa
mov
lahf
xchg
mov
outs
inc
or
test
loope
push
aam
outs
inc
movs
retf
(bad)
mov
mov
xchg
cmps
sub
movs
fsubr
pop
jb
adc
pop
xor
and
mov
add
rcr
pop
push
or
ss
int3
xor
out
(bad)
sub
adc
icebp
call
mov
lock
inc
mov
test
arpl
ja
aam
and
mov
ss
stos
mov
xchg
sbb
jns
shl
dec
loop
pusha
pop
js
fdivr
xor
fs
mov
inc
jge
(bad)
test
dec
push
call
out
mov
hlt
jl
inc
lods
jmp
or
sti
dec
popf
das
std
pop
call
pushf
fldcw
repnz
xchg
sub
inc
pop
ins
or
bound
pop
add
les
cmps
xchg
stos
inc
(bad)
sti
ja
nop
mov
mov
in
cmp
movs
(bad)
bound
or
sub
mov
cwde
cmc
sub
retf
in
fisubr
out
call
mov
mov
dec
mov
mov
pop
mov
scas
push
adc
sar
sub
pop
lea
js
lea
addr16
push
push
test
aas
xor
mov
push
pop
mov
loop
scas
mov
pop
shl
mov
div
enter
mov
sbb
dec
and
cmp
nop
sbb
cdq
inc
push
push
xor
clc
ficomp
test
and
(bad)
jmp
or
cmps
ins
inc
sub
jmp
outs
jns
(bad)
push
repz
jno
cwde
pusha
movs
test
cmp
enter
pop
inc
lahf
rcl
pop
mov
ret
sbb
dec
push
xor
or
stos
cmp
pop
addr16
xchg
shl
adc
test
mov
inc
dec
mov
mov
arpl
sbb
pop
(bad)
iret
inc
dec
daa
imul
cmp
push
or
fmul
repz
xlat
ja
or
push
and
out
xor
adc
jo
sbb
jl
adc
sbb
daa
addr16
ss
inc
test
fld
dec
mov
dec
sub
aas
mov
ja
add
repnz
inc
xchg
mov
inc
fs
(bad)
pop
adc
mov
dec
or
jb
int
xor
jl
adc
xchg
jp
or
jae
cmp
scas
ret
stos
mov
jbe
cmp
jae
jns
xchg
or
jns
dec
cdq
div
and
push
cdq
jns
fbld
mov
push
sbb
fs
fs
pop
in
pop
ds
(bad)
jb
push
clc
js
stos
sub
jne
outs
jo
xor
movs
dec
and
imul
push
add
aad
scas
and
test
mov
popf
(bad)
or
xor
lods
sti
lahf
pushf
and
inc
mov
outs
xor
or
xlat
pusha
outs
cli
out
sbb
xchg
mov
pop
dec
test
jle
mov
mov
mov
out
jg
in
in
fwait
cmp
xor
mov
(bad)
mov
inc
push
stos
inc
xchg
bound
movs
jp
and
mov
sbb
clc
js
ds
jmp
inc
popf
mov
jp
push
(bad)
(bad)
cmp
test
sub
mov
pushf
lds
imul
push
(bad)
and
add
stos
adc
std
push
clc
or
xchg
repnz
jp
jbe
sub
sbb
arpl
retf
int3
aas
sar
pop
leave
mov
(bad)
rcl
mov
cmp
push
rcr
ja
or
lea
pushf
pop
gs
nop
outs
pop
pop
sahf
int
mov
leave
pop
push
adc
push
pusha
pop
push
iret
and
jmp
or
scas
mov
mov
jmp
ds
pop
xchg
xor
mov
mov
fdiv
inc
aam
push
ja
sub
adc
(bad)
adc
pop
jp
cmp
ret
fild
mov
cmp
fwait
adc
movs
loop
sbb
push
mov
dec
sub
sub
hlt
cld
dec
mov
repnz
(bad)
mov
inc
fild
mov
test
fist
mov
retf
ins
fidiv
adc
in
mov
test
pop
cmp
cs
pop
dec
mov
ins
mov
mov
xor
aaa
lds
mov
cld
fnstcw
pop
ja
jns
dec
push
(bad)
inc
xchg
pusha
mov
popa
ret
test
mov
adc
add
loopne
scas
aas
mov
xor
cli
lock
gs
ficomp
dec
xchg
jo
mov
mov
inc
jl
jl
jmp
push
sbb
mov
sbb
jo
xchg
xchg
pop
cmp
sub
movs
xchg
adc
retf
ret
mov
jecxz
cmc
ror
movs
js
in
pop
and
aas
scas
pop
mov
sub
lock
(bad)
enter
(bad)
cmp
inc
and
and
xor
sbb
imul
out
pop
jle
sahf
and
pop
cdq
xor
std
shr
pop
(bad)
jle
cmp
sbb
icebp
call
mov
pop
popa
outs
and
clc
xor
fwait
push
out
scas
jp
(bad)
fwait
(bad)
pop
dec
mov
fs
xor
mul
or
fnstsw
fstp
and
ror
mov
xchg
lock
and
out
adc
mov
jg
pushf
out
in
stos
cld
pop
pusha
jl
dec
es
shl
inc
inc
xchg
ret
fwait
or
lea
push
jmp
or
adc
ds
cs
mov
test
cmp
(bad)
test
fwait
inc
add
adc
mov
sub
(bad)
addr16
repnz
jl
xor
push
push
sbb
and
es
hlt
mov
add
dec
mov
lock
scas
in
sbb
gs
xchg
loope
mov
add
int3
dec
ror
push
(bad)
aas
xor
in
lods
stos
jno
shl
call
mov
sbb
or
jmp
xor
(bad)
daa
or
pop
retf
cmp
int3
je
das
fisubr
dec
data16
cld
xlat
aam
mov
jecxz
les
test
or
mov
mov
dec
mov
pop
sbb
xchg
inc
pushf
fistp
cmp
or
push
sbb
scas
out
mov
dec
test
imul
imul
hlt
test
outs
mov
ja
dec
jmp
mov
dec
mov
push
sbb
outs
mov
(bad)
mov
pop
pop
jg
sbb
mov
and
mov
pusha
jns
lods
clc
sahf
movs
pop
sar
xchg
pushf
clc
sti
inc
adc
popa
xchg
sub
and
mov
push
and
sti
mov
int
pop
mov
add
push
add
(bad)
dec
pop
cmp
inc
cmp
inc
pop
lods
repz
repz
(bad)
aas
hlt
sub
outs
movs
enter
repz
rcr
pop
sub
es
movs
jb
sub
int3
add
xor
sub
or
not
arpl
cwde
fldenv
mov
test
je
push
inc
push
mov
mov
outs
ror
push
adc
or
xchg
hlt
hlt
push
mov
call
movs
sub
lock
pop
clc
xchg
jb
ret
push
cmp
sbb
xor
(bad)
loopne
pop
add
or
cmp
fisubr
cwde
loope
(bad)
pop
add
sub
cwde
stos
fstp
pusha
xchg
mov
push
mov
dec
mov
(bad)
repz
scas
call
or
dec
and
inc
(bad)
sbb
jg
movs
and
or
pop
cmp
sbb
or
jo
inc
cmps
test
retf
mov
aam
push
arpl
or
pop
sub
pop
and
ffree
in
push
shr
pop
out
arpl
in
xchg
cmps
sub
and
inc
sub
lock
mov
mov
dec
retf
call
cmps
iret
xlat
cmps
les
push
mov
ins
sbb
mov
fisttp
sahf
daa
and
imul
fsub
sti
ss
sub
(bad)
test
sub
out
out
xor
fs
stos
and
pop
inc
push
mov
mov
les
push
jbe
gs
push
mov
cmp
mov
cld
mov
sbb
arpl
xlat
call
pop
push
hlt
sahf
add
sub
popf
cmp
bound
cmp
mov
outs
pusha
adc
shl
pop
jbe
mov
sub
int3
aas
cmc
sahf
adc
aad
xor
cmp
loop
lods
das
cmp
push
xchg
xchg
xor
mov
sbb
test
sub
dec
scas
xchg
push
arpl
loopne
addr16
push
push
shl
xchg
loope
or
and
or
xchg
out
adc
xchg
sub
je
sbb
mov
mov
ds
loopne
gs
add
icebp
pop
mov
push
and
cmp
je
fisub
repz
cld
int3
lea
cmp
nop
push
mov
cmps
pop
stos
jno
je
(bad)
int3
sbb
adc
repz
int3
out
sbb
mov
in
inc
inc
movs
dec
jno
add
fwait
scas
test
jb
out
pop
fsubr
sub
sub
mov
lea
hlt
outs
es
push
inc
push
jecxz
(bad)
stc
fwait
test
pop
mov
int
push
pop
cmps
test
sbb
leave
(bad)
(bad)
sahf
ins
push
sbb
movs
mov
fcomp
mov
inc
adc
jecxz
add
inc
mov
outs
push
xchg
movs
inc
xor
mov
inc
jle
mov
call
jge
push
imul
clc
(bad)
js
push
je
sub
scas
inc
in
icebp
adc
sbb
pop
rol
fistp
cmp
jae
sti
mov
and
(bad)
scas
mov
inc
jnp
out
addr16
idiv
test
mov
dec
clc
push
lock
jge
push
add
dec
sar
(bad)
fnstcw
xchg
mov
call
push
xchg
jmp
fild
add
inc
lea
(bad)
and
and
dec
mov
outs
fdiv
push
cmp
hlt
mov
in
dec
mov
out
xchg
sti
push
pop
mov
scas
mov
cmp
ret
mov
jg
mov
gs
out
shr
pop
ins
mov
push
sub
cli
in
and
or
and
cmp
mov
mov
adc
push
dec
ror
cmps
mov
fsubr
pop
jne
sub
xchg
jl
pop
in
cmc
dec
sbb
pop
xchg
arpl
jo
rol
xchg
ins
daa
aam
movs
aas
fild
inc
sahf
shr
rcl
and
sahf
rep
adc
cmp
js
mov
sbb
cmps
mov
adc
inc
mov
in
fistp
stc
jle
lods
xchg
cmp
scas
pop
push
cmp
inc
mov
cld
sti
xor
rcr
fcmovu
les
mov
fimul
out
push
mov
lods
out
mov
mov
call
adc
aad
xchg
push
mov
fidivr
push
enter
pop
pop
mov
movs
pushw
je
cmp
leave
loopne
pop
aam
pop
mov
sbb
pop
jmp
imul
inc
icebp
cld
push
sbb
mov
out
(bad)
je
push
movs
leave
xchg
daa
cmps
pop
dec
push
sub
mov
fist
mov
movs
xor
cld
or
cmp
pop
cmovns
in
fcmovnbe
sub
cmp
fnstenv
mov
push
and
dec
aad
and
loop
cmp
rcr
xchg
cmps
retf
aaa
dec
jmp
jle
dec
lods
sti
pop
sub
sbb
outs
push
js
ins
scas
call
or
xchg
popaw
xchg
pop
lahf
dec
dec
cmp
jne
lahf
loope
jge
mov
jle
ret
xchg
aas
pop
nop
xor
cmp
push
add
std
add
test
ficom
adc
ss
jle
outs
xor
xor
retf
adc
pop
adc
jne
xor
dec
outs
dec
call
and
sub
cwde
ins
xchg
(bad)
aaa
mov
out
aad
out
sub
push
xchg
cmc
xchg
pop
dec
pushf
(bad)
jmp
pop
push
push
int3
xchg
mov
shl
mov
lahf
cmps
inc
inc
xlat
sub
mov
mov
in
and
out
or
stos
adc
lds
and
mov
or
imul
sbb
adc
cwde
ret
mov
test
loope
mov
call
push
test
pop
inc
sub
ins
je
dec
(bad)
lods
test
cdq
or
sub
or
pop
fstp
mov
push
stos
mov
push
scas
push
ins
je
enter
faddp
dec
adc
mov
jbe
mov
or
test
jmp
fidiv
daa
loopne
imul
cmp
(bad)
and
mov
cmc
or
mov
xor
(bad)
mov
outs
add
mov
lods
fld
sub
jp
adc
pop
push
sbb
(bad)
aad
call
xchg
mov
and
cmc
mov
inc
mov
cmps
lock
test
mov
pop
inc
adc
xor
push
push
inc
leave
shl
mov
add
dec
cmc
or
stos
gs
ss
mov
push
ds
xchg
cmp
imul
cmp
jns
jl
ins
daa
in
pusha
hlt
pop
xor
ret
nop
xchg
call
std
ds
(bad)
fisttp
bnd
jecxz
call
push
inc
movs
into
mov
fwait
hlt
add
or
adc
adc
sti
jae
popa
sub
sar
mov
push
retf
mov
mov
lods
cdq
push
repnz
test
lods
sub
add
or
dec
xor
js
adc
test
xor
mov
or
lahf
xchg
fsub
jae
mov
adc
not
mov
dec
adc
movs
stc
add
pop
test
sub
repz
xor
mov
cwde
das
or
je
xchg
xor
jmp
fmulp
xchg
xchg
ds
dec
dec
pop
xchg
out
mov
add
ret
mov
push
pop
add
mov
stc
out
outs
sti
arpl
sub
xor
inc
pop
cmc
(bad)
mov
mov
fidiv
call
pop
xor
dec
imul
sbb
cmp
out
mov
mov
mov
mov
and
sub
mov
push
xor
jno
mov
mov
loopne
push
test
xchg
popa
rcr
jl
sbb
sub
mov
fsubr
ja
clc
xor
mov
mul
fisubr
(bad)
push
(bad)
int
cmp
imul
mov
sub
sub
sub
mov
sbb
push
push
or
aad
ds
push
inc
push
in
out
mov
aam
sbb
xchg
test
push
inc
ret
pop
in
jge
mov
lods
shl
movs
jb
hlt
rol
dec
jae
pop
adc
dec
jp
cdq
mov
aad
push
daa
psllw
int3
sbb
mov
inc
push
push
nop
xor
cli
jmp
xchg
xor
sti
jnp
cs
jmp
clc
pop
add
les
les
and
xchg
js
pushf
and
test
iret
(bad)
test
sbb
ss
mov
mov
xchg
xlat
sahf
jns
fstp
sub
movs
outs
in
inc
ror
sub
loop
sbb
mov
jmp
inc
mov
int
mov
std
inc
lds
dec
sub
jge
into
adc
xchg
inc
xor
call
xor
movs
inc
fnstenv
sti
sub
arpl
lods
pop
out
pop
ficomp
mov
out
mov
out
jno
or
cmp
push
dec
es
fild
mov
cmp
mov
push
add
add
inc
retf
xor
mov
adc
aaa
push
ds
imul
rcr
loope
xchg
mov
fidiv
mov
and
add
and
pop
or
scas
sub
add
mov
loope
clc
rcl
jbe
popf
in
cli
test
gs
int
dec
popf
cwde
dec
inc
xchg
(bad)
push
(bad)
out
in
mov
test
(bad)
rcr
loopne
daa
cli
push
addr16
or
mul
hlt
fwait
fwait
cmp
mov
ds
ret
sub
jle
pop
aas
cs
retf
test
push
cmp
pushf
fisub
(bad)
mov
hlt
inc
stc
mov
or
jle
out
sbb
cmps
or
mov
popf
adc
dec
stos
jmp
cmp
ds
add
outs
jp
mov
int3
dec
shl
lahf
or
ret
sub
les
dec
sbb
push
push
addr16
or
dec
mov
xchg
mov
or
add
dec
jno
dec
and
gs
pop
repnz
cmps
mov
adc
and
mov
sbb
dec
ficom
xlat
mov
push
retf
xchg
or
aas
dec
(bad)
pop
push
xchg
ficom
test
pop
xchg
iret
push
into
mov
neg
scas
mov
sbb
ds
outs
xor
push
loopne
sbb
cmp
cmp
popf
push
xchg
hlt
sbb
sub
jbe
scas
pop
mov
pop
push
pushf
sbb
jle
push
dec
cld
adc
cdq
fldenv
xor
js
fidiv
jb
popa
std
xchg
in
jge
mov
les
inc
retf
push
jae
mov
push
fstp
pop
les
cmp
hlt
dec
mov
push
cmc
cmp
inc
loop
dec
sbb
iret
rol
mov
es
repnz
push
add
pusha
cmp
je
add
(bad)
sbb
rcl
loope
ret
inc
je
rcr
rcl
loopne
cdq
and
or
cmps
sbb
pop
cmp
cmc
or
test
sbb
test
test
leave
and
aad
pop
mov
sub
or
fwait
test
xor
ins
mov
fadd
cmp
push
and
mov
add
(bad)
lock
shl
lock
add
pop
out
popf
mov
jle
mov
push
xchg
test
(bad)
xor
mov
xchg
and
push
sub
scas
movs
jge
cmp
ror
ss
loop
loopne
pop
pop
sbb
sub
je
jecxz
adc
pop
pop
mov
mov
push
popf
xor
fcomi
dec
sub
dec
mov
pushf
add
scas
mov
cmp
sub
jb
add
xor
push
jmp
shl
pop
cmps
dec
rcr
sub
stos
push
jmp
xor
cmp
scas
std
jo
or
pop
mov
push
xchg
dec
fcmovu
xor
sub
xchg
xchg
stos
jg
into
je
add
cmp
xchg
sbb
ins
mov
cwde
out
dec
jmp
xchg
lods
das
push
lods
shl
dec
pop
rcl
cmp
hlt
and
sar
mov
jg
inc
mov
jne
stc
aas
loope
fwait
imul
push
(bad)
dec
jo
das
in
xchg
stos
gs
xor
pushf
xchg
xchg
or
enter
fwait
inc
mov
out
ja
pop
rcr
inc
cld
mul
adc
cmp
mov
sbb
xor
xchg
or
aad
stos
jno
push
add
mov
push
test
inc
sbb
fldenv
jns
dec
cmp
xor
arpl
mov
out
(bad)
xlat
nop
mov
not
cs
addr16
xchg
or
iret
mov
fstp
jnp
push
push
lods
test
ds
(bad)
stc
lds
mov
jno
fwait
div
pop
fiadd
sbb
cmp
outs
nop
mov
pop
jae
lock
sub
mov
push
vsqrtpd
cmp
mov
or
xchg
scas
ret
push
sub
aad
mov
xor
inc
add
add
dec
outs
and
adc
xchg
in
and
jg
xlat
or
mov
jge
and
repnz
aad
mov
xchg
add
jecxz
imul
mov
mov
xor
xor
dec
sbb
push
lea
cli
jmp
mov
loopne
sub
out
jle
jmp
out
(bad)
jno
push
leave
gs
repz
jmp
shr
and
xchg
(bad)
stc
hlt
icebp
(bad)
pop
xchg
jge
ror
adc
pushf
sbb
jp
ror
out
fwait
je
movs
lds
into
dec
call
cmp
xor
xlat
outs
popa
xchg
cmc
fidivr
das
ss
cmps
jmp
mov
inc
ret
popf
les
ret
pop
in
retf
cmp
shl
sahf
xor
sahf
retf
nop
int
ret
jbe
and
hlt
pop
xchg
pop
xchg
xchg
stos
adc
clc
pop
adc
add
add
sbb
mov
jo
xor
hlt
adc
mov
or
xchg
pusha
xor
xchg
jo
js
int3
inc
fcmovnb
adc
mov
or
cmp
aaa
push
xchg
cmp
mov
jcxz
jp
ins
inc
gs
mov
cmp
jge
inc
in
popf
(bad)
jg
fnstcw
aas
fistp
push
and
loopne
mov
into
out
mov
dec
mov
fnstcw
cmp
push
jl
imul
leave
sbb
add
outs
push
dec
shr
and
mov
or
ins
test
adc
ss
nop
(bad)
push
out
push
jle
mov
out
lds
add
sar
jmp
stos
push
push
cli
add
aam
mov
cs
push
pop
pop
out
and
aad
mov
sbb
das
in
call
je
cmp
mov
push
mov
lds
mov
inc
les
cmp
imul
inc
xor
mov
frstor
daa
jmp
mov
mov
imul
test
cs
jb
stos
pop
pop
add
test
mov
aam
sbb
mov
pop
inc
push
cmp
test
pop
loop
or
pop
mov
enter
aad
out
jl
mov
cmp
push
repnz
jne
jnp
fwait
mov
mov
daa
mov
add
mov
add
(bad)
jae
outs
push
or
imul
xchg
or
hlt
mov
and
push
adc
fistp
push
ret
repz
leave
popf
or
nop
inc
pop
fistp
loope
add
sahf
sbb
iret
hlt
pushf
fild
dec
sbb
sbb
nop
(bad)
fdivp
movs
mov
call
and
ss
xor
add
xchg
in
jae
pushf
dec
std
xor
dec
(bad)
mov
gs
adc
jmp
mov
dec
ins
sbb
lds
in
mov
cs
push
hlt
xchg
(bad)
cwde
daa
cwde
mov
mov
add
nop
and
cli
sbb
mov
sbb
stos
adc
repz
icebp
(bad)
inc
push
je
xchg
(bad)
sbb
jns
xlat
test
pop
inc
retf
adc
jp
sub
cdq
sbb
retf
lea
pop
and
jb
pop
push
xchg
and
dec
es
cmp
cmps
mov
xor
je
adc
dec
cmp
cmps
ja
outs
shl
xchg
jmp
mov
dec
sti
sub
dec
mov
cmps
inc
or
push
inc
jg
mov
pusha
std
iret
inc
mov
cmps
push
mov
les
lods
jne
pop
rol
push
into
and
ror
inc
mov
xchg
scas
test
pushf
xlat
dec
push
mov
mov
mov
ret
rcl
enter
adc
jmp
repz
cld
jo
xlat
and
xchg
sti
lahf
rcl
pusha
ss
jns
fstp
in
outs
jnp
andnps
mov
push
sub
inc
mov
mov
sub
cs
cmp
jns
dec
repz
push
push
mov
sub
out
ins
inc
inc
jns
pop
inc
nop
cmp
push
out
out
mov
aam
outs
pop
or
leave
(bad)
dec
fimul
cmp
adc
dec
adc
outs
mov
sub
jecxz
cmp
out
aam
outs
aas
inc
pushf
test
dec
lods
aam
(bad)
pop
iret
xchg
and
jnp
jmp
sbb
or
push
and
aam
inc
cmp
jnp
fbld
dec
movs
mov
jl
pop
jg
cmp
nop
int
test
mov
movs
jbe
mov
repz
cmp
xor
xchg
sbb
or
pop
jle
add
fcmovnu
fs
push
loope
push
(bad)
fldcw
(bad)
cld
out
int
jle
and
retf
daa
retf
cmp
jb
push
jns
mul
adc
test
or
sub
call
test
(bad)
ret
push
nop
fs
inc
dec
jg
xchg
idiv
xor
adc
mov
sbb
fwait
call
in
bound
adc
mov
mov
push
pop
aas
ds
out
jmp
fwait
or
mov
cdq
mov
inc
xor
out
sub
mov
pop
xchg
fs
retf
mov
pushf
sbb
sub
call
sar
into
fdivrp
pusha
lds
scas
jno
xor
movs
ror
sub
xor
dec
movs
cdq
fild
sbb
adc
nop
mov
cmps
not
push
mov
push
into
inc
out
jecxz
movs
(bad)
mov
retf
xchg
xchg
mov
(bad)
xchg
sub
jmp
stos
or
leave
push
sbb
aam
js
and
cmc
add
stos
idiv
xchg
mov
test
pop
and
push
push
cdq
into
dec
call
push
mov
lea
pop
(bad)
mov
push
dec
das
enter
movs
xchg
xor
dec
cmp
aam
cld
pop
xchg
popa
pop
retf
cmps
pop
lahf
add
xchg
mov
xchg
hlt
add
xchg
push
test
mov
dec
xchg
sub
ret
and
cmp
add
inc
or
or
lods
mov
sti
push
and
imul
and
xor
ds
shl
pop
mov
pop
std
outs
adc
mov
xlat
cmp
mov
xchg
movnti
fisubr
add
xchg
inc
(bad)
inc
xor
mov
sahf
jle
lds
jno
ds
push
and
push
xchg
std
jge
cmp
pop
cld
push
lock
and
xor
sub
dec
jle
mov
mov
cmps
imul
xchg
mov
adc
dec
in
jmp
ds
in
and
std
arpl
push
arpl
mov
inc
adc
mov
and
call
in
test
pop
idiv
push
fsubr
adc
sub
mov
push
cli
pop
pop
push
sbb
(bad)
push
mov
out
xor
(bad)
aam
cmp
mov
std
cs
popa
xchg
xchg
push
(bad)
cli
pop
sbb
inc
rcr
inc
mov
(bad)
push
xchg
sahf
ins
cdq
or
xor
push
test
ja
sbb
xchg
retf
stc
sti
add
(bad)
cmc
loop
mov
jg
cmp
loop
cmp
dec
sub
sbb
in
test
retf
push
retf
and
dec
fcomp
pop
retf
mov
sbb
fcomip
fstp
ret
iret
ins
and
shr
mov
mov
and
lods
jmp
cwde
or
inc
inc
or
dec
jg
sub
add
push
movs
dec
sub
mov
fcmovnu
dec
xor
pop
ins
mov
nop
lods
hlt
dec
stos
loop
movs
enter
jnp
bound
jns
adc
test
mov
adc
sub
sub
mov
xlat
lahf
sti
mov
cld
les
test
sbb
xchg
fs
mov
xchg
mov
pop
aaa
arpl
out
inc
add
fcmovnbe
retf
lahf
jmp
mov
add
add
out
mov
inc
and
mov
xchg
xor
sub
jno
jnp
jne
push
pop
add
mov
shr
mov
loope
stc
push
call
test
and
out
movs
or
dec
or
mov
out
popf
jge
imul
push
mov
dec
hlt
jae
imul
dec
lock
mov
ret
bts
mov
(bad)
mov
pop
fucom
xchg
jp
cmps
push
int3
pop
jnp
sbb
dec
push
popa
addr16
dec
or
adc
jne
cmp
ins
dec
rcl
pop
test
stc
dec
cmp
das
arpl
pop
xchg
push
dec
pushf
(bad)
(bad)
mov
movs
mov
xchg
in
dec
(bad)
pop
std
xchg
fdiv
movs
and
and
jno
add
pop
call
pop
repz
cmp
or
or
lahf
rep
sahf
xor
fucomip
mov
inc
xlat
inc
adc
mov
mov
mov
add
add
call
sti
sti
dec
jle
lock
and
cmp
es
pop
loope
xchg
mov
out
jo
(bad)
dec
mov
nop
fmul
xchg
sub
mov
loop
pop
pusha
pop
adc
mov
push
ficom
jae
cmps
cmp
and
jo
out
xchg
loopne
into
push
outs
xchg
ins
jae
add
lahf
inc
mov
pop
iret
pusha
pop
repnz
xchg
ss
fnstsw
xchg
sbb
sub
call
lods
std
repz
popa
dec
inc
sub
push
(bad)
enter
(bad)
je
inc
(bad)
daa
idiv
push
cmp
movs
pop
adc
imul
jo
cdq
jnp
sbb
pop
lods
fcmove
es
call
xor
stc
mov
call
fidiv
jo
add
retf
scas
sbb
push
adc
nop
inc
lods
or
sbb
les
xchg
pop
jmp
stos
jno
sar
out
sbb
lea
sbb
xchg
adc
push
popf
sub
cmp
or
push
sbb
inc
fsubr
das
test
mov
shr
sbb
mov
cmp
jae
push
mov
test
js
jl
(bad)
push
pop
dec
popa
mov
mov
ja
ins
fdiv
mov
add
mov
mov
popf
jno
mov
std
or
push
adc
jle
cmp
gs
aad
rol
xchg
push
in
call
enter
(bad)
xor
inc
adc
pop
ss
dec
mov
pop
es
mov
mov
daa
adc
fstp
add
shl
test
push
repnz
cwde
shl
or
sbb
cmp
repz
fwait
xor
adc
sub
xor
ja
fidiv
pminsw
setno
das
jecxz
lea
(bad)
mov
sbb
int
fdiv
stc
aaa
mov
sbb
mov
retf
xchg
and
vunpcklps
xchg
outs
test
cmp
lods
pop
pop
jne
stc
push
sahf
clc
push
mov
adc
add
int3
ja
add
or
add
nop
leave
xor
pop
cmps
mov
cdq
push
sar
inc
fcom
pop
or
scas
ins
mov
dec
add
cmp
(bad)
(bad)
leave
mov
popa
test
jmp
jge
cmps
movs
fsubrp
xor
xchg
sti
cdq
hlt
and
fistp
ret
jmp
mov
dec
add
pop
cdq
fstp
imul
jmp
mov
pop
fisubr
cwde
cmp
jmp
sbb
sub
jle
jnp
pop
test
inc
xchg
inc
movs
icebp
push
cmps
cld
aad
aam
test
sbb
or
adc
mov
mov
jne
push
fs
inc
test
scas
mov
dec
mov
cmc
jmp
jb
jne
or
dec
retf
retf
jo
jmp
jb
rcl
in
push
ret
cdq
xor
mov
pop
mov
adc
and
pop
add
pop
xor
cwde
cmp
inc
inc
mov
ss
mov
mov
call
arpl
retf
sbb
mov
fist
shl
repz
xor
test
in
mov
mov
jp
sbb
aas
mov
mov
cmp
jno
xor
adc
mov
sbb
mov
and
push
fadd
dec
dec
cld
jae
cmp
das
ret
mov
inc
mov
and
mov
cdq
sub
popa
or
cmp
jg
loope
and
fisttp
cwde
sbb
in
add
int3
add
popa
outs
jne
sbb
movs
mov
dec
adc
lahf
mov
ja
std
mov
daa
inc
jmp
mov
mov
arpl
push
std
pusha
int
dec
test
test
or
jl
push
int3
xlat
mov
xchg
repnz
inc
xchg
or
stos
ins
addr16
clc
stos
cs
ins
adc
and
pushf
push
jo
sub
scas
sub
sbb
and
dec
not
mov
push
or
fdivr
sahf
leave
push
fs
push
das
stos
es
dec
or
fidivr
out
push
sub
mov
loopne
or
movs
(bad)
push
or
cmp
and
sbb
inc
sbb
mov
push
sub
xchg
repnz
xchg
mov
(bad)
pop
xor
int
test
es
stc
jmp
or
(bad)
jecxz
sbb
pop
mov
(bad)
mov
xor
jo
mov
push
xor
popa
mov
fs
dec
add
adc
pop
int3
iret
test
pusha
retf
aam
ret
jb
gs
xchg
mov
fild
sub
aaa
jmp
xchg
add
fst
call
mov
sbb
mov
jno
dec
mov
jne
pop
jns
push
sbb
loop
ins
test
sahf
in
mov
pop
push
push
js
sbb
pop
and
aam
rol
xor
cmp
xchg
xor
ficomp
cmc
or
push
out
or
push
das
cmps
adc
mov
xchg
xlat
mov
std
jle
fmulp
jmp
outs
mov
and
add
xchg
test
ja
dec
xor
pop
jl
cld
out
push
dec
mov
jne
inc
sub
dec
jmp
or
(bad)
adc
retf
jg
shl
faddp
sub
jbe
mov
adc
rcr
mov
hlt
cmc
pop
xchg
pop
mov
push
aas
sbb
mov
mov
sbb
test
fld
ins
lods
mov
pop
dec
or
call
dec
cdq
(bad)
imul
lea
cmp
fs
daa
dec
mov
arpl
ror
mov
xchg
cwde
je
sub
js
xor
leave
jecxz
or
cmp
dec
pusha
cwde
or
arpl
mov
xchg
aaa
or
(bad)
mov
sbb
sbb
dec
(bad)
ds
fidiv
add
ror
sbb
das
sub
and
adc
inc
sbb
mov
xlat
lods
scas
add
fstp
mov
fld
mov
xor
inc
jmp
(bad)
push
jmp
dec
adc
cmp
mov
cmps
js
mov
pop
cmc
sbb
mov
mov
pop
inc
aaa
mov
add
lea
mov
jp
xchg
jo
retf
aas
out
idiv
js
test
(bad)
inc
dec
mov
jae
ret
test
(bad)
xor
out
ss
mov
push
call
sbb
das
mov
mov
add
std
push
and
sbb
fcomp
mov
push
xor
inc
xor
push
cli
arpl
push
pop
sahf
mov
jae
stos
and
mov
jb
pop
(bad)
mov
push
out
mov
cmp
sbb
inc
xor
and
scas
jg
cdq
pop
rcl
push
imul
cmc
aaa
xor
hlt
pop
test
jns
retf
and
sub
xor
fst
mov
jb
or
dec
scas
xor
pusha
aas
xchg
inc
sub
adc
mov
fnstsw
pop
push
or
imul
xchg
loop
inc
fmulp
stos
dec
mov
je
mov
dec
mov
xchg
cwde
scas
inc
(bad)
fiadd
jmp
jnp
pop
mov
into
lods
and
repz
sub
jnp
daa
add
shl
pop
mov
gs
mov
jmp
and
imul
pop
scas
jmp
mov
mov
mov
and
mov
mov
add
fs
mov
bound
clc
inc
jmp
inc
inc
out
xchg
es
sbb
or
sbb
mov
xchg
je
lods
push
mov
xor
push
push
cmp
or
mov
mov
into
xchg
jmp
hlt
or
lods
ret
ret
in
push
lds
xor
pop
jae
mov
cmps
call
(bad)
gs
pop
jg
mov
jl
(bad)
lods
push
repz
sub
xchg
sbb
ds
bound
stos
xchg
nop
mov
lahf
mov
jns
icebp
es
data16
pop
es
push
cmp
ror
mov
sub
(bad)
dec
(bad)
jmp
push
mov
shl
mov
clc
das
fist
xchg
cli
xchg
add
sar
jp
int
inc
in
shl
jmp
jbe
movs
pop
lds
push
sub
jle
int3
xor
imul
ins
pop
aas
scas
in
cdq
mov
jne
jmp
adc
mov
sub
pushf
push
and
shr
cmp
push
inc
or
dec
sbb
mov
loop
inc
push
push
pop
fisttp
mov
jl
loopne
enter
ja
and
int3
ret
add
aam
ret
push
retf
mov
jmp
lahf
sub
adc
xor
mov
ror
inc
ret
jmp
or
add
push
pop
test
jo
inc
or
scas
int
cmp
addr16
mov
push
mov
repnz
xchg
and
scas
add
out
lock
out
mov
ficomp
scas
call
fbstp
repz
and
stos
in
mul
sub
push
test
xor
iret
pop
mov
ficom
inc
adc
sbb
fst
ins
ja
jp
ret
sbb
push
mov
das
cld
xchg
popf
nop
mov
and
and
outs
pusha
push
retf
repz
push
mov
mov
xor
mov
push
jmp
or
in
cmp
pushf
in
mov
test
mov
sbb
std
jo
xor
mov
or
fdivr
(bad)
icebp
popa
nop
cs
fiadd
out
gs
mov
adc
sahf
out
sub
fisubr
daa
sbb
loope
lods
mov
aas
mov
dec
pop
push
add
iret
mov
imul
sbb
dec
icebp
and
xor
jnp
and
push
clc
nop
cmps
pop
and
stos
pop
mov
fadd
into
loope
sub
jns
or
xlat
pusha
jbe
mov
imul
jecxz
ret
xchg
fild
sub
adc
pop
mov
and
out
ret
and
mov
add
(bad)
fnstcw
imul
and
jecxz
repz
sahf
jbe
mov
mov
dec
(bad)
mov
push
and
sahf
(bad)
pop
loopne
iret
adc
shl
inc
and
and
xchg
out
and
jp
(bad)
stc
mov
xchg
jmp
(bad)
scas
and
in
push
mov
mov
jle
fsub
dec
mov
push
mov
retf
cmps
pop
sbb
test
int
adc
jo
adc
shr
sbb
push
(bad)
mov
dec
cmps
aaa
in
xlat
addr16
cmovg
sbb
es
inc
or
loop
mov
xchg
out
xlat
rol
jmp
aam
out
mov
adc
dec
(bad)
and
movs
cmps
ja
ins
out
add
jmp
push
int3
ror
jge
push
das
(bad)
dec
fist
sub
loop
inc
jg
cs
movs
mov
mov
into
mov
ds
mov
cmp
jb
call
push
mov
fs
or
mov
jb
dec
cs
add
mov
(bad)
mov
stc
mov
jmp
push
cs
scas
pusha
adc
out
mov
mov
sub
shl
shr
scas
push
xchg
and
xor
mov
and
mov
or
ss
mov
add
adc
push
dec
dec
aam
dec
adc
daa
jp
call
dec
enter
out
hlt
mov
cwde
mov
and
iret
ins
sub
or
dec
shl
xchg
mov
jp
dec
dec
les
adc
aad
dec
out
cmp
sub
pop
outs
xor
push
fwait
mov
pop
sub
or
pop
lds
(bad)
jle
ins
cmp
mov
int
ins
cli
dec
aad
sahf
arpl
xchg
xchg
push
addr16
(bad)
ins
call
jmp
jl
pusha
xchg
popf
cmps
or
or
or
lock
cld
gs
push
inc
out
jmp
sub
mov
mov
mov
scas
or
cmc
adc
daa
push
out
mov
fmul
jb
and
jg
outs
test
ja
mov
(bad)
mov
sbb
rcr
popa
jo
aaa
shl
sbb
sahf
push
and
sub
or
mov
fsubr
xchg
push
retf
addr16
pusha
leave
push
mov
push
movs
rcr
mov
jle
shl
cmp
stc
mov
cmp
rcr
aas
add
jns
repz
jbe
mov
and
inc
in
mov
jns
push
enter
inc
daa
repz
cmp
add
mov
mov
and
loop
loope
in
cmp
sti
mov
stc
inc
popa
cli
adc
ret
sbb
or
and
test
mov
mov
(bad)
ret
iret
jmp
mov
movs
cmp
jae
enter
and
outs
iret
dec
mov
in
cmc
and
add
add
mov
xor
jno
xor
cmc
or
pop
pop
test
sub
outs
dec
xchg
test
psubb
sbb
fld
mov
cmp
inc
mov
leave
xchg
mov
inc
push
fs
inc
mov
dec
scas
ror
inc
push
dec
ss
ror
cmps
xor
jecxz
mov
push
xlat
pop
mov
fcomp
out
and
adc
mov
bound
jecxz
outs
push
cmp
cmps
pmullw
xor
retf
into
sub
cmps
pop
enter
dec
xlat
pop
or
or
push
pop
in
aam
xor
xchg
clc
mov
ret
and
enter
(bad)
outs
div
sub
adc
and
data16
xchg
cmps
cmps
gs
(bad)
pusha
or
inc
sbb
cli
pop
jne
add
jnp
jb
cld
cmp
adc
sahf
push
not
fidivr
mov
xor
jecxz
fimul
dec
sbb
mov
cs
dec
ret
cmp
sahf
mov
(bad)
mov
fldcw
cwde
sub
lods
ss
in
cmp
les
push
test
jecxz
mov
out
pop
xacquire
cmp
xchg
pushf
arpl
sub
shl
out
test
lea
inc
mov
shl
test
mul
jns
sbb
jge
daa
scas
fisttp
mov
mov
repnz
(bad)
hlt
popf
clc
push
push
inc
inc
jno
dec
shl
lea
mov
mov
lahf
sahf
dec
fisub
push
dec
or
into
jb
sub
fisub
cmp
les
mov
pusha
jae
inc
cmp
aas
aad
mov
mov
add
(bad)
or
and
cmp
gs
js
clc
ins
jo
jp
cmc
sub
fs
jge
mov
or
sbb
popf
push
pop
dec
lods
xchg
and
jle
daa
add
int
mov
loopne
or
mov
sub
or
inc
aaa
jp
in
mov
push
add
pop
jno
les
mov
ror
loope
fwait
in
and
loope
mov
or
cmp
jo
lea
in
mov
(bad)
lds
(bad)
stc
jecxz
pop
dec
fisttp
leave
pop
mov
mov
jnp
push
xlat
arpl
xor
(bad)
xor
aaa
rcl
sbb
adc
popa
xchg
xchg
aam
sbb
mov
jb
and
mov
loopne
bnd
rcl
push
add
rol
inc
movs
addr16
fninit
mov
add
dec
add
imul
in
enter
leave
xlat
out
fisttp
jle
or
inc
fld
stos
call
(bad)
ret
xchg
inc
push
push
push
push
outs
dec
jno
or
aas
adc
pushf
sub
jecxz
loopne
pop
and
int
retf
sbb
fnstcw
cmp
xlat
sbb
ficomp
cmp
inc
sbb
adc
jge
pop
push
jge
or
pop
mov
std
mov
fucom
inc
mov
sbb
push
mov
push
ins
aaa
or
cmp
in
sub
inc
inc
push
mov
mov
(bad)
jle
push
inc
stos
mov
xor
addr16
ss
out
retf
inc
fldpi
cmp
sbb
inc
mov
icebp
retf
scas
inc
pop
repz
mov
aas
mov
retf
test
adc
mov
int
(bad)
call
mov
jnp
or
ins
ficom
mov
jo
push
nop
stc
lea
cmc
popf
outs
cmc
fstp
adc
adc
ret
mov
pop
(bad)
out
sbb
and
movs
mov
retf
aas
aas
jge
jl
mov
cmps
cmp
fstp
adc
cmps
(bad)
jb
loopne
pop
dec
xchg
mov
cmps
mov
das
out
in
int3
inc
les
sar
sbb
lds
jnp
shl
fs
test
dec
push
les
mov
pop
push
enter
int3
push
cmc
int
mov
movups
jne
pop
jne
adc
inc
mov
(bad)
in
add
(bad)
jne
call
xchg
popa
mov
or
inc
mov
(bad)
or
fs
jns
mov
inc
nop
popa
adc
and
repnz
pop
cmc
scas
(bad)
sti
mov
adc
imul
jge
push
stos
outs
outs
or
lock
add
dec
lods
xchg
cmps
leave
ins
aas
mov
cmp
adc
cmp
nop
or
mov
cmp
inc
rcr
idiv
add
ror
inc
mov
xchg
(bad)
repnz
in
jge
in
loopne
pop
adc
ret
ss
in
jge
(bad)
cmc
pop
mov
add
push
inc
das
pop
test
fwait
gs
(bad)
pop
mov
nop
mov
fs
sub
mov
lods
jb
dec
nop
imul
mov
push
adc
push
jns
mov
ins
mov
jmp
addr16
mov
lds
xor
cmps
xchg
inc
jae
shl
and
pop
data16
fucom
mov
cmp
pushf
je
mov
fmul
daa
out
ja
dec
push
and
rol
fidiv
stos
lods
popf
clc
mov
pop
jb
xchg
jl
jmp
int3
inc
jp
add
in
adc
ret
pop
mov
repz
or
xchg
sbb
pop
movs
cwde
fadd
out
sahf
icebp
add
jmp
pop
jns
jo
inc
pop
xchg
or
push
adc
push
dec
mov
cmp
rol
out
xor
std
xchg
adc
fwait
dec
stos
add
ror
mov
fdiv
push
jg
fcom
sahf
and
out
sub
jno
mov
jl
shl
ins
sbb
stc
in
mov
call
pshufw
xchg
push
nop
push
and
mov
jmp
(bad)
dec
xchg
jae
dec
int3
stos
repz
in
xor
jp
in
sti
mov
push
jno
pop
out
mov
adc
mov
rcr
rcr
cmp
sbb
xchg
and
loop
out
inc
pop
or
shr
lea
cmp
or
aad
pop
(bad)
int
pop
mov
cmp
ss
lock
call
inc
pop
lahf
mov
xor
out
cld
or
adc
adc
(bad)
adc
pop
fistp
sti
iret
mov
cmp
fcmovbe
aam
xor
or
ds
loop
jecxz
pop
inc
(bad)
push
and
xor
cdq
xchg
xchg
ins
adc
cmp
sub
stos
mov
jp
cli
mov
and
dec
jns
mov
xchg
mov
xchg
test
xchg
inc
out
std
cwde
gs
and
dec
xchg
add
add
mov
outs
popf
fstp
sqrtps
inc
dec
rcl
ss
mov
std
mul
push
in
ja
repnz
sub
cmps
cmps
sahf
(bad)
dec
mov
out
jle
out
mov
add
pop
sub
mov
or
ret
rcr
mov
sbb
in
push
ins
sar
js
stos
mov
dec
imul
aas
mov
dec
inc
cmp
xchg
pusha
cmp
ror
xchg
dec
adc
popa
loop
(bad)
loope
or
push
adc
sbb
jo
jae
es
pop
mov
cli
xor
sti
outs
lahf
adc
movs
sbb
jge
aaa
adc
and
push
mov
out
lods
iret
cdq
xlat
arpl
xchg
push
fnstsw
rol
push
iret
cmp
jecxz
enter
mov
mov
cmc
iret
retf
popf
fidivr
sub
add
call
adc
jge
fst
aas
in
xchg
pop
stos
push
sub
outs
inc
std
repnz
jecxz
push
stos
pop
cs
popf
fcomp
ins
popa
cmps
shr
push
xchg
repnz
pop
or
inc
inc
mov
js
xchg
mov
cmps
pop
out
cmp
sbb
cmp
sub
das
inc
ss
aas
in
push
loopne
ret
xor
lods
inc
test
icebp
pusha
call
scas
jecxz
pop
fistp
out
out
ret
mov
fcomi
pop
loop
pop
inc
pop
adc
mov
xchg
cli
dec
int3
fldenv
push
dec
daa
cmp
adc
inc
add
icebp
ret
repz
adc
leave
loopne
cld
fcom
sti
mov
cs
push
enter
sbb
xor
lods
pop
popf
adc
sub
cmps
ins
jns
data16
mov
loope
adc
dec
fsub
daa
and
mov
xor
dec
mov
jecxz
jo
push
fdiv
in
xchg
cmc
xchg
imul
inc
addr16
pop
lahf
adc
ficom
mov
rol
inc
push
adc
xchg
pop
xchg
fs
cmp
inc
int3
jl
pop
adc
cmps
enter
popa
dec
inc
mov
sbb
or
sub
or
sub
inc
outs
in
scas
lds
int
je
lahf
and
ror
push
or
inc
rol
pushf
pop
mov
mov
add
mov
adc
and
adc
pop
neg
or
sub
ja
xchg
lahf
add
sbb
pop
gs
adc
cli
es
call
xchg
inc
call
frstor
or
mov
out
push
pushf
or
add
xchg
jle
push
das
dec
cld
jae
sti
out
mov
cli
cpuid
iret
and
test
cmp
mov
sub
mov
and
cmp
inc
leave
dec
cmp
cmp
call
pop
aad
pop
popa
popa
out
shl
xor
jnp
ds
cmp
inc
cmc
ins
push
xor
ja
mov
adc
jmp
(bad)
fsubr
add
call
dec
cmc
push
shr
mov
xchg
outs
and
inc
int3
cmp
or
mov
in
gs
push
ss
imul
or
frstor
popf
push
je
(bad)
fadd
push
imul
push
in
jns
inc
fmul
pop
ins
nop
ficom
and
sub
pop
sbb
lods
sub
lds
cs
cli
out
movs
jge
pop
and
(bad)
fild
dec
xor
adc
xor
imul
data16
and
push
pushf
lods
stos
sbb
imul
push
jb
pop
inc
pushf
retf
aaa
xchg
pop
scas
pop
inc
sbb
adc
cld
mov
lea
cmps
sub
sub
shl
sbb
push
stos
push
jne
in
in
and
add
enter
call
es
push
add
mov
ins
bound
fucom
in
sub
pushf
scas
or
add
outs
packssdw
or
xchg
mov
in
(bad)
lock
test
loope
cmc
mov
or
sbb
pop
add
out
jne
js
mov
jp
and
(bad)
sbb
xchg
push
pop
test
push
sti
inc
cld
sub
ret
mov
adc
sahf
fimul
cmps
test
add
sbb
cld
addps
add
adc
dec
jb
mov
push
push
sub
push
scas
mov
dec
pop
std
add
xor
cwde
sbb
push
call
test
or
loop
leave
das
adc
jo
or
push
mov
scas
push
dec
mov
sub
fidiv
imul
push
jb
leave
ins
aad
push
(bad)
stc
xchg
lahf
cmp
data16
sub
sbb
popf
inc
pop
and
mov
and
adc
pushf
(bad)
shr
js
lock
stc
mov
dec
mov
test
mov
push
shl
nop
in
pop
cmps
or
sub
test
stc
pop
adc
push
sbb
sub
mov
(bad)
out
lahf
push
aas
js
icebp
out
push
add
xchg
in
mov
gs
imul
movs
xchg
push
jns
or
sub
push
and
cmp
or
mov
adc
(bad)
sub
hlt
or
mov
loop
test
jle
test
xchg
sbb
push
rol
xor
scas
(bad)
pop
xlat
mov
ins
pop
xchg
xor
out
mov
pop
dec
mov
dec
imul
jo
std
fcmovne
inc
ja
and
add
out
stc
lods
(bad)
inc
xor
mov
pop
sti
(bad)
cmc
pop
rcr
add
(bad)
(bad)
clc
pop
inc
dec
int3
push
cmp
and
nop
jb
dec
adc
add
mov
sti
cmp
retf
aaa
enter
(bad)
mov
jg
mov
inc
xchg
sub
xchg
push
mov
adc
jecxz
cmp
gs
sub
lods
lods
das
dec
std
cmc
test
fwait
or
sbb
inc
sahf
push
(bad)
xor
jmp
test
sti
cmp
arpl
scas
(bad)
xor
jmp
fldpi
js
(bad)
fimul
cmp
adc
jbe
fwait
xchg
pop
rcl
adc
cmp
or
cmp
fmul
arpl
add
sub
mov
cmps
xchg
repnz
cmp
add
push
sub
xchg
inc
add
jnp
xchg
rol
scas
xlat
sti
inc
imul
pop
mov
mov
ss
(bad)
faddp
shr
cmc
add
mov
mov
loop
xor
mov
mov
(bad)
mov
mov
jae
xchg
pop
jbe
ror
test
out
xchg
das
or
xor
push
add
gs
inc
adc
add
cmp
jecxz
add
inc
fcomi
add
or
popf
sbb
mov
adc
cmc
imul
adc
pop
es
imul
push
cmp
push
and
xor
cmp
(bad)
cmps
dec
scas
sbb
or
fcomp
inc
pop
shl
sub
ret
adc
xchg
or
adc
jecxz
dec
or
cmp
cmp
(bad)
mov
(bad)
mov
sub
cld
(bad)
dec
sub
pop
cld
test
mov
loopne
mov
jg
std
adc
push
xor
or
pop
loopne
test
cmc
cli
nop
cli
add
ja
cmp
dec
xchg
xor
ss
sar
pop
push
or
mov
addr16
test
into
xlat
in
out
lds
mov
adc
dec
inc
mov
xor
or
aas
std
inc
test
aaa
jnp
push
adc
aaa
lock
inc
push
mov
loopne
ss
leave
mov
jg
arpl
mov
pop
push
ss
sub
pop
xor
add
and
imul
(bad)
mov
cmps
add
sub
mov
or
pop
call
cmp
pop
and
outs
loopne
sbb
pop
ins
xlat
mov
mov
mov
dec
sub
repz
jne
outs
scas
in
aad
(bad)
or
lods
xchg
dec
ret
stc
icebp
enter
not
add
mov
lds
jp
dec
jns
cwde
sbb
lea
cmp
lea
push
add
out
inc
loope
ret
dec
mov
(bad)
in
hlt
pushf
ret
popa
adc
push
sbb
sub
aaa
sub
cmp
add
cmc
repz
pop
inc
sub
loop
loopne
mov
jmp
push
inc
mov
in
or
fistp
mov
repz
cwde
in
pop
test
jbe
ss
inc
pusha
imul
push
ds
add
hlt
les
daa
cli
mov
inc
outs
(bad)
fs
push
jo
out
jl
sub
add
cwde
pop
mul
or
sbb
sbb
(bad)
and
lea
push
(bad)
mov
jg
jmp
js
dec
dec
add
retf
lds
sub
add
jbe
jae
bound
mov
test
jmp
and
cmps
xlat
daa
test
mov
and
pop
push
in
and
xchg
retf
ret
sub
in
repnz
dec
repnz
inc
out
imul
in
xor
outs
mov
fs
lahf
mov
in
cwde
clc
pushf
pop
inc
and
mov
push
leave
jo
outs
cdq
(bad)
xchg
dec
inc
stos
jae
out
not
add
mov
pop
jb
mov
mov
in
push
test
push
cmp
test
mov
mov
mov
and
call
ss
push
loopne
ins
and
dec
and
cdq
cmp
dec
and
(bad)
push
or
mov
and
mov
es
jb
pop
lock
or
ja
mov
ret
adc
inc
data16
or
(bad)
imul
call
mov
jp
les
in
push
outs
scas
aas
cmps
call
cs
mov
leave
aas
shl
push
pop
enter
mov
push
add
or
enter
push
movs
sbb
ins
inc
rcr
fst
das
lock
mov
pop
lock
cmp
push
xchg
sub
popa
aas
fs
xor
sbb
clc
cld
adc
adc
js
and
cmps
adc
fwait
dec
inc
retf
(bad)
dec
and
shl
repnz
push
test
pop
ret
and
sub
xlat
nop
jg
fst
enter
cmp
add
mov
outs
test
pop
rol
test
jno
pusha
dec
retf
mov
test
int3
jp
cmp
pop
adc
sbb
inc
mov
pop
push
inc
dec
or
fld
mov
pushf
ins
lods
push
jne
lods
inc
push
push
bound
mov
inc
add
pop
jl
dec
mov
lods
pop
cdq
adc
pop
lods
mov
adc
popf
pop
cs
jmp
xchg
xor
mov
pusha
retf
dec
fwait
jnp
loope
xor
mov
(bad)
or
sub
addr16
mov
rcr
inc
iret
test
es
and
int
add
inc
push
fmul
xchg
jp
jns
dec
not
jle
ja
xchg
pop
data16
xor
mov
leave
test
pop
ins
sbb
stos
cmp
repz
sub
in
ffreep
(bad)
rol
xor
and
mov
sub
xor
xchg
mov
and
sub
movaps
inc
pushf
ja
loopne
clc
in
add
mov
jne
je
icebp
push
dec
xchg
mov
add
jmp
mov
and
aam
aam
mov
or
dec
mov
jmp
jecxz
repz
or
sbb
je
in
jmp
lock
aam
pmullw
sub
fmul
cmps
jbe
xor
fwait
adc
test
stos
push
pushf
pop
xor
mov
jno
hlt
xchg
mov
(bad)
mov
push
add
shl
mov
or
xchg
fs
stos
cmp
out
repnz
repz
cmp
jo
popa
stos
jb
dec
jmp
cmp
pop
pop
movs
mov
and
cmps
fild
(bad)
dec
scas
push
cld
das
clc
int
jb
(bad)
cmp
or
stos
cmp
out
cli
sbb
stos
shl
test
or
sti
in
int3
or
cmp
cmp
pushf
and
fidivr
jnp
xor
int3
out
mov
and
cwde
jecxz
pop
dec
(bad)
in
stos
std
(bad)
mov
add
dec
lahf
xchg
dec
inc
dec
fisttp
es
or
and
loopne
cdq
jmp
jne
pop
test
mov
ficomp
pop
js
mov
sbb
xchg
mov
mov
inc
pop
fwait
in
ds
cmps
pop
push
ss
or
push
loop
push
inc
inc
retf
jne
mov
sbb
adc
test
int
push
add
lods
cmps
shl
es
mov
pop
and
mov
fwait
sub
je
fs
enter
mov
xchg
not
and
xor
daa
mov
sub
ins
rcl
inc
in
inc
lea
in
pop
aam
stos
jle
mov
mov
jle
inc
mov
sub
or
mov
xchg
inc
dec
outs
sbb
(bad)
mov
xchg
add
mov
push
mov
pop
retf
and
ins
mov
cmp
pop
outs
dec
scas
nop
adc
push
imul
dec
mov
cli
adc
cmc
mov
enter
lods
or
scas
ds
mov
out
les
mov
jno
out
push
jno
fst
inc
jle
mov
ins
sbb
bound
fs
or
lods
call
xchg
iret
loope
das
inc
push
cmp
test
in
adc
xchg
pop
dec
mov
dec
inc
pop
cmc
int
and
push
sbb
ret
xor
popf
popf
loop
or
in
jl
lock
or
scas
daa
mov
int3
popa
dec
clc
cmp
cmps
jmp
and
xchg
cmp
jbe
xor
ret
hlt
pop
rol
div
and
ins
pushf
sub
xchg
cmp
xchg
mov
repnz
ror
(bad)
mul
nop
test
mov
lea
(bad)
mov
inc
bswap
out
jo
test
hlt
xor
mov
gs
(bad)
push
sub
jne
cwde
adc
jns
sub
ins
cmp
add
nop
inc
and
aam
ret
adc
fwait
(bad)
retf
ins
loopne
mov
movs
and
jecxz
js
dec
outs
adc
and
mov
(bad)
xchg
push
push
repz
jae
mov
mov
cmp
shr
in
xchg
jecxz
call
(bad)
retf
neg
mov
xchg
test
jge
imul
call
lds
mov
out
jns
ror
dec
push
jecxz
add
stc
popf
sub
dec
sti
iret
arpl
dec
inc
jbe
lods
mov
xlat
dec
sti
mov
jl
dec
aas
je
daa
ja
xchg
cmp
push
mov
pop
rcl
dec
shl
add
(bad)
xchg
adc
adc
imul
xchg
cld
cli
shl
data16
mov
jg
pop
xor
pop
out
and
out
xchg
and
sbb
push
out
cmp
(bad)
fmul
push
jne
enter
test
adc
cld
or
cld
int3
cld
jno
jmp
push
sar
shr
sbb
ss
inc
xchg
pop
push
pop
mov
mov
movs
mov
std
mov
inc
icebp
inc
dec
push
dec
icebp
pop
mov
add
das
lds
cmp
sahf
push
aas
jmp
push
mov
mov
bound
shl
test
push
mov
or
cmc
sub
sti
loopne
inc
clc
xchg
test
mov
pop
inc
repz
jbe
cmp
and
out
sbb
adc
xchg
or
dec
cmp
mov
rcl
ss
repnz
aas
gs
mov
dec
(bad)
fisttp
adc
push
mov
xlat
push
stos
ror
inc
test
push
dec
xchg
scas
push
xchg
fist
ds
sbb
pusha
xchg
xchg
out
xchg
out
scas
inc
cmp
jb
cmp
dec
stos
out
jmp
out
pop
fcmovnb
gs
cmc
leave
call
mov
ss
sbb
xor
daa
adc
out
neg
mov
add
(bad)
stc
jnp
add
jnp
aad
mov
test
test
or
cli
add
xor
xchg
xor
pop
or
xchg
add
sub
mov
ins
fs
nop
jb
push
in
mov
push
clc
mov
dec
ror
pop
and
sub
or
shl
cmp
add
and
sbb
std
xlat
loop
xchg
dec
xchg
call
lods
push
xchg
xor
aaa
xor
cmp
mov
add
and
xor
inc
cmps
xchg
mov
jecxz
jbe
gs
xchg
retf
(bad)
imul
popf
in
arpl
xchg
push
inc
push
pop
in
shufps
push
mov
daa
repz
cmp
jnp
out
arpl
sub
ror
jo
pop
hlt
sub
cmp
lock
jecxz
ror
add
jmp
xor
jns
adc
push
stos
mov
in
das
sub
popa
mov
xlat
es
(bad)
aam
mov
cmps
sub
lds
mov
mov
and
adc
jp
dec
adc
cmp
xchg
cmps
push
lods
(bad)
cld
pop
es
ret
jmp
pusha
jmp
cmp
enclu
cmps
into
adc
movs
outs
inc
push
movs
into
inc
jl
shr
or
scas
inc
out
or
out
jge
ret
sub
inc
stc
cmc
or
push
cmp
mov
sbb
push
push
mov
cmp
call
mov
cmp
icebp
dec
xor
mov
ret
jg
jne
fwait
pop
test
add
push
hlt
inc
mov
adc
and
rcl
bound
arpl
sub
or
(bad)
loope
imul
test
push
int
fwait
jl
sub
mov
cmps
jmp
shl
inc
push
out
into
pop
mov
in
ds
(bad)
sysexit
inc
cmc
jae
shl
rcr
out
lods
mov
loopne
xor
ja
inc
es
mul
adc
test
cld
mov
jg
xor
fsubr
mov
pop
and
sahf
stc
test
retf
push
sbb
cmp
cmc
seto
ss
push
addr16
fisttp
pop
cmc
or
add
sbb
adc
push
data16
sbb
aam
or
sbb
lock
inc
jo
mov
out
cmp
or
(bad)
and
mov
test
cmc
imul
js
imul
(bad)
sub
ja
add
cmp
lods
xor
add
cmps
mov
and
imul
xor
imul
sub
daa
stos
push
stos
fistp
cmp
inc
into
add
jno
fstp
popf
pop
js
outs
fdivr
dec
xchg
pop
push
mov
inc
jbe
rol
mov
jae
out
loope
pandn
mov
aas
xchg
sar
loope
rcr
hlt
lods
adc
in
jns
retf
out
fwait
arpl
movs
mov
xchg
and
jmp
stc
jbe
push
test
xchg
pop
xchg
xor
mov
add
push
leave
gs
sbb
dec
push
hlt
or
in
clc
cwde
sub
iret
mov
daa
stc
xor
mov
sbb
adc
shl
add
xchg
imul
bound
in
cmps
fs
mov
in
mov
inc
popf
imul
inc
(bad)
rcr
pop
outs
retf
xchg
xor
mov
mov
and
fs
je
add
sar
gs
and
jmp
mov
jnp
xor
sar
lods
es
add
pop
dec
mov
leave
push
lods
daa
addps
dec
push
inc
je
clc
loop
mov
or
arpl
rol
xchg
mov
ds
ja
cmp
or
les
jb
lds
mov
push
mov
lds
call
jp
scas
sub
push
loopne
add
xor
adc
xor
outs
mov
aam
movs
jmp
es
xor
cwde
push
adc
dec
or
iret
cmps
push
ds
iret
neg
xchg
sub
test
repnz
inc
test
sub
aad
mov
shl
mov
fild
fnstcw
pop
jmp
jmp
(bad)
in
out
and
inc
xor
mov
shl
jbe
and
jge
jb
aas
xchg
lahf
xor
stos
fldenv
loopne
inc
je
xor
xchg
mov
jl
inc
out
cmp
jmp
(bad)
mov
mov
pusha
mov
outs
add
test
dec
xchg
lock
cmps
push
jnp
add
cmp
dec
sub
cmps
call
mov
ins
adc
gs
addr16
in
push
fild
mov
popf
cmp
jae
fisttp
or
retf
dec
mov
int
pop
je
(bad)
pandn
push
in
add
and
lea
cdq
add
mov
(bad)
fld
ds
xchg
lahf
dec
sub
popa
pop
enter
js
div
into
in
adc
pop
cmp
stc
ins
das
cli
jmp
pop
cdq
mov
mov
xchg
or
push
jp
cli
xchg
mov
fstp
sub
sub
jne
or
call
cli
nop
test
add
out
mov
test
sub
and
fldcw
inc
(bad)
bound
outs
adc
scas
mov
and
jo
mov
dec
mov
enter
xchg
das
inc
or
mov
jmp
imul
sti
adc
dec
(bad)
mov
sub
cmp
add
mov
idiv
xchg
push
fist
mov
es
ror
fnstsw
xchg
cwde
mov
lea
inc
pop
shl
sbb
sbb
(bad)
inc
xchg
(bad)
cmps
inc
test
aad
(bad)
adc
mov
xchg
gs
xor
sub
push
ficom
loope
jne
and
mov
aaa
fimul
cmp
push
and
or
fwait
ins
out
dec
xchg
test
sbb
cmp
inc
pop
xchg
xchg
push
mov
inc
(bad)
jns
(bad)
cmc
mov
fnop
aam
jg
jb
cli
pop
gs
div
adc
or
cld
or
xor
movs
(bad)
push
bound
mov
mov
out
sysexit
call
lea
add
dec
pop
int3
es
cwde
sbb
or
movs
xor
stos
xor
dec
in
ins
out
pop
ins
clc
cmp
lds
int3
inc
scas
add
xchg
clc
cwde
mov
sub
sbb
icebp
jg
addr16
mov
mov
mov
inc
mov
fnstcw
ss
mov
test
xchg
rol
lods
pop
pop
enter
mov
lahf
outs
adc
push
mov
cwde
lea
dec
scas
in
pop
add
lahf
mov
mov
arpl
shr
movs
cmps
adc
movs
inc
cmp
enter
sub
sub
ja
fs
bound
push
or
ret
fstp
addr16
jmp
jge
leave
in
cli
push
pop
jnp
retf
aad
cmps
or
pop
and
cli
outs
or
and
stos
sub
jno
mov
add
movs
lahf
(bad)
out
(bad)
repz
push
in
inc
mov
fcomip
movs
test
ds
jecxz
push
cmp
sar
cld
in
jb
and
inc
iret
jno
ja
pop
inc
push
ins
cmp
sahf
push
sbb
imul
lods
mov
loope
add
xor
push
es
(bad)
xchg
jecxz
inc
out
lds
outs
ja
xor
jbe
jl
push
push
push
call
inc
pop
call
lea
xor
addr16
bound
and
hlt
jb
fstp
out
mov
nop
pop
shr
lock
scas
retf
pop
lods
enter
cmp
das
add
mov
das
push
xchg
pop
pop
push
pop
mov
pop
jmp
je
repnz
shl
ficomp
stos
xor
ror
jg
scas
mov
pop
pop
std
xchg
movs
ins
cmp
mov
dec
or
cdq
stc
pop
int
test
(bad)
ror
pop
mov
xchg
xchg
es
movs
pop
sar
pop
inc
adc
mov
xchg
(bad)
cmps
or
jb
int3
loope
jmp
sub
stc
in
cmp
mov
scas
push
mov
dec
outs
bound
ins
and
push
sub
or
test
aad
lea
sub
pop
retf
push
sub
cmp
cmps
or
jb
sbb
or
jo
scas
inc
mov
xchg
add
js
mov
bnd
adc
ficom
mov
and
mov
jo
lods
test
lea
sub
inc
(bad)
ins
rcr
lods
cmp
lock
or
xchg
xor
ds
movs
pop
lds
fisub
jns
das
xchg
sub
adc
sti
outs
(bad)
pop
loop
push
mov
adc
rol
sbb
mov
xchg
in
mov
xor
mov
adc
pushf
mov
iret
mov
mov
sahf
cmp
push
popa
fiadd
jns
dec
cdq
scas
fbld
lock
dec
inc
mov
or
jno
mov
push
dec
fs
stos
and
loope
movs
pop
and
pusha
mov
or
pop
pop
mov
pop
xchg
std
imul
hlt
call
push
push
mov
mov
out
arpl
movs
(bad)
int3
pusha
and
inc
xchg
aaa
aad
add
shl
jno
clc
or
test
std
mov
repz
imul
mov
cli
mov
xor
sar
xor
adc
rcr
adc
fisttp
repz
jnp
rcl
in
lods
rcr
retf
bound
cwde
(bad)
in
call
pushf
ret
pop
cmp
inc
mov
inc
jno
dec
call
fcmovnb
cwde
arpl
adc
and
xchg
cmp
movs
scas
jl
push
pop
out
movs
inc
and
pusha
shl
movs
sub
mov
(bad)
aam
clc
retf
xor
mov
popf
nop
loop
sbb
into
mov
data16
in
mov
les
mov
cmps
mov
mov
mov
pop
pop
jp
mov
ret
hlt
adc
inc
jecxz
xchg
aaa
xchg
mov
add
shl
test
jbe
mov
sar
xor
cmps
outs
mul
dec
retf
lods
push
dec
leave
fcom
ret
popf
pop
addr16
xor
inc
les
(bad)
push
ficom
scas
push
shr
hlt
test
pushf
mov
test
gs
popf
adc
dec
dec
lods
outs
fwait
aam
mov
mov
sub
xor
jb
imul
das
adc
mov
xchg
mov
leave
or
sub
sbb
jae
cmp
jmp
jmp
xlat
pusha
out
in
pop
jne
shl
fisubr
add
jmp
clc
push
fyl2x
dec
cmps
push
pop
xchg
and
jecxz
sbb
xor
mov
jl
mov
push
sub
ds
movs
xor
mov
cmp
dec
mov
(bad)
lods
cmp
cs
mov
and
push
inc
(bad)
cmc
jle
jno
hlt
outs
push
dec
and
aas
push
mov
sub
cwde
xchg
idiv
out
shr
xor
mov
rep
cmp
mov
xchg
fs
inc
pop
sbb
mov
adc
mov
mov
movs
cli
or
xor
jno
inc
add
mov
fmul
sub
pusha
mov
mov
test
hlt
(bad)
repnz
adc
jns
inc
xchg
push
mov
pushf
call
sbb
ret
add
fcomp
popa
mov
repz
popa
jbe
icebp
push
gs
pop
ror
test
add
xor
loope
sub
out
rcr
jae
sahf
mov
iret
add
loop
mov
pop
and
je
fiadd
(bad)
pop
retf
nop
rcl
push
jno
(bad)
jns
(bad)
loopne
jne
test
out
mov
mov
sub
jmp
(bad)
jb
add
loop
and
es
mov
sbb
mov
(bad)
out
addr16
or
mov
inc
sub
mov
push
cmps
xor
push
add
cmp
out
dec
scas
jl
dec
mov
cmp
aad
les
int3
dec
pop
mov
mov
inc
popa
mov
test
(bad)
(bad)
adc
jnp
bound
lds
lahf
push
imul
outs
std
sbb
push
loopne
in
jl
aad
das
fistp
dec
test
mov
cld
shl
pop
pop
sbb
loop
sbb
popfw
out
in
call
mov
cmc
lea
and
inc
popf
jbe
jl
and
sub
sub
imul
rol
pop
xor
iret
lods
xchg
gs
popf
bound
jbe
sub
(bad)
mov
aad
jnp
ror
or
leave
or
sar
mov
adc
xchg
sub
push
and
xchg
ss
and
inc
sbb
enter
dec
mov
in
lods
out
out
mov
jb
jne
and
es
jge
jge
add
cmp
and
or
xor
sbb
shr
mov
enter
mov
and
jle
mov
lods
jo
repnz
test
pop
dec
mov
inc
sbb
xchg
dec
repz
add
jmp
push
les
fwait
(bad)
lea
shr
out
ds
lock
out
lock
imul
jmp
aam
sbb
dec
inc
jo
addr16
lock
movs
sub
mov
jmp
outs
jmp
sub
sbb
mov
mov
push
add
imul
ja
fcomi
mov
data16
mov
retf
rol
add
mov
stos
pop
pop
push
push
xchg
cmc
test
repnz
adc
pushf
ja
jl
mov
mov
cmp
adc
add
mov
cmps
xor
loope
or
fwait
js
shl
test
pop
jecxz
jnp
out
mov
and
pop
mov
(bad)
fsubr
sbb
adc
and
pushf
sbb
pop
adc
mov
mov
mov
lds
sub
popf
(bad)
cli
in
xchg
lea
jno
or
idiv
mov
sub
or
and
js
add
in
xchg
jo
push
adc
jle
sbb
mov
pop
inc
xlat
push
dec
retf
pop
xchg
stos
mov
sahf
jmp
adc
jae
cdq
out
inc
aas
push
push
in
or
sbb
or
mov
bound
outs
adc
mov
or
sbb
rcr
pusha
mov
pop
pop
mov
inc
test
sahf
inc
cmp
jmp
xchg
mov
in
sbb
mov
mov
mov
fwait
cmps
outs
xor
mov
cli
call
cmps
iret
jbe
dec
scas
(bad)
jl
cdq
adc
push
push
jmp
out
xor
nop
mov
mov
loope
imul
fs
push
aam
and
pop
sub
aad
and
neg
retf
not
xchg
bound
(bad)
push
daa
ja
or
inc
lods
add
mov
mov
push
cmp
add
xchg
adc
imul
jl
jmp
inc
dec
push
in
add
mov
sbb
mov
icebp
inc
dec
push
hlt
push
mov
mov
pop
push
pop
jmp
dec
dec
repz
fist
xor
rcpps
mov
adc
ret
sbb
ret
pop
jp
out
shl
scas
dec
lea
daa
or
stos
inc
enter
mov
sahf
jp
cmp
rcl
adc
jb
pop
dec
pop
xchg
fadd
bound
fistp
popf
enter
xor
ss
cwde
in
xor
dec
sar
mov
les
pop
push
std
cs
xchg
xchg
pushf
jg
outs
fmul
dec
mov
idiv
mov
inc
movs
fcompp
pusha
addr16
jl
xor
jg
inc
add
inc
dec
fst
stos
mul
adc
jae
loope
(bad)
add
add
jbe
retf
pop
xchg
mov
out
outs
fldenv
mov
sar
and
inc
adc
out
jae
jo
cmp
ficomp
imul
fstp
lods
jmp
jo
sti
(bad)
cmps
or
ret
cdq
stos
mov
jg
xlat
lods
and
pop
sbb
cmp
jb
ja
sbb
cli
pop
pop
jbe
sub
dec
in
add
dec
or
mov
mov
adc
mov
add
add
pop
mov
pop
shl
mov
int
inc
in
mov
fdivr
hlt
cdq
jnp
jecxz
gs
adc
ds
arpl
mov
aas
fisttp
jb
or
mov
and
xchg
out
jae
popf
scas
jmp
icebp
stos
pop
cmp
jne
mov
fldenv
cmp
and
shl
pop
adc
mov
test
mov
inc
pop
add
dec
mov
push
dec
push
add
jg
adc
add
xor
es
(bad)
movs
paddusw
jg
pop
push
ror
xor
push
(bad)
popa
call
pushf
(bad)
aaa
pop
fs
movs
psubsw
mov
and
pushf
das
inc
adc
aam
fcom
sub
xchg
call
cld
aaa
push
sar
push
movs
sbb
dec
jno
cmps
in
jg
inc
sub
in
sbb
xchg
fs
ds
fnstcw
int
ss
jo
push
dec
add
pop
pop
jmp
and
sbb
mov
test
sub
mov
xor
xchg
jmp
push
adc
in
pop
sbb
jne
outs
mov
popf
shr
add
mov
or
mov
and
dec
(bad)
dec
mov
fst
fcmovne
ja
mov
out
test
push
imul
cmp
rcl
(bad)
mov
cwde
aad
xchg
push
dec
mov
inc
pop
cmp
mov
jnp
xchg
mov
std
xchg
ds
jmp
mov
or
dec
mov
sbb
jecxz
mov
sub
xor
aas
xchg
nop
scas
xchg
ret
ret
loop
xor
xlat
push
not
mov
and
xchg
cli
xor
je
aaa
std
xor
retf
mov
xchg
or
adc
jo
(bad)
in
adc
sar
jp
add
inc
leave
and
cmp
cmp
jmp
mov
js
jbe
dec
out
ins
inc
and
mov
and
xchg
push
mov
mov
pop
jmp
gs
mov
sbb
mov
dec
dec
push
ins
mov
loop
and
psrld
sbb
pop
or
mov
fisttp
jb
(bad)
nop
addr16
push
sbb
add
mov
pop
lods
push
adc
imul
jge
dec
stos
or
xor
push
xor
mov
xchg
cmps
mov
mov
xchg
inc
test
sbb
jnp
(bad)
pop
mov
pop
xchg
out
imul
rcl
or
test
ins
mov
mov
pop
add
mov
ins
pop
add
out
sbb
xchg
cmp
jle
icebp
movs
dec
push
hlt
stc
inc
idiv
ins
cmp
les
push
or
out
repnz
sbb
mov
outs
push
ror
and
out
xchg
pop
sbb
stc
or
imul
mov
cmp
dec
xchg
dec
and
fbstp
xchg
enter
out
mov
jnp
inc
mov
out
sbb
lock
(bad)
and
jge
add
popf
xor
cmc
mov
loop
jg
mov
fsub
rcl
pop
ret
push
xor
sbb
test
ja
mov
fidivr
xor
mov
mov
in
rcr
mov
popa
pusha
nop
ret
leave
ds
xchg
imul
ror
xchg
or
mov
jmp
mov
push
fwait
nop
cli
mov
sbb
imul
popa
and
jg
aad
pop
(bad)
aad
outs
push
sti
jno
(bad)
rcl
mov
mov
pusha
repnz
dec
cmp
push
stos
cmp
rcpps
fcom
loope
hlt
test
sahf
jl
jno
cmp
int
xchg
cmp
fidivr
mov
pop
jae
loope
(bad)
jle
mov
push
in
iret
and
sbb
xchg
inc
popa
sbb
test
pop
sub
cmp
push
mul
inc
in
ins
aad
pop
pop
cmp
inc
push
mov
call
and
pop
mov
nop
rol
mov
mov
mov
test
les
lahf
call
dec
es
inc
jecxz
mov
cmp
dec
push
fcomi
dec
jmp
xchg
mov
xchg
shl
cld
(bad)
mov
lock
push
push
mov
inc
gs
(bad)
in
fs
mov
mov
arpl
jmp
mov
scas
jbe
lods
shl
xchg
aam
mov
add
(bad)
nop
ins
shr
daa
dec
add
out
jo
clc
pop
sbb
sbb
arpl
movs
out
mov
jl
ins
inc
mov
sbb
jmp
cmc
mov
xchg
in
movs
pushf
and
outs
pop
sbb
aad
push
retf
enter
and
shl
sub
pop
lahf
nop
or
test
pop
mov
mov
fnstcw
pop
loope
fisttp
icebp
dec
inc
fucomi
pop
mov
daa
pop
pop
addr16
repnz
aam
xchg
jnp
nop
mov
mov
push
jmp
xor
push
fwait
jno
add
sbb
xchg
inc
xchg
push
mov
add
xor
jl
and
(bad)
dec
pop
adc
int3
sub
aam
push
cwde
dec
scas
icebp
jnp
cmc
xchg
xchg
repz
rcr
cmps
inc
pop
iret
shl
dec
ficom
test
pop
fwait
sbb
xor
cmp
cmp
loope
xchg
add
cmc
mov
pop
imul
data16
test
xor
sub
mov
fadd
fs
cmps
enter
mov
jne
scas
jnp
mov
xchg
cmp
cmp
rol
jmp
cli
dec
sbb
repz
lahf
pop
test
and
outs
stos
dec
add
mov
rol
pusha
data16
and
clc
rcl
mov
jno
add
ss
nop
das
repnz
stos
int3
fist
jmp
pop
outs
cmps
pop
xchg
add
into
adc
rol
sbb
xor
mov
aas
mov
cmps
lods
leave
xchg
ror
jle
(bad)
push
sbb
push
frstor
mov
mov
mov
xchg
mov
int
aaa
xchg
cld
clc
mov
cmps
xchg
sub
mov
jmp
dec
xor
in
mov
jl
sbb
mov
lahf
(bad)
push
pop
and
test
sbb
mov
test
sbb
pop
sub
mov
mov
sti
dec
popa
cmps
leave
xchg
sbb
imul
in
mov
lea
dec
adc
sub
mov
and
shl
(bad)
adc
test
cwde
jle
das
outs
sbb
aaa
inc
mov
dec
mov
call
inc
rcl
jbe
retf
jns
xchg
cmp
data16
sub
dec
cli
sti
sub
aad
arpl
fild
sbb
lahf
xchg
dec
mov
cli
lea
mov
icebp
dec
inc
and
xor
js
mov
sbb
popf
fidivr
adc
idiv
jno
dec
dec
sub
idiv
inc
pushf
test
lods
sbb
mov
lahf
adc
pushf
aad
adc
cmp
and
mov
mov
imul
test
jbe
minps
or
repnz
call
cdq
xchg
add
sbb
mov
hlt
mov
dec
loopne
ficomp
or
test
loop
or
push
cli
cmp
pusha
data16
enter
mov
push
or
jmp
in
std
or
iret
pop
fdiv
or
rcl
xchg
stos
inc
neg
retf
daa
arpl
pop
mov
jne
sbb
xor
mov
popa
pop
add
jl
xlat
add
rcr
lods
jmp
int
clc
in
jno
sub
outs
inc
mov
iret
pop
pop
xor
ret
fcomip
iret
sbb
inc
lahf
test
and
test
(bad)
dec
in
push
shl
mov
or
xor
pop
adc
jge
cmp
xor
jg
pop
xlat
test
sub
and
jecxz
xor
jae
aad
inc
(bad)
add
imul
adc
add
sbb
rol
out
pop
xchg
or
inc
call
push
xor
mov
mov
or
push
and
(bad)
outs
rol
popf
xor
jecxz
and
sbb
enter
das
fst
push
xor
out
and
icebp
mov
and
repz
push
lock
adc
test
cmpxchg
mov
retf
push
fsub
ficomp
nop
ds
repnz
les
add
cli
xchg
jo
repnz
xor
test
mov
test
inc
dec
pop
vpunpckhqdq
nop
mov
fisttp
stos
mov
scas
mov
jmp
or
hlt
cdq
out
push
sbb
sar
xor
loope
arpl
pop
xor
adc
cmps
and
sbb
mov
xchg
(bad)
push
es
call
cmp
and
dec
ret
xchg
out
aam
adc
mov
sub
inc
cdq
dec
jbe
aas
and
popa
xchg
sbb
loop
mov
ins
jp
push
jmp
pop
add
adc
push
adc
fdivr
jle
shl
in
outs
sbb
cmps
sub
fnsave
xchg
sbb
ins
lods
(bad)
xor
in
jbe
shl
das
mov
or
fsubr
cmps
adc
cli
sbb
pop
mov
dec
and
dec
push
mov
fmul
sbb
int
rcr
mov
movs
cli
xchg
hlt
or
jo
pop
fs
cmp
stos
jmp
out
out
add
retf
in
xchg
ds
jb
xchg
dec
or
icebp
mov
sub
xchg
inc
aas
add
rol
sbb
xchg
call
mov
je
cs
mov
mov
jecxz
outs
dec
cmp
cwde
addr16
test
xchg
es
popa
inc
stos
je
call
mov
inc
pop
push
in
mov
(bad)
repz
into
fcomp
and
mov
std
test
pop
jno
lods
fwait
js
in
cdq
test
in
jno
mov
mov
push
sbb
aad
cmp
mov
xchg
pop
dec
sbb
int
arpl
lods
out
sub
fdiv
jb
xchg
push
jb
cmps
sub
ficomp
jmp
pop
and
fwait
xchg
aas
xor
sub
push
xor
sub
push
push
jne
lock
gs
in
pusha
pop
in
pop
push
aam
call
(bad)
dec
mov
rcl
fild
shr
fbld
and
xchg
add
mov
(bad)
pop
push
push
cmp
pop
icebp
pop
dec
add
inc
addr16
int
cmp
adc
xchg
lds
pop
loop
out
pop
(bad)
or
xchg
sbb
jbe
bound
pop
push
(bad)
in
mov
cmp
shl
xchg
enter
push
sbb
push
mov
mov
jmp
cdq
loope
adc
lods
stos
jp
arpl
mov
mov
push
pop
je
and
lea
fnstsw
pop
scas
fst
push
sbb
fs
sbb
out
addr16
xchg
ja
push
ins
push
loop
ret
outs
imul
sahf
les
leave
into
out
cmp
jge
icebp
jb
xchg
pop
(bad)
addr16
cmps
push
xchg
jmp
movs
jg
push
or
push
mov
imul
aaa
je
sbb
and
mov
enter
jg
add
mul
xchg
inc
mov
daa
xchg
icebp
sar
aad
or
xchg
cmp
add
jno
cdq
mov
ficomp
xchg
lds
mov
xor
xor
push
and
adc
xlat
push
pop
out
fwait
mov
fstp
ss
mov
sbb
fmulp
cld
mov
std
or
(bad)
call
jo
retf
retf
xor
loop
push
scas
sub
popa
cmps
daa
adc
ins
and
(bad)
arpl
mov
push
xchg
lock
es
in
mov
and
xor
les
dec
movs
xchg
mov
mov
inc
mov
dec
ins
mov
xor
call
dec
gs
add
push
js
fiadd
push
cdq
dec
not
loopne
mov
jp
add
jge
test
inc
sub
sub
sbb
xor
aaa
sub
aaa
mov
xchg
cmps
sub
jo
and
adc
cmp
pop
clc
inc
lock
leave
xor
adc
add
sub
in
jno
lock
std
sti
xor
and
pop
sub
mov
jecxz
ror
shl
sub
bound
jg
inc
xchg
xchg
sbb
add
push
fiadd
push
rcl
jo
jmp
mov
mov
inc
pop
sub
aam
mov
adc
xchg
xor
pop
imul
or
popa
movs
pop
push
sbb
push
push
mov
(bad)
cmp
push
mov
sbb
retf
mov
push
stos
jbe
xor
and
and
or
cdq
cmp
mov
add
jmp
adc
push
or
inc
mov
movs
xchg
dec
pop
xchg
pop
and
push
lods
popa
pushf
lea
shr
xchg
jle
fst
sub
pop
inc
mov
fwait
loop
and
mov
(bad)
out
dec
clc
enter
mov
xchg
cmp
mov
mov
sub
xchg
aad
mov
adc
sahf
rcr
mov
addr16
ror
mov
jl
jnp
jle
cmp
test
adc
pop
or
(bad)
mov
stos
lods
lods
jae
xchg
test
repz
push
fmul
pop
cli
cmp
lock
ss
(bad)
xlat
outs
mov
js
sub
pop
movs
jbe
aas
sbb
inc
stos
gs
mov
imul
jnp
jb
cmp
adc
outs
and
hlt
ret
ins
fstp
xor
cmc
mov
push
(bad)
call
sbb
mov
out
xchg
fwait
pop
pop
ficomp
adc
cli
mov
mov
hlt
cli
(bad)
repz
jmp
cli
in
xor
gs
std
dec
sub
sar
scas
lock
call
jecxz
mov
int
and
and
es
sar
pop
add
jnp
das
and
jb
xor
clc
dec
jle
xchg
push
jmp
cmp
cmps
cmp
mov
not
sbb
mov
mov
xor
sub
stos
int
les
mov
sbb
outs
lods
aad
cwde
jnp
sti
cs
sahf
jmp
loop
mov
xchg
stos
lock
inc
js
adc
movs
enter
addr16
mov
fistp
popa
ins
xchg
ins
cmps
cmp
pop
dec
pop
and
push
sub
xor
dec
rcl
mov
jg
(bad)
fistp
ror
in
push
and
mov
jo
clc
sub
or
inc
mov
mov
mov
xor
(bad)
push
loopne
dec
pop
loope
imul
out
add
ret
push
dec
mov
cmp
scas
sar
das
cli
aam
xchg
mov
cs
ins
jno
(bad)
stc
loopne
push
gs
add
out
inc
out
or
or
and
add
(bad)
jmp
mov
mov
(bad)
push
ja
dec
adc
popa
loope
inc
push
add
mov
clc
jg
shr
xchg
cmps
clc
ins
jg
xchg
daa
cdq
int3
and
jne
sub
hlt
(bad)
data16
xor
push
add
sbb
add
in
outs
jle
js
lods
dec
pop
dec
fwait
adc
sbb
push
pop
or
arpl
xor
push
or
cld
jb
retf
cld
(bad)
pop
aam
inc
aas
fwait
pop
mov
jg
cmp
xchg
ror
gs
ja
jmp
(bad)
xchg
add
mov
imul
scas
sbb
das
push
popa
das
popa
jns
and
lock
pop
add
add
fild
xor
shr
out
call
sub
jle
mov
jl
lock
nop
popf
loope
mov
pop
xchg
dec
mov
out
xor
and
imul
push
inc
rol
mov
ret
add
scas
push
dec
in
jb
stc
dec
jbe
call
and
mov
mov
mov
fadd
pop
add
je
pusha
shr
adc
sbb
mov
jp
imul
retf
pop
or
inc
jae
stc
dec
popa
arpl
add
xor
test
sbb
cmp
adc
push
fdiv
sbb
xor
adc
cmp
mov
dec
pop
xor
out
stos
fiadd
pusha
ds
mov
das
and
jb
fst
fst
sar
into
imul
cmp
inc
mov
mov
call
push
in
div
push
lahf
out
fcom
clc
cmp
jno
iret
and
shl
add
leave
or
cmp
cmp
nop
lods
adc
jno
sub
mov
fxch
inc
sti
sub
lock
sbb
rol
push
repnz
nop
retf
mov
dec
into
repnz
cld
arpl
pop
cli
xor
lods
xor
xor
iret
gs
add
lods
sti
jb
xchg
push
add
inc
lahf
mov
and
mov
mov
jns
stc
in
xchg
(bad)
push
cmp
sub
mov
sar
cmc
mov
pop
mov
dec
ret
cmc
fisub
mov
or
aam
rcl
(bad)
fcomip
jge
shr
push
pop
cmp
out
loop
pop
pop
adc
cdq
pop
fcmovnu
adc
imul
loopne
dec
or
ins
inc
aam
mov
sti
loope
std
xor
(bad)
xlat
push
adc
imul
sbb
jp
inc
cli
cld
neg
call
pushf
dec
out
pushf
pop
(bad)
push
push
dec
inc
arpl
xchg
lahf
lods
idiv
cs
mov
aam
out
pop
push
repz
sub
jmp
push
add
je
pop
inc
imul
cmp
test
xchg
add
jbe
(bad)
fsub
cmp
adc
inc
rcl
fist
sbb
push
jge
test
popf
out
repnz
popf
jg
mov
aas
push
jb
xor
mov
jecxz
add
(bad)
call
ja
cdq
mov
and
jle
xchg
lahf
fst
mov
not
mov
std
jmp
out
in
push
(bad)
inc
pop
ret
dec
mov
cmps
add
add
int
pop
mov
jl
aam
push
icebp
xchg
cmp
lock
gs
sub
sub
mov
inc
in
stos
icebp
push
jmp
and
in
pop
test
xchg
mov
cdq
adc
sub
test
lock
int3
or
repz
clc
adc
cmp
sbb
mov
rol
sahf
ds
sub
inc
or
mov
arpl
lds
in
lods
add
ja
mov
into
shl
xlat
push
std
add
sbb
push
cmp
movs
xor
or
(bad)
lods
mov
es
sbb
outs
mov
(bad)
pop
leave
fcomp
retf
xchg
pop
popa
mov
fdiv
ins
dec
and
push
adc
andnps
inc
rol
sbb
shl
sbb
call
ja
cmp
shr
mov
test
jae
retf
mov
ret
lahf
mov
inc
pop
pusha
bound
mov
cmp
int
push
jae
or
inc
cmps
inc
lock
(bad)
(bad)
dec
leave
inc
pop
loopne
add
jae
clc
out
sbb
mov
int3
cmps
dec
inc
stos
stc
mov
imul
jno
div
pop
call
inc
dec
sti
mov
pop
hlt
aaa
add
mov
mov
inc
cmp
out
ss
scas
push
xchg
(bad)
fcmovne
fdivr
idiv
inc
pop
sub
xor
and
push
lds
test
xlat
pop
or
jae
jae
popa
and
popa
jns
cmp
rol
daa
dec
mov
mov
inc
pop
pop
xor
sub
lds
(bad)
mov
in
ficom
cli
pushf
ins
sbb
test
inc
mov
mov
in
sub
pop
push
repz
pop
adc
and
pushf
mov
les
pop
std
loope
push
inc
mov
jnp
push
jne
mov
shl
or
sbb
cmp
push
into
xor
(bad)
stos
pop
push
xor
cmp
dec
aad
outs
sub
xchg
(bad)
lds
sbb
es
xchg
pushf
push
test
add
cmp
and
out
in
cmps
bound
inc
push
xchg
inc
inc
jbe
arpl
pop
imul
imul
je
pop
push
xor
hlt
sbb
gs
popa
dec
add
jns
fwait
dec
movs
outs
stos
sbb
retf
sub
sahf
inc
in
lock
rol
push
leave
test
adc
mov
and
imul
xlat
movs
ss
ins
jno
not
and
ins
add
sub
cld
les
test
in
inc
into
(bad)
sahf
push
or
test
push
jo
pop
sbb
stos
enterw
add
cmp
test
mov
inc
mov
pop
xchg
pop
enter
add
sub
outs
enter
shl
ins
call
xlat
mov
and
jnp
and
cli
sti
stos
scas
mov
jbe
or
add
in
cdq
neg
jo
mov
ja
je
mov
dec
rcl
sbb
jmp
push
pushf
pop
int
cmps
xor
mov
add
mov
cmp
push
sahf
mov
or
inc
cmps
stc
loop
adc
xchg
sub
push
mov
out
and
js
bound
dec
mov
xor
dec
pop
jmp
idiv
cmp
scas
or
(bad)
in
cld
jp
scas
mov
nop
sbb
pusha
mov
dec
mov
imul
daa
cli
icebp
xor
mov
imul
xchg
call
fdiv
mov
sbb
imul
(bad)
mov
(bad)
sbb
(bad)
rcl
push
icebp
fstp
jecxz
out
and
push
lods
in
pusha
gs
dec
js
sbb
xor
in
daa
or
add
out
aas
ins
in
stos
cwde
add
in
ss
sub
and
outs
mov
jo
imul
jle
xchg
cs
add
inc
ins
(bad)
in
pop
movs
mov
sbb
jno
js
inc
adc
fisttp
cmp
outs
test
retf
sbb
cmp
sub
es
jle
dec
mov
jmp
push
mov
shl
dec
(bad)
jp
pop
dec
mov
cmp
idiv
push
pushf
retf
xchg
pusha
xor
push
lahf
scas
repnz
jns
xor
push
enter
pop
or
mov
and
ja
sahf
xchg
(bad)
push
das
sbb
in
or
and
xor
xchg
mov
outs
hlt
pop
adc
pop
fild
xchg
loop
sbb
xor
sar
push
mov
xor
stos
jg
xchg
stc
mov
mov
mov
shr
push
xchg
out
adc
and
out
test
mov
mov
add
pop
lock
xor
ds
iret
idiv
pushf
mov
stos
mov
inc
jo
dec
mov
cdq
xchg
cmp
jns
lea
mov
mov
call
mov
and
dec
rcl
outs
mov
std
ss
js
jg
mov
xchg
fsubr
cmps
imul
and
add
outs
cmc
xor
push
jnp
pop
test
cmps
cmp
es
invd
scas
cmps
popf
add
pop
outs
js
aas
cmp
(bad)
movs
dec
pushf
lods
push
dec
popa
dec
and
inc
imul
cmp
call
jmp
xlat
movs
in
jl
stos
jmp
jo
adc
cli
cmp
pop
xchg
test
data16
jge
cli
push
jp
sub
lds
mov
cmps
jb
(bad)
imul
jle
nop
mov
cld
cwde
loope
dec
adc
rcl
mov
jbe
dec
sub
pop
or
pusha
fnstenv
push
aas
inc
or
sub
jb
idiv
neg
xchg
sbb
(bad)
jmp
out
sbb
push
sti
mov
imul
sub
add
jge
adc
mov
imul
call
push
cmp
inc
aaa
pop
cmp
popf
icebp
dec
wbinvd
dec
jecxz
lea
add
test
popf
cmp
stos
jmp
paddb
pop
cmp
jle
mov
mov
jae
lds
adc
sub
out
sahf
mov
out
call
jl
jg
adc
push
dec
enter
cmc
jecxz
ins
pop
fisttp
outs
push
mov
cmp
loop
sbb
loope
test
and
adc
cmp
shl
imul
out
(bad)
mov
hlt
push
mov
sahf
jnp
mov
add
les
lods
push
into
xchg
jno
pusha
jle
and
push
and
inc
fist
jb
call
add
aaa
jecxz
pop
jecxz
(bad)
js
and
mov
pusha
add
sbb
adc
sbb
pushf
fimul
iret
sub
mov
pop
imul
cmp
adc
adc
xchg
scas
loop
push
pop
adc
inc
sub
in
cwde
add
sbb
sbb
inc
and
xor
sub
out
mov
in
call
inc
shr
loope
cmc
sbb
clc
push
push
lds
add
add
inc
stos
retf
pop
xor
push
sub
pop
mov
mov
fiadd
adc
jmp
jbe
pop
add
sbb
xor
js
xchg
pop
scas
ds
pop
xchg
in
sbb
mov
pushf
pusha
aaa
clc
sub
inc
loop
mov
loopne
add
and
popa
mov
pop
dec
add
cmps
ror
adc
mov
aam
mov
and
sub
pop
push
push
mov
cdq
push
ror
dec
lock
pusha
mov
retf
lods
or
sbb
sahf
sub
push
push
push
scas
add
loop
mov
xor
repz
adc
fnstsw
jmp
add
sub
test
jg
fimul
js
cmps
add
cli
add
cmp
ud0
cmp
gs
es
add
push
cs
call
mov
lods
mov
ret
scas
movs
(bad)
out
imul
lock
inc
xor
stos
sbb
xchg
sub
ficomp
push
sub
push
stos
mov
ficom
(bad)
out
push
pop
cs
push
pop
fild
mov
mov
jge
or
dec
ins
push
jno
retf
in
mov
les
mov
and
push
scas
push
xchg
dec
push
call
pop
addr16
jmp
scas
popa
sbb
jmp
dec
sub
dec
shl
test
stos
sub
in
stos
sub
call
sysret
popf
leave
sub
(bad)
cmp
adc
pop
pop
bound
fwait
repnz
popa
cs
fs
repnz
aaa
xor
bound
and
jmp
mov
push
and
scas
xchg
and
or
fwait
pop
or
mov
mov
push
jle
mov
jl
mov
repz
jbe
push
or
cmp
shr
xchg
stos
shl
adc
leave
(bad)
sar
shl
imul
sub
clc
in
movs
xchg
arpl
dec
pop
out
inc
icebp
nop
adc
sbb
rcr
out
cmps
div
fld
cli
test
or
xlat
jns
adc
pop
sub
xor
adc
add
imul
xchg
dec
push
retf
mov
bnd
mov
fistp
push
xlat
lds
jecxz
xchg
pop
mov
bound
mov
mov
cmc
shl
stos
test
cmp
dec
rcl
jg
fs
push
retf
jns
pop
mov
(bad)
repz
dec
dec
cmp
sbb
movs
es
jno
fistp
or
sub
or
xor
mov
int3
mov
(bad)
stc
adc
retf
pop
lds
mov
or
push
fmul
mov
add
fs
mov
pop
in
popa
popf
dec
push
sub
pop
imul
cmp
and
(bad)
mov
inc
ds
or
lahf
fst
fiadd
xor
in
pop
retf
mov
retf
adc
clc
xchg
stc
mov
loope
jae
push
cmp
outs
test
add
cmp
