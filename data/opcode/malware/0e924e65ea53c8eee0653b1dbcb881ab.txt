sbb
jno
fs
aaa
inc
sub
inc
dec
mov
gs
inc
sub
xor
adc
pop
inc
cmp
and
add
inc
sub
push
into
or
mov
imul
into
inc
adc
arpl
jae
mov
adc
les
inc
pop
out
adc
mov
xor
in
cmp
fs
int
adc
xor
push
(bad)
cmp
jbe
mov
adc
bound
jge
ins
dec
mov
xor
push
mov
aaa
xor
ds
sub
xor
ins
leave
mov
mov
sub
int3
pop
cmp
iret
mov
sub
mov
enter
cmp
mov
stos
mov
add
stos
mov
jae
int3
push
xchg
jg
jae
adc
mov
xor
retf
add
lea
into
adc
push
mov
sbb
icebp
xor
dec
add
scas
add
into
mov
inc
and
shl
mov
movs
cmp
mov
enter
dec
movs
cmp
fsub
call
pop
and
(bad)
into
into
(bad)
in
cmp
and
push
cmp
xor
shl
sub
inc
inc
xor
inc
cmp
xor
cmp
jle
xor
(bad)
in
cmp
xchg
mov
xor
lods
(bad)
leave
mov
sbb
fldcw
cmp
xor
push
cwde
jae
scas
fmul
inc
stos
cmc
xor
inc
jne
outs
sbb
(bad)
or
imul
xor
das
mov
inc
sub
fisubr
sub
mov
sub
xor
xor
adc
sub
stos
push
push
adc
inc
sub
mov
cmp
adc
or
adc
arpl
pop
xor
add
add
push
xor
mov
sub
add
cwde
jae
mov
sub
xor
stos
cmc
sub
mov
sub
xor
test
inc
sub
repnz
jge
aam
cmp
xor
dec
inc
inc
sub
adc
mov
imul
sub
sub
sub
xor
mov
inc
xor
into
rol
(bad)
into
lods
rol
sub
pop
inc
cmp
sub
pop
jnp
repz
xor
int3
inc
xor
(bad)
pop
inc
inc
mov
mov
rol
sub
sub
mov
and
into
mov
sbb
jno
xor
push
ja
xor
mov
(bad)
into
mov
jl
lds
jbe
outs
outs
sbb
repnz
int
fisttp
data16
movs
inc
into
shl
leave
into
out
mov
je
js
xor
pop
xor
inc
inc
xor
inc
xor
xor
inc
dec
shr
(bad)
fbstp
inc
sub
(bad)
xor
icebp
lods
imul
and
inc
xlat
inc
and
push
xor
into
out
into
inc
mov
sub
(bad)
xor
icebp
lods
xor
jmp
xor
inc
ret
cmp
mov
jbe
jno
sbb
repnz
int
adc
iret
cmp
int
inc
sub
inc
sub
mov
and
or
sub
mov
inc
sbb
fidiv
sub
xor
xor
aam
pop
sub
mov
scas
sub
xor
mov
sbb
jno
cs
neg
jbe
repnz
bound
mov
or
pop
jmp
into
inc
pop
test
stos
push
lds
push
leave
inc
ret
pop
mov
aam
mov
test
xor
repz
add
shl
leave
int3
jge
ds
sub
ds
cmp
or
aam
rol
into
jno
adc
xor
ror
je
pop
and
add
mov
lds
sub
pop
mov
add
mov
mov
xlat
jno
jnp
xor
test
je
int3
ins
cmp
pop
test
xor
enter
inc
mov
xlat
into
xor
outs
push
jmp
mov
inc
sub
add
sub
bound
jg
inc
dec
mov
int
mov
sbb
iret
into
into
jmp
mov
pushf
jae
int3
ins
cmp
pop
test
xor
enter
cmp
ret
into
mov
(bad)
and
rcr
ror
cmp
inc
sub
into
mov
ret
mov
jmp
mov
fdiv
mov
sub
into
mov
sub
into
sbb
clc
test
aam
jnp
data16
jne
(bad)
int
push
and
fadd
xlat
into
ins
int
sbb
jp
inc
sub
jl
cmp
xchg
fcomi
mov
add
mov
(bad)
jmp
cdq
push
out
add
div
sbb
repnz
int
popa
adc
mov
div
adc
ja
xor
sub
push
mov
ins
int
mov
pop
fnstenv
push
cmp
push
mov
retf
ss
sbb
jmp
add
out
dec
xchg
xlat
xor
repz
mov
pop
sub
sbb
jbe
clc
test
aam
jnp
data16
pop
and
mov
test
xor
mov
sub
je
daa
(bad)
xor
mov
jl
dec
xchg
and
xor
call
or
cmp
mov
add
call
repnz
int
adc
clc
loope
adc
leave
xor
pop
test
xlat
inc
cmp
inc
jle
mov
xlat
into
mov
dec
outs
pop
sbb
jae
adc
inc
int3
mov
aam
adc
and
cmc
arpl
clc
test
aam
jle
mov
pusha
adc
mov
xlat
inc
cmp
mov
xor
aaa
xor
adc
into
inc
dec
inc
xor
shr
inc
sub
test
outs
outs
sbb
repnz
int
popa
adc
mov
mov
add
pop
mov
ins
xor
mov
mov
mov
mov
jae
sub
out
xchg
jae
js
sub
sub
inc
inc
mov
mov
mov
out
mov
sub
pop
xor
sbb
clc
test
aam
les
bound
jg
inc
dec
xchg
mov
(bad)
popf
popa
xor
les
xor
inc
shr
inc
sub
cmps
push
fld
jmp
and
sub
(bad)
mov
out
add
dec
rep
xchg
inc
adc
rol
sub
aaa
sub
mov
pushf
daa
lods
icebp
into
ins
aad
xchg
mov
pop
inc
xchg
rol
push
mov
xor
xor
js
xor
xchg
jmp
and
inc
inc
sbb
jno
daa
fnstcw
into
push
test
xor
xchg
push
jmp
mov
inc
sub
xlat
aaa
sub
bound
jg
inc
dec
aaa
push
mov
test
xor
mov
stos
adc
repz
xor
push
test
adc
lods
div
inc
sub
test
retf
mov
into
into
jmp
or
mov
inc
pop
sub
pop
mov
mov
repnz
xor
xlat
xor
retf
into
mov
and
sti
xor
inc
ret
sub
pop
rcr
xlat
mov
dec
adc
inc
cmp
add
sub
xor
lock
into
jmp
repnz
ins
lds
ins
cmp
jg
sub
int
cmp
xor
ret
add
xor
dec
int
daa
mov
inc
sub
mov
shl
mov
push
test
xlat
into
xor
sbb
xor
xor
repz
mov
cmp
adc
pushf
jae
inc
mov
add
mov
repnz
inc
rcr
inc
sub
lahf
add
mov
cmps
sub
mov
scas
mov
add
js
inc
cmps
stos
frstor
into
iret
mov
loop
dec
cmp
push
xor
addr16
mov
push
inc
sub
icebp
xor
lods
in
xor
leave
jae
int3
ins
shl
into
and
inc
mov
inc
push
mov
inc
inc
sub
pop
mov
mov
inc
sub
mov
xor
jae
mov
ins
cmp
iret
mov
xor
mov
mov
into
into
jmp
or
mov
inc
pop
cmp
pop
mov
into
je
mov
leave
lds
into
into
mov
push
xor
lock
ror
lods
loope
mov
jbe
clc
test
aam
les
imul
sub
mov
mov
leave
sbb
aam
mov
ja
ds
sub
xor
inc
and
sub
mov
mov
mov
mov
push
pop
push
mov
inc
sub
add
sub
push
mov
movs
jne
inc
js
mov
push
pop
xor
(bad)
in
cmp
inc
out
xor
in
xor
scas
lock
into
mov
stos
push
int
mov
div
push
mov
add
push
fiadd
mov
je
into
out
mov
mov
xor
jmp
fisub
int3
ins
cmp
cmp
push
mov
sar
cmp
adc
xor
or
mov
sub
ds
mov
xor
ret
inc
mov
add
inc
inc
xor
pop
inc
sub
jno
sub
pop
inc
sub
pop
inc
inc
xor
pop
pop
xor
je
into
jmp
mov
inc
sub
jmp
adc
pop
leave
fsin
inc
xor
sub
js
xor
fcom
jae
xlat
inc
leave
scas
mov
inc
test
xor
xor
(bad)
sub
xor
jae
repnz
xor
scas
dec
pop
xor
addr16
ja
ror
test
xor
test
mov
mov
int3
shl
rcr
mov
iret
into
retf
into
mov
ror
into
push
and
ds
std
cmp
inc
mov
repnz
inc
rol
sub
xchg
sub
mov
mov
mov
into
iret
mov
(bad)
into
popa
scas
sub
into
mov
adc
xor
test
xor
js
lods
in
xor
adc
popw
je
dec
call
sbb
fwait
xlat
iret
into
pop
inc
push
rol
xlat
iret
into
pop
mov
xor
inc
sub
ds
xor
jmp
mov
mov
push
popa
int3
adc
data16
mov
ds
and
xor
js
jo
xlat
test
mov
ror
into
(bad)
in
cmp
mov
lods
std
into
mov
push
mov
mov
xor
mov
mov
mov
jae
js
or
aam
icebp
dec
lods
mov
inc
sub
cli
xchg
into
iret
mov
sub
xor
xchg
int3
into
mov
mov
xor
xor
leave
jae
retf
into
mov
(bad)
into
(bad)
in
cmp
mov
xlat
iret
into
(bad)
cmp
xor
sar
mov
lods
or
xlat
or
mov
push
xor
inc
daa
xchg
js
mov
xlat
iret
into
pop
inc
popa
xchg
push
sub
jnp
sub
mov
and
xchg
call
pop
mov
inc
stos
xchg
test
adc
xor
ret
xor
jmp
pop
inc
inc
in
add
imul
into
(bad)
in
cmp
xor
cvtdq2ps
das
out
jae
movs
mov
mov
pop
(bad)
into
mov
xlat
into
xor
cmp
ret
iret
mov
inc
xor
enter
js
jo
sar
xlat
mov
dec
adc
inc
push
sub
push
mov
mov
xlat
into
mov
and
into
mov
out
mov
mov
sub
pop
inc
inc
pushf
rol
imul
into
(bad)
in
cmp
xor
cvtdq2ps
das
xchg
shl
movs
mov
mov
mov
cmp
inc
pop
cmp
ret
iret
mov
inc
xor
enter
js
jo
sar
mov
adc
inc
push
sub
push
mov
mov
xlat
into
mov
and
into
mov
out
mov
mov
sub
pop
inc
inc
movs
rol
imul
into
(bad)
in
cmp
xor
and
mov
xlat
iret
into
inc
sub
xor
mov
sar
mov
inc
mov
add
imul
into
(bad)
in
cmp
xor
and
mov
xlat
iret
into
inc
sub
xor
push
pop
pop
mov
scas
pop
(bad)
into
mov
xlat
into
xor
jne
inc
inc
mov
add
xlat
iret
into
adc
and
mov
adc
inc
sub
sub
cmps
push
mov
mov
xlat
into
mov
and
into
mov
out
mov
mov
sub
mov
pushf
into
iret
mov
sub
xor
js
idiv
cmp
xor
pushf
jae
inc
mov
add
push
mov
xchg
add
inc
out
mov
mov
xor
inc
mov
mov
mov
movs
mov
mov
lods
in
into
mov
xlat
ins
into
ins
int
xchg
mov
inc
sub
mov
mov
xlat
iret
into
pop
mov
mov
xor
aam
ds
xor
xchg
in
(bad)
into
xor
lock
into
jmp
xchg
xchg
xlat
iret
into
inc
stos
mov
dec
cmps
xchg
xor
mov
outs
and
xor
out
mov
mov
out
mov
mov
sub
mov
mov
xlat
iret
into
pop
mov
into
popa
int3
sbb
addr16
test
xor
js
mov
ret
iret
mov
cmp
xor
xor
dec
lods
or
inc
sub
pop
mov
into
popa
int3
adc
cmps
xchg
sub
xor
ins
int
test
xor
icebp
ds
xor
mov
mov
lods
loope
mov
xlat
or
ins
int
xchg
stc
sub
xor
lods
fxch
mov
hlt
into
iret
mov
jg
mov
inc
lock
xor
loopne
inc
sub
xor
lods
aad
mov
ror
mov
jg
mov
dec
lods
pop
xor
mov
add
ror
xlat
xor
repnz
iret
mov
sub
pop
shl
dec
stos
xchg
fnstsw
cmp
xor
xor
push
inc
xor
(bad)
cli
cmp
mov
mov
(bad)
into
iret
mov
(bad)
into
popa
das
dec
shl
movs
mov
mov
mov
xor
cmc
and
mov
mov
into
mov
mov
(bad)
into
popa
retf
into
mov
mov
xor
mov
mov
into
(bad)
les
mov
inc
sub
xchg
int3
xchg
fxch
mov
xlat
sbb
int
lahf
add
mov
inc
daa
mov
inc
sub
mov
test
iret
mov
xlat
iret
into
pop
inc
mov
add
xlat
iret
into
pop
mov
xor
inc
sub
or
xor
xchg
mov
inc
sub
mov
mov
xlat
iret
into
pop
mov
mov
add
aam
ds
xor
xchg
cmp
inc
xor
adc
xor
test
xor
lods
inc
into
mov
lods
or
aas
xlat
iret
into
retf
into
mov
pop
into
iret
mov
iret
mov
loop
test
(bad)
into
mov
cmp
xor
xchg
mov
mov
jg
mov
jbe
mov
xor
pop
xor
mov
iret
xlat
iret
into
inc
movs
mov
mov
pop
shl
mov
into
popa
int3
adc
and
inc
mov
ds
sub
xor
xchg
mov
ds
daa
xor
inc
movs
mov
mov
sub
test
lods
mov
mov
into
ins
int
lahf
sbb
mov
inc
daa
mov
inc
sub
push
les
cmp
ret
xor
mov
(bad)
into
xor
div
inc
sub
pop
xlat
test
(bad)
into
fldl2e
fcmovne
into
(bad)
in
cmp
sbb
int3
into
into
lock
ror
lods
imul
(bad)
xchg
push
into
mov
cmps
xor
inc
out
mov
mov
sub
pop
inc
xlat
test
ret
iret
mov
push
mov
mov
sub
mov
cmp
jmp
retf
into
mov
push
inc
enter
into
mov
xlat
int3
into
retf
into
mov
ror
iret
mov
xlat
iret
into
pop
ror
inc
sub
mov
mov
push
mov
mov
sub
mov
cmp
repnz
xor
nop
and
sub
ror
lods
ins
into
mov
lods
mov
mov
xlat
cmp
into
mov
xlat
iret
into
jle
or
dec
(bad)
into
into
int3
lods
popf
into
mov
xlat
addr16
lods
xchg
into
mov
xlat
addr16
(bad)
jg
sub
mov
xlat
iret
into
int3
lods
aad
mov
xlat
iret
into
dec
stos
jmp
xlat
iret
into
inc
pop
ss
sub
into
pop
mov
mov
xchg
xlat
iret
into
inc
pop
cmp
iret
mov
jle
mov
or
xor
xlat
iret
into
into
jmp
mov
pop
cmp
iret
mov
jle
mov
mov
jle
mov
mov
jle
mov
js
xor
mov
mov
sbb
addr16
rol
mov
loope
fs
int
into
das
lods
test
inc
stos
and
sub
inc
sub
xor
dec
mov
xor
les
push
scas
out
je
jne
and
mov
xor
div
xor
inc
inc
imul
das
sub
mov
sub
jge
sub
(bad)
and
mov
ror
push
aad
aas
fmulp
into
les
xor
pop
test
into
into
mov
ins
shl
inc
sub
mov
and
div
cs
sub
xor
lods
xor
mov
ja
push
mov
xor
inc
sub
data16
ret
push
mov
neg
pushf
jae
sub
not
pop
inc
ror
adc
push
push
inc
sub
adc
bound
jne
mov
imul
call
push
xor
sar
mov
sub
mov
xchg
xor
adc
fsubr
xor
or
xor
inc
sub
xor
mov
xor
xor
into
loopne
stc
into
jmp
jo
inc
sub
xor
fdiv
inc
mov
push
sub
xchg
test
inc
and
ds
push
xor
inc
adc
ds
mov
push
mov
xor
push
inc
sub
into
inc
pop
test
sbb
mov
or
movs
xchg
rol
mov
or
imul
xor
and
jno
inc
adc
mov
sub
xor
sub
inc
dec
mov
lods
push
sub
xor
mov
xor
jo
into
loopne
stc
into
jmp
xor
inc
adc
xor
into
xor
pushf
jae
mov
sub
inc
sbb
fdivr
xor
mov
adc
mov
pop
mov
xor
jno
push
sub
fdiv
into
into
mov
sub
inc
sbb
fcom
xor
call
sar
(bad)
and
xor
into
mov
sub
inc
sbb
fsubr
jmp
mov
pop
mov
xor
jno
push
sub
fsub
sub
xor
sbb
fdivr
sub
xor
loopne
stc
into
jmp
jo
inc
out
xor
fisubr
xor
xor
repz
into
into
mov
sub
inc
sbb
fcom
sub
xor
fldenv
inc
sub
xor
xor
fisubr
xor
xor
iret
(bad)
into
into
mov
sub
xor
mov
xor
shr
inc
sub
xor
shl
inc
sub
xor
scas
jo
mov
lock
xor
aad
sub
nop
stos
mov
xor
call
scas
jo
shl
inc
sub
xor
mov
xor
nop
fstp
imul
jo
rol
xor
scas
push
sub
fcomp
sub
xor
loopne
stc
into
jmp
jo
inc
sar
hlt
xor
inc
test
sub
imul
adc
add
jae
dec
sahf
xor
out
xor
xchg
mov
or
mov
(bad)
sub
xor
imul
jge
adc
xor
and
jno
jge
xor
repz
fidiv
(bad)
mov
xor
jo
(bad)
jmp
mov
pop
mov
xor
ret
and
xchg
outs
xor
mov
je
mov
test
fidiv
fsubr
jno
lods
lock
mov
xchg
aaa
mov
into
loopne
stc
into
jmp
nop
jae
or
mov
xor
mov
(bad)
enter
fidivr
xchg
fisttp
inc
sub
ds
scas
xor
inc
test
mov
aaa
into
inc
and
(bad)
cmps
mov
xchg
fisttp
inc
sub
inc
dec
mov
push
sub
xor
mov
jne
push
sub
inc
push
test
mov
mov
fidiv
inc
add
xor
lods
adc
inc
adc
push
sub
mov
int
xchg
aad
imul
lods
push
sub
mov
and
inc
les
xor
jno
sub
sub
fdiv
push
and
jno
mov
or
dec
mov
mov
cmp
pushf
test
xor
inc
sub
sub
fdiv
push
and
jno
mov
cdq
xchg
add
mov
scas
jo
adc
pushf
xlat
xor
repz
mov
inc
mov
jno
dec
nop
call
ins
lds
test
aam
jle
mov
and
sbb
sub
xor
pushf
jae
das
and
outs
inc
sub
jae
jle
repz
xor
into
rol
(bad)
into
ins
int
add
add
ja
xor
cmp
mov
ja
xor
fsubr
add
ja
xor
sbb
mov
ja
xor
jo
jae
mov
imul
loope
fs
int
(bad)
jnp
data16
fld
and
repnz
sub
into
inc
pop
test
inc
mov
add
js
and
mov
sub
inc
sub
mov
test
je
into
ins
shl
fdiv
inc
sub
fidiv
sub
xor
dec
int
mov
sub
ficom
xor
les
xor
sub
test
xor
inc
sub
into
ins
ror
inc
pop
test
out
je
inc
sub
xor
lock
into
jmp
je
sub
xor
push
mov
dec
(bad)
retf
mov
xor
mov
mov
xor
xor
fsubr
lahf
mov
popa
pop
inc
movs
je
pop
inc
xor
inc
xor
aad
les
inc
movs
je
pop
xlat
inc
xchg
retf
popa
sub
sub
into
inc
pop
test
inc
xor
xor
pop
xor
mov
sub
xor
jbe
xor
sub
mul
and
fisubr
mov
inc
sar
sbb
clc
test
aam
les
test
sbb
mov
mov
cmp
jl
mov
lds
jbe
mov
fldcw
sub
scas
js
inc
mov
fsub
mov
cmp
mov
mov
outs
jmp
into
int
mov
push
cmp
rol
leave
into
out
into
xor
pushf
jae
mov
xlat
and
fsubr
outs
sbb
fs
adc
mov
mov
inc
repz
add
adc
inc
add
inc
adc
inc
sbb
jne
inc
adc
inc
sub
inc
adc
inc
and
jne
inc
adc
ds
sub
xor
ins
and
push
mov
into
inc
daa
xchg
xchg
inc
daa
xchg
ret
xor
retf
jnp
sahf
and
mov
sub
xor
shl
and
cmp
retf
mov
sub
xchg
or
xor
leave
(bad)
shl
scas
sub
xor
jbe
xchg
xlat
pop
icebp
dec
movs
xor
xor
ror
adc
pop
jecxz
movs
and
xor
sub
mov
mov
jl
xor
shl
xor
shl
(bad)
and
stos
fnstenv
push
sub
ficom
dec
sahf
je
sub
and
lea
test
into
inc
rol
mov
pushf
jae
(bad)
adc
xor
push
or
mov
(bad)
adc
xor
(bad)
shl
jnp
xor
mov
sub
xchg
or
pop
xor
mov
mov
inc
or
daa
into
lock
or
(bad)
inc
cmp
mov
jns
inc
push
into
sar
jnp
xor
leave
mov
sub
pusha
into
shl
aaa
inc
pop
ja
mov
sahf
xor
xor
ss
sub
xor
pop
mov
mov
jl
xor
shl
xor
ins
leave
mov
inc
sub
xor
and
inc
test
cmovbe
mov
inc
sub
shl
aaa
inc
pop
(bad)
mov
adc
xor
sbb
ds
sub
or
mov
das
or
inc
sub
inc
pop
sar
inc
sub
and
retf
mov
sub
xor
inc
outs
mov
inc
sub
xor
xchg
mov
loope
fs
int
fisttp
addr16
test
ret
sub
mov
push
xor
mov
scas
sub
xor
fnstenv
xor
ja
add
fld
or
sub
xor
out
cmp
inc
pop
test
daa
xchg
shl
int3
adc
adc
push
leave
xor
xlat
into
push
add
aaa
or
inc
sub
inc
pusha
adc
inc
adc
dec
int
lods
es
mov
inc
xlat
je
out
mov
int
rcr
int
cs
pop
sub
mov
xchg
mov
loope
add
mov
fs
and
pop
sub
jno
stos
retf
mov
ret
xor
sub
xor
ins
leave
test
xor
mov
sub
mov
xchg
stos
fnstenv
inc
sar
inc
jnp
ds
jge
lock
sub
add
inc
rol
xlat
mov
dec
ja
push
jmp
mov
inc
sub
pop
push
sub
bound
jg
aaa
mov
retf
out
into
mov
sub
or
sub
mov
das
div
out
mov
test
into
xor
sub
ss
retf
out
into
mov
sahf
mov
test
into
mov
sub
xor
test
rcr
cmp
xchg
fcmovnu
into
mov
xchg
jae
inc
pop
xor
sbb
xchg
mov
pop
sti
dec
movs
cmp
xor
sar
inc
sub
into
into
sub
popa
fisubr
ds
mov
pop
sti
pop
movs
cmp
xor
jmp
xchg
out
mov
js
jo
shl
sub
into
into
sub
adc
push
fmulp
mov
fcmovnu
into
mov
adc
out
cld
push
xor
jl
mov
(bad)
into
into
inc
daa
xchg
retf
jnp
adc
ret
mov
xor
xchg
retf
push
cmp
mov
into
mov
sub
into
inc
daa
mov
inc
sub
fldenv
into
into
into
lods
jmp
xor
pushf
jae
int3
mov
mov
lock
ds
jno
mov
into
add
cmp
xor
ds
(bad)
fidiv
lock
rcr
into
mov
cmp
xor
fidivr
lods
mov
mov
jo
xor
sub
into
inc
sar
mov
(bad)
fmulp
mov
xlat
into
fldenv
into
into
(bad)
in
cmp
icebp
xor
xchg
(bad)
test
inc
mov
into
fiadd
jmp
xor
adc
mov
xor
test
into
inc
dec
outs
mov
inc
sub
xor
sub
xor
sub
xor
mov
cdq
xlat
into
fimul
test
xor
inc
pop
xchg
xor
fldcw
mov
lods
fstp
mov
sub
into
push
into
xor
mov
test
into
shl
mov
push
into
repnz
into
mov
sub
jno
sub
ds
mov
lock
and
xor
mov
mov
mov
into
into
inc
mov
into
lock
sub
lock
sub
jl
mov
and
cwde
xlat
into
mov
mov
icebp
lock
shl
inc
gs
lea
(bad)
xlat
mov
mov
into
into
inc
sub
xor
pushf
jae
(bad)
xchg
shr
mov
inc
outs
mov
sub
mov
mov
sub
mov
into
(bad)
jmp
cdq
xlat
into
mov
mov
xlat
into
mov
xor
xor
lods
movs
out
mov
test
int3
mov
xor
into
lods
mov
mov
test
out
mov
test
mov
test
in
cwde
xlat
into
fld
lods
in
mov
test
mov
test
out
mov
test
out
mov
inc
xor
inc
or
int3
mov
lock
mov
into
xchg
cmp
xor
movs
popf
cwde
xlat
into
fcmovu
xlat
xor
repz
ds
mov
lock
mov
sbb
cld
out
into
mov
mov
movs
ret
into
lock
sub
jno
mov
into
pop
inc
cmp
xor
sub
into
dec
call
xor
(bad)
push
cmp
dec
lods
or
inc
sub
into
dec
sahf
xor
sub
xor
daa
mov
dec
sub
mov
sub
xor
mov
into
mov
inc
sub
xor
mov
cwde
xlat
into
test
sub
into
inc
mov
into
mov
inc
pop
sbb
(bad)
adc
inc
pop
mov
mov
inc
pop
and
xor
dec
mov
mov
inc
pop
cmp
in
xor
pushf
jae
dec
sahf
movs
xchg
cdq
xlat
into
lock
sub
into
mov
xlat
into
xor
aaa
or
sub
xor
ds
xor
fxch
retf
xor
mov
(bad)
ds
lods
(bad)
xlat
xor
outs
fdivr
or
int3
out
into
mov
mov
into
mov
mov
into
mov
xchg
and
popf
xlat
into
test
xor
inc
sub
adc
xor
xor
xor
mov
jp
xor
inc
sub
adc
xor
xor
mov
jp
xor
inc
sub
add
stc
ds
lods
xchg
out
mov
lea
sub
test
into
popa
mov
xlat
into
test
pop
enter
cmc
cmp
mov
stos
xchg
lds
mov
lock
call
rol
jl
int3
lods
and
cwde
xlat
into
mov
mov
into
into
(bad)
xchg
(bad)
xlat
xor
mov
sub
pop
mov
fcmovnu
into
mov
fcmovnu
into
mov
adc
out
cld
push
xor
push
retf
outs
outs
sbb
repnz
int
fnstsw
addr16
jne
test
imul
mov
out
je
inc
movs
dec
aad
sbb
mov
inc
sub
ret
pop
leave
pop
add
xor
push
in
jb
mov
xchg
xor
ret
push
(bad)
mov
inc
xchg
xor
ret
adc
dec
imul
inc
test
into
inc
out
je
inc
ret
daa
mov
mov
jne
mov
xlat
xor
mov
(bad)
push
pop
aad
outs
xor
xor
loopne
je
out
je
inc
rcl
dec
sahf
fs
jge
and
dec
lods
mov
je
sub
xchg
or
inc
sub
dec
sub
xor
into
jge
ds
imul
xchg
xor
(bad)
shl
inc
test
into
inc
daa
xchg
mov
mov
inc
pop
cmp
(bad)
shl
inc
test
into
inc
daa
xchg
fidiv
xchg
mov
das
mov
inc
pop
xor
ds
imul
xchg
xor
jp
xor
inc
pop
xor
mov
outs
jmp
jp
xor
inc
pop
cmp
add
or
je
inc
test
mov
mov
mov
fnsave
ficom
xor
icebp
jge
or
cmp
je
inc
ret
cmp
cmp
ss
mov
jmp
icebp
sub
inc
sub
inc
inc
test
into
inc
daa
xchg
outs
push
jmp
mov
adc
inc
dec
xchg
jmp
sub
(bad)
movs
mov
pop
into
inc
sub
addr16
sub
mov
pop
test
xor
enter
aas
mov
push
ins
inc
inc
out
jne
inc
sub
aaa
or
mov
je
mov
clc
repnz
xor
scas
push
pusha
xor
data16
add
xor
sbb
xor
mov
xlat
into
mov
adc
inc
cmp
lods
xor
mov
jle
xor
lods
xor
mov
sub
xor
in
and
mov
leave
sbb
loope
fs
int
mov
fild
xor
inc
xor
mov
xor
sbb
fs
int
fst
addr16
lea
xor
xor
inc
mov
inc
sub
sub
sub
xor
xlat
inc
cmp
mov
inc
sub
push
cmp
je
stos
adc
jbe
ficom
rol
(bad)
into
ins
lds
scas
jo
xor
repnz
cmp
pop
shl
inc
sub
add
into
ins
lds
cmp
inc
dec
mov
rcr
movs
je
into
ins
ror
fsub
xor
fst
xor
adc
push
pusha
inc
sub
mov
out
xor
outs
push
jmp
mov
adc
mov
inc
stos
jbe
rol
leave
into
out
pop
xor
test
xor
xor
pop
inc
sub
icebp
mov
jns
xor
out
mov
mov
ret
push
mov
and
mov
pop
inc
inc
xor
jle
not
sub
mov
(bad)
loopne
jno
adc
xor
sar
fs
and
fst
xor
sub
js
xor
fcom
jae
jle
iret
push
sub
scas
mov
xor
leave
(bad)
mov
ins
lds
inc
sub
sbb
repnz
int
popa
adc
xchg
or
mov
inc
xor
sub
xor
sub
inc
sub
into
xor
fst
push
sub
mov
xor
icebp
lods
adc
je
mov
xor
jle
sbb
sub
pop
inc
movs
je
pop
xlat
inc
and
lods
pusha
xor
fst
pop
sub
add
rol
leave
into
out
outs
outs
mov
fs
adc
int
and
sbb
inc
sub
jmp
xor
or
and
(bad)
int
test
repz
xor
jo
push
fptan
jnp
xor
adc
jae
rcr
push
sbb
ficom
xor
cmps
push
(bad)
jnp
xor
in
cmp
jne
dec
scas
sbb
fimul
cmova
test
cmp
int
jmp
das
add
jae
rcl
sub
push
jmp
mov
adc
cmp
ja
add
xor
or
add
sub
push
dec
sahf
xor
rol
sub
mov
and
mov
fcomp
enter
cmp
inc
jno
je
mov
fs
jbe
clc
test
aam
les
mov
lahf
add
mov
movs
sub
mov
les
mov
shl
and
xor
xchg
jae
(bad)
sub
xor
xchg
mov
test
aaa
push
sub
inc
mov
jno
iret
ins
into
fisubr
sbb
(bad)
ror
ins
in
mov
mov
fnstenv
ffree
push
into
xor
sub
pop
stos
sub
xor
inc
into
xor
push
into
xor
jecxz
je
daa
xchg
mov
mov
mov
xor
dec
sahf
je
dec
sahf
jne
mov
icebp
das
inc
ins
fnstenv
inc
stos
pop
fld
pop
iret
inc
test
iret
inc
pop
out
lahf
sub
mov
dec
lahf
xor
push
add
pop
xchg
xor
xchg
sahf
repz
ins
aad
or
mov
ds
cmps
mov
aad
add
xchg
cs
arpl
loope
lock
ds
test
xor
pop
and
arpl
loope
add
mov
push
jmp
mov
jmp
and
mov
xor
cmp
mov
mov
xlat
mov
mov
mov
pop
mov
jno
xlat
mov
mov
jmp
mov
xor
push
mov
jno
mov
xlat
mov
mov
cmp
mov
xor
jmp
xor
mov
mov
and
mov
push
xlat
mov
fnstenv
inc
sub
imul
sub
mov
xor
mov
mov
mov
xlat
mov
mov
xor
mov
frstor
xchg
mov
xlat
mov
mov
mov
scas
fwait
and
mov
jl
jno
and
cmp
xor
ret
jno
push
mov
jmp
and
mov
mov
mov
inc
mov
mov
gs
push
mov
lock
mov
mov
mov
into
loopne
mov
xlat
mov
mov
mov
stc
and
cmp
mov
mov
xlat
mov
xor
mov
mov
loope
push
mov
xlat
mov
mov
mov
xlat
mov
mov
(bad)
xlat
mov
mov
mov
stc
ret
jno
add
xlat
mov
mov
ret
xlat
mov
mov
fdivr
into
test
fs
adc
mov
mov
je
out
je
jbe
xor
ins
int
add
mov
(bad)
ins
aad
add
add
into
ins
sar
cmps
mov
int
sub
inc
rcl
inc
sub
(bad)
and
mov
int
lock
pop
rcr
xlat
push
retf
retf
div
ficomp
scas
test
xor
je
call
dec
xor
xor
xchg
sar
(bad)
mov
clc
test
mov
sar
inc
push
adc
inc
push
mov
xchg
xchg
sti
mov
pop
adc
inc
and
lock
pop
daa
xchg
dec
sahf
jl
outs
loop
and
ins
int
test
repz
das
mov
je
pop
rcl
inc
sub
xchg
shl
lahf
sub
popa
retf
ds
jge
xor
sub
pop
inc
movs
je
pop
mov
fld
or
popa
sub
(bad)
and
mov
int
out
aaa
push
mov
ins
cmp
mov
xlat
into
into
sbb
clc
test
aam
les
bound
jg
mov
inc
mov
add
mov
sub
pusha
into
jmp
lock
dec
jmp
mov
mov
adc
add
sub
dec
shr
dec
mov
mov
inc
sub
ds
push
fdivp
mov
test
out
xchg
jae
into
(bad)
jle
cmp
data16
push
fdivp
mov
or
in
mov
jg
ret
or
xor
inc
xor
cli
push
xor
shl
xor
(bad)
in
sub
into
ins
int
push
test
xor
int3
cmp
add
les
xor
inc
sub
add
inc
call
inc
mov
mov
mov
inc
sbb
mov
shl
xor
mov
pop
out
fldz
xor
into
ins
in
(bad)
xor
int3
push
in
lock
mov
lock
cmp
out
adc
fnstenv
add
(bad)
sub
mov
mov
cli
lock
out
jp
mov
test
xor
inc
mov
sub
popa
fstp
xor
(bad)
in
cmp
xor
ins
(bad)
test
xor
int3
cmp
add
les
xor
inc
sub
add
inc
call
inc
mov
mov
test
mov
xor
push
stos
je
inc
mov
mov
xchg
jae
jle
rol
out
xor
mov
daa
xchg
sar
add
xchg
jae
into
and
mov
cli
push
ds
jge
loopne
mov
jae
int3
and
mov
fiadd
xor
mov
add
mov
fst
mov
mov
js
mov
and
xor
sub
das
sub
xor
xlat
inc
cmp
mov
mov
inc
cmps
jnp
inc
mov
sub
je
mov
fnstcw
sub
bound
sbb
jno
jbe
clc
test
aam
les
xor
bound
xchg
inc
push
into
outs
mov
mov
aad
into
into
out
mov
xor
xor
xor
mov
mov
xlat
into
mov
inc
sub
pusha
into
jmp
ss
clc
push
jo
sar
into
(bad)
ficom
push
inc
sub
je
sub
pop
scas
in
jp
inc
daa
xchg
loop
and
(bad)
lock
add
mov
(bad)
jmp
mov
sub
inc
mov
mov
mov
mov
xrelease
xlat
add
ret
into
mov
(bad)
into
into
pop
inc
mov
les
ror
into
mov
sub
mov
add
pop
inc
inc
xor
sub
jno
lods
retf
xlat
popa
fld
xor
into
lods
(bad)
xlat
mov
idiv
loop
xor
rol
inc
sub
retf
int3
mov
xor
xor
ror
mov
pusha
xor
mov
xlat
fld
add
xor
inc
pop
test
jnp
in
cwde
push
mov
mov
sub
mov
sar
movs
mov
mov
hlt
out
jae
movs
mov
mov
sub
xor
ror
inc
sub
xor
pushf
jae
das
jmp
jae
inc
cld
out
add
(bad)
into
into
pop
inc
xor
inc
test
sub
sub
bound
inc
out
jae
inc
dec
out
add
sub
xor
in
outs
sbb
repnz
addr16
pop
and
sub
rol
leave
into
out
into
xor
pushf
jae
(bad)
out
cmp
push
mov
js
je
js
xor
pop
xor
inc
inc
xor
inc
xor
xor
inc
dec
rcl
sub
jno
adc
xor
sar
xor
shl
inc
inc
xor
xor
into
inc
mov
sub
inc
mov
sub
sbb
repnz
int
mov
mov
into
shl
leave
into
out
into
inc
push
shl
sub
pop
xlat
inc
and
xor
inc
dec
rol
inc
sub
repnz
jg
mov
neg
inc
xor
into
xor
into
inc
dec
xlat
inc
cmp
stos
cmc
sub
jne
fs
int
popa
adc
mov
nop
daa
xor
retf
popa
retf
popa
sub
sub
pop
inc
inc
xor
xlat
inc
cmp
loop
xor
dec
call
fiadd
mov
cmp
inc
pop
inc
xor
xor
into
inc
mov
sub
icebp
xor
inc
mov
sub
icebp
lods
cmp
xor
pusha
xor
jbe
jno
mov
fs
adc
inc
push
mov
je
clc
fbstp
test
xor
mov
mov
test
pop
sub
xor
xlat
inc
cmp
jle
xor
dec
call
fimul
adc
pop
inc
xlat
inc
and
pusha
xor
dec
call
int
inc
pusha
xor
jbe
fisubr
inc
(bad)
mov
mov
outs
xor
dec
lahf
je
sbb
repnz
mov
and
into
out
mov
mov
pop
adc
or
pop
rcl
inc
sub
in
sub
je
pop
push
mov
sbb
jno
adc
das
out
xor
inc
inc
xor
inc
xor
div
scas
mov
inc
mov
in
sub
icebp
xor
icebp
lods
cmp
leave
inc
sar
in
sub
mov
add
outs
outs
mov
mov
jecxz
mov
xchg
and
cwde
push
mov
into
int
popa
adc
mov
mov
int
push
xlat
sbb
test
repz
lods
sbb
inc
pop
into
rcr
jmp
lahf
js
inc
push
rcl
dec
mov
and
ins
int
or
stos
icebp
xor
xor
jmp
pop
adc
inc
and
ins
and
inc
sub
(bad)
and
mov
int
lock
js
shl
js
fild
sub
mov
push
aas
xor
dec
xlat
inc
sub
fdiv
jmp
scas
in
jae
inc
mov
add
into
jge
mov
dec
sbb
fiadd
je
in
xor
sbb
clc
test
aam
les
bound
jg
ins
dec
xchg
call
shl
not
mov
je
mov
idiv
adc
fld
ins
lds
inc
sbb
ficom
xchg
dec
call
xor
mov
xor
inc
aam
out
je
inc
sub
jns
lahf
dec
iret
dec
sahf
or
sub
xor
(bad)
out
push
addr16
ror
mov
(bad)
cmc
jg
retf
inc
mov
mov
es
dec
mov
pop
imul
ja
inc
stos
cmc
and
dec
lahf
je
jl
leave
inc
call
jbe
clc
test
aam
xor
inc
ror
adc
mov
repnz
xor
les
xor
mov
fdivr
into
mov
and
mov
xlat
into
mov
and
ss
fmul
sub
mov
ror
iret
mov
rcl
inc
sub
icebp
scas
(bad)
inc
xlat
inc
and
inc
mov
into
mov
xor
mov
leave
into
mov
xlat
int3
into
int3
xchg
jmp
mov
mov
into
mov
inc
sub
pop
shl
mov
dec
jl
inc
(bad)
mov
mov
and
inc
sub
fldcw
fdiv
ror
mov
std
mov
stos
stc
into
pop
test
xor
enter
cmp
mov
push
cld
into
mov
jge
jae
xlat
inc
cmp
stos
cmc
cmp
data16
jae
xlat
test
mov
ins
xor
(bad)
in
cmp
sub
xor
and
xor
(bad)
enter
dec
push
inc
rcl
sub
test
movs
je
inc
stos
cmc
cmp
xchg
cmp
inc
sub
xor
or
pop
add
xor
(bad)
enter
int
mov
div
adc
add
mov
push
nop
das
jns
sub
xlat
into
lods
stc
into
mov
sub
xor
cmp
inc
sub
xor
cmp
cmps
push
into
repnz
iret
mov
sub
out
add
xlat
iret
into
scas
cmp
stos
cmc
cmp
xchg
cmp
inc
sub
xor
cmp
cmps
push
into
repnz
iret
mov
sub
(bad)
mov
aad
mov
inc
sub
test
shl
fxch
ins
xor
dec
xor
(bad)
enter
int
(bad)
into
data16
push
out
jae
jg
mov
sub
mov
cmp
inc
arpl
out
add
xlat
iret
into
pop
inc
adc
add
ins
xor
(bad)
in
and
xor
and
xor
(bad)
enter
dec
push
inc
rcl
sub
test
inc
jne
inc
stos
cmc
cmp
and
jae
xlat
test
mov
ins
xor
(bad)
in
cmp
add
mov
inc
sub
test
shl
pop
mov
jae
mov
xlat
fstp
add
xor
cwde
push
into
repnz
iret
mov
sub
jb
sub
test
shl
fld
dec
xor
inc
mov
enter
int
(bad)
into
data16
push
out
jae
jg
pop
xor
pop
push
xor
scas
mov
xor
fnstenv
inc
sub
int3
cdq
push
mov
mov
sub
mov
mov
mov
into
popa
das
clc
out
jae
js
dec
add
xor
add
xor
(bad)
enter
dec
adc
xchg
push
xor
test
mov
xlat
iret
into
adc
out
add
imul
(bad)
in
and
bound
xor
and
xor
(bad)
enter
dec
push
inc
rcl
sub
test
ins
jb
inc
stos
cmc
cmp
fisub
sub
retf
add
sub
xor
(bad)
mov
sub
out
jae
xlat
test
mov
imul
(bad)
in
cmp
xchg
push
xor
and
xor
(bad)
enter
dec
push
inc
rcl
sub
test
fdiv
inc
stos
cmc
cmp
mov
inc
and
mov
div
pop
rol
push
shl
inc
sub
test
shl
pop
mov
jae
mov
xlat
fld
and
nop
sbb
xor
mov
aad
mov
inc
sub
test
shl
pop
mov
jae
mov
xlat
(bad)
sub
mov
and
or
sub
xor
(bad)
mov
sub
jae
inc
xchg
push
xor
test
mov
xlat
iret
into
adc
out
add
push
xor
in
and
ret
pop
xor
inc
stos
xchg
lea
outs
xor
inc
out
mov
inc
xlat
into
xor
(bad)
imul
mov
call
int3
into
inc
ret
inc
mov
mov
aad
or
ror
iret
mov
xchg
into
int3
mov
aad
ds
adc
mov
inc
sub
push
adc
sub
xor
addr16
or
shl
lods
sub
into
into
push
mov
into
into
adc
out
add
sub
into
adc
mov
cmc
push
mov
test
mov
aad
mov
sub
lds
into
mov
(bad)
into
into
xor
mov
into
pop
mov
into
popa
das
dec
out
jae
js
jg
sub
mov
xor
pop
push
sub
mov
xor
(bad)
enter
dec
and
jne
jae
xlat
test
mov
imul
mov
add
mov
inc
sub
test
shl
pop
mov
jae
mov
xlat
fst
push
sub
mov
and
out
pop
sub
mov
xor
(bad)
enter
dec
and
fcom
jae
xlat
test
mov
push
cmp
mov
xlat
mov
mov
ror
iret
mov
aad
lds
mov
mov
sub
mov
inc
sub
leave
mov
sub
xor
xchg
xor
mov
arpl
xor
rcr
mov
xor
(bad)
ret
iret
mov
sub
mov
mov
aad
into
xor
push
ret
int3
mov
sub
mov
and
mov
(bad)
loopne
jno
adc
xor
sar
(bad)
mov
or
inc
movs
mov
inc
xlat
into
popa
dec
lahf
mov
mov
sub
popa
fstp
adc
xor
lods
(bad)
xlat
popa
fldz
ror
into
(bad)
in
xor
int3
mov
(bad)
into
into
xor
into
test
lods
int
mov
div
pop
shr
inc
sub
jno
sub
xlat
into
lods
mov
mov
xlat
int3
into
into
out
fst
dec
sub
xor
(bad)
mov
sub
out
jae
xlat
test
mov
pop
xor
(bad)
in
cmp
(bad)
pop
xor
(bad)
and
xor
(bad)
enter
dec
push
inc
cli
out
add
xlat
iret
into
scas
mov
xor
cmc
cmp
xchg
cmp
inc
sub
xor
cmp
cmps
push
into
repnz
iret
mov
sub
sar
xor
(bad)
fimul
outs
inc
sub
mov
xlat
iret
into
retf
xor
ror
iret
mov
xlat
into
mov
and
mov
xlat
iret
into
dec
call
into
into
das
adc
jae
xlat
test
mov
pop
xor
(bad)
in
cmp
scas
push
xor
(bad)
and
xor
(bad)
enter
dec
push
inc
ins
out
add
xlat
iret
into
scas
and
xor
cmc
cmp
xchg
cmp
inc
sub
xor
cmp
cdq
push
into
repnz
iret
mov
sub
sbb
push
xor
(bad)
and
xor
(bad)
enter
dec
push
inc
rcl
sub
test
nop
rdtsc
inc
stos
cmc
cmp
sbb
jae
xlat
test
mov
push
xor
(bad)
in
cmp
es
xor
(bad)
and
xor
(bad)
enter
dec
sar
sub
test
shl
cli
aam
iret
mov
push
scas
fs
inc
stos
cmc
and
xchg
cmp
inc
sub
xor
cmp
cdq
push
into
repnz
iret
mov
sub
push
and
xor
inc
push
xor
(bad)
and
xor
(bad)
enter
dec
push
inc
cli
out
add
xlat
iret
into
scas
or
xor
cmc
cmp
xchg
cmp
inc
sub
xor
cmp
cmps
push
into
repnz
iret
mov
sub
or
sub
test
shl
(bad)
adc
xor
inc
mov
enter
int
(bad)
into
data16
push
out
jae
jg
xchg
jp
xor
cdq
push
into
repnz
iret
mov
sub
(bad)
mov
aad
mov
inc
sub
test
shl
pop
mov
jae
mov
xlat
fnstenv
and
sub
repnz
iret
mov
sub
or
sub
test
shl
pop
mov
jae
mov
xlat
fnstcw
sub
mov
and
cdq
push
into
repnz
iret
mov
sub
sbb
adc
xor
and
xor
(bad)
enter
dec
push
inc
rcl
sub
test
and
xor
cmc
cmp
lods
out
into
mov
aam
iret
mov
push
popa
scas
in
xor
cmc
and
xchg
cmp
inc
sub
xor
cmp
cmps
push
into
repnz
iret
mov
sub
sbb
div
mov
xlat
fld
and
pop
jnp
xor
(bad)
enter
dec
and
fcom
jae
xlat
test
mov
adc
xor
in
cmp
push
adc
xor
shl
inc
mov
enter
not
xor
adc
into
data16
shr
inc
jg
(bad)
sub
mov
cmp
das
jnp
xor
(bad)
enter
dec
and
fcom
jae
xlat
test
mov
adc
xor
in
cmp
cmc
jae
mov
xlat
fstp
jnp
xor
outs
fdivr
xor
cmp
inc
sub
xor
cmp
cmps
push
into
repnz
iret
mov
sub
or
mov
inc
sub
test
shl
fldz
adc
xor
dec
xor
inc
mov
enter
int
(bad)
into
data16
push
out
jae
jg
xchg
jl
xor
call
iret
mov
sub
pop
inc
inc
xor
inc
xor
sub
jno
pop
cmp
jbe
xor
into
lods
fxch
mov
sub
xor
xlat
fld
inc
movs
mov
mov
xlat
test
mov
ror
mov
sub
test
add
xor
test
mov
pop
xor
into
fadd
xlat
into
lods
mov
mov
ror
stos
xlat
int3
into
sbb
clc
test
aam
les
mov
push
dec
pop
into
rol
leave
into
out
div
fimul
(bad)
out
mov
sub
xchg
xlat
popa
pop
int3
cmc
jae
retf
iret
mov
adc
xor
push
mov
mov
sub
into
(bad)
in
sub
mov
xor
adc
jae
inc
jnp
add
sub
into
das
(bad)
in
jae
inc
jmp
add
push
pop
inc
sub
mov
pop
ror
stos
cmc
adc
rol
leave
into
out
outs
clc
test
aam
les
adc
ins
adc
(bad)
mov
xlat
into
mov
mov
ins
cmp
xchg
mov
je
mov
xor
into
lods
mov
leave
outs
sar
je
mov
fnstenv
xor
jge
mov
into
mov
fstp
pop
xor
into
lods
dec
int3
mov
aad
into
scas
fs
xor
fs
movs
dec
int3
mov
sub
jae
shl
leave
sbb
add
xor
mov
mov
mov
into
mov
sub
into
mov
xlat
fnstenv
jo
xor
xor
into
into
retf
xor
movs
inc
int3
mov
sub
shl
xor
add
sub
mov
mov
movs
mov
mov
sbb
xor
leave
add
sbb
pop
or
pop
xor
ret
into
mov
push
pop
repz
jae
das
sub
xor
ror
mov
and
inc
dec
jle
jecxz
sub
add
sub
and
sub
xor
lods
int
mov
pushf
int3
into
mov
sub
into
repnz
test
repnz
int3
into
mov
xlat
into
into
repnz
into
mov
xlat
into
addr16
int3
mov
fcmove
into
(bad)
in
adc
mov
jle
pop
jb
xor
xchg
xor
inc
sub
fwait
push
mov
mov
sub
mov
and
popa
retf
iret
mov
adc
xor
mov
into
mov
sub
inc
inc
jne
inc
movs
mov
mov
adc
xor
cmc
sub
mov
sub
(bad)
mov
xlat
into
mov
mov
sub
push
sub
xor
xchg
mov
mov
dec
div
sub
xor
lods
mov
mov
(bad)
into
into
push
movs
mov
mov
lods
mov
mov
inc
xor
inc
xor
inc
xor
js
xor
and
ds
(bad)
xor
inc
xlat
test
xchg
sbb
xor
(bad)
test
inc
sub
test
aad
into
das
cmp
jae
inc
dec
in
add
(bad)
into
into
pop
shl
inc
sub
pop
mov
push
mov
test
int
mov
hlt
jae
scas
push
repnz
sub
xor
test
pop
mov
lods
pop
int3
mov
loopne
jmp
xor
cs
xor
xchg
mov
inc
dec
inc
xor
inc
sub
addr16
xor
mov
mov
into
into
out
pop
xor
ret
into
mov
sbb
xor
push
mov
mov
xlat
into
mov
and
into
mov
stos
xchg
lods
mov
shl
leave
into
out
fisub
les
xor
inc
ret
ss
mov
into
mov
aad
into
pop
rcr
sub
xor
shl
mov
xlat
fldpi
je
xor
repnz
into
mov
sub
into
lods
cs
neg
jbe
clc
test
fs
int
fst
addr16
jne
mov
retf
sub
rol
(bad)
into
ins
sar
xlat
inc
cmp
mov
iret
into
xor
jmp
sub
mov
mov
in
xor
repz
into
jge
bound
mov
lds
inc
daa
xchg
xchg
loope
lock
xor
movs
jne
outs
js
xor
mov
dec
sub
into
ins
fnstsw
mov
movs
je
pop
mov
loop
inc
sub
cmp
fdiv
arpl
xor
xor
xchg
(bad)
mov
popa
scas
push
inc
and
je
retf
xor
lahf
fs
ins
and
pop
rcl
inc
sub
not
xchg
jne
inc
daa
xchg
loope
lock
mov
scas
sub
xor
je
pop
inc
xor
lods
bound
inc
xor
shl
inc
sub
leave
into
out
pop
into
adc
mov
inc
sub
push
sbb
xor
rol
sub
push
jmp
mov
inc
sub
stos
ja
xor
jg
ins
dec
xchg
fdivr
pop
sbb
test
jno
inc
sub
xor
lods
(bad)
sar
call
pop
push
fwait
push
fldenv
out
cmp
dec
lods
test
inc
sub
not
test
cmps
xlat
into
fdecstp
sbb
xor
in
cmp
xchg
into
repnz
into
mov
js
xor
sub
(bad)
(bad)
into
lods
mov
mov
call
mov
cmps
xlat
into
jno
sub
mov
mov
enter
jle
mov
xchg
mov
inc
xor
into
test
jl
xor
cmc
cmp
inc
cs
xlat
into
inc
dec
rol
inc
sub
mov
enter
out
add
pop
ret
xor
outs
sbb
repnz
xor
scas
test
xor
addr16
jne
pop
jb
(bad)
jmp
ret
into
mov
mov
xor
inc
rcr
sub
jno
adc
xor
sar
jmp
shl
dec
xchg
into
into
(bad)
in
cmp
div
adc
add
mov
dec
nop
jno
inc
sub
xlat
into
lods
shr
xlat
mov
into
into
out
mov
imul
data16
jae
movs
mov
cmps
xlat
into
popa
scas
sub
xor
cmc
cmp
xchg
cmp
inc
sub
xor
cmp
shl
ror
mov
sub
mov
and
xor
xchg
cmp
inc
sub
xor
add
xchg
je
xor
(bad)
enter
xor
mov
hlt
jae
retf
sar
sbb
xor
in
and
cmp
xor
(bad)
and
xor
(bad)
enter
dec
push
inc
rcl
sub
pop
shr
dec
inc
push
out
add
enter
shl
dec
mov
mov
cwde
xlat
into
mov
inc
sub
test
shl
pop
mov
jae
retf
sar
sbb
xor
in
cmp
push
sbb
xor
and
xor
(bad)
enter
dec
outs
ror
inc
sub
test
shl
cli
sub
into
mov
push
mov
mov
sub
mov
cmp
inc
push
inc
and
add
enter
inc
adc
add
enter
shl
inc
sub
add
mov
inc
sub
test
shl
pop
mov
jae
retf
sar
sbb
xor
in
cmp
div
retf
sar
sbb
xor
in
cmp
inc
rol
sub
test
shl
pop
mov
jae
retf
sar
sbb
xor
in
cmp
div
retf
sar
sbb
xor
in
cmp
jle
xor
(bad)
and
xor
(bad)
enter
dec
outs
rcl
inc
sub
test
shl
cli
sub
into
mov
push
mov
mov
sub
mov
cmp
cdq
push
mov
mov
sub
mov
and
(bad)
xor
(bad)
enter
dec
and
inc
movs
mov
cmps
xlat
into
popa
scas
and
xor
cmc
cmp
fcomp
ror
pop
jp
push
mov
mov
sub
mov
and
fwait
jbe
xor
(bad)
enter
dec
and
inc
movs
mov
cmps
xlat
into
popa
scas
loopne
xor
cmc
cmp
xor
jae
movs
mov
cmps
xlat
into
popa
scas
pushf
add
inc
stos
cmc
cmp
xchg
cmp
inc
sub
xor
cmp
shl
ror
mov
sub
mov
and
xor
sub
into
mov
push
mov
mov
sub
mov
cmp
pop
jbe
xor
(bad)
enter
dec
and
inc
movs
mov
cmps
xlat
into
popa
scas
ins
add
inc
stos
cmc
cmp
sub
jae
movs
mov
cmps
xlat
into
popa
scas
sbb
xor
cmc
cmp
lock
inc
(bad)
mov
mov
sbb
xor
and
xor
(bad)
enter
dec
push
inc
rcl
sub
pop
ror
inc
sub
add
mov
inc
sub
test
sar
push
inc
sub
cli
sub
into
mov
push
mov
mov
sub
mov
cmp
mov
sub
mov
xor
(bad)
enter
dec
and
inc
movs
mov
cmps
xlat
into
popa
scas
mov
xor
cmc
cmp
imul
jae
movs
mov
cmps
xlat
into
popa
scas
mov
cmc
cmp
fimul
cmova
fnstenv
sub
mov
xor
(bad)
enter
dec
and
inc
movs
mov
cmps
xlat
into
popa
scas
dec
add
inc
stos
cmc
cmp
xchg
cmp
inc
sub
xor
add
aas
ja
xor
(bad)
enter
xor
mov
hlt
jae
retf
sar
sbb
xor
in
and
cmc
jae
retf
sar
sbb
xor
in
cmp
inc
xor
inc
xor
inc
xor
inc
push
xor
into
lods
int
mov
push
xor
retf
sar
add
mov
into
adc
mov
into
into
adc
test
cwde
xlat
into
fldcw
popf
int
mov
sub
add
fadd
xlat
into
lods
aad
mov
jbe
clc
test
aam
les
adc
fsub
mov
int3
mov
test
xor
out
add
xor
jge
mov
sar
xor
(bad)
(bad)
into
lods
mov
mov
js
xor
(bad)
push
fmul
into
das
sub
jae
shl
out
into
into
sub
lods
xchg
int3
mov
push
xor
das
sub
xor
mov
mov
xchg
jae
inc
test
add
sub
into
(bad)
in
adc
mov
xor
sub
xor
lods
int
mov
pushf
int3
into
mov
sub
mov
xor
mov
mov
into
into
out
into
test
aad
into
adc
mov
mov
cmp
into
mov
call
xor
das
mov
jae
movs
mov
mov
test
xor
mov
mov
lods
int
mov
push
xor
scas
fwait
aam
mov
xlat
into
mov
add
inc
movs
mov
mov
xor
xor
cmc
sub
into
out
div
sub
xor
xlat
xor
inc
sub
into
inc
pop
sub
iret
mov
shl
leave
into
out
mov
into
pop
shl
mov
mov
into
mov
(bad)
into
into
pop
inc
xor
inc
adc
inc
xor
movs
mov
mov
sub
xor
cmp
sub
into
repnz
mov
sub
(bad)
mov
xlat
into
mov
mov
div
das
push
in
jae
movs
mov
mov
test
inc
stos
cmc
and
xlat
xor
imul
iret
into
mov
push
fldenv
xor
into
out
cmp
xor
pop
fld
fldcw
add
xor
lods
dec
retf
xor
mov
and
ds
daa
xor
inc
inc
xor
inc
sub
jnp
sub
pop
inc
sub
xor
lods
mov
scas
loopne
xor
leave
add
inc
pop
in
add
aam
into
pop
rcl
xlat
mov
dec
adc
ds
sub
xor
lods
mov
bound
stos
cmc
cmp
ds
sub
xor
aad
into
retf
retf
popa
(bad)
add
xor
lods
lods
int3
mov
mov
enter
mov
pop
inc
sub
test
aad
into
scas
ins
sbb
inc
inc
cmp
add
sub
popa
das
and
jae
jle
ret
imul
mov
cmp
icebp
xor
pop
cmp
add
xor
mov
int3
mov
jnp
repnz
(bad)
repnz
shl
xlat
mov
dec
ret
adc
ret
into
mov
jle
test
aad
into
scas
(bad)
out
mov
rol
(bad)
into
lods
inc
retf
mov
sbb
div
sub
xor
lods
test
mov
add
xor
aad
into
scas
adc
xor
leave
sbb
mov
into
mov
sub
into
sbb
clc
test
fs
int
fst
addr16
jne
mov
or
rol
(bad)
into
ins
leave
mov
outs
sub
mov
dec
shl
sub
xor
pop
jno
pop
sbb
inc
mov
cs
inc
sub
(bad)
mov
out
(bad)
fstp
xor
mov
xor
sub
xor
fldenv
sub
mov
inc
jle
dec
sbb
pop
inc
inc
xor
dec
add
xor
out
mov
imul
add
xor
ins
int
adc
push
push
inc
sub
cs
xor
ins
int
inc
mov
imul
jae
repnz
xor
scas
mov
data16
mov
(bad)
mov
mov
xlat
inc
cmp
mov
leave
mov
inc
sbb
fiadd
into
ds
sub
pop
jle
jecxz
sub
pop
inc
xlat
inc
cmp
mov
cdq
into
into
(bad)
in
cmp
xor
sub
shr
xor
add
xor
out
ficomp
adc
data16
inc
sbb
fistp
sub
add
xor
lods
inc
mov
test
iret
pop
inc
aaa
in
add
js
xchg
xor
inc
jb
inc
sub
add
mov
scas
cmp
xor
xchg
icebp
xor
inc
into
jmp
fnstcw
xor
je
js
xor
imul
inc
xlat
add
fsubr
fldenv
out
sub
inc
sub
add
xchg
(bad)
mov
dec
push
mov
data16
out
and
sbb
inc
xor
inc
xor
inc
xor
inc
xor
inc
mov
xor
cmp
pop
outs
sub
mov
sub
mov
scas
movs
sbb
inc
test
xor
jle
add
sub
inc
outs
sub
pop
inc
jle
add
sub
push
outs
sub
pop
inc
jle
add
sub
outs
sub
pop
inc
jle
add
sub
ja
sub
mov
add
sub
mov
xor
inc
xor
sbb
add
mov
xor
inc
xor
sbb
add
mov
scas
cmp
xor
xor
sbb
add
mov
scas
sub
xor
leave
sbb
jle
add
sub
(bad)
xor
jle
add
sub
jmp
sub
pop
inc
jle
add
sub
sti
pusha
sub
pop
inc
jle
add
sub
mov
xor
xor
adc
xlat
push
mov
mov
pop
mov
imul
xor
or
pop
sub
mov
sub
add
xor
xlat
add
out
xor
pop
rdtsc
xor
adc
jo
inc
out
mov
sub
mov
sub
aas
pusha
sub
mov
add
jb
scas
jo
rcr
inc
sub
pop
cdq
scas
jno
sub
mov
xor
inc
int
jb
movs
jno
sar
inc
sub
pop
cdq
scas
jno
sub
mov
pop
xor
int
jb
scas
jo
rcl
out
xor
scas
jno
sub
mov
xor
inc
int
jb
scas
jo
shl
fisubr
pop
cdq
scas
jno
sub
mov
xor
mov
neg
xlat
add
out
xor
push
push
xor
in
scas
jo
inc
out
mov
sub
mov
sub
jg
sub
outs
mov
fs
adc
fstp
mov
xor
(bad)
jmp
mov
imul
(bad)
jmp
xlat
into
mov
cmp
mov
ins
aaa
xor
xor
inc
pop
xor
je
pop
jle
push
bound
xor
add
jb
scas
jo
inc
xor
ins
int
add
popa
mov
mov
pop
xor
test
pop
fwait
div
das
leave
jmp
sub
pop
popa
sub
xchg
add
into
add
mov
xor
mov
shl
inc
and
popa
das
in
jmp
sub
scas
rcl
inc
mov
xor
sub
mov
sub
inc
sub
mov
mov
fst
inc
pusha
pop
push
inc
cmp
(bad)
js
in
cwde
push
pop
popf
repz
sub
sub
xchg
daa
mov
sub
sub
sub
sub
sub
sub
pop
inc
inc
xor
inc
and
xor
out
mov
lea
xor
sub
xlat
add
fsubr
fst
or
into
add
mov
xor
mov
sub
sub
pop
and
pop
inc
sub
popa
das
inc
jmp
sub
scas
pusha
adc
inc
mov
add
sbb
pop
xor
sub
das
or
xor
dec
pop
outs
inc
xor
inc
js
sub
jae
sub
sub
xchg
out
jae
sub
mov
xor
mov
sub
sub
pop
out
xor
sub
sub
mov
jae
das
repnz
or
xor
and
jo
test
xor
xlat
add
fsubr
pop
inc
xlat
add
out
xor
inc
dec
xor
pop
pop
xor
inc
xor
inc
js
mov
popf
repz
sub
sub
xchg
push
mov
xor
mov
xor
mov
sub
xor
inc
inc
and
popa
das
hlt
out
jae
inc
mov
add
dec
adc
lods
push
sub
popf
push
pop
inc
inc
jb
inc
sub
outs
or
xor
pop
jmp
inc
inc
xor
sub
xor
sub
and
xor
xlat
add
fsubr
pop
inc
xlat
add
out
xor
sub
xor
sub
pop
cmp
js
in
cwde
push
pop
ret
xor
sub
xchg
(bad)
mov
into
shl
leave
into
out
pop
xor
sub
mov
sub
inc
sub
pop
jnp
fwait
xor
pop
lahf
inc
sub
pop
inc
sub
jae
inc
mov
add
call
sbb
add
xlat
into
pop
inc
xlat
add
fsubr
pop
inc
xlat
add
out
xor
inc
or
sub
xor
inc
xor
inc
inc
xor
inc
js
pop
popf
push
pop
popf
repz
sub
sub
xchg
xlat
mov
(bad)
ffreep
adc
pop
xor
sub
mov
sub
das
test
into
xor
pop
and
inc
sub
popa
das
jnp
jae
inc
jmp
add
push
inc
nop
add
sbb
pop
xor
sub
sub
sub
pop
test
xor
das
sub
xor
inc
jae
add
push
pop
inc
shl
inc
sub
pop
inc
xlat
add
fsubr
pop
inc
xlat
add
out
xor
inc
int3
xor
pop
add
xor
inc
xor
inc
js
and
repz
sub
sub
xchg
mov
jo
into
shl
leave
into
out
pop
xor
sub
mov
sub
sub
sub
pop
out
xor
das
sub
xor
inc
aaa
jmp
sub
pushf
push
pop
inc
sar
in
xor
xlat
add
fsubr
pop
inc
xlat
add
out
xor
inc
sbb
mov
push
inc
xor
(bad)
js
in
cwde
push
pop
inc
bnd
das
sub
xor
bound
inc
sub
pop
inc
xlat
add
fsubr
pop
inc
xlat
add
out
xor
inc
mov
inc
sub
inc
sub
pop
push
inc
xor
(bad)
js
mov
inc
bnd
das
sub
xor
adc
xchg
sub
mov
inc
xor
jb
scas
jo
inc
xor
jb
xchg
jae
inc
sub
inc
in
xor
pop
and
pop
inc
in
out
add
push
pop
inc
sub
xor
mov
scas
push
sub
mov
sub
mov
sub
sub
sub
pop
push
inc
xor
(bad)
js
in
cwde
push
pop
inc
bnd
das
sub
xor
scas
adc
xchg
adc
imul
add
inc
xlat
add
out
xor
inc
stos
xor
pop
cwde
inc
sub
pop
pop
inc
xor
(bad)
js
rcr
icebp
jae
sub
sub
xchg
fisttp
leave
into
mov
sub
(bad)
into
ins
fnstsw
mov
jmp
mov
adc
fbld
pop
mov
pop
sub
inc
inc
(bad)
jmp
adc
mov
(bad)
jmp
xlat
into
mov
cmp
mov
add
jb
scas
jo
rol
inc
sub
stos
aaa
xor
mov
popa
inc
sub
mov
sub
adc
lds
ins
leave
sbb
fsub
inc
inc
xor
sub
jae
inc
shr
add
sub
fsin
or
xor
ins
xchg
jo
inc
xor
jb
scas
jo
inc
xor
adc
je
add
rcl
cmp
and
pop
inc
clc
call
pushf
push
pop
inc
shl
fsubr
mov
imul
into
jb
scas
jo
inc
xor
jb
xchg
jo
inc
sbb
je
add
rcl
jns
and
pop
inc
in
out
add
push
pop
inc
ror
inc
sub
pop
inc
inc
xor
inc
xor
inc
xor
inc
xor
inc
lea
inc
sub
sub
cmp
mov
sub
mov
sub
mov
xor
inc
xor
jb
scas
jo
inc
xor
jb
xchg
jae
inc
push
pop
and
pop
push
inc
xor
(bad)
js
in
cwde
push
pop
ret
xor
sub
xchg
scas
mov
xor
rol
leave
into
out
pop
dec
popf
push
pop
inc
inc
jb
inc
sub
add
mov
xor
inc
inc
jmp
sub
das
imul
inc
xlat
add
fisubr
fnstcw
aaa
xor
(bad)
adc
add
pop
inc
inc
jg
inc
sub
add
mov
xor
ret
and
pop
or
xor
mov
sub
ja
sub
pop
inc
xlat
add
fsubr
pop
inc
xlat
add
out
xor
sub
xor
push
pop
xor
popa
pop
fwait
div
das
lods
jmp
inc
inc
xor
jle
xor
in
nop
jae
test
xor
xlat
add
fsubr
pop
inc
xlat
add
out
xor
sub
xor
xchg
xor
xor
(bad)
js
in
cwde
push
pop
ret
xor
sub
xchg
imul
into
mov
sbb
jo
inc
xor
jb
xchg
jo
inc
and
sub
xor
sub
pop
inc
sub
popa
das
jnp
jae
inc
jmp
add
xchg
das
xor
inc
nop
add
sar
add
mov
xor
mov
sub
scas
xor
inc
inc
repnz
pop
xor
popa
pop
add
repnz
xor
in
test
inc
inc
xor
jb
scas
jo
inc
xor
jb
xchg
jo
inc
and
sub
xor
mov
xor
push
pop
inc
sub
popa
das
cmp
jae
inc
jmp
add
ins
das
xor
shr
add
xor
sub
sub
sub
pop
out
xor
das
sub
xor
inc
aaa
jmp
sub
pushf
push
pop
inc
sar
inc
sub
pop
inc
xlat
add
fsubr
pop
inc
xlat
add
out
xor
inc
aad
inc
sub
inc
sub
pop
pop
inc
xor
inc
js
dec
sahf
push
pop
popf
repz
sub
sub
xchg
cmp
into
add
mov
xor
mov
sub
sub
pop
mov
ss
xor
popa
pop
adc
jae
das
repnz
xor
xchg
jae
inc
xor
jb
scas
jo
inc
xor
jb
xchg
jae
inc
sub
sub
xor
sub
mov
inc
mov
xor
sub
xor
mov
idiv
sub
add
mov
xor
mov
sub
outs
pop
and
pop
inc
in
out
add
push
pop
inc
sub
xor
mov
scas
push
sub
mov
sub
mov
sub
sub
cmp
xor
popa
pop
fwait
div
das
sub
jae
inc
xor
inc
sub
fistp
xor
sub
mov
xor
mov
sub
sub
pop
pop
sub
xor
test
pop
movs
icebp
jae
das
shr
jae
inc
xor
repnz
xor
mov
jae
ror
outs
sar
into
mov
jge
aam
les
shl
sbb
xor
xor
sub
xor
sub
inc
sub
mov
sub
pop
xor
sar
into
shl
leave
into
out
addr16
xor
xor
dec
int
sub
inc
sub
mov
add
popa
mov
xor
pop
or
push
pop
inc
sub
mov
dec
xchg
into
mov
jne
inc
or
into
xor
pop
arpl
icebp
jae
mov
and
and
and
inc
outs
inc
xor
leave
pop
xlat
inc
and
adc
xor
inc
test
movs
in
into
mov
xor
(bad)
mov
out
outs
outs
sbb
repnz
int
fisttp
xor
adc
(bad)
cmp
and
mov
sub
add
xlat
into
into
pop
shl
sub
imul
xchg
xor
test
mov
xlat
mov
mov
xchg
xor
xlat
into
popa
scas
or
xor
dec
into
inc
pop
and
cwde
jae
retf
into
mov
xor
xor
push
into
xor
cmp
imul
mov
mov
sub
mov
arpl
into
inc
pop
and
cdq
jae
retf
into
mov
aas
xor
(bad)
push
into
xor
cmp
imul
mov
mov
sub
mov
xlat
aaa
inc
push
inc
jp
add
xlat
into
into
pop
rcr
mov
dec
xor
mov
mov
mov
rol
mov
into
mov
dec
pop
and
cdq
jae
retf
into
mov
aas
xor
(bad)
push
into
cmp
cmp
imul
mov
mov
sub
mov
xlat
cmp
out
add
into
into
pop
shl
sub
and
sub
xor
add
xor
rcr
mov
cmp
add
into
into
pop
sar
inc
sub
and
adc
xor
shl
xor
dec
into
dec
pop
and
call
mov
xor
sub
push
jae
inc
jp
add
xlat
into
into
pop
inc
xor
mov
icebp
jae
das
xchg
xor
jno
push
sub
push
mov
(bad)
scas
int3
sub
inc
stos
cmc
sbb
fadd
xlat
into
lods
leave
iret
mov
add
into
mov
sub
fs
int
adc
clc
lea
pop
leave
sbb
jle
dec
pop
sub
mov
adc
xor
mov
and
inc
dec
inc
xor
pusha
sub
inc
ja
push
jmp
stos
sbb
xor
addr16
ss
xor
test
mov
out
pop
inc
cmc
push
mov
mov
sub
fdecstp
xor
xor
daa
xor
inc
mov
enter
leave
mov
ror
into
inc
pop
and
call
mov
cmp
ret
xlat
xor
test
pop
sar
inc
sub
test
xlat
xor
(bad)
add
into
into
pop
rcr
mov
into
into
inc
pop
and
fwait
jae
retf
(bad)
mov
cmp
ret
xlat
xor
push
inc
sub
stos
(bad)
into
pop
ror
sub
xor
xchg
ret
xlat
aaa
inc
push
inc
add
mov
(bad)
into
pop
shr
sub
into
inc
pop
and
fwait
jae
retf
(bad)
mov
cmp
ret
xlat
cmp
pop
add
into
into
pop
rcl
inc
sub
test
xlat
cmp
mov
mov
(bad)
into
pop
shl
inc
sub
into
dec
pop
and
fwait
jae
retf
(bad)
mov
cmp
xor
xchg
ret
xlat
cmp
clc
add
into
into
pop
shl
inc
sub
mov
(bad)
into
into
out
mov
mov
into
into
dec
pop
and
fwait
jae
retf
(bad)
mov
cmp
xor
xchg
ret
xlat
cmp
push
inc
xor
stos
(bad)
into
pop
shl
mov
into
into
dec
pop
and
pushf
jae
retf
(bad)
mov
cmp
xor
pop
xchg
jae
movs
mov
mov
into
popa
scas
cs
mov
mov
into
mov
add
push
fldcw
and
mov
xlat
into
add
and
into
into
inc
daa
mov
inc
sub
mov
sub
xor
mov
scas
into
repz
mov
lods
(bad)
mov
lods
out
xor
fdiv
cli
aam
into
mov
sub
xor
xchg
int
mov
adc
xor
mov
mov
lods
sbb
inc
sub
mov
aam
into
inc
movs
mov
mov
sbb
mov
mov
mov
cmc
cmp
inc
(bad)
mov
mov
ror
into
mov
adc
xor
repnz
pop
dec
pusha
mov
mov
add
mov
add
mov
mov
xor
inc
stos
or
fisubr
xor
pop
pop
mov
ins
icebp
jae
retf
iret
mov
xor
xor
mov
sub
out
xor
icebp
jae
retf
leave
mov
aas
xor
(bad)
in
sub
push
inc
xor
mov
shr
inc
sub
mov
(bad)
into
into
out
mov
into
pop
inc
and
add
(bad)
into
into
pop
rol
sahf
push
mov
mov
sub
mov
cmp
mov
(bad)
into
into
pop
sar
inc
sub
(bad)
call
int
mov
lock
retf
leave
mov
aas
xor
(bad)
in
and
movs
mov
mov
mov
pop
mov
jae
retf
int
xlat
popa
fxch
mov
into
(bad)
in
cmp
pop
inc
sub
mov
mov
shl
inc
sub
ret
into
mov
sub
xlat
into
lods
in
mov
xchg
leave
leave
mov
pop
xor
inc
xlat
test
mov
mov
das
int
jae
movs
mov
mov
shl
xor
cmc
and
cmps
xor
mov
mov
add
xor
mov
mov
add
xor
mov
mov
into
fisub
mov
mov
into
mov
sub
push
inc
push
mov
into
test
xlat
xor
dec
xlat
mov
mov
lock
into
mov
out
test
inc
sub
test
lods
int
mov
lock
retf
iret
mov
xor
(bad)
in
and
js
repz
sub
mov
mov
xlat
into
scas
cwde
and
inc
mov
into
mov
sub
sub
mov
mov
sub
xlat
into
lods
std
(bad)
mov
lods
int
mov
fmul
into
mov
sub
pop
rcr
sub
adc
into
mov
scas
pusha
and
inc
movs
mov
mov
sub
test
xchg
inc
jno
inc
xor
sar
sub
mov
xor
retf
int
xlat
popa
bound
xlat
fst
and
dec
call
into
into
mov
xlat
fldenv
sub
mov
dec
xor
jno
pop
sub
sbb
xor
xchg
into
mov
jmp
daa
cmp
xor
jnp
data16
sbb
aaa
add
xor
cwde
jae
sub
aaa
xor
push
cmp
xor
lods
xchg
fistp
cmp
fld
cmp
xor
sub
push
into
jmp
je
mov
xor
mov
xor
sub
xor
fcmovne
dec
inc
sub
fisubr
fstp
cmp
xor
xlat
xor
inc
inc
mov
das
push
sub
fnstenv
xor
pop
shr
inc
sub
repnz
sub
xor
mov
test
pop
cmp
mov
xor
sub
push
mov
mov
xlat
into
mov
cmp
mov
xor
inc
stos
xor
repz
cmp
sub
xor
pushf
jae
(bad)
jmp
or
push
sub
mov
lock
lods
jmp
sbb
out
mov
push
mov
fmul
mov
xlat
into
xor
xor
icebp
xchg
xchg
mov
dec
and
jmp
ss
clc
push
push
into
fidivr
into
mov
xlat
into
xor
lods
xchg
mov
call
xor
sub
xor
into
jmp
ret
into
mov
(bad)
jne
mov
stos
xlat
into
popa
das
mov
std
jmp
in
into
into
pop
shl
inc
sub
retf
fnstsw
cdq
(bad)
mov
sub
mov
mov
xlat
into
mov
mov
xor
mov
stos
xlat
into
popa
scas
lods
test
stos
cmc
sub
(bad)
into
into
pop
ror
inc
sub
repnz
sub
pop
cli
lock
das
mov
imul
add
imul
xor
lock
into
jmp
mov
sbb
mov
inc
sub
ret
pop
test
mov
das
out
jmp
xchg
add
sub
mov
mov
push
mov
xor
mov
xchg
pop
in
lock
das
mov
imul
add
push
xor
into
lock
into
jmp
mov
sbb
mov
inc
sub
ret
pop
xchg
lahf
push
pop
xlat
mov
das
out
jmp
scas
push
sub
cmp
mov
push
into
into
retf
out
sub
ret
jmp
pop
inc
inc
xor
inc
xor
inc
xor
inc
push
xor
retf
xor
ins
test
inc
xor
js
xchg
dec
sub
test
into
ds
sub
repnz
into
into
pop
shl
sub
(bad)
loopne
jno
adc
xor
rcr
retf
addr16
movs
mov
pop
test
xchg
daa
xor
sub
js
xor
fcom
jae
xlat
inc
test
out
je
mov
ins
mov
lods
test
mov
cmp
xor
movs
test
mov
push
inc
enter
inc
(bad)
jle
mov
mov
ror
sub
retf
popa
sub
push
into
xor
mov
retf
mov
into
int3
lods
test
mov
pop
test
mov
xor
retf
jmp
jmp
nop
jae
jo
into
ins
std
mov
inc
mov
dec
xor
xor
mul
xor
into
ins
in
lahf
add
mov
inc
sub
scas
cmp
inc
mov
in
xor
xor
shl
lahf
nop
mov
ror
lods
sbb
test
div
xor
inc
out
je
inc
sub
xor
sub
mov
test
inc
ds
sub
mov
sub
sub
sub
sub
loop
pop
cmps
repz
das
leave
jmp
daa
xor
in
scas
jo
test
xor
cwde
jae
sub
xor
xor
xor
pop
fwait
into
into
(bad)
in
xor
xor
xor
(bad)
pop
push
pop
shl
jae
scas
fdivr
jmp
inc
and
popf
fdivr
pop
xor
scas
mov
xor
xor
mov
div
sub
xor
lock
into
jmp
mov
(bad)
pop
movs
mov
test
inc
test
inc
dec
jmp
repz
pop
inc
sub
mov
cmps
cmps
into
mov
call
pop
test
inc
test
sub
xor
adc
mov
jb
xor
lods
cdq
fistp
inc
xor
pop
jno
sub
sar
js
push
dec
sub
mov
mov
sub
xor
inc
xor
mov
jb
inc
sub
das
fdiv
xor
xor
jb
scas
jo
rol
inc
sub
sub
ins
aad
scas
mov
jmp
mov
(bad)
xor
sub
sub
dec
sub
cmp
jae
repz
sub
test
xor
jg
repz
stc
mov
inc
xor
mov
mov
mov
push
daa
mov
inc
sub
dec
dec
stos
leave
xor
pop
xor
fsubr
push
sub
xor
push
xor
or
inc
sub
inc
pop
adc
ds
jp
xor
inc
daa
mov
inc
sub
fsubr
and
xor
adc
xor
ret
cld
xor
inc
inc
(bad)
jmp
jae
scas
aaa
aad
mov
xlat
into
mov
add
add
aad
into
scas
sub
into
mov
lods
aad
mov
aad
into
pop
xlat
test
mov
and
xor
ds
sub
xor
lods
cmc
int3
mov
ins
xchg
jo
sar
inc
sub
icebp
xor
mov
aad
into
ins
lods
in
mov
mov
into
sbb
in
int3
into
mov
mov
into
sbb
lock
into
mov
mov
sbb
clc
inc
add
aad
into
ins
lods
jmp
mov
mov
xlat
into
popa
sub
sbb
(bad)
sub
mov
sub
xor
mov
push
repz
xchg
das
pushf
jae
into
rol
leave
into
out
mov
and
inc
repz
xor
and
add
pushf
jae
scas
leave
fcmove
mov
pushf
jae
inc
daa
mov
inc
sub
into
jb
test
shr
xlat
push
xor
rcr
leave
into
out
nop
xor
imul
mov
das
xor
sub
sub
fsubr
xor
out
scas
jo
adc
and
inc
dec
rcl
inc
sub
mov
aad
into
into
out
fdiv
sub
mov
mov
into
into
(bad)
out
je
inc
sub
xor
mov
xor
xor
or
mov
xor
sbb
xor
mov
xor
add
xor
mov
xor
xor
mov
xor
xor
mov
xor
xor
mov
xor
and
xor
mov
xor
fwait
aaa
inc
sub
mov
and
xor
lods
(bad)
xlat
or
mov
xor
or
mov
xor
or
mov
xor
and
xor
xor
fnstcw
mov
pop
and
ss
xor
out
jmp
xchg
lahf
aad
into
inc
stos
xchg
in
mov
lods
jmp
fldcw
and
xor
lods
aad
mov
sub
mov
add
inc
sub
pop
xlat
add
fisubr
(bad)
xchg
int3
iret
mov
inc
xor
inc
(bad)
jmp
scas
adc
xor
add
fisubr
fldenv
div
inc
mov
into
mov
mov
xlat
into
xor
adc
xor
ret
xor
into
xor
mov
into
pop
xlat
add
out
xor
sub
xor
retf
iret
mov
push
inc
enter
inc
pop
inc
xor
leave
jae
retf
iret
mov
mov
cmp
xor
or
sub
push
pop
inc
rcr
ret
mov
scas
je
xor
fs
sub
(bad)
mov
xlat
into
mov
mov
lods
ror
xlat
popa
pop
push
jae
retf
int3
mov
and
xor
in
and
sub
xor
lods
int3
iret
mov
xor
jno
shl
inc
sub
into
inc
pop
adc
inc
xor
lock
sub
sub
into
jb
movs
jno
rcr
inc
sub
aad
sub
mov
mov
test
xor
enter
inc
adc
iret
out
inc
inc
xor
dec
and
xor
sub
xchg
xor
call
lods
int
mov
daa
xchg
lods
xor
mov
push
xor
pop
inc
inc
xor
push
sub
sub
into
jb
movs
jno
rol
sub
inc
inc
sub
mov
aam
into
mov
(bad)
into
into
jnp
inc
mov
fistp
inc
sub
pop
movs
mov
mov
add
mov
mov
push
cmp
inc
stos
cmc
and
xlat
xor
inc
movs
mov
mov
sbb
(bad)
dec
sub
mov
aad
into
mov
sub
das
out
out
inc
inc
xor
push
and
xor
sub
iret
dec
sub
fdiv
lods
int3
iret
mov
fxch
into
mov
push
mov
mov
sub
mov
cmp
inc
sub
mov
mov
mov
xor
test
int3
mov
or
sub
push
pop
inc
rcr
inc
sub
add
mov
xor
shl
or
xor
lods
int3
iret
mov
fxch
into
mov
push
mov
mov
sub
mov
cmp
inc
sub
mov
mov
mov
xor
test
int3
mov
or
sub
push
pop
inc
shl
outs
mov
xor
rcr
sub
(bad)
loopne
jno
adc
xor
shl
pop
inc
inc
xor
push
sub
sub
into
jb
scas
jo
ror
inc
sub
leave
inc
sub
test
sub
or
sahf
mov
mov
sub
or
or
or
sub
push
pop
inc
shl
inc
sub
add
mov
xor
ror
mov
mov
into
or
adc
xor
mov
mov
lods
ror
xlat
popa
pop
push
jae
retf
int3
mov
and
xor
in
and
sub
xor
lods
int3
iret
mov
or
ss
sub
into
inc
pop
adc
inc
xor
push
sub
sub
into
jb
scas
jo
shl
sub
jno
sub
test
sub
or
sahf
mov
mov
sub
or
or
or
sub
push
pop
inc
shr
sub
add
mov
xor
shl
inc
sub
into
inc
movs
mov
mov
xlat
jno
jnp
xor
xchg
jmp
inc
sub
pop
movs
mov
mov
add
mov
mov
aam
xor
cmc
and
sar
(bad)
mov
mov
xlat
into
mov
inc
inc
xor
pop
inc
sub
jno
push
mov
inc
sub
into
sub
sub
test
mov
or
repz
xor
outs
mov
xor
loopne
jno
adc
xor
sar
movs
stos
aad
into
adc
push
iret
into
mov
sub
retf
int3
mov
inc
rcl
sub
test
test
inc
movs
mov
mov
xlat
jno
jnp
xor
xor
jp
mov
mov
(bad)
into
into
scas
test
xor
xor
js
xor
fcom
jae
xlat
test
mov
sub
ror
xlat
fxch
inc
sub
into
jb
xchg
jo
rcr
sub
sub
das
sub
xor
inc
adc
inc
sub
mov
mov
mov
xor
xlat
test
mov
sub
xor
and
mov
mov
sub
jmp
xor
mov
arpl
mov
test
mov
sub
xor
aad
into
pop
inc
xor
(bad)
jae
mov
xlat
(bad)
inc
sub
mov
adc
sar
xor
sub
xor
pop
xor
repz
pop
ds
das
js
jae
inc
xor
inc
test
xchg
retf
xlat
into
mov
xor
mov
sub
inc
xor
add
into
xor
inc
push
xlat
inc
cmp
mov
jbe
clc
test
xor
mov
dec
jnp
data16
pop
cmp
into
shl
leave
into
out
mov
xor
ds
sub
xor
push
and
dec
lods
div
inc
sub
add
mov
xor
into
add
mov
xor
test
xor
jb
lods
jo
pop
cmp
jb
nop
jae
shl
(bad)
mov
xor
into
add
mov
xor
adc
dec
xlat
add
shr
fldenv
sub
xor
movs
pop
sub
sbb
fnstcw
sub
mov
add
mov
scas
push
sub
sbb
fld
inc
sub
or
scas
jo
pop
and
jae
sub
sbb
fldenv
inc
sub
or
scas
jo
pop
adc
inc
sub
sbb
fxch
inc
sub
fimul
test
into
ins
lds
jb
lods
jo
pop
aaa
mov
inc
adc
out
xor
sub
fsubr
mov
adc
sbb
inc
mov
xor
jb
movs
jno
pop
aaa
mov
inc
adc
fsubr
inc
inc
mov
xor
jb
scas
jo
pop
aaa
mov
inc
adc
inc
mov
xor
pushf
pop
and
xor
inc
push
xlat
inc
cmp
inc
sub
fiadd
leave
sbb
jae
repz
sub
xor
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
jge
aam
jg
pop
xor
xor
pop
adc
shl
scas
js
xor
cmc
cmp
ins
int
xchg
sub
add
fisubr
dec
call
adc
xor
xchg
cmp
or
sub
sub
pop
inc
jg
xor
shl
xlat
outs
clc
test
fld
xor
push
and
inc
lods
xor
xor
ficomp
sub
xor
gs
mov
rol
lahf
mov
mov
adc
arpl
xchg
shr
xor
xor
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
xlat
adc
mov
xor
inc
