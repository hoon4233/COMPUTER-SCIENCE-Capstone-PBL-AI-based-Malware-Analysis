xor
add
add
dec
add
add
add
add
add
add
add
push
pusha
and
add
adc
adc
push
add
add
add
add
jb
add
jo
cmp
add
add
add
je
add
sbb
jb
add
jo
adc
add
or
or
adc
or
or
imul
pop
pop
or
push
mov
out
sub
add
or
add
or
call
or
add
add
adc
add
mov
add
sub
add
xor
add
add
add
add
sub
push
add
add
or
pop
jae
add
or
outs
sbb
add
or
sbb
add
jne
add
add
add
je
add
add
sub
add
or
or
add
or
add
or
add
or
sub
or
add
or
fimul
pop
sub
pop
outs
sbb
jae
add
or
add
add
add
sbb
add
add
or
add
add
add
add
add
add
add
push
adc
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
and
cmc
js
cdq
jb
add
add
add
jae
je
jb
outs
add
add
add
add
add
add
outs
add
bound
add
add
jns
add
add
cwde
add
and
add
xor
vmovd
sub
neg
pop
fidiv
inc
add
test
xor
lahf
or
mov
sahf
sti
mov
pop
pop
sbb
mov
and
add
mov
clc
jmp
clc
pop
dec
xor
sub
retf
stos
jnp
jne
xchg
cmp
hlt
jmp
xchg
pop
cmp
cmp
inc
ins
xor
inc
jne
push
and
push
lock
mov
fs
pop
adc
jns
call
pop
xchg
jmp
scas
gs
bound
out
dec
fimul
and
leave
pop
sbb
mov
sbb
mov
and
call
fstp
xchg
(bad)
aam
in
clc
fistp
pop
sbb
ret
std
test
imul
jo
mov
mov
lea
xchg
xor
lea
pop
stos
push
xlat
jno
cdq
test
rcr
call
adc
dec
inc
inc
cmps
xchg
mov
mov
lods
pop
cmp
add
xchg
test
aad
lds
in
pop
pop
add
test
cmp
and
mov
jns
mov
stos
ret
add
jno
fwait
mov
(bad)
in
ss
into
mov
stos
call
cmp
ins
xor
fidiv
jbe
add
push
(bad)
inc
jo
or
add
not
idiv
mov
mov
dec
jb
cmp
xchg
jae
dec
sbb
ret
fiadd
mov
in
mov
test
xchg
lods
aad
fmul
test
mov
xor
mov
xor
and
jnp
outs
ret
(bad)
sar
add
sub
stos
scas
clc
xor
(bad)
cmp
cmps
push
jne
mov
ret
jbe
pusha
nop
lds
movs
mov
dec
add
in
pop
iret
and
je
pop
jp
std
adc
adc
loop
dec
call
push
(bad)
data16
adc
fidiv
pop
aaa
push
sub
sub
inc
cmp
xchg
adc
mov
and
out
gs
or
jns
jb
dec
icebp
or
xchg
out
sub
mov
dec
bound
mov
pushf
dec
jo
jb
cmp
adc
push
dec
pop
jmp
xchg
ins
scas
sbb
jecxz
mov
pusha
aaa
sar
aad
adc
ret
dec
inc
mov
mov
in
mov
xchg
xor
int
enter
push
mov
sahf
and
out
cli
in
sub
push
imul
icebp
mov
sub
mov
xchg
inc
outs
sub
sbb
mov
call
in
into
imul
xchg
out
iret
jl
sar
push
imul
jmp
sub
or
inc
daa
adc
loopne
ins
cli
enter
push
rcl
daa
sahf
inc
cmc
hlt
(bad)
clc
jae
cwde
sub
or
xchg
cmp
dec
mov
sub
mov
cmp
inc
fwait
push
sbb
sahf
mov
rcr
pusha
cmp
and
mov
sbb
inc
es
ins
mov
repnz
ins
scas
jno
mov
cmp
mov
lods
xor
mov
adc
mov
mov
in
adc
dec
outs
lock
fwait
int3
dec
daa
cmp
popa
inc
jns
and
adc
dec
stos
jl
push
jg
pop
and
xchg
sub
add
repz
rol
out
mov
pop
fwait
hlt
ret
rcr
xchg
bound
pop
cdq
jnp
xchg
push
dec
cmp
jnp
vzeroall
push
push
ror
jle
nop
out
movs
inc
jl
add
pop
xchg
repnz
ins
test
pop
inc
scas
jl
fcmovu
jle
(bad)
int
or
push
rcr
xchg
arpl
mov
int3
and
les
setge
fwait
ins
fdivrp
dec
mov
and
(bad)
(bad)
hlt
out
mov
pop
retf
or
xchg
shl
data16
mov
movs
cwde
mov
inc
push
add
out
cmp
icebp
push
jl
in
sbb
ss
xadd
imul
add
in
xor
je
or
sub
(bad)
push
jo
inc
sbb
jne
adc
sbb
jne
test
or
fsubp
jl
(bad)
aad
dec
cmp
movs
into
add
mov
test
mov
jmp
dec
bound
push
jecxz
aaa
sbb
aaa
jbe
out
lds
call
clc
pop
jg
test
or
ret
jnp
daa
add
cwde
xor
cmp
ins
sbb
mov
sbb
hlt
ret
mov
out
rcr
sbb
(bad)
pop
cmps
fild
pusha
inc
dec
iret
call
or
rsm
scas
(bad)
ror
stos
xlat
out
jl
sbb
es
jno
jle
xchg
or
cmp
cmp
sti
add
sub
adc
xchg
je
lods
push
xchg
jb
iret
add
or
cld
xchg
push
ins
jo
mov
or
sbb
test
and
dec
popf
popa
ret
xchg
je
jp
inc
fldcw
mov
jecxz
lea
ins
iret
jle
mov
mov
clc
jl
xchg
and
lock
pop
mov
div
rcr
sub
pop
cmps
add
fcomp
xor
inc
adc
inc
xchg
mov
stc
mov
mov
jg
lods
shl
add
int3
mov
lahf
sbb
in
call
xor
and
outs
call
movsx
gs
fldenv
and
loopne
(bad)
movs
ja
in
sti
xor
jmp
sahf
pop
fbld
and
fstp
aad
pop
inc
jmp
mov
sub
repnz
jne
push
pop
aaa
add
lods
mov
xor
outs
pop
adc
addr16
dec
xchg
sbb
mov
lahf
mov
sar
inc
adc
loop
mov
je
test
imul
(bad)
jmp
and
cmp
push
jno
sub
lea
jp
je
mov
test
cmp
or
cli
xchg
mov
mov
call
xchg
xor
movs
inc
out
test
xchg
scas
dec
js
into
or
lods
cmp
retf
push
movs
sub
xchg
hlt
jecxz
add
push
sub
adc
pop
mov
mov
pop
jmp
mov
ss
mov
cmp
cmp
mov
scas
mov
pop
adc
inc
and
aaa
and
dec
jnp
cmp
es
rcl
inc
sbb
ins
xlat
inc
add
stc
push
push
pop
mov
add
(bad)
mov
addr16
lahf
sub
inc
ret
push
pop
imul
mov
data16
lea
xor
aas
jmp
sub
ror
push
call
lock
add
aam
mov
jmp
cmps
into
jae
push
or
call
popf
or
pop
sahf
push
cwde
test
add
int3
xor
push
popa
push
repnz
jno
daa
lods
(bad)
dec
out
in
fstp
mov
pop
stos
pop
sbb
pop
push
scas
jp
loop
dec
sbb
xor
sub
retf
push
pop
xlat
icebp
mov
test
inc
cmp
call
dec
lods
ret
xor
sub
mov
jle
int3
cmp
out
test
leave
inc
inc
and
push
and
cli
xor
push
push
adc
xchg
push
and
imul
adc
sub
daa
sub
xchg
(bad)
enter
mov
rol
add
cwde
into
xor
hlt
fnstcw
in
lods
mov
mov
je
lds
cld
stos
mov
cmp
pushf
push
dec
daa
add
and
lahf
fcomip
(bad)
mov
aam
leave
scas
std
pop
ror
jle
lea
inc
scas
ins
or
or
mov
(bad)
std
adc
jne
dec
mov
adc
les
add
bound
ret
mov
loopne
dec
icebp
jnp
mov
push
test
fsubr
out
add
cmp
dec
out
mov
cmps
retf
mov
shr
add
movs
adc
inc
shr
xlat
and
(bad)
cwde
es
cmp
adc
jp
xor
and
sub
xor
or
xor
in
dec
rcr
mov
jmp
or
xchg
cdq
test
inc
or
push
and
pop
mov
js
repnz
sub
xchg
leave
xor
inc
test
xor
div
pop
push
inc
mov
call
sub
cmp
mul
dec
mov
xor
fisttp
jmp
add
cs
cmps
pop
repz
inc
in
xchg
jnp
dec
sub
jmp
jb
xchg
cmp
sub
pop
aaa
mov
push
jbe
mov
sub
xchg
arpl
adc
scas
popa
repnz
mov
movs
or
add
inc
or
jb
pop
xchg
loop
and
jecxz
fmul
fld
add
(bad)
and
stc
lods
test
mov
pop
in
out
fsubr
loopne
stc
movs
sar
pop
push
outs
xor
mov
mov
les
or
xor
sub
(bad)
adc
sub
inc
scas
sbb
ret
daa
pop
popf
repz
hlt
shl
rcr
scas
(bad)
dec
jmp
or
xchg
sbb
jecxz
inc
retf
lods
shr
(bad)
retf
inc
js
push
pop
pop
sti
stc
xor
retf
xlat
mov
popa
pop
mov
cmc
jne
retf
into
or
je
dec
pushf
pop
iret
call
adc
mov
movs
aas
out
ins
imul
mov
sub
jno
pop
jo
cld
dec
or
push
xchg
aam
xor
sbb
xchg
movs
inc
imul
cmp
add
ficom
fisub
mov
addr16
pusha
sub
pop
jmp
mov
adc
xor
lods
mov
rol
ja
or
test
gs
inc
scas
inc
test
adc
stos
cmp
aaa
mov
mov
movs
es
js
pop
pop
add
inc
js
cmp
jle
test
lock
aas
fsubr
jmp
sub
je
ja
dec
pop
xlat
(bad)
adc
mov
xlat
push
pop
xor
mov
das
mov
jo
and
sub
mov
fisubr
pop
mov
test
iret
into
in
out
arpl
loope
pop
iret
movs
clc
adc
jle
(bad)
loop
lahf
xor
push
je
in
les
dec
movs
mov
and
cmc
push
mov
aaa
jo
mov
stos
mov
ret
push
fld
push
lock
sbb
mov
xlat
mov
cmc
loop
rcl
fs
push
in
jbe
mov
mov
lock
dec
cs
inc
or
fld
cmp
aaa
into
or
(bad)
add
scas
xchg
mov
aad
jge
mov
and
push
sub
xor
or
test
ja
mov
ret
or
ss
pop
sub
xor
inc
enter
mov
leave
adc
add
dec
in
xor
pop
stos
idiv
mov
rcl
jae
adc
dec
cli
mov
mov
rcl
lock
add
inc
xchg
clc
call
inc
cmp
daa
iret
loop
cmp
or
mov
xchg
sub
fidivr
push
in
imul
cmp
pop
dec
stc
fstp
pusha
sbb
pop
movs
popf
push
ret
and
adc
xor
mov
jne
out
lods
cld
data16
clc
push
int
ins
imul
adc
mov
mov
test
adc
cmp
mov
or
scas
push
mov
test
cld
out
pop
pop
dec
addr16
mov
push
push
cdq
mov
fiadd
jae
xlat
mov
loopne
icebp
pushf
shr
jb
xchg
or
inc
dec
sbb
dec
loop
imul
mov
and
cwde
aad
es
push
idiv
mov
pushf
xchg
jmp
les
les
push
in
lock
lock
das
xchg
push
(bad)
das
xchg
call
ds
xor
pop
enter
cld
mov
enter
stos
hlt
cmp
jmp
mov
aam
cmc
push
lods
movs
int
xor
fdiv
add
outs
into
cmp
cmp
mov
mov
out
lahf
add
daa
das
shr
pop
or
icebp
loope
rcr
imul
addr16
mov
push
cld
pop
mov
xchg
xchg
inc
daa
adc
or
xor
pop
jle
les
pop
inc
push
adc
pop
mov
iret
dec
nop
aas
repz
push
loop
out
ins
cmp
mov
push
adc
mov
loopne
test
sahf
or
push
pop
idiv
push
leave
into
ds
popa
test
rcl
in
sbb
mov
jne
pop
ins
mov
ret
cmp
test
cwde
sbb
loopne
xor
sbb
lahf
add
push
es
pop
mov
mov
mov
les
mov
or
aam
jg
mov
xchg
loop
fs
(bad)
out
(bad)
leave
arpl
adc
hlt
movs
cmp
or
push
enter
clc
jecxz
mov
syscall
mov
adc
leave
ror
sub
out
add
or
mov
mov
out
ret
sub
(bad)
rcl
dec
fld
repz
repz
add
ret
xor
adc
pop
pop
push
mov
outs
pop
ret
inc
ins
sbb
and
mov
cs
arpl
aas
pop
or
jmp
outs
or
xchg
push
ret
out
push
cmc
cmp
push
repnz
push
jno
ss
loope
sub
mov
cmp
pop
rcl
add
loope
scas
pusha
or
iret
(bad)
push
inc
cmp
test
cmps
stc
jp
lods
jns
add
lea
add
or
pushf
stos
sub
data16
inc
jno
test
xchg
loope
cmp
mov
rol
and
rol
jbe
or
cmp
in
inc
fwait
mov
fcom
or
dec
jmp
xor
jnp
pop
cmp
nop
fdivp
mov
mov
in
push
sahf
mov
leave
inc
inc
push
sti
in
adc
add
inc
inc
add
dec
ss
aad
mov
dec
sub
or
fldcw
push
xchg
mov
aam
fcomp
cmp
addr16
idiv
aas
pop
pop
and
imul
out
jno
call
data16
sub
rcl
dec
mov
sub
retf
inc
or
jl
mov
push
adc
rcr
dec
jle
popf
and
jne
mov
pushf
sub
dec
lahf
pop
xor
xlat
lahf
lea
add
jb
stc
fst
add
js
fldenv
movs
ret
cmps
adc
leave
iret
lea
movq
or
arpl
sub
mov
mov
pusha
out
push
add
mov
xchg
stos
js
lea
adc
dec
xchg
dec
dec
push
inc
pop
and
mov
inc
test
or
sbb
sti
sbb
pop
imul
loop
sbb
retf
int3
lods
fist
sub
jbe
std
hlt
outs
enter
mov
dec
push
scas
inc
and
mov
stos
jne
sub
jb
and
imul
adc
fs
and
jne
daa
jg
shl
retf
sub
mov
jecxz
es
and
or
clc
(bad)
iret
dec
nop
mov
pop
pop
(bad)
fiadd
aam
int
xchg
mov
xor
outs
dec
or
iret
cs
mov
cmp
sub
lods
dec
jo
cmp
lahf
gs
mov
mov
mov
mov
dec
xchg
das
xchg
or
shl
xlat
test
mov
ja
cmps
in
inc
inc
cmp
jmp
movs
inc
int
cli
or
scas
mul
inc
fist
cmps
jle
das
(bad)
mov
or
sub
xchg
jle
mov
push
stc
ret
rcr
out
repz
adc
xor
adc
push
and
aam
adc
push
inc
xchg
push
or
stc
cmps
bnd
mov
mov
pop
adc
jno
dec
sub
mov
jmp
mov
inc
cmp
or
(bad)
in
repnz
push
mov
icebp
call
out
jmp
xor
bswap
inc
retf
push
push
sub
rcr
mov
mov
xor
out
inc
mov
mov
inc
fist
inc
loop
cmps
mov
ins
mov
xchg
test
sahf
stc
cmps
xchg
and
add
enter
inc
mov
fistp
scas
lds
adc
pop
out
jp
test
fmul
outs
ret
je
les
xchg
xor
aam
ficomp
or
test
adc
(bad)
(bad)
lock
rol
or
loopne
and
adc
nop
fmul
xchg
and
fdiv
jae
sub
push
jne
mov
aam
pop
sbb
mov
push
cdq
sbb
mov
lods
mov
arpl
jmp
mov
xor
repnz
fdiv
pusha
xor
mov
pop
add
adc
xor
mov
cmp
(bad)
mov
or
pushf
push
push
mov
xor
cmp
pop
push
(bad)
sub
push
adc
test
gs
je
fist
scas
out
enter
xchg
adc
lods
lds
xchg
fdiv
pop
xchg
popa
adc
ss
cmp
mov
mov
lds
outs
addr16
push
push
xor
ficom
es
and
pop
xor
sub
cmp
ja
mov
and
(bad)
loop
or
ficom
leave
shl
sub
sbb
repnz
mov
jae
frstorw
fld
mov
cmp
movs
jmp
or
add
lea
ret
mov
jl
pop
mov
les
outs
daa
(bad)
ins
mov
test
je
ja
inc
enter
inc
fstp
hlt
or
icebp
sbb
je
aam
mov
inc
(bad)
data16
lea
xor
and
lea
jg
push
mov
mov
jne
mov
test
sbb
xchg
cmp
inc
int3
jno
xchg
(bad)
outs
adc
fild
rcl
sub
aaa
dec
fmul
xchg
out
in
dec
xor
scas
add
cld
inc
inc
jnp
pop
cmps
cmp
xchg
pusha
loop
pop
outs
mov
into
aas
leave
mov
int3
jns
outs
loop
mov
ds
push
mov
nop
int
(bad)
shl
ror
push
dec
jb
addr16
adc
ins
xlat
scas
mov
mov
inc
push
out
pop
pop
xchg
test
sysenter
or
mov
jecxz
mov
in
inc
inc
out
pusha
adc
loope
rol
enter
pop
sub
js
push
jge
adc
inc
mov
aaa
js
xor
cmp
inc
jno
jl
cmp
repz
pop
dec
jl
cmp
mov
inc
and
loope
pop
add
and
ins
cmp
loopne
jl
xor
fst
cmps
push
inc
push
xor
ss
imul
aaa
inc
or
mov
sbb
cmp
jbe
and
push
xchg
fcomp
push
movs
out
out
adc
jecxz
fisub
rcl
movs
les
cs
repz
data16
(bad)
bound
lods
rcl
cmps
mov
fistp
dec
cmp
xor
inc
std
mov
sbb
scas
push
fdiv
out
es
call
jmp
outs
pop
jl
int3
pop
(bad)
cs
fst
xor
ds
lds
outs
arpl
mov
add
test
pop
ret
mov
xchg
imul
outs
nop
pop
daa
in
sbb
add
in
xchg
scas
mov
fs
xchg
jge
mov
mov
adc
outs
cdq
daa
in
cmp
push
sub
data16
dec
or
mov
ins
test
mov
xor
add
sti
inc
jecxz
jno
popf
(bad)
inc
mov
stc
push
mov
movs
push
pop
ins
dec
jae
enter
test
sbb
retf
sub
cmps
xor
aad
ins
jo
mov
mov
je
pusha
clc
xor
xchg
pop
pop
add
pop
cmp
fld
cmc
fimul
mov
dec
sbb
xchg
add
xchg
or
lds
cmp
push
loopne
dec
sub
mov
push
xchg
add
pushf
adc
fisttp
mov
outs
sub
mov
js
pop
retf
stos
cmp
adc
fucomi
clc
std
jnp
xor
mov
sbb
mov
outs
sbb
sub
pushf
ins
sub
mov
aaa
pop
sbb
sub
and
ja
out
das
imul
jmp
push
cmps
popa
mov
sti
out
stc
xchg
pusha
loop
jo
pop
imul
dec
(bad)
cld
mov
mov
icebp
cmp
movs
xor
sbb
into
dec
aas
cdq
dec
cmp
push
jp
add
push
pop
mov
out
dec
push
hlt
add
loopne
add
sbb
jne
push
push
out
std
into
stos
pop
lods
pop
rcr
imul
sub
adc
shl
test
push
push
in
or
sub
fstp
dec
sub
dec
outs
pop
ret
les
pop
into
cmp
ret
push
push
sub
fdiv
xlat
cmp
xor
pop
push
les
pushf
xchg
scas
adc
cmp
xchg
and
test
in
in
fisttp
retf
sub
sbb
jl
test
ins
rcr
lods
imul
jmp
nop
adc
ins
sub
push
xchg
in
xchg
xchg
push
xlat
jns
push
cdq
iret
scas
mov
pop
lea
(bad)
lods
jae
pop
fcomp
stc
jo
sar
xchg
jmp
(bad)
mov
mov
fcom
xchg
xchg
aas
sbb
cwde
inc
repnz
xchg
pop
mov
addr16
and
dec
sub
mov
or
jb
scas
jae
cmps
test
sub
push
push
mov
jo
pop
add
xchg
lock
jno
rcl
(bad)
call
jle
stos
ret
add
call
add
fwait
mov
inc
rcr
imul
xor
or
cmp
in
daa
xchg
popa
pop
mov
movs
sub
dec
fnstenv
sub
retf
jp
mov
jecxz
add
scas
xchg
std
pusha
jl
add
push
pop
jge
aas
out
sahf
jle
xor
rol
add
jmp
adc
addr16
hlt
fnstcw
fwait
mov
jp
mov
xchg
mov
cmp
sbb
pop
mov
xchg
div
(bad)
sahf
mov
scas
popa
into
repnz
repnz
call
sti
cmp
iret
dec
adc
aas
xchg
dec
xor
sar
fdivr
push
stos
out
fdiv
mov
add
add
loopne
je
push
out
loopne
in
fisttp
sub
jge
sbb
push
add
push
cs
and
jae
ret
cmp
imul
adc
(bad)
lods
cmp
mov
sbb
cmc
call
pop
enter
adc
inc
pop
mov
mov
xor
(bad)
ja
cmp
dec
push
adc
jb
jge
pusha
cmp
or
push
and
movs
stos
xchg
or
cmc
rcr
inc
fmul
test
xchg
mov
ret
xor
stc
test
mov
call
push
mov
push
sbb
lahf
rcl
pop
(bad)
cmc
push
pop
(bad)
or
(bad)
mov
(bad)
daa
pop
imul
in
popa
mov
repnz
push
addr16
stc
xor
int
mov
cmp
push
inc
cmp
sub
mov
fwait
pop
pop
sbb
mov
sbb
pushf
and
cld
sbb
jmp
adc
dec
aaa
push
or
out
xchg
popf
or
(bad)
int3
aad
pop
test
pop
scas
fwait
pop
push
(bad)
xchg
mov
into
fs
out
dec
cmp
lea
lods
jo
cmp
inc
das
gs
ds
sub
adc
add
out
cdq
xchg
xchg
inc
cwde
lods
jne
adc
pusha
pop
jmp
or
xchg
aad
std
dec
adc
inc
gs
mov
fs
push
cmp
repnz
call
ficom
in
leave
inc
mov
or
pop
fild
movs
sub
pushf
push
sbb
xor
arpl
xor
pop
cld
sub
movs
mov
xchg
and
ror
pushf
cwde
push
pop
mov
jnp
and
imul
inc
pop
sti
fsubr
sar
cmp
or
fadd
fs
jg
mov
sbb
inc
mov
movs
cmp
sub
sub
out
jl
push
mov
pop
dec
mov
mov
call
inc
shl
movs
cld
jbe
jns
mov
xchg
dec
outs
adc
out
dec
imul
nop
in
cwde
in
data16
xchg
pop
push
(bad)
dec
pop
fsubr
pop
jns
rsqrtps
adc
lahf
imul
movs
or
jecxz
aam
and
pop
adc
sar
jb
mov
(bad)
pop
enter
adc
(bad)
cs
or
cmp
mov
mov
mov
xor
ds
ss
mov
mov
cdq
xor
jecxz
leave
test
mov
loop
fcmovnb
inc
aad
ins
icebp
mov
xchg
jns
inc
popf
inc
sbb
in
sbb
aad
mov
mov
mov
or
test
sbb
sbb
and
aad
ja
fs
jmp
push
sub
dec
xchg
cld
test
sub
rcl
inc
pushf
cs
(bad)
mov
add
ja
sub
push
imul
mov
xor
or
es
pop
dec
das
pop
js
add
rcl
retf
adc
push
leave
pop
xchg
jg
sbb
sub
or
pop
outs
sbb
call
movs
(bad)
mov
cmc
pushf
push
and
ds
push
movs
pushf
push
xor
jge
xchg
jo
lds
rcr
dec
cmp
xchg
std
push
sbb
jnp
lahf
or
into
rol
pop
ss
lods
mov
push
push
sbb
ret
inc
pop
jmp
xor
test
cmp
push
sub
pop
out
cdq
xor
(bad)
push
push
xchg
push
jnp
jle
repz
xchg
xor
add
stos
xchg
cmp
movs
jnp
mov
int3
imul
sub
inc
jge
lock
adc
sub
push
adc
jno
inc
loope
mov
xchg
or
or
xor
dec
push
jnp
pop
aas
mov
xor
adc
psubsw
aaa
xchg
out
mov
loope
rcl
dec
ror
cmp
dec
mov
cmp
dec
mov
pop
dec
mov
or
sahf
jp
inc
sbb
xor
jecxz
movs
and
imul
int
dec
mov
sbb
mov
cmp
push
jecxz
mov
xor
cmp
fmul
and
push
js
or
dec
dec
ret
or
shr
mov
xchg
pushf
adc
aam
cmp
popf
or
sti
cmp
fldcw
mov
stos
outs
xchg
cmp
sub
jmp
push
cmc
xchg
bound
shl
ins
sub
adc
sahf
jae
add
cmp
popf
mov
mov
and
mov
fwait
pop
vpshufb
cdq
(bad)
sar
pop
mov
cs
test
jb
add
inc
cmp
mov
xor
imul
aaa
ins
xor
mov
jge
mov
ins
push
add
stc
imul
jmp
jl
test
mov
fst
jmp
(bad)
jne
(bad)
push
ja
rol
push
mov
mov
test
pop
outs
ror
fcomi
xchg
mov
pop
movs
jge
js
xchg
xor
mov
push
pushf
and
xchg
inc
xlat
fwait
sub
push
sub
or
and
(bad)
fisub
inc
mov
mov
sar
adc
cmpxchg
mov
in
sahf
loop
cmps
cmp
shl
enter
je
jo
leave
repz
mov
pushf
mov
jbe
cmc
sahf
dec
popf
repz
or
push
mov
dec
ds
cmps
loop
loopne
xlat
dec
loop
loop
pop
arpl
out
loop
sbb
and
scas
ss
adc
sub
add
neg
in
add
imul
ret
movs
imul
pop
xchg
retf
pop
movs
mov
aas
popa
repnz
cmp
pop
add
mov
into
jp
call
sbb
std
out
cld
pop
pop
cs
out
adc
loop
imul
aas
and
(bad)
push
test
pop
ror
adc
ret
neg
out
pushf
sub
stc
pop
xchg
ret
bound
gs
add
mov
stos
sbb
dec
push
lods
or
xor
inc
daa
pop
mov
jl
stos
cwde
sub
sbb
lock
sub
cdq
in
push
and
(bad)
enter
mov
add
and
in
sbb
pop
dec
call
sbb
out
cmp
xchg
mov
xchg
les
pop
std
xchg
(bad)
pop
cmp
test
scas
push
sti
xor
dec
enter
aam
jne
cmp
rcr
jo
les
repnz
push
retf
add
sbb
loope
adc
sub
dec
jne
jecxz
imul
mov
jecxz
into
sub
aaa
(bad)
and
jle
jl
sub
test
jne
mov
bound
add
dec
or
shrd
cmps
scas
jnp
add
aas
ja
arpl
adc
leave
call
xor
adc
repz
and
adc
mov
mov
sub
cld
inc
lock
xchg
jp
jle
jb
into
fnsetpm(287
inc
pushf
repz
leave
sub
in
scas
std
push
movs
dec
push
jmp
xor
shl
mov
jmp
les
cmp
dec
test
mov
rcl
cmp
xchg
mov
inc
mov
sub
bt
sub
in
call
xchg
mov
popa
xchg
xor
sbb
scas
and
movs
in
jmp
(bad)
pop
fwait
xor
(bad)
fcmovbe
or
pop
sub
inc
ret
rcr
mov
pop
xchg
pop
ja
movs
add
push
call
push
inc
mov
cli
ins
xchg
push
ror
repz
ins
xchg
leave
dec
jle
and
jmp
xor
inc
cwde
inc
aaa
and
sub
pushf
adc
pusha
inc
sbb
int
or
and
ret
mov
in
out
pop
fs
movs
mov
dec
(bad)
arpl
push
and
(bad)
loopne
movs
std
cmc
pushf
sub
cli
mov
rcl
pop
jmp
dec
mov
ret
clc
mov
or
adc
test
pusha
cmp
push
push
int3
or
gs
and
das
jns
xlat
add
pop
in
push
pop
fstp
clc
js
je
test
or
or
or
push
cmp
jecxz
not
cld
scas
jae
js
inc
(bad)
stos
cs
or
jmp
mov
fwait
pop
push
inc
test
test
out
xlat
out
adc
jae
and
fwait
cld
sub
fwait
mov
sub
pop
xor
pop
mov
sbb
or
aas
cmp
push
inc
clc
stos
aas
and
push
mov
mov
ss
lahf
stos
cmp
xor
ficom
outs
cmp
adc
xchg
add
xor
xchg
mov
nop
pop
fsub
and
fld
not
ds
xchg
xchg
clc
jle
shr
cmps
adc
xchg
and
imul
cmp
data16
cmp
cs
ins
call
and
(bad)
repz
adc
aas
jno
inc
movs
(bad)
jae
push
cmps
rcl
in
cs
and
int3
scas
push
loope
xchg
sti
or
gs
hlt
dec
and
pop
dec
mov
sbb
out
fs
imul
and
scas
out
dec
xor
xor
int3
dec
cmp
mov
rcl
xchg
sbb
aas
mov
cld
cmp
cmp
or
mov
inc
add
cmovs
mov
mov
sub
push
pop
mov
cld
lods
outs
loope
jle
std
fstp
sub
dec
mov
sub
adc
or
sbb
mov
sar
jecxz
outs
ds
sub
pop
loopne
sub
(bad)
fsub
call
movs
jb
mov
or
ret
int
jmp
sbb
adc
iret
and
push
leave
jmp
int3
adc
add
gs
fnop
fidiv
leave
sbb
repnz
push
mov
jno
fild
xor
cmp
fcom
adc
ins
fld
push
arpl
cmp
push
cmps
out
xor
movhlps
or
loop
std
mov
fisubr
loope
or
mov
adc
xor
pop
mov
test
sar
(bad)
int
xor
repnz
fisub
jecxz
mov
mov
hlt
std
dec
or
cmp
je
pop
xchg
repnz
out
adc
(bad)
sbb
jne
and
mov
aaa
ins
cmp
imul
shl
inc
dec
in
mov
aas
sbb
adc
xor
shl
mov
mov
(bad)
rol
fldcw
pop
clc
cli
xor
fwait
push
fcmovu
loop
sbb
rol
mov
fnstsw
cmp
push
mov
call
or
jne
cmp
retf
fsub
pop
(bad)
(bad)
jae
xchg
iret
mov
sbb
add
mov
clc
clc
sbb
jmp
sbb
jae
call
loope
es
cmps
cmp
shl
(bad)
imul
inc
cmc
adc
daa
sbb
dec
xchg
mov
pop
cmc
inc
cmp
daa
and
sbb
test
xchg
shl
mov
and
(bad)
lock
cmp
and
gs
clc
test
mov
(bad)
and
ja
adc
xor
icebp
out
xchg
fcomp
lods
stc
loopne
mov
pop
nop
push
push
xchg
aas
sub
dec
out
cmp
push
ins
adc
jns
and
add
inc
pusha
out
aaa
jmp
adc
out
and
jmp
mov
pop
sar
ret
and
les
mov
pop
pop
inc
mov
jae
rcl
add
and
in
in
push
shl
and
(bad)
xlat
cs
pop
movs
xchg
mov
and
xor
gs
xchg
leave
add
push
imul
push
out
(bad)
push
lods
sub
cmps
xchg
push
daa
sub
ret
ret
add
mov
ret
and
jmp
push
adc
test
jg
repz
mov
shr
mov
or
in
cmp
shl
inc
pop
inc
jno
fstp
cs
sub
jnp
push
leave
(bad)
mov
sbb
loope
mov
inc
push
iret
dec
xchg
push
cmp
or
stc
mov
fs
test
pop
in
loop
nop
shl
add
sbb
mov
or
aad
dec
dec
stc
ret
lahf
and
mov
cli
sub
jne
fild
xor
dec
mov
int
xlat
push
jg
div
movs
mov
aas
sbb
in
inc
stos
mov
pop
jns
fistp
(bad)
das
pop
int3
ficomp
test
data16
push
fwait
pop
xchg
icebp
jp
repnz
jbe
rsm
ret
ins
mov
repnz
movs
addr16
stos
xor
dec
or
scas
xchg
(bad)
and
not
int3
push
or
push
cmp
mov
(bad)
pusha
xchg
and
pop
dec
test
int3
scas
(bad)
sti
or
xchg
and
cli
loope
cdq
xchg
cmp
mov
idiv
call
(bad)
and
cmp
mov
mov
(bad)
jno
push
push
jg
sbb
pop
inc
clc
ds
xor
cmps
or
or
(bad)
ins
lds
icebp
adc
mov
sbb
adc
lahf
sub
shr
out
fwait
call
inc
mov
ds
xchg
(bad)
jnp
shr
nop
lods
mov
and
cmps
inc
imul
push
fnsetpm(287
and
imul
(bad)
push
aaa
lahf
mov
call
out
dec
jns
cmp
into
jg
push
outs
push
pop
jmp
nop
jnp
pop
sub
jle
mov
cmp
pop
das
outs
push
adc
lahf
cmp
repnz
ins
pop
int
xchg
pushf
pop
pop
push
rcl
sti
or
or
jns
stos
add
jmp
xor
pop
aad
mov
dec
jb
jl
ins
sbb
adc
inc
cli
mov
fld
pushf
push
push
add
std
lahf
cs
fwait
jmp
xchg
jmp
xchg
inc
sub
icebp
sub
es
fidiv
adc
in
(bad)
dec
(bad)
jns
arpl
arpl
stos
jmp
cmc
mov
jns
ror
in
outs
call
sbb
imul
aam
and
scas
movs
mov
cmps
mov
add
test
add
add
mov
jno
(bad)
pop
lahf
mov
and
mov
out
and
shl
fidivr
adc
and
movs
add
mov
lock
sbb
pop
inc
and
test
xor
pop
ds
das
stos
fwait
aad
lods
sub
push
call
and
pop
cmps
std
mov
xchg
out
dec
push
sbb
adc
xor
mov
ds
(bad)
jl
mov
push
and
fmul
daa
out
xchg
fwait
retf
test
retf
retf
fadd
shr
mov
mov
scas
pop
sbb
dec
pop
jle
jae
adc
jno
inc
push
mov
les
inc
xchg
dec
pushf
lods
ror
std
loope
imul
inc
arpl
mov
ins
jmp
sti
pop
sub
inc
add
loope
(bad)
dec
jmp
mov
push
push
jge
xchg
int
bound
stos
xor
leave
ja
imul
pop
out
ror
lods
pop
dec
dec
lods
int
or
add
addr16
popf
xchg
and
out
mov
(bad)
aas
cmps
or
sbb
mov
in
fcmovbe
and
pop
lods
rcl
or
stc
clc
out
(bad)
or
(bad)
aaa
in
(bad)
es
xchg
sub
add
push
fadd
jns
test
adc
data16
lods
inc
scas
xchg
sbb
and
call
xchg
cmp
pop
xor
movs
push
xor
inc
sbb
dec
push
scas
mov
and
test
fs
dec
xchg
mov
jl
push
mov
fucomi
jmp
inc
rol
sahf
adc
pop
sar
dec
test
mov
xchg
pop
out
scas
jo
and
add
xchg
mov
xor
mov
rcr
xchg
in
xor
sar
cmp
test
add
cs
dec
mov
pop
rcr
sub
cmp
push
jae
enter
mov
cmp
dec
ret
les
mov
in
pop
jl
sub
or
jne
push
inc
push
out
mov
pop
idiv
and
jmp
mov
xor
adc
aad
or
push
jno
es
mov
das
adc
mul
gs
sub
ss
xchg
cmp
icebp
cmp
add
xchg
jg
adc
es
dec
adc
inc
jne
jb
clc
fcom
test
pop
inc
lahf
int3
aaa
in
push
dec
inc
hlt
imul
in
xor
xor
in
call
lds
sub
inc
pusha
dec
cwde
jmp
lds
jnp
and
gs
lds
and
aaa
in
sahf
or
aas
add
cmp
pop
in
arpl
les
sub
dec
jge
mov
xchg
cmp
mov
rol
adc
jl
je
jnp
arpl
fild
inc
mov
mov
cmp
aas
or
das
xchg
add
(bad)
jmp
cmp
inc
push
jne
test
cmp
jno
cli
ss
movs
fnstsw
call
jp
daa
xor
pusha
in
int
pop
daa
fistp
dec
data16
xor
test
mov
imul
icebp
daa
push
xor
aas
sbb
cmp
js
scas
push
jb
pop
add
mov
neg
xlat
push
sub
cmps
test
test
sti
mov
cli
jecxz
xchg
inc
pop
cmc
mov
retf
xchg
pop
push
cmp
mov
xlat
and
xor
cmp
(bad)
push
pop
xor
ror
push
and
cmp
mov
xchg
sub
imul
cmp
inc
cmp
jae
xchg
cmc
(bad)
adc
xor
inc
push
adc
rcl
mov
jmp
inc
(bad)
ja
mov
fdivrp
sub
jge
jle
imul
push
(bad)
fucomip
ins
push
mov
fsub
loop
stc
jg
or
xchg
daa
jnp
inc
or
xlat
adc
(bad)
adc
loopne
(bad)
xlat
in
jno
jo
call
lock
mov
pop
jns
movs
gs
mov
out
jne
aam
mov
jne
pop
leave
bound
aaa
out
mov
(bad)
add
jbe
xor
push
stos
cmp
jb
retf
mov
and
xor
mov
ffree
sub
scas
xor
ret
ja
sub
popf
mov
lahf
mov
ds
pop
sti
pusha
push
sbb
push
dec
add
push
mov
push
test
sbb
mov
push
test
retf
mov
popa
cmp
in
mov
test
cdq
adc
xor
sbb
ja
mov
in
cmp
adc
sub
push
mov
jge
mov
adc
aaa
pusha
rol
iret
popa
mov
dec
pop
adc
mov
xor
xor
and
xchg
pmaxub
(bad)
sub
popa
fdiv
stos
iret
cmp
add
jbe
jle
mov
xor
fwait
sub
push
pop
out
lods
xor
jo
nop
jmp
arpl
retf
rol
stos
imul
fsubr
jg
pop
jg
jp
movs
in
mov
jl
test
mov
pop
mov
mov
mov
mov
xor
les
push
push
mov
cmps
neg
sub
pop
daa
loope
into
or
cmps
inc
dec
sub
lea
push
outs
out
mov
mov
sbb
adc
pop
repnz
cmp
int
ja
mov
mov
inc
dec
and
sbb
cmp
inc
das
imul
sub
xor
jns
xor
(bad)
cli
xchg
pop
xchg
lahf
push
push
mov
inc
push
sbb
je
adc
sti
push
and
jl
and
loop
fcom
xchg
or
sbb
cmp
sbb
stos
cmps
push
push
movs
test
xlat
int3
call
outs
add
mov
retf
jnp
popf
call
cmc
test
jne
jae
mov
add
push
xor
xor
push
rcr
adc
fs
dec
adc
mov
scas
and
popa
push
add
cmp
mov
jae
loop
cmps
lea
mov
repnz
rcl
lods
mov
ror
pop
mov
into
cwde
dec
in
dec
sbb
(bad)
pop
rcl
cmp
pop
sbb
loop
jb
ret
xchg
xchg
jns
loope
or
cmp
push
in
das
sahf
dec
rep
imul
mov
jb
test
jno
mov
movs
das
mov
jne
aad
leave
loope
ret
repnz
outs
ficomp
in
and
into
push
xor
fst
imul
adc
push
loop
cwde
mov
and
jno
mov
sbb
cmps
and
out
adc
dec
adc
retf
push
scas
scas
jne
retf
mov
add
sbb
loope
add
xor
mov
push
pop
test
inc
jl
pop
daa
ins
cmp
stc
or
add
xor
std
pop
mov
fadd
add
cmp
jecxz
mov
mov
add
hlt
jbe
jl
pop
and
jmp
into
and
je
cmp
lock
aaa
lahf
mov
sbb
in
lock
in
push
call
push
pop
retf
lock
xor
push
xchg
test
cmp
adc
pusha
pop
out
repnz
push
clc
stos
push
jg
test
pop
pushf
dec
lods
sub
stos
je
sub
jg
push
and
or
push
dec
stos
jae
add
jle
ins
push
sti
cli
(bad)
mov
icebp
cmps
jbe
push
ror
fadd
das
cmp
sub
cs
aam
cmps
test
retf
mov
dec
aam
aam
inc
push
in
inc
das
and
jl
loope
movs
(bad)
cmp
sub
dec
in
push
mov
sbb
out
hlt
lock
mov
push
xor
dec
out
call
call
mov
in
fild
stos
cmp
mov
rsm
jb
fiadd
rol
retf
loopne
dec
jecxz
mov
cmp
aaa
jno
pop
aad
cmps
mov
mov
es
into
cdq
mov
lock
aaa
xor
icebp
js
and
mov
dec
aam
or
or
mov
pop
dec
push
sbb
dec
dec
mov
sub
mov
mov
inc
test
adc
mov
das
leave
leave
jne
dec
lea
cli
lods
loopne
(bad)
repnz
xor
cmp
jle
inc
sbb
xchg
xchg
outs
idiv
jmp
add
outs
pop
fbld
imul
fist
fucomi
retf
xchg
ja
aad
loop
mov
xor
add
aam
enter
push
sbb
out
dec
test
test
push
std
pop
test
adc
or
inc
dec
cmp
popa
rol
ror
dec
(bad)
cmc
retf
lds
push
and
pop
xchg
mov
shl
jp
cdq
push
xchg
mov
movnti
xor
movs
sub
adc
test
lock
inc
rcr
ins
xchg
jno
mov
lock
sar
sub
jmp
push
dec
mov
push
push
cmp
xchg
push
movs
cmps
jge
(bad)
frstor
jl
mov
push
cmps
adc
pop
cdq
sbb
add
push
cmp
(bad)
jo
test
add
lahf
les
in
and
loope
sahf
dec
jl
hlt
call
imul
dec
mov
push
fld
fdiv
sbb
aaa
enter
pop
or
pusha
sub
inc
sbb
add
pop
sub
pop
int3
or
in
and
out
dec
and
mov
mov
xchg
ins
and
rcpps
and
mov
pop
ins
mov
mov
add
mov
xchg
iret
and
xchg
leave
aas
jno
lods
ss
xor
sbb
addr16
push
cmc
sub
js
inc
mov
inc
pop
sahf
int3
rcl
inc
pop
xor
mov
mov
sti
repnz
call
mov
scas
cmps
pop
mov
sub
xchg
push
ror
cs
repnz
js
inc
push
outs
pop
mul
and
adc
out
add
ror
pop
cdq
shl
cmp
das
(bad)
fisub
xor
in
xchg
aaa
cld
mov
(bad)
ror
cmp
xchg
sub
sub
ret
mov
inc
addr16
popa
addr16
mov
call
jecxz
inc
mov
fwait
xor
push
outs
inc
fwait
jmp
loope
nop
mov
sub
add
push
lds
sbb
cmp
push
je
sti
cli
xchg
mov
add
in
jecxz
out
clc
jg
mov
mov
push
mov
mov
add
xor
repnz
and
icebp
sbb
xchg
add
jmp
adc
fwait
push
lods
mov
pusha
push
popf
lods
mov
pushf
add
mov
mov
loope
and
pop
sub
fldcw
inc
out
adc
aaa
push
sub
and
aaa
(bad)
(bad)
mov
push
xchg
(bad)
or
xchg
xchg
sti
sti
pop
push
jno
adc
aam
jbe
mov
cmp
pop
mov
es
in
out
push
or
fistp
call
sar
cmps
not
cmp
les
push
ja
outs
cwde
sbb
mov
push
push
mov
mov
pop
sbb
push
mov
bound
call
cmps
js
adc
out
(bad)
xchg
push
and
push
stc
jl
mov
jnp
and
push
add
jmp
xchg
xor
and
gs
sahf
dec
sub
push
lahf
inc
cwde
mov
jb
dec
cld
jge
ds
cld
push
mov
inc
mov
fs
cmps
in
ficom
jne
test
lahf
and
std
loope
push
popa
cmps
and
scas
fwait
adc
addr16
je
scas
mov
jmp
inc
jbe
push
and
stos
add
jge
repnz
popf
pop
loop
ins
aam
push
or
or
ja
lds
xor
xor
cmp
and
sub
lea
std
lods
retf
jecxz
cmp
push
aad
ret
cmps
push
mov
lock
retf
or
out
daa
scas
icebp
push
or
adc
cmp
call
in
xor
(bad)
loope
sub
in
mov
push
mov
push
mov
lock
cwde
aaa
cmp
push
loopne
mov
fimul
test
lds
pop
cdq
pop
in
xchg
cmc
lahf
and
shl
cmp
outs
int3
sbb
xor
cmp
(bad)
aas
sbb
imul
bound
movs
out
sbb
cmp
cmps
inc
mov
mov
shl
out
fld
int3
sar
push
(bad)
jle
call
jp
xor
pop
movs
jns
out
pop
mov
mov
pop
dec
jge
mul
xchg
xchg
out
fucom
add
ficomp
inc
add
(bad)
in
add
out
push
sbb
outs
jp
test
xor
xor
in
dec
add
call
call
sbb
add
mov
cmp
loope
js
or
mov
outs
daa
mov
mov
into
xor
imul
xchg
into
inc
sub
ds
mov
in
cmp
dec
lock
fbstp
ins
pop
imul
adc
mov
jle
mov
or
and
jae
js
lds
inc
pop
cmp
sbb
or
rol
lea
fimul
mov
pop
adc
stos
push
bnd
jecxz
xor
retf
dec
fwait
xor
nop
pushf
loopne
rol
adc
lock
int
sahf
or
xchg
idiv
outs
mov
jo
shrd
xor
leave
xor
ret
and
push
aam
or
sahf
add
xlat
or
sahf
pop
in
scas
or
inc
jno
mov
bnd
inc
xor
pop
mov
push
cmp
or
push
(bad)
js
loopne
pop
in
inc
das
mov
xor
xor
mov
(bad)
call
aaa
sar
test
sub
xor
xlat
push
mov
sub
je
out
mov
mov
dec
jnp
pop
lods
in
div
sbb
popf
and
xor
mov
push
mov
lods
add
sar
sub
cmp
and
lock
xchg
(bad)
sub
lods
data16
mov
leave
ja
jmp
sub
xchg
std
or
adc
shr
test
mov
adc
xlat
popa
adc
add
mov
jl
out
ins
dec
lahf
(bad)
cmp
push
xor
enter
ss
rol
dec
out
out
shr
push
jnp
sub
fwait
or
retf
jo
ret
push
jle
pop
push
outs
and
movs
mov
xor
fdiv
adc
jne
and
ret
ds
(bad)
loop
pop
jbe
pop
(bad)
icebp
sub
mov
cmc
test
cmp
jnp
sub
adc
sub
jae
sti
push
cmc
mov
jne
xor
cmp
dec
jb
enterw
les
or
test
ret
mov
push
and
xchg
js
adc
aaa
ins
test
mov
ins
hlt
ret
popa
call
xchg
jmp
pop
jle
pop
jmp
mov
jno
jns
(bad)
sti
es
mov
xlat
mov
loop
cmp
push
cld
sbb
out
or
les
fs
push
mov
outs
mov
sbb
jno
scas
imul
pop
jno
inc
mov
gs
pop
aam
mov
xchg
les
test
clc
mov
fnsave
outs
popf
dec
cli
mov
mov
shr
cmp
inc
in
sub
sbb
xor
or
out
aam
(bad)
cwde
pop
mov
(bad)
mov
lahf
mov
jns
ds
out
cdq
inc
push
add
and
sbb
mov
neg
adc
aam
(bad)
in
adc
bound
sbb
ret
fsub
jge
not
cmp
push
or
hlt
cmps
ror
popa
pop
cdq
pop
adc
arpl
lods
mov
inc
pop
fild
into
sti
arpl
adc
cs
add
call
out
xchg
jge
mov
in
mov
inc
inc
lock
pop
push
sbb
xchg
or
adc
cdq
std
inc
loop
push
pushf
jno
loopne
add
mov
pop
(bad)
push
mov
mov
fidiv
je
xchg
inc
stc
dec
mov
xor
jecxz
lahf
pop
nop
mov
cs
aaa
loop
fild
jl
dec
dec
icebp
push
xchg
jmp
jp
aam
cld
ins
lock
mov
or
cmps
xor
inc
inc
sbb
jg
or
adc
add
adc
mov
loopne
sbb
enter
push
(bad)
push
xor
div
into
inc
sbb
jl
xchg
push
scas
ins
fldenv
cs
mov
pushw
and
rcr
cwde
mov
jmp
add
xchg
push
jge
sub
(bad)
retf
xor
adc
mov
jmp
sar
aam
and
aaa
sub
xor
aam
leave
or
mov
fs
dec
pop
cmp
rcr
mov
ficom
stos
out
out
loopne
(bad)
jmp
ret
jmp
xchg
sbb
and
loope
or
sbb
pushf
adc
enter
mov
arpl
jg
dec
cmc
pop
cmc
loopne
mov
(bad)
(bad)
or
sbb
test
jno
stos
cld
test
sti
mov
adc
xchg
jle
rcl
outs
pop
sub
cld
loopne
push
jl
(bad)
dec
in
popw
lds
popa
arpl
xor
stc
cli
xor
rcr
mov
sub
idiv
dec
adc
inc
dec
mov
fdivr
sbb
inc
adc
xchg
push
scas
data16
clc
cmp
push
js
sbb
push
rcl
and
fsubr
mov
pop
jl
mov
push
mov
and
lods
cmp
jnp
ss
cmp
inc
fstp
ret
gs
mov
add
mov
test
aas
movs
ja
cmp
add
and
sub
add
mov
stc
mov
pop
or
inc
sbb
fiadd
pop
mov
mov
(bad)
scas
iret
and
inc
mov
mov
push
cmps
and
jnp
ss
addr16
push
(bad)
rol
mov
pop
push
dec
add
push
push
fs
add
pop
pop
cli
mov
cwde
mov
mov
daa
leave
(bad)
sub
aam
repnz
jge
pop
pushf
add
imul
mov
cmps
icebp
shl
xchg
jmp
add
push
bound
mov
push
(bad)
mov
fs
aam
loope
jle
push
faddp
dec
add
popf
jp
and
dec
jmp
cmps
mov
push
retf
or
jmp
mov
add
lods
xchg
iret
pusha
iret
test
push
mov
pushf
call
mov
lahf
jmp
jns
out
call
push
xor
xor
shl
stos
popa
jae
ins
(bad)
iret
jge
sub
mov
xor
cli
xor
push
in
sbb
das
xor
jbe
push
mul
mov
pop
jmp
jmp
enter
outs
scas
inc
mov
sbb
jbe
pop
(bad)
mov
outs
mov
mov
loope
(bad)
adc
sbb
mov
sub
(bad)
xor
cmps
dec
or
mov
sbb
push
imul
jle
xchg
lahf
bound
mov
cli
jb
or
jnp
push
out
aas
xor
pop
and
movs
outs
dec
or
or
nop
cdq
push
mov
xor
repnz
pop
or
aaa
inc
daa
xchg
call
repnz
and
out
div
jne
es
sub
in
fidiv
add
pcmpeqw
arpl
cmp
dec
cmps
rol
push
inc
inc
mov
fisub
jmp
push
in
or
aad
mov
xchg
dec
sub
xchg
mov
mov
sub
adc
xchg
clc
xor
ret
lods
inc
mov
mov
outs
out
inc
push
iret
fwait
inc
fcmove
adc
push
pop
push
(bad)
xchg
jbe
push
ja
out
pop
ret
in
adc
and
jo
mov
jecxz
out
scas
mov
call
or
adc
adc
mov
rcr
jl
and
dec
cs
xor
cmpxchg
mov
and
mov
adc
iret
(bad)
bound
inc
xor
adc
push
fs
fidivr
in
mov
xchg
data16
add
rol
or
sti
adc
adc
daa
into
mov
xlat
inc
test
mov
in
xchg
push
call
mov
int
movs
cld
call
jbe
adc
pop
cld
icebp
popf
push
cmp
cs
adc
out
or
push
movs
aad
(bad)
and
bound
retf
enter
addr16
adc
cld
xchg
xor
call
jo
and
jmp
rol
mov
repnz
sub
sub
ret
movs
movs
add
add
rcr
mov
inc
lea
or
fwait
cli
sti
mov
mov
and
repz
sub
(bad)
jmp
or
xchg
add
loopne
push
xchg
ins
js
sub
mov
sti
lods
retf
inc
icebp
xor
jg
out
push
sbb
sub
mov
cmps
js
sub
or
xor
cs
jne
out
xlat
or
hlt
js
lea
jl
jns
shr
inc
mov
fs
push
sbb
mov
(bad)
add
pop
or
fwait
lods
imul
xor
adc
xchg
add
out
push
xor
popf
xor
lahf
fimul
(bad)
adc
or
mov
test
int
shl
dec
push
repnz
cld
pop
push
push
stos
adc
fld
cmp
mov
fimul
xchg
jnp
jmp
push
cmp
pop
mov
aaa
pop
sbb
test
sub
sbb
bound
xor
xlat
sub
icebp
jle
int
pop
adc
lock
mov
fsub
imul
inc
cwde
shr
enter
and
mov
inc
rcr
bndstx
pop
mov
mov
imul
sub
dec
(bad)
in
mov
stc
mov
out
ret
dec
mov
or
(bad)
xlat
jb
inc
xchg
retf
call
jge
xor
repz
and
push
add
out
or
jmp
mov
xor
hlt
fstp
fwait
push
dec
jg
cdq
and
ins
jle
je
mov
or
pop
mov
mov
bound
cmp
adc
mov
sahf
stc
mov
cdq
ficomp
jb
outs
jno
aas
shl
jnp
sar
test
aam
or
push
mov
inc
ins
cmp
fimul
fisub
xor
pop
pop
std
xlat
cs
push
rol
dec
cmp
mov
inc
addr16
test
into
ins
imul
and
fidivr
jl
out
xor
sub
jb
jbe
mov
mov
jne
pop
xchg
add
mov
jl
je
push
mov
push
into
fadd
sbb
fisttp
sahf
inc
and
aaa
adc
pusha
sub
push
xchg
xor
push
adc
les
add
jmp
push
inc
mov
cmp
shl
cld
xor
mov
pushf
cs
outs
dec
adc
pop
sahf
add
jge
int
scas
xor
mov
mov
imul
mov
or
add
retf
lods
jb
ins
adc
add
(bad)
in
sbb
push
inc
retf
ja
(bad)
out
repnz
aas
movs
push
icebp
retf
or
gs
cmps
clc
or
mov
js
and
bound
leave
mov
or
fnstcw
add
inc
pusha
xchg
mov
not
sub
repnz
push
xchg
inc
repz
sbb
ret
jnp
mov
sub
jp
mov
leave
add
and
stos
rol
cwde
pop
cmps
push
jg
loop
enter
bound
mov
aas
icebp
push
mov
inc
rcr
imul
xchg
xchg
ja
jg
loopne
mov
ins
shl
and
sbb
push
sti
adc
pusha
sub
adc
adc
scas
rep
clc
test
sbb
push
dec
mov
loope
ror
cmp
inc
es
xor
xchg
aas
iret
xor
mov
ins
push
or
retf
pop
mov
mov
push
call
inc
dec
scas
sar
adc
ins
and
lock
test
ds
loop
call
scas
pushf
mov
inc
dec
in
outs
ds
movs
cmps
cmps
fiadd
shl
ror
imul
outs
mov
xor
hlt
aam
and
out
iret
mov
push
and
xlat
scas
addr16
cld
push
mov
pop
(bad)
sbb
mov
jbe
cmps
fldenv
jg
xchg
stos
push
mov
popa
mov
aas
xchg
jbe
mov
mov
cmp
(bad)
fidivr
cwde
lock
inc
into
or
dec
daa
loope
scas
jbe
push
scas
xchg
ret
push
and
adc
xchg
ss
mov
jge
dec
and
test
inc
aaa
(bad)
fst
lock
ja
mov
(bad)
iret
out
mul
cwde
mov
ficom
add
sar
inc
(bad)
or
fiadd
shl
or
or
sbb
lods
outs
iret
(bad)
ficomp
daa
ret
pop
push
mov
xor
inc
(bad)
icebp
pop
call
and
(bad)
enter
js
push
xor
or
dec
lds
and
sbb
inc
pusha
push
add
or
pusha
mov
imul
push
inc
ss
das
jns
int
adc
push
stos
inc
dec
add
and
jne
mov
cmp
mov
xchg
push
mov
inc
dec
add
dec
mov
shl
push
sar
push
pop
mov
mov
int
jle
loop
pop
add
test
cs
std
mov
dec
sub
xor
xchg
adc
div
into
adc
dec
push
adc
arpl
add
movs
imul
sbb
ret
lods
fisttp
jne
and
xchg
int3
push
dec
and
and
out
inc
jno
repz
(bad)
jno
std
mov
pop
jmp
xchg
push
push
(bad)
adc
cli
mov
shr
dec
movs
xchg
push
fiadd
into
xchg
cmp
sub
dec
inc
shl
push
stc
(bad)
jb
xor
pop
lods
inc
push
out
mov
pop
xor
sar
add
hlt
cmc
jl
fcompp
(bad)
jo
mov
int
rcl
ss
aad
mov
jg
outs
mov
popf
fdiv
inc
or
cmp
mov
pushf
lods
enter
or
cmp
cwde
test
add
pusha
xchg
adc
add
and
cli
dec
jne
and
xor
(bad)
jae
pop
push
cmp
cwde
xchg
(bad)
pop
int3
cmp
dec
mov
mov
or
mov
ss
jb
pop
mov
and
(bad)
popf
(bad)
xchg
push
xchg
addr16
xchg
sub
pop
push
outs
pop
fs
stc
shl
or
leave
push
mov
mov
sbb
and
or
mov
mov
outs
aad
xchg
jo
inc
int
stos
mov
cwde
jg
idiv
int3
push
push
mov
(bad)
sub
pop
pop
push
stos
mov
inc
jmp
call
out
mov
add
je
pop
pop
pop
call
xor
mov
dec
or
xlat
adc
(bad)
cmp
mov
sbb
xchg
lods
pop
test
aaa
and
cmp
jne
jnp
(bad)
inc
repnz
arpl
pop
mov
(bad)
cmps
jl
xchg
mov
call
xchg
fisubr
mov
cli
xchg
mov
mov
sub
mov
mov
(bad)
dec
xor
iret
sub
or
bound
loopne
inc
test
adc
sub
xor
(bad)
pop
dec
cmps
dec
loopne
ret
push
in
jge
fmul
cmp
or
xor
or
sub
mov
fwait
movs
xchg
std
pushf
sub
ror
pop
jp
cld
popf
sub
or
add
std
push
jo
loopne
or
popf
mov
shl
push
loope
(bad)
in
imul
sti
push
ja
sahf
cs
xchg
jb
je
(bad)
pop
out
call
mov
xchg
(bad)
jbe
jae
sbb
pusha
inc
aam
fstp
pusha
and
inc
add
imul
jb
mov
pop
push
fidivr
mov
mov
jbe
gs
shl
cmp
(bad)
jbe
dec
cmovnp
test
enter
popa
mov
aam
es
sbb
and
mov
and
icebp
imul
(bad)
int
jge
add
and
sar
and
mov
(bad)
push
ror
mov
pop
test
inc
mov
into
sbb
pop
add
jo
push
fiadd
outs
cmp
push
iret
push
cwde
cmp
outs
leave
repnz
cwde
and
cmp
ret
mov
cdq
inc
outs
ins
push
jge
icebp
push
sub
nop
sbb
hlt
add
xchg
cmc
cmp
cmc
ret
add
adc
sbb
int3
adc
or
sbb
xor
lahf
js
pop
aas
call
es
dec
mov
into
rcr
pop
rcl
mov
and
cmc
clc
xchg
jno
push
mov
ds
and
fidivr
jge
(bad)
out
inc
gs
pop
or
inc
sub
ja
mov
inc
mov
lds
pop
mov
repz
mov
adc
add
icebp
xchg
pop
add
stos
and
movs
movs
arpl
sub
lock
repnz
rol
cmps
int3
ins
jne
xchg
mov
arpl
sti
push
and
in
(bad)
imul
(bad)
into
and
sub
je
inc
cld
add
imul
bound
mov
inc
je
int3
sbb
cli
and
fadd
out
ss
mov
add
das
and
nop
mov
cs
ja
sub
mov
inc
outs
stos
in
xor
icebp
fnsave
hlt
(bad)
fwait
enter
enter
sub
pusha
push
sub
sub
(bad)
fisttp
stc
jmp
data16
repnz
inc
pop
mov
fimul
lahf
aad
add
iret
xchg
stos
into
mov
and
lods
cmp
loopne
push
fwait
call
mov
cmp
xor
push
outs
loop
in
popf
jg
outs
addr16
jp
push
mov
je
xchg
and
inc
stos
cdq
xchg
and
jo
out
in
cs
mov
lods
movs
and
push
or
sti
mov
mov
xor
add
fiadd
ins
jl
xor
scas
jg
jl
loope
xor
inc
cmps
retf
xor
xchg
cmp
popa
es
xor
dec
arpl
fsubp
inc
stos
push
sbb
cld
adc
setp
mov
push
test
jbe
pop
mov
fldcw
or
push
sub
or
dec
fisttp
repz
or
je
cmps
stos
lea
or
jle
fs
jb
popa
rcr
jae
dec
jge
sbb
inc
push
pop
sbb
or
aas
idiv
add
leave
fiadd
fwait
fs
ja
popa
sbb
dec
mov
and
jmp
imul
sahf
std
mov
fdiv
inc
add
mov
lea
cld
int3
xchg
ins
xor
fs
inc
adc
jge
movs
(bad)
cmp
and
jmp
xor
cld
cli
sub
xor
je
dec
push
mov
inc
and
sbb
dec
mov
test
mov
inc
lock
jo
push
retf
dec
pop
cdq
push
xor
jl
xchg
aad
adc
mov
fdivp
jns
and
daa
in
inc
inc
jns
mov
push
pop
into
inc
js
inc
xchg
dec
cdq
adc
popa
in
mov
xchg
leave
das
add
popa
cmp
mov
cmp
sub
sub
fld
mov
pop
cdq
mov
data16
jbe
aas
and
loopne
nop
nop
rcl
cs
js
pop
add
cli
sbb
cmps
xor
mov
retf
in
mov
push
test
test
mov
xchg
push
js
xchg
inc
lods
(bad)
mul
imul
sbb
adc
add
mov
adc
jmp
dec
loope
sahf
inc
mov
add
shl
popf
lds
mov
cmps
push
inc
in
xor
xor
fsub
int
push
enter
mov
pop
cdq
and
xchg
fs
scas
jbe
imul
in
jmp
cmps
add
mov
mov
adc
jns
ja
pop
loope
pop
call
fld
int3
call
pop
stos
ds
xchg
push
jmp
xchg
sbb
mov
sbb
outs
aaa
mov
and
jo
sar
jnp
jae
sub
xor
addr16
xor
jle
push
rcr
dec
sar
iret
ss
inc
fimul
out
sub
nop
push
mov
mov
cmp
and
cld
or
push
mov
push
(bad)
pusha
js
sub
xchg
jno
jb
jnp
or
ss
push
or
jae
mov
cmp
sbb
xchg
mov
js
jp
mov
push
sub
push
pop
pop
cmp
pop
mov
fwait
(bad)
neg
call
sti
daa
push
(bad)
push
jns
repz
push
push
leave
pushf
sti
jns
imul
test
pop
mov
bound
bound
lahf
in
dec
es
sub
(bad)
sahf
inc
mov
pop
fnstsw
push
stc
mov
call
xchg
or
push
and
rcl
movs
jno
xlat
mov
push
ret
es
cmp
(bad)
fcmovnb
mov
(bad)
adc
ins
cwde
jnp
or
loopne
add
or
in
(bad)
int
or
add
push
jecxz
mov
and
sbb
leave
cmps
ja
aam
sub
mov
call
out
icebp
pop
sbb
mov
cmp
xlat
pop
dec
sub
jmp
adc
ficomp
adc
inc
fisttp
dec
icebp
add
or
dec
push
add
mov
retf
stc
std
xor
adc
loopne
xchg
dec
fisttp
mov
out
jmp
mov
pop
div
(bad)
and
sbb
sbb
xor
push
mov
mov
mul
(bad)
cmp
jae
mov
push
ja
jae
stos
mov
int
and
(bad)
sahf
das
mov
or
and
iret
nop
push
das
jp
push
int3
addr16
pop
rcr
popf
sub
mov
shr
or
aad
pop
in
lea
gs
or
scas
in
xor
or
dec
in
and
add
popf
aad
imul
mov
cld
add
dec
dec
pop
fdivr
dec
add
xchg
jp
inc
push
cdq
push
adc
dec
adc
xchg
cmps
in
push
mov
add
jp
cmp
dec
mov
mov
popf
mov
dec
fsub
and
push
cmp
ja
sahf
sbb
cmp
out
and
fincstp
mov
mov
ret
pop
add
mov
dec
fistp
loop
jmp
and
xchg
mov
enter
xor
dec
jecxz
jecxz
dec
mov
mov
inc
retf
sti
xor
jno
call
out
(bad)
les
out
scas
mov
hlt
loope
popa
cmps
or
sbb
call
or
pop
ins
push
push
and
adc
je
scas
cli
sbb
jno
adc
shr
adc
dec
retf
pop
stos
sahf
test
pusha
push
jmp
mov
cmc
cwde
adc
xor
and
pop
xor
mov
pop
(bad)
fisttp
mov
xor
dec
and
pop
loopne
add
outs
fnsave
add
sbb
mov
xor
ds
popf
sub
xchg
mov
sub
push
aam
repnz
cld
push
xor
push
dec
cld
(bad)
leave
lock
fldenv
loope
ja
retf
mov
dec
inc
je
das
xor
fdivr
mov
push
inc
fsub
mov
add
pxor
dec
pusha
xchg
mov
sub
sub
dec
jbe
and
test
nop
push
mov
jl
aas
xchg
xchg
pop
inc
ins
mov
(bad)
js
cmp
(bad)
js
add
leave
jp
pop
popf
xor
add
fild
cld
dec
jb
les
adc
ds
pushf
mov
inc
loop
mov
pop
xor
adc
sbb
jb
adc
mov
clc
icebp
aam
xchg
cdq
jge
or
cmp
(bad)
fsub
outs
pop
jo
pop
popa
data16
or
fs
sub
shl
cli
sub
inc
out
loope
cld
sbb
(bad)
fdivp
fist
mov
mov
xchg
xor
inc
rep
fwait
lea
inc
inc
push
loopne
(bad)
dec
aas
addr16
rol
cmp
xor
(bad)
sahf
hlt
xchg
inc
xor
mov
xchg
add
shl
scas
cmps
push
jle
out
popf
mov
dec
inc
xor
xor
xchg
fnstenv
mov
mov
inc
jle
xlat
or
sub
sub
pop
mov
push
ja
ret
push
and
pop
(bad)
popf
inc
movs
adc
sub
push
and
xchg
jg
rcl
lods
fild
frndint
dec
cmp
popf
shl
fisttp
mov
cmp
cs
(bad)
addr16
das
sar
enter
jno
adc
shl
scas
inc
mov
gs
mov
repnz
push
mov
nop
imul
inc
add
cld
inc
pop
adc
or
das
sbb
or
xor
mov
cmp
jmp
fiadd
leave
mov
bound
ds
shr
fistp
stos
out
cmp
leave
fcmovnb
push
jmp
sub
inc
popa
or
clc
cmp
mov
push
lds
mov
push
xchg
fwait
or
xchg
loop
mov
ror
lock
dec
push
je
loope
nop
xor
pop
xchg
jmp
outs
jmp
idiv
fwait
js
mov
daa
xor
push
pop
xchg
(bad)
dec
mov
into
lahf
xchg
movs
push
aad
loope
data16
push
into
clc
shl
sub
retf
or
mov
aad
jle
inc
xchg
aam
mov
pop
cmp
pop
fwait
mov
dec
lds
(bad)
sbb
and
sub
mov
dec
out
push
push
cmps
fbstp
mov
dec
mov
xlat
fsubr
ret
pop
loope
jo
jnp
pop
cmps
pop
cmp
xor
adc
cmps
aam
mov
cmp
add
mov
sti
addr16
pusha
sbb
or
retf
pop
xor
loopne
xchg
(bad)
mov
ds
adc
leave
cs
std
stos
mov
popa
outs
fistp
fild
into
fadd
mov
lds
adc
cld
dec
rcl
movs
outs
push
ja
xlat
retf
imul
cmps
add
daa
cmp
and
call
test
gs
imul
dec
xor
mov
mov
sbb
jb
sbb
xor
jmp
jnp
add
sar
enter
mov
hlt
stos
inc
sahf
inc
fst
into
jp
mov
imul
add
jl
cli
stos
xchg
aam
mov
jae
in
mov
add
xlat
pushf
fs
(bad)
push
xchg
mov
es
shl
aas
jle
jp
jns
mov
ss
xor
add
loop
fnstcw
fmul
call
or
hlt
xlat
je
fwait
icebp
das
fs
and
sub
fs
adc
test
xor
int
out
xor
dec
sahf
ds
inc
push
push
(bad)
xchg
dec
add
into
mov
add
test
jle
cmps
cmp
inc
jb
sub
out
mov
xor
mov
shr
push
mov
out
out
mov
jle
add
repnz
js
cmps
inc
xor
retf
retf
std
cmp
dec
xchg
jecxz
retf
push
mov
xlat
or
jecxz
xor
sub
pusha
in
int
or
ror
and
loope
fsubr
and
or
xchg
mov
nop
and
mov
push
lods
add
xchg
dec
jmp
fnstcw
push
jne
aas
adc
push
add
movs
or
mov
push
arpl
jle
cmp
and
dec
jae
mul
retf
push
mov
sbb
inc
dec
dec
pop
inc
add
xor
jmp
mov
aaa
icebp
cwde
cmp
push
pop
or
shl
dec
add
push
inc
push
pxor
cmp
sub
mov
and
cmp
fxch
fmul
jns
fsubrp
sub
mov
push
cli
sub
fwait
icebp
sub
into
xchg
mov
mov
sub
mov
div
sub
inc
ds
adc
xor
adc
xor
mov
fcom
mov
lods
and
test
inc
push
pop
neg
shl
aam
dec
retf
xchg
je
inc
fst
inc
add
ret
and
sbb
cmp
daa
or
pop
pushf
test
out
lds
pop
mov
cmp
imul
push
xor
cmp
push
sbb
ds
inc
mov
xor
cmps
into
jae
jb
xchg
mov
out
inc
imul
dec
ins
pop
inc
inc
(bad)
pop
cmp
mov
into
ins
bound
inc
jno
call
clc
cli
aaa
jmp
punpcklbw
loopne
sar
aaa
mov
ins
jmp
cmps
fdivr
hlt
rcr
outs
jg
fild
sub
scas
aad
int3
div
fstp
sub
shl
or
mov
xor
pop
hlt
call
mov
cmp
sub
div
sub
and
push
pop
fmul
adc
daa
mov
fcom
out
sbb
pop
and
fwait
pop
loopne
jno
fwait
xor
xor
cmps
adc
std
mov
mov
int3
out
fcmovbe
fst
mov
fldcw
ja
sub
sahf
sub
xor
jmp
jle
mov
jns
fs
sbb
fimul
xchg
(bad)
and
test
shr
jecxz
xchg
nop
cmps
ja
repnz
dec
or
adc
push
xchg
mov
xlat
jp
pop
in
lods
jno
jp
shl
push
rcl
push
and
enter
mov
jl
cdq
out
ror
bound
push
sar
imul
repnz
push
outs
mov
push
cmp
inc
add
mov
adc
and
dec
ss
push
and
mov
es
xor
pop
mov
jnp
push
scas
bound
mov
frstor
push
inc
movs
aas
outs
popa
mov
adc
dec
pop
ins
ret
pop
pushaw
rcr
inc
push
cmp
outs
xchg
repz
xor
xchg
xchg
test
push
xchg
lds
test
je
ret
xchg
das
mov
mov
push
das
sub
loope
xor
xchg
loop
ret
or
adc
sbb
sub
adc
jnp
out
(bad)
xor
(bad)
(bad)
cmps
and
mov
sti
popa
sub
lods
dec
add
or
jg
sbb
mov
inc
sar
mov
int3
adc
stc
mov
mov
into
sub
xor
out
cmp
inc
pop
xchg
sahf
sbb
cmp
mov
sar
dec
push
pop
in
xchg
arpl
stc
sub
out
sub
inc
mov
int3
cld
and
fadd
std
mov
jge
add
gs
bound
sbb
adc
xor
pop
push
push
xor
loopne
jl
retf
cli
inc
jmp
ror
jns
add
push
pop
xchg
push
fsubr
lds
mov
les
popf
dec
cwde
adc
mov
stos
mov
rcl
inc
inc
fstp
xor
(bad)
adc
int
jg
lods
ja
test
ins
call
adc
add
cmp
add
push
xchg
pop
ficomp
sbb
push
iret
loope
mov
mov
in
call
ins
and
icebp
push
mov
es
pop
pop
mov
aaa
aas
and
addr16
mov
adc
jecxz
fcom
fbstp
in
add
cld
jne
cwde
sub
test
cmps
and
nop
pop
cmc
pop
add
jbe
add
in
lods
(bad)
(bad)
loope
and
push
out
mov
(bad)
loopne
in
mov
cwde
bound
add
inc
push
js
movs
jne
jl
data16
aaa
into
cmp
xor
outs
mov
fcom
imul
mov
or
add
in
cmp
mov
fs
inc
call
jae
imul
pop
mov
pop
scas
mov
cmps
ror
mov
cdq
pushw
jne
sub
xor
sbb
call
fdiv
push
inc
mov
dec
and
popa
jl
xor
cli
sahf
dec
lds
pop
xor
retf
push
ins
sub
xchg
cs
nop
jg
sub
pop
imul
adc
lea
cdq
das
jne
ins
fs
movs
adc
dec
sti
mov
les
xchg
setl
fcom
jmp
int
loope
push
(bad)
pusha
mov
adc
push
xchg
push
lods
add
out
jle
push
enter
es
xor
sub
sub
mov
cmc
fdivr
pop
js
or
(bad)
xor
les
dec
or
push
retf
(bad)
inc
in
(bad)
push
or
pop
or
into
fdiv
test
rcl
call
inc
in
or
mov
test
bnd
ror
cli
pop
xlat
es
outs
cli
push
cmps
inc
cli
jge
and
sbb
mul
pop
sub
les
mov
loope
sub
(bad)
dec
mov
cmps
je
mov
or
repz
dec
into
repnz
retf
or
xchg
mov
push
mov
push
sub
push
xor
pxor
mov
enter
in
mov
in
sub
push
(bad)
inc
leave
repnz
repnz
fld
jb
sub
mov
shl
dec
popa
fninit
add
sti
sbb
pop
push
xchg
mov
push
test
lds
xchg
cmps
pop
xchg
or
mov
pop
stos
ins
and
ror
jge
sti
sbb
xchg
je
cld
jns
sub
fild
xor
adc
cmp
add
adc
leave
in
cmp
pop
cdq
cmps
dec
call
mov
jg
les
and
ret
push
and
jns
fadd
xchg
sahf
inc
data16
mov
fstp
test
pop
sbb
pusha
ins
repz
sbb
fucomip
xor
xlat
push
add
call
pop
aam
mov
mov
lods
stos
arpl
mov
outs
les
in
cs
outs
add
jl
sar
test
in
lods
loop
push
mov
cmp
mov
rol
mov
cwde
push
xchg
stc
pop
mov
add
lea
loop
and
inc
mov
ret
fidiv
jmp
xchg
inc
movlps
add
cli
xchg
(bad)
pop
mov
in
inc
push
mov
pushf
std
jmp
cdq
inc
add
jl
pop
or
inc
mov
scas
fcom
xchg
cmp
ret
add
push
jmp
lahf
call
mov
jnp
mov
jg
cs
(bad)
pop
scas
retf
and
inc
(bad)
adc
cmp
mov
loop
push
mov
mov
and
div
mov
inc
fld
jecxz
mov
ret
daa
mov
cmp
jmp
adc
mov
out
lods
xchg
xor
call
test
jmp
lds
out
mov
call
inc
inc
jne
add
nop
sbb
xchg
mov
xor
stos
loop
sbb
pop
mov
(bad)
data16
(bad)
shr
jg
gs
sbb
fucomip
daa
sti
push
fnsave
push
cwde
mov
fs
sbb
(bad)
in
sti
sub
fidiv
leave
jo
popa
push
aaa
loopne
fwait
xlat
cmp
adc
loope
adc
pop
pop
js
call
ror
enter
bound
sbb
fs
fisub
xor
test
dec
lods
into
sub
jmp
jg
ins
gs
push
cld
std
jg
pop
add
ficom
mov
fisub
call
arpl
data16
jp
cli
adc
add
cwde
lahf
pop
inc
cmp
sub
mov
sub
cmps
imul
nop
dec
loopne
in
dec
(bad)
retf
pop
mov
xor
push
pop
(bad)
bound
popf
and
push
lods
xchg
xor
repz
mov
push
sub
sti
adc
pop
fs
xchg
jle
adc
mov
std
rcr
adc
mov
pop
neg
popf
cmp
jbe
icebp
mov
loop
add
inc
push
call
push
call
ret
xor
adc
mov
dec
ins
test
loopne
push
sub
pop
cmp
push
pop
mov
mov
jle
mov
pop
test
add
addr16
pop
fst
retf
scas
imul
sbb
cmp
adc
pop
cwde
jle
push
adc
ja
xchg
jmp
mov
repz
cmp
add
inc
jns
or
out
lock
sar
loopne
sub
add
fsubr
jecxz
out
fld1
inc
cmp
outs
fldcw
jbe
lods
mov
sbb
inc
lahf
addr16
push
pusha
fidivr
les
lods
xchg
fadd
sub
adc
sub
fucomp
sbb
rol
xchg
push
push
imul
add
mov
mul
gs
jecxz
retf
mov
les
fs
test
dec
repnz
test
dec
and
dec
sbb
movs
jns
in
loopne
out
dec
mov
adc
adc
sbb
rol
sub
(bad)
and
and
popa
jl
cmp
outs
or
jl
jbe
adc
icebp
mov
movs
add
imul
mov
adc
addr16
xor
push
mov
mov
push
iret
call
repnz
jns
sahf
mov
into
loope
mov
push
pop
retf
xchg
push
(bad)
xchg
mov
clc
call
cmp
hlt
retf
inc
das
test
dec
mov
inc
adc
adc
cli
mov
dec
and
mul
cmps
adc
mov
stos
data16
jbe
dec
jecxz
add
loopne
jg
mov
jg
pushf
pusha
xchg
fs
xchg
jge
or
shl
hlt
cli
jmp
push
push
jle
xchg
aaa
iret
push
jl
xchg
cmp
cmp
xor
or
push
(bad)
mov
stc
or
arpl
es
push
cwde
adc
push
jns
loopne
xor
and
stc
test
jnp
adc
in
xchg
pop
fnstsw
leave
inc
mov
push
sub
adc
in
push
movs
pushf
push
iret
jmp
cdq
mov
push
mov
sbb
fidiv
jecxz
inc
push
xchg
xchg
jmp
and
sub
push
enter
fs
retf
mov
and
int
cs
push
call
jno
popa
and
dec
jo
imul
ret
outs
pop
xchg
push
loop
dec
push
mov
add
fs
and
mov
sbb
loop
inc
mov
dec
jno
jmp
xchg
mov
std
adc
test
(bad)
mov
jg
inc
stos
inc
aas
or
mov
popa
js
cmp
xchg
fst
repz
int3
push
mov
mov
pushf
stos
repz
ins
(bad)
ins
jae
and
pop
ror
mov
imul
fstp
xor
fsub
pop
jae
jp
nop
test
xchg
sub
or
inc
mov
mov
sbb
adc
mov
(bad)
mov
xchg
xor
xor
fwait
aam
in
cli
adc
fisubr
cs
mov
or
test
mov
sbb
xor
cs
cmp
(bad)
lods
jbe
shl
xchg
fistp
(bad)
rcr
aas
sbb
pusha
jge
dec
(bad)
mov
les
push
and
pop
or
inc
scas
in
push
cld
popf
push
imul
ror
in
dec
retf
mov
jle
sub
inc
lds
sahf
test
iret
cld
aam
mov
or
mov
push
mov
outs
cmc
retf
cli
ja
or
cld
nop
push
sub
xor
or
rcl
ds
je
aam
xchg
and
xchg
jmp
(bad)
(bad)
fiadd
add
aad
pop
sub
mov
loopne
push
xor
daa
(bad)
das
inc
aaa
mov
imul
pop
sbb
mov
cmc
shl
push
dec
and
loope
aam
cli
xchg
gs
inc
jbe
inc
mov
test
pop
dec
dec
jns
inc
lds
fild
adc
gs
jle
fwait
inc
mov
repnz
mov
cld
std
xor
xchg
push
mov
sbb
mov
pop
pusha
or
xor
xor
add
scas
jge
cmps
jae
nop
dec
adc
leave
adc
xor
clc
nop
test
xchg
dec
xchg
dec
xor
jle
jp
fld
add
rol
nop
jbe
dec
psrlw
jecxz
sub
jmp
mov
retf
int3
cdq
dec
adc
or
int
xchg
jb
popf
hlt
or
rcl
(bad)
cmp
mov
jbe
sub
cmp
xchg
fistp
adc
fimul
retf
pop
das
addr16
fwait
mov
mov
ret
cmovnp
in
stos
push
adc
mov
jns
pop
pop
lea
arpl
mov
push
inc
je
aas
ss
dec
bnd
dec
ja
inc
jno
jnp
push
test
pop
sub
inc
add
inc
out
popf
inc
mov
add
cmp
jmp
or
push
pusha
rol
pop
retf
into
and
cmp
call
addr16
xlat
push
inc
push
mov
push
ret
into
and
rcl
pop
(bad)
ror
into
ins
enter
cmp
push
mov
sub
mov
imul
leave
sbb
cmp
sbb
fs
imul
sub
xchg
pop
fld
scas
outs
out
stos
mov
sub
mov
jmp
xchg
push
mov
xor
cmp
mov
sar
retf
cmp
cs
push
(bad)
enter
in
retf
sub
dec
rcr
push
aas
in
cli
in
mov
sub
into
mov
cld
sbb
cld
xchg
inc
push
push
out
ja
mov
(bad)
loope
jbe
mov
iret
scas
mov
movs
test
dec
inc
or
dec
mov
xchg
xchg
mov
(bad)
mov
pop
inc
push
dec
push
arpl
dec
dec
adc
push
mov
daa
inc
and
mov
inc
mov
sbb
xor
pop
(bad)
imul
call
bound
mov
popa
sub
imul
ja
jmp
es
ds
pusha
popf
push
and
xlat
add
in
push
dec
(bad)
in
xor
rcr
xchg
inc
fwait
popf
push
scas
inc
out
iret
outs
sub
add
mov
retf
pop
sbb
int
xor
pop
leave
mov
pop
arpl
fsubr
jne
imul
and
aam
add
lea
push
add
fs
mov
clc
fnstcw
scas
enter
in
scas
fdivr
ins
in
add
jae
js
sti
cwde
cmp
adc
sbb
mov
repnz
popf
cmp
push
jbe
pop
gs
xchg
mov
adc
scas
fwait
lods
out
jmp
or
mov
pop
xchg
or
or
lds
in
cwde
outs
mov
daa
push
imul
adc
or
dec
test
aas
icebp
sub
jmp
mov
add
dec
and
push
ror
lods
repz
fld
jmp
cmps
loop
fwait
dec
pop
mov
pushf
sub
pusha
sahf
popa
or
scas
and
pop
push
adc
lock
xor
les
movs
jge
xchg
lea
mov
in
jo
inc
push
xlat
arpl
mov
fld
out
call
adc
or
sahf
cmp
in
jmp
xor
in
sbb
addr16
jb
sbb
cmps
sbb
movs
add
sti
imul
mov
jge
sbb
pop
dec
aad
adc
repnz
aad
jle
repz
(bad)
fcom
adc
or
or
and
mov
xchg
add
inc
jg
jmp
fiadd
push
xchg
fistp
mov
iret
inc
xchg
adc
vmovaps
xchg
inc
(bad)
enter
xlat
nop
jno
push
retf
pop
push
test
imul
push
(bad)
xor
push
dec
fmul
dec
xchg
or
or
movs
in
(bad)
loope
shl
in
aam
out
cmp
rcl
or
or
mov
les
shl
fwait
rcr
jbe
addr16
in
fisttp
inc
pop
or
mov
das
mov
xor
std
push
mov
jne
jecxz
sbb
dec
xor
lods
cli
js
mov
mov
call
dec
scas
mov
xchg
cli
out
dec
aas
nop
std
push
sub
fnstenv
es
ror
dec
push
fldenv
loop
dec
icebp
sbb
inc
push
clc
loop
int3
lods
(bad)
js
pop
mov
je
xor
mov
dec
mov
inc
in
fsub
jmp
mov
pop
les
je
xchg
aas
add
test
fwait
sbb
icebp
lods
int3
jle
cdq
or
out
(bad)
stc
jle
jno
ds
jo
xor
mov
jecxz
or
xlat
xor
ror
clc
(bad)
fsubr
sbb
imul
push
sbb
mov
adc
xchg
push
mov
ins
jo
test
push
pop
mov
stos
jecxz
dec
(bad)
idiv
mov
loopne
push
push
adc
sbb
xchg
push
inc
xchg
(bad)
ins
jne
pushf
cmps
pop
clc
sbb
xchg
mov
mov
into
loop
je
or
inc
xchg
add
mov
jnp
out
xchg
nop
inc
xor
pop
jo
int3
mov
jp
lahf
jo
jmp
cmp
push
pushf
imul
out
cdq
pop
iret
js
jae
or
xor
test
xor
mov
pop
jb
dec
lods
push
xlat
popa
mov
repz
das
in
or
test
lahf
add
pop
fnstcw
jo
das
aaa
cmp
ins
das
mov
enter
arpl
sub
dec
out
and
ins
in
or
and
adc
mov
or
and
jl
aad
retf
loope
mov
aam
fadd
mov
inc
aaa
push
or
stos
ror
pop
scas
mul
add
push
push
mov
add
and
push
int
mov
dec
iret
inc
out
mov
sub
fld
xor
ret
push
xor
pushf
mov
lods
cmps
push
jns
das
or
xor
lods
scas
dec
pusha
xchg
sar
fmul
and
clc
je
dec
jo
mov
bound
cmp
fdiv
arpl
jmp
idiv
popa
sub
xchg
aaa
ss
ret
dec
xor
data16
stos
push
xchg
push
ret
aam
inc
sti
in
(bad)
in
retf
jb
mov
das
and
outs
jg
mov
data16
stc
sub
cmp
call
adc
ins
xchg
mov
popf
int3
hlt
cwde
mov
and
cmp
loopne
push
add
xor
or
sar
xor
xchg
outs
fist
int
in
rol
je
sub
pushf
xor
inc
outs
pop
mov
imul
popa
sub
add
cmp
cmp
sahf
shr
sets
in
rcl
in
(bad)
je
sti
push
mov
inc
cwde
daa
sub
les
clc
or
in
test
jl
xchg
or
lahf
mov
inc
add
jnp
in
cwde
dec
dec
adc
aam
mov
inc
push
cmps
push
xor
inc
jle
outs
loopne
icebp
xor
jle
popa
push
mul
sub
or
shl
or
inc
adc
fcom
adc
sbb
retf
shl
xchg
out
xchg
pop
in
cwde
nop
daa
xor
dec
scas
(bad)
(bad)
dec
push
mov
test
(bad)
cld
pop
jnp
add
int
dec
sub
pop
aam
jge
or
das
add
lahf
inc
add
loope
repnz
xor
pop
lods
push
xchg
add
add
lods
xchg
pushf
adc
and
mov
jno
inc
and
cmovae
jno
sub
imul
add
jb
sub
sti
pop
jb
xor
xor
popf
pushf
and
hlt
pop
test
push
adc
lods
sti
push
push
push
fucom
dec
sahf
xchg
jecxz
pop
pop
jmp
inc
or
repnz
push
sbb
test
fwait
mov
rol
adc
ret
push
add
std
and
(bad)
out
mov
or
out
lahf
xchg
imul
mov
movs
les
sub
shl
fst
inc
loopne
ss
sbb
retf
call
dec
sub
outs
test
push
fwait
(bad)
adc
fimul
movs
sbb
(bad)
daa
push
loopne
inc
das
cwde
fisttp
sahf
lock
mov
out
push
aad
push
adc
dec
outs
xchg
sub
int
cwde
mov
and
jge
cmp
pusha
mov
outs
fld
push
movs
fcmovu
std
mov
pop
cmps
ds
pushf
cmp
jne
test
inc
xor
mov
dec
test
lea
aad
in
jl
push
jno
and
add
in
aaa
call
inc
adc
jae
data16
add
daa
jmp
rcl
into
repz
pusha
push
shl
push
xlat
jnp
mov
xor
mov
pushf
mov
outs
pop
sbb
mov
mov
or
cdq
dec
dec
push
ins
sub
pop
cwde
mov
(bad)
sbb
int3
lock
or
(bad)
pop
popa
pop
es
dec
jmp
movs
xchg
cmp
movs
xor
add
or
or
dec
or
rcl
call
test
out
lock
inc
xchg
dec
xchg
mov
push
cld
loope
addps
aam
push
dec
add
scas
idiv
aaa
mov
sub
sbb
loope
(bad)
aas
lea
or
dec
enter
jne
mov
ror
hlt
popa
push
mov
cwde
pop
push
out
mov
cmp
jl
stos
popa
jns
jmp
jbe
inc
mov
xor
test
fwait
pop
sti
jecxz
stos
test
xchg
out
icebp
xchg
cwde
push
jmp
sub
jle
stos
js
ret
outs
retf
xor
pinsrw
rol
dec
dec
pop
jo
int3
(bad)
aas
neg
xor
(bad)
jo
xchg
fcom
mov
ds
repz
pushf
jg
cmc
inc
sub
inc
mov
ret
(bad)
adc
mov
and
std
and
or
jecxz
retf
ficomp
sub
stos
fnsave
sbb
adc
ins
xchg
bswap
(bad)
xchg
dec
mov
fwait
stos
cmps
(bad)
sbb
mov
dec
cwde
(bad)
jne
jle
mov
or
call
imul
dec
pop
jae
dec
addr16
retf
fisttp
ret
in
test
jmp
push
push
js
mov
inc
cmp
mov
sub
jno
lds
xchg
adc
(bad)
jmp
sbb
daa
pop
outs
movs
loop
sub
loope
in
jb
sbb
mov
xor
test
fwait
cld
dec
and
xor
int
mov
neg
stc
(bad)
push
pop
fwait
leave
std
cld
lahf
popf
cmp
not
adc
sub
sbb
iret
xor
sbb
dec
movntps
enter
inc
jmp
push
and
rol
or
fucomp
ins
ds
icebp
mov
push
sbb
in
ss
ja
ss
fcmovnbe
xchg
lahf
mov
adc
inc
outs
je
imul
and
popa
cli
sbb
lock
repz
add
lods
addr16
call
aad
ds
in
and
cs
sbb
push
push
xor
or
imul
jecxz
enter
stos
(bad)
mov
adc
push
leave
scas
cmp
add
dec
(bad)
popf
js
pushf
stos
or
xlat
pusha
imul
ins
cmp
adc
bound
sahf
es
fbld
cli
push
ins
add
cmp
arpl
in
adc
les
ja
cdq
popa
mov
cmp
pop
loopne
repnz
stos
loope
pop
mov
mov
jmp
xor
push
pushf
adc
(bad)
cmp
jg
mov
jp
mov
pop
sbb
repz
int
pop
hlt
movs
scas
push
inc
push
enter
test
push
xor
in
leave
mov
imul
int
xchg
push
jmp
push
pop
jmp
mov
inc
fadd
xchg
mov
push
ins
fstp
aas
sahf
popf
add
std
sub
(bad)
mov
test
leave
dec
cmp
icebp
adc
cwde
fimul
mov
je
adc
sbb
loopne
cmp
out
mov
inc
push
in
add
mov
stc
or
lahf
stc
test
jns
push
aas
sub
sub
ja
push
mov
popf
enter
scas
add
inc
retf
(bad)
cdq
adc
pop
adc
in
jbe
jbe
psubsw
aas
cs
outs
ret
std
and
or
inc
xor
or
jp
fadd
push
push
sbb
adc
push
jmp
jge
add
add
and
adc
add
loopne
inc
cs
cmp
jg
inc
sub
aas
jl
pop
mov
outs
das
dec
mov
and
xor
mul
dec
fwait
and
fwait
push
enter
ret
xchg
or
stc
cmps
sbb
xchg
or
or
cmps
mov
xor
mov
je
xor
sbb
iret
hlt
(bad)
push
fdiv
pop
xor
les
and
lods
xchg
call
neg
(bad)
out
das
mov
xor
enter
test
xor
rol
xchg
adc
neg
fwait
and
pusha
setp
push
iret
push
cmps
or
sbb
jecxz
fwait
sbb
and
ret
hlt
sbb
js
sbb
test
sbb
pop
aas
jb
scas
xor
mov
push
(bad)
sbb
xchg
(bad)
fidivr
add
sub
das
mov
mov
gs
mov
jmp
or
fadd
jp
jb
addr16
fcomp
(bad)
inc
rcr
pop
ret
inc
sbb
pop
or
dec
fidivr
(bad)
jl
js
xor
xchg
fs
mov
ds
mov
inc
aas
pop
js
xchg
jbe
xor
push
inc
sbb
and
push
mov
inc
sbb
jg
sbb
into
outs
pop
dec
and
sub
mov
and
test
(bad)
in
push
push
mov
cmp
push
test
dec
bound
pop
mov
retf
shl
adc
adc
adc
dec
mov
dec
popa
imul
sub
jo
jb
sar
push
cmp
hlt
fcomp
cs
out
arpl
adc
(bad)
xor
push
mov
inc
sbb
call
es
dec
xchg
jne
out
retf
jns
movs
ins
lahf
jmp
ror
jmp
bound
xor
fistp
mov
shl
scas
jp
punpckhdq
or
retf
sub
shr
push
jp
std
mov
pop
sub
push
ins
fidivr
xor
xor
test
retf
inc
or
xor
or
add
ror
nop
mov
mov
fs
lods
and
inc
pop
mov
push
mov
xor
call
xchg
(bad)
jne
stos
sti
arpl
xor
or
sub
sbb
xchg
cmp
push
dec
cmp
jl
jmp
pushf
test
sbb
ret
jge
(bad)
icebp
ins
(bad)
sub
std
aad
cmc
outs
int3
enter
into
push
fwait
jmp
lods
xchg
jbe
fs
je
cmp
jle
or
mov
popf
xchg
jb
inc
dec
and
mov
pop
scas
out
ins
popf
mov
mov
xchg
stos
dec
jl
push
clc
inc
xor
mov
jmp
rol
mov
das
setb
shl
and
or
mov
in
loope
bound
adc
loop
cmps
ficom
lea
stos
mov
xchg
xchg
std
push
xor
or
adc
add
push
sub
(bad)
ins
stos
pop
jmp
xor
mov
and
lds
out
ret
dec
pop
inc
fisub
outs
test
push
std
daa
mov
pop
add
adc
xor
adc
add
daa
ja
dec
add
sub
mov
sbb
jbe
adc
fisub
and
or
imul
sub
cmp
out
fisttp
pop
gs
inc
dec
fdiv
retf
xchg
dec
imul
and
push
mov
jbe
ss
cld
addr16
lods
pop
notrack
or
clc
clc
inc
jmp
mov
jecxz
jg
sbb
add
lds
xlat
xor
xchg
mov
retf
out
pop
in
mov
dec
push
shl
into
xor
div
pop
movs
xor
and
sahf
xchg
inc
jnp
push
mov
(bad)
jno
sub
aas
test
and
mov
call
call
nop
push
loopne
int3
or
push
push
retf
mov
iret
addr16
adc
dec
sbb
inc
push
bound
jo
mov
mov
loopne
pop
(bad)
sbb
outs
push
and
ret
fnstcw
jmp
mov
cdq
or
mov
pusha
pop
loop
sti
ret
out
sub
out
iret
jae
pop
inc
push
jmp
add
std
lods
bound
and
jl
aas
test
and
jne
stos
cmp
pop
out
cmc
movs
outs
test
arpl
push
xchg
(bad)
mov
inc
or
adc
aas
mov
jb
daa
inc
push
add
jne
mov
call
jl
out
jp
cli
aad
push
test
sar
sar
mov
test
popa
cmp
pop
inc
aad
inc
mov
in
fidivr
pop
retf
test
and
or
cmp
dec
jmp
sub
sub
xor
popa
fsubp
push
inc
mov
push
jmp
jmp
fst
imul
inc
lock
pop
xchg
shr
sti
adc
push
or
cwde
out
xor
lods
cmps
ss
jbe
(bad)
push
mov
ja
jle
push
push
dec
adc
or
and
adc
and
sbb
stc
call
fs
inc
sbb
gs
bound
pop
pop
mov
fdiv
in
push
outs
or
xchg
push
vmulps
sub
and
cld
sar
aas
scas
fwait
in
arpl
nop
dec
xor
jle
jge
mov
sbb
dec
push
into
lock
pop
cmp
add
sub
js
mov
dec
and
cmps
mov
pop
or
clc
mov
or
add
cmp
dec
mov
jns
sbb
jb
jmp
xor
mov
scas
mov
inc
pmaxub
sbb
pop
push
not
dec
sahf
jb
cmp
jle
sbb
das
stos
ja
cwde
mov
sbb
sbb
add
mov
loop
iret
adc
scas
sbb
cld
nop
mov
neg
loopne
ret
stos
xor
push
stos
mov
sub
push
jle
xor
inc
imul
mov
xor
daa
outs
mov
out
es
loop
xchg
shl
lea
cli
cld
xor
stc
cli
mov
jno
inc
loopne
out
dec
jne
jmp
pop
test
popa
mov
inc
pop
push
adc
test
sbb
inc
inc
icebp
sub
push
mov
or
mov
adc
inc
mov
div
out
inc
and
iret
adc
add
(bad)
outs
(bad)
jmp
cs
mov
inc
sub
(bad)
pop
xor
imul
sar
pop
sbb
ret
adc
ja
(bad)
xchg
or
xor
jno
leave
dec
mov
aam
mov
fldcw
es
(bad)
dec
gs
mov
test
inc
or
dec
mov
rcr
mov
mov
aas
and
test
cmc
xchg
aaa
lock
and
popf
xchg
inc
in
loop
pmulhw
cmp
inc
pop
ins
adc
bound
into
mov
jl
mov
fst
loop
mov
push
shr
mov
(bad)
bound
and
or
std
mov
cwde
pop
aam
mov
vpshuflw
xchg
mov
lds
clc
add
push
enter
aaa
scas
in
cmps
imul
xor
loope
jmp
out
ins
fistp
scas
and
cwde
mov
or
mov
cs
xchg
sar
mov
jns
jg
inc
lock
sahf
out
mov
test
pop
aas
cmp
dec
ret
add
aas
retf
xchg
stc
shr
pop
sub
and
cmp
mov
adc
ret
lods
fwait
and
icebp
mov
sbb
stos
pop
sub
ror
inc
jle
and
push
std
push
stc
sub
cwde
mov
fldcw
popa
idiv
mov
adc
loopne
push
sbb
jns
jg
pop
fst
out
push
loop
pop
pushf
sub
test
in
in
xor
push
cmc
sbb
dec
scas
and
in
xchg
xchg
dec
mov
pop
xor
test
mov
cmp
adc
das
push
data16
fcmovnb
push
adc
jno
stos
mov
in
cmps
push
cdq
shl
ficom
xchg
mov
dec
xor
fs
sub
lock
aam
test
or
mov
shr
mov
jbe
xchg
cli
jne
pop
test
push
std
mov
call
ins
arpl
sbb
into
icebp
fild
and
and
cli
test
popa
addr16
xor
popa
mov
cmps
xchg
adc
sub
or
sar
sbb
(bad)
xchg
jmp
xor
inc
pop
mov
inc
add
add
mov
and
cdq
jne
(bad)
cdq
fs
add
mov
int
sbb
mov
or
aaa
xchg
jne
les
sbb
xor
(bad)
adc
adc
jp
mov
out
call
aam
mov
sbb
pushf
push
pushf
and
jmp
sbb
mov
(bad)
push
or
aam
lods
cmc
jg
mov
or
inc
and
jmp
jmp
sbb
jb
icebp
outs
pop
sub
into
stc
jnp
xlat
and
loope
call
jo
xchg
cmp
jl
xor
jge
cs
aas
jmp
(bad)
jno
jmp
and
sti
call
mov
mov
jae
std
lock
jg
sbb
popf
movs
(bad)
push
or
iret
or
test
or
or
movs
test
retf
pop
cmp
fxch
lahf
sub
mov
jnp
add
test
sahf
cmp
pop
neg
iret
sbb
test
push
dec
stos
jl
mov
push
push
cdq
mov
sahf
mov
inc
pop
fld
ret
add
pop
lods
pop
adc
mov
add
xchg
div
pop
sub
mov
scas
call
mov
xchg
movs
ins
pop
retf
mov
ds
mov
sbb
retf
clc
adc
jb
stc
push
test
xor
cld
inc
(bad)
jg
lock
jno
xchg
add
dec
push
xor
mov
aaa
lods
jge
lahf
aad
fimul
stos
cdq
or
imul
xor
jmp
mov
xchg
rcl
lock
mov
mov
mov
xchg
les
ret
fbstp
rcl
xchg
pop
and
in
xlat
jae
jns
xor
call
retf
sub
ds
cmc
cmp
mov
js
daa
(bad)
adc
out
xor
lea
call
ror
imul
sbb
jmp
icebp
ss
mov
addr16
loopne
and
add
pop
popa
js
rcr
mov
cdq
fild
mov
int
out
(bad)
dec
cmp
and
and
add
cmp
fist
jo
inc
pop
lea
sub
cmp
jg
retf
push
cmp
sub
into
mov
mov
cmp
add
push
shl
dec
call
stc
les
cmps
sti
mov
xlat
cld
dec
or
jae
add
add
or
(bad)
cli
jnp
sti
ins
fstp
xchg
icebp
jnp
out
jno
and
and
fdivr
dec
sbb
inc
setp
add
mov
inc
fist
adc
jecxz
jb
push
inc
jo
arpl
mov
xchg
push
mov
push
or
test
mov
sbb
loop
fild
jle
sub
test
hlt
inc
in
gs
fst
je
dec
lods
jl
dec
or
retf
test
sub
xor
add
pusha
pop
test
xchg
sub
mov
push
cmp
add
pushf
jns
xchg
iret
pop
push
push
push
and
ins
adc
outs
(bad)
cmp
je
jno
mov
push
std
loopne
mov
xchg
imul
sbb
iret
mov
push
jg
jmp
lea
call
pop
xchg
sub
pop
sbb
xchg
ret
xchg
push
test
popf
lods
sbb
aas
xor
inc
sub
ins
sub
push
mov
pushw
xchg
or
sahf
jo
jno
add
jmp
mov
lods
jns
(bad)
in
xchg
(bad)
dec
adc
clc
cmc
jmp
fld
jle
xor
leave
or
push
mov
inc
dec
cld
imul
fwait
mov
data16
repnz
data16
jne
push
jb
call
out
adc
jbe
stc
or
xchg
lods
imul
leave
test
xchg
stc
lods
stos
sbb
fidiv
mov
popa
enter
nop
mov
add
out
in
popf
sbb
adc
mov
push
leave
(bad)
arpl
pop
gs
shl
mov
mov
push
ret
aas
jge
adc
mov
adc
sbb
cmc
not
enter
sub
add
(bad)
and
ja
in
popa
mov
test
jle
pop
ins
sbb
idiv
add
pushf
call
popf
fdiv
fwait
add
iret
add
sti
int
loopne
gs
or
jp
push
sbb
jnp
dec
pop
cmp
sub
sbb
inc
jl
stos
mov
sub
xchg
out
inc
stc
out
mov
xchg
push
sub
and
push
loop
out
pop
xor
inc
test
xor
fs
mov
das
mov
call
retf
sbb
sbb
jl
push
aad
pop
cmp
test
inc
jmp
jae
fnstcw
inc
sahf
(bad)
jl
lods
inc
jne
aad
inc
jno
int3
sub
mov
hlt
or
or
dec
xchg
mov
adc
scas
or
es
pop
dec
lods
leave
scas
push
adc
mov
xchg
xor
cdq
pop
dec
mov
push
es
fidiv
pop
xor
inc
(bad)
cmp
ret
push
inc
pop
fdiv
mov
sub
push
icebp
mov
cs
xchg
push
movs
jp
mul
(bad)
repz
fwait
or
adc
imul
lahf
or
mov
in
enter
dec
invd
dec
or
sar
arpl
lods
in
out
js
jnp
mov
data16
push
sbb
(bad)
popa
ror
or
inc
xor
out
sub
cmp
mov
cld
mov
cwde
mov
push
and
in
lods
out
in
in
inc
xlat
push
inc
das
ret
lahf
imul
jmp
inc
xchg
imul
sahf
cs
jmp
fsub
push
xor
outs
push
int3
dec
(bad)
lock
outs
push
sbb
fwait
xchg
cmps
jmp
movs
dec
add
int3
push
inc
fwait
test
sub
add
adc
cmp
xchg
xor
pop
xor
(bad)
int3
cmps
mov
adc
sar
inc
jns
pop
inc
dec
sub
cmc
pop
push
sbb
data16
cmp
repz
adc
mov
loopne
mov
rdtsc
pop
xchg
xlat
xchg
add
jp
mov
jl
dec
inc
retf
adc
sub
mov
inc
sti
mov
push
popf
adc
aad
add
retf
xor
mov
mov
js
sti
(bad)
pop
sub
xor
push
add
push
ret
adc
movs
repnz
push
mov
adc
or
add
fsubr
add
cwde
push
xchg
(bad)
cwde
ja
cmp
add
xor
mov
mov
sbb
std
retf
pop
rcr
mov
fisub
push
js
daa
mov
es
dec
sub
(bad)
das
xchg
jne
xor
repz
add
shl
inc
or
lods
loopne
das
in
mov
sahf
test
dec
push
loopne
dec
fcmove
sub
lods
cmc
jns
adc
or
sub
jno
add
push
loopne
and
std
test
test
xor
shl
mov
jbe
aas
xchg
cmp
xchg
dec
cmp
sbb
popa
jne
popf
fisub
daa
mov
cs
test
scas
jecxz
jmp
dec
fmul
popa
lods
sub
jmp
jl
push
mov
pop
int
loope
inc
popf
js
pop
jne
push
scas
retf
or
imul
scas
iret
pushf
ss
daa
cs
mov
cmps
pop
or
arpl
xchg
sub
cmp
(bad)
repnz
mov
fimul
fiadd
lods
dec
mov
fdivrp
xchg
in
jl
sar
imul
out
out
lds
loope
jmp
adc
xchg
std
jne
pop
in
lahf
out
jbe
jg
fstp
lea
sbb
repnz
mov
stos
lock
pop
test
(bad)
(bad)
cmps
pop
cmp
mov
sti
xchg
(bad)
lahf
(bad)
in
push
movs
test
aas
loop
(bad)
pop
in
lahf
lahf
call
ins
je
pop
fldl2t
xor
xchg
cli
pushf
mov
aam
aaa
sbb
(bad)
mov
(bad)
loop
pop
loope
or
ret
pop
jl
jne
iret
fcomp
pop
sub
xlat
xchg
add
jae
mov
dec
in
dec
jne
std
enter
adc
add
dec
pusha
xchg
xor
nop
xor
cld
ins
call
retf
in
loope
push
dec
mov
sub
add
(bad)
push
push
mov
outs
jmp
sbb
mov
(bad)
(bad)
fdivr
mov
leave
xor
lea
push
mov
dec
xchg
sbb
jl
fsubr
pop
out
in
jb
mov
sub
jecxz
push
add
aad
mov
cwde
cs
ins
outs
scas
(bad)
shl
inc
add
fimul
pusha
pop
cmp
ret
popf
cmps
pop
xor
and
jg
shl
pusha
popf
or
lock
call
(bad)
rol
jbe
mov
add
out
imul
ins
out
fmul
test
(bad)
push
or
ficomp
jo
cmp
or
pushf
xchg
dec
mov
cmc
cld
idiv
addr16
sbb
mov
inc
sbb
mov
cld
inc
out
sbb
pop
mov
cld
lds
mov
push
(bad)
hlt
mov
lds
mov
lea
lock
fwait
es
sub
arpl
push
mov
test
sar
mov
aas
inc
jno
push
or
sub
mov
clc
xchg
add
sub
and
pop
shr
adc
js
add
in
lds
xchg
ja
mov
jmp
int3
dec
rol
add
call
pop
pop
and
mov
out
(bad)
sar
cmp
mov
add
mov
scas
daa
lea
fadd
js
data16
jbe
mov
aaa
jmp
lahf
mov
mov
inc
imul
(bad)
repz
shl
mov
and
or
dec
xor
mov
jae
mov
cmp
mov
jae
xchg
pop
call
pop
cmp
sbb
in
daa
add
and
mov
cli
cmc
retf
inc
inc
adc
xchg
cdq
jg
jle
jbe
inc
mov
or
pop
push
mov
outs
outs
fsubp
lea
pop
stos
lds
aas
stos
pushf
dec
fdiv
lods
lock
retf
or
sbb
call
adc
cmp
xor
or
gs
pop
scas
jl
dec
or
call
fs
cmp
mul
nop
adc
out
lods
push
xor
cld
xchg
jg
mov
mov
sbb
add
ins
aaa
lock
test
pop
sub
jmp
add
mov
xor
push
hlt
movs
in
mov
stos
xchg
(bad)
retf
call
(bad)
cs
cmp
fnstcw
fsub
aad
ret
(bad)
push
(bad)
cvtdq2ps
xor
push
scas
push
pop
cmp
(bad)
xlat
movs
jo
pop
daa
popf
push
shl
xor
pop
jo
adc
mov
sub
int
xchg
scas
jg
pop
mov
xor
jle
inc
mov
lds
test
sbb
or
cmp
fld
aas
mov
cdq
neg
adc
push
call
sub
sar
sar
jmp
sub
push
data16
cdq
repz
push
mov
into
test
cmp
mov
add
ret
and
jmp
loopne
add
inc
ins
dec
xchg
mov
pop
xor
inc
mov
pusha
enter
imul
pop
xchg
icebp
ds
or
stos
push
jb
cli
inc
xor
(bad)
std
push
cmp
jecxz
ss
gs
jge
add
xchg
loop
cmp
sti
jne
sub
leave
cs
hlt
and
and
(bad)
mov
jmp
loope
xor
pop
add
(bad)
push
mov
fadd
or
adc
sub
push
cmps
mov
pop
icebp
jge
sbb
mul
or
mov
push
sbb
cmps
pop
pop
outs
mov
mov
sub
mov
sahf
not
sti
mov
cmp
jne
push
stc
mov
enter
in
cmp
or
cmp
int3
mov
out
leave
mov
push
or
pop
jmp
pop
dec
or
cmp
cdq
dec
cmp
mov
sub
mov
pop
push
mov
fdiv
push
pop
jb
inc
jnp
test
cmc
add
and
jae
xchg
mov
sbb
push
ins
push
dec
push
pusha
aaa
imul
pop
add
mov
adc
jb
or
xchg
sbb
sbb
and
add
ficom
xor
jno
or
xor
jbe
ins
cwde
cmp
retf
push
pusha
or
adc
or
pop
cdq
loop
fwait
jbe
dec
pop
cmp
daa
test
jbe
aas
and
aad
mov
jno
inc
sub
ins
fsubr
and
xchg
sub
jle
xchg
sub
xchg
mov
pminsw
xor
div
push
mov
call
push
dec
mov
jne
jno
je
mov
int
inc
popf
imul
minps
xor
jnp
mov
xor
xor
pop
inc
push
or
popf
inc
aas
fwait
pop
dec
cs
test
test
adc
cmp
dec
stc
sub
add
xchg
mov
sbb
or
mov
fstp
ret
fwait
addr16
xor
cmp
inc
mov
sbb
cs
daa
test
out
dec
imul
pop
jecxz
in
inc
jg
push
popa
dec
(bad)
rcr
repnz
or
cmp
les
push
or
jno
push
movs
inc
and
dec
xor
sub
test
dec
test
xchg
xchg
or
in
add
ss
sub
mov
(bad)
mov
jecxz
or
inc
lea
les
bound
mov
xchg
rol
adc
jmp
in
in
xor
ret
pop
loopne
jmp
ins
fs
(bad)
sub
sbb
in
pop
retf
cmp
add
hlt
(bad)
dec
not
push
jecxz
arpl
cmp
and
shl
mov
gs
jns
fidivr
nop
psllw
add
scas
scas
or
mov
cmp
test
dec
mov
repnz
test
out
pop
aaa
cs
xchg
push
inc
or
fisttp
fsub
or
cwde
ror
outs
cdq
iret
jmp
loopne
mov
test
inc
int
xchg
cmp
mov
das
cdq
inc
inc
mov
adc
or
pop
lahf
add
sub
mov
shl
stc
inc
inc
sub
adc
xchg
push
sub
jo
and
sbb
xchg
mov
or
fstp
std
and
aas
outs
out
adc
in
loopne
out
xor
mov
pop
popa
loop
cmps
in
in
das
fwait
inc
mov
movs
test
xchg
pop
jmp
push
or
cmp
movs
add
add
hlt
test
std
leave
clc
in
cmp
sub
push
ret
call
pop
xchg
movs
cmp
repz
std
jle
xchg
xchg
cwde
inc
mov
fs
push
lods
sbb
popf
retf
pop
pop
fmul
iret
cmp
in
sti
out
pop
cmp
hlt
loope
xchg
jo
mov
aam
pop
jmp
stc
cmp
jge
mov
cmc
ret
shl
in
mov
fwait
sar
sbb
sub
adc
xchg
pop
pop
and
loop
xor
int
push
or
cmc
pop
pop
(bad)
cli
stos
out
push
in
into
sar
mov
loop
fmul
stos
cmps
mov
cmp
dec
jae
stc
lods
dec
push
stos
std
sub
leave
std
mov
dec
mov
xchg
ficom
sahf
push
lahf
dec
sub
xor
pop
cmp
repnz
out
mov
lea
(bad)
or
loope
shl
mov
sbb
xor
push
pop
je
sahf
cmp
mov
hlt
(bad)
fistp
mov
pop
jmp
not
idiv
in
test
(bad)
cmps
or
(bad)
sbb
aas
bound
and
xor
cwde
sub
outs
cmps
and
lods
fcomi
xchg
call
sbb
in
xor
das
add
mov
out
daa
mov
dec
dec
or
and
fmul
mov
popa
cmp
xor
stc
ror
jnp
rol
cwde
add
pop
sub
push
lea
add
leave
retf
inc
or
push
xor
jb
pop
jp
jns
push
sahf
adc
cmc
hlt
and
cwde
xlat
not
and
test
(bad)
pop
jecxz
inc
jmp
pop
inc
xor
neg
fild
fisubr
pop
fcmovu
adc
jnp
ficomp
mov
adc
dec
rcl
cmp
cmc
adc
xchg
mov
add
arpl
stos
movs
cmp
dec
fsub
pop
sbb
sub
imul
addr16
lods
jp
inc
sbb
jno
aam
and
popa
xor
int
shl
pop
in
add
mov
adc
pop
cmp
iret
cmp
les
adc
bound
js
inc
inc
xor
test
mov
mov
jno
mov
fbstp
lods
js
cmp
stos
mov
(bad)
push
mov
xor
leave
cmp
inc
push
sub
pop
xchg
or
sub
test
sbb
jae
jo
and
push
sub
xchg
mov
cdq
adc
call
jmp
sub
inc
and
push
(bad)
pop
and
mov
das
retf
mov
pop
dec
into
cwde
xlat
mov
mov
xor
xchg
dec
scas
ficomp
jge
mov
jl
mov
test
mov
out
cmp
xor
fld
cdq
xor
das
rol
sub
cmp
sahf
outs
jmp
(bad)
loopne
push
outs
(bad)
in
cmp
sbb
and
jo
gs
cdq
jmp
rol
ins
inc
jae
xor
mov
ror
mov
push
es
push
jbe
retf
push
cmc
gs
sbb
inc
xchg
int3
inc
unpcklps
xchg
punpckhdq
hlt
test
test
int
xor
pop
cld
dec
rol
inc
movs
int3
pop
sbb
mov
xchg
outs
add
inc
push
add
jne
add
scas
xchg
mov
sub
mov
mov
xor
mov
test
sbb
pusha
add
adc
inc
shr
fdivr
out
and
imul
std
dec
hlt
test
ins
add
dec
push
xchg
stc
out
enter
push
jle
lock
cmp
lods
jmp
cmp
mov
inc
sbb
cmp
shl
fidiv
sbb
pop
jo
dec
(bad)
scas
outs
rol
sub
daa
inc
stos
push
jbe
lods
and
mov
addr16
sti
sbb
in
sahf
pop
mov
inc
jae
fmul
sub
and
add
cmp
call
pop
sbb
sub
into
test
in
scas
(bad)
push
jmp
ss
(bad)
loop
sub
sbb
repz
repnz
and
stos
(bad)
sbb
repnz
mov
imul
and
xor
sbb
loop
xor
aas
jns
or
push
jl
mov
mov
jno
cmps
ins
mov
cwde
mov
jecxz
inc
fnsave
and
fwait
and
adc
xor
scas
or
ins
and
inc
inc
dec
push
or
inc
mov
fcmovnb
push
xchg
mov
daa
pop
lahf
scas
shr
outs
mov
mul
add
add
push
stc
adc
loop
mov
cmc
jmp
mov
dec
out
cmps
mov
pop
mov
repz
sub
loope
mov
loope
cmp
loope
addr16
add
loopne
mov
adc
sub
in
pop
sub
dec
call
fnsave
cmp
push
adc
jb
in
mov
push
sbb
pop
mov
outs
frstor
pop
fst
push
or
or
inc
xor
mov
sbb
fmul
mov
cmps
mov
add
push
pop
popa
mov
adc
inc
pop
cli
popa
cmp
add
fs
in
dec
cmps
rcl
adc
push
jge
push
jo
dec
ss
rcr
js
test
test
fwait
sbb
and
push
(bad)
fnstenv
mov
and
inc
cdq
jle
add
sub
mov
and
in
bswap
shl
sti
fcom
mov
bound
sbb
mov
movs
pusha
xlat
jmp
fcom
ret
mov
(bad)
xor
push
call
dec
sti
ret
outs
sub
leave
add
(bad)
jbe
mov
pop
sbb
ficomp
(bad)
loope
sbb
ss
nop
dec
add
div
repz
ins
mov
sub
add
sahf
out
xchg
pusha
pop
ror
popa
push
test
icebp
(bad)
fnstcw
lock
mov
inc
mov
xchg
(bad)
movs
js
fadd
cmp
or
aam
pop
mov
repz
pop
cs
mov
pop
pop
retf
imul
pop
sub
sub
inc
lea
mov
mov
pop
movs
cmp
mov
fbld
arpl
jne
cmp
scas
xchg
push
outs
test
sti
jbe
ins
movs
mov
mov
out
inc
aam
add
ja
out
sahf
retf
mov
mov
ds
nop
loopne
rcl
lock
mov
aas
xor
pop
cmp
jg
lods
les
ret
test
jmp
cmps
in
scas
sbb
inc
int3
pop
fisubr
mov
in
push
movs
add
mov
scas
xchg
mov
jge
inc
pusha
mov
sbb
xlat
mov
stc
mov
imul
pop
push
jp
and
jle
jne
call
test
fist
adc
push
bound
pop
cmps
or
fsub
xor
dec
ja
push
out
inc
btr
mov
jmp
add
inc
shl
hlt
mov
cs
loope
xchg
dec
xor
in
jae
mov
xor
aas
and
or
jl
dec
mov
push
xchg
popf
sahf
sar
mul
into
jne
ror
xor
pop
(bad)
aaa
cmps
ss
jp
rol
xlat
xor
and
inc
in
sar
mov
ret
mov
push
int3
sbb
adc
xor
inc
cld
aam
sahf
push
popf
mov
popa
retf
ret
(bad)
cld
shr
cmp
repz
es
in
cmps
inc
movs
in
mov
jb
in
dec
jb
dec
sub
mov
dec
ret
jle
retf
mov
stos
and
ret
lock
jp
cmc
movs
adc
xchg
add
mov
sbb
call
mov
ficomp
xor
das
int
xor
pusha
sub
sahf
inc
(bad)
mov
dec
scas
cwde
adc
bound
jne
ret
mov
mov
ss
js
fst
ss
leave
mov
xchg
and
aaa
push
stos
xchg
in
fisubr
xchg
rol
fcmove
adc
jl
ret
and
repnz
mov
int3
jl
inc
cmps
movs
or
int
jge
mov
or
xchg
inc
out
cmp
movs
jb
add
retf
jno
test
mov
ss
cmp
sub
mov
sub
cmps
push
cmp
lods
jmp
popf
sti
mov
pop
dec
mov
jno
push
hlt
sbb
cdq
pop
adc
fs
adc
xor
sub
sbb
lods
pop
pushf
and
dec
stos
pop
stc
xchg
or
xor
(bad)
mov
loopne
jnp
je
inc
mov
cdq
mov
fadd
xchg
push
xor
add
cmps
iret
cmp
pushf
adc
pusha
sti
and
call
and
int
dec
lods
js
sub
pop
and
adc
xor
inc
(bad)
call
and
ins
fldenv
pmullw
ret
or
push
adc
repz
adc
and
mov
push
xor
imul
out
jmp
sub
jbe
ret
clc
leave
fidiv
mov
pop
pop
jmp
loop
data16
loope
and
mov
xchg
adc
bnd
lock
inc
cmp
cmp
add
cmp
test
xchg
scas
std
popa
loopne
sub
push
or
fadd
hlt
in
push
cmp
mov
xchg
xchg
xchg
cmp
shl
push
lahf
test
pop
sbb
mov
jmp
enter
imul
adc
xor
jecxz
push
in
call
mov
xlat
or
add
sub
je
push
sub
pop
or
shl
int
out
imul
mov
mov
mov
hlt
cmp
lea
cmc
adc
mov
xchg
dec
or
in
mov
jl
std
aas
dec
adc
xchg
cmp
mov
lahf
fcom
daa
lea
pop
push
jns
add
xor
dec
and
or
ja
inc
jmp
mov
test
jl
aas
mov
les
add
xchg
pop
cli
in
pop
popa
gs
lock
xchg
push
pop
ins
mov
aas
(bad)
icebp
cmp
outs
pop
dec
inc
adc
call
cmps
aam
mov
mov
dec
push
jge
cmps
push
inc
inc
fs
test
mov
mov
push
mov
in
imul
push
jmp
inc
or
and
cld
imul
dec
jg
sbb
into
inc
data16
dec
test
repnz
sar
aam
rcr
std
out
(bad)
std
popf
int3
jno
jp
call
add
jl
dec
push
test
test
stos
int3
pop
cmp
cmp
ins
(bad)
push
and
jecxz
popf
or
out
add
popf
xor
dec
add
ror
cdq
data16
adc
cmps
xchg
add
je
mov
dec
sti
iret
inc
stos
add
pop
sti
into
imul
add
ret
xchg
jp
std
stos
jmp
int3
mov
cmps
pop
in
cdq
test
jp
imul
xor
lods
xor
imul
test
mov
mov
fiadd
jle
daa
xchg
mov
(bad)
shr
lods
jle
ins
ins
pop
jmp
mov
out
cmp
mov
cmp
jp
movs
jecxz
mov
mov
test
sbb
lods
and
jne
test
mov
inc
xor
fsubr
or
mov
dec
mov
jge
cmps
lea
repnz
inc
sar
loop
cmp
dec
or
sub
movs
or
addr16
popf
dec
push
jne
mov
out
daa
xor
(bad)
retf
mov
xchg
popf
vmptrld
xor
idiv
mov
inc
cmp
xchg
sub
rcl
cdq
ret
jbe
addr16
xor
jg
xchg
and
pop
xchg
bound
jbe
xlat
add
gs
xlat
stc
fmul
sbb
fs
sbb
cmp
retf
cmps
sbb
mov
jl
xchg
sub
inc
mov
push
jnp
mov
xchg
imul
int
pop
daa
jg
mov
push
mov
and
lahf
std
jbe
fs
pop
std
cmp
push
stos
lods
dec
fwait
cmp
dec
mov
pop
mov
xchg
sbb
ins
and
out
jg
int
cmp
sbb
test
mov
aas
or
sub
mov
mov
(bad)
or
adc
mov
lods
in
cld
mov
cmc
push
mov
xor
lods
push
cmp
and
std
dec
clc
aas
sub
mov
mov
mov
dec
xor
and
fs
aam
mov
mov
ficomp
dec
sub
retf
out
cmp
mov
ja
movs
imul
iret
adc
mov
inc
push
jb
stos
sub
mov
pop
push
test
hlt
dec
pop
ror
(bad)
mov
inc
jge
fistp
inc
mov
enter
dec
mov
bound
fs
ss
jl
push
dec
sub
push
(bad)
inc
xlat
sub
fnstenv
lock
adc
fisttp
cmp
iret
xor
xchg
movs
pop
test
mov
push
inc
pusha
xlat
sub
or
sahf
(bad)
mov
data16
cmp
sbb
xchg
push
sbb
loope
ins
dec
cld
cmc
sub
push
enter
inc
sub
(bad)
xor
test
cld
push
cs
xor
and
(bad)
jmp
outs
neg
push
cmps
jae
sbb
adc
mov
xchg
push
add
int
icebp
sbb
mov
mov
adc
add
scas
and
xor
popa
stc
std
lahf
xlat
bound
adc
pusha
enter
mov
out
mov
jmp
xchg
mov
mov
sub
cmp
jno
(bad)
push
stc
adc
out
jne
outs
xchg
sub
iret
add
sbb
ds
outs
and
movs
or
popf
mov
test
sub
pop
xchg
pushf
mov
dec
xchg
lock
pop
push
inc
leave
ficom
mov
pop
mov
imul
dec
xchg
mov
sbb
cld
cs
cmp
into
xor
mov
aam
cmp
pop
push
pop
mov
in
not
mov
sub
pop
xchg
jmp
int3
movs
add
in
inc
rcr
xor
retf
minps
adc
imul
xchg
arpl
push
lods
in
or
dec
sbb
cmps
arpl
loop
mov
sbb
pop
xchg
add
xor
test
retf
jnp
jl
mov
es
call
cdq
cmps
fld
cwde
push
stos
dec
and
adc
neg
and
faddp
(bad)
cmc
mov
cmp
sub
stos
int3
mov
lods
daa
sub
repnz
movs
push
mov
(bad)
sbb
out
popf
xchg
fisub
ins
xor
cdq
push
or
into
mov
shl
mov
push
xchg
sbb
dec
inc
sar
cmp
fmulp
xchg
jmp
push
out
pop
int
loopne
shl
mov
cmp
call
push
mov
mov
stc
repnz
jb
sbb
je
(bad)
lock
dec
ret
jns
test
xchg
push
ret
push
xor
inc
fdiv
push
daa
ins
jmp
sbb
xchg
in
push
push
xor
and
push
ss
stc
cld
call
pop
shl
dec
por
add
(bad)
jp
out
scas
lea
cmp
jbe
rol
rdpmc
fwait
test
cli
mov
aaa
lea
or
leave
retf
mov
fwait
push
adc
pop
sahf
jle
mov
jmp
pop
dec
(bad)
test
sbb
loopne
xchg
sub
adc
xchg
shl
and
xor
and
lock
ja
pop
div
sub
pop
jp
inc
cmp
repz
dec
adc
sbb
mov
mov
scas
add
dec
ja
fst
nop
cmp
cwde
and
add
cdq
(bad)
xlat
lods
mov
ror
push
inc
call
jae
jo
add
fnstcw
cmp
jnp
and
std
cmp
outs
and
outs
push
pop
jno
pop
ins
mov
pop
rcl
(bad)
jno
sbb
pusha
sub
hlt
push
xchg
jle
pop
shl
loop
(bad)
cld
mov
push
pop
sub
sub
repnz
dec
shr
shl
mul
mov
(bad)
jne
adc
sub
popf
(bad)
and
adc
xchg
jg
enter
jns
sbb
push
mov
call
je
xchg
(bad)
popa
mov
cld
dec
hlt
in
repz
fsubr
cwde
mov
test
or
bound
jecxz
dec
add
(bad)
sbb
sbb
add
sub
sbb
iret
jnp
pop
or
mov
cmps
daa
mov
add
and
ins
pusha
shr
mov
shl
add
dec
addr16
gs
and
adc
mov
pop
dec
sbb
push
mov
gs
and
mov
std
push
lods
pop
int
or
jno
cmp
(bad)
into
lds
rcr
imul
jo
mov
int
adc
icebp
mov
aad
pusha
xchg
sti
sbb
xchg
mov
pop
mov
(bad)
retf
jnp
mov
dec
add
inc
out
bound
popa
std
popf
mov
xor
inc
ja
mov
xor
xchg
push
pop
jbe
pushf
(bad)
ret
ins
sbb
fs
retf
xchg
lds
popa
(bad)
mov
sub
jb
adc
fidivr
iret
adc
outs
pop
jae
lea
inc
adc
out
lahf
das
into
cmp
and
push
or
mov
(bad)
std
dec
movd
inc
and
loope
inc
hlt
cld
push
cmps
push
xor
push
adc
sub
or
sub
in
inc
ins
scas
jp
push
sub
sbb
cmp
push
ret
and
(bad)
retf
mov
cmps
xchg
add
movs
sbb
(bad)
dec
jne
cmp
popf
mov
(bad)
sub
xchg
xchg
sbb
pop
(bad)
sbb
mov
pop
mov
test
mov
ja
and
test
mov
push
out
sbb
inc
sbb
xchg
out
xchg
add
in
mov
aaa
mov
test
inc
adc
pop
pop
adc
aad
call
xchg
(bad)
aad
mov
pusha
mov
mul
lods
aad
iret
loope
mov
inc
test
loop
rol
mov
(bad)
cld
inc
pop
mov
mov
and
je
dec
fxch
stc
loope
jg
arpl
ror
mov
jmp
bound
in
xor
xor
aad
cwde
lea
cmp
into
mov
shl
pusha
mov
adc
pop
inc
(bad)
cld
xchg
add
inc
cmps
jmp
out
dec
retf
rcl
jg
fadd
or
dec
leave
arpl
into
retf
loope
fnstsw
xor
cmp
les
jle
out
push
loop
mov
push
pusha
mov
push
and
mov
sti
jle
or
dec
push
retf
ja
fwait
outs
ficomp
sub
xchg
mov
pushf
in
jbe
(bad)
popf
cwde
in
ds
adc
push
rcr
pop
dec
aas
or
lock
adc
sub
xor
pushf
dec
jno
dec
sub
add
popf
jnp
popa
push
int
daa
ret
push
mov
(bad)
jne
mov
es
mov
mov
fidivr
(bad)
outs
in
out
pop
dec
lock
ja
mov
ret
lahf
repnz
mov
push
cmp
push
and
xchg
(bad)
and
and
push
pop
xor
stc
pop
mov
aas
xchg
jecxz
int
in
pop
test
sub
inc
xchg
bound
push
mov
jp
sub
sbb
cmp
mov
push
push
cs
adc
or
lahf
add
cmp
je
push
call
cs
jle
ja
mov
ret
ds
xchg
sub
sub
les
sbb
or
mov
inc
movs
aas
sub
mov
adc
stos
fisttp
movs
cwde
xchg
dec
ins
jno
fmul
lahf
jl
das
inc
mov
push
add
jb
cmp
shl
pop
mov
xor
sti
dec
jl
sti
addr16
jp
outs
pop
popa
adc
pop
cdq
cmp
xchg
or
mov
out
ret
mov
iret
or
or
je
push
popa
sar
pop
jo
jle
mov
ss
cld
inc
xchg
push
wrmsr
mov
lahf
sbb
in
fidiv
aaa
(bad)
in
dec
div
mov
retf
int
jae
sbb
ins
add
sar
pushf
jno
mov
sbb
pop
push
mov
int
icebp
rep
out
add
xchg
int
call
sub
dec
aaa
aam
xor
repz
mov
xlat
jnp
mov
loope
add
bound
ret
sbb
inc
push
push
js
xor
or
dec
cdq
ins
fst
test
aam
push
mov
bsr
cmp
sti
add
sbb
fnstenv
adc
fidivr
xor
mov
cld
and
xchg
pop
jle
pop
dec
jg
xor
pusha
jl
sbb
cmp
inc
pop
ficomp
cmc
pusha
adc
mov
pop
jge
stos
iret
push
xchg
sar
mov
pop
adc
sub
out
cmp
mov
fwait
lahf
push
xchg
je
or
retf
push
ja
dec
sub
inc
push
mov
daa
inc
(bad)
inc
mov
popf
xchg
fwait
std
fidivr
jo
jecxz
fadd
adc
cmps
xchg
das
sbb
stc
into
push
cmps
ins
cs
movs
out
jno
test
cld
xor
adc
push
into
sti
pop
and
(bad)
repz
cmp
lea
cmp
das
aas
shl
call
cwde
ins
shr
jb
or
jbe
out
sub
mov
shl
push
ret
jle
mov
mov
sub
xchg
(bad)
fstp
xchg
(bad)
dec
outs
lahf
and
mov
pcmpgtd
sub
jecxz
xchg
loope
mov
(bad)
jno
cmp
ins
inc
pop
dec
das
cmp
ja
test
jmp
jp
lods
xchg
mov
xchg
adc
push
mov
dec
fiadd
(bad)
or
test
js
sti
sub
int3
pop
jle
push
nop
stc
cwde
add
test
jmp
jne
repz
ficom
lods
sub
cmp
cmp
fld
adc
xchg
pop
popf
mov
fs
jmp
sbb
cli
sti
jle
mov
dec
fwait
adc
xor
add
(bad)
cmp
ins
push
jecxz
enter
movs
inc
(bad)
retf
jl
pop
dec
push
xor
lock
and
push
jmp
mov
sbb
repz
test
std
mov
or
ja
scas
lea
xchg
xor
in
scas
mov
push
pop
out
stos
pop
push
push
ja
and
cmp
rcr
arpl
aaa
or
or
cld
mov
push
lds
pop
out
inc
mov
mul
jmp
nop
push
sub
pop
jp
sub
adc
js
push
and
stos
out
shl
dec
dec
adc
inc
push
das
pop
fild
sub
iret
or
cmps
inc
out
mov
call
stos
dec
jmp
call
loopne
pop
popa
dec
cmp
cmp
dec
sub
addr16
nop
fisubr
cld
mov
mov
in
cmps
xchg
mov
cmp
loop
in
xchg
inc
sahf
fild
loopne
push
pop
xlat
xor
jb
xor
popa
arpl
xchg
lahf
ror
test
xchg
neg
inc
inc
xor
pop
popf
jecxz
das
and
icebp
or
fstp
scas
pop
outs
jmp
xor
add
jb
jg
xor
mov
lods
cmp
pusha
mov
movs
cmp
stos
fmul
push
sub
pop
xor
mov
fs
pop
ins
push
int3
sbb
sub
push
jns
pushf
push
adc
pop
push
and
test
mov
or
push
jl
fsubr
sar
jg
mov
cli
or
repz
or
adc
jno
outs
or
cmps
or
jns
stos
mov
outs
not
cmp
cmp
out
push
jmp
pop
inc
pop
(bad)
loope
sar
add
push
test
outs
mov
loopne
mov
pop
in
cli
mov
mov
loopne
mov
inc
leave
and
fcom
add
std
popf
pusha
int3
mov
aam
je
pop
in
fisub
stos
fld
xor
add
mov
shl
adc
sub
adc
dec
sbb
movs
stos
es
xorps
ffree
add
sbb
and
(bad)
jge
jmp
xchg
repnz
test
popa
xor
push
jns
enter
std
scas
lea
cmp
pop
pushf
ins
cmp
leave
ss
mov
cld
inc
xchg
in
xor
retf
or
xor
mov
cwde
enter
(bad)
stc
inc
jne
(bad)
push
pop
mov
(bad)
adc
scas
xchg
hlt
leave
cmp
test
mov
inc
movs
xor
adc
sub
(bad)
call
xchg
jnp
xchg
es
pop
xor
inc
stc
in
or
jg
in
dec
or
call
and
jp
mov
jno
cld
adc
inc
adc
jb
lea
mov
mov
mov
jl
ds
cmc
pusha
test
xor
lea
inc
mov
sar
lods
daa
or
cmps
mov
shl
shl
popa
xor
sahf
js
adc
dec
sub
repz
jmp
dec
mov
bound
mov
jmp
sub
sub
test
out
pop
xor
dec
pop
mov
data16
sahf
dec
js
dec
xor
stc
imul
mov
pop
and
retf
mov
push
xor
push
in
pop
jmp
jae
sbb
dec
in
aad
loope
lea
pusha
adc
sub
cmp
idiv
mov
and
pop
adc
or
dec
jbe
ins
jb
es
push
sub
cmp
cmc
add
cwde
pusha
fcmove
pop
jl
ds
in
mov
or
jmp
and
and
mov
xchg
xor
inc
xor
ja
push
xchg
sar
cmp
mov
xchg
sbb
or
jmp
sbb
adc
ret
and
pop
fsubr
add
cli
shl
push
lahf
(bad)
popa
xchg
add
test
es
mov
loop
scas
js
sti
std
pop
cmp
imul
mov
inc
pop
jl
add
(bad)
xchg
mov
adc
cmp
inc
sbb
pop
fs
(bad)
jle
ret
mov
inc
push
test
nop
pop
dec
mov
cmp
rcr
inc
fstp
out
add
mov
dec
mov
loop
or
stc
mov
in
cli
pushf
stos
lds
aad
cmc
xor
ss
push
out
xor
dec
(bad)
mul
adc
sub
pop
dec
in
dec
sbb
je
stc
data16
pusha
xor
and
cld
mov
les
leave
dec
(bad)
fidivr
sbb
add
mov
inc
dec
(bad)
sub
(bad)
cmp
xor
(bad)
arpl
aad
xor
loope
adc
cli
push
add
inc
xor
cld
pop
je
imul
sub
adc
jmp
popf
mov
stc
in
cmp
sti
dec
into
test
cmp
shl
sbb
pop
int
cwde
addr16
loope
fs
sbb
nop
or
add
inc
(bad)
adc
xchg
jle
or
shl
mov
test
out
dec
sahf
sub
mov
clc
push
xor
push
and
sbb
ret
sub
jb
xchg
and
adc
loopne
pop
mov
fadd
mov
cdq
in
out
stos
test
jmp
test
lods
nop
int3
jmp
xor
in
mov
or
or
daa
push
inc
add
jle
fsubr
adc
pop
inc
loopne
jp
inc
cmp
lahf
cmp
addr16
repz
inc
mov
mov
mov
push
in
out
mul
push
cmps
stc
test
pop
repz
xor
push
aam
inc
pop
mov
mov
xchg
pop
js
pop
shl
in
xchg
fdiv
xlat
jmp
js
cli
jo
repz
push
popf
xchg
bound
mov
pop
xor
in
mov
push
in
xchg
jbe
loop
xchg
xchg
arpl
bound
xchg
in
imul
loope
stos
ror
inc
stos
lds
add
mov
adc
jno
mov
mov
inc
sub
pop
xor
sbb
dec
in
retf
or
and
fild
inc
mov
sub
pop
sub
stos
push
test
ds
stc
cmps
les
ss
inc
cmp
inc
pop
push
hlt
jp
sub
pop
jge
dec
mov
fninit
fdivr
ds
sbb
adc
jbe
cld
sbb
div
out
add
repz
test
mov
pop
inc
out
je
imul
call
sbb
int3
dec
fcom
cmps
cmp
cs
cmp
imul
mov
mov
ror
mov
fwait
shr
mov
gs
xchg
popa
push
outs
fwait
or
jno
(bad)
inc
mov
out
mov
bswap
dec
leave
gs
xchg
inc
jno
movs
pop
push
jno
adc
dec
push
lods
mov
sbb
cwde
frstor
scas
mov
mov
sbb
jo
rol
popf
pushf
add
inc
xchg
(bad)
popa
adc
jns
popa
aaa
ds
retf
cmp
dec
add
std
pop
xchg
mov
fidivr
in
std
add
adc
jns
dec
mov
(bad)
enter
dec
jl
imul
loop
das
push
push
mov
retf
and
jb
fwait
push
jp
(bad)
retf
adc
adc
mov
pop
jmp
arpl
(bad)
cmp
mov
add
push
cmc
pop
sub
dec
jns
jecxz
scas
jl
dec
inc
mov
mov
cmp
pop
in
in
mov
mov
mov
push
arpl
outs
popa
adc
nop
sbb
sub
pop
shr
pop
xchg
sbb
outs
sub
dec
mov
mov
sar
repnz
in
in
cld
(bad)
stc
call
cmps
xor
jnp
adc
mov
test
cmc
loop
pop
mov
add
mov
pop
je
sub
xor
or
or
shl
and
xor
call
jno
jge
cld
sbb
xchg
or
aas
sti
imul
int
xchg
daa
enter
mov
sti
(bad)
fisubr
scas
and
xchg
repnz
je
icebp
xlat
add
in
sahf
call
pop
repnz
mov
mov
mov
xchg
pop
in
sub
gs
and
dec
and
push
push
inc
out
xchg
dec
xor
hlt
ja
jle
jns
dec
add
mov
fstp
push
adc
mov
fsubr
test
add
popa
xor
mov
out
stos
cs
mov
xchg
stos
mov
inc
pop
or
xor
sub
int
ins
mov
gs
test
or
pop
adc
inc
popf
push
sub
retf
repnz
repnz
pop
mov
jbe
and
push
push
(bad)
xlat
mov
ficom
ret
mov
cmp
jns
fdivr
out
sub
in
fsubr
add
adc
jl
jle
adc
add
(bad)
xor
lds
and
adc
pop
xchg
(bad)
jecxz
adc
mov
shr
arpl
rcr
add
cmp
mov
xchg
fidivr
sub
enter
mov
sub
repz
sar
xchg
mov
fdivr
neg
dec
retf
dec
cmps
jne
fcom
fcom
or
xchg
adc
fwait
sbb
cs
add
aaa
mov
bnd
mov
aad
pop
push
cld
push
adc
aaa
add
inc
push
es
loope
xor
js
inc
cmp
lds
fcomp
cdq
shl
inc
jl
dec
hlt
sub
fisub
loopne
xor
dec
sub
inc
(bad)
ds
add
test
push
movs
xchg
sub
mov
pop
cmc
stos
outs
shl
aas
je
cmp
int
or
shr
xchg
call
ror
mov
sbb
data16
outs
push
pop
inc
test
xor
mov
dec
and
xchg
daa
daa
repnz
push
(bad)
xor
push
xchg
and
jecxz
mov
les
out
push
push
mov
in
cmp
addr16
imul
dec
hlt
push
jle
xchg
mov
pop
lds
xor
dec
dec
shl
sar
(bad)
jmp
and
sbb
xlat
aad
ds
dec
shr
mov
sub
(bad)
out
jmp
clc
into
mov
lock
test
xchg
scas
cwde
mov
aam
xor
or
mov
dec
push
addr16
and
cmp
popf
std
ins
xchg
cmp
sbb
cmps
sar
mov
popf
sbb
movs
aam
and
scas
mov
mov
lds
push
enter
ret
or
pop
cmps
movs
dec
popa
test
sub
jbe
and
mov
mov
pop
cmp
(bad)
lock
xchg
sub
cmp
push
jmp
jmp
xchg
icebp
cld
push
jmp
lock
add
icebp
pop
les
pop
adc
fs
movs
pop
popa
mov
out
mov
ins
or
retf
pop
gs
je
or
out
dec
int3
leave
loopne
mov
cwde
dec
mov
into
jg
sbb
rcl
jo
pop
aad
or
dec
add
xchg
in
cs
jo
inc
inc
test
cdq
cmp
and
sbb
lds
mov
dec
add
stos
mov
mov
retfw
sub
sahf
xchg
adc
cmp
enter
fsubp
mov
push
cmp
push
xchg
add
push
(bad)
call
std
stos
popf
mov
push
push
push
scas
test
sub
leave
pop
sar
stos
mov
and
mov
fadd
in
dec
call
pop
das
or
ins
aad
cmps
cmps
mov
jne
les
lods
or
push
cmp
(bad)
mov
push
ret
mov
bound
or
loopne
ds
dec
nop
jb
(bad)
fmul
gs
pusha
dec
and
jle
jl
ins
mov
pop
sub
xlat
xchg
inc
sub
ins
dec
call
xor
add
fidivr
pop
mov
dec
retf
adc
inc
fimul
outs
cdq
test
stos
aas
imul
inc
int
inc
and
push
adc
sub
enter
scas
imul
jb
mov
xchg
jno
or
jmp
xor
sar
in
cmp
popf
inc
pop
xchg
inc
movs
ins
ins
sbb
(bad)
in
mov
dec
xor
imul
xor
outs
jo
popa
push
sbb
xchg
xchg
pop
bswap
mov
xchg
sar
inc
dec
cmp
call
add
push
xchg
std
ror
cmp
xchg
cmc
pushf
pop
(bad)
add
jg
retf
push
popa
sbb
xor
push
out
loope
inc
adc
js
ds
xor
jle
xor
pusha
movs
sub
pop
scas
jbe
and
xor
add
out
lds
loope
cmp
cmp
scas
and
push
outs
cmp
icebp
push
pop
sbb
xor
inc
jecxz
xor
mov
cmp
ret
xchg
nop
inc
mov
les
loop
push
outs
pop
pop
rol
test
dec
sub
fist
out
sbb
stc
sahf
fidivr
and
or
(bad)
aas
pop
sbb
(bad)
stc
(bad)
adc
pop
or
(bad)
aas
push
mov
into
shr
(bad)
mov
cmc
aad
dec
pop
fidiv
loop
inc
dec
push
cwde
mov
(bad)
pop
jns
sbb
cld
sub
dec
inc
movs
dec
xchg
lds
call
call
jle
xchg
inc
ficomp
and
xchg
cld
or
in
push
sti
stc
(bad)
mov
test
retf
mov
into
inc
addr16
jmp
pop
pop
cmp
add
test
jnp
popf
ja
xor
sbb
sbb
(bad)
(bad)
xchg
sahf
mov
scas
daa
sti
adc
inc
jno
cmp
ds
inc
cld
pop
aam
icebp
cmps
in
or
mov
push
jo
push
xor
adc
xor
dec
inc
cli
ss
xchg
cmp
xor
test
lea
pop
mov
and
xchg
inc
fidiv
add
pop
ds
(bad)
in
loope
fld
js
dec
pop
cld
retf
daa
sub
mov
xor
ins
or
stos
cmp
pop
xor
fcomp
ja
pusha
xchg
sub
das
in
hlt
ds
xchg
ins
or
mov
test
cmp
push
jbe
in
adc
mov
outs
js
mov
mov
add
shl
ret
cld
stos
ror
add
adc
adc
lods
and
jle
push
add
cmc
ret
lock
icebp
(bad)
rol
mov
or
outs
aas
out
dec
scas
in
movntq
test
shl
fs
adc
jge
jnp
scas
in
fsub
sbb
mov
dec
cmp
jp
pop
out
mov
pop
cmps
add
jne
das
sahf
push
bound
adc
lds
mov
mov
imul
retf
jmp
sti
outs
call
repz
xchg
scas
int
daa
adc
jmp
shr
cmp
dec
outs
or
mov
jns
cmp
and
dec
in
fldenv
dec
loope
inc
ja
cmp
jl
inc
cmps
(bad)
loop
xlat
cmp
xchg
das
push
out
adc
shl
pop
stos
xor
jne
pop
sbb
lods
push
ins
out
sub
idiv
clc
sub
out
lock
call
fcom
or
jnp
cli
enter
sbb
inc
lock
nop
arpl
xchg
jnp
lea
ja
popa
jb
das
addr16
sbb
aaa
xchg
fisttp
mov
inc
cdq
pusha
mov
imul
push
mov
cmp
cmp
loopne
popf
out
mov
ret
adc
stc
jb
jecxz
xor
add
xchg
idiv
push
sub
xor
cli
sbb
and
ror
test
les
out
shl
js
pop
sti
dec
pop
lods
mov
hlt
je
inc
sbb
xchg
cli
cmp
cmp
dec
scas
test
sub
push
mov
sbb
and
or
or
arpl
jae
sub
imul
adc
test
daa
xchg
ins
daa
(bad)
sub
stos
or
or
out
or
popa
cwd
mov
sar
cmc
shl
arpl
ins
push
movs
addr16
rcr
shr
hlt
dec
cmp
pop
push
pop
push
mov
cmp
mov
bnd
repnz
clc
jb
mov
imul
or
iret
sub
pop
stc
xchg
das
jg
jo
leave
inc
push
outs
mov
sub
sub
cs
ja
movs
cmps
dec
inc
stc
or
adc
je
arpl
neg
lods
movs
movs
pop
and
adc
jmp
xchg
jecxz
mov
fucomip
ins
or
sub
mov
sbb
jmp
inc
imul
jb
dec
xlat
dec
adc
adc
jmp
and
xor
int
popa
xchg
mov
dec
aas
stos
out
cmp
cld
add
push
cmp
mov
cmp
(bad)
js
xchg
popf
mov
pop
repnz
stc
inc
in
sub
lods
mov
aaa
mov
push
leave
jbe
das
outs
sub
fsubr
imul
dec
cmp
int3
fadd
xchg
lahf
or
sub
dec
mov
jbe
xor
call
shl
not
inc
imul
sub
and
dec
xchg
loopne
cmp
xor
mov
push
or
in
leave
dec
test
in
xchg
push
lahf
fdiv
cdq
popa
inc
mov
cmps
push
movs
pop
nop
xchg
div
pop
fmul
loopne
fdivr
mov
into
or
adc
nop
sub
cdq
shr
call
loop
jno
fucompp
jns
stos
add
sbb
push
bound
out
jle
pop
xchg
dec
iret
xlat
jmp
cld
fst
mov
cwde
in
push
pop
out
sahf
and
and
neg
mov
shr
inc
cdq
or
icebp
adc
aad
nop
test
pop
test
fsub
loop
cmp
ror
or
test
cmp
sbb
test
or
lods
jmp
imul
push
sub
fwait
ror
(bad)
into
push
outs
mov
dec
adc
xchg
test
mov
out
xchg
call
out
and
mov
arpl
mov
fisttp
xor
jmp
xchg
mov
pop
data16
mov
pusha
mov
sub
out
sub
add
sbb
mov
(bad)
lahf
or
fldenv
lods
nop
and
sbb
fsubr
repnz
inc
dec
adc
(bad)
icebp
pop
sub
cs
not
pop
fimul
mov
clc
pop
push
xor
lahf
jmp
or
test
fdivr
mov
rol
pop
mov
cld
(bad)
ret
ret
daa
mov
out
popf
ins
mov
inc
and
ror
jns
movs
inc
mov
imul
and
fst
cld
jmp
les
pop
push
sar
pop
inc
xchg
mov
or
jge
cmp
repz
jmp
call
jmp
ror
daa
icebp
hlt
pop
push
cmps
inc
(bad)
stos
push
push
cmc
and
push
push
arpl
xchg
fst
dec
inc
test
mov
fwait
or
js
mov
das
iret
into
push
and
add
aaa
fnstsw
sub
xchg
mov
(bad)
sub
arpl
jb
ret
xchg
outs
stos
cmp
ss
cmp
cli
fxch
and
mov
jle
out
out
mov
sti
jae
cmps
sbb
cmp
rcr
fmul
mov
adc
movs
mov
lahf
arpl
data16
jp
push
pop
rcl
push
xor
jecxz
jns
(bad)
fcmovbe
sbb
cld
into
mov
push
sbb
(bad)
cmps
rol
and
xor
sub
xchg
pushw
mov
and
rcr
sub
adc
jae
push
mov
sub
(bad)
mov
cdq
jo
mov
cmps
retf
mov
ret
jns
dec
call
mov
sbb
xor
push
xchg
push
xor
(bad)
retf
leave
movs
push
jg
cmp
mov
loop
ja
sbb
pushf
push
xor
jmp
jecxz
xor
ret
jns
jbe
or
mov
push
push
retf
push
popa
int
dec
sub
imul
cmps
cmp
rol
loope
jb
xchg
sub
imul
jbe
scas
cmp
push
in
inc
retf
mov
enter
pop
push
loop
dec
push
cmp
adc
in
adc
outs
cmp
pop
or
sub
jmp
ret
int3
test
ja
jmp
in
jmp
repnz
add
push
mov
mov
movs
mov
xchg
ins
jo
loop
(bad)
lods
mov
and
push
pop
add
ss
jo
jl
mov
add
(bad)
fidiv
push
daa
stos
sbb
shr
ficomp
pushf
(bad)
add
mov
jno
sar
cmp
cs
xor
mov
(bad)
push
std
popa
and
jle
dec
cmp
movs
in
ret
popf
xchg
data16
fsubr
aas
ds
mov
xchg
xchg
sbb
fldcw
mov
pop
(bad)
and
aam
mov
out
out
add
adc
cmp
jns
sbb
pop
mov
fs
dec
rcl
or
xchg
dec
fimul
mov
mov
pusha
call
fsubr
in
std
push
sti
call
lods
inc
add
dec
data16
adc
dec
mov
repnz
pop
not
scas
sahf
sbb
adc
sbb
lds
mov
xor
mul
dec
fst
rcl
push
and
imul
cwde
jb
jb
mov
call
adc
sbb
push
add
add
adc
aad
or
jae
dec
mov
cdq
xor
mov
enter
cmp
inc
jo
adc
jg
fidivr
jecxz
retf
gs
pop
xor
mov
dec
jl
xor
loopne
lds
aad
sub
dec
ficom
fimul
gs
push
add
dec
out
test
cmc
sbb
xor
stos
or
ret
iret
sub
pop
mov
and
test
addr16
cmp
xchg
cld
scas
adc
neg
cmp
(bad)
sbb
cmp
xchg
loopne
sub
cmps
push
fmul
repz
push
das
or
in
ja
(bad)
xchg
ja
cld
(bad)
loop
cmps
xchg
pop
sbb
adc
cmps
pop
test
cmp
aam
pop
lock
bound
jae
jae
add
xor
mov
cmps
inc
jnp
cmp
inc
dec
int3
cmpxchg
gs
jmp
jo
push
jle
pop
cmp
scas
jno
sbb
mov
inc
(bad)
stos
fs
mov
stos
aad
jb
out
(bad)
mov
mov
sub
cmps
add
call
mov
or
xchg
add
loopne
aad
mov
pop
fsubr
mov
mov
gs
hlt
push
pop
scas
cmc
les
das
xlat
lea
mov
inc
sbb
cmp
out
test
jp
and
cmp
sbb
add
(bad)
mov
aam
pop
mov
test
xchg
adc
jne
push
pop
or
push
add
in
ins
bt
cmc
push
add
ins
pop
push
loopne
xchg
call
xor
mov
or
pop
inc
shr
daa
pop
es
call
(bad)
adc
test
mov
std
pop
mov
xor
ficom
and
jle
ins
mov
and
inc
pop
test
sbb
mov
mov
mov
and
jl
mov
shl
adc
sub
(bad)
scas
test
cwde
push
sbb
add
jne
xor
jnp
cmpxchg
xchg
lods
pusha
mov
imul
mov
pop
jp
fcom
sub
icebp
bound
dec
push
adc
or
sub
movs
(bad)
lock
ret
addr16
add
xchg
(bad)
fwait
mov
mov
sahf
mov
je
pop
pop
sbb
jns
out
xlat
mov
jg
hlt
xchg
mov
mov
fsub
adc
cwde
das
sbb
xlat
ja
mov
push
jmp
mov
xlat
lahf
xchg
scas
mov
sbb
pop
pop
or
mov
jo
rol
add
movs
inc
mov
mov
add
(bad)
call
mov
push
adc
mov
dec
push
iret
jb
aad
cmp
dec
xor
int3
sub
and
jecxz
imul
xchg
pushf
sub
or
inc
pop
pop
push
ja
sbb
popa
xor
pop
add
jg
cmp
loopne
shr
dec
push
retf
xor
jbe
or
xchg
les
in
(bad)
ins
jno
mov
add
ja
sbb
push
ds
push
or
mov
xor
sub
fstp
scas
jg
xor
sbb
xchg
aam
cmp
int
popf
mov
int3
int
or
lds
imul
add
enter
ret
mov
and
push
adc
jnp
addr16
or
or
dec
std
cdq
push
pop
sub
sub
lea
test
call
call
aaa
vpsllq
out
ins
dec
jno
mov
push
sub
iret
loopne
xor
cmp
cmp
ja
push
add
mov
xor
aas
fild
call
push
sub
mov
bound
bound
rcr
faddp
repz
xor
das
push
mov
pop
sub
and
add
jae
ficomp
scas
sti
mov
aaa
cmp
mov
dec
inc
dec
imul
jmp
cwde
lahf
cdq
cmp
and
gs
mov
ds
mov
mov
(bad)
push
inc
add
std
jbe
dec
add
inc
jns
movs
sub
adc
jb
xlat
mov
jmp
jmp
mov
lods
xchg
mov
or
popf
jge
pushf
leave
mov
jmp
lea
(bad)
dec
mov
jb
cmc
out
fstp
les
mov
or
or
out
iret
lock
out
adc
scas
inc
sub
push
js
aaa
cld
mov
test
ret
(bad)
pop
mov
dec
imul
hlt
mov
sub
pushf
inc
and
add
(bad)
sub
outs
aas
xlat
and
pop
xchg
(bad)
dec
inc
and
test
sub
out
add
mov
inc
(bad)
outs
add
jo
mov
pop
out
arpl
adc
jle
or
int3
and
lea
scas
mov
mov
push
mov
mul
lea
mov
push
and
jle
out
ror
lods
jnp
call
cmp
mov
lods
cmp
sub
enter
push
out
xchg
rcr
shl
jbe
out
push
dec
cwde
xchg
leave
dec
ret
das
or
addr16
push
cmp
and
and
into
enter
mov
dec
cmp
xor
push
popa
pop
sub
xchg
popf
es
adc
(bad)
sub
cmps
js
cmp
inc
out
lods
sub
jecxz
inc
mov
adc
sub
push
fstp
or
sbb
mov
mov
and
ret
xchg
xor
or
mov
je
pop
jns
push
int
mov
or
mov
sbb
jp
push
cmc
adc
mov
repz
rol
cmc
pop
mov
mov
dec
inc
adc
sti
or
in
cmc
sbb
and
cmp
mov
cmps
ds
mov
or
pop
ja
mov
imul
cmps
mov
sub
data16
out
test
mov
test
sbb
ins
pop
mov
fnstcw
pushf
jle
mov
das
cmp
pop
mov
neg
cld
xor
cwde
or
je
cmp
sub
pop
movs
and
mov
mov
int
movs
div
push
popf
push
test
outs
mov
inc
mov
enter
test
idiv
jnp
push
xchg
sbb
mov
movs
mov
aas
cmp
adc
mov
aad
cmp
leave
jmp
dec
cmp
xchg
xchg
stos
cmp
aaa
jnp
xchg
xor
xor
mov
mov
add
xchg
fistp
mov
or
lock
shl
mov
add
jl
xchg
sar
cmp
iret
mov
pop
adc
cmp
jbe
in
clc
iret
sub
cmp
jbe
xor
pop
or
cmp
ror
dec
add
ficomp
pop
sub
inc
or
js
cld
iret
das
jp
cmp
mov
loop
pop
add
pop
cmp
hlt
dec
cmp
sbb
push
lea
and
sar
cmps
aaa
test
inc
add
mov
jnp
test
xor
inc
lods
xchg
nop
xchg
xchg
call
(bad)
mov
cmps
adc
xchg
xor
mov
xchg
and
in
mov
popa
call
mov
inc
sub
leave
fs
mov
lds
inc
dec
push
and
(bad)
cmc
sub
jnp
dec
jns
adc
inc
movs
div
arpl
mov
jp
or
imul
loop
push
sbb
js
(bad)
or
pop
push
adc
fidivr
out
push
add
mov
ret
std
push
shr
and
(bad)
in
adc
mov
iret
xlat
sub
mov
rol
cmp
das
sbb
aad
jmp
inc
and
hlt
or
mul
push
mov
pop
mov
inc
sbb
(bad)
and
mov
loop
lods
add
or
push
outs
mov
out
pop
loop
sbb
dec
inc
loopne
xchg
adc
(bad)
xchg
pop
push
out
outs
ins
and
jp
leave
loopne
mov
out
jo
(bad)
cld
(bad)
jmp
add
arpl
xchg
stos
pusha
push
pop
sub
(bad)
xor
scas
xor
push
inc
mov
fidiv
add
test
loopne
push
cld
test
ins
pop
dec
popa
push
inc
adc
shl
repz
fnstenv
fs
mov
sbb
add
mov
pop
pop
std
les
bswap
addr16
xor
data16
pushf
fist
arpl
push
xchg
adc
xchg
adc
inc
in
inc
or
mov
xor
call
xchg
(bad)
ret
add
inc
mov
in
jo
dec
(bad)
call
xor
xchg
in
mov
dec
outs
jp
jbe
push
lock
xor
test
ficom
aas
rcl
dec
jp
xor
and
clc
or
xor
pop
fisttp
js
in
dec
in
push
imul
pop
sbb
inc
pop
fimul
inc
inc
les
pop
xor
cs
scas
sub
inc
outs
leave
inc
hlt
xchg
mov
push
cmc
push
jl
pmulhw
mov
sub
js
mov
fstp
repnz
js
cmp
scas
jno
cmp
xchg
retf
sbb
cwde
or
or
dec
add
sti
or
cmp
mov
lock
jecxz
jns
jmp
add
pcmpgtw
iret
jp
ja
inc
mov
push
add
inc
dec
ja
fld
jnp
imul
adc
add
xchg
push
fidivr
dec
shl
mov
pop
sbb
aam
sub
das
and
jp
(bad)
rol
xor
rcr
daa
push
mov
mov
shl
push
and
and
add
mov
lea
nop
daa
jl
push
mov
shl
sti
mov
push
push
jnp
loop
outs
xchg
and
das
push
pop
jbe
cmp
add
hlt
push
inc
cdq
xchg
pushf
or
inc
dec
cmc
xchg
mov
xchg
loopne
fcmovne
or
xchg
push
sub
cld
repnz
or
or
mov
dec
sbb
ins
cmp
inc
movs
mov
inc
adc
push
push
mov
inc
test
repnz
xchg
mov
or
pop
sar
adc
xchg
movs
add
mov
cmp
js
fcomp
(bad)
sar
inc
pusha
imul
push
jo
push
push
aam
popf
inc
jmp
aaa
les
cmp
xchg
add
mov
popf
in
div
ja
outs
jg
outs
mov
stos
daa
cdq
(bad)
imul
clc
push
cwde
shl
and
ds
sbb
outs
mov
shr
iret
imul
repz
stos
adc
dec
cdq
call
scas
pop
leave
test
hlt
gs
(bad)
cmp
mov
jo
(bad)
ins
mov
or
sbb
sti
sahf
mov
mov
xchg
jmp
fadd
hlt
jl
or
or
cmp
mov
inc
aas
clc
imul
rcl
arpl
imul
push
ins
jns
cld
out
xchg
and
stc
xchg
stos
mov
sar
cwde
add
add
cmc
lods
retf
mov
dec
dec
sub
ror
xor
inc
mov
adc
adc
or
test
(bad)
push
push
int3
cli
str
xchg
add
mov
stc
sub
and
push
fdiv
xchg
add
sbb
adc
pop
pop
cmc
push
mov
adc
sbb
mov
or
pop
pop
(bad)
xlat
or
jmp
push
sbb
xchg
loope
push
jg
inc
aaa
xchg
nop
pop
pop
and
adc
stos
arpl
test
pop
repnz
fwait
es
rcr
mov
pop
cmc
icebp
repnz
test
inc
sbb
mov
lods
xchg
mov
xchg
mov
jecxz
(bad)
pushf
sbb
mov
ins
cmp
ds
adc
cwde
test
mov
push
mov
(bad)
mov
jmp
cmp
or
push
retfw
movs
and
pop
retf
(bad)
ins
push
(bad)
jl
sub
adc
sbb
xor
fld
fisttp
jecxz
in
je
test
shl
and
and
push
xor
jb
jae
fild
inc
sti
jge
inc
cli
(bad)
cld
sar
imul
mov
add
mul
fwait
pushf
daa
cdq
push
mov
mov
ja
std
in
fisubr
add
out
dec
add
fistp
lds
iret
aaa
out
arpl
movs
inc
push
scas
pop
pop
ins
test
sbb
pop
retf
scas
cmps
sub
out
bound
movs
pop
rol
push
xchg
rcl
enter
imul
daa
pop
ror
push
mov
sbb
dec
add
dec
sub
jl
mov
or
mov
push
xor
std
dec
inc
test
and
cmp
push
scas
cmc
cmps
lods
jl
ja
inc
jno
iret
stc
(bad)
push
jns
pop
sbb
fild
mov
(bad)
fstp
pop
out
mov
pop
rol
ret
add
out
hlt
mov
dec
aad
or
mov
sbb
jl
mov
add
push
sbb
lds
inc
fwait
pop
push
and
nop
stos
repnz
std
scas
add
pop
leave
sahf
ret
loope
(bad)
or
aas
ins
std
xor
sub
sbb
sahf
xchg
lahf
and
cmp
dec
lea
out
add
mov
call
addr16
inc
add
mov
sub
jae
lahf
push
or
push
lahf
pop
into
and
pop
int
push
pop
xor
adc
loop
iret
es
test
xchg
mov
xchg
push
xchg
out
call
adc
xor
cmp
and
enter
push
mov
sub
push
ror
and
sar
loopne
sub
outs
xchg
xlat
adc
lods
jo
fst
stos
mov
ds
add
or
jnp
mov
pop
fcmovb
iret
fstp
cs
adc
movs
jp
push
mov
adc
mov
xor
shl
xchg
sbb
push
push
add
aam
sahf
sti
xchg
mov
enter
xchg
(bad)
cmp
jno
fldcw
push
fnstcw
nop
shr
movs
and
push
cmp
jp
call
fsubr
and
rol
adc
jnp
lea
(bad)
mov
out
jecxz
mov
xchg
xor
in
out
xchg
inc
mov
and
aaa
gs
jno
sub
popf
mov
cmp
adc
xor
ja
std
shr
out
xor
inc
xchg
push
daa
and
push
sbb
xlat
adc
pop
cmp
xor
pushf
ja
mov
add
xchg
popa
or
bound
push
test
pop
push
dec
pop
mul
push
and
push
mov
cmc
scas
cmp
push
imul
fstp
jge
(bad)
xlat
in
mov
pop
les
push
retf
mov
out
push
mov
and
ss
inc
outs
mov
inc
inc
push
nop
addr16
jecxz
fcmovnb
xchg
cmc
lea
mov
neg
dec
pop
adc
aam
repnz
or
sbb
jmp
pop
rol
lods
int3
not
out
cmps
fldcw
clc
movs
gs
add
rcr
cmp
cmp
test
lock
adc
sbb
mov
sti
icebp
mov
cmp
in
pop
test
adc
ror
dec
nop
sub
mov
std
adc
shl
or
test
jo
loopne
xchg
mov
(bad)
jns
call
mov
mov
data16
mov
jmp
repz
test
scas
mov
and
ret
or
mov
out
and
ficomp
xchg
jne
mov
xor
or
push
jge
add
sbb
leave
mov
sbb
loope
push
lahf
pop
add
xchg
push
int3
dec
push
and
jbe
xchg
in
or
mov
and
jmp
pushf
shl
sbb
(bad)
xchg
addr16
in
mov
adc
loopne
mov
xor
xor
out
pop
jb
pop
pop
lahf
mov
cmc
push
xchg
and
pop
lds
pop
je
ja
push
push
int3
lods
adc
adc
clc
pop
adc
mov
push
std
cli
enter
cmp
daa
cmc
ret
xchg
loope
aaa
sbb
jge
gs
neg
movs
sub
push
das
mov
xchg
jl
fisttp
add
inc
call
popf
sub
into
in
fs
sub
xchg
mov
jae
sub
test
xchg
inc
dec
xchg
repz
cld
mov
rcl
sbb
lea
aam
in
out
add
scas
add
jnp
jge
aaa
sar
dec
adc
icebp
addr16
xchg
or
dec
cld
cmp
aad
mov
or
movs
add
bound
cmp
pop
xor
sub
or
ds
fcomp
std
pushf
addr16
div
inc
(bad)
sbb
and
(bad)
sub
pop
pop
pop
imul
clc
and
out
mov
jne
fs
into
icebp
add
mov
push
jge
sbb
cmps
adc
inc
mov
das
iret
addr16
(bad)
cwde
inc
mov
les
mov
jle
jmp
enter
jl
pusha
jp
cmc
mov
push
or
xlat
mov
div
pop
ror
push
jl
mov
xchg
mov
jbe
and
mov
test
dec
mov
or
xor
push
push
mov
into
fisttp
push
push
enter
jmp
mov
rsm
xor
mov
or
ins
mov
push
aad
dec
lea
xor
pop
lods
xor
push
or
cdq
cmp
sub
mov
jns
cs
jae
push
xchg
ja
dec
aad
add
and
daa
ja
inc
xchg
das
mov
or
stos
xchg
scas
pop
adc
jge
les
mov
pushf
or
push
out
xor
xor
mov
mov
cli
leave
jecxz
shr
fstp
push
xor
push
dec
cmps
pop
loope
sahf
das
jo
mov
movs
xor
pop
dec
pop
stos
jnp
nop
daa
sbb
test
lods
aad
cmp
loope
dec
inc
aas
stos
cmp
inc
rcl
add
pop
pop
jp
push
dec
add
arpl
lea
mov
pop
in
xchg
sbb
mov
jg
in
sub
and
stc
xchg
jp
xlat
push
push
and
fsub
scas
leave
ror
ins
call
imul
mov
movs
leave
cwde
jl
popf
fwait
lods
ret
or
xchg
(bad)
ins
mov
fld
and
add
inc
fdivr
mov
jae
es
test
dec
stos
in
popf
xchg
pop
xor
test
cdq
fsubr
in
mov
cs
and
aam
jb
popa
or
cwde
adc
in
or
mov
inc
or
test
xor
pushf
test
jae
push
arpl
shl
adc
movs
pusha
out
adc
test
mov
cmps
not
loopne
sub
inc
jno
pop
div
jge
(bad)
mov
out
mov
outs
ffree
loopne
push
movs
stos
fcom
push
pop
push
pop
movs
loopne
into
loop
shl
fcomp
cmp
pop
les
pop
shr
push
les
cdq
xchg
cmps
pop
push
push
repnz
adc
ret
js
daa
and
mov
or
inc
call
pushf
jnp
mov
pop
cmp
sbb
leave
xlat
rol
call
xor
pop
movs
cmp
loope
rol
fsub
mov
in
pop
das
bnd
xchg
mov
jo
loopne
fdivr
aam
dec
inc
ret
movs
jb
and
push
jo
das
loopne
pop
gs
and
xor
or
out
sti
inc
push
cld
mov
into
adc
or
or
loopne
push
xor
outs
les
adc
cld
sub
and
or
jb
jb
jns
inc
(bad)
or
pusha
jmp
cdq
nop
mov
pop
fwait
sbb
ret
sub
lahf
xor
mul
sub
sub
data16
ins
sub
sbb
push
jecxz
dec
gs
scas
(bad)
es
ret
or
cmp
add
sti
(bad)
dec
or
retf
sub
fwait
adc
lock
and
inc
cs
(bad)
push
les
and
iret
jg
retf
icebp
stos
mov
adc
js
or
outs
hlt
jle
sbb
data16
rcl
jae
les
mov
add
pop
mov
bound
cpuid
push
iret
pop
jo
stos
push
pop
jmp
cmp
cmp
mov
sahf
mov
push
add
dec
inc
mov
icebp
cwde
pop
fnstsw
mov
loope
shl
fnsave
ins
repz
mov
jbe
jne
fst
stos
jp
dec
xchg
imul
nop
mov
jbe
xor
lods
nop
mov
leave
adc
mov
stos
lahf
sbb
pop
dec
push
test
aaa
inc
adc
cmp
mov
dec
xor
sub
add
push
data16
in
xchg
xchg
ss
daa
lahf
icebp
mov
add
cs
rcr
mov
cmps
push
jecxz
js
fisttp
pop
xor
jmp
jb
xchg
bound
out
sbb
popf
jnp
cmp
leave
cs
es
hlt
nop
aam
out
lock
xchg
lods
xchg
(bad)
nop
xor
pusha
jle
ret
popw
clc
(bad)
push
mov
fst
outs
xor
or
sub
inc
add
mov
xchg
(bad)
iret
daa
(bad)
push
fst
jg
call
in
push
push
sub
imul
cmp
ja
inc
aad
dec
mov
jge
adc
push
loop
cwde
sti
std
cmps
outs
or
adc
int
shl
xchg
mov
sti
inc
add
rol
push
push
repnz
xlat
pop
cs
xchg
neg
loop
addr16
jecxz
xor
add
icebp
inc
and
or
sbb
(bad)
pop
push
retf
cmp
les
(bad)
bound
cmp
fidiv
mov
fldenv
sti
(bad)
out
add
sbb
or
xorps
sub
inc
ss
fdivr
fiadd
xchg
imul
bound
dec
arpl
in
mov
or
out
aas
std
dec
int3
xor
std
adc
in
imul
jmp
jnp
repnz
push
cdq
or
mov
adc
and
cli
out
aaa
enter
jo
stos
iret
test
xchg
sub
mov
retf
jo
dec
inc
in
movs
std
inc
lea
paddd
cmc
ins
pop
xchg
gs
jo
(bad)
dec
in
xchg
in
loop
xchg
frstor
dec
push
sbb
mov
xchg
scas
jecxz
adc
scas
mov
xchg
test
mov
dec
cli
xchg
ret
je
test
cmp
les
mov
js
jg
(bad)
adc
mov
mov
mov
cdq
dec
lock
mov
ja
ins
test
mov
jmp
gs
setg
jmp
movs
(bad)
sub
pusha
stos
cwde
cld
mov
es
cs
dec
xchg
call
pusha
cmps
pop
sbb
dec
out
mov
mov
sbb
out
mov
stc
and
adc
dec
dec
mov
pop
or
(bad)
fistp
test
repnz
sti
mov
jmp
mov
ins
push
loope
out
sub
xchg
push
out
fdivp
and
cdq
push
mov
sub
jmp
aad
sbb
cmp
in
xchg
je
mov
xchg
popf
dec
int3
lds
in
inc
fidivr
ja
jg
clc
(bad)
ret
jb
test
xchg
pop
and
(bad)
(bad)
lea
pop
mov
sbb
jbe
xor
jp
cmp
and
into
jns
fbld
aad
pop
and
fnstsw
xor
mov
sub
jo
aaa
mov
lods
iret
mov
mov
aam
cmc
sbb
iret
les
lods
ss
jecxz
push
xchg
push
dec
sub
push
(bad)
cmc
int
jmp
pop
jo
lods
inc
pusha
sbb
xchg
in
ficomp
dec
inc
addr16
mov
test
push
jae
inc
scas
ds
jbe
call
clc
sbb
xor
adc
ins
jb
out
test
fsubp
lods
sbb
sbb
and
clc
fsubr
add
fs
mov
push
push
(bad)
sar
xor
shl
add
not
dec
jge
and
mov
push
push
xor
lds
(bad)
cmp
adc
jmp
loop
ret
jp
pushf
data16
jae
xchg
cmp
dec
mov
pop
push
outs
inc
push
jg
cmps
adc
pushf
mov
(bad)
mov
sbb
test
adc
jecxz
sub
cmps
xchg
retf
inc
xchg
dec
int
dec
adc
cdq
pop
int3
fstp
in
pop
xchg
mov
sbb
jbe
sbb
jbe
push
out
mov
fld
jp
jnp
mov
gs
out
inc
in
mov
(bad)
xchg
or
xor
add
adc
nop
out
enter
retf
mov
push
fidiv
cmc
stc
dec
lock
dec
mov
dec
inc
sahf
test
or
push
jae
(bad)
sar
daa
mov
ret
ja
out
and
dec
pop
fdivr
mov
cmp
out
ds
loopne
les
cmp
mov
test
cmp
sbb
dec
data16
aam
jne
nop
imul
mov
or
and
pushf
sub
cmp
push
mov
ja
call
inc
push
or
xchg
inc
lods
leave
fld
inc
jl
jmp
or
dec
fs
(bad)
xchg
enter
cld
aaa
xchg
retf
mov
stos
fist
add
pop
ss
add
cpuid
or
loope
jmp
into
mov
inc
push
mov
xchg
popa
inc
in
ins
cmc
arpl
ins
pop
test
int3
popf
fdiv
aaa
cs
fist
adc
push
xchg
jmp
push
cs
mov
jbe
call
scas
pop
stc
push
dec
hlt
(bad)
aas
jecxz
shr
shr
lods
in
and
hlt
repnz
cmps
jno
inc
jb
or
xor
mov
into
jne
fs
inc
jns
fwait
mov
dec
jmp
jns
mov
popa
and
and
imul
dec
loopne
dec
call
xor
ja
call
enter
daa
add
repz
cs
jae
push
push
pop
es
push
sbb
in
(bad)
sar
(bad)
aam
out
cmc
out
cmps
mov
xchg
fsubr
push
icebp
push
pop
std
fld
bound
(bad)
sbb
daa
mov
mov
neg
mov
dec
sub
mov
retf
or
test
jmp
push
pop
cmc
sbb
jbe
or
jo
out
aas
clc
call
xchg
cmp
or
test
call
push
lea
jno
xchg
icebp
dec
aam
pop
inc
jle
mov
mov
loop
jmp
inc
mov
ss
cli
test
shr
jmp
jnp
mov
addr16
xor
sbb
jge
and
rol
sahf
jmp
dec
ja
and
cmp
mov
xchg
sub
xchg
push
xchg
mov
push
pop
xchg
repz
div
pop
cmp
fst
fld
pop
dec
bound
cmps
cmc
mov
mov
in
scas
cmps
jmp
lods
popa
scas
lea
repnz
xchg
mov
and
lock
mov
sub
lods
sub
fnsave
(bad)
pop
std
and
lock
int
mov
sbb
cld
cmpxchg
dec
sbb
jmp
sbb
xchg
dec
mov
jno
into
pusha
fistp
sbb
jns
cli
hlt
bound
(bad)
fsubr
in
inc
fdiv
clc
xchg
sbb
mov
mov
or
push
add
dec
lahf
xchg
sub
fst
(bad)
loope
xor
ficomp
xor
xor
fwait
pop
ins
jle
push
jnp
lahf
jmp
inc
sbb
jno
pop
lea
jno
push
test
push
adc
retf
scas
fimul
inc
dec
mov
and
sti
adc
test
test
jl
mov
inc
nop
jecxz
or
inc
push
outs
cmc
adc
xor
jmp
or
xchg
bound
div
mov
xchg
hlt
or
sbb
adc
adc
mov
and
in
ds
fcom
push
out
mov
mov
push
stos
fucomip
stc
adc
gs
adc
aas
sub
lock
pop
enter
inc
cmp
dec
mov
add
cmp
jmp
shr
mov
dec
ja
mov
mov
stc
add
sub
imul
(bad)
mov
test
jge
adc
les
(bad)
sbb
mov
xchg
jb
pushf
aad
pop
test
out
stos
in
add
mov
jge
xor
into
and
inc
ror
and
jnp
ja
add
mov
sub
aas
mov
xchg
xor
aaa
xchg
adc
jecxz
add
cmps
fnstsw
mov
loopne
push
lods
or
mov
leave
cdq
cmova
mov
jnp
loope
lods
mov
mov
jmp
std
jp
mov
stos
dec
adc
cmps
test
stos
or
gs
aam
lock
fcmovbe
daa
popf
in
unpcklps
sub
xchg
popf
lea
jmp
adc
cmps
cdq
ja
push
cli
test
cld
popf
lods
or
or
cmp
jns
sahf
repnz
mov
xor
sbb
xchg
xlat
scas
lds
inc
mov
inc
stos
int3
js
not
jbe
test
test
test
iret
mov
pop
clc
cmp
shl
or
out
inc
ds
(bad)
and
inc
or
leave
icebp
daa
mov
enter
pop
int3
xlat
xchg
cmp
ds
aam
(bad)
sbb
sbb
mov
push
dec
sub
cmps
in
lods
xlat
stos
mov
stos
pop
(bad)
dec
ret
jl
xchg
push
stos
jl
adc
xchg
sub
arpl
int
call
adc
in
call
push
inc
daa
jno
movs
pop
mov
or
movs
mov
mov
jl
je
hlt
sbb
push
xchg
lock
fidivr
lea
cmp
dec
and
push
les
test
add
jl
int
mov
push
bound
pop
call
or
inc
fimul
sbb
cmps
cmp
push
xlat
shld
push
out
pop
push
retf
(bad)
xor
mov
jno
test
cdq
clc
test
or
inc
into
test
sar
push
and
les
rcl
xchg
xchg
mov
iret
rcl
in
pop
imul
add
jns
or
inc
leave
mov
je
in
call
outs
push
push
mov
xor
fnstcw
sbb
and
cli
push
lock
(bad)
in
dec
retf
jp
daa
inc
test
mov
call
lds
(bad)
mov
and
rol
movs
push
loop
dec
(bad)
pop
sbb
push
ret
cmp
pop
inc
out
push
mov
xchg
arpl
fucomip
adc
mov
cmp
dec
dec
mov
rol
xchg
mov
jbe
fistp
mov
ret
push
cwde
push
xchg
push
mov
(bad)
xchg
shr
and
les
pop
dec
sbb
xor
lea
fld
out
aas
es
push
fnstcw
shl
mov
push
outs
fs
cld
out
dec
sbb
jg
ret
fild
fst
mov
test
js
xchg
xor
aas
xchg
sbb
xor
or
jmp
stc
inc
inc
test
call
jmp
pushf
sar
sbb
xchg
add
ficomp
test
mov
adc
xor
cmp
pop
pop
mov
enter
jmp
movs
xchg
ins
fidivr
adc
(bad)
stc
ins
cmp
or
fistp
out
xor
sbb
popf
ss
sub
pop
fs
mov
cmp
popa
and
ja
fistp
in
gs
pop
mov
mov
mov
retf
dec
cmp
int
adc
enter
ja
add
ds
cmp
xchg
pop
dec
mov
test
adc
iret
jmp
or
out
je
add
inc
or
push
fcomi
fimul
nop
cmp
push
jb
sbb
test
jp
aam
loopne
repz
inc
mov
mov
stc
cmps
inc
in
ins
popf
inc
iret
sub
or
jns
loop
outs
push
pop
or
sti
aad
ror
fdivr
inc
jo
hlt
pop
push
neg
xchg
mov
test
mov
add
(bad)
push
dec
jbe
daa
stos
(bad)
rcr
push
mov
sbb
push
sub
inc
aaa
ins
dec
dec
mov
int
dec
stc
cli
fcomp
sub
add
adc
dec
repz
cmp
dec
jg
jnp
or
stc
ret
inc
(bad)
loopne
out
cmps
sub
(bad)
jg
(bad)
stc
imul
add
lods
jecxz
push
lea
jg
bound
adc
push
dec
push
ja
movs
xor
push
add
adc
lods
arpl
mov
cdq
push
adc
add
stc
xchg
jmp
test
cld
mov
jmp
outs
cmp
sub
retf
bound
jns
mov
lds
leave
cli
jbe
icebp
push
test
and
jle
adc
dec
in
xchg
push
lock
push
xchg
dec
call
mov
pop
ja
mov
test
je
daa
sub
xlat
sub
push
mov
cwde
mov
shl
jecxz
or
js
push
and
pusha
mov
cld
repnz
not
jno
xchg
enter
jnp
inc
adc
repz
jmp
in
jmp
pop
movs
pop
mov
and
call
push
int3
(bad)
sub
loope
adc
cld
out
ja
lahf
mov
ret
and
lds
xor
addr16
sbb
pop
xor
mov
retf
sub
add
adc
retf
xchg
pop
aas
daa
outs
ins
sbb
jne
and
xor
dec
add
pop
test
mov
cmp
cmp
cdq
jge
and
shr
sbb
xchg
sub
call
in
sub
cmp
dec
pop
dec
mov
xchg
cmc
push
and
aam
add
mov
sbb
fmul
imul
xchg
mov
adc
loope
fwait
in
mov
call
dec
or
lahf
mov
and
and
xchg
mov
sar
sub
pop
dec
repnz
sub
jne
jle
in
mov
dec
test
mov
sub
or
mov
repz
scas
(bad)
fsubp
test
dec
pop
popa
out
or
adc
jp
lea
mov
in
push
ret
clc
dec
fadd
mov
add
sub
pop
push
dec
mov
sbb
sbb
(bad)
fcomip
inc
jge
dec
stos
test
pushf
cmp
dec
mov
xor
cs
jle
cmps
shl
mov
xchg
add
pop
mov
(bad)
jmp
fwait
and
sbb
cli
cwde
push
inc
push
mov
pop
lds
pop
jmp
sbb
add
out
leave
mov
push
cmp
push
imul
into
cmp
xor
jecxz
rcr
in
sbb
cld
mov
fs
ds
mov
xor
retf
fistp
cli
movs
scas
adc
mov
push
in
sbb
push
leave
fmul
dec
in
mov
addr16
or
shl
in
pop
leave
inc
retf
out
sbb
and
lahf
nop
or
mov
push
or
pushf
(bad)
not
in
lock
pushf
and
lock
pop
sbb
mov
dec
(bad)
jge
ds
aam
mov
fsubr
aaa
mov
inc
fist
aad
xor
xchg
jo
jb
jbe
xchg
ficomp
cmp
out
sub
cmp
popa
fld
mov
mov
jmp
xor
cmp
lock
outs
retf
sub
gs
push
or
sbb
into
mov
inc
push
mov
sbb
mov
repz
dec
mov
cwde
xor
sub
xchg
or
pop
mov
add
cs
pop
call
fldcw
mov
retf
jp
xchg
in
mov
loope
dec
in
push
pop
jl
pop
jmp
push
xor
repnz
cmp
das
fild
pushf
ret
fmulp
jp
dec
loope
ret
ins
rol
push
pop
add
adc
stos
push
mov
cmp
in
fs
add
popa
sbb
jge
lds
das
popf
add
bound
stc
(bad)
dec
je
cli
jae
cmp
popf
(bad)
movs
adc
jne
les
cld
or
in
jae
add
cmp
xor
mov
gs
js
hlt
cmc
xor
push
popa
aam
lock
pop
xor
dec
fs
nop
in
into
int
bound
stos
loope
stos
ins
out
adc
(bad)
ss
fisttp
test
add
retf
iret
lea
and
push
fwait
std
mov
into
cmps
addr16
in
pop
mov
dec
xchg
(bad)
dec
movs
cmp
leave
nop
mov
or
int
cs
mov
fs
adc
(bad)
mov
xor
add
sub
ret
and
repz
stos
cdq
lock
imul
sub
mov
out
dec
imul
cdq
cwde
pop
cwde
adc
cmp
mov
iret
gs
cmps
mov
mov
pop
jno
dec
sub
(bad)
sar
inc
cmp
je
pop
fisub
out
jmp
imul
jmp
lahf
mov
cld
cmps
xchg
mov
pop
dec
dec
outs
addr16
mov
nop
movs
aad
gs
push
inc
xchg
lods
inc
sub
jmp
and
push
inc
mov
inc
xchg
add
(bad)
mov
or
dec
xchg
xchg
dec
cmps
jl
xlat
mov
mov
ins
xor
int3
movs
jo
pop
loope
dec
movs
div
mov
jmp
cdq
pop
and
fcom
and
xor
and
adc
popf
int
xor
add
sbb
xchg
pop
ret
inc
sub
xor
jp
jns
mov
pop
aaa
bound
icebp
repz
es
fimul
hlt
xor
jnp
mov
jl
cmp
sub
pop
pop
test
addr16
loopne
mov
push
pop
test
push
retf
add
sar
dec
and
daa
fst
fidivr
test
pop
xchg
xor
add
daa
cwde
mov
jne
mov
mov
retf
test
inc
js
dec
jns
pop
xor
rcl
xor
adc
and
jmp
rcl
hlt
xor
pop
and
lahf
push
lahf
cdq
pushf
push
out
cmc
mov
jo
jp
test
cdq
mov
test
push
xlat
dec
sub
inc
pusha
xchg
push
inc
sub
dec
or
inc
gs
cmp
test
pop
push
ja
int3
jne
gs
stos
fdiv
inc
pop
mov
out
pusha
lock
adc
loope
in
cmc
adc
ja
imul
js
nop
mov
push
loop
les
sbb
popa
sti
psubsb
gs
lds
add
add
call
(bad)
in
push
cld
pushf
pop
fnstcw
sahf
popf
xchg
fs
add
cmp
rcl
jne
test
mov
jo
and
mov
push
in
je
neg
jnp
mov
btc
push
inc
pushf
dec
aaa
mov
fiadd
jbe
cmp
repz
js
add
out
(bad)
out
cmp
sub
int
in
test
pop
dec
and
push
mov
add
xchg
xchg
das
les
and
add
mov
push
ror
jmp
idiv
pop
add
add
aam
mov
inc
fstp
dec
lods
daa
dec
test
arpl
xchg
push
mov
(bad)
retf
jns
and
xchg
in
inc
(bad)
cmps
das
stos
jge
mov
and
cwde
xor
in
lods
push
add
addr16
adc
aas
add
imul
mov
icebp
mov
push
push
pop
or
nop
jecxz
jmp
sub
fisubr
inc
adc
test
sbb
inc
and
adc
inc
and
daa
cmp
cmp
sub
cmc
jne
in
idiv
cmps
aas
js
inc
add
push
retf
out
js
xchg
or
push
mov
cli
ss
add
lahf
mov
push
loopne
movs
imul
pop
mov
loope
or
in
inc
cmp
shl
fisttp
xor
jle
cmps
or
adc
pushf
cmps
retf
cmp
inc
retf
push
sub
mov
or
cli
pop
push
daa
add
inc
add
cwde
inc
sbb
ret
inc
cmp
sub
mov
bound
jecxz
aam
loopne
push
in
inc
neg
jo
aas
adc
fimul
cmp
mov
loope
dec
loop
dec
imul
data16
sti
ja
inc
scas
test
pop
cs
adc
stos
ja
sahf
enter
dec
dec
cmps
sub
repnz
jmp
fwait
cmp
push
pop
mov
or
jge
inc
test
dec
rep
mov
fcomi
pop
jp
pop
push
call
dec
push
pop
and
adc
mov
fdiv
xchg
pusha
inc
jne
rol
mov
(bad)
scas
cmp
mov
loope
fild
xchg
enter
leave
adc
mov
push
jg
sub
ds
int3
inc
hlt
mov
fisubr
inc
mov
pop
pop
cmp
push
and
test
sub
js
pop
sub
mov
inc
jbe
fadd
jge
in
jmp
pop
xor
retf
ins
mov
or
gs
out
outs
and
nop
rcr
xlat
(bad)
xor
sbb
(bad)
retf
pop
loopne
mov
aaa
test
aad
ret
pop
adc
mov
aam
jecxz
fcom
call
dec
arpl
adc
icebp
ret
out
dec
and
outs
mov
push
and
xor
jne
mov
dec
retf
stc
loopne
arpl
xlat
add
mov
jle
jp
xchg
add
(bad)
rol
xor
xchg
das
push
les
xchg
inc
push
out
add
stos
in
lods
sub
arpl
mov
int3
push
lods
cmp
fidiv
cwde
clc
sub
inc
xor
mov
dec
mov
jo
popf
and
jmp
xchg
pop
mov
neg
out
out
inc
call
test
cmp
xor
pop
inc
mov
jbe
ficomp
rol
and
xor
pop
adc
rcl
dec
cmps
push
xchg
dec
and
mov
cdq
push
adc
cmc
cli
cmc
sub
cli
ja
cld
adc
and
sub
xchg
jb
sahf
int3
push
mov
dec
ror
adc
cmp
xchg
xor
xchg
xchg
jbe
dec
scas
call
adc
stc
mov
(bad)
add
iret
dec
retf
mov
push
xchg
mov
xor
cmp
imul
icebp
adc
inc
push
into
data16
push
cmp
xor
dec
dec
push
xchg
add
xchg
call
popa
test
mov
test
inc
sub
xor
jnp
inc
(bad)
clc
xor
xchg
cmp
daa
outs
scas
xchg
jl
mov
sbb
sbb
cs
ins
ret
mov
loopne
and
adc
gs
int3
std
lods
push
push
nop
push
cld
pushf
je
pop
(bad)
jns
xchg
sbb
or
ds
mov
shr
std
pushf
jnp
fsub
mov
je
jp
adc
movs
and
ins
cmp
pop
icebp
jo
dec
(bad)
std
fisubr
ds
cmp
retf
arpl
cmps
add
pop
mov
test
add
iret
gs
shr
in
mov
xchg
mov
cdq
sbb
cmp
jmp
dec
mov
adc
push
mov
movs
les
push
test
pusha
adc
lds
call
daa
scas
inc
call
mov
ins
push
fistp
dec
int3
adc
fwait
test
jecxz
scas
push
mov
add
sub
jne
inc
es
not
mov
mov
sbb
arpl
or
ret
cmp
shl
addr16
cli
dec
jg
bound
push
movs
mov
push
les
fiadd
dec
repz
scas
outs
fldenv
pop
mov
jg
jno
fs
fist
scas
push
mov
out
mov
inc
inc
dec
(bad)
jb
stos
add
ret
shr
mov
push
mov
clc
or
mov
sbb
int
or
mov
mov
push
pop
test
jmp
fldenv
ja
sub
cs
or
mov
xor
mov
fnop
ja
rcr
sbb
inc
pop
adc
inc
jle
iret
or
loope
xchg
push
outs
arpl
push
popa
push
movs
aad
mov
aad
xchg
push
test
sbb
mov
sbb
pushf
inc
out
or
loope
fs
in
mov
mov
shl
lds
fcmovu
dec
pop
int
push
aad
and
mov
js
ficomp
adc
ins
xchg
jg
xor
cmps
clc
add
ins
repz
sub
sbb
xchg
shr
out
push
adc
mov
in
add
mov
test
inc
add
push
push
jnp
jmp
popf
xor
dec
sbb
cmps
hlt
ds
shr
mov
cmp
mov
leave
das
push
xor
aaa
pop
sbb
leave
and
int3
movs
pop
cmp
bound
inc
mov
aaa
clc
mov
mov
cmp
pop
es
cld
icebp
sti
and
int
std
xor
in
js
jne
xor
jle
jecxz
xchg
and
(bad)
test
mov
mov
cmc
xchg
sahf
loop
or
xchg
stos
aaa
inc
inc
cmp
sbb
call
cmps
sub
rol
mov
fs
stos
pop
mov
gs
cwde
or
mov
add
call
xchg
test
push
xor
stos
nop
dec
int
add
sub
jns
sbb
cmps
fwait
call
cmc
dec
or
inc
mov
sbb
mov
aas
shl
mov
mov
fld
test
out
xchg
inc
xchg
mov
out
mov
push
mov
jae
pop
inc
sub
or
pop
das
movs
cs
push
jns
cdq
xor
clc
ret
mov
jbe
add
xchg
call
cmp
js
cmp
jl
dec
mov
push
sbb
shl
mov
test
push
jae
cli
push
push
shl
dec
sub
add
pop
les
push
jns
movs
dec
loopne
and
(bad)
dec
and
mov
out
movs
fmul
ret
outs
out
cmp
dec
sub
jb
add
mov
or
sbb
(bad)
and
sub
aam
adc
inc
dec
add
daa
rcl
aaa
stos
or
lock
xchg
fstp
and
mov
xchg
pop
(bad)
call
pusha
ss
movs
fwait
or
pushf
ficomp
outs
call
test
pop
jp
(bad)
cmp
adc
adc
sahf
mov
mov
pop
mov
sub
retf
arpl
xchg
hlt
mov
mov
sbb
pop
dec
repnz
(bad)
out
xor
enter
cmc
fstp
mov
pop
outs
addr16
mov
call
(bad)
push
push
aas
ds
popf
push
sub
ret
or
inc
ds
in
jne
call
adc
ret
pop
scas
or
idiv
call
cli
fistp
mov
inc
nop
aam
mov
(bad)
lock
lds
mov
outs
fld
xchg
and
cmp
mov
repnz
fisttp
xor
add
outs
fbld
in
sbb
add
inc
xchg
repnz
aam
jmp
lods
cmp
mov
sti
loopne
push
fstp
jmp
xlat
outs
movs
daa
hlt
and
pop
dec
cmc
and
test
(bad)
cmovp
cmc
jb
push
popf
outs
fmul
mov
movs
inc
and
pusha
or
daa
sub
(bad)
or
push
mov
test
xchg
mov
dec
add
sub
int
xor
push
or
xchg
imul
cwde
and
mov
sbb
inc
cmps
push
pop
or
dec
and
cs
inc
retf
in
mov
add
add
xor
xchg
rcr
xchg
cmp
mov
popa
mov
pop
ret
pop
sub
sbb
js
sar
movs
clc
push
pop
mov
mov
or
sub
je
leave
(bad)
das
and
add
dec
and
push
ds
sar
add
cdq
das
out
repz
(bad)
adc
push
popa
xor
sub
ret
movs
mov
and
lock
es
nop
pop
inc
imul
in
sbb
sbb
jecxz
dec
test
inc
cmps
push
sub
xor
cdq
leave
dec
mov
pop
addr16
cli
inc
lods
(bad)
(bad)
push
jae
dec
data16
push
ja
cmp
icebp
inc
popa
jmp
in
or
mov
sub
icebp
clc
inc
icebp
in
push
fimul
xor
xor
outs
dec
add
fidiv
inc
sub
rcl
mov
ins
push
cld
dec
aam
jl
(bad)
cmp
xor
cmp
sub
dec
mov
les
out
imul
mov
pop
dec
push
and
je
mov
mov
inc
out
inc
aam
cs
int
push
(bad)
mov
adc
xor
pop
outs
jge
movs
xchg
add
call
pushf
xchg
cmp
fst
fadd
loope
sbb
adc
xchg
push
imul
sbb
mov
das
xchg
mov
dec
cmps
xchg
and
jl
jp
loopne
(bad)
jl
(bad)
push
pusha
cmp
dec
cmp
lahf
adc
test
jge
mov
popf
rcl
ret
aaa
mov
fstp
jae
jmp
fcom
pop
xor
ss
inc
int3
push
jae
push
mov
mov
jecxz
fld1
(bad)
mov
test
mov
ds
xchg
lea
(bad)
mov
inc
pop
sub
mov
sbb
mov
repnz
xchg
sub
out
xor
aas
aas
aam
pop
mov
movs
test
fcomp
test
fwait
in
xor
outs
dec
xor
xchg
mov
mov
ja
and
into
lods
jb
inc
xchg
retf
sbb
pusha
cmp
sub
mov
mov
cmp
xchg
ret
call
retf
mov
adc
add
out
push
std
js
fnstcw
jb
sub
sbb
xchg
add
mov
dec
in
jg
and
scas
mov
mov
jl
(bad)
cmp
sub
jl
jge
cmp
adc
push
shl
out
adc
enter
mov
sub
add
retf
mov
xor
loop
pop
fist
dec
mov
lds
dec
dec
mov
sbb
shl
aas
sub
and
push
loop
cwde
lahf
cld
outs
push
and
xchg
and
aad
outs
lods
mov
mov
mov
sub
lock
cmp
xchg
or
imul
push
cdq
into
in
shr
and
mov
inc
sub
xor
retf
sbb
cmp
pop
call
cmp
inc
sti
les
jns
cmp
rcl
cli
xor
adc
adc
inc
xor
jle
mov
pusha
sti
or
mov
int
call
aam
xor
pop
inc
push
inc
into
or
xor
outs
lds
ins
mov
(bad)
dec
outs
add
ret
mov
fdivr
jmp
jo
sbb
adc
cmp
mov
and
aaa
aaa
push
push
sbb
call
ret
sti
inc
xchg
mov
sbb
scas
mov
pop
pop
jb
mov
sub
jl
stos
clc
repz
int
daa
push
mov
inc
add
xchg
cmps
add
jnp
jl
pop
lahf
ins
(bad)
and
rcl
sub
jnp
es
cmp
gs
xor
dec
mov
repnz
cmps
rol
xchg
sbb
jmp
xchg
popa
push
ds
inc
pop
repz
add
pop
cdq
inc
lea
xchg
jmp
cdq
xchg
js
adc
mov
aas
cwde
sbb
sub
add
push
cld
ins
fs
dec
pop
or
mov
bts
or
adc
lock
pop
or
call
sti
xor
fdiv
(bad)
out
xor
xor
mov
xchg
mov
jp
pop
dec
and
pop
cdq
inc
and
jle
add
pop
sbb
cmps
xor
aad
cdq
jp
jbe
mov
push
loopne
cmp
inc
or
and
loop
push
imul
push
ror
sub
cmc
jg
mov
inc
je
stos
push
xlat
(bad)
nop
cli
out
in
sub
sub
jbe
mov
pop
jecxz
(bad)
out
jp
xor
test
rol
mov
push
loop
xor
cmp
aam
push
jne
(bad)
sbb
dec
add
dec
aam
xchg
std
icebp
xchg
xchg
scas
aaa
sub
jecxz
dec
mov
lods
aam
or
push
adc
push
ins
fs
sub
and
cmp
mov
mov
and
cmc
(bad)
(bad)
cdq
pushf
jmp
mov
pop
aam
mov
fs
push
(bad)
xor
mov
out
dec
call
push
sbb
popf
mov
xor
call
ret
jne
xlat
cmp
rcl
jmp
mov
push
add
loope
or
xor
into
jmp
dec
push
mov
sbb
mov
lds
ins
ja
aas
retf
mov
jecxz
inc
cld
push
bt
mov
fs
add
push
xchg
rcl
xor
sub
cli
(bad)
or
loop
mov
inc
push
pop
arpl
jle
sahf
sar
sbb
outs
aas
inc
or
test
mov
cli
out
cmp
popf
mov
dec
push
dec
inc
and
push
outs
into
add
lea
mov
aaa
pop
cli
sbb
clc
adc
xor
sar
dec
fisub
cmp
fcmovne
sub
xchg
pop
retf
jbe
or
int3
jnp
sub
lods
push
xchg
js
add
xor
out
in
mov
sub
icebp
rol
fst
jmp
jle
sub
pop
or
test
in
xchg
sub
aas
pop
scas
aam
mov
cmps
dec
xlat
cmp
dec
cmp
mov
pop
enter
cwde
out
dec
adc
adc
cmp
popa
not
test
jp
mov
mov
cmp
dec
aaa
femms
and
pop
sti
push
inc
add
xchg
cmps
ins
imul
(bad)
or
jmp
loope
inc
jg
inc
push
stc
clc
dec
cli
pop
leave
shl
in
cmp
mov
cmp
iret
shl
lea
cmp
and
sbb
icebp
sub
push
xchg
dec
or
mov
pop
dec
mov
inc
inc
sbb
and
sbb
sbb
hlt
stos
test
jnp
out
mov
movs
mov
ins
cs
jae
sbb
pop
stos
sar
pop
cmp
dec
adc
and
dec
push
push
pop
jae
jae
inc
add
mov
cs
hlt
xor
pop
(bad)
bound
xor
cmp
daa
adc
dec
adc
aam
imul
sbb
fwait
aas
jno
imul
fnsave
sub
or
sub
in
sbb
aas
daa
or
cmp
lods
lds
push
in
ret
lods
(bad)
mov
ror
stos
jecxz
cmc
xor
adc
outs
sbb
test
leave
cli
adc
jbe
test
fwait
or
xchg
xchg
xor
popa
or
or
ret
sti
xor
retf
xchg
(bad)
dec
div
lea
sbb
mov
es
mov
ins
mov
push
rcl
lods
xchg
cmp
ds
pop
stc
retf
les
mov
out
jmp
fcmovnbe
adc
repnz
movs
adc
add
call
xchg
les
aad
fadd
inc
in
cmp
in
loop
xor
outs
aam
pop
jmp
retf
adc
ja
cmps
test
inc
imul
pusha
in
mov
and
sahf
mov
cmp
add
or
and
adc
sub
inc
ins
push
jne
jmp
jnp
call
xor
sub
imul
push
mov
loope
fnstsw
jecxz
cmp
ret
nop
fld
push
aaa
or
xchg
in
test
std
test
lahf
movs
dec
and
sahf
ds
pop
add
xchg
sbb
lods
mov
pop
rcl
addr16
lods
xlat
leave
adc
ret
adc
sub
ret
fisub
lods
fcomi
stos
inc
pop
add
and
mov
push
mov
jmp
jmp
retf
lahf
fcom
push
push
inc
cwde
sbb
push
xor
dec
xchg
sub
mov
aas
(bad)
xor
pop
xchg
arpl
jno
add
mov
in
fwait
push
push
pop
sub
popf
sti
sub
cmp
pop
mov
xor
and
cmp
pop
jge
movs
loope
mov
xchg
fldenv
inc
cmp
add
imul
cld
daa
cmp
push
ja
jno
jp
pushf
cmp
lock
xchg
shr
mov
out
fwait
retf
js
pushf
cmps
xor
ja
xlat
mov
imul
mov
or
and
cmc
cs
push
ret
sbb
pop
inc
push
pop
enter
xor
push
outs
xchg
inc
loop
call
mov
pop
push
mov
ss
add
fiadd
add
lds
repnz
xor
dec
xchg
rcl
or
sub
push
call
xchg
outs
sub
fsubr
fsubr
nop
sub
adc
adc
out
sbb
imul
jbe
xchg
xor
shl
add
cmp
popf
and
jno
fcom
push
push
and
(bad)
loope
xchg
sub
lods
in
jne
hlt
test
sahf
jae
push
xor
xor
push
imul
cmc
adc
nop
mov
add
sbb
repnz
fdivrp
stos
sub
adc
gs
xor
mov
pop
in
stos
mov
imul
push
nop
jmp
repnz
into
mov
inc
jmp
ins
mov
stos
sti
outs
inc
xor
dec
rcl
mov
fs
out
jo
fs
mov
sbb
pop
retf
push
cmp
adc
push
les
int
fisttp
lea
pop
jge
jle
mov
shl
out
loope
xor
enter
jmp
cmp
daa
cdq
or
mov
addr16
ds
xchg
jae
sub
lahf
leave
fimul
adc
jge
sub
adc
ss
pop
push
mov
fs
rcl
imul
call
adc
imul
imul
adc
mov
jle
adc
mov
adc
inc
xor
js
xchg
imul
mov
mov
js
imul
leave
in
(bad)
push
inc
xlat
adc
(bad)
ins
mov
mov
add
mov
add
xor
leave
mov
loope
jl
outs
ret
fldcw
push
je
dec
clc
jmp
or
mov
daa
sar
js
xchg
jg
jbe
jecxz
mov
sub
jbe
push
call
lea
jns
fld
jo
popa
mov
jmp
cmp
add
pop
sbb
mov
xor
adc
mov
out
popa
ret
shr
add
sbb
adc
popf
jb
mul
fnstcw
inc
leave
mov
inc
ins
sahf
sub
xchg
xor
sbb
loop
retf
cmp
xchg
fidiv
push
test
xchg
lods
aaa
in
leave
sbb
xor
pop
adc
jl
stos
xor
jae
xchg
fidiv
mov
fiadd
cmc
mov
dec
mov
jle
jb
cmps
mov
inc
xor
lds
xchg
cli
push
lods
mov
mov
inc
sub
inc
test
rcl
fstp
mov
retf
push
sbb
daa
hlt
dec
fisub
scas
dec
push
mov
int
mov
xchg
push
adc
xor
adc
push
ins
(bad)
out
or
adc
push
icebp
lods
inc
push
and
push
and
mov
xlat
jb
in
sub
cmp
xchg
and
bound
lahf
sbb
lds
gs
shr
mov
sub
aas
ja
mov
ret
adc
add
xor
shl
xor
jb
retf
cmp
jae
inc
js
fst
icebp
nop
rcr
stc
stc
mov
push
cmps
sbb
sub
lahf
(bad)
aaa
adc
xchg
cld
or
pop
or
stc
push
test
ss
lock
sub
push
pop
sub
je
xor
cs
and
(bad)
push
xlat
jmp
push
or
mov
ret
adc
loope
mov
das
jmp
cwde
push
pop
jmp
popa
xor
xchg
mov
fld
sti
ror
mov
dec
ins
pusha
push
mov
inc
adc
push
cmp
stos
repnz
pop
cs
xor
clc
jno
mov
(bad)
(bad)
add
or
test
push
shr
pop
push
mov
or
ss
sub
pop
cmp
outs
test
mov
outs
dec
push
lock
jge
js
mov
cmps
hlt
mov
push
(bad)
jae
xor
dec
les
mov
sbb
add
mov
dec
or
mov
cmp
rcr
or
adc
ja
pop
outs
scas
push
rcr
cmp
mov
gs
mov
xchg
dec
push
ins
and
leave
or
ss
inc
(bad)
repnz
mov
push
pop
mov
mov
inc
xor
jp
lock
mov
je
ret
jmp
mov
inc
rcl
mov
xor
inc
lds
(bad)
mov
add
aaa
xchg
call
clc
scas
(bad)
pop
inc
push
(bad)
jbe
int
fwait
int
nop
xchg
xchg
dec
add
sbb
jge
push
aaa
les
repz
mov
sub
ret
mov
jae
mov
cmc
out
mov
pop
jmp
cmp
xchg
pop
mov
mov
out
add
inc
dec
mov
mov
or
out
js
loopne
dec
lods
inc
aas
mov
push
in
fscale
out
cmps
mov
cdq
fsubr
mov
mov
pop
in
jmp
aam
hlt
popf
jp
mov
cwde
repz
cmp
fwait
jnp
xor
lods
out
sub
clc
test
int
xor
dec
jnp
movaps
jmp
inc
or
fs
adc
pop
push
adc
xor
inc
outs
adc
pop
and
xlat
pop
fwait
add
pop
out
mov
ret
movs
pop
pop
test
mov
cld
sub
mov
call
scas
stos
lds
addr16
and
lea
(bad)
sar
fdivr
pop
lods
jecxz
pop
mov
xchg
sub
jmp
inc
dec
jp
mov
mov
pop
cmp
je
add
push
mov
dec
iret
mov
ret
push
xchg
cs
ret
call
or
stos
xor
pop
cli
sbb
pop
stos
jmp
xor
dec
sbb
xchg
outs
call
inc
(bad)
inc
js
xchg
jns
cmp
or
std
jg
aad
ins
stc
shr
adc
aam
pand
fstp
inc
call
jb
pop
pop
arpl
mov
jns
sbb
call
popf
dec
fs
adc
push
sbb
scas
movs
cmp
call
rcl
cmp
popf
and
mov
push
dec
icebp
aaa
jecxz
aad
(bad)
mov
xor
pushf
push
adc
inc
div
aam
push
sbb
std
sub
iret
bound
jmp
pshufw
jns
add
aad
lahf
sub
into
mov
mov
std
sbb
pushf
ret
dec
jge
adc
pop
out
or
mov
mov
(bad)
sbb
fsub
dec
xor
mov
fcmovnbe
xor
and
adc
aas
dec
clc
or
pop
movs
in
jmp
pop
les
cdq
ss
adc
movs
push
in
or
aaa
hlt
fstp
jne
jne
loop
sbb
xor
mov
jle
and
mov
cmp
jo
push
fsubr
jp
fist
add
clc
jo
scas
adc
je
mov
clc
pop
imul
mov
enter
mov
fld
inc
mov
mov
mov
mov
pop
(bad)
(bad)
(bad)
aam
sbb
lods
sti
clc
xor
sub
in
stc
xchg
cmps
movs
(bad)
xor
dec
js
jl
mov
cwde
dec
xchg
popa
mov
std
test
bound
mov
push
dec
movs
inc
call
mov
bound
int3
or
mov
retf
(bad)
outs
sub
test
pop
stc
sub
int
mov
jno
sbb
in
mov
loop
adc
mov
das
or
es
adc
or
aam
ss
push
cmp
mov
mov
(bad)
jmp
jmp
fs
jl
aam
neg
jle
adc
shr
mov
mov
aas
sbb
mov
mov
dec
sbb
popf
mov
add
jb
out
in
jecxz
adc
jmp
mov
cld
ins
inc
gs
lods
mov
dec
inc
pop
in
popa
stc
cmps
and
hlt
xchg
sbb
iret
fsub
sub
xchg
xor
test
and
cmp
rol
popf
and
add
imul
in
out
mov
nop
(bad)
lods
sti
xor
sbb
pop
dec
jns
repz
cdq
cmp
ins
jmp
adc
pop
sub
pop
mov
outs
sti
mov
inc
mov
scas
idiv
push
bnd
test
sbb
push
pop
push
or
jl
outs
jmp
not
cdq
and
clc
adc
add
mov
rcl
fiadd
xchg
fs
out
adc
lea
adc
xchg
iret
mov
sub
adc
ja
sub
scas
mov
pop
cmp
mov
xchg
in
push
repz
sbb
icebp
mov
pop
les
movs
mov
stc
retf
add
inc
mov
jle
sbb
push
add
pop
repz
inc
test
jae
mov
imul
int3
nop
adc
xchg
pop
or
clc
fdivr
mov
push
leave
sub
call
push
push
fistp
(bad)
div
push
imul
jle
sbb
das
or
dec
(bad)
xor
pop
or
bound
cmps
lea
(bad)
xor
imul
pusha
or
mov
es
adc
mov
scas
push
mov
dec
dec
pop
xor
push
pop
fwait
retf
sub
jmp
cs
xor
and
out
in
push
xchg
ret
cmp
in
xchg
cmp
in
jno
icebp
jmp
mov
and
int3
outs
sub
jmp
dec
sub
in
mov
cs
fcomi
pushf
sbb
test
in
inc
aas
outs
xlat
shl
jnp
ror
pusha
minps
repz
cmps
popa
repnz
stos
(bad)
repz
fst
test
xchg
adc
sbb
and
mov
or
mov
outs
rcr
shl
ins
jle
fld
mov
gs
sub
cli
js
pop
inc
mov
call
cmp
xlat
neg
dec
(bad)
loopne
cmp
add
scas
adc
xchg
paddd
into
pop
test
sub
dec
aas
outs
adc
js
rol
(bad)
call
cli
cmc
rol
push
mov
fmul
push
aam
mov
push
out
mov
fs
pop
enter
mov
sbb
sbb
sub
je
mov
dec
inc
repnz
imul
sub
cs
add
sub
jle
std
das
fidivr
ret
or
fst
mov
fidivr
mov
fisubr
push
dec
ins
cmp
pushf
dec
sahf
or
jae
xchg
cld
xchg
pop
add
cmps
jl
ror
xchg
push
sbb
pusha
inc
or
shl
jnp
cmp
mov
cld
mov
push
lahf
push
shl
mov
cmp
cmp
mov
pop
sub
mov
dec
mov
ins
adc
daa
les
je
ins
push
out
mov
add
push
xor
rol
iret
xchg
sub
xchg
push
sbb
cmps
nop
(bad)
in
jg
add
loope
fcomi
fcmovu
jmp
jge
jp
sbb
ins
jmp
cs
push
xor
xor
pop
in
lods
(bad)
dec
sub
lea
xor
xor
and
jg
push
pop
jmp
stos
cs
aas
lds
aas
popf
jo
fimul
popa
mul
cld
dec
lods
jns
mov
arpl
adc
retf
(bad)
fbld
outs
leave
idiv
iret
scas
loope
inc
mov
stos
xor
mov
sbb
inc
mov
movs
mov
cmp
push
push
pop
add
cli
cs
aaa
loope
and
or
dec
stc
jmp
push
mov
mov
cmps
sbb
mov
retf
lahf
sbb
fistp
loope
sbb
push
dec
out
xchg
or
cmp
xchg
xchg
(bad)
nop
xchg
call
xor
ds
jle
cmp
add
push
or
mov
pop
nop
js
(bad)
in
mov
loop
retf
(bad)
(bad)
call
and
cld
ret
push
lods
mov
(bad)
ror
mov
movs
cdq
je
add
fdivr
les
dec
sbb
pushf
sub
xchg
ror
xchg
pop
jecxz
cmps
(bad)
adc
out
jb
(bad)
leave
or
retf
pop
daa
dec
xchg
ds
lock
retf
inc
call
mov
adc
xlat
inc
cmc
push
outs
adc
call
add
and
cmp
jle
lds
sahf
push
push
xor
add
fiadd
cmp
push
inc
xor
loopne
jmp
mov
push
push
cwde
xchg
push
sti
xor
pop
mov
push
mov
imul
das
clc
mov
add
popf
mov
jno
in
ss
sub
bnd
adc
mov
lock
add
mov
jg
jmp
cmp
cld
jnp
push
mov
pop
test
push
add
and
pop
in
dec
adc
pop
ins
add
jb
mov
std
inc
clc
inc
fwait
jne
outs
pop
ins
mov
sbb
pop
clc
add
call
inc
imul
popf
int
dec
hlt
sti
jns
dec
inc
add
xchg
test
cmp
sub
lods
jns
retf
mov
jae
pusha
cld
fnstenv
xchg
dec
xor
mov
inc
loopne
fnstsw
and
xor
nop
call
test
imul
imul
inc
jbe
fwait
dec
push
nop
mov
out
aad
jb
pop
dec
outs
and
loope
xor
stos
(bad)
out
mov
mov
out
dec
ins
jge
sub
push
ror
(bad)
hlt
and
test
icebp
xchg
daa
inc
pushf
js
test
call
lds
mov
pop
lea
xchg
xchg
pop
lock
outs
aaa
add
popf
sar
inc
cmc
sub
and
cmp
sbb
sahf
jle
push
dec
mov
jp
mov
rol
loope
mov
mov
mov
imul
inc
pop
add
rcr
cmp
jns
repnz
enter
cmp
rcl
dec
mov
xchg
ins
push
sub
adc
call
push
imul
or
pop
and
aad
les
pop
cmps
lahf
jle
pop
mov
hlt
xlat
out
in
mov
jno
sbb
call
icebp
ud1
mov
mov
int3
adc
push
shl
inc
jno
push
retf
test
xor
movs
out
sub
fld
sar
loopne
and
cmp
in
shr
inc
mov
aas
hlt
adc
icebp
(bad)
fstp
add
bound
das
mov
sub
cdq
sub
mov
cmps
arpl
xchg
into
outs
mov
out
aad
gs
mov
adc
or
jge
xor
enter
push
or
or
jne
mov
clc
bound
mov
jmp
js
cmp
or
adc
mov
push
arpl
and
add
cmp
or
mov
or
jg
dec
xchg
enter
adc
or
jb
xchg
sbb
mov
push
sub
xor
loope
rol
jp
jmp
and
or
int3
rol
adc
pop
rcl
dec
iret
mov
or
mov
fidivr
ins
cs
mov
imul
push
mov
fbld
sbb
psubusb
aad
and
imul
push
mov
push
dec
sbb
nop
daa
ja
test
adc
jle
popa
bound
mov
imul
mov
xchg
push
or
data16
pop
jbe
xchg
leave
clc
sbb
xchg
pop
and
out
int3
cli
mov
mov
popa
jmp
mov
or
xchg
(bad)
(bad)
cdq
add
loopne
fild
ja
test
pop
mov
add
sbb
pop
pop
gs
call
and
stc
aad
clc
cmovae
xchg
addr16
pop
shr
test
(bad)
or
mov
imul
out
xor
jns
dec
fcom
(bad)
and
cmps
mov
aaa
pop
dec
or
scas
mov
(bad)
xlat
out
jmp
and
xchg
(bad)
lods
std
mov
jbe
scas
push
jmp
adc
outs
fidiv
ds
sub
inc
xor
lahf
sbb
or
add
push
xor
out
pop
cs
pushf
mov
rcl
sbb
icebp
dec
mov
bnd
in
fimul
cs
add
jnp
(bad)
sti
outs
ret
push
cwde
aaa
inc
add
pop
jns
int3
push
ja
call
scas
add
mov
add
mov
adc
nop
out
sti
lods
jbe
adc
or
lds
mov
cli
xor
add
ret
jae
icebp
add
loop
(bad)
mov
mov
cmp
mov
inc
mov
mov
imul
sub
movs
push
cmp
add
or
in
popa
lea
mov
neg
mov
in
movs
pop
adc
mov
fcom
sbb
jl
jecxz
add
ins
imul
mov
rcr
mov
imul
out
jno
nop/reserved
test
inc
lahf
ret
mov
cs
mov
mov
je
aaa
xchg
jmp
add
fdivr
pop
iret
cmp
sub
jmp
outs
jne
mov
inc
jl
and
ja
sub
xlat
repnz
jmp
sub
mov
pushf
jmp
xor
jns
sbb
shl
add
call
bndstx
ins
mov
fwait
xchg
jo
pop
mov
and
(bad)
fbstp
ret
jns
aas
ins
lods
call
push
sub
dec
neg
jg
retf
imul
adc
int
add
sub
mov
jp
daa
imul
ret
pop
rol
scas
mov
test
jmp
loope
jle
fisubr
retf
inc
aas
dec
fwait
or
mov
cld
icebp
cmp
fcomp
mov
mov
scas
outs
jecxz
in
mov
mov
jle
mov
inc
mov
popf
gs
mov
fadd
mov
fwait
jne
jmp
(bad)
stc
dec
mov
aad
jp
fidivr
pop
jo
ret
push
mov
sub
and
sbb
sti
mov
test
sub
outs
pop
jmp
mov
xor
iret
out
int3
adc
mov
lods
rol
pop
pop
neg
fcmovbe
fisub
or
adc
repz
clc
add
lods
aam
jg
mov
(bad)
mov
jbe
xchg
lea
push
pop
or
push
into
mov
jle
fdiv
xor
sbb
dec
inc
xor
ins
int3
jne
push
adc
xchg
cmp
cmp
pop
cdq
(bad)
in
repnz
jno
pop
xchg
sub
frstpm(287
xchg
cmp
outs
(bad)
in
xchg
jbe
mov
xchg
mov
inc
les
sbb
repnz
aam
cdq
xor
mov
pop
and
(bad)
retf
cmp
fldenv
(bad)
push
or
mov
xchg
scas
stc
jae
jno
xchg
inc
xacquire
pop
xchg
in
or
out
mov
aad
inc
mov
loop
scas
fist
xchg
add
or
mov
hlt
add
xchg
xchg
add
xor
xor
mov
mov
add
lods
stc
cld
test
ja
nop
add
ins
jp
clc
int
and
inc
shl
push
cs
and
mov
imul
push
dec
(bad)
jmp
(bad)
pop
stos
sti
in
jl
movs
imul
stc
adc
enter
lods
mov
loopne
jnp
dec
lods
out
pusha
das
test
fild
dec
push
test
cmp
shl
stc
jo
(bad)
(bad)
sahf
das
outs
and
fstp
ja
and
inc
push
fidivr
sti
nop
xchg
sti
gs
xchg
inc
je
mov
jl
push
popf
cwde
sub
pop
in
retf
cdq
iret
add
imul
pop
pushf
std
jnp
shl
xchg
mov
lods
cmp
jne
loop
mov
xchg
xchg
jl
cmp
push
jle
jl
mov
out
and
and
out
repnz
rcl
mov
sub
enter
and
gs
call
js
xchg
pslld
sub
hlt
mov
and
xchg
mul
mov
cmp
repz
lock
cmps
cld
outs
xchg
push
mov
and
test
jb
add
adc
dec
shl
pop
sbb
call
inc
retf
adc
(bad)
push
mov
mov
scas
jge
dec
jmp
imul
cwde
xchg
lahf
int3
cmp
out
add
in
inc
out
int3
pop
mov
rcr
shl
cdq
icebp
into
mov
mov
pop
popf
jmp
xchg
sub
jbe
mov
xor
cmp
shl
xor
and
stos
jnp
jge
(bad)
imul
xor
adc
dec
push
mov
jecxz
icebp
sti
mov
jge
lds
pusha
or
sub
mov
gs
jg
adc
mov
int
stos
ret
jae
xor
xor
xchg
sub
add
add
repz
jl
js
cmps
jno
push
enter
xor
arpl
std
dec
movs
lock
imul
fisttp
ret
sbb
into
push
aam
or
std
pop
mov
cdq
fadd
mov
shr
into
sbb
adc
and
ficom
pop
nop
in
or
clc
jb
cmps
test
dec
jle
ins
ficomp
loopne
rcr
ror
mov
popf
in
iret
sub
ja
push
add
test
inc
push
jns
cwde
push
mov
and
cwde
jb
mov
xor
xor
ja
push
inc
mov
int
push
fstp
pop
or
ds
pushf
xchg
mov
(bad)
pop
popa
inc
mov
xchg
sub
inc
popa
shl
arpl
and
push
into
fcmovne
add
lahf
jnp
jae
mov
push
jmp
fdivr
(bad)
xlat
loop
(bad)
push
fwait
inc
stos
ss
inc
cmp
push
inc
das
push
imul
pop
dec
pop
and
jmp
inc
push
or
fisubr
not
out
xchg
fisub
sbb
xchg
or
cmp
repz
xor
setno
cmp
out
lahf
cdq
test
clc
or
mul
gs
push
and
icebp
out
mov
pop
push
imul
mov
sbb
xor
inc
(bad)
pushf
jo
or
fcomp
mov
dec
ret
inc
adc
sub
jbe
scas
dec
lds
daa
or
dec
js
sub
mov
dec
pop
popf
stos
adc
add
dec
(bad)
fcomp
sub
repz
pop
aam
pop
mov
pop
in
sub
call
inc
adc
or
mov
or
test
sub
xor
cdq
dec
cmps
jmp
xchg
jg
jl
ret
lods
fcmovnbe
mov
loop
ins
xchg
popf
or
xor
pop
cmps
cmp
adc
mov
in
out
mov
jecxz
out
inc
loope
adc
pop
mov
or
std
shr
(bad)
push
idiv
and
fbld
sbb
jl
rcl
mov
jne
ja
add
xchg
ret
lds
xchg
mov
cli
jno
fld
sahf
sub
das
cs
push
sub
(bad)
loop
fild
mov
push
out
xchg
mov
xchg
test
outs
repz
dec
mov
fimul
pop
push
jns
mov
xor
dec
aas
rcr
xchg
xchg
inc
add
aaa
daa
mov
in
adc
iret
lahf
add
dec
data16
mov
(bad)
inc
cmp
and
adc
cmp
aad
je
jo
jno
cmp
push
fsub
imul
dec
fsubr
xor
mov
in
mov
(bad)
push
fisttp
aad
xchg
cdq
pop
push
or
push
push
add
adc
pop
mov
and
sub
out
mov
ins
ret
je
jbe
sbb
dec
dec
push
mov
adc
fld
mov
mov
push
xchg
cmp
sub
xchg
jns
fmul
or
fild
jmp
xor
inc
pandn
jb
cmps
imul
sub
mov
cmp
xlat
xchg
call
jg
or
jge
jmp
jno
xor
cmps
xor
in
adc
fld
aam
mov
psubb
mov
add
mov
int3
je
mov
xor
mov
mov
jbe
dec
ins
push
test
mov
xchg
retf
cmp
(bad)
mov
popf
sbb
jmp
arpl
sub
push
loopne
or
push
cmp
push
and
sub
mov
mov
test
inc
jo
mov
cs
(bad)
fwait
call
or
push
je
cmp
push
jmp
and
(bad)
movs
sub
mov
aad
outs
jmp
cmovg
loope
sub
pop
bound
xor
lds
mov
xlat
jbe
and
rol
jmp
cmps
cmp
(bad)
mov
xor
mov
jne
pop
fcom
adc
push
test
xchg
xchg
mov
loop
stc
mov
fsub
push
gs
cmp
dec
mov
ret
push
ficom
xchg
push
out
adc
fst
movs
pop
fistp
jno
arpl
cmps
in
call
stos
je
fstp
popf
cmp
loopne
inc
fdivr
test
hlt
and
ss
lods
je
jne
sub
xor
lds
and
push
imul
adc
cmp
jo
jnp
es
jns
retf
xor
cmps
push
mov
mov
frstor
mov
scas
test
xchg
mov
ins
cmp
test
pop
pop
xchg
outs
popf
imul
leave
daa
xor
jecxz
inc
cdq
cmp
cmps
pop
fnstcw
cwde
or
inc
or
mov
pop
pop
mov
dec
dec
cmps
daa
xchg
sbb
pop
sub
lahf
adc
fnsave
inc
sbb
xor
cmp
xor
jns
loope
lods
cs
in
dec
push
adc
cmp
xor
cs
jbe
lods
cmp
or
or
mov
jle
xchg
jns
sti
mov
fist
cmp
push
fmul
sub
mov
ror
mov
jecxz
inc
loope
rcl
ret
scas
ror
jle
idiv
test
add
gs
cld
and
clc
sub
mov
nop
xchg
push
add
addr16
scas
ins
sub
les
sti
cmps
xor
movs
rol
fs
jne
inc
add
add
jbe
xor
pop
frstor
sbb
mov
gs
mov
adc
pushf
cmp
xor
jb
fst
mov
loope
fnsave
and
fmulp
fiadd
jmp
leave
jl
cmp
adc
clc
and
out
bswap
inc
mov
(bad)
je
mov
pop
xchg
hlt
mov
(bad)
retf
test
cmp
(bad)
in
loopne
mov
push
pop
(bad)
sbb
mov
jae
xor
scas
das
clc
inc
or
fsubp
cmp
outs
cmp
fcom
dec
inc
dec
cmp
vpaddw
test
es
imul
aas
mov
(bad)
pop
or
adc
lods
mov
mov
fcomp
not
mov
cs
adc
xchg
loop
(bad)
or
xchg
and
inc
jle
int
jae
and
sub
jp
fneni(8087
and
popa
(bad)
addr16
cmp
cwde
mov
rcl
inc
jne
sbb
leave
loopne
jne
shl
jl
xchg
(bad)
fild
out
int3
add
mov
mov
xchg
dec
call
push
pop
rcr
fwait
rcr
push
xor
mov
pop
lods
mov
mov
cwde
xchg
icebp
aas
(bad)
mov
mov
pop
movs
(bad)
lock
aaa
mov
push
mov
or
addr16
mov
xchg
pop
test
mov
aaa
fstp
xchg
mov
test
mov
jecxz
test
out
inc
adc
or
dec
dec
mov
mov
cmp
dec
push
inc
cmp
push
popa
pop
fld
mov
(bad)
(bad)
pusha
jge
das
dec
or
and
inc
mov
std
lock
in
lahf
ds
gs
and
stos
push
sbb
push
scas
mov
jne
and
sub
cmp
sti
daa
dec
dec
stc
adc
adc
in
stc
aam
out
mov
cmp
iret
sbb
(bad)
stos
sub
mov
push
cmp
fnstcw
xor
popf
sahf
jae
pusha
in
sub
or
stc
xchg
ds
sar
jo
jge
mov
stos
pop
es
retf
shr
dec
sbb
test
push
cmps
test
and
push
adc
inc
imul
hlt
push
and
jg
hlt
pop
sub
xchg
test
pop
ins
jmp
test
test
sti
sub
popa
inc
adc
fmul
mov
or
fdiv
adc
dec
cmps
in
fadd
sbb
in
push
not
in
sub
mov
mov
mov
or
dec
out
into
mov
aad
ror
clc
or
mov
aad
pop
imul
xchg
mov
ret
jge
shl
cmp
push
mov
int
adc
outs
aas
add
xchg
add
lock
retf
ins
jns
mov
sub
push
ins
adc
dec
pop
pop
inc
bswap
mul
daa
add
movs
or
push
mov
and
(bad)
(bad)
sub
mov
(bad)
inc
pop
jbe
in
cmp
stos
les
sar
into
mov
inc
fnstsw
push
push
jp
cli
imul
add
sub
cmps
add
in
sbb
mov
cmps
xor
ins
jp
jge
mov
daa
dec
jae
fsubr
popf
push
ret
(bad)
fwait
das
stos
mov
and
in
cld
push
fs
iret
cmps
inc
xchg
adc
jge
inc
and
push
das
jp
pop
xchg
pusha
mov
sbb
or
add
(bad)
dec
cmp
call
in
mov
fwait
out
mov
nop
mov
mov
push
inc
cdq
cdq
mov
pop
inc
popf
and
bnd
mov
or
dec
pop
cmp
loop
sar
push
pop
push
fwait
repnz
cmp
dec
pop
add
in
cmp
aam
sub
(bad)
movs
mov
pop
out
adc
lods
mov
push
cmp
mov
pushf
mov
inc
push
sub
and
bound
mov
xor
jmp
cs
adc
frstor
ret
and
sub
aaa
push
fst
dec
fsub
push
mov
inc
outs
addr16
mov
push
mov
cmp
ins
in
mov
and
jmp
push
(bad)
fsubp
push
sahf
cmc
rcl
adc
sub
jno
fwait
retf
shl
fwait
inc
(bad)
pop
xor
mov
mov
xor
inc
cmc
leave
jae
je
das
dec
test
fsubp
sahf
shr
movs
fmulp
ja
adc
push
jae
push
aas
loope
adc
cmp
inc
sub
mov
aam
pushf
mov
push
pop
rcr
arpl
scas
mov
jb
push
cmps
add
mov
sub
add
xlat
icebp
sti
push
push
xchg
cmp
push
jge
(bad)
adc
fbstp
dec
ficomp
sbb
test
test
jmp
push
cmp
and
gs
mov
sub
push
or
in
enter
sbb
push
jo
cmps
(bad)
icebp
mov
int
push
fiadd
xchg
repz
sub
test
push
rcr
cmp
ret
sbb
pop
pop
scas
sub
cmp
and
mov
or
push
ja
pop
stos
or
xlat
jbe
call
loopne
iret
fs
movs
test
mov
sub
cmp
cmp
mov
(bad)
jmp
mov
lods
mov
jmp
xor
fmul
mov
repz
mov
(bad)
icebp
icebp
cmp
repz
and
mov
xchg
(bad)
jae
jecxz
xchg
out
jecxz
(bad)
lods
and
lock
mov
jb
sbb
aaa
sub
sub
popf
outs
mov
cmps
mov
push
pop
cmps
aaa
(bad)
cs
jne
xor
repz
je
pop
outs
sbb
fs
in
mov
aaa
aad
push
pop
dec
sbb
ss
lods
add
mov
sub
(bad)
call
call
jne
jno
fcom
sub
sahf
jg
and
pop
out
xchg
sti
test
inc
cmps
add
(bad)
call
repnz
loope
dec
add
addr16
mov
jmp
int3
sub
lods
aad
xchg
ds
mov
pop
cmc
mov
ins
adc
xor
call
add
mov
movs
mov
js
adc
fld
sbb
fdivr
leave
pop
fldcw
pop
ret
dec
lods
lds
jecxz
xchg
aas
fnstenv
jmp
xchg
je
cmps
push
in
loope
jbe
sbb
inc
xor
mov
dec
adc
dec
popf
cli
inc
es
rol
mov
cmp
sahf
inc
inc
add
enter
dec
mov
mov
jmp
jecxz
mov
sub
adc
jns
fwait
int3
in
mov
mov
mov
inc
push
jg
cwde
xchg
adc
add
test
test
int
add
mov
jge
ret
daa
add
(bad)
and
dec
aaa
sahf
pop
out
jno
xchg
mov
(bad)
adc
xchg
or
test
pop
pop
fadd
ins
push
imul
pushf
jne
in
cmps
repnz
cmp
es
or
inc
sbb
repnz
bound
out
inc
out
or
jle
push
inc
out
loopne
punpcklwd
pop
jno
iret
jbe
das
int
mov
ins
sbb
sub
or
and
(bad)
retf
mov
jnp
xchg
jae
mov
retf
cmc
sbb
mov
mov
fstp
into
jmp
push
fdecstp
jmp
aam
push
mov
dec
les
enter
aam
aas
fld
test
sbb
jg
lock
imul
out
dec
or
or
pop
cmp
pop
gs
mov
xchg
lds
push
jmp
sbb
ins
repnz
jmp
pop
xchg
mov
rol
(bad)
gs
push
sbb
inc
add
vpshrdd
cdq
call
fstp
or
and
push
jmp
dec
(bad)
xor
or
mov
mov
into
imul
sub
lock
(bad)
stos
in
aaa
add
jns
sub
shr
into
out
daa
pop
shl
cmps
sbb
xor
jo
cmc
adc
fst
inc
and
repnz
push
pop
ror
jmp
and
cmc
out
call
mov
imul
jle
call
out
mov
dec
mov
push
(bad)
mov
out
(bad)
les
mov
add
call
es
enter
lods
sti
lahf
stc
inc
loop
adc
mov
cmp
push
pushf
sub
enter
aas
in
aam
inc
xchg
inc
mov
movaps
int
inc
retf
call
lock
clc
xchg
adc
stos
jmp
into
data16
test
outs
cmp
jns
xchg
loop
lods
jg
int
mov
call
or
retf
and
leave
jns
shl
enter
pop
xchg
sub
enter
push
leave
retf
leave
or
enter
jno
call
rol
sub
adc
and
push
jecxz
cmp
movs
dec
mov
fcmove
ucomiss
call
xchg
xchg
lods
or
lds
sub
pop
pop
mov
dec
mul
stos
adc
pop
xor
(bad)
enter
lods
cld
jne
jmp
cmp
cmp
aas
jnp
push
add
lock
mov
push
gs
jle
aas
hlt
fsub
add
arpl
fdivr
push
mov
mov
mov
xchg
test
cmovp
sub
xor
dec
and
or
cmps
mov
push
pushf
in
(bad)
mov
dec
enter
test
push
or
jmp
push
xchg
ins
mov
or
das
aam
xor
dec
sbb
movq
adc
popa
gs
jge
or
fbld
xchg
pop
jl
mov
xchg
test
fisttp
cmp
scas
or
xlat
leave
out
sub
adc
push
fst
xor
repz
or
dec
xor
adc
xchg
data16
movs
jle
push
mov
andps
(bad)
xlat
xchg
push
jae
dec
jne
xchg
pop
xchg
fnsave
out
add
mov
push
sbb
pusha
not
jo
out
pop
and
mov
xchg
add
xchg
cdq
imul
jg
push
sbb
or
or
lahf
adc
jne
mov
shl
scas
stos
sub
ret
and
repnz
das
pop
xor
and
dec
shl
ret
mov
scas
cmp
mov
pushf
out
xchg
mov
mov
push
push
sub
push
gs
into
push
in
(bad)
arpl
mov
stos
stc
loope
ret
xchg
inc
test
shl
stc
clc
pop
pop
xchg
push
pop
pop
sbb
inc
xor
xor
pushf
fistp
in
xchg
pop
fwait
es
mov
lods
xlat
push
fs
in
(bad)
or
ins
hlt
pusha
(bad)
dec
fmul
pop
xor
(bad)
test
xchg
shr
repz
jecxz
cli
mov
xor
mov
or
jmp
jb
pop
ja
call
push
jo
sbb
sbb
or
out
and
add
or
sub
mov
mov
or
mov
lea
out
fild
jmp
jo
cmp
jmp
(bad)
mov
popf
test
sbb
mov
and
cmp
and
(bad)
xor
pop
mov
push
icebp
inc
jb
and
std
idiv
and
retf
sub
mov
js
push
test
stos
pop
adc
mov
ss
es
mov
in
cmp
dec
mov
add
or
sbb
cmp
jp
add
clc
cmp
ja
dec
ins
scas
or
ins
pop
push
fs
sar
xchg
add
cwde
cdq
mov
retf
push
mov
xor
cdq
rol
mov
jge
and
push
imul
pop
nop
and
ss
or
(bad)
cdq
ds
ins
lods
(bad)
fs
fild
mov
or
xchg
jno
(bad)
jb
in
out
int3
cmp
pop
push
call
sub
movs
jno
movs
fbld
jmp
out
(bad)
ja
push
push
fnstsw
pop
neg
dec
enter
jl
add
mov
and
sahf
stc
or
mov
repz
hlt
mov
cmp
in
in
dec
neg
hlt
xor
inc
mov
dec
xor
pop
sbb
jmp
sar
jmp
rcr
sar
stc
fnstcw
cmps
push
in
aas
js
aas
dec
pop
in
adc
mov
inc
movs
pusha
cli
jns
sub
cmp
mov
pop
je
xchg
or
repnz
dec
popa
sbb
mov
mov
mov
fiadd
sub
push
test
gs
(bad)
lea
fmul
cwde
mov
jp
mov
aad
push
or
mov
sub
call
movs
mov
jno
sbb
int3
inc
test
add
stos
push
(bad)
call
adc
xchg
mov
push
jg
push
daa
pop
add
add
inc
js
into
mov
mov
(bad)
push
stos
cmp
test
retf
ficom
fmul
arpl
cmp
mov
sbb
enter
or
pop
jb
ret
push
dec
mov
(bad)
xchg
hlt
sbb
dec
mov
pop
add
mov
out
adc
(bad)
jo
add
sbb
mov
push
movs
mov
dec
cmps
xchg
in
test
(bad)
cmps
mov
js
out
xor
sahf
mov
ret
sti
jg
(bad)
cmp
dec
ja
push
mov
fucomip
arpl
(bad)
jmp
fiadd
ins
lods
pop
loop
jo
push
outs
jno
repz
jne
retf
stos
shl
adc
sub
cmp
js
jae
inc
cmp
add
imul
js
popa
(bad)
arpl
or
pop
inc
cmp
ins
dec
ret
mov
sub
jl
fcomp
pop
jp
push
or
mov
push
pop
xor
push
jmp
mov
dec
add
ror
dec
fcmovnu
stos
lock
lods
or
lds
adc
dec
cli
xor
fcmovbe
xchg
(bad)
(bad)
call
xchg
inc
in
dec
and
mov
adc
cmps
mov
mov
fwait
out
dec
sar
fwait
int
das
inc
das
in
cmp
(bad)
fdiv
shr
ds
das
mov
lds
cmps
jnp
push
cwde
mov
inc
jp
inc
test
call
cld
mov
dec
sbb
mov
test
fwait
dec
pop
pop
ins
in
jecxz
(bad)
dec
rcl
fistp
cmp
mov
outs
push
es
and
add
popf
pop
xchg
xor
sbb
pop
inc
dec
lea
jmp
inc
push
dec
xor
inc
mov
popf
mov
paddd
div
mov
fld
push
js
dec
popa
fisttp
sbb
push
cmp
aas
(bad)
inc
mov
xor
lea
movs
push
and
add
xor
sti
pop
loope
call
idiv
scas
lds
inc
mov
xor
in
jnp
stos
adc
pop
sbb
ins
mov
inc
mov
adc
sbb
sbb
lods
ins
stos
(bad)
movs
push
movs
xor
stc
popf
ret
loopne
and
arpl
punpcklwd
sbb
bndldx
cmp
cmps
test
jnp
leave
push
sbb
add
or
cmc
loop
mov
rcl
push
xor
sti
jecxz
sbb
xor
test
jnp
call
fisttp
and
add
push
push
sbb
int
(bad)
lock
pop
sbb
add
popa
mov
xlat
inc
jmp
es
in
adc
or
mov
les
xor
sbb
mov
inc
frstor
daa
fs
push
call
xor
xchg
movs
loopne
sbb
jo
fsubr
je
add
fs
sub
jae
sbb
inc
adc
and
into
mov
or
cwde
dec
mov
int3
loop
sbb
es
stos
jo
mov
dec
test
jmp
and
mov
cmps
push
sar
adc
pop
ins
and
mov
ret
retf
mov
mov
scas
aas
jmp
push
(bad)
jp
repz
jmp
ret
pop
retf
sbb
std
inc
cmc
repz
bound
jb
jb
mov
das
xor
loope
mov
bound
add
fs
xor
dec
add
js
test
fdiv
cmps
retf
sub
cli
inc
dec
sbb
lods
repnz
loope
fs
shr
sub
add
jge
scas
icebp
sti
sbb
push
xor
test
loop
fistp
jge
mov
xor
adc
pop
iret
pushf
mov
outs
es
xchg
sti
scas
xor
inc
stos
adc
jecxz
cmc
sbb
(bad)
mov
mov
and
retf
adc
cld
mov
jg
and
mov
icebp
in
in
ins
stc
in
pop
cmp
sub
jnp
cmps
adc
mov
xchg
mov
mov
and
aam
xchg
movs
adc
push
mov
xchg
jge
mov
mov
pop
scas
sub
cmp
xchg
inc
mov
mov
xchg
data16
sar
les
call
xor
jbe
dec
aaa
sub
bound
sub
adc
sbb
adc
cmp
sbb
mov
jbe
imul
inc
(bad)
cmc
adc
nop
das
js
fild
sbb
mov
pop
mov
rdtsc
push
js
or
int
(bad)
mov
mov
cmp
inc
jo
inc
cmp
xchg
and
mov
and
inc
pop
sub
jg
sbb
jge
movs
jmp
je
loop
pop
pop
dec
inc
in
sub
push
bswap
dec
out
mov
(bad)
fdiv
ret
neg
pop
loope
mov
hlt
je
sub
mov
xchg
(bad)
retf
std
jb
out
xchg
nop
xchg
jg
iret
xor
sub
stos
xchg
mov
cmps
or
jge
aaa
aam
ins
and
mov
or
and
cmp
int
test
imul
scas
adc
jae
cli
outs
aad
mov
data16
jae
in
iret
xchg
jbe
inc
dec
lods
stos
rcl
mov
jne
rcr
mov
mov
jmp
loope
jns
ja
jnp
cmp
das
int3
jmp
jg
loope
(bad)
fild
cmp
add
xor
dec
mov
ss
ins
lods
xlat
sub
pop
imul
jo
xor
pop
mov
mov
retf
gs
enter
imul
lea
movs
jo
sub
adc
dec
lods
dec
add
es
outs
jbe
pop
mov
lods
or
xchg
jecxz
dec
mov
push
fnstcw
sti
lods
inc
xchg
dec
imul
add
sub
stc
jne
pop
std
pusha
mov
je
mov
call
pusha
ret
adc
and
xchg
and
dec
shl
dec
nop
(bad)
cmp
stc
dec
(bad)
lock
fucom
push
mov
sub
inc
mov
xchg
clc
mov
inc
gs
jle
mov
shl
sub
ret
lods
add
bound
inc
data16
cmp
mov
add
sbb
aam
dec
sbb
mov
mov
jle
jae
xchg
pop
sti
push
xor
in
sbb
jecxz
out
(bad)
jbe
lahf
sub
(bad)
jg
enter
cmc
inc
jl
inc
gs
xor
xor
call
(bad)
sbb
cmp
xchg
es
add
ficomp
fisttp
mov
(bad)
jnp
cmc
dec
idiv
adc
lods
imul
adc
addr16
(bad)
xchg
imul
pushf
aam
lods
sbb
xor
fild
pop
xchg
setnp
es
mov
cli
jo
inc
iret
js
push
dec
(bad)
jg
cmp
jo
push
adc
sbb
pop
outs
sub
in
das
xor
jbe
sti
xchg
mov
mov
rol
aam
add
shl
jns
in
inc
adc
mov
inc
mov
cmp
imul
rcr
out
jnp
(bad)
xchg
pop
xchg
xlat
xor
fsub
dec
shr
in
mov
mov
cld
cld
xlat
sbb
jnp
sti
ror
dec
push
out
out
scas
mov
adc
xor
test
add
nop
cli
sbb
das
les
pop
shl
shl
lods
outs
cli
push
mov
and
in
xor
int
nop
sub
loop
repz
pop
int3
dec
fcomip
push
clc
ins
and
pop
cmp
xor
lods
and
pushf
fistp
int
inc
fisttp
add
imul
rdmsr
sub
(bad)
sti
das
popf
je
popf
into
lahf
lea
cld
in
push
ss
jae
xchg
xor
outs
sub
jge
int3
outs
stos
sti
repnz
xor
cs
repnz
outs
loope
cmp
nop
clc
jg
fldcw
mov
popf
mov
mov
dec
push
sbb
xor
(bad)
mov
es
mov
jg
adc
cmps
out
push
xor
(bad)
call
daa
mov
pop
xchg
fstp
xor
inc
pop
inc
retf
std
cmps
xor
out
mov
rsm
aad
stos
fwait
jmp
mov
call
js
cmps
sbb
das
imul
cmp
dec
cmps
mov
jnp
imul
ret
mov
popa
loop
retf
std
test
adc
xor
sahf
add
fwait
jecxz
ins
sbb
jmp
out
inc
and
pop
inc
mov
aam
rcl
fisttp
sbb
test
inc
and
adc
test
inc
xlat
mov
cmp
scas
loope
push
mov
les
fisttp
xor
push
add
ins
pop
movs
jmp
or
jmp
fstp
adc
pop
push
dec
xor
pusha
adc
inc
fwait
dec
mov
push
call
jg
xchg
in
imul
out
jno
adc
jne
add
loopne
adc
fcom
in
xor
test
or
shl
jns
xchg
dec
add
(bad)
ror
sub
xor
movs
mov
pop
rcl
(bad)
sbb
arpl
jp
push
dec
or
mov
inc
jb
inc
inc
adc
xchg
aas
sar
push
add
imul
enter
jge
push
xchg
jb
call
dec
cmp
mov
or
bound
xchg
mov
hlt
xchg
in
bound
outs
mov
inc
mov
mov
jo
mov
stos
cmp
inc
pop
sbb
stos
ins
mov
mov
xor
jmp
mov
out
dec
nop
add
xor
pop
sub
(bad)
dec
loopne
(bad)
adc
mov
xchg
or
fadd
std
push
mov
ret
mov
(bad)
retf
cmp
jle
lea
pop
xchg
in
push
sbb
pop
dec
mov
inc
jmp
addr16
pop
mov
adc
jbe
sahf
adc
add
xchg
iret
cld
jg
pushf
jmp
aas
cmps
jbe
adc
pop
or
xchg
(bad)
pop
xor
push
shr
dec
ds
jg
cwde
mov
dec
cmp
jb
cmp
mov
test
xor
jp
inc
cmc
xor
ja
repnz
fmul
pop
fbstp
lods
or
nop
outs
push
(bad)
into
popf
dec
bnd
lods
test
lods
push
sbb
sti
retf
mov
adc
mov
movs
adc
jbe
jb
inc
popa
mov
xchg
fcmovnu
adc
inc
mov
push
mov
aam
jge
div
mov
cmc
adc
bound
jno
inc
out
retf
sbb
sbb
sbb
aas
push
movs
xchg
push
mov
push
call
outs
neg
mov
jg
inc
mov
out
nop
jmp
mov
xor
in
or
mov
movs
lods
mov
sti
cmps
arpl
xor
and
fwait
(bad)
dec
adc
and
sub
out
jo
or
mov
xchg
push
xchg
pop
rcl
lds
ret
pop
push
pop
mov
push
adc
add
xor
mov
inc
jecxz
xor
aaa
and
outs
ror
das
mov
jle
xor
cld
mov
test
push
cmp
in
sub
aaa
sahf
inc
rcl
mov
mov
outs
xchg
sub
fwait
jmp
xor
fcomip
fwait
mov
jne
ret
bound
cmp
push
push
pop
loop
xchg
aam
das
js
bound
mov
gs
push
aam
jmp
adc
adc
jmp
adc
inc
push
ret
inc
push
fisubr
mov
retf
cmp
test
popa
in
mov
in
jp
mov
cwde
dec
mov
fsubp
rol
xchg
mov
iret
lock
push
fstp
inc
iret
mov
jl
push
inc
xor
outs
das
cli
xor
push
fwait
or
mov
mov
in
mov
movs
add
rcl
outs
hlt
jnp
daa
stos
xor
in
scas
loop
stos
and
lods
repnz
sbb
xchg
out
mov
jle
call
ins
shl
std
dec
ja
(bad)
mov
sbb
inc
jecxz
out
sbb
fwait
dec
inc
fstp
icebp
(bad)
and
daa
fstp
adc
mov
(bad)
or
ins
push
into
add
mov
jne
(bad)
push
cli
adc
add
pop
adc
push
push
lock
ret
(bad)
lods
pop
loopne
dec
mov
xchg
or
(bad)
sbb
xchg
shl
dec
cmc
add
mov
cmps
jmp
or
mov
push
dec
repnz
in
jmp
out
fwait
jp
out
in
sahf
mov
cmp
shr
add
mov
jb
fwait
xchg
mov
repnz
or
cwde
pop
and
cmp
xbegin
sub
xchg
loopne
fucomip
xchg
popf
out
mov
mov
xchg
lahf
pop
jg
pop
sbb
movs
ret
add
fidiv
sbb
sbb
or
add
pop
aad
lock
or
or
(bad)
out
scas
(bad)
and
sub
aad
ja
pushw
cld
cmps
out
jb
jne
push
lods
pop
mov
in
mov
mov
call
mov
dec
adc
test
ds
jp
pop
stos
mov
inc
ins
cmp
jo
sti
dec
xchg
cdq
lahf
sbb
hlt
mov
push
inc
jmp
scas
iret
jge
dec
mov
mov
pop
pop
mov
es
xor
jecxz
ret
adc
mov
xor
sub
sbb
or
or
pop
xchg
in
fwait
gs
inc
mov
or
es
das
in
inc
xchg
fwait
push
out
mov
out
bound
js
sbb
mov
sbb
cmc
xor
sub
mov
aad
sub
icebp
shl
aaa
push
pop
pop
jle
push
xor
cmp
dec
(bad)
popa
in
and
jp
sbb
and
repz
inc
ret
and
outs
test
fidivr
mov
int
ins
cmps
mov
gs
and
lds
xor
push
jns
(bad)
ficom
jns
ret
bound
lahf
dec
inc
push
push
popa
test
in
cmp
pop
mov
pop
sahf
jno
iret
push
ins
rol
dec
outs
sub
nop
test
jae
fisttp
xchg
add
popf
stos
cmp
jnp
sbb
outs
loop
div
test
clc
add
mov
ins
cmp
and
loop
mov
hlt
inc
outs
xchg
dec
cmp
mov
pop
pusha
dec
xchg
lahf
inc
pop
cmps
ret
lea
int3
mov
sub
sbb
or
fwait
call
mov
fidivr
sbb
sub
(bad)
xchg
je
in
adc
mov
and
pop
add
fnsave
test
out
mov
scas
mov
in
pop
mov
outs
push
in
arpl
mov
sub
ds
arpl
inc
je
jg
xchg
repz
fmul
push
ror
cmc
jl
cmc
xor
cmp
or
retf
fild
fstp
or
daa
retf
(bad)
into
sbb
push
jno
test
rol
popf
aas
sbb
ja
mov
popf
or
aad
push
movs
int3
out
pop
or
cmp
xchg
push
xchg
cs
lds
mov
xchg
xor
retf
rcr
add
xchg
or
leave
add
xchg
xor
popf
scas
adc
fucom
sbb
inc
pop
loop
mov
retf
pop
inc
call
inc
out
loopne
leave
out
arpl
sub
xchg
pop
in
call
je
loope
ins
js
xor
cmps
mov
adc
push
adc
sahf
test
and
sub
clc
or
inc
subps
lods
leave
bound
ret
in
loop
pushf
or
sbb
gs
mov
cwde
fcmovu
mov
out
in
inc
cmp
sbb
and
xchg
pop
dec
mov
pop
mov
in
das
outs
in
out
push
rcl
repz
sub
adc
ins
pop
mov
jns
ja
test
jnp
rol
aam
sbb
pop
les
pavgb
ss
cmp
test
pop
xchg
add
rcr
push
stos
repnz
dec
jo
adc
dec
dec
xchg
aad
repnz
retf
sub
repz
aad
fisubr
stc
(bad)
mul
dec
or
add
mov
mov
sbb
ror
jmp
xor
popf
scas
cmp
inc
cmc
in
dec
lahf
clc
ret
imul
rcl
sbb
xlat
mov
pusha
fs
repz
jae
mov
sbb
add
mov
jl
ins
jae
mov
adc
out
mov
mov
ds
adc
mov
dec
push
and
cld
fild
sbb
(bad)
xchg
add
mov
daa
hlt
mov
push
xchg
jmp
repz
stos
retf
pop
ins
jp
stos
daa
icebp
jo
addr16
sbb
push
add
pop
popf
add
xchg
and
or
cmps
add
cld
out
or
jmp
inc
ins
into
ins
jecxz
imul
pop
sub
fcomp
stos
push
stos
in
clc
lods
push
pop
stos
cmp
xchg
(bad)
xchg
ja
iret
arpl
ret
out
mov
xchg
xor
gs
add
aad
cmp
xor
add
pop
stos
mov
mov
sub
fdiv
dec
xor
cli
call
dec
iret
adc
and
test
jmp
sti
adc
mul
popa
mov
dec
ret
mov
cmp
adc
fwait
push
and
aaa
mov
xchg
pop
cdq
div
js
inc
xchg
mov
jo
pop
shr
gs
mov
mov
je
jmp
add
xchg
jmp
fmul
out
and
outs
push
aaa
xchg
mov
jmp
in
xchg
jl
aas
jo
dec
dec
push
push
fimul
adc
xchg
pop
sub
scas
gs
test
adc
(bad)
adc
sub
lds
jno
mov
push
clc
bound
rcl
stc
inc
lock
ja
ins
xor
dec
ret
adc
and
stc
push
addr16
jge
cli
mov
ja
cdq
pusha
fsubr
pusha
ret
jnp
loope
js
xchg
ins
pushf
ret
cmc
push
ins
sbb
mov
or
inc
fsub
pop
add
jle
xchg
data16
jle
cmp
add
xchg
jo
push
adc
fadd
retf
and
or
retf
dec
jle
xchg
call
jbe
add
and
sbb
aam
or
arpl
mov
pushf
sub
sub
xor
aam
dec
test
rol
loopne
je
mov
mov
repnz
nop
dec
cdq
sahf
loopne
test
test
pop
jge
mov
mov
cmc
int
arpl
sar
enter
xlat
mov
jecxz
sahf
mov
xor
aam
daa
or
mov
push
stos
adc
movs
ins
shl
fimul
xor
loop
dec
push
(bad)
in
(bad)
mov
xchg
mov
jno
jno
push
mov
sub
jno
dec
loope
xor
aad
ins
fadd
ror
ins
jbe
cmps
hlt
ror
jp
cs
cld
add
repnz
icebp
cwde
(bad)
fmulp
lea
adc
mov
out
xor
js
pushf
xchg
(bad)
and
rcr
addr16
xchg
stos
stos
cmp
into
xor
push
out
imul
inc
sbb
push
ins
xor
inc
or
xor
aam
push
push
mov
test
jno
test
cmps
mov
push
es
rol
mov
fldenv
fldenv
jmp
push
aad
dec
xchg
dec
or
or
stos
dec
loop
mov
and
hlt
mov
mov
nop
movs
aam
adc
cmp
push
cmp
push
jmp
add
hlt
xchg
aas
mov
std
add
xlat
movs
das
fstp
push
or
loop
int3
jge
call
dec
aam
lods
inc
xor
adc
pop
fadd
mov
dec
cwde
jb
push
sbb
inc
push
bnd
push
xchg
outs
fiadd
in
xchg
jmp
mov
cmps
mov
push
jecxz
sahf
sbb
add
bound
and
les
sub
cs
rol
sub
mov
sub
inc
out
je
sbb
xchg
pop
jecxz
scas
ja
pop
out
retf
xchg
inc
adc
inc
arpl
jle
xchg
xchg
mov
cld
and
mov
aaa
xchg
sub
or
or
mov
dec
lods
iret
sbb
jo
jo
pusha
push
(bad)
fld
div
aas
jb
xor
out
sbb
scas
sahf
imul
mov
enter
jae
lods
adc
ss
inc
xor
or
mov
ret
popf
int
mov
mov
jmp
push
shl
das
cmp
scas
ret
dec
pop
sti
jl
stos
adc
sbb
xor
jmp
out
jecxz
adc
push
push
rcl
test
ja
(bad)
popa
loope
fcmovnbe
sub
add
jnp
mov
push
enter
mov
imul
fsubr
std
fwait
pop
xchg
fsub
mov
push
dec
mov
iret
xchg
and
fdivr
fadd
dec
rcl
mov
add
cmp
pop
inc
leave
cmp
jbe
cmp
sahf
mov
sbb
gs
mov
inc
sar
leave
inc
test
xchg
push
pop
sub
jle
stc
jecxz
mov
fld
imul
ret
cmp
jnp
cmp
out
adc
ss
push
jmp
xor
aad
test
dec
and
pop
and
push
or
pop
test
imul
push
jmp
div
jp
in
stos
lods
mov
adc
mul
push
imul
mov
push
inc
sub
xor
mov
dec
aam
fucomi
push
dec
sahf
pop
gs
(bad)
in
pop
dec
mov
xchg
sub
imul
test
jmp
call
inc
sub
pusha
xlat
call
push
inc
out
arpl
(bad)
(bad)
sub
test
push
test
or
inc
les
out
mov
clc
dec
pop
and
pop
xor
or
cmp
es
jl
pop
mov
pop
add
push
adc
cdq
add
out
pop
pusha
test
fadd
ret
inc
mov
stos
jecxz
push
ret
mov
mov
sbb
jmp
mov
push
jmp
aas
test
sub
arpl
push
dec
pusha
retf
adc
hlt
add
fisttp
adc
mov
adc
test
mov
shl
jg
(bad)
or
push
ja
xor
or
sbb
cmp
and
inc
call
inc
adc
mov
ret
shr
and
pop
xchg
(bad)
push
pop
ins
sub
in
dec
mov
lods
lock
fsub
stos
in
inc
push
mov
cwde
mov
cmp
fist
cmp
test
mov
mov
sahf
aad
xor
shl
xlat
jg
aad
ror
jge
rol
pusha
outs
push
std
in
jbe
neg
mov
jmp
push
js
hlt
test
and
and
add
fst
dec
cwde
das
inc
retf
jmp
test
adc
ins
mov
add
mov
mov
jae
add
dec
and
fwait
inc
mov
jle
movs
in
xchg
fistp
test
lods
xchg
mov
push
pop
sub
mov
inc
xchg
inc
mov
or
stc
fisttp
cmp
cmps
test
pop
xchg
shr
aam
(bad)
xor
sar
sahf
pop
push
stos
adc
xchg
int3
adc
inc
push
push
or
inc
and
dec
mov
mov
jge
and
inc
xchg
jg
daa
xchg
jecxz
jae
hlt
cs
imul
dec
out
jns
xor
jo
push
dec
mov
call
xor
jno
imul
push
or
sub
fisttp
jo
sbb
mov
ins
js
out
pop
int3
adc
ror
pop
push
ja
and
adc
inc
inc
fucompp
dec
push
repnz
imul
cmps
enter
shld
call
pop
pop
in
das
pop
dec
jo
out
ins
movs
sbb
pop
repz
retf
xchg
in
mov
adc
dec
loop
hlt
push
in
fisubr
fsubr
xor
sbb
sub
push
xor
dec
mov
in
or
popf
aad
or
mov
lahf
stc
push
imul
mov
mul
push
stos
and
mov
add
mov
ss
popa
cdq
push
rol
xchg
into
xchg
lahf
add
or
int3
dec
jecxz
sbb
test
mov
das
push
xlat
pusha
mov
mul
jns
int3
pop
out
mov
push
sub
icebp
xchg
inc
mov
add
fbstp
div
push
jo
sbb
lock
or
push
inc
leave
mov
ja
call
cli
inc
scas
fld
jle
xor
hlt
nop
or
push
aas
sub
mov
mov
scas
retf
retf
test
shl
mov
pop
test
dec
(bad)
sbb
mov
xchg
rcl
push
fsubr
xor
push
pop
daa
test
xor
push
sbb
dec
push
das
xchg
call
imul
ss
dec
jmp
cli
test
imul
xchg
outs
popf
scas
sbb
ja
std
dec
iret
mov
inc
or
(bad)
(bad)
aam
pushf
retf
iret
mov
outs
shl
in
call
sub
push
repnz
enter
cdq
push
(bad)
and
pop
or
cmp
clc
mov
out
or
mov
mov
push
mov
outs
jmp
test
imul
ds
fldenv
jo
push
push
fdiv
mov
dec
push
push
add
xor
data16
movs
pusha
aam
mov
scas
rcr
jmp
sub
adc
add
leave
mov
fxch
adc
xchg
mov
repz
adc
sbb
outs
or
pop
jmp
(bad)
(bad)
popa
movs
jae
dec
inc
ret
xor
int
cwde
jne
punpcklbw
rcl
ja
fdiv
sub
mov
fwait
sahf
adc
sbb
mov
call
and
pop
jle
inc
iret
or
mov
xor
mov
fmul
in
inc
or
(bad)
jmp
dec
adc
and
jmp
ret
push
les
push
(bad)
inc
add
sbb
or
aas
sub
inc
and
or
bound
scas
cmp
in
movs
pop
gs
(bad)
pop
arpl
repz
cmc
cld
push
test
enter
add
push
fs
mov
data16
xor
xor
push
shl
dec
in
stos
pop
dec
icebp
in
and
mov
jnp
push
cwde
xor
(bad)
js
jnp
dec
adc
inc
inc
jo
push
pop
xor
adc
cli
in
cmp
push
sbb
add
dec
js
test
push
xchg
fidivr
das
aam
sahf
cmc
sub
push
pop
fild
clc
aad
cwde
dec
jl
add
xchg
mul
inc
add
in
mov
out
sub
xor
xchg
mov
or
jns
popf
jmp
mov
adc
aaa
cmp
pushf
and
outs
jne
jb
outs
addr16
pop
sub
adc
mov
adc
aas
inc
daa
fst
das
scas
or
mov
mov
sub
xor
cmp
mov
jge
xchg
sti
adc
data16
inc
in
shr
sub
add
retf
outs
xchg
cwde
dec
sbb
xor
jg
into
and
push
mov
mov
test
retf
mov
push
and
out
mov
mov
iret
retf
add
xor
push
lea
mov
push
sbb
je
jmp
xor
imul
mov
inc
test
bound
mov
sbb
sub
aas
xchg
shr
xor
in
repz
les
jl
push
(bad)
or
sub
and
(bad)
mov
jmp
push
dec
fldenv
leave
rol
cmp
push
pop
jbe
fnstcw
test
pop
mov
xchg
push
cmp
popf
inc
mov
pop
rcl
nop
jb
int
cwd
loopne
aaa
xor
xchg
into
add
loope
inc
psadbw
push
adc
fs
loopne
adc
push
popf
jno
pop
pop
cmp
jne
mov
int
ret
test
stos
dec
mov
je
rol
fistp
sub
fwait
jbe
mov
adc
test
and
inc
mov
in
test
pushf
stos
jl
ja
push
cmp
jnp
inc
lods
push
xchg
or
scas
inc
mov
dec
pop
repz
inc
adc
push
bound
lods
or
test
or
jae
adc
out
mov
mov
xchg
sbb
ins
mov
cmp
push
xchg
rol
iret
mov
cmp
push
pusha
loope
inc
ds
add
ss
lahf
pop
into
mov
jp
(bad)
js
cwde
(bad)
mov
in
jno
adc
pop
loop
and
fist
pop
lods
adc
dec
push
ins
xor
sub
adc
cmp
ficomp
inc
das
mov
sub
or
int
ficomp
pushf
fnstsw
scas
jp
xor
and
arpl
push
and
in
mov
pusha
lahf
rcr
xchg
sub
ret
adc
and
outs
and
je
popf
inc
add
jne
inc
test
fs
std
xor
sub
shl
dec
mov
aas
cmp
lahf
push
mov
cs
shl
es
cmps
loop
mov
sub
jg
mov
pop
dec
push
add
stos
push
adc
push
cld
and
push
and
cmp
stc
loopne
fmul
cmp
rcr
movs
or
xlat
lahf
add
dec
push
iret
lock
fs
cdq
dec
loop
jo
into
repnz
aam
popa
retf
or
cmps
mov
sub
mov
add
pop
pop
movs
jecxz
xchg
xchg
ret
xchg
adc
mov
icebp
stc
mov
sti
rcr
adc
cdq
sub
lods
stos
scas
(bad)
fadd
pop
and
dec
add
out
and
lods
add
cmps
mov
jns
loope
nop
or
dec
aad
into
mov
push
jmp
jecxz
push
mov
pop
jae
cmp
xchg
lods
fadd
fldenv
jmp
test
sub
fcom
jb
add
out
pushf
loopne
xlat
call
adc
and
call
bound
or
aaa
mov
loopne
xlat
lods
data16
movs
lods
jmp
retf
push
inc
pop
push
clc
std
hlt
ds
push
adc
xlat
xchg
sbb
add
imul
loope
xchg
pop
dec
lock
fadd
jb
bound
push
aas
push
mov
jmp
sub
call
arpl
cmp
cs
ja
xlat
in
lods
sti
and
sbb
bound
mov
add
xor
mov
xchg
rol
dec
fdiv
push
pop
dec
dec
ds
loop
test
pusha
dec
mov
cmps
or
popa
retf
scas
aad
or
gs
bound
pop
mov
jne
(bad)
mov
push
and
sub
push
pop
xor
jp
jge
mov
pop
je
mov
sub
call
mov
pop
test
retf
lods
(bad)
ucomiss
mov
dec
test
or
jne
jecxz
repnz
(bad)
cmc
test
push
repz
out
std
fxch
scas
inc
mov
cli
fucomip
hlt
lods
ja
jbe
xchg
and
mov
out
movs
sub
push
std
aad
dec
fidiv
data16
aas
aam
or
cmc
popf
cmc
daa
xchg
cmp
xor
cmp
outs
out
addr16
sbb
out
pop
and
in
lahf
pop
in
or
mov
mov
shr
mov
imul
mov
imul
fisub
xchg
or
pop
xor
test
dec
retf
cmp
push
test
jecxz
popa
(bad)
pop
rol
xor
outs
sar
mov
out
enter
fimul
jecxz
iret
daa
or
bound
int
in
in
add
jb
xor
popf
xchg
js
mov
outs
fucomp
daa
or
js
pusha
mov
call
test
outs
xor
cmp
mov
sub
in
in
stc
mov
stos
je
xor
add
jp
hlt
(bad)
ds
dec
xlat
and
or
(bad)
dec
pop
push
mov
(bad)
out
call
push
in
mov
push
je
arpl
std
aas
lock
mov
lahf
push
movs
pushf
xchg
lods
mov
js
and
jecxz
data16
mov
cmp
repnz
pop
int3
dec
push
int
sub
in
dec
dec
push
repz
push
sbb
sbb
adc
pop
fcomp
dec
sbb
mov
inc
in
in
in
or
loop
pop
fwait
test
inc
lahf
ror
pusha
cmp
mov
add
cs
jmp
sbb
pop
nop
sbb
arpl
dec
(bad)
je
xlat
xor
adc
js
pop
cmps
sbb
std
cli
and
dec
repnz
neg
xchg
mov
inc
push
out
scas
inc
js
mov
dec
mov
sub
mov
mov
scas
cmc
test
and
arpl
adc
js
pop
(bad)
iret
in
imul
sar
xor
xchg
and
inc
inc
mov
pop
jbe
add
mov
ins
or
(bad)
jmp
jle
test
xchg
or
iret
xor
sahf
sti
jle
leave
mov
imul
es
repnz
mov
dec
jg
(bad)
leave
pop
jg
das
lea
mov
xor
xor
test
dec
sbb
cmp
xchg
pop
dec
jo
push
rcl
pop
cli
or
les
push
ja
pop
icebp
fstp
mov
aas
sbb
dec
imul
and
xchg
jle
ret
ds
and
fidiv
jne
ret
jmp
adc
les
sub
ja
or
aad
popf
addr16
jmp
arpl
sbb
and
call
pusha
outs
jecxz
leave
sub
sahf
mov
push
add
pop
dec
sub
mov
pop
mov
xchg
jmp
dec
and
stos
push
jno
out
mov
xchg
pop
xor
imul
xor
into
daa
add
fst
jmp
adc
push
ins
in
outs
jecxz
xchg
push
mov
pop
xchg
and
sbb
je
push
cmova
fisub
cmc
mov
lods
mov
mov
fisttp
popf
mov
jmp
inc
ret
scas
cmp
mov
leave
jg
mov
sbb
arpl
dec
jmp
push
div
sbb
sub
loop
inc
cld
rcr
pop
jp
inc
jge
sub
icebp
xor
mov
cmp
ins
push
jle
sub
xchg
bound
iret
hlt
sbb
imul
dec
outs
fisubr
mov
jnp
dec
xchg
in
lds
in
ins
push
and
imul
mov
mov
jle
inc
fcom
or
aam
lods
test
shr
cmc
pop
add
fcomip
nop
xor
ret
push
and
xchg
ret
pop
sub
xor
mov
mov
(bad)
sbb
adc
fs
sub
fcmovbe
adc
jp
(bad)
into
xchg
adc
call
jmp
push
pop
retf
jbe
push
stos
sub
dec
adc
cwde
js
sbb
mov
push
push
fldcw
icebp
loope
mov
mov
ins
mov
push
cs
and
ss
sub
repnz
and
lock
scas
xor
sbb
fs
dec
not
mov
ja
test
xor
xor
pop
adc
adc
(bad)
lds
(bad)
data16
out
movs
sub
fldln2
or
loop
dec
adc
or
ret
loope
out
dec
enter
push
mov
jns
cmps
nop
xchg
out
ja
enter
xlat
mov
or
cmps
loope
fbld
mov
frstor
jns
jne
cmps
pushf
cmps
mov
lods
adc
or
retf
cmp
sbb
std
lock
and
cmp
pop
sbb
aad
fild
xor
and
xor
bound
lock
test
test
pop
push
int
mov
mov
pop
jp
push
lods
adc
xor
mov
pop
xchg
les
inc
cmp
loope
add
ror
imul
fisubr
fcomi
pop
outs
sub
loopne
or
sub
mov
call
pop
dec
or
jge
or
pop
outs
movs
mov
sbb
iret
fmul
pop
nop
aaa
and
int3
lods
and
sbb
mov
outs
(bad)
das
out
xor
mov
pop
lods
xor
call
dec
enter
lahf
and
xchg
popf
or
fild
sahf
sahf
scas
jne
add
xor
arpl
cvtdq2ps
pop
pop
aam
mov
pop
in
out
push
in
dec
jbe
stos
push
push
xchg
test
fnsave
dec
sbb
sbb
xchg
ret
sub
in
xchg
(bad)
pop
mov
fldcw
outs
or
sbb
retf
pop
jl
cli
ins
(bad)
jl
mov
movs
scas
lock
adc
mov
loop
ss
xchg
test
retf
xchg
mov
sbb
int3
(bad)
sbb
int
je
data16
dec
add
ret
dec
loopne
aam
ins
(bad)
(bad)
xchg
push
sub
test
push
xchg
pop
jae
xchg
lea
jl
ins
shl
mov
ror
mov
pusha
push
pop
not
rol
test
xchg
push
add
dec
lods
or
imul
add
stos
sub
mov
dec
(bad)
lahf
cmp
sub
lahf
cmc
and
scas
in
ret
movs
mov
add
push
ret
(bad)
stos
pushf
add
push
in
xlat
mov
les
retf
mov
in
scas
hlt
shr
pusha
jecxz
and
leave
xor
bound
or
ror
aam
mov
lock
sbb
jmp
jb
int3
adc
sti
mov
mov
jbe
dec
add
mov
cmp
addr16
ret
xchg
xchg
lea
mov
sbb
push
in
or
mov
jg
push
push
repnz
cmp
push
out
popa
push
jno
jo
sub
sbb
push
ins
sahf
inc
sbb
pop
dec
mov
push
jecxz
push
out
add
or
pop
loope
mul
or
push
jl
imul
aam
jo
sahf
rcl
outs
stos
test
dec
int
push
icebp
enter
push
pop
sbb
cmps
mov
cmp
(bad)
ror
mov
sbb
dec
mov
cwde
add
pop
inc
bound
cdq
mov
or
cdq
pop
cmps
dec
test
(bad)
es
fcomp
test
push
rcl
mov
retf
aas
fisttp
xchg
sti
push
jnp
push
add
push
mov
movs
push
fsubr
scas
mov
lods
es
stc
arpl
jecxz
bswap
push
mov
in
sub
cs
fld
jmp
in
pop
mov
xchg
cs
mov
cmp
inc
cmps
fist
sub
and
xchg
lahf
dec
cmc
repnz
mov
pop
inc
jnp
imul
popf
(bad)
cld
loopne
daa
lods
jns
scas
mov
sbb
or
adc
dec
cmp
fdivr
cmp
js
pushf
mov
fld
pusha
cmps
adc
push
adc
push
clc
or
dec
jbe
cmp
dec
xor
pop
jae
mov
xchg
dec
xor
push
aad
inc
mov
add
jg
in
cmp
mov
xor
(bad)
pop
mov
xor
sub
push
sbb
and
push
retf
and
loop
push
imul
mov
pop
es
outs
fs
mov
(bad)
fldenv
pop
mov
or
je
mov
fcmove
sub
in
xchg
dec
mov
and
stc
push
xor
pop
mov
in
in
ins
call
xchg
cmps
adc
repnz
loope
adc
dec
adc
into
lods
inc
and
jmp
and
(bad)
ins
sbb
jle
je
shl
icebp
or
sbb
jmp
xor
and
add
sub
mov
mov
push
out
pusha
push
fs
fadd
aam
out
xchg
gs
rcl
dec
push
adc
fprem
push
inc
sbb
ja
pop
mov
aam
jmp
arpl
outs
das
mov
mov
add
or
add
inc
ret
mov
mov
push
inc
jbe
mov
push
or
mov
bound
inc
ret
cmps
jmp
fdiv
out
popf
loopne
out
and
cmp
(bad)
repnz
dec
cmp
xor
mov
mov
mov
enter
sbb
cld
mov
inc
mov
popa
xor
pop
data16
push
gs
mov
sub
lds
div
sub
push
test
pop
sahf
retf
inc
call
jo
test
in
xchg
out
mov
fwait
sub
or
shr
dec
or
cmps
xor
cmps
push
cmp
xlat
xabort
and
mov
hlt
cmp
iret
popa
(bad)
mov
dec
pusha
rcr
cwde
das
lods
pop
out
pop
cld
lods
(bad)
xor
mov
adc
arpl
cmp
je
jns
adc
xchg
push
xchg
or
fs
push
shufps
xor
clc
les
jp
xchg
(bad)
int3
dec
popf
pop
and
pop
imul
pop
int3
ss
idiv
xor
int3
jbe
aad
mov
push
pop
inc
hlt
sub
cld
xchg
retf
or
or
push
cmc
es
ins
ins
add
sub
not
or
mov
dec
jmp
push
test
xchg
in
sub
xchg
jo
sub
rep
sbb
pop
dec
xor
pop
(bad)
aaa
mov
mov
cmps
imul
inc
mov
inc
sar
repz
das
inc
leave
adc
dec
lods
push
cmps
jns
jg
sar
in
in
cmp
adc
(bad)
add
push
mov
push
adc
or
mov
mov
fwait
inc
fst
cmps
mov
enter
fdiv
mov
stos
pcmpgtw
push
xor
imul
test
add
imul
dec
jb
aam
jp
jns
stos
adc
push
xor
ficomp
adc
outs
icebp
loope
sub
xchg
jmp
(bad)
lods
int3
cmps
popa
jp
pop
jne
xchg
jns
pop
pop
jge
daa
push
mov
lahf
out
shr
fldenv
pop
retf
cmc
das
xchg
lds
jo
dec
sbb
jbe
push
adc
ins
in
pop
bound
and
xchg
in
dec
fs
in
iret
sbb
pop
movs
mov
sub
arpl
ret
scas
push
int3
xor
jg
cmps
(bad)
sbb
mov
rol
fadd
xchg
adc
inc
in
jl
aas
fsubr
call
leave
(bad)
push
(bad)
sbb
ins
or
jo
pop
std
mov
jnp
xor
add
(bad)
mov
push
mov
call
pop
aad
in
cwde
jnp
cdq
arpl
inc
lock
push
add
(bad)
sub
or
sbb
mov
jl
or
or
sub
dec
fld
jae
out
add
ss
ds
fild
ds
sbb
mov
lods
out
push
js
fs
ret
dec
out
call
push
mov
fbld
retf
(bad)
out
lahf
(bad)
out
je
stos
outs
add
stos
xchg
ja
out
add
cmps
jle
addr16
gs
sbb
mov
jnp
je
stos
fwait
pop
sar
cwde
iret
out
push
les
loop
add
mov
test
imul
mov
or
test
push
arpl
sub
js
sub
inc
pop
ffreep
xchg
mov
or
ret
mov
sub
scas
xor
mov
sbb
inc
cld
sub
movs
xor
push
lea
sbb
add
push
pop
jbe
in
sbb
rcr
sbb
mov
jg
push
dec
jecxz
ins
sbb
in
retf
(bad)
outs
in
pop
aad
cmc
imul
push
dec
aam
inc
hlt
lea
enter
ret
dec
(bad)
adc
aad
in
add
fild
xchg
je
jnp
add
jb
test
in
and
or
xor
push
pop
dec
aam
sar
push
jecxz
xchg
pop
pmulhw
pop
fisttp
push
pop
sahf
push
and
ja
andnps
xor
mov
mov
out
mov
sahf
pop
(bad)
pop
push
jg
mov
ror
rcl
les
leave
and
xchg
xchg
mov
adc
in
xchg
sti
std
mov
repnz
push
add
mov
pop
add
arpl
mov
push
addr16
imul
add
push
ficomp
xchg
fwait
xchg
lods
mov
loop
loope
enterw
stos
fs
xor
std
pop
and
ror
rcr
mov
xlat
pop
hlt
aam
repz
mov
mov
jb
(bad)
push
push
test
pop
call
push
idiv
ror
and
dec
xchg
mov
sub
and
sbb
ja
xchg
jae
ins
jmp
jle
test
(bad)
push
icebp
jl
jmp
push
or
mov
push
sub
sti
popf
jnp
ds
jb
mov
imul
xchg
in
call
push
movs
rcr
fxch
test
in
and
shr
xchg
fcom
add
fdiv
test
outs
popa
add
mov
push
jae
cwde
lea
nop
or
ds
enter
mov
or
test
(bad)
clc
inc
fs
mov
pop
xchg
push
out
mov
cdq
push
mov
mov
jbe
shr
xchg
sbb
pop
mov
cmp
mov
adc
es
jecxz
mov
daa
cmp
add
jmp
mov
mov
das
pusha
sub
xor
aam
(bad)
xor
pop
cdq
int
dec
ret
add
or
js
(bad)
sbb
or
scas
add
xchg
fst
jmp
mov
push
push
mov
push
pop
mov
movs
fbstp
pop
(bad)
jp
cmp
adc
or
fcomip
stos
call
mov
mov
push
push
jp
xchg
call
xchg
into
inc
mov
jp
ret
xor
xchg
fimul
retf
bound
clc
psraw
push
sub
test
js
imul
jbe
cmp
and
xor
outs
mov
dec
das
adc
shr
inc
rol
lods
adc
mov
sub
retf
cmp
and
mov
sub
jmp
scas
pop
dec
scas
fild
lds
mov
ret
es
jns
retf
cmps
mov
mov
retf
cli
mov
sbb
clc
jns
sbb
or
(bad)
hlt
cmp
adc
inc
jo
push
or
fisub
stos
mov
lahf
adc
jae
dec
jmp
cmp
std
sbb
fldenv
or
sub
dec
pop
dec
pop
neg
enter
mov
add
pop
sub
and
push
xor
mov
in
xchg
out
pushf
cdq
xor
adc
pop
mov
js
mov
dec
(bad)
outs
call
rcr
pop
(bad)
ins
jo
jle
in
or
sub
jmp
mov
pop
mov
mov
adc
jns
mov
mov
xor
lock
cmps
push
hlt
pop
push
addr16
push
cmp
and
in
sahf
fwait
cwde
jns
cmp
jmp
pop
retf
loope
out
push
push
lahf
pop
mov
pop
xchg
jmp
inc
sbb
int3
jae
add
mov
mov
bnd
adc
xor
ja
inc
mov
or
sbb
sub
mov
push
stos
push
repnz
dec
jno
xor
pop
or
dec
mov
mov
(bad)
jne
cmp
rol
pop
xchg
jmp
aad
lods
popa
sub
mov
jnp
adc
sahf
cmps
shl
int
aad
add
jecxz
mov
clc
xor
test
popa
push
repnz
into
fucomip
in
mov
add
xor
iret
cmp
outs
dec
je
nop
aaa
movs
sbb
ret
sar
lds
xchg
gs
cs
es
int3
aad
in
es
mov
mov
cdq
jge
repz
jmp
loop
push
jecxz
in
mov
sahf
jnp
or
aad
mov
and
lahf
and
ss
sbb
div
jns
fst
mov
push
jae
add
sub
in
sbb
mov
stc
or
or
ja
rol
xchg
cmp
mov
daa
mov
jns
lods
xor
inc
or
fidiv
(bad)
pop
cli
cli
push
(bad)
dec
jmp
shl
aaa
mov
xor
cs
inc
dec
movs
in
push
and
adc
aad
stos
call
push
sahf
enter
adc
dec
gs
mov
pop
lds
dec
lea
and
xor
jge
aas
mov
rcl
cdq
cdq
xor
mov
cmp
(bad)
push
xchg
jbe
aaa
cmp
sbb
or
(bad)
adc
mov
mov
add
jno
add
cmps
movs
leave
arpl
mov
cmp
ret
popf
cmp
fmul
mov
(bad)
call
inc
jge
pop
or
mov
das
ret
jle
popa
xchg
sub
jnp
(bad)
repnz
and
les
movs
mov
xchg
push
lock
pop
push
popf
sbb
xor
call
fdiv
push
das
es
bound
repz
leave
mov
xor
adc
dec
xchg
mov
push
and
cmp
in
popa
or
push
jmp
jge
call
mov
cdq
shr
rol
jg
aam
call
mov
jo
pop
clc
or
and
add
in
push
sti
sub
dec
sbb
xchg
add
pop
mov
retf
aaa
scas
in
sbb
pop
pop
fldenv
enter
push
mov
(bad)
iret
iret
xchg
adc
dec
(bad)
mov
out
inc
push
pushf
push
repz
mov
test
add
or
jno
mov
xchg
xchg
mov
sub
idiv
icebp
and
das
movs
jl
ret
scas
cmp
jecxz
sbb
jmp
mov
lahf
fidiv
out
shl
imul
jbe
xor
fwait
aas
out
mov
sahf
and
popa
sbb
inc
adc
hlt
sub
cmp
mov
cli
loop
cmp
cmps
fistp
sti
push
call
ins
cmp
mov
shl
std
dec
add
imul
or
sub
popf
(bad)
imul
push
xchg
test
jmp
adc
and
sbb
adc
and
lahf
add
pop
jns
and
adc
pop
fsub
xor
inc
mov
rol
fs
mov
ror
mov
cmp
and
dec
ss
outs
out
aad
or
retf
dec
dec
cmps
rcl
enter
out
push
mov
push
aam
cmp
scas
adc
lds
ret
mov
js
loopne
jl
xor
sub
pop
scas
and
int
jo
call
adc
pop
and
push
stc
push
leave
sahf
(bad)
adc
cdq
xor
loop
ror
arpl
xchg
push
xchg
fcom
pop
pop
jns
imul
jmp
mul
pop
xor
cmp
addr16
aas
std
(bad)
loope
test
push
not
cmps
pushf
xchg
outs
or
push
lahf
mov
(bad)
jmp
pushf
addr16
add
inc
sbb
jnp
das
in
cmp
or
stc
js
cmp
xor
xor
in
cld
push
inc
jns
add
aam
cld
or
or
(bad)
ficomp
push
scas
sbb
aam
ja
sub
add
mov
pop
xchg
inc
sbb
out
loop
out
xchg
cmp
rep
outs
jnp
test
inc
(bad)
pop
out
outs
and
adc
icebp
outs
mov
mov
mov
sbb
in
iret
cmp
gs
lock
inc
inc
retf
mov
cmp
nop
push
cld
push
xchg
cli
add
rcr
loope
nop
pop
or
mov
fisttp
adc
add
xlat
mov
cmp
push
adc
out
cli
fwait
lods
jbe
jbe
mov
push
aad
out
mov
push
mov
pop
xor
lock
jbe
and
jecxz
scas
mov
mov
sbb
movs
outs
push
div
out
ret
std
das
js
ror
jae
arpl
rcl
add
pop
inc
push
adc
or
lods
shl
or
and
mov
call
cwde
outs
ja
imul
xchg
fisub
(bad)
jl
call
inc
lods
dec
aam
test
hlt
mov
xchg
arpl
push
jp
and
jne
pop
adc
es
dec
icebp
push
ret
int3
rol
mov
cmc
pusha
mov
test
xor
out
fs
in
repnz
dec
fist
cmp
out
iret
pcmpeqd
imul
mov
cmp
jmp
lahf
stc
call
dec
jb
enter
fistp
add
and
je
ret
sbb
xchg
pop
mov
add
fcom
fld
arpl
xchg
xor
fnstcw
mov
jl
cmp
(bad)
sub
adc
ret
mov
faddp
icebp
retf
jecxz
push
iret
les
popa
add
or
div
push
sbb
and
xor
mov
in
ja
mov
mov
sub
jno
jmp
retf
cmp
fbstp
mov
mov
mov
xor
out
push
cdq
pop
cdq
retf
scas
std
pushf
push
out
xor
or
jmp
leave
add
pop
outs
pop
jns
das
dec
retf
stos
dec
xchg
push
cmps
cmps
fbstp
out
cs
adc
jne
xchg
fsubp
ins
adc
jmp
(bad)
inc
add
call
adc
outs
call
pop
cmp
pop
sti
clc
mov
mov
out
dec
iret
movs
dec
and
repnz
jl
add
imul
(bad)
and
retf
mov
scas
pop
into
cwde
mov
push
pusha
jmp
push
adc
icebp
mov
inc
(bad)
loope
push
push
push
and
inc
dec
adc
in
mov
pop
scas
ins
scas
sub
push
or
or
or
sub
aam
repz
sbb
ret
fidivr
(bad)
xor
int
outs
mov
push
pop
scas
jmp
dec
fwait
xchg
fwait
add
dec
outs
mov
in
sbb
cmp
mov
add
push
test
xchg
jno
cmp
and
(bad)
mov
ds
mov
cmps
dec
aas
(bad)
clc
xchg
fdiv
or
aam
and
sub
cmp
fcom
arpl
jno
(bad)
mov
pop
inc
fdivr
jnp
adc
push
push
cmp
mov
ins
mov
(bad)
xchg
scas
inc
cmps
or
adc
pushf
out
movs
mov
imul
adc
and
(bad)
jb
push
push
mov
cmp
test
dec
adc
scas
jns
hlt
inc
cmp
out
mov
sbb
mov
and
shl
add
or
aas
out
push
inc
mov
gs
fadd
jne
jmp
lds
xchg
cmp
das
inc
pop
push
xchg
aad
cmps
call
adc
inc
test
sbb
(bad)
sub
cmps
imul
cmp
xchg
into
jns
popa
pop
push
inc
nop
and
adc
cmp
call
outs
pop
ret
cmp
dec
rcr
inc
frstor
xadd
and
arpl
fadd
xor
call
pop
lods
sub
pop
std
int3
rol
mov
outs
inc
and
out
js
push
les
sbb
loop
daa
pop
jne
xchg
cli
pop
call
dec
add
stos
jbe
push
inc
movs
cmp
hlt
push
(bad)
scas
inc
out
add
fisttp
shr
mov
clc
pop
nop
mov
inc
mov
mov
fs
ret
shl
xchg
pop
inc
mov
xor
iret
mov
hlt
dec
sub
mov
dec
cmc
in
add
jno
test
les
inc
dec
pop
mov
dec
xchg
jecxz
mov
imul
test
push
(bad)
fsub
mov
mov
in
mov
mov
data16
leave
or
xlat
lds
mov
jns
rol
fidiv
nop
jo
cmp
cmp
and
xchg
jb
xchg
lds
mov
mov
outs
pushf
jae
or
inc
sbb
repnz
mov
lahf
and
jne
mov
dec
sbb
test
test
add
leave
mov
xor
jb
(bad)
mov
pop
loop
cdq
sbb
push
or
ds
lods
js
enter
mov
sbb
inc
pop
nop
or
into
sub
in
aas
xchg
inc
adc
adc
(bad)
imul
dec
test
inc
lock
xchg
loopne
fs
sub
scas
pushf
inc
pop
sar
inc
jl
iret
pop
scas
shl
add
xor
adc
call
aaa
cli
fs
xchg
ss
lea
je
in
test
out
xor
cmp
mov
jbe
sub
retf
inc
in
sar
cdq
lods
lds
and
movs
ds
repnz
pop
add
clc
(bad)
scas
outs
fwait
sub
dec
and
or
pop
jb
ss
jne
xlat
add
and
aaa
mov
mov
jns
xchg
push
adc
xor
sbb
les
pop
cmp
ficom
xor
jns
cmp
and
xchg
in
cmp
mov
push
je
movs
into
das
(bad)
arpl
jmp
icebp
inc
mov
xor
into
jb
inc
mov
aas
mov
sub
test
int3
ret
sbb
imul
sub
js
mov
fstp
pop
ins
pop
shl
push
and
call
addr16
xchg
cmp
invd
cli
cmp
adc
adc
mov
cmp
xchg
cmp
out
jns
mov
dec
push
inc
push
mov
lock
jb
out
das
movs
fwait
iret
sbb
inc
add
and
xor
sbb
sub
xchg
imul
test
mov
std
daa
call
in
xor
sub
fistp
inc
adc
xor
adc
mov
jl
push
adc
fsub
sbb
inc
lahf
fsubr
and
stc
pop
xchg
or
lods
sub
repnz
shl
adc
sahf
dec
inc
call
jecxz
xchg
or
push
jo
cld
push
xchg
fcmovnu
and
repz
mov
dec
xchg
movs
retf
nop
out
adc
mov
loopne
push
push
test
outs
out
popa
jmp
add
mov
popf
xchg
pop
add
jo
mov
in
popf
sbb
movs
and
mov
push
ret
or
(bad)
mov
lods
aam
js
call
push
sbb
push
mov
pushf
inc
outs
pusha
mov
cmp
std
cmp
or
mov
imul
sub
ds
in
sbb
mov
xchg
pop
mov
xor
dec
mov
mov
sbb
das
in
and
lods
cmp
xchg
mov
in
cmp
add
std
fbld
push
(bad)
mov
mov
jp
cli
loop
ficom
adc
imul
cmp
out
int3
add
ret
mov
test
sub
inc
call
xchg
adc
in
sar
jbe
fsub
mov
aam
mov
les
pop
jne
adc
mov
cmps
sub
sbb
xlat
imul
pop
aas
dec
xchg
jge
xlat
xlat
ins
js
inc
or
popf
push
mov
dec
in
out
lods
cli
mov
and
pop
outs
test
push
fld
rcl
retf
dec
enter
pop
push
push
cdq
adc
pop
dec
mov
mov
push
mov
push
pop
pop
adc
das
sub
dec
inc
jmp
mov
aas
mov
pop
rcr
jo
lock
shl
cld
aas
or
lea
inc
or
jmp
stos
mov
retf
mov
ds
leave
pop
ds
mov
aas
jae
call
xor
mov
push
movs
fidiv
push
adc
jb
pop
in
or
ret
xor
xchg
frstor
cli
icebp
xchg
cmps
jo
pop
int3
adc
popf
adc
dec
in
mov
jmp
sar
out
sbb
and
xchg
mov
adc
push
movs
xor
cmp
sub
(bad)
dec
jno
cmp
cmp
mov
xor
out
mov
lods
imul
daa
adc
repz
mov
shl
inc
sbb
inc
ds
cmp
xchg
pop
cs
mov
mov
cld
fimul
mov
xchg
pop
sub
inc
push
xchg
sub
jecxz
mov
lahf
cmps
adc
push
lea
test
mov
call
xor
(bad)
cmp
cmp
mov
(bad)
jnp
xchg
fwait
inc
enter
add
test
sub
mov
arpl
daa
in
ds
cmps
(bad)
loop
addr16
lock
fadd
outs
xchg
mov
out
es
mov
xor
xlat
mov
ror
ds
push
setbe
push
add
aad
dec
and
popf
popf
mov
nop
gs
push
movs
push
stc
jns
out
in
shl
out
mov
dec
sti
(bad)
mov
or
cs
lahf
idiv
int
pop
stos
(bad)
retf
fmul
(bad)
mov
adc
icebp
sbb
xchg
es
sub
mov
out
mov
pop
daa
sar
cmps
add
mov
std
jg
ficom
shl
jl
popa
dec
xchg
adc
pusha
js
lods
sub
jbe
mov
xor
in
sbb
dec
mov
fisttp
sub
cmp
fld
(bad)
in
out
and
sub
aad
pop
fst
(bad)
jns
pushf
add
inc
pop
mov
push
pop
in
jo
cmps
jae
inc
mov
sbb
iret
dec
sbb
icebp
pop
ds
mov
(bad)
fwait
aas
jle
movs
mov
xchg
inc
xchg
pop
dec
ret
ss
pop
test
inc
xor
push
addr16
es
sahf
imul
les
std
jecxz
in
xchg
push
xchg
lea
adc
jb
xchg
lock
mov
jns
jle
mov
jo
lahf
jbe
xor
pop
cmp
push
scas
aas
outs
ins
cmp
daa
in
sbb
pushf
pop
mov
push
push
out
stc
cld
lds
xchg
mov
dec
and
ss
adc
(bad)
and
lahf
imul
dec
mov
inc
mov
movs
les
xor
daa
(bad)
aaa
pop
add
mov
not
in
stos
ret
enter
loop
enter
xlat
ins
mov
enter
or
push
or
cmp
inc
dec
data16
sub
(bad)
imul
bnd
and
bound
push
mov
add
add
movs
jecxz
clc
or
xchg
das
sbb
mov
push
in
xor
cmp
mov
add
push
jmp
sbb
dec
lock
add
jb
(bad)
hlt
ds
pop
arpl
ja
cmc
loope
mov
cmps
test
sub
cli
fdivr
sti
les
or
add
lahf
or
pop
out
jnp
lahf
dec
or
xchg
mov
(bad)
ins
inc
pop
enter
jb
push
adc
mov
push
jmp
jo
sub
mov
movs
mov
push
icebp
mov
out
cmp
mov
mov
iret
test
cwde
jge
mov
mov
mul
ins
js
sbb
pop
adc
sbb
mov
sti
lock
repz
mov
mov
xchg
pop
cmp
in
cmc
out
add
cmp
sub
aas
dec
test
neg
in
loop
pushf
test
repnz
and
inc
dec
popf
pusha
or
dec
fsub
mov
std
jne
mov
dec
inc
in
ret
in
lea
ds
jns
std
jne
out
out
mov
sub
retf
pop
stos
pop
je
dec
jb
hlt
ds
mov
loopne
aaa
dec
ja
fisubr
pop
cmps
or
in
imul
or
mov
or
xor
sbb
sbb
test
or
pop
jl
stos
pop
sbb
cwde
movs
adc
jns
js
cdq
gs
inc
test
cmp
mov
movd
jb
imul
clc
frstor
aad
mov
pusha
xlat
dec
push
adc
push
jbe
jmp
mov
xlat
clc
or
and
xor
ins
outs
(bad)
out
push
ja
fdivr
push
js
test
inc
bound
jl
arpl
mov
mov
xchg
test
jmp
jmp
(bad)
icebp
add
mov
xor
sub
lods
pop
leave
fnstenv
lahf
imul
mov
stos
repnz
sub
cmp
sbb
push
ret
es
mov
sbb
inc
popf
push
mov
dec
(bad)
xor
push
int3
mov
(bad)
mov
test
nop
punpckhbw
adc
jo
mov
or
test
ss
(bad)
dec
add
outs
repz
cs
and
fisubr
adc
(bad)
xchg
fadd
dec
mov
sub
pop
dec
adc
sbb
inc
add
fs
inc
xor
and
sbb
cmp
push
int3
mov
jnp
gs
fsub
ret
rol
mov
inc
int
bound
out
jo
dec
adc
inc
jbe
push
cmps
retf
jp
or
adc
and
cli
mov
jbe
cmps
jl
fld
mov
test
ret
cli
popa
loop
call
dec
mov
inc
std
ds
fdivr
jmp
scas
lahf
ror
adc
mov
ret
pop
cmp
hlt
push
mov
sbb
out
ja
jle
mov
add
add
push
pop
sub
inc
jae
mov
cmp
in
jg
in
sbb
int3
dec
in
or
into
outs
(bad)
mov
jb
add
add
mov
mov
data16
fnstenv
cmp
jl
bound
aad
bound
stc
shl
jne
xchg
xchg
popa
loopne
movs
iret
dec
jg
and
mov
mov
ins
add
cli
or
adc
xchg
inc
jae
add
scas
xor
xor
sbb
(bad)
mov
(bad)
push
mov
arpl
mov
inc
mov
sbb
jg
aas
jle
hlt
outs
jne
lock
or
enter
xor
dec
stos
mov
xor
ficom
dec
push
or
rcr
jns
xor
loopne
sub
repnz
sbb
jle
popa
retf
mov
add
mov
jo
xchg
ins
shl
int3
test
mov
sbb
retf
jmp
dec
push
cmps
repnz
xor
mov
gs
pusha
mov
into
test
xchg
outs
jmp
lods
inc
or
and
pusha
inc
ds
pop
add
cld
mov
outs
push
ror
into
stc
mov
cdq
jecxz
out
mov
inc
popa
adc
cmp
push
inc
adc
in
adc
rcl
sti
jmp
stc
enter
pop
push
mov
cmp
mov
not
sub
pop
icebp
inc
mov
lea
push
lds
xchg
es
pop
or
dec
ss
in
(bad)
outs
lds
loop
sahf
jp
jl
mov
cmp
dec
(bad)
in
and
(bad)
push
aas
bound
pushf
sub
lahf
(bad)
xchg
pop
mov
add
xchg
xor
mov
daa
outs
mov
pop
call
idiv
jns
aas
pop
mov
dec
or
xor
test
dec
rcl
jno
cmp
shl
cmps
fimul
inc
pop
aad
mov
inc
xor
inc
les
sub
es
movs
inc
push
(bad)
aad
dec
sbb
jmp
push
sub
int3
mov
ins
sub
in
jmp
dec
call
test
ds
call
xchg
frstor
mov
int3
and
out
cli
les
xor
cmp
push
cdq
push
mov
adc
shr
add
and
pop
ror
mov
cmps
cmps
cmp
xor
daa
xor
in
jno
pop
ja
sbb
push
jecxz
sub
outs
mov
xchg
enter
and
mov
dec
out
mov
(bad)
out
leave
cdq
push
mov
aas
dec
scas
popa
hlt
mov
push
int
seta
mov
je
mov
mov
fstp
je
call
sub
scas
lahf
sbb
imul
into
movhps
push
push
pop
mov
jmp
shr
or
adc
adc
push
or
(bad)
aam
add
mov
popf
add
faddp
sub
pop
dec
sbb
inc
fcomp
test
xchg
movs
or
pop
bound
xchg
outs
mov
pop
add
mov
(bad)
xchg
adc
rol
cmp
mov
mov
outs
test
lds
leave
popf
mov
pop
fs
and
push
aad
inc
inc
mov
lds
push
inc
cmp
movs
call
mov
test
ins
dec
daa
mov
xor
lods
dec
jle
sahf
add
and
div
arpl
ret
push
out
scas
and
ja
cli
pusha
es
test
movs
push
in
sbb
pop
ja
test
ret
mov
push
loop
dec
sub
push
(bad)
stos
mov
outs
and
js
mov
xchg
add
imul
mov
pop
outs
fmul
rcr
mov
sets
adc
popf
pop
int3
mov
(bad)
rol
xchg
xchg
mov
int
sbb
(bad)
ss
enter
jno
js
inc
adc
imul
mov
push
xorps
dec
stos
aaa
mov
xlat
inc
lahf
inc
sti
gs
push
dec
xlat
dec
adc
inc
mov
movs
outs
pop
xchg
jge
push
xor
aaa
or
in
dec
add
ss
loope
lea
inc
or
fsubr
push
add
aas
mov
adc
scas
pop
jmp
lea
push
cwde
popa
mov
cwde
pop
sbb
retf
test
push
jecxz
loopne
je
(bad)
aam
xor
repz
mov
sbb
jno
add
imul
sbb
inc
outs
add
inc
push
out
sub
pop
pop
xchg
sub
out
lahf
dec
in
das
dec
and
ret
cmc
icebp
test
nop
pop
std
adc
mov
aad
add
retf
xchg
imul
xor
rdtsc
xchg
lea
pop
imul
test
push
xchg
pop
cmps
and
pop
push
xchg
fld
inc
stc
inc
sar
jb
add
(bad)
pop
fist
nop
pushf
or
aam
ret
je
sbb
sahf
sub
nop
call
dec
xor
mov
idiv
mov
adc
jne
jle
jae
in
fld
pop
and
xchg
nop
rcr
data16
fsub
lods
mov
xchg
or
aas
mov
loopne
dec
aad
xor
inc
xor
jle
repnz
mov
daa
and
pop
in
sbb
dec
inc
cmp
loope
sub
dec
and
push
or
mov
dec
mov
mov
mov
pop
add
in
jp
mov
sub
ficomp
stos
and
int
dec
inc
xchg
fld
retf
lahf
pushf
sbb
jg
inc
or
xchg
ror
dec
push
sbb
inc
call
pusha
and
stc
jae
(bad)
ins
mov
aas
push
jecxz
mov
adc
es
dec
add
xor
icebp
add
cmc
mov
nop
and
push
jl
movs
(bad)
xor
pop
not
retf
cmp
mov
(bad)
lods
adc
je
imul
jmp
fnsave
push
in
jmp
pop
add
sbb
or
lock
sbb
jns
ins
pop
dec
xchg
test
lahf
pop
jmp
cld
xor
mov
mov
pushaw
sub
shr
and
sub
call
sbb
fsub
ds
or
ss
sub
repnz
pop
inc
mov
jge
cmp
loop
call
frstor
jno
(bad)
scas
retf
push
fsave
sub
or
ins
or
clc
pushf
das
ret
into
mov
fbld
sbb
mov
mov
inc
pushf
inc
leave
stc
cmp
scas
int3
pop
loopne
(bad)
jge
mov
inc
hlt
xchg
push
inc
scas
int
xor
xor
mov
lds
jp
sub
mov
into
lds
sbb
and
daa
push
xor
popf
fbstp
xor
cld
inc
pop
sahf
mov
sbb
sti
lds
in
fcomp
out
call
sar
repz
xor
pop
pop
jecxz
sbb
ins
xor
popf
sub
pop
enter
cmc
pmulhw
mov
mov
jo
or
lock
repz
mov
bound
mov
std
fcomip
mov
jne
jbe
das
inc
mov
aas
test
sub
js
fsub
dec
(bad)
neg
repnz
sbb
fxch
retf
add
xchg
in
clc
je
mov
in
in
dec
xchg
out
xchg
mov
xor
shl
mov
mov
iret
lock
mov
dec
add
rcl
pop
cmps
je
loopne
ret
loop
psubw
ret
in
aad
ror
fwait
cmp
icebp
mov
call
sbb
cmp
dec
add
or
add
test
ds
dec
retf
mov
cmps
addr16
ucomiss
sub
sub
test
cmps
imul
rcr
leave
mov
sbb
cmp
dec
jb
or
pop
into
scas
test
cmp
sbb
es
xchg
movs
lahf
add
(bad)
pop
mov
dec
std
inc
or
gs
mov
push
inc
clc
adc
mov
gs
aas
add
fistp
xchg
add
in
mov
mov
pop
cmp
xchg
stos
jnp
in
jecxz
and
movs
jbe
es
test
int
fimul
fwait
hlt
cwde
or
out
addr16
ss
and
cmp
icebp
mov
mov
shl
lock
pop
fldcw
(bad)
mov
fld
movs
inc
out
rcr
js
pusha
mov
jbe
sti
retf
pop
(bad)
sub
inc
enter
cmps
xor
cmps
test
or
repnz
push
ins
jno
cmp
ins
or
add
in
cmp
inc
cmp
pop
xor
shr
push
push
adc
in
test
hlt
popf
lock
and
imul
pop
mov
and
clc
mov
mov
mov
add
lods
nop
sub
ja
jmp
pop
mov
int3
gs
pop
aas
mov
scas
sbb
jb
pinsrw
outs
js
(bad)
dec
push
push
addr16
dec
add
mov
add
jle
aam
inc
ret
les
int
cmp
aad
data16
push
push
mov
pop
xchg
daa
lea
sti
hlt
mov
sbb
cmps
sbb
mov
fist
inc
inc
mov
xor
ins
retf
imul
jle
sbb
sahf
inc
stc
(bad)
mov
cmps
int3
xchg
loope
retf
out
dec
add
ret
cdq
cmp
sbb
sbb
mov
pop
aad
fisttp
out
cs
ja
enter
pop
stos
sub
sar
hlt
out
imul
cmp
not
xchg
push
rcl
retf
mov
pop
or
xchg
movs
jle
jne
mov
ins
bound
ja
stc
(bad)
rcl
mov
in
xchg
mov
test
(bad)
shr
and
shr
lds
pop
mov
jg
mov
mov
loope
pop
jl
std
mov
inc
adc
xchg
xchg
je
int
cld
clc
js
add
fist
int3
mov
pop
leave
inc
xor
ds
dec
fucom
mov
cmp
test
popaw
loop
mov
adc
test
outs
jl
(bad)
movs
daa
cli
mov
inc
and
(bad)
setge
pop
xchg
add
fldl2e
push
nop
mov
jbe
or
jl
outs
(bad)
xor
(bad)
jmp
loop
stc
pushf
imul
cli
not
jp
push
push
jmp
mov
jbe
(bad)
fincstp
jmp
xor
popa
mov
and
loope
in
add
pop
lods
cmp
mov
cmp
lods
stos
test
aaa
(bad)
dec
mov
jbe
dec
inc
mov
mov
popa
xchg
jno
cmp
pop
mov
imul
sti
sahf
xor
sub
iret
pop
fsubrp
dec
mov
repnz
push
adc
mov
lds
sti
addr16
xor
dec
and
jbe
or
cs
sbb
inc
push
cs
mov
add
enter
sub
and
inc
inc
cmp
addr16
test
sbb
push
aas
ins
fadd
mov
cmc
push
xlat
pop
push
stos
dec
sbb
jmp
fbstp
add
sub
xchg
and
aaa
mov
mov
movs
loop
adc
dec
(bad)
fistp
adc
add
lods
adc
int
push
into
out
sub
je
ret
sub
scas
int3
outs
xchg
call
mov
nop
sub
inc
xchg
ins
out
xchg
cmp
fistp
aaa
fidivr
inc
mov
addr16
mov
fxch
pop
add
push
and
sbb
and
leave
rcl
stos
push
or
pop
add
inc
dec
sub
hlt
add
add
sbb
sbb
mov
mov
popa
ja
lock
ficomp
adc
cmp
out
lods
mov
bound
rol
fs
fisttp
gs
jo
cmp
mov
mov
pop
push
clc
adc
mov
test
mov
push
jecxz
mov
jnp
xor
loop
adc
push
bound
popa
sahf
mov
lea
mov
and
fsubr
push
sub
adc
out
(bad)
ficom
les
add
xchg
ins
sar
cdq
test
sub
xchg
cld
sub
mov
imul
dec
pop
es
jmp
ins
lock
scas
cmp
mov
(bad)
cli
lods
fs
cmp
int3
jnp
int3
jge
mov
sub
inc
shl
inc
not
pop
xor
xchg
or
adc
pop
ror
xchg
xchg
ror
mov
outs
sub
enter
lods
or
sar
bound
mov
dec
jg
fidiv
push
or
xchg
mov
adc
mov
xor
shl
add
ret
aaa
xchg
dec
push
and
cmp
not
push
mov
inc
stc
jnp
daa
or
repnz
mov
sahf
imul
mov
jmp
xchg
iret
sub
pop
popa
push
adc
push
ret
(bad)
push
lods
mov
shl
fs
xor
sbb
inc
push
jl
in
in
repz
add
sub
jp
xchg
mov
add
faddp
add
adc
int
sub
clc
inc
call
or
sub
push
cmp
inc
jne
jecxz
xor
xor
ret
mov
push
pop
mov
sub
cmp
jbe
inc
aaa
dec
xchg
fcmovu
jno
dec
mov
(bad)
int3
dec
cdq
push
bound
out
mov
outs
rcr
ret
add
mov
push
ja
xor
aad
popa
shl
dec
add
inc
inc
dec
ficom
jo
xlat
cmps
imul
leave
aam
add
clc
mov
(bad)
out
stos
xor
in
das
push
mov
outs
mov
cmp
or
clc
jle
lods
push
xor
and
pop
push
outs
iret
iret
inc
sub
xor
jo
xchg
xchg
mov
xchg
std
scas
xchg
bound
mov
jle
adc
pop
fdiv
call
xchg
xor
adc
mov
push
and
push
(bad)
rol
or
es
movs
(bad)
data16
and
or
push
push
das
push
push
inc
out
or
inc
lds
cli
jne
push
popa
test
sbb
ficom
int3
add
rol
pop
push
adc
loop
lock
rcr
sbb
xor
sahf
div
stc
lock
repz
jb
ret
loopne
nop
inc
and
inc
xor
add
push
dec
or
test
jmp
push
call
aaa
mov
into
inc
pop
inc
and
push
push
stos
sahf
lods
cmp
pop
mov
bound
fidiv
mov
cmp
sub
fld
and
movs
(bad)
sub
adc
ret
cwde
sub
xchg
mov
rcr
pop
adc
add
and
lea
inc
mov
ds
lock
and
mov
fimul
das
in
inc
retf
cmps
popa
jl
lock
lock
test
xor
bound
icebp
mov
fidiv
bound
dec
or
popf
movs
(bad)
xor
sub
nop
mov
mov
mov
clc
push
push
dec
xchg
mov
sbb
xchg
mov
out
test
retf
mov
sub
aam
mov
data16
push
fisubr
sbb
leave
mov
xchg
pusha
lea
xchg
add
inc
and
stos
dec
lods
repnz
(bad)
addr16
mov
xor
(bad)
xor
fist
cmp
inc
mov
push
dec
cwde
rcr
loope
pop
fwait
xchg
cld
push
push
sar
repz
lds
sub
stc
jp
add
mov
sub
sar
in
jo
loope
ss
sub
sbb
dec
or
icebp
imul
mov
clc
int3
cmps
(bad)
push
fsub
sbb
xchg
lds
cmc
add
sub
adc
mov
dec
jo
rol
outs
mov
(bad)
xor
mov
ja
push
sub
adc
repz
mov
push
outs
pavgw
ins
cwde
imul
rcr
inc
sbb
xor
stos
nop
xchg
push
pushf
dec
das
repnz
ins
pop
das
inc
adc
mov
inc
daa
test
push
out
inc
out
stos
cmp
xchg
pop
mov
dec
mov
add
push
add
push
jbe
or
mov
push
jmp
loope
pop
je
shl
push
test
into
loope
mov
jb
in
stos
sbb
jb
mov
and
fadd
sub
jl
inc
inc
std
pop
push
outs
in
repnz
seta
imul
into
cmps
adc
jmp
xchg
add
bound
fisttp
dec
pop
jg
mov
aam
add
in
xchg
xchg
xchg
inc
ins
adc
es
out
xor
dec
mul
repz
ins
dec
shl
ins
retf
pop
repnz
jmp
call
push
sub
(bad)
(bad)
loope
mov
sub
sub
mov
pusha
mov
ret
mov
rcl
add
mov
dec
add
sub
sbb
in
mov
or
leave
aad
or
ss
jge
call
pop
lds
jb
fwait
pop
cmp
pusha
cmp
cmp
inc
xchg
je
or
mov
idiv
das
fstp
cmps
inc
adc
std
mov
test
sub
and
lea
mov
jmp
adc
outs
mov
adc
les
push
push
mov
fist
dec
jno
(bad)
repz
mov
test
repz
push
ds
sub
push
mov
shl
int3
imul
in
fisub
js
sbb
sahf
push
adc
scas
xchg
fcomi
pop
push
jbe
out
addr16
or
test
xor
add
ret
mov
bnd
xlat
mov
lods
mov
leave
and
mov
jns
fist
fild
jns
inc
add
mov
repz
ja
mov
inc
add
and
gs
iret
imul
sbb
daa
push
adc
add
push
and
fucomp
stos
jno
mov
hlt
jns
push
xchg
ror
movs
push
sbb
mov
and
push
jl
icebp
das
push
cmp
xor
in
out
xchg
xchg
and
adc
lahf
add
push
in
repnz
or
add
add
inc
cwde
clc
aas
sub
pop
jg
sbb
fnstsw
inc
push
pop
call
xchg
nop
jne
fwait
aad
xlat
mov
or
scas
lds
sbb
push
ins
mov
aaa
push
fidiv
push
in
jb
mov
sbb
push
dec
nop
cs
call
inc
iret
(bad)
xchg
dec
repz
jae
or
mov
fiadd
arpl
sub
mov
and
xor
repz
sti
inc
test
(bad)
mul
sub
clc
add
xchg
pop
mov
jle
add
scas
pop
fbstp
test
jp
mov
stc
mov
lea
(bad)
popa
add
gs
cmovb
xlat
enter
jmp
icebp
icebp
mov
sub
adc
cmps
jge
aam
retf
push
(bad)
nop
adc
cdq
push
cld
lods
cmp
push
push
sahf
inc
dec
push
adc
shl
add
sub
in
lock
fcomp
jmp
xchg
and
mov
mul
or
faddp
pop
jg
cmp
add
fidiv
xor
loope
and
xor
or
xor
pop
cmps
mov
cli
sbb
arpl
and
mov
adc
lds
sub
pop
jns
cdq
(bad)
stos
and
hlt
mov
lahf
test
pusha
xor
bnd
movs
dec
outs
nop
mov
loopne
push
fcmovu
iret
dec
movs
inc
sbb
cmc
pop
mov
stc
in
repnz
sub
fiadd
loope
dec
(bad)
out
fbstp
in
pop
mov
push
add
in
push
pushw
lea
cmp
(bad)
sub
push
sub
fidiv
pop
retf
jbe
sar
out
mov
(bad)
cmp
xchg
js
or
jmp
cmp
pop
mov
fs
sub
stos
clc
sbb
or
nop
push
cmp
(bad)
adc
sbb
arpl
icebp
sub
mov
sub
xor
and
stos
(bad)
pop
xor
xor
(bad)
sbb
sahf
aas
sbb
push
jmp
dec
movs
jp
inc
enter
push
xor
aad
test
(bad)
and
xchg
aad
cmp
rcr
mov
jno
mov
push
aas
pusha
cmp
mov
jecxz
and
xlat
imul
(bad)
cmp
inc
dec
int3
hlt
out
or
pop
enter
imul
sbb
scas
fwait
inc
mov
aas
ins
xchg
into
mov
dec
pop
add
aad
popa
sti
cwde
add
mov
push
add
sbb
or
ins
mov
sub
mov
test
or
mov
push
xchg
ins
add
iret
xchg
mov
cmp
jg
test
inc
mov
xchg
popa
jo
mov
jmp
adc
xchg
fisub
fidiv
push
ret
(bad)
lahf
add
cmps
sub
les
pushf
mov
call
or
sub
mov
in
repnz
sub
mov
sbb
push
scas
lods
test
lods
jge
and
fistp
cmp
fwait
jmp
pop
jecxz
xchg
ret
div
lock
call
push
xchg
je
adc
into
push
ret
mov
dec
adc
xchg
dec
or
hlt
mov
dec
jmp
loopne
(bad)
cli
sahf
data16
push
dec
adc
je
cmc
fnstsw
stc
mov
cmp
push
add
fs
fidiv
mov
sbb
call
xchg
(bad)
les
daa
clc
and
femms
stc
jnp
fdivr
outs
add
rol
data16
sar
xor
enter
sbb
push
jno
inc
call
jl
adc
fmul
(bad)
sar
or
sbb
call
cwde
xor
(bad)
nop
jnp
sbb
inc
mov
dec
loopne
cld
fidiv
xchg
inc
das
movs
push
dec
test
inc
mov
leave
cdq
xchg
add
mov
loope
rcl
mul
aaa
lahf
adc
sahf
mov
mov
mov
lods
push
aam
inc
inc
test
sub
test
sbb
adc
loopne
add
add
(bad)
shr
push
mov
xor
cdq
or
cmp
jae
jnp
xlat
popf
and
(bad)
push
inc
mov
mov
pop
loope
sbb
enter
dec
jae
sbb
adc
and
cs
mov
das
scas
sub
dec
push
test
sub
rcl
mov
mov
pop
pop
lods
xor
cs
scas
xchg
lods
xchg
lahf
mov
dec
inc
pop
loopne
out
fisttp
xchg
scas
outs
call
push
dec
dec
out
retf
(bad)
daa
add
and
push
push
lock
push
ins
xor
dec
mov
adc
pop
ja
call
je
mov
sub
xor
inc
cmps
fs
mov
push
ffree
push
jp
std
movs
mov
pop
leave
add
dec
mov
push
jmp
loop
push
mov
leave
clc
jo
or
dec
mov
ds
sbb
jle
sbb
mov
mov
shl
mov
push
test
iret
aaa
cmp
xchg
jnp
or
sbb
retf
dec
icebp
add
pop
es
je
jb
adc
(bad)
bound
and
xlat
or
xchg
sar
loop
stos
mov
add
and
ret
mov
jne
dec
out
inc
and
jmp
sub
or
inc
mov
dec
xor
ret
adc
dec
mov
inc
pop
xchg
outs
dec
loope
cli
mov
xor
inc
push
push
jecxz
inc
fsub
daa
ret
outs
test
ja
sub
cmp
mov
(bad)
das
xchg
or
sbb
gs
jb
fs
les
sbb
jge
push
pop
xchg
test
ja
js
mov
push
mov
push
push
pop
xchg
out
push
rcr
stos
outs
push
sahf
test
into
(bad)
and
sub
(bad)
call
lahf
(bad)
loopne
pop
pop
(bad)
fsub
(bad)
lods
sub
fld
sti
mov
ror
cmp
stos
mov
or
or
ins
xor
adc
leave
mov
adc
and
repnz
lock
ins
out
mov
ds
test
in
mov
xchg
aaa
adc
or
mov
dec
fidiv
pushf
jmp
or
pop
cmp
mov
pop
fld
add
loope
dec
cmp
and
xchg
sar
mov
xchg
js
(bad)
je
cld
xor
shl
lea
repz
test
cmp
out
(bad)
lahf
dec
xchg
in
sahf
mov
rcr
stc
popa
mul
add
sbb
jbe
je
rcl
cdq
cmp
data16
jbe
cs
movs
sar
jnp
fs
mov
ss
xor
mov
sar
cmps
add
xchg
fadd
imul
xchg
sti
or
data16
mov
inc
cmp
fistp
(bad)
fisubr
xlat
iret
sbb
push
cmp
mov
stos
or
lods
pop
repz
and
mov
movs
dec
sub
mov
jl
std
popf
ss
jno
icebp
out
fisub
call
xchg
mov
clc
out
imul
mov
test
jl
fsub
ins
sub
aaa
inc
jne
enterw
sbb
pop
or
rcl
sbb
sbb
jge
sub
lahf
movs
jl
cmp
cmp
inc
add
mov
jp
sub
mov
jns
lods
push
jmp
hlt
xor
mov
push
xor
ins
push
jae
scas
je
in
out
cwde
cmp
jecxz
inc
adc
repnz
jp
sbb
xlat
cwde
or
dec
jns
xchg
lock
adc
fmul
outs
sti
clc
(bad)
hlt
cmc
(bad)
ins
mov
fiadd
push
push
cmc
ja
repz
push
xor
mov
jbe
cmp
sbb
inc
ja
fistp
xor
pop
mov
push
lahf
and
inc
sub
push
mov
adc
sti
sub
fiadd
jb
or
out
pop
gs
mov
test
arpl
movs
xchg
int
test
jb
add
mov
jl
push
scas
stos
addr16
mov
mov
jbe
out
sub
sub
and
push
xor
fld
movs
sub
dec
inc
daa
xchg
mov
cwde
sbb
pop
adc
sub
les
js
jmp
xlat
popa
sub
cmp
xchg
leave
inc
clc
adc
push
sub
mov
scas
pop
rep
jno
or
or
mov
test
mov
xor
(bad)
adc
pop
ja
sbb
jb
dec
xchg
fwait
ins
movs
clc
ss
lahf
hlt
pop
test
dec
sbb
or
out
loopne
jno
js
dec
imul
sbb
add
jp
out
fs
int
sub
clc
ret
pop
mov
test
pop
jmp
repz
fistp
xchg
and
imul
test
lock
or
and
pop
addr16
sbb
cmc
or
xchg
call
pop
ins
xchg
or
xor
fistp
lock
ror
xchg
sbb
cs
mov
or
mov
out
mov
fiadd
cmp
adc
dec
and
cmps
xchg
inc
mov
arpl
xchg
loope
pop
mov
nop
mov
outs
call
xchg
in
out
sar
enter
outs
loop
mov
mov
loope
aam
aad
mov
dec
out
add
push
mov
loope
jmp
mov
xchg
loopne
mov
test
scas
out
or
mov
mov
data16
sub
xchg
ja
test
pushf
fidivr
pop
ins
cwde
call
cli
(bad)
sar
inc
jne
inc
adc
xchg
cmp
sub
lds
fstp
sbb
aam
mov
lahf
mov
jne
jecxz
mul
mov
aas
sbb
inc
fnstcw
fs
mov
sti
cmp
das
cmp
pushf
push
sbb
adc
call
je
xchg
cmc
into
and
fwait
lahf
jmp
lahf
jle
inc
sar
aam
aam
inc
sahf
movs
sub
fcomp
pop
add
imul
neg
add
test
dec
jo
dec
fisubr
mov
xor
mov
push
idiv
pop
pop
outs
daa
sub
jge
stos
push
imul
or
sbb
ds
inc
mov
mov
inc
add
pop
sub
outs
cld
imul
fwait
aaa
add
push
ja
das
sub
and
xor
std
or
(bad)
push
cwde
ins
shl
cmp
clc
fs
xor
ficomp
retf
xchg
stos
ret
pop
hlt
push
das
rcl
or
cmp
mov
cmp
push
mov
pop
mov
nop
icebp
ins
sub
mov
and
sbb
cmp
or
movs
fs
sub
jne
in
or
dec
sub
imul
sbb
or
test
pop
push
ss
(bad)
fdiv
pop
xchg
add
outs
enter
cmps
mov
sti
mov
jge
js
out
mov
jb
data16
sub
mov
cmp
les
mov
in
xchg
pop
dec
jle
dec
or
cmc
scas
xlat
push
push
sar
nop
add
arpl
jne
mov
lods
fsub
jne
loop
test
adc
les
aas
fwait
mov
or
xor
inc
dec
imul
mov
inc
in
(bad)
push
jns
pop
xchg
scas
add
dec
jge
into
outs
fcmovnbe
add
jg
jl
jmp
dec
popa
jo
push
imul
mov
sub
and
mov
mov
mov
pop
test
inc
adc
pop
addr16
inc
iret
shr
push
outs
push
sbb
push
or
fild
lahf
xchg
add
in
mov
push
mul
ins
ss
jo
(bad)
in
out
adc
lock
pushf
(bad)
jns
cli
adc
mov
and
inc
call
xor
ret
ficomp
repnz
inc
pop
push
imul
nop
test
jb
xchg
cmp
jnp
dec
or
cmp
add
lods
ret
adc
inc
int
inc
inc
add
dec
ror
mov
retf
call
mov
jnp
sub
add
cld
or
jbe
mov
xchg
stos
enter
ss
add
add
gs
movs
js
hlt
jp
push
cli
pushf
jb
into
pop
pop
mov
xchg
in
cmp
loop
or
movs
mov
xor
add
or
push
in
int3
mov
or
ins
gs
neg
jle
inc
xor
int3
popf
mov
mov
in
inc
mov
(bad)
fstp
xchg
push
dec
and
in
jg
gs
lahf
fsub
jns
pop
inc
stc
mov
mov
dec
scas
adc
sub
adc
mov
icebp
shr
arpl
js
enter
in
dec
dec
xor
inc
ret
cwde
punpckhdq
fistp
repz
jg
dec
rcr
xchg
int3
jne
cmp
xor
or
ins
push
cld
jmp
shr
int
add
xor
xchg
je
xchg
fcom
adc
mov
clc
sub
and
xchg
icebp
jne
stos
dec
cmps
push
xchg
push
ins
(bad)
in
rcr
jmp
sbb
(bad)
in
lods
jbe
inc
enter
jne
ds
mov
data16
cmp
popa
popf
aam
xchg
daa
frstor
and
mov
xor
xchg
pop
test
in
div
ror
cmp
and
xchg
in
jae
arpl
and
dec
cmp
mov
cmp
xchg
shl
jne
jge
retf
adc
xchg
sti
cmp
mov
cmc
cmp
add
mov
sbb
cmps
cmps
sub
mov
scas
arpl
in
lahf
push
mov
and
push
stos
test
adc
inc
sti
xchg
mov
push
into
jmp
add
dec
pop
push
loop
jns
mov
jbe
xor
fucomi
dec
loop
and
mov
sbb
xchg
stos
jl
pusha
hlt
sbb
sub
sbb
call
xchg
or
jmp
sahf
push
imul
xchg
lods
icebp
test
rcr
pop
ja
push
repz
retf
cmp
mov
push
sub
push
push
sbb
fisubr
mov
int3
mov
aam
mov
xor
lock
fst
jnp
xchg
lods
fsubr
lock
popf
sbb
adc
test
jge
jnp
sub
jae
mov
mov
pop
cld
bnd
out
cmp
or
sbb
mov
mov
push
int3
lock
ss
add
fs
lods
cmp
add
add
adc
or
retf
je
mov
push
cmp
mov
movs
and
icebp
inc
or
out
fisttp
or
call
adc
mov
fs
aas
jmp
xlat
hlt
fcmovu
pop
pop
jl
mov
push
cdq
jmp
xlat
shr
sbb
mov
lds
call
sti
or
cdq
sub
popa
mov
and
cwde
xchg
xor
adc
mov
mov
xlat
add
out
mov
mov
jmp
test
mov
movs
lods
dec
pop
cmp
sub
rcr
jmp
mov
adc
mov
or
arpl
sub
xchg
aaa
and
cwde
loopne
pusha
xchg
mov
mov
sbb
(bad)
js
or
mov
and
push
mov
(bad)
jae
and
jg
in
pop
popa
sbb
mov
dec
loop
(bad)
shr
in
fidivr
push
jno
rcr
inc
and
mov
push
cmp
ficomp
add
sti
leave
mov
jno
jno
adc
ins
ret
dec
inc
stos
xchg
lea
cwde
xchg
cmps
(bad)
cwde
int3
push
jg
adc
pop
jecxz
mov
cmc
dec
jno
or
xchg
xchg
xor
mov
mov
cli
bound
pushf
jae
enter
dec
scas
or
stos
push
mov
ret
shl
adc
call
xchg
outs
test
cmps
retf
in
fcom
mov
push
out
adc
lods
lock
xchg
(bad)
adc
pop
lds
fmul
icebp
std
mov
xor
popf
sbb
loopne
shl
mov
fdivr
inc
mov
jecxz
and
aas
frstor
pop
or
jmp
adc
ja
lea
mov
mov
pop
dec
dec
in
mov
mov
jmp
sahf
cmp
retf
mov
into
jnp
dec
in
sbb
sub
sub
and
and
clc
data16
dec
mov
popf
outs
stos
add
lahf
dec
leave
jne
push
sbb
mov
gs
jb
mov
loopne
add
and
jae
fsub
mov
and
xchg
adc
outs
mov
fwait
lods
xor
sbb
sbb
dec
push
call
mov
or
inc
xchg
or
popa
cld
xchg
ins
cmps
(bad)
cmps
mov
sbb
xor
inc
fsub
sar
clc
mov
or
push
dec
shl
push
or
lock
sub
mov
dec
fldcw
pushf
jge
pop
fld
mov
retf
sbb
and
dec
fs
push
inc
adc
cmp
into
lahf
enter
mov
jne
mov
ds
pop
mov
stos
pop
movs
xor
adc
mov
inc
rcr
push
loop
xchg
jnp
jmp
in
in
cwde
or
loopne
test
or
lods
pop
(bad)
add
int3
mov
popa
lock
pop
adc
lock
jnp
ror
call
xor
xchg
(bad)
retf
sub
(bad)
jmp
outs
and
fs
and
or
bound
out
jecxz
jo
(bad)
lock
imul
lods
push
inc
cmps
mov
pop
sub
pop
test
ret
outs
mov
jb
push
sbb
inc
push
xchg
pop
push
jg
(bad)
mov
cli
xchg
cmp
fs
imul
cmps
sbb
mov
shl
jl
fnsave
mov
sub
sti
(bad)
mov
jnp
stc
dec
neg
push
in
mov
sub
scas
rcl
int
xchg
jns
mov
jg
out
ret
cmps
sub
mov
lds
jo
cmp
outs
ja
mov
ds
pop
cld
mov
xchg
scas
test
dec
mov
and
and
movs
pop
adc
test
lock
ror
cmp
pop
add
scas
pushf
adc
adc
addr16
jle
add
jno
xchg
jmp
jo
cmps
sbb
and
(bad)
adc
jne
out
xchg
jb
sbb
cli
clc
sbb
push
dec
pushf
inc
xor
inc
iret
mov
inc
lods
sti
mov
daa
mov
sti
mov
and
jle
mov
enter
test
(bad)
cmc
jb
cmp
cmc
mov
mov
dec
inc
lds
bound
ins
nop
cli
lahf
jmp
rcr
std
lahf
xlat
cwde
xchg
pop
inc
cmps
imul
add
test
pop
xlat
std
mov
int
or
push
sti
add
shl
xchg
int3
pop
or
jge
test
and
daa
jae
or
ins
int3
mov
mov
in
(bad)
cld
shl
pop
mov
or
mov
ds
add
jae
dec
or
push
cmp
outs
lods
aaa
xchg
rol
lock
fcom
sbb
ins
dec
(bad)
pusha
test
fadd
loopne
loope
out
jno
push
out
cld
in
add
mov
lock
cwde
or
push
mov
cwde
sub
fild
ins
test
mov
int
not
xchg
cdq
dec
sbb
ins
xor
mov
pop
mov
xor
mov
ja
ss
jne
dec
pop
nop
js
pop
cmps
pop
adc
push
mov
in
retf
scas
jmp
je
lds
sub
sahf
jmp
out
adc
jmp
daa
push
movs
dec
enter
movs
sub
push
sbb
dec
shr
aaa
call
push
pop
arpl
xchg
sbb
cmp
retf
and
sub
add
add
pavgb
fld
or
int3
fdivr
pop
mov
pop
adc
mov
(bad)
jge
sub
sbb
mov
add
retf
inc
adc
pop
sbb
push
call
pop
dec
sub
and
sbb
xor
push
in
inc
xor
mov
xchg
mov
and
stos
loope
imul
int
(bad)
push
scas
shr
and
sbb
inc
dec
dec
pop
cmps
outs
jp
inc
or
fldpi
leave
retf
icebp
stc
(bad)
mov
sub
inc
loope
idiv
or
xor
add
iret
icebp
scas
sti
ja
pop
mov
into
add
addr16
cmp
imul
cdq
int
call
hlt
sti
mov
ficom
cmp
cmp
js
(bad)
imul
fcmovb
outs
aad
add
aad
cmp
cmps
jb
mul
hlt
jl
fscale
inc
mov
int
and
cmp
mov
xchg
cld
imul
jg
retf
or
fld
ror
mov
jns
dec
sub
dec
ds
call
sbb
xchg
icebp
popf
add
in
pop
cmp
pop
pusha
inc
jge
pop
dec
or
jmp
adc
pop
jecxz
dec
test
dec
push
inc
cdq
mov
in
dec
mov
das
mov
mov
repz
out
pop
inc
mov
out
xor
mov
lea
ins
inc
adc
test
dec
adc
cmp
out
test
gs
xor
jb
hlt
xor
mov
or
add
dec
sbb
jbe
cmp
sub
or
jae
mov
fiadd
in
add
stc
dec
(bad)
push
daa
sbb
mov
adc
in
add
daa
out
out
fwait
mov
stos
xchg
ret
inc
enterw
sahf
add
mov
dec
cmps
pop
adc
cli
sbb
ret
mov
shl
jns
popf
es
int3
repz
and
push
mov
out
push
mov
dec
retf
mov
out
push
adc
icebp
fcomp
in
mov
call
int
inc
into
adc
in
or
jbe
jns
sub
dec
add
les
push
push
stos
scas
jmp
das
dec
and
adc
sub
xchg
sub
sar
push
pop
or
mov
mov
adc
push
mov
adc
mov
into
fs
and
pop
aad
aas
retf
lock
push
out
(bad)
inc
pop
(bad)
jp
cmp
pop
push
cmp
loop
cwde
xchg
cld
in
dec
mov
ss
mov
scas
aad
mov
add
mov
cmps
dec
mov
lods
xor
mov
cmp
(bad)
xchg
movs
pop
xor
inc
sti
sti
sahf
jb
jne
sbb
cmp
nop
fs
push
add
loop
pop
dec
pop
xor
jne
or
mov
or
hlt
xchg
dec
or
xor
mov
stos
or
mov
shr
or
adc
mov
push
enter
mov
sar
fldz
gs
fldcw
ficom
inc
jnp
sub
movs
xchg
cmps
mov
sub
das
cmp
mov
jb
mov
repz
xchg
or
ror
mov
cmp
jbe
aam
pop
pop
imul
jle
jne
dec
dec
jne
xor
(bad)
or
inc
inc
pusha
cdq
pop
shl
cmp
dec
mov
mov
outs
test
sbb
push
mov
sub
(bad)
test
jmp
fdivr
xor
iret
cmp
add
xchg
jnp
cmp
ins
mov
add
xor
shl
imul
rol
fst
fisubr
scas
out
pop
xchg
xchg
pop
ret
in
jmp
jmp
fdivrp
popf
arpl
jmp
mov
adc
gs
rcr
fcomp
jns
push
jae
mov
(bad)
xchg
jge
xor
test
jmp
int
jl
shufps
shl
or
push
out
addr16
inc
cmp
dec
mov
inc
stos
inc
pop
cld
icebp
lock
pop
add
xchg
ja
popf
cmc
xchg
aad
mov
mov
retf
xor
cmp
fist
stc
or
mov
in
movs
adc
mov
push
jns
daa
lea
loope
popf
les
inc
xchg
xchg
xchg
fucomp
adc
add
sub
push
nop
mov
int3
adc
jmp
es
test
popf
or
mov
sbb
xor
jbe
jg
add
dec
dec
mov
mov
pop
out
jg
cmp
aaa
ja
mov
adc
mov
xchg
aas
mov
mov
xchg
ja
sbb
not
(bad)
into
test
test
js
imul
(bad)
mov
hlt
lahf
fsub
mov
inc
cmp
ror
jle
repz
push
int3
ret
aaa
sub
sbb
push
xor
add
cmps
sub
pop
mul
and
ret
mov
sub
movs
fwait
ins
std
test
mov
ins
in
scas
repz
adc
jl
ret
test
imul
jecxz
and
push
mov
push
xchg
shl
pop
dec
mov
movs
push
cmp
mov
fxch
daa
sub
(bad)
sti
pop
inc
jecxz
pop
push
dec
les
mov
mov
cwde
je
jl
push
adc
stc
pop
cmc
rcl
dec
add
stos
pop
mov
mov
lea
neg
(bad)
int
pop
xchg
mov
pusha
xchg
retf
or
shl
dec
enter
sar
mov
cdq
mov
leave
popa
ins
jae
mov
xor
inc
jmp
sbb
jp
leave
pop
int3
enter
nop
sub
xchg
xchg
mov
push
in
mov
inc
das
test
dec
adc
mov
adc
aam
dec
cs
adc
sbb
and
out
add
xchg
or
sub
push
fcom
pop
sub
sbb
push
sbb
adc
stos
and
iret
xor
mov
xor
rol
out
and
rol
pop
push
mov
pop
test
(bad)
shr
jo
shl
adc
ret
mov
int
jmp
cmp
inc
cmp
xchg
jae
add
jl
les
lea
push
(bad)
adc
inc
pop
mov
cmc
jbe
cmp
jmp
inc
sbb
or
push
shl
push
push
rol
sbb
rcl
push
mov
stc
stos
test
test
(bad)
or
and
mov
cdq
pop
pop
out
inc
ret
jge
call
cmove
loope
out
clc
cmps
xlat
lock
fidivr
sbb
mov
leave
xor
scas
push
xor
sub
jmp
jns
ret
in
push
inc
sub
ds
jmp
dec
mov
push
pusha
mov
cmp
cmp
(bad)
stos
cmp
xor
sub
inc
xchg
sti
fist
test
jmp
cmp
or
ds
cmps
jno
imul
mov
mov
aaa
retf
push
sti
aam
cmp
sub
add
cmc
in
(bad)
loop
ret
lods
aas
clc
int
lds
mov
fcom
pop
sbb
jmp
cmp
gs
fstp
loop
movs
clc
test
call
add
pushf
xor
push
je
xor
push
adc
sbb
sahf
cwde
cmp
mov
mov
jmp
ds
push
push
xchg
inc
inc
dec
cmp
shr
or
pop
jne
sub
aad
push
ins
add
and
xchg
mov
add
sbb
sahf
xor
imul
add
sub
dec
ja
enter
pop
imul
and
jbe
xor
push
push
sub
inc
jb
jmp
sti
lods
std
adc
ins
xor
mov
pop
adc
fistp
cs
xchg
ins
hlt
and
icebp
lods
imul
(bad)
scas
inc
dec
inc
mov
adc
pop
pushaw
mov
mov
leave
lods
mov
mov
fld
sub
fistp
inc
xchg
mov
imul
gs
add
outs
adc
icebp
ins
inc
sub
inc
rol
inc
or
or
pop
sbb
clc
sub
enter
inc
cmc
cmp
mov
je
movs
shl
add
scas
xchg
xchg
fsubp
imul
dec
mov
(bad)
test
add
pop
mov
pop
and
sbb
icebp
add
xchg
lock
pop
pop
psrlq
test
frstor
pop
inc
cli
call
js
iret
loope
scas
push
push
lock
pop
retf
adc
arpl
mov
adc
jp
icebp
pop
adc
iret
jg
mov
pop
scas
sub
xor
or
pushf
add
inc
ficomp
outs
scas
fisttp
fwait
or
jmp
iret
dec
jb
bound
nop
movs
(bad)
mov
loopne
push
xchg
jno
ficomp
inc
into
mov
add
mov
mov
icebp
or
push
arpl
jl
fldcw
lock
cli
retf
cmp
mov
push
sub
mov
xchg
mov
jno
mov
sub
push
push
jmp
test
sbb
retf
in
lods
shl
jno
or
sbb
pop
call
xchg
add
test
jmp
shl
xchg
gs
or
ds
mov
(bad)
arpl
sti
jge
gs
inc
cmps
into
inc
jmp
lods
push
(bad)
sbb
adc
push
lods
clc
pushf
in
fwait
jae
es
inc
cwde
loopne
mov
std
fild
fstp
call
sbb
(bad)
loop
cs
daa
xchg
jg
pop
mov
jb
sbb
out
push
rcl
jae
pop
jle
in
sti
cmp
and
push
retf
das
add
or
pushf
xor
pop
and
mov
push
mov
push
sti
clc
add
lock
lea
or
pop
inc
cmp
push
push
xchg
push
and
inc
mov
jnp
sub
or
jae
pop
sbb
and
or
fwait
adc
jl
jae
lahf
jbe
imul
push
pusha
push
xchg
pushf
call
jge
std
jae
lea
sub
jb
imul
mov
and
(bad)
mov
push
enter
in
mov
mov
jmp
jno
mov
xor
cmp
dec
and
rcr
(bad)
imul
jb
adc
js
mov
cs
add
jmp
fst
bound
test
or
jb
nop
sub
test
mov
popa
sub
cld
in
loopne
mov
mov
clc
stc
jmp
or
cmp
popa
loope
mov
push
daa
and
loopne
addr16
jl
(bad)
sar
or
mov
mov
cmps
scas
adc
sahf
inc
mov
jmp
push
jae
dec
lods
fwait
xchg
mov
fiadd
dec
jg
jmp
mov
loop
shr
xor
mov
cwde
aas
frstor
cs
loop
xchg
outs
int
xor
ficomp
(bad)
push
repz
icebp
push
inc
add
jb
aas
leave
out
fldcw
leave
aad
emms
test
cmp
test
mov
fcomp
mov
xchg
cmp
sub
mov
mov
mov
cdq
outs
sar
adc
js
stos
cmp
imul
aas
dec
js
fwait
dec
pop
mov
pop
aam
in
inc
sbb
sub
aam
mov
test
jl
dec
iret
sbb
xchg
xor
and
sbb
mov
and
push
call
jnp
les
rcr
imul
or
sbb
mov
push
test
cwde
pop
pop
push
push
dec
push
mov
add
inc
sbb
std
pusha
dec
xchg
inc
lods
add
jne
mov
loop
mov
in
std
lock
add
jl
test
jb
push
mov
arpl
sbb
ins
hlt
shr
lds
imul
js
movs
cmp
add
mov
popa
dec
jo
jns
loopne
push
(bad)
or
or
scas
ficom
cmc
cmp
scas
adc
imul
ins
fwait
ret
addr16
xchg
adc
sbb
or
stos
pop
mov
sar
out
or
ins
(bad)
aad
jae
lock
imul
dec
cwde
sub
cmp
xchg
jne
sub
lds
and
jo
shr
dec
dec
fiadd
sbb
sbb
aad
adc
fst
or
enter
out
or
aaa
movs
pop
push
push
ret
xor
adc
popa
jl
lock
pop
(bad)
pop
test
xor
pusha
sub
nop
outs
mov
fisttp
mov
mov
mov
rol
add
and
xor
push
push
dec
cmps
(bad)
cld
xchg
adc
retf
or
ficom
inc
sbb
inc
cs
xchg
je
pop
jmp
mov
add
fs
jecxz
inc
lods
ret
fidivr
aam
push
cmp
mov
bound
je
push
pop
hlt
repz
add
or
adc
adc
je
dec
mov
(bad)
cld
(bad)
mov
sti
inc
cmp
mov
inc
test
cmp
or
add
stc
jnp
inc
cdq
push
xchg
mov
sahf
sbb
aas
ja
sub
adc
jo
nop
mov
lods
and
cmp
test
xchg
aam
push
jbe
jmp
adc
stos
cmp
pop
test
loope
and
sub
lods
pusha
test
cwde
fiadd
fldenv
and
(bad)
xchg
sti
mov
imul
cmc
(bad)
cmp
fnstsw
movs
fstp
inc
mov
nop
aad
rol
mov
dec
les
pop
mov
mov
jmp
inc
icebp
xchg
push
inc
push
and
mov
xchg
sbb
xor
adc
jge
mov
test
add
jb
aam
sub
in
inc
push
push
sbb
sbb
adc
fldcw
imul
imul
push
js
aad
cmp
ret
sbb
xor
neg
cmp
in
leave
lock
(bad)
xchg
mov
fimul
pop
or
mov
ds
xor
xor
or
mov
cmp
sub
sahf
adc
mov
sbb
sub
data16
mov
pop
xchg
hlt
xchg
mov
sub
int3
les
call
lds
enter
lods
jno
mov
jmp
fdiv
pop
xchg
outs
push
fabs
push
cmp
push
mov
mov
cmp
sub
pop
movs
fsub
scas
cmps
adc
sar
and
cmp
ja
sbb
(bad)
call
into
mov
push
outs
repnz
sbb
scas
jnp
push
cmp
nop
cmp
mov
lea
pop
mov
mov
std
sbb
adc
in
inc
fs
mov
cmp
xchg
movs
leave
movs
push
ret
(bad)
cmp
jmp
xor
dec
jp
sbb
adc
inc
call
ja
lock
add
ret
popa
test
retf
and
and
xchg
inc
daa
cmp
into
stos
popf
sbb
push
jmp
fist
out
mov
mov
retf
xchg
(bad)
rol
sbb
sbb
call
psubusb
icebp
outs
fwait
outs
ins
cs
scas
push
dec
(bad)
out
pop
stos
adc
and
repz
inc
call
or
ja
std
retf
loop
scas
pop
mov
add
stos
mov
stos
jle
jb
fstp
mov
or
pop
or
inc
outs
dec
or
into
mov
xor
push
and
pop
sbb
repz
mov
mov
fimul
jb
loop
int3
push
shl
bound
mov
iret
out
hlt
or
jg
stos
test
push
push
add
or
fld
push
imul
nop
jg
mov
jl
push
cmp
imul
cmp
daa
jmp
push
shr
xor
add
sub
jmp
adc
ret
mov
aad
inc
add
mov
fidiv
push
arpl
push
shl
adc
fbld
mov
pop
stos
mov
push
loop
pop
xor
mov
(bad)
hlt
mov
or
cmp
push
mov
inc
cmp
and
cmp
mov
jl
pop
repnz
mov
sti
mov
mov
test
adc
push
(bad)
or
enter
pop
jmp
xchg
mov
add
div
(bad)
xchg
ds
leave
push
sbb
lods
pop
adc
mov
push
inc
push
loope
add
sbb
inc
cmc
fcomp
(bad)
and
pop
movs
mov
fdivr
push
mov
rcr
addr16
jb
mov
repnz
cmp
mov
movs
ins
sbb
mov
mov
sbb
mov
or
loope
add
sbb
add
rol
aam
fisubr
cmp
dec
movs
out
push
pop
xor
cmps
add
cmp
jnp
in
adc
dec
dec
or
mov
xchg
adc
and
pop
jne
addr16
enter
xchg
dec
rcl
stos
cwde
stos
call
mov
retf
lds
inc
(bad)
sub
cmp
cdq
or
pop
inc
std
jbe
int3
iret
call
xor
sahf
neg
dec
test
lds
sahf
lahf
int3
stos
mov
cmp
lods
mov
pop
aaa
pop
dec
pushf
lods
lods
aaa
not
cmp
mov
dec
add
popf
fisubr
pop
iret
sbb
sbb
sbb
push
pop
test
mov
mov
in
imul
inc
movs
les
je
add
cs
pop
cwde
mov
out
scas
sbb
popa
stc
jae
sti
sbb
jo
xchg
retf
(bad)
cmc
inc
nop
mov
stos
mov
mov
and
fxtract
dec
push
mov
ficom
mov
xor
ja
aam
add
cmp
add
stos
leave
mov
das
enter
pop
jmp
cmp
call
pushf
or
and
jg
adc
cmc
sub
jno
or
popf
in
cmps
mov
retf
adc
hlt
movs
mov
test
cmp
jmp
push
mov
mov
dec
jecxz
mov
jmp
lods
pop
pop
repnz
cmp
fnsave
mov
fsubrp
jbe
mov
les
push
push
and
xor
or
push
div
arpl
lahf
aas
out
ret
pop
jmp
sar
mov
shl
jno
push
and
iret
aaa
sbb
dec
mov
xor
dec
sub
mov
jae
cs
movs
(bad)
pop
dec
ss
jecxz
int3
fisub
adc
nop
js
xor
and
pop
scas
je
or
pushf
inc
xor
push
mov
movs
sub
out
inc
mov
dec
(bad)
out
inc
ret
pop
loopne
push
xchg
addr16
mov
xor
in
lods
mov
stos
mov
mov
out
daa
add
adc
adc
cs
mov
fwait
sahf
aad
mov
stos
es
stos
mov
sbb
mov
nop
(bad)
into
in
pushf
pop
jmp
inc
je
and
call
add
xchg
pop
lods
ins
dec
dec
add
mov
test
jae
jl
pop
repnz
imul
icebp
scas
(bad)
loopne
add
cwde
test
loop
mov
and
repnz
push
xchg
cmp
shl
aad
cmps
dec
xchg
movs
sub
cmp
popf
repz
pop
add
out
mov
mov
lahf
or
sbb
sbb
rcr
add
cmp
fsub
inc
popa
push
add
clc
pop
pop
cwde
sub
mov
push
sbb
mov
sbb
and
fs
movs
out
pop
xor
pop
pop
mov
stos
outs
mov
es
push
push
lods
daa
push
mov
pop
leave
das
sbb
addr16
and
repnz
or
mov
fist
in
cmp
popa
xchg
xor
xor
ret
sub
mov
clc
enter
sbb
push
mov
or
mov
mov
inc
mov
pop
or
ds
mov
rcr
adc
clc
jmp
sub
xchg
mov
aad
dec
mov
test
dec
push
fdivrp
psrlw
pop
xor
sahf
jb
stos
sbb
es
jl
arpl
lds
add
mov
cmp
xor
fsubr
or
pushf
test
add
sub
mov
sub
movs
ins
jmp
mov
jmp
popa
pop
add
sahf
mov
outs
stc
pop
push
mov
loop
aad
cmps
pop
inc
scas
fnsave
mov
test
cld
out
es
mov
cmp
cdq
data16
enter
sbb
movs
add
mov
imul
cld
push
std
(bad)
fild
int
xchg
stc
stos
push
enter
sbb
outs
inc
aaa
xor
jo
int
cld
jae
fistp
das
ins
das
xlat
out
mov
sbb
repnz
out
ins
or
bound
xlat
and
dec
xor
lods
cmp
sbb
sbb
js
mov
popa
jmp
mov
mov
scas
stos
push
imul
clc
std
les
jns
outs
mov
push
loope
push
pop
mov
ja
rcr
dec
les
movs
ds
sub
test
or
add
mov
aam
pop
enter
jmp
xchg
test
out
iret
xor
out
(bad)
sbb
rcr
xor
mov
int3
jecxz
cld
dec
pop
mov
mov
adc
rdpmc
mov
jg
jnp
and
jne
or
ds
mov
addr16
xor
pushf
or
mov
sbb
jo
add
push
mov
mov
jns
aam
outs
dec
jecxz
sbb
push
shr
xchg
jno
lds
arpl
jnp
jne
push
push
outs
enter
cdq
mov
outs
xchg
adc
stc
(bad)
and
mov
inc
sub
mov
and
ss
aad
add
adc
sub
pop
sub
pop
jecxz
sbb
mov
jbe
lods
and
push
sub
rcl
cmp
inc
ss
out
fs
shl
cld
cwde
or
jno
hlt
push
bound
daa
cmp
dec
mov
dec
loope
inc
mov
hlt
adc
mov
hlt
xchg
pop
pop
push
pop
jg
cmp
test
adc
inc
or
stc
or
(bad)
jmp
sub
(bad)
jmp
add
lock
outs
dec
call
test
ins
inc
cmp
jge
shl
push
rcl
and
jecxz
fs
and
cli
or
loopne
aam
leave
rol
ins
pop
test
repz
add
rol
xchg
fidivr
pop
push
lock
jae
or
cs
lahf
dec
xor
mov
call
jp
sbb
mov
dec
jne
stos
sub
inc
test
jns
cmovge
addr16
add
add
jecxz
ins
dec
fstp
in
jmp
js
xchg
aad
outs
xchg
inc
ins
adc
adc
xchg
out
adc
adc
pop
fwait
in
inc
popf
cmp
or
call
pushf
dec
push
out
rol
call
jg
sti
add
cli
inc
movs
scas
iret
sub
push
cwde
or
mov
mov
mov
call
cmp
add
and
add
pop
or
mov
rcl
rol
int3
imul
dec
cmps
pop
stc
push
into
add
dec
xor
xor
es
je
in
xchg
add
les
bound
xchg
lock
xchg
and
pop
das
iret
jmp
enter
cmps
dec
sbb
es
cdq
and
jle
leave
loopne
mov
and
outs
sbb
div
add
or
daa
sbb
xchg
ins
mov
popa
into
pop
inc
out
mov
sbb
xor
int3
xchg
dec
or
mov
xor
or
mov
mov
add
lods
mov
pop
into
pop
cmps
shl
fisttp
test
push
popa
jecxz
shl
push
in
jmp
pop
inc
addr16
mov
cmp
sti
(bad)
cmp
rol
xor
mov
xor
xchg
inc
pop
movs
das
xor
ins
fs
adc
sub
ins
mov
jp
jge
push
arpl
jmp
idiv
dec
in
repz
jecxz
ss
imul
dec
loope
fnstcw
fwait
adc
push
repz
mov
push
sub
mov
test
fisttp
leave
int
mov
shl
xchg
mov
inc
pusha
cmp
cli
xchg
jg
hlt
cmp
iret
cmp
ja
cwde
bound
daa
mov
mov
adc
mov
sar
cmp
inc
xor
mov
retf
fnstsw
inc
mov
in
pop
jp
in
jb
movs
lock
in
push
mov
mov
fbstp
jl
and
pop
out
pop
cmp
gs
imul
pop
adc
jbe
mov
inc
dec
inc
pushf
and
pop
add
adc
hlt
jne
or
push
inc
or
adc
iret
fdivr
sub
mov
sbb
cmp
mov
test
lds
gs
(bad)
mov
ins
and
call
loope
hlt
push
xor
sub
jbe
sar
xchg
lods
lds
sub
aad
sti
out
push
mov
sbb
add
(bad)
int3
ds
jns
ins
and
mov
shl
jecxz
lea
mov
and
sub
xor
cmps
aad
add
(bad)
(bad)
or
fidiv
sub
test
stos
aad
aam
nop
dec
clc
sub
retf
mov
mov
fcmovb
add
out
retf
mov
call
adc
das
xchg
mov
mov
(bad)
xor
arpl
cmp
ins
dec
jbe
pop
inc
fild
not
les
(bad)
lds
push
fxch
clc
aas
jl
movs
jne
add
and
xor
scas
adc
mov
push
sub
dec
sub
mov
or
ins
jbe
les
fdivr
pop
mov
cld
mov
cmp
adc
mov
pop
cmp
dec
sti
or
dec
mov
sub
sbb
cmp
mov
test
xor
sub
sbb
adc
or
loopne
pop
hlt
in
gs
int
fstcw
fldenv
clc
ret
popf
xor
jl
popf
or
push
jmp
test
stc
inc
scas
jbe
dec
cli
aas
cmp
cmp
cld
loop
push
pop
mov
hlt
iret
std
mov
sub
out
add
xor
sub
std
inc
dec
xor
jmp
or
das
push
iret
sbb
sub
sub
cmp
movs
cmp
mov
mov
jns
jge
mov
(bad)
push
std
sti
sbb
pminsw
dec
xor
cmp
push
xchg
sub
jns
enter
mov
test
lahf
ins
xlat
mov
dec
add
pop
stos
dec
test
aad
jae
add
cmp
sbb
data16
add
cmp
fistp
pop
js
sbb
nop
push
inc
nop
out
movs
add
jp
movs
jnp
push
inc
je
repnz
mov
xor
mov
mov
inc
pop
scas
inc
jge
dec
and
mov
test
fcmovnb
pop
js
push
cmp
mov
dec
and
rcr
(bad)
sar
fldenv
sub
stos
jne
sahf
inc
stos
mov
cmp
popf
mov
jmp
push
loop
xchg
xlat
mov
aas
mov
mov
call
and
xor
mov
adc
dec
add
cld
jns
int3
(bad)
mov
lahf
and
in
sub
dec
dec
pop
sub
pop
in
jb
cmp
mov
cmp
and
scas
dec
or
imul
push
push
mov
push
scas
xchg
movs
nop
mov
mov
pop
or
fidivr
loope
mov
xlat
mov
push
sbb
mov
repnz
addr16
outs
fldcw
ja
mov
dec
fisub
or
int3
xor
mov
jo
push
jbe
lods
push
adc
neg
inc
gs
push
inc
lea
add
outs
pop
dec
inc
and
out
mov
jecxz
jecxz
mov
inc
adc
sub
std
xchg
inc
xor
mov
inc
sahf
push
push
out
dec
hlt
jne
push
jnp
outs
popa
inc
inc
mov
add
sahf
(bad)
xchg
xor
pop
test
clc
imul
ret
xchg
mov
cmps
xlat
pop
jns
sub
ror
xor
bound
je
cmp
icebp
nop
sub
mov
cs
xor
in
jg
mov
push
add
push
or
popa
dec
add
enter
pop
mov
mov
push
inc
das
ds
fwait
mov
mov
in
stos
mov
pop
pop
sar
jae
xor
imul
call
mov
add
jbe
call
xlat
cld
adc
mov
lods
rcr
push
std
jg
adc
xchg
mov
pop
inc
cli
sbb
jp
cld
inc
dec
adc
cld
jns
es
out
dec
jbe
ss
push
loopne
shr
loop
dec
ret
inc
mov
pop
scas
arpl
xor
pop
dec
dec
scas
stos
mov
test
sbb
xchg
ins
dec
out
aaa
imul
adc
push
jne
jle
into
cmc
imul
scas
and
sbb
xor
xor
cmp
push
xor
mov
cmps
aaa
scas
inc
xlat
xor
stos
sbb
fsubr
mov
loopne
ret
jg
xchg
jno
std
(bad)
out
pop
inc
xchg
inc
sub
sub
mov
sub
add
jl
mov
in
loop
sti
push
push
add
mov
popw
sbb
jno
xchg
adc
xlat
leave
fs
sbb
mov
and
mov
sti
mov
dec
mov
jne
aam
sub
adc
repz
dec
arpl
mov
pop
int
or
cmp
mov
lea
mov
aaa
xor
or
test
sbb
cdq
hlt
fcom
and
pusha
(bad)
xor
(bad)
out
cwde
xchg
pop
jmp
out
out
sbb
lahf
xor
and
les
fmul
(bad)
pop
sub
jmp
jle
rol
bound
sbb
es
stos
jg
test
xor
push
clc
cdq
retf
mov
push
or
sub
jecxz
call
adc
cmps
aam
jne
loop
cmp
mov
xchg
sub
jmp
inc
add
sahf
fnstsw
xlat
add
imul
or
cmp
mov
js
xor
shl
dec
(bad)
push
(bad)
cmp
pop
in
and
and
sbb
add
in
xchg
hlt
ins
into
rol
inc
lea
in
jg
inc
(bad)
sbb
ret
push
inc
mov
frstor
cli
mov
(bad)
(bad)
rol
clc
fild
or
stos
or
sub
cmc
in
scas
div
fmul
cdq
sub
xchg
xchg
test
push
imul
mov
lea
mov
sbb
mov
jno
test
pop
cmp
mov
mov
push
xlat
and
not
fs
jle
loope
std
cmp
push
stc
mov
aas
in
movs
sub
cmp
add
mov
imul
cmps
sbb
add
jmp
cmp
out
adc
inc
popa
dec
lea
jg
jb
xlat
xchg
stc
ret
xor
not
into
sub
adc
pop
xor
fidivr
cmp
shl
cld
outs
jae
(bad)
or
sti
mov
or
pop
movs
mov
loope
sub
mov
xor
stos
outs
stos
movnti
fsubr
call
ss
xor
inc
mov
inc
imul
inc
jecxz
cdq
mov
jmp
sub
sub
mov
out
shl
push
(bad)
adc
or
and
int3
mov
arpl
dec
ss
and
fwait
mov
jnp
mov
test
xchg
daa
add
mov
xlat
call
aam
lock
pop
sti
jge
xchg
call
test
aas
add
mov
inc
gs
adc
and
loop
xchg
les
sti
dec
adc
mov
sti
loope
aam
aam
dec
ret
movs
loope
mov
ins
ja
mov
cld
inc
sbb
mov
pop
mov
sbb
sar
retf
or
iret
jmp
daa
push
mov
add
cs
in
ins
dec
ffreep
sbb
mov
xlat
mov
outs
enter
push
arpl
test
inc
ins
push
les
test
aaa
call
into
adc
sahf
ret
jmp
cmp
(bad)
in
popa
lahf
js
mov
rcr
(bad)
dec
rcr
or
sbb
cmp
cmc
dec
cmc
cwde
imul
fiadd
xor
adc
mov
cmp
xchg
icebp
aam
in
push
push
push
int3
(bad)
std
aaa
mov
push
pop
popf
imul
lahf
xchg
lds
mov
les
jecxz
adc
lock
rcl
(bad)
adc
push
inc
fimul
mov
xor
pop
cs
push
cmp
jp
pusha
cmp
ret
and
dec
or
xor
and
enter
test
sub
mov
pop
xlat
cmp
call
in
cmps
das
pop
ins
aad
push
xlat
dec
mov
aaa
adc
jmp
sbb
adc
loope
cdq
lods
into
mov
mov
mov
sti
cmp
sbb
cdq
and
mov
clc
jno
jle
popa
int3
cwde
stos
ror
mov
sti
xchg
daa
out
(bad)
retf
sub
pop
fist
leave
jns
mov
xor
pop
jg
pop
xchg
jne
rcr
pop
bound
jbe
cmps
bound
mov
lds
inc
(bad)
jecxz
cmp
mov
es
in
ins
pop
lea
jns
or
or
es
dec
jb
hlt
outs
stos
(bad)
dec
inc
push
(bad)
mov
fidivr
mov
and
xchg
jnp
loopne
leave
and
mov
xlat
popf
out
xor
loope
xor
pushf
pop
pop
clc
push
push
push
push
or
stc
xchg
and
fnstcw
add
js
cld
stos
jbe
xchg
call
scas
or
mov
daa
jns
stos
pop
stos
int
sub
ret
dec
out
in
cmp
inc
outs
push
jp
nop
popa
leave
mov
add
sub
push
jmp
(bad)
lods
and
sub
jmp
out
mov
hlt
add
shl
add
sbb
imul
not
add
xchg
lea
sub
jo
mov
push
cmp
and
sub
int3
ss
in
mov
aam
popa
sub
aas
test
mov
dec
dec
cli
icebp
sahf
test
jmp
xor
in
cmp
and
dec
mov
shl
pop
mov
xor
nop
pop
mov
in
mov
adc
mov
push
scas
imul
jne
ror
into
imul
jmp
in
add
call
fwait
xchg
jnp
adc
movs
bound
mov
adc
fwait
xchg
sbb
fcmovnbe
jne
(bad)
mov
movs
in
mov
popf
cmp
ret
adc
pop
outs
(bad)
int
lods
and
(bad)
jnp
icebp
pop
push
dec
frstor
dec
mov
test
ins
icebp
sub
aaa
inc
les
mov
ins
movs
mov
movs
mov
sti
ss
xor
inc
mov
das
adc
jmp
jge
test
xor
pop
out
fsub
in
sub
loopne
out
mov
fisubr
jl
fucom
(bad)
cmp
push
std
int
mul
adc
or
ins
out
cli
scas
xchg
jmp
in
adc
sbb
fsubp
cmp
mov
fs
lahf
ficomp
dec
arpl
xor
ret
les
fisttp
ret
pusha
ficomp
sbb
jmp
(bad)
jecxz
xchg
retf
push
push
ret
aaa
push
push
and
jle
(bad)
push
mov
repz
mov
aas
addr16
mov
ja
ror
xor
or
sahf
sub
call
mov
retf
lahf
mov
int
aaa
jb
rcr
ret
mov
test
(bad)
leave
add
dec
repz
mov
les
mov
and
icebp
cmp
mov
rcl
data16
ins
popa
add
mov
es
repnz
mov
js
xor
repz
fbstp
inc
xchg
xor
daa
mov
retf
sub
fimul
stos
dec
out
or
sbb
or
cmc
sbb
xchg
xor
cmp
std
test
lods
mov
scas
aam
sar
je
jg
add
pushf
fs
add
push
gs
movs
je
in
bound
pop
out
out
adc
aad
pop
xchg
gs
movs
push
xor
dec
dec
mov
push
(bad)
(bad)
aad
cdq
std
inc
inc
or
cmp
js
popf
mov
nop
adc
(bad)
hlt
add
in
std
movs
jno
fninit
imul
ret
js
mov
mov
push
mov
ins
ror
mov
sub
in
pop
add
cmps
aad
mov
add
cmps
aas
test
jmp
retf
or
ret
out
int3
inc
xchg
mov
xor
push
fadd
jl
sub
cs
aam
pop
js
aam
sub
inc
fcomi
loopne
test
cmp
outs
stos
cmp
dec
adc
test
test
xchg
jecxz
neg
mov
ffreep
jmp
fs
test
aas
mov
shl
fiadd
xlat
add
xchg
mov
and
xchg
jge
dec
pop
imul
mov
das
pushf
fidivr
mov
cdq
add
ret
daa
mov
adc
push
stc
aaa
(bad)
mov
addr16
scas
add
mov
int3
jecxz
rcr
sbb
test
iret
bound
sub
prefetch
fsub
jg
outs
mov
sbb
fidivr
icebp
fimul
or
inc
or
mov
mov
push
mov
mov
outs
add
cmp
sbb
in
(bad)
cli
jo
test
out
js
stc
ret
xchg
adc
cmp
sub
push
mov
jbe
xchg
scas
pop
or
sub
pop
or
iret
cmp
shl
aaa
pop
mov
cmp
push
neg
packsswb
add
test
scas
sub
(bad)
xlat
pop
movs
sbb
out
mov
push
outs
sub
adc
(bad)
cmp
xchg
push
movs
inc
call
icebp
in
jnp
xchg
add
out
push
pop
test
push
rcr
mov
retf
retf
mov
lock
push
xchg
out
nop
jecxz
aam
pusha
mov
and
or
xor
mov
fcmove
add
outs
das
mov
or
push
inc
fadd
ins
mov
jbe
lods
hlt
dec
(bad)
rcr
sub
sub
sbb
sti
(bad)
xor
out
lds
lds
add
or
cwde
ror
pop
inc
adc
fcomp
mov
scas
jle
cmp
mov
repnz
mov
mov
cmp
and
xchg
mov
bound
mov
shl
and
int3
adc
retf
inc
repz
int
lds
xor
cs
jmp
ret
inc
push
mov
in
stc
shl
je
loop
or
cmp
pop
sub
and
xor
(bad)
xor
movs
fstp
lods
jmp
movs
ret
or
fcom
lods
xchg
popf
ins
pop
int
add
adc
jne
jp
test
call
sbb
nop
not
fld
mov
pop
cmp
xchg
test
imul
xchg
or
sti
sahf
xchg
gs
(bad)
cli
arpl
frstor
mov
shl
push
ret
aad
cmp
movs
push
or
iret
mov
data16
arpl
jb
imul
sub
mov
stos
popf
xor
fdivrp
push
or
add
mov
(bad)
ja
mov
lea
jg
(bad)
imul
fcomp
inc
mov
pop
fs
cmp
and
jle
mov
cdq
icebp
push
add
inc
add
fisttp
cwde
add
sub
inc
xor
mov
leave
push
rcl
shr
cmp
pushf
cmp
jbe
mov
add
mov
cmp
or
inc
cmp
shr
and
jnp
sbb
fdivr
dec
xor
ins
not
pop
pop
xor
or
arpl
mov
xor
mov
ins
jne
jg
mov
in
sbb
cdq
xchg
inc
int3
jb
dec
rcl
mov
inc
inc
lock
je
jne
imul
xlat
or
pop
jae
mov
inc
jge
jo
cmps
mov
sub
aad
fdivr
push
ret
mov
and
mov
(bad)
mov
leave
sar
les
leave
mov
inc
xchg
cli
in
outs
adc
mov
inc
into
push
outs
jne
pushf
jmp
xlat
test
test
xor
mov
adc
mov
add
stos
test
adc
ret
mov
or
jne
mov
test
pop
or
(bad)
(bad)
add
fs
or
mov
ret
dec
mov
sub
das
fsubr
int
out
jle
cli
pop
rcr
or
sub
add
scas
fnstenv
inc
mov
jbe
icebp
xchg
loopne
jne
mov
scas
mov
pminsw
(bad)
pusha
in
sbb
mov
jns
sub
jmp
add
into
mov
arpl
(bad)
and
js
arpl
nop
nop
in
dec
aam
sbb
mov
int
add
test
and
div
xchg
pushf
sbb
sahf
movs
xchg
adc
xchg
or
rcr
push
cmp
in
dec
pushf
push
js
jmp
into
add
cmc
ds
gs
cmp
repz
mov
call
sub
test
dec
jb
pop
and
mov
adc
shl
das
and
lea
add
jle
jns
jb
add
call
mov
in
test
push
addr16
xchg
rcr
fist
jecxz
push
popf
inc
mov
adc
jl
add
cmc
xchg
jns
mov
mov
mov
cmp
lock
push
sahf
lahf
or
retf
push
outs
cmc
nop
adc
xchg
outs
push
adc
arpl
or
outs
mov
call
es
inc
adc
fsub
dec
pop
dec
test
shl
pop
pushf
pusha
(bad)
push
fild
dec
das
or
inc
cld
and
push
mov
cwde
repnz
dec
call
jmp
popf
or
addr16
jle
mov
sub
add
mov
mov
mov
shr
push
xchg
dec
cmp
shr
push
lds
popf
fstp
out
jne
imul
std
push
or
jns
jns
pop
pop
imul
pop
sub
out
mov
mov
dec
fild
imul
xchg
mov
cs
add
das
cmc
(bad)
out
int3
out
xchg
pop
int3
mov
xchg
in
add
lods
push
sahf
popa
addr16
neg
pushf
cwde
in
push
loopne
dec
(bad)
adc
fistp
or
aad
add
sbb
mov
inc
sub
scas
and
push
cmp
dec
clc
(bad)
jmp
loope
and
fiadd
jns
mov
mov
sub
inc
cmp
(bad)
nop
mov
or
addr16
pop
fldcw
aas
mov
lods
cmps
fld
inc
scas
imul
jbe
movs
jbe
jecxz
fsubr
sub
mov
mov
adc
adc
test
dec
repz
or
xor
fsubr
es
xchg
xor
leave
push
iret
clc
inc
(bad)
in
mov
xchg
retf
xchg
push
in
popa
jl
out
and
movs
push
push
clc
test
and
cs
mov
cmp
pop
cmp
pop
aam
retf
ficomp
or
cmp
or
(bad)
cmp
add
sbb
nop
push
gs
ret
sub
les
shl
or
loop
xchg
popa
loopne
pop
add
xor
jae
pop
ror
cli
mov
adc
sbb
sahf
ins
imul
add
mov
mov
dec
lahf
push
cmp
adc
movs
ins
repnz
xor
test
idiv
daa
arpl
stos
mov
popa
popf
mov
mov
and
dec
mov
arpl
mov
mov
adc
ss
add
mov
sar
in
arpl
stos
xchg
cmp
xor
dec
pop
push
movs
mov
inc
xchg
pop
sbb
retf
xchg
push
and
in
ss
cmps
mov
push
jl
xchg
arpl
sbb
les
sahf
(bad)
ret
sbb
fdiv
ret
(bad)
aad
jno
pop
outs
jmp
leave
rcl
or
bound
aas
push
stos
fwait
sbb
test
add
inc
cmp
daa
jno
shl
neg
movs
lea
sbb
dec
rcr
je
dec
pop
mov
imul
mov
xor
fstp
or
sbb
int
sti
xchg
inc
popf
ret
inc
in
xchg
fisubr
call
jl
pop
sub
cmp
inc
pop
(bad)
add
scas
cmps
push
rcr
push
xor
add
imul
mov
lock
jg
test
pop
xchg
pusha
sbb
cmps
cmps
dec
cmp
outs
mov
jnp
enter
or
leave
push
dec
add
and
and
jb
enter
pop
pop
in
(bad)
pop
in
xchg
retf
pop
ficom
mov
out
cmp
cmps
mov
add
(bad)
dec
xchg
ja
nop
xchg
pop
test
push
rol
inc
scas
ficom
sbb
xchg
mov
fld
xchg
cmp
aad
jg
sub
xchg
push
inc
shl
ret
sbb
jo
mov
popa
add
mov
cmp
add
bound
inc
xor
jmp
inc
fadd
sub
sub
daa
test
test
inc
imul
scas
mov
fisttp
sbb
into
imul
ret
lds
ret
call
xor
or
jns
adc
call
addr16
ret
iret
add
jmp
cmp
or
adc
pop
frstor
pop
(bad)
xor
inc
test
call
cmc
je
mov
push
ror
mov
sbb
sub
inc
sbb
pop
fimul
neg
jo
xor
cmps
call
out
aas
stos
cmc
xchg
jnp
in
jle
mov
std
jp
shl
bnd
leave
mov
cli
repz
mov
les
xor
dec
dec
jp
(bad)
pusha
xor
add
mov
inc
movs
pushf
pop
adc
pop
test
mov
dec
push
pop
cli
push
xchg
nop
mov
mov
add
in
xchg
xchg
aas
lock
sub
mov
mov
retf
jne
in
mov
cmp
and
ja
inc
sbb
sbb
mov
adc
mov
ja
push
inc
test
fimul
mov
ins
sbb
xor
mov
add
pop
and
pop
and
lds
push
push
mov
nop
xchg
fidiv
inc
dec
gs
rol
repnz
shl
xor
cmp
sbb
xor
sub
out
inc
loop
dec
call
arpl
sbb
adc
neg
in
mov
sahf
xchg
clc
xor
xor
pop
sbb
xchg
stos
aaa
(bad)
jmp
cli
add
mul
outs
je
xchg
xlat
dec
(bad)
push
mov
xlat
lods
sbb
sub
cmc
sub
inc
sbb
aad
popa
or
or
mul
xor
push
and
(bad)
repz
stos
jae
rcl
dec
cmp
lods
lea
das
cmps
jecxz
xchg
rcr
and
movs
sar
int
imul
xchg
cld
push
inc
shl
retf
(bad)
mov
xchg
xor
and
jg
sbb
push
jne
mov
lods
pop
and
cmps
xor
push
xor
xchg
xchg
mov
pause
ja
cmps
pop
mov
and
inc
addr16
ja
dec
mov
mov
push
mov
adc
or
call
pop
ss
(bad)
sar
fcomp
bound
mov
(bad)
push
mov
mov
cs
stos
int3
cmp
mov
adc
jmp
or
cmc
mov
xchg
and
mov
sub
xor
xchg
ror
(bad)
inc
inc
(bad)
in
out
inc
cmp
push
rcl
test
scas
add
sbb
xchg
rol
test
mov
outs
mov
loopne
mov
dec
std
bound
and
mov
pop
dec
test
arpl
std
cmp
push
sub
or
push
daa
mov
mov
jno
int
repz
add
call
test
dec
xor
pop
xor
popa
xchg
clc
sub
fwait
push
xchg
int
push
cld
lahf
inc
jp
dec
in
sbb
add
fisub
push
xchg
inc
xor
xchg
(bad)
fmul
fs
rcl
es
jmp
leave
adc
test
test
and
rcl
jmp
and
dec
stos
xor
(bad)
adc
(bad)
out
dec
jae
int3
movs
add
icebp
ins
cmps
jne
inc
adc
stos
pop
inc
dec
fadd
dec
stos
stos
inc
int
cmp
movs
std
das
retf
popa
jg
call
test
pop
(bad)
ficom
push
pop
das
sub
sub
pop
mov
xlat
int
arpl
pusha
mov
adc
mov
repnz
pushf
mov
(bad)
xchg
jmp
mov
call
mov
inc
add
mov
xchg
and
dec
dec
push
clc
call
imul
push
cli
cmp
leave
je
mov
test
aaa
pop
dec
addr16
cwde
sub
imul
hlt
sbb
movs
imul
push
mov
stos
add
fist
movs
pop
push
jne
dec
mov
cmp
enter
in
and
dec
jmp
jbe
push
dec
inc
imul
mov
fisttp
pop
fcmovbe
es
add
adc
or
jb
lods
fadd
sbb
test
xlat
icebp
xchg
ficomp
mov
or
or
jmp
clc
stos
repz
jmp
jo
pop
out
fimul
(bad)
retf
push
jne
mov
les
imul
in
das
loopne
sbb
mov
push
and
and
icebp
je
sub
iret
jns
fisttp
cmc
adc
xor
frstor
in
sbb
push
jmp
pop
push
rcl
mov
imul
and
ret
mov
retf
clc
add
test
jmp
xchg
(bad)
mov
and
loop
(bad)
xor
mov
xorps
dec
jmp
fldcw
out
xchg
cmps
cmp
sub
neg
mul
inc
cmp
sar
cmp
sbb
test
jb
push
adc
pslld
inc
aad
mov
cmp
mov
adc
loopne
push
(bad)
sar
xor
shl
jp
sbb
ja
retf
xchg
nop
inc
xor
jmp
test
mov
pop
out
xor
and
cmps
(bad)
and
dec
sar
test
push
in
push
jmp
and
inc
lahf
repz
jle
pop
and
jmp
and
jo
cmps
repz
js
sbb
mov
pop
mov
mov
ror
imul
sub
in
cmps
pop
sub
in
sar
mov
ins
sub
outs
xchg
in
xchg
sbb
add
lahf
jp
mov
aaa
mov
push
xchg
test
fwait
icebp
jl
hlt
pop
mov
sar
push
in
pop
sub
(bad)
or
hlt
in
pop
sbb
add
retf
sub
pop
add
sahf
imul
das
mov
push
sub
fsub
dec
int3
mov
retf
cs
adc
pop
test
jp
ds
div
push
lods
mov
pop
cwde
push
jl
arpl
sub
out
in
neg
stos
jae
aam
dec
mov
add
mov
push
or
nop
ror
lods
mov
js
stos
dec
scas
pop
add
daa
scas
es
sub
pop
shl
and
push
and
push
xchg
add
outs
inc
dec
and
cmp
out
fsubr
mov
sbb
icebp
(bad)
repz
test
adc
loop
xor
pop
sbb
sti
mov
pop
push
xlat
cmp
js
add
es
mov
push
mov
int3
out
mov
jnp
ret
or
es
call
sbb
sti
mov
in
pop
das
mov
hlt
inc
cwde
div
arpl
(bad)
into
sbb
or
jge
ins
cmp
inc
arpl
adc
xchg
sub
jbe
retf
dec
push
ror
lods
xor
neg
test
data16
add
ja
pop
movs
addr16
dec
mov
test
test
sahf
jge
idiv
ins
(bad)
push
jb
jg
dec
cmp
fimul
push
jecxz
add
mov
jnp
dec
cli
cmp
dec
in
sub
or
mov
xchg
das
aas
movs
sub
test
xor
jns
cmp
xor
(bad)
rcl
pushf
int
call
push
mov
inc
pushf
(bad)
mov
xor
scas
push
fsub
push
cdq
cmp
mov
loopne
sbb
adc
or
in
sbb
pushw
shl
push
adc
popw
minps
test
nop
pusha
int3
gs
cmp
sub
add
enter
xor
mov
pop
sbb
sti
mov
jo
jb
push
imul
adc
xor
sub
mov
mov
mov
pop
inc
test
lods
mov
sbb
out
or
nop
mov
pop
mov
cmps
stc
pushf
sub
sar
xchg
in
xor
push
pop
push
xchg
icebp
adc
sbb
jmp
enter
mov
sub
mov
mov
pop
popf
out
pop
(bad)
dec
jns
mov
cwde
in
cmp
sub
adc
mov
jl
push
pop
cmp
daa
sub
imul
aas
shl
jb
dec
retf
inc
sbb
sbb
ret
scas
aaa
loopne
mov
pushf
das
adc
cmps
add
xor
loopne
pop
ror
lahf
mov
fcom
popa
out
cli
rcl
(bad)
addr16
jge
jne
sub
sub
enter
ja
sub
sub
push
and
cwde
das
xor
ret
enter
gs
push
outs
dec
mov
dec
scas
and
(bad)
fstp
or
fld
mov
dec
out
mov
rcr
in
or
mov
int
shl
pop
into
retf
inc
sar
add
aas
mov
and
das
mov
push
and
cmp
cli
leave
pop
retf
xor
lods
xor
inc
clc
mov
mov
outs
add
jb
test
out
arpl
je
pop
push
add
ss
in
mov
imul
xor
jl
mov
test
fmul
cmps
xor
cmp
xchg
sbb
ins
xchg
xor
xchg
mov
(bad)
aas
sub
push
ror
mov
xor
mov
push
pushf
push
outs
sub
add
dec
inc
out
dec
cmp
xor
in
pusha
in
std
outs
xor
push
cmps
adc
clc
or
or
and
dec
loop
ins
ror
dec
rcl
sbb
popa
or
or
pop
ror
in
push
stos
jno
in
loope
ins
fucom
push
call
out
dec
xor
and
pop
dec
cmp
scas
fmul
cld
ds
jge
mov
fbld
push
and
xchg
sbb
and
jecxz
pop
ficomp
mov
fs
fmul
jb
mov
adc
pop
test
jg
pusha
jmp
push
mov
inc
rcl
mov
inc
sub
neg
ret
push
inc
xor
inc
xchg
lods
sti
dec
mov
repnz
hlt
enter
add
out
jmp
push
or
dec
xor
adc
(bad)
hlt
and
inc
jge
push
inc
jl
pop
or
popa
or
mov
call
loop
cwde
sub
mov
iret
cmp
xchg
gs
pop
imul
add
sbb
push
or
stos
mov
sub
movs
in
sub
outs
inc
test
mov
add
mov
(bad)
mov
cmp
xor
push
cmp
fild
daa
cmp
repz
mov
or
pop
es
ficom
clc
or
dec
cmp
and
sbb
aaa
call
out
sub
mov
pop
push
mov
mov
dec
movs
inc
lods
sbb
shr
dec
lea
xchg
int3
inc
cmps
or
add
xor
pop
jmp
out
sahf
lock
test
call
jne
push
cmp
jno
scas
dec
jge
push
cmp
jmp
sbb
push
sbb
jg
jne
pop
xchg
mov
leave
repnz
cmp
pop
lock
inc
gs
sub
push
xchg
jo
shr
ret
rcl
ds
and
jecxz
lods
daa
fs
jae
aas
jno
aas
push
mov
push
and
add
dec
movs
call
mov
pop
retf
jl
arpl
mov
mov
nop
(bad)
jne
movs
mov
imul
outs
push
jmp
pushf
jp
lahf
repz
pushf
jmp
(bad)
push
ficomp
sbb
inc
(bad)
mov
and
ins
mov
addr16
int
push
jl
pop
sbb
btr
jecxz
inc
mov
or
retf
jno
cmp
imul
mov
std
(bad)
in
les
xor
mov
pop
popf
xchg
outs
inc
xor
cmp
push
mov
repnz
cmps
add
xchg
movs
sar
out
fdiv
imul
pop
cmp
mov
stc
mov
stos
ffree
or
out
cmp
xor
dec
cmps
mov
shr
icebp
ja
stos
sub
stos
sub
mov
test
jns
cdq
mov
test
fcmovu
xchg
cmp
pop
and
xlat
xor
ins
xchg
clc
inc
or
add
int
pop
clc
ins
out
cmp
out
sti
(bad)
stos
jmp
mov
lods
xchg
jle
imul
jbe
fwait
push
daa
inc
inc
shr
sahf
out
ret
mov
out
repnz
and
push
add
ds
sbb
xor
add
jnp
inc
scas
inc
jo
jns
xor
data16
add
scas
fisttp
dec
cmp
call
arpl
(bad)
push
bound
addr16
jbe
loop
fisubr
inc
ret
sub
mov
fisttp
sub
sbb
in
pop
les
xchg
stos
mov
arpl
je
cmp
js
dec
fisub
inc
dec
xor
idiv
iret
(bad)
mov
xchg
sbb
push
imul
in
push
xor
hlt
movs
popa
xor
sub
aas
stc
sar
neg
inc
ja
lahf
into
call
adc
pushf
aad
xor
push
outs
dec
inc
addr16
pop
xchg
xchg
mov
popf
jecxz
pusha
test
xor
mov
gs
adc
jb
lock
neg
mov
aad
adc
push
mov
push
inc
push
sub
jl
cmp
neg
test
add
(bad)
mul
lods
test
inc
mov
rcr
xchg
cmp
pop
mov
call
bound
add
mov
loope
jp
pop
add
mov
and
jo
call
add
adc
test
aam
adc
jns
or
daa
mov
fimul
xor
fisttp
sti
stos
push
mov
inc
out
push
lds
jo
mov
jge
inc
neg
out
and
and
mov
mov
sahf
dec
pop
mov
daa
out
and
cmp
add
out
mov
mov
sub
xchg
outs
(bad)
pop
pop
dec
inc
adc
sub
xchg
jmp
mov
repnz
xor
leave
outs
or
ss
jle
or
adc
mov
inc
inc
sahf
add
cdq
out
scas
repz
(bad)
push
mov
cdq
icebp
scas
dec
call
jnp
jmp
jmp
shl
test
adc
shl
fld
mov
push
sbb
retf
dec
adc
movs
(bad)
int
(bad)
adc
fwait
gs
mov
lahf
xor
cmp
in
pop
daa
call
dec
and
jne
pop
and
cmp
sub
(bad)
adc
hlt
rcr
(bad)
jnp
sahf
movs
or
push
test
dec
mov
fistp
movs
cmp
bound
loop
add
jb
push
je
(bad)
push
adc
imul
test
es
mov
neg
nop
mov
cmps
sub
int3
cmps
or
pop
xchg
jmp
into
jno
sub
push
inc
frstor
call
inc
pushf
imul
inc
xor
sar
xchg
loop
fcmovb
call
addr16
xlat
ret
pop
mov
lahf
xlat
or
fs
ja
or
outs
ror
adc
dec
jp
mov
and
jnp
jae
mov
into
es
mov
mov
lahf
add
fs
hlt
jmp
cwde
shr
sub
dec
and
mov
in
dec
ja
inc
adc
mov
dec
clc
rcr
ins
jp
jno
xchg
inc
ret
fmulp
push
mov
fdivr
scas
inc
and
shl
and
dec
dec
mov
hlt
xchg
adc
inc
inc
xchg
test
mov
mov
sbb
movs
fsub
jmp
daa
mov
adc
in
fistp
dec
mov
add
pop
jno
xchg
leave
outs
inc
popa
lock
leave
dec
ficom
icebp
add
or
mov
mov
lahf
loop
and
out
je
call
jmp
dec
inc
xchg
or
inc
cmp
add
jns
mov
dec
jecxz
mov
push
push
data16
jmp
jl
add
aad
outs
push
lds
cs
fs
and
aaa
add
xchg
int3
mov
sahf
cmp
pusha
fwait
hlt
dec
mov
jnp
fisubr
adc
fsub
loopne
gs
in
(bad)
sbb
mov
fidiv
rcr
sbb
xor
cmp
and
aam
cmps
sbb
(bad)
pop
push
in
mov
je
push
enter
inc
aam
push
xchg
pop
rcl
sub
jmp
sub
dec
mov
adc
push
xor
call
test
out
retf
scas
mov
pop
call
lods
sbb
pop
adc
lds
leave
loopne
push
xor
out
xchg
xor
mov
dec
mov
test
scas
mov
or
sbb
addr16
cmp
or
test
add
add
test
loope
jg
leave
addr16
push
enter
pop
or
scas
mov
cmp
sahf
rcr
xor
and
mov
outs
retf
and
lahf
imul
xchg
jbe
in
cli
pop
add
add
mov
scas
mov
pusha
mov
scas
ins
add
sbb
sub
inc
jecxz
(bad)
sub
shl
cmp
into
or
dec
mov
cmps
push
popa
call
(bad)
mov
int3
pop
test
xor
or
test
shld
inc
jecxz
inc
cwde
test
ror
mov
fild
icebp
xchg
jmp
push
mov
aas
pop
fstp
or
out
cwde
xchg
or
test
push
test
lahf
sbb
or
sub
lods
dec
movs
popf
repz
jg
sub
cmp
jno
pop
dec
mov
adc
scas
jo
cs
hlt
pop
sub
xor
mov
mov
fld
and
cmps
adc
(bad)
ret
jbe
andnps
test
fisttp
imul
shl
aaa
fnstenv
addr16
outs
mov
mov
(bad)
jb
imul
inc
stos
repnz
rcl
jno
push
mov
pop
xor
js
xchg
lods
ds
cmp
mov
mov
dec
(bad)
shufps
and
das
stc
sbb
(bad)
fist
sbb
adc
ja
lds
push
or
jl
leave
out
js
enter
aaa
lahf
mov
shl
mov
xlat
cmp
das
aad
cli
jns
pop
mov
mov
arpl
rcl
pop
in
or
mov
cmc
(bad)
out
xor
jne
jmp
jns
enter
retf
in
cld
fild
sub
rcl
dec
pop
repz
push
rcr
js
ss
call
mov
hlt
loop
jp
cwde
not
adc
stos
or
clc
std
xlat
ins
push
cs
mov
shr
jl
lahf
cmp
sbb
sub
jl
stc
aam
dec
add
data16
adc
cld
mov
jmp
push
adc
sbb
jmp
xchg
mov
fcomp
push
stc
cmp
pop
int3
mov
jae
jnp
(bad)
sbb
or
mov
dec
mov
push
movs
std
xchg
or
push
data16
clc
call
and
xor
dec
scas
cld
icebp
mov
mov
cld
and
inc
inc
adc
dec
stos
mov
ss
cld
test
das
sbb
rcl
or
addr16
movs
fdivr
mov
lock
pusha
fwait
inc
or
mov
add
cmps
mov
mov
push
pop
cmc
push
inc
jl
dec
ja
aas
aaa
fidiv
sbb
mov
shr
lods
lea
mov
adc
pop
or
(bad)
xchg
imul
or
xor
inc
popa
fmul
icebp
push
int3
xchg
loop
aaa
je
jg
fst
movs
mov
jmp
push
jne
xor
mov
fs
popf
inc
ins
cs
xor
xor
sub
mov
cmp
(bad)
rcr
cmp
shr
push
inc
jmp
adc
mov
and
mov
retf
gs
int3
dec
out
shl
jmp
dec
test
(bad)
sub
mov
imul
(bad)
in
mov
enter
push
or
popa
and
xchg
xor
in
xchg
mov
imul
cmps
mov
out
xor
jecxz
imul
fld
cmp
fstp
cs
enter
fidivr
or
rcr
and
xor
gs
ja
mov
aam
jmp
(bad)
fdiv
nop
and
mov
xlat
mov
hlt
lods
mov
(bad)
sbb
shl
sub
adc
into
sub
mov
fs
pop
addr16
ret
jb
sub
inc
movs
sbb
mov
or
call
cli
jmp
cld
add
xchg
test
dec
ficom
push
fsubr
rol
add
lea
push
leave
mov
mov
adc
daa
lds
imul
xchg
xor
js
add
adc
test
dec
lods
popf
pop
adc
sti
ds
mov
xchg
(bad)
aad
mov
enter
sub
push
xor
push
mov
ds
in
(bad)
mov
les
push
es
and
shl
push
dec
popf
mov
cli
xchg
out
sbb
scas
lea
cmps
adc
idiv
jp
xor
inc
pop
into
push
adc
adc
sub
stos
sub
xor
cmps
push
push
push
out
(bad)
cmp
sbb
in
dec
mov
stos
or
mov
cdq
add
mov
add
add
scas
xchg
(bad)
stc
lods
repz
mov
mov
mov
movs
ror
dec
in
inc
cmp
nop
mov
inc
lock
aam
aam
in
add
xchg
div
rol
mov
xlat
and
xor
jb
popa
and
xor
and
sub
fsubr
lea
js
mov
xchg
js
shl
(bad)
stc
aaa
cld
add
push
cwde
dec
je
jge
dec
push
jp
ins
jl
adc
cmp
and
es
inc
in
xor
dec
dec
into
mov
sub
nop
pop
mov
arpl
xor
inc
aam
adc
aam
and
aas
or
xlat
bound
or
jl
xor
jo
fcom
sub
daa
or
adc
sub
icebp
xchg
fwait
pop
movs
popf
dec
jnp
test
out
adc
mov
add
dec
es
outs
bound
fsubrp
or
and
lods
mov
cmps
push
cmps
ret
sub
add
or
ja
out
sti
mul
push
cmp
imul
add
mov
loopne
test
jle
adc
jno
xchg
or
mov
pop
mov
ds
aaa
jle
cmps
icebp
(bad)
call
pop
lock
fsubr
cmp
(bad)
clc
lahf
jne
jp
adc
jns
xchg
pop
adc
mov
cmp
cmp
inc
xchg
fadd
xchg
test
jno
call
lods
jecxz
outs
cmp
retf
cmc
push
fild
dec
shl
(bad)
jmp
mov
adc
mov
xor
ror
jae
jmp
sub
cdq
in
or
lods
add
rcr
into
jnp
cmp
movs
push
mov
push
pusha
ret
dec
push
sub
pop
sahf
out
jp
push
scas
jg
in
xchg
movs
pop
nop
xchg
xlat
bound
push
push
neg
movs
fs
(bad)
cld
bound
xor
xlat
push
add
add
lods
std
jecxz
xchg
push
xchg
and
aas
mov
ins
call
or
cmp
repnz
or
push
dec
popa
lods
cld
cmp
out
and
xor
mov
iret
fst
push
adc
test
jbe
push
popa
sub
push
int3
into
mov
fnstenv
nop
sbb
jno
daa
loopne
push
inc
xchg
sbb
jge
test
cmp
not
pop
shl
xchg
sahf
test
shl
push
div
out
jg
(bad)
mov
pop
and
test
in
jp
xor
fwait
pop
cmps
lods
jecxz
rol
mov
stos
sub
fld
xor
push
jecxz
cmp
stos
mov
je
jmp
sbb
ins
xor
call
repnz
push
das
inc
push
sar
mov
push
xor
xor
nop
test
das
cmp
(bad)
xlat
cmc
bound
lea
enter
fcomp
in
out
push
fmul
popa
aas
xor
mov
add
or
pop
fst
test
lea
xchg
fnstsw
aad
mov
movs
cwde
sbb
mov
cmp
sbb
mov
mov
adc
(bad)
pop
inc
ror
leave
push
push
jmp
and
pop
test
adc
push
cli
mov
dec
jp
xlat
add
dec
dec
loope
pop
or
xchg
popf
out
pop
out
mov
data16
mov
sbb
xchg
adc
ja
inc
das
fadd
nop
sbb
sub
xor
into
data16
out
pop
out
(bad)
jle
cmp
aas
push
dec
mov
or
cmps
leave
cmp
int3
sbb
inc
sbb
ficom
popf
hlt
jge
and
adc
fimul
cmps
adc
aam
imul
imul
aam
sub
add
jnp
or
(bad)
out
jno
test
test
mov
ss
adc
in
mov
sub
mov
xlat
outs
popa
fldenv
mov
leave
aaa
dec
lods
idiv
mov
pushf
or
outs
out
call
jg
mov
fbstp
push
lds
aam
clc
addr16
dec
jmp
cmp
mov
inc
movs
sub
mov
pop
cmps
popa
mov
retf
jbe
aam
cmps
std
mov
call
mov
mov
sub
add
xchg
and
fwait
ret
into
mov
lods
mov
outs
aas
(bad)
cmc
cwde
fidivr
int3
mov
inc
in
or
mov
push
dec
sbb
gs
test
xor
add
sti
or
pop
inc
mov
dec
(bad)
mov
jns
add
xor
dec
xchg
aad
lods
push
push
mov
(bad)
call
push
iret
sub
aas
xor
add
leave
lods
dec
scas
xlat
movs
das
jge
push
jne
cmps
pop
and
test
mov
add
fwait
xlat
jle
pop
push
mov
jnp
xor
ret
xchg
ret
ss
mov
inc
push
out
test
cmp
lds
loope
xchg
sbb
stos
jmp
adc
retf
jle
sar
stos
sub
add
(bad)
or
or
enter
gs
sbb
in
int
xor
rcl
std
inc
cmp
jl
jae
and
pop
xor
dec
push
ret
(bad)
pushw
lods
rcl
mov
cmp
hlt
cmp
mov
dec
imul
inc
pop
sub
ss
cmps
int
mov
scas
cdq
imul
pop
in
sbb
inc
out
sbb
add
mov
xor
out
add
adc
test
mov
movs
loop
sub
and
pusha
pop
fs
cmp
jbe
sar
mov
mov
movs
arpl
xor
push
clc
sub
push
jnp
push
inc
mov
ins
std
cmps
xor
mov
call
adc
movs
js
inc
cmps
je
ds
mov
movs
sahf
mov
pop
or
push
cmp
jl
cmp
adc
mov
push
test
shl
leave
mov
jmp
jmp
retf
repz
xchg
cwde
dec
adc
fdivr
lea
mov
fistp
ss
out
hlt
push
cwde
out
mov
hlt
mov
cmp
jmp
add
jne
xor
mov
test
xchg
pop
add
test
mov
pop
pop
sub
shl
test
cmps
and
int3
gs
mov
inc
into
out
fmul
mov
test
xor
(bad)
movs
adc
(bad)
ins
(bad)
hlt
sbb
xchg
mov
fdivr
adc
(bad)
mov
xchg
and
inc
scas
mov
fcomp
inc
movs
cmp
add
xchg
aam
push
call
cs
jmp
push
inc
jmp
xor
push
loope
std
mov
std
adc
mov
sbb
xor
push
push
mov
not
dec
scas
cwde
push
jmp
mov
sbb
mov
jg
push
cmps
mov
pop
jb
pmuludq
adc
inc
(bad)
fstp
ror
mov
mov
fwait
push
lods
and
cmp
dec
jp
inc
push
enter
add
pop
out
int3
xor
(bad)
jp
push
ret
sub
test
and
test
scas
ins
xchg
dec
int
xchg
leave
inc
jo
mov
into
out
mov
cli
xchg
pop
pop
lds
xor
inc
repz
in
and
inc
mov
mov
inc
lahf
cmp
out
xchg
pop
in
ficom
ins
mov
xlat
adc
xchg
pop
and
mov
ret
cmc
jae
les
enter
fisttp
sub
aas
das
ds
(bad)
mov
rcr
loopne
mov
jne
ficomp
pusha
inc
fild
xchg
icebp
mov
push
cmp
adc
rcr
in
retf
mov
xchg
mov
cmp
fsubr
(bad)
out
fsub
daa
mov
or
cmp
cmp
clc
cmps
push
cwde
push
push
fwait
mov
jg
adc
les
or
sbb
dec
mov
ins
repnz
int
or
les
scas
mov
xlat
sub
(bad)
mov
dec
adc
fdiv
dec
add
or
add
aam
jae
(bad)
sbb
xchg
jg
dec
push
jmp
push
shl
test
push
xor
hlt
daa
jp
push
push
les
mov
std
xor
enter
je
xchg
loop
add
adc
xchg
jb
cmp
and
or
xchg
in
dec
mov
xchg
xchg
add
mov
repnz
mov
outs
mov
mov
xor
push
clc
push
es
mov
clc
dec
dec
mov
into
mov
or
test
adc
adc
imul
arpl
mov
enter
out
push
cli
movs
lock
mov
test
add
xor
std
push
cmp
sub
xchg
jae
cmp
xor
lea
and
dec
xlat
and
mov
ficomp
add
or
in
inc
mov
call
retf
jp
pop
fcomp
mov
mov
out
dec
pop
push
add
out
leave
cmp
mov
cmp
or
cs
sbb
adc
push
inc
jmp
and
scas
int3
adc
or
movs
pop
add
pop
call
pop
popf
ret
ins
and
xor
rcr
imul
and
lea
inc
jb
pop
pop
arpl
inc
call
fcmove
mov
jnp
dec
push
xchg
add
mov
fisubr
pop
dec
dec
aad
push
lea
xlat
push
xor
rcr
fist
or
gs
push
inc
jl
cli
test
es
mov
outs
xor
jmp
or
push
push
dec
gs
jns
cmc
mov
cmps
mov
sti
and
fwait
mov
push
pusha
popa
int3
jns
mov
movs
cmc
push
or
fnsave
xor
mov
sbb
mov
dec
adc
sub
jmp
hlt
sub
or
push
sub
cmp
or
stc
and
clc
fcom
clc
stc
out
lahf
xor
in
mov
push
nop
sti
mov
push
inc
dec
pop
mov
inc
cmp
cmps
dec
popf
call
sub
scas
psllw
ins
jno
fst
in
ret
mov
std
mov
jne
lea
push
push
mov
xchg
xor
les
xor
cmp
ins
pop
rcl
mov
adc
mov
xor
sub
div
loop
aam
xchg
stos
lock
out
call
add
fnstsw
mov
into
pop
test
jge
mov
and
cmp
push
ficom
int
adc
sbb
or
dec
mov
xor
inc
add
xchg
in
and
outs
adc
fadd
les
lods
jne
add
adc
imul
sub
je
and
popf
call
popf
xor
in
loopne
fimul
jb
int
dec
inc
cmp
sub
xlat
imul
add
fstp
mov
jbe
jecxz
jecxz
push
pop
fnsave
mov
push
fild
cmp
jle
fisttp
fld
push
pop
into
shl
sub
jmp
mov
cmps
lea
rcr
sub
xlat
jecxz
repz
xor
cmp
sub
fs
inc
cmp
jno
pop
or
add
add
ja
ret
add
call
push
jge
inc
ins
add
dec
stos
jb
test
lea
fisubr
jg
int3
lds
adc
imul
clc
mov
cmp
dec
sub
push
jge
out
sbb
stc
inc
daa
dec
inc
cwde
stc
hlt
mov
call
jmp
movs
jbe
in
sbb
and
and
mov
fidivr
push
and
cmc
pop
fiadd
and
sbb
jge
lods
push
jbe
push
pop
pop
add
xor
mov
mov
int
mov
sbb
add
mov
out
call
loope
cmps
xchg
add
xchg
cwde
lock
sbb
outs
shl
nop
mov
retf
prefetch
aam
pop
clc
and
jg
mov
outs
mov
push
ror
xchg
ret
retf
push
mov
cmp
mov
cmps
aam
leave
jo
push
mov
xor
inc
xor
test
imul
adc
mov
or
(bad)
jecxz
fs
ja
pushf
inc
je
imul
movs
add
les
(bad)
mov
in
inc
mov
jecxz
add
xchg
pop
sbb
imul
mov
cmp
inc
popf
(bad)
outs
(bad)
js
test
inc
pop
mov
lahf
or
dec
test
pusha
loop
xor
xchg
xchg
pop
dec
int
aam
sub
dec
fimul
inc
aam
jbe
fidiv
and
inc
js
cmp
fisub
sbb
pop
aad
push
pop
or
fnsave
or
rcr
dec
scas
out
mov
arpl
adc
fldenv
lods
mov
loope
add
dec
shl
pop
mov
ins
push
adc
out
aaa
outs
lahf
sbb
push
retf
pop
mov
mov
add
dec
lods
arpl
xchg
sbb
xor
pop
loop
and
cmpxchg
movs
(bad)
imul
dec
add
nop
daa
out
mov
addr16
push
pop
inc
mov
add
inc
adc
cwde
outs
cmps
adc
jle
jecxz
and
int3
fld
jnp
push
pop
add
push
cli
test
mov
or
mov
lods
(bad)
add
out
int
sbb
lea
mov
pop
call
jmp
repz
xchg
cdq
mov
mov
mov
mov
mov
mov
push
call
sbb
fiadd
sar
xchg
mov
js
test
and
mov
xlat
push
fstp
sub
popf
cdq
and
mov
push
dec
dec
cmp
push
inc
or
xlat
nop
or
inc
cs
movs
fiadd
ror
test
es
lar
mov
mov
xchg
repz
ficomp
adc
sub
mov
ret
adc
mov
pop
cmp
pop
mov
push
mov
pop
mov
xor
aad
fist
xor
add
in
mov
aaa
adc
gs
cdq
rcr
(bad)
jecxz
adc
mov
and
addr16
add
clc
mov
pop
ins
cmps
and
lods
ins
sub
mov
shl
fidivr
jae
jns
cmp
adc
jnp
ss
(bad)
scas
and
sub
imul
pop
(bad)
cli
mov
shr
loop
scas
or
pop
int
lock
fs
xchg
mov
mov
add
cmp
popa
add
test
mov
lods
stos
retfw
cmps
fbld
test
mov
shl
jecxz
cmp
jp
inc
push
fist
cmps
xchg
adc
bound
fs
push
jecxz
add
imul
arpl
(bad)
mov
in
and
inc
(bad)
sbb
(bad)
neg
iret
inc
add
pop
sub
daa
sub
pop
cli
inc
mov
push
xlat
dec
rcl
sub
cmp
sahf
out
sbb
clc
stos
xchg
stos
or
imul
enter
call
lds
jae
or
movs
or
cmp
lock
out
inc
inc
pop
or
sbb
xchg
(bad)
stos
jg
xchg
mov
pop
pop
adc
push
lahf
retf
aam
inc
pop
lds
and
and
popa
sub
xchg
jbe
pop
xlat
add
scas
rcl
xor
call
sub
lods
dec
int
add
mov
repnz
imul
jbe
aas
dec
adc
out
rcr
jecxz
jns
(bad)
stos
mov
jo
pushf
adc
xchg
jnp
push
retf
pop
cmps
inc
xchg
mov
dec
std
jmp
nop
sbb
jae
and
icebp
stos
pop
add
mov
aam
mov
sbb
mov
mov
push
xchg
push
call
scas
cmc
std
in
xchg
jb
push
dec
fist
lahf
dec
and
push
popf
cdq
cmc
aam
sbb
sbb
adc
clc
push
bound
jnp
test
inc
mov
jbe
cmps
pop
shl
inc
push
out
(bad)
cmp
scas
hlt
sbb
mov
les
sbb
cmps
call
inc
and
mov
mov
ror
ins
loopne
jge
out
pushf
fs
add
movs
jg
mov
cmps
std
movs
jp
in
es
repz
mov
mov
jno
pop
pop
inc
fwait
push
pop
arpl
out
pushf
enter
mov
add
xchg
push
(bad)
xlat
(bad)
outs
cwde
add
aas
arpl
pop
pop
pusha
mov
cli
cdq
sbb
mov
push
dec
mov
mov
ins
pop
mov
stos
and
mov
outs
shr
add
in
dec
cmp
sub
jecxz
mov
outs
test
sbb
push
inc
ror
data16
push
xlat
mov
adc
test
hlt
sbb
aad
movs
(bad)
mov
mov
clc
cmc
cmp
cdq
inc
gs
jle
push
ja
and
inc
iret
push
call
xor
xlat
inc
outs
pop
xchg
sti
nop
cmp
ins
ja
mov
mov
loop
mov
sbb
xor
jae
mov
(bad)
push
cld
fdivr
fcomp
jae
mov
sbb
fstp
gs
and
push
pop
adc
(bad)
or
mov
dec
(bad)
mov
pusha
sbb
jne
sbb
adc
xor
dec
cmp
jp
xchg
fidivr
pop
test
in
aad
xchg
xor
mov
cdq
sbb
sbb
shld
adc
dec
dec
in
fistp
mov
push
xchg
add
pop
pop
xor
loop
cmp
mov
out
sub
shl
es
dec
jl
jmp
ins
sahf
and
aaa
loopne
inc
push
movs
push
and
jmp
jb
pop
fs
lds
(bad)
mov
cmp
imul
xchg
and
scas
fnstenv
fmul
jecxz
cmp
mov
popf
push
movs
lds
lahf
(bad)
aas
movs
mov
ror
jp
mov
fmul
sbb
cmp
push
xor
and
fwait
test
push
fsub
sub
out
ss
mov
mov
mov
xchg
mov
or
aaa
or
arpl
mov
pop
adc
sbb
test
(bad)
fcomp
loop
fstp
lock
jle
pop
cwde
xlat
xchg
dec
push
dec
mov
push
(bad)
out
sub
(bad)
add
aaa
inc
loopne
cs
in
mov
push
or
xchg
sub
into
fmul
xchg
fiadd
test
jo
jmp
sub
mov
mov
push
es
inc
or
loopne
ret
pop
cdq
int
inc
in
(bad)
fdivr
and
mov
xchg
xor
fbld
adc
sahf
(bad)
push
pop
push
nop
(bad)
mov
push
lea
movs
inc
push
sti
inc
leave
sub
jle
dec
arpl
pop
xlat
neg
mov
mov
int3
mov
mov
mov
push
arpl
push
xchg
std
inc
in
or
cld
pop
nop
ret
dec
imul
lock
push
jo
mov
adc
pop
imul
sbb
fimul
popf
mov
cmc
(bad)
mov
mov
test
mov
xor
mov
arpl
fdiv
movs
pop
enter
inc
inc
es
aas
fcmovbe
push
sub
ds
mov
add
dec
mov
jns
push
mov
xchg
sti
xor
mov
dec
loope
fsubr
add
sahf
mov
adc
add
sbb
test
cmp
shl
adc
cs
add
push
xor
je
sar
dec
xlat
xchg
loopne
mov
jne
push
pop
xchg
add
adc
mov
ret
and
cdq
mov
cwde
rcl
(bad)
cli
adc
pop
push
sbb
jb
adc
gs
shl
sub
repnz
in
cmps
jo
movs
jbe
cld
mov
es
pop
or
push
sub
stos
rol
mov
pop
cli
pop
push
mov
and
pop
sbb
(bad)
jmp
lds
mov
in
lods
pop
mov
adc
rol
mov
pop
stos
push
pushf
pop
xchg
pop
push
dec
and
repz
test
(bad)
mov
cli
adc
(bad)
adc
mov
inc
movs
cmp
add
lods
xchg
pushf
lods
std
cmps
mov
je
imul
xchg
aaa
(bad)
push
cmp
or
int
fidiv
push
xlat
jl
dec
xchg
xor
out
jno
call
ret
mov
dec
std
add
ret
mov
test
sbb
mov
mov
jne
push
mov
(bad)
pusha
aam
add
fild
ds
(bad)
outs
loopne
dec
xor
ds
sbb
sbb
xor
pop
loopne
mov
cmp
out
fstp
in
and
sar
test
push
push
jns
xlat
push
xor
int
repnz
pop
mov
add
and
jae
cmp
cwde
xchg
enter
push
push
cmc
out
dec
fstp
mov
pop
pop
sbb
mov
leave
cwde
and
jae
push
scas
and
ins
cmp
ror
imul
pop
push
fs
or
jl
push
mov
sub
std
jb
loope
or
mov
fs
mov
pop
mov
popf
jns
repz
cmc
mov
sar
pop
ds
sbb
mov
jo
adc
je
cld
ins
mov
mov
mov
imul
pop
ins
shl
jmp
fst
pop
xchg
jne
mov
retf
pushf
int
jbe
sbb
inc
sub
fwait
inc
push
mov
dec
lods
add
sub
rep
mov
dec
jo
dec
(bad)
fsubr
icebp
ds
mov
aaa
dec
into
add
mov
ja
and
sbb
movs
std
iret
sbb
imul
pop
enter
xor
mov
mov
stos
scas
into
aam
ror
fstp
sti
sub
xor
xchg
add
xchg
dec
or
outs
js
xchg
in
sbb
cmp
pop
push
loopne
jne
push
jb
cli
retf
inc
push
pop
inc
lods
pusha
push
retf
fstp
push
cmp
retf
adc
and
xchg
icebp
lahf
pop
movs
jnp
mov
iret
(bad)
push
jmp
jmp
jmp
lahf
gs
jle
mov
loopne
add
cmp
daa
push
sub
adc
push
ret
xchg
sub
xchg
xchg
pop
mov
nop
daa
arpl
fiadd
imul
js
and
adc
add
add
sbb
fidivr
mov
mov
scas
aad
dec
push
xchg
out
inc
cs
idiv
lds
sbb
out
daa
inc
xchg
mov
out
or
sub
mov
pop
nop
popa
test
es
jno
nop
jl
fwait
push
xchg
aam
jns
je
mul
int3
lods
or
rol
imul
in
ret
cmp
pop
shl
push
dec
and
popf
sub
and
fsubr
rcl
xchg
xchg
aad
mov
mov
lods
nop
ffree
jmp
cmps
adc
mov
(bad)
sbb
cmp
seto
xor
cmp
call
pop
mov
in
inc
xor
sub
mov
(bad)
mov
into
sub
push
neg
mov
lea
outs
mov
fnstsw
xchg
test
mov
adc
sbb
sub
jl
std
(bad)
(bad)
cmp
xchg
fcmovbe
mov
ins
daa
pushf
push
xor
push
call
xchg
sbb
pop
cmp
(bad)
pushf
lods
adc
sub
lods
in
imul
xor
mov
or
and
sbb
pushf
fs
retf
cli
outs
stos
ds
xchg
push
cmp
ret
xor
xchg
push
sub
jnp
pop
test
mov
popf
sahf
jmp
jnp
add
pop
cmp
clc
daa
pop
ss
fmul
xchg
out
fwait
pop
mov
adc
or
call
cli
xchg
sub
push
cwde
push
aad
jmp
(bad)
dec
mov
xchg
pop
neg
or
cwde
test
mov
or
and
je
push
xchg
push
inc
jnp
jg
add
out
adc
mov
lds
dec
(bad)
aaa
mov
sbb
mov
mov
into
icebp
jnp
ins
inc
dec
xor
pop
xchg
sar
or
and
nop
in
jg
push
xchg
cmp
pop
and
mov
xchg
dec
aas
call
psrlw
leave
out
ins
mov
popa
fdiv
jg
call
rcr
adc
(bad)
test
xchg
inc
(bad)
popa
adc
out
sub
or
dec
sbb
shl
sbb
jge
test
jmp
loope
jmp
outs
in
dec
sbb
mov
int
dec
xchg
jno
fild
mov
(bad)
or
inc
push
stos
imul
movs
(bad)
in
icebp
inc
stc
popa
mov
lds
or
nop
imul
push
sbb
or
mov
ror
sub
dec
jo
cmp
(bad)
scas
mov
call
repz
mov
mov
(bad)
mov
pop
mov
mov
loop
sbb
mov
add
pop
inc
jmp
inc
pop
ret
pop
jecxz
call
les
fcmovnu
mov
stc
jecxz
shl
xlat
not
lods
out
add
pop
push
sbb
test
xor
push
ins
xchg
xlat
add
pop
jg
dec
push
inc
pushf
mov
aad
scas
or
mov
push
push
jne
rol
lock
ins
pop
(bad)
bound
jb
xor
add
mov
adc
adc
push
jg
cmp
ja
pop
icebp
jno
sub
dec
aas
cs
pop
cwde
call
sub
popw
xchg
sar
xchg
pushf
call
stc
inc
cmp
pop
aas
cwde
add
ret
iret
imul
ins
movs
mov
cdq
jp
pop
pop
mov
aad
movups
jns
xchg
sbb
cli
jo
sbb
and
lea
push
sub
or
lods
and
arpl
push
fld
fsubrp
fisub
push
ins
or
pop
test
jmp
pop
scas
xchg
mov
push
and
add
(bad)
jecxz
or
mov
xchg
retf
push
data16
mov
fwait
xor
sub
pop
push
ret
add
arpl
icebp
fimul
add
jp
fidivr
fisubr
stc
xchg
out
sub
fsub
sub
hlt
(bad)
or
adc
cmp
mov
sub
sbb
in
in
jne
cmp
fisub
xchg
jns
(bad)
cld
sbb
sbb
mov
mov
cs
mov
test
mov
clc
cs
pop
fstp
mov
dec
mov
jge
dec
xchg
jno
add
in
push
scas
imul
retf
shl
in
push
outs
hlt
dec
or
out
imul
je
arpl
mov
stc
inc
fsub
sti
mov
pop
pop
inc
clc
mov
ja
and
sub
fist
mov
rcr
push
sbb
fs
jbe
jo
rcl
pusha
loop
pop
mov
sbb
and
mov
icebp
sahf
icebp
inc
js
add
mov
push
jae
dec
(bad)
adc
cmps
sbb
dec
clc
jo
sub
adc
dec
and
shl
shl
dec
sbb
and
fwait
aam
jns
in
pop
dec
xor
cmps
jno
fnstenv
jle
out
daa
mov
xor
xor
mov
(bad)
retf
xchg
mov
fstp
call
and
scas
mov
enter
pop
stos
jo
xor
cli
dec
hlt
in
sahf
imul
popa
(bad)
cmp
pop
jo
or
test
xchg
ret
or
fucomi
push
test
sbb
inc
outs
inc
adc
(bad)
es
loopne
into
inc
pop
les
or
cmp
retf
ret
mov
popa
inc
jo
add
jbe
pop
loope
xor
mov
pushf
jmp
and
mov
mov
sbb
mov
pop
jp
shl
sar
push
xchg
inc
shr
mov
adc
dec
(bad)
ja
adc
outs
and
test
xor
loope
xor
xor
inc
hlt
lock
sub
adc
faddp
add
xchg
cmp
jg
xor
sub
add
xchg
sub
or
cld
shr
push
sbb
bound
movs
into
xor
add
shl
pop
push
jle
jp
loope
pop
jae
ja
xchg
loopne
or
(bad)
or
loop
jle
push
in
repz
mov
add
sub
mov
xchg
jnp
in
pop
cdq
mov
lods
mov
pop
mov
adc
leave
aam
hlt
fidivr
xor
and
pop
jae
cli
daa
mov
jae
adc
and
cdq
repz
jecxz
repnz
inc
test
(bad)
out
icebp
or
(bad)
jge
adc
adc
es
sbb
bound
repnz
mov
cdq
push
mov
push
push
mov
clc
cwde
add
in
cwde
lds
scas
xor
mov
loope
sub
rcl
sub
adc
mul
adc
scas
xchg
jl
stos
es
fwait
and
cmps
(bad)
push
mov
fdivr
fimul
icebp
adc
sub
in
mov
test
outs
or
adc
mov
stc
push
and
mov
jmp
and
jge
imul
mov
cmp
cmps
xor
es
mov
sub
or
(bad)
out
inc
sub
inc
cmp
mov
aam
mov
sar
repz
(bad)
jecxz
cld
or
pop
mov
xor
xchg
dec
adc
and
movs
arpl
jbe
shl
les
and
jb
and
xchg
mov
dec
aam
icebp
push
out
stos
xor
stos
frstor
push
ja
jae
xor
rcl
clc
xchg
ja
mov
sbb
and
fnstsw
sub
inc
cmp
push
adc
push
xor
adc
mov
into
xchg
rcr
into
je
mov
cmp
or
xor
mov
mov
sub
div
call
pop
jo
cmp
jecxz
jle
rcl
mov
adc
jnp
fs
dec
jp
gs
mov
sub
inc
mov
adc
jl
lahf
scas
jno
icebp
lea
mov
call
and
je
(bad)
lahf
xchg
add
shl
aas
inc
stos
pop
push
push
jae
jae
push
xlat
sbb
out
in
xchg
repz
out
xor
inc
movs
or
xor
je
repz
jg
jmp
pushf
and
lods
and
mov
mov
xor
es
popf
jae
jmp
sub
and
mov
add
dec
js
cwde
cld
push
stos
das
cmp
sbb
inc
push
mov
fld
int
jne
mov
outs
js
jge
cmp
mov
cmp
js
jl
dec
or
ss
jle
daa
adc
inc
mov
cvtdq2ps
mov
pop
mov
cmps
xor
(bad)
aam
es
mov
fcomi
outs
xor
mov
pop
xchg
cli
jns
xchg
jb
adc
imul
lds
push
out
pop
dec
out
outs
pop
jmp
cdq
lods
icebp
xchg
cmp
inc
dec
fmul
and
and
arpl
xchg
sbb
cmp
sbb
or
xor
neg
push
xchg
mov
sub
aaa
imul
pop
mov
pushf
in
and
pop
fist
neg
and
sbb
imul
test
xchg
call
dec
jb
jl
sbb
pop
int
cmp
enter
and
idiv
(bad)
pop
ins
mov
daa
sub
shr
add
arpl
pushf
inc
lock
sbb
sbb
das
mov
mov
xchg
pop
xor
addr16
sti
popf
mov
mov
cs
inc
xchg
adc
add
jle
xor
js
out
stos
test
idiv
in
cmp
mov
(bad)
jae
fimul
daa
adc
cmps
and
sub
cli
jo
loopne
xor
fwait
xor
fsubr
pop
add
dec
je
pop
arpl
and
aad
out
dec
sub
test
pop
add
mov
fwait
je
mov
pop
cmc
sub
xor
cs
mov
sar
fcmovnu
test
in
test
xchg
xlat
fnstsw
inc
imul
cmp
dec
sub
jns
mov
xchg
mov
mov
cmp
lea
std
dec
int3
fsubr
or
or
add
stc
cmp
pop
mov
rcl
sub
xor
push
mov
add
mov
(bad)
xchg
sub
mov
mov
rcr
fdivrp
fild
dec
lahf
into
test
lods
rcl
hlt
jmp
bound
sbb
out
sbb
adc
sub
xor
xchg
xor
add
ss
add
adc
cmovns
xor
ss
xor
add
jmp
hlt
mov
sub
test
and
xor
xor
test
pusha
push
pop
jno
out
dec
pop
imul
xor
hlt
jmp
dec
push
sbb
daa
add
dec
sub
(bad)
pushf
ds
push
push
rcr
rcr
(bad)
lds
nop
mov
jmp
into
pop
push
(bad)
sub
jb
xchg
jl
push
imul
lods
jne
or
(bad)
pop
pop
xor
and
jp
push
dec
mul
sbb
shl
mov
or
jmp
and
cli
scas
and
inc
pop
nop
arpl
aaa
pop
pop
les
inc
jmp
xchg
dec
add
xor
mov
ret
xchg
pop
cli
fcom
pop
aaa
adc
ret
inc
sbb
fwait
xchg
jle
push
add
rcl
mov
pop
fidivr
push
lock
(bad)
pushf
cli
lea
sub
inc
inc
arpl
xor
cmp
fisttp
dec
add
test
jmp
mov
pusha
into
pop
xchg
push
movs
icebp
sbb
sub
mov
mov
sub
push
mov
xchg
(bad)
mov
(bad)
pop
mov
pop
mov
test
ror
and
pop
xor
xchg
inc
xchg
cdq
mov
jmp
adc
retf
retf
push
cwde
hlt
into
sbb
mov
jge
addr16
push
xchg
mov
sub
pop
lahf
inc
sub
push
rol
push
sbb
push
pushf
mov
aad
loop
or
jnp
jno
add
les
or
bound
xor
das
imul
inc
cmps
sbb
jp
add
fdivr
mov
outs
push
ins
scas
dec
call
mov
sbb
cmp
or
jle
lods
jmp
std
fadd
mov
push
je
clc
ins
fld
lahf
test
mul
stos
scas
mov
xlat
xor
pushf
js
sbb
loopne
sub
into
inc
mov
iret
jge
xor
pop
js
cmp
sub
sbb
dec
jbe
jl
mov
pusha
and
xchg
retf
mov
scas
push
mov
cmp
push
sbb
dec
inc
cmp
pop
fwait
jmp
out
xlat
mul
and
ret
ins
test
fimul
push
into
mov
int
mov
adc
adc
inc
lock
leave
or
mov
cmp
cmc
dec
push
push
or
sbb
out
rcl
and
add
int3
(bad)
lock
and
je
mov
mov
pop
retf
test
shl
xchg
(bad)
mov
jne
jmp
ror
cs
xchg
in
nop
xchg
xor
dec
dec
dec
(bad)
cmp
mov
adc
cmp
arpl
cdq
cs
fst
lds
and
cmc
add
sub
call
stos
std
dec
(bad)
cmc
sahf
cmp
clc
in
xchg
cld
jns
mov
xor
jge
dec
mov
jns
mov
(bad)
pop
loop
adc
sahf
push
push
and
sbb
or
mov
mov
(bad)
jae
cs
stc
inc
pusha
xchg
movups
mov
mov
stc
lods
ret
and
sahf
sahf
aaa
xor
ins
xor
fidivr
jmp
sahf
mov
and
cmp
leave
lahf
dec
test
test
stos
dec
cmp
addr16
popf
xlat
or
es
inc
xor
outs
mov
dec
scas
fcom
jecxz
out
add
sbb
retf
pop
mov
xchg
loopne
mov
sbb
xchg
pop
pop
adc
stc
or
or
sbb
xchg
push
sbb
dec
cmp
stos
repz
nop
jbe
jb
fisub
push
dec
xor
pop
add
outs
push
xchg
mov
dec
sub
shr
data16
stos
lock
out
call
enter
mov
dec
shl
sbb
mov
and
push
push
dec
test
add
rcl
dec
mov
xlat
ds
mov
add
mov
push
leave
sub
popa
shr
mov
(bad)
lods
or
loopne
dec
sub
int3
inc
nop
mov
xlat
mov
repz
push
sbb
sub
mov
stos
movs
(bad)
movs
mov
push
sub
(bad)
les
inc
sbb
mov
enter
cli
ins
mov
jle
mov
jmp
pop
push
or
in
sub
fmulp
mov
mov
retf
mov
sti
sub
ror
cli
jbe
das
jbe
pop
or
jae
dec
lods
sbb
out
ja
in
rcl
shl
dec
pop
scas
(bad)
fidiv
and
fwait
loopne
lods
dec
and
cmp
mov
or
xor
push
jmp
sbb
mov
into
lods
and
fsub
adc
mov
jnp
inc
adc
sbb
jge
cmc
movs
cmp
(bad)
movs
mov
fisub
ret
cs
mov
push
repnz
xor
jns
retf
je
retf
adc
inc
movs
test
adc
mov
sti
(bad)
fisub
iret
dec
inc
mov
outs
cmp
cwde
jle
or
sub
cmp
in
and
pop
shr
sbb
enter
xchg
dec
xor
dec
int
shr
retf
sahf
mov
pop
mov
(bad)
out
pop
jbe
and
xchg
adc
je
imul
bound
scas
scas
mov
sbb
mov
int
movs
nop
shl
jmp
ins
ins
add
mov
jg
jp
int3
(bad)
sbb
stos
pop
outs
repnz
mov
dec
mov
scas
movs
idiv
xor
int3
mov
icebp
sbb
dec
lods
aas
popa
jae
adc
in
retf
dec
mov
dec
inc
dec
(bad)
aam
inc
xor
cs
dec
mov
jno
mov
sub
in
rcr
mov
sar
jecxz
rcl
push
inc
jns
call
sbb
jp
mov
stos
stos
fisub
inc
fcomp
pop
or
or
jp
adc
mov
fbstp
sahf
adc
inc
daa
cwde
je
cmps
imul
xchg
pop
je
in
inc
xchg
fwait
mov
jle
mov
loopne
out
sbb
sar
pop
cs
dec
test
sub
or
call
(bad)
or
js
std
rcl
sbb
push
sbb
out
mov
push
mov
push
rcr
inc
ja
adc
imul
repnz
ins
mov
xor
dec
sbb
(bad)
js
out
and
and
stos
sbb
lahf
ficom
retf
or
les
mov
fbstp
adc
(bad)
and
jbe
mov
inc
stos
add
and
sub
cmp
or
pop
dec
loope
fcmovne
outs
mov
inc
fisubr
imul
cmp
adc
ret
and
fcomp
mov
inc
and
ret
imul
pop
hlt
sbb
icebp
cld
movs
fld
push
jl
add
btc
xchg
mov
mov
xchg
jl
sti
cwde
imul
sbb
not
sub
cmp
cwde
(bad)
sti
sbb
xor
jb
or
ror
cmp
fsub
cmp
inc
lahf
sub
dec
ret
jmp
stos
mov
mov
dec
xor
sbb
int
scas
and
fdivr
xlat
call
cld
pushf
mov
pop
pop
cmp
adc
jbe
fist
inc
mov
sbb
push
(bad)
add
inc
pop
push
inc
lods
je
outs
ja
aam
pushf
mov
call
jo
or
je
fisub
loopne
pop
jne
pop
xor
retf
mov
call
shr
repnz
pop
jne
inc
ror
mov
fwait
loope
mov
mov
into
lahf
jg
cmps
cli
outs
gs
jb
lds
inc
into
ud1
xchg
repnz
sar
mov
popa
into
hlt
xor
les
aas
js
cmps
daa
lods
sbb
cmps
and
adc
rcr
lods
fldcw
adc
dec
outs
jne
cmp
loopne
mov
ror
push
adc
inc
ficom
std
lods
shl
inc
pop
hlt
test
cwde
stc
test
popf
jl
cmp
and
or
push
(bad)
adc
jl
add
push
dec
mov
out
adc
loop
xchg
fdiv
inc
test
out
and
iret
xor
sub
rol
fldenv
stc
jge
dec
gs
std
popa
cmp
inc
ds
xor
push
aam
mov
dec
lea
loop
cs
repz
cmc
cmp
pop
and
sub
mov
call
pop
popa
out
cmp
jb
fs
test
jns
test
ja
(bad)
dec
loop
cmp
cdq
add
xchg
pop
adc
xor
pusha
cmps
dec
popf
nop
test
cli
cli
bound
jb
xor
retf
jp
popa
call
pusha
mov
fnstenv
test
add
add
mov
adc
arpl
inc
jne
push
dec
data16
push
not
xor
inc
(bad)
stc
shl
jne
movs
add
dec
fwait
xchg
add
add
repz
test
xchg
loopne
add
into
loop
push
outs
es
loopne
retf
jbe
into
mov
enter
lock
push
loopne
push
mov
mov
xor
mov
mov
into
mov
cmc
test
sbb
jns
(bad)
jae
pop
sub
xor
push
cld
sar
mov
dec
xchg
cmp
xchg
sub
jl
adc
xchg
rcl
push
xor
pop
popa
or
in
aaa
loope
mov
cmp
rol
sbb
add
sbb
(bad)
lahf
cmp
adc
sbb
es
jno
xchg
mov
and
rol
scas
sub
lods
xchg
cmp
jb
sbb
pop
xchg
fsub
xor
dec
cdq
sub
(bad)
xor
arpl
jmp
inc
fisub
mov
fadd
jno
mov
mov
cmc
cmp
xchg
inc
(bad)
int3
pop
std
into
(bad)
test
leave
pusha
out
sbb
lods
cmps
inc
pop
pop
hlt
xor
pop
inc
mov
mov
sbb
xchg
stos
xor
dec
inc
sub
(bad)
pusha
adc
push
fcom
movs
add
sub
(bad)
pop
and
push
jae
stos
aad
repz
(bad)
sbb
inc
add
dec
push
and
jno
add
mov
out
imul
outs
out
shr
sbb
add
mov
inc
fisttp
mov
dec
cmp
pop
cmp
test
popf
test
fbstp
dec
xor
jo
cmp
imul
jge
imul
dec
sahf
fist
aam
dec
push
out
adc
jbe
xchg
dec
fwait
outs
iret
arpl
sbb
test
and
push
pop
js
test
xchg
inc
cmp
in
adc
outs
dec
pop
lahf
hlt
pusha
mov
jno
add
dec
xor
add
mov
inc
jo
adc
cmp
mov
push
mov
mov
mov
cmps
loope
sub
inc
imul
(bad)
adc
sub
xchg
jae
and
xor
popf
dec
ret
or
mov
jmp
aas
shr
adc
pop
neg
sbb
retf
mov
loope
dec
inc
xchg
dec
mov
sub
mov
imul
sahf
frstor
jg
mov
aam
mov
cmc
xchg
imul
ds
and
jge
mov
out
jne
in
pop
push
pop
arpl
out
sbb
std
stos
fnsave
aaa
and
pusha
dec
(bad)
jmp
xor
lea
(bad)
aad
sub
loop
jecxz
into
or
sbb
xchg
cmp
addr16
pop
jnp
jmp
retf
je
pop
mov
cmp
sar
mov
pop
pop
into
jmp
cmp
imul
into
dec
add
xchg
dec
sub
repnz
fmul
sbb
mov
inc
fcomp
inc
adc
mov
dec
mov
retf
dec
mov
dec
repnz
cmp
push
pusha
outs
jg
pusha
add
adc
and
in
add
adc
add
pushf
dec
gs
jp
or
icebp
jns
cwde
retf
jg
add
test
pop
ret
mov
add
clc
test
nop
adc
fadd
inc
adc
pop
sub
xchg
test
lahf
mov
sub
mov
inc
cmps
add
xchg
xchg
and
add
sub
xor
mov
mov
mov
pop
xor
cmp
(bad)
cmc
push
arpl
mov
outs
pop
dec
push
cmc
mov
clc
das
mov
inc
imul
(bad)
push
dec
adc
rol
cmp
inc
or
rol
or
cmps
mov
das
mov
mov
xor
retf
xor
xor
test
jnp
xor
movs
lock
push
ror
jnp
adc
push
mov
jmp
(bad)
fisub
mov
mov
mov
jno
cmp
int3
ss
mul
xor
cmc
xchg
pop
mov
fcomp
dec
enter
hlt
test
xor
or
mov
jb
jo
pop
(bad)
nop
jge
(bad)
lahf
sbb
aam
pop
pop
mov
dec
(bad)
mov
adc
in
and
or
add
add
add
sbb
push
dec
(bad)
and
xlat
div
mov
push
adc
int3
add
lods
mov
shl
sub
test
mov
loop
imul
loopne
arpl
mov
lock
in
lock
mov
retf
arpl
(bad)
imul
mov
mov
pop
mov
div
fnstcw
adc
sub
ror
mov
adc
popf
push
movs
ret
outs
imul
dec
cwde
sub
das
mov
(bad)
int3
pop
fsubr
rol
cs
sbb
jmp
lods
and
imul
adc
mov
jno
cld
pop
xor
xchg
and
fwait
inc
iret
inc
or
dec
xor
clc
or
fdiv
cmps
xchg
cs
mov
std
test
sub
call
das
mov
inc
jecxz
fwait
lods
push
and
sti
dec
push
bound
add
jmp
jne
cmc
(bad)
jo
sti
push
test
jmp
mov
dec
rol
xchg
out
lea
mov
pop
mov
lea
mov
mov
push
pop
xor
iret
sbb
test
xchg
sub
push
mov
mov
push
jmp
(bad)
xor
fnstsw
rcl
mov
mov
add
mov
push
retf
add
xor
xchg
jae
push
mov
push
stos
clc
daa
add
mov
mov
(bad)
push
gs
jg
(bad)
hlt
das
aam
(bad)
lods
pop
sbb
hlt
jno
fsubr
rcl
xor
(bad)
sar
or
mov
mov
mov
pop
or
dec
les
movs
pushf
sti
mov
jle
out
push
ins
xchg
scas
inc
jns
cld
cmp
xor
fcom
xor
mov
pushf
inc
or
jecxz
push
fs
mov
mov
out
es
sub
mov
rcl
mov
cld
(bad)
call
jbe
mov
xor
jb
clc
inc
test
mov
cdq
into
stos
rcl
sub
stos
out
jns
mov
enter
push
bound
mov
push
dec
sub
jae
xchg
push
shl
mov
rcl
into
stos
mov
fist
mov
jmp
repz
sete
ins
scas
ud1
lods
pop
push
push
movs
xlat
shr
je
aas
push
mov
push
(bad)
or
mov
ret
push
adc
pop
mov
repz
rcr
inc
lock
loopne
push
jge
add
out
(bad)
cwde
and
aam
jne
shr
xchg
push
das
les
(bad)
sub
pusha
jge
push
and
sub
clc
adc
pop
imul
push
jmp
not
adc
dec
fild
xor
push
dec
mov
scas
repnz
cld
inc
cwde
cs
fsubp
aas
in
jne
mov
pop
aad
adc
sub
mov
(bad)
xchg
cmp
xchg
ins
pop
loopne
mov
inc
stc
mov
mov
lock
test
test
pop
imul
push
cld
shl
adc
mov
pop
pop
imul
ds
mov
ret
push
mov
xchg
push
aaa
xor
sbb
je
inc
mov
repz
stos
es
push
fld
out
lahf
pop
and
adc
sbb
mov
retf
shl
xor
sbb
je
xor
jbe
pusha
lods
jge
es
dec
dec
push
sub
push
mov
fdivr
xor
cmp
adc
lods
adc
xor
add
outs
jg
sbb
out
mov
ss
jns
xor
test
ins
cmc
stc
push
or
mov
jnp
aad
push
adc
in
mov
xor
lock
inc
mov
fisttp
push
xchg
push
xchg
xchg
cmp
adc
std
pop
ss
push
leave
push
jg
cmc
(bad)
fcomip
inc
inc
test
dec
sub
sahf
add
test
(bad)
adc
inc
jae
repz
sub
int
sbb
call
gs
sub
fwait
icebp
add
adc
add
imul
dec
fdiv
out
xor
sbb
push
mov
push
and
mov
and
cmp
jo
fsubr
popf
test
daa
and
jmp
push
or
das
dec
dec
inc
retf
(bad)
pop
dec
fdiv
outs
add
sbb
sbb
push
mov
cmp
or
mov
mov
mov
cmp
push
loope
inc
mov
or
inc
mov
loop
jmp
or
inc
sti
pusha
in
je
aad
xor
outs
add
inc
mov
jno
je
cmp
push
int
dec
pop
adc
call
data16
sub
fst
(bad)
gs
jl
fcmovne
xor
push
dec
push
daa
repnz
xlat
xor
mov
adc
fdivr
xor
je
dec
sbb
mov
and
mov
pop
pushf
xor
fcomp
push
pop
aad
bound
in
(bad)
sbb
xchg
sub
cdq
xor
rol
adc
push
pop
or
xor
pop
cwde
and
mov
inc
mov
jmp
scas
mov
pop
jle
test
mov
or
sbb
cwde
fiadd
adc
lock
push
push
gs
jmp
sbb
sar
in
lock
shr
std
jmp
shl
xchg
jecxz
push
jno
fldcw
xor
imul
ror
test
(bad)
add
sbb
xchg
jmp
adc
test
or
xor
mov
call
or
popa
arpl
add
js
jmp
jl
or
jecxz
cmps
dec
inc
mov
xchg
movs
mov
and
pop
and
mov
loop
stos
shl
xchg
add
sbb
icebp
mov
mov
mov
or
out
mov
push
es
call
int3
inc
xor
mov
js
inc
js
rcr
add
pop
cmp
push
xor
fisubr
jecxz
cmp
sar
mov
dec
fist
ins
cmp
dec
aad
enter
xlat
stc
ret
dec
shl
and
mov
out
retf
mov
outs
shl
into
test
add
jne
sti
dec
out
sub
rcr
mov
dec
push
sbb
xor
push
or
mov
mov
je
std
cdq
jle
loop
sbb
call
inc
mov
sub
repnz
inc
ror
sub
das
lods
sub
rcl
cmp
jns
push
mov
jns
nop
daa
into
mov
inc
fidiv
sbb
pop
adc
jb
jge
lods
and
or
jnp
test
test
xor
mov
cmp
mov
loopne
add
jmp
xor
ret
fistp
and
adc
inc
cmc
pop
jns
mov
mov
lods
pop
mov
sbb
mov
and
push
out
clc
cmps
xchg
(bad)
mov
add
rcr
add
push
mov
mov
xchg
ffree
call
xchg
jb
sbb
lods
test
lock
push
popf
aaa
dec
lods
inc
cmp
lods
data16
xor
out
scas
pop
jmp
fsub
sbb
arpl
cmc
mov
mov
pop
mov
pusha
add
cmp
push
mov
ds
daa
lock
jl
(bad)
jae
mul
call
fistp
push
cmps
sub
sbb
push
pop
pop
and
addr16
gs
push
sub
or
repz
xchg
scas
out
xor
lahf
pop
mov
cwde
ss
cmp
fidiv
mov
pop
push
pushf
js
loope
sub
cmp
sar
aas
jns
dec
push
cmp
mov
mov
test
movs
retf
retf
idiv
xor
jmp
int3
xor
push
jne
jg
xchg
(bad)
imul
call
jae
icebp
mov
jo
les
aad
push
add
jb
push
std
sbb
addr16
mov
jnp
mov
stos
cmc
cmp
in
or
dec
push
mov
dec
push
xor
pop
out
jecxz
cmp
xchg
cmp
xchg
mov
cmps
hlt
sahf
retf
mov
xchg
push
dec
inc
add
jno
(bad)
adc
pop
push
pop
or
add
sbb
pop
ror
test
sbb
nop
mov
pop
jle
pop
es
aad
aad
push
jb
mov
dec
and
scas
sbb
mov
fs
cmp
and
pushf
call
in
dec
lock
pop
sbb
ins
int
xchg
mov
retf
fild
and
mov
push
inc
adc
or
jns
retf
sbb
mov
(bad)
dec
rol
inc
and
push
mov
mov
dec
or
or
mov
xor
jmp
cmp
scas
jno
xchg
xchg
or
xor
loope
pop
fild
jge
xor
aam
xor
inc
and
inc
call
push
dec
mov
xor
retf
push
jecxz
cmps
ret
cmp
sar
xor
aas
dec
push
lods
lds
jp
es
(bad)
jae
cs
cmp
adc
(bad)
pushf
sub
(bad)
in
test
jnp
pop
mov
out
pop
lahf
adc
fmul
rcr
fdivr
sub
call
dec
xor
sbb
jbe
data16
in
pop
aam
icebp
sar
popf
sub
and
jae
or
mov
add
or
sbb
pop
sti
inc
and
test
popf
rol
jl
icebp
and
ret
outs
jns
sbb
mov
xchg
fs
(bad)
xchg
dec
dec
xlat
ins
scas
and
jg
or
and
mov
xchg
cmp
xchg
xor
std
xchg
inc
pop
nop
pop
cld
xchg
popf
mov
shr
xor
add
neg
add
jb
popf
dec
inc
js
jp
lea
jmp
add
aam
inc
call
pusha
(bad)
push
dec
ja
int3
xor
lea
cmp
sub
jb
mov
mov
inc
mov
push
dec
jae
enter
push
repz
outs
(bad)
sar
sbb
push
shl
cmp
sbb
ds
jae
cdq
xor
or
icebp
aaa
pop
div
mov
mov
add
sub
(bad)
pop
(bad)
icebp
popa
lds
pop
pop
cmp
pop
xchg
inc
iret
inc
ss
fcomi
push
mov
ins
pop
mov
popf
sub
imul
sbb
cld
and
mov
mov
cmp
adc
or
sbb
and
out
pushf
and
imul
das
and
loop
pop
mov
add
sub
pop
cmp
fnstcw
push
xor
pop
mov
popa
bound
adc
stc
pop
in
sub
(bad)
fdiv
jge
inc
adc
push
std
push
addr16
into
outs
lock
ret
push
mov
mov
lds
xor
push
out
adc
push
cmp
sub
out
jae
mov
iret
(bad)
sub
test
sahf
scas
(bad)
inc
shr
ins
sub
shl
mov
nop
xchg
ret
and
ret
jle
lahf
or
or
jl
je
scas
or
lahf
xor
sbb
ds
dec
fistp
pop
adc
push
pop
out
and
popf
inc
scas
push
pop
lahf
jmp
popa
xchg
fs
je
mov
jg
inc
push
mov
push
addr16
push
push
out
test
call
inc
sar
pop
cmps
out
dec
out
clc
jp
cmp
cwde
ins
lods
int
sti
inc
gs
adc
fld
push
xchg
pushf
fdiv
mov
inc
bound
inc
and
lea
imul
and
out
lods
pop
pop
mov
jbe
popa
jp
or
pop
fldenv
bound
idiv
dec
xor
fwait
push
retf
xchg
jl
pop
mov
xor
sahf
pushf
push
sub
or
xchg
mov
sub
mov
push
jmp
les
and
lods
test
enter
lds
sbb
aaa
call
xor
in
pop
jge
add
jo
ins
out
inc
mov
ins
test
ds
dec
xor
cmp
(bad)
int3
sbb
jge
jecxz
mov
popf
test
pop
leave
shl
aam
push
sub
mov
jmp
jl
xor
and
mov
pop
xor
mov
adc
mov
rcl
push
(bad)
and
xchg
outs
arpl
fild
cmp
into
fbstp
inc
fwait
je
clc
mov
ret
ds
xor
arpl
dec
and
xor
pop
xchg
add
cmc
ficom
rcr
or
add
and
pusha
xchg
inc
and
aad
addr16
push
rcl
and
inc
cwde
mul
xchg
data16
rcl
jb
jae
jl
cli
add
(bad)
inc
push
jle
mov
call
les
mov
retf
leave
mov
mov
cmp
or
js
push
fist
in
push
mov
aas
les
cmp
icebp
in
xchg
lds
pop
es
cmp
and
lds
dec
mov
push
pop
aas
cmp
mov
adc
cmp
jmp
ror
pushf
cmp
xor
push
not
jp
add
jmp
test
dec
loopne
cdq
loop
mov
cmp
ja
pop
cli
cmp
out
and
inc
jle
retf
ret
daa
cdq
mov
aas
sti
jp
xor
sti
xor
mov
pop
test
mov
push
int3
or
push
xchg
mov
pop
sbb
xchg
sbb
mul
mov
inc
and
pop
xchg
movs
adc
enter
int3
or
(bad)
cld
outs
pop
push
pop
jbe
sbb
fs
lds
test
or
mov
imul
push
je
sar
inc
call
push
(bad)
xor
xchg
popf
dec
imul
outs
jg
outs
lods
fwait
inc
adc
imul
data16
jno
lahf
lods
sbb
stos
ins
(bad)
cwde
mov
arpl
mov
dec
loop
(bad)
std
sub
(bad)
jmp
jmp
(bad)
jle
inc
leave
in
popa
mov
sub
stos
repz
pop
sbb
dec
enter
mov
pop
add
pusha
sub
int
nop
lock
and
jmp
mov
retf
mov
cld
mov
or
cmp
imul
das
out
(bad)
outs
std
(bad)
push
jae
and
cmc
or
(bad)
jle
icebp
stc
or
xchg
or
fstp
xchg
xchg
retf
sub
mov
out
mov
mov
jmp
hlt
dec
sub
sub
aad
jne
push
mov
mov
in
pop
out
jecxz
mov
adc
sbb
popf
mov
fstp
pop
dec
scas
hlt
dec
clc
xchg
and
ss
inc
sub
xor
pop
pop
pop
cli
push
or
dec
jl
in
ret
inc
inc
push
mov
or
xchg
or
ins
xchg
sbb
xor
dec
nop
inc
jp
or
jmp
sbb
jecxz
ficomp
popa
pop
sub
dec
push
inc
cmps
dec
scas
movs
cmp
push
and
jnp
cmps
jmp
inc
inc
vaddsubps
mov
adc
cmps
out
inc
jl
data16
loopne
add
inc
ret
mov
dec
push
push
icebp
aaa
mov
(bad)
in
xchg
retf
cld
xor
rol
adc
xor
mov
xchg
loope
das
push
cmp
stc
adc
pop
mov
in
adc
test
jp
pop
retf
lods
imul
movs
mov
xchg
shl
mov
mov
jg
sahf
jge
sub
sub
aad
inc
mov
(bad)
mov
ret
jno
rcl
pop
ret
jnp
dec
in
jae
(bad)
int3
xor
les
inc
and
test
xor
cmps
add
movs
ror
cmp
mov
iret
pop
adc
or
repz
(bad)
stos
lods
push
jno
cmp
cmps
pop
mov
mov
(bad)
xchg
jae
aam
mov
rcl
in
(bad)
mov
sbb
fnstenv
retf
(bad)
in
add
add
mov
cdq
jge
fwait
das
push
cmp
ret
xor
push
and
in
cmp
pushf
ror
das
xor
gs
cli
mov
clc
retf
mov
inc
add
lea
xchg
je
mov
cld
inc
int
aam
mov
push
fisttp
clc
pop
mov
repnz
push
xor
sub
cs
cmovge
jae
pop
jl
xchg
jecxz
clc
add
in
iret
push
xor
nop
dec
cmp
or
mov
retf
sbb
mov
repnz
cmp
call
mov
xor
jae
cmc
pop
cmp
rcl
sar
shl
cmps
pop
dec
aaa
ret
adc
ror
cmp
(bad)
cmp
stc
loop
cdq
pusha
inc
or
outs
push
int3
adc
adc
ret
jmp
xchg
leave
xor
sbb
fisubr
lahf
cmp
lea
jg
js
mov
mov
leave
jns
scas
cs
jmp
adc
popf
rcr
ds
adc
ficom
fst
iret
fistp
es
leave
add
mov
mov
call
or
add
add
adc
shl
jne
pop
push
cdq
dec
and
or
out
push
adc
addr16
not
pop
rcl
or
js
add
cmp
les
retf
nop
(bad)
pop
test
cli
add
inc
dec
sbb
cs
pop
nop
pusha
jne
je
(bad)
out
cmp
fisttp
jl
fwait
mov
je
int
inc
shr
cmps
jae
(bad)
dec
fdivr
mov
je
push
sub
jno
mov
sub
push
outs
inc
push
loope
sbb
jnp
pushf
or
push
daa
or
test
dec
add
sti
stos
cmp
in
fsubr
outs
into
jmp
mov
(bad)
and
xchg
inc
inc
and
jg
push
or
std
push
and
dec
repnz
rcr
rol
mov
shl
pop
sti
ss
fist
cmp
or
pop
mov
fwait
movs
fmul
inc
and
cmp
dec
mov
inc
outs
xor
sub
arpl
add
outs
mov
out
inc
in
pop
mov
scas
push
outs
lahf
adc
mov
jg
adc
add
outs
cmp
call
hlt
dec
mov
inc
cli
les
and
inc
mov
xchg
mov
mov
dec
imul
test
ja
shr
cmp
scas
xlat
pop
add
jmp
aaa
sar
(bad)
out
push
dec
rol
mov
mov
and
xor
shl
div
int
cli
push
pop
or
sbb
adc
mov
stc
cdq
(bad)
mov
jecxz
scas
dec
cmp
sbb
sub
cmp
inc
in
leave
loope
jno
lods
icebp
inc
lods
test
jne
test
retf
inc
dec
sub
adc
stos
push
ficomp
popa
enter
pop
xor
mov
cwde
and
adc
dec
gs
shl
add
pop
xor
inc
std
test
inc
dec
or
jmp
fimul
jmp
pop
and
push
push
push
inc
add
ret
cwde
nop
sub
ins
push
in
mov
in
add
fdivr
mov
mov
mov
adc
xor
sbb
sbb
int3
out
enter
cmp
adc
adc
fbstp
loope
dec
test
dec
inc
call
or
pop
test
loopne
mov
xchg
jmp
add
cmp
fstp
xchg
pop
mov
sbb
dec
adc
loopne
es
xchg
int
ror
in
jmp
ret
ror
(bad)
xchg
aad
sub
pusha
sub
int
lahf
icebp
pop
and
sbb
into
push
fs
loopne
aam
iret
adc
or
xor
jg
jecxz
nop
div
addr16
sub
sub
dec
div
push
or
dec
fldlg2
aas
and
xchg
(bad)
enter
sub
sub
mov
std
or
mov
sub
or
das
out
push
ret
jne
les
(bad)
fdivr
push
iret
sub
das
mov
mov
repnz
movs
sub
inc
and
out
stc
mov
mov
aas
add
jae
int
out
cld
fistp
xchg
lock
push
sub
cdq
and
push
sub
stos
and
mov
mov
movs
mov
dec
(bad)
sub
pop
pop
or
shl
fcomp
arpl
popa
jp
popa
inc
je
inc
(bad)
dec
movs
out
push
clc
pop
jne
mov
or
lock
int3
popa
lds
xor
mov
rcl
push
fs
add
sar
jo
adc
mov
aas
pop
imul
add
sbb
mov
mov
push
leave
ins
pop
and
dec
dec
push
out
ret
std
inc
mov
mov
pop
retf
mov
nop
mov
mov
dec
or
jecxz
mov
imul
ret
push
cmp
adc
jp
cmp
(bad)
inc
inc
out
jge
movs
gs
call
loop
inc
sbb
int
repz
jecxz
into
call
mov
fst
pop
repnz
mov
jbe
jl
add
iret
pop
push
xchg
cmp
jp
xchg
repnz
sub
add
push
xchg
mov
xchg
adc
sbb
cmps
ins
xor
shl
(bad)
stos
scas
cwde
mov
jmp
mov
xor
cs
ds
xor
push
dec
popa
dec
das
cmps
mov
and
sub
push
(bad)
pusha
mov
nop
and
in
jg
jb
js
push
xor
xlat
aad
aad
cli
sub
enter
sbb
test
mov
mov
in
loope
test
fimul
pop
ds
outs
jecxz
mov
cld
adc
fsqrt
add
adc
dec
dec
aad
les
jge
sti
inc
bound
fisttp
outs
xchg
pop
shl
cmp
push
ins
fld
push
or
retf
inc
cmp
xor
in
arpl
xchg
icebp
in
ficomp
popf
retf
hlt
aaa
mov
adc
push
inc
gs
push
dec
lgs
aas
ror
adc
mov
pop
add
sbb
fld
inc
add
call
aad
rcl
jmp
iret
stc
or
mov
mov
jp
js
sbb
cmp
xor
(bad)
hlt
xor
dec
int
mov
imul
fld
add
mov
es
shl
add
pop
lea
inc
retf
cs
popf
fiadd
mov
(bad)
ds
(bad)
pop
iret
out
daa
ins
inc
stos
sbb
sbb
mov
pusha
push
hlt
xor
fimul
push
sub
jle
fisubr
add
jo
jmp
and
iret
push
aad
sbb
mov
mov
and
pop
fnsave
hlt
mov
inc
push
retf
pop
fnstcw
inc
jl
les
pop
xchg
mov
adc
pop
dec
mov
cld
mov
push
xchg
pop
aaa
retf
mov
and
xchg
aam
xchg
cmps
dec
jmp
in
pusha
retf
xchg
add
stc
adc
pop
and
sub
adc
enter
or
pop
mov
push
ins
loope
clc
mov
xor
pop
inc
stc
imul
xlat
sub
mov
into
enter
xchg
dec
mov
ds
mov
push
lds
push
lods
sub
out
icebp
inc
mov
mov
imul
mov
das
sbb
push
scas
jnp
(bad)
dec
push
jno
scas
sahf
int3
fisubr
int3
sbb
jg
jecxz
(bad)
scas
cmp
pop
push
mov
call
call
sbb
lea
mov
mov
stos
popa
xchg
ror
add
out
and
fstp
out
xchg
js
jb
outs
xchg
xchg
inc
and
cmp
jge
pusha
outs
in
xchg
data16
dec
(bad)
ins
dec
daa
stc
cld
push
ins
cmc
or
cmp
mov
or
mov
cld
imul
adc
enter
and
pop
popf
mov
push
dec
leave
mov
xchg
or
stos
mov
and
push
inc
xlat
ins
fistp
pop
retf
inc
add
adc
stos
fild
cmp
cmp
daa
push
cmp
daa
iret
in
es
dec
mov
xchg
cmp
call
adc
aaa
test
cmps
jb
jne
movs
sahf
adc
sbb
mov
jle
inc
dec
mov
pop
inc
popa
xchg
xchg
xor
in
lods
push
mov
sbb
aaa
in
jo
jo
mov
pop
pushf
dec
lds
mov
sbb
xor
call
fbld
or
enter
pop
mov
retf
xor
jmp
mov
xor
pop
fstp
stos
stc
ret
mov
test
or
mov
fmul
mov
jae
and
imul
xlat
jb
loop
(bad)
ins
and
sbb
dec
fnstcw
call
adc
mov
cdq
(bad)
call
add
aam
cwde
ret
repz
(bad)
mov
fistp
scas
xchg
jb
pop
mov
in
inc
daa
ficomp
jle
cli
inc
sti
sbb
imul
inc
xchg
and
test
ja
mov
ret
mov
push
in
bound
stc
sub
ror
xchg
add
cmp
pop
es
pop
xor
jmp
loopne
aaa
pop
daa
jae
(bad)
mov
neg
mov
push
ror
data16
push
retf
cmp
mov
dec
fisubr
cmps
out
inc
inc
test
and
mov
test
push
arpl
push
je
mov
and
leave
adc
mov
push
hlt
outs
loop
push
sbb
add
mov
mov
sub
mov
mov
hlt
mov
adc
jmp
add
or
(bad)
(bad)
cmp
push
or
add
xlat
mov
sub
sti
xchg
push
ss
xchg
jmp
fist
out
jmp
scas
pop
cmp
and
(bad)
pushf
adc
pop
sub
pop
les
(bad)
in
fld
and
fist
in
pop
out
ror
scas
push
sar
adc
fwait
add
inc
inc
and
std
imul
test
sbb
jmp
mov
jle
mov
jmp
lahf
mov
or
mov
inc
adc
ret
xlat
pop
cmc
lea
add
sub
mov
aad
dec
scas
mov
(bad)
pusha
pop
pusha
clc
iret
dec
stos
shr
retf
adc
inc
out
or
xor
inc
add
push
test
or
pushf
repz
jp
mov
push
mov
push
xchg
test
cmp
out
(bad)
jge
clc
shr
inc
in
pop
jecxz
int3
call
shr
in
inc
xor
ficomp
inc
mov
sbb
and
dec
mov
push
call
xchg
dec
scas
jae
imul
lods
movs
fild
and
or
jb
(bad)
not
scas
data16
lock
sahf
fwait
adc
push
(bad)
cmps
(bad)
cmp
adc
pop
fild
fwait
int3
(bad)
repnz
adc
pop
dec
jmp
jns
stos
fs
add
into
jnp
dec
retf
push
xlat
movs
in
inc
sbb
(bad)
mov
mov
(bad)
jmp
rol
fisttp
jecxz
stc
sti
xchg
sub
inc
add
in
add
mov
fisttp
aaa
jo
hlt
ret
xchg
arpl
and
rcl
sbb
sub
push
dec
sub
fisub
xchg
(bad)
push
xchg
lods
repz
mov
stc
pop
cdq
dec
das
and
mov
fs
imul
imul
adc
xor
mov
retf
mov
mov
inc
push
sbb
stos
pop
mov
sahf
loope
mov
cdq
or
dec
cli
cmp
mov
aas
jnp
mov
lahf
int
sbb
cmp
bound
fist
and
adc
ficomp
(bad)
imul
jmp
mov
and
mov
mov
je
add
inc
fdivr
imul
(bad)
adc
(bad)
aam
lea
je
sbb
movs
or
push
fs
(bad)
or
cmp
rol
fldenv
(bad)
pop
xor
das
push
sbb
jg
in
call
fistp
lock
mov
loopne
pop
sar
jg
add
out
sub
mov
mul
pop
test
stos
dec
add
mov
lods
and
adc
jl
dec
mov
(bad)
sti
aaa
mov
pushf
popa
adc
pop
xor
cmp
mov
mov
jmp
sbb
call
mov
popa
ror
das
ins
add
shl
xlat
mov
imul
mov
mov
push
bound
rcl
pop
cmc
push
xor
sbb
xchg
call
sub
or
rol
cs
aam
adc
mov
ror
add
jle
adc
outs
dec
jae
adc
xchg
(bad)
xchg
jg
or
call
adc
repz
add
cmp
sbb
mov
shl
repz
and
dec
repz
xchg
stos
mov
ret
data16
out
jmp
mov
mov
xor
pop
iret
xchg
mov
push
icebp
aam
or
mov
pusha
lods
add
fadd
xchg
ret
dec
lahf
mov
popa
inc
push
lds
movs
jmp
outs
(bad)
dec
fnsave
and
cmp
add
xchg
jge
mov
test
fild
data16
(bad)
mov
mov
adc
add
or
rol
data16
jno
cmp
push
dec
cmp
ss
xchg
dec
pusha
jg
js
sbb
mov
dec
sbb
shl
xchg
push
iret
nop
cmp
sbb
imul
das
sahf
into
iret
mov
jae
jbe
sub
popa
push
push
ret
leave
pop
call
and
mov
or
pop
mov
sahf
mov
enter
pop
rcr
iret
outs
nop
sub
popf
sahf
cmp
and
push
and
dec
bound
dec
ds
aas
sbb
outs
sbb
dec
cmp
hlt
outs
div
push
xor
jmp
cmp
push
movs
pop
or
test
(bad)
int
push
sub
cli
lahf
mov
xchg
cmp
and
in
out
aad
lods
enter
sbb
int3
fsubr
push
or
popa
in
jge
pop
mov
dec
arpl
in
add
stos
pop
add
mov
and
xchg
push
in
mov
xlat
jns
std
icebp
add
clc
mov
pop
mov
adc
(bad)
dec
jmp
adc
aas
adc
mov
pop
test
sar
xchg
ja
fnstcw
jb
jo
clc
jp
inc
xlat
mov
inc
adc
mov
push
leave
fmul
sbb
dec
xlat
fistp
mov
nop
jo
mov
sbb
aam
or
lea
sub
mov
adc
pushf
test
mov
shl
adc
add
retf
out
mov
or
jle
(bad)
adc
test
cs
popa
or
call
mov
sbb
push
sub
mov
jmp
movs
retf
outs
test
shl
out
mov
pop
inc
bswap
sti
cmc
inc
xchg
shr
and
test
push
cwde
shr
xchg
jle
retf
sbb
enter
das
ja
dec
(bad)
out
sbb
cmps
(bad)
dec
xchg
lahf
(bad)
stos
cmp
dec
xchg
fiadd
xchg
rcr
test
pop
call
std
addr16
jnp
and
jmp
fiadd
mov
in
or
test
add
pop
or
mov
push
sub
push
repnz
into
in
pop
cmp
arpl
sbb
add
(bad)
pusha
xchg
fwait
in
in
pop
fidiv
test
mov
outs
jp
dec
push
add
call
lods
mov
cmp
fild
sub
enter
int
mov
js
jbe
and
loopne
loopne
pop
pop
mov
fild
push
and
ret
jecxz
test
call
xchg
push
mov
je
add
push
xor
or
adc
xchg
pop
xor
(bad)
and
mov
repnz
pushf
xor
pop
popa
or
mov
pop
fidivr
stc
jg
pop
clc
rol
fnstenv
xor
jo
movs
mov
mov
xchg
fsubr
mov
and
dec
sti
add
out
push
loope
mov
adc
mov
sbb
pop
cmp
fld
sub
jl
outs
outs
pop
jl
adc
(bad)
jge
add
mov
xchg
sbb
fistp
or
cmps
(bad)
and
stc
shr
and
adc
add
mov
sbb
rol
jo
or
test
adc
pop
jle
dec
int
xchg
aaa
jne
mov
xchg
push
jge
pusha
xchg
xor
inc
xchg
xlat
dec
and
pop
(bad)
sbb
or
enter
dec
imul
es
fldcw
out
arpl
adc
dec
xchg
jae
xor
sbb
ins
dec
inc
xlat
lods
add
(bad)
cmps
add
jge
push
mov
loopne
xchg
fiadd
call
mov
pushw
cli
lods
sub
stos
cwde
int
retf
pop
or
es
fidivr
cmp
mov
test
mov
aad
repz
sbb
cmps
int
xor
enter
out
mov
jmp
xchg
xchg
jae
ret
inc
fmul
and
(bad)
aas
cmc
(bad)
pop
xchg
pop
movs
iret
aam
loop
popw
sbb
sbb
mov
(bad)
cmps
pop
cmp
(bad)
lods
movs
cmp
jmp
jg
rcr
mov
(bad)
cmp
mov
and
imul
movs
scas
in
push
loopne
jmp
mov
or
add
sahf
pop
fisub
sar
arpl
(bad)
mov
(bad)
mov
fs
add
sub
(bad)
gs
mov
inc
mov
xchg
test
adc
test
dec
inc
pop
lods
dec
rcl
cs
in
inc
mov
mov
rcl
inc
sti
fadd
out
xchg
outs
inc
es
cdq
push
and
mov
call
adc
mov
fsubrp
sahf
push
loope
xchg
mov
inc
inc
lods
mov
push
sub
and
xchg
push
mov
in
sbb
arpl
mov
adc
cmp
outs
adc
push
aad
outs
sbb
imul
cmp
std
and
sbb
les
jo
out
js
call
stos
rol
pop
xchg
inc
push
lock
xchg
dec
(bad)
outs
dec
loope
push
cli
lods
sbb
add
or
mov
push
in
xchg
outs
fistp
sub
inc
addr16
dec
int
mov
ss
fisubr
adc
pop
xor
retf
xor
xchg
dec
sbb
out
sub
xor
(bad)
call
xchg
add
cdq
nop
mov
pop
outs
arpl
imul
(bad)
shl
loop
push
push
or
sub
jg
aad
sub
and
loop
xor
(bad)
fimul
mov
in
into
loopne
or
inc
mov
push
iret
cmp
inc
or
loopne
add
pop
(bad)
in
adc
arpl
sub
push
jne
inc
jne
imul
mov
punpcklwd
je
fnstsw
add
in
cmps
add
lahf
ret
mov
cmp
jne
xor
mov
mov
repz
out
xchg
lahf
aam
cdq
lds
mov
xchg
jbe
jno
dec
call
xor
outs
or
lods
sti
stos
push
and
stc
cmp
pop
jge
stos
ja
fs
mov
(bad)
out
jb
pop
les
mov
push
imul
push
sub
mov
(bad)
cmp
add
lds
mov
retfw
dec
ficom
stc
sub
lods
loope
sub
pop
mov
mov
sbb
push
adc
mov
pusha
cmp
cmp
and
iret
cmps
into
in
jmp
pop
mov
adc
sub
inc
jge
mov
cwde
in
fstp
out
jl
add
mov
fwait
inc
inc
push
cli
inc
rcr
into
in
hlt
xor
sub
pusha
dec
sub
xchg
outs
cmp
xor
in
(bad)
stos
test
cmc
icebp
xchg
in
mov
js
jp
mov
sbb
jns
xchg
push
mov
sub
mov
mov
push
dec
repnz
out
call
es
shl
rcr
cmps
mov
or
jae
call
lods
xlat
mov
aaa
dec
jo
aam
div
inc
lahf
mov
cmp
das
iret
push
inc
adc
arpl
leave
ins
inc
jmp
sar
sbb
or
jnp
das
in
xchg
data16
out
stos
dec
mov
into
je
dec
xchg
mov
mov
nop
mov
leave
xchg
out
xor
cmp
iret
test
add
int
js
ins
pushf
push
mov
mul
addr16
pop
sub
hlt
cli
cmp
sti
xor
push
pop
jmp
(bad)
movs
retf
(bad)
lea
(bad)
retf
les
pop
call
imul
push
mov
pusha
cmp
cmps
inc
push
jo
cmps
mov
lahf
lods
loopne
pop
test
and
xchg
fbstp
mov
ins
sbb
mov
hlt
push
mov
cmp
sub
sti
aas
pop
sbb
mov
cli
or
push
push
aad
(bad)
xor
rcl
rol
scas
fidiv
in
movs
pop
and
les
sbb
das
aam
adc
xchg
dec
sbb
ss
sub
adc
mov
sub
pop
aaa
push
xchg
push
hlt
int
and
(bad)
(bad)
and
or
sbb
mov
xchg
out
jae
jl
mov
jmp
aam
jmp
leave
mov
xchg
jmp
fnstcw
push
int
jle
add
mov
and
in
popf
faddp
jecxz
fadd
mov
jbe
in
dec
push
stc
imul
mov
lods
dec
test
or
int
lods
loop
out
clc
cs
dec
call
or
cmp
stc
jmp
bound
and
xchg
sar
add
fsub
repz
int
int
xchg
loope
lahf
aad
cmp
jge
repz
leave
fistp
inc
inc
sbb
addr16
pop
inc
in
pop
dec
ror
cmp
mov
das
(bad)
xlat
leave
xchg
xor
shl
(bad)
or
enter
stos
fild
jmp
popf
scas
mul
adc
push
inc
pop
outs
je
(bad)
shr
fdiv
dec
inc
icebp
fisttp
pop
sbb
je
adc
xor
je
adc
add
cvttps2pi
dec
retf
jge
mov
or
jecxz
mov
and
mov
(bad)
sbb
or
xor
hlt
stos
shl
adc
cmp
jb
int3
inc
lock
xchg
push
add
hlt
add
out
cmp
test
and
inc
mov
or
sub
pop
add
adc
pop
sbb
push
push
or
push
dec
js
cwde
arpl
scas
add
push
add
push
in
cmp
bound
jbe
into
mov
and
xchg
push
inc
cmps
push
mov
js
stos
cmps
xor
xchg
pushf
jae
cmps
(bad)
shl
xlat
int3
clc
out
shl
mov
mov
mov
add
cmp
jecxz
loopne
jge
sar
adc
pop
scas
outs
rol
in
push
xchg
out
mov
fsubr
jle
cmps
fstp
mov
sub
aas
pushf
mov
or
sbb
call
popa
mov
movs
cli
jns
pop
cdq
jbe
mov
iret
mov
jno
aam
mov
jns
nop
(bad)
sub
jl
cmp
mov
or
dec
mov
aad
or
xor
out
mov
adc
mov
imul
jmp
push
int
cmp
je
lods
test
adc
retf
in
popa
cmps
adc
cs
xor
mul
dec
push
dec
cwde
dec
push
in
dec
aad
repz
sub
lds
jnp
lahf
or
sub
lods
mov
push
adc
inc
cmc
test
fbld
mov
add
add
retf
sub
jge
(bad)
(bad)
mov
pop
sbb
push
dec
xchg
and
out
xchg
rol
cmc
mov
ret
test
lahf
xor
lods
in
pop
dec
popa
test
test
mul
mov
push
shl
std
pop
pop
retf
sar
(bad)
ds
jo
test
test
jmp
out
scas
xchg
pop
arpl
jae
mov
nop
jg
addr16
clc
dec
ror
retf
xor
outs
in
and
dec
add
dec
pop
aaa
mov
or
xchg
mov
and
shl
adc
jbe
pop
mov
sbb
xchg
fidivr
pop
pop
daa
dec
mov
int3
loopne
in
ins
test
xor
retf
lahf
mov
sbb
add
dec
mov
mov
(bad)
cmc
jmp
lock
test
data16
sti
mov
ins
xchg
imul
dec
jne
cld
cli
iret
fwait
or
jl
pop
xchg
dec
pop
cmps
mov
bound
enter
mov
cmp
fmul
sbb
mov
repz
int
movs
add
hlt
and
push
lods
movsx
lahf
call
inc
mov
mov
repnz
adc
xchg
scas
aam
int3
movs
xor
or
mov
cmp
and
test
mov
mov
inc
add
sahf
mov
xchg
call
fidivr
movs
nop
jecxz
push
mov
sbb
and
out
mov
cli
pop
loopne
iret
inc
das
inc
inc
xchg
scas
cdq
adc
and
mov
xchg
les
cmp
(bad)
mov
(bad)
fdivr
push
mov
test
push
(bad)
jl
sbb
aaa
repnz
push
adc
jnp
adc
cs
mov
in
push
pop
leave
scas
fs
daa
inc
push
imul
push
dec
mov
stos
pushf
xchg
or
cli
into
test
imul
and
in
xor
mov
and
xchg
repnz
aad
or
pop
(bad)
lock
inc
ds
mov
ss
or
jl
arpl
or
stos
mov
scas
sbb
add
call
loopne
sub
xchg
mov
mov
cmp
loopne
pushf
test
inc
shl
call
push
pop
pop
dec
retf
push
das
fs
rcr
scas
cli
mov
add
out
test
test
rcl
jno
or
leave
(bad)
movs
mov
(bad)
mov
xor
in
sahf
and
cmp
lds
(bad)
mov
fst
xor
xchg
std
out
popa
call
adc
dec
repnz
scas
dec
js
fidivr
mov
xchg
jecxz
daa
loopne
in
or
dec
jae
ins
jo
sbb
jbe
jbe
mov
out
mov
(bad)
jo
loopne
cmp
outs
fwait
and
(bad)
xchg
ins
inc
cmp
cmp
jl
dec
xchg
mov
mov
sub
test
sti
mov
sbb
shl
cmps
mov
mov
aad
shr
mov
cmc
shl
jae
or
aam
mov
xor
mov
pushf
in
shr
pop
jmp
sub
xlat
jmp
clc
xlat
stos
mov
nop
mov
cvtps2pi
out
into
repnz
push
mov
cwde
or
push
and
rcr
cmp
pop
or
movs
jge
in
loopne
cmp
test
and
push
jb
jg
into
dec
mov
dec
in
outs
lods
mov
daa
push
add
mov
jmp
aas
test
cmc
dec
test
popa
jle
inc
adc
loopne
popf
cs
jae
mov
in
scas
int
jp
cli
hlt
jb
ret
push
mov
out
mov
add
pop
repz
imul
cmps
xchg
popf
jg
rcl
sbb
loop
ret
mov
sbb
sub
jmp
mov
inc
daa
push
gs
out
test
jbe
int
iret
sbb
aam
jmp
(bad)
aas
sar
loop
(bad)
addr16
lds
ret
addr16
pop
fmulp
pop
enter
gs
iret
fstp
xchg
or
enter
cmps
pop
mov
stos
mov
add
xchg
push
or
mov
out
mov
inc
fdivr
pop
jo
jbe
leave
push
and
mov
jne
movs
pop
inc
(bad)
jns
scas
mov
mov
jns
ja
mov
or
out
dec
cmp
pop
adc
(bad)
mov
cs
aaa
push
aaa
das
ja
(bad)
int3
mov
sub
add
xor
test
adc
aam
mov
xchg
fisub
mov
lods
jp
sbb
ja
outs
inc
add
out
add
sbb
sub
sahf
xchg
loope
and
ror
xor
push
rcl
jmp
pop
jle
and
das
push
int
out
xlat
jno
cmp
loop
xor
fsubr
pop
and
leave
add
loope
mov
test
rol
dec
aam
cmp
mov
stos
enter
jae
rol
pop
add
xchg
psubusw
outs
xchg
(bad)
sti
add
ds
stc
add
mov
les
mov
adc
push
icebp
dec
and
jl
push
mov
enter
sbb
les
jae
dec
cmc
push
inc
bnd
(bad)
fnstenv
inc
pop
bound
add
xchg
dec
mov
rcl
mov
add
es
cmc
inc
cli
jecxz
pop
in
xchg
mov
mul
cmp
lods
sub
xor
out
xchg
fisttp
xor
add
pop
popa
dec
push
cld
out
es
cld
rol
mov
les
arpl
xchg
sahf
outs
or
xchg
cmp
int
pop
out
popf
(bad)
(bad)
shl
repz
mov
dec
and
push
popa
(bad)
or
pop
mov
jo
add
adc
adc
mov
mov
hlt
cld
pop
jp
add
cmp
cld
bound
fild
push
inc
cwde
dec
stos
sahf
mov
gs
or
sbb
inc
and
popa
push
scas
pop
(bad)
xchg
inc
icebp
and
pushf
cmp
aas
aas
fidivr
ins
popf
jge
imul
pop
ins
inc
mov
dec
shr
aad
aad
popa
cmp
mov
pop
ins
xchg
aaa
cmps
inc
je
mov
imul
push
cmp
jg
xlat
mov
jp
inc
and
pop
dec
in
pop
popf
mov
push
jae
push
mov
pop
rcr
ret
loope
test
not
mov
jmp
lock
inc
mov
(bad)
stc
nop
aas
ins
stos
sub
inc
js
lods
mov
dec
mov
cmps
ret
sbb
xchg
rcr
mov
mov
push
push
sub
aad
xor
push
and
mov
and
inc
dec
cmp
cdq
mov
mov
out
cdq
mov
pop
push
cdq
in
inc
pop
stos
pop
mov
outs
bnd
into
xchg
cmp
cmp
lea
adc
sbb
or
rcl
scas
xlat
into
fiadd
fadd
pushf
and
aad
pop
xchg
inc
stos
lock
fcmovne
mov
mov
or
xor
push
jns
das
adc
adc
mov
arpl
inc
ja
ins
das
aad
call
add
pop
imul
clc
rol
ror
xor
rep
stos
ja
push
cli
adc
pop
ret
dec
loop
clc
mov
sub
(bad)
leave
pop
ins
cmps
jge
fsqrt
or
and
dec
sub
mov
gs
cmc
lods
fsub
jae
das
mov
sbb
push
das
stos
int3
xor
push
cmp
mov
out
push
in
and
ja
ror
add
dec
sbb
inc
xor
out
mul
retf
xchg
dec
mov
push
out
ret
pop
cli
cmp
(bad)
es
push
cmc
lods
and
(bad)
test
jl
cmp
xchg
xchg
fbld
fidiv
push
outs
jb
cld
movlhps
in
push
pop
jbe
push
jmp
pop
push
lds
fsub
mov
fs
mov
push
pop
inc
push
mov
mov
or
(bad)
dec
pushf
jg
ret
mov
and
adc
pop
add
je
jmp
jg
test
mov
pop
aad
push
outs
mov
imul
xchg
or
data16
dec
imul
mov
sub
xor
pusha
call
sbb
test
mov
mov
sub
(bad)
jae
sahf
lea
mov
sub
bound
sar
jb
jl
push
call
inc
xchg
sbb
into
push
jnp
mul
pop
imul
mov
mov
aad
mov
or
push
dec
sub
je
mov
cmp
pop
outs
sub
outs
in
lds
xor
enter
cmp
outs
xchg
stos
popf
and
sub
adc
rcl
add
test
sub
mov
out
hlt
xor
cmp
jg
sbb
fsubr
mov
xchg
enter
(bad)
(bad)
dec
sub
xor
mov
mov
call
mov
fistp
(bad)
cwde
or
mov
scas
sahf
inc
push
push
push
fucomip
mov
or
(bad)
loopne
imul
call
ds
push
sbb
and
cs
scas
dec
mov
jecxz
mul
iret
jge
lea
mov
pop
fwait
aam
sub
and
xor
ja
jg
jns
ror
mov
mov
loope
retf
enter
dec
movzx
popf
or
add
jnp
je
pushf
and
xor
jl
jmp
dec
push
sbb
pop
(bad)
xlat
xchg
pop
jmp
inc
aam
and
mov
sbb
test
iret
xchg
add
icebp
or
pop
out
popa
xchg
cwde
mov
pop
test
cmp
mov
sbb
ins
cmp
mul
loop
mov
jnp
push
mov
fistp
add
inc
(bad)
iret
and
mov
in
mov
pop
cmp
xor
adc
and
adc
dec
sub
cmp
jle
push
sub
ins
out
outs
cli
imul
push
inc
cmp
add
sub
xlat
bound
adc
adc
sbb
add
out
ror
pop
aas
(bad)
std
scas
movs
xor
jmp
xor
pop
mov
pop
cmp
popa
sub
mov
or
out
and
inc
jae
aad
inc
add
aaa
mov
cs
mov
jne
and
arpl
sbb
mov
jnp
pop
sbb
std
jnp
stos
loop
clc
out
cli
add
jno
sub
push
cmp
pusha
push
les
pop
xchg
xor
mov
jbe
inc
(bad)
mov
sub
inc
call
arpl
fdiv
mov
push
dec
sbb
xchg
aad
jmp
mov
jo
(bad)
test
call
dec
je
push
ror
jge
jno
and
aam
mov
frstor
jmp
fldcw
xchg
repz
adc
sub
fnstenv
adc
test
inc
cmp
or
shr
push
out
jo
xor
adc
sbb
je
ins
jb
xor
dec
mov
mov
aaa
sub
mov
clc
in
push
and
shl
jno
inc
xor
inc
imul
add
adc
xor
int3
in
dec
xor
cs
or
sbb
out
cli
xchg
mov
mov
mov
lods
ds
out
jae
jns
inc
fldcw
push
cld
xchg
out
cmps
pop
pop
in
repnz
dec
mov
pop
(bad)
and
add
xor
inc
jge
inc
push
pop
or
loopne
adc
or
push
out
ret
jnp
clc
mov
test
(bad)
sub
rcl
ret
dec
aas
stc
mov
popf
inc
jmp
dec
popa
mov
call
jecxz
retf
fst
mov
dec
fdivrp
mov
mov
pop
and
rcl
jb
mov
push
jno
push
lahf
(bad)
add
push
or
rcr
fs
dec
and
loopne
xor
stc
and
in
shl
push
pop
cmp
in
jg
push
push
mov
movs
cld
js
sar
mov
cmps
ds
pop
push
(bad)
loop
pop
(bad)
aad
daa
aas
jno
inc
(bad)
jl
or
cmc
call
pushf
xchg
fwait
or
lock
cmp
loopne
out
sti
mov
stc
mov
xchg
push
jmp
clc
movs
jae
jge
push
scas
clc
std
mov
fs
in
xchg
pop
dec
outs
ja
icebp
cwde
jb
sti
out
out
xor
adc
in
cdq
sub
xchg
cmps
jge
inc
jmp
pop
push
sub
jno
cmps
push
dec
jle
dec
dec
adc
cmc
push
xchg
push
cmp
push
out
add
jl
fnsave
sti
scas
sub
adc
pop
je
xor
pop
aad
mov
push
mov
lahf
fmulp
and
fsubr
pop
mov
test
pop
xor
out
jge
mov
rcr
mov
stos
mov
cdq
pop
xchg
mov
jmp
jl
movs
mov
pushf
and
cmp
aad
js
lods
sub
loopne
hlt
inc
pop
test
js
xor
movs
stos
in
pushf
in
outs
mov
dec
loope
xchg
xor
leave
jb
stos
lods
das
or
push
inc
out
xchg
clc
dec
dec
pop
fist
sbb
fild
push
xor
push
lea
add
xor
or
cwde
push
push
jge
aad
xor
out
stos
sub
add
fbld
sbb
jae
ret
gs
xor
lock
jb
cmp
cmp
adc
or
add
sub
faddp
xchg
(bad)
push
inc
ret
xchg
and
stos
pop
not
sar
std
mov
outs
mov
dec
sbb
imul
and
inc
sahf
repz
popf
mov
inc
jmp
pop
add
popa
das
add
mov
pop
sub
pop
std
xchg
mov
xor
daa
xor
mov
xor
movs
lds
jmp
retf
(bad)
jp
into
and
push
sti
jo
test
rcr
ds
aas
mov
push
adc
mov
in
cli
xchg
scas
fmul
and
bound
loopne
cmp
push
scas
jle
sub
lds
fcmove
sbb
loop
addr16
jnp
add
mov
xchg
cmp
in
and
mov
(bad)
or
inc
aad
int
test
ds
cmp
aam
xor
xchg
xor
mov
pop
loopne
sub
or
or
mov
jmp
add
sbb
xchg
adc
mov
sub
fwait
mov
shl
popf
ffreep
in
cmp
pop
xor
pop
popf
sbb
adc
ret
mov
mov
nop
xchg
push
ins
jle
sub
dec
out
ins
mov
clc
cmp
ins
(bad)
in
inc
jne
movs
mov
inc
aaa
int
or
mov
iret
xor
rol
sbb
loope
push
push
xchg
push
mov
js
sub
mov
sub
jae
std
je
into
jbe
fcomp
loop
cmp
mov
push
cmps
shl
cmps
(bad)
dec
or
cmps
call
push
lahf
cmp
ror
dec
movs
mov
stos
xor
aaa
add
lock
sahf
fs
and
mov
pop
or
imul
mul
inc
fidivr
(bad)
cmps
adc
or
dec
sbb
xor
push
mov
mov
mov
das
cmps
inc
call
call
stos
test
xchg
jb
push
cmp
mov
cdq
jnp
or
data16
fild
mov
aad
jge
or
add
stc
xor
push
dec
jo
and
cdq
loope
mov
fwait
mov
sub
cmp
dec
popa
imul
in
dec
ja
sub
out
jno
adc
in
cmp
arpl
jge
popf
and
scas
in
loop
popf
retf
out
inc
pop
or
xor
retf
cmc
repz
pop
sar
push
test
mov
stc
cdq
push
jne
mov
add
inc
or
and
mov
in
sub
out
dec
fwait
adc
out
sub
pop
pop
push
daa
cmps
dec
repz
(bad)
xchg
arpl
mov
retf
and
test
out
daa
cs
and
test
pop
xchg
ins
movs
jns
test
imul
out
add
jae
dec
xchg
(bad)
gs
test
add
mov
leave
cmp
mov
or
pop
add
mov
(bad)
xchg
add
fidiv
popf
enter
mov
es
les
fmulp
push
repnz
in
retf
xchg
and
scas
push
and
cmp
and
test
inc
or
sub
mov
cmp
outs
out
jbe
imul
hlt
pop
push
adc
je
test
inc
(bad)
ror
inc
pop
ds
or
xor
push
add
jbe
jmp
and
hlt
lods
pop
in
icebp
scas
and
addr16
addr16
sub
fsub
pcmpeqb
push
lods
cmp
ins
dec
pop
sbb
gs
shl
mov
dec
ror
cmp
repz
push
aam
fistp
dec
mov
std
clc
or
inc
(bad)
(bad)
out
xlat
push
mov
pop
jmp
ja
inc
pushf
popf
xchg
sahf
js
into
ds
mov
xchg
or
int
test
cdq
mov
into
sub
mov
cmp
fmul
loop
mov
stos
mov
mov
outs
daa
dec
dec
movs
fiadd
imul
xchg
lods
(bad)
(bad)
inc
sub
fild
bsf
and
mov
in
cmp
fistp
mov
pushf
mov
dec
and
xor
pusha
push
outs
inc
xchg
out
dec
(bad)
sub
fsub
inc
pop
sar
mov
js
xor
sub
sbb
lahf
ja
ror
movs
fdiv
cmps
sbb
movs
sbb
loop
fisttp
out
xchg
mov
mov
or
in
cmp
in
jmp
enter
pop
inc
sbb
icebp
imul
out
pop
adc
daa
in
imul
imul
es
imul
in
dec
ins
mov
sar
cs
sbb
enter
xchg
in
cmp
out
ja
aad
aam
lods
push
mov
mov
mov
xchg
pop
rcr
fcom
xor
sbb
adc
rep
imul
xor
xor
fstp
mov
sti
out
push
push
nop
xchg
fcmovbe
dec
or
mov
xchg
cmp
pushf
out
mov
inc
cmc
xchg
dec
shl
push
dec
cwde
mov
retf
sbb
push
lea
push
enter
jno
jg
or
frstor
mov
icebp
dec
pop
outs
mov
outs
jle
and
ret
cmp
popf
push
lods
dec
shl
(bad)
mov
add
push
cmp
pop
and
in
sub
sub
pop
push
jne
sbb
sar
jmp
add
push
data16
pop
dec
push
loope
xchg
adc
dec
add
pop
fbld
rcr
outs
or
(bad)
pop
fimul
scas
dec
and
inc
dec
adc
pop
adc
jmp
add
ins
aaa
clc
or
test
mov
das
adc
leave
jbe
stos
jg
aam
idiv
add
test
pop
dec
sbb
sbb
ja
adc
sbb
test
arpl
mov
mov
push
in
push
addr16
pop
add
fwait
and
stc
lods
mov
push
adc
pop
lahf
pop
out
or
aaa
pop
loop
shl
ror
pop
outs
pop
add
sbb
lahf
ss
dec
lahf
idiv
xchg
std
retf
xchg
xor
aaa
lahf
ins
ja
cdq
jnp
and
mov
mov
add
in
mov
adc
adc
cwde
mov
mov
jecxz
outs
leave
push
pop
sbb
cmp
mov
mov
stc
out
leave
(bad)
pop
or
and
arpl
dec
sbb
push
stc
jne
cmp
xchg
popa
inc
push
cld
js
mov
add
lods
mov
push
fsubr
or
mov
int3
adc
sub
sbb
jno
cmc
or
fdivr
shl
cmp
ret
movs
adc
push
xchg
mov
and
sub
push
aas
push
add
cmps
and
loope
(bad)
adc
(bad)
iret
and
retf
and
int
mov
cmc
stc
and
xor
adc
push
push
call
icebp
movs
mov
push
and
scas
inc
int
rcr
jl
jecxz
and
inc
ret
cmp
lock
xchg
sti
lahf
repz
(bad)
jo
int3
scas
xchg
or
lea
xchg
sbb
stc
adc
add
(bad)
mov
dec
mov
adc
aas
loop
(bad)
mov
ins
(bad)
cs
fcomp
push
pop
mov
sub
lock
outs
pop
call
jno
push
jns
(bad)
jl
jl
xchg
les
rcr
ds
in
mov
das
int
ror
in
mov
push
aaa
fsubrp
cwde
std
cmp
(bad)
int3
mov
mov
mov
scas
sub
fisub
out
pusha
lds
adc
dec
addr16
or
rcr
nop
fwait
push
and
int3
or
push
push
imul
in
jnp
arpl
jo
dec
outs
cmp
lahf
adc
ins
sub
jle
stc
jmp
test
shr
and
lods
xlat
movs
pop
lods
jbe
mov
jge
add
inc
inc
dec
jae
dec
jbe
mov
add
xchg
bound
(bad)
out
add
int
shl
jae
jmp
pop
cmp
adc
test
cmp
push
mov
mov
pop
jle
inc
and
push
xchg
jb
(bad)
addr16
xchg
add
pushf
add
sub
aaa
in
dec
fidivr
and
clc
mov
fimul
jle
cmp
dec
nop
sub
add
call
xor
xchg
sar
adc
out
daa
div
cmp
mov
mov
bound
xchg
xor
je
add
stos
add
fidiv
jne
inc
adc
aas
cmps
jo
dec
jno
push
test
dec
cdq
outs
nop
in
dec
push
imul
dec
movs
push
scas
push
lea
or
or
or
inc
leave
out
sbb
cmc
lods
es
ret
xchg
jmp
sbb
or
xor
sub
mov
fwait
std
sbb
add
inc
aam
adc
jbe
shr
imul
es
mov
clc
jge
adc
dec
lea
aad
pushf
xor
xchg
adc
addr16
clc
lods
sbb
outs
adc
retf
pusha
movs
ror
add
cmp
push
in
cmc
adc
fs
pop
data16
jno
lahf
cmp
pop
mov
lods
popa
sub
mov
jne
sar
cmp
sbb
mov
(bad)
fdivr
mov
ja
or
cmp
mov
int
push
mov
sub
jecxz
dec
and
loopne
adc
out
sub
stos
sti
mov
arpl
cmps
ss
mov
out
mov
jecxz
lea
push
outs
sbb
scas
imul
adc
jnp
xchg
push
rcr
int
test
imul
mov
add
sti
imul
aas
daa
jmp
lock
sub
push
bound
mov
push
adc
lea
mov
ret
jb
sahf
mov
and
inc
xchg
cli
pop
sub
cmp
aas
pop
inc
xchg
mov
repnz
xor
inc
inc
xchg
bound
adc
inc
popa
outs
or
(bad)
fwait
inc
aam
fcom
mov
fsubr
aas
pop
mov
cld
stc
mov
aaa
mov
push
push
push
jb
sub
cli
jge
sub
xchg
ja
(bad)
bound
and
loope
add
mov
stc
xchg
shr
or
loop
iret
or
rcl
neg
and
stos
lea
lods
cdq
lods
dec
bound
xchg
sbb
mov
cs
aad
dec
xor
je
xor
jecxz
xchg
rcr
xor
pop
stos
dec
and
mov
dec
jbe
pop
pop
mov
sbb
xor
pop
jbe
test
xor
cmp
jle
sub
retf
jb
fs
dec
ins
cpuid
xchg
sub
imul
jmp
dec
adc
jae
es
fwait
mov
mov
xchg
jg
pop
add
or
movs
(bad)
sbb
cmp
movs
xchg
mov
sub
mov
pop
ja
adc
aas
mov
pop
or
mov
test
inc
lea
cmps
fcom
xor
scas
pop
and
dec
pop
cmp
mov
scas
push
push
mov
aas
or
jge
sub
push
inc
gs
fld
jmp
ins
push
add
fstp
pop
lds
ja
fisttp
and
push
cmp
ja
sbb
cmps
mov
data16
mov
cmp
and
ins
sbb
xchg
fucom
outs
mov
mov
add
mov
stos
mov
adc
lds
fpatan
ins
bound
push
pop
mov
fisub
and
xchg
mov
mov
xchg
mov
retf
cmp
inc
xor
mov
jmp
pusha
mov
sub
mov
cmp
push
push
out
loope
adc
pop
lea
retf
xchg
(bad)
fdivr
int
cmp
sbb
je
xor
sbb
aam
dec
inc
je
mov
jb
int
retf
jno
inc
push
and
hlt
mov
jge
adc
cmp
and
shl
loopne
ret
in
repz
pop
xchg
mov
shl
push
fstp
aaa
mov
and
(bad)
pop
test
gs
call
repz
shl
inc
or
xchg
xchg
sar
inc
or
or
call
shl
xor
xor
test
ror
test
lock
jmp
cli
shl
shr
rcl
shl
scas
xor
(bad)
jno
retf
das
cmps
dec
out
mov
jb
push
xchg
inc
and
in
out
mov
jmp
outs
(bad)
in
cmp
dec
movs
sub
vpmulld
jg
sbb
retf
ret
add
ja
xor
icebp
xor
or
cwde
and
retf
dec
or
arpl
mov
xchg
and
dec
fdiv
sbb
es
and
jns
cmp
aaa
jg
xor
in
xor
xchg
outs
xor
pop
mov
test
jb
test
or
push
and
sbb
inc
fs
mov
cmp
cmp
jge
and
push
jg
sti
or
jmp
mov
jbe
mov
xor
jno
or
out
or
int
xchg
ins
pushf
sbb
outs
jmp
add
jnp
pop
adc
rol
cs
test
sahf
mov
es
and
sti
cmp
or
mov
(bad)
sbb
pop
push
inc
lods
jne
and
fisubr
add
push
adc
xchg
lods
in
shl
(bad)
cmc
sub
std
ficom
push
cmp
lock
pop
pop
jmp
test
retf
push
fmul
inc
int
xchg
das
cmp
cdq
repnz
jae
mov
jle
push
fnstsw
adc
jb
jae
(bad)
popa
dec
sbb
jle
js
in
sti
adc
adc
mov
mov
xchg
push
inc
push
jnp
lea
mov
dec
fwait
aam
out
mov
mov
out
(bad)
pop
and
jge
add
stos
mov
repnz
sbb
jo
mov
dec
pop
jns
popa
cmp
rcl
add
sbb
scas
mov
add
mov
dec
mov
pop
fild
adc
sub
test
jge
mov
mov
xlat
adc
lock
and
mov
push
jle
ror
jge
mov
ins
dec
ins
std
aam
and
fwait
dec
or
xchg
pop
cmp
adc
aad
pop
push
int
adc
xchg
imul
adc
jbe
push
mov
fcmove
data16
adc
sub
pop
stos
bound
in
inc
adc
add
out
jp
loopne
add
add
fisub
add
daa
add
mov
ja
(bad)
frstor
dec
pop
popf
and
ins
test
inc
mov
fld
adc
mov
leave
adc
cmp
or
cwde
mov
xchg
pop
dec
push
lods
in
fwait
ins
(bad)
xchg
add
lea
cmc
or
mov
xor
lea
mov
aad
pop
loop
inc
pushf
clc
push
jno
popf
test
icebp
inc
xchg
jmp
or
push
(bad)
sahf
stos
es
enter
sbb
xchg
movs
push
or
dec
gs
push
adc
ins
hlt
sbb
retf
lods
fs
push
push
cmp
ret
adc
or
inc
sub
cdq
icebp
xchg
(bad)
pop
inc
(bad)
ins
nop
lock
adc
fsub
test
adc
sahf
add
mov
jmp
mov
pusha
dec
pusha
add
imul
mov
ds
stc
fimul
push
pop
mov
sub
ror
adc
cmps
dec
dec
mov
cs
cdq
pop
popa
inc
popa
pop
xchg
push
(bad)
xor
es
cdq
popa
(bad)
sub
lea
cld
add
pop
jae
popf
mov
mov
add
push
daa
adc
into
inc
imul
test
mov
mov
cli
add
mov
loope
cld
in
icebp
push
push
iret
(bad)
sub
iret
xchg
ret
inc
ficom
dec
out
push
pop
add
mov
xor
out
shl
pushf
icebp
clc
cs
in
(bad)
jne
stos
inc
fpatan
sbb
pop
adc
and
leave
or
jae
aas
cmp
adc
ins
into
mov
or
fwait
push
(bad)
push
(bad)
mov
sahf
xchg
retf
jne
aad
pushf
es
and
test
sahf
jae
sbb
jno
enter
push
test
(bad)
aam
movs
rol
pushf
pop
add
adc
push
shr
xchg
pop
mov
das
es
jmp
cmp
xor
xchg
cmp
and
imul
jns
push
push
out
jg
dec
cdq
iret
mul
scas
push
or
xchg
mov
jne
pushf
add
sub
xchg
push
xor
adc
call
std
xchg
js
and
stc
ss
aad
stos
ficom
inc
jmp
or
xchg
dec
inc
jnp
push
push
std
jl
lahf
pop
out
mov
not
ret
sub
mov
ins
add
add
ins
and
pop
hlt
out
fadd
ret
push
lea
add
mov
aas
cwde
or
lods
stc
cmps
xchg
jmp
mov
add
xchg
adc
clc
jns
pop
jb
mov
jbe
movntq
xchg
mov
lods
xchg
jmp
pop
in
mov
push
fs
dec
outs
je
add
push
paddd
in
daa
xchg
jecxz
rcr
and
add
mov
add
cli
mov
repz
add
ficom
dec
or
inc
pop
dec
std
mov
cmp
cmp
and
stos
mov
(bad)
or
popa
push
test
cmps
jmp
add
fisub
shl
ja
push
pop
jo
xchg
repz
dec
dec
repz
sub
xor
sbb
sti
mov
mov
pop
out
cs
data16
dec
inc
mov
cmps
or
enter
in
mov
push
and
mov
imul
retf
popf
push
sub
hlt
jmp
scas
int
push
and
fist
xchg
sub
or
test
aas
out
cmp
in
outs
ins
arpl
ret
repz
jge
jb
jp
iret
jge
call
scas
mov
mov
popf
xchg
inc
xor
adc
xchg
scas
mov
mov
xor
push
div
pop
mov
iret
jg
nop
and
je
cdq
mov
hlt
push
fiadd
dec
push
or
push
xchg
ret
sbb
pmulhw
xor
out
and
clc
movs
fldenv
iret
cmp
bound
mov
out
cmp
push
cmp
cdq
and
mov
inc
mov
test
addr16
and
push
in
xchg
pushf
jmp
sub
mov
out
and
jmp
inc
xor
sar
and
adc
dec
rcl
dec
ror
dec
mov
mov
xor
mov
xchg
test
ja
dec
dec
sbb
add
push
(bad)
fcom
push
cmp
popf
mov
sbb
das
lds
aad
test
dec
mov
adc
mov
iret
mov
jne
stos
jbe
sub
pop
sbb
mov
jg
mov
sbb
mov
push
jnp
addr16
mov
fidiv
pop
cdq
pop
inc
push
das
mov
and
xchg
pop
shl
inc
sub
mov
repnz
mov
add
inc
test
jmp
jg
int
jp
(bad)
mov
adc
ficom
add
xchg
xchg
pushf
hlt
push
adc
or
jne
dec
inc
rol
pop
mov
sbb
sub
rcl
pop
push
dec
push
mov
or
or
(bad)
inc
xor
into
div
ss
loop
mov
int
sub
xchg
mov
dec
xor
in
push
push
dec
and
push
xchg
sub
and
loope
das
jnp
scas
jl
dec
or
(bad)
push
pop
mov
inc
dec
daa
sbb
fs
push
jmp
or
xor
stos
stos
fcmovnu
enter
mov
xchg
mov
adc
ja
inc
call
add
fcomp
add
repz
cmp
xor
adc
ins
(bad)
cld
out
add
push
adc
and
(bad)
mov
jno
shl
cdq
mov
dec
test
and
adc
xchg
add
shl
outs
jle
stos
jle
sub
ror
or
out
sub
jbe
sar
ds
clc
js
ins
imul
outs
ds
lods
xchg
cmp
ficomp
mov
pop
mov
inc
stos
test
btc
in
das
sub
bound
pushf
in
enter
aad
stos
cwde
mov
jp
adc
idiv
mov
scas
mov
cdq
and
mov
cli
and
and
lods
call
(bad)
ins
out
jbe
cmp
cmp
mov
add
ss
movs
addr16
push
inc
push
rcr
out
mov
mov
lods
mov
lds
rep
xchg
mov
ret
and
mov
and
sbb
test
aam
fmul
mov
leave
push
pop
inc
test
and
inc
leave
(bad)
pop
mov
jbe
popa
pop
add
lds
or
arpl
(bad)
call
push
or
pop
and
push
adc
cmp
call
cmp
sub
and
add
cmp
and
adc
jne
pop
outs
mov
inc
cmp
outs
pop
xchg
fisttp
pop
add
test
rcr
mov
cdq
sub
xchg
pop
cmp
mov
and
dec
fist
(bad)
xchg
setp
sub
(bad)
into
retf
mov
test
fistp
sbb
hlt
push
sbb
dec
fisttp
dec
jne
xor
adc
hlt
cmc
aad
jecxz
or
and
xor
test
out
aam
or
adc
push
imul
sbb
dec
sub
pop
ja
inc
mov
popf
sbb
dec
dec
push
in
pop
es
adc
xchg
jae
push
mov
push
ror
jg
mov
pop
or
adc
xchg
outs
test
fmul
dec
es
call
push
pusha
push
in
jo
or
inc
ficomp
dec
cli
int
push
dec
and
jno
mov
ret
fsubr
mov
add
xor
shl
les
sahf
dec
std
outs
sub
fwait
push
mov
cmp
idiv
add
gs
push
mov
dec
mov
xor
inc
push
shr
retf
add
xor
xchg
lea
(bad)
sub
and
stos
mov
cmp
jmp
(bad)
pop
sbb
into
inc
xchg
(bad)
mov
cmp
mov
inc
cmp
js
cdq
dec
ret
fstp
and
(bad)
or
out
fmul
mov
je
or
xchg
inc
mov
xchg
shr
movs
jns
movs
or
jno
(bad)
lods
test
outs
pop
mov
push
jge
pop
xchg
lahf
mov
iret
pop
push
fisttp
sub
or
ss
scas
js
loopne
rol
jmp
das
push
sbb
(bad)
xor
jecxz
adc
add
ins
cmp
mov
xchg
inc
inc
sbb
stos
iret
push
ja
sbb
fstp
fs
sbb
pusha
mov
jae
sub
mov
in
or
mov
xchg
xlat
lea
push
mov
mov
test
lahf
repnz
repz
sar
cmp
xor
pusha
xchg
mov
fisttp
lods
in
leave
sub
fs
pop
pop
xor
xchg
sbb
sti
dec
push
push
push
dec
add
daa
mov
mov
jne
fmul
aad
mov
in
cmc
push
ins
jno
arpl
gs
adc
sbb
cwde
add
stos
fild
gs
(bad)
mov
xor
adc
jp
fstp
nop
add
outs
rcr
jno
jecxz
sub
loope
xchg
shl
ret
loope
test
mov
jnp
adc
jp
aas
mov
or
pop
sub
ss
mov
jb
daa
mov
rol
cld
stos
xor
pop
std
sbb
shl
xchg
jg
adc
add
fdivr
sbb
fsubr
push
stos
test
hlt
mov
test
add
xchg
jge
sbb
cmp
mov
stc
mov
out
jnp
cmp
pop
sbb
std
iret
dec
adc
adc
and
xor
lods
test
cmp
and
mov
jmp
imul
addr16
cmp
dec
pop
pop
xchg
inc
vpaddusw
xchg
sub
int
in
sar
cmps
jbe
(bad)
cli
push
jmp
jo
mov
(bad)
(bad)
mov
inc
cmp
mov
push
fild
adc
jg
ffree
clc
in
in
cld
fwait
and
adc
clc
and
(bad)
xchg
push
dec
push
hlt
cmp
mov
inc
(bad)
pushw
scas
fstp
clc
pop
daa
fdiv
(bad)
jmp
in
rol
rcr
mov
jecxz
or
scas
xor
cmp
fbstp
lea
mov
dec
cmp
dec
push
push
icebp
and
pop
ret
sahf
cmp
stos
add
xchg
inc
mov
lock
jmp
leave
loopne
pop
imul
shr
out
mov
cmp
push
pop
mov
xor
push
ins
mov
sbb
ror
popa
sbb
call
jb
push
fsubr
xchg
jl
pop
aas
inc
(bad)
mov
or
dec
and
jl
pushf
test
sbb
add
jno
sub
test
shl
xchg
sbb
dec
test
sub
mov
ja
jo
mov
repnz
push
or
in
aas
pop
cmp
mov
sbb
fcomp
adc
add
jmp
nop
je
pop
mov
mov
pushf
ins
lea
jge
test
xchg
dec
pop
add
in
pop
dec
add
xlat
repnz
shr
cmp
fist
and
xor
in
sub
jg
fst
dec
rol
arpl
cmps
xchg
ins
dec
fstp
sbb
xor
(bad)
xor
mov
xchg
jp
cld
mov
xchg
fwait
push
mov
push
jnp
push
(bad)
movs
inc
cmps
gs
push
pop
jmp
jle
and
sub
mov
mov
xchg
cli
sti
push
or
cs
jg
imul
pop
inc
daa
(bad)
fnstsw
in
mov
les
adc
mov
cmp
sub
movntps
inc
inc
dec
sub
pop
sub
mov
mov
test
inc
popf
add
adc
jmp
bound
lods
and
push
push
jmp
aam
lods
fdiv
sbb
push
cmc
mov
test
repz
jnp
push
xor
stos
shl
mov
dec
dec
in
arpl
dec
push
cmp
loope
repz
repz
push
sub
sbb
inc
shl
les
in
jle
inc
xchg
mov
inc
add
sbb
scas
cwde
das
div
sbb
dec
xchg
ins
push
dec
push
mov
dec
je
outs
xor
mov
test
cmps
adc
jbe
mov
xchg
push
jp
pushf
retf
dec
je
daa
movs
outs
les
sbb
and
pop
dec
pop
mov
push
mov
aaa
das
outs
inc
call
out
or
lods
xor
cmp
pop
mov
xchg
push
out
imul
outs
mov
xor
mov
popf
pop
movs
enter
jmp
xchg
xchg
out
lea
out
jmp
push
xchg
adc
xchg
dec
js
or
cmp
stos
jo
and
dec
jns
in
rcl
push
mov
or
mov
ret
scas
jne
ja
sbb
(bad)
dec
into
loop
in
ins
(bad)
aam
xchg
das
fstp
lds
cmp
sbb
cmp
cld
cmp
mov
add
add
(bad)
adc
aad
add
push
mov
outs
xor
stc
addr16
cwde
call
retf
enter
call
push
jge
dec
sbb
enter
bound
out
popf
sub
fs
lods
pop
call
leave
xor
xor
retf
call
lea
cmp
stos
or
(bad)
dec
xor
inc
leave
cmc
dec
cmp
cs
jb
push
lods
hlt
stos
sbb
sbb
cmps
cmp
bound
mov
out
(bad)
out
pop
xchg
push
push
stc
mov
pop
js
lds
jg
sbb
in
fdiv
or
stc
test
mov
shl
jbe
pop
shl
call
xchg
xchg
mov
(bad)
out
xor
es
adc
mov
inc
push
pop
mov
mov
cmps
mov
push
rcl
sub
gs
lahf
stos
rcl
retf
xlat
fcmovnbe
adc
push
int
dec
retf
in
(bad)
in
sbb
or
imul
pop
test
sbb
call
into
sub
fild
out
mov
aaa
je
fisttp
push
test
cli
out
out
and
push
xchg
(bad)
call
cmps
ss
std
leave
cmp
(bad)
sar
sahf
imul
fsubr
mov
scas
cmp
sbb
test
push
dec
ffree
xor
mov
mov
aad
inc
outs
sub
push
sbb
mov
(bad)
mov
inc
mov
adc
cwde
dec
mov
retf
imul
into
outs
and
lds
loop
shl
loopne
xchg
(bad)
and
push
dec
inc
pop
mov
cli
aaa
je
div
mov
jle
pop
lea
fcom
lods
repnz
add
mov
scas
in
add
imul
pop
xchg
push
and
(bad)
mov
push
pop
sbb
test
xchg
js
mov
sahf
mov
in
dec
popf
inc
jo
xchg
inc
cmp
or
in
mov
out
movs
inc
bound
mov
dec
cmc
or
inc
rol
in
cdq
inc
xchg
test
sets
jnp
ja
xchg
mov
or
mov
ds
mov
cmp
stc
aad
lahf
push
test
ins
mov
sub
jo
or
std
mov
add
xchg
cmc
imul
push
xchg
pop
xor
jno
xor
add
sbb
stos
and
(bad)
out
inc
sub
aad
add
popf
lahf
pop
push
xlat
mov
cmps
pusha
inc
jmp
mov
(bad)
stc
mov
lock
ins
or
es
push
fwait
push
or
test
inc
js
inc
call
jne
mov
jnp
pop
mov
mov
fwait
fwait
in
xchg
outs
into
div
add
push
clc
div
cmp
mov
inc
shl
mov
xchg
clc
imul
sbb
add
jo
and
lds
and
push
mov
sub
push
adc
push
adc
fdivp
push
pushf
adc
xchg
add
or
imul
cpuid
retf
es
sub
fimul
xlat
push
sbb
lock
lods
adc
cld
gs
pop
data16
test
fmul
pushf
mov
ss
in
pop
push
sar
mov
dec
(bad)
xchg
aad
outs
cdq
push
(bad)
hlt
les
dec
daa
cmp
aad
add
mov
imul
jge
out
or
dec
repnz
dec
xchg
adc
and
add
mov
lahf
jns
lods
dec
out
lahf
lods
pusha
push
cs
sbb
jmp
(bad)
shl
mul
jmp
call
jb
mov
adc
js
rcl
xchg
or
test
mov
arpl
mov
arpl
jg
inc
scas
scas
stc
leave
push
lahf
dec
inc
enter
mov
pop
cmp
out
push
sbb
int3
add
fidivr
pushf
lahf
hlt
pop
out
xor
add
mov
arpl
mov
lods
nop
std
inc
movs
dec
push
retf
pop
test
and
popf
into
add
xchg
adc
push
push
mov
xor
sti
dec
cmps
pop
test
jp
add
mov
adc
mov
hlt
dec
sub
call
xchg
outs
mov
je
xchg
fisttp
outs
dec
inc
enter
cmp
xor
popf
and
and
sbb
loope
lds
(bad)
test
cmp
movs
outs
mov
jmp
out
push
cwde
addr16
jecxz
dec
sbb
dec
jmp
push
pop
int
cmps
jle
or
out
loopne
fwait
daa
xor
adc
adc
rol
sbb
stc
jmp
pop
dec
mov
push
xor
ret
mov
int
out
js
dec
xchg
sbb
xchg
pop
(bad)
xor
pop
(bad)
fimul
sub
jecxz
sbb
lods
xor
cmp
pop
fs
cmp
(bad)
jmp
pop
outs
xor
xchg
add
rol
fstp
cdq
pop
mov
outs
or
lods
(bad)
pop
pop
ds
dec
fs
pop
mov
enter
adc
iret
pop
icebp
aad
fsubr
xlat
sbb
sub
enter
sub
cmp
sbb
pop
pop
sbb
popa
mov
dec
aad
sbb
cmp
sub
lahf
test
inc
gs
lahf
and
push
mov
sbb
(bad)
test
iret
cmps
jne
bnd
and
or
cmps
mov
lods
or
je
out
lds
adc
in
cwde
(bad)
jne
and
pop
in
fdivr
push
sti
push
clc
(bad)
sahf
xchg
cdq
cli
adc
add
shl
push
hlt
popa
inc
or
add
fsubr
mov
fwait
pop
jle
call
(bad)
arpl
sub
pop
cs
sbb
cmp
repz
daa
or
mov
xor
(bad)
in
scas
ins
xchg
(bad)
in
ss
xchg
cmp
repnz
ss
ds
movs
out
pop
cs
xchg
cli
and
sub
fsub
ins
jecxz
push
fsub
stos
pop
in
dec
push
push
bound
cmps
xchg
je
fmul
jnp
imul
test
(bad)
loop
add
push
sbb
dec
push
mov
int3
mov
in
jmp
lahf
fwait
stc
xchg
xchg
icebp
aaa
push
fst
sbb
clc
jmp
mov
dec
push
stos
pop
pop
loope
in
sbb
xchg
jmp
fldcw
lds
popf
push
mov
nop
aad
jl
mov
mov
test
xchg
movs
mov
and
cmp
rol
les
movs
(bad)
jp
imul
cli
push
jg
ror
and
ds
push
icebp
data16
add
jbe
mov
retf
mov
das
cmc
push
bound
and
xor
fdivrp
dec
lods
mov
or
xchg
and
lods
imul
sti
inc
retf
dec
cmps
xchg
ret
mov
adc
hlt
mov
leave
cmp
test
push
sub
jno
adc
add
add
pusha
das
sar
rol
inc
je
popf
inc
xchg
sbb
mov
pop
out
clc
nop
int
ins
fisub
(bad)
pop
loopne
shl
jmp
sub
push
stc
and
cmp
push
push
lods
std
imul
add
ds
inc
loopne
(bad)
test
inc
jecxz
lods
js
leave
mov
cmp
out
cmps
enter
loope
inc
push
mov
js
adc
loopne
jmp
mov
pop
mov
in
dec
xor
inc
cdq
fs
popf
rcl
inc
jno
aas
jecxz
loope
mov
xor
and
fistp
adc
stc
int3
jo
ret
aas
adc
jns
xor
push
(bad)
int
and
and
jae
pop
xchg
pop
sti
stos
test
out
add
dec
add
out
shr
jne
jmp
sbb
inc
movs
xor
xchg
cmps
or
fild
cmps
lock
jle
mov
or
push
ret
movs
xchg
pop
add
cli
ret
sub
mov
inc
nop
aam
(bad)
mov
or
(bad)
jne
pusha
loop
add
ficomp
fisub
rcr
mov
dec
sbb
push
lahf
push
(bad)
test
into
cmps
fcom
out
rep
mov
fild
inc
mov
adc
sub
push
clc
stc
inc
adc
sbb
lock
mov
xchg
mov
div
adc
mov
movs
push
jg
ins
fdivr
push
mov
sub
xchg
retf
movs
xchg
ss
jno
xor
shr
adc
jnp
mov
push
mov
pop
xchg
out
or
repz
cld
mov
cmp
adc
sub
in
gs
xchg
add
adc
jp
push
mov
mov
(bad)
xor
adc
lods
pop
bound
mov
lods
retf
pop
push
(bad)
mov
mov
test
mov
pop
pop
mov
in
lods
imul
jl
and
pop
and
(bad)
xchg
sub
jmp
sub
fwait
pop
mov
test
popf
(bad)
movs
mov
xor
push
and
rol
ficomp
push
sub
push
es
ins
int3
add
jae
loopne
dec
jne
push
jge
or
pop
repnz
ret
jl
test
lods
push
out
push
sbb
pop
fadd
adc
cs
loope
ror
pushf
pusha
in
pushf
mov
cmps
stos
stc
adc
inc
pop
nop
movs
fwait
out
cmp
ja
cmps
and
ret
mov
bt
retf
xchg
fidivr
ret
aam
jbe
jle
pop
cli
rol
sar
(bad)
out
adc
cmp
cld
cmp
js
jmp
push
adc
mov
xor
fimul
jb
mov
xchg
mov
adc
test
ds
loope
icebp
fst
shl
or
or
jb
inc
test
pop
(bad)
aas
(bad)
int
aad
fidivr
push
mov
scas
sbb
lods
xor
pop
arpl
mov
adc
inc
movs
dec
test
test
cwde
lods
inc
outs
fidivr
aam
leave
xchg
mov
or
cmps
aam
dec
push
call
fsubr
xchg
xor
ret
(bad)
mov
addr16
mov
gs
pop
ror
jmp
inc
mov
inc
fbstp
out
loopne
xlat
(bad)
and
xchg
test
adc
cmps
arpl
pop
retf
shl
mov
sbb
mov
xchg
aas
addr16
neg
imul
pop
stc
jle
xlat
adc
sub
ret
(bad)
scas
sbb
push
sbb
xchg
(bad)
aad
popf
das
pop
jge
sub
adc
cmp
test
inc
adc
dec
shl
jno
sbb
pop
push
fstp
std
into
fist
(bad)
inc
daa
sti
mov
sbb
sbb
sbb
add
idiv
mov
cmp
cld
shr
gs
out
call
jns
xor
in
in
jmp
jb
in
pop
cmp
xchg
xchg
xchg
jmp
mov
sub
cmc
scas
cdq
xchg
inc
ds
xor
mov
mov
aad
cld
xlat
fsubr
jle
ss
daa
push
push
jns
lods
jne
test
test
aam
stos
xor
(bad)
fnstcw
dec
or
and
xchg
repnz
pusha
ret
xor
mov
ja
fimul
dec
add
inc
fidivr
sbb
outs
and
fst
enter
ficom
xor
cmp
push
pop
cmp
outs
adc
pop
mov
push
mov
daa
xor
pop
sahf
push
sub
and
mov
in
ror
push
xchg
int3
add
sbb
mov
out
push
dec
imul
cmp
push
ret
mov
dec
scas
icebp
pop
in
dec
in
jg
mov
xor
in
mov
sbb
cs
xor
mov
xor
int
(bad)
imul
pop
aas
jno
(bad)
jl
fidivr
es
js
mov
out
push
push
or
stos
cmp
push
pop
fdiv
test
pushf
imul
enter
push
push
dec
in
aad
mov
sbb
aam
ins
shl
jmp
icebp
ins
or
pop
mov
imul
mov
mov
das
out
jmp
or
mov
ds
cs
jmp
(bad)
sti
sub
(bad)
loop
sahf
push
cmps
dec
jge
jp
inc
loop
rcr
push
aas
xchg
jo
xchg
daa
lock
mov
call
cmp
call
push
scas
ss
mov
pop
xchg
scas
mov
test
and
enter
outs
push
pop
in
pusha
clc
sbb
sbb
cdq
mov
sbb
mov
je
(bad)
mov
leave
repz
and
enter
xchg
out
push
test
cdq
repz
jecxz
sbb
movs
cmp
imul
jmp
out
pop
ret
(bad)
fsubr
mov
movs
inc
fldenv
add
pop
fstp
inc
stos
push
xchg
cmp
sahf
(bad)
rcr
ret
xor
ret
test
sbb
enter
adc
ins
sbb
push
fwait
xlat
sbb
cmp
sub
lahf
retf
sub
movs
inc
cmps
lea
xor
cmp
mov
mov
cmp
push
ins
loopne
jge
dec
imul
push
test
(bad)
xor
pop
inc
in
ja
test
bound
lods
leave
or
stc
mov
push
mov
cld
adc
jl
xchg
xchg
ins
mov
fs
(bad)
add
dec
rcl
push
pusha
adc
or
addr16
and
repnz
mov
cmps
lea
clc
xchg
xchg
shr
sub
repz
sub
jo
push
movs
and
mov
xor
cli
cld
inc
and
jae
in
scas
adc
es
adc
cs
aas
sbb
clc
adc
dec
cmp
fnsave
dec
and
jge
add
push
cld
sbb
sbb
and
push
inc
jmp
cmp
jb
xor
retf
pop
pop
aaa
push
in
je
push
xor
rcl
mov
sbb
jecxz
leave
sub
dec
push
pop
and
pop
mov
cmc
data16
lea
pop
mov
adc
test
mov
ins
jl
mov
hlt
jp
popa
xchg
sub
inc
cmp
xchg
dec
std
pop
repnz
dec
push
lea
mov
pop
dec
clc
mov
inc
clc
aad
mul
mov
add
outs
out
mov
or
xlat
pusha
ja
mov
cmp
push
xchg
xchg
(bad)
leave
fisub
adc
(bad)
mov
icebp
xrelease
push
out
xchg
repz
or
add
xor
in
rcr
jg
push
out
and
mov
pop
push
outs
cmps
popf
mov
repz
js
sub
out
jecxz
mov
shl
cmps
jp
in
dec
sub
lds
and
push
or
in
cwde
mov
mov
or
in
add
jecxz
inc
xor
rcl
movs
test
cmp
adc
or
in
push
bound
adc
in
xor
jne
sbb
test
cmc
cmps
mov
movs
imul
aad
dec
scas
dec
adc
mov
nop
push
xchg
icebp
sub
and
leave
rcl
push
cmp
lds
cmp
xlat
cs
push
add
dec
push
add
stc
sub
leave
loopne
jp
mov
cmp
push
mov
fldlg2
(bad)
push
sbb
push
test
retf
push
jl
xchg
sbb
pusha
ins
add
add
pop
pop
clc
and
fidiv
rcr
and
ins
stc
(bad)
int3
in
mov
mov
ins
mov
add
in
hlt
in
inc
and
imul
xor
jmp
sub
idiv
mov
imul
mov
loope
jecxz
jmp
ins
sub
jne
sub
xchg
push
fmul
push
xchg
fs
lahf
push
push
in
lods
sub
cmc
mov
sbb
xor
mov
add
(bad)
retf
mov
mov
jmp
jno
mov
add
retf
mov
or
(bad)
mul
sbb
push
sti
xchg
test
jnp
call
mov
add
neg
adc
jp
mov
out
xor
add
xchg
leave
ds
arpl
mov
mov
mov
repz
push
add
and
add
(bad)
sbb
and
xchg
pop
(bad)
stc
mov
xor
cmps
(bad)
in
push
xor
dec
out
lods
leave
popa
push
arpl
cmp
sub
mov
rcr
adc
pop
loope
enter
adc
inc
std
out
aad
fdiv
lds
(bad)
hlt
stc
in
inc
mov
or
ret
adc
das
adc
(bad)
rcr
in
hlt
or
push
call
jle
inc
mov
pop
jns
shl
xchg
(bad)
jl
lods
cdq
lock
xchg
pop
xlat
mov
aaa
sbb
mov
sub
or
sub
fld
mov
inc
es
pop
cs
rcl
mov
adc
mov
retf
adc
cmps
pusha
add
sub
mov
arpl
push
ds
pop
push
dec
mov
scas
or
fild
jne
cmp
and
test
arpl
clc
sbb
ret
adc
loopne
xchg
pop
cs
adc
pop
cwde
inc
inc
mov
jg
and
and
cwde
cmp
push
sbb
loope
xor
inc
push
or
cmp
xor
lods
mov
push
cmp
outs
jae
jmp
mov
sub
pop
inc
dec
(bad)
mov
mov
ds
jae
xchg
or
jbe
sbb
mov
stos
sbb
lods
fld
outs
cmps
je
push
sub
aad
ds
adc
(bad)
in
cmp
cmp
out
test
adc
cmp
(bad)
out
add
add
(bad)
arpl
lock
and
addr16
sar
push
cld
lock
jg
in
pop
cmp
das
daa
loopne
add
jo
dec
add
pop
dec
test
stos
sbb
inc
xor
arpl
(bad)
(bad)
iret
add
repnz
sti
xrelease
inc
inc
sub
cwde
ss
push
int
and
or
push
jmp
mov
ror
cmp
xchg
aas
retf
outs
add
pop
mov
xchg
ficom
jmp
ds
in
sub
rcr
jp
aad
or
xor
shl
sbb
in
mov
sub
push
push
les
mov
jmp
and
movs
lods
cmps
scas
outs
mov
cmp
mov
cwde
stc
inc
ss
loop
or
add
(bad)
retf
jbe
hlt
and
dec
sub
ins
sbb
adc
pop
or
mov
scas
sub
maxps
retf
jno
(bad)
ror
pop
jnp
inc
mov
mov
lahf
jno
call
je
sti
sbb
cmp
jo
pop
sbb
cmp
mov
les
fnstcw
in
and
xchg
loop
mov
mov
gs
push
fstp
test
mov
dec
push
bound
outs
test
imul
enter
sbb
scas
jmp
inc
ins
jge
inc
nop
ins
sbb
out
mov
cwde
(bad)
leave
test
sbb
push
test
movs
xchg
xchg
xlat
inc
adc
cli
cmc
jge
mov
ficomp
loope
imul
xchg
adc
fcmovbe
pop
call
add
xor
ret
xor
outs
lods
push
mov
dec
push
cmp
cld
out
aam
out
(bad)
jno
stc
xchg
cld
cmp
and
repnz
adc
aas
movs
xor
loopne
int
retf
fild
xor
aad
xchg
enter
sub
fldcw
mov
int
pop
in
pop
pop
sbb
dec
push
ds
frstor
and
inc
cdq
cmp
pop
xchg
adc
jb
daa
mov
dec
sbb
jmp
add
(bad)
neg
sbb
leave
cmps
mov
sbb
mov
or
pop
popa
in
or
push
and
and
js
out
bound
cmovg
cmp
or
test
xchg
fdivr
outs
retf
imul
push
into
nop
sbb
enter
shl
dec
push
mov
outs
out
in
and
shld
mov
ret
xchg
mov
or
sub
sub
mov
or
in
dec
fcom
daa
adc
pop
push
jge
push
jle
bound
add
loopne
daa
lods
mov
mov
push
or
cmp
xchg
push
and
push
imul
call
mov
cdq
dec
in
mov
int3
dec
mov
dec
lds
mov
mov
and
cwde
jge
test
lea
or
and
loope
cld
int3
pop
jl
sbb
xlat
add
ficom
out
push
push
in
jne
add
or
mov
(bad)
repnz
mov
(bad)
cmp
retf
stos
fld
jns
xor
sar
js
adc
pop
jg
cmc
and
iret
push
xor
icebp
xchg
cmp
and
mov
jb
dec
or
jo
jmp
dec
out
sar
popaw
ins
sbb
cmp
adc
or
adc
cli
out
mov
inc
jg
mov
out
sub
movs
mov
push
adc
dec
in
sbb
retf
push
dec
mov
outs
xchg
and
add
(bad)
jb
mov
or
fwait
jp
pop
mov
sub
seta
inc
loopne
and
fs
cmp
ret
rcl
pop
inc
push
inc
or
sbb
ss
add
sahf
(bad)
push
in
test
xor
movs
jo
mov
int3
cmps
push
push
and
dec
cmp
add
cdq
add
mov
loopne
mov
jnp
loope
mov
add
aaa
js
jnp
fld
xor
aaa
jne
xlat
jno
arpl
pop
mov
adc
xor
ret
nop
xlat
repz
aas
pop
xchg
pop
adc
add
jp
inc
retf
rcr
mov
mov
(bad)
out
xchg
xchg
call
outs
popa
cmps
fstp
out
icebp
test
out
jge
adc
test
xchg
add
cli
pop
fisubr
pop
sub
pop
jno
stc
loop
cs
pop
dec
inc
ror
add
mov
enter
add
sbb
push
cs
mov
add
xchg
(bad)
ja
shl
jmp
jns
pop
in
xchg
push
mov
or
cmp
rol
popf
adc
int
js
cmp
mov
ins
push
shl
repz
pop
vpacksswb
jo
test
inc
cmp
gs
jo
fimul
push
outs
aam
mov
out
retf
jb
in
mov
cs
pop
into
adc
out
out
mov
in
jmp
xchg
inc
sub
into
mov
or
cmp
leave
arpl
mov
mov
jge
mov
lock
pop
and
scas
out
mov
repz
loopne
mov
pop
(bad)
jecxz
and
xchg
and
dec
adc
mov
xchg
pop
mov
fcmove
fdiv
clc
test
(bad)
and
pop
pushf
ret
mov
add
mov
nop
mov
bound
mov
ins
stc
in
sub
add
sbb
xchg
or
inc
pop
cmp
not
xchg
or
jmp
xlat
inc
push
test
add
fisub
inc
dec
mov
and
and
pop
or
pop
jp
cmps
call
hlt
out
mov
push
xor
hlt
xor
mov
out
ja
mov
lock
retf
xchg
jp
mov
iret
mov
or
cli
cwde
out
and
rcl
pop
pop
push
and
retf
adc
xlat
or
shr
cmp
call
and
dec
(bad)
mov
pop
ins
add
sahf
pop
imul
mov
addr16
inc
leave
(bad)
jg
je
test
cli
shl
imul
xor
pusha
cld
inc
jnp
outs
dec
loopne
arpl
retf
jns
fimul
test
repz
add
cmp
xchg
ficomp
xor
mov
lahf
into
(bad)
in
inc
mov
inc
inc
add
imul
mov
loopne
loopne
jae
mov
or
adc
in
movs
imul
iret
cmp
dec
jnp
cmp
mov
mov
sti
call
hlt
and
aas
pop
inc
fdiv
add
dec
sahf
jge
dec
lods
je
popa
cmp
ins
and
jmp
xchg
adc
push
and
inc
or
ins
(bad)
ret
sbb
imul
jmp
ins
inc
test
pop
xchg
cmc
or
(bad)
sub
mov
imul
push
inc
pop
ja
push
aas
fadd
sti
pop
xchg
jbe
add
adc
cmc
sub
or
outs
and
cwde
xor
(bad)
test
dec
pop
dec
dec
xor
adc
mov
sub
add
mov
mov
mov
pop
xchg
lods
cs
test
fadd
jno
out
mov
iret
or
sbb
xchg
push
stos
retf
add
movs
add
shl
mov
pop
(bad)
mov
aas
call
lods
add
cmps
mov
rcr
jbe
call
into
dec
or
faddp
data16
inc
jg
arpl
inc
adc
push
mov
pop
in
mov
pop
adc
daa
js
call
sub
add
sti
aam
push
loope
or
jnp
data16
dec
mov
sbb
dec
jge
in
push
fisub
lds
scas
pop
mov
test
jns
test
jl
cdq
lods
sbb
push
dec
fdiv
inc
aad
cmp
push
dec
cld
rol
jg
lahf
mov
or
dec
loop
pop
push
add
stc
inc
stos
leave
mov
cs
in
and
es
sbb
and
sub
cmp
pushf
out
xchg
and
add
xor
out
adc
pop
or
call
(bad)
lock
push
jbe
retf
test
shr
jg
imul
xor
pop
cdq
in
jbe
push
jo
enter
mov
adc
(bad)
test
cwde
(bad)
popf
pop
or
dec
les
test
cs
sub
inc
data16
dec
jmp
ins
in
popa
mov
scas
jge
jns
hlt
dec
pop
pop
bound
outs
dec
out
and
push
call
dec
jecxz
mov
or
mov
inc
(bad)
sbb
inc
jo
sub
adc
push
mov
cmp
mov
fs
jns
pop
movs
dec
fs
or
and
cld
xor
pop
cdq
push
mov
jg
cld
aad
jle
ins
fcmovb
cld
out
mov
pop
fsub
xor
inc
pop
sbb
jbe
cld
mov
xor
cs
fs
xor
jbe
pop
push
pop
add
xchg
std
aaa
lds
repz
imul
push
push
or
mov
mov
rcl
sub
test
daa
xchg
cmp
lock
hlt
aad
inc
aaa
jle
jl
(bad)
inc
in
mov
push
cmc
fist
sbb
pop
outs
lahf
mov
pop
ins
out
pop
dec
les
sub
jecxz
jno
in
cmc
jnp
fiadd
dec
aas
retf
call
inc
mov
addr16
push
xor
push
arpl
push
jnp
jb
inc
test
(bad)
dec
ja
jae
iret
mov
adc
aas
mov
push
push
sub
out
es
inc
stc
aad
pop
neg
mov
sub
fbstp
add
or
cmp
call
lods
jmp
(bad)
or
push
mov
inc
lahf
and
pusha
cdq
ins
mov
and
cmp
repz
mov
je
xlat
outs
jo
ret
xchg
xchg
cdq
add
ficom
lods
loop
push
sahf
pop
mov
scas
inc
xor
sbb
cmp
jg
arpl
fs
add
(bad)
pushf
push
push
imul
jle
push
dec
xor
rol
ficom
adc
call
xchg
add
mov
push
adc
and
cld
add
pop
scas
cmp
jne
pop
mov
cs
sub
addr16
hlt
push
cdq
sub
icebp
scas
test
aad
or
cdq
push
sub
fisubr
pop
dec
sbb
jb
dec
(bad)
pusha
dec
fistp
and
xchg
mov
leave
scas
cmps
and
stos
test
mov
and
imul
pop
jo
push
inc
xor
das
mov
icebp
mov
pop
fld
xor
inc
xchg
lahf
nop
push
daa
xor
or
push
hlt
repnz
test
pop
pop
cwde
xor
mov
adc
cmc
and
jmp
aam
data16
push
mov
outs
sbb
xchg
ror
out
aam
imul
test
lds
push
pop
popa
pop
cmc
dec
pop
push
or
in
add
std
or
jecxz
and
adc
lods
push
jno
push
cmp
xor
push
push
adc
or
inc
cmp
jo
pop
mov
push
inc
ficomp
jle
adc
shl
es
js
pop
mov
xchg
mov
test
xor
lods
sub
mov
sbb
repz
push
inc
fs
inc
xlat
popf
add
dec
lds
mov
inc
sbb
mov
pop
arpl
inc
out
(bad)
jecxz
xor
dec
out
pop
add
js
enter
mov
adc
jg
lods
and
cld
scas
and
mov
out
pop
dec
lds
shl
mov
inc
dec
or
cli
push
scas
stos
and
adc
retf
out
les
(bad)
mov
xchg
mov
cmps
je
call
push
aad
jg
fbld
sbb
das
pop
scas
adc
fmul
push
clc
xlat
sbb
fisttp
jl
cmps
cmp
pop
js
dec
ja
mov
jl
sub
push
movs
(bad)
adc
push
mov
inc
(bad)
in
pop
cmp
cli
das
(bad)
(bad)
pop
addr16
cmps
pop
inc
std
mov
or
cli
enter
sub
mov
push
mov
ret
sub
mov
popf
test
icebp
xor
in
test
das
inc
aaa
jl
ret
jecxz
out
test
rcr
repz
(bad)
in
ror
les
inc
sub
xchg
xchg
iret
xchg
in
xchg
in
icebp
sub
fdivr
dec
pusha
icebp
frstor
je
dec
and
sbb
(bad)
pop
shr
inc
dec
inc
and
mov
shl
sub
lock
shl
out
cmp
mov
int3
cmp
mov
dec
pushf
jle
sub
loope
sti
push
mov
les
mul
inc
pop
sub
test
in
mov
mov
stos
jmp
les
xchg
enter
les
inc
stos
xor
pop
push
pop
ss
test
xchg
pop
xchg
mov
push
xchg
adc
or
and
sub
loop
mov
cmps
inc
cmp
clc
mov
fsub
dec
sbb
inc
in
aaa
retf
mov
mov
repnz
aam
jmp
ja
sbb
cmp
inc
iret
ins
add
ds
inc
data16
in
xor
sbb
aaa
iret
add
mov
enter
cs
shr
cwde
(bad)
sbb
(bad)
mov
xchg
xchg
fisubr
and
test
mov
sbb
popa
shl
jo
int3
dec
adc
dec
pushf
cmp
push
cmps
mov
adc
fist
int3
movs
shl
mov
adc
mov
stos
mov
push
sbb
test
sti
out
(bad)
mov
or
add
push
imul
jecxz
ror
jge
hlt
mov
neg
fistp
sahf
xchg
mov
inc
popf
scas
mov
mov
das
pop
fwait
cmps
cmp
sbb
nop
dec
mov
inc
push
mov
les
arpl
lods
and
call
rcr
cmps
ret
cld
mov
jo
xor
mov
mov
jmp
or
add
xor
js
ret
pop
pop
pop
clc
cmps
mov
mov
out
push
pop
(bad)
jns
pop
push
stc
adc
pop
popa
and
in
and
xor
jecxz
aaa
push
cmp
jmp
mov
dec
sbb
shl
xchg
xchg
(bad)
cs
loope
test
mov
push
add
or
lods
xor
jae
in
mov
ja
psubsw
jge
inc
mov
ret
in
lods
idiv
mov
loopne
push
jns
repnz
adc
aam
mov
and
sub
mov
push
or
or
or
test
dec
es
push
cli
jl
mov
sar
push
int3
mov
aam
stos
pop
pop
lods
(bad)
sbb
xchg
repz
cmp
nop
push
adc
ins
stos
mov
cmc
mov
cwde
pop
or
inc
addr16
cmps
test
jle
imul
sub
xchg
mov
and
je
pop
jns
ins
sar
push
jmp
pop
(bad)
shl
aaa
or
arpl
ins
dec
mov
mov
scas
sbb
mov
cli
adc
sbb
sub
push
in
jno
jp
arpl
mov
jb
call
sti
mov
sub
in
mov
ds
xchg
iret
mov
(bad)
int3
cmp
mov
rcr
ins
sub
clc
or
aad
add
mov
and
sbb
shl
clc
dec
retf
adc
jmp
pop
cdq
sar
pop
or
sbb
or
add
addr16
jae
sbb
pop
dec
sub
cld
dec
sub
or
imul
mov
fistp
mov
mov
mov
mov
and
cld
arpl
data16
mov
sub
aad
idiv
not
xor
call
rol
cmp
(bad)
icebp
out
jle
push
sub
cmp
cld
mov
push
pop
jb
jge
adc
lock
mov
int3
add
inc
sti
add
sub
xchg
add
idiv
push
or
xchg
push
out
pop
or
pop
mov
pop
cmp
adc
not
cmp
adc
imul
ins
cli
sbb
mov
push
rcl
cmp
imul
pop
push
jnp
sub
movs
lods
ins
ret
cmp
retf
lods
push
call
add
cdq
pushf
sbb
fwait
xlat
jns
js
xlat
pop
inc
pop
stos
jmp
ja
jno
popa
pop
lock
mov
js
jmp
enter
stos
icebp
mov
(bad)
lds
push
xchg
adc
sub
rcl
add
retf
jmp
fild
fs
mov
push
test
adc
inc
std
shr
jge
cwde
bound
sti
fs
xor
scas
test
cwde
div
mov
push
sbb
(bad)
repnz
lahf
jae
daa
in
imul
adc
xchg
cld
mov
lahf
ret
push
or
repnz
sbb
xor
mov
aam
fisttp
or
lahf
push
mov
stos
aam
sub
cmps
leave
in
jo
in
cmp
xchg
jno
mov
dec
pop
mov
call
mov
mov
loopne
mov
jno
mov
aad
adc
imul
test
in
push
fucom
or
cmps
fcmovnbe
or
fnstcw
inc
mov
mov
xor
or
in
cld
les
fs
loope
out
adc
stos
cmp
or
dec
stos
rcr
retf
out
sub
repz
xor
or
loop
stc
or
gs
xchg
mov
xor
jl
movs
lock
pop
mov
or
outs
fisubr
lock
and
iret
pusha
mov
cwde
(bad)
jb
imul
test
out
sar
fisubr
xchg
fldenv
je
push
out
xor
sub
lahf
cs
cmp
in
retf
push
js
mov
mov
jnp
mov
and
mov
cs
in
push
mov
inc
movups
nop
loopne
arpl
mov
ror
(bad)
ret
sbb
daa
icebp
xor
(bad)
cwde
fst
iret
inc
inc
popa
mov
ror
fidiv
sbb
mov
out
pop
jmp
push
popf
xchg
std
daa
and
fldenv
xor
add
jge
shr
and
aas
cmp
(bad)
adc
pushf
pop
repz
jmp
jbe
jns
loop
jp
cmps
sahf
scas
bswap
ja
fstp
scas
mov
add
int3
jp
aam
adc
inc
or
icebp
dec
xor
sbb
out
xlat
(bad)
xchg
out
xor
mov
and
dec
and
push
dec
dec
mov
or
shl
mov
cld
out
inc
ret
cli
jl
daa
and
add
loope
xchg
in
xor
add
xchg
sbb
or
imul
adc
xor
nop
mov
sub
clc
rcl
sbb
je
push
sub
std
adc
bound
sub
push
outs
xchg
adc
xor
push
dec
jne
mov
dec
or
sbb
xchg
or
jo
cmp
lds
clc
xchg
jno
retf
sub
mov
jmp
lds
mov
sub
les
xor
sub
push
data16
adc
lock
add
fsub
and
repz
add
dec
push
xor
outs
cmp
shr
dec
push
jo
into
sbb
adc
stc
cmp
retf
cmp
or
jb
pop
movs
cmp
mov
test
xchg
cmps
shr
pop
jno
mov
popa
nop
mov
jg
mov
inc
out
mov
xchg
cwde
sti
cwde
push
sbb
dec
add
xchg
mov
push
mov
xlat
sti
mov
push
std
jb
ret
xchg
mov
ret
pop
(bad)
aad
iret
mov
inc
stc
inc
pop
shl
adc
in
sbb
mov
loope
xchg
add
out
inc
cmc
int3
enter
bndstx
ret
sahf
mov
fild
or
pop
scas
int
scas
lahf
test
push
adc
rcr
pop
jns
cld
aam
push
call
pop
ss
cmp
or
(bad)
adc
mov
inc
sbb
mov
jb
push
push
inc
add
xlat
and
rol
sbb
(bad)
or
cwde
push
pop
or
mov
pop
mov
jno
pop
push
fwait
push
loopne
xchg
mov
jp
pop
cmc
or
adc
loop
adc
das
inc
push
push
retf
test
jo
lods
xor
sti
push
data16
call
jecxz
test
ins
push
mov
xchg
gs
adc
sbb
fsub
add
push
in
jne
push
dec
xor
jno
ins
sbb
mov
movs
push
shl
in
maxps
shr
punpcklbw
aad
add
pop
jp
cmp
cmc
test
add
add
ins
lahf
pop
dec
push
sub
mov
pop
mov
dec
mov
fcomp
stos
aaa
cdq
test
leave
(bad)
ss
int
xchg
aas
cdq
les
sti
mov
js
adc
mov
xchg
or
or
sbb
pop
xchg
add
mov
mov
in
stos
cli
xchg
mov
or
sti
lods
lock
mov
daa
ds
and
jl
pop
sub
xor
sbb
jne
cdq
xor
mov
sbb
pop
dec
sbb
adc
pand
mov
pop
sub
pfrcpit2
clc
addr16
mov
mov
sub
out
ds
xor
xchg
arpl
sbb
call
sbb
xor
jbe
xlat
addr16
test
fsubr
add
mov
mov
add
xor
movs
mov
adc
dec
dec
cmp
or
mov
mov
scas
bound
cmp
jmp
ret
jmp
add
xor
int3
adc
cmc
and
push
(bad)
popf
or
hlt
lahf
adc
adc
pop
fnsave
popf
adc
add
xor
outs
(bad)
mov
cwde
data16
jmp
stos
aas
je
jns
data16
stc
out
xor
mov
fldenv
cmps
daa
stos
xchg
jne
pushf
push
das
mov
(bad)
addr16
or
sub
in
(bad)
jmp
fsub
add
in
fwait
clc
add
push
mov
pop
xor
call
jns
jl
mov
sub
pushf
sti
inc
inc
lods
(bad)
nop
xchg
test
cmps
shl
push
outs
je
jnp
in
bnd
jb
std
lds
add
mov
mov
outs
adc
lods
and
push
movs
xchg
xlat
sbb
cmp
fwait
pop
adc
mov
dec
xchg
or
pop
and
push
mov
jae
mov
leave
imul
jo
nop
cmp
xchg
push
out
call
mov
test
sbb
cli
jne
aam
dec
ins
pop
xchg
idiv
fidiv
aad
xchg
pop
jnp
nop
mov
cmp
mov
cmps
xor
cs
iret
aas
xchg
mov
call
dec
je
mov
in
in
lea
sbb
test
repz
les
add
xchg
jle
das
adc
jle
cmp
pop
int
addr16
jnp
(bad)
sbb
add
sar
or
je
ins
imul
xor
sahf
les
adc
fisub
data16
jnp
aam
mov
fld
adc
cld
cmp
mov
or
ret
imul
inc
pop
cmp
mov
fadd
stos
sub
xor
mov
push
ss
or
aam
inc
ficomp
frstor
add
in
xor
(bad)
mov
ins
aad
adc
xor
push
shl
sub
loope
sar
out
push
and
mov
sti
and
(bad)
adc
sar
jg
mov
sbb
lds
(bad)
mov
shr
fdiv
push
jno
aam
xor
aad
fdiv
retfw
call
push
dec
add
out
bound
jmp
push
and
pushf
outs
xor
mov
sbb
fdivr
sub
fwait
xchg
push
sub
mov
xchg
fsub
sub
xchg
xor
retf
or
pop
inc
xchg
nop
and
dec
jp
test
jbe
outs
sub
jl
mov
nop
add
pop
stc
stos
and
mov
in
sbb
iret
sub
adc
mov
mov
mov
pop
push
mov
mov
sbb
sahf
or
addr16
stos
pop
aaa
bound
add
jne
and
ins
mov
add
xchg
stos
mov
pop
pop
cmp
rol
inc
xor
repz
mov
addr16
xchg
(bad)
and
(bad)
(bad)
ret
stos
iret
mov
sar
jnp
fbld
cld
mov
fnstenv
loop
mov
in
push
dec
add
xchg
ja
xchg
and
add
in
cmp
mov
pusha
into
out
mov
mov
addr16
jb
mov
test
stc
jb
retf
loopne
enter
mov
dec
inc
(bad)
push
cmp
lahf
inc
(bad)
cwde
jo
push
mov
movs
pop
inc
mov
shl
hlt
jb
lock
add
scas
mov
jp
mov
sub
sbb
mov
call
and
or
mov
lds
fist
(bad)
(bad)
sbb
stos
pushf
xor
sub
inc
xchg
or
dec
test
or
inc
fsubr
ins
push
sar
xor
fsubr
jle
xlat
shl
xor
push
mov
imul
lock
mov
lock
mov
xchg
repnz
daa
fwait
repz
mov
dec
shl
xor
jo
pop
inc
mov
cmc
inc
ficom
jnp
aas
loop
jns
into
lods
mov
lods
mov
fistp
mov
xor
call
mov
ins
push
xchg
pop
mov
jne
or
cmp
int
cdq
out
loope
inc
jl
jle
sub
movs
cmp
or
ins
shl
imul
and
push
dec
retf
test
outs
test
div
out
mov
push
(bad)
ror
retf
mov
(bad)
(bad)
cmovl
sbb
add
or
icebp
aad
repz
ret
fwait
popa
les
test
ja
or
cwde
fnstsw
ins
test
cld
add
push
rol
into
or
adc
repz
ss
pop
addr16
cmp
sbb
movs
mov
cmc
adc
std
fisttp
in
(bad)
leave
xchg
pusha
stos
outs
cmp
jnp
out
nop
out
xor
fcom
inc
sub
sbb
cs
adc
test
loop
mov
fist
ss
arpl
mov
(bad)
loopne
cld
rcl
pop
les
mov
push
jnp
lods
in
lar
dec
das
inc
das
pop
pop
jae
repz
ret
(bad)
xchg
std
cmp
add
scas
ins
sar
fs
movs
test
or
fild
(bad)
jge
jae
shl
sbb
adc
inc
adc
mov
(bad)
fild
bound
inc
popa
and
fwait
xchg
jl
movs
imul
outs
sti
dec
repz
mov
ins
pop
in
cmps
in
cmps
mov
dec
pop
retf
pop
pop
push
out
arpl
and
in
das
aad
mov
xchg
popa
cmp
test
sahf
stc
lods
pop
or
mov
clflush
jbe
out
aaa
ja
cld
rol
mov
mov
or
fmul
scas
shl
or
adc
xor
pop
xor
fcomp
aaa
sti
gs
mov
pop
fimul
cli
(bad)
fmul
mov
xchg
in
imul
xor
push
sub
pop
int3
pop
fwait
add
pop
jp
gs
cmp
std
mov
push
sbb
cmps
int
pop
hlt
fwait
mov
push
in
adc
jbe
ret
mov
cs
hlt
ds
out
pop
xchg
cli
in
mov
icebp
retf
mov
int
movs
inc
mov
jle
adc
pop
cmp
mov
imul
(bad)
jnp
out
cld
scas
xor
pop
jg
lahf
xor
xchg
push
mov
jb
adc
xchg
jno
sbb
clc
popa
or
jbe
inc
jne
xor
stc
rcl
mov
nop
daa
pop
ret
mov
aaa
sar
xor
ins
dec
push
add
sahf
push
into
xchg
aas
sbb
mov
jecxz
cmp
mov
add
or
fiadd
mov
out
call
pop
jecxz
cmp
mov
pusha
test
ret
aad
pop
lds
dec
in
lods
inc
dec
dec
int
data16
(bad)
push
or
pop
push
loope
xor
stc
add
add
inc
add
or
inc
add
fxch
add
or
dec
cmp
outs
test
cmp
jl
xor
mov
in
cli
ins
pop
xchg
ds
idiv
ds
cwde
iret
imul
pop
repz
jnp
(bad)
jmp
or
mov
xor
jns
les
inc
xchg
mov
imul
pushf
or
jecxz
push
mov
mov
cli
hlt
loop
sbb
inc
mov
sbb
les
shl
test
(bad)
loopne
pop
or
adc
cdq
or
jne
mov
add
in
cmps
lock
and
pop
jmp
int3
push
(bad)
lahf
(bad)
iret
repz
push
xchg
pop
pop
pop
dec
push
mov
imul
cmps
pushf
in
push
xor
and
rcl
pusha
push
sub
ja
retf
cmp
push
xchg
rol
std
outs
xor
ins
aad
push
push
out
xor
and
sti
js
mov
adc
pop
retf
rcr
add
jg
xor
lods
cmp
or
inc
cmp
mov
xchg
mov
repnz
sub
sti
ret
out
inc
std
pop
(bad)
fadd
not
rcr
cwde
dec
icebp
mov
sbb
mul
(bad)
clc
push
xchg
pop
stos
cmp
sar
dec
popf
scas
fdivr
mov
fldcw
clc
(bad)
fidiv
pushf
pop
push
inc
inc
pop
imul
push
ror
sbb
xchg
mov
inc
scas
jnp
and
mov
xchg
js
ja
push
sub
xchg
jno
jmp
and
xor
and
or
or
lahf
dec
xlat
fldpi
mov
mov
movs
lahf
movs
push
or
push
call
inc
cmp
cs
sub
aam
or
adc
inc
mov
in
pop
push
add
addr16
xor
add
std
aad
jecxz
movs
and
pop
outs
cmps
outs
mov
int
or
xchg
push
mov
mov
shl
sbb
and
repz
pop
pop
popf
xor
push
in
movs
fmul
scas
call
xchg
sbb
push
mov
fimul
lods
shr
stos
adc
mov
out
cmp
mov
out
fstp
leave
pop
cmp
(bad)
jmp
imul
(bad)
sub
fst
push
data16
fsub
adc
dec
inc
push
lds
xchg
push
jbe
repz
clc
mov
mov
pop
push
jne
nop
mov
mov
fstp
mov
mov
int
or
cmp
and
mov
cdq
pop
ins
dec
(bad)
mov
repz
ja
shl
add
aad
gs
mov
cmp
pop
and
push
cmps
and
bound
movs
repnz
ins
mov
add
mov
push
popa
dec
cmc
jle
add
stos
scas
rep
or
or
adc
out
mov
inc
hlt
popa
ins
mov
mov
adc
sub
jne
jno
jo
xchg
push
mul
inc
fwait
int
jp
ins
pop
aad
and
aad
mov
outs
movs
push
out
sub
and
xor
in
shl
jecxz
das
in
cmp
mov
mov
shl
and
inc
cmps
cmp
mov
stos
sbb
daa
ins
popf
les
xor
cld
fdiv
jb
mov
push
dec
and
into
pusha
nop
fsubrp
out
rcl
shl
idiv
es
mov
cmp
stc
cmp
pop
or
test
fld
jne
daa
inc
inc
xchg
cmps
cmp
xor
(bad)
pop
xor
pop
call
jmp
mov
mov
add
mov
out
inc
adc
adc
sub
ret
fidiv
pop
retf
(bad)
pop
ret
inc
test
push
jae
mov
add
add
nop
std
fisubr
adc
mov
mov
mov
jmp
repz
jmp
std
js
inc
cwde
jae
push
or
pop
mov
retf
mov
cmp
clc
test
cmp
retf
div
inc
test
cmps
retf
retf
test
fsubp
inc
push
lock
inc
jns
test
in
rol
or
lods
xor
loop
or
data16
and
sbb
lods
jle
shr
(bad)
jp
shr
lea
adc
call
lock
ror
test
and
push
fild
inc
ds
dec
out
mov
jg
stc
cmps
xor
(bad)
ins
xchg
loop
mov
push
sub
jae
enter
jo
stos
mov
shr
addr16
movs
jb
pop
mov
sbb
or
sub
mov
pusha
addr16
dec
mov
xchg
jns
push
inc
popf
xor
retf
inc
push
mov
movs
or
(bad)
(bad)
add
jle
aam
xchg
dec
stc
nop
inc
das
test
add
mov
js
fadd
fdiv
(bad)
hlt
lods
ins
into
xchg
mov
mov
mov
fild
pop
mov
jae
rcr
or
pop
mov
push
dec
mov
lods
aas
mov
xchg
xor
cld
cli
mov
pop
sbb
xor
mov
mov
call
outs
mov
and
push
int3
push
dec
rcr
lock
and
pop
icebp
in
sbb
fwait
add
aad
(bad)
mov
lea
add
mov
cmp
sbb
out
mov
and
sub
imul
xchg
lods
(bad)
or
int
mov
adc
jmp
stos
jle
cmp
dec
in
ins
dec
aam
cmps
cmps
gs
sub
push
jns
(bad)
stos
test
sti
push
das
inc
mov
ret
nop
jns
sahf
aas
pop
lds
cmc
es
pop
aaa
(bad)
(bad)
pop
into
dec
add
dec
adc
xor
lock
jmp
aas
mov
jle
aaa
pop
jnp
aam
sub
lock
xchg
mov
sbb
or
mov
rcr
(bad)
popa
or
sti
jecxz
js
or
int3
mov
mov
push
call
mov
dec
xor
cmp
movs
popf
lds
mov
jl
iret
(bad)
add
test
xchg
cmp
out
mov
cmp
jl
cs
xor
jmp
aaa
xor
call
mov
je
je
arpl
mov
into
test
sbb
fmul
in
mov
push
(bad)
lahf
push
int
inc
mov
mov
popa
call
mov
test
(bad)
retf
mov
dec
sub
out
pminub
jle
je
or
add
push
xchg
scas
sbb
loop
jbe
push
out
or
dec
outs
aas
pusha
rcl
push
lock
or
rol
ss
cdq
or
push
and
es
sub
mov
push
es
mov
xchg
pushf
fsub
je
sbb
or
inc
push
mov
xchg
jmp
test
push
sti
lds
jmp
and
out
inc
dec
lds
ins
shl
out
pushf
in
fsubr
adc
out
jmp
(bad)
mov
dec
loopne
repz
push
jg
pop
and
cmp
out
lods
xor
jno
lea
mov
jecxz
xlat
out
jl
faddp
pop
outs
dec
adc
xchg
scas
das
mov
push
mov
push
sbb
imul
adc
rcl
jno
pop
cwde
movs
rol
inc
inc
das
sub
neg
hlt
sub
mov
xchg
sahf
fs
int3
sbb
push
test
push
mov
mov
sti
pop
stos
dec
push
mov
rcl
aam
test
inc
mov
pop
popa
cld
cdq
fdivp
out
les
cdq
popf
mov
clc
jmp
(bad)
pop
push
cs
rcr
(bad)
data16
xchg
jbe
jl
jge
into
mov
movs
neg
jae
cmp
ror
push
out
mov
jge
pusha
cmp
or
jne
dec
xchg
mov
dec
les
cmps
cmp
mov
mov
or
mov
outs
enter
stos
(bad)
mov
mov
pop
xor
dec
movs
xor
out
clc
dec
iret
and
xchg
fs
retf
movs
sub
and
jno
or
fstp
pop
into
fdivr
dec
add
loop
xchg
inc
ret
pusha
mov
enter
in
push
jnp
jo
adc
les
ja
(bad)
sub
xchg
dec
ret
add
stc
ins
jl
movs
xchg
movs
pop
(bad)
hlt
pop
int
mov
mov
pusha
fdivr
add
xlat
xchg
dec
pusha
xor
xchg
les
mov
xchg
in
retf
inc
mov
dec
jge
mov
jae
sbb
pop
arpl
add
push
push
pop
sar
(bad)
adc
add
adc
xor
ins
and
or
fisttp
sub
das
jne
outs
inc
out
and
mov
inc
in
shl
inc
cwde
test
add
and
push
sbb
push
dec
in
push
mov
mov
mov
sti
popa
inc
adc
sti
or
xchg
push
pop
pop
push
(bad)
push
xchg
mov
jmp
mov
xchg
xor
cdq
or
repz
jbe
imul
jo
and
out
xor
dec
ror
out
adc
xchg
sbb
fs
leave
(bad)
out
lea
xor
pop
iret
mov
aad
pop
cdq
push
push
in
push
in
in
in
mov
pushf
sahf
xchg
movs
(bad)
jmp
and
dec
jnp
sti
adc
xchg
in
bound
int3
xor
cwde
jne
pop
jge
mov
imul
jge
mov
fdiv
pop
jmp
inc
dec
sti
pop
jae
scas
scas
push
call
and
pop
mov
aas
jmp
push
lods
dec
aas
sub
es
xchg
data16
xchg
lea
mov
stos
pop
add
mov
mov
and
cmps
mov
ficom
push
mov
retf
mov
mov
lds
xlat
ja
push
mov
cmps
cmps
and
cmp
das
push
add
mov
jnp
mov
dec
xchg
mov
imul
test
mov
rol
in
popf
mov
and
lods
out
shl
push
sub
or
loop
sbb
scas
push
pop
jo
or
jmp
pop
(bad)
iret
arpl
shr
(bad)
aaa
jg
dec
xlat
ror
fmulp
and
fidivr
mov
jo
inc
stos
test
adc
jo
test
xchg
test
cmc
addr16
fnsave
hlt
mov
sbb
cmps
shl
mov
lock
imul
pop
xchg
retf
xchg
or
call
dec
aas
xchg
mov
inc
dec
movs
inc
ss
dec
lock
xor
and
mov
xchg
sahf
pop
jns
(bad)
(bad)
rol
jno
xchg
inc
(bad)
pop
dec
xchg
jl
stos
jg
xchg
xlat
call
mov
add
xor
push
cdq
jg
pop
xchg
push
test
fild
or
std
mov
std
es
popf
scas
arpl
cmp
scas
inc
adc
push
out
jne
ret
gs
xor
int3
xor
cmp
jnp
sbb
push
mov
loopne
dec
icebp
pop
jne
gs
sbb
shl
inc
push
retf
and
fnsave
push
cmp
dec
pop
test
ficomp
bound
mov
mov
gs
mov
adc
fwait
and
sbb
jge
int
fmul
cld
scas
mov
lahf
mov
scas
call
lods
or
aas
jp
mov
jne
dec
push
in
push
call
js
push
in
xchg
jo
push
push
dec
loop
popf
std
xchg
push
in
jg
jle
add
sahf
and
es
int
push
loopne
inc
xchg
inc
cmps
xor
mov
jns
dec
xchg
sbb
and
mov
out
test
fistp
in
fldcw
cmps
cmp
mov
not
dec
cmp
xor
mov
xor
movsx
push
out
xchg
cmp
sbb
push
fisub
push
dec
cmp
mov
(bad)
and
pop
aas
out
clc
push
in
and
ds
sub
pop
adc
add
adc
add
xchg
test
pusha
js
inc
adc
bound
xor
shr
mov
arpl
mov
pop
mov
push
or
push
xlat
into
fdivp
cs
in
cmp
repnz
jae
test
fmul
dec
in
pop
inc
cmp
aad
fidiv
xchg
mov
mov
es
pop
out
(bad)
dec
shr
popf
sub
xchg
sbb
fstp
pop
ror
fdivp
or
rcr
stc
addr16
aad
dec
cmp
mov
in
xchg
sub
das
mov
push
xchg
and
aaa
or
push
xchg
xrelease
in
mov
lds
mov
push
mov
push
cmp
mov
mov
fdivr
call
mov
jmp
add
xchg
rcl
cmp
xchg
les
test
jno
icebp
cmc
ret
xor
inc
out
arpl
scas
pop
arpl
sub
inc
dec
loop
xchg
(bad)
pop
pop
mov
push
jne
push
mov
lods
pop
mov
(bad)
xor
popa
xchg
repnz
mov
sub
push
mov
xor
sub
sub
mov
je
xor
inc
fcmovne
ja
jbe
push
test
and
cmc
push
cmps
pop
lea
sub
sub
jp
sti
test
hlt
cmp
pop
into
sub
movs
in
std
hlt
xchg
pop
cmp
jecxz
sub
jl
sbb
dec
jl
cs
xchg
mov
ins
push
cmp
push
and
scas
cmp
(bad)
cwde
push
fidivr
nop
pusha
std
loopne
xlat
ret
jge
icebp
and
jl
repnz
imul
xor
mov
mov
cs
xchg
out
test
mov
inc
xlat
pushf
pop
mov
clc
add
pop
loope
cld
loop
mov
mov
sbb
popf
inc
or
into
dec
or
mov
call
test
dec
pop
inc
sub
jne
adc
(bad)
bound
mul
xor
enter
mov
push
and
cdq
std
dec
xchg
mov
popf
je
sub
sbb
out
imul
in
int
cld
xchg
dec
imul
xchg
scas
ror
rcl
outs
ds
iret
leave
mov
jmp
aad
fdiv
pop
daa
push
cmp
mov
mov
push
jmp
bound
add
int3
xchg
pop
xchg
sub
sub
and
(bad)
cmps
sbb
das
ss
and
mov
jne
mov
das
inc
cwde
pop
sbb
mov
inc
sti
and
out
loopne
aaa
cmps
call
(bad)
ds
and
jno
lock
inc
clc
fimul
(bad)
shl
pusha
fs
test
jg
retf
sbb
xor
movs
jecxz
icebp
inc
cmps
mov
inc
mov
mov
mov
jo
lds
mov
or
sti
push
adc
push
jle
repz
add
mov
xor
mov
cmp
mov
xor
daa
adc
mov
dec
fcomp
jmp
sahf
pop
pop
lds
test
mov
jmp
push
jl
mov
jbe
sbb
ret
cmp
call
xchg
shr
mov
add
adc
and
inc
clc
sbb
rcr
(bad)
pop
sub
jmp
push
lods
push
pop
jle
das
stos
fnstsw
scas
les
or
mov
out
stc
push
xor
or
jl
push
sub
test
js
cmps
dec
leave
rol
and
inc
jne
sbb
popa
idiv
pop
dec
imul
or
cmp
and
jbe
ret
addr16
ds
add
aas
loopne
push
and
pop
sub
inc
ja
ds
sbb
xor
jnp
ror
shl
and
cld
jecxz
neg
push
xchg
ret
test
sbb
push
cmc
mov
rcr
icebp
xor
ins
inc
call
and
loop
push
cmp
add
(bad)
hlt
or
fstp
cmps
jo
(bad)
scas
jl
leave
push
xor
fadd
or
dec
test
aaa
add
mov
push
pop
(bad)
fcomp
xchg
aad
stos
in
xchg
out
mov
adc
pop
dec
scas
pusha
pop
jmp
add
(bad)
mov
ret
jge
ins
xor
xor
inc
test
xchg
pop
pop
mov
repz
and
popa
ret
out
and
lahf
mov
ret
or
rcl
cmp
sub
sub
dec
or
push
loope
js
dec
jnp
ds
adc
cmp
and
sar
mov
enter
arpl
outs
push
pop
and
repz
lahf
jg
out
lahf
cmp
stc
adc
iret
mov
fucomi
lods
dec
xchg
jl
and
mov
dec
outs
push
loope
push
(bad)
clc
push
push
mov
cmp
out
rol
mov
xchg
push
retf
mov
xchg
jecxz
movs
cwde
sar
lds
or
jbe
retf
cmp
xchg
imul
imul
sbb
loopne
jl
add
sbb
pusha
ins
addr16
jno
jns
nop
cmc
adc
je
cwde
fistp
loop
sbb
(bad)
out
not
mov
push
shr
jnp
dec
jmp
popfw
adc
inc
jp
ror
(bad)
jl
dec
cmps
dec
movs
arpl
mov
int
sti
inc
add
in
stc
(bad)
idiv
movs
add
pop
call
fst
ret
stc
cli
lock
retf
fistp
aaa
and
inc
ror
xor
(bad)
cmps
mov
push
aam
add
sahf
inc
mov
mov
je
push
or
sub
or
jl
adc
mov
cmc
call
jmp
cli
rcr
mov
stos
mov
(bad)
std
sbb
mov
imul
or
jle
pop
or
call
sbb
xor
mov
or
xor
push
ror
inc
call
repnz
ret
lock
push
popf
pop
xlat
loope
repnz
or
cdq
ret
hlt
adc
add
or
in
inc
ds
adc
or
call
adc
dec
stos
popf
pop
mov
pop
std
enter
cmp
jp
mov
jmp
cmp
std
cmp
sub
jmp
enter
in
push
mov
jno
add
cdq
cmp
mov
bnd
gs
cmps
xchg
loopne
fadd
pop
add
xchg
mov
movs
das
xchg
repnz
mov
pop
scas
inc
stc
(bad)
in
sub
cwde
pop
cmp
fimul
and
xchg
retf
fs
sbb
div
push
(bad)
xchg
mov
or
xchg
push
xor
sub
(bad)
out
out
jae
xor
mov
xor
dec
cmps
xchg
pusha
out
mov
pop
push
lea
sbb
shl
jecxz
add
jmp
mov
cdq
neg
mov
cdq
mov
test
retf
out
jns
and
lods
sbb
xchg
mov
popf
aad
jl
call
jmp
(bad)
movs
and
(bad)
jmp
js
mov
add
dec
jo
arpl
movs
out
or
mov
movs
sbb
pushf
outs
mov
and
inc
(bad)
add
(bad)
adc
mov
mov
arpl
ds
mov
push
int
ins
cld
jnp
retf
mov
and
call
sub
outs
nop
dec
mov
stos
mov
xlat
inc
jle
jne
aas
pushf
nop
das
outs
in
xchg
(bad)
xchg
mov
xchg
hlt
fistp
retf
js
and
add
cmp
mov
and
add
into
dec
adc
ds
retf
sub
into
push
mov
leave
outs
push
pop
mov
inc
rol
fcomip
jb
or
mov
sbb
mov
int
mov
jmp
or
xor
mov
jp
imul
mov
pop
das
and
out
mov
inc
mov
mov
pop
jl
(bad)
jbe
pop
bound
fbld
xchg
vpminub
adc
test
leave
sbb
mov
arpl
or
push
adc
adc
sahf
sub
imul
inc
repz
cmp
lahf
fldcw
push
icebp
scas
cmp
ja
ins
xor
inc
sbb
jb
jmp
sti
enter
scas
dec
into
adc
cmp
xchg
mov
ds
jb
jmp
test
fimul
pop
test
div
ins
call
fstp
add
mov
pop
push
mov
jns
ret
ficomp
int3
jecxz
mov
and
lahf
js
fisubr
cdq
ss
sbb
jbe
or
add
sahf
mov
mov
mov
mov
sub
fwait
call
push
jg
pusha
sbb
stos
or
adc
mov
jmp
sub
out
dec
stc
ss
sub
mov
mov
shl
js
add
(bad)
inc
cmps
pop
xor
push
cmp
jno
mov
das
mov
mov
js
loope
adc
nop
rol
(bad)
push
or
in
jae
pop
push
cmc
mov
loop
inc
or
sub
jge
xchg
jne
mov
push
pop
xor
in
mov
pop
jge
fld
add
jno
push
int3
add
cmp
xor
nop
arpl
inc
mov
push
cmp
stos
or
out
in
retf
xchg
jl
xor
js
dec
stos
aam
cli
xchg
adc
adc
mov
test
lea
test
pop
sub
jl
mov
jg
mov
jnp
lea
push
xadd
retf
mov
xor
sbb
mov
pop
into
aad
stos
(bad)
test
neg
push
cmp
pop
add
jnp
or
scas
jg
jg
mov
jae
pop
into
push
jp
jle
sbb
aam
aad
sahf
xchg
push
add
or
fst
imul
push
je
jl
jns
sub
enter
repz
sbb
push
adc
rol
ror
pmulhw
sub
mov
pop
push
out
cmps
sbb
out
mov
dec
sar
inc
movs
in
push
daa
push
(bad)
ds
sub
je
push
mov
data16
cmp
add
lods
rcr
xchg
push
sbb
popf
pop
xlat
pop
ds
ja
inc
sub
loop
jl
xchg
push
cmps
jns
ret
aad
jnp
les
inc
xchg
sub
or
lahf
mov
push
adc
popa
and
cld
imul
idiv
test
fsub
or
popa
(bad)
xor
push
aam
mov
rol
clc
pop
sub
stc
inc
int3
cmps
(bad)
in
push
mov
fdiv
les
adc
dec
xor
in
cmp
sbb
add
push
sbb
int3
ds
xor
and
ins
dec
xor
cli
fisubr
nop
push
ins
cmps
outs
mov
xchg
add
xchg
xor
sbb
xchg
test
cmps
sub
pop
in
rol
stos
xchg
clc
bound
or
movs
inc
xchg
adc
lods
adc
mov
lock
das
popa
cmp
(bad)
pop
xchg
aaa
hlt
xchg
pop
fsubr
mov
or
jle
loopne
cmc
and
rol
je
mov
cli
mov
sub
or
pop
adc
jne
and
int3
and
push
mov
arpl
mov
call
and
out
xchg
addr16
sbb
rol
push
adc
cmp
ja
stos
(bad)
enter
mov
stos
test
daa
jno
add
push
mov
dec
mov
xor
cmp
int3
or
xchg
and
add
mov
sbb
ss
adc
mov
add
push
clc
mov
and
clc
int3
out
movs
data16
pop
out
(bad)
(bad)
js
or
dec
addr16
inc
add
in
mov
gs
out
popf
ins
and
inc
mov
or
mov
pop
jmp
data16
push
aaa
nop
ins
adc
mov
inc
movs
aad
cmp
jbe
add
mov
mov
clc
push
loope
stc
adc
in
aad
pop
xchg
xchg
dec
lds
dec
ror
add
cmp
push
loop
addr16
push
lock
jp
sbb
xor
mov
neg
jl
push
outs
call
inc
push
jge
daa
xchg
jo
mov
cdq
gs
das
xor
mov
xor
dec
and
fsub
bound
rcl
ins
dec
jmp
sbb
and
movs
imul
pop
pop
sbb
ficomp
cmc
inc
cmps
int
inc
mov
lock
mov
pop
add
js
mov
jmp
mov
jecxz
idiv
inc
mov
dec
test
adc
outs
cmps
es
sahf
xchg
popf
mov
sub
addps
sti
jb
cmp
jns
jbe
dec
push
pusha
push
test
fimul
and
mov
pop
sub
sub
out
push
(bad)
retf
stos
fist
pusha
cmp
jmp
(bad)
xchg
sbb
cmp
adc
popf
sub
in
sbb
cwde
xchg
jle
je
push
mov
mov
fs
jmp
das
mov
and
mov
movs
imul
adc
or
sahf
movups
jle
xchg
gs
inc
sub
neg
call
ins
xchg
cmp
mov
nop
outs
sbb
retf
jge
sbb
fldcw
jmp
and
jge
dec
jne
ins
jmp
jp
dec
cmc
pushf
movs
aas
mov
add
mov
neg
xchg
jo
repnz
es
inc
mov
jecxz
or
imul
popf
and
dec
cmp
ins
cdq
or
mov
xchg
xchg
loop
inc
sbb
pop
push
and
test
xchg
(bad)
retf
xchg
pop
rcl
in
mov
cwde
pop
(bad)
and
cmp
push
ins
inc
cmp
fsubp
add
loopne
cmp
loop
pop
in
push
xchg
cmp
loopne
add
mov
cmp
dec
pop
pop
ds
mov
ins
stc
je
call
mov
push
clc
jge
ds
sbb
xor
jne
daa
xchg
jp
mov
or
retf
pop
adc
xchg
dec
jg
mov
mov
sbb
mul
dec
xor
mov
(bad)
ds
fistp
sub
mov
pop
out
xor
rcl
stc
aaa
jge
(bad)
clc
mov
int
in
sub
add
sbb
mov
mul
sbb
aaa
fsin
sub
cdq
xchg
cmp
adc
stos
retf
lahf
sbb
into
xchg
add
and
popf
in
mov
jecxz
mov
mov
movs
clc
rol
sbb
mov
sbb
loope
pushf
mov
into
xchg
out
test
in
xchg
xor
imul
loope
inc
mov
or
fwait
jns
ins
jns
loop
outs
and
sub
mov
mov
mov
mov
inc
sub
inc
sub
fbld
jmp
pop
fiadd
(bad)
mov
xchg
xchg
jns
and
test
ret
test
fisttp
(bad)
cli
and
inc
neg
push
inc
inc
iret
or
mov
packuswb
dec
rol
xor
(bad)
push
mov
push
rol
add
and
xor
jmp
imul
pop
fwait
dec
cmps
dec
jbe
cdq
mov
shl
inc
pop
daa
dec
imul
fsubr
adc
es
mov
int3
jnp
fiadd
aaa
cmc
test
xor
inc
loop
dec
mov
fwait
mov
cli
xor
or
retf
jg
dec
mov
and
and
mov
shr
fs
add
xor
inc
or
cmp
or
mov
cli
xor
sub
and
xor
shl
push
mov
jnp
out
or
xlat
call
out
fdiv
shl
inc
movs
fsub
mov
movs
adc
scas
and
pushf
jl
xor
push
jns
inc
sub
loopne
addr16
mov
xchg
ficom
sub
add
xor
add
test
icebp
mov
sbb
fwait
mov
in
imul
inc
jns
dec
mov
xchg
mov
call
and
ins
pop
(bad)
mov
mov
idiv
mov
mov
sub
inc
movs
dec
rcr
sbb
cli
push
retf
ja
(bad)
int
into
sub
pop
loop
(bad)
sub
movs
mov
sbb
bound
sbb
sar
cmp
push
scas
das
cmp
repz
mov
or
iret
xor
aaa
fnstsw
inc
inc
sbb
adc
jecxz
shl
lods
inc
push
adc
pop
and
movs
and
imul
ins
sub
lahf
aad
dec
fimul
jno
icebp
les
lods
jl
jle
push
dec
or
sti
push
cmp
test
cli
xchg
push
mov
rcl
jno
jecxz
or
pop
and
mov
outs
xor
xchg
add
fsub
mov
repz
cmp
or
inc
inc
xor
or
fistp
rcl
sub
fiadd
mov
test
jmp
ds
inc
adc
and
punpckhbw
and
loopne
sahf
adc
cld
push
cmp
xchg
cwde
pushf
jecxz
dec
mov
lock
sub
je
aam
imul
in
enter
int
fild
or
cdq
dec
xor
in
cs
sbb
sbb
mov
xchg
movs
in
push
mov
inc
out
adc
sbb
stos
mov
jle
mov
or
pop
out
fisttp
bound
pop
xchg
dec
xchg
popa
lahf
ror
cdq
cmp
dec
pop
inc
or
test
aaa
jns
lahf
out
mov
sbb
ret
xlat
fcomp
mov
or
jae
xchg
mov
mov
jmp
fadd
sub
(bad)
jbe
pop
add
sbb
pop
call
adc
push
and
movs
jbe
xchg
jns
mov
hlt
out
jns
push
xchg
in
jae
shl
mov
mov
xor
xor
(bad)
push
inc
js
sbb
cmp
xchg
dec
sbb
ss
neg
jns
rcl
inc
mov
es
aam
and
inc
xchg
push
loop
shl
inc
cmp
fistp
mov
outs
imul
sbb
shr
test
dec
fnsave
dec
je
xchg
mov
inc
push
add
pop
jno
lods
add
data16
xor
sub
(bad)
dec
mov
in
mov
push
(bad)
fbstp
jnp
mov
push
out
mov
or
dec
inc
pop
xchg
dec
adc
cmp
cmp
push
mul
or
jb
shl
dec
ja
inc
(bad)
icebp
cmp
lods
(bad)
nop
fmul
mov
pop
ins
not
or
jge
sar
(bad)
ficom
dec
mov
sbb
test
fs
scas
jns
shl
out
fwait
stos
in
dec
mov
jns
mov
add
arpl
sub
inc
add
je
mov
mov
cwde
sbb
mov
xchg
sub
add
cmp
mov
xlat
pop
pop
cmp
pop
xchg
mov
addr16
nop
lods
xchg
inc
or
test
fstp
ret
or
jno
cs
dec
sar
jns
cmp
pusha
data16
pusha
jnp
call
mov
sbb
out
fiadd
sub
mov
rcl
add
call
in
jge
stc
out
call
cmp
dec
dec
enter
enter
or
adc
test
fld
out
call
mov
add
ficomp
ins
mov
(bad)
loopne
movs
imul
ret
jecxz
cmps
push
int3
imul
jmp
cmp
pushf
sbb
lods
or
(bad)
mov
sub
fld
jno
test
sub
nop
fnstenv
aas
call
mov
push
test
adc
fcom
sahf
cmc
repnz
scas
xchg
xlat
pushf
xchg
mov
(bad)
push
inc
cmp
jae
cmp
push
cmps
ret
leave
adc
sbb
daa
lds
push
sub
mov
js
idiv
stc
push
adc
gs
mov
jae
out
mov
mov
dec
jge
lahf
push
xchg
xlat
xor
pop
mov
aam
mov
cmp
rol
push
sahf
mov
pop
int3
push
adc
outs
hlt
xchg
adc
loopne
mov
(bad)
push
mov
sub
cdq
into
fsubr
pop
lods
and
cld
jae
inc
(bad)
xchg
lea
jmp
jbe
mov
scas
or
push
ins
das
sub
mov
fmul
mov
jle
test
into
imul
dec
sbb
mov
stos
or
push
cwde
addr16
dec
mov
push
cmp
pop
or
mov
sbb
adc
div
push
stc
les
fwait
xchg
mov
aas
dec
fist
jmp
pop
jbe
imul
dec
lock
mov
xor
pop
ret
jbe
out
sub
mov
mul
sub
pop
lock
(bad)
fisttp
and
int3
jnp
lahf
push
aad
scas
jno
cmp
inc
and
cmps
lahf
fisttp
retf
inc
stos
fwait
outs
jne
inc
pop
test
push
jge
xchg
pop
clc
jo
(bad)
cdq
xlat
test
into
xor
xor
xchg
push
sub
fadd
sub
jecxz
pop
mov
and
inc
jo
add
aad
jl
jg
sbb
fist
call
add
out
add
in
movs
inc
mov
fadd
or
fild
pop
jp
sbb
pop
dec
int3
jno
iret
(bad)
fucom
jmp
ret
push
arpl
or
in
inc
or
int3
push
jb
out
cs
or
test
lea
fmul
out
mov
cmp
mov
xor
pop
pop
stos
or
leave
ffreep
rcl
arpl
addr16
les
push
fs
xchg
lock
outs
cmp
mov
lock
lahf
and
ja
fldenv
mov
out
push
adc
mov
xor
test
clc
test
movs
cmp
sar
(bad)
fsub
sbb
mov
sub
retf
test
cwde
dec
retf
int
aaa
push
mov
test
add
imul
jb
mov
mov
push
xor
sbb
ds
sub
into
sbb
retf
inc
idiv
and
sbb
js
jnp
stos
jnp
xchg
mov
push
clc
mov
mov
sbb
mov
xor
loope
or
cdq
shl
out
shl
mov
pop
sbb
cdq
cli
or
ss
mov
xchg
inc
fcom
push
imul
push
push
mov
pop
sub
and
xchg
fbstp
mov
in
cmp
inc
adc
test
call
je
(bad)
push
mov
mov
xor
cld
popa
(bad)
cmps
pop
call
fidiv
lods
pop
stos
outs
adc
pop
xor
int
mov
(bad)
jmp
in
pop
ss
xchg
cld
dec
sub
bnd
pop
dec
imul
cdq
or
iret
in
jp
sub
jp
xchg
jb
das
leave
adc
mov
xor
mov
jno
rol
dec
ins
imul
jg
mov
imul
fld
adc
and
cli
cld
sbb
and
push
and
adc
sub
fwait
ret
adc
xor
popf
das
dec
and
pop
push
fild
cli
call
dec
mov
bound
lahf
sbb
data16
and
das
stc
mov
imul
and
xor
mov
imul
aam
inc
inc
inc
sbb
imul
cs
cmp
lods
(bad)
loopne
or
je
inc
xor
call
cmp
add
inc
je
aaa
xchg
mov
mov
sub
leave
call
rcr
and
xchg
daa
aaa
mov
pop
xchg
xor
shl
pop
test
cmp
inc
sbb
sahf
jno
imul
retf
das
(bad)
cs
xchg
movs
cmp
imul
and
sbb
pushf
ficomp
inc
mov
jp
test
not
outs
jae
jge
jbe
cld
int
mov
add
ds
punpckldq
sub
mov
fisubr
pop
mov
pop
adc
xor
sbb
dec
push
pop
inc
popf
call
and
pushf
xlat
stc
cdq
jp
iret
mov
sar
sbb
cmp
out
sub
dec
add
adc
loope
mov
int
hlt
dec
push
cmps
sbb
pop
cmc
ins
sub
fptan
stc
ficom
out
and
sub
movs
sub
pushf
test
out
in
sti
mov
mov
mov
movs
add
rcr
mov
test
retf
and
rcl
shr
add
push
lds
pop
mov
or
sub
inc
scas
dec
mov
sti
xor
cdq
and
adc
cmp
mov
mov
mov
cmp
inc
adc
xchg
mov
and
cs
js
jg
leave
jmp
call
xchg
mov
std
jmp
sub
adc
gs
aad
out
mov
dec
xchg
push
dec
jnp
fnstsw
add
dec
int3
shr
pop
dec
push
addr16
cwde
push
ja
js
cmp
shl
sub
fs
dec
dec
push
push
mov
inc
stc
and
xor
(bad)
or
xchg
fnsave
test
and
hlt
idiv
push
ins
enter
cmc
sbb
dec
jnp
std
imul
fcom
in
jae
sahf
test
jp
cmp
in
mov
sahf
stc
fs
dec
dec
xchg
retf
rcr
add
sar
add
sub
in
pop
out
(bad)
or
dec
stc
sahf
dec
pop
das
push
sub
and
out
repz
jge
add
inc
push
or
xchg
push
push
aad
stos
outs
aam
dec
mov
jle
into
xchg
push
push
jmp
jno
pop
inc
int
fucomi
push
mov
dec
push
int
pop
mov
movs
into
lahf
pushf
pop
(bad)
xchg
ret
stos
xlat
cs
andps
fdiv
sbb
mov
sbb
add
jecxz
out
cwde
pop
test
or
adc
push
outs
nop
inc
push
stc
or
outs
jbe
sti
shr
xchg
push
mov
push
hlt
cmp
sbb
jecxz
dec
inc
mov
cmp
inc
rcl
test
pop
dec
retf
imul
(bad)
dec
es
stc
jbe
mov
sub
xor
cmc
push
mov
xor
mov
push
push
ficom
cmp
jp
or
aam
mov
pop
pop
dec
pop
xchg
push
mov
scas
push
stos
clc
in
ds
dec
or
ret
and
inc
or
ret
xor
and
hlt
pop
outs
adc
adc
shr
pop
or
dec
out
xchg
jbe
xchg
(bad)
ret
cmp
nop
bound
rol
bound
test
inc
rol
cmp
mov
jl
outs
sub
in
cdq
lds
sbb
mov
cmp
sbb
rol
mov
popf
jp
pop
or
mov
pop
jo
and
call
(bad)
clc
pop
fiadd
sub
repz
ret
dec
inc
(bad)
aad
std
and
mov
pop
scas
nop
xor
(bad)
mov
cmp
dec
(bad)
jmp
adc
enter
add
loope
and
(bad)
lods
enter
mov
and
mov
lea
imul
stc
cmp
imul
dec
mov
leave
jp
or
mov
pop
xor
lods
pop
mov
aam
mov
push
in
sbb
sahf
imul
(bad)
out
dec
mov
sahf
or
inc
loope
enter
inc
sub
ficom
dec
stc
sub
sub
imul
jo
push
or
mov
pop
adc
mov
mov
push
push
imul
push
rcr
repnz
inc
ret
mov
jl
int3
mul
mov
jno
sahf
(bad)
cmp
mov
pop
inc
shl
add
mov
(bad)
push
pop
les
mov
outs
clc
xchg
push
and
xchg
ds
inc
push
or
loope
jl
daa
sti
retf
arpl
xor
ds
rcr
adc
in
out
jmp
mov
hlt
jae
jmp
push
mov
test
aaa
xchg
sbb
push
jecxz
cwde
es
and
inc
add
and
stos
in
push
popa
iret
jg
hlt
mov
adc
fwait
popf
dec
inc
mov
test
cld
xor
shr
lahf
out
test
xchg
mov
mov
sub
inc
push
aas
inc
xor
pop
sub
pop
or
mov
ins
mov
dec
jne
jae
sbb
mov
mov
imul
outs
ret
fadd
repz
repnz
sar
sbb
mov
jge
in
mov
mov
mov
sbb
jne
scas
and
mov
pop
mov
jo
fcmovu
outs
push
aaa
push
in
xor
xor
std
(bad)
sbb
test
mov
cs
aaa
pop
mov
xchg
adc
rol
andps
data16
push
mov
xchg
scas
into
loope
jns
cmp
inc
pusha
cmps
iret
scas
(bad)
adc
repz
daa
sbb
sub
data16
addr16
stos
fld
fsub
xchg
pop
add
bound
and
imul
or
test
jmp
or
pusha
pop
pop
mov
dec
push
jne
int3
sub
or
popf
aad
mov
push
xchg
xchg
jge
or
jl
repnz
xchg
daa
mov
ja
les
test
jmp
dec
into
xor
stc
in
adc
sub
mov
cwde
and
mov
adc
xor
mov
loope
call
or
cmp
sahf
inc
jmp
mov
jae
xor
sbb
push
ja
scas
mov
popf
cmp
stos
dec
adc
xchg
add
xchg
fldl2e
push
sub
shr
xchg
bound
scas
pusha
shr
call
retf
leave
mov
jo
cmp
push
clc
dec
xchg
xchg
jecxz
stc
dec
and
jno
ficomp
fisubr
outs
repz
sbb
fsub
pop
push
and
jg
arpl
inc
jo
mov
scas
cmp
pop
mov
jno
pop
sub
or
and
rcr
push
cmp
mov
or
in
jecxz
lods
(bad)
dec
push
rcl
mov
mov
daa
sbb
push
mov
and
sar
mov
scas
jb
mov
inc
jg
dec
loopne
jp
dec
es
lahf
cmp
pop
cmp
cmp
pop
cmp
pushf
lods
(bad)
adc
(bad)
lods
stos
push
dec
ss
dec
and
pop
(bad)
ret
into
mov
and
xchg
push
call
push
or
sbb
in
ror
(bad)
out
mov
cwde
fnstsw
stos
jo
aaa
xchg
leave
sbb
fild
adc
push
cli
cld
dec
xchg
repnz
scas
sbb
mov
stos
retf
inc
cli
mov
stos
xchg
(bad)
cmps
aad
add
sbb
dec
mov
pop
cli
xchg
adc
or
mov
xchg
xor
sub
repz
arpl
das
mov
dec
cmp
inc
sar
xor
pushf
daa
lahf
jbe
lock
mov
repnz
mov
fucomi
mov
xchg
out
xchg
jle
fwait
dec
ds
aaa
in
mov
fneni(8087
inc
retf
fdiv
sbb
sbb
xchg
dec
or
clc
retf
mov
or
jle
call
leave
cmp
xor
xlat
push
mov
xor
and
aaa
enter
psubq
les
das
mov
pusha
or
cli
or
(bad)
clc
push
jmp
or
sub
jle
mov
add
test
sub
lahf
(bad)
ins
xchg
mov
cmp
js
jb
sub
cli
in
movs
sub
retf
cmp
xchg
jle
sub
dec
fsubr
mov
lahf
xchg
stc
cmp
in
(bad)
sub
ret
inc
mov
repnz
ror
push
cli
pslld
add
(bad)
sub
push
aam
adc
jecxz
mov
push
cdq
(bad)
jl
sub
sbb
stc
adc
jl
into
cmp
inc
stc
jnp
pop
in
xlat
pop
or
push
call
je
cmp
sahf
and
mov
pop
and
ins
enter
xor
dec
mov
jl
repz
dec
stos
or
out
in
push
test
xchg
mov
inc
popa
sbb
enter
jno
xchg
and
call
xchg
out
es
or
not
mov
div
lds
ja
and
pop
mov
pushf
shr
mov
jae
ficomp
ret
push
add
sbb
mov
aad
xchg
rol
inc
adc
or
push
add
or
cs
mov
test
xor
mov
hlt
jo
sbb
mov
adc
loopne
push
mov
xchg
xchg
scas
test
clc
jae
imul
add
inc
aas
mov
hlt
cmp
add
sbb
adc
push
xor
adc
pop
adc
loop
jl
jmp
push
or
fisubr
fs
inc
xor
scas
into
dec
scas
scas
push
adc
mov
mov
fsubr
cmc
(bad)
sbb
test
inc
addr16
pop
push
mov
ins
daa
cli
ins
repz
cmp
xor
jo
iret
in
or
mov
jmp
icebp
stos
xchg
addr16
stos
sub
ja
mov
pop
outs
ret
inc
(bad)
daa
aad
sbb
cmp
dec
fdiv
jge
cdq
or
stos
and
push
mov
pop
dec
mov
rol
enter
xor
or
retf
test
push
fist
pop
mov
xor
ror
pushf
or
inc
jp
push
imul
push
idiv
cdq
jne
pop
lods
icebp
std
cmps
or
jno
and
sar
int
lea
inc
dec
ret
pop
inc
ret
(bad)
in
fsubr
sub
add
cmps
push
dec
les
mov
leave
cmp
adc
in
dec
or
nop
js
cmp
inc
outs
inc
add
sbb
add
mov
mov
jg
sub
in
jp
mov
repz
xchg
ds
cmp
xor
movs
cwde
cmp
inc
xlat
sub
iret
push
pop
dec
(bad)
sub
push
mov
jbe
jl
xchg
jmp
xchg
outs
imul
mov
aaa
xor
rcl
ds
jns
pop
test
add
push
mov
add
mov
test
sbb
mov
add
fcomp
js
adc
sub
jmp
mov
cmps
push
aas
mov
xor
sahf
imul
push
loope
std
sub
mov
xchg
cmp
mov
retf
sub
and
mov
test
sbb
movs
mov
xchg
sub
stos
ds
(bad)
or
shr
(bad)
ss
xchg
inc
mov
cmc
psubw
xor
(bad)
jmp
mov
xor
out
iret
sub
les
jmp
jmp
xchg
adc
(bad)
jmp
jmp
xchg
fwait
clc
in
movs
sub
out
xor
mov
dec
push
push
dec
std
stc
push
cmp
inc
(bad)
mov
icebp
movs
xlat
jne
push
sti
sar
popw
adc
call
jmp
inc
push
cmps
std
dec
test
arpl
nop
mov
call
dec
aam
dec
fadd
or
imul
loopne
shr
rol
ja
jl
pop
nop
cs
mov
inc
jg
idiv
inc
mov
jb
push
dec
mov
popa
jecxz
mov
cdq
mov
inc
adc
xchg
mov
dec
pop
xchg
(bad)
jae
mov
xchg
pop
cmp
pop
sub
outs
and
ret
fsub
dec
mov
mov
dec
dec
jnp
sub
test
jp
or
mov
cmps
sti
mov
arpl
enter
mov
sbb
jg
add
test
fs
ss
sub
inc
mov
sbb
frstor
sub
mov
fimul
mov
hlt
jge
ja
pop
or
cld
add
push
adc
and
das
mov
and
jmp
push
sar
mov
adc
xor
clc
mov
xor
outs
imul
je
inc
aad
dec
mov
add
js
ja
adc
cli
daa
mov
lock
(bad)
(bad)
mov
into
inc
sti
xchg
xchg
xor
fcomp
loop
mov
sbb
xor
dec
test
pop
sub
xchg
fcmovbe
fucom
lds
call
sbb
sub
lock
div
not
int
js
mov
jne
mov
mov
or
jns
xchg
mov
xchg
repnz
retf
ret
jp
rcr
popf
hlt
adc
and
rcr
fdivr
je
or
jmp
xchg
xor
cmp
push
cmp
iret
sub
pop
jmp
add
scas
in
cli
cmp
sub
mov
or
fsub
cmp
sbb
popa
cmp
clc
int3
xor
xor
mov
sub
je
pop
pop
pop
add
inc
add
mov
sar
ret
add
mov
in
inc
lods
mov
not
xor
es
mov
adc
pusha
das
in
dec
push
push
fmul
loopne
test
fisttp
jl
scas
mov
mov
inc
fisub
imul
rcl
or
popa
shl
xor
out
jmp
cmp
mov
sahf
js
inc
pop
rol
jg
push
jecxz
sub
mov
push
mov
adc
int
or
int3
mov
not
in
stos
int3
sub
jbe
push
jge
(bad)
adc
jle
ins
call
pop
jl
mov
inc
aas
jno
dec
(bad)
adc
test
or
icebp
and
pop
rcl
mov
mov
pop
out
pop
mov
sub
dec
mov
ficomp
clc
push
jge
shl
mov
inc
test
xor
push
pusha
dec
xchg
push
mov
rol
mov
push
inc
icebp
movs
or
call
push
(bad)
in
dec
adc
push
inc
xchg
cmc
push
call
std
gs
push
or
add
cmp
jns
ss
pusha
in
jle
or
out
jne
(bad)
das
(bad)
xchg
mov
loope
xchg
gs
jbe
sbb
ins
retf
jns
adc
mov
ret
repz
add
or
xchg
adc
and
fstp
dec
sbb
addr16
mov
(bad)
mov
dec
movs
outs
push
rol
out
sbb
dec
pop
scas
sub
jbe
(bad)
xchg
movs
fst
push
mov
and
push
xchg
and
or
pusha
xchg
leave
or
push
mov
cwde
loop
or
jge
(bad)
fsub
jae
cs
xchg
push
and
gs
mov
add
jmp
loope
retf
js
add
pushf
cwde
fwait
lds
push
icebp
and
or
popf
cvtps2pi
test
pop
add
lea
dec
repz
mov
sbb
pop
fidiv
pop
mov
xor
cs
mov
test
xchg
aaa
dec
js
(bad)
push
js
mov
inc
mov
mov
and
push
add
push
inc
xchg
lods
stc
call
mov
test
or
in
push
xlat
and
pop
or
xor
and
inc
pop
popa
and
mov
push
fs
jl
push
xlat
mov
shl
cwde
sahf
into
repnz
ins
test
fcmove
inc
fisttp
imul
cmp
sub
hlt
pop
pop
mov
pop
or
or
fdivr
cmp
mov
mov
sbb
xor
xchg
mov
mov
jmp
stos
add
lahf
aam
addr16
movs
pop
push
sbb
jl
in
jecxz
fnstcw
cmp
push
jnp
add
outs
inc
lock
int3
add
pop
mov
movs
mov
and
call
rcr
repz
rcl
in
and
inc
fidivr
mov
popa
cmp
icebp
adc
jb
lss
cmp
mov
imul
imul
arpl
add
rol
push
xor
fwait
add
and
mov
mov
and
addr16
gs
xor
push
mov
sub
hlt
adc
adc
ja
test
dec
(bad)
ret
(bad)
jmp
cli
inc
ret
in
or
es
repnz
or
ret
xor
add
inc
js
jo
nop
jo
or
dec
sbb
cmp
cmp
jnp
cmp
stos
ss
inc
push
mov
mov
push
push
xor
out
imul
data16
push
or
jl
daa
fwait
test
sub
mov
xchg
js
and
mov
xor
inc
cmp
xor
es
push
push
enter
pop
add
outs
jb
psubusb
arpl
dec
dec
cmp
sbb
jmp
jmp
(bad)
aad
or
imul
mov
xlat
push
adc
call
add
pop
mov
fist
mov
push
fs
fdivr
ds
add
mul
or
push
popa
sbb
xchg
add
jp
mov
mov
popf
push
sbb
xor
dec
add
jl
jge
in
cmp
data16
lock
ficom
push
push
cwde
push
inc
out
jg
dec
mov
inc
jnp
push
dec
pushf
add
mov
mov
mov
jae
lea
jbe
sbb
sub
push
int3
jmp
push
ins
jno
in
ja
lock
data16
add
stos
sub
mov
sub
call
adc
arpl
push
scas
mov
scas
call
mov
pop
stos
in
mov
cmp
pushw
sub
jmp
les
(bad)
cmp
fcomp
daa
out
inc
mov
movs
fbstp
add
es
cmps
jb
or
das
fld
or
push
cmp
dec
pop
fdivr
into
idiv
mov
mov
push
xor
jno
push
push
je
pop
hlt
(bad)
xchg
lea
fsub
xor
stc
push
ss
mov
fcomp
div
jg
dec
jb
mov
push
pop
dec
fstp
fdivrp
addr16
int
call
cmp
mov
sub
and
sbb
jle
int
jns
inc
add
int3
sub
and
cmp
test
adc
js
push
cmp
xor
hlt
fdiv
fistp
sub
xchg
pusha
xchg
pop
jge
pop
jmp
rol
push
jge
je
repz
call
shl
push
lods
inc
inc
mov
and
jle
loopne
cmp
mov
(bad)
adc
inc
call
(bad)
pushf
fsub
pushf
dec
je
ret
test
popf
mov
cli
aas
and
jb
mov
and
std
jmp
movs
dec
ds
cld
pop
cmps
xchg
sbb
movs
xchg
pop
pop
add
pop
data16
mov
out
mov
xor
cmps
sub
ret
add
xor
mov
add
cld
cdq
and
fwait
daa
xchg
dec
(bad)
jecxz
push
xchg
rcr
clc
mov
mov
clc
test
das
pop
dec
fadd
outs
pop
jecxz
(bad)
loopne
push
imul
es
pop
(bad)
xor
xor
test
das
xchg
xchg
jmp
sub
sub
stos
aas
push
aam
and
dec
fisubr
lods
fadd
ins
into
inc
xlat
nop
sbb
sub
ins
jno
mov
inc
mov
call
mov
rcr
sahf
and
inc
(bad)
lahf
test
popf
pop
inc
out
mov
out
cmps
sar
pop
mov
mov
cmp
pop
popa
es
mov
or
mov
mov
push
mov
jmp
(bad)
in
sti
pop
test
hlt
nop
ret
or
inc
xchg
shr
jns
inc
push
pop
mov
xor
push
push
push
mov
mov
jmp
popa
cmp
rcl
mov
stos
dec
jbe
pusha
pop
pusha
daa
adc
cmp
fdiv
sbb
rcl
adc
fdivp
in
(bad)
ja
pushf
ja
dec
fwait
daa
ins
lock
and
inc
or
mov
jl
fwait
ret
(bad)
or
pop
ins
xor
test
mov
in
pop
mov
push
ins
(bad)
out
loopne
pop
mov
mov
out
and
test
scas
add
shr
dec
xchg
cmp
or
(bad)
outs
(bad)
loopne
ins
sbb
add
adc
pushf
cli
ss
jo
push
pop
ins
sbb
mov
cs
fiadd
movs
loopne
xchg
jle
aam
pop
in
jmp
and
sbb
dec
retf
inc
adc
into
mov
pop
inc
jnp
push
sti
cs
xlat
fstp
fidivr
jmp
inc
mov
jge
pusha
inc
pusha
(bad)
mov
add
dec
mov
shl
ret
cdq
repz
jmp
bound
push
icebp
lods
mov
jmp
pop
xor
je
cmp
mov
dec
popa
test
rol
retf
(bad)
not
test
jmp
adc
outs
add
popf
mov
ins
mov
dec
leave
xor
fstp
mov
pop
idiv
push
dec
dec
fs
sbb
cmps
push
push
jb
cmp
sub
ffreep
stos
jmp
mov
xchg
movs
push
add
mov
leave
push
in
rcr
pop
repnz
leave
xchg
daa
inc
mov
jmp
dec
loop
cs
push
aam
xchg
popf
iret
and
inc
int3
inc
neg
pop
sbb
adc
push
dec
inc
addr16
cdq
test
in
mov
sbb
cmps
adc
popa
test
xchg
addr16
retf
push
xchg
shl
xchg
push
mov
push
or
ficom
arpl
and
ds
jnp
add
cmp
adc
adc
fist
into
cmp
rcl
not
std
ret
push
jg
cmp
sbb
xchg
mov
pop
cdq
rol
xchg
fnstenv
jg
adc
cmp
rcr
ja
cmc
push
mov
jg
enter
add
dec
test
and
ret
loop
xchg
push
add
add
mov
iret
xchg
jb
xchg
push
push
xor
nop
mov
in
fmul
and
(bad)
pop
movs
mov
addr16
lea
test
mov
jle
in
push
inc
cmc
stos
cwde
loop
out
push
call
mov
sbb
push
jge
repz
xor
mov
jnp
cmc
shr
cmp
pop
cli
mov
jne
push
jb
pop
aaa
daa
jecxz
lods
add
inc
add
mov
enter
sbb
push
sbb
xchg
jno
add
xor
add
xchg
in
fwait
int
js
ds
mov
ja
add
pop
adc
shl
sub
xchg
mov
jnp
xchg
push
mov
ja
jp
fwait
mov
or
shl
test
jmp
sub
pop
xor
movs
dec
mov
js
dec
inc
shr
inc
jp
out
fwait
out
mov
xchg
mov
(bad)
pop
push
mov
ret
shr
arpl
and
add
in
adc
aad
scas
and
push
enter
fiadd
outs
push
into
mov
pop
mov
dec
sbb
mov
or
call
mov
dec
outs
dec
jecxz
adc
sub
push
repz
push
add
out
test
(bad)
push
xor
jo
fidiv
and
mov
xchg
sti
xchg
mov
inc
add
mov
push
lods
(bad)
pop
js
dec
cmp
lea
movs
and
stc
mov
outs
mov
sub
dec
sub
xor
cmps
fstp
lods
adc
call
adc
rcl
das
jb
or
ficomp
mov
nop
mov
fistp
cld
fcomp
imul
fidivr
inc
sbb
jmp
cmp
push
sub
es
sub
test
call
cdq
lock
js
xchg
inc
or
leave
sub
mov
mov
mov
lods
inc
add
out
shr
in
retf
push
or
cmp
jmp
jb
add
(bad)
cmc
pop
ror
sbb
jnp
(bad)
cmp
pop
add
out
sahf
(bad)
das
mov
and
push
stc
push
fwait
psrlw
outs
daa
xor
sub
sub
pushf
adc
mov
xchg
xor
in
fwait
inc
xchg
test
jl
add
sahf
sub
nop
jae
call
enter
jmp
or
and
push
lods
dec
xor
pushf
or
xlat
test
adc
pop
pop
mov
ja
mov
addr16
push
cmp
lock
(bad)
aas
aaa
(bad)
sbb
inc
std
out
ins
mov
push
leave
dec
mov
sub
mov
in
pop
and
pop
sub
sub
test
out
add
pop
dec
mov
scas
jbe
fadd
and
dec
xor
ins
xchg
fbstp
fisubr
dec
fs
or
add
xchg
xchg
xchg
jb
push
out
cs
mov
sub
out
add
mov
ret
mov
out
push
cli
pop
xor
lods
and
inc
xchg
out
mov
(bad)
std
sbb
inc
jecxz
sub
lahf
out
sbb
(bad)
jmp
pop
hlt
test
addr16
push
repnz
fdivr
jecxz
jmp
add
inc
and
lods
jmp
ins
pushf
ret
nop
les
js
jns
push
cmps
cli
fdivr
mov
or
pop
shr
xlat
test
cld
loopne
lock
clc
push
adc
push
hlt
adc
test
sub
inc
mov
xor
movs
add
fwait
or
push
mov
cdq
popf
addr16
jge
cmp
mov
mov
ja
xchg
xor
cmps
inc
sbb
inc
outs
ins
aas
jmp
sub
dec
rcr
lods
icebp
lods
adc
int3
lea
push
dec
aas
fist
pop
mov
(bad)
aaa
or
jns
hlt
mov
imul
imul
cdq
out
cmp
push
imul
push
add
lods
repnz
(bad)
das
or
xor
adc
es
mov
enter
cmp
test
pop
mov
and
cmp
mov
(bad)
imul
cmps
fcmovu
mov
sub
(bad)
jle
fcmovnb
inc
dec
push
push
and
fisttp
dec
les
arpl
scas
inc
cli
cs
sub
pop
xchg
sbb
sbb
pop
sbb
les
sub
adc
sbb
int3
fisttp
in
jmp
cmps
lahf
jmp
dec
jmp
xchg
pop
daa
jbe
jp
hlt
jle
sbb
nop
jns
popa
xchg
subps
neg
xchg
adc
adc
dec
cmp
and
sub
ds
mov
sub
cmp
mov
ret
outs
pop
std
mov
pop
xchg
mov
out
sub
ret
outs
or
xor
call
dec
sbb
std
xchg
adc
pop
retf
adc
ins
push
rcr
mov
xor
xchg
cs
mov
inc
or
xor
jmp
xor
int
jne
push
sbb
stc
xor
push
xor
push
push
sub
jae
lea
jo
sub
sub
push
add
dec
push
or
sti
ficomp
cdq
sbb
mov
cmps
push
mov
cmps
movs
inc
pop
(bad)
sahf
mov
mov
test
lods
xor
pushf
imul
sub
shl
jb
xchg
mov
pop
fst
mov
call
test
adc
enter
push
pusha
xor
cmc
xchg
frstor
test
outs
je
pushf
xor
inc
push
xor
ret
out
loopne
mov
loopne
push
sub
call
mov
sub
movs
cmovb
xor
mov
pushf
movs
add
mov
loop
in
inc
int3
in
shl
rol
inc
mov
stos
mov
inc
dec
mov
retf
jmp
mov
dec
outs
adc
sahf
scas
gs
ins
pop
fimul
xor
cmp
mov
shl
add
add
aas
out
jns
mov
scas
mov
(bad)
xor
and
jl
stos
nop
fiadd
push
stc
mov
dec
sub
pop
data16
sbb
mov
ins
lahf
inc
ss
(bad)
retf
mov
inc
imul
stos
add
movs
pop
out
ds
sahf
mov
adc
mov
inc
adc
mov
(bad)
pop
movs
cmp
je
cmps
and
sti
int
inc
test
out
pushf
in
mov
push
ss
mov
fdiv
push
out
xor
cmp
xchg
or
cmp
cmp
out
lock
ss
sbb
fild
inc
call
jg
stos
test
arpl
xor
jge
retf
mov
call
dec
jno
xchg
data16
xor
mul
push
xor
sub
imul
and
xlat
jnp
jecxz
inc
xor
xor
cmp
in
mov
cmps
jmp
mov
enter
mov
aam
pop
icebp
shl
aas
pop
sti
std
or
cmp
movs
jle
mov
movs
data16
mov
call
stc
or
out
into
mov
cmps
dec
jl
bound
outs
mov
scas
and
add
fld
mov
xchg
sub
mov
mov
lods
cmps
inc
mov
test
inc
mov
test
movs
jns
add
push
push
dec
sub
dec
mov
enter
inc
mov
push
mov
sar
(bad)
retf
sbb
repnz
outs
std
aaa
jae
add
outs
pop
add
add
mov
repz
mov
ret
xchg
in
hlt
push
cmps
xchg
fcom
out
call
adc
dec
out
fdivr
sar
inc
arpl
out
push
cmp
jno
fldcw
xchg
fwait
dec
jno
xchg
pop
pop
inc
cdq
cmps
pop
rcl
sub
(bad)
dec
adc
mov
movs
push
push
jnp
sbb
retf
or
xchg
xchg
mov
jg
inc
jne
or
jbe
repz
cld
jae
or
mov
xchg
push
nop
scas
ins
mov
xor
jne
retf
push
clc
stos
stos
scas
das
pop
in
bound
add
rcl
mov
adc
inc
sub
xchg
fcomp
inc
add
add
leave
les
cmp
mov
loope
cli
mov
xlat
or
mov
push
jo
in
aas
in
xor
xor
idiv
sahf
mov
loopne
dec
cli
inc
scas
sub
int
dec
stc
jns
jae
shl
repz
ja
enter
scas
ds
xor
xlat
add
mov
pop
out
aad
jnp
int3
out
fstp
or
in
iret
inc
pop
es
popf
scas
loop
jnp
sahf
adc
cld
xor
add
xchg
pop
popa
iret
adc
cmp
je
inc
fisub
adc
fnstsw
adc
cli
out
push
pop
add
mov
jl
cmp
or
or
inc
cdq
mov
cmps
mov
(bad)
aam
js
fsub
ins
inc
pop
dec
dec
(bad)
push
clc
xor
or
fwait
xchg
arpl
sbb
adc
pop
cmp
cmp
cmp
push
mov
jne
xchg
out
sub
movs
mov
dec
repnz
inc
xor
lahf
popa
mov
xchg
test
cmp
jp
xor
inc
and
xchg
shl
push
and
lock
stos
fidiv
jmp
jbe
sub
mov
retf
mov
jne
es
(bad)
rcl
mov
imul
inc
jno
dec
aaa
push
mov
xchg
inc
xor
rol
mov
shl
les
aad
popa
and
mov
nop
add
inc
adc
xlat
or
xchg
sbb
mov
mov
cmp
or
int
sbb
lock
neg
data16
fxtract
je
sbb
jge
push
xchg
push
clc
ret
xchg
bnd
nop
call
call
pusha
popf
in
loop
mov
dec
sub
inc
rcr
xchg
mov
mov
ins
idiv
pop
or
ss
sahf
lock
inc
mul
stos
mov
in
in
(bad)
jmp
and
movs
adc
sub
add
mov
push
mov
xor
pop
mov
iret
pop
and
rol
xor
or
jmp
cwde
(bad)
or
add
and
sbb
or
xchg
mov
outs
cmps
push
sub
cmp
cmp
dec
and
popf
fcom
jle
push
add
xchg
push
jbe
inc
jmp
xor
shl
nop
ror
(bad)
jp
adc
(bad)
jg
fld
dec
addr16
out
inc
das
mov
pop
cmp
sub
fst
cmp
icebp
setbe
mov
stos
sbb
cmp
scas
out
retf
xchg
aad
push
inc
mov
jns
jmp
fld
dec
(bad)
pop
mov
dec
pop
pop
sbb
jno
or
stc
into
pop
call
mov
push
jnp
jo
pop
adc
scas
sahf
sub
in
mov
movs
(bad)
mov
lods
cmps
dec
mov
loope
cli
push
dec
iret
adc
scas
add
xchg
jo
and
xor
push
rcl
adc
call
test
imul
adc
je
rcr
call
and
dec
jne
in
push
fucomp
push
jae
and
jae
cmps
inc
push
and
into
test
outs
add
popf
test
and
cmp
pop
mov
dec
nop
pop
cwde
lods
es
jmp
addr16
push
loopne
or
outs
aaa
add
mov
fimul
inc
stos
pop
and
and
adc
lea
sub
xor
xor
mov
sbb
jb
add
stos
imul
xchg
aas
mov
jb
sbb
test
stc
mov
push
dec
jg
dec
ret
retf
adc
lahf
jne
scas
mov
lods
jl
hlt
(bad)
stos
int3
test
pop
inc
scas
aam
fadd
mov
(bad)
push
outs
sti
xchg
fwait
shl
and
mov
mov
fimul
fimul
cli
mov
or
push
inc
iret
inc
push
shr
sti
cmp
in
outs
sub
pop
inc
loopne
fldcw
ds
add
fist
out
dec
push
gs
push
sahf
and
movs
pop
pusha
aad
or
loop
jmp
xchg
xchg
ja
fistp
js
or
bound
mov
pusha
jns
mov
movs
mov
cmc
xor
out
iret
push
mov
pop
ja
lods
or
sti
lods
add
mov
cli
mov
push
out
xlat
daa
or
aas
add
adc
sti
sbb
and
lods
aaa
add
push
cmp
cmps
clc
push
jae
movs
xlat
adc
mov
push
and
mov
cmp
into
sar
test
inc
into
jmp
mov
jmp
lds
and
sbb
pop
mov
or
push
mov
test
push
or
mov
lds
lods
lods
cmp
jae
or
scas
repnz
ret
popf
imul
push
in
jnp
ins
mov
sub
loope
cmps
in
xlat
jecxz
cld
add
movs
sbb
mov
adc
fimul
pop
aas
push
mov
jmp
(bad)
enter
(bad)
stc
sub
sbb
fs
and
aad
stos
leave
ss
xor
jo
cmp
outs
(bad)
out
lea
adc
cmp
lahf
push
loope
(bad)
bsr
cmc
stc
xchg
mov
(bad)
rcr
mov
xchg
stc
mov
rcl
mov
add
mov
mov
sub
je
xchg
pop
xchg
mov
fs
or
pop
push
push
cld
xor
sahf
stos
rol
fs
pop
jae
mov
call
(bad)
pop
stc
jp
mov
rcr
push
(bad)
jl
in
mov
cmpxchg
pop
mov
dec
enter
retf
scas
in
pop
icebp
or
int
ret
std
xchg
push
icebp
daa
es
sub
dec
push
lea
mov
js
test
add
or
xchg
jno
jecxz
sahf
push
sub
pusha
inc
cmps
dec
jns
or
mov
mov
inc
test
xor
mov
fst
dec
pop
add
int3
mov
or
push
mov
popf
push
mov
jne
mov
dec
cmps
in
sti
into
adc
ret
push
add
lahf
(bad)
push
xor
xchg
cs
mov
pushf
sub
in
aam
int
sub
jbe
jle
or
or
aam
(bad)
xchg
rcr
call
mov
adc
add
lods
inc
(bad)
sahf
mov
mov
pop
(bad)
jmp
shr
jnp
inc
cwde
outs
out
mov
fs
jmp
nop
xchg
idiv
sti
jo
imul
lea
retf
popa
sbb
ins
stc
lods
ficom
cs
in
aad
cmp
retf
sub
push
push
jae
imul
sahf
xor
jmp
add
xchg
stos
out
sbb
xchg
xchg
pop
dec
jae
add
sub
shl
sub
loopne
pop
push
ret
mov
scas
loopne
or
inc
bound
push
sahf
dec
scas
pop
sbb
js
jmp
or
pop
aas
in
mov
pop
inc
fstp
push
fild
ja
sti
dec
inc
leave
mov
pop
mov
sub
lea
mov
push
in
cmps
mov
into
mov
sbb
das
inc
sbb
push
jl
cli
mov
cmp
mov
movs
clc
jne
clc
xchg
rcr
or
mov
cmp
or
out
mov
pop
cli
jbe
fmul
and
fist
cmp
or
gs
xchg
pop
pop
sub
fincstp
adc
je
ror
jecxz
fs
lods
cmp
sub
lods
jp
add
add
xchg
adc
(bad)
xor
push
imul
xor
mov
repz
or
rcr
out
mov
pop
dec
jae
push
xor
cmp
cmp
mov
sub
in
rcr
pop
xchg
mov
dec
dec
bnd
mov
in
fadd
pop
jns
inc
imul
(bad)
cli
ds
jae
cmp
inc
ins
into
ss
icebp
mov
mov
loopne
push
and
lds
xlat
pop
fucomip
jns
arpl
pop
out
adc
fist
cli
bnd
loope
xchg
mov
in
enter
retf
ftst
and
pop
movs
or
adc
dec
mov
sti
push
ja
mov
gs
jl
hlt
xor
call
xlat
adc
in
xchg
lods
push
adc
aad
dec
out
or
push
lea
ror
test
jmp
cmc
lds
push
push
repnz
inc
call
add
int
jns
push
and
push
rcr
and
imul
shl
int
stos
mov
inc
push
pop
mov
mov
pop
inc
pop
sbb
adc
neg
and
sub
call
ret
into
sbb
add
(bad)
adc
ror
inc
or
(bad)
popa
jne
sbb
and
push
and
and
fimul
mov
mov
mov
push
lahf
cdq
adc
lea
pop
lock
inc
cld
jbe
cmp
dec
popa
fwait
test
jmp
out
cmp
mov
xor
xchg
rol
push
ins
mov
fsub
ins
dec
jecxz
int
aam
push
ror
daa
push
pop
scas
mov
dec
or
in
sbb
sbb
add
push
push
cmp
mov
scas
sbb
mov
retf
jo
ins
js
pop
pop
and
inc
inc
iret
xchg
jmp
jmp
pop
xor
ja
sbb
stos
jb
mov
fwait
ins
int3
and
mov
(bad)
fst
lock
mov
xor
jno
xchg
dec
mov
push
aas
out
xchg
add
jmp
jno
mov
add
lds
ins
push
mov
and
or
inc
out
inc
and
jl
test
sbb
add
xor
xor
inc
retf
dec
movs
adc
loope
mov
cs
xchg
out
fisubr
daa
add
sbb
jge
cdq
repnz
les
dec
jae
dec
test
les
xchg
jecxz
jge
popf
xor
in
add
xchg
mov
pop
jle
or
cwde
xor
dec
mul
cdq
sub
(bad)
cmovbe
fldcw
scas
mov
add
loopne
fsub
mov
or
jmp
dec
sub
xor
sub
mov
or
mov
mov
mov
jmp
outs
test
ret
and
push
or
inc
push
dec
and
and
iret
loope
pop
outs
inc
out
pop
mov
arpl
stos
jbe
mov
fcomp
fisttp
cdq
mov
call
mov
je
ss
(bad)
mov
pop
not
es
bound
movs
outs
push
adc
xor
mov
fidivr
mov
or
mov
call
mov
or
dec
jae
(bad)
fldenv
lods
jns
retf
sbb
js
push
fs
add
push
test
nop
outs
out
fcom
(bad)
cli
inc
movaps
sti
bound
fcmovb
jg
das
sub
mov
xchg
sub
xchg
bound
xor
bound
stos
xchg
ret
push
jge
adc
int
pop
jno
ficom
ins
jmp
mov
imul
and
adc
sbb
and
stc
mov
sub
test
jecxz
jl
ins
dec
mov
mov
clc
cdq
mov
push
pop
lds
and
pushf
xor
std
jp
je
mov
xor
lods
ficomp
mov
push
pusha
jmp
dec
or
push
sar
mov
pop
mov
adc
xchg
sub
stos
ret
mov
dec
sbb
mov
in
jle
xchg
leave
sbb
dec
dec
cli
cmp
pop
je
loopne
mov
xchg
cmp
adc
iret
shl
jnp
js
stos
ins
test
inc
pop
jp
adc
imul
mov
out
into
xchg
adc
aad
mov
enter
push
sti
ins
dec
xchg
sub
mov
mov
(bad)
jnp
js
add
test
mul
sub
xor
add
sub
xor
xchg
inc
dec
aaa
into
xchg
les
add
or
push
pop
rol
int3
push
inc
outs
cmp
and
sbb
push
xchg
add
sbb
ja
push
aad
in
ss
jo
mov
call
sbb
jmp
xor
mov
mov
push
adc
lock
mov
jns
push
cmc
sub
push
repnz
sub
hlt
aaa
clc
push
pop
jne
xlat
mov
mov
sub
push
dec
seto
mov
daa
addr16
cs
inc
int3
mov
push
jl
std
add
adc
into
jns
fld
pusha
and
mov
mov
mov
sub
mov
in
dec
or
xor
or
jb
sbb
jb
mov
add
sub
pop
xor
pop
call
clc
jno
adc
adc
dec
ins
(bad)
mov
mov
push
push
femms
das
lods
fs
stos
mov
inc
sbb
repnz
ss
inc
sub
xlat
test
xor
mov
fadd
(bad)
dec
ins
int
or
lods
mov
ins
fld
stc
pop
loope
push
pop
sbb
int
(bad)
lods
ror
out
retf
retf
das
add
jmp
loope
daa
out
gs
stos
mov
movs
daa
cmps
push
div
es
stos
mov
and
pop
scas
mov
xor
push
xor
and
(bad)
cmp
js
push
call
and
mov
xchg
add
test
and
jg
xor
xor
lds
repnz
and
inc
aam
jmp
and
fld
dec
cmc
bts
sar
mov
rol
movs
mov
sub
or
cmps
into
fstp
adc
sub
dec
out
cmp
xchg
pop
adc
mov
popa
sbb
pop
mov
jmp
dec
nop
mov
jecxz
cld
pop
nop
inc
sahf
sub
pusha
cmp
add
push
inc
mov
or
ficomp
aaa
inc
bswap
xchg
loopne
xchg
jnp
xchg
mov
cmps
lods
mul
iret
mov
fs
mov
xor
ret
std
es
inc
jmp
cdq
js
out
dec
inc
xlat
retf
into
xor
(bad)
aas
int
sbb
xchg
test
add
not
dec
pop
jl
les
test
imul
push
mov
movs
clc
push
add
mov
pop
sub
iret
out
imul
js
call
xor
stos
pop
in
rol
add
pushf
test
or
enter
or
lds
adc
scas
jns
fdiv
jmp
sbb
ds
jae
idiv
push
sub
ja
and
sbb
inc
scas
sbb
adc
jecxz
add
xchg
test
sub
mov
push
stos
sar
jne
js
xchg
sbb
ins
(bad)
hlt
out
lods
aaa
jb
out
dec
retf
mov
adc
push
jo
and
pop
popa
mov
lds
sbb
jge
sub
pop
repz
dec
or
mov
jmp
or
dec
jb
dec
push
ds
xor
jp
je
add
cmc
jecxz
mov
stos
xor
pop
pushf
rcr
pop
sbb
mov
adc
adc
xor
mov
(bad)
sti
(bad)
push
into
mov
loopne
jne
fs
cmp
test
retf
(bad)
inc
(bad)
adc
mov
push
loop
add
xchg
out
mov
push
bound
and
je
arpl
push
and
sti
push
gs
in
sub
pop
dec
xor
dec
mov
clc
push
scas
mov
lea
mov
pop
or
sbb
push
cmp
cmp
ja
sahf
mov
mov
(bad)
pop
dec
stos
je
outs
mov
aad
cwde
idiv
or
mov
mov
fwait
xchg
xor
ss
push
mov
fnstsw
aad
outs
and
fsub
fs
imul
jmp
add
ins
and
enter
adc
aas
data16
mov
cmp
add
mov
sbb
call
(bad)
pop
daa
adc
push
cmc
movs
and
mov
mov
cmps
jge
mov
cmp
ret
pop
(bad)
cli
sub
jmp
repnz
enter
mov
stc
test
sbb
sub
loop
fst
outs
push
out
movs
xchg
js
outs
fbstp
xchg
hlt
cli
(bad)
dec
dec
fbstp
in
mov
xor
push
mov
div
push
jge
mov
inc
jl
jmp
sbb
add
sbb
adc
mov
xchg
stos
jae
add
or
les
imul
imul
aaa
adc
mov
nop
mov
jp
div
in
cmp
fs
popa
xor
daa
addr16
mov
pop
xor
packssdw
adc
cmp
dec
adc
test
sbb
xor
mov
inc
and
out
mov
jns
repnz
loopne
jae
or
mov
lock
lods
mov
cmp
bound
sub
sbb
xor
cwde
push
inc
addr16
call
and
or
and
movs
and
dec
sub
stos
xor
adc
ffreep
fs
mov
xlat
js
pop
movs
iret
mov
pop
xchg
in
add
je
aad
pop
add
aad
pop
mov
mov
cmp
pop
inc
mov
pop
(bad)
sub
or
and
js
xlat
adc
test
mov
jae
and
jae
push
je
push
movs
add
add
les
cmp
aas
jo
outs
ret
pop
mov
push
iretw
jp
or
xchg
leave
les
dec
mov
mul
jmp
out
hlt
cmp
or
ds
sub
add
adc
xchg
jg
mov
mov
and
ret
push
sub
test
adc
mov
pop
outs
fcomp
inc
addr16
out
push
fsubp
pop
cmc
ins
push
push
ror
arpl
repz
inc
mov
lahf
xchg
clc
es
push
pop
xor
add
mov
sub
in
jbe
mov
call
cmc
adc
sub
jmp
ret
jne
shl
and
mov
shl
mov
cmps
mov
xor
xchg
inc
out
shl
js
fld
out
push
pop
ret
add
daa
jmp
lock
in
push
or
jno
into
and
mov
mov
pop
ins
fldenv
dec
and
mov
xchg
jbe
inc
imul
shl
inc
and
bnd
dec
push
adc
std
cmps
pop
pusha
scas
cmps
push
cs
add
pop
jge
data16
mov
movs
jbe
pop
(bad)
je
jl
adc
pop
scas
sub
push
fwait
mov
fimul
addr16
mov
aaa
jne
imul
add
nop
test
sar
jae
mov
outs
std
xor
movs
gs
popa
(bad)
mov
loopne
inc
fs
jge
sbb
(bad)
push
shl
fisttp
and
inc
push
addr16
mov
sub
jl
adc
or
xchg
pop
fisttp
adc
(bad)
shl
aas
or
fs
jae
pop
pop
jae
stos
mov
sub
pusha
lods
mov
add
xchg
into
mov
addr16
(bad)
mov
push
adc
or
ror
loop
daa
cli
xor
mov
lds
outs
outs
mov
xchg
fmulp
js
push
adc
or
sahf
mov
arpl
retf
call
std
xchg
sahf
push
rol
ins
lea
xor
push
(bad)
cmp
mov
push
cmp
jge
xor
jne
pop
jo
imul
push
jbe
jnp
add
and
mov
pop
pop
icebp
das
push
shl
int3
call
or
loopne
imul
out
sahf
std
cwde
cmp
cmp
mov
xchg
add
mov
xor
cmp
xchg
add
jno
mov
(bad)
(bad)
repnz
mov
fild
jns
aas
mov
jle
outs
rcr
ror
mov
push
push
mov
xchg
push
xor
nop
jae
out
jae
stc
jnp
pop
cmc
icebp
ins
pop
inc
push
(bad)
fst
adc
out
mov
clc
sbb
push
call
push
mov
fstp
pop
ror
mov
mov
adc
(bad)
sar
fsub
mov
dec
in
xor
jne
imul
mov
pop
outs
aas
sbb
popa
push
stos
pop
popa
stos
mov
lea
mov
cli
mov
cli
imul
bound
xor
xchg
test
std
faddp
in
fnstsw
dec
ds
pcmpgtw
(bad)
imul
xchg
call
retf
sub
adc
movs
fsub
inc
push
and
enter
xchg
cld
inc
and
mov
push
daa
dec
scas
or
or
mov
mov
je
mov
stc
stc
fsubr
imul
jp
pop
into
sub
iret
mov
mov
or
push
xchg
fld
cmp
out
or
aam
mov
in
sahf
fcom
(bad)
popa
xchg
xlat
mov
mov
sbb
mov
stos
or
ja
inc
mov
pop
sar
cs
dec
stos
icebp
nop
jb
cmp
popa
inc
sbb
add
das
movs
cld
sar
and
call
mov
je
iret
push
clc
popf
test
mov
fldcw
mov
call
jb
xor
xchg
enter
dec
movs
call
or
fidiv
pop
(bad)
push
xor
aad
push
(bad)
sbb
sbb
repz
xchg
mov
test
mov
test
cs
sti
outs
imul
int
popa
sar
mov
or
jns
sub
add
movs
nop
pop
fdiv
and
and
cli
test
adc
sbb
sbb
add
retf
jge
push
jne
adc
ja
inc
fisub
cwde
jmp
xchg
lea
pop
movs
sbb
popf
and
push
lahf
mov
push
cwde
lods
test
push
(bad)
push
out
xchg
aad
lahf
sub
popa
pop
sub
xor
mov
jg
adc
(bad)
aaa
or
pop
jns
cs
icebp
xchg
mov
inc
idiv
sbb
fst
adc
push
(bad)
mov
mov
mov
mov
arpl
out
clc
jmp
push
mov
and
push
or
sub
jl
and
lea
adc
jno
lods
add
mov
push
sbb
mov
cmp
test
push
out
sbb
jmp
sbb
xor
mov
or
rcl
jns
lds
cmp
inc
dec
jne
push
ds
or
test
lea
jb
test
jae
nop
dec
fistp
cmp
ret
inc
and
out
loop
sub
pop
or
or
ins
pushf
(bad)
scas
stos
inc
ins
mov
push
and
push
jg
nop
mov
aaa
movs
sbb
sub
dec
pop
js
jle
mov
xchg
mov
test
add
mov
xchg
push
pushf
mov
lahf
cmp
mov
add
retf
gs
push
sub
sub
repz
xchg
fs
call
dec
add
ss
int
inc
mov
lods
popa
dec
dec
(bad)
fcom
icebp
adc
mov
jo
lahf
and
jge
cmps
retf
sub
aam
test
js
gs
dec
enter
push
xor
std
and
xor
jne
mov
fsub
sahf
idiv
add
fwait
sub
loope
dec
test
dec
push
out
add
hlt
xchg
jle
cmps
inc
(bad)
cmps
cs
xlat
xchg
stc
push
out
scas
ja
shr
loop
inc
sub
push
push
mov
test
add
or
push
ds
lock
jns
fs
and
adc
retf
cmp
xor
ret
jmp
ss
sbb
xchg
jecxz
out
dec
xchg
cmc
lds
and
mov
pushf
not
adc
retf
add
jmp
push
in
push
mov
inc
sahf
pop
cwde
(bad)
cmp
stos
fiadd
jb
mov
aas
and
xchg
pop
lods
scas
adc
scas
inc
jae
jmp
addr16
sahf
inc
mov
pop
outs
dec
sbb
cmp
cmc
clc
retf
frstpm(287
nop
xchg
scas
add
mov
push
or
daa
fnsave
cli
dec
jmp
int
mov
xchg
outs
int3
test
(bad)
jno
ins
pop
adc
or
(bad)
std
adc
inc
add
cmps
or
leave
sub
movs
(bad)
xchg
out
push
int3
jg
pop
nop
scas
jne
in
mul
lock
out
fcmovnb
pop
das
push
bound
and
and
aam
sti
dec
xchg
mov
scas
inc
push
push
or
cmc
fstp
fnstenv
mov
xor
mov
popf
push
ja
daa
push
xchg
fadd
int3
mov
pop
jns
push
pusha
add
clc
fadd
(bad)
mov
mov
jbe
push
test
xchg
popf
sahf
sbb
jo
iret
inc
movs
pop
aam
xchg
mov
or
js
aad
pop
jecxz
pusha
dec
int3
and
sbb
jmp
pop
sbb
sbb
xchg
ficom
dec
mov
daa
stc
mul
xor
inc
ret
gs
stos
std
push
fcmovnbe
mov
pusha
movs
(bad)
ror
loope
push
cmp
cmp
jns
mov
push
hlt
stos
ds
in
cs
ficom
pop
cld
movs
sub
in
daa
rcl
adc
imul
lahf
in
lahf
(bad)
xchg
test
dec
add
jae
(bad)
jmp
mov
xchg
sub
in
cmp
xor
mov
jecxz
cwde
adc
popa
ret
mov
hlt
push
push
mov
inc
loopne
out
push
push
xor
dec
ss
mov
movs
loopne
movs
imul
jne
push
sub
repnz
sbb
jg
(bad)
outs
mov
jo
cmps
adc
jb
pop
std
dec
cmp
fs
or
sbb
ror
jnp
or
fdivr
cmc
shr
addr16
pop
jns
lahf
(bad)
push
push
addr16
mov
push
out
pop
and
or
das
jg
mov
push
push
sub
fistp
leave
adc
es
cwde
sahf
add
adc
loope
cmp
mov
ror
xor
jnp
xchg
mov
lahf
jg
cwde
mov
xlat
dec
jo
xchg
mov
cmps
std
mov
and
sub
push
mov
xchg
shl
test
jmp
sbb
icebp
push
jecxz
xor
sar
xor
jmp
test
push
lods
scas
out
cld
xchg
pop
mov
fwait
rol
jecxz
and
jae
and
xchg
xor
cmp
loopne
mov
and
(bad)
pop
mov
sti
movs
cmps
loop
push
mov
aas
or
rcr
out
mov
xchg
push
and
(bad)
jmp
daa
imul
pusha
imul
sbb
lock
mov
push
in
and
fdivr
push
jae
add
cld
pop
jns
dec
fidiv
xor
jbe
mov
ja
mov
clc
out
jnp
out
stc
mov
sub
in
aas
sub
scas
and
lods
cmp
xchg
inc
hlt
ret
sbb
inc
jne
cmp
and
aad
and
xchg
push
mov
movs
loope
fidivr
in
push
repz
out
psrlq
adc
ins
dec
push
pop
arpl
cdq
fld
inc
hlt
push
dec
outs
dec
cmp
lods
mov
xchg
sahf
push
add
jmp
pusha
mov
loopne
es
sbb
pop
cli
int
retf
sbb
out
jb
cmp
mov
add
push
in
outs
jno
sub
dec
pop
loop
mov
lea
stos
leave
lea
push
mov
cdq
add
bound
sti
rol
mov
lock
and
fstp
int
test
cmp
mov
adc
jo
or
neg
xchg
shr
inc
xor
and
cmp
outs
inc
das
xchg
retfw
mov
rcl
ja
mov
fisub
mov
fisubr
mov
rol
cli
cmc
icebp
jp
pop
mov
push
cmc
scas
shl
fs
icebp
data16
xor
xchg
xor
std
scas
pop
mov
fcomp
cmp
add
jl
fdiv
into
xor
lea
sbb
xchg
in
aam
repnz
je
mov
int3
mov
adc
daa
cmp
push
lds
push
xchg
mov
adc
ret
xor
jp
mov
jne
cmp
inc
inc
dec
test
inc
imul
ds
stc
mov
sti
es
jecxz
dec
in
in
divps
lds
test
push
and
popa
cmp
mov
and
dec
int
leave
(bad)
retf
sub
aam
mov
dec
mov
pop
sub
sub
into
(bad)
cwde
arpl
test
jns
inc
test
fs
jno
retf
icebp
scas
loop
and
bound
add
mov
xchg
stos
xchg
add
dec
stos
in
sti
push
mov
movs
and
xor
loope
sti
jg
shl
add
out
sar
test
push
add
push
js
inc
aam
shr
pushf
cmp
mov
xor
outs
or
or
repz
test
xor
adc
mov
popf
jne
cmp
pop
mov
shr
xor
mov
push
iret
adc
je
and
mov
mov
jmp
gs
mov
fwait
jle
inc
xchg
jnp
jnp
leave
sbb
adc
mov
iret
mov
sahf
nop
dec
nop
in
xor
cmp
sbb
adc
xlat
xor
sbb
xor
jno
in
jl
and
push
pop
stos
jae
fisub
xchg
aam
nop
jp
and
and
xchg
fistp
jmp
mov
push
jno
popa
lods
pop
stc
(bad)
xchg
cld
xlat
dec
jecxz
(bad)
loopne
cmp
sbb
(bad)
(bad)
loopne
ins
lods
pop
xchg
pop
(bad)
jmp
outs
fldcw
dec
sbb
dec
jecxz
pop
lods
dec
jne
fcomp
movs
or
ret
cs
les
add
fs
mov
cmp
in
sar
setge
dec
stc
adc
out
fst
test
jb
sub
cmp
add
ret
cs
xor
js
mov
sub
sub
loope
and
xlat
sub
ss
adc
int3
daa
sar
jbe
les
cli
add
or
loop
es
js
call
xlat
mov
shl
jle
movs
add
lahf
add
adc
or
loop
dec
push
xchg
call
es
pop
xor
mov
neg
push
xchg
loop
(bad)
sti
push
xchg
sbb
pop
mov
adc
rol
scas
xchg
cmp
cdq
mov
mov
loope
add
adc
movs
leave
add
outs
(bad)
dec
and
sbb
jb
in
cmps
das
outs
add
pop
jnp
sbb
pop
add
mov
mov
clc
push
dec
es
or
inc
cmp
mov
aam
sbb
loopne
outs
push
push
(bad)
iret
xchg
je
(bad)
xchg
pop
adc
xchg
mov
ins
pusha
sub
cmp
push
sub
cmps
ins
mov
cld
xor
jae
leave
dec
in
cmps
ja
push
inc
mov
inc
push
das
pop
xor
ror
movs
icebp
or
push
pop
push
imul
xchg
hlt
jo
pusha
inc
mov
jp
xor
add
scas
dec
mov
(bad)
adc
mov
jae
sub
add
fidiv
ds
add
jmp
cli
sbb
sar
sub
aad
dec
in
and
mov
adc
shl
dec
xor
xchg
mov
(bad)
movs
shr
cmp
rcr
in
ins
aas
push
out
sub
ds
adc
xchg
inc
pop
add
scas
loop
xchg
int
(bad)
iret
and
push
(bad)
(bad)
in
push
pusha
mov
adc
nop
in
inc
lock
ss
cmp
or
mov
mov
xor
sti
add
int3
and
shl
pop
dec
and
stc
sbb
mov
ror
jmp
cmp
lods
cdq
sbb
push
pop
jecxz
mov
adc
xchg
adc
add
push
jns
div
cmps
add
inc
mov
aas
test
xor
sar
sar
lock
mov
add
adc
xor
pop
pop
std
test
pop
ror
and
hlt
pop
push
xor
daa
pop
mov
or
int3
test
adc
dec
fisttp
pop
or
inc
push
mov
leave
(bad)
mov
fdiv
cld
adc
cmp
out
addr16
push
pop
and
adc
icebp
adc
stos
cmp
pop
adc
jecxz
mov
inc
sub
inc
mul
mov
and
and
xlat
lods
fldenv
jae
not
cmp
pop
and
jae
jge
xchg
lods
ins
out
push
jl
cmp
pop
in
cmp
adc
xchg
and
push
jmp
popf
out
inc
retf
jbe
and
scas
push
inc
sbb
movs
xor
cmp
and
pop
test
or
(bad)
jecxz
ins
sbb
and
mov
cmp
arpl
sub
fsubp
mov
sbb
ja
nop
push
movs
in
repnz
outs
sbb
adc
icebp
pop
push
jecxz
xchg
and
hlt
mov
daa
push
jle
push
pop
in
jbe
(bad)
std
and
cld
jecxz
cmp
push
pop
mov
xchg
sbb
outs
fwait
sbb
cmc
push
fmul
add
and
cmp
aad
enter
bound
sub
jle
call
or
cs
ret
cmc
jg
mov
cmp
loop
fcom
mov
sub
addr16
push
cmp
cmp
jbe
cmps
cli
test
mul
jp
movs
iret
pop
pop
addr16
fistp
jnp
mov
mov
cmp
mov
fadd
mov
or
retf
mov
mov
aam
or
pop
out
push
aaa
pmulhuw
loop
push
mov
pop
mov
test
aaa
fmul
ds
sbb
cmps
and
xor
mov
add
in
shr
sahf
and
js
xchg
pop
mov
jl
jne
mov
or
stc
and
bound
std
inc
stos
pusha
test
cmps
in
mov
ja
les
(bad)
pop
push
mov
sub
js
xchg
pop
jb
mov
adc
sub
popf
out
out
or
clc
lods
fwait
in
mov
mov
xchg
aaa
aad
push
push
push
enter
jae
sar
int3
push
xchg
sub
into
int3
je
xchg
rcr
and
ds
aad
lahf
and
xor
int
cmp
lds
jne
jmp
shl
jns
cmc
xchg
mov
pushf
lods
bound
cs
lods
adc
push
sub
outs
mov
shl
outs
jbe
movs
call
inc
ja
jge
pusha
jle
cmp
dec
(bad)
test
pop
loopne
xchg
mov
test
dec
xchg
mov
xchg
push
adc
imul
loop
retf
adc
gs
sbb
add
ret
out
push
shl
cmovno
(bad)
jo
pushf
jno
popf
rcl
(bad)
pop
mov
fldenv
or
push
push
sub
add
movs
lock
pop
sub
fild
pop
jmp
popf
ret
pop
sbb
arpl
xchg
inc
fld
aad
dec
int
test
sar
inc
dec
cdq
mov
(bad)
xchg
sbb
lods
mov
(bad)
sub
lea
imul
sbb
xchg
add
sbb
xchg
sub
jae
mov
sbb
xor
push
out
jns
(bad)
cld
push
or
inc
push
fcom
(bad)
das
les
(bad)
jl
sbb
mov
mov
test
mov
iret
cwd
dec
xor
cld
inc
push
jo
shr
sbb
cmp
repnz
inc
in
(bad)
loop
gs
dec
xor
cmc
push
mov
pop
call
jmp
cmps
aam
cmp
or
int3
pushf
lahf
push
retf
(bad)
mov
fst
inc
push
xchg
loopne
add
out
add
adc
out
in
xadd
call
sub
cld
jge
fcmovne
pusha
sub
mov
cmp
out
sbb
inc
in
cmps
dec
ins
ds
les
jne
shl
sub
jbe
adc
ins
dec
push
fdivr
xor
mov
mov
jmp
ror
(bad)
out
inc
(bad)
(bad)
and
ja
mov
(bad)
or
outs
push
inc
aaa
sub
push
mov
in
push
imul
jnp
sbb
ret
aam
mov
jecxz
inc
call
mov
loopne
dec
(bad)
es
mov
icebp
cmp
cmp
or
data16
enter
shl
fadd
mov
imul
xor
cmp
lods
lds
dec
or
jne
push
test
inc
xlat
sbb
push
jg
cmp
pop
adc
enter
ins
or
sub
mov
xor
fild
rcl
(bad)
enter
push
sub
sub
and
shl
cmp
mov
jecxz
or
add
fcomip
pop
shr
mov
mov
or
cmp
dec
or
mov
daa
sub
and
jmp
shl
pop
jecxz
dec
inc
and
les
call
out
cwde
mov
enter
push
xor
out
push
and
mov
fwait
mov
add
fdivr
dec
(bad)
dec
adc
cli
jns
adc
in
push
fst
movs
xchg
dec
iret
mov
jl
adc
jae
ret
mov
in
icebp
mov
ret
push
aaa
repz
cmc
inc
dec
fs
sbb
mov
add
daa
mov
and
xchg
inc
popf
push
shl
test
test
mov
sbb
ficomp
lock
stos
mov
in
mov
jmp
sbb
jo
std
pushf
(bad)
push
bound
stos
pushf
cmp
and
jle
dec
jmp
xor
mov
ret
adc
jns
movs
mov
gs
push
cmps
push
repz
sbb
sahf
fadd
and
mov
xchg
jbe
jnp
adc
sub
repnz
jle
push
sub
adc
mov
cmps
adc
mov
sub
out
dec
push
es
and
in
mov
sahf
cs
out
or
adc
jge
inc
xchg
pushf
mov
mov
mov
rcl
pop
cmp
ja
imul
out
push
cmp
test
xchg
fcom
cmp
mov
mov
or
aas
imul
pop
inc
(bad)
hlt
sbb
push
jg
or
xchg
ins
fisub
dec
cs
cmp
fisttp
cmp
retf
xor
sub
test
mov
jb
lea
pop
jne
mov
mov
sbb
retf
shl
cmp
push
pop
stos
push
stos
les
idiv
xor
lods
pop
sbb
cmp
jge
mov
outs
pop
retf
jb
inc
add
cdq
mov
rcr
fldenv
dec
and
loop
cmc
mov
cmp
sti
dec
popf
fwait
movs
cs
push
int3
mov
and
sub
sub
push
sub
ins
repz
cld
cmps
(bad)
push
push
add
test
cmp
test
mov
xchg
imul
sub
sbb
loope
lahf
cmp
cdq
dec
xor
popf
jp
scas
vmovss
mov
mov
pop
sbb
or
xor
sub
mov
and
pop
inc
mov
leave
call
jae
in
es
into
aad
mov
loop
cmp
inc
xor
xor
inc
pop
mov
jg
adc
(bad)
iret
inc
mov
push
rol
out
jo
or
imul
fwait
cmps
das
ds
pop
dec
push
fld
mov
sti
push
cmp
sbb
dec
cmp
or
js
mov
and
loope
or
and
mov
adc
fild
out
jecxz
cs
sbb
sbb
neg
pop
(bad)
ins
sub
lds
test
cmp
mov
fsubr
dec
leave
leave
fwait
adc
push
out
imul
lahf
jmp
icebp
add
out
ins
dec
fist
fld
out
mov
or
mov
iret
fwait
ja
lock
cmc
loope
fdiv
cwde
in
xchg
dec
pop
and
test
and
add
and
pusha
in
mov
xchg
xor
clc
adc
push
jl
or
mov
pop
lods
call
xchg
je
mov
sub
jge
lea
xlat
push
ret
fwait
call
dec
xor
test
imul
xor
shl
push
mov
cwde
gs
jb
mov
push
add
imul
mov
(bad)
xor
or
jb
aad
or
sar
jl
or
push
jle
dec
(bad)
dec
push
mov
xchg
dec
sbb
cli
push
or
sbb
imul
shl
stos
fs
aad
or
imul
(bad)
iret
fidivr
jge
inc
jp
and
shl
scas
popa
mov
jmp
or
lds
jne
push
adc
(bad)
inc
mov
and
(bad)
xchg
pop
pop
ins
iret
outs
(bad)
pop
mov
stos
imul
pusha
lds
pop
push
les
sbb
(bad)
xlat
sar
add
ds
sbb
aam
and
and
xor
dec
enter
pop
daa
outs
fstp
mov
sbb
push
cmc
call
enter
in
enter
addr16
jo
js
and
jo
leave
cmc
add
jno
jae
sub
jl
cmp
inc
mov
les
enter
lods
adc
jmp
es
add
pop
mov
out
jecxz
repnz
hlt
shl
and
inc
lahf
pop
jp
les
mov
add
sub
fwait
(bad)
jg
jne
xor
adc
sub
dec
push
fld
xchg
push
int3
and
inc
or
cmp
fnstsw
clc
dec
test
mul
push
sub
stc
fnstsw
(bad)
cdq
mov
cdq
add
push
hlt
(bad)
pop
rol
adc
(bad)
jno
sub
inc
mov
mov
ja
add
ficom
and
hlt
inc
lahf
mov
mov
(bad)
xchg
push
inc
sub
ins
or
nop
and
repnz
and
inc
aas
mov
int3
(bad)
and
xor
jno
imul
mov
push
lods
cld
push
dec
add
push
xor
inc
(bad)
(bad)
or
xchg
adc
sahf
cmc
lods
shl
sbb
jo
sbb
imul
pop
pusha
jp
pusha
(bad)
cdq
int3
adc
cmp
bnd
enter
mov
out
fdiv
adc
jg
pop
fwait
cdq
out
fstp
cwde
add
stos
add
ret
rcr
shl
fdiv
inc
das
fcomp
inc
repz
(bad)
out
shr
mov
sub
dec
out
inc
jle
cmc
cwde
cmp
movs
pop
jg
mov
sbb
or
xor
xchg
and
mov
rol
push
aas
sbb
retf
mov
enter
cmp
sbb
dec
xchg
ins
ds
or
cdq
pop
in
popf
(bad)
outs
xor
mov
dec
lock
add
inc
popa
call
cld
mov
sub
nop
mov
inc
xchg
out
sub
cmc
sbb
and
jle
xor
mov
mov
mov
jl
aas
cmp
mov
xchg
mov
test
jb
xrelease
sub
adc
popa
(bad)
pop
fwait
cmps
fs
jg
mov
mov
mov
jmp
jno
xor
movs
mov
pop
pop
push
je
out
cdq
(bad)
nop
mov
jne
ret
(bad)
and
shr
jae
cmp
movs
fisub
and
aaa
add
xchg
sbb
sqrtps
das
push
xlat
lods
mov
xchg
add
jmp
jno
test
push
inc
adc
lods
fwait
ins
bound
hlt
iret
ins
mov
cwde
inc
cmp
addr16
xor
ds
getsec
add
aas
es
(bad)
or
iret
std
mov
in
jne
into
mov
xchg
mov
repnz
shl
ret
or
dec
push
dec
cmps
outs
xchg
mov
aaa
sub
mov
inc
ss
mov
gs
add
mov
int
mov
push
mov
cmp
inc
call
loopne
fsubr
cmp
push
cmp
sub
pop
inc
pop
mov
adc
popa
pop
jg
xchg
cwde
addr16
mov
or
shl
sub
sub
sbb
push
pop
sub
jne
mov
jg
js
or
or
jmp
mov
inc
dec
and
jecxz
stc
test
xor
dec
adc
and
pop
retf
pusha
xchg
dec
icebp
icebp
js
cmp
adc
jbe
xchg
and
cvtpi2ps
jp
mov
sbb
push
sub
lods
(bad)
dec
shl
cmp
movs
jl
adc
ret
and
and
mov
cmovle
jle
inc
(bad)
xchg
fidivr
mov
sub
fsubr
cmp
fnop
mov
mov
push
(bad)
fscale
cld
mov
rol
jge
jge
lock
fst
inc
sbb
pushf
jecxz
scas
xor
imul
push
lea
arpl
dec
inc
aad
cwde
loopne
outs
rol
icebp
aam
int3
pop
dec
out
push
cmp
shr
frstor
(bad)
js
call
push
push
repz
jecxz
fdivr
mov
jl
mov
ss
dec
sub
div
ret
mov
push
div
mov
fldl2t
(bad)
push
dec
or
std
mov
test
xlat
xchg
xchg
addr16
pop
xor
add
retf
pop
jbe
mov
pusha
mov
loope
or
mov
mov
mov
jns
and
fcmovne
mov
sahf
ins
and
popf
mov
adc
bound
jg
add
add
mov
repz
js
add
cmp
push
stos
(bad)
aad
rcr
pop
(bad)
rcpps
xlat
icebp
xor
adc
icebp
add
loop
mov
dec
inc
fdiv
das
inc
dec
out
jge
xor
je
mov
scas
jmp
add
ror
mov
mov
jecxz
jb
js
in
mov
cmp
xchg
and
jae
and
(bad)
push
aas
mov
fiadd
data16
repz
jecxz
mov
stc
nop
mov
loope
enter
sub
jmp
jg
sbb
push
add
fsub
out
mov
sbb
mov
aas
icebp
push
cmp
dec
jl
outs
and
push
sar
xor
xor
xchg
cli
jne
inc
push
cwde
sbb
ror
fsub
xchg
(bad)
mov
mov
into
movs
stos
dec
fiadd
push
scas
test
mov
dec
movs
and
daa
cmp
cdq
retf
rol
aad
jl
cld
sahf
pop
xchg
mov
xchg
add
std
push
mov
pop
mov
idiv
fdiv
ds
jge
jnp
mov
xchg
shr
repz
mov
gs
sahf
jns
loopne
push
mov
mov
xchg
inc
loopne
aam
pop
cli
or
nop
inc
xchg
cli
dec
sti
pushf
add
push
dec
sar
jmp
sub
pop
and
je
sub
jb
jno
or
pop
sti
mov
repz
stc
(bad)
ins
mov
dec
cmp
stos
cmp
or
sub
mov
fldenv
ficom
jle
nop
mov
mov
clc
xchg
xchg
ret
fsubr
xor
rcl
ins
sbb
out
(bad)
cmp
mov
lods
cmc
cmps
js
fimul
xor
sbb
test
pop
dec
jecxz
pushf
add
jp
icebp
mov
in
cmp
call
imul
in
push
push
inc
push
push
out
inc
mov
and
cwde
bswap
push
lea
push
jb
xchg
inc
xchg
mul
retf
sbb
std
ins
into
or
icebp
add
cmps
out
adc
inc
inc
mov
mov
imul
or
mov
mov
(bad)
jno
test
ja
mov
rol
add
call
es
and
pop
movs
adc
movs
idiv
or
call
or
push
mov
mov
fwait
jno
cmc
push
ja
pop
shr
ins
cli
icebp
call
adc
aad
push
jl
cwde
mov
test
jmp
cdq
jmp
fwait
or
mov
cmp
sahf
lock
test
fld
push
outs
sti
ror
dec
lock
lea
and
ds
movs
in
jo
int3
loope
mov
clc
fisubr
icebp
cmp
mov
push
test
pop
cli
mov
ds
push
shr
dec
sbb
cmps
mov
pop
into
das
(bad)
lods
inc
add
icebp
ins
or
cmp
jb
pop
test
pop
adc
jb
retf
xchg
movs
in
inc
arpl
xor
pop
and
adc
aaa
or
das
pop
mov
inc
std
mov
stos
and
mov
dec
pop
or
test
mov
call
pushf
(bad)
fild
fwait
loope
mov
imul
sub
out
fistp
push
mov
add
(bad)
in
enter
div
pop
pop
mov
dec
lea
push
xchg
leave
ret
sub
clc
data16
jno
push
cmps
cmc
inc
cwde
aad
mov
adc
std
dec
jno
add
enter
push
out
test
push
and
add
jmp
xchg
mov
loop
mov
aaa
(bad)
in
mov
fld
pop
and
in
fwait
cmp
and
pop
xor
jae
cmp
scas
inc
int
xchg
imul
test
inc
and
(bad)
out
fcmovbe
daa
lods
js
jecxz
ret
repz
(bad)
enter
add
xlat
cmp
adc
pop
(bad)
inc
(bad)
add
loopne
jno
into
mov
pop
cmc
test
mov
out
jmp
pop
test
jg
jmp
data16
pop
inc
mov
cmc
sbb
ja
or
or
xchg
and
mov
cli
push
mov
fsub
cs
xchg
icebp
and
fwait
call
add
cmp
mov
ins
mov
dec
lgs
inc
imul
or
xchg
jmp
jns
shl
das
sub
fisttp
xchg
rcl
jl
xchg
es
es
imul
jbe
lds
cmps
not
or
aam
addr16
(bad)
loope
mov
fcom
jmp
shr
inc
jne
(bad)
jne
adc
add
test
and
mov
xchg
loop
pusha
(bad)
hlt
repnz
jmp
sub
xor
dec
(bad)
aad
push
jg
mov
daa
xchg
int
pop
inc
xchg
xchg
pop
xor
imul
fs
sbb
jecxz
je
addr16
cmp
pop
aaa
sar
aas
or
inc
mov
gs
dec
inc
dec
jle
lods
dec
jne
out
xor
rcl
sub
in
(bad)
fimul
(bad)
xor
and
and
les
push
sub
aaa
or
repz
add
cmp
xchg
mov
cmp
cmp
dec
repz
pop
int
jnp
ja
xor
int3
fyl2x
mov
mov
imul
fwait
sbb
bswap
sbb
mov
pushf
xchg
and
cmp
mov
mov
lock
nop
in
bound
js
inc
fistp
stos
(bad)
div
cmp
xor
sub
sahf
ss
(bad)
sbb
loop
sub
rcl
xchg
jle
adc
push
mov
call
test
call
in
cmp
sbb
and
cmp
mov
dec
adc
add
xlat
push
out
stos
cwde
xchg
call
xor
sub
stos
push
movs
popf
adc
push
inc
imul
jnp
adc
cdq
jecxz
pop
outs
mov
jo
inc
hlt
ins
xchg
inc
popa
adc
xchg
arpl
(bad)
jae
out
or
and
xchg
cmp
push
int3
or
sbb
add
pop
xor
sbb
push
in
ret
data16
iret
cmp
sbb
lahf
(bad)
inc
mov
dec
xor
test
(bad)
int3
fxch
dec
pop
inc
push
mov
cld
ins
and
call
enter
int3
adc
(bad)
shl
(bad)
lods
add
mov
mov
inc
popa
mov
(bad)
mov
inc
pop
dec
and
xor
mov
jge
(bad)
cmp
lock
pop
cli
jb
xchg
test
add
adc
push
outs
mov
pop
fs
loopne
sbb
pop
frstor
das
jle
scas
jns
jns
in
pop
je
pop
jae
or
test
(bad)
retf
lods
shl
adc
xchg
into
jle
sub
repnz
sbb
int
xor
dec
and
stos
retf
out
jmp
cmp
add
fucomp
cli
cmps
mov
add
pop
sahf
add
xchg
and
repz
fistp
hlt
ins
(bad)
(bad)
jmp
out
mov
leave
pop
into
dec
shr
jecxz
push
inc
in
mov
shl
pushf
xchg
mov
and
in
sbb
or
cmp
adc
xchg
adc
bound
lahf
push
mov
int3
push
mov
lods
fbstp
and
mov
ret
jmp
rcl
push
mov
je
addr16
sti
add
pop
sub
jg
pop
jl
stos
out
in
push
outs
cmc
mov
push
xchg
fwait
repz
xchg
mov
scas
(bad)
ret
mov
sub
dec
mov
jo
mov
push
xor
inc
sub
addr16
iret
loopne
push
aas
js
vaddsubps
sub
icebp
ins
lods
or
push
mov
jl
int
ret
sub
repz
jno
imul
lahf
xchg
nop
es
pop
dec
mov
xchg
(bad)
(bad)
sub
sbb
popf
cmp
call
dec
leave
jmp
pop
fdiv
dec
mov
aad
fisub
inc
sbb
jmp
add
mov
sub
push
bound
mov
jno
push
add
mov
jns
push
outs
in
jbe
outs
into
mov
adc
jbe
cmp
sbb
popa
mov
cwde
push
call
jmp
fistp
cmp
inc
retf
dec
mov
sbb
cld
and
es
data16
push
aam
lahf
push
shl
lea
(bad)
mov
dec
mov
in
and
jg
push
and
iret
adc
xlat
fidiv
mov
lea
sti
adc
sub
stos
sahf
and
arpl
mov
push
xchg
nop
jmp
ds
call
jns
jns
pop
push
or
ins
outs
aas
jbe
adc
in
inc
jecxz
mov
jb
cmp
std
inc
and
repz
(bad)
mov
xchg
sbb
sub
fist
arpl
cmp
mov
aam
jp
je
mov
loop
sahf
pop
jns
inc
or
(bad)
das
push
(bad)
inc
jbe
adc
mov
jge
out
pushf
jae
dec
sub
(bad)
sbb
aam
popf
push
mov
cld
cmc
test
(bad)
xor
fstp
add
test
outs
les
cmp
and
in
xor
push
or
xchg
adc
outs
lock
xor
fwait
jp
or
leave
pop
mov
lods
retf
fsubr
outs
pop
cmp
xlat
adc
xchg
xchg
adc
dec
mov
movs
adc
xchg
push
dec
mov
(bad)
inc
fcom
push
mov
inc
pop
or
jmp
xor
sbb
jg
and
ins
aaa
mov
inc
scas
sbb
lock
dec
fcomp
inc
lods
xchg
cmp
ss
push
and
ret
int3
jo
xor
xor
lods
pushf
mov
adc
sub
push
or
push
or
rcr
(bad)
push
pop
(bad)
les
mov
fcomp
(bad)
mov
inc
cmp
push
int3
(bad)
lahf
les
cwde
idiv
xchg
(bad)
ds
cmp
hlt
jmp
addr16
fld
add
or
push
ret
cmp
into
cmp
dec
fdivr
aad
mov
jno
scas
in
adc
outs
into
lahf
and
mov
arpl
inc
cmp
shr
cmp
or
mov
sub
imul
sbb
movs
cmps
gs
and
mov
mov
adc
ror
mov
call
push
add
dec
pop
ret
aad
pop
cmp
pop
jecxz
test
call
aas
mov
jnp
and
in
pop
mov
fidiv
(bad)
es
ss
pop
repz
mov
xor
loopne
neg
mov
int
jno
fadd
inc
imul
mov
jno
rcl
push
pop
fcmovnu
fs
and
out
repnz
xor
movzx
jbe
rol
mov
sub
outs
fwait
hlt
pushf
lds
arpl
rcr
outs
lahf
lods
fs
dec
xlat
mov
mov
xchg
(bad)
scas
pop
clc
retf
je
sahf
cwde
mov
fsubr
mov
jae
lea
or
jge
dec
imul
shl
ins
jo
call
dec
adc
and
lods
inc
(bad)
push
mov
jae
sbb
sub
test
pop
pop
addr16
stos
in
lea
mov
test
cmc
in
call
mov
xlat
pop
push
xchg
ficomp
in
cmp
call
sbb
jo
ins
in
dec
test
(bad)
ror
inc
lods
sub
dec
push
imul
xchg
pop
inc
or
pop
xchg
fcomip
jbe
push
retf
call
sub
cld
leave
outs
xchg
add
sahf
and
pop
xchg
sahf
xor
in
adc
pop
fucom
cmp
lahf
or
in
clc
ins
js
inc
push
mov
aam
jge
inc
repz
jbe
out
stos
movs
and
gs
imul
movs
adc
mov
pop
mov
scas
gs
stos
sub
fcom
mov
dec
call
add
sbb
cli
out
sbb
push
mov
shr
pop
jl
sbb
loopne
enter
jnp
xlat
neg
push
push
pusha
leave
fs
in
mov
push
ins
mov
jmp
mov
ja
arpl
add
sbb
inc
repnz
repnz
lods
js
mov
repz
add
add
push
mov
jo
jmp
frndint
dec
in
mov
adc
in
bound
and
lock
fcom
ins
pushf
pop
jae
sub
movs
xchg
push
shl
add
and
and
aas
add
mov
inc
or
fucomip
push
mov
loope
aaa
sub
popf
dec
pop
stos
ss
nop
mov
inc
nop
fbld
sbb
or
jmp
repnz
lds
push
ret
mov
xor
icebp
xlat
add
mov
mov
xlat
pop
and
jg
jno
lods
in
adc
mov
inc
jnp
int
sar
mov
jl
pop
add
sbb
rcl
div
ins
push
fwait
xlat
adc
out
rol
je
bound
jl
movs
enter
jae
push
dec
push
lds
ins
xor
lahf
ins
and
add
test
out
mov
into
sar
cld
enter
fs
repz
ror
xor
popf
cli
dec
dec
mov
pusha
ror
mov
sub
inc
push
enter
mov
pop
ins
dec
push
arpl
not
cmp
sub
into
xchg
bound
xor
sub
je
jbe
stc
mov
in
call
les
pop
jg
sbb
repz
ret
inc
popa
adc
xchg
cs
pop
popf
movs
stos
mov
mov
adc
aam
popa
push
pop
lods
(bad)
mov
dec
rcl
inc
sbb
outs
mov
out
xor
xchg
mov
push
cmps
cmc
(bad)
in
push
test
std
mov
cmp
mov
div
cld
aas
aas
mov
pop
cdq
mov
or
mov
stos
push
push
push
les
push
mov
inc
ins
mov
cwde
ja
xlat
nop
cmp
jbe
mov
fadd
clc
xchg
(bad)
adc
rcr
cld
push
popf
jg
stc
sub
outs
sti
add
(bad)
or
scas
arpl
mov
arpl
mov
mov
jmp
into
loopne
out
aas
int3
scas
scas
daa
xchg
xchg
popa
jno
pop
cmps
xor
out
aam
(bad)
in
dec
sub
mov
retf
in
shr
into
pusha
(bad)
cld
in
and
mov
add
jmp
popf
ins
xor
mov
xchg
xlat
adc
in
sub
cmp
inc
inc
loopne
(bad)
sar
stc
shl
mov
mov
stos
retf
ins
add
pop
lahf
dec
jmp
fmul
push
inc
int
jp
lods
jl
mov
fnstenv
xor
mov
aad
mov
(bad)
push
xor
mov
mov
jb
repz
clc
inc
jbe
mov
test
test
out
dec
retf
adc
(bad)
adc
or
retf
pop
jp
mov
test
xor
repz
and
mov
cmp
in
cmps
mov
mov
test
rcr
fiadd
xlat
dec
sbb
xor
and
fbld
xor
pushf
xor
inc
mov
push
xor
test
pop
jge
sbb
data16
imul
test
cwde
arpl
or
adc
loopne
retf
rol
popf
pop
pop
jns
ret
adc
adc
ret
mov
ret
push
leave
add
jg
out
cdq
das
fcmovnbe
ins
add
iret
adc
mov
enter
add
adc
in
(bad)
inc
ja
(bad)
push
pop
push
sub
sbb
retf
pusha
imul
jns
push
sti
or
sub
out
test
lods
popa
xchg
adc
mov
test
stc
push
jmp
movs
loop
pop
pop
test
iret
sub
add
jo
xor
sub
addps
pushf
mov
mov
ja
jo
push
into
ja
stc
mov
pop
nop
call
jp
mov
imul
pushf
clc
mov
sbb
mov
clc
jbe
push
(bad)
scas
push
and
mov
cmp
pusha
outs
xchg
addr16
adc
pop
jbe
call
(bad)
pop
xor
xchg
xchg
sbb
in
stc
cwde
push
(bad)
jge
adc
cmp
pop
sub
shr
add
mov
(bad)
and
mov
test
dec
cmp
nop
fnsave
aaa
and
aam
xchg
stos
jp
imul
aam
lahf
xchg
ret
cmps
(bad)
mov
mov
xor
and
sub
sbb
pop
shl
and
leave
test
in
fsub
xchg
mov
stos
pop
pusha
push
mov
and
mov
cmp
mov
and
add
cdq
not
or
cmp
mov
push
sahf
xlat
ret
mov
xchg
into
dec
stc
mov
bound
xchg
movs
xor
pop
in
and
sub
dec
xchg
and
in
xor
sbb
test
cmp
push
or
ins
cmps
hlt
jno
jecxz
sub
mov
sahf
sbb
in
pop
mov
stos
adc
loop
cwde
mov
lock
(bad)
pop
xchg
mov
(bad)
and
arpl
add
xchg
outs
push
mov
aaa
sub
test
sub
sub
xor
pusha
retf
jmp
jge
push
ficom
sub
lods
xchg
sub
cmp
test
xchg
dec
out
push
outs
fdivp
outs
es
test
pop
(bad)
out
or
rdpmc
les
daa
in
lea
inc
or
mov
add
xchg
xchg
xor
inc
xchg
adc
xchg
push
addr16
(bad)
hlt
sti
es
push
dec
imul
jne
dec
mov
push
std
inc
dec
xchg
sub
movs
daa
push
push
rol
dec
jmp
sbb
imul
inc
pop
fcmovu
jmp
adc
hlt
cli
imul
es
sbb
daa
es
dec
test
outs
mov
xor
popa
sbb
aad
dec
sub
xlat
jns
out
(bad)
cmp
stc
push
xchg
adc
fstp
ret
mov
jae
jns
mov
cmp
push
ret
fs
add
std
mov
in
(bad)
addr16
fisubr
mov
fistp
(bad)
jae
lds
pushf
mov
stos
ror
enter
mov
inc
ret
fdivr
inc
pop
and
icebp
push
pop
cmp
and
pop
xchg
scas
jle
das
push
xchg
bound
xchg
xchg
scas
xor
jno
lods
cmp
fdiv
ins
xchg
out
and
jmp
push
add
lds
xor
pop
dec
adc
xor
imul
dec
fistp
inc
inc
(bad)
xor
or
data16
scas
loopne
xchg
cmp
cld
cmp
lods
jecxz
fs
jb
addr16
cmp
cmp
arpl
dec
cmc
je
and
cmp
(bad)
and
xchg
cmps
fimul
clc
pop
inc
xchg
xchg
jne
loopne
inc
mov
in
data16
jno
sbb
xor
push
scas
pop
mov
cwde
ss
pop
sti
aaa
sub
int
cmp
xchg
jno
out
mov
sub
jb
dec
(bad)
mov
add
js
sub
fisubr
adc
xchg
loopne
push
sahf
dec
(bad)
adc
mov
out
mov
push
div
push
mov
xor
mov
arpl
(bad)
and
inc
sbb
mov
stc
loop
mov
popa
sub
icebp
addr16
pop
aad
fist
ins
nop
mov
je
mov
test
cld
mov
retf
inc
add
mov
rol
pop
dec
mov
nop
loope
and
pop
xor
popf
cli
leave
daa
addr16
pop
cli
or
sub
mov
in
iret
(bad)
lea
ds
adc
dec
dec
dec
cdq
jb
push
out
out
pop
add
dec
repnz
pop
dec
js
test
imul
into
fs
lods
dec
push
adc
adc
test
rcr
adc
stos
rol
mov
dec
xchg
cmps
add
movs
mov
sbb
dec
sti
push
invd
(bad)
jns
shl
mov
pop
sbb
int3
nop
ins
sbb
ds
popf
out
(bad)
fmul
pop
xchg
rcl
mov
xchg
jp
pop
inc
arpl
fisub
inc
data16
rcl
push
mov
mov
sub
sbb
inc
cmp
inc
and
push
pop
ins
ja
sub
sti
jmp
mov
cmp
push
mov
add
cmps
out
call
mov
push
int
sbb
arpl
xchg
ror
jne
xchg
sub
ja
inc
arpl
xor
xchg
mov
(bad)
mov
jb
inc
mov
test
xlat
xchg
mov
xchg
test
xor
fs
test
(bad)
pushf
add
add
cdq
jle
push
xor
sub
stos
fcomp
lock
outs
xchg
adc
fmul
imul
push
sub
and
jle
les
jge
icebp
icebp
pop
push
xchg
stc
jb
aad
push
fidiv
sub
push
(bad)
in
dec
adc
ins
xchg
pop
ins
add
push
pop
pop
and
arpl
lds
scas
cmp
cmps
ret
in
cs
push
sub
sar
sbb
movs
mov
and
pop
cmps
mov
and
in
daa
stos
out
pushf
js
fs
or
cwde
and
imul
pop
dec
or
cdq
mov
pop
pop
aad
pop
lods
mov
mov
or
push
and
jae
mov
and
xor
std
sub
popf
jo
inc
lahf
xchg
fdiv
dec
jle
fiadd
jb
or
shr
mov
fs
int3
mov
dec
(bad)
and
xor
lea
dec
dec
jne
mov
or
retf
mov
icebp
add
ja
and
mov
(bad)
mov
shl
dec
aas
push
and
push
mov
xchg
push
outs
jo
jnp
enter
clc
fisttp
(bad)
dec
or
add
mov
jmp
xor
mov
add
sub
repz
jo
ds
mov
xchg
ret
in
daa
adc
sub
pop
mov
cmps
jnp
rcr
rol
sub
dec
push
lahf
lahf
ret
xor
mov
inc
fs
das
add
mov
les
js
repnz
mov
ins
adc
and
scas
jle
movs
test
test
int3
jne
jge
xchg
sub
push
out
xchg
ret
aaa
jb
imul
cs
sbb
sub
stos
scas
shl
jns
pop
mov
xchg
nop
pop
mov
jl
cmps
add
mov
outs
push
out
outs
jo
loope
jno
adc
sub
xchg
neg
inc
xchg
ds
fld
jmp
int3
pop
fnstsw
mov
xchg
out
sbb
mov
scas
(bad)
cmps
mov
pop
sti
outs
jecxz
xchg
mov
mov
and
push
ret
dec
and
push
in
xor
push
stos
jns
outs
ins
es
out
mov
or
pop
arpl
movs
add
inc
mov
nop
mov
or
sti
inc
popa
fsubr
sti
and
fisubr
rcl
xchg
jecxz
stc
pop
pop
jmp
pop
add
jge
shl
ret
cdq
lods
clc
fnstenv
sbb
jo
test
movs
pop
mov
pop
cmp
inc
sub
and
mov
inc
imul
out
int3
retf
int3
aaa
push
outs
push
imul
xor
inc
mov
inc
xchg
xor
xchg
out
mov
sbb
js
aas
or
outs
(bad)
lock
sub
(bad)
xor
adc
xchg
shl
jle
dec
lods
xor
mov
std
and
jecxz
fs
call
retf
or
aad
sbb
cmps
fstp
sbb
retf
push
inc
(bad)
sub
movs
pop
xor
test
or
mov
adc
rol
add
rcr
inc
mov
jno
ror
push
xchg
mov
adc
adc
mov
jg
and
adc
repnz
pop
mov
jbe
gs
fbstp
mov
mov
outs
pop
sbb
xchg
std
pop
mov
adc
and
mul
jbe
lock
adc
jae
fcomp
lods
pop
mov
mov
cmc
shl
or
inc
clc
cdq
dec
xlat
dec
sub
inc
gs
jle
lds
add
fild
cmp
pop
add
cmps
dec
or
cmp
or
iret
adc
add
xor
or
jecxz
xchg
fcomi
outs
je
fidiv
fsubr
sbb
aas
add
hlt
ins
push
mov
cmp
fild
stos
lods
sahf
cmp
loop
stos
lods
dec
or
adc
movs
and
adc
xlat
jge
push
jmp
mov
adc
xlat
pusha
ret
cmp
xchg
fwait
and
cld
jmp
or
(bad)
fbstp
and
nop
add
shr
pop
adc
sti
push
(bad)
add
int
mov
xlat
mov
mov
inc
ja
inc
cmps
and
lock
sti
dec
dec
repnz
aad
xor
loope
mov
add
mov
pushf
out
mov
stc
xlat
cmp
jne
dec
add
cmps
ds
ds
outs
add
mov
jmp
sbb
std
call
test
(bad)
fnstsw
ret
shl
xchg
fst
sahf
mov
pop
bound
je
test
pop
push
stos
call
inc
hlt
add
mov
sub
jne
or
or
(bad)
mov
adc
push
inc
push
push
add
jp
inc
les
jge
rcr
movs
int3
fild
mov
pop
ins
and
sub
mov
popa
gs
pop
mov
loope
leave
mov
xor
(bad)
gs
cmp
inc
leave
sbb
icebp
cmp
aad
push
add
int3
push
call
mov
mov
shl
scas
jns
sub
adc
popf
shrd
ss
ss
and
hlt
xor
add
fst
pop
adc
mov
dec
push
jmp
jnp
es
mov
sub
xchg
xor
push
and
jbe
jp
sub
push
int3
mov
fcom
ret
mov
imul
out
inc
rcl
xor
ret
(bad)
jns
inc
and
jae
ror
lds
or
daa
xor
sub
fisubr
shr
pop
mov
pop
or
aam
mov
mov
mov
cmp
(bad)
or
lods
sbb
ins
push
pop
push
rol
dec
sbb
jg
cmp
aaa
mov
ds
mov
sbb
add
sbb
ret
out
lods
or
arpl
cmp
nop
dec
push
jmp
or
add
cmp
out
fadd
push
xlat
nop
clc
add
xor
xlat
or
je
sub
sbb
ins
loope
cmps
dec
(bad)
mov
sbb
into
dec
fbld
retf
jnp
fsubr
bound
cmp
repz
dec
jle
js
sub
(bad)
in
push
xor
into
ret
(bad)
rcl
sahf
iret
clc
ins
adc
in
add
loopne
pop
sar
or
pop
mov
jnp
xchg
jmp
ret
bound
hlt
test
fwait
lds
inc
test
mov
pop
or
div
xor
lahf
fs
stos
add
sbb
mov
test
adc
or
pop
dec
test
sub
and
sub
or
jno
xor
mov
xor
cmp
aam
dec
fistp
psubusb
repz
xor
arpl
mov
cdq
neg
cmc
jecxz
pop
mov
mov
add
push
stos
das
iret
or
push
(bad)
cdq
sbb
frstor
retf
pop
jo
daa
std
stos
or
cs
pop
mov
cmp
fcom
mov
add
iret
pop
inc
loopne
ins
pop
jb
ins
enter
xchg
arpl
pop
xor
loopne
pop
into
or
add
dec
mov
cdq
aaa
mov
iret
push
(bad)
hlt
mov
test
xchg
mov
mov
in
cmp
aaa
ins
aaa
xor
mov
retf
xchg
adc
mov
xchg
(bad)
ins
(bad)
into
xor
mov
pop
mov
mov
adc
push
icebp
popf
neg
rol
call
out
sbb
aaa
loope
inc
pop
das
mov
out
call
repz
sub
jmp
mov
xor
cld
add
stos
sar
mov
dec
icebp
stc
aam
cmp
and
add
mov
mov
cmp
adc
sti
xchg
xor
inc
std
jne
(bad)
jnp
push
fdivr
(bad)
pop
fnstsw
adc
enter
movs
loopne
push
jge
add
jae
mov
adc
sahf
xchg
fdivr
into
addr16
cmc
daa
inc
repz
fimul
arpl
mov
or
and
loope
rcr
test
lods
dec
cmp
in
movs
and
in
mov
inc
mov
xor
jb
pusha
jge
add
idiv
adc
xchg
dec
jae
dec
pop
push
push
stc
nop
daa
ins
fstp
fwait
sti
xchg
inc
loopne
add
cmp
dec
or
jae
imul
jmp
sar
in
loop
bound
jmp
jb
lock
movs
movs
jl
jnp
pop
mov
adc
add
push
pop
and
dec
pusha
nop
jg
(bad)
in
fiadd
mov
mov
lahf
das
pop
mov
nop
sub
(bad)
mov
xor
cmp
aad
mov
bnd
mov
fld
mov
mov
cmp
or
cmp
das
or
pop
ins
mov
std
call
shl
sub
cli
pop
cld
sbb
hlt
and
push
xor
push
and
out
call
repnz
jl
fwait
jne
cmp
lods
cmp
sbb
outs
(bad)
and
call
outs
imul
nop
jmp
cdq
jbe
adc
cmp
inc
mov
lock
fist
fadd
rcl
pop
push
and
fwait
lds
mov
(bad)
pop
cmp
aas
outs
inc
pop
lods
aad
lea
je
call
and
mov
mov
pop
mov
cmps
ins
loope
xchg
lods
shl
inc
pop
popa
je
cmp
cmc
jl
xchg
xchg
loope
sbb
jnp
popf
adc
jmp
mov
push
add
add
into
push
jecxz
mov
xchg
xlat
sbb
cwde
push
xchg
push
xchg
shr
sahf
add
push
add
or
js
mov
mov
push
fs
push
std
cdq
mov
test
mov
xchg
xor
test
lods
mov
jb
cmp
jae
jbe
pop
push
int
repnz
ss
dec
stos
les
mov
cmp
xor
jg
xchg
call
xchg
int3
in
cmps
movs
push
das
dec
repz
jl
ror
enter
fld
es
scas
mov
mov
sub
into
loopne
cmp
sub
jno
and
rcl
loope
dec
push
push
int
arpl
nop
ds
imul
push
xor
cs
lea
xor
jns
cmp
fcmovne
out
nop
jge
inc
cmp
rcl
xchg
dec
ror
out
jecxz
sub
sbb
xchg
ret
pop
cmp
cmp
aad
jle
mov
daa
mov
sub
jmp
fcomp
sub
lahf
call
cmp
push
jnp
pop
and
mov
stos
inc
cmps
imul
mov
mov
sbb
dec
stc
mov
pop
mov
in
sti
adc
ins
sub
or
loopne
stos
adc
sub
and
push
sbb
pop
pop
movs
cli
xor
out
je
mov
dec
adc
jb
cmp
enter
sbb
loopne
mov
xor
sub
loop
and
adc
cli
es
xchg
sub
hlt
adc
jns
inc
adc
or
xchg
cmc
or
adc
inc
mov
mov
js
sbb
sub
xchg
mov
aam
xchg
push
sub
call
daa
jnp
xor
repnz
loope
jle
sbb
dec
cmps
sbb
retf
scas
xor
sbb
cmc
cmp
or
cmp
nop
fadd
dec
cmp
mov
into
ret
(bad)
pop
fidivr
push
shr
jle
in
dec
dec
push
ss
out
jl
jle
(bad)
lock
xor
xchg
add
call
or
inc
clc
(bad)
push
mov
sbb
addr16
fmulp
mov
dec
ds
fcmovnbe
dec
xor
call
mov
pop
loopne
xchg
add
fistp
je
shl
dec
sbb
clc
data16
jne
ss
scas
xor
xchg
pop
out
xor
ja
shrd
loopne
mov
sbb
ror
xchg
cmc
sti
fidivr
bound
mov
inc
pop
adc
sub
xor
enter
imul
scas
mov
sub
neg
push
push
test
es
mov
push
jbe
sub
inc
fistp
stc
fs
pop
pop
movs
push
in
adc
adc
aaa
adc
retf
inc
stc
or
in
into
jg
lods
ror
or
push
(bad)
icebp
jl
loopne
pop
int3
(bad)
sbb
dec
dec
cdq
dec
xor
jle
daa
mov
ret
push
fwait
outs
das
push
ret
call
fidiv
sahf
pop
and
in
paddq
mov
inc
fwait
sub
repz
push
sbb
xor
stos
add
shl
ret
sub
into
in
fsub
mov
retf
mov
(bad)
out
push
div
ins
not
test
clc
jmp
cmp
cmp
sar
pop
sub
daa
jecxz
dec
je
jns
mov
jmp
mov
cs
test
shl
cmc
scas
test
(bad)
and
or
std
mov
dec
jp
(bad)
xchg
dec
lea
cmp
pop
stos
lea
dec
in
push
popa
imul
push
jg
outs
or
ins
in
out
jecxz
call
push
div
mov
cmp
call
push
dec
imul
and
mov
mov
xor
movs
cmp
rcl
iret
cld
int
lock
test
inc
test
add
or
and
test
mov
iret
jg
lea
mov
jg
call
rol
adc
scas
add
push
popa
lods
lds
mov
addr16
add
popa
sbb
xchg
ins
addr16
dec
cmp
xor
test
lods
dec
mov
jmp
loopne
bswap
push
add
(bad)
mov
aaa
(bad)
mov
xor
fwait
adc
jbe
xchg
(bad)
mov
cmp
inc
out
sbb
dec
movs
dec
mov
mov
in
test
cmc
jb
jno
retf
mov
std
pop
dec
int
out
cmps
jl
dec
repnz
jmp
dec
inc
jle
xlat
ret
push
push
(bad)
mov
loope
inc
lock
mov
call
xrelease
sbb
and
aam
rol
retf
retf
sbb
push
cs
fbstp
sar
sub
xor
call
cmp
popa
mov
or
jae
mov
cmp
xor
xchg
retf
add
sub
aaa
add
and
ins
jae
mov
shl
mov
push
test
(bad)
mov
push
mov
das
adc
mov
paddd
aaa
ins
cmc
cmp
push
xchg
push
push
or
inc
out
add
jo
jnp
xchg
jnp
femms
imul
(bad)
rcl
xchg
data16
adc
int3
js
adc
mov
das
out
jle
xchg
xchg
mov
jp
jg
sub
mov
ins
ins
cs
xchg
test
iret
stos
imul
stos
xchg
jg
sti
lahf
ret
imul
xor
push
je
adc
sub
in
or
lods
(bad)
cli
cwde
push
loope
add
mov
imul
neg
and
sbb
lods
test
lea
xor
(bad)
xor
xor
lahf
dec
push
daa
sub
mov
mov
imul
sbb
mov
iret
fsub
inc
mov
dec
or
imul
dec
movs
push
sub
lahf
lods
or
fs
xchg
mov
xchg
mov
(bad)
sbb
jo
rol
cmp
fwait
ins
ss
in
js
aad
xchg
pop
vhaddpd
aas
mov
push
sbb
mov
in
jno
aam
mov
or
loopne
fwait
pop
inc
test
or
mov
dec
xor
jecxz
pop
add
xor
js
inc
jmp
rol
leave
and
mov
mov
mov
sti
pop
in
push
dec
sbb
jge
sbb
xchg
out
and
adc
sub
pop
call
mov
inc
adc
mov
fld
inc
hlt
dec
jp
into
dec
mov
and
sub
push
jecxz
cmovne
or
out
fstp
popa
scas
xchg
adc
pop
aam
push
cmp
xlat
xchg
aad
cmps
inc
ror
xor
mov
js
or
imul
call
(bad)
jge
sub
mov
or
enter
add
jbe
retf
push
in
call
adc
es
imul
dec
popa
mov
xor
aaa
jae
aas
dec
in
and
add
scas
bound
shl
cmp
dec
push
xchg
and
mov
adc
inc
and
(bad)
ss
xor
jle
loope
xchg
inc
rol
xor
mov
push
lods
aad
add
sar
loopne
fistp
jmp
(bad)
mov
std
std
movs
scas
sub
push
xor
and
xchg
ret
call
jmp
jne
call
sbb
retf
mov
mov
cmp
sbb
jmp
mov
pusha
jno
xchg
jae
add
xor
(bad)
arpl
jle
push
mov
out
pop
xor
es
imul
xor
leave
mov
sub
je
pop
pop
xchg
test
inc
(bad)
pop
or
dec
sub
fsubr
push
(bad)
mov
cmp
dec
jmp
pop
stos
push
or
les
add
int3
push
mov
sub
lds
mov
test
fs
lea
and
sub
shl
int3
mov
mov
jo
mov
mov
xor
popa
setbe
inc
add
push
aaa
push
jl
add
into
js
fst
pop
imul
lock
xlat
sbb
push
or
jns
repnz
out
push
mov
push
push
aad
xor
dec
mov
dec
sub
je
cmp
inc
repz
loop
cli
mov
jg
xlat
jmp
mul
cmps
mov
jmp
cld
add
mov
fiadd
xchg
push
hlt
push
out
imul
outs
int3
lock
xchg
out
stc
lods
loope
jno
lea
dec
xchg
push
ss
add
add
shl
in
jo
outs
enter
cld
pop
and
xor
scas
sub
aas
sub
mov
out
inc
cmp
push
gs
ret
sar
push
fst
push
or
mov
mov
xlat
or
add
jg
pop
fldcw
rol
cmps
mov
outs
das
ds
scas
repz
adc
pop
add
inc
fdiv
xchg
ja
sbb
dec
add
test
mov
mov
pushf
adc
imul
pop
jg
add
movhps
mov
xor
add
xchg
pop
sti
leave
mov
lock
aad
arpl
inc
sti
jae
pop
sar
push
xor
mov
ret
leave
shl
repnz
sbb
push
cmc
dec
cmp
in
sbb
out
pushf
shld
mov
push
movs
xlat
test
jbe
push
mov
mov
mov
mov
(bad)
jns
mov
cdq
mov
pop
fs
popf
add
sub
stos
sub
mov
mov
rcr
movs
les
adc
cs
popa
std
retf
or
mov
mov
in
mov
inc
mov
mov
add
inc
pop
sti
xor
pop
sbb
in
sbb
jb
jge
inc
lods
outs
sbb
and
pop
icebp
mov
jno
sub
adc
mov
int3
scas
stos
cld
ss
clc
mov
xor
ror
mov
imul
shl
iret
loop
pushf
into
je
mov
push
mov
fistp
test
jbe
sub
fsubrp
shr
inc
std
int3
cdq
stos
leave
test
mov
cmp
(bad)
outs
out
(bad)
setge
cmp
in
and
lahf
add
test
(bad)
scas
jle
mov
sar
and
fwait
mov
inc
movs
idiv
cmps
cmp
loop
or
inc
push
cli
stos
sbb
pusha
jl
sub
adc
pop
scas
sub
test
jl
movs
test
push
pop
shl
dec
dec
int
cmp
idiv
cmps
clc
mov
mov
clc
add
dec
push
push
(bad)
daa
vandps
outs
pop
retf
aas
retf
loopne
rcl
xchg
sbb
mov
mov
xchg
jno
dec
rcl
stos
inc
push
sub
in
and
jl
jnp
jl
in
lods
out
push
ins
test
xor
out
ins
add
cmc
out
adc
inc
lahf
add
aaa
cmps
js
or
mov
pop
jg
sub
imul
mov
cmp
xor
cmp
mov
mov
dec
mov
xchg
jne
pop
push
sbb
adc
aaa
stc
pop
int3
shr
jge
xlat
sub
or
out
jle
fstp
mov
inc
test
or
xor
push
ds
(bad)
inc
lahf
sbb
inc
aas
clc
inc
xchg
xchg
loope
jbe
mov
or
sub
in
adc
sbb
cmps
test
mov
jb
cmc
cmp
jmp
cmp
xor
mov
les
xor
pop
jmp
sti
xor
lds
pop
dec
jb
sub
jb
or
cmp
in
mov
fmul
inc
lods
xor
pop
xchg
mov
and
sub
pop
int3
ror
sti
sub
mov
ins
mov
inc
sub
jbe
in
jge
push
add
jnp
lods
adc
mov
fnstcw
jbe
mov
addr16
(bad)
neg
add
lock
neg
jno
call
sbb
pop
xchg
inc
popf
loope
icebp
popf
mov
sub
repnz
or
fiadd
pushf
mov
icebp
lock
dec
cwde
cmps
icebp
inc
push
and
inc
fidivr
jmp
cmp
shl
or
into
dec
test
inc
push
inc
inc
and
(bad)
leave
pop
inc
aad
aad
push
addr16
sub
pop
ror
pop
mov
push
push
lock
cmp
into
dec
neg
jns
call
outs
dec
sahf
addr16
ss
(bad)
pop
mov
(bad)
adc
pushf
movs
xor
mov
addr16
mov
enter
mov
movs
mov
sub
mov
adc
add
stos
les
cld
pop
jb
data16
xchg
pop
std
xchg
in
mov
cmc
(bad)
jne
mov
mov
jb
mov
or
jecxz
inc
ins
add
mov
iret
retf
mov
arpl
aaa
sub
fidiv
cmc
movs
pop
stos
and
cmps
pop
and
adc
xchg
cmp
mov
test
mov
push
movs
stos
pop
and
mov
idiv
loopne
add
hlt
xchg
push
lahf
sbb
inc
cmp
mov
mov
cdq
repz
jo
(bad)
push
mov
mov
mov
push
in
jecxz
movs
add
add
sub
dec
inc
outs
or
push
mov
and
xchg
inc
stos
(bad)
hlt
push
rcr
test
call
inc
sbb
std
sub
adc
leave
mov
loope
sbb
mov
(bad)
and
cmp
or
in
push
mov
scas
lods
inc
adc
shl
scas
mov
or
test
jo
jmp
pop
xor
les
mov
gs
jle
retf
push
sbb
adc
mov
aas
inc
push
xor
int
fld
pop
fiadd
or
jne
xchg
arpl
inc
mov
mov
rcr
or
repnz
xor
sbb
add
add
or
inc
pop
sbb
test
les
inc
adc
sar
movs
scas
arpl
jge
and
mov
test
xor
lds
inc
xchg
shl
push
sar
pop
lahf
mov
cmp
adc
mov
cmp
jmp
adc
mov
push
sub
jbe
lods
bnd
cmp
dec
xor
sahf
(bad)
push
sbb
push
cli
popa
xchg
cmp
jne
in
jp
pop
lahf
ret
rol
ret
sbb
ds
in
iret
pop
stos
enter
shl
mov
cmp
cmp
lock
test
ficom
lock
shl
cmp
jno
clc
pusha
stos
pop
test
cmps
bound
or
(bad)
hlt
pop
xchg
pop
jne
xor
and
rcr
push
leave
(bad)
xor
xor
adc
dec
xor
or
cmps
(bad)
iret
xchg
mov
hlt
cli
retf
js
mov
popa
or
inc
aas
mov
cmp
popf
shl
repz
test
fadd
gs
cli
inc
ja
xor
popa
out
imul
xlat
retf
mov
loopne
xchg
push
push
sub
sar
inc
jmp
and
(bad)
test
out
(bad)
(bad)
sub
sbb
icebp
retf
inc
inc
shl
sti
jecxz
or
stos
test
inc
call
pop
popa
retf
dec
mov
push
mov
vcvttsd2si
cmc
xchg
and
repnz
out
push
dec
mov
aam
push
jo
imul
and
enter
int
mov
adc
retf
xchg
and
rcl
es
push
push
inc
mov
jl
setb
dec
adc
out
lods
pop
or
out
fcomp
push
retf
dec
and
into
cmps
fwait
daa
pop
fwait
jne
jo
push
std
mov
mov
push
add
ret
cmp
movs
mov
xchg
outs
int
repnz
mov
xchg
call
mov
cmp
cmp
div
jmp
dec
cmp
mov
pop
mov
and
sti
fdivr
pop
je
aas
clc
lock
int3
cmp
call
lea
rcl
loop
rcl
mov
xor
loopne
test
adc
cmp
mov
push
xchg
loop
ror
cmps
adc
leave
ins
jecxz
jecxz
daa
add
pop
mov
mov
lahf
dec
popf
push
and
(bad)
inc
pop
(bad)
adc
push
test
add
add
or
sub
pop
xchg
push
adc
mov
rcr
ret
inc
call
mov
ret
jae
jno
ds
mov
retf
inc
mov
push
add
push
adc
repz
cmp
aaa
push
clc
clc
aad
cmp
adc
stc
and
inc
ror
dec
and
xchg
fidiv
pop
cli
or
lods
ret
les
mov
nop
xchg
ins
cmpps
(bad)
adc
cmp
xchg
ror
pop
aaa
sub
enter
stc
out
push
and
sbb
mov
rcl
cmp
int
es
es
fsubr
repnz
sbb
mov
imul
push
pop
xor
shr
stos
fidivr
fnsave
pushf
rol
cmps
ins
ds
jg
pusha
pop
adc
sub
and
xchg
sbb
push
xchg
push
mov
loopne
arpl
xchg
pop
clc
lock
mov
lods
sub
sti
cmp
ror
and
shl
cmp
mov
inc
mov
int
mov
push
pop
jle
jmp
ret
dec
imul
jne
in
push
push
or
dec
je
pop
mov
rol
mov
fldenv
jno
pop
out
jmp
pop
xor
out
in
or
add
jle
inc
dec
sbb
arpl
xchg
imul
cmp
mov
pop
int
xor
rcr
iret
popf
stc
lahf
pop
xor
arpl
add
data16
fsub
mov
scas
popa
xchg
push
pop
pop
cmp
xor
repz
clc
leave
push
mov
pmuludq
add
call
and
js
loope
mov
in
cmps
(bad)
sub
aaa
in
jb
mov
in
dec
jge
xlat
enter
popf
shr
lahf
xor
pop
shr
loopne
mov
sbb
xor
push
fsub
inc
icebp
mov
xchg
ds
pop
add
or
xchg
lahf
cmps
and
xlat
out
cwde
aaa
lahf
pushf
enter
int3
loope
sti
ret
jmp
xchg
loop
pop
dec
mov
pop
daa
inc
iret
cld
inc
(bad)
cmc
mov
rol
cmp
mov
pop
mov
sbb
outs
arpl
iret
dec
cdq
inc
sbb
dec
push
push
push
sub
repz
int
push
or
jp
js
mov
aad
xchg
stos
enter
sub
mov
out
push
cmc
xlat
in
mov
pop
and
retf
xor
adc
daa
js
jg
push
mov
sbb
adc
push
out
enter
pop
cmps
ss
push
popf
pop
pcmpeqb
xlat
fstp
ja
loopne
icebp
push
inc
pop
dec
xchg
push
outs
dec
inc
loope
sub
jo
push
fs
arpl
jp
pop
dec
shl
add
mov
mov
(bad)
stc
retf
inc
cld
dec
mov
popa
mov
in
sahf
jl
xchg
lds
cwde
div
inc
scas
mov
mov
lods
sub
and
lahf
fwait
push
jno
loopne
sub
vcvttps2dq
ret
mov
push
clc
sub
icebp
or
rcr
cmp
jl
sahf
mov
jg
push
sahf
sbb
and
or
cdq
fst
push
xchg
in
daa
imul
xchg
jl
inc
push
std
push
inc
pop
cmp
mov
pushf
test
pushf
das
retf
ret
leave
sub
mov
into
js
sub
pop
ret
sub
cld
push
jb
mov
or
(bad)
movzx
ret
dec
xchg
xor
std
adc
dec
lods
mov
dec
jb
cmps
xchg
repnz
in
sahf
inc
(bad)
mov
mov
cmp
pop
mov
pusha
fstp
fcomp
retf
jecxz
mov
adc
inc
or
push
jge
test
jnp
mov
sub
lock
lds
pusha
mov
push
sahf
pushf
mov
mov
gs
int
or
test
add
xchg
retf
ja
ret
push
shl
mov
scas
push
out
fwait
sar
cmps
clc
pop
std
out
fs
lods
xchg
outs
les
cmp
arpl
jg
mov
cmovl
out
xchg
mov
cli
cld
adc
(bad)
xor
mul
dec
pop
push
retf
and
jge
ret
imul
int
int
xor
pop
adc
in
pop
lahf
retf
outs
jg
lahf
(bad)
loope
ja
fdivp
jg
ror
(bad)
adc
(bad)
in
adc
jne
cld
add
movs
cli
inc
jmp
test
out
adc
out
cmp
add
sub
sub
mov
push
mov
xchg
and
and
jp
mov
cld
cmp
fisubr
xchg
outs
cmp
inc
cmp
aad
in
xchg
mov
loopne
sub
inc
ins
jl
fadd
dec
inc
push
lea
push
cmp
or
jg
les
pop
and
dec
or
test
push
mov
pop
cli
mov
(bad)
pop
sbb
mov
out
inc
sbb
pop
icebp
xchg
rol
lods
push
in
repnz
in
sahf
fnstcw
jmp
push
inc
add
jmp
mov
and
outs
movs
push
xchg
enter
mov
sub
sbb
mov
scas
push
fdivr
sub
xchg
xchg
sbb
pop
ins
fsub
rcl
xchg
stos
mov
xor
movs
mov
imul
mov
adc
imul
jne
sbb
fmulp
mov
cmp
fs
dec
jnp
test
dec
movs
test
or
das
gs
cmp
shl
outs
cmps
xchg
sbb
in
inc
adc
in
out
xor
jle
jne
inc
dec
fsubr
dec
xor
rol
pusha
mov
add
push
repnz
dec
ja
mov
jecxz
xor
call
clc
or
aad
inc
inc
pop
dec
lds
cmp
push
add
jnp
aaa
call
inc
jb
pop
or
inc
enter
ror
jnp
inc
das
dec
mov
loopne
mov
sbb
movs
in
or
imul
test
cli
call
cmp
xchg
pop
push
jge
in
das
icebp
inc
jnp
push
cmp
lahf
outs
fadd
xchg
push
call
lods
lea
jmp
ss
add
movs
stos
mov
leave
cmps
pop
adc
sbb
and
clc
mov
and
inc
adc
sahf
or
inc
jae
cmp
push
push
xlat
stc
jae
pusha
mov
into
out
loopne
ret
jp
add
xchg
dec
jmp
repz
mov
(bad)
sbb
jle
cwde
push
jnp
jmp
or
adc
and
lods
pop
pop
cmps
test
fabs
test
pop
push
call
pop
inc
lds
mov
xor
lahf
daa
and
push
cmp
jo
pop
leave
add
cwde
movs
in
retf
(bad)
adc
xor
jmp
mov
and
jnp
inc
xor
pop
push
imul
xchg
push
dec
lock
mov
jbe
sbb
push
adc
lods
aas
xchg
cmp
xchg
das
add
sbb
jne
mul
shl
ror
dec
and
enter
pop
sub
ss
(bad)
push
dec
mov
xor
fcmovne
fistp
mov
or
dec
fdiv
xchg
aaa
xor
leave
sbb
jge
aad
sub
es
les
adc
adc
shl
out
xor
mov
xlat
popa
push
test
cmp
pop
push
add
cmp
mov
mov
in
pop
mov
xor
inc
adc
shl
sub
cmps
jmp
jl
sbb
mov
arpl
xor
addr16
sub
dec
imul
(bad)
js
scas
push
mov
bound
ret
ss
or
pop
jo
and
ffree
push
mov
sbb
aaa
lock
mov
push
xlat
cli
push
aad
inc
push
out
ss
imul
pop
cmp
bnd
mov
sub
xchg
stos
mov
mov
mov
push
jb
rcl
scas
add
rcl
out
dec
xchg
push
mov
adc
ror
mov
dec
sub
jle
and
pusha
std
and
cs
movs
xchg
movs
scas
sbb
mov
or
mov
jae
push
popf
loopne
daa
dec
aaa
jae
out
adc
ds
outs
ja
nop
cmp
inc
outs
sti
pop
jo
cmp
pop
mov
scas
inc
ins
imul
push
lahf
shl
data16
test
cmp
pop
jl
mov
mov
dec
or
mov
xchg
fnsave
ds
pushf
jl
fdivr
inc
push
mov
loope
mov
movs
jp
xchg
pop
add
test
fisub
inc
imul
ret
neg
mov
lock
adc
jg
push
dec
mov
std
dec
push
repnz
jg
adc
dec
pop
test
stos
adc
or
ficomp
into
mov
xchg
mov
sar
jae
aaa
loope
clc
cmps
test
and
xor
ja
lds
mov
jnp
sub
xor
jnp
xchg
cmp
adc
add
adc
pop
cmp
inc
sub
xchg
adc
fcom
adc
cmp
jmp
loope
xchg
popf
popa
xor
mov
js
jmp
cmps
stc
lock
cmp
cmp
and
enter
aas
test
dec
jp
aam
clc
hlt
popf
sbb
sbb
int
nop
push
fmul
mov
jl
and
(bad)
cli
imul
test
dec
test
push
sub
arpl
imul
cmc
jg
sub
and
adc
push
jne
push
stos
into
jns
pop
test
or
addr16
mov
mov
pop
stc
pop
imul
mov
sahf
call
and
dec
add
int3
inc
mov
push
lea
xor
and
mov
sub
sub
or
dec
dec
pop
in
mov
and
int3
in
mov
enter
or
dec
cli
push
outs
xor
shl
push
push
jo
fwait
rol
movs
bound
and
popa
jo
jo
mov
and
sub
xchg
and
pop
stos
outs
fidivr
dec
(bad)
rcr
pop
dec
cmps
inc
mov
cmps
mov
sub
aam
cmp
push
mov
mov
pusha
out
ror
lods
dec
in
and
mov
push
jo
and
shl
aas
sbb
push
(bad)
jmp
push
cmc
in
adc
shl
call
pop
cwde
xchg
mov
mov
sbb
repz
hlt
mov
lds
pop
imul
out
cmp
xlat
mov
jecxz
jbe
sub
daa
ins
pop
test
xchg
pusha
jae
add
dec
sbb
cmp
adc
xchg
inc
(bad)
mov
mov
mov
and
cli
scas
int
and
hlt
cmp
out
mov
hlt
retf
shl
jo
mov
or
mov
rcr
xchg
xchg
push
scas
repz
ja
and
sub
into
iret
mov
in
mov
das
test
test
adc
cwde
cdq
adc
mov
push
push
push
jo
mov
(bad)
cmps
test
jecxz
shl
idiv
outs
(bad)
push
jge
(bad)
cmp
inc
les
jl
retf
sahf
cmp
mov
daa
xor
jno
cli
faddp
in
jle
jecxz
and
inc
hlt
cs
xor
cmc
loopne
repnz
inc
dec
sub
mov
ret
sar
lods
jnp
cmp
mov
push
push
xor
add
push
call
and
movs
and
sub
into
sbb
mov
test
mov
cmp
pop
arpl
test
xchg
push
push
ret
dec
shl
jge
repnz
jg
rol
neg
push
push
shl
fild
xlat
adc
cmps
rcl
in
sbb
cmp
arpl
xchg
dec
test
adc
fs
pop
inc
mov
call
cmp
stos
and
cmp
pop
jo
cmp
dec
std
mov
mov
repz
sbb
ror
push
retf
nop
mov
cmp
sbb
or
sub
sub
in
into
inc
or
jb
in
add
lea
mov
and
mov
daa
iret
mov
cmp
lahf
mov
jecxz
jnp
call
pop
imul
movs
push
(bad)
or
mov
adc
jb
dec
cmp
xor
jno
rcr
jl
inc
fwait
mov
jl
rol
add
test
cmp
out
push
pop
or
mov
mov
adc
and
jecxz
test
shl
jmp
dec
rcr
cmp
pop
jbe
cli
lds
bound
aad
cs
push
or
pop
ret
das
mov
mov
and
ins
mov
pop
jns
rcr
retf
and
sub
xor
or
sbb
mov
scas
inc
(bad)
xchg
cmps
cli
pop
mov
imul
sbb
call
inc
mov
in
pop
jnp
popf
leave
pop
shl
pusha
call
mov
cmp
ficomp
xlat
push
sahf
lods
adc
cmp
mov
xchg
aas
das
imul
in
lock
cmp
in
sbb
jmp
pop
aam
aas
aad
dec
je
mov
xor
test
nop
mov
add
mov
xchg
push
dec
inc
test
mov
and
pushf
adc
test
mov
mov
call
and
scas
push
cli
dec
pop
icebp
and
movs
push
arpl
out
sbb
sub
mov
push
adc
jnp
hlt
outs
scas
xchg
jmp
mov
xchg
sbb
repnz
inc
into
mov
jns
in
sar
cmp
push
sub
push
div
cld
clc
call
mov
adc
adc
cmp
lahf
jg
outs
pushf
movs
int3
(bad)
cmp
push
push
mov
hlt
test
jns
xor
ja
ds
cmp
cmp
jp
mov
xchg
scas
mov
push
xchg
sub
pusha
pop
fwait
push
mov
mov
xor
jb
mov
ret
sahf
retf
repz
mov
push
in
mov
fstp
add
push
pop
jmp
pop
xchg
test
sub
ret
push
jns
push
sbb
sub
or
(bad)
test
in
and
push
mov
mov
sbb
jb
gs
push
call
mov
not
push
sbb
xor
jbe
add
imul
mov
ret
adc
xor
jmp
cmp
out
sbb
xchg
push
enter
pop
push
mov
ror
and
shl
mov
xor
xchg
rol
sub
xor
jnp
in
iret
and
adc
repz
outs
inc
inc
outs
sub
push
mov
cmp
arpl
sbb
popa
outs
pop
cmp
outs
cmps
or
or
mov
call
mov
aas
cmp
sbb
pop
rcr
inc
or
sbb
and
jno
jmp
mov
jb
ret
inc
xor
stc
imul
push
icebp
and
xor
(bad)
ficomp
inc
mov
cmps
xor
popf
cmp
add
mov
repnz
xchg
adc
pop
es
pop
and
(bad)
fisub
or
sbb
lahf
mov
fwait
and
sbb
add
xchg
sbb
test
mov
loop
mov
pop
rol
xor
scas
mov
jecxz
pop
ss
adc
adc
and
fstp
sar
js
mov
rol
xor
and
aam
push
sub
int
push
int
adc
das
sbb
xor
movs
sahf
jmp
inc
pop
retf
cld
(bad)
iret
and
lahf
cdq
fs
shl
pop
jns
cs
mov
jge
mov
dec
jne
test
rcl
in
mov
cmp
xchg
in
(bad)
hlt
jecxz
jmp
mov
movs
call
ss
xchg
gs
adc
or
sub
jecxz
ret
sbb
mov
cmp
movs
jae
fldcw
mov
sbb
fdivr
mov
sahf
xchg
rol
push
add
lock
ss
mov
add
cli
ficom
in
mov
or
adc
(bad)
movs
call
adc
mov
or
inc
pop
call
or
stc
int
nop
adc
adc
es
mov
je
mov
(bad)
jge
push
rcl
sahf
adc
mov
outs
fdiv
(bad)
sbb
push
add
jecxz
ins
mov
cld
loope
cmc
xor
pushf
ins
leave
jle
das
pop
adc
cdq
and
stc
or
inc
push
loopne
push
inc
push
shr
xor
dec
lds
jl
mov
push
lods
int3
ror
fmul
aas
adc
xchg
dec
iret
outs
js
pop
imul
sub
movs
add
fld
pop
cmps
xchg
mov
dec
movs
fnsave
add
cmp
cmp
cs
push
pushf
leave
arpl
dec
in
cwde
lahf
dec
mov
mov
push
stos
sar
fwait
push
scas
mov
aam
pop
inc
adc
adc
sbb
jecxz
or
cmp
add
or
xchg
test
scas
(bad)
shr
leave
cmp
movhps
cld
out
ret
jns
push
pop
aas
cmp
inc
nop
in
sbb
sub
call
dec
cmp
arpl
(bad)
push
push
cs
push
xchg
ins
sbb
mov
add
xchg
pop
adc
jecxz
aam
xchg
adc
pop
xor
xor
daa
cwde
adc
movs
xchg
ins
push
dec
pop
in
out
jbe
nop
jo
scas
dec
mov
pop
fs
ins
and
icebp
and
jae
(bad)
icebp
dec
in
mov
test
repnz
cwde
mov
adc
std
adc
mov
pop
pop
mov
dec
mov
dec
dec
adc
data16
jne
pop
dec
and
sub
rol
inc
adc
mov
ins
jg
push
dec
repnz
(bad)
outs
mov
rcl
enter
loopne
xchg
push
push
mov
test
js
cli
mov
mov
mov
push
push
xchg
push
xchg
pop
in
retf
mov
stos
mov
les
sub
lock
repnz
jne
pop
pop
mov
fcomp
xlat
push
sbb
ror
jl
loopne
push
into
jmp
stos
outs
push
and
iret
fwait
sub
xor
popa
aad
mov
cmps
push
cmp
call
and
retf
cmp
adc
xchg
out
fs
shr
mov
daa
test
mov
xchg
add
ret
(bad)
dec
sub
fwait
pop
sbb
adc
mov
inc
jne
sahf
cmp
and
cwde
xor
out
jmp
jno
pop
push
(bad)
cmp
jmp
mov
(bad)
clc
lahf
ss
jo
aam
(bad)
adc
dec
mov
aad
stos
pop
lods
push
call
pop
addr16
adc
js
ret
loope
push
lds
add
dec
inc
and
jle
jnp
mov
lods
gs
into
jns
xor
mov
dec
adc
dec
in
addr16
and
or
ins
inc
lock
inc
mov
sub
and
lods
pop
mov
into
jp
xor
dec
shl
and
adc
scas
sub
pop
rol
jl
pop
std
mov
add
push
dec
dec
cmp
test
jp
push
outs
dec
mov
push
xchg
cmp
inc
mov
cli
jbe
jecxz
inc
lods
ret
in
jg
loop
push
sub
xchg
cld
inc
gs
iret
test
(bad)
shr
lea
mov
ds
pop
add
mov
xchg
push
(bad)
push
mov
mov
aas
and
sbb
inc
shl
sti
push
mov
or
in
cmc
test
gs
xchg
add
sbb
sbb
push
sbb
xchg
pop
dec
xor
imul
leave
inc
sahf
adc
(bad)
cld
leave
leave
jne
scas
sahf
pop
or
sub
add
js
cs
jle
call
lahf
jmp
push
inc
aas
aam
pop
shr
les
test
out
jb
sub
xchg
or
(bad)
cli
inc
cmps
add
adc
call
mov
in
mov
cmp
add
icebp
loopne
ss
dec
fcomip
mov
adc
aaa
jb
adc
mov
pop
leave
push
int3
jg
or
fst
pop
xchg
sahf
push
ss
pop
fnsave
loope
enter
jae
cmp
pop
dec
and
push
mov
add
psrlq
add
xor
mov
inc
imul
push
rcr
add
push
fdivr
push
psadbw
and
inc
pop
dec
sub
call
cmps
movs
push
pop
add
mov
repnz
add
sub
mov
int3
pop
(bad)
stos
mov
jnp
mov
test
push
fwait
ins
jnp
sbb
pusha
sbb
clc
dec
mov
loopne
rol
and
push
movs
push
stos
jno
mov
popa
sbb
cmp
xor
loopne
push
adc
jecxz
lods
sbb
jae
pop
mov
jbe
sar
inc
aam
mov
and
pop
loope
rcr
dec
shl
retf
pusha
cmps
push
stos
daa
pop
in
inc
leave
push
iret
jg
xor
gs
test
movs
add
sbb
jo
mov
out
mov
pop
rcl
mov
lods
ret
jo
stc
inc
inc
sbb
cld
mov
imul
dec
das
ins
sbb
pop
(bad)
xor
xor
call
mov
lock
mov
out
jg
push
cli
daa
adc
xchg
shr
ins
ret
lahf
pop
iret
pop
ss
mov
inc
inc
inc
int
push
call
sub
lahf
repnz
fbld
cli
pop
and
or
aas
fnstenv
jo
lock
or
cmps
aad
int
je
ins
push
xchg
mov
jns
sahf
scas
pushf
add
jne
xor
icebp
add
shr
mov
jbe
xchg
mov
lods
ret
xchg
cmp
pusha
fwait
loope
call
imul
enter
pop
dec
or
fcomp
sbb
in
mov
xchg
sahf
ror
sbb
dec
jl
jecxz
inc
fwait
push
push
push
cmc
sub
or
xor
jns
sub
mov
pusha
mov
scas
aas
mov
sbb
jb
xor
push
mov
jmp
xlat
loop
das
call
hlt
add
iret
(bad)
dec
mov
nop
ins
vroundps
push
dec
pushf
or
xchg
mov
dec
pusha
pusha
dec
pusha
loope
jo
mov
xchg
jmp
movs
ins
loop
jl
jge
push
mov
dec
jge
daa
cmp
nop
shl
adc
push
sbb
xor
stos
pop
ss
out
push
mov
stc
shl
jmp
or
or
xchg
std
aas
and
cwde
outs
loope
popa
cdq
add
(bad)
jl
and
aad
lods
dec
out
jp
sub
jb
fs
pop
call
(bad)
repz
sti
ret
cmp
cli
mov
rcr
cmps
or
ins
push
xor
adc
mov
cmc
mov
push
data16
jecxz
dec
mov
ins
xor
push
call
(bad)
je
icebp
les
ret
sub
lds
push
add
jmp
shl
mov
inc
and
sbb
out
ret
fst
pushf
xchg
shl
in
push
dec
cmp
xor
pop
sbb
mov
dec
daa
push
sbb
mov
jmp
dec
fist
clc
aaa
push
sub
mov
jb
jle
ds
hlt
push
iret
call
imul
(bad)
push
and
out
sub
push
loope
inc
adc
sub
add
lds
mov
pop
jmp
add
pop
call
out
sub
pop
dec
lahf
aad
int
(bad)
mov
bound
xchg
movs
adc
dec
test
dec
icebp
shr
push
or
loop
stos
leave
sahf
(bad)
xor
xor
sub
adc
lods
sub
out
aaa
retf
adc
push
dec
fsub
or
div
sub
mov
lea
adc
ficomp
sub
ret
imul
cli
mov
rcr
outs
sub
mov
adc
cwde
aas
les
lahf
into
push
pop
or
(bad)
dec
pop
or
retf
enter
cld
cwde
test
mov
mov
jmp
jmp
jns
sahf
mov
add
call
xchg
or
adc
push
pop
xor
cmp
jge
bound
repz
daa
pop
bound
or
stos
movs
inc
pop
mov
jle
idiv
bound
pusha
dec
mov
jle
ins
dec
dec
mov
div
push
mov
adc
push
add
sbb
rcl
pop
in
add
jg
inc
push
mov
jne
shl
jnp
or
mov
xor
bound
dec
ss
cwde
xchg
outs
lahf
ins
mov
stc
iret
jmp
mov
xchg
scas
pop
sub
ins
(bad)
out
(bad)
fld
inc
inc
cmp
rcr
push
and
and
(bad)
xchg
rcl
(bad)
(bad)
jle
int
lahf
sbb
popf
inc
in
cmp
fdiv
or
xlat
nop
fisttp
mov
inc
(bad)
ret
mov
push
mov
xlat
cmp
push
cdq
cmps
rcr
test
jmp
pop
iret
enter
test
movs
jp
not
and
mov
mov
cmps
mov
xchg
jae
mov
cld
hlt
adc
stos
push
ds
push
ret
push
sub
loopne
aaa
mov
jae
cmp
aaa
(bad)
fbstp
lods
loopne
in
cmps
out
push
mov
jbe
movs
pop
shl
(bad)
jmp
mov
neg
mov
mov
sahf
std
cmp
bound
fisub
and
dec
pop
clc
test
imul
jle
and
and
leave
mov
jno
add
mov
mov
adc
(bad)
mov
adc
mov
out
mov
jmp
sub
push
dec
cmp
pushf
popa
or
mov
iret
sub
lock
jge
aad
mov
scas
test
into
pop
bound
pop
lahf
int
adc
mov
pop
test
out
and
sahf
xchg
dec
sar
xor
xchg
dec
push
(bad)
repz
and
push
mov
popf
xor
xor
ret
stc
xor
das
mov
out
jo
lds
out
mov
inc
cmp
fcom
test
js
inc
pop
(bad)
dec
fmul
mov
mov
sub
das
sbb
dec
jo
mov
inc
(bad)
jge
mov
lods
and
or
xchg
push
xchg
unpckhps
or
sub
push
xchg
rcr
test
and
dec
adc
test
out
pop
adc
jae
scas
out
and
sub
ss
dec
inc
xor
jmp
sub
mov
mov
mov
cli
push
popf
mov
cs
pop
xor
or
xchg
fst
and
and
shl
xor
dec
and
add
ret
jle
aaa
or
inc
ss
or
loop
lea
sub
pop
pop
shl
out
call
add
push
imul
mov
retf
adc
xor
xor
mov
cmp
dec
ins
and
into
xor
dec
int3
scas
mov
sub
cli
jbe
data16
mov
dec
sub
pushf
in
gs
stos
xchg
add
ins
fist
push
in
and
jmp
in
fisttp
scas
ins
out
cmc
jmp
enter
xchg
or
and
jp
sar
adc
dec
ror
push
dec
mov
add
popa
icebp
out
rcl
lahf
push
sti
mov
mov
pop
mov
fsubr
cmp
xor
sub
enter
push
pop
(bad)
popa
xchg
mov
inc
pop
cdq
cmps
ret
jbe
cmps
cmp
or
cmp
mov
ss
pushf
je
lods
std
xchg
sar
sbb
cs
loop
into
add
les
dec
ret
jmp
test
jno
ds
jmp
inc
sub
jbe
in
pushf
aad
scas
sbb
arpl
push
cli
repz
rcr
test
pcmpeqd
push
out
or
adc
mov
(bad)
push
in
sbb
sub
mov
inc
add
xchg
in
ror
sub
lea
sbb
jne
adc
ret
neg
or
mov
adc
(bad)
jns
inc
push
push
xchg
push
xor
mov
jb
xchg
adc
mov
les
jb
inc
mov
or
cmc
addr16
outs
les
(bad)
or
fs
cmp
lods
mov
enter
and
jmp
nop
jp
mov
fisubr
clc
add
adc
shr
imul
bound
fld
rcl
iret
icebp
mov
push
enter
sahf
sub
outs
iret
xlat
iret
push
fidivr
xchg
shl
jne
cmps
or
adc
xchg
xor
lods
mov
xchg
test
mov
fdiv
mov
jp
mov
mov
or
jecxz
pop
(bad)
mov
movs
or
dec
inc
gs
mov
arpl
mov
sti
movs
nop
fldcw
ret
clc
pusha
xchg
xchg
sub
or
out
push
mov
mov
fmul
(bad)
adc
push
lahf
jmp
jecxz
mov
lahf
mov
or
sbb
pop
(bad)
(bad)
dec
xor
test
sub
scas
js
faddp
daa
fisttp
cmps
sub
loopne
push
es
jmp
enter
mov
mov
sub
sbb
lea
iret
or
jmp
cli
mov
test
mov
out
and
and
(bad)
out
push
inc
pop
mov
push
imul
xchg
mov
add
jns
clc
jmp
pop
sub
mov
xchg
mov
jo
jp
and
lods
not
hlt
xchg
(bad)
mov
sub
xchg
push
cmc
xor
retf
cdq
jle
cmp
xchg
movs
sub
ds
(bad)
out
cmps
lea
ins
aas
and
xchg
shr
jl
pop
mov
ds
fcom
ror
mov
fs
jmp
push
data16
out
repz
or
outs
cwde
(bad)
mov
cli
jo
mov
mov
add
xchg
mov
nop
jo
dec
cmp
cmp
mov
add
sbb
or
(bad)
and
or
xor
add
add
test
adc
cwde
adc
cld
push
ins
jno
jbe
ret
enter
(bad)
pop
jle
xchg
push
in
cmp
scas
cmp
adc
mov
sub
and
push
js
jnp
pushf
or
mov
xor
dec
push
jecxz
add
sbb
jp
out
sub
(bad)
xor
and
in
and
sbb
or
loopne
xchg
xchg
sbb
push
daa
push
jmp
mov
or
out
jl
mov
fldenv
fs
leave
dec
es
jnp
xor
pop
ja
(bad)
cmp
ror
mov
inc
imul
lods
cmp
xchg
mov
in
push
data16
jmp
mov
inc
and
inc
mov
add
add
loop
push
jl
sub
sti
outs
push
xchg
loope
fld
sub
retf
xchg
stc
xor
icebp
add
fs
rol
fimul
mov
adc
jb
cld
cmp
and
ja
int3
inc
xlat
rol
dec
gs
lods
into
add
ins
popa
add
(bad)
(bad)
pusha
dec
jle
jle
repnz
stos
out
shl
dec
xlat
jns
push
push
cdq
out
retf
arpl
jp
or
sub
dec
jle
lods
xor
loop
sahf
fdivp
cld
(bad)
cld
(bad)
cs
cmps
pop
out
stos
mov
scas
add
xor
ret
jle
clc
adc
mov
and
jbe
inc
add
mov
aas
xor
cmps
mov
push
inc
sahf
push
or
mov
inc
pusha
pusha
ret
fistp
call
ret
jns
dec
push
fs
mov
and
and
adc
inc
adc
mov
stc
call
push
xchg
sbb
or
xor
movs
les
outs
inc
fdivr
fild
wrmsr
bnd
dec
xchg
fistp
retf
adc
shr
loopne
xchg
pop
pop
fldcw
add
xchg
pushf
dec
ret
adc
mov
sub
mov
pop
mov
in
add
ret
(bad)
pop
push
cmps
sbb
rcr
(bad)
jbe
mov
jle
pushf
test
cmc
lods
fisubr
sbb
adc
adc
or
xchg
pop
add
outs
fdivr
repnz
cmp
xchg
imul
in
mov
(bad)
out
fstp
lea
push
sub
mov
test
dec
or
stc
inc
add
and
xor
push
sbb
jg
add
xor
cli
add
mov
add
into
mov
clc
push
outs
(bad)
adc
push
adc
inc
stc
fwait
cwde
mov
or
shl
sbb
sbb
sbb
inc
jge
fsubr
jp
inc
push
adc
jle
mov
pushf
xchg
and
push
mov
inc
dec
loop
icebp
and
mov
scas
inc
push
sub
xchg
mov
xor
xchg
mov
retf
movs
xor
retf
jl
adc
sti
(bad)
cld
adc
mov
sub
push
or
sub
xchg
jl
test
hlt
dec
pop
pop
push
sbb
dec
les
inc
xlat
jns
dec
inc
xchg
(bad)
into
dec
jmp
lahf
push
dec
(bad)
cmp
sub
sbb
dec
jmp
loope
retf
mov
mul
pop
int
xor
push
dec
retf
test
adc
std
cli
jo
mov
add
push
jbe
add
mov
jnp
inc
adc
inc
xchg
inc
and
jmp
daa
test
mov
pushf
sbb
rcr
dec
push
loop
fxch
and
das
cmc
adc
jno
or
sub
inc
aam
ret
cmp
pushf
outs
movs
fcmovnu
mov
cmp
adc
mov
sub
cs
adc
inc
or
icebp
popa
mov
dec
addr16
jmp
fbld
jns
pop
(bad)
sub
cmp
ins
pop
mov
(bad)
enter
adc
jle
pop
jnp
fcmove
je
(bad)
push
push
pop
in
pop
adc
or
or
cmp
push
stc
pop
xchg
or
iret
mov
sub
(bad)
fsubr
shl
pop
jbe
sbb
cmp
inc
ins
mov
add
inc
mov
in
cmps
push
cmp
sti
mov
jmp
mov
xchg
repnz
stc
or
push
ret
pop
mov
cmps
xor
pop
shl
cld
xchg
dec
cmps
scas
daa
outs
outs
sub
sub
cs
mov
inc
ret
mov
es
cmp
aas
ret
inc
sbb
jbe
test
(bad)
or
add
inc
test
xor
adc
pop
mov
cld
outs
fistp
cmp
mov
test
jecxz
neg
(bad)
mov
add
aad
push
sub
lea
in
xor
dec
adc
test
bound
xchg
mov
or
cmc
fidiv
sbb
add
sar
push
mov
jle
aam
inc
repz
jbe
jmp
lea
cwde
repz
retf
pop
pop
xor
and
fcmovnbe
fadd
or
mov
out
int
adc
mov
cmp
lock
hlt
dec
fsubr
test
ins
mov
cmc
mov
cmp
shl
daa
sahf
mov
xchg
arpl
push
mov
sub
pop
fwait
in
stos
ins
iret
aas
jge
inc
int
mov
in
mov
dec
push
push
mov
popa
sub
(bad)
in
dec
scas
ror
xchg
add
and
ja
imul
jmp
aas
(bad)
mov
jae
sbb
push
jle
test
inc
sbb
popf
pop
sub
dec
cdq
fstp
pop
pop
mov
push
test
jg
les
outs
test
mov
ins
dec
shr
jno
(bad)
pop
dec
cmp
and
adc
int3
mov
fidiv
or
xchg
or
fucomp
out
inc
jmp
data16
lock
mov
sub
(bad)
fidiv
mov
xchg
mov
in
iret
call
and
inc
add
addr16
aaa
lahf
leave
and
ss
fcomp
add
mov
dec
inc
or
cmp
sub
iret
stos
fucomi
inc
sahf
mov
sbb
call
data16
jns
mov
push
out
mov
ins
pop
inc
out
mov
pop
lods
xor
ror
mov
ins
adc
retf
xchg
mov
ja
mov
nop
pop
push
jbe
fnstcw
lds
add
inc
bound
pop
push
daa
or
sub
les
add
adc
mov
lock
add
sbb
and
mov
ins
mov
mov
xor
mov
ret
pusha
ficomp
cmp
sbb
enter
movs
aaa
cmp
cld
and
cmp
jno
jnp
ins
leave
mov
hlt
fiadd
jecxz
fidivr
mov
std
dec
cmc
rol
outs
sub
aad
jmp
mov
icebp
or
inc
fs
and
push
xchg
inc
sub
push
fsubr
xchg
shl
sbb
fisubr
jg
xor
adc
cmpxchg
and
imul
sub
stos
sub
mov
xor
pop
sbb
push
jmp
jecxz
sahf
cmp
out
fwait
aaa
push
and
stos
jo
sbb
mov
xchg
sbb
adc
aaa
push
inc
sbb
sub
std
dec
or
jmp
shr
inc
outs
js
dec
mov
in
addr16
test
repz
in
or
in
mov
push
sbb
cmp
mul
mov
gs
xchg
dec
and
pushf
dec
out
call
loopne
(bad)
stc
xor
xchg
sar
jmp
into
mov
rol
add
mov
aaa
test
adc
ins
dec
xor
loope
sbb
add
fs
add
cmp
nop
mov
sti
je
daa
adc
adc
jle
jo
cmp
add
stos
movs
imul
fdiv
cs
daa
pop
stos
loopne
out
mov
rcl
xchg
shr
pusha
cld
inc
js
mov
aad
mov
xchg
inc
push
sar
and
sbb
and
test
xor
cwde
lea
and
mov
fmul
arpl
aam
jg
cmps
out
(bad)
fwait
or
push
xchg
adc
rcl
inc
les
jae
mov
nop
int
fldcw
adc
dec
mov
(bad)
idiv
popa
ret
cmp
loop
bound
daa
and
adc
sub
cs
test
dec
in
fidivr
(bad)
fsubr
nop
jle
sahf
fiadd
sbb
push
sbb
xor
xlat
jge
je
mov
icebp
ds
add
les
shl
rol
pop
popa
repz
mov
cmc
cmp
adc
push
cld
mov
jo
shl
and
sub
and
dec
pop
adc
jge
cli
xchg
pusha
icebp
in
sub
rcl
shl
mov
xor
outs
xor
addr16
btr
jg
cmp
push
pop
xlat
jge
dec
gs
or
call
jge
jae
cmc
push
dec
in
mov
or
cld
fdiv
loopne
mov
aas
push
jle
push
popa
lods
mov
cmp
mov
mov
arpl
arpl
or
movs
push
push
gs
icebp
or
push
dec
pop
inc
cmp
ss
(bad)
pop
pushf
mov
add
inc
pop
jbe
xchg
mov
neg
ficom
xchg
in
jb
and
adc
xchg
xchg
cmps
int3
popf
(bad)
cli
enter
xchg
inc
dec
repnz
cld
or
ins
or
leave
mov
push
int3
inc
or
xchg
cli
lahf
int3
add
(bad)
scas
arpl
mov
push
push
shl
xchg
push
or
hlt
push
and
out
fdivr
ja
fiadd
scas
or
mov
div
sub
inc
sbb
rol
in
rcr
dec
inc
mov
dec
mov
lods
jo
cmp
stc
mov
dec
ds
ds
fmul
out
cmps
cmc
mov
sub
repnz
rcl
or
jb
aad
sbb
sub
mov
mov
ja
loop
xchg
call
or
mov
loopne
out
and
inc
or
sub
push
bound
mov
stos
or
pop
fwait
mov
mov
adc
sub
jle
sbb
repz
dec
xor
je
mov
loop
mul
sbb
test
in
loop
ret
out
leave
neg
fst
movs
fnstcw
push
sahf
xchg
mov
mov
mov
into
xchg
lds
mov
es
pop
retf
pop
test
sbb
xchg
xor
jno
(bad)
in
pop
(bad)
mov
inc
mov
in
fwait
addr16
cli
push
add
les
int
test
cmp
jmp
movs
add
add
pop
mov
mov
add
cmc
arpl
mov
inc
rcl
loopne
aas
xor
imul
rcl
movs
cmp
push
pop
xor
out
sbb
mov
ret
add
sahf
mov
sbb
push
push
mov
cmp
bound
sahf
push
dec
add
cmps
stos
push
mov
jp
mov
ins
ds
cmc
cmp
jnp
sub
jns
cmp
lds
stos
loope
vpaddq
pop
mov
sbb
add
mov
into
fbld
ja
xchg
in
retf
mov
xchg
fidivr
push
ror
jno
daa
pop
loopne
push
push
jmp
add
outs
jno
jbe
jns
xor
ret
mov
sbb
cmp
xor
fnstsw
popf
mov
jne
cmps
ins
pop
mov
mov
jbe
and
dec
cmps
mov
movs
xchg
ret
sbb
cmp
xchg
movs
mov
fwait
aaa
fcomip
je
in
jae
mov
pop
sbb
pop
cld
cli
xor
jae
dec
retf
inc
add
cmp
fimul
cmp
bound
stc
push
push
fnstcw
(bad)
fsub
mov
shl
bound
ret
jmp
mov
inc
mov
mov
in
sbb
mov
mov
pop
das
mov
inc
mov
and
repnz
push
fsubr
hlt
push
add
add
(bad)
ror
or
xchg
sbb
jle
nop
sbb
loop
loopne
dec
daa
xchg
and
jnp
dec
mov
xchg
je
cmc
movs
scas
ja
jb
jns
dec
(bad)
ret
jmp
loop
cld
and
dec
pop
test
and
xlat
mov
out
dec
fwait
sub
sbb
jnp
loope
mov
je
lds
cli
movs
jecxz
xchg
stos
daa
test
je
das
(bad)
jae
movs
mov
mov
mov
inc
in
fcmovnbe
sbb
dec
mov
add
mov
lea
pop
cmp
ins
scas
add
xlat
iret
pusha
lods
pop
adc
jo
push
jne
test
mov
lods
jno
cdq
xchg
inc
bound
nop
fsubp
xor
pop
ret
and
push
cmp
nop
fidiv
xchg
shl
ret
push
fs
or
(bad)
or
inc
lock
imul
ins
in
xchg
je
inc
cmps
rcl
or
and
shl
test
mov
jg
sbb
xor
(bad)
inc
inc
(bad)
jb
scas
dec
inc
ins
ja
lods
mov
(bad)
les
es
add
inc
push
bound
icebp
mov
scas
imul
mov
adc
cmp
aam
out
cdq
cmp
xor
cs
aaa
or
test
sub
shl
pop
push
jmp
rol
es
push
jg
add
enter
push
xor
repnz
pop
cmp
sbb
jns
mov
or
jns
aas
es
inc
cmp
sti
adc
call
cmp
xchg
xchg
mov
scas
jae
cmps
and
xor
jg
in
movs
aad
inc
inc
ret
add
add
mov
xchg
mov
mov
push
cmp
psubsw
popf
xchg
sahf
pop
add
cmps
cwde
xchg
ret
mov
sbb
jmp
icebp
fcomip
scas
mov
dec
pop
and
jne
sub
jl
fwait
call
jno
rcr
imul
add
mov
push
jo
jl
and
test
les
ins
int3
mov
inc
lods
push
push
inc
out
ss
jmp
sahf
jns
jae
xor
push
fstp
jle
jge
sar
jb
cmp
call
shl
add
push
frstor
in
cmp
push
adc
les
jmp
xor
shl
pop
dec
sahf
fsubr
xor
jp
arpl
je
out
push
hlt
sub
fidiv
xor
jmp
xchg
in
data16
retf
sti
cli
in
xor
and
or
cmp
and
mov
aas
adc
movs
xchg
sub
cmps
movs
mov
dec
mov
ret
inc
add
cmp
or
jge
in
cld
pop
shld
mov
pop
and
ret
aaa
add
push
hlt
rol
mov
mov
test
(bad)
lock
ret
inc
xchg
push
rcr
cs
shr
cmp
jp
add
sar
das
add
push
ja
mov
push
xor
popf
mov
inc
les
mov
mov
(bad)
aad
push
call
push
dec
loopne
xor
outs
and
lods
imul
mov
xchg
cs
pop
stc
xchg
fs
xor
frstor
xor
rcr
mov
sub
or
js
push
jle
mov
(bad)
pop
push
pop
xor
jl
imul
out
mov
xor
mov
adc
retf
jno
xor
cld
pop
add
pop
inc
push
sub
inc
inc
test
es
or
xchg
(bad)
lods
add
in
mov
(bad)
(bad)
or
outs
clc
add
push
pop
stos
imul
sbb
iret
call
and
les
mov
xchg
dec
sbb
fcomp
mov
jl
sbb
pop
lahf
add
inc
bound
leave
ror
(bad)
(bad)
pop
icebp
mov
cmp
(bad)
xor
mov
mov
sbb
jb
sub
bound
jne
push
loopne
adc
loopne
pop
lds
xchg
mov
daa
sub
mov
sbb
movs
imul
aaa
(bad)
xchg
add
dec
pop
cmp
sbb
stos
xor
data16
sbb
xor
pop
in
sbb
mov
push
cli
jp
pop
imul
and
push
std
addr16
push
aad
ret
mov
shl
push
pop
iret
jecxz
bound
sub
fimul
add
stos
test
jmp
pop
in
mov
pop
pop
pop
adc
shr
std
dec
or
sub
xor
mov
fcomp
not
push
sub
cld
xor
sub
ins
pop
pop
adc
and
xor
sub
jne
scas
jne
ja
jo
inc
pusha
stos
mov
pusha
xchg
dec
jge
daa
adc
inc
mov
xchg
dec
jne
das
sbb
push
pop
adc
xchg
sub
ja
repz
icebp
inc
or
inc
jo
in
push
loop
xor
cmp
outs
pushf
fsubr
bnd
in
fdiv
mov
pop
xlat
inc
sub
mov
call
leave
push
mov
lea
mov
int3
adc
sti
inc
imul
jne
add
or
inc
xor
push
push
repnz
nop
jmp
cmp
test
xor
dec
mov
push
push
lods
push
jg
loope
push
jp
xchg
push
sbb
push
inc
imul
xchg
pop
out
cld
(bad)
pop
inc
xchg
jbe
in
fcomp
out
and
push
sbb
outs
jae
xor
lahf
add
adc
xchg
mov
adc
adc
jae
sbb
mov
pusha
ins
sub
retf
sbb
cld
adc
mov
(bad)
enter
fistp
jp
fsubp
and
push
jmp
adc
sbb
dec
movs
pop
outs
test
ret
out
scas
bound
push
sti
sti
or
xor
sub
mov
sahf
mov
(bad)
aam
pushf
scas
icebp
cmps
shl
gs
xor
inc
mov
out
jne
jmp
adc
rcr
mov
test
sar
stos
ja
cmp
sbb
inc
fdiv
xor
sbb
or
(bad)
and
test
out
mov
scas
sub
std
adc
std
stc
jp
add
or
jnp
xor
jbe
div
adc
mov
adc
push
stos
or
mov
add
jle
mov
jns
scas
and
fwait
mov
jle
inc
retf
ret
pop
call
mov
dec
cmp
jnp
mov
mov
sub
jo
call
out
fdivr
(bad)
mov
daa
xchg
hlt
push
lahf
div
std
mov
mov
xor
push
pop
es
fisttp
jl
pop
xchg
or
es
adc
imul
xor
push
push
rcr
outs
div
ins
popf
adc
int3
push
(bad)
call
add
movs
jp
ret
push
pop
out
(bad)
mov
mov
stos
emms
mov
mov
dec
mov
stc
push
xchg
sbb
pop
xor
xlat
mov
mov
ficom
cld
outs
adc
sahf
push
or
jb
sti
sti
je
mov
dec
add
jmp
jge
in
call
jg
ins
pop
in
xor
ret
pop
sti
or
aam
(bad)
loope
imul
add
aaa
(bad)
push
mov
imul
iret
dec
daa
jmp
or
pop
rol
call
mov
add
dec
or
rcl
popa
iret
xor
mov
jne
inc
inc
mov
inc
mov
fnsave
pop
cwde
sti
idiv
dec
pop
in
ror
xchg
into
js
push
test
push
pop
push
mov
adc
push
or
pop
jne
fistp
mov
jle
cmps
cs
push
cmps
test
dec
lahf
scas
test
push
loopne
push
add
iret
(bad)
mov
mov
ss
xchg
leave
fistp
ja
scas
jbe
or
sbb
dec
clc
mov
jle
mov
call
push
sub
(bad)
or
jmp
movs
pop
and
xchg
retf
jmp
push
pop
pop
out
sbb
jmp
loop
test
push
or
xor
(bad)
test
repz
imul
inc
mov
xchg
pop
sub
retf
fist
inc
out
xchg
push
icebp
adc
cmps
mov
mov
call
push
retf
sbb
and
aaa
fistp
gs
mov
xor
arpl
bound
jae
sub
jbe
call
std
rcl
aaa
aad
scas
inc
outs
fs
push
push
stc
repnz
inc
and
fbld
sbb
jp
xchg
mov
mov
icebp
or
add
repz
sti
sbb
add
shl
sub
xor
fcomip
daa
pop
or
aam
push
movs
lds
add
in
push
dec
inc
cmps
not
push
mov
fdecstp
xor
stos
push
js
xchg
mov
jno
cmp
loop
mov
xlat
sub
xchg
frstor
imul
xor
std
fisubr
sub
lahf
call
stos
jae
gs
mov
add
sbb
in
clc
leave
cmp
scas
sub
push
push
push
ret
jg
leave
sub
cdq
mov
jp
mov
pop
xchg
add
mov
and
dec
mov
sti
and
jne
xchg
xor
xchg
shl
xor
jp
dec
add
dec
jmp
(bad)
mov
pop
sub
dec
pop
push
test
ins
jns
or
fnsave
fbld
test
or
or
jae
push
pusha
loop
imul
push
xor
jne
and
inc
clc
pop
pop
(bad)
iret
in
or
xchg
sar
inc
sub
xchg
add
shl
repnz
sbb
cld
mov
sub
ja
fistp
mov
retf
xor
adc
dec
push
fs
sub
clc
mov
xor
ins
popf
sbb
sub
test
leave
push
jl
dec
push
adc
cmp
cdq
mov
xchg
aas
push
es
mov
arpl
mov
gs
cwde
push
sbb
add
retf
xchg
pop
cmps
es
xor
out
xor
je
sahf
push
jmp
sbb
dec
xor
(bad)
in
repz
adc
sbb
fisttp
cmps
cmp
jg
movs
sbb
test
jg
call
hlt
push
lahf
sub
jo
lock
dec
xchg
or
shr
push
jae
jnp
int3
push
scas
ss
sbb
mov
int
lock
lea
sbb
or
mov
out
jge
push
gs
jns
jge
sbb
por
addr16
test
xchg
inc
into
jecxz
rcl
sub
leave
inc
jne
jns
mov
popf
popa
(bad)
idiv
adc
xor
or
lea
pop
int3
std
lods
cmp
mov
sub
mov
dec
(bad)
jmp
xor
xchg
dec
aad
hlt
pop
xor
nop
cdq
jns
sar
call
mov
ins
jge
ret
js
dec
jo
scas
xor
mov
gs
sub
stc
or
mov
mov
mov
pop
jno
aas
into
dec
jb
sbb
fs
dec
add
rcl
add
in
mov
hlt
dec
clc
pop
rcl
sub
loop
and
add
js
xchg
or
mov
nop
retf
xor
push
jnp
fld
cmps
xor
imul
aam
out
cmp
dec
fnstcw
sbb
pusha
(bad)
and
cdq
movs
mov
out
or
pusha
ret
test
adc
and
ret
mov
lods
xor
xor
jecxz
sub
cmps
xchg
shl
gs
push
in
gs
dec
repnz
nop
(bad)
pop
scas
inc
xor
xor
sbb
cwde
xchg
icebp
(bad)
movs
out
xchg
xor
or
(bad)
rol
js
test
aad
push
mov
inc
mov
loope
lock
jle
push
mov
mov
scas
add
cs
loop
(bad)
cld
xor
es
cmp
push
and
sub
or
dec
or
jle
ins
mov
add
jecxz
pop
sbb
xor
inc
mov
sbb
lea
je
xor
pop
dec
mov
mov
mov
fimul
cmp
mov
jns
inc
pop
loopne
(bad)
sub
(bad)
(bad)
stc
imul
add
cmp
cmps
add
jns
addr16
imul
and
sub
mov
push
pop
or
aas
sbb
mov
xor
imul
add
mov
(bad)
shr
dec
push
pusha
dec
push
xchg
stc
inc
xor
aaa
ffreep
mov
and
sti
out
call
lahf
adc
loope
ins
xchg
sub
xchg
invd
pop
adc
nop
jbe
sub
addr16
cld
sti
jno
mov
popa
adc
and
sub
lahf
ja
(bad)
popf
test
jmp
jmp
ret
je
cmp
push
mov
leave
outs
je
pop
push
cmp
cmp
out
cmp
test
in
cmps
ds
dec
sub
inc
and
and
movs
test
and
call
push
pop
adc
aas
push
cmp
pop
jg
arpl
ret
pop
jl
call
ror
xor
dec
lds
sahf
pop
cmp
aad
xchg
pop
inc
(bad)
call
xchg
xchg
adc
jge
pop
aas
pop
aam
shr
mov
cmp
shl
sbb
dec
(bad)
pop
cmp
mov
cmp
pop
cdq
scas
pop
mov
mov
mov
ret
(bad)
(bad)
mov
mov
dec
mov
ja
repnz
cmps
jno
out
mov
jb
inc
sub
(bad)
xor
lea
out
jno
(bad)
push
xchg
rol
out
cld
scas
(bad)
jnp
inc
dec
jecxz
mov
in
in
add
ret
outs
inc
mov
mov
pop
push
das
dec
adc
sar
test
sbb
call
clc
inc
inc
stos
mov
mov
xlat
cmp
jp
inc
push
out
dec
js
xor
es
mov
mul
push
mov
and
push
pop
(bad)
mov
(bad)
lock
(bad)
mov
inc
push
ret
push
or
cmp
(bad)
mov
fmul
cmp
mov
ins
jno
xchg
neg
das
outs
sbb
cdq
jne
cmps
push
xchg
retf
xchg
retf
fild
out
test
int3
int3
fwait
hlt
add
aas
mov
mov
outs
push
push
jmp
and
pop
adc
outs
loopne
cs
dec
shr
popa
out
ss
mov
xor
or
retf
dec
push
cmp
ret
stos
pop
push
cmp
ficomp
dec
fwait
and
mov
dec
lahf
lods
sub
js
xchg
mov
stos
push
adc
(bad)
pop
retf
aaa
mov
repz
shl
lods
mov
jbe
sahf
and
pop
popf
aas
sub
ins
dec
(bad)
xchg
push
pop
test
(bad)
pop
pop
dec
sbb
add
hlt
test
cld
cmps
popf
cmps
mov
jmp
pop
repz
daa
mov
ret
in
push
rol
je
push
jg
test
popa
arpl
mov
scas
adc
inc
sahf
jb
dec
call
daa
mov
pop
xor
shl
adc
jae
sti
adc
bnd
fistp
or
fwait
jg
dec
std
cmc
jno
cmc
mov
and
inc
dec
push
mov
dec
or
push
mov
sbb
sahf
popa
mov
loope
jge
and
fmul
adc
outs
jnp
sub
(bad)
fnsave
(bad)
add
jp
xlat
rcr
out
aam
lds
dec
push
out
mov
push
cmc
nop
and
inc
dec
ja
jnp
jb
clc
test
xchg
mov
inc
pop
data16
mov
(bad)
in
add
xchg
gs
loope
sub
arpl
mov
mov
ja
jae
les
xor
adc
call
loope
icebp
lds
adc
sbb
xchg
scas
dec
aas
popf
push
or
mov
pop
addr16
adc
test
jp
stos
dec
mov
push
cmp
jae
pop
xlat
push
mov
in
mov
inc
not
loop
inc
je
and
cmp
cmp
fucomp
popf
fsub
jo
and
jmp
and
mov
add
lods
mov
jl
xor
or
sub
and
cmp
pop
repz
es
imul
aas
fstp
outs
cmp
push
add
or
lods
test
hlt
out
sar
push
pop
call
(bad)
sbb
mov
ins
push
fcom
cmps
movs
cli
and
test
popf
(bad)
xor
pop
(bad)
sbb
cmp
xchg
fistp
pusha
arpl
imul
jecxz
cmp
mov
jb
aad
push
icebp
ficomp
in
add
xchg
inc
xor
push
imul
cmp
xchg
sub
xor
data16
repnz
add
add
outs
inc
mov
ins
mov
push
pop
pusha
iret
xchg
stos
out
fdiv
sbb
sbb
cmc
add
mov
mov
jmp
bound
mov
ja
repz
adc
mov
imul
sub
sbb
adc
mov
push
mov
jae
or
outs
nop
push
add
arpl
test
sub
push
sub
shl
fld
lods
aam
ror
pop
sub
xchg
repz
jns
cmp
cmp
mov
retf
pop
pushf
inc
fimul
sahf
add
dec
sbb
mov
scas
xchg
or
sub
add
mov
call
fdivr
inc
xor
aas
adc
scas
in
or
lea
push
test
sahf
pop
or
xchg
imul
xchg
gs
fs
jge
clc
add
leave
xchg
or
mov
and
pop
xor
jbe
cmp
pop
div
or
cwde
jle
add
adc
cmps
sti
loope
call
aam
mov
div
ror
dec
popf
inc
xor
xor
cmps
mov
cmp
mov
mov
int
push
int3
pop
in
and
(bad)
fs
and
outs
pushf
jg
xchg
int3
or
test
xor
shr
call
pop
cmc
and
imul
push
arpl
in
rcr
idiv
or
(bad)
fyl2xp1
arpl
aaa
leave
dec
lea
je
dec
fcomip
sub
in
(bad)
xchg
dec
aam
psllw
jne
mov
or
mov
sbb
in
loop
cmp
in
lods
sbb
fist
call
xchg
sub
pop
jae
mov
das
and
xchg
aaa
outs
jae
rcr
pop
adc
fdiv
rol
sbb
jmp
ret
rol
mov
test
fs
sbb
icebp
out
xor
div
repz
mov
jmp
push
add
cli
push
leave
or
int
pop
adc
daa
adc
mov
stc
adc
adc
mov
dec
stos
add
mov
fcomp
pop
out
test
jp
iret
cmp
cs
lods
loopne
and
stos
inc
jae
add
retf
pop
(bad)
rol
jle
ret
ret
daa
fsub
sbb
mov
xor
repnz
not
push
(bad)
xchg
lds
in
lods
push
shl
mov
fadd
jp
xor
adc
arpl
ja
mov
jae
loopne
rol
mov
out
jg
xor
repnz
sbb
sbb
shl
scas
mov
add
mov
jge
push
shr
jmp
icebp
popf
iret
push
mov
lea
scas
push
into
cmc
retf
dec
cmps
lds
mov
lods
iret
js
mov
xchg
aad
retf
ja
jle
mov
(bad)
xor
push
mov
mov
out
ds
aam
mov
ficom
pop
dec
cmp
test
cmp
dec
mov
xor
loopne
cs
cmp
xor
jmp
out
shl
xor
mov
mov
sub
call
adc
imul
into
lahf
add
inc
adc
sar
rol
sub
lea
mov
and
xor
xchg
outs
jmp
cmp
sub
int
test
test
nop/reserved
lods
xchg
push
je
jmp
mov
push
stos
xchg
dec
jmp
jecxz
clc
sahf
jns
clc
out
dec
sbb
mov
mov
cwde
int
in
lods
xchg
jne
aas
not
inc
rcr
xor
xchg
out
int
std
fild
inc
mov
sub
ret
xor
fwait
in
in
jp
inc
lods
push
jl
std
sar
int3
or
push
or
nop
mov
mov
push
retf
dec
add
in
mov
in
rcl
pop
push
xchg
shl
lock
jecxz
push
aas
hlt
push
sti
xor
inc
jp
sbb
mov
int
and
mov
push
clc
or
movs
out
cwde
mov
mov
cwde
mov
sub
add
mov
out
mov
pop
ins
mov
sbb
cli
xor
les
cmp
jbe
sub
shl
jb
cmp
inc
adc
lahf
and
stos
in
xchg
imul
fs
xor
movs
and
mov
jp
fist
adc
outs
pop
push
or
sbb
mov
cld
inc
jnp
and
popa
jecxz
loop
lods
pop
pushf
cmp
in
popa
fbld
retf
push
xchg
ja
fcomip
pop
jbe
dec
pushf
call
sub
les
ss
(bad)
sbb
dec
inc
cmp
aam
add
mov
pop
jl
(bad)
jo
mov
add
pop
pushf
xchg
or
mov
mov
jo
icebp
mov
sbb
dec
test
dec
adc
pop
mov
(bad)
mov
xor
mov
dec
ins
jmp
adc
pop
mov
adc
add
sub
out
call
add
cmp
call
adc
add
call
xor
xchg
and
jmp
jle
cmps
xchg
mov
push
in
cmps
lods
(bad)
mov
sub
add
xor
gs
sbb
shl
into
jno
add
leave
ins
mov
nop
or
push
(bad)
scas
xchg
sub
or
pop
sub
nop
xchg
stos
xlat
loope
or
fist
jnp
cs
cmp
cwde
adc
ret
push
fimul
inc
nop
cmp
xlat
ja
fcomip
bswap
sti
pop
sub
(bad)
lods
pop
rol
mov
inc
shl
and
pop
out
dec
mov
inc
push
xor
int
mov
icebp
inc
fmulp
mov
jbe
push
sbb
mov
cmp
loope
loope
ins
ret
aaa
lods
add
jb
sahf
add
push
ficomp
inc
or
pop
jae
jmp
cmps
adc
inc
add
enter
inc
clc
jb
rcr
and
cmp
push
sar
icebp
xor
xor
sbb
in
pop
mov
adc
push
xor
hlt
test
cli
push
jmp
lock
cmp
cmc
sbb
jg
dec
dec
xchg
cmps
test
cmp
gs
aaa
xor
push
out
test
js
call
mul
test
mov
loopne
sub
pop
pop
fwait
or
addr16
xchg
(bad)
mov
jmp
imul
jbe
jns
pop
dec
pop
and
cs
push
push
popa
rcr
arpl
cdq
cmp
pushf
jl
sub
adc
sbb
mov
add
mov
clc
xor
aaa
xchg
jge
fisttp
cli
cmp
(bad)
lock
ret
xchg
inc
imul
adc
mov
ficomp
or
mov
push
or
mov
cmp
in
dec
cmp
jbe
and
cmp
imul
retf
gs
or
mov
mov
loope
ror
add
std
dec
mov
ret
fst
lea
and
add
xlat
mov
rcl
fs
dec
add
xchg
sbb
push
inc
pusha
lock
sbb
pop
aas
mov
xchg
jmp
not
sbb
sub
cli
push
and
js
stos
sbb
mov
dec
adc
test
dec
add
fadd
pop
adc
ret
sub
sub
xchg
pushf
shr
movs
inc
in
outs
aaa
add
mov
dec
mov
je
and
jb
stc
jp
adc
(bad)
cmc
loope
in
or
xor
aaa
fdiv
enter
sub
sbb
jno
jge
mov
retf
push
in
pop
fisub
jnp
dec
imul
aas
inc
fld
aaa
or
sub
and
jbe
int3
pop
mov
sub
xlat
pop
xchg
aaa
xchg
or
js
imul
out
inc
ds
mov
add
cmps
scas
xchg
stos
lock
cmc
(bad)
int3
or
dec
nop
sub
cmp
call
in
xchg
test
xor
mov
or
add
add
sbb
mov
repnz
sbb
and
into
outs
pop
hlt
popa
inc
repnz
sub
shr
iret
or
bound
jno
out
mov
mov
and
imul
outs
shl
pop
xor
or
les
mov
mov
ss
test
call
jecxz
add
adc
mov
inc
jo
int3
(bad)
push
outs
or
popf
call
aad
hlt
pop
lock
retf
pop
sub
fnstcw
push
adc
ret
lods
cmp
scas
add
outs
iret
stc
pop
add
lods
cmp
jo
sub
(bad)
clc
or
xchg
sahf
rcl
popf
or
jmp
cmps
in
shl
push
stos
or
mov
js
jno
xlat
sahf
adc
add
and
cmp
ins
out
sbb
into
imul
iret
cmp
adc
loop
mov
scas
sub
aas
or
sar
push
adc
xor
inc
ja
popf
ss
fisttp
xor
jmp
push
fsqrt
xor
fmul
mov
cmps
repz
popa
in
lods
pop
jnp
add
ss
cmp
adc
ins
outs
fadd
sub
dec
loope
jg
and
imul
jbe
inc
mov
sbb
nop
vaesdec
add
xor
cmps
pop
call
sti
call
pusha
mov
iret
in
jae
sbb
pop
dec
jge
add
pushf
jmp
add
pushf
adc
inc
push
(bad)
mov
adc
pop
xor
dec
sti
push
push
(bad)
retf
mov
ja
shl
neg
shl
repz
(bad)
xor
div
stc
shl
jo
lods
xlat
jp
rol
mov
shl
imul
sub
add
(bad)
add
push
cdq
mov
jecxz
dec
arpl
mov
int3
jae
jnp
cmc
jp
dec
into
push
mov
jbe
pop
mov
popa
stos
pop
mov
ins
pop
inc
xchg
xchg
call
inc
into
call
dec
xor
inc
add
sti
fidiv
cmp
outs
scas
push
mov
mov
mov
arpl
xchg
idiv
or
scas
ins
pop
mov
jge
pop
retf
popf
adc
push
loop
xor
xchg
xchg
movs
or
fidiv
pop
cwde
loope
icebp
iret
mov
cmp
leave
or
hlt
fiadd
sub
push
sub
sub
shr
mov
cmp
clc
outs
cmps
push
xchg
jno
push
mov
loopne
in
mov
and
daa
nop
jle
mov
retf
adc
xor
pop
inc
mov
xchg
cli
dec
sub
lods
std
int
sbb
lock
ret
push
xchg
mov
sbb
imul
je
or
or
loop
cmp
inc
ret
xlat
cmp
xlat
retf
retf
(bad)
cmps
xchg
inc
enter
and
test
pushf
jbe
ss
out
inc
jae
retf
mov
enter
out
cwde
idiv
mov
call
adc
sbb
mov
and
mov
fnsave
and
dec
jns
sub
push
xor
or
aas
rcr
push
idiv
cmp
xchg
mov
and
retf
sub
xor
push
movs
sub
mov
or
test
fstp
pop
mov
mov
push
stos
mov
adc
xor
call
test
stos
cmc
push
sahf
ror
jbe
push
pop
push
jle
in
pushf
fisttp
cld
fs
jecxz
(bad)
push
in
jns
iret
xchg
xchg
test
scas
outs
(bad)
add
push
dec
push
mov
pop
idiv
out
mov
xor
cli
push
stos
fistp
sbb
sub
dec
sub
jbe
jmp
out
test
jno
sbb
pop
cmp
fnstenv
add
sbb
test
mov
and
mov
jecxz
sbb
cmp
cmc
push
ror
xor
xchg
ficomp
pop
jnp
cmp
sub
fisubr
xchg
outs
mov
sbb
jg
imul
and
fimul
xchg
mov
or
scas
out
push
push
fsubp
mov
popa
sbb
or
cli
jg
cmp
shl
inc
mov
sub
out
mov
xchg
fnstcw
sbb
push
int3
out
mov
and
sti
jae
mov
rcl
jl
rol
xchg
and
and
jbe
pop
repnz
ja
pushf
fdivr
jns
mov
es
loope
mov
sbb
mov
xor
adc
mov
inc
jbe
pop
mov
cmp
xchg
cmp
adc
mov
push
mov
sub
dec
call
ds
mov
icebp
sub
stos
cdq
adc
je
out
lahf
xchg
pop
ins
sahf
pop
lods
dec
and
xchg
rcr
leave
std
jbe
xlat
push
aam
test
sub
xchg
out
cmp
mov
mov
push
mov
mov
and
inc
sbb
daa
sub
lods
mov
dec
mov
push
es
stos
or
(bad)
in
pop
hlt
adc
(bad)
mov
jne
outs
and
repnz
jmp
test
call
fwait
jns
(bad)
jbe
aam
and
test
ret
push
cmc
sti
fisub
in
or
xchg
call
mov
cdq
mov
into
sub
and
pop
icebp
pop
call
push
xor
(bad)
jmp
ins
stc
pushf
mov
push
mov
mov
stos
mov
dec
mov
cmp
jmp
jnp
push
mov
test
adc
aam
das
xchg
cwde
xlat
xor
pop
loope
aam
das
add
fimul
sbb
hlt
out
outs
cs
jbe
ds
push
fs
push
(bad)
push
xor
mov
stos
or
enter
in
adc
jmp
mov
rcl
lea
dec
push
add
fdivp
enter
add
loope
or
pop
xchg
in
cmp
jb
push
sub
cmp
pusha
lods
push
pop
movs
and
push
jnp
fs
push
adc
cmp
mov
xor
xchg
sbb
fstp
xchg
pop
(bad)
retf
and
clc
add
pop
inc
push
cmp
mov
pop
mov
jle
clc
inc
adc
sub
bound
mov
add
pushf
outs
jmp
cmp
add
push
mov
stos
mov
pop
int3
jge
call
xor
das
fnstsw
cli
push
jecxz
data16
push
add
movs
aam
mov
or
iret
iret
jno
push
xlat
sbb
cwde
icebp
sar
pop
xchg
jnp
sub
sar
dec
sbb
cmc
fcmovu
mov
adc
mov
dec
(bad)
dec
adc
cmp
sar
cmps
hlt
sti
xchg
arpl
cmp
push
out
mov
mov
ins
ret
push
pop
dec
cmps
xchg
pushf
push
dec
sub
jb
pop
lds
add
sbb
inc
add
stc
ret
push
mov
sahf
mov
cmc
jae
and
neg
cmp
leave
xchg
ins
and
lods
(bad)
adc
nop
dec
iret
sti
ret
loop
xchg
icebp
inc
or
adc
pop
ins
stos
rcr
sub
cmp
add
push
push
push
pop
data16
out
scas
hlt
push
sub
push
cwde
icebp
imul
push
mov
mov
or
(bad)
jecxz
mov
jo
xchg
inc
shl
push
(bad)
adc
inc
and
or
and
xchg
adc
and
adc
popa
jge
jmp
and
iret
test
rcl
mov
cmp
cmps
add
fwait
push
mov
and
cmps
clc
pop
leave
pusha
sub
cmc
ss
push
ins
pop
fwait
ret
sub
mov
nop
shr
test
ja
cwde
pop
fldcw
mov
lahf
xchg
cmps
adc
popa
sti
repz
add
popa
or
push
ins
inc
test
in
js
jbe
shl
mov
sub
adc
rcr
or
and
sub
xor
stos
pop
jle
imul
xchg
sub
and
add
dec
xor
dec
cdq
and
fmul
scas
aad
xchg
sub
inc
loopne
mov
lods
or
add
stos
sbb
jp
sbb
adc
dec
jo
inc
fs
adc
jl
lahf
jecxz
test
cdq
inc
popa
cmc
dec
adc
imul
adc
lods
cld
es
bound
fld
retf
mov
cmps
jbe
mov
jb
cmp
loope
push
repnz
icebp
fcom
les
cdq
icebp
sub
push
dec
mov
xchg
popf
sti
sub
adc
inc
pop
pushf
mov
mov
loop
jb
movs
sub
(bad)
jmp
jg
jbe
xchg
mov
pop
sbb
and
jae
or
scas
shr
push
dec
and
cmp
inc
dec
fdivr
pusha
mov
loop
push
mov
(bad)
std
hlt
sbb
dec
fwait
jno
js
add
jb
inc
jb
push
inc
mov
aaa
dec
cmps
add
dec
repz
mov
mov
outs
dec
std
cmp
mov
and
cmp
test
jecxz
out
je
mov
call
mov
mov
fnstenv
fsubr
cmp
ficomp
aaa
pop
loopne
aaa
xor
jmp
push
cmps
imul
fsub
or
es
sbb
pshufw
adc
movs
jbe
sar
out
mov
fistp
adc
push
mov
cmp
ja
shl
sub
das
std
retf
jnp
sbb
nop
mov
in
mov
fsubr
dec
inc
into
dec
sbb
lods
inc
or
jae
push
fisub
pushf
fisttp
mov
mov
retf
popf
loope
(bad)
push
clc
daa
pop
aam
jg
xchg
adc
ret
(bad)
aas
push
add
jg
fwait
cmp
fbld
das
repnz
jo
jno
mov
and
cld
jmp
ret
aaa
xchg
and
out
icebp
fwait
or
ja
call
mov
mov
aad
sub
stos
push
mov
adc
mov
rcl
je
mov
dec
jecxz
xchg
addr16
mov
xor
mov
fdivr
not
sbb
cmp
lds
dec
rol
push
push
add
push
inc
in
pushf
outs
dec
fldcw
jne
lea
aas
mov
lea
mov
or
dec
inc
cs
idiv
fild
shl
jl
cmc
lock
cli
jge
lea
je
stos
je
mov
jbe
or
cs
cmps
inc
inc
mov
push
sub
mov
scas
mov
jbe
pop
push
cmp
adc
nop
test
mov
ficom
jne
enter
cs
or
xchg
add
fwait
sbb
nop
icebp
sti
ja
out
jae
ds
sbb
mov
jg
test
xchg
adc
push
cmp
cmc
mov
adc
sti
mov
add
mov
xchg
or
cmps
and
popf
pop
mov
(bad)
iret
mov
dec
es
loopne
and
mov
movs
sti
jle
(bad)
and
sbb
mov
mov
stc
ret
sbb
imul
outs
sub
adc
cld
fcom
sub
mov
pop
xlat
fld
add
cmp
xchg
xchg
push
and
test
fisubr
jne
sbb
inc
cld
jno
int
lock
nop
jmp
(bad)
std
movs
mov
ret
and
jns
(bad)
cwde
popa
mov
clc
mov
cmps
push
loop
cmps
into
jl
clc
fs
jae
arpl
repnz
push
je
pop
inc
lods
scas
pusha
call
inc
das
out
std
loop
cli
push
sub
or
mov
mov
sti
fs
jmp
and
neg
sub
cmp
out
pop
aaa
je
cmp
cmp
mov
jbe
pop
jo
loope
jge
(bad)
ins
imul
cmp
out
jmp
mov
or
outs
mov
fs
mov
and
xor
sbb
into
and
cmp
mov
dec
mov
add
and
mov
dec
test
mov
out
stc
sub
loop
inc
or
cmp
xchg
mov
push
aaa
cmp
mov
icebp
das
dec
outs
bound
add
movs
sbb
js
loop
push
and
adc
imul
nop
jg
popf
mov
dec
cmc
adc
mov
jns
add
ins
pop
fstp
adc
push
out
gs
sub
out
inc
push
jnp
jg
pop
add
adc
ja
movs
repnz
push
or
xor
or
ins
loopne
inc
jle
push
dec
jmp
or
sbb
aas
xor
and
jo
inc
xlat
ss
or
mov
inc
(bad)
pusha
xor
sbb
pop
shr
pop
inc
jg
hlt
(bad)
mov
sbb
dec
cmc
mov
add
lds
pop
lea
and
movs
cmps
cmps
add
repnz
fs
jae
adc
mov
fisttp
test
bound
in
or
les
inc
inc
add
and
outs
sbb
hlt
mov
call
adc
push
mov
movs
push
rcr
dec
jge
xchg
jmp
lea
pop
cmp
retf
fisub
movs
(bad)
retf
inc
xlat
mov
ins
or
cmps
pop
cmc
sbb
into
push
cmp
iret
cmps
or
rcr
ret
xor
mov
mov
jg
jae
(bad)
jbe
jg
xlat
cs
pop
fidiv
inc
or
ret
add
adc
sub
push
aaa
push
inc
imul
mov
jne
jmp
and
inc
iret
sar
sub
add
inc
dec
gs
add
xchg
adc
inc
gs
rol
sti
loope
aaa
dec
or
sahf
adc
cli
push
(bad)
mov
sbb
mov
iret
jmp
cs
ja
push
std
mov
mov
das
int3
jo
push
popa
fisttp
mov
and
fisttp
and
in
mov
jb
jno
stc
pop
push
jmp
(bad)
stc
fptan
popa
fld
mov
scas
fisttp
inc
adc
movs
push
mov
add
aam
cmp
daa
cdq
leave
cdq
jp
call
push
(bad)
adc
ins
xor
cld
cmp
adc
mov
or
bound
ret
mov
nop
sbb
loope
or
scas
pop
(bad)
repnz
test
jmp
int3
xor
push
xchg
idiv
loop
jmp
push
lds
sub
test
jae
add
addr16
mov
sub
popf
or
add
mov
pcmpeqb
jne
cmp
fisttp
rcr
jne
inc
pop
rol
inc
fwait
and
push
out
inc
jmp
mov
fild
scas
imul
seta
fucomi
cli
sub
push
push
imul
cmp
xchg
mov
mov
shl
pop
push
shr
pop
sub
fucomip
cmc
test
adc
mov
pop
iret
or
mov
xor
aaa
and
jl
xchg
(bad)
pop
sbb
sub
mov
fsub
add
inc
clc
or
jae
arpl
jp
mov
fsub
lahf
jp
fisttp
into
add
jecxz
xchg
mov
or
jecxz
and
xor
nop
push
cmp
pop
ja
mov
lds
pop
aam
(bad)
jo
mov
call
mov
fstp
(bad)
xchg
int3
xor
clc
jl
xor
aad
test
faddp
jb
jns
mov
mov
dec
sub
push
add
inc
dec
sub
pop
mov
sbb
ja
aaa
pusha
sahf
in
ret
inc
pop
cmp
mov
es
pop
hlt
and
les
dec
sti
movs
jmp
mov
add
popf
ja
and
popf
push
popa
enter
xchg
fsub
xchg
jmp
out
pop
adc
rcr
inc
(bad)
jmp
jle
jg
stos
xor
aaa
or
ins
mov
or
xor
aad
jl
cld
dec
stos
aaa
sahf
stos
in
repz
mov
jge
jne
shl
and
stos
push
imul
mov
xor
jo
dec
xor
mov
cwde
stos
sbb
mov
pop
shr
das
movs
mov
sub
aas
movs
cvtdq2ps
dec
pop
scas
je
jg
test
test
cmp
cmp
push
or
hlt
mov
out
adc
fwait
jmp
mov
add
adc
and
inc
mov
daa
mov
into
hlt
pop
mov
sbb
cmps
dec
cs
fpatan
xor
push
inc
fldcw
pop
in
push
dec
xchg
sub
retf
add
pop
test
imul
xor
shl
jbe
xlat
out
out
sbb
xchg
sbb
aas
jmp
call
sbb
mov
pop
xor
sub
lds
fldcw
or
fsincos
pop
inc
sbb
mov
push
addr16
jne
mov
cmp
push
push
(bad)
pop
and
adc
fldenv
cmp
dec
sahf
xor
lea
in
and
mov
lods
ret
pop
aad
aam
inc
fwait
push
or
pop
mov
xchg
addr16
enter
xchg
lea
loopne
push
push
dec
test
or
and
xchg
jbe
popf
out
aad
movs
iret
mov
pop
popf
pusha
xchg
cmp
dec
sbb
and
mov
call
inc
out
sub
arpl
js
div
icebp
sub
aad
das
mov
es
daa
add
jbe
cli
cwde
adc
in
ds
push
(bad)
fdivr
fist
inc
dec
and
imul
ret
aad
dec
pop
pushf
mov
sbb
arpl
inc
clc
fisubr
inc
mov
daa
and
adc
sub
gs
test
add
aam
push
lds
movs
dec
iret
fidiv
mov
pop
in
gs
push
mov
lds
and
pushf
cmp
enter
cmp
inc
inc
mov
push
pop
sub
ins
ja
xchg
sub
dec
push
xor
movs
dec
icebp
stc
ss
data16
fs
imul
adc
xor
xor
pop
pop
pop
cmps
adc
in
test
bound
(bad)
push
std
stos
sub
xor
jno
sbb
or
stos
jg
(bad)
sbb
jecxz
imul
jmp
mov
mov
shl
pushf
mov
lods
dec
out
les
xchg
sub
mov
xor
enter
movs
jp
or
cmp
push
shr
push
inc
scas
in
js
and
iret
mov
jo
ja
and
(bad)
cmc
nop
jl
push
xchg
xchg
stos
test
jl
fsub
ins
out
adc
or
fmul
lea
dec
mov
in
push
push
das
dec
and
in
xlat
mov
(bad)
lods
test
xlat
mov
jmp
sbb
mov
and
hlt
(bad)
mov
loopne
dec
inc
les
cmp
test
xor
pushf
out
leave
retf
mov
inc
add
mov
sbb
sub
cdq
outs
imul
mov
xchg
cmp
inc
pop
scas
fadd
mov
mov
mov
out
aas
sahf
in
cld
xchg
adc
mov
adc
sub
push
outs
pop
xor
sbb
dec
ss
jns
daa
ins
js
jns
xchg
es
fs
ins
mov
adc
arpl
xor
(bad)
(bad)
cld
push
mov
retf
ret
pop
adc
mov
js
mov
stos
cmp
das
and
mov
repz
push
xor
popa
cmc
movs
mov
repz
xchg
jp
imul
push
pop
(bad)
hlt
call
lods
mov
pop
mov
mov
fstp
(bad)
icebp
jnp
mov
call
inc
ins
jecxz
jno
add
cmps
lahf
(bad)
mov
popf
add
sti
jae
add
mov
xchg
mov
js
retf
mov
(bad)
stc
mov
pop
cmp
or
std
pushf
(bad)
push
icebp
das
mov
sub
xchg
xor
not
add
lock
pop
mov
loopne
pop
fidiv
dec
inc
fadd
fs
fist
rcr
call
sub
mov
adc
scas
adc
inc
in
adc
ror
add
mov
xchg
xchg
mov
cli
popa
rcl
pop
enter
pop
pop
std
xchg
gs
shr
mov
inc
pop
adc
das
mov
in
aam
sti
mov
popf
jb
and
and
xchg
xchg
cmp
sbb
aas
push
test
inc
jp
dec
and
aam
pop
inc
adc
push
out
jo
mov
mov
outs
or
add
cdq
mov
imul
mov
out
mov
cli
xchg
outs
in
adc
and
push
mov
sbb
and
jno
icebp
outs
push
dec
xor
jle
loopne
movq
add
jns
cli
push
mov
add
xor
sub
shl
jns
sbb
fld
push
adc
test
movs
xchg
(bad)
push
mov
mov
xlat
fadd
sahf
retf
cmc
push
push
imul
aam
sbb
add
(bad)
fadd
push
dec
mov
inc
jge
or
shl
int
ficomp
mov
add
je
neg
dec
mov
je
arpl
mov
movs
(bad)
inc
ret
(bad)
mov
push
neg
mov
mov
jmp
adc
push
sbb
jb
loop
xchg
or
lahf
mov
mov
test
rol
dec
or
push
sbb
mov
push
cs
gs
iret
cmp
(bad)
adc
sub
mov
dec
push
xchg
cmp
dec
inc
mov
add
shr
mov
hlt
cld
xchg
mul
jmp
pop
xchg
and
mov
inc
xor
sbb
mov
fisubr
mov
mov
(bad)
retf
and
push
pop
adc
xchg
mov
cmp
addr16
ss
and
mov
rol
mov
add
out
movs
test
retf
sar
pop
inc
call
or
nop
clc
ret
or
mov
cmp
repnz
add
das
lock
popf
or
in
and
lods
xor
xchg
fdivp
dec
push
out
cwde
lds
xchg
jo
mov
cdq
out
into
data16
fisub
jl
repz
lods
xor
js
pop
and
mov
fwait
mov
movs
xchg
dec
or
fidivr
cld
jecxz
test
lds
mov
arpl
dec
sbb
test
ins
adc
outs
rcl
and
push
push
mov
jecxz
pushf
mov
pop
jnp
pop
sbb
cli
leave
inc
cwde
add
daa
xchg
stos
fistp
ret
fistp
jecxz
mov
retf
cdq
addr16
sub
out
ret
pushf
cmps
mov
cmc
inc
(bad)
inc
dec
test
je
je
out
aad
mov
or
sbb
xor
gs
inc
sub
fist
clc
push
dec
jge
jns
jae
fst
add
icebp
push
stos
lahf
ror
repnz
or
pop
dec
xchg
ins
fsubr
push
test
add
bound
dec
js
push
jae
jae
cmps
jnp
imul
je
mov
adc
xor
add
jae
jecxz
jo
xor
div
add
fld
cmp
jecxz
clc
cmp
fld
push
mov
push
sub
push
mov
mov
inc
lahf
jnp
adc
or
in
mov
jb
out
popf
outs
in
cmps
mov
ja
xlat
push
push
lods
mov
test
loop
repnz
dec
lds
outs
std
push
adc
adc
lods
or
push
cmp
mov
cmp
inc
mov
jmp
mov
test
stc
ret
push
add
mov
mov
test
dec
mov
(bad)
mov
fnstcw
mov
cmp
fiadd
add
daa
jnp
je
dec
test
fwait
xor
icebp
hlt
mov
jmp
loop
adc
push
(bad)
jmp
(bad)
fisub
dec
es
pop
dec
pop
fs
fnstenv
retf
dec
(bad)
stos
push
xor
xor
leave
cmp
(bad)
cmp
cli
jns
outs
mov
adc
outs
(bad)
sar
mov
dec
in
cmp
(bad)
movs
lds
mov
push
(bad)
cmp
push
mov
test
pop
sub
mov
pushf
sti
push
pushf
xlat
and
push
aaa
xor
pop
nop
lds
sub
cmp
(bad)
sbb
cmp
or
leave
inc
(bad)
mov
pmulhw
cmp
pop
cli
sub
mov
jne
add
mov
ins
push
pushf
mov
cmp
pop
inc
inc
sbb
dec
mov
in
not
in
mov
mov
repz
or
jle
and
cmp
inc
clc
fs
call
xchg
out
mov
mov
pop
test
out
(bad)
stc
ret
mov
mov
les
rol
mov
pop
push
sbb
test
idiv
jle
scas
sub
arpl
loope
sub
addr16
fwait
in
or
adc
int3
mov
cmp
lahf
jl
das
into
test
xchg
test
popf
sahf
retf
es
bound
mov
jecxz
inc
cmp
loope
sbb
mov
adc
cmp
fsub
fcomp
call
pop
cmp
sahf
jae
pop
cld
out
jge
mov
push
mov
inc
mov
mov
inc
movs
scas
in
sbb
jp
xlat
inc
mov
imul
and
jo
or
test
rcr
pop
imul
and
inc
test
aaa
nop
mov
add
popf
jo
mov
(bad)
shr
fisubr
jb
(bad)
repz
retf
ficomp
aaa
push
das
inc
lods
push
push
aam
aam
repnz
test
cdq
mov
adc
xchg
out
imul
mov
fwait
push
fadd
sub
xchg
push
scas
adc
cmp
leave
ja
inc
dec
jmp
and
sub
les
ror
test
sub
push
outs
arpl
cmps
(bad)
jo
jg
xor
jnp
dec
fdiv
loop
clc
pushf
push
mov
jg
retf
sub
popf
adc
or
jge
xor
aam
test
mov
imul
hlt
jno
dec
frstor
idiv
xor
lods
addr16
xor
dec
mov
imul
push
movs
cmps
stc
sub
inc
add
bound
loopne
mov
inc
enter
push
call
pop
cli
in
test
fdivr
fsub
xchg
xor
loope
inc
pop
pop
bsr
mov
(bad)
pop
stos
xor
(bad)
xor
or
push
add
stc
pop
loopne
pop
lods
cmp
push
cmps
mov
jp
out
retf
loope
out
test
jecxz
out
jae
push
mov
std
mov
mov
or
sbb
or
xchg
int
sar
xchg
imul
xchg
ins
add
pop
inc
xchg
je
xchg
into
shl
cli
ret
cwde
pop
xchg
push
xor
push
enter
jno
gs
sub
sbb
int
add
mov
or
pop
or
xchg
add
test
pop
mov
xchg
or
add
dec
outs
sub
in
fmul
push
les
shl
repnz
pop
inc
adc
inc
xchg
shr
fs
mov
call
iret
bound
repnz
ret
xchg
push
xor
fist
push
xor
add
out
sbb
aad
add
push
xor
je
mov
mov
push
sbb
xor
add
scas
mov
es
jbe
jg
inc
imul
add
push
mov
or
inc
inc
bound
fiadd
(bad)
pop
and
sub
sub
call
loop
lds
xchg
cdq
(bad)
mov
pop
fbld
movs
sahf
mov
push
enter
pop
(bad)
jbe
jnp
dec
arpl
mov
mov
pop
in
mov
imul
(bad)
mov
xor
inc
pop
cmc
js
hlt
ret
imul
push
inc
dec
arpl
jg
xor
sub
jmp
sbb
repnz
dec
adc
push
inc
pop
ror
mov
mov
and
lds
push
into
lds
mov
push
and
xor
cli
adc
inc
mov
inc
cdq
or
fcom
call
lea
retf
cmp
mov
cvtps2pi
(bad)
movhps
mov
xor
ss
fistp
fs
add
shr
inc
inc
mov
imul
pop
mov
mov
adc
inc
add
sbb
sbb
dec
push
(bad)
popa
gs
sti
dec
les
push
mov
fucomp
in
hlt
jecxz
jmp
mov
mov
mov
or
and
dec
adc
jp
xor
je
inc
cwde
push
adc
adc
gs
jge
sbb
mov
xchg
or
jbe
add
int
sti
fsubp
jb
add
xchg
inc
jl
pop
(bad)
xchg
mov
xchg
mov
push
mov
sub
add
loope
xor
xchg
iret
push
jp
test
fsubr
fadd
int3
mov
jecxz
fstp
sub
movs
xchg
mov
ss
or
cmps
int3
jmp
in
dec
cmps
xchg
mov
cmp
cmp
or
movs
inc
dec
add
push
leave
fidiv
dec
xor
test
data16
mov
ja
xor
xchg
sub
xchg
icebp
(bad)
scas
data16
daa
cmp
mov
adc
xlat
sub
sbb
shl
rol
mov
loopne
ss
out
out
mov
movs
movs
sub
js
inc
add
push
jne
sbb
jne
enter
xor
add
(bad)
ror
xchg
xchg
pop
leave
pushf
out
cmps
or
add
loop
addr16
dec
pop
mov
mov
aas
add
sti
push
xor
pop
mov
xchg
xchg
shl
leave
add
push
cmp
lods
cmc
sti
ins
popa
lods
jo
sub
inc
dec
push
pop
or
lahf
inc
push
cwde
fbstp
aad
iret
mov
add
xchg
and
and
jns
test
loopne
aas
add
mov
mov
or
jnp
and
mov
inc
aad
dec
sbb
loope
outs
sub
add
into
pop
xchg
mov
test
jmp
and
ret
fdiv
adc
and
push
xchg
dec
mov
mov
daa
mov
cmp
sub
jb
retf
sbb
mov
cmp
jnp
scas
fnstsw
mov
inc
mov
aas
imul
sub
cs
int
in
test
mov
(bad)
jp
mov
dec
fs
cmps
shr
dec
inc
sysenter
and
or
retf
cmp
(bad)
fidiv
cs
xchg
ins
cmp
pop
add
mov
in
mov
mov
mov
mov
mov
add
push
mov
cwde
pop
(bad)
and
div
lods
xor
call
faddp
dec
popf
xchg
lea
jecxz
xchg
repnz
jno
sub
(bad)
hlt
movq
cmc
and
lahf
ins
mov
jl
pop
and
stos
inc
pop
sub
sti
iret
aam
mov
nop
in
retf
mov
mov
mov
cmp
sbb
lds
add
mov
cmps
jecxz
mov
sbb
pop
stos
dec
pmulhuw
pop
or
jp
(bad)
aaa
fstp
sub
sbb
and
inc
dec
loope
leave
(bad)
outs
add
rcr
jb
xor
lods
in
xchg
cmp
mov
add
popf
cmp
cmp
add
repz
mov
in
mov
xor
ret
push
sub
shr
or
das
leave
psubusb
jg
pop
dec
call
lods
test
repz
push
rol
inc
ins
pop
pop
pop
outs
cdq
clc
rcl
cmp
and
std
setbe
lahf
inc
push
pop
push
sti
cld
fidivr
push
cmps
xchg
push
popa
(bad)
cmp
movs
pop
jmp
sub
rol
outs
sub
xchg
ins
fwait
shl
cs
xchg
mov
call
jmp
leave
(bad)
cmp
dec
out
add
dec
fld
and
cs
add
fimul
mov
pop
sti
adc
mov
jbe
adc
(bad)
rcr
inc
cmps
xlat
mov
jae
ja
(bad)
xchg
out
xchg
jne
cmp
loopne
jle
pop
cs
mov
sub
movs
mov
jmp
stos
pop
ret
jae
cmp
xchg
cli
pop
outs
ja
cld
mov
lds
jae
inc
fstp
xchg
bound
std
or
and
mov
push
xor
mov
inc
jmp
inc
fist
hlt
mov
push
and
cmp
movs
push
mov
test
shr
mov
std
mov
imul
mov
(bad)
or
xchg
popa
stos
cmp
in
(bad)
movs
mov
mov
out
rcl
neg
jge
lods
dec
add
inc
pop
inc
or
es
pop
out
push
mov
mov
xchg
mov
(bad)
jg
dec
xor
sbb
shl
in
movs
scas
xlat
and
jge
cmp
mov
sub
lea
jmp
(bad)
retf
je
gs
(bad)
adc
scas
push
sbb
repz
jno
loope
dec
pop
fld
(bad)
xor
cld
movs
adc
cmp
jo
rcr
cmp
shr
jg
cdq
popf
or
pop
pusha
popf
mov
pop
or
pop
jmp
adc
push
enter
adc
inc
inc
cld
js
mov
imul
ds
sbb
fwait
sub
in
cmc
or
cmp
retf
add
das
ins
push
sbb
dec
sub
in
cmps
add
call
cmp
std
mov
nop
stc
jb
adc
aas
ins
add
jl
ror
add
movs
or
push
push
gs
(bad)
mov
xchg
imul
adc
outs
push
xlat
pop
test
mov
stos
inc
mov
xor
sbb
jnp
mov
(bad)
sbb
xchg
xchg
adc
ret
push
ins
gs
mov
mov
in
fsub
jmp
scas
mov
in
cmp
int
mov
jmp
xchg
test
mov
xor
shl
sub
retf
mov
xor
and
adc
test
xchg
jbe
inc
clc
(bad)
mov
mov
leave
jge
sbb
xchg
mov
in
jp
pop
jb
not
lahf
es
sub
and
sbb
mov
cmp
cmp
and
(bad)
std
mov
arpl
mov
aam
xlat
mov
xchg
mov
arpl
pop
test
inc
dec
sub
imul
lds
cdq
iret
fscale
rcr
and
add
push
out
ror
test
xchg
pause
jmp
int
sub
lahf
cld
cs
cmp
cmps
mov
sub
fistp
push
jno
dec
cmp
mov
xor
adc
push
adc
imul
mov
push
lods
jg
fnstenv
addr16
ds
stos
(bad)
sti
js
jmp
and
std
inc
iret
call
ss
lods
test
mov
mov
sar
cmp
xchg
lods
das
jle
hlt
mov
or
mov
je
imul
arpl
mov
test
mov
xlat
sbb
pop
xchg
mov
data16
mov
or
cli
dec
adc
dec
sub
loopne
pop
dec
adc
inc
nop
xor
enter
mov
xchg
repz
dec
jge
pop
push
inc
inc
mov
pusha
add
jmp
jg
nop
fs
mov
or
in
cwde
xchg
xor
js
mov
mov
call
pop
jg
shl
neg
jnp
imul
push
jmp
fdiv
sub
stos
add
in
mov
js
imul
outs
test
dec
mov
dec
out
pop
jns
in
mov
retf
adc
fimul
adc
dec
ins
ds
outs
cdq
and
push
ins
sub
cdq
sbb
mov
pop
push
(bad)
sar
add
fmul
gs
sbb
pop
xchg
mov
adc
clc
mov
adc
int
in
jmp
push
jns
mov
(bad)
test
inc
pop
imul
int
stos
xchg
dec
hlt
jb
icebp
shr
or
lea
jmp
shr
js
xchg
sbb
adc
sub
in
pusha
push
jge
clc
leave
or
mov
call
push
jbe
daa
push
stos
dec
loope
cmp
idiv
jb
(bad)
xor
sbb
mov
sub
or
inc
leave
in
loop
popa
jo
les
push
in
jle
mov
(bad)
jmp
dec
int3
pop
mov
in
pusha
into
xchg
ja
fcmovne
movs
add
dec
test
xchg
nop
and
leave
pop
adc
sbb
pushf
inc
lds
add
inc
adc
jns
fnstcw
test
xor
dec
inc
mov
mov
inc
imul
sub
adc
xchg
cli
lods
clc
fistp
loop
sbb
retf
xor
add
dec
push
int3
xchg
jp
je
out
pop
sub
cmps
mov
push
or
out
fwait
adc
test
pop
rcl
pop
xor
cmp
retf
leave
pop
jno
inc
xchg
push
or
rcl
aaa
repz
dec
push
dec
jmp
or
stos
xor
shl
or
stos
add
xchg
jo
adc
pop
inc
call
cmp
jmp
sub
rcl
mov
inc
jo
mov
pop
or
std
inc
dec
cmp
mov
mov
aam
cmp
lahf
gs
or
stc
out
cmps
pop
cld
mov
je
movs
push
ror
lods
sbb
jg
(bad)
sub
jnp
mov
repnz
std
loopne
stos
jno
mov
jmp
out
stc
(bad)
int3
xor
fild
out
adc
scas
dec
or
leave
ret
(bad)
mov
add
or
daa
stos
adc
leave
push
(bad)
jmp
xor
cwde
hlt
fadd
dec
pop
(bad)
jg
imul
daa
or
jp
(bad)
sar
adc
ror
nop
aad
outs
jno
arpl
jae
stc
stos
jl
mov
sbb
inc
pop
mov
fwait
xor
je
test
rcr
or
jmp
lahf
inc
sti
mov
cs
cmps
sbb
nop
(bad)
mov
xor
add
mov
mov
jge
and
xor
push
retf
test
cmps
ins
mov
adc
or
jno
and
das
add
cmp
jg
push
sub
loope
pop
adc
sub
and
aad
inc
xchg
add
jl
loop
js
sub
(bad)
push
push
test
cmc
loopne
sbb
inc
or
cld
mov
lods
ins
adc
inc
xor
(bad)
(bad)
call
arpl
cmp
mov
stos
cmp
mov
push
pop
in
test
xor
cdq
sar
lods
test
push
mov
stc
inc
cmps
iret
and
popa
repz
xlat
jno
bound
movs
dec
or
jl
in
jle
mov
out
hlt
inc
popf
aas
in
adc
jo
dec
loopne
lea
mov
mov
add
push
xor
mov
jo
in
ret
xor
stos
sbb
pop
stc
sbb
imul
loope
gs
push
fidivr
stos
frstor
jmp
sar
xor
aad
push
sahf
aas
xor
add
shr
pop
ror
fcomp
(bad)
sahf
add
hlt
cvtsd2ss
(bad)
lea
addr16
xor
sbb
rcr
das
sbb
mov
movs
cmp
mov
add
push
in
pop
lods
push
stos
jp
xor
call
ret
cmp
and
das
mov
aas
pop
xchg
mov
mov
adc
mov
and
aas
add
call
stos
dec
test
cli
mov
adc
mov
and
and
pop
pop
cdq
sub
lea
xchg
sub
fist
adc
int
adc
cmp
push
sbb
das
loope
jae
jns
aam
sbb
xor
adc
mov
and
shl
push
lods
test
gs
sub
cmp
imul
pop
jns
mov
or
cmc
dec
retf
mov
dec
pop
mov
pop
leave
mov
push
hlt
shl
fstp
push
push
das
or
add
ins
pop
and
cmovns
repnz
test
cmp
movs
icebp
call
outs
cmp
mov
push
pop
mov
pop
rcr
loop
sbb
(bad)
xchg
add
lea
dec
loop
or
pop
pop
inc
push
push
pop
shl
inc
and
jae
les
loopne
mov
rol
xor
inc
sti
adc
(bad)
adc
add
imul
sbb
or
pop
outs
mov
and
sub
es
test
(bad)
sub
inc
(bad)
cld
sar
js
xchg
xor
jno
or
sahf
xchg
stos
pushf
loopne
retf
es
into
inc
adc
cmp
das
out
mov
clc
sub
inc
add
jns
mov
pop
loope
movs
mov
push
cdq
lds
fld
das
jmp
add
xor
ret
mov
inc
out
dec
(bad)
add
adc
push
xchg
jb
sbb
sti
bound
add
(bad)
and
movs
xchg
into
dec
and
out
xor
ja
pop
aam
and
cmc
int
mov
bound
and
loopne
fist
xchg
push
and
fwait
push
mov
cs
pop
push
in
xchg
dec
sti
dec
xchg
cmp
in
add
xor
nop
and
aas
and
popf
mov
pop
mov
retf
fsubr
arpl
and
lahf
test
mov
and
push
xchg
jmp
inc
pushf
stos
lds
add
inc
int
(bad)
inc
xor
ja
jecxz
(bad)
mov
aam
mov
mov
push
mov
add
out
mov
(bad)
and
ins
inc
(bad)
bound
jecxz
pop
push
sbb
cwde
jbe
ins
(bad)
mov
ss
dec
(bad)
movs
fwait
pop
or
xchg
sbb
fwait
in
sbb
scas
cdq
and
sub
imul
sub
mov
cdq
lock
ds
shr
popf
or
dec
sar
dec
mov
xchg
push
scas
jo
adc
push
mov
add
fisub
nop
push
(bad)
jns
nop
or
add
push
pop
retf
pop
jge
(bad)
pop
out
fmul
in
pop
mov
aam
xchg
or
sub
mov
inc
leave
mov
xor
xor
add
xor
jmp
jmp
lods
lea
test
mov
xchg
mov
loope
push
adc
imul
lahf
pusha
lock
and
cwde
loop
imul
add
jo
xchg
(bad)
ja
cmp
inc
jbe
sti
imul
cld
push
or
push
xchg
and
fcomi
pop
mov
repz
push
(bad)
stc
fisub
jnp
loop
inc
pop
sbb
adc
nop
xchg
sbb
out
sbb
outs
je
sti
push
jne
icebp
adc
icebp
sub
lds
loop
mov
add
test
adc
nop
jo
enter
jo
das
dec
pop
cmps
xchg
mov
push
(bad)
std
inc
pop
jmp
loopne
in
dec
inc
bound
fbld
fsub
xchg
or
aas
push
sbb
aad
adc
fwait
jge
or
lods
cmp
into
jno
outs
mov
jmp
and
sub
(bad)
int3
sub
xor
stos
sbb
mov
push
xor
addr16
and
xor
out
jnp
pop
fs
retf
mov
pop
aaa
push
test
popf
jbe
scas
xchg
cmp
neg
mov
mov
sbb
shr
fimul
or
cdq
pusha
cmp
push
dec
daa
mov
jne
aas
sti
xor
stc
test
es
movaps
xchg
sub
mov
out
and
(bad)
cmp
dec
jno
or
(bad)
sub
adc
xor
sbb
mov
cmp
add
outs
pushf
sub
adc
js
les
imul
mov
jne
adc
ss
xchg
fistp
dec
lods
xchg
add
dec
lahf
xor
icebp
test
pop
ins
rdtsc
add
mov
jge
or
jbe
aad
mov
test
mov
(bad)
cmps
scas
loop
pop
and
xor
jbe
push
loope
mov
adc
fs
cmp
push
adc
mov
fld
jge
ds
pop
add
(bad)
adc
sbb
jne
xchg
jae
sbb
xchg
ins
xchg
ror
js
sahf
pop
fwait
test
popa
sbb
push
jb
leave
pop
pop
dec
push
sub
xchg
loopne
cwde
or
jp
lods
cmp
out
pop
into
hlt
cmp
push
movs
or
jo
pop
int3
fistp
push
fs
push
and
pusha
shr
addr16
cld
pop
xchg
or
icebp
and
aaa
push
xchg
mov
cmp
pop
cmp
jge
imul
hlt
jmp
jmp
in
mov
out
jp
je
mov
xor
dec
aaa
test
imul
jg
cmp
in
cmp
xor
xchg
in
(bad)
or
push
(bad)
scas
inc
pop
out
div
dec
fimul
fistp
dec
xchg
jno
hlt
pop
cli
xchg
jmp
(bad)
in
sar
pop
leave
fadd
fldenv
test
mov
ret
mov
test
shr
dec
push
mov
push
popf
adc
aam
push
xor
dec
scas
or
sub
add
lods
jge
mov
dec
push
bound
mov
ficom
mov
or
dec
sbb
push
sub
inc
dec
aam
pop
sub
inc
sub
aam
outs
adc
fsub
sti
sbb
push
push
push
cli
and
repnz
ret
xchg
leave
(bad)
fiadd
sbb
xchg
inc
into
fistp
jbe
xchg
dec
pop
mov
jae
outs
inc
mov
or
ins
inc
add
jl
mov
pushf
xchg
mov
xor
cmps
adc
mov
out
or
div
inc
adc
dec
xchg
xchg
xchg
or
mov
lods
push
jmp
mov
imul
inc
sbb
jno
test
fisub
in
dec
add
aad
xchg
xor
mov
sub
jg
call
call
add
pop
outs
mov
cmp
push
arpl
pop
(bad)
call
js
outs
in
imul
inc
in
(bad)
stc
out
rcr
int
or
js
daa
sub
sbb
(bad)
stos
jmp
xor
das
cmp
xor
push
fdiv
pop
push
imul
(bad)
in
cwde
jl
in
adc
sbb
sbb
shl
pop
inc
repz
rol
rol
mov
mov
jno
inc
js
stos
xor
inc
ins
xchg
leave
cmp
cmp
icebp
ss
ja
lods
pop
mov
int3
je
or
sbb
pop
jg
or
or
fidiv
xchg
ja
movs
and
ds
sbb
and
cmp
push
mov
and
pop
xchg
mov
xor
std
int
dec
adc
add
fbstp
inc
jg
(bad)
frstor
pop
sar
adc
cmps
mov
hlt
mov
jne
mov
adc
jo
inc
repz
or
mov
cli
mov
fs
in
in
dec
call
cmp
movs
push
les
repz
mov
mov
push
cmp
cs
in
add
jmp
push
mov
jl
jmp
sub
int
adc
mov
sub
shl
pusha
cli
push
cmp
jbe
mov
mov
mov
mov
ds
mov
dec
shr
xchg
jbe
pop
cmp
pop
ss
jg
ror
push
lock
daa
pop
sbb
add
mov
cdq
mov
and
arpl
mov
push
dec
adc
inc
inc
ja
xor
stos
cli
ror
sbb
ja
dec
pop
enter
sti
das
xchg
(bad)
pop
mov
loop
call
repnz
shl
fnstenv
sar
and
or
jb
jnp
and
ret
enter
jbe
add
mov
scas
test
and
iret
inc
and
and
cmp
xchg
push
mov
call
(bad)
mov
inc
test
cmps
pop
aas
lods
(bad)
imul
sbb
das
imul
popf
dec
adc
(bad)
in
or
mov
cmp
jno
mov
lods
and
xor
jbe
in
and
jp
lods
pop
push
sub
neg
mov
push
outs
adc
inc
(bad)
rol
and
cmp
sbb
int3
pop
jl
jno
push
dec
bound
mov
js
jg
lods
pop
lahf
test
mov
ret
sub
leave
inc
or
leave
mov
jns
out
outs
int
adc
ret
jmp
mov
push
mov
sbb
test
call
das
fst
test
dec
(bad)
jecxz
mov
mov
mov
ss
mov
sub
mov
retf
mov
imul
das
(bad)
sti
hlt
xchg
or
add
add
movs
add
not
fcom
nop
xchg
leave
add
fcomp
mov
xchg
test
(bad)
sub
loopne
das
jg
ins
xchg
popf
add
jg
test
stos
pop
push
mov
imul
push
add
xor
push
fcom
inc
dec
(bad)
rcr
mov
rcl
sub
mov
nop
(bad)
lods
mov
repz
inc
pop
ror
cwde
or
sub
cmp
(bad)
scas
xchg
sub
js
adc
into
or
mov
push
test
jb
(bad)
jo
push
xor
test
xchg
cmps
data16
das
rol
pop
sub
sbb
enter
test
fist
push
push
adc
adc
leave
mov
inc
repz
pop
mov
test
ficom
mov
test
out
dec
jg
jle
std
jmp
(bad)
into
lds
fisttp
pop
cs
in
sub
mov
imul
fsub
sbb
xchg
push
push
iret
sbb
popa
ds
jns
push
sar
mov
cmp
sub
xor
xor
cmp
cwde
inc
sbb
pusha
enter
(bad)
(bad)
int3
mov
mov
(bad)
popa
(bad)
cmp
mov
mov
dec
and
stos
add
fldcw
sahf
mov
daa
cmc
je
addr16
(bad)
(bad)
adc
movs
jp
mov
cli
fdivp
cs
sbb
mul
xchg
int
cmc
xor
jl
adc
push
cmp
adc
imul
mov
mov
push
jp
mov
int3
es
mov
retf
push
dec
mov
fwait
mov
jg
jns
es
pop
fsubr
xchg
jg
jmp
mov
xchg
sub
(bad)
loope
sub
mov
icebp
push
(bad)
repnz
in
and
out
pop
mov
cmp
fisttp
dec
mov
sub
das
xor
pop
jecxz
out
sbb
popf
pop
xlat
call
dec
mov
std
xchg
push
das
cmp
and
out
call
xchg
enter
aaa
mov
add
xor
aad
xchg
and
aaa
mov
pop
xor
mov
addr16
ss
jo
(bad)
push
ret
test
dec
pop
xchg
xor
or
xchg
mov
cwde
pop
(bad)
aas
xor
inc
cmc
rcr
adc
or
es
dec
mov
and
jne
cmp
sbb
cmp
mov
mov
out
mov
movs
sbb
push
jmp
jb
xor
jg
lods
mov
mov
mov
test
mov
xchg
mov
jae
dec
clc
cld
and
movs
xchg
cdq
pusha
mov
sbb
mov
inc
in
pop
xor
adc
pop
(bad)
fsub
xchg
adc
adc
pusha
and
push
push
cld
clc
call
jg
and
mov
stc
push
xchg
inc
cdq
xchg
jno
and
jb
pop
push
sub
push
sti
mov
mov
mov
out
fcmove
fcmovnb
xchg
into
dec
or
sub
rol
add
ss
pushf
test
fwait
dec
xor
movs
sbb
icebp
call
mov
mov
or
adc
inc
or
leave
pusha
mov
push
adc
pushf
mov
ror
les
pop
push
stos
sub
daa
aad
ins
dec
push
adc
xchg
mov
mov
nop
outs
mov
push
rol
sti
mov
push
sbb
inc
ss
xlat
out
mov
mov
jge
stc
mov
inc
loope
mov
sub
out
ss
aaa
cmc
pop
cmp
(bad)
sbb
push
sbb
ja
cdq
sub
jmp
cmp
popa
bound
push
retf
not
jmp
sub
jmp
(bad)
push
or
ja
mov
lods
push
cmp
movs
mov
dec
popf
cs
xchg
cdq
inc
sbb
in
daa
cmp
xchg
lds
sub
lahf
mov
cli
mov
or
jbe
ins
jge
ret
out
push
mov
or
fcom
xchg
xchg
lahf
jmp
xchg
jge
lea
movs
sub
(bad)
enter
pop
out
in
xchg
xlat
adc
dec
sti
(bad)
fisub
cld
ss
jge
sbb
(bad)
scas
fwait
pop
rcl
outs
aaa
outs
arpl
cmp
xor
cli
dec
aaa
dec
pop
(bad)
xor
sub
dec
mov
repz
cmps
xchg
pop
dec
out
cmps
ret
adc
cmp
stc
mov
ds
test
pop
mov
bound
pop
cmps
adc
pop
in
jmp
cmp
ret
pusha
mov
push
inc
scas
add
cmp
pop
mov
imul
push
movs
xor
mov
pop
add
inc
fcom
stos
fs
xor
out
shr
sbb
sub
cdq
push
movs
iret
or
cmp
xor
push
aad
loope
call
sbb
cmc
(bad)
adc
push
int3
mov
lahf
jecxz
jb
lahf
adc
pop
ret
xchg
push
dec
inc
jno
push
arpl
pop
pushf
mov
push
jae
ror
ins
jge
xchg
xchg
out
dec
pop
sbb
(bad)
fadd
adc
fsubp
mov
push
dec
and
jmp
sub
out
popa
je
hlt
mov
mov
imul
outs
xchg
mov
fcmovnb
in
ja
or
and
fdivr
sub
pusha
mov
xor
sub
adc
test
mov
inc
add
sub
add
push
mov
inc
aam
inc
inc
(bad)
mov
hlt
and
retf
jb
imul
pushf
add
push
lock
(bad)
icebp
mov
and
test
jl
mov
xchg
ret
lahf
xchg
cmps
inc
jb
push
sub
cmovo
adc
push
push
cmp
mov
inc
sub
das
xchg
ins
mov
fwait
pop
cmps
sbb
cmp
repz
jo
data16
cmp
mov
xchg
push
xchg
out
add
out
push
(bad)
xchg
gs
cmp
hlt
std
(bad)
dec
pop
cdq
daa
mov
mov
sar
xor
aad
fst
loopne
sbb
arpl
aas
or
stos
cmp
cmp
or
mov
jecxz
js
jg
push
add
in
sbb
mov
mov
sahf
aad
push
jne
and
stos
and
inc
out
out
cmp
(bad)
sub
in
mov
push
in
pop
push
popa
pop
psrld
mov
push
ror
sbb
jb
iret
hlt
pop
pop
mov
repz
fst
ja
sbb
mov
clc
xchg
in
push
inc
mov
jns
nop
sbb
xchg
dec
ret
jmp
pop
push
cmp
and
and
mov
lods
pop
daa
jo
sub
daa
xchg
lahf
jnp
shl
sbb
add
sub
xor
jno
mov
pop
call
pop
scas
in
lea
pop
push
xchg
adc
scas
iret
sbb
inc
and
retf
fidiv
cld
fist
cdq
jbe
cmps
js
adc
pop
adc
cs
aaa
xlat
pop
pop
jmp
loop
fstp
add
std
mov
push
pop
push
mov
fs
js
jmp
xor
enter
xchg
mov
jne
xchg
les
mov
outs
nop
std
cdq
mov
shr
mov
call
ds
mov
test
sub
loopne
add
or
not
cmp
and
add
dec
sbb
nop
shl
inc
adc
and
cmp
or
fsubrp
out
adc
add
test
fimul
adc
iret
sub
fnstcw
dec
arpl
sub
repz
cmps
sub
or
sbb
sub
sub
ds
ror
xor
sub
lea
inc
scas
mov
xor
push
xchg
mov
add
jmp
add
sbb
in
or
xchg
mov
(bad)
and
loop
ret
leave
pop
ret
cmp
cmp
xchg
ja
add
cmp
leave
int
pop
cwde
jnp
or
std
cmp
adc
jecxz
retf
jno
nop
pop
push
cmp
int3
stos
mov
in
in
inc
inc
sub
sti
sar
dec
shl
pop
nop
push
js
mov
dec
xor
lahf
xchg
pop
daa
outs
bound
fwait
mov
adc
mov
inc
enterw
lds
(bad)
mov
jb
cmps
arpl
fdivr
mov
pop
mov
stc
stos
mov
int3
das
fnsave
es
xchg
fdiv
arpl
sub
les
daa
adc
lods
fcom
jl
arpl
cmps
xchg
mov
ja
and
outs
sub
mov
mov
arpl
adc
and
mov
enter
or
cld
jp
pop
stos
and
sub
cmp
sti
es
stos
xor
test
repnz
stos
(bad)
sub
mul
jns
sub
fcomp
xor
pop
add
pushf
test
test
mov
sbb
mov
jbe
jno
push
aas
ds
in
add
cmp
and
jge
out
fist
sub
cmp
cmp
aaa
in
dec
lods
fdivr
stos
mov
(bad)
fs
adc
aaa
outs
pop
xchg
cdq
shl
in
imul
aas
in
ffree
or
retf
inc
shl
add
out
loopne
adc
icebp
and
and
and
add
xor
adc
sbb
mov
and
pop
mov
pop
out
fs
shl
mov
outs
ins
jecxz
pop
lods
popa
jb
jmp
loopne
shr
nop
push
pop
retf
sub
mov
sahf
jne
xchg
js
sub
jg
xchg
rcl
jle
rol
xchg
rcl
icebp
sub
in
fisttp
mov
and
adc
lods
jle
cdq
dec
mov
pop
in
out
dec
xchg
test
pop
push
fst
push
jno
mov
sbb
sbb
gs
sbb
loopne
xchg
daa
inc
loopne
xchg
jb
or
xchg
pop
mov
movs
pop
mov
(bad)
loopne
or
test
shl
mov
rol
and
xchg
cld
gs
xor
rcr
xor
sar
xchg
push
data16
cmps
add
mov
and
lds
lahf
inc
jecxz
xor
dec
xchg
int
nop
nop
or
in
or
(bad)
pop
sub
dec
shl
and
push
push
not
mov
push
movs
add
push
lods
xchg
add
sbb
into
ret
dec
add
lods
mov
cld
and
imul
jb
or
and
dec
std
add
adc
mov
out
in
dec
int3
xor
fidivr
call
and
cmp
dec
ins
xchg
shl
jg
movs
jne
movs
push
xor
(bad)
mov
movs
call
pop
push
mov
adc
stc
add
(bad)
test
(bad)
ds
repz
imul
sub
addr16
scas
leave
lea
mov
stc
jno
scas
pop
cmp
cmp
js
xchg
in
loop
rcr
cmp
movs
and
daa
setbe
call
pop
shl
jbe
dec
and
mov
mov
outs
add
sub
fisubr
dec
inc
test
mov
call
pop
adc
cmp
repnz
cli
cs
rol
jle
pop
nop
outs
xchg
xor
lock
jmp
retf
aaa
pop
dec
mov
pop
adc
push
adc
and
shr
(bad)
(bad)
(bad)
cmp
in
pop
shl
cmp
or
jle
adc
dec
inc
jmp
sub
jl
or
adc
sbb
push
push
cmps
ds
nop
ret
stc
aam
cdq
jge
push
inc
je
pop
xor
pop
sahf
shl
es
dec
jg
or
fdivp
cmp
xor
sbb
(bad)
ficomp
(bad)
call
scas
push
daa
fldcw
cmp
pop
push
mov
jns
aad
dec
in
ins
(bad)
push
mov
xor
les
xor
cmps
(bad)
retf
mov
or
mov
fs
dec
jo
sbb
sar
ja
imul
lods
in
mov
mov
icebp
or
mov
repnz
rol
inc
mov
pop
ins
sar
mov
sbb
popf
mov
dec
jmp
mov
cmp
cli
sub
xor
gs
adc
cmp
(bad)
repz
dec
imul
call
lock
add
mov
mov
xchg
jl
daa
icebp
push
pop
xor
and
push
outs
jl
mov
sahf
xchg
or
pop
jmp
and
js
sti
mov
xchg
(bad)
ror
popf
scas
push
push
cmp
retf
sbb
sub
idiv
xchg
xor
rcl
shl
bound
dec
ss
retf
adc
nop
xchg
add
ds
addr16
fcmove
dec
mov
sub
retf
or
ret
and
arpl
pop
mov
pusha
jg
jge
aas
retf
sbb
mov
call
(bad)
outs
cmp
pop
xchg
add
sahf
aaa
jp
popa
mov
push
cmc
aad
sti
jo
sub
cdq
sbb
ds
cmps
add
pop
repz
es
add
ins
or
fnstcw
jnp
dec
jle
ds
pusha
ficom
sub
adc
push
lods
or
push
jmp
sar
fisttp
push
pop
xchg
popa
sbb
sub
or
pop
std
jb
ja
retf
(bad)
sahf
out
mov
(bad)
aad
jmp
jnp
int3
je
xchg
cmp
popa
jbe
mov
dec
pop
cmp
pop
fist
outs
xor
shr
hlt
and
rcr
cmp
outs
mov
xor
outs
lods
fst
inc
cmp
sub
stc
loop
hlt
jp
mov
and
or
dec
jnp
cdq
call
cmps
push
mov
je
xor
ins
adc
cmc
fwait
dec
scas
add
mov
retf
pop
jmp
push
ret
sub
mov
neg
and
mov
retf
ret
push
addps
inc
idiv
fsubr
cli
fstp
inc
xor
retf
(bad)
jle
xor
or
add
icebp
nop
fstp
icebp
loopne
aaa
mov
dec
xlat
xor
add
ficomp
mov
and
shl
pusha
mov
jnp
lahf
push
pop
sbb
es
lods
out
xchg
pop
inc
and
sbb
cmp
lahf
mov
aam
div
adc
imul
mov
call
sbb
jno
jmp
mov
out
and
push
mov
fwait
pusha
fistp
or
mov
nop
int3
cli
fistp
inc
push
mul
cmp
and
movs
(bad)
cmp
xor
pop
sub
push
pop
aam
xchg
into
and
call
xchg
push
cmp
mov
add
fdivr
and
xor
jmp
cmp
cld
loopne
stos
sub
aas
adc
or
(bad)
fmul
(bad)
xchg
and
cdq
inc
jmp
pop
into
sbb
hlt
sbb
je
movs
ja
mov
call
nop
addr16
xlat
mov
pusha
inc
int3
in
dec
fucomp
ret
cli
push
jae
jmp
jnp
test
out
loope
jmp
stc
xor
movhps
jecxz
inc
and
rol
xchg
mov
lds
ret
test
scas
xchg
jecxz
call
mov
jae
lods
push
call
(bad)
iret
and
pop
cmp
cld
dec
mov
sub
and
loop
movs
mov
into
fldcw
jmp
mov
pushf
ror
xor
repz
hlt
fld
cmps
out
sbb
das
repnz
(bad)
xor
push
jno
inc
rcl
rol
inc
add
fdiv
adc
pop
aaa
add
mov
(bad)
mov
scas
cmps
in
push
pop
jl
add
stc
push
or
mov
(bad)
neg
pop
mov
and
xor
and
mov
(bad)
ins
fisub
lea
and
das
jl
xor
fs
int
mov
and
xor
push
popa
inc
repz
inc
lods
mov
jb
scas
push
test
shld
test
mov
movs
aas
sbb
enter
mul
jl
mov
lock
adc
in
lahf
mov
test
shl
les
mov
imul
lods
mov
push
push
mov
add
imul
lahf
fdiv
jnp
or
cmp
xchg
xor
aas
xor
stc
xor
fst
cmps
sub
test
cmp
and
ss
sub
dec
and
mov
inc
adc
div
ins
movs
mov
retf
dec
sbb
in
mov
cli
cmp
cmp
or
sbb
and
dec
and
gs
inc
xor
ins
mov
inc
and
pushf
(bad)
nop
scas
sub
xchg
add
dec
repnz
in
add
lods
push
int3
aam
pop
mov
das
xchg
call
lea
sbb
dec
rcr
movs
and
shl
adc
(bad)
sbb
imul
add
movs
shl
(bad)
loopne
fisttp
add
daa
or
data16
pop
push
mov
repnz
pusha
enter
cmc
jo
inc
mov
or
mov
(bad)
sub
cmps
pop
adc
xchg
(bad)
jg
adc
inc
or
retf
in
(bad)
jmp
mov
fstp
popa
mov
or
xchg
in
in
loopne
cmp
cmc
sub
aad
cmp
pop
les
pop
nop
or
cmps
pop
aad
add
or
xchg
mov
pushf
inc
lock
inc
xchg
js
jb
jmp
cli
cld
adc
stos
mov
dec
jb
pop
push
ret
test
pop
outs
leave
pop
aas
sbb
frstor
je
repz
nop
mov
cmp
xchg
lock
enter
mov
out
xor
push
push
ins
and
enter
jl
repz
jno
mov
nop
vpunpcklbw
not
sti
xchg
add
cmp
out
pop
(bad)
out
std
jns
dec
(bad)
pop
mov
cmc
in
jo
in
adc
out
push
xlat
retf
adc
mov
jb
and
cli
mulps
stos
dec
mov
js
cwde
pop
inc
out
mov
sbb
pop
rol
mov
sahf
test
mov
pushf
lods
mov
in
aam
xchg
adc
inc
test
cmp
in
aas
addr16
inc
xchg
pop
nop
outs
inc
dec
lds
add
xchg
inc
xchg
pop
xlat
xchg
push
or
xor
neg
sahf
scas
mov
xor
pop
dec
push
mov
test
sar
inc
addr16
cmp
xchg
inc
push
jbe
and
ins
adc
imul
loop
pop
pop
dec
push
or
push
jmp
mov
mov
push
pushf
hlt
or
dec
test
jge
cmp
(bad)
sbb
mul
and
repz
inc
fucomp
test
rcl
dec
mov
push
lock
test
fwait
push
lods
mov
sbb
mov
inc
jns
out
and
loop
pop
ret
xor
jns
mov
scas
mov
inc
mov
pop
(bad)
and
lahf
les
fbstp
mov
inc
dec
icebp
pop
push
add
pop
push
out
push
add
push
cs
outs
(bad)
mov
and
js
stos
or
cmp
xor
div
test
cdq
ins
lea
mov
pop
push
out
in
loopne
pop
scas
jmp
cmps
hlt
cwde
pop
sahf
add
jl
cmp
out
mul
jmp
dec
mov
xlat
js
xchg
xor
ror
mov
setno
xchg
or
mov
sub
sar
cs
push
cmc
hlt
mov
fs
dec
or
or
mov
lods
jb
fmul
push
scas
daa
and
or
stc
jb
xor
xchg
xchg
fst
dec
xchg
leave
sbb
and
daa
push
sub
dec
nop
sub
or
fsubr
mov
leave
xor
jae
adc
gs
lahf
in
loope
daa
xchg
jmp
add
shl
mov
sub
mov
or
loop
dec
xor
or
sahf
push
nop
outs
sbb
xor
ins
cmps
into
inc
pop
imul
arpl
ror
dec
jae
and
les
cmp
sub
loopne
jno
stos
adc
lahf
sbb
jbe
fsubrp
mov
outs
xchg
push
mov
jb
xchg
into
jp
sahf
(bad)
stc
dec
cmps
cmp
retf
mov
sbb
add
sbb
je
and
inc
popf
xchg
retf
retf
pop
popf
inc
xchg
sub
or
les
mov
xchg
sbb
add
pop
and
stos
xchg
xchg
psadbw
jne
pop
imul
std
push
xchg
ret
jo
inc
add
push
sub
cmp
enter
mov
mov
mov
cmp
mov
jecxz
loopne
imul
mov
mov
and
jg
pop
lock
lahf
mov
mov
in
loope
retf
inc
shl
sahf
add
lods
cmp
fstp
in
(bad)
xlat
xchg
imul
push
inc
fcom
ins
pop
mov
xchg
dec
ds
neg
in
loope
push
push
adc
aaa
mov
sub
addr16
ins
pop
retf
jb
shl
(bad)
mov
aam
repz
cmp
xor
mov
enter
and
sbb
(bad)
jmp
ins
sbb
mov
mov
fild
shl
and
js
and
jb
cli
std
lds
paddsw
iret
dec
jmp
(bad)
lock
cmovle
pop
cmp
push
fsubr
sbb
test
cmp
es
adc
adc
adc
out
fldpi
outs
shl
and
sbb
movs
dec
pop
push
lds
dec
or
inc
clc
sbb
es
stc
add
mov
mov
sub
stc
neg
jmp
xor
sub
dec
pop
mov
cdq
inc
aas
sbb
sahf
xlat
sub
sub
and
shl
test
mov
lds
dec
arpl
xor
cmp
xchg
test
sub
mov
sti
add
(bad)
repz
jecxz
push
out
cwde
into
mov
cwde
jecxz
pop
push
dec
sbb
dec
test
dec
imul
mov
jecxz
pop
movs
jle
xchg
fsubr
xchg
cmp
mov
(bad)
rol
fwait
shr
lds
popf
js
jmp
jl
std
lods
sub
push
xor
xlat
(bad)
ja
mov
cmp
add
add
cmp
cs
mov
icebp
push
in
fs
push
fild
jmp
(bad)
call
sbb
mov
pop
inc
movs
and
fmul
scas
cmp
(bad)
js
test
mov
fisubr
scas
xor
aaa
inc
mov
dec
jmp
cmp
in
lds
jbe
popf
(bad)
push
sub
out
cmps
loop
fwait
std
xlat
cmps
rol
in
mov
inc
xor
push
cmp
push
ss
xchg
(bad)
pshufb
ins
cmp
push
cmp
cmp
adc
mov
or
adc
dec
int
call
dec
test
mov
jle
cmps
or
(bad)
push
or
fwait
mov
(bad)
cmp
repz
inc
ror
enter
or
pusha
mov
mov
test
inc
ins
push
daa
outs
gs
int
add
jle
fs
push
pop
in
ja
clc
inc
inc
out
push
pop
gs
ret
mov
mov
jle
cmp
sahf
in
dec
pop
int
sub
jg
loope
push
imul
frstor
rol
(bad)
jbe
inc
push
push
out
scas
jmp
xchg
fisubr
pop
movs
pop
pop
sub
dec
lods
mov
(bad)
push
ror
test
loope
adc
fwait
loopne
ins
test
test
xchg
cwde
(bad)
ret
add
popa
test
or
das
fistp
sbb
mov
bound
pop
sub
out
sbb
imul
adc
pop
out
mov
add
adc
push
mov
dec
or
inc
mov
int
mov
in
shl
mov
push
scas
mov
aam
jnp
enter
mov
call
pop
pop
cmps
push
or
dec
xor
arpl
inc
pop
dec
test
pushf
leave
dec
popf
jmp
dec
xchg
mov
pop
pop
call
cmc
lods
xchg
add
dec
sub
jae
and
push
jne
push
int3
pmuludq
aas
(bad)
and
pop
sub
mov
mov
je
mov
sub
inc
sbb
lock
xor
test
iret
out
pop
je
into
cmp
sbb
lea
dec
jecxz
stos
mov
ins
(bad)
nop
ror
lds
ficom
sahf
icebp
test
jnp
nop
fisubr
push
jmp
cmp
call
and
xchg
add
mov
push
jae
sbb
dec
inc
or
cmps
retf
and
pushf
sub
xlat
lahf
xchg
mov
dec
mov
dec
jb
jne
fsub
cmp
cmp
loope
data16
xchg
mov
rol
outs
add
std
sub
add
call
repnz
jne
xchg
sub
pop
arpl
mov
xchg
add
xor
in
add
mov
inc
scas
pop
fistp
aad
and
in
dec
add
into
mov
pop
imul
popa
cmp
and
jb
jmp
popf
cmp
popa
sbb
jge
mov
and
pop
add
fisttp
data16
add
jle
add
push
out
xor
mov
push
cmp
jle
xchg
push
mov
jae
or
mov
mov
cmp
rcr
fsubr
cli
inc
jmp
inc
icebp
push
xchg
into
ins
cli
call
(bad)
add
outs
call
or
mov
mov
(bad)
scas
and
mov
dec
mov
nop
fst
(bad)
and
std
je
(bad)
aas
xchg
out
int
shl
imul
inc
jnp
(bad)
in
fadd
test
pop
aaa
aaa
xchg
(bad)
jno
xchg
adc
mov
out
movs
pop
fisubr
cwde
add
cmps
jb
dec
enter
fld
lahf
jno
ins
xchg
repnz
mov
mov
jecxz
sbb
cmp
push
jo
call
xor
and
sar
push
mov
mov
add
cmp
push
fdivrp
xor
xchg
adc
(bad)
outs
jmp
stos
sub
sub
xor
add
sbb
and
mov
xor
push
(bad)
je
push
imul
test
outs
mov
jmp
fs
retf
int3
jns
mov
fwait
fwait
mov
aas
(bad)
das
sub
mov
in
push
dec
sbb
sbb
lds
mov
add
adc
ins
in
push
or
in
jns
mov
sub
ins
cwde
mov
jne
jne
out
or
and
mov
mov
mov
push
push
inc
aam
imul
popf
mov
rcl
ja
jmp
in
dec
push
mov
mov
add
sub
xlat
add
(bad)
lods
pop
cmp
mov
inc
pop
cmps
shl
fstp
mov
loopne
sub
mov
dec
lods
mov
push
jnp
outs
arpl
dec
lods
push
movs
enter
js
pop
mov
mov
pop
pop
and
xor
add
and
pop
jnp
xchg
adc
xlat
pop
fcom
pushf
dec
outs
jnp
daa
or
ins
or
in
and
adc
sbb
loopne
adc
sub
(bad)
dec
pop
sub
jo
fist
adc
dec
push
sbb
repnz
pop
push
das
or
scas
lea
mov
adc
imul
mov
retf
or
dec
jb
push
push
sub
pop
je
jg
pop
call
in
out
xchg
sbb
xor
mov
jecxz
dec
nop
mov
jle
jp
pop
repnz
xchg
or
call
jmp
ret
pop
test
xchg
loopne
call
out
push
enter
xchg
sub
sbb
adc
add
stos
pop
fisub
pop
push
mov
add
sbb
or
sbb
dec
cld
or
xchg
or
fmul
add
fldenv
xor
mov
ret
loope
cmps
(bad)
cmps
out
in
(bad)
bound
or
pop
jmp
in
mov
add
ins
inc
sbb
cmp
loop
repz
inc
pop
inc
or
mov
and
mov
out
test
(bad)
adc
xchg
mov
adc
xor
fst
fldenv
mov
pop
aad
sbb
sbb
sub
dec
inc
dec
sub
xchg
pop
push
pop
fbstp
add
and
shl
popf
or
inc
in
test
mov
jg
pop
loop
sahf
or
aad
iret
nop
test
jl
add
bound
lock
cmps
mov
mov
and
push
rol
mov
ror
inc
repnz
mov
imul
aas
leave
nop
nop
sub
mov
and
loop
mov
sar
inc
dec
push
sub
sbb
lea
jge
das
mov
(bad)
cdq
addr16
mov
out
inc
sub
ror
push
mov
mov
into
adc
or
lods
test
add
ins
xor
xor
aad
cmp
test
sti
shl
aas
inc
mov
js
hlt
leave
cmp
ja
ss
dec
xor
adc
inc
data16
ins
mov
cmp
jae
lods
mov
or
cmp
enter
cmp
and
shl
in
xchg
mov
js
aad
cmps
pop
cmp
in
xchg
push
(bad)
sti
ficomp
dec
shr
lahf
pop
mov
push
mov
fbld
xor
mov
lock
sbb
cwde
mov
bound
sub
lods
retf
aaa
dec
add
ja
in
pop
pop
mov
push
popf
and
sbb
inc
jecxz
iret
popa
(bad)
loop
push
xor
outs
inc
ds
adc
jnp
test
dec
mov
fs
stos
outs
push
cmp
or
retf
arpl
cdq
in
mov
xchg
sbb
add
jmp
push
and
or
push
push
ja
sub
div
out
or
scas
aad
sbb
nop
and
xor
cmp
push
sbb
xlat
sub
inc
or
cs
repz
add
clc
xchg
rcl
mov
daa
add
test
mov
fs
sti
jns
pop
mov
(bad)
sub
jae
mov
mov
js
inc
inc
shl
pop
sbb
jbe
lock
jp
and
pop
fcmovu
es
aas
cmp
mov
sbb
mov
jle
adc
dec
pusha
mov
xchg
std
xchg
les
and
rcl
out
cli
dec
cmps
out
sbb
push
rcr
jmp
jle
nop
or
xchg
jle
jo
inc
pop
sbb
or
mov
stos
xchg
cld
fnsave
call
cmp
mov
add
sub
inc
jle
mov
cwde
pop
and
jbe
fnsave
push
retf
cmp
cld
leave
or
imul
xor
and
mov
mov
dec
pop
sub
div
dec
add
sub
leave
sub
xor
mov
sbb
sahf
push
mov
xchg
fdiv
jp
ss
jge
add
mov
mov
out
cld
jne
in
mov
push
cmp
sub
sub
mov
shl
pop
popa
fwait
or
pop
or
(bad)
int3
enter
popa
mov
retf
jmp
dec
and
cmps
xchg
enter
jbe
stos
bound
mov
mov
pop
sub
dec
in
gs
pop
xchg
adc
pop
dec
push
and
cmp
int3
js
mov
dec
mov
push
push
adc
sbb
xchg
ins
xchg
and
push
test
jl
pop
pop
mov
jecxz
mov
in
lea
stos
popf
loopne
lds
sub
neg
in
inc
mov
jge
div
(bad)
popa
out
and
(bad)
aad
sub
adc
out
shr
dec
jbe
fmul
aam
push
shl
sub
add
or
and
rol
jg
repnz
xchg
cmps
pop
imul
gs
ins
jno
repnz
scas
inc
jecxz
pop
retf
add
fdivr
cmp
add
jb
xchg
bound
sub
xchg
or
push
ror
pop
in
sti
dec
pop
and
mov
push
js
cmp
int
add
add
lock
add
ret
lods
test
mov
add
inc
jmp
loopne
ins
pushf
mov
inc
jb
aas
jmp
retf
push
sub
xchg
arpl
mov
xchg
aaa
push
and
sub
enter
adc
xor
fwait
dec
sbb
jne
xchg
adc
movs
jne
mov
mov
mov
sub
test
mov
or
inc
leave
xor
ins
mov
stos
icebp
outs
mov
xchg
aaa
js
outs
(bad)
dec
js
cmps
mov
enter
mov
fucomip
mov
icebp
sahf
sahf
stc
adc
fsub
js
jno
push
pusha
add
imul
push
xlat
mov
lods
fiadd
nop
pop
addr16
jno
mov
mov
jb
jne
xlat
xchg
sub
stc
sub
cld
fisttp
dec
xchg
nop
push
sti
clc
cmp
je
xor
push
test
xchg
xchg
lahf
loopne
jmp
dec
pop
stos
out
pop
dec
hlt
jl
push
mov
outs
ins
fdiv
js
jl
fdiv
dec
push
adc
fmul
push
sar
push
cli
mov
popa
ret
mov
mov
repz
or
mov
cmps
imul
mov
add
pop
test
jle
xor
ja
clc
fnstcw
mov
(bad)
rcr
fnstcw
enter
dec
dec
inc
push
sbb
sahf
iret
mov
sbb
jg
and
and
fnstcw
in
xchg
mov
pop
adc
ss
cmp
xchg
sbb
xchg
(bad)
lahf
cmp
or
pop
repz
int3
test
ret
or
and
or
imul
repnz
shl
sbb
bound
dec
xlat
stc
push
inc
out
jbe
xchg
dec
scas
hlt
inc
scas
mov
push
sub
scas
js
cmp
cmp
aas
add
int3
inc
push
repnz
push
cmp
or
imul
cmp
lds
dec
and
ret
lods
repz
inc
cmp
xor
or
mov
push
stos
pop
loop
sbb
clc
(bad)
ror
mov
test
jno
adc
jge
xor
das
jo
jnp
xchg
test
std
adc
test
mov
adc
xchg
lock
dec
pop
mov
mov
ret
mov
mov
std
cmp
repnz
inc
xchg
into
xor
mov
push
out
jmp
in
mov
out
std
push
aas
mov
outs
sub
or
(bad)
or
pop
jno
cmp
jl
dec
xor
movs
pop
adc
repnz
mov
out
inc
cmps
adc
cld
jns
mov
fmul
aad
aam
outs
pop
iret
add
fidivr
xlat
int
int3
mov
repnz
mov
jno
sub
sub
gs
or
pop
mov
das
push
mov
in
cmps
jns
push
(bad)
loope
gs
in
popa
xor
outs
xor
xchg
scas
dec
or
in
rol
and
add
rol
mov
dec
int
jecxz
xchg
ficom
fcomp
inc
mov
test
mov
imul
repnz
sub
xchg
sar
imul
xor
jbe
fsubr
push
into
ins
stc
push
into
cld
in
or
mov
ficom
cmp
or
push
or
es
inc
xchg
fistp
xchg
loopne
xchg
in
cdq
mov
mov
pop
push
jecxz
mov
pop
adc
xchg
fwait
ss
inc
xchg
fisubr
push
cmp
xchg
sub
test
in
sub
sub
fbstp
adc
repz
jae
(bad)
jns
add
mov
mov
sbb
xchg
icebp
movs
movs
adc
loope
jl
aaa
mov
sub
sbb
outs
loopne
mov
out
mov
sbb
hlt
or
(bad)
fwait
jb
or
call
jne
sub
neg
push
push
outs
xchg
adc
popf
stos
mov
dec
jns
(bad)
int
xchg
cli
mov
out
(bad)
leave
mov
cmps
lds
mov
inc
out
jmp
dec
addr16
pop
mov
xchg
loopne
inc
jmp
int3
mov
lock
xor
cdq
mov
call
iret
aad
ja
dec
jae
adc
cmp
test
in
inc
fidiv
sbb
in
ret
jmp
data16
out
in
jnp
rcr
xor
xor
pop
rcl
mov
jg
aam
lahf
push
icebp
jb
repz
pop
pop
popa
iret
pop
ds
popf
fnstsw
cmp
cdq
push
inc
mov
dec
cmp
call
xor
adc
loopne
adc
sbb
xor
cli
adc
push
pop
mov
iret
dec
lods
add
xchg
or
test
cmp
retf
cdq
dec
fcomp
lea
xor
cld
jbe
movs
lods
mov
mov
mov
retf
xlat
adc
sahf
or
ja
dec
push
push
out
mov
push
outs
addr16
push
mov
pop
adc
mov
cmp
mov
es
sbb
mov
jnp
pop
mov
retf
sbb
imul
cmp
movs
mov
in
adc
xchg
leave
sar
cmps
sub
not
into
aad
jmp
aas
push
rcl
mov
or
ficomp
jmp
(bad)
push
std
pop
jecxz
sbb
shl
mov
mov
aaa
mov
and
rol
mov
cmc
popa
cmp
aaa
fwait
jecxz
cld
push
pop
xor
xlat
sbb
rcr
xchg
sbb
js
sbb
int
mov
std
in
scas
add
fbstp
pop
arpl
fdiv
pop
ds
mov
adc
sbb
loopne
xchg
in
in
shr
xor
sub
inc
adc
jg
stos
or
or
sub
inc
rol
mov
push
jo
test
loopne
dec
rcr
into
popa
or
mov
fadd
enter
cli
adc
push
loop
add
sub
cmp
mov
enter
jg
adc
adc
cs
gs
lea
mov
lds
lahf
xchg
jp
ds
scas
shl
inc
adc
call
dec
mov
push
cmp
arpl
dec
(bad)
ja
in
div
xor
mov
xor
outs
push
ins
rcr
movs
adc
sbb
pusha
fcomp
or
fs
cmp
dec
out
mov
adc
mov
les
adc
inc
loop
cmp
pushf
pop
pop
(bad)
idiv
shr
movs
push
test
inc
inc
hlt
push
sti
add
ja
adc
addr16
jle
cld
sbb
xor
adc
imul
adc
(bad)
std
aas
mov
rcr
test
retf
push
hlt
and
pop
inc
or
mov
cwde
je
or
movs
push
push
inc
mov
scas
imul
test
(bad)
push
jae
pop
lsl
cld
popf
repnz
xor
sbb
push
xchg
fcom
pop
stc
mov
loop
enter
test
add
aas
out
cmp
outs
add
jb
in
add
xor
out
xchg
dec
mov
clc
test
shl
or
(bad)
ins
pop
jae
aam
sbb
ins
sub
fwait
pop
data16
pop
mov
int
shr
fwait
add
jo
sahf
imul
jnp
ss
push
xor
cmps
ds
lock
sub
xchg
mov
ins
stos
mov
cmp
movs
repnz
ss
mov
rcl
mov
or
dec
lods
into
sbb
xchg
xchg
in
neg
cmc
pop
loop
ret
lods
je
clc
movs
pop
inc
stc
push
out
fs
gs
push
xor
sti
scas
dec
inc
adc
xor
retf
xor
lahf
imul
(bad)
jo
cmc
xchg
jmp
mov
ror
or
sub
imul
sub
inc
jb
pop
push
sbb
leave
mov
pop
dec
lds
stos
leave
adc
pop
dec
rep
jl
les
cmp
aas
lods
neg
mov
in
(bad)
or
sbb
xor
cmps
rcr
jbe
lock
hlt
(bad)
not
push
das
inc
sbb
jae
and
out
jae
xor
cmps
out
ins
test
shl
aam
push
mov
and
call
pop
dec
xor
xchg
xlat
adc
(bad)
icebp
fistp
mov
jo
cs
dec
jne
xlat
pop
sub
mov
jmp
dec
test
push
repz
inc
in
mov
pop
ds
fiadd
jmp
mov
jbe
dec
enter
inc
push
pusha
and
daa
out
lods
add
xchg
xchg
mov
or
loop
movaps
shr
and
jns
xchg
arpl
xchg
mov
fbld
fs
ins
push
lahf
ror
call
sub
pop
test
or
mov
adc
sub
push
aaa
out
and
clc
mov
and
mov
jmp
cmp
mov
sub
or
pop
cmp
ror
daa
imul
add
lods
scas
fsub
jno
leave
sub
pop
mov
test
fsub
sbb
sub
scas
(bad)
(bad)
sbb
sbb
mov
inc
nop
sbb
cdq
adc
mov
loop
fisttp
pop
jle
add
adc
xchg
mov
jl
mov
add
mov
cmps
jbe
pusha
(bad)
sbb
fist
loop
retf
fisttp
xor
dec
push
adc
mov
cmp
mov
xchg
call
cmp
pop
xchg
bound
inc
and
cmps
scas
cmps
inc
xchg
xchg
(bad)
scas
dec
jmp
out
xchg
pushf
inc
mov
gs
adc
adc
in
icebp
outs
gs
mov
setg
repnz
dec
xor
xchg
adc
fild
inc
mov
jbe
aaa
and
mov
push
and
push
bound
adc
pop
(bad)
xchg
push
cmps
enter
stc
inc
jmp
sbb
jns
adc
inc
mov
cmps
mov
pop
cdq
xchg
adc
cmc
loopne
stos
rcr
mov
repz
shr
(bad)
mov
inc
inc
adc
xchg
dec
inc
retf
in
mov
(bad)
dec
mov
in
xchg
sbb
push
popa
leave
mov
adc
jecxz
jnp
loope
xchg
aas
jae
loope
mov
jmp
xor
clc
into
push
sbb
xchg
popf
jle
cs
push
add
mov
fisub
jne
mov
fcmovnb
retf
popf
aad
(bad)
push
mov
fdivr
ret
sbb
in
lock
push
lahf
pusha
xor
sbb
daa
xor
or
enter
or
lea
xor
cmp
loop
dec
mov
sbb
pop
jge
sbb
add
in
(bad)
sub
xchg
and
sub
test
push
loop
outs
cmps
loope
sub
xchg
clc
add
scas
rcr
es
pop
adc
daa
cmp
outs
xchg
or
jb
jne
xor
mov
and
js
mov
retfw
mov
in
rol
and
scas
movs
mov
dec
loopne
retf
test
ret
pop
repz
inc
sahf
inc
sbb
mov
mov
mov
cmp
pop
mov
push
or
mov
out
push
dec
in
xor
je
leave
mov
mov
or
xor
dec
fs
and
pop
push
cli
ds
mov
outs
xor
bound
aaa
or
mov
xchg
adc
jg
dec
out
jb
js
into
test
cs
pop
dec
fcomp
push
push
mov
pop
iret
and
sbb
xchg
inc
bound
push
jmp
stc
mov
sbb
adc
retf
xchg
imul
mov
xor
xchg
inc
shr
sub
je
ja
bound
jo
adc
pusha
mov
js
and
in
push
popa
xor
imul
ret
adc
xlat
mov
cmps
(bad)
push
fcom
out
imul
lock
movs
add
div
daa
and
mov
out
iret
mov
push
into
cmps
and
xchg
inc
jle
add
int3
mov
mov
mov
test
xchg
lds
test
push
mov
out
push
int3
aam
mov
repz
cld
in
clc
aaa
sbb
dec
mov
cmp
lods
or
pushf
inc
push
and
xor
push
dec
jl
addr16
or
imul
js
adc
jle
fcmovnu
mov
cmps
and
mov
test
mov
inc
(bad)
call
sti
(bad)
push
dec
scas
cdq
das
add
sub
cvtps2pi
sbb
jp
ds
int3
std
pop
rcr
int3
sbb
inc
and
ficom
in
cmps
pop
dec
sub
xchg
(bad)
in
add
sub
ds
ins
pop
cdq
sahf
addr16
ins
mov
mov
ret
pop
jno
(bad)
mov
or
xchg
inc
outs
inc
in
push
sub
mov
or
nop
dec
pop
mov
scas
jns
and
sahf
dec
xchg
mov
add
xor
dec
or
shr
mov
retf
enter
inc
xchg
mov
std
adc
xor
icebp
cwde
inc
and
and
call
mov
cmp
push
mov
fisubr
and
leave
pop
jno
sbb
fst
or
cld
std
adc
aam
sub
pushf
das
mov
cld
scas
sbb
and
sub
sbb
enter
call
add
dec
or
(bad)
push
jecxz
or
mov
xor
sbb
je
(bad)
call
leave
and
neg
stos
mov
dec
or
aam
xchg
cdq
das
dec
imul
adc
cmp
(bad)
mov
scas
xchg
in
mov
mov
and
push
jno
mov
mov
imul
inc
adc
inc
movs
ja
test
xor
cmps
js
fcmove
push
into
repz
test
xor
pop
adc
push
out
adc
out
jge
aaa
push
scas
out
int
and
fldcw
lea
inc
cmps
cmps
adc
ins
movs
xor
std
jo
cmp
std
loopne
outs
and
xchg
jecxz
jne
fadd
call
fs
hlt
cmp
cli
pop
out
cmp
push
mov
int
movs
dec
sti
mov
mov
arpl
out
js
std
mov
into
stc
rcr
xor
push
aaa
xchg
push
pop
(bad)
sbb
xor
mov
sub
jnp
lds
aaa
cmp
xchg
es
mov
data16
pop
sub
(bad)
dec
fwait
mov
out
fwait
dec
call
or
(bad)
and
add
test
jle
stos
adc
pop
cmp
xchg
push
fwait
xchg
imul
scas
push
or
mov
ret
dec
adc
sbb
mov
mov
inc
fwait
int
fisttp
jbe
and
cwde
xor
out
and
dec
pop
lods
jmp
pop
outs
call
xor
shl
sbb
in
and
(bad)
into
(bad)
sbb
fcmovnu
test
out
pop
push
out
rcl
out
pop
call
je
jecxz
bound
push
fcmovnu
mov
in
jecxz
jg
push
jns
cmp
fistp
(bad)
into
out
mov
scas
cdq
or
mov
pop
dec
ret
inc
into
or
mov
mov
sbb
out
(bad)
mov
out
rol
adc
dec
retf
xor
daa
xchg
inc
push
add
mov
or
popa
sbb
imul
mov
sbb
push
and
ret
sub
scas
ror
and
mov
mov
or
lods
leave
or
out
dec
sbb
(bad)
sahf
mov
pop
shr
ror
cdq
xor
cmp
mov
mov
dec
cmp
jae
sahf
xchg
inc
xor
test
mov
xchg
iret
push
adc
dec
and
loope
jmp
mov
add
ror
out
fnsave
fwait
jecxz
fild
fisubr
gs
cdq
cmp
aam
lahf
or
sbb
jbe
sbb
jp
mov
add
push
pusha
idiv
bound
dec
sahf
pop
adc
cmp
test
popf
out
int3
das
fmul
loope
pop
fwait
xor
icebp
push
inc
push
push
mov
(bad)
pushf
icebp
sti
cmp
popa
fs
clc
cmp
jb
das
test
aad
nop
sub
and
sub
rcr
dec
outs
inc
sbb
pop
jb
pop
ror
pushf
cmps
stos
jecxz
cmp
xlat
push
imul
sbb
inc
xchg
ins
sbb
pop
fsubr
xor
mov
aam
loope
mov
fstp
add
push
ror
mov
xchg
add
(bad)
cmp
mov
les
push
stc
fist
fist
test
inc
or
dec
push
imul
inc
inc
movs
cld
ds
push
mov
or
jns
xchg
call
out
je
xchg
cmps
ret
rcl
xlat
and
push
adc
out
arpl
xor
nop
aaa
and
(bad)
jo
ja
repnz
adc
jne
add
jb
outs
inc
sub
add
mov
xor
aam
movs
js
mov
add
cmp
mov
add
jge
sub
imul
lds
ficom
daa
adc
mov
aaa
jo
sbb
enter
xor
fiadd
test
pop
sub
stc
dec
or
dec
xchg
test
inc
jb
(bad)
lock
pop
add
ret
ror
jno
lods
scas
xchg
push
cli
jnp
lds
fcomp
cli
mov
sahf
sbb
retf
jmp
test
lods
scas
jmp
outs
retf
push
jo
pop
jg
sbb
je
les
movaps
js
adc
cmp
cmps
out
push
mov
jmp
pop
cmp
arpl
cli
in
add
pop
xchg
cs
or
pushf
sbb
or
pop
xor
mov
mov
shl
stos
out
lods
jo
or
movs
jmp
addr16
test
dec
out
leave
mov
pop
mov
inc
mov
jl
xlat
jle
loopne
mov
mov
test
cmp
adc
dec
int
int3
lods
sar
add
adc
push
sub
xchg
dec
jbe
stc
(bad)
imul
jo
sbb
test
mov
jecxz
fstp
fdivr
mov
(bad)
setb
mov
jo
push
test
ja
mov
nop
jmp
icebp
pop
cs
call
or
fucomip
cmps
(bad)
sub
or
daa
js
mov
cmps
jmp
xchg
xchg
dec
sbb
lahf
xchg
push
movs
pusha
sar
(bad)
jp
sub
mov
sub
repz
cmps
jne
mov
ja
sbb
push
xchg
sti
outs
std
loop
jmp
or
cmp
movs
and
std
in
mov
aas
sub
adc
test
inc
pop
inc
fdiv
and
adc
pop
in
jae
and
cld
add
xor
ret
mov
je
lock
icebp
sar
repz
scas
pop
pusha
in
out
mov
jp
dec
in
scas
mov
and
mov
bound
imul
cmp
or
(bad)
mov
and
jle
mov
test
cmps
sbb
aam
out
(bad)
cmovbe
cmps
call
inc
mov
dec
xchg
rcl
push
int
mov
or
jns
inc
in
scas
hlt
test
dec
test
jne
clc
imul
mov
fstp
popf
out
mov
test
out
shl
and
icebp
cmp
adc
retf
mov
js
fbstp
or
jmp
movs
rep
sub
mov
loopne
push
dec
pop
mov
bound
cmps
inc
sub
fucomp
mov
cmp
xor
sbb
scas
outs
(bad)
in
in
jns
inc
xchg
fdiv
repnz
movs
push
aas
jb
popa
enter
std
adc
les
xor
pop
dec
push
sub
sbb
xchg
stos
pcmpeqw
ror
xchg
jnp
cmp
dec
into
push
fist
ficomp
jns
xor
fmul
scas
icebp
xchg
movs
cmp
ficom
ss
mov
mov
add
nop
push
pushf
rcl
mov
mov
jns
stos
stos
xchg
add
add
add
mov
mov
lods
loopne
call
test
or
dec
pushf
pop
movs
retf
and
xor
dec
cmp
idiv
mov
and
cmp
mov
pop
pop
jp
mov
shr
(bad)
enter
mov
ds
push
xor
cdq
and
sar
imul
test
pop
cli
popa
jno
push
add
sbb
arpl
in
fist
test
scas
inc
jb
repz
dec
pop
mov
and
(bad)
retf
cwde
arpl
pop
and
inc
cmp
sub
sbb
mov
lea
inc
in
imul
lahf
cmp
sub
mov
(bad)
ins
adc
imul
xchg
sbb
mov
fcom
outs
sbb
loope
loopne
fadd
add
out
mov
xchg
push
inc
pop
fucomi
push
adc
rol
jmp
aam
outs
retf
and
add
(bad)
ds
fisttp
aad
cmp
dec
neg
aaa
or
shl
pop
sbb
sbb
lock
in
lods
or
push
jge
xor
fisubr
push
out
jg
movs
fnstsw
add
sub
test
xchg
mov
cmp
int3
and
aad
push
(bad)
add
push
sub
xor
ins
cmp
cld
fwait
push
add
fst
adc
aas
sub
pop
xchg
lahf
out
mov
stc
inc
gs
(bad)
mov
es
sar
xor
mov
adc
retf
cmp
bnd
dec
jmp
xchg
mov
sub
pop
lods
rol
popf
mov
adc
aas
test
xchg
cmp
aam
jl
popf
adc
push
push
fnsave
sub
jmp
sbb
mov
mov
sub
dec
jmp
inc
mov
or
inc
inc
fisttp
jae
test
retf
mov
pop
xchg
and
mov
aas
dec
cli
stc
jns
cmp
nop
jbe
xchg
sub
fist
push
or
xchg
pop
ja
push
stc
push
xor
fwait
push
push
jmp
cmps
stos
adc
inc
push
repnz
pop
push
inc
repnz
movs
xchg
or
sbb
das
leave
cmp
mov
dec
adc
inc
sbb
dec
or
or
adc
mov
ret
movs
lds
cmp
xor
lods
mov
dec
je
outs
(bad)
js
sbb
mov
mov
clc
and
push
loop
je
js
pop
fsubr
adc
dec
(bad)
jmp
pop
mov
adc
out
or
int
mov
out
or
xor
scas
dec
mov
pop
mov
xchg
popa
jns
in
jmp
loope
aas
pop
sub
cmp
(bad)
arpl
add
xchg
pop
std
inc
push
push
push
fidivr
(bad)
mov
in
cmp
dec
inc
dec
repz
stos
popa
cmps
call
pop
inc
in
mov
sub
cmps
xor
xchg
or
ret
push
sar
or
inc
lods
sub
jbe
in
nop
mov
xor
das
dec
xchg
stos
adc
cmps
scas
aam
retf
pop
icebp
adc
sub
xor
and
retf
and
add
xchg
daa
xchg
push
(bad)
ins
lods
clc
nop
mov
and
cmc
mov
sahf
sbb
sbb
pop
aas
sub
int3
jge
jmp
sbb
pop
pop
adc
and
popf
pop
inc
or
daa
dec
adc
fs
shr
sti
addr16
push
repz
(bad)
mov
xor
pushf
bound
mov
inc
enter
mov
dec
sbb
cld
int3
jmp
loope
adc
push
mov
stos
jmp
and
push
jge
add
(bad)
push
cmp
fidivr
add
mov
mov
retf
out
mov
mov
mov
dec
fwait
shl
or
fisubr
xor
cli
cld
inc
jae
adc
xchg
jle
call
xchg
icebp
jae
les
add
inc
jle
jg
addr16
out
xchg
dec
out
sub
push
and
leave
bound
call
out
stos
add
pop
pop
out
loop
adc
std
jno
lods
inc
jecxz
push
push
sbb
dec
retf
mov
fsubr
int3
jne
xchg
jo
ret
adc
xor
inc
mov
mov
popa
outs
adc
pop
xor
add
sub
push
mov
mov
add
loop
test
jp
cmp
int3
dec
jne
mov
add
pop
sahf
jl
sbb
pop
and
add
gs
shl
in
loopne
sbb
inc
and
and
inc
add
scas
xchg
lods
or
dec
cmp
fldenv
aad
sbb
xchg
push
pop
jns
out
ret
loop
jne
(bad)
stc
pop
inc
push
dec
(bad)
(bad)
adc
mov
stos
aad
or
hlt
xchg
xor
mov
pop
inc
or
sti
lds
sbb
ins
jnp
lds
pop
xchg
add
call
push
sub
mov
or
jmp
sub
adc
xchg
jecxz
mov
xchg
in
aaa
retf
dec
fisubr
pop
dec
dec
or
bound
mov
fs
mov
cmp
arpl
in
stc
aas
scas
dec
inc
jns
mov
pop
push
scas
fld
ret
das
cmps
jl
sub
sahf
dec
loop
xchg
es
adc
pop
icebp
add
das
outs
jb
xlat
pop
and
(bad)
push
leave
ret
in
add
or
jp
imul
cmp
cld
mov
adc
dec
ja
std
sub
push
cmp
sub
loop
out
hlt
scas
lock
mov
pop
sub
jb
add
jecxz
mov
cs
fs
loop
lock
jecxz
xchg
mov
loopne
and
adc
inc
fild
xchg
push
inc
mov
outs
push
add
fstp
(bad)
stos
inc
add
sbb
adc
and
lahf
sub
lods
mov
dec
inc
dec
mov
shl
inc
aaa
jns
add
js
call
sub
xchg
cs
dec
jmp
fsubr
push
das
add
or
jl
jo
jne
lea
stc
call
(bad)
pop
dec
adc
arpl
mov
jbe
push
dec
fist
dec
inc
lock
pop
push
mov
std
push
test
lock
dec
movs
fisttp
ds
add
jl
je
push
mov
outs
mov
push
cld
mov
add
in
xor
call
adc
mov
mov
(bad)
mov
mov
dec
pop
aam
pop
and
popa
mov
jmp
sbb
adc
pop
sbb
cmp
ins
pop
(bad)
jo
stc
lea
iret
xor
out
sub
cmps
jecxz
or
adc
ss
inc
stc
test
in
add
scas
jge
or
pop
sti
mov
loop
mov
sub
xor
adc
and
mov
pushf
jmp
and
ins
scas
imul
mov
fist
xor
(bad)
lahf
push
(bad)
stc
call
and
jg
into
cmp
xchg
test
mov
es
cwde
adc
fneni(8087
mov
(bad)
jne
int
dec
in
popf
scas
outs
xor
mov
pop
(bad)
mov
and
in
inc
(bad)
sbb
xchg
sbb
mov
hlt
mov
inc
sub
ffreep
addr16
adc
outs
repz
aam
pop
add
cmp
mov
adc
add
jmp
inc
lods
scas
movs
in
fisub
test
mov
aaa
mov
add
mov
cmps
xchg
push
int
push
dec
data16
bound
cmp
inc
les
in
sar
outs
mov
aam
sbb
jae
mov
out
hlt
dec
stc
aam
outs
mov
inc
mov
xchg
adc
cmp
push
jmp
in
mov
mov
sti
push
scas
cld
retf
add
outs
mov
int
cld
cmp
(bad)
in
jecxz
jae
mov
cmp
adc
jb
jnp
dec
and
pop
fcom
adc
popf
(bad)
test
sub
or
dec
mov
sbb
mov
pop
dec
scas
xor
dec
cmp
inc
nop
jmp
sar
ins
pop
sub
std
push
rol
ds
dec
xor
popf
xchg
pop
leave
rcl
mov
je
and
(bad)
lahf
fnstcw
cmp
push
inc
loope
pop
adc
pop
mov
not
cs
scas
dec
loope
loop
cmp
stos
mov
icebp
es
fwait
cmp
ss
xor
lods
mov
clc
push
or
test
aad
inc
sti
pop
inc
xor
jns
cs
xor
iret
jge
mov
adc
lock
pop
adc
or
or
xor
add
mov
mov
xor
jp
lock
imul
popf
mov
fdivr
mov
gs
sysenter
fdivr
sub
bound
adc
test
cmp
sahf
push
mov
mov
scas
sbb
push
pop
add
ds
jmp
sbb
xor
in
adc
jo
sbb
dec
sub
bound
pop
or
ins
add
mov
lds
sub
add
cmp
dec
jg
jp
mov
mov
sbb
jmp
adc
(bad)
pusha
pop
adc
cmps
jne
adc
cmp
cmp
xor
mov
(bad)
scas
mov
repnz
sbb
or
sbb
add
ss
mov
fstp
inc
or
ror
adc
mov
xor
jne
jp
pop
test
sbb
adc
mov
out
lods
mov
popf
les
sar
jg
aam
ret
add
(bad)
push
mov
mov
imul
in
ficomp
xchg
fcmovnbe
mov
int
xchg
cld
gs
cmp
enter
data16
addr16
or
inc
or
imul
jae
xchg
clc
ss
aam
xor
je
loop
movs
mov
fcomip
xchg
jo
mov
mov
lods
movs
iret
ins
cmp
dec
jmp
inc
xchg
xchg
push
test
in
cmp
add
inc
push
adc
or
sbb
jae
push
or
dec
or
pop
enter
std
push
aad
ror
push
jnp
push
std
mov
aaa
mov
adc
dec
sbb
arpl
sub
jno
into
cld
rdtsc
jmp
das
fidivr
jnp
inc
repz
add
inc
(bad)
cmc
jecxz
xchg
aam
jp
cmp
dec
jecxz
das
adc
pop
inc
cmp
popa
clc
mov
pop
call
inc
cdq
push
mov
jbe
dec
xchg
push
jmp
adc
or
mov
scas
jmp
mov
leave
out
retf
or
add
dec
cli
sub
mov
aad
inc
adc
fucomp
out
mov
rol
fidivr
sbb
xchg
pop
addr16
loopne
nop
add
neg
mov
loopne
std
xor
shr
pusha
cdq
push
fldlg2
ret
clc
and
inc
mov
loopne
popf
jecxz
pop
mov
lods
aaa
loop
jg
in
and
push
pop
mov
ja
mov
inc
and
fimul
add
out
push
push
jne
mov
pusha
inc
(bad)
cmp
and
out
pop
jle
mov
dec
xchg
or
loope
inc
push
xchg
popa
pop
cwde
out
or
loope
push
xor
test
sub
lods
or
xchg
shl
mov
(bad)
and
sbb
movs
xor
leave
mov
mov
cmp
mov
adc
sbb
or
cdq
test
add
bswap
pusha
push
jae
cmp
push
cwde
out
dec
and
xlat
mov
inc
xor
sub
mov
dec
ins
rcr
adc
mov
dec
mov
js
sub
ficomp
and
push
sub
mov
or
icebp
addr16
ret
pop
mov
dec
gs
pop
cld
lods
xor
lods
jg
cmp
stos
mov
aaa
mov
cmp
rcr
lahf
lods
dec
push
sub
movs
xchg
push
or
out
push
enter
jle
xchg
outs
ds
aam
popa
or
push
retf
iret
jno
sti
call
loop
mov
push
pop
into
mov
retf
add
dec
mov
mov
pop
ins
mov
mov
mov
(bad)
icebp
dec
(bad)
int3
mov
pop
push
out
or
mov
pmaddwd
fisubr
icebp
(bad)
sub
push
mov
jmp
mov
sahf
cld
push
inc
sub
mov
ds
jp
shr
outs
cld
das
add
add
xchg
and
or
pop
out
(bad)
jle
mov
ins
mov
ltr
mov
or
lea
fild
aad
jl
mov
aaa
fild
bound
dec
adc
mov
jmp
(bad)
lds
mov
mov
cs
lahf
loopne
xor
cli
lods
jbe
addr16
push
arpl
into
xchg
add
js
imul
mov
dec
cmp
inc
xchg
arpl
dec
sub
mov
mov
add
pop
add
movs
push
std
cmp
scas
xchg
push
inc
retf
xchg
aam
scas
pop
aaa
jb
int
out
gs
xchg
retf
adc
jp
xchg
dec
jmp
mov
xlat
inc
call
movs
adc
add
cld
jmp
hlt
movs
in
ror
mov
dec
pop
icebp
cmp
in
mov
int3
fs
in
mov
ret
push
nop
push
or
push
mov
cmc
stc
jge
inc
sub
gs
adc
adc
xor
adc
cwde
xchg
add
pop
inc
stos
and
push
sar
inc
fistp
pop
inc
jb
in
push
and
sbb
cmp
stos
rol
jae
cmp
cwde
or
add
rol
sahf
gs
movs
sbb
sti
pop
pop
push
jns
outs
xchg
cli
and
leave
sub
jbe
das
sbb
add
push
cdq
inc
cmp
fistp
leave
repz
in
inc
js
shl
mov
not
or
mov
out
mov
out
stos
data16
xor
sub
pop
adc
js
inc
lods
ins
add
aad
dec
nop
cmps
ins
mov
sub
in
mov
cmp
(bad)
push
mov
push
ins
fsub
out
lods
inc
jmp
or
jmp
js
mov
push
clc
push
aad
sahf
pop
sahf
dec
mov
mov
call
dec
mov
(bad)
rcr
pop
movs
add
mov
ret
int3
inc
in
xchg
jb
repnz
out
jns
and
mov
shl
retf
shr
stos
jle
push
inc
mov
dec
push
loopne
mov
int3
lods
pop
test
jae
das
mov
jp
mov
mov
push
pop
data16
addr16
dec
cmps
hlt
xchg
in
xchg
push
or
jns
shr
push
cmp
das
add
jp
out
out
sbb
jg
mov
mov
mov
(bad)
lods
and
inc
mov
mov
dec
in
idiv
leave
outs
dec
retf
aaa
jo
gs
cmc
daa
imul
sub
xchg
push
pusha
retf
retf
cmps
jns
jg
xor
les
and
adc
add
mov
adc
cmp
and
je
(bad)
and
mov
cld
(bad)
aam
lock
xchg
fsub
xor
add
sti
mov
movs
(bad)
pop
mov
mov
inc
cwde
popa
mov
push
push
mov
xchg
jno
jne
jns
mov
adc
jns
or
retf
xchg
imul
and
outs
inc
mov
ja
inc
dec
xchg
xor
dec
inc
mov
dec
int3
add
(bad)
scas
mov
push
xor
daa
loope
pop
push
rcl
pop
dec
xor
push
xor
sbb
vhsubps
movs
add
(bad)
aam
in
sar
push
push
int3
icebp
cmps
cmc
or
inc
ret
xchg
xor
dec
imul
add
jno
mov
out
adc
jne
mov
scas
movs
inc
or
pop
jbe
fnstsw
(bad)
fsubr
add
jge
aas
(bad)
jp
jle
or
(bad)
xlat
inc
cmc
int
aam
and
mov
(bad)
mov
push
stos
mov
cdq
mov
movs
out
add
imul
fmul
out
clc
call
cmp
fild
pop
push
(bad)
xchg
cmp
sub
inc
cmps
add
iret
jno
mov
sub
xchg
mov
ror
jg
inc
sub
xor
jmp
mov
xchg
loope
pushf
mov
cmp
js
xor
ja
add
push
xchg
ror
sub
xlat
pop
sahf
cwde
jne
neg
sub
adc
aas
or
fist
push
xchg
outs
out
retf
fiadd
mov
sbb
sub
xor
xchg
xchg
test
push
or
cmp
xor
iret
push
mov
mov
push
add
popf
or
jle
scas
dec
xor
inc
jg
shl
and
mov
(bad)
out
push
pinsrw
repnz
lods
ins
rol
fcomp
das
psubusb
cli
cdq
xchg
shl
adc
dec
adc
push
sbb
(bad)
outs
push
xchg
inc
loopne
rcr
gs
dec
in
fadd
jo
lahf
pop
dec
in
adc
arpl
jno
fisttp
sub
arpl
push
icebp
(bad)
jl
and
dec
inc
out
test
outs
jbe
lea
sub
test
inc
cmp
dec
mov
fwait
stos
xchg
inc
hlt
out
mov
mov
test
xor
push
dec
shr
jmp
or
inc
aaa
test
push
jge
pusha
dec
jae
pop
(bad)
aas
and
out
push
mov
mov
in
mov
mov
loope
push
movs
mov
dec
fwait
add
cdq
mov
popa
adc
push
loop
cld
jge
sbb
cmps
inc
or
je
add
jge
std
mov
jnp
movs
xchg
sub
cwde
ins
dec
rcr
dec
push
xchg
gs
mov
movs
mov
jne
mov
ret
fnsave
jl
lock
loope
loop
or
cmp
pushf
mov
dec
icebp
imul
mov
retf
imul
mul
pop
mov
fsub
cmp
dec
cmp
cmp
mov
int3
in
push
pop
mov
xor
jb
add
cs
mov
aad
jnp
inc
push
jbe
xchg
aam
icebp
push
push
outs
fdivr
lods
fdivr
adc
sub
mov
sbb
mov
(bad)
dec
addr16
enter
xor
xchg
inc
xor
adc
std
jne
sub
inc
sar
or
dec
loope
ins
jno
sub
mov
gs
sbb
movs
in
adc
arpl
pop
lods
pop
call
and
rcl
es
rcl
mov
retf
jae
outs
ja
std
push
adc
jp
fisttp
and
and
jbe
cmp
pop
fcomp
xchg
push
nop
push
outs
aad
push
sub
outs
lods
das
xchg
pop
retf
or
in
mov
add
les
inc
dec
lods
mov
shl
clc
mov
xor
sbb
(bad)
push
into
and
dec
mov
jmp
lods
js
retf
outs
add
shl
mov
pop
dec
mov
sbb
mov
mov
(bad)
sbb
cmps
lock
or
aaa
or
or
jb
mov
lahf
mov
mov
adc
mov
shr
dec
test
add
imul
pop
je
jmp
shl
dec
mov
mov
test
js
adc
in
mov
mov
xchg
fwait
sbb
fild
gs
ins
lods
sbb
push
xchg
mov
pop
pop
dec
and
add
mov
jne
adc
jge
imul
cmp
xor
lds
into
cmp
lds
cmp
call
pushf
jo
scas
add
sub
(bad)
aaa
pop
push
and
mov
push
sbb
cmps
bound
arpl
pop
push
mov
rcl
rol
mov
mov
inc
call
cmps
or
aaa
xchg
in
mov
mov
jmp
pop
shr
sbb
call
neg
mov
push
jnp
jle
popf
ins
sub
mov
sbb
repnz
out
cdq
push
mov
dec
push
mov
add
test
pop
mov
fs
mov
add
pop
mov
fimul
mov
xchg
nop
inc
es
jmp
repz
and
jns
dec
dec
addr16
dec
test
call
inc
je
jp
out
inc
movs
pop
ss
test
pop
aam
jecxz
dec
mov
cmp
leave
rcr
xor
loopne
jnp
jnp
xchg
mov
stc
test
push
and
add
popf
ins
test
dec
(bad)
hlt
mov
mov
xchg
jo
adc
retf
fidivr
mov
in
movs
shl
ins
js
mov
jnp
popf
cli
rol
jmp
int3
cmp
inc
addr16
fbstp
jl
popa
push
pop
ret
fdivr
lahf
push
arpl
dec
imul
or
lahf
pop
xchg
data16
inc
loop
pop
dec
test
add
add
xor
mov
(bad)
sbb
popf
cmps
xchg
in
add
inc
arpl
popa
pop
popf
mov
push
xchg
xor
xchg
xchg
mov
mov
sbb
ficomp
pop
test
mov
adc
data16
int
je
inc
fs
add
xor
cmp
daa
imul
stos
pop
in
xor
push
icebp
or
in
(bad)
imul
lahf
in
inc
cmps
sbb
sub
sub
iret
jecxz
xchg
and
(bad)
popf
cs
xchg
rol
adc
add
dec
iret
sbb
push
mov
add
jle
jle
dec
in
push
dec
dec
mov
sub
xchg
adc
cmp
inc
ins
mov
inc
stos
test
sbb
lahf
or
int3
repz
mov
pop
(bad)
not
cli
(bad)
jecxz
jno
jle
mov
cmp
adc
js
dec
mov
aam
cmps
hlt
pop
xchg
cmp
sbb
pop
mov
addr16
lahf
(bad)
cmp
sub
add
pop
xlat
xor
jnp
nop
jmp
inc
(bad)
call
inc
retf
movs
fdivr
dec
es
inc
repnz
frstor
outs
das
call
call
push
and
test
push
cmps
sti
call
imul
test
sahf
push
addr16
lods
loopne
loopne
(bad)
push
cmp
xchg
out
dec
mov
sahf
pushf
icebp
neg
daa
pop
xor
jnp
or
paddsb
jns
xchg
dec
mov
mov
and
repz
sbb
push
in
retf
mov
in
lods
add
jp
jne
sbb
cmp
aaa
sti
fld
cmps
(bad)
arpl
stos
sbb
inc
pop
call
jmp
test
pmaxsw
push
xor
scas
cmp
mov
push
jbe
xor
mov
popa
xlat
xchg
test
movs
mov
jl
xchg
jg
jb
jbe
lods
mov
jle
stos
inc
and
(bad)
xchg
stos
dec
lods
jb
and
into
fidiv
add
das
jg
push
jmp
aad
(bad)
cvttps2pi
add
add
retf
mov
fcomp
dec
pop
stc
add
mov
lahf
jg
add
mov
das
fild
cwde
cmc
(bad)
sti
pop
lock
idiv
aaa
sub
fdivr
outs
not
xor
pop
or
or
adc
jp
add
das
retf
dec
in
(bad)
add
add
pop
loop
cmp
aam
cmp
mov
sbb
adc
and
and
cmc
nop
jbe
leave
pop
sub
push
(bad)
sti
test
pop
stc
movs
xor
xlat
test
out
shl
inc
adc
or
and
add
jecxz
stc
iret
and
push
stos
int
scas
hlt
adc
mov
ret
push
outs
in
mov
fisttp
add
adc
lds
loopne
fadd
ins
mov
jns
mov
repz
icebp
mov
xor
jnp
add
fs
xchg
rcr
push
rol
(bad)
(bad)
mov
ins
sbb
push
xchg
pushf
or
xlat
jbe
jae
rcr
adc
sub
(bad)
call
jno
dec
pop
jbe
lahf
mov
call
bound
cmp
cwde
lods
in
enter
mov
movs
hlt
mov
mov
fdiv
sub
cmp
sub
retf
lahf
sahf
xchg
and
cwde
les
add
lods
imul
push
dec
mov
(bad)
add
dec
stos
sub
hlt
(bad)
mov
mov
dec
sbb
jge
(bad)
cmp
nop
or
jnp
fcmovne
mov
add
sub
push
dec
lea
imul
adc
aas
hlt
or
dec
es
mov
in
(bad)
lds
sti
fcom
icebp
inc
xchg
dec
mov
lock
shr
pop
cmp
pop
mov
test
cmp
and
mov
lods
mov
ss
xchg
int
mov
cdq
ror
aas
enter
inc
gs
jae
dec
mov
push
and
adc
icebp
sbb
cmp
(bad)
cmc
scas
jb
je
pop
jmp
ss
ret
test
inc
push
cmp
xchg
int3
in
cmp
add
pushf
jnp
nop
out
add
mov
xchg
mov
in
pushf
shr
movs
xchg
ss
retf
outs
sahf
std
xor
in
mov
xchg
fadd
je
sub
mov
mov
fst
in
lock
adc
sub
xor
pop
nop
lahf
sbb
repnz
mov
rcr
orps
scas
mov
pop
mov
cmp
and
sbb
push
arpl
or
mov
inc
push
cmp
call
mov
mov
outs
mov
jmp
jo
pop
into
loopne
mov
out
inc
mov
mov
shld
bound
bound
mov
xor
and
mov
add
dec
jge
push
jne
adc
out
or
cmc
mov
mov
inc
(bad)
push
xchg
pop
pop
inc
push
sub
out
inc
jmp
fwait
out
add
scas
mov
fidivr
dec
loope
sbb
in
and
adc
dec
pusha
or
xor
cwde
push
inc
sub
jle
inc
xor
jge
pop
fwait
daa
rol
jmp
cmp
and
in
imul
adc
push
fidiv
cmps
and
jns
ins
rol
test
shl
je
and
push
jbe
sub
loopne
rol
inc
fld
sbb
pop
jb
jb
fisttp
lods
jo
fist
or
and
jl
scas
dec
jecxz
sahf
mov
cmps
inc
mov
out
mov
loopne
out
jmp
jmp
mov
sub
jb
je
lock
in
stos
jg
push
adc
dec
stos
cmp
mov
dec
shr
push
pop
mov
(bad)
cld
stc
xchg
ins
mov
in
add
rcl
jg
and
fsubr
xor
mov
ficom
nop
cmp
add
loop
mov
xchg
das
jge
xor
cmp
dec
sahf
popf
jg
jnp
jmp
dec
call
rcr
adc
xchg
mov
out
sub
ret
(bad)
push
jge
fwait
cmp
jns
pop
icebp
outs
js
fsubp
xchg
and
dec
mov
add
retf
in
dec
mov
arpl
(bad)
cmp
inc
clc
nop
hlt
mov
das
adc
mov
jecxz
pop
out
(bad)
adc
pop
sub
fsubr
cld
dec
push
setp
sbb
adc
cmp
fs
stc
jnp
aaa
nop
retf
loop
mov
or
mov
mov
mov
test
or
rcl
fdivr
pop
aas
test
inc
outs
int
outs
push
xchg
sbb
imul
and
xchg
xchg
(bad)
in
fistp
es
sbb
repnz
add
fwait
test
rol
jecxz
jp
dec
push
and
movs
mov
movs
mov
gs
mov
cmps
mov
lods
lock
xchg
cmp
mul
out
lods
inc
inc
rol
and
mov
jg
imul
leave
lods
dec
mov
sar
cs
out
mov
jg
rcl
xor
dec
or
ja
test
dec
outs
push
dec
dec
cli
lahf
movs
pop
lods
ret
pop
pop
fs
sti
pop
cmp
pushf
push
not
fs
stos
add
pop
inc
jp
add
pop
cmp
ficom
add
lods
mov
(bad)
loope
jl
pop
out
jle
scas
lahf
pop
inc
push
and
fstp
repnz
gs
xor
jp
and
adc
(bad)
mov
cmp
and
shl
jae
lock
inc
pushf
jns
mov
add
or
cmps
or
in
add
fwait
retf
int3
xor
stos
into
lahf
mov
sbb
sub
jl
pusha
movs
gs
test
sub
daa
sbb
sub
movs
pusha
mov
nop
pop
std
imul
adc
pop
jae
jl
and
lds
xchg
push
leave
cmp
jl
add
shr
fmul
aad
mov
and
dec
add
sub
add
fist
push
pop
add
adc
mov
push
mov
mov
repz
out
ins
lds
pop
or
jecxz
dec
shr
les
test
cmp
scas
shr
cld
(bad)
push
rcr
xchg
cld
enter
cmp
mov
sbb
stos
pushfw
xor
movs
daa
scas
jecxz
or
movs
xor
push
(bad)
fwait
mov
ret
shl
or
adc
outs
cmps
cmp
sar
dec
sbb
out
jl
xchg
sbb
xchg
adc
add
outs
ins
call
jp
shr
mov
jl
jb
and
movs
xchg
add
xchg
out
push
adc
ins
or
jl
cli
dec
jp
sbb
repnz
xchg
gs
loopne
addr16
fadd
pop
lods
imul
lahf
xor
mov
ficom
imul
and
xor
sub
pop
movs
cmc
(bad)
dec
adc
repnz
(bad)
sti
mov
jb
dec
inc
and
scas
sub
in
push
mov
pop
jnp
syscall
not
jno
retf
mov
jno
sar
jmp
xor
dec
xor
ret
mov
cmp
push
adc
enter
and
xchg
int3
mul
in
xor
shl
loopne
aam
dec
aaa
adc
ins
cmc
sbb
and
in
inc
inc
cmp
popa
push
mov
inc
(bad)
stos
xor
pop
xor
jmp
sbb
dec
out
in
xor
aad
scas
xlat
cdq
repz
out
xor
mov
jae
or
aaa
shl
mov
add
fld
imul
stos
cmps
push
shr
xchg
xchg
pop
mov
sbb
pop
pop
xchg
xchg
aad
jo
stos
fldenv
js
xlat
out
repz
fidivr
enter
imul
mov
xchg
or
nop
ja
adc
pop
jmp
mov
ja
arpl
push
int3
mov
(bad)
jbe
jmp
sub
sti
push
repz
and
shl
outs
xchg
or
int3
out
xchg
mov
fincstp
xchg
pop
mov
xchg
jg
les
xor
or
icebp
mov
inc
stos
inc
jne
pop
push
fwait
jmp
imul
and
or
frstor
and
cli
cmps
push
imul
cdq
xor
idiv
stos
add
and
xchg
cmp
sbb
fmul
and
inc
pop
xor
loope
mov
dec
jnp
retf
cdq
mov
pop
dec
imul
les
loopne
jnp
pop
cmp
enter
ret
pop
mov
call
addr16
sub
mov
clc
gs
aam
xor
mov
mov
cdq
cwde
addr16
gs
xor
mov
cmps
mov
dec
jbe
outs
ins
loopne
lea
inc
or
xor
loopne
jae
dec
cmp
leave
xchg
pop
jb
mov
pop
daa
mov
and
in
movs
sub
(bad)
mov
sbb
mov
xchg
fld
pop
jg
nop
fldl2e
inc
sbb
mov
cmps
cmp
xor
pop
js
push
xchg
adc
cmp
ss
out
xchg
sub
lahf
pop
add
mov
loop
or
leave
daa
push
dec
adc
retf
cmp
cs
(bad)
inc
loop
ret
repnz
mov
fdiv
mov
ins
scas
cdq
adc
rcr
cmp
aas
test
jmp
xchg
or
adc
(bad)
fsubr
repnz
out
ins
mov
out
mov
fsubr
xchg
shl
jle
mov
rcr
push
mov
call
fsubr
loope
lahf
mov
int3
and
bound
fs
fstp
mov
jl
daa
shl
jmp
pop
sbb
xor
nop
pop
popw
into
add
xlat
call
or
xor
fldcw
push
clc
jge
(bad)
push
sbb
push
xor
push
into
pushf
xchg
cmp
retf
dec
or
imul
imul
repz
add
jl
iret
mov
xor
xor
shr
sbb
div
fnsave
ins
sub
loope
dec
mov
adc
test
retf
jp
inc
mov
call
xor
ds
dec
aam
repnz
test
jp
mov
nop
clc
out
(bad)
mov
div
cwde
je
inc
popa
pop
test
jbe
jmp
inc
mov
test
push
mov
pop
loopne
sbb
or
fmul
ss
enter
lods
adc
test
rcr
inc
lea
inc
mov
imul
popa
mov
mov
sbb
loope
out
repnz
xor
js
loope
mov
pop
inc
mov
jnp
lahf
repnz
retf
lock
icebp
int
mov
daa
xchg
adc
cmps
xor
test
ret
mov
loopne
cmp
js
add
(bad)
jnp
lahf
out
frstor
xchg
or
adc
pusha
adc
clc
jmp
jb
ret
data16
cmp
push
or
sbb
test
ja
test
imul
xor
add
jb
sbb
inc
mov
adc
adc
daa
sub
jg
loop
mov
sbb
sbb
inc
jg
(bad)
ja
lods
retf
bound
cmps
mov
fcmovu
out
dec
xchg
lds
test
lea
jbe
popa
into
test
mul
inc
xor
pop
(bad)
shr
xor
adc
cmp
push
aas
pop
aaa
mov
pop
adc
pop
xchg
mov
mov
dec
dec
sub
push
imul
popa
inc
cmp
mov
add
and
jnp
push
aas
imul
xchg
scas
bound
xchg
test
dec
mov
mov
sbb
inc
and
mov
call
hlt
mov
mov
fist
es
popf
xchg
out
jo
aad
cmc
and
sbb
out
xor
sub
jns
iret
xchg
test
inc
sub
inc
popf
ins
cmp
adc
sar
mov
inc
mov
xor
mov
std
into
pop
fistp
fsub
fdiv
cmp
outs
cmp
nop
push
adc
pop
mov
daa
loopne
inc
cmp
and
sub
test
jno
je
sub
popf
sub
(bad)
call
bound
out
sti
sbb
jb
scas
mov
xor
mov
iret
call
das
dec
or
into
xchg
mov
mov
ins
mov
cmp
push
jge
stc
imul
shr
icebp
out
adc
ret
xchg
cmp
sbb
stos
mov
aaa
cli
push
pop
push
mov
movs
mov
xchg
int3
dec
loop
scas
dec
scas
std
jecxz
daa
sub
inc
inc
into
inc
mov
std
sub
int
dec
cmp
imul
mov
scas
(bad)
cli
ss
dec
cli
xor
retf
in
(bad)
stos
pusha
cld
cmp
js
shl
push
dec
adc
jmp
cmp
cli
fidiv
pop
sbb
ins
dec
dec
add
rol
xchg
nop
retf
jnp
push
aad
dec
jmp
data16
mov
mov
inc
(bad)
aaa
ds
scas
or
xchg
out
xchg
bound
pop
shr
xchg
inc
call
add
xchg
hlt
push
scas
sub
xor
mov
sbb
inc
loopne
repnz
dec
mov
dec
les
lock
jecxz
aas
pop
test
cmp
xlat
adc
sub
scas
pop
outs
xor
sbb
xchg
adc
shr
icebp
std
idiv
jge
xor
mov
imul
je
into
fst
mov
cwde
scas
cli
xchg
jmp
movs
jmp
in
mov
imul
repnz
ds
(bad)
sub
pushf
push
mov
dec
call
xor
fisubr
data16
popf
out
mov
jg
sub
adc
pop
je
pop
sbb
lds
iret
call
and
mov
push
mov
mov
bound
push
push
lahf
int3
enter
xchg
mov
or
stc
out
test
aaa
pop
dec
mov
int
pop
mov
inc
jmp
jl
or
dec
rcl
loope
adc
(bad)
leave
push
add
xor
cmp
inc
and
jle
fnstenv
mov
and
lods
inc
mov
push
add
fst
mov
aaa
je
cmp
ds
test
push
sbb
mov
xor
push
pop
cwde
nop
sti
xor
mov
jb
fld
ficom
popf
add
fnstenv
xor
push
sbb
pop
je
pop
or
sbb
stos
aad
sub
xor
cmc
xchg
ja
fdivr
mov
jb
adc
pop
leave
pop
aas
push
int
fnsave
add
mov
gs
or
fbstp
icebp
xchg
sar
(bad)
xor
mov
je
cmp
xchg
test
jo
jmp
push
adc
fs
repnz
pop
popa
xor
jecxz
mov
repnz
out
add
test
popf
push
xor
shr
cli
inc
jmp
jl
lock
xchg
fdivr
aad
and
mov
inc
test
fdiv
xor
les
mov
push
daa
add
mov
push
jmp
cmp
call
dec
push
jmp
lods
jle
pop
fs
mov
cmp
mov
imul
test
mov
scas
xor
fild
mov
jg
lods
lahf
stos
jmp
xor
mov
repz
loopne
push
xchg
sub
push
(bad)
or
cmc
pusha
js
retf
rcr
imul
sub
mov
mov
or
cmp
and
lods
push
push
xchg
dec
ds
repnz
mov
xchg
sub
mov
enter
stos
cmp
mov
pop
movs
xchg
test
loope
ins
jp
xor
loop
xchg
mov
pop
or
retf
test
fisubr
sub
or
sbb
push
xor
cmc
out
sub
movs
jns
in
adc
sar
daa
dec
ds
jae
pop
mov
mov
call
jp
test
(bad)
cmc
sti
in
or
fdivp
std
ins
pop
(bad)
arpl
jae
adc
fidivr
mov
push
jo
pop
or
cmps
xor
pop
(bad)
stos
cld
test
adc
fdiv
push
xchg
mov
adc
push
inc
push
data16
les
clc
mov
test
xor
dec
test
xchg
movs
ret
jae
adc
loopne
les
imul
mov
sbb
call
mov
ins
dec
ss
push
mov
mov
inc
and
mov
jae
mov
cmp
fimul
xchg
pop
jmp
mov
stos
retf
jno
outs
pop
push
mov
jb
add
add
xor
stc
inc
mov
leave
int
scas
popa
dec
jp
mov
stos
mov
fild
ins
jmp
bound
repnz
ret
sub
aaa
mov
adc
repnz
adc
sub
xchg
scas
fdiv
inc
push
dec
aad
xchg
xchg
ja
jmp
mov
les
daa
div
arpl
push
mov
xor
daa
out
adc
mov
inc
cmp
repnz
in
push
and
or
mov
sub
xchg
xchg
xchg
out
inc
cdq
ret
test
sahf
scas
(bad)
ss
stc
dec
add
sub
cdq
aaa
push
dec
xchg
xor
xlat
imul
sub
xor
les
(bad)
lods
out
mov
pusha
and
sub
sbb
out
pushf
mov
les
(bad)
jg
out
or
and
push
dec
cdq
inc
enter
pushf
data16
sub
and
movs
jp
por
mov
add
sub
or
fwait
loopne
mov
mov
ins
or
dec
sar
pop
push
loopne
test
ins
push
push
mov
push
or
gs
mov
cmc
addr16
mov
(bad)
call
adc
aaa
inc
sbb
and
and
sub
mov
pop
xchg
pop
lea
and
jmp
das
pop
jle
jne
mov
xor
loop
sbb
aas
or
shl
sub
aaa
mov
aad
ret
xchg
arpl
dec
add
lods
in
mov
jb
or
call
sbb
dec
ret
leave
pop
push
icebp
adc
test
xchg
jae
inc
ins
xor
test
mov
xchg
pop
das
hlt
addr16
and
xchg
pop
fnsave
addr16
push
sub
cmc
pop
dec
jo
cli
mov
int
dec
das
cmp
loopne
retf
mov
leave
inc
inc
add
das
xor
mov
nop
rol
lock
sub
adc
lea
test
(bad)
aad
mov
xor
add
sbb
adc
(bad)
ja
outs
cs
sbb
test
mov
xchg
jle
sti
push
pop
dec
fcmovb
xchg
mov
test
ret
mov
adc
movs
loopne
ret
es
mov
adc
fst
or
(bad)
mov
aad
(bad)
dec
inc
or
push
mov
dec
pushf
adc
neg
xchg
cld
cwde
push
dec
pop
pop
les
out
mov
mov
neg
adc
push
and
mov
sub
push
repz
mov
add
jne
add
cmp
push
mov
lods
leave
daa
xchg
js
ficomp
push
cmc
cwde
into
rol
cmp
and
cmp
push
adc
fsubr
sub
cmp
push
loopne
fisub
fcom
add
or
bound
cmp
test
daa
nop
ds
inc
jnp
mov
push
icebp
cdq
pop
jle
sub
in
adc
arpl
xchg
inc
and
push
push
pop
add
or
je
jb
pop
mov
ret
retf
ins
inc
jnp
iret
test
mov
xor
mov
fmul
test
jns
rcl
adc
fs
and
cmp
out
jno
xchg
adc
bound
mov
mov
lods
(bad)
lock
pop
(bad)
jp
out
fidivr
dec
out
std
mov
outs
aad
jne
pushf
jl
jge
jnp
popa
or
mov
pop
inc
inc
push
add
push
test
inc
cmps
and
mov
jbe
movs
ret
xor
adc
pop
pushf
or
int3
mov
mov
push
push
neg
push
inc
les
std
pop
dec
rcl
push
or
mov
inc
pop
(bad)
in
cmp
loopne
mov
add
xchg
js
mov
jg
cdq
xor
lea
mov
test
jne
aam
and
xor
mov
dec
xchg
imul
inc
jmp
and
mov
pop
sbb
push
dec
lods
mov
test
xor
int3
test
cmc
call
pop
sub
dec
icebp
adc
hlt
pop
sub
call
mov
mov
sbb
sub
stc
ja
jg
push
and
cdq
push
rcr
dec
inc
and
pop
and
not
add
test
imul
pop
test
mov
pop
dec
pop
popa
nop
and
neg
inc
aad
xchg
push
adc
int
cwde
mov
retf
lock
or
sub
and
push
pop
adc
fs
in
lods
aam
out
xchg
sub
in
sub
inc
inc
das
(bad)
bound
sahf
add
(bad)
aad
arpl
push
add
pop
or
xor
jp
sub
sbb
movs
mov
test
pop
mov
fdivr
aas
xor
sub
mov
xchg
dec
jns
clc
sub
mov
inc
jg
aam
xchg
inc
sub
adc
push
sub
push
mov
popa
in
mov
enter
icebp
jnp
das
fwait
call
enter
mov
inc
mov
fistp
scas
jmp
dec
(bad)
inc
mov
xor
(bad)
push
arpl
jmp
add
lmsw
dec
add
test
movs
test
div
mov
and
cmps
push
in
pusha
push
mov
xor
ins
retf
lods
add
cmp
mov
mov
shr
dec
sbb
dec
mov
or
push
xchg
add
mov
jl
(bad)
jl
arpl
lds
ss
ins
bound
div
imul
retf
xor
xchg
movs
adc
push
(bad)
mov
inc
adc
mov
xor
add
aam
xor
or
fs
fnstenv
push
mov
adc
int3
push
(bad)
outs
jecxz
sbb
jb
mov
add
jecxz
dec
sub
in
mov
ins
cmp
cmp
jae
inc
cmps
push
in
xchg
ret
mov
repz
movs
repz
dec
(bad)
jmp
jbe
adc
push
test
push
nop
jg
mov
lea
js
dec
jno
pushf
sub
cld
mov
jns
pop
inc
or
popa
loop
leave
imul
xor
stc
adc
dec
(bad)
test
lock
ja
sbb
or
jg
(bad)
les
and
inc
push
push
(bad)
out
jl
jmp
mov
lods
mov
ja
adc
sub
or
dec
jbe
adc
jl
sbb
pop
dec
mov
pushaw
pop
out
xchg
cwde
sub
xor
push
fs
(bad)
cmps
shl
lea
push
out
xchg
xchg
xor
out
and
dec
neg
add
inc
inc
jo
std
ins
das
dec
loope
in
sbb
sub
mov
dec
pop
lods
movs
stos
(bad)
push
fdiv
pushf
(bad)
adc
iret
(bad)
out
int3
pop
mov
rcr
sbb
add
outs
xchg
aas
push
and
daa
mov
pushf
cmp
xor
lahf
and
dec
xor
(bad)
mov
inc
or
xchg
cmp
mov
mov
xchg
in
(bad)
movs
ficom
sub
mov
das
sub
mov
sub
pop
push
push
std
or
or
sbb
(bad)
enter
adc
fwait
setge
int
dec
gs
retf
hlt
in
loop
int3
cmp
push
inc
add
(bad)
cwde
cmp
loope
pop
xlat
or
fisub
add
dec
pop
into
scas
xchg
retf
lock
mov
int3
dec
mov
and
bound
dec
fisubr
mov
enter
push
jne
adc
sub
sbb
jmp
aad
ret
cmps
loop
maxps
icebp
xchg
cmp
or
je
int3
test
out
cwde
pop
add
jno
or
add
cmp
je
aaa
stos
sti
xchg
lock
jl
mul
jb
sbb
pop
and
jno
stos
jmp
cmovp
div
mov
cmp
cdq
repnz
std
inc
fwait
dec
add
mov
jge
fstp
dec
mov
mov
das
std
inc
mov
(bad)
pop
jl
rcr
dec
inc
and
jae
mov
add
push
or
or
pop
or
and
dec
cld
or
xor
daa
inc
sub
push
sbb
sub
loope
jmp
sub
lahf
(bad)
mov
mov
test
jge
dec
mov
aas
add
and
fistp
fidiv
jmp
(bad)
mov
sub
fiadd
jae
fst
dec
ffreep
bound
bound
mov
mov
jmp
push
clc
push
mov
fimul
lds
pop
mov
push
out
popf
and
dec
push
and
loope
fldln2
cmps
xchg
nop
push
adc
fld
fwait
pop
ins
push
inc
sbb
xchg
dec
mov
fsubr
mov
mov
or
pop
dec
aad
mov
xor
or
adc
fild
test
sbb
pop
(bad)
jmp
inc
jb
sbb
jno
call
pushf
bound
xor
dec
jae
push
dec
bound
push
test
retf
push
inc
mov
dec
fcmovnb
sahf
outs
jp
pop
stos
adc
scas
jmp
and
lea
fisubr
adc
(bad)
ffree
mov
adc
or
push
sahf
ficomp
fnstcw
(bad)
xchg
and
test
lds
mov
rol
sub
or
dec
push
jb
outs
sbb
movs
hlt
jmp
pop
out
mov
in
mov
loop
xor
xchg
add
mov
pop
mov
test
std
hlt
cld
in
test
jmp
add
shl
mul
push
jl
cdq
adc
or
push
or
cmp
lods
dec
(bad)
jp
aaa
aaa
(bad)
push
mov
pop
hlt
stos
popf
inc
dec
xor
mov
rcr
out
inc
out
addr16
retf
mov
sub
pop
shl
xor
jo
retf
or
stc
hlt
dec
lods
clc
pop
cdq
ins
fbstp
and
mov
mov
sbb
sahf
jge
addr16
jnp
xchg
cmp
xor
leave
push
retf
lods
fucomip
cli
cdq
(bad)
inc
outs
mov
cmp
mov
call
sub
mov
adc
cs
mov
daa
ins
mov
and
cli
cli
fnstsw
pop
lock
mov
pop
rol
cs
jle
jecxz
add
sbb
aaa
xchg
xor
fs
mov
dec
mov
inc
outs
mov
sbb
lahf
inc
movs
xchg
into
stos
adc
(bad)
xor
jae
xor
jno
mov
imul
jge
or
cmp
cmps
cmp
push
inc
push
popa
je
pop
pop
push
mov
xchg
sti
adc
dec
inc
std
movs
mov
icebp
xor
push
cld
pop
hlt
fwait
out
xor
jg
out
call
push
cdq
in
and
shl
or
call
js
mov
leave
je
sub
xchg
sub
mov
repnz
in
shl
sub
xor
adc
outs
adc
xchg
and
push
fcmovne
repnz
js
xchg
fcom
or
push
test
shl
pushf
test
mov
pop
and
or
out
pop
mov
and
mov
sar
inc
ds
call
es
cmp
jmp
and
ror
add
fs
inc
in
sub
out
das
mov
test
bnd
int
xor
or
push
sbb
pop
test
push
pushf
pop
adc
in
movs
int3
es
fst
mov
mov
jo
mov
cmp
add
loopne
xor
mov
inc
cmps
pushf
mov
sub
rol
icebp
sti
jnp
cmovg
std
stc
add
jae
jle
adc
out
lods
getsec
pand
stc
dec
xor
push
push
(bad)
jns
mov
(bad)
mov
xor
jmp
xchg
test
imul
dec
pop
sub
les
jbe
movs
repnz
inc
mov
add
loopne
stos
popf
ins
jl
push
dec
loop
(bad)
ja
mov
iret
aad
dec
xor
jb
jg
cmp
mov
mov
in
sbb
pop
jp
xor
(bad)
js
cmp
jge
mov
and
jge
mov
adc
sub
mov
inc
mov
in
sub
inc
inc
mov
fiadd
fwait
ds
repnz
sbb
mov
mov
jb
aam
repnz
lods
std
mov
mov
retf
leave
std
mov
test
mov
out
fcom
pop
xor
cmp
mov
out
sbb
pop
popf
js
jl
xlat
pop
push
cmp
push
push
cmp
je
sub
inc
xchg
aaa
test
cmp
push
jnp
pop
jp
mov
cs
xchg
xchg
bound
mov
sbb
stos
mov
ret
dec
dec
mov
int
popa
sub
imul
mov
mov
mov
sub
and
scas
push
outs
lahf
scas
enter
sahf
xchg
hlt
xlat
imul
ss
and
push
jecxz
js
push
outs
adc
into
xchg
cmp
cmc
dec
xchg
xor
out
cmp
pop
fscale
jns
push
mov
lahf
test
cld
je
(bad)
mov
out
dec
cmp
int
add
xor
leave
add
adc
jmp
shr
mov
jge
inc
pop
push
sar
xor
dec
rol
sub
repz
add
xchg
push
(bad)
repz
push
scas
jg
mov
popa
jmp
cdq
jecxz
leave
sbb
mov
movups
dec
fmul
hlt
xor
arpl
leave
add
inc
int
loopne
data16
sub
test
dec
sub
ret
or
push
in
(bad)
mov
addr16
cld
or
loop
adc
mov
xchg
mov
data16
das
mov
jnp
mov
iret
jo
mov
dec
sbb
xor
cmp
xchg
loope
pop
js
ja
(bad)
jge
pop
fcomp
add
push
mov
or
push
sub
fld
test
aam
and
inc
or
les
jae
pop
(bad)
frstor
hlt
inc
pop
ins
mov
mov
mov
sbb
cmp
add
popf
xor
jl
push
test
lds
fcomp
rcr
aad
test
push
aas
jne
int3
movs
xor
daa
test
pushf
sbb
cmp
or
dec
ret
jns
fiadd
div
cmps
or
fnsave
jmp
cmps
pusha
(bad)
(bad)
xchg
xor
pop
fwait
add
pop
movs
jnp
push
pop
xor
js
into
mov
cmp
cmp
pop
dec
mov
or
mov
std
push
xchg
mov
fcmove
jnp
or
retf
imul
(bad)
mov
mov
jnp
jecxz
iret
jg
pop
js
xchg
xchg
dec
sbb
sub
test
call
jne
cmc
jmp
push
mov
sbb
mov
add
xchg
movs
pop
ins
repnz
or
and
aas
js
pop
in
inc
out
aaa
std
les
cmp
rol
dec
lea
sub
mov
push
add
nop
push
cmp
mov
jmp
jmp
test
shl
mov
mov
out
add
push
lahf
cmp
pop
dec
clc
(bad)
fidivr
mov
pop
repz
loope
sbb
lods
pusha
in
or
jp
cmp
shl
in
mov
jp
cmc
pop
stc
ret
jle
sbb
push
adc
pop
push
xor
js
jno
add
mov
mov
cdq
push
jo
aas
cs
cmp
pop
loope
pop
fdiv
adc
add
ds
mov
das
aam
jne
and
xor
addr16
xchg
mov
xchg
les
xlat
push
psrlq
fsubr
and
push
push
jp
ja
lahf
call
les
jae
fnstenv
shl
test
xor
push
fiadd
sbb
mov
ds
call
test
cld
movs
or
adc
lods
leave
pop
inc
pusha
xor
jns
and
in
punpckldq
mov
imul
fistp
xor
(bad)
lods
stos
out
movs
int
js
inc
jb
int3
ss
rol
pusha
(bad)
fldcw
pop
push
cmps
mov
fstp
mov
das
xor
and
dec
rcr
shl
sub
scas
pop
sbb
int
out
mov
add
push
hlt
pop
outs
sahf
frstor
(bad)
scas
sbb
daa
lea
cmp
das
mov
aad
mov
sub
jbe
fs
psadbw
out
movs
mov
rcl
(bad)
test
sar
out
lds
pushf
pop
jmp
xor
imul
out
ss
pop
push
push
test
outs
sub
push
hlt
add
push
or
adc
pop
mov
imul
dec
neg
add
xchg
add
aaa
scas
fst
rcr
dec
mov
popa
jmp
cmp
cli
pop
ins
test
xor
jp
out
jmp
or
xor
inc
subps
xchg
arpl
data16
test
dec
(bad)
pop
jae
and
mov
sub
mov
dec
and
adc
outs
pusha
pop
fwait
out
xor
ss
movs
jl
add
dec
mov
adc
inc
cli
xlat
pop
fsub
cmc
pusha
daa
mov
ins
cmp
mov
pop
loopne
xor
push
jns
movs
add
retf
popf
(bad)
push
push
mov
xor
loop
cmp
adc
mov
in
cmp
cdq
pop
sbb
adc
add
ds
ins
xor
adc
xchg
in
cmc
enter
mov
inc
inc
cmp
pusha
mov
jle
test
rcr
jne
mov
pop
rol
push
pusha
out
(bad)
cli
xor
movs
daa
push
xchg
lods
into
mov
xor
jmp
dec
mov
adc
xchg
and
cmp
mov
xor
ret
sbb
inc
jg
cmp
call
cmps
add
aam
and
xor
mov
cli
leave
retf
ret
add
popf
ins
mov
enter
push
push
or
test
pop
mov
pop
adc
and
dec
mov
xor
push
add
test
push
mov
dec
loope
jns
sbb
inc
jmp
xlat
fs
lds
je
test
rcr
in
adc
dec
push
pop
daa
add
xchg
and
iret
xchg
(bad)
mov
cmps
iret
add
mov
aaa
sbb
std
test
xor
aam
inc
inc
push
mov
pop
xchg
mov
xchg
(bad)
jno
repz
hlt
hlt
add
jmp
pop
scas
bound
movs
pop
in
out
(bad)
movs
sub
xchg
shr
movs
add
fcmovu
ins
jne
sub
inc
rcl
int
xchg
adc
pop
daa
jns
mov
xchg
mov
adc
ins
call
pop
xor
out
aas
jmp
inc
or
adc
cmp
sar
dec
stc
push
popa
mov
(bad)
push
retf
push
shl
mov
fdivr
outs
jg
pushf
addr16
push
iret
xor
cmc
cmps
fnstsw
jp
fs
sub
neg
(bad)
std
push
mov
clc
fnsave
inc
mov
xchg
sbb
xchg
xchg
(bad)
jp
push
sub
jno
loop
jne
sbb
fsub
sti
sbb
sbb
mov
sbb
dec
lea
push
scas
jo
jecxz
idiv
jmp
mov
imul
ss
mov
push
adc
loop
(bad)
mov
dec
jno
in
xchg
jecxz
in
mov
adc
dec
or
pop
jg
sub
out
ret
in
das
mov
enter
imul
or
js
aad
bound
adc
fldenv
adc
push
ins
and
aam
dec
cmps
pop
out
pop
loop
xor
arpl
ss
adc
add
cmp
adc
neg
push
jecxz
cwde
fwait
mov
or
cmps
mov
ret
pop
inc
gs
(bad)
push
push
fisub
sar
inc
mov
jae
or
xchg
aad
sahf
gs
(bad)
and
sbb
retf
xchg
iret
aam
push
xor
shr
mov
xor
sub
mov
mov
(bad)
cli
sbb
or
or
xor
xchg
push
cmp
test
in
jl
(bad)
jecxz
mov
sbb
or
mov
out
mov
jg
neg
xchg
or
or
pop
jmp
mov
xchg
sub
retf
xchg
(bad)
dec
mov
call
jae
in
sub
das
jmp
mov
aas
pop
sbb
jg
dec
xchg
test
push
xchg
int
mov
sbb
(bad)
les
mov
jecxz
pop
push
movs
ja
imul
test
ja
lea
xor
mov
add
add
pop
xor
sub
add
dec
mov
jecxz
in
dec
shl
jp
sbb
es
(bad)
loope
fcom
cdq
cs
xor
out
jo
repnz
out
mov
bound
and
sbb
pop
push
outs
and
xor
mov
xchg
adc
dec
mov
xor
xchg
cmp
jno
sub
test
cmp
and
dec
and
push
repz
sub
adc
into
fidiv
popf
cs
dec
in
pop
or
addr16
ret
cmp
stos
cli
sar
retf
mov
cmp
fnstenv
ins
call
pop
dec
fimul
mov
mov
pop
jge
push
mov
mov
pop
cmp
ins
xor
cli
and
(bad)
inc
pop
pop
mov
aaa
cmps
pop
xor
pop
mul
test
jg
jne
pop
test
fst
cmps
mov
adc
inc
(bad)
or
and
cmp
lods
icebp
or
not
mov
cld
test
inc
cwde
cmp
maskmovq
jnp
or
jle
imul
pop
cmp
jnp
outs
sub
pop
dec
fdivr
repz
jnp
jmp
ror
scas
cmc
lods
push
or
and
push
nop
call
test
push
xchg
cmp
nop
cwde
mov
out
add
and
pop
xchg
lahf
es
jnp
stos
mov
mov
les
push
mov
lock
cmp
jp
std
inc
rcr
dec
sahf
and
dec
mov
mov
add
mov
mov
mov
or
or
adc
xor
or
in
inc
ins
int3
pop
out
sub
fstp
test
iret
ret
cld
push
int
loop
(bad)
pushf
data16
push
mov
xchg
int
loope
fwait
mov
xor
pop
retf
leave
cmp
test
jge
lods
ins
out
xchg
mov
xor
outs
cmp
cmp
push
rol
mov
inc
dec
or
lahf
jge
push
push
push
jmp
nop
mul
inc
sub
pop
enter
cmp
mov
movs
cmp
shl
fcom
pop
es
ja
in
mov
mov
mov
or
movs
mov
push
lock
mov
outs
repnz
jae
ret
fwait
mov
dec
xchg
retf
das
mov
fist
and
js
xor
mov
and
xlat
push
push
cmp
call
scas
test
cmp
jl
mov
ins
outs
sub
mov
ret
adc
cld
addr16
inc
ss
push
pop
inc
mov
adc
mov
add
fstp
ror
fldenv
adc
bsr
bound
cmp
xor
mov
xchg
stc
sbb
cld
inc
mov
xchg
mov
add
stc
(bad)
cmp
leave
mov
sub
adc
retf
pushf
xor
mov
ins
cmp
shr
rol
jg
or
or
aad
xor
mov
sahf
rcr
cld
mov
ins
mov
jbe
call
pusha
sbb
nop
pop
cwde
xchg
sti
pop
ficomp
hlt
xchg
or
js
int3
sub
inc
sbb
getsec
xchg
adc
adc
in
inc
push
or
xchg
jnp
push
in
gs
test
pop
jecxz
repnz
test
dec
pop
nop
movs
loopne
ins
add
int
(bad)
es
outs
mov
jge
fist
xor
mov
cmp
sub
push
sub
push
cmp
cmp
xchg
adc
sbb
mov
jle
inc
ret
imul
cmp
xor
cmp
mov
ss
adc
pop
je
push
sbb
sahf
cld
icebp
push
add
mov
lea
mov
fisubr
stos
jb
ins
ficom
jne
cmp
(bad)
idiv
mov
stos
cmc
nop
dec
push
into
out
(bad)
inc
cmps
mov
xchg
out
iret
inc
js
push
ds
push
inc
mov
(bad)
lds
(bad)
cwde
dec
jb
int
sbb
rol
ret
mov
dec
mov
jne
mov
popa
sbb
ins
mov
les
mov
out
or
or
(bad)
push
add
inc
jno
cmp
fcomp
retf
mul
push
adc
jb
sbb
pop
enter
ror
mov
clc
adc
fistp
in
sub
mov
fadd
cmp
push
lahf
out
(bad)
into
out
ror
repnz
lea
push
mov
popf
xlat
aas
fwait
dec
push
ja
push
fbstp
ret
pop
sbb
cwde
inc
cmp
ja
pop
jl
or
scas
xor
mov
adc
je
(bad)
repz
mov
aas
bound
repz
push
out
out
movs
test
inc
test
jo
adc
push
mov
jg
cmp
js
jns
lahf
test
pushf
xor
dec
pop
into
lea
sti
out
jb
stos
jne
or
ret
loopne
and
pop
arpl
xor
sbb
outs
push
sahf
mov
mov
cmps
stc
dec
jbe
pop
push
loope
mov
icebp
movs
cs
js
jae
or
inc
mov
fstp
aas
aaa
out
xor
cmp
in
lods
xchg
adc
(bad)
pop
popf
imul
jl
call
mov
hlt
inc
mov
out
loopne
push
stos
sbb
out
adc
data16
mov
sbb
xor
sub
addr16
or
mov
inc
imul
jbe
add
imul
out
xor
sbb
js
outs
inc
push
cdq
mov
pop
pop
add
outs
stos
popa
sub
inc
sar
into
and
pushf
jo
popf
sbb
jb
mov
cmp
sbb
ins
icebp
pop
mov
pop
test
(bad)
idiv
or
icebp
mov
mov
lock
cmp
mov
and
mov
lahf
adc
mov
(bad)
sbb
push
xor
ins
test
mov
es
mov
leave
cmps
icebp
scas
inc
and
jg
or
mov
sub
cmp
mov
adc
mov
push
loope
add
xchg
daa
inc
cmps
pop
xchg
outs
mov
(bad)
inc
or
xchg
(bad)
mov
js
rcr
scas
jmp
pop
in
sub
mov
outs
arpl
sbb
paddusb
xor
xor
cli
clc
and
push
gs
into
neg
je
dec
stos
jne
pop
mov
cmp
and
inc
lds
inc
add
dec
movs
adc
hlt
xchg
in
mov
sbb
fldenv
loop
mov
dec
mov
rcr
std
push
jb
iret
cmp
test
mov
stos
clc
dec
fistp
mov
in
and
add
or
inc
popf
pop
lods
pop
(bad)
mov
pop
push
mov
cmp
mov
push
ja
and
ja
sub
arpl
and
mov
cli
call
pop
lds
cmps
in
(bad)
in
lods
std
je
inc
sbb
pop
pop
xor
dec
inc
sub
add
scas
in
push
fist
test
cdq
mov
dec
(bad)
lahf
test
and
mov
mov
mov
push
mov
pop
adc
addr16
inc
iret
cwde
inc
test
test
clc
in
(bad)
sti
es
push
outs
mov
cmps
xor
mov
pop
icebp
jno
test
aaa
vorps
pop
inc
repnz
lock
mov
ret
fyl2x
xor
(bad)
sbb
push
aad
push
mov
cmps
mov
inc
mov
push
sub
scas
dec
clc
imul
daa
sbb
data16
mov
jno
push
ss
ss
(bad)
retf
sub
push
xor
cld
arpl
mov
fs
outs
repnz
xor
cmp
jmp
stos
ss
int
pop
pop
xchg
push
mov
jae
sahf
sbb
push
(bad)
scas
push
sub
call
xlat
shr
pusha
fistp
fstp
mov
jle
inc
int3
inc
mov
fadd
xlat
pop
iret
imul
fidivr
js
add
xchg
in
push
mov
adc
lods
data16
fsub
sub
push
add
loop
pop
mov
call
mov
cmp
jecxz
add
aaa
(bad)
mul
sub
(bad)
and
jnp
shr
bound
adc
fimul
push
out
shl
xchg
loope
push
push
pop
add
mov
xor
fdiv
pop
fisttp
dec
or
jbe
push
daa
test
loop
das
pop
mov
in
dec
retf
jmp
int3
std
push
xchg
push
ds
sbb
mov
retf
and
sbb
sti
xchg
loop
cmp
mov
mov
jle
or
and
es
push
leave
and
xchg
sbb
xor
into
ins
lea
imul
sti
or
dec
fld
and
jns
add
imul
xchg
add
jne
fs
mov
adc
add
pop
jmp
test
sti
mov
(bad)
leave
mov
lahf
xor
add
ficomp
lds
fstp
jg
popa
mov
hlt
push
je
stos
repz
inc
outs
fst
movs
xor
sub
and
fisub
pop
pop
inc
dec
jb
loope
adc
cwde
fcomp
xor
cwde
fcmove
sahf
jmp
mov
mov
int
retf
jno
push
cmp
mov
pop
out
bound
das
sub
xchg
jg
add
inc
mov
jnp
dec
mov
push
popa
into
add
lds
sub
push
push
xchg
fcomip
mov
push
jg
dec
adc
jmp
int
shl
(bad)
ret
enter
or
je
pusha
inc
je
ds
jne
mov
sub
xchg
popf
(bad)
jns
mov
mov
cmp
inc
cmps
jecxz
in
pushf
sti
add
loope
sahf
dec
cld
inc
adc
mov
dec
and
jge
clc
not
or
xor
pop
adc
int
sbb
sbb
ins
mov
mov
add
and
push
and
ins
xor
out
xchg
call
icebp
or
ficom
xor
lea
loope
out
push
ins
add
cdq
test
mov
push
lds
mov
repz
js
fldcw
fisttp
add
cmp
pop
push
(bad)
jmp
idiv
enter
dec
aas
xchg
push
inc
pushf
aad
ret
ds
and
jmp
or
stc
addr16
jmp
loope
add
loope
cmc
outs
rol
or
iret
add
nop
or
retf
sbb
ins
arpl
mov
push
dec
fsub
xchg
xor
or
pushf
stc
sar
ffree
add
mov
retf
sub
mov
retf
and
in
sub
je
jne
leave
push
cmp
fadd
mov
je
rol
icebp
push
inc
jne
pusha
rcr
ficom
add
out
mov
stos
xchg
sbb
and
add
sbb
fstp
mov
ret
bnd
sub
jne
daa
call
jmp
jnp
enter
into
mov
mov
adc
cdq
dec
jnp
sub
mov
mov
sbb
pushf
inc
out
outs
not
pusha
add
outs
out
es
imul
les
retf
mov
and
fst
out
mov
loopne
(bad)
push
mov
and
pop
or
fstp
jmp
rcl
jmp
add
jb
je
cmp
sub
movs
push
jo
int3
retf
push
push
stos
ror
inc
mov
ficomp
call
bound
xchg
jl
push
or
pop
mov
sahf
pop
cld
add
xchg
cmp
adc
mov
fmul
pushf
cmp
xchg
lods
out
push
fnstenv
jp
dec
fs
scas
aaa
sub
test
jo
gs
sub
and
lock
mov
stos
sbb
std
or
push
inc
push
sbb
cmp
repz
sbb
push
push
popa
mov
dec
sbb
clc
daa
loopne
jno
mov
jne
xchg
cmp
mov
jbe
add
or
out
jne
mov
mov
fcom
push
cli
dec
arpl
push
jns
mov
mov
fistp
scas
(bad)
xchg
fwait
scas
pop
fs
pop
mov
jns
xor
push
mov
or
fcmovu
jno
inc
xor
mov
inc
loopne
mov
fsub
ror
std
rcr
add
cs
ins
arpl
ss
sahf
jmp
outs
push
add
sbb
int3
jno
sbb
add
mov
ret
popa
cmps
loop
fsub
ins
aas
inc
adc
and
stc
movs
call
cmp
pop
in
outs
or
test
mov
add
sub
sub
(bad)
push
or
ret
push
aam
pusha
lods
stc
int
push
jmp
fcmovbe
test
mov
add
iret
fadd
(bad)
sub
push
inc
push
arpl
push
mov
in
in
pop
xchg
add
adc
bound
sbb
push
mov
addr16
mov
int
inc
test
sub
ret
test
pop
or
ss
cs
mov
cmp
popf
dec
xchg
movs
imul
cmp
sub
xchg
push
jb
sti
mov
mov
rcl
mov
mov
mov
xchg
mov
add
sbb
mov
push
repnz
or
movs
aas
cmp
fcom
stos
aad
and
shr
push
xchg
std
sbb
add
pop
in
adc
gs
mov
pop
call
mov
xor
jmp
or
clc
in
mov
div
jg
imul
in
daa
jne
dec
fist
cmp
bound
push
push
jl
shl
push
out
pop
push
cmps
mov
leave
mov
xchg
mov
sbb
push
sub
xchg
sub
add
xchg
call
nop
in
int3
mov
sub
outs
inc
fiadd
push
enter
mov
xchg
call
cmp
adc
mov
cwde
mov
and
dec
ret
gs
or
out
push
mov
add
xor
and
dec
jecxz
xchg
ss
int3
movs
and
lods
mov
cmp
jno
dec
cmc
xor
cmp
push
inc
xor
pop
cld
mov
sahf
pop
inc
out
call
xchg
or
rol
outs
ins
cli
out
test
je
sbb
wbinvd
xor
stc
out
das
mov
js
mov
ja
repz
xchg
push
xchg
repz
(bad)
xchg
aaa
shld
lds
mov
xor
add
or
in
jmp
inc
push
pushf
inc
stos
adc
jb
stos
xchg
imul
int
jecxz
call
arpl
ds
scas
fadd
les
mov
adc
ja
dec
xchg
dec
outs
sub
mov
dec
nop
cwde
aaa
cmp
es
mul
aad
cmp
sub
mov
les
cdq
cmp
mov
mov
mov
lods
jle
pop
sub
adc
mov
sub
(bad)
cs
and
mov
shl
jmp
add
xchg
out
fwait
out
xor
js
fcom
sbb
adc
arpl
add
mov
shr
cmps
std
(bad)
jecxz
jnp
pop
pop
or
jl
cmps
jae
ins
loop
arpl
scas
inc
bound
add
rcl
xor
cmp
loope
les
rcl
(bad)
sbb
sbb
sub
sbb
sbb
jmp
and
outs
cmps
mov
lods
jno
in
cmp
fcom
pushf
mov
adc
leave
nop
loope
and
dec
ds
movs
imul
and
add
lds
push
and
cmp
scas
jo
jge
mov
adc
jg
repnz
push
xor
lahf
arpl
das
sahf
mov
cld
cmps
cmp
or
aad
adc
ds
mov
lahf
cs
jl
mov
rcr
outs
call
fisttp
test
sub
mov
aam
inc
outs
sub
aaa
scas
ror
adc
mov
jns
out
imul
pop
mov
xchg
rcr
sar
add
jmp
sub
inc
sub
push
hlt
dec
xchg
push
jl
push
adc
pop
mov
addr16
ds
adc
xchg
jb
inc
dec
jbe
lods
outs
bnd
pop
jmp
jne
push
mov
adc
loop
or
(bad)
dec
outs
aad
outs
mov
pop
shr
ds
test
aaa
cli
cmp
(bad)
jmp
dec
or
(bad)
xchg
lods
dec
adc
dec
in
jae
mov
mov
inc
and
out
jne
mov
mov
dec
pop
adc
xlat
int
sub
and
inc
shl
aaa
pop
sub
dec
or
sub
jmp
sbb
int3
imul
push
inc
and
imul
rcl
jb
popf
xor
out
scas
inc
or
and
(bad)
pop
mov
popf
imul
push
sub
test
sbb
mov
fst
aas
add
test
les
inc
in
repnz
jnp
ret
outs
pop
pop
xor
test
fsubr
and
and
fsub
test
and
mov
pop
xor
test
or
push
push
inc
sub
bound
push
punpcklwd
push
jl
sbb
out
push
rcl
jge
pop
xchg
into
pop
pop
xchg
jl
xor
imul
mov
inc
adc
mov
jg
leave
popf
mov
xchg
mov
pop
dec
arpl
call
jle
aaa
outs
cmp
adc
fdivr
sub
mov
jge
pop
(bad)
or
xor
adc
inc
lock
sar
pusha
(bad)
xor
xchg
jmp
add
js
mov
fbstp
mov
test
pop
aam
ror
popa
jo
sbb
cmp
call
stos
pop
push
mov
and
push
icebp
(bad)
adc
rcl
dec
sbb
sub
dec
sahf
fs
push
xchg
daa
and
push
movs
dec
mov
test
push
push
sbb
push
fisub
mov
push
popf
cmp
cs
retf
outs
(bad)
mov
add
add
dec
add
xor
in
dec
jmp
clc
lods
(bad)
jg
stos
int
or
push
pop
sub
jmp
mov
mov
jg
stc
hlt
adc
stos
xchg
jnp
push
mov
(bad)
dec
loop
xchg
xor
adc
jmp
cmp
arpl
cmps
int
push
push
lods
xchg
push
mov
sub
inc
mov
adc
pop
ins
scas
(bad)
stos
mov
enter
fiadd
fist
sbb
mov
fwait
jnp
ret
xchg
hlt
xchg
dec
add
or
add
sub
out
iret
adc
mov
push
mov
(bad)
cdq
daa
(bad)
push
and
dec
xchg
add
jbe
cmp
call
ja
lea
xor
lock
dec
mov
push
iret
in
pushf
pop
(bad)
cmc
adc
repz
jo
test
iret
ss
mov
mov
sub
(bad)
xchg
fisubr
xor
sub
add
int
inc
pop
imul
cdq
ins
mov
xor
aam
inc
and
aaa
mov
or
lahf
mov
sahf
arpl
test
cmps
adc
inc
cmc
test
add
cmp
je
and
int3
scas
sub
scas
dec
push
retf
mov
pop
or
jmp
cld
fnstsw
stos
dec
push
shl
outs
add
popf
add
fsub
jge
lahf
jne
(bad)
ss
mov
aaa
cmc
sbb
lods
xchg
aaa
lods
test
sub
aam
lahf
sub
xor
aad
fdiv
and
push
call
or
iret
and
mov
mov
cmp
pop
inc
retf
retf
mov
sbb
inc
call
jne
int3
adc
es
mov
dec
imul
mov
add
aad
call
mov
arpl
mov
sti
std
retf
sub
cmp
sahf
movs
jge
xor
cli
mov
arpl
in
(bad)
mov
pop
sub
jg
clc
mov
popa
test
(bad)
pop
mov
xchg
test
movs
push
cli
int
gs
aad
ffree
mov
add
inc
adc
pop
jae
and
test
iret
pop
popa
xchg
dec
add
rol
shl
fbld
cmp
sub
mov
add
popa
jge
test
mov
ss
aaa
cwde
or
ins
sbb
js
mov
push
xor
je
aad
out
pusha
test
cmps
or
sbb
or
sub
add
bound
inc
jge
mov
retf
enter
sar
nop
jle
pop
push
aaa
(bad)
pop
pop
inc
add
pop
dec
mov
pop
add
push
xchg
dec
repnz
push
sub
lea
push
cld
(bad)
mov
test
sar
or
fsubr
and
fst
in
xchg
arpl
push
cmp
aaa
ja
mov
cmp
aad
jge
inc
mov
rcr
add
cmp
scas
arpl
mov
and
mov
sub
jbe
xor
and
aad
std
sbb
add
arpl
push
das
push
repz
adc
mov
int
push
out
sbb
enter
push
test
mov
jecxz
pop
cld
lods
pop
jmp
inc
ins
dec
out
jp
and
mov
mov
pop
xor
stos
pusha
je
fdivr
xchg
dec
movs
add
ret
jp
fcomp
aam
data16
aam
scas
inc
mov
ja
sbb
mov
push
mov
dec
xor
out
xchg
jnp
mov
div
xchg
addr16
cmp
jmp
icebp
mov
fs
mov
dec
in
xor
imul
adc
and
mov
fisttp
retf
cmps
xor
imul
cwde
stos
cmps
loop
add
dec
(bad)
int
enter
pop
call
xor
(bad)
mov
mov
dec
ins
sbb
repz
pop
jns
fiadd
fmul
cli
jecxz
sub
pusha
imul
xor
sub
jae
or
mov
push
es
xchg
mov
stos
sahf
in
sbb
adc
or
inc
imul
dec
rol
or
(bad)
mov
(bad)
loopne
cmp
pop
call
js
fbld
xchg
ficomp
jb
aam
sub
xchg
enter
dec
adc
push
es
mov
call
sub
adc
out
pop
mov
sbb
fstp
cmps
repnz
inc
xchg
call
mov
(bad)
jbe
jne
mov
push
jecxz
or
test
aaa
add
fsubr
ror
fstp
xchg
push
jae
sbb
retf
ret
xor
xchg
inc
jnp
leave
not
jo
inc
sub
(bad)
mov
les
loop
les
mov
int3
xchg
xchg
imul
dec
rol
pop
out
fidivr
mov
nop
ret
aam
fld
push
ins
and
in
inc
cmps
aam
stos
not
mov
sub
mov
arpl
loopne
sub
cmp
and
rcr
retf
and
mov
mov
dec
xchg
repnz
mov
into
pop
add
daa
jnp
sub
loopne
mov
adc
sbb
push
jae
pop
mov
inc
(bad)
js
addr16
mov
jg
jae
loop
je
jle
mov
inc
add
mov
rol
mov
rcr
mov
ror
das
in
in
cld
cli
mov
inc
inc
or
test
xchg
ins
aam
(bad)
add
jg
lods
add
test
jle
(bad)
ds
xchg
(bad)
sti
lods
fimul
xchg
test
jmp
dec
adc
fistp
fwait
in
in
sbb
xchg
cmp
out
into
stos
sar
inc
adc
ins
dec
xchg
inc
out
xchg
add
or
inc
inc
xchg
repnz
cmp
adc
cld
jle
xor
out
aas
fimul
inc
aad
test
scas
sbb
xchg
gs
pop
mov
jbe
cdq
test
jno
push
adc
sti
loope
and
and
fmul
cmp
cmp
adc
mov
mov
push
clc
sub
sub
mov
popa
cld
dec
in
lods
push
ficom
call
loop
jle
lods
loope
push
mov
stos
push
mov
jns
test
fcmovnu
push
dec
icebp
jg
mov
push
ret
pop
push
adc
pop
jne
fcmovb
push
pop
mov
push
lds
lods
xchg
cld
lods
mov
pop
iret
inc
fmul
js
dec
mov
sbb
rcl
pop
addr16
xor
rcl
popa
pop
adc
movs
dec
jnp
call
sbb
xchg
jecxz
cmp
xlat
icebp
jo
push
jae
mov
repnz
and
das
dec
frstor
mov
xor
adc
jnp
cs
lea
outs
mov
ret
push
repz
daa
push
ror
sub
add
pushf
xchg
sti
pop
test
inc
pushf
daa
xor
mov
push
arpl
repz
mov
movs
(bad)
push
mov
imul
cmp
mov
in
cmp
outs
in
fistp
add
jne
cwde
pop
(bad)
repnz
fsubr
jp
push
clc
xchg
das
pusha
or
and
aam
in
dec
jl
fwait
adc
cmp
xor
xlat
cmp
inc
xor
je
jnp
mov
and
jle
test
push
js
jnp
sbb
jns
out
call
leave
imul
js
pop
push
inc
rcl
(bad)
fldcw
in
ins
sahf
int3
inc
in
mov
or
xchg
xor
in
adc
jbe
dec
dec
es
imul
pop
sbb
lahf
repnz
dec
into
xor
cwde
inc
inc
out
int
leave
mov
retf
test
jg
out
jne
fbstp
aaa
sbb
xchg
rcl
xchg
enter
out
ror
xor
test
mov
dec
sub
pusha
and
sbb
sub
or
fst
outs
sbb
jmp
push
sahf
push
jo
and
xlat
lea
scas
jmp
fmul
test
mov
and
pop
ja
sbb
cmp
enter
dec
push
movs
push
inc
xor
cmp
in
sbb
fsubr
mul
stos
stos
push
or
mov
ins
xchg
add
add
sub
scas
cmps
mov
push
int
in
cdq
arpl
jb
test
scas
loop
ja
xchg
fisttp
lea
and
daa
pop
xchg
or
and
sub
and
mov
in
mov
mov
data16
mov
les
scas
call
in
and
int3
je
push
ret
pushw
aaa
test
dec
add
adc
and
aaa
adc
mov
mov
sub
inc
inc
add
in
stc
lahf
std
es
jp
mov
sbb
data16
into
mov
fwait
push
and
xor
(bad)
inc
cmp
std
pop
and
popa
cmc
outs
mov
inc
or
pop
push
ror
sub
stos
pushf
cmps
imul
xlat
xor
push
inc
pop
add
sbb
cmp
push
ror
in
(bad)
pop
pop
sar
cld
test
jecxz
stc
xor
icebp
mov
push
test
fnsave
std
inc
xor
jmp
xchg
(bad)
jns
and
(bad)
stos
mov
jecxz
inc
pop
sbb
pop
fwait
daa
cdq
pop
rcl
xchg
lock
mov
mov
es
stc
dec
pop
popa
ret
popa
pop
adc
xchg
mov
fild
outs
lss
(bad)
cmp
pop
fdivr
out
sbb
sub
cs
test
das
or
das
mov
repz
xchg
les
cmp
repz
sub
cmp
test
mov
outs
or
cld
xchg
jge
int
mul
test
sub
pop
ret
push
jmp
hlt
pop
jp
mov
mov
pop
mov
push
mov
and
out
sbb
add
pop
sar
xor
lea
cmovo
in
retf
or
fst
ins
pop
loope
jns
pop
sub
mov
es
push
xchg
ret
mov
hlt
add
(bad)
(bad)
cmp
add
(bad)
ins
sbb
mov
xor
loop
jle
push
mov
inc
xchg
lea
cdq
push
outs
cmp
iret
mov
mov
outs
mov
aaa
xchg
xchg
ficom
test
es
stos
imul
inc
dec
xor
js
xor
in
and
pop
rcl
inc
(bad)
xchg
ret
fdiv
(bad)
push
ret
or
cli
mov
or
xchg
cmp
enter
movs
in
dec
or
lods
mov
fdivr
jno
adc
and
mov
out
push
fwait
push
sbb
es
(bad)
pop
repnz
push
or
lods
xor
int
inc
push
stos
out
test
inc
cmc
jge
sar
dec
mov
jg
mov
adc
mov
jmp
out
scas
jns
dec
fst
scas
cmp
retf
addr16
cmc
pop
mov
cld
mov
not
leave
cmps
adc
adc
and
(bad)
out
mov
mov
call
(bad)
aaa
mov
call
lods
sbb
dec
lahf
cmp
cmp
sbb
dec
mov
ins
not
fwait
inc
sbb
xchg
xor
repz
inc
cmp
and
stos
leave
xchg
repz
or
add
test
dec
mov
shl
movs
inc
push
xor
cmp
cmc
arpl
jg
cmp
daa
aad
sbb
rol
test
pop
xchg
pushf
xor
idiv
cmp
push
dec
push
test
inc
movs
or
pop
sbb
push
jmp
mov
lahf
xchg
pop
add
pop
(bad)
adc
mov
lods
test
xchg
cld
test
ins
lahf
mov
mov
add
aaa
repz
retf
into
dec
lahf
xor
pop
(bad)
pop
ds
push
ins
cmps
push
and
call
std
mov
xchg
test
addr16
adc
cs
mov
jbe
(bad)
mov
xchg
imul
les
je
push
jge
retf
ins
pop
in
inc
xor
out
fs
or
movs
jmp
mov
lea
loope
and
fld
or
js
ds
rol
test
sub
out
lahf
inc
fadd
mov
add
int3
jb
dec
mov
mov
mov
neg
sbb
push
cmp
cmps
pop
pop
stos
cmp
add
icebp
add
xchg
pop
xchg
or
mov
cmps
aas
xchg
push
pop
pop
int
adc
int
push
int
shl
jecxz
xchg
ja
pop
lods
retf
test
sbb
imul
int3
sub
cmp
(bad)
shr
pop
jb
stc
xor
lea
es
fidivr
mov
mov
jbe
mov
movs
mov
sub
shr
push
jl
out
jb
ja
les
je
mov
ins
cmp
jmp
jns
shl
xchg
sbb
mov
stos
data16
fsubr
push
sub
mov
sti
lock
mov
and
xchg
push
retf
imul
ret
cmp
cmps
clc
test
pop
jo
dec
outs
and
shl
xchg
sub
mov
jne
ds
mov
in
push
inc
sub
outs
pmulhw
pop
push
loope
imul
inc
sbb
int
push
test
rcr
das
inc
sti
int3
push
add
push
inc
cmp
sbb
std
(bad)
loop
stos
jno
pop
out
push
(bad)
push
xchg
loopne
xor
cwde
call
mov
jne
fwait
jg
loop
inc
adc
pusha
jmp
sbb
sbb
lock
add
cmp
cmc
cmp
mov
pop
dec
arpl
mov
(bad)
mov
xchg
repnz
lods
jns
or
mov
movs
mov
and
cmp
dec
push
enter
mov
sub
fsub
hlt
out
and
sbb
pop
repz
pop
test
gs
sbb
push
or
call
and
push
or
cld
mov
pop
mov
push
jecxz
lock
xchg
outs
stos
aaa
mov
push
cld
out
pushf
cmp
or
dec
add
ret
popa
icebp
xchg
add
inc
or
test
jb
and
push
scas
loope
aam
js
out
add
adc
or
popa
xchg
xchg
mov
lahf
xchg
or
pop
fisttp
inc
and
stos
mov
hlt
mov
inc
aam
sub
lahf
call
dec
xor
mov
cs
outs
xchg
push
rcl
ins
imul
movs
xor
stc
xlat
add
add
lock
scas
in
push
mov
sbb
cmp
test
int3
scas
dec
jbe
(bad)
lahf
and
out
add
aas
cmp
dec
int
add
adc
out
out
push
sub
dec
sbb
xchg
aam
cmps
iret
sub
push
and
aaa
push
fist
mov
stos
addr16
cmp
movs
cmp
shl
mov
inc
dec
or
mov
nop
int3
sahf
add
stos
fstp
arpl
imul
and
data16
inc
and
outs
adc
and
mov
sub
jle
iret
pusha
pop
test
jbe
das
(bad)
push
popf
and
std
fadd
lock
dec
mov
dec
xchg
dec
xor
jmp
xchg
cmps
arpl
xlat
inc
mov
pop
xlat
arpl
mov
retf
and
mov
add
cld
rol
sbb
sbb
push
jbe
fidiv
inc
bound
arpl
xchg
xor
or
sbb
mov
cmc
mov
scas
pop
iret
push
add
fidiv
bound
rcr
push
mov
push
test
ss
es
mov
aas
pop
or
lahf
push
mov
jp
mov
mov
lds
int3
sti
lea
jns
jg
fnsave
push
mov
pop
xchg
mov
mov
retw
push
sub
in
enter
fstp
or
aaa
jo
stc
std
pop
mov
(bad)
mov
pop
clc
sbb
cli
ret
vpaddsw
mov
ja
jnp
cmps
push
push
rcr
aad
sub
cmp
std
sbb
lss
int3
ins
jno
hlt
inc
mov
or
leave
sar
imul
and
cmc
(bad)
call
cmp
pop
in
sub
pop
addr16
enter
adc
sar
push
out
movs
xchg
aad
mov
adc
mov
xchg
lods
aam
sbb
std
inc
aam
int3
cmp
sar
mov
cmp
pop
xor
xchg
add
dec
jno
imul
sti
daa
mov
lds
xor
jb
adc
mov
add
or
outs
push
sub
test
push
jmp
gs
cwde
dec
test
and
xchg
nop
out
out
adc
clc
mov
sub
popa
neg
dec
pop
mov
lods
push
mov
and
xchg
mov
fist
add
adc
(bad)
adc
push
mov
push
fidiv
imul
push
mov
(bad)
xchg
or
dec
scas
push
lods
ret
in
and
call
pop
pop
dec
pop
mov
mov
mov
addr16
mov
or
mov
loope
mov
enter
adc
inc
add
out
jno
pushf
pop
push
scas
pop
sub
mov
pop
data16
sbb
dec
dec
cmp
mov
(bad)
mov
ja
pop
sub
add
stos
push
mov
push
xchg
sub
aas
dec
adc
adc
icebp
lock
cmp
test
cmp
sbb
sub
sub
or
xchg
inc
xchg
pop
add
pop
iret
gs
cmp
les
mov
inc
rcl
mov
(bad)
pop
bound
test
pop
sub
fst
jns
adc
xlat
sti
jge
dec
std
xor
shl
add
pop
stc
dec
aam
cmps
push
hlt
call
retf
shl
(bad)
je
and
out
scas
daa
xchg
les
inc
cmp
sbb
add
sar
push
int
mov
pop
adc
js
fdiv
out
es
push
in
add
dec
sub
mov
jle
add
rcl
or
xor
out
inc
call
rcl
push
test
fnstsw
in
push
inc
das
cld
adc
in
out
aaa
inc
dec
cmp
and
mov
xchg
jle
jae
shl
xor
xchg
xchg
push
push
push
pop
and
fld
jle
hlt
jg
ins
adc
jbe
enter
xchg
imul
repnz
mov
gs
mov
or
xor
aad
jb
aad
(bad)
nop
pushf
movs
jbe
xchg
fwait
jmp
cs
ja
js
push
fild
lea
pop
mov
sub
and
jbe
retw
imul
push
mov
dec
fsubr
scas
js
mov
jb
push
mov
aam
rcr
mov
dec
mov
cmp
sbb
sbb
test
xchg
jns
or
pop
fcomp
cdq
xchg
cli
push
fiadd
add
adc
iret
jno
fild
pop
dec
ds
fst
stos
fldenv
rcl
jp
sbb
jg
xchg
das
test
aas
bound
shl
jle
call
mov
arpl
push
pop
jge
xor
(bad)
xchg
dec
dec
adc
xchg
aad
mov
add
mov
cmc
jnp
xchg
cli
add
dec
mov
mov
fcmovnb
pop
(bad)
adc
cmp
pop
sbb
hlt
dec
test
inc
sub
in
aad
rcl
(bad)
sti
test
dec
mov
shl
rcr
pop
fs
push
in
mov
clc
mov
iret
ret
icebp
test
xchg
sbb
imul
sub
icebp
push
movs
ja
aaa
mov
cmp
mov
sbb
add
ror
movs
pop
adc
push
sahf
sbb
in
call
dec
xor
daa
inc
outs
cmp
pop
jmp
xchg
call
push
mov
nop
cmp
ds
jb
mov
shr
pop
movs
xor
mov
adc
cmp
pop
mov
jbe
mov
aaa
or
cli
int
std
push
sti
add
fwait
jg
outs
add
jp
xchg
scas
pop
js
outs
xor
push
inc
loope
call
loopne
push
mov
sbb
push
mov
ret
adc
sub
inc
(bad)
pop
push
and
push
ret
movs
test
cvtps2pd
loope
inc
in
xchg
jnp
mov
stos
jmp
lock
mov
jmp
scas
in
arpl
retf
je
ficom
dec
sbb
pop
shl
unpcklps
shr
and
xchg
cdq
xchg
fidiv
pop
test
cmp
add
mov
and
add
pushf
sbb
sbb
xor
lods
sbb
sti
shl
fisttp
add
repz
inc
retf
ds
retf
data16
push
dec
mov
xchg
shr
out
inc
aad
dec
stos
out
adc
aas
mov
(bad)
cmp
lds
out
push
pop
sbb
test
xchg
in
leave
xor
ret
inc
loopne
mov
(bad)
fucomi
imul
or
test
jmp
push
jae
mov
mov
call
sbb
mov
cmp
test
dec
lahf
mov
gs
mov
or
das
data16
(bad)
push
mov
pop
scas
ficomp
pop
inc
xor
hlt
ror
inc
nop
mov
stos
sub
fcom
ds
js
in
pop
pop
faddp
fs
pushf
pop
iret
in
idiv
neg
jns
mov
push
test
call
inc
jmp
in
ja
int
out
mov
push
stos
rol
push
jae
sub
(bad)
ss
xchg
imul
lea
and
stc
push
and
xor
mov
rcr
out
out
mov
and
mov
push
dec
adc
inc
lods
or
fld
mov
inc
imul
ffreep
xor
iret
cmp
jl
xchg
xor
inc
and
sub
(bad)
pop
push
sub
cmp
daa
fnstsw
lock
retf
xchg
mov
push
shl
iret
cli
mov
mov
std
mov
dec
push
xchg
inc
scas
pusha
or
sbb
fsincos
mov
movs
xor
js
in
in
ins
push
jmp
cmc
xchg
dec
les
mov
mov
xor
mov
jne
mov
push
ins
mov
mov
push
outs
xchg
push
jbe
push
cld
std
mov
or
gs
int
retf
pop
mov
and
loopne
data16
push
stos
popf
addr16
xchg
mov
xchg
(bad)
sub
xchg
sbb
dec
jb
xchg
mov
lock
mov
inc
aaa
cwde
std
pusha
int3
pusha
cld
sub
js
push
sti
mov
dec
or
mov
adc
jecxz
or
pop
pop
or
je
push
sbb
xor
test
or
adc
shl
test
sub
into
call
movs
jo
pop
test
jns
pop
add
repnz
adc
mov
sbb
fwait
clc
fwait
dec
pop
sbb
mov
or
out
ja
hlt
sbb
mov
dec
sub
jno
jmp
int3
dec
dec
jnp
jbe
std
clc
mov
ret
(bad)
mov
sub
sbb
test
and
div
add
adc
jl
gs
outs
daa
fsubp
jne
sbb
push
gs
(bad)
pop
pop
repz
js
mov
fisub
repnz
pop
pop
mov
iret
pop
stos
and
(bad)
sbb
in
inc
inc
test
cmp
cli
or
sahf
dec
push
pop
fcom
mov
in
in
in
call
or
xor
fwait
aad
jno
sub
inc
mov
test
aas
sub
jnp
outs
push
and
test
xchg
add
ins
ss
outs
sbb
inc
imul
inc
stos
fdivr
inc
xchg
push
fisub
mov
mov
sbb
ret
pop
int3
test
push
and
inc
mov
dec
stc
push
add
ds
cmc
push
imul
outs
mov
push
clc
jae
movs
mov
dec
loope
popa
sub
xlat
sub
push
inc
cdq
(bad)
les
adc
pop
cmp
jbe
mov
xchg
imul
jmp
inc
dec
mov
mov
popa
mov
sbb
mov
sahf
in
sub
add
ja
pop
test
out
mov
test
lods
inc
mov
adc
and
loope
sbb
in
nop
mov
(bad)
xchg
add
cmc
mov
sahf
es
test
mov
pop
lahf
push
fadd
adc
xor
or
fwait
push
inc
(bad)
mov
xor
rcr
das
or
out
add
and
cmp
pop
sub
xchg
mov
fcomp
or
(bad)
lods
inc
cmps
jecxz
(bad)
shl
mov
movs
adc
add
jbe
mov
(bad)
das
push
mov
inc
jb
ret
pop
sub
aaa
xlat
mov
call
js
sbb
jnp
add
adc
bound
gs
xchg
mov
mov
and
push
mov
xchg
or
jle
nop
jg
das
sahf
aaa
loop
jg
loope
lods
add
push
int3
ins
nop
std
push
mov
aas
cwde
pop
mov
sbb
add
jmp
cmp
or
or
test
add
aaa
xchg
iret
leave
outs
xchg
mov
and
leave
sahf
cmp
ins
push
xor
hlt
mov
lea
pop
retf
mov
mov
mov
in
lea
jns
ret
dec
pop
lods
mov
retf
retf
js
push
cmp
xlat
adc
pushf
icebp
mov
or
or
inc
xchg
adc
xor
or
mov
sti
daa
adc
cs
xchg
in
push
add
loopne
repz
idiv
mov
xor
inc
add
pushf
sbb
push
jns
(bad)
fldenv
mov
cmp
or
popa
rep
dec
pop
and
lds
push
mov
and
pop
retf
hlt
sbb
push
cmps
mov
daa
sub
sbb
clc
dec
stos
aam
add
or
jae
pop
mov
icebp
or
fs
and
test
jmp
stc
push
ss
and
rcl
mov
js
loop
sbb
cli
jne
arpl
popf
jb
push
jl
fsubrp
ds
ins
mov
cmp
sub
sbb
xor
push
xor
leave
retf
in
mov
lock
adc
push
in
mov
ds
adc
inc
lods
or
mov
div
test
mov
aas
popf
mov
cmp
or
push
cld
mov
out
(bad)
xor
xchg
push
das
jp
cmp
loop
mov
cmp
retf
pusha
inc
popf
addr16
and
add
fwait
and
push
jle
xchg
inc
repnz
cs
mov
fcom
sub
jbe
jmp
dec
push
mov
(bad)
and
enter
mov
dec
mov
mov
jge
shr
inc
punpckhbw
rol
cmp
and
vsqrtpd
sti
cld
xchg
(bad)
jnp
push
movs
dec
cmp
mov
jl
fucom
rcr
clc
and
mov
enter
or
add
push
jmp
sbb
add
or
cld
ja
add
iret
icebp
mov
mov
xor
fisttp
repz
mov
test
mov
int3
outs
add
in
cmp
add
mov
call
push
cmp
inc
jne
inc
leave
pop
mov
pusha
into
in
sub
mov
or
add
cmp
ret
in
popf
mov
mov
repz
jmp
xchg
cmps
not
sbb
(bad)
xor
cmp
cwde
ins
cli
pushf
xlat
stos
iret
pop
cmps
aad
xchg
push
stos
add
sbb
inc
jno
ins
mov
nop
jae
dec
in
out
les
or
pop
adc
mov
mov
test
jno
stc
add
test
call
xchg
mov
cmp
(bad)
imul
outs
pop
ret
jno
mov
(bad)
xchg
add
outs
push
ja
inc
pop
outs
rcl
fidivr
rcr
jae
or
loop
in
or
jns
in
adc
push
mov
xchg
cmp
int3
pusha
test
sbb
or
pop
push
les
cmp
adc
jg
dec
and
mov
popf
add
add
push
ins
mov
fwait
push
(bad)
(bad)
clc
stos
mov
mov
bound
mov
addr16
xchg
sbb
imul
inc
shl
pop
inc
and
mov
add
pop
mov
cmc
mov
jecxz
loop
mov
cmp
int
test
adc
push
in
jns
push
retf
mov
mov
loopne
inc
and
sub
retf
sbb
or
cmp
lds
mov
adc
mov
ja
xor
stos
fcom
loop
clc
mov
xchg
sub
pop
(bad)
cdq
pop
test
sbb
or
adc
mov
pop
mov
mov
and
in
xchg
jge
mov
jbe
adc
sub
adc
and
ror
jns
lods
jmp
jb
data16
mov
ins
adc
cld
add
pusha
jne
cmc
fsub
lods
pop
daa
xor
sbb
loopne
push
jmp
enter
inc
fwait
mov
sbb
pop
lds
loope
ins
push
and
repz
jae
stc
ret
not
inc
out
adc
push
or
loopne
lods
gs
mov
test
das
cmp
mov
add
adc
bound
jl
pop
daa
xchg
sub
xchg
xchg
and
into
je
or
jnp
addr16
push
hlt
in
inc
mov
ja
sbb
jmp
int
mov
cmp
retf
fwait
ror
mov
std
sbb
pop
imul
and
lds
add
xor
adc
mov
frstor
fild
pop
lock
dec
adc
or
xchg
dec
imul
add
or
call
sub
push
cwde
(bad)
cdq
cmc
mov
push
daa
ja
lahf
dec
fidivr
xchg
sbb
addr16
rol
mov
mov
(bad)
pop
mov
mov
mov
inc
je
std
movs
mov
cdq
aad
jb
iret
add
loopne
and
fnstcw
jne
jnp
xchg
xchg
movs
sbb
xor
(bad)
fnsetpm(287
cli
outs
mov
jl
int
adc
jnp
test
fucomip
test
adc
push
or
add
mov
std
ss
(bad)
sub
jle
xchg
fmul
jnp
loope
add
xor
shl
ins
xor
sub
sti
push
pop
lods
dec
sbb
adc
lock
pop
or
retf
outs
dec
rcl
add
mov
sub
mov
add
push
ror
cli
or
sbb
and
fdivp
xchg
ins
sub
jecxz
fild
xchg
imul
cmp
int3
in
adc
loope
xchg
jmp
cld
cwde
outs
xchg
mov
jmp
das
jge
pop
push
xor
mov
inc
sub
call
nop
outs
gs
sub
add
pop
cli
bound
popa
sti
cmp
and
icebp
test
pusha
mov
cmp
pop
push
sub
dec
adc
adc
(bad)
dec
push
inc
bound
mov
adc
test
push
mov
mov
and
jno
or
mov
mov
mov
cmp
mov
add
and
xor
mov
jns
(bad)
das
loopne
mov
lahf
fcom
stc
pop
push
fld
inc
jnp
mov
cmp
scas
xor
push
sbb
jns
xchg
cmps
pop
out
pop
jecxz
div
jmp
mov
loopne
pop
mov
mov
pop
div
mov
loop
xchg
mov
jno
jne
nop
add
lds
inc
icebp
int3
xor
stos
cmps
nop
out
mov
adc
push
gs
jae
fst
imul
mov
aad
fs
fs
add
mov
jmp
mov
idiv
sbb
and
fnstenv
dec
inc
jge
mov
adc
js
cmp
xchg
repz
inc
test
pop
xor
add
add
jb
repz
out
mov
and
add
and
cwde
outs
add
movs
icebp
ss
pop
nop
and
jno
mov
xchg
int3
inc
ins
fwait
inc
outs
or
popf
ins
sbb
add
ficom
mov
jo
cmp
adc
out
out
je
ret
leave
mov
(bad)
fwait
mov
das
lods
jmp
mov
push
mov
and
call
pop
jecxz
jb
jmp
pop
fcomp
enter
push
out
test
jmp
jne
ins
(bad)
fld
nop
pop
or
mov
es
xchg
lods
mov
loope
cld
in
dec
mov
lock
cli
call
and
pop
add
ss
(bad)
fld
mov
and
push
mov
push
adc
hlt
push
loope
push
jl
push
jne
pushf
cmp
call
fs
imul
push
retf
pop
std
mov
push
inc
mov
mov
jae
ret
aam
and
and
cld
jg
retf
aam
es
imul
pop
adc
cmps
mov
adc
pop
aaa
mov
ds
mov
mov
inc
out
nop
call
call
ret
loope
popa
jp
aam
(bad)
aam
shl
mov
add
mov
stc
(bad)
xchg
imul
push
lahf
xchg
xchg
lea
in
sbb
mov
inc
xchg
or
xchg
dec
jbe
sub
jle
sub
je
inc
cld
je
dec
cld
or
mov
sbb
inc
imul
xchg
rcr
mov
addr16
shl
ror
cmc
mov
mov
push
add
dec
adc
mov
into
mov
mov
and
push
js
inc
mov
clc
sbb
in
popf
add
cmps
loope
adc
dec
mov
out
cmps
int
mov
add
repnz
cmp
inc
adc
enter
inc
xor
mov
mov
stos
and
fs
int3
outs
(bad)
fistp
pushf
dec
popf
sbb
jmp
lock
inc
adc
in
das
ret
jge
pop
rol
cmp
std
xor
test
ret
jno
in
loop
mov
fnsave
lock
addr16
jecxz
iret
sar
int
pop
cmp
inc
icebp
(bad)
aad
or
(bad)
(bad)
xchg
dec
ins
inc
daa
imul
outs
repnz
test
test
ja
dec
inc
inc
pop
hlt
ins
push
lock
mov
push
xchg
add
or
pop
or
dec
das
ins
jno
ins
test
pop
and
pop
inc
into
jmp
inc
es
xor
das
mov
cmps
mov
shr
das
jge
aaa
test
data16
icebp
inc
ins
outs
push
fs
lds
push
(bad)
push
fstp
xchg
cmp
jecxz
jmp
test
dec
pop
and
jbe
xor
jl
loopne
shl
mov
mov
(bad)
sub
add
imul
jp
pop
mov
xchg
and
dec
pop
data16
aas
jle
xchg
pop
inc
(bad)
fdivr
jmp
push
adc
cmp
jno
xchg
inc
pop
ja
or
or
je
mov
push
cmp
mov
fild
dec
inc
xlat
lahf
mov
mov
movs
mov
mov
fldcw
popf
loop
xchg
xor
xchg
push
pop
and
push
inc
xor
in
sbb
pop
pop
fidivr
jo
popf
jno
out
xchg
or
mov
pop
movs
add
mov
inc
imul
das
(bad)
cmp
dec
or
ss
mov
imul
scas
sti
das
jg
xchg
push
pop
test
daa
and
or
lock
and
outs
icebp
dec
adc
shr
out
xor
ins
(bad)
pop
inc
sub
fdiv
rcr
adc
mov
je
call
mov
mov
out
popf
call
data16
stos
adc
(bad)
or
push
mov
data16
ds
fyl2x
or
(bad)
test
cmp
and
mov
dec
xlat
cmp
(bad)
dec
pop
mov
push
sbb
scas
xchg
fwait
bound
add
(bad)
sub
scas
jnp
fcomp
sub
xor
sub
dec
add
push
mov
mov
dec
cmp
int
test
shl
nop
mov
sti
popa
sbb
(bad)
xchg
out
test
test
or
in
xor
movs
es
xchg
mov
cmp
scas
xchg
jb
(bad)
jmp
aas
enter
arpl
mov
stc
aam
dec
jnp
aad
nop
int
(bad)
stos
adc
add
jo
push
or
inc
stc
jmp
pop
imul
fwait
xchg
outs
loope
repz
enter
imul
shr
repnz
add
lahf
add
xlat
mov
sub
cld
xor
jg
mov
add
inc
test
jmp
sysexit
cmps
adc
add
push
loopne
jo
aaa
sbb
out
xchg
add
ror
nop
retf
sub
cwde
mov
gs
shl
and
xlat
add
inc
mov
dec
fild
cmc
js
es
push
pop
test
add
push
push
xchg
sbb
mov
adc
dec
sbb
xchg
mov
aas
fmul
pop
xor
stos
mov
lahf
std
xchg
mov
test
repz
sbb
pop
lods
shr
jmp
sbb
in
adc
pusha
out
jle
dec
lea
popa
aam
mov
out
jle
and
xchg
rol
imul
popf
shl
jle
and
cmp
mov
fistp
sub
cdq
daa
jp
dec
out
add
jns
(bad)
(bad)
jg
add
pop
mov
inc
hlt
clc
cs
call
mov
push
push
xor
ins
inc
aam
xchg
ss
push
pusha
lea
xor
jmp
lahf
fiadd
pop
out
out
add
push
aas
aam
adc
inc
or
movs
pop
xor
pop
jae
push
ret
out
and
sub
pop
mov
in
or
pop
push
jecxz
stc
ret
lock
das
jl
dec
fmul
leave
arpl
fwait
and
jno
jbe
out
add
mov
mov
arpl
icebp
popa
dec
jg
mov
test
pusha
mov
mov
dec
shl
and
pop
jmp
mov
int3
sahf
cmp
mov
int3
pshufw
push
fsubr
sti
test
vpsubsb
lahf
addr16
and
xchg
lods
fistp
mov
cs
fist
mov
xchg
push
push
pop
inc
mov
adc
repz
outs
push
or
add
mov
int
jmp
shr
popf
jg
mov
(bad)
ds
and
(bad)
sub
mov
(bad)
mov
inc
mov
xlat
xor
pop
or
push
and
and
push
outs
sub
cdq
stc
(bad)
fsub
add
ret
sbb
jecxz
nop
outs
pop
test
jle
xor
mov
lods
add
pusha
in
les
ds
mov
jno
push
je
outs
ins
dec
mov
dec
push
nop
in
call
call
mov
imul
or
sbb
mov
dec
test
add
cld
mov
sbb
sbb
pop
mov
shl
fcom
(bad)
fadd
sbb
xor
repz
outs
jmp
xchg
jno
adc
shr
pop
int
jno
sbb
lahf
mov
or
sbb
push
ror
push
jo
cmp
sbb
dec
dec
cmp
pop
les
pop
leave
cld
sbb
mov
xor
jmp
movs
or
retf
mov
retf
dec
in
inc
pusha
push
scas
add
pusha
fwait
xchg
mov
inc
inc
xchg
add
add
aas
push
sbb
ja
mov
sub
mov
push
xor
pusha
cmps
enter
and
push
xchg
std
adc
mov
in
call
add
push
add
out
cmp
cdq
add
clc
sub
mov
fst
mov
dec
add
ja
jp
imul
fld
shr
popa
(bad)
mov
sar
les
cmp
mov
and
mov
mov
mov
out
sbb
cmp
(bad)
rol
pop
stos
loop
cmp
icebp
ins
dec
movs
pop
sti
mov
mov
sub
xchg
(bad)
adc
pop
push
test
aaa
pushf
mov
dec
push
(bad)
aam
mov
pop
push
mov
xchg
mov
pop
ds
and
addr16
xchg
pop
mov
inc
cmps
lahf
jae
mov
ja
inc
jb
mov
loope
fild
into
add
iret
cs
inc
sar
mov
call
add
pop
jbe
push
in
sub
push
pushf
push
enter
push
aad
xchg
sbb
mov
rcr
push
std
retf
push
mov
jns
mov
adc
ja
sub
push
rol
popa
inc
cmp
clc
int
xor
iret
xchg
movs
and
(bad)
jns
jbe
pusha
cmc
dec
jbe
cmc
stc
xchg
mov
jmp
sti
push
jg
inc
xor
imul
sbb
jno
sbb
mov
pushf
jb
xchg
add
push
lea
inc
loopne
and
pop
popf
sub
and
movs
nop
and
jg
push
daa
xchg
jbe
jo
mov
jmp
jns
ds
out
lds
shl
pop
call
push
(bad)
repnz
or
iret
aam
dec
push
cmp
shl
xor
inc
movs
dec
mov
dec
jmp
es
cmp
aad
push
outs
push
data16
and
cmp
add
sub
push
icebp
mov
lds
cwde
shr
adc
lds
addr16
rep
inc
push
push
lahf
(bad)
xchg
push
fmul
pop
inc
(bad)
xchg
scas
iret
xchg
cmps
repnz
leave
retf
(bad)
out
fwait
retf
inc
movs
mov
scas
inc
lods
mov
sub
aam
mul
sub
cmp
inc
and
xor
sahf
and
xchg
outs
lods
nop
and
cwde
hlt
imul
mov
lds
or
aad
pop
retf
push
xchg
(bad)
out
movs
out
dec
rcl
sahf
push
pushf
jecxz
lods
or
ds
pop
dec
pop
xchg
gs
pop
or
adc
pop
jb
mov
test
js
sub
inc
in
jecxz
xchg
add
sbb
push
and
inc
adc
ins
das
pusha
jbe
cmp
sub
cmovb
andnps
js
movs
shr
(bad)
aam
rol
in
or
cmovs
inc
mov
lahf
pop
adc
je
cmps
test
stos
pusha
dec
sbb
leave
pop
or
cmp
(bad)
daa
mov
cmp
aad
fnstcw
and
leave
dec
mov
mov
add
sbb
les
sbb
mov
aad
stc
mov
cmp
mov
movs
out
popa
jnp
mov
sub
mov
and
mov
xchg
jno
cli
mov
sbb
and
push
cmc
pxor
mov
cmc
test
aaa
outs
std
mov
pusha
pop
pop
adc
fchs
out
lods
fmul
call
pop
add
inc
push
adc
outs
int
loope
cmp
push
nop
xlat
cwde
adc
mov
sbb
xchg
ins
(bad)
imul
sub
int3
cmps
add
js
jo
push
enter
outs
mov
mov
nop
fnstcw
push
int3
jnp
fadd
add
mov
lea
out
adc
pop
aas
outs
mov
movs
lods
lea
jmp
xor
test
es
push
ret
sub
jmp
push
xor
sbb
sub
clc
cmc
daa
push
push
fwait
pop
and
movs
sbb
fwait
gs
adc
aas
xlat
push
cmp
mov
fcomp
mov
out
cmc
retf
sub
adc
jnp
xchg
dec
push
jmp
pop
sbb
sub
xchg
daa
gs
sub
neg
loopne
retf
(bad)
mov
dec
jge
aas
lds
inc
dec
pop
fdivr
sti
jns
pushf
in
aaa
jg
ror
int
iret
sahf
lahf
mov
inc
(bad)
in
jmp
cdq
or
cmps
inc
orps
push
nop
sub
daa
ficomp
sub
(bad)
retf
add
pop
and
loop
mov
aam
addr16
add
out
gs
sbb
and
mov
(bad)
scas
call
push
jo
movs
popf
mov
sbb
pop
aam
cmp
test
cmp
es
icebp
add
dec
inc
cmps
lds
jb
mov
and
inc
jae
mov
inc
fld
jge
inc
jl
mov
in
push
(bad)
jecxz
and
popa
mov
mov
inc
ins
int3
mov
fs
xchg
inc
dec
int
leave
sbb
sub
push
pusha
std
jns
xchg
cmp
outs
je
jge
hlt
sbb
cld
push
dec
adc
lea
push
sbb
int3
mov
add
push
jne
add
jns
mov
test
xor
ret
lods
adc
pop
mov
test
mov
inc
pop
daa
push
loope
loope
movs
sub
add
xchg
adc
cmp
mov
and
mov
stos
out
icebp
or
xor
xchg
iret
pop
cmp
pushf
movs
cmp
lods
xor
icebp
cmp
and
rol
mov
repnz
cwde
int3
mov
jecxz
mov
push
adc
sbb
add
ins
sbb
pop
and
pop
adc
push
loopne
ret
ret
push
dec
dec
(bad)
ss
and
add
rcl
and
fsub
ret
fimul
jle
add
mov
adc
sub
pop
push
inc
ret
xor
and
(bad)
repnz
cmp
jge
jecxz
cmp
(bad)
push
fstp
js
aam
lahf
shr
(bad)
sti
inc
scas
repz
sbb
sub
(bad)
in
adc
dec
and
scas
mov
jecxz
dec
in
mov
xchg
adc
inc
test
pusha
rcl
push
retf
cmc
ds
movs
mov
popa
or
xor
rcl
mov
mov
test
aam
pop
dec
sub
mov
mov
icebp
dec
js
jns
push
es
test
push
inc
or
test
pop
iret
lods
imul
mov
push
xchg
dec
xchg
sbb
shl
add
pop
sbb
pop
aad
lock
or
mov
(bad)
shl
xor
cmps
dec
jno
mov
(bad)
cmp
add
stos
mov
xchg
loope
sub
pop
je
add
inc
mov
mov
cdq
mov
std
pop
cdq
push
mov
or
cmps
push
(bad)
and
mov
mov
dec
mov
xor
daa
cmp
lods
das
out
or
xor
xor
push
or
adc
push
mov
adc
repnz
mov
in
or
jle
out
cmc
xor
and
cmp
scas
mov
xchg
fst
fimul
xor
(bad)
(bad)
mov
sbb
mov
int
and
fcomp
in
retf
and
add
pop
dec
jnp
lods
popa
jmp
push
aaa
adc
jno
jge
xor
add
mov
cs
enter
xchg
inc
scas
aad
xchg
cmp
adc
icebp
imul
loop
sbb
(bad)
loop
and
inc
mov
hlt
rcr
pop
push
nop
ins
mov
mov
cmp
mov
stc
sbb
or
pop
cdq
cmc
popa
scas
push
sub
mov
inc
sti
xlat
jne
stos
jno
aam
cmp
(bad)
or
sahf
pop
pop
cld
xor
call
pop
push
ficomp
jmp
repz
or
xchg
xor
pushf
sahf
push
sti
or
and
xchg
or
push
sbb
xchg
jnp
inc
loope
pop
sti
dec
and
mov
xchg
push
sbb
in
sbb
jmp
sbb
sar
mov
mov
pop
inc
cmp
xchg
icebp
fisttp
retf
jno
or
sub
(bad)
aad
and
shr
pop
adc
pop
mul
pop
test
popa
leave
les
ror
xor
push
mov
pop
mov
rcr
mov
nop
pop
xchg
ret
and
push
gs
cwde
sbb
mov
int3
int3
push
sbb
sub
push
out
fstp
(bad)
sbb
adc
inc
and
sbb
in
rol
ja
(bad)
adc
(bad)
push
cli
rol
nop
les
jbe
xchg
icebp
xor
add
loop
into
mov
xchg
push
stos
cmp
cmp
jno
sbb
cmps
jmp
and
das
sbb
retf
arpl
aad
dec
xor
fcomp
push
clc
dec
fsubr
scas
pop
or
in
inc
xchg
xchg
adc
push
not
pop
and
push
push
loope
inc
stos
adc
clc
(bad)
and
js
cld
icebp
loopne
shl
fnstcw
out
sbb
cdq
push
jmp
(bad)
push
jmp
cmps
ins
in
(bad)
fwait
test
pushf
lods
aaa
jb
mov
and
scas
loop
into
pop
lds
and
movs
push
in
pop
shl
test
jbe
outs
jne
mov
fcmovnbe
sar
push
jnp
mov
pop
call
dec
(bad)
int
idiv
and
daa
mov
aaa
and
inc
enter
jb
ja
sbb
mov
cmp
inc
dec
or
sahf
cmps
out
mov
fadd
loop
out
cld
mov
js
mov
mov
xchg
mov
or
cld
sahf
inc
inc
xchg
imul
mov
mov
mov
pop
xchg
shl
pop
shr
pusha
push
pop
sbb
sti
push
sub
out
(bad)
enter
sbb
cmp
adc
addr16
outs
cmp
gs
movs
xchg
aam
enter
call
pushf
jae
jg
and
test
pop
sbb
or
sub
cmp
imul
cmp
pop
or
mov
pushf
inc
cli
sbb
jnp
int
cmps
and
popa
jmp
les
mov
mov
push
(bad)
mov
mov
test
shl
cld
imul
(bad)
aaa
inc
pop
sbb
cmp
fst
pop
aaa
jg
addr16
lock
pushf
mov
out
dec
sub
jno
mov
pop
fimul
dec
inc
xchg
push
jge
add
mov
imul
mov
push
mov
daa
ret
or
pop
rol
fsubrp
mov
sar
in
inc
sub
fidiv
jnp
test
or
cdq
xchg
jno
outs
ror
xlat
call
xchg
fimul
add
inc
outs
pop
shr
das
int3
fcmovnb
mov
cld
and
sbb
cmp
ins
loop
into
retf
or
or
dec
xor
xor
cmp
test
inc
js
xchg
xor
sbb
push
aam
in
lea
ror
je
sub
and
ror
adc
jecxz
in
in
inc
cdq
mov
pop
pop
mov
(bad)
inc
ins
test
push
or
lds
out
and
cmp
cmp
pop
push
ret
je
sti
(bad)
stos
adc
pop
mov
in
test
xor
jmp
pop
arpl
(bad)
(bad)
neg
in
(bad)
(bad)
nop
cmp
scas
in
das
mov
gs
cs
jle
pop
mov
das
imul
out
frstor
push
cmp
test
cmp
cmp
movs
cli
ja
jae
jb
or
inc
js
ror
xchg
loope
or
or
imul
xor
and
mov
mov
fnstsw
jl
in
imul
xchg
aaa
add
aas
fnstenv
outs
add
je
fimul
jnp
inc
xchg
adc
lds
movs
aas
stos
push
jle
mov
inc
jno
in
xor
outs
dec
jle
lock
and
push
(bad)
scas
ja
or
movs
cdq
rcr
mov
stos
daa
sbb
call
fiadd
sub
int
sbb
add
cmps
das
push
xchg
add
sub
pop
fstp
and
mov
test
(bad)
xor
sahf
ins
cwde
repz
mov
push
arpl
test
pop
mov
mov
xchg
cmp
retf
cmp
ds
es
push
daa
jo
js
stc
icebp
test
add
xchg
push
loopne
pop
xchg
ja
rcl
arpl
jp
jge
ss
das
xchg
mov
out
enter
jae
out
lock
cdq
sti
cmp
jb
out
ror
std
mov
aas
cmp
pop
pop
lods
mov
xchg
adc
mov
mov
hlt
xchg
std
in
adc
and
in
pop
cmp
adc
cmp
cmps
cdq
cmps
rol
sub
inc
mov
mov
call
xor
lea
mov
xor
mov
arpl
movs
push
popf
pushf
xchg
mov
mov
(bad)
sbb
dec
xor
dec
pop
or
shr
lods
jno
cmp
loopne
xchg
movs
mov
cmp
sbb
add
push
jb
repz
out
sub
aaa
outs
ret
fdivr
cmp
xor
ins
mov
cdq
(bad)
jns
loope
repz
xchg
sbb
pop
scas
dec
mov
shl
inc
clc
xchg
push
jae
adc
std
(bad)
mov
popa
dec
jmp
cmp
or
repnz
into
push
daa
adc
stc
mov
imul
pushf
(bad)
popa
add
rcr
fadd
loopne
cmp
(bad)
pop
lea
and
scas
push
inc
not
fisub
xchg
out
adc
das
(bad)
mov
ror
and
sub
sbb
ins
jmp
in
mov
(bad)
(bad)
mov
(bad)
dec
or
scas
push
or
or
adc
movs
dec
fdiv
sbb
test
pop
fidiv
mov
repnz
xor
inc
add
xor
hlt
sub
addr16
mov
icebp
retf
mov
clc
lods
mov
sti
movs
or
outs
and
in
fld
jbe
iret
test
retf
cmp
aas
jmp
(bad)
cmp
pop
mov
jg
imul
fisub
cmps
mov
out
fld
in
scas
das
inc
and
test
or
(bad)
pop
push
push
outs
mov
xchg
pop
xchg
shl
out
into
je
loope
pop
or
clc
inc
nop
mov
push
jbe
test
int3
sub
adc
ss
mov
adc
fld
dec
std
cmp
cmp
mov
pusha
mov
and
pop
ret
or
cmp
mov
xchg
fiadd
push
ret
add
inc
mov
out
adc
scas
adc
mov
icebp
in
push
mov
clc
and
push
add
(bad)
scas
jo
pop
int3
retf
add
shl
dec
sbb
movs
sub
add
fsub
cs
retf
neg
inc
mov
dec
pop
leave
sbb
jnp
xchg
or
test
sub
xchg
out
push
and
mov
dec
xor
lods
sbb
jo
pop
inc
xchg
sub
fwait
and
jns
pop
mov
or
retf
push
dec
add
daa
pop
mov
out
arpl
inc
mov
mov
inc
add
or
mov
fnstsw
dec
sbb
sbb
push
not
fincstp
cmp
out
sub
sbb
clc
xor
mov
sub
ins
(bad)
jl
pushf
pushf
add
xor
jl
mov
and
lea
pop
gs
cmps
stc
or
pop
js
test
mov
xor
das
pop
xor
sahf
push
(bad)
shr
(bad)
fnsave
out
clc
jmp
inc
adc
int3
lock
jge
ret
cld
jmp
sar
push
cmps
outs
sub
rcl
out
test
sbb
cmp
mov
aas
sub
sahf
(bad)
push
imul
sub
and
imul
int3
(bad)
pop
ins
jne
and
mov
push
movs
xor
fimul
in
stos
gs
mov
in
nop
xchg
call
mov
lods
jo
sub
pop
in
pop
mov
int3
test
(bad)
mov
xchg
daa
sbb
fimul
adc
js
out
clc
mov
and
and
cmp
mov
pop
add
lods
dec
retf
jmp
in
push
push
pop
pushf
ret
mov
dec
dec
push
xchg
test
aaa
jno
cmp
out
add
inc
loopne
mov
ja
jmp
xchg
jbe
inc
sub
add
mov
mov
xchg
jne
pop
addr16
jmp
xchg
cmps
ror
(bad)
shl
jecxz
push
inc
add
sub
ret
and
and
rcr
jo
mov
and
retf
jnp
inc
mov
sub
adc
and
das
cmp
lahf
sbb
lock
push
xchg
loope
lods
adc
cwde
jbe
mov
mov
ror
je
push
mov
add
and
add
dec
sub
cmps
lods
pop
push
mov
js
pop
ds
cmp
jno
pop
push
ret
dec
sub
arpl
xchg
rcl
jl
gs
leave
loope
out
sar
cld
call
mov
in
mov
adc
push
and
hlt
imul
dec
aam
mov
xchg
lds
pop
pusha
(bad)
not
and
fcmovne
xchg
sub
(bad)
mov
adc
jns
sub
mov
bound
mov
mov
pop
or
stos
fsub
leave
cld
add
push
mov
loop
and
sbb
jg
es
outs
pushf
sbb
fadd
adc
adc
rcl
daa
jl
jmp
ret
add
hlt
iret
scas
int
(bad)
mov
inc
cmp
dec
loope
sti
mov
jmp
jecxz
ror
sar
mov
mov
data16
jb
fs
clc
push
out
dec
xchg
add
dec
aam
lahf
xchg
out
rol
imul
dec
je
sub
neg
xor
lds
or
dec
retf
xchg
push
icebp
sbb
(bad)
in
mov
add
add
jne
sti
jl
pushf
shr
fldcw
into
ins
ror
cmp
ja
mov
lods
jge
out
dec
jb
hlt
sbb
add
fwait
push
push
data16
retf
mov
icebp
adc
(bad)
or
test
sar
adc
push
sbb
or
jae
push
mov
aas
sub
leave
mov
mov
dec
jmp
mov
arpl
div
sbb
cwde
js
lods
dec
or
cmp
cli
mov
(bad)
(bad)
xchg
pop
mov
daa
cdq
loopne
dec
or
jge
push
sub
push
mov
mov
into
(bad)
clc
mov
aam
pushf
pop
jb
repnz
je
mov
gs
jne
daa
cli
out
pop
mov
out
dec
push
out
test
push
push
aaa
sbb
cs
popa
cdq
dec
xchg
(bad)
loop
(bad)
ret
cld
lock
add
xchg
mov
mov
cmp
xor
out
adc
out
fidivr
daa
lds
sub
xchg
fistp
test
movs
stos
sbb
mov
sbb
(bad)
mov
ss
out
out
push
ins
adc
fs
pop
mov
dec
cmp
mov
in
mov
or
fs
data16
sub
jle
fisttp
cmp
out
out
and
pop
cs
les
stc
jbe
dec
dec
push
ror
(bad)
es
and
retf
cs
ins
add
sub
cmc
or
and
add
rcr
or
or
xchg
jle
es
xchg
(bad)
cwde
mov
push
cld
stos
sbb
movs
mov
jbe
and
adc
push
jns
cli
mov
pop
jmp
leave
inc
int3
add
out
jns
mov
(bad)
test
test
adc
mov
mov
and
push
pushf
movs
mov
and
stos
fsubr
jo
sub
mov
xchg
or
mov
jle
ret
cmp
mov
push
xor
pop
mov
test
shl
mov
cmp
push
xchg
retf
sbb
movs
(bad)
lahf
sbb
leave
and
xchg
or
out
xor
stc
mov
inc
repnz
jle
mov
outs
out
mov
sub
stc
enter
push
jmp
mov
or
and
mov
stos
and
add
or
lahf
ins
rol
movs
sbb
push
sub
(bad)
jmp
(bad)
aam
cmp
fcom
xchg
or
inc
add
mov
add
jle
cmc
mov
(bad)
int
sti
int3
push
pop
jmp
(bad)
cmp
mov
pushf
test
mov
scas
mov
les
daa
lods
je
sub
xor
push
add
adc
in
xlat
and
jne
sub
popa
jo
outs
test
sbb
int3
sub
(bad)
mov
jb
jecxz
add
inc
add
(bad)
mov
scas
mov
and
pop
and
mov
pop
jmp
(bad)
and
xor
sub
jb
adc
int3
or
jno
mov
or
cli
aad
ins
mov
xchg
inc
int
sub
(bad)
jg
loope
adc
loopne
aaa
imul
push
cmps
dec
iret
pop
daa
ja
or
fist
lds
icebp
(bad)
xchg
pusha
push
cmp
in
fs
les
aam
or
mov
loop
arpl
leave
aad
lea
fmul
shl
gs
movs
pop
fcmovb
shr
dec
xchg
dec
pushf
mov
fwait
int3
pop
cdq
and
out
pop
jo
cmc
inc
(bad)
loope
aaa
jmp
pop
cdq
dec
(bad)
cmp
xchg
repz
push
jo
test
aaa
out
fdivr
mov
icebp
mov
repz
xchg
retf
and
and
jae
jecxz
xor
inc
push
jae
jb
sub
popf
(bad)
loope
js
(bad)
push
jge
jo
lods
sar
sahf
push
add
mov
sbb
movs
lea
cs
jle
popf
mov
xor
xchg
mov
mov
aam
mov
dec
das
jl
scas
in
out
pop
ja
or
test
out
ss
sbb
cmp
add
sub
sub
mov
inc
out
fdivr
mov
(bad)
popf
int3
dec
jmp
es
retf
mov
xchg
cmp
cwde
jb
in
mov
adc
outs
xchg
cmc
adc
sti
(bad)
or
pop
fstp
cmp
shr
sahf
and
mov
aam
bound
fdiv
xchg
lods
cli
inc
fadd
adc
mov
sti
mov
stos
cdq
mov
movs
iret
outs
mov
ss
xor
xlat
or
aam
mov
test
pop
or
les
adc
sub
adc
push
jo
into
mov
ja
xchg
dec
in
sub
xchg
int
(bad)
js
dec
push
shl
ins
into
adc
retf
or
mov
(bad)
mov
pop
or
push
xchg
mov
scas
jge
int
xor
mov
pop
xchg
mov
cmp
mov
and
fld
cmp
mov
dec
adc
xrelease
cmp
cmp
xor
les
and
push
inc
sbb
sbb
lds
daa
mov
and
add
mov
jns
xchg
add
enter
les
lock
add
pop
(bad)
gs
nop
stc
mov
mov
retfw
clc
fisub
adc
cli
sbb
and
mov
xor
pop
pop
imul
and
jle
cmc
jns
dec
and
outs
mov
(bad)
jnp
mov
jo
add
mov
xchg
loopne
shl
fsub
jbe
mov
mov
mov
fdiv
test
movs
mov
cmp
lods
dec
xor
push
add
cwde
push
push
sub
(bad)
push
or
ja
cmp
fs
adc
les
mov
jp
cwde
stos
mov
je
cmc
sub
ret
xchg
jb
ins
push
fmul
jne
pop
nop
scas
or
ss
dec
mov
adc
pop
loope
sbb
push
daa
sar
lds
data16
cli
sub
jmp
inc
clc
ins
lods
or
mov
push
test
fisubr
xchg
cmps
jno
mov
push
fisttp
(bad)
ret
xchg
in
fild
retf
xchg
jmp
dec
fs
jbe
adc
jns
pop
pop
push
imul
cwde
aaa
mov
loope
sub
jae
or
cmp
nop
jne
pop
rcl
ret
into
add
mov
fbld
in
xor
ss
loope
out
ret
shl
imul
xchg
gs
xchg
es
out
cmp
and
mov
scas
push
aad
xchg
adc
xor
mov
fwait
sbb
add
test
(bad)
sub
jae
cwde
in
adc
bound
adc
jmp
mov
push
and
xor
ins
add
xchg
aad
inc
jecxz
cmp
and
(bad)
retf
pop
into
lahf
jnp
cdq
jbe
dec
movs
xor
(bad)
mov
popf
ss
jns
sub
cdq
jns
(bad)
fmul
cdq
(bad)
push
nop
(bad)
icebp
not
or
xor
scas
pop
jmp
pop
sbb
or
fwait
lods
xchg
dec
int3
in
xor
push
test
cs
or
cmp
add
mov
or
jl
in
sbb
in
or
daa
loopne
mov
mov
(bad)
stos
repnz
clc
jp
jecxz
inc
xor
mov
push
adc
call
fcomp
adc
sbb
idiv
jle
cmp
sbb
inc
sub
dec
(bad)
aas
ins
cwde
sub
stos
xlat
out
mov
xchg
sbb
push
icebp
aaa
add
dec
pusha
sub
sub
nop
xchg
scas
inc
sub
fidiv
ja
push
call
mov
scas
scas
retf
fdiv
pop
popa
sub
fwait
rol
xchg
pop
xor
es
push
test
pop
push
inc
push
push
popa
ins
pop
push
shl
xor
call
adc
push
mov
div
adc
inc
xlat
sbb
inc
mov
cwde
or
mov
xchg
jns
lods
daa
(bad)
rcr
(bad)
cmc
adc
adc
pusha
pop
sbb
jno
je
iret
loop
inc
test
daa
cmp
sbb
xchg
es
(bad)
pusha
or
sbb
xchg
push
retf
sbb
inc
sub
in
push
or
stos
cmp
jg
dec
mov
in
dec
xchg
mov
pop
pushf
retf
ja
push
iret
fdivr
(bad)
icebp
sub
ja
out
dec
inc
pop
inc
rcl
and
mov
(bad)
sub
scas
movs
and
inc
sbb
mov
fdivr
mov
fs
hlt
pop
cdq
xor
add
aaa
push
mov
inc
rcr
outs
nop
xchg
mov
xchg
push
scas
fimul
inc
xlat
movs
or
add
(bad)
call
push
rol
sbb
xchg
jae
push
stos
xor
int
xchg
push
jno
fst
ins
mov
jmp
or
in
imul
sti
jl
xchg
sub
shr
and
push
in
pushf
movs
addr16
dec
jle
pop
xchg
mov
cmp
out
enter
arpl
mov
enter
icebp
mov
ss
fisub
add
dec
es
cmp
aam
sbb
fstp
out
shl
mov
shl
hlt
lea
dec
(bad)
rcl
fld
dec
hlt
adc
maskmovq
imul
cmp
in
push
outs
out
cmc
and
xchg
xchg
pop
jb
test
dec
dec
js
mov
sbb
sub
div
pop
pusha
adc
cmps
cmp
jmp
lods
jle
dec
mov
lock
jmp
call
xchg
rcr
push
mov
add
sbb
adc
sub
in
dec
jle
dec
inc
push
inc
rol
ja
sahf
rcl
pop
ss
dec
inc
mov
jb
lds
mov
adc
mov
pop
or
aaa
sub
cmp
movs
or
mov
mov
pop
adc
sbb
mov
sub
inc
add
jecxz
mov
pop
push
mov
mov
pop
hlt
or
pop
(bad)
popf
sub
mov
in
jge
pop
inc
and
lods
dec
pop
xor
mov
dec
push
inc
dec
out
lods
sti
cmc
xlat
xor
mov
ret
jno
sbb
pusha
addr16
rcr
lods
ins
stc
pcmpgtb
cmps
push
cld
xchg
jnp
mov
add
ss
adc
in
int
shl
jecxz
or
js
and
cmp
retf
and
hlt
sub
add
inc
dec
dec
ss
jne
pusha
push
cmp
add
je
and
push
(bad)
push
movs
sub
cdq
mul
hlt
pop
(bad)
ins
iret
sbb
adc
aas
fwait
cwde
dec
pop
mov
mov
fisub
sbb
fs
rcl
pop
mov
(bad)
in
push
mov
arpl
jae
in
push
inc
icebp
ins
sbb
cmc
jns
out
xchg
(bad)
lahf
xchg
xchg
pop
mov
dec
jnp
jmp
mov
jmp
push
jg
sbb
sub
ins
jae
jo
add
or
stos
inc
daa
stc
add
ja
mov
cs
push
cmp
xchg
sbb
add
jb
inc
mov
add
fwait
loopne
cmp
sbb
clc
aad
or
dec
xor
dec
test
std
push
jge
and
outs
mov
push
mov
inc
cmp
lds
push
xchg
imul
or
loopne
sbb
jne
mov
push
ins
mov
gs
mov
add
loopne
shl
or
mov
jmp
inc
pop
sbb
fsubr
pop
movs
xor
lahf
mov
pop
and
cmp
jge
in
ss
jne
movs
jb
daa
push
cmp
fldcw
mov
pop
idiv
ret
movs
test
cmp
movs
or
repz
pop
add
std
inc
jg
jo
adc
test
(bad)
ds
add
ret
xchg
(bad)
in
int
jmp
dec
mov
push
idiv
cld
gs
dec
sbb
enter
mov
mov
push
mov
and
pop
pop
adc
pop
push
gs
xor
int3
in
loop
popf
sbb
popf
lock
mov
test
rol
and
mov
push
out
xor
inc
repnz
loop
xchg
mov
retf
adc
xchg
mov
dec
mov
(bad)
in
fisub
ffreep
in
bound
fmul
inc
adc
or
mov
daa
test
cmp
cmp
cmp
stos
test
popf
pushf
sub
mov
(bad)
cmc
stos
cmc
arpl
test
push
repnz
cmps
in
or
push
jns
or
and
cmps
cmp
add
and
cmp
shl
push
jmp
fwait
cmc
(bad)
aad
bound
xor
mov
cmp
push
mov
xor
push
cmps
pop
inc
pop
inc
mov
sub
jmp
dec
cs
cmp
mov
push
mov
aad
xor
sub
sbb
jmp
iret
and
dec
mov
aad
sti
dec
mov
fwait
add
cs
fs
dec
inc
push
fldcw
stos
inc
les
dec
push
aas
loope
mov
add
pop
je
lahf
addr16
out
ins
push
mov
ds
ret
int
cdq
cmp
push
add
pop
sbb
xchg
aas
cmps
jnp
push
or
pop
dec
faddp
pop
es
mov
sub
cmp
lods
jae
dec
mov
dec
xlat
push
mov
jmp
cmp
ret
xchg
cld
loop
push
out
xor
dec
pusha
imul
and
sub
and
fadd
jl
popa
jo
sub
(bad)
ins
retf
fnstsw
in
enter
xchg
inc
jmp
(bad)
mov
daa
mov
pop
cli
xor
out
aam
scas
push
adc
xchg
mov
mov
adc
and
pop
or
xor
push
jle
mov
mov
pop
loope
xchg
enter
into
sahf
(bad)
aad
xchg
lods
pop
push
sub
sub
stos
jae
icebp
xchg
or
inc
jp
sub
xor
cmps
in
dec
pop
sub
cmc
ins
into
mul
mov
popa
mov
mov
jle
inc
data16
ret
loopne
xchg
xchg
test
cld
sar
imul
dec
daa
pop
lahf
pop
not
je
aam
in
ins
movs
mov
(bad)
sbb
lods
or
int
and
scas
mov
ret
ins
push
arpl
iret
(bad)
inc
shr
cmp
xor
fistp
inc
jns
std
jne
xchg
jecxz
sbb
adc
or
jne
pop
dec
cdq
imul
xor
mov
cmp
pop
or
std
mov
aaa
les
mul
sub
adc
retf
pushf
pushf
push
aas
adc
test
outs
jmp
adc
fnstenv
sbb
xchg
retf
add
cld
adc
enter
ins
sub
je
stc
rol
shl
mov
ins
int
test
push
mov
cmp
lods
fiadd
adc
xchg
loop
jl
mov
cmps
cld
sub
mov
sahf
push
imul
cli
jle
test
add
fisubr
adc
ss
(bad)
adc
das
pop
add
xor
cmp
sahf
dec
repnz
shr
pop
out
jecxz
or
lea
icebp
pusha
xor
loope
xlat
inc
or
(bad)
leave
and
(bad)
movs
mov
or
mov
xchg
shl
dec
mov
ins
or
fiadd
add
xchg
mov
pop
sti
enter
pop
sub
push
retf
sub
call
xor
xor
(bad)
sub
addr16
cdq
jmp
loopne
mov
xor
scas
pop
pop
in
xor
adc
inc
xchg
out
movs
out
jno
dec
sub
aam
mov
dec
mov
addr16
pusha
out
jp
imul
sbb
sbb
movs
xchg
cmp
inc
pop
cmc
ins
and
xor
pop
mov
inc
into
(bad)
mov
fimul
sbb
sbb
(bad)
hlt
or
dec
imul
dec
mov
or
ins
inc
leave
push
adc
sbb
loope
jb
cmps
mov
jmp
cmp
and
fldcw
add
adc
inc
mov
sub
jno
push
inc
pop
or
adc
ret
popa
std
mov
(bad)
test
fsub
cmp
pop
adc
sbb
push
leave
popa
retf
inc
mov
ja
mov
aas
mov
mov
(bad)
test
into
jb
sar
jle
popf
inc
and
push
push
and
or
or
popf
neg
popa
xor
cmp
enter
pop
lds
adc
push
out
mov
dec
fst
dec
mov
ss
imul
and
pop
mov
adc
sar
xor
mov
dec
retf
inc
jns
movs
test
adc
add
mov
stc
lea
(bad)
out
xlat
push
ins
dec
sbb
lods
ret
mov
call
out
ret
adc
xchg
out
aas
inc
fidiv
leave
popf
lods
lods
push
xor
mov
outs
xor
loop
ror
mov
mov
mov
daa
xlat
aaa
sbb
das
hlt
mov
or
pop
scas
movs
pop
dec
jecxz
(bad)
cld
push
fsubr
push
mov
out
and
adc
lods
inc
sbb
add
add
pop
lea
cmp
jbe
sar
mov
lea
out
lahf
lea
mov
xchg
cmp
dec
mov
mov
jne
pop
pop
mov
int3
dec
cs
adc
shl
lods
xchg
jl
adc
dec
xor
sub
or
dec
mov
loop
pop
mov
ins
lods
cs
leave
xchg
es
pop
pop
jb
test
test
into
cs
pusha
or
or
jp
jno
out
mov
mov
fsubr
dec
mov
and
sub
push
jns
clc
add
cmp
in
mov
imul
add
or
jg
loopne
lods
jns
dec
rcr
es
pushf
cld
(bad)
call
inc
pop
xchg
fsub
pop
fucomp
test
push
mov
ret
inc
inc
cli
shr
movs
push
dec
xchg
sahf
inc
outs
pop
test
stos
mov
lods
xor
or
push
cmps
jbe
jmp
fs
pop
sbb
mov
jp
xchg
xchg
or
mov
mov
pop
aas
std
sti
in
add
dec
xchg
imul
(bad)
in
in
xchg
cmc
aad
sbb
fbld
out
sbb
lods
in
repnz
push
lahf
push
fimul
scas
push
pop
jecxz
ret
ins
lock
inc
cmp
or
ret
repnz
cmc
mov
push
scas
sub
stos
fstp
arpl
jmp
cmp
pushf
cmp
sub
push
push
xchg
adc
or
iret
dec
in
hlt
adc
das
add
test
test
or
enter
stos
into
inc
sbb
lods
or
pop
mov
adc
and
imul
cmp
sbb
sub
sbb
je
sti
repz
pop
sub
sbb
jp
stos
das
mov
xor
cmp
(bad)
jmp
pop
mov
sub
je
cli
cs
test
mov
jg
xchg
pop
xlat
xlat
lods
or
stos
mov
inc
xor
repnz
inc
jle
fs
push
nop
inc
sbb
mov
pop
imul
xor
fild
sub
fs
sbb
dec
jmp
push
jnp
shr
jmp
xchg
xor
jnp
dec
push
xchg
hlt
(bad)
jo
or
adc
(bad)
fwait
sub
fbstp
xchg
shr
arpl
stc
mov
jb
dec
shr
push
or
inc
mov
jns
aam
sahf
push
pop
imul
retf
mov
cmps
ss
adc
jmp
xlat
jmp
(bad)
arpl
mov
cmps
push
cmp
xor
inc
int3
pop
in
inc
inc
jbe
je
mov
add
or
es
jmp
daa
out
repz
(bad)
jnp
adc
ret
dec
sbb
div
jmp
sbb
(bad)
add
and
dec
xchg
mov
repz
test
mov
mov
sub
gs
push
sbb
scas
mov
xor
dec
or
cmps
mov
and
out
adc
in
ret
jecxz
jmp
pusha
std
cmps
call
inc
xor
ret
(bad)
call
adc
add
pushf
call
cmp
enter
mov
inc
or
shr
jo
sbb
xchg
add
lea
add
es
cmc
add
xor
rol
stc
pop
scas
add
or
push
or
retf
inc
xor
adc
or
and
sti
(bad)
mov
ins
fmul
bound
pop
(bad)
rol
inc
adc
push
jno
adc
dec
cmps
(bad)
pop
jns
and
fwait
fs
shr
mov
inc
ret
dec
je
leave
movs
sub
push
jg
mov
push
retf
mov
push
add
icebp
mov
stos
dec
pop
popf
or
sub
call
and
or
repz
and
not
ds
stc
sub
push
mov
popf
mov
cs
clc
test
xor
dec
jg
pop
(bad)
sti
mov
dec
popa
fmul
fidiv
push
ds
out
out
push
or
cmp
sbb
(bad)
sti
xchg
push
pop
repnz
add
push
(bad)
sti
inc
cdq
pop
cmp
pop
loopne
pusha
push
loope
test
jmp
jb
jb
pushf
pop
sub
mov
sub
sar
add
cmc
and
sub
mov
cmps
mov
ins
dec
inc
mov
retf
loope
push
retf
test
add
loop
inc
cmp
jne
sbb
stos
test
or
iret
or
dec
sbb
fidiv
adc
std
and
dec
(bad)
ss
mov
cmc
iret
fcmovne
push
push
or
sub
in
and
jne
and
xor
sub
xchg
sbb
pop
dec
dec
pusha
hlt
pop
xor
jns
jb
repnz
sti
add
leave
ins
imul
stos
jne
xchg
or
rcl
ss
xchg
dec
int3
test
push
dec
mov
(bad)
cld
scas
scas
imul
retf
cmp
jmp
or
sti
dec
jg
in
inc
add
mov
adc
cld
push
inc
es
push
inc
or
lea
cmp
stos
scas
enter
in
in
pop
ins
jecxz
repz
popf
mov
jmp
dec
and
xchg
sar
test
push
add
push
mov
push
stos
rcr
pop
sbb
aaa
sbb
div
inc
push
mov
xchg
sahf
or
hlt
jecxz
fadd
xor
pop
imul
imul
jb
jecxz
not
mov
push
jmp
cli
add
xchg
aam
popa
rcr
pop
sti
add
sbb
out
out
cmp
mov
inc
es
scas
popf
xchg
mov
rcr
xor
jg
dec
sahf
aad
pop
arpl
js
fidivr
ds
xor
lods
js
fwait
push
cmp
hlt
dec
mov
xor
bound
dec
push
mov
dec
shl
push
test
and
inc
cwde
xchg
sub
shr
sub
adc
inc
inc
bound
pusha
mov
xchg
dec
xor
std
dec
(bad)
jbe
test
xchg
dec
pop
or
push
out
pushf
mov
pop
mov
xchg
aaa
push
mov
push
aam
adc
and
inc
nop
loopne
pop
and
stos
sub
xchg
cmc
pop
call
push
das
pop
xchg
and
out
icebp
div
repnz
and
xchg
sbb
jo
addr16
jno
fstp
or
in
in
push
addr16
cs
int
push
sub
sub
or
fwait
pop
repz
stc
stos
adc
imul
lods
movs
jmp
mov
test
jnp
add
push
(bad)
pop
dec
out
cmp
retf
dec
xchg
lds
xor
lea
push
(bad)
pop
call
call
mov
pushf
pushf
imul
or
cmp
push
scas
mul
outs
mov
push
aad
rcr
mov
mov
sbb
test
(bad)
in
adc
(bad)
imul
movs
ror
ficom
shr
test
int
xor
inc
add
sar
cli
mov
cmps
xor
movs
arpl
or
mov
jge
jl
jae
cmp
cwd
push
cmp
mov
push
gs
nop
je
and
aas
lock
clc
pop
arpl
shr
cld
js
ss
or
fld
pop
dec
hlt
fs
jno
ins
mov
sbb
leave
jne
adc
sub
sbb
jg
in
mov
xor
push
mov
adc
mov
fs
int
xlat
add
mov
cmp
dec
mov
(bad)
jp
pusha
popa
inc
repnz
dec
ss
dec
mov
xlat
lea
bound
hlt
in
das
mov
cdq
lds
xor
mov
jbe
aas
daa
cs
add
inc
popf
lods
mov
push
dec
jmp
cdq
or
out
inc
add
pop
inc
jmp
fiadd
dec
jp
adc
mov
jp
nop
mov
mov
xlat
jnp
adc
ret
arpl
xor
in
xchg
ins
leave
or
cmp
mov
out
jmp
shufps
daa
pop
push
mov
retf
das
sub
and
cmp
xchg
sbb
sbb
inc
adc
pop
stos
xor
rcl
into
cmp
pop
dec
xchg
sbb
or
aaa
sub
lock
xchg
arpl
dec
cmc
or
pusha
gs
in
cmp
sbb
mov
adc
inc
lahf
(bad)
out
fstp
mov
mov
dec
adc
rep
sub
and
cmc
cwde
adc
inc
cld
hlt
ins
xchg
lock
fild
out
xchg
pop
outs
sub
cs
icebp
add
add
or
sbb
in
aam
sub
mov
stos
mov
xchg
ins
add
imul
xor
repz
jmp
add
mov
retf
mov
cmp
sbb
push
inc
cmp
outs
daa
cmps
add
js
scas
jae
push
add
jno
dec
test
sub
repnz
inc
jne
inc
cs
cmp
cmc
xor
mov
(bad)
sar
(bad)
xor
add
loop
push
test
add
inc
dec
scas
pusha
mov
xchg
icebp
retf
dec
mov
cmc
fisubr
mov
sahf
xlat
pop
jl
inc
mov
or
in
js
mov
jge
pop
repnz
jno
cmp
jp
pushf
cmps
idiv
mov
in
out
inc
jne
fdiv
mov
cdq
and
sub
cmps
cwde
push
push
test
icebp
and
jmp
xor
inc
test
fstp
fadd
stos
inc
(bad)
test
mov
xchg
sahf
mov
movs
jbe
sbb
fstp
inc
push
xchg
sub
mov
imul
in
push
push
scas
push
ja
into
mov
and
loop
sbb
test
mov
mov
pop
mov
int3
(bad)
(bad)
popf
data16
fmul
and
mov
enter
(bad)
fimul
cmps
lea
out
mov
(bad)
sub
test
sar
movs
xchg
mov
dec
xlat
jae
push
jecxz
mov
fistp
dec
pusha
lea
xchg
fadd
fisttp
test
adc
pop
mov
arpl
stos
inc
pop
les
loopne
cmps
pushf
(bad)
into
or
fiadd
jne
mov
mov
cmp
loope
dec
js
sub
sar
adc
inc
aam
jae
int3
adc
push
idiv
pop
jl
and
in
cmps
cmp
hlt
xchg
js
or
inc
pop
popf
sub
outs
mov
cmp
mov
and
xchg
pop
add
fisub
pop
mov
pushf
sbb
mov
pop
cmp
ja
sbb
pop
pop
imul
fstp
xchg
mov
shr
outs
sbb
dec
pop
and
push
cs
arpl
fcomp
scas
nop
ficomp
push
shl
inc
out
repnz
ds
fidivr
jmp
sar
in
loop
push
jnp
retf
xlat
fsub
ret
cdq
pop
pop
mov
call
cmp
or
shl
call
mov
mov
movs
sbb
jnp
rcr
mov
leave
gs
inc
mov
movs
shl
pop
mov
push
adc
jne
retf
jnp
xor
sbb
sahf
(bad)
fist
xchg
repnz
and
fidivr
int3
outs
sbb
and
mov
arpl
arpl
into
sbb
gs
les
pop
lock
sbb
mov
xor
xor
sbb
repnz
mov
mov
cmp
out
outs
lds
in
cmc
jns
sahf
dec
jbe
cmp
jecxz
push
and
dec
pop
pop
clc
mov
mov
bswap
ficom
add
lock
dec
mov
std
mov
xor
lods
ds
icebp
xchg
sbb
xchg
jb
inc
sub
pusha
mov
mov
aam
sbb
sahf
cmp
loop
daa
sar
out
sub
das
adc
mov
shl
fs
and
jne
out
pop
add
jmp
fsub
test
adc
lods
sbb
cwde
xchg
xchg
sbb
pop
xchg
ficom
mov
int3
sub
repz
dec
fbld
stos
aaa
push
fdiv
push
xor
and
rol
cmc
push
mov
movs
neg
dec
sahf
push
push
dec
add
adc
sar
jae
imul
fild
(bad)
jo
push
xchg
xlat
mov
rol
into
fcomp
sub
arpl
arpl
mov
jecxz
adc
imul
xlat
add
mov
retf
cdq
dec
sub
jecxz
sbb
mov
mov
push
(bad)
xlat
movs
imul
or
into
jg
aas
adc
out
lods
aas
xchg
sub
or
pop
popf
add
push
aaa
arpl
or
aas
or
or
jb
mov
ins
dec
cmp
inc
and
outs
and
or
lods
retf
jle
stc
adc
test
push
jp
mov
sbb
add
push
stos
xchg
cdq
pop
retf
push
stos
push
daa
sbb
pop
pop
mov
ja
das
fwait
out
out
mov
cli
shl
mov
gs
push
mov
scas
jnp
cmps
aaa
sahf
or
fnstenv
and
jae
test
adc
xchg
js
(bad)
jnp
jle
leave
xor
or
push
sub
movs
dec
adc
pop
pop
and
xor
xor
xor
sbb
fs
js
out
sbb
dec
cmp
and
repnz
push
jo
mov
fist
xor
ret
iret
inc
add
enter
or
rcl
popa
and
dec
mov
push
gs
pop
gs
js
dec
les
push
xor
sbb
xor
dec
dec
retf
push
nop
in
repz
out
cmp
add
test
sbb
lahf
mov
in
mov
jno
xchg
xor
ffreep
cmp
imul
es
mov
cmp
test
push
test
push
cmp
add
adc
or
js
lock
imul
xchg
dec
mov
push
sbb
es
aas
mov
jmp
icebp
push
mov
daa
dec
stos
cwde
rcr
outs
inc
ss
jecxz
mov
dec
addr16
push
sub
lods
dec
enter
dec
dec
mov
or
and
xor
das
fisubr
into
rcl
xor
lods
dec
jns
lock
cmc
fsub
loopne
push
mov
retf
pop
outs
pop
iret
ss
lods
and
mov
adc
mov
push
mov
add
aas
sbb
fwait
or
in
int
cmps
sub
cli
pop
xor
xlat
pop
mov
add
xchg
mov
in
add
lods
sbb
enter
fwait
push
call
ror
in
in
retf
in
pop
aaa
scas
jb
inc
inc
add
adc
lds
pop
cld
test
push
rcl
pop
(bad)
gs
out
inc
cmc
scas
ds
xor
in
idiv
inc
rcr
mov
hlt
mov
jne
repnz
jg
lods
rcr
(bad)
inc
cmp
fwait
xchg
cs
cmp
pop
xchg
add
icebp
ins
xlat
fnstenv
add
bound
fld
in
test
xor
xor
sti
xchg
or
mov
adc
inc
ret
nop
push
pop
sbb
in
faddp
sbb
add
fsub
outs
ja
std
xchg
es
stos
leave
pop
jle
fild
sbb
pop
add
adc
nop
(bad)
(bad)
shr
lea
fst
inc
push
scas
fild
push
dec
adc
rol
popa
int
dec
jb
add
jl
imul
mov
(bad)
(bad)
or
jmp
dec
dec
mov
inc
and
in
cmp
in
add
push
cmc
jmp
loope
xchg
call
fidivr
les
enter
out
shr
adc
and
adc
fadd
dec
mov
xor
add
adc
mov
cmp
xor
mov
movs
lds
int3
mov
adc
test
outs
mov
xchg
pop
repz
mov
cs
mov
(bad)
popa
jne
mov
add
sar
and
ins
(bad)
sti
dec
outs
retf
xor
add
mov
jge
xor
jnp
jmp
repz
(bad)
mov
fld
xor
fistp
push
idiv
xchg
in
xor
xor
xchg
pop
mov
inc
push
jo
or
les
loope
xchg
sti
jne
or
mov
outs
add
js
fadd
or
pop
push
or
mov
mov
stos
out
and
enter
test
sub
aaa
inc
push
(bad)
jmp
into
pop
and
sti
adc
pop
mov
mov
inc
out
sti
pop
add
push
dec
sub
xchg
sbb
(bad)
jb
in
mov
inc
mov
add
or
icebp
mov
inc
xchg
repnz
push
xchg
pop
int3
push
je
inc
js
test
in
pop
ins
push
inc
cwde
or
outs
sub
jge
push
int
test
push
jmp
aas
stc
sti
fild
xchg
sub
loop
(bad)
mov
inc
mov
pop
call
dec
dec
call
sbb
loop
sbb
pop
je
rcr
sti
inc
inc
(bad)
std
pop
pop
fs
and
add
add
call
or
mov
sub
cmc
mov
and
rcr
push
fcmovnbe
mov
adc
sbb
dec
in
push
xchg
sub
jle
je
dec
jae
and
sbb
dec
in
loop
pop
jb
call
adc
jge
push
call
pop
mov
cmp
dec
pusha
cli
cmp
push
neg
mov
jl
mov
cwde
fcmovbe
mov
mov
mov
inc
ret
sti
pop
ss
pop
shl
xchg
fs
or
xchg
pop
sbb
jno
fidivr
jmp
add
bound
mov
sbb
mov
fucomp
mov
ret
stos
sbb
lea
push
iret
scas
fwait
push
mov
inc
or
add
jp
jmp
jl
rol
(bad)
leave
jns
xor
lods
icebp
leave
add
out
les
sub
pop
loop
adc
stos
arpl
dec
add
cmps
ss
pop
aas
scas
popa
sub
test
fistp
ja
mov
fprem
idiv
in
inc
or
push
xchg
fst
pop
xchg
push
jne
jecxz
xchg
pop
(bad)
sar
push
fisubr
gs
pop
dec
cmp
call
fmul
jg
fld
ins
aad
jae
rcr
jne
mov
cdq
ret
outs
sbb
dec
xchg
(bad)
out
and
xchg
ret
adc
cmc
mov
xchg
sar
(bad)
shr
push
dec
mov
pop
cmp
mov
je
jmp
rcl
ficom
mov
call
fs
push
cmp
ds
jg
scas
adc
push
adc
dec
mov
data16
lock
jns
pop
mov
clc
or
add
fwait
gs
ins
leave
popa
push
inc
mov
xchg
pop
xchg
rol
in
fistp
adc
bound
mov
pop
inc
fmul
xchg
in
mov
mov
xchg
jl
js
mov
fmul
mov
popf
xchg
push
mov
mov
call
inc
pop
jl
xchg
or
repnz
push
call
das
stos
mov
xchg
int
pop
cmp
rcr
sahf
(bad)
pop
fcomp
jg
dec
inc
scas
add
or
mov
out
std
(bad)
adc
lahf
add
jecxz
xor
add
sbb
inc
iret
fist
cmps
add
fdiv
xor
adc
inc
mov
jmp
aas
xchg
mov
lds
pusha
in
xor
cwde
jecxz
adc
sbb
jnp
mov
sbb
push
pop
rcr
inc
pop
ds
sbb
mov
pop
and
mov
pop
popa
inc
(bad)
jecxz
and
or
push
leave
not
das
cmp
cmp
push
and
lea
int3
and
mov
xor
iret
mov
pop
es
repz
leave
(bad)
js
xchg
mov
retf
shl
xchg
pushf
xchg
cdq
mov
sti
adc
xchg
inc
dec
out
push
shl
sub
and
sbb
xchg
add
outs
sbb
daa
call
dec
lahf
or
cld
retf
push
xor
xchg
(bad)
mov
dec
mov
ss
pop
dec
mov
push
pop
inc
cdq
mov
adc
xchg
xor
clc
movs
add
xor
retf
ja
sbb
(bad)
mov
repnz
cdq
jo
mov
pop
jle
or
and
pop
xchg
pop
push
xor
nop
imul
shl
mov
pop
pop
sbb
mov
jl
out
leave
je
add
and
or
add
ins
outs
sbb
and
addr16
and
xor
das
mov
(bad)
in
data16
and
jae
ja
cdq
cmp
mov
out
xchg
aas
das
arpl
std
pop
arpl
mov
rdtsc
inc
mov
popa
adc
(bad)
jg
lods
push
adc
movs
pop
jl
or
sti
data16
inc
ins
test
fbstp
out
jmp
bound
jno
add
inc
aas
push
ret
fcmovne
fidivr
call
ins
test
sub
leave
mov
jnp
lea
and
stos
pop
jns
push
pop
jno
mov
mov
in
hlt
pop
das
mov
cmps
into
shr
mov
fnsave
sub
dec
inc
xchg
sbb
mov
pop
jmp
dec
in
loop
inc
xor
cmp
pop
add
(bad)
(bad)
sub
test
in
ds
std
gs
cmc
mov
adc
aam
cmp
stc
mov
mov
pop
stos
and
or
xchg
sub
daa
push
aam
dec
inc
pop
rol
cmps
aaa
xor
cmc
sub
pop
fstp
lahf
pop
add
ins
or
aaa
mov
inc
push
adc
test
mov
push
jmp
inc
push
ins
mov
cmp
lods
push
xchg
pop
cmp
jp
hlt
clc
stc
dec
xor
aad
aam
int3
cld
and
xchg
mov
xchg
ror
xchg
pop
out
cdq
out
mov
dec
inc
xor
in
and
(bad)
ins
stos
push
(bad)
pop
jae
call
cmps
adc
jmp
sub
ret
dec
es
lods
sbb
sbb
mov
enter
add
enter
and
cmp
mov
stos
xchg
mov
es
or
gs
(bad)
iret
pop
nop
pop
or
repz
stos
mov
push
or
enter
iret
jle
sti
lahf
add
hlt
leave
or
int3
jge
and
mov
in
lock
sbb
cmp
pop
pop
mov
jge
push
jo
mov
mov
test
sbb
stos
jecxz
dec
dec
push
and
leave
scas
daa
xor
mov
loopne
int3
div
xchg
popf
icebp
jp
sub
call
ret
aad
push
pop
lahf
xchg
pop
lods
aaa
retf
enter
inc
mov
and
mov
stos
fisub
xor
loopne
ja
mov
cli
sub
sub
mov
pop
mul
in
dec
cmp
adc
cmp
adc
mov
cld
pop
retf
fdiv
lock
inc
pop
and
rcl
cmps
sbb
inc
and
dec
mov
jmp
mov
ss
xchg
shr
sbb
lock
out
scas
cmp
repnz
lds
jae
shr
push
test
ror
inc
ficomp
arpl
xchg
fs
lods
int3
sbb
fsub
push
cwde
(bad)
jmp
jno
in
mov
push
jae
dec
inc
cmp
sub
or
cli
sbb
fisubr
les
lds
and
and
fmul
loop
aad
icebp
ret
inc
sub
jbe
lds
and
xor
and
and
mov
scas
movs
shr
in
ins
sahf
xchg
mov
hlt
retf
xchg
int
mov
sbb
xchg
in
movs
es
add
add
test
fsubrp
and
cmc
cmp
leave
fmul
dec
cmp
ret
xchg
jle
aam
adc
pop
gs
and
lahf
ret
sub
sti
out
rol
nop
call
add
scas
sahf
aas
sbb
inc
xchg
popf
mov
lea
or
xchg
push
cmp
xchg
inc
dec
xchg
inc
dec
pusha
cmps
sbb
pushf
(bad)
jle
push
rcl
cs
cs
jae
mov
enter
stos
dec
mov
shr
and
retf
call
out
inc
out
popa
jp
into
bound
add
ficomp
add
ja
adc
sbb
test
pop
cmps
mov
push
and
mov
xchg
int
lea
jns
mov
test
les
adc
(bad)
neg
sub
mov
in
ds
mov
inc
push
sbb
popf
repnz
dec
xchg
push
nop
scas
pop
sub
rdpmc
mov
cmc
push
addr16
xor
das
(bad)
ins
test
ins
jmp
add
ud1
jne
inc
dec
sub
ret
stos
push
daa
push
push
faddp
dec
mov
cmp
mov
mov
sbb
cmp
or
je
rcl
lds
cmp
scas
dec
cmc
nop
jg
sahf
or
or
mov
push
mov
push
xor
mov
jle
fldenv
pop
loop
int
(bad)
cmp
xor
es
aaa
pushf
xor
loopne
push
xchg
les
in
imul
sar
jg
arpl
fild
jo
outs
sahf
arpl
test
ins
mov
mov
out
fadd
jle
xchg
out
call
stos
pslld
sub
mov
push
loopne
daa
gs
cmps
and
lds
cdq
lods
loop
cmp
and
dec
test
cmc
push
and
shr
or
sub
mov
enter
add
test
bts
push
adc
sar
cmp
sub
cli
push
or
outs
mov
fsubr
cld
div
inc
pop
dec
das
stos
adc
mov
out
jge
sbb
and
cmps
push
xor
out
call
xor
aam
nop
push
mov
data16
adc
pop
push
xor
xchg
mov
and
(bad)
push
les
je
cmp
sbb
mov
or
add
(bad)
ror
mov
aam
inc
out
pop
mov
out
xor
jmp
adc
fcom
adc
and
mov
or
rol
imul
xor
in
ficomp
imul
lods
push
and
or
jae
jmp
cld
pop
jmp
inc
push
enter
ins
in
push
adc
test
imul
aaa
adc
mov
(bad)
popa
(bad)
push
sub
test
mov
stos
xor
xor
mov
(bad)
xor
jo
lahf
mov
inc
jecxz
stos
mov
pusha
imul
dec
cwde
fmul
leave
data16
aad
adc
mov
and
test
call
test
cmp
jae
fbstp
retf
sbb
adc
fnstenv
dec
mov
int
fs
cmp
push
mov
in
and
dec
xor
sbb
sbb
dec
xchg
(bad)
dec
enter
mov
pop
cld
cmp
cmc
mov
push
sub
stc
loop
push
mov
clc
push
ja
inc
sbb
scas
shl
ficomp
fwait
and
retf
or
leave
add
sbb
imul
jmp
mov
aam
retf
and
or
mov
shl
xchg
inc
aas
inc
mov
jo
xor
cmp
sub
in
imul
out
ror
xchg
jbe
pop
lahf
add
cmps
sbb
arpl
and
jbe
and
sbb
fstp
cmp
std
lock
mov
adc
pop
dec
sar
xchg
mov
jmp
cli
jge
xchg
sar
enter
inc
cmp
pop
jb
adc
(bad)
clc
hlt
jg
into
loope
fisubr
in
jp
push
int3
lds
test
(bad)
movs
in
dec
pop
mov
nop
cmc
and
loop
out
retf
dec
dec
cmp
test
add
mov
jnp
push
stos
addr16
dec
adc
sahf
cdq
cld
or
stos
mov
push
inc
dec
jnp
aaa
and
sahf
inc
(bad)
cld
rcr
mov
loopne
mov
push
jmp
cmp
jge
or
adc
into
test
pop
out
ins
pop
adc
xor
and
add
and
fimul
nop
call
or
outs
out
cmp
movs
pushf
fdivr
(bad)
xchg
xor
shl
mov
adc
ins
xor
(bad)
xchg
jnp
or
inc
call
cs
xchg
fwait
rcr
das
xor
in
xchg
mov
das
sbb
addr16
push
repnz
mov
mov
test
in
xchg
je
lods
repz
and
call
mov
imul
xor
sbb
inc
popf
cld
imul
loopne
gs
imul
ret
ja
lods
in
test
add
mov
push
movs
fisttp
mul
cmp
pop
outs
int3
sbb
mov
push
in
rol
or
xor
hlt
cli
and
dec
jmp
(bad)
dec
es
aaa
(bad)
mov
movs
jecxz
dec
test
ja
jg
cld
sbb
inc
sar
neg
add
push
push
push
sbb
mov
loope
sbb
push
call
test
cmp
adc
(bad)
cdq
push
popf
and
ds
or
les
add
inc
cmp
leave
or
pop
pop
mov
dec
xchg
addr16
(bad)
jae
jns
cmp
add
mov
jbe
inc
imul
inc
fild
daa
es
add
(bad)
test
cmp
sub
sti
xor
sub
stc
inc
cmps
pop
pop
and
push
sub
push
push
jb
xchg
add
fild
push
loop
popa
dec
inc
push
push
dec
mov
ins
xchg
lods
xor
xchg
mov
jnp
jnp
pushf
(bad)
sub
fisttp
stc
pop
cdq
jecxz
or
adc
and
sub
sub
std
scas
inc
mov
loopne
jae
cli
std
scas
xchg
jg
adc
cmps
and
and
lahf
int
mul
repnz
mov
push
sahf
out
xor
(bad)
push
retf
dec
jns
sub
retf
fucomi
add
cmc
mov
call
adc
push
xor
sub
sub
mov
push
jge
sbb
bound
sub
and
gs
push
push
mov
dec
retf
pop
jmp
aas
lds
outs
lds
dec
fstp
inc
cmp
in
sub
dec
cwde
mov
jmp
mov
(bad)
int
jbe
enter
retf
push
mov
mov
aaa
imul
mov
inc
loop
pop
jge
fs
into
lods
cmp
mov
arpl
mov
rcl
fadd
in
je
jae
test
xchg
outs
outs
adc
fist
cmps
sti
shr
jp
cs
inc
dec
das
retf
mov
xchg
out
cmp
or
test
mov
cwde
jnp
mov
sub
pushf
cld
push
mov
cmp
loopne
mov
or
ja
xor
retf
aaa
xor
in
mov
sahf
push
add
pusha
iret
mov
push
sub
jo
adc
sub
fld
mov
retf
cmp
or
or
sti
mov
jg
std
clc
xchg
or
shl
or
inc
adc
aad
arpl
and
or
icebp
sbb
jno
nop
push
sbb
mov
fld
dec
pop
add
ficom
aaa
ret
icebp
xchg
mov
nop
(bad)
push
jb
sub
xchg
or
ret
mov
jecxz
inc
cmps
xchg
std
mov
pop
nop
inc
popa
add
cmp
outs
movs
xlat
lds
jg
xchg
ins
fild
ret
xchg
pop
repnz
fild
mov
sti
xor
aaa
mov
int
lahf
push
(bad)
int3
std
sahf
fisttp
pop
sbb
in
push
cmp
out
cdq
xchg
push
mov
lea
sub
add
jno
add
sbb
cmp
out
fdivr
xor
mov
fcomp
stos
test
dec
jne
hlt
mov
(bad)
mov
or
xor
jge
(bad)
div
(bad)
cld
div
test
hlt
mov
test
sahf
jge
sub
stc
cmc
sub
mov
or
cld
adc
fiadd
repz
push
data16
(bad)
sbb
nop
or
sub
sub
sub
sub
mov
(bad)
or
ja
pop
push
mov
ds
mov
mov
mov
push
popfw
stos
jl
push
xor
test
xchg
push
or
shr
das
jmp
leave
pslld
repz
push
psrlq
ror
aam
cdq
and
cli
push
inc
pushf
xchg
scas
add
jg
mov
fbld
je
mov
add
jmp
repnz
pop
(bad)
call
les
js
ficomp
sub
into
dec
repz
sub
xor
jb
sub
mov
add
aas
jecxz
lods
fstp
jmp
fild
ficomp
sbb
add
push
fist
cmp
sbb
fwait
mov
xor
mov
adc
movs
jle
jo
sbb
hlt
in
push
xchg
mov
pusha
int
xchg
stc
fcom
and
mov
call
xchg
into
jne
leave
cmps
jmp
fld
pop
add
stos
cld
lods
adc
cmp
dec
and
inc
mov
(bad)
hlt
push
std
in
inc
pop
leave
xchg
stos
mov
cmps
and
sbb
mov
and
ss
popf
popf
mov
or
clc
mov
mov
push
and
jmp
push
inc
jmp
mov
jne
rcr
push
loop
adc
es
jp
je
cdq
jo
cmp
int
pop
in
mov
push
imul
or
jno
das
imul
or
mov
std
add
xchg
imul
xchg
cmp
(bad)
test
jg
cs
jmp
sbb
xor
(bad)
xchg
pop
test
inc
add
test
cli
sbb
xchg
outs
ja
cld
fldcw
in
xchg
cmp
jae
in
scas
dec
out
pop
in
loopne
cdq
call
or
xor
je
jmp
and
(bad)
mov
adc
xor
or
push
cmps
(bad)
aas
dec
pushf
mov
cmp
mov
call
adc
dec
pusha
data16
sub
xchg
sbb
mov
mov
adc
or
fsubr
mov
mov
sar
mov
fcomp
test
jl
xchg
dec
fsub
pop
in
jae
and
rol
loop
push
outs
pop
(bad)
jns
movs
jmp
inc
cld
lea
mov
pop
sbb
xchg
inc
add
(bad)
repnz
mov
ror
mov
mov
or
or
fistp
lahf
jg
mov
sbb
mov
cs
xchg
add
js
lods
ds
daa
xchg
mov
rcr
pop
div
lods
cmp
xchg
and
loop
das
enter
inc
pop
push
xchg
(bad)
in
xor
jl
imul
pop
sar
mov
or
dec
rcr
adc
or
push
fadd
arpl
scas
add
jmp
pop
sbb
adc
out
add
stos
push
daa
push
mov
leave
test
cmp
and
je
mov
gs
loope
stos
xchg
push
xchg
jge
xchg
mov
inc
in
adc
fisub
int3
add
shl
test
cwde
retf
dec
mov
out
dec
pop
xchg
int3
mov
outs
mov
inc
imul
ins
mov
es
add
adc
scas
mov
mov
hlt
fs
out
stos
jno
jns
outs
mov
sbb
mov
inc
call
cmp
pop
and
mov
xor
pop
mov
push
mov
or
cmp
ds
fiadd
(bad)
cmp
mov
fistp
cmps
sbb
aas
shl
jp
dec
mov
leave
arpl
fidivr
and
mov
dec
mov
mov
xchg
call
mov
mov
and
cli
jmp
push
clc
pushf
xchg
xchg
lds
and
sbb
xor
in
mov
loop
sbb
stc
xchg
push
pop
icebp
jns
gs
sar
iret
push
and
into
(bad)
push
jmp
add
xor
inc
push
mov
lea
popa
sub
dec
sbb
jne
sbb
inc
in
and
repnz
nop
ins
dec
mov
in
mov
mov
mov
test
sti
aaa
jmp
lahf
retf
xchg
cmp
xor
jecxz
(bad)
mov
jmp
test
cdq
xchg
xchg
jg
cmps
int
dec
test
jmp
int
mov
movs
shl
or
sub
mov
(bad)
mov
loopne
dec
mov
loopne
std
jo
clc
or
rol
pop
and
out
mov
inc
dec
ror
je
push
arpl
xor
cmps
(bad)
push
sti
push
jbe
cmp
fst
ror
fwait
call
sbb
sub
push
jb
cmp
adc
sti
pop
dec
mov
mov
bound
adc
mov
jle
add
jmp
push
scas
and
rcl
imul
out
sbb
sbb
sbb
pop
sub
mov
cmps
or
add
or
lds
or
adc
jmp
iret
(bad)
sub
lods
add
sbb
mov
outs
push
scas
rol
mov
adc
mov
rdmsr
mov
aam
scas
cs
xchg
sbb
jl
js
mov
pop
cmp
aaa
stc
pushf
imul
mov
xchg
cmp
mov
aas
cld
leave
sbb
(bad)
sti
sbb
loopne
dec
cmp
aaa
cmp
mov
inc
call
(bad)
mov
xchg
jg
imul
nop
mov
imul
cmps
stos
xor
or
xor
and
inc
xor
cwde
jl
and
lods
pop
mov
mov
fwait
std
ss
aas
xlat
pop
pop
add
(bad)
mov
imul
and
ins
movs
dec
les
dec
arpl
jle
add
fidivr
ficom
cs
rcl
int3
adc
push
bound
lods
push
pushf
enter
sbb
inc
mov
(bad)
cmp
sub
rcr
and
stc
mov
inc
mov
mov
mov
data16
(bad)
test
(bad)
out
popa
lea
ins
sub
call
gs
ins
add
jne
cwde
pop
stos
inc
dec
into
dec
xchg
push
js
pushf
jae
imul
ret
ja
cli
jg
fcomp
push
dec
mov
adc
lahf
fs
jae
adc
mov
call
inc
mov
dec
push
mov
add
sub
sbb
pop
sub
mov
cmp
mov
push
in
and
outs
sbb
push
pop
stos
xor
jnp
adc
lods
add
dec
mov
dec
adc
sbb
movs
scas
sti
rol
shl
push
repz
movs
retf
movs
cmp
lods
push
sbb
push
in
sbb
in
imul
lods
lea
loopne
dec
out
mov
mov
ret
mov
pop
sub
nop
faddp
jnp
cmps
jnp
call
add
add
push
push
add
xor
cdq
je
pop
jp
int
sbb
inc
pextrw
adc
inc
daa
mov
lods
pop
jmp
dec
in
xchg
xchg
and
push
mov
mov
arpl
add
xor
(bad)
cmps
push
movs
movs
jmp
mov
out
jb
int3
out
or
mov
aas
xor
dec
cmc
test
cs
mov
inc
lds
bound
sub
jmp
fadd
mov
cmp
outs
mov
dec
lods
add
ret
es
jle
ret
lods
jbe
ds
mov
call
sub
ins
cmp
ins
xchg
sub
test
jge
push
fcomp
jmp
push
dec
repz
(bad)
icebp
and
imul
xor
jno
outs
aam
enter
jmp
mov
mov
out
scas
pop
pop
sub
fcom
or
lods
fdivr
mov
fdiv
pop
xlat
mov
mov
mov
pop
pop
clc
push
adc
push
ret
(bad)
mov
dec
aaa
mov
arpl
stos
js
inc
dec
adc
dec
div
inc
xchg
(bad)
xlat
cmp
jo
cmp
sbb
dec
jo
dec
test
pop
test
xchg
test
movs
test
(bad)
clc
fild
and
or
mov
cmp
(bad)
fxch
cmp
add
sub
xchg
test
lds
test
cmp
sbb
cmp
ret
push
cmps
jne
xor
movs
repz
mov
sbb
out
cmp
sub
dec
into
int
mov
ja
pop
push
nop
adc
dec
dec
dec
je
xchg
and
mov
bound
out
movs
mov
cdq
das
daa
jo
inc
mov
ins
mov
mov
cmp
mov
mov
mov
xor
mov
add
(bad)
jne
out
arpl
shr
dec
add
mov
pop
cmp
and
sbb
jge
jne
int3
fbld
dec
ret
rcr
pusha
ror
sbb
imul
jmp
out
and
jle
shr
(bad)
fadd
jecxz
adc
lds
push
test
cmp
jl
jns
shr
ins
fcmovnu
hlt
dec
xor
add
cmp
dec
xor
es
stos
xor
fcmovne
or
mov
jp
sub
jmp
outs
fbld
imul
ins
sub
xlat
adc
jl
stc
mov
test
std
(bad)
ret
pop
arpl
nop
add
sbb
jp
xchg
cmp
or
int
fsubrp
xchg
push
inc
cmps
mov
(bad)
lahf
shl
add
sbb
cmp
jp
lahf
pop
stc
outs
mov
mov
mov
xchg
mov
add
dec
push
mov
push
mov
jnp
imul
sbb
enter
mov
repz
jecxz
adc
add
ja
icebp
retf
push
(bad)
(bad)
ffree
xor
mov
(bad)
push
scas
dec
pusha
scas
cmp
jbe
dec
xor
dec
xchg
call
dec
mov
xor
fisub
cwde
imul
test
fadd
rol
bound
into
aas
imul
enter
xor
lods
addr16
and
dec
std
bound
fdivr
sub
fistp
btc
mov
jbe
inc
push
push
imul
fs
or
iret
repz
push
or
ins
out
push
dec
xor
mov
sub
mov
pop
add
mov
ds
cdq
mov
jb
pop
rcr
(bad)
inc
les
xchg
dec
cmp
or
clc
bnd
sub
repnz
xor
inc
xor
adc
aad
in
fucomip
pop
xor
pushf
fadd
xchg
sub
in
ror
je
bnd
cli
sbb
pop
sub
sbb
adc
aam
(bad)
sub
in
or
(bad)
mov
fsub
sahf
and
fadd
mov
sub
aad
test
fs
les
cmp
icebp
push
(bad)
push
sub
sub
sbb
pop
push
ret
mov
rcl
push
lods
or
test
pop
ja
jb
sti
fstp
popf
cmp
and
xor
xchg
sub
gs
mov
dec
mov
cmc
ds
repz
and
xor
mov
xchg
test
jns
and
mov
mov
dec
clc
retf
xchg
js
or
scas
mov
mov
jge
pop
stos
aad
repz
push
rol
sbb
cli
fs
cmp
mov
and
jmp
sti
ins
outs
sbb
jns
jmp
sbb
or
pop
icebp
xchg
mov
fs
lock
pop
add
call
push
jecxz
add
xchg
ins
xlat
fstp
fist
sub
or
and
pop
sub
les
imul
adc
jbe
push
cli
out
and
and
out
or
jecxz
jg
cmp
push
rol
xchg
xchg
ret
push
adc
add
jle
push
inc
dec
pusha
fnsave
cmp
js
sti
add
jnp
mov
xchg
lahf
rcl
adc
inc
sub
sub
or
mov
out
add
addr16
fcmovbe
sti
pop
jl
adc
sbb
add
sti
push
mov
pop
add
jg
or
leave
xor
nop
xchg
movs
xor
sub
push
mov
ja
and
sbb
int3
push
jo
hlt
rol
mov
pop
xor
mov
add
imul
mov
add
and
cmp
icebp
sub
pop
(bad)
ss
outs
js
(bad)
dec
into
add
in
sub
push
xchg
lahf
cmps
sub
mov
sar
fcmovu
out
adc
outs
adc
cmp
or
fdiv
loope
and
lods
xor
xchg
sub
add
pop
pop
xchg
bound
pop
fcmovb
mov
mov
or
fldenv
mov
xchg
or
push
push
lock
aad
outs
cld
mov
mov
out
ficom
imul
adc
pushf
inc
add
repz
out
stos
ret
imul
stos
cld
xor
hlt
jne
not
fld
push
lods
arpl
add
(bad)
retf
pop
mov
dec
sti
or
or
push
fwait
xchg
cwde
outs
imul
imul
sbb
fsubr
mov
or
stc
cmp
xor
mov
add
xchg
out
mov
dec
dec
cmps
adc
dec
loop
call
mov
outs
rol
in
push
and
mov
and
adc
stc
dec
xor
sub
call
fst
cmp
xchg
inc
imul
sbb
sahf
add
test
inc
pop
movs
js
imul
ins
dec
sub
ss
jno
adc
dec
fs
mov
retf
sar
out
not
dec
in
lock
inc
xor
mov
test
xchg
xchg
jle
call
push
adc
imul
sub
push
cmc
sahf
sub
je
in
sub
pop
repnz
add
mov
(bad)
enter
jle
inc
pop
(bad)
dec
ficom
fnstenv
jp
fs
adc
fdivr
aas
or
jb
push
add
(bad)
out
clc
xor
movq
repz
das
xchg
hlt
push
xor
dec
std
fldenv
sub
add
dec
or
pop
xor
out
lahf
push
xchg
nop
sbb
int3
into
lods
adc
(bad)
call
test
cwde
jno
add
mov
out
xor
repz
xchg
cmp
jae
sti
cmp
mov
fst
dec
sbb
sbb
(bad)
loop
sub
rcr
ss
je
mov
hlt
jmp
out
or
jecxz
int3
push
stos
xor
sbb
add
ficom
pop
in
iret
aaa
outs
pop
not
icebp
je
sahf
add
sbb
ja
mov
scas
push
jb
das
fdivr
adc
xchg
inc
shr
sar
push
dec
cmp
mov
rcl
stos
add
pop
sub
shr
jle
(bad)
push
adc
jp
or
outs
push
jmp
cmp
stos
inc
(bad)
mov
adc
add
add
in
sbb
int3
sbb
into
push
cmps
mov
mov
lds
jo
jnp
or
cmc
xchg
sti
jmp
call
jg
lea
iret
popf
fsubr
inc
fidiv
pushf
iret
push
mov
push
and
into
cmp
dec
mov
dec
sahf
xchg
int
aaa
and
test
bound
xlat
sub
dec
add
repz
dec
xchg
mov
fdivr
nop
and
xor
inc
xchg
stc
addr16
cmp
cmp
jecxz
jns
mov
adc
lahf
les
pop
dec
xchg
jmp
pop
repnz
repnz
or
call
inc
iret
cmc
adc
pop
push
adc
xchg
mov
ss
aaa
jmp
hlt
cli
cld
mov
aas
cmp
xchg
mov
mov
cmps
gs
ficom
fidiv
xlat
mov
(bad)
out
adc
push
xor
dec
aam
pusha
cmp
test
pop
shl
pop
ficom
lds
mov
push
pop
in
add
movs
ficom
out
xor
in
ds
inc
push
fistp
mov
mov
ja
push
loop
adc
fucomi
fyl2x
ret
cmps
rol
and
xchg
mov
inc
ja
sbb
xor
out
mov
fist
mov
adc
mov
test
ficomp
in
push
mov
(bad)
out
mov
mov
pusha
test
jae
ret
pushf
dec
(bad)
fwait
dec
inc
xor
jno
dec
ss
out
movs
mov
daa
lods
test
pop
pop
mov
pop
mov
jns
ror
pop
test
scas
test
xchg
in
les
cmps
mov
mov
cmp
cmp
in
fs
pop
dec
mov
and
addr16
imul
pop
sub
ret
stc
jb
inc
in
aaa
push
ins
js
dec
not
jae
daa
push
add
in
jg
pop
push
cmps
or
loope
(bad)
sbb
jl
lods
mov
enter
cwde
and
(bad)
retf
push
repz
loop
sbb
mov
add
xchg
pop
mov
jb
mov
push
adc
sub
imul
pop
ins
cdq
inc
pusha
jl
mov
js
mov
stos
(bad)
call
imul
sub
fdivr
jp
add
js
cmps
mov
sub
jmp
xchg
pusha
pushf
mov
mov
jne
stc
stos
popa
inc
retf
jbe
xor
cld
or
iret
dec
or
pop
sbb
mov
scas
test
imul
xchg
ret
xor
pushf
pushf
or
mov
fiadd
mov
pop
mov
fsub
mov
mov
jae
sbb
mov
sbb
rcr
and
dec
cmp
xchg
pop
add
loopne
sub
retf
adc
rol
loope
lds
fisttp
dec
sbb
cmp
mov
ror
add
leave
ss
xor
sub
lods
and
push
cwde
lock
call
fwait
mov
adc
mov
push
cs
or
push
pusha
xchg
lods
sbb
aam
inc
xor
cmp
inc
inc
sbb
inc
fiadd
loope
or
sub
call
mov
icebp
push
jmp
retf
retf
pusha
fs
push
jae
enter
jbe
push
iret
jne
dec
mov
sub
mov
or
cmps
jmp
out
xchg
cmp
shl
and
xlat
mov
or
nop
xchg
sub
mov
jbe
fisttp
jge
mov
test
aaa
rcl
pop
jbe
pushf
test
cwde
mov
sar
xchg
iret
add
scas
call
cmc
mov
mov
adc
fdiv
icebp
adc
xchg
sbb
loop
and
mov
lea
test
xchg
inc
jnp
mov
(bad)
xor
mov
push
xor
popa
fdivrp
stos
enter
pop
aad
mov
mov
fcom
dec
xchg
mov
repnz
mov
hlt
sbb
leave
push
ins
adc
cmp
scas
ret
xlat
lahf
xchg
movs
cli
in
loop
cmp
mov
cld
add
aad
sbb
dec
xor
cld
dec
retf
inc
dec
clc
sbb
xchg
fmul
xchg
icebp
lods
mov
dec
sbb
cmp
mov
sets
loopne
out
adc
mov
cmp
jne
cdq
mov
pop
pop
pop
fwait
xor
pop
cdq
retf
cld
shl
mov
adc
repz
cmc
adc
aas
ficom
cmps
out
retf
adc
repnz
adc
(bad)
sub
add
add
mov
pushf
stos
popa
mov
lock
cmp
pop
das
into
cmps
or
mov
stc
xor
(bad)
hlt
in
dec
in
lds
shr
lods
cmp
cmps
test
lods
cdq
sbb
dec
cmc
test
mov
ja
jne
mov
inc
add
xchg
aad
or
out
nop
push
xlat
pop
mov
mov
mov
sub
sbb
outs
cmps
pushf
aad
jle
cmps
pop
fst
call
scas
mov
xchg
enter
leave
imul
cld
inc
jg
pop
sub
dec
cld
push
call
xchg
mov
or
rcl
cld
cld
jg
into
mov
imul
xchg
xor
or
jecxz
jo
mov
jp
mov
inc
cwde
inc
test
inc
pop
clc
lahf
pop
call
div
cmp
add
repnz
popf
add
movs
inc
sub
cmp
pop
mov
iret
je
inc
mov
cmp
call
popa
sbb
lock
das
sub
div
xchg
xor
loop
mov
sub
jns
jne
xchg
shl
cmp
mov
dec
hlt
adc
sbb
lock
xor
repnz
sbb
(bad)
cmp
xor
(bad)
lock
aaa
jo
sbb
xlat
in
lock
cmp
rcl
or
push
jb
outs
inc
(bad)
mov
cmps
pop
hlt
retf
nop
popa
sub
pop
dec
xor
inc
popa
sbb
bound
and
imul
outs
cmp
mov
imul
xchg
stc
xlat
stos
ins
mov
jb
and
call
js
cli
cmp
mov
lock
pop
and
addr16
xchg
add
mov
out
push
cs
pop
(bad)
or
mov
fsub
fcmovnu
inc
ins
fs
mov
in
jg
pusha
add
mov
cmp
xchg
jb
fucomp
cwde
xchg
popa
popa
push
push
lahf
aaa
adc
jno
loop
push
cli
leave
test
ins
out
ss
xor
jne
mov
lods
dec
in
lahf
lock
ins
das
sbb
adc
xchg
popf
lock
adc
pop
sub
push
or
sub
imul
jno
mov
mov
in
outs
jns
gs
and
(bad)
clc
push
popf
ja
and
fcomp
outs
mov
and
pop
fst
jb
xor
or
jmp
cwde
cmp
lds
push
inc
and
into
fild
cmps
ins
fsub
mov
imul
dec
js
arpl
ror
cmp
mov
or
pop
dec
pop
jmp
push
sbb
and
pop
inc
adc
es
ins
frstor
mov
and
stc
and
xor
pop
mov
pop
or
mov
ins
test
sbb
imul
fmulp
data16
dec
inc
rcr
xchg
jge
or
popf
pop
dec
mov
addr16
or
dec
std
and
inc
cdq
xchg
cmc
or
lods
sbb
cs
pushf
into
push
mov
push
retf
xor
sar
xlat
out
test
call
and
mov
mov
mov
cmps
jae
imul
inc
add
inc
stc
pushf
leave
push
daa
loopne
mov
sub
adc
lods
cmp
mov
cmp
mov
shr
retf
mov
mov
dec
lock
adc
retf
inc
sub
aas
adc
std
jae
enter
push
and
retf
leave
pusha
mov
shr
cdq
repnz
xchg
push
inc
cli
bound
mov
and
es
dec
retf
cwde
test
xor
or
push
jmp
sub
ret
stc
push
push
sbb
jo
dec
out
popf
mov
push
int
das
loope
inc
es
jae
push
sti
or
or
push
in
cli
(bad)
stc
sub
sar
rcr
cmc
inc
adc
add
fcmovb
lahf
test
js
pop
cmps
mov
mov
xor
push
mov
cli
lods
mov
and
dec
(bad)
retf
mov
pushf
(bad)
test
or
dec
cli
sub
dec
pop
jl
(bad)
mov
lea
jecxz
aam
push
inc
xor
adc
in
push
clc
in
(bad)
fstp
adc
mov
nop
retf
and
js
mov
pop
cmc
push
fidivr
inc
ss
je
das
fistp
call
dec
loopne
(bad)
cmp
pushf
fidiv
push
xchg
jge
cwde
daa
pop
pop
pusha
rol
sbb
icebp
pop
loope
fprem
pop
pop
ins
sbb
cdq
clc
sub
and
in
dec
dec
jnp
leave
fst
movs
neg
inc
jbe
inc
je
push
adc
sbb
movs
pop
fmul
popf
or
add
dec
cmps
mov
lods
and
scas
bound
xchg
mov
mov
sahf
repz
out
iret
(bad)
pop
adc
test
jecxz
jmp
dec
mov
dec
adc
dec
xchg
dec
sbb
or
xchg
rol
and
xor
pop
dec
mov
adc
in
sbb
jnp
fsub
pop
cmp
(bad)
enter
ins
je
mov
mov
jb
sub
or
pop
(bad)
scas
and
sbb
lods
shl
sbb
outs
xchg
xor
daa
scas
push
xchg
shl
add
mov
inc
or
cs
(bad)
xchg
test
push
sar
(bad)
hlt
das
dec
ret
in
and
pop
pop
movs
mov
clc
je
(bad)
iret
pop
adc
repnz
sbb
icebp
outs
std
pushf
sub
or
push
js
adc
(bad)
leave
std
loope
sahf
jnp
jg
sub
lock
test
aad
and
stc
lods
repnz
mov
jmp
test
aad
inc
js
es
add
cs
dec
mov
xor
nop
test
out
mov
aas
xor
loope
jns
add
jo
xchg
or
fwait
mov
das
nop
imul
sub
mov
mov
ror
jp
inc
das
fs
fistp
xchg
jle
push
sub
bnd
pop
dec
int3
xor
xchg
mov
inc
mov
cmp
js
mov
push
sahf
mov
in
sti
shl
xchg
push
loope
lock
mov
fwait
scas
jp
call
pusha
cli
cli
pop
or
(bad)
xor
icebp
jle
in
cli
pusha
add
enter
push
(bad)
(bad)
fwait
jl
add
cmp
jle
mov
mov
add
iret
ins
cmp
sub
or
(bad)
push
jle
adc
push
rol
aaa
sub
push
push
or
fsub
addr16
(bad)
push
jge
leave
mov
arpl
and
or
sub
mov
shld
mov
and
mov
pop
sub
jno
aaa
in
inc
push
sbb
push
loopne
enter
outs
sbb
movs
in
mov
sub
sti
mov
jne
into
cmp
ins
sbb
sbb
mov
sbb
jecxz
inc
mov
adc
ja
push
pop
loop
push
int
popf
fsub
or
or
out
addr16
test
fsubr
jmp
sub
popa
(bad)
shr
mov
les
ins
dec
sbb
ret
pusha
lahf
mov
jmp
stos
xor
in
stos
je
mov
inc
xchg
clc
out
loop
and
dec
mov
mov
push
stos
sub
pop
aam
pushf
repz
mov
cwde
jmp
test
fsubr
push
or
sub
aam
xchg
test
test
call
lods
sbb
cmp
popf
sub
lods
cs
xor
xor
test
test
fdiv
fisttp
cli
not
mov
push
adc
popf
arpl
mov
sbb
xor
hlt
jmp
ret
jmp
mov
into
push
out
jb
fmul
mov
jnp
outs
pop
adc
cmps
jg
sub
adc
rcl
pop
dec
xchg
push
ja
inc
leave
pop
xor
add
ss
or
sbb
sbb
jbe
sub
es
stos
mov
inc
jmp
inc
inc
push
pop
idiv
mov
mov
pop
aaa
pop
mov
jb
outs
adc
int3
(bad)
sbb
fs
jg
(bad)
ss
gs
xchg
push
cmp
sbb
rcl
aad
dec
leave
(bad)
into
cmc
loope
ror
fs
mov
jb
pop
stos
pop
cmp
js
adc
inc
arpl
push
fs
mov
(bad)
dec
into
cmp
pop
sahf
sbb
sti
sub
jecxz
movs
call
adc
out
adc
xor
jne
mov
fldenv
jecxz
rol
cs
jno
jmp
sub
jo
ds
adc
cdq
mov
cmc
mov
sub
jle
jg
ss
call
push
fmul
sahf
xor
icebp
push
js
(bad)
xor
jg
in
sub
outs
push
lock
int3
fild
or
xchg
(bad)
sbb
inc
in
mov
in
imul
jae
and
(bad)
retf
call
sub
or
inc
fs
or
adc
mov
cmc
sbb
adc
sub
or
pop
dec
es
rol
inc
pop
scas
sbb
xchg
ror
scas
inc
(bad)
daa
and
sti
jecxz
dec
jl
or
in
jp
lock
test
dec
dec
xchg
xlat
cmc
imul
and
or
ror
test
inc
pop
inc
xchg
sahf
mov
inc
jmp
dec
sub
add
pop
mov
sub
adc
pushf
mov
add
retf
push
adc
(bad)
adc
and
fwait
lock
fwait
pop
cmp
les
iret
outs
mov
pop
hlt
xlat
jecxz
retf
pop
hlt
or
cwde
dec
cmp
scas
test
xchg
aaa
cdq
pop
xchg
and
adc
shl
jbe
jmp
mov
sbb
icebp
leave
and
xchg
inc
xchg
mov
pop
loopne
(bad)
sbb
sub
jno
adc
dec
es
push
or
jge
xchg
cmp
push
cs
mov
in
sti
inc
xchg
add
sbb
scas
lahf
shl
outs
jge
mov
into
push
add
scas
jmp
and
rcr
call
mov
movs
dec
dec
jl
inc
dec
sbb
pop
scas
(bad)
outs
fwait
push
or
mov
push
jbe
mov
dec
and
inc
ja
mov
ins
dec
adc
jg
mov
ficom
loop
cmps
adc
or
mov
add
and
mov
cdq
jg
cmp
scas
outs
shl
push
push
and
out
fs
outs
test
in
ins
push
mov
inc
adc
push
mov
shl
dec
adc
pusha
clc
stos
xchg
out
jno
es
call
dec
mov
repz
idiv
add
lds
xor
ins
jns
pop
and
test
mov
(bad)
mov
repz
pusha
and
inc
pop
and
sub
mov
xchg
out
and
cmp
test
les
arpl
dec
xlat
aam
shr
jmp
aas
inc
fadd
fistp
dec
and
push
mov
popa
adc
lahf
mov
rcl
cmp
imul
mov
ds
daa
fldenv
nop
adc
aad
dec
mov
ja
aam
sub
xor
add
aam
retf
repz
call
movs
pop
or
cmp
push
int3
scas
leave
aam
mov
xor
and
inc
shl
push
push
mov
fwait
cmp
or
cmps
cmps
sub
(bad)
rol
inc
outs
ret
lds
pop
fidiv
in
dec
(bad)
icebp
push
pop
hlt
mov
pop
sbb
sub
and
dec
dec
adc
add
sbb
and
ins
rcr
jl
mov
call
sub
pop
adc
jnp
iret
mov
fcmovb
sbb
push
ja
mov
inc
mov
and
sub
sub
outs
(bad)
into
and
cwde
dec
jle
inc
inc
xor
sbb
test
push
dec
gs
std
push
add
jg
scas
mov
scas
ret
in
sbb
mov
lock
imul
add
test
mov
mov
jge
add
sete
icebp
and
push
adc
cmp
je
leave
mov
xchg
and
stos
push
test
sti
mov
sti
fs
loopne
pop
mov
fild
lahf
inc
stos
inc
xchg
adc
fsqrt
pop
call
mov
cs
loopne
(bad)
jb
adc
leave
or
retf
das
mov
ja
xchg
test
(bad)
frstor
lods
push
clc
push
into
loopne
aaa
mov
jae
sbb
pushf
data16
mov
pop
sbb
or
mov
repz
call
jp
sbb
push
aam
ins
cli
mov
mov
mov
das
inc
mov
movs
mov
push
and
loope
ins
push
inc
inc
retf
dec
(bad)
pop
adc
or
(bad)
ja
les
mov
(bad)
adc
sbb
in
arpl
fstp
addr16
inc
retf
mov
sbb
xor
jnp
gs
call
cmp
frndint
sub
cmp
ins
xchg
mov
stc
inc
adc
das
sub
int3
stos
or
jecxz
call
rcr
jmp
and
mov
mov
cmp
xchg
inc
cmp
mov
test
adc
dec
(bad)
sub
es
jp
aaa
enter
add
loope
jno
adc
aam
push
jb
add
jmp
xor
shl
imul
lock
inc
fmul
bound
and
xor
pop
mov
add
stos
outs
loop
cmp
(bad)
loop
loop
sub
arpl
js
std
les
lea
outs
hlt
inc
sub
sub
outs
jnp
or
mov
leave
ins
pop
mov
aam
cmp
xchg
dec
pop
repz
imul
fisttp
sub
(bad)
cmps
dec
push
inc
inc
jp
popa
mov
fmul
inc
lods
ss
lods
fwait
push
retf
sub
sub
sub
jl
push
popf
sub
push
or
test
aaa
jle
aaa
aam
sbb
enter
fwait
es
aam
sbb
dec
push
or
fidivr
jnp
jae
fbld
imul
movs
jecxz
pop
mov
xchg
push
mov
adc
push
adc
repz
or
ret
sub
test
cmp
icebp
in
mov
hlt
dec
push
mov
sahf
fdivp
(bad)
(bad)
mov
xchg
sahf
je
push
push
xchg
or
mov
test
mov
xchg
fld
outs
mov
dec
inc
iret
add
jae
fisubr
aas
push
in
das
inc
in
jmp
outs
icebp
adc
jo
xor
int3
cmps
bound
mov
jmp
dec
out
and
pop
leave
gs
dec
pop
jmp
sub
push
mov
adc
in
ret
daa
shr
in
mov
xchg
add
push
popa
xor
push
xchg
dec
movs
dec
mov
push
add
in
xor
jne
sub
add
sub
data16
mov
xchg
inc
xor
stos
and
lock
mov
imul
imul
mov
mov
out
and
retf
nop
(bad)
in
or
mov
dec
xchg
out
pop
cli
aad
cmp
jmp
push
mov
gs
lahf
lods
iret
sbb
outs
pushf
jge
imul
jg
dec
adc
loope
jnp
mov
ret
xor
or
cmp
adc
mov
mov
mov
ins
sbb
cmp
leave
xor
bound
hlt
repnz
dec
push
mov
outs
loopne
out
adc
test
mov
push
imul
and
cs
adc
xchg
outs
js
iret
xchg
push
enter
mov
pop
fwait
data16
xor
sub
inc
movs
inc
xchg
xor
mov
nop
lods
call
adc
push
test
fadd
inc
es
movs
(bad)
sahf
test
sub
inc
mov
sahf
xchg
test
add
loope
xor
data16
ins
loope
into
sar
ret
adc
adc
add
in
pop
pop
jmp
enter
dec
ja
xlat
xor
xchg
fdiv
push
sti
jecxz
xchg
inc
mov
es
mov
out
push
cmp
jae
lahf
push
cdq
test
sbb
stos
adc
jmp
inc
aam
xor
pushf
push
or
xor
push
and
enter
shl
push
out
add
out
mov
pop
sub
inc
std
fcmovnu
push
jo
fst
lods
outs
cmps
fist
ss
cdq
cmp
not
clc
call
data16
nop
sbb
in
imul
or
and
cmp
push
mov
jge
sahf
pop
stos
mov
fsubr
clc
xchg
pop
adc
sahf
repnz
fs
dec
es
rcl
(bad)
test
push
jno
test
fidivr
fcomp
add
cmp
or
retf
dec
sbb
aam
cmp
cmps
aad
sar
adc
into
int3
jnp
cwde
jne
xor
inc
xor
or
push
jne
cdq
sti
pop
mov
std
push
dec
jne
loopne
add
xchg
ror
mul
out
jns
xchg
push
jo
or
pop
(bad)
(bad)
sbb
mov
xlat
mov
addr16
mov
pushf
pop
xor
mov
mov
test
(bad)
pushf
pop
mov
sbb
push
or
ret
mov
add
loop
in
aas
stos
mov
adc
dec
mov
inc
inc
sub
rol
jnp
in
neg
fadd
(bad)
ins
and
jmp
push
mov
inc
push
xchg
out
xchg
xchg
div
nop
loop
mul
sar
sub
test
lds
adc
lods
push
dec
cmp
xchg
or
rcr
inc
push
jne
dec
add
hlt
adc
shl
dec
add
add
sub
mov
add
fwait
xchg
add
cs
dec
ins
dec
cmp
js
scas
aad
sbb
stos
cmp
shl
(bad)
jmp
jo
dec
lea
xlat
jle
call
es
push
adc
ja
jno
lea
push
cmp
xchg
cs
inc
push
lods
test
(bad)
out
cmps
lods
mov
lock
inc
xchg
add
daa
mov
gs
mov
lods
aas
push
xchg
test
jns
xchg
fs
adc
fbstp
add
jno
fcomp
les
add
lods
and
xchg
loop
in
pop
sub
pop
jge
fs
cmps
out
out
xchg
pop
jecxz
push
jge
popa
adc
lods
daa
sub
retf
add
jbe
jb
imul
out
add
outs
(bad)
cmp
and
ins
fisttp
jle
adc
mov
add
ds
popa
mov
pop
mov
lods
fadd
or
lahf
mul
xchg
(bad)
mov
push
add
pop
test
daa
iret
or
and
cmps
cwde
data16
jns
sub
lods
repz
jecxz
call
std
or
shl
out
mov
pop
loope
call
add
call
leave
stos
lock
pop
lock
out
(bad)
adc
add
push
lds
pusha
add
aaa
fld
push
xchg
mov
jl
in
fisttp
test
dec
xchg
jb
fidivr
adc
loop
and
jge
cdq
test
mov
and
xor
popa
pop
cmp
(bad)
fdiv
cs
xchg
add
test
add
cmp
movs
mov
inc
(bad)
arpl
add
movs
cmp
sbb
jg
cmps
xor
cmp
test
mov
sbb
out
movs
loop
adc
test
jge
fimul
mov
(bad)
clc
sub
cmp
ins
jge
std
retf
addr16
lock
das
jns
es
jmp
add
lods
mov
cmps
mov
sub
xchg
rcr
inc
push
sbb
mov
and
fadd
mov
out
ss
inc
push
jo
movs
mov
dec
push
repnz
nop
fs
(bad)
ins
fwait
adc
aam
fst
xor
lods
data16
and
fdiv
or
nop
xor
push
aam
lods
adc
sub
ficomp
mov
popf
icebp
pop
mov
pop
jg
dec
cmp
fst
les
sbb
push
sub
sub
sbb
loopne
mov
pop
dec
push
mov
and
lds
jb
aas
jnp
push
mov
and
ins
jne
mov
sbb
loope
xchg
mov
mov
pop
movs
stos
fcom
in
jno
and
push
mov
pushf
cmp
jae
out
loope
pop
push
adc
xor
mov
adc
pop
outs
jne
ret
sub
loope
out
popa
dec
ror
sbb
aas
adc
test
enter
sbb
mov
jb
(bad)
pop
jp
and
cmp
enter
cld
data16
(bad)
mov
sbb
mov
mov
sbb
mov
popf
mov
and
dec
adc
mov
dec
xor
sar
cmp
lea
fs
or
(bad)
push
push
popa
xchg
dec
cs
scas
and
mov
clc
enter
mov
inc
jbe
xlat
inc
outs
test
in
xor
pusha
jnp
xchg
adc
jnp
cli
pop
mov
dec
pop
stos
cli
mov
(bad)
hlt
adc
xchg
aas
stc
mov
sbb
and
cmp
aas
cmp
mov
jg
pop
jo
retf
gs
ret
sub
push
sahf
call
int3
repz
jne
ins
cmp
push
pop
imul
push
and
add
xlat
dec
xor
aas
gs
mov
pop
add
jl
pop
push
stos
mov
xchg
cmp
in
dec
mov
adc
mov
mov
fadd
pop
clc
in
and
repz
mov
sub
adc
mul
sbb
fdivr
xchg
inc
repz
xchg
mov
pop
mov
stos
adc
pop
(bad)
in
xchg
stos
(bad)
pop
cld
xchg
push
sbb
iret
mov
shl
outs
jnp
jo
mov
mov
pop
cdq
scas
stc
retf
popf
pop
std
vpunpckldq
(bad)
cmp
mov
(bad)
pop
inc
(bad)
mov
dec
cmp
dec
mov
cmp
xchg
rcl
ins
or
sub
in
adc
bound
xchg
push
mov
aam
xor
retf
into
cmps
add
cmp
loope
xchg
ins
std
mov
fcomi
jmp
popa
out
inc
test
paddusw
pop
add
enter
in
push
add
js
jle
lods
xchg
sub
fidiv
inc
icebp
mov
addr16
dec
xor
pop
or
ja
test
call
inc
sub
into
jecxz
pop
test
dec
in
data16
lea
adc
xchg
scas
and
getsec
bound
imul
pop
mov
jle
loope
mov
mov
pop
jecxz
xchg
retf
xchg
mov
aas
push
fimul
fwait
xchg
hlt
std
aaa
or
xor
loopne
popf
shr
movs
cwde
clc
jecxz
popf
fsubr
out
lods
dec
dec
clc
leave
sbb
cld
push
xor
xor
sub
cdq
sti
adc
sti
mov
jnp
push
outs
stos
(bad)
popa
xchg
dec
test
jo
xchg
les
les
int
bound
stc
jae
neg
mov
jl
and
sub
call
arpl
pop
inc
push
lds
rol
push
imul
mov
xor
ja
mov
adc
push
hlt
mov
mov
std
push
push
gs
sbb
clc
pop
xor
scas
leave
sbb
jb
xchg
ror
pop
mov
jge
into
fcomp
scas
xchg
mov
adc
sbb
adc
xchg
out
and
mov
call
mov
mov
in
ja
push
out
add
sbb
arpl
daa
pushw
xchg
xor
(bad)
sar
ds
add
mov
(bad)
xor
mov
stc
push
jle
retf
cld
imul
pop
mov
dec
jae
ins
(bad)
enter
imul
jl
adc
cmc
or
xor
inc
sbb
sbb
inc
xor
popf
mov
fsub
addr16
jmp
dec
test
add
movs
je
jge
cmc
dec
shr
push
mov
add
sti
jecxz
xor
add
adc
jb
js
inc
mov
ja
or
xchg
bound
cld
lods
sub
xor
mov
inc
pop
mov
push
jne
fistp
mov
jbe
xor
stc
rcr
adc
loope
sub
xor
sub
sub
add
push
inc
movs
push
sar
loop
xchg
out
jp
lahf
inc
dec
stos
add
xchg
sub
cmp
pop
and
push
loop
es
xor
jne
(bad)
inc
(bad)
and
xchg
mov
cmp
xlat
lods
mov
call
push
and
mov
pop
xchg
mov
adc
sub
retf
les
cdq
into
daa
inc
les
add
shr
jne
adc
pushf
outs
je
pop
xchg
xchg
cmp
mov
xchg
xchg
inc
inc
mov
cmp
out
xchg
sbb
and
mov
test
cmp
shl
xchg
sti
fwait
adc
cmp
cmp
or
xlat
and
pop
iret
add
stc
jne
dec
inc
jp
enter
and
not
hlt
cmp
fwait
cld
in
jno
dec
es
mov
bnd
inc
ja
int
scas
adc
pop
rcr
add
test
ror
cli
pushf
jbe
mov
inc
repz
les
jg
stos
add
mov
cmp
cmp
fmul
xchg
and
test
fst
cdq
loop
jl
cld
mov
movs
imul
or
mov
jns
xchg
fidiv
push
push
adc
cld
cdq
adc
pop
mov
jne
sub
mov
adc
cld
and
cmp
aam
dec
jae
fadd
sbb
pop
xchg
cmps
sub
mov
xchg
cmp
dec
sbb
or
in
jbe
mov
imul
cmp
or
mov
pop
mov
loopne
sbb
ficomp
mov
or
leave
shl
xor
imul
lahf
or
push
xor
in
mov
add
test
sub
mov
sti
into
aaa
int3
(bad)
push
lock
mov
lods
sar
adc
and
sahf
or
push
push
mov
cwde
test
shl
bound
xor
fwait
leave
cmps
and
aad
call
inc
loope
push
div
repnz
out
push
and
ret
nop
push
test
sar
mov
sub
sub
pandn
mov
push
cmp
out
and
cmp
lods
xchg
and
mov
and
stc
aad
cmps
dec
sub
aad
fimul
popf
das
xchg
mov
test
leave
xor
mov
je
call
xlat
inc
not
mov
ss
push
and
and
sub
mov
out
fst
mov
dec
adc
cmc
jmp
cmc
jo
das
sub
xor
jnp
gs
cmp
outs
jb
and
add
test
(bad)
ret
sbb
rcl
fsub
sub
inc
fist
add
adc
mov
cmp
inc
push
and
test
push
scas
sbb
adc
hlt
lea
sub
inc
dec
xchg
push
repz
rol
dec
dec
sub
add
sub
bound
pop
xor
adc
dec
adc
push
cmps
iret
or
xchg
mov
pop
mov
fwait
leave
lods
sti
outs
aaa
ins
mov
or
ins
addr16
cld
in
jae
cmp
iret
cmp
sub
adc
out
inc
rcl
inc
mov
pop
sbb
push
in
cmp
xor
stos
in
add
mov
mov
inc
jg
imul
jae
dec
jecxz
mov
xchg
push
sub
ret
sub
retf
ins
ds
gs
loopne
sbb
neg
cmp
sar
mov
bound
ins
mov
pop
xor
sbb
mov
and
retf
xor
push
(bad)
push
fimul
cmp
iret
cmp
mov
sub
int3
test
and
mov
cmp
out
adc
sub
jge
xor
dec
dec
fwait
xor
fdivrp
shr
mov
ss
mov
test
hlt
sub
jmp
inc
add
push
push
out
cmps
loopne
and
sub
pop
pop
shl
mov
mov
dec
inc
mov
(bad)
call
mov
or
movs
sbb
mov
loop
icebp
inc
cmp
jl
pop
leave
fisubr
loop
sub
test
out
retw
test
fidivr
int3
push
mov
dec
shr
fild
stc
xchg
ins
popa
jo
lea
inc
sub
arpl
loope
cmp
mov
ins
fcomp
xor
jmp
jo
je
pushf
or
xor
in
push
scas
cmp
mov
addr16
stos
push
pop
add
adc
mov
cmp
mov
fdivp
xor
lock
jg
(bad)
repz
sub
shl
scas
push
cmp
cs
add
push
cmc
test
and
xor
mov
and
sbb
stos
test
or
jb
add
dec
ins
jle
pusha
mov
dec
sbb
mov
pop
or
lahf
les
ins
xor
movs
mov
in
out
and
or
xor
push
call
xchg
ins
lock
inc
mov
leave
int3
clc
adc
cdq
cs
aad
or
push
xchg
sbb
mov
es
pop
stos
cmp
push
(bad)
jne
ret
xchg
imul
xor
sbb
dec
popf
stc
add
adc
cmp
imul
int3
mov
cdq
push
cmp
pop
jmp
push
aad
mov
in
add
fisubr
sbb
or
and
fld
push
adc
adc
jae
retf
dec
fnstcw
jp
dec
and
ds
loop
push
jmp
out
leave
cld
into
call
mov
mov
pop
dec
cld
enter
dec
call
jb
out
imul
inc
lods
(bad)
and
adc
gs
adc
cld
ins
sub
pop
adc
jb
adc
int3
xor
jl
mov
ret
jae
into
aad
or
dec
mov
cmc
fwait
out
inc
lea
xor
adc
(bad)
ret
imul
jo
and
push
lods
stc
jbe
pop
and
push
dec
jne
and
js
xchg
div
mov
add
ja
cmp
pop
out
int
mov
mov
cmp
outs
in
pop
imul
mov
ja
repnz
es
adc
pop
adc
scas
cli
test
push
adc
int
test
and
push
das
out
jbe
pop
int3
pushf
data16
cmp
and
in
push
ror
es
popa
shl
dec
dec
xor
fwait
cmps
movs
into
or
mov
stos
inc
inc
push
aas
in
adc
stc
mov
ret
in
xchg
xor
pusha
lahf
ins
lahf
(bad)
mov
sbb
xor
(bad)
jecxz
imul
xchg
inc
jo
(bad)
jecxz
jnp
loopne
mov
adc
into
and
fwait
mov
sbb
cmp
fisub
mov
ror
pop
sbb
mov
sbb
xor
mov
movs
ds
cmp
adc
xor
xor
pop
pop
pop
push
popf
or
(bad)
or
icebp
test
pop
das
xor
je
mov
push
int
hlt
pop
adc
lods
inc
shr
stos
lds
cmp
xchg
dec
dec
loop
test
mov
in
jo
jmp
mov
std
sub
or
jb
mov
aaa
stos
sbb
cmp
out
cmps
test
cmps
sub
sub
mov
cmp
xlat
xchg
or
mov
mov
xor
dec
into
jnp
icebp
movs
out
jo
sbb
and
sub
mov
jbe
inc
adc
rcl
pop
sub
xor
mov
pop
call
mov
stos
lds
mov
das
xchg
or
sub
out
push
movs
xchg
scas
push
ret
inc
or
xchg
xchg
imul
add
sub
pop
(bad)
jo
cmp
or
mov
stc
jl
pop
mov
ret
sbb
scas
sub
adc
jp
xor
xchg
or
cld
sub
mov
mov
or
popa
mov
cmp
adc
sbb
adc
mov
dec
cld
(bad)
fld
enter
add
clc
adc
xchg
cmp
std
hlt
(bad)
dec
in
push
outs
mov
jg
fisttp
xor
or
mov
push
addr16
pop
or
ss
and
push
mov
out
cmps
cwde
add
stos
int
mov
das
fcom
mov
mov
push
mov
aad
stc
(bad)
test
lods
xchg
push
mov
mov
call
xor
shr
into
cmps
dec
xorps
push
adc
jmp
in
add
shr
sub
mov
cmps
fwait
std
lods
sub
sub
inc
neg
sbb
call
sub
dec
(bad)
aad
xchg
mov
fisub
mov
pushf
ret
imul
mov
in
xor
mov
pop
(bad)
cmps
sub
ja
jle
pop
adc
push
mov
lahf
jle
lahf
dec
cli
out
inc
int
cmp
ret
cmp
popf
inc
or
jo
rcl
jbe
dec
mov
inc
ss
and
pop
lahf
cmp
dec
and
pmullw
push
sub
in
loopne
and
xchg
popf
push
dec
ffree
sbb
cmc
sub
out
jg
shl
jmp
popa
mov
or
add
dec
shr
unpckhps
fsub
ret
pop
movs
ss
inc
imul
mov
les
fdivr
call
out
pop
in
mov
int3
inc
mov
xchg
cmp
xor
std
daa
outs
sbb
cmp
mov
mov
(bad)
je
add
shl
inc
pusha
pop
adc
inc
cwde
xchg
js
loop
shr
loope
xchg
xchg
outs
shl
fst
fisub
adc
das
inc
repnz
jmp
stc
stos
push
cmp
pop
hlt
cld
ds
ss
sbb
clc
leave
jbe
nop
sbb
aam
data16
dec
(bad)
rcr
cvttps2pi
push
cmp
push
ficom
test
or
inc
ja
and
ror
sbb
movs
and
push
ret
push
mov
dec
sbb
cli
xchg
lods
loop
cli
in
jne
jp
add
repnz
fdivr
movs
std
cmp
dec
push
mov
jnp
add
mov
dec
sbb
add
lahf
call
sbb
push
mov
xchg
pop
std
and
inc
fsubr
inc
xor
push
xor
xchg
xchg
cmps
add
mov
xchg
push
add
cmp
mov
pop
inc
(bad)
fsubp
dec
mov
imul
aaa
pushf
(bad)
sbb
bound
dec
lds
fisubr
cld
xor
xchg
out
sub
in
ret
lods
mul
fldcw
hlt
idiv
add
push
xor
jo
in
ins
iret
sbb
xchg
es
dec
test
and
push
iret
sbb
int3
popf
iret
jmp
(bad)
imul
lea
sti
jb
mov
xchg
sub
rol
push
aam
cmp
lock
or
test
pop
pop
ror
jns
daa
mov
out
inc
cli
fcomp
sbb
nop
jp
fs
cmp
and
cmp
and
lahf
lds
arpl
sbb
repnz
cmp
arpl
cmc
adc
ret
push
aas
test
push
es
popf
xchg
outs
dec
and
stos
out
fidivr
or
stos
add
mov
test
push
mov
jno
pop
(bad)
aam
pushf
sbb
mov
(bad)
xor
(bad)
nop
jp
cwde
cs
mov
push
xchg
adc
(bad)
cli
sbb
fiadd
add
(bad)
addr16
adc
inc
(bad)
mov
pop
jmp
nop
mov
jbe
ds
fs
mov
div
and
mov
rcl
pusha
in
xor
pop
and
sahf
sub
cmp
push
mov
mov
into
(bad)
fxch
dec
sbb
mov
adc
enter
pop
retf
in
cmp
mov
cmp
ins
xchg
rcl
jmp
fcmovbe
nop
mov
jle
adc
adc
or
sbb
dec
shr
(bad)
fs
cli
jno
test
and
ins
pshufw
mov
(bad)
das
dec
inc
repz
jmp
cmp
add
shl
retf
call
scas
or
or
mov
sbb
jae
pop
sbb
pop
jns
inc
movs
in
call
call
out
ror
add
xor
(bad)
fwait
xor
sbb
jno
(bad)
jnp
push
mov
jg
shl
in
(bad)
out
jbe
(bad)
rep
pop
adc
call
(bad)
and
std
test
cmp
mov
mov
dec
xor
ds
jecxz
aad
mov
mov
dec
and
and
sahf
cmc
fcomi
les
sahf
mov
jno
das
push
inc
adc
jo
(bad)
lock
sbb
xor
dec
push
sbb
sbb
fdiv
push
dec
sbb
popf
or
int
or
sub
out
fsub
jl
push
lds
retf
mov
aad
ins
cmp
cmp
sub
jmp
xlat
jl
jns
jle
cmp
or
mov
cmp
mov
int3
ja
mov
mov
lahf
scas
adc
(bad)
adc
loopne
fiadd
cli
hlt
fstp
pusha
sti
imul
out
imul
or
push
aas
pop
inc
add
out
lods
(bad)
xlat
hlt
jmp
push
xchg
bound
nop
mov
repz
cmps
mov
adc
into
in
or
cmp
mov
add
adc
stc
add
sub
or
jns
ins
movs
arpl
hlt
and
add
(bad)
xor
push
popa
out
addr16
arpl
xchg
out
push
shl
fstp
jne
xor
fstp
sahf
stos
fcomi
mov
mov
or
out
push
arpl
in
adc
xchg
aas
mov
ret
mov
fiadd
test
lea
sar
ds
jns
aaa
sbb
vmaxps
jg
push
sbb
and
jle
test
or
(bad)
jns
inc
jmp
add
jl
mov
(bad)
in
dec
pextrw
push
add
pop
mov
adc
cmp
sbb
jns
mov
xor
clc
sbb
or
js
test
sbb
imul
dec
mov
retf
(bad)
and
and
fidiv
xor
(bad)
jmp
jo
arpl
popa
(bad)
(bad)
mov
sbb
outs
aas
jmp
fcomip
xchg
jp
fwait
arpl
sbb
xor
lock
ror
pop
adc
xchg
stos
inc
in
and
mov
movs
push
xchg
call
mov
sub
cmp
sti
add
xchg
bswap
jp
sub
sti
scas
sub
fwait
xchg
(bad)
cmp
call
out
or
mov
stc
jbe
loopne
pusha
scas
xchg
adc
adc
jmp
mov
call
es
and
cld
cdq
xor
xchg
ret
adc
push
add
ins
mov
sub
aad
das
popa
sbb
int3
icebp
mov
enter
jns
test
adc
xor
jmp
mov
sbb
ficomp
sbb
cld
mov
xor
stos
mov
imul
and
adc
mov
out
or
pop
mov
inc
fnstenv
aas
inc
ret
mov
lods
mov
xor
mov
or
jp
ret
push
cmps
xor
push
pop
fcom
dec
enter
scas
js
out
xchg
call
and
xor
call
aad
sub
les
sar
ins
dec
jns
fsubr
cmp
aas
sub
sub
xor
push
arpl
xor
shr
sti
bound
int3
add
stc
es
(bad)
movs
sti
pop
inc
jo
push
out
imul
ja
call
ss
mov
mov
div
pop
adc
cmc
mov
push
ss
xchg
fs
xor
ins
out
mov
sbb
lahf
add
mov
arpl
lods
xchg
push
mov
mov
and
mov
sbb
outs
inc
rol
rcl
xor
xchg
push
mov
(bad)
sub
dec
and
mov
cwde
push
call
rcr
loope
add
in
jae
add
sub
call
adc
repnz
psllw
das
jp
push
jmp
mov
scas
cli
and
mov
stos
aaa
mov
pop
mov
push
add
jbe
mov
pop
mov
jbe
pop
(bad)
sub
cs
and
adc
lds
jmp
rcr
iret
mov
add
dec
sbb
and
pop
inc
loop
out
dec
xchg
jmp
mov
inc
add
mov
dec
imul
add
mov
jge
cmc
test
or
enter
shl
dec
xchg
(bad)
jmp
je
imul
jecxz
fwait
xor
fs
into
ret
mov
mov
dec
dec
mov
retf
sbb
xchg
cmp
shr
mov
mov
cmp
imul
gs
out
and
jns
or
stos
(bad)
lock
jge
(bad)
ins
arpl
xor
lock
(bad)
pop
or
mov
sbb
jmp
adc
xchg
es
fild
sub
ror
popf
out
fcomp
retf
cs
(bad)
xor
(bad)
lock
sbb
and
idiv
xor
out
das
cmp
adc
sbb
in
inc
aad
repz
std
ins
loope
rol
xchg
add
push
pop
ret
or
sbb
test
cmp
sbb
fimul
inc
sbb
mov
adc
push
or
fld
repnz
pop
cmp
pop
dec
ret
int
dec
jge
add
pop
xchg
dec
sar
add
ret
cmp
xor
cmp
fdivrp
cmp
push
add
sbb
retf
push
imul
cmp
dec
adc
xor
cli
add
push
sbb
jg
fxam
(bad)
into
pop
mov
mov
sub
push
imul
or
xor
movs
dec
fdiv
loopne
push
gs
mov
aam
fmul
cmp
scas
or
mov
mov
xchg
(bad)
inc
pop
mov
sub
test
xchg
ins
rcl
sbb
xor
push
call
and
mov
rcl
adc
mov
pop
stos
xor
hlt
add
cmp
inc
(bad)
sbb
lods
pop
adc
pushf
cld
fs
pop
shl
das
mov
fwait
dec
mov
sbb
and
cmp
pop
inc
adc
mov
movntq
adc
or
ret
mov
mov
dec
out
fldcw
scas
out
mov
push
pop
xor
sbb
sbb
aad
sbb
mov
cld
mov
(bad)
js
inc
mov
lods
jo
out
lods
sub
sub
inc
fcmovnbe
sar
loopne
jne
stos
pop
data16
pop
inc
cli
xlat
or
iret
or
cdq
data16
sar
pop
adc
push
lahf
fcmovnu
je
and
mov
cs
(bad)
pop
xor
sub
inc
inc
(bad)
mov
push
aad
in
clc
fsub
jne
sbb
mov
in
add
pop
xchg
pop
lods
sbb
cmc
and
mov
test
cmp
xor
ins
leave
rcr
dec
les
loopne
sbb
xchg
sbb
inc
sbb
(bad)
cmp
pop
and
push
dec
aaa
sub
ss
jmp
ins
dec
or
sub
dec
add
fistp
ret
or
js
aas
push
mov
nop
int
sub
and
jmp
aaa
cmp
pop
in
or
mov
or
dec
sbb
outs
(bad)
jns
ret
mov
cmc
and
sahf
jp
retf
cmps
cmp
dec
inc
sahf
daa
push
test
inc
or
or
mov
ds
in
cmp
iret
pop
sub
movs
ds
adc
dec
js
mov
addr16
cmp
pop
xchg
fcmovbe
ret
fidivr
xor
loop
xor
push
rol
shl
mov
inc
mov
push
or
inc
inc
xor
repz
xchg
pop
out
ret
sub
inc
xchg
(bad)
lds
lahf
cmc
rol
mov
std
call
xchg
sub
test
xchg
out
sub
adc
dec
add
and
jae
pop
push
imul
or
cmp
mov
xchg
add
fst
cli
int
or
es
or
ja
js
push
mov
or
icebp
mov
lods
mov
shr
mov
mov
push
cmp
into
inc
mov
jno
ja
cmp
cmp
cmp
jle
jae
icebp
xchg
dec
push
std
mov
jnp
js
add
jno
xor
ss
shl
lods
mov
js
aad
test
jae
loopne
loopne
lea
scas
nop
nop
mov
adc
sbb
stos
xor
mov
loope
xor
mov
into
lahf
lods
or
test
(bad)
fwait
cmp
mov
movs
jnp
mov
inc
aas
lods
outs
adc
leave
cmp
lds
fstp
adc
fmul
adc
pop
inc
nop
push
repnz
xor
and
or
scas
adc
fwait
dec
adc
mov
jp
out
xchg
cmp
lods
lods
sbb
rol
ins
mov
dec
and
jo
vpsadbw
or
pop
js
pop
iret
mov
in
pop
push
pop
dec
pop
pop
cli
mov
xor
xchg
retf
inc
loopne
dec
movs
push
add
pushf
imul
fist
mov
pop
imul
sar
mov
inc
push
pop
retf
in
jmp
push
jne
and
shr
sti
lods
fisubr
pop
or
push
adc
stos
xchg
and
and
rol
aad
test
push
mov
add
in
sub
mov
setl
test
sub
sbb
mov
mov
lds
sub
push
jp
xchg
fisttp
mov
adc
sub
loope
push
jns
inc
cmp
jns
mov
ficomp
mov
mov
sti
xchg
(bad)
ret
popa
fucomi
lea
jb
pop
retf
sbb
and
sub
lds
mov
ror
mov
pop
clc
xchg
rol
loop
xchg
retf
cmp
lds
push
cld
mov
or
fs
div
addr16
kmovb
mov
dec
mov
sbb
arpl
sub
in
xlat
enter
or
dec
push
push
std
mov
xchg
or
cli
inc
dec
mov
loopne
jmp
mov
xchg
mov
add
xor
and
cmp
(bad)
sbb
sbb
mov
or
mov
push
les
mov
mov
ja
cmp
cmp
aas
enter
stos
mov
in
sbb
neg
jl
stos
xor
push
aaa
inc
fstp
cmp
jg
inc
loope
mov
cmp
idiv
xchg
xchg
dec
and
hlt
fsubr
xor
jmp
sbb
or
js
jne
popf
mov
mov
inc
movs
shr
rcr
loope
clc
xlat
xor
adc
dec
jl
js
inc
push
movs
or
adc
add
adc
adc
aaa
ja
add
out
and
hlt
adc
adc
pop
fs
loope
adc
aam
neg
fs
jmp
scas
mov
fisubr
pop
inc
les
xchg
aas
sti
pop
mov
pop
xchg
fnsave
jno
ficomp
(bad)
sar
popa
and
jo
push
and
push
lods
in
sbb
inc
adc
cwde
hlt
mov
loope
mov
cvtdq2ps
rol
and
enter
xchg
mov
dec
mov
pop
data16
std
(bad)
cmps
movs
mov
mov
out
mov
xor
xchg
retf
loop
(bad)
lods
icebp
mov
jg
dec
jl
sbb
mov
pop
push
call
jle
jnp
dec
sbb
add
std
add
pop
dec
lea
neg
pop
jno
cdq
hlt
fstp
add
push
test
dec
jg
rol
mov
repz
test
pop
int
cs
add
push
fiadd
(bad)
loope
mov
mov
jno
dec
sbb
adc
(bad)
neg
and
repz
nop
jmp
jmp
fisubr
adc
pop
sub
es
inc
call
fst
inc
push
scas
xchg
jmp
outs
test
add
fdiv
test
push
fwait
push
and
cli
inc
mov
adc
dec
and
xchg
jne
pop
std
xor
inc
sar
dec
dec
mov
loope
pop
dec
mov
iret
cmps
push
xchg
add
stos
stos
sbb
adc
mov
aaa
xchg
add
inc
pop
push
xor
mov
cmps
lods
ret
stos
xor
dec
icebp
(bad)
xor
inc
jge
addr16
sub
cdq
xor
push
(bad)
and
cmps
mov
lahf
jge
int
push
pushf
and
lods
and
sbb
jno
and
mov
rcl
xchg
lock
push
adc
(bad)
clc
xchg
clc
ret
call
jae
ins
cmp
je
cmp
or
in
cmp
in
mov
sbb
leave
loopne
xchg
adc
push
xor
bound
sar
fmul
cs
dec
xor
outs
cmps
sbb
mov
sub
jle
push
mov
jecxz
jecxz
(bad)
push
mov
jl
popaw
loop
or
sar
mov
cli
cmp
lock
ficomp
repnz
cs
dec
loope
rcr
jg
icebp
add
or
mov
mov
movs
xor
dec
add
scas
iret
in
mov
lds
mov
ins
push
retf
jns
out
cli
mov
(bad)
cli
xchg
mov
and
cmp
jmp
adc
cmp
lds
jmp
mov
test
or
sub
cmp
mov
jmp
fisttp
sub
push
aad
mov
out
push
add
hlt
mov
outs
dec
cmc
xor
or
push
add
test
icebp
pop
repnz
cmp
psubsb
xchg
cmps
xor
(bad)
or
sbb
rcr
mov
or
enter
mov
xchg
mov
push
shl
and
ss
fild
or
mov
call
adc
jae
dec
push
adc
ss
inc
loopne
push
scas
data16
ss
mov
mov
sahf
jle
scas
inc
addr16
inc
mov
into
jo
stos
adc
out
xor
and
jns
cmp
aaa
or
dec
int
iret
ins
stos
pop
cs
sbb
pop
push
imul
je
push
pop
fldenv
mov
sbb
icebp
cmp
push
dec
mov
add
sub
jo
dec
(bad)
in
mov
(bad)
pop
lods
mov
or
inc
repz
movs
inc
pop
add
push
sbb
mov
mov
sar
stc
pop
out
adc
shl
mov
daa
mov
rol
mov
nop
pushf
sub
sbb
fwait
push
das
(bad)
mov
adc
stc
shl
jne
jmp
ins
cmp
fucomi
scas
adc
fnsave
xchg
xchg
daa
aad
in
dec
dec
fbld
sahf
lock
add
mov
dec
xchg
retf
inc
rcr
into
imul
mov
lods
les
dec
cmps
mov
dec
push
mov
clc
mov
jo
adc
lock
ror
push
mov
call
push
cs
in
mov
fwait
scas
call
test
(bad)
pop
inc
pop
out
loop
xor
iret
pop
jns
(bad)
je
retf
pop
sbb
mov
xchg
cdq
and
mov
popf
add
pop
out
adc
ret
ror
push
dec
push
je
dec
popf
or
mov
ja
jb
addr16
mov
out
cld
out
arpl
(bad)
jnp
rcl
pop
cmps
add
dec
aas
mov
cld
adc
sub
sub
mov
es
fcomp
mov
popa
dec
ds
jmp
out
sahf
and
mov
add
bound
adc
dec
stos
push
repz
icebp
es
sbb
jg
pop
jo
dec
fadd
mov
sub
adc
cmp
cli
mov
outs
jmp
push
jp
aad
add
lock
pop
add
add
arpl
fcomp
scas
mov
or
imul
daa
jmp
push
jge
movs
cmps
or
xchg
xchg
out
cli
jecxz
lahf
dec
sbb
sub
imul
das
jmp
cmp
sbb
inc
aaa
xchg
sbb
dec
movs
mov
xchg
fs
icebp
clc
pop
adc
lea
dec
mov
xor
sbb
int
jbe
sahf
in
xlat
ds
inc
xor
ins
sbb
fcomp
push
scas
fldenv
xchg
sbb
jae
(bad)
pop
inc
mov
and
retf
mov
fst
sahf
in
call
aad
xchg
sub
mov
mov
jmp
or
out
div
bound
ins
imul
ret
pop
jmp
jb
dec
out
xor
mov
repz
push
mov
sbb
sbb
ret
or
push
push
sbb
add
mov
sbb
(bad)
jbe
data16
stos
dec
push
sbb
push
push
jl
mov
mov
or
xchg
lods
mov
xlat
std
repz
mov
mov
outs
cmps
cmp
pop
fisub
mov
push
add
add
dec
(bad)
jo
das
jb
outs
dec
add
and
ror
out
mov
pop
in
rol
mov
lods
movs
dec
jle
mov
inc
int3
sbb
push
adc
dec
pop
lods
imul
inc
int3
gs
pop
jae
les
xchg
test
ret
in
dec
je
xor
mov
and
and
call
xchg
add
(bad)
jae
mov
push
sbb
ins
jp
test
popa
xchg
not
sti
xor
or
icebp
mov
not
cmp
mov
lock
out
(bad)
call
movs
test
mov
pushf
hlt
mov
call
pop
pop
test
push
js
fstp
stos
xor
jne
stos
std
adc
stos
mov
or
inc
das
stc
sub
xchg
clc
xchg
and
daa
fsub
jo
jae
mov
mov
cdq
mov
push
inc
jnp
mov
sub
movs
out
rol
xchg
mov
stos
xor
push
pop
movs
xor
(bad)
sbb
push
scas
arpl
xchg
mov
es
repz
int3
jp
pop
jg
loop
pop
and
push
mov
comiss
nop
out
std
xchg
mov
xchg
cmp
sub
in
and
je
dec
adc
and
dec
jg
sbb
cmp
push
cmc
sbb
inc
call
dec
mov
lods
in
daa
pop
cld
sub
movs
mov
xchg
adc
cdq
cwde
or
out
mov
(bad)
jge
mov
bound
dec
adc
sbb
pop
mov
lea
jns
xchg
fdiv
aaa
(bad)
xor
ret
ret
inc
retf
dec
push
mov
and
in
add
out
add
dec
adc
pusha
mov
push
aaa
xchg
mov
inc
aas
inc
dec
mul
lock
push
stc
fistp
jmp
dec
int3
pop
jp
jno
xchg
loopne
sub
jecxz
sub
and
xchg
out
movs
into
icebp
mov
inc
and
mov
pop
fcom
cmc
mov
stos
pop
mov
add
jge
loope
sbb
jl
addr16
push
cmps
sbb
push
cmc
cmp
loop
jmp
(bad)
scas
and
into
jp
dec
sub
xchg
fidiv
push
xor
mov
icebp
mov
hlt
push
xor
sub
rcr
xchg
aas
movs
cmp
mov
or
push
hlt
loope
xchg
inc
les
je
mov
jp
lods
dec
lahf
mov
ins
rol
cs
xchg
outs
cmp
hlt
enter
push
hlt
sar
outs
pop
add
test
xchg
cmp
data16
add
(bad)
shl
or
test
jne
movs
xchg
or
sub
fs
pop
push
shr
aad
adc
arpl
inc
les
int
jne
in
leave
call
sub
xor
sub
jecxz
jl
div
jmp
outs
and
sar
add
xor
and
push
leave
fisttp
add
pop
ins
push
sbb
inc
adc
cwde
jge
imul
jmp
mov
ins
mov
sbb
jnp
push
mov
or
mov
cmps
loopne
mov
xor
mov
mov
hlt
in
and
push
sub
and
jne
push
out
xlat
jbe
xchg
ret
inc
ret
dec
and
loope
(bad)
in
jg
fldcw
mov
jmp
pop
retf
aad
push
pop
inc
leave
cmp
pop
icebp
pop
jg
js
inc
inc
push
xor
iret
repnz
xor
jno
push
add
jae
pop
xchg
cmp
sar
rol
xchg
sbb
lea
or
call
ins
sbb
mov
mul
sub
cmp
adc
push
dec
or
out
repnz
inc
pop
retf
in
dec
pop
add
in
sbb
xchg
pop
sti
sbb
ret
cwde
aaa
in
pushf
bound
cmp
xor
and
lock
ret
pop
mov
jno
cmps
(bad)
sub
loop
pop
xchg
cmp
mov
inc
repz
ins
jmp
out
shl
or
mov
in
sub
lods
aad
mov
in
push
test
fmul
stos
or
add
lahf
sbb
sub
adc
adc
test
mov
cmp
(bad)
stos
in
adc
add
mov
dec
js
or
(bad)
push
call
sbb
pop
stos
gs
cmc
cmp
jmp
aaa
inc
imul
les
hlt
or
cmc
push
js
stos
(bad)
leave
cmp
je
xchg
mov
cwde
inc
loopne
inc
popf
mov
bound
add
ret
rcl
mov
mov
mov
mov
mov
in
ficomp
movs
adc
es
mov
dec
cli
or
push
test
mov
sar
sahf
out
sub
fld
add
aaa
pop
add
and
leave
adc
xor
ror
loopne
stc
xchg
call
xchg
and
xchg
pop
je
jmp
in
loop
out
mov
stc
leave
in
clc
sti
xchg
push
pop
inc
shl
xchg
adc
dec
push
xor
fidiv
ficomp
add
sti
mov
cmp
or
fistp
jne
retf
pop
rol
sbb
cmps
jl
add
push
shufps
test
mov
lea
and
mov
mov
rcl
inc
xchg
cs
rcl
sti
inc
mov
mov
xlat
or
inc
(bad)
sti
outs
mov
jg
mov
and
ins
repnz
xor
es
mov
or
outs
scas
aas
xchg
std
(bad)
je
sbb
mov
pop
mov
fsub
pop
shr
mov
xchg
mov
add
push
jg
mov
push
sub
popf
in
loop
xlat
inc
(bad)
push
frstor
shl
mov
inc
popf
push
cs
pop
xchg
jae
dec
out
jecxz
push
outs
jle
sbb
ja
stc
jmp
or
cmp
add
mov
mov
push
jmp
jle
shl
inc
loope
jp
cwde
sti
inc
add
sub
fs
sub
or
call
or
int
out
xor
or
and
(bad)
shl
pop
jecxz
lds
sbb
lahf
pop
ja
icebp
jg
xlat
das
cwde
imul
pop
add
loop
imul
inc
int3
arpl
adc
out
repnz
fwait
mov
jg
out
xchg
xchg
push
dec
adc
cmp
sub
sbb
add
(bad)
(bad)
out
cs
hlt
add
repnz
cmps
test
and
int3
xchg
pop
xchg
mov
or
jae
and
mov
leave
mov
or
iret
and
aad
jo
in
sbb
mov
mov
sbb
shr
push
mov
dec
shl
fbstp
in
imul
push
call
sbb
loopne
retf
(bad)
xor
out
ret
shl
mov
retf
mov
lahf
or
pop
xor
test
jno
dec
mov
mov
fidiv
fcom
jmp
mov
shl
pop
sub
and
mov
push
(bad)
ja
or
hlt
jge
mov
push
xchg
mov
and
ja
std
jbe
mov
stos
dec
arpl
sub
popf
repz
xchg
xchg
dec
cs
inc
inc
pop
inc
sub
adc
pop
in
bound
ds
fmul
cmp
inc
scas
jle
aas
out
js
retf
shl
cmp
clc
enter
xor
repnz
add
stos
lods
sahf
ror
and
or
int3
pop
xor
in
xchg
dec
(bad)
(bad)
test
popf
test
jo
lods
pop
jg
pop
sbb
sar
mov
push
push
sub
cmp
xor
mov
out
xchg
add
(bad)
pop
in
fwait
pop
xchg
mov
stos
adc
jbe
fwait
int3
cmp
dec
scas
out
jmp
jmp
int3
lods
mov
pusha
sub
mov
and
lahf
or
rcl
or
xchg
jnp
cdq
mov
jmp
iret
and
mov
inc
cmps
or
or
loope
mov
add
jp
in
or
in
ror
popf
pop
fbld
inc
or
xor
and
xlat
add
add
and
add
outs
jmp
ins
adc
push
xchg
push
sbb
xchg
(bad)
dec
dec
call
mov
jg
test
mov
xchg
cmps
xor
cmp
gs
push
adc
push
out
daa
mov
and
push
aaa
lds
(bad)
vpmacsswd
sbb
(bad)
iret
repnz
movs
and
clc
test
hlt
jg
adc
(bad)
out
sub
push
daa
(bad)
in
push
lea
stos
iret
push
mov
cmp
lods
cli
popf
adc
fisubr
std
adc
add
pop
lock
jge
cmps
iret
cmp
jecxz
pop
test
cmc
mov
cli
mov
mov
adc
xchg
sbb
or
pop
adc
and
mov
sub
sub
inc
mov
sub
(bad)
out
mov
jno
dec
cmc
xor
das
cld
jg
sub
cmps
int3
bound
pushf
stos
in
ins
mov
and
mov
cwde
shl
lock
jo
jnp
and
jne
lods
xchg
hlt
pop
xchg
shr
jge
(bad)
sbb
jno
call
les
add
lahf
in
jmp
ss
cli
push
loop
js
xchg
mov
sbb
mov
cli
push
pop
dec
ds
dec
or
inc
out
test
inc
or
cmc
mov
jnp
in
xchg
or
pop
es
cdq
xor
daa
mov
fldenv
movs
out
sahf
cmp
icebp
push
push
xchg
adc
ds
fs
add
enter
cs
push
sbb
retf
add
mov
repz
and
jle
stc
sub
xchg
repz
mov
jno
cs
mov
jg
inc
add
mov
retf
imul
dec
fwait
scas
jge
add
cmp
adc
mov
jmp
(bad)
push
and
aam
lods
push
imul
sbb
(bad)
jb
xchg
and
cmps
pushf
or
popa
stos
in
mov
icebp
retf
push
push
push
or
mov
sub
sub
shrd
(bad)
mov
leave
stos
xchg
sbb
fcom
jle
mov
xor
call
add
sbb
pop
aaa
jno
into
push
xchg
out
sar
xor
pop
mov
call
adc
fdivr
adc
cmp
stos
jle
iret
jg
add
mov
mov
pop
ins
lock
repnz
fild
je
pop
dec
sti
cli
adc
mov
xchg
mul
xchg
push
arpl
imul
jmp
jge
fsubr
inc
ror
pop
imul
in
iret
mov
fnstcw
(bad)
mov
cwde
push
aaa
pop
push
and
in
sar
test
out
inc
add
mov
stc
add
xor
cli
jnp
adc
jns
jns
(bad)
xor
stc
inc
movs
xor
sub
mov
in
mov
pop
jg
movs
(bad)
pop
out
mov
gs
enter
sbb
sub
dec
(bad)
ja
aam
std
iret
nop
push
push
mov
mov
fcmove
add
aam
cmp
push
fwait
sub
mov
in
int
imul
xor
test
mov
push
xchg
arpl
loopne
daa
out
stc
mov
add
leave
push
mov
dec
mov
adc
add
lods
test
std
jmp
das
mov
dec
xchg
imul
test
lods
mov
cmp
cmp
mov
rcr
and
retf
xchg
cli
xchg
or
push
mov
xlat
or
neg
std
or
outs
jmp
mov
stos
xchg
cmp
out
or
xchg
inc
inc
mov
mov
shr
(bad)
stos
nop
push
cdq
retf
xchg
lock
pop
pop
lahf
test
jb
jl
mov
add
dec
inc
xor
clc
mov
push
test
mov
jo
aad
in
aaa
mov
sbb
push
jg
jnp
or
jge
xchg
dec
pop
cmp
call
js
or
pop
retfw
xor
mov
cmp
and
test
std
out
aad
mul
repnz
sbb
ins
push
popa
lods
add
fmul
sub
pop
or
adc
fwait
push
sbb
fbstp
pop
xor
push
inc
cmp
imul
xor
mov
sbb
pop
pop
sar
mov
xchg
out
push
fdiv
rcl
mov
call
repnz
push
adc
js
cmp
add
sub
inc
fbstp
int3
jle
add
jo
jp
jp
sub
cmc
jne
push
add
rcr
movups
and
js
push
pop
adc
nop
loope
mov
adc
dec
xor
sbb
pop
cs
add
xchg
leave
cmp
xchg
mov
add
mov
stos
xchg
cld
cmps
scas
int
inc
cwde
clc
xlat
rol
pop
scas
sub
div
pop
lods
xor
pop
xchg
and
popa
jb
sub
call
fucompp
sahf
mov
fistp
push
mov
loop
ins
fld
or
jnp
or
ret
xor
xchg
fstp
sub
in
das
test
fsubr
fld
mov
in
je
leave
(bad)
fsubr
xchg
out
jae
sub
ret
dec
bound
cmp
test
loop
pop
int
mov
cmp
pop
xchg
push
dec
adc
out
jae
jae
and
add
sahf
adc
pop
sahf
sbb
sbb
popa
mov
cmp
inc
popf
sub
pop
dec
fadd
ss
sub
call
dec
or
add
mov
in
mov
dec
jne
mov
repnz
sbb
push
ja
ficom
pop
sub
fsubr
lods
xchg
sub
pushf
dec
mov
ja
dec
mov
shr
and
retf
xor
or
arpl
scas
nop
dec
imul
jno
int3
fwait
js
inc
repnz
xor
int
aaa
lea
fwait
or
test
fmul
or
pop
outs
sahf
stos
xchg
aaa
inc
jo
call
aam
not
sub
cmp
pop
ret
xor
add
inc
jge
xor
jecxz
icebp
ror
xor
outs
neg
cmp
in
das
add
inc
fsubr
or
test
add
es
mov
ror
mov
leave
push
jbe
bound
inc
(bad)
(bad)
dec
jbe
(bad)
cld
les
xor
mov
sbb
jle
cwde
jae
push
ficom
movs
mov
xchg
and
sbb
mov
cmp
or
(bad)
push
xchg
pop
or
jno
ja
lea
loope
pop
mov
xchg
(bad)
xlat
test
fs
outs
into
int3
call
rol
push
xchg
repz
or
aad
test
sbb
push
mov
push
xchg
cmp
add
xchg
pop
mov
mov
jo
cld
or
aaa
loop
sbb
sahf
fs
outs
sar
sub
out
fst
pop
dec
(bad)
sti
fdivr
sbb
pop
pop
and
sub
movs
aad
stos
lods
(bad)
jb
nop
pop
sbb
jne
mov
scas
pop
pusha
sti
js
xor
int
ins
pop
dec
mov
retf
test
fwait
sti
pop
push
xchg
adc
pop
cli
repnz
mov
bound
jge
adc
outs
mov
sub
js
jmp
ins
pop
fwait
or
je
pop
xor
sbb
in
mov
jo
or
add
outs
inc
fxch
scas
sub
mov
out
push
gs
ror
adc
sar
pop
sbb
inc
and
jnp
ins
inc
js
shl
push
xor
std
ret
push
push
mov
jne
add
outs
leave
es
pop
es
clc
push
inc
test
xchg
mov
lods
and
fsub
or
rol
push
cmc
cmp
inc
push
movs
inc
xlat
xor
add
ret
movs
jp
pop
jmp
shr
pushf
call
data16
(bad)
stos
sti
jmp
push
pop
hlt
add
inc
in
das
mov
aaa
adc
call
mov
jl
jmp
xor
mov
mov
xchg
cli
sbb
(bad)
scas
aas
inc
jmp
gs
xor
rcr
pop
pop
scas
dec
(bad)
mov
adc
cs
inc
jbe
inc
pop
cmp
xor
in
jnp
mov
jmp
das
scas
jmp
cmp
dec
stos
add
int
cwde
or
mov
aam
pop
imul
lods
push
mov
xor
call
in
xor
(bad)
add
rol
popf
inc
das
int3
mov
in
inc
or
sbb
ja
cmp
sub
lahf
jae
or
rcr
fs
jp
lea
cmp
pop
lock
push
pop
rep
ror
mov
lahf
inc
popf
stos
adc
sbb
sub
call
mov
into
fwait
into
sub
scas
adc
shr
inc
sbb
jp
push
mov
push
sbb
or
int
pop
mov
add
sbb
add
dec
fs
xchg
or
es
jne
mov
adc
in
scas
push
sbb
mov
scas
jge
cwde
scas
add
in
js
out
out
xor
imul
das
fstp
mov
stos
xchg
xchg
mov
cdq
add
cmps
push
or
arpl
dec
into
add
cmp
or
sub
dec
sub
test
inc
out
fld
clc
adc
pop
jp
add
or
add
adc
inc
ret
inc
push
xchg
dec
popa
div
repnz
fstp
fild
aad
movsx
dec
out
call
dec
test
xchg
rol
ror
and
(bad)
stos
mov
add
mov
inc
cvtdq2ps
mov
mov
inc
pop
ja
dec
aam
inc
mov
fldenv
popa
adc
ret
inc
fstp
call
dec
shl
mov
jnp
add
inc
shr
xchg
cmc
inc
imul
mov
shl
mov
repnz
xor
gs
rol
pop
mov
lods
int
data16
sub
fidivr
lods
nop
mov
push
jp
ins
(bad)
in
loopne
xchg
add
fidivr
adc
jge
out
movs
push
cmc
push
lea
out
sub
xchg
mov
imul
inc
dec
mov
ror
sub
lock
lds
pop
sbb
lahf
repnz
add
and
imul
mov
(bad)
scas
mov
pop
push
and
scas
in
sub
cmps
mov
inc
mov
pop
inc
and
addr16
cld
cmp
cmp
mov
and
ins
add
push
(bad)
jp
jp
test
mov
out
bnd
stc
ffreep
retf
mov
jmp
mov
add
inc
mov
xchg
clc
dec
lods
ret
je
gs
inc
mov
push
push
fnstenv
mov
mov
mov
test
fst
mul
ficom
mov
pop
jle
in
call
dec
call
add
xchg
bnd
or
pop
sub
popa
push
adc
jnp
mov
fadd
mov
aam
test
sub
stc
jle
mov
out
icebp
addr16
lds
mov
adc
mov
out
add
arpl
mov
in
scas
fs
cmc
stos
into
cld
fld1
dec
popa
cdq
or
mov
xor
xor
mov
lock
cs
fcomip
(bad)
mov
es
lods
test
popa
lods
mov
popa
dec
adc
lods
jl
adc
xchg
jne
int
rcr
or
mov
pop
enter
lods
push
add
mov
jp
cwde
inc
mov
xor
push
xlat
and
inc
push
or
xor
fsubr
js
cmc
sub
jbe
push
dec
test
rcr
push
xchg
fstp
shr
sub
sbb
cmps
call
push
sbb
cmp
sbb
cmp
jecxz
ins
adc
scas
jecxz
jnp
aad
fild
aad
aas
dec
int
(bad)
(bad)
add
xchg
or
(bad)
sbb
mov
aaa
cwde
jno
add
mov
mov
lock
arpl
mov
int3
(bad)
pop
call
loope
or
lods
not
sub
mov
jns
inc
addr16
or
sti
jecxz
icebp
xor
icebp
sbb
xor
xchg
mov
idiv
(bad)
loop
clc
repz
lea
dec
jns
mov
test
mov
cmp
retf
fcmovne
pusha
scas
mul
sbb
enter
aam
mov
ret
sub
fsub
into
data16
jae
xchg
add
imul
or
pop
cmc
js
dec
adc
dec
and
jge
and
mov
adc
scas
mov
mov
js
fimul
ficom
es
adc
pushf
mov
and
cmp
push
sub
sti
pop
jno
inc
jg
adc
dec
stos
mov
xor
test
add
dec
aad
movs
fnstcw
sub
outs
inc
xchg
sahf
fsubr
jg
cmp
test
daa
je
or
nop
or
cmp
mov
xor
and
xor
mov
jl
into
rcr
jae
mov
mov
sbb
aam
mov
jo
(bad)
mov
jmp
fwait
push
ret
add
sbb
ss
mov
or
pop
and
push
aad
sbb
das
ror
hlt
dec
sub
sar
mov
pop
cmp
add
jnp
mov
(bad)
out
icebp
mov
push
movs
rcr
mov
daa
movs
jmp
jl
popf
std
cli
daa
sub
(bad)
pop
mov
scas
adc
dec
pop
mov
push
sbb
out
inc
mov
cmc
addr16
clc
sub
add
rcr
sbb
or
rol
cwde
adc
stos
pop
test
scas
push
(bad)
fld
mov
push
pop
push
int
add
xor
sbb
sbb
add
out
mul
xor
adc
jo
pushf
xor
push
pop
push
cmp
xchg
(bad)
xor
scas
sub
sbb
cmp
pusha
js
out
adc
(bad)
dec
pop
inc
repz
shl
cmp
jp
pop
aam
pop
ret
std
pop
jmp
imul
inc
sbb
sbb
push
test
or
je
loope
inc
pop
mov
(bad)
push
into
xchg
retf
push
or
mov
mov
pop
ficomp
call
(bad)
int
loope
mov
dec
cmp
and
lea
mov
pop
jle
je
pop
pop
imul
jne
or
cmp
mov
pop
fs
repz
cmc
ss
mov
dec
dec
enter
dec
nop
fcomp
loop
cdq
jnp
jl
fsub
cmp
ror
popf
shl
or
push
pop
pop
stc
pop
and
(bad)
cmps
sahf
mov
xor
cmp
fild
mov
jl
jae
hlt
pop
cmp
pop
pop
cmp
dec
sbb
mov
leave
cld
icebp
test
mov
or
jp
pusha
out
imul
js
mov
pop
cli
xchg
loopne
enter
jb
mov
and
fmul
sub
cmp
pop
retf
data16
mov
retf
mov
fldl2t
daa
pop
loopne
js
inc
call
stos
fwait
js
ja
cmp
shr
mov
pusha
gs
loop
push
aam
xchg
cmp
push
mov
push
pop
xor
mov
sbb
mov
xor
xchg
mov
pusha
push
pop
mov
cmp
jmp
adc
lds
push
jae
cmp
pusha
xchg
jae
(bad)
add
out
mov
fwait
xor
pop
mov
cmp
xor
out
push
xchg
or
inc
add
outs
jle
gs
(bad)
pusha
pushf
push
ret
out
mov
cmp
pushf
retf
icebp
das
test
adc
call
(bad)
dec
xchg
cld
mov
lods
fdiv
sbb
xchg
mov
or
cmc
into
pop
loope
or
das
scas
out
dec
cmp
xchg
mov
in
ja
test
pop
xchg
das
pushf
das
jno
test
mov
xlat
xchg
lods
pop
and
xchg
(bad)
(bad)
arpl
ins
scas
ror
sar
pop
xchg
sbb
fisubr
rcl
into
sbb
sub
das
gs
fmul
fmul
rcl
xor
mov
fwait
sub
adc
mov
fs
retf
daa
jge
xor
xor
retf
imul
sbb
add
push
pusha
test
cmp
fistp
rol
adc
and
push
or
dec
pop
add
(bad)
das
lds
or
aaa
add
(bad)
test
cld
jge
leave
dec
das
push
imul
pop
data16
mov
lock
movs
popa
retf
adc
movs
and
lods
pop
repnz
or
enter
adc
(bad)
adc
aas
movs
mov
sbb
jmp
mov
lock
xor
jp
lods
ins
or
leave
in
ds
fimul
jmp
pop
jmp
(bad)
popf
das
xor
dec
fist
cmp
dec
jle
repz
repnz
xor
or
jae
enter
xchg
adc
ffree
sbb
pop
mov
(bad)
daa
in
sbb
cmc
xor
outs
call
xchg
adc
inc
arpl
scas
mov
fsub
inc
push
xor
pop
stc
mov
inc
lods
retf
jae
push
jle
cmp
jmp
inc
xchg
cwde
bound
push
jmp
(bad)
iret
stos
es
inc
dec
push
push
jmp
imul
fs
arpl
pop
sti
ror
jg
mov
sbb
fadd
inc
push
inc
int
imul
or
cwde
adc
pop
cmp
xor
in
xchg
jae
in
cmp
repz
adc
pushf
or
movs
cli
inc
add
fs
sub
mov
xchg
popa
lods
mov
mov
jle
inc
scas
pushf
ja
mov
int3
test
push
push
dec
pop
inc
adc
enter
(bad)
push
shl
hlt
cmp
mov
imul
or
mov
fs
or
dec
mov
rcl
loopne
out
cwde
xchg
mov
mov
push
(bad)
fdiv
int3
jb
xchg
sub
jl
outs
sbb
cmp
outs
cwde
push
sbb
int
jle
jge
loope
add
imul
fidiv
or
cmps
es
cmp
mov
pop
or
clc
movs
in
jle
dec
ds
dec
call
mov
xchg
sahf
shl
or
rcr
lahf
ins
sbb
xchg
pop
jns
lds
ficom
hlt
jbe
outs
and
sub
les
mov
mov
scas
adc
or
cmps
loop
jbe
aas
gs
mov
dec
inc
or
mov
cmp
mov
test
lock
lahf
cwde
xor
cld
mov
mov
in
inc
xor
(bad)
and
out
and
pop
clc
movs
mov
xor
or
cmp
xchg
lock
(bad)
hlt
xchg
stc
test
sar
xchg
je
call
lods
pop
pop
cmp
sbb
mov
xor
fcom
jae
adc
cmps
fist
push
or
call
cdq
xchg
inc
cmp
cmp
sub
push
loope
mov
repnz
aaa
pop
nop
in
in
fmul
jl
out
jmp
jnp
in
pushf
pusha
xabort
inc
call
stos
test
mov
add
addr16
loope
dec
xor
add
fcmovbe
mov
push
pop
scas
push
pop
jmp
sar
jecxz
(bad)
fidivr
lods
and
dec
in
xor
jno
pushf
mov
(bad)
outs
xor
xchg
cmc
or
aam
mov
stc
call
stos
pop
adc
sbb
xor
pop
push
pop
mov
inc
lods
pop
pop
stos
pop
or
out
dec
mov
sub
fsub
pop
push
aad
adc
icebp
repnz
jbe
(bad)
aaa
inc
aaa
gs
push
push
inc
xlat
(bad)
lock
or
push
leave
add
pop
or
sahf
jmp
stos
lods
cmp
jg
(bad)
or
adc
xor
shr
push
dec
pop
jae
in
mov
pop
ss
dec
add
data16
add
pop
add
cdq
and
movs
xchg
push
cmp
mov
inc
bound
aad
retf
in
pop
gs
movs
adc
inc
fucomp
inc
in
sub
xchg
adc
add
cli
cmp
out
mov
fdiv
cs
push
mul
push
or
shl
imul
in
ret
mov
pop
iret
and
pop
push
lods
repz
or
adc
icebp
jl
mov
outs
jle
and
fldcw
mov
stos
adc
dec
hlt
jmp
in
mov
and
mov
mov
test
cmpps
je
jge
je
in
in
fldcw
push
dec
adc
mov
mov
mov
mov
dec
ss
pop
or
and
and
sub
adc
adc
jne
into
dec
arpl
fwait
cld
cmps
sti
and
iret
push
jb
mov
or
xor
or
sub
fmulp
cwde
int
adc
jno
test
shl
inc
cmps
mov
stc
ret
aas
or
push
sub
push
in
jecxz
dec
mov
jle
fcomi
pop
fdivr
shl
popa
xchg
pushf
mul
pushf
inc
clc
fdiv
mov
ja
movs
bound
(bad)
shl
cli
push
jl
mov
out
push
sbb
xchg
push
push
mov
pop
xchg
les
lahf
aam
cmps
jo
test
stos
push
mov
in
xchg
or
fmul
loop
jg
push
test
mov
push
add
cs
retf
adc
or
fidiv
push
inc
mov
dec
sub
mov
xor
xchg
repz
sbb
call
arpl
popf
(bad)
call
mov
inc
cs
inc
repz
adc
aad
dec
sbb
sti
in
dec
xchg
movs
mov
cmp
int
mov
xchg
in
movs
outs
loopne
call
xor
cmp
mov
mov
jns
sbb
fild
mov
inc
hlt
cmp
mov
cmc
ficomp
inc
cmp
hlt
add
lea
test
loop
pop
imul
sbb
fisub
fisub
sar
sub
aad
scas
sbb
movs
lea
shl
pop
rcr
jle
inc
mov
xchg
sub
dec
neg
repz
aad
mov
or
mov
addr16
sti
inc
push
ss
test
or
add
cmc
add
in
xchg
xor
ds
cmp
and
sub
or
xchg
cmp
mov
pop
dec
std
retf
movs
push
push
mov
icebp
ds
dec
or
daa
hlt
(bad)
bound
dec
adc
je
mov
aad
adc
mov
mov
outs
add
retf
fnstcw
push
xchg
dec
cmp
ja
mov
outs
cmp
repnz
retf
enter
sbb
pop
pop
ja
add
es
cmp
aaa
mov
jns
mov
dec
into
test
sub
les
mov
stos
dec
cli
(bad)
inc
mov
inc
pusha
daa
dec
xchg
(bad)
push
in
inc
adc
cmp
dec
jb
mov
cmp
jbe
cld
push
mov
xchg
xadd
pop
icebp
add
fnstsw
sbb
adc
xor
sub
sub
inc
in
jge
mov
fistp
jg
pop
outs
jmp
stc
sbb
dec
dec
in
fidiv
or
loop
movs
aad
inc
es
adc
es
cmp
iret
stos
data16
out
fs
rol
add
neg
xor
adc
imul
sbb
sbb
push
pusha
(bad)
mov
sub
sbb
adc
inc
add
adc
fsubp
jnp
ret
sub
dec
bound
pop
shr
xor
out
mov
mov
and
jnp
lock
lods
xor
popa
sbb
(bad)
pop
or
test
add
ret
xchg
movs
bound
xchg
jnp
adc
imul
inc
dec
jp
mov
call
push
ret
adc
jl
adc
adc
pushf
xor
popf
push
sbb
imul
and
inc
sub
jno
out
mov
add
call
dec
imul
imul
fdiv
mov
push
rol
fst
mov
aam
and
mov
clc
sub
inc
fisubr
jbe
lds
adc
es
mov
mov
push
cmps
icebp
mov
iret
sbb
shl
out
jge
or
inc
dec
jl
xchg
pusha
sbb
dec
cmp
push
mov
xchg
push
lea
xor
xor
sub
mov
test
data16
les
lods
aam
or
dec
add
(bad)
sbb
ds
repz
lea
outs
jno
test
jnp
pop
push
aaa
pop
sub
mov
das
ret
dec
ins
mov
sub
aam
cmps
(bad)
int3
(bad)
fld
add
(bad)
stos
shl
scas
push
or
push
xchg
popa
mov
sub
aam
inc
shl
imul
pop
jp
test
enter
and
add
in
mov
cld
mov
mov
xor
mov
push
data16
sti
clc
aas
and
sbb
and
es
mov
add
jbe
dec
in
push
out
es
dec
repnz
or
mov
leave
mov
inc
push
push
bound
or
loop
in
ins
es
or
adc
mov
xchg
jns
sub
pop
inc
loopne
cmps
push
test
xchg
dec
pop
jne
test
scas
repz
inc
adc
sti
fs
mov
loopne
mov
ins
std
pop
sub
add
or
scas
add
mov
jge
mov
mov
cmp
(bad)
mov
xor
ins
cmps
sub
repnz
mov
lds
hlt
xchg
mov
push
cmp
xor
test
ins
mov
(bad)
cdq
lahf
push
pop
xchg
je
and
xchg
cmp
jmp
sbb
sub
fimul
lods
sbb
les
dec
xchg
jno
xor
mov
xor
jno
inc
call
pop
xor
inc
or
clc
jb
fsubr
push
test
mov
inc
adc
add
bound
mov
pop
nop
enter
jmp
sbb
mov
mov
xlat
js
cmp
int
inc
inc
icebp
sub
daa
mov
inc
pop
shr
cmp
jg
push
inc
sub
lea
arpl
div
test
ja
and
rcr
mov
and
adc
and
jne
out
ror
dec
lods
lds
cmp
xor
cmc
call
jmp
xor
fiadd
push
in
in
mov
push
jmp
(bad)
neg
jbe
ror
add
push
pop
dec
cwde
call
test
retf
and
fcomp
std
push
mov
lods
ins
jno
lock
aad
or
sub
mov
pop
pop
in
push
(bad)
out
or
sub
sar
cmovns
sti
jecxz
call
or
rcl
lock
jne
xlat
and
sbb
jmp
ror
inc
mov
inc
ds
mov
jnp
jbe
retf
mov
(bad)
stos
add
xor
push
add
aam
clc
pop
out
mov
jg
ret
dec
and
push
shl
dec
iret
test
mov
or
mov
addr16
jl
int
push
or
inc
sub
xchg
xor
out
jecxz
stos
sub
leave
lds
cmp
or
mov
sti
rol
pop
ins
ja
stos
shr
mov
or
mov
sub
push
clc
mov
fwait
sbb
xor
mov
lock
xchg
sbb
push
sub
js
push
xor
mov
(bad)
xchg
xchg
inc
scas
jecxz
ja
xor
fldenv
inc
or
pop
jg
jge
mov
gs
xchg
mov
scas
mov
pop
repz
(bad)
push
xor
out
cmps
xor
xor
fild
add
xchg
lods
int
mov
pop
xchg
or
mov
fs
test
mov
jno
shl
aas
ins
ss
in
jo
inc
inc
or
or
fs
fs
xor
xchg
(bad)
loopne
cmp
fdiv
daa
test
jp
pop
jns
xor
mov
mov
inc
popa
mov
cdq
or
jns
inc
xchg
xor
lock
sahf
xchg
cmp
fidivr
jg
push
adc
in
adc
adc
xchg
add
in
and
push
mov
fimul
push
xor
jmp
cmp
inc
repnz
jbe
push
fstp
jge
enter
xchg
scas
psrlw
in
push
mov
push
dec
xor
xor
sbb
inc
mov
push
xchg
inc
sar
xchg
sbb
push
mov
ins
add
pop
out
test
cmp
adc
fs
and
scas
stos
fs
push
or
lahf
dec
out
stos
and
jne
sbb
xchg
jl
inc
dec
icebp
sbb
sub
sbb
imul
das
into
add
leave
sti
adc
mov
lds
cwde
xor
add
test
adc
retf
add
add
je
scas
out
sti
cmp
push
test
mov
shr
out
addr16
cmp
inc
adc
xchg
mov
xchg
lods
pop
cdq
sti
mov
dec
pushf
(bad)
xchg
stos
xchg
leave
lock
das
push
jne
test
xchg
in
fnstenv
bound
or
in
inc
mov
ja
pop
aaa
and
sub
retf
xchg
and
pop
and
sbb
jle
cmp
dec
pop
add
aaa
inc
adc
xor
jo
xor
fld
pop
mov
sbb
stc
lds
mov
sub
fldcw
push
push
mov
je
lea
xchg
int
adc
xchg
std
mov
mov
mov
sub
xchg
(bad)
in
shl
adc
mov
fsubr
fld
xor
lea
mov
push
pop
icebp
mov
xacquire
dec
dec
js
push
dec
dec
loopne
inc
xlat
push
ins
test
imul
les
pop
test
mov
pop
cdq
popa
rcr
nop
lock
into
pop
push
jle
push
cld
shl
add
adc
cmps
inc
leave
ins
mov
cwde
add
and
cmps
and
js
inc
fwait
scas
bound
xchg
ret
or
(bad)
xchg
xor
jb
ror
push
aas
sbb
cld
sbb
mov
jge
push
idiv
jmp
cmp
pop
rcl
sti
out
xor
cmp
lods
push
add
(bad)
lods
popa
jp
imul
sahf
bound
jmp
cmp
mov
inc
sub
lock
(bad)
or
shr
cdq
fcmovnb
sub
xchg
cmp
push
rep
xchg
aas
and
push
out
sub
loop
dec
addr16
add
xor
add
cwde
in
xchg
pop
arpl
jb
and
test
scas
pop
adc
jmp
xor
movs
movs
cld
push
inc
sub
fwait
mov
jns
sbb
push
and
fs
xor
imul
push
and
rol
or
shl
xchg
call
dec
pop
sbb
iret
sbb
in
retf
cmc
push
dec
aaa
retf
imul
rcr
int
jmp
mov
(bad)
or
out
add
and
jb
jecxz
cmp
ret
adc
jbe
dec
iret
or
test
out
mov
ins
push
xor
in
jo
dec
and
push
sbb
stos
sub
and
call
add
inc
jmp
cmp
cmp
pusha
jmp
mov
call
in
push
inc
add
inc
pop
jmp
xchg
repz
push
sbb
push
cmps
adc
add
mov
pop
push
int
nop
dec
sahf
imul
repnz
jb
aad
mov
jae
mov
out
and
mov
add
es
sbb
add
leave
jecxz
and
mov
cmp
sub
dec
mov
in
mov
pop
ret
rol
sbb
dec
clc
push
js
sub
sbb
loopne
aam
gs
adc
jmp
repnz
int
mov
fincstp
and
xchg
ins
mov
xor
dec
(bad)
cwde
jns
sbb
fdiv
or
cli
sahf
scas
dec
push
sub
rol
fldenv
gs
arpl
jne
repz
leave
fs
inc
add
pop
jmp
jne
std
jae
popa
xchg
xchg
push
test
cld
and
dec
mov
dec
sub
(bad)
dec
iret
call
(bad)
shr
pusha
mov
cmp
std
cmc
aad
out
outs
xchg
mov
mov
(bad)
daa
pop
cli
jns
adc
lahf
jno
xchg
cld
in
popa
ja
ffreep
ror
mov
shl
sbb
inc
xlat
scas
cmps
lahf
pop
xchg
lods
push
pop
push
push
cmp
jmp
cli
xchg
mov
fimul
call
pop
repnz
sbb
mov
jmp
(bad)
mov
popa
inc
pop
js
lahf
pop
sbb
xchg
scas
inc
or
mov
pop
adc
sahf
adc
les
adc
adc
call
sar
add
shl
repz
movs
in
test
and
out
xor
jecxz
push
cmp
aas
mov
repz
cmp
or
sbb
sub
imul
icebp
pop
xchg
jecxz
sar
in
icebp
add
sbb
sahf
sbb
lds
scas
mov
xor
ss
mov
iret
cmp
pop
ret
es
add
fcmovnbe
fistp
push
scas
icebp
dec
(bad)
aad
in
jecxz
dec
cli
in
js
cmp
mov
mov
(bad)
mov
neg
dec
jmp
stos
ret
adc
aaa
pushf
push
pop
jne
sub
outs
or
cli
(bad)
jns
jge
push
mov
and
jle
sub
aam
cmp
jae
rcl
stc
aas
popa
ja
pop
dec
bnd
ror
sahf
dec
adc
pop
cmp
push
pushf
sub
and
in
stos
add
scas
fisubr
mov
mov
call
dec
es
stc
or
arpl
les
mov
add
or
nop
mov
inc
cwde
aam
movs
aad
aam
mov
pop
cli
fnstsw
xchg
cmp
test
push
pop
jmp
outs
stos
in
xlat
test
(bad)
mov
cmp
and
dec
cmc
pop
push
lock
xchg
in
xlat
retf
idiv
or
in
or
xor
arpl
add
mov
fist
pop
jecxz
mov
mov
test
outs
adc
jmp
sub
mov
movs
js
daa
lods
(bad)
call
nop
xor
cmp
fild
pop
out
mov
mov
cmps
mov
mov
pushf
inc
enter
arpl
mov
push
jge
mov
add
daa
not
ins
mov
xchg
mov
pop
and
das
je
into
mov
xchg
cmp
or
sar
retf
movs
mov
int
jp
push
xchg
cmps
sub
sbb
push
add
cmp
mov
and
dec
mov
psrld
jo
inc
call
jb
jg
sub
popa
sub
dec
lea
push
mov
sub
mov
cmp
fcmove
shl
iret
cmp
add
cmp
inc
je
push
call
mov
popf
jl
cmp
mov
je
int
out
sar
pushf
sbb
add
add
test
and
dec
jo
push
fsubr
lods
lock
dec
xchg
sbb
jmp
jbe
cmp
push
int3
lds
mov
(bad)
jecxz
push
mov
push
jne
mov
stos
or
xor
into
dec
adc
rcr
push
pusha
xchg
jno
pop
mov
es
mov
push
fisubr
pushf
mov
out
jns
repnz
cdq
push
cwde
pop
jnp
mov
lock
loopne
and
cmp
mov
retf
dec
fbstp
pop
out
in
push
mov
icebp
in
scas
or
mov
cmova
fbstp
push
inc
inc
int3
into
ins
(bad)
pop
jge
shl
shl
cli
ja
jmp
sub
enter
dec
sub
mov
sbb
and
jmp
stos
inc
push
out
retf
and
not
fst
ret
adc
mov
xor
shr
int
pop
int
out
call
adc
out
sbb
adc
rcr
dec
out
sub
cld
scas
xor
push
lods
fisub
mov
out
lods
dec
sbb
mov
jns
adc
sahf
inc
test
adc
sbb
xchg
push
stc
add
inc
mov
(bad)
and
not
fmul
lods
fs
jmp
outs
jb
cdq
fisttp
jmp
aaa
in
bsr
jl
pop
repz
movs
pop
div
imul
fnstcw
jmp
mov
mov
int3
aam
inc
enter
sar
add
popf
jl
(bad)
rcl
add
push
mov
dec
pushf
sub
jecxz
lea
sbb
xor
(bad)
adc
sbb
enter
sbb
out
pop
retf
dec
clc
and
movs
(bad)
loop
mov
movs
daa
inc
sub
imul
mov
cmp
mov
pop
pop
or
(bad)
in
jge
iret
xchg
enter
push
and
cdq
andnps
fucomp
mov
das
sub
adc
out
fstp
in
mov
test
sub
loopne
mov
and
lds
int
push
clc
push
dec
mov
bound
mov
and
mov
sub
cmps
push
or
repnz
test
dec
iret
fidivr
repnz
cmps
ret
dec
std
neg
xor
aas
cwde
imul
cmps
jae
and
dec
pop
int
mov
xor
inc
mov
lods
(bad)
inc
xrelease
ss
inc
jnp
bound
aad
hlt
mov
sub
hlt
sbb
xor
push
lea
jmp
pop
push
mov
mov
dec
sbb
popa
jo
aas
out
add
jecxz
cmc
ficom
clc
or
mov
gs
movs
sub
dec
xchg
inc
movs
scas
jecxz
pushf
and
call
or
sbb
sub
pop
lahf
dec
xchg
xchg
jmp
push
adc
outs
cmp
int
mov
adc
aaa
lds
aaa
dec
cmp
push
mov
or
sub
ins
adc
inc
sahf
push
retf
add
scas
xor
aad
leave
imul
dec
jne
shl
out
inc
aam
sub
cmp
sahf
xchg
ins
jno
sbb
adc
sti
sbb
rcl
sbb
enter
add
stc
sub
jne
clc
stos
sti
lahf
jmp
sbb
pop
iret
ror
jecxz
dec
dec
sub
je
cmp
enter
push
push
mov
enter
enter
test
ins
jge
adc
add
xchg
jno
xor
pop
scas
gs
repz
call
cmp
lods
clc
mov
add
pop
mov
repnz
xchg
ficomp
jmp
cld
(bad)
inc
lahf
leave
popf
jmp
pop
add
ja
sti
rcl
dec
data16
pusha
adc
cs
aaa
fs
hlt
cmp
mov
sti
mov
xchg
mov
mov
dec
stos
(bad)
xchg
inc
into
and
jg
and
push
mov
mov
loope
sub
mov
les
xlat
add
rcr
mov
mov
and
scas
jp
rol
(bad)
xchg
xor
fstp
mov
fwait
add
xchg
fs
movs
or
lds
mov
ds
inc
cmp
or
call
dec
int
inc
fldenv
mov
sar
(bad)
jns
adc
loop
int
mov
and
int
inc
das
adc
fwait
or
adc
mov
mov
repnz
rcl
in
mov
rcr
jge
or
out
bound
adc
stos
ins
inc
mov
pusha
mov
jae
xchg
popa
pusha
dec
push
pop
adc
aas
ja
mov
or
and
jmp
fdivrp
push
retf
xlat
popf
repz
sub
nop
and
sub
push
mov
movs
das
aaa
jg
stos
sbb
icebp
(bad)
adc
test
pusha
clc
sbb
popf
imul
(bad)
(bad)
mov
loopne
aas
mov
movs
stos
inc
and
(bad)
jmp
mov
cld
xor
cmp
and
and
das
mov
jp
pop
mov
cs
frstor
ret
mov
push
fmul
cmps
sbb
ins
and
pop
or
rol
mov
cmps
jmp
sar
cmp
jp
sbb
xchg
mov
jg
xchg
sub
mov
sar
jl
imul
movs
push
pop
and
mov
repnz
and
mov
xchg
xor
mov
popa
dec
cmp
out
mov
sbb
mov
add
jb
aad
inc
arpl
test
dec
xor
inc
int
and
fwait
(bad)
jp
sub
stos
cdq
js
add
daa
or
pop
pop
outs
cmp
mov
loopne
mov
push
sbb
lods
fs
std
jle
dec
mov
rcr
xchg
sub
xchg
jge
fist
push
push
adc
inc
cmps
pop
mov
inc
xchg
mov
stc
dec
pop
nop
mov
pop
add
jg
popf
push
lods
sbb
frstor
jl
sub
lahf
add
sbb
mov
mov
std
stos
ins
stos
stos
ins
or
push
sar
rol
repz
bound
les
cmp
mov
adc
or
push
mov
push
xchg
jnp
add
call
jae
sub
test
jg
ror
fbstp
movs
pop
or
push
add
ins
mov
jmp
add
sub
stc
jo
call
mov
pusha
fwait
sub
adc
sub
push
repnz
imul
and
push
jns
jg
and
inc
inc
push
call
cmp
add
cmp
test
and
dec
mov
xchg
imul
int3
lods
pop
cmp
int
repz
jne
arpl
les
jo
das
seta
push
mov
sub
fstp
mov
enter
fnop
and
mov
hlt
lods
inc
and
jmp
inc
mov
imul
inc
fistp
imul
adc
mov
hlt
pop
cmp
or
out
adc
push
mov
dec
mov
inc
mov
mov
jbe
and
cmps
cwde
scas
dec
cmp
and
ins
ret
cs
scas
int3
ins
sar
cmps
shl
je
mov
and
inc
out
cmps
sub
mov
ins
rol
xchg
gs
leave
outs
and
mov
pop
lea
adc
loopne
(bad)
and
mov
fsubr
fistp
inc
or
xor
in
mov
(bad)
jno
xor
xor
(bad)
jp
call
inc
mul
sar
inc
sbb
and
lds
jns
aad
movs
inc
adc
pop
push
std
mov
scas
sbb
stos
sahf
rol
jae
arpl
adc
(bad)
push
(bad)
mov
sbb
ret
imul
cmp
imul
sub
dec
cmp
enter
push
xchg
jae
(bad)
sub
stos
mov
repz
push
adc
retf
mov
sahf
in
sub
sub
fsub
loope
push
mov
mov
jno
outs
xchg
inc
(bad)
stc
jg
in
mov
xchg
and
xchg
lahf
rcl
mov
or
or
imul
imul
xchg
ds
pop
cs
in
gs
mov
jmp
sahf
cli
push
test
out
mov
xchg
in
into
frndint
jbe
jo
outs
pop
(bad)
repz
and
or
mul
sub
xchg
loopne
add
fisubr
mov
aad
cmps
scas
or
pop
dec
xor
inc
jecxz
jp
mov
mov
mov
jne
adc
and
fs
pop
or
cwde
adc
lahf
daa
xchg
(bad)
retf
mov
popa
push
lods
mov
xchg
add
jno
push
cmp
cdq
out
cmove
retf
or
retf
dec
mov
add
xchg
mov
ss
adc
inc
xchg
loopne
pushf
rol
out
push
pop
scas
aad
sbb
pop
mov
loope
outs
gs
or
inc
jne
add
mov
xchg
cmp
xor
sbb
xchg
out
dec
popa
fwait
adc
or
inc
and
je
dec
(bad)
repz
outs
inc
dec
(bad)
stc
(bad)
push
ja
adc
jl
xor
inc
inc
repz
xor
mov
ret
mov
pop
jmp
sub
sbb
push
hlt
leave
test
jnp
adc
mov
mov
out
push
adc
sbb
push
iret
jl
in
pop
imul
xchg
sbb
push
daa
push
xlat
mov
cmps
imul
in
dec
lea
push
lods
std
or
xchg
ss
sbb
out
in
sub
xor
shl
mov
mul
push
sub
fadd
mov
out
cmp
xlat
loopne
out
cdq
jnp
cs
xor
cwde
imul
inc
jge
or
nop
or
movs
pop
leave
xor
dec
ret
fwait
cmp
out
pop
sub
and
sbb
dec
test
mov
inc
icebp
packssdw
repz
cmp
xor
idiv
push
cmp
dec
mov
popa
jg
test
pop
xchg
dec
mov
jmp
xchg
push
dec
sbb
add
call
pop
pop
test
push
gs
xor
adc
fmul
mov
jmp
mov
aad
pop
idiv
sbb
jbe
movs
lea
jne
pushf
(bad)
lods
jge
sti
and
rcl
movs
dec
mov
fsub
aaa
(bad)
nop
push
mov
stc
fwait
pop
pop
sbb
xor
dec
iret
push
mov
in
add
and
xor
test
(bad)
(bad)
and
dec
into
mov
and
mov
xor
push
and
xchg
sub
xor
pop
aad
xchg
fdivr
adc
jge
xchg
leave
fisub
push
movs
outs
idiv
repnz
ins
mov
inc
ja
scas
push
pop
add
stos
mov
retf
add
and
or
cdq
mov
lds
das
cmp
cmps
stos
or
sub
xchg
ins
or
hlt
out
nop
adc
mov
push
sbb
imul
add
jns
imul
pop
and
push
scas
imul
pop
call
mov
pusha
or
mov
jnp
aam
or
push
stc
jb
mov
sub
xor
xor
addr16
mov
pusha
sub
rol
cmps
out
push
aad
mov
or
add
push
imul
xlat
xchg
fild
jae
nop
mov
dec
sahf
or
or
ins
push
int
sbb
aas
adc
arpl
xor
xor
bound
lea
jmp
test
cmc
pushf
imul
and
retf
repz
cmp
xchg
or
mov
lock
scas
xor
lods
int
sub
out
push
sub
lahf
xchg
adc
neg
push
fbld
inc
repnz
mov
and
cmp
mov
or
cmc
cs
cwde
loop
pop
mov
ficom
shr
pop
pop
add
add
adc
sub
jbe
or
cmp
cbw
push
aas
or
in
xchg
lds
cmp
and
cli
stos
pop
pop
push
ins
lahf
sub
mov
movs
scas
das
or
sub
xchg
mov
pop
test
pusha
add
jns
std
mov
jo
jmp
pop
aad
jle
xor
pop
fcmovnb
adc
add
dec
loop
test
stos
sub
ja
test
mov
mov
cwde
jmp
or
daa
arpl
lods
xchg
fs
push
pop
in
push
xor
mov
or
mov
pusha
mov
lods
mov
stc
pop
cld
fidiv
xor
xchg
pusha
inc
cdq
adc
test
xchg
dec
int
xchg
or
xchg
fwait
pop
dec
dec
jmp
sti
aam
xor
mov
push
push
loop
out
in
inc
add
mov
fnstsw
call
loop
test
rcl
inc
dec
sbb
inc
mov
int3
adc
les
mov
es
adc
mov
mov
data16
push
push
inc
dec
pushf
mov
idiv
movs
xor
mov
gs
dec
cmp
or
(bad)
mov
sub
ja
push
sbb
jmp
jmp
lods
jae
cdq
fidivr
adc
mov
(bad)
jecxz
sbb
pop
and
add
mov
loopne
and
sbb
inc
jecxz
rcl
scas
mov
jno
mov
push
jb
call
es
ret
jp
(bad)
data16
fistp
clc
retf
push
jb
(bad)
je
add
pop
adc
ficomp
inc
mov
jnp
jmp
mov
push
lock
sub
cli
add
add
adc
adc
retf
into
jno
push
enter
lods
add
scas
leave
lods
mov
cmc
mov
adc
sub
mov
shl
cmps
scas
adc
outs
aam
xor
inc
jl
test
sbb
push
arpl
and
ror
mov
addr16
xchg
out
popa
jne
xor
xchg
daa
call
ins
jns
enter
push
xchg
movs
mov
test
xor
sub
shr
and
pusha
mov
jne
bswap
or
fidiv
sbb
jge
sbb
push
cmps
pop
cmps
fld
leave
dec
jmp
in
jae
mov
test
ret
es
sub
push
pandn
or
push
push
outs
xchg
add
pushf
fnstenv
out
movs
pop
mov
inc
(bad)
jae
xor
out
out
js
push
pop
xchg
enter
aad
pop
push
push
cs
push
pop
push
std
and
test
sbb
int
jecxz
stos
mov
mov
or
cmps
fisub
ins
xchg
outs
cli
xchg
cmp
loop
jns
sbb
clc
and
popf
nop
dec
retf
mov
or
ins
cmc
or
jmp
test
adc
mov
call
xchg
daa
in
aad
das
jle
mov
mov
lahf
mov
add
fs
in
and
xchg
sbb
les
cmps
outs
add
repz
mov
pop
in
xlat
and
push
movs
push
fcmovbe
mov
jle
sbb
bnd
mov
int
je
pop
push
ins
jecxz
mov
repz
add
push
stos
jno
or
out
jge
stos
sub
out
dec
jmp
shl
cmp
dec
shl
fisttp
out
jp
mov
stc
out
lea
xor
shl
and
repnz
lahf
dec
add
cld
popa
jnp
lods
sahf
sar
or
scas
mov
xchg
scas
inc
(bad)
stc
imul
fidivr
(bad)
lahf
pop
adc
test
mov
push
jbe
ror
xchg
sbb
mov
sbb
movs
jmp
and
pop
jo
out
add
or
jg
inc
fbstp
les
fucomip
test
js
cmps
xor
fcomp
mov
xchg
push
sbb
push
xchg
sbb
inc
mov
fs
push
(bad)
sbb
test
inc
cmp
dec
imul
jecxz
int3
xchg
push
mov
cmps
xchg
cs
mov
jmp
rol
leave
xchg
cdq
add
or
inc
aas
ins
dec
mov
dec
(bad)
mov
shr
jp
stos
fdivr
add
jo
iret
xor
xchg
mov
adc
neg
leave
lea
mov
inc
mov
in
jge
and
xchg
adc
jb
jmp
xchg
xor
sub
clc
je
xchg
push
test
sub
out
loop
adc
into
pop
shl
cmps
ins
in
pop
int3
mov
in
jle
pushf
dec
mov
add
clc
pushf
jecxz
pop
cmp
sub
cld
adc
xchg
call
cmp
sti
jle
push
mov
in
sbb
jae
jns
mov
aad
xchg
dec
stos
dec
mov
sub
imul
fnstenv
mov
xchg
jne
sub
clc
xchg
push
ins
fs
push
rcr
inc
xor
in
sbb
xor
xchg
sbb
sub
adc
mov
retf
xchg
jmp
jl
sbb
push
shr
adc
lods
ins
inc
int
and
mov
aaa
xor
rcr
xor
cmps
ret
xchg
inc
cmps
jbe
nop
out
leave
cli
xor
add
hlt
xchg
loop
addr16
jge
push
sub
(bad)
call
add
cmp
cmp
push
push
pop
xchg
(bad)
ror
adc
jnp
mov
add
mov
jmp
push
stos
xor
icebp
scas
out
mov
in
sub
fld
(bad)
push
ins
stos
fidiv
xor
fld
or
call
mov
xchg
xchg
or
push
sbb
sub
push
rcr
sbb
movs
mov
mov
xor
xor
sub
(bad)
mov
test
add
mov
push
jne
cmps
mov
idiv
addr16
sub
add
push
dec
pushf
adc
shl
jbe
jle
push
inc
xchg
stos
adc
aaa
pop
and
jg
out
jnp
and
je
in
pop
sbb
pop
shl
jmp
fs
out
pop
add
xchg
xor
sub
and
mov
cld
imul
ins
inc
pop
mov
and
sti
scas
addr16
aaa
imul
and
not
cmp
and
test
sub
retf
lahf
je
adc
ja
cmp
and
and
push
adc
xchg
adc
pop
or
lods
das
mov
aad
jecxz
sub
mov
sbb
dec
arpl
ret
arpl
fdiv
pop
sub
mov
js
and
add
cmps
cld
jp
sbb
jmp
inc
and
cmps
sub
cmp
les
leave
cmp
xchg
mov
stos
aad
fld
jbe
push
imul
jae
nop
mov
adc
les
clc
ds
sbb
sbb
inc
xor
cs
(bad)
sbb
mov
test
in
sahf
sub
shl
xchg
sbb
cmp
or
mov
lea
loope
add
imul
xchg
cmp
adc
ss
xor
loop
pop
ret
(bad)
imul
shl
push
fdivrp
mov
sbb
scas
xlat
mov
jmp
xlat
pop
dec
pop
ss
and
movs
sub
mov
(bad)
sub
outs
mov
mov
xor
lahf
iret
popf
adc
pop
shl
(bad)
cli
inc
adc
dec
repz
mov
mov
sbb
enter
pop
fldenv
pusha
xor
xor
in
mov
dec
adc
push
jno
rol
ficomp
dec
add
rcr
scas
mov
mov
jno
dec
mov
xchg
arpl
jb
xchg
mov
push
pop
adc
xor
cmc
inc
xlat
(bad)
mov
(bad)
fdivr
(bad)
in
push
out
push
sub
popa
test
sbb
jnp
dec
mov
iret
or
ins
xchg
ret
pop
pop
jbe
sbb
fmul
cmp
int3
xchg
mov
int
sub
cdq
mov
mov
lods
fdivrp
test
dec
sub
inc
out
fdivr
xor
adc
mov
add
enter
shl
sbb
les
aam
dec
mov
in
in
stos
xchg
(bad)
retf
les
call
mov
fisubr
add
cmp
into
and
stc
mov
jge
add
jle
cld
enter
push
dec
stos
outs
je
add
sub
test
outs
cmp
btr
xchg
loope
fdiv
dec
cdq
lods
ss
jmp
test
adc
or
cmc
sbb
mov
dec
pop
loopne
fprem1
mov
xchg
cmp
jge
int3
mov
rol
ficom
dec
xor
add
dec
inc
(bad)
pop
punpckldq
adc
aas
jmp
push
popf
xor
cld
mov
nop
mov
mov
stc
or
ins
sti
mov
push
test
outs
retf
scas
fild
mov
inc
adc
and
cmp
movs
cld
and
jmp
push
adc
add
push
punpckhwd
rol
push
or
mov
inc
gs
xlat
xchg
push
test
inc
(bad)
fsub
sar
push
jns
jmp
div
out
clc
inc
into
in
xchg
pop
cdq
mov
fld
jnp
pop
sub
ss
add
out
cmp
pop
aam
xchg
jg
repz
arpl
jl
sub
adc
imul
xchg
cld
push
xchg
cmp
retf
sbb
mov
(bad)
pop
push
mov
cmps
call
sub
(bad)
xor
pop
push
test
sub
mov
jge
push
mov
inc
xor
aas
mul
ret
fwait
lods
pushf
sahf
jmp
mov
mov
dec
pop
push
lods
pop
add
dec
(bad)
imul
fxtract
test
imul
outs
fs
shl
mov
scas
push
jl
mov
or
cmp
in
push
int
mov
mov
inc
pop
inc
mov
sub
ja
cs
mov
add
test
fwait
mov
cmps
(bad)
cld
cmp
lock
shl
cwde
dec
xchg
or
jp
movs
xlat
xchg
jnp
push
sub
and
inc
ja
stos
(bad)
sub
xchg
fucomp
mov
ins
inc
cmp
xlat
(bad)
push
xor
psubusw
mov
or
(bad)
(bad)
scas
jg
xor
imul
pop
jno
and
popa
cmp
xchg
mov
dec
mov
dec
dec
and
pop
cmp
dec
mov
fimul
xchg
in
jecxz
push
adc
fld
sbb
push
cs
jbe
pop
xchg
sub
mov
sbb
mov
mov
scas
cmc
cmp
xor
cmp
lea
push
je
lds
fs
ret
in
ret
pop
call
xchg
push
cmps
ss
inc
imul
sbb
sub
xchg
mov
dec
arpl
cmp
fmul
fisubr
sbb
jo
add
add
mov
pop
xchg
push
mov
adc
push
je
scas
jno
popf
gs
into
in
imul
jmp
mov
in
out
mov
inc
fistp
mov
cdq
push
add
stos
stos
pop
pop
call
cmp
inc
inc
fs
xchg
mov
push
repnz
xor
stc
cmps
adc
jecxz
test
pusha
add
arpl
sbb
lds
test
in
xor
pushw
in
adc
sti
pop
hlt
add
ds
je
pop
jb
rcl
dec
jmp
mov
ja
sub
repnz
mov
pop
adc
daa
fadd
mov
mov
pop
lds
arpl
cmps
mov
mov
jne
fld
xchg
add
jmp
adc
out
sub
test
leave
xlat
mov
shl
out
mov
in
cwde
cmp
push
pop
sbb
in
mov
aas
cmps
pop
pushf
push
dec
cs
mov
cwde
ins
xchg
imul
add
lea
dec
cmps
aad
test
mov
imul
cmp
add
sub
repnz
ror
mov
mov
pop
jno
mov
dec
lock
fild
mov
popa
fwait
and
mul
stos
xor
pop
jne
int3
mov
sti
jl
xchg
leave
mov
sbb
clc
enter
lahf
jle
inc
(bad)
lock
hlt
inc
pop
cmc
cmps
add
pop
mov
cli
mov
push
mov
cmps
inc
and
and
dec
rcr
pop
pushf
in
mov
es
dec
lahf
aam
add
ret
(bad)
fwait
repnz
fs
jge
cmp
clc
jge
out
fisubr
jno
dec
push
jo
push
loop
push
mov
xor
leave
pop
mov
mov
sub
jg
sar
(bad)
mov
retf
daa
loope
test
add
and
mov
lods
sar
mov
or
lea
dec
mov
nop
fsub
repz
push
add
aas
ficom
cs
push
or
shl
repz
enter
push
das
out
not
jae
cmp
fdiv
push
ret
lock
int3
cmp
push
js
mov
cmp
inc
stos
xor
les
in
inc
sub
call
dec
nop
cmp
mov
dec
sar
daa
adc
jbe
mov
sbb
lds
add
mov
retf
fadd
sbb
fdiv
sbb
stos
outs
fld
mov
lock
cmp
mov
out
jmp
lahf
mov
pop
leave
pop
sub
xor
adc
or
xchg
cmp
jae
xor
xor
loope
ud1
sbb
in
mov
sub
pop
sbb
or
mov
mov
inc
add
cwde
sub
adc
sbb
xor
xor
inc
inc
pop
add
imul
cld
cmp
mov
ror
mov
add
loope
xchg
xor
mov
or
mov
xchg
outs
fstp
push
pop
xchg
imul
das
xchg
jb
sbb
adc
icebp
mov
fs
cmp
cmp
inc
xor
mov
in
cmp
mov
loope
int
test
sub
call
sub
xchg
inc
or
cs
xor
or
arpl
add
fst
mov
sub
xchg
mov
sbb
cs
push
sbb
das
lock
aad
aad
nop
stos
ins
int3
(bad)
add
sub
mov
daa
dec
retf
sbb
test
ja
mov
xchg
je
adc
in
xrelease
out
cmps
cmp
fdiv
dec
dec
ret
loopne
aaa
dec
sub
add
adc
jge
jmp
jmp
and
jne
mov
dec
ss
outs
in
in
popa
mov
sub
fs
add
aaa
dec
dec
std
or
jo
ds
push
movs
dec
(bad)
lahf
out
inc
sub
lds
out
cmp
xor
sub
call
lds
cs
mov
cmp
mov
mov
mov
and
stos
xor
das
nop
dec
scas
sub
out
iret
adc
mov
xor
xor
cmp
dec
in
xchg
or
neg
and
daa
push
call
gs
test
mov
cmp
mov
ficomp
mov
sbb
adc
cmp
aam
sbb
aaa
and
sub
je
aad
xor
div
push
shl
lea
jne
cmp
mov
or
iret
sahf
popa
sbb
retf
push
arpl
mov
lods
mov
sub
mov
pop
fist
xchg
sub
dec
test
scas
xchg
mov
ins
mov
fs
pop
test
inc
xor
and
jecxz
outs
or
in
inc
and
lods
test
pop
in
mov
int
jne
mov
add
mov
cld
cmp
imul
xor
push
enter
add
jae
sar
and
addr16
movs
out
and
xchg
xchg
mov
xrelease
jecxz
dec
ficom
arpl
mov
and
sub
retf
jne
(bad)
ds
xchg
and
sub
pop
out
cmp
test
and
sub
jno
mov
mov
loope
in
dec
pop
imul
cmps
sub
rcr
dec
(bad)
jle
mov
retf
das
outs
ja
add
cs
jae
test
xor
push
stos
jne
push
jns
mov
xor
out
popf
mov
fsub
ficomp
gs
sub
jg
ret
push
mov
jp
(bad)
inc
jns
adc
push
(bad)
in
gs
push
enter
push
lods
push
into
jmp
pushf
(bad)
adc
pop
cli
dec
out
push
xor
and
jg
sbb
lea
fld
dec
sub
cli
daa
mov
cmps
fnstcw
pop
push
test
adc
pop
cld
lods
push
dec
and
ss
pop
mov
lods
or
or
int
icebp
rcr
scas
stos
dec
push
mov
call
push
inc
icebp
not
mov
movs
push
xor
ret
int3
xchg
adc
mov
fst
sar
jg
test
mov
lahf
adc
les
mov
xor
mov
xor
gs
mov
cdq
popa
or
(bad)
mov
mov
in
ja
adc
sahf
mov
mov
push
cmp
jge
sbb
cld
xchg
xor
popf
retf
ret
bnd
imul
out
mov
test
cmp
test
js
mov
mov
fcom
adc
pop
xor
lahf
pushf
push
jae
mov
movs
push
pop
icebp
jne
je
jne
pop
js
retf
es
into
call
inc
mov
jl
cdq
inc
mov
push
fmul
push
mov
jb
jmp
sahf
call
or
mov
mov
sti
arpl
sub
add
mov
loop
mov
ins
mov
ins
rcr
xchg
in
or
ja
stos
movs
(bad)
fst
or
cmp
int
mov
jecxz
mov
pop
dec
push
jecxz
lds
sbb
hlt
sbb
push
push
or
mov
repnz
adc
rol
rcl
aas
xor
and
test
push
lds
leave
fnstcw
mov
fstp
(bad)
pop
jbe
pop
push
mov
add
imul
je
xor
popf
mov
lahf
les
cwde
inc
mov
and
out
mov
jle
jo
ins
sbb
stos
mov
jp
pop
adc
cmps
sub
clc
jmp
jo
mov
sub
pop
xor
jecxz
test
mov
fdiv
pop
out
inc
and
sbb
push
inc
(bad)
(bad)
cmc
xchg
sbb
mov
push
imul
and
stc
(bad)
(bad)
fcmovnbe
xchg
pop
test
mov
cs
add
inc
retf
push
nop
inc
fadd
mov
or
or
aad
add
not
shl
sahf
nop
pop
test
sbb
icebp
fs
(bad)
push
nop
jb
add
je
and
and
int
out
add
mov
(bad)
jne
cmps
mov
cwde
retf
sbb
aad
jae
ds
popf
adc
jae
xor
mov
aas
pop
jmp
adc
or
movs
pushf
and
mov
sub
out
aaa
push
sub
xchg
jmp
arpl
push
imul
mov
and
or
push
pop
lods
sti
inc
sbb
mov
loop
(bad)
nop
pusha
mov
pop
clc
mov
cld
or
xchg
mov
popf
shr
mov
pop
push
movs
mov
pop
add
int
push
cmps
push
cmps
sbb
mov
out
adc
test
cdq
movs
xor
mov
dec
fisub
xor
or
nop
xor
mov
fcom
push
scas
sub
mov
inc
mov
adc
out
(bad)
fwait
sbb
lds
xchg
lock
push
push
fidiv
jmp
(bad)
inc
mov
add
mov
add
push
aad
in
dec
test
sub
adc
inc
mov
push
movs
inc
xor
xchg
xor
retf
(bad)
lds
call
outs
xor
push
dec
lock
std
jmp
sbb
lods
int
push
lds
mov
outs
fnsave
sbb
cmp
mov
sbb
(bad)
fwait
out
xchg
sub
and
cld
mov
movss
sub
push
jne
lock
test
(bad)
mov
daa
mov
or
aaa
or
(bad)
mov
call
and
jle
shr
xchg
inc
inc
cmovnp
dec
jmp
fst
adc
xchg
push
call
jmp
fbld
inc
jge
add
push
cli
jno
push
ins
jp
mov
and
mov
enter
jge
out
ror
xchg
sbb
mov
jns
mov
dec
mov
in
cmp
push
add
cmps
retf
loopne
fldenv
enter
xchg
mov
std
stos
in
push
mov
xor
sbb
in
mov
test
push
popa
sub
stc
arpl
lods
ins
cmc
mov
xchg
and
mov
push
dec
cmp
aas
scas
jbe
add
es
mul
loope
movs
scas
xor
jle
jg
mov
inc
cwde
push
nop
sar
popa
in
add
stc
cmp
fisub
scas
xchg
adc
fidivr
test
jmp
cwde
pusha
leave
jns
or
xchg
jne
dec
xlat
outs
test
or
dec
iret
cmp
into
aas
inc
sub
ins
outs
cmp
pushf
fld
sbb
xchg
add
dec
das
jecxz
xor
and
rol
in
mov
imul
addr16
add
dec
daa
movs
aad
xlat
add
aaa
lea
sub
cwde
adc
jbe
sub
jno
jmp
into
xor
test
js
mov
mov
fmul
mov
pop
pusha
and
js
or
cmp
scas
mov
or
add
hlt
sbb
xchg
sahf
popa
test
outs
cld
pop
push
pop
daa
icebp
add
stc
and
(bad)
aas
dec
fisttp
cmc
aas
in
push
test
sbb
mov
push
addr16
retf
cmp
mov
ffree
push
xchg
push
and
fisub
sahf
fdiv
cwde
sub
jns
mov
test
xlat
xor
aaa
push
sub
(bad)
jle
push
pop
mov
cwde
jb
cmp
leave
(bad)
push
jl
and
mov
dec
mov
call
adc
sub
jecxz
out
push
fst
mov
pop
push
mov
push
imul
push
or
fisttp
test
sub
rcl
inc
aaa
or
or
mov
pop
loope
pop
pop
xchg
xor
push
fistp
repnz
je
daa
(bad)
hlt
jno
pop
mov
jnp
js
adc
mov
sbb
mov
add
mov
push
cli
(bad)
push
(bad)
cld
adc
or
stc
push
fimul
sbb
jmp
inc
(bad)
jmp
sahf
add
pop
in
ja
sub
es
or
adc
jno
jge
jns
daa
inc
pop
pop
jp
or
push
ds
jmp
add
xor
jle
hlt
inc
add
pop
shl
(bad)
(bad)
pop
ja
jb
cwde
into
into
xchg
movs
out
mov
pop
jne
mov
inc
push
sbb
stos
and
idiv
jae
pop
mov
inc
jnp
pushf
jecxz
fidiv
xchg
popf
add
and
(bad)
dec
cmp
js
adc
nop
popa
push
test
mov
lods
cmp
mov
ret
mov
and
and
nop
adc
dec
shl
mov
mov
mov
mov
mov
(bad)
not
and
adc
and
imul
adc
dec
push
mov
jge
xor
retf
repz
movs
mov
sbb
aad
icebp
out
int3
jl
psubq
popf
adc
mov
aaa
push
jne
inc
call
rcl
xor
pop
sbb
or
inc
not
sub
(bad)
stc
pop
add
stc
adc
xchg
push
lds
cmp
js
add
pop
sahf
pop
shr
pop
dec
mov
imul
xor
clc
dec
std
movs
cmp
xor
test
xchg
ins
xor
out
retf
addr16
push
(bad)
in
push
sbb
mov
sub
les
jo
aad
cld
cdq
mov
push
cdq
sub
sahf
movs
scas
sbb
repnz
mov
adc
add
push
imul
(bad)
lahf
and
imul
sbb
cld
outs
jmp
mov
test
addr16
mov
cmp
mov
ins
lock
leave
stos
jne
outs
pop
cs
fadd
into
add
push
push
(bad)
enter
jmp
mov
sahf
rcr
jmp
mov
sub
pop
adc
mov
sbb
repz
sbb
mov
push
int3
aam
loope
test
mov
push
aas
popf
pusha
xor
mov
pop
cmp
bound
pushf
mov
inc
ret
repz
ds
xchg
iret
jp
lds
inc
jb
(bad)
jmp
cli
cmp
or
dec
cmp
or
mov
xor
mov
pop
sbb
jle
push
jmp
inc
dec
push
and
stos
(bad)
jl
jp
(bad)
sbb
cli
mov
push
mov
sub
int
cmp
sbb
cmp
add
dec
(bad)
fsub
in
pop
jg
push
push
mov
int
xor
inc
popa
jecxz
aaa
and
mov
lock
aas
push
test
fwait
cs
in
(bad)
(bad)
cmc
ret
and
mov
jg
shr
xchg
ds
loopne
xor
ja
cmp
add
in
and
lock
stos
jp
push
jne
mov
add
scas
dec
sbb
in
aad
jge
leave
jmp
test
bound
mov
call
dec
mov
retf
xor
or
cmp
add
pop
inc
mov
inc
pop
retf
mov
and
hlt
leave
mov
popf
(bad)
test
adc
scas
mov
push
sbb
lahf
push
cmc
(bad)
jno
daa
rcl
mov
jb
mov
mov
(bad)
and
dec
call
jae
mov
inc
addr16
xchg
(bad)
adc
jne
adc
stc
stos
pop
add
jmp
jle
add
call
call
add
mov
adc
icebp
sti
ret
shr
ins
mov
xchg
xor
repnz
fwait
stc
popa
mov
adc
xchg
dec
xor
xchg
retf
add
jl
jp
cmp
test
inc
call
jecxz
mov
or
in
aad
mov
stos
sub
mov
push
sbb
iret
lods
push
popf
jnp
add
push
push
pop
out
pusha
(bad)
hlt
test
xor
pop
pop
dec
pop
ins
cs
mov
dec
int3
xor
cdq
add
stos
cmp
adc
cmp
push
push
xor
call
mov
test
or
out
ja
jmp
(bad)
loop
sub
adc
dec
ds
js
mov
xchg
das
and
push
sub
xchg
cdq
add
out
(bad)
sbb
sti
lea
pop
lods
leave
lods
cld
mov
movs
call
ds
mov
push
stos
xor
xor
test
or
lods
xchg
pop
test
movs
inc
mov
xchg
sub
inc
fild
sahf
(bad)
mov
fnstcw
addr16
gs
mov
adc
add
shl
or
xchg
push
push
add
pop
pop
xchg
pop
call
or
(bad)
or
cld
jnp
retf
mov
test
mov
pop
push
ins
adc
jmp
out
cli
shl
not
leave
and
ret
call
mov
fsub
test
xor
mov
pusha
or
adc
iret
jl
and
push
mov
add
ror
mov
movs
xor
inc
cmps
dec
pop
push
sar
pop
mov
ret
dec
sbb
inc
mov
and
mov
mov
movs
xor
jl
scas
xor
push
cmp
call
dec
add
adc
sbb
push
xchg
repz
sar
mov
pop
mov
push
and
test
adc
jo
out
enter
or
sub
pushf
xor
mov
outs
sub
inc
sbb
fs
daa
retf
adc
mov
rcr
push
pop
fs
cmp
cmp
icebp
add
cs
ror
pusha
scas
adc
inc
stos
in
sbb
scas
add
push
xor
push
xchg
cli
xor
mov
inc
jno
mov
sbb
jmp
or
dec
js
aas
call
outs
dec
loop
pop
xchg
not
retf
retf
xor
aad
push
aam
xlat
sar
jnp
pop
sbb
je
pusha
lahf
mov
inc
out
ja
sbb
push
mov
add
fdiv
cmp
adc
pop
sub
test
pop
mov
dec
(bad)
sti
pop
xchg
in
shl
mov
sub
mov
inc
loop
pop
sar
cmp
xchg
lock
inc
sub
js
cmp
addr16
ss
jp
(bad)
in
add
cmp
addr16
fs
in
push
dec
lea
mov
jp
and
add
cmp
mov
jb
aam
(bad)
mov
dec
xchg
cmp
push
in
push
sti
sub
jle
iret
dec
arpl
pop
xor
jecxz
jo
mov
add
stos
push
ins
call
aaa
pop
scas
fnstenv
mov
shr
xlat
cmp
nop
in
(bad)
in
mov
push
adc
pop
sbb
and
scas
add
fisttp
pop
test
iret
call
ja
push
mov
xchg
cdq
rcr
je
xchg
push
jb
xor
xlat
mov
data16
inc
test
fimul
push
adc
ins
adc
xor
sar
cmps
in
fldenv
xchg
xor
lahf
sbb
sub
or
add
xchg
lods
jge
add
jb
dec
inc
xchg
(bad)
and
or
mov
in
lods
bound
xchg
jmp
in
inc
add
jo
pop
retf
gs
mov
outs
test
jnp
sub
pop
lods
or
mov
nop
stc
lock
cdq
mov
sub
cli
ins
add
xor
fldcw
shl
inc
push
leave
repnz
push
adc
retf
sbb
pushf
outs
and
dec
xor
out
scas
mov
mov
scas
dec
mov
stos
add
xchg
rcl
scas
inc
pusha
dec
or
adc
cmp
dec
inc
hlt
int3
mov
fwait
add
movs
lock
rol
jae
pop
dec
es
jo
mov
lea
push
ins
mov
mov
push
cld
and
add
xcrypt-ofb
cmps
outs
movs
in
xchg
add
ja
mov
mov
cmp
setl
(bad)
jle
and
cdq
push
xchg
ds
sub
pop
push
xchg
ja
jmp
into
bndldx
add
pop
and
into
push
das
jne
mov
add
pop
cmp
xchg
inc
xor
mov
and
fistp
fld
les
mov
stos
jg
jp
cmps
dec
idiv
cld
mov
sbb
mov
mov
push
mov
je
je
aaa
xlat
inc
jae
hlt
lock
outs
dec
sub
out
(bad)
popf
and
fcomp
scas
push
sbb
mov
stc
loopne
pop
popa
in
ficom
call
add
push
jo
(bad)
neg
mov
jbe
mov
ja
or
imul
cmp
arpl
(bad)
xlat
add
out
xor
inc
sbb
das
and
mov
shl
mov
cmp
xor
lea
sbb
xor
retf
retf
scas
cld
pop
mov
ja
out
and
aas
sti
int
aam
fs
xor
cmp
xchg
or
push
dec
js
movs
(bad)
push
icebp
sub
aas
inc
mov
or
inc
inc
lahf
xchg
push
mov
adc
popf
stc
dec
lods
cmps
xor
push
sbb
push
push
mov
jo
fld
aaa
add
mov
inc
push
gs
(bad)
vshufps
fdiv
jmp
cmp
mov
test
mov
inc
popa
push
(bad)
push
enter
xor
aam
or
sub
xchg
xor
sub
cmp
jmp
shl
xor
fstp
xchg
add
dec
cwde
out
mov
data16
xor
mov
pop
(bad)
loopne
dec
adc
aam
dec
outs
shr
dec
test
(bad)
movs
scas
jns
dec
push
dec
pop
sub
nop
shr
inc
mov
or
retf
popf
sbb
mov
nop
mov
loope
mov
aaa
cmp
in
fsin
mov
xor
fild
push
(bad)
mov
sbb
leave
or
inc
cmp
jo
jl
adc
sbb
arpl
int
inc
lock
jae
pop
dec
pop
and
(bad)
mov
mov
in
and
cs
icebp
push
in
inc
sub
pop
outs
inc
cmpxchg
dec
cmp
shl
shr
dec
jle
bound
cwde
sbb
fwait
int
add
addr16
jbe
mov
cs
jns
dec
aad
clc
ins
sub
jbe
sub
scas
(bad)
mov
lods
shr
pop
inc
push
pop
(bad)
pusha
(bad)
pop
mov
xchg
push
pop
in
mov
push
xor
jbe
out
pop
fmul
fdiv
xchg
repz
clc
cmp
(bad)
push
jmp
pop
xor
out
jle
popf
(bad)
cdq
add
xor
sub
mov
add
inc
das
or
xchg
mov
cmps
test
adc
push
imul
pop
or
mov
inc
push
push
sbb
ds
aas
cmp
mov
dec
xor
lock
and
(bad)
in
stc
rcl
ins
xor
push
test
out
jne
pop
inc
shr
xchg
fiadd
push
or
not
cdq
mov
or
test
sti
mov
push
or
push
mov
pop
out
push
pushf
lahf
fadd
xchg
imul
mov
fsubr
pop
(bad)
sbb
and
jge
sub
dec
inc
sub
and
outs
pop
pop
cs
ret
cmp
and
repz
add
jge
das
jne
jno
cmp
std
pop
loopne
ret
cwde
push
retf
fmul
ja
clc
pop
pop
lea
int
idiv
push
int3
dec
pop
(bad)
int
jl
jp
inc
add
sar
push
sahf
adc
pop
lea
sub
fadd
adc
lods
int
jb
movs
sbb
(bad)
rcr
mov
mov
dec
mov
adc
mov
sbb
xor
cwde
cmp
data16
stos
loopne
sub
jb
cmp
mov
jge
cwde
sub
not
repnz
and
shl
bound
sbb
xchg
(bad)
out
icebp
out
js
inc
outs
push
jmp
sbb
sbb
pop
rol
or
and
sbb
or
cmp
adc
icebp
ss
cmp
dec
sbb
(bad)
popf
and
mov
in
fadd
fld
rcl
cmp
xor
add
pusha
xchg
xor
or
fwait
sbb
je
imul
nop
dec
sub
in
fdivp
inc
dec
pop
mov
rcr
inc
push
sub
jmp
je
cmp
and
pop
dec
outs
outs
mov
jns
sbb
(bad)
xchg
and
cmc
push
enter
in
aam
push
mov
mov
nop
cmp
mov
rcr
push
add
es
xlat
sbb
push
ror
xchg
iret
sub
out
xor
retf
iret
or
outs
push
mov
sub
xor
lea
pop
or
and
pusha
cmp
jno
push
add
cmp
fcomp
sar
xchg
stc
stc
pop
js
cwde
and
cmp
loop
sbb
(bad)
out
pop
pop
dec
and
sub
jle
pop
movs
and
mov
cmp
movs
push
and
ins
push
jp
mov
push
(bad)
std
cmp
lahf
fild
cmp
pop
inc
ds
inc
fs
or
and
rcr
sbb
das
stos
pop
cld
jle
ins
pop
loop
sub
push
dec
(bad)
adc
and
mov
ja
(bad)
movs
(bad)
xchg
cwde
ja
jo
inc
mov
ret
mov
leave
jp
add
pop
xor
dec
mov
pop
dec
addr16
dec
push
inc
sub
cs
shr
(bad)
fnstsw
push
sbb
aaa
ds
jp
lahf
js
cmp
in
icebp
aas
sbb
mov
push
xchg
(bad)
fcomp
dec
add
jns
cmp
xchg
push
push
jno
je
fld
ins
sbb
pop
xor
inc
dec
outs
out
(bad)
jnp
inc
cmp
cmp
mov
mov
shl
dec
pop
jns
cmp
pop
adc
fwait
add
xchg
pop
sbb
sub
mov
(bad)
inc
inc
add
cmp
mov
jecxz
in
xor
pop
jecxz
out
dec
not
dec
movs
or
sbb
dec
xor
pop
push
jl
sar
jge
out
xor
xor
mov
pop
leave
mov
mov
fsubrp
mov
add
jmp
(bad)
lods
pop
mov
cmp
dec
rcr
or
push
iret
in
inc
xchg
cmps
dec
pop
stos
xchg
xchg
or
test
pop
aas
push
mov
lea
call
leave
add
fist
pushf
and
out
inc
rcr
and
movs
ss
inc
stc
or
and
in
ss
pop
xchg
cwde
inc
and
lahf
icebp
movs
mov
mov
and
je
pop
aas
xor
adc
cmp
lea
jae
rol
jl
add
pop
sbb
icebp
pop
in
lahf
cmp
cmps
and
or
pop
dec
mov
jl
mov
xchg
pushf
xor
mov
(bad)
dec
adc
xor
jno
enter
out
imul
mov
stos
popa
data16
inc
dec
dec
daa
sub
cmp
mov
ins
fisttp
add
inc
mov
jmp
add
jp
ret
enter
jb
sahf
rol
jle
ror
scas
and
fs
jge
shr
in
daa
sbb
fld
repz
jns
pop
pop
out
int3
in
clc
es
add
out
into
xor
lock
cmps
add
and
add
into
repnz
mov
mov
xor
adc
dec
jbe
push
popa
aad
cmps
dec
ds
mov
in
push
cwde
or
es
mov
jecxz
add
push
dec
mov
cmp
sbb
iret
mov
hlt
cmps
dec
inc
inc
inc
(bad)
stos
sub
mov
mov
in
int
lahf
fwait
or
or
dec
test
mov
and
sbb
clc
pusha
ret
xlat
and
jae
rcr
mov
cmp
clc
mov
mov
push
sub
dec
aad
add
lods
cmc
xchg
dec
and
das
jp
rcl
(bad)
sub
xchg
imul
call
es
es
dec
aam
(bad)
push
adc
in
mov
addr16
inc
inc
inc
in
retf
sbb
in
loopne
mov
adc
add
ja
jmp
cmp
in
pop
outs
pop
fmul
into
push
adc
lods
call
loopne
(bad)
jns
or
xor
xchg
pop
aam
jnp
adc
mov
movs
pop
addr16
pop
loop
xor
xor
jnp
pop
dec
mov
mov
mov
dec
push
cmp
out
aaa
js
movs
out
push
icebp
push
sbb
daa
or
pop
or
mov
es
fdivr
mov
stos
out
stc
xchg
xchg
jg
cmp
ja
scas
add
sub
xchg
xchg
call
int3
dec
mov
push
fwait
jmp
sub
sub
xchg
mov
mov
mov
imul
cmps
and
xchg
sahf
aam
and
inc
mov
js
mov
ret
daa
cmp
int
xchg
popa
sub
fimul
or
outs
xchg
push
shr
(bad)
xchg
js
vpmaddwd
mov
sub
imul
addr16
mov
cmps
cmp
(bad)
xchg
retf
cmp
test
(bad)
out
shl
dec
mov
push
xchg
test
add
aas
jp
call
jge
mov
fld
retf
inc
in
rcl
xchg
mov
jecxz
add
fcomip
dec
lods
lock
into
cwde
neg
cmp
les
push
jae
inc
inc
mov
cmps
std
test
xor
xor
inc
jecxz
aam
dec
data16
mov
lods
inc
into
add
xor
mov
xchg
aas
and
retf
xchg
scas
ds
sbb
fldcw
inc
xor
jmp
adc
push
jnp
inc
imul
lock
push
sbb
push
retf
mov
jnp
jl
mov
pushf
xchg
repnz
movs
dec
in
enter
mov
jns
adc
xor
lods
fucom
div
mov
sbb
outs
add
enter
add
test
stc
invd
mov
xor
enter
mov
lods
mov
or
add
ret
icebp
mov
lods
dec
pop
sbb
(bad)
mov
push
in
movs
cld
sbb
sbb
mov
add
dec
sbb
fcomp
dec
scas
in
arpl
push
mov
inc
jmp
nop
add
data16
xor
in
loop
sahf
test
sbb
add
pop
push
ja
dec
test
ins
ret
xor
jge
iret
cmp
inc
add
sbb
mov
lock
jle
outs
pop
into
add
cwde
push
or
xor
fistp
push
add
cmp
leave
aam
hlt
and
jmp
dec
xor
add
ds
outs
xor
sub
sahf
adc
lock
int3
jno
les
fbstp
(bad)
call
std
retf
fisub
mov
lods
adc
xchg
push
lsl
sti
mov
test
and
inc
xor
add
inc
out
arpl
jecxz
fsubrp
mov
in
aaa
in
mov
adc
jb
jmp
xor
jne
emms
cmp
inc
imul
add
shr
xlat
adc
rcr
jl
and
sub
test
push
cmp
(bad)
jmp
xchg
sub
repz
and
pop
inc
mov
les
das
jp
dec
push
pop
mov
inc
pop
cmp
rcr
movs
mov
(bad)
(bad)
inc
cmps
xchg
(bad)
jmp
out
push
cli
test
shl
ja
xchg
jo
and
aam
les
adc
mov
cwde
sar
popa
push
repz
lea
(bad)
imul
push
cmp
jbe
adc
rol
mov
out
xchg
jmp
lahf
pop
mov
into
enter
in
cmc
das
ret
jmp
iret
sbb
sbb
js
pop
adc
leave
mov
xchg
xlat
push
push
or
and
mov
test
mov
sbb
inc
adc
fild
mov
inc
and
cmp
sub
aad
loopne
mov
cwde
jae
shr
in
adc
add
lods
leave
lods
out
sti
push
sub
mov
aaa
dec
aas
cmp
int3
scas
out
addr16
sub
mov
repnz
jle
out
pop
frstor
mul
xor
aam
rcl
xchg
cmp
mov
xor
mov
(bad)
cld
lea
adc
sbb
fmul
xor
push
dec
into
sahf
mov
and
dec
mov
or
sti
or
mov
mov
or
dec
js
iret
daa
stos
cmp
lahf
test
cmp
or
xchg
(bad)
dec
cmps
mov
ret
aaa
test
mov
pop
mov
and
movd
cld
scas
out
jne
pop
cmps
push
test
in
dec
and
int
jns
lea
jmp
cdq
dec
xchg
adc
jb
mov
or
fild
xor
cmp
inc
adc
out
ins
cmp
lods
in
in
aad
nop
std
jb
mov
jns
fidivr
mov
inc
(bad)
sub
inc
mov
das
daa
repnz
stos
jnp
(bad)
sti
fdivr
movs
mov
sbb
out
into
or
leave
cld
int3
cmps
shl
sbb
int3
aad
ret
sub
pop
jge
cmps
(bad)
into
aas
push
pop
fdivr
aas
mov
loope
mov
mov
popa
pop
push
rcl
mov
adc
fadd
sub
sub
pop
cmp
or
pusha
movs
and
sub
js
pop
push
pop
enter
jmp
leave
and
jmp
xchg
aaa
mov
or
sub
fstp
arpl
push
adc
add
rol
outs
test
jle
push
mov
pop
dec
ins
cmp
sub
test
jmp
repz
jmp
js
jg
int
mov
les
jge
or
and
fs
pop
xchg
pop
into
fidiv
std
and
cli
jo
scas
jmp
xchg
repz
popf
imul
stc
dec
sahf
cmp
out
cmp
xchg
clc
xor
mov
inc
int
jo
mov
cmp
(bad)
jl
call
nop
not
movs
xchg
dec
pushf
jb
ins
std
mov
fsub
mov
div
inc
or
addr16
adc
sbb
sub
cld
dec
jmp
xor
dec
cmp
push
adc
jne
sub
adc
pusha
sbb
jb
dec
sbb
enter
das
mov
push
sbb
ins
xor
mov
adc
adc
cmova
add
out
xor
fimul
mov
icebp
frstor
sahf
icebp
ss
jnp
push
sbb
xchg
xchg
push
push
jo
call
and
push
loopne
stc
push
test
xchg
xor
into
jns
xor
jae
fld
rol
into
jae
push
stos
lahf
mov
sub
std
jmp
xor
mov
js
jae
or
mov
call
sub
mov
arpl
xlat
xchg
sub
ss
cli
stc
cmp
push
mov
scas
and
sub
movs
call
dec
sub
push
icebp
call
jnp
jle
dec
xlat
inc
ficom
clc
in
mov
test
loope
and
pop
add
fnsave
xchg
int3
shl
adc
jno
cmp
add
mov
fst
cmc
xchg
out
movs
mov
test
loope
(bad)
retf
shl
loop
xchg
cdq
and
mov
(bad)
push
mov
enter
jge
jmp
ret
sbb
mov
mov
xchg
ja
enter
mov
mov
add
(bad)
pop
cwde
jmp
cmp
out
xor
pop
das
jb
call
fsub
fild
lods
movs
cmps
lods
inc
or
dec
popf
jnp
and
xor
or
pop
in
jge
xor
inc
jns
sub
inc
push
xor
pop
jo
pushf
push
add
xor
int3
adc
push
rcl
or
jmp
mov
outs
push
and
aaa
mul
xchg
int
mov
adc
cmp
pop
mov
xchg
icebp
xchg
inc
inc
imul
xor
lods
outs
shr
loopne
and
fld
xor
dec
push
inc
leave
cmp
scas
inc
mov
jns
in
loopne
sbb
jg
adc
fucomp
cmps
repz
cmp
xor
out
je
xor
cmp
push
sub
push
cmp
mov
or
test
xor
add
dec
push
cmp
add
jmp
cld
or
outs
sbb
pop
dec
pop
les
add
shl
les
sbb
loopne
(bad)
scas
stos
cmp
mov
jmp
aam
ret
imul
lock
hlt
fsub
out
aad
pop
adc
jne
call
ds
jecxz
popf
push
movs
lock
sbb
(bad)
xchg
std
in
mov
popa
mov
fcomp
scas
jmp
(bad)
test
pop
adc
loop
loope
xor
adc
xchg
dec
pop
out
jle
or
inc
leave
inc
sub
mov
jae
mov
or
pop
or
movs
cwde
mov
jmp
or
mov
fbstp
mov
push
xor
mov
mov
pop
fst
add
stos
pop
movs
inc
and
ret
pop
xchg
pop
cmp
les
xchg
mov
dec
pop
popa
xor
sbb
or
inc
push
pop
loop
jo
(bad)
jno
repnz
mov
inc
mov
ret
lds
rcl
push
adc
fwait
add
xor
adc
jl
pop
and
jae
cmp
cmp
xor
mov
push
fwait
mov
jg
jb
mov
imul
cmp
ds
int3
pop
dec
inc
call
stos
inc
jl
std
out
xor
adc
xchg
push
or
mov
(bad)
mov
and
pushf
cdq
stos
mov
inc
or
inc
xor
jne
out
(bad)
retf
pop
mov
inc
ja
ins
or
adc
dec
int
jae
jge
adc
xchg
pop
adc
mov
mov
lahf
cmp
retf
sub
adc
pop
add
add
mov
add
retf
pop
xor
imul
fild
mov
leave
inc
test
and
or
pop
addr16
out
sub
imul
aas
js
dec
ins
fimul
xor
add
shl
jnp
adc
xor
pop
sbb
push
jns
xor
(bad)
jmp
js
adc
cli
jg
scas
movs
pop
js
popf
push
(bad)
fwait
pop
(bad)
shl
mov
cmp
push
fwait
cmps
fld
cmc
mul
std
scas
push
sahf
in
xlat
jmp
dec
xchg
icebp
bound
and
fist
push
(bad)
enter
add
mov
dec
enter
pop
sbb
pop
jno
or
or
es
adc
mov
fild
(bad)
mov
dec
xor
leave
add
dec
(bad)
mov
or
inc
adc
inc
(bad)
mov
mov
sbb
jbe
sahf
scas
inc
mov
add
mov
xchg
add
push
or
push
adc
call
shl
jmp
lds
cwde
add
mov
lea
sub
sub
shl
add
dec
jmp
fnsave
popa
or
sub
adc
enter
retf
sbb
fnstcw
sub
(bad)
jge
rcr
mov
inc
xor
and
pop
xchg
sbb
mov
inc
fnstsw
jae
mov
clc
lock
movs
cmps
lds
push
add
jl
push
(bad)
loope
pop
sbb
mov
push
inc
movs
paddq
movs
retf
add
push
out
push
in
aad
push
sahf
test
jmp
(bad)
inc
(bad)
sti
sbb
leave
inc
dec
sub
jge
adc
repz
das
sbb
(bad)
in
(bad)
sahf
xchg
jbe
add
mov
inc
dec
or
jb
stc
adc
push
outs
inc
fsub
add
loopne
xchg
lahf
pop
sub
aaa
pop
inc
pusha
add
push
sahf
arpl
add
push
fs
stc
repnz
cmps
mov
or
daa
inc
lds
imul
pop
sub
lods
fcom
xchg
mov
jp
pop
pop
jp
or
dec
sub
(bad)
mov
sbb
jg
push
ficomp
and
jno
add
push
or
pop
cmp
call
jnp
movs
inc
fimul
adc
test
dec
(bad)
xchg
pop
daa
jo
mov
sbb
pop
les
pop
adc
xchg
push
mov
std
add
and
mov
pop
sbb
into
inc
inc
iret
push
jle
xor
les
xchg
cmps
mov
fadd
add
loope
fld
and
imul
mov
jmp
add
or
add
mov
add
push
imul
mov
pop
sbb
cld
jae
cwde
into
fwait
es
cvtpi2ps
jp
loope
lahf
mov
and
xchg
mov
adc
jmp
fadd
cmp
mov
je
repnz
bnd
jae
cdq
cdq
retf
xor
mov
lea
fs
(bad)
jns
mov
mov
xchg
lock
nop
data16
add
xor
add
pop
mov
cmps
call
cs
sbb
icebp
movs
clc
lock
adc
cli
jmp
sbb
or
adc
std
dec
push
popa
(bad)
add
ret
fcom
jg
push
test
stc
ins
xchg
into
push
add
imul
enter
push
cmp
xor
stc
pop
int3
adc
popf
push
sub
or
outs
xor
add
inc
aas
lods
fbld
jmp
cmovle
mov
cmp
dec
pushf
push
adc
push
ds
sar
repnz
daa
aad
cmp
lock
mov
mov
in
or
jae
push
dec
mov
pop
test
or
mov
mov
ja
enter
mov
fcmovne
and
in
sbb
das
je
shl
out
jb
or
imul
jns
mov
dec
lods
cdq
movs
inc
or
pop
xchg
dec
fstp
icebp
cmp
scas
adc
and
xchg
sbb
pop
mov
aad
or
sbb
inc
gs
in
and
or
sbb
adc
loope
(bad)
or
leave
mov
(bad)
call
dec
leave
lahf
ss
cmp
dec
cs
std
sbb
push
xchg
shl
pop
or
aas
push
aad
loopne
(bad)
xchg
push
sub
mov
icebp
xchg
jne
mov
mov
mov
js
lea
fadd
sbb
sar
push
or
(bad)
(bad)
test
dec
pop
fisubr
pushf
inc
shr
pop
xchg
push
mov
push
ss
lods
lea
sub
adc
jp
nop
jmp
mov
out
cld
ret
mov
pop
sbb
aam
mov
mov
pop
pop
jmp
leave
jmp
mov
adc
lds
fmul
cdq
pop
call
(bad)
jne
inc
jl
lods
gs
pop
aad
jbe
aaa
repnz
out
or
xor
inc
(bad)
jge
test
bound
jecxz
inc
adc
pop
jle
loope
cdq
or
gs
repnz
jno
dec
movs
dec
lahf
jmp
add
pop
aas
xchg
push
cmp
int
mov
pop
xor
repnz
(bad)
aam
add
dec
and
sub
jmp
pop
hlt
mov
in
out
mov
pop
popa
pop
cdq
test
xchg
sti
hlt
mov
add
or
aas
pop
mov
mov
inc
and
stos
data16
jns
stos
aas
dec
sbb
or
xchg
sbb
mov
lea
push
pop
mov
dec
(bad)
outs
popf
pop
or
add
gs
sub
inc
ds
push
push
adc
pop
lds
outs
nop
mov
pop
mov
shr
dec
xchg
das
adc
push
adc
sbb
les
loopne
or
dec
sub
cmp
xor
inc
pusha
ror
pop
mov
cmc
xor
movs
sub
add
jnp
(bad)
out
das
inc
mov
neg
or
dec
and
imul
adc
or
mov
fwait
stos
pop
and
bound
dec
mov
popa
scas
push
xor
lods
xor
mov
add
test
imul
add
jbe
adc
pop
outs
inc
cmps
fdiv
sub
add
fs
pop
sbb
rol
(bad)
in
sahf
stos
push
push
fnstsw
addr16
xor
dec
adc
push
dec
arpl
push
ins
fild
les
fild
mov
mov
iret
mov
in
dec
add
sbb
mov
cmp
test
inc
or
xchg
and
cmps
sbb
or
pop
lock
test
ja
jl
shl
or
stos
stos
mov
sub
push
mov
mov
jmp
dec
mov
popa
cmp
cmc
fwait
cli
cld
mov
cmc
sti
out
idiv
jge
fmul
xchg
push
outs
imul
jmp
push
jmp
movs
je
lock
push
inc
pop
xlat
push
xor
iret
mov
add
jecxz
mov
inc
sbb
les
lods
pop
cmps
dec
(bad)
iret
fbld
xor
aam
mov
and
and
xor
xor
xor
pop
sbb
pop
imul
popf
push
lods
cmc
pusha
std
cmp
out
jo
mov
or
mov
push
repz
repz
mov
mov
(bad)
dec
mov
adc
fstp
data16
in
inc
mov
movs
stos
jp
(bad)
fistp
ret
push
cmp
mov
jbe
fst
add
jns
adc
jmp
dec
mov
dec
pop
nop
mov
xor
jno
(bad)
mov
std
lods
inc
pop
aaa
fwait
jg
repz
mov
cmps
xor
lock
push
jne
mov
mov
inc
mov
int3
rcr
push
scas
pop
ss
inc
outs
add
scas
adc
sub
fmul
ror
int3
stos
and
in
adc
rcl
mov
dec
nop
and
fucom
popa
cmp
pop
xor
dec
push
xchg
xlat
sub
sub
test
(bad)
adc
(bad)
leave
sub
sub
sar
or
std
pop
sbb
retf
movs
fwait
movs
adc
push
jns
xor
mov
inc
mov
xchg
jge
retf
mov
jl
xor
outs
jecxz
and
add
inc
loopne
and
imul
call
ds
jb
jl
push
sbb
repz
data16
jbe
push
cmp
dec
pop
cdq
cmp
xchg
mov
cmp
in
movs
inc
out
sbb
adc
or
test
or
mov
cmp
mov
aad
in
push
mov
push
and
add
in
aad
sub
aam
popa
ficom
shr
jae
dec
in
push
std
push
js
mov
jae
dec
inc
xchg
out
sahf
push
and
dec
lock
add
and
retf
mov
loope
jnp
inc
lods
sub
push
add
xchg
inc
test
hlt
mov
mov
outs
inc
jge
scas
mov
(bad)
test
cmp
clc
shl
scas
push
xlat
(bad)
es
inc
jl
jne
xor
inc
xor
and
mov
or
cmps
out
and
pop
cmp
xlat
sbb
mov
in
stc
xchg
test
stos
jg
cmps
shr
cmp
sub
sar
daa
(bad)
in
xchg
sbb
in
mov
sbb
frstor
pop
repz
repz
push
in
pop
scas
stos
rcr
pop
mov
sar
(bad)
out
hlt
sub
(bad)
fadd
xchg
mov
scas
aam
rcl
mov
daa
dec
mul
mov
js
adc
aaa
mov
pushf
xor
add
xchg
daa
stc
mov
mov
add
out
add
or
stc
add
add
(bad)
pop
or
lahf
or
and
int3
mov
test
mov
lods
les
push
mov
iret
cmp
jmp
movs
cs
js
sbb
cld
push
xor
jno
jmp
movlps
mov
addr16
mov
popf
adc
xchg
in
push
lock
(bad)
(bad)
test
push
imul
jmp
mov
xchg
pop
inc
push
movs
int3
or
shr
dec
popa
mov
or
jg
iret
mov
test
jmp
popf
lock
retf
lds
mov
sub
inc
adc
dec
movs
jg
or
(bad)
icebp
test
in
mov
pop
jnp
mov
or
jo
dec
fnsave
lods
bound
mov
mov
cld
lods
icebp
int
aad
mov
inc
mov
sub
jae
ins
ds
push
inc
adc
dec
mov
loope
dec
pushf
inc
push
xchg
mov
nop
mov
cmp
lahf
cmp
gs
(bad)
repz
push
test
xor
loop
or
sub
ja
inc
jno
mov
loopne
pop
dec
sub
mov
pop
jmp
mov
(bad)
icebp
xlat
and
adc
sub
rol
aaa
icebp
lds
xor
inc
loop
sbb
mul
(bad)
sti
clc
push
gs
push
stc
xor
xor
nop
cmp
pushf
mov
enter
vmovshdup
push
xor
cs
lahf
mov
les
ret
dec
addr16
call
inc
jge
xor
xchg
js
shl
dec
scas
lock
push
rcr
mov
pop
jnp
stos
jg
sub
(bad)
popf
mov
pop
add
clc
sar
add
pop
pop
add
scas
push
cdq
xor
in
dec
fld
or
(bad)
jnp
call
mov
int
aam
dec
and
addr16
stc
ins
push
clc
xchg
test
jnp
xor
dec
iret
cmps
call
test
repz
aas
jbe
scas
jecxz
out
sub
mov
daa
test
sbb
nop
sub
test
mov
(bad)
pop
mov
mov
xor
arpl
jae
ins
push
cmc
and
pop
add
adc
dec
test
div
out
mov
pop
jno
pop
mov
add
and
and
into
fistp
dec
inc
xor
retf
aam
jae
jecxz
push
jne
pop
mov
mov
fild
sbb
sub
push
adc
in
test
fisubr
mov
cmc
mov
sbb
stos
adc
adc
cmp
inc
adc
add
sbb
out
cmc
repz
fcomp
xor
push
out
mov
nop
fdiv
xchg
mov
add
push
and
and
aaa
das
inc
fsubr
jmp
hlt
rcl
xor
(bad)
jb
out
and
push
cmps
shl
push
sub
in
pop
xlat
add
scas
rep
fld
arpl
jmp
jg
pop
ficomp
arpl
sti
(bad)
sbb
mov
xor
push
mov
call
rol
outs
xchg
push
retf
or
adc
stc
xchg
cmc
out
js
aam
xor
cwde
or
or
dec
and
shl
adc
in
mov
xchg
repz
xchg
mov
xchg
not
xchg
dec
pop
fwait
cmp
dec
shl
fs
inc
add
ficomp
test
sub
or
push
lods
push
inc
push
data16
repnz
addr16
cmc
xchg
sbb
mov
lds
loop
ror
sti
and
retf
and
mov
inc
in
lock
dec
mov
inc
add
pop
add
in
ret
xchg
test
mov
xor
jb
mov
xor
(bad)
fdivr
push
(bad)
sti
mov
scas
mov
sub
mov
inc
or
xchg
xchg
mul
lds
mov
lahf
lock
stos
xchg
loop
or
mov
fnsave
jl
xor
popf
js
les
aaa
cwde
(bad)
jno
mov
or
jns
mov
retf
xchg
je
cli
ja
jge
jae
add
sub
je
repz
jae
data16
dec
pop
dec
or
(bad)
jl
add
pop
shl
test
mov
sti
imul
pop
in
dec
cld
test
pop
retf
test
mov
mov
or
bnd
ss
mov
scas
inc
push
xor
inc
into
or
mov
ret
das
faddp
mov
mov
sub
sbb
cmp
scas
push
mov
xor
out
sbb
xor
adc
mov
icebp
frstor
push
mov
mov
test
movs
mov
sbb
dec
xchg
mov
push
pop
add
jmp
aas
and
push
jecxz
vhaddps
in
push
push
(bad)
xor
mov
mov
movs
mov
lods
int3
or
fcmovne
shl
arpl
push
out
pop
cmps
pop
int
push
scas
push
or
ins
sti
data16
outs
mov
popf
sar
add
xor
adc
out
mov
pushf
ins
add
add
test
push
imul
or
sub
bound
xor
pusha
pop
xchg
and
(bad)
cmp
xchg
push
add
inc
lods
mov
lahf
lea
inc
pop
lds
sbb
in
nop
ja
mov
ds
int3
leave
xchg
push
mov
fistp
retf
jae
outs
je
sub
adc
mov
lds
xor
pop
inc
das
lods
or
loope
rcr
loopne
and
push
(bad)
jbe
xor
call
popf
or
call
call
and
mov
(bad)
mov
pop
std
(bad)
mov
mov
adc
cmc
mov
cwde
inc
ror
jae
pop
inc
jl
sbb
fwait
dec
aam
pusha
push
(bad)
mov
(bad)
in
pushf
cld
sbb
sahf
inc
add
mov
ficomp
popa
push
push
sar
sub
fild
pop
cli
xor
inc
jbe
sbb
jmp
das
dec
xor
mov
mov
inc
pop
loope
iret
cmp
mov
(bad)
movs
add
js
jo
sub
mov
aad
xor
inc
retf
jae
jmp
ret
mov
out
mov
mov
test
push
xchg
aas
and
nop
lock
sub
lock
aaa
cmp
repnz
pop
add
jl
xchg
add
inc
pop
xchg
inc
in
ret
out
fwait
pop
into
shl
ficomp
je
sub
fcmovu
(bad)
sbb
ss
mov
outs
pusha
out
and
hlt
or
cmp
and
mov
inc
fild
aam
jmp
sub
outs
pop
mov
(bad)
pop
push
dec
in
push
mul
ret
mov
shr
or
cmp
lahf
sbb
in
jg
rcr
adc
mov
es
xchg
sti
adc
imul
cmps
int
push
and
dec
popa
ror
and
fld
inc
jecxz
cmp
adc
outs
xor
xor
add
mov
fmul
cli
or
add
mov
jmp
cmp
rcr
sbb
ret
mul
xchg
test
add
test
imul
mov
push
add
pop
aad
fnstcw
xchg
icebp
dec
cs
leave
cmp
add
jmp
adc
ja
scas
xor
cmp
push
inc
movs
test
sbb
mov
or
cmp
dec
dec
stos
sbb
test
pop
stos
rol
and
fistp
xchg
jnp
imul
cmp
dec
add
int3
or
lahf
pop
sub
shl
add
sbb
mov
inc
ins
xchg
xchg
call
or
push
fcomp
cmp
mov
mul
inc
in
and
ret
xor
and
mov
xor
setae
sti
mov
aaa
mov
and
(bad)
mov
retf
(bad)
sub
aaa
test
pop
arpl
(bad)
(bad)
repnz
dec
imul
jbe
push
pop
sbb
push
sub
or
ror
xor
test
in
in
xchg
mov
add
push
addr16
sbb
fadd
push
(bad)
push
dec
mov
test
cmp
mov
movs
rcl
scas
push
fcmovne
dec
mov
outs
cs
test
push
mov
sbb
test
mov
dec
pop
rcl
xchg
mov
sub
clc
jecxz
jge
or
dec
xchg
sub
stos
ret
(bad)
out
or
fprem
pop
mov
ins
mov
jne
cmp
push
shr
dec
stc
mov
ret
xor
push
es
cdq
jg
xor
or
dec
pop
dec
rcl
sbb
ret
mov
pop
inc
hlt
ja
into
sbb
hlt
popf
dec
inc
adc
fisttp
ins
and
jmp
lods
cmps
mov
sub
loop
inc
push
jmp
js
adc
sbb
mov
fcomi
mov
jge
pop
stc
adc
sub
xor
ins
aad
add
jl
push
mov
ss
in
(bad)
sub
repz
cmp
and
push
mov
inc
test
test
les
adc
and
push
or
dec
retf
mov
setae
je
push
aam
in
sub
popf
mov
std
sbb
shl
out
inc
cmp
(bad)
enter
popa
mov
jbe
enter
je
xlat
inc
fdivr
add
aam
jns
push
add
arpl
pop
es
jno
sbb
mov
mov
pop
xchg
xor
sbb
dec
xor
repnz
mov
fwait
lock
fnstcw
stc
vfmaddss
pushf
ror
mov
mov
movs
inc
adc
jo
shl
movs
mov
add
adc
push
push
push
mov
sahf
cmp
xchg
sub
fcmovbe
dec
fnstsw
pushf
into
es
xor
sub
mov
adc
data16
out
imul
mov
jno
xor
or
pop
or
xor
nop
mov
mov
outs
xlat
inc
hlt
and
mov
loope
sub
imul
js
popa
xor
aad
push
or
popa
mov
out
inc
clc
push
push
xchg
hlt
pop
mov
fsubr
cmc
test
mov
xor
in
push
mov
or
div
lock
push
hlt
xor
cmp
sbb
mov
aad
jp
sahf
sub
daa
lods
aam
out
jne
jns
dec
out
lea
jmp
test
pop
scas
rol
pop
aam
sbb
jo
out
xchg
fldcw
ret
clc
cmp
movs
fcomp
cs
ret
int3
mov
shr
pusha
xor
xor
and
cmp
or
fstp
call
gs
movhps
outs
mov
xchg
inc
or
les
ins
add
jmp
inc
inc
(bad)
out
out
dec
sahf
je
retf
mov
ss
jmp
cmp
xchg
adc
add
mov
mov
ret
cwd
inc
pop
inc
out
ret
mov
push
sub
inc
and
fidiv
and
pop
mov
mov
ss
mov
push
lods
cmp
pop
sbb
fs
rol
push
xchg
xchg
rol
ds
xlat
jns
scas
imul
cmp
sbb
pop
fbstp
(bad)
cs
mov
xchg
sbb
or
sub
adc
jne
pop
jmp
call
cdq
adc
jle
lods
int3
enter
cmp
cmps
std
mov
(bad)
and
jno
scas
push
(bad)
inc
cli
in
jp
dec
adc
ins
pusha
scas
sahf
(bad)
(bad)
nop
dec
cmp
xor
mov
mov
jo
movs
xor
popa
mov
clc
test
lahf
inc
movs
push
movs
and
mov
sti
and
push
xor
mov
jmp
mov
outs
push
sbb
mov
das
inc
mov
mov
data16
or
cmp
dec
add
jecxz
mov
jae
pop
mov
fsincos
xor
popa
gs
cmp
loop
push
jmp
sbb
cmp
mov
adc
pop
movs
pop
mov
out
std
mov
test
(bad)
push
jns
xchg
sbb
fimul
jge
xor
mov
mov
test
inc
test
les
retf
or
jl
xchg
sbb
scas
in
pusha
and
iret
test
xor
pop
imul
cwde
in
or
outs
pop
or
add
rol
stos
push
test
das
popa
(bad)
cmp
loope
xchg
and
lock
mov
sub
retf
push
rcl
or
rcr
arpl
xor
push
neg
pop
daa
xchg
sub
bound
inc
mov
das
int
fld
shl
in
xor
(bad)
(bad)
sub
pop
jne
mov
in
rol
push
jmp
aam
jecxz
cmp
out
(bad)
call
cmp
jp
(bad)
mov
xchg
cmps
and
xlat
push
cs
pop
sahf
mov
fdivr
mov
dec
imul
adc
mov
loopne
popa
or
adc
push
mov
ror
jge
shl
jno
out
jmp
cwde
add
push
jns
pop
xchg
clc
icebp
shl
xor
out
jmp
jno
(bad)
mov
js
imul
je
mov
icebp
dec
div
(bad)
ror
pushf
out
out
repnz
int3
mov
push
cli
inc
mov
and
push
xchg
dec
xchg
add
(bad)
fcom
int
stc
jne
pop
std
mov
push
js
push
fs
jo
hlt
stos
(bad)
out
leave
js
fimul
imul
out
inc
sub
push
in
cs
xchg
push
mov
scas
int3
jmp
xor
sbb
scas
retf
test
or
lock
sub
arpl
inc
mov
jecxz
or
jno
out
sbb
mov
pop
sti
sub
fist
mov
pop
fist
cmps
addr16
and
cmp
mov
xchg
xor
pop
dec
enter
and
or
pop
jnp
or
xchg
jg
push
cs
repnz
mov
adc
shl
faddp
or
je
jne
and
stc
idiv
lock
in
aas
cmp
inc
add
inc
ficom
repnz
mov
ficom
jg
(bad)
push
std
pop
enter
add
retf
movs
push
lahf
lds
into
adc
imul
out
mov
sar
retf
push
call
or
stos
fist
fdivrp
ret
pop
mov
loop
cdq
imul
test
lods
fs
xchg
inc
mov
movs
out
inc
cdq
cmp
push
in
xchg
aam
bound
and
mov
cmp
bound
repz
cld
xor
mov
fidiv
push
xchg
inc
lock
stos
and
pop
mov
fistp
sbb
mov
sti
xchg
sahf
in
pop
movs
cs
loope
movs
pushf
cmp
xlat
test
push
repnz
sti
out
mov
hlt
fcomp
pop
push
xor
ror
clc
adc
sbb
xor
ja
sub
sbb
xor
push
lds
cdq
jne
iret
ss
mov
push
mov
ror
lds
push
sbb
inc
lods
lahf
or
loop
test
iret
pop
xchg
mov
cmp
xlat
ja
test
mov
sub
sub
or
les
mov
or
es
jl
pop
nop
test
cmps
mov
lods
shr
fist
clc
leave
js
jp
loopne
adc
fwait
movs
retf
push
pusha
push
mov
lea
test
xor
cmp
sbb
frstor
jmp
clc
mov
cmp
das
sub
xchg
mov
push
icebp
lahf
jo
dec
mov
jbe
call
jbe
(bad)
outs
jo
(bad)
mov
out
das
or
inc
mov
dec
adc
arpl
push
pop
dec
in
addr16
movs
pop
cmps
push
cmps
push
bound
fcomp
shr
arpl
cmc
pop
sub
fldenv
das
push
cs
jns
cdq
jbe
repz
xor
fwait
xlat
enter
loope
sbb
push
cli
mov
and
sbb
shr
mov
sti
mov
mov
jbe
out
(bad)
aad
pop
or
sub
sbb
iret
sub
push
aas
pop
imul
or
cmp
pop
fcom
cwde
int
je
out
aad
inc
cmp
jmp
fwait
(bad)
mov
push
sbb
cmp
sbb
js
or
popa
jle
adc
push
push
bound
jnp
test
pop
in
or
mov
mul
xchg
out
sbb
pop
push
ret
out
loop
xor
mov
inc
mov
bound
(bad)
mov
neg
xor
sbb
call
mov
pop
push
shl
out
aad
sahf
and
mov
mov
jge
cli
adc
cmc
loop
test
xchg
cmp
jns
jne
cmp
rcr
xchg
mov
outs
(bad)
enter
push
int3
push
out
lock
cmp
mov
test
stos
int
mov
inc
rol
mov
int3
mov
(bad)
adc
jns
pop
cmp
cdq
inc
call
(bad)
mov
(bad)
rcr
test
stos
add
scas
rcr
adc
daa
adc
in
imul
dec
test
mov
sbb
popa
xchg
mov
cmp
and
clc
xor
mov
push
into
call
clc
adc
dec
(bad)
addr16
loop
sbb
mov
push
call
push
lahf
push
enter
xchg
rol
dec
jecxz
cmp
cmp
retf
mov
inc
pop
cmc
dec
das
sbb
cli
sub
adc
or
cmc
xor
aad
repnz
adc
mov
mov
cmps
fadd
jbe
sub
xchg
push
push
mov
mov
sub
push
mov
pop
cs
add
test
inc
idiv
xchg
xchg
mov
sbb
pop
pop
imul
jae
popf
out
std
ins
out
jp
test
xchg
ins
push
push
icebp
ins
mov
push
add
adc
sub
aas
cmp
mov
retfw
pop
out
jp
sbb
loopne
out
inc
cmps
movs
retf
in
sbb
les
nop
or
setge
jb
and
loopne
and
out
lds
pushf
push
rcr
or
std
cmp
dec
adc
sbb
jns
xor
jp
mov
retf
jmp
sub
adc
add
ficom
test
cmp
and
outs
pop
push
rcr
xor
pop
in
xchg
jmp
add
or
jbe
lahf
mov
sbb
cmps
movs
pusha
jne
call
inc
push
and
xor
inc
in
or
gs
cmp
es
cmp
add
mov
pusha
xor
mov
cli
jl
test
sar
cmp
(bad)
call
ins
hlt
fwait
mov
jmp
xchg
and
add
out
inc
jge
cwde
mov
js
pop
jbe
add
pop
call
test
mov
call
sbb
movs
xchg
push
or
sub
dec
jg
icebp
ret
jbe
push
or
inc
pop
xor
addr16
sbb
or
nop
jae
add
es
dec
inc
adc
outs
push
inc
mov
xchg
loope
dec
mov
xchg
sbb
into
adc
ret
jmp
je
test
and
dec
std
jo
movs
imul
repz
mov
cmp
(bad)
int3
(bad)
and
sub
int
arpl
addr16
cdq
sub
fdiv
inc
fbld
and
xchg
and
inc
retf
add
add
inc
mov
imul
mov
mov
shr
push
ficom
pop
xor
test
call
xor
pop
adc
std
ret
sub
std
inc
adc
enter
lock
ret
out
or
sub
adc
adc
imul
and
jno
test
retf
push
aas
jmp
enter
mov
pop
and
stos
call
ds
out
enter
push
fcomp
ja
push
mov
push
pop
jecxz
pop
int
out
loopne
or
gs
out
inc
add
pop
and
jle
pushf
jae
push
ret
fld
xor
lock
xchg
xchg
jmp
fbld
icebp
xor
or
sbb
adc
cmp
inc
cmp
pop
(bad)
mov
jmp
cmp
mov
inc
ja
jge
jl
xchg
jnp
pop
(bad)
push
retf
mov
jl
mov
lahf
sub
cmp
and
jo
fild
and
in
lock
int
cmp
fcom
or
push
adc
mov
sahf
repz
push
das
inc
arpl
in
in
mov
mov
mov
scas
lods
add
ret
icebp
outs
push
mov
in
push
cs
es
int3
cmp
or
pusha
jno
std
data16
add
dec
jmp
mov
dec
jecxz
rcl
jae
nop
test
xlat
mov
and
sub
movs
or
stos
int3
imul
push
shl
and
repnz
test
xor
pop
add
dec
imul
pushf
aas
cs
jns
inc
mov
pushf
mov
xchg
xor
jb
sbb
sbb
and
bound
pop
mov
stc
lock
inc
mov
retf
icebp
and
retf
mov
inc
es
test
imul
mov
mov
inc
enter
push
add
jle
sub
mov
inc
mov
imul
cdq
mov
loopne
inc
push
or
(bad)
enter
mov
add
fadd
push
cdq
dec
dec
pusha
repz
out
pop
mov
sbb
lods
scas
test
mov
and
cmps
(bad)
rol
sub
(bad)
mov
mov
loope
mov
inc
aaa
movs
mov
imul
push
cld
aaa
xor
aaa
je
xchg
mov
fnstcw
aad
jno
jo
jno
mov
jns
sub
sub
movs
enter
push
sti
inc
sbb
or
and
or
test
arpl
jecxz
xor
scas
rol
fwait
in
xor
mov
sahf
cs
nop
comiss
fidiv
dec
mov
cmp
mov
jae
or
es
fwait
or
popf
sbb
pop
sub
arpl
(bad)
shl
inc
adc
cli
les
rcl
imul
es
xchg
fldcw
imul
xchg
sar
cmp
retf
add
mov
into
aas
dec
xchg
test
or
fsubrp
loopne
aas
jl
lods
icebp
xor
lock
lods
xchg
mov
cdq
xchg
pushf
mov
mov
pop
cmps
push
loope
outs
mov
int
adc
loopne
leave
or
jo
lock
pop
das
jno
gs
dec
dec
dec
pop
add
sbb
mov
cmp
jmp
or
jecxz
les
popf
cwde
hlt
xlat
mov
xchg
adc
mov
inc
je
es
mov
jecxz
adc
cmp
test
lahf
fsubr
mov
jle
ja
(bad)
enter
test
xchg
jnp
push
cmc
push
jmp
add
ds
push
sti
cmp
jb
retf
aas
xchg
adc
jns
lahf
(bad)
fwait
retf
(bad)
in
add
imul
pusha
pop
push
adc
cs
dec
call
nop
imul
xchg
xchg
jle
push
jle
and
xchg
sbb
jbe
(bad)
in
shl
xchg
popf
(bad)
push
repnz
aam
pusha
jp
push
mov
fidiv
sbb
adc
stos
repz
fnsave
mov
aaa
lods
shl
adc
shl
lock
cld
mov
pop
pop
xchg
test
jmp
or
inc
arpl
mov
pop
sar
scas
push
cld
imul
and
pop
jbe
and
xor
mov
jnp
call
xchg
sub
cmc
mov
pop
sbb
fwait
mov
jl
xor
push
xchg
test
ds
xchg
movs
cmp
mov
cmps
inc
into
pop
cmp
sbb
push
inc
sub
xchg
sub
inc
and
out
push
xlat
mov
push
(bad)
enter
repz
loop
loopne
mov
retf
jmp
sub
add
jnp
inc
mov
icebp
dec
sub
mov
jne
pop
scas
out
cmp
movs
repnz
and
mov
shr
sbb
lahf
test
dec
and
dec
add
outs
inc
ja
inc
ror
xchg
cmp
cmp
das
pop
pop
add
xor
jmp
dec
mov
sar
pop
das
ror
inc
les
push
push
arpl
jmp
mov
enter
mov
loopne
sub
lahf
std
shl
adc
mov
cmp
jg
push
cwde
pop
retf
xchg
jbe
rol
mov
xor
dec
mov
pop
push
icebp
mov
cmps
clc
mov
loope
dec
push
aam
lock
in
inc
ret
idiv
stos
out
test
cmp
jnp
out
push
jbe
adc
repnz
ins
mov
mov
push
adc
sub
cmp
loope
int
xchg
fist
dec
dec
outs
fisub
pop
pop
inc
pushf
dec
or
dec
mov
popf
push
call
retf
xchg
out
mov
aad
ror
call
call
movs
ins
xlat
mov
movs
dec
xlat
in
loope
out
clc
call
xor
jne
xchg
in
addr16
mov
xchg
cmc
sub
jo
or
sar
or
adc
mov
jp
xchg
push
ficom
add
icebp
add
sub
daa
icebp
pop
sahf
adc
adc
pop
push
aas
dec
dec
adc
stc
mov
(bad)
mov
jmp
cmps
mov
push
ss
ret
jbe
xchg
push
sub
lea
dec
push
or
icebp
pop
(bad)
aad
mov
jg
cmps
or
ret
call
leave
pop
jecxz
test
sbb
add
mov
arpl
arpl
add
and
adc
cmp
xchg
xchg
mov
sub
inc
aam
das
je
gs
ss
push
xor
sbb
sub
bound
out
imul
mov
stos
mov
aaa
mov
add
movs
inc
mov
xor
out
pop
(bad)
pop
mov
les
add
jno
mov
cmps
sub
cmp
movs
sbb
add
mov
or
sbb
push
or
out
mov
movs
fld
and
jns
pop
in
(bad)
in
xchg
das
sbb
push
cmp
mov
das
xchg
fistp
loope
cli
sbb
fld
or
lds
loope
adc
popf
clc
and
adc
sbb
imul
cdq
test
loope
and
icebp
push
and
jmp
mov
daa
push
(bad)
sub
enter
dec
sahf
jmp
loop
mov
pushf
dec
test
jno
mov
xlat
add
movs
imul
xor
pop
(bad)
pusha
fcmovb
adc
movs
dec
ja
ret
dec
xchg
das
adc
jl
lea
pop
push
repz
xchg
pop
xchg
fldenv
jo
xor
jbe
(bad)
xor
jmp
fdivr
ins
xchg
(bad)
and
daa
clc
add
mov
ret
jbe
lods
mov
xor
cmp
mov
(bad)
aas
jo
push
hlt
std
setno
cmp
fcomp
adc
mov
cdq
out
dec
shl
jg
adc
mov
sbb
in
add
test
and
sub
jecxz
addr16
stos
ins
aaa
fs
xor
cmp
pop
or
out
or
(bad)
outs
inc
in
enter
mov
dec
and
out
mov
mov
pop
mov
(bad)
cmps
and
mov
test
rcr
mov
int3
cdq
loope
clc
mov
ins
cld
loop
mov
in
in
pop
aaa
movs
call
les
mov
mov
test
pop
dec
cli
push
mov
jns
sti
push
ficomp
pushf
mov
fimul
fnstcw
into
nop
mov
adc
pop
or
jl
imul
mov
arpl
sub
imul
or
ret
xor
dec
aas
shl
pop
mov
jnp
call
(bad)
dec
fs
push
ret
jp
jno
js
dec
fcmovb
test
jmp
pop
dec
out
int3
movs
clc
pop
adc
fsubr
sbb
fstp
mov
dec
icebp
icebp
inc
push
cmp
rcr
test
addr16
jnp
and
jg
idiv
in
in
and
mov
dec
mov
lds
dec
inc
adc
add
lahf
ret
xor
xchg
xor
mov
push
adc
and
ret
pushf
mov
ss
sub
cs
push
and
mov
mov
test
push
shl
ror
xchg
scas
in
retf
or
cmp
push
xchg
add
aam
in
sub
repz
mov
ins
ret
rcl
cmp
xchg
dec
fidivr
inc
dec
lds
test
dec
xchg
sar
pop
inc
or
mov
and
jo
out
inc
clc
cld
jmp
sub
push
pop
and
pop
sbb
inc
popf
ja
inc
(bad)
sbb
mov
xlat
cmps
cwde
fisttp
loopne
inc
dec
push
cmp
cmc
xor
sbb
jmp
fbstp
stos
mov
adc
pop
mov
mov
dec
sub
pop
sub
out
test
inc
imul
xchg
mov
inc
mov
and
sub
lea
mov
mov
shr
adc
mov
inc
(bad)
xor
adc
(bad)
imul
movs
sub
out
xchg
xor
sub
daa
push
aaa
push
dec
sbb
push
jno
inc
fbld
xor
leave
jmp
adc
jo
xchg
imul
retf
int
sbb
dec
jnp
xor
dec
xchg
int
adc
mov
sub
mov
mov
test
add
add
push
push
nop
bound
cli
or
xchg
pop
xor
test
daa
(bad)
or
or
cmp
std
leave
imul
sbb
adc
xor
xor
mov
jnp
je
cwde
cmc
sub
fcomp
push
mov
imul
add
or
pop
push
and
xchg
bound
ja
jge
in
dec
in
cs
and
ret
push
loop
jae
dec
or
call
cwde
mov
mov
stos
push
fldenv
pop
lds
cmp
es
imul
dec
scas
push
or
hlt
into
fnstcw
add
movs
inc
xchg
out
sbb
lahf
daa
out
repz
sahf
mov
push
imul
test
sti
mov
scas
adc
jmp
je
frstor
mov
popf
mov
sbb
shr
fld
sub
dec
jb
inc
mov
mov
sub
shl
mov
lea
daa
test
idiv
xor
dec
mov
(bad)
or
fsubr
mov
xchg
test
dec
pop
shr
xor
aad
dec
icebp
sahf
out
pop
xor
dec
adc
(bad)
adc
stc
push
pop
sti
push
pop
push
mov
and
cmps
aam
mov
lods
not
push
test
xchg
jo
icebp
pop
mov
dec
xchg
sub
and
pushf
jge
add
mov
xchg
data16
mov
mov
push
cwde
mov
and
out
ror
lds
aaa
daa
dec
mov
mov
or
push
fsubr
xor
inc
js
or
mov
push
cs
adc
popf
xor
xchg
nop
ss
sahf
stos
push
push
sub
popf
out
lods
or
pop
movs
(bad)
mov
xchg
jmp
cli
lock
out
dec
jle
scas
lea
cmp
test
mov
jns
aad
xor
jb
stos
loop
xchg
in
xchg
cmp
movs
fisubr
sbb
cmp
popa
push
dec
shl
adc
mov
xor
idiv
push
xor
(bad)
jecxz
jecxz
dec
daa
ret
pop
shr
xchg
ds
loope
cmp
mov
test
pop
xor
mov
pushf
mov
test
cmp
cdq
cmps
sub
int3
popf
sub
mov
jo
sbb
sbb
nop
shl
retf
test
sbb
cmps
aam
sbb
cmp
pop
outs
movs
cmp
rcr
xor
dec
sub
and
or
sub
mov
cmps
outs
mov
loop
es
adc
add
js
sub
std
ins
dec
test
xchg
xchg
pop
mov
pop
shl
cmp
push
pop
push
arpl
outs
outs
dec
cmp
ret
cmp
dec
(bad)
cli
out
cmps
sbb
push
adc
cmp
inc
or
dec
or
test
fmulp
jnp
cmps
aad
aam
mul
inc
fild
fcomip
ror
icebp
push
cmc
adc
js
in
cmp
sub
arpl
sbb
add
pop
adc
sbb
fstp
(bad)
retf
aas
xchg
aad
sub
dec
mov
xchg
dec
js
hlt
sbb
ret
xor
shr
retf
lea
(bad)
jbe
rcr
mov
jbe
sbb
scas
mov
test
lods
jge
bound
push
ret
jae
add
cwde
push
leave
lds
cli
xor
push
mov
push
mov
and
retf
popf
dec
pop
mov
cmovne
cmc
sbb
call
test
cdq
push
mov
out
mov
aam
repnz
call
jne
add
inc
inc
cmp
xchg
out
and
cmp
mov
imul
sub
fwait
push
and
(bad)
rcl
dec
out
popa
xchg
adc
(bad)
pushf
mov
or
mov
rcr
test
mov
sbb
test
das
cmp
jmp
cmp
cmp
ret
outs
repnz
lock
inc
jne
mov
push
ret
fucom
cmp
mov
xor
es
pop
fwait
dec
pop
lods
pusha
ss
xor
mov
ins
jno
out
push
mov
(bad)
int
pop
xor
call
xchg
iret
test
fnsave
enter
das
daa
dec
mov
mov
in
imul
faddp
mov
push
mov
ficomp
test
pop
outs
movs
mov
xor
int
jb
das
push
or
shr
in
mov
stos
mov
cmp
aas
dec
fwait
mov
and
pop
adc
xchg
dec
adc
rcr
sub
repnz
enter
or
or
retf
adc
push
stos
mov
jmp
rcr
sub
daa
fdiv
in
fdiv
sbb
stos
sub
xchg
jbe
(bad)
fiadd
loop
aam
in
push
jo
retf
test
and
(bad)
sbb
xchg
xchg
lods
mov
inc
inc
xor
inc
movs
repnz
clc
test
mov
lods
out
add
rcr
add
adc
into
cmp
dec
xor
std
pop
jmp
push
pushf
out
pop
pop
dec
adc
or
adc
jno
into
sahf
fstp
push
adc
mov
xchg
push
js
sahf
mov
loope
mov
loope
push
mov
xchg
pop
push
adc
push
bound
je
dec
outs
test
dec
mov
aad
fwait
jne
scas
lods
in
sub
push
cs
popa
dec
dec
popa
sbb
and
call
sbb
push
inc
jmp
(bad)
push
inc
jnp
icebp
scas
ja
cmp
lock
mov
out
les
movs
xchg
pusha
stos
js
cmp
aam
ss
pop
mov
test
xor
loop
shl
retf
mov
or
mov
lahf
mov
cmp
pop
mov
dec
sahf
ss
imul
sub
and
std
fld
mov
cmc
push
dec
dec
pop
add
pop
inc
mov
xor
retf
neg
push
mov
xchg
adc
xchg
lods
hlt
push
mov
fisubr
call
mov
xor
dec
test
(bad)
fucomp
mov
in
jbe
pop
in
popf
cwde
ja
pushf
add
ja
xchg
stos
inc
and
add
jae
mov
comiss
lahf
cld
or
ins
and
repnz
jmp
or
fadd
das
xor
push
inc
(bad)
mov
sbb
test
in
push
lds
add
arpl
movs
cdq
retf
jecxz
popf
in
jmp
repnz
pusha
pop
inc
lods
xchg
int
or
loop
adc
mov
sbb
out
retf
xchg
push
mov
pushf
(bad)
fisub
mov
fwait
call
maxps
add
and
les
xchg
out
aas
in
push
or
jo
ds
mov
inc
call
nop
mov
jne
jmp
push
ret
inc
retf
fnsave
push
lahf
fisub
or
aam
mov
addr16
rcl
nop
add
lds
addr16
je
repz
and
jge
popf
jecxz
nop
es
mov
repnz
jle
mov
test
xor
scas
es
mov
jmp
sub
jmp
cdq
sti
aam
pop
cmp
xchg
in
pop
xchg
lods
cmp
dec
scas
stos
mov
inc
jbe
dec
int
jge
push
or
std
enter
adc
scas
pop
lods
jg
mov
cld
push
push
mov
mov
cmp
jp
imul
(bad)
shl
fsub
and
mov
ror
mov
push
sub
jp
adc
or
pop
inc
add
push
sub
inc
inc
cli
mov
sub
pop
mov
xor
stc
mov
and
hlt
mov
popa
fcom
sub
jge
test
pop
add
(bad)
hlt
xor
pushf
pop
mov
cmc
inc
mov
lock
data16
push
lock
dec
imul
in
je
adc
test
jne
(bad)
aam
mov
sub
inc
pop
push
sub
mov
pop
mov
adc
(bad)
sahf
dec
mov
cmps
popa
add
pop
pop
and
jo
add
movs
out
fmul
sbb
jp
shr
pop
mov
les
mov
jle
jmp
fdivr
pop
fistp
repnz
add
fcomi
inc
push
sbb
cmc
rcr
mov
dec
jecxz
lods
cmp
sbb
pop
rol
aaa
scas
ins
dec
jnp
in
xchg
sbb
xor
loope
xchg
mov
jecxz
lods
xor
inc
in
jg
call
popa
xchg
retf
push
stos
jne
xor
pop
or
cmp
bound
(bad)
and
scas
mov
inc
push
pop
cmps
inc
cmps
pop
sub
xchg
into
test
aad
pop
iret
push
add
pop
out
inc
fdiv
cmp
rcl
ins
retf
inc
inc
xor
mov
xchg
jae
ss
es
sbb
mov
mov
inc
mov
or
pushf
jp
cmp
movs
cmp
mov
and
or
addr16
mov
push
push
idiv
lds
out
push
add
pop
jle
jo
mov
cdq
add
ins
shr
outs
fiadd
cmp
jge
mov
pop
adc
xchg
imul
pop
cmp
sahf
sbb
fistp
cmp
movs
ins
add
out
aas
ins
pop
xchg
dec
movs
fiadd
cld
adc
pop
in
mov
shr
mov
jno
xchg
cmps
dec
mov
pop
nop
pop
nop
mov
adc
sar
mov
jg
cmp
pop
xchg
xor
(bad)
(bad)
sti
and
jbe
inc
and
lahf
push
dec
jg
(bad)
test
sar
dec
xchg
jb
jle
cmps
fcom
ror
dec
shl
leave
icebp
in
push
jmp
pop
sbb
pop
mov
cmp
shl
add
and
movs
sub
jle
push
aam
in
xchg
add
inc
xchg
jge
inc
call
and
ror
fidivr
std
lds
add
pop
popf
inc
popf
mov
cmp
push
outs
xlat
test
(bad)
cmp
sbb
pop
cmp
clc
and
dec
mov
push
sbb
popf
out
neg
rol
into
adc
jnp
ss
shl
mov
ror
mov
sbb
scas
packuswb
test
xchg
xchg
xchg
in
adc
cmp
shr
mov
or
cwde
les
bound
push
add
jge
dec
shl
cmps
adc
fbstp
and
add
jo
xor
mov
sub
retf
sub
(bad)
aas
inc
xchg
push
sbb
ins
jns
mov
dec
mov
test
retf
test
out
mov
dec
call
into
add
(bad)
sti
push
push
pusha
add
(bad)
xchg
cmp
mov
js
fiadd
and
and
sbb
(bad)
lahf
shr
dec
in
les
imul
leave
push
rcl
pop
and
dec
mov
adc
ret
pop
retf
fld
js
aas
cmp
hlt
pop
xor
popf
cld
xchg
lods
cwde
jg
jne
sbb
inc
popf
jb
push
sub
jp
adc
push
mov
or
xor
in
(bad)
dec
lods
dec
push
push
test
or
add
xor
jp
push
sub
jb
lock
dec
mov
jo
lock
repnz
and
scas
jbe
or
inc
cmp
jp
dec
mov
pushf
out
push
daa
cmp
movs
rcr
adc
scas
pop
and
push
jno
retf
or
pop
pop
mov
das
xchg
push
cmps
adc
and
fwait
push
mov
gs
or
ins
cmps
scas
loop
data16
rcl
inc
mov
int
ret
vpcomq
jmp
sbb
xchg
fld
test
sbb
add
pusha
scas
div
xchg
cmc
int
iret
test
iret
or
lds
inc
sbb
or
rcr
call
cmp
mov
daa
jns
fistp
and
gs
shr
rcl
dec
or
mov
test
fiadd
mov
cmp
addr16
cmp
retfw
mov
inc
jg
call
gs
js
pop
dec
cmp
jbe
add
int
cmp
stos
test
or
es
and
inc
jbe
xchg
xlat
mov
(bad)
loope
mov
rol
std
push
out
push
pop
fbstp
rcl
pop
stc
adc
or
outs
aaa
mov
xchg
sbb
jecxz
sbb
fwait
add
fnstcw
cmp
hlt
xchg
int3
xor
xchg
cli
ins
es
(bad)
jg
jno
ret
mov
nop
mov
push
cwde
jmp
or
int
inc
nop
push
inc
jns
mov
mov
mov
aad
pusha
xchg
(bad)
stos
adc
stos
pop
pop
ror
xlat
xor
lods
mov
mov
scas
dec
xlat
outs
xor
dec
fstp
add
and
dec
leave
pop
dec
jb
xor
push
lock
bound
jge
mov
hlt
pop
xchg
sub
or
bound
push
xchg
(bad)
rdtsc
data16
imul
loopne
in
gs
dec
jbe
call
xor
pop
lahf
push
sub
nop
and
test
jnp
dec
inc
xchg
cdq
inc
ins
jg
jge
aad
das
xlat
dec
pop
dec
sahf
push
fcmove
xchg
mov
(bad)
arpl
dec
mov
pop
push
movs
sbb
pushf
loopne
cmp
std
(bad)
jecxz
mov
shl
ds
test
ja
jp
neg
mov
adc
jns
retf
js
jns
out
faddp
cld
add
call
mov
cmp
sbb
ret
push
clc
cmp
jg
inc
lds
mov
dec
(bad)
sti
imul
fisttp
mov
unpcklps
and
inc
jb
loopne
leave
repnz
scas
dec
dec
ds
icebp
outs
sar
shr
push
jg
push
mov
inc
mov
and
(bad)
jmp
gs
loopne
repz
fistp
or
mov
jmp
stos
sbb
xor
ins
aam
pop
inc
jmp
aaa
pop
push
add
mov
sub
xor
xchg
pop
ins
daa
add
mov
stc
inc
inc
test
in
or
sbb
or
cmp
cmp
int
xchg
clc
data16
mov
scas
cmp
and
pop
in
and
sbb
jmp
or
sub
sbb
mov
stos
mov
xor
mov
push
pop
jb
inc
push
aas
xor
dec
inc
push
loop
ret
repnz
pop
mov
adc
sub
out
cmps
adc
in
push
test
sahf
jge
jnp
ins
ficom
out
pop
cld
mov
rcl
adc
mov
cli
mov
(bad)
icebp
mov
and
mov
jmp
xchg
cdq
int
xor
out
fiadd
adc
test
not
ja
clc
aad
pop
dec
(bad)
and
jmp
bound
icebp
in
sar
xchg
mov
not
push
push
jns
or
pop
pop
stos
mov
cmp
push
jecxz
sti
and
rol
jle
test
stos
call
inc
(bad)
pop
div
or
push
popf
dec
test
ror
out
push
inc
iret
shr
jle
inc
cmp
jbe
cdq
jb
or
jl
mov
mov
loop
inc
pmullw
push
retf
mov
sar
mov
xchg
jno
push
add
or
mov
sub
push
bound
imul
mov
jnp
push
cli
xchg
hlt
in
sbb
lds
pop
jae
lods
int3
popf
fild
into
jb
mov
rcr
jmp
in
mov
test
xor
push
lea
cmps
mov
gs
xor
(bad)
out
sub
cdq
cld
mul
out
adc
dec
add
rcl
jo
pop
fisttp
jno
inc
sbb
mov
mov
pusha
movs
or
xor
pop
push
adc
xor
xor
mov
ror
and
test
xor
pop
scas
mov
push
fmulp
leave
test
dec
xor
sub
call
mov
or
dec
push
and
cli
popf
pushf
mov
jb
xchg
call
ss
scas
mov
mov
test
mov
rol
not
sub
lock
bound
xlat
shr
(bad)
iret
xor
and
int3
xor
iret
retf
and
sbb
daa
xor
aam
cmps
cmp
cbw
fcomp
add
cmps
out
and
repnz
dec
aas
dec
std
loop
xor
in
dec
out
ficomp
dec
inc
cld
jecxz
jg
and
test
mov
in
loopne
push
loop
add
in
in
icebp
inc
cli
es
sub
and
cmp
ret
push
jnp
(bad)
call
jb
enter
add
test
xchg
mov
fsubr
aaa
mov
jnp
adc
jns
mov
inc
aam
scas
cli
scas
and
fldenv
cdq
push
adc
pop
mov
adc
sbb
pop
int
rcr
jge
cmp
call
add
adc
ins
jns
sbb
cld
fadd
dec
aad
cmp
call
pop
add
int3
ds
inc
daa
addr16
jns
int
arpl
mov
pushf
push
out
push
fwait
dec
cmps
push
addr16
adc
jns
mov
mov
punpckldq
jle
jmp
retf
pop
pop
mov
pop
adc
lea
mov
rol
ins
lods
xchg
call
dec
or
push
leave
jge
sbb
or
or
pop
sbb
fstp
adc
cli
xor
(bad)
repnz
(bad)
jmp
xor
xchg
lahf
lods
clc
mov
(bad)
popa
xchg
loopne
aad
push
pop
(bad)
mov
movs
cs
out
xchg
mov
push
push
dec
lahf
stos
jno
sbb
cwde
dec
int3
adc
jns
push
nop
mov
and
mov
jle
sti
or
rcr
dec
mov
or
out
cmp
arpl
or
push
mov
push
sbb
cmps
(bad)
hlt
fnstenv
loope
bound
arpl
inc
sbb
aas
jmp
cmps
add
fldcw
fadd
push
imul
mov
mov
xchg
test
jo
rcl
inc
pusha
mov
add
fcmovb
and
pop
mov
adc
xor
adc
inc
iret
int
jecxz
in
xchg
dec
mov
jne
icebp
push
mov
out
cmp
pushf
mov
fmul
xchg
jge
adc
adc
test
push
or
xchg
sbb
adc
repz
loop
sub
imul
shl
add
sar
mov
cmp
ja
das
xchg
jmp
ins
fadd
xor
retf
aas
daa
das
(bad)
or
aas
xchg
jmp
pop
iret
dec
retf
loop
lock
and
imul
or
fisttp
ffreep
cmps
clc
stos
and
imul
jb
xor
shr
sahf
aaa
and
or
jle
inc
xor
mov
(bad)
mov
pop
std
sub
inc
loopne
sti
adc
push
mov
movd
jge
mov
cmp
mov
sbb
xchg
pop
dec
dec
inc
mov
test
addr16
lods
iret
das
cmp
jmp
std
sub
bound
fwait
mov
movs
mov
push
mov
fcom
xor
addr16
mov
mov
shl
cmp
add
mov
(bad)
sbb
mov
dec
inc
xchg
into
sbb
cmp
cld
ficom
mov
sub
jge
fst
jbe
mov
xor
les
imul
cmp
nop
push
dec
xor
push
push
dec
stos
(bad)
push
aaa
ins
jno
add
mov
jo
loop
lds
jle
jle
imul
jnp
gs
es
clc
push
dec
dec
mov
xor
mov
sbb
fwait
pushf
mov
jmp
shl
or
xchg
cmp
mov
sar
adc
les
int3
rol
sub
(bad)
out
add
inc
jp
add
cwde
or
out
dec
cmp
mov
rol
scas
xlat
mov
pop
push
clc
inc
push
(bad)
push
adc
and
dec
fcomp
xor
cdq
mov
das
mov
mov
cmp
push
jmp
push
sub
adc
inc
enter
out
jmp
mov
outs
in
js
xor
jne
inc
mov
jle
fild
(bad)
pop
in
xchg
loop
adc
mov
movs
cmp
mov
mov
pop
leave
movs
and
into
das
push
cmpxchg
mov
dec
adc
cmps
pop
xor
pop
mov
aas
std
imul
scas
retf
mov
or
int3
sbb
mov
add
data16
mov
dec
mov
sbb
outs
test
xchg
loopne
lods
rol
cli
sbb
pop
dec
lods
ret
jmp
mov
push
leave
pop
(bad)
and
sub
ins
cwde
sub
pop
ins
jb
push
adc
jns
fcmovu
inc
icebp
cmp
in
pop
pop
(bad)
cdq
data16
cmc
out
movs
popa
leave
push
push
fimul
sahf
test
icebp
movs
cmp
sti
pusha
ficomp
(bad)
sbb
std
push
sub
xchg
sbb
cmc
xor
lock
mov
popa
xor
jmp
ficom
mov
mov
jecxz
lods
stos
(bad)
push
or
xchg
inc
jne
pushf
leave
jnp
jl
retf
pop
bound
ret
clc
pop
ja
dec
add
dec
rcl
cmp
loope
inc
xchg
dec
stos
ss
and
or
pusha
outs
repz
leave
ins
cmps
lahf
xchg
aaa
jae
push
fistp
xor
or
push
pop
movs
ja
(bad)
dec
push
xchg
dec
mov
rcl
mov
cmc
cmp
popa
mov
add
enter
jg
lods
movs
sbb
mov
jns
mov
cli
scas
fcmovne
xchg
es
jbe
mov
aad
xor
daa
dec
fidivr
push
dec
out
xor
jb
cmp
rcr
iret
outs
hlt
sbb
es
nop
push
fsub
stos
pop
sbb
sbb
dec
leave
ds
rol
popa
adc
inc
sbb
gs
out
cli
daa
xor
mov
jle
or
aad
xchg
(bad)
lds
retf
mov
cmp
clc
adc
dec
popf
jmp
nop
icebp
ins
xor
add
mov
in
outs
fild
sti
fwait
sub
(bad)
jns
xlat
call
xchg
in
mov
loopne
test
cmp
pop
jg
and
imul
cmp
cmp
cmp
ret
(bad)
out
pusha
fwait
cld
mov
ins
xchg
sub
dec
int
daa
pop
(bad)
adc
or
int
out
adc
clc
pop
mov
or
sbb
mov
dec
int
das
pop
jle
jne
enter
mov
jmp
aad
and
pop
ja
push
sub
push
push
nop
inc
ds
jg
enter
fcomp
sub
popa
adc
pop
int
leavew
lahf
mov
adc
mov
and
push
pop
jbe
sbb
mov
lods
mov
ret
cmp
xor
sub
sub
mov
jno
mov
jne
fs
outs
pop
xchg
loop
jle
cwde
inc
punpckhbw
jo
lahf
push
cli
pop
sbb
or
and
jbe
sub
aaa
les
test
sub
pop
pop
fwait
xlat
sbb
shl
aas
push
mov
jmp
pop
mov
fisub
(bad)
fwait
push
in
inc
inc
outs
push
shl
or
add
adc
push
and
loope
add
add
sub
ret
aad
(bad)
aad
neg
(bad)
and
pop
call
pop
data16
fcmovnb
dec
(bad)
daa
sahf
loopne
jge
sbb
xor
mov
movs
stos
sub
ja
ret
out
pusha
and
cmp
mov
inc
clc
or
pop
adc
push
pushf
in
ds
inc
in
sub
sahf
xchg
push
repz
inc
mov
lea
lahf
jge
push
mov
(bad)
(bad)
lea
inc
sahf
cli
cmp
in
mov
popa
iret
jo
push
(bad)
pop
popf
lahf
pop
dec
sbb
cli
xchg
rcl
dec
jae
mov
js
in
cli
jge
cmp
mov
mov
(bad)
fmul
xor
and
pusha
test
pop
div
mov
jb
mov
push
mov
fild
xor
out
aam
mov
scas
call
sti
and
mov
adc
push
sbb
cmps
push
aad
mov
fisttp
movs
jecxz
iret
sub
push
retf
(bad)
fild
(bad)
mov
ja
push
pop
push
mov
retf
sbb
(bad)
cmps
xor
jmp
test
sub
dec
mov
cmp
jp
add
xor
fs
push
call
dec
repz
das
cwde
(bad)
ror
scas
mov
movs
cmp
sbb
adc
xchg
sahf
sbb
sub
retf
fnstenv
fcmovbe
lods
sub
inc
(bad)
mov
dec
cmc
jge
mov
call
pop
mov
in
sbb
call
cmp
mov
retf
push
pop
aas
mov
fwait
(bad)
in
pcmpeqw
mov
inc
es
jbe
mov
test
xlat
(bad)
lea
pop
shl
or
(bad)
push
dec
shr
cdq
repz
repnz
ficom
fisubr
bound
xor
fisttp
imul
(bad)
fnstcw
xor
sahf
(bad)
fsub
retf
sub
scas
or
sti
xor
retf
int3
push
pop
sub
add
xchg
or
mov
stc
inc
add
inc
cli
or
and
test
cmp
add
jecxz
mov
mov
popa
stos
push
leave
es
repnz
imul
mov
test
dec
sub
out
push
je
dec
std
adc
jne
jle
and
das
lods
mov
xchg
mov
loope
jp
mov
cdq
and
test
mov
popf
out
mov
mov
sub
dec
cmp
into
xchg
mov
push
dec
gs
pop
ds
pop
neg
fs
cmp
pop
jnp
stos
test
ret
leave
out
pop
lods
pushf
stos
cwde
xor
pop
sar
xor
retf
sbb
stos
jge
sub
ins
fs
push
cmp
inc
pop
xor
and
mov
sti
jle
adc
and
sbb
(bad)
xchg
movs
mov
test
leave
jmp
pop
icebp
jl
cmp
fs
xor
push
mov
test
mov
inc
loopne
or
ds
cmc
inc
mov
lods
push
lods
std
std
loope
or
mov
jnp
add
clc
mov
jg
aad
cmp
mov
pop
aad
aad
js
mov
push
mov
fisttp
jle
mov
mov
out
cmp
shl
sbb
scas
out
enter
pusha
mov
or
adc
and
or
jmp
add
cmp
mov
arpl
test
pop
adc
das
sub
cmp
fidivr
inc
add
call
jns
sbb
lods
fscale
cmp
das
jg
xor
push
aad
mov
sbb
xchg
nop
out
dec
push
lds
aas
push
arpl
pop
in
out
add
jbe
xchg
push
dec
rcr
rol
add
and
cmp
test
ficomp
aaa
int3
cmp
(bad)
mov
clc
mov
hlt
xor
adc
mov
push
jb
fwait
int
mov
enter
add
aam
fwait
sub
mov
ja
cmp
loope
sub
and
xchg
pop
push
inc
mov
stos
mov
loopne
leave
movs
ins
lahf
mov
sbb
fs
pop
repz
retf
lea
cld
jmp
in
cmp
into
pop
xlat
inc
mov
lock
mov
(bad)
sbb
sub
jb
cmp
or
cli
push
sub
mov
jae
mov
inc
(bad)
adc
jbe
out
xlat
mov
sub
dec
not
and
add
jmp
mov
pusha
push
ss
mov
and
mov
(bad)
(bad)
ins
sub
sbb
push
test
repnz
xor
mov
fist
loope
retf
mov
jmp
add
movs
pop
or
mov
hlt
xchg
pop
data16
xchg
movs
int3
pop
mov
imul
mov
inc
jmp
idiv
cdq
inc
pop
ret
xor
push
or
or
jl
test
into
fsubp
cmp
jbe
in
dec
in
sub
das
and
jge
dec
push
jbe
push
int3
retf
pop
sti
shr
cmp
or
lahf
int
mov
sub
movs
sub
sub
mov
mov
jae
mov
xor
xchg
jno
xchg
cmp
push
fld1
sbb
sbb
push
pop
add
push
cs
xchg
and
pop
mov
fsubr
pop
sahf
mov
aas
xor
pop
sub
mov
stc
scas
push
jle
(bad)
or
pop
fdivrp
mov
jns
mov
sahf
call
jp
adc
outs
xchg
mov
int
jb
mov
fcomp
retf
push
les
out
shl
outs
repnz
arpl
xor
and
leave
fsub
stos
and
adc
cmp
lds
cmp
out
leave
fnstcw
inc
stos
rcl
sub
out
out
retf
scas
inc
(bad)
push
mov
cmp
push
in
lods
jp
dec
ja
mov
loope
(bad)
in
aad
dec
mov
pop
aaa
imul
mov
jae
enter
psadbw
mov
jno
outs
inc
mov
sar
(bad)
mov
mov
int3
adc
adc
idiv
push
inc
mov
cmp
cmc
into
xlat
aaa
sahf
and
test
inc
xor
add
mov
sub
sub
xchg
js
sti
xor
push
xor
mov
pop
test
loop
xor
mov
test
sbb
mov
sbb
call
sahf
dec
add
mov
mov
les
fstp
lock
cmp
jb
sbb
add
or
icebp
test
fstp
or
fcom
adc
push
lahf
ret
mov
test
mov
jge
popa
dec
push
fwait
lahf
dec
pushf
inc
add
mov
cmps
cli
ds
rcr
add
fdivr
fild
test
stc
dec
sub
or
shl
cmp
dec
or
fnstsw
sub
lods
and
xor
inc
xchg
xchg
into
sar
mov
aam
icebp
sbb
mov
lea
ror
out
popf
mov
push
inc
pop
jp
pop
enter
lahf
push
test
mov
ror
sahf
sbb
mov
xchg
fistp
cdq
sub
jo
lahf
mov
es
dec
ss
in
fld
sub
(bad)
fnsave
cmc
call
fadd
mov
add
test
ins
fwait
adc
js
mov
(bad)
mov
out
cwde
pop
or
cmp
dec
pushf
fwait
sar
sub
sbb
pushf
push
add
(bad)
push
pusha
retf
test
mov
jno
sar
sbb
pop
pop
dec
dec
test
and
inc
loop
mov
xchg
fs
es
mov
loop
mov
sbb
mov
adc
int3
mov
aaa
dec
pop
into
ins
mov
(bad)
xchg
sub
mov
xlat
xchg
cmp
xor
mov
imul
pop
test
es
inc
jp
loop
aam
imul
push
sub
call
cmp
pushf
dec
lahf
jmp
cmp
mov
lock
sti
cmps
ror
js
test
cmp
hlt
xchg
dec
cmps
test
pxor
int
nop
pop
xchg
and
adc
call
scas
or
fisub
jl
rcr
imul
push
mov
cmps
lds
add
or
adc
cmp
adc
mov
aaa
div
cmps
or
xor
enter
(bad)
jmp
sbb
inc
xor
sub
shl
in
lahf
mov
push
sahf
jmp
loop
lock
and
pop
cmp
out
dec
idiv
fadd
mov
add
add
xor
shl
std
pop
add
adc
fwait
loope
mov
addr16
dec
sub
loope
movs
xor
cli
push
pop
mov
repz
test
inc
das
push
clc
mov
test
push
pop
sub
imul
xor
fwait
jnp
pop
scas
mov
mov
out
xchg
retf
rcr
bound
hlt
adc
push
inc
or
mov
dec
pop
repnz
xor
push
or
xchg
inc
or
mov
rol
outs
(bad)
cli
mov
inc
push
pushf
mov
pop
or
daa
stc
out
jge
adc
pop
rol
das
loop
ds
inc
fidivr
mov
(bad)
dec
jae
push
nop
mov
out
xchg
sub
mov
outs
ficomp
retf
add
inc
(bad)
dec
pop
mov
sub
clc
stc
mov
dec
into
out
pop
ins
add
push
pop
(bad)
out
mov
mov
out
lahf
push
das
pusha
fcomi
sub
scas
into
rol
imul
dec
lock
jmp
fldcw
fldenv
sub
pop
cmp
dec
sbb
jnp
dec
sti
(bad)
cmps
(bad)
sbb
loop
inc
and
sub
mov
out
and
aam
or
(bad)
mov
dec
loop
cmps
jecxz
mov
int3
push
not
call
mov
test
js
inc
add
test
repnz
sahf
aas
sbb
fcom
ins
lods
inc
sub
xchg
push
leave
ds
xor
js
xlat
xor
cld
je
rcr
sub
jp
ins
mov
jmp
fsub
push
inc
xchg
adc
in
xchg
lods
xchg
cs
inc
push
and
xchg
sub
and
loop
pop
pop
fnsave
ret
add
and
(bad)
and
in
inc
or
sbb
inc
mov
out
sbb
lock
shr
jecxz
mov
push
jno
pop
fwait
(bad)
js
pop
sbb
repz
popf
int3
dec
popf
add
(bad)
jecxz
inc
ss
adc
outs
aam
jnp
push
nop
mul
and
call
push
cmp
cmp
outs
pop
movs
jne
fstp
lahf
arpl
mov
test
mov
xchg
sub
cmp
inc
shl
call
mov
push
mov
ins
jns
popf
lods
inc
pushf
mov
jg
cmp
dec
loop
pop
je
(bad)
jne
pop
imul
lods
inc
cwde
imul
js
cmc
sub
leave
scas
sbb
out
ds
enter
sahf
and
(bad)
fwait
add
dec
inc
rcl
sbb
pop
and
not
fnstsw
cmps
mov
xchg
icebp
pop
retf
js
outs
xchg
out
xchg
mov
xchg
mov
adc
jb
stos
xor
into
cmc
cmp
mov
push
cdq
sub
popf
sbb
mov
scas
mov
call
mov
sbb
js
loopne
cmp
cli
repnz
ror
add
outs
pop
out
mov
retf
xchg
xchg
or
push
inc
stos
dec
pop
jno
ins
(bad)
jmp
xchg
(bad)
xchg
jbe
loop
push
outs
popa
fdiv
int
pop
repnz
bound
cmp
fild
aaa
stc
xchg
fistp
and
fldcw
lock
pop
repz
sbb
popa
push
fsubr
push
mov
sub
leave
ins
lahf
mov
ss
je
xchg
cmp
ja
clc
sbb
cmp
dec
daa
jo
into
mov
xor
xchg
sbb
jns
push
cwde
mov
and
fcmovnb
in
push
fldenv
ja
leave
add
aam
icebp
lahf
cmp
xor
adc
xor
jmp
add
js
push
bound
mov
inc
lds
(bad)
out
mov
adc
dec
pop
add
ja
pop
fwait
aaa
ja
ror
sbb
loope
pusha
mov
not
push
fs
ret
ror
pusha
inc
inc
mov
xlat
xor
test
adc
scas
imul
ret
(bad)
(bad)
dec
mov
(bad)
mov
aad
movs
mov
xor
xor
(bad)
movs
xor
sub
sbb
mov
and
inc
xor
adc
push
pop
addr16
dec
mov
and
cmp
push
lea
movs
mov
sub
int3
retf
jmp
std
shl
mov
jb
(bad)
cmps
sbb
sub
mov
das
fsub
xchg
xchg
in
js
hlt
shl
loop
les
adc
ja
pushf
sub
icebp
leave
dec
push
aas
lock
les
arpl
lahf
jnp
jle
push
dec
xor
inc
sbb
imul
mov
push
mov
mov
hlt
sub
rcr
js
dec
cmp
cmp
ds
pop
inc
or
gs
inc
fisub
call
jg
xchg
jp
je
cmp
ja
add
and
addr16
fild
pop
rcl
mov
jb
mov
scas
mov
loopne
pop
(bad)
cmp
inc
nop
clc
loopne
test
test
mov
mov
sub
and
out
adc
sbb
jmp
jmp
stos
xor
and
dec
push
daa
adc
mov
inc
inc
pop
pop
mov
out
cld
test
add
mov
add
lods
add
sbb
mov
fsub
and
fprem1
pop
shl
inc
scas
push
(bad)
out
mov
pop
sub
sti
aam
vrcpss
pop
push
call
ret
sti
push
mov
out
push
retf
xor
aam
inc
mov
icebp
pop
std
das
arpl
sbb
pop
pop
inc
add
call
inc
scas
imul
popa
push
mov
iret
loope
fisttp
les
pop
sbb
mov
out
jp
dec
loope
mov
daa
mov
adc
or
xchg
or
inc
addr16
adc
dec
push
inc
lods
xor
or
and
sti
cmps
fmul
cmps
jb
cmc
leave
fsub
test
mov
dec
pop
add
xchg
imul
lds
dec
test
fwait
mov
mov
dec
mov
out
aad
mov
stos
js
call
inc
sbb
sbb
xor
scas
xchg
mov
add
movs
ror
dec
adc
sbb
sub
and
mov
iret
outs
loop
mov
rol
dec
gs
fmul
inc
aaa
sub
mov
jecxz
mov
pop
imul
dec
int
xchg
out
cwde
xor
or
dec
jecxz
or
jne
dec
test
(bad)
sub
mov
jbe
lods
imul
push
mov
inc
or
xchg
mov
adc
cmc
xchg
mov
and
scas
mov
lods
cmps
lock
and
cdq
dec
adc
sub
sahf
rcl
push
jg
mov
movs
mov
mov
or
cmp
sbb
call
jecxz
leave
mov
sub
mov
push
sbb
int3
out
adc
dec
dec
sub
aas
xor
or
fwait
inc
push
pop
movs
movs
mov
push
fdivr
stc
or
sbb
mov
dec
dec
stos
xor
mov
std
mov
push
fmul
jo
xchg
in
das
les
push
xchg
add
je
xchg
mov
push
aad
ins
loop
jg
dec
mov
inc
mov
or
(bad)
ret
les
pop
mov
adc
cmp
xchg
mov
add
hlt
aas
dec
sahf
cmp
out
gs
in
(bad)
enter
in
push
test
(bad)
or
retf
(bad)
xor
daa
dec
daa
mov
push
imul
test
retf
pop
es
(bad)
mov
iret
std
add
aas
cld
aad
mov
cmp
add
daa
leave
sbb
daa
add
mov
or
popa
push
test
lods
idiv
out
(bad)
rcl
jge
je
add
and
xor
sbb
jmp
int3
pushf
test
stos
cmp
movs
adc
pop
adc
les
mov
lock
jg
loopne
pop
sbb
out
je
pop
adc
inc
mov
xor
pop
push
das
ror
sub
xchg
clc
dec
cld
shr
mul
mov
dec
outs
and
inc
js
mov
(bad)
pop
dec
cmp
sub
add
or
int
repz
add
and
xchg
jecxz
pop
jl
int3
clc
scas
fcmovb
jl
hlt
das
repz
add
sbb
mov
lds
das
repnz
jmp
mov
data16
pushf
popf
push
xchg
push
mov
sub
push
sub
iret
ja
cmp
cmp
mov
(bad)
jbe
bound
dec
jge
hlt
and
push
fwait
ins
jmp
cmp
mov
adc
fidivr
sbb
imul
stos
mov
test
inc
pop
imul
cs
cmp
xor
mov
mov
xor
cmps
adc
neg
(bad)
push
dec
mov
scas
std
outs
mov
dec
call
outs
mov
mov
adc
rcl
sbb
jp
ret
add
addr16
mov
inc
sar
mov
mov
(bad)
jnp
fldcw
mov
dec
pop
pop
add
xor
call
lds
xchg
mov
inc
mov
int3
add
daa
xor
xor
btc
ja
arpl
(bad)
mov
imul
fsub
out
addr16
pop
aas
mov
cli
rcl
pushf
inc
shr
sahf
pop
push
ret
test
mov
sbb
lods
xlat
in
or
pop
dec
mov
pop
std
shl
imul
mov
xchg
mov
inc
inc
push
test
inc
mov
add
push
adc
scas
sti
ficom
xor
data16
std
pushf
stos
ins
cwde
repz
cmp
jnp
mov
sub
or
mov
sbb
es
sub
jns
jl
rcl
and
aam
mov
cmc
ss
jbe
sub
jecxz
loope
mov
mov
call
fldenv
sub
out
test
push
pop
iret
retf
addr16
popa
pop
pushf
and
sub
inc
mov
sti
jecxz
mov
daa
pop
pop
xchg
ret
jge
sar
jecxz
jp
outs
call
cs
cmps
loop
hlt
scas
lods
mov
in
add
or
in
movs
mov
xchg
push
sbb
xchg
push
push
aad
xor
dec
cmp
cld
cdq
xchg
mov
mov
inc
pop
and
mov
fnstsw
sub
loopne
fadd
inc
sub
mov
ins
dec
push
push
xor
and
mov
out
push
pop
sub
sahf
adc
outs
inc
jecxz
jno
mov
sub
scas
ror
cmp
dec
cwde
mov
and
adc
add
xlat
pop
add
push
test
fdivr
pop
xchg
sub
or
cmps
push
lods
(bad)
dec
push
and
adc
lods
mov
inc
retf
ficom
add
lahf
add
fild
adc
sub
jmp
cmps
sub
popa
push
xor
retf
aad
int
adc
inc
call
xor
mov
jmp
mov
push
in
scas
and
test
or
inc
jne
and
add
adc
jp
imul
repz
repz
dec
add
sbb
jmp
js
dec
jo
jne
pusha
mov
fidivr
scas
in
ret
pop
xlat
cmps
stos
jb
ficomp
xor
push
mov
aam
outs
pop
fld
adc
fmul
jmp
mov
cli
jg
aaa
cmp
or
pop
cdq
scas
imul
pop
push
add
xlat
adc
jmp
mov
pmuludq
mov
mov
sub
js
add
pushf
jl
sbb
push
in
mov
jmp
pop
dec
ins
cmc
test
fwait
push
push
push
push
out
inc
ret
js
mov
cli
xchg
iret
stc
out
xchg
pop
stos
jnp
(bad)
fst
lea
fiadd
fisubr
stc
sbb
xor
xchg
daa
adc
rcl
dec
adc
mov
add
call
pop
pop
inc
sar
ds
popf
cli
scas
add
out
inc
hlt
cld
aam
fcomp
rcr
push
mov
outs
pop
std
xchg
sub
mov
dec
cdq
inc
mov
mov
(bad)
dec
dec
ins
xor
xor
dec
xor
shr
ret
xor
jl
fs
(bad)
mov
xor
mov
jns
xchg
sar
cmp
mov
cwde
or
dec
fst
(bad)
(bad)
jb
stc
jo
nop
fdecstp
fdiv
inc
sub
adc
pop
out
dec
xchg
std
popf
imul
iret
and
xor
jmp
fisub
mov
jne
xchg
xlat
pop
jb
inc
aad
mov
and
test
xor
xor
sub
inc
repnz
retf
ficomp
enter
xchg
sub
sar
in
mov
jecxz
jmp
cdq
or
jge
sbb
sub
pop
and
mov
and
adc
(bad)
push
mov
dec
loope
jg
test
jbe
mov
jne
mov
outs
std
outs
pop
imul
dec
shr
sahf
jnp
adc
or
mov
jo
pusha
push
cmc
ins
inc
mov
in
mov
cld
add
add
cmp
je
js
lock
pop
neg
lock
mov
xchg
aam
inc
stos
jb
xor
inc
adc
bound
sub
xchg
aas
test
lahf
in
mov
sub
jns
and
call
cmp
inc
ds
jg
adc
stc
inc
fcom
push
cmp
call
pop
test
cmovno
leave
rol
and
push
nop
loope
jecxz
fmul
outs
pop
dec
push
jge
sub
ja
fwait
lds
fnstsw
pop
in
aad
jecxz
or
mov
cmps
rol
(bad)
dec
xchg
jg
das
test
fnsave
cmps
add
das
rcl
imul
rcr
pusha
xchg
push
push
arpl
movs
sub
mov
pusha
add
push
add
pop
cmp
out
lods
cmps
in
xchg
pusha
adc
xor
xchg
call
adc
cs
mov
jecxz
mov
cmps
gs
inc
lds
arpl
call
inc
pop
dec
mov
dec
call
les
push
push
scas
jp
pop
mov
in
les
repz
push
add
mov
in
or
inc
xchg
adc
push
jp
stc
sbb
push
xchg
shl
ret
push
std
add
inc
les
icebp
popf
imul
stos
xlat
arpl
mov
lods
(bad)
add
outs
inc
lods
add
and
fiadd
dec
inc
push
add
aaa
adc
inc
popf
xchg
mov
movs
jl
pop
add
ror
call
sub
cmps
sub
leave
fisttp
or
lahf
dec
xor
inc
out
clc
test
push
sbb
adc
and
jne
push
and
cmp
into
xchg
xchg
into
push
push
test
inc
cmps
push
sti
clc
adc
movs
call
dec
stc
xchg
out
daa
int
or
inc
ss
retf
aad
seto
mov
jno
mov
xor
adc
fcmovu
mov
push
cli
fwait
and
pop
adc
mov
lock
test
jne
cmp
test
repnz
push
or
or
js
and
jno
into
aam
scas
mov
nop
xchg
xchg
jno
dec
arpl
sbb
and
aad
xchg
stc
and
and
int3
fimul
inc
in
jmp
cmc
cli
adc
xor
pushf
out
loope
and
sub
in
inc
call
cdq
je
in
and
int
or
test
or
mov
or
push
sub
mov
pop
repz
movs
or
push
xor
adc
outs
xchg
jp
(bad)
dec
call
inc
repnz
pop
stc
push
pop
jle
fldenv
std
inc
inc
outs
idiv
mov
push
push
push
outs
xchg
xchg
sub
daa
adc
ins
xor
inc
inc
popa
dec
and
sbb
mov
repz
scas
sbb
loope
push
mov
ss
jns
movs
frstor
(bad)
mov
or
shl
in
lahf
sub
xchg
sub
arpl
cmps
and
mov
mov
cmps
ds
jae
mov
xor
ficom
adc
cmps
mov
call
clc
jno
stc
mov
push
or
loopne
xor
pop
push
sbb
jl
scas
sbb
adc
mov
push
sub
and
adc
dec
rcr
mov
inc
clc
push
mov
ds
and
xchg
ss
sbb
sub
ins
gs
aas
test
ret
mov
(bad)
ds
imul
jbe
ficomp
pop
ret
mov
jge
les
mov
movs
mov
or
xor
hlt
test
add
out
mov
xor
jno
outs
aam
cwde
push
retf
ja
and
js
mov
jno
cmp
gs
cmp
stos
jno
jl
shr
lds
fs
mov
(bad)
xchg
mov
jecxz
aad
xor
sub
outs
outs
je
jnp
xchg
dec
inc
call
dec
xchg
ret
sahf
repnz
push
(bad)
das
push
jge
add
daa
xchg
fild
shl
and
pop
xlat
iret
push
xchg
sti
add
dec
or
cmp
int3
xor
out
outs
movs
hlt
add
adc
cmp
test
sub
iret
ret
xor
fadd
sub
inc
ficom
sub
pop
ins
adc
mov
mov
and
jne
cmp
xchg
mov
aas
iret
(bad)
pop
sub
in
nop
retf
sbb
(bad)
pushf
dec
movs
imul
call
fldenv
fnsave
stc
hlt
cs
sub
(bad)
jmp
mov
addr16
in
icebp
int3
sbb
fsubr
dec
scas
add
ins
(bad)
jmp
xor
adc
in
sub
popf
or
adc
rcl
add
dec
call
loope
retf
jne
arpl
xlat
mov
mov
mov
push
mov
xor
mov
jne
sbb
xchg
aas
aas
push
es
iret
pop
adc
ret
and
adc
cli
xor
jns
imul
ret
cmp
inc
mov
into
jnp
mov
ins
and
repnz
jmp
(bad)
ins
stos
fcomp
ret
dec
imul
inc
add
push
and
pop
lods
out
jns
movs
push
sub
pusha
scas
adc
imul
mov
sbb
add
sbb
stc
xchg
loopne
mov
ret
lds
stos
jae
stos
adc
mov
sub
sub
add
shl
imul
sti
cmps
cdq
xor
mov
(bad)
(bad)
icebp
jmp
xchg
sahf
(bad)
ins
aaa
jl
dec
xchg
fld
mov
mov
inc
xor
arpl
jle
mov
jmp
aad
mov
movs
xchg
mov
das
inc
call
aam
push
dec
retf
rcl
mov
push
in
fdivrp
lock
rcl
mov
add
mov
test
pop
fadd
mov
imul
xor
data16
lds
jo
out
out
or
push
mov
loope
sub
cmps
dec
cmps
in
idiv
sbb
dec
fwait
stos
jl
cli
jp
cli
sbb
mov
or
adc
arpl
in
aas
adc
lea
sub
cmps
mov
idiv
call
and
fcom
mov
sbb
xchg
cwde
push
repnz
pop
mov
inc
push
outs
clc
jo
lds
add
and
add
add
das
pop
lock
das
int
push
js
mov
mov
xlat
shl
test
push
sub
call
lds
push
or
pusha
mov
jmp
mov
js
dec
mov
cmp
push
inc
jecxz
loopne
xchg
xlat
xchg
sub
adc
mov
xlat
shl
cdq
(bad)
fdiv
cli
sbb
int
xchg
gs
push
or
ds
sbb
add
ss
mov
xor
sbb
jmp
mov
iret
in
xor
push
inc
pop
pop
out
mov
std
sbb
and
add
test
mov
cmp
mov
lods
jb
test
and
es
adc
cmp
or
mov
push
inc
dec
mov
repnz
imul
add
or
ror
rcr
xor
stos
inc
rcl
cld
dec
cmp
les
adc
sbb
jmp
push
shl
mov
(bad)
ret
pop
ins
int3
ss
fimul
mov
cmp
mov
mov
adc
sar
adc
inc
adc
or
ret
dec
xor
cmp
(bad)
imul
bound
or
push
xor
scas
pop
scas
push
pop
pop
outs
and
sbb
inc
add
adc
bound
push
pop
mov
jle
mov
inc
scas
mov
inc
cmps
sub
push
bound
call
and
clc
pop
mov
pop
jno
inc
mov
dec
xor
fcomp
das
cmp
jo
vaddpd
sahf
mov
(bad)
cld
mov
fnstenv
adc
jg
push
arpl
sub
xor
test
jge
mov
mov
lods
adc
stos
mov
mov
loop
in
add
xchg
nop
dec
push
(bad)
jne
pop
xchg
test
push
push
je
ja
pop
fnstsw
adc
loop
fidivr
fidivr
jl
xor
popa
jo
push
inc
and
push
dec
loop
adc
sub
addr16
push
jmp
dec
jg
ret
or
mov
and
cld
clc
scas
test
rcr
fs
in
push
into
call
aaa
fs
xchg
lock
and
pop
xor
neg
xchg
dec
mov
pop
int
mov
aaa
inc
adc
aam
jmp
fmul
outs
pop
iret
enter
cmp
mov
sub
mov
fbstp
inc
sbb
stos
xchg
push
stc
fisttp
dec
add
sbb
in
je
sbb
mov
xchg
sub
push
cmps
mov
cld
add
in
out
pop
sub
call
fdivrp
adc
ja
dec
test
mov
xchg
add
push
mov
(bad)
or
aaa
shl
test
pushf
dec
nop
loope
in
cmp
adc
mov
clc
or
dec
add
movs
cmp
mov
jno
mov
push
int
(bad)
arpl
daa
jmp
add
mov
mov
fisub
sbb
and
mov
mov
jno
inc
cmp
sub
enter
mov
cmp
pop
addr16
xor
push
mov
jno
dec
sbb
jnp
lods
push
mov
mov
pop
loopne
pop
out
or
push
mov
inc
inc
retf
imul
mov
iret
sti
mov
pop
mov
and
ror
in
cmp
fld
cdq
adc
push
or
js
sbb
jmp
pop
adc
fucomip
or
mov
(bad)
xor
out
fsubr
xchg
(bad)
idiv
mov
mov
in
call
mov
pop
dec
cmp
mov
arpl
push
jmp
in
jb
int
pop
in
sbb
mov
cmps
add
push
bound
inc
(bad)
jecxz
mov
mov
outs
div
je
and
std
or
add
jae
movs
cmps
aam
lea
inc
push
push
int3
(bad)
mov
sub
cld
pop
test
mov
test
int
gs
mov
data16
lahf
mov
and
imul
gs
cli
xchg
movs
xor
mov
adc
push
xor
movs
ds
xchg
call
in
test
stos
out
test
and
mov
fld
pushf
lea
or
jno
leave
or
pop
fist
jecxz
mov
jne
loop
adc
xor
push
push
rcl
shr
inc
xor
sbb
pop
mov
in
out
inc
dec
(bad)
stos
outs
adc
xchg
mov
imul
pop
mov
adc
outs
pop
(bad)
scas
(bad)
sub
movs
(bad)
sti
mov
not
dec
add
arpl
ror
jecxz
add
rol
and
(bad)
shl
aam
int
mov
shl
xor
sub
pop
mov
mov
sbb
pop
sahf
pop
add
and
je
adc
in
je
mov
addr16
mov
xchg
sub
fst
inc
jge
inc
fadd
and
movs
cdq
test
test
inc
out
jmp
test
or
aad
dec
aaa
xchg
jl
mov
pop
ds
mov
retf
pushf
lahf
inc
xor
xor
dec
and
push
and
fdiv
movs
stos
push
push
fiadd
lock
int3
cmp
ret
cli
push
stos
jp
loope
jmp
mov
test
mov
movs
cmp
sahf
jle
mov
or
ja
mov
test
clc
call
mov
xchg
sub
in
lods
loop
int
jns
cli
outs
push
icebp
out
mov
mov
cmp
jg
push
hlt
add
sar
call
stos
xor
lods
test
xchg
adc
(bad)
jno
mov
ret
add
mov
mov
push
mov
cmc
mov
in
fstp
les
jo
mov
shl
add
or
xor
inc
inc
push
adc
jl
sar
call
or
cmps
sub
and
mov
xchg
or
xor
mov
xchg
aaa
and
idiv
pop
dec
ret
push
jle
jge
test
mov
popf
enter
xchg
add
mov
xchg
mov
cmp
jp
enter
in
je
test
ins
(bad)
fcom
je
mov
xor
adc
aad
mov
push
xchg
icebp
inc
popa
movs
or
sub
in
and
js
pop
dec
cmps
adc
mov
mov
gs
jbe
leave
push
or
push
adc
jnp
outs
test
mov
mov
daa
pop
push
cmc
not
hlt
cmps
sub
sub
pop
xor
shr
icebp
cmp
dec
aam
adc
and
pop
cli
mov
push
inc
movs
fidivr
dec
jecxz
mov
stos
jmp
sbb
inc
es
clc
push
mov
jp
add
cmps
je
push
push
inc
out
ds
mov
or
outs
ret
mov
jne
fld
or
cs
in
sbb
rol
fsubr
dec
sbb
cmp
mov
mov
hlt
xor
push
repnz
in
pop
sbb
xor
sub
cmps
int3
test
ds
int
cmp
jp
es
ficomp
xlat
sub
cdq
jb
add
sub
sub
adc
jb
out
test
push
lock
rol
test
cli
xor
push
cdq
call
mov
cwde
shl
mov
push
cmps
pop
xchg
or
pop
cmp
pushf
mov
mul
push
out
movs
movs
stos
push
sbb
pop
and
and
cmp
cmp
ds
popf
lahf
pushf
shl
cmp
(bad)
int3
pop
and
std
mov
sbb
test
or
cmps
jae
rcr
loopne
or
lea
dec
cmp
dec
xchg
imul
leave
sub
pusha
and
in
and
loope
sub
fwait
cmovne
retf
fwait
in
ror
test
aaa
cmps
xchg
jecxz
pop
nop
addr16
movs
test
and
(bad)
(bad)
into
cmp
jne
cmp
shl
outs
js
push
push
and
idiv
sub
cmc
sub
call
push
sub
jo
jns
int
cwde
inc
dec
fstp
mov
mov
lock
mov
je
pop
xlat
(bad)
push
pop
mov
push
mov
xor
and
pushf
shl
jae
arpl
out
mov
cmps
mov
sti
and
test
cs
xchg
cmps
add
clc
pop
cmc
js
mov
adc
ficom
jns
dec
push
sbb
xchg
je
cmp
(bad)
xor
xor
pop
aad
or
push
pop
cmp
in
jge
xor
int3
test
add
sar
iret
mov
xlat
mov
push
sub
jae
movs
daa
pop
sub
sti
ficomp
push
mov
pop
mov
(bad)
rcl
pop
(bad)
fld
sub
jmp
pushf
std
or
jb
loopne
pop
pusha
ins
and
add
int3
iret
mov
dec
jb
mov
jo
cmc
les
push
jb
mov
aad
and
movs
lods
gs
xor
mov
add
sti
mov
jecxz
rcr
pop
ins
call
loopne
pop
sub
lahf
ror
pop
retf
cmps
inc
sbb
lods
cwde
dec
mov
jo
call
aaa
out
fnstcw
lea
mov
mov
aad
enter
sbb
out
arpl
ret
lods
repnz
sbb
mov
jnp
movs
mov
mov
jb
clc
inc
(bad)
lahf
mov
ins
lods
fisub
mov
and
push
adc
pop
(bad)
dec
dec
mov
out
sub
mov
xchg
pop
jmp
add
out
imul
fcomip
add
in
repz
in
in
jg
gs
fwait
aam
cmps
jecxz
xor
data16
jge
push
add
out
nop
in
push
loope
mov
dec
call
push
std
call
xchg
inc
shl
fidivr
out
sbb
adc
(bad)
jp
mov
xor
pop
pop
xchg
add
adc
mov
dec
stos
pop
inc
or
test
jmp
sub
int3
leave
aam
mov
enter
sub
jge
push
push
jmp
sub
pop
and
adc
cs
mov
xchg
mov
pop
or
xor
sbb
sub
cld
add
in
clc
movs
push
mov
xchg
aas
es
movs
sbb
mov
push
jle
(bad)
in
cmc
ja
stos
mov
sub
jne
and
ins
pop
mul
xor
nop
sbb
jge
add
dec
cmps
scas
inc
call
sub
inc
jp
jns
mov
xchg
pop
xchg
adc
mov
sbb
add
fistp
or
push
retf
adc
gs
dec
pushf
mov
(bad)
outs
ror
mov
scas
xchg
iretw
mov
into
jae
sbb
pop
sub
push
mov
inc
test
icebp
add
gs
sub
sbb
mov
add
rol
lods
and
jecxz
mov
mov
nop
inc
jl
xchg
daa
scas
dec
mov
fistp
push
retf
mov
loopne
xlat
or
mov
xor
sub
inc
(bad)
mov
ficomp
dec
addr16
and
sbb
or
ficom
mov
xchg
mov
push
push
lahf
add
inc
mov
test
ss
pusha
dec
gs
xor
lock
std
cmps
(bad)
sub
scas
movs
ret
nop
int
mov
jmp
add
push
push
gs
xor
out
mov
mov
sbb
arpl
push
(bad)
push
retf
cmp
xlat
ds
xor
adc
mov
leave
jmp
mov
jmp
fistp
adc
dec
lock
xchg
pop
cmp
mov
xor
ret
cmp
ds
and
add
mov
xchg
aas
(bad)
jmp
rcr
and
shr
jge
mov
dec
fwait
mov
and
jmp
adc
mov
mov
clc
mov
push
mov
xchg
mov
(bad)
cmc
xlat
push
inc
add
xor
repz
lea
and
mov
test
xchg
or
jle
into
inc
cmp
fwait
cwde
inc
fdiv
sub
mov
fmul
jmp
add
pop
mov
minps
stc
mov
je
xchg
jmp
pop
enter
inc
jno
xor
xchg
cmp
inc
ret
lea
movs
cli
push
xor
int
mov
mov
dec
xchg
frstor
and
(bad)
retf
jmp
imul
mov
cmps
dec
pop
sahf
xor
ret
inc
shl
cmps
pop
ret
jmp
push
mov
mov
movs
jb
pop
add
add
or
test
mov
rcl
inc
out
(bad)
jle
or
neg
mov
push
pop
(bad)
retf
push
sahf
dec
mov
xlat
(bad)
jb
pop
push
pop
xor
loopne
inc
out
scas
xor
movs
mov
test
cmc
push
shl
test
cld
add
jmp
sbb
sbb
xchg
add
cmc
mov
mov
pop
mov
sbb
fs
aas
or
xchg
sbb
sbb
mov
dec
pop
out
imul
leave
xor
mov
iret
add
mov
movs
inc
leave
fdivr
test
pushf
test
ja
inc
sti
dec
xchg
or
out
enter
aaa
or
repz
cmp
mov
repnz
jl
outs
std
scas
in
pusha
aas
cmp
push
xchg
push
movs
push
aad
sub
pop
fstp
mov
idiv
nop
lods
cmp
rcl
jmp
mov
stc
retf
dec
push
enter
mov
sub
mov
pop
idiv
fcmovnbe
mov
out
or
cmp
ds
rol
outs
scas
out
xchg
inc
test
loopne
pop
jno
jg
shl
test
add
dec
cmp
mov
enter
scas
adc
push
sar
mov
adc
and
retf
in
inc
pop
push
lods
sbb
mov
jns
loopne
cmp
ror
xor
fbld
(bad)
loope
mov
ja
out
faddp
scas
js
xor
xchg
jo
in
sub
xchg
push
daa
lods
jnp
clc
push
mov
jle
cwde
fsub
mov
jnp
fwait
ds
je
jns
push
mov
adc
pop
add
mov
and
jmp
(bad)
push
jmp
int3
mov
xchg
cmps
mov
daa
inc
push
pop
cdq
and
sahf
mov
in
es
lods
mov
adc
xchg
lea
call
mov
cmp
movs
fsub
das
jns
ss
ss
jmp
lds
out
pop
pop
mov
xor
movs
sbb
dec
mov
jl
mov
hlt
clc
stos
into
sbb
into
pusha
sti
cmp
jnp
xor
xor
jg
lds
mov
popf
xchg
(bad)
int
fbld
mov
adc
(bad)
jge
sbb
cmp
inc
cmp
out
jmp
push
fld
ret
mov
or
mov
xchg
aam
mov
shr
sbb
jb
pushf
js
inc
inc
data16
sbb
mov
adc
loop
mov
pop
inc
or
adc
repnz
neg
lods
pop
iret
repnz
xor
jecxz
add
xchg
stos
arpl
sbb
out
fmul
sub
out
mov
(bad)
lea
cwde
loop
repz
dec
not
fdiv
inc
jg
loopne
cmp
lds
push
adc
test
popa
xchg
ins
cmp
stc
inc
cli
sbb
iret
addr16
pop
cwde
scas
pop
push
push
pop
xchg
xchg
addr16
or
pop
inc
pop
and
jmp
arpl
retf
movs
ret
retf
adc
push
sbb
out
add
retf
(bad)
jecxz
push
fstp
in
aas
xchg
test
mov
push
jecxz
out
mov
cmc
pop
lods
mul
jb
outs
jge
fcom
mov
(bad)
push
not
mov
xchg
xor
inc
add
pop
ss
retf
add
jb
(bad)
xchg
mov
push
mov
xchg
aas
arpl
or
cmp
pop
sar
jno
mov
hlt
mov
rol
(bad)
xchg
mov
sbb
inc
mov
push
pop
add
or
pop
sbb
jmp
adc
shl
vunpckhps
jle
sbb
xchg
jne
xchg
jne
pop
push
cli
xlat
cwde
add
pushf
cmc
pop
fstp
and
or
adc
(bad)
xor
movs
add
push
lods
ss
(bad)
xlat
sub
popf
retf
les
sbb
dec
or
ror
xchg
(bad)
push
jo
add
repz
imul
ror
push
and
mov
add
dec
nop
mov
stos
fistp
and
mov
xchg
pop
push
cmp
dec
(bad)
std
mul
push
repnz
out
adc
and
cmp
sub
fcom
pop
pop
jp
fyl2x
test
aam
mov
loopne
ss
loope
mov
retf
dec
in
mov
scas
int
and
mov
adc
sub
sub
ror
mov
xchg
div
xor
sbb
cmp
pop
lea
jns
push
mov
pop
add
rol
xchg
data16
dec
sbb
ins
sub
cli
jmp
enter
cs
pop
dec
cmp
cld
lahf
daa
jge
mov
adc
inc
mov
fst
push
pcmpgtb
out
mov
add
fsubr
or
jnp
inc
out
addr16
(bad)
xor
(bad)
pop
mov
repnz
in
mov
inc
jmp
mov
ss
daa
popf
adc
call
ret
push
popf
sbb
push
pop
bound
repnz
hlt
lahf
repz
and
sub
xchg
cmp
or
fsubr
mov
dec
shr
xchg
mov
cmps
xor
popf
gs
lods
loopne
idiv
fdivr
cmp
in
and
sub
dec
push
stc
aad
(bad)
push
outs
out
(bad)
outs
fbstp
sub
xchg
jmp
in
ins
in
dec
push
xor
mov
pop
mov
or
mov
outs
loope
ja
push
sub
aam
and
cwde
leave
jl
inc
inc
add
sti
push
ins
cmp
lea
xchg
dec
inc
in
(bad)
push
xchg
jmp
and
test
cs
ror
mov
sahf
push
add
mov
inc
adc
push
mov
imul
rcr
inc
mov
rcr
cmp
rcr
pop
jge
inc
mov
outs
cs
outs
xchg
daa
add
push
fnstsw
call
mov
test
add
adc
leave
pop
js
and
mov
(bad)
cli
mov
fwait
adc
sub
(bad)
and
xor
in
rcr
xor
sahf
inc
(bad)
cmps
cmp
aad
push
xor
mov
addr16
retf
jnp
mov
xchg
scas
push
das
outs
jns
into
les
js
cmp
arpl
or
ror
pushf
pop
jmp
jbe
clc
out
enter
inc
or
clc
gs
xchg
imul
pop
inc
bswap
pusha
xchg
and
rcr
js
pushf
and
sbb
mov
into
test
lock
(bad)
add
or
or
xchg
cdq
lds
movs
outs
dec
ins
add
or
scas
mov
mov
adc
aaa
cwde
cmp
popf
in
jae
add
adc
scas
sub
adc
outs
push
inc
rcl
xchg
inc
xor
imul
and
cmc
jnp
xchg
jno
out
test
push
jbe
mov
pop
aaa
or
dec
test
mov
jno
add
dec
xor
dec
xchg
sub
xchg
inc
retf
mov
inc
push
out
scas
mov
inc
jge
dec
dec
mov
mov
ret
test
outs
push
cmps
xor
ins
sti
call
pusha
gs
xlat
cmp
clc
push
std
fadd
inc
mov
and
push
loop
(bad)
jle
(bad)
inc
or
fst
xor
inc
jb
(bad)
xchg
sub
aad
xor
jle
not
sbb
leave
xor
outs
inc
ins
pop
mov
bound
clc
icebp
leave
and
add
(bad)
xchg
dec
xor
push
rcr
mov
or
dec
enter
(bad)
jnp
jne
cmp
out
fs
adc
xlat
aas
mov
xchg
xor
mov
bswap
cli
push
dec
das
outs
pushf
test
mov
mov
pop
loopne
pop
cmc
or
inc
and
pop
inc
adc
outs
aaa
cmp
(bad)
outs
adc
dec
push
lahf
jl
loop
push
rol
xor
data16
test
and
push
dec
dec
push
pushf
and
dec
cwde
and
adc
jno
mov
stc
jae
push
jbe
inc
push
dec
std
mov
(bad)
sbb
pushf
jge
jmp
(bad)
fmulp
test
pop
pop
jp
jno
add
push
gs
xor
in
push
add
and
push
pop
mov
loopne
aaa
adc
cwde
push
inc
sbb
cmps
iret
mov
movs
mov
retf
sbb
inc
mov
das
xchg
(bad)
xor
sub
dec
inc
in
push
sub
or
popa
icebp
sbb
dec
pop
out
ret
dec
fnstenv
mov
adc
push
clc
shl
movs
mov
leave
adc
sbb
jmp
in
ja
ret
popa
cmp
jl
dec
push
or
adc
and
cmps
shl
and
sub
lds
scas
and
mov
cmp
add
out
stc
les
xchg
popa
stc
std
ins
test
jns
adc
scas
pushf
pavgb
hlt
or
aaa
cmp
retf
clc
jo
sahf
sbb
(bad)
neg
push
jno
push
lahf
imul
xlat
icebp
push
add
cli
inc
in
xchg
sub
jp
adc
pop
mov
xchg
cmps
(bad)
mov
xchg
dec
fstp
and
jb
add
jne
adc
js
sub
xor
(bad)
out
sar
or
cdq
xchg
aaa
sbb
int
xchg
cwde
ins
cmp
add
xor
pop
(bad)
mov
(bad)
loop
clc
outs
mov
add
sbb
cmps
cmp
jne
loopne
adc
aas
fcom
sub
sar
cmp
cs
repnz
mov
mov
jmp
mov
push
jno
inc
sub
sti
mov
push
mov
xchg
out
mov
pop
mov
jbe
pop
pusha
movs
shl
jge
push
ins
pop
stc
in
cli
test
xchg
mov
je
pcmpgtw
out
imul
pop
fbstp
sbb
adc
mov
mov
dec
jnp
push
popf
movs
sub
and
mov
xchg
shr
popa
sbb
call
aas
ret
adc
shr
pop
ins
in
int
nop
and
cmp
cli
out
xchg
inc
test
jl
jmp
daa
push
mov
add
fisttp
je
push
ror
mov
cmps
mov
push
shl
and
clc
or
or
pushf
outs
popf
xchg
pop
ja
xchg
push
pop
pop
ss
(bad)
out
pop
shr
repz
lds
popf
xchg
add
jnp
ficom
inc
fisub
cwde
retf
call
xchg
jle
pop
add
jne
jnp
ret
and
push
mov
sbb
int3
sahf
lea
ds
adc
push
loopne
ficom
push
mov
call
mov
nop
popa
adc
mov
mov
jo
call
dec
pop
mov
popa
xor
sbb
or
xor
inc
cmps
jmp
cmp
scas
sub
add
xchg
jp
xchg
loop
jne
cmp
sbb
and
jo
adc
es
xchg
push
add
push
rcl
outs
cs
ror
pop
inc
mov
cdq
push
movs
mov
inc
out
ror
mov
and
and
xchg
imul
pusha
iret
test
pop
inc
adc
sub
cdq
cmp
test
mov
stos
mov
out
jns
cmp
mov
inc
and
out
into
call
dec
(bad)
aaa
cdq
inc
pop
add
loopne
inc
inc
mov
lahf
test
jg
xchg
loope
mov
bound
lods
jge
add
add
xchg
sahf
ror
push
in
nop
lahf
ins
mov
ja
stos
jg
test
push
out
imul
mov
mul
mov
ins
rcl
cmp
sti
pop
xor
mov
lahf
xchg
mov
add
movs
mov
or
pop
jnp
sub
call
(bad)
mov
jmp
call
cmp
mov
xchg
jmp
sbb
xchg
repz
mov
push
test
sbb
pop
in
aaa
loope
cmps
btr
cmps
mov
mov
jp
(bad)
or
fadd
mov
mov
xor
aam
inc
add
cmp
pop
scas
retf
outs
into
fdivr
pop
int3
xlat
cmps
jge
push
mov
cmp
or
int3
ss
leave
or
inc
loope
mov
push
push
aad
adc
jo
mov
and
jne
xchg
sub
ficomp
fistp
loop
push
jg
repnz
mov
loopne
sbb
sub
enter
aad
call
iret
pop
and
jecxz
das
int3
mov
xchg
xor
pushf
adc
mov
mov
pop
aam
cmp
ss
aad
or
push
test
cld
cmps
int3
push
(bad)
sbb
and
out
cmp
sub
popf
das
pop
pop
mov
jp
or
inc
pushf
mov
into
or
xchg
movs
push
lods
lods
pop
je
loopne
and
mov
adc
sbb
sub
scas
jae
ds
scas
dec
sbb
loopne
pusha
addr16
fild
push
cld
adc
push
add
xor
jo
call
jg
pop
mov
fisttp
mov
retf
push
test
shl
call
fisubr
js
in
sti
movs
pusha
leave
sti
cmc
push
jmp
inc
pop
push
push
push
sub
ss
cmc
pop
clc
pushf
stos
pop
ins
pop
xchg
ja
mov
outs
xchg
cld
mov
arpl
and
gs
add
push
xor
in
retf
ret
jg
adc
fist
jno
mov
clc
xor
dec
mov
add
jmp
and
clc
jmp
loope
mov
out
xor
fldcw
out
gs
cmc
cmove
iret
cmp
sub
adc
in
aas
int
das
pop
in
lods
push
xchg
mov
out
pusha
dec
ins
les
into
add
lock
jns
neg
lock
test
sti
push
loop
and
mov
xchg
icebp
xor
and
or
iret
cmp
mov
pop
add
push
xchg
xchg
fcomp
in
sub
fs
popa
sub
pushf
dec
pop
fadd
fsub
mov
push
mov
pop
pop
xor
rcr
ins
jl
jecxz
(bad)
jp
dec
mov
push
push
(bad)
mov
lock
enter
iret
movs
sbb
pop
jg
and
or
jne
mov
call
jnp
add
adc
xlat
std
into
jmp
adc
test
hlt
daa
les
icebp
stc
adc
mov
push
loopne
xor
ja
test
cmps
inc
xchg
std
push
cmps
push
(bad)
icebp
mov
mov
push
hlt
jp
sti
les
imul
jmp
lods
data16
jne
hlt
add
or
jno
sub
arpl
sbb
xchg
cmps
fwait
mov
jmp
mov
retf
test
call
or
xor
test
shl
pop
std
cmps
jle
scas
cmps
or
loopne
cs
int
mov
repz
push
add
mov
cdq
jns
int
pop
and
lahf
leave
adc
inc
call
sar
adc
(bad)
push
(bad)
jle
mov
mov
call
mov
jmp
ret
mov
scas
jmp
mov
mov
bts
or
or
sbb
jae
pop
mov
jecxz
push
or
pop
ret
movs
iret
loop
stos
push
shr
and
cmp
fcom
inc
arpl
pop
lods
fsubr
test
nop
je
mov
add
popf
inc
push
cmp
jmp
cmp
mov
sub
clc
lock
mov
xor
sub
in
mov
mov
nop
jle
mov
cmc
adc
sbb
xor
ja
jg
in
popa
lods
mov
repz
out
nop
sub
je
cmp
cmps
(bad)
imul
jmp
cmp
adc
(bad)
(bad)
stc
xor
sbb
(bad)
cli
sub
cwde
jo
shr
mov
test
mov
stos
sahf
xor
xchg
enter
jmp
or
adc
lods
xor
or
jbe
mov
mov
xchg
adc
mov
(bad)
jg
xor
movs
pushf
sbb
fcomp
inc
div
jne
sbb
out
fimul
fisub
mov
imul
mov
xchg
(bad)
ja
dec
or
sub
stc
scas
mov
sahf
outs
js
imul
dec
sub
jg
loopne
outs
sbb
imul
leave
daa
es
add
mov
xor
daa
leave
push
fcmovbe
sbb
add
shl
ins
pusha
sbb
sbb
out
lahf
repnz
je
xchg
dec
(bad)
aad
push
xchg
popa
loope
addr16
fldcw
jbe
mov
outs
mov
out
out
outs
pusha
cmps
gs
les
call
mov
add
add
inc
mov
push
jmp
hlt
das
ret
(bad)
fdiv
add
jp
inc
cwde
jecxz
inc
rcl
cwde
cmp
cmp
add
je
loop
mov
sbb
mov
std
ret
rol
push
aaa
sti
cmp
cmp
not
fiadd
sub
enter
shl
pop
lahf
fsub
retf
mov
pop
ins
mov
js
out
pop
aas
test
cld
mov
fisttp
leave
mov
and
out
adc
jae
cmp
xchg
cmp
pop
mov
test
add
inc
pop
adc
cmp
jmp
mov
jo
cmps
lds
push
and
mov
dec
mov
jmp
and
fs
fs
and
scas
std
mov
jae
sbb
xchg
jl
(bad)
mov
fwait
fwait
pop
mov
push
xchg
mov
or
fdivr
lahf
dec
mov
or
inc
xlat
jle
jmp
aaa
and
pop
pop
pop
loope
shl
aaa
mov
je
ja
inc
mov
jecxz
push
sbb
mov
xchg
pushf
and
lods
(bad)
push
and
fneni(8087
or
sbb
mov
and
add
clc
sub
dec
mov
in
xchg
sub
cld
mov
sub
pop
jne
pop
pop
mov
jb
daa
rol
(bad)
fldenv
or
jns
pushf
and
out
mov
enter
push
fistp
dec
shr
mov
ja
sub
lock
mov
push
push
sub
lods
repz
adc
mov
push
adc
add
bound
mov
test
push
xor
or
outs
neg
jns
inc
sub
imul
aaa
pop
push
bound
or
sub
jns
jl
enter
fstp
dec
call
neg
adc
cmp
lods
add
mov
pop
in
cld
lea
cmp
cdq
(bad)
xor
mov
popf
dec
pushf
lods
pavgb
or
or
push
or
fprem1
ret
scas
fs
jecxz
aas
in
imul
leave
mov
or
xor
xlat
sbb
lods
retf
xor
std
int3
push
dec
mov
xchg
jb
inc
sbb
cs
movnti
aaa
stc
xor
int
cmp
cld
jne
pop
std
lods
xchg
cmp
and
mov
je
inc
xchg
jge
ret
sbb
pop
sbb
inc
and
test
inc
ret
fwait
aas
jmp
mov
fsubr
icebp
stos
ins
shr
pop
jbe
inc
inc
cs
xchg
mov
mov
or
cld
pop
mov
mov
ret
outs
int
out
mov
sbb
iret
push
in
neg
aam
ins
push
pop
push
xlat
mov
test
xchg
mov
icebp
outs
dec
pop
and
cmp
xchg
xchg
mov
mov
fdiv
dec
pop
inc
mov
add
xor
mov
std
mov
and
outs
inc
std
push
or
bound
mov
cmps
repnz
jns
and
sub
mov
add
popf
pop
xchg
sbb
sub
into
push
icebp
mov
test
cmps
cli
fwait
test
lods
or
call
mov
aam
lods
xchg
test
mov
shl
sub
sti
push
gs
dec
mov
fstp
pop
enter
xchg
xchg
stc
mov
addr16
cmp
imul
xor
mov
xor
mov
clc
ror
adc
ds
icebp
into
adc
inc
pop
jge
in
pop
sub
mov
cmps
(bad)
lock
(bad)
sbb
sbb
dec
xor
xchg
icebp
push
(bad)
paddq
rol
out
xor
div
add
fwait
jbe
jnp
jl
xor
jne
fwait
imul
sar
clc
adc
stos
enter
xor
push
or
pop
or
xor
or
push
stos
jb
loope
movaps
push
pop
xor
rcl
pop
in
fcmovb
cdq
and
pushf
and
push
stos
mov
jg
mov
push
adc
stos
push
pushf
cmp
jge
daa
inc
push
nop
or
cwde
pop
call
and
cmps
out
nop
fstp
(bad)
push
pop
sti
pusha
adc
scas
sbb
js
imul
imul
aam
xchg
js
movs
pop
cmps
ficom
push
enter
xor
add
jns
retf
retf
jnp
test
push
ds
js
pop
es
dec
adc
loope
ins
mov
mov
xchg
je
rcl
mov
inc
jg
sbb
movs
mov
lock
(bad)
sti
xchg
(bad)
xchg
jl
(bad)
or
pop
sti
stc
call
popa
mov
mov
ret
mov
scas
dec
or
mov
stc
sbb
fwait
or
jle
jmp
or
cmp
fcmovu
lahf
or
mov
adc
dec
push
cwde
outs
pop
jge
adc
mov
jo
push
dec
push
mov
and
adc
cmp
xchg
clc
dec
xor
xchg
pop
xchg
jl
and
movs
arpl
pop
adc
lea
jnp
(bad)
adc
dec
ins
cmc
popf
add
sbb
loope
lahf
test
jecxz
push
in
int3
adc
xchg
dec
mov
add
sar
rol
scas
inc
mov
pop
stos
call
ret
jno
jno
xchg
stos
lock
mov
psllq
or
push
pop
pusha
rcr
(bad)
jne
lock
jnp
and
adc
dec
dec
xor
rcr
inc
psraw
in
xchg
push
out
jmp
fnop
bound
jge
(bad)
fdiv
inc
movs
je
mov
cmp
dec
jmp
out
and
jnp
push
cmp
call
mov
mov
dec
das
xor
mov
push
out
cmps
xchg
sub
xchg
sub
aam
pop
fistp
retf
inc
or
cwde
(bad)
or
push
push
mov
xor
dec
arpl
and
stos
cmp
sahf
xchg
push
adc
cmps
adc
sbb
sti
mov
rcr
aam
fidiv
or
jmp
mov
adc
dec
cmp
and
push
push
or
cld
push
mov
(bad)
mov
inc
push
push
or
ret
imul
cmp
push
xchg
and
loopne
adc
inc
pop
cs
cmp
repnz
mov
sub
or
or
popf
test
(bad)
loop
add
cmps
xchg
xchg
ja
scas
lea
(bad)
lahf
cdq
and
xchg
xor
cs
int3
fidiv
mov
scas
neg
push
pop
(bad)
shl
jne
movs
es
dec
mov
or
ins
movs
jp
mov
sbb
add
dec
mov
movs
clc
push
imul
fucomi
fstp
test
movs
repnz
test
xchg
dec
in
lea
cmp
icebp
stos
adc
int3
mov
out
dec
int
(bad)
cmp
ja
jp
sahf
adc
int3
push
ror
jle
ficom
dec
cmp
pop
mov
pslld
(bad)
sar
js
mov
xor
jmp
jle
lods
jnp
sbb
mov
test
enter
stc
cmp
adc
scas
pop
xchg
leave
push
fwait
xchg
(bad)
out
jg
(bad)
push
inc
dec
xchg
mov
xchg
aam
or
inc
sub
or
inc
and
jmp
in
movs
ds
sbb
adc
imul
movs
mov
jg
inc
idiv
xor
xchg
sbb
rcl
lock
inc
push
icebp
outs
xchg
and
and
aam
scas
hlt
pop
lds
repnz
stc
repnz
pop
push
cmps
mov
lea
push
call
jg
sub
fdiv
dec
mov
or
hlt
mov
cmp
out
push
sub
in
out
xchg
sbb
stos
sbb
mov
ja
cmp
shr
arpl
add
loopne
(bad)
mov
mov
sub
xchg
mov
push
sbb
ret
data16
or
movs
scas
sti
lea
adc
sub
shl
mov
call
fnstcw
test
dec
(bad)
xchg
pminsw
jnp
in
hlt
push
les
add
cmps
shl
pop
in
inc
out
jmp
xor
lods
mov
and
daa
mov
shl
mov
mov
pause
add
pop
mov
inc
pcmpeqb
dec
std
or
jle
xchg
mov
jg
add
scas
out
or
outs
(bad)
repnz
lahf
sahf
mov
cmps
sub
pop
popa
xor
jnp
fidiv
test
repnz
loope
gs
(bad)
fstp
fisttp
fs
jbe
in
add
mov
jbe
push
imul
sbb
cmp
mov
fmul
lock
jg
xchg
sbb
xlat
int
mov
mov
push
jns
loop
xor
pop
ja
mov
mov
add
ss
and
sub
imul
retf
ror
dec
pop
sbb
add
and
call
out
(bad)
xchg
sar
push
fcos
jnp
loope
cmp
int
mov
sub
rcr
les
dec
shr
xchg
jo
add
push
mov
sbb
or
fcom
lods
aaa
aaa
dec
push
fwait
sub
(bad)
push
cs
bound
xchg
out
adc
(bad)
jnp
push
inc
sbb
or
pop
sti
cmps
xchg
aad
mov
inc
iret
mov
push
leave
and
in
out
test
pop
fcomp
iret
push
mov
cmp
ins
mov
or
sti
xlat
fnstsw
mov
lods
push
or
scas
and
pop
dec
(bad)
loopne
push
lods
cmc
shl
out
ret
jne
jle
ja
stos
imul
mov
shr
sub
jge
inc
xchg
jae
les
xchg
sahf
jmp
fs
out
mov
or
sub
into
cmp
mov
aam
inc
dec
pop
or
sub
inc
and
sbb
ins
mov
mov
push
std
add
ret
retf
or
or
cmp
sbb
je
scas
xchg
add
pop
(bad)
jle
popa
(bad)
xor
test
sub
adc
xor
stc
adc
clc
stc
retf
ss
pushf
(bad)
push
sahf
jnp
les
cmp
jg
mov
cs
in
sub
adc
test
adc
cmp
push
pop
adc
sahf
cmp
fsubr
dec
jmp
cmp
jge
push
dec
inc
in
push
imul
inc
(bad)
adc
lock
fnclex
loop
add
bound
mov
mov
out
aam
dec
icebp
fwait
es
retf
push
inc
fadd
lods
js
inc
or
adc
mov
sub
add
(bad)
xchg
push
int3
dec
scas
ficomp
cmp
in
or
adc
ds
stos
and
popa
pop
das
outs
jl
arpl
popf
ret
ficomp
mov
cmps
xchg
addr16
dec
cmp
lea
inc
xor
mov
aas
ror
iret
shl
push
test
add
mov
jmp
ins
scas
pushf
es
inc
sbb
dec
pop
sbb
mov
out
sub
test
jle
xchg
in
stc
push
rcr
inc
pop
or
dec
sub
pop
dec
out
adc
in
sbb
rcl
jg
push
leave
xchg
xor
scas
mov
jne
ins
aas
or
test
mov
inc
dec
mov
cli
adc
ins
cli
cmp
mov
out
dec
jbe
jmp
xor
dec
loope
inc
cmps
out
(bad)
fs
xchg
gs
fnstsw
pop
rcr
add
jge
cmp
cli
rol
mov
push
mov
clc
xchg
aad
mov
xor
fldenv
pop
neg
adc
cdq
cmp
add
loop
shl
js
push
nop
mov
dec
add
sti
clc
and
repnz
fwait
pop
imul
retf
push
mov
adc
bound
push
out
into
push
popf
aas
mov
fs
mov
js
ins
mov
test
jg
push
mov
xor
jne
and
sti
pop
jns
mov
(bad)
out
push
push
mov
jge
and
sbb
mov
mov
sbb
shr
hlt
or
mov
xor
cdq
or
push
mov
not
aam
sub
dec
add
pusha
fucomi
arpl
ins
sub
sti
adc
(bad)
push
call
mov
test
jbe
mov
lods
imul
sub
ret
jle
xor
add
push
cmp
pop
ficomp
ds
les
and
ret
or
or
sub
push
ret
in
add
cmp
into
xchg
leave
xor
mov
xchg
adc
sub
ret
addr16
adc
rcl
dec
fwait
cmps
mov
out
mov
jb
out
loope
sbb
jge
enter
pop
xchg
and
push
js
aaa
mov
movs
dec
inc
or
pop
fstp
sti
adc
popa
sbb
nop
leave
aaa
sbb
push
jo
mov
xor
fisub
mov
stos
cmp
pop
out
inc
nop
mov
jp
movaps
push
adc
and
movs
add
cmp
fisttp
lods
adc
stos
mov
cmp
pop
les
xchg
inc
popa
pop
add
loopne
adc
hlt
bound
cmp
cld
ret
adc
mov
mov
out
sub
and
add
arpl
xor
das
pop
(bad)
call
mov
cli
cmps
push
(bad)
clc
lea
ror
call
cmps
jns
mov
bswap
cli
xchg
cwde
daa
inc
or
enter
xchg
popf
enter
mov
push
mov
add
stos
adc
inc
scas
push
cmp
cs
xor
mov
sbb
pop
pushf
mov
je
inc
neg
and
leave
pop
push
gs
clc
or
es
push
dec
stc
cmp
test
push
pop
aad
loop
mov
or
addr16
retf
xchg
and
adc
fiadd
lock
cld
dec
inc
inc
jmp
dec
daa
mov
push
aad
call
xchg
sbb
clc
or
and
cmps
fld
dec
ror
push
push
cmp
jecxz
mov
mov
dec
dec
(bad)
or
and
xor
xchg
scas
mov
cmp
inc
outs
fisttp
mov
shl
scas
enter
push
and
lods
movs
or
hlt
(bad)
adc
fsubr
movzx
pop
movs
inc
mov
xchg
and
popf
gs
pop
jnp
and
xchg
inc
(bad)
out
xchg
mov
push
jo
hlt
cmps
movs
xlat
dec
fmul
inc
enter
aaa
inc
repnz
pop
push
sbb
and
nop
inc
or
or
mov
loopne
jns
call
fimul
ret
in
imul
enter
mov
and
sbb
outs
pop
adc
fwait
xchg
cmp
jp
xchg
pop
sub
push
sub
fwait
push
stos
outs
dec
es
mov
mov
dec
mov
jecxz
sbb
enter
fisubr
into
shr
jnp
or
sub
(bad)
in
sub
mov
imul
add
xor
(bad)
loopne
sub
test
pop
lds
inc
ficomp
xchg
push
adc
jns
sbb
or
lahf
scas
dec
add
cs
cmp
xchg
add
push
stc
and
adc
cmp
xor
rol
mov
call
imul
in
cmc
jg
nop
xor
mov
add
mov
(bad)
pop
int
mov
jmp
loope
adc
dec
xor
ds
in
adc
push
push
loope
push
dec
lods
repnz
dec
imul
xchg
xchg
cmc
into
jbe
js
dec
fcmovnb
out
setae
pop
and
lea
xchg
ret
pop
cmc
idiv
mov
hlt
gs
xor
sbb
cs
push
outs
push
cmp
cld
outs
dec
mov
jns
pop
jbe
cmp
push
sbb
push
outs
jns
repnz
adc
jbe
jmp
nop
out
cdq
lea
sbb
xchg
stos
imul
mov
jnp
imul
(bad)
push
loop
inc
outs
lods
mov
test
inc
jge
adc
cwde
push
pop
cmp
fcomp
push
and
mov
cmp
push
out
pop
pop
jmp
(bad)
out
mov
mov
sbb
push
jle
shr
mov
fadd
xchg
rol
int
xor
push
aam
loope
popf
les
xchg
fisub
idiv
and
pop
lods
fwait
in
adc
pop
fisubr
dec
(bad)
retf
pop
jmp
ss
out
jl
and
adc
cwde
xchg
inc
leave
mov
push
icebp
scas
dec
icebp
and
cmp
mov
sbb
jmp
jae
icebp
in
or
icebp
(bad)
xor
daa
pop
call
pop
push
mov
sbb
ja
call
and
mov
push
jle
or
dec
mov
pop
movs
loop
sbb
es
jne
imul
mov
or
sub
lods
or
push
stos
mov
sbb
cld
cli
push
mov
add
inc
add
inc
cmps
inc
daa
icebp
xor
(bad)
sbb
(bad)
test
sub
add
pop
iret
dec
push
pusha
jb
shl
fadd
dec
mov
mov
push
aas
fsubr
push
add
gs
rcr
cmps
pop
imul
(bad)
mov
cmp
cmps
pop
add
out
mul
xchg
xchg
call
cs
ret
fs
sbb
scas
pop
sbb
retf
mov
jl
jbe
sub
xchg
and
cmps
not
fadd
cmp
lock
out
cdq
test
jp
jbe
(bad)
fsqrt
xchg
jbe
out
addr16
adc
xchg
cmp
sahf
pop
mov
jo
add
icebp
mov
dec
int3
xor
pop
pop
pop
xor
jno
shr
inc
(bad)
pop
inc
pop
mov
pop
test
jnp
pop
jecxz
int
repz
mov
pop
ret
(bad)
ret
cmp
stos
adc
bound
push
fsubr
sub
test
(bad)
pop
sbb
mov
repnz
sbb
test
inc
hlt
or
cmp
mov
jmp
and
(bad)
fs
lds
icebp
or
dec
dec
add
and
mov
fisttp
ds
xor
push
xchg
mov
rol
lds
std
cmp
outs
dec
push
add
popf
or
fld
or
pop
xor
aas
jle
pop
jne
ficomp
imul
test
fiadd
scas
fld
loop
sub
and
mov
lock
test
retf
imul
fcom
outs
push
pushf
ins
jnp
stc
cmp
jne
pop
test
xchg
repz
repnz
sbb
sbb
scas
out
cli
add
ss
cmp
sub
jae
add
push
xlat
and
mov
xlat
repnz
pushf
pop
neg
sahf
leave
jle
hlt
cmp
lahf
loop
pop
and
jg
retf
xor
retf
jg
in
(bad)
aaa
daa
cmp
arpl
sbb
mov
and
xor
cmp
daa
xor
push
and
mov
adc
fst
mov
fcom
mov
add
sub
stos
sti
xchg
fist
scas
scas
loop
mov
mov
rcl
dec
std
mov
stos
dec
arpl
ins
fild
cmps
stc
daa
in
ror
loopne
mov
mov
sub
adc
xchg
test
(bad)
adc
mov
mov
xchg
mov
(bad)
aam
jno
push
push
jnp
mov
xchg
dec
movs
test
outs
aad
fs
test
fisttp
mov
sub
popa
ror
fdivr
cmp
xor
ins
loope
std
icebp
xchg
sti
fistp
mov
jbe
or
imul
push
js
test
push
mov
sbb
jecxz
add
ror
les
aam
adc
rol
test
or
add
stc
mov
out
mov
in
fld
sahf
adc
call
mov
aam
fdivr
aaa
pop
fwait
inc
int
aam
mov
aaa
xor
inc
in
cmp
fsub
mov
and
and
icebp
push
pop
push
jae
push
test
imul
in
sub
in
out
xchg
mov
sar
repz
inc
rol
lea
add
pop
inc
xlat
or
pop
inc
cmp
das
sbb
jge
pop
xor
inc
cmp
push
sbb
fcom
outs
cmp
jg
nop
retf
stos
je
xor
enter
arpl
addr16
jp
in
test
fcmovne
xor
ds
cld
ret
inc
inc
sbb
stc
cmps
div
sbb
and
out
jge
mov
rcr
adc
and
outs
mov
push
inc
(bad)
test
in
enter
xor
push
ffree
and
adc
pop
shl
jae
cmps
pop
imul
xchg
dec
lea
and
or
xor
xchg
(bad)
in
movs
and
pushf
xchg
push
sub
pop
xor
ins
repz
push
rcr
gs
push
rcr
pusha
add
dec
push
and
pop
cmp
or
pop
cdq
push
mov
pop
add
aaa
fdivr
daa
dec
test
fistp
out
nop
pop
(bad)
sbb
stc
ins
aam
pop
lahf
pop
in
dec
jg
push
cdq
cwde
inc
scas
xor
loope
test
inc
call
mov
sub
add
jle
jg
mov
or
mov
es
mov
sbb
mov
adc
aaa
push
movsx
dec
lock
xchg
pushf
or
xor
sub
pop
jge
test
in
cmp
in
add
inc
icebp
(bad)
in
jecxz
xchg
fild
adc
rol
leave
add
jo
jle
shl
shr
or
sub
popf
mov
mov
pop
cmp
jnp
push
stos
rcl
jae
jmp
add
rcr
(bad)
out
xor
jmp
jge
xchg
loop
push
xlat
scas
sub
shl
jno
scas
(bad)
lock
stos
push
dec
xor
sbb
scas
movs
push
popf
jl
inc
lea
scas
push
test
inc
hlt
movs
jge
ss
js
pushf
daa
mov
push
sbb
sar
aas
lods
movs
xor
icebp
or
or
sub
mov
push
mov
pop
fcomp
and
sub
in
xchg
dec
pusha
jae
xchg
aam
sub
pop
mov
push
mov
push
pop
and
in
pop
outs
call
movs
jecxz
(bad)
push
leave
inc
cmp
push
inc
cs
out
out
and
aaa
dec
push
cmp
mov
jp
test
aaa
sbb
push
popa
sub
cld
repnz
(bad)
loopne
and
push
call
jl
xchg
cmp
shl
sbb
inc
push
push
push
push
sub
pop
mov
sbb
rcl
adc
xor
scas
jl
(bad)
pop
enter
push
push
adc
xor
push
mov
adc
mov
fadd
aaa
fidiv
aam
(bad)
mov
div
jecxz
add
cmps
jg
push
sbb
scas
mov
lock
adc
mov
leave
stos
xlat
push
mov
popf
mov
jmp
ds
das
sub
xchg
(bad)
std
inc
ret
stc
or
nop
sar
push
out
lds
movs
rcpps
mov
mov
(bad)
push
inc
sub
js
(bad)
pop
test
ror
daa
adc
ins
sbb
pop
int3
les
dec
push
push
adc
dec
mov
int3
out
xlat
sbb
je
mov
and
dec
cmp
(bad)
jle
ret
mov
jo
mov
pop
js
mov
scas
add
lea
mov
lea
dec
adc
iret
fst
outs
stc
jmp
in
jns
sub
sbb
jmp
sti
dec
jecxz
add
dec
pop
fdivr
mov
add
out
ret
test
mov
push
dec
andnps
push
pop
cs
mov
dec
inc
sbb
daa
cdq
dec
popa
call
test
jns
les
rcr
xor
aas
sub
movs
ins
xor
inc
jg
sub
dec
stos
enter
gs
xlat
shr
adc
push
sbb
pop
ror
mov
sbb
inc
test
jp
fsubr
mov
xchg
cmp
rcl
mov
adc
int3
jno
or
add
stos
sbb
mov
jecxz
fisub
leave
add
sub
xchg
push
sbb
call
jo
lock
mov
add
dec
inc
dec
mov
iret
movs
mov
sahf
enter
into
setns
or
or
sub
lods
ret
push
loop
cmp
mov
mov
push
mov
aad
xchg
sub
inc
inc
ins
jne
cmp
test
pop
xor
lods
pusha
(bad)
ja
mov
retf
xor
or
mov
out
test
sti
imul
sbb
movs
mov
push
popa
mov
pop
dec
sti
or
or
and
out
in
and
aad
mov
into
pop
sub
ss
push
and
cmp
mov
add
gs
jmp
ret
cmp
sbb
fisttp
fcomi
pop
mov
or
retf
push
iret
mov
and
pushf
xor
rcr
adc
fcmovb
cdq
mov
and
mov
fistp
cmp
lods
cmps
sahf
inc
push
jb
add
cwde
push
call
js
or
hlt
and
data16
loop
out
loop
push
inc
mov
iret
jno
jecxz
inc
push
jge
in
std
push
test
push
out
pop
push
xchg
inc
cmps
lds
enter
das
mov
dec
(bad)
sub
lock
out
int
mov
lds
xor
ins
push
and
cmp
sub
push
lods
cli
push
inc
mov
add
xor
in
scas
mov
pop
xlat
cpuid
push
mov
psubsw
pop
xchg
adc
add
xchg
les
stos
nop
or
ror
xchg
neg
shl
adc
imul
or
ficomp
out
pop
add
xor
(bad)
retf
xchg
fdivr
cmp
not
out
add
pop
push
or
cs
and
dec
mov
into
and
pop
sub
xchg
dec
cs
jmp
imul
iret
push
cmp
ret
xor
loop
les
in
inc
mov
in
pushf
sub
mov
lods
adc
push
cmp
mov
ret
sub
cmovns
arpl
dec
mov
jmp
jp
sub
or
(bad)
repnz
jp
fldenv
inc
lds
add
lods
push
out
(bad)
cmps
push
mov
adc
imul
jno
mov
jecxz
cwde
inc
jp
xor
pop
in
imul
sub
cmp
mov
fst
mov
(bad)
sbb
loope
jne
movs
mov
mov
jns
pop
xor
sub
and
clc
inc
fcom
imul
cld
sbb
jb
mov
jne
jbe
(bad)
shl
in
jmp
out
pusha
adc
pop
add
add
mov
sub
mov
in
cmp
dec
pop
pop
jg
jge
inc
mov
add
cmp
pop
les
sub
mov
sahf
pusha
mov
lea
dec
cmp
rol
dec
jmp
and
clc
mov
add
popa
jb
xchg
push
dec
pop
xchg
xchg
test
mov
(bad)
stc
push
outs
in
adc
inc
jnp
ret
in
test
out
sub
ret
push
xchg
daa
inc
jo
aad
sbb
or
lods
mov
loopne
ret
fcom
mov
or
dec
repz
mov
mov
mov
inc
imul
jns
add
cmc
mov
shl
and
push
je
jmp
(bad)
push
push
xchg
xacquire
aad
inc
cli
inc
ret
pop
adc
adc
cdq
mov
dec
scas
mov
jno
and
aas
sub
jg
ror
push
popf
jae
fs
mov
aas
sbb
bound
int
pop
lahf
sub
test
xor
scas
loopne
out
addr16
inc
es
mov
xchg
fs
out
adc
shl
mov
pop
dec
clc
pop
test
and
fs
pmullw
xor
pop
in
mov
test
int3
mov
or
xor
push
xchg
xchg
pop
iret
stos
sub
sbb
dec
loope
(bad)
das
sbb
cmp
and
in
lods
cmp
or
mov
cmc
loope
js
cmc
rcr
enter
sbb
xchg
xchg
pop
jp
jmp
xchg
call
push
int
jb
and
push
sub
or
loopne
aam
mov
retf
jmp
(bad)
cs
and
pop
cwde
cs
shl
(bad)
pop
mov
add
jp
xor
pop
push
pop
ret
mov
out
mov
mov
xlat
repz
es
inc
je
mov
lock
mov
or
add
mov
inc
xor
hlt
add
pop
xor
retf
jns
sbb
mov
daa
shr
or
sub
and
test
push
lahf
aas
scas
cdq
dec
idiv
mov
adc
xor
mov
arpl
or
rol
add
xchg
les
daa
sbb
pop
push
push
out
sbb
sub
lahf
out
ins
mul
or
std
dec
jmp
js
inc
in
loop
push
mov
adc
mov
push
sbb
enter
mov
jnp
push
mov
push
mov
pop
jb
stos
pop
mov
aam
push
out
fsubr
in
sbb
push
push
addr16
cld
sub
and
xor
mov
shr
mov
jo
mov
jne
pop
in
scas
retf
mov
call
xchg
mov
mov
idiv
cmc
inc
(bad)
xchg
add
inc
in
xchg
push
arpl
or
movs
push
ja
lods
push
inc
xor
movs
jp
cld
mov
mov
test
jecxz
add
and
lds
jns
sub
jle
xorps
call
test
cdq
xchg
outs
pop
sbb
lea
cmp
dec
scas
xchg
push
frstor
or
or
adc
pusha
cwde
dec
mov
aas
les
or
inc
gs
into
jmp
fidiv
adc
movs
jb
pop
es
sahf
loopne
fcomi
fild
fbld
mov
or
call
fadd
mov
popa
sbb
add
add
adc
jnp
js
or
mov
mov
jmp
jle
mov
cmps
lods
(bad)
ficom
adc
mov
ret
out
lods
mov
pop
fild
jmp
ret
pop
mov
pop
les
xor
into
jbe
push
loope
test
sub
adc
pop
jmp
or
inc
je
push
in
push
xor
fwait
xchg
cmp
add
adc
(bad)
mov
icebp
arpl
cdq
adc
jecxz
pop
stos
dec
inc
inc
retf
in
inc
cli
out
(bad)
hlt
(bad)
xlat
cwde
into
movs
je
(bad)
aam
shl
mov
jne
std
jmp
pop
fnstcw
xlat
stos
mov
imul
daa
sub
int3
jae
and
mov
jecxz
mov
je
or
call
add
(bad)
ins
xchg
jecxz
popa
inc
scas
movs
xor
es
ins
jge
sub
and
inc
repz
jmp
adc
sub
push
push
loop
nop
mov
pusha
ret
jo
mov
mov
mov
fnstcw
shl
iret
sbb
sub
and
fwait
cmc
outs
daa
(bad)
adc
mov
dec
inc
jno
inc
add
in
jle
push
outs
imul
and
and
push
mov
push
mov
idiv
mov
xor
xor
pop
fnstcw
gs
xchg
lods
xchg
mov
sub
adc
in
dec
inc
(bad)
out
add
(bad)
(bad)
xchg
lea
xor
scas
adc
mov
pushf
retf
mov
cmp
hlt
and
sub
jnp
jmp
shl
xchg
add
mov
hlt
in
mov
fisub
push
adc
aam
and
test
xor
neg
sbb
cwde
cmp
test
cmp
sbb
jge
push
adc
out
and
inc
out
stc
ret
push
adc
cdq
out
push
push
and
(bad)
scas
add
loope
xor
add
add
or
inc
hlt
cmps
in
ins
or
cmp
(bad)
adc
aaa
adc
push
fist
or
aad
ret
(bad)
jae
cdq
pop
add
mov
inc
xor
fidivr
mov
xor
inc
call
mov
xchg
jae
pusha
in
xlat
pop
push
out
jmp
(bad)
cwde
or
fs
pushf
xchg
push
shl
enter
jle
and
cld
or
lahf
(bad)
out
xor
dec
in
dec
adc
pop
adc
in
cmc
jns
xor
ins
add
pop
dec
dec
push
(bad)
loope
jnp
mov
data16
shl
cdq
sbb
dec
pop
inc
add
cmp
nop
outs
add
out
pop
xlat
loope
dec
dec
pop
jae
xor
xchg
or
jne
inc
dec
fwait
icebp
cmps
jb
mov
adc
retf
xchg
inc
pop
scas
mov
push
ret
movs
test
lock
sub
push
scas
fiadd
ins
inc
je
(bad)
add
hlt
nop
nop
mov
shl
lock
cmp
lds
lea
pop
push
les
icebp
and
sub
or
sub
add
int
push
retf
ja
(bad)
cdq
lds
mov
jp
adc
mov
xor
sbb
lods
test
cmp
call
push
jl
sub
dec
adc
not
xchg
retf
les
hlt
mov
mov
add
popa
out
dec
movs
push
imul
xor
test
loop
cli
mov
fmul
popa
dec
(bad)
dec
ja
pop
mov
call
mov
push
imul
xchg
sbb
scas
mov
ficomp
cmps
nop
cld
and
mov
sub
in
adc
xor
jl
xor
cmp
hlt
sbb
mov
cmp
aad
push
out
aad
dec
mov
mov
retf
mov
idiv
scas
ret
or
in
cmc
shr
stos
(bad)
pop
scas
add
lods
loopne
stos
icebp
mov
jo
mov
(bad)
shl
inc
jno
scas
mov
mov
push
cmc
jp
popa
dec
dec
jnp
out
xlat
pop
pop
push
psrld
cmp
adc
nop
push
pop
dec
ins
popa
pushf
aad
(bad)
cld
mov
jb
inc
pop
pop
jp
fwait
bound
add
or
mov
pusha
aad
nop
aam
push
push
movs
pop
jmp
push
fcmovnbe
dec
jecxz
jl
mov
dec
clc
je
add
sub
mov
mov
fbld
mov
scas
fistp
pop
out
or
xchg
(bad)
inc
nop
std
pop
dec
in
es
popf
mov
fistp
jno
imul
ds
push
pop
jmp
mov
mov
ret
cmc
inc
and
(bad)
push
loopne
or
or
movs
call
mov
jge
xlat
xor
xor
mov
mov
ret
sub
loopne
es
ins
xor
inc
mov
adc
lods
push
add
arpl
cmc
jl
fdivp
sti
scas
test
and
or
mov
dec
adc
sub
pushf
mov
mov
or
imul
pop
(bad)
jb
lea
inc
hlt
lds
push
cmp
push
sbb
mov
in
push
add
push
(bad)
popa
ret
jbe
fisub
cmp
outs
xlat
fcmove
jne
jnp
cdq
dec
adc
mov
jge
test
jmp
cbw
pop
std
pusha
mov
xor
(bad)
fsincos
sub
int3
fadd
mov
mov
add
jo
ficom
push
mov
cmp
in
inc
add
cmp
ss
sahf
push
(bad)
adc
stos
cmp
shl
add
imul
fwait
mov
test
in
sub
mov
inc
aad
mov
pop
xchg
jae
jo
sub
and
cmp
add
dec
dec
mov
jbe
mov
cmc
xchg
imul
jmp
cmp
les
jae
pushf
ret
loopne
mov
or
sub
loope
fsubr
cmp
pop
fcomi
stos
hlt
out
lods
and
xor
add
add
mov
cmp
push
xchg
sbb
dec
out
mov
mov
xchg
xchg
retf
sub
(bad)
mov
in
ins
add
xchg
imul
adc
stos
int
sub
test
iret
imul
pusha
inc
bound
push
lea
je
fisttp
rol
in
cmp
stos
xor
cmp
repnz
xchg
fwait
mov
pop
aas
dec
jl
aam
nop
dec
pop
(bad)
inc
jbe
jmp
(bad)
in
call
sub
push
pop
outs
adc
outs
jnp
movs
lds
mov
mov
mov
cmp
aam
jnp
aaa
mov
sub
cmp
xchg
jbe
xchg
push
inc
imul
lahf
sbb
aad
leave
xor
lahf
fstp
xor
repz
retf
dec
lods
ds
cli
(bad)
mov
pop
xchg
retf
sub
out
pop
dec
mov
jecxz
push
push
adc
ja
cwde
pop
stc
dec
ins
mov
shl
jne
dec
fiadd
mov
xchg
dec
(bad)
push
sbb
add
inc
jle
mov
cmp
and
inc
scas
int3
jmp
xor
pop
icebp
enter
cli
into
popa
dec
adc
lods
ins
sahf
jge
pushf
stc
call
rcr
sub
pop
gs
fistp
ss
cmc
mov
imul
out
xchg
jl
xchg
pop
shl
cmp
add
xlat
xchg
aas
inc
out
add
js
aaa
cwde
dec
movs
(bad)
lahf
(bad)
jb
add
mov
sbb
and
stc
mov
scas
xchg
add
push
dec
push
ret
pop
and
jmp
jmp
push
add
or
xchg
pop
add
inc
add
push
lahf
mov
not
ror
jmp
sbb
sbb
inc
and
and
jmp
enter
fmul
imul
addr16
test
and
xchg
mov
adc
mov
rol
dec
adc
imul
pop
repnz
shl
mov
ja
push
mov
mov
dec
sub
jle
aad
cdq
cmps
jecxz
ja
aas
push
mov
ja
mov
mov
(bad)
das
add
addr16
sub
dec
stos
xlat
lods
and
out
clts
or
js
(bad)
jmp
pop
cmps
push
inc
psubd
nop
push
dec
std
sub
dec
pop
fnsave
sbb
adc
call
mov
jnp
rcr
jmp
ins
imul
lahf
sbb
icebp
ds
jbe
sbb
cld
jmp
and
ror
jmp
mov
test
daa
retf
xor
or
mov
ins
imul
(bad)
or
and
cdq
lahf
stc
scas
retf
add
(bad)
jae
xor
mov
retf
jecxz
(bad)
dec
sbb
cmps
or
pop
mov
es
imul
sbb
push
jae
lods
mov
int3
(bad)
mov
pusha
inc
clc
(bad)
fs
inc
movs
push
ror
pop
adc
in
cmp
cmp
or
mov
into
in
sbb
mov
mov
cs
ss
outs
retf
xchg
shr
push
enter
stos
jmp
clc
mov
mov
lds
xor
mov
(bad)
aam
jl
in
(bad)
xlat
in
out
ret
into
enter
or
xchg
dec
neg
lea
mov
imul
add
stos
fcmovnbe
jg
ins
mov
out
jge
cld
sbb
scas
(bad)
(bad)
fidiv
push
jnp
out
aas
cmps
and
pop
(bad)
jne
sub
lods
gs
cs
rol
je
jmp
pop
loop
mov
and
daa
or
std
out
js
inc
pop
ins
add
dec
pop
pusha
and
in
and
aam
sbb
pop
aad
stos
pop
jecxz
imul
out
push
sbb
inc
fs
sbb
out
pop
cld
je
xchg
hlt
imul
iret
xchg
sbb
jns
cmc
(bad)
or
mov
add
cmp
mov
cmps
or
adc
fwait
bswap
mov
test
into
push
adc
adc
popf
dec
mov
xchg
mov
movs
push
cmps
pop
outs
test
addr16
inc
mov
je
imul
sub
inc
and
call
inc
loope
xor
mov
int
(bad)
jnp
adc
ins
sbb
pop
test
or
adc
outs
ret
test
mov
add
inc
mov
iret
xchg
cmc
cmp
iret
pop
mov
jecxz
cmp
mov
pop
push
xor
pop
inc
std
xor
sbb
mov
aas
pop
shl
or
lods
test
aas
in
xchg
mov
push
pop
xchg
jmp
pop
pop
cmp
cwde
add
inc
sub
aam
or
scas
jmp
mov
add
mov
test
idiv
addr16
rol
les
cli
xchg
dec
mov
ret
add
push
pushf
out
into
retf
shl
fistp
push
cmps
sub
or
mov
inc
xor
add
jmp
pop
xor
push
(bad)
lods
test
cmp
and
push
clc
or
lock
(bad)
pop
push
pop
jb
pop
inc
add
sbb
fiadd
inc
in
pop
xchg
(bad)
push
inc
(bad)
(bad)
push
call
shl
lds
mov
cmp
and
pop
jge
push
movs
push
mov
clc
push
cmp
dec
jb
outs
jge
psrad
add
xchg
and
dec
sbb
jae
sbb
sahf
sbb
dec
ins
pushf
mov
cld
adc
inc
lahf
std
add
pop
jns
lea
sub
in
int3
push
mov
lock
mov
dec
sbb
pop
and
xor
xlat
mov
pop
push
adc
rcl
adc
retf
adc
xchg
data16
dec
in
xchg
jno
or
sub
jl
jmp
shl
es
or
push
icebp
inc
mov
jecxz
pop
add
fnsave
rol
mov
icebp
mov
mov
dec
das
dec
inc
jp
jb
jmp
out
je
lods
inc
pop
cmp
mov
imul
cmp
fdiv
fdivr
jmp
mov
mov
push
add
test
jo
in
scas
sub
aas
test
lds
pop
xor
repnz
pop
add
jno
cmp
mov
inc
add
xchg
ret
data16
push
pop
mov
jns
fst
mov
mov
retf
push
sbb
push
pop
shr
jg
or
fdiv
inc
lea
jbe
cmp
sar
dec
cmp
cmp
in
hlt
jo
imul
sahf
callw
loope
dec
push
inc
cmp
icebp
test
ins
daa
jge
mov
sub
or
cmc
movs
push
lea
int
jae
adc
mov
out
or
retf
mov
rcl
mov
inc
inc
xchg
test
dec
dec
fcomp
mov
shl
mov
stc
or
jno
dec
lods
fmul
cmp
push
out
movs
repnz
cmp
retf
lds
or
push
xchg
xchg
test
xchg
(bad)
dec
sbb
movs
and
push
xchg
jge
nop
or
test
mov
mov
cmps
stos
loop
xor
bound
dec
out
(bad)
jae
cmps
repz
cmp
rcl
xchg
xor
loope
jne
mov
jb
mov
cmp
sub
scas
push
xchg
imul
out
cmps
inc
ss
aas
pop
mov
ss
mov
pop
out
or
xchg
jae
mov
imul
mov
adc
cs
jb
gs
push
mov
ins
inc
pop
push
in
cmps
out
arpl
xchg
pop
xor
or
add
fisub
pushf
pusha
dec
movs
adc
and
or
stos
pop
add
and
fidiv
loope
scas
aad
sti
inc
mul
and
jl
imul
pop
mov
inc
adc
sub
scas
pushf
push
stos
dec
sub
jno
xlat
mov
push
push
in
imul
push
jb
xchg
arpl
imul
(bad)
xlat
and
mov
inc
int3
rol
dec
call
mov
arpl
xor
stos
sahf
jmp
or
add
jbe
fimul
xlat
add
jl
hlt
mov
leave
dec
sbb
push
aam
pop
lds
stc
cli
bound
inc
into
mov
stos
pop
mov
push
inc
(bad)
stos
or
lds
or
sub
adc
(bad)
loopne
or
pop
mov
and
lds
ficom
sbb
inc
xlat
jb
inc
push
mov
ja
loop
mov
adc
pusha
shl
(bad)
mov
fadd
inc
add
not
iret
xchg
or
lahf
jnp
mov
xchg
imul
jns
ins
pop
adc
mov
bound
out
xchg
jecxz
mov
inc
sbb
(bad)
mov
mov
lods
jecxz
or
outs
mov
in
jge
pop
jmp
dec
jb
mov
pop
mov
retf
xchg
xchg
add
and
sub
hlt
addr16
add
iret
ja
and
lahf
cdq
(bad)
mov
(bad)
jmp
inc
popa
jns
ret
inc
sub
xor
mov
mov
inc
xchg
xchg
hlt
int3
(bad)
gs
div
mov
xchg
lods
or
lahf
mov
xchg
xor
dec
mov
dec
arpl
jmp
lahf
cmp
das
enter
sbb
add
xor
out
push
inc
test
test
popf
xor
cli
sub
mov
popa
push
mov
shr
pop
add
mov
into
out
dec
out
dec
add
mov
retf
int
or
iret
pop
mov
xor
cmps
stc
loope
push
sbb
cmps
imul
(bad)
adc
loop
in
adc
jg
mov
pusha
jmp
pop
fsubr
dec
fcom
sub
mov
stos
inc
les
pop
outs
es
fwait
test
loope
scas
mov
adc
add
jg
out
aaa
and
sbb
or
(bad)
mov
retf
test
nop
and
cmps
xchg
aas
clc
bound
out
clc
mov
jecxz
push
shl
and
sti
sbb
or
stos
pop
cld
das
add
aaa
stc
pop
push
test
jnp
outs
pop
add
inc
mov
ficom
scas
push
popa
add
push
int3
inc
pop
push
xlat
push
jecxz
push
mov
imul
push
pop
mov
push
pusha
jmp
jg
ror
sti
ins
sub
mov
mov
dec
dec
in
and
add
sbb
in
bound
add
jnp
fucomp
mov
movs
push
fstp
mov
fistp
mov
adc
push
addr16
push
jae
add
mov
xor
(bad)
push
enter
cmp
xchg
outs
or
cmp
jmp
inc
hlt
int
(bad)
ficomp
push
das
das
push
shl
dec
pushf
mov
xor
aaa
in
mov
(bad)
cli
sub
into
or
lea
mov
xchg
jp
ret
fst
mov
or
fisubr
out
fist
pop
push
les
or
(bad)
lea
dec
ror
clc
rol
gs
repnz
sub
dec
ins
hlt
out
ja
popf
push
jecxz
sbb
pop
lahf
and
dec
and
aaa
nop
jge
int
out
push
jnp
dec
lods
clc
jae
xchg
lea
ins
xchg
xor
and
mov
jne
mov
fadd
dec
sbb
mov
(bad)
cwde
(bad)
jne
cmp
retf
jmp
add
(bad)
clc
lods
mov
into
cmp
jecxz
cmp
mov
nop
fldenv
push
iret
mov
fs
jne
(bad)
mov
shl
jl
push
mov
call
xchg
int3
adc
shl
fnsave
inc
sbb
jl
sub
mov
pop
push
mov
push
add
shr
adc
stc
xchg
inc
jns
dec
xchg
das
jae
loopne
or
push
in
mov
repnz
mov
xchg
push
idiv
icebp
(bad)
adc
sbb
cmp
das
cmps
fiadd
xor
ss
sbb
loop
sbb
pop
or
sub
(bad)
adc
sar
inc
sahf
pushf
out
dec
out
inc
loopne
adc
push
dec
stc
outs
loope
test
cmp
xor
inc
movs
int
ins
in
lds
xor
fist
push
inc
and
xchg
gs
cwde
clc
loop
add
(bad)
retf
mov
inc
xchg
dec
xor
fs
(bad)
pop
jno
bound
(bad)
pop
mov
test
mov
stos
dec
mov
loope
lods
mov
out
cmp
aad
outs
cmp
test
ss
leave
mov
pop
add
in
cmp
movs
retf
push
mov
test
xchg
inc
scas
fs
adc
mov
xor
cmp
jo
or
xchg
ja
fdiv
retf
addr16
pop
mov
or
jae
sub
and
mov
adc
je
test
iret
test
mov
jnp
enter
xlat
mov
jnp
push
pop
cmps
bound
sub
ds
(bad)
jl
jg
jecxz
jo
jbe
mov
push
fnstsw
and
ins
inc
cmc
ret
pop
push
stc
inc
in
sbb
aam
push
jg
push
ror
cdq
push
or
or
and
(bad)
xchg
mov
xchg
mov
scas
adc
pop
int
mov
movs
and
sbb
mov
(bad)
std
mov
sar
jae
shl
shl
xchg
test
icebp
fcom
fist
push
stc
push
cmps
pop
daa
jl
xchg
add
xor
push
pop
jle
int3
dec
jo
mov
lahf
inc
(bad)
mov
adc
inc
mov
aaa
jne
dec
sub
and
(bad)
push
loop
jl
adc
in
test
push
(bad)
sub
xor
adc
adc
fimul
out
movs
ficom
bound
outs
cmps
idiv
and
add
pop
push
mov
fcomp
xor
cmp
mov
movs
test
(bad)
loopne
jbe
push
ret
xchg
pop
(bad)
xor
outs
in
push
or
imul
jg
push
mul
loopne
jne
rcr
dec
ins
pop
std
adc
lds
inc
clc
inc
sbb
inc
mov
aad
mov
dec
fcomp
mov
lea
jg
rol
cmp
jbe
repz
mov
push
cs
dec
sbb
or
mov
jp
sbb
xor
dec
or
das
dec
mov
xor
inc
dec
cwde
xchg
inc
ds
dec
movs
out
xchg
jo
or
jns
std
shl
repz
fcom
or
call
mov
or
xor
aaa
repnz
inc
cmp
push
aaa
sbb
movs
pushf
scas
xchg
jnp
hlt
loopne
out
push
dec
mov
add
mov
dec
mov
fwait
clc
sub
sahf
cmps
xchg
add
inc
clc
sahf
add
cmps
std
pop
sbb
push
shl
mov
dec
mov
int3
pop
or
jle
push
xchg
std
inc
rcr
and
push
call
or
lods
stos
push
(bad)
test
or
and
add
inc
and
pop
sbb
aaa
xchg
jl
jmp
sbb
mov
jmp
mov
inc
jnp
pop
iret
dec
ins
sbb
and
jle
jne
js
out
cli
xchg
ret
cmp
rcl
and
jmp
xchg
out
movs
das
lds
pop
inc
in
xchg
mov
jbe
add
mov
std
das
dec
ret
aad
popa
push
add
test
adc
pushf
clc
es
bound
cli
or
push
cmp
dec
inc
or
mov
(bad)
sahf
ror
inc
jmp
inc
ins
imul
xchg
sbb
pop
cmp
mov
push
add
xchg
fnsave
cwde
jne
mov
inc
jbe
je
adc
data16
pop
pop
sub
adc
sbb
cwde
sub
fidiv
aad
cmp
or
sub
and
xlat
lea
push
cdq
sub
imul
xor
cs
std
test
pop
pop
cmp
in
ins
out
cdq
xchg
push
push
and
mov
or
test
into
mov
gs
imul
add
fild
daa
pusha
(bad)
je
int
retf
xor
sub
test
out
pushf
pop
jl
ds
cwde
imul
sub
mov
sbb
mov
lock
in
cdq
add
int3
cwde
fld
das
mov
lea
add
(bad)
adc
xor
pop
xor
aam
xchg
push
jle
push
xchg
mov
dec
imul
out
push
pushf
xor
ror
inc
push
popf
inc
nop
push
xchg
pop
test
jbe
in
pop
sar
adc
daa
dec
(bad)
(bad)
sbb
xchg
retf
data16
(bad)
idiv
loope
imul
or
sub
and
les
mov
enter
aas
jp
repz
cmp
xor
movs
or
adc
mov
mov
mov
xor
jl
mov
sbb
xchg
in
jmp
les
clc
mov
aaa
xor
cmc
mov
cmp
jmp
inc
cmp
rcl
(bad)
inc
loopne
push
mov
popf
cmp
popf
add
pop
xchg
ss
call
cmp
cmp
mov
(bad)
cwde
mov
mov
jmp
popa
mov
jg
(bad)
idiv
arpl
cmp
gs
retf
or
(bad)
dec
inc
mov
repnz
(bad)
(bad)
adc
xchg
or
and
xchg
stos
sub
rcl
aam
push
repnz
push
push
inc
mov
jb
aad
lods
dec
shr
outs
out
popa
lea
push
sti
mov
movs
addr16
test
ret
daa
pushf
in
movs
jo
ficom
push
test
fsubr
leave
fiadd
jo
cmp
test
das
jae
(bad)
loop
jl
xchg
cmp
test
sbb
dec
sbb
out
daa
imul
jno
mov
cli
add
out
(bad)
test
orps
xor
push
and
pop
out
je
shl
(bad)
mov
adc
jae
les
xor
ja
xchg
fwait
imul
mov
cmc
(bad)
inc
movs
aaa
(bad)
cmp
jno
in
mov
push
jns
xor
lods
mov
les
xchg
lock
mov
movs
sbb
xor
mov
mov
and
inc
mov
call
sub
jb
retf
dec
outs
scas
mov
xchg
sbb
shl
pop
xor
inc
lar
add
ss
js
jns
fwait
scas
je
(bad)
or
lods
sbb
or
nop
add
pop
xchg
shl
(bad)
jge
and
lods
mov
dec
sub
push
mov
sub
cmps
shr
push
inc
jo
dec
pop
sbb
xchg
loop
adc
and
enter
and
(bad)
fdiv
leave
sub
sub
dec
mov
sbb
jecxz
inc
dec
fistp
ret
(bad)
pop
cmp
inc
inc
push
aas
push
bound
mov
mov
sub
jo
cmp
mov
fbld
jnp
test
ss
push
das
sti
xor
pop
retf
out
pop
add
mov
mov
mov
jecxz
push
add
lock
xchg
or
stos
daa
adc
adc
jl
push
sar
lahf
ds
pop
or
xchg
mov
adc
pop
jne
or
add
mov
add
arpl
jge
loopne
push
xchg
movs
mov
push
fistp
les
enter
arpl
sbb
adc
aam
aam
pop
pop
fld
retf
sahf
mov
or
add
outs
adc
pop
inc
jp
fstp
stos
pop
fbstp
movs
test
lahf
imul
dec
jnp
addr16
inc
mov
retf
leave
lahf
int
sbb
out
pusha
mov
repz
stc
fisttp
mov
xor
pushf
inc
jmp
movs
cmps
jnp
adc
mov
inc
or
sub
xchg
lock
fdivr
xchg
dec
stos
xchg
loope
sbb
inc
ja
cmp
jle
xchg
or
(bad)
jp
lock
outs
(bad)
in
daa
mov
sti
inc
push
pop
inc
mov
ss
xor
add
cmps
stos
or
xor
shl
pop
push
push
and
fild
sub
pop
mov
aas
sahf
loopne
test
ss
ja
(bad)
mul
int3
push
mov
inc
mov
inc
sahf
sbb
ins
and
pop
aam
inc
jle
aam
xor
pop
xchg
push
mov
xchg
or
mov
xor
xchg
fsubrp
inc
lock
and
pop
cmps
lea
stc
inc
or
(bad)
mov
das
mov
popf
mov
dec
cs
pop
call
pop
je
shl
(bad)
jmp
cmps
adc
cli
stc
clc
push
ins
pop
cmp
mov
or
jae
mov
push
xchg
mov
pushf
mov
cs
xor
mov
jae
cli
lods
push
xlat
xchg
inc
stc
gs
inc
push
fucomi
xor
cmp
xor
test
nop
mov
xchg
cmp
loope
lahf
mov
and
cmp
push
(bad)
cmp
jno
dec
js
rol
xchg
call
adc
bound
jb
fwait
mov
ret
pop
xor
int
fisub
adc
mov
dec
mov
movs
mov
mov
loope
rol
sar
add
or
imul
loopne
outs
push
out
jbe
mov
and
js
jecxz
out
xchg
repz
loop
or
es
inc
xor
xchg
shl
clc
loope
fcomp
sub
xchg
jecxz
jg
add
sbb
inc
xchg
dec
inc
jge
ss
ds
les
jns
std
adc
fisttp
or
push
fst
add
popf
and
loopne
jg
dec
jns
(bad)
cdq
jecxz
fiadd
inc
push
dec
repz
xor
retf
outs
xor
mov
sahf
ins
fwait
pop
cmp
ins
stos
cmp
das
mov
mov
mov
add
fadd
fbstp
mov
pop
push
xchg
jl
mov
xchg
mov
sbb
sub
out
nop
xor
ror
(bad)
mov
or
inc
nop
adc
push
in
jl
jbe
pushf
mov
in
add
push
adc
xor
scas
daa
retf
jp
or
aas
dec
(bad)
jo
push
or
pop
in
jbe
xor
adc
push
jle
add
jae
fld
icebp
aad
xor
jmp
pop
sbb
and
outs
pop
jo
cdq
mov
and
jg
in
cmp
add
and
jecxz
lock
xchg
gs
sub
cmp
and
adc
(bad)
jmp
imul
retf
adc
les
xor
fisttp
out
sub
mov
cmps
mov
mov
jl
push
cdq
stos
gs
jo
test
leave
push
jne
mov
ficom
push
xor
inc
(bad)
add
inc
dec
pop
loopne
inc
ss
add
sbb
mov
in
not
out
push
and
pop
test
out
and
rol
inc
and
out
aas
sub
ja
(bad)
push
xor
dec
jne
or
adc
push
jl
rol
adc
aas
mov
stos
sbb
scas
or
adc
jno
sub
xchg
jle
mov
mov
xchg
xor
adc
in
cmp
adc
std
fs
dec
test
add
pushf
push
in
cmc
push
sub
and
push
gs
test
call
push
adc
cmps
aas
cmp
xchg
mov
(bad)
scas
lods
in
ret
adc
mov
cwde
jmp
pop
aaa
ins
scas
xchg
loopne
jnp
or
bound
fwait
adc
dec
mov
lods
seta
out
dec
in
sub
mov
ds
test
or
xlat
push
mov
cmps
fcmovb
mov
xchg
daa
or
nop
dec
jnp
icebp
outs
mov
inc
push
add
aam
repnz
cmps
retf
sti
js
mov
fwait
scas
shl
push
mov
dec
das
out
sbb
sub
icebp
(bad)
xor
xchg
nop
shl
xchg
je
inc
test
loope
sub
pushf
pop
pop
add
mov
ja
and
inc
int
aam
or
xchg
lock
xchg
mov
or
mov
jecxz
rcr
ds
out
cmps
push
or
outs
les
mov
and
stc
stos
test
lahf
mov
and
xor
xchg
sbb
sar
(bad)
sar
or
(bad)
fstp
pop
pop
fist
sbb
outs
push
xchg
sub
std
ret
(bad)
enter
scas
leave
xor
ja
scas
aad
ja
addr16
ds
adc
sbb
lods
cmp
jnp
dec
jo
out
ins
inc
into
mov
xlat
jne
adc
movs
sbb
xchg
call
mov
popa
sub
fidiv
xor
sbb
fistp
mov
push
inc
out
movs
in
add
mov
or
sbb
fild
inc
ss
sbb
out
in
xchg
add
mov
je
data16
hlt
xor
xchg
mov
dec
cmp
stos
aam
xchg
pop
xchg
sbb
jle
jae
imul
sub
into
cdq
sbb
push
aam
adc
leave
push
rcl
mov
(bad)
test
dec
daa
fadd
scas
sub
xchg
xchg
pop
inc
mov
or
gs
aaa
cs
lock
rcl
add
lods
mov
mov
idiv
mov
mov
jge
fcom
addr16
adc
mov
pop
test
rcl
stos
mov
xchg
add
arpl
cmp
xlat
pushf
cmp
movs
or
loope
add
pop
(bad)
push
dec
mov
jmp
call
retf
jb
scas
pop
fidivr
xchg
add
and
pop
pop
jns
outs
dec
dec
adc
dec
fdivp
dec
je
cmp
xchg
out
and
lods
cmp
and
xchg
dec
jge
sti
(bad)
cmp
jmp
mov
out
push
xchg
mov
xchg
or
pop
and
lods
cmps
cmp
or
call
lds
or
loope
jb
jb
dec
jbe
mov
nop
adc
xchg
push
add
data16
loope
out
fcom
xor
(bad)
(bad)
cli
rcr
mov
adc
out
aam
sbb
stos
or
loopne
movs
push
add
fisttp
jl
sbb
sbb
in
jo
je
push
retf
outs
mov
add
test
outs
into
or
shr
jae
xchg
sbb
mov
inc
and
pushf
mov
mov
add
cdq
ss
sub
loop
mov
sub
jmp
and
loope
fld
inc
mov
and
mov
dec
test
call
sub
inc
dec
int3
mov
jecxz
and
sub
mov
fst
jbe
jns
mov
rcl
(bad)
sub
xchg
clc
fistp
pusha
ja
push
pop
jmp
xor
mov
xchg
xchg
fdivr
ds
shl
inc
pop
leave
sbb
xor
jg
cdq
xor
out
movs
fist
mov
in
pop
push
xor
loope
outs
inc
je
jp
sahf
outs
lds
fbstp
das
aas
fdiv
inc
push
dec
push
adc
in
addr16
mov
mov
inc
push
stc
imul
out
enter
pop
in
sub
push
mov
ins
out
pop
xchg
cmp
ror
int3
inc
mov
xchg
push
in
iret
(bad)
clc
adc
repz
cmp
stos
cmp
mov
or
jecxz
clc
jmp
xchg
loop
daa
xchg
mov
lods
test
pop
mov
ins
xlat
add
mov
stos
(bad)
out
fidiv
js
(bad)
imul
add
lock
push
aas
sbb
jbe
dec
push
mov
jmp
repz
ror
cli
mov
cld
adc
add
inc
(bad)
test
or
pop
mov
mov
xor
fild
out
mov
pop
push
mov
inc
inc
fnsave
lahf
jecxz
sub
(bad)
out
ret
jmp
sahf
xchg
popa
cwde
xor
mov
mov
fnsave
rcl
cmp
pop
mov
mov
jl
mov
pop
mov
pop
cmps
jae
das
cs
lahf
call
minps
pop
and
imul
test
les
add
mov
out
icebp
scas
loopne
sbb
push
mov
bnd
and
inc
jecxz
sub
ss
sti
cmp
aas
or
stc
fld
xor
jnp
bound
push
les
jmp
test
push
movs
cdq
push
sub
mov
and
arpl
adc
sub
retf
xchg
push
cmp
and
scas
xchg
je
daa
jle
enter
out
test
scas
(bad)
xlat
mov
int3
aam
inc
fs
dec
retf
mov
imul
or
sar
jp
inc
mov
and
leave
xchg
dec
xlat
loope
pop
inc
push
xor
sub
punpckldq
repnz
add
outs
mov
xor
push
in
or
mov
jecxz
popf
loope
dec
retf
rep
mov
sub
std
hlt
mov
mov
jno
shl
and
add
or
imul
out
push
push
into
push
retf
ss
imul
mov
aas
pop
push
dec
aaa
push
repnz
outs
cmp
mov
push
pop
dec
xchg
imul
out
mov
in
add
out
or
or
jge
leave
and
bound
rol
inc
outs
push
push
xchg
into
dec
sbb
mov
aam
xor
add
mov
add
stos
(bad)
pop
or
call
inc
imul
(bad)
push
int3
xor
lea
fmul
cdq
push
sub
(bad)
ja
push
or
bound
in
sahf
int3
cmp
adc
jae
or
jne
mov
sub
push
sar
cmp
or
pop
or
xor
mov
js
inc
push
xor
pop
sbb
pop
(bad)
ins
jge
sahf
aaa
inc
in
dec
adc
mov
sti
rol
outs
or
dec
xor
addr16
fcmovu
xor
sbb
cmp
rol
cli
and
(bad)
out
jge
movs
mov
pop
add
or
pop
stos
stc
mov
sbb
inc
aad
arpl
(bad)
out
les
test
fs
in
clc
mov
fdiv
movs
test
in
and
leave
inc
stos
ins
push
and
sbb
or
push
adc
cmp
and
push
adc
jmp
ja
call
push
jle
jnp
(bad)
sub
xor
push
movs
daa
xor
push
int
xlat
into
cmp
mov
mov
add
adc
mov
sbb
pop
pop
jge
inc
retf
jge
leave
fild
bound
stos
data16
jae
dec
cmc
cmp
ds
outs
lahf
sbb
mov
ss
inc
push
in
xchg
clc
xchg
jecxz
int
xor
sub
and
(bad)
cmp
cmc
mov
aas
idiv
ins
xor
mov
test
cmc
(bad)
cmp
mov
std
movs
push
mov
(bad)
mov
imul
shr
int3
dec
mov
jo
mov
xchg
call
in
rol
pushf
iret
icebp
jne
in
arpl
(bad)
lods
sub
push
push
out
push
jmp
daa
inc
jae
xchg
dec
lahf
push
test
jno
sbb
sbb
cwde
push
fpatan
jge
cmps
inc
fst
push
clc
hlt
xchg
sbb
and
pop
sbb
xchg
shr
sub
rol
adc
cmp
test
and
mov
enter
add
xchg
sub
mov
jns
jg
rcl
je
mov
pop
imul
or
sti
push
push
adc
mov
loopne
je
push
add
and
inc
add
nop
sub
imul
jp
sahf
jo
cmp
(bad)
pop
dec
jbe
ret
(bad)
and
dec
push
mov
inc
movs
push
xchg
pop
and
enter
jmp
xchg
mov
rcr
movs
fcmovnbe
inc
aad
mov
bound
push
loop
and
sahf
add
stc
loopne
(bad)
into
lods
popa
add
sbb
(bad)
repnz
loopne
das
lea
ins
xchg
pop
in
push
jge
cmp
mov
xchg
loop
add
test
pusha
sub
out
mov
popa
pop
jno
cmp
push
rol
pop
and
xor
cwde
inc
jmp
sbb
pusha
clc
cmc
inc
hlt
dec
arpl
pop
cdq
(bad)
mov
sbb
inc
mov
xor
dec
scas
dec
arpl
call
test
(bad)
test
jbe
xchg
call
dec
aaa
test
(bad)
mov
iret
xchg
pop
in
jnp
or
mov
inc
cmc
mov
test
outs
mov
(bad)
inc
push
or
imul
mov
repnz
lea
data16
pop
push
(bad)
mov
xchg
or
(bad)
add
cwde
adc
ja
push
xchg
xchg
(bad)
das
xor
push
xor
jnp
jb
movs
push
push
shl
xchg
sub
stc
sahf
and
fsub
mov
adc
jbe
cmc
cmp
pop
mov
xchg
inc
jne
cld
cmp
fcmovnu
test
inc
push
call
stos
mov
(bad)
pop
jge
(bad)
xchg
sbb
shr
xor
mov
and
cmps
into
xchg
jle
pushf
out
loope
sbb
(bad)
or
sbb
into
push
jmp
xchg
imul
pop
dec
imul
sbb
cld
retf
xor
test
bound
jnp
push
inc
cwde
mov
and
cmp
push
xchg
cmc
into
sbb
xchg
lea
clc
dec
jno
fmul
cmp
add
hlt
std
push
mov
sahf
jg
jp
out
call
adc
cmp
mov
rol
dec
in
aas
push
xchg
mov
dec
xor
inc
xor
xchg
or
push
adc
jmp
sbb
add
mov
ins
jns
xor
cmp
xchg
sub
pop
jnp
xchg
dec
retf
mov
mov
mov
and
or
push
dec
cmp
jnp
add
ror
fwait
xchg
addr16
inc
sbb
pop
(bad)
xchg
push
repnz
adc
xor
leave
leave
or
mov
jbe
and
add
ret
sub
ret
and
sbb
neg
mov
ja
xor
mov
cmps
jecxz
movs
or
cmps
and
fdiv
mov
xor
xchg
mov
mov
adc
or
clc
scas
call
daa
adc
pop
(bad)
pop
add
cdq
jo
dec
dec
xchg
movs
dec
hlt
call
lods
mov
pop
pop
or
nop
stos
cmp
xlat
outs
or
sub
jno
adc
das
sbb
sbb
int
(bad)
pop
sbb
jbe
out
push
fcmovnbe
xor
xchg
cdq
push
or
cmps
xor
pop
jnp
push
push
lea
or
ss
push
dec
jns
dec
push
or
and
je
pop
jns
ror
push
or
dec
ds
xchg
pop
add
sub
xchg
adc
mov
mov
sbb
add
js
out
test
std
sub
aas
ja
or
cdq
jmp
and
cmp
shl
rol
or
data16
(bad)
jns
add
push
pop
inc
and
mov
and
clc
jns
call
xchg
push
lods
mov
mov
inc
sbb
and
js
ficomp
pop
movs
cmp
xor
rol
or
(bad)
adc
and
shl
scas
stos
aam
xchg
aad
int
dec
gs
test
xchg
cmp
mov
mov
cmp
pop
mov
sbb
aaa
pop
je
sub
fstp
mov
inc
jns
ds
inc
ror
test
(bad)
repnz
into
jnp
cmp
sub
xor
shr
and
sbb
dec
and
(bad)
cmp
jecxz
push
stos
lock
adc
outs
adc
(bad)
sbb
jo
or
stc
imul
es
in
mov
add
cmc
mov
add
mov
cmp
shr
div
jge
pop
lds
lds
mov
cmp
mov
push
data16
dec
aam
gs
add
stc
repnz
fwait
push
repz
lahf
fistp
pop
stc
jbe
in
cmp
inc
inc
xor
mov
stos
sub
inc
sbb
movs
ss
cli
and
icebp
sbb
test
push
jbe
fwait
daa
stos
push
mov
mov
mov
mov
in
push
xlat
mov
daa
scas
pop
mov
movs
fs
mov
jl
sub
mov
jno
sbb
xor
push
cs
fcomp
mov
pop
sub
and
xor
jge
xchg
test
sar
xor
mov
dec
mov
or
and
retf
loope
imul
cmp
xchg
popa
retf
sub
nop
and
and
pusha
data16
push
pop
lea
push
add
xor
and
add
leave
jecxz
mov
bound
shl
xor
push
pop
(bad)
mov
mov
xchg
cmp
fmul
add
dec
mov
adc
fwait
dec
into
mov
aad
and
jmp
add
sbb
leave
push
aas
push
jp
or
outs
push
rol
dec
aas
fisttp
or
dec
cmp
lods
mov
xor
daa
mov
push
sbb
ins
push
add
dec
push
aad
xchg
pop
xor
mov
mov
outs
or
cdq
push
aam
inc
rcr
mov
popf
pop
dec
movs
xchg
xchg
and
js
jno
cmp
ins
pop
adc
std
dec
outs
(bad)
call
xchg
inc
sub
icebp
jl
shl
stc
cs
or
adc
cmovl
mov
inc
mov
imul
jno
loope
xor
mov
fcomip
not
push
cmp
jle
push
shl
fincstp
sub
test
bound
pushf
xchg
clc
test
push
sbb
xor
and
mov
fs
adc
pop
imul
lods
mov
(bad)
out
cmps
in
(bad)
adc
adc
jbe
push
dec
cmp
mov
sbb
sbb
ja
mov
jne
sbb
lods
not
(bad)
cli
push
and
and
pop
lock
fs
js
pop
ja
(bad)
pop
add
imul
add
cmp
adc
jnp
jae
add
sbb
pop
inc
xor
retf
cmp
jge
mov
jbe
nop
loopne
jb
std
test
inc
jl
sub
push
cmp
jmp
xchg
cmp
mov
ror
lea
or
gs
lsl
jo
add
add
daa
imul
outs
cmc
mov
nop
lods
(bad)
std
outs
mov
inc
pop
fxch
call
lods
call
push
in
fdivr
rcr
jbe
mov
jmp
inc
and
add
aam
and
mov
and
sahf
mov
jmp
into
and
cmp
dec
mov
adc
cmp
retf
jle
fdivr
dec
mov
pop
cmp
sub
hlt
js
outs
inc
sbb
push
int3
(bad)
cmp
push
pop
in
movs
(bad)
dec
sub
scas
push
pop
pop
not
pushf
dec
cmp
sub
lods
inc
sub
push
popa
std
mov
int3
jo
inc
dec
ins
sub
jo
scas
or
sar
inc
mov
jmp
loop
(bad)
(bad)
enter
js
mov
lds
int3
js
and
pop
adc
xor
sbb
mov
mov
das
xchg
ret
dec
lods
sub
sti
dec
inc
xor
cmp
jle
jmp
dec
push
xor
xor
test
sbb
shl
cli
push
dec
js
jg
xchg
xor
add
and
mov
test
rol
in
adc
adc
pop
fidivr
mov
sbb
pop
xor
sub
or
adc
retf
dec
push
push
leave
sti
add
mov
daa
mov
pop
ror
add
in
shl
xor
cmps
sub
pop
inc
daa
in
and
rcl
outs
imul
xor
add
cmp
in
mov
sar
add
add
jo
pop
lods
addr16
cmc
pop
or
daa
add
aas
dec
into
dec
adc
cmp
cmps
ret
sar
xor
sub
inc
in
aaa
xchg
daa
adc
in
cmp
jns
call
shl
mov
pop
push
call
pop
push
cdq
scas
mov
push
sub
mov
inc
jle
(bad)
jg
adc
or
inc
mul
sbb
add
lahf
sub
test
imul
dec
pause
outs
mov
mov
out
or
xchg
pop
mov
pop
mov
xor
ret
aas
jno
cmp
das
dec
cmp
sub
mov
inc
cmps
outs
cmp
lods
icebp
scas
mov
xor
inc
mov
sbb
not
int3
inc
nop
jae
outs
(bad)
fcom
or
jae
(bad)
imul
aad
fldpi
fcmovb
neg
aaa
rcl
sbb
shl
xor
pushf
push
sub
shl
sub
inc
movs
std
neg
les
(bad)
cmp
mov
pop
push
(bad)
cli
icebp
dec
mov
ror
jl
cwde
cmp
xchg
sahf
ins
add
ss
inc
cmp
imul
mov
or
out
xchg
aaa
mov
adc
aaa
cmp
adc
push
bound
xchg
sbb
outs
std
pop
xchg
dec
push
mov
nop
inc
inc
out
daa
out
xor
or
cmc
mov
mov
test
add
sar
clc
mov
xchg
dec
(bad)
fist
adc
add
int3
loop
pop
out
das
aad
popa
sar
pop
fwait
dec
jmp
sar
cmp
xor
(bad)
adc
sbb
popa
icebp
(bad)
mov
dec
bound
pop
cdq
xor
leave
imul
int
aaa
xor
mov
pushf
cld
fcomp
iret
adc
or
fst
(bad)
movs
jb
clc
adc
fs
outs
pop
es
js
(bad)
xor
mov
mov
in
cld
in
lock
in
mov
lock
mov
add
pushf
inc
adc
and
popf
pop
xchg
jb
shl
repz
popfw
out
jecxz
push
out
psubusw
retf
js
stos
or
mov
xor
jmp
cmp
stos
xor
inc
shl
int
xor
test
push
ficom
adc
fmul
push
shl
sub
int
lods
(bad)
leave
dec
mov
sti
jbe
test
and
jno
jnp
js
popf
pop
mov
pop
pop
int
push
dec
sbb
adc
mov
mov
push
(bad)
mov
psrld
mov
imul
bound
data16
sti
push
push
call
dec
sub
retf
jmp
cmc
inc
cli
cs
pop
in
mov
cs
mov
retf
and
jne
and
pop
fstp
or
stos
mov
jne
mov
mov
les
xchg
fwait
xchg
dec
or
mov
sbb
mov
mov
jle
daa
imul
dec
enter
lds
ret
aad
hlt
mov
xor
dec
sbb
mov
pop
sub
mov
dec
stos
shr
push
arpl
out
push
leave
lds
movs
adc
push
push
mov
mov
in
mov
push
scas
mov
xlat
dec
push
dec
loope
add
push
xchg
push
cli
xor
sbb
pop
inc
pusha
addr16
jmp
push
in
push
lock
cld
xchg
and
adc
cmp
loop
ins
movs
sbb
mov
test
sub
add
jp
ja
inc
xchg
bound
shl
bound
sar
cmc
add
sub
mov
jae
lods
shl
adc
rcr
xchg
mov
sbb
mov
pop
gs
int3
xchg
fs
imul
cs
(bad)
xchg
jmp
push
imul
repnz
(bad)
sub
or
hlt
xchg
mov
sub
enter
outs
cli
rcl
push
ja
inc
and
jg
cmp
ins
in
pop
adc
aaa
mov
adc
pop
jo
xor
(bad)
into
mov
sbb
call
push
fwait
cmp
xchg
mov
mov
rcr
nop
inc
std
iret
and
xchg
jl
es
add
(bad)
or
push
add
and
in
out
das
popa
call
jge
push
or
call
stos
out
outs
sbb
mov
mov
mov
aaa
ins
push
loop
cmc
jmp
mov
pop
inc
lods
movs
jp
mov
loop
mov
jae
mov
rcl
mov
stos
ins
lea
xchg
cdq
xor
mov
push
mov
ret
xor
mov
retf
mov
push
loopne
sub
jl
jecxz
sahf
sbb
in
cmps
jmp
mov
push
mov
adc
jge
add
fst
pop
mov
add
mov
mov
rcl
pop
in
push
(bad)
cmp
push
dec
jmp
mov
rcl
sub
jmp
idiv
fmul
sbb
xchg
cmp
fidiv
std
mov
xor
or
jno
imul
outs
ret
fimul
mov
pop
hlt
outs
rcr
bnd
imul
ins
xor
push
js
pop
es
nop
inc
(bad)
leave
push
icebp
mov
sbb
mov
dec
retf
xor
push
fucomp
xchg
fwait
add
sbb
popf
add
fnstcw
gs
mov
cmps
dec
mov
loopne
imul
(bad)
imul
(bad)
xchg
and
and
adc
test
imul
mov
xor
or
xchg
cmps
cmps
add
out
nop
pop
jne
pop
icebp
les
xlat
fs
xor
inc
xchg
rcr
dec
movs
push
(bad)
fidivr
pop
sub
or
(bad)
adc
push
gs
cmp
push
or
inc
push
inc
push
and
lods
jne
sub
add
mov
and
push
out
fs
and
push
out
jmp
add
test
fisubr
movs
ret
pop
ja
shl
out
sbb
fs
dec
sub
push
mov
xor
fadd
cmc
sbb
adc
std
pop
adc
call
add
stc
addr16
retf
xor
ds
pop
mov
js
xchg
data16
mov
xchg
or
xchg
or
out
ret
test
lahf
xor
out
mov
push
mov
test
xchg
into
push
push
stos
inc
xchg
and
mov
jae
daa
inc
sub
xor
cmc
inc
ficomp
add
loopne
lock
jmp
fcom
test
sub
push
xchg
rol
jl
loop
jge
xor
mov
hlt
jmp
cld
inc
inc
jl
int3
inc
pushf
xor
pushf
xchg
gs
xor
xchg
pop
jbe
call
enter
inc
mov
or
fistp
test
cmps
call
gs
push
xor
lods
sbb
dec
inc
jne
iret
in
test
retf
mov
cs
loop
push
fdiv
test
mul
dec
popf
mov
jmp
pop
and
jecxz
lds
pop
mov
mov
jecxz
sar
push
ror
xchg
hlt
aad
scas
ret
pushf
dec
sub
hlt
dec
mov
sub
mov
pusha
cmp
jg
pop
ror
outs
mov
ror
mov
es
pop
(bad)
mov
jecxz
outs
imul
push
shr
mov
lahf
mov
xor
jmp
hlt
push
and
imul
adc
xchg
into
or
jl
xchg
xchg
or
xor
ja
iret
popa
cmp
aaa
das
call
stos
pop
repnz
push
sahf
pop
mov
pop
icebp
call
movs
imul
hlt
idiv
je
mov
(bad)
mov
sahf
loope
pop
jmp
sub
push
stos
mov
push
pop
cli
or
out
lods
sbb
mov
lock
or
mul
add
xor
push
ss
(bad)
and
je
mov
mov
sbb
add
pop
sbb
and
fld
hlt
sbb
ja
push
fdivr
cmps
adc
hlt
mov
cmc
ret
fwait
pop
mov
outs
add
popa
lock
pop
xchg
leave
adc
es
outs
ss
ins
shl
arpl
mov
fld
push
das
fst
sbb
mov
shl
je
(bad)
sub
iret
lds
jbe
cs
test
xchg
sbb
mov
cmps
dec
loopne
pop
cmp
push
iret
bound
scas
out
add
push
lock
leave
adc
rcl
jo
mov
clc
pop
faddp
jno
neg
outs
(bad)
inc
(bad)
cmp
retf
jge
add
shl
mov
mov
cmp
add
push
mov
stc
jbe
jge
lds
adc
sbb
popa
mov
xor
jns
int
cwde
icebp
and
push
sbb
and
mov
jecxz
xor
xchg
push
push
pop
lahf
shl
sti
cmp
mov
sbb
in
pop
push
rcl
cmp
push
pop
push
pop
sub
lahf
mov
or
lods
sub
dec
jle
jb
pop
sar
es
clc
push
das
js
mov
dec
mov
std
or
add
dec
xor
inc
and
jo
mov
push
inc
inc
out
ficom
pushf
nop
loope
xor
das
cdq
sbb
pop
adc
dec
loopne
scas
cli
test
xor
out
inc
or
in
jne
adc
aad
scas
and
mov
jge
pop
xchg
cmps
cmp
cmp
ins
add
sar
test
cmp
fstp
fmul
call
jle
ja
out
inc
test
imul
xchg
ds
dec
loop
stos
stos
int3
int3
aaa
stos
xchg
jnp
dec
push
adc
xor
aas
mov
in
mov
std
push
xchg
add
mov
xor
ins
inc
jge
ins
adc
add
inc
aam
lods
mov
push
cli
lods
and
mov
test
popf
std
(bad)
cmc
in
jl
(bad)
lds
je
mov
aad
jo
fdivr
sub
data16
repz
xchg
inc
add
xor
and
xrelease
xchg
call
mov
xor
sbb
inc
sbb
pop
mov
push
int
outs
aam
dec
jmp
in
jo
rcr
pop
mov
mov
jb
mov
fucomi
out
inc
jecxz
fisttp
mov
mov
fld
xchg
mov
mov
das
jno
repnz
xchg
mov
add
cwde
xor
lahf
dec
jo
lea
mov
mov
jmp
dec
xlat
jae
inc
adc
sbb
(bad)
fstp
jecxz
mov
cmp
enter
xchg
stc
cmp
adc
push
test
aas
or
aas
aad
mov
fistp
loop
ret
in
bound
sti
dec
(bad)
shr
std
icebp
ss
cli
outs
sbb
inc
push
mov
test
pop
inc
sub
fwait
clc
in
cmp
mov
dec
mov
fadd
pop
and
sbb
fwait
sbb
int
sbb
or
(bad)
retf
(bad)
out
stc
and
jne
leave
pop
push
adc
leave
iret
xlat
jle
outs
fdiv
xchg
cmc
mov
add
xchg
dec
aam
aas
mov
mov
mov
sub
pop
shr
retf
jo
push
sbb
sbb
arpl
xor
xchg
call
or
imul
mov
dec
ins
ds
cmps
cmc
jmp
enter
imul
and
daa
fdivp
ret
inc
adc
movs
daa
jle
add
add
lods
mov
push
and
shr
iret
imul
int3
pop
mov
inc
xlat
inc
fild
sub
daa
adc
adc
mov
mov
out
pop
retf
inc
mov
shl
and
cli
test
sbb
(bad)
jbe
data16
sub
xchg
imul
fnsave
int
test
test
inc
mov
mov
mov
or
sbb
lods
add
aas
cmp
dec
test
xchg
outs
inc
popa
sub
sub
inc
les
cmp
daa
fsub
(bad)
aad
mov
cmp
retf
pop
sbb
mov
pop
loope
hlt
mov
stos
loopne
cmps
mov
inc
mov
fstp
or
sub
jnp
test
test
xchg
int3
xchg
fs
jae
in
sar
idiv
sti
lods
xchg
dec
push
add
loop
movs
int3
xchg
dec
mov
sub
jne
(bad)
xlat
inc
fisubr
data16
retf
hlt
add
in
cmp
mov
mov
adc
out
mov
out
sub
mov
cmp
inc
xor
int3
push
dec
sahf
adc
lahf
retf
dec
inc
dec
xchg
jmp
mov
dec
xchg
fld
fsub
sbb
repnz
dec
int
loope
mov
ffreep
xchg
in
(bad)
es
inc
mov
pop
out
dec
fild
and
cmps
mov
inc
push
jae
outs
pop
xor
pop
xchg
cs
in
icebp
push
ins
fld
(bad)
out
test
movs
ds
inc
and
mov
dec
jns
jns
mov
(bad)
lds
mov
bound
pop
dec
push
xchg
add
xchg
scas
movs
jnp
jae
js
xor
xor
jge
pop
adc
pop
jle
jne
fcomp
jbe
(bad)
hlt
mov
ins
jae
in
jns
inc
popf
jmp
cmp
adc
aas
je
stos
(bad)
or
fistp
adc
mov
retf
dec
dec
cs
in
xchg
dec
into
mov
gs
add
jge
jo
mov
cmps
sbb
adc
mov
imul
lods
icebp
imul
inc
lods
popf
aad
add
sbb
in
xor
pop
add
and
inc
inc
sub
and
adc
test
and
mov
clc
xor
imul
mov
jmp
jge
push
mov
xchg
retf
sub
mov
fs
fild
sbb
push
icebp
pop
in
push
xchg
imul
popa
sbb
punpckldq
adc
push
inc
int3
shl
mov
(bad)
pop
lds
dec
jle
jnp
lods
je
sbb
nop
push
fwait
mov
mov
iret
leave
out
adc
test
retf
test
lea
icebp
jae
mov
cwde
inc
jns
mov
xchg
neg
pop
fucom
push
mov
out
sbb
hlt
aad
in
pop
or
stos
test
cmp
int3
ds
dec
retf
xchg
or
int3
or
and
pop
jmp
pop
jno
fwait
cmps
dec
dec
bound
xchg
push
xor
pop
push
pop
pop
xchg
outs
ficomp
in
mov
sub
in
enter
in
test
xchg
mov
das
push
rol
gs
(bad)
call
add
or
pop
ds
pop
cmc
into
sub
pop
lods
sbb
bound
inc
xchg
xchg
jb
popa
jbe
xchg
xchg
js
inc
fldcw
pusha
outs
sub
xchg
cwde
addr16
add
or
div
mov
das
sbb
mov
dec
mov
xchg
shl
sbb
loop
enter
or
xchg
push
jne
icebp
ret
sub
mov
pop
jnp
inc
int3
ffree
sub
cdq
ss
mov
cmp
sbb
push
cmp
cs
xor
fisttp
or
push
jmp
xchg
aas
push
sbb
jmp
dec
mov
shl
push
adc
in
mov
sbb
stc
xor
xor
xor
mov
sbb
add
test
sub
push
out
nop
and
push
aad
sbb
jl
mov
das
mov
hlt
inc
mov
jmp
ins
popa
out
das
movs
mov
ja
(bad)
loope
rcr
and
popf
test
jmp
aas
or
or
and
add
xchg
inc
movs
int
ds
sbb
xchg
mov
rcr
ss
mov
xor
mov
push
sbb
xchg
adc
jge
push
ret
sti
loopne
jbe
adc
jns
ins
push
test
test
xchg
(bad)
or
push
dec
mov
add
arpl
fldenv
jmp
hlt
push
test
sbb
mov
ins
in
sbb
jmp
jge
int
ja
and
fisubr
repz
push
xchg
mov
(bad)
loopne
stos
xchg
mov
neg
cmps
add
mov
inc
and
fldln2
push
fcom
cs
cmps
shl
shl
inc
retf
(bad)
mov
or
aas
xor
jmp
sbb
int
push
push
sub
and
push
pop
shr
jb
fnstenv
pop
jo
int3
js
daa
repnz
pop
call
push
xchg
(bad)
cld
mov
jecxz
mov
jnp
cld
call
test
movs
mov
js
xchg
stos
outs
jbe
and
sub
mov
jns
push
cmps
inc
add
aad
loop
or
sbb
or
mov
(bad)
dec
lahf
aam
lods
ucomiss
sbb
ret
loope
xor
leave
(bad)
inc
mov
(bad)
dec
mov
inc
jmp
fsubr
adc
mov
adc
repnz
dec
xor
iret
ins
std
out
adc
pop
xchg
dec
stc
enter
iret
mov
out
sub
not
mov
mov
cld
js
movs
jecxz
xor
fs
imul
int
add
in
or
mov
xchg
fs
mov
fst
xchg
xor
repnz
outs
inc
xor
outs
push
and
cmp
scas
xchg
jno
dec
mov
inc
loop
mov
idiv
push
sbb
loop
(bad)
pop
inc
jmp
std
push
ror
int
mov
fwait
mov
cmp
out
xchg
mov
test
and
out
fistp
xor
cmp
nop
and
scas
xor
lods
mov
xchg
int
in
cmps
nop
mov
push
inc
(bad)
mov
or
in
sub
cdq
enter
xchg
out
mov
xabort
lahf
xor
popa
std
call
les
ror
push
ret
adc
outs
into
mov
cmc
adc
das
xchg
ret
js
jnp
dec
cmp
sbb
push
nop
pop
test
mov
push
mov
aam
outs
or
push
repnz
lahf
test
mov
sub
loope
gs
movs
data16
mov
mov
cs
jp
sahf
inc
je
mov
xchg
jecxz
mov
repz
fcmovu
aas
or
mov
mov
sub
cmp
lahf
ficomp
mov
je
fbld
add
add
mov
in
pop
sub
pop
push
xchg
out
xor
mul
or
sti
or
out
mov
shl
ja
lea
scas
int3
cmp
fwait
leave
nop
inc
xchg
mov
push
adc
mov
and
jb
popf
sub
das
jle
int
aad
jg
jg
fbstp
xchg
sbb
mov
sbb
mov
and
aas
mov
mov
push
xor
cmovb
shl
mov
in
mov
fsubr
or
das
push
and
xor
cmp
fcmovnu
cmp
xor
ins
sub
ins
push
and
cdq
fld
dec
push
fwait
mov
ss
(bad)
arpl
fidivr
push
scas
pmaxsw
push
lods
addr16
adc
dec
ds
dec
(bad)
cmps
sbb
aaa
push
mov
add
jle
test
fwait
not
mov
out
lahf
clc
jne
js
test
clc
cmps
mov
jle
pop
and
add
retw
xchg
adc
aaa
add
and
in
mov
add
dec
push
sbb
dec
repz
pop
xor
sub
aas
mov
adc
mov
dec
push
mov
mov
dec
fcmovnbe
ret
out
jecxz
mov
add
jecxz
push
inc
mov
stos
retf
movs
xchg
jae
leave
inc
jae
xor
test
stc
mov
jbe
fmulp
test
(bad)
iret
add
cmps
sbb
or
inc
scas
cmc
cmp
les
test
push
pop
sub
movs
xor
imul
adc
pop
in
xor
aad
add
jb
add
and
test
cmp
mov
inc
xchg
cmp
sub
or
repz
dec
repz
xchg
invd
fbld
je
dec
jl
arpl
mov
inc
cmc
imul
cmp
dec
mov
dec
xchg
loop
or
jne
and
movs
push
cwde
jnp
adc
cld
push
mov
pop
jmp
sahf
adc
and
mov
fistp
xchg
lea
dec
clc
outs
jp
repnz
push
jnp
and
cmp
push
ffreep
fwait
cld
inc
les
jae
ins
test
mov
cmps
cmp
mov
(bad)
(bad)
cmp
out
out
cdq
jle
(bad)
stos
pushf
add
stos
(bad)
popa
dec
mov
nop
xor
add
sbb
js
jno
int3
popa
std
dec
leave
add
pop
mov
mov
xchg
sbb
jl
std
pushf
xor
cld
and
(bad)
repz
arpl
jnp
jge
jmp
pop
(bad)
rcl
sub
cwde
outs
sub
push
out
xor
inc
daa
pop
cmp
pop
movs
jns
mov
sub
or
or
lods
stos
cmp
mov
xchg
sub
retf
mov
jmp
jae
adc
addr16
cmp
inc
jns
sub
mov
dec
dec
jl
cs
cmp
gs
(bad)
in
mov
cwde
(bad)
rcr
mov
fidiv
out
sub
aaa
cld
xor
pop
and
mov
cdq
mov
and
fptan
xor
popa
pop
pop
aas
cmp
loope
lds
popa
repz
lahf
sub
add
cmp
adc
sbb
sbb
add
sbb
and
jmp
cmc
inc
push
inc
pop
je
adc
cmp
outs
movs
inc
shr
add
push
pop
and
lea
mov
pop
aam
or
scas
jae
lahf
mov
mov
inc
jne
mov
(bad)
pushf
push
arpl
sbb
sub
jle
lds
adc
fistp
shr
sahf
jmp
mov
fisub
push
mov
test
xchg
jns
sti
push
and
and
cmp
and
pop
mov
(bad)
out
ficomp
jb
push
dec
push
stc
lea
mov
xchg
or
xchg
pop
fild
and
push
pop
(bad)
repnz
sbb
clc
inc
mov
sti
adc
sub
mov
xor
fsubr
push
adc
in
dec
cmp
push
lods
mov
inc
sti
aam
push
sbb
pop
cli
fs
pop
retf
sbb
scas
xchg
xlat
loop
outs
push
push
ja
xchg
push
sbb
in
imul
push
dec
push
push
imul
mov
scas
mov
mov
test
int
stos
pop
sbb
inc
pop
ret
clc
mov
lahf
add
pop
sbb
jbe
or
leave
mov
js
into
loop
xchg
push
jl
inc
call
xchg
shr
lods
pop
mov
mov
js
sub
adc
jle
inc
add
out
das
inc
mov
xchg
pop
ds
inc
int
push
xor
push
sbb
xchg
dec
scas
daa
add
ret
call
jno
cmp
xor
shr
sbb
cmp
das
les
ficom
xchg
cwde
lods
adc
scas
lods
mov
inc
sar
mov
mov
xor
fcomp
pop
adc
mov
xchg
bound
neg
push
push
fwait
add
jecxz
call
mov
mov
imul
jle
push
inc
and
shl
retf
and
cmp
pop
cwde
es
retf
nop
fsub
cmp
push
jecxz
cmp
loopne
mov
mov
pop
jns
inc
jmp
rcr
sub
addr16
shl
cdq
pop
push
int
cmc
(bad)
out
mov
pusha
test
aaa
jb
cwde
mov
jno
dec
fs
push
sub
in
lods
inc
pop
int3
(bad)
ins
xchg
cli
loop
ret
mov
sub
lods
xor
pop
rcl
xchg
pusha
inc
imul
scas
or
es
or
js
push
shr
call
pushf
xor
fdiv
mov
mov
pop
popf
cs
inc
or
lods
add
cmps
xlat
movs
or
je
xchg
push
sub
xor
hlt
retf
jl
or
lds
retf
cmps
add
xor
xor
rcr
pop
cmp
jmp
sahf
jge
pop
outs
mov
leave
pop
pop
xchg
aas
scas
(bad)
xchg
mov
pop
xor
pop
call
jle
test
jl
pop
cdq
sbb
je
mov
pop
jo
pop
popf
rcr
mov
int3
mov
fistp
fs
out
rol
jle
sub
(bad)
pop
out
test
push
inc
pop
adc
in
loope
shl
push
or
pop
cmps
mov
fistp
mov
cmp
or
outs
inc
and
inc
outs
stc
jb
call
pop
cmp
sub
mov
(bad)
push
cld
cmp
inc
fiadd
fcomp
ss
mov
cmp
test
aad
in
sbb
aaa
mov
outs
jl
inc
(bad)
cwde
and
movs
jl
adc
fisubr
int3
dec
movups
(bad)
jle
(bad)
jmp
push
jl
out
inc
xchg
adc
ret
inc
mov
cmp
mov
mov
xor
shr
fdivr
rcl
mov
sbb
int
into
test
cli
sbb
jge
and
repnz
and
stos
xchg
dec
inc
lahf
jl
inc
rol
int
dec
push
or
dec
in
out
je
(bad)
repz
pop
add
xchg
scas
xchg
out
mov
lahf
cmps
jmp
pop
and
sbb
stos
adc
imul
adc
outs
cmp
push
jb
fnstcw
cmp
mov
je
out
lea
rcl
inc
mov
xchg
shl
cmp
loope
test
add
mov
pusha
ja
ja
aam
out
test
jp
adc
shr
jp
stos
stc
xlat
fwait
jle
int3
fsub
stos
mov
popf
jb
xor
das
sahf
aam
push
stos
adc
jp
movs
xor
cwde
sub
dec
dec
xchg
pop
(bad)
mov
ins
out
mov
cmc
inc
push
stc
jo
repz
fld
push
jmp
sbb
ins
loope
movs
aad
sar
repz
xor
jmp
scas
retf
cwde
sub
push
dec
jb
or
fwait
cmp
xor
cdq
retf
xor
dec
push
and
and
xchg
movs
add
sub
push
pop
mov
(bad)
cmps
pop
int
fisub
sbb
fmul
lock
int3
jle
mov
jle
sbb
xchg
(bad)
mov
and
icebp
push
dec
psllq
leave
xor
pushf
test
mov
aaa
push
cmp
es
js
repz
jne
or
add
ss
cli
cmp
dec
mov
cmp
xlat
test
jge
loopne
inc
pop
dec
dec
pushf
div
out
jae
mov
jb
xor
iret
(bad)
push
arpl
xor
shl
lods
mov
push
pop
std
mov
pop
mov
std
dec
inc
jo
cmp
inc
adc
aad
and
cs
pop
xchg
bound
std
xor
pop
stos
pop
pop
and
shl
or
cmps
repnz
xor
lahf
inc
xchg
sbb
xchg
std
mov
sbb
lds
sub
jp
shr
sub
xchg
std
retf
hlt
ins
ror
imul
std
data16
push
cmp
mov
into
fucomp
(bad)
ins
inc
arpl
push
mov
push
pop
inc
push
add
fldenv
shr
pop
scas
mov
dec
ficomp
movs
push
iret
push
push
loop
gs
jl
push
pop
and
inc
add
xchg
jbe
push
mov
mov
(bad)
in
jns
mov
je
repz
xor
loop
add
push
cmp
sbb
pop
cmc
outs
dec
fdivr
(bad)
xor
gs
mov
xchg
fsub
addr16
icebp
lds
inc
jne
xchg
loope
add
push
jae
jmp
xchg
(bad)
dec
pop
sbb
and
setns
adc
stos
jae
(bad)
(bad)
ror
test
mov
iret
and
inc
adc
jae
sub
xchg
add
sbb
and
ins
mov
add
push
in
test
jb
cli
push
fs
lds
pop
ins
push
psubsw
mov
in
cmp
das
cwde
mov
jmp
xor
js
enter
es
sahf
xchg
gs
lock
nop
repz
enter
xor
and
sub
stc
pop
xor
jns
push
mov
(bad)
cmc
push
cmp
xchg
adc
jmp
adc
cld
jmp
aaa
inc
jmp
xchg
aad
rcr
inc
das
lea
or
daa
bound
and
xor
jae
push
jne
jns
pop
jp
xchg
ins
xchg
mov
mov
adc
rcl
(bad)
jge
or
mov
pop
movs
xor
pop
push
(bad)
aam
pop
mov
fld
push
fstp
dec
idiv
sub
sar
xchg
xchg
and
or
adc
push
loopne
call
shl
jnp
dec
lods
iret
movs
push
fild
repz
cmp
xor
mov
out
mov
mov
push
jecxz
dec
dec
push
xchg
lods
xchg
js
cmp
ins
sbb
lea
jb
cmp
in
nop
into
out
adc
cmp
mov
not
loope
cmp
ret
sbb
popaw
push
fisttp
stos
jge
leave
dec
nop
and
test
inc
repnz
xor
mov
mov
sub
shl
jp
sbb
fcom
push
add
jbe
cmp
xor
loop
mov
cmps
jno
movs
dec
or
in
jmp
add
test
mov
cmp
(bad)
loop
jmp
mov
(bad)
adc
sub
push
jae
ins
mov
mov
hlt
push
out
cmps
sub
stos
jle
inc
stc
fnop
bound
sbb
call
dec
ds
mov
aaa
loope
pop
lahf
sbb
in
out
int
jle
xchg
mov
push
xchg
loope
data16
pop
push
push
sub
sbb
jmp
aad
pop
jno
pusha
mov
test
or
not
jae
xchg
pop
pop
iret
xchg
lds
cmp
in
jmp
rol
mov
adc
jbe
imul
jb
je
jp
xor
mov
(bad)
cmp
mov
outs
sub
add
jb
cdq
adc
xchg
call
sar
pop
stc
mov
mov
scas
inc
mov
jmp
xchg
push
xor
inc
les
icebp
adc
aaa
and
in
sbb
xchg
inc
xchg
xchg
in
xchg
mov
(bad)
jbe
jbe
sbb
icebp
xor
xchg
stos
cwde
or
push
imul
adc
aas
repz
mov
mov
mov
xlat
ja
mov
and
or
dec
call
mov
mov
dec
xchg
push
mov
jbe
mov
jecxz
test
inc
test
outs
retf
scas
or
inc
mov
add
jle
lock
mov
dec
fistp
cmps
pop
pop
(bad)
sbb
mov
popf
jmp
and
les
cmps
ficom
ror
mov
jmp
sbb
mov
shl
inc
xor
(bad)
push
rol
fild
xor
xor
ret
dec
sahf
xchg
jne
fmul
adc
repnz
cli
jbe
pop
and
mov
repz
out
scas
mov
and
pop
stos
adc
push
sub
add
or
or
fadd
mov
mov
mov
(bad)
push
inc
call
jge
fisub
add
adc
sbb
inc
test
push
pop
push
les
aaa
fild
imul
stos
dec
and
mov
sbb
or
rcr
dec
or
sbb
mov
sbb
mov
push
jbe
sbb
xchg
retf
cmc
gs
mov
mov
sbb
mov
test
cmp
pop
inc
not
into
cli
dec
mov
cld
arpl
or
popa
cmc
jl
sub
inc
imul
xlat
shl
mov
mov
das
jg
out
or
or
push
loop
fwait
aad
(bad)
out
call
cld
das
not
mov
inc
clc
jb
or
mov
loop
aas
test
fucom
jns
test
aam
mov
imul
sub
inc
mov
mov
jb
push
aas
push
xchg
std
inc
push
scas
int
inc
pop
adc
loop
mov
sbb
inc
ja
jo
test
or
ins
push
mov
pop
add
sub
dec
sub
daa
call
cld
cdq
lock
mov
in
in
cmp
sub
mov
mov
std
hlt
sti
aaa
loop
mov
jne
fsubr
iret
(bad)
xor
adc
mov
push
addr16
and
and
shr
outs
adc
(bad)
jg
call
fnsave
adc
push
sbb
and
push
add
loopne
jne
dec
mov
lods
jmp
push
aas
push
push
ret
js
mov
ror
cwde
mov
outs
mov
pushf
push
outs
adc
ror
inc
pop
sbb
xor
mov
adc
out
jnp
out
pop
adc
into
xchg
mov
ret
push
mov
stc
shl
jl
ret
(bad)
nop
mov
jp
pop
sub
push
out
mov
shl
fadd
cld
lahf
and
(bad)
(bad)
xor
test
add
cmp
jbe
jnp
push
push
loope
scas
ror
pop
mov
in
test
out
jno
sbb
push
imul
inc
pop
sar
test
inc
sahf
fwait
or
dec
sti
and
imul
test
loopne
mov
xchg
cmp
push
jecxz
and
stc
repnz
xlat
and
or
sbb
sbb
jecxz
(bad)
and
mov
retf
dec
sub
xor
ds
push
mov
leave
out
or
cli
ror
mov
and
cmp
xchg
cmp
mov
pop
add
rol
not
cmps
mov
je
and
ja
shr
jecxz
cli
out
adc
loopne
ja
bound
jae
je
adc
sub
hlt
nop
inc
iret
cmp
or
sub
push
sahf
loope
inc
pop
adc
retf
jg
sub
out
xor
and
mov
mov
adc
(bad)
pop
clc
and
and
dec
dec
cdq
and
fs
(bad)
adc
jae
cmc
pop
cmps
div
mov
sbb
(bad)
sbb
sbb
fcmovne
neg
(bad)
out
xlat
pop
and
lock
int3
and
out
or
shl
out
(bad)
(bad)
inc
fwait
lds
icebp
movs
mov
jae
or
(bad)
ds
imul
jo
jmp
aaa
sar
stc
rcr
jecxz
out
and
fucomp
mov
mov
test
sbb
in
mov
jmp
lods
test
shl
das
jge
adc
cmps
mov
repnz
inc
mov
pusha
icebp
fild
jmp
sbb
add
(bad)
test
adc
or
in
jl
push
pop
imul
shl
(bad)
pop
pop
and
aas
push
or
and
fisttp
sbb
inc
xor
iret
push
(bad)
dec
and
xchg
pusha
int
ret
outs
cmp
xchg
sub
out
loop
pop
(bad)
mov
pop
jp
xor
dec
or
xchg
push
aas
xchg
push
xchg
in
(bad)
sub
jl
in
aad
push
xchg
nop
jno
mov
je
mov
call
dec
and
sub
adc
out
(bad)
retf
arpl
adc
arpl
pushf
and
pop
push
mov
push
test
inc
jb
dec
cld
add
or
ss
inc
nop
pop
rcr
(bad)
pop
fs
pop
jge
mov
daa
mov
repz
cwde
and
inc
add
xor
push
mov
add
and
rcl
ins
push
stos
dec
jmp
imul
sbb
cwde
mov
inc
mov
adc
mov
dec
int
push
mov
sbb
in
add
test
lds
cld
sub
das
es
mov
movs
shl
int
cmps
mov
seto
shr
add
sub
and
add
pop
ret
in
cmp
cmps
pop
into
lock
enter
xor
sbb
pop
stos
loopne
mov
jo
mov
sbb
xchg
outs
sub
int
jmp
push
lods
das
fstp
sbb
mov
adc
out
jnp
cmp
dec
loop
sub
lods
cld
dec
cli
push
pushf
(bad)
dec
mov
mov
sbb
call
sti
push
(bad)
call
cmp
rep
xor
shl
xchg
js
int3
enter
ins
test
xchg
xchg
imul
mov
imul
sub
or
push
inc
cmps
mov
mov
cli
jbe
and
add
popf
scas
shl
rcl
pop
mov
inc
mov
fisubr
pushf
mov
lock
or
imul
mov
adc
out
das
pop
jne
mov
es
xor
(bad)
daa
xchg
jb
pop
test
js
out
(bad)
mov
fldenv
out
pop
or
jle
pop
ror
mov
and
inc
ins
sub
ret
push
sbb
lds
mov
test
stc
and
inc
xchg
cdq
inc
je
lock
(bad)
adc
ja
sbb
out
inc
pop
es
sub
iret
dec
jo
sbb
(bad)
cmc
(bad)
push
mov
inc
lods
add
push
jl
bound
push
stos
(bad)
pop
jp
xchg
mov
lods
and
rep
jne
xchg
popf
sti
cmp
or
xor
fsubr
into
pop
push
sbb
(bad)
mov
mov
cmp
aaa
rcl
mov
js
mov
sub
and
enter
aaa
sti
rol
in
mov
je
in
fdivr
ins
inc
cld
mov
xchg
sbb
add
mov
pop
push
or
test
sbb
js
mov
nop
or
jl
mov
pop
jnp
jp
dec
inc
jno
xor
jg
popf
in
jb
inc
push
mov
dec
adc
xchg
cmps
(bad)
cmp
mov
xor
cwde
in
loopne
jnp
adc
iret
inc
sub
cmp
arpl
push
mov
add
add
loop
fndisi(8087
mov
in
xor
sbb
mov
jnp
xchg
pop
jg
out
pop
xor
mov
jmp
clc
js
daa
inc
mov
xchg
adc
in
pop
push
cmp
inc
repnz
iret
add
ja
lock
repnz
and
mov
test
retf
xor
mov
movs
je
mov
cmps
cmp
push
mov
jmp
fwait
cld
jecxz
pop
shl
adc
mov
sbb
push
xchg
mov
push
jmp
or
mov
xor
cmp
idiv
icebp
sbb
mov
add
pop
mov
pop
dec
jne
or
jp
shl
push
adc
lock
push
out
imul
sub
pop
neg
cmp
iret
pop
jbe
xchg
jg
or
add
dec
ficomp
es
mov
push
adc
or
icebp
xor
adc
(bad)
add
push
mov
test
(bad)
in
xchg
jecxz
xor
test
mov
dec
pop
shl
xor
fadd
push
cmp
sahf
out
call
dec
cmc
push
mov
mov
stos
sbb
inc
pop
jp
push
sti
add
iret
push
xor
cmp
mov
mov
in
pop
cld
pop
dec
push
dec
sub
shl
aaa
push
or
in
add
inc
lahf
dec
ins
loope
jle
ret
das
mov
enter
jbe
sub
dec
out
or
jmp
jns
push
push
jecxz
pop
out
and
call
pusha
fist
(bad)
dec
std
jl
cli
lods
xor
push
(bad)
sub
fsub
je
ja
lods
mov
jg
jb
cld
leave
in
jne
add
xlat
aaa
dec
fistp
jmp
mov
sub
and
jg
mov
jl
sub
mov
pusha
jno
push
add
pop
test
sub
fcom
mov
mov
adc
xchg
or
call
outs
je
in
pop
in
fistp
jne
ins
and
jb
loope
hlt
and
fucomi
dec
shl
fld
push
fsubrp
sahf
push
jmp
rcl
xor
mov
push
test
inc
jmp
push
add
outs
push
pop
and
aas
ror
adc
std
adc
mov
push
cmp
and
jle
loop
or
fs
push
xchg
je
test
jns
adc
and
mov
and
stc
jne
fisubr
movs
pop
add
lods
pop
adc
stc
psubb
mov
add
jno
ins
mov
out
add
ja
jns
frstor
jecxz
mov
mov
out
lods
ss
add
stos
rcr
retf
data16
(bad)
call
inc
scas
repnz
pop
std
xor
sub
sahf
pushf
outs
movs
and
nop
stos
das
cmp
jmp
pop
mov
pop
aad
sub
leave
pusha
fist
mov
xchg
dec
dec
jnp
mov
mov
out
rol
or
pop
fild
iret
(bad)
cs
cmps
mov
push
mov
jle
call
daa
fld
lea
ins
jmp
fidivr
mov
xchg
cmp
sub
daa
push
loop
imul
and
ret
or
scas
mov
push
popa
xor
mov
movs
dec
ret
lea
cmp
into
pop
and
cmp
fcom
lods
mov
adc
xlat
sbb
jne
push
nop
mov
inc
mov
sub
and
aaa
push
push
and
xor
mov
test
ror
inc
jb
hlt
or
mov
movs
cld
xchg
jmp
jp
xor
sbb
lods
dec
pop
mov
js
inc
fs
sbb
lods
pop
out
sub
and
outs
mov
mov
jnp
push
xchg
scas
das
lods
std
pop
mov
ret
push
or
rol
shl
mov
and
loopne
jle
inc
out
inc
ins
in
clc
les
jp
call
push
sbb
hlt
(bad)
and
cmc
lahf
jbe
(bad)
out
stos
cmp
inc
and
fstp
retf
jecxz
dec
sbb
inc
repnz
jmp
dec
rcl
scas
out
mov
pop
or
aaa
ss
icebp
addr16
inc
mov
loop
or
fimul
cmps
push
inc
mov
and
fdivr
push
xor
popf
xchg
int3
cs
test
mov
cs
sbb
jmp
pop
bound
fnstcw
push
mov
lahf
mov
js
lock
push
test
adc
into
sub
jb
and
xor
dec
mov
xor
mov
sub
push
ret
loop
or
mov
ret
scas
loopne
(bad)
sub
sbb
adc
xor
outs
xor
mov
out
inc
retf
ds
sbb
xlat
out
call
inc
xchg
and
ins
jecxz
test
out
lock
lahf
ss
adc
xlat
inc
dec
adc
popa
xchg
(bad)
out
jnp
lods
add
mov
sbb
and
inc
call
outs
inc
cld
jmp
out
cdq
pop
adc
inc
inc
pop
pop
push
push
cmc
sbb
jle
push
and
in
cmp
sbb
dec
pop
adc
mov
adc
push
sti
shl
or
jmp
fnstenv
sti
jne
rol
add
in
mov
sar
xor
xchg
or
movs
cmp
cmp
dec
sub
into
xchg
sbb
outs
js
or
js
add
jae
movs
or
mov
mov
loop
and
popa
or
mov
rcl
inc
mov
xchg
mov
adc
popf
xor
push
push
push
je
mov
mov
xor
movs
mov
pop
mov
mov
add
mov
jmp
ja
xchg
movs
sub
cld
lea
ss
sar
push
leave
das
inc
out
or
mov
ret
frstor
outs
sbb
loope
sbb
mov
shr
cdq
inc
jbe
ja
mov
push
nop
fdivr
cld
fiadd
push
(bad)
lea
jg
or
or
in
or
(bad)
push
push
pop
aas
ror
in
or
cmp
mov
ror
std
mov
daa
push
jnp
shl
bound
nop
and
sete
out
out
les
rcr
adc
lods
dec
add
mov
push
sub
mov
push
repz
ins
test
retf
mov
cmp
cmp
repz
call
jmp
lock
dec
add
cmp
inc
aad
mov
in
sbb
pusha
dec
clc
and
int
in
es
sar
cmp
int
pop
std
mov
pop
add
jne
loopne
cwde
mov
fstp
jmp
pop
call
es
fincstp
and
out
push
les
jns
cwde
adc
pop
lock
(bad)
jl
test
jle
outs
jnp
clc
fst
push
and
ret
mov
fptan
cmps
mov
bound
sbb
adc
(bad)
cdq
imul
and
ds
jno
xor
aaa
test
sar
cmp
call
out
jmp
mov
jns
adc
nop
lods
dec
sub
aas
es
dec
les
rcr
add
push
mov
cmc
retf
nop
(bad)
cld
jno
sub
ret
retf
pop
sub
xchg
cld
pop
mov
push
add
jmp
sub
inc
mov
push
ins
scas
fmul
xor
dec
mov
aad
xor
and
pop
push
adc
mov
mov
cdq
mov
out
inc
mov
jno
movs
dec
in
cli
sti
sub
pop
dec
mov
cs
loop
pushf
adc
xchg
and
cmp
pop
imul
repnz
in
mov
and
mov
inc
aas
int
mov
dec
in
in
inc
les
xor
int3
enter
xchg
sub
add
sbb
jl
inc
imul
ror
mov
movs
mov
xor
int
aad
sbb
scas
jno
adc
call
adc
pop
xchg
jle
pop
mov
fidivr
mov
mov
mov
mov
rcl
and
pop
sbb
cmp
and
adc
js
cdq
pusha
xchg
scas
shl
in
loopne
inc
xchg
retf
xor
ror
(bad)
out
or
fstp
and
or
inc
push
or
loopne
dec
mov
imul
mov
mov
pop
push
inc
dec
fiadd
mov
cmp
sbb
(bad)
outs
xchg
xlat
push
inc
cmp
mov
in
mov
out
icebp
sbb
jmp
jo
pop
stos
aaa
xor
aad
aaa
xchg
fwait
out
sub
inc
inc
adc
and
jmp
jp
idiv
popf
ficomp
fldenv
xchg
shr
pusha
adc
leave
mov
in
add
stc
sub
cmp
sub
adc
cwde
mov
mov
push
xlat
adc
data16
cmova
jbe
add
jmp
xchg
add
sbb
pop
dec
cmp
ss
sub
dec
(bad)
mov
or
shr
mov
jecxz
stc
daa
mov
popf
jbe
(bad)
test
push
pop
inc
outs
xor
xchg
in
jecxz
rol
and
mov
mov
call
(bad)
jmp
dec
mov
add
and
imul
sub
inc
loop
into
jbe
ret
aas
in
fnstenv
pop
xchg
and
in
sbb
xor
and
push
fcomp
sti
push
std
jne
ins
cmps
or
jne
(bad)
xor
(bad)
pop
push
mov
mov
sbb
mov
pop
jb
sub
xchg
test
jmp
inc
dec
sub
sub
stos
aas
pop
iret
enter
movs
(bad)
(bad)
ins
cmps
lahf
loopne
imul
(bad)
clc
jl
repz
cmp
xchg
sub
push
cmp
xor
xor
rcl
pop
mov
lods
aas
sahf
in
nop
sub
mov
mov
js
iret
sti
fs
rcl
jbe
adc
jge
sub
lods
inc
in
jae
adc
and
add
mov
into
rol
mov
ficom
clc
push
stc
adc
cmc
inc
clc
or
push
in
sahf
mul
repz
inc
and
(bad)
out
inc
ds
iret
or
loopne
push
push
mov
dec
call
sbb
daa
in
(bad)
mov
ror
retf
ficomp
fidiv
das
aaa
pushf
pop
in
test
aad
mov
and
or
push
and
ret
dec
iret
push
and
mov
mov
or
or
aas
xor
mov
sbb
adc
inc
jl
pop
cmp
mov
and
lea
rcl
xchg
cmp
push
fmul
shl
ja
sub
out
xchg
in
lods
ror
dec
sbb
jb
mov
mov
outs
mov
bswap
inc
lds
sbb
out
jmp
icebp
(bad)
aaa
and
add
inc
xor
je
mov
inc
pop
inc
inc
add
mov
ins
fsubp
pop
jne
aad
pop
dec
lahf
jo
sbb
mov
inc
pop
arpl
jg
cmp
add
fidivr
sub
pop
push
jmp
jae
pop
pop
arpl
lods
xor
inc
outs
out
lock
enter
inc
loop
push
ret
mov
int
cli
call
ins
shr
repz
gs
pop
fimul
imul
les
das
jmp
into
mul
nop
sub
push
popf
(bad)
in
leave
push
xor
or
cs
repz
fisub
pushf
in
xlat
dec
or
mov
repz
repnz
leave
and
adc
jmp
adc
pop
pop
rcl
mov
les
sub
repz
retf
aad
stos
mov
fnsave
(bad)
(bad)
rcr
mov
pusha
fcomp
mov
push
test
stos
xor
jno
test
fwait
dec
scas
cmp
rcl
mov
xlat
dec
aad
dec
cmp
pop
xor
ds
adc
dec
ror
push
mov
pop
cmps
sub
mov
cmp
or
pop
ror
retf
aas
and
add
xchg
lods
mov
mov
cmp
ror
mov
mov
lods
push
outs
dec
mov
dec
mov
add
xor
xor
rcl
or
shl
pop
nop
cli
xchg
test
in
xor
lods
fs
stc
lods
test
(bad)
loopne
xor
or
cmp
xor
pop
push
(bad)
ja
out
mov
stos
pop
cmps
push
ror
mov
and
or
jo
push
cdq
pop
jp
lea
test
js
lahf
jbe
adc
sub
and
sub
cdq
(bad)
xor
mov
and
out
cmp
das
cmp
sti
out
dec
sbb
xchg
test
bound
cli
jg
test
movs
fisttp
mov
fmul
jne
test
mov
int3
mov
inc
mov
arpl
xor
test
push
(bad)
add
cmp
add
aad
cmp
xchg
sub
mov
jnp
es
adc
dec
fnstenv
jb
cli
xchg
sbb
fld
fsub
mov
add
sub
test
xchg
lea
xor
call
add
and
push
adc
jmp
inc
add
dec
out
mov
stc
imul
int3
xor
mov
popf
sbb
repz
dec
mov
add
out
inc
mov
stos
iret
pusha
inc
lods
test
xlat
lea
addr16
stc
rcl
pusha
jp
fdivr
push
int
mov
push
mov
mov
dec
jmp
adc
push
in
es
repnz
int
jb
and
aaa
xor
jmp
test
jle
add
outs
fnstenv
mov
and
gs
sbb
int
mov
rcl
mov
jge
pop
bound
add
leave
dec
cli
call
neg
sub
jp
test
pop
(bad)
(bad)
sbb
pushf
call
jo
(bad)
dec
call
fidivr
leave
retf
test
pop
sub
lds
repnz
and
loope
push
and
jmp
pushf
(bad)
rol
add
or
in
xchg
add
add
inc
mov
mov
mov
rcl
test
sub
mov
jle
mov
inc
mov
push
fstp
mov
outs
or
dec
inc
dec
or
lods
addr16
xchg
dec
mov
mov
cmp
fnstsw
sbb
sbb
popa
xor
(bad)
xor
jl
or
pushf
cld
mov
out
inc
les
(bad)
js
inc
pusha
xor
jmp
dec
cmp
sub
adc
jecxz
inc
mov
push
or
popa
rep
push
push
push
push
aad
or
sahf
ja
push
jo
dec
leave
mov
in
or
or
repnz
pop
mov
jmp
xor
test
push
aaa
add
add
sbb
dec
jo
cmp
out
inc
lods
(bad)
sbb
inc
jo
into
repnz
dec
sub
mov
sub
sub
ficomp
clc
call
ds
push
mov
inc
push
(bad)
aam
cmp
xchg
xchg
(bad)
push
loop
mov
sbb
in
in
xchg
ins
in
jae
add
add
dec
mov
inc
xor
xor
out
dec
xchg
movs
fwait
dec
add
lea
adc
cli
in
lods
and
fstp
clc
stos
mov
sbb
push
in
nop
push
lods
sbb
adc
xchg
arpl
adc
mov
push
enter
sbb
cld
add
push
push
jp
push
dec
jo
lods
in
ret
retf
lea
fidiv
std
inc
das
and
mov
loopne
push
push
or
adc
sahf
fist
push
push
or
not
xor
test
inc
out
dec
sbb
out
aaa
pop
fimul
(bad)
sti
pop
push
dec
jp
ins
mov
inc
ret
or
jns
call
xchg
push
outs
int3
pusha
cmc
jge
ins
sti
rol
pop
adc
xchg
mov
xor
jecxz
adc
mov
test
js
jb
xchg
cwde
movs
(bad)
pop
pop
enter
addr16
jp
push
lds
pop
cmp
into
sbb
pop
arpl
scas
push
cmp
cs
jnp
mov
adc
iret
ret
adc
dec
inc
jno
test
xlat
sub
js
scas
mov
mov
xlat
inc
sbb
(bad)
in
loopne
push
inc
mov
push
push
xor
cmp
ss
xchg
pop
test
and
in
fs
pop
jmp
pop
xchg
cmp
nop
jns
push
(bad)
shl
pop
mov
and
inc
fsub
xlat
cmp
pop
test
adc
in
cmp
mov
iret
movs
arpl
int3
xor
ins
lods
sub
and
imul
(bad)
fstp
or
ss
add
jl
data16
inc
inc
or
sub
pop
mov
jno
push
retf
pop
xor
scas
pop
and
sbb
shl
sbb
cs
loopne
lds
pop
cld
popa
cdq
pop
sbb
and
push
mov
popf
(bad)
jmp
aad
mov
cmp
cmp
sbb
lahf
in
in
in
xlat
aam
int3
adc
fmul
imul
inc
call
(bad)
add
adc
xchg
hlt
pop
xor
jo
jo
test
fistp
mov
pop
shr
xlat
xchg
push
leave
mov
adc
sar
mov
mov
add
mov
sub
sub
sbb
xchg
stos
fistp
add
icebp
ret
jne
daa
into
aas
xchg
inc
lock
rcr
push
inc
jmp
fwait
or
and
repnz
out
push
xor
add
sub
(bad)
test
sar
ret
jae
mov
push
and
fcom
mov
(bad)
cmp
add
int
repz
xchg
cwde
out
dec
fistp
sbb
sub
jnp
sub
out
cs
ss
sbb
hlt
pop
out
cmp
and
in
or
pop
mov
call
jge
sub
repnz
icebp
jmp
outs
loope
and
add
jbe
stos
fwait
inc
out
inc
jns
dec
outs
sbb
in
jne
jge
out
nop
sub
mov
push
pusha
cdq
pop
and
xor
jmp
sbb
sub
mov
mov
js
test
ret
pop
in
stc
jbe
mov
mov
jo
rcl
mov
mov
(bad)
xor
inc
fistp
icebp
push
popf
inc
add
aas
sub
je
out
xchg
xor
out
add
mov
fwait
movs
jg
mov
mov
push
xor
test
cs
cmp
inc
push
jmp
dec
rcr
out
pop
pop
mov
push
ror
xchg
repnz
pop
xor
mov
push
ds
stos
jno
pop
adc
mov
xchg
outs
fstp
test
xchg
inc
pop
dec
inc
dec
pop
retf
inc
pop
pop
(bad)
fcmove
inc
pop
sub
pop
cmc
mov
loop
int
ins
or
sbb
not
(bad)
add
repz
push
inc
mov
xor
daa
xchg
dec
and
jns
fsubr
dec
xchg
pop
sub
aad
pushf
dec
push
lods
adc
sbb
add
out
sub
lea
push
mov
cmc
dec
sub
push
xchg
dec
les
mov
cmp
cmp
sub
cli
xor
hlt
dec
repz
inc
jnp
push
adc
into
mov
sbb
inc
pop
icebp
mov
dec
cdq
imul
in
push
cmp
gs
pop
cmp
jb
mov
(bad)
imul
dec
outs
dec
movs
in
jo
mov
lods
fistp
xor
cmp
dec
aam
sbb
jle
add
mov
sahf
dec
dec
outs
pop
out
aas
imul
(bad)
shl
ret
mov
and
out
dec
adc
pop
mov
daa
add
ret
or
stos
push
push
test
movs
mov
xor
clc
shl
jp
inc
pop
fsub
repz
xchg
into
outs
xchg
test
push
inc
jnp
addr16
xchg
lahf
inc
pop
std
cld
fdivr
inc
inc
ret
loop
scas
mov
sub
hlt
mov
movs
aad
push
dec
mov
cs
fisttp
lock
sahf
call
sub
mov
dec
adc
fdivr
pop
(bad)
daa
xlat
std
lds
outs
not
cmc
scas
call
pop
into
cmp
jmp
or
adc
outs
leave
repz
rcr
dec
das
mov
call
(bad)
imul
dec
rcr
xchg
jns
xor
xor
and
retf
lods
mov
inc
in
cld
popa
xor
dec
adc
jmp
xchg
fmul
adc
arpl
mov
cmp
mov
or
adc
xchg
stos
repz
out
dec
scas
call
movs
cs
outs
mov
mov
out
rol
mov
xchg
ror
outs
fdiv
inc
inc
push
out
or
loope
fisubr
push
pop
in
aad
add
push
pop
(bad)
jmp
mov
push
in
jnp
add
pop
gs
cmps
and
sar
imul
sub
lock
mov
inc
pop
or
and
add
(bad)
fadd
clc
imul
(bad)
pop
(bad)
pop
mov
or
mov
xchg
int
stos
(bad)
pop
adc
test
test
in
or
int3
sar
inc
ss
jns
(bad)
xor
sub
cmp
icebp
dec
cli
loop
outs
dec
loop
inc
fs
sub
push
sbb
mov
cmp
lods
aad
xor
(bad)
pop
inc
enter
retf
mov
mov
sub
inc
out
cli
xchg
(bad)
mov
ds
adc
add
xchg
or
mov
add
or
rol
test
xor
inc
dec
sbb
mov
cmp
repnz
cwde
ret
jle
cmp
lods
push
data16
mov
std
sbb
sbb
scas
(bad)
outs
pop
shr
lahf
dec
imul
ins
push
arpl
clc
test
pop
movs
adc
mov
add
aam
leave
lds
es
mov
out
push
or
adc
jne
push
loop
mov
sbb
sub
call
loop
sub
and
js
sti
movs
or
call
push
mov
(bad)
jmp
rcl
and
pop
pop
iret
or
and
sub
daa
mov
clc
retf
in
and
aaa
pop
mov
xchg
or
es
hlt
cdq
sub
std
sub
jno
cmps
or
jae
add
and
and
xchg
sub
add
cld
cdq
xchg
mov
fs
mov
sbb
xlat
(bad)
bound
dec
or
mov
xchg
jns
dec
ret
xor
jmp
jg
test
push
jmp
cmp
int3
retf
add
jmp
push
hlt
sahf
fsub
add
data16
repnz
ins
ins
aad
mov
xor
cmp
fdivr
ret
dec
popf
or
mov
hlt
popf
hlt
push
or
sub
dec
popa
retf
nop
pop
and
lds
hlt
jb
mov
push
inc
aad
cmps
hlt
mov
popa
push
jns
mov
mov
adc
dec
iret
jnp
and
push
hlt
lods
mov
adc
loopne
rcr
ret
inc
cmp
push
scas
mov
mov
stos
ror
arpl
repz
sti
xor
and
or
fst
fistp
jne
mov
mov
fist
push
outs
jbe
test
dec
ret
sub
fidiv
sbb
int
(bad)
in
push
into
xchg
pop
scas
adc
sub
outs
clc
in
ret
aaa
test
mov
xlat
add
mov
mov
jne
test
xor
xor
fistp
mov
xor
cmp
retf
or
imul
ins
push
dec
inc
adc
movs
ret
fiadd
lds
sti
pop
pop
scas
into
or
pop
aas
jnp
or
sar
fld
sbb
fist
mov
adc
test
arpl
jo
pop
add
pop
inc
call
in
push
sub
jg
push
cdq
inc
mov
mov
mov
sbb
(bad)
clc
das
out
test
sahf
jmp
arpl
fsub
adc
loopne
jmp
shl
cdq
adc
xchg
js
std
mov
mov
or
add
ins
cmp
push
cmp
jecxz
movs
jo
sti
push
rcl
xor
das
cmp
sub
das
dec
pop
sub
and
mov
int3
cld
mov
mov
dec
mov
pusha
sub
stos
or
cmp
jmp
test
jno
cli
scas
ret
inc
movs
mov
shl
jmp
pop
dec
adc
sbb
jmp
jl
rdpmc
xor
adc
icebp
loope
scas
xor
shl
jns
jle
ret
clc
int3
mov
pop
repz
adc
scas
out
and
lods
jge
sub
inc
fsub
fnstsw
push
or
leave
adc
fbld
push
lea
loopne
mov
mov
retf
push
xchg
out
cmps
push
push
retf
out
pop
ins
inc
inc
push
mov
(bad)
sbb
imul
dec
sub
cmp
xor
jge
or
sbb
xor
nop
outs
push
das
loope
stos
lock
fst
sahf
(bad)
lea
jmp
test
mov
aam
pop
ret
popa
scas
xchg
mov
add
mov
cmp
sahf
les
ss
jle
sti
cs
push
arpl
adc
mov
out
add
shl
daa
and
mov
xlat
mov
or
inc
push
(bad)
mov
mov
push
lahf
call
push
std
cld
mov
lds
jp
fs
jmp
daa
mov
cmp
mov
xchg
xor
popa
mov
push
mov
push
movs
mov
cmps
ins
test
or
push
mov
xchg
push
inc
mov
(bad)
(bad)
push
adc
(bad)
mov
mov
rcr
adc
jl
xor
popf
xchg
dec
push
pop
popf
popa
mov
xor
clc
cmp
xor
sbb
popa
ins
loop
mov
or
(bad)
jl
pop
scas
cld
mov
cmp
jae
adc
or
out
in
repnz
aad
xchg
xor
call
dec
call
(bad)
(bad)
rcr
lods
gs
jl
les
movs
mov
pushf
std
or
jno
jns
dec
das
cmp
or
es
gs
push
dec
mov
push
mov
and
clc
fadd
(bad)
arpl
jb
jae
xchg
mov
xchg
push
xchg
not
mov
xchg
jl
pop
inc
push
jecxz
inc
cmps
cmc
movs
push
mov
in
(bad)
into
cwde
(bad)
xor
xchg
(bad)
xchg
addr16
inc
push
jle
cmp
in
xchg
cmp
sub
inc
xchg
or
ins
mov
xlat
jmp
lahf
mov
retf
inc
add
add
das
sub
(bad)
mov
not
push
out
xchg
out
sub
or
dec
fld
lods
js
mov
popf
aaa
sub
int3
cmp
push
aaa
shl
xor
xchg
xchg
popf
sub
aad
jb
xor
xchg
jb
gs
lahf
add
sub
clc
pop
xchg
test
jg
push
sar
outs
inc
adc
ja
sbb
mov
xor
xchg
shl
sbb
dec
popf
or
je
in
in
mov
sub
mov
or
ss
push
push
dec
loop
fdiv
aaa
popf
jl
aam
cmc
sub
int
iretw
add
push
inc
sti
imul
stc
test
mov
inc
pop
mov
call
jae
lahf
ja
popf
jge
je
or
mov
bound
inc
xor
dec
and
pop
pop
(bad)
pusha
scas
sbb
xchg
imul
or
das
call
adc
retf
clc
fs
mul
mov
aad
(bad)
and
in
cmc
rcl
cmc
in
ins
push
int
jmp
mul
cmp
sti
imul
inc
xchg
sub
iret
sbb
pmulhw
or
sti
ret
push
aas
adc
mov
push
sbb
xchg
out
push
in
add
(bad)
in
ds
mov
(bad)
cdq
xor
fdivr
cmp
adc
mov
test
xchg
jmp
inc
mov
xchg
and
cmp
jne
sub
push
push
mov
xchg
shl
xor
cmc
ja
sbb
inc
pop
xchg
fdiv
inc
out
in
xchg
jns
mov
arpl
sti
aam
(bad)
test
jmp
int
aas
cmp
push
or
cli
mov
sbb
out
pop
pop
les
dec
stos
xor
das
sbb
push
in
inc
xchg
xor
enter
and
xchg
test
dec
adc
lods
pop
gs
jns
xchg
xchg
cdq
rcr
adc
ret
mov
jmp
mov
shr
push
int
jl
jbe
in
(bad)
imul
sahf
push
je
cmp
add
in
jae
ret
jbe
imul
add
push
adc
sub
jo
xor
into
mov
test
addr16
(bad)
sbb
mov
xor
xchg
mov
dec
jae
mov
arpl
mov
lock
imul
xchg
imul
movs
in
cmp
fnstcw
shl
clc
gs
xor
or
mov
cmps
push
icebp
xchg
fdiv
adc
scas
div
and
inc
stos
(bad)
rol
inc
mov
sbb
xor
cmp
inc
scas
adc
pop
push
jmp
inc
ds
mov
pop
iret
pushf
sbb
pusha
jbe
rol
arpl
fldcw
sar
jne
pusha
std
loope
push
ror
jb
jge
aam
cdq
adc
or
push
jbe
(bad)
xchg
enter
out
pusha
loope
or
xor
inc
sar
ins
pushf
out
and
xor
mov
fdivrp
jbe
push
sub
call
pop
xor
popa
mov
enter
ficom
or
popf
push
jge
shr
jns
cmp
je
adc
mov
arpl
dec
aaa
stc
(bad)
xchg
inc
mov
cmp
dec
bound
xchg
push
and
adc
les
aam
mov
vcvtdq2pd
lods
out
test
cmp
(bad)
sub
push
mov
jecxz
sbb
cdq
mov
rol
mov
push
les
add
cmp
sbb
or
in
(bad)
nop
ror
test
shl
daa
iret
aas
ins
sbb
push
test
pop
and
ds
mov
jl
dec
ret
retf
aad
jb
dec
jmp
mov
outs
xchg
sahf
retf
jle
mov
pusha
stc
add
gs
ss
fisub
hlt
fsubrp
adc
into
retf
sbb
je
mov
push
push
xor
inc
cmp
inc
xchg
and
ret
add
mov
mov
sub
dec
arpl
inc
leave
mov
in
pop
mov
shl
xchg
(bad)
int3
cmp
in
sbb
or
sub
lods
fild
inc
pushf
push
dec
adc
adc
std
pop
mov
push
cmps
fidivr
movs
cld
inc
call
jmp
pop
repnz
mov
xor
push
add
(bad)
es
sbb
fistp
add
adc
jne
mov
cmps
out
lds
sub
pop
in
scas
rcl
mov
nop
adc
ret
jge
xor
sbb
lds
fadd
add
addr16
xlat
lahf
pop
and
in
mov
jg
sbb
fild
xchg
cmp
sbb
cmps
and
aam
int3
es
add
or
cmp
mov
dec
push
stc
cdq
jbe
fst
in
sar
dec
ins
inc
mov
mov
dec
jne
fnstcw
(bad)
daa
cmp
leave
inc
cmp
ins
and
daa
cs
inc
cwde
xor
test
mov
stos
daa
or
call
mov
xor
movs
ds
mov
mov
test
int3
ficom
outs
int3
xchg
xor
imul
adc
sub
sub
pop
adc
test
xchg
mov
push
adc
sar
lock
adc
rcl
fs
mov
cs
sbb
xor
cwde
xor
(bad)
fidivr
loope
bound
add
pop
test
idiv
xchg
jmp
cmp
inc
and
nop
jae
mov
xor
mov
rcl
and
adc
stos
cmp
les
popa
mov
cmps
lahf
xor
pop
nop
in
mov
pop
out
push
inc
sub
mov
daa
dec
mov
dec
add
addr16
jmp
das
push
jo
xor
mov
lfs
gs
test
fs
and
fdiv
jl
push
clc
pop
jp
jl
dec
xor
dec
in
addr16
jmp
les
cmps
jecxz
push
enter
adc
idiv
rcr
sahf
aam
ss
mov
mov
xor
ins
dec
(bad)
outs
sub
aad
jl
fisttp
(bad)
pop
out
pop
sbb
lock
add
ret
sub
sbb
ror
aad
in
dec
dec
hlt
mov
sub
dec
xchg
jae
push
push
push
aas
call
pop
cmps
cwde
mov
fiadd
cwde
fnstsw
adc
pop
cli
or
push
jl
ins
out
movs
push
xor
mov
and
mov
mov
mov
inc
les
mov
vmovups
jmp
loop
cmp
icebp
dec
mov
mov
dec
and
jnp
add
add
jae
jo
addr16
and
jmp
pop
(bad)
aad
ins
jmp
mov
(bad)
fcomp
es
adc
test
xchg
adc
adc
adc
retf
scas
js
jne
dec
mov
sbb
pop
outs
cmp
push
dec
inc
das
sub
in
dec
sahf
xchg
(bad)
fist
lods
pop
jbe
cmp
out
popa
lock
cmp
jb
ror
mov
cmps
xchg
aam
je
mov
sub
lea
fldcw
in
sar
call
pusha
clc
std
fldcw
neg
mov
jo
retf
lods
push
cmps
fsub
mov
pushf
dec
das
adc
daa
or
(bad)
pop
cmp
push
xor
ret
mov
mov
and
inc
mov
cdq
cmp
inc
icebp
fadd
cmp
mov
push
loope
mov
sub
mov
ficom
(bad)
fcomp
xchg
int
lods
push
mov
test
push
popf
adc
lahf
fucomp
inc
les
int3
fbld
loope
add
fucomp
mov
int
out
je
js
(bad)
dec
xchg
pop
push
test
(bad)
shr
mov
cmp
xchg
loope
es
mov
sbb
xor
jbe
fucom
pop
test
lods
mov
cmps
in
aam
(bad)
mov
adc
int
imul
mov
jmp
xchg
sub
lock
and
lods
daa
in
and
in
sub
cmp
add
jb
jg
sub
(bad)
pop
sbb
push
hlt
adc
lods
sbb
popa
push
ss
scas
dec
jp
pop
cmc
mov
pop
cs
cwde
adc
mov
lods
call
cwde
aam
clc
lock
cmps
(bad)
mov
jmp
pushf
scas
movs
pop
sbb
shl
pushf
inc
test
pop
or
or
int3
adc
pushf
scas
out
shr
cld
xor
cmp
cmp
or
in
xor
dec
cwde
jmp
mov
retf
outs
movs
mov
xchg
jnp
mov
mov
nop
jle
iret
mov
lods
scas
push
sbb
in
jle
test
out
xor
and
jmp
sub
sbb
xchg
imul
movs
xchg
cwde
jg
xchg
outs
cmp
rcr
xbegin
pusha
sbb
ss
dec
(bad)
retf
pop
dec
pop
int
adc
nop
test
(bad)
dec
jb
jmp
ror
bound
xchg
jbe
sbb
cmc
ror
dec
xor
hlt
lods
cmps
inc
ds
or
enter
jbe
cld
push
popf
push
mov
pop
into
loop
push
shl
pop
push
ret
test
lods
dec
pop
(bad)
lock
clc
pop
xchg
xor
das
ins
pop
push
dec
fwait
mul
js
sub
hlt
lahf
sar
jno
cmc
js
sub
movs
out
in
lods
adc
int
scas
fist
cmp
ins
push
ins
pop
or
sbb
and
in
inc
sbb
adc
in
shl
and
mov
xchg
std
test
pushf
cmps
je
jg
dec
inc
inc
mov
(bad)
sahf
push
jmp
jbe
in
into
pop
cli
xchg
push
(bad)
test
sub
(bad)
or
(bad)
jae
in
(bad)
imul
ret
xchg
lods
test
lds
rcl
shl
inc
jg
xor
cmps
mov
sbb
pop
or
jns
pop
fsubrp
test
xchg
sub
adc
int
mov
(bad)
sbb
mov
mov
push
mov
sbb
loopne
sti
xor
cmps
bound
scas
sub
cmp
adc
adc
xchg
icebp
repz
mov
cld
mov
mov
sub
sti
or
pop
cmp
mov
test
or
(bad)
cmp
cmps
pop
lahf
stos
adc
or
(bad)
cmp
mov
pop
test
inc
loope
cwde
aam
lock
add
adc
xor
test
xchg
test
xchg
int
push
xor
sub
xor
and
pop
inc
cmp
loope
xchg
test
dec
add
or
int3
mov
outs
inc
mov
mov
push
fild
icebp
push
sub
dec
lds
sub
push
mov
ins
adc
mov
call
push
adc
mov
cmp
pop
mov
ss
pop
retf
es
cmp
iret
in
cmp
mov
jecxz
scas
mov
cwde
arpl
pushf
push
xchg
mov
mov
inc
movzx
int3
shr
mov
cwde
rcl
xor
ret
or
icebp
into
and
xchg
or
push
sbb
pop
inc
pop
adc
push
nop
fcom
xchg
push
not
in
leave
mov
and
inc
fcomp
xor
rcl
das
push
mov
mov
push
pop
xor
adc
pop
push
scas
and
loope
push
in
mov
inc
movs
ds
call
into
pop
sbb
push
dec
pop
test
dec
inc
push
push
mov
push
push
test
in
bswap
pop
or
sahf
mov
(bad)
shl
aaa
xchg
ins
pmullw
(bad)
stos
stos
movs
mov
outs
cmp
pop
jge
push
push
int3
add
int3
stos
sub
test
adc
pusha
jecxz
xor
cmp
js
xlat
aas
jp
pushf
sub
mov
push
aam
ror
nop
jns
dec
sbb
or
add
sahf
push
mov
(bad)
retf
aaa
push
and
mov
or
enter
test
mov
xchg
icebp
jg
push
cmp
cld
inc
cwde
cdq
into
fstp
imul
fidivr
xor
push
repz
test
mov
xor
cld
std
jae
xchg
sub
sahf
mov
mov
cmp
popa
and
add
inc
mov
mov
cmp
xchg
dec
repz
fwait
dec
cli
out
jge
mov
shr
not
or
test
icebp
push
push
stos
mov
inc
or
sbb
mov
push
sub
or
lock
sub
adc
mov
(bad)
mov
xlat
mov
pushf
adc
or
mov
daa
push
pop
mov
cmps
popf
add
pop
or
mov
xor
dec
call
std
sbb
xchg
dec
or
xor
fmul
mov
and
movs
fisub
pushf
push
bound
lods
aam
test
icebp
dec
mov
jp
add
adc
add
nop
retf
push
push
cmp
jg
bound
xchg
push
push
cmp
stc
jo
cmps
ja
mov
add
pop
push
push
ret
(bad)
lods
mov
inc
adc
push
mov
pop
retf
fstp
pop
and
data16
xlat
stc
in
inc
xor
push
and
fs
xchg
add
jmp
(bad)
bound
call
lea
(bad)
lds
fcmovbe
xor
mov
mov
mov
scas
es
pop
push
cwde
loop
out
push
js
mov
ja
retf
mov
xchg
aas
es
jl
stos
ins
inc
push
push
sti
mov
mov
shl
adc
shr
and
xchg
out
not
(bad)
sbb
xor
xor
fild
aas
call
(bad)
mov
mov
call
push
dec
ins
pop
fbstp
pusha
sub
sbb
push
jns
and
or
inc
sub
jbe
loopne
or
ret
or
inc
nop
inc
jmp
jle
cmp
adc
stc
mov
pop
lds
xchg
icebp
and
fwait
dec
retf
div
mov
jg
xor
push
sub
cmp
sti
xor
bound
pop
(bad)
jnp
fstp
icebp
dec
jmp
xchg
push
out
jns
in
call
jge
aas
dec
aad
mov
ins
js
dec
fsub
xor
xor
or
xchg
cmp
cmp
add
or
pop
mov
in
lea
cwde
rcr
scas
mov
or
fisttp
dec
mov
ror
outs
add
cmps
sbb
xor
cwde
xor
retf
and
xor
pop
push
xchg
xor
jl
lods
scas
mov
jmp
imul
je
dec
sub
cmp
outs
mov
mov
and
jg
pop
or
sbb
pop
std
cmp
fild
inc
ins
cmp
(bad)
mov
pop
ins
adc
mov
shr
test
daa
or
pop
and
outs
cld
popa
or
push
cli
jb
addr16
or
mov
lods
inc
and
xor
jmp
jae
das
std
pop
repz
fdiv
add
dec
call
(bad)
dec
scas
addr16
and
dec
jle
cdq
stos
jmp
aaa
(bad)
(bad)
push
pusha
clc
jbe
sbb
sub
mov
outs
mov
mov
mov
scas
ins
add
cmp
fwait
js
js
inc
test
ins
test
cmp
cmp
aaa
shl
add
jmp
lahf
cmp
ffreep
xor
jnp
or
cmp
into
jb
xor
inc
std
add
daa
das
add
ror
fsubr
pop
out
xor
and
jle
jle
push
gs
rcr
or
das
and
out
mov
or
mov
je
fmul
inc
adc
call
jl
icebp
pusha
sti
add
mov
mov
cmps
push
stc
sub
xor
lahf
gs
mov
dec
adc
add
cli
pop
out
mov
jnp
sub
push
test
xlat
jmp
mov
inc
bound
jae
inc
pop
lahf
lock
outs
add
add
fst
shr
pusha
and
ds
shr
out
lods
cmc
add
call
repz
jns
jnp
push
hlt
arpl
mov
pusha
lds
pop
dec
pop
scas
mov
push
add
retf
int
mov
xor
enter
sub
mov
pop
mov
sti
xchg
lea
stc
test
bound
test
fsubr
(bad)
and
ret
addr16
dec
in
jns
inc
mov
repz
jge
ret
call
imul
mov
cmc
add
adc
aad
cmps
ss
iret
(bad)
mov
push
imul
sbb
js
jae
mov
enter
scas
mov
sub
jle
stos
inc
(bad)
adc
int
pop
sub
lods
jmp
gs
mov
and
mov
out
out
fbld
adc
(bad)
pop
pop
sub
sti
rol
jg
cmps
retf
fsubr
xchg
sub
outs
arpl
fcomp
aam
inc
cdq
(bad)
int3
inc
inc
xchg
dec
mov
mov
pop
dec
push
jb
loopne
(bad)
mov
dec
and
adc
cmp
movs
adc
mov
and
imul
fs
xchg
mov
and
xchg
mov
shr
mov
movs
retf
jp
je
push
jl
xor
push
imul
push
mov
pop
adc
adc
dec
jecxz
or
inc
ins
aad
and
test
movs
addr16
inc
fwait
mov
pushf
aam
add
cmp
(bad)
and
push
jecxz
in
mov
add
imul
cmc
cmp
xchg
cdq
cmp
retf
dec
inc
xchg
shl
dec
mov
shl
rcr
dec
jmp
adc
mov
add
dec
repnz
jns
ins
fst
(bad)
nop
sub
clc
xchg
adc
stos
xchg
xchg
mov
pop
and
mov
dec
and
inc
das
jbe
push
clc
push
pop
inc
inc
out
outs
retf
dec
pop
mov
jecxz
dec
jae
jne
mov
ds
and
cmp
xchg
fwait
hlt
daa
xlat
ds
stos
test
data16
and
sbb
xchg
jge
sub
jmp
sbb
pop
loopne
dec
xchg
pop
cmp
push
pop
inc
push
mov
push
inc
test
js
inc
das
pop
jg
inc
cmp
test
ficomp
jecxz
fsubp
inc
jp
scas
sub
pop
gs
mov
mov
es
pusha
sbb
cs
jge
or
push
mov
(bad)
push
push
push
stos
mov
mov
cli
jnp
cmp
add
mov
jmp
inc
jl
xchg
inc
fsubr
div
mov
pusha
inc
or
xchg
mov
push
(bad)
sbb
sbb
cmc
or
neg
and
test
fisubr
lods
jno
or
test
out
sub
sub
adc
das
pop
xchg
out
je
out
jg
stc
lods
dec
jp
repnz
and
jmp
add
jo
push
test
fsubr
aad
out
cmp
stos
nop
div
popa
cdq
inc
fld
stos
dec
jmp
push
adc
pop
je
adc
sbb
push
sub
aam
jmp
jo
xor
rcr
adc
cmp
dec
sub
daa
sub
or
repnz
int3
mov
(bad)
push
push
out
fs
int
mov
pushf
sbb
loopne
dec
pushf
jnp
cmc
push
dec
ins
outs
and
je
cld
pusha
dec
imul
cld
xor
dec
mov
push
mov
aas
and
test
jae
adc
cmp
jbe
xor
in
jnp
arpl
sbb
pop
(bad)
pop
mov
cmps
fcmove
inc
xor
sub
jb
adc
lock
ds
add
or
cdq
aad
call
mov
or
xor
iret
fnsave
xchg
fidiv
addr16
mov
arpl
xlat
xchg
fld
(bad)
adc
lods
mov
leave
loopne
jmp
and
inc
jmp
pusha
dec
or
add
mov
add
nop
xor
shr
dec
mov
mov
sti
cli
gs
jmp
dec
inc
iret
rcr
cmp
movs
jae
cdq
sbb
ret
ins
and
jbe
pop
fcmovbe
inc
loopne
into
xchg
sbb
mov
and
lds
pop
lds
(bad)
shr
mov
pushf
add
std
cdq
push
xor
test
push
leave
mov
call
xor
imul
fisttp
push
mov
iret
(bad)
repnz
call
lea
loope
sahf
push
push
repz
call
out
int3
out
push
cmp
pop
scas
xchg
cmp
pop
stos
mov
mov
jmp
push
call
addr16
jne
mov
mov
pop
dec
(bad)
cmps
xlat
cmp
(bad)
xchg
push
cwde
xchg
mov
xchg
stos
xchg
mov
add
pop
mov
dec
test
aam
adc
or
mov
outs
enter
test
inc
adc
mov
mov
dec
pop
mov
sub
shr
mov
jo
(bad)
jb
in
ret
test
jno
loop
pop
fisub
xor
shr
add
jns
shl
imul
ret
cmp
jae
sub
mov
scas
or
dec
dec
sub
inc
sar
mov
ficom
mov
jle
(bad)
nop
and
in
in
inc
xlat
and
dec
pop
pop
sub
stos
mov
rcl
cmp
fdivr
mov
stos
(bad)
mov
daa
add
pop
mov
loope
mov
out
mov
test
or
je
jmp
sbb
dec
jmp
jmp
shr
int3
leave
fild
sub
mov
or
test
jns
or
out
pop
mov
sub
mov
aam
add
mov
pop
loop
xor
sti
(bad)
bound
mov
enter
or
daa
repz
shr
jecxz
cld
sub
cmc
sub
mov
mov
mov
imul
mov
push
(bad)
jns
test
mov
movs
add
cmc
jmp
add
inc
ret
or
cli
rcr
jne
leave
push
mov
jp
jl
dec
leave
pop
sti
fcmovnb
stos
cmp
jp
sub
mov
jb
mov
enter
pop
mov
mov
cmps
aas
int
xor
push
idiv
fdivr
mov
lea
ins
pop
pcmpgtb
sub
push
dec
add
inc
out
fwait
sbb
(bad)
jle
fs
sbb
and
hlt
jns
sbb
adc
mov
lea
xlat
or
ror
xor
into
push
and
jp
inc
ret
adc
stc
ror
sub
adc
pop
xchg
jmp
in
ins
xor
pop
das
gs
sbb
aam
or
sar
push
(bad)
not
cmp
enter
ret
or
das
out
sti
cld
jp
cmp
mov
int
retf
sub
add
popa
dec
mov
mov
mov
jnp
rol
rcr
xchg
xor
aaa
popf
(bad)
adc
mov
in
xchg
mov
mov
loope
mov
dec
ins
mov
retf
inc
jnp
inc
and
dec
and
les
adc
scas
fisub
scas
mov
es
ja
aas
dec
mov
cmc
cmp
jp
push
cmp
stc
pop
mov
shr
inc
mov
inc
push
xchg
jge
out
xchg
dec
and
icebp
fnstcw
dec
jbe
ror
cli
daa
push
in
mov
aam
test
mov
hlt
push
dec
cmps
xchg
mov
inc
outs
adc
mov
scas
xchg
dec
pop
dec
pushf
inc
ins
or
or
(bad)
mov
adc
(bad)
stos
xor
cmp
mov
(bad)
xor
cmc
xchg
cs
lods
adc
mov
adc
aam
leave
gs
(bad)
xchg
inc
jnp
(bad)
lods
push
and
cmp
pop
cmps
jl
jg
and
jns
retf
add
inc
push
iret
mov
and
mov
mov
movs
lock
(bad)
mov
fbstp
cmps
and
lods
jnp
sahf
cmps
(bad)
cld
repz
(bad)
retf
sub
dec
sbb
xlat
cli
push
add
sbb
or
mov
pop
mov
inc
mov
push
mov
xchg
dec
lds
jg
js
inc
or
loopne
xchg
(bad)
std
sub
dec
jmp
push
jnp
cmps
gs
mov
mov
mov
stos
or
push
repnz
enter
sbb
in
(bad)
mov
xor
int
add
push
lahf
popa
mov
cmps
sbb
jnp
sbb
cld
fnstcw
(bad)
fistp
jge
das
push
add
ffreep
cmp
fist
jmp
xor
pop
and
xchg
(bad)
adc
int3
fist
or
les
scas
push
jae
sbb
mov
retf
mov
inc
sub
enter
mov
jp
pop
adc
lds
push
push
jmp
mov
popf
sub
out
push
out
push
repnz
jg
leave
or
mov
xor
cmps
cdq
adc
sub
out
dec
sbb
mov
cvtps2pi
in
cs
sub
cmp
retf
ds
dec
cmps
int3
test
push
ror
lock
dec
into
aam
xchg
test
mov
mov
call
xlat
jae
inc
xchg
in
sub
xchg
cs
xchg
cdq
shl
leave
pusha
pop
out
imul
inc
in
pop
dec
xor
or
mov
push
cmps
jle
mov
fisubr
pop
das
movs
les
cwde
fwait
in
xchg
pop
cmp
movs
aas
and
pop
stc
mov
shl
loopne
mov
xchg
or
cs
cmp
fmul
pushf
fst
push
cld
pop
push
add
jmp
inc
ins
ret
pop
arpl
dec
fs
push
mov
sub
(bad)
test
xchg
out
ss
adc
jmp
mul
fnstcw
and
(bad)
iret
bound
out
mov
int3
sbb
lds
sub
and
dec
xchg
icebp
mov
bnd
aam
ror
outs
inc
mov
jmp
mov
ins
lahf
and
push
push
loopne
mov
ret
or
jmp
inc
sbb
push
je
fstp
aaa
sbb
push
leave
adc
out
jno
mov
outs
push
inc
shl
lods
fnstcw
mov
cld
push
mov
jg
jp
lahf
out
push
pop
xchg
xlat
dec
(bad)
cmp
add
rcr
adc
scas
xchg
aad
cmp
repnz
lods
sbb
sar
leave
into
xchg
xchg
imul
call
or
mul
stc
mov
cmp
stc
js
jmp
dec
loope
loop
aaa
shl
out
mov
cld
sbb
sbb
xchg
pushf
sbb
mov
jp
das
rol
fucomip
ffreep
hlt
xchg
mov
out
mov
clc
std
cmp
in
fsubr
outs
mov
fnstenv
ret
pop
imul
xlat
dec
pop
cwde
ss
(bad)
sub
xchg
pop
sahf
sub
(bad)
fsubr
popf
aas
mov
or
or
pop
mov
mov
and
mov
repnz
mov
lods
iret
jecxz
fsubr
sub
or
fbstp
cmp
(bad)
jo
sub
neg
cmp
jo
mov
push
mov
or
not
in
pop
les
mov
xor
setle
out
out
fdiv
retf
xlat
cmp
mov
ins
mov
jns
sbb
pushf
inc
push
mov
mov
iret
xchg
xchg
cli
xor
icebp
pop
mul
xor
inc
fwait
pop
xor
int
aaa
je
scas
scas
std
hlt
enter
pusha
test
sub
imul
outs
mov
addr16
(bad)
fstp
mov
dec
popf
jns
push
inc
out
mov
shl
push
aas
mov
hlt
jmp
mov
push
mov
ins
test
dec
xchg
mov
jne
outs
pop
inc
les
cmp
test
jae
je
and
dec
cmp
xchg
lods
mov
mov
inc
sahf
xchg
mov
mov
imul
jno
lods
rcr
es
jns
outs
addr16
xchg
pop
aam
add
in
fcom
int3
push
out
push
fld
cwde
aad
aam
(bad)
push
adc
cmc
mov
pop
xchg
test
sbb
sti
mov
ja
leave
retf
xor
iret
cs
scas
das
vmovlps
mov
jg
mov
sub
aam
stos
dec
movs
in
mov
popf
mov
nop
dec
inc
mov
cmps
cwde
xchg
mov
(bad)
add
jno
jmp
push
loop
int
out
in
adc
loope
imul
in
xchg
fsub
daa
jl
or
vmulpd
add
loope
fdiv
ret
out
mov
push
pop
jecxz
xor
loopne
adc
mov
pushf
int3
dec
sub
pop
nop
xor
repnz
jns
xchg
pop
jno
mov
sbb
pushf
dec
dec
test
pop
mov
call
out
je
jmp
push
mov
ror
xchg
call
call
(bad)
retf
jae
sub
in
sbb
test
test
scas
sti
arpl
jno
xchg
repnz
dec
cmp
jmp
icebp
pop
mov
ins
out
dec
inc
loopne
ror
or
add
push
and
and
mov
cld
and
sub
cdq
pop
test
or
mov
ret
push
cdq
aas
mov
retf
fld
mov
out
outs
stc
mov
inc
mov
add
repz
jae
movs
jae
loopne
push
jmp
pop
retf
bound
add
jb
xchg
jl
outs
lods
arpl
sbb
lahf
fimul
enter
push
not
fild
add
fwait
add
and
xor
inc
jl
push
ror
into
jmp
inc
cmp
leave
dec
ins
int3
inc
or
fcmovu
les
xchg
inc
gs
xchg
fs
inc
add
jbe
lods
inc
fldcw
fstp
xchg
push
lods
stos
scas
adc
and
test
ss
adc
stc
adc
call
xor
sbb
out
pop
fidivr
mov
imul
loopne
call
mov
stos
dec
mov
out
cli
xor
outs
stc
mov
leave
cmp
pushf
int
mov
out
pop
or
adc
test
xchg
jmp
mov
not
cld
or
push
loopne
or
iret
mov
movs
mov
ins
movs
lahf
lea
aad
mov
and
and
bnd
mov
sbb
retf
pop
es
dec
pushf
in
ds
pop
mov
add
out
mov
ds
inc
pop
rcr
jle
xor
ins
call
fcmove
sub
cmps
pop
pop
mov
jbe
and
shr
outs
test
mov
mov
in
push
out
cmp
xor
xlat
sbb
loop
pusha
adc
not
pop
or
push
int
xchg
enter
jne
fnstcw
push
cmc
adc
or
test
or
push
mov
jo
out
adc
(bad)
jmp
mov
(bad)
imul
repz
retf
push
cmp
or
rcr
jbe
cmps
icebp
push
pop
push
rcr
aam
sub
inc
popf
lock
sti
and
(bad)
jmp
xchg
jae
stc
mov
adc
lock
aad
jl
push
cmp
sub
pop
mov
pop
xchg
mov
adc
not
mov
sahf
pushf
cmps
xchg
sbb
xchg
adc
dec
outs
icebp
mov
jb
in
xchg
cli
lds
dec
adc
into
imul
pop
stos
cmp
mov
jmp
push
sub
add
sahf
(bad)
adc
mov
mov
dec
sahf
mov
lods
shl
dec
scas
cs
fadd
out
push
push
pushf
cmp
or
rep
jmp
push
sbb
sub
retf
std
retf
xlat
adc
out
mov
lock
imul
cmp
sti
push
xchg
jle
popa
mov
push
pop
fs
leave
leave
mov
pusha
fstp
ins
repz
(bad)
push
dec
push
ror
(bad)
pop
mov
push
(bad)
jle
(bad)
cmp
jbe
sub
push
scas
retf
push
int
div
fmul
sub
mov
retf
lods
jecxz
cdq
xor
fnstsw
mov
lds
jae
clc
or
cmp
cwde
mul
test
pop
fnstsw
pop
(bad)
in
and
push
push
adc
jne
adc
and
mov
jne
in
adc
(bad)
gs
or
adc
sbb
int3
inc
pop
bnd
fmulp
dec
dec
sbb
sbb
pushf
mov
jbe
daa
dec
scas
pop
adc
aam
pop
pop
outs
aaa
lods
dec
in
xor
push
lahf
adc
mov
sbb
push
jae
jmp
mov
cwde
(bad)
icebp
jg
or
or
xchg
pop
mov
int3
cmp
mov
mov
mov
push
xor
ss
and
jnp
cli
cdq
mov
ins
dec
mov
(bad)
sbb
ins
and
imul
and
mov
mov
xor
jno
outs
jbe
outs
jle
xor
shr
xchg
jl
cmps
dec
jmp
arpl
mov
mov
stos
add
ret
jo
pop
int
mov
adc
fisubr
jg
imul
in
outs
scas
and
dec
fstp
sbb
xor
mov
mov
pusha
dec
cmp
dec
mov
in
in
lea
fdiv
ins
xlat
addr16
arpl
mov
push
cmp
pop
sub
fs
(bad)
in
xchg
shl
ss
inc
mov
jbe
test
dec
data16
mov
pop
and
(bad)
sbb
cpuid
lods
dec
int
cmp
mov
jmp
sub
es
pop
dec
ror
inc
(bad)
enter
xchg
sbb
mov
scas
jmp
sub
scas
stos
xor
lds
test
test
xchg
jae
cmc
scas
inc
mov
aas
lea
push
mov
pusha
cld
mov
fisub
lods
mov
mul
int
ret
mov
aam
jp
js
mov
(bad)
ins
test
ja
jo
mov
jnp
inc
sbb
retf
sub
addr16
retf
outs
inc
push
popf
in
mov
(bad)
movs
arpl
movs
(bad)
retf
cmc
pop
iret
mov
push
ret
xchg
idiv
add
(bad)
mov
add
(bad)
in
and
retf
out
cld
adc
xchg
out
and
pop
jo
or
xchg
jmp
scas
inc
dec
div
das
mov
sbb
dec
stos
mov
add
addr16
cmps
gs
fbld
mov
inc
cmp
mov
(bad)
retf
jg
sub
pop
out
sub
sub
mov
mov
or
mov
popf
outs
or
dec
dec
int3
jb
popa
sub
xor
inc
ror
imul
pop
xchg
mov
xchg
xchg
or
sbb
lea
fist
fst
rcl
push
fwait
mov
lahf
jnp
pop
sbb
jnp
push
push
jmp
aam
retf
cmp
les
outs
int3
xchg
(bad)
cmps
and
jge
adc
cmc
cwde
je
sub
js
inc
movs
xor
add
sbb
or
add
push
lock
cmp
stos
mov
jle
push
jp
popa
and
cli
lods
fwait
inc
and
jmp
hlt
mov
int
cmp
jmp
jb
mov
test
mov
call
cmps
push
das
add
mov
cmp
or
jg
adc
popf
pop
push
loop
cmp
mov
pop
mov
xor
cdq
popf
int
lds
test
jl
dec
mov
jle
out
inc
sti
sbb
mov
ss
shr
push
outs
or
cwde
sub
xor
lsl
adc
retf
and
add
mov
les
lods
cld
and
iret
and
jl
(bad)
mov
movs
pop
ds
(bad)
cmp
(bad)
xchg
test
xchg
cmp
loopne
xchg
or
call
ins
adc
pop
adc
xchg
mov
lds
fstp
push
sbb
retf
loop
push
inc
pop
mov
imul
test
adc
into
dec
push
fstp
test
sub
dec
in
sbb
ret
add
inc
dec
movs
inc
ficomp
nop
sub
ficomp
test
imul
les
dec
loopne
inc
ins
fiadd
or
pushf
mov
mov
imul
and
movs
cmp
call
loopne
ficom
mov
loopne
push
dec
jle
jp
int3
std
fist
mov
jle
dec
pop
push
sbb
das
push
pop
pushf
ins
test
fs
ja
mov
sub
lds
ins
xchg
mov
int3
or
stos
sbb
cmp
js
jmp
add
cmps
mov
xor
pop
mov
adc
jecxz
add
mov
shr
pop
sbb
js
movs
adc
mov
(bad)
bound
retw
dec
stos
cmp
shr
in
or
xor
scas
and
stos
xor
icebp
xchg
jmp
mov
fmul
in
jmp
dec
sti
xor
out
xchg
ins
mov
xor
cmp
das
retf
stos
cs
sbb
or
fst
int
pushf
dec
add
or
mov
fst
aaa
add
pushf
sub
sub
hlt
mov
out
clc
sbb
mov
outs
sbb
add
sub
add
mov
jb
mov
adc
sub
pop
ret
push
sbb
or
mov
pusha
sub
pop
mov
pop
dec
push
add
or
jne
mov
sbb
jle
mov
(bad)
push
push
mov
and
mov
sbb
adc
cld
inc
sbb
das
and
dec
cs
(bad)
cdq
mov
sbb
push
lahf
cdq
mov
dec
xor
enter
inc
leave
mov
or
dec
and
popa
cmp
aaa
mov
jmp
dec
push
pop
ja
jge
mov
push
push
and
outs
test
fwait
bound
lods
mov
inc
and
inc
outs
xor
and
outs
sbb
xor
ds
cdq
xor
inc
mov
leave
jns
jae
test
add
cli
(bad)
sbb
std
fist
lock
mov
sub
sahf
inc
leave
inc
test
adc
sahf
leave
add
enter
aam
test
fdiv
movs
icebp
scas
adc
jae
out
mov
fistp
xchg
cmp
xor
mov
call
in
(bad)
repnz
mov
scas
mov
les
and
adc
xchg
in
and
adc
xlat
call
or
retf
je
xchg
mov
jno
push
(bad)
pop
mov
out
push
sahf
push
(bad)
(bad)
cmp
xchg
sbb
xchg
data16
repz
sbb
out
mov
lock
mov
sti
jbe
scas
test
mov
jnp
fsubr
jmp
add
xchg
inc
xchg
push
jmp
fwait
sbb
aaa
or
ins
repz
pop
mov
ja
sbb
enter
movs
mov
sti
sub
add
in
fldenv
in
xchg
mov
cmps
jae
jo
xchg
sbb
mov
mov
cdq
jp
es
sbb
(bad)
lock
dec
jae
aam
popf
adc
sub
test
xchg
shl
dec
arpl
popa
xor
(bad)
movs
and
test
cdq
xchg
push
pusha
add
push
mov
lods
(bad)
test
std
out
push
int
pop
sti
jne
push
push
ret
or
mov
add
jg
das
jns
jmp
je
pop
mov
inc
dec
or
inc
cmp
push
push
stos
dec
add
scas
dec
aaa
mov
stos
(bad)
(bad)
add
inc
dec
sbb
or
stos
pop
in
jle
add
mov
sbb
cmp
(bad)
test
in
fst
sbb
inc
mov
push
popf
in
icebp
loop
dec
lods
bound
test
lods
cwde
and
stos
cli
enter
jbe
cmps
out
out
inc
pusha
sub
sbb
and
je
add
lods
dec
std
pop
cmp
ffree
ds
mov
inc
in
xchg
mul
inc
or
pop
imul
pop
std
fdivr
cmp
mov
into
dec
inc
mov
mov
inc
fadd
or
cli
mov
mov
jle
jp
sbb
call
xor
adc
mov
popf
rcr
cmps
xor
add
gs
dec
dec
mov
xchg
ret
pop
and
or
and
into
or
or
mov
jne
and
nop
or
(bad)
fs
adc
ret
call
mov
push
outs
mov
retf
mov
ss
retf
je
repz
aam
inc
or
mov
cmps
sbb
inc
mov
inc
std
jp
add
sbb
in
cdq
shl
jae
in
stos
or
mov
xor
shl
push
pushf
std
cmps
nop
pop
(bad)
or
mov
push
fisub
pop
clc
les
add
add
inc
leave
or
test
mov
(bad)
(bad)
ins
sub
xchg
and
cmp
rcl
sbb
or
mov
fcmovnb
lods
sbb
mov
adc
dec
and
adc
inc
ss
std
sti
push
xchg
dec
inc
adc
cmp
dec
fisttp
sub
push
and
cmc
adc
sub
mov
adc
popf
xchg
xchg
jns
dec
jecxz
fiadd
psraw
rol
mov
es
call
repnz
sbb
(bad)
cmp
mov
ret
clc
ds
or
rol
es
add
cld
pop
mov
xor
jnp
push
ins
jmp
jmp
adc
pop
(bad)
mov
xor
fs
xor
inc
ss
(bad)
loop
xchg
dec
mov
pop
in
into
mov
mov
out
add
dec
loopne
lock
(bad)
outs
std
cmp
xchg
pop
inc
test
and
push
sti
xor
out
cwde
and
inc
pop
inc
test
pop
jae
or
js
pop
mov
rcl
jl
or
arpl
popa
mov
(bad)
adc
lods
stos
dec
push
dec
ins
es
fwait
jbe
ins
ret
push
sti
inc
jns
data16
sub
or
cmp
mov
and
cmp
xor
push
pushf
jmp
arpl
pop
mov
repz
xchg
lds
dec
imul
shr
cmp
mov
pop
addr16
pusha
ret
jns
dec
nop
repz
int3
xor
es
out
ret
dec
hlt
call
test
cmps
sbb
sbb
push
imul
and
loop
aad
or
xor
fwait
lds
mov
xor
sub
xlat
pop
push
dec
int
pop
test
lods
add
cmp
sbb
test
add
fnstsw
scas
(bad)
stos
dec
das
inc
dec
jmp
out
sub
in
pop
dec
ins
dec
sbb
mov
stos
mov
dec
pop
mov
enter
pop
pop
imul
inc
sti
xchg
mov
adc
mul
in
scas
add
pop
pop
scas
test
in
call
clc
cmovl
pusha
add
out
mov
movs
mov
mov
adc
or
popf
mov
pop
or
adc
ror
cmp
stos
lods
inc
mov
fcmovne
jmp
outs
and
push
leave
cld
lods
pop
fidiv
loopne
or
push
rcl
popf
cmp
test
pop
(bad)
fmul
jmp
push
cmp
fs
push
gs
sbb
mov
shr
mov
cmp
imul
iret
sub
fst
std
nop
int3
and
mov
push
cmps
cmp
mov
ficomp
pushf
adc
in
ins
push
iret
or
push
out
aas
sbb
jae
stos
mov
(bad)
scas
inc
and
hlt
push
xchg
movs
mov
in
popa
shr
out
sti
or
xchg
pop
int3
inc
pop
mov
movs
shl
mov
jns
dec
in
sbb
fimul
xchg
pushf
mov
ins
(bad)
popa
lods
lods
jecxz
(bad)
xchg
xchg
aad
jg
int3
pop
mov
std
(bad)
sub
imul
cmp
ror
imul
or
cmp
adc
js
jmp
push
ins
outs
test
data16
pop
aam
dec
fidivr
sub
in
repnz
sbb
xchg
daa
mov
xor
and
inc
mov
movs
inc
xor
add
or
sbb
mov
xchg
pushf
push
sub
adc
xor
mov
cwde
aas
shl
pop
js
fwait
sub
add
xlat
xchg
call
(bad)
xor
test
popf
nop
mov
jp
(bad)
cdq
les
popf
and
mov
out
xchg
cld
mov
and
mov
out
and
test
pop
scas
push
ins
pop
shl
cli
aaa
ja
dec
mov
cmps
shl
push
rcl
fwait
mov
xor
es
shl
out
out
jne
pop
mov
or
mov
mov
add
pop
xchg
xor
mov
mov
sbb
mov
jg
inc
int3
ja
lahf
cli
outs
aas
out
jnp
fsub
cmc
cdq
into
cmp
cmp
nop
xor
xchg
or
push
loop
jl
je
adc
adc
cvttps2pi
or
xor
inc
sbb
rol
into
sub
mov
cdq
push
cs
cmp
cs
int
push
inc
cmps
jns
cmp
test
jecxz
add
cdq
dec
out
adc
aad
pop
lds
in
les
es
xor
jns
inc
cmps
cld
inc
outs
mov
(bad)
mov
int3
sbb
out
dec
js
call
xchg
into
xchg
outs
jp
mov
ret
fistp
cld
mov
fbld
and
pusha
mov
sbb
jge
mov
jmp
loope
fldcw
fmul
enter
mov
jns
daa
cs
pop
mov
inc
clc
cli
jp
out
inc
retf
ja
inc
mov
or
cwde
cs
test
inc
retf
jae
imul
add
call
xor
xchg
xchg
pop
xchg
call
mov
pop
and
dec
jb
sub
test
fdiv
sti
stos
dec
imul
add
mov
xor
hlt
std
jo
inc
dec
cmp
je
mov
jg
lods
cwde
add
(bad)
gs
enter
xor
pop
cmps
inc
shr
and
adc
or
xor
add
cdq
push
sub
inc
mov
sbb
std
push
popa
pop
es
scas
and
scas
push
sub
fdivrp
jns
xchg
pop
xor
stos
hlt
vpsrlw
mov
pusha
adc
sbb
add
je
aaa
inc
mov
or
cs
push
mov
dec
jae
loop
fwait
mov
inc
jne
int
or
mov
faddp
dec
and
xchg
sar
les
stos
(bad)
xor
ins
mov
movaps
lds
jl
lods
movs
aaa
mov
fisub
and
retf
pop
gs
pop
cmp
push
jb
popa
xchg
repnz
(bad)
fdivr
sbb
in
cdq
sub
bound
js
inc
mov
mov
arpl
push
jmp
(bad)
xchg
sub
pop
xor
(bad)
cmp
inc
add
sti
and
iret
cmps
repz
outs
iret
lods
jg
mov
dec
mov
test
jne
jb
imul
cmp
adc
pop
pop
fcomp
lods
inc
push
mov
dec
xchg
stc
or
or
cmps
and
add
or
out
xor
retf
push
fwait
popf
jge
jge
add
sbb
out
inc
pcmpgtd
pop
mov
jg
mov
xor
jo
add
sti
mov
int
stos
ja
pop
sbb
ss
js
vpaddb
sub
mov
xchg
mov
sub
test
call
leave
xchg
(bad)
int3
loop
inc
mov
out
enter
mov
inc
inc
pop
fistp
push
inc
xor
mov
div
mov
adc
loope
aad
push
inc
mov
jmp
ficom
lahf
addr16
test
(bad)
scas
xabort
inc
aad
and
sub
(bad)
int
cli
lahf
pop
in
sbb
cmc
inc
xchg
mov
jp
inc
push
ja
jbe
xchg
call
aas
xchg
sbb
adc
mov
push
lock
int3
sti
hlt
out
dec
ins
push
sbb
cmps
inc
dec
push
mov
sbb
je
inc
mov
lock
mov
jp
outs
pop
xor
imul
fs
mov
inc
rcl
fimul
mov
push
jl
mov
jge
leave
and
mov
mov
call
mov
mov
xchg
ss
lods
dec
dec
adc
add
sbb
fcomp
mov
retf
or
(bad)
retf
hlt
imul
lods
add
repz
dec
mov
add
shl
xchg
shl
addr16
ins
mov
cli
cld
ins
push
scas
dec
retf
dec
mov
repnz
icebp
dec
mov
addr16
fcmovbe
mov
xchg
sub
adc
jl
out
or
mov
div
data16
sub
xchg
cmp
and
ret
test
mov
xchg
ficomp
push
lea
adc
pop
call
(bad)
call
xchg
sub
mov
test
mov
push
jp
pop
loop
and
ret
repz
in
add
sbb
dec
sub
xor
adc
pusha
ja
test
in
jmp
addr16
mov
repnz
(bad)
iret
aam
xor
lods
std
addr16
xor
nop
std
jno
rcr
jmp
cwde
lock
jmp
fldcw
cmp
aam
and
rol
inc
jbe
add
ins
xchg
push
scas
gs
imul
xor
adc
(bad)
fadd
loop
in
retf
daa
std
jle
fwait
mov
out
pusha
push
push
jp
push
cs
fild
and
or
dec
out
mov
pop
pop
bound
sbb
add
mov
inc
jmp
ja
(bad)
ins
dec
adc
push
std
and
cmps
mov
mov
adc
data16
(bad)
icebp
pop
test
sbb
pop
mov
xor
adc
mov
scas
mov
mov
dec
pop
mov
jne
sbb
adc
sub
jo
out
shl
leave
xlat
jmp
nop
add
push
out
in
inc
adc
mov
sub
test
dec
jo
ins
mov
repz
imul
adc
dec
inc
aas
out
mov
jno
sub
aad
mov
lock
adc
mov
dec
mov
xchg
or
sub
cmps
and
add
mov
loope
push
jl
push
fwait
dec
lods
jns
lea
mov
scas
mov
and
je
fdiv
inc
dec
pop
and
sbb
push
xchg
dec
(bad)
mov
movs
mov
or
push
fdivr
clc
xor
outs
adc
test
adc
in
inc
xchg
out
sbb
jle
jns
jl
and
xor
mov
repnz
cmp
out
retf
or
adc
or
jmp
and
pop
inc
xchg
pop
inc
int3
jg
aaa
hlt
or
out
sti
adc
xor
ja
mov
fldenv
push
nop
or
inc
inc
sbb
es
sbb
pop
dec
mov
or
pop
mov
out
test
out
inc
dec
cmc
std
dec
imul
push
and
dec
and
test
xchg
stc
xor
lods
sbb
hlt
dec
aam
cmp
and
mov
loop
scas
add
or
jns
dec
jmp
adc
imul
ins
push
iret
jnp
ficom
sahf
ds
xlat
xchg
mov
pusha
(bad)
fld
jp
aas
pushf
test
imul
pop
lds
clc
sbb
mul
mov
inc
dec
das
imul
push
inc
pop
or
xlat
or
pop
je
stos
stos
mov
aam
mov
jmp
pop
sub
or
jae
adc
loope
push
int
pop
outs
pop
mov
iret
cdq
mov
and
jmp
(bad)
xchg
add
push
fldenv
call
mov
jne
jno
(bad)
ss
aaa
xchg
mov
adc
scas
push
es
jle
(bad)
cmc
popa
popa
in
dec
sbb
cli
xchg
xchg
dec
ss
cmp
test
lea
xor
adc
mov
jnp
push
xchg
cmp
inc
movs
mov
arpl
mov
mov
call
ror
fs
jecxz
add
xchg
dec
cmp
fs
or
mov
jge
cpuid
shl
inc
mov
fist
xchg
cmp
adc
pop
call
mov
sbb
push
push
in
jp
mov
or
test
jae
nop
idiv
mov
sbb
bnd
xor
mov
adc
xor
out
sbb
retf
jge
fcomp
clc
ficomp
repz
retf
nop
and
adc
mov
add
push
mov
xchg
mov
jbe
mov
jmp
cmp
pushf
cli
dec
jae
(bad)
xor
test
shl
repnz
adc
pop
inc
xchg
xor
sbb
push
mov
jg
push
gs
push
test
dec
data16
pusha
out
aaa
aaa
push
imul
movs
adc
ret
call
push
inc
pushf
or
inc
aas
mov
arpl
jmp
pop
push
call
jmp
push
icebp
and
shl
in
push
lods
cmps
gs
les
das
stc
cmps
fiadd
icebp
test
int
and
push
les
inc
paddw
(bad)
jl
push
pop
push
mov
jns
and
sub
movs
test
push
lahf
mov
jecxz
and
jo
fcomi
es
icebp
out
std
outs
imul
pop
push
xchg
lea
and
xchg
loopne
movs
inc
sar
cmps
sbb
test
dec
pop
je
push
mov
or
push
js
or
xor
cld
jae
icebp
pop
(bad)
jae
cmp
xchg
(bad)
repz
sub
icebp
fldenv
sub
and
in
call
xor
cdq
out
sub
into
mov
sbb
mov
dec
int3
adc
retf
xor
loope
xor
out
jbe
jecxz
adc
mov
jmp
stos
mov
sub
push
popa
not
lea
stos
sbb
ins
sub
sar
inc
inc
push
nop
jb
popf
xor
popa
add
jb
or
fiadd
jl
mov
inc
rcl
pop
mov
push
add
cmp
fs
inc
add
dec
repnz
inc
sbb
add
adc
addr16
dec
mov
pop
movs
pop
aad
into
(bad)
stc
iret
lds
ss
cmp
dec
out
cmp
add
add
int3
es
mov
lds
rol
loop
test
mov
push
fs
das
adc
stc
xor
fdiv
or
xor
inc
mov
sbb
cmc
(bad)
dec
cmp
sbb
bound
xor
std
cmps
pop
xchg
ins
dec
pop
push
aad
dec
repz
retf
mov
mov
ds
and
dec
mul
addr16
xor
or
scas
xchg
icebp
lods
iret
mov
addr16
mov
leave
mov
jmp
cwde
repz
xchg
cmps
sub
sbb
sahf
out
cmp
jmp
or
test
fs
clc
add
and
addr16
jo
mov
sbb
movs
mov
xchg
xor
push
or
popa
xchg
adc
or
mov
and
loope
fist
ins
sbb
pop
(bad)
(bad)
cmp
fdiv
push
cli
xchg
pop
stc
mov
(bad)
lock
out
jb
cs
mov
cmp
call
(bad)
data16
jne
push
ja
mov
sbb
push
retf
pushf
iret
fs
jae
inc
cmp
jp
in
(bad)
jo
xor
ins
aaa
fst
jbe
sar
repnz
ja
int3
repz
mov
lock
or
cmps
xchg
je
mov
push
xor
jmp
(bad)
jg
out
mov
xchg
jp
mov
pop
out
xor
gs
cmp
fcom
xchg
sub
jg
dec
out
push
fidiv
out
mov
mov
cmp
dec
adc
dec
mov
mov
mov
xor
push
in
mov
popa
imul
sbb
pop
js
popf
in
xchg
mov
sub
lods
inc
push
mov
sub
sbb
mov
adc
dec
xchg
jg
pop
retf
mov
popa
ja
out
les
mov
add
sbb
aas
xor
jg
mov
xchg
or
ja
or
adc
xchg
jae
in
retf
mov
push
adc
cmp
ret
nop
mov
push
std
pop
cmc
out
in
mov
xchg
sub
(bad)
ficom
jge
repz
mov
gs
shl
ret
stos
mov
lods
adc
mov
in
push
ds
cmp
test
retf
push
mov
push
sub
sbb
xchg
aam
lods
not
dec
pop
dec
push
cwde
loopne
les
inc
push
ret
nop
jmp
hlt
fs
fdiv
popa
sbb
(bad)
add
xchg
test
mov
cdq
push
xchg
fcom
mov
pop
xchg
aam
int
jb
adc
pop
pop
ror
and
pushf
lea
push
ins
xlat
div
ret
stos
cmc
sbb
push
jle
mov
push
sub
ficomp
test
xor
push
arpl
ror
and
push
(bad)
xchg
clc
enter
adc
mov
jle
push
js
sbb
js
push
ret
mov
cmp
mov
pop
push
or
out
xchg
mov
or
push
js
mov
cmp
dec
push
xchg
mov
scas
fdivrp
dec
aaa
jno
sub
or
xlat
cmps
lock
push
in
pop
bound
and
cld
cmp
push
or
cmps
cmps
jg
adc
mov
je
fdivr
outs
js
push
add
dec
and
cmps
repnz
push
das
cld
test
push
ins
bound
mov
push
(bad)
cmp
sbb
mov
push
jecxz
xchg
fist
pop
daa
cmps
add
add
int3
sub
inc
mov
or
jmp
mov
fisub
add
cmps
mov
popf
jmp
popa
inc
or
xchg
lods
aas
add
stos
lods
xlat
push
mov
sbb
(bad)
fwait
dec
xchg
jge
or
lock
test
dec
mov
mov
inc
adc
(bad)
fcom
test
loope
adc
(bad)
mov
call
cmps
adc
jl
test
pusha
retf
jle
sub
std
aam
sbb
ins
lahf
pop
mov
addr16
jns
push
in
sahf
fwait
mov
xchg
push
rcr
popa
in
sbb
add
xchg
leave
aaa
pop
mov
jb
xchg
sahf
and
inc
and
pushf
add
and
xchg
jno
mov
retf
sub
lea
push
repz
xlat
rcl
push
lds
mov
imul
jmp
sub
sub
and
mov
add
mov
push
xor
pop
mov
scas
mov
pop
sar
repnz
test
dec
mov
sbb
cli
inc
inc
test
mov
jecxz
cvtps2pi
pop
loope
repnz
movs
call
jne
inc
xchg
mov
daa
cmps
(bad)
pop
fimul
js
lock
inc
out
popa
lea
mov
or
xor
movzx
ja
sahf
cvttps2pi
sahf
das
data16
(bad)
push
ret
fdiv
test
ins
cmps
test
mov
adc
mov
scas
sub
mov
or
inc
mov
sub
sbb
outs
ret
sahf
pop
push
mov
stos
data16
or
lahf
cmps
fcom
pop
mov
push
inc
(bad)
call
lods
jno
jns
or
xor
or
inc
cmp
and
aas
mov
inc
outs
jae
in
repnz
icebp
pop
lods
lock
push
ja
loope
mov
mov
add
pop
les
les
es
mov
cmps
es
data16
pop
adc
or
mov
cli
std
add
xchg
stc
mov
add
sub
jp
inc
sbb
mov
sbb
jno
pop
push
push
outs
xor
jns
call
mov
pop
cdq
add
mov
pusha
push
sbb
mov
retf
test
loope
push
xchg
pusha
daa
add
pop
mov
je
stc
int
push
div
dec
enter
daa
mov
push
push
cmp
cmovno
xor
das
sub
sub
scas
push
and
sbb
jp
mov
xor
imul
retf
sar
mov
sahf
clc
sbb
(bad)
loop
sub
rol
je
fdiv
test
popa
xor
xor
in
add
push
out
add
(bad)
adc
xor
adc
pop
dec
mov
push
sub
shl
popa
(bad)
movs
addr16
in
je
mov
mov
push
daa
and
add
ja
fist
retf
jg
pop
repz
retf
sub
mov
add
es
inc
dec
ins
mov
ror
movs
mov
mov
inc
rol
mov
cs
mov
addr16
bound
retf
lea
mov
loop
scas
in
mov
and
imul
xchg
jg
xlat
or
xor
aas
jb
jl
sbb
push
sub
lea
xchg
push
cwde
add
or
inc
fisttp
dec
xchg
aas
pushw
das
inc
les
inc
js
push
push
ficomp
sub
dec
mov
fistp
inc
or
in
(bad)
or
and
call
ja
push
cmp
stos
cmp
xor
iret
cdq
jns
add
push
popf
cdq
mov
jmp
stc
inc
mov
jnp
scas
push
hlt
adc
clc
mov
mov
sbb
call
push
pop
dec
shl
in
sub
fisttp
cmp
fadd
cmp
add
adc
mov
dec
or
out
push
fisubr
adc
jb
test
test
repnz
cmp
sti
adc
pop
inc
pop
mov
mov
xor
(bad)
pop
xchg
sub
jl
xchg
cmp
daa
push
inc
lods
out
cmp
lods
test
xor
ficom
inc
mov
mov
push
and
je
sbb
arpl
rcl
xchg
or
call
mov
dec
add
int
pop
cmc
mov
xor
inc
push
cmp
cmc
sbb
mov
adc
fld
mov
and
scas
aas
cwde
(bad)
cld
clc
icebp
es
int3
mov
inc
cmp
mov
push
sahf
(bad)
adc
and
sbb
xchg
cmp
sub
dec
cmps
repnz
sbb
or
add
push
lock
scas
imul
fsubr
in
sbb
jp
outs
ret
inc
mov
xchg
jno
cmp
scas
sub
and
dec
pop
push
out
pop
cli
repz
push
rol
mov
mov
shr
inc
adc
stos
cs
loop
fadd
cmp
push
lock
ss
inc
(bad)
stc
sub
sbb
and
cmp
in
lods
rcr
fisttp
fs
(bad)
outs
sbb
push
dec
ficomp
cmps
jle
push
or
dec
jnp
push
mov
add
mov
pop
cld
sti
sub
push
pop
in
cld
je
das
test
imul
cmp
pop
aam
outs
stos
sbb
ret
imul
or
imul
lods
jo
ins
adc
mov
mov
adc
mov
push
dec
int
cmp
shl
packsswb
rol
push
or
fiadd
sbb
mov
xor
add
sahf
mov
daa
xor
pop
xchg
retf
sbb
cmc
pop
das
pop
xchg
imul
xor
rcl
popa
mov
sub
loope
add
dec
mov
fwait
lods
add
rol
cmp
pusha
clflush
add
int
inc
adc
sbb
shl
push
scas
push
popa
cmc
lahf
and
or
xchg
xor
inc
(bad)
mov
add
lock
loope
cld
std
into
adc
adc
std
lahf
ja
lds
lahf
mov
push
mov
jl
and
nop
fsubr
enter
adc
in
or
push
push
gs
pop
or
sub
jne
retf
adc
push
push
dec
ret
jmp
adc
mov
jge
push
push
(bad)
lahf
and
nop
push
aad
(bad)
sub
jns
push
cmc
sbb
mov
push
add
adc
xchg
or
fnstcw
sub
lods
scas
xchg
clc
imul
xor
and
or
aas
xor
fwait
pop
(bad)
stos
das
shl
push
fs
call
sbb
outs
cmp
in
pop
in
dec
xor
(bad)
xchg
shl
test
push
cmp
cdq
push
push
xor
push
cld
loop
inc
das
shl
add
neg
loope
and
loop
or
push
jg
int
rcl
adc
add
mov
je
cs
fstp
(bad)
sub
jl
pop
loopne
mov
in
jmp
jno
out
add
sub
pop
stc
nop
aam
inc
shl
out
pop
adc
inc
out
and
ror
push
push
(bad)
mov
mov
and
test
nop
js
add
(bad)
ins
pop
add
mov
out
mov
inc
mov
lods
mov
cwde
inc
jmp
mov
scas
mov
(bad)
mov
lods
stos
jle
and
inc
adc
push
dec
inc
cmp
dec
xchg
into
or
test
shl
sub
jbe
xchg
(bad)
jge
sub
cmc
stc
mov
sub
ds
sahf
push
imul
cdq
(bad)
in
sub
jns
ss
pop
mov
pop
test
fnstsw
out
aad
fwait
gs
stc
cdq
push
stc
dec
push
fdiv
xor
lds
push
dec
mov
sub
clc
retf
xor
xchg
fsub
rcr
in
fisubr
push
icebp
dec
or
xchg
aaa
cdq
sbb
lea
(bad)
pushf
or
sbb
jmp
add
imul
lahf
jecxz
or
jno
retf
pop
std
jb
js
mov
test
cld
mov
jo
retf
sbb
mov
fcmovb
out
inc
mov
push
jne
jecxz
stos
dec
ret
pop
addr16
loop
out
inc
sti
pusha
sbb
outs
repnz
push
jbe
jg
int3
(bad)
cmp
sbb
dec
sti
push
hlt
(bad)
and
mov
or
(bad)
daa
in
pop
cmp
mov
or
xor
push
ins
daa
sbb
scas
gs
and
jb
popf
fild
mov
fnstsw
out
pop
push
and
retf
call
sbb
xchg
mov
repnz
lods
mov
add
fsubp
mov
add
out
lea
adc
mov
das
push
jg
popf
push
mov
sbb
shl
aam
pop
sub
loope
pop
aam
(bad)
stos
js
xchg
mov
pushf
lods
daa
mov
or
(bad)
dec
hlt
jb
add
aam
bound
mov
mov
mov
push
xchg
add
fs
retf
and
iret
fist
pusha
push
loopne
mov
push
ins
outs
xsaveopt
or
icebp
push
movs
(bad)
mov
xchg
xchg
lahf
mov
xlat
mov
xchg
(bad)
aaa
lods
js
push
jns
fdiv
es
cmps
leave
push
dec
outs
xchg
loope
ja
hlt
push
sub
mov
or
stc
xchg
mov
dec
cwde
aas
test
aam
aam
ret
pop
cmps
hlt
stc
repz
je
jg
cmp
push
repz
cwde
fsubr
sti
(bad)
cmps
xchg
adc
sub
jns
mov
jg
pop
pushf
in
sub
shl
popa
and
or
mov
lods
dec
adc
push
cmp
mov
inc
add
and
pop
push
inc
lahf
arpl
xor
cli
out
cld
cmp
ss
or
ins
fbstp
xor
cmc
mov
mov
loope
daa
sbb
(bad)
xchg
imul
test
cld
jge
mov
repnz
std
and
std
adc
sub
ins
(bad)
push
and
mov
cdq
jle
loop
imul
lea
sub
mov
pop
jbe
iret
mov
push
cwde
cmp
xchg
pop
lahf
dec
mov
sar
gs
(bad)
jmp
pop
sahf
sbb
push
and
dec
or
add
repnz
lsl
stos
out
jae
inc
xchg
mov
lds
aaa
dec
pushf
adc
inc
or
mov
sub
jl
cmp
sub
je
imul
xchg
and
sub
add
test
les
lock
or
add
push
movs
inc
ret
(bad)
mov
sbb
pop
mov
push
adc
movs
call
repnz
ret
inc
jae
loop
mov
ins
and
leave
rcl
(bad)
adc
xchg
data16
jo
lods
push
gs
je
repz
push
pusha
mov
mov
in
or
fiadd
dec
je
popa
mov
bound
(bad)
xchg
push
inc
stos
and
loop
loopne
dec
cmp
fs
xor
out
inc
xor
gs
add
sahf
mov
push
sbb
(bad)
jge
push
sti
push
lea
scas
movs
shr
ror
or
fst
ins
or
mov
scas
into
pop
mov
arpl
pop
dec
rcr
loop
stc
mov
out
lahf
imul
lods
jp
in
fidivr
std
imul
scas
push
pop
fimul
fmul
dec
sahf
sahf
jae
ror
stos
movs
enter
or
shr
mov
or
movs
fcmovne
aam
mov
and
jg
mov
sar
add
sub
in
pop
fdivr
call
xor
mov
add
lahf
and
test
sbb
cmps
push
je
or
sar
xor
in
dec
push
sbb
push
mov
rcr
btr
lods
cld
(bad)
jno
mov
cmp
jp
push
les
js
xchg
pushf
js
repz
ficom
pop
popa
je
adc
mov
fisttp
push
cli
jae
fucom
dec
(bad)
cmp
rcr
mov
cli
mov
(bad)
(bad)
movs
daa
pop
aam
mov
test
rcr
out
inc
dec
sahf
add
fsubp
push
data16
fst
push
sbb
inc
xlat
adc
jge
out
push
push
call
pop
or
mov
cmp
adc
pusha
outs
push
sub
cmp
repz
call
add
mov
pusha
out
push
inc
popf
mov
adc
js
pop
es
mov
or
movs
enter
or
jno
or
jo
sbb
and
xchg
cmp
sub
in
sub
arpl
jg
inc
push
push
jmp
loopne
sbb
lods
out
cmp
mov
aaa
xor
sti
(bad)
outs
mov
mov
ret
lods
add
xchg
mov
dec
sub
inc
daa
xchg
lods
aam
sbb
(bad)
mov
or
cwde
imul
jno
dec
imul
sub
dec
xchg
(bad)
cmp
xchg
out
inc
jne
pop
out
xchg
cmp
push
jo
dec
push
add
jns
push
jae
mov
arpl
or
popf
lds
pop
pop
loopne
cs
mov
aaa
call
inc
jns
scas
mov
dec
rcl
ja
les
pop
cmps
add
jmp
das
cwde
mov
call
cmps
in
repnz
fnstenv
aam
cs
(bad)
dec
icebp
imul
pop
dec
push
mov
(bad)
xor
aam
xchg
iret
aam
jo
push
bound
jbe
dec
rol
mov
sbb
jno
enter
imul
popf
sub
(bad)
test
loope
mov
rcr
cwde
add
retf
or
mov
pop
imul
xchg
out
and
lods
mov
bound
mov
push
inc
in
cdq
xchg
retf
fsub
dec
movs
addr16
push
sbb
das
pop
(bad)
cmp
mov
pop
jmp
add
add
ins
nop
movs
pushf
das
int
xlat
jnp
jecxz
sbb
popf
pop
xor
in
hlt
adc
sahf
scas
add
and
out
ds
jmp
outs
popa
std
xchg
test
sub
xor
push
int3
mov
mov
cmc
xor
mov
int
out
dec
sub
cmp
in
xchg
arpl
aad
lea
out
mov
inc
fcomip
adc
sbb
mov
ins
lods
mov
cmps
test
rcr
xchg
cs
jp
add
mov
adc
lods
mov
movs
add
and
popf
inc
xchg
cmp
pop
mov
loope
iret
xor
fstp
in
push
gs
dec
in
cmps
rcr
ret
(bad)
pop
push
les
ror
test
jne
inc
inc
sbb
dec
imul
jp
leave
icebp
jb
mov
lods
push
jbe
aaa
push
fwait
mov
pop
inc
ins
cmpxchg
inc
pop
(bad)
fld
dec
sbb
mov
rol
hlt
jne
adc
add
pop
mov
test
(bad)
or
stc
jnp
mov
addr16
aaa
daa
mov
sbb
and
push
hlt
ror
xchg
push
ds
xor
ja
fcomp
xchg
or
cld
fwait
pop
or
sub
rcl
fucomi
jmp
or
mov
jl
xchg
adc
jmp
push
cmp
sbb
ds
retf
test
mov
cmp
pop
and
pop
rcr
mov
out
or
push
out
cmp
in
xchg
test
imul
stc
(bad)
fadd
xor
movs
aad
les
mov
and
clc
cmp
hlt
and
sub
rcl
jo
mov
cmc
lea
je
aaa
xor
rcr
sar
jnp
push
jbe
jbe
lea
adc
mov
adc
das
out
inc
mov
dec
and
rcl
xchg
fidivr
std
sub
test
jo
jne
cmp
and
xor
movs
mov
gs
in
inc
cmp
inc
add
jne
push
icebp
dec
fs
jb
das
jmp
or
pop
(bad)
int
adc
inc
jno
fadd
push
jb
imul
adc
mov
push
push
and
mov
mov
rcl
cs
or
inc
into
pop
sbb
mov
ror
xor
(bad)
mov
loope
xor
dec
iret
lds
imul
enter
mov
movs
imul
retf
cmps
mov
push
cmps
xor
(bad)
cmp
jle
stos
pop
mov
mov
test
pop
xchg
ret
jb
call
pop
sbb
(bad)
into
pop
out
xor
retf
dec
sbb
xchg
into
sub
cmp
mov
pop
je
and
das
nop
xor
mov
(bad)
mov
call
ins
jmp
test
pushf
outs
xor
iret
ror
mov
xor
jo
dec
dec
adc
mov
pushf
repnz
(bad)
ret
fsub
stos
jp
pop
aam
sbb
mov
lods
push
jno
call
push
scas
mov
push
shl
loop
mov
cmps
pop
jmp
fdiv
loopne
arpl
push
stos
pop
imul
out
sti
pop
mov
mov
ror
adc
and
std
cmps
cmc
cmp
out
call
test
sti
mov
sbb
sub
xor
scas
out
pop
mov
outs
pop
mov
mov
pop
adc
xlat
and
or
inc
mov
sbb
push
rcl
(bad)
jbe
imul
mov
push
in
aam
mov
add
xor
pop
jmp
into
(bad)
jmp
mov
sbb
jecxz
adc
sti
sbb
xchg
jb
mov
dec
push
clc
sub
adc
sub
xchg
dec
mov
mov
cmps
sar
out
mov
xchg
dec
movs
sub
out
sub
aas
sar
mov
outs
mov
inc
sbb
pop
out
sbb
out
mov
sbb
arpl
aam
xchg
fisub
or
sbb
add
jmp
push
ja
(bad)
movs
mov
daa
bound
pusha
jecxz
arpl
imul
movs
mov
rol
movs
mov
pop
and
inc
out
or
xor
sar
mov
xchg
pop
dec
xchg
or
cmp
pop
cmp
cmps
daa
mov
xchg
mov
test
cwde
js
fiadd
push
pusha
inc
inc
data16
cmp
xor
clc
pop
pop
inc
xchg
stc
or
xchg
fcomp
add
add
mov
add
dec
or
call
ret
cmp
loope
lods
pop
inc
cwde
or
cmp
hlt
shl
xchg
push
xor
cmps
inc
fistp
and
xor
pusha
mov
add
jno
and
jo
ret
int3
ror
jg
xchg
fdiv
imul
sbb
mov
retf
shl
stos
or
sub
or
test
push
jecxz
cmps
je
mov
pop
add
dec
jmp
mov
sbb
push
cwde
push
int3
xchg
popf
pop
clc
mov
mov
retf
cld
dec
cs
push
jmp
cmp
(bad)
shl
mov
adc
cdq
and
dec
xor
push
int3
fisub
jp
mov
sti
and
mov
jae
je
push
mov
les
and
cmp
(bad)
mov
and
mov
daa
jb
int3
daa
jns
push
call
jbe
clc
push
fwait
repz
loopne
std
out
and
mov
push
jl
dec
(bad)
sbb
push
movs
loopne
jns
sbb
leave
mov
lods
and
push
jp
push
push
in
push
fldenv
lods
clc
bound
test
shld
fiadd
dec
icebp
mov
out
ret
mov
rcr
jno
ins
cmp
into
neg
cmp
sbb
imul
add
jmp
xchg
or
cmp
call
inc
cld
xlat
xor
jecxz
xchg
clc
int
(bad)
addr16
mov
pushf
dec
(bad)
cdq
inc
sar
inc
inc
stos
stos
or
mov
push
repnz
or
(bad)
call
pop
int3
adc
(bad)
mov
cld
shl
inc
and
jne
adc
push
mov
test
push
rcl
xor
adc
mov
sbb
xchg
jge
repz
xchg
out
fs
xor
not
sar
inc
inc
(bad)
daa
jp
inc
push
dec
push
aas
adc
sbb
push
sub
lods
or
loope
(bad)
mov
cmp
xor
call
outs
fild
(bad)
icebp
adc
(bad)
push
je
mov
in
out
xchg
loope
dec
add
mov
dec
mov
retf
ficomp
imul
(bad)
imul
inc
or
movs
pop
lock
xor
add
or
arpl
pop
xor
data16
stc
lods
arpl
cmp
mov
mov
xor
in
cdq
xor
aad
ror
pop
mov
push
inc
int3
mov
arpl
je
xchg
xor
popf
push
inc
add
mov
cmps
call
fnstsw
xor
out
xchg
sbb
lock
sub
mov
fild
push
nop
pop
adc
inc
push
inc
js
lahf
jmp
sbb
ja
pusha
repz
fcomp
push
pop
(bad)
pop
(bad)
push
sbb
dec
xor
mov
jno
mov
add
pusha
fisub
loopne
aas
add
repnz
jae
pop
xchg
repz
fcmovnbe
pusha
mov
fwait
adc
dec
adc
mov
sub
aas
mov
leave
push
hlt
push
ror
cmp
dec
push
cwde
xor
jg
sbb
into
xor
loop
add
jl
push
data16
mov
mov
(bad)
and
xchg
in
push
(bad)
div
gs
repnz
push
mov
pop
call
(bad)
shl
jno
lock
pop
inc
div
jmp
test
lea
mov
add
sbb
mov
cmps
push
inc
xchg
sub
jle
dec
test
jae
pop
(bad)
xchg
jne
add
xor
push
pop
push
or
ss
in
sbb
or
jmp
mov
mov
jne
rcr
es
adc
xor
pop
cmp
(bad)
std
popa
push
fwait
pop
ror
inc
imul
jg
call
pop
sub
pop
mov
aad
cmp
mov
das
sub
sbb
rcr
je
dec
int3
adc
fidivr
es
or
xor
out
mov
jmp
call
mov
(bad)
pop
xchg
or
pop
aad
out
jmp
xor
mov
ins
xor
and
hlt
jae
push
fsave
dec
rcl
jg
inc
push
das
in
in
std
jp
std
adc
lods
popf
sbb
aam
rcr
in
xchg
fstp
inc
jno
cmp
mov
stos
paddb
pop
mov
mov
ret
rcr
outs
retf
xchg
pop
(bad)
xchg
cmp
push
outs
je
inc
jb
int
push
mov
movs
fst
ret
pop
jne
pop
lods
and
mov
or
add
inc
mov
pop
test
rcr
mov
out
jb
(bad)
or
dec
arpl
ss
in
ss
stos
sahf
xor
in
retf
data16
out
inc
jmp
jmp
push
iret
jns
fwait
jns
icebp
sbb
pop
(bad)
clc
pop
ja
js
mov
pop
mov
and
sub
(bad)
adc
pusha
jmp
div
je
mov
in
scas
xor
dec
xchg
and
sbb
mov
cmc
push
xchg
and
(bad)
(bad)
retf
mov
or
pop
aaa
pop
or
lea
xor
addr16
test
xlat
js
and
call
fistp
add
xor
jge
jmp
cld
mov
cmps
sbb
test
int3
xchg
and
cld
push
in
dec
inc
mov
mov
cmp
jbe
movs
dec
xor
(bad)
sub
cld
movs
fwait
pop
or
sahf
lods
push
pop
inc
bt
test
and
inc
or
jmp
loopne
mov
mov
sbb
les
retf
fist
outs
jle
mov
mov
jne
inc
cmp
cdq
cmc
dec
xchg
sbb
mov
rcr
add
fcmovbe
push
or
jne
sbb
les
cwde
and
jno
jmp
mov
add
fcmovnb
in
jns
inc
dec
shr
mov
into
adc
mov
push
push
push
mov
retf
sbb
push
fsubr
ss
cli
and
mov
pop
loop
jne
pop
iret
pop
ins
es
fdivr
imul
mov
outs
lahf
sbb
gs
mov
leave
mov
mov
xchg
sbb
cmp
call
mov
scas
out
jae
fmul
into
push
ret
pusha
arpl
and
retf
jbe
stos
cmc
bndldx
(bad)
adc
cmp
rcl
pushf
mov
mov
sub
ret
fwait
psllw
xlat
jle
push
sbb
push
cmp
test
mov
das
pop
ds
mov
hlt
or
ss
adc
cmp
ins
push
inc
ins
pop
pushf
sbb
add
cs
jno
cmp
add
and
mov
xor
lods
or
in
cmp
add
adc
jae
inc
mov
or
mov
jmp
cmp
mov
pop
and
sbb
push
jmp
loope
(bad)
inc
aaa
pusha
cmp
xor
lock
pusha
push
adc
out
cwde
fstp
dec
lds
jbe
loopne
rol
ja
mov
movs
pop
mov
xor
daa
cmp
inc
sar
xor
xchg
dec
inc
sahf
je
xor
and
call
push
fsub
dec
fwait
xor
lods
pop
mov
lods
pop
cli
ss
push
fild
pushf
les
cmp
mov
fcomp
dec
add
into
pop
push
(bad)
sahf
pop
stos
mov
cmp
xor
(bad)
and
pop
jb
test
in
sar
xor
movs
loop
xchg
imul
movs
mov
mov
int
mov
lods
popa
mov
jo
data16
dec
jbe
add
dec
push
inc
inc
cwde
and
add
or
repz
dec
xchg
jo
pop
jae
test
and
es
icebp
jbe
aad
aaa
jno
shl
js
(bad)
int3
jne
mov
outs
fistp
shl
sbb
xchg
mov
dec
sub
js
loop
jae
add
xor
mov
inc
xchg
xor
call
mov
or
imul
ret
sub
lods
out
xchg
icebp
js
sbb
cwde
push
mov
pop
(bad)
mov
aam
mov
ins
dec
dec
push
mov
sti
sbb
adc
jecxz
pop
push
les
xor
xlat
push
not
lods
inc
retf
fstp
mov
add
addr16
data16
ja
outs
test
mov
lahf
cdq
pop
xchg
sub
mov
(bad)
sar
fisubr
cwde
sub
sub
jp
inc
dec
adc
out
fadd
xlat
sbb
jmp
push
dec
mov
dec
mov
jno
push
inc
inc
inc
lahf
sub
cmps
or
mov
sbb
scas
hlt
aas
stc
repz
loop
sbb
or
pop
(bad)
fidiv
jnp
imul
sbb
ins
(bad)
aaa
inc
mov
lahf
aas
cld
dec
cmp
jg
jbe
into
ret
pop
inc
aaa
clc
xor
xor
jle
gs
xchg
in
nop
stos
mov
and
mov
pushf
adc
jmp
mov
repz
jl
adc
leave
sub
pusha
inc
je
bound
push
dec
ins
mov
mov
or
xor
sub
xlat
das
fistp
cmp
push
fst
dec
rol
and
jmp
fdivr
jne
imul
cmp
into
loopne
loop
es
inc
sbb
loopne
push
cmp
jae
leave
(bad)
ret
aam
xchg
mov
daa
ja
outs
js
sbb
stos
mov
fisttp
sub
lea
clc
sbb
mov
mov
mov
les
adc
js
and
jp
jle
cmp
aam
(bad)
stos
mov
and
sub
test
xchg
jge
pushf
xor
out
stos
leave
daa
(bad)
sub
push
imul
and
call
inc
sbb
mov
dec
inc
scas
xchg
loop
sub
and
out
fldenv
loopne
cld
icebp
hlt
xchg
pop
scas
call
xchg
jns
ins
inc
jl
or
(bad)
es
repnz
mov
lods
mov
jne
push
push
test
lahf
xlat
fmul
outs
pusha
sub
xor
js
push
jle
jmp
call
or
jo
repz
loopne
mov
daa
push
inc
movs
loopne
mov
loope
sbb
jno
jl
mov
jp
jnp
outs
push
dec
sti
sbb
or
sti
retf
ficom
(bad)
mov
lock
mov
rcr
int3
les
fimul
adc
repnz
or
and
bound
mov
mov
xchg
mov
xor
and
push
cmp
stos
fs
push
ins
jbe
adc
jns
dec
(bad)
iret
out
retf
inc
shl
(bad)
mov
loopne
mov
inc
ffree
mov
imul
outs
push
aas
push
add
loope
lods
or
movs
stos
fwait
xor
aaa
das
(bad)
cld
add
sub
(bad)
call
inc
mov
scas
cmp
push
jle
mov
ja
repnz
pop
and
mov
or
pusha
pop
xchg
inc
xor
sbb
fidiv
jmp
movs
scas
push
js
iret
psadbw
xor
(bad)
mov
mov
add
xchg
scas
sbb
mov
cmp
xor
pushf
ret
pop
inc
dec
jnp
pop
int3
or
(bad)
aaa
xor
imul
(bad)
test
push
adc
jge
xchg
xchg
push
test
sub
pop
ins
hlt
add
nop
push
(bad)
rol
out
icebp
add
xchg
or
repnz
and
pop
arpl
cli
and
dec
sub
dec
stos
loope
jb
(bad)
ror
mov
pop
ret
aas
loopne
push
inc
jno
fadd
mov
stc
(bad)
hlt
and
add
jl
(bad)
mov
jne
gs
fisub
xchg
leave
add
gs
or
mov
bound
into
push
add
xchg
popa
int
leave
jno
jo
and
xlat
sub
sub
cmps
movs
int3
push
sbb
push
mov
mov
leave
sub
xchg
add
pushf
jl
adc
das
sub
pop
ins
rcl
cmc
push
xchg
jle
dec
(bad)
imul
sahf
cld
inc
jno
mov
stos
inc
mov
or
hlt
shl
in
bound
mov
jecxz
mov
pop
dec
rcl
dec
xor
adc
sbb
jbe
cmp
fimul
es
pop
or
and
push
jmp
out
iret
lahf
adc
ds
jecxz
pop
fstp
stos
ror
(bad)
jge
or
xchg
cmp
pop
or
(bad)
inc
push
add
push
aam
and
xlat
stc
rol
cmp
push
adc
lahf
ror
in
lods
jge
ja
mov
jge
jae
sahf
lds
dec
xchg
test
sar
repz
sub
fimul
push
xor
xrelease
das
es
cmc
je
dec
mov
test
xor
enter
jbe
mov
data16
bound
cmp
mov
mov
ins
je
push
xor
loopne
jecxz
xchg
into
mov
out
jmp
in
stos
cdq
sub
sub
xchg
jbe
sbb
mov
adc
cmp
sbb
or
push
push
lahf
sbb
and
leave
dec
mov
test
fs
jmp
jne
shr
or
xchg
loope
add
in
mov
adc
clc
retf
xor
push
aad
mov
out
jg
jge
pushf
das
(bad)
mov
imul
inc
mov
dec
jle
mov
mov
cmps
aam
inc
xchg
cmps
(bad)
inc
adc
add
jmp
xchg
dec
or
leave
lds
adc
mov
mov
test
pop
or
inc
pop
enter
mov
out
jne
jg
cmps
test
or
and
cmp
addr16
dec
fstp
add
aad
mov
jae
sbb
cmp
mov
push
pop
out
outs
movs
fidivr
in
sbb
sbb
inc
fwait
js
out
xchg
not
inc
(bad)
or
cdq
nop
push
fcomp
adc
add
jmp
ficomp
outs
mov
stc
aad
retf
sbb
or
rcl
dec
cmps
pop
test
mov
jae
je
sub
in
cmp
je
sbb
ret
fstp
loopne
loopne
ins
test
push
xchg
icebp
enter
popa
dec
neg
mov
xchg
aam
popf
test
jl
rcr
pop
ret
fwait
adc
jb
sub
adc
inc
imul
call
pop
movs
inc
xchg
lods
mov
add
mov
int
mov
int
xchg
mov
xchg
adc
sub
(bad)
out
ret
dec
sub
add
in
sbb
push
xlat
pop
sti
push
test
sub
xchg
cli
pushf
cli
aam
inc
call
icebp
sti
add
imul
aaa
jb
mov
pop
sub
sbb
popf
aad
test
mov
aas
xchg
push
outs
push
movs
retf
adc
xchg
rol
cli
jns
pop
mov
das
retf
xchg
(bad)
xor
mov
jmp
cmp
fbstp
(bad)
fisub
mov
xor
jmp
or
dec
std
sahf
test
mov
sbb
mov
or
cmps
push
jne
add
lods
or
lea
cmp
cmp
fcomip
xor
repz
sahf
std
pop
pop
stos
fnstcw
addr16
shl
cli
and
mov
push
mov
imul
hlt
xor
add
push
xlat
pop
js
fs
push
cmc
push
out
js
fldcw
mov
xor
xor
in
push
add
sub
push
cmp
leave
mov
inc
je
cli
and
cmp
fwait
and
and
out
sbb
lock
adc
(bad)
outs
mov
out
jecxz
movs
pop
loope
xor
mov
mov
in
mov
adc
inc
inc
jmp
mov
out
mov
shl
loop
imul
ror
sub
xchg
nop
mov
icebp
lds
je
pop
fucom
pop
test
sti
push
out
aam
mov
je
mov
pop
dec
push
adc
js
sbb
ds
or
aas
add
test
lock
adc
mov
cld
fbld
out
nop
xor
and
push
mov
test
hlt
test
mov
mov
adc
push
js
cmp
in
pop
cmp
jnp
mov
jecxz
add
xchg
xlat
sbb
pop
cmps
inc
sbb
(bad)
cld
and
ja
fbld
fnstsw
pop
cs
push
aaa
in
out
movs
sbb
sbb
scas
dec
lods
in
pusha
stos
out
cmp
fs
mov
cmp
fdivr
jbe
pop
pop
into
mul
push
movs
sbb
pop
dec
mov
xor
fst
sbb
push
dec
mov
(bad)
sub
xchg
inc
inc
xchg
out
repz
clc
and
aaa
ror
dec
or
and
mov
push
xchg
mov
push
pop
and
stc
xor
lahf
fsubr
fstp
or
out
add
stos
mov
mov
inc
loope
enter
into
sti
out
outs
push
mov
xchg
pop
fcomp
push
ficom
cli
push
dec
sahf
sbb
adc
mov
push
jb
daa
sbb
add
(bad)
dec
and
sub
iret
dec
sub
pop
sbb
repz
push
pusha
loopne
scas
dec
in
jmp
test
stc
and
sbb
mov
pop
test
test
into
sub
inc
xor
clc
mov
movs
out
fnsave
out
adc
test
sbb
or
xchg
xor
iret
sub
cmp
inc
mov
jge
popf
adc
in
shr
jbe
fcomp
in
pop
lock
repz
ret
movs
in
cwde
in
or
mov
outs
test
or
push
push
stos
mov
inc
int
stc
push
std
pop
dec
jle
fldenv
push
movs
jmp
ror
nop
retf
cdq
out
sub
in
mov
xchg
jmp
fsubr
(bad)
sub
ret
shl
sub
movs
sbb
jl
lds
cdq
out
dec
fcmovbe
leave
stos
jecxz
pop
mov
add
xchg
js
out
cmp
xlat
push
jo
dec
stos
data16
rol
dec
icebp
(bad)
inc
loope
and
or
sub
rol
sub
adc
pop
push
leave
scas
xor
aam
push
inc
mov
mov
outs
leave
pop
sbb
inc
jb
add
jne
dec
pop
xor
call
ins
inc
lock
push
pop
cmps
adc
bound
xchg
sub
popf
mov
jbe
inc
push
jnp
aas
xor
sub
xchg
retf
dec
jnp
pop
xor
mov
push
xchg
jns
push
xor
pop
dec
cmp
data16
pop
test
stos
in
pop
mov
js
jo
fidiv
in
sub
lock
out
cmp
xchg
clc
and
clc
cmp
mov
lods
pop
mov
jnp
xchg
xchg
cld
adc
mov
mov
test
xor
movs
mov
inc
lods
test
inc
movs
das
sub
jne
stos
pop
mov
cld
sete
sahf
mov
and
inc
mov
jb
xrelease
push
mov
mov
mov
xor
in
imul
pushf
sub
xor
and
mov
call
mov
mov
cld
scas
fistp
rcr
ror
shl
ret
jae
sbb
out
retf
outs
sub
test
add
lahf
test
lahf
cs
fiadd
popa
jae
in
xchg
cli
and
bndldx
inc
lods
pusha
push
xchg
daa
mov
ds
mov
das
arpl
sahf
sar
cld
mov
pop
movs
in
fdivr
cmp
jno
xchg
and
adc
aaa
call
dec
mov
pushf
mov
fistp
pop
adc
add
adc
test
int
ret
pop
popf
mov
xor
hlt
jle
xchg
inc
dec
cmp
rol
stos
sbb
jo
inc
mov
ret
stos
mov
push
adc
xchg
jl
hlt
push
inc
jne
add
sbb
xor
cmps
ins
arpl
loop
sub
(bad)
rcl
sub
cmp
gs
mov
shl
icebp
dec
or
daa
leave
mov
(bad)
loop
or
adc
(bad)
or
xor
lock
dec
push
pop
mov
ds
xchg
retf
cmp
dec
cmp
sub
push
repz
dec
xlat
popf
jl
fsubr
mov
jl
std
in
lods
(bad)
jle
mov
pop
cmps
mov
add
mov
retf
(bad)
mov
outs
(bad)
cmp
mov
cmp
cs
jle
cli
mov
push
mov
outs
(bad)
out
pushf
mov
inc
mov
imul
mov
(bad)
and
jg
push
and
adc
fist
cmp
and
mov
rol
nop
fcmovnb
add
cmp
jns
jne
or
and
adc
pop
sbb
fldcw
cmps
adc
adc
xchg
je
sbb
popa
jecxz
daa
cmp
mov
push
pop
cmp
dec
push
mov
xor
frstor
mov
inc
jns
mov
dec
adc
mov
fstp
mov
push
sub
sub
movs
fldenv
in
adc
lods
dec
out
or
sub
and
pop
sti
das
into
cmp
outs
sub
sbb
jmp
std
fidivr
push
fild
jns
add
dec
cmc
jbe
and
mov
jmp
clc
add
inc
cli
jbe
mov
inc
add
sbb
pop
or
loopne
outs
ds
cmp
mov
or
mov
dec
test
push
xchg
push
add
push
xor
and
addr16
dec
sbb
fcmove
aaa
jecxz
sti
in
movs
pushf
lods
jg
cmp
push
jae
adc
(bad)
mov
jmp
mov
loopne
mov
cmp
scas
rcr
lock
retf
pop
nop
icebp
jns
xor
sahf
xchg
popa
sbb
iret
cmp
xor
cmps
cmps
cmps
xchg
les
jns
or
add
or
add
mov
mov
repz
lds
jle
mov
push
jno
push
sub
add
sub
(bad)
adc
sub
and
movs
sbb
mov
jnp
rol
dec
cmp
jl
or
sar
xchg
xchg
clc
retf
pop
enter
data16
outs
sbb
cli
leave
xor
jecxz
xchg
and
or
(bad)
mov
loop
inc
xchg
jb
lods
xchg
xchg
stos
inc
std
xor
or
addr16
inc
xor
inc
push
imul
mov
aas
sbb
jb
fchs
push
imul
cmp
icebp
jb
pop
add
mov
xchg
pop
push
pop
aas
dec
cmp
sbb
je
xchg
jnp
nop
mov
push
mov
fdiv
rol
mov
fstp
push
in
aas
sbb
inc
shl
cs
(bad)
fnstenv
repnz
test
fsub
and
xor
setbe
hlt
dec
adc
sbb
cmp
aas
movs
sahf
test
jmp
mov
xor
and
sub
lds
out
mov
and
pusha
dec
scas
pop
and
pop
sub
jnp
(bad)
mov
push
popa
ret
call
leave
pop
inc
mov
mov
push
xchg
mov
or
jmp
data16
data16
lods
out
xor
call
mov
out
div
popf
in
outs
inc
lods
test
inc
mov
sub
add
js
bound
mov
adc
loopne
test
addr16
jns
jnp
icebp
push
push
out
icebp
jl
sub
cmp
push
in
test
hlt
cmp
jne
fucomi
fisttp
inc
pop
add
not
jnp
dec
das
sub
aas
pop
sub
push
inc
push
not
ret
dec
fwait
pusha
xor
inc
mov
lahf
lds
dec
mov
pop
add
xor
fadd
pop
(bad)
inc
push
xor
or
and
out
aas
and
stos
fisubr
and
add
call
test
pop
rep
sub
xor
push
xchg
add
mov
(bad)
push
cmps
pop
adc
shl
test
imul
jmp
xor
ja
add
mov
lds
fnstcw
mov
(bad)
jmp
cli
fld
rcl
ss
lods
les
add
push
inc
leave
push
movs
jl
sub
fidiv
jnp
cwde
fiadd
nop
dec
jnp
jecxz
out
inc
cmp
mov
je
daa
repz
jmp
cli
repz
movs
loope
jns
js
mov
test
iret
pop
(bad)
test
ds
ja
(bad)
cmc
xchg
movs
daa
inc
push
les
or
jne
push
xchg
sub
sbb
scas
sub
and
xchg
pop
aad
popf
into
or
in
pop
arpl
xchg
or
xchg
xchg
jnp
jmp
pop
das
sub
int
mov
(bad)
les
lahf
xchg
add
jle
repz
pushf
ins
inc
hlt
fsubr
pop
(bad)
inc
pop
es
aad
xchg
mov
in
and
pop
jmp
lods
enter
jmp
mov
pop
inc
aam
xchg
push
cmp
sbb
and
jo
or
popa
and
daa
test
push
arpl
lahf
push
call
inc
pushf
and
pushf
adc
out
cdq
clc
fwait
in
dec
icebp
add
sub
jmp
push
mov
mov
lea
imul
mov
mov
and
pushf
cmc
adc
ret
sub
add
test
(bad)
call
fcmovbe
and
add
mov
sub
adc
add
xor
xchg
test
pushf
mov
pop
jbe
adc
test
mov
in
or
mov
test
push
push
std
or
mov
lahf
(bad)
mov
ins
jmp
sub
xchg
das
jl
out
pop
les
enter
enter
and
icebp
sub
cmp
inc
aad
jb
xor
(bad)
in
mov
js
pushf
jbe
sub
jbe
push
into
sub
and
push
cmps
arpl
ins
jno
les
dec
(bad)
and
or
sub
mov
push
movs
mov
hlt
jb
push
or
sar
sub
fidiv
clc
mov
or
pusha
and
lods
and
xchg
add
jno
test
xchg
in
xor
jb
sbb
aad
fnstcw
cdq
cs
hlt
jns
repz
pusha
je
aam
cmps
add
fisub
mov
lock
jge
dec
sub
fs
cdq
lock
mov
or
jle
jmp
(bad)
sub
inc
pop
add
add
test
and
retf
leave
cs
dec
sbb
jp
push
cld
icebp
add
pop
sub
cld
sub
dec
fmul
mov
jnp
shl
sbb
or
sub
loopne
push
cmc
daa
pusha
jp
cwde
lea
sub
retf
push
dec
fwait
add
xor
cmp
adc
iret
sub
movs
mov
push
xor
cmp
scas
dec
iret
cwde
cmc
int3
mov
leave
ficomp
inc
sub
(bad)
out
adc
not
jne
mov
ss
mov
mov
jbe
(bad)
in
popa
push
lea
pop
call
adc
sub
shl
mov
hlt
cmc
or
push
jle
sub
call
mov
mov
imul
fdivr
out
sub
dec
loopne
mov
jb
cwde
mov
mov
fs
cld
js
or
stos
lds
sub
mov
and
repnz
sub
test
pop
cmp
inc
adc
inc
mov
mov
or
inc
jge
push
adc
cwde
lea
dec
sub
adc
sbb
cmp
adc
fild
jecxz
fsubr
mov
xchg
or
bound
xor
mov
(bad)
push
ins
iret
out
int3
push
cmps
lods
or
outs
jbe
sbb
add
enter
xor
in
les
xor
in
pop
mov
imul
loop
loopne
(bad)
push
loopne
aad
gs
mov
or
movs
imul
pusha
push
xlat
xlat
arpl
pop
loop
xor
jl
dec
and
repnz
test
jg
or
jbe
in
mov
in
lods
lock
pop
inc
pop
ja
push
mov
(bad)
sbb
daa
push
jo
retf
rdmsr
sub
lahf
add
sbb
ins
or
and
add
hlt
xchg
int3
fimul
jb
xchg
out
add
jo
ja
in
mov
fbstp
scas
popf
push
sub
imul
jmp
outs
sub
jmp
mov
adc
sub
push
xchg
mov
add
mov
loopne
xor
sub
addr16
xor
fs
pop
add
pusha
mov
movs
in
(bad)
mov
ins
pop
pop
ds
adc
pusha
fwait
xchg
jbe
fcomp
das
xor
test
(bad)
out
loopne
pop
or
dec
sbb
push
rol
gs
inc
mov
and
and
mov
inc
jg
jne
fst
outs
jge
sbb
out
shl
xor
cmp
xchg
int
popa
fwait
loop
scas
sti
repnz
fistp
rol
cmp
xor
jmp
adc
mov
and
cmps
adc
mov
xchg
mov
imul
iret
test
dec
cmp
xchg
jge
shl
or
mov
sbb
or
dec
mov
enter
addr16
sbb
cwde
mov
lock
mov
ja
mov
sti
repz
mov
(bad)
mov
mov
out
sbb
xor
xor
mov
xor
adc
mov
fwait
mov
iret
(bad)
xor
and
xchg
and
cmp
aad
ja
enter
data16
jne
sbb
push
cmp
in
movs
mov
xchg
xor
data16
cld
pop
imul
mov
adc
std
dec
in
loop
or
jmp
outs
jmp
mov
int3
pop
cmp
mov
adc
lahf
sub
out
(bad)
adc
xchg
add
adc
adc
jp
sbb
cmp
call
out
mov
inc
cmc
pop
icebp
mov
cmp
retf
fist
stos
dec
scas
or
mov
movs
push
and
xchg
xlat
jo
jmp
dec
pop
mov
jne
int
sbb
xchg
lock
pushf
add
and
into
popf
loope
les
retf
sub
nop
or
xor
mov
fs
cld
ret
or
(bad)
in
pop
pop
xchg
jl
mov
call
or
gs
inc
mov
and
pop
push
test
and
jecxz
inc
bound
aas
xor
pop
and
pushf
(bad)
push
fldenv
dec
xchg
xor
jns
or
add
cmp
xor
mov
arpl
inc
mov
adc
inc
xchg
push
adc
mov
in
push
test
pop
lds
xor
mov
inc
outs
test
popa
clc
out
jg
cwde
or
(bad)
int
aaa
out
xchg
xchg
fwait
clc
sbb
xchg
cmp
movs
mov
or
adc
pop
pop
std
xchg
adc
rcl
stos
jg
outs
(bad)
dec
pop
jle
int3
fcmovbe
aad
pop
cs
inc
push
pop
cmp
sar
sub
dec
cdq
mov
arpl
in
in
xor
xor
cmps
cmp
inc
pop
mov
repz
sub
(bad)
jns
(bad)
cmps
xchg
inc
xor
add
xor
shr
aas
mov
loopne
xchg
call
dec
inc
push
repnz
inc
fstp
mov
jecxz
mov
jb
adc
inc
or
(bad)
repz
lea
cmp
ins
sbb
mov
in
push
jge
repz
xor
outs
mov
imul
or
sbb
pushf
cld
push
daa
mov
(bad)
pop
fidiv
(bad)
dec
push
loop
push
jno
addr16
int
sub
int3
call
pop
ror
pop
hlt
ret
jmp
inc
adc
repnz
sar
sub
iret
dec
popf
dec
mov
sar
jbe
sub
xchg
cmps
into
push
in
push
jns
hlt
add
loope
in
xor
jle
arpl
imul
or
(bad)
aam
jnp
repnz
movs
cld
scas
call
add
dec
pop
repnz
cmp
cmps
cli
push
(bad)
mov
pop
ja
sub
pop
aad
sbb
div
mov
lds
sbb
push
cmp
dec
pop
cli
ror
shl
sbb
adc
repz
int
retf
lock
mov
xchg
jp
movs
sar
fwait
mov
xor
(bad)
shl
or
adc
jno
push
repnz
xchg
sbb
sahf
fstp
push
cld
dec
mov
xchg
ret
inc
(bad)
pop
shl
sub
call
into
shl
loopne
sub
shr
leave
or
daa
pop
mov
push
cmp
ss
mov
xor
jmp
sbb
in
in
pop
jmp
mov
loopne
iret
sub
mov
test
out
ret
scas
and
in
pop
cmp
cmp
xor
push
popf
lahf
loopne
jmp
push
repnz
inc
cli
jno
fdiv
aaa
ficomp
loopne
(bad)
cmps
add
js
jns
jg
test
cmp
loop
out
add
sbb
sbb
xchg
aaa
pushf
mov
ins
xchg
pop
fnop
mov
push
or
dec
sbb
inc
iret
and
idiv
mov
sahf
xlat
es
in
jo
ss
stos
inc
out
push
xor
cmp
cmp
ret
gs
outs
das
and
pop
adc
pop
mov
mov
popf
sti
mov
pop
xor
mov
scas
call
cmp
aad
mov
adc
add
into
pop
call
out
sbb
xor
loope
mov
inc
add
pop
jg
pop
push
js
or
sbb
cli
hlt
call
int3
push
cmps
add
cwde
sbb
retf
dec
inc
mul
loope
movs
shr
ins
sar
fwait
dec
add
push
movs
adc
or
mov
jmp
js
mov
pop
dec
xchg
in
ds
jne
cmp
jge
rep
daa
push
dec
ds
jmp
jle
gs
test
or
xchg
pop
cmc
jge
int
xchg
add
ss
out
movs
sbb
dec
sbb
push
lock
bound
add
add
shr
fstp
jo
xchg
dec
cdq
into
enter
xor
sub
pop
sbb
xchg
mov
ret
ds
enter
sbb
adc
and
outs
pushf
inc
push
stc
sbb
pop
or
inc
xor
int
es
repnz
loopne
call
mov
mov
jns
cmp
jp
adc
and
jb
xchg
mov
push
push
loop
mov
xor
lock
scas
xchg
add
jge
call
inc
dec
cwde
in
bound
mov
sbb
je
inc
jg
addr16
out
push
sbb
cmp
jl
sar
dec
or
xchg
sub
mov
scas
ret
je
stos
(bad)
or
lock
adc
cli
mov
pop
push
daa
sahf
(bad)
xlat
pop
mov
es
out
into
sub
repnz
push
mov
sbb
popa
mov
mov
mov
in
add
adc
lods
stc
jne
ins
shr
jmp
adc
shr
cdq
leave
sub
aad
jmp
dec
pop
je
xchg
(bad)
mov
and
pop
out
cmp
call
(bad)
inc
sti
loop
pop
mov
pop
sub
cmps
cmp
lahf
push
inc
jp
push
and
sub
std
cmp
add
xor
cld
sahf
outs
bound
cmp
inc
xchg
rol
pop
xor
rcr
mov
xlat
xchg
or
imul
mov
push
sub
sti
jl
xor
add
jecxz
xor
push
(bad)
retf
in
sahf
enter
pop
and
std
mov
jge
stos
pop
imul
cld
cmp
int3
adc
scas
(bad)
movs
imul
out
xor
or
xchg
jecxz
rcr
jne
adc
arpl
xchg
cmps
clc
ret
leave
push
lods
mov
aam
ja
adc
push
pusha
inc
mov
mov
ins
movs
jg
arpl
iret
test
mov
cmp
lods
pop
adc
xchg
sbb
jp
hlt
push
(bad)
cdq
and
adc
dec
xchg
add
jne
xor
xor
loope
xor
dec
fwait
xchg
mov
inc
movs
xchg
pusha
aaa
and
cmp
add
jb
hlt
pushf
sub
shr
arpl
(bad)
adc
out
push
pop
pop
mov
push
ret
jbe
mov
xchg
mov
call
mov
push
(bad)
mov
pop
xor
mov
pop
das
xchg
xchg
fsub
dec
mov
repz
fwait
cmp
gs
sub
int
inc
and
mov
xchg
(bad)
shl
retf
inc
ret
cdq
dec
mov
adc
mov
or
cmp
inc
ja
add
adc
(bad)
xlat
sub
mul
adc
out
loop
push
daa
xor
push
jle
push
dec
call
scas
push
sti
sub
adc
pop
pop
std
test
add
in
in
xor
mov
and
loop
shr
mov
cli
repnz
bound
loopne
sub
loop
ror
xchg
push
daa
inc
xor
pop
std
mov
push
pop
aas
ins
jne
jecxz
xchg
add
into
enter
ret
lds
inc
retf
pushf
dec
sub
pop
mov
xchg
aad
add
arpl
cmc
mov
aad
and
rcr
or
pop
mov
cmp
cmps
cmp
outs
neg
and
ins
jle
pop
cmps
adc
or
jg
iret
pushf
pop
push
push
mov
sub
and
adc
dec
lds
push
jbe
push
push
xchg
ja
jmp
cmp
xchg
pop
lods
stc
jg
jae
sbb
cmc
mov
ja
mov
xchg
stos
inc
add
pop
(bad)
call
xor
mov
xchg
sub
sti
and
push
push
or
scas
stc
xlat
stos
fld
push
cmps
xlat
or
cmp
ror
cmp
ins
mov
call
fucomp
mov
sbb
xchg
xor
lock
jo
jg
ja
movs
jo
repnz
fidiv
scas
fcmovne
pop
xor
xchg
xchg
aad
xchg
mov
shr
scas
fs
mov
adc
js
sbb
mov
adc
retf
cmp
xor
in
call
enter
mov
or
mov
xchg
inc
adc
mov
lock
adc
les
xor
mov
add
jns
mul
(bad)
out
inc
movs
scas
sub
dec
aaa
push
cwde
jbe
cmp
in
sub
adc
and
mov
sti
mov
or
dec
xor
xchg
movs
pusha
xchg
push
shr
imul
inc
jle
jbe
jmp
inc
sub
or
and
mov
jnp
xor
dec
pop
sub
(bad)
in
cmp
ds
push
mov
dec
out
fisttp
out
fisubr
add
push
(bad)
dec
mov
sbb
out
jg
scas
in
pop
add
and
mov
jmp
jge
pushf
hlt
push
ja
(bad)
mov
push
cmp
xor
or
out
movs
sbb
ss
es
je
ja
(bad)
sbb
inc
xchg
loope
data16
xor
jecxz
add
add
jb
loopne
mov
dec
inc
add
es
mov
cli
out
xchg
nop
ds
call
lods
jmp
jp
jbe
pop
adc
fistp
ja
lahf
call
mov
out
jmp
push
fadd
cmc
or
stos
pop
fnstsw
pushf
ss
int
(bad)
mov
mov
and
je
and
jge
pop
push
js
call
out
mov
rcl
dec
push
mov
shl
push
std
(bad)
push
push
add
aam
std
stos
xchg
lods
add
cmps
shr
bound
pop
xlat
sbb
adc
sub
mov
(bad)
mov
mov
ret
dec
mov
into
cld
fwait
mov
and
add
push
fwait
ss
lock
push
jecxz
outs
iret
mov
pop
into
aad
addr16
pop
lods
(bad)
shr
mov
pop
fisubr
mov
xor
movs
or
dec
mov
cmp
adc
add
cmps
in
into
sub
shr
cmp
push
jne
inc
pushf
jg
imul
ror
push
popa
lods
and
fldcw
lea
xchg
pop
jge
call
mov
(bad)
jmp
mov
cmp
or
jge
sar
sub
stos
cmp
iret
add
adc
fwait
xor
ficom
jg
int3
mov
lea
push
rcr
add
and
ror
in
fcmovnb
fisub
push
lods
push
std
(bad)
ins
inc
pop
cmp
jno
ret
gs
cmc
fbld
xchg
dec
mov
mov
xor
push
(bad)
jl
push
or
test
mov
mov
xchg
cmp
out
sbb
dec
mov
sbb
mov
mov
add
rcr
push
not
inc
mov
jbe
inc
in
(bad)
dec
sub
enter
and
mov
dec
sbb
cdq
adc
out
icebp
in
dec
xor
rcl
cmps
les
scas
and
jb
cmp
iret
add
ss
or
dec
enter
or
std
leave
repz
arpl
and
hlt
and
fwait
int3
daa
inc
es
inc
fstp
leave
inc
jne
cmps
pop
mov
jo
into
stos
mov
(bad)
fcomp
(bad)
out
aad
mov
xor
ss
jg
xor
loope
(bad)
jmp
icebp
out
xchg
cmp
iret
aas
pop
jge
out
mov
inc
dec
mov
push
icebp
sub
movs
adc
and
imul
mov
(bad)
outs
adc
sub
dec
add
out
(bad)
aad
frstor
xchg
mov
adc
jb
xchg
and
inc
xor
mov
sub
add
ds
test
test
(bad)
cli
js
(bad)
sbb
adc
pop
mov
sbb
xchg
repz
and
mov
mov
in
lods
cmps
dec
mov
ins
mov
arpl
adc
je
xor
fiadd
fisttp
addr16
ins
push
es
jge
(bad)
xchg
sbb
aad
repz
push
arpl
sbb
mov
int
lods
mov
mov
nop
sub
int
or
cmp
dec
loopne
dec
and
mov
test
stos
sbb
cmp
ficom
jo
or
mov
rcl
nop
dec
and
and
inc
movs
sbb
or
xchg
imul
inc
leave
ja
mov
cli
outs
mov
inc
pop
loop
jmp
mov
shl
jmp
jb
xchg
nop
std
in
sahf
or
sub
test
cmp
rcl
lea
icebp
ret
mov
mov
sub
dec
inc
mov
dec
mov
or
or
int3
sub
in
mov
pusha
pusha
jp
ja
shl
movs
push
adc
rcl
xchg
and
push
out
cmps
sub
mov
and
adc
jns
push
or
push
test
daa
xor
pop
mov
test
inc
shr
div
pop
out
call
push
cmp
push
test
pop
mov
das
jge
outs
loopne
ret
sub
adc
xor
lea
xor
sub
mov
sbb
pop
inc
dec
test
jp
iret
jbe
xchg
lea
mov
cli
adc
cmp
dec
sbb
js
call
(bad)
or
and
test
push
cmps
mov
inc
bsf
mov
cmps
xchg
into
pusha
fiadd
imul
in
sub
test
jnp
les
call
xlat
push
sub
cli
pop
xchg
sub
jl
mov
mov
rcl
loopne
inc
leave
mov
fs
mov
sbb
(bad)
push
aam
loop
call
xor
popa
ins
stos
in
dec
mov
and
jmp
cmp
test
dec
std
leave
mov
mov
xor
cli
fnstenv
repnz
sub
inc
or
stc
test
sbb
jno
int3
in
and
mov
xor
test
jl
add
sahf
dec
iret
(bad)
mov
(bad)
mov
xchg
test
popf
lahf
leave
int3
mov
mov
fisub
ror
jo
mov
das
push
lds
enter
add
popf
cmp
adc
rcl
dec
dec
and
and
jne
mov
call
repz
cdq
in
and
jle
or
mov
call
push
inc
sbb
cmps
in
cmp
pushw
lock
mov
cmp
xchg
mov
xlat
mov
data16
or
rcl
xchg
scas
aaa
inc
mov
push
cli
cmps
push
push
dec
idiv
repnz
push
sbb
jae
mov
aad
cmps
rol
cmp
mov
sub
lods
add
into
cmp
out
dec
add
lds
xchg
cmp
dec
mov
pop
inc
and
lds
imul
cmps
ret
cli
ret
lods
addr16
xchg
adc
cmp
(bad)
sar
jg
or
clc
xchg
psubq
movs
mov
(bad)
repnz
dec
push
mov
cdq
icebp
inc
cmp
out
adc
cmps
pop
enter
aad
daa
xor
sysret
and
pop
into
mov
sbb
xchg
lea
or
fs
and
lods
push
call
cld
cld
add
xchg
cmp
les
add
popa
and
or
jp
js
sub
inc
inc
call
and
cmp
push
push
jecxz
cmp
lock
rol
inc
lds
mov
fcom
dec
inc
push
push
and
test
arpl
inc
add
repnz
push
lea
imul
push
stc
cmp
in
jge
fnstenv
ja
repnz
inc
sub
sub
data16
nop
or
stos
es
push
or
adc
mul
inc
add
xor
xchg
mov
mov
inc
cdq
js
push
or
pop
ret
mov
and
sub
repz
inc
mov
cmp
aas
push
xchg
xchg
mov
push
stos
jne
iret
sbb
retf
add
push
push
retf
popf
(bad)
repnz
dec
(bad)
mov
fld
mov
or
adc
loopne
xchg
loope
loope
cld
ret
jl
xchg
add
mov
int3
sub
inc
adc
enter
out
jae
cli
(bad)
jmp
xor
push
aad
xchg
cli
ror
test
push
rol
pop
ins
dec
fs
mov
fst
mov
dec
or
(bad)
sbb
and
adc
jne
mov
xchg
inc
add
movs
add
mov
pop
jg
mov
rcl
pop
popf
push
pop
in
cld
inc
or
xchg
inc
adc
mov
call
mov
cmp
or
ret
fistp
xchg
outs
pop
pop
retf
or
rcr
out
sahf
pusha
cmp
push
aam
in
mov
lahf
mov
leave
mov
jae
lock
loope
cmp
ds
inc
sub
cmp
mov
push
sar
call
mov
sub
out
cmp
dec
cmp
dec
jae
lods
pushf
xchg
popa
outs
in
test
mov
push
ins
dec
lahf
hlt
je
inc
les
ficom
in
cmc
(bad)
sub
lahf
inc
mov
out
dec
adc
jb
repnz
push
cmp
jmp
push
adc
and
stc
xor
add
push
mov
jecxz
pop
mov
mov
test
inc
and
mov
popa
cmp
or
sbb
ins
pushf
adc
cli
in
call
loop
dec
sbb
mov
push
repz
jns
pop
adc
add
mov
test
sbb
dec
es
inc
mov
(bad)
push
fldz
pop
or
sub
lds
lods
adc
lods
movaps
xor
lock
ret
retf
xchg
xchg
jmp
gs
push
inc
xor
and
xor
aaa
sub
scas
jae
cmp
jo
imul
sbb
adc
cs
arpl
iret
fimul
pop
fistp
xor
xor
fcom
mov
out
push
not
and
into
retf
pusha
std
mov
pop
les
cld
lods
cdq
adc
jg
imul
xor
in
repz
scas
add
in
xchg
jo
push
scas
test
jl
out
dec
fld
mov
mov
gs
jmp
jne
xchg
jge
cli
pop
dec
jle
call
mov
cmp
mov
sub
sub
call
fldenv
and
shl
jecxz
adc
in
add
adc
sbb
xchg
mov
lock
js
iret
and
mov
fldenv
push
cmp
dec
scas
push
mov
sub
and
shl
jmp
rcl
ja
das
sar
inc
cld
mov
in
and
jg
cmp
xor
push
or
cmp
sbb
adc
cmp
out
ins
dec
sbb
push
ret
push
popa
fcmovb
mov
sub
pop
out
addr16
adc
cmp
sbb
retf
(bad)
retf
cs
fld
loope
cs
aad
outs
inc
sahf
lahf
outs
cwde
jns
mov
lds
clc
cmp
mov
in
dec
push
cmp
and
outs
xlat
mov
pop
repnz
mov
dec
mov
popf
xchg
fistp
aad
mov
outs
rcr
lods
and
hlt
scas
test
xor
(bad)
enter
into
ret
rcl
adc
test
ret
mov
push
jg
sahf
inc
cmps
out
sahf
gs
mov
jb
pop
dec
add
dec
cmp
add
sbb
add
lods
push
lea
into
repnz
aas
push
adc
push
mov
sub
in
xor
retf
sub
(bad)
sahf
xchg
out
xor
sub
call
push
adc
stc
dec
fiadd
push
add
ror
sub
xchg
addr16
imul
push
mov
or
mov
push
push
(bad)
pop
pop
fisub
jp
test
test
mov
test
and
xchg
dec
lods
shl
aas
dec
shl
inc
add
pop
jp
imul
mov
dec
aam
popf
ins
inc
ins
cmp
push
js
pop
sub
aas
lock
stc
jp
rol
ret
push
out
sbb
xor
shr
lds
inc
rol
hlt
inc
add
std
add
ins
in
adc
inc
fidiv
jnp
cli
push
cmp
jg
fstp
jecxz
sbb
xor
(bad)
ja
(bad)
pop
js
lods
mov
push
aaa
inc
jge
fidiv
jmp
pop
inc
addr16
fwait
jle
inc
jno
adc
add
pop
add
or
shl
xor
inc
scas
out
mov
push
xchg
mov
sbb
mov
cmp
pop
mov
push
mov
call
cs
std
adc
push
or
jmp
stos
mov
push
cmps
add
jns
stos
xor
repz
mov
dec
das
test
call
shr
shr
adc
gs
dec
(bad)
pusha
mov
add
fld
mov
rcr
sub
es
xchg
fucomp
sbb
ins
test
ror
dec
pop
xchg
mov
retf
or
hlt
test
es
into
sbb
sbb
dec
cmc
imul
jl
xchg
inc
dec
rcl
mov
mov
or
in
ror
pop
push
cmp
call
adc
mov
dec
xor
movs
push
sbb
ins
test
ins
xor
cmp
addr16
popa
pushf
xchg
shr
cmp
add
jb
push
xchg
shl
lahf
repz
(bad)
enter
cmp
out
lods
int
cmps
push
dec
out
test
in
xor
enter
jbe
neg
jle
retf
out
rcl
mov
xor
mov
adc
(bad)
nop
sahf
sub
into
push
test
mov
xchg
and
jmp
push
push
inc
ins
ror
outs
test
xchg
outs
daa
xchg
retf
mov
xchg
les
fld
fdivr
xchg
sub
or
mov
imul
mov
in
leave
inc
mov
das
jl
dec
jno
xor
enter
inc
cld
sub
or
fdiv
sub
mov
loope
jp
out
stos
popa
cmp
(bad)
ja
sub
and
inc
ds
sub
nop
js
retf
push
cmp
fistp
shl
jbe
inc
jbe
or
daa
ficomp
in
loope
mov
pop
adc
jo
pushf
ret
ins
retf
ds
gs
fwait
jl
sbb
mov
mov
jo
(bad)
scas
add
cmps
jle
leave
adc
sbb
fdiv
sbb
push
push
imul
and
xor
les
pop
push
fs
bound
jp
mov
icebp
mov
shl
jno
imul
jg
cld
mov
and
in
push
adc
push
and
pop
push
mov
jbe
std
outs
mov
hlt
(bad)
xchg
mov
dec
sar
push
mov
out
loop
mov
repnz
fbld
or
xor
std
sbb
xchg
es
pop
pop
push
pop
adc
popa
mov
icebp
sbb
jo
push
jae
in
bound
adc
adc
xchg
xchg
stos
cli
pop
lods
and
or
cmp
pop
pop
push
sbb
in
es
movs
(bad)
adc
mov
sbb
sbb
inc
fcmovnb
rcl
inc
popf
(bad)
lods
mov
outs
(bad)
ins
ret
addr16
mov
inc
clc
sub
push
ins
out
inc
out
in
add
mov
bound
inc
mov
sbb
cwde
test
dec
fcom
ja
mov
das
add
idiv
or
push
sar
dec
xor
mov
in
fimul
xor
mov
fisttp
ds
xor
mov
adc
mov
inc
mov
jmp
add
test
jge
(bad)
movs
imul
jmp
mov
(bad)
mov
in
add
sbb
(bad)
sbb
cmp
cdq
cs
ins
pop
iret
push
cmp
mov
jne
pop
adc
shl
pop
or
addr16
out
int3
mov
rcr
scas
inc
sti
jbe
push
xchg
adc
icebp
es
call
cmp
push
sbb
mov
mov
sbb
mov
xor
cli
aam
imul
sar
lods
and
pop
(bad)
jmp
add
iret
inc
mov
jo
stos
xchg
jle
mov
fbld
nop
or
(bad)
sub
jnp
xchg
sahf
add
cmp
inc
(bad)
mov
sub
aaa
pop
adc
dec
mov
iret
mov
xor
jo
pop
xchg
lods
mov
xchg
pop
es
lds
push
je
cmp
mov
or
push
mov
jae
xor
xadd
pusha
addr16
je
sbb
dec
xor
push
xor
cmp
or
xchg
and
jne
test
or
cmp
cmp
jg
push
dec
enter
adc
cmps
inc
mov
retf
jle
cwde
push
int3
sub
sub
dec
shr
and
cmps
cmp
and
fist
into
adc
mov
push
or
push
jbe
xor
clc
ds
call
aaa
add
pushf
jo
dec
je
add
pop
mov
mov
push
adc
test
adc
popa
adc
(bad)
imul
or
pop
xchg
and
mov
popa
and
pop
test
adc
sub
or
jno
pusha
imul
neg
ja
mov
dec
sti
sub
fcom
pusha
adc
mov
into
xchg
(bad)
xchg
(bad)
jno
and
cdq
push
mov
push
stos
or
mov
pop
inc
addr16
jae
cmps
pop
aaa
les
lds
push
push
addr16
scas
add
sbb
js
in
aad
sbb
aad
jb
jecxz
push
push
mov
add
inc
or
mov
movs
ror
or
ds
inc
(bad)
cmps
cmps
or
fisubr
ror
in
jp
mov
jo
call
or
sub
stc
repz
push
inc
pop
xchg
pop
mov
popf
adc
ins
jge
add
scas
add
mov
fstp
aam
or
test
jecxz
aaa
push
jb
mov
sar
xor
xchg
(bad)
(bad)
fidivr
cli
jle
int3
stos
lahf
xor
push
out
loop
in
mov
xor
dec
push
rcr
dec
lock
fidivr
and
push
scas
dec
leave
xchg
mov
lea
std
adc
inc
or
ins
(bad)
(bad)
cmp
mov
sub
push
repz
test
cmp
iret
test
dec
mov
inc
xchg
and
outs
test
cli
out
sub
adc
test
frstor
cmp
aad
jmp
mov
push
dec
xchg
xor
inc
xor
cmp
inc
dec
(bad)
jae
pusha
and
pop
dec
add
jg
push
pop
inc
lahf
mov
push
fldenv
pop
jmp
inc
jb
add
xor
loop
aaa
adc
std
inc
daa
push
or
xchg
add
in
aad
xchg
xchg
jmp
dec
nop
pushf
nop
cld
sub
pop
and
mov
push
pop
jnp
add
mov
ja
ins
dec
(bad)
pusha
jae
call
jmp
adc
xor
int3
or
add
jl
mov
xor
mov
fld
sbb
aas
in
mov
mov
in
mov
and
ret
sti
and
cwde
xor
and
inc
xchg
(bad)
popa
push
fnstenv
pop
out
push
out
sti
pop
pop
rcr
lods
cmp
sbb
(bad)
pop
adc
mov
add
pop
cli
arpl
fnstcw
sub
lock
stos
fild
add
xchg
push
outs
sub
and
or
adc
retf
and
jge
ror
lea
push
mov
fadd
mov
or
xchg
cmc
xchg
and
fcomp
xor
(bad)
jae
sbb
stos
jmp
pop
push
xchg
test
cmp
xchg
sar
push
iret
dec
jo
sbb
mov
ret
dec
das
bound
movs
fsubr
enter
mov
shr
mov
loope
jle
mov
mov
ja
lods
push
aad
add
inc
push
sub
loopne
fldenv
fimul
dec
test
pop
push
xor
push
jo
jno
push
xchg
jmp
push
jns
adc
pop
dec
shl
jle
mov
inc
cmp
and
loop
adc
sbb
cmp
popa
xor
push
pusha
dec
(bad)
jle
mov
in
jne
sysret
push
lock
mov
lock
or
movs
mov
mov
mov
add
mov
icebp
test
les
adc
xor
sbb
push
jmp
adc
jae
mul
into
cmp
js
and
in
out
in
daa
sbb
arpl
fld
jbe
inc
ds
ins
xor
retf
jecxz
retf
loope
push
mov
xor
mov
and
daa
cmp
in
mov
dec
or
sbb
or
mov
imul
imul
sbb
xchg
fisub
(bad)
repnz
adc
jmp
sub
int
aas
fxam
jno
push
dec
xor
fnstsw
in
add
push
(bad)
pop
or
xchg
jno
push
repz
xor
adc
int3
pop
jo
je
push
outs
leave
clc
xor
push
inc
jno
arpl
jnp
sub
(bad)
outs
test
pop
push
cmps
jl
ds
leave
adc
int
inc
xor
inc
jbe
dec
call
pusha
outs
ins
jns
xchg
sbb
adc
sbb
std
xchg
movs
adc
int3
dec
loope
sub
jae
sub
xchg
push
inc
sbb
jo
xor
stc
(bad)
jmp
pop
sub
lods
outs
or
sbb
push
addr16
dec
xchg
push
or
inc
cwde
pop
inc
jge
adc
mov
add
mov
(bad)
fistp
or
xor
ins
jns
cs
cs
test
inc
mov
dec
das
add
push
xchg
jns
fsubp
xchg
in
jecxz
cmp
int
xor
out
int
sbb
out
leave
ffree
push
cdq
rol
xor
jp
lds
sub
(bad)
pop
jnp
lahf
call
xchg
or
mov
jno
dec
ins
lock
xor
dec
ja
mov
clc
imul
(bad)
rol
outs
cmps
clc
cmp
(bad)
and
into
imul
cwde
sub
or
les
cld
sbb
cmps
test
xchg
mov
mov
cmp
or
fiadd
mov
cmp
cmp
xor
cmp
cmovne
das
inc
push
mov
sub
pop
pop
mov
or
ins
inc
ja
dec
cmp
push
repnz
pop
push
enter
popa
(bad)
sbb
mov
mov
test
pop
std
outs
or
jmp
(bad)
mov
and
or
(bad)
ficom
imul
mov
out
in
or
cli
mov
push
xchg
lock
push
fucomip
out
sub
xor
movs
out
dec
les
mov
or
ret
imul
jne
(bad)
cmp
mov
mov
sbb
mov
jl
add
hlt
shl
std
dec
shr
ins
mov
rol
(bad)
je
adc
xchg
fs
pop
rol
call
call
out
cmp
pop
mov
or
jne
stc
gs
or
xor
mov
cmp
mov
jecxz
pop
mov
mov
pop
pop
cmp
fnsave
xchg
mov
das
sub
in
push
iret
inc
shl
ss
or
pop
call
jb
cmp
pushf
shl
push
xchg
jecxz
bound
inc
xchg
lock
fsub
and
xor
and
mov
jmp
fs
shl
pusha
sahf
loope
call
ds
fxch
and
fst
scas
cmp
mov
mov
loope
push
push
sti
jae
lods
jns
pop
imul
mov
lods
lea
cs
stos
push
dec
rcl
add
fist
jo
pop
outs
mov
inc
js
or
dec
xchg
xor
imul
sbb
arpl
mov
rol
hlt
je
sbb
outs
pop
jae
push
fimul
lds
sbb
and
inc
pop
fld
and
cmp
inc
sub
les
and
imul
sub
inc
sub
inc
push
push
sbb
fdivr
sub
inc
inc
push
adc
call
jp
or
xor
adc
out
int3
repz
in
lods
ja
nop
shl
inc
pusha
lahf
push
mov
out
mov
sbb
icebp
pop
and
mov
mov
data16
popf
push
xchg
add
test
dec
inc
jge
lahf
sbb
shl
adc
jbe
mov
push
cwde
xor
call
lods
cmp
mov
add
dec
mov
aaa
sti
lahf
ja
mov
mov
adc
xlat
push
xor
inc
inc
mov
arpl
fadd
dec
daa
(bad)
jbe
dec
add
test
outs
pusha
movs
jns
pop
cli
in
dec
ret
sti
inc
fsubr
repz
maskmovq
test
xor
call
cmps
stc
sbb
ret
(bad)
fwait
push
mov
add
push
retf
scas
inc
stos
cs
mov
in
xchg
dec
inc
push
lock
jge
(bad)
inc
pop
sub
adc
push
jb
push
mov
push
pop
into
inc
repz
mov
or
xchg
and
mov
push
pop
imul
inc
cmp
or
enter
mov
stos
stc
lahf
std
int
dec
fs
pop
mov
xor
mov
nop
enter
push
inc
xor
int3
sub
rol
js
jp
and
dec
cmp
arpl
hlt
int3
add
mov
add
int
push
and
cld
cmp
or
pop
retf
test
xchg
xor
jae
cmp
or
lock
arpl
inc
in
or
scas
fsin
arpl
or
out
(bad)
hlt
cli
pop
mov
stos
xor
(bad)
(bad)
sub
and
loop
daa
xor
aas
das
sar
push
data16
pushf
int3
add
movs
and
lock
out
jae
popa
xchg
out
outs
dec
or
adc
(bad)
bound
mov
(bad)
adc
es
inc
mov
inc
cmp
add
add
fisubr
mov
mov
pop
or
shl
repnz
add
and
mov
and
xor
lods
fcmovbe
push
jo
int
rcr
add
mov
ds
ret
mov
pusha
inc
and
cld
sub
and
call
xchg
arpl
xchg
inc
or
int
mov
sbb
movs
arpl
jmp
sbb
aas
xchg
ret
cmp
xor
ins
sbb
lods
xchg
xchg
inc
pop
or
xor
adc
movs
ror
sti
sbb
or
mov
js
mov
mov
les
test
std
jns
stos
inc
mov
mov
xchg
adc
inc
pop
xchg
push
fs
sbb
xchg
cmp
rcr
fistp
aam
std
cmp
push
cmp
out
pusha
imul
out
je
scas
stc
aam
leave
or
arpl
mov
inc
fbld
push
adc
arpl
cwde
out
pop
adc
add
dec
cmp
cmps
sbb
jecxz
jne
fstp
retf
lea
inc
push
mov
lds
jo
jo
enter
mov
loope
out
xor
xchg
jb
jge
sbb
outs
jge
in
and
retf
adc
mov
xchg
and
jmp
ja
pusha
mov
cmc
stc
or
outs
in
dec
test
sbb
shl
xchg
fs
mov
mov
shl
xor
jno
fbld
sub
retf
mov
retf
or
aad
sbb
ror
dec
vmwrite
jmp
jmp
dec
pop
cdq
(bad)
xchg
mov
mov
aad
mov
(bad)
jmp
jae
fisub
sub
inc
xor
stos
mov
sub
test
call
rcr
mov
nop
(bad)
adc
(bad)
sub
sub
fidiv
movs
cmp
or
sbb
push
loopne
fadd
jns
hlt
mov
xchg
pop
push
cmps
inc
aas
mov
xchg
outs
jbe
mov
pop
pushf
sbb
in
outs
stos
pop
cmps
and
lds
jl
sub
sbb
es
mov
sti
mov
and
push
sbb
fwait
rcl
stc
lds
(bad)
dec
sbb
mov
pushw
fs
fcomi
mov
and
jecxz
data16
cmps
push
call
mov
mov
jl
jne
push
rcr
jg
clc
in
out
daa
cmp
ficom
jne
mov
iret
xchg
(bad)
imul
pop
jbe
jno
inc
test
mov
xor
cmps
mov
sar
cmp
sbb
js
or
jmp
call
jg
pushf
jecxz
inc
std
inc
sub
mov
sub
fisubr
rcl
push
pop
loop
test
addr16
fsubr
nop
test
cmc
cmp
in
and
or
xchg
push
aas
jg
inc
aaa
cmc
add
popf
hlt
sub
sub
loope
movs
loopne
xchg
(bad)
test
jle
fistp
or
push
(bad)
cdq
test
loop
ins
mov
dec
fidivr
out
mov
jecxz
jne
jge
sahf
ror
xchg
mov
cmp
adc
xlat
add
jp
mov
mov
inc
lock
jp
js
(bad)
mov
mov
cdq
or
sub
aas
lods
cmp
int
dec
cmp
add
lock
repz
movs
pop
push
inc
xchg
cmp
and
cmp
pop
sbb
mov
xor
add
sti
repz
jmp
sbb
pop
fmul
mov
movs
(bad)
leave
xchg
inc
(bad)
xchg
aaa
test
call
and
shl
popf
and
cmp
and
test
mov
push
adc
xchg
inc
pop
jb
sahf
aaa
push
stos
mov
mov
mov
xchg
cmp
xchg
les
mov
out
jnp
in
std
adc
dec
xchg
das
xchg
mov
ret
jecxz
cmc
test
xchg
sbb
xchg
dec
fisubr
xlat
lods
push
js
cdq
pushf
outs
or
sub
rcr
pushf
imul
xlat
xchg
cli
hlt
xor
jp
jecxz
nop
cmp
jmp
movzx
dec
pop
jecxz
cmp
jl
inc
and
pop
xchg
ret
pop
push
adc
mov
add
push
add
in
dec
call
xchg
xchg
call
repnz
jno
repnz
cmp
add
xchg
cli
fmul
aas
jns
add
lods
jmp
test
je
inc
pop
cmp
cmps
arpl
sti
mov
mov
jns
std
or
scas
aas
call
call
shl
ins
repnz
(bad)
cmc
sbb
jmp
ins
bnd
mov
push
adc
push
push
mov
push
mov
add
cli
adc
adc
icebp
push
cld
xchg
or
pop
pop
inc
inc
dec
loope
call
imul
arpl
in
mov
jo
pusha
fwait
scas
test
test
dec
not
loopne
inc
cmps
ins
movs
icebp
scas
jmp
fiadd
jecxz
inc
pop
icebp
pop
sbb
pop
(bad)
fyl2xp1
adc
icebp
or
jbe
xchg
xor
sbb
xlat
push
pop
nop
pusha
dec
mov
jne
dec
inc
in
mov
scas
mov
mov
xchg
sub
or
in
mov
jno
sub
xchg
popf
push
and
mov
fcmovne
xor
xchg
adc
test
push
jne
mov
or
jb
push
mov
push
mov
jge
test
outs
jmp
and
pop
fimul
jg
sbb
jp
mov
pop
shl
jno
int3
or
inc
stos
cmp
add
push
hlt
push
call
fwait
add
fmul
ja
cli
pop
outs
out
call
ds
fsubrp
mov
sbb
test
cmp
and
movs
xor
jge
sbb
mov
stos
mov
push
mov
sar
lds
shl
adc
mov
mov
fs
mov
imul
add
shr
in
sbb
lahf
scas
mov
fist
xor
aad
stos
push
mov
sbb
int
aas
xchg
cs
dec
pop
inc
ins
mov
mov
jb
jmp
mov
pop
inc
cdq
push
daa
pop
call
out
aas
pop
outs
sbb
cmp
push
dec
cdq
xchg
cmps
sub
inc
bound
popf
cli
inc
xchg
sbb
sub
hlt
xchg
inc
sbb
loop
push
add
out
(bad)
rcl
ss
jmp
sbb
sbb
pop
popf
test
or
(bad)
stc
push
es
or
adc
jne
xchg
sub
mov
lods
push
les
dec
cmp
and
fidiv
fstp
push
cmp
test
fs
call
jae
sbb
mov
pop
jo
nop
dec
or
dec
loopne
cmp
pusha
mov
jg
pop
mov
out
or
cmp
add
mov
addr16
pop
leave
jmp
inc
pop
inc
push
lods
lods
push
pusha
(bad)
cmp
ins
push
mov
ds
rcr
dec
and
or
aas
sbb
lods
push
out
adc
and
mov
add
test
pop
cli
dec
loop
shr
mov
cmp
cmp
sbb
ss
pop
cdq
cmp
or
ret
dec
sbb
cmp
cmp
mov
push
nop
mov
jp
mov
add
xchg
fmul
adc
mov
mov
ret
iret
pop
cli
popa
cmps
jns
jp
push
loop
jg
in
loope
mov
jmp
lds
cwde
inc
or
push
js
pop
jns
xor
jnp
fdiv
es
xor
cmp
dec
mov
sbb
mov
in
das
outs
or
nop
jg
ja
lea
bound
push
mov
mov
xchg
xor
(bad)
nop
xor
cli
jge
cmp
add
jmp
mov
mov
fnstsw
mov
mov
xor
icebp
dec
cdq
jne
(bad)
jl
test
jns
mov
dec
imul
mov
dec
jns
mov
idiv
sub
cdq
ja
js
int3
mov
xchg
(bad)
cmp
ds
sbb
xlat
cdq
mul
popf
push
jne
sbb
jmp
xor
mov
jle
adc
jge
ficomp
xor
int
jge
or
mov
fst
adc
sbb
sahf
lods
ror
ins
cmps
pusha
fsubr
dec
push
push
jecxz
push
leave
dec
mov
push
(bad)
sbb
xor
adc
int3
push
and
inc
jecxz
xor
loop
rcl
fbstp
sub
cli
pop
pop
mov
jge
inc
pop
(bad)
dec
outs
cld
add
inc
fcomp
(bad)
popa
sub
dec
loopne
fstp
push
jg
scas
scas
push
sub
shl
mov
in
dec
xchg
and
js
mov
jl
repnz
jle
adc
mov
xor
movq
inc
inc
das
xchg
ins
sbb
push
clc
dec
jb
sub
lock
stc
test
adc
aaa
pop
scas
mov
add
xor
test
push
mov
xor
sub
movs
loope
cmp
add
xor
mov
ins
jae
or
and
mov
aam
sbb
mov
shl
and
hlt
not
stos
lods
pop
inc
sti
ds
mov
push
(bad)
pushf
jmp
ror
jo
(bad)
(bad)
add
mov
pushf
ret
hlt
cs
pop
push
and
sbb
sub
pop
push
iret
(bad)
cdq
inc
xor
out
ja
jnp
xchg
push
push
adc
add
sbb
sub
outs
xlat
dec
inc
adc
dec
xchg
adc
aaa
sti
dec
jb
aas
pusha
ror
mov
(bad)
jg
(bad)
or
xchg
fs
mov
(bad)
sbb
mov
dec
xor
push
out
frstor
lods
jne
pcmpgtb
dec
into
push
add
sbb
nop
loop
adc
adc
jl
jns
pop
popa
push
or
arpl
add
test
outs
pop
fmulp
mov
cmps
cmp
cmp
pop
pop
mov
and
pop
scas
into
push
rcr
shr
mov
pop
ss
pop
mov
cdq
inc
mov
lock
pop
lods
ret
adc
(bad)
mov
inc
(bad)
mov
mov
cli
loopne
pop
mov
(bad)
loopne
repz
adc
cmp
xor
test
jns
clc
or
sti
xor
(bad)
inc
pop
push
test
out
movs
push
jmp
lock
sub
jno
outs
or
inc
imul
das
icebp
and
outs
xchg
jmp
push
cmp
push
mov
leave
pop
js
out
cmps
je
xchg
scas
ds
std
mov
jae
pop
xchg
(bad)
icebp
paddd
sub
xor
sbb
mov
fs
mov
cwde
cmp
sar
jne
push
cmp
sbb
and
mov
add
xchg
int
neg
jp
ret
outs
aas
retf
push
ja
scas
test
rol
addr16
popf
cmc
je
icebp
aad
jae
test
sbb
lahf
xchg
loopne
push
mov
cmps
cld
cdq
int3
imul
sbb
fwait
ret
sbb
std
or
stos
push
mov
imul
loop
sbb
stos
pop
inc
jne
loop
jns
sar
add
mov
dec
jo
jns
add
imul
push
cwde
mov
retf
or
mov
xchg
cmp
out
or
add
dec
sbb
jle
retf
fst
lock
jns
leave
mov
fwait
jl
xchg
scas
(bad)
arpl
cmp
imul
lea
mov
or
xlat
stc
imul
scas
and
vmread
loop
(bad)
out
and
xor
arpl
push
xchg
push
mov
shr
fbstp
outs
lds
ja
pop
in
in
or
pop
jmp
mov
aas
dec
sti
cmp
pop
jae
inc
retf
dec
sub
test
leave
push
movs
imul
out
shr
je
add
mov
sub
jl
sub
inc
fisubr
push
loop
lds
mov
mov
xchg
adc
test
cmp
jmp
jecxz
jne
xlat
jl
jmp
add
mov
xchg
mov
adc
movs
fdivr
stos
mov
sbb
sub
dec
pushf
ror
fidiv
or
sbb
nop
jle
jg
(bad)
(bad)
fdiv
pand
pop
fadd
mov
pop
adc
enter
xor
cdq
test
push
inc
sub
xchg
jg
add
mov
dec
mov
add
jno
sbb
iret
arpl
sar
fdivr
int
push
ret
fsubr
clc
clc
sub
ror
ret
mov
fwait
dec
test
call
adc
fsub
cmps
xchg
mov
xchg
fisubr
rol
sbb
in
std
xchg
pop
mov
add
in
test
aad
outs
int3
cmp
lock
push
xchg
out
imul
aas
pop
sub
test
adc
jmp
xlat
push
call
or
jl
jge
pop
call
push
inc
jecxz
stc
dec
sbb
sbb
ret
out
inc
shr
xchg
mov
adc
xlat
mov
push
sub
shl
push
sub
stc
push
enter
fs
movs
lahf
stos
push
mov
xor
ds
movs
fsub
dec
(bad)
fimul
sbb
leave
cmp
add
dec
jne
fisub
daa
mov
pop
fist
pop
lods
rol
movs
and
das
rol
sbb
outs
imul
add
dec
(bad)
sahf
fiadd
rcr
clc
repz
or
pop
jno
inc
and
pop
mov
dec
addr16
xchg
arpl
lahf
sbb
rcr
dec
cmp
out
rol
int3
pop
xchg
and
mov
stc
xor
movs
inc
sbb
ss
xchg
mov
push
jmp
jnp
jns
hlt
adc
cli
sbb
jno
retf
and
sahf
stc
out
push
call
sahf
pop
movs
dec
jmp
inc
rcr
mov
jecxz
(bad)
retf
xchg
mov
jbe
cmp
xchg
ds
fidiv
xchg
add
jle
mov
or
or
cmp
mov
js
inc
idiv
retf
sar
lahf
push
aam
(bad)
in
push
xor
xchg
or
bound
div
cmp
dec
xchg
xor
lahf
outs
xchg
(bad)
xchg
mov
ret
out
test
cmps
ds
mov
add
lds
cmp
pop
lods
add
sub
cmp
iret
or
or
dec
inc
test
popf
lods
push
or
arpl
outs
inc
dec
mov
mov
push
sbb
imul
cli
jp
adc
push
add
lea
fstp
pop
mov
int3
sbb
jg
std
js
xchg
ret
xchg
sbb
mov
cs
xchg
mov
jmp
and
popa
daa
add
cmps
and
ret
cmp
mov
xor
jecxz
push
cmc
mov
retf
ret
stc
push
adc
stos
cmps
call
mov
xor
mov
leave
imul
jns
pop
xor
stos
add
xchg
mov
pusha
cmc
sbb
fprem
imul
loop
iret
ret
mov
dec
les
sub
or
xor
popa
stos
xor
cmps
bound
loop
arpl
aam
popa
ret
xor
cmp
std
data16
repnz
test
ins
cmp
gs
push
cmp
inc
mov
scas
in
cmp
pop
xchg
test
cmp
mov
adc
mov
in
mov
push
(bad)
loop
or
imul
cmps
and
mov
(bad)
mov
cmp
dec
jp
ins
push
pop
mov
ja
mov
test
mov
mov
leave
inc
js
xchg
outs
xor
cmp
push
aaa
mov
mov
lock
icebp
lds
xchg
push
add
mov
or
push
enter
push
out
pop
push
or
mov
into
outs
out
or
jl
lds
xor
int3
(bad)
jns
or
fisttp
shl
in
lds
push
movs
aas
imul
sub
sbb
dec
push
mov
(bad)
lods
imul
das
aas
cmp
sub
mov
in
mov
sbb
jnp
sbb
ds
shl
popf
push
data16
mov
mov
(bad)
addr16
jp
pop
xchg
push
cli
push
loop
pop
cdq
dec
or
inc
xchg
push
cmps
les
xchg
fucom
clc
ficomp
xchg
test
sbb
test
movs
sbb
mov
cmp
enter
sbb
div
lods
push
call
dec
and
pop
sub
and
push
and
lods
call
adc
(bad)
aam
jg
popf
data16
push
jb
pushf
in
(bad)
retf
push
(bad)
in
out
dec
fwait
ins
or
and
fldenv
dec
mov
ds
mov
ror
cmp
addr16
and
cmp
adc
test
fsubrp
lds
addr16
inc
out
fisub
dec
mov
jae
push
(bad)
inc
push
push
das
xchg
rol
sbb
dec
pop
das
and
add
or
pop
test
imul
mov
mov
adc
adc
jmp
leave
leave
inc
leave
xlat
repz
or
push
fcmove
sbb
mov
loopne
aam
xor
xchg
sar
push
lds
ins
jae
fiadd
fdiv
not
and
lods
test
mov
das
dec
inc
jl
mov
push
movs
mov
test
adc
push
iret
daa
xor
mov
mov
sbb
dec
mov
adc
fnsave
pusha
pop
add
push
sub
cli
jne
or
mov
push
arpl
push
and
and
push
xor
sub
dec
in
dec
cmp
mov
aas
call
out
pusha
lods
data16
push
inc
sbb
jge
jg
mov
in
jge
into
xchg
dec
or
or
(bad)
mov
fcom
adc
sar
(bad)
lods
adc
mov
in
movs
mov
add
in
div
rcl
inc
daa
pop
jle
das
mov
pop
sbb
enter
fcomi
or
(bad)
or
popaw
std
js
pop
icebp
fsubr
(bad)
mov
mov
adc
stc
push
inc
test
aam
adc
cli
inc
mov
es
mov
rcr
inc
sbb
push
scas
pop
xchg
pop
aas
cmc
xor
add
push
mov
or
movs
jg
inc
mov
sbb
imul
popa
mov
xor
push
aaa
pop
mov
push
and
stos
pop
push
sbb
and
repnz
fs
pop
aaa
in
loope
mov
push
mov
xor
es
jb
sub
movs
add
sar
cmp
iret
inc
mov
imul
test
mov
xchg
cli
xchg
add
fsubr
push
mov
(bad)
cmp
leave
out
sbb
leave
fptan
adc
fnstsw
push
mov
mov
adc
cmp
lods
inc
fisub
test
sbb
nop
shl
test
jmp
xchg
mov
arpl
cdq
mov
cmp
fiadd
outs
add
test
ins
mov
ss
hlt
push
cmp
jbe
inc
shl
push
mov
ds
mov
adc
lods
sub
test
fs
lods
pop
lea
aaa
push
not
jo
cli
mov
enter
ret
fild
mov
add
(bad)
jmp
cmp
mov
fldcw
sbb
cmc
pop
cmp
aad
xchg
xchg
mov
push
mov
loope
mov
fcmovu
cld
mov
lds
dec
mov
arpl
retf
popf
inc
(bad)
fld
fdiv
jns
mov
add
dec
push
or
pusha
sbb
enter
jae
test
sbb
jno
(bad)
fwait
call
push
xchg
mov
in
int
shl
lahf
fcom
pmaxub
mov
mov
jg
out
lock
pushf
and
mov
ret
add
adc
scas
(bad)
mov
mov
inc
pop
push
pop
leave
cmps
scas
inc
adc
adc
add
test
mov
pop
addr16
aas
lods
fwait
test
cmp
cmp
push
aad
pop
jecxz
jo
mov
daa
outs
fmulp
sahf
and
sbb
xchg
fidiv
call
mov
adc
sub
jne
xchg
in
es
rol
stos
movs
hlt
test
in
sar
pop
xchg
clc
imul
jl
loop
punpckhwd
into
push
mov
mov
test
test
xlat
leave
xor
mov
sub
sbb
cmp
test
xchg
les
dec
ins
mov
cmp
je
mov
vxorps
fdivr
dec
jle
mov
aam
fisubr
(bad)
mov
lods
xor
pop
mov
aad
pop
dec
retf
dec
xor
push
(bad)
in
scas
and
and
ss
dec
cs
jp
bound
mov
and
test
dec
sub
sahf
lods
adc
mov
mov
pop
inc
inc
test
stos
jg
pop
ins
or
ja
ds
add
and
inc
and
mov
clc
mov
outs
out
test
mov
cmp
and
dec
lods
shr
xor
or
push
pushf
test
frstor
mov
sub
push
call
push
retf
es
add
lea
and
mov
dec
ins
jge
or
sar
push
scas
fidivr
add
sub
shl
div
add
pusha
sbb
push
and
aaa
fs
out
jae
mov
mov
push
(bad)
cmp
and
mov
xor
inc
mov
adc
and
or
lahf
cdq
sahf
push
pusha
rcr
out
(bad)
jmp
jns
cld
stos
scas
mov
pop
jmp
mov
dec
push
aad
dec
(bad)
(bad)
push
jg
pop
pop
out
retf
stc
adc
imul
cld
inc
dec
push
enter
jnp
sbb
inc
dec
fiadd
icebp
sub
add
dec
shl
sub
sbb
pop
ins
bound
push
ret
sub
xchg
xlat
mov
jmp
jmp
aam
jg
jmp
test
jg
xchg
sahf
in
loope
jmp
mov
push
xchg
cmp
sbb
out
push
or
push
pop
or
cmp
inc
aad
int3
out
dec
aaa
imul
xchg
xor
or
pusha
add
add
cmp
mov
mov
(bad)
fstp
push
repnz
cli
jae
out
int
into
data16
dec
sahf
cmp
mov
or
cmp
and
sbb
mov
pop
mov
and
test
push
push
xor
push
test
mov
push
push
push
addr16
push
inc
repz
xchg
test
cmps
cmp
xchg
pop
mov
in
xchg
or
cmp
mov
adc
inc
cwde
jne
call
mov
test
imul
lods
lock
fwait
hlt
out
cli
push
(bad)
cwde
add
jns
mov
push
int3
out
mov
sub
inc
sbb
out
jb
or
dec
sub
sbb
fidiv
repz
lods
jecxz
mov
mov
xor
dec
dec
inc
dec
in
js
push
das
(bad)
cmp
scas
or
mov
xchg
pop
mov
pop
mov
and
bound
das
push
add
cmc
mov
adc
(bad)
(bad)
dec
push
mov
mov
fdiv
pushf
push
test
dec
repz
push
fisub
cmps
daa
inc
mov
fs
pop
scas
mov
jmp
sti
push
ret
gs
or
and
inc
cmp
dec
push
call
mov
pop
or
pop
stos
std
in
xchg
(bad)
jmp
sbb
mov
outs
mov
jae
mov
iret
mov
jle
mov
fstp
cmps
stc
jnp
test
jecxz
add
dec
dec
xor
into
adc
jmp
loope
out
jb
jmp
pop
(bad)
ror
xchg
xchg
xor
add
jl
dec
inc
mov
iret
pusha
(bad)
mov
rcr
mov
push
jle
out
inc
mov
sub
arpl
cmps
pop
xchg
cli
fnstcw
mov
add
xor
or
mov
mov
adc
popf
jae
mov
test
dec
xor
test
and
xor
test
sub
sahf
imul
movs
arpl
and
jns
pop
push
xor
pushf
out
rol
data16
popf
xchg
hlt
aad
mov
mov
or
scas
movs
push
test
jl
push
mov
push
xchg
jp
cmc
shr
add
retf
jg
dec
aas
push
push
cdq
add
sahf
push
mov
dec
cmps
ins
pop
out
lods
or
jb
lods
aaa
mov
adc
fiadd
xchg
dec
ins
mul
sub
or
jno
into
scas
out
or
int3
sub
pop
cmp
mov
iret
sar
xor
xchg
xchg
xchg
popa
mov
dec
data16
mov
push
adc
add
inc
in
adc
mov
push
das
add
cwde
les
fsubr
addr16
je
jmp
pop
jg
or
popa
js
mov
ficom
sbb
xor
push
rcr
jle
(bad)
or
xchg
push
sub
pop
fidivr
jbe
inc
jnp
es
rol
sbb
mov
mov
cmc
inc
loope
rcr
test
mov
add
mov
jo
dec
test
fs
daa
mov
fnstenv
adc
xor
cli
pop
scas
lds
mov
sar
in
stos
gs
iret
jmp
dec
clc
icebp
ror
xchg
shl
sub
in
pop
out
dec
adc
and
int3
adc
repnz
xchg
mov
inc
jl
test
sbb
ja
pop
pop
cmp
sub
repz
jmp
out
jns
inc
clc
cld
mov
mov
cmp
test
xchg
in
test
cmc
gs
pushfw
cli
ja
sar
(bad)
in
ds
or
mov
and
in
hlt
mov
repz
jnp
lds
mov
add
lods
in
xor
les
sub
cmc
(bad)
leave
jmp
cmps
lock
outs
pop
and
sub
mov
mov
in
enter
mov
mov
call
xchg
ffreep
and
div
test
iret
outs
out
cdq
gs
jnp
mov
ror
cmps
(bad)
xor
xchg
lds
cwde
mov
in
dec
into
in
cmp
xor
dec
pop
push
das
cmps
or
xor
pop
or
inc
xchg
sub
ins
vpsubw
mov
mov
pushf
mov
mov
jae
std
and
pop
xchg
inc
mov
ss
in
pop
cmp
push
jmp
shr
jge
enter
shl
ds
shl
inc
test
fst
push
push
ror
mov
into
dec
ret
fsubr
out
or
cmps
in
imul
imul
sub
sbb
test
and
mov
in
or
mov
xchg
arpl
xor
pop
arpl
cmps
mov
jae
jb
jae
jae
sub
mov
mov
xchg
xor
fucomi
xor
sub
iret
fdivr
xchg
inc
dec
or
and
add
rcr
mov
push
test
movs
adc
sbb
rcr
jp
div
sub
mov
(bad)
addr16
call
mov
mov
cmp
or
inc
push
pop
mov
xchg
lock
jnp
jp
ss
jb
addr16
mov
mov
ins
sub
into
loop
mov
add
arpl
xchg
retf
and
add
mov
sbb
and
adc
loope
stc
popf
rcl
add
add
sbb
leave
dec
dec
jge
lea
xchg
mov
jmp
jns
cli
fs
in
xlat
test
mov
sub
repz
lock
mov
imul
adc
xor
pop
inc
xor
mov
or
rcr
out
bound
sbb
sbb
and
sub
sub
ficomp
sbb
mov
inc
arpl
loope
das
mov
sbb
xchg
retf
cmp
xor
js
adc
int
jo
hlt
pop
pushf
mov
cdq
outs
push
adc
add
test
mov
retf
cmp
inc
inc
jb
mov
mov
iret
movs
add
cwde
fld
adc
inc
cmp
xor
sbb
adc
ret
(bad)
call
stos
cmp
scas
push
push
cmp
test
jae
xor
mov
outs
cmp
push
cs
sahf
inc
ret
xchg
push
icebp
test
and
pop
psubsb
lods
xor
inc
jmp
adc
mov
js
and
(bad)
fsub
leave
add
sbb
fs
push
clc
sahf
xchg
add
gs
adc
outs
cmp
mov
mov
aaa
rol
mov
push
bnd
jecxz
mov
push
jg
repnz
rol
repnz
ret
adc
pop
ret
jp
fist
ins
mov
pop
add
lea
popa
dec
jae
pop
sub
(bad)
into
ja
sbb
xchg
push
or
mov
dec
stc
pop
hlt
nop
mov
ins
(bad)
call
add
enter
sub
test
or
mov
enter
adc
sar
cmp
and
mov
popa
cmps
xor
movs
repnz
sub
pop
ror
iret
or
mov
push
(bad)
test
ficom
mov
rcr
mov
cmp
scas
push
pop
dec
popa
int3
fistp
adc
xchg
mov
icebp
xor
(bad)
xchg
adc
bnd
cmps
jmp
stos
pop
push
push
ss
sub
in
mov
gs
sub
outs
call
xchg
cmp
shl
fisub
cmp
sbb
or
cs
sub
push
and
cmp
(bad)
or
inc
pop
dec
sbb
xchg
test
cmc
push
pushf
lds
rcr
loopne
js
loop
icebp
dec
sub
mov
in
adc
push
push
call
adc
lahf
ror
out
stos
add
push
inc
dec
iret
scas
xchg
xchg
xchg
sub
ins
call
cmp
pusha
or
(bad)
and
mov
ja
outs
movs
aas
push
test
add
add
cwde
aam
jl
int
add
xor
mov
pop
gs
pop
sbb
mov
popf
fcmovnu
in
jb
and
push
cmps
sbb
jne
mov
mov
add
xchg
aas
sbb
popa
add
xor
sbb
push
imul
dec
mov
clc
pop
in
inc
std
sub
xor
xor
and
cli
(bad)
jne
ja
gs
test
ins
pop
sub
cmp
gs
jne
dec
xchg
cmps
mov
sub
aaa
out
dec
fcmovbe
and
pop
and
test
jns
push
push
movs
test
ror
sbb
jecxz
or
dec
jbe
push
test
push
add
mov
ds
dec
int3
test
mov
aam
xchg
add
int3
mov
in
or
xchg
mov
mov
jno
push
jno
sbb
fimul
add
xchg
pop
inc
dec
cs
mov
jns
sub
add
shr
out
dec
mov
push
arpl
pop
xchg
sbb
or
push
iret
div
mov
pop
iret
pop
dec
into
pushf
inc
shl
lea
ja
and
lahf
add
xor
xchg
xchg
test
push
mov
idiv
xor
psrlw
imul
shr
ror
out
jp
hlt
xchg
jb
test
out
pop
les
push
push
hlt
outs
adc
sub
xor
add
and
mov
mov
out
lock
loopne
jge
xchg
xor
test
sahf
mov
push
shl
push
inc
popf
xchg
in
mul
loope
push
add
fwait
mov
outs
jp
xor
int3
add
adc
fsubp
cmp
inc
jg
xchg
push
sar
mov
adc
and
test
xchg
xchg
jbe
dec
into
inc
inc
clc
dec
cwde
aas
jmp
mov
push
jmp
out
mov
ror
pop
cmc
mov
mov
ficomp
(bad)
rcl
in
inc
gs
mov
enter
(bad)
mov
(bad)
inc
hlt
aam
daa
mov
cmp
repnz
repnz
sbb
jmp
retf
bound
jl
jp
mov
aad
std
mov
xchg
pop
sbb
inc
ss
push
pop
dec
imul
lea
xor
in
into
jmp
rcr
fldenv
ja
sti
retf
mov
shl
mov
call
inc
xor
pop
dec
pop
sbb
push
cmps
adc
into
push
cmp
cmp
shr
int3
mov
pop
add
dec
leave
mov
mov
pop
mov
or
or
gs
ja
imul
adc
jb
imul
push
stc
mul
fstp
lock
gs
mov
fmul
aaa
call
jmp
jbe
and
retf
sbb
push
aaa
mov
(bad)
jmp
scas
mov
mov
test
aad
mov
hlt
jnp
push
pop
jp
pop
mov
cmps
pop
popa
rol
imul
mov
aad
pop
xchg
adc
test
dec
pop
mov
push
or
push
jle
out
mov
ror
shr
cmc
mov
sub
cmp
arpl
mov
push
sar
xor
mov
into
jmp
pop
push
push
jne
std
mov
into
cmps
hlt
mov
or
ror
fld
sub
jle
cld
nop
nop
dec
or
std
fsubr
jmp
aas
sbb
popa
push
push
std
in
xchg
sub
sbb
jp
out
xlat
gs
(bad)
cmp
jmp
out
push
fistp
sub
cmp
lods
pop
in
out
inc
int
mov
hlt
repnz
cdq
stc
pop
test
pop
fsub
ret
push
(bad)
inc
or
pop
push
mul
jae
mov
sub
mov
ds
cdq
dec
adc
sti
sar
mov
bound
ret
aaa
xor
popf
cli
and
inc
sbb
adc
out
xlat
ds
jmp
(bad)
sbb
cld
arpl
mov
ins
out
cmp
and
adc
and
repnz
ret
or
rcr
es
xchg
inc
xchg
push
hlt
mov
xlat
das
dec
(bad)
mov
or
adc
inc
inc
lds
pushf
cmc
scas
in
sahf
adc
std
pop
loop
jae
mov
ficom
add
push
xor
pusha
and
call
fwait
mov
enter
sbb
push
std
cmp
or
ret
ins
pop
test
js
add
jne
mov
jae
fcomp
mov
cmp
ror
js
lock
in
adc
call
jle
inc
adc
out
mov
mov
dec
aad
call
idiv
setne
push
clc
fisttp
imul
xchg
xchg
nop
cdq
or
loop
jne
push
inc
pop
inc
mov
push
out
mov
jbe
mov
and
xlat
jae
lea
daa
add
mov
stos
sub
(bad)
jle
cmp
icebp
push
cld
iret
ret
scas
cli
call
xchg
inc
cmc
add
movs
scas
jecxz
and
out
out
(bad)
pushf
push
lds
hlt
icebp
ins
in
dec
daa
xchg
mov
adc
test
ret
aad
iret
cld
pop
fbld
and
pop
push
fucom
xor
(bad)
aam
xchg
data16
xor
xor
sti
cmp
loopne
dec
mov
fist
jp
push
sub
xchg
xor
movs
push
in
test
cmp
xor
pop
adc
ret
in
or
lahf
fstp
dec
imul
add
aam
ss
out
pop
jbe
xor
push
inc
cdq
jg
call
mov
dec
fmul
jmp
movs
push
daa
xor
sub
cli
sbb
jle
or
push
pop
or
and
pop
in
mov
call
push
leave
out
jmp
jns
(bad)
aas
dec
pop
call
or
push
aad
cmp
inc
xchg
sub
push
or
and
push
int
and
rol
mov
mov
int3
sbb
mov
sar
repnz
mov
(bad)
pop
inc
je
jge
sti
add
dec
push
xor
mov
adc
add
rcl
pop
rol
push
or
cmp
add
sub
fcomip
stos
dec
fnstcw
inc
sub
mov
fst
rol
cwde
and
and
(bad)
retf
mov
mov
aam
and
mov
and
and
xor
pop
dec
mov
mov
sub
inc
jmp
js
dec
push
mov
aas
inc
cld
aad
pop
outs
loope
push
inc
stos
cli
shl
and
loopne
and
sub
test
fisubr
into
mov
bound
mov
cmp
ffree
xlat
jo
movs
cli
push
scas
cmc
dec
(bad)
jae
leave
mov
mov
mov
out
ret
imul
jo
push
jnp
cmp
inc
fisttp
pusha
in
add
pop
pop
outs
fdivr
mov
je
int
fcomp
jmp
dec
xchg
and
pop
sbb
dec
push
add
clc
sti
test
mov
cmp
enter
jle
leave
xchg
cmp
push
(bad)
arpl
inc
ds
add
mov
(bad)
es
cmps
movs
dec
push
mov
(bad)
fisub
out
imul
popf
mov
mov
outs
jb
mov
inc
or
loope
ss
outs
sbb
pop
cs
add
nop
xchg
mov
out
cmp
xor
add
push
int
bound
inc
xchg
les
or
test
sbb
mov
dec
xchg
enter
lea
or
and
scas
stos
outs
dec
pop
adc
dec
xor
jno
inc
lahf
hlt
and
outs
mov
sbb
mov
mov
mov
adc
add
mov
jae
icebp
out
mov
stos
dec
cmp
jno
stos
jmp
sub
push
xchg
or
push
(bad)
lods
fs
stos
ins
add
js
and
cmp
shl
out
imul
inc
xor
inc
mul
mov
pop
mov
cmp
cmps
int
push
imul
dec
out
pop
and
aas
mov
or
scas
imul
dec
mov
rcl
dec
adc
pop
push
dec
and
loopne
mov
or
fisub
inc
add
fild
inc
dec
aad
ds
sar
inc
cli
mov
ins
cli
xchg
cld
cmp
ss
xchg
jmp
xor
pop
inc
jp
pushf
in
mov
mov
cwde
mov
mov
adc
inc
movs
sbb
cmp
sbb
mov
aad
and
adc
mov
imul
xchg
leave
fisttp
pop
lods
mov
cs
es
les
in
push
ds
adc
dec
outs
enter
cmp
sbb
mov
pop
inc
ds
mov
arpl
jae
xor
inc
fs
(bad)
fistp
stc
pop
push
sbb
fimul
test
cmp
xchg
mov
push
dec
addr16
mov
sbb
daa
gs
imul
mov
cmp
ret
int3
clc
add
mov
sbb
(bad)
aam
ffreep
adc
sbb
mov
std
addr16
jecxz
es
adc
push
cs
push
sar
test
in
data16
xchg
das
in
fwait
add
adc
int3
aaa
cdq
shr
adc
retf
jg
push
cld
xor
push
scas
or
adc
cmp
push
inc
and
mov
dec
lea
cmps
push
jns
pop
lods
leave
cmp
xchg
and
(bad)
add
rcr
push
mov
and
or
dec
mov
xlat
dec
fcmovnbe
sub
jns
mov
push
pop
pop
test
scas
pop
push
sub
sub
dec
jae
dec
ins
sbb
(bad)
out
fs
mov
jmp
mov
test
jmp
fstp
imul
fcmovne
rcr
bound
retf
pop
into
mov
push
mov
jecxz
into
mov
shl
or
rcr
inc
jae
dec
cmp
xor
push
xor
popf
cmc
xchg
push
test
loop
sub
(bad)
jno
xor
jo
sbb
mov
dec
lods
adc
fistp
mov
cmp
loope
push
xor
aaa
(bad)
call
loop
repnz
jmp
clc
div
sahf
test
or
or
inc
loope
sub
jnp
xor
or
aaa
movs
fstp
cdq
cdq
mov
add
(bad)
fadd
cwde
je
or
inc
jnp
sti
inc
jp
and
out
sub
in
fisttp
bt
push
test
mov
sbb
pop
jg
pop
mov
repz
dec
out
in
repnz
push
test
pop
xorps
jbe
lds
or
push
inc
or
add
push
adc
test
pop
adc
and
(bad)
sti
adc
mov
sahf
(bad)
test
sbb
loopne
xor
xor
push
xor
xchg
mov
sar
push
jno
dec
or
lods
jno
sahf
or
movs
shl
cmp
loope
xchg
lea
stos
out
(bad)
dec
jbe
inc
add
mov
in
dec
cmc
jne
sub
bound
mov
in
std
loope
int
(bad)
out
fdivr
push
cdq
test
mov
sub
ror
mov
jb
rcl
cli
mov
not
jmp
cmp
(bad)
mov
xchg
std
xchg
loope
push
adc
inc
repz
(bad)
rol
imul
add
stos
fisubr
add
xchg
mov
stos
aam
sahf
data16
dec
(bad)
movs
cmp
cs
jl
sahf
es
cmp
inc
jo
xor
pop
lods
clc
sub
ins
movs
fldlg2
sahf
or
icebp
mov
out
push
mov
mov
cmp
jne
dec
pop
add
aam
rol
and
ss
adc
sbb
adc
inc
pop
xor
mov
sub
data16
inc
xor
pop
mov
sbb
mov
sbb
call
cmp
jne
es
jns
call
dec
mov
in
jge
in
and
mov
ret
fcom
pop
popa
jmp
lock
cmps
mov
mov
repnz
(bad)
lods
inc
cs
lea
sub
adc
in
sti
mov
or
ins
(bad)
repnz
pop
ret
pop
mov
pushf
push
cmc
dec
xor
jbe
jns
jo
mov
imul
enter
(bad)
aad
gs
push
mov
daa
inc
mov
sub
cmps
lea
push
fdiv
mov
data16
lds
adc
dec
pop
xor
jbe
push
addr16
addr16
test
pop
aam
inc
inc
push
pop
test
inc
rol
push
adc
jne
(bad)
sar
loopne
inc
ret
out
sub
sub
dec
aaa
mov
out
pop
outs
lea
mov
fwait
jle
lock
inc
outs
hlt
fimul
daa
push
pop
sub
sti
or
jo
outs
mov
cmps
mov
mov
sub
xor
test
call
jns
scas
test
(bad)
int
repnz
xchg
repz
retf
mov
cwde
inc
sahf
and
out
jmp
clc
mov
and
xchg
test
mov
mov
inc
and
sub
mul
mov
out
rcl
repz
sbb
inc
add
das
rol
sub
retf
xor
dec
jb
and
(bad)
jecxz
lea
xchg
mov
or
data16
scas
push
(bad)
sub
pop
lds
xor
aaa
xor
xor
out
pop
cmp
sar
jns
or
xchg
pmulhw
sbb
or
ds
pop
add
popf
aas
cwde
sub
sbb
inc
xor
inc
add
sub
xor
xchg
and
(bad)
in
mov
loopne
fidiv
cmps
repz
sub
sti
mov
pop
or
jnp
in
mov
rcr
add
pop
fsubr
mov
aaa
cdq
and
mov
lahf
inc
imul
inc
xchg
ret
jb
enter
push
sbb
rcr
adc
adc
jnp
jnp
test
imul
push
movs
inc
popf
mov
ja
xchg
inc
movs
imul
xchg
pop
mov
mov
loopne
pop
test
sahf
xor
movs
pusha
test
push
mov
pop
aaa
out
lock
jnp
lods
mov
js
jmp
or
repz
sahf
mov
mov
push
xor
add
jnp
(bad)
xchg
xchg
sbb
(bad)
into
add
in
adc
(bad)
cmp
lahf
sbb
mov
and
mov
ret
mov
cmp
xor
inc
inc
cld
mov
leave
retf
(bad)
movs
xor
enter
add
int3
rcl
hlt
rol
xchg
inc
push
mov
cli
xchg
outs
loopne
(bad)
sbb
imul
jnp
cmp
(bad)
(bad)
rcr
mov
test
nop
add
stos
dec
jae
sar
mov
pop
sub
nop
inc
movs
inc
jp
and
and
adc
mov
adc
cwde
in
test
ins
scas
jl
je
cwde
je
dec
pop
test
push
cmp
and
cmp
jbe
pop
test
test
ds
fdivr
mov
or
lods
imul
xchg
and
in
sar
pop
shr
xchg
mov
pusha
fxtract
ret
leave
sbb
cmp
mov
movs
xor
mov
sbb
aam
xor
xlat
jns
stos
sub
cmp
mov
loopne
jecxz
pushaw
mov
(bad)
adc
jle
imul
add
fst
inc
sub
push
xchg
aas
je
mov
ret
xor
dec
pop
cmp
sub
or
stos
cdq
loop
sbb
cmp
mov
mov
mov
dec
push
test
outs
ss
stos
nop
cmp
aam
repnz
add
push
cld
iret
mov
pop
cmp
dec
test
loop
scas
ss
adc
nop
movs
bnd
cmp
sbb
xor
jno
mov
add
test
mov
cmp
es
nop
xchg
ins
or
xchg
out
xor
iret
lahf
shr
adc
sbb
xor
aad
in
dec
(bad)
adc
ret
jecxz
and
rcl
loope
int
or
test
adc
scas
scas
cs
push
dec
outs
icebp
repnz
mov
sahf
outs
xor
stos
inc
outs
add
dec
or
jecxz
xor
xchg
aaa
inc
(bad)
arpl
jmp
rcr
mov
pop
add
pop
push
lds
cmp
xchg
mov
sbb
mov
mov
push
shr
sbb
mov
or
movs
inc
xchg
loop
xchg
scas
push
out
dec
iret
adc
cli
call
xchg
lock
xor
mov
add
or
pop
and
aam
fsubr
mov
xor
movs
jmp
in
leave
push
dec
jle
xchg
add
out
pop
jae
inc
jnp
ins
add
movs
or
bnd
and
sub
push
(bad)
xor
inc
adc
mov
sbb
pop
div
jge
sbb
mov
push
and
fistp
add
add
jno
pop
sbb
imul
push
push
bound
int3
xchg
cs
mov
int
fidiv
inc
test
sub
cld
push
pop
and
into
sti
push
sbb
out
(bad)
xlat
int3
sub
in
mov
lods
push
js
cmps
jmp
jae
and
dec
jno
aam
jb
dec
jns
mov
add
dec
add
sub
pop
sahf
xor
mov
jbe
fcmovne
mov
pop
pop
(bad)
pop
test
jo
mov
fucomip
mov
clc
aad
ret
retf
jmp
pop
aad
fcomp
push
dec
fnsave
push
repz
test
sbb
mov
popf
mov
and
adc
mov
mov
ret
fmul
sahf
add
pop
(bad)
pop
(bad)
cmp
xchg
and
push
enter
int
and
adc
push
mov
push
xchg
adc
or
mov
jae
dec
inc
imul
adc
cmps
xchg
punpckhdq
shl
sbb
ss
retf
lds
add
aam
mov
adc
fild
push
cdq
or
jecxz
mov
cmps
daa
stc
rcr
pop
inc
(bad)
dec
and
jg
repz
push
cmps
sub
dec
mov
sub
and
mov
jle
aam
in
mov
push
cmc
xlat
cmps
fnstcw
xor
stc
shl
adc
mov
movs
fdivr
and
push
sub
sub
das
daa
loopne
stc
fwait
(bad)
jmp
movs
cdq
jo
js
mov
or
sar
jl
xor
jbe
in
sub
aaa
and
add
inc
aaa
mov
mov
call
js
sbb
mov
jmp
xchg
or
xchg
shl
cmc
xchg
outs
das
xchg
sbb
xor
icebp
sahf
cmps
push
jo
movlps
je
and
(bad)
mov
jbe
arpl
pop
lds
mov
sub
(bad)
stos
xchg
into
add
das
push
(bad)
call
lods
lea
test
adc
cmp
test
imul
inc
in
out
cmps
dec
imul
cmp
xor
xchg
mov
sub
test
sub
push
mov
mov
jb
lods
jo
xchg
pop
and
adc
fstp
push
fild
xor
test
push
push
pop
inc
movs
jl
sbb
pusha
jmp
pop
mov
out
(bad)
pop
pusha
daa
mov
sub
inc
mov
(bad)
mov
mov
dec
fucom
lock
dec
stos
and
data16
mov
nop
stc
shl
dec
loope
les
sub
add
ss
mov
and
mul
movs
int
and
push
movs
neg
lahf
jae
pop
imul
pop
cmp
adc
mov
in
push
jmp
sti
inc
sbb
cmp
ins
or
stc
shl
pop
ja
jnp
fbld
add
or
aad
xor
test
mov
xchg
aas
les
in
rol
inc
hlt
add
xor
dec
test
dec
inc
jmp
fs
retf
sub
dec
(bad)
into
test
mov
push
add
imul
or
sbb
sar
in
pop
hlt
sub
dec
addr16
or
les
sub
xchg
gs
enter
jmp
cmp
cwde
sti
sub
and
leave
sbb
xor
jns
enter
mov
mov
pop
icebp
lds
push
hlt
(bad)
pop
add
xchg
inc
jo
and
scas
test
in
dec
addr16
sbb
mov
call
xchg
push
outs
in
test
sbb
push
mov
cwde
push
jmp
inc
in
xor
inc
test
push
aam
xchg
out
loope
adc
test
push
pushf
mov
test
mov
std
jmp
dec
jne
jmp
adc
mov
ffreep
hlt
test
aam
out
aam
out
jnp
adc
mov
out
psrld
sbb
jb
pop
mov
mov
fsubp
xchg
sar
add
push
sub
jmp
xchg
ret
cli
int3
(bad)
adc
cmp
cmps
ins
loopne
and
leave
jecxz
jecxz
mov
add
cmps
pop
mov
imul
jl
lock
es
ror
and
mov
(bad)
jae
xor
push
add
mov
mov
or
dec
jnp
or
fucomp
adc
repz
and
pop
or
pop
xor
and
sub
sbb
ret
mov
or
test
and
mov
outs
outs
neg
cmp
mov
loop
hlt
aad
adc
mov
sub
and
xchg
inc
xor
and
jle
inc
fist
scas
pop
fcom
aad
jne
ja
ss
(bad)
or
jns
or
and
inc
jae
loop
add
mov
jne
enter
add
shl
fmul
xchg
out
imul
sar
in
retf
fwait
pop
cli
data16
push
call
dec
xchg
mov
xchg
movs
mov
adc
or
in
(bad)
vmwrite
jno
fldcw
int3
lahf
ins
sub
sub
push
(bad)
push
cmp
or
push
fmul
sbb
xor
sbb
inc
loop
mov
test
aam
cwde
adc
mov
mov
sti
jb
jge
mov
in
(bad)
(bad)
outs
xchg
sbb
cmp
sbb
cwde
jge
das
cli
and
cmp
xchg
or
sub
push
mov
rol
push
and
xor
gs
gs
add
lock
push
cmc
add
xchg
dec
and
mov
jo
push
outs
jle
sub
aas
dec
pop
(bad)
fwait
sub
sub
stc
(bad)
xor
aam
push
icebp
mov
and
shl
fisttp
call
dec
jmp
loope
pop
addr16
or
outs
pop
mov
out
shl
sub
int3
cdq
adc
or
outs
ret
movs
and
int
inc
jmp
daa
cmps
push
ss
adc
leave
jl
sub
aas
xor
xor
and
dec
xchg
sbb
mov
aad
pop
pop
xchg
add
inc
xor
daa
mov
outs
js
mov
cmp
ins
ficomp
cdq
push
in
leave
int
push
xchg
and
(bad)
clc
mov
fldcw
cmp
test
mov
or
daa
xor
sbb
in
or
cwde
das
pop
test
out
int3
lahf
mov
pusha
shl
xor
lock
popa
push
ins
dec
(bad)
out
mov
mov
push
jmp
pop
dec
pop
fdiv
cdq
cmc
loopne
jnp
mov
xchg
pop
js
js
div
mov
imul
(bad)
or
push
pusha
lods
in
cld
les
mov
jg
mov
push
test
ficom
add
out
pusha
pop
pushf
sbb
stc
or
js
dec
pop
dec
jp
loop
movs
in
pop
cmp
mov
mov
es
xor
lock
hlt
cli
mov
stc
psllq
(bad)
mov
stos
xchg
inc
test
aad
dec
dec
mov
sub
mov
pop
xchg
fiadd
sar
mov
dec
pop
push
adc
vpsadbw
or
adc
shr
mov
aam
push
add
cmp
gs
rcr
jg
(bad)
movntps
xchg
fisubr
xchg
fwait
mov
mov
push
adc
ret
stos
jbe
es
xchg
in
outs
scas
push
jne
callw
jnp
xor
cmp
les
jle
cwde
pusha
fldenv
stos
xchg
mov
movs
mov
ror
les
ins
jle
pop
outs
test
ficomp
arpl
ins
lock
ss
imul
pop
ret
sub
push
mov
sahf
pop
out
mov
mov
rcl
out
lods
enter
and
xor
push
xchg
add
sbb
sub
repnz
mov
into
mov
mov
inc
(bad)
aam
push
xor
or
pop
out
dec
dec
movs
je
ds
sbb
sub
inc
fdivr
fist
mov
adc
and
add
js
idiv
and
or
out
sbb
dec
outs
and
in
mov
sub
cmc
out
cmc
pop
adc
fwait
mov
ins
fmul
jl
hlt
repnz
cld
cmp
imul
sbb
inc
pop
jb
repz
mov
sar
ja
(bad)
inc
sbb
and
mov
out
mov
xor
call
adc
imul
(bad)
or
div
pop
fcom
and
jp
jecxz
inc
aaa
and
stos
pop
(bad)
cmp
je
add
pop
popa
adc
push
sub
xchg
stc
leave
mov
push
clc
mov
add
push
aam
stos
test
jnp
enter
mov
shl
push
lods
sub
shl
dec
xchg
sub
mov
mov
mov
fisubr
ror
dec
in
sbb
mov
sbb
cmc
xlat
pushf
inc
loope
fsub
loopne
scas
aad
das
out
or
adc
jbe
daa
ret
push
and
jno
sub
shr
std
push
push
sbb
sahf
sti
lods
icebp
fcmovnu
test
and
mov
and
icebp
pop
rcl
and
fisub
mov
push
push
and
adc
je
pop
jmp
cli
test
xchg
lea
xor
inc
outs
ins
pop
inc
stc
pop
iret
mov
mov
(bad)
fdivr
inc
and
ins
les
in
cmp
aad
sub
add
(bad)
xor
imul
adc
pop
lods
adc
rcl
push
in
cdq
mov
fadd
aaa
xor
add
mov
es
shl
test
xlat
dec
fcmovnb
imul
aas
mov
or
sbb
pusha
fld
inc
push
jmp
mov
inc
sub
or
call
cmp
add
out
rcr
sub
sar
es
xor
icebp
into
and
out
push
jge
cmc
sub
lods
pop
and
popf
call
in
int3
lods
int3
dec
mov
adc
leave
cdq
xor
cmp
call
retf
sar
stc
stos
or
fistp
jmp
imul
pop
and
rcl
xchg
sbb
stc
jmp
mov
sub
add
js
inc
or
or
and
sub
mov
ret
mov
push
cwde
xchg
dec
out
push
fst
lds
lds
jmp
pop
sbb
mov
inc
aad
mov
xor
jecxz
inc
push
push
pop
fdivr
add
mov
repnz
pop
into
call
sar
cmp
jns
cmp
mov
sub
std
jbe
retf
push
popa
add
fucom
pop
or
dec
movs
sub
ds
sub
push
xchg
sbb
mov
add
mov
movs
cs
cdq
pop
xchg
jl
push
pop
or
ret
mov
cmp
or
and
out
xchg
jb
xchg
push
sub
test
test
jle
call
dec
pop
(bad)
out
or
pop
and
(bad)
jecxz
cmps
jo
inc
cmps
ficomp
imul
lahf
xor
punpckhdq
je
js
pop
mov
xor
dec
inc
(bad)
inc
or
jecxz
inc
push
mov
sub
xor
pop
in
in
adc
xor
mov
mov
xlat
ret
(bad)
push
inc
mov
cmp
jmp
xor
aam
inc
stc
mov
cwde
jb
xchg
mov
cs
inc
fiadd
mov
shl
adc
xchg
mov
or
sahf
leave
jge
lahf
test
pop
cmp
adc
inc
dec
mov
lock
adc
add
imul
fwait
repnz
enter
and
enter
je
push
mov
scas
movs
into
sbb
or
imul
sahf
adc
dec
pusha
mov
addsubpd
aad
push
jmp
scas
test
mov
add
xchg
add
lea
retf
std
movs
xchg
es
ret
inc
mov
cmp
adc
pop
dec
int3
int3
push
push
push
sbb
stc
aad
sub
enter
fcomp
mov
inc
push
dec
pop
nop
popa
dec
not
jge
inc
jno
cmps
stos
movs
pop
cmps
mov
lahf
inc
mov
clc
dec
dec
push
les
cmp
xor
jo
dec
out
dec
aaa
adc
mov
aad
inc
cmps
mov
jg
cli
pusha
xlat
fcmovne
fidivr
loop
cmp
adc
mov
inc
push
hlt
rcr
xchg
aam
jo
or
call
ja
out
lea
aam
add
stos
xchg
sub
and
scas
arpl
movs
inc
rcr
pop
sahf
mov
xchg
pop
adc
push
push
dec
add
test
cmp
in
xor
push
or
aas
add
push
inc
sbb
pop
clc
lock
sub
fsub
fisttp
enter
mov
cwde
sbb
or
cmp
cld
in
cli
in
cmp
sub
pusha
and
movs
scas
es
ins
test
repnz
mov
mov
add
popa
dec
in
dec
test
mov
push
push
mov
lods
inc
sbb
cmps
mov
xchg
pop
mov
sbb
pop
cmp
push
mov
xor
mov
enter
mov
push
std
jmp
cmp
jno
dec
add
sar
pop
addr16
and
pop
jl
xchg
adc
clc
and
jge
rcr
cld
in
xchg
push
leave
or
xchg
cli
in
adc
push
pop
pop
popa
cwde
lods
dec
dec
in
mov
mov
and
out
sahf
mov
dec
pop
or
cld
fs
in
jmp
in
inc
or
push
adc
cwde
(bad)
(bad)
jbe
std
addr16
movs
fisub
pop
(bad)
shr
js
rcr
retf
pop
mov
cli
int
jge
push
ficomp
mov
scas
stos
and
jbe
add
in
aaa
pop
sahf
(bad)
ficomp
cdq
cmp
repnz
stos
mov
(bad)
pop
xchg
inc
pop
shr
inc
xor
sub
jmp
mov
in
dec
lock
ds
enter
and
cmps
adc
sahf
cmp
jp
push
ret
add
popf
(bad)
mov
test
imul
mov
dec
aam
inc
mov
pop
and
mov
outs
mov
aas
mov
icebp
ret
inc
cvtdq2ps
inc
jmp
dec
test
pop
push
stos
lock
push
icebp
push
xor
push
jmp
rcl
pop
mov
and
inc
cmc
test
imul
dec
retf
lahf
shr
fnstsw
xor
into
test
aam
mov
in
dec
(bad)
jmp
les
enter
in
call
pop
addr16
out
mov
pop
mov
inc
cmps
pop
(bad)
cli
xchg
cmp
and
jle
pushf
sub
jno
sub
call
leave
stos
and
ins
or
mov
bound
xor
xchg
nop
dec
and
(bad)
xor
lahf
call
xchg
movs
and
and
in
scas
xlat
xor
mul
fadd
add
inc
or
jp
and
xchg
mov
cmc
adc
or
inc
iret
ret
movs
leave
enter
mov
int
int3
ins
jne
retf
movs
bound
cmps
js
test
and
sahf
repnz
adc
pop
mov
push
push
pop
repnz
xchg
mov
mov
dec
jge
imul
pop
sub
jge
sti
pop
xchg
mov
cmps
int
imul
or
xchg
fimul
lds
nop
inc
push
cmc
(bad)
pop
fisub
and
add
(bad)
xlat
dec
imul
es
push
fdivrp
ins
xchg
jg
jp
inc
sbb
push
stc
adc
dec
fstp
pop
jns
push
sbb
add
sbb
iret
ficom
jge
and
or
inc
or
scas
nop
adc
xchg
cld
add
jne
movs
sub
mov
int
mov
and
out
idiv
xchg
cmp
(bad)
cmp
xchg
mov
js
ins
xor
sahf
sti
stos
inc
in
adc
sbb
test
xchg
bound
cmp
cli
cmp
scas
pusha
cmps
jo
add
pop
mul
pop
repz
inc
dec
and
retf
add
js
ds
into
jns
push
xor
stos
jge
sub
sbb
xor
fbld
lds
div
std
stos
pusha
mov
or
mov
pop
leave
sar
dec
push
xlat
fs
and
retf
jecxz
movs
mov
sahf
jl
mov
xchg
mov
adc
push
dec
push
push
cmp
test
les
aam
cmps
rcl
stc
dec
test
mov
scas
sbb
xor
xlat
cmp
jle
test
inc
loopne
fsubr
mov
lahf
xor
jb
cmovae
out
pop
bound
cmp
retf
(bad)
fsubr
loopne
dec
rcr
arpl
jne
push
push
fld
movq
adc
cs
outs
pop
ja
add
popf
ja
es
mov
cmps
xor
cmp
sbb
pop
into
sar
lock
inc
adc
sahf
fcom
(bad)
pop
pop
push
daa
outs
fcom
push
inc
das
shl
sub
mov
ror
xlat
imul
repz
mov
data16
int
call
les
and
xchg
hlt
xor
mov
outs
xor
cmp
call
scas
repz
movs
jno
(bad)
sbb
jmp
sar
mov
push
les
(bad)
jmp
mov
or
jb
and
test
add
outs
int
dec
out
mov
sti
aad
(bad)
aam
retf
mov
int3
fiadd
int3
adc
stos
mov
aaa
lds
stos
push
cli
and
les
lods
push
jns
mov
loope
mov
pop
xchg
imul
mov
cli
sub
xchg
test
pop
add
mov
daa
jbe
push
arpl
es
stos
aas
cdq
imul
lock
pushf
(bad)
(bad)
cwde
add
addr16
push
test
ins
jbe
ja
js
sahf
out
add
mov
push
inc
dec
cmp
and
sbb
push
movs
pop
(bad)
icebp
mov
and
xchg
popa
clc
sbb
mov
pop
push
pmaxub
adc
repz
xchg
lahf
icebp
cwde
mov
dec
cmp
sub
cdq
or
mov
push
out
dec
std
push
add
aad
(bad)
in
lods
sub
jb
dec
or
jnp
pop
adc
shr
ss
in
das
mov
jecxz
into
adc
jl
les
out
leave
push
iret
jecxz
mov
test
movs
sub
test
fnsave
pop
dec
sbb
fs
aaa
test
div
xor
xor
imul
mov
xor
add
fbld
xor
bound
ret
ror
fisubr
ja
call
test
jmp
nop
jns
push
push
push
jmp
sub
jo
xchg
idiv
ret
mov
es
sub
clc
pushf
jns
xchg
daa
ror
stc
neg
hlt
pop
cmps
adc
xchg
imul
outs
mov
test
sbb
sub
mov
xchg
daa
xchg
fwait
push
rol
test
mov
cli
fsubr
xor
nop
fist
or
add
sub
movs
(bad)
(bad)
leave
test
cmp
(bad)
sbb
ins
enter
rcl
(bad)
xchg
pop
and
push
push
add
xor
mov
or
pop
mov
jecxz
pusha
fld
cmps
scas
mov
scas
in
retw
and
mov
mov
fisub
jg
ja
jne
rcl
shr
inc
jle
xchg
inc
jmp
int
loop
lods
xchg
or
pop
push
push
add
dec
shr
dec
ds
sti
aas
jno
adc
inc
fsubr
cli
xchg
pop
mov
inc
or
into
lods
mov
addr16
imul
xor
icebp
das
rcr
pop
adc
cmp
in
dec
lock
repnz
aam
and
lds
xor
xlat
fistp
push
cmp
shl
mov
jmp
sar
div
scas
scas
or
cmps
or
pushf
cdq
outs
mov
mov
das
sahf
sub
cmp
ret
movs
cld
pushf
xchg
cdq
jl
jb
push
sbb
sbb
add
push
out
ins
mov
aad
inc
inc
mov
ins
outs
jne
mov
imul
jecxz
xor
mov
es
dec
jb
clc
pop
cmps
pop
push
pop
xchg
shr
into
mov
inc
pusha
fnstenv
test
movs
out
jecxz
push
(bad)
(bad)
dec
mov
out
dec
pop
mov
(bad)
pushf
fstp
(bad)
adc
daa
mov
inc
aad
popf
add
pop
fs
sbb
push
inc
shl
sub
or
(bad)
(bad)
push
push
push
pop
adc
sbb
aam
test
ror
and
pop
loop
out
aas
addr16
fisub
adc
inc
dec
dec
aam
xchg
mov
and
pusha
xor
ja
jge
test
adc
inc
mov
or
xor
mov
jbe
sbb
xchg
jb
aam
shl
jne
mov
push
loopne
mov
pushf
and
stc
(bad)
sub
jno
jno
call
retf
sbb
dec
mov
scas
mov
ds
sahf
add
push
xchg
mov
ja
js
(bad)
stc
call
add
in
mov
cmps
mov
jmp
loop
stos
cwde
push
dec
mov
sbb
jmp
mov
jle
into
jno
(bad)
call
xchg
pop
jno
cli
jecxz
xor
(bad)
ja
not
jo
jnp
mov
or
push
int
jmp
mov
push
fwait
jle
aad
mov
pop
pop
fdiv
shr
movsx
jecxz
rcl
stos
nop
adc
into
cmp
ja
jnp
retf
lahf
in
push
es
(bad)
lahf
jbe
or
or
call
push
adc
mov
sbb
xchg
fs
mov
test
inc
call
xor
or
and
cmp
in
imul
imul
push
pop
(bad)
ror
mov
push
mov
imul
ror
sub
into
iret
mov
rol
pop
je
xchg
pop
inc
stos
or
call
outs
and
fadd
sub
xchg
mov
mov
ret
shl
push
and
mov
mov
movs
ficom
cmps
mov
jmp
pop
xor
lock
push
jle
adc
addr16
mov
jecxz
jbe
push
mov
das
sbb
imul
(bad)
daa
push
movs
xchg
cld
es
xchg
mov
adc
mov
xchg
es
mov
push
in
lods
ja
fldcw
xchg
cmp
jle
jns
mov
scas
mov
cli
push
jnp
pop
int3
mov
cdq
setns
movsx
and
bound
sub
sbb
sbb
fisub
xor
lds
sub
jnp
cld
stc
mov
or
dec
pushf
push
pop
arpl
js
cld
out
lea
rol
cmps
imul
push
jb
push
mov
daa
clc
pop
int
cmp
cmps
xchg
xchg
dec
mov
sahf
cmp
sbb
mov
xchg
mov
cmps
adc
and
or
test
ja
jge
jmp
xchg
lahf
dec
test
repnz
mov
pop
das
mov
lds
clc
jae
inc
ins
jg
xchg
jg
aad
push
daa
mov
xor
cmps
cmps
push
mov
jns
xor
sub
dec
sbb
cmp
mov
sub
test
data16
inc
ins
mov
push
fidiv
pop
adc
enter
pop
push
adc
and
pushf
imul
fs
in
add
test
cmp
in
(bad)
in
call
mov
pop
bound
mov
outs
or
mov
inc
ins
jg
jecxz
pop
test
jecxz
(bad)
(bad)
test
sar
pop
push
stos
push
push
jmp
test
and
stos
pop
dec
add
push
jmp
add
jno
or
pop
push
nop
shl
mov
xchg
and
test
mov
bound
test
add
sbb
inc
sar
shr
add
outs
fldcw
mov
xor
xchg
fwait
cmp
ret
icebp
popf
pop
and
int3
repnz
inc
sbb
add
stos
(bad)
mov
test
and
mov
mov
mov
retf
add
sahf
in
cs
jns
adc
inc
or
mov
jb
jl
and
or
mov
mov
movs
xchg
retf
xlat
test
push
lods
or
fidiv
mov
ds
data16
pop
mov
ret
lods
and
leave
jnp
mov
push
push
test
sbb
sub
fdivr
and
shl
pop
out
jo
cwde
inc
les
jecxz
push
pusha
sbb
psraw
dec
imul
sbb
call
sub
stos
mov
sub
xchg
aaa
and
test
sub
xchg
sub
push
adc
or
stc
stos
popf
or
(bad)
ret
popf
(bad)
movs
dec
adc
ja
cmp
add
lods
or
sub
mov
push
movs
leave
or
jns
inc
pop
and
sbb
xchg
jle
adc
dec
cmp
lds
fsub
bnd
xlat
xchg
(bad)
jge
adc
adc
jns
push
scas
clc
(bad)
imul
cdq
dec
and
sub
xchg
push
popa
inc
and
loopne
adc
pop
(bad)
loopne
inc
and
mov
and
add
nop
jge
not
cdq
ins
add
jnp
retf
rcl
xor
ins
and
cmp
mov
jae
arpl
xchg
and
adc
mov
mov
shl
mov
sbb
cmp
pop
frstor
pushf
push
xor
push
mov
pop
sub
xchg
pop
and
cmps
sysenter
inc
sub
rcl
int
mov
dec
inc
scas
aas
fist
cmp
clc
add
dec
(bad)
gs
dec
repz
push
jmp
push
fidiv
aaa
add
sbb
jo
push
mov
mov
xor
std
loope
pop
xchg
inc
dec
imul
cdq
pmullw
xchg
test
jbe
mov
push
dec
out
movhps
inc
add
inc
sub
int3
xor
add
adc
push
push
inc
repnz
pop
js
ds
hlt
xchg
push
jae
div
(bad)
push
aad
aas
rcl
adc
mov
call
ret
lds
push
adc
rol
fldl2t
xchg
sub
mov
dec
test
arpl
dec
jbe
outs
inc
lods
imul
jns
(bad)
ficomp
cmp
popa
mov
jecxz
fnstenv
inc
sti
out
add
cld
repnz
add
cli
mov
pop
sbb
pop
mov
xchg
in
inc
shl
call
inc
dec
jae
push
rcr
(bad)
jb
ret
or
stos
cdq
(bad)
inc
push
push
idiv
xchg
xor
inc
or
push
loop
outs
mov
jmp
jp
aas
sbb
outs
inc
mov
mov
out
stos
in
or
outs
rcl
push
jp
push
fwait
inc
or
ficom
push
push
movs
push
cmps
xchg
and
cwde
sbb
call
dec
out
and
sub
aad
pop
fidiv
sub
or
dec
lea
clc
xchg
inc
adc
sbb
lahf
push
xchg
mov
(bad)
ds
mov
addr16
inc
ret
adc
mov
int
mov
cmc
pop
jmp
sub
xlat
adc
inc
(bad)
repz
je
sbb
les
push
test
pusha
and
cmps
shl
sbb
imul
leave
aad
lods
cmps
je
or
mov
or
mov
mov
into
inc
dec
dec
jne
dec
inc
cmp
push
inc
ror
es
in
imul
in
pop
add
mov
inc
mov
push
outs
out
mov
gs
add
pop
(bad)
adc
fist
pop
bound
mov
pop
dec
iret
xchg
daa
dec
push
es
pop
add
jge
and
cmp
stos
pop
xchg
(bad)
pop
mov
push
adc
mov
xchg
cmps
sbb
mov
and
jno
sbb
mov
or
or
scas
or
and
pop
cmc
push
pop
jmp
sub
add
outs
sbb
stos
scas
xchg
cmp
add
scas
pop
mov
sub
test
lahf
sub
addr16
jmp
hlt
lods
xchg
and
mul
jns
jmp
or
pop
pop
or
fucomi
inc
leave
les
rcl
loop
bound
cmove
add
mov
data16
push
shl
outs
fidivr
adc
push
int
jg
retf
movs
xchg
les
les
jno
pop
aam
ds
sbb
into
or
xchg
es
fstp
adc
xchg
xchg
nop
or
mov
sahf
(bad)
gs
add
pop
sbb
adc
pop
add
comiss
icebp
(bad)
retf
mov
mov
lahf
lds
xchg
popa
jns
xor
add
stos
rdpmc
push
and
push
xor
ret
loopne
cmps
add
sub
mov
inc
enterw
test
mov
dec
arpl
mov
and
daa
in
adc
inc
std
pusha
pop
ds
sbb
lock
dec
jmp
(bad)
cmp
inc
int3
arpl
cwde
mov
or
xchg
jmp
jo
mov
and
xor
cld
imul
retf
pop
pop
pop
push
enter
inc
mov
or
out
icebp
pop
pop
cwde
pop
(bad)
push
adc
mov
pop
retf
pop
mov
push
mov
rcl
or
test
cmp
ficomp
adc
test
lahf
add
inc
cmps
(bad)
dec
add
bound
push
cwde
sub
pop
out
leave
push
mov
neg
cmps
arpl
std
(bad)
inc
mov
fist
nop
stc
mov
rcl
dec
fucomp
gs
dec
lods
pushf
push
mov
iret
stc
(bad)
movs
pop
lods
dec
pop
ret
pop
inc
in
inc
mov
shl
mov
adc
sub
adc
lea
shr
add
sbb
pop
mul
push
scas
aam
jnp
and
sahf
std
pop
call
jne
pop
sahf
daa
add
vphaddudq
pop
lods
dec
stos
adc
fadd
movs
pop
test
shl
xchg
adc
xlat
ds
xchg
pop
lock
push
nop
in
nop
mov
xor
sbb
div
js
(bad)
fild
push
add
sti
addr16
clc
or
xchg
xor
je
sbb
mov
inc
add
push
sub
daa
push
inc
jnp
retf
and
adc
sbb
lods
call
jecxz
inc
jb
inc
push
add
add
or
inc
mov
div
mov
add
sbb
in
(bad)
jns
adc
jb
stc
cli
xchg
cmp
fidivr
add
sbb
mov
scas
in
sbb
and
scas
xor
push
or
xor
mov
in
dec
ds
arpl
dec
or
mul
outs
mov
in
mov
imul
pop
push
xchg
mov
inc
sbb
jp
pop
ds
int3
push
mov
bound
xchg
hlt
adc
xchg
movs
movs
sar
sbb
mov
add
call
repnz
mov
mov
repz
dec
retf
test
outs
mov
clc
es
add
fadd
test
test
popa
fmul
dec
mov
xor
je
js
aad
js
jne
sahf
push
push
inc
adc
adc
sub
push
fnop
fidiv
ins
mov
pop
pop
xor
xor
ja
out
pusha
and
(bad)
adc
or
xor
in
push
xchg
pop
(bad)
inc
ror
out
lds
inc
adc
mov
mov
jle
jl
push
and
mov
jecxz
and
in
mov
(bad)
xor
cmp
in
shl
push
pop
pop
je
add
jnp
cmp
jb
pop
sbb
push
push
jo
cwde
pop
xor
or
cmp
shl
add
pop
sub
push
jne
ds
xchg
lea
jecxz
pop
mov
mov
mov
cmps
add
mov
pop
xchg
fsub
lods
ja
cmp
scas
inc
ds
outs
test
mov
and
pusha
push
xchg
js
pop
xor
jns
and
jmp
add
mov
jge
ret
add
xchg
xor
fwait
adc
ret
mov
sbb
adc
in
mov
pushf
or
push
push
icebp
sub
es
cmp
fidiv
pop
or
iret
bound
mov
enter
int3
hlt
lods
pop
lahf
sub
gs
test
out
xchg
adc
daa
fs
(bad)
ja
and
fsub
loope
cmp
stos
pop
xchg
clc
dec
sub
popa
push
test
inc
add
jecxz
fdivr
(bad)
div
retf
dec
jmp
push
xchg
repnz
mov
mov
or
scas
push
mov
fscale
sbb
sub
(bad)
mov
stc
xlat
mov
rcr
mov
push
icebp
les
sysret
call
mov
sub
lds
push
je
in
outs
cmc
(bad)
enter
pop
das
outs
icebp
mov
xchg
scas
outs
add
sub
add
push
fidiv
arpl
movs
loop
add
sahf
mov
cmp
aas
xor
mov
pop
hlt
or
jo
or
out
enter
mov
loop
outs
std
fcomp
cmp
mov
mov
mov
dec
test
cmp
sub
retf
xchg
enter
ins
sar
sub
or
cdq
sub
out
loopne
(bad)
aas
stc
ins
retf
ins
dec
or
push
popa
in
push
ss
dec
rcl
pop
shl
daa
sbb
ret
(bad)
cmp
adc
call
pop
aaa
fadd
lds
xlat
mov
adc
lds
cmp
inc
pop
inc
pop
outs
pusha
out
sub
jge
(bad)
jbe
aaa
add
push
fwait
cwde
xchg
inc
pop
sub
xor
jae
leave
and
jno
sub
sub
pop
dec
or
adc
xchg
or
popa
pop
dec
or
inc
out
jbe
test
dec
icebp
dec
aaa
and
pop
fsubrp
test
sbb
pusha
jle
ret
(bad)
jns
aas
add
test
inc
cmps
fimul
fcmove
adc
or
mov
fnstcw
loopne
jnp
sbb
cwde
cli
pop
mov
cmp
mov
adc
cli
cmp
retf
sar
push
add
dec
mov
mov
pop
xor
mov
sub
push
scas
(bad)
fwait
lahf
lahf
and
or
fbstp
mov
pop
popa
(bad)
xchg
ss
fs
loope
mov
ins
mov
mov
(bad)
xlat
in
outs
or
adc
sbb
stc
cmps
cwde
sbb
or
aas
mov
aad
clc
cmp
inc
retf
xor
push
pop
in
(bad)
stos
scas
sub
jo
jae
adc
pop
sub
nop
mov
and
stos
jne
in
sub
dec
adc
into
js
sbb
pop
jmp
cdq
mov
jno
aaa
xchg
fdivr
(bad)
adc
inc
and
in
pop
icebp
and
pop
inc
jo
ss
sub
imul
mov
inc
jae
ja
stos
sbb
or
ret
pop
dec
std
std
in
or
cli
jbe
nop
cmp
cmp
adc
push
adc
mov
test
dec
mov
dec
sub
test
sub
sti
fs
cmp
pop
retf
mov
test
arpl
jge
daa
xor
push
jl
push
xchg
dec
ss
mov
dec
push
and
add
mov
push
push
mov
ret
or
fwait
sbb
push
lea
iret
adc
stos
inc
scas
add
pop
adc
es
xchg
es
arpl
(bad)
adc
popf
or
pop
and
enter
aas
xor
in
outs
pop
jb
mov
xlat
jne
sar
frstor
in
xor
dec
rcl
jns
std
repnz
repz
jnp
or
lock
retf
or
(bad)
(bad)
xor
cmps
pop
test
dec
cmp
call
mov
sbb
pop
mov
in
jp
mov
jmp
std
sbb
push
leave
xchg
adc
lock
inc
dec
cmp
sahf
imul
push
gs
add
outs
sar
push
ds
push
cmp
rcl
lock
dec
fdiv
cmp
jecxz
add
stc
dec
sbb
test
jmp
cs
and
in
clc
(bad)
fild
mov
dec
enter
ds
xor
mov
fdiv
pop
dec
stos
ss
jnp
ret
cdq
aad
mov
inc
(bad)
mov
lea
jecxz
out
test
mov
dec
mov
popf
and
pop
dec
ret
add
or
std
mov
pop
or
push
loope
gs
or
xor
test
sub
out
or
call
and
gs
jecxz
cmps
fnstsw
xlat
js
push
sti
repnz
push
push
and
lods
adc
(bad)
loopne
outs
pop
lods
fist
mov
mov
popa
call
inc
jno
sub
sbb
mov
adc
xor
jmp
lock
inc
loop
xchg
push
mov
pop
fdiv
in
fs
jl
mov
fild
cmp
or
lds
not
push
nop
arpl
ins
xor
xchg
push
push
push
jmp
lea
mov
out
jns
cmp
sub
in
mov
cld
push
or
fst
(bad)
cmps
xlat
fadd
adc
test
call
pop
aaa
pop
add
cmps
dec
xlat
stos
xchg
push
xchg
cli
popa
aam
add
vorps
fwait
xchg
xor
add
into
in
jne
sbb
mov
aas
mov
loop
xchg
jne
xor
push
mov
call
sub
arpl
sbb
pop
mov
sbb
cmp
in
adc
push
jne
mov
shl
xor
int
mov
mov
mov
push
out
clc
fimul
xlat
pop
mov
push
pop
cmc
add
test
and
adc
lahf
or
or
dec
xor
xor
sbb
sub
sub
add
xchg
sbb
cld
pushw
add
lea
stos
cmp
push
ja
push
sbb
or
or
in
mov
pop
cmp
movs
popa
dec
mov
shr
out
pop
jmp
mov
mov
jnp
mov
jl
in
imul
jge
push
in
pop
adc
daa
stc
dec
or
add
cmp
add
ins
dec
mov
and
cmps
xchg
mov
sbb
adc
xchg
cmp
or
lea
mov
and
in
lods
xchg
jne
add
leave
aad
iret
cmp
mov
in
adc
in
jmp
test
push
rcr
push
xchg
inc
dec
shl
loopne
mov
inc
mov
inc
dec
test
push
out
dec
leave
jne
inc
pop
fadd
fsin
or
or
pop
fcom
mov
cmp
(bad)
mov
jg
sti
scas
jmp
mov
scas
pop
mov
jnp
and
es
outs
mov
sub
cwde
dec
cmp
push
push
pushf
push
lea
xchg
daa
dec
pop
nop
push
ins
push
enter
push
or
jle
lea
push
dec
mov
push
div
fcmovnu
lds
icebp
jle
push
(bad)
mov
adc
stos
cdq
sti
push
fist
out
jbe
cli
cmp
jge
call
mov
aas
jmp
jg
mov
cmps
and
xchg
jmp
sbb
mov
pushf
js
or
jb
or
jp
int
shl
pop
pop
xchg
ret
push
push
aam
and
outs
call
add
loopne
cdq
outs
fidiv
sub
dec
stos
add
ret
sub
mov
cmps
js
or
repz
jbe
fscale
out
test
fdiv
cmp
pop
push
gs
adc
sub
out
add
imul
bound
lahf
sbb
pop
dec
aas
pop
jge
and
xor
aad
mov
xor
cmp
(bad)
dec
in
xchg
dec
and
das
fmul
cli
sub
inc
inc
mov
sbb
mov
test
xchg
arpl
sbb
sbb
and
cmps
and
lods
and
call
pushf
cli
sub
sub
lea
in
loope
ja
add
push
les
push
scas
add
sub
jne
cmc
cmps
aam
mov
xchg
xchg
(bad)
and
sub
jns
fst
and
xor
jp
or
mov
or
jle
mov
sar
jmp
cmp
mov
sub
int
lods
cmp
jle
push
fs
enter
sub
repz
jne
in
add
push
add
xchg
push
push
(bad)
push
enter
jge
add
xchg
leave
push
cmp
add
in
sub
retf
arpl
arpl
rcr
rcr
mov
xor
fst
test
std
mov
xchg
push
and
out
shl
dec
add
xchg
daa
jecxz
xor
bound
test
sbb
cmps
xor
mov
dec
stos
sbb
xor
adc
push
mov
retf
movs
mov
jne
sub
sbb
pop
sub
jecxz
retf
add
aaa
int3
(bad)
bound
in
jp
mov
xchg
jno
fsub
sub
pop
xchg
rol
push
test
push
fld
bound
data16
enter
test
cmc
out
daa
dec
cmp
mov
dec
ror
dec
data16
dec
scas
jmp
jnp
daa
push
or
cmps
cmp
and
pusha
in
je
jge
jne
push
scas
mov
mov
sub
and
repz
pop
nop
pop
mov
icebp
xor
adc
adc
or
jl
pop
adc
push
nop
aaa
in
repnz
fnstsw
or
sbb
mov
add
push
ror
adc
mov
push
aad
cld
pop
jp
ss
scas
inc
add
and
or
leave
dec
ficom
sub
cmp
mov
push
pop
or
add
mov
in
xchg
cmps
or
mov
jbe
mov
shl
std
in
outs
cld
ins
mov
popf
sahf
fstp
add
loopne
out
dec
lahf
mov
cmp
gs
lahf
jmp
dec
dec
iret
hlt
(bad)
fist
ins
and
adc
push
pop
outs
(bad)
scas
pop
jno
in
das
sub
jno
or
sub
or
call
scas
pop
cmp
cli
int3
jno
call
dec
ficomp
out
push
cmps
xchg
inc
jno
fwait
inc
sahf
mov
js
cs
(bad)
fstp
dec
outs
inc
and
into
pop
neg
fidivr
ja
enter
mov
arpl
jo
nop
fnstenv
call
pop
mov
sbb
adc
ds
ficom
outs
repnz
gs
rcl
dec
mov
inc
(bad)
cmp
jl
and
mov
mov
(bad)
cli
fnstsw
xchg
in
jge
lea
sbb
xchg
mov
push
jnp
mov
sub
jp
ins
ins
and
in
mov
add
inc
or
mov
test
lods
xchg
aam
or
or
mov
scas
(bad)
mov
jg
(bad)
out
imul
pop
retf
repz
push
call
int3
je
mov
push
sbb
mov
in
movs
loopne
cmps
aam
push
jecxz
xor
add
jmp
retf
loope
shr
aad
jle
mov
not
jne
aaa
leave
sahf
mov
nop
pusha
xor
(bad)
retf
aaa
sti
(bad)
mov
or
xlat
sub
xor
arpl
(bad)
sub
add
mov
mov
adc
pop
leave
stos
in
xlat
jl
mov
mov
lods
adc
sbb
push
add
inc
cmp
push
sti
push
sub
sbb
mov
hlt
sti
mov
loopne
jnp
movs
xchg
repnz
aas
arpl
fidiv
div
stos
pop
adc
pop
dec
aam
cmc
pusha
jns
dec
jmp
je
jecxz
push
gs
sub
popf
shl
out
(bad)
retf
mov
push
test
pop
rol
pop
dec
mov
call
xchg
nop
adc
push
leave
cmp
jb
cmp
lock
xchg
push
xchg
xor
jbe
ins
scas
jp
out
arpl
enter
inc
dec
popf
jle
fmul
lods
sbb
je
addr16
repnz
mov
or
sbb
and
hlt
test
add
jns
sub
scas
xchg
and
push
out
sub
les
daa
aam
jmp
rol
pop
xchg
cli
cmp
nop
es
and
cwde
stos
mov
cmp
popa
aad
loope
ins
cmps
mov
loop
pop
mov
or
mov
push
jae
push
sub
call
ins
mov
je
gs
(bad)
icebp
aaa
xlat
daa
aas
ins
retf
sub
call
mov
gs
rcl
mov
(bad)
cli
out
add
out
sar
pop
retf
lods
(bad)
xor
jle
push
ss
or
ret
mov
(bad)
in
gs
lahf
or
scas
add
in
dec
jl
cs
hlt
adc
push
mov
adc
movs
adc
jmp
into
sbb
(bad)
in
enter
adc
aas
sbb
fisub
mov
pop
push
adc
add
xchg
xor
retf
xchg
jmp
add
fdecstp
test
mov
outs
mov
stos
repnz
push
push
cld
lea
xor
ja
sub
fbstp
jno
sbb
hlt
pop
mov
jmp
pop
mov
loope
inc
lods
cmps
dec
mul
mov
fdivr
test
jb
arpl
pop
and
xchg
cmp
int
shr
stc
dec
addr16
aam
movs
push
lock
and
mov
cmp
data16
xor
or
ja
adc
neg
or
ret
xor
jp
cs
mov
out
loopne
loop
dec
push
test
push
repnz
inc
call
mov
stos
mov
jbe
mov
and
inc
xchg
adc
cld
push
fcom
jae
sar
or
cmp
out
push
xlat
ficomp
pop
sub
int3
jb
jmp
fidivr
mov
test
imul
pop
in
push
lods
cld
mov
mov
lea
jbe
add
xor
scas
aaa
add
in
(bad)
pusha
jne
arpl
or
jno
mov
mov
popa
push
dec
dec
pop
pushf
cli
mov
dec
ds
fiadd
scas
push
les
ss
push
jb
sub
aam
mov
bound
lods
scas
add
mov
mov
sub
fadd
xor
jno
mov
dec
xchg
std
push
outs
and
fucomi
scas
xlat
add
test
sub
fdiv
jbe
cmp
mov
rol
outs
lods
mov
push
scas
stos
addr16
(bad)
and
sub
movs
cmc
xchg
out
(bad)
sub
ret
out
out
out
pop
popa
jb
movs
(bad)
in
xor
arpl
outs
dec
cmp
lods
push
popf
push
cmps
call
and
mov
sbb
sub
addr16
adc
movs
add
cmp
fcomp
out
sub
mov
imul
adc
cmc
pop
jne
xlat
jge
add
xchg
cdq
cmp
cmp
pop
shr
stos
es
out
jnp
jmp
gs
xor
(bad)
aad
inc
aas
dec
add
jne
(bad)
push
lods
jo
repz
cmp
aaa
maskmovq
cmp
mov
scas
inc
or
dec
push
adc
jns
fadd
mov
sbb
lds
pop
outs
mov
js
es
xchg
(bad)
sbb
shr
or
add
mov
jge
call
(bad)
fstp
stos
jne
inc
jne
push
out
mov
movs
xchg
pop
aam
jne
pop
sbb
or
fwait
in
ins
push
es
pop
cmp
dec
mov
scas
test
mov
jg
data16
cmp
mov
(bad)
shl
jg
or
inc
cmp
retf
fst
adc
cmps
dec
mov
mov
arpl
fild
neg
daa
dec
shr
jl
push
add
mov
dec
mov
fld
test
cmp
dec
out
int
out
lods
aas
icebp
xchg
add
push
sbb
rcl
mov
popf
add
jecxz
out
les
mov
shl
add
sub
jecxz
sbb
xrelease
add
cdq
cli
jle
test
xchg
mov
sub
sar
ins
fnsave
ss
ficom
lock
daa
out
jg
pop
mov
and
and
sar
test
sub
stos
int
sti
jp
pop
ins
loop
inc
pop
leave
jo
adc
dec
mov
or
and
loop
push
xor
mov
mov
repz
popa
push
shl
xchg
push
(bad)
pop
push
jns
xchg
fcom
mov
fcmovb
popa
pop
aad
pop
sbb
inc
aam
and
(bad)
shl
push
add
adc
add
mov
mov
fs
pop
loopne
ror
push
cld
iret
mov
push
sub
xchg
push
and
adc
mov
clc
inc
rcl
push
gs
repz
mov
adc
cmp
gs
xchg
jl
mov
and
test
dec
pop
jp
scas
pop
push
fwait
push
cli
mov
adc
jne
jbe
jmp
cmc
cmps
adc
enter
xchg
lock
aad
mov
mov
and
inc
push
pushf
arpl
dec
sbb
add
dec
popa
inc
push
xchg
test
cmp
sahf
xor
out
dec
inc
mov
outs
adc
sar
xchg
jb
js
and
retf
cmps
clc
hlt
mov
cmps
retf
in
arpl
int3
sub
lods
pop
into
jmp
dec
repnz
pop
pop
call
dec
and
mov
add
xchg
shl
ret
jo
loope
sub
ja
jnp
dec
hlt
dec
icebp
pushf
dec
push
retf
bound
mov
(bad)
stc
outs
repnz
mov
imul
push
movs
inc
int
jbe
in
in
fld
jmp
inc
cmps
mov
ret
(bad)
sbb
movs
into
fnstenv
jb
and
cmp
popf
idiv
mov
adc
icebp
loope
test
or
jle
sbb
aam
mov
(bad)
movs
or
cld
jg
sbb
arpl
add
jns
inc
dec
cmp
jb
cmp
ret
xchg
mov
mov
push
sub
in
enter
mov
mov
jb
or
pop
aaa
dec
loope
test
test
retf
orps
aas
mov
out
pusha
xor
xchg
xlat
xchg
out
pop
and
sar
stos
mov
xchg
xchg
retf
(bad)
ins
xor
into
out
or
fnstenv
outs
bsf
sbb
xor
nop
outs
cwde
fs
mov
or
test
loopne
daa
or
mov
add
or
xor
retf
cdq
sub
aaa
aam
cdq
xchg
fiadd
sbb
lods
popf
ins
jae
dec
mov
xor
cmp
or
ror
repnz
xchg
int3
inc
dec
fs
pop
lock
ss
std
add
xchg
pop
or
xchg
push
mov
and
lds
sbb
cmp
neg
or
pop
jmp
mov
sbb
aas
jmp
test
out
aas
outs
fwait
je
aam
jg
adc
mov
dec
cmps
push
jecxz
fisubr
mov
mov
push
jmp
mov
xlat
xor
xchg
inc
pop
aam
lods
stos
mov
rcl
sti
in
push
fiadd
mov
pop
or
leave
mov
ror
jmp
mov
ror
pop
jmp
popf
fisttp
aaa
adc
mov
aaa
xchg
mov
mov
xor
sub
aaa
cmp
sbb
mov
ss
dec
sub
and
aam
mov
aaa
cli
cmp
sahf
push
cmp
jns
mov
ror
(bad)
test
icebp
or
and
cld
cld
repnz
pop
stos
mov
mov
in
mov
sbb
mov
shl
push
(bad)
stc
push
add
mov
mov
icebp
sub
(bad)
jns
cmp
cmp
or
out
stc
pop
loop
inc
ror
outs
jmp
jmp
inc
and
inc
xlat
adc
ins
mov
mov
mov
scas
add
mul
mov
mov
push
stos
and
sbb
cmps
sbb
cmp
or
in
sti
aam
jg
dec
test
js
dec
xor
sub
popf
dec
sti
cdq
test
add
xlat
xchg
data16
cmp
and
aad
xor
daa
dec
lea
push
hlt
sbb
daa
mov
dec
xor
add
arpl
(bad)
fdivr
push
test
push
ss
add
add
repnz
or
sub
push
add
loope
cmp
push
arpl
ins
popa
icebp
fbstp
mov
clc
das
push
xchg
aas
and
std
pop
call
sub
cdq
or
ret
adc
sub
aam
dec
or
push
or
sbb
jmp
bound
push
push
repnz
scas
jl
sar
dec
jns
sub
ins
inc
add
push
and
dec
out
(bad)
pop
mov
xor
and
lahf
pop
rcl
pop
retf
lea
lahf
jmp
push
loop
les
(bad)
add
aad
inc
loopne
aaa
push
lock
pop
aad
sbb
mov
pop
cli
sbb
in
adc
test
sbb
adc
jg
adc
push
ss
push
sbb
dec
mov
add
mov
aas
push
cmps
cmps
fisub
sbb
sbb
call
stc
xlat
push
jmp
imul
jbe
push
cmp
das
mov
(bad)
ins
mov
jo
test
data16
neg
dec
sub
or
mov
push
xor
test
xchg
jmp
mov
nop
imul
or
(bad)
xchg
scas
aas
dec
push
ficomp
sub
ins
aam
(bad)
out
movs
pop
inc
fstp
call
adc
or
pop
gs
push
sti
shr
fwait
shr
test
js
das
in
mov
aas
cwde
je
cmp
dec
pop
mov
hlt
fistp
pop
rol
jbe
cmp
out
pop
dec
jmp
test
mov
xchg
sti
adc
movs
xchg
pop
pop
and
or
loop
or
and
aaa
inc
sbb
dec
adc
imul
imul
sub
add
push
pop
xchg
and
xchg
dec
cmps
jecxz
cli
(bad)
dec
out
daa
dec
sub
fwait
sbb
out
(bad)
in
sub
addr16
ret
and
sub
jecxz
push
or
outs
call
(bad)
jae
mov
jmp
int3
mov
or
out
addr16
add
dec
xchg
cdq
push
clc
aaa
iret
iret
mov
push
xor
lea
int3
xor
rcr
dec
jmp
cmp
pop
dec
out
in
in
jno
mov
sbb
mov
push
es
aad
jno
stos
pop
cs
sub
cwde
int
xchg
dec
sub
cli
ficom
pop
mov
retf
jp
ret
leave
test
and
ret
mov
and
jbe
hlt
outs
in
and
fisttp
inc
sub
adc
and
dec
xchg
and
push
cmps
pop
add
neg
mov
or
xchg
fcomp
dec
faddp
and
loopne
mov
imul
cmps
or
jns
lods
stos
push
add
and
or
test
clc
cmps
xchg
repnz
add
cmp
outs
rol
fs
sbb
mov
inc
pushf
lahf
inc
pusha
xor
add
mov
sbb
pop
xchg
(bad)
neg
cmp
and
mov
fsub
pop
adc
loope
inc
jl
adc
loope
out
bound
test
push
xchg
fmul
cmp
loope
(bad)
mov
sahf
out
push
mov
jo
mov
jo
imul
jnp
pusha
test
fs
sub
cld
ins
test
(bad)
fimul
fcomi
fcom
mov
mov
addr16
retf
das
pop
add
push
jb
hlt
aad
out
jne
and
push
(bad)
jno
sbb
mov
xchg
call
add
mov
test
mov
outs
mov
sub
ins
jo
xor
fcom
push
lahf
icebp
repnz
pop
add
cmp
icebp
jmp
fisub
xor
add
pop
fimul
data16
sub
adc
hlt
bound
jne
or
(bad)
scas
xor
fsub
aad
jg
push
mov
jle
rcr
cli
lock
out
sub
cmp
ss
jae
ds
mov
retf
jmp
xchg
jb
fst
dec
mov
ret
gs
adc
inc
pop
pop
mov
pop
xlat
dec
repz
inc
daa
rol
xchg
test
xor
push
les
and
inc
hlt
adc
mov
les
mov
cs
mov
fcmovnb
fld
ins
fwait
dec
sub
xor
pop
ret
dec
mov
dec
jecxz
push
jl
sub
addr16
and
xchg
out
mov
and
je
pop
es
mov
and
xor
inc
or
and
pop
mov
daa
mov
leave
ja
pop
mov
pop
and
test
daa
sahf
ficomp
in
shl
loop
pop
mov
ins
and
in
popf
cmp
test
mov
jmp
cmp
mov
ror
or
cmc
imul
mov
or
sbb
sub
push
(bad)
sti
in
cmp
add
(bad)
out
jmp
jge
push
repnz
xchg
test
hlt
pop
es
outs
cmp
pushf
int
xor
sbb
gs
rol
xor
ins
out
inc
outs
or
in
shl
repz
addr16
add
aam
sbb
adc
fst
int3
jecxz
and
mov
bound
inc
outs
pop
jb
jbe
ds
fcom
xor
jns
push
aad
dec
push
or
int3
cmp
or
pop
push
dec
pop
cmp
push
int3
adc
sbb
and
(bad)
sbb
inc
loop
sbb
call
pop
add
mov
icebp
addr16
sbb
cmp
or
mov
ret
repnz
cdq
push
out
std
cwde
in
cmp
xchg
bound
test
scas
(bad)
cmp
xchg
or
and
mov
mov
pop
add
cmp
and
xor
call
mov
pushf
mov
stc
mov
les
and
pushf
push
inc
mov
push
rcr
nop
out
cmc
hlt
int3
in
sub
xlat
xchg
gs
sti
ds
mov
pop
sbb
push
int
dec
xlat
test
scas
dec
inc
sub
sti
sbb
and
jge
push
or
lea
stos
in
mov
pop
jmp
scas
xor
out
pop
and
fsub
push
movs
lock
add
pop
sahf
aaa
mov
mov
cmc
xor
enter
or
jge
mov
xchg
movs
icebp
sbb
jg
jnp
call
cmps
lds
inc
xor
out
mov
mov
jae
cmps
sub
idiv
adc
mov
dec
dec
(bad)
cmp
pop
clc
jns
sbb
sub
inc
dec
imul
mov
xchg
push
jo
jnp
push
out
mov
fwait
in
dec
mov
mov
mov
push
jle
cmps
mov
mov
jp
es
xor
in
repz
dec
dec
arpl
and
sub
mov
lock
pop
cmp
pop
cmc
(bad)
lahf
shl
push
mov
sti
push
shl
push
jae
mov
mov
pop
dec
test
push
mov
sbb
inc
int
jne
lods
push
xchg
mov
xlat
dec
jmp
xchg
mov
and
and
cs
mov
sub
dec
xchg
sbb
jge
xchg
sti
cwde
add
enter
cmp
or
add
pop
sub
xor
ja
or
mov
xor
or
cmc
icebp
pop
adc
xor
into
(bad)
bound
pop
inc
mov
pop
push
clc
int3
inc
jnp
mov
jns
push
ins
popa
std
movs
je
pop
mov
fsubr
int
and
sbb
daa
pop
mov
pop
and
push
jb
jl
inc
ja
loopne
mov
stos
pop
fcmovbe
stos
inc
jmp
icebp
jecxz
fmul
xlat
xchg
pop
ss
arpl
pushf
ror
sti
and
stc
sbb
sub
movs
cmps
push
in
popf
loope
xchg
dec
pop
pushf
mov
into
fs
jns
dec
push
into
mov
into
fld
imul
pop
pushf
shr
loopne
sar
addr16
std
or
mov
rcl
cmp
dec
jns
add
sar
jmp
push
pop
sbb
in
pop
inc
sbb
dec
dec
loop
in
sub
cmps
or
aad
stos
sbb
jg
cld
jle
add
dec
xor
(bad)
fwait
jmp
add
sbb
or
jb
in
(bad)
sti
sub
in
lock
in
push
dec
loop
(bad)
sti
dec
mov
repz
lods
dec
sub
push
stos
dec
outs
and
retf
test
not
and
cmp
jcxz
xor
dec
rcl
imul
sub
fadd
xchg
test
jno
add
sahf
add
inc
cdq
add
inc
xor
js
mov
fwait
pop
ds
gs
fadd
cmp
mov
dec
cmp
lock
retf
outs
push
xchg
push
neg
inc
or
int3
lds
sar
in
mov
push
and
jnp
in
or
pop
inc
fild
cmp
dec
sub
cmp
push
js
lods
test
sub
fwait
mov
inc
and
mov
cmps
sub
repz
sbb
cld
adc
mov
mov
push
das
not
jne
call
add
push
jno
sub
repz
mov
mov
outs
push
leave
mov
mov
dec
(bad)
fs
outs
fadd
sbb
or
not
fs
shl
jecxz
ds
add
and
aam
cli
pop
sahf
and
add
movs
inc
retf
pop
cs
ss
xor
mov
call
daa
and
mov
(bad)
cli
aaa
mov
popf
and
enter
sar
nop
mov
ins
jae
addr16
mov
std
mov
xchg
jp
xchg
push
lahf
ret
outs
mov
sub
xor
ret
sahf
test
mov
ret
xlat
pop
outs
aaa
rcl
ja
dec
loopne
pop
ret
xchg
pop
test
lock
fistp
aad
stos
js
out
mov
call
xor
in
loope
iret
out
push
jo
inc
fdivr
aad
mov
xchg
stc
daa
test
neg
shr
shl
scas
and
mov
int3
rep
sub
adc
xor
xor
bound
and
push
cmp
std
sub
aam
dec
and
mov
fs
dec
(bad)
test
leave
jae
sti
out
ins
vxorps
xor
ja
cli
pop
idiv
push
pop
shl
rcr
in
cmp
out
cmp
xlat
loop
push
mov
mov
test
pop
sbb
js
jbe
jns
push
test
sub
dec
mov
mov
sub
shl
outs
jg
jno
gs
(bad)
adc
xchg
sbb
xchg
inc
adc
jb
test
lds
mov
dec
das
test
mov
test
and
xlat
push
not
or
fwait
scas
sar
ret
mov
movs
pop
push
pop
mov
cmc
pop
gs
mov
adc
push
or
mov
sub
daa
push
call
mov
inc
leave
mov
adc
pop
fs
sbb
pop
inc
inc
adc
mov
inc
into
call
test
leave
jmp
movs
enter
pop
(bad)
lock
inc
std
arpl
leave
push
jmp
xchg
(bad)
sbb
leave
lahf
pop
inc
dec
add
lahf
mov
or
mov
rcr
adc
add
mov
sub
sub
xor
push
xor
sbb
jmp
stos
xchg
sbb
pop
daa
cld
idiv
lods
out
addr16
push
stc
cmps
(bad)
pop
jno
xchg
xchg
enter
js
inc
cld
mov
test
cdq
xor
outs
push
ret
imul
pushf
xor
xor
fwait
repz
retf
pop
(bad)
mov
add
or
inc
sbb
add
leave
cmc
(bad)
ss
es
ja
sub
aam
into
ret
dec
adc
or
shl
push
js
loope
inc
leave
mov
movs
mov
sub
mov
int3
xchg
adc
(bad)
aaa
leave
lds
jmp
fbstp
push
mov
pop
in
fdivr
(bad)
jmp
pop
mov
pop
mov
jbe
cmps
js
sub
pop
mov
mov
sub
push
mov
je
xchg
cmp
icebp
(bad)
lahf
mov
inc
or
mov
sbb
jge
inc
push
inc
scas
mov
sbb
(bad)
loop
mov
push
clc
imul
mov
sbb
mov
repnz
sub
loopne
aaa
movs
js
push
adc
(bad)
loope
mov
lock
stos
and
push
ret
fs
mov
dec
pop
mov
fmul
fisttp
mov
daa
shl
jl
jno
mov
pop
outs
das
sub
in
cmp
sub
scas
push
inc
mov
sub
call
lahf
adc
sub
ror
cmp
loop
inc
mov
and
into
or
nop
pushf
jg
push
hlt
xor
jo
and
mov
push
sub
shl
call
call
mov
aaa
jp
daa
pusha
pop
fistp
adc
sar
enter
adc
push
shl
fwait
cld
jmp
cmp
or
xchg
and
or
call
add
push
ss
rcl
push
repnz
xchg
pop
and
jno
pop
or
or
adc
push
sub
sub
cld
movs
dec
xchg
and
rcr
cmp
jl
mov
int3
shr
movs
repnz
push
fwait
jmp
es
ins
sub
mul
sbb
pop
xchg
bound
dec
pop
ss
push
push
push
mov
sbb
inc
xor
fsub
or
enter
mov
adc
daa
or
jns
pop
sub
movs
daa
adc
loope
pop
nop
cwde
inc
cdq
mov
mov
ins
mov
jg
xchg
xor
jbe
push
xchg
call
mov
push
xchg
adc
cmp
push
movs
push
lahf
dec
mov
ja
push
add
xor
out
mov
fstp
mov
push
rcl
lock
ds
lahf
pop
xchg
(bad)
retf
jmp
jae
movs
out
or
sahf
mov
add
(bad)
mov
ds
push
dec
push
inc
jle
sub
shrd
lahf
push
dec
push
add
in
cld
(bad)
(bad)
push
mov
push
icebp
jo
cs
pop
jnp
inc
retf
mov
xchg
mov
dec
jg
es
jae
imul
pushf
jmp
xor
mov
add
mov
push
inc
sbb
and
dec
in
nop
xor
inc
in
xchg
pextrw
cmp
ds
push
jl
(bad)
dec
pop
jnp
in
lahf
movs
xchg
fxch
mov
aad
retf
leave
hlt
ins
adc
cmc
dec
mov
push
sub
mov
add
mov
sbb
fist
push
rol
icebp
pop
push
mov
xchg
cli
in
pop
cmp
fdiv
add
out
addr16
movs
aaa
sbb
scas
add
mov
pop
adc
rcr
ds
or
sub
mov
popa
cmp
add
cwde
loop
std
jne
popf
push
into
cmps
adc
adc
cs
lds
fs
jnp
or
mov
adc
pop
adc
dec
jecxz
sbb
shr
pop
scas
es
mov
push
sub
add
scas
add
daa
stos
sub
dec
add
enter
dec
enter
repz
pop
int3
or
bound
adc
add
shl
or
push
mov
xor
inc
call
mov
imul
push
icebp
int3
jp
les
sub
xchg
test
hlt
fldenv
cmp
aaa
dec
outs
imul
in
stc
and
mov
das
lods
jae
pop
mov
mov
xchg
mov
add
jno
mov
inc
mov
loopne
inc
fmul
add
fild
mov
adc
popf
mov
cmps
mov
test
rcr
cmp
push
sub
shr
stos
jo
call
aad
adc
jne
hlt
outs
loope
jo
imul
js
inc
lahf
xor
retf
sti
clc
daa
pop
outs
push
call
xchg
xchg
or
loopne
and
or
and
test
outs
les
fnstenv
inc
call
xchg
adc
push
jecxz
call
mov
push
sti
lds
int3
sbb
ss
js
iret
inc
fadd
pop
loope
outs
je
xor
xchg
and
mov
mov
push
push
into
or
adc
lock
ins
pop
and
icebp
lods
sahf
inc
or
push
mov
jno
fist
jmp
(bad)
fdiv
repz
out
rcl
inc
xchg
call
push
xchg
ja
js
addr16
in
dec
xchg
repnz
sbb
stc
cmovle
stos
call
xchg
das
sub
inc
dec
and
jnp
mov
xor
stos
fnstsw
fwait
push
mov
cwde
pop
xor
jbe
push
and
add
pop
dec
repnz
movs
outs
push
xor
fstp
push
fcomp
push
dec
add
jne
js
pop
or
test
xchg
push
mov
pushf
dec
lods
aas
fcmovnbe
fisubr
stos
and
cmp
cmc
jp
mov
jb
je
jecxz
fwait
in
gs
mov
fnsetpm(287
nop
adc
jnp
fdivp
rcr
mov
rcr
and
cmc
xor
jecxz
jbe
sbb
shl
pop
lods
push
sbb
sub
or
xlat
(bad)
mov
inc
and
jle
mov
scas
mov
or
in
popa
inc
cmps
aad
dec
fist
cmp
(bad)
sbb
jg
fwait
and
fwait
arpl
push
mov
sbb
data16
lock
bound
fmul
cdq
inc
dec
outs
jb
and
mov
ja
pop
mov
(bad)
dec
add
dec
dec
imul
lods
pushf
push
test
jo
lea
in
daa
mov
shl
popf
or
and
test
xchg
lock
js
out
push
sub
data16
pop
sahf
sub
pandn
push
sbb
push
xchg
sub
test
fwait
mov
(bad)
cmps
fimul
xor
xchg
or
data16
rol
sub
jo
dec
or
sbb
sahf
jle
test
mov
and
ror
(bad)
xor
xor
outs
jns
push
inc
bound
or
out
xchg
sub
pop
cli
ins
addr16
test
in
outs
test
and
dec
arpl
or
mov
sti
mov
ret
push
mov
dec
pop
jo
dec
sub
addr16
lock
imul
test
iret
das
and
xchg
repz
dec
out
cld
mov
ds
sub
mov
sub
imul
cmp
xchg
icebp
cwde
or
push
bound
or
push
lods
sti
arpl
iret
mov
dec
and
int3
sub
push
mov
sub
aaa
loope
push
ins
pop
jno
dec
inc
or
(bad)
stos
push
or
sub
inc
mov
inc
(bad)
aam
clc
(bad)
cld
in
inc
cmp
lds
jle
lds
loop
pushf
dec
sbb
pop
call
dec
imul
mov
jnp
add
inc
cmp
jp
(bad)
mov
xchg
jb
push
push
dec
lods
sub
mov
sbb
sbb
je
add
and
les
xchg
sub
out
sub
xchg
sahf
adc
outs
cvtps2pi
call
adc
and
imul
movs
scas
mov
out
repz
cmp
gs
mov
push
int
test
cmps
daa
(bad)
pop
cmp
pop
adc
xor
jae
add
loope
shl
pusha
mov
jg
inc
in
jmp
sub
test
arpl
cld
aas
adc
and
mov
retf
lock
gs
(bad)
enter
push
stos
enter
sub
daa
js
xchg
ret
in
int3
popf
jne
cmp
push
out
addr16
popa
xor
xor
xchg
mov
and
adc
pop
lods
sbb
pop
xchg
sbb
aad
repnz
mov
xchg
and
cmps
jb
imul
sbb
aad
adc
mov
ss
das
into
imul
add
and
adc
cmp
pop
mov
pop
xchg
or
div
jle
sbb
adc
sbb
inc
dec
xor
jmp
rol
ret
ja
adc
leave
mov
nop
xchg
in
or
test
inc
fnsave
cmp
push
mov
jmp
mov
or
sbb
in
sub
push
out
push
sbb
adc
ficomp
and
cmp
add
add
rol
pop
test
rcl
sbb
push
xlat
fmul
inc
loopne
xor
popa
(bad)
cmp
sar
inc
sbb
sbb
jle
inc
push
add
retf
mov
lock
shl
xchg
sub
je
dec
dec
add
cs
(bad)
inc
fcmovu
test
sbb
sbb
push
pop
push
mov
loope
or
sbb
push
push
gs
adc
add
mov
jo
mov
clc
cmp
xchg
dec
dec
sbb
leave
push
int
dec
enter
movs
dec
mov
inc
mov
add
inc
add
xchg
adc
dec
addr16
dec
retf
xor
(bad)
in
inc
push
jp
inc
xchg
stos
xor
jne
popf
out
push
(bad)
sti
cmp
(bad)
jecxz
mov
int
loop
push
(bad)
and
in
fidiv
imul
stos
inc
inc
push
or
jo
loopne
jg
shr
pop
inc
imul
jno
xchg
ficomp
jmp
cld
test
adc
sub
sbb
pop
dec
movs
xchg
push
jnp
push
jecxz
mov
mov
cmp
ins
xor
add
inc
pop
int
add
mov
pand
inc
cmp
in
in
and
add
cs
sbb
pop
test
ins
(bad)
fnsave
xor
dec
mov
rcl
inc
outs
fst
(bad)
mov
jns
mov
js
outs
pop
nop
movs
pop
xor
and
push
adc
int3
xchg
repnz
push
dec
pop
cmps
adc
lock
retf
mov
xchg
retf
loop
scas
lock
fild
push
sbb
fidiv
ins
clc
or
addr16
iret
cld
push
pushf
in
sub
cwde
movs
cdq
push
shr
push
outs
jp
xchg
add
push
xor
mov
dec
aad
xor
push
jle
fdivr
dec
sbb
js
jbe
and
movs
or
imul
aam
shr
stos
dec
(bad)
test
xchg
or
xchg
vaddps
in
cmp
and
hlt
fadd
icebp
movs
out
aam
sbb
mov
xchg
dec
xchg
(bad)
mov
adc
movs
dec
and
lods
pop
loopne
mov
stos
lea
outs
or
ret
je
add
(bad)
cmc
sub
jle
out
sbb
jb
adc
and
mov
cmc
loopne
and
cwde
sub
retfw
(bad)
mov
mov
(bad)
or
and
xchg
popf
pusha
xabort
rol
mov
pop
ds
call
(bad)
out
mov
ds
retf
inc
mov
cli
fs
addr16
sbb
test
ror
push
xchg
push
push
mov
mul
and
scas
cdq
loope
icebp
cmps
xchg
cmps
mov
icebp
push
jne
pop
mov
dec
cmp
jmp
(bad)
shl
out
adc
jmp
xchg
mov
ds
inc
ja
imul
nop
and
fwait
jl
adc
inc
sbb
cmp
or
dec
adc
dec
cs
xor
inc
retf
ret
sbb
(bad)
ja
pushf
arpl
fnstcw
gs
outs
inc
std
cli
jge
dec
and
or
mov
xor
(bad)
mov
(bad)
pop
aaa
mov
dec
or
lea
sahf
pushf
or
pop
push
and
cli
movs
push
xchg
stos
pop
pusha
in
xchg
mov
jbe
sar
cli
inc
mov
mov
cmc
mov
fsubrp
in
mov
push
pop
adc
dec
xchg
call
in
cmps
popf
hlt
das
sbb
sbb
(bad)
adc
fwait
sub
sub
dec
mov
jp
std
cmc
mov
xchg
ja
mov
dec
adc
dec
xchg
bound
(bad)
inc
push
inc
and
xor
adc
dec
mov
and
mov
xchg
sar
shl
add
and
adc
sbb
push
stc
sub
sti
sub
test
dec
ss
lods
lods
mov
shr
and
test
sbb
adc
pop
ja
pop
enter
dec
imul
(bad)
sub
imul
mov
and
(bad)
adc
shl
out
ret
adc
dec
out
pop
aad
adc
out
pop
bound
sbb
jl
xlat
xchg
call
sbb
sti
add
aas
call
adc
push
in
pop
xlat
ret
push
xchg
icebp
wrmsr
xor
div
pushw
movs
test
gs
leave
fldcw
xor
jge
adc
lods
jp
and
aas
das
add
mov
fsub
xchg
pop
xchg
jmp
pop
das
mov
xchg
test
aaa
push
fstp
sub
inc
mov
(bad)
mov
adc
xor
adc
test
cs
inc
ins
pop
outs
pop
enter
push
fiadd
and
test
je
mov
(bad)
je
ficomp
loope
mov
jne
push
pop
and
sub
je
loopne
clc
mov
and
pop
jl
add
cmps
mov
mov
add
sub
push
sahf
mov
jle
sbb
sub
xor
or
imul
pushf
cmc
mov
imul
in
popf
stos
iret
imul
xchg
mov
jl
dec
pop
popa
out
sar
xchg
movs
(bad)
bound
lea
stos
mov
dec
cmps
aaa
rcl
jae
arpl
ss
xor
jmp
out
je
push
std
sbb
jge
in
pop
mov
dec
(bad)
mov
js
fstp
xchg
push
inc
dec
int3
inc
outs
cli
sbb
clc
inc
or
push
sbb
push
aam
or
mov
push
inc
loope
lods
imul
sar
arpl
les
mov
cs
ins
int3
repz
repz
sbb
scas
jg
fsubp
lds
pushf
rcl
fbld
jno
cmp
xchg
imul
jbe
xchg
rol
cmp
and
cmc
cdq
loopne
enter
pusha
push
addr16
data16
(bad)
enter
js
cmc
xor
cwde
sbb
mov
fwait
dec
push
xor
push
mov
push
sti
aad
sahf
adc
addr16
pushf
pop
jmp
rcl
mov
or
xchg
mov
and
and
xor
cmp
xchg
mov
repz
test
sti
xor
add
and
ins
mov
mov
sbb
jae
fdiv
cmp
gs
sbb
iret
and
or
ins
shl
outs
loopne
iret
and
jmp
sub
imul
popf
or
and
ror
sbb
es
loope
or
in
xchg
mov
je
(bad)
adc
ret
sbb
xchg
push
pop
shl
mov
add
cmp
cmp
pop
retf
cli
fmul
scas
mov
xchg
cmp
out
mov
fsub
jns
fwait
inc
cli
in
les
sub
popf
cld
cmp
(bad)
xchg
ficom
int
cwde
shr
xor
sub
push
mov
sbb
dec
in
xchg
scas
js
push
sahf
lods
lds
jge
sti
pop
cmp
inc
retf
leave
hlt
nop
cld
jnp
cmp
push
loop
ret
inc
sub
fcom
sti
push
addr16
sub
in
out
out
add
pop
adc
adc
xchg
dec
sub
iret
imul
xchg
push
sub
loope
les
pop
dec
dec
mov
or
call
je
pop
sub
pop
mov
sub
(bad)
mov
pushf
addr16
inc
or
inc
and
retf
in
in
bound
mov
or
fadd
xchg
sub
aam
fwait
shl
ficom
cmp
xchg
push
push
in
jae
xor
gs
outs
leave
cmps
ins
loopne
inc
clc
nop
(bad)
add
pushf
sub
mov
sbb
push
cwde
lds
mov
test
inc
(bad)
push
push
jmp
dec
mov
jae
sub
icebp
(bad)
ins
pop
fstp
inc
gs
test
(bad)
or
or
lods
inc
and
je
test
mov
ins
cli
aaa
and
jmp
pop
in
std
movntps
test
scas
les
and
(bad)
inc
in
or
jbe
jne
stc
sar
cld
or
add
out
xor
cdq
jg
jae
mov
ret
test
retf
ins
push
lods
mov
lds
push
test
push
xor
or
std
jmp
xchg
outs
test
xchg
mov
into
out
pop
pop
jne
mov
ret
shr
leave
pop
repnz
or
dec
xchg
or
mov
sbb
sbb
ins
cdq
xor
aam
add
pop
lds
test
cdq
dec
out
xor
push
fcom
sub
add
imul
sahf
pop
pop
cmp
adc
add
scas
cmp
jecxz
and
mov
out
adc
cs
push
mov
mov
fdiv
pop
dec
ffreep
ins
ins
scas
push
inc
dec
dec
loopne
mov
int
scas
dec
in
and
mov
stos
mov
mov
dec
mov
outs
inc
jno
ins
or
rol
cmc
dec
data16
into
ins
mov
adc
iret
dec
call
je
les
retf
sub
test
inc
aad
das
clc
movs
push
nop
idiv
sahf
icebp
and
popf
lahf
data16
pop
push
ja
fldcw
outs
adc
add
rol
mov
shl
mov
mov
or
xchg
mov
aas
call
fcomp
cmp
jmp
sbb
aam
mov
je
loope
hlt
sbb
push
pop
xor
dec
mov
mov
xlat
cdq
ins
jnp
inc
fadd
test
lock
outs
mov
xchg
repz
add
xor
popa
cmc
cli
pushf
retf
add
sub
jne
cmp
cli
imul
push
jb
pop
mov
fsubr
and
lock
lods
cmp
adc
mov
aam
cdq
mov
sbb
fisub
ins
test
add
mov
ins
popa
into
pop
ss
cmc
xlat
mov
in
popf
enter
adc
pushf
dec
sub
arpl
xlat
add
xchg
outs
rol
out
fadd
push
push
out
test
mov
sub
dec
mov
or
pusha
push
and
cmp
cmp
pop
push
sbb
push
adc
retf
rcl
jae
mov
pop
dec
xchg
fldcw
icebp
cdq
shl
xor
leave
out
retf
add
cld
lds
div
mov
or
sti
inc
cmp
ret
inc
cmp
push
ror
aas
test
and
in
neg
test
mov
mov
sbb
call
push
and
shl
mov
adc
nop
icebp
adc
sub
retf
dec
xor
cwde
mov
sbb
inc
shl
lahf
inc
pop
mov
mov
mov
sar
pop
dec
fsub
inc
dec
rcr
imul
push
aad
gs
adc
repnz
jl
sub
or
jmp
xor
sbb
inc
pushf
add
cmp
xor
pop
xor
mov
inc
in
mov
loop
fsubr
(bad)
and
test
fwait
shl
or
pop
imul
cmps
ss
push
pop
ja
xchg
push
pushf
cld
enter
out
enter
jo
pop
and
mov
out
dec
cdq
int3
or
and
mov
cli
movs
cmp
and
arpl
bound
mov
push
dec
lea
(bad)
dec
pop
push
mov
xchg
sub
shl
test
pop
mul
fsubr
fild
scas
mov
les
dec
xchg
fdiv
sti
jmp
(bad)
fnclex
inc
ret
and
lods
shr
mov
aas
cli
pop
(bad)
nop
int3
sbb
pop
bswap
imul
push
in
popf
movs
xchg
jle
mov
mov
push
dec
sub
sub
and
xchg
xchg
and
leave
stos
cmp
inc
jmp
imul
mov
inc
enterw
push
out
adc
pop
bound
sub
inc
cmp
add
arpl
push
stc
xchg
or
into
shl
and
lds
xor
into
or
mov
dec
mov
mov
pop
mov
jle
cmp
jo
and
test
bound
cmps
in
pop
fiadd
cmp
jo
pop
out
mov
movs
pop
pop
rcr
or
mov
test
jae
data16
clc
push
fxch
mov
(bad)
cmp
or
mov
in
ficom
mov
mov
mov
ins
lock
out
push
shr
inc
or
push
jl
fwait
xor
sub
sar
pushf
inc
in
das
pop
cmps
sbb
je
jp
lock
hlt
test
sahf
cmp
dec
in
inc
jmp
rcl
repnz
into
xor
repz
sti
xlat
mov
pushf
jecxz
push
mov
xor
stc
out
in
mov
lahf
sub
in
mov
dec
xchg
retf
rcr
mov
aas
push
stc
popf
xor
xor
(bad)
iret
in
mov
loop
loop
cmps
loop
adc
xchg
iret
addr16
or
ds
jg
add
cmps
cmp
xchg
scas
stos
add
sbb
dec
cli
or
(bad)
mov
repz
push
dec
or
xchg
mov
test
dec
cli
gs
ins
cmc
pop
(bad)
in
lods
ret
repz
jle
rol
mov
mov
push
inc
outs
mov
clc
idiv
call
pop
mov
in
aad
fistp
jbe
push
repnz
or
mov
pop
jbe
rol
mov
sub
js
push
idiv
adc
and
movs
stos
and
stos
push
loopne
shl
mov
cdq
data16
daa
lahf
mov
or
hlt
inc
dec
das
mov
pop
xchg
out
sbb
lods
add
cs
rcr
xchg
jecxz
inc
inc
out
mov
adc
in
lahf
cmp
(bad)
inc
call
add
fisub
clc
mov
and
outs
sub
(bad)
lea
shr
mov
adc
movs
out
add
lock
aaa
out
addr16
add
inc
inc
inc
push
ret
call
sahf
and
dec
sbb
or
pop
out
push
xor
push
inc
ss
test
imul
mov
mov
add
jecxz
jmp
xor
mov
div
pop
pop
push
das
sub
(bad)
cli
outs
jns
lods
rol
loop
jno
(bad)
out
(bad)
cmp
out
pop
xchg
cmp
add
cmp
mov
cs
inc
inc
loop
stos
xlat
adc
fs
movs
aaa
into
out
mov
xchg
(bad)
(bad)
das
std
push
repnz
repnz
stos
addr16
addr16
add
int3
(bad)
icebp
xor
gs
inc
pop
gs
ret
jg
out
out
jmp
or
mov
(bad)
jo
adc
pop
addr16
or
inc
lods
(bad)
jmp
mov
popf
jecxz
fadd
popf
add
das
cmp
dec
adc
push
retf
mov
stc
mov
adc
xchg
cmp
scas
fadd
repnz
jne
scas
inc
popa
in
dec
gs
and
inc
lods
sub
push
mov
and
ins
cld
mov
push
inc
not
fimul
mov
ficomp
ins
leave
pop
(bad)
ficomp
jno
(bad)
aaa
push
mov
cmp
xor
cmps
data16
push
mul
adc
aaa
xchg
scas
popf
jbe
popa
lds
mov
shl
or
mov
lods
cmp
mov
adc
rcr
clc
or
sbb
(bad)
shld
xchg
mov
sub
int3
adc
xor
(bad)
int3
push
mov
pop
sbb
out
pop
push
mov
js
mov
fsin
jmp
daa
in
sub
mov
inc
fs
fistp
and
sub
sti
push
es
call
push
lahf
(bad)
ss
mov
fnsave
cld
(bad)
xor
stos
add
addr16
xor
mov
or
xor
jge
mov
cld
xchg
mov
out
retf
je
push
inc
xchg
xor
push
add
out
test
dec
sub
cmp
jo
jecxz
icebp
test
add
xchg
mov
mov
cmps
adc
repnz
jmp
inc
xor
push
scas
push
xor
shl
movs
sub
dec
test
sub
or
jb
ja
scas
(bad)
mov
call
mov
aam
pop
mov
and
loop
dec
mov
ret
loope
je
mov
mov
mov
fild
and
adc
mov
adc
jb
ret
and
or
lds
aad
xchg
jmp
inc
int
or
(bad)
mov
and
push
ret
shl
sbb
mov
cmp
jp
aaa
jg
(bad)
jp
fisubr
aaa
lock
xchg
dec
pushf
push
sub
pop
jecxz
xchg
or
sbb
mov
and
jle
sti
mov
sti
(bad)
outs
and
ins
jno
das
add
ds
out
sar
sub
mov
retf
xor
adc
scas
test
test
sti
pop
in
scas
pushf
mov
aaa
arpl
iret
ret
mov
xor
pop
je
inc
cmp
imul
xor
jns
outs
cmp
cli
push
jnp
fsub
inc
jp
mov
xchg
imul
jo
sahf
push
iret
xor
sub
repnz
mov
cmp
dec
add
repz
idiv
push
aaa
push
dec
push
dec
dec
cmp
in
or
mov
jmp
and
pop
adc
ja
out
push
sbb
lods
shl
fstp
or
sar
rcl
push
push
pop
sub
lahf
pop
popa
(bad)
cmp
adc
inc
jecxz
cmc
test
shl
xor
out
mov
bound
test
dec
ss
xchg
xchg
nop
xor
out
in
cmc
rol
pop
repnz
pop
push
cmp
adc
std
popa
not
lock
outs
cdq
pop
push
mov
in
mov
pop
iret
jp
pop
mov
push
hlt
out
mov
adc
pop
ins
inc
jne
cmp
push
repz
rol
mov
ins
(bad)
fneni(8087
hlt
sbb
push
addr16
sahf
jae
mov
jp
pop
shr
aas
loope
mov
in
fldcw
xchg
cli
xlat
xor
mov
push
mov
jbe
jmp
outs
xor
mov
aam
xchg
jae
stos
jl
jnp
mov
dec
popa
pop
addr16
cmp
inc
add
pop
xchg
cmp
imul
mov
popa
jl
sub
adc
lods
stc
or
jns
push
out
sbb
mov
mov
fimul
push
fwait
enter
(bad)
sbb
scas
mov
enter
iret
movs
aam
bound
ds
addr16
pop
daa
imul
sub
sti
push
and
jecxz
pop
cld
dec
mov
adc
pop
push
dec
fcmovu
mov
adc
ja
push
fldenv
jns
add
pop
fsubr
and
ret
or
call
adc
imul
xor
or
mov
pop
ror
mov
into
cmc
leave
jo
rol
imul
leave
sbb
pushf
pop
xor
ds
shr
add
xor
jne
std
test
into
jbe
cmc
mov
jmp
fcompp
out
or
pop
bound
in
popf
sbb
xchg
xchg
fiadd
adc
xchg
jmp
mov
es
ins
nop
mov
bound
cli
dec
in
mov
test
mov
shr
popa
int
imul
inc
lods
outs
ret
mov
adc
mov
sub
or
inc
and
popf
dec
jecxz
mov
cld
fidiv
push
lods
ins
fadd
sti
jb
pop
ins
xor
aad
and
jecxz
push
or
nop
loopne
mov
pusha
repnz
popa
mov
shl
xor
add
ja
test
inc
jg
mov
pop
jmp
ret
mov
or
jne
mov
call
xchg
test
mul
stos
in
and
mov
sub
mov
xchg
xor
jp
lock
cld
lods
dec
mov
and
xor
or
cwde
js
mov
rcl
sbb
rcr
and
retf
nop
aad
test
inc
dec
sbb
int3
mov
and
in
push
lods
cmp
pop
(bad)
popf
sbb
jns
mov
cmp
sub
push
(bad)
pop
xchg
dec
xor
mov
mov
add
mov
fwait
sbb
sbb
jmp
or
or
mov
add
loop
retf
mov
repnz
jae
adc
push
push
scas
mov
add
sbb
loop
inc
sub
push
add
mov
(bad)
je
sbb
fnstcw
in
jmp
and
and
inc
push
mov
(bad)
ss
or
push
xchg
gs
(bad)
sub
stos
jbe
cdq
outs
gs
lea
mov
inc
dec
imul
loope
popa
cs
shl
pop
aad
push
bound
out
out
fild
es
push
aam
dec
fisub
mul
jmp
fnstcw
xor
push
add
sbb
in
jg
stos
push
sbb
xchg
vmwrite
fwait
arpl
inc
push
and
jne
add
ror
cmp
(bad)
jb
xchg
pop
test
ror
fwait
(bad)
sar
ins
es
je
iret
ficom
cdq
loop
arpl
call
pop
cmps
rcr
xchg
xchg
jecxz
aaa
cmp
add
inc
jecxz
jbe
mov
out
and
mov
mov
jno
sbb
adc
nop
xchg
int
jmp
mov
sub
loope
or
mov
or
ret
(bad)
call
push
xor
sub
xchg
adc
arpl
push
mov
sbb
test
push
popa
adc
pop
leave
xchg
lods
inc
icebp
lahf
es
test
shl
jo
sti
int
adc
dec
scas
scas
push
dec
add
add
lock
adc
mov
pop
inc
dec
clc
aas
push
out
leave
inc
pop
lds
outs
add
push
iret
jle
outs
mov
jg
xchg
int3
mov
xor
js
mov
mov
push
neg
scas
add
loopne
adc
push
xor
test
jnp
inc
xor
je
xor
sar
xchg
nop
hlt
xchg
sti
adc
cmp
cmp
fisttp
pop
mov
test
cmc
mov
xchg
test
adc
or
imul
in
repz
jmp
add
fadd
pop
test
sbb
mov
mov
mov
pop
mov
cli
mov
fcom
outs
sub
pop
and
aad
xor
lods
adc
mov
jl
mov
pushf
movs
imul
adc
sti
pop
mov
mov
pop
mov
mov
xor
push
sti
xor
retf
sub
cli
(bad)
push
dec
movs
int
add
mov
inc
stc
sysret
jle
(bad)
shl
add
cli
faddp
xor
mov
es
push
add
popa
push
bound
dec
adc
xor
pop
lods
mov
int3
in
pop
jnp
repnz
xor
and
shr
xchg
enter
nop
movs
jo
jge
add
call
int3
mov
es
pusha
xlat
xor
call
xor
dec
mov
pusha
ins
jnp
or
cmp
inc
jmp
mov
int3
jbe
imul
push
push
mov
xchg
inc
inc
push
mov
mov
or
jmp
sbb
mov
adc
clts
inc
jl
cwde
ja
iret
mov
inc
imul
cmp
pop
sbb
mov
(bad)
dec
fs
iret
out
lods
rol
or
sbb
test
addr16
loopne
out
cmp
test
pop
std
nop
pop
mov
or
jp
jmp
sub
aam
xlat
not
add
and
adc
test
pop
sub
sub
xchg
(bad)
or
ja
test
mov
push
sbb
xlat
shr
sar
jb
sbb
push
scas
push
scas
push
inc
inc
push
mov
jns
sbb
mov
(bad)
or
call
(bad)
adc
dec
dec
pop
mov
addr16
push
mov
pop
jmp
gs
scas
div
mov
push
cli
cwde
iret
lods
inc
cld
cld
pop
popf
push
xor
dec
dec
cmp
lea
int3
adc
in
push
pop
xlat
in
dec
popa
push
leave
out
dec
inc
push
mov
pop
mov
and
adc
call
mov
das
fs
rol
int3
fwait
dec
fabs
mov
xchg
sbb
js
xor
test
movs
stc
ffreep
mov
in
pop
xor
inc
mov
add
cmp
cmp
push
pop
fcom
enter
psubusb
(bad)
in
or
loop
daa
in
dec
aas
xor
mov
mov
fucomip
jae
outs
jp
rcr
rol
jecxz
pop
sub
lods
jne
imul
jno
xchg
cli
pop
ja
or
mov
rol
or
push
dec
popa
lods
(bad)
pop
or
adc
mov
scas
mov
adc
imul
loop
jbe
mov
pusha
out
int3
xchg
mov
inc
inc
loopne
scas
cdq
jg
nop
hlt
fild
(bad)
fsubr
jns
int3
lds
xor
in
int3
loop
mov
pop
retf
dec
mov
mov
or
jbe
addr16
cwde
pusha
xchg
dec
sbb
jno
stc
popf
xor
fnstsw
out
jmp
mov
sahf
dec
jo
shl
test
inc
aam
mov
pop
or
pop
xchg
xor
nop
inc
sar
mov
scas
cmp
mov
add
and
fsincos
pop
mov
xchg
adc
xor
sub
lock
push
out
repz
pop
mov
stc
jmp
clc
pop
sub
jmp
mov
int3
in
out
rcl
pop
dec
mov
xchg
add
or
scas
scas
cmp
sub
retf
pop
inc
add
jle
cmp
in
cwde
and
test
shl
call
push
fsub
cmp
out
fdivr
aaa
iret
inc
inc
jae
(bad)
mov
mov
ss
push
clc
test
fwait
adc
dec
adc
cmp
xor
jae
dec
movs
sub
mul
adc
xor
fistp
movs
rcr
bound
call
test
fistp
cdq
icebp
sub
pop
ja
xor
(bad)
mov
push
call
add
xlat
shl
(bad)
aas
out
outs
dec
icebp
lock
adc
pop
test
and
mov
push
fadd
jno
inc
or
popa
nop
mov
push
test
repnz
pop
gs
push
aad
lock
call
adc
mov
dec
aad
and
pop
lds
pop
cmp
test
jae
adc
int3
push
mov
repz
cld
xchg
mov
push
dec
and
add
pusha
xor
shr
or
push
xor
hlt
and
jb
fadd
jns
mov
ret
and
sub
jbe
cmp
iret
out
push
add
repz
mov
mov
jle
jmp
xor
pop
dec
fwait
mov
sbb
std
sbb
les
pop
push
inc
xlat
xchg
mov
cmp
and
popf
pusha
mov
mov
lods
loop
es
int3
push
int
mov
mov
mov
push
fdiv
sbb
ins
gs
jb
jae
loopne
cdq
jne
repnz
sbb
in
mov
adc
sbb
mov
shl
scas
mul
fmul
inc
std
mov
cs
mov
pusha
retf
je
jbe
rol
or
out
ja
dec
sti
aad
sub
jl
stos
add
push
addr16
add
lea
sub
cmp
mov
mov
jo
(bad)
pop
not
dec
(bad)
loope
mov
ret
(bad)
movd
dec
sar
imul
call
paddsb
push
ret
jmp
fsubr
xchg
and
dec
jbe
mov
in
jo
(bad)
or
scas
and
add
adc
sbb
inc
xchg
pop
aad
ss
in
fmul
push
inc
mov
dec
or
sub
std
(bad)
mov
jno
bound
and
jno
add
dec
fwait
inc
mov
leave
inc
sub
sub
js
retf
and
fst
mov
outs
lahf
js
jae
dec
or
out
pop
add
aas
shl
mov
xchg
test
aas
sar
int
mov
push
outs
push
and
sbb
fmul
outs
mov
xchg
pop
jp
in
mov
cmp
push
stos
adc
hlt
int3
or
(bad)
push
mov
test
jne
mov
movs
sbb
lea
xchg
sar
sar
and
xlat
and
add
pop
xor
xor
and
outs
cmps
mov
enter
out
mov
xchg
dec
and
loop
sub
xchg
lock
or
xchg
push
ins
fistp
out
dec
movs
inc
dec
adc
jp
xor
sub
jmp
jae
popa
test
or
fsub
sbb
add
les
call
out
fidiv
hlt
xlat
pop
cmps
pop
cmps
sub
xchg
jle
rcr
lods
add
lds
pop
stos
inc
test
call
repz
jno
sbb
inc
pop
mov
mov
push
sub
cwde
ins
lods
pop
ret
(bad)
imul
cmp
das
sbb
mov
jle
or
jg
or
outs
xchg
call
in
test
mov
fimul
mov
aam
and
bound
clc
cs
ins
test
cwde
retf
mov
mov
cmp
in
(bad)
push
enter
es
cmp
dec
je
cld
ror
cmp
cmps
xor
sahf
xchg
and
stc
icebp
aad
add
xlat
loopne
sbb
mov
adc
inc
icebp
push
aad
js
fwait
add
sub
sbb
cwde
push
sbb
cmp
jp
aas
and
sub
mov
aad
pop
mov
jge
ss
ffree
outs
adc
push
das
pop
mov
and
(bad)
fs
mov
xlat
popw
cmp
lahf
fmul
rcl
mov
xchg
cmp
and
loope
out
pop
add
sub
xchg
mov
xchg
mov
(bad)
psubd
xor
sar
rol
lods
xchg
scas
lods
dec
xchg
and
jno
dec
cmps
neg
cli
popf
mov
pmaxsw
mov
ror
push
add
loope
push
fdiv
mov
sbb
jns
lock
jne
mov
out
fs
cmp
iret
push
ss
cmp
sar
cmc
sbb
fdivp
mov
sub
fsubr
sub
in
sbb
fist
sbb
je
ret
leave
push
and
js
xchg
jp
sar
nop
xlat
xchg
or
pop
ret
arpl
cld
popa
cmp
mov
out
out
ja
rol
add
sbb
push
mov
sbb
fcom
sub
jnp
inc
call
push
arpl
jmp
mov
mov
mov
ins
xor
jns
das
jmp
jg
push
mov
aam
stos
test
sar
pop
jnp
cmc
mov
adc
sbb
mov
xchg
(bad)
js
js
dec
pushf
jge
mov
push
dec
xchg
loope
jnp
lock
push
stos
mov
pop
cmc
cmps
adc
js
inc
mov
aam
iret
ret
hlt
jle
pop
sub
ja
xchg
out
fnstsw
jbe
pop
mov
shr
stc
inc
mov
mov
(bad)
loop
fxch
std
dec
xor
mov
push
scas
inc
aad
clc
rcr
test
push
dec
xchg
aaa
mov
pusha
in
ins
mov
and
imul
push
pop
ror
jle
xchg
pop
retf
pop
lea
arpl
shl
(bad)
stos
lods
xor
(bad)
hlt
mov
adc
dec
adc
aam
inc
enter
imul
mov
mov
sub
or
repnz
cmp
loope
xor
(bad)
(bad)
lock
test
mov
sbb
adc
mov
sbb
icebp
dec
sub
mov
mov
pop
sub
retf
(bad)
jae
(bad)
sti
mov
and
push
test
adc
je
mov
mov
push
inc
mov
scas
jns
popa
pop
outs
js
repz
jecxz
int3
pop
mov
in
inc
jp
sub
dec
jns
daa
loop
jne
call
jecxz
mov
cmp
sbb
repz
std
int
div
retf
push
lahf
icebp
ficom
pop
mov
in
push
scas
fnstcw
sbb
arpl
xor
mov
cs
fwait
(bad)
das
jge
mov
push
sub
cld
in
add
arpl
dec
ins
test
add
jns
outs
cmc
pop
mov
jl
addr16
pop
int
push
outs
xchg
mov
movs
and
or
cmc
cdq
jo
jo
cmc
and
data16
fiadd
pop
fisttp
sbb
aam
pop
push
cmp
push
xchg
push
pop
xlat
mov
aam
ret
js
mov
fcom
xchg
pop
cmp
add
aaa
dec
ins
shl
out
sub
mov
lea
js
pop
jmp
aad
lods
mov
or
dec
pop
ins
movs
pop
mov
daa
jae
jne
stc
aaa
adc
push
int3
test
adc
mov
nop
adc
mov
(bad)
std
and
xor
retf
repz
jge
fwait
or
je
icebp
mov
dec
and
ins
xor
and
push
ror
push
test
aaa
outs
adc
cmp
js
in
retf
out
mov
add
das
les
in
aas
xor
push
sub
loope
mov
mov
repnz
movs
xor
jg
or
inc
cmc
pop
push
jge
les
mov
dec
xor
jl
xchg
daa
cmp
sar
xor
jnp
out
popa
mov
iret
mov
pop
mov
or
add
bnd
mov
push
dec
call
mov
xlat
xor
xchg
inc
in
popa
inc
sub
cmp
leave
sub
sbb
add
jo
xlat
xlat
scas
je
add
jmp
sbb
in
xor
mov
adc
jno
mov
lock
push
or
dec
pop
xchg
or
fisttp
adc
sbb
or
mov
mov
or
sbb
in
adc
dec
cs
lock
xor
fisub
xchg
int3
pop
out
mov
lods
or
lds
imul
mov
add
fisubr
mov
push
in
mov
sbb
xchg
pop
xor
or
add
popf
stos
lods
cdq
stc
cmp
xlat
xchg
push
mov
loopne
popa
or
sub
pop
adc
dec
int
into
cmp
vpsrlw
xchg
jl
mov
sbb
jno
cmp
pop
lods
mov
icebp
and
add
push
push
sbb
or
stc
mov
cli
stos
jno
js
add
imul
mov
mov
or
jge
mov
dec
pop
inc
cmp
sub
add
mov
(bad)
(bad)
mov
cdq
mov
out
jmp
jnp
(bad)
adc
out
fisub
push
lods
adc
push
aas
js
add
mov
clc
mov
xor
jo
adc
xchg
jb
and
sti
nop
mov
popa
aaa
mov
nop
xchg
pop
adc
push
or
adc
jmp
or
xchg
pushf
out
mov
ret
pop
jg
cdq
leave
or
or
inc
int
aam
sbb
sbb
sbb
mov
ins
sbb
ins
cmp
inc
pop
pop
mov
mov
and
jecxz
xor
shr
dec
or
push
mov
daa
mov
pop
or
pushf
outs
or
fs
pop
pushf
in
jp
xchg
sub
in
test
mov
push
jg
enter
es
jnp
inc
and
lds
mov
je
adc
push
dec
std
pop
int
push
mov
test
sub
iret
shl
repz
mov
jle
xor
sar
dec
into
nop
fisubr
sub
adc
retf
mov
cmps
pusha
stos
xchg
into
cmc
cmp
fmul
into
fisub
popf
daa
std
cs
sub
(bad)
xchg
fist
xor
mov
push
in
outs
stos
cmps
movs
test
dec
arpl
push
cmp
pushf
pop
mov
fmul
out
xchg
jle
fistp
jns
enter
jg
(bad)
repnz
call
popf
add
mov
cmp
mov
push
aaa
push
pop
fst
jmp
jecxz
mov
jg
fiadd
adc
into
adc
sbb
jg
in
(bad)
xor
cmpps
mov
mov
bound
scas
iret
mov
out
jnp
dec
push
jns
jb
push
and
jno
ins
fcomp
sub
clc
or
fadd
xchg
or
dec
sbb
cmp
or
ins
clc
push
cld
stc
pushf
mov
mov
(bad)
imul
or
fldenv
mov
mov
nop
inc
mov
leave
inc
stos
movs
outs
sbb
jne
pop
(bad)
xchg
out
mov
or
and
mov
xor
inc
push
ret
enter
test
mov
call
sti
jae
mov
popa
inc
inc
gs
jp
jge
xchg
mov
stc
xchg
mov
sbb
pop
je
jmp
(bad)
cli
jl
jne
inc
(bad)
mov
sub
cpuid
retf
mov
xchg
ins
jmp
push
or
sahf
imul
(bad)
fcomp
out
jb
mov
add
adc
and
pop
mov
inc
sbb
iret
inc
or
popa
xlat
shl
sub
mov
cmps
push
rol
jmp
lahf
js
adc
cmp
pusha
adc
mov
or
pop
and
sbb
push
in
sar
inc
int
jge
or
test
dec
out
loope
into
cld
dec
call
(bad)
pop
cmps
push
retf
cmps
mov
mov
push
ret
test
bound
mov
mov
sti
add
lea
pop
out
inc
sub
ret
mov
mov
int
rcr
xchg
mov
lods
mov
xbegin
jne
mov
(bad)
cmp
fist
push
jae
(bad)
push
pop
xchg
cdq
es
aas
pop
xor
ret
out
jge
mov
les
jmp
test
loop
and
(bad)
call
lods
outs
dec
enter
push
pop
or
lods
clc
add
aas
scas
rcl
mov
cmps
xchg
jns
dec
movs
push
leave
je
inc
xlat
xchg
cmp
ret
in
bound
jecxz
inc
ins
cmps
aas
das
ret
ins
movs
ins
sbb
mov
add
inc
push
lahf
add
jne
popa
rcr
mov
repz
(bad)
lahf
cmp
push
push
ja
(bad)
into
call
cmp
dec
inc
sbb
test
outs
dec
mov
push
aaa
retf
push
repnz
xor
pushf
or
(bad)
cmp
mov
je
adc
sbb
push
test
add
xchg
(bad)
fstp
rol
inc
mov
mov
dec
div
or
aam
ror
lods
xchg
mov
movs
xor
leave
mov
push
mov
inc
rcr
popa
xor
sub
test
aad
mov
into
and
cmp
cmps
mov
sbb
xlat
jno
pop
xchg
cs
inc
mov
dec
retf
inc
inc
push
dec
loop
scas
pop
sbb
cdq
jae
retf
mov
cld
in
js
adc
push
pusha
sbb
cld
dec
outs
cmps
inc
into
(bad)
not
push
cs
ds
mov
aad
rol
adc
aas
(bad)
adc
enter
xchg
call
mov
xchg
sub
jne
js
jecxz
xor
inc
call
pop
movs
hlt
adc
(bad)
in
pop
mov
test
in
stos
out
test
pop
arpl
dec
mov
movs
sub
(bad)
hlt
mov
cmp
pop
popa
cmps
leave
jl
xchg
pmaxsw
xor
shl
mov
jl
mov
mov
adc
add
or
jmp
mov
daa
cmp
cld
ror
xor
out
jle
dec
dec
and
dec
xchg
xchg
and
inc
stos
push
in
sbb
inc
cli
push
jns
xor
(bad)
pop
call
pop
pop
jns
dec
sbb
stos
adc
aas
ficomp
daa
jbe
aam
icebp
cmp
pop
out
xchg
cmp
cmp
push
imul
stos
or
adc
jge
push
jbe
and
out
fild
cs
mov
mov
sbb
movs
push
pop
sub
mov
sti
fs
or
xor
adc
jnp
dec
shl
cmp
int
or
jle
(bad)
mov
pop
xor
dec
or
aas
add
in
pop
test
mov
fdivr
ret
pop
jg
adc
ins
or
jb
xlat
xor
mov
xchg
push
xor
jl
cmp
mov
scas
jne
call
pop
ss
xor
lods
daa
fbld
mov
mov
and
inc
aad
add
and
sahf
cmp
dec
fdiv
pushf
jns
std
jo
test
and
lock
pushf
nop
out
call
inc
sbb
sbb
pop
mov
jp
xchg
addr16
js
shl
mov
jb
loop
fsub
mov
dec
xlat
jl
ins
dec
into
pop
and
repnz
data16
in
xchg
lea
inc
add
and
mov
or
test
pop
mov
adc
push
mov
mov
push
jp
jmp
test
xor
push
add
ret
(bad)
adc
int3
and
enter
int3
imul
cld
mov
xchg
xchg
dec
test
cdq
add
jns
call
out
icebp
adc
mov
dec
out
in
lods
xchg
outs
loop
inc
imul
mov
sbb
and
pop
pop
rcl
call
outs
and
into
and
and
xchg
movs
ja
sbb
pop
call
mov
sbb
cmp
mov
fiadd
movs
or
je
lock
xor
scas
nop
xor
(bad)
jl
mov
popa
ret
stos
int3
pop
aad
in
(bad)
hlt
fbld
jo
xchg
lock
jge
xchg
pop
push
adc
push
repz
retf
inc
(bad)
xchg
pop
mov
jne
jmp
sbb
cmp
cmp
cmps
adc
xchg
gs
ss
test
push
cmp
mov
adc
cmp
leave
movs
shr
pop
cmp
in
scas
inc
fdiv
sbb
add
pop
cmp
xlat
lods
jbe
adc
and
ja
mov
movs
rol
mov
add
inc
jecxz
inc
rcl
das
shl
jbe
sti
js
add
mov
ret
sub
mov
shl
aas
push
bound
(bad)
sbb
shl
jno
mov
pop
add
cwde
retf
cmp
ror
push
adc
mov
cmps
imul
ret
rcr
scas
add
jl
adc
pop
sbb
adc
fnstcw
xchg
addr16
shr
rcl
rcr
inc
sahf
xor
aad
stos
scas
cmc
pusha
mov
mov
cmp
idiv
mov
fs
retf
lock
mov
cmc
movs
inc
ss
in
or
mov
push
pop
retf
hlt
test
call
adc
xchg
xchg
add
inc
cmp
push
vmread
sbb
pusha
popa
out
repz
cmp
mov
inc
dec
mov
push
out
(bad)
in
mov
mov
(bad)
jns
stos
xor
jns
xor
inc
and
daa
loopne
jnp
rcr
fmul
shl
lock
mov
or
daa
cmps
push
ss
adc
xor
scas
clc
add
sti
mov
(bad)
cmp
add
ror
xchg
lahf
out
mov
push
(bad)
sbb
sbb
out
jl
js
mov
aad
mov
sbb
out
xchg
(bad)
xchg
cmc
test
aaa
sub
iret
aas
jne
imul
int3
cld
(bad)
outs
cli
sub
call
shl
pop
inc
nop
and
add
cmp
dec
inc
xchg
jno
sti
dec
daa
mov
fsubr
(bad)
xchg
mov
jns
xchg
push
sti
mov
setge
xchg
pop
test
and
ret
add
test
push
pop
lods
add
les
ss
pop
loopne
sahf
mov
cmp
mov
enter
push
mov
push
dec
sbb
lock
mov
jb
sahf
push
hlt
rol
inc
or
push
sahf
sbb
data16
ja
hlt
sahf
out
add
mov
cmp
aaa
shl
lods
adc
js
out
(bad)
sti
mov
jb
pop
cmp
test
pushf
test
sub
xchg
cmp
or
and
add
dec
sbb
pop
inc
sbb
shl
mov
pop
gs
bound
js
jp
ins
and
in
iret
jge
idiv
arpl
daa
icebp
inc
test
mov
push
push
inc
outs
sub
sub
cli
dec
(bad)
shl
push
je
and
loopne
lahf
call
outs
push
lea
ds
jmp
jg
and
fs
cmp
adc
pushf
out
jnp
retf
scas
shrd
dec
push
aad
ror
je
adc
loopne
push
dec
and
cmp
push
dec
xchg
fmul
ret
and
lahf
ja
movs
rcl
xchg
les
xchg
(bad)
call
add
mov
pop
aaa
clc
add
push
fadd
or
jo
stc
dec
mov
dec
mov
pusha
out
out
jmp
out
leave
or
retf
mov
outs
sub
cmp
sub
fsub
push
sub
mov
dec
retf
pop
jnp
int
add
jb
(bad)
add
push
ror
xor
int
push
adc
xor
cmc
push
(bad)
movs
pop
jne
xchg
or
adc
mov
pushf
pop
add
push
add
std
enter
sub
fwait
xlat
das
xor
xor
add
inc
or
rcr
rol
fcmovbe
leave
mov
inc
cmp
pusha
aas
mov
out
(bad)
jnp
mov
mov
dec
shl
fwait
mov
sahf
ret
fisub
out
push
push
dec
and
jle
emms
scas
jno
sub
ret
add
dec
xor
push
(bad)
or
cmps
mov
movs
nop
call
cmc
push
mov
xchg
jmp
push
call
je
mov
jge
dec
or
imul
pop
pop
call
add
sub
push
and
popa
scas
and
out
sub
das
(bad)
jnp
and
push
sahf
mov
cs
je
cdq
push
scas
inc
out
pop
jno
push
popa
out
push
push
aad
movs
inc
loop
pop
mov
pop
pop
(bad)
push
or
(bad)
mov
das
popa
cmp
cdq
jecxz
into
gs
js
mov
cmc
jmp
add
mov
jmp
xchg
push
inc
fadd
mov
xsavec
push
push
or
xlat
in
mov
mov
mov
dec
sub
fwait
test
add
mov
ret
fdivr
adc
pop
adc
in
(bad)
ins
fistp
into
stos
inc
xchg
or
mov
sahf
mov
gs
cdq
or
jbe
xor
jb
retf
cmp
daa
in
shr
adc
shl
out
in
or
cmp
mov
mov
jns
mov
stos
shr
or
fdivp
push
and
mov
sub
xchg
jae
mov
cdq
nop
fsub
popf
je
mov
jmp
mov
jne
cmp
jmp
loope
jmp
cld
jecxz
mov
xor
ret
aam
mov
push
jge
jae
(bad)
cli
ds
aaa
pop
sub
stos
push
cmp
xchg
push
xchg
xor
xor
and
gs
std
xchg
retf
mov
xchg
lahf
and
xchg
add
sbb
jb
push
(bad)
adc
push
and
or
and
daa
stos
inc
ja
add
cmc
in
dec
fldcw
jp
sub
test
xchg
jb
fst
hlt
mov
jo
imul
fdiv
addr16
imul
or
ins
and
div
dec
jmp
push
punpckldq
mov
mov
pop
clc
or
xchg
adc
mov
iret
mov
(bad)
pop
sub
xlat
inc
mov
aad
pop
mov
es
xor
sti
mov
sbb
data16
sti
in
fcom
xor
shr
inc
dec
cmp
pusha
pop
scas
jo
shl
js
fisttp
jmp
xor
pop
arpl
sub
loopne
or
leave
mov
sti
mov
in
or
pmaddwd
shr
(bad)
jnp
mov
mov
ins
cwde
ins
je
sub
leave
stos
rcl
and
mov
or
pop
xchg
(bad)
aaa
icebp
fcmovnu
cmc
jmp
ins
dec
repnz
xor
int3
jl
xor
pusha
fidivr
std
fs
(bad)
add
inc
push
cmps
and
push
cdq
stos
ds
lds
mov
retf
jno
aas
ins
pop
aaa
ds
fsubr
jno
cmp
xor
call
mov
sub
xor
aad
push
cli
mov
fs
ret
inc
pop
mov
mov
xchg
fadd
add
xor
das
add
in
outs
retf
cwde
push
and
push
and
pusha
and
mov
movs
pop
adc
sub
or
jb
adc
aam
scas
add
jne
stc
dec
out
add
retf
mov
arpl
inc
mov
into
pusha
aam
fdivr
sahf
aad
push
mov
inc
aaa
loop
dec
ret
(bad)
(bad)
out
dec
push
dec
mov
jmp
jge
mov
pop
pushf
aas
lods
fisttp
fst
mov
jmp
ja
mov
repnz
sti
imul
fnsave
dec
add
fisub
jl
ficom
xlat
das
imul
ret
pop
lods
cmc
int
add
mov
xchg
jmp
cmp
popa
mov
and
ja
(bad)
xchg
cmp
jge
mov
or
mov
data16
cmp
mov
mov
mov
fs
(bad)
mov
xor
pushf
mov
mov
iret
unpckhps
or
mov
arpl
jno
cwde
jnp
cmc
in
daa
test
pop
sysret
mov
sbb
enter
or
adc
rcl
sbb
jnp
pop
jg
cmp
push
pushf
fdivr
push
pusha
arpl
inc
cmc
fwait
push
xor
test
jns
jo
xor
sbb
pop
jns
push
movs
lds
fwait
test
rdmsr
(bad)
call
pop
movs
pop
aas
sbb
test
mov
sub
fild
pusha
or
inc
jecxz
sub
cmp
scas
xor
adc
maskmovq
hlt
std
dec
mov
retf
sub
pop
push
ins
bound
cmps
cmps
outs
adc
and
rcl
out
xor
shl
jg
shl
je
mov
(bad)
mov
(bad)
fcomp
dec
push
add
repnz
rcl
aam
push
inc
jmp
cmps
cmp
ficom
enter
div
daa
arpl
loope
fs
jo
mov
jb
not
cmps
dec
call
jle
mov
sub
inc
retf
mov
rcl
pop
sub
mov
push
aam
xor
adc
cdq
and
or
cmp
sub
cld
in
cld
ror
push
test
and
minps
jo
in
cmp
jl
add
push
lods
dec
mov
mov
adc
mov
prefetch
mov
mov
stc
mov
push
adc
jnp
fcom
mov
in
xor
dec
sbb
add
outs
mov
lods
ja
inc
aam
rcr
nop
mov
or
and
pop
inc
jmp
and
xor
add
xchg
sub
mov
repz
mov
call
sahf
and
sti
jmp
enter
add
and
push
nop
sar
mov
stos
cmp
popf
cmp
mov
inc
inc
add
cmovne
pop
test
iret
repz
popf
mov
push
jnp
inc
loopne
pop
cmp
push
in
mov
jb
ret
add
sbb
cdq
jae
inc
add
sbb
dec
ja
sub
cmp
cmp
fisubr
pop
jae
fisub
add
(bad)
dec
fs
mov
push
xor
xchg
outs
inc
jge
adc
inc
jne
icebp
pop
arpl
xchg
cmc
fistp
iret
movs
jmp
mov
jne
repz
and
aam
aam
add
mov
cs
xor
mov
jmp
mov
out
sbb
mov
outs
push
or
adc
xchg
leave
sar
rcl
jg
adc
xchg
inc
stos
cdq
sbb
dec
cmps
rcr
jge
mov
dec
data16
mov
out
scas
fsub
mov
popa
icebp
add
sbb
popf
frndint
and
hlt
sbb
sbb
arpl
test
sub
fidiv
ss
dec
inc
loope
push
int3
pop
inc
test
mov
dec
mov
(bad)
scas
fstp
or
xchg
xor
cmp
dec
bound
cmp
mov
mov
out
das
mov
add
sub
test
pop
adc
popf
ficom
pop
(bad)
mov
xor
pop
xchg
(bad)
push
je
jl
sub
push
outs
loope
fnsave
jmp
mov
and
lds
add
cld
mov
gs
mov
mov
xor
std
cmp
imul
(bad)
jae
mov
xchg
add
inc
jp
cdq
call
inc
pop
add
adc
test
jl
imul
adc
push
in
mov
jg
or
sub
test
clc
test
and
mov
imul
pop
fld
xor
inc
lods
and
add
mov
(bad)
inc
pop
stc
scas
sub
ins
inc
jbe
movs
rol
out
cmp
add
(bad)
dec
(bad)
ja
(bad)
(bad)
(bad)
fdiv
add
dec
(bad)
jne
inc
xlat
mov
mov
inc
ret
nop
cmps
mov
mov
repnz
cdq
push
mov
or
rcr
add
xor
ss
mov
gs
and
in
pop
mov
mov
inc
das
iret
mov
jb
cmp
jl
outs
shl
aas
xor
jne
sub
movs
xor
xchg
push
cs
mov
pop
pop
shr
loop
cmp
test
loop
es
stos
hlt
mov
fisub
pop
repnz
rol
and
mov
mov
pop
jl
cdq
push
inc
mov
cmp
xor
mov
xor
xchg
jecxz
std
push
mov
mov
adc
xchg
mov
mov
push
xor
into
mov
cmp
pop
add
sti
sbb
lock
icebp
test
mov
cs
push
test
outs
je
xchg
and
sub
call
retf
mov
cmps
call
push
jmp
add
push
cs
inc
movs
inc
ss
or
dec
xor
lea
add
lods
inc
(bad)
(bad)
std
push
(bad)
stos
push
mov
and
fnstenv
clc
push
jbe
retf
mov
push
mov
daa
inc
ret
test
fs
out
fdivr
adc
adc
push
jmp
jne
jl
cdq
mov
sbb
push
pop
jle
mov
enter
xchg
push
push
push
fiadd
xchg
addr16
or
stos
hlt
scas
retf
fwait
jp
aam
jp
aaa
xchg
mov
push
mov
jbe
sub
mov
mov
jae
xchg
enter
jmp
mov
mov
sub
sbb
xor
xchg
out
push
retf
psubsb
pop
movs
inc
(bad)
mov
cmp
fisttp
loop
and
xlat
jl
test
mov
mov
mov
pop
movs
aad
popf
mov
xchg
lods
mov
out
fwait
pop
outs
cld
add
mov
sbb
arpl
int
add
daa
inc
lods
pop
mov
(bad)
fsub
call
movs
fisttp
mov
push
les
(bad)
and
mov
inc
mov
fidiv
jl
dec
cs
arpl
adc
push
imul
xor
and
inc
jae
push
cmp
mov
and
mov
or
add
sbb
push
imul
(bad)
bound
dec
pop
rcl
cmc
and
xchg
mov
mov
jmp
mov
xor
sbb
lds
cwde
xchg
shl
lods
mov
inc
or
outs
fild
inc
mov
push
aad
inc
stos
sbb
or
not
and
xor
in
lahf
repz
add
es
xchg
sub
push
test
mov
push
add
push
iret
dec
test
pushf
inc
dec
adc
mov
xchg
push
lea
xlat
mov
mov
xchg
sub
sub
test
shr
js
add
xchg
in
or
retf
cmps
fwait
jno
dec
fiadd
hlt
fsubr
mov
int
movs
ret
mov
push
pop
sbb
cmps
push
jne
dec
sbb
jno
icebp
xor
jecxz
movs
(bad)
daa
neg
ret
cld
(bad)
or
cld
mov
outs
mov
cmps
cdq
ins
mov
int
xor
imul
sbb
xchg
add
fwait
clc
mov
adc
clc
popf
mov
cs
loopne
loopne
data16
lds
mov
add
cmps
pop
pusha
popa
sbb
in
js
shl
mov
hlt
push
fst
es
xchg
das
mov
ds
sbb
popf
int3
dec
mov
mov
push
add
xchg
jge
retf
jns
xchg
fsubr
shl
jge
shl
fmulp
int
iret
adc
fisub
ret
mov
mov
pop
test
out
jmp
not
fs
jo
mov
popf
sub
mov
jo
push
bound
imul
cmp
test
xchg
xchg
dec
iret
sub
cmp
dec
ret
pop
das
pop
cld
lock
dec
ins
and
and
pop
imul
inc
sub
scas
cmp
xchg
inc
jg
lds
imul
jae
mov
sbb
sbb
pop
pop
jp
xor
cmp
aas
mov
dec
sar
cmps
jae
shl
mov
mov
(bad)
ins
int
ins
pop
test
test
das
sbb
fdivr
xchg
cmp
xchg
icebp
adc
aaa
mov
sub
xor
out
fistp
popa
mov
add
sub
popa
call
mov
jne
sub
cmp
js
xchg
push
rcr
lahf
ds
in
jmp
xor
sbb
in
loop
jle
fcom
xor
sbb
into
outs
scas
cmp
mov
and
cmps
cmp
xchg
mov
int3
sub
or
cli
into
mov
inc
std
xor
pusha
mov
pop
sbb
cmp
mov
icebp
stc
fs
push
xchg
cld
sbb
dec
lds
and
psrld
sbb
sbb
in
xchg
mov
jg
add
ss
mov
fcmovnbe
xchg
sbb
vandnpd
dec
pop
mov
sbb
mov
ret
lahf
inc
mov
dec
out
ffreep
lahf
stos
lods
lods
out
jnp
test
(bad)
cmps
cmps
(bad)
repnz
or
push
rcl
aas
dec
ins
icebp
repz
fld
and
mov
enter
imul
pop
or
push
pop
dec
outs
adc
inc
daa
cdq
sub
scas
add
sub
mov
xchg
adc
fs
js
sbb
aam
ins
push
repz
shl
push
sti
lock
loop
dec
and
or
fimul
in
cmp
xchg
iret
and
(bad)
movs
add
jmp
xor
into
enter
rol
mov
out
fstp
mov
js
lds
out
adc
push
fsub
fldenv
call
bnd
(bad)
aam
pop
mov
mov
xor
inc
lods
xor
xchg
in
or
test
push
push
xor
pop
cmp
stos
xor
in
sar
add
mov
test
sahf
outs
dec
outs
movs
add
jae
pop
test
gs
pop
retf
popa
cs
jmp
adc
xchg
push
jbe
sub
pop
ror
fsubr
push
scas
repnz
retf
mov
out
cmps
push
(bad)
dec
shl
out
pop
mov
aam
fiadd
xor
push
retf
rcr
add
lods
popa
sahf
mov
push
arpl
sub
dec
or
add
pop
lea
sbb
xchg
jae
sub
popf
int3
enter
add
sub
(bad)
jle
pop
mov
mov
jbe
pusha
(bad)
addr16
push
push
in
(bad)
xchg
sub
popf
jge
pop
jg
leave
loope
ret
dec
gs
cmp
repz
lock
test
stos
push
inc
add
adc
cmp
add
enter
or
fwait
fwait
and
mov
aas
push
pop
ins
aad
aas
(bad)
sbb
cli
sbb
adc
shr
cwde
dec
repz
loopne
lods
cmp
mov
sub
arpl
dec
lods
sahf
std
cmps
out
out
lods
adc
lods
or
call
jmp
rcl
xchg
mov
fdiv
sub
inc
jg
sub
sbb
push
imul
and
jmp
pop
xchg
mov
cmp
inc
mov
stos
xchg
push
cdq
inc
mov
daa
xor
xor
adc
rcr
aad
mov
rol
pop
fs
pushf
jnp
and
loope
push
fiadd
loop
fistp
sub
inc
das
repnz
adc
in
fisub
scas
or
clc
mov
lea
cmp
leave
fwait
call
mov
mov
push
mov
out
jp
pop
jo
xor
or
repnz
icebp
add
mov
and
mov
mov
bound
jmp
dec
sub
cmp
jmp
jp
pop
adc
mov
xchg
sub
jl
xrelease
test
or
pusha
fwait
dec
dec
mov
dec
cmc
pop
call
cdq
add
retf
pop
les
outs
xor
call
aad
add
outs
retf
ss
(bad)
mov
retf
retf
gs
shr
sub
or
aas
jmp
fild
sub
mov
fdivr
inc
scas
outs
cmp
jmp
mov
dec
adc
sub
mov
enter
mov
add
mov
push
fld
cld
add
cmp
jno
lods
or
call
or
and
stos
add
repnz
cmps
or
not
out
jno
sbb
clc
mov
cmp
dec
jae
pop
mov
or
push
repz
jno
mov
leave
mov
aad
add
sub
mov
(bad)
rcl
cld
into
test
aam
fdivr
scas
cli
xchg
cmps
test
out
hlt
fcomp
mov
shl
out
dec
test
sub
sti
jmp
out
sub
add
sbb
or
jbe
movs
and
push
cmp
mov
std
jbe
sub
scas
dec
or
sahf
lods
xchg
dec
mov
ds
or
in
jmp
loopne
inc
push
mov
push
inc
or
mov
cmp
and
mov
push
mov
mov
dec
jle
ja
dec
sub
jecxz
mov
lds
cmp
test
mov
arpl
mov
(bad)
ret
or
mov
test
add
(bad)
stc
inc
shl
adc
mov
push
fmul
sbb
mov
adc
sub
adc
fwait
or
fstp
mov
cmps
test
clc
shl
retf
mov
leave
cmp
adc
cmps
cmps
mov
xor
sbb
or
loope
sar
ret
ret
bound
(bad)
jns
mov
xlat
pop
(bad)
cmp
push
inc
mov
xchg
xchg
mov
mov
daa
ror
dec
ins
rcr
dec
stc
loope
rcl
loop
enter
add
push
pop
mov
adc
ror
ja
jne
and
loopne
sub
(bad)
loopne
mov
jnp
xor
movs
jmp
pop
push
mov
mov
and
add
popa
pop
push
jg
call
mov
fcmovbe
jae
fimul
fdivr
popf
jae
out
in
cld
xor
(bad)
sub
(bad)
pushf
inc
(bad)
mov
je
gs
xchg
and
xchg
aaa
test
cmp
(bad)
adc
fcom
sub
ins
test
jp
int3
adc
dec
sbb
pop
shr
pop
ins
adc
xor
hlt
push
and
pop
test
mov
push
push
movs
sub
jge
mov
inc
arpl
add
cmps
cmp
mov
int
push
enter
movs
cdq
rol
mov
mov
(bad)
xchg
cmc
call
mov
out
(bad)
pop
dec
jns
mov
fcom
nop
xchg
pop
and
pop
stos
nop
addr16
out
ret
mov
cmps
mul
pop
cmp
jbe
mov
jl
mov
sub
add
dec
dec
ss
call
sar
stc
rcl
jbe
cmp
in
pop
xchg
inc
sub
xor
sbb
lock
mov
mov
mov
push
rol
or
cld
(bad)
mov
repnz
push
movs
xor
rcr
(bad)
adc
cmc
in
cmp
jne
jno
adc
sub
sahf
add
movs
cs
in
out
adc
mov
pusha
or
and
sbb
in
repnz
mov
std
mov
jg
pop
into
iret
mov
movs
mov
sbb
mov
stc
popf
jl
test
mov
sahf
push
cmp
gs
ins
pop
fnstsw
in
push
dec
stc
adc
mov
fwait
in
sub
pop
in
cmps
mov
jmp
mov
mov
(bad)
mov
jb
fimul
push
clc
mov
loopne
jnp
clc
push
(bad)
sbb
jae
mov
cld
pop
daa
push
imul
div
mov
inc
adc
inc
rcr
jmp
jmp
sbb
sbb
fadd
add
inc
jae
add
fidiv
mov
stos
test
xchg
push
or
pop
aad
hlt
adc
cmp
in
mov
(bad)
cmp
xchg
in
sub
cmp
div
push
lds
lahf
dec
cdq
cmp
xchg
sub
mov
xor
mov
push
sar
jae
je
adc
push
sbb
shl
loopne
dec
rcl
xor
fmul
bnd
arpl
movs
add
add
pushf
mov
shl
jmp
scas
mov
je
adc
std
jb
js
in
pop
retf
mov
mov
cmps
repz
into
scas
aaa
out
sbb
imul
dec
std
add
fstp
push
push
mov
fwait
stos
call
test
adc
pop
test
jle
cmp
(bad)
fdivr
ins
or
fs
pop
std
test
jb
cmp
push
es
loop
or
xchg
mov
dec
cs
jnp
loop
sub
pop
mov
ror
sbb
pushf
add
(bad)
rol
imul
int3
dec
adc
xchg
adc
push
pop
mov
stos
adc
jmp
(bad)
sti
pusha
popf
loop
mov
shl
mov
or
sbb
fstp
loope
cdq
cli
les
rcl
stos
xor
(bad)
mov
sub
mov
popa
sbb
leave
(bad)
cmps
pop
inc
xor
popa
bound
sub
sub
lods
push
jae
jnp
jae
sti
add
pop
jb
mov
inc
adc
sbb
sub
inc
cmp
sub
xor
sub
xlat
int3
or
mov
(bad)
adc
movs
es
cmps
dec
into
dec
push
fwait
sub
cmps
int
sub
movs
rcl
xchg
retf
and
data16
xchg
add
in
or
mov
mov
push
sti
rol
jns
inc
sub
out
fwait
cmp
xor
pop
jl
xchg
add
pop
lds
sar
aam
cmp
xor
xchg
jbe
shl
es
jmp
cmp
movs
mov
loop
repnz
jmp
mov
add
addr16
xchg
dec
(bad)
clc
cld
aaa
mov
push
dec
and
cmp
pusha
outs
(bad)
jp
aas
jae
sbb
repnz
in
and
push
ret
xor
mov
lea
movs
sub
sbb
xlat
out
push
fmul
mov
mov
les
fcmovnu
scas
inc
sbb
xchg
inc
pop
xor
mov
pop
scas
je
sbb
test
(bad)
sti
and
or
add
(bad)
cmp
dec
or
scas
repnz
jae
pushf
and
jmp
mov
(bad)
pop
push
pop
(bad)
pop
push
gs
jb
pop
movs
mov
scas
out
loope
mov
mov
cmp
test
sbb
aam
inc
loope
and
int3
ins
or
dec
mov
test
inc
ret
mov
out
rcr
pop
mov
push
fimul
push
mov
jb
arpl
nop
xor
mov
test
frstor
xor
idiv
es
adc
adc
int
inc
(bad)
loop
out
(bad)
pop
cmp
and
in
lods
cmp
jecxz
mov
cld
cli
movs
xor
mov
ds
add
jmp
in
into
data16
cmp
jnp
jmp
mov
int
xor
mov
and
cs
xchg
cmp
jns
sahf
pop
leave
test
out
out
fistp
shr
push
lahf
mov
jo
dec
loop
pop
retf
in
xlat
and
mov
leave
test
xor
in
mov
mov
inc
test
jg
or
outs
fwait
js
or
sub
cmps
add
add
cmc
dec
fwait
add
loop
ss
out
mov
test
cmp
push
lahf
push
sbb
jne
stos
jnp
es
je
popa
dec
sbb
push
fisubr
sbb
ret
retf
test
out
fld
sub
adc
int3
inc
fwait
les
dec
mov
mov
std
fsubr
loope
cmp
and
push
inc
rol
fisub
cmp
aas
jmp
push
or
movs
test
and
out
jmp
push
xchg
mov
mov
addr16
movs
mov
dec
jne
push
dec
pop
daa
xor
cmp
inc
cmp
push
loop
cmps
cmps
in
push
adc
je
jno
data16
cdq
(bad)
pminub
mov
mov
(bad)
cmp
shr
fmul
cmp
fs
inc
loope
pushf
mov
call
sahf
push
or
push
dec
pop
inc
push
lock
std
add
(bad)
sbb
dec
nop
retf
mov
test
outs
inc
mov
dec
push
add
cmp
test
jp
loope
or
cmp
and
add
fs
xor
sub
test
mov
mov
mov
pop
inc
push
imul
loopne
fld
xor
or
mul
sub
imul
pop
dec
xchg
push
addr16
mov
push
xor
out
lds
xor
lods
pop
jecxz
push
scas
pop
push
lahf
and
pop
aad
pushf
cmp
dec
xor
and
xor
aas
dec
inc
inc
enter
push
or
cmp
cli
ret
sti
imul
or
cmovle
sub
xor
fwait
mov
sub
call
in
pop
jg
in
jns
addr16
lods
cmp
repnz
arpl
sub
sub
xchg
lods
dec
hlt
pop
sahf
arpl
pop
jecxz
ror
add
mov
ss
mov
mov
xchg
xchg
or
(bad)
retf
(bad)
xlat
arpl
icebp
nop/reserved
fptan
inc
pop
xchg
jnp
pop
xchg
ins
movs
mov
outs
sub
stos
inc
pop
popf
and
xor
mov
sub
xor
mov
dec
jge
or
add
pop
loope
xchg
cmc
gs
iret
rcl
pop
pop
aad
hlt
lods
sbb
cmp
out
or
movs
sbb
mov
dec
pop
jl
mov
cli
ret
rcl
push
xchg
in
jmp
sub
sub
xor
lods
xchg
adc
sbb
sar
outs
cmp
loope
ds
adc
jge
arpl
in
shl
jg
push
mov
in
fcomi
jp
outs
ret
mov
cdq
sbb
pop
outs
mov
xchg
mov
loope
mov
mov
aad
scas
adc
sbb
adc
push
psllq
dec
cwde
ins
stc
cwde
jno
add
(bad)
jle
pop
jnp
es
xor
outs
ss
xchg
mov
xchg
dec
dec
pusha
jle
sub
test
clc
pop
test
push
push
fsub
popa
stc
xor
mov
and
jge
loope
mov
push
xchg
shl
in
sub
push
push
inc
sar
ret
stos
dec
cld
add
mov
inc
or
or
lahf
jne
movs
fild
daa
pop
adc
or
mov
js
sub
dec
shl
inc
(bad)
int3
push
mov
ds
adc
jmp
lods
ja
call
ss
sub
mov
repz
sahf
cmps
mov
mov
jge
inc
sahf
mov
mov
(bad)
xor
cmps
add
mov
mov
les
enter
lock
mov
pop
mov
stos
jge
and
add
xchg
and
dec
mov
fst
mov
inc
cdq
scas
add
jg
and
xchg
mov
push
or
das
mov
scas
push
loopne
jne
push
addr16
jno
xchg
cmp
inc
aaa
inc
mov
ds
or
rcr
and
dec
fmul
iret
pusha
add
call
xchg
sub
shl
mov
and
xchg
stc
pop
jne
cmp
mov
or
aad
mov
sub
xchg
aad
fadd
mov
out
xchg
in
sbb
inc
in
xchg
lods
xchg
mov
jmp
or
lock
sbb
leave
dec
adc
(bad)
clc
and
and
pop
fwait
jle
sub
dec
das
pop
fstp
jno
loopne
std
sbb
test
call
retf
cmps
sub
fwait
in
cs
push
dec
es
int
cmp
not
pop
jmp
lds
sub
ins
and
sbb
int
std
(bad)
movs
adc
ficomp
enter
mov
in
ins
movs
in
jae
push
ja
xor
cmp
and
div
cmp
sub
mov
pop
xchg
xchg
outs
iret
xchg
nop
push
jg
sub
(bad)
sbb
xor
cmc
call
test
adc
ror
xchg
mov
mov
jecxz
inc
aad
jno
aam
mov
cmp
jmp
xor
mov
in
jae
fs
or
or
sub
loopne
sbb
icebp
enter
aad
ror
push
movs
or
add
mov
call
lods
ss
adc
push
sbb
shr
sti
sub
inc
into
xchg
sub
mov
loope
dec
sbb
ret
push
mov
xchg
stos
push
mov
dec
mov
sub
outs
sub
les
sub
fcomip
fmul
jne
jmp
retf
push
cmp
push
push
jb
jge
mov
into
(bad)
out
test
iret
jmp
mov
inc
enter
sbb
test
cmp
xor
daa
xchg
test
nop
mov
add
or
mov
fbstp
sbb
jmp
cmp
fisttp
mov
xchg
or
mov
in
mov
aas
xchg
test
sub
or
ret
imul
daa
mov
push
fisubr
fnstcw
push
cmp
fnstcw
lods
in
mov
stos
cmps
fwait
dec
adc
pusha
inc
mov
push
js
pusha
dec
movs
jbe
in
cld
jns
in
shr
and
and
xchg
fisubr
inc
jmp
ins
(bad)
jmp
mov
leave
lods
sbb
dec
out
popf
test
jae
(bad)
xchg
shr
inc
sub
daa
cmp
out
repnz
sbb
(bad)
push
scas
push
pop
jp
ret
and
cmp
outs
add
imul
inc
test
xchg
fnstcw
aam
push
fisttp
sbb
push
retf
adc
(bad)
pop
xlat
adc
(bad)
nop
aad
jo
push
cmp
lds
jge
das
push
icebp
(bad)
cmp
sub
test
or
arpl
cs
mov
mov
jp
inc
out
movs
inc
jns
ja
les
movs
pop
push
adc
in
loopne
bound
xor
jmp
int3
cmp
mov
jle
jmp
add
call
test
cld
xor
inc
stos
mov
daa
mov
inc
stos
lods
nop
imul
push
jae
imul
sar
add
sub
mov
sbb
xor
sbb
(bad)
std
and
xchg
xchg
jle
jns
popa
mov
cmp
loopne
imul
fs
pop
jnp
fsub
fdivr
test
sbb
jg
and
addr16
or
sti
test
out
mov
mov
mov
stc
rcr
inc
push
popa
jp
lds
aad
pop
(bad)
cmc
icebp
daa
scas
inc
or
scas
mov
enter
jnp
fwait
repnz
mov
xor
cmp
retf
imul
pop
jo
lods
into
daa
jmp
dec
popf
fmul
add
inc
inc
push
inc
out
cmps
push
(bad)
cmps
out
xor
xor
dec
and
pop
std
push
mov
pop
dec
lea
retf
xchg
or
mov
pop
push
int
xlat
in
in
fsubr
outs
xor
xlat
or
xor
loopne
fstp
in
and
pusha
push
jnp
jbe
jp
sbb
(bad)
dec
xchg
pop
aaa
mov
test
and
mov
out
sub
jp
pop
imul
mov
sbb
pop
xchg
jns
push
adc
push
xor
sub
pushf
shl
xchg
mov
xchg
je
outs
imul
xlat
rcr
jge
cmp
add
and
jge
dec
mov
dec
bound
jo
gs
icebp
jb
lds
mov
cli
or
lea
in
mov
cli
push
cmp
out
enter
mov
scas
xchg
xlat
cmp
jmp
lahf
into
(bad)
iret
fs
mov
idiv
xchg
iret
xchg
cdq
mov
sub
dec
add
ror
(bad)
int
sbb
out
mov
repnz
out
jno
jbe
enter
mov
mov
add
cli
pop
fcomp
lahf
enter
sub
outs
xor
dec
adc
cwde
xlat
loope
sbb
adc
mov
jne
cwde
mov
inc
je
jmp
(bad)
pop
in
adc
pop
mov
push
fabs
add
cmp
sbb
cmp
dec
das
loop
adc
aam
enter
inc
stos
cld
adc
pushf
into
pop
sub
mov
or
push
es
popf
mov
fisttp
mov
jnp
call
call
lods
pop
inc
cmp
sub
and
xchg
(bad)
push
sbb
mov
push
fld
push
jnp
pushf
outs
push
fiadd
and
shl
ins
or
mov
stc
mov
or
hlt
add
xor
pushf
cdq
pop
cmps
xor
cli
cwde
jecxz
adc
call
jmp
pop
lahf
pop
dec
ret
mov
popf
cmp
inc
mov
mov
and
jmp
cmp
inc
xchg
in
mov
popa
jb
sahf
sbb
repz
clc
xchg
sbb
jne
sub
ret
sub
fwait
gs
pusha
lahf
out
dec
fwait
daa
sti
and
sub
lea
mov
pop
fmul
test
xor
shl
in
jns
add
adc
or
lods
cmps
(bad)
lahf
js
xchg
(bad)
mov
push
mov
movs
js
imul
push
or
pop
fist
mov
cmovae
aaa
cmp
movs
mov
in
push
xchg
mov
test
call
in
cmp
dec
mov
mov
rcl
sub
dec
push
repnz
cli
scas
push
ret
mov
and
in
pop
dec
call
out
jno
ret
enter
ins
call
sbb
sbb
pop
xor
cmps
les
pop
cmp
xchg
xlat
cmp
mov
fiadd
shl
pop
js
dec
mov
mov
fdivr
push
outs
pop
jo
cmps
push
push
aaa
daa
out
in
cmps
daa
sbb
loopne
jle
ret
and
int
in
jns
test
sbb
and
arpl
xchg
in
mov
stos
jge
bound
into
push
pop
pop
sbb
fbld
imul
or
cmp
pop
pop
aad
lods
mov
push
iretw
xchg
inc
(bad)
mov
outs
inc
mov
mov
ds
rcr
popf
mov
sub
fwait
push
retf
jmp
into
add
cmp
mov
ret
mov
and
cwde
xor
(bad)
(bad)
inc
jecxz
cwde
or
or
pop
loop
mov
jb
inc
push
test
cmp
test
or
push
mov
adc
loop
sbb
cdq
sbb
or
xor
stos
mov
retf
fs
popa
mov
adc
pop
sti
xchg
jg
xor
push
jp
jl
(bad)
mov
fadd
in
push
pusha
mov
and
mov
out
xor
jae
fistp
pop
fld
or
int
ret
je
mov
sbb
rcl
repz
not
shr
add
fiadd
adc
or
retf
jg
scas
push
mov
ret
(bad)
repnz
jl
cmp
cwde
mov
cdq
clc
jno
xchg
dec
rol
fadd
call
(bad)
lahf
jnp
inc
aad
test
xchg
dec
cmp
sbb
movs
lea
add
mov
cmp
sub
test
push
inc
or
outs
gs
and
jb
mov
and
cwde
scas
(bad)
test
mov
mov
sbb
ins
data16
iret
movs
shl
int3
jl
adc
mov
dec
fnstcw
cmp
jp
sub
pop
add
push
push
movs
cmp
retf
icebp
xchg
sub
jmp
xor
mov
inc
scas
pop
mov
int
push
jge
jbe
jbe
(bad)
enter
fdiv
test
cmp
push
mov
(bad)
daa
mov
jmp
jg
outs
xchg
scas
rol
push
cmps
mov
lea
dec
mov
mov
dec
push
cmp
pop
or
or
inc
retf
jl
adc
sub
clc
push
dec
retf
aam
or
xor
xchg
clc
sub
xor
xchg
leave
cmc
(bad)
fidivr
push
mov
mov
pop
and
stos
mov
in
mov
push
cmp
dec
sti
jl
sahf
or
ss
lock
mov
push
jge
dec
repnz
hlt
or
dec
push
shr
jae
(bad)
into
sub
test
inc
imul
mov
fld
in
(bad)
inc
push
test
xchg
stc
(bad)
push
addr16
sub
daa
jle
ror
leave
push
push
enter
cli
mov
xor
iret
mov
sub
push
(bad)
(bad)
icebp
jne
ret
mov
nop
out
mov
cli
sbb
mov
pop
mov
(bad)
(bad)
(bad)
int
pop
pop
ds
(bad)
fist
xchg
enter
sub
jo
sbb
movs
push
push
ret
cmc
mov
das
mov
dec
fs
or
xchg
inc
add
jge
jl
jne
sub
fadd
sbb
sbb
nop
arpl
test
xor
push
rcr
xor
or
mov
mov
mov
push
repz
xchg
popf
retf
jae
pop
push
fist
sub
cmpxchg
and
inc
mov
or
leave
fdivr
mov
inc
fcomp
iret
jns
sbb
pop
retf
fidiv
sbb
mov
retf
out
pop
fld
scas
fstp
jmp
in
nop
inc
fdiv
dec
pop
ins
mov
(bad)
imul
int
mov
clc
xchg
sub
sub
out
add
imul
and
mov
mov
mov
test
sub
popa
out
dec
xchg
loopne
fld
push
add
repnz
xchg
leave
mov
sti
retf
sti
mov
fs
jne
push
shl
cmps
mov
jmp
jbe
cdq
sub
push
lea
lahf
adc
push
call
dec
and
and
into
int3
sahf
add
push
gs
out
add
aaa
push
xchg
test
mov
jnp
mov
loope
push
jg
cmp
div
xchg
bound
test
jg
clc
enter
in
and
mov
ins
adc
test
jo
ret
(bad)
fdiv
sbb
dec
ret
mov
push
and
scas
and
ins
push
and
jge
pop
std
jbe
mov
or
icebp
mov
inc
movs
aad
imul
mov
rol
push
fidiv
ret
fbstp
push
repnz
xor
ret
lods
pop
xchg
imul
fcom
outs
push
std
jnp
add
mov
add
and
das
and
fcompp
std
shr
shl
cld
mov
dec
addr16
out
sbb
ins
ja
or
dec
popa
mov
fdivr
shl
sbb
leave
add
mov
xlat
mov
xor
loopne
push
sar
(bad)
or
add
sahf
inc
test
jnp
in
std
dec
pop
xor
(bad)
outs
xchg
sti
(bad)
pushf
sbb
adc
mov
add
xlat
pop
fwait
outs
bound
mov
loop
jae
leave
inc
adc
mov
or
js
scas
xchg
pop
sbb
iret
test
lock
fmul
or
mov
retf
mov
xchg
push
out
lea
pop
jnp
fisttp
aaa
test
loope
adc
pop
cmps
cmp
push
sub
mov
jg
adc
adc
push
stos
aam
fst
cmps
adc
push
adc
inc
sbb
mov
cli
loopne
xor
ds
das
cmps
ret
mov
add
or
(bad)
in
aad
scas
arpl
je
sahf
xchg
das
cld
lods
in
cmp
push
movs
call
adc
cmp
jae
sbb
repz
stos
pop
into
push
pop
shr
add
add
loope
clc
cmp
jno
fidiv
les
mov
pop
out
bnd
pop
icebp
sub
and
xlat
(bad)
(bad)
sub
adc
inc
ficom
mov
jmp
xchg
sub
cmp
and
call
lods
dec
shl
pop
rcl
sti
sbb
popf
pop
jle
repz
jns
or
mov
lea
shl
fstp
test
xchg
mov
pause
ja
arpl
or
psrlq
adc
jge
dec
or
fdivr
rol
lods
sbb
pop
enter
fldenv
xchg
dec
je
mov
jnp
sbb
test
popf
pushf
ja
clc
fwait
mov
cmp
in
sub
jmp
out
fdivr
pop
adc
jno
pop
out
jmp
cld
out
xlat
mov
daa
call
inc
or
or
inc
xchg
popa
mov
shl
cmp
ror
xor
test
pop
in
fstp
(bad)
mov
call
mov
push
shr
ret
pushf
out
ja
pop
stos
adc
ficomp
mov
pop
pop
jge
aas
jp
sub
mov
mov
aaa
retf
out
xchg
pop
shl
ins
xchg
pushf
adc
jnp
out
inc
dec
xor
xor
inc
mov
stc
(bad)
psrad
dec
sti
inc
xchg
(bad)
bound
push
mov
mov
aad
add
in
mov
or
js
jnp
xchg
dec
jnp
fcom
je
mov
inc
add
in
loopne
jbe
cdq
or
jb
jmp
repz
jmp
and
in
pop
sar
out
xor
retf
nop
ret
sbb
push
aaa
xor
jl
outs
ret
sub
and
and
xor
sbb
or
mov
pop
inc
adc
and
jb
aam
into
or
fwait
inc
jb
add
out
stos
and
shl
rol
pop
cmp
lods
sbb
std
jecxz
jp
push
cmp
mov
jns
push
push
cld
xchg
push
cmps
xor
rcl
xchg
aam
cli
sub
lods
mov
lds
xchg
adc
adc
out
mov
cmp
mov
mov
arpl
adc
mov
fbstp
cld
xchg
push
jo
inc
sar
and
mov
shr
lahf
push
mov
mov
adc
sub
gs
jge
push
adc
mov
mov
test
mov
ins
ins
cmp
int
mov
ins
das
rcr
addr16
or
xchg
retf
or
mov
fldenv
jae
repz
lahf
dec
inc
stos
retf
das
repz
test
shl
add
inc
lea
or
ss
push
sub
test
(bad)
ror
jae
leave
jmp
mov
jl
cmp
or
js
xchg
cmp
inc
outs
cmp
jnp
sub
push
sbb
fimul
pop
add
scas
loopne
jl
jne
loope
dec
xor
mov
or
adc
mov
fwait
xchg
pop
nop
jbe
sub
dec
ins
xor
add
out
mov
add
(bad)
retf
sub
sub
aas
cli
sub
sub
aas
xor
mov
push
inc
cmp
xor
addr16
bndldx
ins
shr
mov
xchg
mov
inc
push
cdq
pop
xchg
imul
js
mov
xchg
xchg
pusha
xor
fbld
sub
adc
mov
cmp
and
push
daa
push
movs
mov
and
mov
adc
cmp
sbb
push
inc
or
mov
movs
mov
cmp
dec
aam
jnp
sar
adc
mov
ss
nop
inc
jnp
sub
fcmovb
cld
sbb
or
or
repnz
test
mov
out
scas
nop
push
aas
xchg
cmps
adc
or
sar
push
sti
mov
popf
sti
xchg
and
push
cmp
(bad)
aaa
mov
mov
aaa
das
or
jne
dec
mov
cmp
xchg
ins
dec
int3
push
sub
pop
adc
loopne
cli
push
push
push
ja
xchg
imul
xchg
cmp
mov
push
enter
repnz
sbb
jl
loop
dec
adc
cmp
in
inc
ret
xchg
jne
in
in
aam
mov
div
nop
mov
movs
pop
popa
sbb
dec
in
jge
xor
fucomip
mov
sbb
es
mov
or
stos
inc
int3
shl
and
sub
mov
or
push
add
fidivr
scas
fdiv
pop
mov
jl
xlat
xchg
pop
pop
in
into
dec
push
cmp
push
mov
popf
and
lods
shl
dec
jnp
sbb
leave
js
test
and
aad
fwait
and
push
push
out
add
mov
inc
sbb
cmp
cmp
cwde
jmp
shr
and
push
cwde
lock
mov
enter
stos
mov
mov
push
adc
loope
sub
xor
bound
fimul
fwait
cmps
mov
dec
adc
loop
mov
ins
sub
add
int
jmp
into
jae
arpl
add
and
imul
sub
dec
pop
push
xchg
pop
scas
lds
mov
idiv
or
and
push
ja
arpl
jo
push
adc
dec
scas
mov
out
or
stos
retf
fwait
test
imul
mov
xor
push
call
push
bound
add
fsubr
and
inc
mov
test
adc
jnp
adc
dec
arpl
out
xchg
aas
lods
addr16
pop
jae
jmp
and
nop
dec
xor
shl
mov
or
mov
not
or
sub
cmp
es
and
loope
and
loope
or
xchg
jl
imul
mov
sahf
scas
sbb
nop
mov
js
addr16
push
xchg
(bad)
aam
lds
jle
dec
sar
iret
dec
jmp
(bad)
jne
xor
mov
push
fdivr
(bad)
mov
mov
xchg
test
neg
xlat
clc
(bad)
mov
ret
push
mov
int
stc
xchg
mov
mov
sbb
inc
outs
leave
push
add
test
mov
fstp
(bad)
cld
ret
and
test
gs
std
dec
js
adc
mov
mov
sahf
call
mov
xchg
enter
sbb
and
sub
out
mov
test
jp
cdq
pop
in
test
aaa
and
xchg
jle
retf
and
inc
cld
fs
nop
pop
mov
(bad)
fidiv
sbb
jne
call
push
jg
sub
jecxz
pop
leave
ds
shl
ret
hlt
push
inc
and
push
pop
inc
iret
mov
sahf
arpl
iret
(bad)
out
mov
and
jg
adc
xor
fsubr
ror
mov
push
jne
std
idiv
or
pop
adc
add
sub
loopne
xor
pop
xchg
outs
sbb
in
and
fst
sbb
enter
pushf
mov
(bad)
pop
xor
xchg
js
nop
fld
fist
mov
pop
pop
fwait
push
fld
inc
das
outs
cmc
mov
cmp
shr
or
adc
add
adc
loopne
jnp
or
dec
pusha
jae
stos
cmc
fdivr
xadd
in
fcomp
xor
test
mov
push
pusha
xchg
mov
push
and
mov
addr16
mov
into
out
or
jle
and
fwait
cmp
aaa
jbe
push
jno
jae
dec
push
(bad)
jns
pop
cmp
jns
bound
pop
jae
ret
jne
xchg
ins
test
mov
scas
pushf
inc
jl
enter
lods
pop
jecxz
fnop
cdq
je
cmps
jge
pop
adc
push
and
sbb
jbe
xor
cli
(bad)
pop
mov
jnp
xchg
sbb
jge
out
rcl
jmp
push
clc
mov
jnp
mov
(bad)
mov
shr
mov
aad
adc
xor
sti
popa
and
out
cld
or
jno
fild
dec
into
mov
or
mov
popa
xor
mov
jns
jp
iret
cmp
test
fs
sub
neg
mov
and
pop
ficom
movs
sbb
mov
dec
bound
or
shl
pop
mov
mov
xchg
ins
pop
mov
mov
pop
fs
adc
pusha
repz
mov
mov
sbb
sub
xor
ins
mov
aam
xchg
jb
enter
pop
push
xchg
retf
jnp
stc
mov
jmp
shl
push
arpl
push
pop
jae
scas
dec
retf
sete
push
nop
inc
push
imul
jb
adc
xchg
(bad)
cmps
mov
push
mov
repz
div
in
cmc
test
(bad)
mov
jl
xor
xchg
call
test
stos
cld
bound
movs
pop
nop
(bad)
pop
test
das
mov
popf
jbe
push
scas
jnp
stc
add
cmovbe
adc
mov
xor
jae
adc
scas
out
cmp
jbe
inc
movs
(bad)
or
icebp
push
cwde
int
cmp
push
push
lahf
test
mov
(bad)
into
movs
rcr
and
push
xor
mov
mov
pushf
mov
mov
stos
call
sub
rcl
es
jmp
sbb
lahf
lods
aad
ret
movs
data16
adc
xchg
push
jmp
je
inc
das
mov
aaa
jmp
es
movs
xchg
mov
sbb
or
xchg
xor
lock
lods
sahf
push
mov
and
rcl
xchg
loope
xlat
bnd
ds
idiv
lods
push
dec
(bad)
imul
xchg
dec
sbb
ins
iret
pop
fmul
and
ret
mov
push
push
popf
js
stos
loope
or
and
jb
xchg
scas
cdq
scas
pop
aam
xchg
(bad)
xchg
dec
inc
(bad)
cwde
jns
push
aam
add
aad
aam
or
ins
mul
cmp
aas
xor
or
stos
add
bound
repz
and
add
(bad)
fsubr
ss
pop
dec
setbe
test
sub
pop
cmp
pop
loop
dec
jmp
test
mov
test
shl
inc
jp
stos
push
mov
cmc
jbe
neg
out
xchg
stos
mov
jb
dec
or
test
jmp
mov
inc
outs
pop
push
pop
inc
pop
(bad)
mov
ins
(bad)
xor
jbe
mov
xor
lods
xor
fild
(bad)
xchg
je
retf
nop
cdq
adc
push
jnp
hlt
xchg
enter
lds
in
ins
xor
out
and
mov
pop
or
dec
js
bound
call
add
mov
repz
out
inc
mov
mov
add
out
adc
ja
sahf
(bad)
jmp
mov
adc
lods
fs
bound
mov
jnp
add
adc
sub
xchg
and
test
leave
test
cmp
cmp
sti
inc
xchg
adc
rcl
jae
jne
sbb
lea
xchg
xchg
cmp
sbb
jle
or
ficom
jmp
movs
call
imul
(bad)
(bad)
ret
in
xchg
repnz
sub
ja
mov
icebp
ja
call
popf
sbb
sbb
and
js
mov
scas
sub
out
xchg
ss
enter
pop
push
jae
mov
cdq
aam
pop
mov
xor
clc
xchg
ud1
lds
pop
adc
lods
(bad)
jl
xchg
sub
aaa
add
cmp
add
mov
pusha
mov
mov
test
sbb
cwde
or
cmp
cli
push
or
test
cld
xchg
or
inc
xchg
cmc
fidiv
or
sub
jecxz
xchg
cmc
fcomp
mov
and
jbe
mov
cmp
add
fidivr
mov
arpl
pop
repnz
cmps
stos
movs
push
push
jno
mov
arpl
es
neg
fcomp
jns
bound
xor
and
push
sub
test
pop
bound
retf
jecxz
adc
add
test
push
lods
in
test
dec
sbb
test
mov
push
and
xchg
outs
dec
loopne
xor
lea
int3
cmp
pop
lds
cmp
pushf
enter
lods
sub
mov
adc
leave
pop
sub
scas
gs
inc
sti
push
ret
xchg
and
mov
add
and
repz
hlt
(bad)
dec
bound
mov
and
icebp
ret
fs
mov
lea
jle
cmp
ds
leave
and
inc
int
xchg
jnp
or
les
lock
adc
or
pop
sbb
sub
or
xor
shr
add
hlt
jp
mov
jo
adc
and
push
stos
ror
fwait
stc
push
pop
xchg
push
pop
adc
out
sbb
pop
sbb
in
xchg
sahf
(bad)
movs
leave
aaa
scas
idiv
cmp
mov
dec
scas
mov
mov
push
xor
pop
or
dec
sar
mov
pop
test
mov
call
pop
add
or
adc
xchg
pop
inc
adc
cwde
adc
pop
inc
dec
inc
lds
movs
out
ds
outs
xchg
in
xor
adc
lock
pop
mov
pop
cli
mov
sub
aad
gs
dec
dec
xchg
sub
sar
lea
mov
pop
cmc
aam
inc
call
(bad)
fisttp
outs
(bad)
sbb
dec
aad
sub
mov
xchg
mov
retf
rcl
ror
popf
test
sbb
fstp
test
into
inc
in
out
int
idiv
(bad)
sahf
sbb
shl
shl
in
mov
pop
cmc
cmp
adc
or
mov
sub
xor
xchg
test
(bad)
not
lock
pop
(bad)
fcomp
mov
pop
xor
ret
mov
mov
cmc
mov
sub
and
sub
gs
(bad)
lea
(bad)
push
jmp
inc
mov
push
retf
jne
or
hlt
adc
jnp
iret
sub
jo
jle
push
xchg
ret
xchg
cmps
dec
pusha
inc
arpl
xchg
loopne
mov
mov
or
pop
xor
inc
cmp
lahf
lods
lods
mov
dec
cmp
(bad)
jns
je
sar
test
fstp
inc
repnz
and
int3
xor
mov
jl
push
jmp
lea
jbe
pop
mov
js
push
xor
ja
jnp
jmp
data16
mov
test
js
jnp
call
sub
sub
imul
jo
ror
inc
adc
out
in
push
popa
(bad)
je
je
lock
pop
test
aam
cmps
imul
daa
(bad)
loopne
push
pop
inc
push
test
adc
and
inc
jb
fidivr
jecxz
lods
ja
sbb
mov
xchg
ficomp
mov
(bad)
or
xlat
(bad)
fsub
or
es
stos
pushf
xchg
jg
inc
mov
jg
pop
push
sub
sub
neg
push
arpl
jnp
jle
lds
jb
sub
lods
movs
pop
xor
push
mov
loopne
cmp
adc
movs
fist
pop
push
repz
out
mov
jmp
mov
xor
inc
jmp
sub
or
dec
dec
inc
lds
in
xor
cmp
add
dec
cmp
cmp
pop
or
out
sbb
xchg
push
ss
jge
fiadd
je
inc
aam
xchg
(bad)
das
mov
int
fsubr
cmp
push
dec
inc
mov
fidiv
jnp
repz
adc
add
stc
mov
or
mov
int3
retf
mov
es
ret
and
push
lds
call
aaa
aam
xchg
pop
dec
adc
or
pop
fnstenv
into
xchg
mov
dec
scas
pop
stos
pop
or
(bad)
daa
sub
pop
dec
loop
call
jnp
pushf
retf
(bad)
cli
lea
call
push
add
cwde
popa
psrlw
pop
dec
ds
push
lock
movs
mov
xor
cmc
ficomp
sub
inc
xchg
push
imul
sub
and
out
rcl
daa
js
or
in
pop
mov
add
adc
mov
push
lods
pushf
cmc
sub
movs
ret
loope
shl
out
pushf
mov
xor
sbb
push
push
pop
jmp
not
inc
scas
cmp
sbb
out
call
mov
dec
jae
dec
(bad)
jmp
fxch
je
inc
or
cmp
jg
push
icebp
mov
popa
popa
push
xchg
cmp
(bad)
scas
shr
cmp
movs
jnp
(bad)
cmp
pop
or
sahf
movs
xor
movs
jecxz
daa
and
adc
inc
push
icebp
mov
cs
ja
xchg
fcom
dec
mov
aam
inc
cs
jmp
xchg
lods
repz
ja
and
hlt
imul
lods
push
sub
fld
or
mov
loope
mov
mov
fist
pop
mov
dec
cdq
mov
jno
rcr
fsub
pop
adc
out
push
call
stos
fistp
dec
fld
and
sub
icebp
sbb
js
dec
rcl
lahf
cmp
dec
add
in
sub
sub
and
(bad)
je
or
sub
fsubr
fcom
cdq
sub
call
inc
cli
add
icebp
mov
nop
pop
in
dec
mov
cmp
shl
push
out
outs
jbe
ss
cmp
sti
dec
sbb
mov
jne
leave
shl
dec
stos
dec
mov
cmps
inc
mov
mov
clc
jmp
jge
cmp
push
sub
adc
dec
fndisi(8087
sub
xchg
push
test
cmp
bound
adc
jle
jne
popa
in
mov
pop
and
lods
mov
cmps
mov
push
jno
cmps
bound
fidiv
xchg
sbb
inc
pop
test
repz
mov
daa
and
pop
push
dec
jmp
mov
imul
in
xlat
stc
pushf
xor
dec
sbb
and
repnz
stos
inc
cmp
or
popa
mov
push
xchg
inc
jo
sti
mov
test
dec
mov
sbb
stos
mov
sahf
mov
sbb
sub
(bad)
pop
mov
cwde
js
sbb
fistp
(bad)
fbld
and
ins
and
mov
gs
or
mov
aad
ins
sbb
push
into
int3
xor
jno
push
test
enter
or
js
add
shl
sub
arpl
mov
(bad)
fwait
stos
fs
pop
cs
lods
repnz
(bad)
push
cmp
push
jmp
xchg
jo
mov
adc
dec
or
dec
mov
outs
dec
or
ds
ss
sub
mov
mov
repnz
aad
dec
mov
inc
mov
push
xor
pushf
push
mov
mov
jno
jo
xchg
cmc
push
dec
mov
mov
test
imul
dec
inc
pop
ja
jmp
daa
pusha
out
push
repnz
mov
push
pop
in
dec
lahf
adc
pop
push
ret
lea
jl
ror
and
bound
shl
pop
dec
fisubr
push
out
repnz
xor
popa
xor
iret
dec
mov
add
call
les
xchg
cmp
mov
arpl
sub
rcr
cmp
imul
and
mov
or
push
div
jmp
push
test
mov
cmp
add
pop
sbb
popa
jo
push
fwait
out
sub
mov
cmp
mov
mov
cmp
loopne
cdq
or
cmp
add
in
xchg
fbld
cs
movs
test
sbb
(bad)
arpl
test
fidivr
aad
inc
sbb
test
sub
rcl
fistp
sbb
jmp
test
and
stc
daa
rcr
xlat
push
ret
and
pop
pop
mov
(bad)
jae
xchg
pop
aas
push
and
div
xor
mov
and
pusha
sub
mov
or
xchg
pop
call
aam
add
xchg
pop
daa
mov
loop
clc
inc
aas
xchg
xchg
out
ret
out
dec
inc
or
int3
sahf
and
lock
mov
(bad)
xlat
cmps
dec
cwde
push
jae
jmp
popa
loopne
xor
mov
out
and
jbe
int3
fcom
dec
lea
daa
rcr
dec
in
cmps
popa
popf
add
mov
xchg
sbb
nop
retf
pop
mov
bound
sub
(bad)
pop
xchg
(bad)
stc
dec
imul
jbe
xor
retf
fistp
or
fwait
out
lds
ret
mov
push
inc
adc
mov
addr16
pop
lea
imul
in
aad
lods
push
pop
cdq
xchg
or
and
pop
pop
mov
jns
jg
je
inc
dec
(bad)
bound
lock
rcl
cmps
pusha
loop
cmp
dec
pusha
addr16
in
pop
into
push
test
push
jae
icebp
pop
popf
retf
xchg
xchg
mov
mov
nop
not
pop
div
mov
outs
cld
in
shl
repz
dec
xor
daa
arpl
mov
and
mov
out
ins
jle
or
or
cld
ret
js
shr
adc
cmp
cmp
sbb
popa
stc
jmp
cmps
dec
mov
jl
sbb
dec
fnstsw
cmp
test
inc
pop
add
loop
ins
stc
movs
jl
int
xchg
or
in
mov
xor
aaa
sbb
int
adc
inc
add
in
jmp
clc
frstor
jle
dec
adc
sub
mov
imul
jp
mov
push
aas
adc
xchg
ins
cmp
adc
and
xchg
and
push
repz
and
jl
pop
ret
add
jecxz
es
inc
leave
arpl
bswap
mov
shr
cmp
xchg
cmps
sub
lods
xor
pop
mov
scas
(bad)
stos
ds
adc
dec
hlt
add
mov
push
pop
imul
rcr
sub
add
sbb
fsub
adc
shl
cli
pop
retf
mov
inc
das
and
int
push
xor
mov
mov
nop
jmp
add
iret
xor
mov
xchg
push
inc
mov
jle
and
not
(bad)
cmp
stos
in
lods
xor
aas
push
jg
sub
pop
push
and
lods
or
mov
(bad)
mov
inc
sbb
dec
push
jnp
jmp
outs
lock
in
aad
mov
in
out
retf
add
movs
xchg
sbb
icebp
daa
out
mov
movd
add
mov
stc
rol
bound
shl
ret
ret
mov
mov
add
sub
sbb
mov
lahf
adc
aas
scas
and
neg
test
out
dec
out
pop
dec
and
push
(bad)
cwde
add
mov
shl
pop
mov
pop
vmovss
sbb
jmp
xchg
inc
sub
fs
jno
jecxz
sub
imul
sbb
cld
test
pop
ret
lmsw
dec
mov
test
shr
ins
dec
sbb
int3
and
or
aam
or
shl
and
int
push
adc
lods
out
call
pusha
xor
loope
pop
mov
fcom
mov
ror
call
mov
jmp
cmp
pop
and
mov
js
call
(bad)
out
push
dec
fmul
fist
sbb
jecxz
jp
test
add
mov
sub
dec
nop
mov
jne
scas
iret
(bad)
mov
inc
pop
mov
mov
jbe
jnp
mov
lods
mov
adc
in
out
dec
(bad)
xchg
or
inc
mov
mov
data16
imul
cmp
aaa
jb
in
sahf
cmp
push
scas
xor
test
mov
js
xor
mov
inc
or
test
push
sahf
xlat
cmp
jge
inc
pop
add
sub
mov
popa
pusha
add
push
mov
mov
cmp
push
mov
cld
mov
outs
sbb
or
fs
push
add
fbstp
jb
out
jl
ja
(bad)
xor
gs
test
shl
jno
dec
jae
push
push
add
popf
repnz
fucomi
movs
(bad)
mov
movs
cmp
lahf
sbb
jmp
aaa
sub
rcl
outs
test
jb
cmp
fs
test
aas
lods
pushf
sub
mov
mov
jmp
int3
gs
mov
xchg
int
jne
scas
loope
inc
aam
mov
push
scas
retf
push
fdivr
add
mov
arpl
jle
out
mov
jecxz
jae
fild
inc
mov
xchg
leave
mov
and
loop
dec
ins
or
mov
pop
add
aas
hlt
ins
pop
jg
sub
(bad)
imul
push
repnz
popa
and
pop
das
pop
stos
in
shl
or
repnz
mov
movs
jns
push
outs
push
out
stos
sti
daa
and
xchg
data16
mov
adc
sbb
jp
ret
jp
pop
js
push
jg
aad
inc
aaa
shr
mov
pop
mov
jg
pop
js
pop
pop
dec
mov
ins
movs
ret
adc
mov
mov
inc
inc
retf
inc
ss
mov
mov
in
mov
leave
mov
push
mov
adc
sub
(bad)
shl
out
sbb
push
mov
lea
xor
push
sub
aas
retf
mov
js
adc
bound
sub
(bad)
xor
scas
rol
jbe
xchg
adc
pushf
jne
lods
ins
nop
inc
push
mov
call
jmp
ja
ror
xchg
push
(bad)
retf
mov
xor
sbb
xor
out
inc
rol
push
js
pop
jnp
lahf
sti
jns
push
push
mov
xchg
mov
cmp
jl
repz
cmp
jb
inc
sub
jb
(bad)
out
scas
leave
jnp
cwde
stos
test
add
pop
jno
and
or
mov
cmp
test
pop
jne
stc
or
stos
outs
aas
stos
jnp
stos
sub
jg
jno
fild
mov
repz
mov
sbb
mul
or
call
inc
ins
fmul
cmps
sub
sahf
push
mov
call
mov
aas
push
cmc
shr
(bad)
push
adc
popa
ins
fdivrp
adc
std
test
hlt
outs
repz
rcr
lea
add
call
fidivr
daa
mov
inc
inc
fwait
(bad)
mov
mov
test
mov
mov
pop
xchg
adc
pop
(bad)
scas
or
inc
psadbw
xor
es
cwde
stos
and
(bad)
arpl
push
fnstenv
fimul
fstp
xchg
xlat
stos
out
out
add
pushf
inc
and
add
sub
dec
mov
iret
(bad)
repz
push
push
xor
dec
xlat
add
jo
pushf
inc
call
aad
int
xchg
inc
cmp
rcr
and
dec
daa
mov
loope
mov
inc
icebp
cmp
and
(bad)
pop
ds
push
ret
(bad)
nop
jmp
pop
sub
nop
bound
jp
jg
es
mov
sub
add
in
sbb
(bad)
push
mov
jae
scas
pop
dec
loopne
xor
rcr
mov
jge
jno
sbb
ins
ins
mov
dec
cmp
inc
lds
xchg
and
pop
mov
mov
popf
movs
jno
add
iret
ins
jmp
pop
out
or
test
cwde
or
loopne
xchg
outs
xor
mov
scas
test
mov
sub
mov
and
or
dec
add
inc
mov
cmp
pop
or
cmps
int
scas
mov
xlat
pop
cmps
pop
adc
pop
jno
dec
adc
push
or
mov
mov
xor
fwait
or
or
dec
fisubr
aaa
(bad)
cwde
aad
out
or
dec
xor
cmp
push
stos
adc
mov
xor
scas
jl
rol
jp
xchg
mov
mov
das
test
pop
or
push
mov
ins
faddp
push
dec
mov
lods
adc
dec
mov
out
scas
mov
cmp
cwde
mov
rep
stos
jnp
sub
pusha
jle
mov
xchg
cmps
cli
popf
imul
pop
inc
(bad)
push
mov
dec
div
in
int3
shr
adc
cmps
aas
jle
xor
fld
into
push
not
outs
je
mov
fcmovnbe
rcr
mov
jmp
pop
add
sbb
or
ss
jns
call
fcomp
and
es
dec
in
push
sbb
imul
sbb
aaa
jmp
pop
mov
sub
cmp
push
popf
retf
xlat
stos
jg
enter
inc
or
sub
lods
fwait
sar
jb
call
stos
sahf
jnp
xor
xor
cmp
jmp
cmp
mov
cmp
mov
push
je
mov
cmp
cmp
(bad)
jmp
ds
jge
les
mov
xchg
aad
retf
ds
fidivr
nop
sub
push
lds
mov
hlt
pop
mov
lea
sub
xor
scas
and
test
fdivr
push
mov
push
loope
dec
mov
jle
and
pusha
mov
fst
pop
jnp
lea
dec
cmp
mov
shl
push
daa
dec
mov
in
in
lea
adc
bound
stos
ds
xlat
call
push
lahf
push
ins
pop
sub
int
xor
jns
and
or
mov
xor
mov
aaa
stos
ss
push
retf
in
xor
les
xchg
loopne
ins
sti
pusha
into
jl
rcl
mov
xor
sbb
(bad)
xor
xchg
inc
dec
inc
or
cwde
dec
jge
cmps
jg
adc
cld
jmpw
shl
sbb
dec
push
repnz
or
inc
ret
jo
retf
xchg
mov
popf
cmc
cld
std
pop
push
mov
push
adc
xchg
push
adc
add
icebp
dec
mov
pshufw
mov
adc
das
add
test
mov
loopne
sti
mov
enter
ret
movs
in
imul
stos
mov
out
xchg
mov
jnp
clc
mov
adc
push
js
test
rcl
loope
test
aam
cdq
gs
and
jo
cmp
test
push
mov
das
push
pop
mul
add
int3
xor
mov
addr16
xor
add
nop
jl
test
push
fwait
js
add
pop
pop
mov
outs
nop
pushf
popf
fnstsw
shl
dec
pop
ret
mov
dec
xlat
or
adc
(bad)
(bad)
jns
pop
xor
jp
movs
cmps
sbb
cs
(bad)
dec
stos
jae
lods
lahf
and
add
mov
inc
loope
add
add
mov
out
scas
in
sub
mov
shr
sub
cwde
sti
inc
ja
frstor
cwde
and
test
cli
or
outs
cmp
sbb
add
mov
adc
mov
retf
or
bound
push
push
and
adc
mov
gs
cwde
into
jo
mov
call
(bad)
fbstp
jge
shl
xchg
cmp
push
push
pop
inc
shl
jecxz
repnz
fnstenv
sbb
or
cmc
fistp
jmp
xor
cmp
xchg
push
loop
and
push
cs
mov
fistp
scas
popf
lea
aaa
cmp
or
stos
mov
es
or
xchg
sub
sbb
or
sub
stos
xchg
jns
xchg
push
mov
jmp
outs
aad
(bad)
push
mov
cwde
cmps
imul
stos
std
out
bound
pop
stc
inc
or
nop
mov
not
scas
xor
sbb
in
nop
inc
ins
cmp
aad
inc
and
mov
imul
push
add
cli
lods
sub
ror
test
popa
or
retf
pop
rol
dec
call
dec
and
push
push
push
stos
pop
mov
dec
pop
shl
or
jb
data16
dec
mov
cs
sbb
in
xchg
inc
xor
mov
js
lock
xor
fwait
mov
test
adc
jne
sbb
mov
inc
sahf
jb
rol
mov
mov
into
mov
xor
fmul
popf
pop
adc
or
test
mov
and
arpl
or
inc
movs
inc
jle
and
(bad)
sbb
test
xchg
in
fisub
sub
aaa
test
xchg
cli
inc
mov
jl
ret
fwait
push
push
cmps
pop
jbe
fwait
pusha
fmul
cmc
push
je
fadd
and
dec
sub
mov
or
bound
(bad)
xchg
loop
bound
fild
hlt
inc
jns
movs
dec
pop
jmp
icebp
jo
hlt
pop
or
retf
test
retf
pop
stc
mov
push
repnz
into
cwde
mov
or
jmp
mov
mov
and
pop
call
ss
adc
push
call
aad
pop
jns
push
in
mov
aaa
cmp
mov
cmps
repnz
call
retf
mov
aaa
xor
in
in
out
cmp
or
push
test
loopne
dec
loopne
push
push
js
js
sahf
mov
iret
jmp
rol
idiv
dec
dec
lds
xor
js
pop
hlt
push
add
mov
test
add
sbb
ja
retf
push
push
dec
cmps
jp
(bad)
repz
jno
test
xchg
xchg
inc
lock
mov
into
fadd
mov
(bad)
pusha
in
lahf
adc
adc
xchg
sahf
mov
lods
mov
dec
icebp
(bad)
mov
popf
push
test
retf
add
mov
xchg
jb
test
mov
ret
inc
ja
jae
(bad)
mov
xchg
sub
mov
add
jge
je
jnp
mov
jp
mul
and
scas
hlt
in
aas
loope
and
sbb
pop
xchg
cmps
pop
lock
jge
fs
xor
clc
rcr
lods
dec
shr
sbb
jae
mov
dec
fwait
jno
mov
jmp
cli
and
in
push
and
dec
push
mov
jno
sbb
out
xchg
push
jmp
inc
sbb
jmp
jp
xchg
fs
aam
ss
lea
mov
fwait
shl
cli
jp
icebp
push
xor
mov
sub
lods
je
enter
jle
mov
mov
(bad)
cmp
cmp
push
mov
(bad)
inc
jge
mov
push
push
push
lods
xchg
aad
mov
retf
call
mov
adc
push
shl
mov
in
rol
xor
mov
pusha
fst
pop
dec
fwait
popa
xchg
xchg
and
mov
stos
sbb
pop
and
pop
inc
push
and
and
dec
pop
sbb
je
xchg
mov
fwait
adc
mov
sub
(bad)
inc
cmp
cmp
pop
fs
ficomp
sti
xor
jb
ins
jl
cmp
sbb
cmps
fnstsw
mov
jb
adc
clc
cwde
enter
loop
cs
(bad)
out
fild
add
jns
mov
rol
mov
fdivr
je
mov
stos
movs
fsub
add
add
in
fsubp
adc
xchg
xor
(bad)
pop
sbb
test
mov
adc
repnz
in
xor
push
repz
dec
iret
mov
ret
xor
cld
add
mov
call
mov
mov
push
aas
jmp
mov
cmps
xchg
rcr
sbb
mov
jg
adc
int3
push
push
ss
lahf
ret
mov
pusha
test
aad
shr
sbb
stos
scas
mov
loop
dec
push
enter
mov
push
sub
pop
dec
scas
repz
clc
cmp
lods
xchg
sti
cs
mov
outs
out
sahf
setbe
pop
jmp
cmp
out
lods
pop
push
aas
popf
fimul
jne
push
mov
stos
mov
sub
xchg
mov
mov
stc
mov
cmc
mov
ficomp
les
adc
or
mov
mov
and
popf
cmp
jmpw
mov
sbb
arpl
jmp
shr
es
inc
jne
and
and
out
cli
push
mov
add
dec
jl
xchg
test
movaps
movs
rol
cmps
out
adc
mov
jl
xor
(bad)
mov
js
push
jl
add
sahf
scas
mov
gs
icebp
mov
cmc
dec
(bad)
push
jecxz
dec
adc
jno
cmp
mov
or
mov
xchg
rcl
cs
hlt
pop
or
cdq
outs
jne
shld
imul
in
sbb
mov
ret
sbb
and
clc
popf
gs
add
push
das
out
push
mov
cmp
(bad)
sub
loop
jns
jl
arpl
int3
in
or
dec
add
inc
dec
add
test
mov
(bad)
test
adc
mov
out
mov
xor
cmps
cwde
out
xor
jmp
push
mov
sbb
loopne
iret
inc
xlat
sbb
push
pop
int
cmp
jae
push
mov
(bad)
repz
xchg
dec
push
push
push
jne
jecxz
dec
push
sub
dec
xlat
add
pop
pusha
mov
cld
mov
in
sahf
dec
cmp
push
sub
pop
pushf
aam
nop
in
xchg
stos
xor
pop
adc
gs
sbb
cmp
fist
xor
stos
xchg
mov
iret
stos
jmp
arpl
daa
punpckldq
sub
les
test
push
cmc
cmp
jle
xlat
mov
and
movs
pop
pop
mov
adc
inc
outs
adc
jo
aad
retf
aam
call
or
je
pop
sbb
mul
hlt
(bad)
add
add
mov
(bad)
xchg
cmp
outs
pop
sbb
fiadd
mov
jp
push
cld
push
cmp
pop
les
xor
hlt
inc
lods
data16
fld
sbb
rcl
adc
push
jne
add
(bad)
outs
ss
push
jle
sbb
jecxz
mov
cld
jnp
ins
push
mov
sub
mov
add
fst
idiv
sub
xchg
das
addr16
ins
ret
xchg
(bad)
cmps
pop
lock
les
ja
inc
push
inc
adc
dec
mov
pop
ja
test
or
adc
or
dec
ja
popa
pop
test
mov
push
test
mov
inc
mov
cmps
aas
xchg
jp
out
mov
popa
dec
pop
lods
xor
cmp
and
mov
ja
mov
sub
clc
cmps
test
ss
mov
call
jg
xor
int3
cmp
mov
ins
jb
xchg
cwde
and
adc
out
(bad)
outs
cwde
and
fcmovne
adc
mov
icebp
retf
mov
mul
lahf
pop
cmp
adc
sbb
cmp
push
add
or
in
and
dec
sub
dec
mov
cmp
or
and
dec
mov
pop
sub
movs
je
les
data16
pusha
js
sub
push
jno
shr
and
inc
sbb
loope
jae
pop
addr16
xor
lahf
aam
adc
imul
sub
fwait
push
pop
mov
test
fst
cmp
jl
inc
add
mov
pop
les
pop
push
and
ret
mov
popa
mov
fild
inc
mov
sub
add
test
loop
mov
cwde
test
push
iret
jmp
int
loope
and
pop
rcr
das
xchg
stos
add
jnp
arpl
dec
jmp
cmps
fdivrp
test
cli
cmp
clc
sub
stc
pushf
je
fnstenv
cmp
push
dec
pop
pop
int
xchg
adc
out
mov
inc
mov
jns
imul
mov
stos
inc
mov
popf
mov
mov
outs
mov
mov
bound
daa
push
scas
mov
movs
cwde
adc
jo
sbb
clc
sbb
pop
mov
cmp
sbb
in
dec
mov
ret
push
mov
jecxz
ins
ret
in
mov
inc
inc
push
xchg
into
and
call
add
fcomp
xchg
mov
sbb
jne
jno
inc
and
and
jecxz
ss
movs
inc
push
pushf
dec
jp
enter
pusha
mov
je
mov
mov
fisub
jge
push
outs
cld
icebp
pusha
dec
test
repnz
xor
xchg
les
jne
mov
jae
sub
(bad)
and
movs
fdiv
xchg
imul
lods
jmp
mov
(bad)
dec
add
or
or
xchg
add
and
sbb
cmp
adc
push
xchg
xor
mov
cmps
in
pop
dec
jmp
add
and
push
movs
jge
out
call
call
shr
sub
int
cmc
mov
retf
and
fwait
jmp
mov
adc
and
into
cmp
xlat
aas
scas
sbb
int3
xchg
pusha
xchg
pop
outs
mov
in
retf
cmps
xchg
mov
jbe
mov
pop
jp
mov
and
sbb
arpl
cmp
mov
iret
fisttp
inc
jmp
push
mov
cmp
in
je
xor
fadd
jmp
mov
push
push
clc
push
pop
int3
and
mov
nop
ret
sub
shr
jmp
sub
cmp
xchg
cmp
hlt
jmp
fist
xchg
push
push
bound
lods
jb
popw
xchg
mov
push
out
fwait
sbb
data16
adc
ds
jl
bnd
push
dec
mov
sbb
movs
cdq
in
clc
pop
cmp
aaa
outs
dec
dec
mov
sub
push
cld
nop
rcr
(bad)
mov
(bad)
mov
and
push
or
out
mov
aam
out
retf
xchg
push
pop
and
and
dec
and
lods
push
mov
aaa
xchg
dec
adc
cwde
xor
ss
scas
scas
xor
mul
adc
sbb
nop
daa
lods
mov
sub
xchg
mov
out
or
pop
lea
mov
lods
sub
xchg
jmp
cwde
sub
cwde
or
jae
cwde
int
int
or
ss
mov
mov
in
xor
fs
adc
jnp
enter
push
xor
loope
xchg
adc
adc
and
jmp
mov
lods
xor
nop
leave
lods
mov
dec
mov
cmps
and
or
dec
cmp
nop
cmc
aad
jb
mov
pop
imul
sbb
in
xchg
jne
xchg
push
inc
xchg
adc
jns
xor
sbb
jl
int
pop
mov
aas
and
popa
pinsrw
(bad)
daa
popf
add
or
add
add
ja
test
mov
mov
(bad)
gs
fsubr
jge
(bad)
xlat
mov
mov
sub
std
movs
cmp
dec
jmp
and
jg
mov
sub
mov
int
mul
test
sbb
mov
add
pop
cmp
cmp
sti
movs
push
sbb
mov
sti
and
jmp
cmp
add
je
xchg
inc
adc
jno
xchg
pusha
pushf
std
adc
jmp
cmp
inc
xchg
retf
mov
adc
push
xchg
aaa
lahf
inc
jecxz
add
data16
mov
xchg
test
cmps
mov
out
sub
jno
inc
adc
shl
repnz
or
mov
loop
pop
xchg
mov
out
add
xor
pop
aaa
push
and
clc
sub
mov
inc
jl
pop
jmp
add
xchg
cmp
ret
stos
shl
sbb
retf
mov
xor
mov
lods
mov
cdq
std
mov
jb
push
jb
cmps
xor
jle
cmp
cld
sub
cmps
stos
bound
popa
test
enter
cld
dec
rcr
callw
jl
cld
cwde
adc
stos
pop
inc
fnstsw
or
cmp
inc
pop
and
cwde
or
mov
mov
in
aas
xchg
and
sti
rcr
pop
mov
js
push
cmp
and
dec
arpl
js
icebp
fstp
jae
scas
cmp
imul
ror
lock
stc
xor
push
xchg
cmp
ret
cmc
xor
pop
xor
sbb
jns
xchg
sub
imul
pop
loopne
sahf
rcr
inc
and
dec
dec
dec
rol
ins
fdivrp
pop
rcl
xchg
mov
ss
inc
out
push
inc
popa
adc
adc
xor
inc
sbb
xor
(bad)
out
test
sbb
push
mov
fs
mov
idiv
adc
fnsave
je
xlat
sub
(bad)
cmp
xchg
fcmovnb
pusha
ins
inc
mov
hlt
and
shr
add
push
mov
pop
mov
adc
push
not
jnp
adc
sub
add
mov
cmp
sub
push
jnp
addr16
(bad)
ins
and
sub
test
mov
inc
addr16
leave
stos
jne
sub
out
adc
mov
mov
push
pop
ficom
outs
add
jecxz
add
push
mov
sub
fsub
int
into
cmp
push
pop
int
pushf
inc
cwde
jl
das
pushf
leave
mov
jmp
call
or
cmp
jb
xchg
je
push
ss
and
mov
shl
in
push
inc
cld
xor
aam
pop
jle
(bad)
aam
pop
jp
hlt
pop
nop
cmp
shl
sahf
inc
int3
pop
test
inc
and
sub
mov
sbb
ret
sti
pop
scas
mov
or
push
ja
fisttp
(bad)
cmovo
and
xor
es
jbe
or
je
dec
mov
call
popf
sbb
out
pop
adc
gs
js
or
dec
popa
aad
sbb
xchg
aaa
push
(bad)
mov
test
cmp
jnp
mov
sar
push
call
dec
pop
mov
or
in
dec
idiv
retf
push
call
scas
ja
mov
js
and
pop
xchg
aad
out
test
das
loop
lea
cmp
test
fsub
sbb
je
stc
in
inc
mov
shr
jp
and
pop
mov
jbe
jg
fst
mov
xchg
dec
imul
sub
fild
std
dec
movs
call
cmp
in
imul
retf
add
rcl
cmp
jmp
or
in
push
sti
mov
pop
adc
mov
cwde
in
adc
es
push
in
cmp
(bad)
shl
mov
add
dec
mov
lods
stos
fisttp
mov
jl
and
cmp
sbb
mov
in
add
ss
sub
xor
pop
mov
test
pop
int
loopne
sub
rol
mov
cmp
inc
jne
gs
sbb
pop
(bad)
(bad)
iret
lock
xlat
fcomp
lock
and
out
test
lods
sbb
xchg
fldcw
mov
sbb
dec
jnp
stos
scas
sub
push
xor
mov
add
lods
scas
cmp
imul
fs
push
popf
js
rcr
je
mov
fmul
xor
adc
pop
scas
sti
sub
jmp
push
enter
push
dec
push
in
loopne
cmps
xchg
push
sub
jl
(bad)
mov
sbb
push
test
inc
push
mov
dec
iret
into
xchg
xchg
cmp
add
xor
shr
pop
dec
ins
imul
fisubr
and
mov
or
shl
dec
cmps
fst
mov
call
mov
mov
sub
xchg
call
sbb
ffreep
mov
mov
pop
ins
retf
(bad)
mov
jne
dec
mov
inc
fwait
or
std
pop
(bad)
mov
dec
add
sub
or
cdq
into
lahf
adc
jg
sbb
mov
xchg
in
test
outs
inc
mov
cmp
mov
or
xchg
cmp
call
adc
pop
xlat
add
fs
loopne
xchg
pop
or
mov
(bad)
je
(bad)
and
inc
sar
adc
fadd
in
dec
xor
dec
jmp
pop
jmp
or
mov
lea
mov
out
and
push
ss
repz
cmp
xor
jns
pushf
mov
mov
sbb
sti
push
push
and
or
fwait
sub
mov
outs
mov
or
clc
xchg
pop
in
lahf
mov
daa
shl
jo
(bad)
shl
test
sbb
xchg
in
inc
stc
test
lds
add
mov
jmp
lock
cwde
cmp
and
pop
scas
mov
addr16
lea
mov
sbb
shl
pop
sbb
xchg
adc
mov
or
pop
leave
aad
dec
psrld
in
sub
or
dec
dec
lods
push
repz
adc
xor
jg
loop
xchg
inc
adc
sub
aas
pop
nop
sahf
dec
rol
and
packuswb
mov
sub
aam
leave
cmp
and
out
test
loop
pop
mov
push
add
lds
push
add
inc
in
jbe
jne
leave
cdq
retf
std
cmp
loope
jae
pop
push
mov
inc
test
imul
jmp
frstor
repnz
add
or
cmps
pop
lods
movs
gs
test
retf
fdiv
mov
or
sbb
scas
dec
dec
cwde
aas
mov
pushf
sub
loopne
sbb
or
sahf
(bad)
cmp
stos
xor
jnp
nop
rol
test
mov
inc
cmp
mov
iret
mov
mov
push
fidiv
jnp
dec
jp
inc
mov
push
sbb
mov
push
mov
retf
mov
test
push
addr16
cdq
pop
rcr
ins
popf
std
sbb
div
test
adc
(bad)
loop
push
push
cmps
ficom
sub
jbe
push
hlt
mov
scas
sub
js
neg
imul
pop
push
(bad)
hlt
fsub
jbe
jle
leave
fs
or
mov
das
sub
in
shr
inc
mov
xchg
lods
aam
test
pop
(bad)
jg
add
clc
ret
call
push
enter
movs
es
cmp
push
je
inc
(bad)
push
add
inc
mov
xor
jle
icebp
test
popf
fwait
mov
adc
bound
cwde
into
(bad)
imul
mov
cmp
jg
stos
retf
cmp
jae
mov
aad
inc
mov
ret
mov
xor
sbb
mov
outs
inc
and
jbe
jle
lock
pop
xchg
mov
sub
xchg
pop
in
sub
mov
mov
jg
mov
stos
adc
pop
sbb
in
std
cdq
dec
dec
inc
sub
repnz
call
fcomp
pop
jnp
lods
jmp
call
xchg
sahf
lahf
ror
ins
add
dec
jge
jmp
mov
fcomp
xor
(bad)
mov
cmp
dec
scas
pop
xchg
dec
push
sti
daa
pop
add
fs
xchg
(bad)
aas
in
mov
adc
into
mov
mov
test
jbe
scas
push
test
jge
ja
ret
in
rcl
mov
retf
mov
cli
in
jmp
mov
pop
outs
ds
out
mov
std
sub
add
or
push
add
dec
sbb
xchg
das
movs
sbb
mov
fsubr
ds
mov
js
push
pushf
ins
mov
sbb
int3
or
push
retf
ins
sbb
cdq
cmp
dec
pop
pop
test
dec
mov
ret
cmps
or
pop
cmp
jg
movs
sub
adc
and
cli
dec
mov
and
mov
lds
retf
xor
cmp
push
fs
mov
pop
sbb
(bad)
cdq
hlt
jb
int3
ror
add
sub
sbb
sub
jmp
in
pop
sub
aas
repnz
imul
mov
(bad)
inc
adc
cmp
push
shl
and
pop
mov
ss
repnz
dec
add
pop
mov
mov
inc
add
xchg
and
sar
fcmovnb
pop
cmp
or
sub
sahf
dec
push
xor
cmp
ds
jne
(bad)
and
je
(bad)
adc
(bad)
cld
es
lds
cmps
jbe
sub
xor
mov
test
(bad)
sub
test
lock
sti
jl
test
push
call
loope
inc
pop
mov
push
cmp
hlt
or
or
cmp
(bad)
cld
(bad)
mov
cmp
jl
xor
mov
mov
out
vpackuswb
(bad)
cld
adc
movs
xchg
ss
adc
mov
stc
bound
lods
pop
movs
enter
loopne
jae
xchg
pop
rol
inc
nop
(bad)
xchg
sbb
(bad)
fild
fs
jecxz
sbb
popf
jp
pop
movs
popf
xchg
xor
les
sti
push
out
leave
inc
xor
call
int
xor
and
xchg
loope
push
inc
int3
push
jecxz
xor
inc
js
aas
push
sbb
xchg
mov
cld
xchg
test
cdq
retf
jle
pop
or
lods
cwde
mov
add
and
cmps
movs
push
int3
adc
add
sub
jbe
and
sub
frstor
and
or
sbb
pop
mov
lods
(bad)
mov
dec
(bad)
xchg
and
xor
es
mov
in
shr
jp
cmp
movs
jp
jmp
imul
mov
data16
aam
adc
mov
or
mov
int
ds
loopne
and
push
imul
xchg
cmps
js
and
mov
dec
mov
add
dec
adc
(bad)
push
stos
fdivr
mov
clc
ja
pop
pop
cli
cld
ret
call
pop
retf
dec
push
cmp
pop
xchg
xor
push
adc
adc
or
add
mov
push
cmp
mov
inc
add
sub
mov
aam
xor
xor
lock
lods
pop
in
jno
xchg
enter
mov
and
aam
stc
adc
addr16
sub
jmp
into
enter
lahf
clc
and
xor
fcom
sbb
sbb
stos
xchg
adc
retf
sti
retf
lods
out
sub
push
pop
(bad)
push
jb
imul
call
mov
int
out
or
sar
jne
adc
jge
fld
mov
test
cwde
mov
xor
rol
and
arpl
cdq
ss
fimul
cmp
test
and
(bad)
jnp
sub
cmp
dec
mov
sar
jmp
neg
rol
mov
adc
dec
movs
add
imul
cmc
into
bndstx
jecxz
es
lahf
lahf
mov
push
icebp
jbe
in
(bad)
aaa
pop
inc
sub
hlt
push
or
mov
mov
rol
xor
xchg
inc
std
dec
lock
pusha
in
lods
mov
jmp
shl
addr16
mov
pop
(bad)
sar
fcomp
xchg
and
imul
dec
(bad)
sahf
or
jmp
dec
add
xchg
sar
fwait
inc
sar
mov
fwait
inc
mov
mov
cmp
mov
sub
bound
sar
jge
es
iret
or
mov
iret
sub
neg
ret
sub
sbb
jae
sub
fcmovnbe
popa
jmp
inc
movs
xor
lock
xlat
dec
call
pop
mov
add
sub
inc
scas
int
mov
mov
repnz
add
rcl
outs
mov
int3
xor
stos
stos
dec
jnp
mov
leave
cmp
retf
mov
jae
ds
(bad)
adc
out
or
in
dec
shr
enter
mov
sbb
scas
and
lds
pop
call
inc
out
daa
jno
jmp
push
lahf
add
pusha
mov
jge
int3
and
in
push
pop
xor
xchg
sbb
mov
aad
loop
mov
test
cmps
xchg
test
pop
icebp
repnz
cwde
sub
test
gs
or
fidivr
loop
xchg
push
ins
popf
push
fmul
xchg
jns
cmp
or
shr
pop
sub
inc
mov
pop
cmps
sar
xor
mov
jbe
sub
sbb
inc
movs
in
pushf
or
xchg
and
jno
imul
cmc
out
sub
push
popf
sub
add
mov
out
mov
add
push
inc
(bad)
aad
jl
mov
jne
sbb
movs
fsub
stos
jmp
sbb
xlat
outs
fsub
in
mov
cmp
jo
outs
loopne
stos
jge
mov
outs
jne
call
push
dec
rcl
adc
in
imul
and
cmp
adc
add
pusha
shr
jg
cmp
in
repz
inc
bound
je
inc
arpl
xor
sbb
pop
cdq
inc
adc
hlt
jae
sbb
or
imul
xchg
cmp
loope
pusha
ss
movs
shl
fst
or
aaa
sub
push
mov
cmp
outs
inc
fs
mov
adc
fsub
(bad)
sar
lea
mov
cmps
cli
cmp
mov
jle
pop
xchg
clc
jb
je
cmp
in
cmp
fs
jo
popf
xchg
outs
clc
jns
ret
fwait
pop
ins
jge
push
stos
(bad)
xchg
inc
jecxz
in
dec
cmp
js
out
retf
es
fs
hlt
mov
dec
arpl
fs
dec
pop
test
ds
fiadd
xchg
aam
push
mov
in
data16
cdq
mov
sti
push
jae
jnp
cmp
xor
push
or
out
adc
xchg
sub
call
lock
xlat
sbb
cs
stos
mov
adc
std
inc
outs
sbb
call
pop
aas
xchg
cwde
pusha
out
sub
movs
movs
sbb
fsqrt
pop
adc
div
jg
pop
jne
mov
jnp
gs
mov
ins
bound
loop
xchg
cmp
adc
mov
stc
xor
cdq
mov
cdq
lea
xchg
(bad)
repnz
mov
dec
mov
in
pop
in
bound
fld
fucomp
outs
lods
arpl
out
xchg
mov
jb
mov
imul
int
cmp
or
jmp
xor
inc
das
ffree
pop
imul
dec
cld
or
jno
es
cld
mov
repz
xchg
push
aad
hlt
jb
push
and
ja
retf
test
rcl
adc
ret
sub
mov
(bad)
aam
push
pop
ins
(bad)
push
jns
ret
add
or
(bad)
jo
js
jmp
mov
mov
and
mov
test
inc
lahf
cwde
dec
add
cmp
scas
adc
or
or
pop
push
lds
dec
aaa
int
out
cmp
pop
daa
out
leave
rol
(bad)
push
imul
and
lock
outs
mov
jecxz
jg
imul
dec
fld
dec
dec
add
mov
inc
je
call
xchg
cmp
fcmovnbe
jo
sti
(bad)
loopne
mov
dec
or
call
and
jmp
pop
repz
je
pop
pop
sub
xchg
clc
test
mov
pop
sbb
sbb
icebp
dec
jbe
popf
mov
adc
push
mov
sub
out
repz
xor
into
mov
cmps
mov
sub
cli
out
cdq
out
mov
dec
adc
cmp
into
or
sub
xchg
adc
loopne
push
push
xchg
popa
ret
(bad)
gs
add
repz
xchg
les
or
jae
imul
(bad)
lahf
mov
loopne
dec
pusha
into
cmc
mov
addr16
test
mov
jmp
mov
fnstenv
sbb
dec
popa
jns
mov
cli
call
ret
test
adc
push
jp
mov
jnp
sub
fwait
jno
ins
in
or
dec
jge
push
add
pop
and
xchg
xor
adc
pop
mov
mov
or
stc
aad
xchg
pop
mov
sbb
shl
lods
xor
jle
push
pushf
xchg
jle
push
xchg
rcl
les
pop
jmp
pop
fdivr
dec
mov
and
cmc
test
dec
or
and
xor
adc
add
dec
data16
inc
mov
pop
xchg
or
mov
sbb
push
pop
xchg
frstor
loop
lods
pop
add
daa
mov
cmc
not
pop
add
mov
rol
cmp
mov
dec
sbb
repz
scas
add
int3
mov
jp
leave
xchg
adc
cs
iret
cwde
js
inc
loope
loope
push
sbb
lock
ret
push
mul
aas
ret
xor
out
xlat
jmp
inc
cmp
jmp
sub
and
cmp
sub
and
jmp
jb
ds
xchg
shl
fisub
ss
push
lahf
dec
sahf
pop
cmp
pop
mov
adc
inc
cmp
ds
fld
inc
pop
sbb
arpl
push
cmp
out
ficomp
sub
sbb
rcl
(bad)
fcomp
pop
jge
xchg
out
int3
xor
mov
xchg
lea
and
mov
fwait
ins
outs
hlt
scas
pushf
cmps
adc
mov
sbb
shl
int3
jmp
hlt
je
xor
fwait
and
cmps
sbb
xchg
mov
stos
stos
add
scas
mov
and
sbb
aas
mov
daa
sbb
es
sub
inc
push
ins
mov
shr
outs
or
push
lods
cmp
xchg
repz
cmps
xor
mov
mul
xchg
inc
and
inc
inc
and
xchg
rcl
xor
push
and
fist
mov
in
or
(bad)
mov
mov
push
cwde
fnstcw
inc
repnz
mov
cld
or
dec
mov
int
stos
cld
mov
push
nop
sbb
fs
sahf
sbb
and
imul
xchg
xchg
shr
adc
cmp
stos
and
jmp
sahf
nop
cdq
cmp
dec
or
dec
aad
add
rcr
sub
adc
mov
arpl
jnp
popf
sar
js
sbb
frstor
sub
push
sub
cmp
imul
loop
aad
(bad)
sbb
jns
cs
mov
cli
xor
adc
imul
dec
jo
call
out
aam
add
sbb
gs
jae
into
pop
mov
call
(bad)
pop
cmp
and
mov
sub
sbb
(bad)
dec
hlt
mov
or
stc
cmps
jmp
inc
loopne
push
aad
xor
(bad)
pop
pop
jno
and
fsub
aad
push
xor
pop
jnp
cmp
xlat
fs
(bad)
sahf
or
out
sbb
and
ret
test
clc
cmp
xchg
test
scas
into
sub
sub
cs
repz
mov
pop
out
mov
cwde
cmp
cmp
jae
cmc
out
loope
jecxz
add
pop
cmp
pop
enter
shl
pop
ins
les
nop
inc
rol
jmp
jne
cld
(bad)
mov
aas
cmps
jo
out
stos
out
xchg
ins
cmps
push
sbb
ins
hlt
mov
mov
sub
xchg
popf
adc
xchg
mov
or
(bad)
cld
in
sar
clc
test
pop
in
aam
add
dec
xchg
jno
mov
sub
(bad)
in
lds
lahf
xor
(bad)
nop
sar
sub
out
or
mov
adc
(bad)
clc
push
xchg
cmp
loop
adc
aad
inc
cmc
mov
cdq
mov
xor
lahf
int
cmp
sbb
add
and
and
xchg
out
aas
(bad)
jg
gs
pop
mov
pop
movs
inc
lods
cld
add
std
xchg
xor
pusha
dec
test
les
add
je
out
lods
pop
ret
or
aas
lock
test
cmp
(bad)
push
(bad)
xor
into
jge
cmp
mov
ds
popf
lock
out
add
dec
push
call
xchg
sbb
push
pop
cmps
or
pop
pop
test
jmp
jb
cmp
shl
leave
lahf
addr16
adc
push
fs
push
pop
and
xor
xchg
(bad)
out
nop
sub
dec
mov
inc
pop
jp
push
push
cmp
jp
xchg
gs
xor
enter
loope
std
out
mov
xchg
and
(bad)
xor
jbe
in
dec
pushf
jae
test
stc
movs
sahf
xchg
ret
mov
cmc
popa
mov
fisub
jae
or
xor
ret
hlt
adc
and
xor
cmp
fsubr
mov
sbb
cld
pop
mov
call
iret
jnp
inc
dec
lds
mov
bound
dec
mov
nop
imul
in
fld
add
cmp
dec
add
mov
in
stos
mov
mov
fcomp
retf
out
pop
cmp
arpl
dec
mov
or
not
iret
(bad)
ja
call
fxch
or
out
cmps
and
and
test
in
lods
ffreep
popf
les
inc
and
lea
jmp
inc
mul
jmp
xchg
mov
sbb
cmp
pushf
dec
retf
dec
add
clc
jle
or
push
sti
nop
adc
sub
in
(bad)
gs
pop
into
jge
leave
(bad)
ret
jmp
xchg
inc
push
rcr
fst
loope
or
jmp
fsub
or
xbegin
arpl
cmp
mov
movs
pop
lods
loop
ds
jne
pusha
jp
xchg
cmp
jl
inc
stos
out
nop
adc
and
ds
adc
sbb
mov
lds
std
cmp
movs
inc
and
loop
scas
push
repz
inc
sub
sbb
js
in
pop
nop
loope
call
icebp
push
out
mov
mul
mov
call
je
mov
mov
popf
js
mov
mov
jae
jb
loope
aad
repz
inc
pop
loopne
mov
add
fnsave
std
or
bnd
loopne
xchg
push
dec
rcl
and
sub
jl
jecxz
scas
mov
jmp
sub
iret
or
pop
pop
scas
jne
mov
mov
ins
dec
sahf
test
nop
jge
xor
push
mov
stos
lea
sbb
movs
sub
(bad)
jp
retf
and
movs
xchg
movups
adc
test
in
fdivr
jmp
mov
adc
add
addr16
jmp
sub
aaa
push
rcr
mov
mov
add
add
ins
xchg
sti
arpl
sbb
jl
xchg
sbb
xchg
enter
imul
inc
fadd
cld
imul
xchg
mov
hlt
xchg
lods
ds
js
mov
mov
lock
dec
mov
cmps
pop
jg
fcomp
pop
cmc
(bad)
xchg
jg
push
neg
aad
xor
stos
and
xor
xor
pop
xor
pop
dec
sbb
and
push
pusha
mov
std
test
or
and
mov
cmps
xor
dec
xchg
xchg
lea
add
lods
xor
das
fist
jg
pop
int
(bad)
push
push
dec
jecxz
popa
jno
fxch
add
fs
scas
aaa
(bad)
xchg
ins
(bad)
xlat
rcl
xor
mul
(bad)
lods
aaa
test
xchg
test
cdq
ret
int
cli
jp
mov
inc
jns
push
pop
bound
mov
nop
movs
icebp
xchg
sub
movs
dec
outs
inc
pop
pop
es
inc
or
xor
rcr
add
iret
sar
xchg
or
xchg
ja
push
int
jp
test
pop
cs
cmp
dec
push
imul
push
xchg
jae
push
add
dec
out
aad
jecxz
xor
ret
sti
neg
mov
mov
jns
mov
enter
mov
mov
and
mov
call
adc
push
popa
add
movs
xor
rcr
and
out
test
movs
stos
inc
add
mov
jno
jae
add
mov
mov
mov
rcl
aas
cmp
inc
pusha
ror
rcr
sbb
pusha
xor
sub
pop
mov
jbe
cmp
(bad)
test
arpl
imul
add
inc
jmp
inc
dec
fdivr
mov
in
popa
jo
push
fs
out
xchg
xor
shl
(bad)
adc
out
in
movs
pusha
fwait
mov
outs
push
sbb
add
jbe
sbb
shl
into
cli
icebp
sbb
fwait
imul
or
add
aas
jp
dec
dec
mov
xor
repz
jbe
inc
push
push
push
push
sar
scas
push
cmp
(bad)
xchg
popf
inc
ret
mov
shl
xor
scas
imul
jmp
icebp
movs
adc
jnp
xor
(bad)
jg
cs
daa
(bad)
dec
in
inc
call
xchg
or
fnstsw
cmp
pop
jns
into
ss
push
or
sub
(bad)
cdq
mov
sbb
push
ret
and
sbb
test
add
lea
add
arpl
call
arpl
lods
sbb
jecxz
bound
pop
lods
cmc
repnz
pusha
xchg
imul
mov
icebp
mov
(bad)
and
loop
jbe
ss
jle
or
test
pop
cmp
aas
mov
mov
mov
in
aaa
xor
mov
pop
pop
xchg
xor
int3
pop
mov
add
jno
sub
push
push
and
les
add
aam
jnp
dec
les
cwde
pop
adc
add
push
es
hlt
sbb
push
jmp
xlat
enter
cmp
jecxz
outs
clc
dec
outs
repnz
cmc
fild
sub
fsub
pop
cdq
fdivr
cmp
add
aam
jecxz
fisub
sahf
mov
fst
cld
sub
(bad)
push
mov
jmp
inc
add
cmp
push
in
dec
xor
mov
call
cld
fidiv
aad
jl
push
push
mov
out
xchg
dec
mov
push
mov
mov
enter
dec
mov
cmp
sar
repz
out
iretw
cli
mov
adc
sbb
dec
xchg
or
fmul
and
ins
mov
push
fsubr
cmp
shl
pop
add
cld
mov
jmp
sbb
dec
push
mov
or
xchg
test
enter
adc
test
inc
sbb
mov
and
sbb
cmp
pop
out
call
push
loopne
test
(bad)
cli
mov
data16
mov
push
jmp
ror
lds
jb
je
scas
mov
ja
push
mov
xchg
add
pop
xchg
adc
mov
xchg
cmp
jo
xor
vmread
xchg
jne
je
inc
mov
sbb
adc
adc
imul
leave
push
mov
fs
cmp
cmp
sbb
nop
sar
int3
xor
aaa
jns
jne
pop
stc
adc
jmp
adc
rcr
and
sbb
sar
mov
fwait
mov
sahf
scas
cmp
xor
aaa
jecxz
aam
enter
pop
xchg
jne
fadd
mov
and
rcl
cmp
(bad)
aas
cmps
pushf
clc
aad
sbb
add
xor
addr16
push
sub
out
retf
add
pop
xor
xchg
inc
cmp
inc
jno
lods
test
cwde
shr
fcom
mov
test
jl
popf
inc
cmp
push
jge
and
inc
addr16
mov
jg
aaa
adc
xchg
popf
add
in
jnp
inc
pop
lods
mov
or
cmp
in
retf
es
jns
push
push
mov
xor
sub
ret
xchg
push
xchg
mov
cmp
push
xchg
cmps
test
pop
pop
ret
cmp
mov
call
sahf
ins
and
out
xchg
cmp
mov
(bad)
stos
(bad)
adc
adc
jmp
out
add
(bad)
pop
and
les
dec
jns
sub
lea
xchg
and
jb
call
or
and
in
xchg
call
das
adc
mov
and
adc
mov
add
xchg
xchg
jle
and
cmp
les
ja
push
mov
push
mov
hlt
stos
xchg
and
pushf
adc
inc
icebp
inc
mov
pop
sub
add
sbb
cmps
not
xchg
ins
and
std
cmp
outs
mov
push
les
pop
ins
push
dec
push
xor
xchg
xchg
jl
inc
call
cmp
repnz
xchg
push
ins
mov
neg
mov
adc
pusha
or
adc
mov
mov
fimul
xchg
cmp
mov
xor
mov
cmp
stos
jb
out
mov
push
call
add
jg
dec
fcomp
out
dec
dec
cmps
lods
cmps
(bad)
mov
imul
data16
and
or
fbstp
jge
adc
push
test
adc
add
std
call
shr
inc
xchg
fdiv
daa
int3
(bad)
in
mov
mov
mov
movs
fisttp
or
inc
jecxz
bndstx
inc
js
jns
mov
xchg
retf
loopne
mov
lds
imul
retf
pop
xor
push
pusha
cmp
xchg
into
xchg
xchg
and
push
das
fist
and
cwde
push
cmp
inc
or
test
test
iret
movs
dec
idiv
jae
push
pusha
mov
iret
loop
repz
pop
pop
gs
xchg
enter
mov
fild
lds
sub
jmp
pop
mov
mov
sub
xchg
push
lods
lea
and
mov
adc
xchg
jmp
xor
jno
sahf
push
ret
sub
enter
iret
fidivr
out
push
(bad)
iret
dec
jns
sub
sahf
call
xchg
xchg
jle
cmp
pop
ss
pop
sbb
or
cmp
lock
cli
das
aad
stos
mov
stos
dec
jbe
rol
bswap
shl
sbb
fwait
xor
addr16
lods
rcr
pop
adc
dec
(bad)
sub
js
pusha
push
add
call
gs
add
mov
ja
pop
retf
imul
mov
shr
shl
inc
jmp
pusha
rcr
push
xor
pop
sbb
aad
stc
sub
sub
int3
push
adc
jns
and
pop
cmp
(bad)
jnp
mov
jg
cli
fs
inc
mov
mov
and
fcom
sub
and
dec
mov
xor
inc
inc
retf
clc
out
lahf
out
fiadd
fimul
movs
(bad)
out
inc
js
pop
sahf
adc
shl
xchg
ds
out
aas
push
addr16
cmp
test
aas
dec
fimul
pop
sub
jnp
daa
mov
jnp
mul
addr16
push
pop
gs
sbb
cmp
jb
iret
pop
hlt
add
add
popa
push
inc
mov
sbb
(bad)
mov
stos
mov
xchg
fnsave
fisubr
push
dec
mov
xchg
aas
sbb
jo
pop
ret
iret
and
jle
inc
adc
mov
fstp
add
sub
jp
adc
and
cmp
dec
xor
aad
mov
and
int3
pop
test
xchg
mov
ss
dec
test
mov
popf
cld
lods
ret
push
ror
mov
jecxz
and
cli
fucom
and
adc
enter
sbb
nop
pop
push
dec
lahf
or
in
cmpps
neg
fistp
outs
xor
les
dec
(bad)
es
cwde
xchg
data16
retf
xchg
in
test
out
outs
daa
call
push
(bad)
and
pop
ins
mov
call
call
call
(bad)
loop
aas
bound
mov
fbstp
and
fdiv
test
xchg
cmp
jb
push
pushf
dec
ja
xchg
sbb
cli
rcr
dec
xchg
in
stos
sub
stos
or
cmp
or
dec
jg
push
ja
jbe
loopne
jmp
out
push
pop
aam
cmp
mov
popa
pop
ret
mov
sub
lods
ins
add
xchg
cmp
sbb
push
cmp
lea
sub
cmp
inc
pop
repnz
call
std
(bad)
sbb
mov
repnz
pop
clc
cld
push
jno
fldcw
mov
sbb
dec
xor
mov
cmc
pop
aas
mov
mov
inc
(bad)
enter
ins
retf
sub
ds
iret
aaa
sub
mov
aaa
sti
out
jns
je
xor
jns
xchg
pop
out
cs
pusha
retf
(bad)
cmp
dec
(bad)
push
out
icebp
pop
and
(bad)
shl
ror
mov
test
stos
add
xor
fdiv
push
sub
mov
das
imul
push
cmc
out
push
mov
xlat
xchg
fbstp
pop
scas
xor
or
mov
nop
adc
cmps
pop
repz
dec
and
jp
aam
cmp
cmp
stc
cld
xchg
xchg
jne
or
add
retf
jnp
adc
test
dec
sub
mov
call
(bad)
sbb
cwde
hlt
add
xor
dec
movs
cmc
jp
sbb
xchg
mov
mov
inc
mov
cmps
(bad)
cmp
mov
movs
retf
push
xor
or
sbb
mov
mov
sbb
cmps
call
ja
inc
pop
mov
jbe
inc
mov
movs
sub
add
(bad)
cmp
into
pop
pop
mov
and
mov
in
adc
xor
cmc
sbb
mov
jl
or
aaa
mov
(bad)
(bad)
inc
cmps
pop
(bad)
into
movs
dec
inc
ss
or
mov
inc
pop
sti
clc
cmp
add
jl
xchg
xor
lahf
pushf
ins
mov
test
mov
into
sub
cmp
add
daa
pop
aam
pop
jge
xor
aam
(bad)
xchg
addr16
nop
sbb
stos
dec
pop
xchg
test
jp
cmp
and
pushf
mov
lods
cmp
sub
dec
lds
dec
sar
cs
ins
mov
ror
call
mov
outs
xchg
adc
fstp
jbe
test
jb
and
fprem1
test
ds
mov
cmp
jne
and
push
sub
jge
enter
jl
pusha
icebp
cli
push
cmps
jle
(bad)
hlt
clc
aad
xlat
fs
gs
sbb
jns
out
xchg
xor
outs
xlat
mov
push
or
xor
fwait
ret
fidivr
xchg
sub
jno
sbb
adc
mov
enter
std
mov
out
ds
push
xchg
and
loop
dec
jo
stc
fdivr
mov
jle
outs
dec
mov
adc
addr16
add
movs
inc
inc
jo
inc
stc
dec
and
js
mov
mov
cmp
jns
mov
jmp
bound
inc
sub
mov
call
xchg
or
js
mov
repz
popf
enter
sbb
fwait
push
data16
cld
nop
mov
fs
sbb
xchg
xchg
jo
(bad)
shl
push
lds
mov
retf
std
xchg
or
add
dec
pop
push
push
jge
mov
call
ds
dec
or
rcr
loop
stos
lahf
xchg
jle
movs
or
sub
or
scas
add
jae
push
fisttp
daa
sbb
jno
or
loopne
std
mov
pop
and
sar
jnp
test
and
push
pop
sub
(bad)
mov
hlt
sbb
dec
mov
js
xor
into
xchg
inc
fisubr
fisub
push
jo
fldcw
cmp
jle
cmp
inc
mov
fidivr
add
jb
add
daa
es
imul
mov
retf
(bad)
push
add
cwd
mov
mov
dec
ss
repz
inc
pop
(bad)
mov
mov
lds
push
cmp
add
ret
mov
daa
cs
pop
scas
cmc
cmp
xchg
pop
rcr
out
push
and
fsubr
jle
daa
xchg
add
(bad)
pusha
xchg
mov
lock
mov
dec
je
cmp
int
mov
dec
in
call
lds
xlat
mov
ror
xchg
sbb
iret
adc
mov
lods
inc
or
and
call
add
pusha
jg
test
mov
popf
ret
mov
sbb
js
cmc
aaa
push
push
xchg
xor
mov
mov
jmp
xor
jmp
pop
mov
outs
mov
daa
push
add
int
pcmpeqw
sub
cld
xchg
sar
mov
jge
mov
adc
xchg
cmc
or
or
sbb
int3
inc
and
ds
xchg
jp
jecxz
push
ret
cmp
and
(bad)
fdiv
push
sbb
xor
inc
int
sub
imul
xor
mov
xchg
sub
push
jo
(bad)
jae
mov
pop
or
xor
mov
rcl
cmps
ss
add
test
rcl
in
into
xchg
push
in
fld
and
xchg
jmp
arpl
jecxz
adc
mov
or
xchg
sti
ret
int
dec
jns
pop
pop
pop
mov
dec
(bad)
cli
or
in
test
cmp
pop
jo
repz
lock
push
stos
scas
lahf
mov
sub
cli
scas
ror
int
add
int
jl
mov
fwait
mov
cmp
loop
mov
sub
lea
jmp
or
jmp
lods
mov
fsubr
mov
xchg
es
test
aam
lock
pusha
mov
xchg
or
sbb
das
sbb
dec
jp
sti
or
push
pop
rol
loope
fst
push
mov
es
xor
sahf
sub
aam
xor
or
loopne
mov
ja
movs
or
sub
outs
and
or
dec
xlat
js
cmp
mul
(bad)
xor
inc
or
add
push
mov
add
in
sub
mov
shl
stos
jmp
popa
aaa
pop
mov
je
frstor
push
mov
fwait
cmp
mov
or
ins
fiadd
shl
lahf
sbb
xor
xor
stc
rol
jl
outs
xchg
push
jle
push
mov
sbb
jle
pop
js
adc
pop
adc
fisubr
out
jmp
fld
out
cmc
das
lea
mov
mov
xchg
dec
aad
icebp
pop
push
outs
sahf
xor
adc
inc
push
cmp
cs
jbe
aas
push
mov
mov
shr
sbb
in
(bad)
pop
adc
fwait
or
cmp
sub
daa
hlt
cdq
dec
jle
aas
mov
jecxz
jle
stos
pop
lahf
mov
les
xor
loope
push
add
mov
or
dec
int3
ret
add
jbe
lahf
fs
cmp
add
or
inc
cmps
ret
je
bound
sub
fisttp
rep
pushf
out
cs
pop
in
cmp
mov
popf
imul
fbld
inc
fwait
mov
pop
and
xchg
dec
and
test
cmp
rcr
xor
cli
push
mov
nop
lock
push
xchg
push
aaa
jbe
or
cdq
jg
pop
mov
imul
jle
or
adc
sbb
sbb
imul
(bad)
stos
sub
ja
sub
test
scas
pushf
and
sub
scas
jl
arpl
jbe
mov
xlat
xchg
add
lods
mov
hlt
scas
(bad)
leave
cmp
iret
(bad)
and
cld
jne
cmp
push
les
clc
aam
sbb
jecxz
outs
stos
xchg
ror
outs
xchg
or
add
std
or
xor
ret
cmp
mul
pop
ror
hlt
jns
adc
pop
cmp
sbb
clc
stos
sahf
mov
fbstp
jmp
mov
inc
(bad)
outs
imul
lea
sbb
add
fisub
fs
cwde
or
cmp
jb
inc
jg
out
mov
add
ret
jne
(bad)
icebp
sbb
test
mov
sub
cmc
push
xor
sbb
mov
repz
pop
loop
jo
adc
retf
adc
mov
lahf
fwait
jb
adc
outs
inc
sbb
mov
push
outs
sub
jp
arpl
cli
adc
sub
cmps
or
push
sbb
fsubrp
sbb
xchg
jno
jbe
imul
and
(bad)
out
call
cmp
aas
cs
and
dec
adc
ja
(bad)
sbb
xor
push
dec
jmp
push
xlat
lea
cs
jae
xchg
adc
sub
jnp
xchg
ror
jl
fwait
push
lock
mov
(bad)
dec
jnp
jmp
push
test
xchg
pop
dec
dec
and
pop
jno
or
push
lahf
dec
or
scas
push
jno
(bad)
icebp
sub
pushf
mov
into
jns
arpl
cmp
ins
jl
imul
mov
test
cmp
mov
int3
or
mov
outs
jl
div
(bad)
jecxz
hlt
mov
enter
nop
retf
test
mov
xchg
in
repnz
mov
jae
or
fwait
in
xor
es
jb
sub
or
sub
dec
inc
rcr
leave
xchg
sbb
xchg
mov
iret
gs
and
adc
into
(bad)
cmp
push
mov
mov
imul
mov
sar
jp
inc
(bad)
rcl
(bad)
sbb
int3
dec
shl
jmp
clc
add
icebp
inc
pop
addr16
xor
mov
mov
inc
test
sub
aam
xor
xchg
xchg
mov
dec
add
in
not
bound
shr
icebp
xor
mov
jg
sbb
xor
cmp
mov
sbb
push
xchg
cmp
(bad)
and
in
fmul
inc
and
jb
inc
xlat
xchg
xchg
xchg
loopne
push
or
and
in
dec
es
out
ins
call
jp
pop
aas
neg
jge
lock
clc
mov
cli
jp
inc
(bad)
fld
scas
add
cs
xor
jne
imul
in
pusha
scas
push
push
rcr
fwait
rcl
inc
std
fstp
cs
out
cmp
xchg
fimul
stos
iret
dec
lock
mov
cmp
mov
(bad)
into
mov
ins
sbb
cmp
mov
jp
push
adc
int3
sti
xor
inc
ins
dec
sbb
jle
fwait
repz
sbb
jecxz
mov
xchg
fisub
xchg
xchg
pop
jecxz
pop
hlt
mul
xor
int
xor
mov
cmp
call
add
clc
stos
jne
mov
pop
xchg
mov
sbb
sti
outs
cli
mov
and
or
ror
loope
ins
mov
push
ret
cld
cwde
mov
repnz
xlat
xchg
or
outs
daa
sub
lds
cdq
cmp
icebp
sbb
aas
add
js
inc
sbb
sbb
ss
mov
or
sbb
jns
repz
cmp
lock
mov
add
sub
and
cmp
sbb
sbb
sbb
icebp
and
mov
cmp
mov
xor
inc
add
daa
sbb
int
mov
call
mov
cwde
jo
pop
mov
push
and
idiv
sub
pusha
imul
xchg
inc
cmp
ds
loope
cmp
sbb
xchg
push
sub
push
mov
pop
call
(bad)
xchg
inc
mov
push
sub
jnp
jne
into
xor
sub
mov
mov
or
clc
and
xlat
mov
dec
xchg
daa
test
fmul
dec
movs
daa
push
pop
push
mov
dec
js
(bad)
(bad)
jle
and
hlt
dec
out
test
xchg
inc
inc
jge
(bad)
push
out
jmp
add
imul
mov
pop
jbe
fild
not
sub
inc
sub
cdq
shr
pop
sahf
retf
add
or
(bad)
hlt
add
cld
shr
jl
sbb
push
jne
sahf
outs
xchg
lods
inc
outs
inc
and
pop
pushw
jle
cmc
(bad)
in
xor
popa
mov
cmp
pusha
pop
(bad)
dec
pop
mov
mov
cmp
lea
repnz
test
call
or
mov
arpl
js
pop
js
mov
push
xchg
adc
jg
jnp
lods
jb
loope
pop
(bad)
adc
ret
pop
mov
cmp
cld
(bad)
sbb
test
cmp
push
(bad)
xor
mov
outs
stc
retf
ins
dec
or
movs
jmp
add
call
cmp
cwde
hlt
mov
push
inc
mov
shl
and
out
cmps
loope
frstor
mov
pop
pop
(bad)
out
jge
inc
test
sti
repnz
repnz
pop
rcl
out
scas
data16
cmp
sbb
(bad)
mov
ins
std
int3
jno
sbb
aad
pop
jnp
mov
xlat
pop
mov
dec
or
inc
cwde
es
(bad)
mov
inc
shl
push
mov
mov
xchg
mov
ins
inc
bound
mov
aaa
rcl
std
lds
sub
(bad)
fldenv
mov
loopne
out
xchg
cmp
xchg
mov
daa
push
jecxz
fwait
pop
sbb
sub
data16
fmulp
mov
call
in
sbb
loop
test
mov
(bad)
pushf
hlt
push
ins
mov
push
xchg
shr
xchg
cmp
xchg
and
xor
xor
addr16
ficom
outs
xchg
imul
cmps
fiadd
push
pop
jl
scas
test
dec
test
ja
stos
fild
and
std
sbb
jo
sbb
mov
jge
add
out
rol
pop
dec
push
into
xchg
mov
in
sub
xchg
jmp
(bad)
hlt
add
dec
into
add
cmp
mov
adc
inc
mov
in
jb
jnp
movs
cmc
adc
jmp
mov
aad
lods
cmps
(bad)
cmp
pop
xor
push
cs
out
stc
arpl
dec
pusha
xor
pop
test
add
(bad)
jl
xor
inc
adc
ror
or
shl
dec
std
sbb
ja
cmp
or
call
lock
add
fld
mov
push
lea
in
cmp
cmp
pop
adc
sti
rcr
and
es
cdq
xor
inc
push
cmp
sub
jbe
or
mov
cwde
push
mov
js
push
jns
jp
mov
sub
out
fcmove
pop
inc
ja
cmc
adc
sti
pop
mov
sub
bound
cmp
nop
daa
aas
and
sti
retf
mov
adc
mov
add
loopne
cwde
mov
jns
or
sub
adc
fucomp
iret
lahf
dec
push
or
adc
pop
xchg
(bad)
ret
int
outs
test
add
outs
stos
aaa
jle
jp
leave
shl
sbb
jecxz
cdq
fs
(bad)
jmp
sahf
div
adc
xchg
addr16
jl
dec
lahf
rol
mov
xbegin
cmps
in
loopne
data16
leave
ins
push
fiadd
push
sub
mov
xchg
and
jne
push
stc
xor
and
repnz
xor
mov
scas
cmp
fistp
cmp
or
jne
or
cmp
dec
cld
std
mov
imul
mov
xor
inc
fiadd
inc
mov
scas
stc
push
mov
jb
fild
mov
popa
popa
and
sub
data16
add
dec
xor
xor
scas
aas
clc
es
push
add
jge
mov
gs
js
cmp
jb
fmul
cmp
dec
shr
xchg
cli
out
jecxz
test
mov
mov
mov
jbe
inc
call
loopne
or
lea
dec
xchg
(bad)
iret
sbb
jns
dec
rcl
mov
fnclex
adc
test
pushf
xchg
jl
mov
push
aad
outs
pop
js
test
scas
ret
add
(bad)
sub
push
inc
shl
xchg
scas
sahf
aam
mov
inc
xchg
in
retf
xor
or
daa
mov
push
(bad)
or
dec
stc
or
sub
push
push
push
in
push
dec
pop
shl
sbb
pop
adc
push
std
fisttp
test
gs
pop
xor
jnp
out
push
jmp
or
repz
mov
add
push
iret
adc
cmp
cwde
jecxz
xchg
popa
out
jecxz
xchg
pop
int
xor
xor
mov
jns
push
fmul
xchg
inc
je
pop
in
cmp
sbb
mov
xchg
outs
into
icebp
or
fwait
or
movs
sar
in
sahf
mov
(bad)
in
ret
push
inc
xchg
retf
pop
ret
call
fst
imul
cmp
cli
adc
popf
cld
retf
cdq
push
cmp
and
mov
mov
jbe
cmp
bound
jmp
xor
xlat
xlat
fwait
loop
jne
push
es
adc
pushf
sbb
sar
ret
(bad)
cmps
mov
mov
sub
(bad)
int3
mov
movs
xor
sahf
ret
fisttp
cmc
loopne
out
or
xchg
js
jp
(bad)
lods
pop
sub
(bad)
cmp
test
dec
adc
pop
dec
or
push
(bad)
sti
pop
and
ret
in
enter
adc
test
or
inc
mov
jne
scas
(bad)
cmp
aaa
jb
loope
pop
lock
dec
inc
pop
fdivr
scas
(bad)
enter
xchg
jo
scas
(bad)
les
xchg
or
pop
or
movs
retf
dec
inc
sbb
int3
shl
cmp
loop
dec
pop
ret
cmps
push
ja
aaa
loopne
je
mov
cmc
test
cmps
or
xchg
mov
sub
pop
popa
and
mov
repnz
pmuludq
push
imul
jmp
xor
retf
and
inc
fistp
sbb
jb
(bad)
arpl
ja
mov
jns
les
mov
retf
mov
faddp
jo
jnp
adc
sbb
inc
mov
imul
ins
cmp
rcl
or
nop
mov
inc
div
or
jne
and
and
js
mov
jo
cli
adc
dec
repz
les
es
push
sub
repnz
or
in
in
sbb
push
pop
mov
aas
mov
arpl
retf
jb
pop
test
push
into
shl
rol
push
movs
test
(bad)
pop
xchg
sbb
repz
push
cmp
pop
std
(bad)
int
xchg
pop
shr
aas
pop
push
lahf
rol
sahf
push
pop
sub
or
and
inc
les
ret
ss
inc
in
lds
jmp
sbb
xor
adc
push
mov
mov
leave
repz
aam
std
test
popf
mov
out
jb
mov
fiadd
ja
xchg
push
inc
icebp
js
out
cmp
mov
add
mov
stos
clc
mov
jo
in
mov
stos
mov
ds
or
and
dec
into
retf
and
sti
add
xchg
inc
mov
push
add
imul
sbb
cmp
inc
adc
jge
and
fld
ins
xchg
lds
dec
pop
add
xor
std
and
in
das
pop
push
(bad)
mov
ficomp
lea
cs
repz
retf
lds
xor
add
cmp
mov
or
cwde
pop
jg
pop
push
jo
gs
xor
sub
mov
or
cmp
adc
jmp
jp
add
sbb
xchg
fidivr
jp
xchg
xor
pop
dec
jnp
ror
repnz
mov
jo
repz
mov
pop
retf
xchg
sbb
mov
push
dec
(bad)
jo
mov
cmp
mov
inc
imul
lea
and
sbb
enter
movs
call
pop
mov
mov
stc
shl
ins
daa
pop
mov
js
sbb
(bad)
xor
add
ins
inc
sub
mov
(bad)
push
lea
push
lock
add
add
or
xchg
xor
int
(bad)
add
les
cmp
imul
inc
xchg
fisub
dec
add
mov
frstor
mov
or
mov
imul
push
rcr
sbb
mov
es
mov
into
sbb
sar
movs
adc
stc
or
daa
dec
aad
sti
sub
dec
mov
jno
ins
mov
inc
mov
add
pop
and
mov
cmp
mov
mov
and
sub
and
fild
gs
loop
add
rcr
cmp
iret
pop
icebp
fcmovnbe
sub
dec
(bad)
mov
iret
(bad)
push
mov
shr
ret
pop
(bad)
and
mov
sahf
xor
lock
lock
and
dec
les
inc
psubb
and
in
jle
mov
and
iret
out
and
adc
sbb
(bad)
push
xor
push
aam
outs
popf
data16
mov
int
ds
neg
add
dec
movs
addr16
mov
jp
pop
push
sub
aas
fld
push
inc
pop
push
inc
jmp
dec
data16
jmp
dec
dec
add
xor
test
popa
adc
in
sbb
(bad)
call
push
add
sbb
sbb
std
das
stos
aas
dec
lahf
loop
mov
fdivr
outs
cmp
sub
jp
aas
sub
pop
push
inc
stos
in
loopne
cwde
mov
dec
and
cwde
sbb
or
inc
adc
mov
push
mov
mov
push
test
and
push
pop
or
outs
xchg
mov
xchg
out
imul
mov
sbb
std
int3
jle
cmp
(bad)
mov
cmp
aas
scas
xchg
stos
dec
inc
sub
ins
jae
mov
dec
retf
adc
mov
imul
pop
(bad)
cld
sub
jmp
test
dec
ds
neg
out
xchg
sub
cmc
fmul
dec
cmp
test
mov
out
pop
scas
cmp
cmp
or
and
int3
outs
mov
push
sbb
call
hlt
inc
std
shl
fs
fnstsw
test
push
das
into
lea
repnz
in
in
mov
stos
aam
test
jmp
xor
and
fdiv
jg
pop
push
sbb
popa
movs
push
or
xor
mov
add
fs
test
mov
mov
push
pop
mov
xor
ds
xchg
pop
leave
mov
and
cmps
cmp
push
dec
jns
data16
fimul
inc
xchg
add
int3
push
(bad)
push
dec
das
adc
sar
ins
adc
in
outs
aaa
xchg
inc
daa
cmps
push
sub
les
push
jno
leave
bound
cld
and
xor
mov
test
pushf
mov
ins
imul
mov
or
push
mov
test
lods
mov
fwait
cmp
lock
mov
xchg
cmp
dec
rol
pusha
xchg
mov
sbb
cdq
sbb
adc
test
adc
in
pop
mov
sub
inc
mov
dec
xchg
out
mov
call
sti
in
js
aad
jmp
inc
(bad)
xor
call
out
push
ss
add
inc
out
movs
add
rcl
js
movs
fisubr
or
sbb
pop
mov
pop
jp
mov
and
fs
jecxz
stos
mov
dec
mov
jnp
mov
rcr
push
(bad)
jnp
jp
ret
pop
out
jge
add
jle
sub
xchg
(bad)
in
pop
movs
call
call
stos
adc
stc
cmp
std
and
xor
lock
cmp
jo
mov
inc
push
pop
loope
jge
jecxz
and
daa
pop
jnp
inc
fimul
cwde
(bad)
sub
mov
ins
(bad)
push
repz
dec
jg
lods
xor
test
cmp
xlat
push
push
cmps
sub
cmp
pop
pop
jno
test
cli
jno
int
mov
pop
pop
stos
cmp
pop
cmps
mov
inc
sub
(bad)
push
push
mov
imul
mov
xor
icebp
jp
jne
dec
ret
sahf
jae
pop
adc
xor
jne
in
and
jae
mov
or
cli
std
out
mov
inc
cmp
in
mov
sbb
fdiv
test
out
mov
stc
adc
les
rcr
clc
mov
je
adc
pop
adc
arpl
dec
mov
scas
retf
cmps
jno
xchg
pop
add
pop
cs
xor
xchg
and
xlat
push
push
int
xor
ficomp
add
aad
(bad)
adc
outs
test
cmp
xchg
daa
fs
test
xchg
push
arpl
adc
adc
sub
(bad)
loop
mov
std
cwde
mov
dec
mov
mov
mov
fiadd
xchg
inc
rcr
sub
or
mov
(bad)
and
and
stos
sub
adc
xchg
pop
(bad)
pop
aad
dec
sbb
sbb
sbb
bound
sub
div
sti
cwde
xor
push
lods
xor
xchg
not
sbb
cmp
movs
mov
sbb
push
cli
and
mov
gs
in
or
imul
xchg
int3
adc
mov
lea
fcomp
fwait
push
clc
arpl
popf
inc
push
fsubr
xchg
dec
rcr
and
or
sbb
mov
push
xlat
or
out
and
push
and
xor
push
(bad)
es
add
in
mov
ror
call
or
repz
jb
push
dec
and
jl
mov
push
adc
xchg
xchg
js
gs
inc
dec
movs
or
bsf
xor
outs
mov
jne
pop
xchg
xor
pop
jnp
inc
inc
dec
loopne
das
jo
iret
(bad)
sub
lds
inc
mov
frstor
push
loop
dec
repz
sti
stc
mov
or
adc
mov
arpl
cs
mov
fwait
add
ins
ja
sti
jl
cmc
sar
shl
cli
test
lea
push
std
xchg
popf
jb
and
and
je
or
inc
(bad)
neg
pop
inc
(bad)
out
mov
jge
mov
mov
xor
pop
jmp
adc
xor
repnz
cmp
pop
mul
cld
daa
adc
dec
sub
bound
test
jmp
stos
or
xchg
cmp
jl
jl
je
fld
outs
lock
mov
mov
jmp
pop
fwait
cmc
shr
sbb
adc
inc
pop
lods
add
mov
and
jmp
mov
dec
ss
stc
xor
xchg
sub
lods
jp
inc
(bad)
jg
inc
into
cmp
pop
movs
jecxz
cwde
sub
cmp
xchg
dec
pop
(bad)
pop
sub
leave
cmps
inc
pop
or
mov
cs
pop
or
outs
cmp
pop
inc
outs
fcomp
push
ds
and
fisubr
int
push
cmp
rcl
cmp
fisttp
sar
mov
inc
jno
push
in
outs
pop
ret
popf
mov
mov
mov
fwait
mov
jbe
leave
aad
scas
and
enter
pop
mov
fmul
lods
mov
jge
out
aad
xchg
out
sahf
rcl
or
dec
fidiv
lds
call
adc
jge
xchg
push
mov
push
dec
push
push
daa
shl
addr16
fs
and
or
sbb
inc
jno
les
cmc
out
or
jl
adc
mov
add
cdq
cld
cmp
scas
mov
mov
sbb
jmp
or
jmp
mov
add
inc
stos
dec
mov
xchg
fnstenv
sub
out
vroundsd
cmc
adc
pusha
jo
ins
aaa
pop
lock
mov
inc
push
clc
iret
fbld
nop
sub
sub
add
fsubr
jne
js
inc
xchg
xor
adc
push
pop
ins
mov
jmp
push
xor
test
mul
pop
xor
push
movs
dec
adc
mov
xchg
add
push
pop
movs
mov
adc
jae
pushf
mov
mov
stos
test
mov
xor
dec
movs
push
add
mov
hlt
mov
and
in
(bad)
rep
inc
imul
sbb
mov
cmps
shl
add
dec
jmp
sub
fiadd
pop
pop
mov
sub
mov
out
ror
addr16
xchg
and
and
cdq
pusha
test
data16
sar
ins
ret
jmp
dec
xchg
inc
ret
xor
out
stos
sbb
out
cld
sbb
sbb
add
loope
jmp
dec
aam
mov
adc
retf
cmp
cld
sbb
les
fcmovbe
aaa
mov
jo
test
enter
cmps
mov
xchg
loop
and
xchg
shr
jg
scas
aaa
ins
fcomp
cmp
enter
cs
ja
or
imul
inc
dec
push
pop
xchg
out
inc
sbb
jecxz
into
or
cmc
jg
mov
push
sbb
dec
mov
add
jecxz
test
jg
xchg
jno
movs
push
fisttp
push
fistp
shl
adc
push
fiadd
in
test
test
les
loop
int3
arpl
outs
cld
fsubp
jo
push
dec
stos
xchg
cmp
rcr
les
imul
enter
cmc
dec
cmc
xchg
comiss
xor
movs
lods
in
sti
and
cmp
lock
cmp
sub
fcmovnbe
aad
les
add
sbb
cmp
div
stos
mov
mov
adc
jbe
lods
jecxz
retf
inc
lock
movs
leave
test
mov
push
inc
push
fiadd
mov
pop
mov
pop
or
lock
add
dec
push
pop
ror
sbb
xchg
and
ja
test
add
pop
aas
pop
out
out
pop
loopne
cdq
inc
push
std
pop
fdiv
lea
sbb
sub
lea
stc
xchg
push
outs
test
loopne
push
jp
imul
fcomi
jle
cmps
inc
(bad)
ficomp
mov
jmp
(bad)
cmps
cwde
movs
and
mov
in
adc
hlt
mov
inc
(bad)
imul
cmovno
(bad)
cmp
jae
call
rcl
repnz
fmul
adc
loop
in
add
fsub
xor
push
scas
jo
sub
add
ss
call
pop
scas
nop
fcom
pop
sahf
xlat
std
hlt
hlt
cmps
fmul
and
clc
cmp
into
sub
cld
and
push
and
ds
jmp
lods
jo
xchg
jp
ss
mov
push
dec
push
and
cmp
push
pop
jns
mov
ja
fistp
cs
(bad)
adc
ss
dec
push
inc
cmp
sub
mov
jl
push
pcmpgtw
imul
xor
mov
retf
sbb
outs
sbb
(bad)
sub
lea
xchg
mov
loop
inc
cmp
stos
cmp
ins
popf
dec
xor
movs
pop
fwait
cmps
sbb
call
inc
push
push
jge
(bad)
pusha
aam
iret
retf
mov
ins
stos
call
ror
mov
mov
pop
rol
mov
fs
sub
jbe
xor
jmp
pushf
mov
xchg
pushf
stc
loope
into
xchg
fwait
inc
dec
sub
and
or
imul
cwde
into
aam
pop
gs
push
jno
mov
dec
sbb
loopne
in
in
adc
cmp
out
cmp
cmps
clc
mov
pop
je
add
add
ins
mov
xor
sbb
and
xchg
ret
inc
jbe
(bad)
(bad)
cmp
add
jg
push
xor
cwde
push
dec
xchg
aas
pop
test
or
or
inc
xchg
loopne
(bad)
xor
pusha
and
sahf
ret
fidivr
adc
fmul
rcr
and
add
push
mov
dec
cmp
pushf
and
int
xchg
jp
ret
test
jecxz
pop
call
aaa
jno
push
stos
shr
xor
les
enter
add
enter
mov
add
sub
stos
hlt
aaa
cli
mov
lahf
out
xchg
or
imul
jno
push
push
test
pushf
outs
or
inc
into
gs
dec
push
cmp
outs
rcl
fisttp
fcomi
mov
mov
pop
loop
sub
cmp
or
fiadd
and
pop
fadd
scas
out
cmp
ins
jno
jno
test
mov
(bad)
jmp
xor
and
fdiv
xchg
outs
and
mov
movs
xor
push
mov
fidivr
dec
jge
jge
inc
mov
das
adc
sbb
add
add
add
ja
cmps
jae
xchg
inc
and
pop
push
aam
fs
mov
inc
pop
jns
popf
push
test
jmp
repz
hlt
ds
push
xor
ret
mov
cmps
or
dec
call
mov
fucom
mov
int
jno
test
mov
movs
pop
cwde
pop
mov
movs
push
fwait
addr16
xchg
dec
sti
jmp
xchg
mov
xor
test
shl
ror
ficom
and
dec
ja
dec
lock
gs
lods
clc
and
inc
int
pop
ror
shr
jne
into
jmp
out
adc
loop
pop
ror
ret
fstp
movs
test
popa
or
push
add
push
mov
mov
inc
sub
jns
mov
mov
ins
aam
mov
add
ficom
jno
push
sti
inc
ror
jbe
jnp
dec
movs
loopne
je
shr
adc
mov
je
rol
pusha
push
gs
call
loopne
das
popf
out
or
jno
loopne
mov
mov
push
push
out
cmp
aas
mov
daa
inc
(bad)
xchg
and
shl
dec
sar
sbb
jb
push
mov
loope
and
repnz
sbb
call
shl
cmc
jae
loopne
jb
jae
ret
adc
jns
mov
int
push
xchg
xor
sti
mov
repnz
lahf
test
xor
std
sbb
int3
pop
mov
stos
sbb
and
sub
imul
sub
jp
sbb
jno
rcl
add
xchg
aam
xlat
inc
push
cmp
push
jle
pusha
cs
sbb
ds
sub
or
push
dec
loopne
dec
inc
jp
jno
call
nop
imul
cdq
pop
imul
fdiv
adc
push
mov
jo
(bad)
and
xor
pop
lds
icebp
xor
hlt
xlat
add
xchg
cmp
movs
das
in
inc
addr16
popf
or
jmp
or
pop
inc
enter
pop
sbb
pop
and
int
cmp
mov
pop
mov
icebp
sahf
inc
out
dec
je
mov
cdq
push
sub
mov
adc
jge
xor
iret
jmp
outs
sub
xchg
add
loop
leave
mov
sti
inc
in
ss
iret
icebp
cmc
loopne
push
adc
jns
int
jmp
xor
ror
inc
std
sar
shl
dec
fisttp
cmps
(bad)
dec
ror
sub
lods
lods
and
dec
in
adc
mov
cdq
test
test
xor
cmp
data16
das
stos
out
iret
scas
int3
call
dec
pop
movs
push
int3
or
fcmovb
jp
loope
sbb
jl
fsubr
xor
push
retf
push
mov
fld
bound
xchg
inc
dec
cmps
or
and
popa
jbe
push
dec
sar
lds
mov
sub
mov
cli
lods
cmp
xchg
fwait
in
test
add
lahf
jmp
fist
push
jne
scas
push
inc
push
ja
or
adc
pop
fst
call
xchg
or
or
and
lahf
inc
fucomp
mov
adc
sub
or
inc
rcl
movs
push
inc
adc
loopne
cli
aaa
xchg
sbb
repnz
cmp
adc
das
jb
dec
add
jb
or
mov
std
lds
inc
(bad)
cmps
mov
xchg
push
dec
cli
xchg
push
sub
jno
icebp
or
ja
loope
sbb
mov
cwde
mov
lea
dec
push
iret
jns
xchg
test
ss
shr
ds
mov
cmc
mov
jbe
in
rol
call
data16
jb
pop
push
test
add
fld
sbb
lods
retf
sub
or
out
and
xor
rcl
jl
icebp
test
cmp
stc
dec
daa
pop
lods
add
jae
jnp
cs
mov
jbe
fistp
outs
or
call
cmp
jo
pop
into
cld
sbb
cmp
cwde
or
pop
shl
push
jge
push
dec
add
data16
int3
jp
pop
ror
inc
or
retf
mov
mov
das
or
iret
fst
dec
outs
imul
mov
aaa
fwait
or
daa
sahf
or
jmp
dec
pop
ins
mov
mov
pop
outs
cli
shl
jp
mov
jmp
fucom
ins
call
dec
imul
loop
(bad)
rcl
iret
push
pop
xlat
fimul
add
lods
dec
and
xchg
ret
mov
sub
scas
rcr
dec
push
repz
mov
in
and
scas
sbb
and
mov
mov
or
jl
(bad)
jmp
out
jb
mov
aaa
iret
mov
dec
xlat
and
call
inc
xor
ins
inc
sub
push
mov
into
mov
xchg
adc
sbb
dec
xor
jne
sub
cmps
fstp
popf
jae
mov
mov
aam
(bad)
test
not
xchg
sbb
iret
or
pushf
daa
lahf
jle
push
pop
loop
shl
xchg
xlat
imul
jecxz
pop
add
das
jns
sub
(bad)
inc
(bad)
mov
bound
sub
sar
push
shr
fist
and
enter
cmp
push
jae
push
push
add
out
sub
pop
pop
or
inc
mov
int
iret
test
xchg
ins
ffree
dec
js
fwait
mov
mul
jne
mov
xor
pop
and
stos
and
xor
push
in
inc
retf
test
jg
cmps
cmps
sbb
push
mov
fcomp
adc
aas
jne
clc
les
fcom
add
and
push
daa
es
push
pop
pop
int
rcr
ror
je
or
mov
or
mov
jecxz
out
(bad)
enter
jmp
mov
add
in
cdq
frstor
mov
fwait
push
xor
mov
pop
test
pusha
dec
ret
dec
inc
push
pop
iret
jnp
inc
cmc
int3
add
arpl
rol
psubusw
jbe
dec
xor
mov
imul
or
inc
arpl
outs
aas
xor
stos
sbb
lds
lds
retf
ror
sbb
sbb
nop
dec
call
fdiv
add
repz
popa
xchg
iret
ins
dec
scas
sbb
cmp
and
jp
dec
shl
std
test
adc
ss
xchg
cmp
mov
push
rcr
ss
ror
gs
xor
dec
adc
aaa
test
js
add
aad
and
fsubr
and
ror
dec
in
fsub
adc
or
pop
jmp
add
in
scas
and
pop
push
pop
push
mov
hlt
sub
sub
cmp
js
sbb
and
xor
add
or
xchg
fstp
xor
adc
cmp
inc
loop
mov
push
dec
and
dec
push
jmp
jae
sub
(bad)
push
mov
push
dec
shl
stos
mov
ins
or
(bad)
xlat
mov
xchg
dec
fcom
adc
xchg
shl
pop
inc
outs
jae
xor
sti
dec
scas
mov
aam
outs
sub
lds
pop
dec
xchg
and
xchg
dec
pop
pusha
sub
cdq
icebp
mov
dec
sub
jmp
mov
inc
(bad)
ins
loop
jae
mov
adc
lahf
xchg
add
in
icebp
add
add
(bad)
jbe
neg
pusha
dec
lea
fstp
lahf
iret
dec
pop
rcr
mov
out
dec
in
mov
jg
dec
cwde
into
mov
lahf
nop
fisttp
dec
cmps
xor
push
call
and
icebp
pop
lahf
xchg
push
mov
ss
aas
mov
stos
mov
js
push
fs
and
mov
ret
rol
outs
sar
movs
inc
test
and
sbb
sub
sub
seta
div
call
mov
dec
movs
inc
ins
in
rep
addr16
xor
inc
mov
jmp
add
clc
lods
adc
jbe
push
push
xor
xlat
iret
(bad)
gs
dec
shr
imul
shl
lods
fmul
js
cmp
or
push
mov
adc
aam
fnsave
dec
(bad)
jmp
test
bound
fsubr
leave
push
push
mov
push
cli
outs
xchg
bound
dec
cmp
sar
push
or
pop
mov
xor
dec
(bad)
push
mov
lock
push
in
pop
dec
cmp
repnz
adc
push
cmp
sbb
ins
push
sub
iret
push
clc
cdq
xor
mov
leave
fcmovu
daa
push
xrelease
scas
xor
pop
jns
and
stos
stos
js
cmp
dec
pop
sub
(bad)
pop
push
sub
cmps
or
jecxz
adc
jne
adc
je
mov
adc
sbb
mov
or
lods
jne
sahf
mov
pushf
leave
and
test
aam
or
inc
mov
pop
dec
and
out
stc
scas
jmp
shl
jp
jns
jge
pop
xchg
fcomp
imul
aaa
out
(bad)
aad
inc
dec
repz
stos
test
inc
and
and
jle
shl
mov
imul
lds
push
repnz
mov
stos
dec
rcl
bound
xor
or
fwait
cmc
xor
(bad)
lods
jno
aam
es
sti
sub
add
xchg
xor
popa
mov
cwde
add
mov
and
(bad)
repnz
mov
jmp
mov
leave
test
and
xchg
dec
loop
das
arpl
mov
into
mov
push
dec
imul
jmp
dec
gs
xchg
loope
adc
shr
mov
cli
das
dec
lahf
not
sbb
in
jno
addr16
mov
lods
dec
loop
adc
mov
retf
mov
outs
stc
mov
jmp
push
push
cld
popf
jl
retf
out
dec
in
inc
ins
mov
cli
pop
ret
gs
es
xchg
lods
mov
aas
add
fdiv
addr16
ja
retf
test
jmp
mov
jmp
xchg
cmps
mov
aaa
fmul
(bad)
popa
inc
fisub
fidivr
mov
addr16
mov
(bad)
sbb
cmp
ror
sub
pop
mov
xchg
rcr
in
outs
sbb
test
pop
xchg
iret
push
jle
inc
and
mov
inc
or
in
ficom
mov
enter
cmps
les
mov
in
xlat
les
pop
mov
pusha
ss
xlat
push
xlat
mov
(bad)
mov
fwait
in
jmp
ret
mov
into
shl
data16
pop
(bad)
cs
lahf
stos
bnd
int3
pop
fwait
div
mov
test
fadd
pop
popf
mov
sti
ins
imul
lea
int3
push
push
cld
xchg
inc
xlat
or
add
jmp
addr16
mov
fdivr
mov
pop
adc
push
pop
shl
jae
in
lock
sbb
lods
sbb
imul
hlt
pop
push
cmp
add
sysenter
inc
data16
push
xchg
or
jmp
and
inc
call
or
or
lods
inc
sbb
mov
shr
push
js
cmp
repnz
cwde
mov
and
sbb
add
fidiv
imul
test
mov
iret
or
leave
aad
push
lds
outs
mov
mov
in
xchg
dec
shl
inc
fdivr
pop
(bad)
dec
jno
add
daa
movs
cmps
jecxz
mov
mov
ficom
nop
mov
xchg
cmps
stc
div
add
imul
psubusb
cmp
lods
fwait
add
mov
in
push
xchg
mov
jge
cmp
sahf
cmp
push
scas
hlt
or
dec
or
and
div
inc
aam
inc
lock
mov
iret
jge
sub
dec
push
imul
mov
xchg
jnp
sub
call
pop
cmps
jns
or
div
test
mov
sub
cdq
dec
sbb
ins
jge
adc
cmp
test
jle
lods
jge
imul
mov
inc
xor
xchg
call
xor
adc
fcmove
(bad)
mov
adc
imul
add
xor
or
sbb
daa
pop
shr
jge
bound
popa
cli
mov
cmps
hlt
mov
dec
retf
test
fbstp
adc
clc
pop
aas
je
aam
lods
inc
sahf
adc
sbb
pop
push
mov
inc
push
dec
mov
in
jo
adc
fst
mov
mov
jecxz
sub
(bad)
loope
retf
inc
std
push
ins
fcomp
fnstsw
call
pop
idiv
push
pop
jae
mov
push
mov
test
cmp
mov
inc
sbb
xchg
pop
and
dec
not
addr16
or
mov
dec
dec
addr16
xchg
xor
cmp
add
lods
mov
aam
sahf
icebp
mov
adc
scas
jno
pop
repnz
dec
adc
xchg
add
nop
sbb
or
fld
jmp
mov
or
out
xor
cmp
cmp
jg
lock
pop
(bad)
aas
leave
test
pop
iret
mov
addr16
std
add
dec
mov
push
outs
pushf
call
out
jmp
lea
pusha
loop
xor
add
cdq
pop
cmp
dec
xchg
scas
loopne
stos
ret
push
jmp
shr
dec
push
cmp
push
add
bound
sahf
cmp
xor
fbld
dec
push
push
xor
sub
pop
lock
sahf
ja
rcr
add
push
mov
repnz
add
inc
pop
mov
imul
jmp
adc
mov
mov
or
mov
push
movs
and
xor
mov
push
aas
pop
mov
gs
imul
pop
scas
inc
or
jno
fucomip
sub
jl
mov
stos
mov
(bad)
in
mov
adc
daa
push
pop
daa
mov
or
scas
sbb
or
ins
sbb
push
inc
dec
cmp
in
sti
mov
add
popf
xor
shr
ins
sbb
jl
xchg
inc
(bad)
sub
outs
shl
test
sub
inc
shl
lock
shl
idiv
into
sti
jl
daa
or
dec
dec
fbld
clc
adc
and
and
mov
fdivr
ret
sar
inc
cmc
adc
pop
adc
cmp
jae
and
pop
addr16
out
cmc
add
pop
dec
xchg
ficom
lods
stos
js
sbb
cwde
pusha
inc
sbb
push
add
cmps
rcr
std
lea
mov
and
aam
xchg
enter
sub
adc
int
ins
adc
xchg
adc
mov
dec
cli
(bad)
jp
out
jbe
cmp
add
dec
sbb
(bad)
repz
push
cmc
sti
pop
inc
cdq
mov
stc
push
retf
sbb
mov
fdivr
test
enter
sub
cmp
loop
push
mov
adc
mov
jle
xor
dec
ret
jmp
jbe
dec
cmps
call
xor
push
aas
jb
jb
in
mov
or
mov
lods
jle
mul
call
aam
scas
and
cwde
dec
mov
pop
push
cmps
sub
addr16
in
fdivr
xchg
lds
shl
fcomp
retf
rcl
mov
mov
or
push
leave
daa
out
ret
mov
fisubr
push
jno
cmp
jmp
sub
xor
ja
test
xchg
xor
jl
inc
hlt
ds
dec
jae
(bad)
(bad)
out
bound
push
mov
(bad)
nop
adc
stos
xacquire
mov
(bad)
scas
sahf
push
mov
mov
dec
mov
or
cmp
push
pushf
cmp
fimul
mov
fwait
sbb
ret
mov
mov
add
scas
rol
jb
mov
mov
int3
daa
out
dec
fnstenv
xor
push
out
lea
adc
xchg
lods
cmp
add
add
pusha
xchg
sbb
cmc
ins
retf
sub
les
pusha
jne
and
xor
fist
push
(bad)
jl
inc
bound
sub
fcmovnb
fst
add
and
(bad)
xlat
adc
dec
jp
or
daa
sub
xor
xor
sub
and
imul
add
rcl
push
xchg
test
mov
std
test
jno
dec
and
and
test
fsubr
aad
shl
pop
imul
xchg
lock
les
jge
pop
adc
pop
push
dec
in
stc
inc
fstp
js
cmp
dec
mov
rol
xor
ins
xor
sbb
mov
stos
cmps
(bad)
pop
pop
stc
push
stc
sti
pop
push
es
jge
das
(bad)
cld
out
mov
adc
fsub
call
repnz
mov
test
dec
xor
add
jecxz
push
arpl
pop
inc
jo
retf
sbb
mov
dec
and
shl
cli
sub
pop
sub
adc
cmp
scas
sub
pop
pop
stc
ret
mov
out
icebp
pop
push
or
mov
sbb
or
jno
cmp
enter
push
mov
xchg
cmps
xchg
hlt
imul
nop
jbe
in
xor
xchg
scas
imul
inc
pop
push
lds
mov
fucomp
jg
jl
xchg
jno
std
and
adc
dec
cmp
dec
sub
push
xor
or
ins
sub
xchg
test
out
sbb
mov
pushf
fadd
loopne
jmp
push
xchg
mov
(bad)
jge
jmp
mov
nop
add
loope
pop
cmp
cdq
pushf
dec
pusha
cld
mov
(bad)
sub
dec
sub
inc
into
in
mov
xor
out
xchg
scas
jo
(bad)
cmps
test
stc
mov
xchg
sti
dec
xor
fisttp
int
pop
out
mov
xchg
aas
test
sar
xor
lods
push
pusha
(bad)
jae
sub
int
mov
imul
mov
movs
sbb
mov
cld
inc
rol
inc
jb
bound
imul
test
imul
sbb
inc
jmp
and
icebp
sub
push
(bad)
or
rcl
and
xor
js
cmps
pop
adc
jne
imul
jmp
jecxz
hlt
fs
mov
jo
mov
jle
mov
cld
mov
pop
jae
add
jo
addr16
jnp
(bad)
xlat
and
sbb
cmps
mov
out
stc
test
sbb
inc
push
mov
call
jle
jb
jg
(bad)
xchg
mov
mov
movs
inc
push
sti
aam
xor
dec
xor
cld
sub
or
call
cmps
and
idiv
rcr
and
sbb
gs
pushf
lods
scas
fsubr
pop
xchg
or
cs
push
clc
mov
arpl
call
mov
adc
sub
repnz
fdivrp
addr16
jno
shufps
in
and
xor
hlt
xchg
pop
fst
icebp
sbb
cmp
movs
jne
call
fisub
mov
push
out
cmp
mov
loope
cmps
pop
pop
icebp
add
stos
push
pop
push
lea
sub
pop
sub
jbe
xor
xor
outs
pop
gs
jle
icebp
repz
pop
push
push
bound
mov
shr
jb
repz
sbb
inc
out
xor
push
mov
push
jp
(bad)
mov
jl
add
xchg
xor
push
xchg
test
cmp
int3
out
or
jl
mov
adc
cmps
jno
push
push
or
push
loop
mov
arpl
sub
and
mov
imul
fld
das
mov
test
in
ret
dec
push
pop
mov
dec
cdq
mov
in
fwait
jge
or
cmps
lahf
jo
add
pop
iret
(bad)
(bad)
jecxz
jg
inc
stos
mov
repnz
in
inc
push
push
rcl
cwde
ss
jmp
or
lds
jbe
cmps
bound
add
push
ds
rol
push
jns
out
mov
repnz
retf
mov
sub
ins
push
inc
test
shr
ja
mov
mov
xchg
push
mov
jne
lea
(bad)
add
and
inc
shr
xchg
xchg
adc
out
es
xor
mov
ret
repnz
dec
fnstenv
sbb
stc
xlat
movs
dec
xchg
push
imul
or
sar
imul
out
inc
pusha
jmp
xor
pop
jo
inc
sub
or
mov
and
or
jns
adc
cmc
jecxz
pop
xor
lods
push
test
mov
add
or
adc
xor
repnz
mov
push
mov
out
jmp
repz
imul
xchg
(bad)
sbb
punpckhwd
pop
pop
mov
adc
mov
and
sbb
mov
xor
pop
ret
ins
xor
test
cmps
push
outs
loope
adc
inc
inc
ror
jae
call
push
sub
cmc
sbb
xchg
retf
mov
shl
mov
and
mov
cmp
sub
iret
loope
gs
add
fwait
push
nop
(bad)
shl
mov
push
sub
popf
xchg
add
je
les
repnz
jle
fistp
ja
test
lea
push
dec
inc
arpl
sub
loopne
inc
popa
outs
cs
dec
imul
xchg
dec
pusha
cmp
xor
ror
pop
popf
fbld
mov
add
mov
fistp
mov
in
xchg
sub
pop
(bad)
mov
sbb
cmp
mov
movs
jg
aaa
add
mov
jecxz
dec
lea
ss
lods
stc
cmp
fist
dec
add
inc
pushf
mov
scas
jge
inc
js
add
mov
sbb
daa
add
xchg
outs
pushf
mov
popf
retf
repnz
scas
mov
bnd
inc
jnp
mov
add
lea
push
pop
out
push
pop
and
js
stc
fs
mov
mov
mov
call
pushf
call
mov
adc
sub
dec
cmp
jo
and
xchg
ja
pop
inc
add
jecxz
pop
pop
dec
xor
push
adc
enter
xchg
add
fmul
ja
jo
nop
push
sub
repnz
and
stos
stc
lds
rcr
into
sub
jp
std
mov
sub
stos
sbb
pushf
lahf
fcmovnb
cmp
adc
xchg
shl
(bad)
jmp
in
sbb
inc
cmp
jmp
add
sbb
pop
mov
test
cmps
inc
jno
je
icebp
xchg
out
xchg
ja
retf
imul
and
push
ja
jb
cmp
out
adc
shl
xor
mov
add
push
(bad)
push
pop
xchg
out
dec
pushf
add
gs
cwde
(bad)
jmp
inc
lods
and
jp
mov
mov
imul
sbb
jnp
adc
or
add
adc
repz
ret
mov
rcl
pop
outs
outs
shl
cmp
sub
stos
clc
push
xor
lods
pushf
mov
and
ret
or
cmp
fisttp
fs
jno
xchg
shr
lods
enter
icebp
shl
test
lahf
inc
and
icebp
sub
mov
mov
or
sub
cld
adc
div
(bad)
sub
fist
pop
(bad)
jge
jl
add
scas
and
retf
push
push
push
movs
push
ss
jmp
mov
addr16
dec
mov
int3
mov
add
test
pop
ins
push
xchg
jo
jmp
in
scas
mov
add
cmps
fbstp
sbb
xor
jl
popa
mov
xor
sbb
add
mov
jo
jnp
lods
sbb
stc
popf
test
cmp
and
shl
outs
(bad)
mov
gs
ss
mov
sub
mov
sbb
cli
cmp
gs
dec
push
and
cwde
push
jns
xor
fs
xor
push
loope
push
int
cmp
in
adc
daa
xchg
xchg
xor
jnp
add
push
outs
iret
mov
ret
or
rep
les
popf
out
retf
test
fnstcw
repz
ja
pop
mov
push
jne
cmp
lahf
sbb
sub
(bad)
dec
popa
ja
addr16
nop
cwde
cmp
mov
sti
jle
or
loope
lods
mov
mov
xchg
aam
push
retf
fnstenv
ds
jo
mov
sub
test
ja
sub
es
ins
in
lds
enter
push
(bad)
push
adc
jge
retf
out
xchg
jg
sub
int3
sti
aas
(bad)
movs
mov
mov
cmps
hlt
(bad)
sar
dec
dec
aas
sar
fmul
call
push
loope
add
inc
std
outs
push
dec
mov
pop
mov
add
sub
icebp
pop
in
mov
into
push
fidivr
movs
sub
mov
test
fistp
shl
or
das
cld
add
xchg
add
addr16
mov
mov
sbb
mov
lods
pushfw
push
mov
in
push
hlt
jmp
adc
inc
daa
sbb
cld
lock
loop
(bad)
out
not
push
push
dec
push
mov
dec
pop
pop
hlt
or
jmp
fstp
fild
repnz
push
push
mov
call
xor
and
mov
cs
mov
into
mov
add
pop
in
pop
or
cmps
inc
jmp
les
xor
jnp
lods
sub
retf
jmp
or
jp
sbb
rcr
fcomp
bound
push
jnp
fwait
add
and
in
ret
jl
nop
lods
mov
xchg
fcmovu
mov
popf
mov
cmp
xor
xchg
out
inc
or
and
nop
cmps
ret
xor
shl
xchg
mov
movs
mov
or
push
jnp
pop
aaa
fs
xor
jmp
sbb
mov
ins
pop
fsubr
popa
adc
mov
cdq
cmp
jmp
pop
(bad)
or
hlt
mov
jnp
sub
pop
jle
pop
(bad)
lock
test
lods
dec
mov
call
mov
ja
xchg
cmovae
pop
jge
stc
or
retf
jnp
sbb
stc
pop
mul
dec
mov
les
into
mov
in
fsub
xchg
adc
mov
stc
out
pop
sbb
add
mov
mov
pop
stos
test
test
push
rcr
mov
loop
xor
inc
jg
ja
aam
or
or
sbb
xchg
xor
stc
cmp
pop
cmp
shr
mov
les
sti
gs
pop
(bad)
data16
add
shl
mov
pop
inc
repz
imul
jg
mov
and
jno
mov
test
sub
sbb
jae
sbb
call
pushf
pop
dec
jne
sbb
sub
jg
sub
retf
inc
pop
push
aaa
cmp
inc
fwait
mov
movs
jmp
out
ins
repnz
cmps
das
mov
mov
jl
mov
pop
cmps
pop
mov
pushf
adc
mov
jb
ins
pop
jp
mov
dec
jmp
aas
mov
or
rcr
dec
xchg
and
jns
rcl
in
popf
mov
cs
pop
push
hlt
sub
xchg
leave
ds
dec
enter
xchg
adc
shl
add
aaa
out
test
jmp
xchg
imul
dec
sub
sahf
xor
out
pop
mov
mov
neg
jmp
dec
rcl
jmp
adc
mov
xchg
into
cmps
xchg
jge
popf
or
fst
pusha
fsubr
cld
and
fwait
inc
mov
hlt
ins
(bad)
mov
mov
dec
mov
enter
xor
xor
add
jmp
aas
mov
jmp
mov
mov
push
jl
ficomp
mov
test
push
sub
outs
icebp
cmps
pop
mov
fmul
xor
xchg
xchg
xchg
retf
push
popa
xor
mov
mov
pop
cld
mov
je
or
and
loop
mov
sbb
mov
jae
dec
xor
enter
int
imul
ins
pushf
and
sbb
aam
in
xchg
xchg
sbb
add
and
daa
xchg
mov
mov
lea
jne
cmp
idiv
in
jmp
sbb
(bad)
xor
mov
mul
mov
push
mov
inc
mov
mov
dec
jae
xchg
ds
in
xchg
pop
aam
imul
jl
loope
jp
out
and
int3
pop
clc
stos
jo
pusha
mov
mov
jae
retf
(bad)
dec
sbb
xor
aad
test
movs
pushf
fdivr
jecxz
aas
push
xchg
std
mov
jns
adc
in
jmp
pop
shl
sub
xor
shr
jge
sub
mov
imul
push
cmc
mov
jb
shr
add
or
mov
fdivr
dec
cmps
pusha
pop
test
sub
inc
hlt
ficomp
aad
adc
in
int
jnp
xor
pop
cmp
dec
jp
clc
je
ror
mov
xchg
add
jecxz
leave
cmps
jp
js
push
jle
xchg
dec
and
push
dec
cmps
stos
call
fs
sbb
ret
inc
adc
xor
js
test
fdiv
sbb
sar
pop
add
sbb
or
(bad)
(bad)
jo
pop
push
cmp
fs
jp
inc
adc
addr16
imul
(bad)
ins
lea
push
test
mov
and
es
fild
(bad)
jmp
ret
inc
mov
icebp
push
cld
pop
lds
jno
xchg
pop
ret
sbb
or
and
add
shl
add
jb
sub
fcmovu
cwde
icebp
movs
add
add
add
mov
pop
dec
retf
sbb
xchg
add
pop
mov
dec
les
inc
xchg
inc
movs
mov
outs
adc
in
xchg
xor
xchg
xchg
cmp
movs
sbb
fisubr
imul
xchg
xlat
imul
les
mov
sahf
pop
dec
into
mov
cdq
lds
dec
dec
aam
fisub
inc
jo
ins
cwde
push
iret
pusha
repnz
inc
xrelease
stos
lahf
lds
cld
push
mov
gs
jne
loope
mov
stc
dec
int
fwait
out
clc
jae
mov
shr
std
out
or
push
popf
aas
mov
jmp
ins
sahf
ja
or
fisub
sbb
out
shl
mov
push
stos
mov
jno
shr
push
cdq
std
retf
test
push
adc
jno
adc
out
jp
outs
xor
mov
icebp
imul
mov
push
adc
call
dec
jmp
lds
dec
xor
je
mov
fist
mov
cs
mov
shl
sbb
push
add
xor
add
dec
into
retf
add
mov
lock
repnz
loope
out
shl
addr16
fimul
or
gs
mov
sub
(bad)
mov
dec
iret
retf
and
and
sbb
cmps
js
xchg
pop
imul
mov
shr
fild
xlat
and
imul
mov
jb
cmp
test
sbb
mov
cld
lods
xchg
add
(bad)
mov
in
adc
mov
daa
sbb
ja
adc
inc
jns
adc
xchg
ss
cmp
inc
clc
cdq
jmp
and
dec
into
or
add
xchg
mov
xchg
pop
or
xor
sbb
std
test
sbb
fs
xchg
test
gs
or
ret
cmp
shr
mov
or
icebp
inc
popf
hlt
popf
cmp
movs
and
lds
push
adc
add
mul
cmc
stc
dec
cmp
scas
mov
inc
mov
lds
retf
dec
aam
pushf
pop
sbb
das
and
into
pop
add
fldcw
leave
lahf
rcl
sub
mov
sub
(bad)
sbb
fwait
pusha
ret
mov
pop
jo
or
pushf
mov
cmp
test
pop
xchg
icebp
repz
cmp
hlt
dec
mov
xchg
popa
inc
jge
test
xchg
les
dec
stos
or
int3
xor
int
nop
imul
pop
sbb
mov
pop
mov
jle
jmp
lock
add
pop
or
mov
cmp
es
jno
mov
dec
push
in
and
int
and
xlat
add
adc
retf
sub
xchg
mov
inc
stc
mov
mov
xor
cmp
xlat
jmp
(bad)
fistp
mov
dec
clc
mov
mov
pop
sbb
sub
mov
loopne
out
or
xchg
xchg
cmc
jmp
pop
lods
dec
xor
mov
in
fcomip
mov
xlat
mov
call
and
sub
cmp
push
sbb
imul
outs
push
repnz
add
test
fidiv
ret
mov
lods
add
jl
or
ror
lock
sbb
cmp
loop
cmps
add
xlat
sub
inc
dec
loopne
imul
add
sbb
cmp
dec
mov
lahf
push
pop
int
inc
add
js
mov
ror
jmp
ror
dec
cmps
idiv
rcr
push
xor
std
vmptrst
daa
fwait
arpl
inc
jbe
add
dec
mov
loope
lods
mov
mov
push
je
iret
sar
fbld
and
xor
shl
test
or
pop
rcl
ds
in
ficomp
xchg
xchg
sub
add
leave
mov
fcom
jl
fcmovu
adc
push
addr16
sbb
pop
out
inc
mov
aam
mov
fcmovnbe
sbb
jae
stos
fcomip
pop
stos
sar
adc
arpl
shl
int3
hlt
test
jns
pop
xchg
or
pop
out
dec
pause
in
dec
repz
enter
xor
mov
stc
lods
inc
adc
cmps
call
cmc
mov
movs
add
shl
mov
push
clc
or
xchg
dec
and
loop
pop
mov
pop
ret
pushf
lea
daa
cdq
ret
xor
mov
dec
jns
jno
lods
in
std
daa
mov
fild
cmp
dec
cmp
hlt
xchg
cmc
out
xor
icebp
inc
and
ds
push
sbb
mov
xor
cmp
mov
in
push
add
test
addr16
pop
and
loop
cmovnp
in
and
and
enter
out
test
(bad)
sahf
cmovp
test
icebp
xor
adc
test
push
ja
sbb
sahf
ss
xor
jecxz
cmp
cmp
mov
sub
cmps
inc
fs
stc
lods
cwde
pop
adc
push
icebp
jle
ds
mov
or
xchg
push
mov
sti
retf
mov
mov
push
fsubr
cs
dec
mov
mov
sahf
les
inc
mov
(bad)
add
xor
mov
frndint
shl
push
icebp
sbb
cmp
mov
stc
dec
xor
ss
sbb
rcl
and
push
lods
lock
xchg
sub
hlt
or
movs
imul
push
xchg
sar
movs
push
stos
jle
neg
call
mov
ss
mov
cmp
xor
mov
ds
jo
ss
scas
cmc
gs
add
lock
into
mov
sbb
push
mov
cwde
adc
inc
sbb
jmp
mov
dec
sbb
xlat
mov
int3
test
aaa
sub
jb
sbb
fadd
fwait
xor
push
shr
dec
xchg
mov
(bad)
mov
mov
jne
cmp
stc
es
fld
mov
inc
js
pusha
adc
push
iret
es
scas
cld
aas
push
ss
push
jge
loope
shl
pop
and
sbb
cmp
fimul
pop
and
icebp
movs
and
cmps
sub
test
cmps
stos
push
cmp
in
and
xor
pop
ss
push
retf
xchg
adc
adc
sub
xlat
cmc
pop
xchg
dec
arpl
pop
div
jg
je
pop
xor
xlat
xchg
push
adc
sbb
ins
push
jg
(bad)
sub
call
xor
lods
xlat
add
and
cs
mov
add
mov
mov
cdq
test
jbe
cmps
loope
xchg
ret
mov
and
inc
cmps
(bad)
(bad)
sbb
loopne
inc
jb
out
lods
cmp
fiadd
daa
ror
inc
ds
pushf
dec
jle
(bad)
repnz
fidivr
xchg
pop
adc
add
pushf
xchg
movs
add
dec
fs
ficomp
das
mov
pop
mov
cwde
pop
and
call
mov
test
mov
or
or
leave
pop
mov
leave
fcomp
jb
or
pushf
int
test
mov
xchg
stc
adc
lea
cmp
ret
loopne
cdq
(bad)
jmp
mov
imul
or
mov
(bad)
popf
pop
(bad)
shr
push
push
bound
or
outs
sub
push
sub
(bad)
fcom
ret
jbe
push
aas
push
sbb
cbw
gs
xchg
popf
dec
loope
loope
aas
aam
jg
arpl
mov
and
mov
jae
std
mov
add
out
dec
xchg
mov
cmp
cmps
mov
imul
retf
fbld
imul
(bad)
xchg
sub
cdq
aaa
pop
jle
rcl
cmp
fisttp
call
cmp
call
and
push
push
imul
jno
xor
aad
xchg
xor
shl
(bad)
mul
shl
inc
je
and
mov
frstor
repnz
mov
adc
sub
fcom
(bad)
mov
fdivr
fsubr
sbb
sub
imul
jb
xor
mov
inc
loop
adc
xchg
mov
or
mov
repz
add
out
(bad)
cs
mov
or
mov
das
push
cmp
inc
dec
xor
xchg
push
xor
in
pop
mov
nop
lock
imul
aad
mov
push
inc
pop
sbb
popf
lds
mov
icebp
mov
or
in
pushf
sub
movs
sahf
jae
in
adc
mov
pop
cmp
aam
pop
daa
xchg
and
mov
sub
in
jae
xchg
cdq
imul
sbb
and
lds
scas
inc
jno
fisttp
cmps
js
and
mov
ds
nop
jp
bound
sub
in
or
cmp
inc
and
data16
addr16
push
pop
call
push
cmps
xchg
jno
and
vmwrite
mov
inc
test
std
mov
inc
cmp
add
fs
jne
lock
mov
xor
sub
pop
push
and
lahf
push
mov
mov
imul
bound
aad
loop
imul
arpl
outs
push
shr
dec
sub
(bad)
fsave
and
or
add
test
add
idiv
jne
lds
rcl
mov
xchg
add
xchg
push
pop
in
mov
push
rol
fild
test
mov
lds
and
cmps
leave
ret
daa
sub
cmp
cmps
jno
into
pop
xor
jmp
std
(bad)
xchg
clc
sti
mov
jmp
or
or
push
(bad)
mov
shl
jo
jne
les
mov
sub
test
pop
pop
push
(bad)
push
inc
inc
cs
adc
int3
inc
xor
neg
stc
neg
sti
lock
movs
cmp
cpuid
(bad)
lods
retf
cmp
aad
jne
sub
arpl
mov
sub
gs
(bad)
mov
dec
ret
sbb
mov
mov
push
fs
imul
aaa
mov
mov
out
mov
xchg
ss
rol
cmp
jae
pop
xchg
xor
repnz
stos
fwait
out
add
mov
push
mov
les
xchg
cmp
inc
sbb
adc
cmp
and
push
in
inc
xor
in
test
xor
cdq
repz
add
mov
mov
retf
retf
and
dec
sbb
mov
or
retf
jmp
mov
pop
or
xchg
sbb
test
out
loop
adc
call
ja
imul
push
push
push
(bad)
sti
xchg
inc
(bad)
add
xor
adc
outs
mov
push
std
movs
sub
aad
retf
imul
lahf
cwde
dec
push
outs
cmp
mov
mov
jmp
mov
mov
jle
gs
arpl
inc
bound
enter
sbb
call
out
pop
xor
hlt
push
sbb
jbe
ficom
jle
ja
shr
adc
loop
xchg
out
mov
xchg
in
ret
stos
movs
cmp
bnd
sbb
mov
and
mov
leave
cmp
jb
pop
pusha
fst
mov
fld
sub
popf
retf
adc
(bad)
xchg
push
cwde
sub
mov
jge
push
mov
stos
ds
arpl
scas
mov
mov
or
fdiv
out
adc
ss
mov
js
push
retf
fist
movs
sub
popf
into
sub
mov
shr
pusha
imul
jle
ins
push
fistp
xchg
dec
add
jmp
push
(bad)
movs
cmp
clc
test
xchg
test
push
sub
mov
pop
adc
nop
out
jns
fisttp
stc
pop
or
and
mov
xchg
mov
int
call
repnz
push
std
into
pop
lea
mov
or
add
inc
add
inc
test
cmc
aad
push
cmps
(bad)
test
cmps
(bad)
loopne
push
imul
(bad)
in
push
movs
leave
mov
popf
cld
test
into
fld
mov
xchg
scas
sbb
pusha
in
mov
outs
stos
out
mov
cmps
and
jecxz
inc
lods
inc
adc
iret
outs
test
mov
mov
xor
push
ret
mov
or
cmp
xchg
fisub
pop
add
add
push
mov
pop
mov
jg
bound
cmc
fistp
ds
iret
jbe
mov
lods
test
dec
dec
and
mov
(bad)
jmp
adc
pushf
cmp
xchg
cmp
mov
scas
adc
out
mov
in
lods
cmp
pop
popf
sbb
aaa
push
add
dec
push
xlat
aas
das
shl
push
cld
or
sub
cmp
mov
daa
xchg
dec
mov
mov
xchg
pop
dec
popf
push
daa
jo
int
xchg
sar
xlat
sub
add
popa
cmp
xor
nop
pop
test
int3
mov
das
jmp
in
xchg
out
pop
movs
shr
sub
popa
in
(bad)
push
adc
mov
movs
scas
or
sub
mov
mov
sbb
add
sbb
(bad)
jae
lea
dec
ins
dec
adc
pop
lea
call
data16
adc
in
popf
jp
(bad)
dec
push
xchg
cmp
mov
sub
mov
xchg
mov
fwait
pop
imul
lahf
and
jne
mov
lock
(bad)
mov
imul
scas
lds
jne
dec
push
dec
jle
ret
inc
sbb
test
pop
mov
(bad)
(bad)
xchg
xchg
je
push
inc
cdq
jmp
ds
cld
sbb
int3
jbe
adc
jmp
mov
hlt
xor
scas
rcl
sub
or
cld
fidiv
xchg
aad
xor
or
dec
ret
mov
arpl
lock
and
dec
sub
mov
sub
mov
test
movs
pop
lods
mov
stos
push
xchg
test
test
pop
push
jo
jl
mov
iret
mov
jnp
xor
mov
adc
or
call
in
fisub
outs
imul
jb
pop
setns
inc
push
fiadd
sti
cmps
or
cmp
dec
pop
dec
data16
bswap
pop
pop
in
or
sbb
xlat
popa
inc
or
in
inc
(bad)
iret
imul
inc
div
lds
rcr
pop
loopne
rcr
loop
jl
imul
stos
mov
aaa
sub
jmp
aam
mov
retf
movs
pop
add
sar
shr
outs
or
(bad)
cmp
sub
jge
in
int
ret
cmc
shl
or
loopne
pop
in
addr16
xor
sbb
cs
cmps
arpl
inc
mov
push
dec
je
xor
(bad)
adc
fldenv
popf
push
shl
fild
fidivr
je
cmp
fcomp
repnz
and
or
test
sub
in
push
jmp
push
mov
dec
cmp
mov
leave
mov
sub
sbb
int
sbb
fidivr
jge
ror
in
cmp
mov
and
inc
into
push
retf
inc
call
or
jb
push
jmp
push
adc
outs
jne
push
arpl
and
push
pushw
movs
int
inc
or
inc
dec
popa
mov
pop
out
sbb
dec
and
push
dec
inc
push
pusha
stos
jle
stos
aad
shl
push
outs
clc
adc
data16
rcl
shl
retf
sbb
add
adc
into
mov
sbb
into
inc
sub
std
jno
arpl
loop
nop
mov
push
cmp
pop
push
sbb
test
loopne
xchg
sub
jae
and
mov
bound
clc
inc
pop
inc
adc
shl
xor
(bad)
fdivr
jp
sbb
enter
sbb
pcmpgtd
and
jmp
js
cli
loopne
sub
xchg
loop
and
jmp
bound
imul
inc
clc
sub
nop
push
aad
test
mov
mov
dec
mov
mov
sbb
mov
inc
or
cmp
dec
stc
in
xchg
jg
ja
dec
mov
jbe
ror
cmp
and
or
jl
pop
and
or
xchg
push
sbb
add
aaa
cmps
jmp
mov
shl
dec
or
push
and
aad
mov
pop
lods
mov
pusha
(bad)
daa
mov
(bad)
clc
fwait
adc
les
pop
aad
xchg
test
inc
cld
cli
dec
jmp
mov
retf
imul
cmp
out
and
rol
cdq
sti
sahf
jbe
iret
xor
mov
scas
push
or
mov
add
mov
rol
jns
xchg
push
in
bound
imul
add
inc
mov
cmp
or
ficom
repz
out
push
inc
into
sbb
ss
leave
jno
dec
adc
out
mov
adc
ficom
sti
out
repz
or
add
out
xor
enter
cmp
or
ret
mov
in
push
push
push
jae
mov
icebp
mov
add
dec
pop
push
jmp
maxps
inc
cld
mov
fcom
stos
inc
and
test
lods
fcmovb
je
xor
data16
pusha
dec
daa
jmp
sub
and
xchg
shl
clc
scas
fisttp
inc
mov
jnp
into
cli
mov
scas
in
mov
sub
in
jmp
movs
and
stos
jno
jno
(bad)
or
fs
ret
xor
push
xor
mov
jg
jae
ins
cmc
xor
xchg
aam
fisubr
adc
stos
aam
pop
test
add
mov
mov
test
fnstsw
mov
sar
inc
mov
mov
push
sub
out
fwait
icebp
popa
xor
cwde
out
xchg
in
xchg
mov
mov
cmc
cmp
push
mov
fbstp
jnp
or
jns
cmps
popf
mov
mov
stc
and
jnp
and
sbb
mov
mov
fist
ficomp
push
dec
add
add
data16
mov
iret
push
retf
cmc
in
data16
mov
ins
inc
jns
jmp
jb
mov
dec
sbb
cmps
retf
int
cld
(bad)
shl
movs
push
or
ret
mov
imul
adc
pop
sar
rol
popa
push
leave
mov
ins
dec
jno
mov
jmp
test
in
and
aam
retf
inc
add
mov
int3
repnz
xchg
stc
jbe
ja
add
mov
pop
clc
and
ds
das
ins
sti
retf
into
in
or
xor
mov
int
sbb
ret
pop
cwde
xchg
inc
add
mov
mov
mov
out
imul
fild
lds
and
scas
or
sahf
cs
or
and
iret
test
icebp
cmps
mov
xchg
pop
or
fsub
push
outs
xlat
xchg
jb
xchg
xchg
adc
cli
hlt
inc
sub
sbb
(bad)
sbb
hlt
mov
push
fstp
mov
push
xor
cli
jmp
not
inc
mov
xchg
jge
pop
sbb
es
jl
daa
hlt
pop
sti
inc
inc
test
sbb
push
(bad)
mov
out
adc
bound
mov
inc
repz
daa
cwde
mov
inc
(bad)
jae
shrd
int3
push
(bad)
lods
shr
dec
bnd
imul
sbb
cli
cli
jmp
pop
sub
scas
jb
loop
or
mov
clc
in
mov
or
fcomp
pop
dec
in
adc
(bad)
mov
clc
scas
sub
ror
sub
pop
cwde
(bad)
jmp
sbb
and
es
fdiv
inc
sahf
cmp
add
mov
inc
xchg
cs
xor
pop
sub
adc
xor
xor
sub
das
call
(bad)
add
popf
jae
xlat
(bad)
dec
fisttp
outs
inc
cmp
pop
sbb
clc
(bad)
cmp
ds
outs
mov
lock
adc
mov
(bad)
add
sub
pop
scas
dec
outs
pop
(bad)
jns
in
dec
pop
movs
xor
shl
mov
stos
iret
jns
jle
mov
push
adc
inc
xor
imul
mov
adc
cmp
cmp
xchg
mov
xor
out
mov
dec
inc
mov
ret
jns
xor
leave
(bad)
iret
mov
xchg
jg
mov
jecxz
sub
mov
dec
pop
push
ins
push
pop
push
xor
dec
pop
fcomp
mov
sub
lds
and
xor
movs
or
pop
xchg
jo
sbb
(bad)
xor
pop
sbb
xchg
mov
mov
push
cmp
lods
and
gs
and
mov
jno
nop
pop
and
xchg
mov
arpl
dec
pop
xchg
std
retf
xchg
iret
push
lds
push
mov
xchg
mov
bound
adc
sbb
in
jo
sub
fwait
int
sbb
sbb
adc
sbb
jle
add
push
es
loopne
scas
sbb
push
and
(bad)
cmp
fsubr
aam
xor
adc
jmp
movs
jp
push
xcrypt-ctr
cmps
pop
fs
mov
xor
inc
pop
pushf
fdivr
mov
mov
push
pushf
ret
xchg
cwde
inc
lods
push
iret
jle
movs
jmp
add
xchg
mov
dec
jmp
sub
sbb
icebp
sar
mov
(bad)
and
add
xchg
je
xchg
mov
outs
fisttp
cmp
mov
test
adc
les
xchg
seta
hlt
jge
push
pop
jbe
sub
pop
(bad)
out
js
cmc
adc
test
pop
inc
mov
push
imul
sbb
ds
out
(bad)
in
inc
mov
(bad)
dec
push
mov
mov
sti
into
mov
or
sbb
scas
or
das
loope
js
popf
jmp
dec
(bad)
retf
mov
cmps
js
aad
loopne
push
and
int3
sbb
jbe
(bad)
ret
mul
xor
jo
bound
add
test
jno
push
mov
mov
inc
shl
popa
hlt
dec
movs
add
imul
push
aam
call
jmp
pop
dec
jne
out
inc
jmp
out
out
or
mov
aas
imul
pop
dec
in
lock
outs
xor
xor
je
fld
cli
xchg
scas
mov
adc
fisub
sbb
pushf
test
mov
push
movs
lahf
rcr
jl
mov
pop
pop
jle
(bad)
or
pop
popa
inc
jmp
adc
pushw
arpl
and
(bad)
jb
enter
cmp
jecxz
jg
xchg
jo
sub
sbb
jmp
sbb
mov
mov
jne
and
cdq
sahf
out
lea
dec
inc
mov
jns
mov
repz
or
sub
xchg
jno
jb
pop
pop
and
sbb
clc
xor
add
mov
fs
jmp
js
loop
shr
outs
xor
push
iret
cmp
xchg
mov
cmps
dec
and
and
inc
movs
pop
or
jno
mov
cmp
xor
sbb
mov
jmp
mov
mov
cmps
jmp
cld
popf
sub
push
ffree
cli
cmp
xchg
fs
cli
or
pop
cdq
rol
aaa
fwait
cdq
fcom
stos
fistp
scas
ror
popf
fadd
aas
dec
sbb
add
pop
sbb
jl
repz
retf
push
scas
mov
cs
jmp
ins
pusha
or
enter
adc
dec
mov
push
fbstp
xor
push
jp
imul
xor
out
cdq
mov
or
aaa
push
fbstp
enter
call
mov
adc
cmp
mov
retf
imul
iret
adc
jbe
jne
sbb
out
and
mov
sub
mov
pop
jp
pop
iret
mov
repnz
into
inc
rcr
loop
pop
repnz
pop
push
retf
(bad)
dec
movs
and
and
push
movs
outs
push
mov
jp
mov
mov
pop
mov
cmp
(bad)
adc
push
push
mul
repnz
loope
loop
cli
ret
stc
out
fidiv
pushf
sbb
lock
and
repnz
cmp
in
out
xor
push
rcl
imul
mov
inc
sbb
pop
mov
sbb
(bad)
xor
mov
pop
add
shl
mov
popf
clc
or
xchg
shr
sub
pop
dec
outs
mov
inc
sbb
adc
jno
or
div
and
data16
dec
inc
push
ror
pop
out
xor
not
test
rcl
ja
pop
jge
xchg
pop
mov
sbb
xchg
xlat
ja
add
jge
jmp
push
xor
dec
push
aad
cmp
out
dec
sbb
(bad)
dec
movs
xchg
lds
rep
jle
leave
jg
fsubr
pushf
xchg
or
jo
fcmovu
xor
mov
xor
shl
mov
cmp
and
add
repnz
inc
ds
mov
mov
or
ds
jb
jl
cld
(bad)
aaa
outs
(bad)
fadd
imul
sbb
jmp
dec
fst
xchg
imul
pop
in
mov
and
xor
xchg
test
fcomp
xchg
mov
retf
or
rcl
ret
mov
jg
inc
(bad)
mov
mov
in
je
(bad)
sub
mov
and
(bad)
mov
mov
lock
mov
jg
xchg
ins
xor
fidivr
add
adc
loope
lods
sahf
imul
int
sbb
adc
xor
adc
ss
repnz
sub
jno
or
jmp
ja
or
icebp
or
ret
fwait
mov
cwde
int
test
loop
cdq
jne
cdq
dec
push
int3
and
stc
rcr
push
idiv
std
je
or
in
ds
jae
push
in
adc
cmp
rol
mov
icebp
stos
and
xlat
mov
xchg
sub
xlat
test
cmps
cli
hlt
mov
lock
push
sti
mov
inc
jg
dec
sar
inc
adc
cmp
int
jecxz
not
xchg
fild
fisttp
test
jnp
add
fwait
mov
out
nop
(bad)
fsub
cwde
sub
hlt
push
stos
pushf
cmp
mov
mov
sbb
aaa
call
jmp
hlt
idiv
mov
fwait
push
in
cmp
pop
xor
notrack
movs
mov
(bad)
test
and
jg
js
cld
mov
mov
and
mov
mov
mov
xchg
fdivr
pop
popf
dec
mov
outs
dec
out
jno
enter
xor
aam
add
adc
enter
mov
imul
sbb
int
(bad)
sub
(bad)
out
loopne
mov
pop
pushf
cmps
ins
adc
push
inc
stos
pop
cmp
(bad)
cwde
mov
push
fdiv
pop
mov
stos
add
jno
push
adc
push
mov
sub
sidtd
jecxz
ficomp
jmp
mov
inc
mov
test
jg
pop
cmp
dec
(bad)
jg
loope
cmp
sbb
push
xchg
xor
mov
jo
aam
repnz
cmp
dec
jmp
test
inc
pop
loope
push
enter
pop
mov
imul
cmp
popf
sub
loope
sbb
push
loop
retf
daa
jmp
sub
je
sbb
fcom
cmps
inc
loop
push
jmp
jl
int3
cdq
sahf
aas
pop
pop
add
push
dec
ror
mov
mov
not
dec
add
aad
rol
fucomp
xlat
mov
retf
fistp
dec
jbe
fwait
dec
xor
lods
es
mov
clc
cwde
in
out
jg
sub
pop
mov
xchg
sbb
pushf
cdq
mov
sbb
sbb
xchg
jle
or
int3
or
push
fnsave
nop
mov
popa
sub
iret
test
cli
ss
std
or
add
xor
dec
adc
mov
add
pop
fmulp
lods
xchg
cmp
psrld
loop
cmp
ds
fist
out
mov
xchg
outs
call
cmp
jle
hlt
push
repz
call
or
jmp
ds
lahf
mov
or
push
jmp
and
test
and
push
push
mov
int
mov
and
jno
fidiv
rol
shr
mov
mov
retf
cmp
mov
push
mov
inc
push
jmp
mov
mov
div
jne
int3
(bad)
xorps
dec
addr16
pop
pop
pop
add
pop
stos
fimul
lock
push
in
and
mov
fucom
mov
mov
mov
outs
inc
(bad)
jb
sbb
fimul
push
xor
dec
cmps
shr
das
not
cmp
push
call
xlat
inc
repz
cmp
pop
add
mov
cmp
retf
jbe
in
jl
jns
int3
dec
xchg
lods
mov
cs
(bad)
jo
mov
jnp
fmul
and
jle
mov
inc
loop
xchg
push
in
push
jmp
pop
jle
loopne
mov
dec
cmp
ins
jb
fwait
aam
in
and
and
cmps
imul
cwde
adc
cmp
mov
adc
add
outs
sbb
push
pop
cmp
jae
sbb
dec
mov
push
inc
clc
fadd
cmp
imul
pop
(bad)
jge
fstp
jmp
fbld
push
test
or
xor
shl
dec
ss
pushf
out
push
movs
push
sub
pop
xchg
loop
inc
in
or
retf
push
test
ret
inc
ss
sbb
push
xchg
icebp
ins
pop
jge
sbb
mov
mov
jmp
pushf
xor
mov
push
ins
mov
aad
mov
pop
data16
inc
pop
enter
lahf
and
bound
mov
neg
fsubr
cmps
(bad)
fnstenv
mov
cmp
pop
ret
repnz
xlat
sbb
inc
inc
cmp
xchg
pop
or
addr16
mov
bound
mov
sahf
mov
xor
cwde
mov
aaa
(bad)
ret
popf
punpckhbw
stos
mov
mov
push
or
lock
loop
hlt
mov
sub
or
dec
pop
shr
jge
fld
jnp
out
cli
fadd
cld
fmul
pop
ror
mov
test
dec
in
xor
and
aaa
and
(bad)
fnstsw
test
pop
fmul
repz
mov
ins
pop
cs
adc
scas
add
movs
shl
inc
xchg
neg
pop
fisubr
enter
add
cmp
xlat
pop
cld
jge
sbb
mov
jne
adc
test
inc
addr16
dec
cmp
cmps
jl
loopne
test
pop
xor
je
not
arpl
mov
inc
add
jo
jbe
xor
cmp
mov
mov
cld
sub
cwde
in
fcmovb
add
and
dec
out
mov
cld
das
gs
pop
dec
lds
imul
cmp
repz
retf
call
lock
mov
jne
xor
and
lar
cld
mov
fnstsw
mov
mov
cmc
pop
retf
sti
dec
mov
fimul
call
sub
imul
hlt
retf
xor
loope
jge
sbb
fsubp
mov
mov
ins
aas
in
sub
push
dec
inc
call
xchg
sub
fisub
cmp
mov
test
js
int3
xor
jmp
in
sub
dec
sub
mov
or
scas
inc
int
mov
dec
mov
and
es
jb
jge
adc
test
mov
inc
dec
sub
cmp
xchg
adc
pushf
jecxz
ds
daa
aad
int
(bad)
into
pop
xchg
rol
or
jns
adc
jmp
mov
sub
add
pop
add
sub
aaa
inc
leave
sbb
(bad)
pusha
mov
fcom
outs
stos
(bad)
push
mov
(bad)
rcr
and
sbb
js
push
fnstenv
rcr
(bad)
retf
jbe
adc
hlt
mov
out
in
pop
xor
scas
repz
sub
jns
cmps
cmc
push
ret
in
shufps
jmp
xor
popf
lock
mov
adc
ins
jg
jmp
mov
xchg
xchg
xchg
je
out
xor
sub
pop
stc
mov
jmp
sbb
leave
jp
scas
daa
ja
(bad)
and
lock
sbb
stos
inc
ins
sti
out
arpl
scas
outs
jecxz
std
push
jle
jmp
(bad)
js
add
xor
dec
push
ja
std
test
adc
les
outs
std
and
sub
xor
cmps
mov
scas
sar
not
add
movs
into
into
xchg
lahf
xor
jmp
movs
and
test
outs
cwde
jns
sub
pop
clc
jecxz
daa
imul
nop
pop
daa
jb
mov
sahf
loopne
ret
arpl
leave
sbb
inc
dec
mov
addr16
int
std
xchg
loopne
dec
dec
cs
(bad)
arpl
xchg
movs
imul
pop
repz
pushf
test
call
add
test
pop
out
jmp
mov
xchg
lds
repz
retf
ret
sahf
sub
add
shr
inc
vshufpd
sub
push
aad
jns
dec
mov
(bad)
ffree
out
es
mov
fst
les
mov
sahf
mov
and
mov
jg
retf
fwait
xchg
loopne
lahf
dec
dec
les
in
adc
xor
mov
iret
mov
dec
jns
adc
xchg
sbb
leave
hlt
sbb
add
inc
jle
fs
and
mov
sbb
xor
xchg
(bad)
fwait
push
jns
push
mov
or
ja
mov
xchg
int3
inc
test
sub
xor
or
adc
sbb
push
(bad)
jae
sub
pop
mov
pop
test
push
test
push
rol
leave
retf
or
movs
adc
scas
jl
test
cld
pop
aad
mov
sub
loopne
aaa
daa
ror
lock
or
(bad)
fstp
xchg
push
xor
sti
sub
jnp
pop
cdq
xor
xchg
jl
pop
inc
xchg
or
(bad)
pop
and
in
(bad)
jg
add
cmps
shl
movs
gs
push
jg
rcr
cdq
(bad)
sbb
aaa
das
fwait
lods
aaa
pop
xchg
mov
sar
repnz
inc
jecxz
retf
stos
pop
or
mov
xor
xchg
xchg
dec
sbb
xchg
aam
aam
push
jo
sub
fmul
mov
js
jo
sbb
or
xchg
imul
cmps
adc
les
in
jo
fwait
(bad)
rep
neg
int
pop
mov
into
xchg
cmps
into
stc
or
in
outs
fsubr
les
fisttp
loop
int
pop
mov
sbb
fstp
mov
mov
or
xor
jo
pop
bnd
sub
retf
cmp
sahf
cmp
sti
cmc
ja
or
or
push
in
js
ret
mov
leave
add
jmp
xchg
jmp
or
xchg
inc
repz
pop
sub
mov
sbb
stos
das
and
(bad)
inc
inc
or
jmp
or
cmp
ret
adc
xor
xchg
popa
pop
mov
pop
dec
jp
add
pusha
xchg
mov
(bad)
fimul
cmp
push
sub
cmovs
or
cmp
mov
div
mov
cld
add
fmul
xchg
jns
xor
xchg
fmulp
xor
sbb
push
add
fldenv
push
mov
inc
adc
stc
or
js
les
add
stc
inc
cmps
inc
fcom
xchg
lods
inc
stos
mov
jo
xchg
arpl
push
fs
mov
sub
xchg
mov
xor
pop
inc
mov
repz
in
inc
adc
pop
xor
adc
call
je
rcr
idiv
stos
sbb
call
add
mov
push
pop
ror
push
and
push
and
int3
adc
stc
jmp
repz
(bad)
aad
ja
outs
das
xor
jg
cli
(bad)
jl
sbb
xor
push
xchg
mov
imul
mov
into
xchg
int3
push
jo
xor
push
mov
push
mov
stos
dec
add
pop
and
mov
jb
fcmovne
or
xchg
retf
std
jns
scas
push
adc
dec
xchg
add
dec
mov
cmp
and
shl
mov
lea
push
std
mul
rcl
inc
or
push
call
ds
mov
mov
arpl
cmc
jnp
pushf
jbe
jmp
sbb
and
shl
fsub
xchg
das
add
pop
mov
daa
repnz
add
add
push
dec
mov
push
pop
inc
cmps
xchg
outs
jge
push
movs
or
sub
cld
out
add
xor
aaa
jp
pop
mov
sbb
inc
in
dec
test
push
adc
jae
inc
push
adc
or
test
loope
std
scas
xchg
jg
sbb
push
rol
and
push
mov
sbb
add
dec
jbe
int
adc
div
mov
mov
inc
xor
cmp
(bad)
les
(bad)
push
je
aad
cmp
or
dec
dec
sbb
dec
enter
rcl
jbe
fldlg2
jmp
push
addr16
mov
test
lods
mov
loopne
mov
test
cmp
inc
ins
rcl
jle
adc
(bad)
dec
adc
js
push
sbb
ret
daa
jecxz
repnz
mov
jo
or
pop
jns
adc
(bad)
hlt
xor
or
outs
adc
push
xchg
stc
cwde
stc
mov
mov
fs
sahf
push
sahf
jno
cmc
xor
xchg
fcom
add
push
mov
sbb
je
jne
pop
clc
rol
ffreep
out
lods
mov
int
mov
inc
push
mov
add
dec
mov
fidiv
push
xchg
jp
mov
cmp
enter
arpl
ins
mov
mov
std
scas
inc
lds
movs
cdq
cdq
popf
das
adc
ret
popa
xchg
jle
dec
outs
fdivr
jp
sub
add
sub
or
(bad)
pop
sub
aaa
retf
ins
loop
stos
mov
xchg
ret
ja
outs
inc
jmp
(bad)
add
dec
loope
cdq
fucom
cmovbe
dec
sub
sub
lea
div
vmwrite
add
xor
out
sbb
fstp
rol
fld
aaa
(bad)
or
mov
call
jnp
pop
mul
sar
mov
(bad)
jbe
sbb
sbb
xor
jecxz
cli
ds
or
dec
test
out
shl
sbb
cmc
xchg
or
retf
pop
push
mov
mov
jbe
or
out
cmp
jns
pop
mov
jge
outs
out
fsubr
pop
mov
mov
icebp
jmp
xor
pop
add
lea
jmp
xchg
dec
scas
and
push
push
(bad)
loope
mov
jmp
jno
cdq
push
mov
mov
ins
imul
xchg
imul
sub
shl
aaa
mov
or
push
adc
mov
movs
mov
xor
xchg
sbb
mov
ja
fnstcw
xor
hlt
or
xor
sub
sbb
popa
mov
int
pop
and
xlat
in
mov
bound
ins
xor
jno
pusha
sub
adc
jge
cdq
cwde
and
inc
lods
lock
test
pop
(bad)
mov
jmp
addr16
(bad)
leave
sbb
shl
dec
outs
push
arpl
daa
test
and
xchg
mov
mov
push
inc
mov
aaa
push
clc
jnp
push
inc
push
dec
xchg
mov
aad
push
mov
movs
adc
cmps
mov
lea
jno
cmp
xchg
or
fs
jne
retw
mov
push
jmp
push
xchg
rcl
sub
ret
mov
inc
ret
retf
cmp
inc
xlat
jp
neg
sbb
jle
push
sahf
ror
sbb
mov
dec
fsubr
pop
xchg
lahf
das
neg
mov
daa
mov
pop
cmps
ins
(bad)
test
push
push
sub
jnp
xchg
xor
rol
push
mov
mov
push
test
push
adc
inc
imul
jb
xor
jb
call
push
jno
mov
xor
(bad)
fst
mov
sub
(bad)
aaa
icebp
aaa
xor
cs
or
xchg
in
enter
push
mov
ja
lahf
js
aas
cmc
adc
sbb
push
jge
jg
popa
dec
es
sbb
shl
dec
in
and
pop
inc
sar
cmp
dec
and
push
ins
mov
std
xor
daa
bound
inc
xchg
dec
sub
pop
jae
rep
mov
push
mov
fsubr
mov
jns
add
test
ja
ins
sub
mov
and
push
xchg
or
data16
lea
sbb
dec
out
mov
inc
sti
xchg
fnsave
dec
in
popf
lea
push
mov
or
jg
test
aas
mov
ret
mov
mov
js
cmp
and
and
ins
ret
pushf
scas
mov
jno
sbb
pop
test
mov
iret
dec
add
mov
pop
jns
pop
imul
loope
pop
fwait
je
sub
or
mov
dec
imul
adc
or
sub
adc
push
jmp
pmovmskb
jae
jo
sub
pop
out
add
push
lahf
xlat
jb
(bad)
or
fsub
mov
pop
stos
out
in
retf
mov
mov
js
mov
jno
out
sar
pop
pop
stc
xchg
xlat
add
rol
leave
sub
scas
nop
push
rcr
push
mov
sub
push
repz
arpl
in
inc
sbb
jp
call
push
call
add
mov
scas
xlat
add
jbe
je
aaa
push
mov
push
(bad)
call
stc
sub
add
add
fbld
mov
or
sub
mov
js
cmp
sbb
cld
xor
mov
clc
lods
inc
dec
sub
pop
sbb
mov
mov
shl
out
lods
push
dec
jnp
adc
out
call
scas
push
ins
shl
repz
not
dec
mov
lods
mov
in
cmp
dec
jbe
dec
sub
sub
leave
xchg
sbb
mov
je
ins
mov
inc
mov
jge
xor
fwait
inc
adc
es
sub
push
xlat
lods
mov
arpl
push
inc
ror
(bad)
call
das
(bad)
rcl
push
cmp
cdq
xor
js
(bad)
ret
push
mov
mov
sub
jns
jecxz
shl
mov
std
jb
fdivr
shr
repnz
ret
shr
les
fcom
mov
scas
lea
push
dec
xor
dec
dec
and
cli
shl
pop
mov
adc
das
push
jmp
add
push
jbe
pushf
pop
or
test
inc
add
jb
pop
ja
ds
fwait
lea
mul
mov
pop
xor
stos
sub
cmp
adc
inc
rcl
mov
or
ret
test
pushf
ret
retf
js
scas
push
inc
stos
call
mov
xor
mov
jmp
rcl
push
xor
sahf
les
xchg
and
and
cs
call
stos
adc
mov
ficomp
test
cmp
sub
(bad)
loope
call
cmps
fiadd
mov
out
mov
mov
ret
add
mov
jp
mov
sbb
stc
in
adc
lahf
mov
push
mov
loope
mov
shl
push
mov
cmps
push
les
rcl
mov
add
push
dec
int
retf
pop
mov
or
pop
mov
add
aaa
inc
test
or
pop
fwait
mov
retf
xor
cmp
mov
mov
cmp
mov
clc
popf
or
(bad)
cwde
adc
leave
sbb
xor
(bad)
dec
ins
pushf
push
movs
sahf
mov
xchg
sub
mov
mov
mov
mov
lock
adc
sar
in
retf
jae
(bad)
pop
dec
push
mov
dec
lahf
in
xor
and
inc
loope
push
das
sahf
popa
pop
je
inc
sub
jns
neg
popf
fstp
add
clc
xchg
(bad)
or
ror
cmps
push
imul
(bad)
mov
cli
push
fsubr
out
(bad)
fisubr
jg
pop
fs
sub
mov
push
push
xchg
mov
add
push
scas
mov
xor
pop
xchg
mov
mov
hlt
cmps
or
movs
in
mov
in
and
test
push
in
cs
adc
in
adc
cmp
jno
retf
inc
movs
fwait
stos
stc
mov
jle
inc
jmp
mov
mov
push
xchg
inc
pop
(bad)
lods
mov
sbb
push
or
dec
aas
imul
xor
push
add
shr
cli
ins
outs
xor
xchg
fwait
test
and
or
jmp
push
sbb
fcom
rol
cwde
adc
shl
in
mov
cmp
and
rol
xor
(bad)
jg
cdq
sub
iret
mov
inc
sti
mov
push
pop
pop
loope
inc
(bad)
test
dec
sbb
jns
push
mov
je
xchg
sub
ins
bound
or
outs
jb
(bad)
mov
fptan
rcl
xchg
in
fcmovnu
ins
mov
outs
int
test
and
push
inc
mov
repz
push
adc
nop
(bad)
sub
add
aam
sub
pop
mov
lods
jne
lock
lahf
in
int3
test
ins
pop
pop
inc
enter
push
mov
in
es
mov
aam
mov
iret
lds
shr
dec
ret
push
mov
adc
dec
jmp
jmp
add
push
sahf
test
mov
fwait
enter
fbld
pop
dec
inc
jmp
add
out
data16
test
(bad)
loop
jmp
mov
xchg
int
imul
std
jns
jmp
pop
jo
aaa
add
pop
cmp
cmc
sbb
add
call
sub
imul
sub
jo
mov
xor
mov
je
stos
sub
hlt
sbb
imul
es
or
mov
rcl
sbb
adc
fldenv
(bad)
into
test
mov
(bad)
lock
call
pop
dec
call
stos
pusha
adc
and
into
dec
popf
mov
cmps
call
mov
cs
in
loopne
jb
xor
push
mov
hlt
mov
inc
rcl
push
cmp
sbb
adc
xchg
int
fwait
jnp
push
rol
aaa
ja
jae
cmp
push
xor
sbb
sbb
inc
push
add
mov
mov
arpl
mul
les
mov
push
inc
or
push
shl
out
mov
fld
dec
add
pushf
mov
push
aaa
gs
rcl
cmp
icebp
dec
retf
or
repnz
test
dec
inc
dec
inc
sbb
cmps
ja
das
xor
inc
(bad)
mov
mov
ror
dec
je
repz
push
or
in
fistp
pop
test
(bad)
sub
imul
ror
fcmovb
add
aad
mov
mov
pusha
sub
je
sub
fchs
test
fsubr
sub
in
out
dec
repnz
pusha
rcr
pusha
popa
and
(bad)
cli
fwait
icebp
mov
mov
mov
loopne
mov
movs
xor
xor
in
pusha
or
xchg
ret
xor
xchg
or
mov
lods
hlt
xor
mov
pop
pop
xchg
ret
movs
out
lods
sub
popa
push
mov
sub
mov
lds
(bad)
test
mov
scas
push
or
push
cmp
lea
mov
mov
xchg
mov
aad
icebp
xchg
hlt
int3
imul
xlat
mov
cmp
jne
sahf
daa
cld
sub
into
xchg
sub
arpl
rol
pusha
rcl
inc
inc
or
sti
(bad)
push
idiv
push
call
aas
or
mov
push
in
into
adc
in
mov
mov
mov
sbb
fiadd
xor
inc
loopne
cli
jmp
push
mov
and
les
inc
repz
mov
fnstcw
sbb
push
or
cli
xchg
not
imul
sti
popa
aad
out
mov
push
push
jb
sbb
cwde
pushf
adc
xchg
das
retf
in
mov
cdq
push
lods
shl
cmps
xchg
pop
jmp
adc
mov
jns
pushf
xor
ins
xor
push
nop
mov
(bad)
std
movs
mov
sbb
sub
rol
or
and
fdivr
xchg
leave
cwde
mov
bound
(bad)
fist
ret
or
inc
stos
cmp
jmp
fdivr
dec
pop
addr16
sub
fisttp
imul
pop
add
mov
mov
dec
mov
(bad)
lock
inc
in
push
inc
jecxz
mov
or
inc
test
(bad)
pop
xchg
jl
push
movd
sub
movd
nop
jle
stos
mov
add
sbb
or
test
xchg
outs
jbe
arpl
jo
(bad)
push
ds
dec
jle
fnsave
push
and
out
lahf
ja
iret
mov
rol
jnp
mov
mov
leave
(bad)
pop
mov
and
xchg
and
int
cmps
cs
cmp
pop
fcom
pop
sbb
add
mov
xchg
call
fld
dec
cmp
test
out
lods
adc
inc
mov
dec
xchg
jmp
cli
ins
jno
mov
push
pop
imul
mov
les
ret
in
inc
mov
mov
addr16
cmp
adc
pop
jne
jb
jmp
pusha
cld
pusha
pop
sub
inc
cmps
mov
inc
addr16
lea
cmp
fdivr
push
adc
fcomi
and
scas
dec
fstp
dec
mov
push
inc
es
fmul
outs
lds
jl
push
mov
test
add
stos
mov
ins
ficom
popf
adc
push
aam
dec
scas
rol
adc
push
aas
push
aam
lea
cmp
and
cmp
ret
pop
int3
xchg
cli
pop
movs
cmp
add
cmp
adc
movs
xor
fdivr
adc
ds
jmp
dec
je
adc
mov
iret
dec
mov
in
cdq
push
cmp
sti
push
cld
(bad)
outs
xchg
xchg
loope
sbb
(bad)
jge
fadd
mov
cmp
lahf
cmc
mov
xlat
add
jmp
and
(bad)
hlt
jmp
mov
cmps
(bad)
pop
sahf
and
iret
mov
lds
pop
xor
(bad)
fidivr
xor
popa
sub
outs
iret
xor
popa
hlt
mov
xchg
xor
add
cmps
jb
mov
push
fld
iret
repz
js
mov
loop
shl
mov
push
adc
lods
sti
(bad)
outs
mov
lea
scas
xchg
enter
in
data16
es
addr16
pop
or
mov
in
mov
out
mov
call
std
push
inc
fwait
mov
mov
into
and
sub
loope
retf
mov
enter
inc
xchg
pop
ror
cmp
jae
lods
inc
push
mov
lahf
jmp
retf
dec
cmps
mov
xor
sub
pop
cmc
test
sub
paddsb
mov
fcomp
xchg
retf
scas
and
or
inc
ret
rol
inc
scas
push
lahf
aas
jno
ret
(bad)
jns
jmp
repnz
ss
(bad)
aaa
mov
ficom
sub
jle
mov
aad
jecxz
aad
pop
in
test
dec
mov
sti
into
pop
mov
in
in
jl
ret
retf
int
push
cmps
test
(bad)
dec
cmp
adc
and
ficom
push
in
xchg
out
push
stc
fldenv
mov
sbb
and
lds
jmp
push
int
pop
sub
or
mov
fst
and
aam
int3
sbb
mov
mov
pusha
shl
xchg
(bad)
and
mov
je
xor
(bad)
push
dec
inc
shl
lea
sub
das
ss
sbb
inc
sbb
inc
into
xor
daa
loopne
jmp
xor
daa
and
dec
daa
push
dec
std
pop
dec
jmp
repz
mov
fidiv
lds
mov
nop
mov
ins
mov
pop
inc
stos
add
retf
mov
inc
popa
add
cmp
in
mov
jl
arpl
lds
adc
sar
jecxz
hlt
idiv
in
aam
daa
cmp
mov
push
sti
sub
fadd
push
mov
inc
in
jbe
aas
lods
pop
loop
adc
lods
stos
call
dec
call
cmp
(bad)
push
jge
push
mov
in
fiadd
dec
cld
fstp
retf
jle
aas
mov
scas
fwait
inc
add
cmp
mov
push
sub
push
sbb
cwde
iret
pop
jbe
push
add
xlat
add
lea
test
pop
ja
push
xchg
pop
fld
cmp
fsubr
leave
ins
or
ja
nop/reserved
(bad)
aam
repz
cmp
mov
mov
push
dec
out
int
cmp
ds
pop
adc
pop
mov
sbb
stos
adc
rcl
nop
sub
(bad)
dec
pop
mov
(bad)
jg
in
xor
mov
dec
dec
and
xchg
mov
cwde
popa
and
test
repnz
add
sub
neg
lea
mov
fwait
sub
dec
jbe
cmp
or
(bad)
push
mov
call
retf
push
xchg
jle
push
shl
jae
mov
scas
xchg
jns
fistp
or
pusha
and
fadd
ins
inc
inc
push
pop
push
(bad)
mov
into
pushf
add
add
mov
sub
push
popa
scas
add
xchg
xchg
mov
aas
int
xor
or
jns
push
popa
sar
xchg
add
mov
mov
sbb
cdq
rep
push
test
shl
pushf
mov
mov
and
jmp
push
or
leave
(bad)
lock
rcr
mov
mov
inc
xchg
leave
fdivp
mov
les
adc
rcl
out
cmps
push
jno
fld
popf
(bad)
call
fadd
xor
xchg
repz
jmp
mov
pop
or
jge
cmp
imul
jno
add
pop
pushf
pop
cmps
js
pop
lock
js
xor
pop
and
pop
jbe
fcmovnu
adc
fadd
dec
mov
adc
dec
push
enter
jge
jb
mov
mov
pop
ins
jnp
jmp
adc
mov
mov
into
sub
mov
xchg
and
sahf
sti
pop
les
in
xchg
xchg
add
aam
pop
pop
jecxz
mov
xchg
cmp
rcl
and
test
or
adc
arpl
pop
out
scas
push
(bad)
dec
push
dec
push
push
aad
jnp
data16
fs
pop
xchg
xor
xor
push
mov
inc
mov
icebp
cmp
call
mov
cmp
sbb
or
sub
sub
jge
mov
pop
ror
cwde
sub
out
repnz
sbb
int
jl
adc
dec
rol
or
imul
cmp
mov
add
retf
xor
popa
out
clc
dec
in
mov
sahf
not
xor
mov
lock
test
cmp
(bad)
or
out
push
repz
push
(bad)
inc
jecxz
(bad)
mov
stc
xor
(bad)
lea
sar
xchg
ficomp
push
dec
pop
add
adc
sub
and
mov
push
add
push
jp
(bad)
xchg
aaa
mov
xchg
movs
jb
sub
pop
(bad)
sub
adc
cmps
pop
cmp
mov
test
mov
dec
xchg
les
mov
pushf
lahf
movlhps
dec
sbb
xor
retf
mov
movs
sub
fs
push
mov
xchg
(bad)
aad
mov
shr
mov
in
test
pop
xchg
pop
movs
es
loop
sub
xor
test
mov
add
popa
push
inc
in
mov
shl
fistp
fbstp
imul
mov
dec
xor
jmp
jmp
cmps
nop
int
(bad)
mov
pop
cdq
test
cmps
retf
xchg
cmp
repnz
xchg
cmp
dec
lods
js
imul
movs
outs
xchg
mov
push
ret
addr16
jne
inc
inc
div
call
mov
fst
xor
inc
cmp
das
mov
ret
test
sbb
mov
mov
and
or
imul
dec
mov
frstor
push
xchg
ficom
aad
cdq
jl
popf
adc
xor
addr16
repnz
add
sub
test
cmp
fsub
icebp
mov
push
(bad)
pop
xchg
sbb
retf
hlt
(bad)
out
out
jns
int
mov
test
in
add
adc
or
in
mov
inc
out
sub
adc
sub
ja
ret
ffree
mov
or
sbb
adc
in
cs
imul
sar
mov
adc
rol
ds
xchg
inc
adc
push
mov
sbb
das
pop
pop
cmps
or
pop
neg
dec
cli
pop
sbb
push
jb
push
jnp
xchg
mov
xchg
add
mov
or
(bad)
fwait
rol
fisub
mov
mov
fsub
xchg
stos
pop
pusha
mov
push
jmp
pop
xor
push
mov
fisubr
pop
add
nop
test
push
push
dec
cmps
out
pushfw
and
ja
mov
js
push
fs
xchg
dec
out
in
push
sub
lock
rcl
mov
cwde
sbb
xlat
push
adc
sti
pop
mov
xor
cli
xor
lock
daa
pop
(bad)
adc
xchg
push
rcr
cmp
xchg
je
les
cwde
hlt
and
push
in
sti
mov
push
mov
cmps
fisub
and
or
mov
popf
arpl
jnp
sahf
repnz
das
jge
mov
loop
push
pop
call
mov
xchg
fsubr
jo
push
pop
push
test
dec
fdivr
repnz
mov
leave
lods
imul
xchg
icebp
mov
pop
push
ds
xor
(bad)
mov
pop
es
arpl
xor
mov
leave
int
icebp
shl
sti
mov
addr16
stc
jle
and
inc
ja
cmc
(bad)
(bad)
mov
jg
dec
ret
imul
cmc
(bad)
jmp
push
jne
(bad)
mov
fadd
lods
xor
test
xchg
test
pop
sub
movs
mov
xchg
call
arpl
or
lds
pop
test
sub
add
inc
lods
sbb
xor
push
pop
jno
mov
leave
xor
daa
aad
imul
mov
std
add
outs
ss
sti
jb
(bad)
inc
sbb
in
adc
imul
inc
(bad)
jecxz
adc
jae
fsub
mov
shl
fnstenv
jo
jns
push
push
(bad)
nop
aad
out
fistp
xor
gs
mov
xchg
into
push
push
xor
ror
stos
test
dec
shl
repnz
add
ja
fwait
push
mov
sbb
fdiv
push
hlt
imul
cmp
xchg
xor
sub
popf
in
mov
clc
sub
and
rol
aas
shl
mov
sti
mov
fadd
jecxz
jb
icebp
outs
jns
inc
mov
jg
add
pop
pop
ffreep
stos
sub
sti
inc
pop
mov
push
popf
div
pop
jmp
adc
out
mov
cmp
mov
hlt
mov
push
call
mov
jmp
push
fbld
jl
repnz
mov
ins
call
fcmovnu
xor
cmp
ins
das
shr
lods
pop
cwde
sub
adc
xchg
cmp
sbb
mov
mov
xor
pop
lds
in
pop
movs
mov
(bad)
jns
bound
into
inc
pop
lock
cli
or
test
call
and
imul
(bad)
ds
call
and
fs
(bad)
push
jmp
test
add
cmp
rcr
icebp
retf
popa
xchg
je
mov
sbb
cli
fisttp
jae
popa
xchg
stos
push
rsqrtps
into
xchg
movs
iret
sub
sub
arpl
fcom
jmp
adc
cld
dec
jge
add
cdq
in
sbb
add
sahf
sub
mov
(bad)
mov
jecxz
test
clc
cmps
mov
xchg
rcl
xor
pop
lock
mov
gs
test
and
mov
jae
mov
sub
mov
outs
clc
sub
lea
(bad)
fidivr
hlt
clc
in
lods
xchg
dec
sub
add
xor
out
mov
mov
out
push
popf
push
pushf
push
jmp
and
in
(bad)
test
pop
cmp
sahf
sbb
add
cmps
jae
cdq
pop
push
sbb
jl
xchg
push
inc
adc
repz
pusha
xor
popf
cwde
ret
cwde
stc
inc
cmp
or
mov
and
add
add
jne
int
jne
daa
push
cli
ret
ja
cmps
inc
inc
sysenter
scas
fwait
rol
sbb
inc
rol
cli
push
mov
adc
jg
int
in
scas
xchg
xchg
xor
jbe
jno
hlt
or
xor
xchg
aaa
dec
ds
imul
jmp
loopne
mov
retf
int3
mov
cdq
repz
cmp
mov
xor
cli
das
adc
cmps
mov
mov
into
imul
lds
mov
xchg
js
mov
or
ret
movs
xchg
sbb
adc
shl
rcr
loopne
pop
jns
retf
out
loopne
fidiv
retf
sahf
inc
je
pop
sbb
jb
fdiv
cmp
xor
sbb
cmp
test
cld
adc
xchg
jbe
repnz
and
stc
clc
stos
inc
retf
fmul
mov
(bad)
dec
mov
js
aad
outs
xor
call
dec
and
jbe
imul
pop
mov
movups
aas
push
mov
outs
das
mov
retf
rcl
pop
sub
mov
enter
jmp
fst
clc
inc
mov
pop
cdq
loope
mov
mov
xlat
leave
fnstsw
sub
je
xor
je
leave
in
or
fs
push
and
mov
inc
jne
clc
jle
inc
push
adc
inc
jmp
lods
and
test
inc
shr
adc
(bad)
int3
inc
jnp
pop
lea
xchg
jnp
ret
out
and
inc
inc
clc
pop
pop
shl
mov
xchg
mov
fadd
cdq
xor
sti
push
add
loopne
pop
or
test
lods
mov
add
xor
iret
leave
jp
push
xchg
js
clc
cdq
rcl
xchg
cmps
stos
popf
hlt
dec
aad
dec
call
hlt
cli
cmp
inc
jmp
jo
mov
mov
push
(bad)
imul
retf
adc
add
ret
xor
mov
cmovge
mov
mov
dec
cwde
fwait
jb
dec
mov
sti
push
and
test
scas
sbb
pop
pop
dec
fcom
jg
xor
aaa
and
fild
add
js
xchg
and
cli
in
out
enter
jmp
add
inc
xor
mov
das
or
sub
or
dec
xchg
out
xor
pusha
ja
ret
ins
mov
ss
xchg
cmc
adc
dec
sbb
inc
popf
into
and
sub
adc
outs
fiadd
call
jl
repz
in
popf
or
pop
imul
lea
call
cwde
sub
sbb
or
mov
adc
retf
inc
add
nop
repz
stos
(bad)
mov
sub
test
lods
push
ret
stc
xor
inc
stos
data16
ins
jne
jle
test
adc
dec
ror
push
lock
inc
clc
fucomi
pop
mov
adc
dec
dec
scas
pop
jge
test
lods
mov
loop
push
fimul
rcl
xchg
shl
fwait
movs
test
push
push
dec
in
push
stos
cdq
mov
cmp
jns
and
jae
jne
xor
xor
cmp
fild
mov
into
nop
cmp
jnp
pop
(bad)
xor
es
mov
out
(bad)
fcmovb
loopne
movs
int
call
jns
dec
in
fidiv
jg
and
pop
lahf
xchg
mov
sub
ret
mov
faddp
ror
xchg
adc
outs
push
sub
or
shr
idiv
mov
out
cwde
sub
pop
sub
mov
inc
adc
push
(bad)
ret
jmp
inc
bound
pop
jge
push
mov
sub
jae
jo
rcl
imul
cmp
dec
mov
add
cmps
mov
dec
mov
pusha
xor
xchg
sbb
push
popa
push
(bad)
cmp
je
mov
push
add
fcom
mov
iret
jnp
xchg
addr16
call
xchg
jae
adc
shr
cdq
stc
fist
mov
and
sub
adc
dec
sbb
jno
pop
xchg
dec
aaa
(bad)
(bad)
into
sti
test
adc
popf
dec
sbb
lds
lods
push
imul
cmp
rcr
outs
jo
mov
ds
aad
bound
cmp
and
cwde
into
fs
in
dec
test
outs
mov
pusha
addr16
test
(bad)
jne
cmp
dec
mov
or
sub
sbb
dec
retf
nop
repz
je
out
je
and
and
sub
cld
adc
dec
jmp
clc
fld
and
jbe
pop
cld
sub
and
mov
lahf
push
pop
iret
(bad)
iret
sub
lahf
bswap
mov
sbb
into
mov
sahf
(bad)
fmul
inc
sti
and
mov
daa
jmp
cmp
mov
mov
mov
(bad)
dec
mov
(bad)
aas
aad
adc
inc
les
shr
(bad)
sbb
mov
add
xchg
xchg
not
(bad)
hlt
in
jbe
out
lock
mov
push
je
sti
sub
and
repz
cmp
mov
jbe
je
jno
xchg
retf
ret
xchg
(bad)
das
fimul
movs
shl
retf
jmp
inc
xchg
adc
or
mul
xchg
jo
inc
outs
std
das
repz
cmps
test
pop
daa
mov
xchg
ror
xchg
xor
xchg
aaa
int3
fwait
mov
not
cmps
popf
mov
in
leave
xor
mov
call
jae
clc
popf
cmp
dec
aam
js
sbb
sbb
pushf
sub
pushf
sub
jae
add
test
xchg
int3
xor
mov
or
out
xlat
mov
xchg
jae
icebp
adc
into
inc
sub
or
push
push
sub
mov
(bad)
add
cmp
mov
inc
cmp
sub
test
imul
test
mov
(bad)
push
push
imul
in
inc
stc
or
(bad)
movs
fimul
mov
jne
hlt
mov
push
loop
movs
xchg
in
dec
mov
xchg
outs
dec
aas
adc
push
cmc
(bad)
icebp
iret
aad
jne
clc
cdq
xor
fild
data16
push
xchg
sti
mov
mov
push
xchg
adc
test
test
inc
cmps
loop
pop
sub
movs
(bad)
hlt
aam
lock
popf
add
movs
jnp
aas
jge
into
push
mov
fild
imul
lahf
mov
scas
pop
in
ds
(bad)
fisttp
jns
test
fsub
cmp
imul
cs
xchg
imul
dec
jg
and
das
jg
imul
movs
xor
aaa
xchg
or
mov
push
inc
sub
iret
push
jp
movs
add
out
inc
xor
xchg
fwait
dec
neg
(bad)
loop
mov
pushf
in
mov
push
cmc
dec
mov
movs
push
xchg
push
(bad)
xchg
sub
jae
cmp
mov
xchg
fdiv
(bad)
arpl
mov
lods
dec
inc
mov
fdivr
inc
mov
adc
jl
xchg
movs
or
adc
test
iret
neg
mov
xor
outs
in
scas
pop
mov
nop
setns
and
and
add
add
add
add
(bad)
xor
xor
cmp
pop
out
dec
adc
jb
sub
pop
xchg
push
test
xlat
js
stc
cmp
cmp
or
push
push
outs
inc
jmp
shl
pop
push
ficom
mov
lods
add
push
lock
jmp
adc
xor
fldcw
lahf
xchg
adc
shr
dec
loopne
inc
or
fisub
pop
outs
adc
xchg
xchg
pop
xchg
movs
ror
jmp
sar
ret
cmps
retf
add
into
inc
jb
mov
push
sub
mov
cmp
pop
push
and
dec
ds
daa
ins
xchg
xchg
inc
or
mov
add
ret
gs
mov
mov
xchg
add
sbb
dec
inc
out
or
or
push
push
push
mov
xor
jp
push
and
jae
push
mov
dec
ja
ror
push
lods
jmp
add
jae
xor
add
mov
push
jp
or
fstp
dec
int
in
lods
pop
(bad)
ins
inc
pop
jecxz
xchg
cmp
push
hlt
sub
scas
dec
jle
fcomp
push
inc
mov
cmc
lods
cmc
add
adc
out
mov
jmp
add
xchg
outs
and
(bad)
repz
inc
leave
push
repz
xor
cmc
xchg
arpl
lods
mov
mov
mov
cmc
or
or
lods
fist
and
enter
out
ret
fcom
jecxz
iret
push
cwde
lods
add
fisubr
data16
jnp
imul
mov
dec
sub
popa
xchg
sbb
hlt
int3
add
pop
inc
sub
xchg
jge
sahf
sbb
push
ja
sub
jge
mov
hlt
cdq
sub
cs
sbb
les
sar
sub
icebp
push
mov
lods
xchg
jae
xor
or
pusha
or
les
lahf
hlt
mov
jns
dec
dec
cmp
jb
adc
cmp
jmp
adc
jmp
mov
out
daa
mov
(bad)
lods
lods
jecxz
dec
addr16
xchg
arpl
pop
lds
test
add
pop
pop
mov
mov
xchg
mov
test
(bad)
(bad)
fdivr
ins
xchg
and
icebp
fist
push
loope
sbb
pusha
xchg
rcl
test
mov
pop
jecxz
imul
mov
sub
add
pop
jle
adc
or
out
push
pop
sbb
jns
mov
stc
popa
arpl
jge
add
es
lds
scas
jne
retf
mov
mov
add
out
xor
pop
hlt
push
xchg
xor
fimul
mov
mov
push
data16
xor
mov
sub
mov
mov
xchg
jmp
pop
mov
fs
mov
adc
push
jmp
fs
xchg
fwait
inc
sbb
dec
cmp
push
push
add
fld
scas
scas
or
or
cld
and
int
add
ret
loop
and
sbb
ss
mov
pop
shr
push
loopne
je
push
lods
hlt
xor
test
iret
adc
je
(bad)
jnp
inc
jo
pop
sub
inc
test
pop
ds
test
fdiv
or
push
mov
lahf
and
test
push
jmp
push
mov
sbb
sub
sub
xchg
out
mov
xchg
iret
mov
pop
in
sbb
inc
inc
mov
mov
xchg
and
cs
and
(bad)
movs
int3
mov
inc
ins
jmp
push
mov
adc
mov
fs
loope
cmps
icebp
push
inc
movs
ss
cmc
in
pop
test
mov
stos
jae
imul
mov
mul
sub
daa
outs
inc
shl
fsub
cdq
xor
ret
adc
pop
ss
repnz
xor
lahf
std
adc
push
fistp
jns
repz
iret
ss
mov
fistp
mov
push
dec
mov
sbb
mov
into
out
in
js
sub
dec
(bad)
fsubr
sub
retf
mov
mov
jns
mov
or
fdivr
jge
mov
push
cmp
push
jmp
pop
sbb
add
dec
xor
push
jle
pop
retf
enter
mov
push
jo
mov
add
jb
jmp
mov
pop
aaa
inc
(bad)
rcl
into
mov
or
pop
loope
sbb
ret
jecxz
inc
lahf
jne
jb
xchg
stc
fimul
xchg
mov
cwde
adc
dec
jnp
pop
inc
jl
xchg
pop
(bad)
rcl
xchg
dec
repz
loope
aaa
into
fsub
mov
leave
dec
jl
xchg
fild
push
iret
stos
mov
xlat
out
cmps
jno
retf
in
add
(bad)
bound
gs
cmp
lahf
lock
addr16
movs
(bad)
pop
xor
sub
(bad)
test
adc
xchg
mov
fs
ins
in
mov
cwde
imul
lods
push
jecxz
sub
dec
ret
mov
jmp
jnp
ins
lahf
jmp
in
rol
cmps
and
inc
mul
push
out
mov
rcl
daa
sub
cmp
in
xchg
addr16
jg
mov
and
(bad)
lods
xchg
push
xchg
icebp
jnp
leave
out
add
mov
popa
lods
jge
cli
imul
cmc
inc
mov
and
hlt
and
pop
dec
pop
scas
ja
push
push
cs
mov
push
jmp
push
into
sbb
in
inc
sar
retf
fnsave
xor
(bad)
into
mov
adc
xor
xor
sub
scas
addr16
add
push
add
test
or
xlat
pop
enter
and
std
inc
mov
shl
cmp
cmp
test
xor
and
pop
jle
adc
fld
add
aad
bound
gs
sbb
ror
xor
(bad)
cli
cdq
ins
pop
push
call
fnstsw
cdq
sbb
mov
and
sahf
pusha
and
dec
push
push
scas
jg
add
loop
div
nop
add
cmp
fild
pop
icebp
inc
imul
je
mov
test
sbb
fisub
inc
ret
aad
rcl
and
es
mov
(bad)
adc
movs
call
fild
mov
leave
out
mov
popf
jle
rcr
fisubr
outs
jo
mov
cmps
imul
outs
sub
fldenv
or
mov
mov
pop
into
mov
shr
mov
sar
mov
xchg
ror
pop
sar
loopne
sub
push
fs
repz
cdq
sti
cs
add
shl
cmps
lds
mov
jp
cmp
push
dec
fst
jecxz
xchg
iret
lea
pop
enterw
jmp
push
xchg
movs
jl
cmc
ror
mov
jne
outs
cmp
xchg
xor
adc
xchg
cld
test
jb
test
fimul
jno
and
inc
es
das
or
xchg
lahf
iret
push
jmp
aam
push
xor
pushf
jmp
push
xor
aad
ret
push
xchg
push
sub
jmp
test
gs
inc
into
jl
and
push
add
fsubrp
movs
hlt
mov
push
mov
push
jge
sbb
adc
mov
daa
ins
push
jecxz
cs
cmp
mov
ins
mov
mov
adc
push
arpl
faddp
jg
sti
jnp
or
sar
jb
shl
mov
push
xor
daa
lods
xchg
or
test
out
aas
sub
je
or
xor
pop
mov
fmul
jmp
stos
out
jo
fstp
(bad)
loop
cmp
repz
gs
jns
ja
mov
inc
or
fcmove
mov
pop
ja
aaa
jl
int
push
jns
sub
xchg
(bad)
and
cmp
(bad)
pop
popa
jnp
push
call
out
pop
add
shl
es
pop
xchg
stos
push
nop
das
pop
push
bound
neg
adc
mov
cmp
mov
ja
(bad)
pop
mov
mov
lods
ds
aad
test
icebp
ret
fwait
jmp
leave
push
add
ins
into
mov
mov
or
push
push
jp
or
inc
in
mov
inc
xchg
test
jge
fmul
loopne
xchg
scas
cmp
xlat
mov
adc
and
or
js
xchg
into
cmp
push
icebp
xlat
outs
icebp
scas
dec
add
inc
bnd
js
push
ret
jmp
nop
and
pop
cld
inc
(bad)
repnz
cmp
test
and
mov
dec
stc
jae
lahf
les
test
xlat
fnstsw
lds
xor
sbb
adc
fcomp
jle
test
jno
mov
sbb
ret
mov
add
mov
ds
nop
sub
xchg
cs
mov
stos
pushf
jmp
mov
fldenv
pusha
ins
call
aas
cmp
inc
xlat
xlat
dec
adc
inc
xor
int
push
lods
gs
jl
mov
mov
aad
out
aam
jae
mov
sbb
jle
add
pop
inc
sar
mov
push
adc
out
mov
outs
ds
cmp
push
pop
std
(bad)
aas
xchg
cmp
nop
sbb
lods
les
push
addr16
xor
pop
mov
sbb
retf
int3
aad
fisttp
out
test
pop
push
aas
adc
and
mov
xchg
or
cmp
xchg
push
clc
mov
mov
retf
mov
out
xchg
mov
adc
aad
out
pop
jne
stc
xor
push
sahf
mov
push
cs
pop
xor
sbb
jl
add
push
add
xor
jge
xor
imul
rcl
sbb
js
cmp
addr16
xchg
cs
cli
or
arpl
sti
inc
je
mov
mov
out
mov
or
shl
and
and
test
xchg
int
fcomp
in
jp
push
pop
push
mov
leave
(bad)
push
mov
rcl
mov
imul
mov
das
mov
out
out
in
jp
dec
sbb
jae
(bad)
aas
out
ret
and
shl
les
adc
jb
call
push
mov
icebp
pusha
fcom
aas
pop
ins
scas
addr16
imul
push
call
enter
movs
adc
movs
add
sbb
addr16
jecxz
ja
pop
adc
hlt
mov
sahf
scas
push
pop
test
pop
inc
leave
addr16
arpl
ins
fcomi
mov
pop
cmovae
mov
adc
jle
adc
add
repnz
and
test
cmps
xchg
js
xchg
dec
jmp
in
cmp
jns
push
jo
sub
dec
repnz
sbb
pop
(bad)
pop
jb
pop
mov
mul
icebp
into
add
adc
nop
cmps
shl
pop
lea
es
test
add
inc
jno
pop
popa
iret
sub
lock
loopne
add
jle
in
adc
stc
mov
lea
xor
jae
jg
push
mov
xor
pop
(bad)
jne
rcl
jecxz
or
inc
or
dec
movs
imul
push
aam
mov
sbb
cmp
cmps
shl
mov
mov
jle
fdivr
iret
mov
mov
rol
cmps
jae
pop
jge
iret
cmp
xchg
jb
jg
sub
jne
std
push
out
cmp
stos
shr
in
push
arpl
lods
test
mov
in
popa
(bad)
xchg
sub
mov
div
(bad)
aaa
mov
xchg
sbb
aam
jmp
pop
addr16
mov
shl
dec
mov
addr16
repz
or
cs
cmp
xor
test
jge
icebp
retf
dec
sti
push
inc
scas
cmp
and
std
pop
mov
das
aad
cmc
in
aad
add
ret
in
js
jecxz
cdq
dec
jmp
pop
outs
jno
and
daa
pop
xchg
pusha
fld
jl
push
mov
ds
mov
(bad)
adc
push
and
je
bound
mov
xor
mov
pushf
mov
out
xchg
(bad)
fadd
mov
fnstenv
pop
enter
dec
fldcw
fcomi
dec
nop
mov
push
and
in
or
outs
or
test
cmp
es
(bad)
test
jl
sbb
jbe
fsubr
mov
fimul
hlt
push
xor
fs
ins
loopne
jmp
out
mov
add
mov
shr
mov
in
mov
and
sbb
xor
cmps
dec
retf
pop
push
jae
inc
pop
push
sbb
addr16
cmp
pop
or
cmps
jecxz
loop
int3
sahf
les
jo
int3
in
or
mov
mov
jne
aad
mov
movs
mov
ret
cmc
mov
pop
jp
iret
add
pop
cli
fmul
fcom
add
pop
ret
sub
jae
dec
mov
out
rcl
sbb
adc
mov
mov
in
ds
cs
jg
lea
xchg
and
mov
cli
int
fist
fadd
fstp
sbb
inc
test
sti
cwde
mov
cmp
pop
pop
rol
mov
mov
dec
jns
xor
out
and
test
xchg
cmp
jae
xor
retf
fstp
or
or
outs
jg
push
mov
jo
pop
add
inc
fcmovnb
test
adc
mov
jp
stos
cmp
mov
in
cmp
push
push
fsubp
mov
pop
daa
fidiv
in
(bad)
sbb
pusha
add
add
mov
sahf
inc
icebp
jmp
mov
and
inc
mov
xchg
fsub
mov
pop
inc
add
add
call
mov
stos
adc
jl
mov
jg
mov
in
(bad)
xchg
inc
mov
sub
ins
setne
sub
adc
xor
push
lods
mov
mov
ins
fldcw
stc
mov
fst
jo
nop
retf
sub
shl
sbb
lea
arpl
cwde
mov
cli
hlt
mov
push
cmp
std
push
inc
movs
xchg
cwde
xchg
test
jbe
pop
push
ss
mov
or
cmp
stos
xor
xchg
daa
ror
into
iret
push
(bad)
xor
mov
fisub
pop
push
adc
and
jle
stos
or
jb
cmc
mov
add
push
add
add
jp
ja
pop
ins
jg
iret
hlt
cdq
stos
pop
cmp
loop
inc
push
dec
imul
sub
popa
inc
pop
jnp
or
cmp
sbb
cmp
cmp
add
scas
or
lods
shl
in
pop
les
jle
and
imul
(bad)
cmc
jg
jne
mov
out
fist
fdivr
mov
add
cmc
add
cdq
add
xor
ja
push
call
cmp
call
inc
adc
outs
pop
mov
fdivrp
xchg
jecxz
jge
cmp
mul
add
pop
lods
adc
daa
fnsave
(bad)
mov
sbb
cmp
jmp
xchg
jl
inc
(bad)
sbb
inc
mov
movs
iret
sub
cdq
push
xchg
scas
mov
mov
fnstenv
or
inc
shl
sub
dec
pop
mov
push
rol
or
xchg
dec
stos
xor
imul
push
mov
shr
add
mov
dec
aaa
push
cs
xchg
xchg
test
adc
jnp
push
fst
jmp
mov
jbe
stos
rol
icebp
sbb
fndisi(8087
jo
jp
xchg
push
cmp
xor
dec
sub
pop
or
dec
lea
mov
retf
adc
mov
xchg
(bad)
call
inc
jb
cdq
fwait
adc
cdq
and
rcl
or
(bad)
sbb
movs
dec
add
dec
in
sub
pop
push
and
xor
icebp
add
ret
dec
or
sub
fs
mov
xchg
sbb
xchg
mov
mov
lea
out
movs
mov
jne
sar
cmp
loopne
fbld
in
out
shl
add
push
adc
in
mov
inc
js
ins
or
push
iret
xlat
add
mov
outs
sub
or
jmp
ins
enter
xor
scas
(bad)
push
xor
das
loopne
aas
into
ins
add
lahf
es
rcr
sub
or
jbe
and
pop
ja
std
leave
and
or
cmps
and
jmp
sti
int3
call
iret
push
ins
inc
jo
pusha
jmp
scas
lock
sub
xchg
push
ror
cmp
and
fistp
jno
icebp
and
aaa
repnz
sar
or
push
loopne
adc
and
pop
sub
xchg
cmp
cmc
push
inc
xor
ss
mov
mov
jnp
xchg
jne
(bad)
hlt
(bad)
repz
stos
fcom
push
test
imul
jg
sbb
fidivr
lahf
inc
cmp
sub
ins
pop
xchg
mov
sbb
xchg
lea
jmp
hlt
icebp
stos
rcr
pop
fs
repnz
out
inc
push
xchg
mov
pop
lahf
xchg
pop
sbb
jnp
mov
ror
jae
frstor
xchg
sub
fmul
(bad)
stos
xlat
fidivr
mov
into
enter
js
xchg
fnsave
ficomp
test
mov
(bad)
data16
inc
mov
jge
and
jecxz
arpl
push
sbb
adc
sub
imul
sub
(bad)
sub
pop
mov
stos
adc
jmp
mov
ja
ret
mov
pop
or
outs
inc
sbb
movs
pop
add
(bad)
ins
cmp
mov
jge
scas
mov
out
or
div
mov
mov
scas
ja
ins
add
fwait
xor
js
push
inc
xchg
add
js
hlt
in
sub
dec
ins
test
aas
lds
inc
and
mov
dec
aas
icebp
in
repz
mov
sub
jnp
not
or
pop
adc
cmp
shl
cmp
dec
mov
xchg
cmp
cmp
fild
aas
pusha
and
inc
shr
std
and
aaa
mov
pushf
fild
int
cmp
push
pop
(bad)
mov
aam
sub
dec
sbb
in
mov
jecxz
cld
rcl
sub
loopne
jae
add
and
test
iret
jecxz
cli
ror
mov
mov
mov
jecxz
inc
sbb
mov
dec
cs
repnz
or
ds
test
push
bound
sbb
repnz
(bad)
mov
js
mov
jl
ds
(bad)
aas
push
pop
sub
dec
dec
pop
sbb
jg
imul
add
pop
into
rcl
out
ja
fnstsw
repz
jns
in
xchg
jmp
sub
addr16
inc
jns
sahf
imul
test
addr16
mov
mov
lods
ins
ins
icebp
nop
mov
pop
je
and
dec
add
pop
jmp
dec
rol
xchg
push
mov
sahf
int3
mov
popa
dec
lods
jb
bound
imul
mov
sub
cmp
int
xor
(bad)
and
inc
loope
sbb
pusha
das
xchg
hlt
adc
push
popf
adc
xchg
mov
push
ret
jbe
repnz
add
pop
leave
inc
cmp
inc
fldcw
mov
push
mov
jno
out
(bad)
cmp
cmp
call
jns
(bad)
call
dec
add
pop
inc
inc
cmp
jecxz
lock
not
shl
aas
call
arpl
imul
add
shl
jns
push
(bad)
out
outs
mov
pop
daa
xchg
or
jne
xchg
sub
cmp
cmp
sub
cmp
dec
rcr
fcmovu
jne
jecxz
fimul
and
mov
gs
mov
pop
add
nop
inc
mov
int3
cdq
or
mov
out
(bad)
fisub
push
mov
inc
pop
dec
in
cs
out
pop
pop
pop
dec
xchg
lds
leave
xchg
xchg
push
inc
mov
sub
jl
mov
xor
mov
inc
xlat
add
xor
ja
push
sub
xor
dec
dec
test
mov
dec
sti
jge
cmp
xchg
nop
pop
and
mov
fld
out
mov
mov
pop
lods
cli
test
xor
stc
fwait
pop
xchg
adc
retf
lds
dec
data16
xor
loopne
mov
imul
add
adc
or
popf
popf
inc
arpl
sbb
sbb
jne
adc
sbb
scas
jge
dec
test
hlt
push
out
sbb
sub
jle
lods
leave
sub
cli
loope
dec
aam
nop
dec
int3
dec
cmp
int
ror
xor
or
pop
fsub
xor
sub
mov
cmp
int
enter
nop
and
cmps
xor
shr
data16
faddp
int
std
jnp
cmp
xchg
push
(bad)
aaa
cwde
adc
in
clc
loope
xlat
call
cli
jo
lds
sub
jo
movs
pop
(bad)
in
and
add
push
fidiv
sub
ficom
sbb
jnp
(bad)
rcr
cmp
dec
icebp
inc
mov
out
sub
dec
scas
sar
xchg
xchg
add
mov
xlat
cmp
dec
pushf
mov
or
add
pop
es
test
inc
cwde
das
xor
push
mov
daa
and
jno
cmp
mov
mov
inc
jns
pop
jne
push
add
push
cmc
or
pop
mov
xor
iret
push
repz
mov
bound
into
in
dec
xor
cs
jno
dec
int3
pop
dec
push
inc
sub
and
stos
in
loopne
jl
mov
push
push
push
(bad)
push
(bad)
hlt
mov
das
pop
movs
mov
jge
ror
test
mov
pushf
sub
not
out
jns
cmps
pop
and
mov
dec
cwde
pop
cmp
mov
jle
jnp
jae
inc
imul
pop
inc
dec
sub
arpl
mov
repnz
das
loopne
cmp
ins
push
out
stc
retf
xor
clc
(bad)
or
xor
and
xor
mov
jbe
xor
push
dec
sbb
cmp
es
push
mov
or
dec
std
out
mov
xchg
popa
add
outs
pop
dec
adc
std
or
(bad)
stc
call
es
lods
std
sub
out
jnp
(bad)
xchg
je
mov
xchg
dec
test
fcmovnu
mov
les
fiadd
fcomp
cmp
js
pop
inc
std
xchg
inc
mov
rep
add
and
in
imul
clc
and
movs
add
or
iret
pop
sbb
xor
cmp
bound
xor
add
sub
int3
adc
ins
jmp
mov
dec
(bad)
push
jmp
scas
fs
mov
sti
and
mov
in
push
cld
add
fnsave
imul
shl
jg
jp
es
idiv
hlt
jg
xchg
call
mov
cmp
imul
gs
sbb
jg
(bad)
xor
adc
cmp
pusha
pop
jo
cs
out
dec
pop
mov
outs
add
sub
inc
inc
mov
cmp
cs
dec
add
mov
out
sbb
inc
in
jbe
arpl
inc
fcomip
fist
addr16
dec
shl
jnp
adc
ds
sbb
fld
dec
adc
jl
jmp
mov
adc
nop
lock
and
gs
cld
sub
xchg
dec
xor
lea
lea
cld
ret
xor
add
dec
in
xor
xor
pop
repz
pop
sub
enter
pop
jmp
retf
fdiv
stc
retf
mov
lock
in
cld
pop
push
rcl
fstp
pop
push
adc
push
pop
pop
jo
push
mov
in
ds
jecxz
jae
repnz
rol
ins
pop
fbld
or
cwde
out
push
xchg
add
xor
dec
adc
mov
imul
mov
imul
mov
fsubr
sahf
les
je
sub
popf
or
into
cmp
push
leave
push
mov
std
sbb
into
mov
movs
pop
out
push
xchg
dec
fbld
pop
fucomp
push
ins
sub
(bad)
sub
or
retf
fs
sbb
mov
push
scas
dec
sbb
pavgw
jp
xor
push
ret
sbb
js
jl
enter
or
add
loopne
jno
mov
fisubr
jp
in
xchg
push
lods
gs
mov
enter
imul
aam
push
mov
pop
mov
dec
pusha
test
or
test
push
stc
add
push
in
std
(bad)
mov
(bad)
mov
nop
pop
pusha
jne
sub
xor
in
mov
ret
iret
push
xor
std
cwde
inc
mov
into
inc
sahf
dec
lahf
(bad)
cmps
jmp
dec
aaa
and
xor
sub
push
lahf
not
xor
and
mov
push
adc
mov
out
inc
adc
outs
int
cmp
mov
pop
inc
movs
js
mov
mov
pop
and
jns
inc
xor
pusha
xor
inc
adc
aaa
inc
hlt
sbb
add
rcr
shl
sahf
dec
test
xchg
(bad)
into
pop
fnstenv
jl
mov
into
(bad)
adc
int
add
cmp
sar
mov
cmp
cmp
cwde
inc
pop
pusha
pop
inc
scas
push
pop
add
mov
cli
push
xor
add
push
mov
add
into
mov
sbb
or
outs
dec
and
push
mov
neg
xlat
add
jmp
retf
(bad)
mov
bound
pop
or
inc
or
je
dec
mov
outs
sub
call
in
std
cmp
jge
shr
sub
das
cmps
dec
imul
out
arpl
mov
and
dec
(bad)
(bad)
sahf
add
cmp
(bad)
nop
xchg
mov
inc
bound
pusha
xchg
mov
push
sar
pop
mov
(bad)
jno
loop
push
(bad)
push
(bad)
lahf
jl
or
push
or
adc
rcl
xor
jecxz
push
fcomp
xor
jbe
xchg
cld
cmp
shl
fwait
ins
pop
inc
cmc
popf
int
neg
ffreep
jb
dec
mov
repnz
inc
rcpps
enter
pop
dec
adc
adc
jmp
xchg
mov
pop
and
dec
lea
pushf
out
cmp
in
push
in
jle
lods
cs
cmc
mov
gs
mov
cmp
push
mov
cmp
mov
dec
mov
fwait
jp
(bad)
cmp
popa
sahf
das
xlat
aam
daa
push
test
push
jmp
cmp
push
push
pop
(bad)
mov
setl
pop
push
arpl
sbb
repnz
pop
cli
pop
lock
and
in
or
cmp
(bad)
jg
sub
movs
xlat
in
mov
xchg
jecxz
xchg
addr16
mov
pop
jmp
jg
and
sti
call
adc
dec
je
dec
pop
xor
jno
push
je
add
and
pop
ss
movs
push
into
push
enter
pop
mov
cmps
mov
mov
outs
inc
add
cmp
dec
ret
and
sub
cwde
daa
jb
jmp
xchg
ds
sbb
pop
push
rep
ficomp
pop
push
adc
jbe
lock
pop
push
in
lods
cli
gs
sbb
jecxz
cmp
add
push
push
loop
sbb
test
jne
mov
fisubr
popa
jg
adc
jae
test
xor
or
xlat
lods
fwait
xlat
or
stos
sbb
test
retf
std
pop
push
test
pop
mov
pop
xchg
push
enter
test
sub
jecxz
push
push
and
shl
xchg
xchg
pop
int3
cmp
dec
fmul
mov
cdq
es
(bad)
jae
frstor
nop
and
mov
dec
adc
addr16
sub
push
push
cmp
int
inc
int3
lds
imul
xchg
ins
ds
sub
cld
cmp
not
out
shr
cmp
pusha
sub
sub
mov
jns
ja
out
std
cmp
retf
shr
push
mov
dec
shl
in
movnti
jb
mov
loopne
dec
jne
adc
cmps
retf
push
cmp
es
and
arpl
cmps
cmps
movs
inc
adc
jno
jae
pop
arpl
lock
ret
push
pop
xchg
outs
mov
dec
and
outs
repnz
imul
test
cs
sahf
xor
cdq
inc
mov
mov
lahf
xchg
mov
jmp
cwde
pushf
scas
sbb
es
in
dec
xor
cmp
lds
xor
cs
rol
(bad)
jp
popf
and
xchg
cli
leave
(bad)
adc
ret
mov
je
mov
cmp
sub
inc
scas
pop
rol
inc
push
test
sbb
xor
pop
scas
jmp
push
jo
jbe
es
sbb
fs
dec
adc
xchg
gs
jle
xchg
mov
aas
retf
js
(bad)
mov
retf
sti
daa
or
xchg
mov
out
or
mov
dec
aaa
xchg
jo
cdq
mov
test
cmps
int3
cmps
pop
adc
fwait
enter
xor
out
cmp
ss
pop
or
sub
xor
xor
in
jo
cmp
or
mov
or
jns
aad
pop
mov
fwait
mov
pop
aad
xchg
rcr
dec
dec
fisub
je
int3
dec
xchg
repnz
lock
mov
fldcw
inc
retf
dec
pop
push
and
pop
(bad)
add
call
jl
and
dec
movs
inc
fstp
ret
adc
call
add
fldcw
das
sti
xchg
mov
sub
clc
pop
movs
aaa
add
push
ja
dec
or
shr
adc
imul
repnz
imul
aam
and
addr16
cli
xchg
movs
mov
retf
sti
shr
xchg
retf
cmp
retf
je
jmp
mov
hlt
dec
in
push
in
shr
aad
into
ja
cld
sbb
or
mov
xor
jnp
vcvtdq2ps
mov
fadd
inc
or
fcomp
pushf
xchg
rcl
push
setno
ror
cmp
sub
in
int
aas
lock
or
pop
inc
adc
inc
call
ins
and
push
lods
(bad)
mov
xlat
xor
aas
repnz
lahf
jmp
repz
shl
div
or
out
lock
push
stc
xchg
mov
call
aam
sar
retf
pop
ror
mov
add
sahf
adc
dec
rol
outs
sahf
imul
push
jnp
xchg
std
mov
or
pushf
lahf
(bad)
out
mov
rol
pop
cmp
call
les
pushf
div
in
mov
(bad)
out
das
sti
pop
imul
sub
xor
dec
sub
sahf
jae
cmps
iret
pop
cli
mov
lds
call
add
fidiv
or
nop
adc
push
inc
btr
push
xor
pop
add
xchg
fisubr
add
jmp
jl
js
push
jae
pop
or
and
dec
jb
les
jo
pushf
jnp
pop
call
pcmpeqw
xor
pusha
xor
add
sti
in
movs
pop
jno
hlt
cdq
xchg
mov
rep
inc
jecxz
jbe
out
jp
mov
aad
cmp
shl
jecxz
pushf
mov
(bad)
cmps
div
imul
xchg
push
pop
(bad)
ror
not
jmp
xor
xchg
jns
bound
push
jnp
rcr
jbe
aam
mov
(bad)
jp
jl
bound
xor
in
cmp
mov
sbb
movs
dec
je
(bad)
adc
jbe
out
mov
cmp
jg
mov
mov
mov
pop
rcr
push
fidiv
cmps
pushf
into
lock
sub
inc
add
mov
cmc
repz
xchg
or
lock
sub
add
xor
xor
and
adc
(bad)
or
push
push
icebp
inc
lahf
bound
not
rcl
fsubr
addr16
and
in
popa
mov
and
test
jo
push
sar
cmp
mov
int
(bad)
movs
stos
jae
or
push
sbb
add
push
mov
or
aas
popa
dec
pop
cmp
gs
dec
push
xchg
mov
xor
and
jne
xlat
push
loop
sbb
inc
push
daa
in
xchg
add
imul
jmp
sbb
or
xchg
out
mov
cld
push
jns
lahf
xor
add
hlt
int
test
mov
mov
bound
inc
jo
in
xchg
leave
push
and
in
fimul
ret
or
das
xor
sbb
cmp
add
cmp
pop
or
movs
jnp
test
cmp
xor
and
arpl
stc
xor
sbb
sbb
fmul
retf
icebp
cld
out
enter
mov
and
sbb
icebp
xlat
dec
xchg
mov
pop
adc
outs
mov
dec
jne
dec
and
mov
sub
pop
xchg
jns
mov
shr
mov
cmp
mov
out
xor
in
mov
test
mov
push
mov
adc
xchg
push
arpl
sbb
add
cs
mov
cmp
mov
scas
add
fidiv
aad
popf
mov
mov
lahf
xor
cmp
pop
pop
push
xchg
or
or
mov
dec
add
bound
test
xlat
les
jbe
fcom
dec
xor
scas
push
cdq
cmps
jl
pop
test
sub
mov
mov
retf
je
push
sahf
push
bound
icebp
dec
pop
popf
push
and
xor
retf
push
cli
pop
fisub
add
dec
outs
pop
xor
mov
mov
or
jne
leave
(bad)
out
mov
in
mov
movs
imul
pop
nop
push
jecxz
movs
add
or
popf
mov
jno
add
hlt
je
or
or
call
adc
sbb
xor
jge
mov
rol
pop
jge
lock
sub
dec
jmp
add
enter
and
mov
retf
in
jge
call
in
outs
mov
int
imul
sub
mov
pop
xor
enter
and
cmp
xor
addr16
pop
lock
cmps
std
xchg
test
or
aas
test
cmp
lahf
cmps
cmp
ins
sbb
int
mov
popf
jecxz
nop
pushf
aad
jnp
inc
xor
jnp
popa
cmc
clc
xor
adc
ret
loop
xor
cli
aam
xchg
mov
jno
(bad)
int
jae
mov
leave
jp
or
or
push
jg
push
adc
out
daa
loop
mov
aaa
sub
or
(bad)
aad
dec
cmp
xchg
rcr
xchg
mov
xchg
cmps
add
pop
jnp
and
mov
daa
xchg
pusha
test
inc
aas
sbb
arpl
or
ins
mov
repnz
shl
movs
cmp
movs
inc
mov
cwde
dec
rcr
mov
or
mov
adc
sbb
xchg
and
push
inc
xlat
nop
fiadd
imul
dec
sar
test
fld
lods
pop
call
xchg
adc
xor
lods
scas
sahf
test
adc
sbb
ins
cmp
(bad)
fdiv
fild
xor
push
sbb
adc
repnz
add
rcl
sub
dec
stos
test
out
mov
pop
xchg
pop
jns
repnz
sbb
push
loopne
fstp
xor
fisubr
cmp
adc
imul
xor
adc
pop
ret
fnstcw
mov
out
xchg
inc
inc
iret
add
push
sub
rol
test
cmps
push
jmp
push
sbb
jbe
mov
add
push
dec
mov
(bad)
mov
and
mov
sar
inc
add
sub
cwde
mov
jno
jmp
mov
xchg
mov
mov
repz
fidiv
mov
test
aas
lods
lock
mov
test
add
sub
pop
ds
pop
sbb
sbb
cmp
mov
jnp
fdiv
and
push
pop
jae
push
(bad)
push
sub
adc
sub
mov
push
mov
lods
cli
loop
shl
stc
cmps
outs
(bad)
and
and
mov
cmp
hlt
pop
cli
push
add
aas
mov
shr
sbb
pop
enter
or
pop
fistp
inc
(bad)
test
imul
xor
jnp
lock
int
ins
shr
and
cdq
or
icebp
loope
scas
mov
or
xchg
add
ret
push
dec
sbb
call
pop
pop
rep
and
(bad)
xchg
mov
push
push
(bad)
call
or
rcl
sbb
jmp
jg
and
push
stc
fisubr
and
daa
mov
js
adc
cmp
movs
xor
jecxz
add
cwde
xchg
xchg
stc
rol
fld
push
mov
aam
add
jg
inc
jo
mov
mov
mov
rcl
mov
or
pop
imul
adc
dec
or
mov
or
aad
clc
repnz
out
mov
arpl
push
ja
daa
loopne
mov
aaa
sub
vpperm
popa
pmovmskb
cld
and
jns
hlt
xor
es
jmp
push
mov
mov
push
adc
dec
ja
test
adc
cmp
pop
dec
enter
hlt
or
sbb
out
and
or
dec
push
(bad)
iret
repnz
adc
adc
leave
fwait
out
adc
mov
loop
sub
jno
add
mov
fldenv
ret
js
inc
out
cmp
scas
nop
mov
add
and
add
gs
xor
push
inc
nop
jge
mov
fstp
cli
leave
or
inc
adc
cld
out
iret
stc
rcl
jns
(bad)
or
jno
stos
je
inc
fnstenv
or
dec
xchg
ins
sti
in
pop
mov
leave
pop
inc
mov
push
sbb
out
imul
ja
retf
iret
sbb
push
sbb
vpunpcklbw
and
(bad)
pop
outs
jmp
cmp
or
pop
aam
outs
jge
pushf
mov
je
mov
daa
(bad)
mov
pop
and
mov
pop
popf
mov
ret
sti
cmps
in
mov
xchg
or
mov
cmp
je
mov
arpl
pop
jno
jae
inc
pop
imul
aas
repnz
dec
mov
dec
mov
cwde
bound
pop
pop
add
lahf
int3
add
sbb
popf
in
jb
rol
iret
out
test
cmp
jmp
retf
int3
stos
test
and
ds
mov
push
adc
imul
push
(bad)
in
mov
push
repnz
xchg
fsub
ins
inc
dec
ret
shr
imul
int3
mov
shr
sub
mov
cli
or
cmp
std
(bad)
pop
mov
dec
rcl
push
mov
lds
jbe
(bad)
stos
mov
adc
fwait
gs
push
int3
(bad)
je
mov
fs
add
pop
dec
dec
xchg
sub
aas
pop
iret
mov
dec
dec
sar
leave
cmp
xchg
cld
hlt
fisttp
mov
mov
fstp
mov
call
mov
dec
iret
popa
xor
sub
xchg
push
xor
jnp
cmp
outs
les
lods
imul
xor
mov
sbb
cwde
jno
xchg
fmul
or
jo
add
pop
retf
inc
xchg
xchg
lock
je
sub
(bad)
sti
mov
push
and
test
xlat
popa
int3
in
movs
shl
sbb
call
cwde
pusha
icebp
push
jno
ret
nop
mov
mov
or
add
ins
test
push
xor
mov
cli
adc
mov
mov
sub
pop
mov
push
in
push
inc
mov
pop
pop
lock
fild
mov
and
cmp
(bad)
jmp
fwait
jp
mov
adc
popa
and
dec
sahf
xchg
rcl
add
mov
mov
jp
out
inc
xchg
jnp
or
rcl
mov
pop
adc
mov
ret
xor
(bad)
jbe
int
icebp
cmp
sub
cmps
jns
mov
adc
dec
call
push
pop
sar
xchg
imul
aad
cmp
sub
mov
in
icebp
add
in
sti
and
cmp
shr
hlt
fisttp
jl
dec
(bad)
pop
test
cmc
sbb
pop
in
mov
sbb
test
or
retf
ror
xchg
cmp
punpcklwd
jns
mov
jne
fwait
in
(bad)
fild
inc
repz
jae
push
adc
lods
sub
add
dec
enter
lock
stc
xlat
and
int3
in
inc
lds
int
fwait
(bad)
mov
mov
dec
daa
aaa
pop
xlat
popf
or
shr
and
dec
aas
jecxz
push
adc
imul
adc
inc
scas
pop
cs
test
sbb
push
mov
cmp
iret
xor
pop
aaa
fdivr
inc
(bad)
xchg
std
mov
lods
daa
fldenv
push
and
in
pop
mov
mov
mov
sub
jno
(bad)
cmp
jecxz
(bad)
movs
sub
js
test
dec
pop
or
sub
repnz
xor
xchg
in
sub
adc
lods
push
mov
jmp
mov
mov
repnz
xor
mov
rcl
pop
jo
adc
mov
inc
cmp
lods
out
outs
jmp
inc
dec
fst
frstor
mov
imul
shl
add
push
and
outs
add
lahf
das
cdq
dec
test
push
add
sbb
ins
sbb
int
push
mov
jmp
shr
popa
push
cmp
inc
in
outs
xor
into
and
cld
mov
dec
jl
adc
sar
xchg
adc
add
aam
movs
xchg
rol
fmul
repnz
and
mov
jae
pop
push
sub
jbe
sbb
mov
or
clc
lds
push
dec
adc
ja
sbb
push
inc
leave
sub
push
dec
inc
inc
pushf
inc
jae
xor
das
prefetch
stc
adc
push
push
in
daa
xor
ins
mov
fprem1
(bad)
in
cmp
aas
pop
push
push
pop
add
cmp
repz
jle
(bad)
pop
(bad)
pop
je
adc
leave
out
lea
cwde
or
sbb
and
imul
adc
mov
push
sbb
jbe
inc
push
cmp
test
cmps
and
inc
or
sbb
fisttp
aaa
(bad)
mov
enter
test
out
and
xchg
scas
cdq
neg
aad
adc
xchg
out
or
mov
fdiv
mov
pop
cmp
rcr
mov
or
cmps
xor
sub
jb
or
add
pusha
popf
pop
call
fcmovnu
cmc
in
add
mov
jecxz
cli
sbb
cs
pop
lea
jg
stos
xor
adc
stos
jne
stc
cmp
test
add
add
mov
enter
fild
mov
fsubr
and
sbb
retf
stos
out
rol
(bad)
(bad)
out
or
mov
mov
test
and
and
push
cwde
retf
inc
dec
pushf
cmp
sub
inc
aas
pop
out
(bad)
and
ss
aas
fsubr
dec
push
sahf
out
sbb
jmp
adc
(bad)
cmp
xlat
add
dec
cmp
bnd
pushf
push
into
and
inc
mov
jbe
lods
pop
scas
nop
dec
retf
cmp
jge
mov
push
inc
loopne
test
add
jb
push
add
cld
retf
cmps
iret
add
jmp
fisttp
sbb
jb
dec
test
jno
scas
data16
add
cli
fistp
xchg
scas
test
sbb
(bad)
dec
icebp
or
les
in
movs
push
jp
(bad)
hlt
mov
jne
std
pop
jle
mov
cmp
mov
dec
pop
jmp
dec
ins
xchg
and
shl
jmp
push
aas
imul
repz
call
scas
xor
jmp
or
loop
sbb
and
add
mov
xor
imul
cmc
ins
inc
push
test
dec
inc
or
mov
jo
push
mov
rcl
jb
aas
add
test
stc
or
imul
jmp
fbld
jmp
(bad)
aam
stos
dec
cs
leave
cli
xor
cmps
in
xchg
mov
push
push
pop
inc
ret
adc
mov
dec
loope
sub
outs
dec
out
xchg
push
sub
sbb
pop
mov
adc
mov
xchg
repz
jo
ss
jno
add
sbb
jg
adc
xchg
aad
imul
iret
int
(bad)
push
pop
cmp
push
adc
xchg
adc
cmp
sub
dec
push
jns
and
imul
adc
fnsetpm(287
fild
js
hlt
inc
jae
xor
lock
in
cmp
out
push
add
xor
mov
or
rol
test
ss
jmp
sar
mov
inc
rcr
imul
inc
popf
in
retf
lods
movs
push
cmp
mov
clc
retf
mov
xor
and
adc
jo
sar
sbb
out
sub
adc
loopne
xchg
rcl
movs
sbb
dec
jl
popa
cld
pop
and
push
(bad)
(bad)
jmp
mov
mov
sub
out
jae
cwde
test
xor
pop
movs
inc
add
and
mov
mov
cmps
or
(bad)
arpl
pop
add
mov
repnz
ret
pop
mov
out
aad
and
pusha
or
push
or
pop
jle
mov
add
adc
sbb
pushf
mov
cmp
and
in
enter
cmp
push
pop
into
movs
or
push
sbb
xor
retf
sti
add
out
push
cmp
push
fcomp
push
call
cmps
xlat
int
jge
sbb
into
cdq
xchg
mov
xor
aas
lods
cmp
pop
mov
(bad)
sbb
jae
loope
and
jns
test
pop
add
mov
xor
in
xchg
xchg
stos
test
or
out
pop
out
mov
jmp
aam
jp
jg
fstp
out
mov
pop
sub
sbb
push
ds
and
loopne
int
sbb
jg
adc
jle
dec
sub
jae
cmps
mov
mov
inc
arpl
mov
enter
sub
pop
dec
mov
xchg
pop
xor
mov
das
mov
mov
jbe
or
cmp
sbb
sti
mov
mov
ret
mov
stos
call
xor
loope
pop
cmp
cmps
dec
dec
push
popf
test
out
pop
inc
sub
lods
cmps
test
jle
bound
push
mov
lock
aad
push
mov
inc
fnstcw
push
cli
inc
cmp
bnd
les
test
call
loope
push
or
fist
idiv
adc
add
popf
retf
pop
jb
pop
jns
loop
jb
test
jmp
add
inc
call
dec
out
ins
xor
inc
dec
cli
dec
pop
outs
mov
sbb
(bad)
dec
jbe
sbb
pop
popa
sbb
xchg
add
mov
sub
das
add
push
(bad)
and
cmp
fidiv
xor
es
inc
or
jmp
fnsave
mov
xlat
js
dec
outs
data16
mov
push
mov
xchg
or
ret
call
add
cmp
jecxz
es
adc
fcom
ret
imul
dec
sar
pop
sub
aad
sub
jbe
sub
mov
(bad)
pop
sbb
fisttp
xchg
mov
call
test
cmp
pop
adc
inc
je
sbb
loopne
dec
cmp
fistp
adc
sbb
push
dec
mov
loopne
adc
jae
(bad)
(bad)
jnp
pushf
in
xchg
rcr
es
mov
jle
sbb
sbb
(bad)
arpl
push
cmp
push
xchg
xor
cmp
movs
test
cmps
sbb
int
mov
xor
add
imul
mov
test
mov
inc
mov
int3
arpl
mov
xor
fnstcw
in
jns
adc
add
add
(bad)
in
out
bound
hlt
add
ret
rol
xchg
xchg
mov
inc
jnp
fsub
loope
mov
lods
and
pop
xchg
dec
pop
and
mov
xchg
sub
mov
push
loope
out
adc
mov
loop
shl
bound
mov
iret
push
push
jle
add
push
ficomp
movs
or
test
or
cmp
push
shl
ins
or
ds
nop
popa
mov
or
jecxz
sbb
stos
sub
scas
mov
retf
jl
cmp
fcom
iret
sbb
ja
nop
dec
dec
pushf
dec
mov
ins
add
or
fbstp
mov
out
push
jg
mov
test
ret
loopne
retf
les
sub
daa
scas
sahf
xor
and
jb
fild
int3
stos
mov
adc
or
mov
xchg
scas
dec
jg
ja
cmp
and
loope
mov
cld
cwde
cmps
sbb
cmps
mov
int3
ins
das
sbb
xlat
(bad)
cmp
jno
mov
shr
pop
xchg
(bad)
pop
add
pop
inc
sub
sahf
xchg
nop
jp
inc
std
(bad)
not
in
xchg
dec
mov
pop
cli
mov
and
xchg
push
inc
imul
les
jle
sub
in
push
dec
repnz
jge
movs
xchg
nop
jbe
xchg
jne
ret
or
pushf
hlt
fisub
mov
xchg
dec
and
push
test
xchg
ret
inc
test
jmp
xchg
test
mov
cmp
mov
lods
(bad)
in
out
mov
dec
mov
mov
and
mov
enter
jnp
repz
je
in
out
xchg
adc
add
xor
sub
call
jmp
mov
jb
retf
ret
pusha
retf
mov
cwde
into
(bad)
retf
fs
cmp
mov
mov
cmp
gs
jge
inc
jg
out
js
movs
or
sub
fstp
ror
mov
mov
mov
and
fidivr
push
das
enter
ror
push
add
lds
mov
cld
test
ret
inc
popf
dec
out
jae
jmp
clc
cld
cmp
dec
adc
inc
ins
lea
pop
daa
xor
mov
and
in
sub
sar
int
outs
xor
jb
fisttp
cwde
xor
sbb
iret
xchg
leave
xchg
adc
push
movs
ins
mov
bound
mov
pop
cli
call
(bad)
loope
not
in
retf
and
mov
pop
lahf
fimul
pop
jge
mov
cmc
adc
mov
mov
pop
imul
jae
xchg
or
xor
dec
mov
or
mov
inc
mov
lock
sub
inc
lahf
pcmpeqw
pop
sbb
pop
mov
jp
jp
movs
daa
inc
popf
rcl
fmul
ror
outs
inc
cdq
test
rcl
push
push
ins
ja
icebp
adc
fisub
retf
push
hlt
sub
hlt
stc
or
aaa
jmp
mov
stos
iret
daa
dec
hlt
in
jmp
jp
or
fst
jnp
cmp
popf
and
sahf
retf
sub
mov
cwde
shl
cdq
jmp
dec
xchg
sbb
and
mov
push
xor
sub
int3
jecxz
(bad)
xor
sub
lea
jmp
jbe
ret
push
dec
push
gs
pop
daa
jecxz
and
adc
bound
dec
push
or
popf
clc
cwde
add
mov
mov
jno
stos
ret
mov
xchg
fcom
sub
test
push
fidiv
pop
out
(bad)
out
movd
test
mov
mov
mov
rcl
push
pop
pop
xchg
mov
and
inc
daa
add
repnz
mov
pop
inc
adc
mov
and
mov
sub
mov
es
push
sar
jns
dec
movs
stos
lahf
sti
push
dec
fisttp
sbb
push
(bad)
out
(bad)
sti
and
jmp
push
scas
push
xchg
pushf
out
sbb
out
rol
int3
sub
ins
xor
and
xchg
push
in
pushf
sub
stc
in
jno
out
(bad)
gs
push
adc
out
pop
xor
clc
inc
inc
or
fcmovne
jmp
jne
push
xor
cmc
addr16
(bad)
sub
aaa
push
lock
(bad)
scas
cmps
mov
push
mov
add
ret
fstp
sub
stos
popa
push
out
loop
das
add
(bad)
and
(bad)
fdiv
arpl
test
in
push
iret
(bad)
inc
push
test
mov
shl
and
fs
sar
jno
jp
aad
and
mov
fisttp
stos
dec
(bad)
(bad)
stc
inc
test
sbb
cmp
xor
loop
cs
pusha
stc
mov
pusha
mov
cmp
sti
sub
xlat
es
xor
pop
fadd
jae
cmp
mov
mov
test
daa
xor
inc
dec
xor
push
retf
dec
adc
push
mov
in
xchg
data16
jge
jecxz
popa
or
cmps
outs
mov
cld
sbb
jne
adc
cmp
test
lea
fisttp
adc
daa
aas
test
xor
lea
dec
push
das
frstor
out
stos
(bad)
sub
lahf
les
ins
inc
mov
pop
dec
ins
mul
sahf
push
push
mov
retf
sahf
add
xor
daa
es
int
fs
ins
dec
ds
das
push
or
jne
dec
or
lods
sahf
inc
mov
xor
mov
enter
leave
iret
adc
retf
and
pop
shl
ror
add
shr
imul
add
xor
dec
add
sbb
out
cs
test
push
or
in
jmp
push
inc
cmps
(bad)
movs
retf
mov
iret
pop
test
and
xchg
outs
mov
movs
test
shl
mov
adc
push
cmp
es
stc
loope
sbb
scas
push
hlt
adc
adc
xor
outs
push
shl
mov
mov
pop
stos
mov
(bad)
xchg
fwait
cmp
shr
pop
daa
adc
(bad)
ds
jecxz
mov
xchg
nop
test
test
(bad)
(bad)
jge
push
add
call
dec
and
test
je
call
es
iret
and
scas
icebp
(bad)
mov
call
leave
adc
jp
sbb
sub
jne
test
test
sbb
mov
arpl
aas
dec
pop
movs
scas
push
popa
scas
jb
sub
sahf
add
add
cli
xchg
pop
mov
cmp
push
aas
and
(bad)
mov
enter
adc
hlt
fisubr
xor
mov
mov
add
xor
mov
out
mov
sub
ficomp
not
mov
loop
xor
pop
push
adc
(bad)
or
inc
fwait
mov
ds
adc
cwde
shl
pop
and
push
shl
loop
mov
mov
out
outs
add
xor
fisub
in
xchg
pop
daa
and
and
iret
jb
adc
(bad)
retf
jmp
ins
dec
xchg
cmp
adc
iret
in
jge
fnsave
arpl
dec
xchg
js
imul
dec
or
or
dec
cmp
xchg
pop
mov
ficomp
pop
enter
and
and
cmp
imul
add
ja
pop
cmp
in
or
jb
nop
mov
add
data16
enter
pop
sbb
mov
ins
xchg
dec
mov
xchg
test
adc
ins
add
xchg
mov
mov
and
jmp
jge
mov
mov
push
outs
push
pop
xchg
daa
or
jmp
sahf
xor
cmp
leave
rcr
cmc
fs
xor
(bad)
xor
ret
out
xor
inc
(bad)
(bad)
out
lods
cdq
(bad)
jb
icebp
adc
pop
jbe
sbb
cmc
mov
in
xchg
jl
shr
std
ficomp
add
push
push
repz
jne
fcmovbe
icebp
in
cld
rol
mov
mov
xchg
pop
js
iret
pop
shl
mov
inc
cmp
fs
push
xchg
sti
jmp
mov
add
and
retf
icebp
inc
or
ficomp
add
into
pop
sahf
push
sbb
or
cmps
popf
push
mov
out
jp
push
es
aad
dec
pop
outs
fisttp
inc
mov
or
mov
jp
jo
cli
push
xchg
dec
jle
out
push
mov
push
into
mov
pusha
scas
addr16
cmp
cmp
xor
scas
stc
jmp
xor
mov
jmp
dec
jmp
push
aam
cmp
fwait
sysret
cmp
sbb
xor
(bad)
(bad)
push
(bad)
pop
rol
into
fisubr
nop
scas
mov
sbb
xor
outs
sbb
mov
and
pop
stos
or
rcr
pop
outs
sbb
(bad)
frstor
add
mov
mov
mov
dec
fist
movs
nop
cli
inc
adc
loopne
(bad)
js
xor
mov
add
push
sub
call
std
mov
dec
in
test
adc
sbb
dec
jns
xchg
cmp
je
mov
je
xchg
jmp
aaa
cmc
inc
lock
and
sub
pop
(bad)
ror
mov
or
fxch
fidiv
add
xor
aam
movs
fnsave
inc
jecxz
xlat
out
push
retf
pop
jno
ror
sbb
jmp
sar
lahf
mov
or
inc
inc
retf
xchg
inc
jmp
mov
mov
popa
pushf
je
shr
outs
and
call
sbb
ins
lds
xchg
jl
aad
mov
in
enter
and
and
mov
(bad)
inc
mov
or
xor
xchg
adc
loope
out
stos
xchg
jns
fstp
dec
fld
or
jmp
dec
into
inc
xor
int3
inc
retf
fisttp
fsubr
cmp
int3
xchg
cmp
into
out
ret
daa
mov
mov
or
cs
popa
jecxz
mov
(bad)
call
(bad)
(bad)
cmps
frstor
add
lea
sub
add
or
in
inc
push
push
or
jne
and
sub
add
int3
in
repz
xor
jnp
das
pop
(bad)
cli
leave
mov
lods
mov
rcl
add
fbld
in
push
mov
cmp
shl
(bad)
dec
gs
fst
xchg
mov
pop
push
arpl
test
jo
iret
jae
jmp
mov
mov
in
mov
ss
daa
dec
adc
imul
in
add
int3
jg
and
jecxz
imul
mov
mov
imul
fimul
aaa
jb
mov
enter
hlt
scas
pop
fimul
xchg
mov
retf
xor
sbb
adc
or
add
shufps
add
inc
xchg
lds
out
mov
push
(bad)
jge
xor
dec
mov
call
into
cs
fst
xor
jecxz
xor
out
es
test
add
xchg
sbb
imul
push
stc
stc
or
jns
(bad)
fstp
ja
pushf
(bad)
jnp
jp
adc
(bad)
int
pop
inc
outs
retf
loope
mov
icebp
bound
lahf
iret
inc
cmp
mov
pop
cwde
lods
lahf
sub
(bad)
inc
fsub
xor
mov
ror
inc
test
pushf
push
jp
ss
lahf
lods
lods
xchg
into
push
std
mov
jno
cmp
popf
retf
push
sub
sti
sbb
push
cmp
shr
mov
repnz
retf
in
jmp
mov
dec
inc
dec
(bad)
inc
aad
movs
jp
int3
fs
push
inc
addr16
in
push
pop
sbb
jmp
rol
push
adc
sbb
les
push
pop
ret
popf
das
lahf
repnz
sbb
lods
mov
adc
mov
dec
inc
or
sub
movs
cli
mov
push
mov
call
fistp
repz
mov
je
mov
push
jmp
push
jbe
aad
mov
es
mov
and
xchg
jle
shl
into
sub
pop
call
cwde
mov
dec
(bad)
fwait
jmp
in
cmp
test
add
fs
sub
push
jmp
stos
xchg
pop
pop
call
inc
iret
pop
retf
out
adc
ss
dec
dec
add
xchg
push
fnsave
xor
test
ficomp
scas
push
mov
imul
fs
retf
daa
or
out
dec
xor
mov
(bad)
sahf
(bad)
enter
pushf
pop
call
lds
out
mov
add
inc
ret
retf
out
jmp
gs
cmc
jl
push
jne
or
push
int
or
sbb
push
retf
js
adc
push
add
jne
mov
jo
pop
push
jo
xchg
int3
lods
fiadd
aaa
mov
and
jge
xor
neg
xchg
xchg
mov
dec
adc
cli
cmp
ret
xor
inc
mov
xlat
pop
push
mov
push
pop
pop
lahf
pop
test
xchg
push
repnz
cdq
push
inc
jae
mov
imul
(bad)
aad
dec
mov
icebp
int3
mov
cld
cwde
cmps
xor
mov
and
push
idiv
mov
pop
mov
(bad)
mov
jns
call
or
data16
push
sbb
xchg
cmc
inc
and
iret
cs
mov
fstp
push
cmp
mov
outs
ror
loope
xchg
in
dec
and
sbb
(bad)
sbb
push
dec
or
rcr
rol
adc
mov
outs
xor
aam
mov
jo
pop
push
sub
jge
hlt
add
mov
mov
mov
lahf
cmp
mov
rcl
lods
ins
inc
sar
dec
das
jg
pop
mov
push
add
inc
out
fldenv
pop
icebp
aaa
mov
cmp
ins
mov
fsubp
inc
leave
dec
inc
push
mov
sbb
rcl
push
stos
add
fs
ret
jp
jnp
ins
or
add
ret
test
and
nop
scas
lea
out
mov
adc
xchg
addr16
js
and
pop
adc
cmp
jb
dec
std
nop
std
dec
retf
es
rol
mov
xchg
xchg
loopne
jne
cmc
mov
cld
ja
clc
gs
mov
mov
mov
shr
pop
pop
xchg
out
jns
xchg
cmp
call
add
or
dec
shl
out
push
push
aad
inc
out
cwde
cld
xlat
jae
add
shl
inc
mov
sub
mov
out
xchg
cmps
js
dec
jecxz
scas
lods
sub
push
fimul
gs
add
adc
and
push
sub
mov
enter
jns
push
outs
jmp
(bad)
push
js
mov
pop
shl
mov
lods
sbb
sub
adc
push
dec
repnz
pop
pusha
(bad)
out
idiv
scas
cmps
out
xchg
add
or
adc
mov
inc
push
xor
repz
inc
retf
ins
mov
sbb
int
adc
jo
add
xchg
addr16
loopne
ret
out
push
cmp
pop
or
pop
mov
out
stos
cmc
jnp
test
xor
inc
sbb
sbb
(bad)
pushf
add
daa
stc
mov
mov
fsub
ds
sar
jns
pop
cwde
out
or
lods
sub
dec
xchg
pop
mov
xchg
(bad)
scas
jnp
rol
adc
rcr
or
popa
jo
jne
xchg
sbb
imul
out
pop
xor
outs
cld
xor
es
sbb
inc
in
mov
xchg
mov
aam
sbb
jl
ja
pop
xor
adc
and
adc
pushf
mov
push
xchg
sbb
xchg
js
dec
push
xchg
lahf
dec
test
mov
daa
dec
gs
mov
aas
pop
or
adc
sub
cmc
cmp
aaa
mov
mov
fiadd
ret
jae
pop
add
sbb
test
out
fist
jg
cmc
mov
xchg
mov
add
push
movs
addr16
cld
inc
jbe
push
dec
cmc
push
and
out
loop
call
inc
cmp
popf
daa
hlt
mov
popa
push
inc
pop
call
rcr
adc
dec
jle
stos
lods
adc
call
add
sub
or
jle
ffree
inc
sbb
fcmovb
ins
stos
mov
out
stc
dec
push
cmps
sahf
shl
lahf
hlt
adc
sub
imul
into
xchg
inc
pop
inc
mul
and
idiv
jmp
loope
ja
mov
adc
pop
mov
cmp
das
mov
test
scas
and
ds
push
jl
mul
add
nop
test
add
retf
outs
imul
test
lea
mov
sub
retf
pop
add
cmp
test
dec
jbe
dec
mov
stos
sti
xchg
mov
scas
sbb
jl
inc
outs
adc
mov
rcr
mov
xchg
push
inc
mov
mov
push
xchg
iret
mov
xchg
mov
es
stc
lock
scas
lods
popa
cmp
pop
mov
push
sbb
xchg
sbb
data16
pop
mov
mov
cmp
fs
and
inc
mov
mov
enter
lock
mov
mov
aas
test
mov
std
lods
imul
jg
pop
push
bound
cmp
(bad)
mov
cmp
mov
mov
and
(bad)
jo
aam
popf
outs
addr16
scas
jmp
adc
xchg
dec
push
enter
out
xor
push
sahf
nop
std
and
dec
pushf
mov
ins
mov
sahf
mov
aam
enter
shl
sub
mov
mov
jge
bswap
pop
mov
cmp
dec
cmp
xor
lds
stos
xor
sti
fild
mov
fcomp
arpl
dec
cmp
pop
fs
repnz
mov
test
movs
fcmovnu
jecxz
mov
pusha
jbe
cmps
mov
sub
popf
pushf
cmp
scas
pop
shl
jbe
jmp
ds
(bad)
mov
fwait
sbb
out
cwde
mov
mov
jns
call
jbe
lods
jmp
jbe
inc
fld
in
lods
fimul
sahf
aam
ret
dec
cmp
cmc
mov
add
addr16
sub
cs
ja
inc
mov
test
out
aas
pop
push
lahf
dec
sub
rcl
repnz
pusha
rcr
xchg
movs
ret
mov
pop
shl
(bad)
out
add
(bad)
lods
shl
leave
inc
add
cmp
test
or
lock
test
inc
sbb
sti
pop
xchg
inc
xchg
out
cwde
jg
add
cdq
gs
mov
lods
mov
ins
and
into
dec
xor
fisttp
rcr
ins
aaa
(bad)
push
iret
das
adc
push
fld
test
jbe
mov
xchg
pop
out
ins
neg
and
dec
xor
push
push
das
mov
mov
in
call
cmps
and
(bad)
icebp
je
mov
sahf
fcom
adc
cdq
std
(bad)
mov
fcmovbe
fisubr
adc
mov
cmps
pop
inc
lahf
mov
(bad)
mov
idiv
mov
loope
dec
pop
in
dec
loopne
push
mov
add
lahf
stc
jmp
fld
pop
sub
inc
mov
xchg
pop
xchg
jecxz
add
ror
loope
loopne
inc
mov
clc
ins
and
and
je
mov
add
(bad)
out
retf
cs
push
dec
clc
xchg
int
cmp
add
mov
push
push
adc
xor
xchg
pmaxsw
and
and
sbb
cmp
loopne
dec
dec
pusha
(bad)
retf
jl
imul
adc
mov
ret
fisubr
cld
mov
dec
jb
mov
out
xlat
mov
xchg
movs
push
or
add
jns
movs
xchg
add
gs
shl
cli
jne
not
sbb
pop
mov
movs
jecxz
cmp
(bad)
mov
jp
dec
loop
dec
(bad)
jp
hlt
loope
jle
jae
xchg
mov
ins
xchg
dec
sbb
in
retf
aas
and
lahf
stc
push
(bad)
jle
mov
in
imul
sti
int3
mov
push
sbb
xchg
jo
test
dec
jmp
pop
lods
push
mov
push
add
(bad)
sbb
fiadd
xor
int3
rcl
jp
ficom
push
in
cmps
xchg
(bad)
(bad)
xlat
scas
inc
sbb
mov
sahf
or
dec
and
dec
cmc
jecxz
jl
arpl
aas
adc
int
add
inc
adc
jne
push
ins
mov
add
movs
push
sbb
dec
mov
mov
mov
push
bound
mov
mov
mov
push
loope
repnz
cmp
fistp
xchg
enter
hlt
dec
mov
add
add
mov
xchg
imul
repnz
mov
(bad)
mov
lock
outs
leave
sbb
sti
inc
add
loop
xor
cmc
enter
mov
mov
fwait
mov
ins
mov
lahf
dec
adc
lods
or
cmp
test
or
cmp
mov
out
and
ins
(bad)
mov
and
mov
xor
xchg
xchg
dec
out
adc
in
repz
sub
mov
lds
loopne
ret
pop
and
pop
jmp
aaa
add
lds
aad
pop
dec
dec
sar
xor
ja
push
mov
xchg
fmul
dec
inc
xor
pop
lds
push
and
or
dec
dec
imul
xor
jp
lock
jmp
fwait
and
frstor
sub
sahf
jge
sub
dec
rcl
(bad)
push
sbb
mov
sar
or
test
sar
cmp
out
loope
repz
push
fsubr
jl
dec
nop
jb
popa
mov
test
inc
jne
or
adc
lahf
scas
pop
add
movs
imul
pusha
inc
es
jo
pop
mov
ja
sbb
cmp
inc
out
jecxz
lahf
jmp
sti
mov
jbe
ins
dec
dec
lods
mov
pop
pop
sbb
mov
push
jbe
outs
pop
push
xchg
jle
push
mov
add
enter
retf
js
xor
adc
mov
popf
gs
pop
iret
fld
push
and
pop
enter
cmps
jg
stc
xlat
out
and
rcl
mov
sbb
mov
stos
and
call
mov
push
inc
xor
jns
add
cmps
jae
ds
jge
push
and
int
pop
je
jb
cmps
mov
addr16
das
es
sti
pushf
add
push
cwde
stc
arpl
push
inc
stc
mov
test
test
leave
xor
xor
clc
icebp
or
mov
f2xm1
xchg
ins
and
dec
outs
movs
add
cmc
loopne
neg
dec
retf
mov
aaa
daa
or
rcl
push
call
adc
rcr
push
xor
loopne
mov
jecxz
dec
cmc
test
mov
ja
cmp
mov
mov
aas
add
cmp
rcr
stos
push
rcr
rcr
cmps
(bad)
ds
dec
mov
aas
xchg
and
dec
or
(bad)
cmp
mov
adc
dec
mov
lock
mov
jp
jns
jo
add
leave
clc
punpckhbw
pop
xchg
imul
ja
rcl
cwde
dec
sahf
add
mov
fdiv
xor
jb
jge
int3
addr16
jp
rol
neg
into
(bad)
fadd
or
push
sti
(bad)
(bad)
into
pop
dec
adc
add
fmul
fucomip
rol
in
(bad)
push
inc
jmp
push
scas
lahf
dec
into
cmp
add
in
sub
rol
xor
neg
int
cmp
jg
adc
pop
std
and
loopne
xor
or
push
mov
in
jo
sahf
jne
loope
sti
push
jl
repnz
push
adc
imul
ins
dec
in
das
jg
sahf
mov
adc
inc
mov
jge
cmp
test
inc
in
cmp
push
push
and
mov
push
pusha
sbb
mov
sub
js
imul
mov
imul
jle
sub
push
cmp
xchg
xor
fwait
jne
inc
jg
aad
aas
ror
(bad)
jl
sub
pminub
lods
pop
(bad)
sbb
loop
add
ret
in
xchg
outs
jecxz
cmp
adc
mov
and
(bad)
jge
int
mov
jl
call
mov
arpl
hlt
loop
adc
and
imul
push
dec
ins
dec
and
imul
add
imul
pop
cmp
adc
inc
pop
int
cwde
pusha
mov
neg
(bad)
push
pop
dec
mov
in
cmp
jbe
sub
cmp
ret
popf
or
xchg
fiadd
pop
mov
ins
jmp
jae
hlt
mov
push
push
pushfw
imul
hlt
test
jb
xchg
cwde
int3
jbe
out
dec
jmp
into
sub
jb
retf
xor
and
loope
ins
xchg
outs
xchg
push
out
call
imul
mov
pop
repnz
repnz
outs
aaa
or
mov
and
test
add
or
lods
inc
add
test
pop
adc
fsub
jecxz
add
lea
jnp
popa
mov
adc
and
mov
mov
stc
aas
dec
daa
nop
jns
add
mov
sar
dec
fisttp
inc
or
cwde
xor
pop
fnsave
sub
mov
cmp
dec
push
addr16
pop
test
cdq
retf
out
ror
fadd
out
cmp
cmps
stos
(bad)
clc
stos
imul
stc
nop
xchg
pop
cmp
and
pop
movs
xor
pop
pop
loop
push
xor
push
ret
addr16
js
dec
ror
jb
adc
xor
cmp
out
icebp
ds
iret
push
cs
push
js
push
add
mov
outs
xor
inc
add
xchg
jge
dec
fld
fild
rcl
imul
adc
ds
xchg
daa
xor
cld
iret
xchg
and
stos
gs
and
jns
fimul
dec
(bad)
retf
pop
xor
stc
mov
xchg
pop
mov
inc
mov
js
xor
jo
in
jecxz
mov
mov
mov
add
push
pop
retf
mov
js
outs
sbb
dec
cmc
jecxz
fisttp
daa
pop
xchg
mov
mov
push
retf
mov
rcl
or
inc
mov
push
xor
jb
scas
pop
neg
mov
stc
dec
into
dec
xchg
loop
xor
lods
lods
xor
pop
dec
ja
xchg
sub
xchg
stos
popa
cmp
(bad)
scas
lea
or
jmp
imul
adc
dec
mov
add
lods
xchg
outs
mov
push
es
push
xchg
xchg
xor
xchg
out
add
xor
push
jecxz
and
pop
xchg
adc
jmp
out
fsubr
push
sti
jg
add
cmp
mov
movs
jb
dec
cs
pusha
mov
pop
push
xchg
call
mov
push
adc
dec
cli
mov
call
dec
pop
mov
enter
push
daa
dec
adc
cdq
movs
jg
(bad)
sbb
lods
xchg
retf
shl
loopne
pop
loop
mov
sti
jle
mov
pushf
scas
and
or
lds
xor
inc
push
inc
cmps
ror
fdiv
sar
jg
mov
sbb
(bad)
and
sbb
mov
addr16
adc
(bad)
jp
out
scas
jno
mov
(bad)
out
scas
push
push
dec
imul
jle
jecxz
mov
xor
mov
js
pop
mov
outs
sub
daa
rol
xchg
sub
jecxz
ret
or
lods
dec
cmp
scas
aam
mov
cmps
push
test
jo
shl
aas
cs
mov
ror
cmp
jle
xor
pusha
adc
ret
sahf
jmp
popa
lods
sbb
adc
cmps
dec
mov
mov
inc
mov
xor
out
gs
jno
out
mov
and
cs
bound
call
jmp
icebp
movs
sbb
retf
jae
test
push
sbb
int
push
cmp
mov
xchg
or
and
into
mov
dec
mov
int3
and
jmp
add
sti
mov
nop
ds
out
push
movs
add
jne
lahf
push
mov
cmp
stc
or
mov
cmc
je
push
mov
fstp
xchg
jl
int3
or
add
inc
lahf
in
push
rol
jge
(bad)
mov
and
xchg
iret
jecxz
dec
jae
add
push
pop
lods
jle
mov
in
sti
pop
mov
sub
loop
mov
loop
movs
aaa
les
jo
push
and
mov
adc
mov
pop
xchg
int
stc
shl
in
adc
xchg
jmp
mov
int3
xchg
gs
mov
(bad)
and
pop
(bad)
adc
pusha
std
inc
push
pusha
dec
loop
mov
mov
and
pop
add
jle
(bad)
icebp
cmc
inc
cwde
or
jp
mov
shl
sbb
mov
out
bound
ds
dec
mov
aaa
das
adc
btc
and
pop
push
add
out
in
out
out
xchg
div
pop
into
setbe
adc
or
in
mov
in
push
mov
mov
std
mov
mov
xchg
fmul
xchg
imul
jecxz
ror
inc
mov
and
jmp
pop
inc
lea
ror
push
or
test
mov
aam
ja
(bad)
mov
jmp
xchg
mov
push
cmps
outs
adc
jne
ins
shl
cmp
stos
repz
hlt
sbb
push
add
jno
repz
xchg
push
mov
push
mov
ins
inc
mov
push
mov
adc
sbb
jb
push
sbb
fidivr
arpl
sbb
aas
jno
jae
and
mov
mov
add
sub
fcom
pop
das
cmp
push
push
icebp
imul
test
addr16
mov
push
mov
pop
scas
push
rcr
outs
add
outs
jmp
sti
lea
icebp
push
test
stc
cmp
hlt
xor
jne
xor
out
(bad)
int
jno
push
fldenv
xor
sub
imul
mov
xor
sub
ss
not
dec
pop
mov
sub
sub
sbb
xlat
lods
jg
aaa
xchg
mov
sub
lock
ins
mov
enter
push
mov
cmps
pop
int
inc
add
movs
jmp
or
jae
(bad)
fwait
push
out
mov
daa
movs
dec
xor
xchg
rol
or
rcl
sbb
shl
retf
fimul
mov
inc
aas
cmps
dec
fild
ret
jmp
dec
out
(bad)
stos
mov
push
int
cld
sub
rol
test
mov
sbb
and
xchg
ret
das
xchg
mov
xchg
les
repnz
pop
cmp
sub
sbb
push
dec
xlat
jmp
lahf
subps
mov
ja
lock
lock
sbb
dec
dec
sbb
imul
fisub
ret
sbb
cmc
mov
push
fcomi
push
es
and
outs
jns
jmp
jl
in
sti
stos
adc
sbb
add
xor
add
mov
cmp
or
shr
(bad)
jns
xlat
mov
popa
add
add
mov
push
sti
lock
call
mov
es
int3
les
jo
push
orps
out
ficomp
xchg
fisubr
push
sbb
jg
jns
mov
jmp
sbb
push
ins
cmp
int
ds
sbb
arpl
adc
mov
imul
fwait
xlat
test
sbb
retf
xsaveopt
cs
imul
scas
xor
stos
test
(bad)
shl
add
cmp
lock
ds
cwde
aas
mov
push
retf
pop
jo
mov
add
dec
inc
das
mov
in
mov
addr16
sbb
lea
and
sahf
aas
test
fwait
cld
dec
out
adc
dec
ds
js
xor
out
pusha
test
fisubr
(bad)
pop
cmp
sub
dec
sub
mov
pop
pusha
mov
and
pop
in
scas
inc
fist
xlat
hlt
test
cmp
xchg
push
inc
js
aam
and
test
fld
mov
cmp
jl
mov
sub
pop
mov
jmp
pop
jns
lds
xor
popf
mov
xchg
ins
in
pop
gs
lock
or
sbb
push
push
mov
scas
lods
adc
inc
dec
mov
repz
movs
sti
stos
aaa
cmp
je
adc
xchg
inc
mov
push
das
(bad)
ja
stos
pop
or
div
int
inc
je
dec
push
imul
sub
int
cmp
dec
or
ds
xadd
xor
mov
jmp
jmp
mov
les
mov
fistp
div
adc
xchg
pusha
cmp
sbb
mov
gs
push
test
fld
mov
xor
ss
sbb
stos
inc
xor
mov
out
aas
xor
push
sub
sub
mov
data16
xchg
mov
mov
pop
shr
test
adc
scas
xchg
xchg
(bad)
xor
cmp
pop
cmp
jne
xchg
pop
xor
xchg
bound
fucom
push
inc
movs
mov
xlat
ret
ficomp
push
and
jb
sub
es
sub
das
lds
cmp
lea
test
in
inc
stos
jmp
ret
les
mov
out
cmc
cli
pushf
xchg
sub
in
pop
fild
cmp
les
sub
je
jb
or
mov
mov
addr16
mov
iret
jmp
or
jnp
sub
aaa
mov
jae
mov
outs
lods
or
push
sub
adc
sahf
jge
ret
pop
mov
xor
mov
adc
or
push
sti
rol
aas
push
push
inc
jmp
sub
jge
icebp
scas
dec
mov
xchg
cs
inc
xchg
xchg
dec
rcr
mov
fwait
cmp
mov
movs
ret
int3
mov
(bad)
mov
xchg
sbb
jp
loopne
out
and
fwait
int
shl
sar
repz
call
mov
movs
sbb
jle
push
cmp
lds
pop
sahf
sbb
aad
inc
fimul
ins
mov
xor
test
fld
and
imul
cmp
xchg
inc
push
gs
cmc
push
retf
xor
ds
movs
or
sti
xchg
in
dec
jecxz
adc
jge
push
push
shl
push
pop
movs
xchg
pop
jmp
mov
add
mov
mov
jns
jb
scas
and
or
icebp
inc
sub
sbb
lods
xchg
movs
mov
push
mov
clc
fidiv
sbb
sbb
xor
push
jg
sbb
mov
out
and
test
push
mov
xchg
jns
mov
and
mov
int3
clc
xor
push
push
mov
cmps
pop
loopne
mov
push
int
inc
in
push
dec
inc
scas
mov
ja
out
dec
or
add
adc
arpl
cld
lods
pop
fstp
xor
gs
scas
out
popf
out
test
sbb
dec
cdq
add
cmp
rol
jbe
xlat
jnp
mov
mov
shr
push
popf
les
xor
mov
mov
push
jo
retf
les
ins
push
push
sbb
aad
ret
xchg
or
push
push
retf
in
test
jl
mov
call
or
and
inc
arpl
xor
push
dec
sbb
fldcw
mov
inc
jae
fcom
es
push
inc
out
aad
movd
push
scas
sub
fbld
jmp
dec
and
fild
movs
sahf
fnstcw
lea
mov
push
jne
in
(bad)
lds
mov
gs
sub
dec
(bad)
xor
xchg
xchg
push
fcom
outs
adc
cmp
adc
adc
mov
mov
call
cli
lahf
call
sti
jne
xchg
shl
mov
(bad)
mov
clc
mov
repz
in
inc
rcr
xchg
sti
adc
dec
cmc
in
xchg
retf
int
adc
pop
bound
dec
add
jecxz
clc
fdivr
dec
stc
inc
test
jne
jno
xor
push
xchg
xchg
loope
mov
fwait
les
in
loope
aas
pop
ja
pop
outs
add
loop
cmc
ficomp
and
adc
jmp
js
and
cmc
fcomp
add
adc
ror
mov
pop
arpl
mov
dec
or
cs
inc
loopne
sub
dec
lea
daa
xor
xor
ror
sbb
jmp
or
in
(bad)
sbb
push
cwde
std
(bad)
cmp
in
sahf
jge
mov
add
and
dec
(bad)
sar
leave
cli
in
test
mov
lahf
mov
outs
xor
test
mov
arpl
bnd
es
scas
mov
mov
loope
mov
inc
jmp
push
mov
mov
scas
scas
pop
or
inc
movs
sub
dec
xor
push
xchg
not
cmp
dec
push
bound
inc
mov
cmp
push
out
repz
sbb
in
ja
jg
jae
dec
jnp
outs
sub
retf
pop
pop
cmp
imul
jae
mov
repnz
cmp
inc
xchg
shl
adc
sub
pop
mov
pop
xor
adc
ret
pop
fld
jns
jmp
mov
xchg
aad
or
adc
jb
ins
cld
fidivr
sub
fs
mov
sub
js
mov
dec
fdiv
cmp
sbb
add
adc
fwait
inc
popw
mov
pop
sub
ret
pop
call
cmp
cwde
mov
pop
rcl
inc
mov
pusha
mov
retf
pop
push
call
mov
xor
stc
jb
lahf
scas
jg
aaa
mov
jmp
or
sar
or
fnsave
mov
mov
clc
xor
mov
sub
mov
sub
movs
cmp
pop
xchg
ds
sub
jo
mov
adc
sbb
pop
call
mov
pop
jg
mov
cmp
inc
out
add
mov
das
sub
fs
sub
inc
sbb
popa
and
js
popf
cmp
fdivr
sahf
push
xchg
pop
jne
cmp
jp
jmp
mov
xchg
das
push
in
xor
and
das
and
fld
fwait
stos
shr
push
icebp
adc
dec
cwde
ins
fld
jp
jge
jnp
sbb
or
outs
ins
mov
je
cmp
into
cmp
sub
daa
push
jne
push
sub
sbb
xchg
je
jne
sbb
sti
add
push
mov
and
xchg
sub
in
mov
sbb
push
imul
or
fist
movs
push
sbb
jmp
call
inc
gs
aam
dec
shl
outs
push
mov
addr16
bound
das
mov
cld
mov
and
jp
cld
inc
mov
or
ret
shl
cs
dec
push
or
loop
xchg
mov
lahf
loopne
movs
push
inc
in
div
pop
loope
ss
push
or
xchg
bound
xor
enter
fwait
add
mov
dec
sbb
push
ret
mov
sub
mov
add
adc
sub
mov
add
cmp
popf
or
setno
hlt
xchg
sbb
loopne
add
lods
lods
in
pop
rcl
jle
out
inc
and
mov
pushf
pop
repz
cwde
pop
and
shr
shr
jmp
add
push
fiadd
call
dec
mov
mov
fisttp
ss
retf
(bad)
cmp
mov
pop
stos
jmp
retf
js
adc
shr
lods
dec
test
hlt
inc
es
lea
push
or
(bad)
add
jo
outs
adc
add
cmc
dec
push
cdq
fidivr
mov
xchg
js
into
push
mov
sar
inc
int3
retf
test
enter
retf
les
mov
popf
test
jae
add
inc
mov
and
sti
stos
out
lea
jp
call
pop
dec
xor
shr
ins
fst
aam
add
sub
and
mov
fld
add
sub
test
test
stc
div
scas
dec
jl
call
fs
sbb
mov
ds
adc
idiv
out
lds
dec
sahf
and
jmp
push
add
mov
rcl
adc
xchg
mov
shl
jmp
cmp
test
cmp
or
add
stos
xchg
push
dec
pop
inc
scas
int
repz
add
pop
pushf
out
cli
jb
cmp
ins
das
lods
out
adc
retf
test
retf
je
pop
cmc
aaa
mov
daa
shr
cdq
and
add
(bad)
cmp
ret
das
dec
pop
jle
mov
dec
fcomp
sti
jne
pop
mov
out
test
xor
pushf
(bad)
retf
stos
xor
xchg
out
ret
push
bound
cwde
push
sbb
push
mov
xchg
fstp
dec
sahf
popf
out
jo
movs
outs
mov
out
(bad)
loop
or
out
shl
pop
jl
xor
add
ds
out
xchg
rcr
add
adc
add
outs
ds
sar
lods
mov
cli
test
jnp
rol
push
test
mov
mov
add
add
add
dec
jmp
push
leave
pop
out
lods
mov
(bad)
cmps
jbe
sbb
and
in
sub
ja
add
out
xlat
out
push
cwde
test
in
mov
clc
(bad)
or
inc
inc
dec
or
xor
cmps
inc
cmps
or
adc
and
push
imul
fbld
sbb
vcvtpd2ps
mov
jnp
fadd
push
daa
jae
(bad)
loopne
loope
cwde
stos
pop
add
jle
test
add
iret
test
fistp
push
icebp
test
popa
pop
shl
ret
loop
cmp
xlat
xor
mov
adc
mov
test
mov
out
outs
stos
or
xchg
stos
mov
mov
cmps
adc
paddb
dec
mov
add
adc
mov
jae
pop
scas
xor
call
dec
es
mov
push
rol
and
clts
mov
mov
in
xor
cmp
ds
into
xchg
jmp
ins
imul
cmps
cmova
add
xchg
mov
lahf
sub
sub
push
into
mov
int3
inc
push
aam
add
xor
sbb
inc
jno
daa
inc
push
lahf
loop
fild
fld
and
and
fwait
xchg
dec
jle
inc
cmp
fidiv
pushf
cmps
mov
test
hlt
iret
inc
in
pop
mov
push
aad
inc
repz
inc
(bad)
xor
mov
mov
fstp
stos
mov
mov
push
hlt
push
mov
mov
stos
sbb
add
retf
(bad)
out
adc
stc
sahf
xchg
add
iret
sub
bnd
test
jl
mov
bound
jno
jp
adc
cmc
jae
outs
or
outs
mov
cld
std
cmp
gs
mov
push
xor
mov
test
test
push
push
pop
js
test
ins
(bad)
enter
cmp
jae
inc
pushf
xchg
pop
jno
lods
(bad)
pop
xchg
sub
xchg
and
mov
in
sub
jmp
cmp
jp
xlat
lahf
pop
in
and
lahf
icebp
ds
arpl
lds
clc
cmp
sub
imul
scas
cmp
fcmovne
pushf
xchg
jmp
pop
or
shl
fsubr
add
adc
cmp
ins
lods
movs
mov
jns
jns
icebp
pop
(bad)
xchg
and
dec
inc
lock
mov
lds
or
shr
sbb
xchg
rol
mov
pop
jle
outs
(bad)
mov
push
call
xor
sbb
cli
inc
mov
fs
push
jo
sub
sbb
into
push
xchg
data16
inc
mov
or
or
and
xor
ins
loopne
aas
mov
retf
mov
test
dec
sub
mov
div
xchg
sub
inc
or
(bad)
xchg
pop
dec
cmp
das
mov
fcom
add
mov
shl
dec
icebp
not
push
in
sbb
mov
aaa
out
shr
mov
adc
or
push
rol
pop
xlat
rol
js
dec
jle
jge
push
mov
(bad)
and
jo
div
sahf
dec
mov
mov
in
leave
push
sub
cmp
and
adc
iret
mov
lods
popa
fnstenv
jae
in
jmp
adc
out
repnz
inc
and
push
sub
fst
test
mov
test
mov
mov
or
clc
test
push
lgs
std
fimul
dec
dec
hlt
into
mov
adc
clc
call
cmp
cwde
push
cmps
pop
cwde
cmp
add
jecxz
xor
xor
inc
jmp
mov
adc
js
push
sub
jns
neg
mov
sahf
adc
sub
jmp
mov
js
mov
push
inc
inc
(bad)
jle
mov
pop
in
nop
sub
adc
sub
cmp
in
xor
fdivp
or
sub
push
mov
cmp
and
test
jge
cmps
pop
mov
cwde
sbb
inc
inc
(bad)
sub
mov
adc
jne
loop
test
xlat
daa
iret
push
in
std
fs
add
movs
adc
das
call
test
add
or
lahf
push
sub
or
leave
stos
aad
hlt
mov
call
fcom
push
rcl
sar
imul
jl
or
xor
sub
(bad)
mov
xchg
out
std
jmp
out
sbb
(bad)
sbb
fnstsw
ror
sbb
(bad)
dec
jecxz
sub
or
adc
push
adc
sub
enter
push
mov
push
push
shl
adc
cmc
xor
xor
cmp
or
(bad)
rcr
jp
jmp
mov
sub
sub
in
adc
or
icebp
arpl
ins
sbb
popa
icebp
repz
mov
push
jbe
sar
cs
int3
repz
test
mov
inc
(bad)
push
outs
lds
int
stos
fs
add
or
jmp
mov
fnstenv
dec
je
sti
jno
push
sbb
adc
dec
shr
popf
aam
mov
pmulhw
push
stos
mov
addr16
loope
cmp
test
ret
stc
inc
fld
and
mov
sub
loopne
xchg
popa
lock
icebp
sub
mov
fidivr
adc
push
pavgw
cmp
pop
sar
int
cmp
imul
or
mov
jo
pop
sbb
test
cmps
pop
shl
push
movs
mov
dec
xchg
movs
sub
cmp
lahf
loope
sahf
mov
outs
mov
popf
fcmovnb
push
mov
push
mov
mov
(bad)
pop
ret
inc
jo
push
jge
pop
jbe
pop
cli
ss
adc
pop
(bad)
fld
xor
test
lock
nop
fs
cmp
out
(bad)
loope
aam
ret
test
mov
ds
das
xchg
(bad)
(bad)
cwde
rcl
dec
inc
cdq
or
inc
inc
test
mov
std
cmp
(bad)
fcmovnu
sar
jo
jmp
ds
mov
adc
inc
jns
add
push
movs
cmps
mov
mov
xchg
scas
xor
push
cld
mov
and
pop
cmc
sub
in
test
jne
clc
test
call
imul
in
not
xor
cmps
loop
movs
lods
dec
stos
push
sub
cmp
fimul
and
xchg
push
mov
mov
xchg
aaa
xor
call
lock
jecxz
sub
ins
sbb
ja
scas
mov
stos
fild
jge
xor
lods
sti
xchg
imul
jnp
repz
pop
dec
mov
ret
iret
stos
imul
popa
ins
cs
sbb
inc
inc
leave
addr16
cmp
cmp
in
xlat
int3
imul
int
sub
and
aaa
adc
and
fwait
mov
pop
aam
sub
mov
fwait
push
xchg
rcl
ret
inc
je
inc
push
arpl
adc
push
adc
call
outs
inc
lea
push
cmp
out
pop
jne
inc
add
and
dec
push
pop
pushf
es
push
repnz
(bad)
sbb
icebp
add
sub
data16
mov
(bad)
pop
add
arpl
mov
jmp
mov
dec
in
sar
lods
sbb
sahf
fadd
addr16
mov
mov
jmp
sbb
clc
xchg
test
rcl
pusha
mov
mov
pop
dec
xchg
xor
out
xlat
mov
test
call
jge
sub
and
shl
(bad)
ffreep
push
cld
iret
test
sbb
inc
lods
jno
out
xchg
or
fwait
call
lods
jmp
out
mov
pop
daa
or
dec
dec
sbb
sbb
bnd
pop
dec
gs
xor
retf
fs
mov
mov
adc
push
mov
ret
inc
xchg
daa
jle
out
rcl
sub
rcr
les
movs
jb
jno
inc
shr
inc
jae
outs
adc
fmul
cmp
imul
bnd
cld
imul
pop
and
loopne
in
jmp
in
call
call
adc
sbb
xchg
cdq
xchg
icebp
or
shr
dec
push
pop
mov
or
popf
mov
mov
pop
nop
pop
push
dec
jle
push
jns
and
repz
jle
sahf
adc
retf
outs
or
xchg
jae
jmp
push
aam
mov
mov
and
dec
sti
xor
xchg
mov
inc
ins
cmp
ja
popa
and
cmp
stos
sti
int3
std
lock
fcomp
inc
mov
fiadd
mov
push
sub
push
fidivr
out
sbb
les
push
(bad)
loope
and
into
push
js
inc
imul
mov
dec
jge
push
push
xchg
adc
daa
sub
xchg
and
cmps
pop
dec
aaa
je
push
mov
in
(bad)
call
in
ins
inc
outs
jmp
pop
jle
sti
retf
in
xchg
cwde
lods
cli
addr16
das
outs
(bad)
bound
in
xchg
pop
adc
clc
mov
pop
retfw
(bad)
jl
inc
pop
in
jl
in
shl
sbb
dec
pop
jno
sbb
xor
pop
sbb
cli
and
mov
push
mov
movs
mov
scas
mov
jno
and
push
les
push
mov
imul
rcr
add
in
out
and
inc
inc
mov
and
xor
fsub
mov
mov
pop
jb
ins
push
cld
dec
arpl
fcmovu
sbb
or
imul
jl
movs
cs
(bad)
add
imul
out
or
mov
mov
fstp
mov
jecxz
jmp
adc
lock
in
push
fwait
or
ds
sub
ins
xor
(bad)
cmp
pop
sbb
aaa
or
mov
mov
retf
ss
mov
outs
cmc
inc
and
(bad)
cli
movs
mov
fwait
push
adc
mov
cmc
jl
stc
lahf
dec
retf
xchg
xchg
and
sub
jmp
leave
ss
hlt
pandn
in
jnp
clc
test
imul
adc
pop
mov
popf
inc
movs
jne
inc
mov
gs
aaa
mov
cld
jg
mov
test
push
(bad)
xor
add
sti
mov
(bad)
jo
imul
dec
es
pop
jmp
xchg
jbe
jmp
adc
test
xor
sbb
push
inc
test
push
jbe
loopne
(bad)
jg
stos
inc
cmp
adc
daa
int3
adc
in
out
adc
sub
push
pop
test
xchg
retf
mov
mov
shr
dec
jecxz
pop
pop
pop
add
or
xor
mov
(bad)
mov
pushf
sbb
out
add
mov
and
add
push
lahf
pop
lea
rcl
jecxz
cwde
mov
imul
cmp
mov
pop
jp
push
push
mov
pusha
retf
xor
jns
retf
mov
dec
test
cmp
adc
fiadd
inc
cmps
push
mov
outs
inc
push
std
push
mov
(bad)
lock
movs
ins
rcl
shr
retf
pop
push
mov
pop
adc
add
fld
pop
and
fdivrp
add
pop
jbe
add
lods
lods
fs
adc
imul
mov
jno
mov
in
int
mov
adc
ins
test
or
stc
dec
push
sbb
jge
or
pop
mov
mov
movs
cmp
sbb
in
mov
cli
stc
sar
iret
jb
adc
cmp
stos
pop
mul
jge
cmp
shl
mov
sub
cdq
lds
inc
push
adc
retf
add
pusha
leave
sbb
into
mov
xor
out
sub
cmp
sub
test
fimul
xor
cmp
mov
jg
adc
mov
call
jae
rcr
jmp
ins
repnz
jbe
add
bnd
into
sub
jle
pop
adc
aas
sub
inc
adc
sbb
jnp
aam
mov
dec
call
mov
clc
retf
es
out
mov
xchg
jno
xchg
cdq
inc
leave
adc
retf
je
xchg
mov
loope
imul
aaa
dec
mov
ret
sbb
ins
pop
and
inc
jg
stos
mov
rcr
test
mov
mov
xchg
jbe
hlt
dec
sbb
retf
scas
repz
outs
jmp
mov
jmp
(bad)
push
aas
pop
xor
clc
test
sbb
in
jbe
sub
jb
xor
push
arpl
mov
loop
cli
daa
or
pop
std
or
dec
stos
js
icebp
jmp
rol
dec
push
pushf
dec
stos
dec
dec
pop
cmp
cmp
push
aam
leave
push
out
(bad)
daa
xchg
data16
lea
movs
push
cmp
outs
enter
ds
(bad)
cmp
xchg
adc
jns
mov
in
mov
sbb
xchg
test
into
xchg
adc
hlt
pop
out
cmp
jb
add
sub
int
cmps
sti
mov
cmp
jnp
push
leave
add
pusha
mov
cmp
ret
stc
ds
shl
push
popf
fcmovu
mov
jne
or
imul
es
test
and
daa
push
sbb
pop
adc
push
mov
fisttp
test
lds
sbb
pextrw
jo
sub
out
push
inc
dec
xchg
mov
mov
call
adc
or
and
pop
dec
cwde
shl
cmp
mov
dec
std
fcomp
push
pop
lods
pusha
jl
sbb
clc
inc
dec
(bad)
push
ins
adc
les
jno
out
sbb
xor
pop
imul
mov
and
js
xor
and
imul
repz
cmp
mov
lock
in
push
push
cmps
js
push
(bad)
and
adc
xchg
shr
push
xchg
scas
inc
(bad)
std
inc
sti
inc
pop
cmp
fwait
pop
push
sbb
daa
pop
xor
shl
or
pop
pop
outs
(bad)
ds
xchg
test
leave
dec
and
pop
sbb
inc
sahf
cdq
mov
aas
push
ret
push
and
test
out
and
sub
(bad)
pusha
addr16
cld
dec
cmc
xor
repz
je
in
add
pop
dec
cmp
repz
jbe
pop
add
and
adc
mov
or
mov
div
movs
jg
jl
lods
sbb
mov
push
cmps
or
fcom
push
sbb
mov
scas
push
adc
sub
(bad)
cld
lods
xchg
sbb
jecxz
or
xchg
es
cwde
ret
mov
outs
push
or
test
dec
jle
pop
outs
jno
mov
ret
popf
push
pop
fidivr
jo
dec
sub
ja
test
add
and
das
cmps
cld
adc
loopne
test
scas
int3
(bad)
pop
clc
dec
jle
pop
sahf
pop
ror
outs
sar
retf
xchg
mov
pop
and
hlt
out
ja
ins
sbb
mov
pop
xchg
(bad)
cmovnp
jbe
jmp
call
push
fwait
pop
jp
(bad)
stc
mov
loopne
retf
rcl
lods
das
push
sti
dec
cmp
mov
mov
jmp
pop
cs
dec
cli
or
pop
int
xlat
mov
cmp
mov
add
mov
pop
add
(bad)
loopne
mov
mov
aam
jae
aam
add
push
dec
xchg
idiv
jge
inc
mov
dec
aaa
arpl
cmc
sbb
test
and
jecxz
sub
les
xchg
arpl
mov
jb
pop
popf
push
push
fimul
and
push
std
loope
ret
cdq
(bad)
addr16
pushf
push
std
jne
jp
in
les
(bad)
sub
mov
jns
mov
inc
sbb
(bad)
rol
add
fbld
adc
mov
mov
dec
sti
mov
test
xlat
push
ret
mov
in
call
pop
and
inc
add
inc
mov
cld
lods
das
inc
adc
push
enter
adc
jo
leave
jb
test
ss
int
sub
loopne
sub
xchg
mov
ds
adc
inc
pop
pop
mov
xlat
cmp
popa
mov
sub
pop
sbb
mov
or
aad
mov
xchg
cmps
sbb
and
icebp
mov
pusha
jle
push
out
sbb
adc
push
imul
aad
lock
jmp
loope
stos
mov
jl
lock
and
aad
adc
pushf
movs
call
outs
dec
aas
jge
sub
mov
add
outs
mov
add
inc
stc
mov
cdq
mov
imul
test
(bad)
nop
xor
xchg
cmps
mov
dec
ror
and
stc
out
jbe
test
mov
in
lock
or
dec
das
test
lea
das
lods
js
jb
cmp
cmp
dec
in
fdivr
mov
pusha
jne
pushf
sahf
add
fs
sbb
cwde
or
fcmove
push
mov
or
(bad)
mov
clc
sahf
fsubr
cmps
push
stc
fs
arpl
(bad)
fld
mov
sub
mov
xchg
push
je
test
loope
push
repnz
cmp
dec
cmc
pop
fbld
dec
push
fstp
jg
les
sahf
lds
xchg
enter
mov
inc
inc
in
mov
ss
out
and
imul
and
cmc
sub
aam
ret
inc
stos
ins
push
cmp
cmp
push
in
push
jo
fwait
mov
and
or
imul
xchg
jne
es
hlt
xchg
and
fadd
jo
ror
mov
mov
jecxz
test
inc
daa
mov
ror
sub
cmp
sbb
hlt
mov
xchg
mov
mov
movs
daa
or
push
ror
xchg
fcomp
jns
inc
ret
cmc
in
outs
xchg
and
mov
aam
adc
jmp
push
loope
inc
shl
out
fld
xchg
or
jae
mov
rol
pop
jmp
adc
dec
push
xchg
and
push
fsub
sbb
test
inc
lea
fdivr
pop
xchg
fsub
rep
jg
mov
sbb
jno
mov
enter
aaa
(bad)
xor
jbe
pop
inc
cwde
dec
addr16
adc
test
pushf
ret
aad
repz
or
cmp
mov
mov
or
mov
adc
adc
in
popa
inc
sub
test
shl
inc
scas
add
jnp
gs
test
inc
sahf
adc
out
jb
xchg
imul
cli
ret
dec
jg
loope
xchg
push
mov
mov
mov
popa
dec
into
add
fs
adc
mov
jmp
mov
enter
mov
aaa
es
sbb
call
sub
fldenv
(bad)
adc
sbb
pop
cmp
movs
and
outs
add
sbb
mov
jmp
pushf
mov
jg
outs
and
cmps
mov
jb
push
sti
and
xor
push
push
push
cld
cs
dec
retf
call
enter
fwait
and
(bad)
mul
mov
push
inc
adc
mov
cmp
call
xor
movs
cmp
and
ret
adc
adc
fst
mov
and
fcmovbe
inc
fbld
jnp
mov
nop
pop
mov
push
loope
cmp
out
pop
in
or
xchg
shr
add
not
not
repz
add
in
cmp
mov
push
popa
jg
shl
xchg
xchg
dec
hlt
sub
ret
dec
stos
out
mov
(bad)
xchg
mov
push
in
(bad)
sbb
mov
cmp
sub
xor
out
adc
jmp
stos
out
push
test
xchg
in
or
jle
stos
or
lea
cmp
hlt
fisub
pop
xchg
cwde
jne
movs
jb
pusha
mov
cmp
lds
jp
dec
ins
fnstenv
push
ret
jmp
and
rol
outs
in
fcom
movs
mov
ins
mov
pop
sbb
jge
push
mov
adc
aas
nop
cmps
inc
sahf
and
push
lds
jne
dec
gs
popf
mov
dec
xor
movs
xor
sysret
aam
enter
push
out
xor
jg
js
xor
cld
leave
pop
pop
ins
sbb
daa
pop
ficom
inc
test
jns
pop
repnz
cwde
dec
mov
out
sub
fcomi
out
mov
rol
stc
rcl
jne
dec
jne
popa
adc
retf
xchg
ja
xor
in
mov
ja
mov
mov
je
jmp
aaa
movs
daa
popa
cmp
dec
neg
inc
pop
fs
repz
pop
out
out
loope
mov
cmp
fist
lock
push
adc
mov
cmc
jle
shl
repnz
ins
retf
xor
stc
int
js
aas
mov
in
mov
mov
pop
aas
cli
sbb
neg
(bad)
cmp
daa
jae
loopne
ins
fsub
mov
mov
inc
inc
sbb
inc
pop
mov
addr16
jle
aaa
add
mov
and
inc
nop
jp
dec
ret
dec
test
cmc
ja
mov
or
data16
ret
stos
dec
ss
shl
lahf
ja
jnp
popa
(bad)
movs
xchg
jnp
jne
adc
jb
push
jne
popf
and
xor
retf
jge
mov
out
mov
movs
adc
js
(bad)
sti
cmp
cdq
jle
push
jne
inc
pop
out
dec
dec
(bad)
sub
movs
xchg
jl
jmp
push
pop
and
js
push
jmp
pop
add
retf
cmp
movs
out
and
sub
sbb
movs
ret
mov
adc
and
cwde
push
cmp
jb
xlat
jge
cmp
retf
leave
sbb
or
inc
cld
jge
loopne
daa
sbb
inc
sub
and
mov
or
push
sub
into
lea
test
pop
test
sub
mov
mov
dec
add
xchg
retf
pop
pop
push
mov
outs
mov
push
inc
push
ins
mov
imul
nop
push
xlat
ss
add
jnp
sub
test
addr16
adc
xchg
repnz
jl
pop
dec
sbb
sub
(bad)
enter
pop
rcl
lahf
push
out
(bad)
jno
mov
mov
add
out
inc
add
stos
sbb
jmp
push
cmps
sub
sbb
sbb
push
ja
inc
idiv
mov
xchg
mov
jmp
inc
mov
fist
inc
aas
or
imul
push
out
fld
lods
xor
jle
aas
enter
mov
in
jmp
sbb
sbb
inc
xchg
outs
pop
mov
pop
ss
cmp
js
xor
int3
loopne
ins
cmps
xchg
out
jg
or
iret
xchg
(bad)
jg
test
cdq
sahf
or
dec
mov
dec
push
mov
push
cwde
int3
sti
mov
mov
int3
call
push
out
adc
sub
cmp
mov
jmp
sbb
and
call
mov
xor
add
mov
dec
or
dec
iret
(bad)
repz
cmp
cmp
adc
mov
call
jnp
shl
adc
stc
pushf
pop
mov
(bad)
cwde
lods
xchg
mov
into
mov
mov
loope
rol
sbb
sti
mov
inc
adc
movs
xchg
mov
mov
icebp
mov
arpl
sbb
mov
mov
mov
mov
loopne
push
fadd
movs
mov
push
push
fadd
jno
gs
xchg
shr
inc
popa
adc
retf
push
icebp
in
loopne
cwde
jge
cmp
mov
mov
and
hlt
jg
or
mov
ss
mov
jo
sbb
inc
push
jmp
jbe
mov
ret
dec
sbb
ret
lods
or
cmp
mov
imul
stos
mov
inc
movs
inc
cmp
jae
pusha
dec
jp
adc
mov
inc
dec
jmp
sub
jl
aas
cmova
inc
das
add
cmp
cmps
inc
pop
pop
lock
iret
popa
cmc
dec
push
test
sub
sti
out
test
mov
push
movs
cdq
sub
jle
push
shl
pop
pop
jle
cmc
mov
push
push
mov
jg
or
repz
and
jb
adc
sar
jmp
test
and
mov
ret
retf
out
retf
gs
popf
sbb
lods
mov
mov
cmps
ja
or
pop
cmp
stos
mov
sub
cmps
scas
das
add
jns
xor
jmp
ins
dec
add
sub
(bad)
call
xor
mov
fadd
add
(bad)
je
arpl
sub
pop
arpl
cmp
cli
(bad)
pushf
mov
(bad)
mov
hlt
fdivr
xchg
icebp
lea
ins
mov
inc
push
cmps
mov
jle
pop
fld
and
repnz
xor
and
clc
sbb
jbe
icebp
xchg
scas
mov
sti
sub
je
out
rol
(bad)
js
mov
(bad)
loop
in
pop
xlat
rol
mov
and
mov
inc
mov
and
enter
and
cmp
rcl
repnz
pop
pushf
pop
mov
mov
sbb
inc
js
push
mov
mov
cmp
ins
(bad)
sub
xor
dec
(bad)
mov
lods
dec
pop
push
ror
gs
pop
aad
test
jmp
sbb
ret
push
lods
ins
push
xor
cdq
inc
shl
fst
mov
mov
je
jecxz
aam
aad
fadd
aad
sub
add
inc
data16
cld
out
daa
cli
test
std
lods
sbb
jnp
mov
add
inc
ins
pop
mov
push
fadd
inc
mov
lds
data16
(bad)
icebp
dec
xor
add
daa
lods
rol
outs
push
cmps
dec
test
fld
jmp
push
add
nop
mov
mov
ret
pop
rcl
shl
mov
sub
mov
jge
pop
push
scas
ja
xor
jmp
sbb
xchg
push
jle
pop
les
mov
int3
xor
and
push
push
or
push
add
and
les
mov
push
jo
imul
mov
cmp
shr
xor
xchg
pop
sbb
mov
fwait
sbb
dec
xchg
sbb
push
mov
mov
(bad)
cmc
inc
xor
mov
mov
mov
fadd
movs
jecxz
add
jae
mov
mov
cli
inc
xor
xchg
sub
push
add
sbb
xchg
adc
add
mov
ins
in
rcr
dec
outs
cdq
popa
imul
std
adc
retf
mov
sbb
pop
scas
repz
mov
loop
test
jb
sbb
ss
cmc
cs
xor
leave
mov
outs
lods
loopne
jmp
int3
dec
cmc
sbb
retf
pop
enter
pushf
ret
rol
or
outs
rcr
pop
stos
cmp
loop
dec
cmp
inc
in
rcl
dec
pop
mov
stos
mov
lock
dec
mov
daa
stc
loope
push
cmps
push
jb
xor
adc
inc
fisub
sub
in
adc
sahf
pop
and
popf
sbb
movs
mov
jge
pop
push
sahf
jge
daa
mov
add
mov
fcmovb
mov
jae
dec
adc
pop
inc
xlat
pushf
popa
push
pop
cs
add
imul
aas
and
jl
lock
sub
push
repz
push
mov
dec
clc
push
test
call
int3
cwde
shl
hlt
pop
sar
xchg
push
adc
cmp
ins
enter
scas
int3
ds
fnstsw
push
sub
push
sub
cmps
mov
fdiv
in
inc
inc
xchg
daa
xor
test
push
push
mov
dec
pop
dec
rol
mov
xor
adc
add
mov
es
cmp
ins
nop
imul
int3
dec
cmps
ficomp
jae
idiv
xchg
push
in
mov
mov
mov
sbb
retf
mov
fisub
mov
cmp
lods
cmps
out
psubsb
inc
mov
pop
inc
iret
imul
push
and
fsub
xor
mov
sbb
push
out
rcr
cmp
test
dec
inc
movs
jl
or
pop
shl
mov
and
out
test
and
leave
jecxz
int3
clc
ins
mov
(bad)
mov
sbb
shl
arpl
call
cmp
pop
adc
hlt
cdq
jle
sub
jmp
pop
(bad)
mov
aaa
push
outs
scas
stc
push
add
inc
add
push
sbb
push
mov
jns
jecxz
stos
xchg
or
jle
pop
sub
and
xor
mov
mov
cmp
add
pop
into
cmp
in
rcl
shl
lock
fcmovb
adc
inc
outs
inc
(bad)
call
adc
push
fmul
xor
test
pop
fmul
jmp
mov
jmp
rcl
mov
imul
lahf
aas
pop
fwait
adc
mov
sbb
call
(bad)
xor
sbb
retf
mov
pusha
push
mov
into
add
xchg
and
shl
cmp
xlat
iret
and
cmp
fwait
push
inc
daa
push
mov
pop
out
loop
cmp
inc
dec
mov
rcr
div
cmp
in
cmps
jnp
and
pop
imul
pop
daa
fld
mov
in
movs
bound
and
cmp
pop
pushf
xchg
mov
xchg
adc
sbb
sahf
iret
clc
xor
and
jg
xchg
test
(bad)
dec
sbb
mov
or
js
call
pop
loopne
rol
jecxz
or
mov
and
mov
aaa
fist
ss
dec
ja
shl
mov
or
push
lods
scas
sub
adc
jo
stos
cmp
clc
pusha
xor
frndint
outs
xchg
jge
fstp
sub
push
mov
jmp
fsub
data16
aam
mov
movs
and
fild
mov
xchg
out
(bad)
les
(bad)
fld
mov
shl
mov
adc
push
pop
pop
jb
js
mov
adc
iret
jle
cmc
sbb
out
loop
aad
sub
add
xchg
ret
ret
nop
into
mov
cli
push
adc
loop
bound
mov
and
out
lock
call
add
sub
shl
mov
inc
sub
rep
xchg
sub
fwait
cdq
add
cld
cmp
and
xor
mov
jns
jmp
nop
and
jg
pop
push
stos
mov
pop
popf
xchg
push
adc
jb
push
scas
and
in
stos
movs
es
dec
push
sub
lods
adc
clc
pop
test
mov
out
mov
call
mov
xchg
data16
xchg
jno
lods
mov
cmp
dec
in
sub
adc
hlt
outs
lds
frstor
ror
out
and
sub
push
jp
cmp
lds
das
ret
loop
adc
into
fcmovne
aas
gs
xchg
enter
iret
shl
xchg
cmovl
aam
test
sub
xor
fist
inc
mov
mov
jle
setle
loopne
or
jmp
xor
xchg
aas
int
add
or
add
inc
popa
test
aaa
out
xchg
lods
(bad)
shl
div
repz
loopne
pop
lahf
push
inc
fld
jmp
push
fistp
pop
push
xchg
pop
mov
inc
shl
cld
lds
mov
inc
pusha
arpl
jl
bound
scas
or
shl
ins
aad
push
mov
xchg
and
mov
in
imul
jecxz
inc
push
push
ret
mov
arpl
inc
inc
xchg
int
inc
not
loopne
push
repz
mov
push
das
(bad)
mov
cli
inc
pop
fcmovne
sub
fdiv
sahf
inc
enter
stos
jg
aaa
jl
mov
push
fstp
cwde
push
xchg
mov
or
cmp
aad
jo
or
loop
mov
xor
sbb
lgdtd
pop
loopne
xchg
adc
jnp
fldenv
jl
aaa
adc
sbb
mov
mov
sbb
cdq
jne
jg
loope
add
lock
jmp
je
inc
sahf
fld
mov
popa
or
or
idiv
iret
hlt
and
inc
fwait
jge
push
jne
loopne
inc
movs
sub
test
mov
or
add
xchg
xchg
sti
dec
mov
or
jo
pushf
test
push
xchg
ins
sub
hlt
jnp
dec
xchg
sub
sahf
fadd
jns
stos
inc
call
or
rcl
outs
loope
add
cmps
scas
lss
out
(bad)
pop
dec
cmps
sbb
data16
mov
sub
into
popf
test
inc
fwait
mov
fstp
inc
dec
xchg
ror
test
sti
xor
js
cmp
pop
xor
test
into
test
sbb
loope
add
out
xchg
jnp
sbb
sbb
mov
xchg
adc
push
scas
fidivr
add
mov
cli
add
mov
jnp
lods
adc
rol
scas
leave
imul
call
pop
mov
xor
push
(bad)
aad
lods
in
int
cmps
repz
push
movs
jge
fxch
push
sbb
loope
pushf
and
adc
iret
push
xchg
mov
test
(bad)
ja
xchg
mov
les
retf
out
mul
ins
scas
icebp
test
lds
aad
jle
test
dec
in
jl
mov
mov
in
ret
jb
rcr
lahf
mov
jne
add
js
jmp
sub
pop
dec
stos
pop
div
cmp
enter
(bad)
in
add
jo
bound
imul
xchg
bnd
jg
sub
inc
dec
dec
sbb
in
add
iret
cmp
test
push
mov
push
outs
ds
cmps
mov
and
cmp
cs
int
and
and
lds
enter
mov
adc
jo
pop
pop
test
retf
or
call
cdq
test
sbb
sbb
in
cmp
lea
add
fs
aad
mov
fcom
iret
outs
xchg
sub
dec
cmp
dec
nop
test
mov
pushf
fs
ins
(bad)
fist
xchg
inc
retf
into
pop
adc
lods
jecxz
into
sub
mov
data16
inc
cmp
mov
stos
into
imul
idiv
(bad)
fcom
rcl
push
jge
outs
test
(bad)
push
jg
mov
dec
leave
add
call
sbb
and
xor
je
xchg
sti
das
pop
cmp
push
cmc
(bad)
inc
ret
popf
xor
xchg
call
add
stc
sub
mov
std
cmp
mov
pop
mov
js
mov
mov
cmp
add
test
mov
mov
add
jnp
les
je
jb
add
popf
mov
push
mov
call
repnz
xchg
dec
and
out
jbe
pop
out
cmps
adc
jnp
pop
popa
pushf
push
cmp
sbb
mov
xor
pop
sbb
ret
retf
sbb
aad
pop
nop
dec
jg
(bad)
scas
adc
stc
pop
sbb
jmp
jne
push
aaa
imul
inc
jne
jns
lods
xchg
add
inc
pop
sbb
add
adc
xchg
mov
test
and
sub
xchg
aam
leave
lods
xchg
inc
mov
les
push
xchg
adc
movs
push
ins
fistp
or
jle
lahf
into
adc
or
test
sbb
jnp
adc
cmp
daa
fist
push
(bad)
call
test
mov
call
std
pusha
mov
mov
xor
ss
das
mov
out
jbe
add
lea
push
arpl
adc
lods
out
jmp
jns
aam
mov
(bad)
retf
or
stos
stos
fcomp
lods
mov
pusha
popa
ss
xchg
aaa
cmp
cld
xlat
out
jb
pop
repnz
rcl
jo
in
dec
xor
(bad)
ins
(bad)
xor
mov
jle
cmc
push
xor
jecxz
pop
hlt
add
cmp
mov
in
sbb
fcomip
xchg
push
mov
mov
(bad)
lods
jb
jl
pusha
push
or
mov
sub
and
loopne
daa
jns
mov
in
call
adc
add
data16
adc
cmp
iret
mov
pop
pop
(bad)
stos
push
and
lds
cmps
inc
dec
shl
pop
jnp
ret
(bad)
fistp
jmp
adc
gs
push
or
retf
inc
cmp
daa
cmc
movs
es
imul
add
dec
cmp
dec
mov
mov
arpl
mov
aam
push
cmp
loopne
ja
jecxz
push
sub
jne
adc
push
mov
mov
xchg
jmp
sbb
pop
dec
hlt
adc
mov
in
jb
in
cmp
shl
dec
pop
pusha
out
dec
jbe
pop
xor
outs
test
jns
cmp
sbb
jbe
inc
inc
mov
sub
mov
mov
movs
test
adc
jle
call
stc
fidivr
dec
(bad)
outs
add
shl
sti
adc
fmulp
icebp
xchg
xor
out
in
xchg
dec
lock
pop
mov
jae
int3
addr16
or
jb
sbb
popf
fdivp
in
int
jmp
cmps
and
dec
les
hlt
sub
scas
pop
loope
sub
xchg
cdq
dec
stos
pop
jae
push
cwde
fld
push
inc
xor
cmp
xchg
pop
mov
inc
push
shr
lds
mov
pop
ins
std
xor
rol
fwait
inc
sbb
ins
xor
sbb
dec
cdq
scas
mov
jae
push
dec
mov
or
sub
outs
mov
jmp
sbb
ds
add
pop
out
cmp
push
pop
mov
fdiv
gs
and
fs
aas
mov
inc
or
dec
fisubr
test
mov
cdq
sub
shr
push
mov
mov
xor
dec
jecxz
push
shl
je
shr
inc
outs
push
xchg
adc
xor
cmps
pop
mov
xlat
rcl
mov
repnz
pop
jo
mov
or
sub
xor
movs
fdivr
lods
jle
mov
push
cmps
cs
and
loop
call
(bad)
gs
fbld
dec
fdiv
das
lods
leave
fcmovnu
xchg
and
call
xor
ins
pusha
mov
pop
clc
pop
mov
enter
retf
shl
fsubr
dec
adc
or
sbb
cmps
dec
bnd
lds
or
movs
lock
jmp
lahf
int3
sub
dec
dec
push
xor
mov
pop
jge
cmp
xor
in
cwde
xor
repnz
jae
push
and
xlat
sahf
jb
mov
inc
jge
cmp
push
mov
movs
mov
je
aaa
enter
rcl
push
ins
xor
ja
inc
xor
adc
mov
or
xchg
and
inc
mov
std
inc
les
repz
and
loop
xlat
pop
push
mov
and
aas
push
movs
ret
pop
fld
xchg
cld
pavgw
fnsave
mov
aaa
push
in
xchg
into
sub
mov
mov
pop
nop
sahf
jmp
jp
pop
sahf
push
mov
push
add
sub
push
xchg
adc
cdq
pop
gs
adc
mov
mov
cmp
xor
mov
pushf
add
and
sar
fidiv
adc
stc
xchg
pop
jl
jl
cmp
in
out
fsub
inc
xchg
cwde
mov
xchg
(bad)
jge
call
add
jl
cwde
mov
scas
pop
lock
mov
imul
pop
push
mov
sub
sub
icebp
push
loope
retf
call
mov
std
stc
sti
popa
loopne
jbe
cmp
jg
xor
jl
cdq
fs
xor
xor
xchg
aas
(bad)
mov
push
in
pop
adc
ins
xor
add
and
mov
jb
xor
cmp
mov
xlat
test
dec
sub
retf
shl
jns
aam
bound
mov
push
mov
jg
mov
cmp
es
xor
movs
mov
jmp
dec
neg
retf
in
jae
jg
xchg
iret
dec
jmp
cmp
add
push
add
mov
sub
push
cmps
daa
add
and
cli
push
inc
add
movs
xchg
ins
(bad)
out
jge
and
mov
rol
mov
sub
loop
lods
xor
lods
mov
sbb
mov
jno
daa
dec
rcr
add
out
ror
xchg
test
mov
lock
or
inc
rcl
push
dec
dec
add
or
jnp
push
test
jmp
clc
fcmove
lea
scas
pop
sub
pusha
int3
jmp
jge
push
rcl
mov
push
and
lock
sahf
mov
push
(bad)
out
sbb
jmp
sub
push
sub
mul
rcl
push
push
dec
mov
mov
icebp
popf
dec
pop
mov
lahf
sahf
int
xchg
stc
jae
cmp
pop
jnp
imul
out
jnp
jbe
push
sbb
sub
add
stos
int3
or
sbb
pop
or
mov
imul
jo
fadd
mov
push
test
addr16
add
fdiv
lods
fild
inc
test
cmp
(bad)
sti
ret
and
cld
inc
adc
mov
sbb
ret
cmp
inc
cmc
enter
cmp
xor
js
lock
in
icebp
jmp
add
pop
dec
mov
xor
rcl
sub
dec
fisttp
dec
je
js
inc
call
jge
pop
sub
loope
bswap
cwde
mov
pusha
cld
lahf
ins
repnz
mov
pop
lahf
scas
(bad)
dec
lock
inc
sub
sar
mov
jno
aaa
movs
test
retf
add
cmp
scas
stc
xor
ror
mov
xlat
push
xchg
pop
mov
test
call
pop
mov
jno
jmp
lock
jno
fcomp
push
int
into
jnp
dec
nop
or
fild
xchg
into
ficomp
imul
ja
int
mov
ins
js
sbb
test
lock
push
fst
push
jne
dec
stc
pop
and
pop
jmp
xchg
mov
js
gs
scas
(bad)
shl
ins
test
dec
cld
(bad)
in
and
test
and
inc
int
dec
leave
xchg
pop
pop
xchg
add
jmp
int3
jg
ja
(bad)
and
cdq
inc
cmp
sbb
nop
cmp
cli
int3
cmp
fwait
add
jno
add
jmp
lahf
sbb
fnstenv
mov
(bad)
test
or
mov
imul
(bad)
aam
cmp
cld
or
in
popa
mov
std
call
add
xor
adc
mov
mov
or
xchg
add
ins
sbb
call
push
ja
test
adc
mov
pop
hlt
(bad)
sar
lods
pop
push
popa
lahf
or
bound
ret
cwde
(bad)
clc
sbb
fisttp
and
sbb
icebp
and
and
mov
mov
adc
push
mov
loopne
jmp
or
inc
push
lods
out
push
xor
mov
popa
sbb
rol
cmp
adc
loopne
inc
dec
push
cmp
test
xchg
in
outs
adc
sub
xchg
cli
and
fwait
and
rol
jl
retf
imul
mov
fsubrp
pop
cld
xchg
sbb
imul
call
inc
pushw
push
shr
and
in
leave
mov
movs
cmp
mov
scas
xchg
(bad)
je
add
add
push
sbb
sbb
es
cwde
lods
nop
mov
mov
(bad)
ds
stos
push
mov
clc
xchg
inc
and
daa
or
or
test
ja
xor
mov
popa
xor
nop
iret
sub
jl
fwait
rcr
and
sbb
jae
sbb
fisubr
cmps
ret
test
jmp
rcl
fwait
movs
xor
inc
cmps
jg
inc
leave
jg
xor
shr
out
ins
fistp
jmp
adc
iret
pop
hlt
fistp
call
test
ret
dec
les
mov
add
dec
out
sub
in
sbb
arpl
cmc
cwde
xchg
dec
repnz
dec
repnz
or
(bad)
jns
lods
cld
push
je
aad
les
push
aad
xor
mov
dec
cmps
dec
jno
fisttp
push
ret
add
cwde
shr
xchg
out
(bad)
shr
pop
cdq
clc
add
iret
adc
out
aas
call
jmp
fild
int
jmp
data16
(bad)
nop
adc
cmp
cld
pop
and
sub
adc
mov
(bad)
lock
cmp
jg
mov
cld
es
push
xchg
fs
add
jle
push
inc
jg
mov
add
mov
enter
xor
sar
imul
push
and
mov
mov
cmp
repz
icebp
aad
adc
fnsave
lock
push
add
popa
jb
cmc
das
mov
push
in
cwde
popa
jns
mov
mov
in
cmps
bound
arpl
(bad)
lods
push
out
dec
jne
jg
fdivp
xor
(bad)
test
mov
std
push
mov
sbb
rol
out
(bad)
cmps
call
dec
sub
xchg
xor
jmp
fs
call
out
in
fs
adc
rcr
push
inc
into
repnz
and
adc
ins
adc
outs
fbstp
pop
xchg
ins
adc
cld
enter
push
sub
xchg
mov
je
pop
lahf
lds
fs
sbb
fmul
xchg
mov
mov
pop
leave
fisub
xchg
iret
test
fs
pop
ja
jmp
push
and
mov
mov
lds
push
rol
and
mov
dec
mov
cli
fadd
inc
mov
lea
xchg
push
cmp
sahf
and
in
pusha
scas
mov
loop
push
or
and
push
fsub
and
(bad)
jle
xlat
rcr
call
jp
sbb
(bad)
sti
or
dec
test
inc
int3
push
leave
push
or
fisub
stos
sahf
(bad)
in
das
xchg
sub
clc
push
stc
lods
shl
inc
addr16
mov
xor
jmp
mov
pop
daa
ss
mov
mov
inc
test
cmp
int3
mov
jns
cmps
mov
cli
sbb
xchg
outs
dec
pop
test
js
outs
lods
std
mov
aas
inc
aam
mov
inc
add
jmp
mov
retf
jle
(bad)
(bad)
jb
scas
jbe
jnp
daa
and
dec
ds
inc
sub
sahf
dec
jmp
mov
mul
movs
cmp
ins
and
call
xlat
or
wrmsr
or
sbb
add
hlt
repz
in
in
sbb
cmps
lds
mov
push
rol
and
cwde
loope
sar
sub
add
sub
out
and
(bad)
push
bound
bound
imul
loopne
das
dec
cmp
fcom
xchg
sbb
pop
pop
(bad)
sbb
into
xor
cmp
pop
cmp
jns
imul
inc
sub
idiv
cli
iret
inc
jb
and
scas
out
ja
lahf
enter
ja
sub
int3
in
jne
sub
lock
in
xlat
cmp
jbe
mov
mov
scas
enter
std
shr
retf
jb
xchg
mov
inc
test
or
call
loopne
pusha
push
test
jle
or
(bad)
mov
(bad)
rol
sbb
xchg
pushf
pop
and
inc
cmps
in
or
ja
data16
mov
add
dec
jg
hlt
mov
xor
ficomp
stc
rcr
adc
mov
jns
mov
xchg
or
pop
xchg
call
add
test
imul
dec
dec
dec
cmp
jmp
call
lock
mov
mov
push
sub
jbe
fs
inc
outs
icebp
cmp
dec
xchg
and
sub
mov
mov
sub
and
push
int
imul
mov
je
inc
dec
mov
ror
lds
inc
xor
cmp
dec
cld
jecxz
dec
arpl
inc
ins
into
sub
sbb
jno
xchg
xor
cmc
mov
test
add
push
inc
mov
cdq
retf
int3
mov
pop
lea
and
test
dec
pushf
xor
mov
mov
repz
adc
(bad)
mov
pop
cmps
es
or
xlat
mov
pop
call
or
xchg
lahf
mov
test
(bad)
sbb
iret
mov
addr16
jo
div
adc
pop
stc
mov
sti
push
lods
(bad)
cmp
add
neg
iret
mov
adc
movs
and
mov
(bad)
push
stc
dec
and
mov
pushf
and
mov
scas
test
pop
neg
and
popa
inc
and
cmp
cmps
ss
xchg
in
enter
sub
and
dec
xchg
jbe
mov
mov
ins
out
in
add
add
dec
int
xor
sbb
pop
test
inc
sub
add
stc
lock
lahf
adc
lods
xor
pop
mov
nop
(bad)
ss
rcl
xchg
test
or
dec
xchg
add
dec
pop
mov
test
and
ins
mov
int
je
jmp
xchg
xor
in
in
das
adc
test
jle
sahf
cmp
in
cmp
add
sub
call
jmp
ins
dec
icebp
addr16
mov
pop
cmp
out
pop
fmulp
fwait
sub
ins
lds
and
loope
cwde
or
repz
(bad)
(bad)
pop
xchg
in
fstp
imul
xor
daa
xchg
dec
or
neg
aam
stc
in
jae
fnstsw
sti
ds
aad
xchg
neg
out
js
enter
clc
int3
lods
int3
sub
sbb
mov
(bad)
add
stos
xlat
cs
or
dec
mov
push
mov
sub
int
dec
jp
jae
mov
ins
sub
and
in
push
ins
push
test
into
mov
fild
jg
cmp
(bad)
cld
xor
fsubr
mov
mov
inc
out
mov
mov
bound
adc
fs
dec
sar
test
xchg
adc
xchg
sub
push
sub
jl
addr16
dec
cdq
bound
mov
shr
inc
xchg
mov
repz
push
cmps
lock
out
fld
mov
repz
xchg
inc
out
cdq
test
je
(bad)
ss
pop
cmp
ret
adc
das
push
pop
mov
push
lea
add
stos
xor
jp
iret
repz
pop
jp
pop
outs
std
imul
mov
scas
fidivr
repz
add
ds
lods
(bad)
jae
mov
outs
fld
add
cdq
pop
(bad)
and
ins
pusha
fs
call
data16
add
in
push
pop
mov
xor
jbe
hlt
outs
clc
inc
mov
mov
in
loope
xchg
inc
rcl
push
mov
mov
jecxz
push
es
icebp
cmp
call
jb
jae
ins
cld
sub
add
call
add
add
test
loop
test
push
pop
int
(bad)
ror
fadd
scas
mov
dec
xchg
retf
xchg
lds
push
inc
mov
ror
mov
ins
(bad)
or
push
jbe
inc
jmp
add
inc
jae
(bad)
cs
(bad)
outs
dec
adc
not
rcl
imul
xchg
dec
dec
ret
jne
sub
pop
jb
and
mov
push
arpl
or
xchg
pusha
inc
lods
or
in
test
jnp
jmp
mov
pop
test
inc
test
push
out
loopne
dec
dec
sar
push
stos
icebp
xchg
sbb
sbb
xor
into
movs
sahf
add
ds
cmp
cmp
outs
popa
sub
jg
imul
mov
sub
stos
push
je
sbb
cmp
mov
ins
cld
adc
sub
ja
sar
xor
(bad)
das
out
adc
lods
sti
push
jmp
xchg
call
add
imul
xchg
xlat
pop
mov
adc
mov
in
pop
and
jmp
call
repz
mov
daa
fst
jmp
cmps
int3
cs
int3
dec
add
xchg
int
bnd
js
shr
lods
dec
(bad)
jae
(bad)
stc
xchg
jb
sbb
leave
add
js
sbb
sub
and
out
xchg
cmp
sub
mov
pop
loope
mov
push
in
sti
or
lods
pop
xchg
xchg
mov
cmps
push
adc
in
out
add
dec
(bad)
and
test
cmps
dec
nop
sub
ins
add
lods
(bad)
retf
xchg
adc
mov
and
cmp
push
fsubr
dec
shl
ss
outs
xor
sub
in
jmp
jg
jg
in
jae
mov
jmp
cdq
cmps
test
add
xlat
add
jge
mov
xor
cdq
sub
dec
lahf
and
mov
cwde
scas
cmps
mov
das
xchg
mov
pop
movs
jns
mov
ss
pushf
fisttp
push
scas
jbe
arpl
shl
les
jae
stc
stos
mov
push
xor
imul
shr
stos
jmp
(bad)
test
ficom
inc
mov
cmp
or
(bad)
jmp
test
cmp
or
xor
adc
rol
ins
(bad)
pop
aad
ss
add
add
mov
jb
mov
jge
xchg
or
jl
xchg
cmp
dec
dec
inc
ds
xor
mov
stos
dec
jmp
sub
xor
mov
shl
dec
sub
out
addr16
pop
pop
es
jne
outs
pop
or
dec
pop
jns
cmp
(bad)
call
and
mov
retf
mov
(bad)
xchg
pop
ret
hlt
inc
or
aam
adc
xor
repz
mov
xchg
outs
(bad)
cs
mov
jbe
add
mov
pop
test
xchg
jmp
jbe
push
call
cli
xchg
mov
xor
js
out
cmps
outs
pop
fnsave
cmp
xchg
inc
aaa
push
data16
rep
cmp
mov
add
cmp
sub
jmp
xchg
adc
jno
jno
pop
push
jo
(bad)
mov
adc
popf
sbb
push
ror
(bad)
dec
shr
dec
aaa
in
shr
push
mov
adc
cli
loopne
push
lock
fimul
outs
mov
sbb
xchg
cdq
out
arpl
test
popf
ds
and
pushf
inc
cmps
ins
add
in
dec
sbb
inc
or
jae
xor
xor
sub
fsub
push
jne
icebp
xchg
lds
movs
frstor
retf
mov
adc
mov
lea
sti
shr
sub
out
adc
je
mov
shl
movs
(bad)
cli
jl
cwde
pop
inc
fcom
fild
outs
mov
cdq
es
mov
xchg
enter
pop
inc
rol
inc
bswap
adc
dec
addr16
xor
in
scas
das
push
icebp
rcl
call
clc
mov
ds
ja
add
aas
mov
cmp
fist
pop
mov
adc
xchg
inc
ret
xor
cmp
cmp
and
idiv
jmp
and
gs
aam
arpl
dec
cmp
iret
outs
push
inc
fiadd
(bad)
call
mov
test
mov
xor
pop
addr16
push
xchg
xchg
add
xchg
iret
inc
mov
mov
fnstcw
adc
outs
cmp
sub
mov
push
mov
rcr
addr16
ja
xor
inc
std
rol
inc
retf
int
push
mov
xchg
jo
scas
fnstsw
jp
rol
sbb
stos
(bad)
or
sbb
jns
mov
movs
js
ror
addr16
jl
push
shr
sbb
ret
pushf
adc
pop
or
xchg
jg
fnsave
push
mov
dec
ins
out
cmc
sbb
fwait
add
js
int3
sub
mov
loopne
cmps
push
addr16
or
adc
ret
mov
imul
fs
hlt
jb
movs
and
in
cmp
repz
xor
sub
or
cmps
iret
stc
jg
jmp
call
adc
xor
jl
add
(bad)
mov
icebp
ins
jae
inc
aad
mov
rol
call
add
inc
jbe
xchg
aaa
jne
int
mov
jne
arpl
cmp
sbb
dec
popf
or
fs
fst
jge
inc
inc
rol
test
inc
arpl
ins
jo
and
cmps
retf
pop
sbb
push
mov
cmp
and
xor
daa
adc
out
adc
aaa
lea
into
inc
popa
in
ss
(bad)
mov
pushf
(bad)
clc
adc
out
aas
add
int3
shl
dec
sbb
mov
mov
jnp
lods
jne
shl
movs
mov
sub
jmp
cld
fisttp
mov
int3
xchg
fisubr
cdq
xchg
jmp
in
(bad)
stc
push
test
mov
in
and
scas
loop
or
hlt
(bad)
sbb
fsincos
rol
shl
push
jmp
fisub
data16
fs
mov
sbb
sar
jp
mov
inc
outs
cmp
in
popa
jmp
jne
pop
dec
out
mov
(bad)
sti
bnd
add
sbb
cmc
fiadd
jecxz
xor
add
jns
adc
imul
dec
adc
cli
imul
ins
ret
outs
lock
fmul
in
mov
test
mov
mov
jae
pop
fwait
aad
repnz
lock
pop
sbb
cmp
xchg
ret
add
outs
enter
loope
rol
pushf
cs
dec
cmp
mov
(bad)
pushf
imul
inc
call
cmp
shl
jp
fstp
mov
cmp
loope
mov
jg
mov
sbb
xor
lods
mov
dec
pop
mov
shl
fcomp
mov
xlat
jmp
pop
cmp
sbb
(bad)
mov
movs
js
push
out
std
pop
pushf
loop
jns
inc
inc
sub
test
push
jp
mov
mov
cmp
and
xor
cmc
inc
jp
pop
dec
(bad)
jmp
dec
jbe
cmps
jg
ins
imul
or
fs
inc
jmp
retf
jmp
inc
out
adc
fdivr
popa
lea
pop
movs
imul
add
idiv
stos
xchg
sbb
or
stc
fild
nop
jb
mov
push
or
pop
rol
imul
mov
rcr
aam
pop
dec
ds
fcomip
ds
mov
sbb
jle
stos
rcr
pop
cmp
sub
adc
les
int
and
(bad)
cmp
xchg
adc
lods
xor
push
pop
xlat
or
mov
sbb
icebp
call
retf
loope
mov
inc
lock
cmc
dec
sbb
inc
(bad)
test
ficomp
sahf
ds
mov
sub
xchg
add
sub
test
scas
cmp
xor
(bad)
std
pop
mov
xor
sbb
inc
add
pushf
pop
out
pop
mov
push
jmp
repz
jge
scas
aaa
imul
arpl
inc
pop
inc
or
mov
mov
mov
push
mov
or
mov
sub
test
jge
mov
xor
sub
pop
jecxz
mov
pop
call
out
mov
xchg
mov
mov
out
lahf
stc
enter
xor
neg
mov
mov
add
mov
ss
push
sbb
cmp
dec
shr
mov
sub
sti
mov
mov
xchg
inc
dec
mov
and
sysenter
aad
pop
adc
lea
inc
pop
mov
inc
ins
jo
jnp
fst
inc
sahf
addr16
rcl
mov
add
jno
ins
syscall
dec
test
in
and
dec
adc
hlt
fmulp
or
mov
retf
mov
xchg
sbb
int3
or
out
adc
jecxz
jmp
mov
fadd
mov
sahf
ins
pop
call
ret
cdq
pop
inc
mov
xchg
push
lock
mov
mov
xchg
ins
imul
aad
retf
dec
fidiv
leave
adc
jns
dec
(bad)
jns
outs
sub
iret
int
test
fisub
mov
jmp
cmps
mov
not
pushf
add
fild
(bad)
pop
adc
xor
sub
adc
or
sub
shl
mov
imul
std
pop
and
adc
fstenv
ja
(bad)
xor
push
addr16
pop
xchg
mov
pop
dec
sub
leave
daa
jp
jmp
xchg
push
(bad)
mov
aas
mov
mov
lods
push
or
jg
adc
mov
push
push
aas
and
push
jmp
add
cwde
test
ins
out
and
xchg
inc
fisub
pop
mov
shl
push
sub
xchg
xor
aaa
xchg
test
(bad)
mov
(bad)
and
cmp
les
cli
inc
jecxz
xchg
lods
xchg
adc
push
(bad)
stos
and
and
std
cmc
nop
in
das
clc
lock
(bad)
and
push
mov
sbb
jp
dec
or
xor
movs
stos
shl
or
or
test
cli
and
stos
rol
aad
add
mov
pop
sub
in
in
mul
xor
cmp
xlat
int
cmp
sti
jb
es
dec
pop
movs
push
enter
push
mov
scas
jo
mov
and
ret
jnp
shl
shl
test
out
jmp
lods
test
scas
outs
mov
sub
adc
push
mov
(bad)
sar
loopne
jb
dec
xchg
(bad)
ds
(bad)
jb
sbb
outs
aam
inc
call
loop
sbb
out
dec
bound
cs
mov
(bad)
sub
push
and
sub
lock
movs
clc
push
dec
stos
retf
movs
cdq
hlt
xchg
imul
(bad)
push
(bad)
adc
push
call
popa
jmp
into
mov
js
bound
addr16
imul
sub
dec
dec
ja
fwait
pop
dec
aas
adc
mov
lea
pusha
sbb
mov
in
fidiv
leave
add
cwde
pop
and
xor
(bad)
icebp
adc
leave
test
mov
adc
dec
jmp
in
jg
or
mov
call
jmp
pop
rcl
sub
pop
scas
bound
out
push
pop
lods
out
cmp
or
pop
fcmovb
xchg
test
sbb
fidiv
ss
sub
movs
jle
movs
cwde
mov
shl
fdiv
lock
mov
js
sbb
popf
sub
fldcw
sub
repz
fwait
daa
shl
jbe
das
adc
fs
in
inc
aam
in
fwait
adc
jae
cmps
addr16
loope
pop
push
adc
sbb
(bad)
hlt
aas
pop
sbb
aaa
dec
mov
mov
in
adc
push
retf
pop
or
imul
int3
sti
adc
or
mov
sub
stos
push
lahf
pop
inc
mov
nop
and
loop
cmp
and
sbb
push
enter
dec
retf
or
pop
pop
push
mov
aad
daa
mov
fwait
push
call
rcr
or
ja
adc
xchg
lods
loop
movs
pusha
adc
cmp
mov
inc
cli
retf
inc
sar
sub
shl
and
pop
outs
shl
fild
sbb
and
ffreep
dec
and
fs
and
jg
rol
mov
jmp
adc
add
xor
mov
test
clc
or
lods
ds
into
push
dec
pop
ss
fild
mov
lods
aas
pop
or
and
jp
mov
pop
je
mov
xchg
jnp
sub
push
outs
dec
mov
movs
popa
test
mov
cli
xor
pop
sub
mov
jl
dec
call
push
movs
sbb
sbb
retf
push
mov
aaa
cmp
jl
in
cmp
aad
leave
and
add
pop
test
jne
data16
or
ficom
ds
pop
pop
xchg
cdq
outs
or
call
cmp
jecxz
push
push
js
clc
pusha
ds
stos
out
jmp
das
xor
in
jl
test
popa
not
movs
xor
in
es
test
mov
leave
xchg
stos
mov
leave
or
inc
sbb
clc
or
mov
inc
iret
leave
and
imul
das
sub
cmp
pop
gs
adc
cdq
mov
xor
push
in
cwde
add
fistp
out
jp
inc
mov
sar
pop
jecxz
sub
mov
dec
loopne
adc
js
(bad)
fisubr
push
mov
ds
es
sbb
cmp
inc
mov
pop
pop
xlat
inc
jp
test
outs
aas
dec
dec
or
mov
sub
cwde
xchg
sar
push
dec
retf
ins
mov
cmp
mov
cmps
jmp
and
sub
mov
pop
sub
test
(bad)
jmp
mov
shl
mov
xchg
pop
jmp
inc
mov
jnp
data16
jl
jecxz
push
outs
sbb
dec
daa
ins
mov
mov
movs
cmp
pop
adc
pop
jle
scas
sub
dec
repz
and
pop
mov
imul
(bad)
loop
sbb
jno
dec
mov
or
pushf
sbb
inc
jle
loope
rcl
inc
xlat
mov
out
jmp
pop
adc
push
repz
out
xchg
popf
dec
retf
mov
adc
xchg
or
aas
sti
cmp
jae
pop
adc
shl
ins
scas
inc
inc
cmp
pop
xchg
addr16
cmps
in
xchg
das
mov
sbb
in
retf
dec
repnz
stos
inc
sub
(bad)
pushf
add
cli
movs
mov
mov
mov
mov
pop
(bad)
jae
loopne
fstp
sub
popa
test
fmul
xchg
(bad)
out
xchg
mov
sbb
hlt
stos
ds
dec
xor
sbb
sahf
push
das
jo
ffreep
push
sbb
test
push
fisubr
out
mov
mov
mov
pop
fidiv
outs
retf
int3
sub
fisttp
(bad)
in
mov
lods
mov
lds
and
sbb
fs
outs
sar
pusha
lea
leave
mov
xor
shr
xchg
fwait
rcr
(bad)
js
xor
mov
add
add
push
pusha
sti
ja
and
xor
(bad)
jmp
sbb
sbb
adc
ja
out
daa
jo
mov
neg
mov
jg
bound
jne
sub
das
test
pop
xchg
sbb
dec
cs
ins
mov
cmp
xchg
inc
sbb
mov
pop
mov
call
rcr
xor
inc
mov
mov
push
push
imul
retf
mov
xchg
pushf
out
jmp
adc
fwait
cmp
cmp
outs
rol
sbb
xchg
daa
cmc
push
adc
xor
or
add
aam
jo
jne
mov
fs
aas
aaa
jno
lods
int3
fucom
int3
mov
mov
adc
mov
lds
sub
and
mov
xlat
jno
(bad)
xor
imul
xor
push
and
fst
or
sub
fcomp
xlat
stos
out
les
and
dec
lock
ja
pop
mov
sbb
pop
stc
movs
xlat
lds
xchg
jge
sbb
or
ror
std
sbb
clc
icebp
lea
push
stos
mov
or
cmp
outs
test
push
pop
fbld
(bad)
xor
add
cwde
jnp
outs
fsubrp
xchg
xchg
(bad)
arpl
pop
push
inc
add
(bad)
push
test
adc
push
mov
inc
mov
(bad)
mov
shl
jo
xor
test
je
ds
pop
pop
aaa
into
and
fwait
pop
daa
and
(bad)
stos
ret
test
dec
add
ret
jg
lock
jns
shl
push
push
loope
jae
je
push
scas
jne
test
push
sbb
mov
adc
loope
sbb
jl
push
enter
xchg
push
jl
jl
imul
int3
rcr
cli
mov
or
push
mov
push
mov
lods
cmp
pop
cdq
xchg
mov
sub
xchg
pop
fimul
mov
fs
fild
jle
push
mov
lds
in
mov
jne
cmps
test
xchg
add
cdq
fstp
in
push
mov
ins
daa
dec
cmp
clc
(bad)
in
jno
pop
(bad)
xor
cwde
pop
cmp
test
adc
repnz
sahf
mov
dec
stos
jg
dec
add
mov
xor
mov
je
jmp
jmp
neg
(bad)
pop
or
popa
sbb
call
fadd
add
aam
test
sbb
lock
dec
jae
sub
in
std
xchg
add
cmp
daa
loopne
push
fsub
lods
jns
imul
inc
jns
jo
xlat
(bad)
fistp
and
jg
mov
push
fisubr
aam
movs
cld
jnp
push
movs
(bad)
adc
aas
push
pop
xchg
add
fs
xchg
test
mov
fistp
jns
xor
push
cmp
fstp
cmps
dec
lock
mov
in
push
pop
pusha
clc
ss
jne
lea
ret
push
fist
pop
bound
pop
push
mov
std
or
out
adc
pusha
jmp
push
je
sbb
mov
into
sbb
daa
inc
cld
and
mov
dec
add
cmp
aaa
push
hlt
(bad)
(bad)
sbb
je
cmovns
ja
jne
popf
sbb
or
adc
adc
mov
jg
push
and
call
clc
add
jecxz
push
sti
leave
fistp
or
call
xor
inc
popf
movs
aas
mov
push
cmp
mov
daa
out
lahf
cmps
aaa
or
mov
movs
inc
clc
out
nop
and
scas
aam
cmp
push
add
or
jmp
xor
js
jne
retf
repz
fmul
stc
xchg
dec
aad
jno
xor
xchg
arpl
mov
jge
jle
cdq
in
mov
sbb
mov
cli
dec
rcr
mov
aam
push
jb
iret
call
mov
fxch
mov
mov
inc
and
in
inc
ret
cmp
outs
out
shr
pop
(bad)
iret
add
mov
jl
add
pop
imul
test
inc
or
or
int
call
jmp
fsub
shl
push
inc
sub
mov
retf
add
and
cli
mov
xchg
mov
sub
and
inc
cmc
aaa
loop
loopne
xor
xor
adc
or
xor
stos
aam
imul
xchg
sub
inc
out
iret
jge
(bad)
mov
loopne
inc
lock
xchg
xlat
mov
sar
xchg
cmp
add
jg
bound
or
shl
pop
fld
xchg
and
sbb
xchg
xor
fnstenv
xchg
adc
out
cmp
cmp
scas
sbb
mov
(bad)
inc
repnz
out
adc
ret
push
test
adc
retf
pop
movs
in
sub
(bad)
outs
ins
fs
rcl
mov
add
inc
cmp
or
(bad)
mov
jle
icebp
add
push
sub
mov
push
jae
std
call
hlt
lock
xlat
aaa
mov
dec
xchg
mov
push
call
and
jo
jp
shr
dec
test
jne
inc
(bad)
arpl
sbb
clc
xor
cmp
ins
adc
adc
int
mov
sub
mov
dec
push
or
mov
ins
push
pop
in
add
test
and
adc
stc
xor
sbb
ja
and
pop
hlt
pushf
aam
aad
shl
pop
in
add
int
xor
jmp
div
sub
push
fsub
push
aam
jns
lahf
dec
dec
aaa
sub
rcl
sar
mov
jge
mov
xchg
pop
jecxz
retf
push
(bad)
fdiv
es
mov
rcr
sbb
push
pop
test
shr
aas
sti
add
sbb
rsqrtps
jmp
loop
aaa
cwde
and
xchg
lahf
mov
pop
popa
rol
dec
push
out
mov
sbb
loopne
or
and
les
fisttp
push
lahf
ins
movs
inc
xchg
aam
pop
es
nop
je
inc
sbb
test
imul
cmp
(bad)
out
xchg
adc
fnstcw
dec
fdivrp
push
cmp
xchg
sbb
sbb
push
es
sar
mov
gs
ss
(bad)
into
ja
inc
arpl
push
mov
ss
std
fadd
fwait
rcl
push
push
or
out
mov
or
cwde
sbb
addr16
push
dec
add
adc
repz
movs
sub
in
mov
or
xchg
out
clc
push
ins
lock
xchg
mov
cwde
mov
cld
mov
ins
scas
loope
js
ret
jge
call
repnz
xchg
mov
xor
ds
sbb
or
pop
getsec
inc
shr
test
scas
jno
push
mov
std
inc
mov
mov
cmp
test
jmp
xchg
aad
push
mov
(bad)
aam
xor
(bad)
or
fld
dec
inc
nop
lahf
in
add
je
jns
bound
add
not
cli
lods
cmp
fst
into
dec
sub
mov
pusha
test
mov
in
retf
mov
and
mov
dec
dec
cld
add
loopne
aam
ss
push
pop
sahf
pushf
xor
imul
bnd
test
test
je
sbb
jge
jg
xor
mov
cli
test
or
into
lahf
push
(bad)
cmp
add
sbb
mov
mov
dec
std
ret
push
jb
stos
push
pop
pusha
lock
jb
xchg
aas
test
jecxz
(bad)
dec
clc
(bad)
sub
inc
sub
push
mov
cmp
inc
mov
loopne
psllw
(bad)
pop
sub
shr
cld
rcr
jmp
mov
das
and
lfs
outs
outs
cmps
and
fistp
fist
out
xchg
cmp
and
bndstx
imul
mov
je
dec
js
fst
fsub
addr16
jns
fiadd
cmp
pop
in
sub
pop
fnstenv
jbe
pop
mov
cmps
cwde
imul
xchg
jmp
ror
mov
jl
jge
sbb
xchg
shl
add
hlt
sbb
int
cmc
add
pop
mov
sbb
sbb
call
push
int
mov
add
inc
mov
xor
jne
(bad)
out
ret
sub
cli
adc
daa
xor
mov
mov
xchg
or
cmp
add
sub
xchg
(bad)
retw
jge
cmp
popa
push
inc
push
push
adc
fadd
hlt
nop
int3
mov
jecxz
shl
sbb
xlat
xor
dec
dec
rol
sbb
pop
pushf
fmul
mov
pop
push
cmp
aad
repz
dec
add
jmp
adc
aas
(bad)
div
in
mov
push
movs
add
nop
jmp
push
out
push
pushf
test
div
and
cmp
inc
or
or
(bad)
xchg
jae
mov
push
js
pop
jns
jne
aam
pop
jbe
xchg
(bad)
jge
rcl
xor
push
and
addr16
js
addr16
cmp
in
xor
out
adc
mov
push
sub
mov
inc
inc
in
jmp
mov
inc
sub
cmp
jmp
das
jg
in
sbb
xor
mov
jo
pop
test
(bad)
push
das
add
inc
xor
leave
jmp
add
add
es
test
bound
lea
jae
mov
jo
adc
xor
mov
xor
clc
mov
lea
xchg
pop
sbb
add
pusha
pop
lahf
pop
xor
dec
scas
pop
adc
inc
out
push
mov
aam
out
inc
mov
pop
ins
xchg
mov
das
mul
adc
and
push
cmps
xor
shl
push
cwde
add
or
and
iret
pop
lock
adc
add
mov
in
xchg
in
lds
mov
ret
jmp
lahf
mov
cmp
adc
or
or
sbb
sahf
mov
add
lea
(bad)
das
and
cs
in
and
aad
dec
mov
or
jnp
setne
call
cmp
ins
ss
xchg
jbe
add
leave
push
push
enter
iret
jmp
mov
add
jge
cmps
xor
dec
jnp
fwait
outs
retf
test
push
rol
cmp
rcr
push
adc
pop
mov
xor
dec
lock
in
cmp
je
jl
pop
sub
push
ins
mov
enter
sub
pop
(bad)
and
mov
fisub
out
fild
pop
jl
adc
lds
add
lahf
inc
rcl
add
(bad)
lds
xor
push
fld
jecxz
mov
add
mov
jmp
ret
xor
sar
xchg
sbb
enter
push
loope
cmc
cdq
out
xor
pop
ins
pop
outs
inc
cmp
cmp
dec
enter
or
test
jl
mov
aad
stos
xchg
aaa
xchg
and
sub
nop
loopne
sub
call
ins
(bad)
or
inc
lods
clts
arpl
movs
rcl
lods
loopne
and
(bad)
and
xchg
push
push
push
fsub
jb
push
pop
pop
sub
mov
sbb
dec
sbb
ja
(bad)
stos
jbe
retf
fwait
lahf
sbb
push
popa
pop
js
enter
fimul
pop
cmp
js
inc
inc
xor
rcl
sub
pop
xchg
add
fldcw
add
add
add
ret
cmp
inc
ds
gs
dec
arpl
fisttp
inc
(bad)
push
or
push
mov
inc
test
in
mov
(bad)
jb
mov
cmp
inc
jae
cmp
popa
sub
fdiv
inc
mov
xor
ss
sbb
or
mov
retf
mov
jmp
mov
cmp
push
adc
jg
stc
rcr
scas
(bad)
jp
outs
push
loop
outs
movs
and
cld
jb
daa
or
test
pop
int3
or
add
scas
in
dec
jno
lahf
mov
and
in
or
or
push
xlat
adc
in
pop
mov
and
out
test
push
in
addr16
ds
jmp
push
jo
into
mov
dec
jg
jge
imul
xchg
lods
add
jge
jl
xlat
pushf
retf
fst
cmps
out
xor
fidivr
and
and
(bad)
jmp
repz
sbb
mov
scas
mov
adc
pusha
xor
sti
add
int3
stc
adc
(bad)
jp
cmp
xchg
(bad)
jbe
test
mov
retf
jl
or
test
out
(bad)
or
adc
movs
leave
jns
icebp
lods
ror
dec
mov
movs
mov
adc
in
test
dec
je
xchg
arpl
gs
movs
dec
sbb
jmp
gs
or
mov
sti
push
xchg
lahf
call
shl
dec
dec
and
cli
sti
rcl
retf
push
adc
test
mov
and
mov
mov
fild
push
pushf
jbe
and
adc
or
mov
push
(bad)
(bad)
push
sbb
jle
lea
or
sar
(bad)
ja
sbb
adc
fld
xchg
jnp
sbb
into
rcl
jle
scas
call
inc
adc
es
dec
call
leave
fcomp
and
dec
in
fisub
add
cmp
cmps
or
clc
mov
icebp
jmp
lock
xchg
paddw
div
fmul
and
mov
lds
not
sbb
mov
lds
add
repnz
cdq
mov
fbstp
(bad)
pop
bound
xlat
in
mov
repz
mov
out
jmp
mov
mov
add
je
icebp
out
xchg
or
push
inc
mov
lods
inc
and
aam
mov
cwde
push
mov
push
fcmovbe
aaa
mov
cs
lahf
and
stc
ja
data16
out
jge
inc
adc
pop
pop
push
bound
inc
dec
sbb
dec
xchg
mov
into
out
mov
or
jo
cmc
rcr
sbb
add
push
cmp
in
fcom
ror
adc
fs
xchg
pop
add
in
sbb
dec
in
mov
push
inc
outs
in
dec
out
test
mov
adc
sbb
push
and
ret
inc
jecxz
cmp
repz
test
shr
fidivr
push
imul
iret
mov
mov
xchg
dec
lds
adc
add
push
push
and
jns
hlt
daa
mov
or
movs
mov
mov
neg
lahf
push
cmp
pop
add
or
popf
adc
xor
or
ret
cli
fbld
sbb
add
js
loope
cmp
sbb
je
jae
rcl
mov
dec
cmp
mov
mov
pop
jno
cmp
ret
mov
xlat
movs
cli
div
dec
mov
(bad)
add
pushf
or
sub
dec
fldcw
pop
mov
fistp
ins
xor
cld
not
or
push
enter
mov
push
test
(bad)
loop
sbb
mov
or
aas
xor
xchg
jmp
add
or
mov
sub
ins
cmps
jmp
loop
sbb
cwde
xor
test
cmp
lock
mov
outs
icebp
shl
rcr
sar
mov
jecxz
pop
fucomip
fxch
ret
cmp
mov
imul
call
imul
cld
fist
leave
and
fldcw
xchg
sbb
and
fwait
fs
and
jp
cmps
jbe
cs
jae
addr16
(bad)
repnz
or
ret
pop
xchg
arpl
fwait
and
movs
pop
lods
xor
lds
dec
ins
ror
mov
push
inc
pop
pushf
imul
ror
inc
(bad)
out
adc
jns
ja
ret
ss
or
xchg
dec
and
or
leave
mov
(bad)
popf
(bad)
cmp
xchg
cwde
enter
movs
push
sahf
xchg
(bad)
cmp
fld
xor
arpl
xlat
jle
mov
outs
sbb
add
or
cs
pop
daa
inc
int3
fstp
jae
lods
cld
inc
das
mov
add
loopne
mov
repnz
xchg
jmp
xor
or
mov
and
push
mov
(bad)
leave
or
xchg
sbb
jae
int3
imul
scas
mov
push
xchg
add
es
cvtps2pd
out
aam
inc
loope
inc
mov
fst
dec
dec
xor
xchg
xchg
repnz
push
mov
inc
out
test
(bad)
pop
nop
dec
(bad)
icebp
push
imul
sub
aaa
or
xor
dec
movs
aam
out
xchg
vmulss
jge
cwde
mov
int
repz
mov
sbb
lods
adc
add
imul
dec
in
out
mov
cmp
pusha
fsubr
dec
and
add
mov
popa
out
pop
jns
(bad)
neg
in
add
mov
jb
(bad)
sar
xchg
pop
in
fsubr
(bad)
inc
lods
fdivr
push
xlat
xor
and
jmp
ret
sbb
add
sbb
push
push
jbe
cmp
inc
sar
xor
adc
sbb
pop
test
cmc
pop
pop
mov
(bad)
rcr
in
stc
jo
sub
cmp
pop
int3
mov
fisttp
jne
cmp
or
lea
loopne
int
xchg
fucomi
ror
test
mov
(bad)
and
(bad)
mov
int3
cmps
sbb
pop
jmp
dec
addr16
adc
mov
sub
cmps
adc
inc
shr
or
cli
pop
jg
cs
das
jnp
jecxz
(bad)
scas
jecxz
(bad)
loopne
inc
mov
aaa
in
iret
mov
jbe
pop
and
sahf
ret
xor
sbb
iret
push
pushf
push
inc
sub
frndint
sar
cmps
cmp
js
out
in
sub
inc
mov
lods
and
and
scas
lds
sbb
cmp
shr
xor
or
dec
icebp
jmp
xchg
addr16
xchg
into
shl
mov
ss
mov
xchg
xchg
pop
mov
cmps
xchg
adc
das
(bad)
jae
pop
xchg
cmc
xor
xor
leave
cmp
leave
inc
xchg
add
mov
ret
dec
ficomp
push
cmp
rcr
inc
adc
into
in
pop
add
fldlg2
xor
cmp
and
xor
scas
nop
sbb
pop
bound
inc
sub
mov
xor
mov
outs
pop
dec
pop
sub
or
pusha
jnp
movs
mov
ret
sub
cmp
add
mov
cdq
push
out
sbb
lds
lahf
xchg
hlt
ja
in
vpmovzxbw
dec
push
clc
mov
fucompp
push
jae
mov
xchg
and
pop
fsubr
adc
mov
and
stos
aaa
arpl
inc
mov
push
add
ins
retf
cmp
fnstcw
icebp
or
inc
xor
pop
jne
xor
cs
js
(bad)
push
push
mov
xchg
mov
fwait
inc
mov
cld
adc
je
(bad)
fisttp
xchg
imul
dec
adc
(bad)
int3
test
repz
lods
adc
jl
xchg
cmp
add
mov
ret
fsub
addr16
push
jge
mov
pop
sub
int
ins
cmp
leave
data16
dec
scas
push
xor
mov
inc
pop
iret
aas
lds
out
stos
inc
loop
dec
mov
add
cmc
jge
xchg
sbb
fs
mov
out
cmp
ret
push
fsub
inc
mov
xor
adc
pop
and
pop
cwde
pop
call
push
sbb
(bad)
push
push
popf
lods
cmps
cdq
push
cli
push
arpl
cld
test
(bad)
fcomp
clc
push
cwde
test
xchg
fnstcw
test
(bad)
mov
lods
cmp
lods
pop
arpl
not
bound
popa
dec
or
xor
mov
movs
repnz
add
mov
aam
pop
jg
mov
imul
cmc
(bad)
test
rol
inc
push
icebp
in
test
mov
out
scas
fimul
jo
test
jne
test
sub
mov
mov
mov
jle
jmp
add
adc
sbb
inc
loope
jns
out
shl
cld
mov
mov
sahf
call
loop
mov
shl
mov
cmp
loop
adc
or
dec
and
mov
cmp
mov
push
and
shr
addr16
pushf
dec
dec
lods
jle
out
mov
jmp
in
sub
cld
add
xchg
mov
movs
mov
push
xor
mov
mov
or
jno
je
scas
push
out
imul
or
sbb
call
pop
das
mov
imul
(bad)
xchg
mov
and
call
mov
aaa
add
sar
call
pop
into
xchg
test
cmp
test
add
mov
fwait
mov
ret
lods
arpl
fnstsw
ins
lds
in
leave
mov
inc
addr16
lea
jbe
inc
sbb
imul
mov
cmps
js
mov
cdq
sub
adc
cwde
or
mov
adc
and
mov
iret
test
mov
in
mov
jns
jmp
mov
in
int3
and
jae
dec
ss
and
enter
pop
adc
mov
push
in
in
mov
enter
pop
sub
mov
test
add
jg
jmp
sahf
aam
call
stos
dec
mov
aaa
mov
dec
fistp
mov
and
sbb
jge
loopne
xor
mov
mov
dec
into
(bad)
jno
inc
sbb
scas
cld
xchg
push
or
mov
dec
gs
popf
out
xor
or
(bad)
leave
pop
cmps
add
sbb
jmp
push
cmps
std
sti
mov
mov
rol
and
jns
ret
mov
mov
and
test
xchg
mov
test
int3
ja
mov
ja
out
cwde
mov
inc
stos
(bad)
xchg
cmc
pushf
xchg
ret
sbb
cdq
out
pop
ds
call
cwde
iret
loop
out
sti
outs
enter
jns
push
in
and
add
jg
call
pop
inc
cmp
pop
mov
fdiv
jle
(bad)
jmp
mov
dec
das
and
sub
iret
add
inc
push
mov
call
mov
out
jns
and
mov
and
xor
call
sub
add
inc
dec
xchg
add
fsubr
call
int3
dec
xchg
add
jp
fstp
ds
add
loopne
push
cmp
dec
or
cmps
das
pop
test
(bad)
push
(bad)
push
pop
(bad)
not
xchg
rol
int3
add
push
jl
leave
fdiv
mov
pop
or
xlat
pop
idiv
jle
pop
xor
test
cwde
xor
jns
cmp
test
add
mov
into
dec
aam
mov
fld
(bad)
mov
mov
enter
xor
mov
fldcw
xchg
(bad)
dec
jge
xchg
sub
gs
xchg
xchg
popa
dec
mov
sbb
xor
xor
outs
push
in
mov
loop
das
jp
cmps
shl
stos
and
add
call
xchg
icebp
pushf
movs
pop
sbb
dec
adc
push
outs
shl
and
push
cmp
dec
ret
pusha
mov
pusha
dec
hlt
mov
bound
jnp
xchg
iret
das
pop
add
push
sahf
or
inc
(bad)
outs
or
pop
iret
fdivr
fwait
xor
or
adc
mov
test
jp
nop
ins
daa
pop
(bad)
mov
adc
retf
pusha
jno
pop
mov
or
dec
fsub
(bad)
je
nop
inc
sbb
stos
repnz
mov
inc
fnsave
mov
adc
and
es
push
pop
xor
pop
jns
cmc
out
aam
enter
xor
lods
cmps
fcom
popa
sub
and
inc
jp
xor
icebp
leave
jnp
call
sub
jbe
xor
mov
mov
xchg
mov
sbb
adc
arpl
add
test
aas
sub
aad
pushf
or
mov
cmp
or
inc
push
cwde
inc
test
cs
mov
into
push
push
mov
fucomi
stos
pop
or
pop
ja
cwde
mov
add
adc
pop
add
ins
xchg
cmp
iret
pop
mov
arpl
repz
push
sbb
dec
mov
(bad)
std
repz
lods
leave
push
mov
jmp
ret
adc
push
cmps
push
fidivr
xchg
movs
fimul
or
jmp
dec
dec
xchg
call
inc
repz
ins
rcr
mov
inc
ret
idiv
in
cmp
push
mov
lods
sti
adc
sub
pusha
ja
shl
pushf
lods
push
push
mov
dec
int
cs
xor
mov
inc
movs
push
lods
stos
add
sti
or
jne
mov
pop
rep
dec
add
imul
aaa
push
dec
jae
fs
mov
add
ss
cli
dec
xor
fld
cmp
fisub
adc
rol
pop
mov
pop
imul
in
mov
cmp
mov
aas
rcl
popa
jno
sub
and
sbb
(bad)
ja
aad
in
fwait
jns
and
push
clc
mov
mov
les
fmul
mov
ret
pop
jge
shr
xchg
dec
pop
inc
jg
mov
sbb
sub
scas
lea
inc
xor
(bad)
xchg
(bad)
push
int
dec
ins
mov
mov
and
imul
or
test
cwde
pop
add
sbb
cmp
xor
shl
fdivr
ret
mov
xor
lock
cli
adc
dec
sahf
iret
imul
ror
repnz
adc
add
xlat
rcl
enter
inc
xchg
in
xchg
imul
test
cmp
jl
cwde
add
mov
test
imul
mov
aas
repnz
outs
adc
scas
lds
clc
push
adc
cdq
cli
dec
xor
lods
pop
push
into
mov
rol
sbb
push
cmc
arpl
cmp
add
pop
add
or
push
clc
pop
inc
loopne
or
dec
mov
mov
imul
(bad)
pushf
cmp
(bad)
movs
adc
dec
fsub
call
repnz
or
stos
dec
jl
icebp
push
jge
cmp
mov
scas
mov
xlat
adc
call
push
cmp
push
scas
leave
dec
mov
sub
lds
mov
push
mov
jmp
pop
mov
movs
aam
xor
sub
mov
das
ins
adc
jo
xor
loopne
add
out
lock
cmp
and
mov
xchg
mov
scas
rcl
mov
(bad)
call
add
pop
and
inc
es
ja
pushf
aam
arpl
int3
sbb
call
repz
cld
lock
add
aad
cmp
popf
mov
stos
fldl2e
cmp
mov
icebp
and
in
imul
dec
cmc
pusha
inc
icebp
iret
xchg
cmps
mov
fdiv
pop
lods
and
or
dec
inc
push
jmp
or
outs
and
std
jne
cmc
lea
sbb
aas
or
ficom
cmp
or
sbb
mov
fmul
cmp
test
cs
pop
shl
inc
je
retf
cmps
push
adc
ss
and
mov
pop
adc
xchg
cli
adc
cld
retf
les
jo
xchg
mov
pop
inc
test
mov
dec
ja
adc
xchg
hlt
popf
test
in
xchg
out
aaa
mov
pop
xor
pop
clc
pop
add
sub
daa
mov
imul
mov
retf
loop
in
dec
add
(bad)
push
mov
not
ret
test
cwde
or
mov
xlat
aad
pop
sbb
xor
popf
sbb
sub
sbb
add
mov
int3
adc
xchg
inc
push
imul
and
data16
inc
fwait
neg
or
mov
push
sbb
xchg
(bad)
je
arpl
mov
(bad)
mov
mov
out
hlt
pop
mov
das
add
mov
mov
pop
pop
and
push
int3
addr16
add
jns
(bad)
stc
outs
out
sbb
popf
or
inc
mov
push
pop
and
mov
mov
loopne
je
dec
lahf
bound
sar
out
ss
mov
xchg
lods
mov
hlt
add
cdq
jo
pusha
(bad)
push
leave
mov
neg
sahf
xchg
jns
stc
push
leave
cdq
jae
lock
out
or
stos
push
test
je
and
stos
or
xchg
inc
xor
pop
sub
jle
out
xchg
jnp
data16
inc
pop
cld
dec
xchg
nop
lea
cmp
and
aas
jne
rcl
loope
loopne
jge
scas
cmp
(bad)
out
and
lea
mov
das
test
cmp
in
leave
adc
and
pusha
inc
cli
jg
push
sub
or
(bad)
cmc
inc
arpl
inc
or
cmp
xchg
stos
jbe
jno
(bad)
jb
fidivr
cmp
mov
lods
cli
loope
jnp
dec
dec
xchg
popa
(bad)
jecxz
fwait
jb
int
ret
pop
imul
jecxz
mov
addr16
push
jbe
jno
cmps
sbb
or
outs
pop
pop
jns
das
ss
sub
mov
mov
jmp
xor
aas
(bad)
fiadd
enter
add
cdq
aaa
sub
push
lock
repnz
mov
mov
enter
mov
xchg
mov
hlt
cmp
push
in
shl
es
adc
retf
mov
jmp
stos
ret
jmp
test
cwde
xlat
sbb
icebp
pop
and
aas
mov
pop
add
cmp
int3
and
test
pusha
repnz
out
lds
arpl
mov
mov
xchg
or
cmp
cmp
mov
rcl
and
out
(bad)
adc
mov
dec
push
mov
jmp
mov
cmp
mov
mov
rol
jge
popa
lods
or
mov
and
cmps
jl
pop
push
sar
sar
and
push
push
pop
std
add
sbb
pusha
jns
sbb
ss
rcl
stos
rcr
mov
mov
and
ret
xchg
pushf
jmp
inc
shl
sahf
cmp
cmc
inc
jecxz
adc
sub
mov
sub
or
aad
mov
or
mov
sbb
inc
cmp
retf
mov
sbb
ss
retf
inc
push
icebp
(bad)
and
xor
dec
sbb
daa
cli
xlat
xor
outs
dec
(bad)
fimul
or
pop
ja
call
out
adc
adc
lods
sbb
test
repnz
mov
(bad)
and
shl
jb
pop
sar
cmp
cmps
jp
mov
int3
jns
sbb
mov
(bad)
sbb
arpl
jo
retf
fadd
ja
xchg
xchg
inc
adc
test
(bad)
cmps
or
mov
mov
sub
aas
and
xchg
jg
dec
ret
inc
sbb
and
xor
or
fmulp
mov
pop
sbb
or
push
xchg
push
dec
scas
clc
or
(bad)
test
mov
out
(bad)
pop
xor
aam
pop
jp
push
movs
data16
js
push
adc
cmp
sbb
mov
or
lock
(bad)
out
retf
ds
out
inc
rcl
and
fld
mov
or
push
pop
inc
es
xchg
or
jecxz
mov
fistp
sar
xchg
outs
enter
xor
lods
cmps
arpl
repnz
std
test
mov
add
sbb
pop
bound
cdq
bound
inc
sub
xor
jno
adc
(bad)
out
fdivr
in
sbb
cmp
outs
daa
popf
mov
cmps
add
dec
mov
gs
cdq
cmps
cmp
retf
movs
lahf
jmp
dec
fdiv
xor
das
ds
mov
or
add
jnp
outs
ins
pop
pop
jle
xchg
mov
dec
aas
push
ror
pop
cwde
(bad)
mov
cld
inc
xchg
cmps
inc
push
sbb
inc
(bad)
loop
adc
lds
lea
in
out
mov
shr
mov
adc
dec
ret
dec
add
mov
sbb
scas
enter
or
repnz
sar
jnp
mov
lahf
sbb
enter
(bad)
pop
xor
dec
pop
add
xor
aaa
mov
jg
ret
in
and
movs
mov
jae
sbb
call
je
outs
icebp
jnp
nop
xchg
sub
jo
dec
enter
inc
rcr
es
xchg
imul
mov
mov
mov
movs
mov
test
xchg
and
xchg
jb
xor
sub
popf
pusha
ret
(bad)
imul
xchg
xchg
jmp
inc
mov
cmp
xor
popf
mov
stc
sub
jmp
sbb
cdq
pusha
lock
leave
(bad)
push
test
jecxz
std
fbld
js
inc
xchg
or
jle
push
popa
xchg
movups
leave
jmp
adc
aam
jle
jno
das
ja
lock
or
outs
scas
cmp
jno
jge
mov
push
ds
(bad)
sub
or
pushf
repz
mov
ror
adc
sbb
cmps
sub
jno
dec
dec
mov
daa
cmp
mov
mov
call
xchg
les
or
add
cmp
pop
fidiv
cs
sbb
dec
jae
(bad)
gs
push
add
sbb
mov
iret
mov
mov
adc
mov
call
pop
and
pop
jne
loopne
pop
fwait
and
stos
hlt
sbb
add
loopne
into
stos
mov
repz
fmul
sbb
sbb
push
push
scas
adc
pop
pop
cld
push
jb
mov
sub
jno
add
sbb
sub
cmp
add
mov
in
outs
xlat
jb
jge
fptan
inc
mov
and
(bad)
sar
xchg
adc
xchg
push
loopne
push
retf
pop
dec
aad
or
add
test
push
push
or
dec
nop
jns
jno
(bad)
jmp
pop
sub
mov
inc
mov
cmp
jne
push
call
push
cwde
out
jge
shl
cmp
ror
arpl
dec
inc
push
cmp
inc
mov
add
leave
sbb
lock
push
fistp
std
jbe
inc
fimul
mov
xchg
adc
mov
bound
hlt
jg
inc
(bad)
xchg
ja
inc
sub
push
add
rcr
out
pop
retf
sti
dec
jge
mov
push
dec
jnp
out
jg
xor
and
or
ret
aam
mov
fcomp
retf
call
mov
lock
push
xor
xchg
adc
(bad)
fldenv
sbb
jg
in
mov
int
out
or
or
mov
pop
popa
fcom
sub
add
not
or
test
adc
add
out
in
inc
cmp
mov
xchg
call
call
ret
fadd
pop
mov
pop
addr16
ret
mov
out
cdq
fist
mov
cmp
nop
xor
and
cmp
ja
sbb
dec
ss
out
lods
(bad)
inc
mov
(bad)
cmp
jns
repz
or
in
adc
fld
mov
xchg
and
imul
adc
pusha
enter
and
jno
popf
cmp
mov
mov
fwait
xchg
fisttp
je
test
fimul
mov
mov
popa
inc
cmc
push
cmp
mov
jmp
mov
adc
in
jbe
shr
hlt
mov
jae
test
mov
cmps
pop
jmp
and
pop
or
fisubr
(bad)
inc
(bad)
dec
jns
cmp
lahf
cmp
adc
repnz
test
push
popf
add
jns
inc
aad
xchg
repnz
and
test
push
or
mov
jl
sbb
xchg
pop
jns
pushf
(bad)
pop
es
dec
mov
sub
jae
fdiv
push
inc
inc
int3
cmc
add
das
adc
ret
scas
mov
xor
add
dec
lods
(bad)
jb
mov
out
aam
ret
outs
add
cmp
repnz
push
jb
inc
add
aaa
lea
(bad)
xor
cmps
lock
lods
jns
push
(bad)
push
(bad)
xchg
or
out
push
jno
cmc
lods
int3
cmp
nop
push
ficomp
out
pop
dec
out
scas
mov
scas
mov
int3
sub
stos
mov
push
xor
inc
out
mov
jo
call
mov
push
in
lods
in
outs
jle
jno
sbb
cmp
ins
mov
pop
add
cmps
mov
stos
sbb
dec
push
xor
jnp
push
dec
aas
aaa
cli
(bad)
jge
pop
push
mov
inc
jns
mov
xor
loopne
mov
and
mov
je
mov
aaa
jmp
out
lods
stos
movs
lock
fs
aad
movs
(bad)
lods
lock
fistp
xchg
in
cmps
dec
jg
test
xlat
xor
(bad)
lahf
push
and
int3
stos
shr
xchg
inc
movs
sbb
cmp
aam
call
mov
ret
dec
cmp
mov
pop
out
push
add
xchg
mov
xor
or
cmp
jbe
adc
inc
lock
add
call
xchg
mov
pushf
mov
and
add
inc
inc
inc
fst
mov
mov
out
bound
mov
push
fcmovnbe
fiadd
xor
push
or
mov
enter
mov
push
inc
iret
cwde
in
stc
cmps
jae
adc
cmp
jecxz
pushf
xor
mov
sbb
repz
loopne
neg
cmp
bound
test
mov
aam
pop
or
xor
nop
push
scas
inc
cmp
sub
xchg
fistp
imul
mov
sar
cmp
jmp
pop
movs
or
xchg
arpl
dec
test
mov
jmp
rcr
adc
in
inc
jg
in
mov
sti
leave
test
pop
mov
iret
adc
add
shr
jmp
fsub
fs
and
lds
cmp
(bad)
and
outs
jns
sbb
push
nop
jg
mov
mov
mov
inc
sbb
jb
jb
arpl
lods
push
xor
out
je
outs
call
inc
or
sub
ss
je
outs
loope
jno
pop
or
xchg
jmp
jne
jo
stos
sbb
jae
inc
add
cmps
add
dec
out
jae
xor
inc
cs
in
or
xchg
inc
sbb
je
inc
xchg
imul
movs
and
mov
ds
xchg
sub
jo
out
pop
or
cdq
xchg
test
pop
lea
in
or
xchg
ja
pop
and
push
push
xchg
inc
scas
push
adc
or
sub
pop
(bad)
mov
dec
mov
sti
popa
scas
push
arpl
fsubr
xor
imul
test
xchg
sbb
fild
dec
leave
rcl
jp
addr16
stc
loope
mov
fldl2e
mov
fstp
dec
dec
mov
enter
fimul
inc
fsub
mov
dec
sbb
ds
cwde
imul
dec
in
inc
xor
jno
jge
push
test
dec
and
push
xchg
fbld
movaps
ja
jnp
push
stos
push
mov
jmp
jl
and
loopne
pop
or
ret
nop
push
ror
sbb
mov
stos
ror
retf
scas
add
push
mov
ror
mov
mov
push
xchg
popa
fwait
push
mov
in
jb
(bad)
cmc
fwait
stos
cmp
pop
mov
ja
push
inc
add
mov
mov
mov
inc
jne
pusha
outs
cmps
mov
test
push
add
in
loope
lahf
cmp
daa
jecxz
cld
arpl
cli
and
pop
jbe
ins
mov
xchg
lods
mov
adc
push
ins
xchg
and
jp
pop
or
adc
dec
mov
loop
jmp
pop
enter
xchg
out
xchg
adc
(bad)
jbe
jmp
jne
repnz
sbb
jbe
or
ret
into
int3
bound
jmp
mov
dec
inc
cli
in
push
cmp
cmp
(bad)
out
jl
lods
aaa
lods
xchg
bound
scas
cmp
add
cmp
(bad)
imul
(bad)
fdiv
mov
adc
xlat
sub
sub
add
cmc
cmp
(bad)
jns
xor
lods
jbe
inc
jns
fs
icebp
js
sub
jmp
mov
or
mov
enter
xor
pop
dec
mov
adc
js
inc
or
or
and
jb
sbb
(bad)
into
xchg
ret
repnz
cmp
jl
push
rcr
shl
mov
pop
loop
pop
(bad)
mov
cmp
mov
push
fld
sti
in
pushf
aad
mov
adc
movs
cmp
fldcw
out
iret
adc
pusha
inc
out
inc
mov
mov
shr
inc
bound
fisttp
movs
mov
or
cmp
mov
outs
xchg
fadd
adc
in
ins
bound
mov
fisttp
sbb
mov
fidiv
jae
retf
xchg
call
lahf
test
js
sub
add
lea
std
and
pop
(bad)
fbstp
jo
mov
pop
cdq
mov
mov
xor
int
pop
repz
out
cs
jnp
loop
sti
int
iret
in
and
nop
sub
fs
das
mov
mov
lods
bound
dec
mov
jp
jb
push
arpl
in
sbb
loope
push
jne
push
inc
movs
mov
fbstp
clc
mov
or
loopne
push
mov
cs
pop
stos
mov
mov
stos
pop
push
jecxz
stos
cmp
add
loopne
outs
jae
imul
cmc
test
(bad)
cwde
mov
lods
popf
xchg
rcr
iret
nop
cld
jns
sbb
lahf
inc
mov
sbb
int
and
cdq
pop
ret
mov
add
xchg
aaa
mov
retf
sti
inc
nop
mov
stos
mov
fs
call
movs
add
lea
jge
cli
int
xor
aam
adc
test
xor
xor
ins
test
adc
jo
push
(bad)
cdq
fbstp
pop
jne
loop
push
es
bound
in
aas
jns
and
fwait
mov
jg
add
cmp
in
pop
cdq
dec
fidiv
mov
(bad)
sub
js
out
popf
mov
mov
sub
adc
je
jne
les
outs
xchg
ret
add
das
arpl
ja
std
push
sbb
inc
mov
jns
test
inc
jbe
adc
xchg
ds
xchg
call
je
imul
pop
sub
add
fcom
fs
fst
sbb
sub
push
jb
mov
mov
lods
or
mov
pop
ja
jbe
scas
lods
pop
std
or
xchg
sbb
aad
addr16
lahf
or
pop
cdq
(bad)
mov
pcmpeqd
pop
sti
jns
xchg
dec
je
jmp
scas
mov
sbb
xchg
dec
jp
aad
xor
inc
dec
jmp
or
push
dec
jmp
in
bound
pop
outs
pop
adc
jns
inc
xchg
jae
xor
bound
mov
add
jae
outs
out
std
cmp
push
mov
xchg
retf
pop
aaa
ins
cmp
sub
outs
and
jmp
sub
xchg
jne
push
xchg
popf
inc
mov
rcr
pop
add
push
pop
inc
add
sbb
js
pop
fisttp
ret
or
dec
cmp
ins
mov
and
clc
fdiv
(bad)
into
ja
xchg
pushf
lods
(bad)
or
xor
iret
mov
gs
int3
push
push
loopne
test
add
xchg
repz
mov
sub
outs
imul
fwait
mov
movs
out
push
xchg
xor
cs
or
dec
xchg
xchg
xor
mov
shl
imul
sub
jle
shl
fcomp
adc
push
sub
jp
rep
scas
mov
mov
enter
push
test
push
mov
inc
inc
dec
mov
fsub
adc
imul
call
jle
or
adc
xor
jnp
dec
adc
mov
sub
dec
push
mov
aaa
xchg
aas
mov
adc
shl
(bad)
cmp
dec
gs
jns
mov
gs
mov
mov
xchg
dec
sub
inc
sbb
out
pminub
sub
adc
not
ins
pop
icebp
mov
sbb
pop
mov
pop
inc
pop
push
clc
inc
mov
and
sub
loope
inc
pop
out
push
dec
into
or
mov
pextrw
inc
lock
das
inc
or
pop
fcmovu
mov
pop
out
int
sbb
mov
mov
ins
and
mov
sbb
(bad)
fcmovnu
push
in
mov
xchg
ret
xor
inc
cmp
mov
jmp
push
inc
xor
cmp
imul
mov
ret
scas
cmp
dec
int
scas
sub
sub
xchg
pop
fistp
mov
imul
fnsave
cbw
and
jecxz
xor
add
imul
jle
mov
aam
test
pop
sub
fwait
pop
mov
movs
mov
push
sub
pushf
jle
(bad)
in
sbb
ret
mov
jmp
jle
add
mov
or
dec
pusha
jbe
adc
inc
mov
push
retf
loop
push
push
mov
pop
mov
pop
cmps
sbb
xchg
pop
sub
icebp
and
pop
out
rcr
pop
sub
lahf
inc
popa
sbb
(bad)
pusha
iret
fild
not
mov
jne
jne
sar
mov
xlat
nop
pop
sub
stos
push
push
je
imul
call
push
retf
sub
cmp
scas
call
inc
into
call
xchg
dec
adc
cmc
mov
jns
pop
outs
sbb
cmp
sub
popa
and
shl
ins
jge
dec
xchg
sbb
cmp
xor
add
mov
div
add
push
sub
fs
xor
icebp
adc
je
jl
movs
or
jmp
push
adc
shl
ror
enter
(bad)
loopne
lahf
add
ret
ss
jl
push
lods
jns
std
(bad)
or
and
sbb
sub
aaa
daa
in
add
xchg
mov
lahf
dec
data16
fisubr
mov
movs
int3
xchg
sub
cmps
test
jae
pop
jno
in
add
pusha
mov
mov
push
cmps
xchg
div
and
jge
out
repnz
repnz
cmp
sbb
int
sub
add
cmp
push
xchg
enter
pop
(bad)
pop
push
cmp
pop
fst
setg
ins
dec
icebp
arpl
inc
xchg
dec
add
push
neg
jo
push
dec
test
and
mov
mov
pop
sahf
dec
xor
loope
xchg
jmp
aad
in
sbb
(bad)
jg
stos
sbb
pop
aaa
pop
scas
pop
sahf
xchg
int
mov
aaa
retf
xchg
push
inc
stc
inc
jle
inc
es
mov
mov
sub
inc
sub
cmp
xor
out
jge
add
fnsave
mov
adc
jge
ucomiss
fs
call
add
not
xor
repnz
sbb
inc
cmp
(bad)
or
sbb
dec
aaa
ins
push
stos
push
loope
scas
fsubr
mov
xchg
jae
fsub
mov
sahf
add
rol
imul
jnp
push
in
mov
mov
inc
nop
and
jle
rcl
mov
lea
dec
mov
jle
sbb
movs
leave
call
push
sub
inc
jo
mov
xchg
pop
test
jl
bound
fsubrp
mov
mov
fsub
les
ds
fisttp
popf
in
xor
cmc
jmp
pop
inc
in
pusha
cmp
pop
xchg
push
cdq
jae
push
fisttp
cmp
mov
mov
ja
bound
pop
retf
aaa
sub
scas
xor
popa
jno
dec
cs
xchg
mov
movs
inc
mov
loopne
jmp
xchg
add
es
arpl
fs
sbb
and
pop
outs
test
daa
push
mov
stos
jp
sbb
push
test
push
test
sbb
push
fsub
add
xor
xchg
or
test
ret
sub
push
dec
jns
cmps
pop
dec
push
adc
mov
out
icebp
into
retf
jl
test
in
xlat
pop
mov
fld
mov
adc
fwait
sbb
xchg
movs
jl
(bad)
fdivrp
sbb
ss
add
hlt
jp
aaa
push
call
js
pop
cwde
add
cmp
mov
aad
les
sti
stos
adc
sbb
sub
sub
xchg
retf
mov
and
cmc
retf
or
enter
dec
rol
mov
xchg
pop
pop
push
mov
xchg
ins
and
clc
jmp
xchg
add
(bad)
adc
and
jp
fnstenv
or
loope
pop
and
aas
pop
sbb
mov
adc
pop
test
out
dec
in
aas
fistp
data16
fcomp
sti
pop
sbb
fmul
cmc
cmps
imul
inc
ja
sbb
pop
cwde
pop
jno
js
packsswb
or
mov
iret
inc
pop
das
inc
pop
add
push
cmps
or
pusha
in
cs
mov
(bad)
(bad)
scas
mov
scas
fld
jmp
in
dec
adc
sub
(bad)
and
dec
arpl
rol
jmp
pop
mov
(bad)
push
xchg
adc
stc
cmc
jp
jl
stc
iret
or
daa
mov
xor
lods
mov
aas
push
inc
das
jmp
push
or
mov
jns
push
sbb
out
xchg
inc
fdivp
repz
cmps
fidiv
je
sahf
fwait
jb
cmp
jle
and
jmp
mov
leave
jg
add
sbb
les
call
gs
sub
mov
cwde
sti
jmp
xchg
push
jae
mov
pop
cld
dec
sbb
sahf
xor
leave
mov
push
mov
aaa
addr16
sbb
mov
fiadd
cmp
gs
sahf
pop
outs
jl
mov
sbb
outs
jae
les
clc
mov
mov
jmp
mov
dec
adc
lods
and
sub
jbe
mov
mov
(bad)
es
jp
or
sbb
and
cmp
pushf
push
add
push
and
push
repnz
das
sbb
jle
push
call
mov
sbb
sbb
sbb
push
gs
xor
fldenv
std
and
inc
add
xor
fsubr
cmc
pusha
inc
movs
or
inc
xchg
sub
and
and
pushf
test
cmps
cmp
mov
mov
out
(bad)
stc
stc
scas
jae
or
dec
adc
sub
into
rol
je
pop
int
mov
jp
gs
(bad)
div
cs
loopne
enter
sub
outs
cdq
add
je
mov
lods
xchg
ret
pop
add
into
cmps
test
pop
ds
jbe
xchg
nop
sub
dec
sbb
mov
mov
mov
adc
sbb
bound
push
cmp
lock
gs
adc
test
xor
repnz
retf
in
(bad)
pushf
popa
push
cli
je
fs
mov
dec
loop
ds
inc
adc
mov
bound
lods
sub
ret
xchg
add
cmps
cmps
xor
xlat
xchg
addr16
(bad)
mov
or
pop
bound
jbe
not
cs
hlt
scas
xchg
push
into
jns
jns
pop
pusha
outs
aam
dec
xor
fiadd
xchg
inc
aad
iret
popa
mov
push
jnp
shl
rcr
mov
ret
lea
push
cs
outs
sar
cmps
jns
in
fstp
inc
mov
gs
(bad)
xchg
(bad)
outs
push
das
leave
add
js
cmp
fidiv
inc
mov
sub
jge
pushf
out
mov
mov
popf
out
adc
push
int3
div
jns
mov
adc
pop
cld
mov
push
xor
and
mov
sbb
(bad)
mov
adc
sahf
and
gs
mov
and
dec
xor
sbb
ror
mov
xor
(bad)
imul
mov
lods
clc
inc
jns
sbb
push
mov
pop
push
sbb
pop
ror
or
mov
adc
cli
jno
jbe
cs
push
jp
popf
pusha
int
add
js
rol
popf
or
pop
ins
inc
fcmovb
push
xchg
in
rcr
outs
out
lods
cmp
imul
aam
daa
add
aam
pop
enter
sbb
jl
pop
call
daa
es
hlt
adc
sbb
mov
inc
dec
movs
ss
inc
xabort
or
rcr
and
cdq
pop
leave
scas
or
sahf
xor
(bad)
lahf
sub
adc
test
sbb
add
xor
jb
test
add
daa
stos
add
jns
mov
in
popf
jae
scas
pusha
sahf
fimul
cmps
mov
lods
inc
pop
mov
mov
mov
inc
lock
sbb
sub
add
jne
inc
pop
shr
sbb
push
ds
(bad)
adc
popf
test
cmp
rol
push
sub
sbb
jmp
retf
cmp
sar
sbb
push
and
jge
fidivr
dec
dec
pop
xchg
cmps
das
dec
add
jg
enter
sbb
ja
jne
jo
mov
call
adc
inc
jp
push
fisttp
mov
das
and
in
push
sub
push
xchg
xchg
jle
mov
outs
test
bound
push
retf
shr
nop
(bad)
lods
pop
push
pop
movs
ds
fsubrp
inc
and
pop
push
add
add
(bad)
inc
invd
push
fwait
or
outs
arpl
jo
retf
xchg
int3
stc
push
mov
shr
sbb
or
cmp
out
pop
lods
in
xor
ins
lods
sbb
sbb
int3
mov
mov
mov
out
stc
fcom
or
(bad)
add
mov
cmp
push
loop
out
or
addr16
mov
push
cmps
pop
(bad)
lock
sub
push
cs
arpl
jmp
jle
mov
push
fsubp
out
or
(bad)
lock
and
fwait
loope
aam
adc
arpl
enter
xchg
ret
mov
(bad)
test
int3
xor
dec
jecxz
mov
and
movs
xor
cli
jo
mov
jg
add
mov
sti
dec
jno
dec
and
mov
dec
jne
push
xchg
sub
pushf
mov
mov
rol
mov
movs
je
mov
jmp
xchg
cmp
sbb
push
pop
cmp
(bad)
mov
cmps
or
sub
pop
push
xor
in
and
push
es
es
in
lock
adc
mov
mov
ins
arpl
cmps
into
pop
stc
mov
jmp
lods
dec
inc
bound
movs
pop
xchg
add
dec
mov
mov
mov
inc
inc
leave
xor
imul
add
adc
sbb
mov
hlt
idiv
movs
daa
lahf
sub
jb
out
mov
dec
pusha
jb
push
push
pop
gs
leave
sub
daa
pop
(bad)
xor
shr
leave
imul
jmp
std
pop
cmps
inc
jl
ss
rcl
xchg
or
(bad)
imul
popf
jmp
pop
fidivr
adc
xor
add
xor
add
into
outs
movs
fisttp
out
out
pop
xor
es
xchg
nop
stc
xor
jge
retf
push
or
sub
xchg
pusha
leave
imul
dec
bound
sub
xor
sub
sub
daa
pushf
wrmsr
jge
jb
and
loopne
rcr
pop
int
loop
adc
retf
fstp
pop
scas
movs
jo
jb
xor
jmp
push
jbe
shr
or
loope
xlat
xchg
inc
xchg
in
(bad)
and
movs
and
out
cmp
jbe
cmps
sub
xchg
push
fcomp
adc
iret
(bad)
add
and
mov
push
dec
mov
mov
push
add
mov
(bad)
xchg
xor
scas
ins
test
jmp
pop
fisub
cdq
test
pop
int3
or
(bad)
std
mov
push
sbb
in
inc
cmp
xchg
iret
add
and
inc
outs
loope
xor
repnz
addr16
inc
inc
lock
in
xlat
pop
test
cmp
add
mov
or
arpl
imul
push
mov
jns
iret
cdq
push
push
sbb
popf
sbb
mov
ss
(bad)
ins
sbb
es
call
sub
push
inc
mov
inc
pop
push
mov
add
inc
das
inc
sub
or
out
icebp
mov
push
xchg
sub
idiv
cmc
pop
xchg
sub
(bad)
inc
mov
mov
call
push
jns
xor
xchg
jge
and
test
stos
ss
cdq
push
cmp
xor
push
dec
add
rcr
mov
or
xor
push
out
jbe
add
dec
pop
pop
inc
das
jae
mov
and
cs
test
xlat
hlt
mov
or
mov
push
mov
jg
add
pusha
retf
jl
and
into
push
call
sbb
mov
outs
das
fdiv
jge
fsubr
sbb
fmulp
dec
stc
mov
lahf
push
mov
add
loopne
jl
sub
call
stos
aam
cmp
inc
inc
mov
mov
gs
fimul
sbb
fcmovnu
scas
jmp
je
sahf
adc
mov
stos
inc
fmul
mov
mov
add
xlat
(bad)
cmp
inc
inc
out
sbb
imul
inc
cmc
mov
shl
nop
lahf
(bad)
rcl
lods
adc
sub
mov
xor
neg
call
fwait
cmp
pop
jg
xchg
add
fcomip
xlat
out
pop
hlt
mov
imul
daa
xchg
mov
pop
les
xchg
push
iret
ins
add
cmp
cmp
sbb
xchg
fist
mul
data16
add
add
pop
in
push
shr
inc
in
lods
inc
mov
mov
fld
pop
and
mov
or
iret
rcl
sbb
pop
xchg
rol
(bad)
mov
ss
xchg
sub
push
and
push
pop
data16
stos
int3
dec
fsubr
push
daa
xchg
rcl
jbe
fwait
xor
(bad)
das
mov
sub
jl
sbb
(bad)
jecxz
xor
dec
cmps
inc
test
cs
in
jmp
das
in
jmp
inc
pop
push
fmul
xchg
in
stos
mov
daa
cmc
repnz
(bad)
xchg
push
dec
test
fdivr
sbb
push
adc
xchg
cld
aad
jbe
mov
pop
cmp
fstp
cmp
inc
(bad)
mov
mov
cld
neg
iret
jp
push
fwait
push
ins
push
cs
in
cld
out
dec
push
pop
out
mov
test
and
std
test
mov
mov
movs
ds
mul
jp
outs
repz
dec
dec
and
into
push
icebp
sbb
jne
or
pop
push
(bad)
std
xchg
jnp
jns
jbe
mov
inc
cmc
adc
sbb
mov
jbe
imul
enter
sub
xor
xchg
push
or
inc
add
push
scas
rcl
mov
cmp
sbb
std
sub
pop
xor
mov
out
inc
and
jg
leave
lock
loope
add
pop
adc
push
mov
call
inc
jbe
repnz
retf
popa
call
loopne
mov
ret
mov
dec
(bad)
sub
adc
jmp
cdq
push
xchg
jmp
mov
jle
pushf
add
imul
clc
popa
mov
dec
mov
dec
pop
fld
mov
pop
lock
mov
inc
(bad)
dec
inc
mov
test
and
sub
loopne
aam
test
add
push
and
sti
dec
mov
cmp
jmp
xor
sbb
into
in
mov
push
xchg
push
mov
je
xor
xchg
stc
test
repnz
or
test
mov
rcl
or
push
rcr
xor
fisttp
mov
out
dec
mov
push
addr16
sub
fiadd
test
dec
movs
fisub
inc
xor
xor
outs
inc
das
icebp
lock
xchg
adc
push
arpl
cmp
mov
jne
fwait
stc
xchg
call
cmovns
fwait
xchg
je
mov
mov
sub
(bad)
outs
and
mov
fistp
repnz
fidiv
inc
mov
fld
jno
fmulp
pop
rol
in
aam
inc
add
(bad)
mov
or
bound
push
mov
stos
mov
xor
lods
xchg
adc
mov
nop
jno
mov
mov
mov
jbe
xor
push
add
push
inc
icebp
sub
enter
mul
or
inc
dec
lods
fidiv
jnp
push
sub
pop
sub
shl
stos
outs
mov
add
or
fsub
mov
outs
mov
xor
mov
or
int
xchg
sub
imul
cmc
push
mov
dec
pop
and
ret
(bad)
leave
xor
xor
mov
dec
inc
aas
in
push
stos
test
push
dec
push
test
inc
shl
adc
xor
pop
rcl
add
lods
xlat
jg
pop
mov
pop
lock
fstp
pushf
(bad)
push
bound
aaa
mov
pop
sbb
pop
das
pop
out
and
dec
mov
fs
mov
jmp
mov
xchg
loopne
pop
(bad)
ds
or
(bad)
sti
retf
adc
cmp
fild
push
sub
ror
fcom
sub
inc
jecxz
mov
sub
(bad)
jo
ins
in
fiadd
xlat
(bad)
mov
clc
stos
cmp
mov
cmc
mov
and
adc
jmp
(bad)
popf
jmp
jecxz
loopne
clc
or
xor
push
(bad)
fidiv
into
mov
leave
shr
sahf
xchg
inc
dec
mov
sar
and
sub
inc
add
mov
fwait
xchg
mov
call
movs
or
out
inc
add
mov
dec
aad
jb
aad
std
or
pop
mov
add
mov
ss
(bad)
and
iret
add
aas
mov
add
xor
aaa
shl
(bad)
iret
jge
sub
jmp
scas
jo
and
movs
pop
push
or
mov
push
int
lahf
bound
movs
mov
mov
aad
push
out
int
js
out
std
push
cmc
pop
push
xor
xor
leave
nop
sbb
inc
(bad)
ficom
shl
or
gs
push
push
sahf
inc
(bad)
cmp
outs
sub
rcr
inc
bound
sub
pop
pop
sbb
ret
sub
or
jmp
xchg
cmp
bound
mov
jbe
or
ja
jbe
in
nop
jmp
fst
rol
fdivr
push
cmps
fs
push
mov
inc
inc
sub
retf
xchg
dec
out
mov
fmul
dec
xor
aas
(bad)
enter
jle
push
xchg
jae
pop
cmp
push
push
pop
aam
mov
pop
leave
and
ins
sti
loope
cmp
or
addr16
ja
lods
jnp
nop
mov
or
ss
test
fnstcw
loop
popa
xor
fcomp
mov
xor
sub
push
iret
and
dec
lahf
mov
fmulp
loop
pop
xchg
repnz
lock
jno
cdq
imul
xchg
sbb
call
cli
add
dec
inc
adc
xor
movs
push
popf
pushf
cmps
fisub
xchg
into
test
in
mov
cmp
(bad)
jmp
sub
fadd
xor
and
xchg
pop
in
pop
sbb
adc
out
and
mov
xlat
jecxz
(bad)
les
bt
shr
cmps
aam
mov
out
pop
adc
sbb
push
lahf
stc
das
(bad)
loop
mov
test
mov
andnps
dec
js
movs
or
mov
xor
fst
and
push
mov
and
aaa
jmp
cdq
mov
inc
out
sbb
push
scas
inc
(bad)
(bad)
sub
mov
adc
adc
out
arpl
add
xchg
gs
popa
(bad)
and
lock
push
dec
xchg
ds
lds
in
call
jmp
push
pop
pusha
and
(bad)
xchg
and
repz
sbb
imul
jne
sub
int3
ds
and
cwde
pop
jae
add
dec
test
es
push
xor
mov
aas
inc
mov
add
adc
sbb
dec
adc
icebp
inc
dec
in
mov
dec
adc
xlat
push
add
jns
xchg
sbb
ja
adc
mov
jbe
cmps
leave
jns
out
stos
xchg
es
push
popf
pop
stos
lods
dec
leave
(bad)
test
out
jb
dec
pop
cmp
iret
push
leave
cli
push
pop
push
fstp
out
push
les
lds
in
xchg
xlat
mov
cs
arpl
(bad)
nop
and
xchg
aaa
xchg
sbb
xchg
gs
lods
jnp
and
add
repnz
test
push
mov
in
retf
jnp
fist
(bad)
sub
push
push
mov
fucomi
call
xor
push
and
push
or
jno
pop
mov
mov
dec
loopne
mov
retf
arpl
jmp
sub
stc
stos
sbb
adc
fwait
movs
call
adc
cld
cwde
fs
sbb
scas
ins
(bad)
mov
das
jae
test
mov
xchg
sub
jle
dec
out
pop
mov
pop
ror
test
loopne
loope
pop
(bad)
lea
lds
cmp
arpl
ins
(bad)
aad
ins
jmp
sbb
aaa
cld
xchg
lods
sbb
(bad)
jne
xor
and
mov
jl
dec
push
jle
jg
adc
jl
mov
and
out
mov
adc
movs
dec
in
(bad)
dec
push
stos
out
call
jmp
mov
repz
dec
rcr
lock
mov
add
shl
cmp
fsubr
fdivr
movs
stc
retf
leave
and
jno
loope
(bad)
out
push
mov
and
fwait
out
jp
lds
xor
fs
(bad)
outs
pop
push
lods
mov
sub
or
stos
jge
mov
aad
out
int3
popf
mov
sbb
pusha
inc
in
das
sub
inc
(bad)
and
and
es
pop
lds
xor
adc
test
jecxz
inc
inc
frstor
dec
xor
pop
xor
mov
icebp
mov
fidivr
fist
pop
sub
push
ds
xor
retf
fs
add
dec
push
mov
push
ja
ds
(bad)
in
outs
mov
cmp
xchg
add
imul
adc
cvtpi2ps
sub
test
daa
and
pop
sub
int
in
ret
test
jecxz
cmps
pop
(bad)
sahf
jmp
mov
dec
cmc
jl
jo
mov
inc
inc
inc
jecxz
sub
or
sbb
add
(bad)
loop
ds
cs
popa
in
xor
inc
data16
shl
xchg
mov
or
add
xor
inc
scas
enter
sbb
loop
mov
push
fidiv
pop
cmc
jae
fs
or
stos
sbb
inc
outs
jmp
test
cwde
ss
(bad)
int3
adc
jnp
xchg
mov
sub
xchg
js
neg
cwde
adc
add
dec
push
cwde
cli
jecxz
mov
jbe
mov
and
dec
arpl
dec
push
jae
jmp
(bad)
dec
sub
dec
cmp
push
mov
jmp
lods
cmp
pop
pop
popa
(bad)
test
jecxz
push
loopne
(bad)
(bad)
movs
or
or
cmc
fcmovu
xor
adc
mov
sub
sub
ret
add
push
add
xchg
sbb
hlt
popa
leave
xlat
jnp
outs
mov
adc
inc
jno
jbe
cmp
add
js
(bad)
retf
inc
ins
mov
or
ret
out
xor
fldenv
dec
push
cmp
data16
out
sub
and
pop
test
popf
imul
lods
shl
rcr
jae
mov
xchg
pop
outs
(bad)
mov
xor
inc
cld
out
inc
lods
outs
and
adc
jge
aaa
in
or
xchg
jnp
mov
and
ret
or
std
xlat
dec
lock
add
inc
xor
xchg
cmps
push
mov
dec
nop
xor
retf
xor
scas
mov
adc
fwait
pusha
sub
mov
pop
mov
adc
or
jae
fnstcw
mov
loope
mov
push
adc
xchg
clc
cs
imul
dec
jmp
add
int
add
cmps
mov
jge
fwait
adc
mov
nop
xchg
xor
dec
and
inc
dec
out
or
sub
mov
pushf
retf
sbb
movs
test
daa
mov
or
mov
jp
adc
push
mov
retf
xchg
or
stos
div
push
in
cmp
popf
xor
cwde
bound
ror
adc
cdq
mov
(bad)
mov
mov
in
mov
fild
pop
jbe
inc
repz
jne
fwait
push
ficom
(bad)
aas
int3
loopne
jo
sbb
test
push
mov
xchg
push
mov
xchg
adc
pop
icebp
or
jbe
push
push
sub
in
sahf
aam
pop
setns
std
aas
mov
push
mov
sub
sbb
stos
or
pop
xchg
xchg
inc
xor
mov
push
fisubr
push
in
fsubr
retf
mov
jle
xchg
(bad)
xchg
and
push
mov
fiadd
sbb
cld
pop
pop
in
loope
and
add
repz
sar
xchg
add
push
cmps
mov
mov
enter
dec
aam
jle
xor
ror
dec
loope
mov
push
cs
push
push
cmp
jl
sbb
xchg
(bad)
sbb
les
jbe
sbb
test
int3
retf
jp
push
inc
mov
xlat
rcl
dec
mov
cs
or
shl
cmc
daa
sbb
push
mov
outs
aaa
call
icebp
push
out
and
loop
shr
enter
jb
sbb
test
nop
pop
mov
movs
mov
adc
retf
(bad)
xchg
mov
mov
imul
imul
into
shl
rol
fldenv
sub
mov
sbb
sbb
nop
mov
pop
inc
lods
jbe
jecxz
sbb
mov
les
sub
cmc
mov
mov
rcr
pop
push
cmp
mov
mov
lock
outs
and
aas
lds
jno
sub
ja
lea
mov
cmc
and
jae
(bad)
in
lock
sar
daa
test
jmp
push
cwde
sbb
jle
mov
outs
xor
popf
stos
mov
je
jmp
cmps
fidiv
(bad)
imul
aas
push
out
sbb
(bad)
jae
sbb
leave
jne
call
mov
jl
fld
push
cmp
push
jbe
add
mov
sbb
outs
cld
mov
jae
cmp
bts
leave
sub
rol
in
mov
push
nop
add
ss
or
outs
inc
inc
(bad)
mov
dec
shl
test
(bad)
cmp
jnp
cmp
dec
mov
movs
jmp
and
ins
(bad)
jmp
sbb
xchg
test
or
stos
mov
add
add
ins
bound
call
sbb
arpl
pop
lahf
xchg
mov
adc
mov
loop
push
sahf
inc
cmps
or
movs
add
dec
pop
add
mov
xor
mov
shl
add
jg
data16
popf
std
dec
fdiv
fucom
mul
adc
add
inc
ja
inc
jge
mov
test
in
dec
int
cmp
rcr
lock
retf
xchg
inc
scas
lahf
sbb
xor
cmp
mov
dec
bound
push
sub
jmp
sahf
call
cs
jge
(bad)
fistp
aas
add
mov
dec
call
pop
movs
push
mov
dec
add
push
sub
mov
and
arpl
add
dec
sub
retf
xor
jge
lds
shr
inc
das
rcl
mov
pop
popf
movs
or
mov
popf
bound
inc
xchg
or
les
out
sbb
inc
imul
or
cdq
daa
and
pop
adc
cmps
rol
dec
imul
loopne
inc
jle
xchg
jge
leave
jmp
fstp
cmc
sbb
push
pushf
and
mov
jae
sub
popf
jae
xor
dec
pop
cmp
(bad)
fmul
pop
and
mov
jne
mov
sbb
xchg
mov
mov
xchg
ss
bound
stos
sub
or
aad
push
(bad)
jmp
mov
inc
and
add
ret
push
repnz
xchg
mov
mov
ret
sub
imul
out
lods
sbb
mov
mov
cs
movs
pop
cld
outs
scas
adc
pop
sha1msg2
jmp
nop
mov
xchg
and
jns
push
inc
test
dec
cs
lods
les
pop
xor
pop
mov
sbb
clc
mov
nop
bound
push
lds
cmp
lea
push
jae
popf
in
adc
lods
pop
sub
mov
inc
sti
mov
inc
push
mov
repnz
test
jnp
sbb
adc
ror
lds
sbb
mov
dec
mov
adc
movs
movs
daa
mov
mov
push
retf
dec
aam
mov
icebp
imul
or
jnp
fwait
jle
mov
or
push
arpl
and
mov
movs
xchg
add
(bad)
cmp
ret
sbb
in
(bad)
ret
(bad)
in
aam
mov
sub
dec
cmc
(bad)
adc
push
sub
dec
outs
push
xlat
repz
sub
cli
(bad)
(bad)
fisub
or
in
push
xchg
push
fisttp
push
stos
jmp
jge
pop
stc
jbe
icebp
frstor
and
push
add
clc
mov
ds
sub
shr
cmps
in
push
(bad)
and
xchg
push
adc
in
data16
(bad)
aad
or
mov
out
(bad)
out
cmp
std
sbb
dec
xor
arpl
jle
loopne
or
addr16
shl
ret
and
sbb
jns
mov
lea
push
loopne
xchg
jae
pop
jp
std
int
mov
xchg
call
loopne
and
pushf
xlat
(bad)
jp
fcomp
stc
or
and
adc
loope
daa
push
shr
js
std
dec
in
test
jne
mov
xchg
inc
inc
mov
inc
mov
cs
add
xor
lahf
mov
dec
lds
out
mov
pop
push
and
dec
fwait
or
add
enter
and
(bad)
pushf
and
cmp
movs
mov
sbb
out
pop
push
push
call
or
jo
shl
cmp
mov
jns
sub
pop
sbb
pop
lods
mov
add
test
or
sbb
mov
sub
clc
or
popf
popa
sbb
dec
adc
mov
sti
inc
dec
sbb
mov
inc
mov
stc
mov
inc
push
jbe
mov
push
idiv
sbb
push
lock
stos
lock
popf
stos
jo
push
sub
sbb
in
cmp
movs
pop
fs
jnp
ror
and
jl
jo
mov
fldenv
int
xlat
nop
dec
sbb
js
daa
add
cmp
add
mov
mov
dec
(bad)
push
pop
popf
push
ret
add
mov
cmp
nop
add
inc
(bad)
add
lahf
and
loop
ins
test
test
mov
mov
pushf
out
iret
mov
stos
test
test
(bad)
xlat
ss
mov
xchg
cmps
add
push
jmp
pop
inc
out
fistp
and
test
sahf
and
mov
dec
pop
or
(bad)
cld
(bad)
mov
js
pop
mov
lea
repz
push
xchg
ja
add
icebp
fdiv
jns
jl
and
push
mov
sub
mov
out
push
data16
scas
mov
loopne
sbb
adc
fidivr
pop
jg
loop
xor
js
push
or
out
in
pop
or
mov
jmp
adc
mov
popa
push
(bad)
jecxz
mov
cmp
fwait
sub
mov
xchg
sbb
mov
push
dec
pushf
test
lock
test
outs
dec
sub
inc
outs
repz
sbb
jg
xchg
xchg
movs
adc
shl
call
and
and
fwait
add
mov
or
jo
repnz
or
inc
or
pop
push
jl
paddusw
test
sbb
cdq
pop
xor
cwde
sub
fs
bound
inc
(bad)
mov
xor
stos
jp
pushf
adc
jmp
stc
jle
cmc
cmc
ret
dec
in
aas
mov
movs
lahf
ins
inc
xchg
std
loop
ret
popf
or
stos
not
add
sub
xor
rcr
pop
ins
and
(bad)
mov
xor
mov
(bad)
jmp
xchg
mov
xor
nop
jbe
(bad)
inc
pop
fcmovb
jecxz
add
loopne
mov
mov
idiv
pushf
pop
pushf
pop
mov
test
inc
sub
ss
fbstp
adc
fwait
push
push
arpl
pop
xor
xchg
out
pop
cmp
lds
push
push
and
push
mov
pop
cdq
or
aad
stos
jg
das
dec
mov
pop
es
leave
pop
and
lods
xchg
(bad)
add
lods
cld
or
pop
mov
adc
inc
push
dec
stos
mov
pmulhw
sbb
mov
jle
adc
shr
xor
push
and
aaa
sbb
mov
movs
inc
cld
rcr
out
nop
and
jo
pop
mov
push
js
popf
out
jns
adc
fxch
nop
sbb
(bad)
mov
sub
jg
mov
in
sahf
or
call
sbb
(bad)
push
sbb
or
jae
cmp
jl
push
cmp
cmp
in
sub
std
jmp
into
mov
retf
xor
into
rcr
adc
stc
xor
(bad)
aam
cmps
dec
push
into
pop
daa
icebp
mov
mov
inc
add
jp
call
mov
cmp
jecxz
in
rol
lods
xchg
dec
in
retf
popa
daa
mov
dec
add
jle
movs
xor
cld
imul
in
call
(bad)
aaa
mov
jo
or
mov
pop
xor
lock
mov
neg
mov
mov
leave
out
cli
loop
(bad)
(bad)
test
scas
pop
or
xor
xlat
iret
int
adc
dec
jmp
pop
sub
jne
sbb
adc
in
std
inc
jnp
daa
std
lock
adc
push
nop
test
cmp
pop
mov
sbb
push
jg
fstp
add
out
xchg
and
sbb
xchg
add
out
xor
cmp
jno
popa
ds
xchg
add
inc
push
mov
sub
dec
out
sub
out
(bad)
repz
ret
stos
ror
mov
out
dec
jb
cli
jecxz
addr16
push
sar
enter
(bad)
stc
jo
jbe
and
and
lock
mov
dec
inc
pop
int
mov
popa
movs
fisttp
sahf
xor
(bad)
and
jle
mov
out
sub
imul
mov
retf
lods
ds
mov
push
sbb
loope
inc
mov
rol
pusha
das
xor
jmp
push
js
mov
ror
jmp
dec
out
mov
shl
mov
shr
xchg
not
push
das
repz
mov
and
rcr
sbb
fimul
xchg
inc
ins
outs
and
enter
inc
shl
or
mov
adc
ds
xchg
es
mov
sbb
je
cmp
cdq
cmps
ror
adc
retf
stos
jl
mov
inc
mov
add
arpl
retf
push
(bad)
test
loop
dec
cld
jb
ret
ja
loope
sub
rcr
(bad)
fisubr
sub
jns
mov
je
mov
and
and
mov
push
push
loop
and
pop
xchg
(bad)
sar
cmp
and
dec
xchg
pop
xchg
(bad)
test
ficom
out
(bad)
jne
ja
mov
jmp
jp
mov
ja
out
pushf
adc
inc
jg
clc
adc
cmp
(bad)
jnp
int3
rol
lahf
outs
mul
pushf
mov
jnp
repz
loopne
xchg
leave
lea
icebp
scas
cli
inc
icebp
and
pop
(bad)
aam
mov
mov
dec
mul
sbb
push
dec
scas
pop
mov
or
movs
fwait
mov
inc
push
mov
js
shl
push
inc
scas
sub
retf
cmc
dec
ret
arpl
mov
or
das
sbb
pushf
pusha
mov
ret
mov
and
stos
sub
mov
inc
pop
mov
or
mov
das
adc
sub
sar
push
retf
mov
jp
cli
xchg
cmp
arpl
inc
lock
jns
jb
fisubr
stos
sub
jge
mov
cmp
or
lds
jns
and
vfmsubaddps
into
inc
data16
fstp
iret
pop
pop
mov
(bad)
mov
jmp
push
int
(bad)
mov
dec
(bad)
ret
xchg
sbb
dec
(bad)
push
nop
adc
add
imul
mov
stos
(bad)
pop
pop
daa
lds
lods
sub
into
aas
and
pop
call
add
adc
pop
imul
cdq
jns
(bad)
push
leave
out
ins
sub
imul
out
mov
dec
jbe
sbb
loop
push
js
call
movs
cwde
test
pop
pop
mov
mov
mov
fsubr
sbb
fwait
or
dec
mov
sub
rcl
outs
test
retf
mov
pushfw
pop
mov
jmp
cmp
loopne
js
sub
arpl
sbb
dec
jo
or
push
lods
cmp
add
dec
add
mov
movs
pop
(bad)
mov
rcl
sar
pop
es
fcom
(bad)
div
xchg
enter
aad
add
fcomp
pushf
sub
dec
and
vmovaps
jns
jge
shl
les
sti
dec
js
(bad)
fmul
mov
push
pop
test
sbb
into
nop
stos
ret
cmps
cmp
out
jno
lea
lahf
jb
fwait
xchg
cmp
jno
cmp
dec
xchg
ficomp
in
lods
out
add
div
cmps
mov
sub
fwait
push
xchg
sbb
xchg
js
or
sbb
aaa
data16
jl
push
and
mov
sub
and
scas
outs
and
xchg
sbb
mov
cmps
and
lods
lock
sahf
mov
aas
and
ret
jbe
pop
in
adc
rcr
test
mov
xchg
mov
add
mov
cmp
jnp
clc
shr
in
pop
xchg
sub
push
sub
stos
mov
std
stos
out
cld
jge
stos
push
inc
inc
fmul
lea
ss
gs
les
jae
jp
xor
push
adc
sub
jne
cmp
in
mov
out
mov
pop
cdq
inc
push
sub
pop
xor
and
mov
mov
(bad)
or
sbb
cmp
sbb
mov
jmp
sbb
sbb
and
cmp
mov
inc
xor
in
out
push
addr16
sahf
push
clc
rcr
or
call
jl
mov
lods
retf
repnz
and
cmp
addr16
or
sti
cli
mov
or
or
outs
faddp
xchg
ret
mov
pop
cmc
fist
push
mov
jge
lahf
into
or
xchg
mov
fwait
mov
xor
data16
push
sti
movs
mov
bound
add
mov
(bad)
mov
js
xchg
mov
and
push
mov
leave
(bad)
pop
sbb
mov
mov
clc
mov
lea
rol
dec
pop
data16
arpl
push
xor
arpl
jb
cmps
ror
sub
or
mov
aaa
inc
leave
scas
pop
add
jmp
mov
aaa
jp
push
in
mov
js
push
div
add
inc
(bad)
xor
adc
arpl
movs
xchg
mov
loope
mov
mov
daa
stos
mov
jns
icebp
shl
sub
sub
mov
mov
ja
retf
inc
stos
jbe
jmp
ja
mov
inc
mov
sbb
ficomp
out
ins
adc
ret
leave
mov
pushf
add
mov
mov
xor
call
fs
push
shl
mov
inc
sbb
inc
imul
(bad)
mov
enterw
rcl
xor
out
aam
and
mov
mov
int
lods
push
add
cli
jg
cmp
into
jno
dec
lods
mov
jnp
adc
fadd
jecxz
int3
adc
adc
outs
aas
ss
mov
cmps
movs
lods
dec
(bad)
pop
retf
or
cmc
sar
das
shl
pop
add
int
mov
not
fnstsw
test
or
test
les
stc
push
push
jg
fisttp
scas
mov
adc
dec
cmp
inc
sub
cmp
cs
scas
scas
pop
ret
and
dec
inc
shl
mov
loop
out
dec
(bad)
retf
push
out
xor
mov
push
xlat
lahf
mov
mov
bound
ins
outs
sbb
xor
pop
jae
fs
int3
repnz
pop
(bad)
shl
ins
jne
xchg
or
int
adc
jl
pop
aaa
jns
fisttp
dec
mov
adc
cmp
jmp
or
or
cmp
arpl
mov
push
retf
push
xchg
dec
adc
rcr
push
jno
sub
ror
lahf
pop
and
jmp
out
jmp
punpckhdq
xor
loopne
push
or
sub
dec
popf
or
jbe
add
outs
aad
pop
lods
or
xchg
repnz
cld
out
clc
test
mov
mov
fdivr
add
add
xchg
jp
out
inc
lds
jecxz
mov
push
shl
mov
pop
repnz
cmp
pop
popa
mov
push
imul
ret
in
inc
mov
inc
icebp
pop
jge
shl
mov
sub
pop
fisttp
dec
mov
call
setns
(bad)
in
call
sbb
xchg
mov
push
jne
rcl
dec
jmp
loopne
xor
mov
mov
add
loope
sub
(bad)
cwde
(bad)
cmc
cli
nop
arpl
cmp
push
mov
nop
movs
ret
inc
shl
lods
jno
lds
stc
arpl
xor
rol
mov
loopne
mov
xlat
xchg
and
mov
or
mov
test
rcr
jle
add
movs
pop
aam
fstp
add
call
pusha
dec
popa
test
enter
xor
pop
jmp
outs
mov
nop
cmp
dec
or
push
lea
test
(bad)
pop
jb
push
xor
adc
addr16
jbe
data16
dec
(bad)
data16
in
mov
cmp
outs
cs
call
outs
cmps
jb
sub
mov
adc
aas
sub
and
sbb
sbb
std
xlat
and
xor
int
dec
push
cs
mov
sti
mov
in
push
out
cmp
pop
shr
ficomp
dec
dec
push
jmp
and
add
and
inc
pushf
inc
cs
mov
sbb
mov
xlat
dec
js
mov
mov
or
cwde
rcr
xchg
pop
stos
mov
push
test
and
jbe
pop
push
js
arpl
xlat
jb
repz
(bad)
mov
pop
xor
popa
lods
js
and
jo
jmp
mov
or
dec
cmp
sbb
mov
dec
sbb
adc
pusha
loopne
(bad)
hlt
sahf
gs
ret
das
inc
test
push
std
add
ja
mov
xchg
mov
(bad)
fdivr
push
icebp
pop
sbb
jns
cmp
addr16
in
add
mov
cmp
sbb
mov
mov
out
mov
stos
fbld
aad
pop
sub
cmc
jne
movs
and
scas
(bad)
jge
and
sbb
dec
div
pusha
mov
add
pop
xlat
(bad)
scas
gs
sbb
pop
dec
fsubrp
ret
sbb
push
adc
cmp
add
sbb
mov
(bad)
aaa
dec
test
scas
push
div
imul
std
pop
nop
jno
xchg
or
movs
popf
loop
div
daa
retf
in
sbb
add
ror
hlt
dec
add
fmul
xlat
std
and
xor
ret
sub
or
xchg
and
xlat
pop
mov
lock
add
test
lods
jmp
jne
pusha
ja
in
mov
dec
popf
xchg
xor
mov
sub
fisttp
sti
sub
stos
lods
or
ret
cs
and
retf
stc
stos
in
lea
lods
loopne
rol
jmp
adc
loope
mov
cmp
lahf
mov
mov
fdivp
in
sub
aam
fwait
mov
test
pop
fdivr
sbb
sahf
push
adc
pop
cmc
adc
xchg
fldenv
mov
sti
dec
popf
cmp
sub
jnp
stos
xchg
sbb
mov
addr16
sub
mov
cwde
popa
cmc
adc
int3
xchg
add
popf
sbb
das
sahf
lea
mov
adc
neg
and
sbb
jecxz
pop
dec
fptan
gs
push
mov
dec
cmp
sub
mov
aad
sbb
scas
inc
pop
sub
out
rcr
adc
iret
out
mov
out
sub
out
sbb
leave
loope
mov
stos
add
pusha
xchg
add
xor
pop
ja
xlat
es
nop
fdivr
mov
cmps
out
xor
xor
and
pop
xlat
jecxz
fs
mov
adc
sub
je
add
aad
cmp
and
(bad)
xchg
mov
sub
ss
(bad)
hlt
dec
imul
add
add
sbb
or
mov
or
push
scas
das
push
mov
jg
ret
out
push
cmps
jb
enter
scas
mov
adc
pop
mov
icebp
aas
push
jno
xchg
lods
dec
xchg
xor
int
and
jl
std
loope
sar
out
or
inc
mov
push
adc
mov
push
aam
sar
(bad)
clc
int
iret
mov
and
sbb
les
jae
clc
cmps
je
mov
cmps
loop
sahf
imul
popf
add
clc
daa
ins
or
cmp
jle
icebp
mov
xor
(bad)
sahf
and
or
mov
leave
outs
daa
mov
jbe
mov
mov
(bad)
mov
ja
cwde
or
out
lea
stos
loope
fcomp
add
scas
sbb
scas
adc
(bad)
xchg
add
sti
jp
mul
cmp
mov
and
ret
out
and
or
ds
outs
lahf
mov
imul
jnp
sub
pop
mov
fucom
inc
inc
fwait
add
push
mov
aaa
sahf
adc
xlat
int
mov
mov
es
sub
repz
rcr
xor
xor
adc
or
jb
into
xchg
repz
out
lea
fisubr
out
sbb
mov
push
or
sub
outs
imul
movs
add
ds
fsubr
pop
fst
ins
fs
push
loopne
loope
inc
in
jno
xor
xchg
cli
jns
or
ret
jb
pop
and
jl
movs
hlt
xchg
popa
iret
cmp
js
inc
(bad)
sbb
retf
in
into
mov
xor
dec
push
iret
ins
loope
mov
ins
cli
adc
jge
mov
gs
push
jmp
int3
std
(bad)
es
inc
es
ds
mov
push
popf
jecxz
rol
arpl
push
adc
push
xchg
dec
xor
inc
pushf
mov
inc
sub
jg
jge
in
fs
out
aad
sbb
daa
mov
mov
and
jo
shr
dec
scas
fmul
ins
inc
out
rdmsr
fs
inc
dec
std
jb
mov
cli
push
imul
test
inc
push
fst
iret
stos
mov
cmp
fwait
sub
(bad)
std
popf
popa
(bad)
sti
and
clc
sbb
push
retf
inc
test
mov
inc
nop
std
sub
mov
add
fcom
mov
sbb
dec
movs
pop
fisttp
mov
fwait
popa
fwait
mov
fdiv
ret
inc
adc
dec
adc
add
scas
ins
repnz
ret
leave
dec
sti
retf
inc
jmp
adc
push
stos
fst
and
xchg
cmps
leave
out
pop
add
aaa
lahf
in
out
xchg
mov
and
(bad)
pop
mov
push
sub
ss
dec
imul
shr
imul
jo
adc
lds
jo
or
ins
mov
imul
sahf
stos
lds
xchg
std
lock
stos
sub
fwait
mov
sub
pop
psrlw
fdivp
mov
int
mov
mov
aam
fadd
sub
in
mov
mov
xchg
push
iret
rol
push
push
pushf
mov
lahf
push
and
and
cwde
daa
and
sub
mov
imul
jmp
push
pop
repz
pop
mov
iret
in
jl
rol
push
mov
mov
pop
das
or
push
pusha
add
vmovss
sub
dec
mov
mov
push
fsub
imul
clc
push
not
and
leave
adc
fldenv
dec
leave
scas
xchg
xchg
adc
inc
stos
xchg
(bad)
fcmove
push
mov
jb
adc
cmp
mov
cwde
sbb
xor
jp
push
mov
mov
jg
rcr
mov
mov
push
jge
xor
ins
cli
dec
pusha
mov
mov
(bad)
cdq
repnz
sbb
popa
pop
das
sub
or
pop
ficom
jno
nop
xchg
cmp
mov
in
push
pusha
aad
xchg
xor
cmp
jle
fild
call
adc
sbb
out
fldcw
mov
and
not
cmp
push
sbb
xchg
jl
movs
das
pop
movs
pop
pop
dec
adc
(bad)
push
dec
dec
and
mov
lahf
adc
fsub
pop
sbb
int3
jmp
retf
outs
push
mov
hlt
or
adc
pop
add
in
mov
dec
sbb
stc
xor
scas
dec
rol
add
imul
mov
cmp
xor
cmps
or
sbb
xchg
pop
(bad)
and
pop
mov
mov
bswap
imul
cld
in
loop
out
sbb
loop
jo
popa
aas
adc
mov
(bad)
jg
enterw
loop
inc
inc
pushf
lahf
xor
arpl
adc
push
or
mov
cli
leave
pop
ja
call
add
scas
int3
jl
test
jnp
cmp
ret
xlat
aas
icebp
mov
in
movs
xchg
scas
shr
mov
dec
pop
jl
jl
jns
hlt
jp
sbb
cmp
fimul
push
scas
jne
sub
jno
call
addr16
mov
(bad)
out
cli
pop
jecxz
jb
jne
seto
adc
sbb
inc
int
or
jno
xor
jecxz
xor
jle
jo
jns
sbb
inc
mov
inc
xor
push
mov
scas
push
xor
mov
fcomp
mov
jns
retf
jne
icebp
or
pop
xchg
xchg
or
dec
les
push
dec
jmp
fsubr
cwde
inc
xor
(bad)
xor
adc
cmp
sbb
cmps
mov
sub
call
lea
test
cli
scas
ds
sbb
inc
lock
mov
cli
jl
xlat
and
shl
xchg
scas
imul
dec
pop
mov
pop
shl
(bad)
ds
cmp
mov
ins
stos
jmp
jb
inc
das
mov
pop
pop
ins
sub
jb
cmps
pop
ds
push
aas
mov
push
or
adc
aaa
jmp
sub
fprem1
enter
fidiv
(bad)
dec
sti
mov
xor
xor
mov
pop
or
mov
cs
mov
movs
sub
hlt
mov
out
retf
ds
cmps
aam
cmps
fld
test
retf
out
jge
jns
lock
sbb
pop
out
div
or
mov
repnz
sbb
push
into
in
or
and
sub
ret
or
or
inc
bound
outs
mov
cwde
xor
les
mov
call
movs
sub
jb
in
retf
mov
cmp
ins
and
(bad)
out
adc
cmc
repnz
js
and
stos
jge
loope
pop
stos
xchg
and
enter
mov
fistp
sbb
cli
into
test
pop
dec
stc
xchg
(bad)
int3
cli
enter
repnz
pop
adc
clc
mov
mov
and
cmp
stos
or
mov
(bad)
fistp
push
popf
call
js
(bad)
fmul
pop
lods
loope
xchg
out
xchg
inc
xor
imul
stos
pop
and
fisub
mov
in
addr16
test
adc
dec
cmp
(bad)
mov
inc
pop
or
dec
out
sahf
mov
push
dec
ret
mov
popa
repz
inc
out
pushf
mov
mov
not
aam
or
cs
int3
jbe
adc
mov
cmp
mov
add
mov
push
adc
sbb
mov
mov
lea
push
aam
push
adc
fwait
outs
pop
loopne
dec
mov
mov
xchg
rcl
movs
mov
js
inc
or
push
mov
cli
nop
xchg
repz
fwait
pop
add
pop
jo
mov
jns
pusha
mov
mov
sbb
ja
dec
and
movs
outs
les
rcl
cwde
push
repz
les
popa
mov
std
mov
or
jp
xchg
pop
and
jae
adc
sbb
test
inc
cmps
or
lock
and
mov
hlt
adc
xchg
ins
adc
cmps
xchg
mov
sub
mov
sbb
adc
ja
push
adc
scas
imul
aaa
sar
outs
adc
nop
xor
(bad)
pop
scas
stos
lahf
je
mov
addr16
mov
stos
cld
or
and
inc
retf
repz
push
enter
sti
aas
push
sahf
sub
mov
mov
retf
int3
popf
sti
fstp
cmc
cdq
push
push
inc
ret
pop
adc
scas
retf
and
adc
sub
xor
sbb
test
jp
xchg
mov
cmp
enter
and
add
mov
add
inc
in
inc
hlt
push
inc
outs
jecxz
int
dec
cmp
out
mov
sub
sbb
fbstp
add
ret
mov
push
inc
ins
jbe
inc
xor
mov
scas
pop
sub
cmp
ret
fistp
cmps
out
inc
out
jns
push
xor
in
dec
mov
aaa
nop
ffreep
xor
(bad)
into
cmps
pop
gs
mov
nop
sub
xor
mov
(bad)
sbb
cmp
call
pop
adc
xor
popa
sbb
(bad)
(bad)
fidiv
call
mov
adc
mov
imul
pushf
lds
mov
loop
ja
aas
stos
mov
adc
ja
cmp
and
adc
fs
fbstp
jg
pop
pop
mov
or
sbb
or
sbb
xchg
shl
das
mov
shl
pop
call
test
mov
mov
mov
sar
cli
mov
test
into
pop
sti
imul
das
les
retf
sbb
lds
push
(bad)
mov
nop
movs
and
int3
bound
mov
cdq
add
das
xchg
add
push
in
nop
(bad)
sbb
sbb
call
sub
adc
mov
int3
inc
jnp
add
pop
fst
outs
xor
lods
ins
jp
daa
sbb
adc
adc
pop
mov
stos
outs
and
js
jo
leave
(bad)
mov
mov
xor
ret
push
aad
test
mov
cmc
(bad)
cdq
mov
imul
cli
pop
sbb
shl
dec
scas
(bad)
mov
iret
mov
mov
push
in
and
pop
call
or
pop
aaa
ins
lods
pop
mov
out
sub
xor
ficomp
lds
movs
repz
adc
stc
dec
or
xchg
sub
(bad)
daa
shl
sbb
call
loopne
xor
sub
and
and
cdq
(bad)
mov
das
inc
xchg
add
loope
popf
rol
ds
scas
dec
push
or
leave
add
shl
stos
jecxz
ror
movs
pop
xor
icebp
sbb
or
sub
pop
aas
loope
sbb
mov
jo
inc
adc
pushf
js
dec
div
push
scas
push
ja
adc
sub
jle
(bad)
xor
sbb
mov
cmps
fild
push
stc
pushf
pusha
dec
jmp
xchg
seto
mov
clts
outs
and
push
das
sbb
add
and
sub
jecxz
push
mov
push
add
mov
retf
test
pop
sub
in
pop
or
(bad)
(bad)
repz
fcomp
jecxz
xchg
cmp
pushf
inc
push
xchg
not
in
pushf
mov
jge
aad
jp
bound
repnz
fstp
adc
mov
or
or
gs
aas
(bad)
mov
mov
les
pop
mov
(bad)
xor
jmp
pop
push
jmp
test
lea
imul
mov
and
mov
pusha
xadd
dec
imul
adc
call
sbb
arpl
(bad)
cmp
arpl
mov
lods
ror
in
jg
(bad)
or
mov
inc
or
inc
push
xchg
rol
lock
bound
and
push
addr16
sbb
mov
aad
daa
push
push
dec
jns
sub
rcl
(bad)
jno
hlt
mov
clc
loope
xor
push
hlt
test
mov
xchg
stos
sahf
enter
adc
adc
push
daa
inc
sar
dec
loopne
adc
xchg
push
pop
sub
nop
or
pop
test
xor
inc
jb
sbb
ins
or
imul
push
outs
fs
adc
jp
cld
daa
xor
ficom
jno
jl
pop
sub
jecxz
out
mov
adc
push
cld
lahf
imul
inc
inc
mov
pop
dec
jmp
mov
mov
pop
pop
cmp
movs
and
imul
fstp
retf
(bad)
mov
call
cmp
mov
lea
xor
sub
jmp
cdq
dec
pop
sub
cmps
push
icebp
jle
push
dec
fistp
dec
add
movs
ja
and
xor
jmp
sbb
mov
loop
retf
daa
cli
and
nop
mov
cmp
fsub
in
sti
or
jbe
and
or
xchg
popf
sub
and
cmp
mov
shr
(bad)
push
ja
jnp
push
fbstp
test
sbb
ret
xchg
jae
imul
jmp
pop
jle
shl
in
xor
out
and
and
push
(bad)
dec
mov
mov
xlat
push
adc
mov
ror
cmc
add
sbb
jecxz
pop
push
scas
test
dec
push
sar
retf
push
inc
nop
pop
es
sub
jbe
pop
cmps
into
imul
mov
scas
mov
dec
pop
mov
scas
test
and
mov
sub
xor
stos
fcom
sbb
(bad)
pop
cmp
test
fbstp
mov
cmp
push
jg
cmp
iret
das
sub
rcr
pushf
je
inc
dec
push
aad
add
adc
mov
pop
pop
push
ret
fs
dec
in
xor
retf
cdq
iret
(bad)
fstp
lahf
jg
mov
sub
mov
mov
pop
fs
sbb
ficom
retf
stos
outs
inc
adc
cmp
xor
dec
fnstsw
add
mov
ja
xchg
lea
adc
fprem1
(bad)
xchg
lds
sub
ficom
fxch
mov
aaa
inc
mov
and
stos
shl
mov
pop
push
lds
xchg
push
xlat
push
xor
jne
int3
mov
movs
push
outs
xor
daa
jbe
xchg
(bad)
push
lods
imul
xchg
xor
(bad)
pop
xor
xchg
iret
pop
stos
pop
in
ror
and
mov
mov
jl
repz
in
mov
dec
sub
and
scas
mov
push
movntps
adc
pop
mov
cmp
in
cmp
adc
std
pop
and
add
fwait
dec
pop
jl
xchg
nop
outs
push
retf
std
lea
adc
fisub
in
out
mov
nop
fstp
shr
mov
cld
loope
stos
test
pop
pop
icebp
cmp
pop
test
cmc
(bad)
les
adc
add
jg
icebp
push
gs
jmp
add
mov
aam
jle
gs
movs
cmp
clc
stos
add
inc
mov
and
in
ret
inc
adc
in
loopne
and
push
dec
imul
in
jp
hlt
and
(bad)
mov
dec
inc
add
push
push
enter
cdq
cmp
sub
fistp
test
cdq
fwait
cmps
adc
or
lahf
out
inc
(bad)
jmp
mov
lahf
stos
pop
push
popf
inc
retf
sar
cmp
jl
fwait
daa
xchg
add
iret
cmp
or
arpl
ss
xchg
pop
mov
jno
int3
ja
jbe
loope
daa
dec
into
mov
dec
push
push
stc
dec
mov
pop
shr
push
jne
dec
in
and
pop
ins
inc
push
push
test
xlat
add
push
fidivr
ficomp
inc
sbb
fwait
int3
dec
rcr
ret
jge
sub
ins
int3
and
inc
mov
lahf
(bad)
call
push
jno
in
mov
and
rol
mov
dec
call
push
push
cmp
add
cmc
(bad)
fisubr
pop
into
mov
xor
cmp
ffreep
int3
(bad)
lahf
pop
sbb
add
outs
lea
ins
je
iret
mov
xor
jb
mov
cmp
repz
adc
cmp
cli
and
push
fnstcw
xchg
add
dec
xchg
and
cmc
xor
out
jl
mov
mov
jle
mov
ins
(bad)
(bad)
cdq
adc
int3
xchg
ds
mov
lea
addr16
(bad)
mov
cmp
les
push
inc
fs
or
or
in
push
out
les
js
shr
sahf
or
sbb
std
jge
adc
je
jae
and
sub
pop
push
or
pause
lods
(bad)
push
cmp
hlt
adc
inc
jge
or
sbb
jl
pusha
xor
dec
in
test
mov
rol
mov
xor
inc
or
dec
pop
or
shl
push
xlat
jl
cld
and
xor
pusha
pop
pop
or
xchg
mov
jg
cdq
jb
dec
scas
xor
fadd
add
shl
ds
xor
jnp
sahf
(bad)
mov
outs
sub
(bad)
pop
daa
addr16
add
pop
sbb
int
popa
sbb
cs
jb
jp
push
popa
imul
mov
das
mov
inc
retf
xchg
sbb
sahf
fs
pcmpgtd
fisubr
outs
mov
add
sbb
leave
mov
jmp
arpl
(bad)
push
mov
add
mov
inc
jge
and
fcomi
popa
pop
add
and
dec
pop
fild
xor
xor
mov
rcl
(bad)
call
dec
cmps
and
loop
clc
adc
test
test
adc
out
(bad)
and
pushf
jns
push
nop
popa
inc
or
cmc
mov
data16
and
out
fs
jp
imul
mov
cmp
dec
or
test
popf
or
mov
ins
fmul
mov
out
out
push
cli
mov
sar
imul
test
add
in
mov
jl
in
lods
bsf
mov
sti
scas
mov
push
sti
xor
cwde
push
loope
mov
mov
int
fnsave
dec
test
or
and
ins
iret
fisubr
fxtract
es
cmp
push
push
jne
xchg
loope
mov
dec
jns
push
push
(bad)
out
mov
out
dec
and
mov
sbb
add
inc
and
mov
push
mov
cli
nop
and
push
inc
adc
jno
dec
add
call
popf
xor
push
cmp
cmp
aaa
call
test
cmc
ins
xor
push
leave
scas
sub
xchg
in
add
scas
ja
movs
push
add
dec
sub
sbb
ins
adc
repz
(bad)
xlat
out
shl
enter
nop
in
(bad)
sahf
stos
push
cld
outs
imul
ins
inc
mov
cmp
or
gs
add
popa
mov
dec
cld
jae
imul
mov
xor
out
out
push
mov
imul
push
call
cmp
add
add
imul
lds
js
sbb
jns
mov
add
push
fwait
js
push
ins
gs
rcl
sbb
add
inc
icebp
(bad)
test
mov
pop
xor
iret
cld
int
cmp
jp
std
and
fimul
cli
hlt
scas
xor
xor
cdq
xor
inc
and
test
daa
call
jle
xor
imul
and
sbb
(bad)
sbb
push
inc
jg
jmp
int
jmp
ins
fstp
lock
xor
xlat
jo
sbb
and
ror
lods
push
jle
xchg
stc
sub
lds
xchg
in
fwait
push
movsx
nop
out
enter
repz
(bad)
adc
cmp
mov
mov
int
inc
push
pop
daa
repnz
fisttp
jl
popa
push
imul
jge
call
scas
nop
ret
dec
push
stc
fstp
bound
mov
xchg
lahf
dec
and
xchg
mov
aaa
sbb
sti
cmc
xchg
in
push
pusha
mov
push
mov
pusha
(bad)
call
mov
sub
js
jnp
sub
jno
stos
test
dec
push
test
push
ja
adc
lds
fdivr
data16
inc
hlt
imul
xchg
ftst
mov
jae
push
sub
sub
pusha
push
jmp
sbb
int3
jp
xchg
sub
xchg
test
gs
stos
sbb
shl
dec
cmp
sub
sub
cwde
fcompp
jbe
lea
mov
std
xor
inc
xchg
push
shr
das
xor
mov
cmovge
(bad)
mov
ins
bound
jmp
cmc
mov
rol
(bad)
xor
popf
gs
call
in
push
mov
mov
jmp
adc
xchg
push
arpl
push
sub
fwait
or
cmp
aas
jg
sbb
xor
aas
mov
cmp
sub
add
std
ins
xchg
inc
pop
jg
xchg
inc
add
scas
int
enter
fcom
and
in
adc
aam
cdq
cs
je
and
(bad)
arpl
xor
addr16
or
xchg
jg
dec
outs
xor
or
push
sub
cmps
test
call
fsubr
iret
gs
xchg
jecxz
xor
js
test
sahf
or
test
mov
mov
daa
ins
jns
test
repnz
push
mov
dec
pop
out
sub
in
pop
(bad)
test
sbb
adc
pop
cmps
push
test
leave
inc
mov
xor
sbb
pop
sub
fadd
sub
neg
mov
or
lea
lock
neg
mov
lds
popf
neg
sbb
pop
and
stos
and
les
fmul
fs
xor
ins
jbe
in
hlt
and
je
jecxz
fucomip
fadd
iret
aad
pop
jo
pop
fdivr
pop
inc
ds
popa
pop
lea
test
inc
lods
xchg
adc
mov
aam
or
adc
loopne
dec
fiadd
mov
or
xchg
inc
or
imul
jae
jg
sbb
inc
sbb
push
push
add
xchg
cmps
cli
and
dec
stos
es
repz
cmp
call
loopne
shl
adc
mov
or
mov
mov
(bad)
or
push
dec
addr16
mov
iret
int
pop
mov
and
pop
mov
xchg
in
add
jmp
shr
retf
cmps
mov
test
mov
pop
sub
jmp
sahf
sbb
aam
pop
jns
dec
(bad)
mov
jl
or
cmp
dec
jo
sub
cmp
mov
push
push
cli
and
add
xor
(bad)
out
dec
or
sbb
lods
or
in
sub
call
jmp
jne
out
imul
dec
mov
addr16
adc
ins
xor
stc
and
movs
es
jle
aad
cmp
mov
out
and
jmp
movs
(bad)
popf
(bad)
jmp
call
dec
cld
mov
dec
arpl
stos
sbb
dec
cmp
mov
mov
into
adc
jmp
cmc
adc
pushf
dec
daa
xor
sahf
daa
add
jns
fisub
cmp
cwde
sub
sti
mov
add
stc
jmp
cvtdq2ps
add
inc
jnp
add
jp
jg
shr
maskmovq
jbe
xchg
test
dec
lahf
and
rcl
outs
and
pop
lods
inc
cmp
xchg
mov
loop
mov
fwait
dec
cmovs
into
mov
outs
xlat
mov
add
fnstcw
out
pop
push
mov
push
bound
sub
fwait
xor
les
or
stos
hlt
stc
int
and
int3
(bad)
call
inc
ja
int3
xor
movs
xlat
lds
dec
mov
xchg
dec
inc
add
fdiv
scas
push
push
std
push
adc
push
push
(bad)
cld
gs
and
jle
adc
(bad)
ss
(bad)
(bad)
test
push
sub
aam
jb
add
add
adc
daa
xchg
fdivr
btc
xchg
xchg
test
shl
xchg
adc
xchg
out
fs
bound
mov
outs
pop
inc
mov
inc
jnp
sub
call
mov
cmps
ja
cmps
pop
adc
add
jno
lea
mov
cwde
push
lods
aas
cmc
and
xchg
dec
mov
aam
enter
sbb
in
or
fisttp
cmc
mov
mov
mov
pop
pop
(bad)
(bad)
mov
push
xor
mov
mov
jnp
inc
ja
leave
inc
jne
and
cmps
and
adc
fild
pop
sbb
xor
pop
icebp
or
cmp
fs
mov
(bad)
(bad)
cdq
mov
pop
adc
(bad)
rcl
movs
mov
jmp
push
mov
inc
mov
std
cmp
in
xor
jle
inc
xchg
pop
fwait
movs
add
std
movs
mov
xlat
test
lea
imul
add
int3
push
in
repnz
aad
and
in
clc
ins
clc
(bad)
out
or
repz
pop
ret
cmps
adc
lds
push
mov
mov
xor
(bad)
pop
shl
inc
fcomip
dec
xor
lahf
movsx
gs
jo
mov
and
pop
cmp
cmp
ficomp
jae
aas
jns
xor
cld
jb
in
push
push
pop
iret
leave
scas
dec
pop
ja
pushf
mov
or
sub
jae
pop
or
in
adc
enter
fistp
into
sub
jb
pop
push
ret
clc
movs
xchg
adc
fdivr
push
aaa
dec
dec
add
push
das
add
xor
inc
xchg
ja
push
sub
rcr
movs
dec
push
or
xor
mov
les
sub
pop
push
loop
or
and
fimul
pop
sti
loop
loop
jne
pop
popf
call
and
cmps
out
cmp
bound
cdq
xor
jg
pushf
retf
push
mov
push
sbb
and
and
les
push
in
mov
fisttp
mov
cmp
jl
mov
test
outs
sbb
or
lock
dec
popa
xor
pop
mov
loop
test
int3
das
push
out
(bad)
xor
adc
cld
xor
inc
enter
mov
adc
les
push
fldenv
test
and
cmp
jmp
push
loope
cmp
fidiv
std
dec
dec
or
push
jmp
push
dec
mov
nop
(bad)
dec
pop
dec
mov
ja
jl
mov
call
aad
scas
cwde
xor
loopne
test
jle
fst
xor
(bad)
call
ret
mov
gs
sbb
sti
jmp
ret
inc
movs
lods
jg
xchg
jbe
fwait
into
ins
test
sbb
mov
or
nop
sub
cmp
mov
cld
push
iret
sbb
xchg
clc
loopne
mov
pop
inc
xor
push
or
lahf
js
push
cli
mov
je
out
int
div
in
mov
jle
cmp
addr16
fist
and
cs
sbb
loope
jnp
adc
cld
xchg
adc
out
out
cdq
inc
bound
(bad)
stc
push
jle
adc
scas
jo
fs
bound
cs
ss
(bad)
imul
js
xor
add
adc
cmp
add
hlt
mov
rcl
jge
test
lea
imul
mov
pop
(bad)
cmp
in
std
jmp
mov
inc
fdivr
fisttp
or
fisubr
in
retf
pusha
lds
xchg
fld
test
cld
jne
or
add
push
jbe
(bad)
pop
shl
xor
mov
and
mov
lock
shr
push
stc
jecxz
inc
pop
test
int3
clc
pop
out
mov
cmp
dec
test
mov
pop
jns
push
daa
and
es
sar
neg
scas
loopne
cmp
test
adc
fcom
addr16
sbb
pop
sub
xchg
add
dec
pop
adc
push
rcr
sub
(bad)
repz
xor
retf
cmp
ja
add
fwait
mov
push
and
push
jne
jae
jle
stc
lods
or
mov
(bad)
bound
scas
dec
sar
(bad)
xchg
fild
adc
xor
nop
data16
pop
adc
pop
lock
adc
mov
lods
ins
xchg
mov
lods
push
aam
int3
cmp
add
or
sub
sbb
loopne
out
push
jmp
xchg
add
and
stos
call
jo
loop
inc
xchg
retf
(bad)
adc
add
icebp
in
xchg
sub
mov
test
loope
rol
retf
sub
fld
ret
push
mov
(bad)
or
and
nop
imul
add
out
les
or
int3
jns
pushf
cmp
jbe
mov
mov
xchg
(bad)
jp
adc
enter
mov
dec
scas
cmp
sbb
pop
cmps
lods
jmp
js
mov
cld
sti
retf
sti
xchg
or
lock
lds
aad
fsub
cmps
adc
call
data16
sar
dec
jns
aam
cmp
push
push
icebp
fistp
fldenv
cmp
mov
jnp
ins
mov
jno
(bad)
cmp
jnp
pop
mov
push
stos
dec
aas
xor
sub
and
das
out
inc
xor
sbb
inc
js
test
xchg
dec
sub
call
into
retf
xchg
sbb
mov
or
nop
mov
inc
cmp
stos
jmp
mov
outs
push
ss
xchg
push
pop
loop
ss
and
loopne
dec
movs
xchg
ja
xlat
lock
pop
pop
xchg
sbb
xor
ins
dec
mov
add
(bad)
aam
retf
push
dec
cwde
addr16
fdivr
sbb
call
outs
dec
test
icebp
adc
popa
cmp
adc
cmc
dec
xor
mov
pop
jbe
icebp
jno
inc
stos
adc
push
fdiv
pusha
sub
shr
xor
or
scas
mov
mov
mov
loop
adc
mov
arpl
mov
push
test
sbb
jae
mov
xor
mov
mov
mov
push
pop
pop
inc
dec
outs
sbb
xor
xchg
inc
ds
leave
push
xor
pop
pusha
push
test
pusha
js
sub
(bad)
shr
inc
sbb
popa
arpl
ja
xor
jno
es
data16
(bad)
push
push
mov
(bad)
js
pushf
loope
imul
imul
aad
dec
and
fistp
sbb
add
inc
mov
push
push
cmp
jmp
pushf
pop
mov
dec
cs
dec
in
in
std
jae
nop
mov
lock
push
mov
outs
jg
cmp
dec
call
inc
hlt
out
imul
mov
jp
or
addr16
adc
jl
add
mov
mov
jle
push
inc
pop
mov
dec
jmp
int3
xor
les
dec
pop
mov
test
jp
inc
and
lock
jp
lods
pop
mov
pushf
call
and
or
ja
test
cdq
test
mov
daa
ja
sbb
add
imul
sub
sahf
out
lods
test
ja
cs
lahf
dec
mov
js
les
js
sub
hlt
addr16
mov
mov
fcom
mov
pop
xor
and
outs
fwait
xor
dec
cld
scas
xlat
cmp
mov
push
mov
and
pop
fldcw
imul
add
aad
out
mov
popa
mov
adc
mov
and
and
dec
(bad)
sti
jecxz
movs
out
mov
lahf
out
mov
adc
mov
outs
mov
or
out
daa
push
mov
dec
cmp
hlt
adc
and
push
(bad)
push
enter
xor
adc
jns
pop
cmp
call
push
loopne
retf
xor
(bad)
dec
jl
jle
cmps
pop
aad
sbb
or
fwait
retf
jae
mov
jnp
cmp
dec
int
sub
sbb
retf
jmp
jno
cdq
and
aaa
pop
jns
and
pop
mov
sub
or
dec
(bad)
(bad)
inc
jmp
inc
sub
arpl
hlt
mov
xchg
mov
pusha
fstp
xor
into
ds
cmps
movs
mov
push
mov
push
mov
sub
call
les
xor
xchg
(bad)
pop
inc
xchg
push
cmp
scas
cmp
or
jl
cmc
cmp
inc
lds
(bad)
out
xchg
cmp
lods
mov
dec
sub
cmp
jge
aad
push
dec
mul
in
sbb
push
or
mov
xor
xchg
cmp
and
jl
or
mov
pop
dec
pop
sbb
dec
mov
sbb
sub
mov
push
ja
xor
xchg
xchg
lods
push
cmp
movs
fs
aam
xlat
fadd
or
add
les
inc
in
call
add
add
ficom
dec
xor
(bad)
xor
ins
stc
lods
imul
and
xor
xchg
jl
mov
and
aam
mov
adc
std
nop
loopne
mov
cmp
xor
jl
or
imul
or
gs
lahf
pop
outs
push
movs
out
jo
clc
or
push
xor
cmp
ss
xor
dec
jae
cmp
jae
push
cmc
repz
mov
cs
jmp
fnstenv
stos
rcl
popa
xchg
xor
fwait
pop
repnz
call
mov
mov
xchg
leave
xchg
ficom
std
adc
icebp
scas
and
mov
xchg
jecxz
in
jmp
or
sbb
push
test
inc
jb
scas
call
(bad)
dec
sbb
inc
ins
xchg
mov
mov
push
stc
sub
jmp
sub
pmaddwd
sub
pop
sub
push
lea
(bad)
out
inc
xor
outs
sbb
retf
mov
lahf
inc
cli
aad
sub
test
iret
inc
inc
(bad)
dec
outs
mov
call
stc
mov
dec
pop
sbb
lods
stc
mov
js
cmps
scas
es
test
dec
mov
fisttp
test
cmp
xor
mov
test
fild
scas
jl
mov
xor
sub
xchg
retf
cs
adc
push
rol
aaa
lahf
cmp
inc
jle
sbb
xchg
leave
dec
jnp
test
jns
rol
cmp
ds
mov
dec
and
mov
sub
cmc
int
(bad)
xor
add
sub
test
sbb
and
test
in
xchg
adc
pop
jecxz
std
leave
fmul
cmp
cmp
test
dec
daa
mov
repnz
sar
imul
addr16
add
cmp
and
js
retf
xchg
sar
jns
fnstcw
inc
jge
sbb
cli
jecxz
xor
rol
adc
sub
lods
and
push
scas
test
adc
push
xchg
dec
sbb
inc
test
adc
jnp
mov
mov
and
test
jb
cli
inc
scas
test
xlat
adc
loopne
adc
cmps
push
xchg
cmp
mov
cmps
push
inc
addr16
mov
out
pop
test
sahf
or
int3
pushf
(bad)
lds
nop
cdq
adc
sti
es
or
fistp
clc
popf
mov
shl
push
scas
js
fsub
mov
push
pop
mov
loop
int
pop
and
bound
pop
jge
mov
cli
in
cmp
fimul
mov
test
inc
out
or
add
repnz
fild
add
xchg
adc
retf
sbb
pop
inc
stos
jnp
call
mov
fwait
fs
adc
push
data16
ret
mov
pop
sti
retf
in
or
and
or
inc
jnp
(bad)
test
adc
sub
jle
(bad)
rol
popf
jmp
push
(bad)
dec
add
xchg
pop
sub
ja
jne
in
mov
retf
imul
dec
add
cs
xchg
shr
mov
rol
inc
loopne
dec
cmps
gs
call
sbb
jo
movs
pop
ja
stos
out
js
fild
in
xchg
cmp
gs
jns
dec
aam
sub
mov
popa
mov
sbb
outs
ja
xor
dec
pop
push
xor
adc
dec
or
dec
dec
push
repz
out
inc
(bad)
push
xor
out
xchg
inc
lahf
cmp
mov
jmp
movs
popa
push
call
jbe
das
inc
sbb
and
mov
lock
int3
(bad)
xor
add
push
dec
dec
jle
and
sbb
mov
sbb
dec
imul
jmp
sahf
mov
or
(bad)
daa
mov
popf
jne
inc
push
push
xor
scas
sbb
outs
or
pop
jbe
or
jmp
call
cmp
addr16
idiv
mov
mov
or
pop
push
lahf
ins
scas
(bad)
inc
xchg
xor
jl
faddp
retf
sbb
and
int
out
jmp
jp
icebp
mov
push
inc
mov
pop
test
stos
jo
mov
div
and
jns
pop
gs
dec
or
jo
sahf
enter
xor
fcom
sub
push
ret
xor
mov
movs
mov
dec
inc
sbb
loop
jbe
fisttp
add
adc
mov
popf
jnp
scas
jno
std
sub
nop
push
call
adc
shl
sbb
leave
loop
out
jp
pop
in
not
push
jns
repnz
fcmovne
mov
inc
inc
add
fstp
push
jmp
mov
xor
das
jnp
scas
push
jmp
scas
sub
loop
ins
loop
xor
push
mov
and
mov
or
movs
mov
sbb
adc
ror
sbb
mov
cmp
jb
movs
mov
test
in
dec
shr
in
imul
add
lock
mov
dec
ret
cmc
add
retf
mov
push
lods
cmp
pop
add
imul
dec
popf
push
jae
cwde
xchg
cs
jge
fldcw
pop
pushf
fldl2e
mov
cmps
test
push
outs
adc
xchg
test
push
fsub
and
les
add
and
cmp
jbe
cmp
ja
aam
dec
and
fs
cli
mov
in
mov
mov
mov
pushf
dec
push
ret
or
out
imul
call
mov
ins
shr
push
dec
int3
sub
sub
pop
movs
mov
mov
enter
shl
inc
and
fmulp
stc
xlat
dec
cmp
test
js
sbb
push
xor
jne
push
and
sub
and
inc
inc
jmp
nop
call
leave
add
lock
mov
and
dec
loope
mov
cld
sbb
cwde
pushf
call
xor
pop
aam
ror
inc
xor
cmp
jecxz
cmp
(bad)
je
int3
out
gs
mov
sub
adc
cmp
inc
and
inc
out
sub
pop
mov
mov
ror
ds
into
test
push
les
or
inc
jge
shl
pushf
add
xchg
pop
sbb
xchg
pop
aam
mov
int3
cs
test
scas
and
sti
(bad)
pop
mov
test
dec
ret
adc
pop
pop
cmp
fistp
cmps
fnstenv
icebp
imul
fidiv
jo
into
jle
aad
gs
mov
sub
push
jge
mov
adc
inc
ins
mov
std
mov
je
or
sar
in
fadd
mov
push
fwait
inc
jae
sbb
inc
jbe
rcr
jo
and
xor
sub
mov
sbb
mov
push
call
or
mov
cmp
add
jmp
mov
mov
push
or
and
sbb
lods
sbb
ror
push
jb
cmc
hlt
js
add
vcvtps2dq
bts
stc
fistp
jbe
ss
cld
fstp
leave
(bad)
mov
outs
popa
popf
popa
pusha
sar
pusha
pop
cmp
(bad)
call
movs
pushf
sbb
add
adc
mov
inc
clc
test
mov
call
scas
push
push
jp
mov
sbb
in
shl
fcom
mov
dec
sti
push
jecxz
sub
retf
add
cmp
mov
in
xor
push
int3
jg
mov
dec
push
xor
add
adc
(bad)
pop
retf
adc
inc
icebp
repz
push
cmp
jmp
fdiv
aaa
xchg
pop
or
push
jg
and
paddsw
inc
jle
push
(bad)
aam
les
push
pop
and
test
in
jmp
jp
jle
jo
xchg
mov
mov
jp
sti
out
jb
adc
cmp
adc
(bad)
ja
dec
das
inc
push
arpl
xchg
sbb
push
int
out
stc
std
arpl
pop
mov
mov
call
sbb
pop
nop
enter
or
sbb
cdq
(bad)
(bad)
fisubr
fs
sbb
jns
inc
icebp
movs
lds
inc
movs
sub
out
test
(bad)
ror
cmp
adc
sbb
dec
ret
repnz
xchg
addr16
dec
repnz
push
ja
inc
out
cmps
fdivr
pop
xchg
dec
call
leave
add
scas
jnp
inc
bound
(bad)
(bad)
loopne
das
fsub
pop
add
or
inc
sti
push
js
and
jmp
es
and
cs
add
scas
xor
and
push
(bad)
in
fadd
jno
sahf
(bad)
in
popf
imul
gs
out
xorps
adc
xor
pop
adc
mov
fisubr
add
or
push
fistp
rol
or
sub
div
dec
(bad)
popa
mov
and
pop
test
(bad)
sub
retf
sahf
sub
push
cmps
dec
jge
(bad)
arpl
popf
dec
icebp
xor
jo
jne
inc
jo
mov
gs
xchg
jnp
xchg
lods
dec
inc
sub
call
popa
pop
and
jns
dec
outs
imul
cmp
adc
retf
test
sbb
js
cmp
jp
push
cdq
cdq
call
ret
cmp
dec
add
sar
test
inc
fiadd
mov
push
fmul
dec
or
jge
cmp
fsubp
push
push
ficomp
pop
jb
aas
jp
sub
xlat
mov
bnd
pop
cmps
sbb
push
mov
xchg
fstp
and
in
test
setle
repz
mov
xlat
stos
test
add
scas
lods
inc
js
retf
stos
push
dec
and
call
rcl
ret
retf
or
icebp
sub
push
lahf
mov
jne
or
xchg
mov
sub
jne
mov
ja
nop
sahf
lods
iret
sbb
mov
test
push
addr16
and
gs
xchg
mov
push
cli
or
jg
data16
dec
scas
push
retf
sub
pop
mov
ins
inc
and
ds
push
cmp
or
xor
and
dec
leave
std
std
jecxz
lods
(bad)
loope
mov
loope
and
push
cwde
leave
std
(bad)
js
mov
pushf
outs
inc
xchg
ins
movs
das
and
jmp
movs
and
cli
(bad)
adc
pop
xchg
xchg
xchg
imul
jg
xchg
inc
adc
pop
add
cmp
outs
sbb
ins
call
repz
cs
ja
scas
lea
(bad)
sbb
mov
xor
into
xchg
or
mov
data16
sti
xor
sub
js
div
cmp
in
mov
fild
xchg
push
mov
test
cmc
aas
js
repz
shrd
mov
int3
enter
sar
ins
mov
push
dec
bound
jne
rol
loopne
or
push
in
retf
sub
jbe
jp
ins
add
fwait
js
jg
ror
lahf
pop
ret
(bad)
stos
mov
imul
add
cwde
iret
out
jno
adc
div
cmp
or
outs
scas
and
cmp
aad
in
lods
repz
cmp
jmp
push
test
mov
enter
adc
or
call
push
not
mov
mov
enter
adc
mov
stc
jmp
fistp
sub
loope
jns
addr16
pusha
push
push
pop
imul
in
cmp
adc
push
pop
lods
dec
cmc
iret
mov
ins
xlat
sbb
(bad)
or
or
pop
aad
or
push
call
(bad)
cmp
mov
ja
test
and
xlat
xchg
and
ins
jae
popa
dec
mov
out
cmp
test
pop
push
and
mov
retf
jge
add
ret
xchg
jno
dec
pop
push
mov
dec
push
(bad)
inc
jne
fcom
popf
and
fcomp
pop
inc
adc
nop
jle
jle
jb
jmp
addr16
jl
sub
retf
(bad)
cld
cmp
cld
rcr
sub
stos
push
xor
mov
adc
test
push
lss
int
sahf
scas
dec
out
mov
or
sub
outs
out
push
hlt
aas
movs
and
adc
aam
push
push
in
jo
lock
mov
cdq
mov
mov
cmp
pop
adc
sbb
daa
pop
fwait
mov
jmp
jnp
xchg
mov
pop
inc
lods
movs
icebp
and
add
int3
outs
outs
xor
inc
sub
adc
gs
dec
bound
xor
stos
imul
or
pop
dec
out
popf
jb
stc
xchg
int
test
imul
pop
mov
pusha
cmp
(bad)
scas
mov
loopne
pop
push
mov
std
ss
loop
cmc
ja
mov
xlat
mov
jno
jnp
test
jle
xor
es
fisttp
fist
mov
adc
or
ja
jbe
push
bound
or
mov
push
xor
dec
sub
mov
sub
push
sahf
sub
sub
mov
cmp
mov
pusha
xchg
test
sti
cmps
sbb
(bad)
cld
sbb
cmp
sub
rol
mov
(bad)
xchg
ficom
cld
jg
fdiv
sbb
jo
xchg
jle
div
xchg
pop
add
aam
js
cmp
mov
in
adc
mov
and
jecxz
sbb
movs
(bad)
cmps
imul
push
xor
and
pop
fnsave
mov
test
ja
loop
adc
pop
mov
push
sub
xchg
scas
cli
jle
add
add
and
push
rcr
mov
loope
xor
stc
fnstsw
or
push
mov
sti
test
mov
and
pop
mov
imul
mov
xchg
jecxz
lahf
fiadd
pop
sub
sti
mov
sbb
jg
jmp
cmp
push
dec
xchg
pop
cmps
fwait
lahf
lods
pop
adc
mov
xchg
stc
or
sub
sub
mov
sub
mov
xor
repz
or
push
adc
push
adc
mov
pop
push
push
mov
sub
xchg
inc
std
pop
in
add
mov
mov
inc
int3
fs
or
dec
nop
arpl
sub
jmp
in
call
jae
adc
push
jne
sbb
mov
jmp
in
stc
jl
inc
cld
xor
gs
repnz
jo
xchg
mov
fild
push
test
cmp
mov
dec
(bad)
cmp
push
inc
jno
daa
inc
mov
pop
arpl
lds
aam
mov
dec
adc
or
pop
push
mov
lahf
mov
inc
aaa
leave
test
and
xlat
or
popf
or
add
xchg
popf
pushf
mov
or
or
or
add
loope
dec
loopne
loop
sub
mov
into
bound
mov
mov
jmp
pop
(bad)
sbb
je
sub
xor
dec
ret
xchg
xchg
push
aaa
xor
inc
inc
pop
test
xchg
xchg
mov
add
movs
jo
cmps
add
imul
cmps
cld
rol
arpl
jno
stos
dec
repz
push
int
aam
retf
neg
aas
cs
sub
mov
cmp
pop
pop
dec
pop
xor
jmp
or
retf
(bad)
rcl
xor
jnp
shl
jp
enter
and
cmp
dec
retf
jns
lds
push
xchg
pop
pop
cli
and
mov
xor
mov
jg
cmp
sub
frstor
inc
xchg
data16
cmp
cmp
shl
fisttp
jae
std
dec
lods
xor
loop
jmp
adc
pop
arpl
fisttp
ins
push
push
scas
xchg
inc
dec
cmp
js
dec
mov
sub
movs
pop
push
sub
out
push
in
shl
sbb
cmp
mov
inc
jns
div
inc
daa
out
jle
dec
jp
(bad)
or
ds
fsub
mov
loop
fidivr
in
sub
imul
push
mov
add
cmp
lea
neg
pushf
leave
or
cmc
fwait
aas
hlt
jnp
inc
pop
outs
inc
pop
clc
aas
sbb
mov
out
sub
retf
aaa
adc
xor
add
lea
pusha
imul
in
xchg
jg
jns
ds
test
fdiv
test
or
mov
sub
retf
inc
nop
imul
mov
ficom
and
call
loop
dec
call
adc
sub
sub
dec
pop
retf
xor
imul
loop
cmovne
pop
ror
je
(bad)
loopne
(bad)
fimul
adc
mov
call
movs
adc
outs
or
push
int
test
inc
sti
adc
mov
test
push
jge
xchg
in
shl
fcmovu
pop
ins
icebp
(bad)
xchg
scas
rcr
jp
iret
jg
jg
out
dec
and
sub
enter
shl
ds
or
in
or
and
mov
outs
mov
mov
stos
or
fwait
sti
adc
sbb
popf
cmps
dec
xor
push
xor
inc
jae
inc
dec
ja
xchg
push
bound
retf
scas
jge
or
inc
xchg
inc
xor
sub
js
cwde
push
fs
mov
(bad)
pop
or
outs
jmp
push
sub
mov
out
pop
js
cmc
sbb
mov
mov
inc
adc
inc
lds
mov
sbb
movs
push
sub
mov
and
out
lea
pushf
adc
stc
sbb
xchg
xor
cmp
outs
xchg
daa
leave
loopne
xor
neg
lock
sti
and
xlat
mov
pop
mov
daa
sbb
daa
cmp
add
jecxz
div
xchg
leave
sub
add
sbb
ror
sbb
sar
enter
hlt
out
or
xchg
sbb
retf
leave
test
pop
mov
xchg
call
xlat
pop
gs
push
cmp
or
dec
pop
neg
adc
enter
sub
test
mov
cmp
ret
enter
adc
fstp
cmp
pop
push
out
jmp
repz
push
mov
imul
shl
pop
add
mov
mov
in
imul
scas
push
jg
adc
xchg
or
pop
aas
lods
cli
popf
jecxz
loop
pop
test
inc
or
mov
or
rcr
leave
pop
mov
imul
inc
cmc
cmc
dec
(bad)
call
mov
xchg
mov
popf
jmp
sbb
daa
adc
adc
dec
popf
pop
lea
mov
inc
test
and
push
xor
shr
xor
inc
cmp
jmp
mov
cmps
sahf
add
in
sahf
push
and
inc
mov
popa
arpl
push
dec
sub
add
mov
sbb
out
leave
sti
and
xchg
pushf
xor
and
ins
push
(bad)
jmp
push
mov
popa
jnp
sbb
adc
hlt
inc
mov
in
mov
jl
fild
mov
test
dec
and
pop
sub
sar
xor
scas
mov
or
xlat
push
rol
adc
adc
inc
int3
push
xchg
add
into
imul
inc
inc
inc
ret
ins
fild
pop
sbb
clc
ins
icebp
mov
push
sub
pslld
sbb
popf
push
in
loope
lods
aam
dec
pop
push
adc
js
int3
sub
lahf
jbe
popf
pop
and
and
adc
je
mov
cmp
and
add
jecxz
imul
int3
loopne
mov
jb
mov
or
xchg
mov
xchg
xor
inc
loope
mov
imul
push
aas
jbe
mov
test
xchg
movs
or
aaa
ins
xor
pop
xchg
xchg
add
push
sub
push
ss
xor
mov
movs
mov
sti
and
mov
das
pushf
cli
mov
xchg
std
mov
ja
push
nop
pop
xor
aaa
shl
add
inc
push
mov
fwait
sbb
stos
mov
dec
stc
iret
inc
das
adc
mov
cwde
add
iret
imul
ret
sahf
cmps
and
or
pushf
cmp
ins
leave
xchg
inc
ret
inc
aas
daa
cli
cmp
xchg
dec
(bad)
and
and
sbb
arpl
adc
pop
out
test
lds
ss
fwait
cmc
pop
cmp
push
dec
sub
pop
nop
jnp
sub
or
fisubr
dec
xchg
xchg
push
xchg
and
xor
push
mov
mov
popa
popa
retf
(bad)
xchg
pop
and
lock
in
push
add
(bad)
jne
dec
push
retf
cdq
daa
lahf
mov
test
fisub
jp
mov
into
out
and
push
and
test
shr
out
lods
movs
retf
repnz
cmp
sbb
mov
ror
fidiv
retf
xor
mov
out
mov
test
lahf
test
mov
push
into
jbe
adc
adc
xchg
mov
cli
fadd
cli
popf
stos
cdq
int3
and
adc
ror
inc
inc
push
aad
jmp
pop
int3
and
cmc
mov
dec
jle
add
add
scas
ficomp
aas
hlt
loop
(bad)
sub
xor
sar
xor
clc
sbb
jl
push
inc
cmc
xchg
push
dec
loope
mov
and
into
inc
test
lea
daa
xchg
mov
fsub
ret
ds
push
mov
ins
and
pop
push
jne
or
scas
fild
push
sti
iret
stos
mov
aaa
inc
or
inc
cwde
retf
adc
xor
out
xor
out
or
adc
jl
inc
(bad)
or
pop
pop
jb
aas
pop
jge
xor
mov
sbb
sti
enter
sub
out
dec
mov
(bad)
std
popf
or
push
pop
daa
and
push
add
mov
sbb
bound
icebp
imul
sbb
jmp
push
and
lock
xchg
ins
cmp
xchg
and
call
movs
imul
jns
test
aaa
pop
adc
jb
iret
ss
jb
or
mov
repnz
push
pop
in
push
nop
ret
lea
xchg
push
and
xor
into
je
je
cdq
fld
xor
jge
jp
push
clc
ds
inc
lods
push
hlt
in
enter
xor
(bad)
jb
push
dec
(bad)
test
dec
stc
xchg
jns
ja
pop
outs
arpl
jge
pushf
adc
xor
sar
rcr
xor
out
inc
xchg
inc
inc
movs
fist
aad
mov
mov
mov
add
mov
pop
shr
jno
into
inc
cmp
sahf
push
push
push
imul
jle
popf
pop
add
mov
or
sub
xchg
add
into
or
pop
mov
pop
cwde
sbb
adc
sbb
mov
stc
mov
inc
and
dec
adc
scas
ja
imul
jne
fnsave
jp
es
iret
mov
push
inc
dec
sbb
out
int3
and
std
outs
in
int3
jg
and
or
repnz
pop
rcr
pop
pusha
adc
ret
out
add
cmp
adc
rcr
loopne
dec
and
pop
(bad)
mov
out
dec
js
fld
rcr
fst
push
arpl
xchg
cs
std
mov
sub
push
or
xor
mov
icebp
mov
leave
push
ds
xor
arpl
nop
xchg
cmc
jo
push
lock
lea
test
imul
in
mov
lods
cmp
mov
inc
or
fwait
adc
pop
ins
test
jle
pop
sub
mov
sbb
int3
scas
fisttp
xchg
(bad)
adc
dec
and
out
inc
nop
scas
ja
sbb
aaa
(bad)
ret
inc
mov
pop
add
pop
cmp
xor
aaa
data16
pop
lods
jge
sub
jl
movs
adc
es
pop
push
ja
mov
push
adc
in
out
sbb
adc
es
and
imul
movs
add
push
int
mov
sub
pop
push
das
leave
cmp
sbb
mov
sub
fidiv
(bad)
push
lds
test
jmp
(bad)
cmps
cmp
ss
push
int3
mov
and
(bad)
mov
aaa
out
jbe
xor
sbb
stos
pop
idiv
out
adc
out
test
sbb
es
rcl
cs
aad
neg
add
and
cwde
jmp
pop
in
loope
icebp
xor
mov
push
fld
jle
push
cmps
cli
push
lods
int3
mov
jecxz
outs
xchg
xchg
in
lods
jecxz
fcomi
(bad)
sub
std
adc
outs
imul
movs
enter
mov
xor
ret
xchg
add
xlat
cwde
stos
(bad)
adc
jno
mov
mov
push
cmp
sbb
add
aam
xchg
outs
call
test
int3
pop
mov
lds
push
cmp
add
adc
and
test
mov
or
mov
dec
jae
test
sbb
xchg
or
sub
and
xor
or
adc
xchg
popa
pop
in
addr16
sbb
lds
repnz
out
(bad)
jmp
sti
data16
outs
daa
fist
int3
movs
(bad)
pop
sub
push
aam
lea
xor
scas
(bad)
xchg
aad
sti
lods
ss
inc
add
cmp
jb
outs
mov
mov
lahf
jnp
(bad)
and
aam
in
pop
pop
int3
add
fsubr
mov
sub
mov
clc
mov
into
pop
cmp
adc
scas
dec
retf
cmps
rcl
(bad)
clc
je
and
or
adc
mov
mov
jo
movs
dec
ja
jge
stos
stc
xor
jge
cwde
cwde
dec
or
ds
mov
cmps
jmp
fnsave
loop
and
shr
test
or
loopne
shl
adc
jne
and
dec
push
lea
sti
fs
cmp
xchg
sub
xchg
push
fadd
jl
jo
xor
mov
rep
or
or
pop
aad
aas
adc
mov
push
or
xor
ds
popf
stos
pop
sar
aad
adc
retf
aad
dec
mov
add
mov
outs
adc
cmp
cmp
sbb
sub
lea
cmps
pop
aam
and
div
(bad)
(bad)
pop
mov
neg
les
jae
jne
and
aas
dec
ret
inc
cmc
jmp
jl
add
mov
outs
(bad)
push
add
xchg
ja
enter
inc
in
lock
iret
int3
test
or
xor
fcmove
jmp
test
mov
or
mov
jno
(bad)
mov
xor
jmp
and
pop
jae
xlat
retf
in
outs
std
push
(bad)
stos
into
outs
adc
mov
and
pop
jbe
push
cld
call
and
xor
out
xlat
xor
aas
push
push
xor
(bad)
(bad)
push
mov
leave
mov
add
sub
pop
dec
fisubr
xchg
cmp
cmp
cmp
(bad)
mov
xchg
inc
rol
mov
out
mov
xlat
gs
pushf
sbb
jmp
dec
es
ds
fucom
ins
sti
cmp
loopne
in
mov
test
ror
inc
and
mov
nop
mov
hlt
out
jg
mov
and
mov
enter
imul
(bad)
mov
or
push
sub
push
mov
shl
pop
adc
sub
push
fcomp
pop
sbb
cmps
pop
add
lahf
inc
mov
cmc
push
mov
add
call
(bad)
jmp
add
(bad)
aad
dec
in
js
stos
cwde
cmp
xchg
add
add
inc
adc
dec
jbe
xchg
mov
ds
inc
fld
mov
je
nop
inc
mov
(bad)
cmc
adc
mov
icebp
xor
fisttp
stos
(bad)
sub
fwait
pop
loopne
hlt
inc
mov
or
fisttp
(bad)
mov
les
push
outs
adc
pop
(bad)
jecxz
imul
pop
mov
rol
mov
out
xchg
je
dec
scas
inc
stc
ret
cmp
aas
adc
inc
mov
xor
aaa
aad
jae
mov
dec
mov
sub
fbld
imul
adc
pop
das
je
push
sahf
data16
dec
fs
(bad)
(bad)
mov
xor
xchg
cmps
test
out
push
test
cmc
imul
std
mov
jne
mov
test
xor
pop
test
adc
mov
sbb
jae
shl
adc
inc
cli
pop
add
stos
jge
and
dec
add
(bad)
in
xchg
jle
rcr
jl
test
in
in
test
jmp
jo
sbb
cmps
dec
or
cld
lods
mov
xchg
or
dec
mov
add
fdivr
dec
mov
jnp
sbb
fnstcw
pop
pop
add
jmp
mov
cs
jmp
cmp
inc
push
repnz
jno
fisubr
sub
lds
and
mov
repnz
hlt
cmps
xchg
inc
and
hlt
pop
jae
inc
add
(bad)
jle
and
cmp
and
imul
sti
mov
or
xchg
outs
mov
mov
sahf
dec
retf
mov
add
xor
test
cli
jnp
jno
sti
jae
mov
mov
jmp
lods
in
lahf
jg
xor
push
add
sbb
lds
(bad)
fdiv
sbb
iret
mov
retf
jmp
and
fist
xor
cs
aas
add
xor
in
(bad)
out
sbb
loopne
(bad)
movs
popa
mov
jl
sbb
add
outs
rcl
(bad)
mov
add
int
mov
adc
das
movs
jmp
popa
inc
push
gs
push
xlat
pop
int
dec
cmps
je
pop
adc
or
aam
mov
shr
jecxz
xchg
jmp
(bad)
leave
xor
xchg
adc
rol
out
daa
aam
adc
jb
mov
dec
jecxz
(bad)
cdq
push
ins
aam
aaa
ret
std
inc
clc
mov
xor
enter
ret
ds
fcom
out
std
or
xor
aas
mov
cmp
sbb
data16
pusha
xchg
sub
lods
shl
fmulp
mov
scas
sahf
push
bound
nop
sbb
pusha
ins
out
cli
xchg
ins
add
sub
sbb
fmulp
pusha
test
or
stos
sbb
mov
lods
jle
sub
sub
ds
out
ror
inc
dec
adc
sub
and
jbe
xor
and
cmp
and
xchg
jae
mov
outs
mov
jbe
clc
push
or
or
sbb
das
data16
(bad)
ja
icebp
dec
dec
or
nop
xchg
adc
sar
(bad)
jp
jne
aad
popa
cwde
mov
push
dec
adc
add
push
rol
stc
shr
fwait
aas
gs
and
dec
inc
leave
sbb
(bad)
out
jnp
sub
test
pop
out
int3
pop
stc
pushf
dec
lods
push
jb
inc
jmp
pusha
popf
nop
push
push
pushf
(bad)
xor
inc
add
xor
cmp
xchg
pusha
xor
aam
adc
imul
sub
not
push
add
shr
inc
ins
xchg
mov
ror
test
shl
push
mov
ds
movs
add
aad
das
add
or
jmp
test
outs
lods
fiadd
unpckhps
(bad)
fucomip
mov
popf
cdq
sub
scas
aam
inc
push
popa
cli
jle
inc
movs
mov
retf
inc
fs
sbb
call
mov
stos
adc
in
hlt
fcmovb
fiadd
sbb
ret
jnp
jb
cmp
popf
add
mov
mov
add
add
sbb
scas
test
shl
sbb
mov
mov
mov
sbb
and
hlt
xchg
adc
(bad)
xchg
ret
add
gs
xor
jne
hlt
enter
push
(bad)
sti
push
aas
xor
xchg
dec
cmp
jb
xor
icebp
xchg
sub
das
add
and
test
sbb
mov
sbb
add
push
sub
mov
pushf
arpl
xchg
jae
dec
ror
push
mov
repz
ret
jge
jecxz
ss
aas
push
(bad)
mov
mov
fst
imul
jecxz
jp
mov
mov
cli
jecxz
fwait
jne
out
int3
mov
xchg
in
and
adc
mov
fmul
mov
imul
mov
xchg
(bad)
fwait
(bad)
aad
jmp
sub
jne
adc
sbb
and
jns
pusha
das
loop
sbb
les
mov
arpl
int
lods
sub
adc
push
push
fdivr
push
(bad)
int
adc
jle
(bad)
enter
lds
in
mov
pop
sbb
jne
xchg
shl
outs
pushf
mov
cmp
jge
inc
movzx
nop
mov
in
cmps
cmp
mov
cmp
test
jbe
movs
fs
mov
push
test
jns
mov
repnz
dec
or
repnz
sub
mov
pop
stos
mov
shl
mov
mov
out
inc
ficomp
adc
jp
jp
test
sbb
repz
xlat
jb
dec
ret
jnp
nop
imul
jg
xchg
xchg
cmp
add
pop
fsub
push
js
mov
dec
mov
mov
push
inc
mov
mov
arpl
jp
data16
mov
mov
cmps
cmp
xor
sti
hlt
cs
inc
dec
and
and
mov
pop
mov
out
fmul
mov
push
es
ficomp
xor
(bad)
jne
ds
dec
mov
in
push
mov
mov
sbb
pop
jne
dec
jne
shl
push
jmp
push
inc
test
xor
fnstenv
dec
imul
and
std
push
fs
jmp
gs
(bad)
xchg
daa
and
xor
pop
mov
xchg
pop
fs
scas
movs
cmps
push
and
push
cmps
int
jbe
push
pushf
rcr
and
mov
xor
sbb
adc
cmp
ins
sbb
sbb
mov
cmp
clc
mov
ret
adc
add
fmulp
cli
add
rcl
mov
icebp
adc
mov
leave
mov
movs
fdivrp
call
cs
push
iret
pop
inc
popf
or
sub
pop
and
jl
mov
(bad)
or
sbb
jbe
in
mov
lock
cmps
loope
mov
or
or
xor
repz
pusha
mov
call
mov
out
sahf
sar
adc
xor
cwde
pop
mov
cld
inc
popf
scas
mov
ja
std
adc
cmps
xor
shr
dec
into
(bad)
mov
sbb
fdivr
je
jo
pushf
cmp
movs
sbb
jo
pop
or
xchg
in
adc
je
jne
fld
jae
mov
neg
fmul
icebp
mov
push
retf
mov
aam
lds
pop
test
push
add
movs
push
and
push
mov
mov
mov
fwait
aam
es
aas
pop
mov
mov
sub
sub
mov
jmp
sub
pop
fucomi
popa
cmp
push
imul
shrd
jbe
add
pop
add
xchg
cmp
sub
ficomp
mov
push
(bad)
pop
shl
mov
inc
push
cmp
js
cmp
cmc
xchg
jle
call
gs
and
aas
mov
xor
hlt
shl
push
jmp
lods
or
and
xchg
jae
and
lds
mov
inc
retf
xchg
call
dec
retf
es
mov
mov
test
jmp
loop
xchg
mov
add
loop
mov
in
out
std
xchg
mov
jns
add
adc
push
xchg
adc
imul
enter
and
or
inc
xor
mov
add
(bad)
test
adc
sbb
mov
pop
push
cli
add
adc
or
sub
sub
outs
inc
cmp
pushf
cli
mov
inc
lock
push
pop
aam
push
dec
dec
sub
sti
fmul
lds
stos
xchg
mov
leave
push
jmp
lods
mov
sbb
ins
jnp
sti
adc
pop
imul
add
pop
xor
into
mov
enter
iret
adc
xchg
stos
sub
lock
cmp
jecxz
adc
jle
mul
sahf
cli
clc
inc
sub
fld
add
loop
mov
jbe
leave
arpl
loope
popf
fist
ds
test
cmp
pusha
loop
push
xor
push
pcmpgtw
inc
cmp
repnz
inc
mov
imul
inc
movs
sub
retf
movs
hlt
adc
mov
cmp
inc
in
mov
cwde
ret
add
cmp
pop
lds
loope
mov
jmp
js
in
cmc
pop
cmp
inc
add
cmp
jmp
or
pinsrw
xchg
jae
bound
pop
loopne
imul
gs
and
push
cmp
inc
bound
mov
or
sbb
xchg
ret
outs
cmp
hlt
mov
into
data16
mov
push
cmc
call
sub
jo
xor
mov
push
into
jmp
cdq
sbb
mov
xor
push
test
outs
ins
push
not
jmp
out
mov
fnsave
jno
xor
xchg
jne
and
dec
jl
pop
(bad)
cmc
jns
fisttp
sub
loope
dec
push
mov
push
jp
enter
sbb
(bad)
pop
fnstenv
out
js
mov
fldcw
inc
ja
inc
cli
sbb
mov
mov
ss
loop
sub
jbe
fmul
xchg
pop
dec
jno
push
lock
add
mov
imul
pop
ins
cli
retf
(bad)
sub
dec
(bad)
sti
or
stc
push
sub
sahf
pop
enter
mov
mov
jbe
aas
sub
rol
out
pop
dec
xor
dec
mov
xchg
mov
xlat
push
jmp
inc
xchg
jns
xchg
pop
xlat
fistp
cdq
sbb
and
aam
cdq
imul
out
lods
and
cmp
inc
(bad)
push
or
xor
in
cmps
aas
jg
sbb
sahf
or
inc
(bad)
pushf
imul
jne
mov
inc
inc
nop
shl
retf
cs
out
inc
mov
jmp
bound
xor
dec
inc
ror
sbb
xchg
fadd
mov
pavgw
inc
outs
push
fwait
cmps
fisttp
mov
cmp
cld
push
push
mov
aas
pop
sti
or
(bad)
dec
test
ret
add
cmps
dec
fistp
(bad)
push
push
cmp
data16
test
clc
dec
nop
push
test
push
mov
jmp
pop
pop
aam
imul
sub
jo
loope
inc
(bad)
mov
ror
sbb
xor
mov
mov
les
and
in
data16
and
mov
out
das
out
test
call
cdq
push
cmps
jo
jmp
sub
stos
sbb
fnstcw
xchg
adc
adc
scas
and
mov
bound
xchg
lock
mov
call
dec
push
adc
sbb
mov
bound
mov
adc
test
loop
stos
jmp
mov
pop
loope
call
shr
jmp
dec
clc
sahf
cmp
mov
adc
cmps
stos
mov
or
sbb
movs
jp
mov
jmp
jmp
and
lock
cs
in
mov
(bad)
test
sahf
vpsubd
popa
pop
pop
les
stc
jle
xchg
fist
mov
lods
ds
loope
lea
xor
ds
call
cmp
stos
push
(bad)
xor
dec
fsub
push
push
dec
pop
int
jbe
inc
sti
out
cmps
fistp
stos
(bad)
sbb
sahf
std
mov
xchg
jge
cmp
in
adc
and
in
fstp
pop
push
jl
out
cwde
aas
add
lods
add
call
jmp
aaa
cmp
and
(bad)
adc
xor
pop
and
mov
icebp
movs
(bad)
inc
leave
push
inc
adc
dec
add
mov
ret
ficomp
out
dec
mul
and
add
cmovae
or
lods
lock
cmp
xor
or
adc
imul
cmps
jle
(bad)
sti
mov
cwde
jb
mov
push
mov
mov
daa
bound
push
mov
bound
pop
in
push
(bad)
mov
adc
dec
call
dec
add
cmp
stc
or
dec
jl
xor
dec
mov
cmp
push
xchg
sbb
push
xor
rcr
arpl
rcr
iret
repz
(bad)
test
ins
pop
dec
mov
mov
sbb
mov
imul
cli
pop
mov
stos
push
ds
in
out
in
mov
test
std
fnstsw
xor
fisttp
mov
pop
ja
push
xor
jl
push
cmp
cmovns
mov
fucomi
lods
xchg
je
lock
lods
dec
in
mov
dec
xor
jmp
mov
ins
adc
lahf
gs
pop
sbb
daa
dec
sbb
outs
loop
test
push
lods
je
or
or
pop
lock
scas
pop
aaa
cld
fisttp
push
in
or
inc
jmp
sub
lahf
mov
popa
out
add
jae
pop
xchg
and
add
outs
adc
add
loop
inc
enter
stos
xchg
rol
dec
cmp
adc
dec
ja
mov
fwait
pop
bound
jmp
inc
fnsave
dec
jg
cmp
dec
loope
add
mov
cmp
es
test
dec
repnz
scas
aad
das
pop
or
jmp
cld
in
inc
push
mov
xchg
nop
fsub
ja
dec
jne
cmp
cmps
sbb
push
shl
jmp
test
or
dec
mov
mov
mov
mov
pusha
aad
fs
int
out
dec
mov
fcom
fidiv
je
sub
mov
dec
hlt
xor
jg
dec
femms
mov
nop
xchg
outs
mov
scas
xchg
dec
and
inc
int3
fsub
pop
test
and
inc
add
movs
mov
mov
mov
xchg
xchg
mov
mov
jmp
xor
jo
movs
mov
inc
(bad)
sbb
sbb
das
test
mov
xchg
in
jns
cmp
mov
cmp
cmp
ret
mov
in
or
(bad)
or
pop
arpl
(bad)
pushf
ds
mov
data16
arpl
jne
rol
addr16
inc
outs
movs
xlat
test
pop
adc
jmp
cmp
outs
arpl
retf
pushf
jge
dec
jnp
mov
fcos
(bad)
fucom
push
cmp
xor
stos
sbb
adc
es
xchg
inc
sahf
fdivr
dec
movs
mov
mov
xor
jb
jns
lods
adc
add
aaa
mov
or
ret
repz
shl
xor
and
jne
cld
ja
aaa
imul
jns
mov
add
sub
push
jl
and
aas
pop
adc
jle
ds
loope
pop
pop
clc
push
in
arpl
mov
mov
outs
callw
mov
stc
mov
jecxz
imul
ficom
enter
cmp
and
inc
sub
ficom
lea
inc
dec
pop
test
xchg
lds
mov
adc
dec
push
and
xchg
pop
xchg
daa
jne
lods
lds
push
mov
jno
cmp
mov
mov
jle
xchg
jge
repz
or
bound
fstp
xchg
sbb
sbb
xchg
inc
sub
mov
iret
imul
arpl
mov
xchg
add
jo
movs
xchg
into
dec
lods
push
add
scas
fnsave
push
shl
mov
pop
cmp
setle
xor
sahf
imul
cmp
ds
and
test
jmp
pop
lea
mov
std
fdiv
cmp
movs
xchg
inc
add
mov
test
loope
and
sub
(bad)
fisttp
in
or
imul
push
fadd
nop
(bad)
call
mov
jno
stos
test
sub
shl
inc
sub
mov
repnz
scas
aad
mov
mul
sbb
outs
int
js
stos
dec
inc
ins
mov
sub
pop
jp
loope
shr
push
int
xchg
cmc
jecxz
adc
xchg
sar
xchg
add
(bad)
hlt
jnp
sbb
dec
arpl
jp
(bad)
cli
or
aam
xor
ins
ret
and
nop
jne
inc
dec
cmp
icebp
inc
adc
xor
cli
bound
(bad)
jle
ror
and
ja
jle
mov
adc
cmps
jg
stos
xor
adc
adc
sti
push
pop
or
gs
fnstenv
aad
popf
lock
pop
pop
repz
aad
pop
js
test
(bad)
jl
jo
and
sub
les
sbb
sbb
sahf
ret
xchg
and
jmp
cmp
adc
or
mov
pop
inc
xchg
mov
sbb
rcl
cmc
pop
pop
mov
mov
jo
loopne
jns
adc
movs
adc
jne
aad
daa
mov
jg
mov
xchg
sahf
mov
or
dec
sar
fild
adc
div
push
dec
mov
out
inc
mov
cmp
outs
push
mov
in
or
test
jae
sti
cmps
fs
push
test
lahf
rcl
mov
rol
mov
jg
test
pop
out
mov
dec
ins
loopne
loope
push
mov
xchg
cmp
dec
dec
mov
aam
sahf
dec
mov
dec
cli
xor
xchg
xchg
xchg
pop
push
lods
(bad)
xlat
mov
and
loope
mov
sub
jg
push
ficom
cdq
je
xchg
stc
retf
cmp
cmp
loopne
std
(bad)
adc
movs
jns
daa
sar
cld
xchg
inc
jb
inc
out
sbb
in
arpl
scas
dec
adc
mov
mov
dec
and
test
mov
clc
gs
cmp
aam
xchg
fist
xor
add
fsubr
push
mov
jl
jnp
sub
(bad)
ja
add
pushf
leave
xchg
mov
xchg
mov
repnz
scas
mov
mov
jne
cs
sbb
dec
pmaxsw
icebp
adc
scas
dec
fnstcw
outs
shr
popa
test
inc
or
(bad)
inc
or
adc
pushf
mov
jle
inc
mov
mov
inc
ins
aaa
inc
pop
cdq
stos
fld
or
inc
nop
sub
call
push
call
arpl
and
jno
mov
scas
jecxz
ins
sbb
adc
or
test
out
sub
push
or
push
imul
out
adc
jne
add
aam
jmp
dec
aaa
sub
sbb
es
mov
(bad)
sbb
and
out
dec
(bad)
aad
push
test
mov
push
add
outs
jo
add
adc
jbe
retf
retf
dec
in
aas
or
out
inc
clc
cmps
cmp
mov
and
push
stos
sub
call
push
(bad)
popa
mov
stos
test
mov
leave
(bad)
mov
jnp
ficomp
or
jp
repnz
idiv
out
mov
mov
pop
jg
loope
sbb
jb
push
int3
mov
add
and
retf
repnz
out
sub
jo
std
cdq
push
int
retf
or
das
pop
repnz
and
mov
or
jns
jb
fst
jle
jmp
aaa
add
dec
mov
popf
xchg
cli
xchg
push
stc
in
lahf
icebp
cmc
mov
into
add
jmp
mov
or
fsub
ret
sub
hlt
dec
push
dec
mov
mov
jbe
loope
jp
or
ret
dec
cmp
div
dec
jmp
call
push
ja
(bad)
jmp
jnp
adc
mov
jle
retf
pop
int3
push
pop
sbb
xor
push
(bad)
out
rol
aas
pop
fld
fdiv
pop
test
mov
(bad)
(bad)
xchg
imul
sbb
dec
and
mov
adc
xlat
std
jno
push
rcl
repz
aam
lds
cdq
ret
pop
ins
mov
loop
add
es
popa
aas
retf
clc
mov
adc
add
xor
scas
lds
into
xor
dec
cmps
mov
or
pop
mov
cmp
push
mov
lea
inc
push
in
iret
and
mul
ins
xor
nop
lock
dec
sahf
jmp
test
mov
push
pop
stos
or
mov
cs
sub
out
aam
call
adc
inc
ja
gs
(bad)
fidiv
hlt
lods
and
loope
mov
jb
jb
fdiv
sbb
aas
lock
pop
repnz
adc
lahf
xor
xor
cmp
ss
dec
mov
div
cmp
and
sbb
dec
mov
call
out
and
cmp
add
dec
adc
adc
xchg
xor
or
test
jae
inc
pusha
cwde
jmp
cmc
gs
inc
sti
mov
into
mov
outs
xor
inc
mov
push
inc
dec
mov
mov
jge
imul
push
repz
mov
and
outs
and
jno
ds
adc
mov
mov
pop
xchg
enter
mov
inc
push
call
jge
cmp
fdivr
dec
push
movs
inc
dec
xor
out
cmp
and
sbb
retf
sub
add
je
mov
aad
mov
imul
dec
sub
pop
mov
xchg
int3
adc
scas
push
scas
inc
fimul
add
inc
sbb
sub
int3
ss
sbb
mov
jecxz
jno
mov
jecxz
arpl
cmp
iret
lds
or
outs
sbb
sbb
iret
sbb
and
pop
in
ins
mov
jno
pop
cli
pop
mov
mov
sbb
pop
ss
xchg
xchg
arpl
xchg
xor
ret
test
jmp
inc
add
push
fild
(bad)
cmps
mov
sbb
pushf
or
add
das
and
adc
add
sub
xor
mov
and
sub
daa
mov
and
(bad)
sbb
lods
aaa
(bad)
sub
out
add
and
sbb
mov
inc
pop
xor
jnp
in
cwde
out
xchg
adc
xchg
lahf
mov
fld
pop
lahf
ss
je
mov
xchg
jnp
and
enter
push
xchg
out
mov
and
push
or
sahf
lock
aaa
mov
and
mov
dec
out
mov
sar
popa
jb
pushf
xchg
retf
sub
sub
push
ret
mov
dec
dec
sub
pop
mov
and
xchg
fninit
shr
lock
mov
into
and
nop
cmp
push
jns
or
push
xor
push
dec
inc
leave
cmp
or
inc
pop
mov
test
cmp
cmp
mov
cmp
movs
out
(bad)
mov
and
sub
xor
imul
popf
mov
and
inc
sahf
jle
add
test
iret
jnp
int3
dec
adc
ret
mov
jmp
pop
pop
mov
inc
xchg
xchg
cmp
jmp
div
push
sbb
jae
mov
call
cwde
shr
xchg
cmps
vmread
mov
sar
xlat
jecxz
fs
adc
int
cmc
ffreep
bound
xchg
inc
int3
xchg
fnstenv
adc
pop
nop
cmp
cmp
push
inc
jle
pushf
cmps
sub
pop
lods
fsubr
xlat
inc
mov
push
lods
loope
xor
int
clc
ins
imul
fcom
jae
aam
mov
push
or
pusha
or
lea
les
in
lods
pop
or
mov
mov
jbe
mov
pop
(bad)
mov
cmp
xchg
(bad)
aas
xor
mov
push
mov
(bad)
lock
movs
or
stos
or
lods
ss
push
mov
lahf
jle
mov
dec
gs
(bad)
adc
xor
cli
pop
mov
(bad)
mov
inc
mov
sbb
xor
push
xchg
pop
scas
cwde
add
cmps
nop
data16
add
iret
fdivr
push
jbe
aam
shl
imul
push
push
sbb
mov
or
jp
mov
gs
or
shl
dec
push
pop
jae
imul
enter
jecxz
ins
das
or
xchg
cmps
mov
pop
in
dec
jne
xor
jl
daa
bound
out
xor
inc
retf
fs
std
stos
jns
fnstenv
jo
jg
sbb
jmp
adc
dec
jae
sbb
ins
ins
mov
ret
and
sub
into
mov
pop
(bad)
aad
sbb
pushw
pop
shl
pop
push
add
xor
adc
rol
and
add
retf
jmp
inc
gs
(bad)
fbld
addr16
lods
je
mov
mov
mov
test
sti
and
push
enter
sahf
(bad)
outs
sub
or
dec
adc
inc
dec
inc
cmp
adc
in
cdq
xchg
cmp
and
das
outs
or
icebp
aas
xchg
cmps
fs
cwde
jl
imul
push
jno
dec
mov
jnp
push
or
in
xchg
xchg
addr16
push
mov
das
cmp
or
aas
xor
jnp
aad
dec
retf
cwde
mov
push
push
ret
dec
cmp
push
out
mov
cmc
jmp
sahf
nop
jle
cmps
loop
or
ror
inc
es
mov
push
pushf
dec
cmps
cmc
push
cmps
test
mov
cld
lods
repnz
test
je
mov
in
dec
or
mov
ins
xor
xchg
or
hlt
repnz
xchg
dec
mov
(bad)
rcr
fild
mov
sahf
push
mov
mov
adc
push
sbb
push
stos
aas
into
int
jmp
push
retf
scas
bound
lahf
fimul
aas
in
push
add
jge
sub
icebp
mov
adc
test
call
(bad)
int
dec
cmp
jbe
sub
push
fcmovb
or
mov
ins
add
popa
cmp
xlat
js
jl
shl
icebp
and
jb
aaa
lea
xor
xor
dec
ins
jmp
psubusb
mov
mov
movs
das
jle
nop
shl
adc
stc
dec
adc
popf
jg
sahf
fcomp
je
xchg
dec
jmp
jle
mov
leave
mov
push
sahf
and
cmps
xor
jne
inc
xor
imul
jbe
scas
dec
jmp
test
jnp
gs
jmp
mov
ins
data16
fsub
icebp
das
mov
aaa
aas
js
xchg
gs
scas
repz
mov
mov
aas
mov
aad
in
cdq
adc
inc
retf
and
out
mov
xchg
scas
sub
and
outs
outs
enter
sub
not
(bad)
mov
jb
mov
mov
adc
pop
cmp
popa
dec
std
lods
neg
(bad)
js
cmps
add
outs
cmp
pop
dec
sub
ds
mov
add
mov
js
mov
(bad)
out
cld
adc
push
and
and
pop
pusha
test
out
ins
jae
xlat
dec
xchg
inc
xchg
jbe
mov
xchg
rcl
mov
inc
pop
sub
ss
cdq
hlt
mov
inc
xchg
mov
mov
add
jecxz
ret
in
jae
mov
jne
jo
cmc
mov
xchg
sub
dec
retf
mov
test
mov
lods
cs
retf
xor
dec
(bad)
into
cmp
aam
or
dec
ds
jmp
pop
jb
rol
mov
ins
adc
and
and
dec
addr16
and
mov
std
dec
test
or
out
out
adc
loopne
dec
jae
fnsave
pop
mov
dec
inc
repnz
stos
mov
xor
push
cmc
xchg
push
stos
dec
jno
cmp
fisubr
not
sub
sbb
push
outs
ficom
xchg
sub
pop
pop
ja
push
mov
or
std
mov
add
cmp
mov
in
cwde
arpl
es
adc
inc
push
jns
jg
jno
mov
clc
mov
jmp
inc
inc
popa
add
fs
imul
(bad)
add
test
idiv
out
xchg
or
(bad)
out
cwde
cmp
js
fcmovnu
and
int3
aaa
repnz
or
pop
js
call
jne
inc
movs
aas
bound
test
cmp
rol
add
xchg
mov
ror
std
popf
hlt
mov
cwde
rcl
je
imul
gs
jb
mov
imul
pop
sub
imul
lea
or
sahf
int3
ret
xchg
push
pop
push
fstp
jp
pop
aad
sbb
bound
test
test
inc
mov
lds
sub
mov
popa
popa
cmps
adc
dec
mov
jmp
adc
inc
dec
mov
addr16
xor
push
not
cli
hlt
jecxz
pop
and
ja
pop
inc
test
into
fimul
daa
xchg
mov
ret
adc
in
sahf
ins
iret
clc
daa
popa
out
mov
jns
inc
and
push
(bad)
out
pop
jbe
xchg
mov
push
pop
jbe
cmp
lahf
or
mov
push
ret
sbb
imul
cmp
pop
or
daa
ds
jne
xor
scas
es
pop
arpl
xor
fdivr
mov
cdq
icebp
mov
sub
push
addr16
int3
ror
pop
mov
test
and
cmp
mov
fsub
or
push
mov
pushf
push
ficom
pop
fld
idiv
cli
dec
aas
mov
and
mov
rcr
shl
sbb
xchg
push
sub
sub
arpl
repnz
mov
ret
out
scas
int3
xchg
pop
movs
scas
lock
imul
test
or
fcomi
sub
popa
test
push
ins
popa
push
das
xor
mov
scas
adc
dec
cmp
pusha
sti
mov
xchg
push
xor
mov
cmps
cmp
mov
cmps
(bad)
cmps
out
(bad)
xchg
mov
mov
mov
addr16
fisubr
push
sub
jmp
inc
inc
(bad)
(bad)
jmp
inc
push
mov
in
hlt
push
stos
mov
sbb
pop
(bad)
cmp
push
cmp
(bad)
ret
jne
adc
addr16
pusha
sti
lock
jmp
add
iret
sub
pop
mov
or
rol
dec
xchg
shr
sbb
mov
push
sub
mov
arpl
adc
mov
imul
(bad)
ja
into
pop
xchg
jae
fmul
pop
stos
adc
or
push
retf
(bad)
mov
cmp
inc
lods
xchg
lock
aad
retf
mov
int
pop
and
cmpxchg
push
mov
retf
inc
(bad)
jae
add
fisub
mov
add
or
je
aad
inc
xor
(bad)
out
or
inc
retf
stos
pop
aam
sbb
mul
retf
sbb
in
push
or
pop
in
ja
or
in
call
leave
or
test
mov
test
popa
lods
nop
adc
shl
adc
pop
popf
jbe
xchg
sar
loopne
jae
stc
add
sub
mov
frstor
cmp
sbb
add
lods
push
adc
scas
push
mov
mov
leave
pusha
lock
push
aam
scas
dec
jmp
scas
cmp
add
mov
xchg
or
shr
imul
push
add
add
fstp
xchg
push
test
loop
cmps
mov
or
sti
int3
adc
neg
mov
ja
push
or
repz
mov
gs
je
or
jne
outs
or
lods
jbe
inc
push
xchg
mov
xor
sbb
adc
popf
or
frstor
mov
pop
loop
retf
in
nop
les
add
lods
jp
xchg
sbb
mov
pop
and
mov
test
imul
push
cmp
and
in
mov
mov
dec
(bad)
inc
mov
sbb
xchg
xchg
repnz
popf
mov
cmps
pop
je
mov
push
mov
sub
rcr
inc
ret
ret
push
sbb
jecxz
cs
ins
out
jnp
(bad)
loopne
inc
dec
loop
clc
and
fdiv
call
sub
dec
add
inc
movs
sub
call
push
xchg
jge
push
fs
sub
stos
js
jno
or
pusha
mov
out
fldenv
jns
dec
jle
xchg
clc
rcl
fwait
mov
enter
int3
jle
scas
fsubr
cmc
xchg
pop
out
ror
test
idiv
pop
ficomp
ret
pop
cmps
(bad)
inc
mov
shl
add
or
mov
xchg
and
adc
dec
jmp
mov
(bad)
mov
cmps
(bad)
mul
fwait
arpl
xor
jno
pop
les
mov
jl
jl
and
sub
or
dec
fs
call
outs
fwait
inc
sbb
and
jnp
mov
rcr
leave
cwde
ja
adc
enter
mov
pop
xchg
arpl
lea
push
jmp
das
add
and
scas
fsub
sub
push
ss
(bad)
mov
into
call
sub
dec
shl
out
ds
lods
xor
and
dec
in
sahf
and
fidiv
cmp
mov
mov
cmp
pop
addr16
dec
jecxz
out
fadd
or
ins
add
xor
mov
jl
test
pop
frstor
mov
mov
mov
mov
out
sti
jle
add
jge
shl
arpl
pushf
cmp
mov
jp
add
(bad)
cmp
mov
mov
pop
ror
xchg
pop
aaa
xor
xor
movs
adc
add
cmps
retf
cmc
mov
jle
xchg
std
sbb
dec
push
ffreep
inc
mov
adc
sub
test
push
jge
jmp
jne
mov
mov
mov
loope
dec
and
cmp
sahf
shl
loope
ret
es
xchg
scas
inc
cld
rcr
xchg
mov
jne
pop
jmp
lods
(bad)
rep
popa
fdiv
xchg
mov
imul
lds
call
and
mov
sbb
loop
pop
sti
ficom
cmp
mov
jae
iret
or
lods
jo
mov
ror
pushf
sub
mov
sbb
fwait
cdq
in
inc
pushf
xor
cmp
jl
fwait
cmp
imul
lods
loop
stos
push
jb
repnz
xchg
leave
sbb
dec
and
mov
daa
push
outs
pop
mov
shl
mov
mov
movs
push
pop
(bad)
fs
(bad)
dec
xchg
pop
jae
push
out
fst
sahf
push
jns
inc
jp
xor
dec
addr16
jo
mov
jmp
push
jmp
aam
xor
mov
(bad)
aaa
xchg
jle
leave
fnstsw
xchg
add
sbb
mov
or
pop
(bad)
outs
push
imul
stc
and
or
or
mov
sub
call
fisttp
mov
xor
fldcw
pop
sub
mov
mov
js
pusha
cld
ret
in
inc
pop
add
xor
push
jl
xchg
std
sub
jne
imul
(bad)
mov
inc
pop
movs
jl
xchg
test
sub
mov
pop
xor
jp
out
addr16
mov
push
jmp
add
dec
dec
ins
sbb
std
aaa
inc
int
shl
fisubr
mul
jg
pop
repz
pop
cmp
jge
adc
xor
fsub
dec
jbe
push
movs
out
in
stc
in
in
sbb
or
dec
das
mov
mov
fisubr
out
xor
in
cld
xchg
cld
jge
sbb
and
test
xchg
loope
repz
xlat
or
gs
mov
or
test
push
mov
(bad)
jecxz
pop
jo
jae
dec
push
cmp
cwde
xor
xchg
jmp
sti
mov
mov
jbe
or
xchg
aaa
loopne
xor
out
ret
js
mov
ja
fisubr
and
out
aad
ins
xor
cdq
cmps
pusha
cmp
addr16
xor
pop
mov
pop
mov
ret
xchg
push
and
xor
sub
xchg
outs
leave
popa
loopne
jl
pop
mov
mov
icebp
stos
push
and
popf
iret
adc
mov
xor
call
fistp
adc
fs
inc
(bad)
mov
fsub
cdq
inc
call
xor
imul
or
inc
inc
ss
jbe
sub
div
jle
fwait
xor
add
dec
cmp
out
sub
minps
and
test
sub
jno
jecxz
fstp
sub
nop
ficom
aam
fisub
add
imul
in
sar
jle
ss
sub
fst
aad
jns
jmp
stos
lods
sbb
cmps
mov
pop
lods
add
mov
fdivr
fiadd
mov
sub
sti
cmps
cwde
mov
test
popf
mov
pop
adc
pop
jbe
xchg
lds
add
and
ret
mov
cmp
inc
shl
inc
nop
and
in
cld
das
dec
push
adc
push
xchg
aam
cmc
sub
mov
or
push
inc
out
icebp
fcom
arpl
cwde
gs
addr16
push
movs
jno
cs
and
call
retf
sbb
bound
movs
pop
mov
push
push
or
(bad)
jno
adc
je
(bad)
cmp
add
mov
les
sbb
sahf
mov
iret
pushf
jge
rcl
pushf
xlat
mov
ins
jne
xor
in
jbe
js
or
addr16
ret
and
loopne
ins
iret
mov
in
ins
fwait
std
add
imul
inc
add
jg
jno
mov
fxch
or
loope
cmp
sub
and
mov
jp
int3
ret
shl
adc
not
in
in
pusha
and
jns
cwde
out
or
retfw
adc
mov
pop
cmp
inc
lods
adc
pusha
ins
call
jb
pop
aad
mov
add
or
popf
out
inc
fdivr
int3
xor
dec
jno
push
aam
or
hlt
out
sti
sbb
ins
cmc
and
pushf
xchg
call
lahf
add
out
cs
pushf
xor
jl
xchg
mov
cmp
ja
test
cmp
pop
mov
mov
push
cmp
push
sub
out
adc
sbb
or
pop
lds
ss
repz
add
xlat
inc
or
cdq
sub
cmps
push
jmp
jmp
cmp
imul
mov
mov
xor
and
push
ss
sbb
(bad)
jno
adc
loop
xor
adc
jns
movs
add
xor
icebp
sbb
dec
fs
xor
int3
mov
xchg
mov
cdq
dec
out
mov
test
mov
pop
inc
sub
pop
cs
push
dec
adc
outs
gs
cli
sbb
cmp
inc
leave
lahf
mov
mov
sbb
xchg
adc
push
adc
cli
mov
sahf
leave
repnz
inc
cmp
ins
fld
inc
inc
sub
push
call
fsubr
jge
fwait
arpl
mov
inc
in
jo
test
jecxz
retf
or
dec
test
mov
aas
fdiv
test
daa
mov
rcr
lea
or
adc
xor
jno
aas
mov
push
push
jge
in
lock
lea
ja
(bad)
std
ret
dec
sbb
mov
scas
mov
ret
mov
mov
push
xor
or
inc
cmp
inc
sbb
(bad)
pminsw
sahf
mov
clc
mov
out
pop
jne
js
mov
dec
push
sub
and
xlat
sub
or
fmulp
push
sbb
push
stos
in
scas
jecxz
xchg
jno
sub
adc
xchg
cmp
pop
in
push
fnsave
ins
inc
xlat
repz
je
pusha
leave
ret
mov
pop
jns
push
cmp
or
jb
jmp
pop
js
mov
scas
popa
out
sti
outs
(bad)
pop
stos
imul
std
pop
movs
sub
and
xchg
and
push
jle
sbb
jnp
sbb
ficom
data16
jmp
sub
rol
pop
jno
scas
loopne
and
dec
ins
xchg
pop
fs
pop
(bad)
loope
push
es
mov
xchg
imul
into
dec
xchg
pop
fcmovbe
inc
or
pushf
dec
push
jge
(bad)
mov
call
movs
retf
mov
fild
add
(bad)
or
or
fs
fist
mov
xor
lock
push
pushf
stos
sub
aad
(bad)
sub
fdivr
out
inc
outs
push
push
add
sub
repnz
cs
cmp
in
pop
cld
out
inc
xor
stos
mov
mov
jnp
retf
sbb
pusha
test
jmp
mov
pop
mov
jo
outs
icebp
inc
fidivr
xor
cmp
inc
clc
mov
mov
push
std
xor
and
cwde
fild
inc
mov
xlat
dec
cmps
or
mov
lods
add
inc
(bad)
dec
repnz
(bad)
mov
addr16
sbb
push
(bad)
hlt
sbb
mov
mov
adc
movs
repz
adc
or
scas
loopne
outs
cld
push
sbb
push
mov
(bad)
sbb
gs
dec
fs
idiv
fmul
jmp
xchg
out
sahf
icebp
push
adc
sbb
addr16
std
push
sti
sub
push
lahf
sub
(bad)
adc
std
test
jns
fdiv
icebp
jle
sbb
jbe
adc
lea
(bad)
mov
jecxz
test
xchg
mov
js
cmps
sub
(bad)
out
int3
ins
or
mov
movs
bound
push
imul
add
movs
rol
jno
jle
cmp
mov
ror
mov
mov
dec
cwde
(bad)
out
ret
inc
pop
out
adc
sti
xor
jg
int3
loopne
outs
in
sub
and
push
xchg
out
mov
cmp
fldcw
int
mov
mov
jae
adc
xchg
push
inc
sub
out
out
scas
pop
aad
mov
loope
push
popf
mov
fsubr
add
sbb
loopne
adc
mov
jg
mov
add
aas
icebp
inc
dec
fwait
or
mov
lods
aam
push
xchg
xchg
cmp
aaa
mov
inc
mov
pop
xor
push
mov
arpl
pop
jp
or
mul
adc
adc
shl
push
adc
jmp
xchg
iret
inc
(bad)
and
xor
(bad)
push
cmp
loopne
fadd
and
pop
xchg
in
fistp
loop
outs
jae
sbb
repnz
cmp
jo
dec
cli
dec
aaa
fwait
mov
xor
out
adc
adc
push
(bad)
std
enter
jmp
das
push
out
mov
out
dec
ja
scas
mov
cmp
xor
xor
mov
mov
movs
sahf
cmps
das
push
inc
fisttp
pushf
mov
xchg
call
sahf
cmp
rcl
mov
xlat
sbb
sahf
shl
sti
jmp
pop
jne
rcr
inc
mov
jae
fadd
leave
movs
pop
mov
or
lahf
sbb
hlt
jl
sub
add
xor
aas
sub
in
pop
sbb
cdq
and
fndisi(8087
lock
mov
imul
addr16
jge
fwait
lea
in
mov
jae
pop
pop
and
mov
inc
aad
imul
and
cs
out
push
outs
push
pop
dec
clc
mov
ret
xor
jmp
(bad)
push
adc
sub
sub
adc
int3
bound
cmp
iret
add
retf
jnp
xor
dec
ret
data16
imul
push
pop
push
mov
(bad)
(bad)
pop
dec
call
mov
lods
add
and
xor
jo
outs
mov
push
sbb
mov
mov
cmp
scas
nop
jae
cwde
and
dec
inc
xor
dec
out
les
lock
sbb
out
jbe
sbb
jns
(bad)
mov
and
out
stc
daa
pop
leave
xor
jb
sbb
or
mov
aaa
mov
popf
xor
stos
shl
inc
push
inc
dec
outs
jbe
es
das
mov
or
push
or
adc
cmc
in
cmps
pop
pusha
mov
ficom
fldcw
pop
aad
add
mov
adc
adc
mov
push
stc
out
lahf
out
push
hlt
jns
inc
stc
sub
jecxz
cmp
iret
sub
and
lock
mov
in
int3
fnsave
(bad)
xchg
jg
mul
fiadd
inc
sub
mov
xchg
cdq
or
call
jb
cdq
inc
push
ds
add
ret
mov
and
lods
pop
imul
jmp
(bad)
push
xchg
dec
movs
std
push
jb
add
enter
js
ins
int3
test
sbb
mov
xor
xchg
or
ss
test
pop
adc
aas
imul
dec
adc
xor
out
dec
jne
jl
inc
ret
or
bound
add
sbb
fsubr
xchg
jp
mov
fucomp
adc
jp
js
jl
retf
int3
mov
cwde
icebp
test
call
rcr
add
jne
mov
in
xchg
push
(bad)
sub
mov
out
aas
enter
adc
icebp
icebp
xor
adc
dec
hlt
xor
adc
fxch
dec
in
in
pop
xlat
dec
sbb
cmps
in
das
fnstcw
das
cmp
and
cld
stos
pop
sub
fcmove
mov
and
dec
xchg
or
mov
das
pop
fsub
lods
out
xor
pop
mov
mov
pop
cdq
adc
js
push
pop
push
push
std
xchg
mov
mov
in
aad
mov
in
in
mov
xor
mov
mov
(bad)
nop
je
pop
jle
mov
lea
sub
mov
retf
into
cmc
mov
push
(bad)
int
and
in
push
imul
adc
stc
(bad)
imul
mov
retf
xchg
xor
jl
mov
push
add
and
jns
jecxz
in
jp
scas
retf
and
les
sub
cmp
push
scas
xchg
mov
out
in
push
lods
jbe
les
mov
push
mov
mov
xchg
and
xchg
outs
jg
xchg
nop
sahf
push
(bad)
pop
xor
sar
sahf
stos
jns
and
dec
adc
mov
outs
pop
add
push
lahf
test
loop
sbb
inc
fidiv
in
ja
stos
mov
sbb
jecxz
and
mov
mov
rcl
mov
mov
loop
inc
imul
ins
imul
dec
int3
inc
ret
xor
rol
jle
xchg
and
push
dec
pop
xchg
test
mov
sub
xlat
adc
cmps
jp
jnp
dec
dec
mov
xor
cmp
pop
mov
mov
sbb
sbb
(bad)
jmp
mov
std
les
cmp
in
mov
mov
pop
les
lahf
adc
mov
dec
or
jg
and
add
push
cmp
sub
push
mov
jbe
push
xor
das
lea
cmps
movs
inc
(bad)
jae
xchg
sub
adc
push
pop
pop
inc
and
std
scas
mov
jge
xlat
and
popa
xchg
in
xchg
shl
add
pop
pop
psrlw
add
cmc
cwde
mov
lods
lods
or
jecxz
or
and
xchg
mov
call
inc
dec
dec
sbb
mov
jl
jmp
inc
adc
adc
or
push
add
or
sub
and
cs
pop
push
mov
gs
inc
and
and
mov
xchg
inc
je
push
retf
mov
in
(bad)
fsincos
mov
popa
cmp
pushf
inc
pop
sbb
pop
(bad)
cs
jg
sbb
lock
popf
xchg
sub
add
xchg
test
fiadd
ds
daa
in
mov
pop
fwait
push
pop
mov
xlat
jl
daa
push
les
sbb
push
jp
(bad)
jmp
sub
imul
jbe
mov
inc
jle
inc
cmp
mov
or
pop
xchg
imul
bound
xor
imul
lock
xlat
push
retf
inc
cmps
adc
fisubr
out
jge
sbb
adc
mov
and
(bad)
ins
sub
pop
mov
mov
fld
sbb
xchg
push
cld
(bad)
inc
add
repnz
push
lea
fwait
std
cmp
call
pop
mov
imul
jo
call
lods
outs
mov
push
fcomp
jp
xchg
sub
sbb
stc
jne
sbb
lods
ror
data16
mov
scas
(bad)
pushf
cmp
jns
pop
ret
dec
sbb
push
cmp
and
inc
sub
into
fstp
shl
jbe
jno
fidiv
aam
not
sbb
or
push
jo
fist
fs
aaa
push
ins
adc
iret
mov
stos
addr16
jns
dec
adc
mov
movsx
cmp
xor
add
pushf
fwait
pop
std
mov
sti
fwait
ja
push
mov
pop
push
frstor
mov
sub
loope
movs
or
mov
pop
dec
mov
adc
jl
lods
adc
mov
sub
push
mov
mov
fbstp
pavgw
adc
into
push
arpl
iret
(bad)
in
push
adc
or
fwait
jecxz
mov
clc
inc
pop
dec
in
not
retf
cwde
and
loop
cmp
ins
and
(bad)
mov
cld
pop
jle
fsubr
sbb
je
push
pop
test
pop
mov
mov
sbb
and
inc
mov
lods
jl
rol
xor
pop
je
pop
(bad)
pop
(bad)
xchg
dec
jbe
mov
jnp
pop
daa
mov
(bad)
push
rcl
fsub
pushf
movs
movs
inc
aaa
mov
int
inc
mov
cmp
out
jmp
mov
sahf
adc
out
fisttp
mov
arpl
bound
shl
stos
adc
xor
pop
inc
mov
dec
pop
aas
jle
aas
movs
ror
gs
movs
sbb
sahf
push
nop
cwde
gs
mov
fidivr
adc
fnstsw
mov
daa
or
inc
push
and
enter
test
jae
jl
jecxz
fsub
or
mov
and
add
hlt
repnz
fidiv
aad
add
jge
mov
fist
mov
xchg
sub
sbb
dec
fnstsw
sub
pop
cwde
mov
push
rcl
sub
iret
push
int
jns
pop
inc
rcr
call
movs
adc
popf
push
pop
or
sbb
test
add
jo
lods
jmp
pusha
aas
push
lock
ins
fstp
sar
add
out
xor
aas
sub
push
jge
mov
xor
outs
inc
rol
fisubr
outs
mov
or
jo
pop
int
movs
mov
lahf
push
fwait
pop
(bad)
idiv
in
shl
and
mov
inc
es
movs
sbb
inc
inc
xchg
xlat
or
mov
cmp
add
lahf
push
retf
cmp
jecxz
dec
jl
imul
mov
xchg
sbb
(bad)
xor
in
lahf
and
and
dec
popa
dec
add
adc
not
jmp
pop
inc
mov
jg
and
jp
xor
stc
cwde
sub
int
push
jnp
dec
and
xchg
cmp
mov
rcl
mov
les
fwait
cmp
cwde
ret
jnp
(bad)
popf
push
pop
jmp
std
cmp
icebp
jp
jb
fld
jno
test
imul
outs
jecxz
dec
dec
cld
enter
bound
rcr
inc
and
sub
mov
mov
sub
inc
fdiv
imul
jnp
ds
or
jo
out
and
add
lods
(bad)
inc
stos
xor
leave
test
cld
call
out
inc
movs
(bad)
imul
sub
cmc
stos
dec
xlat
aam
mov
or
aam
nop
sbb
inc
test
xchg
js
test
fld
inc
push
xchg
fwait
dec
mov
jno
mov
mov
jle
adc
xor
inc
xor
call
outs
cmp
pop
pop
xor
pop
in
xor
sbb
jb
push
mov
popf
outs
jg
sub
call
mov
mov
jnp
sahf
jne
pushf
shl
les
xchg
mov
outs
shr
or
sbb
rcl
sar
pop
call
inc
lds
dec
sbb
outs
retf
aas
mov
aaa
popa
call
loop
mov
call
dec
sbb
inc
cwde
push
test
data16
mov
push
popf
in
pop
out
add
mov
mov
xor
dec
mov
mov
jae
cmp
sti
(bad)
call
adc
sbb
ss
adc
lahf
nop
icebp
sub
xor
and
dec
out
std
push
xlat
in
sub
push
hlt
jmp
lds
std
adc
mov
fcmovbe
mov
inc
aas
fadd
aad
and
mov
mov
cmp
imul
mov
pop
shr
jp
sti
push
jl
sub
inc
and
cdq
pusha
imul
xchg
dec
jo
cdq
mov
dec
mov
push
stc
or
sbb
fld
imul
sbb
mov
mov
jnp
ror
mov
pop
mov
mov
out
pop
mov
mov
sbb
jae
(bad)
out
sbb
and
push
into
adc
fidivr
add
xlat
movs
mov
xchg
ins
jnp
pop
jge
inc
cmps
in
push
das
stos
out
popa
test
psubusw
adc
sahf
jg
mov
pushf
cdq
dec
mov
icebp
dec
push
mov
lock
int3
dec
std
fistp
mov
enter
cmp
jmp
adc
leave
sub
ins
das
ret
xchg
mov
jbe
xchg
mov
mov
ret
mov
add
dec
and
push
xchg
cld
iret
lock
jno
in
inc
adc
cmp
sbb
test
jp
dec
das
bnd
cmp
retf
mov
or
mov
jmp
or
aaa
push
shl
jno
adc
mov
xor
imul
sub
call
jmp
in
aaa
cmp
mov
jge
push
jo
sbb
push
dec
dec
hlt
xchg
inc
sub
inc
aaa
leave
pop
out
mov
cmc
xchg
add
cdq
fmul
add
push
lahf
and
clc
pop
rcr
fdiv
je
call
inc
sbb
hlt
int3
ds
dec
test
mov
mov
and
mov
lock
xlat
ss
das
shl
jae
xchg
sar
xor
movs
scas
lods
pushf
mov
pop
mov
js
fs
mov
jg
div
inc
mov
clc
push
ficomp
sbb
push
push
lods
test
inc
scas
jmp
push
and
mov
(bad)
in
inc
mov
jle
mov
test
or
jb
(bad)
ja
sbb
pop
inc
xor
stc
pop
das
dec
out
cwde
mov
mov
jmp
cld
(bad)
jae
dec
test
js
cdq
mov
pushf
call
xor
add
inc
sahf
sbb
or
jno
hlt
dec
outs
ins
repz
pop
inc
ret
cmp
or
mov
dec
mov
dec
arpl
out
fs
enter
repnz
mov
mov
xchg
mov
outs
sub
mov
stos
iret
or
cmp
sbb
out
pop
mov
pop
and
arpl
out
mov
jge
pop
clc
aas
hlt
mov
cwde
mov
mov
daa
xor
add
and
js
mul
lds
xor
outs
jb
pusha
dec
add
rcl
sub
mov
shr
scas
sti
xor
in
inc
outs
fistp
neg
dec
push
fst
jb
call
push
fadd
push
call
xchg
fs
mov
or
and
jns
inc
popf
in
add
lock
pop
int3
mov
and
jnp
xor
mov
push
rol
out
push
das
pop
and
outs
rcr
push
jae
ficom
xor
pop
xchg
imul
xchg
jp
fidivr
aaa
dec
push
test
(bad)
das
xchg
mov
or
in
fdivrp
das
cmp
in
shl
mov
dec
ror
jmp
pushf
jmp
xchg
sub
xor
push
ficomp
je
push
jmp
leave
add
aaa
push
(bad)
sar
call
loope
add
inc
outs
inc
jp
and
adc
mov
pop
fcmove
pop
adc
cs
ds
ins
lahf
dec
shl
lock
sbb
je
xchg
add
hlt
sub
pushf
mov
imul
dec
(bad)
gs
jne
push
in
or
shr
push
repnz
call
and
mov
fcom
lea
aad
in
mov
rcl
gs
inc
sbb
cmp
dec
inc
pop
add
xchg
ret
stc
sbb
pop
inc
into
sub
push
add
rcr
cli
inc
jle
push
jbe
mov
push
hlt
cwde
mov
xchg
call
dec
lods
ret
pop
adc
jle
pop
or
mov
rcl
sbb
jnp
jo
inc
ror
outs
test
adc
and
add
daa
ficomp
(bad)
cmp
add
jle
out
pop
and
and
xor
mov
dec
enter
icebp
je
(bad)
test
mov
repnz
or
push
scas
pop
in
lods
scas
das
test
adc
mov
iret
cs
push
cmp
shl
mov
pop
or
mov
xor
sub
ss
lds
pop
ds
aaa
push
test
out
std
mov
fst
adc
mov
jmp
jb
or
aaa
jb
repz
jecxz
add
pop
pop
or
fist
into
in
sub
nop
inc
adc
cmp
mov
ss
(bad)
cmp
sub
xor
adc
cwde
sub
xor
movs
aas
xchg
inc
daa
pop
ror
mov
js
call
daa
adc
push
(bad)
idiv
inc
jmp
mov
mov
test
cwde
xchg
div
lods
fsub
lods
out
fst
and
pop
cmps
movs
add
(bad)
enter
mov
and
repz
and
and
dec
test
adc
sub
push
inc
mov
xor
xor
pop
jmp
cmp
(bad)
mov
and
pop
pop
mov
xor
push
out
(bad)
int
fwait
mov
movs
jp
xchg
cmp
mov
inc
pop
je
retf
mov
sub
sbb
cmc
(bad)
cmp
pop
ja
mov
adc
mov
jb
pop
jg
test
add
inc
daa
jnp
xor
push
mov
out
xchg
push
inc
push
call
jns
or
xor
mov
push
std
test
mov
push
inc
dec
daa
mov
retf
xor
mov
push
mov
and
push
jae
es
lea
cli
scas
test
push
push
push
jge
inc
ds
xor
sub
xchg
xor
aaa
mov
fimul
add
loope
sub
retf
adc
add
mov
loope
popf
mov
stc
mov
(bad)
cld
jecxz
lahf
(bad)
push
ficomp
leave
ja
or
mov
daa
add
sub
data16
rcr
jg
xor
test
lds
lds
adc
outs
das
fwait
aaa
push
popa
dec
jbe
cmps
jmp
or
xlat
dec
cmc
jo
dec
test
push
sub
aam
jmp
pop
icebp
je
movs
adc
xchg
test
jnp
stc
gs
and
aad
sar
add
mov
sbb
stos
sbb
or
call
mov
into
or
call
sub
add
enter
rol
mov
stos
xchg
mov
inc
outs
sbb
xchg
cmps
mov
dec
sub
aad
push
dec
imul
jnp
dec
xor
stos
adc
pop
pop
ins
lahf
(bad)
loop
pop
out
xor
out
imul
inc
(bad)
pop
and
add
int
retf
jo
dec
retf
add
sbb
(bad)
adc
mov
inc
es
mov
cmp
inc
add
xchg
push
sub
mov
jne
or
or
test
push
out
enter
fcomip
xlat
sbb
ins
add
cli
adc
or
std
sti
mov
out
mov
pop
push
popf
rcr
nop
(bad)
inc
sbb
mov
repnz
cmp
sub
sbb
clc
and
mov
test
and
xchg
mov
loop
or
lahf
(bad)
or
ret
mov
xlat
mov
sar
xor
aas
adc
xchg
mov
mov
ficomp
inc
push
push
xor
fwait
add
push
push
jnp
mov
(bad)
jmp
(bad)
cli
loopne
lods
out
dec
xchg
add
lods
loop
std
icebp
xchg
add
mov
xchg
aad
repnz
sbb
int3
mov
add
inc
mov
add
in
xor
fwait
pushf
jmp
mov
loopne
inc
(bad)
jmp
xor
in
mov
(bad)
adc
movs
scas
(bad)
fdivp
sahf
pop
push
cmp
cmc
xor
mov
cmp
or
sbb
lahf
cmp
jmp
mov
jmp
and
pop
sbb
jmp
jne
rcl
dec
jno
leave
xchg
xchg
shr
fdivr
jbe
mov
sbb
div
inc
mov
add
test
pop
or
iret
fnstenv
and
adc
dec
aaa
xor
add
sub
push
(bad)
pop
mov
jno
push
in
adc
in
imul
push
inc
stc
shrd
into
in
adc
enter
sbb
push
test
fcomp
xor
xchg
test
pop
sub
xor
(bad)
(bad)
xchg
test
iret
movs
lods
and
or
into
les
fnsave
sar
add
push
push
cs
sub
xchg
xlat
pushf
mov
sub
rcl
cmp
cmp
mov
stos
outs
lods
or
rcl
cli
mov
and
fstp
test
adc
sbb
mov
sub
push
pop
add
pop
mov
cmc
jp
ror
fist
daa
jmp
ja
pop
cmp
jo
cmp
push
popf
push
sub
pop
inc
lods
sbb
je
lahf
ds
gs
push
xchg
nop
sub
push
or
stc
lock
sub
das
data16
aaa
dec
shr
adc
adc
mov
mov
or
inc
hlt
mov
xor
ret
jae
and
push
cli
idiv
push
xchg
mov
sti
adc
mov
mov
fsubr
sar
xchg
push
aad
sbb
xchg
pushf
and
jge
adc
fld
call
add
dec
mov
les
push
and
cwde
inc
xor
sub
xchg
jae
mov
or
cmp
cmc
outs
jnp
aaa
sti
push
(bad)
test
fsub
xor
repz
cs
or
mov
shr
pop
cmp
sbb
loope
out
test
push
add
movs
inc
ins
sub
pop
cmp
outs
movs
sub
jbe
mov
sub
pusha
cmc
mov
pushw
push
inc
mov
mov
jg
in
inc
xor
popa
lods
data16
add
pop
jp
lods
shl
ror
add
popf
out
mov
inc
and
and
xchg
dec
imul
xor
dec
cs
outs
and
inc
ins
retf
xchg
jno
push
(bad)
popf
mov
sub
cli
sbb
add
out
inc
ss
push
cli
in
or
jae
mov
sbb
sub
jo
pop
sbb
sub
pop
retf
loop
fistp
xor
or
jp
or
jecxz
in
mov
outs
add
pop
ja
pop
js
jbe
lahf
xor
in
or
in
sbb
jb
sahf
ins
add
(bad)
fprem
or
into
faddp
out
jmp
popa
je
call
out
add
dec
(bad)
dec
fwait
and
leave
sbb
sbb
or
mov
mov
gs
mul
(bad)
mov
int3
aas
sub
inc
nop
scas
fwait
dec
lods
aaa
push
clc
call
int
cmc
mov
inc
ds
(bad)
xchg
xchg
dec
out
dec
sahf
cdq
dec
xchg
pop
fist
mov
or
xlat
or
ds
out
leave
dec
lods
push
loopne
push
pop
popa
arpl
test
mov
pop
(bad)
aam
(bad)
icebp
arpl
ins
adc
movs
out
xlat
cmp
cdq
adc
clc
movs
or
movs
lock
cmp
out
jbe
sahf
iret
inc
call
push
mov
nop
adc
push
dec
pop
mov
adc
xchg
mov
std
pop
jmp
xchg
test
or
imul
out
and
or
cdq
jbe
cmp
in
xchg
jp
or
(bad)
jecxz
int
icebp
sahf
call
add
push
je
es
and
xor
jp
fcom
push
jne
fwait
retf
mov
scas
jbe
sub
pop
movs
in
fsubr
push
in
gs
pusha
adc
sub
add
retf
sub
daa
push
test
mov
jg
push
mov
fcomp
pop
scas
jbe
mov
jb
push
lahf
nop
jge
or
loop
sub
pop
cmovae
push
or
fdivr
push
mov
psubusw
pop
and
enter
jo
adc
or
frstor
nop
daa
push
bound
pop
int3
add
sub
push
jg
sbb
popa
cmc
mov
adc
neg
sbb
mov
pop
pop
mov
lock
outs
mov
or
dec
popf
bnd
mov
pop
and
add
hlt
outs
adc
jmp
lods
pop
jle
push
jno
jg
jmp
cmp
fadd
aad
sbb
sbb
xor
ret
mov
fwait
sub
mov
pop
cwde
aam
scas
push
movs
lods
movs
jp
pop
jns
iret
lds
add
push
not
rcr
xchg
mov
mov
mov
lahf
jle
inc
icebp
add
xor
jmp
ins
sub
push
mov
mov
cmp
jmp
fnstsw
fmul
ds
stos
or
pop
and
dec
pop
jb
pushf
mov
xor
icebp
and
sbb
inc
jae
mov
fmul
mov
(bad)
pop
(bad)
int3
gs
clc
jl
(bad)
(bad)
adc
pushf
xchg
adc
(bad)
int
retf
arpl
dec
jge
call
xor
sbb
fst
push
lahf
cmp
ds
jl
xchg
repz
push
call
das
call
call
js
ins
popa
mov
sub
pop
jno
sbb
push
cld
push
aad
aaa
sbb
out
pop
lods
clc
mov
retf
mov
or
push
cwde
movs
pop
adc
popa
sub
cwde
ja
in
adc
add
mov
mul
std
sub
test
fsub
xchg
sahf
pusha
mov
in
dec
mov
out
in
mov
jne
adc
pop
xchg
ror
push
jmp
and
outs
shl
test
mov
aaa
mov
inc
test
jp
cmp
daa
mov
int
xor
iret
pushf
sbb
push
mov
stos
cmp
xor
push
xchg
xlat
test
mov
jecxz
mov
cmc
lahf
xchg
mov
dec
sbb
jg
ins
inc
retf
repnz
pop
test
mov
dec
mov
jbe
jbe
nop
(bad)
das
cmp
and
dec
xor
adc
dec
pop
mov
adc
bound
aam
cmps
bound
add
jmp
fcom
fstp
mov
pop
out
aam
xchg
dec
data16
cmc
adc
sbb
push
test
inc
dec
cli
mov
pcmpeqw
adc
test
loopne
push
int3
sub
fadd
cmp
inc
or
xor
xor
inc
sbb
or
push
jmp
sti
pop
xlat
popa
xchg
xchg
cdq
fisub
jl
sbb
imul
je
dec
cdq
outs
inc
jg
dec
adc
repnz
pop
in
fidivr
inc
sub
cmp
js
adc
js
xor
sub
bswap
xchg
or
jns
dec
das
push
sub
mov
xchg
retf
xor
das
adc
xchg
rcr
dec
mov
mov
inc
cmc
lods
adc
lds
pop
(bad)
ror
ins
mov
nop
add
add
jle
inc
popa
bound
ja
mov
and
inc
ins
out
add
je
sbb
in
retf
(bad)
inc
inc
mov
aas
mov
test
mov
push
add
sub
and
out
lds
jge
loopne
xchg
push
mov
xor
add
sub
inc
inc
iret
cmp
out
ror
loop
mov
ffreep
xor
lea
push
lds
mov
fisttp
sbb
test
movs
pop
fs
xor
sub
popf
jmp
jg
std
fistp
test
clc
mov
xchg
cmp
pop
retf
fwait
jne
jb
jnp
jmp
shl
sbb
push
shl
out
out
outs
lea
inc
dec
ins
lock
ss
lds
mov
test
int
inc
call
xchg
ins
push
test
xchg
dec
loope
xchg
shl
dec
adc
in
dec
call
pop
push
dec
push
scas
scas
push
mov
cmp
mov
(bad)
hlt
mov
(bad)
mov
sti
jb
lea
adc
lds
stc
and
push
pop
out
mov
mov
jg
daa
(bad)
out
psubq
xchg
ficom
lea
cmp
js
in
cmp
dec
jle
imul
adc
inc
jne
sub
xchg
aad
out
ss
push
push
cmp
scas
lea
cs
or
jne
mov
popf
cmp
sbb
call
or
loopne
mov
xor
data16
mov
and
lods
sub
repnz
(bad)
dec
popa
fdecstp
mov
cmps
adc
mov
add
neg
mov
sbb
push
add
or
xor
add
es
jge
int
pusha
jo
std
out
or
stos
xchg
xlat
pop
mov
pop
call
clc
or
adc
pop
div
mov
push
xor
mov
cmps
push
ins
pop
daa
inc
mov
jmp
xor
movs
vpackssdw
cmp
sub
add
cs
rcl
cmp
movs
mov
cli
bound
call
push
dec
sbb
retf
jnp
and
outs
push
mov
or
adc
sti
pop
cmps
movs
in
mov
and
stos
call
in
scas
je
inc
ret
push
(bad)
(bad)
sub
push
and
add
enter
pop
mov
mov
push
sti
mul
sub
inc
shr
test
jno
pushf
push
mov
xchg
bswap
and
and
pop
jge
in
fdiv
xor
das
mov
and
shr
push
call
pop
or
popf
xor
aaa
add
ror
or
inc
push
xor
stos
mov
xchg
imul
iret
cwde
cmp
adc
xor
xor
and
dec
je
inc
mov
cmc
xlat
sbb
mov
outs
mov
pop
xchg
cmp
lock
jge
jb
fcomip
or
adc
push
out
dec
pop
cmp
outs
mov
popa
iret
mov
call
mov
arpl
add
dec
mov
add
ss
or
and
or
dec
fadd
xor
fld
dec
push
xor
pusha
fist
inc
cmps
mov
test
xchg
push
dec
push
nop
jns
push
cmp
or
add
sub
pop
mov
push
das
xchg
push
shl
mov
fs
pop
dec
pop
sahf
in
ss
es
push
ds
mov
int3
jbe
call
cmp
xchg
loopne
mov
shl
jbe
jno
jno
fist
sub
out
inc
xchg
stc
pop
das
dec
mov
iret
mov
sub
inc
inc
jb
enter
jb
fdiv
dec
enter
cmps
dec
loopne
call
mov
pavgw
lds
aam
outs
mov
ret
je
mov
jne
int
xchg
ja
mov
outs
push
call
cmp
mov
pusha
cs
and
jns
ret
xchg
or
out
daa
adc
sar
loope
jle
add
mov
popf
mov
xchg
push
daa
mov
ss
dec
ja
jne
les
out
ins
push
push
(bad)
pop
bound
or
ror
xchg
mov
pop
push
movs
loop
sub
lock
in
jp
aam
aam
ds
cwde
xchg
rcl
in
mov
lahf
aas
and
jl
jmp
gs
dec
mov
lea
jl
jge
mov
cwde
int
(bad)
cld
xchg
cmc
sahf
jecxz
lea
and
leave
gs
fcmovnb
or
popf
and
cmps
jmp
scas
scas
mov
sub
les
ja
and
pushf
lea
add
loope
jb
push
mov
fistp
stos
add
adc
push
frstor
stc
cwde
test
mov
icebp
add
mov
adc
sbb
leave
fcomi
jno
or
lahf
xor
cld
adc
adc
mov
and
cld
test
sub
out
inc
jmp
dec
imul
iret
sbb
sti
sbb
(bad)
fisubr
inc
cmps
call
fild
loopne
scas
sub
and
fsub
cmp
xchg
adc
fst
ret
sub
out
sar
rcl
cmp
xchg
adc
sbb
test
enter
mov
add
jle
jl
imul
push
das
sbb
sahf
mov
(bad)
xor
enter
push
jo
sbb
in
cwde
sub
push
push
pop
leave
hlt
out
mov
jbe
leave
aas
sbb
std
dec
loop
clc
mul
iret
or
ret
pushf
inc
ins
arpl
cwde
inc
inc
rol
adc
sub
rcl
cld
jecxz
or
popa
cmp
mov
iret
or
mov
mov
mov
repz
movs
push
cmp
mov
cmp
push
aad
add
sub
cmp
in
call
cmps
ret
xor
push
adc
sbb
mov
sbb
movs
in
inc
add
cmp
sbb
push
and
mov
jns
mov
mov
loopne
mov
in
icebp
jge
scas
gs
adc
in
jge
dec
pop
pushf
in
cwde
dec
jp
push
pop
pop
mov
sub
sub
movs
add
test
mov
(bad)
cli
popa
daa
jmp
ss
mov
retf
jbe
push
or
or
sub
int
ror
dec
ret
aam
(bad)
sar
dec
das
in
push
aam
cmp
add
sub
gs
sub
in
pop
add
sub
leave
cmp
aaa
inc
(bad)
sub
cmp
and
aam
inc
outs
jmp
sbb
push
lea
xor
mov
ins
aam
jo
call
sbb
lods
outs
push
pop
adc
pop
jg
xlat
loope
ret
inc
push
xchg
fist
xor
in
out
and
ret
and
out
sub
and
and
aam
dec
test
or
mov
mov
inc
jl
jae
(bad)
xlat
ss
or
add
popa
lods
xchg
push
mov
outs
push
pop
sahf
shl
ds
or
or
js
push
jae
xchg
imul
lock
nop
cmp
mov
mov
pop
aaa
add
in
mov
test
ja
sub
mov
into
(bad)
fistp
dec
dec
(bad)
jp
dec
aaa
mov
repz
outs
(bad)
and
mov
xor
inc
pop
imul
inc
mov
shr
xchg
lods
call
xor
sbb
retf
sbb
fimul
les
sti
ret
add
loop
xor
in
fdivp
fisubr
fbstp
push
xor
(bad)
addr16
pushf
retfw
push
je
adc
mov
popf
xor
jns
jmp
mov
in
iret
pusha
cmp
lahf
mov
push
mov
ror
mov
loope
call
mov
adc
pop
shr
jno
mov
lds
test
sbb
pop
cld
push
ret
ss
xor
fisubr
and
push
popf
mov
or
pop
adc
cmp
xor
sub
mov
mov
(bad)
jmp
push
inc
inc
cld
pop
fsubr
loope
imul
mov
aaa
xor
pop
loopne
xchg
pop
aas
mov
cs
repnz
or
popf
push
pop
or
jge
xlat
mov
add
jns
(bad)
mov
jae
sbb
pop
inc
sub
sti
cld
xchg
data16
jnp
(bad)
fiadd
add
cld
(bad)
xchg
mov
push
loopne
(bad)
ficomp
lods
jle
loopne
and
add
enter
jp
lds
xchg
and
adc
inc
push
mov
cmps
jecxz
cmp
scas
jb
cmp
retf
sub
fild
shl
daa
push
dec
repz
out
das
adc
movs
aas
add
sbb
das
cmps
(bad)
mov
(bad)
cli
jle
adc
stos
sbb
jbe
jb
fbld
ror
cld
shl
add
pop
sub
jmp
loop
push
repz
sbb
cmp
cmp
and
std
mov
lahf
lock
pop
hlt
test
popf
xchg
out
pusha
imul
push
into
lods
and
mov
inc
pop
xchg
mov
ret
xchg
or
sub
adc
fs
cmps
pop
outs
retfw
cmps
shl
ins
xor
loop
push
leave
jl
sbb
out
outs
jmp
cs
inc
mov
cmp
xchg
test
jmp
aaa
outs
sbb
call
cmp
cmp
sub
dec
mov
pop
or
stc
shl
push
add
and
xor
retf
jmp
cli
pop
mov
loop
xchg
(bad)
xchg
pop
push
xchg
pop
sub
leave
pop
adc
inc
inc
iret
mov
pusha
js
push
jae
test
les
sbb
mov
add
add
pop
dec
sbb
std
adc
jne
mov
add
jns
stos
xchg
mov
aaa
out
xor
sahf
and
(bad)
aad
pop
mov
dec
lods
ja
cdq
loop
sub
xchg
ja
mov
mov
(bad)
fisttp
leave
ss
icebp
push
pop
loop
cli
cmps
jmp
sbb
cmp
scas
push
fimul
aad
push
sbb
arpl
cmc
inc
push
push
outs
or
jmp
adc
inc
jo
(bad)
fs
mov
es
arpl
into
arpl
pop
pop
pop
fild
xchg
sub
xchg
sahf
fimul
push
mov
fcomp
(bad)
cdq
xchg
cmp
or
jp
fadd
push
add
mov
test
jmp
and
xlat
adc
or
cmps
push
xlat
ret
pop
push
pop
div
int3
or
sbb
in
loope
sbb
mov
inc
push
pushf
add
jbe
rol
shl
add
leave
aaa
cmp
pusha
jae
lahf
inc
inc
retf
add
pop
mov
test
xor
ret
cmp
sbb
mov
push
or
and
pop
popf
lods
mov
add
sub
mov
(bad)
das
dec
fdiv
sub
dec
dec
xchg
addr16
xchg
jnp
sub
and
cmp
pop
das
(bad)
int3
inc
jne
inc
fisttp
gs
(bad)
retf
or
(bad)
(bad)
js
test
xlat
jmp
loop
into
jae
dec
xchg
mov
inc
or
or
ret
dec
leave
mov
(bad)
aad
xchg
cli
cli
push
xchg
inc
mov
xor
push
les
fmul
mov
test
ins
xor
adc
mov
cmpxchg
mov
sub
out
inc
mov
xchg
jmp
adc
repnz
cmp
shr
test
pop
lods
add
pop
aad
icebp
cmp
push
jg
aad
jb
sub
jp
and
mov
loopne
pop
pop
mov
mov
int
mov
cmp
fist
xchg
xor
je
cs
stc
mov
dec
arpl
movs
push
sbb
aaa
push
std
pop
fistp
out
shl
scas
ins
mov
popa
out
loope
adc
daa
outs
test
test
and
adc
jp
popa
ror
dec
pop
lds
sub
ret
inc
or
addr16
pusha
mov
adc
(bad)
cmp
and
dec
bound
stc
pop
(bad)
(bad)
ins
mov
cmp
pop
inc
outs
scas
push
mov
int3
sbb
push
fistp
aad
cmp
pop
outs
adc
test
ds
cmp
fimul
push
cwde
push
or
push
push
in
sub
out
scas
fsubr
xchg
(bad)
pop
push
cmp
les
pop
ret
out
jno
cs
push
scas
or
outs
pushf
mov
out
es
jns
out
adc
div
into
ficom
push
sub
addr16
out
or
sbb
stos
xchg
ret
pop
nop
xor
mov
in
mov
or
daa
aaa
nop
add
inc
pop
push
mov
sbb
scas
add
and
sbb
icebp
dec
pop
push
cmp
push
push
daa
mov
dec
aad
sbb
loop
das
inc
xor
push
out
cli
push
std
cmp
movs
fsubr
jb
push
mov
jno
aas
test
inc
les
call
and
xor
test
add
add
mov
fidivr
or
bsf
lea
add
xor
(bad)
sbb
cmps
push
mov
sub
add
and
cwde
add
mov
repnz
add
lock
add
pop
mov
mov
jne
sar
dec
mov
xlat
(bad)
hlt
and
cmps
ds
sbb
ins
inc
bound
loop
(bad)
outs
aam
xor
inc
clc
and
xchg
inc
(bad)
mov
push
or
sbb
and
mov
das
sub
call
cmp
xchg
iret
add
fdivr
or
pop
xor
push
pop
pop
outs
adc
std
pop
in
jg
xchg
(bad)
mov
arpl
xor
fs
stos
les
leave
mov
xchg
xor
dec
je
dec
adc
loopne
mov
or
retf
scas
mov
imul
pop
sbb
loop
xchg
scas
and
add
lahf
add
es
mov
js
cmp
inc
pusha
sbb
adc
stos
mov
ret
in
pushf
jg
adc
add
repnz
mov
sub
repz
cmp
xchg
outs
add
dec
inc
push
rol
sahf
fadd
adc
dec
enter
mov
push
jle
dec
scas
scas
pop
je
cmp
push
std
xchg
leave
cmps
mov
sub
fild
lahf
jg
xchg
push
cmp
sti
call
push
mov
iret
pop
ficomp
mov
loopne
movs
nop
jge
dec
repz
test
jge
inc
dec
mov
mov
icebp
sahf
loope
mov
popf
clc
fldcw
ret
mov
pop
enter
movs
int3
sahf
fwait
(bad)
retf
xchg
mov
pop
in
or
mov
in
inc
dec
push
ret
adc
shl
cmps
(bad)
loopne
jp
rcr
mov
fnstcw
pop
sbb
mov
(bad)
dec
jae
dec
mul
cld
sub
sub
push
inc
pop
repnz
sti
adc
pop
rcr
dec
lods
popa
mov
(bad)
dec
jg
pop
or
pop
jmp
mov
test
pop
pop
bts
mov
rol
test
mov
fsub
lock
fldcw
js
in
xchg
cmp
cdq
mov
es
jle
or
dec
arpl
loop
push
sbb
xor
fimul
adc
cmc
pop
dec
cwde
rcl
fiadd
(bad)
jp
(bad)
xchg
cmps
es
push
jmp
fyl2xp1
ror
inc
rcl
test
xchg
aaa
push
in
and
stos
out
call
inc
out
sub
movs
ins
sub
inc
jl
mov
mov
ja
pop
or
js
ret
iret
mov
pop
inc
jl
jl
frstor
ds
(bad)
sbb
iret
push
and
retf
sahf
inc
mov
mov
dec
sub
mov
mov
xchg
inc
jno
jns
(bad)
mov
es
add
pop
sbb
fnstenv
jbe
cmc
sbb
mov
add
movs
dec
fist
xchg
pusha
adc
or
mov
push
pop
psubusw
jno
xchg
or
dec
pop
into
sbb
out
gs
rcl
cmp
adc
sbb
popf
lods
sbb
sbb
push
cmps
outs
repnz
out
xor
inc
dec
int
dec
push
mov
retf
test
sbb
rol
xor
loop
jnp
and
cmps
(bad)
pop
fidivr
mov
cmp
lock
in
mov
add
addr16
push
stos
clc
xchg
imul
(bad)
and
in
cmps
mov
xchg
sub
inc
fild
inc
outs
leave
jmp
mov
mov
std
pop
mov
fist
xchg
cs
mov
xchg
movs
push
add
push
inc
or
lods
jmp
call
cmp
cmp
push
pop
jo
mov
mov
mov
popa
jmp
pop
mov
leave
inc
xchg
retf
xor
cwde
push
inc
xchg
cmp
scas
xchg
(bad)
mov
ss
cmc
push
mov
mov
scas
dec
cmp
out
fwait
ds
jle
dec
rol
add
cmp
lds
imul
add
xchg
(bad)
les
movs
sub
or
cld
fist
dec
xor
xor
repz
fld
push
test
lock
adc
pushf
lds
and
loopne
or
xlat
mov
jbe
adc
push
cmp
mov
cmp
mov
push
cmp
les
inc
add
das
inc
or
cmc
push
jbe
fadd
ins
stos
add
mov
xor
(bad)
std
or
bswap
popf
push
jno
call
xor
xor
jmp
movs
mov
cmp
or
out
jmp
pop
push
dec
xor
jg
adc
repz
inc
sbb
and
loopne
and
xchg
rcl
sbb
cli
es
cli
jmp
dec
popf
push
xchg
jge
ret
jo
pop
cmp
mov
adc
outs
bound
pop
call
dec
mov
mov
cs
dec
out
sub
sbb
add
push
fsubr
pop
pop
jo
sbb
pop
loope
mov
scas
test
aaa
inc
inc
push
push
xchg
stos
cmp
daa
dec
xchg
jno
pop
mov
iret
cmps
cmps
ror
cs
mov
xor
pop
ret
fwait
ret
call
daa
jbe
cld
sbb
out
cmp
sbb
js
mov
sti
icebp
aas
lock
mov
mov
mov
sub
push
adc
cmps
push
repz
adc
jns
pushf
lea
push
shl
mov
and
cmp
xor
mov
mov
test
sub
inc
xchg
fist
aaa
and
lds
test
imul
inc
push
in
adc
dec
pop
jmp
or
imul
stos
mov
dec
addr16
and
fisttp
mov
mov
clc
aas
movs
push
dec
leave
cmp
fldenv
shl
jmp
mov
inc
lds
cwde
mov
in
gs
and
and
jg
popa
test
mov
cmps
jge
or
sahf
or
adc
xchg
sub
out
mov
jne
retf
ss
test
stos
and
scas
ret
mov
aam
(bad)
jle
scas
cli
or
and
sub
sbb
stos
outs
mov
xchg
loopne
repnz
inc
into
mov
rcl
jmp
mov
xchg
mov
sbb
imul
cmovae
ret
inc
sar
sar
push
xchg
rcr
movs
stos
ret
ret
jnp
repnz
outs
stc
jl
ffreep
mov
mov
jecxz
add
adc
rcl
mov
out
shr
adc
shl
movs
add
repnz
xlat
add
mov
mov
imul
mov
push
and
jmp
mov
fiadd
fcmovne
cwde
ret
mov
not
mov
xor
push
rcr
and
or
fiadd
daa
scas
or
loop
clc
aas
pop
imul
or
pop
mov
xor
push
add
dec
xlat
xchg
fiadd
mov
rol
pop
mov
cmp
push
push
jb
mov
adc
jo
inc
mov
icebp
or
jbe
mov
sub
cmps
nop
push
std
movs
popa
or
addps
(bad)
fisubr
scas
add
in
pop
and
or
jmp
pop
mov
push
mov
jne
push
loop
shr
ja
(bad)
not
inc
jmp
pop
lea
xchg
and
movs
add
fmul
xlat
sub
scas
mov
lods
dec
inc
daa
mov
push
cld
or
icebp
cmp
or
inc
mov
je
fisub
call
dec
mov
test
(bad)
xchg
es
pop
push
sbb
ret
test
int3
jge
bound
pop
js
jae
push
ror
xchg
stc
rcr
dec
jmp
mov
aad
das
jne
addr16
or
in
mov
popa
mov
and
mov
cmp
stc
mov
aas
data16
(bad)
push
loop
pop
cwde
fldln2
dec
sbb
mov
push
test
call
shr
repnz
sbb
movs
and
or
mov
sbb
dec
retf
sub
in
sub
fld
loop
jp
std
jb
xlat
sbb
xor
inc
mov
nop
ror
jge
adc
repnz
stos
xor
int3
sub
sahf
pusha
add
mov
pushf
ds
lods
div
icebp
fmul
ret
ss
and
add
mov
fcom
lock
(bad)
test
sub
in
or
popa
push
or
std
jl
jnp
hlt
test
or
sub
ror
mov
lea
call
gs
lahf
repnz
stos
push
dec
jge
cmps
jnp
outs
xchg
je
in
xchg
xlat
es
xrelease
mov
out
sbb
push
stos
iret
out
sahf
jle
push
jg
pop
inc
pop
and
aam
dec
xchg
adc
test
fs
jmp
les
inc
sub
lds
or
mov
stos
in
retf
add
es
sbb
jmp
loopne
dec
imul
sbb
dec
fnsave
push
xor
les
sti
pop
popf
and
mov
repnz
mov
loope
add
dec
mov
les
daa
mov
jp
into
ror
not
cmp
retf
test
rol
lahf
outs
stos
js
int3
(bad)
scas
imul
jl
dec
fst
cli
xor
jb
leave
fisubr
pop
jbe
mov
stc
icebp
int3
sbb
and
push
or
sbb
push
inc
push
mov
call
pop
sbb
push
mov
ins
mov
test
out
sbb
sti
leave
push
or
sub
stos
lahf
pminub
sbb
lds
jp
cmp
js
or
idiv
cmp
fs
mov
pop
xchg
push
retf
jo
jp
and
xchg
out
mov
adc
push
pop
and
scas
pop
aam
mov
retf
loope
push
mov
cwde
push
lock
js
ret
bound
and
je
sub
neg
arpl
or
push
mov
jp
inc
movs
sbb
xchg
rcr
aas
aas
stos
retf
dec
les
fadd
into
and
div
stos
rcl
and
fcomi
ins
xchg
ret
inc
cmp
scas
std
aad
inc
mov
mov
sti
xchg
push
pushf
jg
xchg
xor
imul
aaa
pushf
dec
fcomip
fiadd
push
(bad)
push
dec
call
js
inc
(bad)
clc
into
cwde
test
pop
je
fld
push
mov
iret
mov
out
test
mov
test
mov
sub
or
repz
adc
pop
imul
je
xlat
inc
pusha
call
adc
xor
js
lds
fwait
retf
test
imul
ret
sbb
mov
or
inc
ficom
jnp
push
div
mov
(bad)
pop
frstpm(287
rcr
cmp
inc
mov
push
addr16
out
repnz
sub
call
mov
es
push
cli
fcmovnu
xlat
call
xor
xchg
cmp
pusha
aam
enter
and
xchg
sbb
daa
push
or
pop
inc
inc
aam
(bad)
xchg
add
jge
mov
lds
inc
inc
jge
and
bts
(bad)
push
aas
dec
dec
pop
lahf
sub
mov
mov
in
jg
pop
bound
movs
movs
jmp
retf
push
addr16
and
pop
ins
ror
in
jg
test
(bad)
xor
cmp
push
adc
or
add
lods
js
mov
cdq
hlt
aas
push
cmp
jns
in
push
bound
jg
push
sub
aad
arpl
mov
nop
fadd
pop
and
pop
mov
mov
push
std
(bad)
call
pushf
aas
rol
std
dec
mov
std
jge
ror
xor
out
sub
push
jne
stos
mov
inc
in
out
test
cmps
pop
push
bound
dec
xchg
sub
cmp
into
bnd
adc
lahf
add
mov
pop
shr
adc
adc
adc
aaa
call
js
xchg
inc
adc
xchg
push
neg
push
sbb
mov
fcompp
call
xor
stos
pop
pop
jne
mov
xor
and
add
mov
push
xchg
jp
call
ja
cli
ins
sbb
fidivr
xchg
or
std
test
mov
jmp
adc
addr16
sar
out
mov
mov
or
pop
jl
lea
push
adc
push
stos
popf
ds
(bad)
in
mov
loope
inc
sub
mov
push
arpl
mov
xchg
mov
add
mov
xor
fdivr
leave
loop
in
adc
nop
mov
sub
inc
test
jecxz
dec
std
dec
sbb
xchg
sbb
(bad)
pop
pop
fidiv
bound
cs
mov
(bad)
hlt
fadd
inc
bound
xlat
mov
sbb
mov
fdiv
pop
inc
or
repnz
push
loopne
dec
xchg
sub
sub
adc
(bad)
pop
pop
cdq
rcl
jmp
jmp
push
pop
lock
lods
mov
fadd
mov
shl
push
or
shl
arpl
es
mov
inc
(bad)
xchg
or
mov
pop
repz
pop
fdivr
inc
push
ret
retf
cmp
test
jmp
push
sbb
out
push
mov
push
pushf
xor
cli
addr16
xchg
movs
mov
mov
int
or
icebp
adc
fcomp
cli
sbb
mov
outs
jnp
fimul
popa
fdivr
xchg
js
std
mov
jb
sub
jnp
add
mov
in
sub
popf
xchg
xor
sub
out
inc
lahf
sub
mov
hlt
and
arpl
dec
test
test
lods
mov
test
call
jns
pop
mov
sahf
xor
adc
sub
jae
push
pop
inc
jg
adc
sbb
out
sbb
popf
and
fmul
ja
mov
shr
mov
xchg
addr16
sub
mov
inc
inc
push
inc
test
mov
fiadd
hlt
mov
mov
imul
mov
xchg
cmp
movs
in
shr
shl
out
xlat
jae
mov
cmps
daa
ficomp
cmps
rol
push
pop
pushf
mov
or
mov
(bad)
mov
fsubp
ins
pop
sub
adc
sbb
xchg
pop
repz
iret
mov
and
call
getsec
inc
sbb
imul
retf
or
stc
lods
cwde
pop
ss
out
pop
pop
jmp
or
mov
jb
pusha
fdiv
inc
mov
inc
imul
push
mov
push
mov
dec
mov
inc
adc
jg
retf
cmp
cmovno
add
sbb
je
imul
fmul
sbb
sbb
mov
imul
scas
aad
ins
stos
adc
gs
ficom
xchg
and
xor
adc
mov
lock
dec
aad
mov
push
jne
xor
(bad)
jns
out
cmp
jae
mov
pop
stos
adc
fild
cmc
out
ror
(bad)
pusha
add
mov
pop
push
ds
(bad)
xchg
pushf
sbb
mov
pop
mul
sbb
mov
(bad)
jns
out
inc
lea
out
je
or
ja
sub
aad
mov
enter
xchg
nop
dec
stos
cmps
cmp
add
push
fxtract
ficom
sbb
(bad)
push
loopne
push
jmp
mov
daa
scas
aaa
dec
sbb
sbb
out
ins
dec
jge
pop
pop
(bad)
in
pop
adc
xor
iret
inc
mov
icebp
jle
push
out
sub
(bad)
mov
shl
bound
(bad)
sub
inc
leave
(bad)
or
adc
push
cmp
js
jns
push
nop
jns
in
pop
daa
jne
push
push
pop
or
ror
cmps
push
fidivr
sar
stos
inc
cmp
sbb
in
out
push
push
xchg
inc
cli
and
pop
data16
call
ss
sbb
(bad)
mov
sub
mov
movs
cdq
(bad)
aam
cwde
in
in
mov
jb
jnp
add
movs
cmp
ret
call
pmulhuw
in
jne
mov
in
mov
xchg
repz
ja
xchg
or
push
enter
mov
jns
mov
add
sub
push
jno
jbe
shl
xor
dec
test
cwde
aaa
add
mov
imul
scas
aaa
mov
push
and
rol
xor
fwait
push
mov
js
cmp
jg
xchg
mov
ins
shl
outs
push
mov
push
add
shr
jne
or
push
dec
dec
cmc
fwait
mov
div
rcl
jmp
test
cmp
push
fnsave
add
fs
and
inc
cdq
xchg
pop
pop
push
cmps
lock
(bad)
(bad)
jl
inc
pop
fsubr
jge
jb
add
inc
jmp
test
mov
cmp
or
aaa
sub
outs
loopne
pop
(bad)
outs
push
out
adc
push
cmp
int
ja
or
adc
mov
nop
jmp
xor
mov
les
jae
fisttp
jae
xchg
fxch
mov
psllq
cmp
(bad)
out
inc
push
mov
lea
(bad)
dec
int3
dec
frstor
ror
mov
lea
mov
mov
mov
lods
mov
hlt
cmc
push
movs
fisub
push
cmp
dec
xchg
xor
rcl
popf
popf
add
call
fucomp
stos
mov
cs
cli
adc
or
jmp
aaa
cmp
leave
stos
inc
mov
mov
sbb
mov
sub
add
pop
adc
out
cmovae
or
jmp
ds
mov
lock
dec
inc
mov
push
ret
int
popa
in
adc
dec
mov
dec
shl
push
fdivr
cmps
loope
fiadd
in
(bad)
push
outs
jo
arpl
mov
dec
sbb
add
or
shl
out
js
fimul
inc
cmc
mov
sbb
test
dec
xchg
pop
sar
mov
or
mov
jnp
retf
outs
mov
sbb
out
jp
mov
in
push
or
inc
inc
pusha
cmc
mov
dec
pop
cmps
inc
ret
int3
(bad)
push
cs
jl
fisttp
dec
ret
adc
cld
sbb
fst
shl
sub
lds
call
jne
inc
(bad)
mov
(bad)
cmp
and
ds
dec
add
imul
xor
ins
int
push
sbb
mov
sub
push
fst
lea
xor
sub
xor
das
cdq
ss
jmp
jbe
ret
dec
mov
cmp
jmp
scas
jmp
jae
loopne
in
cdq
cld
les
jmp
js
int3
js
ss
adc
lea
(bad)
out
shr
and
iret
test
stos
sub
daa
mov
sub
xor
in
fstp
inc
ds
cmps
mov
and
adc
fcmovu
push
ins
pop
cs
mov
int3
das
adc
popw
cs
mov
cld
pop
(bad)
outs
cmp
sti
mov
cmp
inc
(bad)
cmp
inc
hlt
and
mov
adc
xchg
out
jl
ror
lds
aaa
mov
sub
leave
or
jnp
jmp
jmp
cmp
mov
ret
pop
sbb
in
icebp
cmps
jmp
movs
sbb
out
inc
enter
je
sbb
xchg
cmp
shl
adc
dec
mov
cmc
(bad)
jns
cmp
ja
and
lds
mov
xor
pop
sub
mov
stos
jle
mov
xchg
mov
mov
xchg
mov
das
je
retf
push
loope
cmp
sub
inc
lods
cmc
dec
leave
xchg
data16
cwde
pop
sbb
push
fdiv
inc
jg
jae
imul
jmp
stos
adc
hlt
inc
cmp
sar
xchg
mov
push
sbb
and
adc
push
dec
mov
add
mov
cwde
icebp
mov
ds
adc
adc
xchg
and
lods
outs
dec
push
pop
fimul
and
movups
cwde
cmp
cmp
pop
xchg
test
pop
fcom
iret
xchg
mov
es
sbb
add
xor
xchg
sbb
test
movs
sar
xchg
test
lds
xlat
fnstcw
loop
cmp
arpl
mov
mov
aaa
test
jecxz
cmp
(bad)
sbb
movs
jl
fstp
nop
test
aaa
cmps
xchg
(bad)
ret
or
xchg
in
popf
lahf
mov
psubusb
cmps
sti
sub
push
enter
pop
out
cdq
data16
adc
mov
push
stos
loope
pop
call
fadd
mov
pop
add
loop
jb
sbb
dec
and
pop
test
call
popa
fimul
loope
inc
iret
inc
jl
pop
pop
push
repnz
xchg
mov
out
cmp
scas
jp
or
sub
imul
adc
daa
rcl
dec
dec
test
push
fidivr
or
adc
jno
mov
aam
push
mov
jmp
out
popa
int
push
jb
lock
aaa
push
xor
imul
jmp
fdiv
pop
popf
(bad)
out
shr
mov
add
jo
cs
xor
(bad)
and
(bad)
mov
mov
out
mov
and
pop
pop
clc
push
inc
pusha
or
inc
shl
jo
inc
cmps
sbb
xor
sbb
sub
dec
retf
les
inc
xchg
fcmovne
inc
fiadd
out
add
mov
jge
and
sbb
dec
sti
sub
dec
xor
jg
add
(bad)
jmp
adc
push
push
shl
mov
pop
jae
imul
(bad)
push
sbb
push
jnp
xorps
and
int3
xor
lock
adc
sub
jae
mov
dec
push
sub
push
sub
dec
lds
push
rol
scas
push
or
ret
call
mov
sub
les
fsub
call
stos
xchg
ja
ins
adc
inc
inc
add
js
sti
pop
push
and
and
or
inc
clc
cs
pop
es
sub
cdq
(bad)
mov
ss
or
push
stos
push
adc
push
sbb
push
inc
dec
clc
cmps
push
sbb
jne
out
pop
test
in
dec
sbb
jmp
fdiv
xlat
test
out
sbb
loop
call
imul
xor
jae
scas
sub
daa
int3
ret
pop
js
xchg
lea
mov
rol
(bad)
pop
jmp
scas
popa
cmp
and
dec
xor
(bad)
sar
test
sbb
movs
add
add
push
mov
xchg
inc
jge
mov
xor
xchg
fsub
push
enter
add
mov
js
movs
test
sub
and
mov
mov
mov
loop
stc
out
adc
pusha
int3
sbb
mov
jnp
xor
fninit
inc
push
arpl
cmp
icebp
(bad)
xchg
(bad)
sbb
or
cmc
xor
(bad)
(bad)
imul
imul
mov
aam
loope
sub
imul
jnp
push
add
bound
mov
xchg
imul
fucom
fist
out
popf
call
pushf
mov
int
jmp
in
das
dec
lahf
test
jbe
push
xchg
dec
inc
xchg
mov
mov
imul
fist
mov
dec
sahf
jbe
sub
arpl
add
rcr
push
sub
clc
xor
clc
dec
dec
iret
shl
or
push
jnp
dec
dec
inc
cmp
inc
lods
movs
je
push
mov
cmp
dec
add
(bad)
xchg
mov
test
test
add
mov
cmp
imul
shl
sbb
adc
lods
lods
jecxz
push
or
je
cli
add
dec
add
mov
jmp
or
dec
push
imul
jne
add
das
inc
int
mov
lods
in
lahf
ja
inc
push
cmp
adc
in
sbb
mov
ss
imul
pop
push
fdivp
or
mov
jle
inc
mov
xchg
loopne
xor
ret
mov
cli
test
pop
outs
iret
ret
sub
and
mov
daa
xor
popa
xlat
cwde
in
xchg
stos
jns
xchg
add
imul
adc
addr16
sub
fwait
mov
mov
jg
out
jle
ins
stos
ror
rcr
sbb
arpl
xlat
and
and
cwde
dec
ja
popf
loop
xor
xlat
mov
mov
sub
cwde
push
inc
cmp
ja
push
fs
ret
mov
adc
dec
jg
jmp
mov
ficom
mov
cmp
inc
scas
neg
ds
retf
adc
xor
push
mov
test
lods
xor
shl
into
push
out
fdiv
push
xor
jmp
add
popf
aad
loope
popf
jp
cmp
pop
or
retf
xchg
xchg
add
push
mov
add
xchg
mov
out
dec
jmp
shl
xchg
ret
aas
pop
or
call
xor
pop
fisttp
cmps
push
push
(bad)
test
ror
cwde
call
iret
addr16
jl
fsub
mov
sub
cmps
push
adc
jbe
test
js
sahf
into
stos
or
fnstcw
inc
call
push
lds
push
dec
inc
lods
mov
dec
lea
mov
ficom
dec
pop
jne
cwde
retf
jle
and
sbb
cmps
test
add
rol
call
cld
int3
daa
pusha
cmp
sub
cmp
sti
jo
int3
mov
and
fstp
jp
push
rol
ja
mov
ss
fadd
les
mov
pop
int
cmp
jb
inc
mov
fist
jb
int
ror
fs
jmp
pop
pop
add
mov
xchg
fdiv
(bad)
mov
cmp
jge
movs
push
mov
sub
lahf
ins
xor
push
jbe
cmp
sbb
xchg
mov
loop
(bad)
dec
jnp
ret
and
rcr
dec
int
imul
jmp
jne
mov
sub
pop
sub
lahf
or
ss
hlt
ja
ja
fcom
dec
xor
sti
in
push
jne
imul
mov
mov
call
retf
mov
int3
(bad)
xchg
sbb
out
jge
ffree
adc
in
mov
popf
or
inc
(bad)
lods
pop
push
repnz
cmp
(bad)
ds
les
mov
cmps
aad
leave
(bad)
maxps
cmp
xchg
outs
sub
mov
mov
or
inc
jmp
push
jl
sbb
jl
pop
lods
xor
pop
repz
jp
sub
mov
pop
mov
lods
and
test
iret
scas
push
mov
fst
jb
inc
mov
sub
pop
push
and
imul
sub
pop
push
sbb
stos
mov
test
xor
mov
cmp
(bad)
xor
mov
(bad)
lahf
leave
xor
fdivrp
in
mov
push
mov
fadd
jmp
mov
(bad)
jmp
jne
aad
cld
or
jge
dec
aad
sub
push
leave
hlt
jns
add
stos
xchg
aad
push
fisubr
lds
and
add
dec
pop
add
cmp
push
inc
xor
daa
mov
cmp
(bad)
push
inc
(bad)
jmp
loopne
jnp
jecxz
pop
addr16
sbb
jae
push
cmps
dec
rol
shl
add
xor
test
(bad)
dec
shl
(bad)
test
jo
mov
imul
add
jle
dec
or
pop
dec
cmp
sub
loop
cmp
and
and
mov
cmp
jge
sub
ins
pushw
xlat
out
ficom
in
push
pop
std
rcl
jl
inc
lahf
pop
and
dec
fcomp
and
cmps
inc
push
jo
enter
(bad)
ds
cmp
adc
push
jmp
es
ja
inc
add
das
outs
push
pusha
jb
aad
xor
cmc
pop
jb
shl
rcl
xor
dec
ss
lock
inc
inc
cs
sub
jbe
push
lods
or
lahf
mov
fisttp
cs
adc
int
push
cmp
dec
and
sbb
in
(bad)
loop
sbb
add
cmps
adc
pop
(bad)
pop
pushf
jbe
jmp
push
cld
(bad)
test
test
push
fdiv
add
mov
push
int
adc
cmp
lods
mov
push
mov
push
dec
mov
sti
scas
sub
add
lea
das
add
jl
rcr
pusha
stos
repz
xchg
mov
jp
test
xor
inc
pop
ret
mov
loop
inc
mov
cdq
add
inc
xor
xlat
mov
jg
icebp
mov
sub
je
outs
pop
das
(bad)
stos
ins
mov
sbb
jno
adc
cmps
jge
jns
pop
mov
pop
push
xlat
adc
mov
push
adc
sbb
jg
pmaddwd
(bad)
xor
mov
mov
inc
pusha
repnz
or
cmps
mov
imul
adc
(bad)
push
or
jge
mov
xchg
cli
xlat
arpl
test
arpl
stos
mov
mov
fwait
jmp
xchg
lahf
outs
data16
xor
cwde
fst
mov
cdq
jmp
mov
and
imul
dec
test
loope
jns
jno
data16
cmc
scas
sub
es
clc
inc
mov
sbb
adc
cmp
jno
(bad)
gs
in
ror
push
mov
jb
and
ins
and
in
ret
push
push
sub
loop
jb
fcomp
leave
lods
stos
movs
sub
and
sar
push
mov
inc
sub
adc
push
je
cmp
mov
(bad)
pushf
sub
int
lahf
adc
push
dec
jmp
adc
dec
les
cmp
movs
gs
mov
test
inc
adc
sub
inc
adc
test
adc
je
loop
shrd
gs
cmp
cld
scas
mov
sub
cmps
sub
nop
mov
call
sub
pop
(bad)
rcr
fdivr
mov
jmp
pop
aad
or
adc
mov
loop
xor
dec
adc
ins
inc
adc
mov
retf
retf
adc
dec
dec
iret
ins
push
int3
cli
inc
stos
lea
mov
cmp
es
adc
(bad)
int3
mov
sub
lea
push
add
pop
(bad)
das
jmp
add
dec
push
int
mov
push
mov
leave
in
rcl
(bad)
es
ret
push
cmc
xlat
test
fisub
mov
adc
xor
test
sbb
jno
xor
test
cwde
or
sub
inc
loopne
sti
ins
inc
test
mov
dec
dec
pop
xor
xchg
mov
and
lds
xlat
fstp
push
inc
push
stos
jecxz
rol
pushf
ja
xor
out
shl
pop
ja
aaa
hlt
xor
cmp
imul
jb
mov
fimul
es
repnz
or
mov
mov
pop
xor
mov
xchg
jle
push
mov
and
ror
lods
adc
sub
std
test
inc
test
add
mov
stos
lds
add
test
xchg
dec
test
dec
int3
jo
push
push
adc
sub
lahf
aad
push
sbb
sub
xor
mov
xor
dec
dec
ds
adc
mov
mov
jns
pop
out
jge
fsub
pop
or
(bad)
out
cmp
cmp
xor
xor
(bad)
movs
xor
adc
iret
jb
jmp
sub
mov
test
dec
daa
mul
call
jmp
dec
inc
cmps
ins
(bad)
mov
xchg
sti
aaa
loop
or
mov
cmc
pop
pop
stc
popf
gs
mov
fs
cld
arpl
lds
xchg
jb
ret
mov
dec
sub
xchg
pop
pop
(bad)
clc
sbb
pusha
cs
pop
mov
sub
imul
jmp
inc
mov
addr16
adc
test
or
and
enter
stc
(bad)
rep
sub
ror
fmul
retf
inc
pop
and
adc
les
dec
pop
hlt
jmp
and
cmc
mov
dec
loopne
inc
leave
clc
sub
xchg
dec
push
fisttp
movs
jae
sar
icebp
sti
sbb
dec
shr
cdq
xlat
push
mov
test
pop
and
dec
test
sub
aas
cmp
jge
ds
add
test
push
xor
xor
cmp
cmp
js
jl
adc
sahf
dec
inc
dec
cs
sar
sbb
pop
adc
shrd
(bad)
(bad)
in
sbb
lods
jmp
stc
arpl
rcr
mov
xor
imul
cmc
and
mov
push
popf
retf
(bad)
fcmovu
iret
and
mov
leave
aaa
retf
daa
xchg
daa
aaa
sti
mov
dec
adc
test
jno
xor
cli
sub
jle
push
popa
and
inc
jmp
aaa
xchg
dec
std
call
or
and
xchg
or
clc
ins
push
mov
(bad)
daa
lods
xchg
dec
sbb
pusha
lea
fnstcw
mov
leave
cwde
or
js
push
test
mov
xor
or
das
in
xchg
movs
and
clc
pop
dec
aas
and
mov
push
inc
js
dec
or
jmp
cmp
push
lock
sbb
repz
push
repz
sbb
ds
(bad)
sbb
adc
or
and
int3
xchg
fdivp
cmc
fs
mov
dec
lods
or
push
clc
stos
clc
retf
add
fmul
jb
push
leave
scas
or
test
adc
sub
and
cmp
jge
imul
jl
jecxz
icebp
test
lods
stos
xchg
mov
adc
enter
or
cld
out
into
sti
gs
dec
int
jle
addr16
popf
mov
enter
repnz
xchg
loope
idiv
sbb
xchg
inc
xchg
sti
add
pop
dec
inc
int
aam
(bad)
bound
outs
movs
stc
lock
xor
sbb
ficomp
jne
ins
or
xor
shl
pop
daa
sti
test
loopne
jecxz
or
xchg
sbb
and
push
push
ins
cwde
add
or
out
dec
cdq
retf
push
nop
int
test
fisubr
mov
add
ja
data16
mov
inc
mov
xor
ins
sbb
movs
mov
pusha
movs
pop
ins
loope
(bad)
sar
lock
mov
cdq
loopne
xchg
inc
popf
xor
xor
lock
leave
daa
jne
sbb
std
ror
leave
push
xor
or
add
out
xchg
inc
inc
idiv
xor
xchg
and
fidivr
jmp
pushf
paddusw
or
sbb
mov
ins
ss
lds
pop
test
xor
into
push
inc
jbe
jp
movs
and
inc
and
mov
leave
(bad)
imul
lock
dec
or
imul
test
pop
sbb
cmp
ret
imul
(bad)
xchg
mov
jecxz
aaa
ror
movs
stos
mov
push
and
xchg
cmp
fmul
call
xchg
adc
and
sbb
aaa
fdivr
shr
ficomp
pop
sub
push
pop
cmps
xlat
or
std
sbb
in
ins
cld
loope
jmp
xchg
lds
cmp
fst
cmp
push
pop
stos
sahf
jnp
cmp
mov
cwde
dec
cmp
cmps
jbe
fs
push
jmp
nop
pop
dec
mov
cs
push
sub
ds
and
xchg
pushf
out
pop
xchg
or
push
data16
fdiv
std
js
xchg
xchg
sbb
pop
mov
fwait
jae
movs
sub
pop
cli
inc
sub
outs
pop
sub
adc
loopne
sbb
sub
cwde
mov
xchg
jno
je
call
push
rol
push
stos
sub
inc
and
jle
and
add
cdq
pop
xor
and
(bad)
cmc
ds
inc
repnz
fstp
es
aas
int
push
je
sahf
jb
bound
mov
je
inc
or
js
sub
sahf
pop
push
add
sub
iret
mov
lods
cmp
je
fld
xor
pop
lods
in
inc
(bad)
test
or
dec
adc
and
pusha
cmps
stc
pop
and
test
aam
cmp
mov
pop
scas
popf
mov
xchg
into
xor
pusha
inc
pop
fistp
sbb
in
inc
sbb
adc
ret
addr16
pop
mov
xor
push
xchg
in
aam
xor
add
clc
std
sub
or
sar
inc
mov
movntps
add
inc
pushf
xor
jb
pop
dec
xchg
mov
sub
push
jo
ror
aaa
and
ret
in
out
pop
shl
mov
xlat
pop
sti
loope
pusha
cli
test
jb
retf
in
xlat
iret
pop
pop
or
in
popa
add
out
xchg
mov
xchg
loop
ficom
sbb
mov
out
cs
mov
outs
fsubr
fidiv
lods
inc
push
out
adc
shl
int3
data16
movs
mov
loopne
in
pusha
(bad)
addr16
add
cmp
stos
pusha
out
or
int
cmps
imul
dec
sub
loop
inc
stos
or
and
xor
aas
cmp
add
jbe
test
jbe
cmp
data16
ret
or
push
int3
inc
sahf
fs
cdq
stos
xor
out
scas
cmc
(bad)
enter
ret
mov
push
xlat
lds
dec
test
sar
jmp
mov
fsubr
ss
call
adc
repz
stos
mov
or
cmp
(bad)
lods
push
add
inc
xchg
fs
pushf
sbb
mov
mov
test
out
fmul
push
jl
lods
loop
mov
lahf
jg
imul
mov
popf
popf
or
addr16
js
cmp
mov
ss
in
mov
push
jnp
ret
mov
test
(bad)
sti
dec
or
or
push
fdivp
pop
sub
daa
imul
loopne
cmps
jns
xchg
mov
pop
addr16
mov
pusha
push
push
jns
aad
pop
sbb
mov
jge
sub
stc
mov
fcomp
xchg
xchg
sub
nop
mov
mov
xchg
pushf
or
adc
inc
das
sbb
add
ss
pop
push
sar
add
mov
mov
add
call
mov
inc
or
mov
add
mov
jmp
inc
fs
mov
xor
mov
out
(bad)
push
xchg
pop
cs
push
ja
mov
cmps
imul
test
xchg
pop
inc
fsubr
pop
mov
add
icebp
pop
les
cdq
icebp
data16
or
sar
cmps
ror
cld
out
sbb
and
sub
sahf
pusha
mov
mov
jg
adc
jle
scas
fidiv
cmc
mov
adc
into
sbb
cwde
ss
cs
sub
cli
enter
cwde
bound
popf
mov
out
int
sub
pop
gs
jbe
sub
outs
js
scas
adc
add
jge
cld
ss
jns
data16
shr
lods
inc
xor
in
ds
ja
mov
jmp
and
adc
dec
in
rcl
inc
test
jns
jmp
popa
(bad)
jecxz
or
mov
call
dec
dec
xchg
and
adc
in
adc
test
push
dec
sbb
pop
push
enter
cmp
rcl
or
retf
push
je
mov
adc
sub
adc
jno
lods
jl
out
sar
push
cwde
in
jo
jne
jbe
test
mov
jecxz
xor
inc
shl
ss
sahf
sbb
cmp
pop
add
movs
test
xor
retf
jnp
mov
push
movhps
ja
jmp
inc
xchg
sub
xor
rep
jno
xor
sbb
stos
or
iret
(bad)
jo
(bad)
test
inc
lods
push
mov
inc
pop
xchg
pop
pop
sar
jb
sub
jns
push
outs
inc
add
mov
mov
aaa
(bad)
inc
lock
lfs
ror
sahf
repnz
in
int
(bad)
sar
rcr
pop
out
xchg
sbb
xlat
ins
(bad)
push
shl
mov
cmp
xlat
pop
add
jo
adc
jmp
popf
ret
ss
pop
mov
cmps
or
adc
xchg
xchg
mov
xor
xlat
arpl
call
add
push
pop
ror
das
sub
call
loope
stc
push
cmp
mov
in
stos
es
sbb
in
and
inc
sbb
das
and
repz
jge
mov
mov
and
scas
push
and
and
pop
repnz
daa
pop
test
jbe
xor
rol
sbb
cwde
jne
addr16
jb
mov
gs
push
push
mov
mov
bound
(bad)
mov
lods
outs
mov
xor
test
mov
(bad)
mov
sbb
xor
adc
jno
ror
ins
call
push
mov
(bad)
push
sub
test
mov
test
adc
out
pop
inc
cld
and
xlat
adc
push
cmp
popf
jo
push
add
scas
js
cli
dec
sbb
and
pusha
or
iret
mov
pop
in
imul
push
popa
into
loope
call
shr
and
mov
out
fimul
push
xor
push
sti
ja
mov
movs
clc
ds
adc
dec
call
sub
test
jae
push
data16
sar
shr
enter
shl
mov
pop
in
test
out
jo
bound
fadd
jge
sar
mov
push
or
xchg
fldln2
mov
adc
out
xor
xlat
cmp
retf
aad
popa
inc
icebp
inc
push
and
das
aas
icebp
push
dec
xchg
shl
xor
add
and
and
push
gs
repnz
ja
addr16
mov
jg
lods
pop
sbb
pop
mov
lds
xchg
jle
push
cli
fisub
xchg
mov
fldenv
sbb
push
inc
adc
inc
pop
repnz
into
jp
call
call
or
cmp
xchg
xor
fadd
movs
dec
fst
xor
and
jmp
cs
dec
push
xchg
pop
mov
lods
stc
stc
loopne
inc
jp
inc
sub
in
(bad)
cmp
rcr
xchg
ins
and
push
rcl
jecxz
xor
sub
jmp
jg
push
pop
cmp
add
ficomp
out
cmps
pop
or
jbe
lock
inc
mov
push
fs
inc
push
mov
cmp
outs
iret
xlat
ror
shl
mov
cli
sub
clc
enter
popa
cmp
push
shl
mov
(bad)
jge
js
test
jecxz
iret
push
sbb
xor
mov
cdq
pop
mov
xor
arpl
jmp
mov
fcom
jp
push
ficom
fmul
sub
hlt
jg
daa
jns
in
push
rcl
xchg
dec
stc
xchg
jg
jne
lahf
arpl
jae
dec
int
retf
xchg
xor
jmp
and
into
pop
xor
stc
in
pop
lods
mov
mov
fnclex
addr16
ret
jnp
stos
fst
inc
push
(bad)
push
xor
mov
push
out
mov
or
sbb
cmc
ss
cld
pop
imul
xchg
push
loope
jb
mov
jns
push
cmp
sub
and
(bad)
push
outs
aas
fimul
mov
cmp
outs
jl
pop
xor
lods
repz
test
cld
xchg
pushf
dec
(bad)
mov
(bad)
xor
push
cmp
pop
mov
and
cmps
mov
sub
pop
jp
pop
out
mov
xchg
push
or
(bad)
pop
dec
mov
pop
xlat
or
rol
out
adc
mov
ret
fidivr
retf
xchg
fs
int
bound
lahf
jno
lea
sbb
or
and
push
jmpw
xchg
in
enter
(bad)
cmp
add
test
stos
or
cmp
popa
mov
inc
add
das
sub
std
push
mov
push
adc
jne
cmp
scas
mov
push
sti
icebp
nop
(bad)
sahf
mov
sbb
pop
bound
mov
(bad)
xor
loope
neg
or
jae
dec
push
inc
and
mov
shl
imul
or
push
add
xor
cli
xchg
cli
jno
jns
xchg
mov
push
fidivr
xchg
cmp
test
enter
sahf
ret
pop
arpl
jmp
dec
sahf
movs
outs
sbb
cdq
jo
pop
sub
cmp
in
int
cdq
jnp
es
in
popa
hlt
xchg
mov
mov
int3
int3
mov
inc
add
jge
cs
hlt
sbb
pop
xor
int3
mov
stos
cmp
add
push
fwait
jecxz
popf
idiv
or
inc
lods
imul
sbb
in
cmp
(bad)
jmp
push
fs
ret
cmp
jnp
xor
jno
rcr
iret
arpl
cmps
add
ss
inc
inc
nop
rcr
mov
jmp
std
push
push
dec
das
shl
out
jmp
dec
ins
lea
sbb
sub
stos
ins
pusha
xchg
sti
hlt
icebp
jle
sbb
mov
(bad)
cmp
adc
jae
test
mov
and
lods
pusha
sbb
push
inc
mov
adc
shl
mov
mov
lods
ret
mov
dec
xchg
outs
imul
xor
push
mov
popf
gs
popa
xchg
inc
ss
into
mov
mov
adc
ss
xor
stos
addr16
call
xor
dec
adc
xchg
mov
or
push
adc
arpl
fs
inc
xor
fmul
outs
and
test
jb
ret
movs
mov
push
pop
retf
movs
(bad)
push
or
scas
jne
fdiv
xchg
test
push
test
pop
ins
retf
jo
ja
jge
xchg
cmp
jmp
lea
lahf
adc
out
mov
jb
adc
pop
inc
ins
(bad)
mov
cdq
mov
push
scas
dec
inc
int
loope
push
cmp
xchg
leave
push
add
xchg
mov
push
test
and
cmps
scas
loop
mov
dec
in
inc
xchg
pop
ror
pusha
mov
addr16
mov
clc
mov
inc
daa
sbb
ret
in
scas
cmps
shr
xchg
xchg
stc
mov
aad
in
pop
xor
fist
leave
faddp
add
jl
repz
out
push
neg
push
shl
fst
jle
aaa
outs
mov
mov
out
pop
jbe
xchg
xchg
in
ins
test
or
dec
std
push
jge
(bad)
je
xlat
pusha
pop
test
mov
(bad)
jmp
or
ret
cld
jae
inc
pop
call
stc
jge
mov
int3
into
leave
adc
jno
xchg
dec
test
cmps
jo
mov
sbb
xchg
pop
mov
sar
lock
retf
cmp
mov
push
adc
or
sbb
(bad)
mov
xchg
dec
jmp
aaa
ds
push
dec
das
or
add
jb
sub
repnz
cli
fstp
add
sbb
adc
fwait
pop
arpl
dec
repz
push
mov
clc
jl
lahf
inc
sahf
push
and
jp
xor
stos
cmp
and
int
or
repnz
aam
jp
jnp
pop
mov
cmp
push
xchg
dec
cdq
dec
cmps
jecxz
push
int
add
test
sbb
cmc
mov
sub
scas
fwait
push
es
loope
xchg
sub
jae
fs
cs
pop
xor
xor
jbe
and
mov
nop
cmp
sbb
addr16
inc
sbb
cmp
fimul
fidiv
retf
inc
push
aaa
and
xor
pop
ror
aas
bound
push
xchg
ret
retf
jnp
cld
push
(bad)
sbb
inc
cmps
push
jl
cmp
rcl
sbb
add
cld
mov
mov
test
pop
dec
and
push
cmps
pop
stos
js
push
cmps
cmc
adc
nop
jno
xchg
jl
lock
xor
out
leave
ret
cmp
addr16
fidiv
gs
adc
jp
mov
or
fs
mov
mov
sub
add
cli
mov
push
mov
imul
xor
shr
mov
lock
xlat
sti
cmc
ret
test
cmp
mov
adc
jle
ds
iret
and
(bad)
leave
or
sbb
repnz
jne
fsub
std
or
mul
sub
inc
cmp
jl
and
jno
cmps
outs
lea
not
cmp
shl
fistp
ja
dec
add
test
sti
push
push
cdq
enter
fs
mov
xchg
les
std
or
pushf
or
and
mov
pusha
xchg
sub
jns
call
cmc
scas
mov
adc
sbb
mov
repnz
iret
sbb
inc
dec
shr
xchg
add
mov
sub
js
or
xor
dec
mov
je
mov
pop
xor
test
fdiv
retf
ret
(bad)
dec
into
ds
bt
cdq
scas
stos
push
pop
ret
mov
bound
pushf
or
pop
shl
adc
or
pop
and
mov
mov
inc
or
push
cmps
sbb
dec
aam
aad
and
inc
div
mul
popa
adc
cmps
test
sahf
jo
out
scas
(bad)
(bad)
les
xchg
inc
sbb
int
add
or
ins
pop
pop
ficomp
scas
out
leave
mov
mov
cmc
movs
dec
leave
push
leave
std
jo
mov
js
repnz
stos
out
(bad)
jmp
popf
sbb
js
es
add
jns
fstp
fdiv
mov
int3
scas
pop
jb
enter
fimul
push
fnstsw
je
icebp
push
mov
fwait
popa
and
adc
popf
mov
stc
pop
inc
cwde
mov
jle
push
fs
aam
std
addr16
and
aaa
xchg
cwde
inc
icebp
scas
sub
jb
xchg
add
lds
std
loopne
push
scas
sbb
push
mov
and
cmp
adc
jmp
(bad)
iret
cwde
adc
dec
pop
add
and
(bad)
into
lea
sbb
addr16
test
sub
enter
push
dec
add
into
stc
push
xchg
mov
xor
xchg
pop
pop
(bad)
retf
mov
xchg
lea
jns
mov
or
jg
jo
dec
popa
inc
sbb
cmps
ficomp
pop
sbb
lods
or
sbb
dec
jb
xchg
clc
adc
loope
sti
mov
mov
sar
adc
xor
test
cmp
pop
idiv
cld
sbb
mov
pusha
fiadd
aaa
in
call
jp
mov
jmp
pop
into
pop
shl
mov
ss
xchg
xchg
hlt
movs
dec
gs
ror
outs
xor
xchg
ins
mov
ja
pop
inc
adc
addr16
scas
call
dec
mov
jae
ins
sub
movs
xchg
outs
xor
fwait
jmp
dec
lods
out
into
inc
test
out
mov
jne
sbb
icebp
add
fs
sbb
arpl
scas
repnz
call
(bad)
xor
push
imul
ds
jnp
jae
stos
sub
es
push
adc
cmc
adc
scas
aad
fpatan
rcr
imul
gs
cmps
add
push
xchg
mov
push
cmp
(bad)
add
xor
xor
mov
(bad)
fistp
adc
or
mov
push
fnsave
(bad)
sub
sbb
aas
test
loopne
adc
lahf
popf
jno
and
adc
mov
les
mov
cmps
ins
pop
or
jno
mov
jecxz
outs
inc
xchg
pop
mov
aad
xchg
sar
inc
xor
jnp
jae
shr
out
push
dec
retf
push
cld
mov
fsubr
icebp
inc
repnz
cmp
push
jmp
ret
lahf
(bad)
(bad)
sbb
(bad)
in
xor
adc
out
xchg
mov
fisubr
adc
stc
pusha
lods
ja
xor
jnp
jo
je
cmp
push
mov
sub
mov
std
sbb
jl
movs
sbb
punpckhdq
or
adc
mov
jnp
and
adc
jmp
sbb
stc
adc
rcl
dec
inc
push
(bad)
sbb
sbb
fwait
sbb
xchg
inc
mov
aaa
fisubr
aas
movs
stc
cmp
pop
(bad)
ins
lods
aam
add
xchg
push
mov
push
mov
test
and
adc
jb
ud2
or
or
mov
pushf
dec
dec
dec
js
dec
sub
fcmove
je
jo
xchg
xchg
call
push
add
add
xor
mov
dec
mov
(bad)
std
and
cli
call
in
jnp
bnd
sub
loope
push
mov
mov
(bad)
aad
jnp
mov
push
inc
mov
and
arpl
stos
aam
call
adc
or
test
(bad)
jnp
jmp
pop
loop
add
call
icebp
jne
lock
retf
inc
fsub
daa
push
push
shl
in
dec
sbb
div
dec
mov
bound
aad
imul
dec
xchg
mov
leave
retf
mov
dec
mov
or
and
sbb
into
push
inc
test
(bad)
xor
jmp
sub
(bad)
retf
fidivr
xchg
inc
les
add
fs
mov
cmp
ja
inc
dec
mul
fcomp
imul
jbe
dec
mov
das
cmps
test
popf
iret
add
jnp
aam
int
es
sub
jecxz
pop
cmp
or
add
mov
(bad)
stc
je
xchg
test
pop
cwde
jne
push
out
and
test
pop
scas
mov
cmps
dec
movs
scas
add
pop
dec
push
lea
call
add
sbb
and
jp
xor
sti
ss
daa
and
ins
mov
cmps
arpl
out
(bad)
cld
stc
cmp
mov
cmps
mov
dec
pop
dec
or
jmp
sub
loope
cs
nop
stos
inc
add
imul
pop
or
xchg
fdiv
or
pusha
mov
adc
pop
imul
dec
jo
dec
stos
ret
xchg
jne
pop
dec
in
mov
xor
cdq
mov
shl
pop
xor
sub
icebp
call
jno
jo
sbb
cdq
xchg
addr16
test
mov
inc
sahf
lock
xchg
and
test
sbb
sub
mov
repz
(bad)
push
aaa
int
mov
fs
xchg
or
pop
mov
js
ret
(bad)
mov
push
push
imul
shl
(bad)
int3
cmp
(bad)
mov
cmp
sbb
aas
scas
and
jl
lea
inc
in
(bad)
lods
inc
sub
push
cmps
mov
mov
and
add
in
mov
xchg
repz
outs
pop
pop
pushf
add
adc
pop
xchg
ins
arpl
loop
std
cmps
mov
retf
mov
mov
out
inc
jg
and
add
mov
popa
inc
jge
pop
ret
lea
or
ret
xlat
xchg
out
in
jb
xchg
sti
adc
iret
out
and
pop
pop
addr16
sub
xor
shl
mov
aas
sub
enter
mov
into
jl
out
imul
in
add
cmp
and
dec
jg
aad
sub
jge
mov
mov
scas
aam
xor
add
daa
inc
sub
dec
add
dec
lods
and
movs
jmp
sub
xchg
inc
sub
sbb
xchg
cld
jo
mov
lods
shufps
xchg
cwde
into
call
in
mov
xor
cmp
ss
das
shl
jge
dec
in
sub
jne
jb
dec
mov
jl
out
pop
jbe
inc
mov
outs
sub
jecxz
inc
hlt
aas
out
shl
mov
shl
imul
enter
pop
and
xor
cmc
ja
add
inc
xor
inc
std
jmp
mov
mov
inc
stc
xor
ins
xor
scas
jge
fcmovu
out
and
push
loop
dec
aas
fisub
cmp
xchg
cmc
addr16
(bad)
jnp
ins
push
aaa
lods
dec
xchg
xchg
mov
adc
inc
adc
mov
pusha
adc
jle
stos
(bad)
retf
das
(bad)
pop
lds
xchg
add
mov
out
in
adc
mov
leave
movs
xor
lea
adc
push
and
outs
mov
adc
sahf
outs
sub
pop
xchg
out
pop
sar
cli
inc
xor
add
icebp
sub
es
das
jmp
iret
jae
xor
popf
or
std
pop
inc
daa
pop
shl
cmp
inc
sar
jmp
or
xchg
xor
inc
xor
shl
test
les
mov
mov
fistp
cmps
aam
scas
cld
jnp
add
(bad)
push
push
inc
mov
fdivr
lods
sub
pushf
outs
jne
cdq
dec
ror
jmp
int3
xchg
jmp
rol
add
jle
test
out
ret
mov
adc
out
or
pop
frstor
es
fwait
lods
test
test
jae
mov
cmc
dec
fisttp
dec
xor
sbb
adc
dec
xor
arpl
out
test
lahf
ror
in
add
dec
lea
stos
inc
aad
cmp
lds
sbb
shl
jecxz
popa
out
sub
jg
cmp
inc
inc
mov
lock
dec
push
pop
add
cmp
loopne
xor
int3
pop
nop
scas
pop
out
popa
sbb
call
pop
pop
stos
lahf
sub
and
fwait
lods
fimul
fadd
add
hlt
mov
shr
inc
push
lahf
test
push
das
ja
dec
js
add
cmps
sub
inc
lock
mov
fs
push
fiadd
call
inc
(bad)
out
dec
jp
loope
sar
and
mov
mov
into
imul
adc
add
leave
jns
nop
xchg
dec
pushf
cmp
pop
outs
inc
and
push
push
mov
lahf
out
inc
sbb
add
ds
dec
rcr
mov
stos
out
into
fidiv
cli
pop
xchg
popf
or
out
outs
mul
pop
outs
in
inc
cli
retf
dec
push
clc
mov
dec
lds
bound
jns
out
or
jb
test
clc
pop
fs
inc
pop
xor
cmp
jle
add
cmp
stos
xor
cs
and
inc
pop
inc
mov
aaa
xchg
lods
sub
sbb
mov
jmp
fwait
int
int
mov
xchg
xchg
sbb
les
imul
ret
pop
adc
fild
clc
xor
jnp
sub
or
stos
outs
cwde
or
repz
mov
or
lock
push
retf
enter
ds
inc
dec
xchg
mov
pop
leave
inc
(bad)
xor
pop
xor
inc
in
cli
repz
jg
ret
add
and
lahf
inc
das
je
in
jne
and
sub
cmp
push
clc
sub
xor
inc
and
mov
cmp
ds
pushf
inc
sub
cld
test
or
out
push
int
sar
and
jne
leave
push
mov
std
out
sti
xor
bound
push
and
call
out
shl
xchg
ficomp
jmp
jp
aad
mov
cmp
jg
(bad)
mov
lea
push
dec
xor
push
sbb
mov
sbb
sti
les
jo
mov
int
mov
push
jae
scas
cmp
sub
out
sub
adc
or
inc
push
in
cmp
or
add
or
jmp
inc
adc
push
lsl
pop
mov
mov
pop
cld
mov
push
paddd
das
(bad)
jnp
inc
scas
or
inc
bound
sbb
push
icebp
and
stos
scas
sbb
pop
xor
aad
cdq
cmps
dec
xchg
int
rcl
mov
hlt
mov
jns
js
sbb
loop
mov
je
fs
outs
test
push
adc
push
add
aam
mov
mov
sbb
xor
sub
pop
mov
push
cmp
jnp
fsubp
dec
xchg
xchg
push
movs
loopne
fadd
inc
mov
test
fidiv
daa
or
pop
push
int
pusha
add
cmp
sbb
cmp
fimul
pop
inc
scas
es
inc
stc
xchg
xchg
and
xor
inc
dec
inc
jg
dec
mov
or
pop
mov
clc
(bad)
(bad)
in
movs
repz
dec
sbb
jp
dec
ins
xchg
or
call
jg
mov
in
aam
fmul
dec
add
out
in
sub
mov
cmc
push
retf
ret
dec
call
mov
imul
cmp
dec
rcl
jnp
xor
or
add
mov
mov
aas
pop
jle
adc
mov
jle
inc
xchg
retf
retf
leave
popf
cmp
pusha
add
ins
out
dec
mov
xor
and
mov
(bad)
fldcw
or
pop
mov
aad
dec
and
ja
fldenv
mov
push
or
repnz
mov
pop
sub
clc
or
loope
add
ds
out
add
nop
sub
xchg
mov
pop
push
aad
(bad)
inc
fdivr
adc
cmps
inc
bound
push
jge
inc
int3
movs
cmp
ret
jnp
jmp
dec
outs
xor
mov
bound
sbb
cmp
lahf
sbb
fild
adc
fs
stos
jl
retf
or
pushf
cwde
dec
push
mov
xor
and
or
xchg
mov
enter
popf
xchg
or
xchg
jnp
das
div
das
pushf
cmp
mov
push
loopne
(bad)
xchg
movs
lea
mov
adc
(bad)
xor
xchg
fs
in
cwde
inc
stc
dec
cmp
ror
jae
sub
sub
xchg
sub
into
stos
pop
or
bound
test
test
push
retf
aam
stc
cmp
loop
cmp
mov
imul
push
shr
or
je
and
dec
or
mov
jne
lods
push
push
cmp
mov
jmp
push
pop
or
mov
movs
int
mov
xchg
add
arpl
clc
mov
sbb
(bad)
jp
pop
push
in
dec
in
sub
push
(bad)
das
push
inc
repnz
bound
jbe
test
mov
pop
clc
inc
leave
mov
push
mov
loopne
out
std
ret
nop
push
jno
push
push
cmp
fadd
push
sub
addr16
xchg
out
and
pop
pop
(bad)
mov
xor
iret
push
(bad)
mov
dec
bound
jns
xchg
xor
push
je
je
vmovss
jnp
pop
mov
retf
cmp
into
xchg
popa
ins
mov
mov
cmps
jg
scas
push
pop
je
retf
and
fstp
add
lahf
movs
push
mov
inc
lahf
xor
loopne
push
pop
push
(bad)
mov
ret
retf
sbb
data16
inc
pop
(bad)
jns
mov
adc
imul
cmp
test
shl
mov
dec
jns
loopne
cmp
push
xor
push
mov
clc
shr
ins
retf
repz
cmp
jecxz
les
(bad)
mov
fiadd
xor
jb
cmps
dec
iret
adc
mov
arpl
movs
jo
xchg
push
inc
cld
mov
enter
out
mov
mov
outs
dec
jo
(bad)
aad
inc
sahf
sub
pop
out
sbb
inc
cmp
mov
nop
test
icebp
vmovd
jns
call
cmp
fist
ja
int
iret
shr
mov
imul
pop
pop
ja
pop
jge
arpl
xchg
fs
out
xchg
(bad)
repz
push
inc
inc
in
mov
xchg
lods
jb
dec
add
xor
add
xlat
js
adc
icebp
mov
and
fadd
jle
repz
sbb
or
xchg
cdq
sub
(bad)
jb
cmp
enter
scas
dec
je
add
popf
jg
cmps
imul
mov
out
sbb
xor
cdq
jmp
sub
std
mov
loope
shl
lods
jl
cs
mov
push
js
adc
xor
xor
pop
hlt
dec
in
sbb
push
jge
add
js
fistp
mov
sub
mov
in
sar
mov
mov
jno
sbb
push
dec
ja
add
inc
push
into
imul
data16
enter
xor
xchg
ror
jg
mov
outs
scas
retf
ficom
xlat
lock
ret
iret
imul
int
mov
xor
shl
jbe
daa
movs
sbb
xor
rcl
in
pushf
push
inc
mov
or
out
jmp
out
dec
mov
or
(bad)
(bad)
in
xchg
mov
shl
or
imul
mov
push
in
sbb
ret
das
test
pop
ss
mov
and
push
cld
imul
andps
jl
and
xor
(bad)
push
dec
ins
adc
sbb
sub
pushf
xchg
or
mov
dec
test
sbb
hlt
icebp
imul
dec
push
or
jo
loop
pop
xchg
dec
mov
and
and
push
mov
push
fucom
ja
imul
test
sbb
sar
int3
out
push
scas
lock
into
mov
mov
fnstenv
mov
out
fist
fsubr
cmp
or
inc
dec
dec
mov
sbb
(bad)
les
mul
in
jmp
sahf
jb
push
mov
adc
mov
sub
lock
dec
in
jbe
or
popa
jmp
mov
sub
fmulp
cmp
xchg
jp
jle
ins
ret
cmp
mov
mov
test
lods
pushf
(bad)
out
jp
imul
mov
dec
jmp
pop
or
jns
movs
adc
js
xchg
aam
(bad)
sbb
mov
retf
mov
jne
mov
cmc
xlat
sbb
(bad)
in
retf
sub
pusha
frstor
pop
sbb
imul
jle
pop
jg
jne
mov
cmp
jmp
or
mov
out
stos
(bad)
cmp
mov
std
rcl
lea
pop
fidivr
data16
scas
or
add
aaa
pop
(bad)
inc
in
mov
ret
loop
inc
ficom
push
imul
jo
jne
inc
mov
push
push
sti
lds
adc
lock
sbb
retf
cdq
jno
aad
xlat
add
sbb
test
aas
out
pop
daa
mov
pop
cmps
sbb
imul
pop
jne
scas
lahf
add
sub
jge
bound
loop
(bad)
popf
gs
cmp
dec
clc
call
cmps
jne
lock
add
lahf
sub
ss
not
int3
scas
mov
xchg
ins
push
pop
rcl
push
or
mov
mov
or
sub
mov
jne
jmp
xchg
js
mov
inc
adc
adc
pop
test
leave
scas
cmc
inc
ret
cdq
ja
add
shl
sub
pusha
mov
dec
mov
or
retf
mov
mov
(bad)
jmp
movs
pusha
sti
hlt
dec
retf
mov
adc
jnp
dec
ds
lea
movs
inc
cmp
call
add
retf
or
pop
imul
xor
ins
fistp
jo
fistp
loopne
leave
and
in
xor
jne
mov
mov
retf
xor
xchg
aaa
push
(bad)
rol
pushf
fs
call
test
push
cmp
dec
sbb
mov
mov
popa
mov
jno
inc
xchg
jae
cdq
fnstenv
pop
nop
inc
xchg
mov
aam
out
sbb
sar
sub
mov
fnsave
fiadd
mov
cmp
in
cmps
fnstsw
adc
sahf
adc
ret
or
adc
es
push
(bad)
in
jne
stos
jo
pop
scas
into
or
loopne
lahf
outs
outs
movs
jne
mov
retf
imul
cdq
je
jb
fiadd
addr16
xchg
aam
and
adc
push
sub
out
inc
adc
mov
fild
and
retf
jge
in
xor
rcl
js
or
pop
xchg
(bad)
jl
jg
mov
int
jmp
fcom
fs
clc
mov
out
jmp
xchg
dec
movs
adc
(bad)
fnstsw
scas
mov
push
loop
sbb
loop
add
xor
shr
or
add
sub
test
lock
push
fidiv
mov
int3
jae
cld
outs
mov
or
enter
add
bound
pop
xchg
push
loop
push
fild
fsub
ficomp
(bad)
pop
xchg
fistp
or
in
das
sar
aas
jle
fisttp
fs
pop
ss
scas
jp
push
int3
ss
ja
jo
jl
xor
ror
lahf
das
cvtps2pd
or
sub
pusha
push
push
mov
(bad)
shl
call
cld
ins
add
loope
faddp
dec
mov
push
xor
xor
xchg
loop
out
jnp
mov
(bad)
mov
je
fucomi
cmp
in
(bad)
dec
cwde
cmps
adc
push
push
fwait
(bad)
div
mov
sbb
dec
out
inc
loop
adc
add
adc
mov
sub
mov
(bad)
bsf
mov
stos
add
xor
cmp
mov
cmps
idiv
jb
(bad)
push
xor
jo
lea
inc
push
cmp
pop
inc
cmc
pop
test
push
(bad)
xchg
or
aam
stos
push
jns
js
cli
fwait
inc
(bad)
sbb
(bad)
mov
mov
fld
stos
icebp
pop
adc
xchg
push
loop
dec
add
in
xchg
ficom
cmps
(bad)
dec
mov
outs
adc
stos
xor
rcl
(bad)
in
pop
in
add
add
pop
and
sub
and
(bad)
sub
cmp
out
shr
sub
dec
pop
push
xor
aam
xchg
xchg
cwde
cmp
into
mov
dec
add
xlat
ins
cmp
test
fwait
(bad)
inc
jg
fidiv
jl
mov
out
sub
mov
sbb
call
hlt
jmp
std
push
add
mov
dec
aaa
mov
ss
add
sbb
out
cmp
sti
mov
sbb
frstor
jns
sti
in
sbb
ficom
pop
push
pop
xchg
bound
mov
pop
cmp
call
jns
in
adc
xor
adc
jmp
mov
test
(bad)
lock
clc
cld
mov
pop
ret
cmp
jnp
mov
inc
mov
pop
out
(bad)
(bad)
sbb
mov
jne
adc
sbb
adc
sub
cmp
mov
jnp
stos
inc
push
rcl
push
pushf
cmp
mov
stos
cmc
sub
push
ficom
jo
ret
adc
std
jle
xor
cmp
and
repnz
ins
xchg
nop
call
(bad)
jns
rcr
test
xchg
mov
test
mov
rol
push
push
arpl
rcl
xor
into
jl
sbb
pop
xor
lds
fbld
push
mov
inc
pop
sbb
out
stc
sbb
dec
ja
inc
jns
jle
mov
lock
mov
sub
and
mov
call
pushf
into
sub
mov
pop
movs
and
(bad)
call
cmp
and
std
fcomp
xlat
inc
or
fdivr
jle
loop
cmp
cmp
pop
mov
xchg
push
jge
ror
pop
in
push
xchg
add
bound
arpl
inc
ds
dec
ret
fsubr
adc
adc
dec
loope
push
(bad)
lods
mov
or
ds
jecxz
das
sbb
mov
test
jnp
mov
fst
imul
mov
call
sub
jle
adc
(bad)
jle
cwde
or
enter
pusha
ret
inc
or
pushf
fidiv
xor
loope
out
(bad)
mov
leave
stc
dec
mov
adc
sub
(bad)
(bad)
cli
pop
sbb
jns
fsubr
enter
iret
sbb
movs
sbb
(bad)
inc
cmps
mov
outs
push
lahf
or
push
mov
jg
add
cmps
rcl
daa
inc
aad
and
xchg
lods
pop
call
gs
mov
loop
les
scas
xchg
addr16
mov
sub
jns
inc
push
fcmove
cmps
pop
jp
or
adc
dec
lock
cmp
ins
lahf
lds
ins
xor
mov
mov
out
pop
sub
icebp
cdq
push
mov
pusha
jnp
cmp
loopne
(bad)
xchg
adc
pop
(bad)
mov
push
sahf
mov
inc
ret
(bad)
repnz
movs
pushf
movs
test
(bad)
push
adc
cwde
pop
xchg
sub
out
daa
jno
call
clc
bound
cmp
xor
loopne
xor
lods
(bad)
js
cdq
loope
fistp
retf
cli
lods
jle
cmp
sbb
dec
and
cmp
dec
mov
cmp
addr16
inc
movs
xchg
ins
cmp
shr
adc
and
inc
mov
push
pop
and
gs
mov
mov
aaa
jne
sub
ins
out
cmp
sahf
sub
pop
push
push
adc
scas
in
int3
adc
dec
or
sar
mov
mov
add
jp
out
push
es
mov
jle
adc
sar
outs
cs
push
call
inc
and
jge
inc
sub
inc
xchg
adc
sbb
jmp
out
jb
pop
jbe
push
mov
fild
arpl
push
movs
or
xchg
ret
inc
jnp
cmp
mov
xchg
movs
stos
out
adc
leave
js
iret
and
pop
inc
rol
and
clc
imul
pop
daa
in
xchg
call
int
fild
cmc
jno
outs
or
pop
cmp
jo
sbb
sub
icebp
out
push
movs
jno
jmp
or
stc
ins
and
pop
(bad)
jge
sub
enter
sbb
jb
pop
dec
lods
or
lock
leave
mov
lock
iret
loop
sbb
jmp
data16
cmp
mov
fld
xor
pop
pop
(bad)
ds
out
repnz
(bad)
mov
aas
mov
push
(bad)
mov
inc
jne
repnz
std
inc
(bad)
out
mov
jmp
not
cmp
int3
outs
and
lds
icebp
xchg
push
mov
or
out
inc
cdq
fiadd
test
mov
or
cld
push
push
xor
push
fsub
push
(bad)
lods
mov
scas
out
inc
es
pushf
cwde
jo
mov
enter
inc
popa
movs
loope
(bad)
jo
loop
adc
pop
adc
or
add
pop
jmp
shr
pusha
sbb
data16
mov
daa
fwait
sub
xchg
scas
lods
mov
jecxz
js
int3
cmp
inc
(bad)
in
ds
lods
push
sahf
(bad)
stos
scas
xor
ins
inc
pop
jge
inc
push
sub
ja
add
jns
push
mov
cmp
js
dec
adc
add
dec
out
jge
or
addr16
inc
lds
(bad)
cdq
sbb
cld
aas
cmp
push
mov
mov
fsubr
inc
adc
in
sub
lahf
mov
repnz
repz
mov
les
push
jmp
push
retf
xchg
bound
(bad)
jg
clc
movs
fnstenv
xor
in
adc
dec
adc
inc
loop
pushf
fisttp
mov
jne
inc
adc
ins
mov
or
aad
out
scas
ret
mov
sub
mov
out
fcomp
dec
out
push
add
aam
inc
test
dec
jae
xchg
pop
mov
and
mov
adc
pop
jl
retf
lahf
mov
aad
popa
cmp
outs
fucom
xchg
mov
mov
icebp
lods
dec
sub
mov
and
(bad)
push
jmp
pop
stos
bound
scas
je
adc
xor
repnz
es
adc
inc
cmc
mov
and
mov
clc
(bad)
xor
xor
and
cmp
push
adc
pop
nop
xchg
cld
(bad)
sub
in
shl
pop
mov
fidiv
fistp
or
sbb
mov
retf
cmp
test
xchg
add
or
and
xchg
inc
jbe
inc
mov
lods
sbb
mov
mov
mov
leave
adc
xacquire
sbb
pop
mov
mov
jmp
jo
movs
test
rcr
adc
pop
enter
(bad)
sti
mov
add
cwde
movs
int
(bad)
iret
cmp
nop
jp
dec
xchg
retf
adc
lods
sbb
mov
(bad)
adc
xchg
mov
aas
out
pop
dec
lahf
jge
mov
inc
lds
jl
pop
cld
ins
sub
enter
or
dec
inc
mov
lods
adc
jp
mov
jb
pop
pop
and
xchg
fadd
xor
out
lock
lahf
lock
fcom
outs
or
in
fcom
dec
scas
ins
cld
lea
sub
jnp
fadd
movs
popa
adc
pop
retf
mov
je
jno
dec
mov
sti
pop
je
jecxz
sbb
dec
inc
pop
les
test
push
push
inc
mov
push
fs
ds
push
fisttp
dec
inc
popf
xchg
test
test
in
push
test
lods
ss
pop
sbb
test
movs
movs
in
(bad)
jb
jae
and
cdq
pop
gs
mov
mov
lods
jmp
pop
mov
mov
xchg
mov
add
cmp
and
out
xchg
pop
inc
jle
add
push
dec
retf
dec
jbe
in
gs
sbb
scas
dec
push
push
jae
add
jl
in
mov
add
jmp
call
ins
mov
fcmovbe
sbb
mov
test
cmp
mov
or
or
add
inc
loope
lods
js
dec
push
aam
ss
inc
nop
into
mov
inc
dec
lods
or
xchg
sub
xor
int3
lods
sbb
out
rcl
jg
xor
fwait
cmp
hlt
aad
hlt
ins
pop
pop
cwde
sub
retf
xchg
scas
gs
cdq
loopne
inc
sbb
push
xor
call
mov
hlt
out
repz
sub
ins
adc
mov
adc
add
jl
pop
push
inc
cmp
inc
test
test
jbe
push
add
cmp
push
pop
and
mov
sub
ret
and
scas
data16
sub
sbb
sbb
fst
jbe
fs
jae
add
xor
rcl
jecxz
sti
inc
inc
xchg
(bad)
ins
pop
dec
sub
jmp
push
aas
leave
xchg
mov
mov
cli
push
in
mov
xchg
fisub
retf
mov
popa
jbe
dec
push
mov
retf
xchg
inc
std
mov
pop
gs
mov
adc
add
jo
pop
shr
mov
pop
mov
hlt
pop
out
sub
inc
daa
or
pop
mov
jne
popa
jno
xor
xchg
adc
sar
bnd
mov
mov
dec
loop
loopne
ret
mov
mov
ss
xor
inc
add
addr16
xchg
out
and
add
inc
pop
pop
mov
push
cmps
stos
aas
iret
inc
fst
(bad)
cmc
mov
fst
leave
or
xor
pusha
mov
push
and
rol
add
mov
ds
mov
xlat
and
xchg
mov
mov
out
pop
push
aas
sbb
xchg
or
or
cmp
dec
push
nop
jecxz
test
or
adc
adc
repnz
mov
lods
add
or
push
or
loope
cmp
mov
clc
mov
ss
jo
ret
or
ins
push
fsub
sbb
cmp
(bad)
dec
lods
nop
mov
es
push
mov
jmp
dec
mov
cmps
dec
push
cmps
xchg
and
mov
test
cmps
in
pushf
clc
pop
retf
pusha
jle
mov
adc
into
movs
and
cmps
add
popf
adc
xor
xor
push
js
scas
enter
sti
cwde
cdq
retf
(bad)
fsubr
sub
movs
sti
mov
pop
mov
pop
loop
dec
push
xchg
out
or
nop
(bad)
push
retf
test
pop
mov
push
xchg
sbb
mov
ins
mov
cmps
push
daa
sub
test
(bad)
movs
and
push
(bad)
ret
jae
xchg
dec
cdq
(bad)
loope
gs
fst
lods
call
retf
cli
iret
sub
arpl
inc
inc
xchg
pop
imul
pop
loop
lods
mov
stc
in
popf
rol
xlat
inc
cmp
mov
push
add
(bad)
movs
sub
mov
jl
push
jne
es
(bad)
div
lods
ja
scas
mov
fcom
sbb
js
and
xchg
test
sbb
lds
inc
xchg
retf
inc
mov
push
dec
fadd
aas
mov
sub
loop
xor
sub
lds
or
cmp
mov
hlt
mov
mov
sub
call
nop
aad
and
jo
and
fstp
pusha
movs
sbb
dec
inc
movs
or
inc
hlt
mov
push
lahf
hlt
shr
mov
icebp
(bad)
leave
pop
mov
adc
sub
push
or
mov
and
mov
push
sar
std
popa
inc
in
xchg
push
retf
dec
add
adc
cdq
sub
xor
or
jmp
or
pop
jp
daa
iret
cmp
jg
xchg
ja
and
fisub
imul
fwait
jp
jmp
daa
inc
(bad)
fisub
ret
pop
int
mov
dec
das
or
jbe
out
push
hlt
aas
and
cmp
pop
jbe
sar
sub
mov
enter
pusha
push
and
sub
js
mov
or
jb
sbb
mov
push
lds
outs
dec
mov
(bad)
mov
pop
fnstsw
fld
sbb
fwait
mov
mov
lods
jb
cmp
leave
imul
pop
jnp
mov
sub
push
pop
lock
pop
pop
aad
sbb
in
test
(bad)
dec
and
shr
das
pop
sbb
and
daa
sti
test
mov
push
out
shl
arpl
clc
adc
push
xchg
mov
mov
in
pop
pop
add
dec
cmp
xor
(bad)
aas
fs
sub
xlat
adc
jecxz
xor
xor
and
retf
mov
push
leave
mov
aaa
test
mov
dec
push
jle
mov
push
je
inc
cs
push
out
add
mov
push
int
sahf
ins
fbld
mov
das
jmp
add
add
fdiv
sbb
xor
ret
int3
popa
out
lds
mov
(bad)
sbb
push
inc
(bad)
into
les
adc
push
outs
adc
fsubr
dec
push
es
in
cmps
mov
imul
pop
lods
sbb
scas
ret
hlt
into
repz
sbb
mov
cdq
inc
mov
jmp
or
cld
sbb
jmp
mov
xchg
cdq
test
inc
out
test
setge
add
mov
dec
and
fcom
jne
adc
nop
jge
mov
call
push
inc
jne
(bad)
dec
add
data16
mov
ds
dec
(bad)
loop
push
in
cli
mov
popf
adc
int3
fistp
xor
cmp
(bad)
sbb
push
push
ret
push
data16
scas
and
out
movs
scas
mov
mov
lods
and
out
cmc
add
divps
inc
add
sbb
add
fdiv
inc
and
dec
jp
cmp
dec
xor
dec
(bad)
pop
push
dec
lahf
jecxz
mov
dec
hlt
shr
sub
dec
loope
leave
scas
lods
push
adc
mov
dec
pop
jg
cmp
not
pop
inc
push
cdq
mov
fld
icebp
push
cmp
je
xchg
cmp
cmp
adc
mov
je
in
add
jl
cwde
fs
je
jecxz
or
pop
pop
arpl
push
fwait
movs
cmps
fidiv
dec
push
and
sub
(bad)
lds
cmp
jns
inc
fcomp
xchg
push
rcl
(bad)
inc
jb
pop
ins
push
ds
mov
push
sbb
fdiv
dec
(bad)
(bad)
outs
test
fmul
xchg
ins
pop
sbb
fdiv
ss
sbb
imul
push
inc
or
imul
push
pusha
shl
mov
jmp
into
mov
jo
dec
jne
int
je
shr
mov
mov
adc
daa
aam
shl
mov
ror
scas
scas
cmps
xor
adc
sti
sbb
outs
shl
in
shr
daa
adc
repnz
fild
sbb
fisub
sar
xor
add
int3
xchg
xor
jo
in
enter
dec
and
or
or
and
gs
mov
psubd
cdq
push
xchg
adc
std
pop
pop
pop
or
mov
in
cmc
dec
aam
dec
iret
cmp
sbb
sbb
sub
push
int3
sbb
jg
jmp
push
in
jbe
sbb
sbb
or
push
(bad)
iret
inc
push
sbb
pushf
push
ret
pop
popf
xlat
push
dec
jp
dec
pop
int3
enter
push
loop
pop
cli
leave
dec
mov
add
jns
imul
and
cmc
adc
cmps
add
mov
jo
fiadd
mov
jle
dec
jecxz
pop
rol
adc
ins
cdq
pushf
xchg
fmul
icebp
dec
pop
sub
or
(bad)
cmp
sbb
xchg
or
push
pop
loopne
mov
cwde
add
out
(bad)
mov
mov
lock
pop
and
mov
mov
push
in
add
xlat
adc
sub
jmp
mov
push
movs
and
or
fist
dec
imul
ins
je
jb
add
jnp
test
addr16
mov
add
add
ins
cdq
mov
adc
push
popf
sub
jae
sbb
test
pop
adc
inc
jmp
rcl
push
cmps
popf
cmps
ret
ss
lds
outs
xchg
sub
or
ret
mov
loopne
add
jmp
mov
arpl
aam
fisubr
sbb
int3
push
xchg
or
adc
fist
dec
mov
movs
ins
mov
inc
xchg
lahf
ins
popa
retf
(bad)
fimul
sub
les
jns
sub
xor
(bad)
(bad)
in
dec
jbe
repnz
xchg
push
dec
cli
leave
sub
sbb
aam
and
dec
pushf
aaa
sar
inc
ret
scas
xchg
adc
out
aad
push
mov
xlat
xor
pop
arpl
mov
lods
pop
je
leave
aam
add
mov
mov
leave
sahf
mov
jge
and
(bad)
out
pop
push
xor
(bad)
mov
or
and
sub
cli
dec
push
fs
iret
(bad)
pop
sahf
pslld
pop
mov
inc
pop
aaa
cmp
rcl
repz
jmp
xchg
push
loope
ins
pop
mov
jbe
dec
add
mov
hlt
mov
fst
jno
xchg
test
arpl
retf
loope
loop
add
sbb
in
div
inc
or
xchg
neg
push
xor
dec
or
call
or
push
test
ja
retf
add
cld
push
std
(bad)
jnp
cli
mov
mov
push
xchg
mov
stos
mov
mov
out
push
xchg
fidiv
mov
mov
movs
pop
and
out
push
adc
pop
or
repnz
sahf
in
int
fld
outs
in
mov
add
(bad)
xchg
dec
sbb
push
fldenv
mov
push
jno
pop
lods
fldenv
cdq
int
push
fsubr
jmp
shl
cmps
adc
mov
or
not
out
mov
in
cmp
sub
sar
cdq
or
xchg
cmp
mov
adc
cs
int3
lods
sub
je
into
lock
arpl
pop
jl
in
call
xchg
pop
dec
mov
dec
and
sbb
or
in
add
rcl
jnp
fisubr
xchg
jle
movs
add
arpl
fild
mov
stos
inc
dec
inc
jecxz
pop
jno
mul
xor
xchg
push
inc
outs
lods
lods
mov
std
rol
sahf
pushf
rcl
or
mov
sbb
cmp
adc
aad
clc
pop
mov
stos
test
jmp
jmp
push
lods
adc
sbb
clc
int
jns
pop
push
repz
cmps
lds
add
out
scas
imul
fisubr
outs
push
int
out
retf
popf
(bad)
dec
fcom
dec
jne
int3
mov
int3
jecxz
mov
sub
inc
mov
call
out
sbb
adc
stc
sub
sahf
and
xor
add
mov
pop
pop
popa
lods
push
repnz
cmp
adc
fisubr
mov
sar
scas
xchg
popa
retf
add
dec
fadd
neg
lock
fs
jo
pusha
fwait
jmp
gs
xchg
cwde
xchg
dec
fwait
jno
xchg
and
lahf
loope
adc
pop
mov
dec
cwde
inc
and
not
xchg
xchg
sub
lods
movs
adc
cs
gs
stos
call
inc
adc
rcr
sub
xchg
std
hlt
(bad)
sub
mov
xor
pusha
das
push
cmp
in
or
dec
into
xchg
or
push
ds
xchg
frstor
sti
cli
push
retf
imul
add
(bad)
sbb
pop
or
cmps
add
inc
in
sbb
mov
xchg
mov
or
mov
cmp
cmp
sub
pop
pop
mov
(bad)
invd
rcr
mov
lahf
pop
popa
stc
cdq
loope
xchg
inc
retf
pop
and
inc
test
in
mov
pusha
call
adc
pop
repz
pusha
(bad)
lds
pop
cwde
mov
and
xchg
arpl
mov
add
fdivr
sbb
mov
(bad)
icebp
mov
or
mov
adc
std
(bad)
movs
mov
dec
sbb
pop
jmp
push
mov
or
aam
arpl
cmp
fsubr
out
fwait
dec
push
adc
push
push
dec
pop
fsub
push
dec
push
add
xchg
mov
xchg
jne
xor
rcl
outs
scas
lods
movs
test
in
sbb
mov
ret
pop
sahf
pop
rcr
jns
inc
clc
inc
int
and
outs
sub
inc
frstor
mov
scas
jae
into
add
cmps
inc
dec
dec
inc
cwde
in
repz
pushf
repnz
fsubr
into
ins
movs
cmp
add
dec
cs
mov
cmp
inc
dec
(bad)
stos
out
mov
and
ret
retf
ins
or
sbb
out
sub
test
sti
in
aam
call
mov
cdq
jnp
sbb
loope
test
fisubr
out
jecxz
in
loope
fsub
jg
fwait
xor
imul
xchg
push
and
sub
add
add
pushf
in
iret
add
cmp
rcr
cmp
xor
stc
and
mov
mov
pop
sbb
sub
popf
pushf
mov
xchg
mov
fadd
push
cmp
hlt
stos
xchg
push
adc
imul
int3
mov
cmp
and
out
test
cmps
pushf
movs
jmp
push
xchg
call
push
and
popf
(bad)
mov
imul
fimul
imul
cmp
xchg
aas
(bad)
loopne
inc
and
mov
and
loope
loop
add
dec
lock
enter
cdq
es
or
xchg
aad
sub
movs
push
add
push
nop
cmp
div
stos
xor
cmp
addr16
xchg
jae
add
imul
push
xchg
arpl
pop
test
jnp
dec
add
adc
and
push
mov
scas
hlt
cmp
enter
mov
cdq
movs
(bad)
xor
cmp
jbe
(bad)
(bad)
ss
ins
xchg
nop
repnz
adc
test
xor
pop
push
rcl
pop
cmp
add
jb
iret
clc
das
adc
cs
and
pushf
in
fcom
xchg
icebp
or
dec
pop
(bad)
pop
retf
cmp
pop
fucom
popf
imul
xchg
sbb
(bad)
gs
aaa
leave
inc
int
jecxz
outs
inc
adc
mov
push
outs
mov
mov
test
mov
cmp
mov
xor
retf
mov
in
aas
aaa
mov
lea
call
push
inc
cmp
dec
xor
scas
lea
cdq
iret
pop
jmp
mov
rcl
iret
clc
loopne
xchg
fadd
fstp
or
push
test
test
adc
push
or
add
sahf
mov
ret
push
mov
fisttp
pop
mov
idiv
pushf
mov
xchg
and
stos
xor
test
cmp
xchg
xor
dec
ret
imul
adc
ss
iret
mov
dec
mov
sub
mov
jmp
addr16
dec
xchg
push
adc
or
icebp
xor
fs
pusha
ins
inc
dec
mov
push
and
test
and
pop
add
adc
pop
rcr
out
xchg
aaa
je
outs
jns
iret
fisubr
mov
movs
cmp
std
jae
out
(bad)
jge
dec
sub
addr16
in
inc
enter
call
mov
pop
lock
std
(bad)
jmp
in
ja
shl
adc
cmp
pop
test
inc
cmp
icebp
xchg
dec
add
sbb
sub
les
dec
mov
jmp
bound
sub
loopne
or
push
aam
scas
shr
add
and
pop
and
cmp
mov
cmps
xchg
inc
add
fisub
jmp
and
sbb
pop
and
sbb
sbb
(bad)
movs
pop
lahf
pop
icebp
cld
test
loop
hlt
movs
sub
xlat
mov
call
and
in
ja
pop
sub
xor
stc
mov
clc
movs
inc
fiadd
cmp
hlt
xor
adc
std
repnz
(bad)
sbb
mov
gs
add
sbb
cmove
iret
jns
xchg
add
jae
rcl
and
push
test
pop
mov
add
repnz
rol
mov
dec
adc
cwde
xlat
lahf
xor
or
inc
outs
inc
mov
push
das
push
popa
adc
enter
xor
retf
in
std
rcr
in
mov
test
push
in
test
(bad)
and
das
outs
mov
aam
mov
mov
pop
int3
repnz
in
sub
xchg
sbb
xor
cmp
push
xor
push
stos
adc
and
cmp
mov
(bad)
adc
pop
in
sub
cmp
mov
and
jmp
sub
mov
pextrw
sbb
frstor
xchg
inc
aam
add
cmp
xchg
in
out
cmp
out
in
xchg
xchg
cmp
loopne
jl
dec
popf
adc
jae
outs
inc
pop
pop
cs
dec
and
push
jecxz
mov
cmp
data16
in
cmp
mov
mov
pop
inc
cmc
jbe
sbb
ffree
pop
or
sub
adc
sbb
adc
cmp
inc
or
out
repnz
sub
test
je
rcl
imul
push
stos
push
adc
jbe
dec
add
jge
push
mov
cmp
adc
icebp
pop
push
loopne
call
sbb
das
push
fdivr
mov
shl
test
and
dec
loope
sub
adc
ret
data16
xchg
adc
aas
sbb
repz
jnp
dec
xor
inc
in
mov
pop
jae
and
enter
stos
cmp
or
or
jbe
popa
fnstcw
(bad)
rol
std
jecxz
fdivr
inc
push
cmp
push
mul
push
jno
js
sub
pop
iret
xlat
cmps
jle
ror
dec
or
scas
pop
scas
sub
or
arpl
adc
pmaddwd
lea
xchg
pop
adc
sbb
pop
dec
and
pop
and
and
std
sti
and
cs
int
aas
mov
frndint
push
pop
xor
ret
cmc
test
fs
cmp
mov
mov
das
xor
fisttp
(bad)
hlt
mov
or
xlat
sub
sbb
(bad)
mov
and
mov
xchg
adc
or
adc
popf
fcom
pop
push
add
xlat
xor
das
add
bound
gs
mov
ins
mov
cmp
sub
cmp
cli
vmovdqa
jmp
dec
jae
daa
cmps
sub
xchg
jge
mov
lods
sbb
pop
mov
cmp
les
shr
push
adc
stos
pusha
sbb
cld
xor
lock
cli
mov
sub
sub
outs
xchg
jno
ss
scas
or
sbb
lods
jne
dec
or
mov
dec
mov
ins
jnp
out
xchg
mov
stc
shr
mov
mov
ss
sub
dec
int3
add
das
cmp
adc
pop
push
aad
ss
inc
inc
ins
movs
pop
mov
mov
je
inc
pop
xchg
add
push
fdivr
out
loope
les
sbb
nop
loopne
add
lds
div
xchg
xchg
out
xor
cmp
push
push
les
call
inc
xchg
(bad)
pop
test
and
inc
jge
xchg
xchg
xchg
cld
push
push
shl
pop
popa
adc
jle
(bad)
std
mov
pop
xchg
cmc
inc
and
push
add
pop
mov
int3
pop
inc
test
cmp
xor
add
jb
xor
and
loope
popf
inc
cmps
bnd
repz
pushf
lds
sti
xor
shr
movs
div
ret
jg
jmp
call
xchg
and
pop
ins
adc
fadd
fidiv
mov
shr
mov
and
and
or
or
push
jb
jmp
jmp
sub
inc
jge
jecxz
pop
scas
dec
ds
fisttp
pop
(bad)
leave
or
mov
(bad)
std
fisubr
stos
imul
clc
sbb
inc
test
add
xchg
mov
sbb
es
imul
sbb
mov
push
sub
data16
mov
(bad)
fwait
cdq
ins
pop
jb
ja
retf
mov
loope
jo
pusha
aas
pop
pop
mov
add
inc
pushf
jo
mov
pop
mov
ja
mov
call
or
dec
rcl
add
in
mov
mov
push
cmp
clc
sub
movs
push
push
sar
fwait
and
fsubr
jge
sbb
repnz
dec
ins
xor
push
(bad)
adc
(bad)
aaa
ror
lahf
lahf
jne
inc
push
jle
std
add
test
pop
pushf
pusha
adc
cmps
adc
mov
inc
and
xlat
cmp
inc
out
mov
push
xlat
jl
loop
push
sbb
data16
bound
ins
popa
scas
lods
xchg
sbb
xchg
ja
xchg
cmps
pop
test
xchg
sahf
je
(bad)
and
or
call
mov
and
cmc
lods
or
and
pop
outs
mov
cmp
(bad)
cmp
cmp
shl
arpl
jecxz
mov
mov
shl
push
adc
dec
leave
add
pop
test
xor
or
and
inc
(bad)
jge
loop
jb
jbe
jmp
fistp
push
(bad)
rcr
sbb
jle
shr
mov
mul
mov
fs
add
xor
das
mov
adc
js
mov
mov
push
std
inc
stos
lock
push
repz
ror
or
jle
inc
es
adc
sub
push
test
ret
stc
cmp
push
scas
jge
jns
clc
sqrtps
out
jb
mov
cmp
sti
mov
lods
fldenv
inc
out
and
pop
ds
jp
xor
mov
test
and
into
fs
inc
mov
dec
mov
(bad)
aaa
retf
mov
in
xchg
ror
retf
mov
(bad)
cdq
rol
out
ret
xor
ja
dec
adc
mov
aad
add
rcr
fs
fsubr
int3
loopne
movs
in
and
jl
fwait
push
fsub
push
mov
aas
into
add
adc
movs
adc
xchg
adc
or
ss
mov
xchg
adc
mov
mov
xor
test
sub
(bad)
mov
fiadd
lea
push
mov
fimul
shl
mov
mov
mov
aam
mov
jbe
dec
lahf
fwait
call
loope
and
or
cmp
mov
or
aad
dec
shr
imul
das
test
jo
neg
xor
inc
dec
push
jl
fwait
and
mov
mov
lock
mov
cmps
adc
xor
loope
in
and
dec
xor
or
jp
inc
adc
mov
push
push
pop
dec
scas
xchg
sub
shl
aad
into
jbe
in
lahf
ror
mov
xchg
scas
and
aaa
mov
inc
sbb
addr16
sub
sar
mov
mov
into
jbe
cmc
ficom
xchg
inc
rcr
(bad)
fnsave
lds
ins
(bad)
mov
fld
cmps
and
cli
punpckldq
inc
in
repz
leave
xlat
inc
out
mov
js
pop
mov
in
jecxz
iret
fistp
test
sbb
mov
gs
add
ror
addr16
push
or
adc
lds
push
stc
mov
xchg
test
add
dec
test
in
or
pop
mov
or
xor
sub
loopne
xchg
(bad)
adc
or
pop
xor
adc
or
dec
pop
hlt
pop
int3
xchg
sub
pop
jae
sbb
dec
mov
(bad)
lods
mov
ret
adc
mov
xor
xor
jle
jmp
pop
jmp
mov
cmp
fcmovb
ficom
fwait
les
xor
jb
mov
sar
push
pusha
dec
ret
(bad)
push
lds
and
fcomp
das
jbe
jl
pop
fcomp
mov
add
popf
shr
pop
fcomp
pop
cs
outs
add
in
xchg
mov
sbb
xchg
add
or
jmp
int
out
rol
sub
adc
jb
sub
adc
jp
call
cmps
sbb
mov
mov
cmp
adc
imul
jmp
call
add
dec
xor
pusha
adc
sbb
xchg
jo
sbb
stos
call
or
jo
ret
jns
cld
gs
sbb
jmp
icebp
xchg
out
retf
jo
add
mov
pop
in
stc
pop
daa
popa
shl
jp
lods
push
mov
lds
xor
shl
lahf
xchg
dec
mov
repz
dec
inc
lock
dec
adc
or
gs
xchg
cwde
mov
and
test
test
ds
inc
pop
mov
mov
call
push
movs
push
movs
inc
aas
jno
cdq
jnp
sti
dec
xchg
jle
pop
cmps
jmp
mov
out
loop
(bad)
(bad)
and
test
enter
call
ins
ja
or
mov
pop
and
sub
shl
sbb
cmps
ins
fwait
(bad)
jnp
aam
ja
push
mov
mov
mov
inc
daa
mov
shl
icebp
pop
nop
mov
scas
cmps
xchg
test
inc
cmps
or
add
and
pop
cwde
fwait
and
cmc
pop
shl
pop
dec
xchg
out
add
jo
xadd
std
std
imul
cmp
out
pop
repnz
lock
lds
or
xor
loop
add
cmp
mov
mov
xchg
inc
push
loopne
mov
adc
mov
dec
leave
iret
pop
ss
pop
std
pop
ret
add
add
gs
push
aam
sbb
pop
aaa
inc
jg
jb
cmp
fbstp
pop
push
outs
cmp
xchg
loopne
push
idiv
loopne
daa
call
mov
jmp
bnd
addr16
mov
mov
mov
idiv
fild
sbb
sbb
inc
ja
lahf
fild
pusha
and
xor
sar
jnp
in
jbe
dec
xchg
mov
cmp
retf
xor
xor
sub
retf
push
cld
dec
sbb
jno
pushf
mov
je
pushf
mov
mov
aas
cmps
dec
sub
pop
mov
push
push
xchg
cmp
ins
mov
aad
pop
and
inc
(bad)
xor
push
push
(bad)
test
ins
jb
ins
in
arpl
or
ins
retf
jne
xchg
es
cmp
(bad)
test
aas
imul
adc
test
add
(bad)
inc
pop
inc
dec
retf
fs
sub
push
and
in
mov
fs
fld
scas
nop
loopne
lock
mov
jle
ins
pop
pop
ja
cmp
mov
pop
movs
mov
xchg
sbb
ss
jno
fsub
pop
inc
inc
add
data16
or
mov
es
in
xor
xchg
fnstsw
das
gs
je
das
dec
add
ss
inc
mov
jp
ret
repz
push
lods
int
mov
in
lea
sbb
fs
in
inc
cmp
add
leave
cmp
(bad)
jb
push
nop
pop
js
jle
xchg
or
call
pop
std
jecxz
mov
jecxz
mov
jo
(bad)
xor
in
and
in
mov
(bad)
mov
icebp
dec
enter
mov
and
mov
lahf
jp
mov
pusha
push
hlt
stos
inc
fwait
retf
scas
jle
sub
jne
(bad)
cld
(bad)
fwait
xchg
xchg
and
not
dec
int
out
bound
and
ins
dec
xchg
lods
pop
fs
es
fcomp
and
enter
mov
adc
push
js
movs
cmc
movs
punpcklwd
(bad)
adc
xor
jae
bound
pop
xor
in
jae
int
xchg
hlt
in
pop
inc
mov
lea
jge
xchg
pusha
xor
xor
or
dec
jp
fsubr
frndint
push
fstp
sbb
fadd
jl
leave
loopne
icebp
call
cdq
adc
scas
pop
mov
mov
inc
mov
fisttp
cdq
icebp
int
push
mov
loop
mov
call
ss
pop
jecxz
ds
jb
out
adc
dec
jmp
int
push
inc
stos
or
ss
ret
aad
push
add
les
mov
out
adc
ins
push
sub
and
hlt
(bad)
push
jnp
aaa
jbe
or
or
sbb
(bad)
sbb
cli
cmps
mov
out
mov
call
dec
mov
out
mov
scas
push
(bad)
jge
in
int
addr16
dec
inc
jl
fstp
mov
mov
out
fldenv
xor
test
xor
jne
mov
inc
inc
dec
fnsave
ficomp
lea
cmp
add
jno
lods
xor
ffree
sbb
adc
xchg
cmc
cwde
retf
into
hlt
mov
pop
stos
fsub
dec
fidiv
dec
mov
(bad)
mov
aad
dec
pop
enter
mov
(bad)
push
or
movs
ss
or
ins
or
enter
and
jmp
int
stos
mov
inc
ja
clc
mov
int3
adc
pop
fisttp
cmp
(bad)
push
aam
and
mov
mul
ins
daa
inc
je
or
test
xor
ins
loopne
dec
les
cwde
jns
test
xor
repz
inc
xor
adc
mov
je
push
add
(bad)
loop
das
mov
jns
sub
rol
or
jp
fcomip
jl
popf
cmovg
retf
sahf
xchg
cs
sub
and
adc
(bad)
in
cmp
mov
inc
push
add
inc
jnp
mov
push
add
mov
(bad)
je
cs
inc
(bad)
call
ret
gs
mov
or
adc
shl
fwait
icebp
mov
mov
mov
ret
lods
mov
pop
jno
push
int
out
call
push
sub
inc
jno
out
stos
cld
arpl
ret
ret
fild
dec
out
(bad)
xchg
(bad)
cmp
cmc
inc
sbb
js
loop
out
mov
mov
lea
mov
mov
aam
clc
cmps
adc
in
push
mov
jg
bndstx
mov
mov
sti
scas
data16
arpl
cmp
repnz
adc
cmps
mov
ja
inc
xor
or
push
cwde
sub
popf
cmp
in
cmp
add
fcmovnbe
mov
dec
aam
cmps
js
xchg
movs
mov
sbb
lods
xlat
(bad)
xor
inc
jecxz
pop
cwde
mov
mov
pop
sti
mov
and
ror
mov
bound
inc
dec
adc
retf
xchg
ss
int3
ret
mov
outs
xor
mov
stc
pop
fstp
xchg
add
cld
pusha
shl
stos
mov
call
and
rcr
ins
jmp
add
test
and
or
call
leave
adc
sbb
jle
not
jmp
ror
add
retf
stos
and
mov
daa
push
cdq
jbe
std
mov
in
ret
or
sbb
jne
aas
or
retf
mov
das
mov
mov
dec
push
je
out
fnstsw
lods
or
jle
cli
in
out
mov
jbe
movs
std
adc
rcr
xchg
xchg
fnstsw
dec
imul
jl
push
rcr
dec
lahf
inc
sub
cli
clc
adc
pop
jge
scas
mov
out
xchg
leave
in
mov
xchg
mov
jns
mov
dec
popa
or
mov
adc
sub
lahf
jg
outs
push
out
lock
or
inc
sbb
adc
lods
(bad)
cld
mov
(bad)
(bad)
(bad)
out
xchg
mov
jmp
(bad)
dec
mov
mov
mov
cmc
imul
fidivr
js
cmc
mov
sahf
mov
sbb
(bad)
cdq
xchg
pop
mov
je
sub
xor
xor
cmp
and
sti
add
imul
xchg
sbb
(bad)
int3
cmps
or
std
adc
mov
(bad)
mov
xlat
dec
je
sahf
ins
xlat
jae
mov
outs
(bad)
or
pushf
and
push
sti
ds
mov
sti
jae
xchg
cmp
fstp
test
pop
out
inc
mov
pop
cld
pop
scas
add
test
push
out
not
out
xor
hlt
ins
and
xor
add
push
pop
ror
mov
pushf
and
cmps
jns
adc
sub
adc
movs
dec
inc
cdq
jp
xchg
in
mul
movs
mov
lods
out
sbb
lds
add
jnp
rcl
mov
ss
adc
push
(bad)
je
xchg
cdq
dec
repz
mov
inc
jl
aas
aad
mov
ja
xor
in
imul
push
sbb
test
stos
pop
cmp
mov
sub
push
mov
or
push
mov
fisub
and
in
mov
sbb
add
pusha
jno
push
rol
xor
loope
nop
loopne
jne
ror
(bad)
pop
cmp
test
cmp
pop
cmps
mov
out
repz
jns
test
jle
mov
adc
inc
loop
ins
fisubr
mov
sar
inc
and
mov
xor
mov
xchg
mov
in
(bad)
pop
(bad)
mov
push
push
in
adc
mov
jp
adc
js
retf
cld
nop
adc
sub
mov
clc
rcl
pop
into
and
jns
ret
xchg
stos
mov
add
ret
int3
sti
aas
sbb
add
xchg
imul
lahf
clc
push
stc
shl
mov
fsubr
add
mov
cmp
in
in
adc
aam
jg
cmc
mov
inc
mov
inc
loopne
or
cmps
bound
mov
mov
cdq
jge
xor
mov
jmp
sar
push
jle
xor
imul
stos
sbb
in
add
and
test
add
test
popa
xchg
and
out
in
and
dec
(bad)
mov
lahf
jno
iret
xchg
call
clc
dec
push
cmps
push
sbb
les
out
cmp
inc
and
or
xchg
inc
and
and
jmp
sub
test
in
cwde
pop
and
add
in
icebp
dec
mov
sub
mov
imul
mov
mov
outs
dec
mov
sti
mov
mov
fst
jg
repnz
in
xchg
movs
pop
movs
sub
jbe
fisttp
in
xchg
fsubr
push
pop
dec
das
push
cs
sub
sub
mov
enter
test
int3
js
mov
or
gs
add
add
sbb
(bad)
push
jae
sbb
test
jnp
xor
(bad)
movs
push
cdq
(bad)
cs
pop
fcom
mov
adc
inc
stos
movs
xchg
mov
mov
fstp
or
inc
jmp
stos
jbe
mov
mov
test
jecxz
mov
cmp
outs
nop
loope
aam
push
xchg
push
mov
test
push
ror
dec
(bad)
ror
iret
dec
fidiv
adc
ret
idiv
sbb
dec
xchg
mov
loope
push
xchg
push
fs
adc
pop
push
in
sub
into
and
fisub
pusha
mov
push
mov
shr
arpl
add
and
out
mov
shl
xlat
mov
jp
stc
xor
scas
adc
pop
mov
mov
dec
(bad)
mov
cmp
aaa
pop
shl
test
je
xchg
fst
aas
es
mov
push
inc
push
loope
(bad)
mov
retf
add
sahf
mov
xor
sub
xor
pop
gs
not
fstp
neg
retf
scas
arpl
xchg
dec
inc
sbb
xlat
jns
icebp
push
inc
fwait
mov
out
cmp
fst
pop
sbb
movs
inc
mov
imul
aaa
dec
aam
aas
cmps
mov
and
dec
sbb
fucomip
inc
call
sub
psrlw
xchg
ret
mov
adc
jg
mov
icebp
mov
mov
outs
xor
inc
or
and
cli
sbb
pusha
mov
add
fld
pop
cmp
je
imul
sti
add
xchg
and
sub
(bad)
retf
daa
mov
cli
movs
pop
pop
call
cmp
popf
cmp
into
inc
loopne
push
icebp
popa
jl
cmp
call
dec
scas
dec
movs
addr16
xor
addr16
jg
or
loope
in
jno
lock
rol
jmp
jge
push
movs
push
hlt
mov
xchg
fmul
mov
xchg
mov
rcr
cmp
xor
(bad)
je
jns
cmp
xor
mov
lds
and
adc
sbb
jbe
daa
movups
jmp
push
std
dec
mov
loopne
push
cwde
ja
mov
mov
mov
enter
lods
retf
test
ja
dec
xor
xor
pop
pop
cs
es
mov
xor
dec
arpl
repz
(bad)
adc
xchg
and
movs
xchg
(bad)
aad
or
inc
sub
or
and
scas
xor
xlat
mov
cli
cmp
mov
pop
mov
sbb
in
push
nop
inc
loope
mov
or
adc
fst
sbb
pop
xchg
sbb
ficomp
(bad)
retf
test
retf
pop
or
mov
rcr
mov
(bad)
loopne
mov
sub
js
fld
mov
sbb
test
mov
and
fidiv
fwait
mov
arpl
mov
pushf
in
or
iret
mov
mul
mov
fdivr
cmp
inc
sahf
fwait
jne
sbb
xchg
pop
and
and
dec
xchg
xor
stc
test
rol
push
div
nop
xor
mul
dec
into
or
das
pop
sti
sbb
xor
scas
orps
xlat
test
adc
ror
jl
dec
test
cmp
clc
mov
gs
out
(bad)
jmp
rcl
repz
cmp
add
mov
jle
or
xor
ss
scas
and
ins
jno
pop
mov
popf
stos
cs
ficomp
aaa
cmp
clc
shr
and
cmp
movs
dec
dec
jnp
sub
ret
mov
ss
jecxz
in
add
popa
jno
jl
mov
mov
add
cmps
jne
xchg
dec
push
mov
test
call
and
xor
jmp
shr
dec
jae
cmp
retf
repz
mov
call
xor
enter
and
mov
mov
add
pop
adc
mov
mov
xchg
sub
mov
jg
push
in
mov
jns
jns
popa
movs
push
xchg
fldcw
(bad)
mov
out
sub
retf
sub
or
test
out
(bad)
rcr
enter
(bad)
cmc
std
adc
test
les
out
push
fs
stos
cli
adc
push
mov
pushf
pop
cmp
arpl
into
les
mov
lea
repz
out
push
xor
stos
or
mov
js
pop
lds
test
xchg
or
pop
cmp
retf
pop
lods
fnstenv
test
mov
adc
cli
cmp
jno
cmps
jno
jae
(bad)
fdiv
jmp
mov
(bad)
jne
out
and
mov
iret
pop
mov
mov
or
fucomip
adc
xchg
fst
int3
out
inc
cs
loopne
jmp
ss
pop
enter
aam
cwde
inc
and
inc
repz
ss
pop
push
jp
repz
inc
mov
pop
cmp
inc
test
xor
dec
rcl
inc
ret
stc
sbb
mov
mov
sub
daa
mov
movsx
sti
ja
cmps
ss
addr16
sbb
lea
fimul
(bad)
sar
push
and
cdq
scas
xlat
sub
push
push
and
mov
gs
jnp
scas
lahf
mov
pop
or
mov
xor
in
jl
cmp
dec
retf
push
fist
call
ret
movs
shr
test
sti
sbb
pop
mov
sbb
mov
in
jg
ret
ficom
and
mov
and
inc
inc
stc
add
dec
imul
ins
dec
test
idiv
repz
xor
jmp
rcr
addr16
sub
pushf
sahf
stos
out
inc
mov
mov
jns
and
xor
jno
repz
pop
jae
nop
inc
push
sub
fbld
push
cmc
stos
in
inc
retf
pop
out
inc
mov
ror
shl
cld
push
mov
sbb
lods
add
cwde
stos
or
ficom
sub
mov
cld
push
fsubp
mov
and
mov
not
je
les
mov
test
(bad)
jne
popf
mov
sbb
imul
add
outs
rol
out
je
jmp
push
lods
fbstp
sbb
ret
jo
and
add
and
jnp
pop
out
sub
adc
push
not
aas
mov
mov
sbb
fwait
mov
sub
jae
test
adc
inc
or
fcom
cmps
(bad)
jecxz
icebp
add
pop
rcr
popf
xchg
dec
stc
outs
jle
pusha
retf
mov
inc
pop
jmp
inc
repz
rcl
loopne
fcom
enter
inc
push
xchg
xchg
or
mov
ins
dec
addr16
inc
nop
test
pop
or
shl
adc
dec
(bad)
adc
cmp
mov
lock
idiv
pop
pop
and
sub
push
sbb
les
dec
shr
mov
into
mov
and
loope
jecxz
or
cld
cmp
xor
pop
jbe
jne
ins
test
mov
or
sbb
aas
popf
push
mov
push
scas
(bad)
push
not
mov
cwde
or
xor
shr
and
push
xchg
leave
mov
pop
mov
outs
arpl
iret
xor
pop
jle
repnz
mov
cmp
es
jl
fstp
xor
scas
cdq
out
lods
push
jae
lds
mov
and
push
mov
lds
mov
add
jnp
pop
mov
sbb
jne
repnz
leave
adc
pop
shr
ret
mov
mov
jmp
xchg
and
(bad)
sahf
inc
pop
pop
sub
add
fcomp
sub
outs
jle
add
pop
aam
lods
add
pushf
pop
leave
in
(bad)
xor
add
inc
sbb
lahf
inc
(bad)
movs
in
test
sbb
ret
jmp
jp
call
inc
mov
push
aaa
pop
push
jnp
leave
fild
push
lods
and
ja
(bad)
sbb
test
jb
dec
fidiv
aas
pop
inc
sbb
std
int3
je
adc
inc
mov
rcl
fdivr
movs
pop
imul
cmp
push
xor
cmp
cmp
adc
movs
sub
adc
sub
sub
xchg
push
addr16
sbb
adc
mov
push
pop
add
retf
mov
or
out
adc
fwait
int3
rcr
jo
mov
xchg
(bad)
enter
mov
mov
dec
inc
jb
outs
sbb
push
ret
int3
mov
imul
lea
nop
mov
ins
or
je
sub
fdiv
xchg
cwde
pusha
xchg
icebp
jbe
cmp
xchg
sti
out
int
lahf
cld
call
scas
in
push
dec
xor
or
fwait
sub
sub
inc
hlt
jbe
add
adc
push
jle
lds
mov
xchg
mov
sub
dec
jecxz
cli
and
mov
das
out
add
and
out
jae
movs
nop
ds
mov
sub
cmp
mov
popf
clc
xor
xchg
std
test
rol
dec
or
int
cs
sar
jae
jne
mov
aam
rol
fcom
or
call
fldenv
bound
loopne
sub
stos
int3
(bad)
jge
push
mov
adc
es
cdq
enter
sbb
div
add
fstp
mov
fsub
pop
pop
leave
lea
cmps
jp
movs
dec
sbb
push
dec
fs
jge
or
add
or
jno
add
mov
mov
pop
jb
cmp
rcl
repnz
xor
ret
rcr
mov
scas
dec
sar
and
push
in
stos
add
pop
pop
jns
(bad)
aaa
daa
hlt
loopne
sahf
fstp
movs
fcom
xchg
out
jmp
daa
push
shl
cld
push
test
cmc
shr
test
xchg
fadd
stc
jmp
jno
xchg
adc
ret
mov
pop
sub
mov
dec
mov
add
std
cmps
xchg
push
jmp
pop
pop
mov
call
cmp
or
scas
ja
lock
fbstp
movs
ret
ds
shl
sub
mov
pop
push
jbe
cld
shl
xor
xchg
int3
mov
sbb
lods
stos
retf
test
push
xchg
cmp
mov
into
repnz
jae
std
retf
or
addr16
push
lods
out
adc
sahf
pop
xlat
or
xchg
dec
add
jp
mov
pop
jl
ins
xor
ret
fisub
scas
loopne
dec
mov
sbb
out
les
sti
mov
fucomp
das
idiv
mov
test
jbe
xchg
mov
iret
push
jne
or
fs
fisubr
push
inc
mov
pop
adc
jecxz
scas
(bad)
pop
add
push
xor
scas
sbb
aas
xlat
add
mov
pop
push
jl
sahf
jge
xchg
movs
push
mov
ja
sub
test
jno
add
dec
sbb
ror
div
mov
mov
inc
sahf
sbb
fild
lea
clc
nop
stos
sub
pop
xchg
adc
scas
cmp
fiadd
and
pop
adc
and
or
mov
cmp
cmp
add
dec
xchg
dec
inc
fstp
iret
jmp
pushf
test
stos
jecxz
adc
mov
outs
jmp
add
push
imul
mov
in
sub
in
cmps
mov
jae
mov
loopne
cmps
or
sub
push
mov
mov
popf
es
retf
and
add
call
xchg
mov
imul
xchg
pop
push
xchg
pop
mov
sbb
mov
sub
sbb
cmp
nop
push
jno
cwde
out
jg
xor
shl
push
xchg
sbb
repz
(bad)
fs
push
jne
mov
jno
outs
pop
or
test
ja
xchg
gs
dec
sahf
pavgw
jo
movups
pop
cwde
inc
cvttps2pi
sbb
adc
lock
dec
int3
jae
and
jo
push
push
shl
retf
(bad)
out
push
ret
inc
out
sbb
popa
jno
in
and
sbb
push
out
cmp
adc
sbb
jmp
and
mov
jl
popa
mov
push
cld
pop
retf
add
xor
pusha
dec
cmp
mov
out
shr
jmp
cmp
jg
xchg
loopne
cmp
aaa
sub
pop
adc
fyl2xp1
lods
add
jmp
sbb
mov
xor
dec
or
cmc
sub
(bad)
out
rcr
and
(bad)
xor
mov
and
mov
fs
hlt
jno
adc
pop
sub
ja
pop
cmp
mov
jmp
cmp
cmp
inc
sahf
cmp
pop
sbb
pop
xchg
pop
stc
add
leave
and
out
adc
imul
sahf
adc
push
and
or
je
pop
cwde
jl
iret
(bad)
and
iret
mov
fwait
adc
pop
cs
lahf
ja
shr
add
jge
dec
(bad)
stos
xchg
outs
adc
sti
jns
and
pop
and
and
xchg
mov
mov
inc
sbb
jmp
icebp
xchg
and
sub
imul
js
popa
push
loopne
mov
enter
ret
xchg
jle
aam
fwait
popf
pop
sar
xchg
add
ss
adc
movs
movs
fisttp
dec
hlt
push
inc
ds
sbb
cmp
ins
fld
div
mov
iret
movs
cli
dec
cmp
cmp
push
bound
add
out
adc
fistp
loopne
add
cmp
es
fucom
xor
push
ds
in
fs
outs
cmp
lea
jecxz
jmp
fcomp
pop
xchg
add
test
and
add
punpckhbw
or
jge
pop
sub
dec
sbb
sbb
sbb
arpl
ror
imul
ja
push
into
jne
(bad)
loopne
aad
inc
xor
mov
jae
adc
inc
cs
sub
and
ror
xor
xchg
add
jno
fadd
jg
clc
jns
pop
or
ja
sub
rcr
jge
mov
pop
loop
stos
lds
mov
mov
add
cmp
xchg
(bad)
in
mov
mov
int
fcmovu
dec
(bad)
pop
ss
push
xchg
pop
sub
and
mov
mov
or
and
in
jnp
mov
mov
test
mov
jg
scas
add
mov
sub
pop
ss
inc
icebp
dec
mov
mov
xchg
es
repz
and
mov
mov
enter
push
fiadd
mov
mov
iret
dec
mov
push
clc
cmps
or
adc
mov
retf
rcr
jno
scas
sbb
sub
rcr
or
xor
xchg
mov
cld
push
xchg
jl
scas
jl
adc
mov
push
sbb
hlt
add
inc
add
fmul
push
and
shr
xlat
sti
jo
xchg
mov
sub
daa
inc
rol
aaa
fisub
mov
mov
lds
movs
push
das
pushf
mov
mov
sub
dec
icebp
inc
jge
out
repnz
add
loope
(bad)
cli
(bad)
call
cs
js
inc
pop
imul
xor
adc
iret
xchg
inc
sbb
retf
mov
int
out
popa
ss
outs
leave
jmp
xchg
subps
mov
imul
pusha
mov
push
mov
inc
fcomp
ret
mov
aas
or
movs
icebp
inc
sbb
pop
mov
xchg
outs
mov
outs
test
pop
mov
scas
adc
fcom
jmp
xchg
inc
inc
cdq
popa
clc
in
push
leave
sub
aam
loop
pop
and
movs
mov
aad
adc
inc
xor
cmp
push
fwait
mov
imul
imul
int3
shl
mov
xchg
clc
scas
cwde
sbb
push
bound
inc
loope
cmp
xchg
or
pop
jl
pop
sub
daa
add
into
out
mov
(bad)
in
xchg
xchg
enter
xor
test
push
push
sub
xchg
dec
clc
sbb
loop
int3
loope
sub
jecxz
scas
arpl
fdivrp
fldlg2
push
shr
jae
and
jb
pop
add
inc
icebp
daa
cmp
sub
cmp
dec
rcl
in
data16
(bad)
mov
(bad)
push
jnp
sub
add
inc
add
ret
cli
xchg
pusha
and
fild
aam
push
cmp
mov
(bad)
cmc
icebp
shl
mov
call
mov
jle
hlt
inc
mov
cmp
adc
adc
je
pop
loope
inc
imul
and
jl
loop
imul
sbb
mov
out
ret
xchg
ja
mov
scas
pop
push
sbb
test
pop
iret
(bad)
cmc
jne
pop
(bad)
fistp
(bad)
ja
int
add
jmp
stc
inc
push
imul
mov
or
adc
sbb
retf
mov
mov
xor
jno
inc
call
shl
aas
das
and
mov
call
and
div
cmp
into
test
popa
mov
add
jg
sub
xchg
cmp
in
jl
ins
addr16
pop
xchg
cmp
iret
push
call
adc
sub
mov
and
cmps
ds
or
jmp
cvtps2pi
mov
dec
jmp
(bad)
ins
inc
mov
xchg
adc
and
in
clc
rol
jns
add
xor
scas
pop
add
mov
addr16
(bad)
xlat
into
dec
jno
leave
lds
jl
out
pop
xchg
cmc
inc
pop
push
mov
lds
add
and
or
ins
pop
cmp
cmps
adc
je
popa
xchg
shl
pusha
or
xchg
hlt
js
fiadd
je
mov
jmp
xor
xchg
xor
gs
sbb
xor
pushf
in
cmc
pushf
lahf
pop
jecxz
mov
cmp
add
es
pushf
sub
cmp
jae
stos
movs
dec
cmp
stos
aaa
jmp
sbb
mov
outs
test
jb
sbb
ins
scas
or
jns
adc
inc
mov
xchg
rol
ret
popf
not
lahf
mov
inc
cmp
(bad)
inc
jno
inc
mov
ror
gs
lahf
lea
add
or
cli
in
sbb
clc
iret
lds
imul
jle
mov
fcom
rcr
inc
inc
sbb
and
and
(bad)
sar
xor
in
(bad)
mov
and
dec
cdq
sti
cmp
repnz
mov
(bad)
das
clc
ja
sti
bound
mov
xchg
mov
nop
push
mov
repz
mov
mov
or
mov
sbb
jge
test
pop
jae
stos
repnz
scas
adc
mov
test
jne
dec
outs
jns
lods
icebp
push
xchg
pop
pop
aam
(bad)
sub
shl
or
imul
test
aam
pop
imul
push
data16
imul
sub
ud2
in
add
jnp
ins
xchg
test
inc
xlat
aad
fist
in
push
sbb
xchg
mov
sub
jge
cmp
push
cmps
push
stos
repz
daa
inc
and
lods
sar
dec
mov
inc
dec
pop
dec
std
adc
ds
xchg
pop
and
mov
lea
jne
push
test
js
test
(bad)
iret
retf
add
sbb
out
cdq
inc
int
enter
cmp
inc
add
add
rcr
push
cdq
jno
mov
xchg
iret
pop
icebp
xchg
xchg
cmp
mov
mov
push
(bad)
movs
clc
push
out
scas
ret
jb
mov
push
or
dec
jge
mov
and
jnp
adc
ins
icebp
jb
loop
inc
test
adc
dec
push
fdivr
ficomp
pop
ret
add
sub
mov
mov
icebp
cmp
push
data16
cmp
add
inc
dec
sar
clc
jnp
scas
add
or
push
fwait
sbb
hlt
repz
cmp
xchg
pop
retf
fldcw
not
ror
jmp
test
mov
or
inc
cmp
ins
sub
mov
retf
and
je
lea
mov
in
or
mov
dec
addr16
into
int3
cmp
sub
daa
fbstp
inc
or
mov
imul
movs
sub
dec
push
jo
dec
scas
ss
cdq
fisub
lods
stos
dec
pop
dec
cmps
dec
dec
and
imul
je
stos
ret
mov
add
leave
into
pop
inc
xor
ja
push
lock
sub
cmc
sbb
cdq
ror
adc
fcomi
inc
sti
loop
sbb
mov
mov
sub
ret
cmp
jge
in
inc
pmulhuw
push
or
adc
out
adc
and
mov
hlt
mov
iret
in
adc
push
int3
xchg
es
mov
pop
push
cmc
outs
push
jb
or
retf
mov
popa
jg
fidivr
dec
jnp
add
xor
scas
in
sub
add
or
mov
and
pop
sbb
retf
pop
dec
jmp
ret
lods
loope
cmp
in
xlat
scas
mov
pop
lock
inc
mov
adc
xchg
ficomp
(bad)
aaa
retf
ins
mov
mov
or
jnp
rcr
aad
dec
mov
or
jb
ins
xchg
scas
adc
rol
bound
cmc
sub
leave
mov
xchg
add
aam
jmp
fmul
lds
cmp
out
adc
mov
push
sub
(bad)
int3
pop
cmp
(bad)
adc
lods
push
loop
fwait
enter
sub
fprem1
aad
xor
sbb
pop
mov
not
clc
xchg
mov
outs
cld
xchg
adc
add
xchg
cld
push
or
test
in
mov
mov
mov
ss
xor
shl
adc
add
pusha
and
jg
mov
rol
add
je
test
cmps
cvtps2pd
jecxz
test
mov
mov
imul
imul
dec
cmps
enter
sti
inc
les
dec
add
mov
and
pop
push
xchg
lea
mov
mov
dec
push
xor
mov
call
push
push
or
pop
jbe
pop
cmp
inc
mov
ins
jbe
mov
jno
mov
outs
push
lea
mov
add
lahf
lahf
les
es
repnz
inc
fmul
lods
mov
(bad)
mov
xchg
sbb
and
sub
push
inc
adc
test
mov
and
aad
fs
mov
sbb
xchg
jbe
movs
loopne
aaa
cmp
mov
jno
sub
rol
jg
adc
mov
jae
int
movs
and
inc
scas
pop
shl
jno
mov
push
dec
push
adc
test
cmp
stc
(bad)
pop
lods
pop
dec
dec
shl
inc
lds
jl
nop
mov
scas
sub
mov
int
push
es
mov
mov
cmp
xor
mov
xchg
ret
rcl
push
test
dec
jae
add
shr
jbe
add
aas
daa
int3
pop
rcr
ins
mov
add
add
cmps
jp
mov
mov
adc
shl
jno
mov
or
outs
rcr
stc
push
ss
or
movs
jbe
popa
mov
(bad)
lods
stos
fistp
xor
popf
push
icebp
aad
icebp
enter
mov
mov
mov
out
mov
pop
or
shl
ja
jno
(bad)
shr
(bad)
cmp
arpl
sbb
retf
out
stos
sub
cmps
xor
sub
mov
mul
or
repz
inc
xchg
push
(bad)
and
aam
lock
pushf
sub
pop
ja
cmp
les
adc
mov
sbb
sbb
ss
push
push
(bad)
jecxz
call
enter
and
call
adc
cdq
inc
inc
xchg
lea
cmp
mov
xchg
inc
lahf
test
hlt
(bad)
xchg
fnstenv
adc
int3
leave
jecxz
fcom
jl
and
add
sar
and
pop
add
jbe
jmp
mul
sar
push
clc
sub
lea
in
bound
sub
xor
dec
push
loop
ficomp
(bad)
xor
pop
pop
iret
pop
mov
fs
push
mov
test
in
mov
pop
stos
mov
ja
or
lahf
addr16
push
(bad)
fwait
js
inc
or
call
or
inc
add
cmp
mov
shl
fild
inc
lahf
push
lea
mov
loope
aaa
stos
loopne
sub
fldl2e
add
sidtd
xchg
mov
pusha
mov
pop
mov
adc
push
jmp
inc
ret
in
(bad)
fisttp
outs
pop
xchg
xchg
and
scas
xor
iret
loopne
dec
stc
adc
jmp
ss
clc
aas
or
out
(bad)
fwait
cmps
inc
mov
ds
mov
call
push
aas
mov
addr16
pop
jne
xchg
push
fstp
sti
inc
sbb
mov
out
mov
aaa
cmp
sahf
mul
mov
jo
aaa
push
jle
popf
aad
hlt
test
jle
mov
add
push
sub
fisttp
and
mov
sub
sub
ret
mul
lea
cmp
scas
data16
outs
and
rcl
das
and
add
push
cld
push
sahf
mov
jb
and
aad
stc
ins
xchg
aam
(bad)
int3
xlat
cmps
out
cmp
mov
lods
xchg
pop
icebp
(bad)
fs
sub
or
js
sub
outs
(bad)
sbb
jge
jp
mov
jnp
sbb
adc
hlt
xchg
add
push
mov
int
inc
call
pop
cli
(bad)
xchg
mov
mov
test
outs
jecxz
lods
xor
or
mov
mov
mov
mov
(bad)
out
stc
test
adc
mov
xor
or
sbb
cdq
push
stos
lds
mov
lods
cmp
sbb
mov
mov
mov
aaa
push
ss
lahf
int3
and
mov
pop
ja
out
dec
mov
stos
cdq
imul
cli
xor
inc
pop
movs
stc
inc
add
into
ins
enter
lock
xchg
add
dec
add
add
lds
or
or
push
and
inc
mov
sbb
les
fistp
mov
bound
cmps
jnp
cli
sbb
sub
(bad)
stos
mov
sbb
mov
into
mov
push
cld
or
xor
pop
jne
sub
mov
stos
dec
mov
mov
xor
sub
pop
push
ins
fidiv
xchg
sar
or
xchg
mov
pop
popa
data16
icebp
jo
adc
and
sub
pop
add
mov
stc
(bad)
sbb
add
iret
prefetchwt1
or
(bad)
and
cwde
pop
xchg
mov
(bad)
jmp
or
adc
mov
mov
mov
pop
mov
pop
adc
mov
mov
and
int
inc
fwait
icebp
mov
repz
test
jo
mov
inc
add
mov
pop
mov
imul
fcomp
fcmovne
fist
adc
dec
sar
dec
mov
test
fiadd
mov
cmp
fld
dec
js
into
cmp
(bad)
in
and
adc
cmp
jns
pop
push
test
push
inc
mov
xchg
mov
shr
gs
fld
mov
dec
ret
xor
mov
xchg
scas
pop
bound
ja
repnz
mov
xor
scas
or
inc
adc
stos
(bad)
fild
mov
sbb
adc
outs
inc
cmps
push
mov
cmp
and
pop
xchg
shr
dec
jno
fldcw
cli
sub
lahf
test
scas
retf
xor
push
cmp
pop
jl
stos
cld
shr
cmp
inc
retf
lea
outs
lahf
xchg
xor
retf
cmps
loop
mul
adc
(bad)
sbb
out
cdq
mov
ja
pop
inc
dec
pop
imul
mov
cdq
test
ret
dec
xor
shr
inc
jmp
mov
ret
imul
mov
loopne
shl
xchg
lock
jne
pop
ss
xchg
es
pushf
sbb
fild
test
fisub
out
or
cmp
mov
cwde
push
fdivrp
movs
mov
dec
xchg
pop
or
push
clc
leave
jbe
mov
lods
sahf
data16
lods
sbb
lds
xchg
cmps
lods
iret
cld
jl
es
loope
adc
inc
mov
pop
inc
icebp
push
sub
xor
sbb
inc
stos
sub
push
nop
xchg
adc
mov
pop
inc
cmp
jg
adc
icebp
sar
jp
sub
xchg
mov
arpl
jb
pop
in
push
hlt
mov
mov
(bad)
stos
pusha
shr
mov
jle
or
aad
popa
shl
cmps
nop
mov
or
loopne
mov
cmp
ins
clc
lods
call
rcl
sbb
jecxz
sbb
in
scas
mov
(bad)
jnp
cdq
or
mov
call
cmps
fiadd
fnclex
daa
pop
cmp
jb
ror
das
mov
hlt
les
mov
test
jecxz
scas
imul
and
and
mov
sbb
xor
mov
cs
test
mov
mov
fs
cdq
sti
mov
imul
adc
rcl
in
(bad)
not
in
ficomp
lahf
or
sub
in
mov
push
or
les
inc
sbb
lods
retf
sti
out
mov
mov
and
imul
sbb
pusha
dec
cmps
popf
lea
test
dec
or
jl
xchg
(bad)
call
xchg
inc
bound
(bad)
repz
outs
mov
mov
inc
dec
add
and
mov
and
or
cmp
mov
or
std
inc
pop
xor
mov
mov
rol
mov
js
fdivr
ss
mov
or
(bad)
mov
sub
cmps
jmp
jmp
xchg
sbb
mov
rcl
mov
inc
ror
inc
or
iret
jmp
inc
xchg
stos
cmps
cmp
push
adc
nop
sub
jg
les
ins
fsub
ja
icebp
rol
mov
push
fdiv
cmp
loopne
sub
sub
fwait
lods
iret
scas
lods
inc
stc
jns
frstor
into
xor
mov
sar
shr
inc
stos
ss
sbb
movq
pushf
pop
mov
lds
adc
mov
adc
add
xor
stos
or
iret
popf
scas
sub
pop
pop
hlt
(bad)
out
inc
xchg
(bad)
mov
jns
dec
cwde
dec
loop
cmps
(bad)
gs
test
or
idiv
cld
sub
iret
add
ret
mov
fldenv
and
arpl
dec
pushf
ds
iret
rcl
out
test
add
push
mov
mov
mov
cmp
addr16
shl
(bad)
mov
popa
fstp
fidiv
fistp
xor
mov
rcl
ret
dec
jg
cmps
mov
fstp
sahf
push
push
lods
pop
pushf
ins
jg
dec
ins
loope
outs
retf
in
pop
mov
push
test
inc
mov
inc
rol
fucom
loop
mul
lods
xchg
pusha
test
sub
repz
fstp
sub
cdq
xor
inc
cmp
jmp
test
adc
push
stc
repnz
(bad)
jecxz
and
or
lods
stc
push
jmp
imul
cmps
push
cs
mov
adc
leave
cmp
out
daa
test
pushf
rol
(bad)
mov
adc
and
pop
dec
imul
xor
lock
loope
fs
dec
xchg
pop
sbb
dec
int
push
cmp
dec
add
iret
xchg
cli
inc
loope
xor
(bad)
mov
or
jnp
fs
push
sbb
inc
fimul
adc
dec
jne
gs
and
shl
cmp
sbb
and
sub
cld
or
(bad)
and
loope
inc
stos
push
xchg
test
inc
iret
movs
push
lds
push
xor
ret
lods
dec
repnz
xor
jecxz
fild
xor
push
stc
ins
xchg
mov
int
mov
je
push
in
out
and
or
imul
neg
cmp
es
out
or
cmc
(bad)
mov
mov
test
sahf
outs
mov
jne
mov
fsubp
inc
mov
scas
pop
xchg
xchg
cmp
loop
repz
dec
dec
pop
sub
lock
jo
ret
inc
mov
fidivr
push
jne
sar
mov
xor
lods
jae
adc
addr16
cmp
xchg
fsub
mov
adc
lods
ss
daa
push
mov
push
push
jne
out
mov
and
fcom
jae
xlat
nop
or
mov
nop
in
pop
or
or
add
inc
dec
icebp
jecxz
inc
shl
mov
or
je
pop
pop
adc
cwde
or
pop
nop
(bad)
mov
pop
xchg
repz
jae
xchg
mov
fwait
mov
jnp
xor
and
pop
push
jl
pusha
push
xchg
das
inc
and
inc
cmp
movs
aaa
pop
bnd
jge
cmps
inc
les
daa
(bad)
(bad)
in
sahf
lds
push
mov
jb
xchg
std
dec
adc
js
pop
dec
in
mov
bnd
sub
cmp
xchg
pop
aam
sti
aaa
repnz
outs
xlat
imul
aaa
pushf
test
fistp
jb
add
add
jae
jne
(bad)
push
push
mov
ins
and
pop
pop
mov
cmps
mov
adc
hlt
jnp
bound
push
enter
and
enter
retf
outs
mov
push
or
(bad)
xor
cmc
pusha
pop
cmp
sbb
rcr
fsub
fcomp
ss
sub
jecxz
or
call
mov
cmps
sbb
int
mov
in
test
(bad)
or
push
pushf
pop
out
js
imul
pop
mov
adc
pop
push
dec
fisub
in
cdq
rcr
popa
mov
lods
push
ins
movs
fistp
(bad)
retf
xor
jo
adc
adc
jns
or
iret
adc
or
pop
in
cmp
repz
or
ret
pusha
icebp
retf
rcl
mov
retf
mov
xor
cmps
lock
dec
and
pop
pop
les
mov
cmp
fnstcw
sub
mov
jp
loope
adc
sahf
je
dec
pop
adc
js
pop
pop
xor
std
ror
in
dec
sbb
sub
scas
iret
push
(bad)
gs
cmp
inc
pop
cmps
or
cld
cmp
sub
popa
cmp
xor
dec
nop
fdivr
pushf
imul
into
dec
(bad)
les
xor
retf
neg
aas
mov
(bad)
pop
cmp
sub
or
jno
add
test
or
mov
out
mov
cmc
or
jecxz
(bad)
and
lar
iret
jp
rol
fwait
pop
adc
(bad)
jge
jecxz
mov
add
sbb
popa
in
mov
lods
mov
mov
push
ror
push
push
add
fisub
neg
pop
jns
pop
in
test
test
pop
(bad)
pop
cmp
jmp
xor
sub
jg
mov
dec
(bad)
in
loop
xor
imul
pop
add
push
cdq
inc
adc
xchg
dec
pushf
loopne
retf
cmp
fistp
inc
jnp
js
sub
xchg
mov
aaa
add
(bad)
fbstp
(bad)
jle
add
std
mov
cmp
iret
sub
imul
lahf
into
nop
mov
xchg
mov
jge
dec
lahf
loop
xor
aas
cs
test
cmp
lock
in
adc
fbld
pop
add
lods
jg
push
inc
test
pop
pushf
xor
xor
mov
xchg
xchg
repz
sti
std
push
mov
int3
push
mov
rcl
cmps
lods
nop
cli
aas
push
sub
dec
xchg
fistp
mov
mov
in
popf
fcmovbe
xchg
mov
je
sbb
xchg
movs
push
push
arpl
shr
stc
pop
das
sbb
(bad)
cli
inc
and
mul
ror
icebp
or
jb
sub
arpl
lock
in
out
test
test
xchg
fadd
add
sub
(bad)
sahf
call
es
jns
xchg
and
sbb
pushf
add
nop
rcl
test
je
or
retf
jle
clc
repnz
xchg
jmp
jmp
cmps
inc
imul
xchg
int
jge
or
out
mov
mov
lds
aad
pop
out
mov
cli
inc
stos
pop
sub
ins
(bad)
jne
mov
jecxz
xchg
inc
mov
loopne
adc
and
pop
call
dec
pop
sahf
xor
dec
add
dec
pop
dec
adc
push
lds
scas
rcl
je
xchg
sbb
add
pop
jmp
fsub
nop
inc
in
push
dec
int
jg
enter
push
out
gs
iret
(bad)
es
or
imul
jmp
lahf
lock
or
inc
outs
les
movs
(bad)
shl
js
mov
jecxz
adc
nop
data16
mov
adc
mov
imul
shr
sahf
movs
adc
lods
dec
shl
inc
int3
xchg
out
cli
icebp
pop
or
ficom
movs
add
clc
lahf
dec
cmp
ins
and
push
call
imul
and
enter
(bad)
xor
movs
cld
loop
test
cmp
in
mov
inc
xchg
ins
aam
loopne
add
inc
aaa
xor
aam
mov
gs
js
pop
ss
lods
sar
xor
shl
test
sbb
stos
test
stos
cmps
jno
stc
xchg
xchg
bound
gs
test
jg
adc
ret
xchg
pushf
xchg
dec
dec
xlat
inc
mov
es
test
int
jle
mov
cwde
cwde
scas
adc
cli
and
jl
cmp
sbb
push
xor
mov
fwait
daa
jne
popa
push
push
pop
(bad)
shr
loope
adc
sti
xor
test
pushf
sbb
adc
push
out
pop
add
xor
jnp
daa
mov
mov
and
pushf
xor
mov
inc
and
es
inc
jp
and
fnstenv
mov
ds
cwde
jl
hlt
push
adc
aam
out
pop
add
jmp
popf
add
js
jmp
pminsw
iret
push
jnp
mov
call
ins
pop
loop
xor
inc
dec
das
xchg
cmp
retf
inc
cs
push
xchg
ss
cmp
cmps
add
out
pop
adc
cmps
xchg
cmp
aam
mov
push
pop
xchg
lods
daa
fld
dec
mov
call
(bad)
popf
out
sbb
cli
scas
mov
push
call
loopne
xchg
aaa
hlt
clc
ds
shl
loope
mov
mov
dec
xor
cmps
mov
clc
dec
outs
popa
lods
pop
xor
dec
mov
fisubr
scas
xchg
nop
mov
dec
xor
movs
xor
(bad)
mov
and
pusha
bound
retf
loopne
inc
arpl
sbb
call
cs
adc
xchg
ret
xchg
test
rcr
push
push
cli
test
fnsave
inc
mov
mov
jle
in
add
add
scas
mov
loopne
push
mov
in
lds
sbb
lds
stos
and
xchg
cmp
xchg
mov
pop
arpl
data16
adc
jle
sub
repz
mov
and
adc
rcr
repnz
inc
sti
pop
out
push
imul
adc
sbb
enter
das
inc
jmp
outs
js
jmp
cmps
or
push
gs
stos
popa
in
add
push
jb
mov
and
push
sub
jp
scas
fs
cmp
jl
push
jne
dec
adc
gs
or
dec
and
out
mov
call
jmp
retf
in
cmp
sbb
movs
lds
push
daa
in
xchg
adc
fsub
pushf
inc
push
fild
fmul
adc
xchg
xor
jne
mov
pusha
test
cmp
dec
mov
jp
es
mov
data16
int3
shl
xchg
xor
jle
(bad)
test
inc
xor
mov
leave
rol
mov
jae
gs
jmp
or
push
sbb
call
add
sub
bound
push
ds
mov
add
xor
sbb
shl
sti
pop
into
jg
xchg
sbb
adc
dec
jnp
mov
loope
out
sub
out
xor
retf
aas
dec
enter
jmp
popa
mov
or
push
adc
pop
xor
ror
and
pushf
sar
mov
(bad)
retf
mov
cwde
mov
push
jl
lea
test
(bad)
stos
call
rcl
rcl
jo
xor
mov
dec
xchg
dec
push
cmp
mov
xchg
push
ds
add
push
inc
pop
shl
mov
cmps
cmp
jecxz
fisub
test
popf
ror
push
daa
mov
xchg
out
(bad)
fimul
push
cld
dec
iret
sub
test
pop
mov
push
or
xor
pop
xor
xor
jne
sub
(bad)
idiv
outs
lds
outs
pop
add
cmp
push
loope
std
inc
push
aaa
cs
pop
and
pop
pop
pop
mov
mov
jmp
xchg
inc
or
test
inc
and
mov
pushw
jmp
test
mov
test
cmp
sbb
test
mov
push
in
dec
dec
cmc
pop
js
mov
movs
and
je
xchg
sub
xor
movs
sbb
push
out
or
js
mov
adc
inc
ror
mov
cmp
iret
and
jmp
dec
cli
je
outs
adc
popa
push
xor
ss
push
into
push
fcom
and
mov
inc
mov
mov
mov
add
enter
icebp
pop
movs
cmp
add
sbb
(bad)
mov
inc
fs
inc
adc
ret
cmps
pop
ja
loop
inc
xor
in
cwde
xchg
(bad)
push
push
add
loop
push
sub
pop
lahf
mov
les
or
fnstcw
fbstp
dec
mov
jmp
xor
dec
cli
daa
mov
sti
or
inc
iretw
pop
lods
add
pusha
lods
inc
gs
mov
std
jg
sbb
xchg
jmp
fld
fstp
fldcw
test
in
fimul
mov
int3
dec
push
daa
loop
sub
pop
adc
sub
mov
shl
sbb
ja
jp
dec
sbb
test
mov
repnz
retf
push
add
ja
sbb
cwde
call
movs
imul
jmp
cs
mov
rol
cmp
aad
jecxz
or
add
push
pushf
call
fimul
sbb
rol
xchg
out
cdq
icebp
pop
pusha
xlat
sbb
xchg
out
clc
ret
xchg
popa
cmps
sub
mov
arpl
pop
pushf
addr16
dec
pop
xor
jl
inc
aad
sti
or
mov
sti
push
(bad)
push
repz
out
cmp
pop
jmp
pop
mov
adc
out
jge
outs
mul
ss
cdq
fbstp
push
or
fdivr
loopne
cs
es
adc
push
push
imul
mov
or
mov
push
jge
cld
pop
mov
or
xchg
(bad)
mov
mov
pop
repnz
cmova
mov
dec
xchg
and
sub
sub
mov
imul
xchg
add
xor
or
je
into
sar
icebp
pop
fidivr
jl
xor
scas
jns
mov
add
jl
test
cmps
sbb
test
xor
jae
test
push
addr16
sar
movs
outs
jo
sar
test
cmp
(bad)
repz
inc
ret
add
xchg
sbb
xchg
and
xor
enter
or
out
stos
leave
jge
ret
dec
pop
stos
mov
jl
ins
pusha
pop
pop
imul
jle
aad
adc
inc
outs
fwait
push
mov
clc
es
ins
fld
or
gs
jmp
jp
stos
jae
pop
in
xor
test
pop
adc
add
fld
out
pop
sbb
jae
cmp
jge
mov
nop
mov
lds
enter
out
jmp
inc
jmp
add
popf
jmp
jne
scas
xchg
inc
add
in
mov
call
xchg
gs
daa
call
add
add
(bad)
loope
or
fs
push
stos
push
imul
loope
inc
cld
fld
mov
cmp
fisubr
call
inc
jge
or
jnp
stc
dec
pop
mov
and
leave
push
in
daa
es
sahf
(bad)
shl
fs
je
cld
cli
or
add
loopne
bound
xor
sub
xchg
(bad)
fisubr
add
adc
xchg
shr
clc
or
leave
push
fadd
mov
nop
sbb
and
mov
and
fldcw
jl
xchg
mov
call
scas
inc
neg
jb
(bad)
sub
sbb
inc
add
jmp
dec
mov
and
gs
xor
aas
inc
aam
or
push
sbb
xchg
and
inc
call
or
pop
out
or
call
(bad)
mov
imul
and
das
das
ret
retf
sub
popa
cmp
cmp
xchg
or
outs
loopne
(bad)
mov
out
ret
add
(bad)
cdq
repnz
dec
mov
fwait
popf
push
out
lods
cmp
ret
mov
and
bound
fimul
jmp
inc
cmp
mov
xchg
add
imul
mov
(bad)
sti
jno
xor
pop
lods
addr16
ja
popf
cdq
mov
mov
and
dec
gs
xlat
xchg
leave
shr
cmp
fisttp
or
pop
pop
cmp
mov
and
fwait
icebp
out
cmps
fidiv
fcom
movs
pop
inc
inc
xor
inc
pop
and
sbb
ret
xchg
mov
(bad)
or
add
jg
mov
cmp
fimul
sbb
push
push
fistp
pusha
sbb
ja
mov
xor
or
mov
jo
push
shr
sub
dec
adc
xor
fldenv
mov
dec
xchg
cmp
ficom
mov
imul
leave
sbb
fwait
jecxz
xchg
push
pop
dec
clc
pop
icebp
out
das
cmp
int
inc
mov
jl
inc
pop
(bad)
jmp
add
xchg
cmp
(bad)
fiadd
fldcw
stos
mov
pop
in
cmp
enter
pop
out
or
mov
adc
in
cmc
sahf
mov
popf
mov
je
das
mov
or
adc
jl
enter
xor
inc
int3
(bad)
outs
clc
or
adc
pop
adc
inc
lods
jo
jg
adc
dec
cwde
rol
(bad)
fisubr
fcom
push
xlat
jbe
mov
(bad)
out
cmps
jb
dec
lds
scas
xchg
ins
dec
or
mov
xchg
popf
popf
or
inc
out
and
jge
retf
adc
cwde
sub
jmp
jmp
lods
dec
stc
repnz
ja
mov
stc
(bad)
call
shl
jae
mov
scas
mov
add
(bad)
es
pop
test
inc
or
pop
adc
jl
rcr
sub
or
jne
inc
xchg
daa
mov
and
int
jge
sbb
scas
icebp
data16
call
jle
cld
cmp
pop
cmp
mov
out
adc
push
sbb
jle
and
pop
add
mov
(bad)
xor
and
adc
fld
pop
lahf
rol
add
loop
pop
jbe
test
aas
std
in
inc
in
icebp
ficom
sub
test
pop
cld
sub
sub
push
movs
(bad)
mov
inc
inc
xchg
dec
sub
std
cld
fnsave
adc
dec
gs
mov
fbld
data16
outs
daa
mov
repnz
pop
outs
dec
adc
sahf
sbb
hlt
cld
mov
fwait
hlt
add
call
adc
std
or
shl
inc
nop
lods
or
cld
xor
jp
scas
dec
mov
sub
je
cmp
cdq
xchg
cmp
jno
sbb
push
mov
aam
shr
push
in
xchg
inc
scas
loop
popf
lods
addr16
jp
xor
jp
jmp
inc
cdq
shl
add
imul
sbb
dec
call
ss
mov
add
cmp
inc
(bad)
inc
mov
dec
int
xchg
pop
lahf
(bad)
in
and
sbb
(bad)
aaa
cmp
enter
xor
mul
mov
cld
call
(bad)
lods
fsubr
or
sbb
(bad)
out
push
movs
adc
pop
into
jnp
push
mov
call
icebp
jne
ret
add
aaa
ins
adc
test
mov
inc
test
mov
enter
out
and
sub
or
ror
mov
xchg
cld
mov
mov
popa
ret
data16
inc
adc
icebp
push
mov
iret
pop
into
ret
retf
into
ror
mov
sub
std
repnz
fcmove
loope
sar
mov
fcom
aaa
jl
pop
rol
pusha
stos
jmp
jg
bound
sbb
retf
dec
pop
scas
lds
es
cmp
sub
mov
pop
add
int3
xchg
xor
inc
mov
xchg
adc
add
imul
push
lahf
lahf
stc
sub
cmp
fwait
es
mov
in
jg
dec
push
or
push
push
repnz
mov
sbb
xchg
push
ins
push
cmp
mov
push
mov
aad
cmps
stos
(bad)
mov
cmp
mov
test
int3
movs
jnp
inc
inc
jmp
fwait
sahf
and
jne
popa
push
mov
jp
push
fadd
mov
fisubr
bound
mov
test
push
inc
ret
cmps
push
sub
shr
dec
fwait
cmp
cs
inc
jge
out
or
inc
imul
inc
sbb
neg
push
(bad)
jne
pop
push
xchg
pop
in
pop
jo
ret
sub
cld
push
mov
bnd
mov
xchg
xchg
push
fwait
lock
and
in
add
aaa
push
jmp
sub
adc
ret
out
jge
dec
pushf
mov
in
mov
in
je
arpl
bound
inc
sbb
scas
dec
retf
inc
shr
jge
xchg
jne
inc
mov
xchg
mov
mov
dec
mov
aad
loopne
inc
aas
pop
pop
mov
pop
push
sbb
jo
xchg
inc
mov
mov
jmp
or
fld
hlt
std
test
cmps
xor
in
mov
sub
or
sti
fidiv
sbb
div
pop
cmp
ins
dec
es
ja
add
inc
pusha
jmp
adc
fwait
lea
outs
push
ror
loop
xchg
aad
mov
fisubr
stos
not
je
fsubrp
push
in
dec
aaa
mov
jmp
jns
mov
popa
xor
add
mov
out
mov
cli
jne
or
ins
enter
dec
and
movs
sub
push
jbe
imul
ds
jne
ficom
sub
jp
gs
mov
xlat
ret
xor
pop
dec
dec
dec
aam
pop
in
cmps
pop
pushf
(bad)
out
mov
xchg
daa
scas
mov
loope
jne
repz
clc
ins
ja
and
mov
les
mov
out
inc
mov
cmp
sbb
imul
xchg
pop
movs
push
pop
or
adc
(bad)
dec
mov
aas
hlt
pop
jmp
or
add
jo
dec
inc
jae
cmp
cmp
bound
out
sub
adc
icebp
sub
lahf
mov
mov
getsec
push
mov
psubusb
mov
sar
inc
nop
mov
gs
out
out
pop
push
imul
lahf
and
xchg
lods
or
data16
dec
and
test
mov
push
les
or
mov
sbb
ret
push
or
dec
add
sub
jmp
push
push
dec
loop
xchg
call
movs
xor
xchg
xor
ins
jmp
lea
call
or
pop
xor
inc
in
imul
in
xor
adc
or
jge
dec
mov
xchg
pushf
(bad)
ror
ins
jb
out
xor
mov
rcl
retf
or
imul
ss
jg
sbb
out
bound
rol
push
pop
(bad)
dec
dec
and
sbb
xlat
push
pop
ror
mov
jle
jno
das
int
imul
mov
icebp
cmc
imul
adc
popa
out
mov
xor
inc
adc
xor
mov
xchg
or
shr
mov
push
(bad)
sub
out
pop
add
cld
stc
xor
pop
les
cli
or
retf
out
push
add
sbb
ror
add
jp
popa
cmp
fstp
mov
icebp
cmp
jl
add
xlat
fidivr
inc
addr16
push
aam
or
and
sahf
push
test
(bad)
in
ja
jp
mov
(bad)
and
and
mov
iret
movs
fwait
mov
sbb
push
xchg
cmp
fsubp
jmp
add
pop
fdivr
push
or
imul
fabs
dec
pop
ret
popa
inc
aam
mov
dec
or
mov
fdiv
jo
outs
test
adc
cld
or
loop
repz
std
clc
ins
mov
das
(bad)
rcl
xor
push
pop
(bad)
int
loopne
mov
ficomp
and
dec
adc
mov
mov
jo
dec
xchg
leave
mov
frstor
or
xchg
pop
xchg
xorps
fst
outs
fimul
mov
push
out
enter
xchg
cmp
and
shl
dec
mov
inc
stos
mov
pop
in
add
and
sar
(bad)
int
jnp
hlt
pop
xchg
shl
sbb
push
das
mov
dec
push
add
das
daa
sub
add
mov
cwde
mov
(bad)
icebp
jle
pop
popa
(bad)
cmps
jmp
int
and
mov
xor
lods
push
or
js
js
or
mov
lea
nop
loop
pusha
jmp
or
pop
mov
push
out
(bad)
pop
cmp
popa
test
es
mov
mov
js
jg
pop
jmp
enter
arpl
inc
sub
sbb
sbb
or
adc
cs
cmps
pop
lods
dec
loop
arpl
and
mov
xor
sub
icebp
or
in
mov
fs
xchg
mov
in
push
out
add
mov
call
stc
call
lock
cmp
mov
sbb
clc
stc
push
inc
jl
inc
hlt
xchg
in
jmp
imul
pop
pop
fldcw
adc
and
inc
neg
stos
push
and
es
inc
neg
movs
fdiv
or
or
and
arpl
popa
xor
or
or
pop
jmp
dec
add
loop
jmp
or
jg
sbb
mov
jl
stos
lock
call
xchg
cmp
and
adc
cmps
lahf
enter
jg
push
lods
pop
scas
lods
dec
cmp
out
movs
sub
in
adc
or
fwait
pop
fisttp
mov
dec
imul
stos
aaa
in
pop
aad
mov
ror
pop
lea
into
mov
sbb
mov
mov
push
push
and
bound
or
cmp
pop
inc
dec
inc
mov
mov
lea
imul
sub
sub
aad
inc
push
jno
sbb
enter
push
inc
sub
jae
fst
clc
shr
xchg
popa
xlat
inc
mov
loopne
add
jb
push
xchg
in
or
push
cmp
(bad)
cmp
test
scas
rol
ja
shl
mov
out
jb
repnz
lods
adc
add
cmp
adc
xchg
jl
scas
or
mov
pop
or
mov
enter
push
mov
sub
out
movs
test
adc
jecxz
mov
test
dec
loop
mov
jg
or
push
add
sbb
(bad)
cmp
out
add
movs
sbb
in
jge
fwait
push
leave
pop
ror
int3
mov
mov
inc
adc
or
push
fwait
adc
std
mov
dec
out
push
or
push
in
popa
data16
call
cmps
xlat
ret
nop
mov
mov
(bad)
ss
stos
loopne
push
nop
scas
pop
cwde
cdq
or
int3
shr
mov
add
scas
(bad)
packsswb
adc
pop
or
fs
jecxz
je
sub
add
call
ja
loop
addr16
data16
fild
fist
xor
js
and
cs
(bad)
sbb
xchg
inc
or
mov
adc
xor
jp
push
sbb
inc
test
test
jno
(bad)
mov
dec
mov
xchg
pop
adc
sbb
mov
sub
or
sti
fistp
shl
pushf
aaa
ret
(bad)
sbb
loope
nop
fadd
lds
add
ins
sub
push
dec
jb
out
and
mov
(bad)
inc
gs
pop
push
mov
push
(bad)
jb
aas
popa
or
fld
jns
or
xchg
je
sub
jp
mov
cmc
jmp
push
in
neg
and
(bad)
daa
not
(bad)
sub
std
rcr
inc
hlt
sub
retf
mov
push
and
push
push
jecxz
hlt
pop
sti
mov
mov
cmp
inc
sbb
jg
or
push
jle
pop
mov
dec
ss
cmp
outs
xor
jmp
jae
or
call
ins
inc
test
and
cmp
mov
ret
aam
das
push
sti
cs
sbb
adc
repnz
lods
cmp
inc
push
mov
and
or
or
mov
cmps
push
and
pushf
int
call
aaa
inc
lahf
gs
add
push
fs
je
jge
and
ja
aam
pmaddwd
hlt
inc
lods
pusha
push
cmp
cmp
mov
scas
arpl
mov
mov
cwde
fld
jo
mov
inc
fst
mov
out
cmp
mov
cmps
dec
jae
add
cmps
sub
stos
loope
xor
fwait
cs
jecxz
inc
pop
ret
xchg
leave
ss
pop
and
das
or
out
push
out
mov
outs
hlt
adc
xor
scas
or
mov
stos
mov
inc
out
mov
stc
jo
aad
stos
xchg
mov
enter
add
jbe
jae
add
aad
int3
lods
ret
dec
stc
add
inc
rol
sub
xor
push
pop
jle
stos
mov
xchg
in
movs
(bad)
out
stc
jg
inc
xor
inc
dec
sbb
out
stos
retf
jnp
cwde
cmp
dec
mov
pop
xor
sub
js
push
repnz
call
cmp
cdq
jmp
ins
fiadd
mov
ret
inc
cmovle
mov
lods
(bad)
out
mov
adc
loope
xor
add
add
xchg
les
and
or
mov
push
das
cmps
sbb
je
inc
xor
test
jns
icebp
(bad)
je
sub
pop
lods
ficom
(bad)
jae
aaa
jl
je
pop
popf
test
jb
in
xor
mov
push
push
xchg
int
dec
movs
or
aad
sub
jb
jle
dec
pop
std
cmp
push
popf
int3
jmp
jne
mov
and
lea
jge
jl
lock
sbb
popa
mov
iret
outs
pop
pop
and
rcl
xchg
sbb
dec
xlat
movs
push
call
xchg
test
push
push
fdivrp
pop
ror
enter
xchg
std
adc
mov
sbb
mov
adc
fld
cmp
aad
mov
cli
sub
jno
xchg
xor
nop
popa
mov
cmp
out
xor
clc
pusha
js
gs
bound
out
repnz
inc
adc
mov
fcmovb
xor
out
lahf
jge
pushf
and
pop
and
bound
xor
cmp
dec
push
test
push
out
jge
mov
dec
outs
xchg
mov
or
iret
mov
jl
test
jne
movs
jecxz
out
mov
dec
popa
clc
push
(bad)
xor
clc
dec
mov
idiv
ds
and
inc
sub
dec
cli
sub
mov
int
aam
lahf
outs
push
test
cmp
hlt
sub
retf
mov
inc
inc
push
mov
out
mov
movs
push
sub
lock
stos
cmps
xchg
(bad)
mov
and
pushf
mov
arpl
(bad)
pop
stos
jp
pop
sbb
jmp
sbb
sub
mov
xchg
and
inc
dec
mov
sar
adc
push
mov
mov
aad
xchg
sub
jo
or
dec
sub
out
mov
(bad)
call
pop
mov
loope
dec
retf
loopne
jg
dec
retf
inc
dec
sbb
in
adc
add
js
int
shl
cli
push
inc
lods
sub
sahf
dec
cmp
mov
adc
and
push
call
(bad)
mov
mov
add
push
bound
dec
je
adc
je
inc
loopne
in
lods
xor
push
popf
in
mov
push
inc
test
mov
in
cwde
adc
jne
jge
dec
jb
xchg
jns
jne
push
repnz
adc
fidiv
mov
(bad)
cdq
aaa
lahf
jmp
in
call
and
outs
out
adc
imul
pop
dec
in
add
cmp
xchg
cmp
aam
loope
sub
push
cmp
and
push
sub
dec
or
or
shl
mov
addr16
adc
add
cmp
mov
cwde
or
test
into
adc
pop
je
xchg
mov
xor
sub
mul
scas
popa
and
shl
or
repnz
mov
fisttp
jl
mov
cmp
mov
call
ds
xchg
pop
jne
jns
or
pop
in
mov
pop
ja
sbb
mov
mov
cld
gs
fstp
sbb
retf
fiadd
aam
lods
mov
popf
das
pop
add
cmp
pop
pop
cmp
jno
sub
sar
repnz
cdq
jp
add
fwait
rol
scas
dec
xor
gs
xor
cdq
mov
cmp
xchg
inc
mov
and
push
jmp
xor
mov
aad
mov
mov
xchg
inc
inc
stc
jg
xchg
cmp
cli
xchg
dec
add
jne
loope
mov
mov
ins
xor
dec
inc
jo
scas
cmp
and
jecxz
push
or
push
sti
daa
xchg
push
mul
dec
cmp
out
add
popa
dec
adc
fwait
mov
jno
adc
ins
call
ins
in
cmps
frstor
int
retf
ja
lods
call
test
jnp
jg
ds
xchg
mov
push
sub
les
cwde
sub
xchg
and
cdq
out
mov
arpl
jge
mov
jmp
stc
pop
repz
sub
sub
xor
inc
and
mov
imul
sbb
jmp
sub
push
or
xor
clc
in
mov
xchg
push
mov
and
jae
pop
repz
fwait
adc
xor
cwde
scas
mov
scas
icebp
into
inc
or
or
rcr
pop
ret
push
sbb
add
sbb
not
es
inc
push
in
pop
js
or
cld
bound
int
pop
bound
out
mov
xchg
jbe
push
movsx
js
imul
mov
cs
test
jmp
fwait
push
lods
aaa
outs
sub
pop
xor
(bad)
sub
(bad)
cmp
cmp
out
mov
add
jmp
(bad)
lods
push
int3
mov
(bad)
and
leave
push
test
ss
icebp
ret
push
ret
(bad)
scas
add
xor
xor
pop
sub
xor
idiv
fsub
int
mov
pop
sbb
mov
aad
and
cmp
aam
cli
sub
ja
jb
in
xor
pop
jno
inc
xlat
adc
xor
inc
push
push
ret
lock
vpsubb
dec
xchg
sub
ds
bound
sahf
aaa
cli
cmp
sub
jecxz
add
mov
mov
or
mov
cdq
xchg
sbb
xchg
sub
sbb
lods
inc
std
cmp
mov
jne
sub
mov
js
push
loop
fist
fistp
sub
(bad)
fstp
pop
xchg
dec
daa
mov
scas
stos
dec
jmp
jno
dec
sbb
push
test
push
fldcw
mov
shr
push
popf
or
cli
fsubp
(bad)
dec
mov
and
mov
shr
push
sbb
ss
jmp
fist
cmp
push
xchg
cmps
(bad)
jbe
(bad)
xor
and
shl
fistp
jno
push
push
das
and
les
push
cli
mov
sahf
gs
enter
inc
sbb
pop
mov
dec
add
push
xchg
cmp
mov
call
ds
dec
xchg
cmps
xchg
(bad)
push
mov
movs
mov
pop
inc
les
push
adc
ret
inc
xchg
jecxz
lea
dec
sbb
xchg
jo
fsubr
pop
nop
jg
pop
mov
sbb
sti
pusha
inc
push
add
sbb
add
adc
mov
add
std
cli
jp
cmp
mov
retf
sbb
lea
ret
xor
jg
jne
ja
or
stos
push
in
cmp
push
mov
adc
shl
(bad)
cmc
mul
pop
dec
jb
mov
or
fst
movs
call
dec
cwde
sti
sub
fwait
call
and
je
lds
(bad)
adc
aaa
cmps
imul
jg
hlt
jp
pop
xchg
nop
les
adc
test
dec
bound
or
inc
adc
arpl
test
stos
(bad)
adc
cmp
or
mov
inc
sahf
shl
push
das
push
outs
adc
stos
adc
fsubrp
jecxz
aad
push
stos
dec
push
push
mov
dec
call
cld
mov
sub
sbb
jae
fist
pusha
add
daa
(bad)
out
aad
jns
cmps
test
dec
jle
ficomp
fadd
mov
fsub
mov
xchg
inc
pop
outs
nop
push
in
and
repnz
dec
mov
mov
cs
sbb
mov
pop
shl
xor
test
adc
arpl
push
and
les
mov
lock
and
inc
rol
inc
push
pusha
jp
xchg
xor
sub
sbb
hlt
mov
sub
and
sub
xor
scas
lea
and
js
loop
sub
sub
pop
repz
das
fsub
add
jno
(bad)
mov
cmps
xchg
and
pop
mov
mov
call
jb
test
lahf
stos
sti
daa
jbe
test
clc
mov
scas
aam
mov
movzx
loop
dec
push
add
int
jmp
mov
sub
push
and
int3
jne
push
inc
push
jbe
push
retf
mov
sti
add
mov
dec
inc
mov
mov
int3
lahf
push
in
mov
div
test
scas
inc
imul
loope
pop
sahf
test
push
adc
dec
pop
jbe
mov
stos
sub
sbb
addr16
pop
in
cdq
test
enter
call
dec
cmp
ret
mov
jg
push
push
push
dec
pop
dec
std
mov
cmp
stos
je
enter
fidiv
cmp
jns
or
enter
jmp
pop
push
mov
pop
lea
int
mov
sub
sbb
in
in
mov
out
out
outs
arpl
and
lock
not
fucom
iret
pop
mov
cdq
pop
pop
dec
dec
dec
mov
xchg
add
mov
lock
push
and
ror
mov
sub
aaa
push
bound
fwait
add
lods
pop
xlat
fxch
ficom
pop
push
imul
cmc
adc
stos
xchg
out
pusha
dec
stc
sbb
xchg
std
arpl
jbe
jns
inc
pop
inc
xchg
aam
or
outs
das
je
sub
imul
jne
xchg
pop
out
(bad)
xchg
(bad)
in
(bad)
cld
in
mov
lock
stos
sbb
(bad)
in
popa
ss
dec
imul
pop
pop
ds
movs
sub
mov
xor
ins
in
xchg
or
loopne
call
fcomp
sub
jns
mov
jbe
bound
int3
mov
xchg
cmp
lds
push
inc
sbb
push
xchg
and
mov
inc
arpl
mov
(bad)
cmp
sub
inc
xchg
mov
add
scas
xchg
cs
sub
push
sbb
xchg
inc
add
xlat
inc
test
jmp
lock
adc
scas
add
fist
fstp
mov
nop
scas
xchg
sub
xor
cmp
xchg
(bad)
mov
mov
adc
xor
enter
out
adc
jge
aas
and
les
fs
aas
out
mov
mov
push
push
mov
es
xchg
xchg
push
lea
inc
or
adc
mov
pop
push
lods
std
pop
mov
retf
addr16
popa
and
or
ror
mov
int
test
cdq
pop
and
mov
add
stos
test
sahf
scas
fwait
ror
pop
pop
ins
sub
ins
das
je
and
mov
shl
in
jmp
dec
sar
xchg
xor
mov
inc
ret
jle
mov
fld
es
jno
(bad)
addr16
retf
aad
bound
loopne
jae
popa
ja
xchg
jbe
fnstenv
mov
jmp
jno
leave
sbb
pop
(bad)
xor
push
mov
leave
adc
stos
jmp
movs
cs
mov
mov
lahf
retf
dec
ficomp
leave
ins
iret
ins
nop
(bad)
jnp
ss
ror
int
mov
sbb
pop
xor
(bad)
add
pop
popf
scas
or
mov
addr16
mov
bound
daa
cmp
retf
inc
jl
mov
or
mov
xchg
test
repnz
imul
test
ins
adc
or
adc
mov
ss
cmp
and
cmp
pushf
inc
and
cwde
mov
rcr
clc
or
mov
jns
pop
push
scas
popa
aas
mov
retf
push
push
mov
dec
xor
aas
mov
cmp
jae
pop
dec
mov
lods
sub
push
cmps
push
mov
mov
out
push
fsub
and
cmc
js
or
mov
sub
shl
das
movs
add
add
icebp
ficom
cmps
icebp
mov
scas
(bad)
and
repnz
cmp
inc
pop
ins
sbb
fst
outs
mov
pop
mov
sub
pop
call
mov
or
pop
fcmovne
(bad)
ja
mov
jecxz
repz
push
or
mov
inc
fcomp
out
mov
(bad)
push
inc
adc
fldenv
adc
inc
loopne
aad
fcom
(bad)
xor
imul
mov
lea
mov
sub
mov
jo
jb
iret
mov
jns
test
popa
ror
sti
or
and
pusha
add
push
mov
mov
fmul
int3
fisubr
xor
jp
jae
mov
xchg
sti
mov
pop
repnz
adc
jmp
in
xchg
pop
add
loopne
sbb
bound
xchg
xor
xchg
dec
push
jmp
jbe
adc
inc
fcom
pop
cli
mov
call
ja
test
mov
aam
dec
mov
rcl
mov
lahf
aam
mov
pop
jns
btr
(bad)
test
push
xor
mov
adc
into
sub
and
xor
(bad)
dec
lods
inc
inc
sbb
fnstcw
xor
dec
add
cld
and
jmp
stos
cmp
pop
std
aas
xor
add
clc
mov
sub
sub
and
xor
into
popf
add
jb
shl
xlat
pusha
rcl
fcomp
sub
mov
and
jo
sbb
out
lods
mov
add
(bad)
fnstcw
lock
sar
jecxz
mov
sub
cld
out
dec
jp
addr16
repz
stos
mov
bound
sub
arpl
push
xchg
pop
fsubr
sar
xchg
pusha
sbb
inc
mov
xlat
pop
and
xor
pop
test
cmc
div
xchg
fs
and
(bad)
clc
push
fistp
and
loopne
enter
mov
mov
clc
and
push
push
xchg
xlat
sbb
mov
jnp
test
mov
cdq
adc
pop
cld
adc
pop
movs
jmp
lahf
sbb
jle
pushf
rcr
lds
imul
jecxz
inc
push
je
jle
cld
xor
leave
shr
lea
movs
add
dec
or
push
cmp
aaa
mov
icebp
dec
pop
imul
sub
and
aam
cs
jbe
xchg
jp
or
adc
xchg
pop
add
fstp
inc
mov
mov
clc
(bad)
rol
fwait
pop
xor
shr
sbb
int3
xor
mov
iret
xor
cs
call
or
(bad)
aam
inc
data16
popa
pop
out
inc
call
js
(bad)
iret
xor
lods
sahf
aaa
push
(bad)
daa
mov
fsubr
or
jl
mov
dec
pop
nop
hlt
popf
and
mov
add
movs
mov
dec
pop
in
or
mov
mov
jge
int
xor
aas
jno
ss
mov
inc
outs
cdq
dec
cli
inc
(bad)
int
lods
sub
push
in
neg
(bad)
ss
cmps
int3
sub
in
ja
pop
adc
das
jns
fwait
enter
cli
ins
fld
and
sar
mov
dec
and
cmc
lds
fwait
and
es
ret
repnz
sbb
mov
add
ins
xchg
ins
dec
lock
out
in
aas
mov
xor
jle
ins
in
push
aam
repnz
rcl
mov
js
push
cmp
mov
pop
lea
push
push
pop
xchg
outs
jmp
push
xor
dec
sar
mov
or
rcr
jmp
push
lock
push
shl
cmc
jmp
mov
jge
test
jge
mov
jns
arpl
xchg
jle
scas
xor
adc
jnp
xchg
add
test
fist
pop
inc
mov
sbb
retf
lods
cmp
mov
ret
test
cmps
iret
out
ja
sbb
mov
adc
dec
push
lahf
movs
jp
nop
or
(bad)
mov
int3
cdq
push
and
jae
mov
sti
mov
dec
test
gs
and
add
inc
repz
pop
cmps
aad
lds
xor
inc
(bad)
loope
mov
lahf
mov
adc
int3
jge
sub
push
outs
pop
clc
retf
adc
xchg
sub
pusha
js
(bad)
mov
dec
mov
fadd
repz
cmp
cmp
push
add
push
cmps
cmp
mov
into
mov
int3
mov
add
(bad)
mov
test
xchg
movs
sbb
push
xchg
xchg
test
shl
jb
jmp
inc
mov
add
or
and
lds
popf
fs
jecxz
mov
call
dec
dec
cmps
sbb
xchg
push
inc
mov
scas
ret
pop
das
mov
in
aaa
into
pop
jns
shl
test
jmp
dec
pop
mov
rcl
sbb
jb
mov
cdq
in
int
pop
es
ins
push
mov
lds
jg
(bad)
mov
xor
call
or
gs
or
shr
pushf
push
lock
mov
(bad)
mov
push
sbb
loope
mov
or
xor
sub
in
lods
mov
or
(bad)
test
shr
test
(bad)
push
js
test
sahf
gs
or
pusha
cmp
xchg
icebp
hlt
xor
sub
out
clc
mov
push
pop
push
xchg
enter
jle
ror
dec
cwde
adc
cmp
test
ja
out
pop
xlat
nop
inc
or
or
retf
retf
test
ret
mov
test
repz
rcl
fcom
loopne
jnp
ror
push
or
cmp
and
stos
jge
cmp
fidiv
pop
pop
mov
in
and
sub
mov
mov
push
push
sub
loop
xor
push
add
std
mov
cdq
mov
and
not
test
std
inc
repz
imul
imul
push
cwde
push
into
sahf
sbb
das
(bad)
fadd
dec
mov
sbb
(bad)
mov
stos
scas
(bad)
and
rcr
mov
jae
or
jo
cmp
jae
sqrtps
sahf
ficom
stc
jae
pop
rcl
imul
iret
and
stc
jecxz
and
jmp
fstp
repz
pop
add
push
adc
sbb
add
in
aad
dec
(bad)
xor
scas
stos
data16
cmp
aam
mov
pop
jp
loope
jge
cmp
call
jle
cld
dec
xor
xchg
mov
mov
and
inc
rcr
clc
push
or
sbb
dec
sbb
jge
addr16
mov
and
lahf
sub
shr
add
enter
cwde
fist
mov
adc
mov
push
arpl
cmp
pusha
popf
lock
push
xchg
pop
sub
mov
xchg
and
sub
sub
cmp
xchg
scas
xchg
push
mov
pop
lds
pop
fwait
shl
shl
push
test
test
shl
call
sbb
icebp
cmps
cmps
jp
jne
mov
mov
push
fld
dec
movs
je
mov
cli
mov
ins
pop
loop
inc
es
mov
scas
push
jns
jnp
xchg
jae
(bad)
pop
(bad)
mov
jnp
adc
sbb
and
mov
call
fst
in
pop
cmp
hlt
sbb
cmp
(bad)
movs
fsub
dec
mov
das
or
stos
sub
fist
pop
jo
test
mov
xchg
cmc
xor
mov
stos
xor
repz
cs
fld
cld
sbb
push
scas
pop
push
das
das
mov
sbb
inc
sti
das
cli
or
add
push
sub
pop
mov
leave
pop
adc
mov
mov
push
fidiv
sbb
pop
push
mov
jmp
pop
push
dec
rcr
xchg
jno
cs
inc
pop
and
test
push
cmps
shl
push
mov
shl
(bad)
dec
inc
mov
cs
dec
jmp
popf
test
mov
push
test
pop
and
test
cmp
add
xchg
or
pop
pop
pop
sbb
adc
pop
pop
cs
cmp
iret
pop
xor
cmp
pusha
xchg
and
add
pop
sar
inc
dec
jmp
ror
hlt
sti
fistp
sub
daa
loopne
mov
xor
daa
jns
mov
mov
add
fnstenv
repz
pushf
adc
cli
aam
and
fwait
inc
mov
retf
icebp
cmp
ins
mov
mov
pushf
sbb
cdq
xchg
jne
sub
or
and
fcmovbe
adc
(bad)
and
pop
sbb
jo
mov
int3
xchg
mov
scas
push
call
scas
push
cmp
mov
test
(bad)
push
add
dec
pop
imul
cmovo
scas
cwde
shl
movs
or
fucomi
in
fs
sbb
adc
ins
fldenv
iret
aam
loop
push
push
cwde
in
push
and
mov
cs
mov
das
sbb
jmp
ja
mov
and
fcmove
or
and
xchg
sar
lock
lods
cmps
push
sub
mov
outs
pop
inc
push
in
sbb
push
je
sbb
push
aam
pop
pop
sbb
mov
sbb
fistp
addr16
outs
outs
aad
inc
jb
sub
dec
ja
mov
xlat
int3
push
(bad)
or
fdivr
or
ret
rcl
inc
(bad)
push
mov
and
ret
pop
iret
(bad)
repnz
push
fsubr
stc
cmp
jg
push
jae
hlt
popf
xlat
pop
adc
push
aam
shl
push
jp
out
jmp
out
pop
mov
xor
cld
xor
sbb
nop
cmp
ror
jle
aam
add
jle
shrd
sti
jmp
aad
mov
xlat
jne
jle
mov
mov
cli
repz
adc
js
sbb
call
retf
push
mov
and
push
(bad)
popa
mov
leave
push
mov
imul
loope
retf
outs
sub
fstp
cdq
push
shl
rcr
fs
mov
jmp
add
xchg
or
ror
push
in
jns
pop
ja
push
cmp
hlt
leave
fisub
xlat
aas
xchg
sti
pop
idiv
pop
fdivp
popa
sahf
cmps
and
sahf
pop
pop
push
push
xchg
mov
pop
dec
ror
jae
cwde
data16
rcl
jns
jmp
cli
jno
xchg
rol
cmps
scas
inc
cwde
xor
repnz
pusha
sub
jnp
movs
xor
mov
cdq
mov
shl
repz
js
add
mov
test
shl
sahf
(bad)
adc
mov
push
stos
xchg
pop
jmp
push
and
and
sub
jg
fnstenv
or
scas
and
mov
mov
jle
push
pop
inc
inc
sub
ror
outs
push
jno
mov
jecxz
shl
or
fucomp
inc
imul
aaa
mov
cmp
xchg
pop
sbb
cli
rcl
xchg
sbb
push
stos
mov
xor
nop
sbb
fwait
add
inc
out
repnz
xor
jmp
inc
sub
test
pop
and
sbb
mov
into
lahf
pop
adc
mov
dec
sub
js
xor
add
inc
in
call
and
(bad)
dec
ins
and
sub
pop
mov
mov
jge
and
jecxz
mov
push
sbb
inc
mov
xchg
call
mov
cmp
retf
mov
out
pop
xor
cmps
int3
jnp
sahf
sbb
ins
daa
jne
mul
in
xor
push
add
push
cli
xchg
push
out
and
adc
add
(bad)
mov
fsubr
cs
loop
dec
mov
push
cld
push
add
mov
fdiv
adc
lds
fcom
cli
pushf
out
pop
je
adc
mov
push
je
sbb
out
xor
adc
lods
int3
jmp
xchg
cs
fisubr
stc
mov
add
jno
hlt
popa
add
cmps
push
jbe
jl
es
daa
or
sahf
in
inc
mov
add
ret
sti
std
dec
adc
out
pop
aaa
and
int
jbe
stc
fmulp
xchg
or
outs
and
out
ror
rol
pop
xchg
nop
add
(bad)
mov
andnps
imul
loopne
test
sahf
push
ret
fld
jl
icebp
cmp
imul
pop
sbb
pop
mov
test
xchg
sbb
sti
sbb
aaa
hlt
push
cli
dec
cmp
retf
xchg
dec
adc
inc
xchg
or
inc
mov
fstp
lsl
fwait
sar
ret
jno
push
mov
xor
sbb
xor
retf
cmps
push
or
jmp
sbb
lahf
jge
aaa
jg
sub
mov
pop
add
cmps
mov
fsubr
pop
push
and
hlt
xchg
inc
inc
repnz
cmc
aad
push
mov
in
rol
mov
adc
rol
aaa
mov
xchg
sbb
jns
test
or
pop
push
shl
push
mov
mov
push
inc
fild
bound
mov
(bad)
push
retf
out
stos
pop
clc
push
out
aaa
cmp
adc
iret
cli
sub
adc
popf
into
mov
ror
mov
dec
cld
pop
mov
dec
mov
pop
adc
and
dec
inc
cmps
aaa
js
mov
or
fld
sub
dec
inc
(bad)
icebp
mov
cmp
dec
pop
adc
outs
mov
xchg
test
mov
rcl
jecxz
inc
std
push
dec
shl
mov
call
sbb
ja
xchg
outs
popf
mov
and
sar
jb
(bad)
and
sbb
mov
fcomp
xchg
sbb
div
and
mov
cmps
call
fdivr
xchg
mov
pcmpeqw
pushf
cmp
mov
imul
add
cld
jns
adc
add
imul
xchg
xor
sbb
sbb
pop
and
mov
lock
sahf
jne
inc
outs
sti
mov
adc
in
jmp
or
xchg
pop
movs
xor
(bad)
mov
or
jmp
and
add
scas
gs
cdq
mov
sbb
mov
fadd
cmp
shl
xchg
cmp
pop
xchg
iret
xchg
mov
jo
scas
mov
jb
enter
sub
jns
adc
bound
and
(bad)
or
fwait
lock
int3
loopne
jmp
out
jp
scas
push
mov
out
xchg
jne
call
fisubr
(bad)
enter
(bad)
inc
mov
pop
icebp
fdiv
mov
mov
(bad)
cmp
jae
jne
mov
sbb
xchg
loopne
and
arpl
fadd
movs
sub
push
mov
popf
into
and
into
jb
xlat
xchg
icebp
push
xchg
xchg
dec
fistp
comiss
mov
cmp
imul
xor
lock
sub
xchg
adc
ret
xchg
cld
sbb
lahf
push
call
adc
lods
scas
cli
arpl
pop
(bad)
sti
stc
(bad)
aad
xor
std
pop
jbe
push
jnp
ret
xchg
xor
in
xchg
dec
pusha
sbb
sbb
fist
rcr
ins
(bad)
(bad)
xlat
and
nop
push
test
dec
sar
pop
jge
xchg
das
pop
dec
sbb
cmps
clc
pop
retf
test
inc
push
je
int3
xchg
stos
icebp
cmps
pushf
inc
and
cmp
scas
call
and
cld
aas
outs
push
lea
bound
pusha
push
adc
cli
sub
mov
retf
cs
out
mov
popf
imul
loopne
das
cmp
popf
fadd
cmps
gs
push
cmps
add
test
pop
inc
jae
push
bnd
retf
mov
shl
mov
dec
sti
push
std
cmp
out
sahf
call
pop
movs
sub
mov
in
scas
jecxz
movs
push
(bad)
in
push
scas
movs
mov
je
dec
add
ins
call
out
fsubr
sar
scas
cwde
sub
dec
dec
or
ss
loope
xchg
push
out
xchg
push
lds
xchg
xchg
(bad)
push
inc
sub
or
sti
fistp
jp
fiadd
addr16
pop
inc
sub
(bad)
icebp
mov
int
push
sahf
dec
sub
jg
cmp
mov
mov
xlat
cmp
sar
pusha
retf
outs
mov
les
sbb
mov
dec
shufps
sahf
popa
xor
jnp
add
mov
mov
(bad)
jmp
cmc
hlt
loope
lods
add
movs
ins
add
cmps
pop
shl
xchg
(bad)
xchg
add
sub
fadd
outs
imul
ins
clc
push
sbb
test
mov
hlt
nop
xor
add
xchg
push
sbb
inc
adc
ret
pop
int3
or
popa
imul
dec
ret
inc
mov
mov
imul
mov
pop
cmps
(bad)
pushf
jo
test
loopne
add
push
add
and
ja
mov
(bad)
sar
fidiv
or
inc
pop
sub
scas
sti
add
xchg
xchg
popf
cmp
movs
in
mov
pusha
ret
inc
cmp
adc
jl
sar
sbb
call
jae
inc
xchg
cmp
mov
xchg
(bad)
(bad)
cli
ror
dec
dec
sahf
test
ja
cmp
xor
aam
cwde
cmp
nop
push
enter
and
retf
cs
stos
jecxz
jmp
sub
cmps
pop
xor
mov
add
fiadd
jnp
push
dec
jecxz
test
out
ins
xor
retf
jle
out
mov
aam
mul
pop
out
push
dec
in
dec
cld
das
data16
aam
test
xchg
pop
outs
push
mov
in
ss
les
mov
mov
aam
nop
test
add
adc
xor
mov
mov
test
sub
and
ins
fidiv
jmp
and
stc
push
movs
lock
lock
cmp
cdq
pop
and
adc
mov
arpl
sub
scas
pop
popf
popf
test
lods
cmps
mov
sbb
ja
mov
std
inc
sub
test
mov
sub
jmp
mov
int3
addr16
pop
push
test
inc
in
jmp
test
lahf
or
sub
inc
out
jbe
popa
scas
into
jnp
add
xchg
in
pop
push
xchg
movs
sahf
fld
rcl
pop
push
xor
xchg
test
inc
sub
in
pop
sbb
int
mov
cmp
pop
xchg
mov
in
xchg
and
(bad)
jg
xor
jns
pop
fs
and
hlt
pop
popa
jns
dec
dec
call
mov
mov
dec
dec
sub
(bad)
xchg
sbb
dec
cs
lods
into
mov
sbb
shr
adc
xor
mov
push
jno
(bad)
retf
imul
fs
retf
pop
mov
mov
push
sbb
xor
and
je
dec
mov
and
add
add
(bad)
fnsave
xchg
xor
push
or
mov
cmp
mov
clc
movups
(bad)
aam
adc
fxch
lock
shl
cdq
in
push
mov
loope
sbb
jne
clc
ffree
inc
pusha
les
aam
cmps
lds
loop
cmps
cs
xor
outs
jg
repz
xchg
loop
icebp
xchg
mov
mov
mov
jmp
push
jno
inc
in
test
addr16
frstor
xor
out
adc
and
int
test
sub
jbe
push
adc
or
push
inc
ret
ins
dec
xchg
or
fmul
sbb
out
aam
cwde
cmp
addr16
stc
cld
aam
xchg
dec
sbb
add
dec
jnp
cmp
jns
xchg
push
pop
or
lods
sbb
mov
xchg
add
test
mov
fnstcw
mov
cmp
pop
dec
or
in
cmc
sub
inc
cmp
retf
xchg
adc
add
jbe
lods
dec
xor
in
out
push
cmp
push
retf
jmp
enter
push
dec
fdiv
sbb
lea
bound
mov
adc
test
aas
or
dec
leave
mov
shl
cmp
in
inc
pop
push
cmp
sub
adc
adc
adc
mov
mov
or
test
call
dec
cmp
(bad)
xlat
lahf
pop
stos
and
adc
lock
clc
push
in
sub
fstp
cmp
test
fsubr
arpl
xor
or
mov
popa
(bad)
jae
mov
scas
push
aaa
inc
je
jp
dec
ins
lock
add
dec
pop
cvttps2pi
cmps
imul
fdivr
inc
nop
icebp
les
sti
push
sbb
aaa
fnstsw
mov
jmp
xchg
mov
out
push
inc
in
mov
call
dec
inc
adc
pop
xor
push
enter
xlat
inc
mov
lods
add
sbb
mov
lock
sbb
call
sbb
lock
(bad)
out
int
jecxz
je
mov
or
mov
(bad)
imul
xor
and
dec
retf
movs
dec
and
inc
mov
push
fstp
mov
xor
inc
leave
test
mov
add
jl
xchg
xchg
dec
pop
ins
xor
push
call
movs
mov
xor
xor
jmp
or
mov
nop
sub
retf
ret
pop
add
test
sahf
sub
or
into
or
dec
inc
call
lock
push
mov
pavgw
aas
pusha
add
and
aas
enter
xor
aas
ret
fisttp
repnz
scas
adc
pop
or
ret
xor
mov
add
out
dec
and
cdq
scas
and
movs
pop
mov
sub
bound
xlat
cmovns
cmp
add
push
mov
fiadd
ja
sub
test
mov
inc
imul
scas
scas
adc
(bad)
into
add
push
and
push
daa
add
fistp
int3
les
icebp
je
add
jnp
and
test
xor
mov
test
xchg
mov
imul
adc
and
loopne
(bad)
in
jb
cmps
jne
adc
outs
push
dec
dec
xor
mov
inc
jmp
aas
(bad)
stc
pop
je
push
std
mov
das
adc
mov
cmp
sar
shl
sti
or
jge
push
nop
int
mov
mov
pop
in
push
out
ins
daa
mov
imul
shr
jp
mov
push
ficom
push
fdivr
repnz
add
sub
push
popa
lahf
imul
xchg
jp
adc
int3
lods
cmp
pop
cmp
xor
neg
mov
(bad)
mov
cmp
adc
push
iret
out
shl
add
inc
ss
je
(bad)
retf
mov
mov
xor
test
xchg
mov
jl
jmp
push
mov
push
add
or
push
xor
out
test
adc
push
xor
mov
xchg
test
jne
xor
out
ins
out
jnp
retf
mov
jmp
or
jle
jbe
mov
leave
je
cld
(bad)
mov
imul
mov
jge
pop
mov
mov
in
jmp
and
cmp
rcl
pushf
cli
dec
lds
test
(bad)
jl
sbb
dec
add
scas
scas
mov
shl
jae
pop
pop
js
cmp
push
ror
jno
scas
je
xor
test
not
rol
lds
mov
ins
jne
xchg
xor
stos
mov
ror
jae
push
test
ret
outs
and
loop
and
or
call
ja
pop
es
retf
mov
add
outs
push
pop
pop
mov
popf
es
or
mov
(bad)
icebp
mov
push
leave
in
loopne
daa
(bad)
out
mov
into
inc
int
data16
dec
sub
(bad)
imul
fcomp
and
fs
cmps
in
and
int
jecxz
and
cld
cwde
hlt
sub
sub
iret
imul
xchg
in
pushf
sub
sbb
push
in
gs
std
imul
push
ss
jecxz
test
lds
dec
mov
xor
(bad)
in
mov
shr
lahf
je
mov
push
pop
xchg
fs
sub
lods
adc
cmp
in
aaa
jne
push
jmp
hlt
sub
jb
mov
call
pop
daa
stos
dec
inc
xchg
test
(bad)
dec
xor
mov
aaa
int3
hlt
mov
add
push
adc
xchg
in
dec
jmp
sub
xor
pop
add
and
inc
stos
mov
cdq
push
ins
mov
add
pusha
push
jns
test
sahf
loop
movs
lea
jge
movs
jmp
lock
test
fdivr
push
nop
cmp
push
adc
bound
rcl
mov
push
push
push
push
std
xlat
lods
cmps
mov
ds
imul
fisubr
ss
lahf
xchg
pop
pusha
call
sbb
mov
inc
jge
or
xchg
leave
jge
dec
out
rol
into
int
jge
seta
ror
dec
js
inc
mov
ret
rcl
inc
icebp
cmp
mov
adc
xchg
add
or
jmp
repnz
test
(bad)
and
fdivp
mov
dec
add
addr16
test
lahf
sub
icebp
fwait
in
xor
lea
inc
int
adc
test
movs
dec
or
pop
outs
mov
(bad)
les
cmp
shl
or
ret
pop
jmp
dec
fsub
mov
dec
dec
inc
and
jno
fsubr
es
xchg
cmp
add
jmp
push
lods
addr16
and
enter
iret
dec
jg
cld
add
xchg
nop
pop
mov
mov
pop
jbe
add
idiv
add
add
adc
pop
dec
mov
mov
sbb
mov
pop
retf
cmp
mov
aad
inc
mov
inc
arpl
scas
mov
jle
jge
mov
adc
jmp
(bad)
and
inc
cs
mov
adc
into
or
pop
or
(bad)
jp
mov
bound
lock
out
aas
pop
rcr
movs
ins
pop
and
shr
inc
push
and
in
or
add
push
and
shl
sar
fs
jo
xlat
mov
jecxz
jg
adc
mov
aam
dec
imul
stc
dec
icebp
in
dec
push
inc
cmp
cmp
popa
inc
adc
sub
mov
or
je
cmps
push
push
xchg
adc
xchg
(bad)
fidivr
iret
jmp
sbb
lds
mov
pop
scas
in
push
ins
jns
sbb
retf
dec
movs
inc
shl
jl
aad
call
mov
and
ret
stos
popf
mov
leave
sbb
adc
push
jge
faddp
stos
icebp
cmc
and
jmp
sub
pop
inc
and
push
out
ret
jl
dec
adc
mov
xlat
dec
sbb
sbb
cmp
lea
in
js
sub
add
loope
fist
fucomip
cmp
mov
enter
popf
aam
and
pop
sub
sub
rcr
cmc
not
adc
push
xchg
fisttp
dec
cmp
add
or
aaa
push
jnp
xchg
pop
scas
pop
iret
call
repnz
and
jns
cmp
jge
cmp
xor
js
movs
xchg
ror
and
fdivr
push
lahf
xor
push
je
cmp
movs
pop
push
jo
pushf
jg
stos
mov
and
mov
(bad)
pop
pusha
stos
push
mov
sub
call
inc
scas
test
mov
movs
push
dec
stos
int3
fld
sbb
loop
rcl
push
aad
stos
test
jne
hlt
jmp
int3
mov
rcr
pop
shr
fst
movs
fstp
jns
dec
push
and
ss
jbe
repz
jmp
mov
jnp
nop
addr16
mov
ja
jmp
test
rep
aam
jl
test
mov
xor
fdivr
jae
and
or
push
xlat
cmc
test
xchg
ds
ds
sbb
(bad)
inc
sbb
lds
aam
pop
cmp
inc
jb
jmp
loopne
jmp
pop
rcr
xchg
and
add
shl
call
dec
cli
cwde
pop
je
jns
jnp
pop
test
xchg
aaa
test
jo
jge
dec
jne
fs
cmp
loope
stos
pop
jmp
std
out
sub
xchg
mov
fwait
repz
neg
push
ret
fidiv
ret
pop
xchg
pop
sbb
out
scas
push
stos
cmp
pop
jno
ret
enter
loopne
fdivr
jmp
aas
std
call
adc
cmp
cs
add
nop
fwait
pop
pop
inc
gs
pusha
dec
ret
dec
test
mov
jno
sahf
add
lea
mov
mov
dec
mov
push
dec
mov
mov
movs
push
test
addr16
out
aas
int3
and
mov
or
xor
pop
pop
dec
mov
leave
and
call
es
pop
inc
lods
push
mov
push
push
cmp
into
arpl
jle
or
in
mov
and
imul
and
into
lea
pop
sahf
aaa
sub
lods
ins
add
and
xchg
into
and
ret
repz
hlt
into
jp
popa
push
pushf
jl
and
dec
mov
inc
mov
call
fnstenv
movs
outs
xlat
dec
dec
mov
sub
cmp
jno
jmp
jle
push
test
mov
and
push
pop
sbb
jge
(bad)
(bad)
out
cmp
sbb
mov
out
pop
mov
lods
jg
jae
jo
mov
jb
ins
push
std
cwde
scas
stos
cmp
inc
push
jp
mov
jle
push
jbe
out
jl
clc
(bad)
jmp
call
push
rcr
fistp
ret
inc
push
mov
aam
sbb
dec
mov
je
push
loop
cli
jecxz
mov
and
xor
in
and
pop
fiadd
sub
mov
stos
in
pop
test
mov
sbb
in
sbb
int
add
rep
xchg
push
lea
mov
out
inc
push
sub
mov
cli
fild
sahf
les
int3
jmp
jmp
adc
(bad)
out
scas
and
xor
test
sub
loop
(bad)
int3
lahf
es
test
xor
lds
(bad)
cli
mov
inc
pop
cmp
das
mov
in
mov
add
jae
mov
jmp
int
mov
in
sub
dec
sub
minps
sbb
in
aam
data16
dec
xchg
ss
out
pop
jecxz
mov
dec
push
mov
sbb
sub
sahf
iret
je
mov
lock
pop
sub
imul
dec
loope
gs
inc
cdq
enter
in
cmps
lea
mov
adc
pop
nop
(bad)
cs
movs
pop
xchg
bound
stc
movs
inc
inc
dec
ror
test
mov
or
and
cmps
xor
cli
adc
call
loopne
je
sub
pop
outs
in
retf
(bad)
out
cmps
(bad)
shl
lods
rcr
or
dec
out
xor
repnz
sub
fisttp
and
cmp
test
mov
xor
mov
push
push
(bad)
adc
imul
xlat
pop
cli
ficom
shr
ret
cmp
cmp
dec
pop
mov
into
clc
outs
dec
jae
add
mov
outs
(bad)
fstp
xor
xor
bound
inc
jl
les
and
jmp
pop
mov
jle
je
enter
or
data16
xor
lds
sub
loop
pop
ja
cmp
mov
stos
lods
sub
pop
xacquire
xor
fstp
repnz
ins
cmp
fstp
mov
sub
leave
enter
clc
sub
inc
jl
movs
ss
por
xchg
sub
sahf
retf
inc
fbld
push
int3
jmp
push
sub
call
shr
sbb
idiv
(bad)
cli
sub
push
nop
ret
addr16
dec
jg
pop
mov
div
jns
in
dec
daa
and
dec
sub
sbb
outs
mov
std
and
lea
jnp
ret
cmps
shld
stc
mov
jmp
sub
cmp
ja
pop
inc
cmp
test
nop
in
lods
in
push
les
cmp
es
dec
and
sub
lahf
mov
inc
sub
xchg
mov
out
int
add
mov
jle
or
popf
ins
mov
icebp
outs
aaa
inc
mov
mov
mov
inc
lds
stos
dec
ret
pushf
iret
loop
iret
jne
adc
lods
push
je
int
mov
inc
scas
lock
stc
cmp
mov
and
test
aaa
bnd
mov
enter
movs
pusha
(bad)
shl
mov
ss
mov
jecxz
mov
adc
inc
and
sub
mov
cmp
mov
adc
ret
mov
not
into
cmps
ret
(bad)
imul
xor
fiadd
inc
push
imul
dec
out
rol
outs
lods
and
pop
repnz
lods
add
mov
fwait
xchg
adc
out
mov
into
ja
fist
call
ja
aam
in
cmp
pop
cld
ror
pop
sub
retw
imul
cmp
sbb
adc
fsub
mov
ja
push
cmp
daa
push
rol
scas
xlat
sub
pop
mov
sbb
adc
das
std
xor
and
xchg
push
daa
jo
scas
add
and
mov
rcr
cs
retf
ror
jp
adc
cli
cmp
xchg
aam
dec
jmp
adc
ds
pop
imul
mov
sti
aaa
arpl
xchg
rol
sbb
sbb
jne
add
xor
inc
push
xor
xchg
mov
cwde
je
dec
stos
dec
scas
and
in
xchg
pop
mov
ret
or
pop
push
sbb
mov
sahf
pop
sbb
and
dec
and
ret
sub
pop
ja
scas
mov
mov
inc
imul
add
out
(bad)
push
xchg
movs
sbb
or
rol
adc
jbe
cmps
cmp
pushf
in
pop
jp
in
pop
jl
jns
mov
jb
pop
ins
mov
fwait
sbb
xor
fdivp
xor
out
mov
sahf
xlat
imul
jb
scas
mov
mov
xor
pusha
mov
fprem1
out
dec
stc
scas
cwde
mov
jmp
jp
lea
addr16
jmp
pop
sub
add
sbb
sub
and
js
sbb
add
enter
sbb
inc
ja
js
test
mov
call
adc
dec
in
mov
inc
mov
jmp
pop
mov
push
outs
pop
cld
sub
stc
movs
add
xchg
(bad)
push
mov
and
sub
sar
retf
loop
imul
and
jnp
loope
or
cmp
xor
out
and
fwait
enter
jns
dec
or
popa
dec
jmp
sbb
cwde
add
addr16
dec
leave
ss
mov
jecxz
push
and
mov
sti
retf
mov
jl
pop
ins
and
jns
add
in
adc
enter
scas
mov
jno
in
ret
pusha
shr
mov
out
cvttps2pi
jecxz
clc
dec
dec
out
lock
shr
cmps
fidivr
or
and
sar
call
inc
(bad)
inc
leave
or
inc
rcl
fimul
push
in
or
div
repz
push
xchg
mov
pushf
mov
adc
push
es
(bad)
mov
inc
fucom
and
cs
pop
inc
jb
dec
mov
cmc
fld
jge
jns
dec
sar
inc
jns
mov
call
inc
int3
inc
ja
cld
cmp
xchg
or
dec
mov
ret
out
ret
leave
outs
shl
pop
or
scas
inc
hlt
popf
sahf
sub
inc
xchg
cmp
push
les
push
sub
jne
fstp
ins
lods
xchg
pop
call
add
and
les
lock
add
pop
data16
js
lods
ss
push
cmc
mov
test
and
scas
mov
pop
mov
jecxz
sub
mov
lods
ss
test
add
cmp
xor
xchg
mov
imul
dec
jnp
push
sbb
jg
std
ins
mov
dec
jae
in
push
mov
pop
or
fwait
or
or
xchg
adc
lods
add
xor
std
pop
inc
and
push
xor
mov
ins
push
hlt
leave
dec
jb
shl
sahf
fs
in
repz
lods
xchg
mov
ins
cmp
push
push
xchg
and
push
in
mov
cmp
shl
je
and
xchg
mov
repz
cld
clc
dec
cmp
push
jmp
fucomi
mov
dec
mov
popf
mov
clc
fsubr
jae
inc
rcr
sbb
ss
fisub
push
(bad)
(bad)
pop
iret
xchg
test
mov
and
inc
xor
cmps
ss
jmp
push
mov
push
ret
lock
or
sbb
pop
jb
xchg
out
retf
in
out
movs
leave
mov
pop
and
movs
lods
hlt
call
aam
and
(bad)
jnp
mov
fs
and
scas
repnz
and
fld
xchg
dec
push
bound
shl
sbb
mov
mov
stc
iret
lea
outs
mov
ss
jno
xchg
adc
inc
and
inc
shl
retf
mov
push
cwde
test
pop
mov
jno
fdiv
cmp
jecxz
ins
adc
xor
xor
pop
gs
mov
sbb
push
outs
pop
iret
je
and
int
mov
jmp
cwde
ja
les
mov
lods
push
ins
ret
add
pop
leave
or
push
add
lods
cdq
call
jo
fmul
sahf
call
sub
repnz
out
pusha
shl
lods
imul
inc
xchg
xchg
sbb
jno
je
jge
in
jne
add
cmp
jbe
push
fild
push
pop
js
in
sub
jge
add
sbb
neg
mov
pop
adc
mov
jecxz
adc
(bad)
int
retf
jo
jmp
and
shl
pop
imul
mov
xchg
lods
adc
push
imul
cmp
dec
sub
xchg
cmp
es
hlt
cmp
arpl
out
popa
aaa
sbb
xor
not
ins
jmp
aad
outs
pop
clc
icebp
add
stc
test
aas
pop
dec
fldenv
cmp
push
mov
(bad)
mov
inc
and
loope
and
std
or
ret
sti
mov
mov
adc
scas
ds
int3
ds
iret
(bad)
add
dec
jle
xchg
mov
daa
and
inc
mov
je
ja
dec
int
cmps
mov
out
and
rol
ret
jns
popa
aam
mov
sub
xor
cmp
mov
lock
push
xchg
jb
dec
mov
shl
sub
lea
hlt
sub
inc
mov
add
shr
sbb
sbb
pop
(bad)
repz
shl
test
cwde
lods
out
cli
xor
dec
xchg
loop
retf
mov
dec
test
xchg
push
pushf
cmp
or
add
mov
jmp
adc
jns
push
out
mov
or
push
mov
sbb
clc
push
test
or
sub
les
mov
jle
fucomi
mov
ret
mov
push
pop
retf
or
adc
sbb
test
movs
je
fs
outs
mov
pop
push
cmps
lea
scas
gs
cli
fisubr
je
pop
mov
push
outs
dec
dec
xlat
into
push
dec
dec
out
sub
ins
and
inc
test
xor
and
adc
cmp
(bad)
dec
das
jmp
iret
les
lods
inc
or
test
mov
adc
push
fwait
xchg
(bad)
adc
enter
and
adc
push
shl
sub
test
cmp
xor
mov
ja
or
dec
push
cmp
mov
cmp
shl
retf
movs
push
and
pop
and
ffreep
add
push
jae
ret
loopne
popf
(bad)
sub
adc
repz
lea
push
sbb
or
sahf
mov
mov
cwde
out
(bad)
cmp
pop
test
xor
fs
push
test
cwde
ret
pop
pop
dec
dec
mov
cs
shl
in
fwait
xor
xlat
ds
test
mov
xchg
inc
lds
xor
gs
mov
sub
xchg
data16
sti
dec
jns
dec
enter
mov
cmp
in
sbb
in
fadd
into
cwde
inc
mov
cmp
test
jl
pop
ss
int3
cmc
mov
pop
or
or
push
fucomi
in
imul
clc
jno
test
cmp
mov
cdq
mov
push
bound
jo
dec
es
rcl
jae
push
in
sti
lea
pop
push
hlt
pop
sub
cmps
loop
loopne
jb
sar
push
pop
sub
mov
ins
mov
in
add
adc
jbe
shl
and
xor
(bad)
ss
inc
jg
xor
mov
stos
iret
retf
inc
rcr
(bad)
es
dec
pop
into
inc
push
jmp
sbb
out
fnsave
pop
dec
jbe
jo
daa
or
les
jns
pop
dec
icebp
adc
dec
call
mov
repz
sbb
pop
pop
xor
bound
and
stos
in
or
retf
(bad)
int3
icebp
pop
arpl
inc
setbe
push
sbb
js
mov
popf
retf
scas
pop
in
inc
mov
gs
jne
mov
into
sbb
mov
xor
and
sahf
data16
fiadd
mov
mov
or
fcom
push
shl
inc
inc
in
or
retf
push
mov
inc
mov
xadd
sar
lea
cmps
pusha
fcomi
jl
pop
dec
or
imul
and
jmp
nop
cmp
test
mov
aam
out
je
mov
xchg
dec
test
loope
pushf
push
or
cli
push
adc
rcl
push
xchg
int
cmps
jae
jbe
rol
adc
pop
pop
adc
mov
jmp
sub
out
mov
rol
cdq
or
call
lea
aam
(bad)
jb
and
shr
imul
loopne
int3
push
mov
je
mov
aas
xchg
shl
fistp
dec
push
push
mov
stos
add
xchg
xor
mov
dec
retf
arpl
stos
(bad)
inc
lahf
out
inc
sub
scas
lahf
adc
nop
stos
out
data16
pop
sub
push
mov
fidiv
lock
cld
adc
pop
les
(bad)
push
push
bound
xchg
sbb
js
mov
push
daa
addr16
jle
xchg
call
mov
jns
scas
adc
dec
sub
mov
adc
popf
loopne
imul
mov
add
jo
mov
adc
data16
mov
pop
dec
lock
int3
lahf
and
retf
ror
pop
add
les
inc
adc
dec
loope
dec
es
clc
sbb
mov
out
ffreep
(bad)
push
repnz
iret
cmp
push
fstp
(bad)
stos
xchg
clc
add
pushf
retf
daa
fcomp
leave
xor
int
test
add
mov
push
mov
xchg
jae
inc
arpl
and
push
int3
out
jl
add
and
pop
cmps
cmps
fwait
cmp
sub
rcr
cdq
clc
in
fbld
fdiv
pop
das
cdq
and
mov
sbb
cwde
into
xor
dec
mov
ins
je
data16
push
daa
(bad)
cmp
push
int
and
sbb
adc
nop
scas
jle
aas
jne
pop
mov
adc
cdq
fs
mov
mov
xchg
sti
test
push
sbb
inc
cmp
push
adc
outs
loope
lock
sub
cmp
inc
out
pop
pop
lods
aaa
add
jne
fcmovne
frstor
imul
sbb
dec
popa
push
xchg
push
bound
cmp
gs
inc
lds
ins
pop
dec
xor
fnop
sti
or
mov
add
add
sub
sbb
sahf
or
std
or
in
iret
je
mov
cs
pop
sbb
mov
repnz
stc
dec
add
pop
jb
add
fwait
add
cwde
std
pop
dec
cmp
inc
imul
lss
ror
test
cmp
lods
pushf
dec
shl
int
stos
in
adc
xchg
test
jmp
jb
push
push
hlt
mov
or
pop
stos
or
mov
jnp
mov
(bad)
in
and
mov
int
mov
adc
outs
mov
ss
inc
fucomi
cmp
(bad)
pop
loop
(bad)
ins
jmp
enter
xchg
push
out
push
cwde
icebp
and
cmp
ret
in
fidivr
and
add
out
repnz
cdq
xchg
(bad)
and
icebp
pop
inc
daa
sub
pop
lds
push
leave
push
mov
call
cwde
not
shl
stos
cmps
sbb
inc
ja
scas
popa
fnsave
inc
and
movs
pop
add
and
es
dec
xor
jecxz
or
mov
push
scas
push
fisttp
dec
jecxz
fsubr
sbb
push
mov
ficomp
mov
in
(bad)
pop
inc
adc
aaa
add
adc
loop
mov
mov
fidivr
scas
std
in
stos
fwait
add
nop
lock
xchg
mov
mov
xchg
aas
test
dec
mov
mov
retf
or
es
mov
mov
lods
mov
mov
push
lods
xchg
inc
mov
add
rol
mov
xchg
jmp
aaa
fisub
clc
sahf
add
adc
push
cmps
int
cmp
add
outs
mov
mov
es
sbb
cmps
(bad)
repz
jae
jp
sub
das
daa
test
dec
mov
push
out
mov
xchg
push
stc
cld
sti
mov
jbe
cmps
sti
retf
test
or
or
xchg
ret
cld
sub
fldl2t
add
data16
xchg
and
mov
lods
lea
xchg
push
inc
jge
push
xchg
add
loope
cmp
sub
nop
adc
(bad)
xor
dec
aaa
sub
cld
fnstsw
inc
dec
mov
sub
pop
in
xor
inc
int
jb
bound
jmp
aas
lock
jp
data16
inc
mov
(bad)
hlt
mov
jnp
dec
cld
ja
cmp
ss
dec
sub
call
xor
leave
gs
jmp
adc
mov
jbe
xor
test
and
das
cmps
in
mov
ds
mov
xchg
xchg
pop
and
push
ins
cdq
mov
push
pop
sahf
mov
cld
mov
lea
cmp
mov
or
(bad)
push
test
in
add
mov
dec
loopne
inc
fisttp
scas
mov
adc
aam
ss
sub
sub
enter
test
pop
add
(bad)
inc
test
add
repnz
(bad)
push
jb
fisttp
cmp
(bad)
inc
xor
sbb
fidivr
in
lods
hlt
cmp
leave
xor
push
xor
sub
dec
add
aas
mov
inc
out
loope
lods
js
cwde
hlt
outs
fst
int
push
inc
fdiv
sbb
jl
js
xor
mov
mov
cld
cs
repnz
cmp
lods
cdq
mov
xor
popa
and
mov
sub
push
push
jae
stos
jle
mov
fdivr
bound
daa
and
cli
out
push
(bad)
in
addr16
(bad)
std
(bad)
out
cli
in
lahf
retf
mov
xchg
aas
imul
aam
enter
and
cmp
mov
sbb
pop
std
test
hlt
inc
ja
mov
dec
jmp
enter
pcmpeqd
pop
call
cmps
dec
and
dec
mov
scas
mov
sbb
mov
mov
loope
mov
dec
sbb
js
pop
call
xchg
adc
dec
mov
cmp
jne
mov
cwde
xchg
cli
aaa
pop
in
daa
in
hlt
inc
or
push
inc
xchg
xchg
jmp
cld
je
scas
sar
pop
inc
stc
movlps
out
xchg
aad
add
movs
push
inc
lods
push
mov
mov
mov
sub
fdiv
or
(bad)
repnz
call
pop
cmc
xlat
mov
mov
mov
push
out
dec
xchg
inc
mov
mov
xchg
mov
pusha
mov
mov
pop
mov
add
dec
pop
lahf
es
sti
xor
mov
add
out
lahf
mov
ss
mov
scas
jmp
bound
test
sub
xchg
push
pop
ins
nop
or
dec
inc
push
mov
ins
jmp
cmp
fwait
cmp
jmp
push
inc
xor
fstp
add
aas
mov
sub
push
pushf
rcl
call
dec
mov
mov
push
imul
add
(bad)
rol
ret
jecxz
sub
dec
add
add
or
add
popa
and
xchg
pop
fnstsw
in
inc
inc
or
xchg
das
sbb
fdiv
jno
and
outs
stos
jl
int
sub
mov
dec
popf
mov
cwde
xchg
inc
inc
dec
fstp
adc
ds
fwait
out
rcl
sbb
(bad)
jp
repnz
mov
xor
mov
retf
dec
jl
sbb
scas
fidivr
add
adc
inc
test
(bad)
add
pop
cdq
loope
cli
aaa
ja
pop
adc
ss
popa
push
xor
sub
xchg
jg
in
xchg
fwait
adc
mov
test
jecxz
add
addr16
jmp
jmp
xor
enter
push
cmp
popa
add
add
(bad)
ins
(bad)
xor
mov
sbb
nop
pop
push
inc
hlt
jl
jge
dec
clc
xchg
mov
pop
sbb
cli
jne
push
mov
(bad)
ss
sub
in
xor
push
test
xor
inc
jle
and
cmp
into
je
je
push
inc
jae
cmp
pop
iret
into
loop
xchg
clc
inc
cmp
cmp
stos
sbb
(bad)
(bad)
xchg
sub
adc
sub
xor
mov
push
in
xlat
jbe
or
scas
fadd
push
fnstsw
mov
and
scas
lea
and
push
std
adc
push
push
push
pusha
xchg
xchg
mov
cli
jmp
adc
pop
je
push
in
cli
sar
mov
imul
fcom
push
in
cmp
inc
popf
jg
pushf
push
pusha
xchg
rol
ja
push
repz
cs
push
hlt
rcr
pop
xlat
sbb
in
mov
(bad)
scas
aaa
xor
sub
cmp
jno
mov
xchg
jmp
in
mov
int
in
fdivr
loop
jmp
fisub
mov
ja
jne
mov
inc
call
jge
out
pop
fild
push
jp
push
test
or
push
hlt
or
int3
shl
mov
lahf
mov
in
lds
in
hlt
sbb
cmp
or
xchg
jg
sub
das
push
dec
lods
aam
cmps
movs
in
cli
mov
pop
pushf
into
xor
add
pop
push
jbe
cli
mov
mov
xchg
shl
dec
cmps
jg
mov
xchg
cmp
(bad)
cmp
mov
cmps
xchg
sub
and
pushf
stos
jmp
mov
out
(bad)
pop
cli
cmc
xor
sbb
sbb
mov
mov
xchg
xor
mov
imul
xor
mov
sbb
(bad)
mov
fs
jmp
pop
clc
mov
lods
aam
aad
lahf
inc
xchg
sub
and
mov
dec
adc
push
mov
inc
push
js
inc
jmp
pusha
aas
jecxz
repnz
popa
out
out
jnp
adc
call
fmul
mov
sbb
pushf
sub
push
or
fmul
cwde
daa
in
inc
out
in
ins
push
mov
in
pmaddwd
cmp
mov
jns
pop
jl
adc
mov
jo
push
(bad)
mov
and
cmp
movs
mov
or
jmp
(bad)
(bad)
(bad)
mov
add
rcl
sub
xor
jge
push
call
iret
les
dec
and
outs
push
test
push
cmp
and
ret
popf
adc
shr
int3
pop
cmp
sub
push
out
aad
aaa
(bad)
std
stc
mov
imul
push
push
adc
cmp
xchg
xor
in
dec
test
jp
push
clc
sar
iret
add
pusha
push
mov
mov
retf
add
pusha
sahf
pop
or
outs
jg
cmp
cld
lods
mov
das
inc
out
movs
add
sbb
adc
scas
cmp
data16
inc
sub
fwait
and
or
movs
popa
and
mov
xor
adc
xor
jne
and
cdq
cdq
pop
sbb
mov
xchg
jmp
cmp
shl
push
dec
(bad)
sub
push
dec
hlt
mov
push
add
and
mov
mov
scas
xchg
jge
xchg
and
aas
(bad)
out
pushf
push
or
pop
mov
fisttp
cmps
ins
ja
cmp
mov
lods
lock
or
movs
push
dec
sahf
std
sub
out
dec
jb
adc
inc
cmp
cmc
and
(bad)
or
mov
inc
out
ja
pop
xor
loope
fdivr
mov
inc
leave
jg
push
xchg
popa
loopne
fdivp
push
(bad)
lods
sub
mov
(bad)
cmp
inc
sbb
push
clc
dec
in
es
mov
jmp
imul
or
test
mov
test
push
and
lods
lods
sbb
adc
popa
inc
sti
in
inc
es
adc
lahf
ss
inc
popaw
mov
or
pop
nop
or
shl
mov
stos
add
or
test
vpaddsb
push
cmp
aam
adc
loope
movs
out
int
push
mov
mov
push
push
hlt
icebp
add
push
push
inc
xor
jl
stos
shr
jl
push
fadd
das
mov
loopne
lods
nop
test
fcom
inc
(bad)
call
sbb
cmp
fistp
lods
(bad)
cld
jecxz
xchg
aam
sbb
adc
push
push
cmp
(bad)
(bad)
std
pop
pop
sub
inc
push
inc
mov
add
and
retf
test
aas
cmp
fdiv
mov
fadd
inc
test
jae
cmp
cdq
pop
cmps
jecxz
or
leave
and
cmp
dec
sar
loop
fwait
jno
sub
sub
and
dec
sti
lea
aad
cmp
mov
das
push
adc
test
mov
mov
test
ror
inc
lods
mov
es
inc
ins
xchg
sub
sbb
int3
jmp
jno
(bad)
fild
nop
cmp
sahf
xchg
add
xchg
mov
sbb
aam
xchg
mov
fst
test
repz
scas
and
jne
bound
jno
push
or
mov
mov
adc
loopne
fdivr
inc
lods
repnz
adc
fucomi
ret
jge
stc
mov
pop
xor
sbb
cld
(bad)
jns
ror
not
pop
out
movs
fisttp
daa
movs
sbb
lea
inc
add
ds
fiadd
sbb
mov
repz
xor
into
xor
mov
inc
inc
loope
xor
lahf
dec
imul
ss
mov
pop
jno
cld
not
lock
hlt
sub
fs
cmp
and
jmp
in
lahf
pop
mov
mov
out
mov
dec
jae
idiv
ds
fisub
cmova
ss
jge
push
dec
dec
sub
sub
jns
push
stos
add
cmp
daa
fwait
push
fstp
mov
or
aad
push
cdq
test
sbb
stc
jae
ins
sub
jmp
sbb
push
push
jle
test
dec
pop
adc
enter
daa
ret
ja
pop
pusha
aaa
rcr
or
lahf
push
dec
pop
into
push
push
push
xor
ins
adc
sub
loopne
inc
leave
sbb
out
sbb
fbld
push
jl
adc
popf
cwde
mov
fist
or
test
sti
cmp
mov
in
cs
and
pusha
sar
jg
pop
or
ret
mov
scas
aam
mov
dec
or
(bad)
out
mov
mov
cmp
pop
xor
mov
dec
clc
push
or
mov
mov
(bad)
icebp
mov
push
(bad)
push
push
shl
inc
sbb
mov
shl
repnz
xchg
stc
mov
xor
ins
lods
add
nop
sub
or
push
lahf
mov
gs
imul
or
in
mov
sbb
sahf
mov
push
adc
pop
in
mov
mov
imul
sub
xor
add
inc
pushf
xchg
add
into
dec
mov
sahf
mov
adc
arpl
mov
shl
or
sar
adc
test
push
push
ins
sub
dec
lock
hlt
shl
sub
outs
in
pop
xor
push
out
ror
and
mov
inc
arpl
add
clc
inc
aaa
or
sbb
adc
inc
inc
mov
pop
fisub
cmp
adc
mov
jmp
xchg
daa
inc
popf
out
adc
push
stos
mov
pop
(bad)
hlt
js
out
push
mov
sbb
mov
cmps
and
sub
int3
jl
jge
dec
rcl
ja
rcr
mov
dec
and
push
enter
push
mov
sbb
mov
es
and
mov
imul
(bad)
or
sbb
repnz
popf
pushf
icebp
movs
xor
and
pushf
add
xchg
(bad)
loope
sub
(bad)
fiadd
fdivr
xchg
sub
pusha
add
jo
push
add
movs
mov
and
inc
inc
test
dec
add
xor
ss
or
in
inc
cmp
sub
push
xchg
or
push
adc
fsubp
fdecstp
xor
push
imul
mov
(bad)
add
fstp
es
int3
mov
js
(bad)
call
repz
add
cmp
(bad)
cmps
pextrw
dec
fldenv
xchg
pop
in
add
out
frstor
lds
mov
pop
push
add
pop
sbb
cld
pop
mul
mov
lock
mov
into
data16
fdiv
hlt
(bad)
sar
call
add
test
inc
xor
aaa
sti
enter
ss
aas
and
and
sub
add
in
loopne
retf
xor
inc
jmp
sbb
rol
loop
mov
sbb
dec
out
jae
sahf
mov
mov
pop
in
fwait
jl
aad
sbb
sar
or
and
scas
scas
es
in
pusha
push
sub
ins
test
or
stc
mov
dec
pop
jb
hlt
mov
mov
lock
mov
leave
(bad)
aaa
(bad)
ins
dec
in
push
fadd
and
fiadd
mov
imul
xor
sar
or
jecxz
pop
mov
mov
or
and
ins
pop
out
mov
xor
fmul
rol
out
not
call
sbb
loopne
cmc
jnp
xor
mov
xor
xchg
out
dec
test
into
addr16
dec
inc
mov
jae
(bad)
pop
push
ss
dec
fsubr
mov
data16
(bad)
neg
shl
fld
sbb
in
cmp
pop
inc
les
bound
xchg
iret
scas
inc
stc
cld
scas
into
push
movs
push
or
cdq
jnp
pop
sub
push
scas
mov
push
xchg
and
mov
in
mov
sar
mov
cmc
fiadd
cwde
push
push
pop
xchg
jl
mov
(bad)
bswap
cmc
(bad)
dec
int3
in
adc
mov
add
(bad)
repnz
leave
repz
sbb
jmp
xor
mov
sbb
pop
cmp
push
or
cdq
sbb
fwait
pop
push
cdq
cmps
or
mov
std
leave
mov
and
xchg
and
inc
sbb
pop
lea
adc
lahf
loop
jl
outs
je
jg
(bad)
mov
xchg
shl
jg
call
retf
xchg
jnp
fwait
mov
ret
enter
cs
push
mov
mov
ss
and
std
sub
pop
stc
aaa
out
lods
jae
jns
inc
cmp
scas
addr16
in
(bad)
fdiv
fiadd
jb
jecxz
xchg
mov
cmp
popa
mov
out
xchg
dec
and
daa
dec
(bad)
adc
into
sbb
pop
jmp
jg
shr
adc
mov
xor
pop
repnz
jno
(bad)
lods
test
jnp
das
lds
lds
jg
in
std
pop
imul
cmp
mov
js
jle
cmc
sahf
les
(bad)
fimul
or
push
iret
and
jne
cld
stc
ins
add
sub
repnz
cmc
int
pop
and
sub
jl
or
jmp
daa
(bad)
dec
xor
movs
pop
cmp
outs
rcl
jge
lods
mov
ret
test
push
and
and
shl
sbb
cs
std
mov
popa
mov
mov
cmps
daa
cld
into
push
add
or
(bad)
xchg
push
dec
inc
jo
adc
es
std
sub
cmp
pop
or
inc
call
stos
and
push
sub
popa
retf
add
out
fisttp
xchg
aam
ror
in
jae
pushf
sar
data16
(bad)
mov
push
mov
ret
push
xchg
das
mov
jl
sub
mov
cmps
mov
repz
cmc
pop
xchg
push
xor
ror
(bad)
movs
loopne
je
or
retf
push
mov
(bad)
fsub
imul
in
pop
cld
pop
ins
cwde
out
stos
pop
dec
in
outs
retf
jl
jb
push
xor
scas
ins
sbb
data16
jge
hlt
movs
jae
leave
push
sbb
ds
jnp
shr
sbb
cdq
pop
loop
aaa
mov
mov
shl
ficom
retf
pop
je
scas
cli
xchg
imul
es
jmp
push
push
das
cmps
push
pop
mov
xor
test
cmp
movnti
loopne
jl
mov
outs
sub
push
xchg
jmp
and
enter
fstp
pop
cmp
fxch
mov
sbb
xchg
imul
inc
shl
cmp
mov
push
cwde
xchg
xor
jmp
jbe
pushf
mov
cmp
jae
fist
push
mov
xor
movs
in
les
push
inc
cmp
mov
jmp
jne
sub
stos
xlat
jb
inc
dec
in
retf
and
pusha
(bad)
xor
push
jb
mov
test
loop
push
loope
or
mov
push
push
add
push
jle
sbb
mov
and
inc
adc
shl
inc
int
push
std
jo
test
in
nop
jge
sbb
movs
call
push
push
lods
rcr
lahf
mov
shr
pop
sar
dec
mov
pop
cmp
jecxz
xor
mov
outs
add
mov
mov
hlt
mov
pop
ret
push
jnp
lods
push
mov
sbb
mov
ret
repz
xor
sub
test
into
push
or
pusha
sub
js
sub
data16
in
add
ret
clc
sbb
fidivr
es
ret
or
xor
pop
xor
mov
scas
push
push
jmp
movs
lods
pop
adc
dec
mov
ins
jmp
inc
xlat
retf
push
jecxz
in
and
mov
retf
les
loopne
pop
loope
cmp
pop
shl
out
ja
push
and
xchg
pop
pop
adc
ret
std
mov
dec
dec
es
into
int3
dec
push
and
mov
fstp
push
mov
jnp
jo
sti
pop
sbb
xor
jmp
loope
gs
data16
fs
cwde
jle
cmp
test
loop
and
mov
rcr
icebp
cs
stc
adc
ins
xchg
es
push
inc
xchg
leave
jb
clc
pop
outs
mov
sub
inc
cdq
add
dec
mov
outs
jmp
and
push
pop
mov
pop
cmp
inc
int3
xchg
push
jnp
je
out
jecxz
rcl
(bad)
mov
stc
cmp
js
bound
addr16
les
adc
mov
cmp
xor
cmp
mov
(bad)
fstp
add
push
mov
gs
(bad)
jmp
imul
imul
shl
xchg
mov
or
fxch
sub
xchg
scas
push
jno
inc
dec
cmp
and
and
mov
(bad)
lahf
out
pop
cmps
out
jge
aas
jmp
push
popa
jne
(bad)
mov
xchg
fldenv
outs
icebp
dec
leave
push
jne
ret
fst
outs
scas
jg
stos
icebp
das
pusha
imul
rol
data16
(bad)
addr16
rcl
mov
jp
mov
mov
das
lods
push
fadd
stos
or
(bad)
adc
(bad)
adc
stos
fmul
pop
sar
jle
dec
mov
jge
cdq
dec
sub
jnp
inc
or
bound
push
push
sbb
adc
xchg
sub
movs
sub
imul
and
pop
fs
pusha
and
pop
scas
cmp
jns
inc
cdq
or
loopne
(bad)
rcr
out
mov
arpl
rcr
add
sbb
cmp
(bad)
(bad)
dec
or
xchg
push
stos
cmc
loopne
mov
push
adc
pop
sub
and
fld
mov
jmp
push
pop
dec
call
mov
in
and
mov
add
stc
inc
clc
cmp
and
retf
jge
mov
dec
inc
lods
lahf
in
fld
xchg
daa
inc
mul
mov
ret
lds
push
add
jmp
mov
add
cmc
push
outs
ins
add
fnstenv
cmp
xlat
cmp
and
cmps
(bad)
fisub
xchg
out
jns
iret
xchg
pop
sbb
aam
scas
jnp
addr16
into
lds
pop
mov
pop
and
mov
xchg
out
push
test
push
adc
test
lahf
or
push
jmp
xchg
or
shl
jg
xchg
xchg
outs
mov
imul
mov
bound
push
sahf
test
ja
(bad)
js
pop
fwait
xchg
test
cmp
push
jmp
pop
je
in
ficomp
dec
dec
addr16
stos
stc
out
jecxz
push
mov
or
dec
sahf
xchg
mov
js
(bad)
xchg
fistp
loope
dec
mov
stos
fidivr
scas
add
jno
xor
pop
aaa
cmp
daa
sub
mov
dec
push
shl
or
repz
mov
or
push
jg
(bad)
jae
xor
fadd
inc
pop
jnp
or
xchg
fsubr
add
jno
xor
mov
push
js
xchg
push
imul
icebp
sub
dec
and
adc
lea
data16
add
mov
pop
push
jecxz
sti
inc
(bad)
outs
icebp
imul
retf
or
dec
sub
call
nop
mov
sub
sbb
sbb
and
ds
(bad)
cmps
dec
mov
sbb
ss
cmps
jo
jb
sahf
shr
xchg
dec
cwde
and
xchg
pop
xchg
or
inc
cwde
fs
lods
arpl
ret
cdq
mov
and
sahf
sub
test
jne
(bad)
pop
jmp
mov
adc
mov
adc
pop
xchg
clc
adc
out
ins
and
pop
sbb
stos
in
sub
in
stos
mov
push
sub
shl
aas
push
stos
test
imul
xor
xor
arpl
gs
inc
mov
inc
jecxz
and
div
pop
sub
sahf
pop
jno
xchg
xchg
outs
adc
dec
jg
jnp
mov
ret
add
push
sbb
test
fs
loop
jmp
xor
and
in
call
xor
push
mov
cmp
push
mov
es
mov
ins
and
lock
and
jle
xchg
jmp
sbb
sub
jmp
mov
lea
retf
xchg
push
add
adc
inc
arpl
jbe
sbb
pop
and
xor
xchg
xchg
pop
das
je
or
xor
jns
movs
fwait
lldt
scas
and
dec
movq
push
xchg
xchg
add
push
rcl
fs
shl
data16
std
(bad)
xor
sbb
mov
jge
sar
sub
sub
retf
mov
xchg
xor
and
xchg
push
push
loop
ret
test
sub
jbe
jmp
and
xchg
sub
fisubr
and
cwde
pushf
mov
stc
adc
or
movs
aad
sub
data16
sbb
add
stos
push
js
in
xchg
xor
fld
add
cmp
mov
neg
jmp
mov
(bad)
iret
or
and
jmp
sub
hlt
aas
xor
jl
ins
or
js
and
and
sub
add
mov
std
call
fwait
add
repnz
(bad)
adc
loopne
ror
inc
std
sbb
iret
mov
clc
int
adc
sub
mov
mov
mov
cs
and
cmp
or
and
rcr
cmp
jecxz
stos
dec
xor
mov
mov
push
outs
or
pop
push
in
div
fist
mov
and
xchg
dec
pop
fwait
pusha
add
jmp
fs
push
sub
xchg
mov
jno
xchg
in
push
mov
fistp
cwde
add
repnz
xchg
inc
dec
lds
dec
cmps
mov
ror
aaa
das
shl
es
enter
stos
mov
push
mov
sub
jmp
pop
dec
aam
xchg
in
add
hlt
push
dec
jbe
ror
mov
or
mov
enter
pushf
call
or
ins
rcl
cmp
movs
xchg
sbb
dec
push
shl
jl
cmps
jbe
sub
mov
sbb
or
retf
inc
xor
pop
sub
(bad)
addr16
loopne
pop
fdivr
rcr
inc
inc
andps
gs
push
mov
mov
cwde
sbb
in
add
leave
mov
add
jg
stos
aad
movs
inc
push
mov
(bad)
push
mov
mov
mov
cld
adc
adc
sbb
and
sbb
std
gs
scas
xor
ror
pop
scas
jge
inc
sahf
jge
arpl
pop
push
jb
xor
mov
iret
cmp
test
punpcklbw
and
aam
cmps
mov
bound
pop
jecxz
shl
xchg
inc
mov
out
iret
test
pushf
fisttp
shl
loope
pop
movs
dec
adc
sub
je
sbb
xlat
mov
leave
addr16
xor
jb
enter
sub
jp
stos
pop
push
loopne
mov
lods
jmp
sbb
inc
out
sub
mov
test
daa
sub
xor
mov
push
or
ret
xchg
fbstp
out
sbb
cmps
push
hlt
sub
pop
xchg
xchg
mov
sbb
cwde
sbb
add
test
mov
mov
pop
pop
mov
mov
add
mov
and
xor
mov
mov
mov
(bad)
mov
sub
fneni(8087
and
stc
repz
sbb
sbb
xchg
mov
fstp
push
(bad)
lds
cmc
xchg
movs
adc
xchg
scas
inc
outs
jns
stos
and
mov
xor
push
xchg
dec
mov
lahf
(bad)
sbb
jnp
loop
out
mov
lea
retf
xrelease
inc
push
sbb
and
cmps
in
inc
test
test
gs
xlat
mov
jl
retf
retf
pop
sahf
mov
out
imul
mov
cmp
add
call
arpl
cmp
inc
das
mov
(bad)
jmp
lods
scas
jg
sbb
lods
cmp
into
mov
out
cld
sbb
add
movs
mov
aam
pop
xor
cs
cmp
and
out
push
(bad)
mov
sbb
je
fild
xchg
sahf
jmp
(bad)
fist
sbb
or
pop
pop
out
push
je
mov
imul
(bad)
loopne
ret
jmp
test
das
movs
retf
into
mov
in
cmps
or
inc
lds
sti
not
pop
add
mov
scas
add
push
in
push
jmp
out
gs
loop
fldz
bound
xor
xchg
cmps
xchg
push
fnsave
cmp
inc
test
inc
xchg
inc
xchg
fwait
es
out
and
pop
mov
add
jmp
push
cmp
js
xor
or
ficomp
inc
dec
ret
dec
inc
repz
stc
xor
outs
jne
lods
mov
in
out
sbb
imul
test
mov
les
mov
push
jnp
jmp
imul
cmp
hlt
mov
mov
push
cdq
clc
sti
jge
push
sub
add
inc
add
cs
pop
and
fwait
push
mov
pop
pop
jle
or
and
aad
mov
mov
and
add
sbb
nop
jl
or
mov
sahf
(bad)
std
push
push
jo
cli
(bad)
(bad)
xor
dec
les
in
mov
xor
adc
cmp
jae
adc
aad
not
fs
xchg
stc
enter
pop
scas
aam
and
imul
movs
xor
or
fnstcw
push
or
sbb
pop
lock
xchg
retf
mov
in
sub
(bad)
pushf
sbb
mov
pop
mov
pop
clc
fstp
fnstcw
fdiv
mov
ss
cmp
lock
adc
inc
inc
sub
adc
sbb
xchg
dec
and
popf
add
repnz
sub
call
dec
inc
cmp
mov
jle
dec
inc
push
mov
dec
dec
inc
les
xchg
rcr
movs
cmp
std
push
pop
pusha
gs
rcl
dec
js
mov
out
mov
xchg
cmc
fs
mov
cmp
sbb
cmp
jo
inc
test
retf
sbb
sbb
imul
push
aam
push
sti
pop
sub
xor
retf
inc
push
adc
mov
loop
repnz
sbb
or
fs
mov
mov
fsub
dec
call
fcmove
adc
pop
xchg
test
pushf
adc
fs
aad
xor
xor
cmp
jno
sub
mov
or
sub
adc
out
pop
cmps
je
cs
loopne
push
rcr
(bad)
lods
rol
mov
rcr
mov
mov
add
fcmovnbe
mov
(bad)
mov
mov
mov
es
push
or
adc
test
in
push
addr16
push
adc
ins
call
xchg
movs
xchg
shl
jmp
push
sbb
sub
or
push
in
pop
into
or
ds
mov
mov
mov
test
pop
push
test
call
cmp
xchg
shl
pop
cmps
xor
inc
push
icebp
dec
push
sub
dec
cmp
sub
ins
mov
xor
adc
cmp
fwait
das
jns
mov
lds
mov
cwde
jbe
mov
push
dec
fild
push
jmp
xchg
dec
pop
xor
repnz
xor
clts
pop
add
std
jge
cs
lock
sbb
popa
in
mov
inc
mov
pop
cmp
sbb
pop
out
les
aas
push
push
dec
out
sub
bound
iret
mov
cmps
add
xor
jle
das
fdivrp
sub
div
push
jl
ds
mov
cmp
push
mov
loop
bound
dec
adc
push
jno
and
dec
test
scas
push
mov
mov
pop
in
sar
test
pop
or
cmp
call
mov
xchg
sub
pop
lock
push
pop
out
popf
inc
jge
push
leave
dec
sbb
sar
std
add
fsub
dec
bound
out
jno
inc
mov
dec
sbb
and
dec
icebp
test
mul
pop
push
jmp
and
into
dec
loop
scas
sub
shr
inc
xchg
gs
jns
in
inc
(bad)
and
sub
sti
mov
mov
fnstenv
ins
bnd
add
mov
push
xchg
xchg
xchg
stos
mov
and
adc
cmp
(bad)
loopne
cmp
pop
push
pushf
xchg
add
outs
sar
push
into
adc
js
or
jne
arpl
in
and
xor
aad
les
push
les
lea
xchg
ds
into
or
bound
test
cwde
sub
sbb
push
movs
retf
scas
add
xchg
daa
add
push
or
mov
test
inc
iret
push
adc
sbb
mov
outs
in
mov
sub
xor
(bad)
jmp
int3
jae
movs
mov
xchg
in
mov
xchg
test
mov
fmul
pop
retf
push
(bad)
(bad)
push
int
jb
jo
lea
fwait
pop
data16
and
cmc
popa
mul
sbb
adc
and
pop
mov
sbb
cmps
out
jo
cwde
shr
mov
scas
js
pop
or
sahf
das
mov
ret
das
mov
std
and
mov
sub
ss
sub
mov
movs
movs
outs
pop
or
repz
add
jl
clc
aaa
test
lds
out
movs
aaa
cld
sbb
mov
pop
in
jmp
sub
pop
dec
jecxz
cmp
dec
sbb
js
add
pop
fcmovbe
xchg
dec
sub
neg
xchg
(bad)
push
repz
mov
sub
ja
mov
popa
dec
retf
sub
dec
and
out
xor
in
test
fwait
or
std
add
not
out
push
push
mov
icebp
push
inc
jmp
or
mov
add
jp
cmp
sub
lahf
imul
fdiv
cmp
push
les
xor
xchg
and
xor
lods
addr16
mov
sub
hlt
(bad)
xlat
sub
xchg
adc
mov
in
mov
sub
mov
cli
sbb
arpl
in
sbb
push
xor
cdq
ror
cs
rcl
xchg
int
std
push
mov
not
inc
sbb
add
inc
jo
and
xor
sbb
push
push
inc
cmc
mov
push
imul
fiadd
out
sar
sub
jbe
pop
in
in
xchg
xchg
pop
movs
test
sti
and
(bad)
loope
mov
sbb
sbb
jmp
jmp
and
inc
mov
out
and
lods
push
jg
retf
sbb
rcl
mov
je
sbb
adc
or
cmc
jnp
pop
add
dec
cmp
test
inc
rcl
mov
jl
shl
sbb
cmp
pop
retf
xchg
and
mov
lods
dec
or
jne
hlt
retf
repnz
inc
fs
jecxz
lahf
xlat
loope
test
sub
pop
aaa
stos
inc
in
data16
imul
int3
das
inc
fincstp
mov
jge
adc
mov
leave
inc
in
shr
xor
push
mov
and
jb
cmc
fdivr
out
inc
jmp
rol
mov
or
xchg
fwait
test
pushf
ins
and
ins
les
stos
(bad)
jmp
mov
stos
stos
lock
rol
rcl
mov
dec
out
push
imul
jae
(bad)
xchg
dec
es
lods
sub
push
cs
inc
jge
sbb
inc
push
jno
jle
or
clc
icebp
push
int
push
or
ret
jne
mov
mov
adc
pop
xchg
add
popf
pop
stc
dec
fsub
or
call
shl
push
mov
call
(bad)
sbb
in
sbb
pop
shl
mov
jecxz
out
adc
mov
ret
cwde
adc
add
mov
pop
lock
and
mov
minps
xor
iret
popa
dec
ret
mov
mov
mov
or
dec
pop
mov
nop
dec
bnd
int3
xchg
popw
icebp
out
into
inc
sub
daa
mov
lea
and
cmp
rcl
icebp
shl
cmp
mov
lahf
repz
mov
add
loop
sub
sbb
ficomp
jmp
es
xchg
xchg
outs
repz
cmc
lods
mov
int
icebp
outs
loope
inc
xchg
cmp
scas
enter
mov
frstor
add
aad
push
popf
sub
ins
(bad)
jno
add
dec
in
scas
stos
sbb
lods
test
mov
sub
mov
outs
aaa
movs
jmp
jnp
jb
cmp
cli
pop
cs
ss
and
jmp
push
and
dec
clc
sbb
and
test
mov
pop
aas
std
dec
inc
popf
cmp
cmc
and
jae
xor
leave
xlat
rol
xor
lods
cmps
pop
push
jno
or
rcl
jl
arpl
bound
inc
pop
adc
out
mov
das
sub
gs
add
xlat
inc
push
cmp
pushf
xchg
inc
ds
sbb
shl
sbb
inc
dec
and
ins
retf
lods
cdq
sub
xchg
adc
add
and
lods
add
inc
mov
push
inc
popa
and
scas
pop
sbb
push
mov
xor
fstp
mov
or
jmp
pop
jo
push
adc
mov
int
pop
loopne
or
mov
sub
pop
sbb
sti
cmps
fadd
adc
and
push
dec
xor
repz
ret
inc
jno
adc
in
xor
inc
or
mov
(bad)
lods
jge
and
out
sahf
sbb
jl
cdq
scas
call
mov
push
nop
adc
mov
or
xchg
jmp
dec
and
inc
imul
sub
adc
sub
mov
repnz
call
call
dec
push
push
and
push
cdq
xor
and
stc
movs
lahf
or
test
push
sahf
mov
fisttp
xchg
xchg
jns
jecxz
mov
jp
adc
jmp
inc
and
mov
lods
mov
hlt
mov
shl
pushf
or
dec
sbb
or
addr16
les
shr
sub
outs
or
or
and
shr
or
and
mov
mov
dec
loop
test
(bad)
adc
call
test
fisubr
mul
je
neg
xchg
jmp
jp
adc
mov
jbe
pop
jle
fist
retf
push
add
mov
sbb
loopne
mov
mov
or
int
shr
fdivr
sti
mov
ins
stos
call
mov
push
adc
sbb
ret
enter
imul
loopne
add
loope
xchg
in
outs
aam
push
adc
push
aas
je
push
sub
aad
cmps
fdivrp
data16
jno
dec
and
inc
in
int3
inc
push
icebp
(bad)
pop
inc
jg
je
or
test
pop
add
aad
xlat
js
jg
pop
adc
retf
call
jecxz
sbb
push
mov
cmps
xor
jle
call
mov
cmp
jp
cmp
sti
jge
push
mov
imul
imul
rol
cmp
cli
dec
clc
xor
add
nop
adc
push
ins
sbb
sub
aas
push
push
xchg
aaa
inc
mov
(bad)
dec
fdivp
xor
rcr
and
ds
push
mov
pop
mov
out
stc
mov
or
pop
push
and
pop
xchg
dec
pop
iret
stos
ins
jp
imul
xchg
pop
dec
mov
push
repnz
ss
mov
cmps
push
sbb
mov
fcmovnu
in
push
fmul
sbb
outs
and
xor
xchg
mov
out
repnz
pop
jo
xlat
or
cwde
je
cmp
ja
add
rcr
or
test
data16
or
movs
xchg
mov
call
cs
ja
int3
shl
imul
shr
rol
push
(bad)
lods
inc
push
adc
cs
movs
adc
push
pusha
jp
or
mov
lods
call
mov
fsubr
dec
arpl
dec
(bad)
xchg
pushf
loopne
adc
cld
xchg
ds
fidivr
daa
adc
xor
pusha
push
mov
in
loop
stos
lahf
adc
jmp
test
mov
ret
je
arpl
cmovnp
pop
aaa
stos
fstp
(bad)
aaa
jle
xchg
arpl
xor
xor
test
test
mov
div
inc
imul
pop
mov
test
shl
fs
inc
in
push
nop
stos
xchg
dec
dec
mov
movs
jle
cmp
je
rcl
scas
loop
aas
jecxz
mov
out
mov
cmp
jecxz
mov
js
push
mov
push
inc
inc
xor
enter
xchg
jo
push
push
cdq
xchg
push
mov
or
pusha
enter
push
retf
mov
imul
cld
cmp
and
cmp
and
scas
mov
icebp
arpl
not
dec
pop
repnz
ds
inc
mov
push
sub
addr16
sbb
mov
je
ret
xchg
mov
sub
ss
add
and
repz
cmp
std
sub
lea
ror
arpl
pushf
imul
jecxz
(bad)
sub
push
popf
ret
jg
loope
mov
jbe
cs
push
push
cmps
pop
pop
inc
sbb
add
push
aad
xor
call
rcpps
cmp
mov
fcmovnu
aam
jae
scas
clc
jbe
mov
cmp
lahf
jae
ficomp
mov
pusha
pop
sar
test
pop
cmp
or
mov
fsub
(bad)
lods
sub
outs
inc
or
mov
enter
add
cld
jbe
js
in
movs
sub
ins
push
inc
mov
adc
mov
lea
sub
inc
jae
lock
mov
push
pop
in
ja
jbe
sbb
sub
stos
mov
dec
aam
aad
jns
mov
(bad)
pop
retf
xor
shr
mov
mov
jmp
daa
mov
jg
sbb
inc
adc
or
and
fs
mov
mov
sahf
bound
xchg
call
stos
jmp
and
push
dec
xchg
clc
jl
(bad)
in
fisttp
out
xchg
mov
js
and
aam
jge
and
mov
outs
add
mov
scas
popf
dec
add
fbstp
das
test
test
push
repz
mov
sub
cld
rcr
xor
pop
sti
in
stos
cmp
repnz
js
mov
not
aaa
movs
mov
loopne
loope
scas
pop
jne
inc
test
adc
mov
out
fcomp
mov
xchg
push
lods
(bad)
mov
sub
adc
xor
push
mov
pop
scas
lea
xor
sbb
stos
cmp
stos
stc
pusha
inc
outs
pop
cmp
fwait
jno
jmp
les
dec
in
push
loope
jae
pop
adc
call
pushf
jecxz
sti
imul
xor
pop
out
mov
adc
arpl
push
ror
push
jle
sub
add
add
push
cmc
and
mov
push
jae
call
xchg
ds
mov
cmp
shl
cmp
bound
and
mov
xchg
pop
jbe
jo
xchg
push
cmp
bound
mov
adc
sub
(bad)
sahf
daa
adc
push
scas
pusha
jmp
ins
and
xor
xlat
add
enter
mov
in
and
iret
mov
arpl
(bad)
popa
out
test
loopne
int
adc
into
jmp
mov
push
sbb
clc
mov
retf
jecxz
cdq
icebp
idiv
jge
push
sbb
xchg
aaa
cmp
in
and
push
out
push
popf
cmc
mov
movs
jle
or
cdq
loope
mov
mov
fcom
loopne
mov
popf
fwait
add
popa
xor
push
retf
adc
icebp
aad
aas
dec
pop
cwde
sub
call
mov
loopne
das
mov
push
sub
nop
xor
div
stos
mov
push
xchg
sub
int3
jbe
pusha
mov
aad
sub
arpl
int
addr16
sbb
fcom
xchg
into
cwde
adc
retf
jbe
jmp
pop
stc
movs
rcl
mov
xor
mov
jecxz
sub
leave
arpl
push
fldenv
pop
cmp
mov
fnsave
pop
pop
inc
or
push
mov
sub
add
in
cmp
outs
inc
pushf
mov
xor
mov
and
xor
rcl
mov
(bad)
mov
sub
xchg
mov
jmp
addr16
(bad)
js
pop
ins
scas
mov
scas
sar
mov
mov
xor
xchg
sbb
int3
xor
xor
in
mov
je
icebp
les
pop
and
mov
popf
lods
xor
in
in
fdivr
cld
and
adc
int
add
xchg
add
push
cmps
jne
and
out
(bad)
mov
xor
outs
sub
cmp
pop
push
sub
aam
fistp
push
mov
dec
lods
xchg
xchg
mov
retf
cdq
push
out
gs
ret
adc
repz
(bad)
xchg
adc
(bad)
cld
dec
xlat
pusha
loope
push
lock
inc
sar
mov
sub
push
push
shr
jge
leave
fild
or
mov
movs
mov
aad
push
inc
movlps
call
sub
imul
dec
movs
sbb
iret
les
clc
inc
jg
fbld
xor
jns
test
mov
ret
push
pop
adc
xchg
cld
jg
push
lea
add
fisttp
mov
xchg
and
mov
out
xorps
mov
mov
mov
dec
stos
cmp
in
xor
and
cmp
mov
dec
lahf
dec
and
mov
loope
mov
adc
pop
pop
inc
mov
imul
xor
push
mov
or
aaa
dec
pop
push
out
sub
pusha
jb
xchg
cdq
es
movs
push
cdq
mov
or
sbb
inc
out
dec
je
jno
ret
sub
sbb
mov
cwde
adc
imul
and
xchg
jae
jns
bound
xchg
and
aad
mov
fs
repz
mov
jnp
cmp
pop
or
inc
mov
lods
sub
cmp
lock
movs
mov
or
fisubr
icebp
pop
jle
aam
cwde
clc
popf
mov
push
clc
mov
dec
fiadd
imul
pop
mov
iret
and
icebp
or
inc
mov
xchg
shl
retf
mov
xchg
leave
and
call
inc
sbb
dec
pop
rcr
mov
xlat
arpl
out
mov
repnz
xor
jmp
int3
scas
add
jo
inc
inc
jl
push
push
cmp
or
addr16
push
pop
add
sbb
shr
hlt
call
mov
jp
jmp
cli
pop
test
sub
movs
js
cmp
jmp
ret
xor
lds
ins
cmps
inc
fiadd
dec
movs
scas
cmp
test
lds
mov
pop
vmovupd
repnz
frstor
jge
and
dec
push
rol
dec
xchg
sbb
shr
xchg
add
cmp
fimul
aas
mov
sar
clc
sbb
jmp
ror
push
cmp
fadd
xchg
stos
mov
int
imul
jno
xchg
shl
cvtps2pi
push
imul
jno
adc
lahf
cdq
shl
repz
jmp
mov
cwde
fcmovnbe
shl
fwait
jnp
xchg
xlat
mov
jbe
xor
or
dec
xor
xor
loope
fisub
mov
xchg
jb
pusha
xchg
xchg
add
leave
xor
dec
cld
sub
push
cmc
int
adc
mov
dec
jo
mov
pop
in
stos
mov
loope
out
push
dec
das
pop
jmp
mov
dec
xor
imul
hlt
push
push
hlt
movs
outs
inc
xor
or
xor
pushf
push
mov
xchg
leave
cmp
pop
fist
add
pop
std
push
and
or
lock
push
xchg
lahf
lds
or
sub
pushf
jecxz
cs
add
and
out
or
sub
pop
(bad)
rol
call
fsubr
jecxz
add
hlt
fiadd
out
mov
int3
xor
xchg
and
push
es
repz
call
mov
retf
adc
outs
or
out
cmp
ss
scas
and
out
or
mov
test
push
cwde
or
das
xchg
loopne
inc
add
cdq
sub
xor
outs
push
jae
xchg
mov
shr
mov
or
add
fnstcw
inc
bound
and
ficomp
scas
and
cmp
pop
loopne
xor
nop
inc
in
ins
in
cmps
xchg
out
sar
(bad)
mov
cmp
add
adc
lods
imul
jmp
out
mov
add
inc
dec
pop
dec
jo
cmc
and
enter
cld
mov
push
dec
arpl
ds
sti
es
test
cmp
not
shr
in
mov
mov
sbb
arpl
call
and
jl
xchg
(bad)
jo
xchg
dec
pop
and
(bad)
outs
addr16
aam
or
mov
pop
cmc
cmps
sub
push
mov
pop
hlt
fnstsw
daa
mov
loope
jg
inc
push
mov
ret
sub
leave
and
add
xor
ja
lea
dec
add
mov
push
or
inc
pop
adc
call
std
cmp
mov
lods
je
dec
imul
into
ins
jecxz
mov
pop
popa
pop
ror
xchg
movs
sti
into
xchg
ss
xlat
imul
outs
xchg
(bad)
mov
cmp
lock
sbb
mov
outs
daa
ret
test
cmp
jae
cmp
jne
sub
cwde
sar
arpl
mov
jl
mov
sub
lods
sbb
ret
rcl
pop
pop
clc
inc
pop
outs
lock
pop
jo
adc
cmps
sti
ss
push
xchg
sub
sbb
jmp
stos
push
shr
es
sbb
push
fsub
mov
loope
mov
cmp
add
in
adc
push
cmp
add
inc
icebp
add
rcl
(bad)
sub
scas
xchg
and
pop
icebp
test
mov
test
sbb
sbb
(bad)
pop
movs
retf
mov
ins
fiadd
sub
mov
xlat
pop
mov
mov
lds
loope
fstp
pusha
dec
rcr
lock
sub
iret
out
dec
ret
out
ins
aas
stos
or
mov
mov
bound
cwde
and
movhps
js
inc
mov
addr16
ret
xor
int
pushf
jp
idiv
push
jae
sub
aad
add
mov
jae
in
jmp
inc
lds
test
dec
ror
cmp
loop
mov
jo
aaa
mov
imul
push
or
push
ret
mov
jb
rcr
fdivp
sbb
inc
shl
pop
aaa
and
xor
sbb
mov
test
sub
ret
or
sub
stos
and
xchg
xchg
imul
and
pop
int
pop
outs
xor
outs
dec
xlat
test
sub
and
iret
fnsave
nop
adc
int
int3
mov
sti
jno
imul
cli
cmp
fsub
lods
sbb
(bad)
popa
jl
or
xchg
pop
je
das
mov
dec
push
mov
adc
cmp
mov
jns
sbb
push
sub
gs
dec
adc
mov
push
mov
outs
test
in
daa
js
bound
rcl
pusha
clc
mov
out
add
bnd
add
add
and
jbe
pop
xchg
add
and
sub
stos
outs
xchg
fnsave
push
dec
iret
pusha
aad
inc
pop
and
sbb
or
sti
xor
(bad)
in
xchg
inc
xchg
outs
inc
fisub
adc
in
in
cmp
cmp
lds
cdq
ficomp
dec
shr
fcom
and
(bad)
pop
fstp
out
lock
inc
aaa
sbb
push
sub
mov
mov
fnsetpm(287
cs
loopne
jnp
into
rcr
and
push
push
mov
test
xor
mov
sub
neg
les
inc
fs
jge
test
call
sbb
aaa
leave
out
push
fiadd
and
mov
lock
dec
mov
stos
pop
outs
loope
aad
mov
push
cwde
loopne
add
jae
dec
adc
and
dec
and
adc
ret
cmps
ret
add
das
cs
push
sub
push
xchg
repnz
fisubr
fidiv
fs
pop
jne
mov
out
mov
fld
add
pop
and
ror
in
jmp
shr
push
pushf
xor
sub
outs
pop
mov
scas
mov
ss
out
xor
sub
sub
add
cmp
in
jle
mov
in
or
mov
sbb
dec
das
xchg
adc
adc
add
inc
fstp
sub
jbe
fimul
fwait
inc
jo
cli
pusha
repnz
outs
ins
cld
xchg
(bad)
aad
push
jg
pop
cs
dec
test
or
lods
mov
int3
iret
outs
enter
inc
push
stos
mov
inc
jmp
outs
(bad)
cwde
out
and
push
xlat
sub
fidiv
ret
mov
inc
rol
arpl
inc
push
push
or
mov
mov
cs
ins
mov
ins
jge
jbe
rcl
push
stc
dec
mov
or
add
xor
mov
mov
cs
stc
lock
adc
(bad)
pop
js
dec
out
inc
cld
or
scas
mov
addr16
test
and
sbb
(bad)
push
pop
mov
dec
lds
fidivr
daa
hlt
push
adc
cli
lds
shr
nop
outs
bound
xchg
cmp
lock
jl
jmp
out
je
test
mov
rcl
call
retf
scas
imul
xchg
or
mov
sahf
and
out
add
xor
in
imul
dec
sub
pop
or
ds
pop
iret
adc
pop
jg
jno
sub
push
mov
retf
xchg
test
mov
push
shl
data16
dec
jno
push
loopne
push
fcomp
aaa
sbb
inc
sbb
sub
movs
jb
ret
push
lds
(bad)
xlat
pusha
xchg
sub
mov
fstp
gs
xor
mov
jle
xchg
pusha
or
(bad)
in
pop
pushf
jnp
sbb
rcr
push
arpl
inc
or
dec
popa
dec
add
sbb
data16
sub
mov
push
clc
and
out
add
push
call
jno
pop
movs
cmps
movs
test
pop
hlt
push
push
xor
inc
icebp
fisttp
cmp
sbb
cmp
call
ss
xchg
dec
cmps
push
bnd
test
shl
add
icebp
mov
mov
fstp
sbb
lock
shr
mov
xor
xor
pop
bound
or
jmp
sub
sub
dec
loop
out
sub
stos
push
loop
ins
add
push
mov
icebp
adc
popf
cdq
aam
cmp
xlat
inc
or
repnz
pop
dec
fsubr
push
xor
mov
jmp
movs
pop
mov
push
jp
add
outs
xchg
push
test
test
jmp
mov
ins
(bad)
cld
cmps
or
jmp
and
(bad)
jle
pushf
sti
cmp
xchg
xchg
mov
inc
adc
mov
(bad)
xor
aas
aaa
jbe
repz
inc
push
jl
out
jmp
pop
mov
(bad)
sahf
xor
pop
sbb
lock
sbb
add
xor
icebp
mov
sbb
jp
xchg
xor
in
add
es
inc
hlt
inc
cli
sub
scas
mov
(bad)
cmp
push
(bad)
or
cmps
loop
pop
mov
ror
test
mul
xor
jmp
or
jp
or
outs
pop
dec
adc
mov
dec
mov
lock
cmp
sbb
xlat
pop
lods
repz
out
push
jbe
jnp
xchg
add
xchg
not
xchg
fst
js
mov
daa
sti
pop
fidiv
sub
imul
shl
xchg
rcr
mov
mov
ja
xchg
pop
fwait
mov
int3
inc
clc
je
mov
lock
cwde
js
adc
and
inc
stos
lahf
je
retf
lds
mov
(bad)
jle
test
push
out
inc
and
(bad)
pop
jno
add
call
fcom
xor
or
push
add
shl
jecxz
movs
xchg
in
loop
mov
add
dec
ins
mov
dec
mov
pusha
js
add
(bad)
ins
outs
push
and
mov
xchg
aaa
ins
cmp
sbb
add
imul
push
adc
adc
mov
rdpmc
out
cs
ret
ins
jp
jmp
repnz
lock
pop
std
popa
mov
sub
mov
adc
pushf
aam
mov
shl
scas
cmps
push
or
inc
inc
or
cmp
or
aaa
and
pop
lock
imul
loop
xor
rcr
jmp
push
adc
dec
shr
aas
xor
je
pop
jge
fild
dec
xchg
add
pop
dec
js
sbb
dec
adc
xor
test
retf
repz
sub
mov
outs
sbb
push
movs
aad
mov
push
lea
and
jge
jecxz
mov
outs
js
cmc
cmp
cmp
cmc
mov
call
ja
imul
(bad)
jmp
pop
out
and
daa
and
loopne
(bad)
aad
in
aam
cld
call
ins
stos
or
(bad)
sbb
or
leave
cld
and
cmps
cmps
es
push
out
stos
sub
aaa
mov
sbb
retf
bound
mov
add
adc
xchg
pop
aas
data16
lods
fld
(bad)
mov
repz
mov
jns
cmp
mov
inc
sar
shl
cmp
add
push
or
dec
ret
sub
int3
fdivr
jle
es
mov
jp
mov
bound
ret
jae
pop
pop
mov
mov
xchg
push
daa
repnz
in
inc
nop
sti
ss
loop
idiv
jmp
lahf
in
int3
dec
jno
scas
int3
adc
sub
das
sub
js
sbb
mov
dec
ss
adc
sub
xlat
and
xor
adc
dec
xchg
loop
mov
pop
or
fisubr
fwait
xchg
lods
stc
inc
push
xor
ret
pop
mov
mov
jb
imul
mov
rcl
jmp
push
popf
loope
in
in
into
sbb
and
adc
(bad)
mov
out
cwde
mov
pushf
cmc
sbb
pop
jp
pop
jmp
int3
sbb
inc
aad
jg
mov
mov
mov
mov
mov
fisttp
pushf
sub
sub
jbe
inc
stc
outs
sub
push
call
(bad)
(bad)
fstp
imul
test
push
and
cmp
and
mov
in
jmp
jmp
out
and
fimul
sub
shl
cmp
test
test
inc
jae
dec
and
ds
fsubr
cli
fdiv
(bad)
aad
mov
inc
mov
sub
mov
fst
imul
cwde
inc
sbb
dec
jmp
repz
xor
imul
shld
cmp
jmp
pop
dec
push
icebp
out
aas
stc
idiv
xor
push
call
pop
cmps
loopne
rol
jno
push
inc
xchg
sbb
ret
xchg
mov
jno
out
nop
iret
mov
stos
and
mov
mul
retf
cld
sbb
stos
jno
xlat
cdq
les
cmp
inc
ret
call
xchg
je
sbb
xor
jp
cmp
lods
cli
cmp
idiv
leave
mov
loopne
and
arpl
ss
inc
test
cmp
(bad)
mov
cmp
jmp
xchg
(bad)
mov
div
nop
lods
ret
dec
sub
mov
mov
xchg
dec
sti
mov
(bad)
les
or
pop
sub
ret
mov
pushf
test
(bad)
xchg
mov
jmp
int
xchg
sbb
test
mov
ret
dec
sub
repz
loope
add
or
das
inc
cmc
int3
xchg
lahf
mov
shl
cmps
jb
arpl
fsub
call
arpl
pop
mov
scas
test
mov
loop
hlt
push
jno
lea
cmps
jb
pop
cdq
fdivr
mov
(bad)
sti
cmp
rol
push
sbb
jno
cmp
pop
mov
pop
xchg
dec
adc
jmp
mov
or
xchg
ins
loop
(bad)
push
push
sub
(bad)
movs
sti
lds
aas
pushf
pop
lds
cdq
out
adc
fist
pop
fs
fs
retf
loopne
std
jns
and
outs
sbb
cmp
data16
jmp
data16
fsub
fbld
mov
(bad)
in
xchg
test
lods
and
fimul
pop
in
jae
js
dec
xor
js
scas
pop
fld
mov
retf
imul
or
jae
in
cdq
xor
loop
push
add
sub
sahf
fs
jo
push
mov
ret
mov
xor
xor
out
aad
xor
cmp
xor
ffreep
shl
(bad)
push
mov
dec
je
jns
dec
mov
faddp
cwde
ror
xor
pushf
mov
pop
psubd
mov
in
or
mov
mov
cmp
pop
aad
cli
in
cmp
addr16
mov
sub
sbb
mov
xchg
inc
inc
add
imul
rcl
sub
std
add
icebp
and
jle
(bad)
push
pop
sbb
add
pop
cmp
xlat
mov
cmps
call
adc
sbb
in
jmp
pop
add
test
neg
rcr
push
pop
cwde
lods
xchg
pusha
inc
jl
jmp
pop
pop
enter
popa
aaa
or
dec
mov
pushf
adc
hlt
imul
xchg
mov
aam
movs
jecxz
cmps
sahf
sbb
add
out
test
fist
cli
mov
push
ret
cmp
inc
add
aaa
or
push
jl
cli
sub
sbb
scas
xchg
pop
shl
pop
imul
mov
outs
imul
mov
push
scas
ficomp
lock
stos
ror
inc
sub
xchg
(bad)
xlat
and
out
in
or
xchg
jae
adc
test
out
xchg
mov
aas
daa
scas
leave
cwde
pusha
cs
shl
retf
mov
mov
call
test
in
lahf
jmp
jnp
cmp
cs
adc
dec
(bad)
sbb
lahf
adc
outs
aam
jp
pop
cli
add
clc
icebp
xchg
push
xchg
xchg
jns
fs
pop
jnp
xor
jbe
shl
sbb
(bad)
les
sbb
xchg
mov
cdq
xor
mov
or
loopne
xchg
out
cld
inc
jge
aaa
sub
sub
cmp
jp
xchg
or
pushf
cmc
adc
inc
mov
jmp
ins
clc
or
xchg
sti
in
push
dec
clc
mov
sahf
pop
ret
fisttp
sbb
movs
dec
aaa
push
pushf
ret
retf
in
sub
fst
mov
add
xlat
xor
rcl
inc
and
std
add
fsubr
xchg
mov
xor
adc
sub
lods
es
scas
mov
inc
cmps
lock
daa
cmp
mov
aas
pushf
fldln2
adc
adc
push
add
cmc
mov
data16
sbb
pop
cwde
xor
sbb
push
aaa
mov
pushf
and
push
jbe
mov
mov
cmps
mov
ins
push
pusha
pmaddwd
add
mov
sub
pop
adc
shr
pop
mov
sub
or
cmc
aad
push
dec
jge
ins
pusha
mov
add
js
or
jnp
pop
dec
or
mov
stos
jge
push
mov
dec
jg
mov
push
int
aaa
push
stos
cmp
out
dec
push
jge
mov
cwde
adc
and
ins
lods
mov
in
sub
mov
adc
add
sub
xor
outs
(bad)
in
adc
mov
push
push
pop
sbb
leave
in
xlat
and
pop
rol
aaa
cmp
repz
iret
cmps
scas
inc
sbb
cld
push
push
jnp
test
sub
adc
out
cmp
in
mov
jb
aas
ret
enter
push
push
add
and
std
cmp
ins
mov
push
aaa
ins
outs
inc
sub
loope
jns
cmps
rcl
push
jg
dec
les
jle
jmp
mov
inc
adc
loope
xor
aas
pop
sub
lds
xchg
retf
adc
loopne
rol
or
outs
shl
ss
push
ss
dec
retf
xchg
adc
cmp
xchg
inc
jnp
dec
cmps
mov
mov
jmp
sub
and
or
add
cmp
in
sbb
out
push
out
sti
stos
cmp
dec
pop
push
push
and
dec
mov
int3
enter
and
cmp
fadd
mov
jne
and
jmp
mov
jne
push
xor
xchg
sub
dec
pushf
push
fiadd
pop
dec
shr
jo
xchg
sbb
dec
push
push
jl
das
inc
retf
and
popf
mov
add
pushw
movs
xor
sbb
mov
in
pop
pop
jae
inc
stc
cs
int3
ins
sbb
inc
jmp
adc
or
ret
or
xor
cmp
call
push
jne
fdivr
and
js
pop
xchg
arpl
push
lods
mov
sub
frstor
mov
or
sahf
ins
stos
rcr
xchg
(bad)
lahf
pop
sbb
cmp
sbb
call
test
push
bound
int
or
outs
leave
cmps
fmul
or
ret
xor
xchg
adc
leave
add
sub
jmp
nop
mov
enter
(bad)
inc
fwait
std
nop
mov
pop
cmp
or
lea
call
push
ds
int
or
aaa
xor
and
jg
and
std
xchg
mov
mov
adc
in
cmps
movs
icebp
lds
xor
(bad)
pop
sbb
mov
inc
add
ins
mov
repz
jl
idiv
fimul
cmp
out
mov
call
aas
add
retf
fst
ret
mov
push
sub
pop
mov
call
lock
mov
lds
loope
add
shr
sbb
ror
push
fwait
shl
xor
lds
sbb
push
stos
(bad)
addr16
dec
cmp
jno
or
daa
fs
jp
pop
pop
pop
out
out
loop
std
jbe
inc
xchg
popa
push
xor
push
xchg
fs
ds
fcmove
xchg
sub
ja
std
xor
xor
mov
leave
ret
push
stos
pop
and
(bad)
rcr
pop
out
dec
sti
add
mov
cmp
push
repz
adc
pop
xor
dec
call
sub
mov
cmp
jmp
ins
mov
xor
loop
adc
inc
sub
mov
lds
sub
leave
adc
sbb
push
in
inc
push
push
inc
inc
xchg
cmp
mov
cmp
mov
or
jge
inc
sbb
push
fldenv
xor
stos
out
mov
or
mov
xchg
pop
mov
sbb
lods
mov
cmp
movs
(bad)
push
inc
mov
or
inc
inc
cmp
sbb
ds
aam
jg
sahf
pushf
dec
rcl
jg
and
push
xchg
jge
je
ror
es
push
xor
jmp
jle
pushf
push
mov
or
pop
or
or
and
sub
add
mov
scas
int
(bad)
push
pusha
icebp
mov
ja
repz
pop
mov
mov
and
lahf
lock
scas
div
cmp
fisub
std
arpl
mov
and
or
mov
fsub
hlt
dec
pusha
sbb
or
in
sub
sti
in
nop
cmp
and
adc
fdivr
push
mov
mov
inc
stos
xor
mov
sbb
jmp
inc
jg
add
pop
lahf
lahf
test
call
test
mov
cmp
mov
and
daa
xchg
popf
dec
add
cmp
dec
hlt
push
push
popa
(bad)
aad
out
pop
push
mov
aaa
mov
inc
jno
pusha
add
jae
stc
sub
jge
call
xchg
mov
push
push
sti
add
lds
and
retf
(bad)
add
repnz
scas
out
ret
jmp
jae
out
jg
inc
pop
(bad)
xchg
retf
sub
jge
data16
cmc
fcompp
inc
(bad)
dec
mov
push
call
mov
fist
jo
call
dec
mov
popf
mov
(bad)
out
push
jnp
sub
cdq
and
loop
pop
ins
mov
adc
push
aas
mov
mov
jo
inc
int3
adc
in
cdq
ret
ins
enter
out
lds
push
add
enter
xor
push
out
sar
aam
stc
mov
adc
xchg
adc
and
icebp
inc
test
inc
iret
jne
fistp
lds
movs
push
or
cmp
xchg
mov
lock
and
xor
mov
mov
push
xor
xchg
xchg
dec
push
cmp
sub
jmp
(bad)
cld
jg
loop
pop
cmp
cmps
imul
loope
mov
mov
fisubr
ins
je
push
dec
rcr
sub
pusha
adc
outs
pushf
fmul
mov
xor
scas
pop
lods
popa
or
movs
sub
mov
inc
shr
scas
bound
inc
jecxz
fisubr
lods
and
pop
mov
xor
xchg
jge
dec
popf
mov
mov
call
push
push
add
(bad)
push
stos
jns
push
nop
data16
ret
add
(bad)
cmps
add
retf
call
sbb
out
sahf
xor
cmc
imul
retf
push
rcl
push
mov
(bad)
sub
andps
xchg
movs
xchg
dec
adc
lds
cmps
fadd
(bad)
aas
sbb
mov
xor
add
test
mov
ficomp
pop
sahf
test
es
out
sti
cmp
outs
lock
retf
loope
pop
push
stos
out
mov
mov
jo
in
mov
loopne
retf
dec
and
pop
imul
mov
dec
cmp
or
dec
cmp
push
mov
jecxz
jae
cwde
retf
fbstp
(bad)
fmul
pop
inc
inc
mov
ins
addr16
push
push
jl
fistp
inc
pop
je
test
and
add
out
test
outs
or
cwde
fsubr
dec
loopne
sbb
mov
out
in
xchg
aad
pop
cmp
pop
inc
fild
jl
int3
cmc
cdq
js
sbb
out
jg
pop
stos
lea
or
lea
gs
xchg
cmp
rcr
fs
fmul
ret
movs
jbe
mov
nop
sbb
xor
jmp
cmp
loop
fisttp
mul
push
mov
repz
mov
cmp
push
push
sar
int3
mov
into
xor
mov
push
xchg
push
mov
xlat
pop
shr
and
dec
(bad)
shr
ss
cmp
mov
inc
fmulp
push
xchg
gs
jg
add
ins
push
pushf
fild
pop
or
ror
or
xchg
nop
xor
lods
arpl
out
clc
fisttp
xchg
stos
jmp
icebp
sub
cmp
xchg
cmps
ss
and
stos
retf
fistp
fild
jl
adc
stos
repz
shl
fldenv
mov
jg
loopne
xor
cmp
rcr
scas
pop
leave
inc
rcl
push
data16
inc
and
int
or
cwde
lds
jb
push
popf
bound
sub
sbb
or
lods
xchg
lods
cmp
mov
(bad)
sbb
test
daa
and
stos
std
jg
pop
lock
or
pushf
je
add
ret
add
xlat
lods
xchg
sbb
stos
frstor
pop
loopne
and
sbb
inc
jle
clc
push
or
cmp
int
sbb
stos
int
jo
gs
das
fs
cdq
xchg
js
rol
push
jl
xchg
xchg
or
adc
cmp
sbb
pop
cdq
imul
test
ins
dec
jno
fcom
mov
in
mov
hlt
xor
push
mov
jo
rol
push
inc
ret
lods
loope
push
enter
fadd
mov
(bad)
xor
mov
jb
ins
enter
pop
movs
lds
xor
jp
cmps
sahf
fbstp
adc
rcl
xchg
and
call
xor
sub
mov
fiadd
adc
add
pop
retw
ds
mov
imul
inc
out
cdq
lock
lea
mov
pop
add
mov
das
cmp
ror
xchg
popf
cmp
fild
jns
bound
inc
retf
jne
les
std
add
arpl
popa
mov
clc
jecxz
jbe
pushf
push
(bad)
xchg
je
inc
loopne
add
sar
inc
jmp
fild
push
xor
jns
cld
xchg
pusha
push
pushf
stos
pop
push
ins
je
popf
cmp
jbe
sbb
mov
shr
push
out
mov
(bad)
ffree
and
push
jmp
sbb
cmps
sbb
out
rcr
adc
jl
push
in
mov
shl
loopne
dec
pop
inc
pop
and
sub
pop
inc
sub
adc
pop
enter
mov
stos
ds
imul
xor
sbb
hlt
iret
push
loope
popf
mov
das
push
(bad)
out
or
pop
daa
inc
add
adc
movs
lds
pop
outs
test
not
sbb
jns
scas
pop
push
ins
inc
dec
pop
mov
pop
mov
aaa
jmp
push
mov
fisubr
out
repz
inc
shl
stc
sbb
in
nop
dec
das
adc
fstp
and
xchg
retf
or
cmp
je
jg
test
outs
adc
rol
fwait
daa
clc
call
sbb
pop
dec
xor
fcom
or
pop
jle
sbb
aas
test
call
sti
and
jmp
scas
ffreep
out
fwait
movhps
repz
sbb
retf
repnz
inc
and
and
jnp
dec
mov
shl
mov
inc
leave
mov
cmp
inc
sub
mov
adc
dec
test
lock
xor
sub
lock
pop
in
mov
push
xchg
xchg
or
and
xor
xchg
mov
out
mul
mov
mov
add
daa
sbb
or
xchg
push
jecxz
popf
pop
ret
mov
fisub
push
jno
pop
out
mov
xchg
icebp
pop
icebp
nop
inc
out
fstp
push
add
fld
int
jae
dec
cmp
mov
lods
mov
cmp
jmp
mov
sbb
imul
push
lods
cmp
jmp
xchg
push
or
ds
lahf
sbb
jecxz
je
cmp
test
arpl
outs
push
adc
pop
cmp
add
push
int3
jge
sub
repnz
inc
scas
cmp
cmp
add
pop
ficomp
jp
sub
repnz
dec
dec
sbb
pop
cmps
lods
jns
out
fldcw
or
idiv
inc
shl
adc
and
loopne
xchg
loopne
pop
xor
mov
sar
dec
(bad)
je
clc
jbe
pushf
cmp
ins
and
jne
jl
jmp
and
out
call
pop
test
pop
dec
and
lea
icebp
jg
adc
inc
inc
fist
jg
mov
outs
xchg
mov
mov
outs
push
movs
push
inc
mov
gs
push
movs
fdiv
xchg
adc
leave
in
out
fs
push
xchg
lahf
out
add
xor
mov
lahf
jecxz
adc
rcr
push
push
out
lahf
inc
fcom
loopne
inc
aas
or
test
mov
mov
iret
repz
lods
in
sbb
sti
jae
popf
imul
mov
cdq
outs
sbb
adc
mov
xchg
aaa
bound
pusha
sub
mov
adc
lea
jne
fisub
jl
xor
cwde
jns
push
dec
push
pop
mov
lahf
ret
enter
mov
cli
push
(bad)
icebp
rol
movs
sub
sar
in
in
cmp
out
add
enter
lahf
call
push
fwait
xchg
inc
int3
pop
jl
jmp
inc
sbb
push
mov
sub
mov
cmp
cdq
dec
lods
ins
adc
jle
stos
stos
pop
pop
arpl
cwde
call
mov
hlt
hlt
xchg
add
test
add
sub
sahf
cmp
push
push
or
adc
cmps
test
test
loop
and
xlat
push
xor
(bad)
jne
pushf
bnd
adc
jmp
sbb
cld
mov
sbb
add
xor
push
dec
test
xor
mov
mov
or
fild
mov
dec
scas
(bad)
sub
and
ins
sbb
cli
rol
sti
je
idiv
stos
data16
mov
push
jle
scas
add
mov
retf
mov
push
rol
ret
popa
mov
sbb
rcl
pop
adc
out
aaa
ret
data16
shr
sahf
add
mov
fisubr
mov
aam
mov
loope
xchg
push
ret
adc
inc
arpl
push
aaa
retf
aam
ret
adc
les
arpl
and
add
or
(bad)
movs
sti
and
cmp
pop
(bad)
and
out
mov
call
inc
div
jns
sbb
adc
enter
fidiv
push
lock
out
lahf
repnz
adc
push
dec
push
pop
ins
cmp
or
dec
cli
xchg
cdq
mov
dec
fwait
inc
pop
mov
mov
adc
xor
test
jge
movs
sbb
add
popf
stos
arpl
mov
sti
push
sub
sub
adc
mov
mov
or
clc
push
mov
retf
and
jne
xor
inc
daa
pushf
lds
fisttp
daa
push
sub
cdq
call
push
add
int3
mov
cmp
movs
fdiv
xor
inc
fbstp
dec
and
out
repz
lea
sub
mov
std
mov
lock
js
sahf
xchg
push
fwait
push
push
fmul
(bad)
sbb
popa
mov
dec
daa
cli
mov
inc
test
add
test
sub
jecxz
xchg
gs
(bad)
sub
stc
and
shl
mov
fisttp
popf
mov
jbe
xlat
jmp
jecxz
cmp
rcr
stos
inc
jge
mov
sub
mov
sahf
pop
aas
and
ret
and
mov
jnp
outs
xor
fstp
mov
popa
push
je
imul
sbb
fwait
pop
jp
gs
push
push
(bad)
popf
and
sbb
dec
(bad)
and
and
pushfw
mul
ja
dec
icebp
lahf
or
stc
repz
je
lods
call
repnz
jae
or
adc
jle
fadd
ins
inc
pop
sbb
mov
add
aad
lds
retf
repnz
ins
cmps
adc
cmp
push
adc
pop
shr
pop
push
in
or
arpl
ss
jae
scas
sahf
pop
int3
int
or
enterw
push
xchg
sub
ins
and
pop
es
bnd
retf
int
bnd
cwde
mov
push
push
mov
xchg
imul
test
outs
push
push
pop
fwait
mov
loopne
mov
outs
arpl
inc
lahf
iret
ret
idiv
or
bound
repz
fistp
dec
jmp
and
dec
jbe
ror
dec
xchg
stos
pop
into
aam
out
mov
inc
fisub
into
dec
imul
pop
imul
jbe
jb
jb
add
ret
test
dec
jecxz
pop
and
mov
aaa
jl
xchg
les
jmp
inc
mov
adc
sub
or
pop
mov
js
push
mov
mov
dec
sub
jns
and
nop
mov
jmp
inc
aam
lods
dec
pop
(bad)
jb
into
add
mov
sbb
call
mov
inc
adc
stos
mov
fdiv
jge
sub
mov
xchg
iret
pop
fst
mov
pop
pop
or
ja
xchg
outs
push
icebp
sbb
cmps
gs
mov
outs
xlat
pop
adc
in
or
mov
imul
push
sbb
jmp
mov
jo
xor
call
fist
rol
int
fwait
imul
into
cld
xchg
ffree
sub
push
iret
nop
xchg
(bad)
push
inc
aas
cmovo
jl
and
movs
mov
scas
pop
call
fisub
mov
arpl
repz
xor
add
repz
out
pop
sbb
xor
xor
push
aaa
mov
lods
cmp
fmul
mov
mov
cmps
jnp
xchg
xlat
outs
aaa
push
inc
mov
pop
inc
or
inc
jmp
sub
clc
pushf
leave
jmp
int
mov
test
mov
jno
xchg
into
jge
dec
inc
cmp
and
data16
sbb
rcr
jp
mov
push
push
pop
cli
icebp
push
mov
out
jge
xchg
push
mov
jg
aaa
mov
in
mov
push
pop
in
outs
jle
and
xor
dec
ds
jns
inc
lods
gs
jbe
jmp
out
push
popa
jp
clc
xchg
jmp
add
xchg
jnp
dec
and
inc
je
sti
(bad)
idiv
cmp
scas
lods
nop
mov
(bad)
xchg
iret
pop
xchg
lock
dec
push
or
sub
imul
jnp
mov
adc
iret
jecxz
shr
imul
cmp
and
lahf
out
mov
adc
shl
fucomi
in
arpl
pop
mov
inc
mov
mov
push
aad
ret
add
fwait
add
dec
mov
bswap
daa
pushf
adc
ins
lahf
mov
rol
outs
lods
scas
loopne
retf
nop
hlt
adc
xchg
jmp
xor
cmp
push
jno
mov
jae
fsubr
jmp
inc
fnstsw
jg
or
jecxz
sbb
inc
data16
push
stos
fisubr
pop
adc
es
sbb
jne
adc
loopne
loopne
dec
div
es
xchg
pop
adc
call
mov
stc
adc
mov
mov
jae
pop
pop
ins
cmp
mov
loope
stos
cmp
sub
lock
sar
pop
push
scas
pop
xchg
jmp
stos
mul
aaa
call
jnp
(bad)
or
or
jns
in
jmp
or
or
dec
pushf
test
xchg
sbb
jmp
ret
jle
mov
(bad)
mov
xor
ins
and
clc
rol
inc
setp
jp
pop
or
jbe
shl
inc
add
in
mov
leave
mov
sbb
movs
lods
mov
mov
cmp
loop
aad
adc
imul
xor
aaa
pop
mov
push
ss
ds
sar
jmp
das
jg
popa
fcmovbe
push
dec
loop
mov
jno
lock
mov
push
shr
inc
sbb
int3
add
retf
pop
call
movs
mov
xor
cmp
push
fwait
nop
es
mov
jp
fwait
jno
dec
shr
push
ret
ins
jb
jecxz
xchg
cdq
xor
movs
mov
pop
or
xor
pusha
jnp
pop
jne
jns
pusha
push
xchg
push
xor
loope
jns
mov
pop
dec
inc
cdq
and
loope
popf
in
adc
jmp
test
sub
or
add
daa
scas
bound
mov
loop
je
test
lods
cdq
pop
popa
cld
out
sahf
jae
inc
popa
and
pop
adc
pop
jae
push
mov
pop
or
aam
dec
lds
(bad)
js
dec
arpl
xor
mov
into
shl
adc
out
mov
aas
dec
add
adc
add
and
pop
dec
push
mov
push
out
add
sbb
xchg
add
xchg
retf
cmps
adc
jnp
(bad)
add
xor
aaa
jge
clc
jmp
out
mov
xchg
addr16
push
es
push
lea
lods
scas
fdivr
popa
sar
mov
dec
and
clc
and
mov
mov
outs
jcxz
shr
cmc
sbb
mov
test
jbe
or
gs
inc
sub
jmp
cmp
adc
mov
es
mov
out
dec
mov
pop
mov
fisttp
add
mov
and
sbb
lahf
jg
clc
jmp
adc
mov
inc
das
arpl
mov
popf
(bad)
add
mov
xchg
and
and
popf
cmp
mov
adc
sub
xlat
fsubr
push
pushf
push
mov
add
pop
mov
adc
lock
outs
int3
sar
sub
pop
pop
pushf
inc
imul
mov
xchg
fs
cli
adc
out
outs
push
lds
xchg
fadd
repz
outs
int3
mov
aad
add
nop
test
sub
sti
or
nop
cmp
push
cmps
pop
add
mov
cmp
push
mov
and
jmp
outs
or
pusha
add
jp
mov
icebp
(bad)
in
mov
jmp
xor
xor
xchg
and
ret
cmps
or
mov
call
push
lahf
je
push
mov
mov
lods
fimul
ins
sbb
mov
loope
shl
sbb
daa
mov
xchg
sbb
and
(bad)
(bad)
out
adc
mov
icebp
jp
pop
jmp
imul
pushf
stc
sub
mov
or
(bad)
std
(bad)
and
jo
cmps
mov
dec
and
sahf
retf
mov
(bad)
int3
(bad)
push
jne
cwde
lock
dec
call
xchg
mov
pop
das
cld
jae
mov
pusha
retf
test
mov
mov
mov
aaa
sbb
not
sub
test
dec
xchg
sub
shr
xlat
iret
pop
shl
mov
push
shl
aaa
adc
es
fst
mov
cli
and
retf
fucom
mov
test
aas
push
pop
cli
ret
scas
push
xor
inc
add
das
adc
ret
fld
ror
fldz
jb
mov
push
stos
inc
adc
nop
add
inc
mov
mov
dec
add
sub
call
mov
pop
xchg
sub
xchg
inc
clc
mov
adc
mov
jmp
cmp
hlt
shr
retf
pop
adc
pusha
ins
pop
inc
add
xor
test
xchg
test
jbe
movs
sub
push
mov
stos
sti
movs
mov
mov
xor
stos
dec
ss
jmp
or
pop
push
jle
pop
(bad)
mov
xlat
(bad)
aas
add
mov
imul
mov
sbb
xchg
and
inc
push
add
cld
stos
jmp
in
lds
neg
dec
out
std
pusha
and
mov
call
jae
into
cdq
popf
push
xchg
vandnps
movs
sub
push
adc
xchg
xor
retf
pop
call
dec
test
mov
ins
pop
mov
test
lods
in
push
sbb
retf
pop
repz
out
sbb
xor
stc
pop
imul
dec
jnp
arpl
icebp
add
mov
imul
sbb
xchg
icebp
push
mov
add
push
sub
shl
sbb
inc
mov
jg
rcr
scas
inc
fs
fsub
or
mov
mov
outs
xchg
sub
enter
fadd
(bad)
fild
stos
fwait
add
pop
bnd
adc
xor
(bad)
xchg
add
test
out
ficom
lods
jb
mov
call
sbb
arpl
push
in
xchg
in
cmp
daa
sbb
dec
push
cs
leave
jle
push
ja
dec
dec
retf
sbb
mov
mov
xchg
inc
shl
icebp
lock
ins
outs
xchg
and
add
adc
lea
dec
mov
in
sub
bswap
xchg
js
inc
mov
js
push
sub
mov
inc
ret
aaa
pop
lock
outs
loopne
mov
push
test
push
loopne
cmp
jnp
pusha
enter
sbb
jne
(bad)
in
ror
push
jmp
jmp
lock
jo
repnz
nop
and
movs
cmp
and
mov
mov
cmp
test
xchg
cmp
add
out
outs
push
add
push
push
push
call
jnp
enter
aam
ja
adc
or
push
and
xor
mov
(bad)
sti
retf
add
push
ins
mov
inc
popf
int3
pop
test
cwde
xor
push
rcr
sbb
push
adc
sub
neg
mov
test
add
test
shr
lea
sub
sbb
xor
adc
and
and
in
dec
xor
addr16
push
xor
es
xchg
gs
clc
cmps
js
call
test
dec
and
sbb
je
sub
jmp
sub
cmc
pop
test
stc
jge
xchg
movs
in
mov
mov
dec
int
rol
fisub
shl
add
sub
lods
adc
test
(bad)
adc
xor
popf
and
test
xchg
outs
rcl
out
lods
dec
jge
mov
sub
stos
fwait
pop
pop
xor
hlt
add
hlt
clc
or
aam
movs
movs
inc
xor
ja
xchg
ret
or
mov
fmul
jg
stos
pop
mov
aas
call
je
inc
ffreep
ror
ficom
and
inc
xchg
je
enter
mov
retf
mov
push
repnz
bound
push
jne
push
mov
test
stc
shl
mov
mov
shr
call
fidiv
gs
adc
sub
mov
or
outs
pop
sbb
aaa
mov
mov
pop
cmp
pop
repz
(bad)
push
sub
(bad)
xor
mov
push
repnz
repnz
movs
pop
pop
cmp
test
int3
add
push
sbb
sbb
arpl
mov
jl
mov
fwait
push
xchg
scas
(bad)
fs
jl
mov
jmp
das
(bad)
out
dec
test
outs
outs
or
loope
std
ins
cmp
sbb
es
sar
push
imul
mov
fcom
rol
or
push
aas
jne
gs
jmp
in
or
push
or
pop
xlat
pop
ss
(bad)
cmp
push
jl
je
push
xor
imul
test
adc
jle
mul
outs
and
xor
sub
lahf
gs
in
mov
pop
inc
cs
jbe
cmp
lock
mov
sbb
sub
int3
and
mov
sub
out
icebp
jbe
test
jg
gs
sbb
sub
mul
mov
xchg
jbe
jmp
sti
fmul
dec
add
mov
js
mov
mov
ds
cmp
pop
dec
shl
loope
ins
outs
stos
mov
enter
fadd
push
scas
popa
mov
xor
loope
add
jmp
pop
call
xor
inc
sahf
jae
pop
sar
pop
mov
sub
inc
loopne
jb
les
out
cmp
out
fild
jl
cwde
outs
and
push
adc
shl
mov
push
nop
inc
cmp
xchg
xchg
aad
stos
cmp
addr16
pop
jb
mov
fs
shr
outs
mov
lods
je
cld
in
pushf
lea
arpl
cmp
ror
aaa
fstp
cli
mov
push
xor
or
in
imul
rol
pop
cmc
xor
addr16
add
das
jnp
mov
pop
retf
xor
popf
adc
adc
jbe
test
cmps
pop
dec
fstp
lahf
fs
mov
jl
cs
ret
lahf
push
pop
dec
hlt
dec
xor
loopne
lahf
inc
scas
ret
xchg
mov
xchg
add
hlt
int3
or
pushf
sbb
xchg
imul
pop
adc
jecxz
or
sbb
dec
cmp
xchg
ins
xchg
leave
retf
pop
cmp
call
jle
cmp
and
mov
jmp
mov
xchg
inc
mov
shl
cmp
cmp
jmp
aas
retf
mov
fisubr
cmp
ret
retf
and
sub
mov
and
retf
xchg
fist
or
pop
shl
test
fwait
sbb
loope
nop
sbb
pop
popf
inc
pop
(bad)
(bad)
inc
or
test
pop
sti
mov
out
pusha
cdq
ret
inc
or
add
sbb
jmp
outs
cwde
jo
xchg
push
call
dec
add
jb
cmps
sub
cmp
or
mov
xchg
sahf
or
jno
icebp
xchg
fwait
test
jecxz
test
data16
xchg
ret
mov
push
clc
out
cmp
sub
cdq
jmp
idiv
jb
ss
sti
stos
dec
pop
(bad)
(bad)
popa
ins
and
inc
xor
inc
test
pop
jle
mov
xlat
push
dec
jne
push
gs
cmp
push
push
mov
aaa
xchg
xor
lods
into
ins
sbb
loop
rcr
out
aam
jmp
pop
jbe
nop
sahf
(bad)
loopne
in
cmp
mov
hlt
or
idiv
test
(bad)
mov
arpl
imul
pop
dec
fnstcw
data16
sar
ret
call
ret
and
pop
movs
repz
mov
retf
jb
mov
xchg
xchg
popa
mov
hlt
fisubr
hlt
dec
hlt
fnsave
outs
mov
aad
xchg
in
push
jg
call
add
test
clc
sub
fcomi
add
jb
fimul
fistp
mov
mov
rcl
std
pop
test
mov
dec
in
sub
dec
jne
jno
mov
dec
pop
push
mov
push
sbb
adc
pop
and
mov
mov
push
sub
je
xor
mov
out
pop
leave
xchg
shl
or
inc
push
pop
mov
ja
icebp
mov
push
inc
(bad)
loop
pop
out
fiadd
pop
push
out
outs
mov
inc
int
cdq
shl
retf
loope
repz
push
mov
movs
fild
stos
std
mov
je
pop
push
add
jg
inc
mov
mov
and
in
bound
mov
sbb
daa
xlat
inc
into
and
mov
stos
ds
hlt
adc
pop
outs
dec
ret
mov
push
and
pushf
pop
or
ds
in
nop
inc
rol
pop
inc
sbb
test
sbb
sub
inc
sub
(bad)
or
sbb
xlat
mov
or
fldcw
add
loop
mov
dec
push
scas
lods
inc
jae
sbb
adc
and
cs
je
into
xchg
xor
and
out
loopne
and
fldl2t
dec
fdiv
push
in
in
push
arpl
loopne
repz
push
imul
in
push
gs
test
fs
mov
fsubr
fdiv
adc
mov
call
lods
or
pop
cld
mov
sbb
sbb
and
stc
repz
ss
test
leave
mov
fwait
std
inc
dec
mov
out
sar
cmp
test
push
inc
pusha
push
xchg
ret
xchg
call
xlat
dec
movs
xchg
ret
xor
test
push
push
cmc
jo
pop
mov
push
adc
sbb
ror
ins
jle
jecxz
adc
sub
stos
or
test
adc
inc
nop
test
sahf
xchg
icebp
jg
popf
jecxz
sar
hlt
scas
and
stos
or
fidiv
hlt
push
mov
dec
mov
inc
out
mov
jo
clc
xor
mov
aad
lods
nop
push
pop
or
cdq
cdq
imul
jmp
in
(bad)
push
loop
add
lea
cmp
pop
mov
add
sbb
(bad)
add
and
xor
sbb
cmp
outs
push
retf
int
lock
sub
sbb
lahf
dec
fidivr
sbb
jp
inc
jne
push
add
sbb
dec
scas
(bad)
xor
or
push
mov
mov
mov
mov
mov
adc
mov
ins
sub
mov
jns
sbb
push
ret
xor
call
mov
and
xchg
ja
lahf
adc
xlat
or
inc
sar
mov
add
cld
push
(bad)
aam
hlt
jmp
mov
jge
(bad)
adc
xchg
sub
aas
push
aam
jmp
into
shl
aad
inc
enter
jbe
pushf
mov
call
jp
xchg
test
pop
out
test
or
loop
inc
xchg
loop
adc
push
push
test
enter
addr16
dec
fwait
and
mov
adc
xchg
in
inc
inc
or
cli
mov
dec
lahf
inc
xor
test
jae
jge
xor
push
ret
loop
stc
repnz
mov
das
leave
cmps
or
cmp
fdiv
jge
ja
or
leave
retf
xchg
sbb
adc
aad
push
push
pop
cwde
and
cli
sysexit
xchg
leave
jo
es
jl
cmc
inc
xlat
jbe
in
push
push
pusha
daa
js
rcr
dec
test
mov
push
xchg
mov
xchg
mov
imul
cmps
in
inc
sub
cs
cmp
pop
inc
enter
lock
lahf
adc
in
xor
pop
aas
add
adc
hlt
js
mov
pop
pusha
jmp
push
pop
adc
movs
and
daa
sbb
and
test
jnp
dec
sbb
popa
cmp
jg
pop
sti
ret
xor
(bad)
call
aam
or
(bad)
mov
or
mov
movs
inc
nop
test
xor
lea
jecxz
enter
inc
adc
mov
mov
and
int
mov
je
in
loope
retf
mov
fild
iret
xchg
les
mov
xor
(bad)
test
push
pop
in
shl
iret
dec
sar
ret
mov
mov
and
addr16
or
mov
das
nop
xchg
xor
scas
jl
scas
xchg
fimul
cdq
dec
scas
dec
mov
xchg
and
push
jge
xchg
cmp
outs
fstp
jmp
dec
mov
dec
add
shl
movs
mov
out
retf
add
setae
fsubrp
fcmovu
cmp
sar
int
std
push
inc
xor
pop
leave
sar
leave
outs
in
push
pop
aad
dec
cli
fsub
cmp
fsub
call
fadd
and
sbb
inc
sbb
call
inc
cmps
mov
jmp
add
and
sub
jb
cdq
pop
(bad)
outs
push
sub
mov
das
lds
les
clc
outs
test
and
jp
popf
in
sbb
movs
mov
jnp
(bad)
cs
cmc
(bad)
push
adc
inc
(bad)
rol
sub
sahf
ins
pop
out
mov
inc
dec
adc
push
loope
out
scas
and
xlat
fs
jecxz
int3
cmp
clc
(bad)
mov
jle
xor
jo
sub
push
lock
fs
cld
cwde
mov
cmp
leave
cwde
ja
mov
pop
and
push
mov
dec
jbe
fcmovnb
and
cld
out
add
push
pop
cmps
sub
add
call
in
fs
xchg
cmp
mov
scas
push
(bad)
mov
mov
mov
mov
in
adc
add
jae
xlat
ja
ds
and
cmp
mov
sbb
out
loope
cmps
sbb
xchg
int3
mov
mov
hlt
hlt
mov
push
sub
inc
xor
dec
cmp
add
pop
jb
js
popw
movs
and
mov
dec
inc
popa
and
and
arpl
mov
lods
pop
pop
clc
ins
es
cmp
mov
and
mov
sbb
iret
mov
mov
jge
add
ret
pop
int3
inc
(bad)
pusha
sbb
mov
inc
mov
mov
cmps
dec
sti
xchg
(bad)
das
mov
cmp
mov
mov
(bad)
jbe
popa
gs
xchg
mov
fstp
scas
xchg
mov
bound
mov
inc
xchg
leave
lock
in
sti
cmp
aas
mov
jmp
mov
add
aam
int3
mov
sar
ret
loopne
(bad)
std
cs
pop
lods
(bad)
outs
in
push
or
ret
rcr
cmp
inc
les
rol
xchg
fbstp
sub
loope
mov
dec
int
or
frstor
sub
mov
js
cmps
lods
std
out
or
dec
aaa
dec
inc
jbe
mov
inc
lods
push
cmp
bound
stos
push
dec
and
adc
sub
aad
add
test
aaa
lods
push
dec
out
push
fyl2xp1
sub
xchg
fisttp
xchg
or
pusha
lahf
xor
std
xchg
daa
push
fwait
xchg
mov
mov
lds
outs
inc
add
sbb
dec
push
mov
fsub
in
sub
popf
mov
mov
jbe
sub
out
ss
pushf
jmp
inc
push
out
out
push
retf
sub
mov
outs
cdq
mov
push
test
push
stos
retf
adc
scas
lds
sub
ss
mov
mov
cmp
add
mov
mov
stos
mov
ret
icebp
xchg
jmp
push
test
sbb
mov
out
adc
push
sbb
dec
lods
cmc
fstp
in
cmp
jne
push
pop
ficom
jge
in
and
fldenv
lock
(bad)
adc
mov
jle
and
sbb
in
mov
mov
in
or
sub
sub
call
stos
xchg
push
je
inc
fdivp
sahf
push
arpl
add
inc
jbe
retf
mov
and
xchg
inc
mov
sti
(bad)
push
je
hlt
mov
jb
xchg
jne
rcl
mov
sub
dec
jae
hlt
sub
ret
div
call
xchg
js
test
add
add
fstp
fwait
pusha
add
push
push
dec
pop
and
icebp
mov
sub
jmp
iret
(bad)
inc
xlat
or
push
mov
lds
loope
lods
and
jle
pop
loop
inc
popa
test
test
dec
dec
add
cmp
ss
mov
mov
lahf
and
pop
js
lock
xor
add
call
test
mov
xor
push
ds
pop
retf
cld
fwait
icebp
call
pop
dec
dec
dec
ret
cdq
cwde
jne
in
dec
adc
out
fcomp
call
ja
jecxz
jo
dec
fsubp
sbb
mov
clc
es
jnp
outs
stc
lods
xchg
xchg
jl
inc
mov
sahf
out
jmp
jl
jmp
add
aas
mov
and
sbb
fsubr
push
jnp
jg
test
fimul
push
clc
call
xchg
or
cmps
sbb
mov
push
sbb
repnz
clc
push
leave
daa
push
xchg
bound
dec
mov
cwde
inc
mov
pusha
push
pop
iret
cmp
jnp
(bad)
in
push
nop
outs
xchg
das
fnstenv
ss
hlt
pop
dec
aaa
cdq
push
xor
sbb
or
jle
mov
mov
movs
adc
jbe
adc
bound
jne
ror
add
dec
aas
push
cmp
sbb
cmp
retf
jmp
mov
jne
test
pop
jecxz
ja
xchg
popf
pop
pop
cmp
mov
imul
pop
and
ds
cmp
sub
xchg
and
and
add
loop
fisttp
movs
pop
movs
push
add
icebp
ret
cwde
in
lods
test
xchg
xchg
push
ret
setno
xchg
or
movs
dec
aas
mov
mov
icebp
into
sub
gs
pop
es
sahf
test
js
or
movs
outs
arpl
into
and
lds
fnstenv
jmp
cmp
in
es
out
jnp
dec
addr16
and
stos
cld
imul
cdq
push
test
or
fstp
pop
movs
or
mov
idiv
sbb
pop
lahf
mov
daa
je
popa
imul
fxch
xchg
div
mov
lds
fidiv
div
(bad)
lea
or
add
jle
adc
js
out
cwde
fiadd
add
fwait
xor
push
jecxz
cmps
enter
mov
sbb
lds
xlat
out
outs
loop
sbb
js
and
pop
pop
add
mov
push
dec
out
and
std
arpl
cmps
xchg
cmovns
in
push
dec
mov
sub
mov
add
movs
cmp
loopne
jle
sbb
stos
pop
jle
sbb
ficomp
stos
je
jns
and
movs
hlt
cdq
add
add
(bad)
pop
loop
outs
lea
add
call
pop
pop
mov
(bad)
dec
mov
imul
jmp
pop
pop
movs
sub
jbe
call
jle
dec
test
daa
ror
les
scas
mul
jns
xchg
inc
clc
les
cmp
test
sub
sbb
xchg
jmp
fs
sar
pop
aam
cmp
aam
pop
push
stos
jp
ffree
stos
popa
xchg
dec
push
mov
es
test
pop
fst
in
mov
std
sbb
jge
mov
push
(bad)
aas
stc
add
sar
in
pusha
sub
das
sub
adc
pushf
push
daa
cmp
xchg
sti
or
xchg
loope
fisttp
out
ds
xchg
popa
bswap
not
stc
call
aas
adc
ret
and
push
lods
test
mov
dec
inc
xchg
inc
adc
fs
or
cmp
cld
jp
cdq
pop
daa
pop
mov
jl
stos
aaa
aaa
call
rcr
jno
sbb
sti
test
in
jne
mov
lahf
or
fidivr
mov
repz
cmp
pop
mov
and
ret
inc
sbb
mov
sbb
cmp
inc
adc
sub
jl
enter
cld
daa
and
mov
jne
push
js
jge
push
dec
dec
ins
inc
fwait
out
movs
or
pop
popf
int
aam
pop
enter
arpl
lock
push
sub
mov
or
test
std
sbb
pop
ja
out
mov
push
and
movs
and
retf
sbb
int
and
dec
jb
les
ret
test
inc
cmp
xchg
sbb
je
cmp
push
stos
mov
scas
xchg
(bad)
jle
test
cmp
sbb
xchg
mov
cmp
pop
mov
xchg
xlat
lds
sub
clc
ins
(bad)
fld
inc
cld
push
mov
pusha
xchg
int
out
imul
stos
or
inc
mov
pusha
std
js
sbb
jecxz
les
pushf
mov
icebp
xchg
pop
mov
nop
sub
push
jns
inc
(bad)
adc
jg
cmc
pop
push
imul
loopne
test
ja
ss
xor
mov
sbb
adc
xor
rol
push
and
xlat
int3
cmp
hlt
lods
or
dec
sub
stos
mov
test
inc
shr
mov
enter
add
test
mov
push
jno
aaa
jg
xchg
xchg
ret
pusha
(bad)
jmp
loop
or
xchg
dec
dec
mov
mov
and
in
xchg
shr
xor
stc
add
add
popa
repz
dec
mov
add
cmp
pop
ja
cld
jb
sbb
fiadd
pop
adc
mov
fcomp
popa
(bad)
test
call
cmp
fs
push
(bad)
pop
aaa
cmp
lea
js
stos
mov
fwait
stc
daa
and
jecxz
cmp
sbb
sub
cmps
dec
or
pushf
jnp
fs
test
and
xor
inc
jno
rol
sbb
lods
xor
sbb
les
mov
loopne
int
popa
xchg
pusha
push
pusha
in
movs
loop
xor
dec
enter
and
adc
sahf
jne
mov
jmp
(bad)
dec
ud2
(bad)
xchg
cmp
pusha
dec
std
popf
in
out
mov
adc
in
sbb
sub
daa
adc
push
jns
les
mov
nop
adc
xor
movs
jp
jmp
lods
call
fist
in
lea
pop
sbb
mov
pop
mov
pusha
pop
loope
call
dec
es
aaa
sub
mov
fiadd
test
xchg
ins
xor
imul
out
ins
imul
outs
xor
inc
push
pop
mov
mov
test
clc
push
dec
test
pop
cli
imul
sbb
(bad)
mov
pop
lea
sbb
out
lods
add
fbstp
xchg
cs
shl
lahf
dec
popf
call
pop
push
shl
and
into
mov
xor
imul
setbe
dec
inc
ins
std
addr16
jb
arpl
(bad)
xor
or
idiv
fsub
data16
ds
cmp
call
inc
jb
cli
or
adc
out
fisubr
jmp
cli
fadd
shl
fcomi
add
mov
xor
cmp
cmps
popa
in
fnstenv
pmulhuw
push
xor
loop
popf
cli
fwait
out
nop
leave
pop
xor
cmp
scas
ret
ss
pop
jne
pop
int3
add
imul
je
xchg
scas
test
adc
or
retf
sti
jecxz
mov
mov
fisttp
inc
call
mov
mov
sub
push
mov
sbb
into
cmps
fneni(8087
jne
inc
test
xchg
mov
ss
jge
ret
addr16
int3
sbb
shr
in
loop
xor
fsub
fbld
push
xor
dec
or
jmp
and
add
stc
xchg
jmp
test
loope
adc
pop
pop
imul
js
jb
inc
push
sbb
add
xor
loope
pop
leave
push
cdq
inc
xor
cmp
mov
jg
xchg
cmp
mov
rcl
pop
mov
xor
fcmove
jbe
(bad)
cdq
adc
add
(bad)
fcom
stc
pop
xor
rcl
loop
xchg
mov
add
inc
and
repnz
call
jl
out
push
xor
inc
pop
fnstenv
pop
imul
xchg
mov
xchg
xor
xchg
sbb
push
int
cmp
retf
adc
mov
inc
fwait
push
jecxz
sub
fidiv
out
push
push
and
and
jno
lods
xor
sbb
add
inc
mov
push
jbe
shl
int3
ins
dec
leave
mov
scas
mov
mov
xlat
pop
pop
xchg
ret
and
pop
sbb
hlt
(bad)
mov
add
fneni(8087
loope
repz
dec
push
push
push
xchg
sbb
mov
(bad)
in
adc
fwait
dec
dec
popf
movs
jnp
mov
add
mov
add
jns
popf
cmps
push
dec
add
retf
mov
enter
retf
test
pusha
ja
pop
or
xor
retf
test
ins
nop
fdiv
cld
loopne
mov
mov
mov
fist
xor
mov
pushf
in
jecxz
test
lahf
jle
cmps
lods
rcr
fsub
mov
and
cli
(bad)
lods
pop
cmps
sub
repz
dec
data16
push
lods
xchg
ror
dec
(bad)
xchg
push
or
xchg
(bad)
or
adc
mov
outs
adc
inc
pop
test
jmp
in
cwde
lods
js
loop
(bad)
jle
xchg
repz
aas
cmc
clc
out
popa
shl
or
test
pop
outs
clc
jl
jb
dec
retf
out
imul
xchg
push
pop
test
addr16
in
jmp
int3
and
adc
inc
leave
cdq
mov
sub
sbb
mov
pop
or
jg
jge
inc
in
fnstcw
rcr
push
jge
adc
inc
out
dec
test
xor
ret
fst
pop
mov
jb
cli
outs
cmp
int
repnz
cmp
sub
and
jge
daa
push
cwde
test
mov
lds
enter
popa
sbb
shl
sahf
mov
cmps
(bad)
not
stos
int3
dec
add
pushf
adc
icebp
mov
mov
movs
and
pop
mov
xchg
lods
xor
cmp
adc
shl
and
(bad)
mov
ds
xor
dec
(bad)
das
fld
test
inc
out
xchg
xchg
or
loopne
or
adc
pop
addr16
sbb
xchg
(bad)
loope
inc
and
mov
in
neg
mov
xchg
rcr
sub
dec
push
test
mov
xchg
cs
jnp
dec
mov
sub
inc
test
mov
or
xor
mov
mov
cmp
rcl
fwait
call
dec
sbb
call
daa
add
int
sbb
clc
push
call
mov
jae
xor
loop
in
jg
jmpw
cwde
or
or
xchg
mov
mov
xor
ds
pushf
loop
or
clc
jnp
or
mov
and
(bad)
add
out
test
jecxz
enter
pop
retf
sub
gs
dec
pop
mov
aas
mov
mov
iret
jge
mov
inc
mov
xor
or
dec
xchg
loope
pop
cmp
jb
popf
sbb
outs
adc
mov
into
sub
(bad)
repnz
dec
mov
add
pop
lea
jmp
outs
mov
(bad)
aad
adc
add
mov
adc
mov
jp
mov
test
stc
out
or
mov
sbb
adc
mov
lea
push
sbb
(bad)
push
mov
hlt
stc
shl
xor
mov
pop
mov
test
push
lods
sar
stos
jmp
ins
or
push
dec
stos
sbb
stos
ja
add
push
(bad)
jbe
and
dec
cmps
adc
pop
jg
or
cmp
call
fistp
add
enter
pop
sub
adc
and
(bad)
pop
dec
in
add
repz
test
inc
call
inc
cwde
mov
jae
jl
fdiv
xlat
fidivr
movs
adc
arpl
sti
(bad)
rol
mov
jg
or
cld
xchg
mov
jbe
xor
int
push
out
scas
cmp
out
(bad)
fst
xchg
retf
push
fdivr
ret
repz
rcl
cmp
dec
jecxz
push
dec
fwait
cmp
icebp
xchg
mov
cmp
loopne
push
adc
adc
ins
aad
(bad)
fimul
sub
cmp
in
jo
push
(bad)
mov
xor
adc
repnz
or
sar
ins
push
xor
cmp
(bad)
push
adc
xchg
xor
clc
inc
dec
push
daa
fisttp
mov
push
test
lea
lea
ret
lds
psubsb
loopne
xchg
fwait
das
imul
mov
inc
in
int3
fcmovne
push
neg
das
ret
movs
sbb
movs
shl
les
sub
sub
ss
nop
shr
es
mov
mov
in
mov
(bad)
stc
jmp
into
xchg
jns
mov
pushf
sbb
fidiv
push
int3
inc
mov
sub
cmp
jmp
xchg
sbb
push
adc
xor
imul
les
ret
pop
dec
cmp
in
test
fiadd
inc
movs
push
pop
cdq
pop
call
aad
mov
cld
xchg
xor
sahf
iret
xchg
xor
xchg
mov
dec
mov
jg
in
pop
retf
xchg
and
std
test
adc
cwde
push
test
aaa
arpl
sbb
jbe
push
mov
into
jae
sahf
scas
repnz
into
cmps
and
push
lock
(bad)
xor
mov
je
sub
pop
shl
das
and
dec
loop
sub
call
push
cs
mov
scas
fist
out
icebp
ret
xchg
int
sbb
out
mov
mov
xchg
(bad)
jnp
jecxz
imul
mov
call
push
ins
stc
das
int3
imul
sub
mov
in
mov
je
fbstp
rcr
jge
retf
or
in
mov
mov
xchg
cmp
mov
jecxz
mov
xor
push
add
icebp
les
sahf
stc
imul
xor
aaa
stc
repnz
imul
fdiv
xchg
and
stos
(bad)
jnp
jno
adc
mov
lock
out
in
ficom
push
(bad)
dec
out
call
mov
push
ret
mov
loopne
adc
sub
jmp
mov
nop
sbb
nop
(bad)
loopne
in
js
jecxz
sub
std
and
pop
push
or
movs
mov
aad
adc
popa
div
inc
es
push
sti
xor
cmp
aad
in
imul
out
mov
test
jecxz
jne
and
xor
mov
adc
mov
mov
pop
dec
(bad)
lock
arpl
xor
rol
daa
retf
push
adc
sub
mov
dec
addr16
or
scas
pusha
mov
pop
ins
mov
dec
pop
adc
(bad)
xor
push
sbb
cmp
mov
and
fld
push
adc
dec
fwait
sbb
xchg
mov
(bad)
mov
sti
sbb
add
sar
repz
fwait
and
pop
int
pop
xchg
adc
sub
(bad)
jmp
sub
pop
int
iret
cmps
and
popf
in
imul
stos
sbb
mov
sub
add
cmps
retf
iret
xor
mov
or
ret
outs
in
fisubr
cmc
imul
(bad)
rcl
sar
ror
lahf
(bad)
sar
add
aam
mov
enter
enter
dec
sahf
movs
repnz
pop
or
jbe
push
in
add
push
or
or
xlat
xor
pop
in
(bad)
mov
mov
fistp
std
int3
mov
sbb
push
pusha
ror
sbb
and
ss
jo
icebp
add
or
imul
pop
(bad)
idiv
aam
mov
sbb
shl
cwde
pop
mov
scas
std
and
or
mov
into
mov
gs
pop
add
popa
test
cmp
mov
jne
mov
ins
pop
sub
add
arpl
nop
out
add
cbw
jns
xor
mov
cs
mov
and
mov
aam
push
or
scas
sub
and
lock
cmp
mov
jmp
push
jmp
jge
movs
out
shl
pop
ret
lea
push
jne
mov
jle
pusha
mov
rcr
mov
dec
das
outs
sub
mov
call
inc
sbb
push
xchg
add
fld
xor
lock
xchg
ins
cmp
mov
test
(bad)
(bad)
and
div
dec
pop
or
movs
and
stos
out
(bad)
(bad)
ffreep
cmp
mov
(bad)
stc
xchg
sti
xor
or
dec
mov
push
push
call
push
retf
in
retf
sub
and
les
test
test
adc
cmp
je
nop
fcom
cdq
mov
sbb
pop
stos
aaa
jbe
mov
mov
imul
pop
sar
lods
dec
push
imul
push
test
hlt
jg
fistp
sbb
add
dec
inc
pop
dec
ret
inc
and
test
aam
cmp
mov
in
xchg
lahf
jmp
add
nop
dec
je
push
popa
mov
imul
xchg
enter
xchg
jbe
jg
cmps
and
retf
mov
jg
outs
retf
fnstcw
xchg
dec
stc
dec
mov
popa
mov
inc
aas
cmps
xor
rol
fstp
cld
shl
in
aas
outs
mov
dec
stos
scas
push
jbe
adc
(bad)
out
pop
add
add
jmp
add
pop
lods
xchg
mov
mov
das
mov
ret
clc
dec
clc
cmps
jnp
jmp
sbb
adc
pusha
or
pop
lods
inc
dec
shl
sub
adc
adc
mov
sub
outs
adc
ins
jmp
popa
add
adc
js
or
jge
fadd
dec
push
pop
push
cdq
xor
arpl
dec
sar
jno
mov
aaa
outs
and
imul
sub
pop
movs
outs
jge
push
xchg
es
sbb
add
sbb
(bad)
(bad)
pop
pop
aad
dec
jge
mov
or
jne
rcr
call
pop
cdq
sub
cwde
or
add
lahf
(bad)
adc
or
mov
test
dec
(bad)
or
sahf
adc
imul
outs
jae
mov
xor
arpl
cmp
sub
inc
sbb
jne
mov
mov
add
mov
dec
adc
pushf
inc
popf
ret
scas
and
jbe
mov
fimul
mov
mov
les
mov
xchg
push
cld
or
xor
aas
pop
push
cmps
jmp
loop
loopne
ret
shl
adc
ds
xchg
stos
sbb
shr
adc
out
addr16
mov
(bad)
sub
mov
cmp
dec
add
sub
cdq
dec
sbb
pop
ins
aaa
cmp
rol
das
sbb
test
lea
nop
call
cmp
dec
fisttp
jmp
sbb
pop
daa
fs
dec
mov
ss
aaa
inc
lods
sbb
cmp
in
adc
dec
dec
daa
jo
mov
mov
jmp
or
data16
push
mov
stos
repz
or
mov
sbb
jge
int3
cmp
push
mov
loope
fld1
jecxz
or
mov
mov
mov
adc
mov
lock
in
push
mov
add
mov
push
sub
jg
dec
fdivr
mov
fcmove
dec
and
and
hlt
cli
adc
aad
adc
ins
or
sbb
daa
mov
inc
(bad)
fsubr
stos
sbb
lahf
aad
mov
rcl
dec
movs
outs
cs
loop
adc
jae
jmp
mov
neg
adc
pop
xor
call
(bad)
jbe
sub
and
ins
jmp
fwait
inc
xchg
cmp
jno
movs
sbb
enter
mul
lods
mov
jne
mov
pop
add
mov
push
xlat
pop
and
sti
imul
shl
mov
dec
repz
pusha
jae
ins
(bad)
invd
adc
and
xchg
add
jge
call
dec
sub
cmps
je
pop
pop
mov
mov
jne
nop
in
js
mov
cmp
stos
mov
sbb
fdiv
jb
lods
push
fimul
out
jnp
(bad)
lods
xchg
les
pop
ror
dec
xchg
cwde
(bad)
inc
pop
outs
or
cmp
neg
mov
push
mov
cwde
(bad)
retf
pushf
icebp
int
pop
mov
dec
dec
cmps
dec
inc
int3
pandn
imul
xchg
add
popa
out
enter
bound
sub
aam
sub
test
add
pop
rol
mov
jmp
(bad)
(bad)
inc
jb
ror
inc
dec
inc
cwde
pushf
int
test
arpl
test
and
lods
int
adc
ror
in
lods
push
dec
mov
dec
retf
jecxz
fnstenv
mov
pop
retf
or
fxch
je
mov
xor
push
inc
clc
outs
div
ret
push
mov
mov
aaa
add
mov
mov
xchg
jo
dec
inc
(bad)
sub
addr16
inc
jo
push
out
fwait
pusha
xor
frstor
dec
dec
stos
add
rcl
xchg
jns
hlt
mov
call
hlt
fisubr
xor
out
push
and
dec
add
mov
dec
test
sub
imul
pusha
xchg
pop
inc
repnz
sti
(bad)
or
jle
stc
call
sub
adc
idiv
test
ins
shl
cmp
mov
repz
in
mov
dec
std
rcr
mov
outs
sti
push
push
pop
mov
pushf
mov
iret
sar
or
xor
and
xor
or
idiv
mov
loopne
sub
jge
adc
call
or
mov
xchg
adc
(bad)
cmp
dec
retf
popaw
mov
hlt
ins
cmps
sub
cmps
xlat
ret
lods
ret
or
retf
icebp
sar
push
ret
jl
add
sub
shr
cmp
retf
hlt
fild
retf
or
sub
sub
cld
rcl
fldenv
pop
inc
pop
popf
ins
cmp
mov
pushf
and
data16
mov
jp
jbe
xor
or
xchg
out
std
jmp
add
sub
cld
cdq
dec
iret
sub
jle
push
adc
xchg
int3
dec
dec
or
ins
out
push
fsubr
mov
mov
or
lods
push
pop
mov
shl
add
sbb
jg
dec
push
push
(bad)
jl
inc
and
arpl
aad
sub
xor
sti
cmp
xor
mov
outs
retf
mov
push
out
pusha
cmps
rcr
pushf
sub
add
dec
pop
iret
test
cmps
inc
cmc
ret
xchg
mov
sub
sar
mov
hlt
mov
fdivp
mov
stos
in
call
les
or
xor
aas
xchg
shr
dec
add
icebp
mov
ins
dec
int3
inc
in
shl
mov
jl
add
or
fwait
or
nop
cmp
cmp
push
(bad)
fldenv
out
pop
mov
mov
std
push
test
jnp
aas
xchg
cmps
test
dec
(bad)
push
push
test
xlat
jge
xchg
(bad)
(bad)
and
sub
pop
fdiv
ins
icebp
sbb
mov
out
je
out
mov
adc
ins
add
xlat
es
push
and
jecxz
in
cmp
ins
mov
je
fwait
das
mov
cmps
xchg
clc
(bad)
jns
fisttp
cmps
mov
outs
xchg
ror
mov
repz
aam
sbb
xor
and
dec
jb
out
xor
imul
cdq
or
jl
adc
je
cmp
cmc
mov
std
push
inc
jl
inc
mov
loopne
sti
sbb
inc
call
adc
fidiv
xchg
mov
xchg
out
or
dec
je
outs
and
ds
(bad)
outs
retf
lock
xor
pause
push
pop
cmp
push
in
shr
mov
xchg
inc
rcl
call
fadd
clc
or
mov
xchg
dec
lahf
mov
cmp
call
ffree
dec
mov
push
call
push
out
in
sar
mov
aam
dec
icebp
(bad)
jg
xchg
add
pop
xchg
and
in
mov
jbe
lea
movs
sub
das
fild
cmp
(bad)
inc
fcomi
mov
aas
jae
mov
cdq
cdq
dec
adc
repz
xor
pop
jns
pop
jne
rol
lahf
hlt
and
out
fst
cdq
pop
into
and
mov
jmp
adc
cmc
ins
sbb
lods
pushw
sub
scas
pop
push
arpl
push
je
jns
push
shl
imul
pop
stos
inc
stos
push
scas
sub
loope
and
push
sub
mov
mov
xchg
sub
cmp
addr16
sub
mov
mov
cld
fidiv
repz
addr16
xor
aam
fbld
jnp
ss
imul
sahf
xchg
add
std
or
mov
je
mov
lods
cmp
inc
stc
push
call
sbb
fistp
dec
pop
mov
add
inc
fild
cmc
das
push
scas
adc
pop
inc
scas
and
imul
push
mov
into
xor
lods
sub
test
cmp
xchg
cli
add
lods
and
mov
jo
fadd
jmp
jge
add
cmps
push
dec
push
mov
movs
fucompp
ja
ret
xchg
enter
mov
maxps
dec
dec
stos
sub
mov
(bad)
sub
mov
jge
test
xor
xchg
push
neg
ss
addr16
test
sub
adc
mov
mov
mov
dec
ds
mov
int3
int
out
and
push
cld
js
jne
dec
test
popa
shl
pop
dec
mov
jno
mov
xchg
or
dec
mov
popf
fcomp
fstp
add
mov
xchg
into
and
cwde
lea
(bad)
loope
mov
loopne
xchg
nop
cdq
jmp
sbb
sub
sub
jo
sub
jl
(bad)
fisubr
pop
lahf
cmp
push
xchg
or
mov
xor
push
mov
xor
scas
adc
sub
iret
test
outs
adc
cmp
cs
mov
sar
jl
inc
sub
jbe
cmp
cmp
mov
cmp
mov
push
rol
leave
hlt
mov
adc
shl
fwait
mov
pop
frstpm(287
or
mov
mov
inc
shl
sub
sar
movs
or
and
push
test
push
movs
pop
pusha
or
jecxz
xor
push
leave
loopne
(bad)
addr16
gs
dec
xor
and
or
sub
mov
ret
fadd
outs
fnstenv
or
add
icebp
sub
or
sub
hlt
cmps
pop
retf
or
add
ror
out
mov
add
pushf
stc
push
es
adc
and
adc
add
jo
retf
fild
imul
mov
push
out
call
les
movs
ds
out
jbe
cmp
arpl
pop
nop
sbb
pop
xor
mov
js
dec
mov
es
js
loope
xchg
ins
ins
rcr
retf
mov
sub
out
test
mov
ficom
movs
hlt
call
std
dec
fwait
sar
xchg
pop
pop
(bad)
jae
xor
or
mov
call
xor
(bad)
(bad)
mov
repz
adc
gs
dec
cdq
mov
(bad)
hlt
mov
pop
cmc
mov
cmp
jg
sbb
bound
add
xlat
aaa
pop
rcr
ficom
fwait
lahf
adc
dec
outs
lock
xchg
pop
out
shl
hlt
push
fsubr
sub
popf
loopne
or
pop
xchg
iret
mov
fld
ins
push
fiadd
jne
inc
scas
aas
ds
ins
push
and
inc
cwde
in
mov
mov
adc
(bad)
outs
rcl
sub
pop
sbb
mov
jg
dec
stos
in
fldenv
add
shr
xlat
out
lea
mov
mov
lahf
mov
xchg
pop
stos
sub
mov
movs
push
jmp
sub
adc
enter
dec
and
inc
enter
sub
cs
mov
push
pop
pusha
fcom
sahf
aad
cli
dec
stos
test
outs
jo
dec
pop
or
dec
mov
imul
mov
push
mov
inc
mov
jno
inc
mov
xchg
dec
pop
out
fcmovnb
mov
ret
mov
push
mov
fstp
xchg
mov
mov
fcomp
and
xchg
xor
js
test
pop
cld
mov
cli
and
mov
jbe
clc
sub
loop
retf
sub
fbld
pop
xchg
test
fnsetpm(287
xchg
xchg
aad
or
sar
xor
div
xor
das
inc
sbb
pop
dec
jmp
cmp
mov
mov
xor
gs
movs
sub
cmp
call
xor
sar
std
ret
jne
fwait
test
iret
ja
inc
(bad)
jle
mov
jmp
adc
or
inc
(bad)
in
(bad)
(bad)
mov
cmp
aam
test
or
iret
sub
scas
mov
inc
mov
popa
jns
movs
lods
(bad)
(bad)
adc
cmc
leave
in
cmp
jp
fld
imul
bound
sbb
cmp
sub
cmp
into
icebp
push
adc
std
pop
daa
test
pop
pop
mov
mov
add
and
ucomiss
js
fs
mov
push
cld
xchg
add
data16
(bad)
in
(bad)
imul
in
in
adc
push
test
sub
mov
cmp
test
mov
push
stos
xchg
inc
(bad)
hlt
out
add
ins
mov
jle
addr16
adc
xor
mov
aam
scas
sti
mov
popa
js
lods
xchg
mov
adc
or
and
fiadd
add
cmovno
icebp
push
mov
cmp
test
and
cli
repz
push
mov
adc
cmps
push
int3
jp
mov
adc
push
in
dec
lods
mov
xchg
add
xor
rcl
sahf
pop
jmp
push
mov
fidiv
xor
jle
and
ret
das
stc
or
(bad)
repnz
outs
cli
bts
nop
xchg
ja
lock
jb
icebp
stos
xor
call
jns
xchg
(bad)
cld
cmp
lock
push
or
sbb
fld
js
jmp
push
rol
sub
mov
dec
xchg
sar
jle
aas
(bad)
dec
shl
mov
rol
pop
(bad)
cld
mov
scas
ret
movs
xor
sti
test
push
sar
inc
out
xchg
(bad)
or
or
or
mov
cmp
add
inc
cmp
imul
loopne
popf
adc
in
call
neg
pop
fisubr
sub
and
and
out
mov
sub
(bad)
adc
sbb
daa
xchg
push
call
mov
mov
sbb
mov
shr
jnp
frstor
or
lock
and
push
aaa
mov
add
hlt
je
adc
mov
ficom
inc
es
xchg
js
pop
repz
das
repz
push
or
xor
mov
dec
cmp
das
das
or
xor
or
sti
mov
pusha
push
pop
(bad)
fisub
cld
sbb
mov
cmp
or
add
pop
mov
(bad)
jno
push
icebp
js
jmp
test
(bad)
pop
mov
mov
mov
xor
into
(bad)
inc
int
jmp
push
cs
mov
and
js
sahf
sub
stos
sbb
adc
ss
adc
cld
xchg
sub
hlt
ret
mov
cmp
mov
push
mov
and
enter
stc
jne
pop
ins
lods
pop
xlat
mov
cmp
cs
xchg
ja
xor
jbe
sti
sbb
jnp
mov
aaa
sbb
fldcw
iret
in
cmp
and
mov
rcl
or
inc
jecxz
cmp
call
push
jno
or
pop
mov
pop
fs
sahf
sub
mov
dec
cvtps2pi
test
hlt
enter
sbb
inc
in
inc
mov
fiadd
ret
nop
(bad)
cmc
fadd
cs
dec
jle
or
sub
mov
jge
sahf
mov
pusha
push
sbb
lods
(bad)
ins
or
lods
mov
imul
call
mov
add
in
xchg
lock
sbb
xchg
xchg
and
scas
push
scas
push
jno
push
mov
leave
nop
cmps
adc
push
adc
cmps
ret
mov
jae
or
jmp
cmp
jmp
cmp
jmp
add
scas
adc
mov
cmc
adc
inc
pop
push
add
pop
sbb
and
int3
call
mov
fisub
xchg
adc
lods
mov
clc
fldcw
mov
imul
push
fldenv
ds
sub
mov
cmps
movs
sbb
popaw
test
fld
jo
ret
pop
retf
leave
add
xchg
repnz
xchg
sbb
push
jb
in
call
aas
retf
mov
ret
inc
cmp
jno
stos
stc
dec
out
and
sbb
cmps
mov
push
or
mov
lods
fbld
call
dec
sbb
mov
iret
jp
or
shr
test
imul
bswap
fcom
add
mov
xor
xchg
shl
pop
int3
test
shr
into
sar
adc
dec
popa
cmps
repnz
push
inc
pusha
loopne
(bad)
scas
pusha
and
mov
ins
mov
or
retf
(bad)
enter
add
out
cli
out
push
push
fidivr
mov
inc
in
and
mov
rol
push
pop
mov
call
int3
xor
mov
pop
jmp
es
(bad)
loopne
mov
stc
push
inc
mov
mov
xlat
inc
dec
jbe
(bad)
repz
push
loop
xchg
pop
sar
adc
retf
inc
jae
rol
into
cmps
fiadd
jne
pop
jl
rol
sahf
jmp
jl
lods
push
int3
pop
cmp
push
lahf
enter
adc
iret
pop
ins
sub
je
in
push
push
pop
mov
ret
imul
pop
cmps
mov
mov
pop
aam
pop
imul
rep
call
xchg
push
mov
call
loope
jns
call
cmps
dec
retf
(bad)
popa
push
mov
enter
push
xchg
pusha
and
push
and
cld
cdq
nop
mov
aas
out
je
jb
push
and
push
xchg
push
cmps
push
or
and
out
out
rcr
jmp
int3
sahf
xchg
scas
and
push
mov
xchg
movs
adc
push
and
fidiv
call
jbe
pushf
dec
sub
cmp
ja
add
in
dec
sbb
inc
lock
cli
out
xlat
(bad)
mov
ret
loope
xor
daa
in
leavew
mov
outs
push
data16
xor
fcom
jne
and
fadd
nop
mul
push
jno
xchg
movs
sub
into
out
fdivp
es
jne
mov
(bad)
scas
shr
lods
sbb
mul
repnz
aas
in
fisub
xchg
cmp
nop
jge
mov
js
jp
clts
jo
jge
and
jne
add
fadd
in
xor
repz
movs
add
fldenv
mov
inc
leave
mov
cwde
(bad)
push
cs
rdmsr
movs
sub
test
add
cmp
add
sbb
push
jnp
dec
sbb
and
rcr
(bad)
or
clc
adc
mov
(bad)
sub
jae
xor
je
xchg
out
rcl
data16
fsubr
jp
and
mov
sbb
xchg
inc
lods
mov
(bad)
xor
mov
in
push
push
addr16
shl
test
(bad)
jno
add
pop
xchg
out
test
in
popa
mov
shl
jge
dec
push
add
(bad)
and
xchg
fild
std
hlt
bound
inc
add
imul
dec
xor
ret
push
imul
push
inc
jl
push
js
add
out
jecxz
add
sbb
loop
push
dec
adc
hlt
mov
jg
test
sbb
adc
ret
mov
xchg
pop
movs
movs
sub
cdq
xlat
and
cs
test
retf
add
or
sbb
mov
inc
(bad)
xchg
jnp
test
sahf
out
push
xchg
call
inc
cdq
push
in
xor
ss
pop
ss
xchg
or
push
sbb
fbld
ret
dec
mov
shl
xor
sub
xor
test
stos
adc
push
or
mov
mov
mov
add
push
jmp
cmp
sbb
push
clc
dec
aaa
not
ja
jp
sub
js
mov
movs
adc
scas
dec
call
mov
xchg
iret
test
xor
pop
repnz
fsubrp
sbb
in
jmp
idiv
outs
imul
nop
mov
jo
(bad)
or
movs
out
xchg
rcl
mov
les
sbb
hlt
mov
dec
dec
mov
ret
push
leave
mov
call
push
push
outs
jg
and
adc
and
ret
into
adc
lahf
mov
mov
jle
jmp
aam
jecxz
lods
leave
push
movs
fs
cmps
xchg
push
std
xchg
or
dec
pop
xor
and
es
nop
sahf
int3
push
xor
and
daa
shl
js
xor
call
jb
adc
mov
popf
xlat
mov
dec
out
scas
arpl
call
inc
out
ret
aaa
clc
mov
jb
sbb
jp
mov
mov
into
pop
add
loope
mov
or
rcl
scas
sub
vucomisd
mov
pop
mov
idiv
cmp
(bad)
hlt
jecxz
popf
aam
sbb
imul
dec
in
dec
nop
leave
fwait
(bad)
jl
add
sbb
pop
nop
lods
add
std
mov
leave
ds
ret
popa
cmp
pop
aaa
shr
fistp
stc
in
push
pop
sbb
adc
pop
cmovo
cmc
aad
mov
aad
push
loope
dec
add
or
mov
dec
xorps
sbb
push
pop
inc
and
repnz
test
inc
enter
or
inc
mov
lods
sar
scas
dec
mov
bound
inc
shl
or
push
cs
push
gs
fild
(bad)
and
cmps
sbb
adc
dec
in
mov
cmc
jmp
in
not
outs
sub
rcr
pop
popa
in
cmp
mov
fcomp
mov
mov
mov
xchg
sub
fild
sti
adc
sub
sbb
idiv
stos
out
jl
xchg
mov
sub
lds
push
shl
fs
iret
shl
loopne
pop
repz
(bad)
cmc
xchg
inc
or
pop
jmp
and
aam
mov
outs
mov
scas
fsubr
cmovae
fwait
sbb
cmps
loopne
mov
add
jae
scas
push
and
or
cmp
mov
push
dec
adc
loop
fwait
dec
cld
mov
and
jmp
mov
ins
jle
xchg
stos
add
jecxz
hlt
ja
dec
or
sub
and
xchg
lods
cmp
jbe
push
mov
push
daa
cmps
mov
xlat
cli
mov
ss
push
lds
xor
cdq
imul
pop
(bad)
inc
popf
repnz
and
dec
add
shl
imul
jl
and
sbb
jmp
pop
jmp
scas
int
fwait
pop
mov
js
and
addr16
mov
stos
ins
push
lea
cmp
push
stos
or
sbb
cmc
jno
int3
inc
ja
mov
sbb
cli
into
scas
ret
jge
mov
loopne
fst
lods
jmp
cmp
aaa
outs
imul
push
scas
add
xchg
push
scas
mov
jmp
pop
mov
inc
aad
inc
cmp
movs
dec
cld
cmp
mov
push
pop
push
mov
js
(bad)
stc
cmp
jecxz
fisubr
bound
ss
outs
in
adc
lea
out
cmc
adc
in
cmp
(bad)
out
adc
cdq
ja
mov
jae
movs
add
retf
cmp
(bad)
mov
pop
daa
repnz
lods
call
pushf
adc
mov
mov
xor
jmp
jno
push
or
jl
mov
cmp
cs
inc
jg
push
or
loope
jmp
push
xchg
xor
add
mov
add
and
std
adc
push
hlt
inc
ss
xchg
xchg
cmp
in
rcr
or
push
or
xchg
invd
push
sar
call
inc
movs
inc
mov
xchg
ins
push
add
in
push
call
retf
pop
stc
mov
stos
in
dec
sub
cmp
(bad)
rol
cmps
int
out
cli
mov
(bad)
js
cdq
es
xchg
out
pop
mov
push
scas
and
cmps
cmp
push
into
jo
push
(bad)
shl
int
xor
inc
jle
pop
mov
jecxz
sub
push
rcr
cmp
sub
(bad)
fild
hlt
rcl
cdq
mov
push
xchg
mov
jne
pop
cmc
mov
pushf
jns
jmp
int3
xor
inc
mov
jl
push
add
sbb
or
(bad)
mul
in
jmp
test
mov
sbb
mov
push
repnz
mov
pop
push
xor
mov
loopne
pusha
cmp
push
fst
or
xlat
adc
jns
or
fst
retf
xor
bsr
push
lods
bound
ins
in
(bad)
repz
cmp
loop
mov
mov
xchg
nop
inc
mov
cmp
pop
mov
sub
xor
popf
iret
push
jg
(bad)
je
and
pop
jbe
cmps
arpl
aaa
sub
jl
xor
ret
aas
sub
bound
mov
aas
cmp
sub
lods
sub
ret
push
ss
test
sbb
push
jle
pop
jb
sbb
jecxz
call
dec
std
addr16
and
loop
das
sub
fnstenv
fnstsw
scas
cmp
iret
jbe
inc
cmp
in
cld
xchg
push
sub
pop
jg
ret
loopne
sub
xchg
(bad)
aam
scas
cmp
test
adc
cmp
adc
stos
in
push
xor
push
cmp
nop
xchg
xor
ret
ins
sbb
out
add
or
cmc
xor
push
mul
pop
clc
lea
adc
pop
arpl
xor
add
mov
aad
fwait
pop
mov
into
fst
out
pop
xor
stos
fmul
mov
mov
cmps
sar
inc
xchg
mov
call
je
jno
or
xlat
fadd
push
fcmovu
add
mov
pop
retf
xor
hlt
push
sbb
cmp
jbe
add
inc
movs
dec
add
cmp
pop
dec
mov
mov
adc
sbb
sbb
xlat
aaa
push
push
jge
out
cmp
jbe
popa
sub
jo
lock
mov
fwait
dec
jge
test
es
fmul
ret
mov
leave
fs
(bad)
popf
cmps
and
inc
jb
and
sbb
cli
jnp
(bad)
cmp
sbb
pop
bound
jno
and
ret
retf
xor
jbe
vpaddd
imul
sbb
test
sti
outs
mov
leave
ficom
mov
mov
jl
mov
dec
loope
clc
out
les
pop
xlat
push
int
mov
and
or
adc
popa
mov
loopne
sub
daa
jmp
inc
lods
dec
adc
mov
in
push
xor
pop
adc
retf
cmp
nop
cli
mov
mov
cmps
mov
scas
out
ins
lock
dec
fnstsw
cmp
push
stos
adc
leave
ror
fisttp
jae
scas
or
push
into
xor
les
lock
shl
jnp
popa
sbb
rcr
cdq
ret
fstp
les
adc
gs
movs
imul
mov
pop
leave
xchg
jg
sbb
sub
aam
fidivr
ror
(bad)
cmp
cmc
mov
jnp
lods
mov
inc
push
(bad)
arpl
ja
xchg
call
rcr
inc
sub
add
mov
sar
imul
mov
loop
sbb
jle
daa
add
mov
(bad)
cmp
cmp
mov
or
sbb
div
sub
loopne
je
inc
(bad)
cwde
adc
(bad)
cmp
inc
pop
sub
(bad)
enter
rcl
arpl
sbb
jns
rcl
out
pop
mov
sti
add
xchg
inc
push
mov
int3
aad
jecxz
jnp
in
inc
gs
out
gs
int
js
xor
loop
pop
xchg
jmp
scas
rcr
stos
jmp
mov
pop
hlt
out
hlt
sbb
jp
imul
dec
mov
cli
fild
lea
mov
fadd
or
mov
cmp
jb
push
mov
clc
sbb
dec
ret
fwait
pop
enter
retf
lods
or
retf
mov
pop
mov
cmp
mov
xchg
sti
inc
jp
add
pop
popf
das
and
sub
push
mov
xor
jmp
mov
fwait
adc
add
pop
inc
hlt
shl
inc
out
shl
xchg
cmc
cmp
and
mov
pop
and
xchg
sub
je
xor
mov
pop
pop
test
imul
sti
mov
outs
mov
add
rcr
int3
fs
push
out
and
in
cmp
out
aad
push
mov
adc
cli
jp
nop
cmc
out
ins
xchg
aam
in
xor
xor
out
or
dec
cmp
test
xor
int
adc
sub
jmp
ins
cld
adc
jmp
jns
data16
sbb
stos
sbb
fld
xchg
or
test
pop
sub
call
mul
cmp
lahf
(bad)
aaa
(bad)
sub
cmp
add
movs
sbb
(bad)
sub
mov
mov
jb
fbld
cwde
sub
push
movs
jle
sub
pop
pop
or
jge
sahf
mov
(bad)
cmp
and
cmp
sbb
xor
pop
or
push
push
scas
push
movs
scas
stc
pushf
and
mov
(bad)
mov
push
push
cmp
ins
int3
push
sti
in
mov
xor
sub
inc
or
push
call
cmp
rcr
loop
mov
mov
iret
outs
pop
fcomp
push
add
xor
or
mov
loop
add
sub
es
icebp
inc
bound
dec
adc
imul
loopne
push
les
pop
call
cmp
dec
fistp
cmp
fidivr
movs
cmp
jo
lock
ret
repz
and
cmp
aas
(bad)
and
pushf
mov
cs
xor
and
ret
ins
clc
fwait
out
pushf
jbe
mov
push
out
xchg
aaa
xchg
cmp
and
icebp
xor
mov
call
jbe
push
cmps
inc
daa
lahf
in
adc
jno
add
cmc
js
int3
jg
mov
jmp
xor
sub
or
adc
test
pop
push
xchg
push
xor
add
cmps
jge
stc
ins
mov
not
iret
sti
mov
jb
dec
int
(bad)
addr16
lock
xor
mov
dec
sbb
aaa
ins
mov
popa
fincstp
div
orps
xor
push
es
inc
sub
(bad)
enter
stos
adc
test
pop
mov
test
retf
mov
std
mov
fucomip
fild
sbb
sbb
bound
or
icebp
or
sub
sbb
stc
pop
xlat
nop
sub
dec
outs
adc
sub
dec
xor
aad
aam
jbe
(bad)
push
sub
sbb
adc
mov
pop
or
movs
or
ins
pushf
mov
or
mov
jg
neg
pmaddwd
cs
push
xor
fcom
imul
cli
sbb
es
sbb
push
enter
sbb
fstp
jmp
nop
dec
stc
call
enter
popf
mov
jno
test
test
outs
xor
or
xor
call
lods
leave
movs
pop
mov
int
lahf
jo
lea
jae
cwde
ds
sbb
stos
jmp
cmps
inc
scas
shr
dec
xchg
add
cdq
aaa
push
enter
mov
nop
js
pop
sbb
icebp
jnp
cmps
adc
lods
push
inc
adc
mov
push
jmp
(bad)
jmp
and
pop
mov
ror
imul
dec
hlt
retf
outs
xor
mov
sti
xchg
into
mov
test
cli
and
xor
fnstsw
rcl
icebp
push
pusha
or
push
das
(bad)
fst
pop
ret
adc
xor
and
imul
push
cmp
jmp
sub
fimul
pop
pop
inc
sub
call
pop
aam
ficomp
std
jb
hlt
movs
aaa
push
stos
cmps
(bad)
fdivr
xchg
js
(bad)
lods
mov
(bad)
mov
inc
pusha
mov
aad
leave
push
jmp
ss
pop
fdivr
leave
xchg
inc
jmp
push
sbb
xchg
and
push
rol
inc
jmp
mov
dec
fnsave
push
and
add
stos
das
out
rcr
and
outs
mov
jmp
std
push
jl
xlat
push
pop
iret
push
repnz
mov
into
sub
xor
pop
in
(bad)
int3
sar
mov
inc
ja
retf
mov
into
dec
fdivr
sub
pusha
lods
scas
jae
adc
add
inc
fdivrp
push
repz
outs
loope
mov
cmp
pop
arpl
push
mov
mov
jecxz
push
aad
lods
test
les
aaa
fist
vmovups
mov
pop
jecxz
sub
or
jecxz
mov
cdq
xor
pusha
mov
inc
mov
jbe
dec
pop
call
sub
jnp
push
fdivr
and
pop
(bad)
fwait
push
inc
(bad)
imul
(bad)
int
movs
cld
inc
jl
jb
mov
inc
xchg
inc
div
pop
sahf
jle
ret
pop
jmp
jmp
or
dec
or
add
popa
(bad)
add
jl
aaa
jl
jp
fistp
mov
ror
lock
iret
cmc
cmp
xchg
xchg
or
pop
in
jno
mov
in
sti
jecxz
push
cld
out
retf
push
inc
je
inc
mov
cmp
jbe
cld
sbb
adc
leave
enter
(bad)
retf
out
xor
cmp
dec
pop
or
daa
push
in
mov
or
out
push
push
das
push
leave
mov
inc
mov
fsubr
push
call
add
mov
sbb
pop
mov
add
inc
add
retf
push
inc
push
inc
mov
movs
xchg
or
ins
daa
popa
push
ja
inc
pop
or
xchg
mov
adc
test
ficom
dec
inc
mov
out
mov
xchg
movs
mov
push
xchg
sbb
mov
outs
pop
aaa
fsubr
mov
mov
cmp
dec
aaa
fiadd
cmp
xor
in
scas
in
sbb
call
paddusw
rol
and
sar
sbb
cdq
sahf
sub
shl
jmp
scas
into
sbb
lahf
pop
(bad)
fdiv
dec
in
or
retf
and
push
lods
rcr
adc
push
add
push
lock
xor
inc
or
(bad)
jne
xor
shl
inc
xor
inc
loope
sbb
push
mov
clc
xor
out
mov
mov
mov
sub
fcomp
outs
movs
mov
out
fst
xchg
das
test
or
aas
push
sub
pop
call
es
push
popf
outs
mov
add
jns
test
clc
sub
popf
loopne
enter
cmp
jmp
ja
scas
mov
jmp
cwde
cmp
ret
mov
in
push
add
imul
mov
pop
mov
scas
jae
scas
(bad)
pop
add
cmp
stos
dec
sub
lock
into
fiadd
sar
gs
movs
or
loope
(bad)
xor
mov
fwait
in
push
push
ds
jp
mov
mov
cs
adc
or
push
loop
sbb
test
fisttp
gs
jo
and
xor
adc
scas
mov
ins
rol
push
dec
xchg
cmp
mov
mov
aad
pop
sbb
sahf
jno
jns
sub
les
xchg
call
stos
ret
lds
and
cdq
in
mov
jnp
and
rcl
in
cmp
dec
iret
jg
sbb
repz
inc
stos
imul
or
nop
push
mov
daa
push
lahf
dec
add
push
jmp
add
aaa
lds
mov
push
inc
loope
test
adc
enter
inc
cmp
jne
mov
mov
loopne
mov
ds
test
sbb
jbe
pop
xchg
mov
pop
xor
push
int
lahf
std
jge
pop
mov
sub
push
mov
ins
inc
sub
mov
adc
mov
sahf
movs
retf
mov
int
pop
bound
cmc
cmp
cld
sub
xor
mov
sbb
pop
sbb
jbe
sbb
mov
int
inc
div
lods
movs
cmp
mov
cwde
adc
mov
adc
xlat
hlt
jge
shl
rcl
inc
shr
push
pop
in
(bad)
lds
mov
js
xchg
jns
mov
cmp
retf
jne
pop
jnp
in
mov
cmp
ins
xchg
adc
adc
out
mov
jno
xor
adc
movs
jae
add
jmp
add
push
test
test
stos
push
cmp
add
and
pop
sub
fwait
or
sbb
shl
ret
addr16
pop
xchg
lea
mov
xchg
repz
movs
out
jecxz
dec
rol
pop
ins
daa
out
and
sub
not
push
xchg
(bad)
ins
pop
xchg
jne
push
push
nop
(bad)
repz
sbb
push
sub
or
ret
and
inc
in
(bad)
das
cdq
push
xor
sub
jge
inc
dec
pop
mov
movs
loop
ins
sbb
aas
out
shr
add
xor
daa
adc
ins
and
cdq
jle
jae
dec
jbe
inc
jmp
cmp
shl
xor
loope
test
div
xor
cmp
xchg
mov
loope
loop
in
push
ja
add
pop
dec
mov
lods
cmp
lds
sar
push
jmp
ret
mov
xchg
test
jns
popa
addr16
aas
inc
cmp
push
ret
xor
retf
ficom
dec
add
mov
fs
mov
jns
pop
enter
xor
cld
aas
cmp
mov
bound
lods
mov
out
ficomp
jg
enter
xchg
sar
dec
iret
jp
ds
pop
outs
js
(bad)
push
mov
lods
sub
retf
add
cmp
add
cmp
pusha
adc
sub
add
stos
jmp
retf
je
lea
and
fwait
jno
adc
in
rcr
scas
inc
nop
or
pusha
mov
pop
(bad)
jb
movs
cmp
push
lahf
iret
xor
sbb
dec
jno
jg
cli
push
les
mov
cmp
adc
call
push
bound
bound
mov
push
(bad)
ficom
arpl
sbb
js
(bad)
repz
or
scas
jp
cmp
jmp
jg
imul
add
push
inc
add
jmp
mov
push
lea
(bad)
adc
jge
fucomip
push
and
mov
xor
pop
rol
into
aaa
movs
or
mov
sbb
js
jne
in
xchg
add
nop
sub
cs
cmp
xor
pushf
outs
push
cmc
and
nop
sub
dec
lods
or
add
jo
enter
ret
cdq
xor
xchg
and
shl
jg
hlt
ss
cmps
add
aas
pop
xchg
scas
jmp
or
xor
into
dec
push
jmp
ja
retf
xchg
and
inc
push
test
ins
sub
and
push
std
mov
shl
pop
mov
mov
xor
cmp
xchg
movs
dec
mov
not
(bad)
mov
repnz
pop
inc
scas
hlt
pop
xor
fwait
jp
(bad)
addr16
lahf
or
add
call
sahf
cmp
cmc
shl
adc
dec
pop
cmp
(bad)
mov
in
out
or
out
sub
pop
cld
xchg
mov
sahf
adc
js
sbb
(bad)
pop
cmp
adc
sbb
shr
ss
push
mov
loop
test
and
push
aaa
sub
pop
sub
and
inc
ficom
inc
outs
adc
lds
mov
dec
pushf
push
popa
add
jmp
fistp
mov
mov
pop
push
test
inc
test
(bad)
or
in
fwait
jnp
xor
mov
cmp
mov
dec
xor
ds
fild
mov
dec
fnstsw
adc
neg
repz
pop
lods
(bad)
out
cli
bound
mov
xor
push
mov
or
aaa
(bad)
sub
xchg
movs
loop
dec
stc
adc
fwait
mov
add
jno
or
dec
aaa
xor
loop
cmp
mov
ficomp
add
dec
jnp
sub
adc
mov
mov
xor
mov
inc
mov
add
stc
jo
jmp
ds
jo
(bad)
cli
xor
ficomp
scas
scas
jmp
adc
test
sahf
mov
cmp
xor
lahf
imul
sbb
mov
xlat
lahf
retf
mov
xor
adc
repnz
xchg
pushf
sbb
xor
cwde
cwde
sub
cdq
jns
loopne
(bad)
enter
cmp
sub
sti
and
gs
ret
xor
aas
pop
mov
jns
adc
dec
fisttp
ja
add
mov
mov
or
or
and
nop
imul
mov
add
mov
mov
mov
mov
or
mov
dec
out
mov
and
into
inc
xlat
adc
mov
inc
add
mov
jno
mov
in
dec
pop
mov
xor
cwde
dec
mov
mov
mov
cdq
add
js
dec
lock
cmp
pop
scas
out
aas
mov
sbb
cmp
adc
inc
div
push
jae
fwait
(bad)
scas
cdq
nop
ins
lea
push
and
inc
loope
jl
aam
and
push
adc
js
std
mov
mov
loope
test
arpl
mov
cmp
push
sub
add
inc
push
movaps
cmp
ins
xor
test
xchg
fistp
dec
inc
sub
ins
mov
mov
lock
int3
sub
(bad)
in
cmps
add
fwait
sub
cmc
mov
adc
(bad)
outs
lock
in
ins
shr
out
xor
inc
adc
mov
cli
jmp
stos
repnz
(bad)
push
(bad)
sub
xor
ss
cmc
aas
ins
(bad)
aas
push
movs
mov
mov
test
int3
nop
(bad)
pusha
lahf
aas
cli
arpl
jns
icebp
pop
pop
jmp
cmp
mov
addr16
pop
xchg
jo
test
xchg
pop
dec
cmp
stos
arpl
add
pop
xchg
and
xchg
fs
into
pop
xchg
lods
test
mov
xor
mov
mov
and
ss
mov
rcr
add
push
xchg
test
xchg
in
retf
pop
ds
dec
xchg
add
or
mov
add
dec
test
cwde
in
aas
je
jne
and
push
xchg
dec
test
(bad)
mov
push
or
add
cld
or
sub
cmp
fbstp
scas
gs
test
hlt
xor
mov
je
mov
sub
adc
stos
xchg
arpl
xchg
out
lahf
dec
bnd
in
xrelease
les
jno
rcr
xchg
pop
or
pop
mov
mov
loope
xchg
mov
shl
scas
sbb
ror
outs
imul
nop
adc
ficom
and
mov
pop
inc
push
sbb
inc
out
adc
movs
scas
fidivr
and
fidiv
aad
aaa
jmp
xor
mov
xchg
enter
cwde
xchg
lock
sub
dec
adc
inc
xchg
mov
test
sbb
and
xchg
mov
dec
call
adc
add
shr
xchg
or
ja
es
js
in
lea
jae
adc
add
and
cli
mov
ror
or
fisub
call
fucom
repz
retf
mul
in
or
repz
stos
jno
fimul
in
dec
inc
adc
mov
enter
push
stos
push
mov
dec
dec
add
mul
cmp
mov
push
in
out
test
clc
out
not
jno
icebp
jb
fistp
mov
and
cmc
sbb
cmps
in
push
and
adc
outs
xchg
das
lods
mov
cmp
cmp
pop
fst
pop
ss
pop
jmp
adc
arpl
xor
sbb
(bad)
fdivr
mov
movs
xchg
jecxz
imul
std
icebp
add
fisttp
outs
push
stos
mov
jle
(bad)
iret
sbb
mov
xchg
xchg
or
push
xchg
xor
or
and
sti
popf
stos
into
jge
mov
pop
mov
clc
ret
std
ret
add
add
mov
cmp
rcr
pop
fwait
mov
cmc
add
sbb
add
jno
addr16
ss
xlat
adc
dec
or
push
aad
adc
xor
jg
push
mov
and
xor
mov
sub
xchg
add
jle
jg
pop
cli
(bad)
out
lea
adc
repz
sbb
mov
inc
mov
outs
sub
jbe
cmps
ret
xchg
push
and
cmp
inc
mov
sub
push
cmp
popa
add
jne
push
and
ins
in
sub
xor
sub
mov
aas
test
cli
aam
sbb
inc
in
inc
jle
inc
xor
sar
adc
xchg
rcl
push
cmp
jmp
pop
pusha
mov
or
stc
lock
icebp
push
mov
push
movs
sub
mov
call
pop
inc
sbb
cmc
add
int3
or
sub
out
je
shr
sbb
sbb
test
jb
mov
cmp
js
fldenv
xor
ret
pop
push
lods
pop
les
call
imul
es
pop
jmp
pop
fdivr
inc
mov
xlat
iret
movs
mov
sub
popa
mov
push
sbb
mov
std
xlat
cmp
xchg
dec
or
push
out
mov
leave
push
or
nop
and
mov
repz
test
cmps
ficomp
ds
mov
jecxz
into
sub
addr16
popf
adc
in
cmps
inc
rcr
mov
(bad)
jg
inc
pop
and
(bad)
nop
imul
pop
xor
push
test
retf
fidiv
hlt
push
mov
and
jo
(bad)
pop
mov
clc
and
cld
push
mov
sub
mov
xchg
push
(bad)
jl
add
loope
scas
icebp
inc
je
fcom
pop
mov
sar
push
inc
sbb
es
fdiv
xchg
(bad)
repz
mov
es
jp
pop
xor
fwait
pop
repnz
pushf
rcl
fwait
imul
dec
rcl
hlt
jp
popf
pop
add
inc
ds
xor
sti
pop
xchg
js
mov
test
scas
xor
pop
fcomi
mov
xchg
sub
lea
aas
outs
ret
inc
xchg
popa
pop
retf
jmp
scas
adc
sahf
jb
adc
ss
mov
xchg
(bad)
sbb
jo
movs
mov
sti
lock
inc
imul
mov
test
jle
sti
mov
pop
jmp
mov
pop
in
into
nop
ror
xor
test
inc
movs
ins
push
pop
xchg
jl
push
loop
or
cwde
mov
aaa
jmp
test
push
movs
lea
std
ins
test
dec
cmps
cmps
into
arpl
push
jb
jge
ror
out
or
aas
cmp
sbb
enter
cmp
popf
and
sbb
ret
iret
dec
mov
sub
sbb
sbb
inc
push
jle
lock
(bad)
stos
adc
jne
out
push
dec
and
push
retf
out
out
dec
cmp
push
int3
jg
adc
lahf
jo
pushf
pop
out
cli
mov
or
test
test
lds
loopne
mov
add
inc
push
cmp
pop
pop
(bad)
cli
mov
arpl
mov
mov
les
cs
pusha
pop
add
movs
sub
xchg
repnz
push
jns
xchg
into
sub
jmp
ror
inc
pop
or
jle
pop
lahf
pop
idiv
stos
ds
jg
call
cmp
call
in
mov
pop
(bad)
jle
lea
cmp
pop
ss
add
mov
scas
es
into
aam
nop
jmp
mov
pushf
fistp
cmp
adc
pop
fsubr
cmps
push
hlt
cmp
adc
ror
pop
ror
xchg
xchg
and
pushf
add
loope
shl
fucomip
push
inc
daa
call
dec
cmp
add
mov
adc
jb
jmp
push
stos
call
ins
daa
aam
aas
pop
aad
jb
jle
or
push
and
mov
inc
mov
cmp
jle
pop
adc
mov
add
cmp
sahf
and
xor
xchg
mov
retf
xor
cmp
mov
and
ret
shl
mov
lock
out
ret
push
inc
jnp
adc
ds
push
xor
ds
cdq
test
cmp
mov
sti
and
call
push
xlat
dec
sbb
inc
adc
sti
out
cmp
pop
aaa
fnstcw
shl
and
sbb
outs
push
call
add
sbb
ds
xor
add
xchg
inc
mov
loope
ins
dec
mov
add
pop
aad
shr
push
out
scas
xor
and
cmps
loopne
out
jno
push
pop
sbb
aaa
std
fidiv
and
adc
xchg
jle
repnz
clc
mov
pop
add
xchg
mov
cli
scas
sbb
nop
or
push
jmp
cmc
and
pop
pop
sbb
cmc
test
fisttp
jne
les
test
fwait
mov
(bad)
daa
stc
push
add
jno
es
sbb
add
and
gs
cdq
jae
dec
or
lods
mov
jmp
outs
leave
xchg
popa
test
repnz
cmp
dec
call
iret
add
cmps
mov
xor
xchg
pushf
daa
sub
clc
xor
ins
rep
not
inc
movs
retf
addr16
outs
jno
call
cs
fisub
xchg
retf
jge
test
fmul
xchg
xor
add
loop
fwait
inc
out
xchg
mov
xchg
xchg
sub
sahf
test
xchg
sbb
push
fild
jae
sbb
adc
or
push
dec
push
ja
not
call
cwde
out
stos
out
push
inc
mov
clc
pop
sahf
lods
jmp
nop
and
shr
scas
pop
call
and
enter
test
ja
test
add
nop
retf
sbb
cwde
lahf
test
aam
movs
inc
cwde
(bad)
sbb
xor
out
paddq
jge
aad
adc
enter
sub
adc
sub
fiadd
dec
mov
mov
retf
out
xor
sahf
outs
mov
outs
mov
cwde
gs
fnsave
jmp
xor
cs
pop
jg
mov
xor
inc
xor
pop
dec
push
jo
popf
or
retf
movs
test
test
push
es
lock
pop
scas
hlt
imul
xchg
arpl
in
stos
rcr
xor
cmp
mov
xor
cwde
ja
fs
enterw
mov
loop
cld
cdq
push
in
push
inc
stos
mov
into
(bad)
sbb
dec
or
adc
repnz
cmp
mov
enter
clc
repnz
inc
movs
jp
mov
inc
jp
sbb
les
fld
cmp
xor
mov
xlat
loope
cld
je
mov
iret
lods
stos
mov
mov
adc
ja
hlt
dec
ins
call
mov
adc
lea
test
not
mov
xchg
xchg
mov
arpl
inc
ins
rcr
aaa
out
and
andnps
inc
or
dec
fld
push
inc
mov
cmps
test
ja
inc
imul
je
fimul
cmp
push
inc
cmp
pop
std
adc
inc
cmc
inc
jae
or
and
(bad)
not
pop
mov
jae
ret
cld
jle
scas
jl
jns
out
sbb
lea
bound
test
ds
scas
pop
cmp
out
pop
cld
push
jbe
jne
mov
xor
mov
fsubr
test
data16
inc
cmp
jo
loope
rol
neg
jecxz
mov
mov
sar
inc
shr
xchg
pop
js
sbb
out
add
mov
sahf
mov
or
cmp
mov
ins
cmp
or
ret
les
mov
mov
sar
bound
dec
xchg
cmp
dec
leave
retf
inc
je
push
mov
mov
stc
std
popa
retf
push
jmp
mov
xor
loop
sti
adc
(bad)
and
jmp
test
into
mov
enter
push
in
add
sub
xchg
ins
push
pop
cmps
xor
or
dec
fldcw
mov
out
add
lods
mov
shl
xchg
cmp
and
inc
xor
pop
test
pop
add
test
adc
mov
mov
cmp
pop
retf
pop
or
mov
xchg
push
in
(bad)
push
out
pushf
mov
cwde
cli
lahf
sub
push
movs
jecxz
lahf
mov
cs
xor
mov
mov
inc
add
or
loop
xor
aaa
(bad)
fild
pop
ror
dec
les
jge
mov
rol
push
fistp
es
pushf
jg
xor
or
adc
(bad)
push
(bad)
xor
adc
popf
or
(bad)
leave
and
mov
push
iret
mov
call
shl
ins
jae
rcl
push
sti
pop
outs
and
push
out
jg
orps
push
sbb
mov
and
jmp
mov
xchg
adc
add
int3
mov
jp
push
loopne
cli
dec
push
bound
daa
sbb
push
cmps
inc
ret
add
adc
fsub
ins
cld
sub
adc
lods
xchg
icebp
popf
sbb
fmul
jle
cmc
mov
idiv
leave
dec
loop
sbb
loopne
or
fwait
sbb
mov
xor
mul
sub
pop
(bad)
sub
mov
je
ror
pop
stos
pop
and
push
cmp
inc
push
xchg
neg
mov
push
leave
pop
(bad)
mov
inc
jns
sahf
icebp
sbb
(bad)
in
ret
into
call
fadd
inc
pop
jne
cmc
add
xchg
jge
test
ja
push
add
cdq
push
jmp
arpl
jmp
add
mov
xor
inc
xchg
add
fidivr
lahf
and
sub
or
cmp
and
adc
ins
pop
ret
je
dec
lods
jo
dec
dec
inc
popf
aaa
sbb
nop
jg
mov
mov
fnstenv
lds
jae
mov
sub
push
pop
retf
js
jl
shl
imul
cmps
cmp
add
arpl
outs
call
(bad)
in
jno
cmp
loop
into
imul
sub
stos
jmp
push
pop
jmp
inc
sbb
and
mov
mov
icebp
(bad)
xchg
ss
adc
pop
pop
fucomip
mov
stc
adc
jbe
arpl
xchg
arpl
cmp
sub
push
push
test
xchg
pop
fs
and
push
nop
dec
xchg
pop
jne
in
xor
mov
dec
daa
jg
test
push
xchg
retf
imul
jbe
mov
cmps
cmp
mov
fstp
dec
sub
and
out
aaa
pop
dec
and
mov
xchg
aas
xor
scas
or
(bad)
lock
xchg
jnp
shl
ret
in
aad
test
xor
loopne
or
out
hlt
pop
jmp
test
std
xchg
cmc
div
pop
inc
mov
mov
inc
cmp
aad
mov
and
mov
jne
xor
sbb
test
imul
xchg
daa
jno
gs
shl
out
outs
arpl
lea
lds
pop
int
inc
lods
jle
add
xchg
add
or
add
gs
scas
jge
gs
dec
pop
xchg
cmp
mov
add
mov
pop
xchg
lock
icebp
jl
addr16
ins
mov
push
add
ins
xchg
adc
inc
leave
hlt
sbb
push
pop
mov
adc
push
adc
push
sbb
and
(bad)
or
imul
jne
mov
dec
xchg
add
sub
ja
ds
xchg
popa
hlt
fisubr
push
xor
iret
inc
movs
xchg
dec
stc
or
pop
mov
sbb
jmp
mov
outs
mov
mov
icebp
mov
jmp
inc
shl
adc
add
fstp
xchg
mov
add
gs
mov
ss
std
std
jno
repz
clc
in
xchg
adc
retf
iret
out
and
sbb
pop
scas
mov
push
mov
xor
cmps
inc
mov
lahf
setno
pop
push
jg
fcmovnb
xor
pop
and
lock
mov
jmp
jecxz
push
cmp
adc
cdq
hlt
jo
in
mov
mov
out
sub
add
shl
popa
pop
call
sbb
sbb
das
pusha
xor
icebp
jns
dec
pop
xchg
sub
iret
push
or
movs
inc
mov
pop
mov
repz
test
rcl
pop
sar
inc
(bad)
data16
sub
stos
adc
cs
lods
adc
stos
cmp
fiadd
add
and
jne
stos
adc
add
and
jbe
jge
repz
mov
or
push
push
fcmovb
pusha
(bad)
push
jae
push
aad
nop
frstor
cmp
enter
dec
mov
int3
arpl
xor
(bad)
push
adc
in
push
xchg
ss
sub
(bad)
aas
sub
outs
fisubr
scas
sahf
test
je
mov
pop
lods
cmp
jecxz
jo
retf
loopne
dec
xchg
sub
test
sub
inc
out
ja
test
fs
and
test
popa
or
mov
lock
mov
inc
inc
and
xchg
aas
add
mov
stc
and
repnz
jne
inc
sbb
pushf
xor
pop
adc
arpl
cmpxchg
fdivr
mov
ret
sbb
mov
push
gs
xchg
ins
dec
adc
daa
arpl
int3
popa
mov
cwde
ins
pop
nop
jo
mov
div
add
stos
mov
dec
es
out
int
jmp
inc
mov
in
retf
addr16
arpl
cmps
ins
xlat
pushf
imul
push
clc
pop
jge
inc
aad
div
mov
in
aas
pop
cmp
sbb
(bad)
in
sar
stos
aas
push
cmps
add
dec
stos
push
jnp
(bad)
pop
mov
icebp
xchg
xor
inc
mov
mov
mov
cmp
add
inc
mov
dec
pop
mov
xlat
fdivr
add
push
add
loop
jp
loop
idiv
push
call
mov
dec
lea
test
out
mov
daa
push
sbb
mov
cmp
ret
cld
and
xchg
iret
repz
xor
mov
mov
sbb
or
jbe
call
pop
cmc
add
and
popa
cmc
into
dec
add
xor
sub
push
mov
add
cs
enter
jp
and
jae
mov
(bad)
push
ret
dec
mul
push
(bad)
jbe
adc
add
pop
push
cli
xor
enter
and
aaa
xchg
sub
cwde
mov
dec
add
or
dec
gs
push
imul
or
test
xchg
jmp
xchg
mov
adc
unpckhps
inc
movs
jmp
in
jae
leave
test
cwde
and
xchg
bsf
xchg
push
or
dec
mov
add
xchg
xchg
jnp
inc
mov
jl
xor
jbe
mov
loope
push
xlat
jle
repnz
xchg
out
leave
pop
or
and
jge
mov
outs
add
pop
or
sti
cmp
stc
ret
test
and
(bad)
jo
cld
or
dec
shr
inc
aas
inc
jecxz
jo
daa
xchg
jo
pop
cmp
std
inc
jg
test
int3
shl
retf
fidivr
jbe
aad
dec
out
jle
in
test
jne
mov
mov
push
or
fdiv
pop
aaa
adc
mov
js
push
lock
jecxz
mov
dec
fnsave
rcl
sub
pop
push
jae
mov
lahf
pusha
jnp
leave
cmp
ja
ins
mov
add
fmul
sub
fsin
fstp
stos
pop
push
pop
pop
xor
shl
or
and
inc
fld
xchg
inc
xor
jle
cmc
addr16
mov
mov
mov
sub
sub
stc
aam
retf
jae
adc
arpl
add
int
imul
or
push
adc
pop
xor
cmps
das
loopne
imul
(bad)
out
and
lods
lea
idiv
push
dec
sbb
hlt
push
adc
shl
shr
idiv
pop
and
and
or
adc
mov
jp
xor
sbb
mov
pop
psubsw
ficomp
addr16
ficom
div
das
dec
dec
sbb
jecxz
mov
and
or
adc
sbb
call
into
inc
push
outs
imul
shr
cmps
repnz
cdq
ret
mov
test
jmp
ret
mov
push
sbb
cld
jnp
scas
das
je
outs
cwde
mov
sub
mov
sub
xchg
inc
iret
ins
jg
add
sub
fnstsw
clc
into
mov
cmp
mov
xor
and
mov
pop
repnz
pop
call
outs
push
pop
les
or
jns
ins
hlt
pop
adc
push
repnz
add
adc
cmc
xor
xor
sbb
fwait
and
ficom
cmp
xchg
push
xchg
loop
pop
ds
push
xchg
jne
(bad)
or
mov
fcmovnu
mov
lahf
cli
dec
mul
cli
jge
cmp
leave
pop
sub
push
rcl
ss
cmp
in
imul
out
movs
jmp
and
xchg
(bad)
(bad)
out
pop
je
ds
(bad)
fistp
cmp
enter
imul
and
jne
inc
clc
sub
dec
stos
xor
enter
and
mov
mov
xlat
pop
adc
push
cmp
cmp
aaa
jl
jmp
push
loopne
xchg
dec
fwait
pop
mov
xchg
pop
xchg
rol
out
adc
ins
jno
mov
mov
xchg
and
pop
xchg
in
xchg
loopne
jmp
mov
cmp
sbb
(bad)
xor
mul
jbe
out
fisttp
jmp
and
mov
xor
stos
cmp
cld
popf
pop
rol
mov
sbb
fisub
in
add
inc
out
repnz
mov
xchg
push
jmp
xor
popf
cmp
bound
and
dec
sar
pop
cmp
sub
dec
push
outs
lods
jl
in
adc
push
mov
(bad)
ret
movs
mov
ret
jmp
(bad)
xchg
or
mov
dec
cmp
cmp
push
icebp
out
add
mov
inc
xor
adc
aaa
aam
cmp
xchg
pop
cld
dec
xchg
int
xor
push
mov
inc
(bad)
stos
push
adc
daa
add
xor
push
in
inc
sbb
int
add
sbb
sbb
xor
mov
add
jecxz
mov
push
pop
jo
(bad)
jne
dec
xor
inc
add
sub
inc
dec
sahf
jecxz
push
mov
xchg
xor
je
mov
bound
jmp
cmp
paddw
push
sti
adc
ins
xchg
cmp
in
xchg
jg
push
jnp
je
inc
cmp
lea
sbb
adc
push
data16
sbb
mov
pop
outs
add
stc
stc
pop
adc
or
cmps
jp
adc
das
pop
(bad)
add
fst
push
mov
and
and
dec
mov
rcl
addr16
dec
push
pop
stc
cmp
xchg
push
add
call
adc
xor
adc
push
je
adc
push
cmp
stos
and
cmp
and
pop
dec
jecxz
mov
cmp
(bad)
fstp
sbb
jl
mov
clc
int3
ror
push
(bad)
repz
das
mov
cmps
and
mov
mov
lock
dec
mov
lahf
sbb
inc
dec
loope
(bad)
jae
ror
adc
xchg
loopne
jo
mov
fsubr
out
xchg
fmul
push
sbb
cmp
push
imul
scas
inc
js
and
fst
add
xlat
cdq
add
add
jns
call
or
cmps
cwde
and
loope
les
dec
out
icebp
xor
pop
push
das
ret
repz
dec
leave
sbb
imul
mov
pop
mov
ds
dec
test
cmp
xor
call
inc
mov
es
dec
and
jp
rcr
int
inc
enter
fwait
and
sar
loope
(bad)
hlt
xchg
js
out
dec
call
or
mov
sbb
loopne
add
retf
sbb
mov
dec
dec
jge
push
pop
pusha
mov
mov
xchg
mov
mov
shr
inc
adc
xchg
aam
or
popf
pop
in
retf
sbb
mov
xor
mov
mov
adc
adc
fld
adc
call
adc
gs
add
fistp
lock
retf
xor
call
les
lods
mov
jne
std
dec
xor
lahf
fadd
repnz
sub
cmp
shr
ins
cmp
cmc
lea
lods
dec
sub
sar
mov
cdq
call
jo
outs
movs
xchg
stc
call
mov
pop
enter
dec
mov
jmp
out
int
add
cs
movs
or
jp
(bad)
cmp
je
dec
mov
adc
jmp
adc
es
cs
sub
inc
fdiv
ja
(bad)
push
pop
sbb
xchg
xor
(bad)
aam
lods
in
cmp
leave
rcl
movs
inc
cmp
xchg
pop
adc
enter
sbb
(bad)
adc
jle
pop
and
ds
cmc
push
loopne
push
push
fcmovnbe
shl
cmp
pop
shl
fcom
sub
lds
mov
sbb
call
sub
inc
cmps
xchg
enter
mov
call
or
xlat
xchg
stos
add
mov
pop
out
aad
xchg
cmp
jae
(bad)
mov
call
dec
imul
mov
mov
pop
popf
in
push
jmp
fst
test
rcr
dec
sbb
cdq
mov
jb
test
xchg
mov
jmp
jg
in
sbb
inc
(bad)
pop
loopne
out
cmp
mov
sub
or
push
scas
(bad)
cmc
call
(bad)
shl
cmps
sub
ins
movs
inc
not
mov
imul
rcl
mov
sub
push
pop
mov
mov
mov
je
cmc
in
fadd
mov
imul
(bad)
sbb
lods
ds
stos
ficom
sahf
mov
add
retf
mov
dec
stos
push
xchg
outs
stos
cmp
cmp
xor
add
and
ror
in
dec
rol
adc
loopne
xor
retf
add
add
pop
pop
xor
int3
jmp
je
pop
into
or
sub
mov
mov
xchg
jp
sbb
int3
add
out
mov
int
pop
aaa
(bad)
push
fistp
pop
xchg
pop
push
rcr
lods
pop
xor
fs
adc
xchg
and
jae
fwait
xchg
pusha
cmp
cmp
popf
test
mov
pushf
cmp
pusha
addr16
xlat
pop
aad
cmc
leave
cmp
or
popf
jge
adc
dec
call
cmp
ds
mov
aam
popa
dec
push
stc
mov
or
popf
pop
inc
or
cmp
test
jbe
sbb
shl
mov
je
sar
adc
xchg
jno
inc
rcr
daa
repnz
in
stc
push
push
ret
fiadd
mov
fwait
call
scas
pop
out
mov
icebp
hlt
(bad)
out
add
scas
push
in
mov
das
xor
and
shl
dec
add
ret
add
movs
xchg
fs
leave
xchg
jns
dec
cmp
pop
cmp
inc
into
push
adc
cvtpi2ps
xlat
cmp
imul
nop
jmp
mov
loop
jecxz
shl
lahf
or
aas
push
inc
cmp
(bad)
jne
xchg
pop
push
outs
lds
xchg
lods
cmp
outs
jns
hlt
adc
sbb
cmp
jmp
mov
cmps
aas
pop
icebp
or
fmul
jg
pop
push
das
cdq
aas
retf
int3
xchg
cmp
stos
jecxz
loop
ficom
aas
call
adc
mov
fidiv
fistp
jg
cmc
pop
sahf
outs
xchg
push
pop
or
jbe
xchg
sub
sbb
call
nop
add
neg
push
mov
cmp
call
ror
das
jae
and
in
dec
test
pop
je
dec
jno
lds
add
jno
adc
add
mov
jns
movs
rcl
std
or
cmp
push
adc
xchg
aad
xor
sbb
outs
movs
lahf
lea
jb
add
mov
xchg
popf
loope
dec
fst
stos
aaa
and
addr16
mov
ins
add
xchg
pop
data16
lods
sbb
inc
cwde
inc
repz
shl
pop
in
ss
outs
cmp
loope
test
fld
lahf
and
sahf
test
xor
lods
or
call
ds
test
dec
mov
(bad)
mov
stos
dec
fld
jnp
mov
cwde
jnp
dec
or
inc
lahf
inc
xchg
xchg
xlat
movntps
or
dec
sub
clc
fst
cmps
call
sbb
pop
fistp
fcomp
inc
jbe
int3
mov
cmp
aam
mov
push
int
ins
test
mov
hlt
push
push
mul
or
and
(bad)
popa
xchg
faddp
add
adc
push
jo
jno
fidiv
fwait
jbe
js
push
inc
clc
mov
and
adc
ret
jge
div
mov
sbb
push
shl
mov
adc
mov
dec
shr
cmp
in
sahf
pop
mov
test
cmp
or
je
punpckldq
sbb
aaa
sbb
dec
in
shr
pushf
rol
dec
add
push
js
shl
push
jae
dec
push
add
or
pop
or
aaa
mov
mov
lds
pop
and
into
mov
out
pop
es
push
mov
int3
retf
dec
imul
or
xlat
xchg
fdiv
ret
in
mov
mov
(bad)
jns
ins
lods
popa
and
cli
ja
sbb
aas
cmc
pop
pop
(bad)
push
and
and
push
outs
jns
lods
inc
sar
inc
and
jp
ret
mov
jl
push
sub
inc
xchg
ret
jo
pop
retf
mov
mov
or
xor
ins
mov
aas
call
inc
ret
das
and
xor
pop
lods
mov
or
call
int3
sbb
xchg
and
mov
enter
push
pop
aad
test
loopne
test
adc
movs
ret
or
sti
(bad)
in
mov
adc
mov
gs
push
or
test
add
lahf
dec
aas
(bad)
sub
jb
mov
jmp
shr
push
fbld
add
mov
jg
(bad)
sub
adc
pop
cmp
cmp
push
(bad)
iret
daa
fs
pop
sub
pop
test
mov
pop
daa
push
push
rcl
mov
mov
cdq
pop
sbb
jne
mov
jp
xchg
outs
test
mov
cmps
add
js
xor
fwait
mov
add
add
movs
(bad)
jne
and
and
ins
retf
cwde
push
ret
add
in
dec
jmp
lahf
icebp
push
cli
xchg
xchg
jg
outs
fnsave
sbb
sbb
mov
arpl
call
mov
(bad)
xor
mov
in
mov
(bad)
int
aas
mov
ds
xor
mov
cli
adc
sbb
push
or
js
js
and
lods
shr
jge
movs
pop
mov
xor
mov
inc
cmp
dec
sub
imul
shl
and
xor
adc
cmps
mov
das
int
mov
std
jo
inc
xchg
mov
jne
mov
test
(bad)
out
adc
ficomp
xchg
outs
mov
mov
in
push
and
call
push
adc
(bad)
popf
cmp
fwait
sbb
(bad)
icebp
fadd
lea
xor
outs
push
dec
add
stc
sbb
jmp
adc
jmp
ret
push
fisub
fcmovne
scas
add
sub
xchg
mov
sbb
mov
xchg
ret
sbb
into
arpl
retf
adc
add
stos
test
sbb
xor
xchg
inc
adc
and
or
lock
mov
cmp
fdivr
xchg
(bad)
shl
push
xor
(bad)
push
jp
jne
enter
sub
shl
aad
mov
jnp
and
add
jmp
lea
imul
jg
pop
and
xchg
mov
jge
adc
cmp
mov
rol
add
inc
pop
pop
pop
push
or
and
mov
inc
xchg
and
out
fld
ins
(bad)
xlat
cmp
xor
push
or
or
xor
pop
ret
clc
retf
mov
jge
jns
jae
repnz
adc
outs
and
or
jmp
add
gs
xchg
aas
xchg
lds
jmp
mov
sub
in
dec
and
(bad)
inc
pusha
das
sbb
pop
ins
and
(bad)
data16
mov
dec
pop
dec
gs
push
inc
ins
test
pslld
repnz
push
or
inc
lds
mov
and
clc
push
xor
je
inc
test
scas
movs
add
sbb
ret
inc
popf
test
inc
add
mov
and
jne
jge
retf
test
push
imul
lods
cld
call
mov
and
push
push
mov
push
aad
cld
mov
js
(bad)
(bad)
ss
mov
lock
pop
xchg
adc
push
push
or
ret
push
retf
repnz
inc
mov
mov
cmp
adc
add
mov
push
fild
adc
dec
jg
aad
idiv
es
rcl
push
(bad)
fdivp
push
cs
cmps
dec
adc
add
sub
dec
and
call
jmp
push
mov
ss
and
addr16
addr16
mov
pop
call
adc
rcl
add
mov
les
js
add
sub
cmp
xor
xor
push
call
push
cmp
int
sbb
jo
mul
int3
loopne
dec
cmp
jg
mov
xor
mov
pop
sar
adc
inc
(bad)
out
lods
loope
sub
cmp
jmp
xchg
jbe
cmp
inc
jno
cdq
cld
xchg
mov
mov
jl
add
xchg
mov
push
xchg
iret
loop
mov
cmp
sub
mov
pop
inc
in
cmps
jne
inc
loopne
ins
ja
out
jnp
adc
cwde
cmp
mov
push
add
mov
sub
lea
mov
mov
stc
dec
mov
ret
retf
pop
sbb
shrd
xor
sub
mov
cmps
inc
or
mov
jle
shr
sub
fs
mov
push
bswap
sbb
daa
hlt
not
xor
popa
jg
and
dec
mov
cmp
jg
rcl
push
and
neg
push
hlt
sbb
enter
push
fld
xchg
shr
push
jmp
arpl
mov
das
jne
in
push
sub
pop
mov
js
mov
adc
test
repz
imul
ja
movs
gs
add
stc
pop
adc
test
inc
pop
mov
outs
aad
jge
dec
fs
mov
mov
shl
sub
mov
(bad)
xor
jg
imul
test
and
add
inc
add
cmc
jno
inc
inc
mov
mov
pushf
loop
scas
js
xor
jb
lea
push
cmp
(bad)
push
popf
add
or
repnz
daa
pop
scas
cmp
or
dec
xchg
push
inc
sbb
arpl
jns
pop
aas
out
pop
je
nop
cld
loope
mov
cdq
js
sub
fcomp
and
inc
inc
js
ror
pop
cmc
xor
test
loop
jmp
int
adc
fsubr
xor
cmc
rol
pop
inc
test
mov
daa
jecxz
lds
xchg
rol
lock
imul
jge
mul
bound
xor
gs
sub
call
mov
ins
xor
scas
enter
push
mov
pop
mov
xchg
fiadd
dec
shl
outs
(bad)
jmp
stos
inc
inc
xor
int3
or
sahf
cmp
aas
xor
and
pop
mov
daa
jle
pop
or
bound
mov
jge
adc
loopne
mov
js
test
xor
adc
test
inc
jle
mov
dec
iret
je
shr
stos
or
das
repnz
mov
je
fidiv
adc
add
ret
pop
aaa
add
mov
jg
lock
fadd
mov
int3
fstp
or
dec
pop
xlat
jecxz
cmp
fadd
mov
in
sub
push
add
mov
push
push
jnp
sub
jl
aaa
gs
sbb
outs
lods
cmps
lds
mov
inc
out
dec
lahf
sbb
es
xchg
arpl
movs
idiv
sub
push
jo
dec
mov
push
in
addr16
pop
(bad)
add
sbb
fidiv
lods
ficom
or
mov
lods
(bad)
ins
sbb
(bad)
in
stos
(bad)
jno
ins
adc
pop
push
mov
adc
cmp
jg
call
xchg
adc
pop
ss
mov
pushf
or
clc
retf
ja
lock
out
sub
cmp
dec
aad
sub
(bad)
push
sbb
cmps
adc
jge
in
out
ja
fs
mov
out
cwde
cmps
shr
jb
dec
int3
sahf
lock
cmp
jbe
(bad)
mov
adc
out
push
sbb
(bad)
dec
je
or
gs
push
sub
nop
jbe
adc
ins
add
pop
inc
adc
inc
inc
pop
loop
retf
xor
mov
enter
sti
inc
mov
sub
int
jno
loop
push
jl
clc
call
pushf
inc
outs
out
fdivr
inc
inc
lods
xchg
out
out
fwait
(bad)
mov
mov
xchg
pop
ss
add
cli
in
adc
xlat
test
adc
addr16
adc
das
add
pop
mov
mov
cmp
icebp
mov
sbb
in
add
dec
leave
jmp
adc
enter
cdq
scas
movs
xor
icebp
inc
xor
xlat
cli
cld
ror
adc
lock
out
int
pop
int
xchg
cmps
jg
jg
outs
xor
adc
into
pop
dec
addr16
sbb
fmul
std
imul
xor
jmp
ins
dec
inc
sub
mov
ds
mov
int
jl
movs
jge
push
cmps
mov
aas
gs
rcl
rol
add
in
out
cmp
sub
aam
sbb
jge
cmp
mov
jl
cmp
jle
adc
dec
push
jp
xor
inc
lea
or
or
mov
and
stos
(bad)
sbb
jecxz
ins
call
xor
xchg
in
jg
add
mov
add
stos
pop
jl
adc
(bad)
cmp
cli
pusha
retf
ret
(bad)
sar
inc
icebp
push
pop
(bad)
jnp
lock
popa
or
imul
out
in
cmc
jb
inc
fisttp
xchg
jo
fcompp
add
inc
cdq
imul
popa
outs
call
cmp
movs
inc
pop
int
mov
cmps
jecxz
icebp
xchg
addr16
dec
pop
fcmovne
popf
bound
adc
dec
loopne
into
repz
push
test
push
mov
loopne
xor
sub
adc
pop
pop
jne
push
xor
stc
rcl
adc
in
push
in
jp
jge
or
pop
jp
pusha
in
pop
xor
xor
and
or
loopne
rol
inc
retf
popa
sbb
in
cmps
dec
dec
inc
stos
stos
mov
jae
push
loop
outs
(bad)
jnp
(bad)
cmc
cwde
mov
push
int
cdq
ins
sub
sbb
add
ds
xlat
inc
das
ret
jo
sbb
sub
pop
(bad)
leave
push
in
stos
mov
into
test
(bad)
mov
dec
add
ins
mov
mov
or
les
aam
and
xchg
and
bound
push
stc
cwde
in
cmp
pushf
(bad)
jae
add
mov
ja
jnp
dec
fdivrp
data16
push
call
pop
fsubp
mov
pop
jmp
or
mov
movs
outs
aaa
sbb
nop
and
out
mov
inc
push
lock
and
jge
sbb
fist
(bad)
push
adc
add
aam
cmp
inc
xor
mov
enter
jno
in
mov
jne
xor
dec
or
fcmove
mov
mov
jecxz
lods
stos
adc
shr
stos
pop
xor
xchg
sub
jno
or
push
lahf
mov
xor
in
bound
mov
push
enter
adc
stos
xchg
data16
test
lds
ins
fistp
or
add
mov
ret
test
mov
or
in
je
cdq
mov
nop
mov
repnz
cmps
and
call
test
imul
aas
ror
mov
cld
mov
loop
jmp
dec
jae
pushf
mov
add
popf
idiv
sub
std
xor
sub
dec
adc
inc
outs
jb
ret
call
push
arpl
repnz
ins
cmp
pop
mov
jne
test
fcmovb
call
inc
dec
pop
sbb
jge
enter
push
in
jne
mov
fidivr
adc
mov
pop
dec
push
mov
xor
or
gs
in
es
fnstcw
fdivr
dec
cld
fnstsw
call
mov
inc
add
xor
test
mov
cdq
inc
lahf
xchg
sbb
out
sahf
sbb
push
push
mov
dec
dec
push
pop
aam
jl
and
pop
jmp
test
cs
test
icebp
cld
ins
or
or
pop
stc
cmp
in
mov
retf
pop
retf
pop
out
lods
jge
scas
xchg
sub
sub
xor
repz
popf
nop
js
adc
rcr
and
cvtps2pd
sbb
stos
or
popf
inc
xchg
dec
iret
mov
mov
pop
test
enter
je
dec
pop
loopne
xchg
test
sbb
lahf
stc
popf
mov
mov
push
mov
fdivr
sub
jle
pushf
fidiv
call
mov
(bad)
in
jmp
mov
adc
jl
fistp
dec
out
retf
push
sub
mov
xor
xchg
push
jge
nop
jg
aas
lock
push
jge
inc
inc
inc
or
inc
or
mov
pushf
mov
or
ss
call
push
pop
aad
jecxz
adc
into
mov
adc
rol
cmc
mov
xchg
push
in
push
imul
lahf
cmp
push
test
test
xchg
jno
inc
out
pop
sub
fidiv
jmp
mov
inc
and
movs
cli
aam
jle
je
sbb
cmp
pop
dec
and
xchg
scas
dec
sbb
push
cmp
mov
and
std
fst
xor
loope
xor
repz
and
pop
sub
(bad)
int3
sar
mov
ds
push
mov
pop
fwait
or
(bad)
loopne
std
jmp
test
dec
dec
pop
jne
loopne
mov
bound
cs
or
in
sub
cmp
ror
bound
add
out
scas
add
lock
into
xchg
jno
inc
das
mov
cs
cmps
or
add
pusha
or
fld
mov
mov
cmp
inc
int3
jmp
mov
dec
adc
mov
fmul
aas
cmp
mov
ja
xor
aas
mul
sahf
xor
inc
mov
shl
dec
adc
retf
repnz
outs
pop
out
test
ficom
mov
movs
jbe
or
pusha
push
or
ds
into
ror
mov
sbb
sbb
aaa
out
xchg
jle
retf
add
pusha
loop
dec
jmp
inc
addr16
adc
call
inc
inc
pop
in
jl
push
and
popf
and
scas
xchg
call
shl
clc
rol
pusha
mov
call
jo
pop
adc
pop
mov
dec
push
pop
jecxz
sbb
mov
not
jl
mov
sar
mov
jb
not
cmp
mov
lahf
and
mov
fucom
clc
fisttp
pop
jmp
add
test
aad
and
sub
mov
cvttps2pi
call
imul
cmp
sub
cmp
push
fstp
jle
sub
xchg
nop
leave
or
xlat
add
inc
movs
fstp
and
cld
xchg
and
push
scas
repz
mov
jg
scas
or
stos
movs
out
or
push
ror
adc
jo
scas
sbb
sahf
mov
push
or
retf
mov
mov
ins
or
pop
xchg
push
mov
ss
cs
xor
int
or
mov
stos
icebp
lock
xchg
or
mov
sbb
mov
aad
test
mov
stc
inc
ins
int3
repnz
cli
lahf
fidiv
jmp
fmul
(bad)
popa
sti
adc
mov
idiv
pop
and
popf
xor
imul
xchg
sahf
xor
or
mov
mov
fimul
scas
cld
int
fdiv
jecxz
sbb
in
or
popa
jmp
sub
jns
mov
inc
mov
popa
ret
test
push
enter
pop
xor
push
jl
or
cld
jp
(bad)
mov
sbb
retf
or
cmp
jmp
push
sub
hlt
sub
dec
push
adc
or
add
icebp
das
(bad)
push
add
pop
xchg
sbb
xor
aad
adc
jmp
dec
test
call
and
xor
cmp
xchg
enter
loopne
inc
lds
push
nop
loop
add
and
clc
mov
mov
sbb
je
frstor
mov
sbb
mov
pop
cmps
adc
pop
aam
lods
sbb
es
xchg
call
jne
sub
scas
aas
inc
xlat
or
xlat
jae
in
test
enter
retf
je
iret
push
fs
lods
adc
pop
js
das
out
mov
loop
fadd
in
mov
retf
pop
push
sub
adc
xor
sbb
loop
xchg
sahf
xor
pop
add
(bad)
cmps
enter
(bad)
nop
pop
shl
cmp
xor
push
pushf
mov
mov
ja
fst
stc
cmp
aas
push
xchg
dec
xchg
jbe
mov
xchg
mov
xchg
fdiv
mov
fsub
and
imul
xchg
xor
fcomp
in
mov
add
jle
shl
cmps
mov
sbb
repnz
jle
ror
mov
add
pushf
xor
ret
add
cmps
mov
adc
in
in
mov
cld
add
jle
pop
mov
mov
clc
inc
mov
push
push
add
sbb
lds
leave
and
mov
push
xchg
mov
push
outs
lea
add
xchg
int3
jmp
mov
(bad)
call
lds
mov
je
leave
pop
jp
mov
pop
pushf
xor
movs
fadd
ret
cmps
rol
jmp
pop
aad
sahf
test
push
jae
inc
imul
ficom
pop
push
fs
jo
shl
movs
retf
fcomp
pop
sub
clc
xor
jae
lahf
dec
inc
aad
jmp
enter
clc
int
cmp
xchg
test
pop
ins
hlt
lahf
pop
inc
repz
fnsave
test
lods
popa
mov
aas
ins
cmp
out
out
xchg
inc
(bad)
and
or
cmp
out
ret
stos
sahf
ss
inc
sub
mov
push
lds
adc
das
push
and
call
push
pop
push
inc
push
dec
sbb
ficom
dec
cwde
setnp
xchg
in
lods
mul
fmul
je
add
xlat
inc
fist
jb
sub
outs
popf
std
and
push
out
jne
dec
daa
xchg
pushf
clc
push
retf
adc
and
inc
fbld
or
dec
dec
xchg
stos
mov
cmp
inc
(bad)
aaa
repnz
add
sbb
mov
mov
cmc
add
mov
js
mov
cmc
stos
xor
xchg
imul
sub
lods
lea
repnz
mov
hlt
add
cld
jae
add
push
dec
int3
push
ss
adc
retf
jl
push
into
push
or
pop
pop
(bad)
cmps
jo
cmp
in
add
gs
dec
mov
scas
fst
xor
pop
cmp
push
cmp
sub
inc
outs
add
cwde
inc
(bad)
les
inc
pop
jnp
aad
or
pop
cmps
fld
ficom
push
and
and
mov
ret
popf
aad
jb
test
push
out
stos
sub
call
or
add
push
jbe
push
ret
rcr
pop
cmp
ins
popa
not
jns
stc
cmp
movs
sbb
ror
daa
cmp
inc
inc
out
sub
hlt
mov
sub
test
push
jg
push
retf
xchg
mov
dec
cs
aad
cmp
cmp
push
pop
imul
cli
xlat
pop
sbb
out
adc
shr
or
jmp
rol
jmp
add
inc
xor
inc
fsin
rol
clc
and
ss
push
call
icebp
mov
push
aas
xchg
ror
inc
ja
push
inc
in
popa
cmp
mov
sub
add
(bad)
repz
or
aam
ret
daa
std
test
ins
push
inc
sub
mov
out
clc
into
lds
jecxz
pop
shl
jp
adc
mov
dec
jg
push
data16
dec
dec
cmp
popa
fld
stc
dec
xor
push
mov
and
in
pop
cmp
mov
sbb
lods
popf
and
xor
jne
inc
rcl
jecxz
push
ret
call
adc
dec
stos
repz
mov
xchg
add
and
test
std
sti
jmp
loopne
(bad)
stc
pop
popf
cwde
dec
xor
and
jecxz
inc
mov
xor
fidiv
rcl
aaa
adc
ins
push
fst
lock
mov
dec
jns
add
mov
arpl
pop
jns
mov
scas
mov
mov
add
or
inc
test
inc
xchg
cdq
loop
mov
pop
mov
jno
fisttp
into
mov
frstor
push
push
and
inc
pop
xchg
cmp
(bad)
nop
les
fist
shl
leave
mov
dec
mov
and
(bad)
dec
sbb
and
cmp
xor
(bad)
adc
mov
add
(bad)
jns
inc
mov
fmul
mov
cmp
push
mov
jge
xchg
mov
sbb
das
aas
cmc
lock
xor
popa
out
push
dec
outs
xchg
std
dec
add
dec
dec
ror
test
aad
rcl
cmps
scas
cmps
stc
pop
mov
lock
popf
loop
xor
std
sub
cmp
sub
jns
jae
push
imul
cmp
pop
iret
movs
das
pxor
xor
pop
jl
mov
popa
cmc
mul
arpl
push
fdiv
idiv
push
add
sbb
lods
push
cmp
icebp
sbb
test
or
mov
sub
fbstp
add
in
inc
test
add
add
sub
jb
hlt
out
pop
es
sub
dec
mov
jl
xor
shl
mov
test
mov
fldenv
movs
repnz
mov
hlt
daa
cdq
xchg
iret
inc
inc
lds
cmp
shr
dec
inc
lock
jmp
mov
fs
sbb
inc
jmp
xchg
adc
mov
mov
xor
out
inc
sub
adc
imul
mov
jb
mov
ret
cmp
jge
inc
dec
retf
mov
adc
jns
rcl
cli
ret
jo
les
push
iret
scas
loopne
jns
push
inc
dec
ret
mov
or
add
out
(bad)
jmp
mov
adc
(bad)
cmp
sbb
or
fisttp
and
out
dec
mov
jmp
inc
pop
icebp
fwait
mov
data16
sub
mov
addr16
or
int3
scas
jnp
rcr
test
sbb
fistp
xor
ss
shl
jb
sub
pop
inc
repnz
mov
mov
ds
pop
test
in
test
lahf
jp
inc
gs
jecxz
adc
inc
sub
mov
xchg
xlat
aam
mov
xor
pop
std
mov
adc
and
jl
test
loopne
add
jmp
call
repnz
pop
cmp
bound
inc
jmp
pusha
adc
push
xchg
ins
ja
add
jg
fild
add
test
(bad)
jge
sub
sub
ss
daa
sahf
sbb
add
mov
pop
jnp
mov
add
out
bound
sbb
(bad)
jle
adc
test
adc
(bad)
leave
mov
scas
adc
mov
je
mov
cli
mov
xor
lahf
arpl
mov
jmp
enter
mov
dec
dec
push
dec
aad
inc
ins
dec
inc
cmp
sub
jge
dec
je
sbb
mov
icebp
fdiv
mov
cmp
sbb
push
lods
aam
mov
cmc
out
xchg
mov
jae
shl
dec
(bad)
or
sbb
mov
xor
shl
dec
int
sbb
mov
es
test
sbb
jmp
stos
sar
cmps
inc
jecxz
pusha
sub
js
scas
in
mov
gs
lock
in
and
and
push
imul
test
fisttp
cli
test
fcmovnu
mov
ss
jg
pop
adc
and
xor
jg
dec
mov
xchg
(bad)
stos
call
push
je
not
add
pop
mov
inc
push
retf
neg
cmp
mov
and
pusha
sbb
inc
fabs
pop
mov
and
sbb
sub
xchg
shl
add
adc
je
popf
faddp
mov
push
leave
push
mov
jl
or
adc
mov
push
aaa
in
sbb
and
clc
mov
adc
xor
cmp
adc
xchg
sbb
rcl
sub
jo
jne
stos
jmp
fwait
and
jb
jg
pop
xor
mov
or
out
jne
out
add
out
adc
lock
mov
(bad)
jl
popa
jo
and
xchg
imul
push
xor
jmp
mov
fld
push
call
ficom
push
jne
mov
movs
sbb
pusha
lods
(bad)
pop
mov
repnz
push
push
and
mov
mov
and
dec
es
pop
xchg
mov
lock
popa
sbb
cmc
pop
sub
les
sub
jmp
lahf
or
sub
sub
repnz
inc
jno
out
mov
pop
cwde
push
or
sbb
popa
dec
int
in
xor
push
shl
cmp
out
push
jg
int
cmp
lods
jmp
sbb
loope
xor
test
movs
xchg
and
sar
ss
inc
jne
fdivp
mov
pusha
add
out
fild
sub
inc
push
mov
mov
adc
mov
xchg
je
or
call
sti
inc
mov
mov
retf
loope
aam
or
test
das
cmp
int
and
dec
pop
ins
add
sub
sbb
inc
mov
pop
cmp
or
cld
and
jmp
inc
cmp
rcl
cli
mov
mov
push
ret
pop
cs
pop
retf
push
in
popa
outs
das
inc
cld
popa
sti
mov
and
popf
fst
xchg
inc
das
cmp
gs
int3
leave
cmp
add
test
add
jo
lock
je
adc
sub
mov
mov
in
std
pop
hlt
ins
icebp
adc
out
mov
mov
and
mul
add
ficomp
add
icebp
add
push
xchg
retf
stc
test
adc
jg
arpl
lock
adc
cmp
and
shr
add
hlt
pusha
sbb
and
jb
push
ins
int
pop
ins
popf
clc
push
dec
in
test
add
mov
jmp
dec
mov
sub
sub
inc
aaa
jnp
scas
adc
sbb
test
out
xchg
imul
xor
inc
ds
xchg
repnz
test
stos
jo
popa
in
retf
loop
sbb
je
mov
cmp
sub
jp
pushf
add
add
dec
mov
xor
sbb
movs
call
xchg
repnz
gs
push
int3
xor
add
push
in
(bad)
out
aam
sbb
push
push
add
loop
test
mov
call
xor
lods
loop
sbb
jg
jl
sub
mov
lock
xor
xchg
lahf
and
loop
pop
dec
cmp
jno
mov
daa
pop
and
test
(bad)
repz
test
int
cmp
inc
in
and
pusha
not
fldcw
iret
xchg
push
dec
(bad)
in
cs
mov
loopne
add
jmp
out
cmp
stos
and
sbb
jnp
cmp
pop
jb
inc
(bad)
jecxz
and
push
mov
push
into
je
enter
push
outs
(bad)
mov
cmc
push
(bad)
frstor
xor
loope
mov
push
jge
xchg
call
inc
jmp
out
bswap
out
adc
inc
sbb
loop
lea
into
adc
inc
push
daa
out
in
fst
lods
add
popa
stos
cli
outs
int3
jmp
ret
rcr
sub
mov
ins
imul
fimul
ror
xchg
fidivr
xchg
hlt
add
aas
test
movs
add
in
(bad)
ror
push
adc
movs
sub
mov
icebp
cwde
in
push
sbb
mov
sub
xor
mov
mov
and
dec
gs
cs
loope
mov
fnstsw
mov
xchg
arpl
mov
xor
push
or
cmp
jmp
add
dec
mov
or
not
jmp
rol
jae
pushf
ds
das
inc
adc
adc
(bad)
or
cs
push
push
push
cmp
push
xchg
mov
inc
inc
mov
or
(bad)
(bad)
mov
adc
(bad)
std
xor
adc
mov
push
sbb
sub
arpl
in
ja
inc
sar
adc
movs
push
pop
cmc
mov
test
xlat
out
mov
or
scas
fwait
push
and
sahf
ror
jbe
cld
out
sbb
push
arpl
mov
dec
xlat
cld
push
pop
mov
sti
(bad)
pushf
out
stos
int3
psubusb
cmp
aaa
xchg
jb
lock
jo
dec
aaa
adc
mov
mov
jmp
pop
sbb
cmp
in
adc
jne
scas
(bad)
sbb
fisttp
dec
dec
ds
mov
pop
xor
sbb
or
int3
jg
rol
push
cmp
xor
mov
in
pop
pop
enter
mov
xchg
daa
sub
mov
nop
push
adc
popf
std
outs
das
sub
or
or
lods
imul
push
dec
retf
and
leave
mov
pusha
mov
cmp
call
xor
add
xor
mov
out
ss
mov
je
lidtd
xchg
jbe
es
je
icebp
push
add
jno
mov
fnstenv
pop
mov
fidivr
int3
push
mov
mov
mov
inc
je
push
lock
in
xchg
xor
mov
sbb
scas
retf
repnz
cli
mov
or
jae
inc
mov
dec
push
sar
dec
imul
ret
call
sti
std
and
pop
xchg
lds
icebp
sbb
sub
dec
fwait
sahf
lock
fldenv
inc
add
aaa
pop
push
pop
dec
int
jne
jo
lock
or
ja
sbb
shl
or
add
stc
adc
or
mov
mov
loop
add
mov
retf
idiv
call
imul
das
xchg
test
xchg
adc
out
mov
add
movs
test
bound
fist
push
mov
enter
sbb
xchg
dec
sbb
daa
cmps
mov
pop
mov
dec
jbe
xchg
lods
xchg
inc
add
cvttps2pi
inc
shr
mov
xchg
(bad)
jl
push
outs
repz
mov
retf
aad
and
sub
js
imul
jno
sub
test
lds
fst
xlat
leave
daa
add
cmp
and
mov
xor
push
(bad)
out
inc
push
fldcw
mov
sub
mul
mul
mov
std
or
adc
outs
test
add
add
clc
adc
push
ss
lods
xor
(bad)
loopne
push
shl
mov
pop
xor
(bad)
jg
rep
in
nop
cdq
cwde
(bad)
mov
sbb
sub
stos
imul
sub
sbb
adc
adc
aaa
std
sahf
enter
add
sub
fcmovnb
mov
or
fdivr
addr16
ror
and
loopne
xchg
aad
and
loop
dec
call
retf
adc
aam
out
(bad)
outs
jno
push
mov
mov
(bad)
ss
mov
(bad)
jne
inc
sub
mov
jge
or
call
mov
out
xchg
retf
ret
mov
jbe
jbe
les
out
pop
cmc
imul
inc
sar
xlat
cwde
mov
test
je
jno
cwde
shl
arpl
xchg
inc
cdq
rol
in
gs
pop
outs
lods
push
ds
enter
lods
push
or
fs
xchg
add
test
inc
mov
(bad)
fucomp
jb
add
outs
movs
xchg
dec
push
iret
cmps
mov
repnz
icebp
lods
push
or
pop
fisubr
or
into
push
sub
sub
out
sbb
shr
pop
inc
rcr
(bad)
jle
call
iret
pop
aaa
inc
enter
jle
push
and
xchg
test
out
or
inc
sbb
movs
and
es
xchg
mov
jl
les
(bad)
push
inc
fs
mov
xchg
xor
pushf
cdq
inc
out
dec
push
mov
mov
add
cld
sub
sbb
or
xchg
call
movs
mov
cmps
sub
jbe
mov
push
jno
mov
mov
mov
(bad)
repnz
lds
sbb
xchg
push
aas
mov
pop
or
xor
pop
mov
jl
inc
lahf
dec
(bad)
clc
sbb
lock
sbb
xchg
sbb
xchg
int3
call
push
stos
mov
leave
fucomi
jb
out
inc
pushf
push
pop
and
fcom
pop
or
bound
dec
mov
xor
stos
mov
pusha
cld
(bad)
adc
stos
stc
(bad)
and
inc
faddp
ss
mov
in
call
adc
in
push
loop
inc
sbb
in
fisub
mov
sub
lods
sbb
arpl
fistp
(bad)
ret
das
xchg
and
scas
call
xor
popa
mov
shl
stos
or
sub
cmp
adc
dec
(bad)
mov
mov
imul
add
sbb
lea
scas
out
xchg
xor
sar
sbb
adc
xor
or
adc
mov
popf
rol
cmp
xor
mov
jmp
mov
shl
sbb
iret
mov
fisub
adc
and
enter
inc
mov
inc
cmc
sbb
dec
rcr
nop
cmps
pusha
push
fs
add
dec
mov
arpl
(bad)
mov
xor
pop
movs
jno
mov
mov
xchg
push
sub
loope
mov
mov
and
rcl
fimul
sub
test
fstp
ds
sub
int3
xor
gs
push
div
adc
pop
scas
push
pop
test
sub
fisttp
mov
cwde
lock
rol
pop
in
pusha
sub
into
lock
repnz
inc
mov
inc
jl
leave
sbb
imul
sub
xor
test
shr
test
jl
and
call
mov
in
or
call
in
sbb
jne
mov
sbb
cli
sub
popa
mov
shl
scas
ins
sbb
aas
cs
mov
fmul
push
cmp
jecxz
shl
sbb
lods
xor
std
sub
cmovno
pushf
mov
pop
push
not
pop
cmp
cli
mov
mov
dec
aas
push
mov
xchg
adc
and
sbb
jbe
dec
jmp
cmp
cdq
sub
push
jge
xchg
pop
scas
sub
cli
xor
cdq
sub
xchg
xchg
inc
into
push
pop
nop
xchg
jns
lods
and
pop
sbb
inc
jmp
mov
and
mov
fdivr
mov
push
add
adc
ins
sbb
jecxz
or
push
dec
ins
sub
idiv
pop
inc
cs
adc
rcr
dec
sub
fwait
aam
or
xor
or
mov
movs
outs
jp
push
pop
aaa
pop
xor
int3
pop
popf
pusha
cmp
sub
int
das
mov
fild
inc
fmul
mov
mov
(bad)
adc
aam
aad
and
push
mov
fisub
mov
clc
test
push
pop
cmc
mov
jne
fnsave
push
xlat
movs
mov
clc
or
lds
pop
jne
pop
and
xor
shl
mov
outs
add
mov
sub
iret
enter
mov
shl
cli
inc
mov
in
push
dec
in
mov
sub
adc
loopne
jns
loopne
pop
idiv
ret
inc
call
(bad)
xor
cmp
das
mov
addr16
adc
es
aas
pop
popf
aaa
icebp
(bad)
pop
lahf
call
popf
mov
sbb
sbb
pop
mov
fdivr
cli
(bad)
push
jmp
sub
js
pop
(bad)
mov
and
cmps
inc
stos
pusha
jmp
inc
push
sti
sbb
pop
int
ss
mov
loope
sub
in
push
and
jmp
inc
push
mov
cmp
xor
adc
cmp
popf
imul
imul
adc
pop
fsub
jp
(bad)
stc
ja
xchg
(bad)
sti
jo
xor
lahf
push
mov
pop
cdq
test
adc
clc
(bad)
or
xchg
inc
xor
push
shl
int3
fisttp
sub
pushf
adc
leave
add
mov
mov
outs
in
xlat
fstp
pushf
mov
aam
and
inc
scas
push
out
jb
xor
mov
pushf
mov
add
xchg
bound
(bad)
sub
xlat
int3
lock
dec
mov
xchg
jnp
pushf
sub
stc
jb
jns
imul
and
adc
popa
bound
(bad)
stc
mov
out
push
push
jecxz
xchg
cmp
lahf
(bad)
shl
fwait
lock
inc
mul
cmp
xchg
mov
in
loopne
and
pop
std
add
jne
jl
or
fwait
ret
inc
leave
repz
and
adc
pop
push
sbb
push
sbb
scas
and
push
in
sahf
fiadd
mov
or
ss
mov
scas
cmp
test
pop
das
jle
push
jmp
sub
xchg
repz
sbb
and
mov
cmp
mov
lea
sbb
shr
push
into
movs
adc
leave
sahf
clc
xchg
jno
jno
fnstenv
aad
repz
jnp
sti
and
test
pusha
int3
fistp
inc
(bad)
aam
(bad)
jno
cld
aad
xor
test
in
addr16
popf
cmp
adc
les
sub
mov
loope
ds
mov
int3
jmp
repnz
push
adc
inc
sub
sub
inc
pop
push
pop
jge
rol
dec
lds
push
jl
mov
jmp
stos
and
in
(bad)
sbb
xchg
pop
ficomp
iret
mov
in
int
out
cmp
loopne
adc
out
push
dec
les
bound
leave
jne
into
push
jl
add
jne
int3
mov
test
sub
icebp
rol
mov
js
shl
add
in
sub
lods
sbb
daa
xchg
enter
call
bound
xor
cdq
out
daa
mov
adc
cdq
xor
out
dec
mov
and
mov
je
mov
icebp
adc
jae
xchg
outs
ins
rcl
xor
jl
adc
call
xor
in
xchg
daa
or
ror
ret
cmp
dec
icebp
mov
inc
pusha
ret
mov
jmp
fcomp
push
push
fsub
pop
add
sbb
in
repnz
xchg
fdiv
inc
jb
dec
mov
shl
adc
ret
sbb
int3
cmp
push
cmp
stc
mov
push
pop
adc
and
pop
rol
fild
adc
icebp
xchg
movs
test
jo
xchg
mov
pop
jmp
loop
mov
movs
sbb
xchg
imul
jno
push
inc
ret
dec
jno
add
(bad)
enter
pop
ror
sub
scas
mov
inc
ins
mov
push
pushf
leave
and
adc
pop
inc
in
mov
jmp
inc
in
lods
adc
outs
add
stos
leave
mov
scas
xchg
xchg
leave
enter
aam
aaa
out
pop
out
inc
jae
ror
je
mov
pmulhw
mov
ja
sti
pop
js
(bad)
imul
es
mov
add
mov
xor
test
or
cmp
test
test
aam
loopne
xor
sbb
in
xor
lods
ret
stc
cmc
retf
jp
xchg
cli
fstp
pop
jmp
jle
pop
cmp
jo
(bad)
cmp
mov
pop
mov
jo
and
maskmovq
test
fidivr
add
push
mov
out
xor
jne
and
xchg
pop
inc
cmps
push
jmp
jns
mov
and
or
call
xchg
jmp
(bad)
dec
xor
xchg
mov
rcl
out
mov
jecxz
out
leave
stos
ss
or
or
stos
lods
movs
rcl
test
das
ins
push
lds
pop
jg
push
push
dec
xor
in
aas
mov
(bad)
sub
inc
mov
or
push
in
xchg
xchg
test
xor
pusha
(bad)
jnp
lods
je
xchg
aad
popf
jmp
sub
mov
xor
sbb
sti
mov
push
sbb
mov
enter
jbe
jnp
ss
add
push
mov
dec
in
fs
dec
in
and
retf
pop
scas
arpl
aas
je
push
mov
xchg
ins
ins
cmp
hlt
cmps
cdq
shl
sbb
sbb
mov
sbb
imul
ins
call
test
xor
(bad)
out
mov
fcomp
push
jg
cmp
inc
jb
xor
cmps
ds
stos
add
inc
aam
or
es
mov
mov
repz
in
push
add
dec
es
(bad)
in
jmp
ret
(bad)
fst
js
pop
aaa
clc
mov
bound
into
cmp
inc
xor
pop
push
xor
aam
es
fwait
clc
inc
pop
push
int3
mov
test
imul
inc
jg
sub
ror
dec
ror
or
push
(bad)
loop
test
jmp
(bad)
cmp
ds
cmps
jb
lea
inc
add
and
out
clc
sub
in
adc
jne
jge
xor
adc
out
cmp
test
sub
sub
test
inc
push
xor
scas
jle
daa
les
in
sub
(bad)
in
(bad)
movs
cmp
and
mov
mov
fist
xlat
fadd
cmp
scas
lods
mov
movs
je
rcr
jo
cmps
out
cmc
sti
xchg
cs
cmps
xchg
jp
mov
out
lods
fld
inc
and
jmp
cmp
iret
(bad)
jnp
test
inc
mov
add
jmp
stos
and
mov
mov
or
retf
clc
out
sub
in
imul
fimul
aad
push
popf
xor
fisub
stos
mov
shl
shl
push
cmp
xor
or
lods
push
stc
xor
enter
sahf
aaa
punpcklwd
out
mov
fwait
xchg
daa
lea
xchg
mov
push
jmp
xor
mov
cwde
dec
xor
(bad)
fsubr
cmp
xor
mov
lea
pop
push
movs
sbb
pop
ret
xchg
xor
mov
retf
xlat
pop
data16
push
dec
loopne
fwait
add
cli
add
test
not
add
push
add
ja
add
icebp
pop
push
mov
and
aaa
ret
xchg
(bad)
pop
and
loop
xchg
lea
shl
and
aad
in
push
(bad)
push
xchg
and
aaa
dec
mov
and
lea
sub
cmc
and
or
mov
loopne
xor
sub
lahf
daa
repz
imul
pop
js
(bad)
sub
xor
cmps
mov
jg
inc
push
adc
xor
adc
cmp
addr16
fwait
retf
xor
sbb
mov
jge
mov
retf
fdivr
pop
push
mov
ds
jbe
stc
xchg
in
or
xchg
fsubr
test
adc
push
mov
call
nop
daa
fstp
pop
addr16
rcl
mov
(bad)
psubd
add
sub
dec
jmp
(bad)
sub
add
cld
mov
jo
out
daa
sub
jg
ss
icebp
imul
mov
dec
jp
leave
jle
jl
aaa
cmp
outs
test
sbb
jg
xchg
je
pusha
dec
jp
enter
aas
xor
mov
(bad)
xlat
xchg
mov
mov
mov
ffree
jae
ja
inc
pop
mov
inc
dec
or
sub
push
movs
jle
jge
mov
cs
(bad)
jo
je
sbb
mov
out
ror
cmp
adc
mov
data16
mov
jmp
or
mov
dec
sbb
lods
adc
add
jmp
loopne
mov
push
dec
mov
lods
pop
add
add
enter
sbb
lock
cli
xor
sbb
inc
enter
retf
stos
pop
ret
xchg
mov
ins
jno
mov
daa
mov
cld
int3
pop
adc
fisttp
sub
bound
movs
(bad)
into
cmp
cwde
jl
push
(bad)
xor
es
push
adc
jno
xor
and
add
(bad)
and
push
push
movs
(bad)
ret
xor
rol
xor
mov
and
out
movs
std
push
dec
xor
pop
outs
imul
sub
push
xchg
push
push
xchg
sub
jle
inc
mov
xchg
inc
adc
sbb
inc
xor
dec
retf
je
inc
and
cmp
test
xchg
xor
ret
mov
(bad)
not
stc
xor
prefetch
jbe
icebp
mov
jmp
(bad)
int3
js
js
inc
add
and
call
mov
xor
inc
inc
mov
jecxz
push
pop
fs
pop
cmps
sahf
dec
cmc
shl
dec
pop
je
sti
mov
mov
mov
pusha
cmp
and
mov
dec
rol
cmc
in
mov
pop
dec
cmp
jmp
jg
push
(bad)
mul
in
loop
aam
sub
or
cld
mov
in
inc
inc
mov
in
aaa
dec
fwait
xor
out
sub
sti
(bad)
loope
push
dec
and
shr
cld
jo
lahf
push
pop
cs
std
inc
sti
out
test
cwde
sar
gs
enter
shl
jp
aam
scas
aas
or
jo
pop
cmp
scas
stos
fistp
outs
outs
popf
arpl
mov
les
(bad)
and
mov
icebp
scas
pop
dec
rcl
and
sbb
sbb
cmp
mov
xor
jno
dec
stc
mov
pop
cs
in
sar
test
mov
test
mov
xchg
adc
jmp
cdq
jmp
add
dec
test
add
pop
dec
xchg
leave
and
jle
mov
aaa
and
sub
pop
imul
xor
out
mov
mov
cmps
out
dec
mov
xor
cld
hlt
sar
dec
pop
and
jno
mov
pop
popa
lds
xor
aad
push
cld
loop
mov
pop
(bad)
test
xchg
push
shl
ds
mov
jo
mov
cdq
loop
jl
xor
push
int3
or
and
and
xchg
sub
imul
aas
fistp
push
lar
pop
gs
cmp
mov
ins
int3
shl
adc
jmp
mov
mov
in
addr16
mov
dec
scas
cmp
adc
dec
xor
stos
mov
push
jns
ins
mov
cmp
jle
movs
rcr
xchg
nop
xor
stos
mov
xor
cmp
mov
fistp
(bad)
cwde
push
hlt
or
into
sbb
or
xlat
repz
ins
mul
gs
xor
scas
xchg
mov
jp
or
xor
pop
shl
shl
stos
in
fst
in
pop
adc
inc
stos
adc
xor
in
loope
mov
mov
pushf
or
add
mov
cmp
ss
outs
xchg
fmul
dec
repz
lea
mov
bound
dec
xor
add
mov
mov
dec
test
sbb
add
lea
inc
jb
jnp
sbb
jne
mov
inc
mov
lock
pop
jg
mov
push
dec
aas
test
aaa
adc
fs
add
xchg
pop
inc
sahf
dec
(bad)
call
cmc
(bad)
push
loopne
repnz
daa
mov
sbb
test
jp
movs
fdiv
mov
xor
pop
jae
push
pop
mov
es
jl
mov
iret
hlt
add
or
ins
push
push
xchg
mov
jae
push
clc
fimul
imul
push
or
(bad)
sub
jmp
int3
and
sar
mov
push
in
(bad)
xor
sar
daa
push
or
dec
cmc
(bad)
lds
aaa
jp
mov
or
cdq
xchg
out
addr16
popf
inc
add
jo
jo
fsubr
test
sbb
out
sti
push
cmc
sub
or
ds
mov
or
adc
clc
int
mov
adc
push
call
and
mov
div
push
sub
pop
jns
pushf
sub
mov
jmp
sbb
(bad)
xchg
stc
push
pusha
rol
sti
mov
daa
in
cli
rcr
dec
jmp
ja
xchg
mov
mov
or
cli
sahf
sbb
jnp
sub
sub
cmp
in
or
lock
stos
add
into
push
fcomp
cmp
dec
aas
cld
pop
leave
aaa
push
in
fisttp
mov
jmp
dec
xchg
inc
test
pop
scas
sub
sub
test
or
clc
mov
adc
xchg
adc
ret
mov
sub
xchg
mov
jecxz
push
and
xlat
mov
or
outs
in
sbb
lods
loope
out
xchg
fisubr
pop
pop
xor
lds
pop
clc
ret
jnp
or
mov
fidiv
fcmovu
mov
stc
or
dec
cwde
cmps
push
mov
ins
out
cld
fucomp
mov
or
mov
fimul
pop
aaa
loopne
mov
dec
or
je
int3
mov
jle
movs
loope
jno
aaa
jle
jecxz
inc
or
sub
arpl
push
mov
jp
pop
dec
pushw
dec
adc
std
jge
dec
movs
mov
retf
pusha
ret
mov
jnp
and
ins
mov
push
imul
pop
sbb
sbb
and
fdiv
add
dec
icebp
sub
movs
js
add
hlt
les
outs
pop
jmp
mov
pop
jge
adc
fucomi
fwait
movs
out
cdq
fist
daa
xchg
push
inc
aaa
sbb
ins
and
test
xchg
(bad)
pop
sbb
jno
imul
repz
lock
ds
ret
mov
mov
lock
imul
mov
dec
test
movs
inc
mov
out
pop
xchg
call
dec
enter
call
std
sub
jecxz
cmp
jp
jmp
iret
sub
sub
repnz
push
ins
mov
in
adc
and
xchg
sbb
or
cmps
mov
sbb
cmp
aas
inc
or
fstp
call
sub
cmp
or
pop
jmp
dec
sbb
sbb
test
nop
das
into
cmp
xchg
xor
lds
mov
sub
inc
cld
jge
leave
or
pop
call
ret
sub
sub
and
mov
bound
arpl
lea
scas
cmc
xchg
test
(bad)
out
adc
imul
jl
ds
outs
retf
mov
xchg
mov
in
imul
pop
inc
push
scas
pop
and
(bad)
repnz
mov
inc
jg
or
aad
outs
in
cmps
fs
cmc
loop
outs
mov
jbe
push
mov
dec
inc
cmp
dec
xchg
retf
mov
test
and
dec
xlat
mov
and
daa
daa
push
cwde
pop
retf
cwde
push
mov
sbb
jl
inc
pop
mov
inc
dec
sbb
cmps
inc
(bad)
sbb
int3
xchg
mov
cmp
scas
xlat
push
sbb
xor
pop
(bad)
mov
dec
and
mov
mov
aam
jmp
outs
add
cmp
and
shr
adc
adc
or
(bad)
add
add
sub
ret
es
movs
test
inc
repnz
test
inc
jmp
xchg
add
mov
cdq
jae
fwait
stos
dec
test
cmp
fidiv
jb
xor
sub
xor
mov
jo
mov
mov
test
jbe
rcl
or
push
and
xor
push
mov
jp
pop
inc
nop
test
or
push
fs
iret
mov
and
mov
push
popf
xor
push
push
fchs
and
sbb
push
dec
sbb
daa
cs
inc
ss
retf
jns
jp
cmp
inc
push
icebp
jmp
test
ins
or
pushf
aam
inc
daa
jecxz
jbe
jmp
sbb
xchg
mov
cli
imul
lods
icebp
xchg
cs
ja
mov
xchg
sbb
cld
mov
je
(bad)
repz
aam
adc
push
pop
call
push
mov
outs
stos
or
xor
and
adc
pop
jp
popf
jecxz
outs
in
leave
retf
jl
sub
sub
idiv
pop
mov
cmp
mov
les
jle
xchg
outs
sbb
or
mov
mov
mov
hlt
stos
std
cmp
mov
jge
dec
imul
cmps
into
mov
cwde
xchg
sti
xor
jno
jmp
cmc
xlat
push
jl
rep
sub
fdiv
je
pop
enter
push
les
mov
in
neg
fwait
retf
pop
sub
out
aas
imul
pop
dec
mov
rcr
cmp
push
dec
addr16
dec
imul
imul
(bad)
push
(bad)
and
lea
mov
sbb
dec
div
scas
fcomp
stos
(bad)
pop
cwde
das
mov
push
or
mul
test
and
cmp
ja
adc
sub
sub
divps
(bad)
mov
sbb
rcl
push
add
pop
mov
or
inc
cmp
sub
push
fcomp
or
push
addr16
mov
mov
(bad)
mov
and
fwait
xlat
pop
xchg
lods
and
xchg
sub
or
leave
cmp
or
sti
pop
pop
test
aam
sti
pushf
sub
call
enter
loopne
in
sti
retf
ja
adc
fsub
inc
jg
inc
xor
iret
ret
adc
mov
mov
jb
das
xor
or
push
out
and
into
dec
div
jmp
sti
add
or
or
mov
clc
mov
add
cwde
jmp
arpl
and
sbb
imul
sub
repnz
cmp
add
seto
mov
gs
cmc
gs
add
inc
jo
cmc
sub
iret
cmps
ins
push
loop
inc
jae
icebp
xor
adc
fidivr
cdq
add
(bad)
dec
sahf
pushf
ror
out
sahf
clc
std
repnz
xor
cli
and
movs
push
retf
xor
add
mov
pop
and
push
pop
or
leave
into
and
xchg
add
add
sub
aad
adc
mov
sub
mov
es
ins
push
lds
out
(bad)
xchg
or
aaa
(bad)
scas
dec
dec
sahf
jle
mov
in
sub
pop
out
rol
push
(bad)
xchg
cmc
fmul
shl
sub
icebp
cmp
test
push
xchg
xchg
jb
(bad)
jo
out
pop
cs
adc
inc
cmp
enter
xchg
pop
push
int
fsubr
aam
and
mov
cmp
cmc
stos
mov
and
aas
(bad)
push
or
cmp
sub
(bad)
xor
pop
mov
add
mov
aad
je
dec
retf
das
cmp
(bad)
xlat
xchg
add
mov
lea
(bad)
jo
and
sbb
push
(bad)
pop
or
cmp
pop
dec
xchg
inc
std
pop
aaa
jecxz
adc
sub
enter
mov
fsub
and
mov
outs
add
loop
aam
mov
jp
push
sbb
pop
enter
xor
lea
xchg
mov
bound
int3
push
das
push
stos
ficomp
mov
cmp
fist
xchg
loopne
jbe
jns
popf
pop
add
pusha
cmc
adc
lods
fnsave
inc
pop
push
dec
adc
je
and
mov
test
adc
xchg
xlat
inc
gs
lods
mov
outs
fcmovnu
pop
or
mov
mov
lds
sar
or
add
loope
mov
std
out
inc
adc
pushf
jmp
stos
iret
and
mov
push
mov
repz
add
xchg
mov
and
fisubr
int
int
mov
jl
mov
pop
xchg
and
add
push
push
fisub
xor
cmp
outs
les
push
mov
stos
cmp
mov
add
dec
mov
mov
add
clc
out
add
dec
outs
daa
adc
cmps
(bad)
loope
xor
movs
and
aam
mov
inc
std
(bad)
xor
pop
sti
add
fs
push
add
enter
bsr
jb
icebp
repz
sbb
enter
xchg
mov
push
dec
xor
or
jns
sbb
lea
mov
dec
hlt
arpl
dec
mov
cmc
jl
mov
push
int3
dec
push
jae
scas
cmc
or
cmp
out
(bad)
hlt
je
push
hlt
frstor
xchg
dec
mov
mov
xchg
pop
lock
xchg
movs
xchg
or
xchg
leave
cdq
imul
xchg
popf
lods
add
ret
add
push
rcl
or
inc
xor
sub
or
stos
xchg
dec
sub
cli
ins
out
pop
outs
adc
cmp
push
aad
cmp
aam
lea
sub
add
repnz
jle
adc
fst
cmp
sbb
cmp
movs
ficom
jecxz
fisubr
inc
out
imul
lods
mov
mov
mov
ins
lds
into
cs
(bad)
(bad)
mov
(bad)
pushf
add
loop
sbb
out
xor
cmp
adc
neg
es
sahf
pop
xchg
pop
inc
cdq
mov
das
push
sahf
out
test
mov
or
push
adc
dec
dec
retf
nop
outs
cdq
jp
sbb
test
in
adc
push
mov
scas
rol
into
int
xchg
int
sar
lock
or
loop
add
mov
(bad)
scas
jmp
sti
jp
pop
stos
imul
popf
xor
sub
pop
call
scas
fwait
and
call
pop
imul
retf
xlat
lahf
lahf
inc
lea
sbb
jecxz
sub
test
sub
loope
popf
mov
lock
dec
or
fs
movs
fisub
jnp
mov
mov
jmp
cmp
mov
pop
sub
sbb
jmp
outs
mov
or
icebp
adc
inc
xor
test
xchg
jno
xor
jo
xor
jle
(bad)
push
bound
mov
pop
dec
xchg
mul
mov
cmp
shl
cmc
pop
(bad)
push
daa
clc
or
cld
enter
fst
fwait
outs
cwde
loopne
movs
cmp
(bad)
pushf
push
dec
pop
sub
or
push
jg
repz
add
imul
es
mov
ins
sub
or
cli
test
rcr
adc
push
lea
add
push
out
int
mov
ss
mov
jp
inc
adc
std
mov
or
sahf
or
dec
inc
xor
dec
sbb
and
xor
movs
push
lahf
rcl
mov
xor
add
scas
in
iret
es
sbb
mov
mov
or
or
and
jns
add
push
sbb
addr16
push
loopne
mov
cwde
jmp
gs
lahf
or
sub
mov
xor
or
repnz
dec
adc
stc
mov
icebp
dec
(bad)
cmc
sbb
jno
pop
jecxz
je
sbb
push
push
ja
xchg
(bad)
jecxz
call
scas
push
mov
fwait
mov
outs
rcl
cmp
jp
fwait
dec
mov
gs
fcmove
ins
sahf
pop
jno
xor
push
or
jb
pop
xchg
or
test
(bad)
aas
push
push
idiv
mov
jge
cmp
push
sub
in
sar
xor
inc
or
jnp
sbb
dec
mov
movs
test
push
jge
cmps
mov
mov
sahf
mov
ret
fsubrp
xchg
adc
movs
pop
(bad)
sahf
jl
test
xor
lock
jnp
xchg
fmul
cmp
pushf
jmp
and
cdq
xchg
xchg
xor
cli
(bad)
sub
jb
cld
inc
rol
push
mov
sub
imul
xor
cmc
sub
jns
xchg
icebp
cli
dec
jp
repnz
or
mov
mov
outs
mov
pop
sahf
jbe
or
mov
jle
and
add
mov
dec
mov
cdq
lds
call
push
gs
adc
call
ret
xlat
cmp
fcmovbe
fldenv
(bad)
in
or
test
xor
or
and
cmp
add
cmps
pop
cmp
imul
cmc
iret
xor
push
retf
and
ins
push
cmp
cmp
xor
mov
push
test
daa
pop
and
call
sbb
popa
sub
push
push
aam
and
xor
sbb
add
jp
fwait
mov
ins
sbb
inc
imul
adc
mov
mov
push
lds
dec
bswap
ja
xchg
add
in
mov
loop
fld
sbb
lea
retf
mov
xor
fidivr
mov
mov
cdq
pop
imul
or
scas
xor
(bad)
adc
(bad)
stos
jo
cmps
movs
daa
outs
xlat
xchg
leave
test
cmp
sub
jge
sub
push
hlt
xchg
int3
fstp
xchg
in
ins
xchg
mov
push
jl
popf
popa
jle
(bad)
js
nop
push
push
push
push
sub
mov
or
cmc
mov
jecxz
xor
movs
std
add
sbb
sti
movs
call
xchg
pop
mov
xlat
mov
xchg
or
cmc
mov
push
retf
jg
repnz
xor
jmp
jns
and
push
adc
sub
add
outs
push
icebp
ret
dec
clc
arpl
mov
mov
leave
pop
fsub
jge
call
jmp
sbb
jb
sub
sub
add
mov
pusha
xchg
dec
pop
stos
push
xchg
aas
cwde
fisttp
stos
(bad)
xchg
cmps
sbb
or
xor
add
pop
loopne
mov
int3
pop
and
das
mov
xor
inc
adc
sub
mov
mov
or
cld
imul
popf
lods
imul
mov
jl
fwait
(bad)
fst
pop
adc
mov
ret
call
fild
stos
bnd
adc
iret
repnz
icebp
adc
add
stos
nop
xchg
or
cmp
xchg
and
mov
add
pop
and
mov
sub
sub
mov
xchg
je
jmp
outs
(bad)
push
lods
out
dec
call
push
into
les
inc
cdq
mov
jge
shl
mov
mov
dec
call
outs
fsub
xchg
loope
pop
in
and
push
adc
cs
sar
mov
push
ins
adc
mov
jbe
xor
dec
jle
pop
add
mov
dec
into
pop
lods
pop
xor
je
push
sbb
jne
mov
ret
push
test
rol
sub
aad
push
and
mov
mov
jae
imul
dec
outs
jae
lock
mul
mov
pop
push
pop
adc
das
push
clc
popa
in
je
adc
icebp
pusha
mov
sbb
sbb
mov
cmp
sti
xchg
sub
js
jmp
pushf
xor
mov
ds
inc
gs
mov
mov
sbb
ret
or
jns
sbb
fbld
mov
into
sub
push
into
test
stc
stc
stos
and
sbb
push
push
(bad)
out
mov
or
push
aaa
fs
loopne
or
add
xchg
jg
push
outs
push
loopne
clc
retf
pop
inc
movs
mov
jmp
xchg
inc
xor
out
jp
push
ins
arpl
not
xchg
push
jle
jo
in
(bad)
pop
outs
mov
nop
stc
pop
mov
das
xchg
mov
jmp
mov
mov
push
jp
cmps
sar
in
pop
push
inc
bound
dec
pop
repnz
pop
mov
jnp
cmp
in
xlat
xor
dec
arpl
inc
push
fsub
(bad)
movs
lods
lahf
add
jb
int
jg
jbe
mov
stos
stc
bound
dec
int
dec
(bad)
aad
and
daa
int3
call
xchg
dec
xor
int
(bad)
in
icebp
imul
sub
std
sub
add
cmp
push
lods
cmp
mov
push
ss
or
(bad)
xacquire
jle
loop
in
dec
(bad)
mov
aad
out
(bad)
adc
clc
fdiv
cmps
cmps
out
retf
sar
das
test
nop
das
(bad)
sbb
jbe
sbb
fcom
std
and
jmp
xchg
pop
icebp
mov
aaa
add
mov
xor
pop
push
lock
or
adc
cmp
je
sar
rcr
and
mov
pop
mov
xchg
hlt
dec
sti
pusha
jge
inc
dec
inc
sti
outs
push
mov
(bad)
dec
jno
mov
add
ret
setg
mov
std
(bad)
sahf
je
mov
stos
aad
(bad)
movs
and
xchg
adc
iret
pop
fsub
add
into
test
icebp
sbb
jne
inc
or
push
xchg
xchg
jp
jo
xor
cli
jge
sub
bound
(bad)
push
outs
pop
arpl
fwait
sub
movs
xchg
fcmovnu
push
pop
iret
pop
sar
mov
xchg
adc
das
pop
sub
es
shl
mov
(bad)
(bad)
fs
icebp
mov
ds
pop
jmp
outs
add
das
cmp
cmps
pop
nop
(bad)
lods
js
jmp
mov
sbb
and
in
adc
js
mov
outs
daa
(bad)
jp
push
cmp
mov
aas
in
jge
loopne
inc
int3
mov
mov
mov
xor
in
dec
cmp
jmp
pop
in
in
sbb
into
and
jmp
es
into
mov
xor
int3
mov
sub
dec
mov
jge
test
inc
jp
retf
ins
jp
mov
movs
jns
je
mov
xor
xchg
sub
mov
into
ds
in
add
out
iret
js
mov
cmp
xlat
push
aad
mov
add
pop
and
fs
es
sub
psrlw
cs
cmps
pusha
das
jmp
mov
push
xchg
retf
jg
jo
(bad)
fwait
mov
out
mov
stos
xor
mov
(bad)
shl
(bad)
movs
fld
popa
mov
popa
pop
out
xor
popa
retf
dec
sbb
xchg
fnstenv
outs
int3
mov
sub
pop
cdq
jnp
sub
pop
jle
mov
cmp
fwait
add
pop
pop
nop
mov
mov
test
lahf
xchg
mov
in
jnp
imul
ror
add
sub
sti
cmp
and
xor
xchg
jg
loope
or
pop
daa
xchg
and
push
addr16
leave
or
cli
mov
int3
popa
jo
dec
mov
add
pop
ss
scas
(bad)
ror
lock
push
lahf
cmp
sub
or
xchg
push
out
aas
mov
gs
retf
shl
lds
scas
adc
and
clc
(bad)
rcr
sub
je
fld
(bad)
ja
cmp
in
or
es
fs
mov
dec
ss
scas
mov
jae
mov
dec
outs
adc
xchg
cmc
adc
dec
out
adc
and
icebp
add
xor
pop
jmp
adc
shld
imul
cmps
jmp
cwde
call
(bad)
adc
(bad)
pop
xor
arpl
cmp
pop
shr
std
xchg
rcl
mov
jmp
ficom
add
stc
mov
movs
test
and
adc
push
jnp
cmp
xchg
call
icebp
add
jae
pop
pop
pop
sti
or
jbe
dec
sbb
push
cmp
into
xchg
xchg
mov
fcmovu
mov
sub
sahf
call
fisttp
sahf
pop
jecxz
gs
jae
cli
psllq
fsub
sub
add
pusha
dec
scas
dec
add
pop
cli
mov
add
adc
pop
pop
shr
fs
shl
jp
cmp
push
not
mov
cmp
jmp
xor
stc
retf
popa
hlt
adc
cmps
sub
jno
nop
inc
mov
fnstcw
xor
or
idiv
adc
inc
cmp
adc
jne
call
les
push
daa
es
mov
jmp
retf
push
dec
cli
rcl
(bad)
or
push
cli
call
out
loop
sbb
call
cli
popa
push
mov
inc
cmps
fcom
jne
inc
sub
sbb
cmp
jb
or
jns
ds
cmp
mov
fcom
int3
add
mov
jg
dec
jle
mov
inc
cdq
mov
jle
popa
sbb
push
ds
xchg
(bad)
push
jmp
sub
mov
pushf
test
add
mov
push
ins
movs
jl
cld
xlat
xchg
sbb
add
imul
clc
jbe
pop
push
jbe
push
paddsb
out
mov
jbe
push
pusha
push
pop
add
or
sbb
fidiv
mov
mov
int
fidiv
mov
add
cmp
addr16
popf
loop
and
loop
cmps
and
(bad)
mov
cmp
dec
xchg
test
or
jge
xchg
pop
hlt
push
call
test
test
jmp
das
out
sti
adc
mov
push
sbb
jo
fimul
or
xor
(bad)
cmps
pop
jmp
xor
jecxz
mov
ins
mov
fcomp
cs
cmp
add
xor
cmp
xor
fimul
mov
in
out
sub
xchg
clc
push
or
js
mov
adc
cdq
call
sub
jp
fadd
int
sbb
fisubr
sar
push
mov
call
shr
inc
jne
push
mov
into
cmp
sbb
lods
dec
xchg
mov
in
sar
dec
sbb
mov
loopne
add
sbb
hlt
jae
and
daa
stos
dec
int3
retf
shl
adc
nop
inc
and
push
and
sbb
loope
inc
dec
push
inc
adc
add
(bad)
shr
push
pop
test
lea
fwait
push
test
sub
sbb
test
fdivr
pusha
outs
(bad)
iret
ins
mov
bound
aaa
pop
xchg
shr
addr16
adc
aaa
push
push
adc
mov
dec
ja
ins
aam
sbb
lods
shr
mov
(bad)
repnz
aad
jmp
inc
outs
pop
sub
push
out
leave
lahf
cld
sub
repz
dec
push
mov
push
int3
cmp
inc
xor
inc
pop
push
leave
xor
inc
dec
pop
xchg
cmp
cld
inc
xor
push
push
daa
xor
(bad)
cmp
div
ret
sub
dec
(bad)
aam
test
lods
das
inc
(bad)
shr
push
adc
mov
xor
sub
call
adc
push
movs
pop
call
outs
pop
cs
lods
jns
jae
mov
sbb
sbb
faddp
pusha
test
push
mov
jmp
push
sub
std
fwait
cmp
es
or
sti
xchg
cmp
(bad)
adc
add
add
cmp
push
call
mov
inc
push
fwait
push
or
es
int
sar
jmp
popf
sub
sub
aad
imul
bound
cs
xor
inc
cmp
jmp
popa
pusha
repz
pop
pop
pop
iret
adc
push
or
(bad)
dec
push
mov
mov
push
jne
sbb
add
call
or
jb
test
add
or
dec
inc
leave
sbb
das
and
cs
movs
loope
or
jcxz
inc
push
aad
imul
mov
mov
std
push
rcr
xlat
dec
rcr
stos
push
xor
push
cmp
mov
inc
cmp
mov
mov
cmps
mov
xchg
dec
ja
mov
aam
in
dec
xor
xchg
inc
dec
jl
inc
movs
les
pop
xchg
icebp
ret
sbb
iret
xchg
or
xchg
in
aas
ret
les
sbb
hlt
push
sbb
mov
xchg
mov
icebp
nop
aad
sub
hlt
pushf
ss
int
xor
push
and
ret
stos
sub
bound
pop
ins
cmp
inc
or
mov
and
mov
mov
data16
ins
shl
sbb
sbb
cmp
adc
and
push
push
fwait
or
xchg
lods
cmp
inc
dec
sub
idiv
sub
or
dec
fprem
mov
mov
int
cwde
out
fwait
or
lods
jns
xchg
and
mov
cld
jb
xor
xor
repnz
test
cli
pop
xchg
or
in
ins
inc
jge
xor
sub
out
sub
push
inc
jle
mov
in
int3
sti
pop
scas
dec
mov
cmp
mov
or
jns
push
pop
sahf
adc
test
add
or
push
sub
mov
movs
mov
jno
mov
sub
shl
push
dec
jecxz
repz
bound
or
push
in
push
(bad)
out
in
mul
push
shl
stos
push
into
cmp
or
xor
call
je
mov
add
and
adc
sub
aad
jecxz
aam
xor
sub
lods
push
adc
xor
add
inc
cmp
ror
mov
push
imul
mov
mov
dec
pusha
mov
lea
xchg
mov
push
add
inc
into
pushf
mov
sbb
mov
mov
nop
jnp
fidivr
sahf
inc
test
or
cmp
xor
ja
sbb
jae
cmps
cmps
in
and
inc
and
pop
xor
adc
push
arpl
and
aaa
or
call
imul
ins
xlat
adc
lods
(bad)
cmp
mov
shr
add
ins
test
pop
dec
mov
imul
(bad)
outs
sar
mov
sar
push
or
mul
in
push
cmp
mov
dec
imul
push
call
cdq
cmp
loop
adc
shr
sbb
popf
icebp
jo
test
push
adc
or
jnp
sbb
lds
pop
xor
mov
or
pop
add
adc
or
add
fsub
adc
or
cmp
(bad)
hlt
sbb
or
xchg
and
xor
cmp
xchg
dec
fisttp
pushf
ins
pushf
lgdtd
js
pop
fst
hlt
xlat
int
ins
imul
in
(bad)
je
out
pop
or
push
test
in
mov
xchg
adc
aad
xchg
cmp
mov
cdq
rol
adc
add
xor
fst
nop
inc
push
xchg
movs
or
xchg
pop
xor
xor
xor
ja
iret
cld
les
fdivr
sub
frstor
mov
push
das
or
inc
mov
scas
sahf
and
out
or
lds
nop
xchg
dec
repnz
xor
xchg
xor
inc
and
test
cmps
cld
jecxz
mov
dec
and
in
jmp
dec
das
and
mov
xor
sbb
jno
add
mov
sti
pop
xor
push
je
les
dec
xor
cmc
enter
add
sbb
pop
sbb
ja
jecxz
fwait
add
rol
imul
xchg
sub
xchg
retf
iret
inc
adc
loope
xor
dec
inc
dec
scas
mov
cmp
mov
adc
xor
inc
aas
in
jnp
daa
inc
enter
cmp
dec
test
outs
pop
xor
jge
pop
sbb
addr16
and
adc
sahf
push
out
jle
repz
fld
fs
add
pop
lahf
mov
fsub
push
stos
push
mov
push
xor
cli
outs
aaa
pop
jg
mov
in
inc
push
jmp
mov
cmps
leave
icebp
dec
es
shr
lods
fs
retf
sbb
xchg
cmp
scas
dec
imul
(bad)
mov
(bad)
jg
dec
hlt
frstor
movs
arpl
movs
shl
push
jge
dec
mov
xchg
push
sbb
pushf
mov
pop
sub
xor
out
jle
push
push
mov
mov
push
cmps
(bad)
mov
lods
push
lds
inc
into
ret
cmp
les
mov
xchg
lds
cld
popf
stc
cmp
inc
retf
pop
mov
or
arpl
sbb
mov
leave
cmp
mov
adc
das
stos
aaa
lahf
outs
out
pusha
or
jae
test
or
fidiv
jecxz
adc
pop
int3
mov
pushf
fst
ds
push
sub
and
call
jno
dec
sti
push
pushf
mov
retf
scas
pop
sbb
mov
adc
pop
jns
sahf
push
in
jmp
or
ds
mov
jne
fwait
imul
cmps
pusha
xlat
call
jl
call
stos
add
lahf
sbb
sub
xor
loopne
or
iret
lahf
ret
bound
inc
fistp
adc
ret
dec
and
sub
push
sub
add
mov
std
ret
push
ss
in
xor
jo
mov
mov
and
(bad)
fnstsw
xchg
leave
sti
dec
sub
shl
sahf
cmps
aaa
cdq
jbe
push
out
fadd
ds
mov
je
jecxz
push
aas
out
inc
in
mov
vmread
sbb
jle
add
fistp
jge
sub
jne
sub
es
ret
xchg
or
jno
sub
cld
cdq
int3
cmp
stc
push
ins
inc
xor
fdivr
mov
aas
retf
xor
jl
xchg
imul
repnz
inc
cmps
adc
jae
xchg
xor
push
pusha
or
ror
sahf
xor
jle
hlt
stos
adc
push
sub
sub
mov
mov
iret
or
xchg
mov
ds
inc
pop
ror
or
cmp
shl
jle
das
jecxz
aas
int3
push
pushf
loop
icebp
fcmovb
nop
mov
mov
cwde
ins
and
in
cli
pop
xor
and
das
add
xchg
mov
addr16
imul
or
and
pop
xchg
push
inc
ja
outs
outs
mov
or
or
xchg
imul
dec
pop
dec
fwait
sti
mov
pusha
dec
push
cwde
inc
adc
test
adc
in
xor
mov
or
call
les
aam
or
or
cs
test
mov
mov
xor
sete
cmp
scas
mov
dec
dec
jg
sbb
mov
inc
mov
(bad)
daa
mov
xor
sub
dec
xchg
outs
push
ins
mov
mov
push
retf
and
pop
popa
out
push
out
dec
or
addr16
mov
push
loop
sbb
push
mov
outs
dec
mov
jb
xor
jmp
pop
push
ins
push
mov
dec
xchg
or
jmp
mov
and
mov
loopne
xor
cmc
pop
sub
addr16
add
pop
xor
(bad)
sub
popf
mov
lods
sti
stc
aad
movs
stos
imul
loopne
call
adc
mov
dec
popf
aaa
and
mov
loope
mov
and
xor
aaa
mov
in
rcl
(bad)
mov
(bad)
xor
pop
add
inc
ins
xchg
inc
scas
das
xchg
mov
sbb
sbb
jbe
leave
clc
jmp
cmp
jns
mov
mov
add
sub
int
mov
stos
push
pop
cli
lds
arpl
(bad)
pop
pop
add
mov
sbb
cmp
dec
mov
inc
pop
loopne
in
jns
(bad)
fst
pop
into
hlt
push
nop
cmp
in
out
mov
outs
or
push
das
lock
cld
stc
cs
in
sbb
sbb
out
pop
mov
xor
test
neg
add
lods
ins
out
xlat
iret
or
ins
inc
fcomi
jmp
adc
jnp
cmc
or
sub
mov
adc
or
repnz
iret
and
adc
push
push
mov
mov
jl
call
jmp
adc
adc
(bad)
jge
pop
add
mov
sub
xchg
xchg
ret
pop
outs
outs
inc
or
xor
mov
xor
nop
push
lods
loop
jb
mov
in
add
jnp
sub
adc
call
adc
or
(bad)
xor
repz
cmp
fs
mov
inc
cwde
lock
add
mov
pop
pop
out
push
pop
ins
aam
arpl
int3
inc
jbe
shl
jns
into
nop
mov
out
xor
jmp
data16
mov
sbb
push
push
movs
inc
sbb
mov
test
pop
sub
rcr
pop
jl
sub
sub
stos
into
hlt
hlt
xor
sub
add
dec
aad
adc
sub
cli
lds
out
adc
mov
jle
loopne
jno
add
cmp
loope
sbb
pop
push
aam
repnz
stc
push
ret
pop
fidiv
pop
pop
push
mov
and
inc
stos
jp
aaa
fdivr
sub
push
mov
xor
(bad)
or
push
inc
bound
fadd
sahf
test
mov
sbb
fld
and
push
fmulp
mov
pop
inc
sbb
cld
or
push
adc
mov
in
popf
and
push
sahf
mov
stos
xchg
xchg
pusha
jne
dec
add
addr16
sti
das
push
and
loop
sub
retf
int
(bad)
and
jno
popa
test
mov
std
pushf
sti
call
out
rcr
xor
sub
cdq
lea
or
in
hlt
jbe
(bad)
clc
adc
pop
and
ins
pop
shr
repnz
shl
das
sbb
retf
inc
jle
mov
daa
retf
dec
mov
xor
jb
pop
push
mov
sub
mov
sbb
and
mov
push
(bad)
(bad)
or
inc
cmp
pop
inc
adc
inc
je
push
bound
repz
and
mov
dec
or
and
lea
mov
push
pop
pop
aas
retf
imul
push
add
scas
cmp
lea
push
pop
xchg
mov
(bad)
and
mov
dec
push
adc
adc
scas
xor
outs
imul
repnz
adc
stos
sbb
push
push
ss
pop
cld
xlat
xchg
or
mov
add
cmps
mov
aas
sub
call
out
xlat
(bad)
scas
leave
(bad)
leave
(bad)
in
cli
popf
mov
push
sbb
js
ds
in
bound
mov
nop
mov
ret
rol
cdq
imul
stos
jle
clc
fmul
adc
xlat
inc
jecxz
cmp
pop
pop
ss
enterw
int
jno
push
outs
push
bndstx
and
bound
cmp
test
jg
sbb
(bad)
bound
mov
pop
mov
lods
xchg
int
call
stos
mov
mov
cmps
jmp
adc
test
dec
xchg
shl
mov
bound
mov
sub
inc
dec
push
xor
pop
pop
jae
dec
sub
es
lock
jae
mov
cmp
mov
adc
retf
push
test
aas
inc
xchg
pop
icebp
pop
sbb
mov
push
pop
fimul
je
ficomp
int3
dec
int
add
aaa
or
xor
add
mov
aam
cmps
adc
jge
mov
sub
sbb
loopne
or
adc
adc
aas
inc
inc
inc
cdq
add
jmp
bound
and
mov
int3
dec
inc
jl
push
loopne
xchg
and
mov
push
int3
test
cmp
or
fisttp
clc
fadd
or
cmc
repnz
add
adc
sbb
dec
mov
call
sub
jne
adc
cmp
(bad)
xchg
push
test
cmp
sbb
and
adc
xchg
cwde
retf
in
dec
mov
es
inc
arpl
lea
and
jle
add
sub
test
sub
lock
mov
jbe
out
ins
jae
xchg
push
mov
scas
outs
pand
lods
adc
sub
xor
mov
out
sahf
cmp
sar
or
or
enter
sbb
jecxz
adc
in
test
mov
shr
in
cwde
cmp
(bad)
adc
pushf
(bad)
push
into
mov
out
sub
out
stos
and
mov
or
mov
push
sbb
repnz
stos
inc
xor
aaa
outs
rcl
nop
icebp
arpl
mov
(bad)
jmp
into
into
mov
mov
fcmovb
imul
push
jo
fild
arpl
adc
mov
pop
adc
mov
in
scas
cmp
or
pop
cli
in
movs
(bad)
mov
out
adc
scas
jno
xlat
xlat
aam
gs
(bad)
imul
push
push
mov
iret
xchg
mov
arpl
vmread
pop
(bad)
repz
or
sub
push
sahf
pop
and
ficom
adc
je
xchg
mov
add
test
(bad)
stc
mov
and
push
push
jbe
pop
data16
jmp
loop
mov
and
adc
inc
xor
dec
mov
push
jb
int3
in
fild
out
sub
in
rcr
or
mov
or
fnstenv
sub
jbe
cdq
mov
xor
dec
aad
add
inc
lock
xchg
das
call
shl
in
xchg
inc
and
cmp
push
sbb
cwde
ins
mov
pop
out
bound
(bad)
je
mov
sbb
out
sbb
xchg
in
cmp
neg
les
cmp
cld
movs
ds
pop
retf
inc
popa
inc
daa
pop
mov
loop
xchg
push
lock
stos
jmp
or
add
jo
push
push
and
aam
repnz
adc
adc
mov
sub
adc
mov
push
fadd
and
stos
adc
in
sub
ret
mov
aas
sbb
and
and
mov
sbb
clc
pop
loope
je
jp
stos
popa
cmp
push
call
jg
xor
cmc
push
fcmovnbe
rcr
xor
adc
jns
popf
lahf
pop
icebp
push
cmc
call
addr16
dec
arpl
test
mov
outs
push
adc
jns
adc
push
out
inc
std
jle
shr
sbb
lods
cwde
outs
mov
lds
inc
sub
test
mov
dec
or
sub
dec
fidiv
or
repnz
cmc
outs
or
(bad)
lds
fcmovb
stc
mov
dec
cmp
(bad)
outs
cmps
movs
aaa
scas
rcl
sub
call
fwait
and
test
lds
movs
xor
fisttp
add
fdivr
adc
arpl
sub
test
outs
jl
xchg
mov
ss
sub
cmp
fucomip
dec
dec
push
mov
dec
daa
loopne
cmp
sbb
(bad)
dec
dec
neg
(bad)
fwait
mov
leave
mov
sar
dec
inc
cdq
push
retf
pop
out
and
test
xchg
outs
fisttp
in
jae
sbb
(bad)
mov
fimul
cmps
sahf
in
jecxz
aam
mov
jge
inc
xchg
into
inc
push
clc
lea
in
jbe
ds
and
xchg
xor
adc
ss
nop
mov
adc
call
fwait
imul
sbb
inc
push
rdpmc
and
jl
int
test
ja
stc
fisubr
add
and
sbb
and
cmc
jle
mov
loopne
sbb
push
push
adc
pop
push
repz
dec
les
clc
int3
mov
mov
out
pop
pop
repnz
into
sbb
cmp
and
cmp
(bad)
jo
sbb
add
jecxz
pop
add
jge
jns
pop
mov
ins
in
scas
inc
std
scas
dec
cli
nop
adc
(bad)
bound
cmp
fcmovnu
rcr
sbb
gs
or
pop
jae
ds
or
mov
or
mov
push
pusha
loopne
jae
out
imul
lds
or
push
ss
push
push
mov
and
sahf
xor
nop
hlt
cmps
outs
bnd
scas
pop
fisub
test
sbb
fabs
adc
inc
sbb
mov
jnp
jne
jns
in
pop
xor
push
and
mov
ret
cmp
inc
out
jmp
push
icebp
sub
and
les
in
xchg
cmp
add
adc
fwait
xchg
sbb
outs
out
imul
push
dec
push
in
mov
lds
pop
leave
(bad)
cli
outs
fld
mov
scas
sub
cmps
or
in
ror
jmp
js
out
ret
add
mov
dec
int
call
out
in
mov
adc
push
mov
nop
xchg
pop
add
dec
icebp
adc
mov
mov
test
mov
into
mov
adc
inc
xchg
mov
adc
add
sbb
push
or
pop
pop
xchg
mov
and
daa
scas
fst
cmp
xlat
call
stc
push
icebp
pop
ins
clc
jle
mov
jne
mov
jmp
cld
xchg
or
nop
or
xchg
push
test
mov
arpl
test
adc
push
xchg
sbb
jne
in
mov
cmps
cmp
int
cmps
loopne
lock
loopne
out
xlat
je
fldcw
iret
popf
push
or
mov
out
ja
push
or
test
fsubr
jp
(bad)
sahf
imul
rol
sub
sub
cs
cmp
add
and
add
mov
pop
nop
jae
mov
and
fidivr
iret
pop
not
sub
xchg
mov
adc
les
sbb
jmp
cmps
cmp
add
cmp
inc
scas
aad
movs
lods
popa
dec
jnp
popf
pop
jb
push
enter
stc
fcomp
mov
pop
loopne
repz
cmps
je
mov
adc
icebp
test
ins
fwait
add
mov
scas
jmp
rol
mov
addr16
add
cmps
pop
and
fstp
loope
scas
shl
je
mov
mov
mov
inc
and
mov
dec
xchg
dec
mov
gs
adc
call
popa
mov
xor
add
inc
lods
jne
mov
sar
mov
aas
out
cdq
out
cld
mov
dec
sbb
sub
pop
push
pop
not
ret
pop
leave
(bad)
fadd
scas
gs
sub
fimul
inc
xchg
xor
aas
jg
into
test
jmp
or
ins
inc
xchg
mov
inc
not
inc
pop
movs
aam
xchg
push
or
dec
push
xchg
(bad)
xor
mov
dec
xor
(bad)
mov
mov
cmc
push
loopne
mov
dec
test
je
scas
xchg
pop
cdq
aad
mov
mov
fsub
mov
mov
sub
xor
xor
add
test
push
mov
mov
sbb
sbb
mov
cmc
cmps
sub
sbb
push
in
enter
inc
pop
mov
or
popa
xor
retf
into
jecxz
imul
sub
ja
ds
sahf
nop
mov
div
mov
xor
hlt
inc
pop
aam
shr
(bad)
retf
xchg
jne
push
xchg
add
addr16
mov
mov
cmp
retf
call
loope
out
pop
sbb
fcomp
int3
push
mov
ret
jge
add
inc
xchg
ins
pushf
div
rcl
mov
mov
fadd
sbb
mov
test
dec
jle
or
push
and
xchg
out
jmp
fld
xchg
dec
out
mov
lods
pop
neg
icebp
mov
inc
pop
test
shl
sub
sti
and
retf
push
and
add
ret
mov
js
sub
rcl
fistp
mov
mov
pop
in
test
cwde
pusha
xchg
dec
pushf
mov
mov
in
ins
(bad)
into
inc
loopne
dec
mov
xchg
jbe
cmps
jge
jmp
cld
jge
and
push
dec
into
fdiv
movs
mov
iret
cli
and
repz
inc
cdq
aam
inc
int
sbb
clc
imul
aaa
call
stc
mov
test
jecxz
push
push
fldenv
mov
sti
(bad)
sti
and
lea
mov
enter
cmp
or
shl
shl
mov
movs
call
retf
clc
push
lock
mov
jb
(bad)
sbb
cmc
iret
in
jp
mov
fnstsw
inc
inc
mov
ret
push
ret
hlt
mov
mov
test
jne
repnz
fmul
sbb
xor
mov
enter
xchg
and
xchg
jno
movs
js
ja
sub
cld
les
mov
push
retf
aas
cdq
fidivr
jnp
and
leave
outs
loope
mov
xchg
mov
fiadd
lea
inc
cli
movs
ins
jl
popa
aam
mov
sub
and
pop
mov
repz
sub
add
mov
mov
nop
pop
sahf
mov
jbe
cmc
inc
call
and
jle
mov
mov
fisub
dec
test
jne
fcomi
in
pop
dec
cdq
xchg
int3
pop
mov
xchg
push
ret
cmc
adc
popf
cwde
inc
sbb
xlat
cmp
out
test
jno
fsub
jle
movs
inc
into
jne
pop
fsubr
push
xchg
add
add
jp
fsub
cld
push
add
call
jg
sub
jg
dec
fsub
int3
call
aad
cmp
xchg
aaa
jmp
fidiv
lahf
sub
sbb
in
add
push
xchg
inc
outs
pop
xchg
inc
outs
xor
add
loope
repnz
mov
pop
mov
xor
or
out
test
jle
add
mov
or
lock
xor
inc
popa
out
jge
aam
es
test
fsub
xor
loop
addr16
call
ja
imul
cmp
repnz
cli
ret
cwde
jns
repnz
movs
xor
and
shr
punpckldq
movs
adc
into
add
je
shl
retf
test
outs
inc
sub
lock
cmps
mov
aam
clc
jecxz
and
(bad)
jl
and
aaa
cmps
daa
and
movs
dec
sbb
jne
mov
aaa
push
lahf
jne
dec
inc
int
bound
sti
xlat
mov
adc
outs
test
loopne
hlt
push
dec
xor
adc
cmp
cmp
ss
es
cmp
mov
clc
xor
jmp
pop
pop
xlat
add
add
mov
scas
lods
loopne
adc
imul
js
stos
pop
mov
dec
jo
mov
cs
outs
test
popf
adc
mov
inc
sahf
dec
mov
(bad)
std
jmp
out
mov
mov
loope
out
sbb
outs
cmps
dec
call
stos
mov
or
xchg
cmp
movs
adc
and
add
mov
stc
std
pop
in
cmp
push
pop
shl
mov
cmp
outs
or
mov
or
ret
xlat
arpl
mov
lahf
shl
push
bound
sbb
mov
gs
icebp
push
cmp
mov
jmp
xchg
pusha
cs
int3
mov
dec
js
mov
add
out
xor
popa
paddb
cli
mov
jnp
fbstp
mov
out
sbb
sub
add
sub
fucomip
fisubr
pop
lahf
xor
ror
mov
fnsave
loope
xchg
repz
(bad)
mov
xor
xchg
jo
sub
pusha
cmp
enter
mov
mov
loopne
out
mov
push
inc
xor
or
hlt
mov
or
mov
test
jg
mov
cwde
rol
mov
push
lods
and
nop
(bad)
dec
(bad)
test
jmp
sahf
inc
pop
ins
inc
mov
fcom
lods
imul
aas
mov
pop
test
xor
stc
in
movs
xrelease
add
xchg
sahf
loope
sub
or
xchg
sub
add
mov
test
and
sbb
jle
js
inc
movs
fisttp
imul
movs
dec
xchg
jo
rcl
je
js
dec
lahf
movs
jecxz
aas
xchg
test
loope
lds
add
sbb
jmp
cdq
add
clc
mov
or
sbb
push
aam
and
push
rcl
outs
call
sub
add
aam
clc
pop
adc
retf
dec
(bad)
retf
call
jmp
pop
sbb
mov
in
fs
movs
out
xchg
ins
cmp
inc
pop
adc
mov
jo
mov
push
rcl
add
cs
push
call
mov
cmp
pop
les
add
cli
(bad)
add
nop
pop
or
addr16
enter
jae
pop
(bad)
pop
test
push
fild
mov
mov
sub
(bad)
sub
fld
fsubr
inc
std
inc
or
cmp
in
adc
push
cld
mov
mov
mov
mov
mov
ja
pop
cmp
or
jbe
sub
or
imul
cld
popa
fcomp
imul
std
cmp
in
inc
popa
jge
pop
xlat
or
pop
pop
repz
lahf
in
fsub
icebp
hlt
mov
fwait
xchg
popf
dec
das
mov
xor
repz
pop
call
or
mov
fnsave
fwait
xor
add
inc
imul
and
push
movs
fwait
push
adc
add
mov
cmp
pop
iret
jns
xor
xor
sar
enter
mov
lahf
add
test
push
xchg
out
out
xor
lahf
add
sbb
adc
pop
sbb
xchg
rcr
cmp
jle
add
std
push
xchg
jp
push
shl
repnz
js
jge
mov
adc
mov
pop
jbe
dec
xchg
ret
add
cmp
dec
fsubr
fwait
iret
xor
add
mov
push
pop
jmp
cmp
(bad)
sub
jb
xor
fsubr
out
or
mov
retf
call
jo
in
jb
retf
(bad)
xor
fmul
popa
out
jns
lds
ja
or
dec
mov
cwde
cmp
dec
fdiv
inc
mov
(bad)
retf
jno
(bad)
jmp
mov
mov
xchg
add
xor
(bad)
or
mov
movs
dec
iret
adc
fs
pop
imul
push
addr16
and
lahf
cmps
fwait
jnp
and
jns
sub
(bad)
or
rol
cmps
mov
push
sbb
add
lods
sbb
fs
or
xchg
out
sbb
xor
push
cmp
lods
xchg
cld
gs
iret
sub
pop
movs
push
cli
std
es
pushf
and
test
pop
cs
or
ja
fs
xor
in
call
jb
arpl
ror
xchg
loop
mov
mov
dec
les
repz
data16
mov
mov
cmp
jl
mov
sbb
sub
mov
xor
pop
movs
mov
aas
mov
fld
push
xor
cmps
mov
cld
mov
cmps
jle
and
je
loop
gs
cmp
js
xchg
mov
and
mov
imul
mov
add
pop
push
push
pop
ficomp
mov
loope
mov
out
(bad)
cmp
dec
mul
stos
fdiv
cmc
add
push
imul
push
fistp
daa
jae
and
sub
or
sub
dec
or
mov
int3
dec
or
xor
pop
jns
enter
adc
shl
dec
add
into
jae
jbe
cli
test
jno
popf
add
sub
(bad)
pop
in
and
xor
sub
inc
fs
dec
xor
sub
fisttp
nop
test
lahf
mov
dec
icebp
(bad)
in
adc
dec
lock
mov
inc
push
mov
add
mov
adc
add
daa
cmp
in
nop
fsub
dec
pushf
xchg
pushf
pop
push
cmc
sub
inc
mov
jae
xor
mov
and
jnp
test
les
push
push
adc
inc
repz
out
inc
and
clc
std
dec
xchg
movs
cwde
xor
stc
sbb
scas
jl
xor
xor
cli
enter
add
outs
xor
sti
dec
int3
xchg
rep
ror
mov
push
test
jecxz
pop
daa
xchg
ror
jl
sub
cs
push
repnz
sbb
xor
adc
neg
out
sub
adc
xchg
movs
mov
push
das
xor
mov
push
(bad)
rcr
sbb
gs
push
test
aam
nop
neg
ds
jae
pop
into
(bad)
push
rcl
or
pop
push
aad
std
push
mov
mov
movs
ss
pop
out
xchg
les
test
sbb
or
add
nop
les
popf
movs
f2xm1
stos
test
mov
cmp
pop
sbb
rcl
jae
ret
xor
and
adc
jo
es
xor
jb
mov
hlt
push
leave
popa
test
std
mov
pop
loope
adc
mov
xchg
pop
mov
cmp
daa
jb
jo
icebp
test
call
aaa
cdq
sti
pop
push
neg
dec
hlt
stos
movs
inc
jle
in
cmp
adc
xlat
push
sub
jno
sar
into
and
aas
lods
ret
pusha
fistp
push
mov
dec
cmp
inc
ror
lds
or
cmp
cmp
int3
mov
leave
cmp
mov
adc
rcl
lahf
nop
inc
adc
sti
adc
mov
xchg
sbb
mov
scas
push
xchg
aad
jns
div
xor
mov
int
lods
iret
pop
test
fs
je
test
mov
loope
mov
cmps
test
pop
and
and
xor
daa
inc
sub
enter
pop
outs
cmp
lock
sbb
call
sub
(bad)
leave
sbb
adc
xchg
retf
out
xor
inc
sub
add
aas
ret
sub
lods
test
(bad)
js
jge
into
addr16
push
xchg
int
pop
jge
jne
jmp
iret
lea
push
call
jnp
xchg
xor
in
jmp
fidivr
jo
push
mov
lea
push
jne
cmp
xchg
or
repz
cwde
or
sbb
inc
in
ja
repnz
xchg
mov
scas
icebp
add
pusha
xor
fisttp
ret
cld
xor
lea
xchg
fstp
les
mov
loopne
popa
leave
mov
mov
pop
xchg
inc
and
jg
xchg
sti
add
and
fisub
inc
scas
inc
cmp
inc
cmps
stos
or
xlat
mov
cmc
push
test
sahf
fnstenv
or
outs
push
shl
stos
jo
xchg
mov
sub
mov
xor
mov
mov
daa
aam
mov
bound
(bad)
xor
stos
into
out
(bad)
jge
jae
mov
inc
fisub
xchg
push
jg
add
fs
mov
push
xchg
pop
out
cli
xchg
mov
sub
lock
or
lds
pop
aas
jl
(bad)
pop
xchg
stc
or
jbe
fst
fisttp
ds
pop
adc
inc
adc
mov
sbb
add
lods
enter
hlt
sar
cli
stc
stos
loope
pop
and
fst
nop
xchg
pop
shr
js
pop
scas
jmp
sbb
sub
or
xchg
loop
push
mov
jl
data16
jg
movs
push
scas
rcr
ficomp
jmp
mov
adc
cs
sub
sub
je
mov
sar
dec
push
(bad)
mov
jbe
adc
test
clc
or
pop
stc
movs
add
pop
test
or
(bad)
and
pop
in
push
test
cmp
pop
mov
xlat
pushf
push
mov
int3
sub
aam
idiv
push
mov
add
and
aas
lds
cmps
jl
dec
mov
ror
stc
sub
adc
jg
add
lock
les
add
jp
shl
mov
cld
mov
out
pop
push
shl
movs
xchg
jmp
mov
aas
ret
pop
inc
shl
(bad)
shl
into
or
push
pusha
in
push
sbb
mov
push
add
cwde
pusha
enter
sbb
pop
mov
sbb
aaa
sbb
push
push
mov
shr
sbb
pop
ret
mov
mov
cmps
pop
mov
int
data16
sbb
xchg
mov
pop
jmp
sub
cmp
rol
sub
inc
icebp
mov
mov
pop
stc
and
int3
cmp
hlt
aam
pop
xchg
icebp
(bad)
leave
imul
ins
add
test
sub
jl
sar
inc
stos
jmp
(bad)
jbe
hlt
shr
out
push
out
in
add
fsub
retf
cli
leave
adc
iret
dec
shl
(bad)
sbb
ss
cmps
(bad)
dec
mov
mov
push
cmc
mov
mov
loop
cmp
cmp
mov
mov
add
jne
push
jp
punpcklwd
mov
movs
ret
clc
inc
add
jmp
add
dec
jo
push
sar
gs
jp
inc
ins
jmp
pop
hlt
icebp
xor
fcom
dec
(bad)
fst
and
(bad)
cwde
nop
push
adc
mov
pop
jnp
popa
xchg
and
cwde
icebp
xor
rcl
cmp
repz
jo
and
pop
(bad)
arpl
sub
or
movs
add
mov
xchg
pop
repnz
xor
push
out
ror
xchg
and
in
mov
push
push
mov
mov
cmp
test
and
out
dec
clc
xor
fsub
mov
ret
and
jl
popa
or
das
out
dec
leave
ins
push
pusha
(bad)
aas
sub
outs
or
inc
into
jp
bound
and
cs
add
mov
pop
or
in
pop
cmp
xor
(bad)
das
mov
adc
or
jp
xchg
nop
inc
test
(bad)
pop
fldenv
jmp
pop
xor
retf
adc
call
dec
mov
push
or
fmul
xchg
in
das
out
dec
add
pop
jmp
xor
fsubr
inc
fsubp
and
adc
lds
(bad)
in
jmp
ror
movs
ret
xor
cld
inc
outs
imul
scas
imul
mov
les
dec
std
adc
xlat
sub
mov
cmp
(bad)
rcl
mov
pushf
cdq
sbb
movs
arpl
xor
scas
jg
lods
les
mov
mov
mov
xchg
ds
inc
cmp
jmp
xchg
fistp
sahf
pop
mov
cmps
les
dec
add
push
test
pop
mov
push
mov
inc
mov
inc
ret
adc
inc
outs
dec
jmp
mov
jle
cmp
loope
xchg
movs
adc
and
jo
(bad)
add
or
fsubr
mov
nop
push
push
test
mov
mov
rcl
dec
sub
ins
(bad)
imul
pop
ja
pop
xor
mov
scas
sub
pop
mov
push
shr
jmp
ret
mov
arpl
pop
out
pop
cmps
dec
mov
cmps
and
push
ret
lods
or
shr
fwait
mov
adc
shr
lea
bound
arpl
mov
fld
sahf
mov
dec
lods
jg
jecxz
xor
dec
mov
bound
jmp
add
ins
mov
dec
enter
(bad)
call
pop
std
imul
shl
lock
(bad)
retf
jg
add
popf
dec
inc
sub
fiadd
fwait
or
jbe
cmp
fisttp
jp
jno
das
loopne
cmp
ror
sub
mov
mov
mov
cmp
and
mov
outs
jg
adc
push
fisub
jmp
aad
gs
mov
ds
cmp
mov
iret
dec
mov
arpl
loopne
pop
jbe
pop
(bad)
(bad)
mul
loop
and
sbb
mov
outs
pop
xchg
idiv
call
(bad)
rcr
clc
cmp
int3
movs
sub
add
call
daa
js
dec
leave
jbe
out
jmp
test
fnstsw
cmp
adc
xchg
hlt
jl
cs
sahf
shl
push
clc
clc
mov
sbb
in
bound
in
rcl
call
sbb
fld
jno
test
jns
mov
(bad)
sar
jb
xor
pop
test
call
add
div
and
inc
and
inc
jecxz
dec
mov
pop
scas
arpl
xchg
jl
call
adc
rcr
jnp
dec
movs
addr16
push
inc
mov
inc
add
mov
fist
xchg
or
sub
pop
xor
cmps
mov
cmps
ds
jg
aaa
xor
push
or
enter
xor
movs
jp
xor
cs
or
push
mov
or
sbb
ret
shr
jp
dec
aad
jl
cmps
lahf
fadd
lahf
test
push
adc
lods
mov
jo
add
xchg
jmp
ffree
xchg
sbb
into
(bad)
ror
leave
(bad)
in
dec
ins
ret
shl
or
es
pop
lods
and
out
sub
pop
mov
les
gs
loop
jecxz
pop
add
scas
sti
icebp
jb
cmp
jmp
or
xor
xor
cmps
jmp
dec
out
aas
or
push
(bad)
das
push
xchg
lahf
add
in
shl
mov
cmp
dec
inc
daa
(bad)
pop
xor
cwde
out
test
inc
xchg
or
ds
push
mov
enter
xor
cwde
adc
pop
xor
and
adc
call
loop
fld
jge
ja
adc
out
xchg
push
push
dec
call
addr16
in
add
xor
mov
ret
mov
retf
lea
inc
outs
(bad)
std
or
sqrtps
mov
leave
adc
jmp
rcr
inc
enter
lods
ss
ror
jmp
mov
ds
jl
or
xchg
or
xchg
retf
mov
sti
cmp
and
jmp
xchg
test
sbb
int3
pop
inc
pop
add
cld
xchg
ds
or
call
in
or
dec
mov
ins
fld
retf
pop
gs
cmp
in
stc
aam
out
out
or
js
(bad)
xchg
dec
ins
sub
jmp
loope
mov
(bad)
fiadd
in
adc
mov
mov
jg
jecxz
jb
bswap
xchg
std
scas
and
xor
push
add
mov
repnz
push
fst
cmps
cmp
jecxz
aam
mov
call
adc
sub
mov
adc
sbb
cmp
rep
push
shl
outs
loop
xlat
(bad)
push
hlt
add
mov
cmp
jns
xchg
(bad)
xor
bound
loop
es
icebp
xchg
in
cld
gs
lock
fbld
cmp
sub
push
xchg
push
mov
dec
xor
into
pop
daa
ret
inc
ror
dec
jl
mul
mov
pop
push
sbb
(bad)
mov
dec
push
(bad)
iret
or
neg
and
loopne
rcl
cwde
les
es
arpl
popf
sub
out
ins
(bad)
jle
fimul
mov
mov
pushf
adc
scas
adc
or
jg
ins
fild
jne
sub
push
imul
sub
cmc
gs
push
adc
add
mov
push
inc
adc
popf
jae
jbe
scas
sahf
out
push
cld
je
les
or
pushf
ss
ret
push
and
mov
pop
nop
test
jg
out
movs
or
dec
and
mov
inc
lea
xor
mov
das
ins
push
xchg
call
ror
pop
mov
xchg
or
mov
jmp
ficom
bound
call
inc
lahf
add
sbb
inc
or
repnz
add
inc
sub
loop
sbb
mov
cmp
fild
xor
or
inc
in
pop
out
cld
push
das
inc
mov
mov
xor
shl
or
inc
sti
push
mov
neg
jle
leave
sub
into
jo
mov
fimul
mov
ss
clc
jo
xor
pop
mov
mov
test
push
leave
in
fwait
retf
mov
rol
sub
mov
dec
push
fcomp
inc
les
adc
mov
adc
cli
pop
sub
inc
and
push
jp
sbb
es
(bad)
push
mov
mov
nop
adc
mov
cmp
mov
mov
and
ror
(bad)
int3
retf
div
icebp
inc
jo
mov
outs
stos
pop
cld
dec
xchg
add
xor
jnp
xchg
adc
repz
push
es
cmp
aaa
xchg
stos
fimul
adc
cmp
ss
sti
or
add
ja
xor
push
or
shl
inc
pop
pushf
push
out
mov
cld
jmp
xor
xor
fiadd
mov
shr
pop
aas
cmp
or
or
iret
in
inc
ret
pop
mov
xchg
nop
popa
pop
jae
call
push
xor
out
pop
xchg
mov
shl
mov
mov
and
stos
pop
aam
jb
lahf
adc
mul
cmps
xor
push
aad
retf
rcl
push
xor
adc
imul
test
inc
mov
(bad)
(bad)
jno
xchg
dec
adc
xchg
cmps
sar
dec
ins
cmp
retf
inc
or
xchg
movs
out
adc
imul
cmp
inc
dec
gs
rol
sar
pop
adc
in
jp
fnstsw
shl
add
dec
sti
mov
loop
or
jb
sub
sbb
push
jns
fsubr
icebp
loope
xchg
stos
in
sbb
push
and
xchg
jns
jl
pop
sbb
cld
cmps
cmp
cmp
sahf
cmp
je
ss
popa
inc
xor
or
fnstenv
loopne
imul
cmp
test
and
add
add
jp
adc
fmul
pushf
push
push
in
add
sbb
ja
pop
adc
repz
jae
std
jg
or
pop
sub
out
out
movs
push
mov
(bad)
mov
add
inc
mov
push
jl
adc
jmp
rcr
inc
mov
ins
push
sub
nop
jg
lea
into
imul
add
mov
das
lock
stc
mov
push
repz
push
test
int
push
pop
fisub
xchg
add
mov
stos
xchg
ss
mov
ficom
ins
dec
pop
ficomp
les
jg
pop
retf
xchg
xchg
clc
or
fisttp
lods
jo
aad
ja
cmp
repz
inc
mov
ins
mov
mov
loop
add
es
ja
fdiv
jmp
mov
sahf
or
popa
out
clc
mov
retf
aam
xchg
pushf
jne
int
in
les
mov
aaa
(bad)
out
xchg
pop
mov
mov
dec
sbb
stos
fidiv
inc
aaa
gs
cmc
cs
jmp
inc
call
mov
cwde
sti
sub
jae
idiv
aam
push
mov
mov
sbb
add
lock
retf
test
dec
jl
retf
jge
adc
hlt
mov
or
mov
test
mov
pop
xor
inc
mov
jmp
out
movs
mov
inc
cmc
test
hlt
push
in
or
fld
mov
push
dec
mov
add
enter
and
sub
cmp
in
out
xchg
in
in
daa
and
pop
retf
cmp
call
add
repz
aad
mov
cld
(bad)
pop
out
mov
add
stos
ds
adc
push
xchg
iret
not
sbb
mov
fdivr
sub
out
sbb
shl
in
and
fadd
jo
jmp
stc
idiv
sbb
sub
sub
mov
sbb
push
pop
stos
mov
push
jmp
jecxz
mov
mov
aad
out
sub
sub
xchg
jmp
xchg
sub
sub
loope
xchg
jp
cld
imul
push
or
rcl
and
cmc
and
je
pop
xor
xchg
std
cmp
mov
xlat
inc
jb
(bad)
xchg
test
lods
dec
xchg
sub
(bad)
cld
mov
mov
or
mov
outs
jne
movs
std
fabs
sbb
inc
jns
aas
mov
push
jmp
into
mov
inc
pop
cli
popa
jl
bound
xor
adc
mov
add
adc
out
test
mov
mov
jl
fs
fcmovbe
les
mov
mov
cwde
lahf
mov
scas
add
test
dec
cmps
adc
adc
outs
add
jno
scas
stos
fdivr
jbe
mov
jecxz
push
lea
and
std
scas
adc
jmp
movs
sbb
mov
jp
push
mov
xchg
xchg
add
cwde
add
ja
fwait
mov
fmul
cmps
gs
cmp
mov
cwde
test
loopne
daa
dec
lock
test
lock
stc
daa
iret
ror
mov
add
fwait
jecxz
test
cmp
bound
clc
cmp
loope
jmp
dec
data16
stos
dec
fs
ja
and
lahf
test
enter
sub
pop
mov
cmp
jmp
cmp
fcom
pop
mov
mov
mov
or
and
shl
jbe
jbe
inc
movs
mov
add
dec
stc
pop
aam
mov
fwait
mov
fldenv
fwait
mov
jns
xchg
mov
jnp
jne
sub
mov
dec
and
adc
aas
dec
push
pop
into
scas
retf
js
xor
aaa
mov
int
mov
push
shl
cs
iret
(bad)
icebp
jmp
cmps
(bad)
arpl
iret
mov
frstor
xchg
cmp
xchg
push
retf
in
pop
xor
push
xchg
cs
mov
or
imul
and
fs
pop
aas
dec
pushf
mov
imul
test
std
sub
xchg
sub
bound
sbb
xchg
mov
jp
ss
cmp
fsubp
sub
(bad)
xchg
cs
push
push
and
xchg
arpl
jmp
imul
mov
sub
in
fist
mov
repnz
sub
xor
pop
add
jne
jno
push
xchg
ret
iret
jg
fdivr
push
out
xchg
mov
stc
lea
sub
xchg
mov
mov
sar
and
gs
adc
cdq
push
inc
mov
lahf
sti
cdq
rcr
mov
or
test
pop
or
pop
neg
xchg
ror
dec
repz
adc
jae
ret
or
push
pusha
xchg
daa
cdq
outs
(bad)
xchg
sbb
jns
dec
mov
push
add
jmp
mov
adc
jae
mov
inc
test
icebp
loop
jbe
push
xchg
or
add
inc
mov
aas
test
inc
add
push
(bad)
outs
rcl
cmp
addr16
fucomp
sbb
fsubr
cmp
loop
push
inc
prefetch
sbb
dec
pop
pop
cmps
push
jnp
pop
and
fnstcw
movs
maxps
movs
bound
das
jo
pop
je
push
mov
in
add
push
popa
jmp
jmp
ins
jnp
inc
inc
mov
jmp
cwde
inc
ss
neg
fs
call
or
push
fwait
pop
xor
sub
cmps
jg
out
lods
cld
push
scas
rcr
ret
addr16
push
jbe
push
adc
mov
mov
pop
rcr
icebp
div
int
into
inc
jbe
cmp
sub
(bad)
cmp
dec
not
nop
repnz
fistp
cwde
outs
push
(bad)
nop
pop
mov
dec
cmc
xchg
cmp
cmp
and
int
pop
mov
cli
xchg
mov
fcomi
adc
aas
sub
pop
repz
daa
(bad)
(bad)
popa
enter
adc
mov
pop
push
push
aas
shl
(bad)
mov
push
rcl
call
bound
in
push
add
cwde
mov
repz
data16
pop
jae
push
cdq
push
pusha
mov
jge
push
dec
jecxz
xchg
ss
fmulp
fst
cmp
retf
or
adc
out
fstp
fisttp
(bad)
clc
(bad)
pop
or
cmps
fwait
sub
or
mov
lock
jae
ret
jb
or
in
aaa
dec
ds
mov
aas
mov
int
retf
push
mov
xchg
sub
xor
mov
js
aam
dec
(bad)
sar
mov
les
jle
rcr
stos
push
jns
shl
or
add
xchg
jl
repnz
scas
jno
adc
xchg
pop
je
dec
adc
cmp
push
add
mov
scas
test
xchg
and
std
leave
push
add
xor
mov
enter
ds
inc
ret
push
and
test
stos
adc
idiv
ret
push
outs
cwde
dec
push
mov
sub
outs
gs
loop
ror
popa
cmc
popa
lea
xchg
cwde
jno
mov
cdq
sub
sbb
push
jg
xor
dec
je
push
addr16
mov
pop
or
and
in
imul
adc
es
aad
div
fs
mov
fsub
push
sbb
dec
lea
ja
adc
or
pop
xchg
cwde
or
cmp
aam
inc
repnz
rcl
sahf
xchg
mov
out
push
in
test
je
loop
xchg
and
std
inc
test
arpl
in
imul
sbb
jl
xlat
jo
leave
pop
daa
xor
xor
loop
retf
fld
test
push
jge
inc
and
lods
dec
jl
out
stc
test
sub
xor
movs
mov
pop
mov
gs
aaa
adc
repz
in
and
mov
ret
movs
pushf
pop
dec
(bad)
repnz
mov
xor
and
jmp
mov
pop
pop
jne
std
or
xor
xor
xchg
sub
fmul
ins
movs
shl
cmp
add
mov
in
mov
out
mov
cmp
add
int3
imul
push
dec
mov
pop
ror
mov
xchg
scas
shr
sub
aaa
dec
inc
(bad)
mov
ins
addr16
gs
mov
bound
sub
inc
(bad)
jmp
xchg
sub
cmp
cmp
fdiv
cdq
cmps
pushf
sbb
fld
inc
aad
add
add
div
mov
mov
and
push
in
int3
mov
sbb
push
in
test
mov
pop
mov
and
ins
inc
retf
jb
fwait
and
rol
mov
into
idiv
jb
in
ret
mov
int
mov
xchg
xchg
add
(bad)
je
adc
test
enter
push
jae
fstp
push
hlt
das
jmp
scas
enter
adc
(bad)
lea
push
fmul
jb
jns
push
push
bound
icebp
xor
jo
adc
stos
fwait
test
xchg
cwde
sub
iret
nop
mov
xor
outs
jmp
inc
sub
lock
out
pop
xchg
fidivr
inc
(bad)
hlt
mov
or
push
jmp
dec
cmc
push
xchg
fmul
mov
in
call
lock
(bad)
mov
retf
jle
ins
into
add
or
jge
xchg
jno
int3
add
inc
rcl
mov
and
mov
mov
aaa
cmps
inc
push
ss
and
les
sbb
test
out
adc
dec
xchg
and
ficom
xor
adc
fistp
mov
nop
jne
and
mov
out
cdq
mov
pop
push
push
cmp
inc
in
xor
or
xchg
in
fsubr
add
cmp
pop
std
(bad)
xchg
mov
jmp
dec
out
pop
push
test
xchg
jg
cwde
movs
inc
gs
in
ja
push
stc
(bad)
setl
(bad)
adc
outs
pop
mov
hlt
sub
sahf
push
repz
mov
out
loope
inc
fcom
retf
bound
mul
mov
sub
jp
movs
repz
pop
mov
sar
and
in
dec
fwait
aaa
sub
pop
jmp
and
inc
ret
xor
add
rcl
fdivr
movs
rcl
jle
popf
test
cmc
lock
add
pop
jge
sbb
adc
jb
xor
cmc
jmp
pop
cmp
push
lock
adc
push
ror
mov
les
outs
push
mov
mov
xor
imul
push
xchg
sbb
cmp
inc
mov
or
scas
adc
cmp
nop
(bad)
cwde
pop
fild
xchg
or
cmps
ret
pop
(bad)
rol
bound
jmp
jg
mov
add
push
test
sti
pushf
mov
adc
add
add
mov
dec
jne
inc
cmp
fnsave
jl
sbb
inc
adc
adc
jae
pop
sbb
mov
inc
pop
jae
and
ins
dec
pop
lds
std
pop
gs
jl
ret
cwde
xchg
(bad)
nop
or
mov
cmp
inc
push
stos
push
lds
push
push
fisubr
lock
push
xchg
push
fist
imul
mov
xchg
adc
xor
pop
mov
push
(bad)
xlat
clc
enter
test
ja
ja
adc
(bad)
pop
cmc
cld
dec
fsub
fimul
popf
mov
fcmovnb
cmp
sbb
dec
call
(bad)
addr16
push
sub
scas
jmp
inc
loopne
fs
fmul
in
into
cwde
jo
xor
ins
fdivr
imul
xchg
das
(bad)
mov
xor
iret
fwait
jae
pmaddwd
cmp
loopne
and
inc
arpl
mov
sbb
jg
test
jno
sub
and
xor
fs
clc
sub
push
or
in
xchg
sub
mov
xchg
sti
sbb
mov
aam
lds
pop
ins
pop
in
loopne
inc
sti
push
xchg
(bad)
adc
sbb
(bad)
ds
pop
mov
adc
jmp
push
dec
fwait
mov
sar
mov
pop
push
jp
mov
repnz
sar
sub
push
dec
push
or
jmp
add
dec
mov
dec
add
lods
xchg
stc
jne
inc
push
dec
push
mov
imul
dec
addr16
movs
ins
mov
in
jnp
lods
push
jo
icebp
test
(bad)
into
movs
(bad)
call
mov
and
push
jge
pop
mov
retf
int3
xchg
inc
cmp
je
xor
call
stos
inc
cwde
in
add
ja
test
sub
stos
xchg
mov
cld
fst
and
adc
jge
xchg
scas
dec
scas
and
test
inc
inc
ja
pop
xchg
and
jmp
dec
add
call
inc
stos
adc
imul
add
fdivr
xchg
test
rol
mov
mov
cld
push
mov
sub
jb
(bad)
jnp
loop
in
ror
ret
xchg
inc
xchg
cmps
ins
out
xchg
xchg
adc
loop
int
mov
(bad)
mov
inc
icebp
arpl
(bad)
imul
mov
mov
push
inc
leave
xchg
pusha
cmps
int3
fild
pop
inc
mov
or
call
xor
out
xor
cli
cwde
or
cmp
bound
repnz
and
out
(bad)
mov
xor
add
mov
data16
sub
pushf
adc
(bad)
in
cmp
pop
pop
adc
es
dec
shl
jl
push
test
ret
mov
scas
adc
out
inc
fcomip
cld
inc
jno
data16
aas
lods
or
and
jae
push
(bad)
add
dec
inc
rcr
aas
ins
pop
out
xor
fucomp
mov
mov
fidivr
mov
xlat
ret
dec
test
scas
sbb
sub
add
inc
rcr
or
and
(bad)
pop
xor
or
pop
les
aaa
inc
popa
or
(bad)
cmp
or
out
sbb
or
outs
lds
and
imul
(bad)
mov
cmp
fiadd
lds
xor
xor
mov
jecxz
aaa
aad
adc
popf
mov
lods
loop
stc
or
add
sahf
pop
or
adc
or
stos
adc
movs
mov
dec
cmps
mov
fidivr
sub
xchg
push
out
call
sub
jecxz
xchg
(bad)
push
and
or
jge
nop
jg
fcmovne
cmp
mov
test
inc
sbb
out
mov
jb
jp
xchg
or
xchg
and
les
pushf
ja
mov
mov
xchg
xor
mov
sbb
xchg
xor
ds
or
movhps
add
push
sub
sahf
shr
aas
mov
jle
add
loop
push
hlt
std
outs
dec
pop
xrstor
mov
xor
adc
inc
ret
cmp
shr
jmp
mov
dec
push
add
mov
jmp
or
dec
jmp
test
nop
mov
sbb
(bad)
sahf
jb
fstp
dec
push
mov
cmp
ret
lods
jp
mov
cmc
dec
sub
mov
lods
mov
cdq
fdivr
pop
loop
aas
daa
in
scas
mov
not
or
xchg
xor
dec
jne
loope
je
fdiv
inc
sbb
pop
xchg
add
repz
add
xchg
mov
popf
pusha
(bad)
out
xor
pop
(bad)
jg
inc
inc
inc
xor
push
jmp
jnp
js
fisub
mov
mov
out
jle
xchg
(bad)
jge
xor
mov
cmp
popa
and
test
cdq
into
frstor
dec
adc
out
xlat
loope
outs
(bad)
push
and
push
and
lea
fwait
(bad)
shr
data16
(bad)
std
data16
cdq
loope
pop
repz
(bad)
sub
push
je
loope
adc
cmp
outs
cmp
cmps
push
pop
and
xor
imul
(bad)
dec
jne
xchg
or
adc
or
cmp
mov
mov
pop
outs
xor
inc
pusha
and
loope
cld
in
jp
ds
nop
pop
mov
mov
cmp
sti
jb
ret
cld
stos
lock
xchg
in
sub
dec
cmps
in
test
adc
icebp
sub
adc
iret
jl
loope
xchg
call
jmp
jg
nop
retf
stos
pop
mov
pop
add
xlat
sub
dec
cwde
outs
push
push
cmp
in
cmc
pushf
mov
sbb
or
jbe
and
sti
xor
out
push
ret
hlt
in
mov
push
aas
stc
inc
pop
das
(bad)
icebp
iret
sbb
sbb
jno
test
xchg
int
xchg
push
pusha
adc
test
scas
inc
sub
cmp
test
mov
inc
(bad)
jg
cmp
add
iret
dec
dec
call
adc
lahf
pop
movs
xchg
out
jmp
retf
test
add
push
jg
inc
adc
in
movs
or
sbb
imul
xchg
(bad)
xchg
adc
inc
adc
in
outs
idiv
mov
test
adc
sar
pop
push
pop
push
dec
jno
jbe
push
dec
fld
mov
adc
mov
aam
mov
test
test
pushf
cs
mov
xchg
popa
(bad)
jne
mov
cli
xor
xor
retf
xor
jns
push
fldcw
and
int
inc
or
lods
cwde
in
adc
cmc
mov
mov
in
cmp
push
icebp
xchg
in
retf
dec
scas
jbe
popa
nop
adc
(bad)
in
dec
pop
fcmove
or
sti
ds
xor
lea
push
jae
in
pop
mov
out
in
pop
cli
(bad)
cmp
or
or
inc
mov
jge
dec
ret
add
es
cmp
fwait
repz
inc
adc
dec
jns
loopne
push
sbb
jecxz
popa
jae
or
cs
pop
add
es
xchg
popa
or
movs
jae
(bad)
popa
test
sti
stos
sub
stc
(bad)
mul
mov
cdq
inc
shr
shr
iret
test
mov
pop
leave
and
cmp
mov
adc
pop
xchg
punpckldq
xor
push
stc
push
jne
fidivr
(bad)
lahf
popf
xor
dec
mov
bound
and
rcr
dec
cmc
inc
inc
shl
lock
cmp
push
dec
mov
mov
mov
sbb
and
push
stos
pop
add
mov
sbb
cmps
dec
xchg
(bad)
not
test
sbb
lahf
xor
adc
out
jg
and
jb
jl
lods
cs
aas
adc
(bad)
je
(bad)
pop
mov
je
call
and
fnsave
sbb
xor
lods
add
mov
inc
in
scas
mov
xchg
enter
mov
cwde
cmp
inc
jge
xchg
mov
pop
aas
out
and
inc
fld
fidiv
sub
pop
jbe
sti
mov
and
or
rcl
outs
stc
sbb
mov
sub
adc
jns
es
fnstsw
adc
cmp
mov
mov
hlt
cmp
in
and
and
scas
call
push
mov
add
test
pop
test
movs
xor
mov
push
and
shl
push
jge
loopne
into
mov
and
inc
jmp
repnz
pop
dec
and
loope
les
arpl
jbe
ret
iret
in
jmp
je
imul
or
mov
mov
mov
push
cmp
jl
mov
adc
rcl
dec
cmps
pop
mov
and
sbb
retf
push
out
cmc
mov
test
xor
cmp
lods
mov
movs
sub
shl
xchg
aas
movs
and
aaa
and
push
jle
test
mov
cli
(bad)
pushf
xchg
lea
jmp
xchg
or
js
push
pop
pushf
in
jg
dec
popa
ja
cdq
int
retf
cli
jno
fbstp
movs
retf
cmp
xor
daa
sub
push
push
sbb
add
xor
jbe
rcl
popf
or
and
mov
cmps
(bad)
jbe
mov
mov
in
test
jmp
retf
fwait
(bad)
sbb
pop
xchg
in
mov
dec
xor
pop
push
out
push
mov
jae
jno
dec
movs
push
ret
xlat
add
aas
push
arpl
pop
sub
test
adc
in
jg
retf
dec
pusha
mov
inc
mov
jge
nop
iret
enter
sbb
lahf
sbb
and
xchg
sub
jb
into
pusha
cmps
test
pop
dec
sub
or
push
lahf
repz
or
lds
push
in
(bad)
mov
ss
jg
jne
jne
repz
inc
cmp
mov
sbb
stos
dec
push
lahf
sbb
lods
shl
dec
in
popa
mov
mov
xor
popf
cmps
gs
sbb
(bad)
out
fwait
push
xor
dec
mov
fwait
nop
in
jo
cs
sysexit
push
xor
ret
cmp
push
add
fld
ins
sub
dec
pop
leave
adc
push
psllw
in
and
rcl
out
pop
mov
hlt
es
cmp
gs
and
fild
sbb
cmp
mov
cdq
mov
push
cmp
shl
ret
mov
dec
cmps
lods
dec
cmc
sbb
sahf
(bad)
daa
call
sbb
add
cs
lock
sti
pop
out
dec
push
into
mov
(bad)
jmp
sbb
bound
mov
cmp
mov
jno
pusha
xor
mov
jmp
mov
out
push
push
xchg
xor
outs
(bad)
and
movs
fnop
xchg
cmp
xchg
jb
rep
loopne
jle
fld
cmp
xchg
ins
xchg
xchg
mov
rol
pop
push
test
inc
pop
(bad)
test
nop
sbb
inc
pop
repnz
(bad)
popa
fstp
jb
ret
test
or
(bad)
nop
loopne
inc
sete
loope
aaa
imul
or
mov
pop
test
retf
push
mov
or
stos
daa
fldenv
scas
or
push
mov
pop
in
inc
sbb
push
(bad)
xchg
mov
adc
mov
in
or
dec
push
lea
mov
pop
int3
xchg
addr16
and
in
adc
fild
mov
push
cli
mov
cs
fld
ins
xchg
(bad)
mov
push
mov
mov
aad
and
inc
dec
jl
lea
into
sub
stos
jns
mov
mov
loope
mov
jne
imul
loop
outs
out
sbb
mov
scas
push
imul
call
add
cs
sbb
call
mov
fistp
jo
cmp
push
jnp
push
jge
mov
pop
mov
xchg
inc
hlt
test
rol
jge
cs
sub
imul
loop
in
fwait
xchg
push
retf
or
fisubr
add
rdtsc
sbb
add
aam
add
add
stos
scas
sub
mov
ret
das
adc
add
pop
stos
pop
adc
dec
shrd
div
in
addr16
xlat
shr
dec
cmp
fistp
jne
fiadd
test
cmp
in
push
cdq
mov
lahf
imul
push
popa
mov
add
cwde
adc
mov
cmp
adc
add
(bad)
adc
jae
push
mov
nop
std
enter
xor
call
les
add
dec
aaa
and
gs
push
mov
mov
out
add
adc
popa
adc
push
cmp
xor
mov
movs
ss
pop
loopne
test
dec
mov
cmp
fild
bound
pop
icebp
in
fisttp
rcr
stc
lods
inc
jge
hlt
fisttp
(bad)
cld
(bad)
adc
imul
daa
shr
int
and
fs
outs
and
cmps
jbe
add
imul
sbb
lods
inc
jnp
xor
sar
dec
iret
leave
xor
mov
push
mov
mov
jle
std
jmp
xor
sbb
(bad)
pop
clc
(bad)
pop
add
fbstp
inc
jne
iret
dec
dec
or
sub
ret
iret
mov
pop
inc
les
jmp
mov
jno
xor
mov
test
hlt
jb
fdivr
aad
mov
mov
fsubr
(bad)
xchg
sti
xchg
xchg
ds
dec
pusha
lods
adc
dec
sub
popa
adc
stos
fisttp
jne
dec
xchg
lods
xor
mov
cwde
outs
pusha
pop
mov
mov
xor
leavew
popa
stc
xchg
fs
outs
retf
jmp
push
rol
movs
lds
sub
inc
jg
popf
cld
or
enter
and
jge
xchg
in
inc
int
xor
pop
pop
mov
add
hlt
retf
pop
mov
scas
retf
or
lds
out
xor
xchg
or
pop
stc
jp
stc
add
jb
sub
mov
xor
aaa
sub
dec
jae
cs
inc
push
mov
stos
push
add
mov
inc
shl
aam
out
and
pusha
cmp
cld
push
out
xor
sbb
das
outs
pop
stc
mov
bound
call
imul
mov
push
pop
and
fldcw
xchg
clc
jb
stc
mov
jle
cld
push
inc
inc
jle
mov
rcr
adc
adc
or
in
enter
rcl
ins
jbe
out
ss
jecxz
leave
jle
and
dec
outs
cdq
add
add
mov
inc
ss
and
cmp
xor
js
add
pop
call
das
dec
and
call
jo
cmc
and
and
pushf
mov
jge
jl
push
popf
sbb
(bad)
imul
ss
inc
inc
cli
sub
movs
pop
jbe
sahf
push
scas
mov
sub
rcr
push
test
cwde
jmp
dec
and
mov
xor
bound
lea
fidivr
int3
jl
push
ret
cmp
mov
ror
push
js
mov
out
adc
xor
pop
xchg
daa
repz
mov
inc
scas
sbb
out
aas
mov
mov
mov
popa
into
mov
mov
sbb
test
jnp
dec
jno
push
(bad)
push
adc
in
dec
daa
push
rcr
lea
jmp
cdq
int3
loopne
or
in
imul
sub
mov
aas
arpl
stc
sub
leave
fnstsw
push
outs
mov
xchg
ins
ins
add
pop
out
xor
or
and
lds
mov
cdq
mov
or
add
push
mov
hlt
and
push
popa
push
js
mov
fidivr
pushf
jbe
pop
js
push
sbb
xor
enter
cmp
push
cs
and
jmp
out
popf
pop
gs
dec
add
gs
ret
dec
jmp
fbstp
imul
sbb
mov
pop
(bad)
cmp
adc
sub
loopne
pusha
ss
addr16
jmp
dec
jae
ret
sub
out
ss
hlt
shl
xchg
addr16
inc
push
inc
les
mov
lahf
(bad)
jmp
or
(bad)
clc
xchg
fwait
stos
sub
pop
lock
dec
xchg
repz
add
stos
pop
sub
je
dec
jge
and
(bad)
sbb
xchg
(bad)
cmp
in
jp
push
jmp
repnz
frstor
push
cmp
dec
(bad)
in
inc
fisub
not
inc
dec
pop
ins
fnstenv
inc
xchg
clc
adc
adc
(bad)
lock
inc
outs
cmp
xor
fnstcw
test
and
fld
movs
jne
adc
je
mov
movs
mov
imul
out
inc
add
sbb
jb
aad
inc
jno
call
jmp
data16
cmp
dec
dec
imul
inc
sahf
adc
jecxz
mov
sub
jne
cmp
push
jno
xchg
in
or
imul
outs
jg
or
mov
loope
icebp
outs
mov
cmp
pushf
sbb
hlt
inc
xchg
ror
push
add
cwde
mov
movs
sbb
adc
popf
ds
repz
(bad)
xor
push
ss
xchg
nop
push
dec
stc
sbb
and
cmp
out
inc
lahf
fdiv
leave
mov
bound
add
add
sub
fbld
movs
xlat
fist
fstp
das
ret
lds
retf
pushf
jae
rol
outs
mov
sbb
push
mov
push
rol
cmp
test
pop
xor
xor
sbb
inc
lahf
xchg
or
inc
jmp
and
pop
sub
cld
das
jl
in
stos
movs
add
jmp
arpl
adc
jbe
dec
lds
push
mov
xchg
pop
xchg
aas
add
addr16
jecxz
adc
lds
push
movs
sbb
cmp
fist
popf
jns
test
imul
pop
ins
ins
mov
jo
xchg
jg
mov
jns
push
cld
mov
call
and
xlat
in
imul
retf
into
mov
outs
mov
sub
pop
cmp
arpl
dec
loop
push
jecxz
andnps
xchg
mov
cmp
push
movs
xchg
ror
shr
cli
je
loope
push
mov
add
in
jns
jo
shl
sar
xor
sub
cwde
shl
es
fld
sbb
mov
adc
xchg
dec
test
jecxz
dec
mov
loopne
ins
ss
gs
or
mov
sbb
dec
and
xchg
rol
cmp
ins
mov
dec
inc
pop
dec
mov
sbb
sub
adc
clc
push
mov
mov
loop
mov
xor
scas
fld
cmp
mov
cli
cld
pop
or
daa
js
push
popf
jmp
(bad)
pusha
into
add
inc
lock
pop
cmp
ror
pop
add
cmc
pop
sahf
add
stc
hlt
jno
mov
lods
xchg
rcl
test
fxch
adc
daa
imul
xchg
add
pop
fwait
sub
sahf
xchg
adc
and
ja
lds
dec
jae
cwde
rol
lock
retf
sbb
pop
mov
and
sti
rol
call
jle
or
(bad)
movs
into
inc
cmp
and
jmp
ins
inc
aam
scas
sbb
das
cdq
mov
dec
adc
fwait
inc
call
icebp
inc
mov
jne
push
mov
xlat
xor
mov
mov
push
stc
and
not
arpl
jp
popa
cmp
dec
sahf
push
in
jecxz
fwait
push
mov
dec
inc
jp
sbb
repz
adc
fiadd
iret
sbb
std
sbb
xchg
mov
dec
xchg
and
xchg
add
xchg
xor
xor
ins
push
sbb
retf
test
inc
xchg
xor
dec
sbb
ja
xchg
loope
daa
test
push
and
cmp
aam
ss
push
loopne
push
add
cmp
dec
test
add
pand
fnstcw
dec
mov
movs
imul
sbb
pop
xchg
in
(bad)
lahf
cld
test
dec
movs
jecxz
hlt
les
stc
mov
adc
jg
xchg
adc
cmp
or
enter
xchg
rol
jl
mov
jno
inc
jb
xchg
test
sbb
pop
push
out
repz
pop
pop
mov
push
pushf
add
adc
add
add
push
and
lods
sub
dec
add
cwde
pop
popf
test
cmp
inc
movs
stos
out
push
pop
sbb
dec
leave
pop
test
xchg
dec
mov
movs
xor
xchg
mov
mov
mov
(bad)
pop
or
sar
xchg
clc
inc
lock
jbe
jae
inc
les
push
lods
xchg
in
imul
adc
retf
int
ins
(bad)
scas
xchg
out
jp
or
sbb
ffreep
push
cli
pusha
push
jno
dec
mov
jecxz
aaa
push
fmulp
or
addr16
inc
out
xor
ja
push
push
pop
movs
(bad)
int3
cld
xor
fst
xchg
(bad)
icebp
loope
int3
in
mov
jbe
cmp
cld
daa
pop
aad
xor
in
not
clc
fimul
push
inc
sbb
loop
mov
push
outs
sti
scas
jle
dec
mov
aad
pop
fnsave
gs
sbb
or
jno
dec
pop
mov
iret
out
(bad)
loopne
and
movs
inc
lods
adc
lods
fs
repz
inc
xor
cmps
cmc
pop
jg
fcomi
enter
in
cmps
icebp
and
jns
mov
pop
mov
adc
pop
int
jbe
mov
push
bound
mov
in
and
inc
in
arpl
test
xor
add
rcl
jle
dec
mov
inc
and
pop
mov
imul
outs
mov
cmps
pop
inc
iret
ss
(bad)
scas
movs
dec
xchg
mov
adc
mov
cwde
ret
push
or
xchg
mov
fidivr
into
iret
add
sti
leave
movs
call
std
out
mov
adc
out
push
and
and
ds
popf
mov
mov
mov
adc
jmp
mov
lods
push
test
fwait
mov
adc
fnsave
mov
sbb
retf
ds
pop
out
cmps
scas
xchg
push
icebp
mov
jle
test
add
lock
push
push
adc
xchg
test
cli
cmps
or
jnp
movs
cwde
jl
clc
adc
fbstp
scas
(bad)
std
cmc
lods
stos
inc
add
jmp
adc
aaa
movs
repnz
outs
jns
dec
call
stos
mov
push
outs
popf
test
scas
out
and
add
nop
pop
xchg
xchg
jmp
pushf
(bad)
repnz
jae
outs
adc
jne
nop
or
pop
mov
cmp
or
in
rol
mov
jl
pushf
pop
sub
xor
loopne
int
push
repz
repnz
(bad)
in
inc
ins
add
out
stos
mov
aas
pop
xchg
push
fistp
lods
sar
adc
add
cmp
mov
lea
icebp
repz
push
stos
sahf
xor
jg
lods
stc
aas
xchg
nop
inc
cmps
push
loop
frstor
sbb
ss
inc
retf
es
cmp
inc
in
data16
sub
xor
inc
shr
xchg
in
push
pop
in
jmp
jle
push
fdiv
mov
push
lds
push
(bad)
out
nop
adc
mov
loope
shl
push
jnp
sti
nop
rcl
and
jnp
inc
out
sub
nop
into
pop
out
or
adc
cmp
mov
stos
movs
fsubr
cs
add
sub
fidiv
inc
jle
sbb
cwde
mov
adc
mov
dec
clc
repnz
and
pop
inc
loop
pop
je
mov
pop
icebp
xor
sub
test
jecxz
push
shl
(bad)
loopne
nop
aas
jmp
adc
add
cmps
jns
repnz
retf
jg
mov
fmul
mov
in
fstp
pop
ins
fnstcw
dec
adc
jmp
lahf
xor
sub
aaa
lods
push
pop
push
dec
out
icebp
mov
adc
fidivr
xchg
clc
jp
aaa
xor
cmp
mov
cmps
adc
cmp
rcl
mov
jae
and
jecxz
sub
(bad)
pop
and
out
ret
fldcw
imul
pushf
int
addr16
jbe
and
push
div
jle
int
mov
mov
js
sub
xchg
xchg
fisttp
movs
jne
pop
out
push
adc
popaw
adc
leave
jo
inc
mov
std
(bad)
pop
xchg
mov
push
mov
cmps
dec
lahf
loopne
cmp
(bad)
in
scas
(bad)
test
(bad)
mov
call
ja
imul
icebp
mov
push
push
xchg
cdq
scas
cmp
push
mov
or
call
pop
stos
scas
out
neg
rol
popa
sbb
sub
push
mov
sar
push
dec
cmp
push
loope
(bad)
out
inc
jge
aaa
mov
mov
jmp
mov
sbb
inc
ins
sub
ds
pop
aad
int3
mov
aas
neg
xchg
sub
and
clc
aad
lahf
jmp
xor
call
adc
push
xor
das
sub
(bad)
bound
mov
shl
sbb
ret
in
not
inc
pop
mov
int
pushf
movs
pusha
xor
test
movs
adc
ds
cmp
add
js
mul
cmp
in
xor
in
(bad)
adc
pop
aas
sahf
inc
cmp
push
xchg
add
xor
sbb
and
inc
out
sub
or
push
mov
jb
daa
add
outs
and
mov
outs
movs
rcr
adc
fs
push
inc
outs
xor
add
mov
jle
and
mov
cmp
loop
and
ins
lock
movs
ss
in
jmp
adc
inc
daa
mov
xchg
ins
pop
ins
mov
push
in
mov
fadd
cdq
inc
or
pop
jae
out
shr
mov
shr
nop
stos
sub
lods
into
sbb
or
ins
cld
sahf
jb
xchg
push
mov
cmp
aaa
xchg
(bad)
(bad)
loope
mov
sbb
pop
ins
xchg
and
mov
jecxz
lea
jmp
imul
std
cmp
pop
aad
out
mov
dec
cdq
fimul
neg
hlt
push
outs
div
(bad)
(bad)
sub
mov
(bad)
retf
and
jle
mov
fcom
cmp
jp
sub
pop
pop
jb
pop
adc
int
jl
(bad)
jle
dec
sar
rcl
mov
mov
jo
aad
iret
or
sub
mov
gs
fldcw
mov
sub
sub
inc
adc
scas
loop
xchg
mov
stos
mov
in
push
or
and
loop
ret
shl
lds
sbb
inc
out
xor
mov
mov
sbb
jge
addr16
add
jl
xor
xor
xchg
xor
cmps
cli
(bad)
imul
add
jns
pop
jb
mov
(bad)
mov
mov
xchg
ja
add
scas
inc
mov
push
jae
outs
addr16
push
and
ret
mov
jb
fld
mov
pop
(bad)
fdivr
jbe
xchg
dec
fwait
dec
lods
es
sti
push
cs
ds
push
retf
sahf
sub
mov
(bad)
aad
arpl
xor
neg
add
out
jo
frstor
movs
mov
inc
inc
mov
add
rcl
ss
and
aas
icebp
das
and
stos
jno
sbb
loop
data16
add
cmc
sub
or
cmc
push
movs
out
fs
mov
iret
test
xor
push
ror
cdq
rcr
mov
xchg
push
(bad)
and
pop
sub
pop
jno
in
mov
mov
shl
into
pop
in
aad
mov
pusha
(bad)
push
popf
inc
and
xchg
mov
int3
push
xchg
ret
push
dec
fstp
sub
xor
scas
pop
adc
lock
mov
loopne
test
stos
test
lock
inc
adc
ins
call
mov
mov
push
out
test
lock
std
xchg
jmp
loope
xchg
xchg
push
rcl
cmp
rcl
mov
sbb
fst
das
es
push
int3
push
sbb
fsubrp
int3
xchg
mov
mov
jmp
jle
mov
push
mov
gs
and
scas
push
addr16
iret
test
popf
jae
xchg
fsubr
and
sbb
xlat
rcr
xchg
fwait
push
sbb
fwait
pop
xchg
hlt
mov
ins
inc
jnp
push
shl
push
into
push
stos
shl
into
int
or
jmp
inc
(bad)
push
or
ins
and
push
xchg
outs
mov
enter
cmc
call
cmc
push
mov
retf
xchg
lahf
inc
push
inc
xchg
xchg
jle
outs
(bad)
jg
mov
(bad)
mov
stc
xchg
gs
jne
mov
ret
pop
push
scas
adc
mov
mov
jne
cmps
les
stos
pop
add
test
bound
jno
push
jns
out
mov
push
xchg
xor
cs
adc
or
and
add
lods
ds
ror
cwde
jle
adc
mov
dec
gs
or
and
lock
inc
dec
jecxz
pop
mov
fld
xor
pop
dec
test
into
inc
sbb
mov
mov
(bad)
aas
inc
call
int3
sub
jnp
(bad)
pop
std
jle
arpl
fmulp
add
imul
movs
jmp
jae
mov
mov
inc
icebp
dec
popf
mov
xor
mov
in
sbb
mov
(bad)
and
(bad)
ret
repnz
gs
retf
pop
daa
sub
mov
jno
push
mov
in
push
fldenv
rcl
add
sbb
pop
lahf
in
ret
jmp
mov
shl
cmp
into
push
in
bound
sbb
dec
mov
mov
xor
sbb
jp
sub
pusha
push
loopne
out
ret
push
pop
sbb
movups
ds
outs
(bad)
cmps
aad
jb
ins
mov
xchg
mov
dec
push
jle
jmp
(bad)
pop
xor
sti
jae
or
mov
add
and
add
mov
test
sbb
jecxz
jnp
xor
adc
xor
jae
in
out
xlat
xchg
aad
(bad)
push
cmp
pop
cli
jg
mov
les
cmp
les
mov
and
fcom
mov
mov
and
pop
scas
mov
xchg
test
(bad)
sbb
cli
push
xchg
or
push
ds
and
mov
mov
es
std
mov
in
or
int3
cmp
sub
mov
frstor
or
icebp
(bad)
fwait
outs
mov
cmp
outs
cli
sub
setno
xchg
je
fsubp
sub
adc
in
lahf
adc
cwde
mov
mov
sahf
nop
cmp
lds
mov
xchg
jge
mov
pop
sbb
(bad)
mov
lods
aas
repz
sub
jno
addr16
retf
cmp
out
add
cli
inc
pop
mov
or
ret
loop
sbb
mov
and
cld
(bad)
fnstsw
and
in
adc
mov
adc
jge
fwait
(bad)
(bad)
fild
cld
mov
push
and
pop
xor
xchg
aaa
xchg
xchg
jle
dec
int
out
arpl
add
pop
adc
xor
sahf
xchg
imul
ja
movs
push
jp
cmps
add
stos
inc
daa
movs
xor
(bad)
out
mov
cmps
stos
mov
es
mov
jo
loope
inc
cmps
clc
mov
or
push
inc
test
adc
je
adc
test
push
add
fsub
scas
std
mov
mov
xchg
ins
add
xchg
push
cmps
jo
pop
loopne
nop
lea
ret
fcmovb
test
cmp
int3
mov
sub
adc
pop
out
inc
mov
xchg
in
mov
(bad)
loopne
leave
xor
cs
stc
jno
enter
sub
push
mul
ins
outs
sub
and
jnp
fmul
mov
imul
cmps
adc
pop
pusha
leave
test
mov
cmp
hlt
fwait
inc
cmps
(bad)
pop
mov
sub
test
or
or
jno
stc
inc
mov
jno
jnp
aam
cmp
xchg
push
mov
push
cld
loop
push
fdivrp
data16
pop
pop
jp
xchg
jle
arpl
lock
ror
test
ins
pop
push
popf
push
jg
out
lahf
add
pop
fsubr
sbb
xchg
jle
push
scas
into
mov
sub
popf
ins
fldcw
test
adc
mov
cmp
aam
int
and
and
or
dec
mov
mov
nop
mov
cmp
sar
(bad)
imul
enter
mov
xchg
jae
jno
pop
(bad)
cld
or
push
sbb
ins
push
sbb
push
mov
sub
mov
in
sbb
es
fadd
imul
lds
inc
push
push
jae
xchg
ins
inc
lock
rcl
jge
into
inc
sbb
ror
fmul
xor
and
jns
out
mov
cdq
push
fdivp
sub
int
(bad)
iret
or
push
pop
jb
sbb
mov
aam
xchg
sub
int
mov
add
int
or
xchg
popa
mov
push
mov
inc
fadd
inc
adc
dec
inc
sbb
pop
imul
es
pop
lods
add
cmp
jb
or
cld
ret
(bad)
sub
dec
xor
ja
hlt
or
cmps
jle
call
dec
sbb
fstp
(bad)
idiv
test
add
push
lods
outs
dec
call
sub
pusha
loopne
mov
daa
jp
shl
adc
std
call
or
mov
or
push
daa
nop
sti
xchg
loopne
xor
test
xchg
push
adc
dec
dec
jae
ja
imul
mov
in
xor
fcmove
stc
inc
ins
js
scas
jno
sbb
adc
sbb
xchg
in
mov
into
jp
out
cs
pusha
aaa
sub
mov
in
bound
stos
outs
xlat
sar
xchg
mov
mov
in
mov
(bad)
mov
jo
fadd
in
xchg
jmp
push
cmp
stos
mov
cs
ja
sar
shr
jp
xor
iret
mov
mov
jno
rcr
pop
not
and
adc
adc
sub
das
or
dec
loope
leave
adc
imul
(bad)
push
cdq
inc
lahf
xchg
stos
call
jb
push
enter
add
and
stos
jle
xor
jne
push
dec
xor
jno
pop
mov
mov
inc
(bad)
call
repnz
aaa
xchg
xchg
fsub
retf
fld
mov
(bad)
or
push
fidiv
mov
arpl
sbb
jne
ror
rol
ror
and
in
adc
fld
es
fadd
dec
mov
jnp
(bad)
outs
fimul
xchg
das
(bad)
aad
je
push
ds
jno
call
(bad)
lock
popa
xlat
(bad)
lods
jge
sub
mov
push
fist
stos
sub
push
or
xchg
jb
fucomp
push
sub
fbstp
and
pop
sub
dec
or
jae
dec
mov
push
lods
or
in
ret
adc
jp
cmp
rol
test
inc
out
inc
movs
std
adc
dec
les
mov
sub
and
popf
neg
adc
dec
mov
push
add
jno
data16
scas
es
xor
rcl
xor
pushf
xor
xor
stos
adc
push
out
push
das
mov
push
cli
sbb
mov
add
test
rol
aaa
jo
push
mov
jecxz
in
xchg
xor
(bad)
out
cld
scas
mov
jmp
call
in
or
out
mov
sub
xchg
loopne
push
aaa
cmps
retf
fidiv
push
aad
lods
sub
call
xchg
in
add
aad
hlt
inc
xchg
xor
adc
xchg
clc
jae
bound
fdivp
jle
inc
imul
jg
dec
nop
stc
cwde
jnp
test
dec
shl
xchg
pop
scas
mov
inc
loop
mov
cwde
inc
mov
movs
xchg
in
add
mov
jmp
vandnps
imul
mov
adc
mov
hlt
ins
call
pop
(bad)
daa
int3
xchg
inc
clc
call
pop
or
ror
jge
aam
loope
push
call
pop
leave
mov
add
dec
fcomp
ret
mov
jno
(bad)
in
fwait
sub
aas
rol
add
xchg
sub
dec
sbb
push
stc
setp
sbb
sbb
inc
in
pop
xchg
inc
std
mov
or
pop
cmp
imul
lds
xor
cmps
ss
test
fld
sbb
retf
mov
fstp
mov
xchg
into
outs
jmp
call
cmp
jbe
push
sub
jb
das
sub
call
cmp
jmp
mov
(bad)
frstor
in
mov
ja
cmp
shr
jmp
call
hlt
inc
dec
mov
inc
out
hlt
retf
cwde
add
mov
push
rcl
xor
mov
mov
jns
pop
dec
mov
cmp
pop
adc
adc
push
xor
add
pusha
jmp
push
fwait
stc
out
je
mov
fwait
pushf
inc
pusha
shl
push
xor
push
nop
xchg
aas
cmps
and
loope
sub
in
dec
mov
sbb
call
cmp
shr
stos
loopne
jg
mov
push
push
mov
retf
hlt
cmps
add
hlt
jp
stos
inc
and
sub
xor
ret
add
repz
jo
pop
sub
xchg
add
mov
adc
push
sbb
xchg
add
mov
(bad)
fwait
test
stos
das
xor
adc
mov
bt
cdq
ror
or
cmp
out
into
xchg
cmp
pop
nop
or
or
leave
mov
pop
push
outs
outs
add
outs
xor
(bad)
jb
(bad)
fwait
cmps
lock
out
inc
dec
mov
shl
data16
jno
fdiv
fisubr
repnz
cdq
sbb
fsubrp
sub
pusha
ins
and
mov
cmp
mov
jmp
sub
retf
clc
jp
push
pop
shl
add
add
mov
gs
scas
mov
repz
lods
enter
out
fst
sahf
sbb
js
pusha
jp
test
xchg
icebp
cmps
mov
xor
dec
daa
outs
jg
jle
mov
ss
xchg
jl
aaa
cli
movs
xor
fcmovbe
test
daa
cld
jl
push
mov
add
leave
pop
daa
pop
aam
(bad)
mov
test
test
mov
mov
add
jmp
retf
dec
dec
jecxz
cmc
xchg
gs
fnsave
mov
mov
xchg
cmp
ins
xchg
imul
stos
or
or
ret
jl
pusha
out
bound
cmp
add
mov
xor
xor
(bad)
mov
pushf
call
push
je
mov
rcl
mov
in
cmp
repnz
imul
hlt
jo
xor
sbb
jns
not
jmp
jl
ja
sysenter
push
dec
out
xor
sar
cdq
dec
cmp
mov
imul
dec
fwait
mov
loope
add
xchg
js
ds
(bad)
repnz
test
ret
iret
lahf
call
sbb
inc
sub
popa
push
jbe
(bad)
aad
pop
cmp
movs
div
add
mov
fidiv
inc
pop
jae
lss
or
addr16
call
or
mov
popa
lea
pop
push
xor
dec
sbb
cli
jecxz
bnd
fcmovbe
sub
xor
test
mov
lea
jmp
inc
cli
push
mov
dec
jbe
in
dec
jbe
loope
mov
pusha
adc
mov
adc
cmp
loope
add
cld
xchg
adc
(bad)
lock
sub
and
add
mov
or
stos
sbb
xchg
dec
jmp
out
(bad)
mov
outs
pop
mov
mov
jge
lock
inc
ja
push
cmp
xchg
mov
rcl
push
add
retf
or
xor
mov
(bad)
icebp
sub
shr
push
std
push
imul
repz
cmp
test
out
rcl
push
sbb
test
(bad)
cdq
xchg
or
push
jno
fcom
adc
inc
(bad)
out
fwait
gs
les
xchg
fcmovbe
or
hlt
cmp
xor
je
adc
sub
jo
push
xlat
ds
sti
sbb
fnstcw
imul
pop
imul
add
das
aad
or
movs
cmc
pop
dec
nop
lsl
test
stc
in
adc
jb
xor
cmp
sti
mov
imul
es
aas
cwde
jp
adc
sbb
aam
ss
push
and
jg
lods
mov
and
mov
int3
and
fidiv
xchg
dec
pop
cwde
xor
adc
scas
jg
mov
inc
repnz
and
repz
(bad)
fldenv
jg
shl
cwde
ficomp
out
cmp
in
je
cmps
rcr
pop
push
fdivp
push
inc
pop
mov
and
sahf
mov
cmp
mov
cmp
outs
es
inc
adc
ror
mov
and
je
fs
(bad)
js
mov
js
mov
dec
lods
iret
inc
push
repnz
xor
je
mov
imul
sbb
mov
push
mov
mov
out
add
inc
cmp
or
ficom
inc
inc
in
push
xchg
ror
mov
mov
loope
les
jae
bnd
into
dec
push
sub
(bad)
movs
(bad)
cmc
retf
ins
dec
mov
mov
arpl
out
fwait
adc
fnstenv
pop
fnstcw
jmp
jecxz
mov
aam
and
dec
in
fsub
xor
adc
inc
cmps
xor
test
fwait
xchg
sbb
add
mov
rol
pop
jecxz
les
xor
in
push
and
shl
and
xchg
pop
cwde
aam
mov
(bad)
je
cmp
push
test
es
inc
sbb
jp
mov
jecxz
imul
sbb
sub
mov
(bad)
mov
iret
mov
dec
stos
mov
(bad)
in
test
jecxz
cmp
pop
xchg
ss
xchg
cmps
rcl
gs
cli
mov
inc
stos
or
push
cli
sti
ins
xchg
mov
sbb
mov
adc
sub
mov
xchg
ja
mov
test
cld
cmp
lds
into
cdq
cdq
dec
push
sti
fdiv
icebp
std
xlat
mov
jo
dec
outs
push
imul
call
cwde
mul
sbb
ja
jae
pop
das
pop
cmp
xchg
push
std
pop
mov
adc
frstpm(287
push
push
xor
je
cmps
gs
ins
pop
(bad)
bnd
inc
or
cmp
push
dec
pop
jbe
mov
popf
dec
sbb
nop
out
mov
add
or
int
add
push
jl
push
push
mov
mov
mov
neg
iret
jae
ret
or
mov
sbb
movs
popf
test
scas
ja
and
cmps
sbb
lock
(bad)
fisttp
fiadd
mov
adc
neg
aam
mov
mov
dec
popf
aaa
push
mov
jmp
scas
repz
mov
(bad)
ins
sbb
adc
cmc
iret
xlat
int3
in
stos
jge
push
imul
iret
push
fst
cli
add
push
add
cwde
std
movs
cs
cdq
mov
pusha
jmp
ds
push
fcomip
hlt
mov
inc
call
mov
mov
loop
dec
aas
jg
test
cmp
scas
adc
loope
jp
sub
or
push
fnstsw
cdq
mov
push
mov
pop
push
mov
xchg
in
fs
dec
je
mov
into
imul
in
and
xchg
lods
(bad)
pop
les
repnz
and
adc
cmp
ja
aam
add
push
call
int3
lods
jns
test
mov
mov
mov
mov
sbb
(bad)
xor
sbb
adc
mov
xchg
call
icebp
jae
test
clc
call
sub
movs
pushf
jmp
and
push
idiv
inc
xchg
or
std
arpl
in
shl
adc
lock
cdq
popa
and
movs
imul
sbb
mov
inc
pop
pop
or
int3
jle
sub
test
cdq
jns
cmps
fs
jo
ja
shl
dec
inc
outs
retf
adc
repnz
adc
les
fild
jge
(bad)
clc
rol
test
xchg
out
push
sub
or
jmp
ret
pop
mov
ins
and
aaa
cwde
mov
push
cdq
fisubr
dec
xor
cmp
loopne
pusha
xor
or
ficomp
jo
sub
add
adc
xchg
shl
outs
push
xchg
jns
sbb
mov
enter
popa
sub
mov
cmp
push
cs
out
or
mov
and
es
(bad)
xor
add
popf
or
sub
into
add
enter
jns
cmc
js
inc
movs
cmp
or
sbb
das
or
xchg
mov
xor
leave
mov
sub
adc
imul
ret
iret
adc
lahf
cmps
std
call
in
jbe
loopne
sub
inc
ss
pushf
mov
mov
inc
mov
and
add
dec
pop
or
or
pop
fild
sti
or
push
adc
jae
fcomp
iret
(bad)
or
test
stc
sub
fdiv
(bad)
nop
inc
jge
xchg
push
mov
in
push
sub
outs
push
pushf
ss
or
sbb
loopne
sbb
aam
imul
(bad)
pop
cmp
sub
movs
mov
rcl
inc
shr
mov
mov
xor
inc
ins
cmp
mov
jnp
xchg
xchg
movs
pop
lds
out
pop
push
sbb
fs
xor
mov
aas
adc
ret
mov
fadd
push
xchg
add
mov
leave
test
jle
mov
and
push
mov
add
in
and
pop
xchg
out
inc
jg
xor
xchg
call
adc
pop
cmp
ret
stos
cdq
pop
fs
aaa
cwde
adc
adc
push
std
add
sbb
dec
jp
outs
retf
or
aaa
cmp
dec
add
daa
sub
test
mov
mov
pop
fwait
inc
xchg
addr16
(bad)
aad
jg
mov
(bad)
dec
lds
lds
lock
std
outs
ror
dec
(bad)
xor
and
ror
popf
fcom
mov
mov
and
aas
adc
mov
(bad)
sbb
addr16
sub
push
mov
add
jo
icebp
mov
sub
sahf
int
and
dec
fcomi
lock
inc
jp
and
inc
cwde
fcom
jns
ficomp
movs
sub
and
aas
xchg
movs
and
fdivr
cs
and
out
nop
ficomp
mov
aaa
adc
pop
test
dec
jmp
mov
dec
sub
xor
gs
push
cmp
imul
aad
and
std
jl
mov
test
mov
mov
push
fsubr
loop
and
sub
sar
out
push
leave
in
aas
jno
jae
inc
jne
aad
jp
adc
xchg
push
stc
push
pop
retf
in
shr
mov
push
outs
loope
movs
fild
cld
fsub
fsubr
cwde
scas
aam
xchg
nop
movs
imul
cmp
push
fs
adc
push
data16
je
xlat
pusha
mov
lock
fisub
jmp
loopne
dec
cmp
ret
imul
loop
jmp
dec
and
ins
mov
repnz
adc
pop
fmul
and
jl
and
aam
arpl
or
push
or
or
sbb
push
add
push
shr
xor
push
mov
add
or
inc
cld
bound
aaa
iret
add
cmp
repz
jecxz
dec
cmps
and
adc
(bad)
mov
mov
push
imul
cwde
ss
push
inc
or
mov
loope
xor
mov
cmp
or
jge
adc
(bad)
mov
mov
das
ficom
es
add
add
(bad)
aaa
les
fisubr
lock
idiv
cmps
xchg
pop
ret
shl
push
xor
iret
in
adc
fwait
pop
out
test
inc
xchg
rcl
jmp
adc
jno
out
fs
mov
push
pushf
sbb
pushf
popf
or
scas
retf
in
shr
mov
std
mov
pop
and
jae
add
xor
jmp
or
jmp
out
cmp
rcr
call
std
mov
or
or
in
xor
xor
sub
cmp
xchg
jnp
hlt
js
mul
aam
ficom
jle
ins
scas
sub
sbb
cmp
jle
cld
xchg
add
mov
mov
dec
sub
fwait
je
mov
imul
pop
rcr
test
sub
sub
add
out
ret
jnp
xor
imul
xchg
pop
pop
outs
push
mov
in
mov
(bad)
inc
lea
push
iret
lock
cli
fild
cmps
popa
cwde
sub
es
data16
jo
out
pop
pop
out
test
arpl
push
mov
mov
or
ret
jb
mov
dec
jg
clc
lods
rcl
cs
adc
and
mov
mov
cmps
or
cli
(bad)
(bad)
lock
in
fist
mov
shr
and
loop
cmc
or
dec
lahf
leave
cwde
or
mov
xchg
sbb
ret
pusha
dec
push
mov
cmps
inc
iret
mov
push
hlt
mov
ret
and
div
test
or
and
loope
dec
into
cmp
(bad)
out
iret
cmp
push
outs
mov
mov
(bad)
ror
mov
pop
enter
cmps
lock
je
sbb
das
mov
xor
push
mov
push
inc
nop
mov
icebp
push
loope
inc
and
pusha
aam
pop
xchg
inc
pop
cmp
inc
push
cmp
inc
or
in
mov
daa
fisub
pop
jecxz
sbb
push
fild
test
push
mov
pop
jne
and
mov
jbe
add
pusha
daa
xchg
cmps
push
push
bnd
push
jne
mov
dec
aas
push
cdq
jb
aad
ret
(bad)
cli
ror
je
imul
push
cmp
xlat
jb
ins
jmp
and
xor
or
popf
and
and
push
jg
gs
jmp
js
daa
fidivr
scas
stos
mov
test
fldenv
shl
adc
rol
push
mov
jmp
movs
repnz
lahf
(bad)
mov
mov
pop
mov
test
add
mov
and
add
imul
jo
push
and
adc
or
inc
ins
call
xlat
int
int3
fbstp
or
sbb
pop
lods
shl
shl
es
aaa
out
jb
in
pop
ret
pop
in
xor
xlat
sar
or
arpl
jecxz
or
mov
or
(bad)
lahf
les
push
aad
pop
mov
es
outs
daa
inc
and
xchg
jmp
adc
jge
cmps
push
test
push
repz
push
cmp
imul
pop
adc
ins
ret
or
pop
lods
fisub
dec
add
clc
adc
or
mov
pop
pushf
sub
sti
aad
mov
movs
xor
jl
push
mov
cli
and
mov
aam
mov
bound
cwde
cs
adc
sub
jbe
mov
loop
jmp
sar
std
jge
push
ffree
mov
adc
pop
xor
rol
daa
jns
jge
aam
inc
push
jecxz
mov
cmp
mov
mov
pop
mov
test
xchg
in
repz
out
adc
mov
cmp
inc
das
rcr
shr
add
sbb
(bad)
adc
test
mov
inc
out
pop
cmp
pop
adc
in
add
inc
push
push
lods
aas
pusha
and
adc
dec
lea
in
sti
xor
loop
into
push
in
ret
stos
dec
adc
sbb
repz
dec
pop
ds
xchg
mov
scas
call
inc
xchg
into
cld
cmps
jp
stos
dec
dec
cmc
xor
lahf
in
sub
fwait
jg
inc
pop
add
clc
add
cmps
fcom
jge
(bad)
adc
jp
xor
sbb
pop
ficomp
arpl
cmp
ret
xchg
icebp
popa
movs
jl
mov
mov
popf
clc
mov
call
sbb
mov
cmp
push
push
mov
and
rcr
into
loopne
push
sub
cmps
pop
or
mov
sub
pop
xchg
sbb
xchg
(bad)
mov
ins
cmps
push
sar
dec
and
cmps
mov
aaa
call
push
in
mov
sti
push
push
je
or
xchg
ret
out
je
ror
sub
add
in
sbb
and
outs
test
sbb
xchg
xchg
imul
fcom
sub
cld
ss
xor
jmp
nop
sub
fsubr
fcom
push
fwait
xor
test
xchg
in
lea
pop
sahf
pop
xor
xor
retf
mov
mov
sbb
mov
push
xor
and
pop
cmps
push
lods
sbb
xor
sub
in
cld
ins
mov
out
mov
pop
out
imul
imul
pop
dec
das
xor
jmp
dec
lds
popf
ins
(bad)
in
out
std
test
popa
mov
add
xchg
test
mov
leave
adc
add
stos
cdq
adc
movs
push
repz
mov
imul
inc
cs
cmp
movs
jno
leave
sar
(bad)
imul
jne
ins
add
mov
stc
icebp
xchg
dec
dec
loop
aas
adc
lock
sub
and
push
or
cmp
jecxz
das
add
call
sbb
xor
push
enter
mov
and
jbe
inc
icebp
xchg
jge
in
into
scas
int
mov
cmps
sub
test
pop
ins
ficom
or
sbb
sbb
in
xor
aad
and
pop
retf
cmp
(bad)
fs
ss
scas
scas
xor
(bad)
cs
cmp
jmp
dec
pop
mov
jmp
movs
movs
inc
jle
popa
mov
in
dec
and
xor
bound
xor
sbb
sahf
mov
mov
jb
xlat
adc
push
and
add
cmp
and
enter
aaa
dec
lods
repz
pop
ror
xchg
clc
imul
mov
sbb
cli
dec
ja
sub
pop
repnz
add
out
popa
mov
mov
outs
pop
push
cmp
and
(bad)
mov
xor
vmrun
jge
pop
or
mul
xchg
pop
test
inc
data16
jle
mov
add
pop
loope
into
sbb
and
dec
inc
push
ins
jle
sub
push
lahf
hlt
xchg
outs
shl
dec
in
mov
pop
mul
adc
cmp
and
clc
push
pop
cmp
dec
jae
cwde
inc
mov
cli
xor
inc
inc
inc
cmp
sbb
jecxz
data16
sub
cmp
hlt
mov
mov
in
hlt
jo
and
sbb
ins
sahf
test
mov
pop
xchg
mov
pusha
jnp
mov
dec
or
inc
jo
add
mov
stc
sbb
push
and
jmp
hlt
out
push
xor
lods
cwde
movs
mov
mov
pusha
add
out
fsubr
movs
inc
shl
jns
mov
mov
std
shl
xor
mov
iret
adc
call
shr
popa
addr16
and
or
and
movs
ja
or
cmp
mov
leave
xor
dec
xchg
mov
lods
or
vmovdqa
pop
cmps
jno
pop
mov
xor
mov
icebp
sbb
ds
adc
fdiv
push
fucom
mov
mov
std
cmc
jno
jno
shr
int
jo
std
mov
xchg
and
shl
adc
cmp
dec
movs
or
dec
mov
inc
dec
cmps
push
(bad)
movs
retf
mov
adc
ja
inc
div
mov
or
xchg
aam
(bad)
cmp
adc
cmp
or
lds
jmp
(bad)
or
xor
aam
inc
call
aaa
pop
cdq
sbb
cmp
sbb
ror
pop
in
fld
sbb
jmp
fwait
inc
pop
cdq
add
aas
push
sti
cmp
cmp
dec
dec
aas
push
daa
sbb
pop
sub
and
mov
mov
push
push
leave
jge
add
rcr
mov
xor
out
out
gs
ins
loop
test
inc
outs
jecxz
ins
push
push
movs
mov
pusha
imul
push
sti
mov
dec
cmps
into
sbb
xor
mov
into
repnz
inc
lea
jo
or
mov
pop
and
jmp
adc
ins
xlat
xor
sbb
fcmove
push
pop
jmp
ds
test
jge
push
pop
push
xor
add
xchg
xchg
push
ds
add
and
leave
mov
pop
(bad)
bound
add
int
fld
sbb
fistp
sahf
ins
sub
inc
leave
jne
xchg
dec
lds
jmp
cs
test
loope
jg
std
pop
cmp
or
mov
ds
mov
cmps
mov
adc
loop
or
sbb
imul
mov
outs
call
pop
arpl
fstp
outs
ss
ins
cmp
pop
mov
ds
jns
sbb
fild
retf
stos
dec
and
cmps
gs
jmp
and
and
pop
cmp
movs
xchg
lea
or
out
pop
push
add
out
nop
cmps
mov
aam
xchg
sub
ss
cli
inc
retf
sbb
jle
sahf
sbb
jp
test
mov
in
inc
addr16
mov
xchg
push
imul
mov
pop
sti
sbb
add
mov
sub
pusha
scas
push
or
std
sub
aas
shl
sub
fdivr
ror
xchg
adc
stos
out
hlt
push
pop
ret
ror
sbb
push
ja
aas
mov
cli
dec
pushf
lods
mov
iret
xchg
dec
cmp
lds
es
dec
inc
popa
adc
cdq
xor
xor
xchg
ins
int
pop
pop
push
mov
jmp
jg
enter
sub
call
or
(bad)
stos
loope
add
movs
mov
fmul
in
jp
aaa
into
sub
leave
outs
(bad)
cli
(bad)
movs
mov
sbb
jp
inc
mov
es
movs
adc
retf
mov
gs
(bad)
in
mov
mov
pop
adc
aam
inc
idiv
scas
shl
clc
dec
cwde
les
mov
neg
movs
js
pop
xchg
jnp
popf
adc
push
mov
fwait
inc
jecxz
push
jne
scas
jmp
pushf
mov
and
adc
lea
ds
cmps
imul
aad
sar
retf
inc
mov
scas
in
mov
jo
nop
xchg
imul
or
cmp
push
dec
dec
(bad)
mov
jnp
retf
push
xor
push
mov
in
xchg
xchg
int
jp
add
cld
dec
and
sbb
mov
dec
mov
adc
adc
call
pop
cdq
adc
jecxz
jmp
daa
pusha
adc
push
cmp
mov
in
jg
ret
mov
and
push
fwait
ins
sbb
loop
rcl
sub
xor
ss
xlat
ja
mov
sbb
js
cmp
inc
dec
add
(bad)
mov
mov
ins
mov
add
cmps
lahf
or
call
inc
or
pop
hlt
and
leave
push
push
stos
jle
popf
mov
rcr
mov
xchg
fbld
xor
push
push
in
sub
bound
sbb
dec
push
popf
dec
pop
sub
out
iretw
imul
push
nop
jmp
add
xor
ret
pop
mov
or
ret
fwait
adc
adc
in
push
sbb
mov
mov
cli
inc
adc
out
sahf
lea
sub
(bad)
jmp
sbb
lahf
mov
cmp
jl
jmp
mov
fbld
and
add
adc
pop
mov
mov
(bad)
cmp
ins
xchg
mov
aad
nop
in
ret
cwde
shl
popf
daa
xor
lock
jns
or
mov
lods
aam
sub
push
fistp
sub
fisub
jbe
push
in
jle
movs
and
sub
test
push
retf
adc
in
fbstp
inc
and
cmp
push
add
cmps
das
lods
inc
cld
out
fdivr
cmps
pop
mov
js
lods
test
xchg
sub
mov
mov
inc
les
jle
arpl
pop
repz
dec
adc
loopne
mov
or
out
rcr
cmps
jnp
mov
xor
cmc
rcl
mov
xor
sbb
push
iret
stos
ja
xor
call
jecxz
pop
imul
sbb
in
(bad)
sub
mov
aad
push
dec
lock
shr
mov
mov
xchg
outs
(bad)
fcmove
call
jae
ins
enter
jle
dec
inc
mov
icebp
ds
fbstp
popa
daa
sub
push
jae
xchg
test
xchg
aaa
mov
loop
lods
(bad)
pop
push
call
push
pusha
cmp
std
dec
outs
push
cmp
fwait
call
cld
mov
test
cmps
add
gs
loope
jmp
xor
adc
sub
fisttp
mov
push
mov
mov
cmps
add
in
inc
add
(bad)
sbb
fild
aaa
or
stos
aas
loopne
mov
add
jp
pop
lds
out
enter
mov
add
lods
adc
ja
cmp
or
inc
mov
dec
fsubr
mov
retf
xor
test
mov
fstp
xchg
arpl
push
xchg
dec
mov
and
mov
push
adc
es
pushf
inc
pushf
dec
rol
push
loop
cwde
sub
data16
fcomi
fwait
lods
cmp
outs
and
ja
dec
popa
jne
leave
xchg
jne
jl
arpl
cmp
imul
cmp
ss
ss
or
shr
enter
(bad)
outs
jmp
aam
pop
dec
mov
and
lds
rcl
sti
mov
pop
push
cmp
jg
les
(bad)
mov
fisubr
fbstp
div
(bad)
ja
inc
dec
jo
cld
bnd
push
leave
push
jle
push
repnz
pop
jl
xchg
mov
test
lds
mov
jge
icebp
pushf
adc
xchg
stc
jnp
xor
sub
xlat
out
xor
and
pop
xor
inc
add
int
mov
int
jbe
cdq
cld
add
jle
outs
shl
and
js
dec
lods
fistp
inc
repnz
xor
push
cmc
inc
call
inc
xchg
sbb
out
scas
test
lds
das
push
sub
pusha
cmp
bound
or
mov
test
lods
jno
(bad)
enter
mov
xchg
mov
push
test
jne
pop
sbb
int3
mov
mov
sbb
hlt
xor
add
test
cdq
mov
or
push
into
clc
and
pop
dec
pop
xchg
shl
test
(bad)
shl
repz
sbb
and
loop
imul
mov
pop
and
jo
mov
loop
mov
push
ret
xchg
mov
xor
mov
je
mov
sahf
add
lock
xor
(bad)
push
mov
add
lahf
push
push
(bad)
dec
cmp
lahf
ficomp
(bad)
mov
repz
stc
loop
out
(bad)
repnz
adc
movs
xor
ds
xchg
sub
and
enter
pop
and
adc
sub
and
adc
or
jno
daa
fwait
int
es
gs
into
call
pusha
repnz
xacquire
xchg
mov
cmp
sub
and
out
dec
fs
hlt
jnp
retf
sbb
xchg
cld
sub
or
std
aas
jae
ret
lods
or
outs
aad
je
stos
mov
and
ret
cmp
push
div
xor
mov
adc
jp
gs
push
xor
adc
cmps
rol
jle
adc
xchg
fs
mov
adc
and
sub
xor
or
into
dec
popa
in
xor
out
test
mov
jecxz
aaa
stos
adc
ja
push
sbb
loope
mov
and
imul
lods
mov
dec
aas
enter
dec
les
int3
call
pushf
or
in
out
dec
mov
sub
and
int
retf
sub
jmp
inc
mov
fs
js
ret
sar
div
ins
push
movs
jp
cmps
push
inc
dec
daa
or
xchg
arpl
inc
inc
(bad)
fdiv
lods
xor
int
test
pusha
sbb
int
retf
xor
sbb
movs
xchg
cmp
push
jo
loopne
cmp
sub
pop
inc
popf
ja
and
inc
mov
dec
push
hlt
out
adc
aad
rcl
aas
inc
cmps
mov
fnstenv
cmp
sub
pop
jb
push
ret
xchg
jle
sbb
inc
sbb
mov
out
in
pop
int
and
jb
neg
pop
jmp
adc
fwait
xchg
or
(bad)
imul
retf
shr
jo
dec
outs
xchg
and
push
in
js
mov
fadd
fbstp
ja
pop
sub
inc
mov
sbb
mov
lods
xchg
xchg
dec
loop
lods
(bad)
pop
mov
sti
imul
aas
jae
scas
aaa
sub
sub
nop
iret
in
fwait
in
and
sub
outs
retf
add
jmp
mov
fbstp
mov
jns
xchg
mov
fadd
outs
(bad)
stos
xchg
push
inc
push
leave
das
mov
inc
mov
push
inc
call
(bad)
xchg
xchg
inc
loope
out
jbe
xlat
xor
jne
lods
xor
inc
push
mov
fist
add
pusha
xlat
dec
test
inc
scas
cdq
mov
jecxz
add
xchg
xchg
(bad)
pop
sbb
pop
jle
pop
add
sbb
lea
pop
mov
push
sub
inc
jmp
loopne
mov
imul
in
jb
inc
popa
imul
js
push
ins
and
adc
in
mov
or
sar
icebp
cwde
lds
adc
xchg
ins
loopne
adc
outs
cld
ds
pusha
jp
jno
pop
imul
(bad)
rcr
cmp
fwait
and
sbb
mov
ficom
stos
xchg
in
adc
fcom
sbb
cmc
adc
rcr
ficom
repz
out
int3
sbb
cli
pop
add
adc
popf
int
push
jmp
sti
gs
sahf
pop
mul
aam
int
or
xchg
inc
adc
out
mov
mov
add
outs
in
inc
pop
cli
jns
lock
mov
enter
pop
(bad)
xor
or
popf
cmps
adc
xchg
cmp
dec
retf
add
cmps
mov
hlt
out
je
loopne
pop
nop
pop
bound
inc
out
mov
sub
jb
dec
pop
scas
ins
jle
out
clc
mov
push
cmp
mov
cmps
mov
mov
(bad)
lods
xchg
repz
cmc
mov
mov
int
mov
jl
mov
shr
cld
jmp
lds
pop
sub
test
adc
jns
add
repnz
ret
in
add
test
cld
push
inc
aas
(bad)
aad
xor
sbb
dec
adc
mov
mov
xchg
fcmove
and
sub
mov
push
mov
adc
sbb
cwde
stos
jmp
mov
xchg
ret
inc
xchg
pop
jne
xchg
mov
pop
data16
fiadd
sar
add
ins
movs
sbb
pop
cli
pop
lea
push
fsubr
add
or
jnp
xchg
icebp
or
pop
dec
outs
sub
stc
nop
pop
adc
add
sbb
and
mov
dec
(bad)
xlat
fxch
nop
jbe
xchg
cmp
imul
sbb
iret
or
pop
lock
push
push
adc
pop
cs
adc
push
call
fwait
sar
out
lods
add
adc
cmp
jmp
cmp
es
in
sbb
pushf
jmp
sbb
and
push
je
iret
sti
loop
xor
setno
push
ret
clc
test
hlt
std
push
jle
fld
jmp
push
cs
or
clc
jbe
add
jle
jno
ror
adc
int3
fnstcw
rcr
cmp
inc
push
xchg
mov
xor
jbe
shl
cli
icebp
cmp
std
fmul
arpl
xchg
add
and
add
sbb
cmc
std
mov
outs
lock
in
mov
addr16
sar
ss
dec
cmps
cmp
adc
scas
and
dec
out
fst
rcr
or
data16
jg
sub
mov
add
cmp
retf
ins
bound
inc
push
or
mul
mov
cmp
and
push
inc
test
add
popf
clc
cs
dec
(bad)
or
pop
sub
mov
pop
ins
push
dec
mov
clc
test
sahf
in
fwait
xchg
hlt
lods
and
push
cli
int3
sbb
int3
push
inc
sub
imul
cld
pop
jg
cs
xor
dec
jle
xchg
ins
inc
fcomp
iret
inc
adc
cld
pop
sbb
pop
mov
out
lods
or
hlt
ds
add
(bad)
mov
push
jo
test
adc
mov
jle
pushf
mov
add
fs
hlt
out
add
ret
rcr
dec
xchg
sub
popa
outs
dec
push
sbb
jp
mov
(bad)
adc
shl
xchg
xchg
or
jl
call
xlat
cmp
leave
inc
nop
push
test
adc
mov
dec
les
or
jno
je
pop
inc
pop
sub
xlat
dec
sbb
aad
pop
xor
les
cld
sbb
mov
loop
mov
dec
sahf
pusha
dec
pop
pop
iret
fidivr
cli
sub
adc
sbb
test
sbb
adc
lea
dec
sub
mov
push
gs
cmp
dec
or
stos
cmc
inc
sub
add
leave
stos
popa
mov
fsubr
xor
rcl
cmp
movs
sar
adc
mov
mov
rol
rcr
cld
push
ret
adc
popa
fcmovne
inc
add
adc
push
gs
inc
sbb
pop
mov
sahf
adc
push
imul
sbb
push
stc
mov
test
bound
pop
mov
sbb
lods
out
and
xchg
push
mov
icebp
js
mov
fld
cmps
pop
out
call
sbb
and
and
push
lds
sbb
std
mov
bound
test
into
js
icebp
push
scas
mov
dec
enter
retf
or
mov
fs
jne
pusha
pop
sub
add
or
hlt
xor
push
or
mov
and
pop
in
mov
(bad)
icebp
int3
ds
lea
mov
cld
mov
ret
aaa
hlt
adc
or
xlat
js
retf
cmp
repz
cld
pop
outs
(bad)
push
lods
int
bound
sub
cmp
inc
loopne
pop
xchg
adc
cmp
xor
push
jg
iret
mov
jmp
in
pop
test
adc
pop
lea
pop
dec
fisttp
(bad)
int3
jmp
cli
cld
jle
add
sbb
xor
adc
mov
mov
cmp
pop
retf
and
iret
rol
or
mov
stos
and
and
aaa
push
sbb
out
dec
lods
scas
mov
jb
adc
std
(bad)
mov
out
inc
xor
repnz
(bad)
and
xchg
xor
mov
pop
sub
xor
fs
ja
call
aam
shr
fucomp
xchg
or
push
mov
out
cli
outs
ja
sar
cwde
sub
and
fisttp
inc
mov
push
mul
push
cmp
sahf
mov
aad
loop
inc
push
jae
es
sub
call
hlt
add
aas
addr16
adc
and
sub
mov
(bad)
in
pop
popa
jb
(bad)
loope
cmp
lock
das
dec
ss
mov
cmp
push
not
shl
ret
loop
pushf
(bad)
inc
xchg
aas
mul
int
mov
or
mov
xchg
fidiv
ror
xchg
push
(bad)
cli
out
adc
sub
popa
xchg
xchg
test
scas
sti
xchg
push
jb
jns
add
int
iret
push
xchg
add
inc
push
xor
push
pop
mov
and
rcl
or
inc
jo
retf
inc
or
fisubr
bound
jp
call
xor
pop
or
out
(bad)
sbb
mov
outs
jl
push
fsub
aam
adc
inc
mov
aam
xchg
xor
nop
stc
pop
rcr
and
rdmsr
or
cmp
ret
ret
punpcklwd
test
mov
mov
mov
push
jg
(bad)
cdq
outs
lock
cld
xor
mov
in
mov
aam
cli
in
dec
shr
xlat
jle
cmps
sub
pop
rcl
vmwrite
adc
jmp
mov
push
enter
mov
xor
adc
cmps
inc
adc
xchg
shl
jo
inc
vpcmpeqw
lock
sub
aam
mov
jg
jbe
aaa
mov
scas
outs
adc
cld
fsub
pop
inc
jle
aaa
cmp
push
dec
pusha
push
scas
(bad)
jo
into
test
movs
and
mov
add
outs
es
(bad)
jne
lods
cdq
pusha
inc
xor
and
mov
cmp
xchg
ja
call
mov
scas
sbb
call
outs
pop
mov
add
repz
sar
or
jnp
shr
ins
mov
fbstp
jae
div
sbb
aaa
adc
sbb
and
dec
push
jle
jbe
and
push
xor
lods
je
out
and
enter
push
adc
ficom
pop
push
mov
pop
ror
pop
mov
shl
add
and
cld
mov
sub
in
push
sub
fs
es
leave
and
rcr
push
cli
in
retf
outs
mov
push
cmp
iret
cmp
mov
mov
ins
or
add
std
push
cmp
add
inc
push
clc
(bad)
das
mov
(bad)
sub
es
fisub
xor
int
lea
pop
sbb
addr16
jge
in
in
js
inc
imul
and
adc
or
sbb
dec
pop
jmp
adc
shl
add
sbb
adc
inc
or
jno
mov
in
into
hlt
mov
ret
push
inc
or
jae
pop
cmp
retf
in
jmp
ret
(bad)
mov
(bad)
mov
dec
sub
add
and
and
aam
(bad)
mov
(bad)
cmp
mov
or
pop
dec
xchg
jb
cwde
imul
leave
inc
in
lds
iret
clc
mov
add
push
mov
stc
mov
cmc
leave
setnp
mov
jle
aam
shl
mov
(bad)
stos
xlat
inc
xchg
fwait
mov
loopne
xchg
ins
fsubr
sub
sti
sub
rol
call
and
cmp
enter
clc
and
dec
mov
leave
jns
mov
push
es
neg
jl
in
test
dec
dec
cdq
jnp
mov
cmp
inc
xchg
pushf
mov
push
mov
jl
cmc
mov
mov
cmc
iret
sub
add
inc
xchg
dec
jp
shr
cdq
push
ins
mov
mov
xchg
mov
cmc
cmp
cmp
das
fisubr
xor
jg
fisub
test
xlat
in
cmp
or
push
cld
or
cld
dec
and
sub
cmp
nop
aas
out
xchg
push
pop
pop
fbstp
and
(bad)
movs
cs
sti
hlt
pop
imul
xchg
cmp
(bad)
inc
cli
add
xchg
dec
stos
repz
popf
cmps
inc
adc
sbb
cmp
inc
and
imul
add
dec
xchg
adc
ins
into
add
fucom
pop
cmps
outs
in
rcl
xor
adc
mov
mov
pop
mov
mov
push
call
push
rol
dec
push
outs
xchg
pop
and
xor
push
sub
gs
stc
nop
movs
mov
rcr
mov
mov
push
or
cmp
xor
mov
pop
sub
sbb
out
fstp
int3
pop
(bad)
fistp
mov
sbb
(bad)
clc
xlat
rol
push
mov
dec
mov
xchg
dec
mov
xchg
push
stos
sbb
rcl
jmp
stos
popa
iret
scas
cmp
inc
repnz
inc
sbb
lds
bound
mov
push
clc
hlt
sbb
imul
rol
mov
outs
mov
(bad)
rcr
cdq
xor
mov
in
aad
test
ror
cdq
test
sbb
jne
je
bound
inc
bound
sbb
push
out
ret
lods
fs
sbb
sub
pop
stos
jg
inc
lods
stc
jb
jne
addr16
test
pop
inc
pop
jle
call
push
mov
ja
sar
mov
daa
push
jmp
out
lods
pop
cmp
clc
pop
jmp
(bad)
xchg
(bad)
pop
outs
idiv
inc
adc
movs
or
(bad)
sbb
mov
jp
dec
inc
(bad)
into
push
sub
inc
sahf
mov
jns
ins
lea
jnp
fldenv
jo
add
aam
pusha
pop
xchg
lock
or
mov
out
mov
sub
sub
pop
sub
lahf
mov
add
mov
cdq
cld
lahf
(bad)
jne
dec
out
sbb
sahf
enter
xchg
and
mov
aaa
jbe
stc
stos
cmp
add
and
pop
in
rol
stos
in
xlat
mov
leave
call
enter
arpl
jle
out
xchg
scas
repnz
dec
adc
sub
loope
jne
es
cmp
enter
test
sar
pop
idiv
and
ds
repz
mov
rcl
in
xor
in
jecxz
(bad)
mov
cmc
and
xchg
mov
add
rol
test
push
xchg
out
jb
jmp
in
jl
dec
gs
pusha
enter
or
push
jecxz
sub
xor
dec
push
and
mov
lods
push
fwait
outs
imul
xchg
in
test
jg
mov
and
clc
mov
ret
inc
or
lea
add
lds
jbe
mov
dec
pop
sbb
call
fdiv
(bad)
mov
shl
inc
or
xor
mov
xchg
inc
cmps
adc
ja
add
pushf
pop
jae
out
mov
pop
dec
or
cmp
xor
adc
and
shl
sub
add
mov
out
mov
and
in
aad
sub
ss
cld
(bad)
int
adc
jnp
mov
inc
fidivr
adc
mov
mov
pop
add
pop
jns
jp
outs
test
xchg
pop
xor
push
repz
adc
popa
int3
stos
gs
mov
xor
ret
inc
sbb
pop
pop
jmp
movs
sbb
add
aam
and
and
cmps
pop
hlt
scas
pop
fmul
add
cld
ja
icebp
xchg
icebp
fsubrp
in
out
popf
test
dec
pop
mov
fs
and
sub
dec
sbb
xchg
jnp
test
cwde
out
icebp
stos
sub
div
stc
inc
push
leave
jmp
or
mov
sub
pop
xchg
aas
sub
mov
add
cmp
mov
daa
push
push
jmp
js
cdq
mov
xor
jle
jecxz
or
imul
sbb
push
mov
mov
rcr
dec
cmc
imul
and
outs
(bad)
out
jmp
and
popf
xor
cmp
xor
shr
push
or
sbb
in
push
in
lahf
xor
int
loop
sbb
mov
dec
xchg
mov
hlt
jb
push
mov
jecxz
jbe
dec
and
(bad)
xor
shl
push
fdivr
das
xlat
add
fs
jb
xchg
cdq
inc
jae
bound
std
idiv
test
cli
test
test
fist
adc
cmp
arpl
push
cmp
inc
mov
push
sbb
addr16
xor
push
rcr
xchg
dec
xor
repz
test
push
cmps
call
mov
sahf
mov
ds
scas
and
jo
xor
jnp
jge
aam
jmp
aas
fwait
push
xchg
cld
(bad)
in
jns
sub
ja
ins
popa
call
sti
xor
jmp
xchg
icebp
xchg
(bad)
out
adc
rol
in
xchg
mov
pop
xor
push
test
cmp
push
(bad)
imul
push
popa
(bad)
imul
not
pop
cmp
inc
adc
xor
scas
(bad)
lds
repnz
mov
jg
lods
mov
jo
xchg
aaa
jbe
sahf
rol
and
pop
mul
iret
dec
sahf
ss
shl
retf
out
mov
xchg
xor
push
inc
inc
xlat
icebp
iret
in
jo
cmp
fbld
addr16
inc
andnps
pushf
pop
xlat
cmp
dec
adc
sub
inc
inc
adc
pop
xor
sbb
test
mov
jmp
adc
or
(bad)
fwait
mov
inc
test
call
retfw
bound
add
test
cmp
mov
sbb
scas
sbb
fsubr
test
push
xchg
push
inc
sub
iret
cwde
dec
inc
cmovp
sub
fld
in
pop
add
dec
xchg
sbb
xchg
(bad)
repnz
inc
test
test
push
xor
sbb
in
and
fld
mov
sbb
hlt
call
inc
aas
loop
cmps
test
push
mul
mov
mov
push
adc
popa
pop
pop
dec
jb
mov
iret
inc
rcl
add
fsub
mov
add
dec
push
xor
add
add
pop
jns
sbb
mov
rol
jmp
mov
xchg
ins
ins
and
loope
aam
(bad)
pop
in
xchg
test
xchg
xchg
push
in
jmp
addr16
mov
bound
xchg
cmps
dec
fistp
mov
lods
pop
push
push
pop
xchg
add
dec
ret
mov
add
bound
aad
sbb
cmp
fwait
rcr
pop
in
sbb
retf
mov
popf
mov
jb
into
(bad)
adc
popa
or
jnp
aaa
mov
aad
in
sbb
push
mov
inc
out
xor
sub
(bad)
pop
dec
retf
mov
dec
xchg
(bad)
xchg
xchg
sbb
adc
sub
mov
pop
scas
add
nop
sbb
jle
add
retf
lea
add
dec
or
push
les
repnz
movs
out
push
jmp
or
call
push
mov
aam
push
stos
movs
aad
mov
jnp
mov
and
mov
dec
dec
jns
jbe
inc
ja
adc
ds
icebp
push
fwait
ds
aas
mov
in
sub
rcr
sbb
sbb
inc
jp
mov
outs
xchg
fimul
push
sti
dec
icebp
cmp
shr
fldcw
mov
mov
cld
test
retf
icebp
dec
inc
jge
push
(bad)
adc
inc
fs
loopne
adc
mov
std
add
icebp
sub
lods
stos
and
fistp
cmp
imul
iret
mov
adc
(bad)
xor
call
not
mov
mov
jnp
popf
out
icebp
pop
imul
inc
adc
outs
xor
test
shl
loop
mov
push
xchg
mov
into
mov
cmp
bound
out
pop
dec
ret
jne
test
icebp
mov
into
jnp
fdiv
adc
mov
add
(bad)
xor
cwde
retf
fdivr
das
xchg
mov
pop
cdq
enter
adc
scas
pop
jb
ds
shl
call
push
add
push
and
add
sub
rol
mov
xchg
mov
lds
pop
mov
cmp
jg
outs
mov
push
push
imul
mov
inc
sub
and
je
bound
test
pop
data16
inc
std
push
fst
retf
sbb
gs
fnstcw
lea
pop
test
ins
out
adc
push
ficomp
das
test
mov
rcr
pop
popf
push
jle
dec
fsubp
mov
std
pop
pop
pop
inc
cmp
mov
xchg
adc
jnp
xchg
js
cmp
or
into
aaa
jle
outs
and
sub
xor
adc
sbb
sbb
add
mov
test
cmp
jae
jl
arpl
jmp
add
and
pop
inc
push
test
and
pop
out
scas
sub
pop
push
or
movs
popa
push
jns
mov
js
pop
lock
or
adc
pop
mov
imul
sub
dec
hlt
pop
cmp
inc
inc
sub
retf
lock
fadd
arpl
aad
mov
jle
outs
pop
xchg
mov
fst
inc
fist
cwde
mov
jnp
sbb
push
rol
and
dec
ins
jl
jmp
pop
cdq
stos
sub
sahf
cmps
stos
in
xchg
jmp
(bad)
ret
or
outs
inc
jne
inc
or
bound
cmp
pop
scas
push
jle
aas
iret
or
push
sub
int
sub
test
(bad)
and
xor
add
or
adc
dec
retf
sub
ja
mov
sbb
sbb
aas
dec
ss
test
imul
push
mov
call
outs
xor
iret
loopne
mov
mov
fild
inc
hlt
out
xchg
dec
jnp
and
dec
ds
pushf
dec
xlat
mov
adc
fsub
std
pop
lds
ins
adc
ins
and
pop
shr
neg
test
xchg
jge
hlt
data16
jge
pop
scas
sbb
adc
fnstsw
xchg
inc
sar
out
or
dec
jns
int3
icebp
mov
sbb
iret
dec
xchg
aas
push
scas
mov
sti
push
dec
pop
call
dec
adc
fcomi
cmp
cmp
scas
mov
push
sub
int3
fidivr
movs
retf
std
pop
add
add
mov
cmp
or
pop
sub
cdq
and
mov
hlt
inc
scas
xchg
jge
pop
sub
in
adc
adc
retf
xchg
jbe
cmp
pop
lds
xlat
sub
mov
daa
push
loope
fcomp
inc
test
cmp
add
dec
adc
jo
inc
cdq
lds
outs
mov
sahf
push
out
stc
outs
or
cwde
stos
sub
stc
pop
aaa
sub
fiadd
sbb
jns
mov
adc
push
cmp
inc
ror
inc
aaa
push
mov
mov
out
call
jmp
sub
jl
mov
mov
and
js
cmp
sti
jge
push
in
mov
repnz
(bad)
or
sbb
xor
jno
sub
pop
push
fdiv
or
add
inc
sub
adc
imul
pop
inc
and
adc
dec
jnp
push
fwait
inc
test
repnz
into
cmp
adc
push
xchg
jl
sub
mov
push
push
sbb
push
or
add
(bad)
mov
sub
pop
(bad)
pop
mov
and
cdq
(bad)
ins
fs
dec
push
xor
hlt
pop
shl
mov
xchg
jmp
lahf
adc
adc
push
xor
dec
xlat
call
popf
adc
inc
push
xchg
pop
and
add
inc
daa
(bad)
sbb
stos
xchg
(bad)
daa
call
jbe
sbb
dec
cmc
pop
bnd
fiadd
push
xchg
pusha
js
mov
bound
xchg
mov
clc
enter
jno
in
jne
cmp
mov
cld
iret
dec
gs
scas
stos
dec
jle
outs
(bad)
(bad)
mov
push
das
mov
stc
aaa
xchg
add
jbe
xchg
mov
pop
adc
out
cli
mov
jge
shl
push
pop
ret
push
inc
dec
mov
mov
xchg
cmp
pop
xor
(bad)
out
les
fcmovu
ds
push
push
outs
aam
sbb
adc
add
pop
cmp
push
(bad)
out
push
jle
mov
rcl
mov
mov
jle
pop
sbb
mov
adc
imul
repz
call
movs
pop
xor
inc
mov
repnz
and
retf
inc
xor
test
mov
cld
mov
icebp
(bad)
fist
xor
(bad)
in
movs
ds
data16
mov
inc
add
popa
xchg
inc
dec
loopne
ret
(bad)
jle
lds
(bad)
lock
inc
jle
enter
lahf
mov
ins
jno
stos
adc
mov
in
retf
dec
and
ins
sbb
inc
cmp
nop
add
icebp
mov
dec
and
mov
push
and
rcl
movs
xor
pop
push
sub
lea
push
fcom
sub
jmp
pop
pop
loope
inc
adc
pusha
ret
mov
dec
mov
inc
pop
pop
pop
pop
sbb
jo
enter
icebp
inc
test
stos
add
cmp
mov
popf
adc
rol
sbb
push
jno
cmps
pop
mov
adc
imul
mov
repz
fs
ja
inc
lods
and
pop
nop
and
mov
sub
mov
frstor
or
inc
cwde
inc
loopne
pusha
stos
cld
sub
mov
mov
and
or
inc
mov
xchg
adc
dec
scas
mov
add
(bad)
mov
jns
bound
arpl
pop
out
push
out
jecxz
pop
xchg
das
or
std
mov
cmp
outs
adc
cmp
arpl
mov
adc
test
pop
mov
adc
pop
sbb
aam
bound
mov
xchg
popf
cmp
ret
fnstcw
repnz
das
xchg
lods
mov
pop
clc
popa
and
scas
add
sar
iret
je
leave
xchg
ds
das
jmp
aam
sar
ficom
(bad)
mov
shl
int
pop
test
add
sbb
xchg
call
and
xor
pop
dec
push
dec
sbb
(bad)
xor
in
or
xlat
imul
(bad)
jge
daa
retf
or
mov
mov
and
pop
sub
(bad)
or
cwde
push
xor
iret
xchg
into
add
sbb
cli
jmp
and
xor
fidivr
(bad)
pop
cmp
pop
dec
pusha
sbb
jge
cmp
fild
adc
stos
out
(bad)
cmp
jno
scas
mov
jecxz
into
pop
(bad)
int3
mov
leave
pminsw
jl
std
lea
jbe
test
jge
leave
add
cmp
out
sub
test
xchg
cmps
inc
xchg
push
adc
in
jle
mov
mov
jmp
mov
lds
cmp
call
shl
adc
xor
mov
sub
jle
xor
or
sub
lock
mov
ins
xor
gs
pusha
add
scas
adc
jp
jle
ja
fst
ja
lods
pop
das
mov
mov
jno
stc
imul
cmp
xchg
mov
xchg
(bad)
inc
inc
xchg
mov
mov
pop
ins
add
pop
pop
fst
std
cmps
repz
xor
test
rcr
push
add
xlat
test
sbb
sbb
mov
sbb
test
mov
jo
push
adc
adc
outs
and
xlat
sub
xchg
in
and
fs
jbe
cmc
mov
test
(bad)
and
jecxz
inc
mov
push
add
pop
rcl
adc
out
es
add
movs
iret
je
and
sub
sub
test
mov
mov
inc
mov
jno
or
call
fld
ret
push
sbb
popa
pop
mov
pop
jl
loopne
jno
lods
jo
fldcw
inc
lods
rcl
nop
(bad)
mov
mov
pop
loope
ror
scas
jae
nop
(bad)
jmp
adc
and
xor
jno
adc
mov
rol
stos
bound
inc
lahf
xchg
ja
xchg
test
pop
out
(bad)
not
dec
adc
int3
ins
imul
repnz
dec
aad
inc
call
jl
hlt
scas
fimul
xchg
push
xchg
sub
and
jmp
pop
push
cs
mov
sar
and
mov
test
push
test
mov
xlat
std
ret
lds
xchg
sbb
inc
pop
sbb
jmp
dec
xor
ins
or
dec
in
jns
sbb
mov
retf
clc
mov
sbb
in
fiadd
in
cmp
dec
mov
push
dec
retf
shr
pop
(bad)
scas
xchg
mov
pop
rcr
scas
das
add
ss
(bad)
adc
push
dec
inc
adc
ja
dec
push
fs
add
fdiv
dec
jbe
pop
jno
call
push
clc
(bad)
retf
xchg
xchg
push
push
adc
sbb
dec
jo
test
or
addr16
shr
cmp
push
adc
mov
add
pop
sbb
inc
mov
ja
sub
popa
lea
stc
aad
mov
pop
jecxz
add
ds
mov
dec
mov
sahf
jmp
inc
(bad)
push
lds
cld
(bad)
fs
shl
sahf
enter
cmp
call
mov
push
pushf
int
fs
push
mov
popf
mov
sub
jecxz
mov
adc
inc
cmp
test
ds
mov
aas
loop
and
and
out
xor
enter
mov
mov
or
mov
dec
sub
push
adc
pop
inc
sub
and
inc
ins
adc
xchg
cdq
test
lods
xor
push
or
pop
jnp
xchg
out
mov
push
xlat
repnz
mov
add
or
jmp
(bad)
js
pop
push
jno
leave
push
cmp
repz
scas
pusha
inc
xor
mov
(bad)
or
jge
push
and
jbe
mov
imul
xchg
pusha
pop
hlt
jecxz
test
adc
in
mov
call
xchg
and
test
inc
dec
cmps
mov
jb
imul
sbb
and
lds
xor
xchg
jo
loop
fwait
movs
clc
xchg
out
iret
(bad)
xchg
dec
loopne
jmp
sar
jae
xor
leave
xchg
loopne
les
sub
mov
dec
es
or
add
inc
stos
inc
or
mov
mov
fld
ds
repnz
push
pop
in
or
mov
ret
mov
mov
ins
ds
fstp
dec
sbb
cli
xchg
add
test
loop
jmp
sbb
jno
or
xor
pop
sbb
fist
sbb
fwait
cmp
and
dec
mov
push
and
pop
dec
xchg
pop
pop
enter
addr16
add
(bad)
xchg
fdiv
mov
xchg
test
jae
mov
call
mov
stos
add
xchg
loope
jmp
imul
call
mov
aad
xchg
mov
jo
or
ds
in
stc
inc
retf
pop
pop
inc
out
aad
xchg
popa
sbb
shl
loopne
adc
das
xor
lods
repz
movs
mov
or
or
xor
ss
jo
loopne
pop
pop
adc
jae
icebp
pushf
mov
mov
dec
retf
movs
inc
sub
jmp
pop
aaa
shl
jmp
ins
cmps
aam
push
pop
mov
aaa
xchg
cmp
cmps
sahf
pop
add
xchg
(bad)
lods
mov
and
pop
jb
loop
jne
push
dec
mov
or
movs
push
sar
cli
mov
adc
cdq
xchg
dec
cwde
sub
in
cld
icebp
xchg
push
imul
xchg
pushf
arpl
(bad)
dec
mov
test
pop
xchg
push
adc
and
sbb
and
push
fisubr
ret
xchg
xor
mov
shl
mov
xchg
ss
adc
dec
dec
and
sub
fst
sbb
pop
mov
test
enter
les
jbe
mov
inc
mov
inc
stos
mov
push
data16
adc
shl
xchg
das
mov
loop
adc
ds
ret
xor
and
cmp
enter
mov
cmp
addr16
or
adc
out
mov
and
lahf
ss
lock
cdq
sti
xchg
jecxz
or
inc
xor
xchg
ror
aam
(bad)
dec
mov
jge
and
loope
xor
pushf
mov
lahf
push
popa
sbb
arpl
mov
xchg
mov
repnz
std
daa
xor
imul
rcr
leave
sub
inc
mov
inc
pop
adc
and
jb
test
jmp
shl
movs
ins
out
push
pushf
push
push
mov
js
repnz
inc
cli
jae
mov
stc
xor
fbld
repnz
jbe
jo
sbb
(bad)
xchg
popf
ror
ss
das
dec
and
push
fcom
jmp
out
or
shr
call
sbb
jmp
pop
sbb
in
lea
cmp
dec
in
cmp
cmp
icebp
add
ret
pop
sbb
dec
push
jnp
out
jnp
into
popa
xor
mov
stos
xor
dec
pop
push
dec
rol
pop
jo
and
or
cmp
mov
mov
inc
aam
push
xchg
lods
push
mov
in
movzx
std
jmp
addr16
xor
lahf
xor
nop
and
dec
jnp
and
jge
dec
inc
pop
mov
cwde
dec
mov
mov
push
xor
sbb
sub
xchg
cli
shr
dec
popa
push
retf
outs
mov
pop
and
test
or
call
push
ins
or
shr
jge
push
add
xlat
or
fisubr
fist
pavgb
adc
(bad)
lahf
xor
pop
cmp
mov
dec
or
out
repnz
cmp
xchg
cmps
js
lods
loop
cmps
xchg
push
mov
xchg
push
das
mov
add
inc
jno
inc
(bad)
(bad)
popa
xchg
add
mov
and
adc
inc
push
jmp
mov
pop
movs
mov
add
ins
or
mov
je
jbe
add
sub
out
sbb
sar
dec
inc
mov
bswap
pop
scas
add
shr
jmp
scas
xchg
inc
retf
lahf
adc
cmp
jnp
ds
add
(bad)
and
add
int
or
dec
pop
aaa
jl
or
sub
loopne
pusha
push
xlat
cwde
lock
pop
jne
sub
pop
bnd
rcl
lahf
adc
(bad)
cmps
sbb
xchg
fwait
in
add
dec
ret
ror
aad
dec
mov
test
out
or
cli
and
xchg
mov
sbb
mov
sbb
cmps
(bad)
mov
mov
hlt
ss
popa
xor
shl
in
rcr
icebp
(bad)
call
jge
cli
retf
or
push
xor
mov
in
aaa
jg
bound
ror
dec
(bad)
mov
(bad)
aaa
popa
add
scas
or
enter
aaa
or
jno
mov
addr16
int3
loop
popf
out
retf
iret
xchg
or
jecxz
jmp
xchg
imul
jb
je
ret
int3
push
in
call
xchg
jg
pop
inc
inc
mov
iret
jbe
xor
mov
retf
or
sub
xchg
xchg
sbb
mov
out
and
jecxz
jecxz
out
sbb
xor
test
retf
xor
cwde
dec
sbb
xor
les
mov
jmp
dec
(bad)
(bad)
idiv
xchg
out
and
neg
mov
cmp
out
sub
mov
mov
out
mov
xlat
sbb
xchg
shl
loopne
fwait
cmp
adc
mov
xlat
cld
scas
ret
shl
inc
mov
inc
xchg
lods
mov
test
jae
xchg
mov
and
or
xchg
aam
data16
lods
lods
test
aas
aas
imul
sti
popa
sbb
test
or
sbb
adc
gs
jl
xchg
test
dec
shr
cmp
mov
mov
imul
xchg
loope
sbb
in
pop
sar
push
mov
dec
loop
inc
mov
fs
pop
mov
call
mov
outs
pushf
add
outs
outs
repnz
js
mov
mov
nop
js
cs
mov
and
clc
pop
or
mov
imul
jp
stos
push
out
cmp
in
rol
ret
out
push
stc
pop
fstp
pop
(bad)
rol
stos
in
ins
jae
pop
push
fwait
outs
jmp
lods
mov
scas
(bad)
mov
push
test
icebp
lods
sub
jmp
sub
xlat
cmp
sbb
mov
into
int
data16
(bad)
aad
dec
inc
adc
push
les
cmp
stos
stc
xchg
int3
cmps
pop
repz
aaa
sub
(bad)
jecxz
ret
jne
mov
aaa
lock
sbb
cmc
fcomp
add
xor
xor
mov
rcr
push
jmp
mov
lods
mov
or
pop
repnz
out
mov
mov
inc
add
sbb
and
sub
mov
xlat
adc
xor
mov
fdiv
xor
iret
je
lahf
fnstenv
rol
adc
ret
cmps
pushw
ret
cli
aam
jmp
pop
js
dec
pusha
bound
xor
aam
or
mov
shl
push
xor
xchg
leave
sbb
pop
add
cmp
jmp
scas
adc
mov
int3
push
mov
mov
(bad)
into
push
fisubr
xor
cld
out
(bad)
lock
scas
mov
cmps
aam
jmp
push
sar
mov
mov
adc
xor
mov
loop
xor
fdivp
(bad)
sbb
mov
and
outs
lea
rcl
pop
inc
sbb
xchg
push
inc
bound
inc
fsub
adc
aam
xchg
repz
arpl
ror
sar
adc
mov
in
data16
xchg
dec
mov
call
cwde
iret
int3
imul
cmp
sub
jo
add
daa
mov
add
shl
mov
push
jmp
and
pop
sbb
test
push
in
lods
jecxz
xchg
test
dec
(bad)
js
mov
popf
leave
adc
addr16
sahf
inc
arpl
or
in
pop
jns
ins
cmps
pop
(bad)
cmp
shr
sub
push
std
or
in
scas
jge
gs
pushf
xchg
ins
stos
in
adc
sub
dec
stos
add
or
cld
ret
ja
xchg
pushf
in
outs
cmp
ficomp
xor
call
jmp
dec
loop
std
push
in
shl
cmp
(bad)
daa
iret
lods
mov
je
push
mov
dec
sub
dec
mov
mov
pop
push
or
movs
cdq
lods
or
sti
imul
fucom
repz
push
loope
data16
div
or
ror
in
imul
xchg
mov
test
lahf
adc
out
push
cmps
pusha
jb
lds
lea
out
adc
xchg
cdq
cwde
ror
sar
sub
sbb
adc
jns
ja
lods
push
or
xor
xchg
xchg
mov
pop
adc
rcl
mov
mov
dec
mov
push
(bad)
sub
retf
xor
adc
cmp
sub
inc
leave
sub
inc
sti
adc
int3
aam
push
xchg
scas
repnz
pop
xchg
repnz
lods
pushf
pop
or
bound
sub
adc
jge
cli
cmps
cmp
adc
in
sub
and
mov
sbb
cmps
dec
lods
nop
pop
pop
cli
clc
add
scas
mov
scas
loop
push
sbb
add
xchg
push
iret
(bad)
lods
sub
movs
sub
xchg
add
data16
repnz
fnstcw
adc
jmp
iret
mov
out
push
(bad)
mov
inc
jmp
pop
in
sub
pop
call
inc
jge
popa
movs
mov
js
pushf
mov
jne
jnp
aam
fadd
hlt
push
pusha
mul
cmp
js
fnstsw
adc
inc
sub
inc
lds
lods
arpl
lahf
aaa
mov
mov
test
loopne
mov
retf
fild
pusha
icebp
outs
jecxz
test
and
mov
cmp
mov
movs
mov
repz
fld
mov
adc
call
pop
adc
or
and
jo
sbb
xchg
push
push
out
ins
add
sbb
rol
mov
dec
aad
nop
jmp
and
mov
pop
xchg
jb
adc
pop
adc
xor
mov
adc
iret
and
mov
sub
pop
jg
and
mov
shr
mov
jmp
movs
or
sbb
add
cmp
das
jg
sub
lods
ret
and
ret
in
xor
sahf
cs
mov
in
and
adc
repz
bound
popf
arpl
jbe
(bad)
mov
es
adc
in
pushf
repnz
mov
retf
fdivr
jmp
xlat
cmp
(bad)
mov
dec
mov
test
(bad)
or
xor
and
pop
xchg
(bad)
icebp
xchg
xchg
fimul
sar
sub
int
in
or
mov
jecxz
loopne
add
cmps
mov
and
ror
adc
mov
shr
cmp
sbb
adc
cmp
dec
or
adc
cmp
imul
add
mov
or
cs
bound
ret
call
cs
mov
pop
rol
sar
dec
gs
mov
pop
les
jno
push
loop
xchg
mov
fst
pusha
in
inc
xor
test
push
fimul
test
jbe
jae
je
retf
call
stos
rcl
out
int3
fistp
mov
mov
mov
jecxz
jbe
sub
movs
cmp
call
dec
aad
mov
jo
cmp
dec
dec
(bad)
popf
xchg
push
xchg
xchg
push
loop
xchg
daa
stos
js
xor
dec
or
lahf
xchg
aas
pop
mov
xor
mov
pop
mov
jnp
test
push
fs
xor
lea
loopne
sti
lahf
pop
pop
mov
jmp
dec
inc
lods
jbe
and
xchg
sub
xchg
xor
retf
sbb
xor
lods
mov
stc
jo
enter
add
pop
stc
callw
pop
dec
jmp
dec
ret
add
cmps
push
dec
cdq
js
sbb
and
mov
call
xchg
sahf
arpl
sub
sub
mov
dec
sub
(bad)
push
dec
and
jge
pop
mov
cmps
rol
mov
cdq
mov
cmps
or
(bad)
in
jno
ja
test
(bad)
fsubrp
ja
ss
iret
ficom
imul
pop
ficomp
outs
loope
ins
pop
xchg
inc
cli
fs
pop
scas
sub
fisubr
add
mov
sub
pop
or
adc
ins
fsubr
inc
sbb
jmp
mov
cmc
sbb
mov
dec
mov
ss
sub
ss
ret
fiadd
movs
push
lea
adc
in
pop
popf
and
push
dec
jmp
dec
jle
push
push
out
test
and
push
sub
movs
pop
mov
lods
js
ins
cdq
imul
cmps
cmp
pushf
stos
sub
int3
push
dec
xor
stc
into
mov
push
mov
cs
jg
cmp
jg
inc
(bad)
outs
cdq
pop
xchg
cmp
or
push
add
sbb
in
inc
fild
mov
cs
push
sbb
add
rcl
push
mov
add
lds
lea
sar
fs
inc
jg
and
pop
jecxz
hlt
stos
jge
xor
mov
in
adc
push
movs
push
call
cmp
mov
sbb
stc
repz
or
mov
out
dec
cmp
lods
dec
(bad)
push
lods
fistp
cdq
cmp
mov
pusha
pop
add
jecxz
daa
daa
dec
in
int
into
cmp
mov
mov
hlt
cmp
clc
jb
sub
push
mul
fsubrp
xchg
fcomp
icebp
data16
dec
xchg
rol
imul
pop
frstor
or
aam
repz
std
not
lea
pop
mov
je
or
sbb
mov
fisub
dec
mov
lods
pop
and
inc
fisubr
jns
loopne
sub
idiv
fs
pusha
fld
ins
dec
jnp
stc
pop
adc
mov
xchg
inc
fimul
pop
in
xchg
sbb
mov
pop
(bad)
adc
ror
popa
ins
mov
push
das
push
add
mov
sub
pop
iret
mov
or
and
adc
adc
push
xor
ins
call
add
mov
or
in
adc
and
mov
stc
call
jbe
mov
adc
inc
mov
in
pop
lahf
jnp
lahf
dec
imul
dec
popf
xchg
push
into
mov
pop
ins
push
int3
push
pop
loop
dec
cmp
int3
scas
fdiv
pop
(bad)
(bad)
in
mov
rol
test
jle
push
adc
jns
jb
xor
mov
add
and
mov
ins
(bad)
sbb
cld
mov
sbb
or
push
jl
cld
jne
mov
fmulp
pop
aaa
mov
fsubr
lock
nop
into
cwde
sub
jp
je
dec
ror
xchg
xchg
add
add
sub
(bad)
adc
add
and
add
data16
pop
jns
popa
jg
ror
out
fisubr
into
xor
retf
(bad)
adc
(bad)
sbb
fdiv
jle
fadd
scas
shl
fsub
mov
dec
adc
aam
mov
pop
mov
adc
mov
mov
cmp
jl
jmp
pop
outs
cmp
adc
inc
pop
fnstenv
mov
sub
cwde
call
jg
popf
scas
nop
cmc
mov
mov
dec
add
sbb
pushf
outs
arpl
mov
mov
xchg
sbb
aaa
inc
sbb
and
ds
push
fdiv
ficomp
arpl
sbb
out
lahf
jecxz
les
imul
lods
in
cmp
cmp
faddp
nop
aad
vpgatherqd
ret
xchg
out
rcr
mov
idiv
sti
sub
dec
shl
pop
dec
mov
or
stc
mov
sbb
out
mov
xchg
and
cmps
ss
ins
xchg
sub
sub
call
(bad)
push
leave
repz
into
jmp
or
xchg
adc
inc
or
int
push
sahf
pop
cmp
mov
sub
movs
mov
dec
inc
stos
lods
push
retf
sub
jmp
jge
lods
stc
mov
dec
sbb
sub
out
jns
inc
xchg
add
shl
dec
in
or
push
test
ds
sbb
xchg
stos
adc
dec
nop
inc
xchg
in
lea
test
push
xchg
cdq
sbb
push
in
test
xor
mov
sbb
int
and
push
and
out
vphadddq
mov
sbb
ret
jp
inc
or
cwde
pop
cmp
mov
dec
js
mov
ins
es
fs
sub
jg
call
sbb
leave
mov
neg
lods
mov
frstor
dec
leave
sbb
cs
ror
shl
sub
in
je
int
and
dec
mov
aaa
stos
mov
hlt
mov
jge
stos
je
mov
retf
es
repnz
inc
jp
jne
push
ins
cmp
mov
xor
xchg
pop
pop
inc
xor
sub
js
xchg
mov
mov
cmp
int3
es
jecxz
(bad)
iret
pop
in
mov
jns
fmul
ins
loope
mov
push
cmps
gs
iret
cmc
pop
rcl
pop
imul
fldenv
sub
sub
mov
push
push
call
pusha
xor
pop
and
ins
cmp
inc
or
push
jge
mov
xchg
(bad)
mov
ret
and
ds
dec
(bad)
and
mov
je
xor
nop
dec
xchg
cmp
cmc
mov
sub
push
mov
cdq
data16
xchg
retf
push
cmp
fwait
scas
out
hlt
pushf
jnp
inc
jno
outs
and
xor
and
mov
div
jecxz
xor
adc
pop
movs
retf
out
and
dec
fldpi
inc
and
mov
jnp
jbe
mov
test
in
imul
mov
jge
popa
xchg
imul
lock
iret
pop
cmc
dec
add
addr16
(bad)
(bad)
stc
(bad)
xchg
sbb
ret
mov
stos
mov
lahf
inc
repnz
mov
pavgw
std
mov
jmp
cli
mov
jno
mov
ja
sub
pop
mov
jb
add
add
push
sub
ret
dec
in
sub
lahf
and
out
in
sub
pop
jg
dec
xor
and
or
sahf
lods
fisttp
cmp
inc
dec
fwait
repnz
push
stc
ja
xor
loopne
push
scas
inc
xchg
leave
leave
jg
mov
cmc
not
jle
rcr
xor
out
mov
mov
int
mov
ror
retf
jnp
ss
pop
mov
pop
enter
les
lods
gs
dec
fistp
cmp
cs
mov
fidiv
or
jno
push
(bad)
mov
clc
mov
sbb
xchg
or
push
jmp
xor
fisubr
pop
pop
call
pop
lea
pop
dec
pop
and
pop
mov
jb
pop
dec
mov
jle
cwde
in
arpl
mov
(bad)
sbb
je
out
pop
push
fild
fs
jo
xor
push
pop
div
(bad)
(bad)
dec
mov
jmp
outs
dec
hlt
test
loope
fisttp
xchg
mov
xor
sub
sbb
xchg
push
repnz
lods
or
jecxz
or
fbstp
pusha
push
cmp
push
cmp
dec
adc
sub
push
xchg
jo
cmp
test
sub
es
xchg
pop
in
in
add
pop
and
lods
add
sub
adc
mov
and
mov
pop
shl
cmp
ss
cmp
cmps
adc
fild
movs
sub
pop
mov
not
lds
push
test
jg
lahf
jns
ret
xor
shr
jle
fild
and
or
mov
xchg
dec
imul
xchg
push
shr
gs
test
push
cmc
adc
repz
jl
or
mov
pusha
imul
sub
aam
out
and
and
(bad)
xlat
adc
dec
call
clc
mov
pushf
mov
cwde
stos
stc
jnp
into
sub
pop
call
jge
dec
pushf
adc
fbstp
sub
fbld
mov
fimul
retf
push
inc
loop
je
push
rcr
jmp
or
pop
xor
scas
outs
jmp
ret
in
mov
sbb
imul
idiv
int
add
fldl2t
(bad)
push
stos
loope
mov
pop
rcr
iret
inc
cld
cmc
adc
add
popf
fsubrp
jmp
rcl
pop
movs
add
jg
xchg
lds
mov
inc
retf
mov
push
sti
jbe
mov
cs
cmp
inc
stc
dec
test
les
cmp
ja
push
imul
js
or
fdiv
pop
xor
lea
in
mov
push
fs
adc
cwde
int
hlt
cwde
clc
add
dec
jmp
stos
sub
and
push
movs
loopne
inc
mov
xchg
pop
je
movs
out
mov
dec
out
xchg
pusha
mov
or
xor
out
mov
cmp
ja
ds
popa
dec
in
xchg
jl
push
pushf
mov
daa
out
xlat
mov
inc
ret
mov
sbb
cmps
paddd
pop
dec
stos
jmp
mov
mul
push
push
fs
retf
(bad)
push
ffreep
push
stc
in
mov
into
pop
hlt
mov
pop
jecxz
sub
ss
inc
cmc
aam
pushf
cmp
push
ja
rol
xor
movs
pop
mov
push
in
jbe
cmp
push
fs
mov
push
loop
fistp
mov
test
fwait
dec
sbb
dec
cmps
rol
xor
(bad)
mov
or
mov
sbb
sbb
or
nop
dec
dec
loop
in
(bad)
adc
loop
mov
mov
sahf
fdiv
mov
push
push
pop
popf
jmp
data16
mov
mov
rol
mov
loop
inc
test
(bad)
fs
add
dec
or
xchg
adc
(bad)
cmp
call
aas
add
mov
aaa
cmp
cdq
call
ret
inc
loopne
int3
or
shl
jmp
daa
aad
imul
mov
shr
pop
xchg
or
ret
dec
mov
push
adc
scas
fcmove
(bad)
pop
sbb
imul
sub
into
cwde
mov
sbb
pop
push
xchg
iret
out
xlat
lods
shl
out
adc
sti
scas
loop
mov
cmp
fisub
xchg
jl
(bad)
mov
xor
xor
daa
out
out
pop
jmp
out
cdq
fbstp
fsubr
push
test
add
sbb
pop
popf
ins
jmp
inc
cmc
mov
test
sbb
mov
aam
cwde
les
std
dec
sub
push
(bad)
cld
(bad)
and
and
stos
cmp
addps
fcom
imul
sbb
xchg
lods
rcr
rcl
push
cmp
and
neg
popf
jp
rol
or
mov
test
jnp
inc
rol
push
out
fs
or
ins
jne
and
(bad)
fsub
push
mov
or
add
or
nop
stos
popa
loope
mov
pop
jp
ret
iret
xchg
jns
pop
leave
call
fcmovnb
jns
out
sbb
pop
pop
loop
imul
jmp
mov
adc
xlat
stc
add
ins
jg
clc
pop
inc
xchg
cmp
cli
jp
mov
imul
gs
xlat
(bad)
loopne
mov
into
mov
xchg
lods
fcomp
mov
dec
adc
jl
ja
push
lea
sbb
enter
sbb
xchg
cmc
and
cdq
push
mov
ss
sub
xor
xchg
or
in
pop
sbb
add
inc
outs
or
mov
loope
add
pop
(bad)
adc
sub
sbb
sti
inc
int3
add
ins
(bad)
cmp
mov
inc
mov
mov
stos
test
ja
push
xchg
pop
bound
aam
fistp
pop
ret
mov
mov
fsubrp
inc
shl
adc
and
add
ficomp
sub
arpl
outs
xchg
stos
ret
retf
xchg
pop
in
sti
in
xlat
out
push
scas
pop
xchg
push
jl
je
sub
lahf
xchg
and
loope
inc
pop
mov
loopne
xchg
cmp
xlat
int
jmp
pop
hlt
fcomi
xchg
push
jmp
sbb
dec
push
and
or
sbb
adc
cmove
imul
(bad)
cmp
xor
dec
mov
sub
add
fwait
inc
aaa
pop
retf
outs
sbb
outs
sahf
jne
fwait
pop
popf
mov
rol
pop
or
test
mov
pop
sub
aaa
jp
les
fsubrp
aaa
and
and
sub
mov
sub
mov
xlat
and
jbe
cmps
loop
mov
lds
xchg
pop
cmp
lods
jo
or
push
xor
test
xchg
mov
push
lods
inc
int
leave
adc
cld
je
test
icebp
mov
jno
(bad)
retf
add
enter
not
push
fcomp
mov
and
sub
xlat
es
push
fs
and
and
iret
dec
or
mov
mov
jecxz
xchg
jno
mov
(bad)
loopne
lea
push
mov
push
fwait
int3
into
mov
dec
jg
mov
inc
cmps
mov
pop
test
repnz
push
mov
ins
lahf
add
xor
xchg
jle
cmp
and
adc
jns
mov
arpl
and
pop
jno
fisub
dec
(bad)
ja
sub
or
dec
sar
test
cmc
scas
pop
int
cld
movs
(bad)
cwde
stc
sbb
mov
add
bound
mov
movs
sub
and
out
frndint
mov
inc
sub
test
push
push
inc
call
sti
sbb
mov
adc
inc
arpl
pop
xchg
ror
and
cli
loope
pop
aas
mov
mov
test
out
hlt
mov
or
stos
jnp
(bad)
mov
ins
xor
sub
popf
mov
jg
inc
cmp
in
sbb
sbb
daa
lods
or
pop
ror
stos
sub
add
pop
jb
push
xchg
adc
das
add
stos
in
inc
sub
xor
gs
lahf
(bad)
stc
(bad)
movs
push
mov
pop
mov
or
add
and
lds
xchg
test
xchg
(bad)
and
adc
fidiv
adc
data16
scas
mov
lea
mov
cs
imul
xor
mov
mov
in
jmp
mov
cmp
js
mov
outs
mov
inc
xlat
push
int3
sub
pop
push
fadd
call
inc
les
iret
sar
jg
and
sar
mov
(bad)
mov
dec
inc
jno
bound
scas
dec
out
xor
data16
and
outs
adc
sub
cdq
je
lods
cmp
idiv
mov
inc
jle
xor
dec
cmp
imul
pop
jmp
mov
aad
test
dec
or
je
add
in
call
xchg
movs
fsub
sub
outs
xchg
mov
ret
xchg
or
sti
inc
pushf
rcr
test
pop
inc
fisttp
in
adc
mov
mov
(bad)
jbe
sti
pop
retf
jne
cld
push
(bad)
test
retf
in
push
xor
inc
jp
cmp
sbb
sub
jmp
lahf
call
sbb
add
and
xchg
adc
rcr
loop
sub
popa
adc
mov
mov
daa
inc
rcl
pop
(bad)
popa
bnd
std
sub
mov
fild
popa
inc
lahf
push
dec
shl
(bad)
mov
lods
push
mov
cld
sub
push
add
cmp
or
les
pop
jge
sub
or
out
add
nop
sti
or
in
clc
cs
jg
pop
loop
mov
push
test
cwde
mov
or
(bad)
push
div
jae
loopne
or
imul
mov
add
lods
push
lds
(bad)
fdivr
ins
jnp
add
adc
adc
adc
shr
push
and
pop
mov
add
jne
dec
mov
leave
out
in
fldcw
fwait
cmp
push
pushf
adc
int3
push
xchg
push
mov
jecxz
fstp
(bad)
js
sbb
call
sub
fs
stc
push
mov
lods
cmp
jbe
mov
test
xor
in
jb
jg
inc
sub
out
mov
jl
jmp
cmp
imul
cwde
cmp
push
inc
inc
ret
outs
mov
ds
jae
jnp
xchg
xlat
add
mov
daa
jne
cs
cdq
lahf
arpl
pop
cdq
mov
outs
std
(bad)
shl
mov
push
repnz
inc
xor
stc
cmp
iret
xlat
ret
jae
dec
test
cmp
adc
neg
pop
mov
adc
jbe
dec
inc
mov
repz
(bad)
call
sahf
and
mov
or
mov
int3
in
ins
arpl
jae
icebp
fiadd
aaa
cmp
mov
pushf
xchg
jp
ss
add
bound
stc
ret
push
mov
sbb
xor
ja
mov
jne
out
add
cs
das
xchg
cmp
adc
or
and
aas
mov
(bad)
push
cs
xchg
inc
mov
push
(bad)
push
gs
mov
pushf
fild
leave
(bad)
adc
fwait
jl
inc
jne
sbb
mov
xchg
sbb
sub
or
push
jno
sbb
cmp
push
pop
mov
dec
inc
pop
cs
push
xlat
repz
lods
jae
or
not
lods
add
rcl
int3
scas
pop
imul
mov
imul
push
or
not
das
aas
popa
fwait
lods
mov
ss
cmp
cmp
into
out
aas
or
ss
aad
out
jge
test
mov
lods
pushf
pop
out
push
mov
inc
int
pop
dec
es
cmp
fisubr
jo
pop
fimul
aam
add
stc
add
sub
jo
shl
cld
mov
int3
mov
and
jmp
or
pop
xchg
xor
pop
inc
add
scas
jae
rcr
mov
lock
jno
mov
lods
mov
mov
xlat
push
imul
xor
dec
add
repnz
xchg
sar
aas
jo
(bad)
or
cmp
fmul
jecxz
jle
out
mov
inc
push
inc
push
mov
dec
cmp
cmp
shl
jl
sti
(bad)
mov
add
(bad)
jmp
mov
jl
movs
nop
outs
push
fdivr
ficomp
adc
and
jge
dec
cmps
add
mov
push
ret
ins
test
sahf
mov
mov
adc
cwde
(bad)
jmp
nop
xor
(bad)
fldcw
mov
mov
iret
fstp
or
int3
leave
gs
xchg
imul
gs
pop
ss
movs
imul
push
mov
jle
dec
lods
mov
push
aad
int
inc
mov
enter
data16
fdivr
sahf
test
(bad)
sbb
mov
mov
fidivr
pop
adc
or
adc
dec
add
cmp
add
scas
add
jae
inc
push
sbb
fisub
pop
mov
jg
retf
mov
jge
add
js
icebp
pop
arpl
sahf
ja
jmp
cmp
or
jbe
adc
pop
add
nop
jg
xchg
mov
jp
push
fimul
adc
or
mov
into
mov
mov
mov
mov
sub
add
into
in
fstp
push
or
dec
xor
add
fiadd
xchg
pushf
mov
mov
scas
hlt
pop
fadd
lds
pop
int
jmp
sbb
sti
add
mov
std
adc
sub
mov
(bad)
shl
(bad)
fidiv
arpl
gs
rcl
xchg
shl
and
mov
out
cmp
and
inc
adc
mov
loope
(bad)
cld
mov
int
stc
repnz
xor
loopne
add
(bad)
fsubrp
jmp
pushf
les
pop
lahf
ror
ret
or
out
push
ja
mov
(bad)
aam
inc
in
adc
test
aam
xor
xchg
ins
jbe
or
mov
std
cs
add
ss
cdq
cmc
and
dec
xchg
cmp
xchg
xor
pop
outs
lahf
xor
or
lea
mov
sbb
outs
call
jecxz
fisubr
dec
mov
xchg
sub
gs
pop
aas
fcomp
ins
outs
sub
mov
mov
sti
pop
sub
xchg
loopne
push
scas
ds
pop
pop
shl
push
mov
jnp
sbb
mov
movs
dec
sti
jge
push
loop
clc
neg
xchg
popa
push
sbb
out
test
sub
and
jp
dec
pop
fnstcw
int3
jns
add
cmc
movs
les
jmp
inc
fdivr
jge
stos
gs
fidivr
jge
lahf
hlt
das
inc
retf
inc
or
retf
loope
adc
push
(bad)
dec
xlat
jnp
xor
scas
not
mov
ds
xchg
inc
dec
and
mov
add
dec
jge
adc
(bad)
push
(bad)
mov
test
arpl
sub
push
xor
sub
outs
loope
xchg
hlt
(bad)
cli
ret
mov
(bad)
sub
mov
mov
leave
gs
mov
pop
stos
in
iret
dec
mov
jne
dec
lds
pop
mov
rol
(bad)
nop
add
test
retf
in
leave
data16
adc
sahf
add
mov
or
scas
push
pop
jmp
ins
jmp
sahf
outs
test
cmp
cmps
jbe
shr
pusha
sub
jb
pop
lea
les
mov
aam
call
cmps
mov
or
aam
icebp
int
fnstenv
inc
and
fsub
ror
mov
mov
xor
scas
dec
test
xchg
dec
or
out
mov
adc
and
pop
xchg
jg
hlt
jp
mov
xchg
fiadd
(bad)
mov
jns
cmp
call
lods
xor
mov
jp
cmp
push
or
dec
bnd
retf
scas
call
add
ja
mov
push
aas
(bad)
bound
aas
jbe
xor
inc
sbb
hlt
and
mov
cmp
int3
out
ins
fsubr
sub
mov
push
ror
jnp
cmp
push
sbb
cmp
jle
and
movs
cld
repz
aaa
add
pushf
inc
sar
ins
int3
(bad)
in
cld
adc
or
jle
aam
pop
or
cmp
dec
sub
inc
xchg
sbb
or
push
les
fs
sti
push
and
cmp
sub
dec
jo
aam
jns
pop
push
xchg
mov
fsubr
push
sbb
dec
imul
jge
test
leave
fistp
jns
inc
and
fisubr
imul
jbe
dec
movs
adc
sub
pop
out
jp
cmp
mov
cld
ret
pop
stos
xor
daa
test
fstp
fidiv
jne
fwait
jmp
jno
pop
fcom
mov
in
xchg
mov
into
es
push
outs
push
repnz
push
mov
push
out
cmp
fisttp
adc
push
cdq
leave
sub
mov
xchg
sbb
mov
rcr
mov
or
add
mov
loope
push
loope
pushf
retf
mov
add
jbe
pusha
jp
ror
inc
les
or
lahf
mov
pop
adc
icebp
xchg
jg
push
or
stos
mov
push
inc
and
clc
push
xchg
shl
outs
jbe
add
pop
retf
adc
jo
dec
inc
and
ret
popf
push
xchg
out
cmp
clc
test
add
imul
sub
xchg
mov
xchg
popf
and
mov
test
std
mov
mov
call
into
pop
nop
outs
rol
adc
dec
mov
sahf
repz
loope
(bad)
cs
mov
mov
popf
stos
popf
add
das
jge
dec
in
dec
add
jne
(bad)
out
dec
mov
inc
pop
and
aam
push
paddd
inc
cmp
(bad)
ins
icebp
dec
cmp
int
xor
mov
pop
icebp
xchg
xor
call
cmp
adc
sar
test
jp
je
sbb
daa
mov
(bad)
sbb
enter
jnp
cmps
imul
test
sub
call
mov
mov
adc
mov
jb
mov
mov
retf
shr
inc
xchg
sbb
das
pop
cmps
addr16
arpl
push
test
bound
mov
jb
mov
fs
and
enter
mov
test
cmp
add
jno
inc
cdq
scas
pop
push
sub
pop
arpl
mov
fbstp
mov
cmp
pusha
xchg
mov
aam
add
cmps
cmp
push
lahf
add
addr16
sub
das
js
adc
outs
(bad)
and
sub
out
ins
mov
push
loope
sbb
inc
sub
dec
dec
mov
dec
jg
xor
jo
cmc
push
lea
mov
jmp
ins
adc
fnstsw
and
call
popf
cdq
daa
sar
imul
mov
pop
sub
dec
push
xor
cld
dec
cwde
in
aas
mov
fdivr
jg
push
ret
es
jle
cmps
push
mov
mov
bound
(bad)
push
mov
in
in
inc
or
pop
adc
fstp
sbb
out
jmp
push
lea
mov
rol
ja
jb
pop
push
pop
jne
adc
mov
inc
push
xor
or
(bad)
sub
cmps
fimul
es
fild
jl
(bad)
cmp
scas
dec
sbb
out
mov
pop
loopne
retf
mov
or
popf
dec
mov
inc
sub
dec
sub
push
add
push
fbld
sbb
inc
cmp
out
je
push
arpl
in
in
push
fdivr
imul
nop
jle
sub
mov
outs
mov
(bad)
repz
add
cmovo
add
ret
call
push
push
mov
sbb
push
sbb
push
sbb
cmp
pop
gs
push
mov
add
sub
fiadd
xchg
push
lsl
pusha
push
mov
jg
test
jecxz
rcl
inc
xchg
addr16
out
sbb
sub
jg
mov
cmp
lea
mov
daa
imul
out
dec
adc
or
add
aam
ins
push
fadd
mov
mov
and
xor
pop
mov
xchg
sti
cs
pop
cmp
and
pop
enter
jnp
fidiv
ja
push
icebp
das
push
adc
xchg
and
outs
xor
xchg
sti
xchg
add
fmul
ja
add
and
cwde
movs
cli
push
xchg
pop
mov
loop
xchg
push
hlt
inc
inc
loop
out
shl
jmp
mov
in
jnp
cmp
xchg
pop
cmps
outs
mov
xchg
push
mov
adc
test
mov
aas
add
mov
cld
jae
fiadd
and
xchg
je
mov
and
sbb
out
mov
icebp
xor
inc
pop
lahf
test
or
adc
sub
test
dec
idiv
inc
retf
enter
(bad)
push
sahf
add
cs
arpl
mov
daa
rol
ss
add
jmp
cmp
daa
enter
in
push
outs
ja
ds
es
adc
test
es
jmp
pop
cmc
add
mov
aad
pop
loop
sbb
sti
sbb
stos
mov
cli
out
jo
sbb
jl
das
mov
mov
mov
jg
stos
cmc
mov
xor
pop
cwde
imul
ja
inc
mov
dec
in
int3
jmp
les
addr16
pop
inc
dec
in
ds
mov
arpl
fistp
jne
bound
fidivr
cwde
popf
mov
data16
enter
pop
xchg
ins
addr16
cmps
aaa
repz
pop
jmp
cli
rol
pop
jle
dec
ss
push
mov
test
sub
sub
in
mov
dec
sbb
add
in
(bad)
adc
xor
in
jno
mov
cli
jge
dec
fisttp
jnp
lahf
sbb
pop
jo
xchg
retf
xchg
inc
mov
test
scas
cdq
movs
icebp
inc
lods
or
(bad)
lods
push
push
cwde
fisttp
mov
mov
push
xor
mov
movs
mov
mov
or
adc
mov
jmp
sbb
pop
daa
push
aaa
mov
shl
adc
mov
repz
movs
fsubrp
loope
arpl
out
pop
loope
(bad)
push
mov
xchg
test
mov
mov
ror
cmp
lods
xchg
(bad)
cmp
add
xor
loope
add
dec
or
addr16
mov
inc
add
shl
shl
cs
sbb
sbb
jmp
movs
retf
call
js
and
scas
and
dec
dec
ss
es
jo
cli
sbb
(bad)
mov
mov
int3
das
push
sub
inc
call
bound
call
xor
xor
xor
daa
imul
scas
mov
inc
inc
mov
and
repz
mov
es
popf
stos
or
nop
into
dec
ficom
jg
nop
(bad)
cld
dec
inc
sub
test
fsub
add
jae
int
mov
mov
or
add
adc
loopne
cdq
pop
mov
cmp
xor
jmp
mov
rcl
(bad)
dec
cmp
out
dec
mul
xor
lfs
push
pop
outs
add
mov
cmp
mov
sub
jecxz
mov
leave
(bad)
xor
retf
mov
xchg
js
in
retf
stos
cld
inc
xor
fs
js
sbb
shl
pop
fucomip
out
out
and
(bad)
mov
cmp
(bad)
lods
xchg
int
inc
xor
pop
inc
aaa
fbstp
inc
push
push
in
and
enter
into
cmp
out
hlt
push
xchg
add
in
sbb
sahf
push
add
pmulhw
and
sub
jmp
pusha
dec
lds
ror
or
adc
nop
ja
inc
and
xchg
pop
ss
ss
fwait
xchg
xor
xchg
ja
dec
pusha
pop
sar
jbe
(bad)
mov
dec
sahf
addps
jmp
sbb
mov
pop
jmp
cdq
push
mov
adc
aas
xor
xchg
cmc
sysexit
out
jle
loop
into
int3
cmp
test
scas
out
mov
jbe
imul
jns
mov
nop
push
add
add
rcl
idiv
sahf
mov
test
pop
in
add
dec
dec
push
ja
push
loop
jle
jp
gs
inc
mul
cmp
addr16
dec
jns
jge
aam
inc
xlat
mov
push
cmc
cmp
ficom
push
mov
jl
mov
inc
lock
repnz
ins
sbb
pop
cmps
ins
mov
ja
jl
mov
outs
jns
add
jo
jnp
loope
dec
loop
and
or
clc
inc
jmp
loop
mov
add
xor
lds
jp
mov
or
sbb
cmp
or
cmp
icebp
sahf
ret
out
lods
sahf
cmp
xchg
and
cli
jle
push
mov
inc
pop
fist
(bad)
fistp
bsf
(bad)
push
push
mov
loop
rcl
mov
icebp
adc
and
pop
cwde
fwait
out
cmp
sub
mov
(bad)
pop
imul
dec
jb
dec
test
pop
out
rcl
mov
ins
pop
sub
(bad)
outs
repnz
push
sbb
or
fistp
jnp
shr
xor
ret
lock
mov
in
pop
arpl
sub
jae
scas
inc
inc
cmp
pop
pop
mov
jb
test
test
fwait
jb
fwait
sbb
jns
enter
rep
pop
mov
sbb
mov
xchg
mov
adc
mov
add
mov
out
xchg
push
int3
lock
push
shr
out
call
out
sahf
nop
mov
mov
inc
mov
jnp
xchg
sbb
sub
aam
fs
loopne
jg
sub
adc
adc
repnz
fild
pop
movs
sub
bndldx
pushf
or
aaa
dec
test
cmps
aad
mov
push
push
dec
lods
sub
mov
jbe
out
inc
dec
dec
add
push
inc
add
mov
repnz
mov
jge
or
les
pop
inc
loop
leave
mov
xchg
icebp
imul
mov
std
outs
sbb
es
jmp
movs
cmp
popf
pop
sbb
cli
and
(bad)
frstor
fidiv
mov
sub
jmp
fisubr
cmps
mov
jecxz
and
push
sar
and
adc
add
outs
popw
daa
call
ds
sar
fstp
mov
mov
inc
inc
mov
push
call
sbb
sbb
pop
mov
dec
out
or
mov
adc
sub
push
lods
loop
aad
popa
xchg
push
das
push
inc
push
imul
loopne
je
enter
cmp
adc
pop
retf
jno
mov
ror
imul
aas
ficom
sub
pop
scas
push
push
pop
mov
imul
repnz
leave
std
pop
out
mov
and
mov
leave
xchg
push
mov
mov
jb
cs
cmp
cmps
pop
dec
mov
and
mov
cld
cdq
mov
inc
cmp
fwait
test
cmps
(bad)
adc
or
out
sbb
inc
test
popa
psubusb
jae
jb
mov
push
mov
pop
in
pop
jle
push
call
adc
jno
mov
jb
mov
(bad)
nop
movs
pop
jge
or
jmp
fcom
mov
or
push
sbb
dec
or
mov
sbb
outs
sbb
shr
or
cdq
sub
test
mov
(bad)
imul
pop
mov
cs
add
lahf
dec
pop
cmp
jae
jae
xchg
cmps
xchg
and
mov
rcr
add
or
sbb
dec
sbb
jmp
mov
lods
inc
xor
xchg
mov
ficomp
(bad)
sbb
add
jecxz
and
mov
jo
fisttp
test
push
clc
or
test
into
jb
pop
cmps
(bad)
adc
mov
inc
mov
cmp
repnz
pop
dec
pop
xor
dec
out
ret
js
mov
dec
fs
mov
cmps
cmp
mov
pop
into
xor
cmc
jp
imul
push
mov
mov
xor
movs
fmul
and
rcr
and
inc
dec
mov
clc
cwde
loop
fidivr
push
nop
mov
sar
out
test
retf
cmps
adc
daa
out
fwait
push
cmp
lods
outs
or
pop
leave
xlat
and
fsave
and
jecxz
mov
icebp
scas
push
cmp
inc
mov
(bad)
mov
(bad)
xor
stos
xchg
pop
cmc
jecxz
xor
call
cld
mov
push
aas
jmp
adc
push
xchg
mov
jmp
push
nop
xor
sub
packsswb
sbb
sbb
and
mov
mov
sub
imul
mov
push
mov
xchg
cmp
popw
add
cwde
int3
mov
cmp
shr
out
fdivr
cld
(bad)
and
retf
fistp
xchg
iret
dec
xchg
lods
xor
xchg
fstp
pop
push
xchg
pcmpgtd
add
das
mov
inc
xchg
mov
icebp
cmps
pop
loopne
mov
and
xchg
loopne
icebp
mov
mov
sub
icebp
push
int
fsub
sub
stos
xchg
and
push
mov
cmp
cmps
in
dec
sbb
xchg
jnp
adc
ror
mov
mov
pmaddwd
sub
call
and
adc
xchg
rcr
scas
loopne
call
and
sub
cmp
fadd
mov
fwait
lds
add
lds
cwde
xchg
pop
ficomp
pop
pop
mov
sub
gs
cmps
(bad)
xchg
sbb
pop
and
cmps
fisubr
out
dec
jle
or
sbb
xor
push
xor
xchg
ins
and
das
pop
out
inc
jno
imul
add
adc
iret
out
xchg
retf
fs
lahf
out
inc
adc
loope
in
repz
inc
adc
mov
aas
jmp
cs
leave
xlat
pop
rcr
xchg
aam
bound
(bad)
out
in
push
mov
mov
js
in
jl
sti
jb
push
jmp
sbb
inc
jle
xor
xchg
addr16
test
adc
in
rcr
in
fisttp
sti
imul
in
jg
retf
mov
les
add
daa
jmp
adc
cwde
inc
xor
nop
adc
jns
pushf
dec
adc
sbb
(bad)
pop
xchg
xor
sbb
xchg
adc
paddd
mov
out
idiv
imul
add
adc
fsub
adc
das
mov
dec
xor
push
mov
pop
rcr
jmp
call
mov
mov
mov
test
and
aaa
dec
(bad)
and
push
call
mov
dec
sti
aas
adc
movs
push
cmps
pop
fsubr
mov
pop
mov
lock
icebp
xchg
add
xor
xor
mov
outs
sbb
or
sbb
cmp
jecxz
fsubr
dec
shr
xor
xchg
add
pop
inc
pop
sub
mov
add
pushf
rcl
shl
ds
out
ss
pop
bound
pop
fnstenv
lods
daa
sub
inc
das
push
loope
sbb
xchg
adc
popa
add
push
sbb
xor
inc
xchg
stc
retf
push
xor
mov
mov
in
int3
mov
loop
repz
xlat
addr16
cs
and
por
shl
in
cmps
out
jmp
jmp
out
and
inc
iret
retf
enter
xchg
inc
iret
push
add
push
xor
pusha
sbb
and
popf
test
syscall
add
(bad)
pop
add
in
jbe
stos
add
add
rol
lods
sbb
enter
js
mov
div
pop
dec
aad
mov
int
arpl
push
mov
add
hlt
adc
mov
loope
pop
call
jo
or
inc
call
pusha
cmc
repnz
mov
inc
das
xchg
cmp
dec
xchg
pop
add
sbb
push
jp
stos
lock
mov
fsubr
out
std
dec
dec
sbb
jns
cmp
pop
push
add
mov
ds
mov
(bad)
ins
xor
ss
add
mov
xchg
adc
aaa
fdiv
(bad)
mov
enter
ss
adc
popa
ja
mov
nop
mov
out
out
das
cmps
repz
pop
mov
imul
(bad)
sub
out
adc
mov
loopne
jnp
in
test
push
push
and
nop
jge
ja
pusha
xor
inc
sub
leave
inc
xchg
add
push
hlt
loop
or
fmul
hlt
sti
jecxz
and
clc
cmp
inc
xchg
aam
sub
movs
gs
ret
add
addr16
in
ja
and
sar
into
cmp
sub
popf
out
inc
jge
cwde
xchg
xchg
(bad)
cmp
cmps
xor
imul
add
fmul
xor
ficom
rol
cmp
cmp
lods
and
add
or
test
mov
in
stc
cmp
dec
fcomp
xor
push
mov
mov
pop
push
fdiv
int
sar
mov
xlat
adc
add
(bad)
sbb
dec
inc
stc
es
inc
mov
stos
nop
jecxz
mov
jle
ja
adc
xor
adc
fisubr
gs
jbe
pushf
fisub
gs
lods
cmp
mov
jbe
stc
adc
inc
mov
fisubr
cmp
dec
ret
pop
pop
jns
sub
jne
call
cmp
js
test
pushf
cmp
es
cmp
movs
in
mov
xor
pop
rcr
js
retf
adc
push
xor
mov
in
mov
jno
inc
mul
fnsave
xchg
cli
or
daa
repnz
out
cmp
pop
add
test
mov
cmp
mov
mov
nop
mov
xlat
leave
mov
or
jle
mov
test
addr16
pop
jmp
fwait
sbb
dec
mov
inc
in
idiv
and
pusha
push
push
pusha
mov
xor
cdq
add
add
stc
(bad)
lea
xchg
inc
jl
or
xor
jo
mov
pop
out
cmps
add
sbb
jne
cmp
sub
sub
push
dec
iret
fsubr
jo
sahf
add
pop
push
and
mov
adc
pop
pop
dec
addr16
ss
and
dec
std
movs
in
push
xchg
pop
mov
jns
nop
and
or
stos
shl
push
adc
icebp
mov
xchg
push
scas
xchg
adc
jg
scas
sbb
push
inc
push
pop
xchg
call
mov
lahf
popa
push
lods
(bad)
pop
out
pop
xor
pushf
adc
push
(bad)
out
(bad)
das
ds
sub
xchg
inc
jno
sbb
mov
call
stc
outs
jge
aaa
push
add
xchg
and
xor
(bad)
out
and
mov
mov
test
cli
jmp
and
ins
imul
es
cmc
movs
ret
xor
addr16
sub
out
dec
in
mov
cwde
sub
test
(bad)
xor
mov
cmp
shl
rol
das
fdivr
mov
fisttp
(bad)
out
or
ss
nop
loop
pop
les
aad
std
fist
fstp
scas
mov
neg
add
pusha
mov
repz
mov
xor
mov
rcr
jle
cdq
push
(bad)
rol
out
or
jae
inc
out
int
mov
push
(bad)
and
push
push
movs
cmc
inc
pop
sahf
sub
and
jo
fild
into
xor
mov
rol
mov
mov
dec
aad
outs
sbb
test
ret
mov
sbb
cld
movs
cld
clc
sahf
retf
cmp
(bad)
scas
lds
mov
push
mov
lds
xor
xor
sbb
out
jmp
add
cmp
outs
outs
cmp
ret
pop
dec
or
sbb
jmp
jmp
out
aam
pop
ret
sbb
sbb
fiadd
xchg
xlat
or
iret
add
jne
sub
cmp
inc
aad
pop
xchg
test
fwait
mov
movs
in
mov
xchg
int
sbb
std
xchg
push
js
popf
xchg
add
into
xchg
dec
and
dec
add
mov
pop
(bad)
pop
fs
jle
pop
cli
ret
and
ds
dec
and
pushf
mov
and
push
fild
aad
lock
div
stos
and
sar
test
jo
xor
push
and
lds
lods
shl
and
arpl
add
jmp
in
out
jmp
pushf
pop
adc
out
sahf
(bad)
ficom
hlt
out
mov
push
xchg
(bad)
enter
jge
pop
pop
jmp
cmp
add
js
and
mov
pop
pop
add
lock
scas
movs
int
push
fidivr
cmp
jnp
and
add
ja
cmp
sbb
ret
stos
gs
test
pop
sbb
and
inc
cli
sub
jp
scas
sub
clc
sub
sbb
jmp
jmp
or
jne
(bad)
lock
xor
mov
ins
adc
jne
push
and
xchg
sub
clc
dec
mov
mov
xchg
xor
push
stos
jp
lahf
pop
pop
inc
pop
shl
inc
ja
adc
add
pop
xlat
cdq
push
and
outs
cli
jmp
js
lods
stos
xchg
dec
push
sahf
jnp
in
test
dec
mov
shl
test
ins
dec
pusha
and
mov
(bad)
arpl
pusha
aaa
mov
mov
fistp
imul
dec
loop
fiadd
mov
mov
ret
add
and
mov
mov
sbb
fisttp
in
cld
mov
mov
xor
aad
repz
mov
test
jge
mov
push
(bad)
out
pop
or
pushf
es
int
jnp
ja
outs
push
and
(bad)
sbb
mov
aas
add
xchg
(bad)
or
pop
push
inc
fnstenv
mov
mov
sub
cmps
cmp
out
in
int
lods
aas
jb
inc
mov
(bad)
sub
fdivr
inc
mov
lods
inc
shl
sbb
int
mov
adc
jnp
nop
test
mov
imul
jbe
mov
scas
sub
xor
cdq
cmp
xchg
aam
ds
pusha
mov
popf
jno
int
not
sbb
adc
stos
lds
dec
inc
mov
daa
movs
repz
lds
sbb
jnp
sub
(bad)
dec
imul
mov
inc
jb
xchg
push
std
(bad)
jmp
inc
in
jae
cmc
nop
pop
and
lds
adc
lds
lods
nop
sti
pop
or
xchg
inc
jbe
shl
cmps
inc
mov
pop
sbb
mov
(bad)
push
mov
sbb
mov
rol
push
sub
push
mov
mov
xlat
jno
add
(bad)
push
test
pop
cld
pop
movs
or
pop
stc
std
push
lahf
push
test
bound
(bad)
add
dec
rcr
cwde
adc
jmp
(bad)
cmp
ins
cmp
xchg
dec
mov
adc
jg
mov
repz
aam
or
enter
jg
sub
lods
mov
imul
add
aad
push
repz
mov
push
dec
jge
sti
push
xchg
sbb
jle
ins
jg
or
out
repz
cmp
movs
in
mov
mov
cmps
xor
(bad)
dec
mov
sub
imul
xchg
in
pop
mov
mov
jne
(bad)
inc
lods
popf
iret
iret
or
adc
adc
push
arpl
stc
lahf
sbb
cmp
cmp
xor
cdq
push
mov
mov
cwde
and
mov
xchg
sbb
pop
maskmovq
not
push
sub
xor
gs
retf
pusha
xchg
mov
hlt
xchg
xchg
es
fst
mov
call
adc
mov
add
stc
jns
push
cmp
mov
sbb
mov
or
movs
sbb
mov
inc
mov
jne
call
mov
cmp
or
add
jns
test
iret
(bad)
cmp
or
stos
in
scas
ss
or
(bad)
or
xor
pop
mov
jae
push
mov
mov
hlt
hlt
test
lea
push
or
sub
pop
mov
mov
cmp
xchg
cdq
push
fsub
sbb
cmc
mov
mov
std
jo
pop
push
pushf
movs
sub
sub
div
rcl
in
dec
xlat
daa
aam
sar
push
imul
adc
mov
loope
shl
repz
dec
sub
fscale
pusha
pop
sub
inc
and
jnp
and
clc
jecxz
cmc
repz
fprem1
fisubr
adc
and
mov
outs
mov
scas
pop
mov
cmc
pop
sub
icebp
sahf
xor
movs
push
test
push
and
mov
lods
(bad)
aam
lds
jle
sub
mov
mov
pop
mov
adc
je
mov
sub
cmp
push
add
lea
adc
arpl
movs
add
push
retf
mov
pop
push
mov
jmp
sahf
cmp
cmp
push
ja
fld
dec
push
xor
adc
xor
(bad)
and
jmp
pop
scas
pop
sbb
and
(bad)
test
pop
cs
fwait
dec
je
lock
lahf
popa
aas
rcl
mov
aam
sahf
inc
movs
iret
fprem1
mov
cmp
fsubr
ins
dec
pop
cmp
ud0
xlat
imul
jns
ins
cld
int3
push
lahf
fs
push
cmp
push
(bad)
neg
call
pop
mov
push
pop
aaa
pop
or
ret
inc
pop
xor
(bad)
jp
pop
(bad)
mov
aad
es
pushf
lahf
scas
idiv
and
ja
xchg
pop
fmul
mov
cwde
int
outs
fdivrp
retf
sti
xor
and
sbb
lods
dec
xor
dec
in
mov
inc
aas
adc
bnd
mov
mov
jecxz
fsubr
adc
add
test
push
int
aaa
pop
push
pop
shr
lods
mov
cmp
pop
push
sbb
adc
add
outs
lods
pop
outs
stc
pop
inc
add
out
add
pop
jnp
retf
bound
sub
jns
jmp
mov
sub
and
mov
dec
das
cmp
fidivr
and
or
popa
mov
loope
(bad)
sti
inc
pop
imul
add
addr16
mov
pushf
cmp
lea
call
(bad)
sbb
lahf
pop
cmp
stos
adc
add
cli
clc
ss
mov
pop
call
and
dec
pusha
imul
clc
popf
adc
inc
add
nop
daa
dec
pop
push
push
xor
retf
dec
pop
mov
test
stc
std
push
sub
add
aaa
pop
or
iret
(bad)
mov
sahf
outs
pop
pop
test
push
arpl
out
xor
and
js
repnz
out
lods
ja
sub
div
mov
mov
dec
xor
inc
pop
int
adc
sub
sub
or
mov
mov
inc
iret
fldenv
retf
ins
and
das
pop
jge
inc
jecxz
popf
adc
xchg
xchg
push
dec
dec
in
in
xchg
adc
mov
call
xchg
pushf
cmp
xchg
imul
pop
movs
cmp
mov
mov
and
test
mov
int3
mov
mov
pop
int3
xor
dec
movs
mov
adc
and
or
mov
popf
cmp
aaa
mov
mov
cmps
mov
inc
imul
mov
mov
out
xor
cmp
mov
movs
and
adc
mov
test
out
push
test
movs
add
in
out
sub
in
(bad)
bound
inc
jge
adc
cmp
jl
ja
xor
dec
daa
inc
iret
lock
inc
fsub
and
pop
lahf
cmps
stos
and
and
pop
ret
ret
shld
sbb
or
test
pop
mov
mov
mov
sub
and
fsub
adc
mov
aad
and
adc
mov
adc
push
mov
imul
aad
(bad)
mov
aam
lods
adc
sar
xchg
lock
push
push
mov
out
adc
jnp
push
(bad)
jmp
mov
lds
mov
jbe
cmp
cmp
mov
std
cvttps2pi
pop
stos
jmp
jp
mov
lea
sub
fst
(bad)
push
mov
inc
inc
and
cmc
xor
xchg
and
jbe
lods
jl
add
xchg
(bad)
std
mov
scas
out
push
push
iret
mov
mov
adc
pusha
scas
dec
movs
fmul
mov
div
sbb
xlat
dec
cld
shl
pop
or
jo
dec
mov
shl
mov
data16
jmp
js
push
sub
dec
mov
xor
xchg
dec
add
inc
stc
fidivr
jge
daa
daa
pop
push
cmp
popa
adc
fld
aaa
enter
jge
call
out
js
(bad)
add
sbb
loopne
imul
pop
sbb
out
imul
push
shl
jge
jbe
js
stos
gs
mov
call
dec
dec
cmp
shl
sbb
scas
cvttps2dq
pop
jns
repnz
or
mov
pop
xor
or
(bad)
fstp
cmp
mov
cmp
inc
or
or
das
jo
jne
icebp
mov
fist
xor
jo
cmps
in
jge
xor
or
xchg
sbb
jo
pop
xor
loope
mov
push
sbb
cmp
and
sub
in
mov
out
xchg
dec
inc
into
mov
sbb
mov
adc
cmp
iret
sub
ficom
loopne
and
mov
mov
js
cmp
ss
fucomi
js
xchg
hlt
dec
mov
daa
cmp
loopne
mov
pop
(bad)
inc
adc
loopne
inc
mov
push
pop
into
mov
popa
add
dec
xor
mov
out
inc
retf
push
jl
or
out
mov
jle
lds
cld
adc
mov
xchg
sahf
jge
test
adc
pop
movs
rep
xchg
push
sbb
rcl
pushf
xchg
xchg
sub
(bad)
shr
leave
or
pop
int
inc
push
add
test
(bad)
push
sar
dec
mov
addr16
imul
inc
out
mov
jle
mov
(bad)
adc
retf
icebp
xor
mov
sahf
or
sub
retf
mov
jl
mov
cs
fimul
mov
js
test
scas
add
out
leave
cwde
pop
retf
pushf
jb
inc
daa
dec
sbb
rcl
inc
fsub
dec
xchg
stos
stos
shr
(bad)
mov
xlat
test
aaa
push
ret
cmp
(bad)
dec
sti
ds
sub
push
sub
pop
push
sub
or
adc
push
and
mov
test
popa
das
inc
pop
push
sbb
(bad)
addr16
rcl
fnstcw
jo
sbb
jae
(bad)
cmc
ins
ss
xchg
jmp
lahf
jns
cmps
jb
setbe
retf
mov
jg
mov
mov
std
lock
popa
pop
test
jl
push
jno
mov
call
daa
add
xchg
loopne
aam
jge
in
mov
mov
bound
lods
sbb
popf
pop
popa
or
adc
jmp
jl
mul
mov
popf
sub
xchg
push
push
cmc
jge
push
sbb
or
shr
xor
jmp
(bad)
or
add
xor
aad
out
pop
aaa
mov
aam
aam
sub
je
or
push
add
sub
xchg
add
push
popa
push
mov
adc
lods
adc
hlt
mov
mov
jbe
mov
jecxz
sbb
sbb
ds
push
ficomp
pop
mul
lods
push
mov
popf
loope
mov
and
je
jmp
mov
pop
push
cmp
add
and
sub
(bad)
mov
mov
(bad)
fcomp
jnp
adc
in
cmp
jb
adc
out
jge
in
in
xor
sub
adc
dec
sub
aad
addr16
push
adc
pop
fistp
popf
mov
iret
fnstcw
clc
add
les
mov
xlat
jl
cli
outs
test
inc
mov
retf
push
inc
scas
mov
mov
aas
mov
rcl
fs
hlt
add
fs
xor
movs
sbb
cli
xchg
pop
pop
mov
pop
rcr
test
jp
popa
push
mov
sbb
mov
cs
cmp
or
inc
test
scas
or
popf
cli
in
push
cmp
mov
ror
or
int
push
shl
dec
xor
sbb
jge
fs
sub
xchg
mov
sbb
(bad)
rcr
or
push
ds
rcl
jecxz
push
ss
jl
lods
in
fstp
xchg
scas
test
inc
xchg
push
dec
pop
jnp
push
jbe
aaa
out
inc
pop
xor
pushf
push
add
repnz
push
adc
int3
out
test
add
retf
pop
fisub
dec
add
xchg
int
test
aam
push
mov
sbb
gs
ins
js
cmps
mov
xchg
mov
mov
adc
stos
outs
hlt
mov
aad
or
pop
sar
ror
(bad)
rol
mov
hlt
adc
leave
cmp
mov
gs
xchg
jg
test
fwait
pusha
add
cs
adc
jae
cmp
adc
mov
bound
mov
stos
cwde
add
fucom
mov
inc
fdiv
mov
pusha
pop
mov
data16
(bad)
xor
icebp
loope
dec
xchg
adc
xor
or
popa
dec
call
inc
out
in
fstp
repnz
not
scas
mov
inc
or
fneni(8087
frstor
add
fucomip
cli
cwde
enter
adc
push
push
push
call
push
test
sti
test
out
test
daa
pushf
push
inc
mov
mov
dec
inc
mov
fsub
mov
imul
enter
aad
scas
pop
ss
cmp
fnstenv
call
xchg
pop
adc
sub
sub
js
push
xchg
adc
jmp
lahf
and
in
(bad)
(bad)
mov
pop
mov
fidivr
mov
xchg
pusha
ja
mov
push
(bad)
loope
mov
inc
imul
xor
xor
jns
mov
push
push
inc
jmp
cmps
mov
jecxz
push
mov
ins
push
push
xchg
or
outs
xor
pop
lock
mov
cmp
push
jne
mov
shl
add
lock
mov
jbe
lahf
mov
div
xchg
sbb
push
cwde
ror
scas
xor
std
cmp
out
fwait
xor
sbb
int
mov
pop
outs
cld
push
add
int3
test
mov
inc
sbb
mov
sub
loopne
pop
not
mov
sub
ins
sbb
test
into
aaa
stos
xor
mov
sub
sbb
neg
cmp
and
inc
imul
rol
xchg
jecxz
(bad)
mov
sbb
das
mov
cmp
xchg
jmp
jp
lods
jmp
cmp
xchg
xchg
sbb
inc
mov
sbb
in
fs
mov
push
stc
or
es
cs
mov
inc
and
push
sbb
pop
and
or
and
mov
xor
jb
xchg
in
jp
xor
fisub
shr
in
and
pushf
fucomip
mov
add
sub
les
jmp
sbb
push
and
into
(bad)
aam
shr
xchg
mov
push
cmp
ins
ja
adc
inc
xchg
dec
mov
fs
cmp
out
mov
and
jecxz
mov
cmp
xlat
cmp
and
fistp
fldenv
sbb
xchg
push
stc
call
movs
fsubp
xchg
cmps
xor
outs
inc
jns
add
adc
xlat
pop
add
xor
add
push
sub
sub
stos
call
ret
lds
fs
aam
mov
out
mov
test
fwait
test
inc
sub
lea
jae
sbb
repnz
retf
and
pop
push
out
inc
sbb
imul
adc
cmps
int
out
sar
cmp
mov
mov
jno
test
es
push
sar
xchg
hlt
in
and
stos
out
and
jns
in
aaa
shr
das
sbb
sub
cmp
sbb
cdq
jecxz
aad
out
daa
arpl
je
xchg
xor
push
push
push
mov
xchg
cwde
jmp
jp
mov
and
rol
(bad)
xchg
pop
mov
je
xor
fwait
lods
repz
inc
loopne
retf
cmp
xchg
xor
mov
mov
(bad)
mov
xor
mov
scas
push
jno
lods
js
pop
loopne
pop
out
push
je
xchg
and
aas
cmps
jne
out
aam
jne
fs
jmp
mov
dec
loop
call
lock
mov
es
sbb
pop
mov
sub
cmp
inc
popa
bound
sbb
xchg
pop
fcomip
leave
repz
mov
cwde
mov
xchg
xchg
les
or
fdivr
ss
ror
push
js
push
leave
pop
inc
pop
fcmovnu
mov
mov
test
jo
mov
pop
inc
mov
fisubr
adc
sar
popa
pop
int
push
push
and
cmp
xchg
add
push
rcl
push
ret
lods
loop
jg
sbb
into
pop
lgs
lods
pop
sub
xchg
loopne
mul
sbb
adc
inc
das
or
(bad)
into
jl
ins
popf
mov
mov
mov
in
jp
sbb
sub
dec
repnz
xchg
sub
jbe
fs
into
adc
iret
mov
xor
push
and
fsubr
imul
add
push
mov
addr16
xor
inc
call
retf
cmp
mov
dec
aad
int
repnz
xchg
dec
enter
push
jb
push
inc
repnz
call
mov
(bad)
aam
add
cmp
mov
cmps
ret
inc
sti
mov
stc
dec
fiadd
lock
adc
call
dec
xchg
fadd
push
imul
cmps
dec
push
push
xchg
sbb
clc
pop
int3
push
xchg
adc
aas
js
push
out
icebp
jle
jmp
imul
or
test
or
jns
pop
or
mov
dec
xor
ret
sub
je
and
mov
daa
daa
int3
test
dec
test
repz
xchg
sbb
lods
clc
jne
xchg
(bad)
cwde
dec
fdiv
xchg
xchg
leave
rcl
je
mov
pushf
inc
add
out
inc
sub
(bad)
xchg
clc
jae
mov
xor
test
cdq
dec
cmp
jmp
inc
dec
xor
aad
mov
mov
shl
mov
xor
fcomp
xchg
xchg
addr16
xor
cdq
lahf
jnp
cs
sub
mov
mov
fisub
out
in
fs
jl
xchg
or
fwait
xlat
xlat
push
jl
test
fld
pushw
outs
stos
arpl
add
push
in
sub
pop
push
(bad)
push
mov
in
test
pop
and
push
sbb
mov
in
pop
push
push
mov
inc
pushf
sbb
jmp
pop
add
leave
stos
sub
fsubr
and
enter
lods
pop
add
(bad)
movaps
push
mov
fisubr
push
movs
retf
out
or
pop
mov
mov
jge
imul
(bad)
or
cwde
fs
cmc
or
push
jo
out
jne
cdq
push
movs
xchg
inc
fisttp
neg
mov
sub
in
sar
cld
gs
fldcw
jnp
int3
jmp
push
sbb
sti
add
inc
ins
fst
repz
(bad)
cld
jbe
sahf
mov
mov
in
push
nop
clc
jle
(bad)
add
ret
mov
cmp
xchg
inc
rol
mov
push
aad
add
in
ret
pop
pusha
div
loop
adc
inc
ror
xchg
retf
shl
cmp
pusha
dec
stos
sub
cmp
push
and
xor
add
mov
cli
mov
dec
mov
call
repnz
inc
rcl
jg
je
in
cmp
xor
xor
mov
xchg
and
adc
repnz
xlat
mov
jg
loopne
mov
xchg
mov
std
rol
sbb
ins
add
ins
cwde
add
fiadd
lods
dec
mov
fbstp
jo
es
mov
fs
sub
inc
inc
ja
out
data16
push
test
xor
mov
push
push
aam
dec
xor
cmp
sti
and
adc
pop
and
jge
push
dec
xlat
inc
xchg
sbb
out
stos
xor
dec
(bad)
mov
cmp
add
push
rcl
push
add
movs
leave
jno
push
jecxz
out
jne
fnstcw
in
sub
push
scas
in
pusha
nop
iret
movs
jmp
cmp
into
push
int
push
push
cmp
cmp
out
mov
add
or
adc
sar
sub
ret
cmp
fnstcw
fist
push
fidivr
push
cdq
fimul
xor
mov
mov
(bad)
mov
fidivr
inc
and
cmp
aaa
js
xor
push
xchg
cmp
das
ins
sbb
int3
repnz
out
movs
loop
add
adc
aaa
cmp
mov
mov
fild
cmp
cmp
inc
add
loope
or
sub
repnz
or
push
xchg
ss
mov
out
loop
gs
xchg
push
push
sbb
dec
sti
aas
cdq
fld
sub
test
cmc
inc
adc
fwait
std
repz
fsubp
xor
les
cmp
div
out
inc
call
mov
sbb
sbb
jp
dec
int3
or
push
add
sbb
js
lock
mov
push
in
lock
adc
fwait
push
pop
inc
mov
pushf
call
jmp
jp
mov
movs
inc
jg
popf
pop
mov
adc
outs
push
test
adc
lds
repnz
lock
lods
and
xchg
adc
mov
fldcw
mov
xlat
or
pop
pop
shl
fwait
dec
ror
adc
cli
jae
hlt
fimul
pop
retf
std
xlat
aam
test
shl
pop
out
shr
cmp
std
and
ins
jmp
ret
jmp
mov
push
or
and
(bad)
adc
xor
js
mov
inc
xlat
std
xor
aad
into
jmp
adc
jp
enter
int3
fucomi
vcvttpd2dq
mov
push
(bad)
fnstsw
pushf
int
mov
(bad)
cwde
(bad)
jbe
lock
in
xchg
rol
pop
hlt
jmp
push
jg
fiadd
outs
cdq
add
retf
inc
xlat
and
jne
push
test
push
aaa
loope
mov
and
sub
xor
push
int
mov
js
movs
(bad)
adc
rcr
fimul
lods
add
ins
pop
retf
das
cld
pop
push
fbstp
into
mov
sbb
in
or
fnstenv
repz
or
mov
mov
aaa
ss
out
movs
jbe
cld
pop
mov
fmul
and
das
or
push
mov
shl
or
sub
rol
or
xor
enter
ja
mov
lea
or
repz
icebp
jmp
mov
adc
sbb
mov
dec
hlt
adc
pop
jmp
cmp
in
in
cli
out
sbb
mov
cwde
cli
dec
cmp
cmp
fidivr
pop
(bad)
fstp
xor
out
jbe
jne
in
in
out
adc
stos
cmp
imul
fcmovnu
stc
inc
fisub
pop
sbb
pop
pop
iret
jge
xchg
(bad)
je
cmps
inc
(bad)
rcl
mov
cmp
adc
cs
pop
stc
xor
loop
jmp
adc
hlt
jle
fadd
add
jnp
cs
sbb
(bad)
out
jle
pop
sbb
lock
das
pop
adc
outs
ss
out
call
xor
jge
daa
pop
retf
cld
push
loopne
(bad)
jbe
jp
and
xor
fst
mov
test
ins
cld
aam
pop
fsubr
bound
pop
or
es
add
push
adc
mov
pop
call
push
pop
loopne
xchg
ss
or
loop
push
sub
imul
ins
cmc
movs
retf
vaddsubpd
retf
mov
jns
xchg
cs
cmp
arpl
xchg
aam
add
retf
sbb
(bad)
pop
daa
ja
cmp
repz
loopne
dec
xchg
ja
mov
sbb
and
repnz
fadd
and
sub
jbe
pop
push
dec
pop
movs
popf
popf
jecxz
pop
add
fcomp
call
mov
xchg
loope
xchg
or
pop
daa
rcr
ret
mov
(bad)
sbb
cld
out
xchg
and
pop
inc
fs
mov
ja
sar
push
setg
xchg
lods
mov
out
add
or
sub
and
int3
push
hlt
pop
stos
std
dec
retf
dec
xchg
mov
pop
adc
outs
ror
cmp
and
pop
out
leave
stos
add
mov
or
cmp
arpl
dec
cmp
pop
inc
mov
lods
leave
xchg
dec
add
lds
add
xchg
addr16
cmp
sbb
js
ins
es
push
sbb
(bad)
call
sahf
mov
jne
(bad)
shl
mov
jae
pop
jne
jo
xor
jl
sub
mov
cmp
aaa
outs
dec
jb
sbb
xchg
sub
jbe
jg
mov
out
pop
fs
mov
shl
ret
mov
(bad)
sub
sti
loopne
inc
cmp
ret
mov
cmp
inc
pop
dec
test
cwde
or
jne
shr
mov
test
jo
or
jo
nop
fisub
in
(bad)
push
mov
cs
mov
xlat
aas
adc
adc
add
aad
sbb
add
call
inc
cdq
pop
cmp
sbb
and
mov
in
jno
dec
fcomp
dec
add
mov
movs
jle
xor
sub
addr16
mov
adc
jne
mov
push
xchg
sub
popf
dec
(bad)
loope
add
push
in
cmp
mov
jbe
pop
pop
test
scas
dec
xor
or
mov
(bad)
(bad)
call
xchg
cmp
addr16
mov
cld
or
sub
sti
shr
inc
retf
sub
push
pop
cwde
aaa
inc
sbb
xchg
push
gs
mov
out
inc
movs
pusha
inc
fld
cmp
daa
and
xor
and
xor
fdivr
mov
sbb
or
lods
sub
sbb
cmps
mov
mov
pop
fmul
mov
add
(bad)
mov
retf
add
jne
je
xchg
jg
addr16
xor
cmp
(bad)
cld
mov
inc
(bad)
xor
xor
or
jl
push
mov
sti
sbb
mov
mov
pop
lock
outs
and
into
cs
shr
stos
mov
sub
cld
mov
ja
and
aas
out
and
jge
jge
pop
or
loop
xor
cmp
xchg
pop
movs
sbb
ss
out
adc
pop
cmp
test
jno
outs
add
and
inc
mov
pop
xchg
push
shr
jne
in
fs
pop
fsub
jl
in
push
mov
cld
adc
es
test
leave
pop
cmc
dec
cmp
repnz
ins
aad
inc
sub
(bad)
pop
push
pusha
mov
sbb
inc
ja
sub
pop
cli
push
mov
xor
adc
mov
pop
aaa
sub
dec
dec
jmp
push
(bad)
sbb
outs
dec
dec
mov
loopne
jne
adc
add
mov
add
jne
mov
push
jmp
std
jecxz
jmp
gs
test
es
sbb
sbb
xor
sti
cld
lock
jg
into
aam
push
jne
test
shl
xor
mov
int3
or
sahf
xchg
or
pop
mov
adc
push
cmp
scas
pop
stc
gs
inc
mov
cmp
sub
loop
fcom
pop
sub
mov
pusha
and
call
push
lods
hlt
or
xchg
mov
(bad)
pusha
das
pop
(bad)
dec
ja
cmp
cdq
lods
mov
jg
in
rol
arpl
aad
jge
(bad)
dec
arpl
mov
xchg
push
jne
mov
fisttp
and
sbb
(bad)
mov
or
xor
xor
sub
cs
jg
test
out
sub
xchg
daa
jae
pop
pop
je
std
sub
imul
mov
test
sub
inc
aad
xchg
retf
cdq
cmps
xor
mov
push
sub
pop
sbb
xor
test
test
(bad)
push
sub
xor
sbb
loop
mov
lods
pop
cmp
jmp
push
add
sbb
xchg
ds
pop
dec
sbb
mov
shr
outs
cmp
push
mov
outs
or
sbb
pop
xchg
cmp
and
xor
add
ficomp
sbb
push
shl
movs
ror
jnp
retf
lea
out
xchg
pop
int
pop
ds
mov
ins
dec
rcr
mov
ins
adc
push
inc
fiadd
(bad)
mul
cmps
sub
add
mov
mov
xchg
xchg
call
add
pop
call
dec
mov
mov
mov
(bad)
xchg
jb
ja
les
pop
mov
xchg
or
or
mov
push
sub
push
inc
sbb
in
test
cmps
call
add
retf
fstp
fld
fild
ret
addr16
cmp
cmp
in
dec
movs
out
pop
imul
in
xchg
jp
pop
push
loope
inc
cdq
xchg
xchg
stc
sbb
add
mov
and
arpl
shl
jnp
bound
mov
inc
pop
add
mov
stos
ss
into
into
into
push
push
test
pop
out
js
mov
fdivr
popf
xchg
data16
ret
adc
mov
fnstenv
xor
arpl
std
sbb
dec
fdiv
sub
cmp
sbb
sbb
mov
cmp
jno
(bad)
mov
cmc
aad
cmp
push
scas
icebp
and
bound
imul
cdq
lods
(bad)
fimul
nop
dec
test
sbb
mov
stc
xor
cs
xor
pop
xchg
sbb
ins
push
mov
cs
outs
xor
js
jl
mov
js
clc
mov
xchg
xchg
lds
sbb
test
ss
dec
pop
push
sahf
sub
mov
and
xor
mov
pop
xor
cmp
pop
ja
outs
jmp
sbb
retf
push
pop
mov
(bad)
fsubr
mov
shr
xor
mov
mov
or
fidiv
inc
repnz
mov
push
ds
fidiv
dec
xchg
sub
xchg
retf
test
jae
repnz
test
jg
in
ret
pusha
neg
pop
push
mov
inc
in
mov
in
out
cmp
stos
push
push
or
push
(bad)
mov
dec
or
mov
call
cmp
mov
sbb
and
retf
jo
cmps
in
stos
mov
adc
mov
mov
call
les
xchg
hlt
pop
xor
in
jmp
inc
inc
jl
outs
jecxz
jo
test
aas
mov
(bad)
add
(bad)
jmp
hlt
add
and
stos
dec
push
arpl
pop
xor
loope
rcr
mov
and
add
pusha
repnz
pop
mov
jnp
test
inc
adc
dec
call
test
aam
cmps
hlt
jl
imul
mov
jbe
pop
jno
dec
add
rcl
pop
loopne
aam
xchg
ds
mov
mov
(bad)
cmp
(bad)
mov
cmp
cmp
fwait
inc
cmp
inc
es
jae
bound
ins
fwait
stos
mov
scas
hlt
jge
(bad)
shr
mov
jle
xor
adc
add
lahf
xor
les
push
dec
add
(bad)
pop
mov
push
mov
clc
inc
xor
(bad)
or
and
imul
call
jae
sub
inc
out
inc
jl
xor
adc
fstp
test
xor
lahf
out
cmp
stc
cmc
es
mov
cmps
sub
cs
cmc
push
or
sti
pusha
repnz
add
mov
sub
dec
pop
jae
dec
adc
(bad)
sbb
cmps
push
out
loop
pop
xchg
adc
xlat
jmp
test
daa
add
or
add
jmp
mov
inc
bts
push
jns
in
jmp
xchg
in
mov
ret
mov
retf
mov
inc
lea
jnp
push
dec
xor
mov
inc
movs
jp
push
in
fbld
(bad)
mov
fiadd
xor
push
cmp
mov
retf
cmp
sbb
test
(bad)
mov
into
add
ret
rcr
rcr
popf
into
stc
sbb
cmps
daa
adc
pop
mov
ja
cmc
daa
cli
rol
scas
ret
rcl
test
xor
jmp
aad
pusha
sbb
(bad)
aaa
sahf
pushf
rcl
mov
mov
dec
mov
push
inc
pop
jae
cmp
sar
push
sbb
jno
dec
adc
jmp
cmp
repz
push
outs
mov
jge
ins
jmp
lea
sub
mov
rol
inc
xchg
into
dec
xchg
push
inc
int
pushf
stc
loope
and
xor
cwde
sub
(bad)
stc
into
popa
mov
call
hlt
in
inc
and
out
push
or
les
xor
xchg
dec
add
lea
adc
xor
fdiv
sub
or
ss
pusha
jge
sub
gs
cmovg
js
shr
test
xor
sbb
(bad)
in
sbb
jmp
inc
in
out
adc
cmps
std
jae
mov
fmulp
in
into
jl
xor
js
jmp
or
call
pushf
push
retf
xchg
push
adc
jecxz
xor
pop
cli
pop
dec
mov
and
mov
popf
xor
cmp
sbb
ret
or
popf
(bad)
fist
(bad)
ins
(bad)
lods
lahf
outs
mov
add
ja
clc
pop
mov
adc
(bad)
mov
bswap
mov
ror
mov
cdq
push
jmp
sub
sub
shr
push
push
aad
fs
fcmovbe
dec
shl
cmc
mov
add
(bad)
js
adc
pop
jmp
(bad)
inc
jle
and
retf
cli
mov
cdq
xchg
scas
cmp
fwait
mov
int3
mov
cmps
std
xchg
cmp
(bad)
inc
fistp
cmp
pop
sbb
adc
fisttp
mov
dec
retf
movs
jae
fcomp
sub
and
dec
add
fbstp
(bad)
jae
hlt
mov
mov
cmp
movzx
loop
cmp
ror
sub
xchg
add
xchg
in
mov
xchg
iret
ins
mov
pop
inc
xor
hlt
jmp
xchg
push
scas
sub
mov
inc
mov
mov
cmps
xor
leave
mov
in
nop
repnz
push
push
or
sub
repnz
add
jge
sbb
push
pop
shr
inc
lock
ficom
jne
jmp
xlat
clc
out
pop
mov
jecxz
cmps
test
imul
sub
lods
outs
mov
jl
push
lahf
xor
cmp
adc
xor
fistp
mov
pop
in
push
shl
inc
mov
mov
mov
dec
cli
(bad)
inc
mov
clc
inc
push
mov
jg
shl
xor
rol
push
cmps
rcl
add
movs
sub
lods
cmc
fisub
add
inc
add
jnp
int3
addr16
ret
stos
stos
cmp
js
fsubr
cld
(bad)
mov
sub
fldenv
push
add
inc
add
not
sbb
out
aam
imul
in
stos
cmc
inc
push
sar
rcl
arpl
outs
xchg
push
loop
sub
pushf
pop
or
iret
pop
nop
sub
aaa
push
mov
jecxz
mov
lods
sub
mov
aad
or
pop
add
jne
push
mov
fcmovnbe
stc
add
lock
xor
xor
imul
test
movs
(bad)
leave
les
(bad)
outs
cmp
fcmovnu
dec
stos
test
mov
movs
(bad)
sbb
int3
pop
sti
int
mov
pop
xor
mov
icebp
ins
mov
cmp
je
ror
shr
push
mov
scas
scas
jmp
cld
stos
pop
or
or
fstp
out
xlat
sub
and
sub
jmp
addr16
sbb
jno
cmc
in
retf
push
jae
rcl
pop
xor
mov
pop
rcr
lds
pop
mov
imul
rcr
mov
sbb
jns
call
add
lock
xchg
les
lds
loopne
retf
test
int3
mov
cld
in
icebp
sar
iret
scas
mov
jmp
lahf
add
lds
add
adc
sar
mov
fdivrp
mov
sbb
inc
inc
ss
sti
mov
adc
cmc
retf
les
jmp
or
mov
pop
push
cmc
push
xchg
mov
pop
in
jne
add
push
adc
ret
dec
test
inc
and
outs
fcom
iret
mov
pop
mov
add
jmp
pop
pop
rcl
pop
inc
das
xchg
jno
inc
hlt
push
cmp
bound
imul
mov
and
or
mov
or
add
mov
push
xchg
xor
scas
or
push
pop
inc
popa
jge
adc
cmp
ins
ficomp
sub
adc
jnp
iret
cmps
dec
xor
cwde
pop
imul
adc
pop
adc
call
iret
std
pushf
cmps
sahf
inc
and
mov
call
add
adc
mov
cmp
mov
add
in
sub
dec
iret
adc
xlat
bound
and
mov
stc
jle
jo
test
xchg
les
add
or
mov
cmp
sbb
or
shl
stos
cmp
mov
into
push
pop
mov
int
leave
adc
inc
pop
cld
sub
div
mov
out
in
scas
aas
(bad)
lds
cmp
cmc
pop
xchg
jp
retf
lds
and
pop
dec
xor
aam
pop
mov
outs
scas
enter
popf
dec
int3
ds
mov
outs
xchg
shl
jns
arpl
cmc
pop
add
ficomp
xchg
cli
shl
es
retf
cmps
inc
mov
aad
iret
xor
test
lahf
adc
cmp
lods
push
call
mov
(bad)
pop
mov
cmp
dec
das
jmp
imul
test
push
mov
call
fsubr
cwde
mov
ja
aas
outs
rcr
mov
leave
iret
push
xor
push
or
das
loop
push
dec
push
bound
cld
je
scas
lds
xor
sbb
mov
jo
pop
push
push
inc
xor
ins
(bad)
mov
data16
fimul
pop
test
xor
fs
ins
rcr
dec
test
cmp
cmp
mov
stos
ja
push
xchg
jo
sub
(bad)
dec
pop
inc
sub
xchg
push
pop
(bad)
mov
mov
add
sahf
scas
fs
xchg
clc
ficomp
cmp
popf
jecxz
ins
aas
loopne
cmp
mov
rcr
mov
jp
fcmove
cmp
inc
xor
frstor
out
lea
pushf
les
sbb
retf
loope
fxch
cmc
gs
dec
push
xlat
xchg
into
fist
pop
dec
outs
mov
loope
or
xchg
call
dec
stos
rcl
arpl
ret
add
jnp
add
int
addr16
outs
mov
loopne
xor
jecxz
jle
lahf
push
(bad)
cmp
lods
ret
dec
pop
push
enter
fwait
mov
jmp
pop
sbb
sub
data16
(bad)
lahf
mov
jle
in
(bad)
in
dec
cmp
test
sbb
jge
sti
or
cmp
outs
xor
push
xor
out
dec
sub
sub
in
cli
mov
push
scas
out
not
dec
and
mov
pop
jmp
xchg
push
sub
icebp
mov
inc
movs
and
cdq
cmp
mov
pushf
sbb
cmps
loopne
mov
add
repnz
fild
loope
push
test
scas
fst
(bad)
popa
addr16
sbb
ins
jae
inc
xchg
sub
xor
cmp
mov
ja
mov
inc
xchg
shl
nop
outs
ret
aad
sbb
add
test
mov
or
int3
jns
and
xor
loopne
jno
icebp
cmp
inc
xor
scas
push
push
adc
sbb
jns
cmp
mov
dec
mov
push
rcr
push
inc
leave
cmp
test
mov
pop
and
jb
dec
mov
inc
ret
imul
mov
pusha
cwde
cmp
iret
mov
mov
fucomi
rcr
daa
lock
dec
sbb
push
adc
jecxz
jb
cmp
(bad)
push
and
jge
xchg
inc
(bad)
mov
or
push
hlt
and
dec
stos
mov
movs
xor
pushf
rol
(bad)
jb
dec
je
push
push
and
push
push
loop
jae
cmps
pushf
aam
(bad)
xor
ds
imul
pop
(bad)
leave
pop
loope
data16
xchg
fs
out
push
push
in
push
sbb
addr16
loopne
add
into
xor
pop
xchg
je
push
sub
mov
cmp
or
or
push
in
pop
call
dec
call
mov
outs
retf
pop
xchg
iret
call
js
add
add
and
inc
popa
fadd
out
xor
(bad)
fsubr
stos
cs
rcr
hlt
sub
lahf
call
pop
or
push
push
aam
mov
xor
pop
xor
sub
bound
out
xchg
xlat
nop
dec
repz
mov
dec
dec
jmp
sbb
lods
sub
mov
je
lock
mov
sub
cmp
repz
and
xor
dec
dec
push
dec
push
push
adc
jo
mov
retf
pop
bsr
mov
sti
rcr
mov
jmp
dec
sbb
pop
jno
fs
or
out
test
stc
je
and
dec
aad
and
movs
sub
jmp
add
mov
sbb
sbb
sub
loop
les
hlt
pop
lahf
mov
sbb
pop
loopne
mov
out
repz
push
sub
pop
mov
int3
hlt
sahf
out
hlt
xchg
scas
ret
out
xlat
cmp
pusha
fild
lahf
dec
mov
sbb
xor
fild
sbb
xor
push
(bad)
or
dec
push
and
rcr
dec
sahf
add
sti
int3
mov
scas
iret
adc
xlat
hlt
mov
sbb
mov
icebp
inc
and
test
mov
cli
jmp
outs
mov
dec
mov
mov
cmp
inc
pop
outs
imul
cmp
mov
adc
sub
push
push
mov
mov
lods
fisubr
push
mov
lods
les
mov
bound
jg
cmove
(bad)
inc
movs
sbb
sbb
std
jbe
sbb
add
xor
pusha
jne
sub
in
rol
cmp
mov
movs
push
lahf
scas
sub
int3
inc
or
xor
xor
cwde
inc
ds
pop
mov
or
or
dec
add
sub
int
sub
pop
xor
or
stos
jg
inc
ror
sbb
int3
cmp
cmps
dec
mov
out
xchg
rcl
sahf
arpl
xor
daa
iret
and
push
cmps
rcr
ds
fcomp
lds
mov
and
cmps
inc
mov
leave
sbb
mov
popa
stos
inc
inc
xchg
jb
inc
jno
sub
dec
daa
jle
sub
push
out
push
hlt
mov
mov
out
int3
daa
ficomp
(bad)
outs
pop
pop
pop
cld
or
and
sub
sbb
pop
into
mov
pusha
bound
dec
mov
scas
push
dec
arpl
adc
jae
push
ret
inc
shl
imul
mov
std
das
mov
das
xor
dec
enter
into
cmp
mov
mov
sti
mov
mov
lods
ds
cmp
pop
ret
sub
rcl
dec
repz
xchg
mov
fidiv
fcmovb
adc
pop
pop
das
sbb
mov
(bad)
mov
jmp
jb
in
or
leave
cmp
pop
cmc
add
in
movs
and
in
fwait
mov
rcl
push
fdiv
icebp
xchg
int
mov
jnp
ja
rcr
mov
test
mov
push
or
dec
outs
mov
jmp
retf
mov
jge
js
and
xchg
mov
test
xor
leave
jno
repz
or
mov
clc
sbb
test
push
mov
jp
fimul
shl
jp
jne
pop
and
bound
iret
sbb
xlat
mov
pushf
stos
sub
fstp
rol
cld
test
(bad)
cmc
aas
add
jb
outs
aas
inc
xor
mov
xor
jg
je
push
ss
sbb
add
test
jbe
leave
ins
jb
push
xor
ds
movs
rol
push
pop
mov
mov
mov
loop
lock
rcr
cmp
cwde
std
sbb
jmp
out
pop
pop
clc
inc
(bad)
xchg
ins
push
or
fwait
out
jo
pop
aaa
mov
mov
jno
push
fsubr
kmovb
cdq
int3
imul
sub
xor
cmc
mov
arpl
clc
outs
cmp
fstp
in
sub
sub
retf
test
push
aam
imul
shl
scas
dec
add
out
xacquire
add
jb
xchg
mov
dec
inc
mov
xor
xor
inc
jmp
or
shr
in
ins
cwde
inc
inc
sub
dec
xor
dec
arpl
cmp
push
or
mov
and
pop
lods
sahf
dec
inc
lea
sbb
pop
or
imul
pop
push
xchg
movs
fbld
jmp
pop
inc
loope
add
nop
cs
movs
aam
out
les
sbb
add
sub
aam
dec
xchg
inc
jne
and
push
imul
pop
sbb
in
inc
push
ja
mov
adc
mov
stc
repz
mov
pop
addr16
add
mov
std
sbb
bound
into
ins
mov
pop
iret
push
sbb
stc
popf
sub
cli
ficom
ror
or
adc
jno
das
xor
push
dec
bound
ret
sub
icebp
sub
pop
cmc
repnz
ja
aad
xlat
cs
aaa
cmps
jmp
repnz
bound
sub
xor
mov
or
cmps
jo
xor
fs
aaa
add
jo
push
ja
sub
mov
loope
dec
adc
mov
pop
adc
pop
mov
add
rcr
dec
test
pusha
cs
cmp
sub
imul
jle
inc
adc
pop
idiv
cmp
jne
jbe
outs
in
shl
stos
pop
jne
sub
xlat
mov
cwde
mov
xchg
mov
sub
mov
(bad)
(bad)
fidivr
mov
shl
inc
cmp
dec
add
sub
in
jmp
adc
mov
dec
fst
add
fistp
lds
stc
std
int
stos
push
js
adc
jae
rol
pushf
in
cwde
mov
mov
fstp
(bad)
retf
xchg
sbb
je
add
jne
es
xchg
sbb
in
call
daa
loop
adc
adc
adc
push
pop
mov
push
dec
mov
add
dec
jno
ins
push
rcl
(bad)
and
or
xchg
jae
loope
xchg
mov
and
out
xchg
fsub
call
adc
or
mov
stos
mov
pop
add
and
add
clc
xor
(bad)
into
das
icebp
push
cmps
jecxz
or
xlat
mov
sahf
dec
sub
or
or
ja
hlt
(bad)
ds
cdq
(bad)
in
popa
je
movs
jno
mov
sti
fwait
dec
(bad)
xor
pusha
xor
pop
and
push
mov
or
repz
push
xchg
sub
mov
xchg
push
jne
sbb
inc
sbb
xchg
and
aam
jno
out
push
mov
mov
hlt
fisttp
or
pushf
push
mov
cs
mov
cmp
jne
inc
push
aam
xchg
jmp
inc
out
inc
mov
inc
xchg
mov
cmc
sbb
xor
mov
das
clc
and
pop
mov
rol
and
push
adc
sub
aas
cdq
push
adc
mov
clc
mov
lods
in
cwde
int3
fwait
or
(bad)
aam
mov
mov
push
std
mov
call
push
sbb
pop
icebp
fdivr
mov
and
cmp
xchg
add
xchg
bnd
xor
popf
stos
add
xchg
adc
pusha
ins
jno
and
loope
inc
lods
mov
inc
in
test
aad
pop
dec
xor
cdq
stc
fidivr
stos
add
or
test
mov
inc
cmp
call
fild
cmp
retf
imul
cmps
mov
lahf
lahf
sbb
stos
or
mov
lea
xor
jp
or
and
aaa
xchg
add
push
test
cmp
cmp
dec
pop
dec
fnsave
ss
in
rol
mov
push
add
jae
imul
fmul
fisub
pop
lods
xchg
rol
push
in
dec
cmps
nop
sub
xchg
in
mov
jb
push
mov
retf
adc
mov
popa
mov
mov
test
inc
movs
cmp
rcl
jno
out
mov
scas
xchg
pop
push
stos
dec
jno
sbb
lds
outs
push
inc
pop
dec
ret
(bad)
jbe
movs
adc
jge
fstp
lahf
fistp
lahf
popf
jb
or
or
lds
into
stos
cmp
daa
jno
neg
stos
inc
outs
cli
jnp
adc
mov
or
jb
sbb
sub
sbb
add
xchg
add
mov
xchg
sbb
xchg
mov
retf
cli
ins
mov
jns
and
xlat
xchg
cmp
or
jb
in
mov
push
(bad)
pop
mov
cmps
cdq
push
xor
rcl
pop
jl
adc
scas
mov
inc
add
(bad)
push
jle
xor
and
and
popa
out
mov
int3
sbb
push
add
aad
mov
mov
xlat
xchg
std
add
sub
test
add
hlt
sub
out
ror
loope
jle
sets
mov
push
fisub
test
loopne
mov
mov
ror
sub
cmc
add
jbe
test
(bad)
jle
push
int3
pop
fcom
sub
add
outs
sbb
mov
dec
daa
pushf
mov
push
xchg
push
cmp
fwait
pusha
rol
and
sahf
fisttp
push
nop
sbb
or
call
ins
cmp
push
fsubr
out
push
stos
adc
test
jae
sbb
loop
nop
ds
mov
xchg
loope
lods
dec
sbb
shr
jl
adc
inc
out
and
int
push
arpl
sbb
imul
bound
xor
movs
aam
sti
data16
in
stos
sar
push
(bad)
inc
jbe
test
jnp
mov
push
cmp
inc
or
(bad)
pushf
out
sar
sub
jne
push
movs
pop
rol
mov
call
sbb
pushf
and
(bad)
jno
jns
outs
icebp
iret
or
movs
cmp
and
jle
test
dec
fstp
ins
xor
xor
jp
cdq
pop
mov
dec
pop
mov
mov
xor
pop
push
push
and
dec
ins
popf
mov
push
in
ja
lahf
dec
jo
jno
xor
jnp
lods
call
xchg
mov
pop
dec
fsubr
add
jl
mov
repnz
lods
push
aas
and
push
into
sbb
xchg
add
mov
ja
outs
and
or
xchg
add
mov
stos
adc
(bad)
cwde
add
bound
in
or
and
stc
mov
inc
test
cmc
dec
mov
adc
and
and
dec
test
int3
inc
fcmovnu
fist
sar
js
inc
pop
adc
push
mov
adc
rcl
xor
inc
sub
inc
add
ja
dec
mov
dec
sbb
or
(bad)
xchg
jl
or
rol
iretw
jl
cdq
in
ficom
push
mov
dec
mov
xlat
mov
xor
xchg
push
xchg
lods
dec
jl
mov
sbb
dec
fcmovb
cmp
mov
adc
ins
sub
sub
jge
sbb
dec
cmp
push
mul
inc
push
test
jle
scas
mov
or
mov
out
pop
jb
inc
push
addr16
outs
xor
adc
add
mov
jmp
xchg
aas
out
cwde
add
xor
and
inc
fimul
push
movs
pop
outs
lods
or
mov
pop
xchg
out
loop
enter
mov
das
mov
dec
xchg
mov
xor
(bad)
cld
and
out
jno
inc
and
fs
gs
sbb
xor
mov
leave
xchg
adc
cmps
push
dec
and
fdiv
addr16
xchg
(bad)
fmul
push
cmc
test
stos
xor
es
sub
cwde
and
in
shl
repnz
or
cmp
jne
sub
add
fisttp
outs
shl
call
ins
mov
jmp
sbb
mov
cmc
sub
sbb
xor
inc
mov
cmp
nop
push
adc
pop
xor
push
scas
mov
dec
add
outs
leave
xchg
test
pop
xchg
dec
mov
push
movs
mov
push
in
push
loop
ror
popf
int
xor
push
ret
xor
retf
pop
in
mov
dec
jae
push
mov
in
or
ret
inc
dec
int
movs
cmp
xchg
dec
mov
bound
dec
dec
pop
cli
mov
cmp
mov
stos
adc
sub
push
addr16
or
pop
and
cmp
mov
mov
shl
fild
pusha
(bad)
popf
adc
aas
fwait
mov
or
movs
rol
pop
dec
vmovd
cmp
loope
fldcw
movs
in
(bad)
outs
(bad)
fdiv
add
inc
jg
jne
jb
pop
dec
inc
sub
(bad)
adc
pop
or
mov
sbb
cmc
ret
(bad)
out
std
fsubrp
int3
cmp
scas
mov
ds
sbb
ja
aas
fisttp
add
sbb
or
or
adc
sub
sub
pop
pop
jb
sar
jbe
(bad)
pop
push
xchg
or
jg
dec
xor
cmp
iret
xor
push
stos
mov
or
mov
dec
aas
hlt
adc
out
or
jge
xlat
dec
push
jmp
es
sbb
gs
mov
inc
xor
jecxz
sub
add
loop
cdq
mul
pop
repnz
xchg
and
mov
call
cs
xchg
cmp
ror
les
div
js
push
int
out
dec
xor
jno
ds
mov
retf
arpl
sbb
xchg
out
sub
xchg
xchg
pop
pop
xchg
outs
mov
ret
jp
inc
(bad)
ror
inc
dec
xchg
fidiv
not
sub
in
or
jle
cmps
lods
and
dec
xor
mov
push
dec
ins
adc
cmp
shl
outs
lock
popa
dec
clc
lahf
or
mov
push
arpl
out
or
pushf
mov
or
or
xchg
jge
pushf
out
xor
pushf
cdq
(bad)
retf
test
fwait
adc
inc
test
mov
or
inc
push
sub
pop
push
out
shr
mov
sub
pusha
dec
xor
mov
iret
push
cdq
adc
push
add
jo
jnp
std
scas
(bad)
and
mov
dec
retf
ins
out
adc
rcl
clc
cli
fisttp
xchg
add
push
mov
xchg
cmp
dec
test
push
jo
aad
dec
jno
call
lods
ja
and
aad
sub
icebp
into
sbb
dec
pop
cmp
xlat
and
into
cld
imul
cmp
in
mov
xor
sub
loope
xchg
outs
sbb
push
std
xor
push
dec
sub
push
jge
mov
repnz
xor
sub
or
movs
cdq
jle
in
push
mov
ret
test
aad
movs
cdq
jmp
xchg
xchg
inc
xchg
jp
mov
hlt
mov
bnd
jmp
mov
fisub
lock
xor
es
pop
js
jo
mul
add
adc
bound
ins
adc
test
mov
std
cmp
mov
retf
and
jg
sbb
gs
in
(bad)
leave
push
mov
sbb
frstor
in
xor
jl
and
cwde
pop
add
xor
push
fs
(bad)
jns
cwde
jp
inc
mov
adc
sti
sbb
imul
push
inc
sub
mov
sub
in
xchg
push
test
jnp
pushw
jo
test
push
std
retf
pop
fisttp
xor
nop
icebp
shl
adc
fisubr
in
and
push
xchg
pop
sbb
fist
leave
jbe
dec
lea
xor
inc
mov
jl
adc
and
pop
sub
mov
in
xchg
in
push
sbb
in
cmc
and
sti
pusha
je
push
sub
cwde
mov
mov
aam
or
fimul
mov
cmp
(bad)
pop
movs
arpl
mov
xchg
xor
sbb
xor
jl
mov
shl
cs
sbb
fidivr
mov
jge
sbb
jmp
xchg
fild
add
lock
inc
xor
or
inc
add
and
mov
push
jne
cwde
les
pushf
mov
daa
and
xor
sub
shl
data16
(bad)
aaa
push
jecxz
fild
mov
fnstcw
or
and
imul
fbstp
lahf
pop
mov
xor
jmp
lods
out
repz
sahf
cmp
stos
cmp
adc
or
movs
mov
sub
cmps
rol
jae
xor
aas
mov
mov
dec
cmps
sub
cmp
aaa
mov
and
xchg
mov
test
retf
mov
repz
and
clc
shl
das
mov
pusha
mov
pushf
inc
fsubrp
pop
xchg
mov
lahf
sbb
jg
movs
inc
aas
clc
das
jle
sti
mov
rcl
test
rcl
dec
in
movs
out
adc
inc
js
and
pop
lods
dec
xlat
movs
and
xor
outs
pop
movs
(bad)
neg
js
or
ins
mov
int
or
iret
jns
mov
ja
mov
mov
inc
iret
sub
xchg
jnp
adc
int
mov
mov
xor
lds
sub
mov
pop
cmp
fucomp
je
stos
cmc
adc
add
and
pop
aam
xchg
repnz
out
ss
xchg
adc
add
in
mov
xchg
repnz
out
(bad)
out
add
jae
mov
sahf
ret
loopne
pop
sbb
enter
mov
ja
cwde
test
and
jb
scas
cmp
mov
leave
repz
cli
test
addr16
jbe
push
arpl
ficom
mov
pop
and
push
add
xchg
bound
or
loope
push
outs
sub
sub
int
das
dec
adc
cmps
icebp
out
add
xchg
fdivr
and
mov
retf
arpl
call
push
add
scas
xor
mov
xchg
test
repnz
mov
stos
jp
(bad)
jmp
leave
or
call
ja
dec
push
mov
and
in
dec
mov
es
hlt
xor
sub
and
pop
or
pusha
cmps
in
fidiv
fwait
(bad)
dec
push
sbb
lods
mov
fnstsw
jns
jmp
arpl
dec
jg
pushf
inc
inc
cmps
mov
fmul
adc
mov
jae
mov
push
sahf
mov
mov
stos
xor
xchg
xchg
xlat
repnz
cld
fstp
or
sbb
add
dec
int
out
cmps
pop
fisub
loop
jae
rcr
or
sbb
neg
mov
jae
xor
movs
xlat
mov
mov
shl
and
cmp
add
pop
mov
xor
sub
stos
jnp
xor
pop
leave
dec
repz
mov
adc
fwait
cwde
or
fs
ss
jmp
(bad)
and
(bad)
or
lea
mov
nop
dec
xor
adc
fcomp
fiadd
les
pop
add
lds
push
sti
pop
mov
cmps
or
cmp
(bad)
jne
mov
jbe
(bad)
repz
out
cmp
jne
mov
jmp
ja
rcl
or
adc
sbb
stc
cmp
cmp
lds
imul
gs
outs
sbb
nop
repnz
mov
(bad)
and
das
adc
cmp
mov
cli
movs
pop
jl
and
ret
outs
inc
sub
das
sub
mov
test
rcl
lods
mov
adc
je
das
aaa
push
adc
ret
in
push
sbb
test
push
fdivr
sahf
out
stos
leave
jnp
mov
dec
leave
(bad)
sub
or
add
dec
lds
sub
push
jl
sar
out
call
out
fidiv
js
and
add
cmp
fwait
loop
jne
gs
sbb
adc
dec
test
stos
adc
call
sti
lahf
dec
ins
xor
(bad)
fistp
pop
(bad)
add
mov
jg
mov
dec
scas
inc
pop
add
mov
sar
int
adc
mov
push
out
test
sbb
and
push
push
(bad)
rol
jmp
repz
imul
(bad)
aad
sbb
(bad)
outs
xor
dec
sbb
and
xchg
out
retf
cmc
cwde
shl
or
cld
add
cmp
jnp
cs
cmp
pop
div
scas
mov
pushf
js
loope
pop
pop
or
pop
and
and
ror
push
iret
xchg
test
gs
add
and
mov
imul
and
cmc
cmp
shl
inc
mov
cmps
mov
int
mov
jmp
aad
jl
std
(bad)
cmp
mov
mov
mov
xchg
out
dec
add
inc
mov
dec
icebp
fwait
sbb
or
ins
dec
popa
cmp
loopne
in
add
xchg
jmp
call
nop
shl
dec
mov
jnp
test
xlat
sub
es
pop
test
mov
xchg
stos
das
sbb
mov
pop
ret
xchg
popa
sub
hlt
lock
inc
out
dec
scas
adc
xchg
pusha
pop
retf
pushf
mov
sbb
call
sub
jle
adc
iret
dec
mov
push
(bad)
repz
adc
adc
xchg
movs
inc
cmp
or
pop
in
push
das
inc
pop
xor
sbb
pop
ins
xlat
enter
test
repnz
jns
dec
push
imul
mov
arpl
pop
fdivp
repz
fmul
inc
es
cmc
mov
sub
jne
pop
(bad)
aam
enter
push
test
mov
or
(bad)
mov
arpl
sti
mov
retf
aad
mov
mov
clc
stos
stc
push
lods
jl
sti
mov
sub
pusha
int
outs
push
stc
and
out
mov
jo
pusha
xor
mov
lds
nop
call
add
leave
push
dec
add
push
xchg
lods
ret
pop
xchg
add
das
jb
cmp
xlat
out
xchg
retf
xchg
and
loop
lods
xor
pop
or
add
out
push
xor
pop
pushf
dec
out
adc
and
mov
stc
cdq
int
sbb
inc
call
inc
popa
test
sub
test
cmps
jmp
dec
ss
push
adc
add
pop
jl
or
xor
sti
jne
(bad)
fmulp
scas
call
mov
test
loop
cmp
cmp
mov
xor
adc
jmp
and
jb
sub
dec
pop
jb
mov
test
push
fstp
cli
sbb
xchg
xchg
scas
sbb
push
inc
add
rcr
push
push
sbb
mov
fidiv
leave
mov
inc
pop
(bad)
or
data16
pusha
add
sub
lea
jecxz
loop
pusha
mov
add
in
cdq
xchg
arpl
push
and
ficomp
out
push
popa
sbb
in
and
data16
icebp
scas
add
dec
and
push
pop
sub
jne
aam
lods
mov
jl
fisttp
mov
push
test
jmp
js
jnp
pop
mov
lods
sub
adc
dec
enter
sti
xchg
sub
into
data16
mov
aaa
lock
cmp
add
and
loopne
pop
in
jno
cli
out
stos
adc
mov
inc
cdq
data16
push
pop
jmp
push
pop
and
sti
gs
mov
jne
leave
cmp
leave
inc
ss
pop
push
xlat
pushf
mov
(bad)
and
retf
dec
repnz
push
shr
fistp
cs
inc
cmp
mov
out
pushf
daa
and
ret
data16
dec
lods
jno
xor
fcomp
jmp
imul
cmc
pop
inc
movs
cmp
(bad)
dec
sbb
scas
pop
loope
jnp
push
div
loope
outs
mul
mov
dec
aam
push
mov
jle
rol
ins
xchg
das
and
jbe
push
scas
push
fisubr
pop
push
xchg
mov
xchg
jae
mov
scas
mov
aam
das
in
js
loope
inc
clc
stc
push
inc
icebp
push
push
mov
aas
mov
stc
push
inc
je
push
arpl
shl
scas
jl
(bad)
sahf
out
sbb
mov
or
ins
pop
movs
(bad)
jne
aam
sbb
ins
push
inc
mov
dec
aad
push
mov
dec
out
adc
stos
sbb
das
jae
das
xchg
pop
(bad)
sahf
xchg
jl
pop
jbe
cmp
mov
mov
mov
sub
or
mov
sar
popa
sub
pop
lea
leave
lea
(bad)
push
or
dec
dec
nop
jns
inc
push
stc
mov
jns
cwde
adc
imul
pushf
push
dec
ror
nop
adc
cmp
stos
sbb
pop
or
test
sub
xor
ds
sub
std
lahf
int3
loop
mov
pop
mov
es
std
xlat
jp
xchg
sub
daa
ror
jecxz
inc
and
add
sbb
rol
mov
dec
retf
add
xchg
pop
add
pop
or
lods
dec
jge
mov
scas
sbb
jg
cmp
imul
fld
xor
xchg
mov
fprem
clc
and
packsswb
mov
leave
jns
push
leave
jnp
call
inc
addr16
sbb
loope
dec
jbe
add
mov
cmp
sub
ss
ror
fwait
mov
xchg
xchg
xor
mov
or
pop
adc
test
adc
jl
mov
pop
inc
aad
arpl
sbb
push
repz
xchg
adc
jmp
(bad)
mov
(bad)
stc
mov
jbe
or
fisttp
mov
ror
sbb
mov
or
loop
adc
sub
mov
cld
je
dec
(bad)
ins
stc
and
jns
imul
fs
inc
push
jle
fmul
mov
pop
xor
(bad)
lahf
sbb
jp
mov
add
das
shl
xchg
xor
jge
stc
xor
scas
in
jae
out
shr
(bad)
fistp
mov
cmc
sahf
cmpxchg
inc
sti
sbb
rcr
dec
adc
mov
push
inc
gs
add
inc
xchg
or
dec
in
mov
hlt
iret
scas
in
xchg
xchg
test
iret
sbb
xchg
into
call
lods
pop
jle
mov
add
retf
cwde
test
mov
jns
fstp
cld
cdq
ss
mov
push
movs
adc
cmp
enter
dec
int
pop
adc
add
movs
adc
mov
pushf
popa
fimul
fstp
enter
mov
dec
and
push
push
sub
jne
jnp
xor
mov
rcr
cld
test
mov
or
adc
(bad)
icebp
xor
xlat
clc
sbb
je
rcr
adc
hlt
das
repnz
pushf
sub
mov
ret
fadd
jmp
xchg
in
test
adc
sbb
jbe
outs
ds
jle
das
jmp
pop
fisubr
dec
mov
sbb
inc
cmp
xchg
repz
xchg
mov
inc
mov
push
test
inc
retf
ret
xor
pop
pop
xchg
or
add
pop
sbb
xor
sti
pop
aam
sbb
sbb
and
adc
push
shl
retf
jbe
pop
xchg
jmp
pop
inc
imul
fisttp
mov
xor
ss
xchg
and
ja
adc
xlat
add
pushf
fadd
cs
add
ja
dec
(bad)
enter
mov
add
jmp
xchg
cmp
xchg
outs
shr
push
stos
das
popf
mov
inc
push
or
fld
push
(bad)
nop
les
mov
jmp
dec
shl
movs
sub
sbb
loop
mov
jno
and
dec
loope
pusha
movs
push
scas
adc
into
xchg
in
scas
push
xor
pop
into
sbb
mov
movs
sbb
mul
iret
push
dec
jne
dec
or
fs
or
mov
xor
sti
aam
retf
jl
xor
sub
mov
ret
xchg
cmp
xor
push
or
dec
daa
test
xor
jnp
into
inc
mov
jmp
pop
jp
or
xchg
mov
repnz
lds
out
(bad)
or
rcl
lds
dec
or
rcr
xchg
leave
push
mov
inc
ins
mov
xchg
add
sbb
loop
mov
stos
fcom
out
jmp
cmp
push
idiv
fldenv
jmp
(bad)
mov
shl
sbb
xchg
push
adc
pop
push
xor
ins
test
pop
pop
ret
ss
test
mov
mov
mov
(bad)
or
mov
push
(bad)
mov
sub
mov
imul
ss
lods
fidiv
fs
and
addr16
sub
pop
in
mov
aad
xchg
xor
and
retf
out
bnd
movs
ret
(bad)
lock
imul
adc
inc
sbb
and
mov
pop
xchg
iret
cmp
in
clc
mov
xchg
push
js
mov
loope
test
add
not
in
inc
mov
push
push
retf
push
push
or
repnz
or
cmp
pop
sub
jmp
inc
dec
xchg
mov
lds
out
mov
icebp
fcomp
mov
xor
add
cli
fld
les
xchg
xchg
icebp
or
aad
out
cmp
movs
pop
cmp
call
inc
daa
test
pushf
icebp
mov
sub
push
xchg
cmc
repnz
popf
out
add
leave
lds
call
mov
jmp
in
fistp
adc
jb
and
repz
sar
test
mov
icebp
out
cdq
xlat
pop
jl
fs
mov
out
imul
imul
jne
mov
cdq
push
gs
aam
rol
scas
les
ret
lds
mov
ss
sbb
mov
in
popf
xchg
ficom
jg
push
adc
in
mov
cmps
adc
mov
mov
jg
int
xchg
ret
mov
scas
add
and
dec
(bad)
fs
sbb
jnp
mov
cld
mov
add
push
or
xor
jle
fst
xlat
mov
pop
xchg
inc
inc
jp
add
call
cmps
test
out
addr16
imul
and
cld
or
not
and
and
int3
push
fs
ret
xchg
add
push
sub
mov
dec
(bad)
aam
inc
popa
cli
leave
sub
into
cmp
adc
and
fs
jb
test
(bad)
arpl
scas
inc
dec
push
push
es
push
pop
push
or
inc
push
dec
jl
jp
pop
xchg
or
or
lea
ret
jp
adc
pop
inc
(bad)
xlat
pushf
test
pop
and
inc
cmp
inc
cmp
pop
outs
leave
aad
push
mov
push
pop
call
inc
pop
sar
retf
sti
pop
imul
in
scas
pop
and
loope
loopne
mov
and
dec
loopne
dec
and
push
pusha
xchg
sti
outs
jmp
push
or
jno
mov
cli
lds
int
and
js
push
mov
aas
aam
lods
sbb
push
int
imul
sub
mov
cmps
sub
mov
pop
push
add
mov
sub
mov
jg
gs
or
out
in
outs
jg
dec
or
inc
sub
mov
fnstcw
dec
cmp
sti
iret
js
popf
sub
jg
adc
(bad)
adc
xor
dec
xor
pop
sbb
pop
xor
(bad)
test
in
jbe
imul
jnp
sar
push
and
jbe
retf
shr
mov
pop
adc
rol
sub
adc
cmc
fist
aas
pop
fild
mov
repnz
or
xor
mov
scas
jp
mov
xor
and
jle
bound
stc
push
(bad)
pushf
mov
mov
out
jae
outs
ins
outs
es
inc
push
ret
or
and
stos
cmp
je
add
cmp
ret
pop
inc
(bad)
adc
jb
push
aad
fsub
adc
inc
inc
rcl
push
call
mov
pop
into
mov
or
into
adc
adc
push
lods
ja
stos
call
push
ret
pop
ret
test
add
fadd
lock
sti
or
sub
jg
call
out
mov
cld
in
call
xor
mov
cwde
adc
fs
xchg
jp
(bad)
dec
movs
ror
int
xor
cmp
and
int3
inc
push
xchg
ret
jle
iret
ins
and
pop
shld
in
jno
inc
psraw
mov
test
pop
mov
add
mov
popf
out
fisubr
icebp
stc
mov
mov
push
jle
cwde
(bad)
dec
arpl
daa
pushf
call
xchg
push
retf
xor
or
pop
nop
push
loop
(bad)
ds
mov
and
popa
add
add
or
pop
mov
dec
mov
xor
nop
nop
scas
sbb
sub
mov
jne
jp
adc
xor
aas
jecxz
popf
and
aam
and
xor
xlat
mov
push
iret
into
in
jne
sbb
rcl
into
cmp
int3
mov
scas
jg
push
mov
add
call
out
adc
sbb
dec
loope
and
jg
cmp
lock
xchg
xchg
pop
push
call
cdq
sbb
cmp
mov
and
cmps
cmp
retf
in
cld
push
ret
shl
sub
push
inc
adc
loop
inc
in
push
jbe
xor
sub
or
inc
mov
mov
push
pop
lock
jo
nop
dec
jbe
mov
ja
int3
mov
add
mov
vshufpd
mov
retf
pop
jle
lock
xor
aas
repnz
jge
(bad)
(bad)
(bad)
loop
test
cmp
sahf
or
dec
ret
fdivr
ror
iret
rol
inc
sbb
cmp
mov
(bad)
xor
pop
fldenv
pop
mov
(bad)
in
outs
pop
mov
popf
retf
jno
out
mov
cmps
adc
nop
dec
cmps
rcl
add
xchg
pop
lds
mov
lds
adc
push
ja
sbb
adc
ins
or
sbb
jbe
dec
push
dec
mov
pop
jne
push
xor
xor
dec
jge
sub
repnz
stos
and
push
movs
retf
cwde
mov
adc
xlat
mov
enter
jl
push
sahf
push
xor
push
in
xor
(bad)
in
btc
mov
or
add
shr
jo
xor
(bad)
sub
in
std
xlat
dec
(bad)
lds
clc
mov
in
loopne
daa
icebp
sub
popa
and
cmp
xchg
inc
test
inc
cmp
sub
and
and
jge
add
push
repz
mov
into
sbb
pop
adc
lods
lods
aam
pop
push
dec
neg
xor
mov
xchg
inc
in
pop
stos
mov
lds
les
ja
dec
(bad)
idiv
stos
rcl
pop
(bad)
pop
popa
inc
push
stc
jne
xor
sbb
outs
xor
mov
(bad)
outs
inc
daa
or
aad
inc
xor
call
adc
xor
jl
jmp
cmp
je
and
dec
dec
pushf
jmp
mov
jecxz
out
mov
in
sub
pop
jmp
ror
push
retf
mov
rcl
test
xchg
aaa
pusha
cmps
fmul
out
int3
aas
fmul
xchg
lds
adc
into
shr
in
push
cdq
xchg
nop
arpl
cmps
adc
mov
std
imul
scas
addr16
mov
xchg
xor
add
adc
adc
add
jnp
and
fmul
test
cmps
mov
mov
mov
pop
dec
dec
and
std
pop
adc
shr
dec
shl
adc
(bad)
out
xor
inc
int
dec
shl
aaa
jne
retf
fsubr
into
movs
clc
sub
sbb
or
ffree
xchg
sub
lods
cmp
outs
pop
adc
mov
aad
(bad)
and
popf
push
mov
pop
xchg
xchg
ds
outs
lds
lea
cmps
sahf
push
std
je
mov
xlat
add
aaa
mov
add
mov
inc
sbb
loopne
cld
jmp
pop
mov
int3
jbe
test
and
cmps
push
ins
loop
cmp
sbb
jge
(bad)
cmps
lods
mov
or
fldcw
addr16
xchg
imul
push
imul
ins
push
inc
pop
adc
xlat
arpl
mov
imul
cmps
pop
in
enter
enter
(bad)
pushf
jo
js
cmps
sti
call
mov
adc
sahf
(bad)
push
pop
stos
push
das
les
xchg
add
vminsd
out
ja
xchg
lods
cmp
sub
jno
fstp
push
push
xchg
sbb
nop
sbb
pop
cmps
adc
adc
mov
stos
bnd
cs
call
fwait
mov
loop
stc
xchg
repz
out
pshufw
data16
fnstcw
lods
jae
adc
push
adc
add
add
out
scas
push
inc
jecxz
push
icebp
es
dec
adc
fadd
movs
inc
sub
mov
mov
dec
or
bswap
fidivr
jmp
ins
shr
push
mov
mov
cmp
jno
push
clc
call
mov
out
xor
cmps
(bad)
in
cld
aad
jmp
xor
pop
mov
fnsave
inc
repz
mov
jns
xor
sbb
or
cmp
cmps
inc
fs
cs
cmp
mov
sbb
sbb
and
js
jae
xor
pusha
or
and
sub
fld
repz
dec
rol
jo
and
fisttp
jae
into
pop
clc
sar
sbb
bound
cli
loop
jl
inc
repz
in
jne
push
adc
popa
in
or
bound
gs
in
xor
mov
cmp
fs
fimul
or
xchg
dec
mov
cmp
mov
ret
dec
sub
rcl
inc
sub
(bad)
std
and
ret
mov
mov
rol
dec
mov
sub
add
mov
test
outs
cdq
pop
pop
call
dec
int
mov
or
mov
sbb
icebp
mov
mov
xchg
mov
bt
adc
xchg
push
pop
imul
xor
jge
jo
xor
push
nop
sbb
pop
retf
or
inc
mov
(bad)
and
scas
sbb
xor
js
push
es
and
mov
xchg
lfs
xchg
mov
pop
psubb
inc
stos
ret
ins
mov
dec
pop
ror
out
fcmove
push
mov
scas
xchg
test
ret
aaa
ins
fild
jmp
cld
cmps
jmp
imul
inc
iret
xchg
daa
out
out
sub
or
fst
push
xor
xchg
mov
push
nop
ds
pusha
aad
sbb
lds
mov
push
stos
dec
stc
std
(bad)
pop
sub
fucom
dec
mov
clc
daa
jno
xchg
mov
add
sahf
cmp
fwait
pop
or
inc
addr16
push
ror
out
push
loopne
or
shr
add
aam
xchg
inc
jge
aam
dec
add
leave
aaa
cmc
gs
icebp
cmp
mov
arpl
jmp
adc
dec
aad
div
mov
push
mov
mov
add
dec
mov
nop
mov
into
call
jb
fs
xchg
mov
jno
push
cmps
mov
movs
cmps
outs
(bad)
jmp
jmp
cmp
mov
xor
aad
inc
push
sar
sahf
arpl
enter
pop
iret
jmp
aam
inc
sbb
out
cmp
push
loop
cmp
lock
test
in
daa
mov
inc
or
sbb
mov
(bad)
in
sbb
xor
mov
xchg
add
imul
lods
retf
dec
gs
in
(bad)
in
sbb
shl
and
push
sbb
fnsave
mov
xor
sub
daa
pop
jo
or
fist
jg
jo
stos
popa
jp
xchg
aam
cld
add
popf
call
lods
pop
repz
sbb
ja
mov
jg
jmp
adc
mov
movntq
dec
inc
adc
jl
xchg
(bad)
out
or
out
(bad)
mov
or
add
in
push
xchg
cmp
pop
jl
adc
xchg
jne
ins
sub
or
inc
mov
lds
es
cs
dec
push
jnp
cmp
mov
xchg
ds
sbb
inc
pop
add
mov
into
adc
jmp
mov
mov
jp
lock
mov
xchg
and
inc
adc
jmp
fstp
mov
ins
fild
xchg
mov
mov
sub
jecxz
pop
adc
(bad)
mov
ror
in
test
dec
mov
jecxz
mov
ss
movs
and
mov
xor
mov
jecxz
add
pusha
ret
push
(bad)
jg
pop
aas
mov
jmp
cmp
test
call
add
add
pop
(bad)
sub
xlat
repz
pushf
rcl
cmp
sbb
enter
and
aam
push
sub
outs
mov
pusha
retf
out
jl
add
call
dec
shl
mov
jbe
arpl
mov
hlt
mov
or
push
jg
add
jmp
cwde
popa
sbb
test
sub
popf
in
out
add
ja
mov
imul
push
fs
pop
and
pop
fwait
imul
das
jmp
mov
cs
push
aam
aas
sub
xchg
hlt
enter
push
popf
pop
test
ror
ins
daa
ja
imul
add
mov
push
enter
out
fucomip
or
je
ret
(bad)
add
clc
cld
adc
test
cmc
mov
cmp
rol
jno
es
ss
js
add
clc
mov
pop
scas
aas
cmp
dec
push
or
enter
js
in
cli
dec
xor
cs
xlat
repz
xchg
xchg
or
lods
std
(bad)
cmps
sar
xor
push
sti
inc
retf
out
mov
jae
adc
fstp
mov
(bad)
js
pushf
(bad)
ds
(bad)
int
inc
jb
cmp
mov
push
push
jb
jmp
sub
int3
test
aaa
mov
or
test
inc
add
sub
(bad)
pop
(bad)
lods
mov
aaa
cs
jmp
syscall
cmp
test
(bad)
jmp
push
push
mov
xor
jae
or
popf
fmulp
loopne
mov
mov
pop
sti
retf
push
cmp
jne
inc
add
inc
pop
jbe
xchg
xchg
and
inc
jmp
cmp
inc
les
sub
mov
dec
repnz
call
and
mov
mov
dec
fild
cmp
push
sub
imul
enter
jl
add
sub
pop
inc
mov
pop
xchg
clc
repz
lock
gs
scas
and
or
out
or
aad
sub
cmps
or
xor
scas
jno
(bad)
mov
lock
(bad)
adc
je
test
aas
out
pop
je
dec
imul
and
mov
mov
outs
xor
sbb
mov
xor
in
or
adc
mov
pop
inc
jnp
(bad)
push
out
call
jo
jbe
jo
enter
movq
mov
pop
dec
or
inc
js
adc
add
add
sbb
stc
sbb
pop
dec
jae
mov
push
leave
in
call
xor
inc
or
mov
sub
stc
movs
pop
xchg
cmp
int
xor
inc
add
add
sbb
mov
mov
jmp
out
(bad)
pop
cmc
sbb
mov
imul
sti
dec
add
cmp
test
lods
cdq
pop
mov
aas
sub
mov
ja
mov
loopne
ja
dec
loope
push
sub
mov
or
ror
push
sub
xchg
movs
movs
ret
clc
jo
out
aas
movs
jecxz
sbb
add
stos
mov
and
aaa
(bad)
sar
sbb
mov
xchg
push
in
mov
or
stc
add
jp
imul
and
and
cwde
sbb
aas
daa
add
lea
lea
mov
ins
jno
inc
in
xchg
leave
mov
sbb
pop
add
aas
cmp
push
shl
aad
sbb
jnp
xor
jb
in
jg
pop
retf
in
sbb
add
out
sub
imul
icebp
inc
sahf
ja
cld
loop
or
sub
(bad)
hlt
stos
jne
out
and
jecxz
sub
jbe
jle
mov
mov
adc
inc
ja
mov
hlt
mov
loop
mov
xchg
lods
add
dec
stos
push
mov
(bad)
mov
mov
ficom
ins
and
ret
or
call
scas
lock
mov
jnp
ins
xor
xchg
js
adc
rol
leave
stos
jg
retf
push
repnz
mov
std
mov
sbb
xchg
rcl
xlat
add
push
scas
add
and
mov
(bad)
call
cmp
stos
adc
ss
add
test
xor
mov
mov
mov
or
cmp
ror
and
rcl
cmp
add
stc
daa
wrmsr
dec
movs
push
cdq
(bad)
fwait
cvtps2pi
ja
iret
pop
push
xor
inc
cmps
cmp
jno
(bad)
jp
sti
add
ss
jge
daa
inc
int
nop
xchg
push
loope
jb
ss
mov
add
add
mov
cmps
out
fwait
leave
adc
lahf
dec
loopne
pop
std
(bad)
adc
mov
mov
or
ss
sti
lods
lea
inc
add
(bad)
jmp
call
out
xor
pop
adc
mul
(bad)
or
aam
sub
imul
jo
mov
xchg
fs
cmp
xor
jmp
and
lahf
xlat
jo
dec
push
mov
(bad)
cmc
inc
xor
stos
xchg
jmp
mov
pop
xor
pop
syscall
imul
jl
stc
(bad)
imul
out
out
test
xor
jp
cli
clc
hlt
xchg
mov
sti
pop
jno
add
lods
test
jmp
xor
(bad)
and
or
imul
popa
mov
jmp
add
hlt
dec
fstp
dec
mov
fnstcw
jo
bound
mov
and
aaa
scas
push
loop
ror
or
sub
inc
out
jecxz
push
aaa
cmp
cmps
fldenv
clc
inc
dec
(bad)
push
xchg
test
sub
popf
bnd
addps
(bad)
(bad)
fld
ins
xor
xchg
cs
xchg
xadd
adc
ss
inc
into
mov
pop
aam
push
push
sub
das
dec
(bad)
shl
out
(bad)
mov
pusha
xor
cmp
sub
cmc
mov
push
xor
jne
imul
and
xor
jnp
mov
add
imul
and
jmp
cwde
pop
or
jecxz
mov
movs
push
push
or
or
cli
sahf
push
jae
gs
adc
xor
shl
out
inc
push
mov
xchg
das
adc
out
xchg
jp
mov
es
retf
test
inc
push
inc
pusha
mov
stc
push
(bad)
gs
(bad)
popf
scas
inc
dec
jg
repz
sub
jno
adc
sbb
jmp
xchg
ror
pop
outs
sar
aaa
pop
xor
pusha
push
lds
pop
sub
and
movs
test
mov
fisttp
popa
fnsave
pusha
mov
pop
ins
push
pop
je
out
aaa
and
sub
sbb
mov
outs
nop
mov
ret
pop
fsubr
sub
cmps
mov
add
mov
or
fs
mov
jno
pop
inc
enter
retf
test
inc
inc
add
je
mov
test
dec
test
loopne
jge
mov
dec
ret
inc
cmp
xchg
adc
mov
std
jmp
jnp
and
retf
sbb
lahf
xchg
shl
sub
fwait
lods
mov
add
dec
pop
lea
pop
push
and
nop
mov
or
pop
(bad)
lahf
add
cmp
sub
sub
iret
mov
das
popf
inc
push
in
sub
(bad)
xor
dec
mov
cmp
mov
mov
cmp
add
fdiv
xor
dec
les
out
ins
daa
dec
mov
repnz
and
mov
jno
mov
adc
aam
aaa
push
mov
pop
aad
sbb
test
outs
lods
les
popa
mov
cmp
ds
std
movs
jmp
mov
jmp
sub
jge
and
iret
(bad)
or
and
and
aam
stos
iret
in
stc
fcmove
imul
pusha
mov
adc
dec
sbb
pop
pop
clc
jne
je
aaa
xlat
mov
(bad)
jmp
ss
out
jnp
and
loop
cli
cmp
fldl2t
pushf
jno
ja
sub
pusha
(bad)
cs
mov
dec
nop
and
cmp
icebp
pop
sub
sti
pop
cmps
imul
cwde
nop
adc
and
sbb
push
aam
retf
add
ins
inc
hlt
pop
mov
movs
cmp
movs
shl
jne
lahf
push
xchg
pop
pop
pop
and
inc
or
mov
fnstenv
push
sbb
mov
movs
push
mov
push
popf
fldenv
adc
cmp
push
jle
xchg
push
push
xrelease
inc
dec
and
int3
mov
adc
jge
sbb
imul
outs
je
shl
mov
ret
(bad)
popa
fsub
jmp
pop
jne
dec
aad
cmc
jb
fsub
and
mov
push
imul
mov
aad
dec
xchg
push
sbb
shl
inc
push
clc
xor
sbb
es
(bad)
retf
stc
add
cmp
fbstp
mov
jge
in
std
inc
fcomip
mov
mov
sub
mov
arpl
jo
pop
sub
mov
adc
out
dec
lock
pop
shr
pop
(bad)
in
icebp
sub
nop
(bad)
ret
pop
push
ja
dec
fsub
sub
sub
mov
fwait
out
dec
in
push
xlat
jmp
inc
lds
rcr
out
sub
mov
add
push
jb
in
adc
pshufw
int3
std
dec
dec
pop
xor
cmc
imul
mov
lea
test
jl
int
mov
xor
or
cmc
or
jmp
push
mov
out
dec
(bad)
pop
pop
loopne
cwde
jmp
push
(bad)
jne
pop
push
pop
dec
(bad)
dec
(bad)
popf
pop
mov
or
out
sub
lods
xlat
inc
pusha
ins
push
(bad)
push
jge
popf
and
push
scas
add
adc
test
loopne
rcr
pop
sti
jno
xchg
sbb
push
sbb
xor
cwde
outs
lds
div
jg
mov
sub
test
es
cmp
jge
jne
lods
inc
das
xchg
pop
cmp
(bad)
cmp
mov
int
ins
mov
popf
cmps
lock
mov
fwait
and
lock
lds
add
sbb
push
or
fdivr
jb
pop
sti
add
push
fimul
mov
dec
(bad)
and
jge
mov
adc
and
inc
pop
mov
push
into
in
push
push
arpl
and
jmp
imul
or
pop
mov
fidiv
iret
retf
mov
dec
(bad)
inc
in
cli
into
push
ja
pop
cmp
fs
push
inc
stos
mov
rcr
mov
ss
pop
mov
push
imul
pop
pushf
pop
bound
dec
(bad)
les
jmp
or
rcr
retf
out
cwde
mov
mov
push
inc
jge
ficomp
pop
inc
fwait
sbb
das
dec
push
not
in
cmp
xchg
sbb
enter
mov
jecxz
outs
cmp
in
jns
jne
dec
(bad)
les
jbe
inc
pushf
or
adc
pop
jnp
(bad)
dec
sub
jno
es
pop
je
femms
adc
out
jns
mov
inc
rol
cs
test
dec
mov
es
inc
fdivr
and
xor
sbb
push
or
sub
mov
mov
pop
jne
pop
cmp
add
rcl
fcomi
(bad)
nop
xor
mov
jl
adc
bnd
dec
scas
dec
add
add
call
jno
popa
cwde
ret
push
xor
fld
scas
(bad)
ror
jb
mov
mov
int
pop
sbb
fcomp
xchg
mov
inc
mov
pusha
nop
(bad)
mov
out
call
out
fbld
popa
push
or
pop
mov
arpl
mov
cmp
in
mov
sbb
push
sub
sbb
fcom
mov
test
popa
mov
leave
xor
arpl
sbb
leave
jae
in
pop
sub
push
out
mov
jp
mov
ret
stc
cmp
dec
sbb
(bad)
mov
or
jne
repz
adc
into
stos
hlt
pop
inc
mov
pop
aad
outs
xchg
(bad)
xor
loopne
dec
sub
fisttp
outs
js
add
sti
sahf
mov
cmp
pop
(bad)
shl
sub
xchg
mov
loopne
daa
jg
cmc
adc
fdiv
sub
lea
shl
jne
xor
sahf
fidiv
cmp
pop
push
(bad)
fwait
mov
jbe
shl
ret
jg
scas
cmps
ficom
movs
xchg
sub
inc
mov
push
enter
je
push
into
cmps
add
cmc
aam
iret
xor
jl
ret
and
sub
push
mov
jb
jl
cmp
pop
xchg
ss
pushf
arpl
inc
int
mov
test
or
sub
add
es
je
lea
rcr
iret
xor
mov
fistp
ja
out
ins
mov
imul
mov
js
in
pop
mov
mov
jp
mov
nop
cdq
stc
ret
in
aas
or
js
jbe
mov
aam
fistp
jo
jno
or
mov
ret
mov
int3
les
and
and
cli
pop
daa
mov
sub
mov
xchg
adc
inc
sbb
retf
or
pop
xor
jnp
sbb
out
dec
sbb
pop
fimul
shl
inc
icebp
mov
sahf
cli
stos
sti
fcom
aad
call
mov
fnsave
xchg
jl
popa
or
lahf
inc
ret
add
dec
push
xchg
and
push
mov
mov
jns
stos
gs
mov
and
in
into
cdq
shl
cmp
into
xchg
sahf
in
ss
mov
sub
test
test
out
xor
in
dec
mov
lahf
aam
pop
cmp
aad
dec
vsqrtss
mov
cld
lds
movs
outs
mov
xor
stos
push
mov
je
in
cdq
mov
div
fst
pop
inc
hlt
aam
data16
outs
call
add
mov
pop
cwde
in
shl
push
iret
loope
or
push
sub
imul
and
xchg
inc
mov
arpl
fld
mov
or
lea
push
mov
arpl
xor
dec
jg
in
xchg
and
retf
cli
mov
les
es
pop
xchg
sbb
shr
jecxz
loope
adc
sti
in
es
cli
ins
cdq
and
push
repz
push
gs
rol
daa
div
adc
xrelease
jmp
loop
(bad)
jne
add
fisubr
push
jg
sbb
jmp
cmp
pop
mov
mov
enter
out
mov
mov
mov
pop
and
pop
xor
js
mov
movs
into
cli
xchg
es
lods
pop
dec
mov
mov
(bad)
ins
mov
mov
sub
in
xchg
(bad)
pop
aam
adc
adc
and
outs
mov
ja
xor
rol
xchg
dec
pusha
lods
xchg
cmp
and
mov
leave
jl
dec
mov
and
(bad)
adc
fimul
xchg
jno
cwde
push
sub
rol
je
mov
adc
outs
rol
xor
jo
jge
sar
fist
push
add
pop
cmp
pop
stos
icebp
inc
inc
std
sub
inc
dec
aas
mov
stc
std
mov
pop
add
sbb
pop
loopne
out
daa
in
sub
fdiv
or
inc
xchg
lods
sar
mov
mov
sub
ret
data16
movs
xchg
xor
adc
sub
add
neg
and
in
iret
jns
dec
cmps
pop
ret
xchg
push
lods
cmp
sbb
jo
and
iret
shl
shl
imul
pop
in
fsub
and
add
mov
addr16
inc
xor
dec
out
sub
sub
mov
out
xchg
cs
arpl
pop
ret
and
call
sub
jecxz
imul
pusha
aam
mov
xchg
sub
jle
or
scas
xchg
movs
mov
push
mov
frstor
jmp
data16
in
loopne
push
stc
adc
mov
pop
mov
loope
mov
cmp
pop
hlt
cmp
ja
and
pop
pop
mov
cdq
add
clc
sub
jge
push
inc
mov
out
ret
dec
dec
into
add
mov
bound
retf
fistp
(bad)
shl
xchg
jmp
mov
(bad)
mov
and
jnp
push
push
lock
sbb
xchg
pop
pusha
sbb
cmps
ja
xor
jmp
dec
sbb
mov
in
ins
(bad)
push
fwait
inc
mov
jmp
push
push
aas
jle
in
shl
int
mov
cmp
ds
icebp
xchg
je
pop
add
xchg
xchg
sub
lahf
or
jo
dec
mov
mov
jge
jp
inc
js
mov
scas
pop
bound
int3
iret
cwde
push
jle
sar
push
(bad)
out
push
mov
and
sub
xchg
mov
mov
ficomp
jmp
fwait
in
mov
aad
cmp
(bad)
cmp
test
je
xor
cmp
aaa
push
adc
mov
imul
repnz
loopne
pop
std
daa
push
(bad)
(bad)
jmp
out
adc
jnp
inc
shr
mov
dec
pop
out
sahf
leave
lea
mov
mov
or
les
inc
push
jge
cmps
mov
xor
dec
add
gs
xchg
je
(bad)
jmp
push
cmp
push
cmc
adc
sub
fild
(bad)
mov
fld
pushf
jl
jge
and
shl
jmp
ficom
in
adc
jno
push
fcomip
pop
movs
stos
mov
sbb
fcomi
xchg
push
popa
mov
imul
clc
push
int3
dec
push
aas
jp
add
std
pop
test
into
push
jnp
jae
push
loop
pop
stos
cmp
push
push
pop
push
and
adc
xchg
cmps
or
out
in
ret
mov
jb
sbb
push
jle
jmp
pusha
imul
fst
leave
mov
inc
(bad)
sub
aas
mov
(bad)
(bad)
repz
cmps
ficom
cmp
pop
fmul
cwde
push
icebp
pop
cmp
mov
and
add
ss
and
push
dec
push
sti
dec
adc
jno
ins
mov
fld
xchg
xchg
xor
push
or
mov
les
inc
add
aaa
fbstp
mov
push
inc
add
inc
xor
dec
movs
xchg
sar
outs
fbld
sahf
mov
lock
push
stc
leave
imul
fisttp
cmp
push
scas
imul
and
shl
xchg
mov
or
std
adc
jg
shl
xchg
add
ror
leave
into
jge
(bad)
sub
sbb
mov
xlat
mov
ds
push
adc
xor
hlt
aas
mov
imul
pop
xor
outs
mov
cli
fmul
test
push
and
es
adc
fs
daa
and
push
test
inc
xchg
retf
dec
push
pop
sub
jno
je
pop
mov
push
push
clc
leave
sbb
std
popa
push
rcr
lods
clc
xor
sub
aaa
pusha
dec
dec
or
cmps
jl
leave
fbld
mov
dec
adc
ror
daa
dec
cwde
add
std
inc
out
sub
out
mov
dec
int
rol
jp
xor
popa
xlat
dec
mov
adc
fcom
sub
stos
sub
aad
push
xchg
cmps
or
imul
fisttp
or
test
dec
sbb
xor
sub
mov
sub
adc
hlt
add
shl
pop
mov
and
mov
jmp
cmp
mov
jge
sub
ror
loope
xchg
push
xchg
add
push
icebp
arpl
(bad)
jae
mov
jo
jp
dec
or
mov
mov
arpl
mov
lods
or
in
add
jnp
mov
fstp
sbb
jo
xchg
cmps
fist
test
pop
cmp
sar
add
jo
adc
sahf
add
loope
jne
into
inc
mov
(bad)
(bad)
ins
dec
add
loop
ins
jne
jp
xor
in
cmp
sbb
mov
aas
div
out
or
mov
sahf
in
add
arpl
bound
push
mov
imul
(bad)
push
adc
rcr
mov
daa
cmp
mov
outs
push
out
jns
loopne
aaa
xor
mov
cmps
sbb
pop
scas
inc
mov
mov
pushf
cmp
mov
jns
into
and
xchg
inc
jbe
jp
(bad)
call
push
test
out
mov
or
pop
out
pop
dec
cdq
mov
pop
(bad)
fld
cmp
add
and
and
inc
sar
cdq
icebp
gs
sbb
(bad)
pop
add
bound
nop
pop
mov
outs
pop
fucomip
rcr
or
xchg
add
(bad)
xor
or
cld
pop
xchg
fld
lds
inc
sub
mov
out
adc
ret
test
sub
push
cmp
test
stc
test
dec
xchg
rol
test
fisub
sar
sbb
retf
loopne
adc
cs
sbb
pop
ins
jno
imul
sbb
inc
cmps
(bad)
jnp
jno
xchg
rol
xlat
fwait
mov
hlt
aas
into
inc
lock
cmp
(bad)
and
mov
retf
scas
aad
mov
push
cmc
push
jge
popa
mov
pop
add
xchg
and
clc
(bad)
mov
cmp
xchg
cmp
jno
fidivr
call
dec
(bad)
into
popf
test
or
mov
add
inc
fwait
inc
push
jmp
outs
pop
sbb
lock
xor
mov
sbb
inc
xor
out
fst
ins
enter
sub
aaa
mov
lock
cs
lea
lock
jmp
xchg
cmp
sub
fs
fwait
dec
sbb
push
jl
pusha
jmp
push
add
out
and
and
mov
fadd
scas
jnp
or
or
addr16
ret
add
cmp
out
inc
mov
repz
and
loopne
and
mul
mov
xor
iret
fucomip
xor
sub
or
inc
test
pop
and
mov
adc
cmp
mov
add
fistp
inc
pop
xchg
call
mov
cmp
fwait
cmps
cld
pop
(bad)
sub
cld
sbb
push
push
daa
or
mov
scas
xor
cmp
push
cmp
sub
cmp
add
ins
adc
adc
and
cmp
scas
adc
int
jns
js
mov
test
dec
xchg
adc
stc
or
mov
and
int3
loope
adc
mov
mov
mov
jb
xchg
leave
mov
arpl
and
cmp
mov
dec
xchg
lods
cmps
sbb
jmp
adc
cmp
out
or
lock
dec
mov
(bad)
push
pop
inc
mov
sub
mov
inc
xor
imul
mov
std
leave
cmp
jmp
push
pop
add
mov
cmc
scas
shl
fimul
dec
xor
sbb
jmp
(bad)
dec
lods
push
retf
and
imul
mov
mov
mov
push
pop
adc
adc
ret
mov
call
add
and
adc
sub
dec
adc
sub
push
iret
shr
ficomp
fiadd
jecxz
mov
adc
push
xor
push
ins
fs
jg
push
mov
outs
cmp
lods
ins
xchg
lahf
mov
out
leave
cmc
and
xchg
pop
popa
jnp
addr16
mov
lods
test
adc
pusha
fcomp
fwait
scas
jle
daa
inc
push
lods
scas
enter
push
sub
push
cli
jg
scas
mov
cmp
jno
adc
mov
addr16
lods
test
or
and
adc
imul
adc
popa
(bad)
pop
jge
xor
in
jb
xchg
cmp
int3
pop
cdq
jp
fisub
add
or
inc
lds
sbb
das
mov
idiv
dec
mov
test
aad
das
xor
xchg
ins
cmps
sbb
mov
xchg
dec
cld
mov
lods
inc
ds
test
mov
fld
mul
adc
inc
jns
ss
mov
inc
push
iret
push
lods
cmps
pop
iret
retf
mov
jecxz
fstp
test
jo
cmp
and
lea
or
sub
shl
sar
sti
icebp
mov
push
push
xchg
and
sub
aad
aaa
pop
push
outs
and
inc
sbb
(bad)
jl
cmp
sbb
mov
adc
mov
ror
call
inc
mov
jo
and
(bad)
addr16
sbb
enter
adc
out
cmc
push
mov
ins
dec
call
pop
in
sti
mov
jb
xor
shl
sbb
mov
sub
jno
pmulhw
leave
sbb
xor
cdq
xor
jmp
push
and
mov
sahf
sti
mov
mov
mov
mov
movs
gs
push
pop
or
or
sbb
push
xor
and
inc
fnstenv
push
jge
jmp
jne
sub
je
call
pop
addr16
fild
imul
pop
jno
dec
lds
push
inc
push
mov
into
mov
sub
jb
mov
xchg
xchg
test
push
int
push
adc
mov
jp
mov
xchg
add
repz
pop
sbb
sub
ret
xlat
mov
clc
pop
ror
jmp
jmp
xlat
dec
sbb
scas
fdivr
les
out
addr16
pop
pushf
add
mov
mov
fist
int
pop
mov
jle
pop
mov
or
in
or
and
mov
inc
dec
adc
xor
shl
xor
ficom
push
imul
sub
xchg
adc
ret
mov
imul
lock
repz
stos
in
mov
push
xchg
add
cmp
es
mov
mov
sti
iret
mov
mov
mov
push
mov
shr
inc
inc
addr16
(bad)
(bad)
lmsw
mov
xchg
retf
test
xchg
es
scas
test
ja
add
(bad)
(bad)
mov
jge
jle
mov
mov
and
mov
adc
cld
lds
ss
mov
ja
sbb
mov
cld
call
ret
cwde
push
(bad)
test
mov
push
ss
ret
call
sub
sbb
push
cmps
jbe
mov
rcl
or
sub
lock
dec
add
loope
adc
fcmovbe
mov
mov
cmp
mov
daa
dec
inc
cmc
xor
cld
retf
(bad)
xchg
imul
xor
inc
or
or
mov
(bad)
cmps
adc
stos
loopne
inc
add
xor
into
jecxz
push
sbb
and
ins
fadd
jge
sar
pop
push
outs
movs
(bad)
mul
sub
aaa
mov
std
(bad)
dec
pusha
jmp
jo
in
and
je
test
lods
dec
inc
push
cli
mov
and
xor
out
cmc
in
daa
sbb
and
xlat
or
icebp
sub
mov
jle
cdq
dec
and
xor
test
or
fimul
(bad)
movs
fldcw
repnz
in
push
fcomp
push
jge
std
fnstcw
fldenv
in
xchg
call
mov
fld
out
in
xchg
mul
dec
mov
inc
inc
add
retf
(bad)
mov
xchg
ds
hlt
out
std
in
sbb
jp
outs
std
jle
jbe
mov
mov
mov
sar
push
jo
or
(bad)
xchg
scas
imul
mov
enter
mov
fs
push
and
or
imul
stos
test
add
into
xlat
add
mov
jae
jne
imul
xchg
(bad)
pop
inc
stc
xor
int3
jmp
dec
mov
cmp
xor
scas
retf
sbb
mov
sbb
cdq
mov
stos
fld
movs
xor
pop
dec
pop
enter
cld
mov
sahf
add
(bad)
stos
pop
add
fiadd
arpl
push
test
dec
xchg
xchg
test
mov
sub
movs
pusha
dec
in
out
jle
gs
push
outs
bswap
xor
ret
sbb
leave
sub
(bad)
div
test
aam
fimul
ins
xlat
cmp
scas
sbb
retf
or
and
sbb
xchg
inc
div
cmp
outs
sub
fidivr
adc
frstor
cmps
xchg
jb
fdivr
fist
addr16
inc
xor
test
xchg
cs
inc
mov
cli
imul
jnp
jo
in
mov
and
mov
mov
cmps
fld
dec
pop
push
mov
and
(bad)
mov
(bad)
ret
stos
dec
ins
inc
dec
clc
xlat
ficomp
stc
adc
in
std
je
test
dec
sub
ja
push
aaa
sbb
xor
movs
dec
xchg
mov
lea
jg
dec
dec
mov
push
out
ret
test
ins
in
cs
sub
in
sub
outs
mov
aaa
mov
xchg
hlt
mov
inc
push
add
sbb
xor
cmovg
inc
pop
pusha
jae
ds
mov
inc
aaa
push
rcl
imul
cmc
test
sub
retf
cli
fisttp
add
rol
xchg
xchg
sbb
retf
ret
dec
dec
repnz
xchg
cmps
cld
pop
(bad)
mov
mov
sub
loop
out
jmp
sub
nop
retf
sbb
(bad)
mov
test
jg
jb
repnz
push
bound
test
mov
jb
adc
(bad)
add
movs
jmp
gs
in
outs
xchg
bound
(bad)
xchg
lahf
adc
mov
arpl
adc
xor
(bad)
mov
or
imul
je
mov
ss
or
(bad)
cli
mov
jae
pop
loop
dec
int3
adc
push
ja
dec
mov
push
xor
mov
jl
pop
pop
pop
mov
adc
sar
jnp
push
or
xchg
mov
bound
jnp
mov
in
(bad)
cmc
inc
(bad)
(bad)
inc
inc
pop
stos
pcmpgtb
jp
add
or
and
arpl
push
lds
inc
std
sbb
cmps
repnz
adc
mov
push
push
sbb
or
add
jbe
out
push
not
adc
push
dec
add
gs
or
ja
xlat
frstor
push
icebp
stos
std
push
push
cmp
or
or
cmc
pop
out
mov
jno
push
xor
adc
xchg
js
je
inc
out
xchg
mov
inc
jge
popa
stc
cmps
cmp
aaa
mov
sbb
mov
pop
xlat
mov
adc
push
dec
and
xchg
xchg
cmp
call
xor
mov
gs
(bad)
sub
es
sbb
icebp
push
stos
repnz
neg
xchg
aaa
(bad)
lods
sub
mov
fnstsw
dec
cmp
mov
pop
out
ror
cmp
inc
mov
(bad)
shr
push
dec
adc
sub
mov
out
fild
iret
mov
jb
sbb
repz
retf
cmps
lahf
push
pushf
imul
inc
or
mov
dec
jmp
cs
jo
nop
ins
sub
mov
movs
mov
int
mov
adc
add
imul
das
adc
scas
dec
dec
inc
je
mov
mov
sub
and
ret
mov
add
pop
out
stos
mov
test
fnsave
(bad)
and
sbb
scas
xchg
pop
jle
sahf
imul
cdq
cmp
add
mov
imul
mov
add
sub
mov
inc
jg
add
mov
or
leave
inc
fstp
inc
repnz
add
jbe
jno
psraw
arpl
ret
ret
mov
mov
cmp
ss
inc
mov
add
pop
ror
icebp
cs
cmps
out
add
shl
in
jmp
pusha
sbb
repz
xchg
and
test
pop
and
inc
pusha
sub
in
outs
push
xor
sbb
test
lock
jo
movs
sbb
cmp
aaa
xchg
jns
lahf
test
stos
jns
push
rcr
ficom
mov
pop
dec
inc
add
xchg
inc
clc
(bad)
ficom
mov
in
mov
mov
cmp
cmps
dec
pop
not
xchg
repnz
xchg
outs
sub
xchg
test
adc
mov
mov
dec
or
shl
out
fild
clc
aad
rol
cmp
lods
fdivr
xor
in
cmps
mov
repnz
jne
dec
sar
lds
jp
sub
sahf
ret
jg
lds
mov
aaa
add
push
ss
aad
jp
mov
inc
ins
out
fwait
xchg
enter
dec
pop
in
shr
xchg
aam
jecxz
(bad)
cmp
fwait
sbb
push
ds
in
push
jmp
jle
hlt
mov
sbb
fcmovnbe
jbe
xor
mov
fild
(bad)
das
add
pop
sub
jne
ss
ror
dec
adc
add
xchg
or
rcl
dec
xchg
pop
push
icebp
jmp
pop
ret
jge
jo
add
cmp
std
movs
clc
mov
mov
or
fistp
fnstcw
arpl
(bad)
cdq
stos
inc
and
hlt
pop
mov
sti
push
push
adc
(bad)
hlt
jo
or
pusha
movs
inc
pop
stos
not
jmp
popf
cmp
cmp
int
adc
mov
mov
test
(bad)
and
les
mov
push
jnp
mov
xchg
jns
pop
xchg
shr
cmp
mov
lock
sbb
adc
mov
movs
xchg
popf
push
stc
das
mov
inc
jne
jmp
imul
js
aaa
sub
cmps
out
scas
mov
jno
pop
pushf
iret
mov
cli
hlt
out
ins
leave
cs
mov
les
hlt
sbb
fcmovbe
xor
stc
adc
mov
enter
add
lock
in
dec
aam
(bad)
(bad)
xchg
shl
mov
out
imul
sub
test
cdq
mov
pop
(bad)
pop
nop
int
xor
imul
repz
sub
es
icebp
xchg
jg
cmp
sub
lea
ins
mov
inc
mov
jle
add
cmp
loopne
dec
call
sbb
mov
fwait
outs
repz
pop
sbb
jns
xchg
mov
add
mov
add
shl
xchg
mov
mov
inc
sbb
stos
into
and
pop
stos
aaa
out
aam
mov
stos
int
adc
and
idiv
jg
in
mov
fld
nop
and
shr
div
in
ret
retf
arpl
imul
xchg
idiv
pop
hlt
(bad)
xchg
popa
add
push
jbe
int3
sar
xor
inc
movs
push
ret
cli
add
mov
aam
mov
cmps
sub
mov
push
sahf
mov
idiv
pop
xchg
mov
push
push
sub
or
fld
(bad)
cmp
jg
fst
xor
addr16
test
mov
mov
or
lds
inc
int
lea
mov
add
xchg
imul
xor
and
push
test
mov
add
xor
ins
call
mov
rcl
mov
arpl
les
std
adc
adc
sbb
bnd
sbb
shr
sbb
jp
fbstp
ret
fist
(bad)
iret
mov
ins
sub
xor
sbb
test
lds
out
and
das
cmp
xchg
push
fistp
aaa
add
push
dec
in
jns
mov
pop
cmp
push
test
repz
sub
mov
dec
sub
ins
pop
mov
call
or
mov
aas
jae
clc
mov
xchg
jmp
icebp
jae
cmps
lahf
jg
ja
ror
addr16
mov
ficom
dec
sub
lea
jmp
out
mov
cmps
inc
push
pop
dec
ret
adc
jb
mov
xchg
ret
mov
pop
jmp
out
outs
xor
mov
fisubr
or
test
enter
ret
call
outs
pop
stc
aam
(bad)
cmps
cli
mov
in
movs
sub
sub
outs
jle
popa
cmp
fiadd
push
mov
lea
loope
mul
jns
je
mov
mov
mov
leave
mov
stc
xchg
out
inc
pop
mov
je
mov
mov
and
pop
and
shl
loope
inc
call
mov
and
outs
push
mov
aas
test
sbb
(bad)
in
lea
addr16
retf
imul
mov
jle
lahf
adc
rol
dec
adc
or
pop
aam
(bad)
sbb
cmp
inc
cmps
leave
jp
(bad)
in
cmp
fadd
xchg
in
dec
or
xchg
dec
(bad)
cld
scas
sti
cmp
fld
addr16
ins
or
repz
gs
(bad)
jae
ins
cwde
push
lods
and
cmp
(bad)
jmp
bound
dec
das
sub
dec
mov
adc
scas
cld
cmp
into
imul
push
ret
data16
repnz
sar
fwait
retf
aad
out
pop
ins
test
imul
adc
cmps
std
add
or
sbb
enter
sbb
cmp
repnz
push
xor
or
add
push
xor
sub
xor
mov
jecxz
sti
mov
fsubr
sub
repz
jge
mov
fcmovne
sub
in
outs
mov
pop
adc
pop
or
sbb
in
jmp
mov
arpl
pop
loop
call
jno
jmp
js
mov
imul
fisubr
jns
repnz
mov
fcomp
shl
fwait
pop
pop
cmp
int3
retf
test
test
rol
test
xor
stc
sub
xchg
arpl
jg
popa
jmp
inc
cmp
xchg
inc
jp
mov
lods
mov
sti
or
cmc
stc
mov
cs
xor
test
arpl
sbb
cmp
(bad)
repnz
push
or
mov
cmps
ins
mov
and
vmread
jne
out
xchg
mov
pop
and
sti
cmovb
push
or
jo
mov
jge
add
cdq
jecxz
daa
dec
mov
lods
mov
je
pusha
jmp
pop
dec
push
pop
arpl
dec
movs
cmp
jns
pop
mov
out
mov
lds
cmc
pop
fidivr
shr
retf
adc
out
add
mov
loope
inc
out
cdq
stos
test
inc
push
cmps
cmp
push
(bad)
in
(bad)
dec
push
fsubr
inc
loopne
and
(bad)
jne
add
lock
and
xor
es
pop
jmp
xchg
ret
push
loop
in
adc
pushf
fnstenv
pushf
push
cmc
pop
cwde
das
ret
pop
mov
sub
into
push
sbb
ret
pusha
dec
mov
mov
arpl
sub
lea
in
movs
inc
inc
cmp
and
xor
rcr
pusha
adc
pop
jge
inc
(bad)
lea
leave
(bad)
imul
fdivr
inc
addr16
rol
mov
(bad)
adc
xchg
adc
pop
inc
jle
(bad)
jbe
int3
push
xor
or
sub
aam
jmp
mov
dec
ja
fmul
out
mov
neg
or
cld
fld
nop
push
push
ror
mov
xchg
daa
cli
cmp
push
and
cld
dec
ins
jno
pop
jb
dec
std
mov
scas
movs
in
int
xchg
pop
mov
sub
fsub
sub
loop
push
push
mov
dec
mov
inc
push
leave
push
call
data16
and
pusha
pop
dec
xchg
call
or
cmc
movs
(bad)
lods
fisub
aad
ins
dec
out
jne
sbb
pop
add
dec
mov
(bad)
das
aad
adc
sub
adc
add
test
jae
fisubr
add
add
test
cmp
xor
shl
push
xor
hlt
sbb
call
loopne
(bad)
cmp
mov
lods
fcmovu
bound
jle
inc
shr
dec
pop
sar
jmp
outs
jp
jnp
mov
push
pop
enter
xchg
push
aas
adc
ret
jmp
xchg
and
popf
fs
in
js
inc
pop
cmp
dec
push
jns
adc
push
mov
push
(bad)
loope
fild
mov
loopne
or
push
scas
push
(bad)
arpl
cvtpi2ps
xor
scas
push
gs
mov
jno
cs
into
adc
push
outs
xchg
outs
fstp
int
mov
xor
int3
fwait
pop
js
movs
push
pushf
mov
add
cs
mov
in
adc
jmp
jbe
sub
jecxz
scas
cdq
dec
cmps
shl
mov
lods
std
and
aas
xchg
movs
out
das
into
mov
scas
mov
jg
mov
lods
loop
xor
dec
dec
scas
jg
mov
jo
imul
in
adc
shl
ins
hlt
enter
(bad)
mov
test
inc
mov
add
jl
jge
aam
push
push
cdq
sbb
call
inc
xlat
pop
or
push
jo
sbb
(bad)
and
pop
je
rcr
jecxz
jge
dec
aas
dec
sbb
or
cld
fs
mov
push
sbb
jmp
call
lahf
inc
or
retf
dec
mov
mov
add
pop
lahf
pop
test
sti
push
add
mov
in
jnp
xchg
add
in
add
hlt
lea
addr16
mov
inc
lock
lods
clc
jmp
dec
ss
shld
dec
and
adc
js
or
jae
mov
aam
retf
pop
retf
in
jecxz
cmps
push
retf
retf
xchg
(bad)
rcl
sbb
add
mov
hlt
test
movs
jno
jns
pop
mov
dec
mov
call
sbb
add
ffreep
les
int3
outs
dec
inc
xchg
mov
cmp
mov
dec
pop
cli
pop
arpl
inc
gs
in
mov
out
(bad)
aam
leave
adc
cmc
sub
test
into
mov
dec
inc
xchg
xlat
sbb
cmp
xchg
lock
and
sub
mov
xlat
imul
jne
xor
inc
mov
test
push
sbb
sub
push
dec
fsub
es
or
and
gs
jno
mov
xor
sub
xchg
pop
xchg
or
add
add
dec
or
clc
xor
pop
cmp
dec
outs
mov
mov
mov
pop
ret
mov
imul
jle
pop
call
cmc
add
cmc
shl
sub
jno
add
sahf
push
arpl
nop
fdiv
in
push
cmps
stos
or
mov
sbb
mov
call
push
call
out
clc
in
cwde
mov
sbb
es
sbb
cwde
sar
jecxz
sub
or
xchg
add
pop
lahf
in
inc
dec
xor
sub
dec
scas
cs
pop
aaa
test
sar
movs
std
popf
shl
adc
sub
dec
ror
mov
adc
repnz
je
inc
cs
das
mov
loopne
rol
cmp
hlt
es
test
cmps
outs
inc
cmp
or
dec
pop
test
push
mov
bound
shl
addr16
mov
imul
(bad)
out
add
mov
ud1
dec
into
mov
mov
sub
out
in
fsubp
out
or
push
enter
cmp
sub
push
mov
jae
jae
jmp
jb
or
fcom
and
loopne
or
clc
inc
sbb
mov
mov
jl
xchg
aad
xor
sbb
add
push
dec
je
cmp
or
mov
out
mov
push
popa
push
ds
xor
test
pop
add
mov
mov
sbb
jne
cmp
sahf
(bad)
xchg
retf
inc
pinsrw
xor
xchg
sar
and
add
in
push
inc
push
jecxz
ds
sti
cmps
(bad)
scas
pop
int3
adc
cmps
xchg
mov
inc
stos
rcl
sbb
jno
dec
sbb
mov
inc
jecxz
inc
std
pop
jo
in
xor
sahf
pop
cdq
fdivr
gs
pop
outs
outs
add
fistp
mov
xor
and
cmp
push
or
ror
push
fst
jo
xchg
stc
(bad)
mov
push
pushf
xor
mov
adc
adc
sahf
xor
gs
pop
xchg
sbb
cmp
sub
mov
pop
adc
mov
jg
in
add
sub
pop
push
mul
aam
pusha
call
lahf
cs
ficomp
jmp
xor
sar
scas
jnp
test
jns
in
lahf
enter
push
dec
in
dec
sbb
inc
add
je
pop
adc
jae
daa
sub
jo
dec
int
scas
or
inc
fisttp
sbb
mov
call
pop
je
jns
sbb
mov
pop
movs
mov
scas
repz
and
sub
ja
add
inc
xor
and
mov
mov
mov
popa
xchg
push
movs
dec
cmc
retf
inc
cmp
mov
mov
bound
adc
cdq
cmps
adc
push
pop
mov
enter
call
add
xchg
mov
dec
xchg
lods
ret
frstor
das
clc
lods
pop
cmp
(bad)
push
push
sub
cs
out
push
ins
fstp
out
xchg
inc
outs
jge
cmp
scas
dec
es
push
mov
push
mov
in
lods
jo
adc
gs
mov
push
popa
adc
adc
mov
jg
push
jmp
out
data16
lock
bound
out
leave
out
int
call
sahf
sub
sbb
cmp
and
stc
(bad)
jmp
jo
ret
cmp
xor
add
xchg
lods
arpl
sahf
jb
outs
inc
or
in
sbb
mov
lds
shr
fst
ret
add
xor
mov
call
sub
and
ret
loopne
cmp
dec
mov
outs
cmp
and
mov
std
gs
aam
adc
test
stc
xchg
dec
imul
push
mov
mov
dec
xor
jb
outs
out
(bad)
mov
xor
cmp
fcmovnb
sub
and
or
jne
icebp
call
xor
out
outs
pusha
imul
fnstsw
xchg
and
(bad)
shl
outs
out
push
xor
or
jmp
aas
rcl
jle
or
and
xor
aam
sbb
mov
sbb
imul
push
pop
mov
or
cmc
lock
cld
sub
and
nop
icebp
xchg
(bad)
jp
lahf
push
sub
or
outs
pushf
lds
lods
sbb
pop
fbstp
mov
cli
jnp
popa
inc
sti
mov
push
cmp
lods
cli
jp
sbb
movs
stos
push
inc
int3
mov
xchg
mov
jo
sub
(bad)
jne
xchg
adc
inc
inc
(bad)
or
lea
sub
rcr
fimul
sub
lea
sbb
(bad)
fcmovbe
pop
loop
(bad)
xlat
stos
push
push
int3
(bad)
mov
mov
call
mov
ds
jbe
leave
pop
or
xor
and
cwde
shl
mov
and
push
sahf
loop
mov
jmp
sub
cmp
jbe
inc
stos
daa
stc
mov
push
mov
pop
pop
inc
sub
add
cli
mov
outs
pushf
pusha
test
aaa
push
mov
dec
(bad)
and
inc
cwde
sub
mov
lods
xchg
mov
les
xchg
push
in
sub
lahf
xor
jl
sti
cmps
pop
mov
add
sbb
adc
mov
int3
retf
inc
sbb
adc
stos
pushf
xor
jl
imul
mov
mov
shl
or
mov
or
sbb
aad
mov
pop
in
or
jnp
sahf
sbb
arpl
pop
push
inc
mov
pop
pop
(bad)
jnp
or
push
test
add
cmp
cmp
xor
mov
clc
push
pop
pop
mov
dec
mul
xor
adc
iret
xchg
lods
jnp
mov
fst
adc
push
xor
ss
jmp
sbb
xor
dec
fist
add
test
test
mov
push
cli
pushf
test
inc
mov
cli
movs
jmp
cmp
dec
loope
test
imul
rcr
shl
cs
test
xchg
cli
test
pushf
stos
inc
mov
pop
push
out
adc
adc
scas
aas
test
push
ins
loopne
div
adc
gs
dec
xchg
hlt
fistp
lods
sti
daa
imul
sub
ins
push
pop
xchg
push
movs
mov
fs
sbb
test
scas
or
cmp
xlat
xchg
aas
mov
xor
dec
inc
mov
out
or
dec
push
fadd
repz
cmp
adc
mov
loope
add
fistp
aas
xor
dec
pushf
jns
pushf
repz
mov
xchg
pushf
lods
push
addr16
xor
jb
inc
inc
mov
pop
adc
rol
push
dec
data16
fsub
mov
xchg
sub
dec
movs
adc
add
test
sar
cmc
jp
push
xor
dec
aaa
jecxz
push
aad
add
leave
or
mov
mov
dec
popa
or
jne
or
outs
dec
cmps
xor
and
pop
inc
ss
fisttp
xor
push
gs
(bad)
jnp
cwde
cdq
jge
mov
je
xor
push
mov
popf
sti
inc
xor
and
jge
stos
les
cwde
cmps
lea
pop
cld
fcom
outs
sbb
push
cmp
and
cmp
sbb
and
inc
fcmovne
pop
imul
(bad)
pop
push
jbe
mov
pushf
pop
retf
mov
xchg
sbb
(bad)
pusha
hlt
mul
add
(bad)
mov
daa
scas
test
mov
adc
mov
in
push
and
or
cmp
cwde
xor
mov
imul
mov
shl
mov
ins
stc
push
inc
fisttp
mov
xchg
mov
xor
mov
cmp
ins
jmp
add
jb
xor
daa
sar
mov
in
ja
xchg
push
jg
in
pop
xchg
pop
push
mov
aas
sub
pop
inc
in
adc
mov
clc
jno
pop
outs
xchg
sti
jg
mov
bound
xor
iret
retf
sbb
cmp
call
jnp
xchg
shl
je
retf
in
cmp
dec
movs
xchg
pop
push
jl
(bad)
(bad)
ss
out
pusha
faddp
push
jg
cmp
or
aaa
cmp
imul
xlat
fild
js
sbb
mov
fs
or
push
jne
aaa
mov
pop
cmc
leave
push
dec
mov
cmp
add
sar
cmp
inc
lods
mov
cwde
dec
sbb
pop
std
sub
es
dec
adc
pop
sub
in
and
push
pop
(bad)
sub
(bad)
jo
test
adc
loope
retf
call
out
mov
icebp
inc
(bad)
add
(bad)
lahf
loopne
ror
pushf
out
mul
mov
fsub
in
daa
shr
mov
inc
jecxz
xor
cmp
(bad)
sbb
aad
cmp
cdq
(bad)
rol
mov
jmp
cmps
shr
(bad)
sahf
and
stos
inc
ret
and
loopne
or
outs
jl
mov
or
adc
mov
sbb
push
add
jb
push
out
cmps
rcr
inc
push
sbb
or
aas
dec
xor
shl
mov
pop
test
rcr
cld
js
mov
mov
mov
adc
jne
sbb
call
and
pop
jae
inc
ror
push
mov
sti
in
loope
inc
fwait
push
add
or
jns
loope
xchg
aam
mov
add
xchg
sbb
adc
les
mov
aas
and
xchg
div
adc
mov
cmp
fdiv
mov
std
push
icebp
or
adc
push
test
icebp
sbb
add
add
jb
pop
adc
ja
mov
pop
and
fwait
and
fstp
out
add
ror
mov
mov
mov
mov
pushf
imul
imul
dec
fild
jmp
and
sub
push
dec
jns
mov
push
mov
ficomp
pop
sbb
scas
add
sbb
enter
iret
shl
aad
dec
sahf
pop
cmp
jo
and
jmp
push
imul
daa
repz
bound
jl
popf
arpl
jmp
retf
and
cmp
or
iret
adc
das
sub
jnp
pop
aas
sbb
push
addr16
sbb
dec
adc
(bad)
adc
fsubp
fisub
outs
xchg
mov
adc
mov
sar
ss
pop
add
retf
pop
hlt
cwde
les
sbb
add
dec
mov
push
fist
clc
add
imul
mov
imul
jp
inc
(bad)
mov
cli
je
pop
pop
dec
lahf
xor
push
pop
xor
fidivr
movs
loope
xchg
push
int3
pop
fld
repnz
popf
test
add
imul
mov
sbb
inc
xor
xlat
das
adc
pop
nop
stc
hlt
test
sets
aaa
pusha
pop
sbb
cmp
or
push
movs
cmp
aam
adc
stc
or
pop
xor
mov
sbb
add
inc
aaa
lea
test
cmp
adc
inc
sbb
gs
xchg
clc
pop
mov
(bad)
sbb
adc
xchg
and
push
mov
adc
jo
(bad)
sbb
cmp
scas
test
call
mov
jno
push
in
and
adc
xchg
aam
sti
data16
add
cmp
add
out
ja
cmp
loopne
push
and
xor
enter
pop
pop
(bad)
pop
call
dec
pop
into
mov
sub
iret
xor
mov
outs
jnp
pop
test
ds
or
pop
jl
mov
push
xchg
jmp
inc
jp
cmp
out
and
loop
and
adc
addr16
inc
fist
cs
loope
cmp
pop
push
out
fwait
dec
jp
ret
(bad)
cmc
ficom
scas
pop
sub
mov
test
xchg
and
and
xchg
cmp
and
fidivr
xor
retf
and
loope
test
and
adc
dec
gs
das
dec
and
pop
xor
add
mov
fs
jae
inc
out
dec
out
dec
adc
push
arpl
jb
xchg
in
add
enter
sub
mov
sub
mov
dec
rol
mov
call
(bad)
es
or
retf
mov
push
dec
mov
loop
xor
sbb
cmps
in
push
add
ins
dec
sahf
stc
pop
mov
retf
mov
and
addr16
(bad)
push
test
cmp
stos
(bad)
sbb
popf
stos
cmp
pusha
push
cwde
inc
jl
jmp
pop
xchg
sbb
dec
mov
add
fwait
pop
out
shr
int3
push
div
sar
mul
ret
stos
pop
sbb
int
xor
sub
inc
and
ffree
push
adc
dec
push
shl
jne
pop
gs
data16
nop
mov
xchg
xchg
dec
or
xor
jns
(bad)
adc
adc
push
xchg
cmp
xor
scas
scas
sub
imul
aad
dec
cmps
add
and
es
push
and
int
xor
das
loop
lahf
sar
ror
mov
adc
or
cmps
jae
mov
pop
mov
loop
int3
clc
fstp
repz
retf
jbe
dec
cmp
and
lods
mov
adc
arpl
outs
add
push
pushf
(bad)
fs
out
xor
ins
popa
inc
mov
test
int
fwait
stos
push
in
fwait
sub
mov
out
into
lods
jno
mov
jo
cmp
jns
cmps
ret
xor
or
adc
jns
xlat
lods
jbe
mov
jl
xchg
dec
repnz
data16
mov
shl
xlat
push
mov
xor
test
sub
dec
pop
in
cmp
or
scas
fstp
inc
pop
jae
std
popa
scas
sbb
lods
adc
mov
icebp
stc
cli
repnz
ficomp
sbb
jl
btr
imul
jmp
pop
inc
retf
push
jbe
inc
mov
xor
or
pop
push
push
and
mov
iret
fs
mov
icebp
xor
or
in
push
sbb
ficomp
sbb
neg
lods
ins
jmp
dec
mov
aam
mov
pop
mov
xor
sub
(bad)
(bad)
push
or
add
cmps
cli
(bad)
fsubrp
fild
inc
loopne
jle
inc
popa
xchg
xchg
pop
and
adc
dec
mov
pop
or
addr16
imul
add
rcl
mov
shr
cmps
cmp
fcmovu
mov
popa
pop
jns
mov
pop
push
cmp
xor
inc
addr16
in
fstp
cmp
mov
pop
jno
sahf
xor
inc
hlt
push
mov
jmp
and
lods
popa
pop
mov
out
jne
out
lds
mov
mov
scas
pop
ret
push
call
sbb
stos
dec
gs
jle
daa
push
mov
jg
call
dec
gs
xor
fst
sbb
jb
rcr
mov
push
out
fcom
xchg
pop
adc
repz
sbb
cdq
mov
adc
int3
daa
ret
pop
xor
dec
imul
jecxz
loope
and
faddp
sub
adc
inc
je
setle
xchg
daa
push
imul
repz
cmp
je
es
lods
scas
jno
push
push
cmps
scas
push
mov
ds
mov
(bad)
fadd
ins
mov
std
jns
outs
pushf
(bad)
ror
iret
or
in
cmp
push
rcr
sbb
jle
ds
scas
cmp
inc
mov
int
jns
movs
jmp
in
(bad)
jmp
cdq
sbb
mov
jbe
(bad)
arpl
adc
mov
js
mov
fwait
sbb
dec
mov
pushf
push
xchg
xchg
ret
xchg
jg
ins
push
inc
imul
jecxz
sbb
xchg
stc
sbb
mov
inc
cmps
inc
mov
inc
xor
out
inc
fisub
and
pushf
ds
jmp
jmp
aas
xchg
mov
outs
cld
and
xor
or
jmp
ror
rcr
fsub
hlt
in
dec
pop
xor
mov
xchg
inc
jmp
push
ins
rcl
in
or
mov
mov
and
add
adc
fnstsw
test
outs
ds
push
aam
test
mov
js
test
(bad)
mov
mov
or
stos
xor
ficomp
or
int3
inc
into
jg
mov
push
js
pop
arpl
and
and
push
jnp
scas
mov
hlt
ds
fwait
add
cmp
or
pop
pop
sbb
push
(bad)
pop
mov
sub
dec
mov
xchg
dec
adc
adc
inc
ins
cmp
push
clc
inc
jb
mov
push
hlt
(bad)
dec
adc
cmp
test
xchg
adc
pop
xchg
mov
jnp
aas
jp
inc
in
xor
cmps
jmp
inc
sub
rcr
push
or
cmps
sbb
call
aaa
sub
cmps
pop
push
mov
pop
cs
scas
outs
loopne
rcr
sbb
or
iret
retf
je
retf
cld
in
(bad)
movs
loopne
in
mov
cs
mov
pop
sbb
clc
sub
arpl
xchg
lea
movs
dec
xchg
cmc
nop
and
mov
xor
jle
call
leave
dec
lock
arpl
test
stos
daa
sti
out
iret
xor
jns
and
or
stc
fimul
push
dec
dec
(bad)
lea
ficom
inc
push
pop
js
movs
mov
iret
aas
or
ja
sub
lock
aad
push
mov
sub
pop
call
xchg
in
stos
or
dec
pop
loope
aam
mov
adc
inc
mov
aas
aam
add
gs
out
sbb
imul
jmp
mov
pop
push
call
loope
(bad)
(bad)
(bad)
cli
test
jns
pop
xor
xor
push
xchg
xlat
xor
push
bsr
cli
and
outs
cmps
mov
mov
test
or
jle
sbb
lds
mov
sub
push
cmp
inc
adc
imul
mov
enter
out
dec
fiadd
call
ret
mov
xchg
cmps
mov
push
xchg
nop
sub
add
(bad)
mov
dec
imul
pop
repnz
pop
idiv
push
mov
sbb
xor
repnz
loop
fidivr
pop
inc
adc
pop
cld
pop
outs
rol
mov
nop
mov
jmp
sbb
in
mov
or
shl
js
cmc
jae
aam
sbb
inc
shl
int3
pop
push
sub
gs
ds
popa
or
lds
push
pop
add
jge
addr16
inc
mov
sbb
pop
test
jg
mov
push
cmp
sbb
int
lea
sbb
clc
push
aad
das
scas
pusha
dec
(bad)
aas
movs
pop
sbb
add
add
and
call
xor
fs
push
fcmovb
cld
pop
(bad)
jl
ja
int
mov
lahf
and
inc
push
packsswb
loop
cmp
mov
sbb
xchg
or
test
push
cmp
iret
div
jge
mov
fcomp
mov
push
sub
stos
mov
mov
inc
pop
add
out
lock
lods
mov
les
jmp
jno
test
loope
ds
imul
arpl
scas
fsubr
ins
cld
outs
or
mov
sti
ins
xor
rcr
dec
fwait
mov
jl
inc
out
add
ficomp
pop
icebp
shl
pop
push
jl
aam
add
pop
(bad)
in
sub
leave
mov
stc
mov
sub
nop
add
test
in
adc
int3
mov
mov
daa
(bad)
jmp
fwait
push
cmps
fiadd
sbb
mov
div
adc
cmps
inc
(bad)
aaa
out
daa
jecxz
es
xchg
iret
adc
test
push
mov
mov
and
inc
jns
or
or
(bad)
cmp
fwait
mov
int3
mul
jge
jle
lods
clc
and
cli
xchg
sbb
outs
(bad)
sbb
pop
movs
iret
bound
mov
sub
test
push
pop
fld
push
mov
dec
add
jmp
arpl
add
stos
dec
aad
je
and
push
push
jae
fisubr
jmp
or
dec
out
dec
inc
and
sbb
mov
xchg
leave
test
inc
(bad)
cmp
lods
or
ret
inc
adc
xor
les
cld
push
rol
jl
jl
inc
jo
inc
pop
pop
jmp
(bad)
mov
pop
jb
sub
hlt
repz
adc
pushf
and
daa
mov
adc
scas
mov
gs
retf
cwde
dec
lods
adc
ins
adc
test
in
and
mov
mov
clc
cmp
cmp
jecxz
mov
div
push
mov
das
daa
je
ror
mov
lds
mov
sbb
stos
es
int
push
mov
mov
add
fild
cmps
and
mov
or
xchg
push
les
cmps
cmp
push
cmps
pushf
aam
push
xchg
ret
sub
icebp
sub
scas
or
pop
and
lock
movs
lahf
xchg
cmp
add
test
sub
gs
adc
cli
xchg
xor
xchg
pop
push
xchg
adc
mov
fcom
dec
mov
stos
or
scas
lods
sbb
mov
jmp
mov
test
movs
xlat
rcr
ret
aad
das
leave
push
jb
push
je
test
push
in
xor
ret
jmp
push
push
test
cdq
xchg
dec
vfmadd231ss
jmp
hlt
lods
xor
xchg
je
lods
mov
jae
sbb
xchg
push
mov
cmp
jo
xchg
stc
mov
xor
rcr
repnz
fxch
call
xor
(bad)
lock
cmp
or
sbb
push
leave
es
mov
mov
mov
xchg
in
push
scas
(bad)
sub
mov
call
mov
jne
jmp
xor
push
fdivrp
out
lods
nop
or
aad
ins
adc
dec
in
or
lea
adc
inc
or
aam
or
push
cmc
push
lods
popa
pop
iret
sbb
mov
not
jne
push
pusha
imul
vmaskmovdqu
leave
neg
mov
sbb
ins
inc
xchg
jg
and
adc
aad
(bad)
mov
jge
sti
test
jnp
pop
stos
mov
mov
add
enter
push
out
and
out
or
retf
sbb
sbb
cwde
ss
inc
mov
jle
sub
xor
clc
call
or
lods
stos
jmp
push
sti
jno
adc
pop
and
mov
jo
pusha
inc
ds
inc
jmp
or
pop
cmp
enter
cld
rcl
in
cmp
icebp
and
ficom
pop
sahf
push
dec
in
(bad)
aaa
lahf
xchg
imul
or
add
inc
int
shl
cmps
jecxz
dec
push
retf
mov
sbb
inc
je
aad
push
pusha
gs
cmp
jecxz
adc
jle
mov
or
cmps
push
hlt
or
rol
jge
call
stos
enter
add
outs
in
sub
mov
or
cmp
clc
and
xchg
dec
ja
mov
push
add
addr16
jb
pushf
push
or
outs
dec
std
in
sbb
outs
pop
jmp
sbb
pop
sti
xor
sbb
add
les
xor
jne
or
(bad)
retf
and
sub
pop
cwde
push
jge
daa
add
in
sbb
aam
push
mov
jecxz
inc
mov
inc
pop
in
cmp
push
mov
lea
jg
leave
mov
(bad)
ror
or
inc
in
fist
jmp
(bad)
out
cwde
rcr
mov
pushf
adc
cdq
mov
cmp
push
jmp
push
fstp
out
shl
in
mov
movs
push
rcl
mov
jne
and
jl
cmp
xchg
scas
add
jb
sbb
cmp
nop
adc
jbe
aam
ins
(bad)
mov
jae
pop
ror
int
pop
inc
mov
(bad)
mov
xchg
(bad)
xchg
jnp
test
inc
int
and
ins
mov
pop
adc
jp
jmp
pop
mov
inc
ret
rcr
ror
retf
xchg
push
mov
aam
dec
ficom
test
or
pop
out
imul
ror
add
mov
sbb
mov
cmps
jne
pusha
mov
sar
int
lods
or
mov
inc
sub
inc
cld
add
div
arpl
and
nop
leave
jae
mov
aaa
clc
aad
mov
sbb
mov
cmp
inc
sub
mov
imul
nop
enter
pop
je
xchg
mov
loop
and
outs
neg
aam
pop
mov
add
and
mov
push
sbb
jle
out
or
mov
push
int3
jbe
movs
push
adc
and
cmps
lds
cwde
xchg
(bad)
scas
retf
ja
jp
mov
cs
push
rcl
xchg
adc
or
rcr
push
jns
es
pusha
xchg
cdq
pop
icebp
sbb
icebp
xchg
sti
add
sub
and
cmps
ins
push
leave
sub
dec
aad
mov
mov
sbb
mov
cwde
cs
jecxz
push
fdiv
inc
add
mov
ja
call
inc
mov
jne
and
sub
pop
sub
popa
arpl
mov
gs
cmp
pop
lods
add
popa
loop
lea
mov
out
(bad)
cli
frstpm(287
mov
xor
outs
xor
test
sub
data16
cwde
clc
test
cmc
stos
sbb
mov
je
ret
xor
add
mov
imul
int
mov
xor
sub
or
or
dec
aam
sbb
xchg
(bad)
leave
sbb
mov
xchg
retf
(bad)
in
and
stc
mov
jmp
mov
xchg
xchg
and
sti
xor
mov
aam
cmps
add
loope
bound
mov
lea
mov
push
jmp
fld
push
pushf
or
mov
dec
les
aaa
cmp
mov
fisttp
popa
sti
lea
mov
shr
popf
loopne
(bad)
(bad)
xor
test
mov
rcr
jp
push
mov
jmp
je
pop
dec
mov
add
mov
push
push
cmp
sahf
xor
mov
mov
cmp
push
cld
je
into
fnstcw
addr16
mov
push
push
scas
in
loop
cmp
loope
jno
or
stos
cmp
cmp
into
pcmpgtw
je
inc
push
sahf
cmp
xor
repz
retf
sbb
mov
fnstenv
xchg
cli
cld
sub
push
pop
fs
pusha
pop
imul
pop
lods
and
(bad)
test
je
cmp
movs
inc
ret
or
movs
cmp
xor
out
jnp
mov
jl
neg
test
icebp
out
fs
xor
pop
and
rcr
(bad)
xor
mov
dec
xchg
sbb
dec
jp
add
gs
out
mov
gs
stc
stos
xchg
out
sub
pop
mov
stc
pop
por
cmp
and
je
jp
cmp
xchg
setp
out
sbb
push
add
adc
sbb
cmc
jne
xchg
cmp
push
fcomp
mov
and
xchg
jg
arpl
cli
pusha
in
dec
enter
nop
rcl
ja
xor
hlt
cld
inc
inc
pop
xor
ret
pop
and
test
sbb
cmp
rcl
pop
sbb
aad
in
or
cmp
or
in
setb
mov
cmp
xchg
pop
and
adc
adc
sub
rcr
pop
fist
mov
(bad)
nop
lea
mov
cs
xchg
movs
setge
cli
scas
and
sub
mov
mov
jmp
or
mov
dec
mov
les
dec
xchg
dec
dec
and
xchg
lahf
aaa
mov
loop
nop
jmp
mov
adc
add
xchg
leave
aam
pushf
out
call
mov
sbb
cmp
push
lds
mov
xchg
sti
jns
mov
cmp
into
out
pusha
call
repnz
shl
imul
neg
xchg
xor
jmp
shl
push
dec
std
mov
add
inc
add
cmp
sbb
sub
or
nop
cmp
jge
fcom
jmp
add
retf
ja
data16
push
cs
popa
retf
or
adc
pop
psubd
into
daa
retf
lahf
mov
adc
imul
mov
imul
sbb
sub
add
mov
fstp
or
in
and
mov
fstp
data16
jno
xchg
ins
movs
ret
mov
inc
sahf
fcom
lea
sbb
push
push
sti
retf
rcl
iret
sub
stc
popa
shr
cwde
out
(bad)
js
cmp
ins
sub
pop
jae
cld
(bad)
sub
cld
mov
push
cmp
ret
iret
test
inc
fcmovu
mov
or
test
jecxz
push
std
es
xchg
call
jge
retf
lea
mov
pushf
stc
dec
mov
outs
ret
xchg
mov
mov
jae
and
add
call
gs
xchg
sub
ret
mov
jmp
loopne
sbb
ins
mov
cmp
mov
add
mov
and
or
push
xor
lods
pop
mov
pop
dec
cmp
push
pop
movs
jg
jmp
cmp
cmp
sbb
jbe
push
inc
je
sub
or
jg
cmp
outs
in
nop
cmp
dec
icebp
call
sbb
out
mov
dec
add
fsub
dec
fdiv
cs
inc
fisubr
test
imul
and
lock
sbb
out
dec
mov
add
adc
jge
inc
and
dec
lahf
mul
pop
std
mov
cmp
inc
pop
stc
jg
mov
outs
mov
jmp
lds
pop
loop
mov
jnp
stc
pop
cmp
(bad)
mov
gs
data16
sar
pop
mov
or
sbb
cmp
movs
into
fsub
ins
mov
sub
fld
fist
mov
repz
xchg
adc
inc
dec
or
adc
and
pop
and
sub
jl
fwait
das
jnp
jb
pusha
dec
in
(bad)
gs
ins
bswap
jae
hlt
pop
out
fisttp
inc
bnd
pop
cli
add
lock
or
cmp
lods
pop
mov
into
xor
(bad)
rcl
jnp
outs
or
lahf
lock
pop
hlt
mov
dec
inc
in
cmp
movs
and
imul
dec
xchg
in
pop
sub
add
dec
sbb
jae
cmp
call
lds
pop
ja
repz
mov
gs
addr16
or
and
jecxz
inc
push
je
mov
pusha
pushf
jo
fwait
shl
inc
(bad)
fsubr
jmp
popa
xor
test
dec
sahf
jmp
mov
mov
(bad)
popf
js
jl
adc
dec
stos
add
mov
adc
add
sub
loopne
sar
jmp
scas
mov
out
push
xor
(bad)
mov
push
sbb
cmc
mov
xchg
call
and
aaa
inc
xor
test
xchg
mov
mov
(bad)
pop
push
cs
xor
int3
dec
inc
mov
sbb
xor
jge
bswap
mov
sub
xor
(bad)
ror
stc
dec
pop
repz
les
or
mov
and
xor
adc
scas
addr16
or
jmp
inc
mov
push
aaa
xchg
iret
or
pusha
xchg
adc
loope
mov
cmps
push
dec
jecxz
mov
sar
xchg
push
inc
cmp
xchg
mov
sub
ret
imul
mov
js
mov
jne
inc
sahf
mov
into
xor
sbb
or
inc
(bad)
dec
xchg
pop
js
cwde
inc
jle
xor
lods
aaa
mov
xchg
sub
das
inc
stos
push
mov
imul
repz
mov
or
test
pop
inc
outs
and
xchg
and
mov
call
cmc
dec
bound
sub
mov
popa
push
add
fsubr
push
push
jle
add
dec
mov
idiv
fcomp
cmps
sbb
jl
add
icebp
out
jnp
cwde
xchg
dec
mov
test
push
ss
lods
or
mov
pop
in
xchg
cs
ja
push
push
sti
add
and
or
rsqrtps
or
and
iret
and
jmp
xchg
xchg
fsub
pop
dec
aam
pusha
dec
jae
aam
cli
mov
pop
popf
jge
cmp
sub
in
hlt
inc
inc
jecxz
dec
jae
fwait
add
jecxz
xchg
shr
mov
in
loop
add
dec
pop
test
adc
icebp
inc
add
mov
mov
test
fisub
jmp
push
and
and
ret
pop
mov
jnp
mov
sahf
mov
adc
jle
mov
inc
inc
cmp
mov
loop
sar
fistp
sbb
scas
pop
sbb
js
sub
pop
push
jmp
cmp
aaa
jns
aaa
or
xchg
add
and
mov
jl
cli
mov
cmp
arpl
and
test
(bad)
shl
add
or
(bad)
cld
dec
or
inc
sub
lds
sti
dec
pop
xchg
push
repz
pop
dec
loop
sub
inc
dec
loop
sti
(bad)
xor
out
test
lea
xchg
add
dec
sar
pop
inc
pop
mov
fadd
sub
dec
ja
dec
mov
xor
inc
jno
in
pop
scas
cmp
jae
jmp
xor
push
hlt
aas
xchg
and
mov
idiv
cmps
cli
push
mov
lock
mov
mov
pop
or
and
sbb
jp
pop
int3
dec
sub
mov
je
ret
and
dec
mov
and
imul
sub
(bad)
ins
mov
gs
pop
lahf
mov
mov
cmp
push
call
sub
test
add
mov
mov
or
cwde
xchg
popa
cmps
xor
mov
inc
xor
ja
cmp
inc
mov
mov
lods
scas
call
xchg
outs
out
pop
daa
pop
fbld
jmp
cmp
adc
and
pop
xchg
push
push
arpl
outs
scas
mov
fcmovnb
xor
std
push
in
and
pop
sub
jbe
sub
lea
xchg
test
icebp
enter
xor
cwde
inc
and
sbb
jbe
icebp
xor
sub
aad
push
out
adc
add
jnp
fsub
mov
fimul
jp
dec
das
int3
jl
xor
lock
mov
sahf
adc
pop
and
push
inc
pusha
gs
mov
xlat
in
ret
pushf
jp
retf
xchg
ret
sahf
sub
dec
jmp
cs
cld
jge
pusha
adc
enter
xor
nop
pop
adc
xchg
shl
mov
loope
scas
push
jecxz
cmps
outs
data16
adc
jbe
push
sub
ret
jns
repnz
out
jnp
add
(bad)
stos
addr16
dec
inc
int
ret
or
and
sub
cmp
xlat
(bad)
or
fcmovne
adc
inc
inc
shr
clc
push
xchg
inc
xchg
mov
test
ret
mov
xlat
mov
pop
repz
adc
xor
popa
enter
jl
ret
cmp
imul
xchg
or
sbb
xor
mov
addr16
or
mov
xchg
gs
and
mov
(bad)
push
(bad)
dec
push
pop
cmp
xchg
inc
fucomip
jmp
mov
pop
xchg
test
ins
es
outs
data16
scas
int
sub
fdivr
stc
nop
loope
pop
inc
fadd
push
or
clc
push
push
in
gs
add
xchg
push
dec
scas
sub
outs
cmp
push
or
mov
ins
sbb
popa
inc
jl
cmp
xchg
fdivr
mov
xchg
ja
ret
push
stc
xchg
add
loope
push
not
idiv
into
jae
cmp
out
lods
fistp
mov
pop
imul
prefetch
adc
enter
pop
loope
push
in
pushf
cmp
xor
fisubr
mov
mov
sbb
sub
sbb
push
push
movs
ret
in
mov
test
retf
pop
retf
xor
sbb
jmp
and
mov
(bad)
jl
mov
add
lea
ror
stc
repz
aaa
ins
adc
sbb
mov
imul
cmp
cmp
xchg
loopne
cmp
jmp
mov
outs
jns
cmps
loopne
fstp
rol
fldenv
cdq
rcl
cli
fbstp
ds
outs
mov
loop
or
dec
repnz
hlt
bound
xlat
jmp
xor
loopne
sub
sub
aaa
cli
adc
ins
bound
or
jp
leave
push
xchg
cmp
inc
es
into
rcl
pushf
push
cwde
out
fidivr
nop
aas
mov
jle
in
push
sub
push
test
adc
push
cmps
adc
pop
dec
lods
inc
lahf
fs
add
xchg
mov
or
fbstp
and
cmc
push
movs
out
repnz
cmps
and
test
aad
push
imul
sbb
fs
dec
shl
xor
stc
sub
fisubr
in
pop
out
xchg
inc
dec
mov
jne
aas
xchg
push
ins
sbb
and
ds
cmp
sub
(bad)
fwait
aas
ss
je
mov
adc
xchg
mov
lock
xchg
cmp
xchg
call
dec
push
(bad)
js
sbb
dec
mov
adc
popf
aad
sbb
add
outs
inc
push
rol
jae
pop
sar
inc
dec
div
sub
jmp
sbb
into
ret
dec
int3
fsubr
push
sbb
inc
and
add
loop
xor
call
test
sahf
inc
mov
pop
mov
mov
lods
xchg
jle
mov
retf
jg
push
xor
push
fisubr
mov
xor
jecxz
lods
arpl
cmc
pop
stc
pop
jae
sub
ins
push
xor
cdq
out
mov
fdivr
jno
xor
bound
ins
out
dec
cmp
loope
sbb
ds
xchg
cmp
adc
pushf
cli
pop
enter
call
mov
test
popf
leave
mov
push
out
pop
cmp
pusha
cld
call
repnz
fxch
xchg
test
inc
inc
sbb
jbe
lods
loopne
aad
fimul
les
xor
imul
scas
jcxz
pop
mov
xlat
pop
outs
adc
mov
ret
mov
not
scas
retf
nop
push
test
fsubr
xor
mov
cmp
mov
jg
adc
or
cli
jmp
imul
cdq
mov
stos
lods
mov
inc
lds
sub
rcl
push
xchg
or
aaa
sub
push
push
inc
adc
mov
pusha
inc
mov
mov
and
shl
inc
or
in
mov
mov
cmc
mov
adc
mov
add
jno
and
dec
xchg
cmps
mov
retf
and
shr
and
inc
push
std
movntq
ins
mov
inc
es
pop
push
pop
loopne
mov
dec
in
and
mov
push
jnp
add
mov
inc
cmp
sbb
lods
add
jne
mov
push
push
neg
or
(bad)
stos
push
int3
nop
xchg
push
arpl
and
push
pop
or
push
mov
in
retf
out
gs
pop
pop
daa
jle
add
movs
cmp
mov
aas
call
out
scas
adc
jae
int3
(bad)
ins
jmp
out
jmp
nop
shr
fnstcw
cli
inc
sbb
add
jmp
(bad)
inc
loop
add
fwait
cmps
lahf
or
ds
jbe
or
mov
inc
lock
rcl
enter
push
in
test
inc
mov
push
(bad)
pop
test
or
and
adc
lahf
dec
dec
xor
and
aaa
mov
out
fiadd
in
mov
addr16
dec
in
inc
aaa
xor
push
inc
dec
in
add
cmp
cmps
out
lods
es
mov
mov
and
in
fsincos
std
test
and
test
xchg
inc
xchg
push
pop
sub
inc
mov
push
jns
imul
or
loopne
jp
mov
xor
mov
push
mov
cs
pop
loop
dec
cld
push
lahf
fsubr
mov
stos
cmps
fstp
xlat
mov
in
dec
lds
popf
xchg
fmul
xor
and
add
test
mov
out
or
or
rol
inc
xchg
call
stos
inc
test
stos
enter
pop
pop
mov
xchg
jg
dec
mov
sbb
mov
(bad)
jne
mov
lahf
sahf
or
jl
int3
addr16
xchg
imul
sbb
int3
add
cli
ds
and
or
jmp
sbb
icebp
sbb
ficomp
xor
dec
xchg
cmps
mov
and
sub
repz
fadd
cmp
and
and
scas
pop
in
adc
or
sahf
in
lea
push
mov
(bad)
mov
sbb
shl
arpl
xchg
popf
mov
mov
(bad)
nop
xchg
push
push
xlat
(bad)
pop
retf
ficomp
inc
ret
dec
dec
sbb
mov
inc
inc
mov
mov
xchg
call
test
clc
mov
inc
cmp
cmps
sbb
jg
xchg
scas
les
push
push
(bad)
into
call
pop
pop
cmp
xlat
dec
out
xchg
push
add
daa
rol
xor
adc
movs
xchg
fnstcw
mov
and
sbb
add
xor
sub
cmp
int
js
mov
call
xor
in
loopne
cli
popf
mov
mov
sbb
sub
inc
mov
inc
pop
inc
inc
sbb
and
cmp
sub
dec
fsub
call
aaa
(bad)
pop
mov
lahf
(bad)
xchg
mov
adc
int
xchg
call
xchg
cmc
fst
cmc
repz
add
mov
pop
in
or
fsub
repz
loop
xor
mov
push
enter
arpl
idiv
nop
inc
repz
xchg
mov
movs
push
adc
pop
outs
int
dec
imul
or
pcmpeqd
mov
adc
(bad)
out
jno
jl
and
test
ret
xchg
div
retf
stos
pop
ins
sbb
out
or
mov
es
pop
add
add
aaa
jge
jbe
stos
jmp
das
xchg
rol
sbb
retf
aam
dec
sub
dec
clc
ret
or
jnp
jne
test
inc
ins
popa
inc
mov
mov
retf
mov
pop
inc
jl
(bad)
and
shl
add
cmp
rcr
add
lods
popf
lahf
js
fisub
int3
mov
mov
mov
fnstsw
repz
xor
cmp
cmps
loopne
ds
aam
scas
mov
aaa
pop
ret
xor
add
ja
aaa
in
scas
fsubr
cmp
dec
push
inc
imul
mov
aaa
fst
mov
retf
loopne
dec
bound
mov
ins
push
jnp
fstp
pop
out
jle
adc
or
lods
sub
scas
cmp
mov
js
cmp
fisubr
mov
in
inc
rcl
in
lods
or
cmp
xor
sbb
adc
dec
(bad)
jno
int
fsub
fwait
sar
pop
mov
jae
sbb
mov
mov
dec
jge
mov
mov
(bad)
mov
adc
loop
sub
mov
mov
rcr
mov
cmp
retf
lods
outs
jbe
or
stc
js
xchg
in
jmp
jbe
mov
jle
cwde
jbe
mov
xor
aam
or
fdiv
sub
stos
cmp
popa
cwde
jle
mov
dec
bound
fiadd
jmp
ret
test
pop
add
stos
xchg
scas
daa
mov
rcr
call
out
sbb
fnsave
cs
or
aas
pop
scas
xor
mov
cmp
(bad)
(bad)
or
cli
in
bound
jl
lahf
out
fild
pop
xchg
pushf
xor
jns
lods
push
sub
dec
add
inc
xchg
lods
mov
mov
pop
push
loope
shr
stos
add
fst
das
sbb
cmp
jecxz
lods
pop
jns
repz
out
mov
and
pop
push
cmps
push
cmp
(bad)
mov
jno
stos
or
ins
addr16
pushf
test
sbb
cli
xchg
loope
adc
mov
cmc
in
sub
push
ret
xor
jg
mov
push
and
cdq
cli
mov
movs
imul
sub
xor
call
xchg
adc
xor
rcr
push
test
adc
scas
mov
sub
in
sbb
cli
gs
dec
scas
xchg
jl
dec
sbb
and
jle
das
fld
inc
adc
cli
xor
adc
pop
or
inc
in
mov
adc
ret
out
fld
lods
mov
ja
mov
je
sub
ins
scas
into
pop
mov
and
mov
jne
fidivr
jp
jg
pop
mov
add
jp
push
adc
jmp
inc
dec
sub
(bad)
stc
push
dec
in
outs
cdq
add
sub
dec
je
mov
or
pop
mov
xor
fild
jnp
xchg
sub
inc
push
mov
push
jbe
mov
rol
mov
xor
add
std
jae
jno
push
hlt
or
(bad)
daa
in
cmp
mov
push
repnz
out
sbb
shl
mov
pop
sub
lds
inc
push
lods
or
adc
and
xchg
lds
(bad)
dec
popf
div
or
adc
push
ret
push
ja
(bad)
test
enter
(bad)
sahf
xchg
lods
ret
xchg
movs
test
out
shr
mov
add
(bad)
ins
jl
pop
xchg
fidivr
popf
push
test
into
cmp
into
call
and
push
dec
mov
call
mov
xchg
cld
pop
cwde
icebp
and
mov
mov
push
lds
push
add
push
jo
inc
js
mov
shl
cmp
jb
xchg
jle
mov
icebp
lds
sbb
pop
or
in
(bad)
(bad)
fbstp
xchg
mov
jle
inc
jle
cli
push
pop
push
aaa
cmp
sahf
repnz
test
(bad)
sub
loop
shr
mov
xor
es
adc
jp
out
popf
retf
lahf
pop
fsubr
and
jecxz
or
es
lock
sub
shl
mov
inc
mov
mov
test
push
cmp
rcl
addr16
fstp
pop
sbb
int
xor
push
cli
cmp
mov
mul
mov
cmp
loope
(bad)
fsubrp
mov
(bad)
ds
jg
aam
fcomi
adc
and
repz
loopne
fld
sti
mov
enter
cmps
xor
push
mov
sub
out
in
mov
jl
in
in
add
xchg
imul
out
xlat
lods
adc
inc
fdecstp
jns
out
in
pop
add
jo
das
push
rol
cwde
sub
iret
ret
adc
popa
xchg
shl
sub
cs
(bad)
sbb
mov
out
push
push
add
jne
lods
das
(bad)
jns
(bad)
xor
das
test
mov
jmp
iret
mov
lods
setbe
ret
out
arpl
test
addr16
pop
mov
cmps
(bad)
mov
stc
movs
mov
inc
(bad)
daa
xchg
into
mov
and
test
je
jecxz
into
xor
cwde
pop
pop
je
pop
cmp
sbb
pop
out
cmp
popa
xor
pop
ret
xchg
imul
fwait
bound
repz
or
mov
mov
hlt
cdq
jge
push
and
es
and
mov
jb
sub
inc
sub
pop
push
lds
mov
inc
mov
int
outs
arpl
out
xor
add
jnp
out
loopne
outs
xor
adc
jp
sub
mov
jmp
dec
add
into
addr16
data16
jmp
push
movs
and
ficomp
fwait
movs
mov
aam
cdq
jnp
pop
push
pop
aaa
mov
lea
mov
pop
jnp
and
inc
sub
sub
or
rcl
movs
(bad)
and
ror
push
mov
in
scas
mov
shl
pop
fldenv
ret
or
pop
sbb
jno
(bad)
and
pop
repnz
jo
jmp
cld
cdq
xlat
aad
scas
das
push
(bad)
pop
repz
inc
ss
jge
pop
cwde
adc
dec
retf
sti
xor
mov
and
and
je
loopne
je
jns
xchg
ror
xchg
xchg
mov
cmps
mov
arpl
lock
pop
inc
mov
inc
inc
jo
push
loopne
mov
cmps
scas
jno
cmp
cwde
(bad)
fbstp
scas
pop
jae
add
scas
pop
retf
xor
js
test
adc
pop
mov
dec
mov
loopne
mov
pop
sub
in
lea
xlat
std
ret
push
shl
adc
nop
test
call
jg
rcr
jmp
cmp
push
pop
stos
lods
jb
and
jae
ins
ret
xchg
sti
inc
leave
or
inc
dec
sar
loope
stc
lods
(bad)
test
add
adc
xchg
loopne
pop
push
arpl
iret
bnd
leave
(bad)
data16
pop
sbb
inc
dec
sub
pminsw
inc
add
mov
adc
push
add
popf
test
in
jg
add
mov
(bad)
or
inc
pushf
push
or
sub
cli
inc
movs
cmps
push
sbb
pop
or
scas
mov
das
push
inc
cmp
sbb
cmp
in
add
popa
std
sub
ja
cmc
push
aas
adc
pusha
mov
and
fadd
in
pop
jmp
mov
js
jae
loop
sbb
int
mov
test
push
mov
jecxz
test
ss
adc
jg
loopne
inc
sti
add
in
out
loop
jl
mov
clc
imul
aaa
xchg
add
sbb
sbb
xor
scas
xlat
(bad)
cld
mov
and
arpl
xor
mov
repz
gs
mov
test
stos
dec
call
push
push
test
dec
push
xor
retf
arpl
les
in
dec
jns
add
fadd
jp
rcl
mov
cli
xor
sub
cmp
out
push
retf
idiv
push
mov
mov
cmps
pop
inc
(bad)
sar
xor
loopne
sbb
stos
cmps
push
(bad)
pop
dec
jg
shl
and
or
adc
cs
out
fs
das
or
pusha
aad
and
cmps
in
sbb
out
cmp
mov
(bad)
push
mov
addr16
add
fild
movs
or
and
pop
mov
mov
shr
xchg
pop
sbb
pop
in
lods
xchg
ret
sub
int3
stos
loope
and
sub
pop
sub
jns
mov
je
mov
enter
sar
test
cs
jbe
sub
add
int3
fnsave
add
jp
mov
popa
xchg
dec
adc
scas
test
jecxz
out
mov
les
mov
dec
mov
mov
out
and
pop
jne
jmp
inc
sub
ss
into
(bad)
mov
add
es
cmp
popf
and
cmc
call
sbb
in
cmp
mov
pop
dec
clc
push
(bad)
out
xchg
mov
pop
aaa
and
enter
jmp
jne
ds
pop
cmc
xor
add
pushf
movs
mov
in
js
push
mov
in
push
push
aaa
(bad)
or
jl
sub
jg
bound
dec
push
test
inc
add
test
nop
outs
mov
dec
test
xchg
or
add
movs
sub
and
into
sahf
jle
adc
jno
adc
jb
adc
ja
fsubr
cld
xor
pop
mov
and
jno
(bad)
mov
jge
mov
out
jle
lds
jp
jecxz
or
xchg
inc
and
jo
lock
out
sahf
inc
jb
adc
sub
sub
icebp
ins
ret
push
mov
dec
sbb
push
jae
loop
or
xchg
mov
ds
sub
ds
dec
lods
xchg
test
mov
mov
cmp
or
cmp
sbb
leave
shl
dec
sub
in
push
popa
dec
or
(bad)
iret
retf
pusha
sbb
and
push
jl
push
pusha
hlt
mov
dec
ins
fs
addr16
(bad)
or
enter
test
(bad)
cmp
dec
xor
scas
xchg
add
into
adc
dec
psadbw
in
or
push
adc
or
mov
pop
mov
lahf
lea
stc
cmp
retf
dec
push
jne
mov
xor
push
inc
inc
xor
push
mov
pop
dec
popa
pop
add
cdq
inc
dec
out
inc
sbb
test
xchg
hlt
mov
hlt
inc
jecxz
sub
dec
mov
(bad)
and
jmp
test
dec
xor
mov
ins
stos
sbb
popa
xchg
cmp
in
mov
mov
sbb
(bad)
out
rcr
fdiv
adc
push
xchg
adc
int3
add
arpl
test
mov
enter
cmps
xor
out
pop
xor
rol
jmp
loop
out
ins
cmp
jp
mov
cmp
push
adc
mov
dec
cmps
ucomiss
mov
and
cmp
jle
mov
jecxz
mov
std
cmp
(bad)
(bad)
cld
cmp
imul
add
dec
retf
gs
test
shl
je
js
int
mov
in
jbe
aaa
retf
pop
adc
inc
repnz
int3
bound
jo
pop
jmp
aam
pop
scas
in
push
add
add
push
mov
dec
enter
lock
shl
rcl
call
adc
mov
adc
jl
xchg
xchg
push
fisubr
test
loop
dec
je
and
sub
lods
icebp
mov
aaa
cmp
ins
pop
les
adc
jge
(bad)
bound
ds
and
pop
push
push
inc
mov
xor
clc
je
jecxz
scas
mov
sub
in
ins
mov
xchg
imul
call
nop
sar
adc
ss
mov
ins
scas
out
fs
sahf
les
mov
add
jns
in
fmul
jl
je
jge
outs
test
adc
int3
push
add
cdq
pop
inc
xchg
cmp
pop
test
nop
daa
icebp
add
cmp
in
xor
push
ror
jp
push
mov
arpl
inc
jns
stc
iret
(bad)
mov
mov
outs
fcomp
js
cwde
aam
std
dec
out
es
cmp
mov
mov
jmp
jge
push
lea
call
jmp
pop
xor
jmp
push
or
or
add
xor
dec
push
int3
cld
out
out
or
scas
not
fwait
sub
in
into
ror
repz
sub
(bad)
push
dec
sbb
push
je
adc
pop
mov
mov
pop
push
ins
cmova
ss
(bad)
xor
mov
bound
call
push
mov
pop
xchg
jg
cmp
imul
int
cmp
jecxz
ins
out
or
xchg
cmps
pop
xchg
in
inc
mov
mov
fist
jbe
push
inc
pushf
xchg
sub
dec
or
ret
cli
inc
jnp
mov
pop
movs
repnz
xor
mov
dec
xor
adc
fiadd
aas
jae
and
and
pop
xor
push
scas
test
pop
inc
or
jle
cmp
pop
sub
push
fs
sbb
inc
rcr
xor
sbb
push
pop
jmp
jne
dec
lods
cld
dec
adc
jecxz
pop
fst
ss
inc
outs
cmp
icebp
mov
inc
cmp
(bad)
xor
sbb
test
mov
mov
sub
pop
mov
xchg
sub
or
inc
call
ror
out
cmps
in
mov
adc
sar
dec
scas
ror
out
clc
jg
jge
adc
and
sub
ja
retf
pop
mov
adc
cli
and
cdq
daa
arpl
dec
aad
(bad)
ret
(bad)
xchg
mov
call
nop
cmps
int
sahf
jmp
lds
leave
sbb
xchg
dec
pop
jmp
xlat
lahf
and
pop
push
or
cli
cmp
pop
mov
popf
inc
lea
pop
sub
in
mov
popf
xchg
add
stc
retf
aas
or
popf
ficomp
fst
(bad)
test
cmp
dec
dec
shl
dec
dec
mov
push
adc
out
pushf
dec
daa
out
dec
or
imul
dec
aad
addr16
retf
push
adc
call
jmp
jecxz
mov
dec
scas
lahf
xchg
pop
mov
and
jl
das
lahf
cmp
sub
xor
xchg
mov
icebp
aam
hlt
sub
adc
sub
(bad)
fdiv
outs
int3
sti
retf
mov
lds
outs
push
or
push
sbb
aam
lods
xor
add
cld
push
xor
xor
sbb
pop
std
cli
pop
(bad)
loopne
bound
jne
adc
test
sub
dec
and
and
dec
inc
test
cli
lods
inc
test
inc
push
aam
and
fld
dec
mov
jmp
leave
xor
dec
xor
mov
fs
mov
mov
rcl
aas
jge
fimul
fisub
inc
mov
jno
jns
push
push
push
nop
xor
mov
aam
mov
dec
fs
clc
and
push
jne
push
clc
sbb
xlat
cwde
xchg
push
std
pop
leave
push
stos
cdq
sub
sbb
rcr
cmp
clc
and
mov
dec
inc
rcl
sub
xor
aaa
adc
retf
int
jno
dec
xchg
fucomi
movs
push
push
xchg
icebp
les
dec
xor
jmp
jmp
into
cmp
mov
mov
mov
inc
int
or
mov
xchg
fmul
jns
sbb
ss
pushf
jb
jp
retf
cdq
pop
scas
jo
cs
call
aad
xor
push
in
fisttp
in
inc
mov
cmp
mov
jno
mov
retf
mov
call
or
push
arpl
out
cmc
jg
imul
pop
sub
ret
add
sahf
mov
dec
sbb
mov
hlt
aaa
lahf
inc
cld
not
std
xor
call
lods
stc
mov
cmps
or
iret
cmps
pop
mov
fwait
shl
mov
sbb
and
enter
xchg
neg
hlt
mov
das
loop
mov
mov
pop
cmc
or
jbe
pop
test
mov
mov
fwait
sbb
mov
dec
call
aam
cli
shr
pop
(bad)
out
mov
stc
jmp
or
cmp
sub
stos
inc
mov
sbb
pop
into
push
sbb
loopne
in
or
mov
or
call
repz
data16
pop
pop
inc
retf
jne
xchg
repnz
mov
push
mov
(bad)
dec
mov
adc
sbb
loope
dec
sub
div
ror
imul
xor
(bad)
xor
push
les
test
out
mov
hlt
jmp
fsub
cmp
jmp
aaa
xor
adc
dec
into
gs
jmp
in
call
jp
pop
push
jae
jo
cld
dec
xor
sbb
jbe
std
jecxz
adc
movs
sub
imul
cmc
sbb
adc
arpl
inc
cmp
pop
nop
scas
iret
cmp
popa
sahf
lds
dec
leave
lods
sysenter
push
mov
pop
rcl
nop
push
push
scas
sbb
ror
dec
rcr
pop
jge
mov
xchg
inc
mul
xchg
call
inc
xlat
mov
push
mov
jge
dec
fsub
fadd
xchg
push
dec
pop
and
dec
push
sti
rol
jmp
in
mov
inc
jmp
js
mov
clc
je
stos
cmps
mov
jnp
mov
add
xor
rcr
mov
loope
mov
adc
mov
add
push
pop
push
lds
xor
aam
xchg
nop
test
cmp
iret
rcl
add
aam
out
ds
push
pop
pushf
and
std
xchg
das
xchg
addr16
ss
je
lds
jo
ffreep
in
fild
inc
cwde
test
inc
jno
add
ja
sar
pop
pop
ins
shl
adc
inc
mov
sub
pop
cmp
int3
rcl
jb
xchg
lahf
mov
jns
sub
mov
pushf
cmp
dec
jp
inc
adc
aas
sbb
sti
sbb
icebp
daa
sahf
xor
into
fidivr
div
mov
xor
push
pop
add
mov
cmp
aad
or
jl
out
fsubr
daa
aam
sbb
dec
imul
jl
pop
call
imul
cli
jmp
loopne
jae
push
sti
pop
sub
inc
cdq
mov
lds
loopne
fist
stos
aas
retf
mov
mov
jae
pop
or
adc
std
mov
xchg
sub
adc
test
inc
and
(bad)
repnz
gs
cli
cmp
mov
test
mov
pop
fistp
in
xor
aaa
fwait
and
loope
add
sub
out
fld
sub
xor
ficomp
js
sbb
ja
jmp
mov
mov
cld
pop
mov
mov
adc
loope
or
das
ss
int3
add
mov
mov
mov
(bad)
fsubr
fld
aas
adc
dec
dec
inc
jnp
sub
and
cwde
iret
jnp
mov
mov
aaa
jle
pop
jnp
xchg
test
mov
daa
mov
or
ja
push
mov
or
jp
jge
mov
mov
stos
in
cwde
xchg
mov
mov
out
push
mov
or
cmps
xchg
retf
in
int3
enter
cmp
push
ror
into
ror
pop
cld
cmps
mov
jo
mov
(bad)
jmp
repnz
je
cs
lods
cmps
xchg
fnstenv
clc
ret
es
into
lea
in
mov
inc
(bad)
into
and
xor
es
enter
and
neg
movs
loop
in
sti
loop
idiv
add
mov
xchg
stos
jmp
imul
loopne
ss
aaa
mov
xor
ins
div
mov
dec
fist
sub
sub
xor
icebp
add
jnp
xchg
div
xchg
sbb
pop
xchg
jp
or
push
adc
and
in
popa
pop
out
push
fnsave
jmp
jbe
movs
pop
inc
scas
mov
test
outs
mov
fmulp
adc
out
add
mov
inc
adc
pop
(bad)
test
dec
sar
fcomp
enter
mov
daa
mov
iret
xor
inc
cld
ror
push
(bad)
scas
iret
gs
scas
jle
shl
fimul
pusha
out
hlt
bnd
xor
cmp
ins
push
pop
stos
test
push
out
cwde
xchg
mov
pop
les
xchg
ja
mov
fistp
das
sbb
push
mov
call
xor
pop
xor
cdq
push
pop
mov
mov
cmp
mov
cmp
in
cmp
push
add
sbb
mov
fldenv
test
pop
inc
fisubr
mov
cmc
adc
(bad)
std
arpl
das
and
dec
mov
jge
out
inc
(bad)
clc
sti
ds
cmp
add
sbb
push
jne
ret
(bad)
mov
add
and
outs
icebp
loopne
outs
(bad)
dec
ins
inc
and
pop
push
push
sub
imul
add
in
je
xchg
mov
mov
xor
xchg
add
pop
or
xchg
bound
or
push
xchg
lods
rcr
retf
(bad)
loope
ror
mov
cmps
lods
add
(bad)
cmp
(bad)
cmp
jecxz
loop
sub
lods
shl
ss
(bad)
pop
xchg
pusha
ror
aaa
in
loope
mov
in
add
inc
ins
mov
into
dec
cld
(bad)
mov
lds
out
inc
jo
dec
loope
xor
jmp
pop
dec
dec
sbb
cmp
iret
jecxz
adc
rcl
aas
push
mul
in
fidiv
in
test
adc
and
in
retf
push
dec
pop
jns
xor
ja
dec
sub
cmp
(bad)
call
xor
inc
fadd
push
jge
sar
pop
shr
sbb
arpl
pop
popa
sub
in
jno
test
jmp
mov
(bad)
test
fstp
cmp
in
adc
(bad)
fild
push
jmp
dec
ds
pop
adc
ss
ja
mov
call
in
cmp
test
xor
aaa
and
sub
aaa
imul
xchg
inc
add
jge
call
or
sbb
or
xchg
mov
std
cmp
or
or
or
sub
sar
repz
(bad)
ficom
pop
inc
icebp
push
and
out
rcl
mov
inc
push
dec
jne
add
je
popa
mov
popf
fnstcw
or
addr16
sub
push
icebp
stos
ins
pop
xchg
add
and
sub
ins
pop
cld
imul
cmc
ins
jecxz
test
jno
rol
mov
and
push
rcl
mov
mov
imul
shr
and
test
ins
shr
les
repz
jecxz
or
retf
aam
cmp
inc
xor
sub
add
pop
clc
inc
inc
and
gs
mov
cmp
cmc
xor
mov
gs
pop
xor
clc
cli
fwait
sbb
ror
mov
pop
fist
xchg
xor
push
sub
lds
inc
mov
push
mov
sbb
mov
mov
mov
inc
mov
xchg
xor
nop
sbb
dec
call
sub
and
imul
aad
ror
popa
mov
sbb
fsubr
pop
push
or
or
push
sbb
and
pop
push
pop
add
pop
fnsave
(bad)
pop
sbb
imul
cmp
cli
add
dec
out
mov
(bad)
mov
into
sub
ins
or
xchg
xor
xchg
dec
pop
adc
dec
into
loopne
jle
inc
cmp
xchg
repz
dec
cmp
mov
mov
je
jnp
ret
repz
cmp
xor
test
dec
jmp
sub
fisttp
push
push
cs
push
jp
out
mov
aas
call
xor
(bad)
nop
mov
pusha
xlat
or
and
gs
xchg
adc
xor
aam
xchg
dec
rcl
pushf
jge
out
fwait
call
repz
inc
enter
into
push
and
stos
cmp
mov
outs
cwde
std
js
and
dec
mov
or
mov
inc
cmp
lods
sahf
in
sub
ret
loopne
inc
xchg
jae
aad
test
or
lods
push
je
mov
xchg
jae
int
dec
adc
xlat
jecxz
sbb
jnp
sar
sub
cwde
bnd
push
ds
push
cmps
rol
push
sar
fdiv
jb
(bad)
pop
inc
xor
xor
out
or
repnz
pop
outs
retf
pop
mov
cmp
jmp
mov
add
mov
fstp
(bad)
mov
(bad)
nop
jmp
inc
les
sbb
in
add
nop
out
push
sti
sbb
dec
jl
pop
push
ja
ins
stc
in
cmp
test
imul
or
adc
dec
cmp
mov
sub
inc
(bad)
cmc
add
ret
push
add
call
sub
xor
div
loop
pop
rcl
pop
shl
pop
iret
mov
scas
xor
mov
pop
stos
mov
frstor
enter
test
gs
cmp
outs
or
es
fnstenv
mov
shr
mov
inc
sbb
into
hlt
jno
or
mov
xchg
cli
mov
jmp
imul
pop
sbb
sbb
mov
dec
cmp
mov
cmp
mov
out
inc
fucomp
stos
sti
in
cmp
inc
adc
clc
mov
or
fsub
and
cmps
jns
sub
enter
stos
aad
shl
cmp
fs
push
or
not
lods
mov
add
aam
stc
mov
lea
js
xchg
push
scas
cmp
jecxz
sbb
into
int3
fwait
aad
xchg
std
int
cld
and
shl
adc
xor
and
das
pushf
and
push
test
sbb
pop
ret
cmps
into
pop
sti
inc
jle
adc
pop
mov
sbb
test
repnz
dec
call
push
shr
fldl2e
call
cmp
xchg
(bad)
jl
dec
out
jne
or
xchg
dec
xor
dec
rol
jns
mov
mov
inc
repz
imul
aam
rcr
stc
rcl
loop
or
pop
pop
cmp
sti
add
xchg
repnz
mov
(bad)
add
imul
frstor
mov
lods
fdivr
or
jne
sbb
(bad)
mov
rcr
push
ins
pop
movs
retf
jb
out
sub
jno
(bad)
nop
jl
sar
push
shr
xchg
cmp
(bad)
dec
and
push
ja
and
enter
push
mov
out
pusha
cmp
sbb
(bad)
mov
dec
enter
sbb
adc
lea
sbb
mov
(bad)
imul
xchg
push
imul
fucom
cmp
inc
cmp
cmp
xor
outs
sub
fnsave
clc
arpl
cmps
lock
xlat
pop
fucomp
jp
out
lods
inc
xchg
mov
stos
mov
pop
cdq
cmp
sub
mov
pop
or
cmp
cmp
inc
mov
movs
dec
popa
jmp
and
or
lahf
outs
adc
data16
jg
cld
mov
sub
adc
adc
mov
and
outs
scas
pop
out
gs
mov
inc
pusha
and
lock
idiv
jp
adc
(bad)
cld
xchg
sub
test
adc
fistp
inc
stc
pusha
pop
test
(bad)
sbb
cli
inc
xchg
pop
mov
jecxz
mov
xchg
inc
outs
inc
jmp
inc
xchg
push
popf
dec
mov
push
loope
xchg
dec
repnz
jmp
mov
gs
fcmovb
xor
adc
test
pop
ss
les
cld
push
xor
adc
cmp
popf
pop
dec
dec
sar
das
loope
cmp
pop
pop
sbb
call
lahf
rol
imul
in
pop
out
fs
das
push
enter
xchg
cmp
add
jnp
mov
arpl
js
fild
mov
scas
cmp
dec
(bad)
push
(bad)
xor
jecxz
cmp
jp
in
and
ret
idiv
inc
inc
imul
iret
jbe
(bad)
mov
in
jl
rcl
repz
sahf
loope
imul
leave
xor
int
adc
pop
mov
push
xchg
sahf
fisubr
popf
add
xor
inc
xor
daa
ret
fwait
loop
xor
call
(bad)
jecxz
cld
xor
xchg
mov
xchg
outs
or
cmps
or
dec
mov
pop
cmp
pop
sbb
scas
ret
or
mov
push
cmps
dec
call
scas
scas
jp
in
cmp
mov
adc
lahf
pusha
ret
fbld
push
arpl
sbb
mov
xchg
xchg
ror
jle
out
and
jne
and
aas
push
pop
enter
add
sbb
cmp
jp
shr
cmp
sar
scas
nop
sbb
adc
cmp
jle
dec
mov
bound
rcr
inc
pusha
out
test
inc
aad
fsub
mov
mov
jl
into
mov
sub
pop
out
push
aam
mov
outs
(bad)
(bad)
mov
sub
push
sbb
das
outs
mov
cld
and
push
fimul
push
xor
cmps
popa
add
std
in
mov
dec
lods
jnp
int
jmp
and
xor
retf
fwait
je
nop
dec
or
dec
pop
mov
jb
gs
cmp
sbb
and
dec
rcr
or
sub
ins
ja
cmp
cmp
push
mov
sbb
jo
mov
mov
int
add
pop
iret
xchg
imul
push
mov
pop
aad
scas
mov
movs
daa
xchg
retf
into
dec
js
fwait
dec
jge
or
pop
ds
push
outs
aaa
aad
imul
cmp
ins
rol
mov
inc
repz
mov
je
cmp
loop
sbb
cs
fist
ins
int3
mov
jo
cwde
pop
mov
test
push
shl
sbb
jg
jbe
jge
repz
test
outs
rol
pushf
xor
push
jp
inc
sbb
in
(bad)
mov
mov
and
into
fild
pushf
pop
sbb
sti
leave
pop
test
(bad)
fidivr
mov
cmp
xor
xor
sar
scas
add
or
sub
(bad)
adc
cld
ja
sub
mov
rcl
je
in
pmaddwd
jl
jno
jmp
or
jmp
outs
mov
out
or
movs
test
push
pmulhuw
cmp
jo
adc
out
aam
outs
test
push
push
call
xor
call
movs
arpl
jmp
jg
jg
push
adc
mov
inc
call
inc
std
test
(bad)
rcr
leave
inc
inc
stc
sbb
out
test
adc
imul
add
push
loopne
(bad)
jmp
cmp
fadd
sbb
mov
(bad)
push
inc
inc
outs
aad
push
mov
(bad)
(bad)
call
sar
xor
mov
inc
ss
fild
mov
popf
sub
hlt
mov
inc
cmp
aas
test
js
lahf
jmp
sbb
jnp
cld
aad
sub
test
jae
pop
fdivrp
test
out
ror
jne
lock
add
loop
xor
aam
and
mov
repnz
mov
in
mov
popf
push
loope
ds
stc
mov
cmp
setg
inc
adc
inc
out
int3
or
nop
jmp
repz
lea
add
retf
add
out
mov
call
or
mov
outs
xor
xchg
outs
push
mov
(bad)
and
ret
popf
mov
sti
xchg
pop
int3
and
retf
jle
inc
rcl
(bad)
repz
dec
xchg
adc
icebp
fadd
adc
push
pop
cmp
loope
pusha
imul
in
(bad)
stos
(bad)
sbb
cmc
dec
fs
mov
mov
jmp
jle
and
retf
sub
add
test
stc
jge
aaa
test
bound
xchg
mov
jle
cs
(bad)
sar
out
adc
jb
mov
es
cmps
call
stos
cmp
rcr
inc
add
ror
call
xchg
push
xchg
sar
out
arpl
outs
mov
cdq
mov
and
jmp
out
loop
xchg
sbb
sbb
test
mov
jp
jl
int
mov
fstp
push
ret
or
out
call
push
ins
jl
mov
jmp
pop
mov
(bad)
xor
les
xchg
loopne
or
mov
arpl
sti
xchg
mov
or
test
xchg
cld
xchg
jl
add
add
cmp
das
add
sti
mov
rcr
rcr
sbb
movs
stc
cmc
in
push
shl
xlat
ret
retf
js
out
pop
push
int
in
(bad)
jecxz
(bad)
push
loopne
push
sbb
xor
xchg
pop
push
test
pop
movs
xor
(bad)
mov
inc
retf
and
push
lds
xchg
mov
mov
inc
nop
or
push
fs
sub
mov
das
repz
adc
or
(bad)
xor
and
or
inc
aas
jb
mov
push
les
sbb
stc
std
cmc
jge
out
jne
inc
jns
ret
push
imul
cmps
xor
in
mov
not
int
test
je
lock
scas
cmp
adc
xchg
mov
xlat
js
xchg
dec
das
out
xchg
pushf
lea
ret
daa
sbb
or
cli
push
iret
int
hlt
addr16
cmp
mov
sub
or
fld
dec
dec
movs
out
outs
aas
mov
fst
pop
ficom
push
jbe
call
int3
lods
add
mov
int
aaa
cmp
sbb
mov
pop
lods
lea
fisubr
out
aas
les
loop
mov
sar
add
sub
aas
pop
daa
adc
push
mov
aas
pop
daa
pusha
jb
mov
xchg
out
in
lahf
pushf
inc
add
or
sub
retf
add
jecxz
adc
out
stos
pop
mov
push
adc
ja
xor
loopne
push
add
int
retf
push
push
xor
adc
sahf
shr
mov
mov
js
ss
jnp
pop
lods
xchg
push
out
gs
and
lock
out
stc
dec
xchg
pop
shr
test
daa
out
pop
add
stos
and
add
xchg
lds
xor
inc
mov
fmul
push
pop
and
jae
pop
fist
push
pop
ja
adc
call
lods
jp
push
test
popa
push
sahf
mov
mov
dec
dec
je
ins
frstor
dec
mov
dec
imul
dec
pop
sbb
jg
sahf
adc
sbb
adc
fsincos
or
mul
ins
shl
test
adc
mov
push
lahf
pop
popf
stos
fwait
mov
xchg
xlat
adc
jmp
or
sub
add
jl
popa
movs
fmul
fisttp
jbe
push
jae
cmc
fcomp
xchg
pop
clc
push
sub
push
or
je
jno
dec
inc
adc
xchg
outs
addr16
inc
mov
cmp
mov
jns
cld
mov
dec
int
mov
(bad)
jne
dec
or
mov
mov
mov
add
sbb
mov
mov
cmp
jns
mov
bound
add
cmc
(bad)
and
push
mov
(bad)
xchg
in
push
sub
mov
pop
mov
test
cs
pop
lahf
adc
aaa
mov
push
inc
xlat
hlt
dec
(bad)
add
push
inc
aaa
jg
or
push
xchg
outs
xchg
mov
pushw
dec
sbb
ror
mov
fldenvw
mov
lahf
push
push
or
adc
(bad)
pusha
test
or
push
retf
pop
dec
lods
add
stos
cli
gs
dec
cwde
clc
ins
inc
cs
jge
call
sub
icebp
gs
push
arpl
xchg
clc
fistp
or
outs
mov
rol
movs
shl
mov
aaa
pop
or
add
and
push
or
sbb
cmp
push
cmp
jnp
sbb
repnz
or
(bad)
das
fcom
dec
jb
cmp
adc
pusha
dec
idiv
push
outs
ja
(bad)
call
add
add
xchg
inc
(bad)
mov
repz
shr
cmc
adc
adc
xor
jnp
mov
clc
dec
dec
jns
(bad)
aad
inc
pop
and
out
and
xor
push
push
lea
mov
fidiv
test
and
mov
cmp
xor
jns
push
arpl
or
in
movs
xchg
mov
div
lahf
jne
inc
pop
jmp
push
ror
imul
xor
mov
call
mov
and
mov
aam
inc
mov
lods
jl
push
imul
dec
sub
mov
sub
pop
mov
jns
jnp
mov
stc
xlat
fnstsw
ror
jl
(bad)
stc
imul
adc
sbb
ret
add
xchg
aad
lods
xor
cld
fs
xchg
xor
and
fsub
pop
mov
add
and
and
and
push
out
and
xor
xchg
jmp
loopne
(bad)
stc
and
inc
xchg
lds
inc
call
or
inc
cmp
and
icebp
xor
pop
addr16
sub
stos
and
inc
jp
dec
push
pop
pop
mov
fadd
retf
sub
iret
jne
pop
(bad)
cdq
movs
and
xor
in
int
(bad)
pop
shr
xchg
mov
inc
jno
push
dec
mov
rcl
aas
cmp
cmp
mov
mov
xchg
ins
cs
and
int3
test
mov
push
cmps
or
jmp
push
clc
pop
mov
out
sbb
fimul
mov
outs
test
(bad)
shr
push
daa
in
lods
xchg
pop
das
jns
bnd
out
or
jae
mov
pop
mov
loopne
mov
sbb
ins
scas
repnz
dec
enter
mov
out
sbb
xor
ret
pushf
or
adc
cmc
shl
mov
mov
rol
outs
push
lds
inc
stos
(bad)
xor
(bad)
loope
jbe
dec
das
dec
mov
jle
repz
jns
cmp
int
cld
rcr
push
pop
pop
inc
std
jle
aas
jecxz
rcr
cs
adc
sbb
enter
jnp
mov
rcl
add
and
sbb
jge
push
lods
pop
jmp
push
(bad)
and
adc
fiadd
es
pop
daa
inc
retf
cmp
inc
inc
loopne
lods
dec
pusha
jmp
sub
mov
in
pop
lods
(bad)
(bad)
add
jge
mov
mov
(bad)
mov
out
jae
and
dec
inc
mov
inc
sbb
cld
push
sub
mov
pop
test
out
inc
pop
retf
mov
rcl
fild
mov
pop
test
xor
test
pusha
pop
mov
dec
pop
dec
sub
in
int3
dec
in
stos
pop
dec
push
scas
dec
pop
mov
dec
(bad)
or
(bad)
ss
add
(bad)
arpl
rcr
sbb
sub
retf
push
retf
cmp
loop
inc
out
enter
aam
jne
test
xor
xchg
mov
mov
addr16
push
call
fmul
adc
push
jg
push
and
btr
rol
push
inc
aas
icebp
sub
aad
push
dec
in
inc
pop
aaa
push
add
or
fadd
lock
test
shl
mov
in
cmp
pop
push
lock
imul
push
fistp
jle
mov
cwde
push
es
test
retf
xchg
sar
cmp
(bad)
adc
rcl
push
jmp
cmps
jb
or
arpl
movs
fisubr
jae
call
repnz
fnstcw
adc
jns
nop
cmc
xchg
addr16
mov
jge
mov
in
(bad)
aaa
jae
push
sbb
leave
int
and
out
pop
and
pop
popf
cmp
xor
jge
add
sbb
or
retf
lds
dec
jecxz
add
sar
aam
fstp
push
out
cmp
mov
lods
(bad)
icebp
inc
ins
popa
xor
movs
(bad)
fsub
jp
test
cmp
fsub
adc
movs
add
hlt
sbb
jns
pop
rcl
retf
enter
fdiv
scas
add
mov
adc
stos
fwait
bound
cmp
dec
cdq
aas
xlat
div
sub
sub
and
push
mov
cld
aas
js
jne
jp
enter
imul
sbb
pushf
stos
call
lock
(bad)
dec
inc
rol
repz
xor
cmp
xor
mov
sbb
pop
push
jo
jns
bound
mov
shl
sti
and
fistp
sti
packsswb
cdq
cdq
add
xchg
jne
addr16
pop
adc
and
loop
(bad)
sbb
test
and
mov
mov
loop
add
xchg
aaa
lock
add
fs
sub
sbb
pop
out
sub
mov
popa
mov
lods
cdq
jg
stos
mov
xchg
xor
retf
enter
adc
test
add
rol
movsx
pushf
stc
xchg
lahf
mov
jmp
xchg
imul
xor
jl
test
loop
mov
adc
(bad)
cmps
mov
in
mov
and
and
(bad)
fisttp
dec
in
call
inc
sbb
shl
adc
(bad)
mov
or
cmp
jmp
sub
push
sub
movs
jne
or
imul
aad
sti
inc
xor
das
imul
in
popf
inc
add
shl
sub
inc
pop
jp
mov
std
cmp
adc
inc
add
push
or
push
adc
jp
sub
xchg
pop
xor
push
jecxz
iret
lds
sub
ret
xor
push
sub
je
push
jae
inc
cmp
ss
mov
xor
test
loopne
or
sub
sbb
jb
fist
or
mov
aad
pop
sti
dec
rcl
jbe
cwde
sahf
mov
call
add
cmp
jb
cmp
test
cmps
cwde
mov
int
inc
cmc
pop
(bad)
retf
shl
rcr
das
fisub
add
dec
stos
aas
ret
and
mov
(bad)
movs
hlt
dec
xchg
sub
pop
push
sbb
or
xchg
dec
test
jne
dec
ins
mov
jl
fild
in
xchg
mov
cmp
xchg
daa
shr
cwde
ins
or
inc
xchg
add
xchg
scas
jno
dec
inc
int
mov
sbb
or
inc
invlpg
test
mov
mov
repnz
add
sti
dec
fstp
imul
gs
xchg
or
imul
fs
les
cmp
sub
adc
and
loope
mov
(bad)
add
in
jnp
loope
lods
xchg
mov
popf
xchg
test
cmp
dec
addr16
enter
fs
sbb
outs
adc
(bad)
repz
aaa
dec
cmp
aam
data16
adc
in
fidiv
jle
mov
xchg
or
bound
fucom
jne
into
ss
test
(bad)
adc
ja
cmps
jnp
(bad)
hlt
pop
mov
or
mov
ja
outs
dec
cdq
mov
or
(bad)
mov
mov
adc
outs
movs
jl
xor
out
cmp
or
mov
std
jp
iret
or
jp
inc
fmul
shl
jg
add
pusha
inc
pop
pop
adc
jecxz
inc
dec
jge
adc
ret
mov
loope
mov
sub
jo
push
sahf
dec
adc
xor
rcr
retf
sahf
jno
and
js
dec
xchg
fs
in
mov
out
push
jb
addr16
ins
mov
add
int
cmps
push
mov
push
add
pop
and
add
lods
retf
repz
imul
les
jl
dec
ret
inc
or
int
dec
cdq
mov
fdiv
add
mov
cli
and
ds
mov
dec
adc
pop
fdivr
(bad)
jl
mov
mov
in
mov
cdq
stc
enter
lock
jb
fbstp
dec
jg
push
jns
sub
inc
das
mul
and
das
movs
leave
mov
adc
add
call
lock
mov
or
rcr
sub
in
jl
cmp
and
and
div
or
push
test
es
dec
cwde
push
xchg
vpmadcsswd
ins
mov
mov
cmp
(bad)
lods
leave
addr16
jmp
and
or
add
add
adc
fs
test
ds
or
das
arpl
inc
loopne
in
scas
lahf
xor
pop
call
in
adc
push
or
outs
inc
sub
mov
push
popf
xor
and
add
mov
push
lods
mov
in
out
ror
mov
pop
enter
mov
sub
hlt
dec
jge
inc
outs
jno
push
push
and
xor
pop
xchg
sahf
cmp
cmps
fdivr
mov
jge
pusha
jecxz
xchg
les
out
aaa
jns
pmulhuw
pop
push
ins
push
mov
fdivr
jmp
pop
arpl
movs
ss
or
leave
add
xchg
dec
add
icebp
jo
imul
out
das
mov
aad
push
mov
mov
pop
pushf
jae
(bad)
gs
shr
cdq
sub
sbb
jbe
jle
ins
cmp
aad
sbb
jmp
mov
scas
jecxz
mov
ret
aaa
jo
jle
sub
add
and
sbb
data16
ss
mov
test
add
pop
xchg
push
loop
jne
cmc
into
pop
cwde
in
add
mov
fst
fs
or
xchg
pop
push
rcl
cmp
in
loope
jns
cmp
dec
fs
cli
sub
fstp
imul
adc
jp
dec
jae
mov
push
fcmovb
mov
cmps
push
aas
cmp
cmp
sti
in
push
and
sub
hlt
mov
call
out
xchg
imul
dec
push
push
imul
jne
jp
retf
sub
xor
test
fs
hlt
mov
push
pop
out
test
sub
pushf
push
inc
test
xchg
push
dec
leave
mov
imul
arpl
add
push
pop
fsub
add
xor
cmps
sbb
xchg
cmps
jnp
test
pop
popa
outs
jmp
(bad)
jmp
add
sub
in
inc
sbb
out
mov
sbb
and
or
mul
fimul
push
mov
mov
imul
aad
mov
ffree
cwde
addr16
mov
sub
mov
xor
aad
ds
push
sub
mov
pushf
adc
fbstp
mov
jbe
sub
pusha
xchg
sar
adc
jmp
dec
xor
xchg
mov
ins
daa
cwde
xor
sahf
(bad)
das
add
(bad)
xor
stos
pop
pop
and
sub
div
xor
cmp
xor
dec
ret
cwde
mov
xchg
xchg
mov
mov
inc
in
sbb
iret
gs
or
and
loopne
jne
sbb
arpl
enter
out
mov
xchg
jmp
cwde
ss
mov
retf
lock
or
mov
iret
push
test
sti
adc
les
sbb
jl
pop
xor
mov
cmc
mov
mov
push
pushf
pop
mov
jnp
mov
pop
test
repnz
test
ret
sbb
icebp
scas
add
mov
xchg
or
xchg
jge
fidivr
daa
add
rol
push
dec
icebp
add
pop
sub
or
or
pop
shr
aam
out
mov
mov
dec
out
mov
pop
cmp
push
test
jecxz
mov
sub
aam
ret
sbb
iret
mov
pop
jmp
into
(bad)
push
mov
xor
mov
push
ins
mov
test
ja
xor
mov
pushf
sub
cmp
call
and
clc
call
loope
mov
push
xchg
in
add
mov
in
mul
push
mov
sahf
jns
jge
cmp
push
xchg
push
push
push
add
add
cs
fidivr
jp
xchg
add
rcr
pop
aaa
xor
enter
xor
rcl
test
(bad)
mov
ds
sub
mov
push
cld
sbb
or
jmp
push
push
xchg
mov
shl
xor
addr16
pop
cmp
inc
loopne
fisttp
jbe
imul
push
das
sbb
data16
ds
and
imul
loop
jg
add
call
dec
in
mov
aam
sahf
pop
imul
jbe
jns
imul
jge
lahf
dec
cmp
or
stos
cmp
jp
fadd
(bad)
cmps
mul
pop
pop
jo
fist
sub
(bad)
push
imul
cmp
mov
push
cmp
push
aas
sub
fmul
pop
ins
pop
mov
bswap
aas
pop
stos
mov
jle
mov
dec
mov
mov
push
aad
pop
cli
es
pushf
lahf
inc
daa
ins
jl
jmp
lock
sub
inc
punpckldq
retf
into
out
jmp
into
jle
jae
aam
jmp
dec
lock
mov
cmp
cmp
out
jne
push
add
pushf
or
mov
mov
data16
jl
pop
fld
stos
mov
in
jns
xchg
cwde
or
jo
imul
scas
sbb
fcom
push
pop
icebp
test
ror
xor
inc
jo
out
jg
jae
adc
xchg
movs
cmp
and
adc
sbb
jo
add
ret
lock
ss
cmp
test
(bad)
xlat
or
cmp
les
fcmove
jbe
out
xchg
add
cdq
addr16
dec
aaa
lods
cdq
cld
(bad)
fld
cmp
adc
and
(bad)
addr16
jb
fcomip
add
fsubrp
jle
mov
mov
xchg
mov
movs
pop
sar
fist
rcl
cs
pop
sbb
inc
lea
(bad)
mov
or
(bad)
jmp
jle
or
cmp
adc
mov
leave
xlat
jmp
inc
sahf
sub
xchg
cmc
cmp
adc
sbb
out
push
lahf
into
pushf
cli
notrack
pushf
outs
aam
cmps
in
mov
fmul
inc
xchg
scas
int3
aaa
pop
dec
int3
and
xchg
pop
push
call
dec
xchg
dec
popa
mov
int3
(bad)
jo
cmps
mov
out
xor
div
xlat
test
xchg
lods
stc
into
pop
sti
rol
pop
jge
fsub
cmp
xchg
push
fmul
adc
aas
sahf
les
test
and
mov
jl
stos
adc
cwde
or
jge
add
xor
nop
lds
test
and
add
loope
shl
(bad)
in
ja
mov
and
mov
xchg
cmc
push
cwde
not
jne
fild
pop
sub
gs
or
push
fwait
inc
and
sub
out
cmp
push
shl
sub
lods
popa
inc
adc
push
cmp
in
ja
jmp
fwait
ret
push
pop
sbb
sbb
jb
loop
dec
sbb
pusha
jle
fadd
jg
and
aaa
mov
inc
jmp
inc
mov
rcr
fcmovu
ins
add
das
add
bound
push
adc
or
xchg
in
arpl
inc
vdivss
and
ins
shl
sbb
sbb
loopne
or
sahf
pushf
ss
inc
dec
mov
jmp
jle
ja
scas
fdiv
add
sbb
add
ds
mov
repnz
or
gs
jecxz
cmp
cli
mov
into
xor
cmp
test
push
mov
push
adc
ret
sbb
cmp
xchg
hlt
jnp
mov
xor
jns
movs
int
in
in
jmp
scas
or
push
jbe
faddp
das
push
and
adc
data16
mov
pop
inc
stos
mov
jmp
dec
cmp
loop
add
inc
test
dec
das
gs
or
push
add
and
mov
sub
test
xchg
mov
jg
and
mov
daa
inc
inc
test
push
in
out
and
dec
pop
adc
cwde
call
xor
xchg
sbb
rol
dec
mov
mov
push
(bad)
aam
movs
jg
add
pop
and
pop
mov
addr16
(bad)
cmp
icebp
out
sub
pop
fst
mov
test
jae
mov
sub
lods
out
push
adc
pop
pop
dec
and
xchg
add
jmp
inc
push
mov
iret
cli
in
fild
cmps
pop
call
adc
int3
jb
adc
daa
sbb
clc
(bad)
(bad)
cs
add
sbb
push
mov
inc
mov
dec
fistp
xor
pop
mov
push
sbb
popf
cmps
mov
xor
dec
(bad)
scas
and
add
rcr
jle
dec
jbe
loop
ret
or
dec
movs
mov
repz
xchg
mov
in
push
inc
lahf
ja
bound
loop
aas
arpl
ret
and
imul
cli
fwait
lea
mov
and
inc
pop
xchg
xchg
scas
jbe
mov
ror
xchg
ret
mov
jae
dec
sbb
jg
jmp
retf
retf
div
jbe
pop
sub
mov
call
mov
pop
mov
adc
out
sbb
xor
jo
jae
mov
pop
push
xor
jl
xchg
adc
int
dec
jb
push
inc
sbb
rol
xor
or
pop
bound
rcl
cmp
inc
add
retf
mov
in
retf
fcomi
in
enter
mov
enter
jmp
push
inc
int
popa
leave
add
in
fstp
dec
cmps
xor
aad
xchg
xchg
push
jae
or
jns
loopne
jbe
aam
je
clc
in
aad
dec
lods
add
pop
(bad)
push
and
mov
add
rcr
mov
jae
mov
add
mov
and
cs
iret
addr16
push
dec
xor
lods
enter
in
pop
add
leave
push
mov
jge
inc
mov
add
sub
mov
inc
cwde
(bad)
fimul
std
popf
pop
(bad)
adc
inc
stos
ja
mov
das
std
sar
sub
cmps
fbstp
inc
mov
test
inc
xlat
(bad)
je
and
sub
pop
pop
or
jp
lods
shl
mov
mov
mov
call
mov
arpl
pop
mov
(bad)
xorps
inc
push
(bad)
fisubr
mov
cmps
movs
pop
jmp
xor
int
mov
movs
movs
sbb
in
pop
fld
in
inc
jno
cli
jge
ins
repz
pop
cld
in
cmp
cmp
mov
inc
jo
xchg
push
out
mov
add
push
in
nop
pop
lods
ds
les
sbb
scas
mov
mov
dec
inc
mov
cmp
lea
pop
jne
dec
outs
sub
retf
cdq
shl
cld
ss
add
test
cmp
mov
push
push
in
mov
nop
mov
dec
(bad)
mov
push
movups
mov
and
sbb
push
retf
gs
add
call
(bad)
mov
inc
mov
mov
push
ins
xor
loope
mov
rcl
pop
inc
jb
leave
outs
push
mov
je
repnz
dec
and
or
movs
js
(bad)
xor
cmp
scas
dec
leave
imul
repnz
dec
stos
mov
pop
(bad)
and
cmp
in
jmp
inc
xchg
cwde
push
adc
dec
je
test
gs
jns
mov
jae
or
and
in
dec
sub
out
cli
cmp
scas
mov
int3
xchg
ficom
sbb
outs
test
lock
(bad)
push
add
bound
mov
mov
test
scas
outs
add
pop
scas
retf
cli
cmp
jne
adc
sbb
cmp
movs
leave
pop
test
push
or
fwait
scas
pop
push
push
xor
push
jae
fcmovbe
pop
test
xor
xchg
xchg
gs
addr16
xchg
(bad)
mov
or
cdq
rcl
loop
fst
push
mov
mov
dec
pop
test
adc
test
into
hlt
inc
cmp
sub
mov
retf
mov
test
repnz
add
push
and
fstp
(bad)
xchg
xor
mov
outs
dec
dec
dec
(bad)
adc
in
fcom
sub
dec
(bad)
jl
pop
jae
in
dec
mov
mov
adc
jmp
adc
mov
ds
inc
stc
xor
dec
out
pop
push
inc
jge
jl
mov
xchg
push
(bad)
push
or
cli
mov
jmp
test
push
jp
retf
js
mov
mov
mov
mov
ds
jnp
sti
(bad)
mov
lods
ret
add
mov
jbe
sub
pusha
or
xchg
outs
jbe
ret
cli
mov
fwait
cmps
jle
rcl
dec
cdq
int
inc
gs
mov
retf
xchg
mov
add
aam
push
in
pop
jbe
test
xchg
(bad)
es
cmp
inc
pop
xchg
dec
outs
dec
cld
mov
inc
pop
and
mov
mov
xchg
cwde
pop
inc
stos
inc
(bad)
jle
push
mov
(bad)
je
xchg
mov
xchg
fnstenv
(bad)
test
lea
pop
mov
xor
inc
add
int3
jg
outs
or
and
inc
dec
mov
push
out
in
stc
dec
out
sbb
dec
out
push
jnp
outs
imul
adc
mov
mov
dec
jae
add
add
in
or
jae
fisttp
pop
scas
add
mov
fdivr
sbb
inc
jle
mov
je
inc
(bad)
fcomp
sub
add
mov
xor
or
icebp
sbb
cdq
idiv
leave
enter
stos
addr16
test
ret
(bad)
in
mov
inc
mov
popf
retf
out
fdiv
cdq
push
pop
sti
mov
fwait
dec
mov
cmc
call
inc
pop
mov
shr
adc
aas
jb
in
or
fmul
fucomi
add
rcl
ins
mov
adc
push
cli
out
dec
cmp
fwait
lds
cmp
cwde
shr
lock
jl
mov
pop
frstor
fidiv
addr16
xor
loopne
cld
xlat
mov
aam
ins
out
ret
arpl
cs
aas
xlat
or
loop
xchg
jmp
and
sub
or
mov
add
mov
jmp
je
mov
inc
xchg
xchg
and
xor
repz
cmps
(bad)
pop
(bad)
inc
mov
test
jg
bnd
aam
and
mov
test
push
inc
stc
in
js
(bad)
mov
jb
and
pop
(bad)
out
jmp
lea
movntps
sbb
cdq
or
or
push
add
(bad)
(bad)
and
(bad)
jne
dec
(bad)
fild
mov
(bad)
push
dec
push
retf
mov
rcr
lods
mov
(bad)
nop
dec
mov
xchg
cmp
and
mov
aad
add
xchg
pop
adc
sbb
or
in
inc
add
fst
inc
push
lods
inc
retf
shr
or
dec
jno
push
mov
or
loop
shl
mov
cdq
stos
movs
push
push
cmps
adc
ins
les
pop
scas
cs
lods
sbb
jmp
popf
or
inc
sub
xchg
cld
sub
and
mov
idiv
or
dec
push
out
mov
dec
mov
outs
mov
or
mov
cmc
xor
les
xchg
inc
sub
idiv
push
and
cmp
imul
test
lahf
jae
je
jb
iret
pop
dec
inc
lahf
pop
sti
cmp
add
popa
xor
push
and
adc
pop
mov
adc
scas
rcr
jo
bound
iret
dec
or
loope
out
stc
arpl
mov
adc
sbb
jge
(bad)
xabort
rol
mov
(bad)
hlt
inc
(bad)
gs
pop
cmp
test
push
mov
imul
cmp
jg
mov
mov
int
sahf
jge
pop
popf
sub
(bad)
sub
pop
(bad)
and
cmp
xchg
jmp
stos
or
pop
xchg
add
bound
call
out
jnp
sti
pop
pop
retf
mov
inc
jno
retf
pop
inc
shl
shl
dec
jmp
shl
xor
frstor
inc
stc
scas
mov
stc
mov
jb
inc
enter
dec
sub
test
aad
lahf
jae
jo
in
push
cdq
mov
jl
cmp
inc
xchg
push
xor
popa
jne
push
push
push
jns
mov
repz
mov
push
rol
add
xchg
push
fwait
xor
shl
mov
dec
push
stos
mov
je
or
or
cmp
leave
gs
mov
xchg
add
scas
loop
(bad)
push
aas
mov
aas
(bad)
fst
adc
test
out
das
inc
add
pushf
and
mov
icebp
xchg
mov
sbb
das
mov
push
gs
xchg
cld
shl
add
push
inc
fwait
pop
mov
imul
out
lods
pop
mov
cmc
jns
in
div
cmc
pop
pop
pop
ss
adc
inc
jmp
fidivr
sub
pop
cwde
cmps
fstp
outs
and
sbb
scas
or
fisubr
or
movs
xchg
sub
mov
mov
adc
push
and
push
ret
inc
pop
mov
cmp
jmp
cmp
daa
stc
push
std
or
cld
pop
jge
inc
movs
dec
and
sbb
cmp
push
xchg
add
mov
add
addr16
mov
bnd
inc
mov
mov
push
jg
retf
fcom
add
cmps
push
and
sbb
fs
and
mov
mov
(bad)
in
mov
jecxz
clc
pushf
dec
and
mov
and
fisubr
xor
and
rcl
sub
repz
xor
jmp
inc
adc
adc
mov
iret
lds
arpl
loopne
mov
in
xchg
push
adc
mov
not
lock
cmp
cmps
sub
in
dec
aad
fild
inc
scas
inc
rcr
iret
cwde
mov
es
ret
xor
adc
mov
out
dec
mov
pop
lds
cmp
pop
sub
retf
imul
jno
jg
(bad)
jmp
test
jge
rcl
pop
out
jg
ficomp
xchg
jb
in
int
lds
fisttp
cmps
jne
mov
fadd
jmp
clc
rcr
and
mov
and
das
mov
xchg
out
ds
out
(bad)
mov
or
pop
mov
xor
fstp
imul
mov
pop
rol
ins
(bad)
xchg
adc
inc
jno
inc
ja
xchg
sub
adc
push
ss
inc
rol
outs
leave
or
and
sub
and
add
ret
xor
dec
add
add
sbb
loop
lock
sub
jns
mov
mov
aam
push
mov
bound
bound
mov
inc
or
icebp
je
int3
dec
sbb
in
pop
sub
mov
int3
jecxz
test
push
mov
call
fidiv
sub
mov
popf
lds
jae
or
(bad)
stos
cmp
loop
fidivr
or
mov
pushf
sub
stos
(bad)
mov
enter
sbb
pop
mov
leave
jp
dec
cmp
iret
pop
dec
arpl
mov
mov
mov
push
outs
jle
loopne
xchg
out
sub
adc
pop
fsub
jp
mov
iret
out
clc
sti
mov
mov
(bad)
outs
jns
mov
inc
fild
pop
xchg
rcl
loope
call
mov
fisttp
sub
je
sbb
pop
push
hlt
push
xchg
div
cmps
test
cwde
in
mov
mov
jl
(bad)
mov
dec
fdivr
(bad)
cmp
fucomip
dec
pop
adc
out
push
cmp
adc
lods
hlt
in
mov
lods
inc
push
add
jns
es
sbb
jge
xchg
das
out
xor
(bad)
in
les
pop
cmp
inc
lods
xor
(bad)
mov
ror
ret
mov
dec
and
arpl
sub
sar
jmp
sahf
pop
sbb
add
mov
dec
pop
or
inc
jns
push
push
aas
movs
(bad)
and
sahf
xchg
popa
nop
shr
sub
stos
or
scas
or
dec
rcl
mov
or
jno
xchg
gs
nop
jns
mov
les
call
jmp
push
xchg
sti
adc
adc
test
push
pusha
adc
mov
push
in
aaa
sar
loope
out
xchg
ja
into
icebp
stos
xor
fs
xor
xor
xlat
mov
mov
inc
in
xchg
jmp
mov
pop
fmul
(bad)
icebp
dec
sbb
jne
psraw
popf
(bad)
popa
lea
jg
sbb
movs
int
fisubr
into
push
xor
(bad)
clc
add
add
mov
movs
outs
and
mov
ds
xlat
aas
test
fdivrp
rcr
imul
sub
or
sahf
das
lods
scas
sti
call
pusha
mov
and
div
inc
out
clc
lea
retf
rcr
loope
pop
shr
jl
cwde
mov
mov
dec
pop
(bad)
and
test
outs
mov
xor
adc
add
adc
dec
jbe
pusha
popf
loopne
aad
(bad)
or
shl
cmp
sub
cmp
sar
movs
enter
test
ins
and
mov
inc
jl
jg
and
sub
mov
fmul
or
pusha
adc
jmp
mov
dec
mov
leave
inc
pusha
mov
sub
daa
dec
adc
leave
sbb
(bad)
adc
inc
je
lahf
inc
inc
adc
dec
fs
xchg
push
jle
mov
cs
cmp
pop
cmps
scas
sub
enter
mov
xchg
clc
pop
cmps
cmps
xchg
push
mov
sub
sub
imul
pushf
adc
fdivrp
inc
jb
push
dec
cmp
and
outs
and
or
add
fdivr
push
push
cmp
or
(bad)
(bad)
mov
or
push
push
aam
cli
imul
test
xchg
lds
push
(bad)
in
test
mov
sub
enter
or
push
test
movs
stc
scas
fnsave
mov
int
cmp
outs
cmp
(bad)
xor
fneni(8087
out
cwde
push
adc
fisub
pop
mov
mov
mov
jo
cs
bound
and
inc
hlt
and
or
adc
jmp
sbb
rol
aam
or
xchg
jb
aas
and
pop
and
and
nop
test
aad
inc
dec
sbb
inc
(bad)
sub
data16
or
rol
dec
fisubr
aas
sub
sahf
mov
inc
outs
mov
pop
scas
xlat
mov
jecxz
aaa
call
shufps
ficomp
(bad)
outs
dec
pop
call
mov
sbb
sub
ja
sbb
pop
scas
mov
test
pop
popf
dec
add
int3
imul
push
(bad)
adc
retf
push
cld
push
xor
mov
fs
add
sti
call
cmp
and
pop
(bad)
cmp
xor
sahf
mov
cmp
jecxz
sub
inc
(bad)
push
inc
sub
dec
cs
or
(bad)
vsubpd
push
out
dec
jmp
mov
pop
in
js
pop
push
pop
mov
les
mov
sub
cwde
in
mov
loopne
xchg
cmps
test
inc
mov
jmp
cmc
iret
aam
mov
pop
mov
xchg
cwde
mov
inc
push
ficomp
std
stc
add
in
mov
dec
xchg
iret
push
mov
cwde
jnp
cmc
jmp
popa
jg
nop
mov
fadd
out
pop
cmp
dec
sbb
aam
aad
enter
mov
int3
js
out
dec
(bad)
fcomp
pop
test
das
movs
and
pop
cmp
sbb
and
imul
jecxz
xchg
mov
adc
fs
jno
mov
jo
je
sub
and
cmp
repz
mov
in
mov
adc
fucomp
fwait
stc
test
jmp
xchg
(bad)
xor
and
pop
pop
ins
ror
pop
pop
cmp
inc
ds
scas
sbb
out
rcr
adc
shl
adc
push
in
ret
repnz
inc
daa
dec
or
adc
daa
dec
jle
ja
sbb
inc
aas
fst
xor
jnp
sub
adc
mov
add
fsubr
xor
jne
cwde
jbe
mov
(bad)
(bad)
jmp
aaa
mov
sbb
sub
push
mov
add
nop
mov
mov
jle
nop
inc
(bad)
adc
ja
sti
jecxz
cmp
jge
ins
loopne
mov
cmp
dec
push
imul
pop
hlt
jge
push
call
aas
pop
les
movs
retf
pop
mov
pop
loop
in
(bad)
shr
shl
cwde
les
fdiv
mov
cld
jl
add
(bad)
in
shl
rcr
pop
mov
xchg
jb
mov
inc
mov
bound
adc
(bad)
cmp
cmps
mov
or
cmp
out
enter
stos
push
ret
lahf
sbb
aaa
adc
lods
jge
cmp
push
add
mov
cli
movs
mov
sbb
mov
pop
inc
fadd
mov
test
dec
in
mov
stos
addr16
mov
test
int3
xor
imul
push
(bad)
imul
xchg
sar
je
dec
mov
jo
jge
inc
int3
lods
call
stos
repnz
sbb
or
sub
mov
pop
xor
adc
xchg
es
arpl
(bad)
and
xor
in
test
push
je
add
mov
mov
nop
xor
ret
xor
jge
ds
mov
and
cli
dec
dec
(bad)
pop
in
push
adc
test
mov
lds
sbb
out
dec
sbb
cdq
jecxz
cmp
mov
loopne
xlat
or
popf
pop
xor
jo
icebp
mov
rcr
mov
jle
inc
mov
sbb
lock
xchg
adc
jl
int3
js
(bad)
int3
in
ins
sar
add
test
mov
fwait
push
xor
mov
lods
outs
xor
pop
mul
add
jno
xchg
call
sbb
mov
shl
fistp
(bad)
mov
mov
add
push
inc
mov
push
xor
adc
(bad)
aaa
mul
addr16
xor
xadd
adc
xchg
test
adc
(bad)
test
push
jle
cs
add
pop
push
call
test
push
fadd
pop
add
stc
xor
inc
cli
iret
lds
stos
enter
scas
das
or
aam
cmp
mov
mov
retf
call
sbb
es
xor
or
psrlq
daa
inc
jmp
add
les
cmp
fisubr
in
mov
movs
mov
mov
movs
das
fst
pushf
int3
fwait
lahf
xchg
je
cmp
push
pusha
cs
imul
lea
js
les
sub
add
(bad)
(bad)
inc
push
addr16
mov
push
rcr
icebp
fdivr
outs
jnp
adc
icebp
gs
xchg
jmp
test
cmp
inc
pop
mov
jge
retf
xchg
fdiv
ins
les
xchg
pop
sbb
dec
sbb
das
mov
stc
jae
movs
fst
sub
fdivr
out
add
pop
jg
pop
retf
bound
out
mov
mov
cwde
xor
rcl
dec
push
jno
push
jl
and
lods
mov
stos
jo
push
std
mov
adc
test
cli
mov
adc
and
fstp
loop
shl
lods
pop
daa
nop
mov
mov
loope
movs
and
and
in
iret
lock
xor
mov
adc
imul
sti
pop
lods
pop
imul
ds
pop
ficomp
adc
pop
(bad)
jb
jnp
icebp
push
jge
inc
add
inc
inc
sbb
call
add
rcr
popf
(bad)
or
icebp
scas
shl
es
pop
aam
mov
repnz
or
xchg
scas
aad
jp
adc
sbb
pusha
or
ins
push
mov
jns
outs
hlt
repz
ror
mov
loopne
cmp
xchg
push
adc
lds
sub
mov
rol
add
cmp
xlat
aad
cmps
jl
(bad)
aas
inc
xor
data16
mov
xchg
push
jae
sub
push
cld
mov
mov
xchg
sub
mov
mov
sub
and
jmp
dec
scas
push
xor
pop
xchg
in
and
call
cld
push
mov
xor
imul
mov
jae
adc
out
pop
arpl
loope
mov
inc
jg
add
and
pusha
xor
inc
pop
ss
std
pop
add
aaa
out
inc
stos
sbb
(bad)
jmp
int
xchg
mov
enter
vminps
pushf
clc
dec
xlat
xor
inc
xchg
movs
cmps
sub
bound
and
loop
jb
jns
popf
add
rcr
hlt
imul
rcr
(bad)
cmp
int
xchg
xchg
nop
xchg
cmps
lds
outs
jno
mov
mov
sbb
jp
stos
pusha
rcr
push
scas
sub
cli
add
pop
std
out
sbb
jmp
fmul
pop
and
jnp
mov
pusha
popa
mov
test
sub
js
mov
mov
in
mov
push
xchg
call
aaa
adc
jo
push
aaa
cmps
xchg
test
jl
ss
pop
jg
push
je
xchg
fs
(bad)
clc
(bad)
mov
in
pop
leave
aas
cmps
ds
jg
mov
imul
add
mov
inc
hlt
add
pusha
mov
fidiv
dec
repnz
mov
or
pop
ss
inc
ins
pop
dec
fs
push
sahf
mov
adc
pop
xchg
add
sbb
sbb
sub
add
leave
imul
jmp
bound
loop
xchg
je
mov
cld
mov
sub
xchg
mov
bound
test
adc
mov
cmp
mov
bound
xor
jmp
dec
xor
mov
cmp
cmp
fcomp
mov
(bad)
adc
pop
push
mov
jb
pop
inc
adc
div
cmp
xchg
fnsave
xchg
fisttp
sub
jmp
cld
(bad)
jge
xchg
movs
xchg
mov
(bad)
mov
cmp
and
popf
mov
sbb
aad
stos
xor
pop
test
sub
mov
cmp
iret
shl
inc
bound
inc
add
jg
adc
cmp
push
dec
pop
xchg
pop
jp
nop
cmp
inc
sub
push
sbb
cmp
mov
inc
jmp
cld
sub
xchg
jmp
add
imul
shl
cmp
shl
bound
mov
test
jge
pushf
std
or
mov
push
jg
and
out
test
push
pop
ror
ss
inc
shl
das
js
das
pop
retf
cmp
mov
pushf
test
shl
test
add
adc
nop
xchg
push
mov
cli
mov
cmp
inc
jne
jne
int
mov
cmc
add
repnz
sbb
mov
aad
adc
inc
xchg
in
mov
push
push
(bad)
xor
push
or
cld
add
xor
xlat
test
jle
cli
adc
push
movs
pop
int3
into
sbb
push
adc
add
or
cmps
scas
jns
adc
aas
pop
lahf
adc
(bad)
xchg
ret
divps
jmp
mov
sub
arpl
and
xchg
jmp
(bad)
in
repnz
pop
sbb
cdq
dec
mov
jae
imul
dec
dec
and
pop
lds
test
xor
inc
mov
jmp
xchg
dec
push
and
out
or
xchg
xchg
dec
imul
push
sbb
je
stos
pushf
pop
ret
pop
pop
add
loopne
xchg
sbb
aam
xchg
cwde
sub
pop
jno
and
xchg
cmps
retf
nop
dec
pop
imul
pop
add
imul
jb
rcr
aaa
jmp
lea
sbb
dec
dec
outs
xchg
mov
pushf
aas
idiv
mov
pushf
pop
or
imul
cwde
fsubr
test
jmp
(bad)
pop
add
dec
jbe
loope
retf
jp
aaa
sbb
shr
ret
icebp
popa
int3
inc
pop
(bad)
mov
gs
popa
or
push
js
movs
mov
pop
xor
jnp
sub
jp
push
cli
or
mov
sub
enter
pop
inc
stos
dec
push
push
cmp
pop
mov
loope
or
jo
xchg
aad
jp
jl
push
out
aad
ds
push
cmp
mov
cmps
pop
push
fs
(bad)
in
mov
ss
and
shl
pop
movs
shr
jmp
dec
dec
mov
push
js
iret
fs
and
jo
popf
mov
lahf
add
jbe
bound
stc
in
lea
inc
push
xchg
mov
stos
adc
and
jl
and
xchg
call
jmp
daa
or
cs
sti
fwait
clc
jge
jecxz
jp
inc
cmp
adc
rol
mov
data16
xchg
call
cdq
mov
in
jb
xor
inc
js
jp
imul
add
call
inc
sbb
imul
add
lock
and
adc
xor
addr16
hlt
shl
dec
jno
loope
scas
pop
lahf
jb
pop
mov
xchg
or
shr
lock
pop
jno
jb
je
pusha
jl
mov
test
ror
mov
mov
jbe
fdivr
lods
int
mov
xor
xor
rcl
loop
(bad)
daa
fs
jno
inc
ins
cmp
jne
mov
jae
jns
cld
mov
scas
mov
lea
mov
jle
fdivr
cmp
sbb
sbb
imul
(bad)
shr
adc
fwait
xor
jbe
jg
push
mov
cmps
ins
sti
fdivr
sub
add
add
sbb
mov
cli
mov
or
xchg
sbb
movs
fwait
shl
inc
les
movs
mov
mov
pop
daa
xchg
int3
repz
cmp
scas
cmp
mov
(bad)
stc
out
neg
in
push
test
inc
mov
cmp
sahf
jne
and
bsr
rcl
sub
mov
dec
jmp
imul
or
dec
jge
sbb
mov
test
imul
mov
mov
dec
xchg
xchg
inc
and
jp
(bad)
jg
push
jp
imul
ja
inc
fisubr
ins
fisubr
in
loope
stos
or
iret
and
pusha
dec
pop
imul
gs
cmp
(bad)
cmp
test
imul
jg
xchg
ret
xchg
(bad)
mov
bsf
mov
jecxz
adc
add
cmp
or
inc
inc
push
dec
push
cmp
mov
add
jne
push
dec
mov
dec
mov
movs
stos
cmp
jp
mov
jmp
adc
(bad)
call
cmc
imul
dec
hlt
cli
add
xor
dec
std
(bad)
daa
xchg
pusha
adc
loop
ret
jbe
stos
lods
sub
lahf
push
movs
shl
inc
mov
lods
mov
lods
fmul
out
xor
dec
inc
inc
xor
xor
xchg
pop
pop
cli
inc
push
add
push
push
out
push
sbb
loop
enter
sub
sbb
mov
dec
add
(bad)
into
mov
in
adc
fsubr
ficom
sbb
sub
aam
push
pop
mov
or
mov
dec
in
std
xor
fld
fld
dec
push
ins
jmp
xchg
icebp
aam
fwait
leave
mov
cmp
xor
outs
xor
arpl
xor
dec
ds
das
and
cs
mov
jle
ins
sbb
xor
sub
aad
popa
fwait
mov
sub
push
lods
imul
sub
dec
adc
cld
or
dec
outs
repnz
add
dec
shl
cwde
neg
pop
int3
ins
stos
push
adc
and
test
pop
sub
ror
sbb
(bad)
stc
fucom
pop
mov
or
daa
scas
xchg
mov
fisttp
leave
jo
sar
mov
lock
jns
scas
hlt
dec
retf
push
std
ror
test
xchg
xchg
xor
xor
cmp
cli
dec
adc
mov
jne
xchg
sbb
push
(bad)
xchg
mov
sub
clc
jne
xchg
jns
inc
xlat
(bad)
loopne
xchg
aaa
add
call
adc
hlt
add
or
jmp
mov
ret
xchg
aaa
fdivr
sbb
mov
inc
sub
inc
push
fdiv
and
xor
add
mov
jo
dec
sub
or
push
ret
pop
push
mov
add
test
sar
pop
in
ret
xor
jp
(bad)
xchg
xor
inc
ret
adc
xchg
push
mov
(bad)
int3
sub
out
mov
mov
and
cmp
cmp
imul
inc
cmps
loopne
out
iret
and
movs
cmp
push
fs
xor
jns
mov
xor
adc
inc
mov
out
fcmovne
test
sahf
pop
outs
mov
out
jmp
mov
sbb
inc
test
mov
mov
loope
inc
lea
scas
mov
in
ror
or
jmp
xchg
xor
or
push
sti
fidiv
add
adc
ret
fwait
aaa
sbb
and
fist
fs
mov
mov
stos
or
es
in
cmp
xchg
in
sub
jno
leave
pusha
xchg
es
and
mov
movs
cmp
mov
pop
in
in
dec
daa
fimul
add
test
dec
or
cmp
pop
call
sub
xor
je
fisubr
mov
in
or
mov
jg
jne
pop
jb
xor
scas
hlt
xchg
out
xchg
mov
sahf
inc
jp
jge
(bad)
aad
rcr
inc
pusha
sbb
test
pop
les
popf
adc
push
xchg
sub
xor
cld
into
std
cmp
sub
fs
sub
push
dec
fs
fucomi
mov
je
push
or
jbe
hlt
lock
pop
outs
ror
sbb
out
xchg
xchg
pop
fcomp
fucomp
sbb
and
outs
in
jo
stc
inc
cmp
cs
xor
into
clc
sbb
sti
out
cld
jle
test
dec
add
mov
mov
xchg
pop
ins
ret
fisub
add
sub
das
pusha
xchg
bound
(bad)
hlt
in
xchg
rcl
mov
clc
inc
or
mov
lock
retf
dec
or
(bad)
pusha
dec
mov
out
inc
mov
mov
sub
repz
and
ins
adc
popa
mov
es
lea
sub
jmp
jp
dec
mov
inc
retf
xchg
mov
rol
xchg
gs
jp
jmp
into
jmp
(bad)
mov
cs
mov
aad
or
xchg
sahf
add
imul
inc
pushf
xor
jo
sahf
sbb
xchg
mov
out
push
jmp
scas
(bad)
(bad)
aam
mov
jnp
shl
and
mov
dec
xchg
inc
xor
(bad)
fcom
in
ror
inc
mov
mov
dec
(bad)
das
cwde
adc
aas
clc
sahf
mov
or
adc
adc
and
not
in
sub
push
out
mov
xchg
test
jne
out
push
mov
xlat
into
not
sti
jns
sbb
pop
icebp
ret
js
test
xchg
jmp
mov
das
jge
imul
dec
push
xchg
(bad)
pop
mov
aad
(bad)
jmp
clc
ja
sub
cs
and
lods
inc
(bad)
nop
push
sbb
and
es
xchg
aas
or
jp
and
aas
call
mov
xchg
sub
test
adc
fwait
jb
push
jae
mov
(bad)
adc
neg
or
mov
xchg
xchg
add
xor
and
and
imul
mov
cdq
or
lock
mov
add
ss
xchg
xchg
pop
mov
jne
or
mov
fcomi
loope
out
call
push
mov
fs
(bad)
jge
xchg
mov
jp
xor
leave
psubw
sub
dec
or
mov
pop
shl
stos
mov
push
mov
ins
xor
pop
out
mov
stos
mov
sbb
xor
daa
clc
mov
cmp
stos
sbb
cmc
das
jne
shl
lock
fcomp
ficom
sbb
hlt
cmp
adc
sbb
movs
sar
subps
popf
push
cmp
std
adc
xchg
sahf
loope
mov
mov
inc
or
push
sbb
push
adc
push
lock
pop
jae
jle
pop
jl
scas
push
or
and
in
ds
jp
iret
xor
jge
dec
pushf
xor
or
jno
outs
sub
pusha
mov
xchg
xor
pop
(bad)
out
sar
jno
jno
xor
cmp
cmp
mov
inc
jp
pushf
cmps
fnsave
inc
mov
mov
jo
xchg
iret
dec
xlat
jns
xchg
or
jb
out
pop
out
inc
hlt
and
aas
daa
xchg
aam
or
int3
cmps
xchg
jecxz
in
and
nop
jg
sub
xchg
(bad)
call
ror
in
xchg
(bad)
jmp
jo
imul
cmp
movs
inc
ss
cmp
jp
dec
dec
inc
inc
dec
mov
adc
cdq
loopne
dec
clc
xchg
pop
fwait
out
adc
gs
xchg
or
pop
mov
inc
cmp
lahf
lahf
clc
inc
jge
int
stos
jo
mov
xchg
nop
or
imul
inc
aam
adc
outs
mov
jae
and
add
jp
cmp
stos
jle
mul
hlt
aas
push
out
push
or
add
rol
cmp
loope
ret
sbb
add
jo
int3
sub
std
in
xchg
ss
pop
inc
sbb
xchg
mov
test
aas
inc
(bad)
aas
jbe
fdivr
push
adc
cdq
and
into
out
sbb
mov
cmp
push
add
pop
add
ja
outs
dec
in
neg
int3
mov
mov
mov
xchg
loop
icebp
sbb
jo
mov
nop
fisub
fidivr
mov
cmp
in
jge
mov
pushf
mov
dec
jecxz
xchg
adc
out
mov
and
jmp
inc
dec
mov
or
lds
push
nop
or
and
sbb
leave
cli
adc
mov
mov
shr
mov
push
jmp
mov
shl
mov
mov
into
test
outs
sar
jmp
addr16
or
enter
or
jo
jecxz
cmp
mov
xor
fucomi
cmp
cld
cmp
or
mov
sub
xlat
movs
mov
inc
loopne
pushf
cmp
inc
add
arpl
and
retf
gs
imul
xor
loop
jmp
das
xchg
stos
movs
(bad)
imul
add
lods
(bad)
pop
repnz
cmp
dec
sub
adc
(bad)
cld
stos
shl
jbe
inc
icebp
mov
mov
enterw
lods
int3
xor
push
mov
inc
lds
jg
bound
sti
mov
xchg
pop
loopne
mov
out
leave
xor
pop
call
adc
movs
xchg
into
dec
fdiv
sub
add
xchg
sub
jnp
sub
int
out
das
test
rcr
or
fwait
jl
stos
je
inc
push
sbb
repz
movs
dec
adc
mov
or
jg
push
cmp
fnstcw
pop
dec
or
mov
pop
push
mov
aas
or
fcomp
mov
(bad)
lock
mov
pop
ss
inc
cmps
int
and
xor
sbb
ss
ins
fisub
pop
sub
or
dec
or
push
inc
ret
mov
fs
push
xchg
cmp
stc
and
rcl
jmp
push
fcom
add
adc
fisubr
sti
out
add
js
lock
pop
shl
jmp
ret
dec
shl
test
mov
pop
adc
nop
dec
and
adc
push
f2xm1
stos
mov
add
mov
sbb
loope
xchg
mov
sbb
jle
cli
pop
xchg
ror
xchg
pop
inc
xor
hlt
arpl
cdq
push
inc
jge
(bad)
pop
icebp
mov
adc
push
imul
jp
and
enter
pop
add
arpl
cmp
imul
adc
xor
aad
jno
cmp
fs
fs
jge
test
lea
sub
es
es
mov
cwde
lods
jne
mov
adc
jmp
inc
cmp
inc
lock
jmp
and
js
pushf
sub
sbb
dec
adc
cmp
mov
arpl
call
shr
data16
ds
lahf
(bad)
fidiv
shl
push
xlat
rcl
jns
xchg
out
js
lock
cmps
or
dec
js
push
cmp
(bad)
jae
mov
ins
push
pop
mov
mov
pop
jae
mov
call
jns
push
sub
xchg
fisub
pop
retf
add
or
pushf
std
in
sbb
sar
and
gs
or
sbb
sub
xchg
stos
sbb
cmps
cwde
sbb
scas
scas
mov
sub
and
ds
push
sub
inc
mov
fbstp
int3
and
(bad)
outs
inc
pop
sub
pushf
pop
movs
jno
mov
clc
dec
inc
outs
mov
mov
clc
movs
das
xchg
xor
adc
sub
pop
jb
dec
stos
call
js
cmp
ret
add
adc
imul
adc
dec
(bad)
mov
inc
xchg
or
aad
(bad)
cmps
xchg
ror
jmp
cmp
inc
mov
ja
cmp
fldcw
hlt
xchg
push
push
push
sbb
cmp
int
out
or
scas
push
adc
repz
clc
popa
into
loopne
or
hlt
jmp
inc
addr16
pop
mov
push
or
out
lea
popa
mov
mov
xchg
jg
or
movs
xor
adc
pop
xchg
retf
or
mov
movs
cmps
jmp
fld
xor
sar
mov
jnp
shl
pop
out
xchg
add
add
popf
add
and
int3
or
push
inc
hlt
ss
stos
dec
dec
dec
iret
mov
aas
hlt
adc
push
int3
jb
sti
jns
iret
push
dec
rcl
sub
jo
das
jmp
shl
popf
adc
pop
and
loope
jne
pop
lock
(bad)
or
dec
dec
sbb
mov
loop
inc
cs
fs
xor
adc
mov
mov
or
jae
push
inc
or
cmp
aaa
stos
(bad)
sar
movs
les
adc
hlt
ds
inc
cld
fistp
mov
mov
icebp
xor
xchg
push
jns
jle
cmp
sbb
xchg
popa
pop
scas
stc
jnp
call
stos
inc
push
dec
ret
loope
stc
(bad)
jle
std
mov
jl
inc
(bad)
stos
xchg
jb
lds
imul
or
fld
mov
mov
mov
fsub
jnp
xchg
ja
(bad)
adc
lods
test
mov
jmp
mov
leave
mov
adc
out
ret
stc
xchg
lods
dec
push
push
out
and
xchg
or
mov
popa
xor
jns
in
or
jb
nop
aad
repnz
jnp
ficomp
mov
gs
pop
mov
pushf
in
dec
or
mov
jmp
out
popf
in
inc
in
jg
add
std
sub
mov
jle
clc
es
jl
mov
mov
pop
lods
fisubr
bound
in
dec
daa
enter
lods
bound
mov
jg
or
xchg
and
rcr
pop
call
ror
fsubr
push
lock
cwde
mov
sub
push
les
out
xchg
mov
fs
jns
(bad)
and
pop
stc
imul
(bad)
jo
dec
push
retf
jmp
add
inc
je
mov
sbb
fcomp
pop
sbb
dec
fst
xor
frstor
sbb
mov
arpl
test
add
adc
adc
mov
lahf
inc
aaa
sbb
cmp
inc
sahf
dec
or
daa
mov
retf
pop
cmp
inc
imul
stos
or
mov
and
call
add
mov
daa
cmova
movs
jle
stc
or
cmp
add
test
sub
cld
sbb
sbb
and
ja
dec
(bad)
lods
mov
arpl
pop
dec
clc
push
fmul
into
add
mov
(bad)
xchg
sbb
and
add
repz
adc
mov
mov
loop
push
jo
scas
push
sub
mov
ret
add
ficomp
imul
pusha
movs
push
clc
fcom
and
adc
fisub
ja
scas
into
xchg
jnp
cmc
ret
retf
xlat
cmp
sub
ret
sub
dec
dec
xchg
loopne
ficomp
adc
cmp
inc
pop
scas
adc
rcl
arpl
retf
lds
je
push
mov
call
test
xor
out
cwde
scas
repz
mov
inc
in
jno
fild
(bad)
in
mov
shl
out
aaa
adc
loope
xor
js
pop
adc
lds
loopne
fwait
push
sub
xor
mov
stos
xchg
mov
mov
xor
inc
xchg
sub
mov
imul
push
mov
ret
shr
cld
xchg
es
rol
xchg
(bad)
rol
push
pop
jne
sub
jmp
lock
iret
xchg
adc
cld
sbb
ja
pop
inc
inc
hlt
mov
repz
xchg
xchg
dec
fnstcw
shl
push
and
sub
jecxz
add
and
mov
bound
ss
and
ins
adc
xor
adc
sub
xor
pop
imul
ins
lock
in
xor
fs
aas
push
adc
(bad)
fcmovne
aas
sbb
sar
cmp
fcom
sbb
in
loope
xchg
daa
cmp
in
push
sub
mov
xchg
and
dec
fldenv
iret
not
(bad)
leave
stc
xor
scas
add
sub
xor
pop
pop
cmove
(bad)
push
ins
movs
mov
sub
xchg
(bad)
pop
js
cmps
(bad)
mov
add
jl
ins
xchg
jg
aaa
add
dec
jecxz
jp
pop
xchg
fs
cmp
dec
sbb
and
add
or
aas
data16
cwde
jg
pop
dec
adc
pop
xchg
jb
(bad)
dec
mov
sub
xor
or
push
pushf
lea
push
cs
fwait
not
adc
jns
cmp
fwait
lds
and
and
shl
dec
(bad)
jmp
das
cmp
fimul
aam
sbb
lods
jmp
cwde
or
push
fcom
push
jle
xor
add
imul
fcom
lods
repnz
neg
adc
mov
ins
dec
mov
inc
ja
inc
push
add
jno
jecxz
iret
mov
xchg
imul
sbb
ja
mov
mov
pop
bound
into
jl
jbe
loope
fmul
arpl
dec
push
pop
jb
call
ss
jge
and
pop
mov
cmp
inc
and
icebp
fisub
cmp
lods
push
jcxz
mov
ins
xchg
icebp
xor
pusha
retf
aad
and
in
clc
mov
outs
inc
lahf
mov
and
jg
lahf
retf
cmovg
outs
jp
cmps
(bad)
lods
idiv
pop
loop
adc
outs
jmp
lods
xor
cs
add
pop
icebp
clc
test
dec
ja
clc
stc
loopne
shl
jmp
sbb
(bad)
fistp
adc
sbb
mov
stos
pop
aas
adc
push
pop
idiv
fsubr
adc
mov
shr
fstp
(bad)
es
outs
ftst
jae
ja
outs
jo
mov
leave
(bad)
sub
ins
je
mov
lfs
jo
mov
dec
add
arpl
lock
sbb
xchg
scas
add
std
add
test
rcl
adc
jp
cmp
jl
ins
inc
jle
xor
xor
bound
mov
push
pop
sbb
ss
push
lods
stc
mov
inc
mul
cmps
and
(bad)
jnp
push
jmp
mov
pop
pop
pop
stos
inc
pop
movs
mov
mov
jp
mov
pop
push
fild
inc
gs
stc
repz
mov
ret
mov
loopne
push
mov
inc
imul
pop
jbe
sahf
hlt
movs
std
jl
inc
gs
jae
imul
xor
and
push
(bad)
ret
xchg
jle
shr
addr16
addr16
sub
adc
xchg
pop
pop
sbb
dec
scas
es
cmp
arpl
xlat
mov
push
jmp
sbb
clc
inc
lds
lea
push
cmp
jne
ror
xchg
mov
adc
int3
std
out
je
jle
bnd
sbb
test
add
sahf
dec
fwait
jl
adc
fsubr
add
xlat
not
in
mov
(bad)
cmp
popa
pop
cmps
rcl
sbb
leave
mov
cmc
xor
jmp
in
mov
sbb
imul
add
or
pop
inc
add
adc
rol
mov
push
div
dec
mov
cmps
lods
cmp
and
fwait
push
mov
imul
cmps
xlat
mov
add
pop
jp
loop
lods
es
jp
test
jle
adc
push
ror
lock
inc
into
js
aad
jmp
movs
gs
loope
jns
stc
(bad)
rcr
push
std
jnp
addr16
ja
in
arpl
mov
fldlg2
gs
aad
in
iret
cmc
fsub
std
loop
test
jns
fisubr
ret
xchg
dec
ss
mov
jecxz
(bad)
ins
or
lods
mov
mov
mov
cmp
dec
inc
push
cwde
jl
enter
mov
cmp
test
in
rcl
ret
ins
into
fucom
popa
not
add
outs
retf
movs
shr
int
aaa
push
imul
jp
pop
sbb
mov
and
test
dec
sub
xor
dec
(bad)
sub
outs
jle
rcl
out
jmp
adc
ret
mov
xchg
and
and
or
jl
fcom
dec
and
jge
outs
call
ins
xor
and
mov
dec
scas
dec
lods
mov
cmp
(bad)
mov
out
cmp
sbb
es
add
push
mov
dec
cmp
adc
push
(bad)
mov
cmp
pop
xchg
mov
xlat
test
mov
arpl
cs
inc
scas
push
dec
adc
(bad)
jmp
in
xchg
sub
stos
inc
out
(bad)
jge
dec
mov
ret
cli
out
dec
fiadd
adc
fadd
cmp
clc
(bad)
sti
xchg
cld
push
rcr
xchg
mov
rol
cmp
sti
mov
jmp
(bad)
jae
jp
jnp
push
or
push
in
or
mov
int
in
gs
and
jbe
rcl
jl
bound
jmp
mov
icebp
jo
add
call
mov
or
xor
es
fs
mov
fmul
stos
leave
dec
std
popf
mov
enter
sub
fldlg2
pusha
out
std
xor
fidivr
sbb
sub
stc
fsub
(bad)
xchg
repz
ins
or
sbb
lea
mov
int
sub
xlat
mov
dec
adc
test
xor
push
repnz
leave
add
int
(bad)
cli
adc
cmp
xchg
inc
push
jns
dec
pushf
loope
jl
call
xchg
inc
or
cmps
out
dec
jo
(bad)
shl
add
nop
out
fs
repnz
sub
jno
add
mov
and
aam
adc
fldcw
jb
cmc
jne
or
js
or
xor
imul
inc
ror
jae
and
hlt
lds
dec
pop
add
js
push
ss
cdq
xchg
retf
dec
popa
push
pop
ins
(bad)
and
lds
xor
pusha
dec
cmp
lock
nop
call
push
mov
pushf
cmp
rol
push
sub
je
push
jle
sbb
mov
lea
pop
cmps
mov
imul
push
fisttp
xor
ret
loope
jmp
pop
push
push
sar
out
cs
push
dec
clc
dec
lea
mov
test
jmp
fld
push
cmp
cmps
pop
mov
jno
mov
mov
test
and
enter
addr16
(bad)
rol
bound
aas
not
push
adc
cmc
pop
test
ret
hlt
mov
or
add
cli
lock
adc
and
lahf
and
push
and
pop
pop
dec
loop
add
xor
xor
aam
movs
(bad)
cmp
cmps
jg
loope
lea
in
mov
das
and
mov
in
into
cdq
jl
sets
popa
sbb
mov
adc
cmps
mov
pusha
pop
xchg
sbb
sub
in
lods
stos
jbe
not
fdiv
bound
inc
out
dec
mov
push
fisub
rcl
fst
jle
movs
adc
pop
cmp
int
or
xlat
test
dec
not
sub
jo
hlt
xor
fisub
adc
test
cmp
pop
out
imul
sbb
mov
inc
dec
and
add
sbb
xor
cmp
fcom
int3
cld
xchg
js
inc
xchg
out
out
inc
mov
js
(bad)
mov
das
sar
ror
test
stos
test
xor
and
(bad)
ror
pop
adc
push
(bad)
pop
or
cmp
jle
inc
xchg
fcomp
xchg
sub
out
ror
idiv
retf
push
cld
rcr
pop
int
xor
push
jb
pop
pushf
mov
mov
jae
in
outs
(bad)
mov
jo
aad
dec
ds
jbe
sub
dec
add
cmp
lahf
jg
mov
push
addr16
add
repz
loope
or
push
je
ins
sbb
movhps
xchg
clc
cmp
loop
xchg
xor
jbe
loopne
retf
shr
std
jnp
pop
sub
and
pop
fnstenv
cdq
inc
fistp
outs
fisttp
test
xor
adc
fimul
test
and
xor
out
ds
jle
sti
jge
cdq
popf
repz
imul
jne
popa
add
xor
shr
clc
icebp
pop
push
xlat
mov
sub
push
in
int3
(bad)
or
cmc
retf
mov
(bad)
sbb
dec
jns
bound
xchg
scas
xchg
dec
cmps
fcmovbe
ja
int
mov
xor
int
arpl
and
inc
hlt
push
popa
mov
lds
mov
mov
loop
addr16
loop
xchg
int
daa
dec
stos
scas
jmp
xor
inc
mov
rol
lea
cmp
add
pop
and
cmp
sub
cmp
jle
fdivr
in
adc
sub
bound
pop
xchg
jns
fwait
cld
dec
jnp
pop
ins
jo
push
fadd
rcr
and
ja
adc
fsubr
inc
xor
push
mov
aad
push
ins
mov
(bad)
iret
call
sub
fcomp
jnp
ret
xchg
jmp
in
xor
inc
xor
pop
mov
mov
mov
ins
clc
(bad)
pop
or
jecxz
movs
dec
dec
ins
inc
dec
mov
iret
lahf
push
cmp
inc
xor
jecxz
cld
lods
fnstcw
mov
xchg
(bad)
jae
jg
mov
test
xor
fist
adc
rol
jp
push
stc
js
scas
inc
push
(bad)
pop
cmc
sahf
test
pop
push
pop
(bad)
nop
adc
movs
jmp
ins
(bad)
in
aas
sub
out
mov
adc
inc
jne
test
sub
fs
ja
rol
push
test
icebp
popa
jecxz
bound
fwait
dec
movs
jno
cmps
fwait
inc
rcr
push
sub
loopne
sub
pop
pop
inc
cmps
sbb
not
jle
(bad)
push
lds
in
cmp
xchg
sti
and
ins
sbb
mov
lods
inc
shl
push
neg
mov
jae
inc
adc
dec
mov
or
pop
mov
daa
call
or
sub
or
retf
shr
and
out
cwde
fs
jbe
fsub
dec
fcom
xchg
test
aam
int3
rep
int3
and
mov
scas
pop
data16
fs
ret
iret
jae
aas
and
jl
ds
xchg
mov
fwait
and
out
imul
mov
push
push
push
mov
or
pop
mov
push
mov
lock
sahf
test
xor
test
daa
imul
or
ins
sub
push
push
push
and
and
retf
or
jne
and
stos
mov
arpl
xor
stos
cmps
mov
or
and
aam
xchg
fs
mov
sbb
popf
xor
inc
out
aam
fdiv
sahf
or
xor
pop
sbb
fild
mov
and
movs
and
loopne
mov
dec
jp
fwait
clc
mov
pop
out
loope
sbb
hlt
jle
cmp
sub
jnp
es
mov
popf
sub
ds
cmp
add
pop
nop
jae
push
mov
mov
add
lock
and
push
stos
test
or
mov
loop
sub
mov
dec
fs
add
and
loop
mov
rol
sub
into
sub
inc
loop
das
div
ja
add
test
test
(bad)
or
out
xchg
inc
neg
mov
sub
jno
mov
daa
mov
call
sub
mov
pop
cmovb
jns
push
in
pop
loop
lea
fsub
jbe
push
or
fcmovnbe
pop
cmp
sbb
add
into
lea
mov
stos
popa
cmp
jmp
and
cmp
lods
fsub
mov
sti
mov
inc
sar
push
or
aaa
mov
jnp
sar
(bad)
fild
ins
call
sahf
aaa
sbb
xchg
add
cld
ins
sahf
mov
sahf
mov
jmp
mov
mov
mul
lods
sbb
movs
loope
and
test
ins
mov
adc
xchg
pusha
mov
ss
mov
std
fld
lds
pusha
stos
(bad)
jmp
mov
xchg
outs
fisttp
pop
jmp
add
mov
and
stc
dec
xchg
sbb
mul
aam
fwait
scas
ret
mov
pop
dec
cmp
pushf
ja
test
aam
out
xor
sub
mov
jno
push
or
adc
xchg
popf
(bad)
mov
lods
push
xor
cdq
push
xchg
cli
sub
aam
xchg
push
add
stc
shl
in
dec
mov
call
push
mov
sti
int3
add
dec
stos
mov
or
jecxz
mov
dec
mov
mov
int3
jecxz
ret
call
(bad)
(bad)
xor
adc
mov
sti
push
jae
clc
adc
lea
in
and
cmp
push
test
out
xchg
xchg
es
push
push
fimul
cwde
push
sbb
or
nop
inc
mov
and
daa
mov
mov
jo
loope
xchg
add
adc
sti
mov
addr16
int3
pusha
sbb
mov
jae
ja
pop
movs
pop
cs
jo
jmp
mov
enter
mov
dec
je
and
mov
pop
outs
pushf
neg
call
into
retf
mov
sub
aad
test
bound
xor
push
fsub
scas
popf
fidiv
sub
push
enter
ins
or
or
cdq
fnstsw
and
rcl
test
sub
mov
aad
jl
shl
jnp
xor
xor
sbb
daa
lea
jl
xchg
stos
mov
in
mov
shl
imul
js
cmp
inc
xchg
push
push
ret
adc
add
pop
inc
(bad)
push
ins
(bad)
xchg
mov
add
lds
outs
f2xm1
and
fs
add
push
mov
jne
cdq
icebp
inc
adc
mov
call
add
repz
mov
push
imul
sbb
mov
or
mov
xchg
adc
mov
retf
pop
(bad)
push
shl
jae
add
pop
mov
es
or
arpl
(bad)
(bad)
stc
hlt
sbb
mov
out
imul
mov
push
das
sahf
jae
mov
pop
cwde
movs
pushf
out
sbb
push
popa
loopne
xchg
pop
jle
sub
cld
or
outs
mov
outs
jle
shl
lea
or
fucomi
jmp
xor
pop
aaa
mov
mov
mov
mov
sub
jb
cmp
fsub
imul
xor
xchg
retf
je
(bad)
mov
adc
out
xor
ins
add
sbb
imul
jb
mov
inc
dec
push
xchg
mov
and
pop
sub
jo
shl
int3
dec
repnz
inc
add
js
dec
stos
ja
push
aam
data16
icebp
dec
test
retf
pop
dec
call
rol
jp
and
in
mov
enter
xor
cmc
callw
jecxz
mov
enter
add
pop
mov
mov
xchg
sbb
lds
dec
je
in
cmp
jl
call
jno
or
mov
xor
das
jmp
or
xor
push
dec
mov
mov
lahf
dec
adc
mov
dec
rcr
mov
push
sbb
pmullw
repz
lahf
and
mov
stos
push
imul
xchg
in
and
sbb
imul
aam
repnz
add
mov
fimul
int3
push
or
mov
repnz
pop
(bad)
scas
add
xchg
mov
xchg
pusha
adc
test
inc
sub
mov
or
and
outs
imul
sub
push
mov
jo
sbb
mov
or
add
mov
cli
adc
cmp
ja
xor
cwde
scas
in
jae
inc
fstp
and
cld
addr16
fild
sub
and
sub
dec
ins
jge
and
dec
js
adc
test
and
pop
mov
shr
sub
ja
xchg
pop
xchg
jge
dec
add
arpl
ror
nop
jne
lea
jg
xchg
call
sbb
jmp
cmps
jge
(bad)
and
retf
cmps
retf
int3
retf
push
call
sbb
call
cmp
rol
push
(bad)
neg
xor
stos
jl
jmp
push
adc
fdiv
cmc
in
jg
mov
sub
cli
mov
inc
jle
mov
adc
cmp
adc
pop
mov
shl
mov
sbb
or
pop
cmp
add
pop
aam
mov
fdiv
cmp
mov
dec
in
sub
mov
hlt
shr
pop
pop
sub
in
xor
cld
in
mov
jae
adc
xor
jecxz
stc
stc
and
adc
adc
lea
sbb
retf
fidivr
popa
mov
sbb
pop
cli
mov
or
ret
call
ins
jg
xchg
sub
lahf
mov
ficomp
push
mov
xlat
push
(bad)
push
paddusw
retf
add
and
sub
cli
jg
out
ja
inc
fwait
retf
or
xor
fwait
out
cmp
jmp
mov
xlat
ins
jge
mov
pop
nop
fild
out
cld
or
sub
pusha
mov
out
jo
pop
aas
rcl
jp
addr16
mov
jb
mov
and
fwait
xchg
mov
add
sub
retf
stos
mov
dec
jo
out
imul
mov
mov
add
int3
jmp
outs
dec
aas
in
rol
mov
clc
mov
mov
push
arpl
push
jbe
(bad)
push
cmp
push
and
inc
cmp
aaa
out
movs
popa
xchg
xchg
pop
xlat
xor
cmp
fnstenv
int
pop
daa
int3
movs
je
mov
cdq
jmp
fnstenv
(bad)
fistp
jmp
push
adc
jge
xor
and
retf
inc
or
cmps
jg
jbe
iret
out
mov
or
or
mov
out
lock
and
pop
pop
pop
retf
call
test
xchg
das
mov
cmp
fucomi
mov
xor
inc
push
xor
retf
div
sub
mov
or
cmp
rcr
pop
dec
adc
dec
inc
out
ficomp
or
shr
jle
add
std
rol
mov
lods
lods
cld
mov
es
push
jns
sbb
inc
jecxz
mov
dec
jnp
bound
bnd
fcomp
jge
adc
(bad)
pop
in
mov
shl
mov
ret
inc
xor
push
cwde
loop
pop
aam
cmp
lods
(bad)
sub
cwde
jg
add
jne
(bad)
sahf
ss
(bad)
xchg
movs
cs
and
xlat
inc
shr
sahf
mov
mov
sub
retf
inc
dec
out
retf
xchg
(bad)
or
lods
stos
ret
js
cmp
mov
mov
mov
shr
sub
lock
pop
lock
dec
aaa
shr
pop
xor
iret
pusha
inc
or
sub
pop
ret
mov
les
mov
pop
xchg
and
add
pushf
imul
enter
(bad)
mov
sbb
jle
xor
(bad)
shl
fild
data16
mov
ins
fsubr
popa
es
ins
in
leave
pop
mov
sti
push
cmp
mov
mov
retf
and
into
das
arpl
adc
jo
rol
daa
xchg
in
sub
cmp
shr
inc
fimul
aad
pusha
inc
cli
cmp
sbb
test
icebp
loop
das
in
dec
data16
xor
xor
mov
in
int
jbe
mov
jae
jno
call
pushf
xchg
or
clc
ja
sar
addr16
mov
pop
jae
ret
lods
cwde
inc
xor
or
mov
ins
cs
mov
repz
loop
sub
pop
stc
mov
int
lock
mov
pushf
jae
mov
stos
jbe
aam
lds
dec
mov
ret
icebp
je
inc
inc
aad
pusha
shl
mov
div
inc
jbe
sub
cmps
ret
pusha
stos
inc
movs
dec
jg
xchg
pop
ss
rol
icebp
mov
pop
int
dec
data16
gs
xchg
aaa
mov
pop
lds
pop
or
fwait
mov
scas
or
add
inc
shr
icebp
jg
lock
movs
arpl
shl
cmc
push
nop
push
inc
mov
mov
in
xchg
inc
cwde
lock
out
repnz
pop
xor
add
jmp
dec
jmp
loope
ret
aas
mov
add
push
pop
aaa
or
add
jnp
ins
inc
add
mov
push
out
mov
sub
inc
mov
movs
sub
and
fld
mov
push
dec
xchg
or
ret
dec
cmp
xchg
sbb
(bad)
aam
mov
clc
rol
ja
cmp
mov
mov
inc
and
ss
int3
inc
mov
sub
ja
xor
(bad)
adc
mov
(bad)
cmp
in
xor
cmc
pop
sti
push
scas
inc
add
lahf
ins
adc
pop
arpl
test
inc
gs
enter
sbb
push
fstp
daa
sub
test
fs
rcr
(bad)
loope
fbld
or
xchg
ins
jbe
or
or
add
pop
xchg
ret
adc
jmp
xchg
pop
sbb
push
dec
pop
inc
pop
mov
enter
mov
out
add
mul
sbb
xchg
add
adc
das
and
inc
pusha
mov
sti
or
jne
push
push
push
adc
fisttp
mov
adc
xor
jp
lds
cli
mov
xor
test
jne
mov
test
dec
jle
jp
test
aad
add
dec
es
and
out
gs
mov
lds
mov
sbb
or
cwde
mov
xor
jno
out
add
movs
jp
mov
sahf
and
push
or
loop
adc
sbb
push
mov
xchg
test
aas
pop
jae
push
fadd
lds
jnp
cdq
sbb
xchg
adc
pop
jno
cmp
pop
cs
ret
push
adc
inc
test
arpl
and
ror
jl
jb
jb
pop
cmps
loope
add
push
inc
push
adc
mov
jp
or
inc
das
jne
icebp
mov
fsubr
fdiv
push
clc
or
adc
outs
cwde
sbb
and
mov
and
(bad)
sbb
nop
sbb
cli
inc
or
add
pop
inc
in
addr16
inc
push
pop
jae
and
dec
std
mov
fsub
int3
add
inc
mov
xor
mov
sub
movs
or
dec
mov
cmp
or
icebp
mov
or
mov
sub
jecxz
jmp
jmp
iret
adc
add
xor
(bad)
in
jns
adc
jg
stos
f2xm1
cmps
scas
(bad)
push
dec
jns
dec
shl
mov
je
pushf
iret
adc
shl
call
lods
push
mov
mov
cmp
jge
cmp
outs
sub
pusha
repnz
ficomp
vpacksswb
jno
xchg
push
dec
sar
mov
ret
xchg
xchg
js
sub
or
and
inc
push
and
aad
das
adc
inc
sahf
(bad)
fbstp
cmp
mov
ror
cs
sbb
loopne
int
mov
xchg
test
jnp
or
lods
cdq
add
pop
sbb
rcl
xor
inc
lods
xchg
sbb
fidivr
sub
(bad)
mov
pop
mov
movs
xlat
pop
add
mov
and
popa
jmp
sti
pop
add
aas
adc
cmp
sbb
out
retf
std
jl
enter
loop
push
nop
inc
movs
out
mov
or
popa
sahf
dec
adc
mov
sub
adc
shr
mov
sub
dec
push
daa
pop
adc
add
lods
gs
cmp
pop
fisubr
sbb
neg
cmp
ss
push
add
mov
and
mov
dec
xor
stos
cmp
jmp
jp
push
aas
rol
test
dec
dec
test
push
pop
sahf
mov
dec
mov
lea
retf
movs
(bad)
jo
jle
les
jmp
mov
sbb
sub
mov
ret
lds
mov
aad
arpl
add
ret
pop
push
call
adc
fdiv
leave
popf
sar
pop
push
jnp
or
sbb
fucomip
pop
mov
(bad)
into
outs
and
jno
jmp
fcomi
push
lea
pop
popf
push
cwde
sub
mov
mov
xchg
into
cmp
jne
aad
aaa
dec
int3
aad
fwait
add
xor
push
lock
inc
retf
cmp
sbb
loopne
mov
dec
jbe
call
rcr
mov
leave
inc
and
js
sahf
jecxz
mov
popa
push
add
pop
das
xchg
popf
or
inc
xor
or
pop
cmp
inc
xchg
aam
inc
mov
test
sahf
aam
mov
jge
cmp
and
mov
aaa
ins
cmp
mov
pop
xchg
pop
or
int
sub
inc
and
inc
and
dec
ins
push
fisub
jnp
add
adc
(bad)
fbld
or
adc
sahf
outs
or
adc
jecxz
loopne
mov
push
sub
inc
add
xchg
lods
cs
jns
(bad)
mov
sbb
rcl
pop
and
rcl
dec
movs
push
pop
inc
sti
mov
sbb
mov
hlt
cs
or
(bad)
shr
das
xchg
push
add
or
(bad)
mov
aaa
or
scas
mov
add
loop
xchg
xor
es
pop
into
dec
cwde
xchg
lahf
pop
out
je
neg
call
cli
(bad)
(bad)
xor
imul
je
out
push
dec
cmp
dec
test
jle
aam
adc
mov
xlat
sub
lds
ret
fcmovb
push
popf
in
(bad)
stos
jbe
sub
test
out
shr
and
dec
xchg
mov
lahf
repz
mov
mov
pop
and
lock
aam
dec
jge
cmp
test
in
das
mov
enter
add
xchg
sbb
(bad)
arpl
enter
push
enter
stos
jne
inc
sbb
lods
rcl
mov
in
sbb
push
movs
pusha
lahf
adc
mov
jp
pop
or
loop
out
call
shl
daa
aad
ror
pop
fmul
fimul
std
jnp
jmp
imul
push
sub
and
aam
cdq
rol
inc
mov
cdq
retf
scas
jecxz
imul
scas
cmc
sti
inc
std
adc
pop
jnp
in
mov
pop
pop
mov
test
fsubr
mov
inc
cmc
fld
xchg
call
or
jbe
in
xchg
pop
push
pop
xchg
fsubr
pop
scas
dec
xlat
mov
cld
and
cmp
pushf
mov
outs
shl
leave
out
or
icebp
test
test
sar
push
pop
and
cmps
sub
dec
push
dec
loop
(bad)
pop
jns
and
mov
jp
gs
or
fucom
jae
jnp
gs
pusha
push
jno
into
bound
sub
not
int3
(bad)
jmp
jle
dec
popa
in
ja
cli
mov
jae
loopne
pop
push
inc
dec
movs
repz
cli
(bad)
jg
pop
push
scas
je
mov
cli
push
sbb
add
inc
rol
repnz
(bad)
dec
(bad)
lea
je
jbe
pop
add
cli
mov
in
and
fdivr
and
out
or
stc
pushf
(bad)
outs
push
sub
mov
arpl
outs
xor
aas
sar
rcl
and
in
xchg
loop
iret
jns
int3
push
inc
xor
mov
mov
jne
or
test
stc
loop
fdecstp
pop
push
jle
jo
fs
mov
sbb
push
cmc
das
push
cmp
xor
(bad)
sbb
int
cs
mov
sbb
icebp
jnp
mov
cmc
push
dec
repnz
fist
test
das
stos
fcomp
(bad)
outs
inc
test
xchg
sub
mov
(bad)
jecxz
and
shl
push
jmp
dec
shl
test
gs
or
dec
lods
fcomp
lods
(bad)
cmc
pop
sti
jo
or
(bad)
jl
and
jae
paddd
sub
movs
loope
mov
not
fisub
dec
dec
shl
and
cld
cmp
xchg
sbb
pop
cs
retf
dec
add
shl
or
das
popf
cmp
daa
mov
xchg
cmp
call
lahf
and
push
adc
mov
sbb
addr16
jecxz
mov
pushf
mov
jbe
sub
shl
add
or
cdq
cwde
cmp
call
mul
mov
push
dec
pushf
hlt
jo
jmp
pop
into
scas
pop
(bad)
aam
xchg
mov
fwait
shl
mov
or
xchg
mov
pop
jae
into
repnz
(bad)
ins
xchg
add
pop
adc
shl
maxps
cli
and
test
xchg
and
cli
(bad)
or
cld
bnd
sahf
mov
aaa
mov
jl
sub
or
mov
jnp
repz
inc
mov
repz
pop
push
rcr
jmp
inc
loop
push
in
and
sub
(bad)
jge
out
arpl
xchg
xor
and
mov
xchg
xchg
push
clc
pop
mov
adc
inc
cli
push
fstp
inc
imul
mov
daa
outs
stos
inc
mov
in
test
fist
aam
xlat
in
and
xor
loop
cmc
sub
pop
sbb
ss
inc
xor
inc
fs
add
scas
fcos
(bad)
lock
adc
fninit
cmp
adc
mov
adc
sar
jecxz
pop
mov
mov
or
xor
or
int3
sub
push
ds
fidiv
jns
pop
mov
stos
dec
xchg
arpl
popf
dec
fdivr
repz
sbb
inc
clc
fmul
xchg
cmp
test
loop
mov
mov
xchg
fwait
out
repnz
dec
retf
push
ja
retf
stos
xor
dec
cmp
les
repnz
sub
pop
fdivr
call
add
mov
mov
mov
(bad)
scas
cmps
(bad)
jmp
add
dec
retf
pop
aam
cmc
push
jae
inc
int3
into
dec
fdiv
addr16
ds
xor
cmps
sbb
sbb
cmp
mov
add
cmp
loop
inc
jp
push
ja
mov
in
jmp
push
pushf
popf
push
sub
dec
dec
add
pop
cmp
xor
xlat
mov
aas
out
jmp
daa
cmp
inc
jge
fs
mov
mov
mov
mov
mov
aad
dec
out
sti
aas
mov
or
js
add
jbe
fwait
pop
adc
push
(bad)
pop
cld
mov
jo
and
xor
push
call
mov
mov
push
fs
(bad)
pop
add
jg
in
or
mov
ret
jp
push
dec
and
stos
dec
xor
xor
les
adc
rol
cmps
or
stos
sahf
scas
addr16
mov
sbb
mov
mov
push
ins
retf
jns
dec
mov
js
jne
adc
sahf
outs
inc
jnp
(bad)
jbe
dec
pop
push
outs
cmps
jbe
(bad)
and
shl
push
mov
or
stos
mov
jne
ja
mov
add
adc
cmp
sbb
add
or
push
leave
ficom
adc
jne
addr16
jnp
pop
mov
sar
test
cmp
lods
jmp
xchg
cmp
pop
loop
daa
fcom
movs
repz
enter
repz
inc
lds
xchg
dec
xchg
push
and
add
mov
mov
push
pop
movs
pop
(bad)
push
mov
or
inc
cdq
jno
pop
adc
das
test
add
adc
sub
push
push
and
pop
into
push
lock
in
out
in
xor
pop
movs
inc
mov
push
repz
mov
call
(bad)
xchg
cmps
leave
add
neg
dec
test
shl
dec
sub
ss
and
les
(bad)
bnd
inc
jmp
xchg
clc
cmovle
adc
add
scas
popf
cmps
inc
cwde
adc
jns
or
mov
mov
(bad)
arpl
and
shl
xor
in
ret
cdq
dec
jnp
inc
jns
add
lahf
cmp
fidivr
adc
mov
pop
fmul
jg
xor
sbb
icebp
addr16
clc
cdq
in
pop
pop
pop
daa
pop
or
mov
mov
ins
in
jmp
(bad)
pop
or
lahf
or
push
gs
clc
jl
ja
ins
cmps
inc
pop
sbb
xchg
shr
dec
push
inc
jno
es
call
mov
imul
xlat
ffreep
popa
jno
(bad)
jmp
mov
scas
loope
mov
or
inc
or
int
imul
inc
std
inc
lds
dec
lea
mov
xchg
jo
inc
mov
mov
clc
mov
aas
inc
fwait
or
gs
das
lods
mov
movs
add
scas
pop
mov
or
jl
and
push
and
out
mov
xchg
jno
call
lock
sahf
enter
arpl
mov
pop
add
gs
inc
or
mov
icebp
pop
out
jg
daa
fimul
cmp
ror
or
lahf
adc
mov
aam
xchg
mov
(bad)
push
jmp
bndstx
xchg
mov
mov
jle
std
push
test
inc
adc
cmp
mov
nop
mov
out
sbb
xor
jecxz
push
stos
popa
pop
jg
(bad)
push
lds
jns
repnz
outs
cmp
iret
jmp
mov
pop
jg
pop
jl
push
into
in
repz
cmp
out
push
in
rcl
lds
and
repnz
inc
fistp
and
mov
(bad)
out
sub
sub
dec
popf
(bad)
mov
fidivr
int3
or
fucomi
pop
mov
sbb
sub
shl
loopne
push
push
sub
xchg
sbb
xchg
jno
shl
stos
cmps
xor
pop
jnp
inc
idiv
test
scas
push
call
add
push
xor
add
test
leave
adc
ins
xor
cdq
dec
push
dec
xor
push
sub
pop
stos
(bad)
jo
xor
test
adc
sahf
call
fnstenv
jns
into
fwait
arpl
(bad)
in
push
repnz
jno
pop
mov
xchg
pop
add
xchg
sbb
cmp
nop
pop
out
ins
dec
jb
shl
jmp
mov
push
pop
fdivrp
cld
inc
jg
jb
cmp
mov
xchg
fmul
push
and
dec
dec
sbb
out
lea
in
js
arpl
push
jns
mov
int
or
cmp
movs
stos
push
out
mov
ret
push
xchg
push
ds
cmp
lds
leave
xor
ja
shr
mov
mov
imul
sbb
sbb
test
gs
aaa
iret
scas
xchg
scas
out
mov
loope
xor
fdiv
push
jge
retw
(bad)
fcomip
ffree
cld
sti
lods
xlat
cwde
mov
pop
les
ins
iret
mov
jnp
je
add
js
test
dec
aaa
ins
loop
push
mov
cdq
ret
jmp
in
loop
sbb
add
retf
neg
or
mov
pop
ret
sti
or
ins
sbb
jo
pop
add
jmp
inc
inc
dec
jmp
repnz
shr
jns
cld
out
(bad)
repz
add
mov
xor
test
push
mov
pop
push
add
bound
hlt
das
ds
or
mov
rol
lock
jge
jmp
lock
stos
mov
jle
addr16
mov
and
dec
add
cmp
lds
dec
cmp
xor
(bad)
fmul
inc
adc
cwde
sbb
int
test
aas
dec
mov
mov
jne
ror
ret
inc
inc
dec
hlt
jae
(bad)
xlat
je
jecxz
xor
sub
(bad)
clc
cmps
add
dec
outs
jge
or
and
push
dec
or
fdivr
jmp
popa
jmp
in
out
sti
and
lahf
mov
dec
(bad)
movs
mov
lods
outs
shl
stos
fs
outs
out
icebp
call
adc
mov
add
cmp
push
in
push
popa
adc
mov
ins
sub
jl
cs
cmp
mov
sbb
out
inc
hlt
leave
pushf
inc
and
loopne
repz
shl
int3
mov
cli
add
xchg
out
call
pop
inc
inc
sbb
lock
imul
mov
or
mov
xchg
ss
xchg
jecxz
mov
and
fsubr
jp
or
cld
cmp
xor
pop
dec
icebp
sar
lods
dec
and
mov
adc
movs
mov
sar
sahf
lahf
ret
call
mov
iret
inc
xor
outs
jg
sbb
ror
sub
sahf
or
cmps
and
mov
and
pop
enter
jl
dec
js
(bad)
and
stos
std
or
mov
inc
xor
sub
xlat
data16
mov
outs
sub
jnp
push
adc
out
retf
ror
mov
mov
xchg
ret
mov
out
imul
test
add
sbb
xor
inc
cli
and
icebp
cwde
ins
jne
add
or
cmp
pop
xor
out
mov
dec
push
(bad)
adc
or
push
push
inc
lahf
pop
push
aaa
mov
in
ds
jae
mov
movs
cs
rcl
lods
js
cmp
xor
jge
movs
out
icebp
mov
xchg
rcl
cmp
pop
or
cli
bnd
add
bound
add
sbb
fsubr
rcl
sub
into
jge
aas
inc
jg
dec
jg
push
mov
fwait
stos
dec
pusha
retf
adc
fild
cmp
push
sbb
ss
cmps
xor
push
inc
inc
gs
fistp
stos
pop
dec
xor
stos
sbb
jb
popf
dec
jmp
jno
xchg
push
jno
mov
fisttp
adc
mov
pop
push
cs
rcr
add
sub
lods
and
push
mov
stc
adc
lods
cmp
push
sbb
inc
jg
push
mov
adc
sbb
repnz
cmp
retf
mov
push
in
test
cmp
jp
push
dec
inc
mov
pop
mov
pop
add
and
test
or
mov
pop
jnp
sbb
test
mov
jmp
ret
popa
pop
inc
jmp
or
jmp
sub
and
dec
or
pop
pop
fdivr
push
repnz
or
jg
push
stc
into
pop
push
cvtpi2ps
mov
pusha
movs
stos
sti
mov
retf
mov
cli
push
shl
or
mov
fs
ds
loop
or
dec
cli
bound
dec
test
cmps
loope
js
rol
cdq
xor
pop
ret
jnp
sbb
into
add
inc
jmp
add
jmp
jns
daa
cld
jmp
pushf
mov
dec
in
ficom
or
pop
jbe
jp
cwde
push
out
lods
aaa
push
bswap
clc
jmp
sbb
sbb
dec
pop
mov
push
cmp
jns
sub
jle
cwde
xchg
xchg
push
lock
aam
(bad)
mov
and
pop
pop
test
fimul
sub
jmp
xchg
pop
rcr
inc
fcom
jb
mov
push
int
dec
jge
pop
cmp
mov
mov
das
mov
adc
into
sub
push
(bad)
call
mov
xor
paddb
outs
xchg
shl
loop
pusha
cmps
pushfw
inc
scas
and
aad
nop
cmp
hlt
leave
inc
jo
inc
leave
pop
push
inc
js
mov
fst
cwde
stc
cmc
push
cmp
out
nop
lea
push
ret
sahf
popf
leave
retf
push
mov
or
mov
adc
cdq
cdq
ins
push
cmc
adc
inc
cmp
scas
enter
das
add
fidivr
pusha
xchg
loop
ins
push
mov
mov
xchg
sub
adc
jae
mov
sub
icebp
and
mov
loope
pushf
(bad)
pop
xchg
retf
pop
cmp
je
jae
stos
pushf
cmp
movs
xchg
or
mov
adc
outs
mov
dec
neg
dec
xchg
inc
sbb
ss
adc
pop
scas
fs
sbb
jae
jb
or
(bad)
cmp
in
div
aad
mov
int
mov
or
lods
pusha
xchg
mov
cld
stos
xor
fimul
mov
pop
out
cmp
test
fs
jb
mov
stos
sbb
jp
(bad)
icebp
add
fist
jge
jl
fist
jp
and
mov
dec
mov
int
and
sahf
(bad)
adc
dec
push
call
icebp
pop
outs
stos
xor
cld
add
or
sub
lds
mov
imul
fidiv
sbb
push
pusha
dec
pusha
dec
(bad)
call
add
sub
sub
add
jmp
jle
shl
fld
mov
js
jb
xor
sbb
inc
inc
inc
and
sbb
(bad)
fist
retf
jl
sub
xlat
imul
push
popf
repnz
outs
mov
dec
xchg
jle
mov
ins
inc
mov
loopne
mov
and
mov
js
test
mov
mov
xor
mov
icebp
loopne
sub
dec
in
jo
or
adc
scas
pop
pop
dec
mov
mov
(bad)
jp
jp
pop
sub
hlt
adc
jbe
scas
es
adc
shr
popa
add
xor
sub
hlt
in
xchg
ja
and
cmps
dec
fisub
sub
into
aas
xchg
sub
dec
repnz
dec
cdq
xlat
not
and
movs
cmc
fstp
pop
scas
mov
jge
adc
sbb
jle
dec
ret
jmp
mov
in
cmc
push
jge
adc
stc
mov
inc
test
enter
pop
ins
cmps
stc
lods
pop
xchg
in
daa
add
clc
pop
(bad)
xchg
loop
(bad)
int3
(bad)
outs
cmc
pop
sub
pop
js
or
push
test
jl
aaa
sbb
cmps
jo
test
pop
mov
sbb
xor
mov
hlt
gs
test
jle
jae
cmps
adc
popf
retf
dec
cmps
cmp
(bad)
mov
mov
pop
ret
jne
xchg
sub
(bad)
xchg
lahf
popf
cmps
add
xchg
mov
clc
out
ins
inc
cmc
xor
jns
push
push
jmp
push
int3
and
nop
jecxz
(bad)
ins
sub
adc
popa
xor
lock
cli
ret
cmp
ds
inc
daa
mov
add
out
add
hlt
(bad)
clc
fwait
add
loope
std
rcr
mov
in
dec
dec
ucomiss
xor
mov
sahf
clc
imul
or
mov
out
xchg
mov
sub
push
mov
hlt
or
and
or
xlat
and
int3
pop
arpl
mov
mov
mov
jge
add
mov
mov
cmp
sbb
scas
lds
xor
lock
aam
jge
push
les
push
xor
(bad)
js
jb
cmps
imul
nop
div
sar
mov
(bad)
mov
lea
stos
dec
mov
xor
push
addr16
out
xor
xchg
out
gs
rcl
ret
cmp
arpl
in
adc
pop
aaa
ss
int
cmp
ror
dec
dec
into
dec
ja
test
aam
(bad)
cmp
sub
test
inc
or
cld
and
adc
ss
sub
ins
shl
or
jecxz
rcr
dec
and
jae
cmc
jg
mov
gs
push
lods
jb
push
leave
jge
cli
push
pusha
cs
push
(bad)
ret
inc
test
fadd
int
sub
add
push
adc
xchg
jl
push
out
adc
lea
out
jne
imul
sqrtps
in
jge
push
mov
arpl
cwde
loope
inc
mov
and
inc
cdq
xor
sti
cmp
jb
(bad)
fadd
out
pop
or
ret
pop
loope
mov
dec
add
pcmpeqb
add
cld
mov
sub
xor
xor
pop
mov
shl
mov
(bad)
loop
ins
jl
std
stos
stos
sub
(bad)
mov
test
add
sub
aaa
(bad)
jle
std
add
call
into
jns
int
inc
lods
pop
mov
and
mov
mov
add
(bad)
inc
mov
scas
push
mov
and
add
sbb
pop
inc
mov
retf
xchg
call
test
movs
rol
imul
int
xchg
stc
or
push
push
pop
(bad)
xor
jae
test
xor
std
out
mov
jp
jns
out
ja
adc
or
test
xlat
ret
push
sbb
sub
addr16
popa
sahf
fcomp
rcr
sbb
(bad)
dec
xlat
add
sub
xor
mov
cmp
xchg
popf
add
mov
lock
sbb
push
push
dec
or
(bad)
aas
dec
(bad)
pusha
ins
or
xchg
(bad)
shl
ss
mov
lock
cmp
push
pop
add
icebp
call
sahf
sbb
push
inc
gs
ret
(bad)
cmp
call
lods
icebp
test
cmc
fcmovnu
lods
mov
push
inc
(bad)
dec
sub
jbe
sub
clc
fwait
mov
ds
push
addr16
xor
cmps
pop
push
arpl
iret
retf
scas
adc
xchg
sbb
cmc
sub
xchg
in
jns
aad
add
shl
fisub
aam
lods
add
cli
pop
sbb
fistp
adc
pop
cwde
nop
out
jmp
xchg
stos
jne
sbb
or
dec
dec
and
adc
inc
lods
cmc
or
fldenv
inc
test
stc
icebp
enter
out
out
pop
ss
fcomi
jecxz
pop
push
hlt
mov
or
fidiv
pop
mov
movs
daa
ss
movs
pop
stc
jp
call
mov
add
je
and
cmps
cs
rcl
add
mov
sti
push
push
jns
mov
mov
stos
popf
test
es
xor
mov
push
loopne
das
lds
inc
push
imul
adc
out
loope
cdq
fist
loopne
xlat
icebp
div
or
mov
and
push
sbb
pop
push
adc
push
jp
mov
sub
pop
jp
mov
adc
test
pop
ja
retf
xchg
loop
(bad)
push
cmc
mov
pop
loopne
ja
in
loope
mov
gs
mov
add
lods
and
sub
fmul
push
mov
mov
mov
xchg
aaa
add
rol
xor
inc
dec
push
sbb
push
cmp
call
cmc
sti
sub
add
fimul
mov
clc
fdiv
mov
inc
leave
cli
test
fst
fs
nop
movs
test
push
xchg
pop
mov
xchg
imul
in
(bad)
xor
add
imul
jg
mov
and
xchg
loopne
das
cmp
sbb
jmp
jmp
aaa
out
pop
aad
add
lea
inc
and
xor
pop
sub
int3
pop
sbb
pusha
mov
scas
lock
jbe
pop
sbb
mov
mov
xor
scas
and
pusha
les
jmp
shr
push
pop
mov
cmc
cmps
ret
inc
das
mov
cmp
scas
or
push
popa
retf
test
pop
pusha
adc
cdq
jg
push
cmc
lock
gs
mov
push
sub
xchg
or
mov
or
and
loope
xor
mov
fdivp
inc
mov
cmp
mov
jnp
pushf
mov
sub
mov
ss
push
les
aaa
sbb
(bad)
push
call
cmp
test
(bad)
sub
ds
xchg
loope
outs
shl
test
sub
xchg
push
and
xchg
sub
pop
xor
xchg
jp
mov
neg
push
pop
clc
cmp
and
xchg
dec
and
stos
fild
jp
or
aad
push
mov
inc
cld
mov
stos
arpl
mov
daa
sbb
sub
inc
lds
fs
iret
adc
jmp
loopne
xlat
xor
ins
dec
mov
stos
pop
dec
sbb
(bad)
ret
mov
dec
in
lea
dec
aam
call
in
fimul
std
(bad)
mov
es
(bad)
xchg
js
adc
sbb
aas
ds
lock
neg
and
or
mov
cvtpi2ps
pop
dec
xchg
loop
adc
xchg
inc
aas
arpl
in
push
mov
pop
inc
aas
xchg
adc
pop
shr
mov
aas
movs
and
push
call
fcomi
les
out
dec
push
inc
dec
das
pop
test
push
int
cmp
mov
scas
xchg
mov
repz
xor
int3
jecxz
gs
bound
jl
sbb
add
xor
mov
test
mov
dec
(bad)
out
jne
cmp
setg
xchg
stos
retf
sti
sbb
stc
sub
mov
loope
nop
repnz
mov
int3
inc
int3
addr16
mov
adc
xor
inc
dec
mov
cld
(bad)
push
push
sub
(bad)
or
repz
pushf
add
cmps
push
pop
xor
(bad)
(bad)
sbb
push
mov
jge
and
and
inc
shl
arpl
jle
and
sub
shl
cmp
add
(bad)
xacquire
or
jl
lods
sbb
js
dec
leave
xchg
push
fchs
push
mov
adc
sub
cmp
fstp
enter
mov
or
jnp
repnz
push
or
popa
sbb
mov
or
sar
mov
aaa
pop
inc
rcl
and
mov
arpl
sbb
xchg
cli
add
retf
arpl
jg
mov
add
rol
imul
mov
mov
pop
cmps
push
fs
dec
cmc
pop
sbb
sub
clc
mov
sbb
sbb
(bad)
push
dec
dec
fstp
out
test
inc
sbb
jne
pop
cwde
ror
adc
in
cmp
inc
lea
xor
repnz
ffree
push
jb
sbb
xor
xchg
loope
jecxz
cmp
sub
and
adc
jmp
cmp
pop
addr16
popf
add
xor
retf
mov
shl
bound
push
inc
pop
cmp
test
jg
or
sar
sub
mov
pusha
dec
xchg
in
cs
cli
sub
cdq
mov
call
in
in
push
push
call
mov
and
repnz
mov
mov
push
and
enter
cmp
or
cmc
sbb
pop
call
and
pop
into
in
repnz
push
pop
dec
pop
mov
adc
cmp
mov
xchg
mov
add
fisttp
je
scas
jle
stc
test
and
test
mov
icebp
cmc
pop
cmp
outs
sub
popf
mov
aam
int3
jno
and
ret
xchg
cmps
or
mov
stos
int3
out
test
mov
fwait
jno
xchg
push
pop
or
xor
dec
xchg
popa
pushf
cmp
sbb
jb
mov
ret
mov
sbb
adc
xor
mov
movs
sti
out
adc
pop
es
(bad)
adc
les
or
(bad)
stc
add
clc
add
jl
mov
mov
jge
sub
test
inc
dec
jno
jmp
call
xor
shl
cmp
cmp
pop
ins
mov
daa
inc
sbb
mov
cmc
mov
cmp
or
jecxz
mov
xlat
repnz
cmp
xchg
inc
xchg
loop
dec
dec
jbe
and
push
pop
push
sahf
xchg
and
sub
jno
cdq
xor
mov
xchg
push
jle
sbb
mov
call
pop
dec
das
lahf
std
xchg
push
frstor
push
push
inc
jg
movs
popf
sahf
imul
mov
inc
xchg
jo
fcom
inc
xchg
jge
jno
shl
int3
jle
test
in
sbb
mov
push
(bad)
lock
add
test
jno
mov
cs
cmc
cmc
add
xchg
pop
push
movs
and
into
mov
ret
xchg
iret
cmps
outs
fst
movs
adc
popf
and
ja
or
or
push
les
mov
mov
jl
mov
xor
loopne
lods
fcomp
les
fild
mov
and
mov
repz
adc
sub
neg
test
mov
shl
lds
scas
mov
pop
cmp
(bad)
call
dec
jmp
xchg
mov
cld
es
and
xor
jb
cs
ins
pop
stos
movs
adc
aaa
and
sahf
sub
cs
rol
push
dec
add
(bad)
repz
cmps
into
(bad)
jecxz
cmps
gs
push
imul
outs
hlt
jl
cmp
sar
cdq
mov
and
cwde
sbb
stos
scas
fiadd
data16
ss
push
repnz
add
pop
sbb
push
push
xchg
pop
xor
in
add
sub
sbb
push
xchg
sub
pop
mov
xchg
add
dec
inc
hlt
jle
fisttp
mov
or
mov
add
adc
mov
mov
xchg
push
inc
(bad)
fistp
push
xor
ror
aaa
dec
test
pop
push
jb
hlt
xor
push
lock
and
mov
xchg
sub
aam
sub
lock
lahf
lea
or
cwde
mov
xor
(bad)
pop
sub
add
inc
mov
pop
inc
adc
mov
inc
push
out
les
sub
xor
icebp
push
xor
add
and
push
mov
imul
mov
(bad)
jmp
pop
push
mov
sar
xlat
fistp
sub
je
mov
jmp
lods
push
mov
imul
mov
xor
jae
lods
repnz
aam
(bad)
pop
stos
dec
aam
adc
popf
jne
test
ret
and
inc
popf
cdq
adc
push
ins
out
ds
or
ins
mov
sub
fsubr
popf
arpl
shl
xchg
jecxz
mov
and
add
cmp
cs
in
fsub
nop
iret
ins
repz
enter
aaa
mov
dec
loope
jge
fistp
adc
pop
pop
call
mov
adc
pop
mov
neg
(bad)
pop
icebp
xchg
mov
dec
sti
add
fisttp
dec
into
loopne
jb
mov
mov
inc
jne
jecxz
jne
ret
inc
shl
repnz
imul
mov
xor
sub
in
mov
or
retf
fsub
inc
mov
push
adc
out
das
inc
or
jp
cmp
sbb
jbe
and
fs
push
sbb
and
fwait
retf
or
xchg
xor
push
dec
or
fs
out
mov
mov
mov
and
lea
lods
mov
popa
cwde
mov
pop
test
popa
adc
int3
dec
call
or
sbb
push
cmp
mov
fistp
movs
adc
mov
cmps
pop
int3
jnp
call
sbb
inc
movs
repz
cdq
xchg
mov
int
stc
mov
in
ja
and
ror
cld
mov
ds
dec
fcmovnbe
daa
jns
mov
das
sbb
fldenv
mov
clc
test
pop
adc
loopne
xchg
xchg
jbe
jl
cwde
movs
push
sub
shl
rcl
lahf
loope
inc
jg
mov
test
jge
(bad)
jae
pop
jmp
adc
mov
out
mov
sub
popf
push
dec
jmp
and
por
scas
inc
pushf
mov
lahf
(bad)
out
xor
imul
in
jns
mov
mov
or
das
mov
movntq
xor
or
(bad)
(bad)
imul
inc
lods
xchg
ror
and
mov
xchg
cmp
xor
dec
cld
ret
aam
xor
adc
sbb
lds
imul
in
mov
and
mov
les
gs
push
loop
call
ret
shl
push
cmp
mov
mov
jnp
cmp
mov
movs
das
fisubr
sub
mov
xchg
sub
xor
sti
out
out
mov
pop
dec
pop
jecxz
xchg
mov
mov
pop
test
sub
mov
scas
push
stos
cmps
and
add
clc
(bad)
xchg
clc
out
std
or
int3
adc
inc
scas
pop
fisttp
cmp
arpl
mov
lods
pop
aam
xchg
popf
(bad)
in
xchg
test
call
cmps
retf
inc
lods
xchg
pop
or
inc
mov
jns
pop
iret
ds
scas
test
ins
fdiv
lods
add
xor
call
out
cmp
ret
mov
sub
add
cmps
sub
test
dec
add
cmps
or
cmp
test
int3
jmp
jl
jp
ror
mov
sub
add
dec
ins
scas
xchg
mov
lahf
push
fstp
xchg
sbb
mov
fild
das
arpl
ror
xor
jle
sub
adc
leave
lahf
adc
fisubr
cmp
sub
push
pop
pusha
stc
push
mov
push
xchg
push
loopne
adc
lahf
xlat
aas
aas
push
aam
add
mov
xchg
jns
das
(bad)
xchg
or
int
mov
loope
out
mul
jne
inc
push
dec
add
inc
mov
inc
fmul
jb
adc
mov
test
clc
test
test
adc
in
call
adc
ss
fldz
mov
ret
dec
sahf
pop
xchg
xchg
pop
mov
xor
pop
loope
call
mov
xor
lea
jmp
mov
xor
test
or
xchg
pushf
or
loope
xchg
hlt
mov
ficom
dec
jae
and
je
inc
sub
cmp
jne
js
mov
scas
and
mov
xor
scas
jecxz
test
pop
out
jmp
cmp
jmp
jmp
popf
pusha
push
pop
or
mov
sub
leave
fistp
call
cmps
adc
clc
fsubr
jns
mov
lods
fadd
lea
push
mov
pop
pusha
sbb
rcl
stos
mov
pop
inc
sub
lods
icebp
clc
loopne
aaa
in
into
xchg
jg
xchg
leave
(bad)
mov
shr
fwait
push
push
xchg
dec
mov
test
daa
inc
or
or
repz
loope
ja
mov
popf
mov
rol
sub
ret
mov
imul
mov
mov
(bad)
cmp
retf
pop
push
test
enter
sbb
jb
shr
lock
jno
movs
and
jecxz
jmp
cwde
cmp
outs
in
call
jmp
js
push
addr16
into
mov
inc
icebp
jns
call
pop
xchg
mov
adc
jne
and
ret
sub
push
cld
mov
add
xchg
adc
xor
push
test
loope
lock
add
push
fdivrp
push
jmp
xchg
es
dec
sub
cmp
sbb
inc
push
pushw
dec
fsubr
sbb
mov
and
cmp
out
ja
push
and
sbb
scas
jb
sbb
outs
cmp
mov
stc
jb
test
push
sbb
and
imul
arpl
or
lea
addr16
mov
test
repnz
pop
mov
push
sbb
cli
enter
cmp
arpl
arpl
push
stos
fist
xor
in
and
das
or
push
les
in
es
es
adc
xor
pop
iret
test
pop
push
cli
mov
mov
cmp
xor
push
in
jecxz
fsub
jl
jne
xchg
rcr
outs
push
add
xor
mov
nop
inc
fsubr
or
dec
xor
out
xchg
pop
les
jae
cmp
xchg
out
cmp
stc
xchg
mov
adc
inc
cmp
add
int3
mov
jle
mov
cmc
shl
iret
movs
inc
(bad)
call
dec
stc
sar
mov
ja
pushf
xor
lods
into
aas
into
add
xchg
mov
xchg
clc
inc
pusha
test
and
add
cmps
xchg
loope
push
mov
pop
scas
add
(bad)
sub
xor
lds
gs
cmps
pop
dec
mov
inc
or
and
mov
push
rcl
and
push
outs
cwde
add
(bad)
in
mov
cmp
fnsave
aaa
shl
pop
xchg
retf
sbb
dec
fcomi
sbb
pop
(bad)
and
mov
push
shl
and
ffreep
ins
or
or
and
xchg
aas
scas
pop
rol
mov
inc
xchg
ret
aad
lock
xor
add
scas
or
pop
outs
sub
cmp
or
inc
inc
inc
jmp
test
fs
repnz
(bad)
aaa
lods
xchg
clc
pop
mov
out
ja
(bad)
enter
sub
pop
mov
dec
shl
cmp
dec
adc
fisubr
pop
enter
inc
mov
sbb
fbld
mov
jecxz
loopne
or
bound
mov
add
cmp
or
(bad)
mov
lods
inc
dec
shr
cli
push
and
movs
ins
sahf
push
add
xchg
mov
pop
or
or
lahf
arpl
das
loop
mov
fcomp
mov
cmp
pop
inc
jmp
fstp
ja
or
int3
in
cmc
adc
idiv
inc
jecxz
shl
sub
js
popf
out
cli
sub
xchg
mov
sti
bound
movs
mov
sbb
or
pop
ja
cmc
jp
neg
mov
mov
pop
mov
movs
dec
and
jge
ds
(bad)
std
lock
movs
icebp
int
mov
jmp
jbe
hlt
mov
mov
and
sbb
sahf
dec
mov
scas
mov
retf
cdq
and
push
xchg
rcl
inc
dec
add
inc
gs
pop
lea
out
xlat
retf
mov
or
pop
shr
sub
add
js
int3
lea
js
add
mov
mov
and
sub
push
inc
inc
xchg
iret
hlt
adc
loop
ds
pop
sub
mov
sahf
sbb
adc
pop
pushw
ins
mov
fadd
sar
mov
adc
retf
imul
mov
jle
sub
cld
xor
sbb
add
sub
xchg
pop
cmp
or
loope
jl
sti
adc
xchg
adc
mov
pop
mov
sti
push
pusha
pmullw
jp
add
retf
xor
pop
add
xor
mov
and
leave
out
aaa
push
xor
jge
bound
(bad)
(bad)
out
mov
inc
jecxz
aam
xchg
add
sbb
and
xchg
jecxz
(bad)
xor
aas
iret
sar
(bad)
mov
jmp
mov
xchg
aaa
das
mov
fisub
aad
sub
mov
loope
cmps
mov
cmp
and
cmc
out
mov
es
sub
cmp
sbb
cs
addr16
ss
pop
jns
xor
cmp
mov
or
push
or
fisub
ds
mov
repnz
scas
pop
xchg
mov
aad
adc
push
mov
sar
fdivr
pushf
sub
push
retf
dec
xlat
adc
jb
inc
xchg
fwait
xchg
xor
ror
lods
rol
lock
and
les
(bad)
xor
inc
jmp
pop
into
pop
pop
arpl
repz
add
jbe
pop
and
pop
sbb
mov
aad
hlt
sbb
push
hlt
dec
lahf
cli
mov
out
pop
leave
stos
push
pusha
in
push
sbb
pusha
lods
pop
retf
ret
cmps
js
and
les
pop
mov
jg
into
shr
repz
out
sub
in
sub
loop
push
shr
pushf
movs
rcr
test
shl
fdivr
adc
mov
lds
stc
pop
imul
xchg
stc
inc
push
xlat
int3
pop
std
(bad)
mov
xor
pop
and
cmp
inc
jle
arpl
pop
cmps
mov
fstp
cdq
jmp
vpsraw
data16
inc
pop
addr16
mov
lea
xor
and
imul
add
mov
jbe
add
cs
out
(bad)
popf
dec
in
stos
mov
lds
pop
(bad)
mov
cmp
xor
and
sti
mov
or
jmp
popf
int
push
xchg
sbb
data16
pop
jae
mov
adc
ss
mov
call
sahf
jp
ins
aas
adc
mov
jbe
and
ins
pop
fcom
inc
adc
push
outs
imul
dec
in
jns
add
adc
push
cmp
(bad)
mov
rcr
ret
aaa
or
jnp
pop
int3
gs
dec
stos
aas
inc
retf
movs
push
fisttp
mov
mov
clc
stos
jbe
sub
cmp
js
cmp
jo
fs
inc
jae
int
sub
jle
int
jae
inc
push
or
mov
push
pushf
push
xchg
pop
xor
mov
pop
std
test
popa
push
and
adc
sbb
xchg
sti
lahf
push
lds
es
xor
cmp
adc
inc
(bad)
shl
push
sbb
dec
loopne
cs
sbb
jo
or
or
call
es
and
xor
dec
sbb
imul
into
cmps
in
sub
push
mov
sbb
mov
loop
pop
lea
out
mov
adc
stc
stos
xchg
ja
fs
jb
movs
jo
jbe
popa
es
mov
mov
push
nop
into
mov
add
cmp
fiadd
mov
and
xchg
rol
cdq
adc
and
mov
and
xchg
mov
scas
ficomp
push
iret
loope
enter
aaa
mov
(bad)
fadd
loope
fistp
daa
xor
cwde
push
retf
out
shl
iret
add
xchg
pop
push
push
fucomi
shr
xchg
pop
int
cli
scas
sub
add
xchg
fistp
jmp
add
repz
into
push
inc
jbe
shr
in
call
pop
dec
hlt
icebp
pop
repnz
push
jbe
mov
mov
and
aaa
popf
mov
xor
lahf
adc
sub
mov
jl
push
xor
movs
jne
bound
jmp
xor
fild
push
test
xchg
xor
dec
xor
popf
cmps
out
or
mov
mov
nop
out
out
dec
inc
sub
stos
or
dec
mov
dec
sub
add
jecxz
sub
daa
clc
lock
int
cdq
push
lea
out
loop
push
cmp
adc
cs
adc
lds
daa
pusha
jmp
mov
imul
loop
ins
int
sub
std
mov
int3
cmp
scas
push
mov
xor
sar
out
adc
pop
into
xor
test
jae
mov
adc
ds
jne
call
out
sbb
dec
ins
aad
mov
mov
fincstp
cmp
jmp
mov
mov
out
and
call
dec
enter
xchg
and
ror
imul
xchg
jne
int
dec
mov
dec
sub
aad
push
adc
sbb
add
scas
dec
xor
push
inc
add
lock
shl
mul
push
test
mov
sbb
xchg
mov
fisub
or
dec
jne
shr
fnstenv
frstor
and
jecxz
sub
inc
xchg
out
outs
or
mov
std
xor
mov
jmp
mov
cmp
rcr
aad
pop
dec
les
cmc
movs
mov
fldcw
or
fwait
movs
std
das
(bad)
jnp
movs
cmp
mov
imul
das
ja
mov
dec
or
jae
push
ss
xchg
push
icebp
repz
daa
mov
out
jno
jno
mov
dec
ss
mov
and
imul
jae
push
sar
loop
cmps
in
xor
out
mov
jnp
mov
js
push
(bad)
jp
mov
iret
pop
mov
push
fcom
mov
adc
lds
call
jmp
sbb
mov
mov
adc
fbstp
(bad)
out
sub
out
js
xor
sahf
and
sbb
inc
(bad)
lods
stc
rcl
fadd
xchg
dec
scas
mov
mov
shr
push
xlat
stc
xchg
lods
movs
cmps
mov
mov
jb
loop
(bad)
stos
cmps
(bad)
jp
cmp
daa
icebp
hlt
dec
pop
push
movs
xchg
enter
ret
push
das
pop
push
push
push
aas
xchg
cmp
fisttp
call
mov
mov
out
lahf
fwait
stos
iret
rcl
xor
out
arpl
push
scas
mov
and
cmc
mov
sub
or
mov
cmps
push
ja
inc
das
arpl
jae
ins
cld
mov
mov
aam
inc
dec
fsub
test
(bad)
mov
push
pop
psubusb
call
cmps
sub
outs
jnp
push
xchg
xor
daa
pop
stos
test
inc
les
retf
mov
mov
dec
popf
mov
adc
adc
sbb
or
jae
dec
sub
stos
push
jno
jmp
in
enter
mov
aam
dec
ds
fadd
out
jle
inc
xchg
data16
aas
jb
retf
xchg
jbe
sub
outs
data16
lea
lods
cmps
jmp
lods
pop
jns
and
inc
push
fistp
(bad)
lahf
jb
sub
push
mov
mov
mov
sahf
aam
sub
cwde
push
xchg
sbb
inc
in
sub
test
leave
lahf
sub
shr
xchg
cs
sbb
cmps
neg
cs
scas
aam
icebp
push
push
cwde
popf
add
fdiv
loop
mov
scas
(bad)
cli
out
pop
push
out
sbb
sub
(bad)
into
das
gs
or
or
push
push
jmp
out
adc
pop
ds
(bad)
enter
in
rcr
dec
add
stc
mov
cmps
jecxz
push
mov
iret
or
pop
cmps
xor
sbb
data16
ficom
stos
push
fild
jmp
retf
cli
xor
icebp
pop
les
ret
adc
data16
pop
jnp
outs
dec
fistp
adc
arpl
pop
clc
shl
inc
dec
mov
sahf
je
loopne
test
mov
push
arpl
fucomip
push
mov
sub
xchg
lds
and
pop
ss
fdivr
ins
aaa
stc
adc
add
jne
and
mov
push
push
es
jo
xchg
(bad)
mov
add
push
or
sbb
test
jp
jns
pop
jo
movs
mov
adc
xchg
cmp
jl
adc
inc
outs
mov
ror
xchg
movs
sub
inc
lahf
cmps
inc
ins
and
sub
adc
mov
aam
mul
mov
loop
je
clc
outs
cmps
or
enter
scas
shr
push
(bad)
loop
xchg
push
repnz
push
fs
xchg
ja
sub
push
test
cmp
mov
sub
adc
repz
cmp
dec
jecxz
test
int
das
push
nop
ficomp
or
addr16
pushf
scas
adc
ja
(bad)
jmp
push
or
push
rcl
(bad)
lds
std
xor
jne
js
stos
push
sub
popa
sbb
mov
cmp
imul
sub
mov
jns
mov
int
dec
outs
sub
inc
sub
loopne
jp
mov
(bad)
inc
or
adc
mov
cs
dec
outs
or
pop
mov
movs
sbb
out
lahf
pop
sbb
mov
push
dec
js
mov
aas
aam
push
inc
adc
adc
sub
icebp
cmps
xchg
dec
rol
push
pop
icebp
cs
les
sub
adc
out
scas
xor
mov
mov
xor
and
clc
int
add
cli
mov
outs
(bad)
xlat
jns
sbb
or
xor
mov
mov
rcl
retf
imul
inc
cmps
and
ret
cmp
idiv
int
in
jae
stc
sti
add
sbb
pop
loope
rcr
pop
aaa
xchg
cmc
mov
nop
hlt
mov
xor
mov
in
je
popa
sub
jmp
int
push
sub
enter
pop
les
es
jmp
outs
(bad)
aaa
adc
sub
retf
test
xchg
stos
cmps
mov
add
sbb
loopne
ret
iret
adc
dec
lods
push
imul
cmp
jb
outs
popf
retf
pop
clc
hlt
xor
mov
fwait
xor
inc
mov
mov
push
push
xchg
mov
or
sbb
lea
leave
xor
enter
mov
pusha
jmp
ficomp
aad
mov
pop
sub
mov
inc
mov
push
dec
and
dec
pmullw
xor
int3
add
push
cdq
enter
(bad)
iretw
cs
repz
ins
sti
jnp
or
pop
sub
or
repz
or
mov
popa
cwde
and
mov
push
(bad)
cmp
mov
retf
scas
imul
fnstenv
sub
gs
rol
inc
in
dec
dec
in
iret
xchg
sbb
outs
(bad)
clc
adc
push
pop
mov
bound
dec
les
les
test
jns
ja
sbb
xor
lahf
adc
sub
enter
inc
dec
mov
jmp
imul
sub
fwait
scas
dec
xchg
fisttp
out
xor
hlt
clc
mov
imul
fsub
ss
and
cmp
adc
cmps
mov
sub
das
neg
pop
push
jb
push
loop
nop
add
std
lds
jae
loop
and
dec
xchg
js
imul
mov
mov
aad
lods
lods
mov
dec
inc
and
and
cld
xor
inc
or
add
lock
mov
shr
cmp
inc
xor
inc
cli
mov
in
mov
push
sub
pusha
xchg
dec
arpl
arpl
lds
js
inc
in
pop
nop
gs
sti
les
inc
push
fst
push
retf
mov
or
loopne
ja
outs
mov
xchg
mov
add
outs
rol
ror
out
adc
fwait
jp
sub
cmc
repnz
mov
std
cdq
jae
and
add
and
fadd
adc
sub
loop
mov
mov
outs
push
test
(bad)
aam
jnp
repnz
cmp
push
mov
mov
ja
and
mov
loope
shl
inc
xor
dec
pop
or
dec
adc
xchg
inc
push
dec
sbb
fisubr
push
test
push
inc
shr
iret
in
inc
addr16
aas
mov
imul
out
enter
scas
cmps
cdq
or
xchg
gs
push
dec
nop
and
xor
aam
jb
push
pop
sub
pop
iret
sahf
lock
dec
or
xor
in
inc
jb
jl
jb
jnp
adc
je
js
cwde
mov
lods
into
cmc
dec
in
sahf
inc
dec
out
mov
pop
xchg
shr
push
scas
push
add
mov
mov
or
popa
dec
pop
jno
inc
into
aam
test
fcomp
fld
mov
fiadd
sar
ficom
lea
in
cdq
(bad)
mov
push
shl
iret
jbe
sub
add
inc
or
sbb
jbe
inc
xor
les
pop
mov
and
mov
jmp
mov
sub
std
and
inc
outs
rcr
fldcw
call
sbb
or
sub
loop
sbb
jl
shr
xor
aaa
leave
mov
retf
ins
out
sahf
push
nop
(bad)
into
jno
mov
xchg
rcr
add
xor
in
clc
jns
movs
enter
and
mov
fisubr
jo
xchg
push
xchg
xor
xchg
mov
push
popa
and
jae
or
mov
jno
pop
adc
int3
cmc
into
es
das
aam
sbb
push
sub
xor
push
pusha
jne
stos
in
add
ud1
jnp
sub
fdivr
mov
aad
push
push
lea
jno
fwait
jmp
(bad)
ins
std
push
dec
add
ror
sbb
int3
add
mov
push
daa
push
inc
push
ror
mov
sub
pushf
and
stos
xor
retf
ret
gs
test
shr
jns
retf
xor
xchg
std
sub
stos
pop
xor
cmp
jmp
mov
jno
fwait
popf
ror
pop
mov
fprem
retf
inc
cmp
jo
inc
retf
jle
xor
scas
imul
(bad)
lea
jo
push
out
shl
fbstp
adc
jg
hlt
xor
fwait
mov
pop
push
pop
shrd
rcl
inc
xor
imul
(bad)
cmp
shl
icebp
(bad)
popf
sbb
ret
fdiv
out
mov
jnp
push
or
sbb
push
fstp
and
das
aas
dec
stc
xor
fwait
mov
pop
jmp
leave
movs
rcr
add
clc
retf
cmps
pop
or
and
push
xchg
dec
into
push
mov
mov
pop
add
push
shr
icebp
das
pop
cld
movs
xor
mov
mov
xchg
test
push
mov
fsubr
(bad)
(bad)
fist
jge
mov
sbb
xchg
cmp
sub
pop
jo
je
outs
in
mov
pop
jnp
sahf
cmp
setns
hlt
and
xchg
inc
out
pop
push
loopne
inc
rol
rcl
mov
and
addr16
jne
push
dec
lea
out
add
add
bound
hlt
jns
lock
out
stos
sub
or
int3
ret
sbb
sbb
std
fiadd
sbb
(bad)
sbb
fs
ins
jno
jg
movs
inc
in
dec
call
cld
sar
and
pusha
sub
sub
out
cmps
dec
movs
add
inc
jo
int
jno
test
jno
aas
aad
fninit
and
add
push
int3
fmulp
xchg
add
ffreep
mov
jo
mov
call
mov
add
sub
adc
or
test
inc
or
je
iret
pop
mov
cmps
cmp
xor
inc
jg
or
xchg
cld
dec
push
push
mov
sbb
pop
icebp
mov
adc
cmps
jno
push
out
sahf
into
inc
inc
cmp
lahf
mov
fdivp
xor
sub
fs
cdq
shl
inc
xchg
mov
stc
iret
scas
jbe
out
push
repnz
(bad)
stos
push
adc
mov
sub
jo
inc
lods
sbb
cli
jle
add
les
pop
inc
xchg
cmps
adc
adc
leave
cmps
mov
and
retf
adc
pop
push
lods
add
ret
mov
ss
cwde
in
fld
mov
cmp
out
mov
aad
imul
or
jecxz
call
cmp
out
out
mov
stos
adc
jl
pop
icebp
dec
in
arpl
rcl
rcl
pop
add
sub
mov
adc
cmc
cwde
enter
mov
or
jp
in
mov
xchg
mov
ror
js
push
push
sti
jg
stc
rol
add
ja
push
inc
rcl
mov
xor
dec
nop
mov
lock
sahf
sahf
mov
jbe
rol
dec
imul
ss
aaa
fistp
mov
xchg
dec
(bad)
fidiv
mov
add
inc
unpcklps
shl
and
(bad)
pop
pop
test
repnz
fisttp
mov
sub
loopne
mov
out
cmp
in
mov
mov
repz
test
and
fsub
int3
jmp
in
cmp
fstp
sub
sti
xchg
jecxz
mov
lods
inc
xchg
ds
jne
mov
xchg
cmc
and
loop
clc
push
or
test
loopne
fisttp
cmp
imul
and
popa
out
iret
sub
popf
scas
bound
xor
mov
mov
and
xor
inc
ret
or
aad
mov
add
mov
movs
je
test
xor
sbb
enter
aam
xor
cs
iret
fs
cli
out
mov
lahf
stos
and
add
jl
sbb
add
in
ret
jnp
les
cdq
mov
lds
push
lahf
jp
pop
test
jns
jl
dec
cmp
push
bound
arpl
(bad)
stos
xor
or
or
cmps
loop
stos
hlt
pop
in
icebp
sbb
jmp
inc
popa
mov
cdq
or
sahf
mov
jp
out
test
pop
outs
rol
and
push
push
jns
xchg
jmp
fsubr
loop
xchg
repnz
movs
add
clc
mov
push
jae
jo
fidivr
sub
pusha
sbb
and
sub
pop
pop
mov
pop
inc
int3
dec
jne
pusha
ins
shr
sbb
ins
js
cmc
cmp
mov
inc
cs
add
push
out
loope
push
adc
push
add
mov
aas
jmp
mov
movs
xchg
jne
add
sbb
sub
out
jnp
push
or
or
sbb
dec
dec
in
pop
mov
and
rcl
mov
sub
sbb
and
mov
loop
adc
in
int3
mov
dec
cld
mov
lahf
jae
cmp
cmp
jp
push
call
cmp
hlt
pushf
mov
add
fldenv
stc
dec
and
adc
stos
ins
sbb
test
(bad)
pop
cmp
mov
mov
dec
daa
xor
sub
(bad)
pop
aas
adc
push
add
pushf
mov
xchg
cmp
sub
(bad)
jnp
push
mov
adc
add
inc
xlat
ret
arpl
jle
jl
and
loop
mov
mov
xchg
xchg
rcl
scas
push
inc
dec
and
push
movs
mov
nop
push
mov
dec
mov
shr
pop
addr16
add
mov
les
leave
mov
push
(bad)
and
sbb
mov
jae
ds
lea
cmp
inc
out
dec
leave
sub
jmp
pop
pop
mov
mov
add
sar
icebp
stc
je
or
xchg
aad
mov
xchg
or
iret
push
add
sub
push
mov
dec
lock
jbe
(bad)
push
(bad)
stc
pop
add
fst
or
inc
inc
and
mov
retf
fld
push
xchg
call
movntq
clc
ja
or
les
(bad)
(bad)
sbb
dec
push
mov
not
xor
inc
gs
sub
dec
cmp
pop
add
mov
or
or
(bad)
cs
cld
lods
push
gs
xlat
sar
outs
scas
popa
push
cmps
stos
into
mov
sub
cmp
scas
bound
(bad)
mov
cmp
call
adc
out
nop
retf
sti
sbb
js
in
fldenv
rcl
or
repz
loop
std
push
psubb
retf
test
push
push
inc
imul
in
sbb
push
push
in
iret
(bad)
repz
push
jo
je
lahf
outs
sub
push
mov
pushf
test
stos
jbe
and
dec
ins
push
ins
lods
daa
push
xor
bound
icebp
push
adc
mov
and
cmp
imul
xchg
cmp
out
xchg
ja
jge
ds
inc
(bad)
mov
inc
fndisi(8087
je
sub
stos
scas
imul
jg
lahf
and
fldenv
hlt
pop
and
inc
xor
repz
repz
cli
jno
ficom
call
int3
mov
and
pop
stos
(bad)
jmp
sub
jmp
outs
xor
xor
jnp
in
stos
push
xlat
les
popa
adc
popf
jge
test
sbb
jg
xor
and
dec
dec
repnz
adc
iret
pop
aas
sub
(bad)
cld
fwait
jae
xchg
fwait
mov
mov
(bad)
in
int3
inc
imul
out
push
clc
jge
(bad)
int3
outs
sub
inc
jmp
(bad)
xchg
rcr
cdq
out
pop
shl
ret
cmps
loop
ret
inc
movs
dec
mov
ins
or
or
aas
cwde
jae
ss
lods
mov
cmps
mov
mov
mov
and
dec
pop
jle
push
dec
xchg
inc
imul
pop
ja
or
in
lahf
mov
inc
addr16
imul
xchg
addr16
lods
int3
push
vsubpd
xor
mov
sbb
(bad)
cmp
mov
sbb
push
xlat
sbb
imul
adc
je
test
outs
cmp
hlt
test
ja
xor
sahf
jmp
loopne
repnz
push
and
arpl
lods
int
rcr
adc
mov
inc
shr
jae
js
mov
in
jnp
xor
call
adc
cmp
cli
lock
pop
test
xor
cmps
test
pusha
popa
cmp
sbb
or
arpl
dec
cmp
ins
sahf
sbb
fadd
out
pop
mov
jbe
xchg
add
mov
or
xchg
fsub
dec
sahf
fist
xor
push
add
inc
fsubr
and
into
inc
out
test
popa
fdiv
jns
sti
adc
lea
sub
mov
sbb
adc
in
push
sub
ss
sbb
fisubr
adc
hlt
push
dec
out
popa
repz
sub
pop
pop
lock
scas
jbe
out
fldcw
add
mov
jp
mov
hlt
retf
adc
mov
jle
xor
inc
fiadd
jne
cdq
shl
aad
push
stc
int
ss
ss
in
fsubr
sti
add
sub
fucomi
add
enter
mov
out
dec
add
xor
dec
and
pop
mov
cmp
jae
outs
je
ins
cmp
jo
mov
call
sbb
gs
dec
pusha
cmc
cld
sbb
sbb
dec
mov
jle
xchg
jbe
ins
out
lds
iret
fild
dec
aad
sub
jecxz
adc
ins
or
and
inc
or
fwait
jnp
and
adc
mov
not
ret
sbb
push
mov
or
adc
xor
in
rol
adc
cmp
fisub
pop
jae
(bad)
pop
xchg
cld
jb
inc
inc
adc
inc
cmp
push
imul
mov
jmp
ss
dec
jo
int3
dec
sbb
aas
or
(bad)
cmovbe
adc
pusha
lds
mov
inc
add
cs
xchg
pop
popf
mov
mov
push
and
mov
push
cli
dec
mov
add
xchg
je
jl
mov
xor
stos
add
push
retf
cmp
addr16
mov
sbb
push
in
mov
mov
cmps
mov
xchg
imul
cld
cmp
cli
or
popf
mov
xor
or
call
push
adc
scas
inc
pop
sbb
sbb
rcl
inc
mov
add
fadd
outs
sbb
nop
sub
and
cmp
adc
popa
mov
push
inc
mov
mov
xor
daa
mov
cmp
in
ss
jno
inc
mov
xchg
push
aaa
push
mov
jmp
jo
mov
mov
mov
in
sbb
aad
enter
jnp
arpl
out
pushf
inc
mov
sbb
jge
and
(bad)
lock
xchg
jno
jle
adc
xchg
ds
cdq
dec
stos
cmp
cwde
xchg
lods
(bad)
enter
cmc
sbb
xchg
(bad)
mov
push
push
out
aad
das
add
mov
es
cdq
push
out
xor
jmp
mov
and
pop
aaa
cmp
xor
pop
and
dec
nop
cwde
sub
les
xchg
ret
test
push
std
adc
xchg
adc
jmp
push
mov
xor
mov
push
sub
outs
cmps
cwde
sub
mov
or
pop
repz
jb
sar
inc
mov
mov
mov
mov
scas
scas
sub
inc
repz
dec
sbb
sub
stos
or
(bad)
ss
movs
xchg
lahf
mov
hlt
movs
sti
ror
pop
movs
sar
call
mov
ss
or
xchg
push
mov
jnp
test
inc
sub
xchg
repnz
scas
push
or
bound
mov
mov
adc
aas
mov
pop
xchg
shr
outs
in
stc
inc
scas
jmp
icebp
ja
sub
lds
or
pop
xchg
aaa
mov
sub
or
test
out
adc
nop
mov
push
cmp
xchg
cmp
jnp
int3
aam
inc
pop
push
arpl
sti
inc
mov
xchg
sbb
and
loope
shl
adc
xlat
leave
cmp
mov
scas
mov
aad
xchg
sbb
repnz
imul
mov
les
nop
pop
fucomip
out
cmps
jg
xchg
stos
add
ror
sub
push
push
pop
xchg
xchg
mov
jecxz
cmp
movs
scas
add
nop
add
pcmpeqw
adc
push
xchg
xor
loopne
sub
dec
xchg
pop
or
lds
and
mov
inc
xlat
cmp
in
sbb
cmp
movs
int3
rcl
das
push
jo
(bad)
push
and
lea
push
jl
sbb
addr16
loop
pminub
imul
lods
lahf
sub
fstp
push
and
jl
pop
gs
aaa
cld
arpl
and
(bad)
inc
into
push
pop
call
mov
sub
cmps
scas
pushf
mov
mov
data16
push
mov
adc
mov
js
bound
mov
mov
(bad)
jo
sub
jl
fiadd
ds
sub
sub
in
rcr
pop
cmp
xor
mov
push
mov
mov
adc
inc
add
(bad)
jb
or
outs
cmp
leave
mov
ins
bnd
loopne
lods
inc
push
mov
fnstsw
mov
in
ja
scas
jecxz
dec
lods
lods
xchg
push
and
mov
aam
sub
mov
dec
aam
inc
data16
sbb
adc
or
add
pop
les
jns
jns
adc
and
and
adc
ins
push
pop
and
loop
aad
sub
xchg
sbb
sub
(bad)
mul
add
nop
aas
push
outs
dec
sub
mov
jne
data16
xor
mov
and
lods
pop
(bad)
popa
call
xchg
mov
lahf
popf
inc
mov
push
add
push
sub
stos
lea
jle
fsub
sub
sub
into
sbb
push
aas
nop
dec
sbb
loopne
and
pop
ds
aas
inc
out
sbb
test
xor
adc
popa
mov
sbb
or
add
dec
fdivr
inc
add
cmp
mov
ror
ror
repz
fdivr
ror
mov
cld
jmp
retf
inc
cmp
movs
xlat
cld
into
pop
jnp
ds
cwde
mov
and
pop
cmp
shr
cmp
cmp
mov
mov
pop
jmp
imul
inc
mov
(bad)
cwde
addr16
mov
mov
mov
out
or
popf
aad
rcr
pop
sub
in
xchg
loop
les
mov
push
pop
int
adc
dec
imul
or
xor
ja
xchg
ret
adc
push
prefetch
fadd
pop
pop
dec
and
mov
(bad)
aad
dec
stos
sbb
rol
mov
ins
stos
dec
ins
sbb
lock
cmps
ja
mov
ins
sub
push
pop
pop
loop
leave
js
pop
xor
jmp
loope
js
daa
push
call
sbb
add
sub
not
arpl
call
retf
add
in
mov
out
and
popa
cmp
sbb
fcomip
mov
sahf
push
xchg
jecxz
ss
pop
leave
rol
fidivr
ret
add
cwde
mov
aad
(bad)
inc
xlat
pop
ss
pop
lahf
repnz
in
lds
push
push
ror
dec
mov
sbb
pop
addr16
cmps
mov
and
ss
add
jmp
xor
pushf
sub
ror
add
fs
daa
sar
daa
call
fild
adc
and
outs
daa
xor
shl
retf
dec
loope
inc
push
mov
call
ror
cwde
cli
hlt
sub
cdq
sar
das
xchg
sbb
(bad)
cmps
outs
js
xchg
push
jge
aad
sub
sub
mov
mov
in
lods
or
fldcw
and
mov
int
jae
lods
mov
mov
mov
xor
jg
sub
out
add
fwait
push
je
dec
add
je
or
dec
push
sub
and
sbb
and
push
pop
push
shl
inc
imul
push
aam
(bad)
icebp
dec
push
cwde
add
cmp
movs
test
xor
outs
xchg
cdq
jp
int3
call
ja
out
pop
push
push
nop
nop
add
and
mov
push
(bad)
scas
ins
nop
into
jae
pop
ins
inc
adc
std
sub
mov
mov
push
cmc
push
popf
and
mov
pop
xor
retf
jb
jl
fcomp
mov
sub
xor
sbb
sub
nop
outs
xor
adc
movs
repnz
enter
mov
mov
jl
pop
mov
ins
push
cmp
mov
fwait
cmps
sbb
fld
dec
mov
xchg
xchg
push
dec
in
or
push
dec
icebp
mov
pop
ja
xor
or
sbb
stos
xor
cmps
push
mov
fild
movs
push
push
xor
or
les
cmc
adc
ss
push
or
or
(bad)
and
cli
ds
in
leave
and
pop
repnz
mov
ret
cwde
jns
fild
fnstsw
jl
add
call
inc
enter
adc
(bad)
daa
(bad)
inc
(bad)
popa
shr
jns
aas
xor
js
pop
movs
mov
pop
fmul
not
pop
ret
fstp
or
fist
arpl
jecxz
xor
mov
loop
data16
(bad)
(bad)
and
test
fs
xor
loop
mov
and
sti
push
dec
jb
push
(bad)
jne
repnz
inc
inc
adc
add
sub
mov
sbb
dec
ins
fimul
std
inc
xchg
push
lahf
adc
cmp
jmp
movs
xor
hlt
lahf
inc
sahf
mov
pushf
cld
jno
mov
jmp
(bad)
lods
xchg
push
rcl
shl
cmp
test
mov
or
cld
out
cmps
jge
mov
pop
pop
icebp
pop
mov
pop
xchg
sbb
mov
adc
mov
cs
aaa
mov
jb
pop
mov
(bad)
out
stos
or
popa
iret
cmp
cli
ret
add
out
xor
cmp
das
cmp
push
in
add
xor
mov
aaa
jnp
jge
mov
jle
ja
add
push
sub
inc
popa
popf
xchg
test
idiv
sahf
movs
adc
gs
shr
dec
out
push
xlat
adc
pop
div
addr16
dec
xchg
push
loope
inc
ja
rol
popa
shl
inc
idiv
cdq
hlt
mov
nop
gs
ror
sbb
(bad)
mov
jne
cdq
add
daa
xor
gs
dec
je
lods
lods
test
scas
out
add
xchg
ins
out
dec
je
loope
sub
faddp
adc
mov
pop
jmp
or
(bad)
and
retf
int
out
xchg
mov
mov
dec
inc
adc
xor
pop
cmp
push
adc
xchg
fistp
outs
pop
push
mov
ins
bound
sbb
inc
dec
fcom
inc
jb
mov
push
adc
push
jmp
dec
sbb
shl
sar
and
xor
aas
push
mov
pop
arpl
sbb
stos
xchg
aad
sti
xor
jmp
test
pop
inc
jmp
js
jp
cli
(bad)
dec
outs
imul
daa
div
mov
mov
push
or
ins
push
or
fdiv
add
mov
test
mov
movs
push
xchg
rcl
out
scas
adc
jge
sub
sub
mov
sar
mov
adc
test
xor
test
sbb
popa
and
test
push
cmp
in
cmps
adc
outs
mov
sbb
out
sahf
adc
retf
repz
inc
adc
int
scas
push
and
lock
inc
dec
ins
ficom
mov
test
add
mov
test
out
loop
mov
stos
iret
xlat
aas
in
mov
mov
xchg
aaa
sub
cmp
test
jle
pop
loop
cwde
add
sbb
sbb
fmul
jmp
es
xor
cmp
adc
shl
mov
ja
ja
popa
fbstp
mov
adc
(bad)
aas
mov
jns
fst
pop
pop
adc
(bad)
jecxz
aaa
fcomp
shl
ins
out
(bad)
pusha
or
icebp
jle
in
in
in
fadd
popf
in
fadd
sbb
arpl
or
mov
popa
daa
les
sbb
aaa
jl
push
popf
mov
mov
mov
call
cmp
inc
fiadd
mov
sbb
adc
test
test
and
cmps
popa
mov
enter
push
outs
sub
add
js
(bad)
out
in
(bad)
pop
(bad)
dec
or
les
stos
cmp
movs
lods
mov
xor
jg
add
jmp
sub
sar
in
pushf
push
push
cmp
push
fldcw
xchg
sbb
adc
jge
mov
add
mov
pop
jo
xchg
aam
xor
data16
hlt
loopne
(bad)
or
push
xchg
ins
xchg
(bad)
jb
push
sbb
gs
in
ss
cmp
sbb
cwde
push
daa
jmp
repnz
in
test
push
mov
sub
ret
mov
daa
mov
loopne
pop
popa
fimul
aam
clc
sbb
mov
xchg
ret
dec
jg
sub
cmp
inc
cmps
push
adc
push
out
sbb
jp
xlat
les
in
or
retf
lahf
ds
loop
mov
sbb
and
mov
int
xor
lods
sbb
cmc
enter
imul
ins
lods
ror
movs
mov
xchg
test
in
pop
add
fucomip
add
xor
xchg
push
sub
fmul
call
mov
mov
xor
not
call
jge
pusha
or
cmp
xor
adc
or
mov
in
(bad)
xchg
scas
out
dec
fistp
jbe
fild
stos
mov
aas
xchg
test
add
pop
out
mov
in
mov
sub
(bad)
and
(bad)
fdiv
in
cmps
leave
loop
in
nop
test
adc
pop
adc
mov
xchg
loop
push
cli
jl
(bad)
and
cmp
test
mov
jle
add
push
xor
dec
icebp
outs
sahf
jmp
(bad)
popf
sub
loop
lds
sti
inc
add
bound
fs
sbb
loop
adc
(bad)
jns
lods
add
mov
js
ins
pop
loope
jl
xchg
ss
std
jmp
popf
pushf
leave
sub
retf
xor
test
aaa
iret
popa
and
test
arpl
lods
mov
div
xchg
mov
aaa
and
xchg
mov
ins
cwde
xlat
outs
dec
sub
add
pop
shr
test
mov
(bad)
and
push
and
jne
das
xlat
xchg
ret
fdiv
fst
push
retf
xchg
nop
aam
add
or
iret
fstp
scas
mov
and
push
cmps
leave
pop
mov
movs
fistp
pop
mov
imul
cmp
pop
enter
mov
ret
repz
push
cmc
or
push
jg
fsub
jno
inc
xor
jp
or
add
ficom
inc
int3
in
fdivr
les
push
push
aas
mov
scas
mov
jnp
or
sbb
cmps
ret
not
mov
popa
add
pop
repnz
dec
push
mov
popf
jmp
or
sar
xor
imul
add
push
sbb
xor
(bad)
mov
sbb
call
xor
pop
pop
xchg
icebp
(bad)
mov
xor
ins
mov
je
std
push
dec
std
in
push
leave
mov
pop
mov
cmps
aad
xor
cmp
and
ret
mov
mov
mov
mov
mov
data16
push
je
cmp
mov
mov
in
rcl
cmp
sub
jae
push
pop
out
arpl
ins
(bad)
pop
imul
in
jp
retf
(bad)
aas
aam
mov
ret
mov
movs
das
and
lahf
jg
xor
xadd
fiadd
es
leave
movs
inc
sti
aam
cmps
mov
pop
movs
pop
jl
sti
loope
dec
pop
add
loopne
mov
popf
fsubr
loop
sbb
cli
std
mov
or
add
dec
or
or
mov
jmp
loop
cmp
push
pushf
jge
iret
test
add
aaa
mov
add
(bad)
cmp
push
scas
into
mov
mov
push
in
and
mov
rcl
iret
mov
push
mov
fidiv
rol
push
xor
ss
xor
xchg
xchg
xchg
inc
fisubr
push
jnp
ja
dec
inc
cdq
xchg
sbb
enter
xchg
xchg
mov
cmp
ret
ds
sub
push
pop
or
les
popf
jae
inc
pop
or
lahf
cld
sub
test
mov
mov
sub
fcmovne
adc
pop
jo
push
mov
mov
les
inc
pop
clc
out
lods
mov
pop
sar
aaa
cmp
pop
repz
rcr
mov
jmp
inc
cmps
cmps
jmp
add
and
jne
outs
adc
adc
clc
dec
adc
push
loope
imul
xchg
push
cmc
div
adc
sbb
das
mov
add
jne
movs
outs
add
push
std
push
or
movs
in
cmp
iret
out
adc
inc
call
imul
sbb
out
or
shl
out
xor
out
push
mov
stos
stc
inc
jmp
jecxz
or
mov
push
sbb
xor
int3
and
out
imul
ficom
pop
(bad)
sub
push
inc
push
jecxz
loope
push
pop
je
popf
and
mov
jl
jns
out
(bad)
fsubr
cmps
ss
sar
or
(bad)
xlat
lods
pop
push
sub
(bad)
jno
add
aas
pop
mov
retf
std
ss
inc
add
(bad)
loopne
dec
inc
pushf
bound
or
mov
aaa
push
push
mov
gs
jp
scas
inc
xchg
ja
xchg
lock
cmps
scas
dec
push
push
int3
mov
je
repz
in
jo
inc
or
clc
push
xchg
scas
lea
push
lods
js
mov
add
xchg
cs
jnp
adc
pop
and
cmp
(bad)
or
jbe
gs
add
mov
sbb
jl
ss
inc
shr
jmp
and
adc
mov
adc
jo
jmp
add
test
outs
mov
inc
imul
jae
add
push
or
push
push
or
into
rcl
jns
add
sbb
push
addr16
in
cmp
(bad)
int3
mov
pop
das
cmc
dec
outs
aas
fwait
push
repz
jbe
add
sbb
mov
scas
enter
cmp
pop
xor
jp
ds
inc
sub
adc
(bad)
fistp
dec
shl
sbb
lods
int3
std
push
int3
out
cs
lds
ja
clc
jecxz
adc
sbb
and
popf
fcmove
dec
add
in
pop
sbb
lahf
out
(bad)
fisub
and
fs
bound
jns
mov
neg
dec
and
ret
cmps
pop
aad
mov
push
inc
idiv
mov
push
hlt
and
mov
pop
dec
xchg
and
and
jo
rol
inc
(bad)
adc
pusha
imul
xchg
mov
ret
ins
inc
mov
iret
lods
lods
cs
ds
sub
shr
or
mov
pop
sbb
sub
fwait
mov
mov
xchg
dec
in
aas
xchg
dec
iret
cmp
out
sub
pop
stc
lods
push
in
stos
cld
xchg
push
arpl
loope
cmp
jmp
xchg
pop
or
pop
cs
sar
mov
adc
xor
push
outs
sti
(bad)
fistp
pop
push
pcmpgtw
dec
mov
rcr
xor
mov
adc
enter
dec
add
(bad)
cmp
outs
push
mov
add
sub
dec
test
sub
in
push
jge
int
pusha
(bad)
fadd
mov
aad
sahf
pop
pop
mov
fldcw
adc
test
call
psrlq
cli
js
les
loopne
inc
xchg
push
js
jg
aaa
retfw
test
imul
movsx
adc
fnstenv
lock
jne
dec
fsubrp
icebp
mov
bound
mov
dec
test
cmc
lahf
sahf
aaa
jb
or
or
dec
pminub
xchg
or
call
pop
cmc
pusha
inc
lock
fsubr
push
shl
fwait
hlt
fwait
dec
fstp
mov
rol
jbe
mov
add
lahf
hlt
icebp
push
mov
pop
das
(bad)
jle
jns
addr16
stos
mov
jo
cs
stos
cmp
(bad)
jl
fild
push
imul
rcl
mov
aam
test
out
stos
mov
xor
sub
daa
mov
xchg
gs
clc
xor
sti
cmp
outs
mov
jmp
(bad)
pop
ins
(bad)
mov
out
add
cmp
xor
xchg
aad
mov
je
mov
ret
cmc
xchg
out
cmps
aaa
gs
jmp
hlt
ss
sbb
push
pop
push
inc
je
inc
lods
add
add
sub
es
(bad)
and
push
and
scas
cwde
mov
xchg
js
test
call
add
or
inc
jne
cmp
ja
ds
xor
mov
je
jno
ret
xor
sahf
lods
lods
popf
push
inc
add
push
dec
adc
jo
ins
data16
sbb
xlat
xchg
and
and
and
mov
xchg
leave
aas
jge
push
sahf
or
jne
mov
jmp
data16
inc
add
fldenv
xor
dec
test
loope
fdiv
inc
add
jnp
gs
aad
and
mov
cld
dec
sbb
or
and
call
mov
mov
shl
sub
mov
lods
lea
mov
enter
aad
icebp
add
not
mov
cmp
imul
jle
sbb
pop
pop
dec
and
push
xor
cmps
les
shl
mov
test
push
(bad)
adc
movs
ret
mov
sbb
mov
xor
ins
cdq
sti
add
xchg
mov
add
fidiv
les
push
dec
add
std
sbb
(bad)
jp
pop
and
aaa
mov
lahf
cmp
dec
sar
imul
outs
adc
push
pop
mov
iret
ds
loop
cmps
mov
movs
cmp
sbb
(bad)
clc
mov
mov
leave
dec
jo
and
arpl
jg
cmp
jbe
fnstenv
pop
fldcw
inc
ds
gs
mov
mov
das
adc
ret
push
les
inc
leave
dec
ss
pop
adc
xor
and
jmp
sbb
mov
inc
sbb
dec
or
repz
int
test
shl
inc
js
mov
sbb
sub
dec
xchg
cmps
int
xlat
outs
je
or
push
inc
sub
ffreep
(bad)
out
stos
inc
and
test
xchg
pop
pop
or
push
sub
inc
test
xchg
cld
xchg
int3
ret
loopne
add
fcmovb
sbb
and
adc
imul
mov
adc
sbb
sub
pop
retf
cs
jnp
pop
je
cmps
(bad)
out
outs
cmp
mov
fwait
bound
push
fsub
mov
push
mov
mov
idiv
mov
push
lock
sbb
jl
in
add
mov
pop
push
adc
test
test
mov
xchg
cmc
xor
jb
and
fild
xchg
ja
mov
iret
sahf
frstor
out
add
mov
inc
mov
out
jno
pop
lods
xor
into
mov
out
lea
cmc
inc
xor
adc
pushf
mov
pushf
push
xor
mov
ss
imul
mov
jne
mov
xor
cmp
push
das
mov
es
ss
lea
xlat
dec
retf
sbb
mov
std
cdq
stos
cmps
mov
hlt
cmp
call
mov
lock
stos
hlt
arpl
mov
adc
pop
retf
(bad)
repz
and
test
xor
xchg
je
daa
jnp
popa
cmp
fwait
xor
aaa
sti
jmp
clc
(bad)
shl
sti
pop
inc
and
xlat
neg
out
rcl
vhaddps
mov
rcr
or
(bad)
(bad)
nop
or
sti
outs
mov
jno
addr16
test
ficomp
mov
fld
push
xchg
jno
sub
int
data16
mov
shl
pop
xchg
jnp
cmp
add
sub
and
xor
fcom
or
mov
inc
outs
js
les
pop
loopne
and
mov
mov
das
pop
mov
lds
ficomp
lods
std
outs
rcl
lds
rol
gs
pop
pop
scas
inc
mul
mov
and
mov
push
les
or
or
stos
or
lock
test
scas
in
xor
mov
repz
lods
push
ins
int3
mov
hlt
lods
hlt
or
fadd
or
sbb
enter
ds
(bad)
call
arpl
pop
cmps
fcmovb
ret
(bad)
cmp
or
mov
iret
ins
sahf
or
adc
test
lds
jp
sub
enter
inc
and
or
movs
sub
xchg
xor
inc
inc
(bad)
mov
or
mov
ins
sub
mov
leave
iret
(bad)
cmp
clc
pop
dec
xor
out
sti
xor
(bad)
test
dec
adc
inc
xlat
xor
push
repz
pop
mov
and
or
add
ins
jbe
jge
jmp
aaa
in
sbb
inc
mov
add
out
jno
push
stos
lods
add
iret
inc
sub
mov
repz
mov
mov
adc
dec
push
pop
mov
repnz
das
cmc
xchg
add
popa
push
mov
js
aas
dec
xlat
mov
repz
repz
inc
daa
mov
sbb
(bad)
mov
ins
pop
fsubr
xchg
and
jae
or
inc
mul
pop
sbb
or
stos
sbb
mov
jb
xchg
in
mov
sub
int3
cmp
dec
pushf
test
ror
and
adc
outs
inc
(bad)
leave
mov
mov
mov
mov
and
cs
mul
mov
mov
test
push
adc
jmp
jo
sub
dec
test
mov
pop
jmp
shl
aas
push
pop
cwde
in
jmp
add
mov
out
ja
sub
cdq
lahf
bound
cld
idiv
lods
daa
cmp
jnp
dec
add
outs
scas
in
sub
jno
cmp
mov
pop
xchg
mov
sar
daa
sbb
jg
pop
sti
jp
pop
adc
cdq
xor
hlt
or
sbb
rcr
jge
test
icebp
leave
mov
push
pop
push
pop
cmp
and
mov
jae
mov
jbe
(bad)
js
xor
imul
or
dec
mov
in
aas
out
push
mov
aam
mov
mov
arpl
repz
clc
jae
or
ficom
push
sub
loope
jns
add
lea
pop
adc
or
push
adc
jge
test
sub
stos
in
outs
mov
jae
sbb
and
mov
push
loop
cs
loope
adc
dec
xor
cmp
dec
mov
enter
pop
xchg
sub
test
add
add
mov
sub
and
push
lods
mov
add
and
xor
xor
std
push
mov
jg
lea
in
mov
(bad)
sub
das
xor
ficom
sbb
dec
and
sbb
cmp
bound
je
or
into
fld
jne
das
dec
sub
out
sbb
sub
pop
ret
add
pop
sbb
je
adc
jp
ds
cmc
std
pop
call
xchg
sbb
enter
mov
in
scas
jno
pusha
pop
xor
rol
data16
(bad)
js
jle
adc
fwait
jae
pop
push
leave
xchg
out
outs
inc
inc
popf
test
ins
lock
pop
add
jmp
fisubr
loop
xlat
xor
push
je
inc
pop
or
es
adc
cwde
iret
int3
ds
sbb
mov
dec
cmps
fstp
out
repnz
dec
sbb
int
mov
adc
or
adc
test
xor
js
add
pop
stos
adc
xchg
fadd
xchg
repz
std
(bad)
hlt
mov
inc
dec
sti
icebp
repnz
pop
adc
mov
aas
dec
cmps
mov
lds
dec
cwde
unpcklps
inc
in
imul
inc
clc
pop
test
cmp
cmps
add
mov
mov
xchg
cmp
cmp
push
loope
xlat
xor
or
add
test
bound
add
mov
adc
(bad)
cmp
push
outs
lock
pop
(bad)
push
and
popa
loope
mov
enter
xchg
and
or
popf
cdq
sbb
test
push
add
xor
sub
inc
out
sub
dec
cwde
ins
clc
gs
imul
xor
xor
retf
fiadd
dec
dec
fisttp
daa
inc
mov
retf
sub
jge
sub
mov
popf
and
ss
cmp
inc
cmp
(bad)
jae
push
repnz
mov
mov
lods
lock
hlt
mov
test
(bad)
call
clc
cli
add
les
into
cld
cmp
ja
sti
fsubr
cmc
adc
lods
push
or
test
clc
lods
inc
dec
push
mov
(bad)
imul
cmc
enter
and
jnp
addr16
mov
jmp
leave
cmps
ret
mov
dec
lods
mov
sti
xchg
jae
pop
mov
sub
repnz
xchg
repz
or
cmc
adc
xor
rol
jmp
mov
and
pop
shl
xchg
mov
add
aaa
sbb
mov
jmp
imul
jge
inc
(bad)
inc
int
sbb
ins
aad
mov
in
sbb
ins
sub
test
pop
mov
mov
(bad)
rcr
scas
data16
inc
and
pop
mov
pop
(bad)
imul
(bad)
pop
add
jp
shl
scas
in
cmp
jb
mov
mov
iret
pop
xchg
push
out
stc
pop
push
xchg
add
mov
outs
call
mov
jmp
sti
shl
test
ret
sbb
imul
mov
gs
(bad)
leave
aam
jno
ins
js
fistp
add
mov
pop
fwait
adc
test
leave
ror
push
aas
cmp
outs
mov
(bad)
lods
mov
mov
inc
xor
xor
dec
loop
xchg
scas
xor
mov
loopne
push
xchg
(bad)
clc
int3
fwait
icebp
sti
idiv
push
dec
stos
mov
cmp
rcl
mov
inc
mov
jnp
setns
movs
cmp
xor
jo
or
pop
ds
or
in
sahf
jmp
inc
(bad)
inc
ins
xor
ins
rol
dec
mov
cmps
xchg
or
movs
xchg
add
loope
and
push
cwde
into
xchg
loope
mov
repz
push
jnp
in
and
pusha
dec
and
out
(bad)
repz
push
mov
push
loop
call
jo
icebp
mov
xchg
enter
mov
jecxz
popf
cli
sti
push
xor
sub
gs
adc
or
das
or
mov
cs
pop
inc
into
add
xchg
add
push
mov
mov
mov
repnz
aas
sti
dec
cli
scas
jne
mov
mov
(bad)
aam
fiadd
mov
or
jnp
in
sbb
aam
mov
cmp
dec
xchg
jb
or
adc
jmp
ret
scas
data16
mov
and
arpl
enter
int3
xchg
(bad)
fld
fnstenv
std
push
ss
push
jbe
mov
xlat
lock
mov
add
mov
push
jnp
(bad)
rcl
mov
mov
mov
in
jp
adc
pushf
jne
push
jno
sbb
dec
imul
or
gs
dec
pop
jbe
pusha
or
nop
dec
hlt
pop
jne
clc
dec
aad
cmp
jae
out
push
loop
xchg
add
test
clc
cld
outs
shl
out
mov
mov
jmp
cld
inc
dec
xor
hlt
(bad)
cld
mov
pop
pop
mov
data16
mov
xchg
xchg
pop
out
add
jmp
(bad)
out
ins
mov
in
pop
sbb
or
mov
cmp
push
stos
bound
adc
(bad)
dec
sub
inc
hlt
xor
push
aam
adc
xor
adc
or
stos
movs
xchg
or
clc
imul
hlt
xchg
fadd
ja
pop
add
inc
pop
xor
mov
stos
fucomi
mov
mov
dec
pop
adc
jns
or
sub
test
add
mov
repnz
leave
xchg
sub
(bad)
xchg
xchg
jle
les
adc
dec
inc
add
mov
sub
call
retf
mov
sub
and
ja
xor
and
inc
je
jae
movs
aam
mov
popa
aad
sub
(bad)
mov
xchg
sti
popa
jmp
data16
push
inc
jbe
(bad)
mov
test
mov
test
and
mov
cdq
test
add
out
add
push
adc
sar
jg
xlat
xor
cli
cmc
fst
push
lock
cwde
retf
icebp
add
enter
add
mov
sbb
test
lds
loopne
jns
push
fdiv
add
ror
pop
mov
mov
pop
mov
call
inc
sub
je
ret
jo
aad
adc
cmp
call
lahf
pop
out
mov
retf
es
mov
loope
arpl
pop
mov
mov
pop
movs
stos
scas
les
int
push
lahf
ins
add
aam
xchg
push
or
cmp
(bad)
lds
movs
xlat
mov
shl
mov
adc
sub
(bad)
popa
dec
add
shr
jecxz
fadd
call
mov
and
movs
sti
retf
jo
push
ret
cmp
cmc
adc
add
and
seta
mov
push
(bad)
int
cmps
retf
mov
lods
fidivr
mov
test
pop
(bad)
push
add
ss
mov
adc
push
mov
pop
js
div
(bad)
inc
test
and
jecxz
int3
ret
sbb
(bad)
test
outs
dec
imul
pop
mov
in
dec
cmp
adc
sbb
das
scas
cmp
loop
mov
mov
das
daa
mov
mov
arpl
(bad)
call
and
lahf
fimul
push
jbe
pop
mov
or
nop
mov
pushf
aad
push
inc
fadd
rol
or
into
push
mov
mov
add
push
lahf
sub
lahf
ret
clc
pop
daa
mov
fld
sar
outs
shl
inc
adc
mov
fistp
retf
dec
pop
aas
jp
push
mov
pusha
out
jmp
add
and
pop
(bad)
xchg
scas
std
sahf
and
xor
adc
inc
jp
das
sub
mov
mov
pushf
mov
mov
or
retf
xor
lds
mov
arpl
int
mov
add
popf
das
mov
push
pop
or
push
and
or
imul
pop
mov
sub
popa
fwait
test
dec
add
or
inc
add
or
or
xchg
and
jno
jp
xchg
iret
sbb
sbb
(bad)
(bad)
fistp
cli
sub
sbb
xchg
cwde
jecxz
arpl
sti
test
aaa
sub
aaa
dec
(bad)
xor
inc
sub
pushf
call
out
pop
push
mov
sub
retf
mov
and
ja
push
sub
repnz
add
daa
mov
dec
push
and
sub
push
cmc
add
sbb
jp
cmp
retf
das
rcr
mov
sahf
jp
test
and
and
fist
(bad)
out
enter
in
sub
jnp
int
add
jne
ss
push
ret
and
jle
xchg
xor
sti
mov
(bad)
daa
sbb
pop
sti
pop
cmps
add
fmulp
adc
xchg
inc
sub
out
retf
add
xchg
push
out
scas
mov
scas
jmp
mov
adc
push
jmp
inc
stc
in
imul
(bad)
rol
xchg
enter
(bad)
jge
cwde
(bad)
pushf
cmps
cld
adc
aas
inc
pop
jmp
(bad)
mov
push
push
(bad)
rcr
cmp
xor
in
add
ficom
sar
push
add
aaa
aaa
push
mov
loop
pop
and
or
out
repnz
xor
nop
mov
inc
(bad)
adc
mov
xor
inc
idiv
cmp
int3
inc
fisub
add
dec
push
cmp
or
out
aam
add
push
aas
pop
or
cmp
pushf
add
out
sbb
jmp
jns
int3
mov
push
lods
mov
jbe
fild
fld
mov
js
or
pop
fmul
enter
xchg
jo
pusha
inc
aam
sbb
mov
aam
ss
and
in
int3
push
test
adc
push
inc
push
jecxz
retf
or
xor
add
push
bound
sbb
or
mov
rcr
xor
mov
std
cwde
mov
in
ss
push
ins
leave
pop
inc
push
add
mov
pop
mov
pop
fdivr
or
xor
(bad)
fstp
stos
stos
mov
clc
outs
pop
test
cli
jle
stc
out
and
and
and
xor
mov
into
mov
xchg
xchg
jg
sbb
xchg
inc
aam
mov
mov
icebp
mov
mov
loopne
mov
xchg
jns
iret
ror
xor
pop
fcom
test
xor
addr16
fist
add
ds
mov
sti
jl
push
xchg
push
mov
div
data16
shr
sub
lods
xlat
xlat
pop
(bad)
xchg
jae
xchg
sar
mov
ret
lock
sbb
push
sbb
lock
pop
outs
pop
and
mov
mov
dec
out
(bad)
adc
mov
jb
daa
adc
movs
in
mov
fld
inc
xchg
mov
jmp
mov
ror
push
cmc
rol
and
sbb
fsubr
sub
dec
cli
mov
mov
test
dec
(bad)
mov
push
nop
pushw
clc
mov
push
inc
mov
enter
or
ins
xchg
xlat
hlt
pop
xchg
add
push
cmp
xchg
jno
sbb
outs
or
icebp
mov
loopne
sar
inc
stos
repnz
mov
and
out
es
xchg
retf
addr16
std
xchg
jge
popa
jl
jmp
aas
and
push
dec
or
rcr
inc
inc
int3
call
inc
jle
sub
jp
fst
shr
scas
out
dec
cmp
push
xchg
fwait
mov
(bad)
jns
fs
(bad)
js
ret
jne
inc
mov
sub
scas
fiadd
cwde
mov
xor
shr
mov
xchg
and
add
mov
aas
sbb
sar
iret
lods
in
div
dec
ins
dec
ret
sub
loope
shl
cmps
xchg
cmp
adc
jbe
(bad)
bound
sbb
adc
xor
leave
push
aaa
xchg
repnz
mov
mov
ret
es
dec
ds
push
or
mov
dec
rcl
mov
hlt
jne
mov
vmwrite
test
mov
mov
or
cmp
maxps
popf
icebp
sub
pop
mov
xor
pop
dec
pop
xchg
das
jae
xchg
xchg
std
movs
sbb
adc
mov
scas
in
pop
cmp
clc
xchg
stc
or
add
pop
inc
add
lods
outs
movs
push
mov
mov
add
int
jge
dec
mov
cmp
imul
cmp
sbb
mov
vmovd
mov
(bad)
shl
or
push
fwait
stos
retf
outs
je
pop
repz
jae
jle
or
jge
push
sbb
xchg
xor
xor
pushf
out
cli
sbb
mov
lds
lea
call
leave
mov
sub
mov
not
xchg
call
push
leave
lods
dec
ret
std
or
jnp
cmp
xchg
outs
stos
out
call
stos
and
sub
push
pop
enter
cmc
pop
pop
jae
popa
adc
in
aam
mov
push
ror
dec
stc
in
iretw
cld
or
mov
dec
fsubr
iret
pushf
out
or
add
pop
stos
push
mov
xchg
xor
pop
sar
push
repz
movs
mov
loope
mov
icebp
test
aam
inc
cdq
sub
cs
cmp
cmc
lods
enter
lods
jbe
or
ds
pop
push
inc
lods
mov
push
mov
push
jg
mov
inc
movaps
dec
mov
or
or
(bad)
and
mov
inc
popf
xor
add
mov
mov
push
dec
into
(bad)
push
jbe
fistp
mov
ds
adc
xchg
ja
mov
rcl
mov
nop
xchg
lds
jge
scas
mov
outs
clc
jns
test
das
xchg
pusha
(bad)
dec
int
add
icebp
dec
mov
call
push
sbb
in
cmps
stos
push
lods
bound
sub
iret
mov
fldcw
cmp
icebp
call
push
xchg
push
test
sbb
mov
mov
mov
jmp
iret
std
and
jne
neg
test
shl
stos
mov
sar
stos
add
inc
adc
cld
adc
int3
cmp
or
and
push
push
mov
mov
bound
pop
and
outs
in
or
mov
repnz
jnp
mov
mov
mov
loopne
pop
or
inc
outs
push
xchg
ds
hlt
nop
or
inc
xchg
in
rcl
adc
lea
mov
push
das
mov
aas
cmp
rcr
adc
sbb
enter
outs
loope
(bad)
clc
stos
outs
fistp
mov
jl
cmps
and
mov
push
cld
adc
lahf
shl
popa
test
jo
mov
aas
dec
and
cmp
mov
mov
or
aas
mov
mov
lods
cmp
push
fisttp
mov
mov
xor
int
xor
mov
cdq
std
sbb
xlat
xchg
xor
push
jne
add
aam
jge
ss
loop
jno
addr16
pop
jns
add
cmp
pusha
mov
pop
and
cmp
adc
js
xchg
pop
in
outs
push
or
mov
pop
test
das
lds
aaa
push
call
jl
stos
or
sar
adc
cmp
push
cwde
in
sub
push
adc
aas
out
test
fist
push
(bad)
jecxz
ret
sbb
icebp
mov
dec
mov
xchg
mov
mov
xchg
(bad)
xchg
std
dec
sub
inc
movs
mov
mov
push
aas
(bad)
sahf
test
sub
hlt
sub
shl
xlat
scas
dec
xchg
nop
jp
jbe
scas
inc
sub
inc
cmp
lahf
dec
out
mov
push
or
jne
rol
not
cmp
pop
ret
ja
xchg
mov
pop
push
sub
mov
leave
jl
sbb
frstor
cmp
dec
push
mov
ret
call
pop
mov
popa
and
int3
setp
sub
aam
fidiv
push
lahf
mov
dec
pop
jbe
lds
jp
mov
dec
inc
mov
outs
pop
add
adc
cmc
xor
cld
add
push
shr
cmp
outs
ds
scas
add
sbb
sbb
adc
cmp
xchg
sbb
stos
pop
call
jg
mov
out
jae
mov
outs
leave
fstp
in
and
pop
in
fadd
pop
stos
cmp
jl
add
and
sbb
jecxz
aam
das
sub
xor
adc
add
push
adc
cmp
mov
lahf
sub
pop
hlt
pop
daa
inc
loop
sub
fstp
pop
in
push
call
(bad)
cmc
data16
dec
fdiv
jmp
test
pop
pop
cmp
xchg
dec
lods
mov
lock
rcr
mov
xor
dec
xor
sub
sub
pop
daa
sub
scas
loope
sub
or
iret
adc
mov
into
jo
(bad)
push
fnsave
mov
mov
xchg
cmps
pop
add
ret
sub
add
pushf
jbe
pop
dec
add
stos
and
cwde
sbb
mov
push
or
sbb
daa
clc
or
ja
sub
or
xchg
add
dec
inc
jg
fist
pop
clc
jae
jecxz
xchg
add
pop
cmp
aaa
push
outs
pop
les
cmp
pushf
retf
call
leave
fbstp
mov
jmp
ja
push
sti
push
dec
loopne
pop
ins
and
punpcklwd
add
adc
mov
stos
inc
add
movs
and
repnz
fs
retf
xor
jmp
cmp
shr
or
fs
loope
mov
ds
and
jge
sub
mov
clc
scas
test
bound
sbb
stos
loop
pop
stos
mov
xor
movs
xor
xor
mov
inc
ins
mov
js
add
je
outs
push
les
pop
xor
movs
xchg
or
movs
ret
cmp
or
xchg
cmp
push
mov
cmp
fnstenv
pop
xor
out
xchg
ror
cli
into
jle
inc
jae
sbb
out
das
cli
test
jae
sub
shr
gs
and
jmp
hlt
xchg
adc
mov
xor
test
pop
movs
dec
aas
and
inc
in
and
sbb
ret
push
cmp
repnz
mov
idiv
(bad)
outs
out
pop
call
push
fxch
cmps
xor
ffree
dec
inc
stos
jl
aas
push
out
repz
push
mov
outs
and
(bad)
cmp
cdq
call
jmp
inc
cmp
push
adc
fisub
pop
test
jp
xchg
and
loope
xor
mov
ds
cmp
and
xor
(bad)
je
stos
inc
shr
jl
icebp
sbb
add
cmp
retf
iret
clc
rcr
shr
jno
mov
dec
xor
jge
pop
push
jae
ins
arpl
mov
nop
sbb
or
mov
pop
dec
and
cli
int3
sar
mov
fcomp
adc
add
ins
adc
cmp
pop
in
mov
hlt
sub
push
lods
xchg
dec
(bad)
(bad)
push
fild
add
cmp
mov
jne
mov
call
sbb
fwait
ins
sbb
jnp
adc
and
dec
xchg
fstp
pushf
and
mov
jl
xchg
imul
mov
xor
sbb
sub
bnd
or
int3
leave
cmp
push
mov
retf
das
cmp
pushf
mov
sbb
pop
enter
outs
lds
hlt
push
(bad)
scas
movs
enter
jmp
jl
xor
ss
fild
add
test
push
sbb
(bad)
sub
dec
add
test
std
pop
into
xor
repnz
sbb
mov
aam
add
and
sbb
sub
dec
and
gs
mov
fbld
movs
hlt
mov
mov
jno
pop
out
pop
dec
adc
add
fild
int
push
sub
jne
cmp
mov
dec
mov
mov
retf
lea
inc
fisttp
mov
adc
sti
es
call
lods
ja
sbb
es
(bad)
call
jle
pop
cmp
jp
cwde
movs
add
out
ds
dec
xor
dec
ins
and
pop
mov
push
and
jb
shl
jb
xchg
mov
cmp
mov
xchg
scas
call
ror
ret
das
leave
retf
add
pop
cmps
xchg
add
out
inc
test
ret
(bad)
idiv
add
fdivr
mov
call
sbb
ss
xor
or
xor
lea
xor
pop
aad
out
das
(bad)
out
pop
dec
sub
adc
xchg
or
or
inc
sub
xlat
adc
jb
nop
aas
icebp
in
retf
pusha
neg
xacquire
daa
mov
scas
cdq
push
jl
stos
test
adc
sub
fwait
pop
sub
out
cmp
dec
nop
lea
xor
ins
pop
or
mov
add
xchg
daa
mov
mov
nop
adc
ret
jnp
(bad)
jno
test
cmp
add
cmp
shr
jo
in
test
sub
mov
rcl
and
mov
(bad)
aaa
xlat
(bad)
jmp
xor
sub
enter
add
inc
test
leave
movs
sbb
fstp
or
add
stc
push
xchg
xchg
mov
into
std
mov
mov
push
xor
xor
or
xchg
dec
out
movs
and
in
cmp
test
into
aam
push
fdiv
mov
sbb
dec
jp
cmc
stc
pusha
std
sbb
sub
mov
mov
std
push
clc
jmp
in
scas
dec
push
inc
sbb
fnsave
data16
mov
mov
inc
out
adc
repz
or
rcl
les
jmp
and
mov
or
mov
les
pop
sub
inc
mov
pusha
fsub
push
shl
xor
ds
sar
rcr
adc
push
xchg
xchg
or
pusha
inc
pop
(bad)
push
(bad)
ret
sub
mov
rol
cmps
push
mov
scas
mov
mov
loope
sbb
xor
test
add
out
sub
cmps
sub
inc
dec
pop
fistp
retf
or
out
call
shl
and
inc
xor
popa
dec
add
push
inc
(bad)
in
pop
enter
cmp
int3
sub
out
adc
mov
push
pop
adc
pop
lock
cdq
imul
fidivr
push
and
mov
and
ret
adc
jmp
test
loope
jne
sti
pop
push
inc
shr
leave
xchg
imul
or
sahf
rol
adc
inc
sbb
fist
test
add
xlat
pop
mov
(bad)
call
mov
add
test
movs
stc
xchg
shl
dec
sbb
adc
push
dec
jbe
retf
call
pop
sbb
div
lock
shl
mov
shr
xchg
lahf
fidivr
push
mov
push
sahf
or
popa
adc
rol
fiadd
xchg
cmp
mov
and
fcom
fistp
adc
adc
add
sar
sar
cwde
cmp
nop
mov
jo
ret
aaa
sub
inc
jno
adc
test
jge
jmp
inc
(bad)
or
ficom
mov
pop
pushf
mov
fsubr
std
sub
pop
mov
push
sbb
push
ret
xchg
aad
inc
out
gs
pop
outs
cmp
inc
adc
adc
dec
add
push
mov
fsubr
mov
mov
xchg
add
mov
outs
xor
adc
xor
adc
inc
xor
mov
pop
retf
xor
aaa
enter
imul
mov
shr
in
in
clc
xor
and
ja
and
or
loope
cmp
mov
mov
jmp
mov
call
and
pop
add
loopne
(bad)
mov
outs
pushf
shl
sbb
xchg
stos
jb
cli
test
dec
imul
pop
iret
loop
fidiv
jne
adc
adc
(bad)
push
add
stos
jo
adc
cld
scas
push
dec
je
adc
sbb
sub
pop
adc
push
adc
cmps
cs
imul
int
loopne
(bad)
stc
mov
push
(bad)
pop
and
jmp
cmp
test
in
jp
push
xor
repz
pop
mov
xchg
and
add
int3
bound
mov
ret
add
push
ja
dec
test
mov
mov
sub
fwait
or
jmp
mov
add
daa
icebp
xor
sar
into
in
(bad)
mov
push
xor
sub
stc
repz
add
call
in
jmp
sbb
mov
test
adc
add
aad
lds
icebp
mov
cmp
jp
sbb
sbb
stos
cmp
sahf
adc
in
fwait
mov
cli
cmp
sbb
fmulp
aam
mov
push
je
loope
dec
jmp
outs
sti
sub
sub
ret
fcomip
pusha
pop
push
out
movs
inc
xchg
dec
(bad)
fwait
dec
imul
retf
ret
and
mov
push
movs
inc
mov
mov
call
ja
pop
jp
test
loopne
out
jmp
jmp
and
jo
out
jno
out
xor
daa
retf
out
jno
imul
bound
dec
scas
cvttps2pi
push
dec
cmp
popf
stos
es
ds
ss
jg
std
imul
adc
xlat
arpl
scas
ficom
jnp
je
scas
and
sbb
dec
push
fcmovnb
(bad)
sub
mov
mov
pusha
inc
adc
repz
cmp
cmp
push
test
pop
jb
icebp
mov
fwait
adc
xor
lods
inc
scas
mov
stc
dec
sub
xchg
fwait
pusha
xchg
aas
dec
xor
xor
popa
mov
test
outs
test
inc
pushf
cld
ror
jae
adc
xchg
adc
sbb
mov
lahf
ins
add
loopne
sahf
cmp
jecxz
mov
les
iret
nop
stc
mov
daa
or
jnp
or
pop
loope
lods
mov
push
and
jg
repz
sub
mov
mov
repz
in
adc
cld
in
add
(bad)
retf
aam
xor
gs
pop
push
pmovmskb
or
cmp
in
or
into
lea
add
pop
aaa
rol
xlat
sbb
nop
dec
and
add
test
xchg
call
test
add
xchg
inc
std
adc
push
mov
xor
sub
push
or
int3
cmps
mov
enter
movs
fs
pop
loope
lahf
add
(bad)
hlt
cwde
ret
mov
fstp
xor
mov
sbb
in
je
cmps
cmp
lds
sub
pop
jno
push
jo
adc
mov
mov
cmp
(bad)
and
pop
into
call
or
inc
clc
cmps
js
sbb
sub
lock
(bad)
add
push
(bad)
aam
int
pusha
push
mov
(bad)
pop
repnz
iret
jne
push
scas
and
sbb
out
jns
mov
int3
xlat
popa
mov
mov
in
ss
pop
pop
scas
and
xchg
stos
adc
inc
mov
ins
lods
xor
dec
aas
jmp
mov
add
rol
or
jmp
xchg
call
cs
fdivr
dec
add
gs
nop
or
imul
(bad)
and
nop
push
ja
cmp
call
adc
popf
xor
aas
jno
xor
xchg
mov
mov
sbb
sub
push
add
fs
sub
rcl
(bad)
push
ficom
cmps
dec
into
mov
inc
cli
hlt
loop
mov
and
lock
inc
push
adc
arpl
repz
add
xor
xor
mov
or
mov
cmp
out
xchg
and
in
xor
jae
in
sbb
sbb
jb
(bad)
retf
fnstenv
daa
adc
mov
add
pop
inc
or
retf
sub
das
jo
iret
loop
(bad)
jmp
mov
mov
adc
sub
ss
cld
mov
in
ja
fldenv
(bad)
dec
xlat
sbb
mov
test
inc
fisubr
xchg
arpl
pop
jns
xor
(bad)
adc
clc
push
fnsave
dec
inc
in
pop
add
das
cmp
and
out
jne
outs
pop
sbb
daa
xchg
mul
ja
ins
jecxz
dec
adc
test
les
stc
pop
fcom
or
sbb
(bad)
sti
popa
iret
test
pop
jecxz
xchg
aaa
jg
cmp
mov
iret
inc
test
hlt
jmp
test
call
loopne
xor
sbb
push
inc
xchg
pop
hlt
mov
push
and
lock
xor
sub
inc
test
dec
jmp
bnd
retf
loope
adc
sub
and
dec
out
mov
sub
repz
and
mov
iret
push
test
fld
push
pop
dec
out
add
shl
je
xor
and
pop
jmp
mov
pop
outs
mov
sub
add
shl
in
dec
call
inc
push
int3
leave
mov
rcl
scas
fcmovb
mov
ror
lods
pop
and
jmp
and
or
mov
nop
push
sub
les
and
push
arpl
pop
dec
push
mov
ret
mov
xchg
bound
icebp
out
shr
and
fdivp
aas
xchg
or
xchg
or
mov
add
cmp
shl
xchg
push
mov
sub
inc
adc
cmp
add
adc
fld
(bad)
xor
rcl
pop
out
jg
xor
jmp
fld
xchg
sub
lds
lods
xor
iret
iret
inc
cmp
adc
jmp
pop
xlat
cmps
jb
test
push
xchg
call
ins
stc
xchg
add
mov
movs
and
jecxz
lahf
pop
inc
dec
arpl
cwde
add
jp
mov
sbb
rol
call
fs
mov
test
outs
(bad)
mov
xchg
mov
mov
cwde
sub
mov
rcl
mov
or
lods
push
mov
cmp
out
mov
and
jns
jmp
dec
mov
shl
mov
pop
jbe
add
pop
repnz
sub
andps
std
push
and
push
mov
repnz
pop
sbb
in
and
enter
sahf
and
push
js
cmp
mov
or
adc
call
lahf
js
pop
ss
pinsrw
nop
ret
lahf
jg
xchg
loope
repnz
repnz
cmp
ss
repnz
cld
mov
aam
(bad)
pop
dec
sbb
sbb
(bad)
xchg
dec
jbe
and
outs
rcl
popa
mov
inc
mov
js
loope
seta
into
fstp
lahf
pushf
or
sub
hlt
push
popa
mov
mov
mov
ret
jmp
leave
test
jb
daa
adc
aaa
test
(bad)
dec
push
cwde
inc
mov
dec
out
mov
and
jae
arpl
and
sub
(bad)
xor
cmp
jl
inc
sbb
outs
pushf
(bad)
and
daa
retf
iret
ficom
in
fisubr
js
iret
jo
dec
lock
pop
scas
arpl
jg
jmp
push
lods
cwde
jmp
rol
fld
hlt
lods
adc
leave
cwde
stos
cmps
imul
loop
cwde
push
push
push
add
mov
jecxz
sbb
sbb
xor
sbb
dec
push
add
mov
and
dec
mov
mov
je
adc
push
lea
leave
hlt
daa
sub
(bad)
cmp
sub
rol
or
push
pop
pop
je
fiadd
sar
or
imul
dec
dec
std
and
inc
sub
mov
and
push
cmp
cs
daa
loope
std
idiv
mov
jl
push
aad
das
cdq
push
jp
xchg
out
sbb
sti
jnp
loopne
inc
out
gs
fcom
(bad)
rol
aaa
adc
stos
gs
popa
ret
cdq
aad
mov
clc
mov
jge
mov
push
add
leave
and
cmp
ins
push
and
enter
add
ret
stc
in
dec
mov
je
cdq
arpl
popf
xor
in
into
loopne
xlat
jmp
jae
into
cdq
and
xor
fst
pop
aaa
adc
out
pop
cmps
adc
and
pop
jg
adc
sub
retf
dec
xchg
sub
ja
and
mov
mov
fcomp
sbb
sbb
stc
cld
jbe
stos
xor
ss
(bad)
(bad)
inc
jle
dec
loope
dec
push
push
repnz
dec
mov
cld
fisub
ficomp
shl
or
leave
inc
sub
add
in
scas
jno
jge
sbb
aas
outs
cmp
repz
loope
push
add
xor
out
mov
out
cmc
div
mov
scas
imul
jns
test
hlt
xchg
add
daa
sbb
mov
enter
mov
mov
cmp
rcl
dec
xchg
and
out
and
mov
add
les
loope
xchg
sbb
ret
pop
push
enter
arpl
lds
inc
cdq
pop
push
xlat
jecxz
dec
jb
or
mov
xchg
aas
les
or
popa
call
je
add
shr
xchg
xor
popa
loop
cmps
or
mov
push
lds
jno
inc
dec
pop
sbb
lea
cmc
mov
aaa
ds
inc
outs
pop
pop
inc
mov
sub
or
inc
adc
fwait
ret
cmps
repnz
mov
scas
pop
stc
push
scas
jae
sar
popa
jbe
into
aaa
imul
mov
pop
pop
push
call
in
sub
bound
aaa
test
sub
dec
mov
(bad)
inc
in
scas
adc
xor
push
aas
lahf
mov
cmp
mov
movs
ins
mov
clc
xor
xacquire
sbb
in
push
push
or
and
out
cli
and
movs
mov
add
adc
jb
push
mov
aas
sbb
ja
xor
push
rol
cmps
push
pop
add
stos
enter
dec
mov
mov
ins
pop
jbe
ins
mov
scas
(bad)
test
dec
aas
gs
pop
mov
dec
jae
loope
add
and
imul
and
stc
(bad)
shl
dec
mov
cmps
dec
in
add
dec
xor
pop
cmp
mov
add
adc
inc
or
imul
sub
push
dec
ss
shl
or
xchg
push
pop
aad
mov
push
sbb
les
and
xor
xchg
adc
cmp
mov
bound
pop
repnz
sbb
sub
mov
push
mov
cmp
icebp
xchg
xor
icebp
jbe
aad
adc
adc
xor
xor
jmp
stos
cmp
push
or
pop
dec
push
mov
mov
fwait
add
mov
clc
lock
pop
out
mov
repz
mov
adc
stc
sub
or
adc
dec
pop
lods
repnz
(bad)
stc
shl
sbb
test
cmp
xor
repz
iret
add
inc
test
sbb
outs
cmp
pop
jb
cmp
lods
sub
adc
cli
sub
scas
adc
aam
mov
xor
inc
test
or
push
pop
add
into
call
fild
mov
shl
jmp
add
aam
pop
mov
iret
mov
in
pop
pop
adc
(bad)
sahf
mov
cwde
bound
int3
outs
rcl
dec
fisubr
es
pop
jnp
and
loopne
lock
adc
xor
loopne
int
(bad)
and
or
jmp
clc
aaa
mov
push
mov
or
or
sbb
push
ficom
retf
xchg
ja
sbb
dec
jecxz
mov
ret
or
adc
mov
sub
mov
or
cdq
mov
pop
fist
inc
push
sub
imul
sub
jnp
xchg
adc
sar
sbb
pop
loop
inc
push
out
dec
mov
movs
dec
sbb
push
adc
movs
jg
lahf
jecxz
mov
xor
push
std
rol
repz
jge
or
jge
fld
sbb
das
ds
dec
out
icebp
or
test
or
jmp
jg
je
fst
or
loop
out
cld
dec
loop
sub
xor
xor
sbb
retf
iret
data16
and
jp
sub
stos
push
inc
icebp
push
pop
pusha
sbb
int
mov
inc
add
test
(bad)
push
and
and
xlat
push
adc
xor
hlt
xor
pop
jo
imul
dec
jbe
(bad)
cmc
mov
jb
adc
mov
mov
stos
lock
xchg
popf
(bad)
mov
iret
pushf
xchg
lahf
jmp
stc
push
inc
stos
outs
and
and
aad
sbb
and
mov
fstp
adc
retf
add
lds
out
jl
add
nop
test
fiadd
lods
aad
cmp
pop
add
dec
sub
mov
mov
test
and
push
cld
push
and
popf
sub
(bad)
pop
jo
push
scas
dec
jmp
add
push
dec
and
mov
pop
add
cmp
pusha
daa
cmp
jg
inc
mov
xlat
cmp
jmp
ins
in
sub
fsub
outs
cdq
inc
rol
add
retf
xchg
cmp
mov
mov
cmp
ret
cmp
push
mov
sbb
cmps
scas
cmovnp
in
ins
lods
cld
ror
shl
sahf
in
xchg
inc
or
aad
retf
cld
mov
add
dec
push
scas
or
bound
mul
in
lea
cdq
mov
loopne
ins
mov
jmp
or
pushf
adc
mov
add
jmp
ja
out
push
in
adc
jno
mov
sub
movs
and
mov
mov
neg
mov
mov
jle
mov
add
shr
mov
xor
daa
retf
out
das
jae
pop
out
lea
mov
xor
movs
in
xchg
add
mov
xchg
sub
ret
push
dec
jge
xchg
cmps
push
adc
cmp
jo
cmps
lea
pop
or
pop
in
(bad)
push
pop
lea
dec
enter
and
inc
icebp
mov
xor
movs
das
jl
das
out
int3
popf
pop
jbe
fdiv
inc
adc
call
loopne
scas
cli
sahf
dec
popf
mov
in
sti
stos
pop
fisub
fsub
jmp
jne
call
xor
or
rcr
xchg
inc
out
jnp
jnp
push
(bad)
adc
in
or
sbb
cmc
pop
mov
mov
sbb
inc
cmps
sbb
mov
sub
or
ds
lods
or
fiadd
arpl
dec
pushf
add
es
sbb
leave
mov
cmp
xchg
jo
inc
jl
cmps
pop
dec
fcom
es
mov
ret
cmp
mov
int3
adc
sub
test
sbb
retf
(bad)
dec
repnz
bound
push
mov
inc
cmps
jp
inc
sub
sar
xchg
cld
cmps
dec
adc
lods
fstp
imul
jb
adc
xchg
mov
(bad)
cmp
pop
jne
mov
mov
dec
repz
cmp
es
dec
jmp
shr
xchg
dec
lock
cmp
call
xchg
mov
leave
stos
mov
fst
jg
pop
add
out
add
lods
adc
clc
push
sbb
add
rcr
out
inc
jle
rcl
inc
loop
push
out
inc
mov
out
jns
loope
xlat
lods
pop
fsubr
xchg
in
int
dec
inc
icebp
jns
outs
jmp
es
inc
or
push
sbb
outs
xchg
sahf
in
or
ins
cmp
cmp
push
je
ror
xchg
inc
hlt
push
or
jns
jae
inc
je
(bad)
sub
mov
or
movs
cmps
into
and
pop
stos
retf
pop
jno
jge
pop
or
ins
fsub
or
cmp
push
leave
adc
sbb
sbb
(bad)
adc
stc
jae
and
je
mov
inc
mov
call
aas
sub
iret
push
add
out
aas
xchg
lods
dec
pop
repz
fisttp
dec
mov
push
pop
(bad)
sbb
mov
pop
scas
jle
popa
(bad)
retf
bound
in
add
pop
adc
add
scas
(bad)
xchg
retf
in
call
mov
ror
adc
pop
pop
cmp
push
rol
ins
or
mov
or
push
sub
lock
std
mov
rcl
loopne
mov
push
jo
fidiv
(bad)
rol
dec
mov
pusha
inc
movs
mov
clc
push
mov
pusha
mov
sar
inc
xchg
pushf
sub
mov
sbb
mov
shr
repnz
fwait
arpl
in
mov
adc
in
xlat
xchg
xchg
xor
mov
pop
inc
aad
mov
push
lods
or
daa
stc
scas
mov
movs
sub
out
or
retf
push
xlat
mov
pushf
pusha
rcr
fcomp
cmps
movs
pop
pop
mov
fxch
mov
sub
dec
test
sub
push
maxps
and
xchg
dec
out
hlt
and
xchg
fbstp
mov
mov
in
dec
add
sbb
dec
adc
and
cmps
test
das
bswap
mov
xor
ret
stos
loop
push
dec
test
mov
sub
xor
mov
ja
mov
pusha
xor
mov
push
imul
inc
cmps
sbb
shr
mov
pop
and
ins
fldlg2
sar
xchg
push
out
rcl
inc
test
ins
push
das
mov
mov
mov
les
mov
xor
fs
add
mov
xor
fmul
mov
fmul
xchg
push
iret
dec
cmc
sub
add
pushf
ret
inc
adc
push
ret
mov
(bad)
mov
inc
nop
cmc
retf
dec
add
and
fwait
pand
or
cwde
pop
cwde
mov
mov
cs
add
into
mov
mov
mov
pop
rcr
xor
cmp
adc
add
mov
jnp
mov
jecxz
pop
repnz
pop
loopne
mov
aam
xor
retf
icebp
add
dec
(bad)
ret
cmps
add
sub
push
pop
fild
cmp
fucomp
call
movs
repnz
xor
xchg
or
inc
push
push
std
mov
jp
mov
push
in
and
push
(bad)
cmp
pop
xor
dec
xchg
ja
shl
mov
stc
out
dec
or
cmp
jecxz
aas
retf
pop
jb
shl
jge
add
push
shr
cmp
lods
mov
fwait
jne
push
jbe
cdq
out
push
(bad)
mov
push
push
push
inc
pop
(bad)
retf
mov
and
push
xchg
enter
sbb
add
or
mov
mov
loope
loopne
sub
ret
push
sti
(bad)
repnz
aaa
mov
out
je
lea
pop
xor
jp
lods
push
fist
xchg
ret
xlat
mov
add
test
push
fucom
mov
pop
mov
or
xchg
enter
movs
out
inc
lods
mov
mov
push
sub
inc
or
or
rcl
loopne
neg
xchg
jle
mov
int3
out
dec
push
stos
dec
push
and
into
add
mov
or
mov
in
sub
cmp
icebp
mov
and
es
mov
nop
int
adc
clc
inc
sub
test
and
xchg
push
stc
jnp
(bad)
cmp
push
xchg
iret
mov
fsub
and
(bad)
cmps
ret
xor
push
cs
sti
enter
icebp
sub
sbb
push
xchg
inc
iret
sub
mov
add
jl
outs
pmaxsw
xor
xchg
mov
push
cmp
mov
jg
imul
in
mov
or
icebp
jg
cmps
xor
or
(bad)
repz
fistp
dec
xor
sti
mov
sub
fstp
adc
jle
add
push
scas
cmc
jl
outs
adc
loopne
repnz
dec
or
adc
push
dec
not
pop
loopne
or
mov
inc
mov
scas
and
scas
aas
mov
js
jae
lods
in
neg
popa
mov
iret
repnz
xchg
pop
cmps
or
adc
sbb
ret
cld
scas
test
add
jo
clc
fwait
ss
mov
shr
xchg
sub
das
aad
jno
loope
push
retf
fs
cs
ja
clc
pop
je
jg
add
jecxz
jmp
jns
jecxz
add
fcmovu
xor
xchg
dec
or
pop
js
mov
xor
xchg
or
rcr
push
xlat
cmc
mov
dec
dec
(bad)
push
inc
mov
cmp
fisttp
and
push
mov
retf
push
pushf
cmps
stos
and
dec
sub
push
ja
leave
cmp
jecxz
(bad)
leave
aad
jne
rol
xchg
cmc
cmp
pop
je
cmps
pop
xor
sub
pop
cli
bound
(bad)
sti
cdq
and
(bad)
out
fld
cmp
mov
(bad)
lods
icebp
mov
lock
jmp
icebp
dec
sbb
neg
fscale
js
mov
and
mov
shl
cmp
aas
call
mov
mov
test
ins
and
rol
movs
add
inc
inc
scas
jmp
inc
fst
data16
pop
lea
je
push
inc
inc
bound
or
xchg
scas
mov
iret
or
xchg
fadd
cmp
mov
add
out
into
imul
xor
stc
inc
fwait
xor
adc
and
mov
push
in
das
adc
cwde
jmp
xchg
pop
fdivr
pushf
scas
(bad)
or
fbld
sti
lds
les
lea
outs
call
sub
icebp
fldenv
cmp
cmp
xor
adc
(bad)
pop
inc
or
jle
(bad)
sub
mov
retf
js
int
sbb
pop
add
mov
dec
test
fimul
test
ret
push
movs
xchg
pop
cwde
mov
leave
cld
scas
ss
mov
fwait
cmp
or
add
adc
movs
jbe
ss
and
test
mov
ds
adc
ins
jecxz
out
sub
add
pop
xor
mov
xchg
sub
mov
xchg
imul
cmp
ja
ds
in
pop
add
rcl
jge
ret
sub
cdq
push
pop
ss
sub
inc
mov
call
repz
into
icebp
bound
mov
sar
fiadd
adc
jbe
sbb
sub
arpl
push
popa
imul
nop
pop
ret
bound
fwait
push
push
pop
sub
sub
movs
das
add
hlt
sbb
xchg
das
in
shl
cmp
or
test
cmp
sti
mov
retf
loope
pop
sub
lods
push
fstp
adc
fcmovnb
add
inc
jmp
jno
(bad)
sbb
scas
mov
inc
arpl
loop
mov
pop
cwde
adc
aam
int3
out
inc
sbb
jl
in
jmp
rol
(bad)
imul
mov
mov
stos
addr16
sbb
push
dec
or
cmp
mov
test
(bad)
ficom
cmp
or
mov
hlt
cwde
lods
push
test
lahf
xchg
loope
inc
xor
push
or
repz
test
sbb
sti
inc
scas
mov
ins
and
dec
and
mov
cmps
mov
pop
movs
dec
cmp
mov
jecxz
mov
lock
push
aam
popa
pop
jnp
mov
jo
aaa
mov
clc
inc
xchg
out
jecxz
add
addr16
and
out
stc
adc
push
dec
adc
or
xlat
xchg
mov
inc
mov
dec
outs
sahf
sbb
neg
movs
jbe
mov
int
and
pop
inc
int3
ja
pop
cld
ins
pop
xor
pop
loope
xor
in
mov
fwait
xchg
into
sub
push
cld
sbb
fisttp
(bad)
mov
scas
inc
(bad)
and
cdq
mov
cmp
hlt
add
dec
mov
fld
js
cmp
lods
hlt
not
xchg
cld
adc
sub
ret
adc
sbb
ficomp
cmc
stos
mov
push
imul
and
cli
cmp
jmp
test
aad
xchg
repnz
hlt
bound
jno
push
jle
movs
mov
and
test
dec
aaa
out
inc
cwde
xor
test
call
cld
pop
jae
or
enter
test
ins
and
das
xor
push
es
(bad)
xchg
sub
xlat
retf
or
(bad)
xor
mov
fistp
xchg
jecxz
pushf
xchg
add
loopne
mov
repnz
xlat
ins
xchg
cdq
lods
test
pop
add
repz
and
jnp
sbb
inc
jo
iret
std
push
(bad)
idiv
retf
imul
call
add
stc
arpl
enter
cs
add
cmps
fsub
xchg
int3
in
and
pop
nop
add
push
ficom
scas
adc
sbb
call
and
add
sub
and
cmp
aad
scas
out
mov
mov
push
aad
dec
cmps
ins
jbe
xchg
retf
fnstcw
cmp
repz
sub
scas
out
cmp
sub
(bad)
xchg
fistp
out
iret
jbe
xor
mov
sub
sbb
clc
loope
push
mov
adc
js
xchg
in
cmps
cmp
fwait
sbb
sti
mov
(bad)
cld
xchg
jne
(bad)
test
aaa
mov
call
jge
cmc
repz
push
and
shl
add
add
(bad)
pop
(bad)
imul
rcl
push
mov
dec
cmp
repnz
(bad)
inc
push
jb
lahf
xchg
add
sbb
test
add
push
or
ja
pop
mov
cwde
lea
int
mov
imul
jno
jmp
iret
xor
mov
push
xchg
adc
sub
jecxz
mov
or
cs
sub
aad
mov
mov
mov
call
xchg
outs
sub
out
rcl
cmps
fadd
mov
xchg
addr16
hlt
pop
test
mov
jo
push
in
sub
movs
jne
cmp
rcl
jb
cmp
pop
mov
mov
out
sbb
(bad)
xor
lahf
test
clc
adc
cdq
inc
imul
int
out
das
sub
mov
pushf
out
outs
mov
jae
out
push
and
test
cmps
aas
adc
push
loopne
jg
jbe
pop
pop
inc
lock
sti
cmp
mov
dec
loope
popf
push
cmps
dec
pop
rcl
loop
pop
fild
and
push
xchg
push
mov
and
inc
stos
popa
xchg
jno
mov
aam
enter
sub
push
retf
cmp
mov
inc
or
popf
popa
mov
loop
pop
add
jg
test
cmp
add
ja
ret
cmp
pop
pop
out
call
mov
adc
or
retf
jnp
sub
(bad)
jge
imul
add
rol
add
pop
cmp
and
jp
hlt
inc
jns
sahf
jge
outs
scas
sub
push
inc
fdivrp
pop
mov
mov
ss
push
adc
popa
mov
xchg
xor
out
or
mov
sar
push
xlat
jecxz
pop
loop
pop
mov
(bad)
jae
xchg
test
inc
mov
in
pop
inc
xchg
enter
js
or
cmp
inc
mov
cld
and
aas
scas
imul
mov
out
and
or
jl
mov
dec
sbb
jg
dec
mov
xchg
cdq
lods
sbb
data16
and
push
lods
mov
pop
bound
mov
cdq
pop
(bad)
lods
jnp
or
adc
dec
add
cld
jae
addr16
pop
adc
adc
imul
add
test
jmp
rcl
stc
adc
lods
jl
adc
retf
icebp
push
outs
and
data16
cmp
ret
ret
mov
sub
call
sbb
mul
test
lea
dec
pop
es
xchg
xchg
ss
pop
mov
push
stc
pop
cmp
hlt
in
scas
sub
push
sub
cmc
bnd
repz
mov
aam
mov
inc
jbe
xchg
adc
repz
and
mov
fsub
or
ins
add
inc
jbe
jae
(bad)
cwde
and
call
sub
test
rcl
dec
mul
jo
rcl
xor
test
mov
cli
xor
stc
rcl
xchg
cld
jecxz
lds
mov
add
sbb
push
mov
mov
fwait
int
imul
bound
cmp
je
mov
pop
rcr
xchg
push
neg
xor
xchg
test
dec
mov
sbb
rcr
cmp
and
add
retf
cli
inc
mov
movs
cmp
mov
push
jp
or
addr16
xchg
pop
sahf
mov
es
sub
jge
lods
iret
cmp
mov
xchg
dec
in
aad
fiadd
pop
xor
xchg
lds
enter
inc
scas
push
cmp
sbb
jae
inc
dec
push
call
ficomp
mov
add
and
or
adc
add
loop
or
inc
out
adc
bound
shr
cs
adc
pop
sahf
mov
into
mov
call
cli
bound
add
sbb
add
retf
int3
aas
ror
inc
inc
cmps
dec
dec
sub
call
out
dec
pop
retf
add
dec
mov
push
aam
add
fcomp
push
cmps
jb
ret
adc
les
cmps
mov
loopne
mov
jp
jo
daa
add
hlt
in
dec
into
rol
addr16
pop
sahf
mov
lods
in
adc
cs
pushf
nop
das
out
cmps
scas
cmps
in
pop
and
and
push
or
fisubr
jmp
fwait
sub
jb
sub
ds
outs
and
shl
call
loop
jo
mov
dec
jl
mov
mov
jmp
cmp
adc
xor
cld
call
sbb
nop
bnd
sub
movs
js
pop
or
sub
jl
and
jmp
pop
enter
dec
je
lahf
fs
pop
xor
ins
jp
sub
xchg
fs
dec
lahf
add
aad
xor
fbld
cmps
arpl
pop
stc
mov
jge
retf
mov
int3
dec
sub
push
mov
mov
in
es
ss
test
cld
icebp
xchg
pop
call
movs
es
loop
cmps
fldenv
das
icebp
adc
sub
mov
adc
lods
shl
xchg
push
(bad)
push
xor
dec
inc
jecxz
retf
jns
addr16
loope
cmp
scas
mov
out
fidivr
in
nop
shl
sahf
cmps
fwait
pop
ret
xlat
test
push
hlt
daa
cmp
jl
sar
mov
inc
xchg
jge
xor
test
jae
mov
mov
and
mov
cld
push
mov
adc
sti
jns
arpl
stc
adc
sub
lea
pop
not
jnp
push
xor
and
addr16
ja
sbb
ror
rcr
mov
in
ret
retf
aam
mov
jle
add
pop
rol
sbb
mov
aaa
xchg
push
iret
stos
popf
shl
mul
push
call
cmp
out
rcl
cmp
cmp
push
test
adc
inc
cmp
das
add
out
adc
lds
loopne
adc
in
test
shr
imul
(bad)
js
mov
xchg
push
push
sub
push
dec
pop
jmp
in
mov
push
jae
xchg
ret
int
push
mov
sar
dec
jno
dec
cld
ret
das
and
(bad)
pop
mov
ins
loope
mov
mov
scas
xor
and
shrd
shl
(bad)
hlt
in
movs
sahf
sbb
xor
imul
enter
mov
aam
pop
das
popa
ds
fdivr
xchg
or
ins
aam
sub
jno
pop
mov
int
ins
mov
jl
pusha
and
call
leave
shl
push
push
jecxz
and
in
out
les
push
xor
(bad)
jecxz
fiadd
hlt
es
jp
movs
fs
cmc
pusha
adc
pusha
outs
pop
mov
mov
inc
aaa
test
mov
push
es
xchg
test
popa
mov
pop
push
daa
xor
push
push
and
add
adc
mov
push
clc
out
rep
sbb
arpl
push
iret
aaa
mov
mov
mov
mov
jb
stos
scas
add
inc
iret
push
retf
sub
fs
mov
fwait
jnp
cmc
cs
repnz
sahf
fsub
pop
rcr
and
movs
inc
in
mov
cld
jl
push
mov
mov
pop
pop
fisubr
dec
cmc
xor
shl
mov
scas
sbb
lods
cs
ret
fimul
xor
add
outs
cdq
push
(bad)
and
xlat
and
sub
mov
sub
jp
xchg
sbb
cmp
es
repnz
call
push
pop
jmp
lods
jb
push
xchg
int
mov
and
(bad)
mov
sub
jns
or
and
jp
stc
add
jle
cmps
cdq
(bad)
jmp
cli
mov
mov
adc
mov
sub
mov
es
out
cmp
xor
mov
push
push
sahf
jne
outs
call
sbb
ds
mov
mov
rcr
mov
rcl
retf
shr
and
mov
int
cdq
das
cmp
sub
into
retf
leave
cmc
adc
fst
imul
jmp
jle
mov
xchg
cmp
stos
mov
fldcw
fisub
inc
ret
cli
fisttp
xor
mov
sub
jge
les
push
inc
xor
xor
loope
popf
push
imul
lea
jne
push
(bad)
ret
pop
mov
fs
imul
xor
push
inc
jbe
outs
mov
out
pop
mov
psllq
or
jae
push
in
inc
xchg
push
test
or
and
popf
jecxz
mov
fsub
loopne
push
mov
mov
dec
add
or
outs
hlt
mov
movs
jmp
fcmovnb
dec
mov
(bad)
repz
inc
xor
jge
mov
pop
pushf
and
add
pop
data16
cmps
int
mov
add
xor
lock
int3
push
xchg
inc
sbb
jns
sahf
push
mov
xchg
outs
inc
(bad)
mov
cld
xor
fsub
lods
sbb
not
mov
gs
lahf
mov
pushf
jecxz
push
sar
(bad)
xchg
mov
dec
test
pushf
(bad)
in
inc
out
(bad)
xlat
inc
lock
test
jnp
add
std
or
je
or
bswap
lahf
or
movs
dec
ret
repz
lea
fidivr
cmps
push
fsub
xchg
not
dec
stos
mov
inc
sub
xchg
add
sar
pop
aam
out
dec
mov
or
pop
sub
jb
sub
pop
mov
cmps
nop
dec
cmps
or
(bad)
pusha
into
mov
clc
stos
pop
sbb
scas
push
imul
pop
xchg
xlat
push
xchg
jmp
imul
push
out
lock
or
(bad)
cmps
ins
(bad)
pop
stc
push
xor
sub
jo
lods
movs
data16
jmp
je
sar
outs
push
inc
pop
sbb
or
mov
adc
call
cdq
aaa
adc
push
cmp
mov
lds
mov
retf
lods
mov
outs
mov
cdq
je
pop
push
popa
sbb
aam
imul
mov
add
pop
pop
or
addr16
pusha
adc
mov
ins
mov
push
xchg
mov
loope
scas
adc
(bad)
scas
cmp
dec
out
adc
movs
push
mov
nop
pushf
cmc
xor
ss
push
or
int
pop
cmp
gs
(bad)
mov
or
lds
push
inc
cmp
cmovnp
lds
data16
jl
and
sbb
pop
sbb
aam
mov
push
mov
xchg
and
lods
retf
adc
dec
inc
inc
push
outs
and
xor
lock
mov
retf
les
cwde
cmp
xchg
sbb
ds
pop
(bad)
in
add
nop
push
pop
fcmovu
test
push
sub
or
out
ins
sub
jp
cmp
sbb
jmp
or
lds
movs
fistp
sub
add
(bad)
in
add
js
aas
xchg
jle
push
sbb
cmps
aam
sub
or
jno
fisttp
in
pop
shl
nop
loopne
lahf
jg
out
ret
lds
enter
das
pushf
and
jns
pushf
lds
out
outs
push
adc
push
fadd
lods
xor
inc
push
jb
adc
mov
stc
sti
sbb
and
in
mov
arpl
cmps
dec
sbb
fsub
sbb
jp
cmp
dec
push
aas
iret
mov
push
xor
inc
inc
and
arpl
dec
cmc
mov
movs
sub
(bad)
(bad)
lods
dec
test
inc
es
jmp
sub
push
or
jbe
lahf
(bad)
cmps
call
stc
cmps
cmp
cli
push
pop
stc
outs
ror
cmps
mov
bound
(bad)
std
inc
add
cmp
loop
fwait
cmp
mov
ds
cmp
mov
fsub
cmp
cmp
ins
ret
out
lds
inc
mov
call
in
dec
push
cld
(bad)
cli
mov
jne
enter
sbb
lds
xor
jo
je
or
mov
add
sbb
sbb
ja
jb
or
fbld
or
add
mov
adc
aad
and
repnz
mov
(bad)
fimul
mov
int3
fwait
inc
lea
pop
jg
iret
dec
sar
imul
mov
loopne
sbb
sahf
dec
inc
in
nop
stos
loopne
inc
fwait
add
loopne
jns
xchg
mov
inc
mov
cmps
pop
scas
addr16
mov
repz
push
add
push
xchg
xor
outs
xchg
pop
stos
stc
jb
cmp
mov
fisub
push
lods
push
mov
mov
repnz
pop
(bad)
mov
and
cld
ins
xchg
lock
jmp
cwde
es
add
pusha
enter
and
cmc
(bad)
cmc
cdq
popf
cmp
add
jmp
sub
lods
(bad)
jns
or
push
cld
jns
addr16
arpl
cwde
xor
(bad)
ja
sub
jbe
and
jl
lds
add
mov
retf
sbb
and
jecxz
jl
sub
jge
loope
fnstcw
adc
(bad)
lock
sub
daa
pusha
sub
and
and
mov
and
arpl
cli
push
gs
xchg
push
mov
and
mov
js
pop
push
nop
sahf
adc
ret
push
mov
xchg
sbb
adc
loope
push
push
(bad)
mov
cmps
or
xor
fimul
prefetchnta
cmp
jnp
mov
ret
cmp
shl
in
daa
lock
pop
test
aad
inc
xor
std
bound
fs
stos
data16
pop
repz
mov
cmps
ret
mov
in
add
cmp
nop
ins
sub
call
xchg
xchg
scas
and
mov
out
mov
xchg
fwait
cmps
out
mov
cmp
add
test
xchg
pop
ret
push
push
pushf
dec
in
cmps
cdq
xchg
xchg
ffreep
jg
(bad)
das
cwde
ja
add
push
mov
inc
mov
daa
stos
mov
aam
retf
scas
in
nop
(bad)
aam
mov
retf
arpl
jbe
outs
call
aad
rcr
retf
push
rcl
pop
aam
mov
push
mov
xor
dec
cli
jbe
out
or
add
fld
retf
sbb
cmp
push
mov
out
mov
mov
inc
loopne
push
xchg
or
call
int3
xchg
or
out
ds
or
inc
lock
ror
add
(bad)
in
loopne
sar
rcr
sti
and
aad
jmp
aas
fldcw
dec
fidiv
cdq
mov
out
dec
cmps
or
mov
sahf
out
or
sahf
jb
(bad)
or
jle
ins
xchg
jg
lods
(bad)
push
ins
cmps
pop
pusha
pop
add
add
sbb
lock
pop
ja
idiv
xor
out
pushf
aad
jbe
out
or
jmp
test
test
dec
cdq
mov
jmp
dec
out
test
mov
mov
push
jge
pop
or
pop
cmps
dec
jae
lahf
sbb
fbld
lock
xchg
mov
mov
pop
cdq
push
ret
xor
push
jge
pop
lods
es
cs
cmp
shr
lds
sahf
loop
into
retf
arpl
jo
imul
mov
xor
xor
sahf
push
inc
pop
outs
ret
and
push
xor
sbb
mov
std
cmp
mov
jecxz
(bad)
adc
jo
(bad)
jo
jb
cmp
mov
add
mov
jmp
mov
pop
icebp
int3
adc
sti
stc
in
dec
mov
xor
jne
ja
int
sub
adc
dec
xlat
in
cmps
rol
inc
sbb
or
sbb
addr16
loope
ror
imul
mov
js
sub
fnsave
mov
daa
mov
pop
cmc
je
std
or
or
mov
mov
cmp
popf
pop
push
sti
ret
mov
cmp
add
xor
movs
ss
xchg
inc
sub
inc
jmp
jg
push
lock
push
adc
and
add
inc
or
mov
(bad)
movs
inc
mov
lock
jle
(bad)
out
jl
aam
jmp
cmp
or
cmc
inc
xor
cld
inc
add
div
mov
jmp
xchg
bound
add
int3
mul
test
inc
in
in
and
push
cmc
lods
xchg
sahf
out
or
mov
mov
out
movs
inc
inc
fdiv
sbb
loop
inc
fdivr
jge
push
xlat
mov
popf
sbb
fisttp
repnz
and
jecxz
mov
call
pop
pop
fiadd
cmp
cmps
jecxz
cvtdq2ps
rcl
push
fs
cmp
xor
push
adc
icebp
inc
mov
push
mov
xchg
hlt
sub
sbb
sbb
sti
loope
mov
loop
mov
pop
lds
test
lahf
jnp
cmovge
repz
mov
das
xchg
ds
movs
push
adc
adc
enter
mov
retf
ret
jmp
jl
sub
xchg
out
xchg
cmp
xchg
mov
stos
push
adc
fwait
and
popf
push
xor
mov
fdiv
add
and
xchg
fs
mov
cmc
inc
scas
and
add
cmc
mov
leave
pop
lea
mov
test
mov
mov
loope
pop
push
jbe
mov
jmp
add
inc
movs
and
push
inc
test
cmp
adc
jno
mov
dec
add
stc
jns
xor
sbb
sub
mov
adc
mov
popf
shl
loope
lea
in
cwde
inc
aaa
lea
lea
push
shl
mov
push
loope
or
adc
call
cli
movs
rcr
xor
fidivr
mov
loope
mov
repz
mov
mov
js
arpl
mov
ins
xchg
add
and
xchg
outs
aad
sub
pop
(bad)
xor
push
sti
movs
out
dec
cmps
test
hlt
repnz
iret
and
inc
shl
fcom
push
fwait
(bad)
sbb
outs
adc
loope
lds
fild
sbb
dec
pop
mov
test
jno
movs
lahf
push
pop
ss
nop
push
ja
mov
jmp
mov
cmp
aas
push
xchg
imul
ins
cmp
push
xchg
sbb
adc
mov
xchg
mov
xor
mov
neg
cmp
imul
pop
push
fidivr
stc
cmp
jmp
add
push
xchg
je
adc
fist
sahf
mov
cmp
inc
push
aam
jge
data16
mov
mov
int
ret
xchg
sar
xchg
xor
mov
shl
pop
push
inc
xor
mov
test
inc
adc
aaa
cdq
jae
loope
outs
inc
mov
hlt
xor
cmp
imul
out
xchg
xchg
push
nop
pop
sahf
pop
jle
stos
push
and
adc
dec
jbe
dec
dec
sub
stos
sar
in
loopne
pusha
xchg
das
iret
out
ret
and
mul
es
adc
add
js
xor
or
mov
outs
in
lahf
jp
rcl
sar
div
mov
xlat
or
add
sahf
loop
ror
push
sub
sti
in
aas
jl
or
ds
dec
adc
dec
in
mov
add
shl
pop
cld
pop
add
cmps
sahf
cmp
mov
add
jge
xor
cmc
(bad)
jmp
push
adc
or
push
mov
or
push
ins
loop
cld
pusha
mov
es
adc
sub
or
repnz
fcmovnu
imul
into
mov
scas
and
xor
push
adc
mov
pop
adc
pop
dec
fcomp
aaa
push
dec
leave
push
push
icebp
sub
outs
ja
retf
sub
and
inc
scas
sub
xchg
(bad)
repz
inc
daa
jmp
xchg
lea
adc
push
or
in
cmp
mov
add
ja
outs
add
aaa
loop
adc
jecxz
pop
inc
mov
sbb
sbb
aam
cdq
aad
xor
repz
les
pop
shl
xor
add
push
sub
push
clc
inc
add
fsub
sub
data16
fs
add
mov
setne
mov
dec
mov
addr16
scas
fcmovu
rcl
lods
shl
rcl
shr
sub
retf
inc
jne
sbb
push
into
loop
or
das
adc
out
mov
leave
out
pusha
xchg
movs
mov
fwait
mov
repz
jbe
scas
sahf
pop
mov
pop
mov
lock
fdivr
inc
and
pushf
xchg
cld
pop
push
enter
push
outs
std
lds
pop
ror
lock
ja
add
sti
sub
out
call
(bad)
in
pusha
cmc
add
xchg
adc
std
push
outs
jno
adc
mov
and
jl
mov
ret
or
int
jmp
jbe
push
sbb
inc
sti
inc
outs
add
sub
sar
pusha
sub
or
inc
icebp
fsubr
mov
ins
jmp
mov
add
bound
rcl
imul
sbb
adc
push
cli
cmp
jg
pop
mov
out
sub
cmps
(bad)
test
retf
pop
cdq
mov
adc
leave
inc
hlt
test
mov
adc
sbb
jecxz
inc
rcr
shr
push
ror
sbb
add
cs
fdivr
int
push
mov
jb
dec
lds
mov
cmp
out
mov
fwait
sub
std
(bad)
aam
mov
sbb
sub
int3
adc
ret
pusha
cmc
jge
cmc
sub
inc
mov
add
add
ss
cdq
sbb
sub
xor
neg
cdq
add
xchg
retf
shr
repnz
arpl
retf
fsub
cli
push
in
sahf
jno
adc
mov
push
mov
xchg
inc
gs
xchg
ret
cdq
je
ret
push
sbb
popa
sub
push
enter
sbb
data16
in
mov
lahf
ds
aas
adc
es
inc
sbb
enter
sbb
adc
js
test
outs
fucom
jge
xchg
bswap
sbb
inc
inc
ds
push
pop
jecxz
or
or
iret
push
sbb
sub
lds
gs
sub
xor
inc
and
mov
add
test
call
jmp
(bad)
stos
xchg
or
fcom
push
mov
jns
imul
fstp
jge
sar
and
push
inc
mov
stos
popa
cmp
inc
mov
jge
push
fsubr
jl
shr
imul
xchg
inc
lods
dec
mov
push
loope
jmp
(bad)
cmps
mov
std
ds
mov
sbb
dec
daa
push
rol
mov
leave
xchg
hlt
mov
add
pop
fnstsw
mul
inc
les
xchg
sub
xchg
pop
cmp
jbe
dec
jno
dec
std
add
fisttp
(bad)
out
add
pop
xchg
inc
repnz
xchg
or
xor
addr16
push
dec
push
jbe
cmp
adc
fadd
add
mov
pop
or
fidiv
sub
sbb
xlat
pushf
lea
inc
aas
xor
xchg
jns
imul
pop
movs
sti
push
adc
sbb
xchg
mov
mov
add
xor
sub
fidiv
pop
jmp
fs
sbb
jns
sub
xchg
adc
xchg
push
cmp
shl
inc
and
cli
xor
int3
jl
ins
mov
jle
stos
ins
adc
pop
aam
jns
mov
xor
adc
dec
jp
adc
test
and
inc
fwait
jl
xor
inc
add
push
movs
sub
mov
shr
out
movs
xchg
mov
in
jns
sub
mov
sbb
ss
mov
pop
popf
jmp
sti
mov
ja
lds
mov
mov
adc
out
jmp
or
xchg
pop
stos
cs
out
push
pop
mov
cmp
popa
jl
shl
dec
fs
das
inc
rcl
arpl
adc
dec
gs
cmp
cld
sub
je
ret
jbe
mov
xor
push
aad
and
dec
fcom
mov
jecxz
clc
xor
mov
out
rcl
ins
add
icebp
cmp
scas
loop
sti
xor
in
push
xchg
pop
dec
jo
pop
(bad)
loope
aam
add
lods
push
fwait
rol
jge
jl
or
jnp
push
and
mov
mov
mov
push
sub
adc
cs
and
nop
sti
jno
je
mov
mov
xor
imul
aaa
mov
std
out
and
ins
in
imul
pushf
repz
inc
leave
lds
mov
jge
js
into
mov
xor
dec
ds
xor
in
and
adc
call
mov
and
jp
fmul
inc
(bad)
and
lahf
add
and
out
jmp
jp
loop
or
mov
add
fdiv
sub
fs
out
push
out
cmc
cmp
xchg
imul
cmp
sti
out
jno
xchg
and
sbb
lea
mov
add
fstp
cmc
jle
cld
ins
push
retf
pop
addr16
call
ins
jmp
dec
pop
cmp
mov
shl
data16
or
adc
cmps
jnp
inc
xchg
jmp
pop
imul
pushf
mov
cmp
push
je
out
xor
into
cmp
adc
add
mov
test
stos
mov
loopne
es
retf
cmp
mov
out
jae
cmp
lahf
sbb
or
sub
push
fwait
rcr
pop
pop
stos
lahf
int3
sbb
and
push
and
jecxz
js
stc
movs
dec
stos
cdq
jbe
jl
mov
adc
cmps
sahf
push
cwde
cmp
jg
xor
sub
pop
cmps
pop
loopne
inc
cmp
add
fs
shl
mov
aad
add
add
lds
or
ss
lahf
es
rol
loope
jne
mov
pop
not
js
cli
stc
out
or
into
and
repz
xchg
loopne
cmp
add
out
arpl
push
xchg
sbb
sub
pushf
jnp
lea
imul
add
adc
leave
fdiv
icebp
cmps
inc
sub
ficomp
loopne
cs
mov
and
cmp
fcom
(bad)
in
(bad)
adc
mov
lods
xor
mov
xchg
ins
in
sbb
sti
loope
jbe
cmps
arpl
ret
jmp
push
into
adc
mov
call
add
pusha
mov
imul
ins
outs
sub
push
or
mov
adc
mov
test
pushf
dec
or
sbb
cmps
ret
push
mov
stos
dec
stos
jge
in
loop
sbb
lods
imul
pop
js
dec
cdq
in
xor
addr16
jae
cmp
push
xchg
jns
fsub
sub
test
(bad)
push
push
mov
into
das
(bad)
cs
mov
push
jle
pop
jo
mov
mov
shr
xor
fldenv
test
pop
and
pusha
js
das
pop
test
sub
ja
into
mov
pop
mov
jmp
and
inc
cmp
aas
add
retf
jl
mov
in
out
dec
mov
popa
bound
sar
jecxz
inc
jnp
jle
mov
jmp
dec
sahf
icebp
fstp
aaa
and
pop
push
cmp
dec
data16
xchg
pop
sti
(bad)
jmp
stos
arpl
movs
call
cmc
repz
cmp
jmp
ins
xchg
cmp
les
call
cmp
mov
mov
jle
test
xchg
out
sbb
mov
sbb
rcr
adc
ja
jmp
in
popf
jo
popa
fisttp
mov
jg
adc
fldcw
popa
imul
mov
(bad)
jae
(bad)
dec
nop
cmps
push
and
inc
icebp
fcmovnu
dec
adc
pop
pop
js
jp
sbb
inc
scas
xchg
retf
jge
das
jecxz
or
mov
xor
sub
sbb
xchg
sub
in
ret
jg
mov
jb
xchg
push
mov
pop
mov
pop
test
cmc
dec
sbb
or
and
retf
popf
dec
lahf
push
push
icebp
dec
cmc
sti
loope
and
daa
sbb
packssdw
rcl
cmp
int3
cli
lods
pop
mov
scas
pop
aad
jp
(bad)
dec
jle
xlat
add
sar
push
(bad)
inc
sbb
push
icebp
in
popf
out
fdivr
pop
out
call
je
ins
or
add
mov
sti
or
(bad)
mov
add
es
in
inc
(bad)
xor
xor
jecxz
push
adc
pusha
stos
xor
push
dec
out
sar
(bad)
movs
inc
pop
nop
data16
xchg
adc
inc
bound
das
outs
jns
scas
mov
mov
jo
add
xchg
and
push
stc
repz
movs
call
pop
mov
test
sub
and
mov
xor
pushf
add
or
out
ret
repnz
push
mov
outs
pop
push
das
mov
sbb
pusha
(bad)
neg
or
and
fs
jle
xchg
jne
cmps
mov
jp
gs
add
test
sbb
adc
lahf
aas
ror
xchg
push
xchg
push
cwde
cld
dec
cmps
ins
and
mov
inc
fdiv
cdq
xchg
inc
test
icebp
aam
sub
sahf
lods
or
daa
lock
xlat
or
stc
mov
xchg
jg
and
jg
add
jecxz
fiadd
mov
inc
lods
xor
imul
pop
sbb
mov
mov
ffree
lea
sbb
imul
repnz
pop
add
sub
enter
xor
nop
icebp
jl
pop
cmp
xadd
mov
add
cmp
xchg
(bad)
daa
out
dec
es
mov
ret
cmps
bound
dec
sbb
popf
and
cs
push
adc
imul
lahf
sahf
mov
in
dec
neg
and
faddp
sbb
dec
jmp
mov
mov
dec
sub
sar
lds
cmps
mov
clc
jno
rcl
sub
test
and
lahf
ja
pop
sbb
pop
and
mov
enter
mov
sti
popa
pop
mov
pop
adc
dec
cmp
arpl
xor
and
mov
and
fnstcw
int3
leave
call
daa
lar
jo
pop
mov
pop
pusha
xchg
ret
shl
sti
shl
sbb
jge
or
jbe
test
mov
or
xlat
push
fist
mov
hlt
clc
dec
(bad)
das
inc
dec
scas
dec
rcr
dec
adc
inc
mov
fcomi
sbb
jmp
jle
mov
or
out
add
je
cwde
cmp
sub
xor
in
sbb
shl
hlt
imul
ins
nop
push
fwait
pop
cmp
inc
dec
adc
gs
aad
jo
xchg
add
popf
outs
les
cmp
cmp
sbb
stc
std
cdq
push
sub
sub
add
xchg
cmc
mov
daa
addr16
ror
mov
cmps
lahf
movs
(bad)
or
sub
arpl
mov
addr16
(bad)
push
fwait
in
das
pushf
(bad)
sti
pusha
xchg
fisttp
mov
jl
and
mov
dec
icebp
sar
and
mov
mov
push
or
std
mov
ins
mov
pop
pop
repz
cmp
push
pop
repnz
cmp
ins
data16
add
and
fstp
add
xchg
enter
sbb
(bad)
sub
lods
cmp
pop
pushf
cmp
mov
xchg
rcr
ja
pusha
inc
jecxz
jnp
sub
bound
mov
and
inc
inc
inc
ins
bound
aaa
shl
or
dec
lds
and
cmc
pop
call
lods
mov
xchg
fwait
mov
ins
push
cmp
xor
fimul
inc
jge
mov
cmp
inc
popa
in
std
push
xor
in
cmp
fcom
push
xchg
or
daa
inc
icebp
ret
add
mov
mov
dec
neg
sbb
push
xlat
cwde
jp
cmp
mov
ja
sti
daa
arpl
add
arpl
mov
pop
jns
sub
movs
push
clc
arpl
xor
test
xchg
sahf
push
outs
stos
mov
jmp
mov
in
loope
nop
ins
imul
adc
fldcw
adc
adc
inc
sar
dec
lock
push
pop
cmp
rcr
scas
repnz
cli
push
xor
aam
lods
or
popa
clc
pop
jbe
fs
lea
push
and
or
retf
mov
scas
lods
les
push
lock
fdivr
gs
pop
jmp
mov
sbb
mov
dec
outs
mov
imul
push
or
movs
out
fisttp
ret
pop
jno
mov
xchg
movs
out
inc
jnp
ret
(bad)
push
push
or
dec
inc
push
lds
dec
inc
outs
cli
jns
xchg
mov
jmp
lds
sub
sbb
or
outs
mov
jne
aam
les
cmp
mov
sbb
int
into
scas
ret
add
cdq
not
inc
test
sbb
pop
inc
mov
inc
cmps
daa
fst
add
xchg
popa
mov
sbb
jle
add
out
(bad)
mov
adc
(bad)
test
jecxz
push
sti
in
pop
inc
xor
fsubrp
ss
mov
jl
sahf
lods
mov
jns
je
fstp
fadd
cmps
stos
sub
(bad)
(bad)
daa
sbb
mov
das
addr16
fcom
or
inc
data16
shr
sub
dec
shr
add
div
je
sub
sub
cwde
jp
add
jnp
dec
mov
sbb
add
std
pop
dec
and
jp
sti
add
mov
les
sub
popa
popa
pop
shrd
pusha
adc
xchg
les
(bad)
outs
jmp
ret
bound
inc
out
inc
jae
push
repnz
ins
in
nop
inc
hlt
outs
add
lahf
into
add
rcr
push
and
loopne
fild
push
push
mov
test
xor
rcl
push
clc
icebp
shl
push
mov
sbb
lods
push
lea
out
shl
inc
pshufw
lods
adc
add
and
lods
arpl
xor
nop
sahf
pop
mov
lods
push
sar
cmps
mov
cmp
sahf
or
push
or
loopne
xor
cmps
fdiv
xchg
mov
xor
ror
cmp
xor
jl
push
out
scas
scas
cli
push
rol
pop
fdiv
cmp
push
imul
in
outs
in
adc
jbe
int
xchg
out
dec
(bad)
pop
mov
cli
popf
pop
mov
jge
add
(bad)
out
xchg
jg
cmp
dec
inc
in
adc
push
cwde
or
and
xor
jge
pop
sahf
add
repnz
xor
repz
adc
mov
dec
dec
jae
aam
or
data16
sbb
jmp
and
mov
mov
xlat
fisub
pop
lods
lahf
adc
sti
push
icebp
or
shl
jge
jbe
pop
sub
in
add
jo
int
pop
pop
and
dec
xor
cli
pushf
cmovs
mov
jnp
mov
shl
mov
js
das
and
sub
push
iret
mov
and
or
(bad)
push
jmp
mov
pop
mov
jge
xchg
sar
fwait
dec
adc
loopne
enter
mov
push
push
aam
(bad)
fs
jp
xor
fiadd
sub
in
dec
dec
ins
scas
popf
jbe
mov
test
lea
sub
inc
jns
(bad)
popa
sti
call
shl
sar
dec
adc
sbb
lea
jnp
mov
inc
(bad)
fild
xchg
mov
jecxz
icebp
xor
int
xor
sahf
pop
ficom
xor
vpextrw
and
jecxz
and
ror
push
fld1
retf
loopne
ds
mov
mov
stc
push
inc
stos
cmovne
mov
xor
shl
add
xor
mov
loopne
mov
xlat
and
bound
push
aas
pushf
inc
xlat
imul
dec
sbb
outs
add
jl
dec
ins
call
adc
mov
loope
sbb
into
add
lods
push
popf
jge
retf
aam
scas
pop
adc
mov
retf
push
mov
ja
hlt
or
arpl
or
sar
scas
scas
xor
into
xor
loop
cwde
(bad)
in
cmps
nop
call
add
push
jno
aaa
pushf
imul
xchg
das
(bad)
cmps
cdq
add
mov
inc
std
ss
cdq
xor
out
pusha
fnsave
mov
inc
push
ret
clc
fsub
pop
jle
push
sbb
sbb
sub
pop
ins
jg
push
aas
(bad)
in
out
push
jbe
xchg
push
xchg
shr
arpl
call
hlt
repnz
mov
dec
enter
mov
gs
stos
pop
adc
fnclex
adc
xchg
cmp
inc
add
dec
aaa
add
in
push
add
jns
jmp
dec
in
sub
or
or
xchg
in
fcmove
cmps
push
(bad)
jle
and
cli
imul
jmp
inc
pop
fwait
paddusw
nop
dec
mov
ret
es
popa
sbb
push
ins
pop
call
jae
pop
loopne
ret
xchg
stc
jno
mov
xor
outs
jmp
xchg
js
jg
sbb
(bad)
xchg
xor
aad
sahf
mov
inc
adc
add
stos
aam
leave
jmp
cmp
jnp
ret
xor
dec
push
pop
(bad)
lods
pushf
retf
test
jo
mov
std
fistp
xchg
or
dec
cmp
jmp
adc
int3
clc
stos
mov
aam
jg
cwde
inc
or
test
mov
aaa
lods
(bad)
es
cmp
out
je
ret
shl
mov
(bad)
imul
out
pop
mov
ja
xor
jae
mov
pop
jecxz
cmp
jmp
cmc
std
rol
and
call
xchg
test
daa
retf
xchg
lods
test
fidiv
xchg
xchg
mov
and
cmp
or
outs
jl
fistp
dec
je
clc
sub
in
mov
sti
out
push
mov
cmp
data16
adc
sahf
push
mov
rcr
pop
cmp
xchg
mov
ret
xor
push
mov
adc
(bad)
mul
je
pminub
(bad)
cmp
or
mov
test
mov
js
sbb
pop
push
xor
or
sub
xor
lds
fwait
sbb
test
or
rcr
sbb
and
sub
xchg
sti
scas
int3
or
(bad)
out
aam
movs
and
push
in
mov
(bad)
movs
fsub
jnp
cmovne
stos
adc
push
shl
adc
inc
js
stos
into
cmp
and
jns
xor
jg
jle
mov
inc
ds
out
fist
cmp
pusha
add
sbb
mov
dec
adc
bound
adc
xor
hlt
call
or
xchg
jmp
(bad)
inc
add
dec
pop
jno
push
mov
cs
call
or
mov
in
in
mov
sbb
cwde
cmp
pop
cdq
popf
call
xor
retf
and
sub
in
cmp
sub
mov
mov
mov
stos
and
inc
cdq
lfs
jno
xor
mov
xchg
test
call
sbb
loop
cs
xchg
pop
xor
repnz
pop
push
mov
aam
jbe
xor
std
and
adc
jnp
int
in
add
add
shl
mov
mov
shr
mov
cmc
int
sbb
dec
cmps
scas
pop
das
xchg
mov
lock
jle
pop
popa
cmp
xchg
repz
ins
aad
int3
popf
fwait
(bad)
movs
xchg
mov
pop
jge
sbb
mov
in
pop
out
pop
ins
ins
dec
inc
fild
mov
dec
popf
cmp
mov
jo
fs
(bad)
movs
pusha
in
jae
out
sbb
out
aam
or
test
cmp
leave
jbe
rcr
and
jmp
fsubr
xlat
push
das
mov
jb
sub
fs
inc
(bad)
push
mov
sbb
jmp
cmp
aad
sub
jge
jnp
mov
sbb
(bad)
add
cmc
push
sbb
mov
std
sbb
cld
call
mov
popa
sub
inc
test
mov
push
adc
ss
push
ja
cmc
jge
push
and
imul
retf
(bad)
or
adc
jo
pop
dec
mov
sti
call
mov
add
call
jno
pop
sahf
or
pop
ins
out
leave
sti
and
imul
jae
pop
or
movs
inc
js
bound
or
jno
sbb
sti
clc
dec
aad
sub
lds
mov
loop
jecxz
sub
rcl
xchg
cmp
lahf
hlt
ret
dec
pop
or
in
lds
mov
arpl
aad
push
mov
call
dec
icebp
push
xchg
jmp
cs
add
(bad)
es
into
cmp
rcl
pusha
or
jle
xchg
jp
gs
jl
jb
xchg
or
cwde
cmp
jmp
mov
xor
xchg
cwde
out
mov
inc
mov
pop
sub
je
fcmovnbe
pop
fcmovne
xchg
div
in
lods
stos
dec
imul
pushf
or
(bad)
iret
fsub
popf
(bad)
popa
jmp
dec
sbb
jo
call
inc
pushf
nop
mov
or
daa
jl
retf
inc
sub
les
addr16
(bad)
xchg
ins
into
jbe
cmp
ret
fucomi
sub
(bad)
and
sbb
test
rcl
and
test
or
jmp
mov
mov
addr16
cdq
cmp
push
push
int3
into
or
ret
xchg
mov
cmp
cmc
cli
jb
call
inc
scas
xchg
sbb
cld
xlat
retf
movs
jmp
out
mul
stc
fld
jnp
sahf
mov
inc
jmp
(bad)
lea
repnz
fistp
mov
adc
push
nop
fs
js
mov
outs
fidivr
adc
push
in
pop
shr
sbb
fs
mov
xor
out
mov
cmp
pop
xor
mov
mov
push
test
int3
mov
ss
js
mov
out
test
dec
or
aam
iret
pushf
add
in
or
rcr
mov
cs
loop
or
in
mov
xchg
or
movs
mov
inc
popf
dec
retf
jbe
inc
inc
retf
mov
imul
mov
imul
fld
rcr
je
pop
into
mov
add
sbb
into
sub
cmp
cmp
add
jns
icebp
add
push
mov
sbb
push
(bad)
fcom
stos
test
and
bound
inc
int
fcmovb
add
pop
retf
(bad)
sti
mov
add
stos
and
(bad)
jmp
adc
int3
sbb
cmp
push
add
not
push
aas
pop
stos
dec
sub
ds
(bad)
bts
shl
js
fwait
adc
js
rcl
xlat
mov
int3
mov
lock
nop
jecxz
xchg
arpl
fwait
push
pop
adc
fnstcw
test
iret
cs
mov
shl
adc
mov
xor
sbb
loope
mov
or
enter
sbb
add
mov
mov
mov
stc
ins
clc
out
fwait
xchg
jle
ficom
scas
cmps
out
cs
outs
push
nop
out
add
mov
or
stos
jmp
mov
mov
sub
stc
shl
mov
pop
pop
push
jecxz
fnstenv
(bad)
popf
fisttp
int3
sbb
push
xor
imul
shl
sbb
mov
add
add
cmp
xor
clc
xor
pop
cmp
loopne
add
pop
pop
pushf
mov
fimul
inc
push
jge
scas
pop
movs
loopne
sub
dec
ja
mov
dec
mov
adc
test
es
sbb
add
and
add
pop
lea
gs
nop
loope
addr16
(bad)
outs
popa
(bad)
nop
sbb
jp
pop
dec
dec
adc
or
bound
sbb
push
xor
and
pop
(bad)
mov
test
jns
mov
sbb
cmp
or
xor
in
(bad)
(bad)
ror
sub
xchg
jg
cmp
adc
stos
inc
dec
jp
mov
std
sub
ja
xor
adc
fld
sbb
pop
scas
cmc
rcr
call
(bad)
ds
dec
xor
les
(bad)
ficom
lods
dec
dec
pop
and
ret
and
mov
in
je
scas
cld
xor
(bad)
test
mov
aam
sub
test
inc
(bad)
mov
pop
push
pop
xor
or
fs
or
pop
and
xchg
mov
outs
stos
mov
or
jg
pop
test
sbb
xor
pop
mov
fiadd
das
mov
das
out
sbb
pminsw
mov
lods
push
movs
cmc
sar
in
xlat
dec
dec
pop
xor
mov
jle
in
mov
cmp
sbb
inc
cmp
fwait
sbb
into
ins
imul
ss
gs
jo
cdq
fmul
dec
cmp
or
sti
cwde
out
cld
xor
test
ins
and
test
pop
dec
push
cmp
out
add
push
aas
leave
jmp
mov
mov
ds
xor
das
je
repnz
ret
aaa
xchg
push
popa
or
dec
inc
es
jb
scas
dec
add
movs
into
outs
aad
adc
loop
ds
(bad)
aaa
outs
cmp
push
daa
adc
cmc
mov
shl
inc
pop
cmp
sub
sub
lea
mov
mov
adc
xchg
add
sbb
fiadd
lods
mov
inc
scas
fsubr
push
adc
mov
sbb
add
add
popa
dec
mov
jae
mov
loopne
dec
in
in
jl
cmc
dec
jae
dec
xor
or
rol
pop
sar
xor
out
sti
push
jbe
mov
fisttp
daa
movs
cmp
jl
stc
jl
sahf
push
mov
or
pop
push
xor
hlt
shl
sahf
lea
lods
jecxz
jle
repnz
loop
inc
xchg
popf
fwait
pushf
pop
shl
push
bound
and
dec
lahf
adc
inc
pop
fisttp
nop
out
fimul
xor
or
int3
scas
mov
adc
xchg
mov
xor
mov
fldz
xchg
js
mov
out
pop
fstp
pop
hlt
call
out
lds
cwde
pusha
mov
stc
pop
push
inc
xchg
adc
pop
xor
mov
or
addr16
xchg
aas
(bad)
nop
mov
aas
pop
push
jns
mov
loope
(bad)
cmc
pushf
fst
inc
retf
bound
das
retf
pushfw
jnp
pop
sbb
clc
cmp
daa
pop
mov
stos
pop
not
shr
dec
push
shr
mov
repnz
push
xor
(bad)
push
xchg
push
pop
sar
pusha
rol
jecxz
stos
mov
cmp
repz
aam
pusha
test
mov
push
push
or
fstp
daa
fbstp
(bad)
cli
aas
mov
push
test
dec
xor
sbb
pop
loope
xchg
jns
in
in
js
outs
pop
in
lahf
outs
fstp
daa
cmp
test
mov
das
jp
mov
daa
adc
adc
ss
pop
mov
push
iret
leave
cmp
std
test
pusha
sub
push
popa
mov
shl
cmp
add
test
dec
or
push
rcl
adc
adc
fnstsw
mov
inc
loope
or
jnp
in
and
retf
cmp
arpl
dec
and
adc
jae
fnstcw
dec
fdivr
ret
les
adc
jge
xchg
mov
mov
mov
pusha
push
call
mov
push
pop
lds
dec
aas
bound
push
adc
add
mov
pop
in
mov
mov
out
test
(bad)
sbb
inc
mov
xor
ror
pop
dec
mov
mov
mov
jl
xlat
pop
enter
pop
cwde
jecxz
lock
or
inc
sar
cld
(bad)
cwde
int
mov
aad
jmp
or
sbb
out
stos
repz
sbb
test
pop
mov
(bad)
into
jae
addr16
clc
add
scas
mov
imul
enter
jp
jns
sub
fnsetpm(287
mov
std
iret
sbb
fs
out
adc
xchg
sbb
pop
fwait
out
fcmovnbe
xchg
cmp
ss
nop
and
mov
lock
pop
jae
mov
pop
add
or
jmp
pop
push
out
leave
test
cmp
xchg
dec
(bad)
mov
mov
scas
jns
mov
xor
and
je
mov
rcl
mov
cli
fdiv
je
sar
frstor
imul
inc
cmp
ret
or
xchg
(bad)
jbe
std
sbb
inc
retf
fs
fs
test
repz
test
and
ins
cmc
lahf
jg
rcr
sbb
xchg
outs
or
mov
sar
jns
push
mov
lahf
mov
dec
dec
mov
push
jno
dec
jp
cmp
(bad)
jmp
lds
test
sbb
jo
push
fstp
cmps
scas
xor
aad
or
sub
mul
mov
ins
call
xchg
jnp
jle
mov
cs
inc
pop
in
in
je
ins
xchg
sbb
or
sub
and
fstp
fstp
jns
push
rcr
sub
sub
fwait
enter
adc
and
ss
xor
je
imul
mov
data16
ds
addr16
popa
xor
cmp
fs
mov
mov
jg
dec
(bad)
jne
add
and
or
mov
sub
push
adc
mov
push
fild
jno
xor
mov
jmp
or
jae
push
jecxz
mov
loopne
pop
jp
xchg
(bad)
ja
fisubr
out
pop
jb
in
es
in
cwde
adc
dec
cmc
sbb
dec
mov
xor
fistp
mov
mov
dec
xchg
stc
loope
in
inc
cmp
clc
fdivr
jg
inc
mov
dec
hlt
dec
repz
vpsadbw
sub
test
in
ss
and
cmp
shr
cmps
test
add
add
xor
and
jecxz
mov
dec
fmul
and
add
movs
adc
popa
and
(bad)
pushf
sbb
(bad)
fnstsw
in
leave
cmp
sub
out
pop
xor
mov
test
or
bound
and
inc
call
sahf
cmp
add
push
ds
xor
mov
xchg
cmp
cmp
mov
add
repz
push
lock
pop
mov
loopne
sub
pop
push
adc
jp
jg
push
scas
or
pop
jle
xor
xchg
out
inc
inc
inc
aad
xchg
fld
push
push
imul
push
sub
mov
ds
add
stc
scas
aam
mov
je
jb
aas
push
mov
xor
pop
jns
fadd
or
in
mov
int
cwde
xchg
jns
push
sahf
mov
inc
dec
mov
xchg
popa
jno
in
pushf
dec
sbb
jbe
adc
fdivrp
xchg
dec
out
popf
gs
push
sub
movs
aad
push
int
push
pop
mov
out
fs
push
ja
inc
in
out
adc
dec
popf
adc
scas
xchg
sub
arpl
stos
mov
or
mov
lea
dec
and
mov
in
push
adc
arpl
je
jns
xor
cld
jg
jg
push
xchg
cmps
push
mov
popa
and
inc
adc
cmc
out
cmp
(bad)
jmp
and
and
and
mov
sbb
sti
(bad)
test
(bad)
scas
mov
dec
xlat
scas
jb
cmp
pop
dec
in
test
gs
jb
xor
not
std
xor
or
push
add
scas
sub
ror
je
in
adc
aam
pop
xchg
clc
adc
out
ins
mov
scas
cmp
mov
add
rcr
jg
fist
or
daa
cli
jl
movs
sub
mov
ret
arpl
adc
xor
fwait
cli
and
pop
inc
sbb
in
out
push
test
add
xchg
and
aam
neg
jle
sahf
adc
mov
in
gs
es
fadd
imul
sub
sbb
dec
dec
imul
xchg
sar
add
or
sbb
in
aam
adc
sub
or
mov
pop
mov
pop
mov
push
lahf
push
mov
movs
call
push
ror
in
add
sub
out
jl
fisttp
aad
or
mov
mov
ret
pop
into
clc
test
retf
sahf
(bad)
pushf
aaa
test
scas
push
shl
or
(bad)
and
fld
pop
push
push
cmp
fs
jb
cdq
inc
fld1
arpl
stos
sub
dec
dec
xchg
jns
dec
mov
sub
jecxz
fadd
jae
xchg
cmps
into
and
addr16
lahf
fisubr
stos
cdq
stc
in
ret
std
jnp
sub
adc
rcl
test
xchg
pop
xchg
cmp
mov
jecxz
movs
fimul
das
push
mov
add
fcomp
add
mov
add
cdq
shl
jae
mov
lods
int3
pusha
sub
sbb
push
inc
out
pop
movs
sub
fistp
sti
pushf
in
fwait
popa
jl
cmp
fld
xchg
push
addr16
inc
or
call
gs
test
adc
or
jnp
push
(bad)
outs
aad
lods
push
mov
outs
sti
mov
lock
cmps
dec
ja
cs
in
push
dec
fnstcw
jb
(bad)
add
mov
inc
add
aas
mov
sbb
icebp
scas
repz
fisub
jle
imul
shr
enter
ins
pop
(bad)
jnp
mov
cs
jmp
xor
sub
sbb
dec
in
(bad)
xor
fst
push
mov
enter
sbb
dec
xor
arpl
xchg
sar
fistp
movs
mov
out
rol
push
in
aad
sub
std
jae
outs
stos
ret
or
aad
in
mov
jo
in
popf
jmp
pop
cmp
inc
adc
repz
push
call
pusha
xchg
dec
in
mov
or
mov
pop
ja
jne
xchg
scas
xor
les
bound
mov
(bad)
dec
lahf
out
popa
retf
pop
dec
add
xchg
mov
inc
push
cmp
mul
sti
idiv
or
retf
stc
enter
mov
out
test
jne
retf
push
xor
inc
popf
cs
ret
add
shl
call
daa
hlt
lock
imul
add
mov
int3
cmps
test
cdq
cmp
hlt
je
lods
dec
std
mov
scas
xlat
pushf
into
popa
cmp
int3
xchg
add
ds
adc
sti
loop
mov
mov
mov
or
out
rcr
or
aaa
in
ins
pushf
sub
in
cmps
push
outs
jo
push
cmp
rcr
adc
xor
retf
mov
data16
imul
push
jg
scas
sbb
sbb
popf
das
test
xchg
sub
out
retf
fs
clc
shr
push
sar
rcr
idiv
mov
cmp
daa
sub
int
cmp
(bad)
mov
aam
neg
into
sub
ins
xor
ins
mov
and
push
stos
push
ret
push
push
dec
imul
lds
test
imul
sub
nop
lods
je
(bad)
jmp
stc
push
in
cmps
mov
and
leave
sar
inc
pop
mov
mov
mov
sub
sub
push
pop
adc
aad
test
aas
gs
cmps
dec
jno
mov
jecxz
enter
dec
ds
mov
pop
push
or
popf
rcl
or
xor
aad
fwait
aaa
cmp
retf
call
pop
adc
xchg
(bad)
pop
aam
cmp
jecxz
mov
inc
sbb
test
ret
jne
loopne
xchg
mov
aas
push
mov
clc
adc
and
clc
push
mov
jne
adc
xor
call
ret
xchg
push
out
cmc
shr
sub
xchg
add
jne
repnz
in
loope
int3
fild
xchg
cmp
in
xchg
add
dec
adc
mov
mov
mov
xor
shl
shl
cmps
test
fwait
ret
js
cli
in
mov
cmc
push
ins
dec
inc
adc
dec
movs
arpl
sub
dec
loope
es
inc
pusha
and
repz
movs
movs
outs
cmp
sbb
ins
mov
sahf
xor
sub
popf
inc
mov
test
(bad)
fdiv
lods
(bad)
daa
cmp
and
in
add
out
cld
outs
jl
daa
rcl
xor
push
rol
aam
icebp
adc
mov
(bad)
jno
into
gs
pop
out
add
cmp
les
(bad)
hlt
mov
mov
mov
in
retf
cld
scas
jno
out
test
sti
ss
inc
fsubr
mov
xor
jp
inc
add
scas
push
xchg
out
jl
and
rcr
rcr
push
cmp
jle
outs
imul
pushf
push
pop
in
adc
aaa
jl
xchg
jmp
mov
leave
inc
push
add
pop
aad
jo
call
sbb
(bad)
pop
mov
xchg
mov
push
std
mov
mov
(bad)
cs
mov
pop
mov
mov
mov
push
jge
pop
jns
jnp
scas
dec
test
les
fcomp
xchg
cs
push
scas
xchg
cmps
mov
mov
xor
cmc
js
jbe
jnp
fdivr
dec
fwait
das
cli
xchg
dec
jb
daa
xor
fwait
xchg
and
imul
push
imul
xchg
sbb
push
pop
retf
lds
mov
in
stos
retf
jecxz
out
neg
in
and
and
ja
pop
aaa
sbb
jns
mov
daa
bound
cmp
jno
sbb
dec
lods
push
bound
sbb
in
test
mov
leave
xor
cmps
sbb
repz
sub
ror
mov
ficom
retf
sub
mov
(bad)
hlt
scas
xchg
call
mov
jne
mov
out
js
mov
add
ror
sub
sub
retf
(bad)
jns
sbb
inc
or
fs
retf
dec
mov
arpl
outs
mov
lahf
and
lea
ins
inc
mov
mov
div
dec
jbe
das
sub
push
imul
pop
push
sub
loop
ret
ret
sub
push
in
shr
ja
addr16
add
jecxz
inc
xchg
sub
mov
jge
ins
jp
and
fstp
or
inc
adc
jbe
sti
or
in
mov
pop
or
repnz
les
(bad)
in
scas
mov
and
and
add
or
fadd
mov
push
sti
xor
ret
xor
repnz
xchg
test
mov
je
(bad)
(bad)
jg
test
not
jae
ins
mov
(bad)
xchg
jnp
xor
or
call
adc
pop
out
pop
xor
or
outs
dec
and
in
into
ret
add
imul
lods
shl
and
(bad)
arpl
inc
sub
jo
fist
sub
mov
int3
pop
leave
int
sbb
sub
jo
mov
popf
aad
jb
add
cmp
pop
jbe
pop
ret
mov
inc
jne
xor
xchg
dec
push
cdq
mov
mov
xchg
cs
outs
sbb
aaa
mov
dec
test
sbb
jmp
int3
retf
pop
mov
add
push
mov
aaa
test
mov
inc
and
aam
sbb
(bad)
fs
mov
xchg
cmps
out
pop
sub
fs
retf
jo
jnp
repnz
and
sar
(bad)
sbb
xchg
pusha
retf
fnstcw
jbe
fdiv
stos
or
pop
lds
push
(bad)
retf
xchg
popf
mov
add
mov
mov
fistp
cwde
jne
add
mov
push
fidivr
cdq
jmp
clc
fdiv
test
lds
push
pop
mov
repz
fistp
(bad)
loope
fadd
ret
repnz
push
adc
add
add
(bad)
leave
cmc
mov
mov
push
retf
xchg
mov
movs
pop
push
js
dec
fdiv
jb
and
or
xchg
cmc
cli
lahf
and
ja
mov
pop
adc
sub
and
jp
sbb
arpl
(bad)
hlt
jne
mov
in
js
ja
push
adc
xchg
xchg
mov
sahf
movs
in
sub
out
adc
mov
xchg
into
int3
jl
sub
mov
stos
add
jbe
mov
mov
div
std
cmp
adc
cld
adc
push
mov
rol
(bad)
out
xchg
sub
or
cli
mov
sar
sbb
jnp
ret
out
movs
or
les
lock
not
(bad)
nop
(bad)
fucomip
fnstcw
mov
mov
mov
add
outs
cmp
xlat
xchg
dec
or
jne
je
fcmovnu
cld
add
addr16
addr16
jne
lds
cmp
arpl
xor
inc
stos
cmp
lods
and
in
sahf
pop
mov
je
loope
jno
out
loop
xor
jg
or
inc
or
(bad)
in
test
add
jg
and
cmp
sub
lahf
aaa
les
out
or
repz
fist
push
jbe
push
cmps
xor
jb
or
pop
fwait
fs
inc
out
fisttp
lahf
mov
cwde
or
push
fwait
shr
jge
pop
fnstcw
pmullw
jno
jno
jmp
(bad)
jae
nop
gs
mov
cmp
test
test
pop
or
adc
push
ss
neg
inc
out
jno
mov
je
pop
lods
push
stc
ja
inc
cld
cld
cmp
push
int3
adc
pop
cmp
cmp
daa
out
mov
jecxz
popf
dec
popa
dec
ficomp
push
(bad)
shr
fsubrp
and
scas
inc
adc
jle
cdq
sar
jge
std
cmp
arpl
mov
fstp
mov
sahf
jmp
xor
fcom
fidiv
push
mov
pop
repz
cdq
and
stos
sbb
sub
mov
jmp
sub
pop
out
(bad)
into
jns
push
xor
mov
ss
jo
push
xor
out
and
xchg
imul
stos
pop
std
mov
push
out
paddw
push
dec
inc
mov
je
(bad)
pusha
jecxz
mov
mov
shl
addr16
stos
dec
cmp
and
movs
loop
icebp
xlat
jmp
rcr
mov
jl
lods
push
xchg
cmp
cmp
sahf
add
stos
xchg
cmp
mov
ret
loop
retf
es
inc
imul
or
push
or
xor
pop
inc
dec
jmp
stos
push
int
cmps
jp
inc
adc
fcomp
dec
cmp
sbb
xor
push
shr
test
dec
jp
pop
(bad)
(bad)
ror
add
cmc
xor
ss
fstp
mov
mov
jle
repnz
int3
retf
or
pop
push
jl
out
adc
sbb
push
mov
xchg
and
pop
out
mov
icebp
xchg
inc
xchg
mov
mov
sbb
xchg
sub
popf
sub
daa
sahf
js
pop
test
shl
cmp
les
retf
pop
daa
add
push
ja
mov
sub
jge
sbb
(bad)
ja
mov
inc
mov
in
add
or
shr
retf
mov
mov
or
xor
fwait
repz
add
or
jmp
daa
or
cmps
int3
iret
rol
sar
push
stos
xchg
imul
js
enter
cmp
call
cmps
jle
and
jb
es
retf
das
mov
xchg
rcr
stos
in
or
test
stos
dec
and
inc
mov
sbb
mov
pop
cmps
loopne
lock
xadd
xchg
xchg
fistp
add
mov
mov
push
mov
lds
mov
xor
ret
xlat
xchg
xchg
mov
pop
pop
ficom
fs
and
add
shr
cmps
inc
jecxz
and
ja
jno
test
cmps
inc
aaa
jmp
movs
mov
pop
or
sub
(bad)
sbb
scas
ds
inc
fsubr
retf
adc
mov
and
int3
inc
mov
sub
add
rcr
imul
mov
push
adc
push
stos
jp
xor
es
adc
push
mov
test
call
inc
or
jbe
xor
jno
idiv
jne
dec
setbe
repnz
xchg
out
(bad)
ins
dec
outs
lods
lods
sbb
mov
xchg
mov
lds
mov
lods
enter
(bad)
or
lock
and
jmp
and
mov
add
loop
sbb
xchg
mov
les
imul
or
sbb
lahf
test
mov
dec
outs
(bad)
pop
pop
(bad)
arpl
pop
das
fnsave
popf
and
push
ins
sbb
xchg
hlt
dec
jnp
pop
lods
enter
and
inc
pusha
shl
and
add
sub
in
or
shr
mov
aaa
loope
dec
mov
nop
pop
retf
xchg
cmp
daa
outs
aaa
dec
add
cmc
imul
je
adc
inc
sti
jp
lods
inc
dec
xor
je
cmp
repnz
(bad)
fdivrp
outs
neg
and
out
add
push
sbb
xlat
pushf
jmp
jns
lock
popf
mov
(bad)
imul
into
cli
les
pop
psubsw
out
add
imul
mov
dec
ds
lss
ss
sti
hlt
xor
fcmovbe
std
daa
(bad)
out
shl
dec
sbb
and
jle
sar
dec
inc
outs
or
dec
mov
int
mov
sub
call
xor
push
mov
sar
(bad)
and
xor
stos
add
idiv
div
push
pushf
mov
mov
or
pop
xor
iret
(bad)
in
cmovno
aaa
repz
xor
xor
mov
fwait
retf
pop
inc
ret
jg
sub
sub
fdivr
ins
out
sahf
dec
dec
or
xchg
adc
dec
(bad)
mov
repnz
and
sbb
mov
std
sub
sbb
jl
sbb
in
shr
add
lds
cmp
rcl
xchg
movs
inc
jne
in
cmp
popf
mov
(bad)
hlt
int3
ret
out
fbstp
imul
mov
pop
lds
mov
inc
xor
or
icebp
jno
cmovbe
std
pusha
cdq
jmp
ins
dec
cdq
adc
stos
mov
test
add
cmc
xor
adc
sbb
(bad)
call
mov
sahf
je
mov
pushf
push
xlat
push
cmp
hlt
mov
loope
out
repz
cvtps2pi
mov
(bad)
loop
out
mov
cmps
mov
fs
ret
(bad)
test
add
push
and
arpl
or
add
lock
cmp
aam
cmp
pop
inc
rcl
or
add
add
jg
add
ja
mov
outs
pop
jmp
pop
xchg
mov
or
push
adc
fcomp
enter
mov
pop
xor
push
fnstcw
out
(bad)
inc
popf
pusha
pop
mov
cmp
cmp
adc
stos
push
mov
cmp
addr16
dec
mov
popf
ss
xor
(bad)
xchg
mov
aaa
mov
cmps
fimul
mov
aad
hlt
add
out
xor
movs
das
xchg
test
cmp
retf
pop
jmp
shl
xchg
inc
scas
mov
or
repnz
jmp
dec
jp
mul
mov
loopne
pop
and
loope
jo
in
loope
mov
sbb
(bad)
mov
jae
jge
jb
mov
xor
push
lods
hlt
mov
jo
mov
rcr
mov
push
ror
jb
jae
pop
sti
lods
jmp
fisttp
dec
cld
(bad)
imul
pop
jp
jecxz
jl
xchg
fwait
std
dec
add
or
ja
loopne
into
call
cld
jge
fisub
push
push
mov
pop
push
imul
fsub
mov
lods
retf
in
pop
pushf
arpl
fimul
shl
fdivr
das
hlt
sub
lods
jno
popf
or
pop
pushf
dec
dec
xchg
add
mov
mov
repnz
pop
test
(bad)
push
bound
lea
sbb
pop
jge
rol
push
in
add
jns
mov
ja
retf
(bad)
mov
lea
lahf
add
fisubr
xchg
push
add
int3
popa
xor
data16
sbb
mov
fisttp
jmp
push
cmp
dec
out
shr
retf
push
cmp
push
dec
push
aad
or
xchg
jge
mov
cmp
stos
cmp
adc
cmc
in
adc
dec
mov
mov
xchg
dec
(bad)
xchg
es
in
adc
retf
adc
call
sar
pop
pop
out
jle
loope
push
push
arpl
adc
add
push
jmp
push
jmp
cdq
loop
push
mov
sbb
ror
push
mov
loopne
(bad)
cmp
cmp
lock
repz
je
loope
rcr
adc
pop
or
cli
addr16
out
mov
movs
call
pop
ds
xchg
sub
adc
xchg
clc
mov
dec
push
jecxz
out
mov
mov
jbe
and
outs
xor
xchg
sbb
pop
(bad)
jae
push
ds
sub
ds
push
pop
popa
popf
sub
cmc
mov
adc
cmc
fcmovnu
inc
bswap
sub
xchg
stos
pop
out
push
shl
adc
adc
xchg
mov
out
sub
int
push
repnz
inc
sbb
mov
into
daa
mov
jae
add
jmp
jns
stos
(bad)
int
cwde
mov
jmp
sub
dec
pop
jge
sbb
in
add
ret
sbb
pop
jbe
fsubr
sti
lods
push
sub
push
xor
lahf
adc
add
mov
(bad)
(bad)
out
outs
jbe
ss
push
popf
xor
or
neg
or
outs
mov
ret
push
shl
sahf
xlat
cld
pop
xor
push
scas
retf
(bad)
neg
xchg
fs
(bad)
mov
stos
cli
out
sub
add
fwait
aam
inc
lods
adc
and
jp
and
or
je
cmp
adc
and
aam
add
and
repnz
dec
bound
fsub
daa
popf
sbb
cdq
div
push
fdivr
push
arpl
jbe
sub
scas
cwde
mov
add
adc
xchg
fwait
retf
sti
pop
imul
popa
adc
cmp
cmp
xor
aaa
aam
enter
mov
retf
mov
ret
lock
out
pop
sbb
push
mov
out
cmps
(bad)
rol
mov
lock
lock
dec
fisttp
out
add
sbb
xor
mov
or
cdq
repz
cli
pop
or
jb
pop
xor
loopne
movs
shl
mov
aas
push
mov
sub
adc
outs
cmp
mov
(bad)
push
in
loope
mov
ins
inc
in
mov
xlat
push
ror
add
std
ins
pop
sub
mov
cwde
js
dec
sahf
retf
jg
and
cmp
push
and
mov
dec
test
adc
mov
lea
enter
and
ss
xchg
and
lock
outs
iret
adc
int3
das
out
mov
fld
ins
cmp
cs
lods
iret
out
sub
out
bound
and
into
imul
and
pop
xor
push
mov
mov
and
(bad)
out
jae
rol
mov
in
jge
jl
push
pop
les
jne
adc
push
mov
test
add
dec
xor
jle
cmp
adc
cwde
mov
jnp
scas
das
popa
aam
push
les
cli
push
repnz
in
fmul
movs
lods
test
mov
adc
call
fst
stos
add
repz
std
sub
icebp
mov
lods
in
and
scas
call
inc
push
sbb
lds
lds
and
call
daa
fst
mov
mov
out
mov
mov
mov
jo
mov
mov
sub
cld
add
push
or
cmps
ins
out
nop
and
sbb
pop
cdq
setns
call
sbb
rol
xchg
and
call
sub
mov
test
mov
cmps
retf
fist
imul
(bad)
sub
pusha
scas
mov
(bad)
in
jnp
push
add
test
mov
xor
test
inc
sbb
jns
sub
aad
dec
aad
test
mov
add
cld
pop
push
lock
retf
stos
jge
mov
ror
push
cmc
es
adc
jb
sbb
shl
loop
sbb
mov
pushf
mov
xor
mov
test
(bad)
fiadd
mov
mov
xchg
pop
cmps
xor
adc
cmc
pushf
scas
rol
loop
jg
sub
adc
lods
add
xchg
lods
cdq
jle
xchg
xor
ror
sbb
pop
mov
pmullw
sub
sub
pop
pop
(bad)
push
cwde
xchg
retf
jne
retfw
addr16
cwde
jecxz
mov
mov
lods
push
call
jmp
movs
pop
loopne
mov
fiadd
mov
or
mov
ss
cmp
add
repnz
in
and
in
add
stc
push
outs
pop
sub
dec
cmp
mov
cmp
cwde
int
cmp
sub
fmul
(bad)
jmp
push
push
pop
pop
jo
dec
popa
fldenv
iret
into
cmp
in
add
xchg
or
push
push
dec
sub
mov
mov
sub
jmp
in
and
adc
jnp
fst
addr16
pinsrw
or
pop
fs
pop
push
jl
cmp
cmp
mov
sub
cmp
dec
mov
xchg
sbb
ds
test
ins
pop
push
push
sub
ins
jne
out
cmp
outs
mov
jmp
(bad)
xchg
jns
cmps
add
xchg
lds
jecxz
pushf
dec
mov
mov
cld
pop
js
mov
xor
pandn
mov
rol
or
jno
adc
aad
xchg
jmp
pusha
ins
xchg
mov
and
push
pop
je
xchg
sbb
inc
and
jo
iret
mov
push
xchg
js
cmps
push
pop
sti
enter
out
xchg
or
jge
or
adc
adc
daa
add
stos
jmp
sbb
loope
dec
icebp
mov
pop
stos
in
sub
xlat
pop
fisttp
cmp
pop
dec
sar
mov
mov
pop
out
add
ins
rcr
pop
add
cmp
add
cmc
icebp
dec
ds
or
mov
sub
adc
jmp
and
adc
icebp
shl
xor
jl
test
cmp
les
out
dec
int
cli
xchg
(bad)
enter
fsub
movs
test
jmp
adc
pop
add
cmps
xor
sahf
fcmovb
pop
sub
inc
fistp
lods
jl
or
es
add
aad
jae
add
cdq
xchg
sbb
(bad)
mov
arpl
pop
repnz
ret
adc
pop
push
adc
ja
in
push
fild
mov
sbb
aad
jnp
mov
sub
cmp
loope
push
pop
stos
sub
aam
mov
pop
cld
inc
test
into
cs
or
xor
jae
stc
int3
xchg
js
stos
dec
pop
(bad)
popa
lods
in
xor
push
pop
loopne
shl
sub
xchg
add
fcom
ror
(bad)
xchg
fptan
pop
or
(bad)
pop
jp
inc
mov
inc
add
mov
mov
jecxz
out
rcl
loopne
rcr
rol
in
lock
mov
cmp
out
sub
fstp
daa
scas
sbb
dec
scas
dec
call
jb
mov
push
xchg
fs
aam
and
call
iret
add
imul
pop
leave
jl
das
sub
xchg
fstp
leave
inc
mov
jmp
mov
xor
mov
rol
dec
jmp
call
sub
add
into
es
adc
in
(bad)
adc
clc
out
icebp
xor
stc
push
retf
popf
mov
push
push
cmp
jmp
push
mul
pushf
in
in
cmps
sbb
jbe
dec
les
in
push
xor
jle
aam
out
stos
out
shr
cdq
xchg
aaa
les
jg
cdq
dec
retf
cmp
sbb
bound
jb
add
sub
mov
push
sub
retf
pop
jecxz
stos
pop
mov
mov
dec
jl
mov
das
stos
sbb
mov
in
in
out
fdiv
pop
fld
cdq
ret
sti
jns
call
aas
(bad)
xchg
dec
mov
and
stos
and
fidivr
xchg
mov
push
push
aam
pop
test
shl
lods
pusha
cld
mov
movs
push
sbb
mov
fsubr
int
popf
lea
pop
mov
stc
daa
push
stos
inc
leave
scas
daa
(bad)
cli
mov
std
cdq
mov
out
clc
js
push
xchg
aas
pop
in
inc
lods
pop
mov
xchg
test
adc
push
push
adc
out
in
cmp
das
sti
push
leave
out
push
xchg
(bad)
stos
push
jns
rcl
push
scas
aas
mov
std
retf
dec
cdq
cmps
mov
leave
int3
mov
fs
std
lea
push
call
outs
int
push
xchg
in
adc
pop
add
pop
in
in
cli
dec
add
ret
and
or
mov
ins
jp
jge
bound
stos
not
mov
mov
pop
push
xor
outs
(bad)
jp
mov
pusha
pop
mov
mov
test
push
mov
movs
ret
(bad)
out
mov
mov
ret
and
inc
xchg
push
xchg
lods
mov
cmps
ins
inc
mov
xor
sbb
clc
cmp
mov
cdq
cld
sbb
xchg
push
stos
popf
mov
test
je
outs
repz
sub
lock
jg
mov
jo
pop
cmc
and
out
mov
mov
xor
push
mov
dec
xchg
and
xchg
mov
push
sbb
xor
pop
pslld
rcl
fstp
and
call
hlt
int
dec
mov
adc
mov
sub
mov
pop
inc
pop
push
call
pop
push
(bad)
les
ficom
push
or
jbe
rol
test
cdq
inc
xor
inc
adc
mov
hlt
daa
hlt
stos
test
jp
test
or
cmp
cld
jns
leave
ror
gs
inc
xchg
adc
scas
fisubr
inc
lea
xchg
movs
stos
and
dec
fdivr
ins
pop
scas
xor
add
or
sub
scas
shl
ins
xor
test
aam
(bad)
jnp
in
mov
push
hlt
mov
mov
pushf
repz
sbb
add
mov
shr
sti
xchg
lea
int
add
scas
cdq
call
bound
jno
popf
dec
outs
in
retf
sbb
pop
xchg
jne
cs
in
add
push
rol
cwde
sahf
shl
je
pop
pop
push
and
pop
outs
pop
scas
sar
mov
lock
aas
push
fs
pavgb
ret
and
popa
inc
pushf
push
mov
cwde
xor
es
cmp
pop
ret
push
push
jp
pop
fld
or
loopne
mov
(bad)
in
pop
xchg
cli
push
enter
aad
je
jp
iret
xchg
lods
lahf
mov
mov
bswap
push
add
mov
jg
mov
push
dec
and
jle
lock
sub
mov
in
pop
and
retf
not
imul
xchg
mov
jg
adc
lods
mov
lds
cmp
push
test
jmp
scas
hlt
xchg
dec
inc
test
dec
push
mov
inc
or
mov
jno
jb
dec
jle
in
push
hlt
data16
(bad)
fs
jb
in
push
push
mov
aaa
rol
fsubr
out
mov
shl
inc
adc
mov
xchg
outs
add
fdivr
xor
sbb
inc
mov
movs
ins
xchg
rcr
cmp
mov
or
adc
(bad)
jp
mov
xor
jo
mov
pop
pop
popa
pop
or
sbb
and
ret
jp
push
test
add
aas
sbb
mov
xchg
fnstcw
in
or
(bad)
dec
test
popa
dec
jns
push
jg
dec
jg
fnstsw
pop
arpl
push
pusha
daa
mov
xor
push
ins
mov
lods
imul
cmps
push
repz
push
stos
mov
xor
shr
adc
mov
mov
push
lods
or
aaa
sub
lods
jne
dec
jns
cmp
fsubr
add
cmps
(bad)
cmp
cmp
cmp
push
fild
jmp
int
sub
jmp
out
cdq
in
dec
adc
ds
or
push
push
sti
adc
ss
out
scas
loop
loopne
outs
mov
xchg
minps
fdiv
pusha
fs
pop
inc
loope
mov
aas
pusha
add
pop
inc
outs
mov
cmps
mov
xchg
xchg
xor
sub
nop
pop
dec
fistp
loop
fdiv
(bad)
dec
in
pop
mov
rcl
pop
icebp
dec
(bad)
cmp
mov
push
mov
mov
dec
bswap
jmp
clc
dec
xchg
mov
jnp
sbb
and
sub
ins
pop
test
and
ins
popf
inc
out
push
inc
cld
in
and
shl
test
lahf
inc
popf
inc
mov
jp
inc
mov
or
push
push
js
mov
ja
xchg
push
rcr
imul
xor
shl
add
adc
dec
imul
sub
cwde
jl
sub
dec
sar
mov
xor
pop
fldenv
cmp
cdq
push
dec
xor
push
or
pusha
lahf
push
retf
pushf
bound
pop
jns
push
aad
pusha
std
xchg
mov
cmp
push
pop
arpl
cmp
bound
jb
push
aaa
xor
out
mov
imul
hlt
iret
nop
rol
pop
mov
inc
sti
mov
inc
adc
xor
xor
sbb
or
in
add
rcr
sub
sbb
lahf
pop
sub
sbb
out
test
mov
ror
jmp
fwait
mov
mov
es
or
mov
add
(bad)
pop
in
and
lods
int3
mov
cmps
jp
xor
jle
mov
xchg
movs
inc
jae
cmp
js
aad
fdivp
mov
jmp
mov
or
add
stos
xor
cld
std
and
mov
pop
rol
jecxz
push
dec
repnz
aaa
loop
push
xor
push
cmp
or
and
je
rcl
jecxz
int3
xchg
xchg
sub
rcl
jns
test
push
out
sbb
out
pusha
pushf
add
je
jmp
push
and
and
or
mov
jg
clc
in
(bad)
add
inc
mov
popa
xor
jl
push
pop
mov
push
es
fstp
add
in
and
dec
loopne
pop
mov
pushf
pop
mov
(bad)
pop
xchg
aam
ror
das
ret
push
out
xor
ret
sbb
mov
add
xchg
sbb
inc
cmp
mov
or
jle
mov
imul
es
push
cmps
sub
rcl
or
jle
ds
and
inc
test
es
add
inc
and
push
outs
(bad)
mov
xor
icebp
mov
test
mov
sub
pop
mov
aaa
and
adc
sub
imul
adc
movs
xchg
xchg
lods
lods
pop
aad
xlat
xchg
fist
dec
les
xlat
jae
jp
jecxz
xor
mov
add
mov
data16
jae
sti
xchg
outs
jne
out
pop
and
adc
add
mov
sub
jmp
jge
addr16
mov
jle
bswap
into
call
icebp
movs
sbb
sub
mov
adc
popf
loopne
iret
xchg
xchg
mov
pop
and
mov
repnz
lea
(bad)
cmp
call
xchg
cs
mov
sbb
nop
inc
xchg
unpckhps
sti
xor
pop
jae
lock
sub
mov
int
and
add
mov
adc
mov
sub
pop
les
push
inc
mov
callw
fwait
into
pop
push
call
ret
inc
and
cmc
sti
dec
or
dec
fld
add
and
jp
adc
dec
fdivp
cmp
inc
scas
loop
push
rcr
aad
and
pusha
xor
cmp
sub
enter
and
push
adc
inc
add
(bad)
xor
or
push
out
loope
aaa
div
call
in
inc
ret
nop
xlat
inc
sbb
sbb
add
das
lods
stos
pop
add
lock
cmp
ficom
inc
push
jge
mov
mov
enter
mov
cld
inc
rcl
rcl
pop
xchg
dec
sub
jae
mov
ficom
jno
lds
and
sbb
sbb
cli
fcmovnu
cmps
mov
mov
sbb
stc
dec
adc
test
sbb
mov
in
and
add
repnz
fnstcw
push
not
retf
scas
mov
or
(bad)
fisubr
mov
aam
popa
icebp
add
fiadd
mov
push
jae
adc
ins
jne
mov
mov
pop
movs
pmaddwd
addr16
mul
ss
inc
fnsave
mul
xchg
into
jecxz
mov
lahf
jmp
push
mov
xchg
jae
aaa
in
cli
adc
or
add
cwde
sub
ret
xchg
cmp
scas
dec
add
mov
imul
add
mov
jg
and
test
fisttp
push
xchg
dec
xor
addr16
push
cld
sbb
popa
aas
jbe
leave
lock
and
into
or
sbb
push
push
xchg
je
aas
sub
mov
jge
ret
rcr
jmp
imul
jp
push
popa
into
cmp
fwait
inc
mov
mov
int
jmp
cmp
iret
data16
lock
and
mov
dec
sbb
or
and
sub
les
out
mov
movs
jmp
bnd
xchg
jmp
into
sub
sbb
cdq
mov
or
adc
int
xlat
push
sbb
lods
cs
jge
scas
test
adc
xchg
push
sub
xor
and
ds
xlat
cmp
push
out
sub
sub
sub
inc
stc
dec
fwait
stos
push
ror
or
fnstsw
lods
fld
inc
jbe
cwde
xchg
call
nop
ins
out
in
iret
fnstsw
imul
sub
shr
jae
xor
(bad)
popf
shl
or
icebp
push
pop
in
cwde
shl
cmp
sub
adc
adc
xchg
xchg
js
pop
or
cmps
lods
pop
daa
pop
(bad)
outs
add
mov
loope
addr16
jns
xor
mov
dec
mov
mov
or
push
pop
adc
inc
fisub
in
adc
imul
mov
inc
dec
and
iret
mov
pusha
pop
xchg
adc
ja
xor
ins
and
les
cld
div
mov
sub
mov
loopne
jne
mov
jns
bound
jae
dec
cmc
aas
and
push
xor
jns
pop
ror
fcom
cmp
cmps
ins
xor
ss
aaa
dec
sbb
xchg
mov
mov
outs
add
mov
jl
inc
ds
mov
sbb
sub
mov
adc
pop
xor
adc
fcmovnbe
add
ds
cmp
fs
in
cwde
ss
sub
call
bound
rcl
sbb
icebp
loop
jb
push
push
sub
sub
or
je
inc
adc
iret
call
(bad)
mov
out
(bad)
adc
cmps
cmp
mov
mov
jns
sbb
xchg
sub
mov
dec
leave
push
mov
gs
or
ja
mov
pop
(bad)
pop
outs
pop
(bad)
lock
scas
out
xchg
je
ins
xor
lea
hlt
test
mov
pop
dec
jecxz
jecxz
add
loope
movs
rcr
out
pop
cs
or
fninit
fdivr
pop
jge
sbb
aas
and
(bad)
pop
mov
xor
cmp
xor
and
cmps
push
out
lods
sti
shl
scas
or
jle
mov
cmp
movs
shl
xor
fsub
jecxz
inc
sub
sub
ins
push
pop
push
test
sti
push
cld
bound
aam
pop
xchg
scas
fcmovb
push
mov
dec
add
dec
add
push
push
outs
mov
xlat
lea
mov
div
push
jns
js
imul
cmp
jmp
inc
fnstenv
cmp
cdq
pop
(bad)
icebp
lahf
cli
or
xor
sti
mov
mov
fisubr
fucomi
pop
xor
fimul
xor
push
gs
in
pop
je
scas
cmp
popa
inc
adc
or
lahf
sub
push
adc
mov
pop
or
mov
xor
fisub
xchg
sub
pop
loop
push
pushf
pmullw
imul
mov
dec
sbb
test
push
aam
or
popa
cmps
push
pop
mov
call
or
sbb
pop
das
imul
adc
(bad)
arpl
mov
jecxz
aaa
int
in
cmp
mov
cmp
ret
mov
int3
pop
cld
cmp
scas
pop
scas
mov
cmp
sub
stos
cmp
sti
pop
adc
das
adc
call
nop
retf
ins
test
pop
dec
adc
or
mov
mov
pop
jl
jge
imul
test
push
stc
sbb
add
push
mov
inc
data16
xor
push
(bad)
mov
push
sbb
cmp
push
inc
sahf
test
movs
push
sahf
rol
mov
in
or
int
jbe
dec
inc
push
jl
inc
les
pop
sti
and
push
mov
ficom
fdiv
rcl
dec
dec
repnz
test
call
test
loop
mov
(bad)
stc
mov
js
paddd
jno
fistp
lahf
mov
out
movs
ret
inc
mov
shl
stos
test
lds
xchg
nop
push
ret
push
mov
mov
std
fwait
mov
xchg
adc
imul
pop
shl
dec
xchg
add
addr16
or
(bad)
(bad)
sub
into
int3
cdq
(bad)
mov
sar
popa
mov
mov
mov
mov
mov
mov
scas
xchg
loope
test
icebp
pop
test
add
sar
into
sahf
pop
daa
cld
sub
add
cmp
jge
sub
iret
xlat
imul
stos
cmp
push
or
cmp
or
idiv
xor
push
sbb
xor
pop
(bad)
dec
out
and
adc
mov
mov
sahf
ds
popf
cwde
hlt
fild
out
xor
mov
mov
in
add
mov
mov
cmp
dec
or
jl
mov
sbb
(bad)
mov
(bad)
jns
loopne
or
adc
fisub
jle
imul
sub
or
fidivr
xchg
jo
add
pop
loop
sbb
gs
fwait
(bad)
pop
ret
ins
inc
xchg
retf
sti
cmp
cmp
dec
dec
retf
sbb
jo
hlt
adc
pushf
iret
add
push
mov
jmp
cmp
and
push
test
xor
sbb
lods
bound
inc
imul
repnz
stos
mov
mov
repz
mov
dec
test
cs
nop
call
cs
stc
aad
inc
xchg
gs
mov
rcl
adc
jae
xchg
mov
inc
mov
lahf
mov
test
daa
movs
jae
stos
aad
mov
fldenv
loope
cdq
mov
(bad)
loopne
adc
sbb
jp
das
lea
cmps
das
xor
int
ins
daa
cmc
dec
neg
aaa
jle
push
pop
xlat
cdq
and
dec
sub
inc
inc
pop
lods
das
push
mov
jg
jns
loope
push
pop
ins
xchg
ret
sub
jns
cmp
xor
jg
jb
fsub
xor
icebp
popa
jmp
inc
inc
scas
push
mov
and
nop
add
jbe
inc
inc
daa
stos
(bad)
fwait
push
cmc
cmp
inc
loope
rcl
into
imul
mov
inc
jo
fild
popa
add
xor
sbb
xchg
fnstcw
(bad)
mov
lea
les
loop
test
(bad)
sahf
mov
ret
ja
push
inc
jge
stos
bound
cmps
adc
pop
mov
lahf
jp
pusha
pushf
das
ret
nop
sub
mov
jb
inc
cmps
jne
mov
xchg
leave
dec
adc
cmp
sbb
mov
int3
jmp
adc
inc
xor
shl
lods
cmc
xchg
out
(bad)
sahf
lods
mov
outs
add
leave
jb
mov
in
push
rol
xchg
ins
mov
fmul
lods
and
or
sti
mov
stc
push
xor
dec
movs
adc
mov
enter
sti
xchg
jno
loop
es
dec
xor
in
inc
push
jne
ss
inc
(bad)
and
int
(bad)
mov
aaa
and
imul
mov
dec
mov
xor
ss
loop
(bad)
jl
xlat
pop
mov
outs
fisubr
cmp
push
sbb
(bad)
int
pop
call
push
adc
das
xlat
dec
mov
fstp
cs
and
cmps
and
stc
cmc
out
jo
fldenv
retf
js
fsub
cmc
int
mov
pop
das
inc
ja
jge
cmp
or
and
lea
cmp
das
xchg
xor
es
inc
aam
mov
das
repz
and
mov
rcr
sub
enter
icebp
sbb
in
popf
shr
add
dec
sbb
dec
or
xor
xchg
(bad)
(bad)
test
in
adc
add
in
push
int
lods
out
dec
inc
dec
fwait
sbb
jecxz
push
inc
les
dec
fs
pop
push
jmp
mov
or
pop
leave
dec
cmp
int3
cli
pop
xchg
inc
pushf
xor
js
or
mov
das
test
mov
and
les
or
inc
out
ror
fisub
cmp
inc
les
pushf
loopne
ins
adc
aam
imul
test
cli
loopne
adc
into
adc
mov
cs
add
xor
sbb
pop
mov
jns
mov
retf
xchg
jae
sub
sar
jge
fcomip
push
mov
fild
push
push
or
dec
add
fwait
inc
ror
jno
xor
aad
mov
repz
cmps
imul
movs
cmp
sbb
pop
sub
xchg
mov
adc
scas
mov
jmp
retf
ficomp
add
jge
mov
inc
sub
mov
in
scas
adc
jne
bound
cmc
mov
adc
popa
js
movs
test
mov
jae
test
inc
jp
and
pop
push
(bad)
aas
shl
fs
bound
das
or
ins
add
jp
rol
ss
sub
inc
pop
imul
pop
ror
test
xchg
fld
cld
add
dec
cmps
dec
in
test
dec
xor
push
cmp
adc
bound
data16
mov
push
push
retf
sub
nop
cmp
imul
mov
add
mov
jl
or
add
jmp
les
je
out
mov
jmp
push
mov
loop
std
cmp
mov
std
jne
div
aaa
jp
test
in
mov
add
lock
es
mov
pop
pop
and
fcmove
jl
and
fs
mov
mov
xor
in
push
push
arpl
cmp
and
lods
adc
shl
sahf
dec
fdivr
jo
aas
mov
mov
scas
aas
jno
jo
jo
mov
sbb
call
xor
push
in
jbe
xchg
lods
dec
mov
pop
xor
daa
ret
cdq
mov
push
push
xchg
gs
jne
aad
cmp
in
jnp
(bad)
out
xchg
sbb
aam
pop
sbb
jmp
cdq
sbb
(bad)
scas
les
mov
scas
(bad)
daa
sti
cmp
loop
sbb
aas
aaa
sar
jbe
cs
jge
sbb
mov
inc
fstp
inc
rcr
or
mov
pop
push
stos
cli
sbb
cmps
adc
xchg
add
dec
pop
push
pushf
fyl2x
loope
das
xor
das
sbb
adc
dec
icebp
mov
mov
xchg
jmp
pop
jns
cmp
pop
cmps
sbb
or
mov
jo
cmp
jmp
stos
lods
sub
mov
jle
jg
mov
pop
adc
icebp
dec
lahf
xchg
and
jb
fmul
mov
mov
mov
pand
repz
std
mov
mov
inc
push
lods
jno
cli
and
(bad)
dec
and
mov
and
into
out
mov
dec
cmps
pushf
fstp
das
or
mov
mov
push
icebp
or
outs
dec
dec
fild
pop
jl
mov
jp
xor
pop
mov
jecxz
push
stc
std
or
jmp
mov
(bad)
mov
xchg
pop
inc
test
rcr
add
sub
pop
fwait
dec
clc
push
ror
or
ficom
and
pop
in
out
call
(bad)
nop
movs
xchg
std
lds
mov
pop
out
lods
inc
sub
rcr
jmp
add
test
popa
push
add
repz
lea
cmps
aaa
(bad)
and
ins
mov
adc
(bad)
mov
pop
retf
cmp
shl
pushf
test
push
mov
(bad)
dec
adc
mov
xchg
stos
dec
test
addr16
inc
add
std
cwde
ja
in
push
mov
stos
shr
movs
out
mov
ja
mov
(bad)
gs
inc
sub
lods
nop
fisttp
cmp
dec
int3
cmps
movs
leave
inc
push
test
outs
mov
aaa
loope
mov
in
mov
pop
shl
daa
mov
or
push
cwde
push
iret
(bad)
in
fsubr
int
scas
jns
sbb
int3
and
clc
xchg
sbb
cmp
xor
imul
loope
inc
fs
scas
dec
ds
fcomp
sti
sbb
add
mov
fmul
xor
cmp
dec
mov
xlat
push
mov
mov
pop
repz
cmp
call
jbe
and
add
out
add
retf
jb
push
sub
movs
mov
cdq
adc
jbe
jne
jne
and
jns
jae
or
jae
sub
retf
sti
or
into
loope
enter
lock
imul
mov
mov
pop
leave
(bad)
aad
push
movs
xchg
(bad)
std
inc
mov
xor
mov
ins
sbb
cmp
ror
imul
jbe
aam
mov
das
aaa
and
js
shr
arpl
in
(bad)
in
nop
sbb
fdiv
lea
ss
in
int
outs
nop
(bad)
lods
push
shr
cmp
(bad)
adc
stos
out
xchg
or
xlat
lods
mov
(bad)
mov
sbb
mov
call
ins
jecxz
and
inc
int3
(bad)
mov
out
push
jle
jae
dec
mov
ret
das
loopne
push
pop
jbe
out
test
(bad)
pop
cdq
sti
jae
lahf
mov
adc
pusha
lods
adc
sbb
out
retf
add
xchg
dec
repnz
pop
mov
push
(bad)
arpl
sar
iret
push
or
stos
jbe
cmp
pop
cld
cmc
sub
scas
cmp
lea
mov
jle
xchg
call
adc
(bad)
adc
add
jbe
sbb
push
push
cs
add
fsubr
mov
push
xchg
cld
dec
out
xor
pop
add
jb
xchg
adc
test
push
xlat
xor
scas
rcr
pop
dec
cli
mov
pusha
and
add
jae
add
pop
jecxz
dec
xor
mov
das
test
in
jmp
faddp
or
xchg
outs
inc
mov
xchg
mov
int3
test
stos
(bad)
and
out
jbe
dec
mov
cmp
rcr
pop
push
mov
loop
jp
inc
push
xor
add
scas
fwait
imul
push
inc
xchg
out
jo
cmps
xchg
sbb
pop
in
pop
ds
lods
push
xchg
pop
lock
and
leave
jp
pushf
into
add
jo
xchg
movs
lds
xor
mov
adc
test
sub
mov
out
jmp
adc
add
jno
js
sbb
or
and
popf
pop
lea
loope
push
mov
das
ffree
cmp
jle
inc
pop
lock
(bad)
ret
in
daa
inc
pop
lea
xor
add
pop
adc
xor
mov
std
sbb
cmps
enter
sbb
ins
enter
jp
cs
mov
mov
dec
mov
cmp
xor
dec
xor
sbb
rcr
dec
imul
test
loopne
and
aaa
imul
test
int
sub
data16
pop
mov
add
iret
mov
mov
cmp
stc
daa
in
adc
push
imul
mov
jnp
rcr
es
dec
adc
loop
out
sbb
loope
xchg
call
and
fstp
adc
mov
(bad)
push
cwde
and
lods
jno
rcr
push
sub
in
xchg
nop
(bad)
xor
jge
xor
and
sub
shl
mov
xchg
mov
mov
stc
mov
fucomip
inc
nop
jb
pinsrw
adc
je
cmp
inc
(bad)
mov
pusha
push
shr
jg
shl
cmp
mov
imul
adc
xchg
sbb
xchg
pop
pushf
sub
jne
sbb
xor
fcom
cwde
popa
mov
inc
test
lock
xchg
movs
sub
pop
sti
ds
rcl
scas
xchg
fs
cld
add
leave
scas
mov
xchg
ds
(bad)
lahf
add
fiadd
in
dec
adc
and
sahf
dec
retf
cdq
aaa
xor
pop
push
jae
xchg
sar
mov
lahf
pop
jmp
or
xchg
jl
call
repz
and
push
das
repz
out
jbe
and
mov
add
stos
push
pop
inc
jle
xchg
mov
(bad)
retf
jg
dec
jae
je
dec
into
mov
sbb
cmps
pop
push
mov
jb
out
sahf
adc
sbb
test
or
call
shr
push
push
or
ret
sar
mov
jle
mov
inc
out
sub
popf
mov
pop
or
jle
jp
ret
mov
xlat
dec
retf
add
push
mov
pop
lock
pop
cmp
sub
imul
mov
jne
xchg
adc
das
mov
mov
cmps
ins
outs
out
adc
jle
push
cmovo
xchg
sub
fucomp
xor
push
test
xor
out
mov
shl
xchg
jo
in
repz
in
popa
and
jmp
lock
cmp
adc
pop
cmps
cmps
cld
jmp
add
sbb
outs
repz
(bad)
popa
dec
jbe
repz
mov
inc
pop
leave
out
out
adc
jbe
cmp
xor
js
enter
push
fbld
sub
sbb
les
push
push
neg
ds
js
xchg
push
vsqrtss
call
data16
out
fldcw
adc
pushf
mov
pop
push
or
fist
xchg
inc
outs
push
cmps
enter
jle
sub
test
aas
mov
push
sub
add
mov
aad
icebp
inc
add
inc
sub
shr
int3
test
mov
adc
test
loop
jecxz
mov
cmp
fld
pop
sub
ins
pop
movs
lods
mov
outs
push
ja
or
fdiv
cdq
push
xchg
push
ins
rol
jns
loope
add
aaa
dec
call
xchg
push
adc
jnp
repnz
inc
or
ins
lock
movs
out
cmps
mov
push
addr16
and
mov
imul
dec
in
cs
dec
jno
clc
movs
jge
and
xor
inc
or
mov
ja
xchg
mov
and
or
rol
jb
or
or
(bad)
and
int3
pop
push
or
adc
mov
fcomp
sahf
adc
sub
mov
add
imul
jno
lock
xchg
sbb
lock
jg
nop
fnstenv
mov
mov
fsubr
or
cld
inc
sar
ret
shl
push
dec
or
mov
test
das
xchg
frstor
iret
add
add
outs
push
sbb
dec
mov
push
test
je
sub
adc
push
jne
and
jecxz
pop
aad
std
mov
(bad)
sbb
jg
inc
in
arpl
cmps
mov
inc
div
dec
xchg
loop
loopne
xor
daa
ret
mov
xor
xor
sub
pop
sar
add
arpl
inc
mov
sbb
mov
xlat
jp
(bad)
and
or
mov
mov
adc
xlat
cmp
daa
mov
enter
fld
jp
mov
xlat
std
mov
outs
lea
movs
mov
(bad)
(bad)
mov
imul
inc
cld
(bad)
clc
sbb
jg
leave
ret
sbb
add
push
je
xor
(bad)
int
in
out
push
mov
push
int3
popw
pop
lock
in
les
mov
xchg
xchg
mov
scas
jmp
mov
jmp
add
divps
outs
dec
mov
add
jae
mov
mov
cmps
mov
dec
add
dec
jle
xchg
dec
sub
ja
ss
dec
imul
mov
jnp
daa
or
mov
sbb
stc
int3
in
push
push
repz
pop
jae
gs
jb
mov
daa
xchg
int
clc
dec
cdq
push
add
cmp
jno
push
outs
nop
jno
fisub
(bad)
mov
scas
push
add
and
inc
sub
(bad)
icebp
or
out
fcmovnb
out
jbe
cmp
mov
xor
and
add
xchg
icebp
add
xchg
push
pop
call
pop
dec
jp
cmp
xchg
xor
adc
mov
push
push
mov
sub
sbb
loop
xchg
frstor
and
cld
not
xor
mov
(bad)
dec
mov
stos
mov
mov
mov
mov
jle
(bad)
into
pop
test
cmp
xchg
jmp
mov
pop
shl
popa
lahf
and
pop
mov
ins
cmps
jmp
hlt
pop
or
int3
je
jnp
cmp
dec
or
scas
add
or
xor
xchg
pop
cmp
pop
push
cdq
ja
test
and
xor
and
sti
xchg
fs
pop
cmp
addr16
ins
cmp
in
mov
push
je
mov
mov
fist
pop
or
push
out
scas
in
pop
jae
mov
mov
pop
hlt
fmulp
dec
lods
push
push
cmps
imul
cmps
or
jge
cwde
xchg
jb
sti
push
adc
mov
sub
cmps
push
xchg
or
fucom
push
jb
repnz
int
aaa
retf
dec
mov
jl
xor
fistp
hlt
mov
push
pop
push
push
and
call
cmp
rcr
pop
ret
and
add
popf
fnsave
dec
(bad)
ss
aaa
pop
sbb
icebp
imul
div
test
stos
xchg
xor
sub
sbb
mov
xor
dec
std
(bad)
mov
inc
and
pop
add
xchg
and
pop
pop
and
jecxz
aam
fisttp
das
stc
(bad)
nop
dec
push
jbe
test
mov
es
xchg
jl
pop
in
aam
and
clc
mov
lock
inc
push
inc
sar
outs
pop
and
ins
pop
xor
mov
fild
fist
fcom
fadd
cmp
repnz
add
movs
sbb
and
mov
push
retf
add
pop
daa
mov
std
and
xchg
inc
stos
jecxz
in
and
xchg
lea
push
mov
mov
xor
lock
in
in
cwde
movs
mov
xor
mov
inc
iret
stc
xor
push
lods
pop
das
scas
mov
fs
sti
mov
pop
test
add
scas
loope
dec
inc
adc
sbb
test
lea
inc
test
mov
mov
jmp
jmp
or
call
mov
mov
aas
enter
mov
mov
jg
mov
xchg
xchg
xchg
fwait
adc
jp
data16
cmp
jecxz
mov
(bad)
sbb
fbstp
mov
stc
rcr
out
mov
sbb
loop
cmp
(bad)
adc
adc
pusha
push
sbb
shl
mov
lods
push
mov
ins
adc
add
(bad)
loopne
pop
push
aas
push
into
push
in
pop
lods
jl
(bad)
aas
(bad)
ja
(bad)
ror
cdq
scas
push
jne
lds
push
fcom
pop
les
sbb
cmp
stc
adc
je
aaa
adc
(bad)
dec
and
push
xchg
daa
or
xor
fnsave
ins
arpl
pop
out
inc
push
out
shl
stos
xor
jmp
dec
test
mov
dec
aad
mov
gs
sub
pop
mov
outs
arpl
je
or
nop
mov
jmp
inc
out
push
inc
dec
or
outs
mov
test
sub
and
es
repnz
sti
mov
sbb
add
pop
sub
dec
shl
jns
je
inc
je
jl
add
fsub
mov
jmp
out
xchg
jns
xchg
pop
adc
(bad)
std
ds
pop
mov
inc
int
lahf
xor
push
out
push
mov
pop
adc
retf
xchg
in
mov
ss
add
jno
out
into
ret
jle
push
lea
and
and
mov
loopne
xor
jle
mov
test
aad
cmp
jmp
cmc
outs
(bad)
adc
mov
out
dec
data16
jae
or
push
(bad)
mov
lods
leave
inc
jbe
int
pusha
leave
sahf
(bad)
and
or
mov
ins
or
cdq
push
test
cmp
jno
push
xchg
jp
call
ins
jae
cli
sub
and
push
pop
pushf
loopne
add
xchg
sub
fnsave
bound
jns
sub
inc
cmp
in
ret
data16
or
pop
pop
jnp
leave
nop
leave
push
inc
les
(bad)
scas
adc
sahf
dec
into
fsub
inc
jecxz
int
jg
stc
sahf
adc
push
mov
mov
push
adc
mov
ret
push
mov
ret
sbb
not
inc
repz
in
gs
jg
pop
(bad)
scas
push
test
out
xor
cmp
jo
xor
push
push
repnz
mov
xchg
sub
fsub
jno
cmp
inc
loop
and
mov
fwait
jne
or
jmp
ror
js
je
sub
loop
mov
and
push
movs
sbb
jnp
clc
adc
xor
or
add
test
add
add
out
shl
daa
mov
ficom
add
dec
sbb
xor
stos
or
test
ins
stos
pop
sub
outs
in
repnz
(bad)
jbe
jge
movs
scas
jge
jnp
xchg
add
ret
pop
(bad)
movs
cmc
or
push
mov
or
sub
xchg
mov
(bad)
(bad)
xor
push
enter
push
(bad)
jnp
cmp
out
mov
addr16
jmp
ret
adc
push
inc
lods
out
and
cmps
xchg
inc
pop
shr
lds
repz
xor
xor
pop
mov
add
adc
shl
loope
je
popa
jle
call
aaa
push
aaa
jp
(bad)
mov
ret
mov
xchg
mov
mov
xchg
jne
loopne
push
cmps
xor
push
arpl
daa
pusha
xchg
cli
sub
sahf
fsub
stc
push
(bad)
lock
stos
inc
imul
xor
std
jmp
dec
adc
bound
fidiv
nop
ffree
rol
mov
icebp
push
test
add
lahf
cwde
ins
mov
out
(bad)
sbb
or
test
cmps
inc
idiv
add
cmp
int
cmp
fs
ret
fxch
push
mov
jg
mov
mov
out
sub
sbb
(bad)
cmp
dec
xchg
test
cs
xchg
ror
xor
push
push
xchg
mov
icebp
jmp
hlt
fwait
and
mov
jmp
ss
test
dec
jae
ins
cmp
add
push
daa
dec
das
mov
push
iret
add
es
jmp
enter
je
jp
jne
xchg
jmp
xlat
and
jecxz
je
in
push
jbe
fs
pop
out
xchg
or
mov
xor
dec
les
loope
and
inc
sahf
cmp
(bad)
xlat
or
pushf
dec
call
adc
in
out
ficomp
push
(bad)
std
rcl
xchg
mov
pop
fsubr
xchg
fistp
out
lds
pop
inc
sub
jp
and
add
pushf
pop
jl
xchg
pop
popf
push
adc
das
cli
jg
xor
mov
int
or
mov
inc
aaa
fs
int3
jp
cmp
stos
(bad)
neg
cwde
pop
mov
(bad)
sbb
jl
neg
dec
cmp
fwait
xor
mov
push
xchg
cdq
inc
mov
scas
repnz
xor
jmp
dec
out
das
adc
add
push
adc
scas
cdq
sbb
inc
aas
mov
(bad)
push
xchg
push
les
je
and
xor
xor
(bad)
jo
jmp
add
leave
ret
add
bound
je
push
push
enter
aas
or
mov
outs
xor
mov
xchg
pop
outs
mov
push
sub
add
xchg
add
mov
jecxz
sub
mov
ret
xor
dec
push
dec
mov
mov
mov
aaa
out
push
les
pop
cmp
js
jns
adc
mov
pop
push
jp
xor
push
cdq
shl
sahf
mov
pop
mov
arpl
dec
lock
sub
sub
add
mov
jns
or
ins
repz
mov
push
outs
loope
(bad)
repnz
xlat
ficomp
shl
cdq
sbb
push
sub
cmp
in
inc
adc
dec
mov
inc
and
adc
fs
inc
js
xchg
and
inc
mov
aaa
outs
pop
test
sti
cmp
repnz
jno
rcr
fs
cmps
jno
neg
call
call
retf
or
nop
mov
xor
adc
addr16
xchg
addr16
xor
loop
adc
sub
leave
push
dec
dec
pop
jecxz
sti
(bad)
cmp
push
cmp
mov
pusha
and
cmps
push
rcr
stos
cmp
test
clc
(bad)
gs
aaa
in
(bad)
in
out
mov
movs
xlat
retf
outs
loop
dec
js
fs
ins
push
xchg
cmps
imul
sbb
out
and
mov
aaa
push
dec
es
xchg
xor
xchg
in
lods
sahf
fistp
(bad)
push
adc
(bad)
cwde
add
pop
or
mov
xor
fnstenv
das
fistp
cli
mov
cmp
add
sub
addr16
in
cmc
adc
push
ret
js
mov
mov
adc
pop
pop
js
xchg
call
and
inc
or
cmp
mov
std
cmps
js
mov
sub
mov
mov
cmps
cmp
in
mov
mov
stos
pop
mov
mov
nop
xchg
repz
test
jnp
push
mov
aam
pop
mov
add
pop
es
ficomp
mov
cmps
inc
aam
pop
stc
fsubr
mov
xchg
mov
jnp
xor
sub
mov
dec
mov
xchg
outs
adc
push
out
fcmovnbe
fiadd
jp
mov
(bad)
jno
retf
ret
ins
sti
mov
int3
mov
adc
xor
movs
inc
les
mov
pop
popa
cmc
xor
cmps
lahf
loop
xchg
xor
das
add
xor
mov
mov
push
xor
adc
ja
popf
outs
add
mov
xchg
fnstenv
sub
fst
mov
xchg
movs
mov
in
mov
xchg
xchg
repz
in
xlat
adc
repnz
sbb
mov
inc
mov
test
mov
call
jg
dec
pop
(bad)
xchg
xchg
or
sbb
aam
jmp
pop
or
lea
lea
imul
fsub
xchg
xor
popf
(bad)
jbe
pop
mov
retf
out
xor
movs
jmp
and
add
inc
enter
mov
xor
nop
lahf
ror
inc
mov
mov
dec
xor
cmp
or
aas
mov
rcr
cmp
jb
rol
mov
xor
icebp
and
jmp
icebp
inc
addr16
xchg
rol
test
mov
std
ret
adc
jno
mov
inc
pop
inc
pop
and
inc
xor
push
imul
xchg
mov
repnz
mov
pop
addr16
ret
test
jg
xchg
dec
in
scas
dec
(bad)
sbb
inc
fstp
xlat
mov
rcl
ror
fwait
push
imul
stos
jae
inc
out
push
mov
mov
out
cwde
aas
pop
or
loopne
xchg
cmp
or
stos
and
sbb
stos
pusha
stc
not
pusha
or
jns
shl
out
js
repz
push
dec
inc
cwde
ins
or
sbb
xlat
aad
inc
(bad)
lahf
mov
in
push
dec
int3
loop
mov
and
out
sbb
mov
dec
cmp
clc
xor
out
xchg
jno
pop
push
adc
or
popa
sbb
gs
jmp
dec
push
movs
outs
cli
mov
fs
or
fwait
cmps
and
cli
rol
pop
push
inc
stos
cli
repz
mov
xor
sbb
pop
push
das
pop
in
mov
pop
rol
inc
prefetch
or
dec
fsub
inc
popa
lods
xchg
test
cmp
outs
sbb
stos
dec
clc
dec
mov
or
xor
shr
bound
sbb
mov
nop
mov
out
fistp
stos
call
xchg
imul
lods
cmps
cmp
sbb
xchg
xchg
call
adc
test
mov
stc
mov
pop
or
pop
sbb
rcl
pop
cmc
lods
pop
icebp
ret
scas
mov
mov
cmp
mov
adc
pop
sub
(bad)
jae
jbe
in
inc
sbb
inc
popf
push
out
cld
popf
mov
outs
icebp
out
jl
push
ins
in
add
adc
xchg
addr16
pop
repnz
pop
xchg
mov
loop
mov
fmul
imul
(bad)
inc
jne
fild
or
cmp
push
mov
rol
mov
test
int
in
test
popf
sub
(bad)
push
mov
ret
repz
adc
das
push
and
call
jae
out
add
nop
sahf
movs
xor
dec
push
sub
jno
xchg
fs
fwait
jg
outs
pusha
(bad)
aad
dec
push
stos
mov
adc
mov
xor
shl
sbb
or
lock
sub
push
call
xchg
stc
pop
dec
iret
(bad)
push
in
test
mov
cmps
js
fsubr
jg
cli
ins
jecxz
xchg
jb
jb
jle
push
hlt
outs
outs
stos
out
jo
sbb
outs
inc
test
jl
dec
fwait
pop
or
inc
jbe
xor
imul
push
dec
test
and
dec
push
(bad)
scas
call
cmp
mov
or
sub
loop
cmc
shl
ret
test
add
loop
adc
neg
outs
adc
mov
push
cmp
out
inc
jge
lock
jecxz
dec
sub
stos
inc
xchg
inc
mov
(bad)
pushf
mov
dec
gs
scas
stos
sbb
movs
lods
enter
push
repz
mov
jns
mov
leave
shl
stos
ins
push
fs
push
movs
in
sti
inc
or
call
neg
rol
push
out
mov
mov
inc
iret
push
mov
or
xor
mov
out
inc
add
push
push
je
jno
mov
bound
push
mov
push
shl
stos
push
popa
call
mov
or
adc
dec
push
or
mov
push
(bad)
mov
pop
rol
in
imul
adc
jge
jne
stos
jl
in
mov
or
js
mov
dec
pop
adc
loope
mov
out
sub
fld
arpl
test
popf
leave
push
push
lods
xchg
cmps
stos
sti
inc
movs
arpl
pop
pop
mov
adc
add
int3
add
cmp
cmp
push
test
add
adc
std
shr
and
mov
sbb
popa
or
cli
inc
mov
adc
outs
mov
fisttp
adc
push
sbb
xchg
mov
mov
add
pop
imul
out
repz
popa
push
stos
leave
ret
jno
jmp
pusha
inc
call
sub
in
mov
cdq
hlt
pop
dec
jbe
jecxz
dec
popa
ss
fcomp
xlat
jne
stc
lock
jo
adc
pop
and
add
mov
popf
push
enter
ficom
and
adc
pop
mov
or
ins
sbb
fcos
pop
inc
push
aam
jae
sub
jae
or
mov
cmp
pop
push
cmc
sub
out
ret
(bad)
out
sbb
add
shr
inc
(bad)
sar
mov
je
lds
call
movs
or
test
ss
cmp
ss
xor
ror
mov
pop
loop
test
test
xchg
lea
call
add
xlat
add
lahf
dec
push
(bad)
lahf
sbb
and
mov
dec
cmp
mov
stos
jle
rcl
jecxz
and
xor
jle
push
cld
stos
pop
aam
clc
and
xor
data16
les
pop
cmc
addr16
or
mov
push
jle
es
movs
jg
push
cli
out
jne
xchg
in
cmp
(bad)
push
mov
addr16
xor
xchg
psubsw
cmp
movs
clc
jno
mov
hlt
push
mov
sbb
lahf
(bad)
jecxz
jne
test
jae
mov
add
xor
aad
push
mov
cli
jl
pop
pop
scas
aas
push
icebp
fld
mov
ror
out
out
movs
pop
jmp
lock
cmp
outs
pop
sbb
in
retf
stos
ss
jl
pop
pop
adc
jae
mov
cwde
adc
lahf
push
pop
mul
mov
not
fiadd
push
adc
loop
dec
xchg
int3
add
in
pop
mov
jg
leave
pop
mov
mov
push
les
and
mov
adc
push
lods
ds
iret
inc
cwde
xchg
mov
mov
in
inc
lahf
mov
fnsave
xor
cwde
clc
xor
into
pushf
lds
fcmovnb
test
dec
daa
xchg
ror
fcomp
sub
mov
lea
lds
loopne
aad
and
fcom
inc
jl
and
xor
lahf
jns
dec
hlt
pop
shr
call
jb
rcr
pop
mov
cmc
out
ret
jo
xchg
cmp
xor
stos
push
and
adc
in
div
jae
xchg
out
push
xchg
mov
add
cmp
fistp
mov
jae
cmp
jmp
xchg
rcr
lahf
jmp
fimul
shr
xor
sub
jle
mov
push
test
jmp
not
xor
retf
push
jne
jo
add
jo
xchg
adc
outs
fwait
push
xor
sbb
in
jmp
mov
pop
mov
(bad)
jbe
jle
out
jb
popa
ret
in
xchg
fmul
jp
ds
or
inc
lods
sbb
sbb
stc
mov
xor
bound
mov
das
leave
bound
call
addr16
in
iret
out
loope
je
les
(bad)
mov
stos
enter
or
xor
xor
xchg
hlt
dec
(bad)
fist
addr16
in
or
iret
ficom
fcom
icebp
jmp
mov
and
mov
ja
inc
stos
add
pop
scas
lods
mov
adc
leave
xor
push
int3
bswap
mov
xchg
dec
jb
iret
out
ror
sbb
mov
jmp
repz
or
add
pop
pop
div
retf
push
lds
out
sub
int
das
mov
add
fdiv
(bad)
pop
test
mov
mov
jl
push
adc
out
ret
xchg
mov
inc
in
dec
push
sbb
jb
outs
push
std
pop
in
xchg
scas
or
pop
sbb
test
mov
jp
fidiv
sbb
icebp
int3
pop
or
jno
add
scas
addr16
lds
mov
clc
ja
test
ins
mov
sar
mov
push
scas
jnp
aaa
and
fldcw
push
pop
dec
cmp
test
fistp
sbb
jecxz
jg
(bad)
cmp
(bad)
push
or
ds
mov
cmp
inc
pushf
mov
js
cdq
sub
inc
sbb
cmp
xor
pop
ror
scas
stos
xchg
aas
jge
inc
sbb
mov
jmp
retf
mov
lods
add
repnz
ins
lahf
jnp
mov
jp
jns
dec
(bad)
pop
xchg
or
mov
popa
not
imul
xchg
test
dec
(bad)
retf
es
pop
mov
shl
(bad)
xor
cmp
adc
push
inc
mov
jne
sbb
push
lds
sub
cmps
fld
cmp
xor
fstp
lahf
mov
jmp
(bad)
jp
(bad)
jmp
add
fstp
mov
inc
add
mov
add
not
lock
mov
mov
mov
add
pop
add
jnp
xchg
inc
outs
inc
jg
mov
jno
cdq
pop
mov
nop
std
and
loopne
jecxz
cmps
lods
mov
add
fdivr
xor
push
pop
int3
je
jge
jl
inc
daa
mov
fisttp
mov
into
jbe
push
fnsave
xchg
fwait
cld
push
adc
jp
and
pop
adc
and
cmp
fimul
mov
int3
(bad)
stos
jp
out
das
leave
ins
call
fwait
sub
repz
out
push
cmp
inc
push
cld
arpl
fs
mov
mov
(bad)
idiv
cmps
jno
jbe
or
mul
push
xchg
outs
movs
adc
jbe
jecxz
test
mov
pop
pusha
inc
and
xor
sub
daa
dec
retf
inc
popf
jne
(bad)
in
mov
xchg
fwait
xor
sbb
dec
ja
retf
fbld
int
or
in
shr
mov
outs
mov
add
loopne
out
pop
lds
jl
cmps
mov
adc
mov
sub
add
jbe
mov
and
inc
not
aam
aas
cli
and
sub
rcr
pushf
out
mov
cmp
xor
jns
add
pop
movs
lods
pop
xchg
mov
dec
outs
mov
in
das
lods
sub
dec
outs
mov
dec
fmul
jo
mov
call
and
call
das
add
pusha
jae
mov
repz
jns
mul
mov
pop
fmul
ss
stc
daa
or
sbb
add
adc
and
pushf
adc
pop
mov
or
dec
adc
es
in
repz
adc
pop
lahf
test
addr16
add
or
loope
pop
jb
daa
in
jmp
add
jne
add
dec
cmp
ja
mov
ins
inc
adc
rol
pusha
inc
test
xchg
outs
sub
adc
or
movs
test
jo
shr
cmps
xor
hlt
cmp
sti
(bad)
cli
jmp
sub
cmp
mov
inc
cmp
pop
sub
call
mov
pop
and
push
je
gs
movs
sub
pop
pushf
or
xchg
mov
xchg
or
lds
sub
jne
mov
in
shl
outs
repnz
jae
adc
and
imul
enter
cmp
push
imul
or
jp
xor
xor
data16
or
or
and
ds
and
sub
jg
ror
fnstcw
idiv
movs
mov
jbe
or
dec
arpl
or
cld
inc
in
test
sbb
inc
xor
xchg
mov
dec
sub
call
push
enter
add
jge
xor
fwait
jns
xor
into
inc
adc
(bad)
cmp
cli
inc
jmp
stc
xor
ja
fiadd
jg
inc
push
outs
and
test
shl
jbe
pop
xor
inc
loopne
mov
ss
movs
fisubr
push
pusha
adc
cs
push
inc
sbb
fistp
movs
mov
and
cs
fs
inc
pop
jle
sahf
enter
cld
push
inc
sbb
daa
in
sbb
cmps
cmp
mov
mov
push
hlt
sub
repz
or
or
add
loop
mov
jl
or
dec
ficom
and
inc
pushf
dec
adc
add
popw
and
shl
or
jmp
dec
in
push
ret
retf
cmp
jmp
fimul
outs
popf
aam
jno
sahf
clc
lss
neg
and
mov
fwait
in
jmp
push
cmps
fidiv
xchg
sub
int3
mov
inc
push
xor
int3
mov
leave
jmp
xor
inc
cmp
(bad)
test
mov
inc
int
sbb
mov
aam
jmp
xchg
inc
cmc
fwait
push
jne
jp
nop
mov
imul
aad
jl
sub
jno
loope
call
xlat
push
jmp
ins
(bad)
mov
adc
jge
xor
add
idiv
icebp
and
push
xor
stos
inc
inc
aad
cmp
pop
lds
movs
mov
imul
and
push
sahf
hlt
push
xchg
mov
repnz
push
pop
test
xchg
adc
xor
adc
sbb
xchg
scas
popf
ja
xor
aas
mov
push
ins
jo
out
xor
fistp
push
pop
in
mov
cmp
gs
int
fild
jmp
cld
adc
dec
and
sbb
push
jmp
jae
adc
xchg
shl
jo
pop
repnz
addr16
dec
ins
xor
nop
(bad)
addr16
xchg
popf
icebp
lods
imul
mov
arpl
int
jo
sub
jnp
jb
dec
pop
sbb
sub
push
or
ds
fidiv
inc
mov
inc
or
push
out
add
out
dec
and
cmp
cwde
mov
or
push
shl
enter
push
popa
xchg
cmc
(bad)
pop
adc
popf
add
mov
ret
repz
shr
inc
iret
and
or
out
(bad)
fist
xor
inc
cld
rol
push
jo
push
nop
adc
cwde
add
push
iret
push
aas
cmps
shl
mov
adc
pop
std
mov
pop
enter
bound
ins
ds
test
lock
push
sbb
mov
sbb
push
inc
sub
les
rcl
push
std
lahf
repnz
push
test
and
pushf
iret
lahf
imul
mov
fsubr
cmc
xchg
mov
lods
mov
ret
je
lock
push
iret
int3
dec
ret
idiv
iret
clc
push
jp
add
add
add
(bad)
jge
jns
dec
dec
mov
outs
iret
xor
inc
not
mov
xor
shr
push
scas
dec
outs
outs
mov
add
ret
leave
cs
sbb
aas
imul
pop
pop
and
mov
mov
aam
je
sbb
jmp
cmp
(bad)
jb
and
or
sub
push
aad
int
lods
outs
fwait
pop
mov
shl
ins
pop
bound
fnstsw
ja
push
sub
sbb
pop
inc
add
pushf
inc
pop
dec
jb
pop
inc
mov
sub
xchg
pop
sbb
inc
icebp
sbb
fistp
arpl
popf
jp
push
cmp
pop
cmp
aaa
pop
aas
and
mov
xor
mov
inc
dec
call
pop
stos
pop
cmps
inc
loopne
sahf
cmp
dec
lods
clc
mov
stc
hlt
rol
ficom
sub
clc
mov
ins
mov
outs
mov
test
fwait
adc
fxch
shl
cmps
fistp
mov
mov
repz
mov
sbb
ins
mov
lahf
(bad)
aaa
mov
mov
lods
pop
je
add
(bad)
xor
pop
(bad)
in
pop
pop
push
sub
mov
jae
pop
inc
leave
sub
lods
push
cmc
rcl
arpl
bound
add
mov
add
mov
add
jbe
pop
sub
cmps
cmps
mov
in
in
aaa
dec
inc
out
and
pop
push
icebp
dec
adc
sbb
jl
mov
mov
movs
or
sbb
push
(bad)
xchg
mov
sub
inc
sub
aad
out
add
cwde
sub
fnstsw
adc
or
icebp
scas
into
mov
jb
sahf
push
sbb
iret
mov
in
stc
ins
jae
pop
aaa
(bad)
jmp
mov
arpl
mov
add
or
sub
stc
mov
gs
cwde
adc
mov
mov
ins
fs
mov
inc
jl
mov
ds
fdivr
test
aaa
xor
cmps
mov
push
inc
adc
dec
clc
out
jp
cmps
les
sahf
xchg
push
ins
mov
mov
loop
pusha
mov
les
cwde
sub
aaa
cmp
(bad)
push
mov
mov
jl
fsubrp
pop
mov
repnz
mov
cmp
inc
adc
popa
jecxz
cli
jo
fbld
icebp
cmp
mov
popf
ins
sbb
nop
lods
jg
addr16
fsubr
(bad)
fcomp
add
mov
mov
cmps
ss
aaa
(bad)
mov
outs
xchg
cmps
int
mov
mov
ret
adc
sub
outs
lods
ret
fwait
aad
rcl
add
or
pop
push
sub
cwde
arpl
pop
(bad)
fwait
xor
rol
push
and
sbb
fstp
loop
movs
mov
imul
pop
popf
test
mov
mov
mov
cs
jno
(bad)
fild
xor
dec
adc
xchg
mov
push
push
iret
retf
stos
icebp
inc
push
add
mov
and
xchg
inc
push
jb
mov
repnz
jbe
enter
cli
outs
jno
mov
sbb
enter
mov
in
loope
in
movs
cmp
scas
sahf
sub
rcl
and
shr
sbb
lods
cld
pop
rdtsc
lock
fbld
shr
pop
cmps
icebp
in
jne
push
popf
mov
adc
dec
push
inc
add
and
enter
pop
lods
popa
mov
pop
mov
repnz
cdq
hlt
xor
xor
mov
add
or
xchg
aad
add
jle
cmp
outs
lock
and
sbb
ror
xor
pop
inc
addr16
pop
jecxz
sub
std
es
mov
jb
push
sub
push
mov
xchg
stos
mov
inc
jmp
mov
fidivr
cwde
iret
fsubr
aaa
test
push
gs
adc
ret
jbe
inc
pop
and
out
repz
mov
push
mov
movs
xor
enter
sub
pop
add
jnp
cld
sbb
loope
push
ss
pop
or
and
std
fcomp
cmp
ja
sti
mov
in
outs
push
mul
int
addr16
popf
pop
mov
push
adc
aad
outs
loopne
cmp
sub
jmp
jmp
fldenv
mov
cmp
std
test
(bad)
arpl
jbe
mov
aam
(bad)
ficomp
stos
mov
cmp
sti
daa
or
inc
fs
ror
sub
or
xor
ror
adc
sbb
call
adc
dec
call
mov
shl
pusha
mov
fistp
add
in
xor
push
fiadd
mov
lds
pop
mov
jge
ret
rol
gs
(bad)
jp
jecxz
adc
mov
mov
mov
aas
clc
mov
xor
div
pop
and
popf
and
in
adc
jmp
mov
xchg
addr16
mov
sahf
push
fdivr
(bad)
hlt
imul
fbstp
xchg
xchg
jno
cmp
sbb
inc
bound
fstp
arpl
addr16
frstor
mov
imul
or
xchg
inc
outs
int
stos
int3
cmc
arpl
xlat
js
out
and
mov
mov
xor
fcmove
mov
and
pop
mov
xor
arpl
int
out
out
popa
and
cwde
(bad)
bound
xchg
mov
dec
jne
lods
out
sbb
icebp
mov
mov
xor
inc
and
pop
jecxz
and
or
jmp
push
jl
mov
lahf
rol
pop
out
sbb
adc
mov
pop
inc
rcl
(bad)
ror
jecxz
push
pop
mov
adc
jge
in
sbb
mov
push
ins
in
not
sbb
or
xchg
mov
push
aaa
dec
cmps
push
sbb
push
movhps
js
adc
mov
scas
out
or
das
mov
mov
cmps
mov
xchg
pop
xchg
ret
inc
mov
dec
push
push
inc
cmps
or
mov
int3
pop
inc
mov
fsub
dec
pop
cs
sub
stos
scas
int
pop
sbb
pop
sti
xor
push
fst
retf
cld
cmps
int
ficom
call
push
call
and
mov
mov
xchg
cdq
cmp
ins
aam
pop
sub
out
xchg
xchg
fild
into
or
rol
cmp
mov
xor
lds
add
pop
dec
cmp
(bad)
clc
ret
sub
mov
fwait
aaa
sub
test
(bad)
neg
inc
xchg
fs
fisubr
inc
xchg
clc
sub
arpl
cs
std
(bad)
lods
stc
aaa
les
(bad)
xor
lahf
mov
leave
jp
and
addr16
in
test
or
jge
mov
cmp
or
sub
jecxz
inc
jb
js
xor
sar
dec
or
cmp
jg
push
cli
and
push
mov
shl
mov
imul
add
int3
ins
lods
shl
scas
cld
into
out
int3
sub
adc
ret
inc
pop
test
fadd
or
sub
cmc
shl
test
ss
mov
jae
and
mov
jecxz
adc
aas
or
into
xchg
dec
pop
sar
mov
(bad)
xchg
jl
mov
test
xchg
ss
pop
and
push
sbb
(bad)
out
scas
in
pop
mov
dec
and
fwait
or
lahf
or
arpl
retf
loopne
jae
pushf
shl
add
lods
xchg
jnp
pop
je
or
imul
jbe
xor
out
jae
dec
addr16
xchg
mov
jmp
loope
movs
shr
jle
mov
cwde
loopne
xlat
enter
adc
aas
outs
arpl
sbb
mov
lock
lods
mov
iret
rol
int
cmp
sub
call
gs
push
sbb
int
iret
repnz
leave
push
lock
pop
jp
push
inc
pop
dec
add
or
in
push
and
in
and
or
and
stos
out
cmp
repz
jb
enter
test
xchg
loop
adc
(bad)
lods
popf
into
clc
jbe
cmps
rcl
push
mov
push
inc
mov
js
dec
cmp
add
cli
in
xor
jmp
gs
push
jne
xor
pop
leave
jmp
xchg
in
mov
jp
inc
adc
ja
adc
mov
lahf
cmp
mov
jg
scas
xor
mov
clc
fist
jne
push
repz
shl
dec
adc
retf
or
mov
or
arpl
adc
aam
sbb
xchg
pop
ja
xor
push
push
lock
inc
mov
or
pop
pop
jnp
and
inc
push
ins
xchg
push
cwde
hlt
mov
add
les
jnp
mov
or
mov
mov
sbb
or
pop
add
or
imul
sar
cwde
out
pop
mov
stos
(bad)
and
fdiv
push
into
movs
jno
into
add
lods
cs
push
cs
fadd
les
push
sahf
and
ss
imul
fiadd
hlt
inc
rcr
adc
cmp
into
or
(bad)
ds
test
shr
jo
call
pusha
cld
fnstcw
arpl
into
rcl
repnz
sub
scas
inc
shl
mov
push
jae
bnd
pop
push
int3
pop
xor
mov
and
out
cmp
inc
(bad)
pop
shr
jno
mov
jecxz
ret
dec
and
sbb
enter
jae
cld
test
add
adc
cli
and
sar
(bad)
out
test
and
daa
outs
shl
mov
les
int3
jl
lods
cmps
mov
inc
enter
cmp
lods
ins
inc
sub
mov
add
retf
in
call
cmps
inc
icebp
in
pop
shr
mov
inc
xchg
mov
jge
cmp
bound
ins
(bad)
arpl
addr16
ds
mov
not
jns
push
sbb
cwde
xor
jns
xor
mov
aas
test
pop
adc
sbb
pop
mov
add
adc
xchg
and
push
push
cwde
xor
loope
mov
jb
xor
popf
add
call
adc
addr16
sbb
xchg
sub
xchg
ins
daa
cs
int3
sub
lods
xor
or
push
out
lds
mov
mov
shl
lahf
dec
mov
test
sub
inc
push
wrmsr
lods
ja
retf
sub
gs
cmps
fdivr
imul
stos
cmps
aad
jmp
sub
mov
cmc
push
outs
jbe
cmps
je
mov
out
int
pop
mov
add
push
mul
sub
gs
add
fist
mov
addr16
mov
inc
in
mov
push
add
addr16
movs
in
or
jecxz
or
xchg
xchg
cmps
or
push
not
cld
es
xor
jge
xor
rcl
and
push
pusha
adc
(bad)
xchg
jp
jne
aas
popa
inc
adc
push
mov
(bad)
loopne
pop
ret
retf
cmp
scas
sbb
retf
adc
jno
adc
sub
outs
inc
nop/reserved
clc
mov
js
das
mov
lds
jecxz
sub
push
aad
popa
add
cmp
test
sti
mov
fcomp
mov
(bad)
(bad)
inc
ins
mov
pop
cmp
js
dec
push
sbb
xor
repnz
adc
push
es
sbb
cmc
mul
push
aam
pop
movs
stos
xor
fadd
dec
enter
push
cs
imul
int
and
push
xchg
clc
sbb
or
sbb
push
in
add
inc
mov
add
inc
jg
gs
sub
mov
push
cli
repz
int3
scas
lahf
dec
(bad)
mov
fimul
mov
push
push
lock
jb
dec
cs
sti
sar
inc
jmp
repnz
out
and
dec
cmp
inc
clc
jb
movs
dec
hlt
xchg
add
(bad)
xchg
mov
mov
ret
jo
lahf
push
ss
dec
push
ins
lock
iret
fisub
pop
dec
inc
sbb
mov
out
mov
push
in
xchg
push
lahf
pop
or
lds
mov
pop
mov
mov
shl
outs
cwde
xchg
je
mov
mov
jbe
rcl
stos
call
add
xor
ins
sbb
dec
cmc
stc
and
pop
int3
or
cmp
scas
dec
shr
mov
test
fiadd
xor
mov
mov
cmp
push
xor
xchg
pop
fld
dec
jecxz
ja
mov
jmp
punpckhdq
jno
mov
test
inc
push
xor
es
dec
adc
idiv
dec
icebp
push
adc
push
jmp
lods
sahf
add
test
repnz
stos
in
fist
push
xchg
inc
pop
xlat
ja
sub
in
sbb
mov
add
inc
lahf
daa
bound
sti
aas
mov
dec
call
inc
jb
js
mov
jo
or
mov
cmp
jns
imul
pop
adc
cli
push
je
inc
fs
gs
cli
loope
ins
push
fwait
inc
mul
adc
into
or
les
jne
dec
sbb
sub
and
rcl
jno
fs
dec
xadd
scas
mov
mov
xor
push
ret
sub
cmp
daa
jg
in
xor
pop
sbb
cmc
rcl
pusha
adc
push
lock
cwde
shl
int
aaa
jp
or
mov
and
mov
imul
push
popa
fstp
jne
or
(bad)
push
ss
adc
(bad)
push
mov
or
icebp
nop
mov
sub
mov
jnp
lock
push
and
mov
jle
(bad)
pop
js
in
stc
jp
xlat
push
jae
idiv
sbb
call
fs
aam
mov
mov
(bad)
scas
sbb
aad
add
push
fstp
mov
push
xchg
adc
movs
rcr
call
cdq
mov
dec
addr16
and
jp
lods
fld
aaa
and
dec
mov
rol
dec
or
push
and
mov
ficomp
sub
cmp
push
mov
push
cwde
lods
push
fstp
cmp
out
adc
icebp
shl
clc
ja
test
lods
lods
and
pop
hlt
ins
fbstp
std
iret
jecxz
add
ret
mov
and
xor
mov
xchg
or
add
shr
jb
inc
popf
cmp
push
retf
movs
dec
add
and
popa
add
dec
sahf
pop
cwde
sbb
push
push
loope
ror
enter
mov
rcr
hlt
enter
mov
inc
pop
dec
pop
dec
stos
mov
fild
mov
xor
push
mov
push
aam
pop
dec
sub
sub
mov
inc
popf
fsincos
xchg
sahf
jge
mov
out
inc
sbb
lock
push
dec
sub
loop
sti
jns
lahf
jns
adc
cld
inc
test
dec
dec
jmp
adc
lods
adc
aaa
sti
push
stc
xor
lds
mov
sar
sub
int
ss
das
cmp
pop
inc
nop
je
push
mov
ficomp
ret
add
mov
clc
ret
mov
fistp
and
fwait
inc
stos
nop
or
jne
std
sar
imul
push
fyl2x
push
cmps
retf
cmps
push
pusha
rol
rol
bound
push
and
inc
gs
fcomp
inc
lds
fldcw
repnz
inc
loopne
bound
dec
cmp
cld
clc
inc
int
push
inc
(bad)
daa
jge
mov
xor
fstp
dec
cmp
sbb
data16
test
pop
or
inc
sahf
sub
jl
xor
xchg
adc
fwait
repnz
mov
mov
rol
mov
add
jbe
out
cmp
mov
mov
daa
les
leave
add
cmps
jmp
jle
pop
ins
neg
adc
cmp
and
sub
mov
das
jo
adc
lock
in
or
push
jmp
loopne
xchg
jl
test
xor
icebp
fisubr
aad
dec
cmp
xor
fdivr
fst
lds
push
(bad)
fistp
aam
rcl
jg
mul
pop
jnp
add
repz
mov
xchg
mov
shr
mov
sbb
sbb
mov
movs
out
repz
retf
xchg
mov
rcl
sub
lods
fldcw
mov
xor
pop
dec
daa
mov
js
addr16
cmps
bound
xchg
mov
mov
ss
fisub
fs
jbe
inc
push
pop
or
dec
dec
xchg
cmp
push
ror
shl
retf
jns
scas
jl
sbb
or
outs
mov
add
pop
push
jae
push
mov
cli
or
xlat
jmp
mov
test
and
mov
test
sbb
shl
or
cmp
sub
adc
ins
jmp
in
stos
cmc
cmp
neg
jnp
adc
mov
dec
pop
pop
(bad)
jo
cs
add
and
sub
lock
popa
fs
sar
dec
sub
daa
jl
jae
jmp
push
add
lock
rcl
imul
pop
jne
and
push
jmp
dec
test
sbb
pop
jnp
faddp
(bad)
cld
sbb
push
sbb
retf
sbb
pop
out
jo
cmp
mov
or
push
lea
iret
push
push
dec
push
mov
bound
pop
cmps
retf
dec
mov
jno
dec
dec
loopne
cmps
adc
mov
mov
sbb
push
push
loopne
add
add
jecxz
xchg
pop
mov
pop
loop
or
cli
or
push
rol
(bad)
test
jmp
ins
push
ins
jno
js
fidiv
push
rcr
push
out
adc
inc
inc
lods
push
or
sbb
xadd
mov
mov
cmp
inc
xlat
enter
mov
in
movs
mov
jbe
sub
in
xchg
rol
pop
xor
scas
or
add
popf
ds
push
sbb
sub
pop
add
pop
jmp
outs
mov
nop
cdq
xor
add
cmp
cmp
or
mov
add
js
imul
jne
loopne
pop
iret
(bad)
bound
xchg
icebp
fsub
clc
inc
outs
fistp
cmp
leave
movs
icebp
(bad)
mov
pop
sbb
arpl
xor
lahf
dec
dec
xchg
or
pusha
das
sbb
xor
test
mov
dec
jo
mov
xor
rcl
inc
mov
jno
cmp
cmp
and
jno
movs
or
sahf
(bad)
adc
sub
ss
bound
sub
mov
je
daa
push
scas
cmp
in
or
sbb
mov
jae
test
(bad)
or
aas
ret
mov
cmp
ret
jp
mov
loope
sbb
inc
adc
mov
pop
and
lea
es
xchg
xor
xor
cdq
sub
mov
xor
xor
sub
mov
cmp
rcl
inc
stc
repz
sub
xor
pop
pop
movs
(bad)
pop
and
push
jbe
das
cmp
push
push
mov
mov
mov
repnz
in
je
cld
xor
or
gs
out
push
jl
or
outs
or
(bad)
mov
push
mov
sub
rcl
std
icebp
(bad)
pop
scas
aas
mov
mov
xor
or
sub
mov
into
aas
outs
or
(bad)
cld
mov
cmps
arpl
(bad)
adc
fs
rol
push
fs
mov
inc
xchg
sub
sbb
mov
jmp
ins
or
js
repz
mov
scas
cli
jb
inc
jle
int
les
push
bound
adc
push
pop
cmp
(bad)
loop
jle
(bad)
imul
jno
jbe
mov
jp
icebp
lods
fsubr
mov
test
or
push
cmp
movs
jns
pop
aas
xchg
repnz
movs
cmp
mov
retf
push
mov
(bad)
jl
out
inc
push
shl
cmp
shl
push
dec
jno
out
xabort
call
sahf
loop
pusha
push
pop
pop
test
in
mov
sbb
mov
push
arpl
xchg
dec
call
dec
daa
hlt
cmp
xlat
push
hlt
ret
aad
ficomp
push
pop
sub
aam
loop
mov
xchg
ror
adc
(bad)
sbb
pop
loope
sbb
push
cmp
mov
test
xor
cmp
xor
rcr
xor
jb
mov
addr16
and
retf
jnp
sbb
retf
dec
add
mov
les
aaa
cmp
push
pop
hlt
test
inc
ja
sub
in
jp
push
push
ret
mov
movs
push
jno
add
aad
xchg
or
mov
xlat
mov
jmp
sub
pushf
mov
fcom
add
test
(bad)
mov
dec
aaa
adc
cmp
retf
hlt
mov
in
xchg
mov
push
sub
cmps
xchg
xchg
add
lock
pop
lods
or
pushf
into
xchg
jmp
mov
ins
pop
pop
push
lods
jp
dec
jo
shl
inc
xchg
subps
push
mov
cmps
adc
mov
pop
inc
bound
push
adc
ret
in
pusha
inc
jnp
dec
fisub
std
iret
add
in
out
stos
lods
sbb
cmp
jl
xchg
(bad)
push
jmp
jp
mov
push
cmc
push
(bad)
adc
cdq
shr
or
lods
add
add
out
ds
or
jmp
std
dec
sbb
outs
mov
or
push
add
shl
addr16
jae
pusha
push
test
mov
xchg
ret
test
lods
and
mov
mov
add
cld
jmp
ds
mov
ret
in
push
pop
adc
hlt
movs
data16
cs
pop
stos
sub
xor
popf
mov
pop
pop
sbb
or
call
jmp
retf
dec
adc
mov
mov
aad
sbb
bound
cmps
cmps
dec
vtestps
inc
jecxz
fmul
loope
jns
dec
pop
ror
(bad)
ss
xchg
(bad)
xlat
xor
sbb
add
sahf
fimul
mov
inc
inc
outs
mov
lock
mov
aad
popf
movs
sub
jne
nop
popf
clc
and
mov
btr
pop
js
retf
fs
sbb
arpl
ret
pop
mov
cdq
and
das
enter
pop
push
xchg
mov
mov
jmp
jae
arpl
jp
not
lds
(bad)
mov
pop
sub
mov
jmp
aas
in
(bad)
sub
call
in
push
ds
jb
js
adc
out
mov
xchg
or
jnp
jl
sbb
and
xor
out
inc
(bad)
fwait
enter
mov
rcl
(bad)
adc
pop
mov
inc
jl
sbb
jne
mov
push
gs
jge
cmp
aaa
push
jo
cdq
and
leave
jp
fsubp
xchg
mov
add
mov
out
jp
mov
or
pop
or
fwait
mov
fdiv
mov
add
pop
iret
nop
inc
and
add
mov
inc
retf
(bad)
or
mov
mov
jl
fcomp
mov
cli
pop
adc
lea
fsubr
fisttp
mov
xlat
mov
xchg
imul
xor
mov
xor
pop
jge
aas
fistp
mov
jmp
das
outs
rcr
dec
xor
xor
(bad)
xchg
or
xchg
sub
jge
cdq
push
fist
jmp
fwait
mov
jne
dec
and
je
adc
es
ret
mov
dec
arpl
imul
jne
out
sub
xor
loopne
mov
lock
pop
rcr
mov
daa
ret
adc
(bad)
and
push
mov
and
cmps
in
mov
stc
ds
les
or
mov
repz
inc
imul
cli
cmps
dec
mov
loope
fisub
(bad)
sbb
nop
arpl
cmp
sbb
or
call
cmps
fdiv
mov
mov
sub
mov
jmp
pushf
inc
retf
sub
bound
adc
data16
clc
add
push
jns
xor
jmp
xchg
dec
push
outs
int
(bad)
jecxz
clc
fnstcw
mov
mov
dec
jp
(bad)
pop
test
mov
pop
repnz
cmp
jmp
fucom
xor
cmp
push
adc
jl
add
add
push
dec
fwait
lock
xchg
lds
in
add
pop
mov
xlat
pop
sub
xchg
ret
pop
dec
ins
in
mov
bnd
fnstenv
mov
mov
sub
(bad)
xor
daa
mov
enter
(bad)
cmp
cmp
sub
repnz
(bad)
(bad)
xchg
daa
sub
clc
push
out
pop
loopne
mov
test
xchg
cmp
cmp
sub
push
cmp
aad
mov
mov
cmp
jne
xchg
mov
xchg
fcom
imul
repnz
mov
xchg
push
xor
push
xchg
jbe
xor
dec
and
jge
mov
les
jmp
jae
daa
pop
dec
mov
mov
shl
pushf
jbe
jge
jno
lods
jo
sbb
mov
fiadd
add
mov
mov
add
jb
in
rol
and
fucomi
fidivr
lahf
pop
daa
sbb
cmp
push
mov
or
popa
cmp
inc
iret
pop
aas
fstp
mov
mov
pop
call
aaa
call
or
outs
or
aam
aas
loopne
hlt
in
inc
push
popf
fs
test
addr16
jne
imul
out
shl
int3
iret
movs
pop
movs
iret
dec
mov
add
daa
mov
es
sub
into
pop
int
pop
and
cmp
push
popf
stos
ins
cld
jbe
inc
add
xchg
sub
(bad)
push
jmp
jae
inc
aam
(bad)
push
mov
pop
push
inc
xchg
xor
scas
mov
je
xor
or
(bad)
call
adc
mov
loopne
and
xchg
out
inc
pop
cdq
push
je
jg
outs
sub
out
and
add
adc
jns
addr16
cwde
inc
call
lds
shl
jmp
shr
ja
clc
jne
add
jle
sbb
outs
pusha
test
hlt
inc
and
retf
adc
movs
jo
adc
mov
pop
jne
pop
loopne
cmps
(bad)
push
ret
leave
xchg
jl
sbb
outs
or
jg
jmp
inc
(bad)
sub
or
cli
pop
xchg
int3
ins
cmp
(bad)
jge
movs
pop
data16
and
push
jae
test
(bad)
out
lock
dec
pop
xlat
sub
or
mov
xchg
mov
push
lea
mov
sub
scas
sbb
and
ror
jnp
sub
cwde
fnstcw
mov
mov
into
in
das
into
sbb
sub
jo
or
dec
in
pop
xchg
xchg
lods
mov
dec
dec
jns
pop
push
or
dec
jecxz
or
pop
sub
cwde
push
inc
xor
test
nop
daa
repnz
xor
sub
in
sahf
xchg
je
mov
and
mov
dec
cmp
aas
dec
imul
push
movs
fcomp
xchg
imul
aam
sub
add
fwait
mov
addr16
or
mov
xor
not
jge
and
jb
cli
inc
in
inc
fwait
shr
push
inc
call
xchg
rol
sub
outs
dec
mov
jmp
cmp
rcr
push
in
sbb
pop
and
xchg
and
ja
adc
mov
sahf
mov
(bad)
sbb
adc
pop
pop
aas
movs
sti
jge
pop
cmp
jae
test
add
hlt
clc
xchg
inc
dec
pop
adc
jl
repz
in
jp
inc
out
push
mov
push
push
pop
sub
test
inc
stos
sahf
cs
xor
lahf
jnp
out
enter
lods
test
pcmpeqw
add
push
in
and
inc
ins
mov
int
mov
adc
js
pop
ds
add
dec
icebp
xor
shl
or
sbb
sbb
imul
sbb
lds
out
das
in
cli
fs
or
pusha
scas
mov
push
jge
shl
xlat
shr
and
xor
leave
lahf
sub
cmp
or
scas
xor
mov
and
and
pminsw
imul
int3
cwde
ficom
call
outs
gs
cs
add
retf
cmp
dec
mov
iret
mov
pop
pop
inc
pop
into
sub
push
jmp
sub
add
iret
xor
lea
push
cmp
jmp
rcl
addr16
sub
call
aaa
sbb
dec
sub
and
xchg
jp
icebp
cmp
lock
movs
dec
mov
pop
pop
inc
pop
jmp
and
xor
unpckhps
pop
mov
outs
pushf
mov
aam
jno
xchg
pop
xchg
mov
or
repz
pop
or
inc
pop
leave
cmc
in
cmps
cmc
inc
vpsubusb
dec
or
js
in
xor
pop
fsub
cdq
cmps
(bad)
or
or
and
rol
xor
jmp
sbb
mov
and
jg
fimul
dec
mov
adc
jge
jno
sti
cmp
gs
sub
pop
dec
cmp
mov
dec
jns
loop
daa
dec
sbb
fstp
mov
mov
mov
xor
push
cmp
das
add
mov
repz
inc
test
mov
push
dec
or
pop
cmp
push
hlt
mov
xor
ins
jo
ret
mov
mov
xchg
sar
std
sub
out
in
push
sbb
popa
sbb
lods
shr
cmp
jbe
lods
add
pop
call
test
std
push
mov
and
wbinvd
mov
adc
push
std
jns
or
push
push
mov
movs
jl
xchg
lock
mov
xchg
mov
retf
push
jge
mov
icebp
sub
enter
out
imul
push
inc
div
loopne
sti
jae
dec
sub
push
sbb
gs
out
jne
add
clc
or
adc
push
sub
call
xor
jae
gs
loop
lds
and
rol
(bad)
push
cmp
ja
push
js
je
xlat
std
shr
sar
out
or
push
mov
aas
xor
cwde
lea
je
fstp
xor
add
xchg
sub
xor
mov
sti
adc
dec
push
std
dec
cmp
adc
addr16
pop
leave
push
bound
shrd
dec
addr16
popf
inc
icebp
lock
jl
fdiv
stos
test
pushf
ror
call
int3
mov
retf
jg
imul
daa
jg
loope
pop
push
and
ss
lock
ret
dec
loopne
dec
(bad)
into
movs
call
cmp
out
xor
loop
loopne
test
push
ins
dec
dec
mov
mov
cmp
pop
inc
push
jmp
inc
mov
jns
inc
hlt
inc
fwait
call
or
or
xor
push
(bad)
(bad)
mov
mov
pushf
aam
sbb
sub
mov
add
inc
aam
pop
movs
lods
mov
inc
scas
xchg
inc
push
sbb
fist
(bad)
shl
adc
push
mov
and
mov
ins
xchg
bound
aam
xchg
inc
add
xlat
push
push
jae
popf
push
xchg
push
sub
xchg
adc
mov
call
sub
stc
dec
mov
stos
mov
mov
mov
push
in
mov
cdq
jne
ficom
add
ficom
jmp
nop
loope
sbb
jmp
sbb
nop
std
outs
cmp
mov
aaa
pop
retf
repnz
dec
sbb
pushf
repnz
outs
mov
cmp
in
pop
jae
aaa
lods
xor
mov
ret
sub
and
jg
cmp
dec
jns
and
movs
bound
in
clc
xchg
into
push
sub
inc
mov
cli
jge
lds
jp
mov
push
test
inc
int
and
leave
xchg
lods
sbb
jge
pop
mov
push
div
dec
mov
jp
jne
mov
shr
nop
call
lock
rcr
idiv
call
pop
les
(bad)
mov
test
andnps
and
loop
and
pop
cmp
mov
into
shl
fneni(8087
dec
loop
push
adc
pop
sahf
mov
pop
mov
push
jo
add
inc
xlat
xor
lods
call
dec
jmp
xchg
fldenv
pop
push
stos
(bad)
fcom
pop
sub
in
rcl
std
pop
fs
outs
jecxz
xchg
xor
add
daa
cli
xor
sbb
cld
dec
ret
lahf
sbb
in
mov
and
mov
iret
pushf
add
test
mov
call
clc
pusha
adc
jne
and
pop
dec
add
sbb
jb
data16
xor
(bad)
sbb
lods
pop
mov
fisttp
mov
mov
pop
jns
out
data16
mov
sub
cs
ds
pop
add
test
or
mov
(bad)
aas
push
movs
jb
adc
rcl
inc
ins
push
pop
fs
mov
test
bound
je
mov
loope
mov
mov
gs
xor
in
mov
pop
jp
popf
retf
pop
dec
pop
adc
xchg
sub
cmp
cwde
shl
lea
xlat
jecxz
pop
inc
lods
pop
pop
movs
push
mov
or
aad
cmc
aas
movhps
clc
(bad)
inc
sub
hlt
pop
or
xchg
xchg
shr
repz
repz
(bad)
jb
call
les
dec
sbb
xchg
pop
xor
push
jmp
ss
mov
shl
add
ret
fs
mov
push
mov
test
and
jmp
xor
call
aad
fdiv
add
ret
imul
adc
aaa
inc
adc
add
movs
sahf
shl
icebp
repnz
fcom
stc
pop
inc
call
pop
mov
popf
into
pop
loope
sar
lahf
cwde
call
scas
xor
push
out
mov
out
mov
das
call
sub
cmp
xchg
les
push
push
call
gs
pop
push
iret
xchg
std
fisub
push
cmp
or
loop
retf
fimul
mov
xor
scas
icebp
ret
aam
loopne
pusha
(bad)
xor
(bad)
pop
cmp
mov
stc
and
retf
jp
xchg
(bad)
dec
das
out
scas
das
jno
xorps
jno
or
(bad)
(bad)
mov
dec
add
cmps
iret
je
scas
clc
jns
and
dec
call
sub
pop
(bad)
shl
jge
add
fnstsw
nop
xchg
mov
xchg
(bad)
scas
repnz
mov
loopne
or
pop
in
push
sub
jmp
data16
je
pop
pop
daa
lds
xchg
sbb
sub
and
xchg
and
ds
in
jecxz
push
leave
gs
pusha
sbb
das
cmc
jge
mov
jne
push
mov
repz
mov
or
xchg
shl
sahf
(bad)
mov
mov
cmc
fnstcw
adc
das
mov
gs
ins
adc
movs
loop
push
fld
(bad)
mov
out
in
call
hlt
fmul
push
mov
or
push
sub
push
pop
push
test
add
not
rcr
clc
aaa
sbb
dec
cli
pop
out
loop
scas
test
sbb
cli
bound
xor
into
ret
into
js
cmp
mov
dec
and
add
push
push
push
ret
xor
add
add
mov
mov
add
div
xchg
out
cmps
je
adc
popf
xchg
mov
call
ret
(bad)
ins
xor
inc
pop
repnz
nop
cmc
or
fnstcw
sub
(bad)
and
mov
cs
xchg
adc
xchg
test
lock
(bad)
fisub
add
push
or
leave
(bad)
and
jnp
lds
mov
jg
movs
lea
jns
xchg
stc
das
test
fmul
and
push
jg
cmp
call
scas
sbb
push
jo
stc
push
add
sbb
xchg
cli
jo
aaa
fdivr
add
fs
pop
inc
movs
outs
nop
stos
cmp
call
ror
push
jno
retf
or
test
cwde
inc
mov
es
sti
sub
popf
xchg
adc
dec
fisub
cmps
or
and
push
gs
cmp
(bad)
pop
push
cmp
and
pop
shl
call
xor
popa
jle
aaa
jae
add
pop
sub
and
or
ret
scas
jb
lock
sub
adc
movs
stos
xchg
or
fs
adc
dec
sbb
jge
jbe
xor
cdq
neg
daa
adc
sbb
xor
cmp
iret
dec
dec
jg
add
fmul
out
stc
jno
dec
push
xchg
pop
addr16
aas
and
cmps
pop
scas
sbb
xor
loope
clc
inc
inc
bound
popa
movs
(bad)
cwde
out
fistp
and
mov
pop
cwde
dec
dec
adc
pop
mov
add
lods
xchg
sub
jg
rcl
cmc
mov
fwait
enter
inc
add
lock
xor
pusha
mov
jecxz
mov
inc
adc
mul
lea
jns
jmp
pop
outs
mov
outs
js
out
imul
in
jnp
ror
dec
push
cmps
and
cwde
jle
pop
jae
mov
in
xor
retf
movs
jb
sub
mov
fst
mov
into
mov
push
dec
(bad)
adc
cmp
pop
adc
mov
js
lods
test
cwde
sub
jae
pop
fs
repnz
scas
fprem1
mov
push
iret
shl
imul
ja
push
inc
mov
sub
mov
pop
push
xchg
mov
je
cmp
mov
out
cli
test
sti
rol
ja
xchg
jle
mov
pusha
jne
pushf
rcr
into
into
push
retf
cmps
mov
dec
sbb
xor
xchg
pop
hlt
jnp
popf
in
xchg
mov
mov
inc
out
stos
outs
(bad)
into
arpl
ins
dec
cs
and
mov
adc
call
push
std
bound
rol
cmp
or
movs
shr
cmp
(bad)
jg
inc
dec
xor
lods
push
mov
adc
fs
pop
dec
cmp
sub
push
push
arpl
sub
pop
mov
or
sti
dec
mov
nop
pushf
xor
adc
adc
js
sbb
push
(bad)
mov
test
jo
mov
outs
movs
pushf
jle
sbb
or
retf
(bad)
pusha
icebp
daa
test
daa
mov
or
sbb
pop
push
je
aas
scas
arpl
mov
jmp
and
test
mov
ins
repz
mov
mov
push
mov
shl
sbb
sbb
xchg
sbb
add
fsub
mov
cmp
outs
push
xchg
hlt
push
mov
inc
jne
popf
test
cmc
daa
add
inc
sbb
into
cmp
push
loopne
adc
mov
gs
fld
les
adc
and
fucom
out
xchg
out
jecxz
and
hlt
dec
data16
jbe
add
mov
xor
jne
fs
adc
frstor
dec
test
sub
int
movs
adc
mov
sbb
push
sub
or
int
repnz
xchg
jmp
and
jp
jp
loop
push
push
fisubr
cmps
test
stos
leave
mov
call
xor
jg
popa
das
or
mov
out
mov
push
add
ins
pushf
jo
shl
addr16
jge
in
mov
jae
mov
and
pop
int
int
jp
jl
loope
jne
xchg
into
mov
fcomp
sub
mov
js
adc
inc
add
fsubr
int3
sti
shl
fbld
into
xchg
pop
pop
jecxz
ret
stos
mov
daa
push
sub
cld
xlat
xchg
jae
pop
mov
dec
and
mov
ds
jo
stc
mov
add
cs
pusha
cmp
js
mov
add
faddp
lahf
push
jge
rcl
or
push
push
fidivr
and
push
jmp
in
adc
aaa
pushf
retf
cmp
bnd
add
add
into
cmps
out
aam
fdiv
scas
sub
mov
dec
shl
push
cmp
and
(bad)
inc
cmp
mov
fst
dec
xchg
cmp
mov
fs
jl
repnz
cli
and
mov
mov
rcl
dec
jp
mov
daa
mov
call
(bad)
out
sahf
or
retf
and
mov
clc
jp
fidivr
fsubr
inc
cmp
sbb
mov
ins
push
xchg
shl
mov
mov
hlt
xchg
inc
shl
lods
cmps
fdivr
daa
pop
int3
pop
js
arpl
mov
pop
inc
pop
sub
sub
jb
push
test
jo
lods
jmp
dec
sahf
pop
test
cmp
add
adc
in
mov
xchg
inc
test
out
xor
and
sbb
lahf
and
adc
lods
sub
les
je
ss
and
mov
imul
mov
xchg
xor
mov
adc
mov
or
cld
pushf
jmp
in
pop
push
outs
cli
cwde
cs
xlat
sbb
xchg
repz
push
and
inc
fs
adc
shr
or
scas
xchg
adc
push
cli
push
cmp
adc
xlat
jmp
das
js
(bad)
cli
ds
xor
jge
xchg
pop
shl
test
sub
adc
xor
pop
fist
or
xchg
in
sbb
sbb
and
aas
fwait
pop
cmps
sbb
jae
or
sub
in
inc
xor
pop
call
xchg
xchg
dec
push
daa
mov
jb
cmps
dec
shl
leave
stos
adc
rcl
xchg
pop
sub
pop
add
sar
ins
stc
lock
int3
in
mov
push
mov
push
xor
test
cmps
aas
bound
in
enter
retf
mov
fsubrp
aam
leave
(bad)
push
mov
dec
cld
inc
push
inc
jo
xor
xchg
aad
das
fiadd
inc
mov
mov
and
cld
sbb
pop
push
mov
ins
pop
loop
ss
outs
ja
loope
mov
dec
fwait
das
jb
sub
push
jge
or
sub
sub
loope
aam
movs
lds
jp
enter
mov
mov
jb
push
aaa
lods
pushfw
dec
or
push
add
imul
je
xor
bound
sbb
in
shr
add
or
cdq
jne
dec
repnz
xchg
in
jl
push
loop
adc
mov
mov
(bad)
cmc
mov
jl
add
and
rcr
mov
outs
ret
ins
jge
out
inc
and
fwait
loope
imul
pop
outs
(bad)
shl
xor
pop
sbb
or
les
arpl
mov
and
jecxz
push
adc
arpl
fstp
jo
push
or
iret
mov
xchg
stc
jbe
add
(bad)
fsub
neg
loopne
push
jmp
test
imul
adc
call
and
scas
pop
jecxz
xor
add
sub
or
push
xor
xchg
mov
out
dec
rol
rcl
popf
dec
push
ror
xrelease
(bad)
not
outs
inc
dec
sub
out
ficom
cmps
call
ja
cmp
mov
enter
movs
push
xlat
test
jae
pushf
push
outs
cwde
out
daa
cmp
cwde
adc
push
push
pusha
pusha
dec
cmp
and
int3
pop
movs
mov
loope
adc
adc
sbb
(bad)
(bad)
fbstp
je
sub
mov
(bad)
aam
ret
lahf
mov
ins
push
jge
imul
and
sub
sbb
fistp
mov
dec
add
cmps
push
les
cmps
ret
movs
inc
xor
dec
sahf
test
add
(bad)
lods
dec
xchg
or
xchg
movlhps
xor
(bad)
push
push
push
dec
mov
sbb
sbb
xchg
aaa
aas
(bad)
pop
loopne
lock
xchg
sahf
sub
ss
cmc
xchg
xor
icebp
cmp
ret
mov
cmp
sti
mov
pop
fcom
fdiv
out
test
fsubr
xor
inc
gs
mov
cmps
ror
adc
sub
int3
cmp
mov
rcr
(bad)
cmp
out
or
into
jbe
pop
out
imul
and
mov
rol
fcom
adc
pop
(bad)
leave
retf
mov
and
in
dec
push
jns
xchg
cwde
sbb
mov
cwde
mov
fist
in
int3
xchg
sub
adc
pop
xor
lods
ror
call
frstor
mov
shr
imul
(bad)
ins
(bad)
cld
in
xor
xor
cmp
mov
mov
call
(bad)
call
dec
in
imul
ret
loop
push
cmp
cmp
xlat
fsubrp
sub
and
mov
loopne
test
jp
ret
lock
xor
xor
loop
xchg
xor
cwde
cmp
push
icebp
nop
pusha
adc
add
xor
mov
out
(bad)
xchg
pop
retf
fild
aaa
fisub
icebp
outs
movs
inc
add
push
xchg
push
cmps
int3
in
into
add
pop
cmp
xor
mov
in
fist
jg
pop
pop
and
jno
imul
pop
adc
add
movs
arpl
mov
in
mov
add
cmp
jnp
jns
fcom
rcr
add
fstp
imul
and
dec
icebp
pop
arpl
sahf
pop
dec
pop
fsub
das
xor
das
inc
pop
mov
out
xchg
into
ds
inc
stos
arpl
mov
(bad)
(bad)
sbb
imul
add
adc
sub
pushf
fisttp
lock
ja
jb
rcr
pop
lahf
jge
sti
pop
jo
es
inc
xchg
fs
inc
(bad)
mov
and
pop
pop
jp
shl
sbb
lds
cmc
mov
ds
inc
jl
jmp
pop
out
out
pop
inc
daa
sbb
lahf
jge
and
xchg
sahf
mov
dec
les
in
jmp
mov
ret
xchg
sub
addr16
mov
xchg
jecxz
sbb
test
cmp
mov
scas
addr16
sub
inc
adc
and
clc
xor
mov
out
test
cmp
movs
rcl
shl
aaa
mov
dec
adc
lods
fst
sub
mov
mov
bound
fcmovnb
jp
or
xor
(bad)
popf
push
push
fs
xchg
stos
pop
cmc
mov
sbb
je
cmp
adc
add
mov
aas
fld
and
pop
push
push
mov
pop
mov
mov
out
sub
neg
dec
loope
inc
mov
adc
outs
cmp
xor
add
sub
push
test
mov
mov
fisubr
cmp
cli
dec
into
out
int3
cs
imul
push
cwde
lods
jbe
xor
mov
xor
ss
mov
mov
mov
add
(bad)
pop
push
xchg
hlt
not
jp
xor
cdq
cmp
sbb
pop
cwde
out
or
push
mov
aas
jl
jp
or
mov
xor
hlt
mov
test
aad
xor
pop
push
and
out
cmp
aam
sbb
add
sbb
add
es
and
mov
xchg
aas
stc
(bad)
pushf
jno
in
push
or
(bad)
sbb
inc
jbe
ret
mov
sti
dec
jo
jnp
enter
pusha
xchg
jbe
fdiv
jno
or
adc
jmp
aam
test
int
fnstcw
scas
rcl
dec
arpl
in
lea
ja
push
mov
(bad)
inc
loope
daa
push
mov
sar
add
add
xor
das
test
ret
outs
or
mov
iret
out
jns
mov
jo
jbe
idiv
mov
test
cmp
add
push
add
inc
sbb
mov
pop
fisub
mov
dec
not
imul
ficomp
les
push
mov
dec
pusha
mov
dec
ss
ds
or
add
jge
(bad)
inc
xchg
fidivr
mov
fisttp
and
clc
sbb
push
mov
mov
pop
or
loop
sbb
out
or
adc
call
movs
push
mov
sbb
scas
rcl
cs
mov
icebp
out
xchg
push
fldenv
(bad)
into
or
push
loopne
pop
pop
mov
jle
mov
inc
adc
push
fs
jo
mov
fisub
je
adc
(bad)
jmp
xchg
inc
into
xor
es
test
xchg
inc
add
xor
mov
cwde
push
push
ja
inc
call
jne
pop
stos
outs
dec
xor
pop
dec
out
ret
idiv
xlat
stos
pop
and
adc
nop
es
mov
sub
jge
out
(bad)
mov
inc
(bad)
mov
in
push
(bad)
ins
pop
jmp
imul
push
in
pop
enter
adc
retf
mov
ins
sar
ror
xcrypt-cfb
cmps
in
loop
push
jecxz
rol
aam
loop
popf
add
pop
inc
in
pop
scas
or
push
arpl
jns
rcr
or
mov
test
(bad)
mov
adc
jo
jg
pop
call
mov
jp
into
mov
adc
pop
scas
xchg
repz
ins
test
stos
ja
repnz
test
mov
cmp
stc
not
movs
mov
mov
out
adc
rol
xor
push
xor
push
pop
aam
xchg
lods
stos
jl
or
scas
aas
ret
lea
test
aaa
jmp
popf
mov
adc
sub
jmp
leave
cmp
mov
pop
(bad)
or
lods
imul
mov
jno
sbb
bound
sub
lock
adc
inc
cs
jbe
pop
push
ss
mov
xchg
pop
jl
mov
sbb
dec
pushf
ins
pop
(bad)
fwait
es
cmps
(bad)
xchg
mov
outs
xchg
inc
pop
dec
jno
pop
icebp
xor
xchg
fwait
inc
cmp
mov
sar
push
xchg
jecxz
jl
dec
repnz
push
xor
jecxz
icebp
and
mov
push
or
push
cwde
mov
mov
cmps
scas
in
inc
std
mov
cmp
jbe
inc
das
sub
sub
add
aam
xchg
pop
jns
push
jnp
nop
sbb
sub
jg
dec
es
aam
fistp
pusha
jmp
js
jns
icebp
xchg
cld
mov
addr16
and
and
rcl
rol
cmps
sar
mov
(bad)
push
jge
or
aad
mov
les
dec
nop
sbb
mov
cmps
je
mov
ds
push
or
out
popa
cmp
fst
lahf
cdq
rol
inc
mov
ins
std
stos
xor
loope
popf
and
fmul
jne
mov
add
add
xchg
xchg
push
or
jl
jp
cmp
es
pop
push
xor
fcom
popf
aad
repnz
inc
push
fnstenv
hlt
jne
push
adc
inc
bound
cmp
pusha
imul
test
std
nop
ss
or
(bad)
xor
mov
dec
lods
lds
jmp
addr16
push
jno
mov
aaa
sub
or
bsf
dec
rcl
loop
inc
clc
adc
and
hlt
aas
imul
popa
sti
jns
hlt
pop
inc
mov
pop
jg
sub
mov
jns
(bad)
and
ds
stc
(bad)
addr16
xchg
sub
ins
or
gs
loope
int3
aam
(bad)
in
push
shr
out
(bad)
shl
pop
and
push
in
mov
xchg
lods
pop
clc
push
ja
out
mov
leave
mov
js
repnz
jmp
jmp
cmps
dec
mov
fs
ja
sar
pop
outs
mov
mov
stos
mov
xchg
sahf
mov
hlt
das
test
mov
ret
or
sar
test
push
push
cwde
push
ret
in
pop
mov
shl
mov
pop
mov
cmp
lea
not
and
jnp
push
out
mov
imul
nop
sbb
mov
adc
popf
sti
movzx
mov
push
fwait
bound
mov
test
mov
mov
pop
push
ret
sub
int3
test
nop
ror
out
push
aaa
pop
cmp
push
adc
int
xchg
lods
pop
sbb
dec
jae
stos
cld
or
mov
fidivr
mov
mov
xchg
cld
inc
inc
outs
fld
sahf
push
(bad)
jle
imul
jno
iret
clc
ret
cwde
adc
mov
scas
xor
sbb
sbb
pop
jmp
jae
mov
test
push
(bad)
pop
inc
jnp
out
sti
ror
stos
mov
sbb
mov
(bad)
(bad)
add
inc
int
scas
mov
xchg
imul
arpl
fs
daa
xchg
jne
inc
jns
mov
fidivr
shl
add
and
pop
jmp
not
cmp
(bad)
pop
sbb
bnd
outs
scas
pusha
inc
lahf
hlt
pop
cmps
adc
or
je
mov
adc
push
inc
xlat
mov
mov
mov
sar
adc
imul
dec
jo
gs
pop
in
push
cmp
inc
inc
jg
mov
out
sub
(bad)
lds
xchg
inc
clc
add
mov
ret
iret
stc
sub
xchg
jp
dec
cmp
aaa
dec
push
sub
push
xchg
jb
cmp
lds
(bad)
shr
pop
repz
push
call
mov
inc
retf
push
outs
les
and
jecxz
iret
adc
data16
lahf
jge
mov
dec
cld
ror
pop
cld
add
xchg
addr16
jp
mov
lds
sbb
inc
das
iret
ja
fcomp
sbb
hlt
ss
hlt
repnz
ds
push
(bad)
xor
jae
dec
call
pop
stos
iret
and
(bad)
out
xchg
gs
inc
out
jge
cmp
loopne
retf
je
nop
jae
(bad)
push
sub
pop
add
xchg
(bad)
rcl
fcomp
ror
mov
and
jb
out
scas
in
shl
adc
add
jb
sbb
jl
mov
pop
sub
rcr
xchg
aad
xchg
push
add
xadd
xchg
outs
cmp
add
popa
(bad)
jns
fsubr
fs
ins
ud2
ds
inc
cdq
repz
cwde
lea
xor
sub
aaa
or
fcom
(bad)
daa
cmps
add
mov
jle
fisub
ss
imul
cmc
rol
repnz
pop
daa
mov
cld
cmp
(bad)
in
pop
std
mov
aas
push
dec
lds
sub
rcr
inc
fdivrp
lds
mov
btc
mov
mov
cmp
data16
lods
add
jg
push
mov
idiv
jno
mov
add
test
cmps
inc
mov
lods
stc
fsubrp
xlat
mov
cmp
lea
rol
in
jne
das
mov
inc
push
imul
fist
jmp
popa
out
stc
dec
sbb
(bad)
mov
push
clc
test
lods
ret
pop
add
adc
mov
pop
xor
pop
xchg
mov
mov
mov
sbb
clc
add
xadd
les
and
int3
dec
dec
mov
std
mov
jge
scas
cs
lahf
mov
and
leave
cmps
or
clc
xchg
repz
jo
jne
int3
ins
xlat
popf
sbb
imul
sbb
iret
xchg
rol
sbb
sbb
mov
loopne
ror
sub
and
add
xchg
sub
pop
gs
adc
adc
pop
arpl
sub
push
stos
cli
cmps
imul
pop
xchg
jne
push
inc
mov
xor
sahf
loopne
retf
jmp
push
ins
add
mov
ins
sar
pop
jne
ja
inc
dec
mov
test
ins
out
jo
jp
jmp
scas
dec
sti
rol
sub
stos
mov
cwde
jl
retf
dec
inc
imul
push
adc
shl
or
pushf
jns
adc
mov
cld
push
add
popa
mov
test
cmps
lea
mov
arpl
mov
dec
ss
clc
sbb
mov
lock
(bad)
pushf
in
sbb
push
inc
xchg
mov
mov
push
xchg
js
mov
sahf
arpl
test
mov
std
mov
popf
(bad)
leave
test
out
hlt
inc
dec
ja
pop
(bad)
push
call
clc
mov
aad
adc
stc
div
mov
rcl
pop
and
aaa
pusha
jno
out
scas
dec
outs
(bad)
xchg
xchg
mov
popf
pop
test
xor
das
sub
stc
cmp
mov
add
out
sbb
jl
push
cwde
scas
neg
enter
mov
popa
out
es
mov
xor
xchg
imul
jecxz
and
mov
mov
and
nop
stc
out
xchg
pop
sub
add
ret
test
mov
push
nop
sub
test
repz
mov
push
adc
stos
inc
aaa
(bad)
add
xchg
and
cmp
loopne
loopne
or
mov
mov
fbld
dec
ror
ins
mov
dec
mov
xchg
xchg
sbb
mov
xor
inc
rol
repz
xor
xor
shr
cmp
pop
inc
cmps
mov
out
and
enter
xchg
push
push
dec
in
leave
dec
jle
hlt
daa
push
ret
jg
les
fwait
push
adc
add
stos
mov
stc
(bad)
and
movs
retf
in
repz
jno
fstp
xchg
push
jg
enter
jno
gs
dec
mov
mov
out
and
out
repz
cmp
fdiv
pop
retf
aad
pop
ins
and
cmp
es
cli
cmp
sbb
in
cmc
loop
mov
and
push
lods
test
cmp
push
loopne
rep
xchg
cmc
ret
or
push
cmp
add
cmc
mov
pop
lods
stc
stc
pop
push
lock
push
jns
mov
mov
sub
push
pop
popf
sub
jnp
dec
sbb
jo
ja
mov
push
jle
jecxz
dec
or
stos
jmp
mov
dec
jecxz
or
push
out
test
mov
push
int3
dec
push
icebp
mov
sbb
or
inc
jmp
xlat
dec
xchg
fnsave
ja
iret
xor
clc
imul
repnz
retf
push
mov
push
arpl
or
mov
(bad)
dec
cmc
pusha
and
(bad)
bound
adc
sub
mov
mov
jnp
adc
xlat
jno
loopne
sub
fbld
xchg
shr
xor
pop
scas
mov
pop
hlt
in
rol
inc
inc
mov
ret
jl
and
rcl
es
fistp
or
xor
sbb
je
jge
in
out
mov
mov
aas
xchg
mov
jb
push
mov
sub
(bad)
fcomp
dec
mov
mov
jle
or
sub
aam
repnz
adc
jnp
loopne
xchg
sub
data16
dec
aas
sti
push
pop
mov
mov
stos
mov
fimul
mov
cwde
cwde
lods
push
fwait
jmp
lahf
sbb
stc
xor
mov
in
jbe
sub
push
mov
loop
cmp
xor
mov
(bad)
shr
in
push
or
icebp
sub
or
mov
mov
lods
addr16
mov
inc
xchg
test
and
sub
idiv
push
inc
push
sbb
cmp
xor
xchg
mov
xchg
push
das
retf
pop
retf
sbb
push
jb
jecxz
rcl
lods
xchg
xor
mov
(bad)
repz
sahf
pop
call
test
nop
pop
test
(bad)
jmp
jae
rcr
dec
retf
fwait
std
push
leave
xchg
jmp
test
sbb
(bad)
adc
(bad)
loope
xor
pop
cmp
or
sbb
das
mov
xchg
mov
hlt
out
sub
lock
or
cmps
and
xlat
inc
aam
xchg
pop
out
adc
xchg
fwait
adc
stos
mov
sub
into
jnp
inc
add
cmp
push
jecxz
or
das
ds
call
(bad)
jne
jne
mov
pop
and
push
movs
jnp
pop
mov
enter
cmp
out
mov
cdq
and
sub
(bad)
and
mov
popf
push
inc
arpl
lods
and
sbb
pop
ret
mov
int
adc
call
fwait
out
shl
mov
sub
(bad)
icebp
ins
(bad)
push
dec
mov
inc
mov
jmp
inc
icebp
add
mov
add
push
gs
stos
xor
ins
xor
(bad)
dec
bound
inc
je
jmp
mov
xlat
imul
add
mov
xchg
sub
icebp
int
pop
jle
imul
shr
sub
sbb
movs
adc
hlt
xor
pop
dec
scas
sub
add
sbb
stc
movs
push
out
pop
not
test
test
mov
jmp
xor
loopne
fwait
push
out
jno
mov
in
hlt
dec
bound
ds
loopne
(bad)
ror
mov
pusha
loope
sti
add
loop
mov
mov
loope
jg
xchg
ud1
lock
sti
std
aad
jge
cmp
enter
pop
imul
mov
add
(bad)
and
sub
pop
cli
jno
in
xchg
pop
int3
push
(bad)
mov
push
(bad)
push
pop
jbe
lahf
add
pop
and
aas
stc
je
xor
stos
popf
out
xor
fs
pop
daa
imul
pushf
cmp
pop
mov
mov
adc
gs
pop
mov
hlt
lods
je
mov
jno
jno
mov
push
pusha
mov
idiv
sti
xchg
mov
outs
outs
loope
sbb
leave
cmc
fs
dec
push
ins
add
test
or
cmps
xchg
mov
or
into
mov
rcr
rol
js
cmp
xchg
jns
fsub
stos
and
into
sahf
icebp
call
inc
sbb
lahf
dec
test
inc
loopne
jbe
add
pop
or
ret
fidiv
add
mov
pop
das
and
(bad)
push
loop
dec
jp
mov
inc
sbb
mov
inc
retf
call
mov
add
stos
adc
bound
and
cmps
int3
dec
ror
add
(bad)
enter
cmp
jno
cmp
out
stc
sbb
out
mov
popf
inc
(bad)
lea
cmps
lods
icebp
jns
ret
js
inc
imul
jecxz
jae
inc
test
and
stos
jmp
or
push
(bad)
xchg
xor
mov
scas
loope
aad
mov
cli
enter
and
dec
jl
cmp
sti
and
lods
loopne
cdq
movs
sbb
adc
xor
mov
cli
xor
sub
out
cmp
jp
(bad)
loopne
in
(bad)
ja
and
dec
cmp
pop
jp
ret
inc
dec
or
rcl
pop
aad
jbe
data16
out
pop
lods
das
mov
ss
scas
retf
or
and
ror
lock
cmp
mov
and
out
dec
xchg
cmp
adc
xchg
sub
push
add
mov
jmp
mov
sub
loop
push
inc
pop
call
inc
lods
push
cmps
ror
sub
pop
sar
jmp
cmp
xlat
ins
pop
or
dec
shl
xchg
loop
nop
xchg
xor
ins
mov
sbb
(bad)
std
dec
mov
shr
and
outs
sub
dec
pop
jmp
mov
retf
jb
(bad)
jge
rcr
dec
lods
dec
cmp
and
sbb
or
inc
inc
shr
xchg
(bad)
xor
fs
scas
and
dec
push
push
neg
aam
adc
or
mul
pop
cmp
push
mov
pop
sub
cmp
addr16
retf
jnp
dec
push
xlat
dec
push
xor
outs
lods
push
scas
fmul
sub
xchg
mov
cwde
scas
movs
neg
cmp
inc
loop
ds
xchg
idiv
ficomp
push
push
test
jae
jg
sbb
je
cmp
or
xchg
pop
jge
mov
gs
lods
dec
scas
gs
(bad)
push
jecxz
dec
repz
clc
int
fwait
or
xor
sbb
xor
and
ins
enter
jl
or
jbe
fimul
cmps
pop
gs
push
push
sti
add
add
cwde
bound
pop
cli
mov
das
sbb
aas
movs
and
in
mov
jns
or
pop
xlat
test
pop
pop
stc
stos
and
xchg
jecxz
inc
push
xchg
(bad)
popf
pop
cwde
mov
bound
repz
sub
jne
sub
rcr
dec
inc
pop
jne
dec
test
mov
sub
jmp
adc
or
mov
dec
fcomp
aas
mov
nop
mov
cdq
ret
arpl
mov
sahf
add
mov
nop
xor
loopne
and
cld
push
inc
dec
cdq
loop
imul
cmp
les
sub
mov
mov
mov
test
leave
lods
mov
stos
sti
pop
xor
cld
je
mov
cmp
sub
arpl
ss
pop
(bad)
stc
cmp
push
jge
fstp
xor
les
out
ds
dec
(bad)
icebp
xchg
loopne
or
xor
jle
lock
test
mov
js
retf
add
jns
ds
addr16
xchg
sub
push
pop
fwait
int
in
dec
(bad)
inc
(bad)
pop
(bad)
(bad)
in
outs
shl
and
cmp
xchg
(bad)
dec
and
lea
mov
mov
enter
mov
dec
adc
sahf
mov
lods
mov
mov
jmp
je
sbb
push
cmp
inc
mov
push
call
leave
sub
push
movs
dec
mov
mov
push
cmps
add
push
(bad)
mov
xchg
pop
imul
pusha
pop
pop
sub
jp
popa
jmp
fucom
push
(bad)
jg
mov
(bad)
enter
xchg
in
fcmovne
sub
call
aam
mov
jp
sbb
mov
jne
loopne
jae
adc
add
jmp
cmp
mov
mov
inc
in
mov
gs
xchg
mov
xchg
outs
leave
mov
aam
shl
lods
pop
in
rol
push
dec
push
popa
in
hlt
lahf
enter
test
pop
lods
shl
jecxz
into
or
sub
xchg
popf
cmp
inc
jmp
mov
sbb
jmp
add
daa
loop
dec
mov
retf
jp
lea
mov
lea
dec
jo
leave
sub
xlat
pop
and
xchg
cli
xchg
pop
cld
push
jecxz
pop
mov
or
jo
outs
idiv
enter
and
mov
mov
loop
ret
jle
or
mov
add
xchg
scas
pop
(bad)
in
xor
dec
pop
xlat
pop
xchg
xor
sub
inc
push
xor
add
arpl
add
jnp
and
cmp
add
pop
out
repnz
xor
outs
fwait
leave
dec
mov
loope
std
sbb
adc
stos
xchg
jbe
add
cli
mov
loope
cmps
pusha
pushf
movs
fcomp
mov
(bad)
and
retf
outs
in
and
in
push
ffreep
out
je
cld
sub
and
pop
inc
sub
stos
mov
pop
push
sub
inc
xchg
mov
call
jl
add
adc
in
push
mov
push
pop
dec
stc
sbb
lods
outs
push
xchg
inc
les
or
not
inc
mov
jo
in
aas
iret
xchg
outs
mov
loop
aaa
add
sbb
cmp
out
aas
pop
dec
fnstenv
daa
loope
clc
out
and
js
sub
dec
jne
xor
pop
fist
push
aas
pusha
dec
fwait
jnp
mov
push
sbb
out
or
sti
or
add
shr
mov
call
nop
dec
push
lock
xchg
jo
int
or
pop
(bad)
cli
je
out
and
sar
xchg
mov
aad
jnp
dec
ins
popa
sub
repz
dec
add
push
arpl
lahf
jg
inc
dec
cmp
out
(bad)
push
mov
sbb
cmc
jno
repz
sbb
je
inc
cmc
mov
in
adc
leave
gs
aas
or
popa
cmp
jno
scas
lock
lea
jmp
adc
add
push
out
mov
mov
daa
fs
jmp
dec
mov
sbb
js
mov
in
in
retf
in
or
int3
and
cmp
(bad)
es
aam
ds
mov
fsub
dec
jge
jne
cmp
addr16
mov
sub
imul
sub
loope
pop
and
lahf
popf
push
loope
fstcw
test
in
sbb
xor
fs
ret
jge
xor
adc
scas
xor
and
out
or
mov
inc
adc
ret
xchg
call
jmp
loop
inc
cmp
add
into
xlat
or
jno
pop
ins
mov
out
je
test
das
mov
sub
std
push
xchg
mov
cmp
mov
mov
stos
and
dec
jmp
pop
int
cmp
fwait
jge
xchg
cdq
pop
or
sahf
cmp
mov
inc
mov
aaa
data16
xor
jge
mov
fsubrp
inc
mov
aaa
nop
js
inc
cmp
pop
add
retf
imul
and
sbb
mov
jno
dec
js
ins
sub
imul
aad
clc
add
es
out
call
imul
dec
std
rcl
and
in
sti
mov
ror
into
pop
popa
adc
(bad)
adc
aas
call
aam
pop
stc
out
sti
jmp
fs
sub
dec
out
xor
pop
out
into
in
add
xor
or
stc
test
push
out
dec
mov
mov
lods
push
cdq
dec
imul
xchg
add
sbb
sub
aad
sbb
jae
xor
test
cld
call
cli
adc
push
or
and
cmp
(bad)
push
jmp
(bad)
mov
and
adc
in
clc
mov
mov
in
lahf
adc
mov
mov
sub
add
sbb
xor
jb
push
pop
imul
dec
fwait
out
fwait
pop
push
mov
sub
cmp
je
jmp
mov
jecxz
sti
sbb
fcomp
push
adc
mov
imul
stos
or
out
and
clc
loope
rol
cs
xor
add
fidivr
and
repz
jb
inc
lods
xchg
sbb
in
fs
(bad)
dec
ins
leave
pop
adc
into
pop
scas
push
loopne
lea
xor
mov
repnz
adc
jmp
sub
enter
xchg
cmps
sub
sbb
mov
push
mov
xor
add
fistp
shl
pop
sub
xor
jl
or
push
jmp
inc
pop
xchg
cdq
lds
jmp
mov
add
pop
mov
xor
and
dec
ret
pop
xchg
retf
mul
lods
pop
mov
in
test
mul
daa
idiv
adc
mov
shr
pusha
sub
sub
xchg
sub
xor
jmp
jb
retf
out
out
or
pop
(bad)
out
dec
cmp
jl
lods
stos
rcl
mov
pop
gs
or
xor
cli
xchg
out
inc
fdivr
xchg
bound
push
cmp
pop
int
or
dec
xor
loope
in
stos
ret
mov
jmp
cs
fdiv
inc
(bad)
icebp
fldenv
xchg
out
xchg
jecxz
outs
pop
fsub
sub
aas
push
pop
mov
fcomp
sbb
inc
jns
cmc
fnsave
inc
ds
dec
inc
or
lods
aas
inc
mov
push
das
loope
popa
test
ss
adc
in
das
pushfw
mov
xchg
popf
push
and
sub
inc
ret
add
in
xchg
cmp
inc
push
push
mov
add
pop
pop
jl
enter
xlat
mov
mov
(bad)
iret
sbb
inc
shl
retf
jnp
cli
sar
fadd
popa
pop
lods
scas
cmps
sahf
call
mov
inc
xchg
lods
mov
jmp
fld
icebp
xchg
dec
pop
pop
popf
sbb
push
cmc
popa
call
mov
sub
mov
cmps
lock
jns
adc
in
adc
or
repz
lea
inc
das
mov
fimul
push
fidivr
add
pop
lds
cwde
fld
outs
xchg
fidivr
dec
sbb
inc
pop
inc
mov
clc
sub
aas
add
stos
movs
retf
xchg
mov
addr16
fs
bound
mov
dec
cmp
dec
inc
adc
xor
ins
std
sbb
adc
icebp
stos
mov
cmps
dec
inc
add
jb
mov
sub
cli
jo
(bad)
test
mov
in
loop
jmp
cmp
pop
js
scas
pop
mov
loope
mov
not
hlt
rol
cmp
jns
xor
push
xchg
(bad)
cmp
xor
adc
add
call
shr
vmovntps
mov
sub
jge
or
sbb
or
shl
pop
sbb
sahf
adc
call
out
call
lahf
mov
xor
imul
movs
bound
loope
jp
add
add
push
fistp
pop
fisttp
and
out
mov
mov
jg
dec
lahf
into
or
stos
xor
and
rol
sahf
repz
(bad)
fsubr
push
xchg
mov
ror
mov
dec
inc
or
adc
cwde
mov
pop
in
dec
xor
adc
repnz
std
fld
xor
mov
in
test
test
mov
ds
jo
mov
dec
in
push
test
push
push
xor
inc
jp
ror
adc
xchg
nop
push
or
cmc
mov
not
inc
push
jecxz
jle
dec
dec
sbb
mov
xchg
add
fnstsw
or
movs
fsub
pop
mov
add
addr16
xor
int3
in
xchg
and
fld
ret
test
ret
loopne
mov
pop
sar
das
xlat
jl
out
pusha
sub
fild
(bad)
xor
mov
and
and
mov
loope
and
pop
cmp
xchg
inc
mov
mov
or
xor
mov
xchg
pusha
xchg
ins
retf
or
shl
jno
jae
inc
or
adc
pop
scas
adc
ror
sahf
push
pusha
dec
inc
enter
jmp
jecxz
ror
mov
movs
add
int
scas
aad
ds
pop
into
mov
jno
sub
jnp
icebp
(bad)
jnp
pop
mov
dec
test
pop
pushf
xchg
or
and
movs
cld
int
lock
jae
ins
adc
enter
inc
mov
push
and
or
push
dec
mov
lahf
fisubr
push
mov
pop
fldcw
sub
outs
stos
sbb
icebp
sbb
ds
mov
cmp
push
mov
or
in
imul
aad
out
pusha
mov
cli
xor
gs
adc
cmp
xor
ret
sahf
imul
iret
pusha
or
cs
mov
or
jmp
bound
int
dec
sub
or
in
inc
pop
add
fbld
and
pop
adc
push
sbb
jns
(bad)
clc
enter
imul
sub
fdiv
sub
mov
test
test
movs
xchg
mov
xor
fild
(bad)
sub
pop
inc
cwde
cmps
cmps
sbb
fst
add
xchg
mov
sub
and
mov
sbb
aaa
daa
inc
jmp
dec
inc
lds
stos
aaa
pop
push
adc
pop
int
cdq
ins
xchg
adc
jmp
cmps
dec
std
sub
mov
loope
idiv
jb
xchg
test
jmp
jne
xchg
jae
test
inc
fcomip
int3
sbb
mov
xor
adc
cmps
lahf
mov
cdq
jbe
cdq
push
cdq
xor
outs
ins
out
pop
inc
js
inc
clc
pop
shl
cs
push
outs
push
pop
retf
out
or
cmp
dec
mov
rol
xor
push
outs
movs
aad
cmp
cmp
xchg
inc
lea
(bad)
in
mov
mov
xor
adc
and
pop
out
lods
fcomp
into
mov
out
xchg
push
xor
ins
fisttp
or
in
push
and
hlt
inc
fisubr
sbb
popa
jmp
sbb
mov
sub
pop
sti
inc
sub
ja
jbe
addr16
cwde
jno
jmp
stc
dec
lock
cmps
(bad)
les
cmps
mov
pop
shl
cmp
pop
fst
jo
pop
dec
xchg
add
xlat
div
xor
add
(bad)
jb
xor
in
jmp
into
sar
shr
test
mov
push
dec
pop
push
aas
jne
ret
inc
dec
and
ins
push
rol
cmp
ins
cld
(bad)
add
or
push
ins
xchg
popa
mov
test
cmp
jb
jl
(bad)
int
mov
xchg
add
retf
xchg
les
xor
into
scas
and
and
movs
add
and
test
iret
int
sbb
ins
xor
js
xchg
mov
jae
xchg
outs
jb
ficomp
pop
push
jle
stos
cmp
xchg
jns
ret
mov
into
loope
cmc
repz
jmp
shr
mov
inc
push
sbb
outs
cmp
push
or
lahf
(bad)
clc
cld
dec
adc
or
nop
pop
xchg
mov
movs
(bad)
mov
out
or
add
sub
repnz
data16
xor
dec
cmc
lahf
loope
loopne
test
das
jecxz
add
push
dec
cmp
jns
int
mov
add
and
loop
hlt
mov
cmp
xor
mov
ins
pop
add
retf
pop
aaa
sbb
test
jmp
push
sub
sbb
sbb
push
std
hlt
cld
xchg
pop
fstp
retf
fs
push
sti
and
repz
sbb
jnp
or
dec
daa
sbb
mov
jle
stc
xor
into
or
in
push
dec
inc
xor
popa
mov
pop
xchg
outs
cmp
out
test
cmp
xlat
call
mov
out
cld
imul
mov
inc
xchg
sub
lea
mov
adc
jno
nop
sbb
lods
cmps
fsub
cwde
jnp
pop
dec
aam
lods
dec
sbb
lea
cmp
fcmovnu
jecxz
clc
inc
cwde
pop
mov
or
test
div
sbb
call
xor
pop
jo
ds
lods
add
addr16
pop
in
aas
mov
and
inc
mov
add
repnz
dec
mov
inc
std
(bad)
cmc
jmp
test
sbb
push
test
push
pop
mov
call
push
dec
or
repnz
jne
cmp
or
jge
cmp
idiv
or
dec
or
dec
stc
xchg
mov
dec
cmc
mov
mov
mov
unpckhps
jb
xchg
mov
mov
push
fsubr
test
outs
or
fdivr
outs
dec
fsubr
je
inc
lds
lods
pop
and
cld
call
lds
out
and
(bad)
and
mov
mov
pushf
(bad)
ror
sub
jnp
imul
jmp
mov
xchg
add
sbb
push
outs
mov
or
push
lahf
mov
inc
scas
das
cmc
jmp
mov
jo
retf
and
fdiv
iret
mov
fcmovu
push
cmp
outs
sub
or
mov
xor
stos
add
out
cli
mov
fidivr
and
fldl2e
cmc
sbb
imul
test
call
retf
pop
loop
fisttp
and
in
sub
sub
sahf
jne
dec
and
in
pop
mov
stos
xor
adc
and
or
jmp
jle
gs
adc
lods
mov
pop
repnz
jecxz
stc
sahf
pushf
sub
jne
pop
repnz
(bad)
js
scas
cmps
sbb
ss
nop
mov
xor
xchg
call
jecxz
dec
in
ds
fisub
mov
cmp
cmp
outs
retf
pop
xchg
cmc
imul
xchg
cwde
iret
mov
cmp
and
aad
jo
dec
push
loope
in
xor
lods
stc
enter
icebp
pop
pop
adc
unpckhps
retf
jno
pop
hlt
mov
mov
dec
dec
push
out
clc
popf
js
popa
test
xchg
inc
push
push
jae
mov
shl
pop
push
aam
gs
je
popa
jne
adc
and
cwde
jne
xchg
test
xchg
(bad)
popa
adc
add
adc
je
stos
out
push
mov
xor
mov
jbe
mov
push
push
xor
jmp
jl
mov
scas
dec
loopne
pop
push
add
cs
std
pushf
popa
scas
cmp
push
retf
fcom
movs
pusha
fcmovne
loop
cmps
lods
pop
xor
pop
ret
or
mov
popa
out
or
std
mov
ror
add
ins
jecxz
cli
(bad)
movs
or
adc
lock
sti
dec
adc
sub
or
jne
mov
cld
jmp
sbb
mov
idiv
jae
or
and
add
dec
xchg
data16
pushf
in
push
add
mov
jae
call
dec
hlt
out
push
loope
adc
sar
jecxz
mov
add
xchg
cdq
sub
adc
push
out
xchg
call
ins
sahf
jne
jno
or
and
outs
inc
cmp
inc
into
out
sar
pop
xchg
pop
pusha
cdq
pushf
retf
loop
scas
mov
neg
pop
test
sub
mov
(bad)
test
(bad)
ja
or
jo
and
lds
call
mov
loope
popa
sbb
xchg
iret
mov
call
dec
cwde
mov
add
jae
fdivr
xor
fdiv
inc
stos
add
(bad)
out
adc
sbb
dec
ins
jmp
lahf
arpl
(bad)
(bad)
jl
or
or
inc
add
ss
inc
pop
movs
inc
ja
fadd
mov
rcr
shl
mov
inc
call
mov
jbe
push
or
and
test
fwait
dec
arpl
pop
dec
out
rcl
add
test
fld
je
pop
push
mov
loopne
sti
jae
fs
jne
mov
and
mov
stos
sub
xor
mov
mov
add
xchg
bound
repnz
cmp
cmps
out
jecxz
mov
cmp
mov
push
and
pop
mov
test
xchg
cs
xchg
scas
ja
(bad)
(bad)
retf
mov
or
fld
daa
(bad)
and
enter
sbb
inc
aaa
pop
push
je
jp
outs
sbb
sbb
inc
stos
or
outs
lea
adc
adc
js
lea
outs
inc
js
(bad)
pusha
fstp
out
inc
mov
mov
xor
add
and
sbb
ret
(bad)
fsubr
mov
mov
arpl
push
(bad)
and
idiv
adc
dec
std
fcmovne
xor
mov
sbb
push
fnstsw
loop
sub
stos
pop
arpl
sar
mov
bound
mov
pop
cmp
adc
xor
les
lds
pop
adc
jns
iret
ja
or
jae
lods
lds
mov
jno
dec
mov
ret
mov
fst
add
xor
ror
jle
es
or
xor
test
ss
jmp
rol
mov
sbb
sbb
mov
push
in
inc
in
push
cwde
repnz
jg
sbb
jge
mov
stc
je
jb
sbb
ins
sar
or
sub
imul
mov
mov
fxam
cwde
les
dec
sub
call
dec
mov
xchg
lds
cmps
fsubr
ror
jns
scas
cs
cmp
xchg
push
outs
xchg
cdq
add
fwait
jno
in
pop
mov
sub
sti
fcmovnu
ss
or
sbb
and
lock
push
xor
inc
pop
sbb
ret
and
cli
mov
lods
xchg
out
push
inc
aas
sar
mov
xchg
and
sbb
sub
or
push
sbb
popf
add
das
dec
in
dec
and
push
jg
mov
sub
jmp
cmps
mov
fwait
xchg
jne
fistp
push
sbb
pop
push
data16
stc
dec
inc
dec
inc
out
xor
inc
jnp
in
mov
sbb
mov
sahf
call
pusha
std
enter
mov
rcl
(bad)
jnp
dec
scas
jecxz
fs
sti
cmp
and
aas
jae
ss
push
and
out
stos
icebp
lods
pushf
ret
pop
and
jnp
pop
add
jmp
push
repz
popf
test
xor
adc
push
adc
pop
pushf
daa
in
pop
cwde
std
fwait
les
xchg
into
mov
add
retf
xchg
pop
stc
ror
(bad)
pop
and
xchg
pusha
adc
mov
imul
add
and
retf
cmc
test
pop
lahf
int3
iret
test
repnz
shr
cmp
mov
mov
jmp
(bad)
mul
adc
lods
adc
or
in
stc
or
xor
jecxz
ins
push
inc
jo
retf
xchg
jo
xor
mov
stc
cmc
dec
mov
mov
call
scas
sub
mov
sbb
mov
jns
or
ds
mov
jecxz
pusha
xor
xchg
hlt
jp
ins
add
mov
or
pop
jns
jle
inc
movs
inc
pop
hlt
lahf
bound
ins
lahf
cmp
xor
adc
loope
dec
in
jmp
push
sbb
push
call
sti
push
push
addr16
pushf
mul
or
inc
mov
dec
sar
fdivr
(bad)
imul
adc
vprotb
push
push
call
and
nop
dec
addr16
ds
mov
jecxz
sbb
aaa
lds
pop
jns
test
repz
not
ret
xor
fidiv
cld
inc
add
sub
mov
popf
inc
repz
cs
dec
in
jmp
cmps
or
test
cmps
jnp
out
cmc
and
pop
lods
cld
jnp
jge
mov
jae
repnz
mov
mov
mov
data16
adc
(bad)
(bad)
ss
scas
stos
arpl
outs
cmp
fcmovbe
(bad)
cmp
stc
out
xchg
xchg
das
xchg
xchg
add
dec
xor
xor
add
rcr
push
cld
xchg
in
cld
mov
scas
(bad)
push
das
ret
push
mov
pop
mov
push
in
cmp
push
inc
outs
sbb
mov
ins
movs
fs
sbb
outs
ret
lods
arpl
and
push
push
les
or
mov
mov
(bad)
ss
ret
cmp
outs
inc
pop
adc
dec
inc
push
inc
xchg
js
aas
dec
sub
mov
scas
lahf
mov
in
fistp
icebp
es
out
cli
lods
pushf
aam
imul
mov
and
pop
xor
sub
pop
into
dec
call
enter
aam
push
adc
std
daa
add
or
xor
jle
inc
xchg
jmp
or
aas
loop
mov
sub
sub
out
or
fdivr
and
cdq
pushf
aaa
repnz
popf
stos
sbb
cmp
inc
out
mov
xor
pushf
adc
imul
xchg
sub
jle
mov
jmp
in
in
test
adc
scas
add
(bad)
or
mov
push
hlt
(bad)
stc
lods
xchg
pop
xor
daa
rol
and
test
push
movs
pop
dec
pop
mov
push
rol
in
adc
adc
into
retf
retf
mov
std
add
push
imul
jbe
or
mov
gs
fmulp
int
out
pusha
movs
addr16
cwde
pop
xor
fsubr
in
lock
mov
pop
adc
ss
mov
daa
js
jnp
push
sbb
nop
push
test
mov
mov
ret
push
pop
mov
cwde
imul
arpl
fdivr
gs
arpl
ins
inc
les
addr16
inc
xchg
jmp
mov
icebp
retf
sbb
int
je
cwde
sub
jns
xchg
icebp
stc
loope
shl
pop
dec
pop
jl
std
jecxz
mov
repnz
data16
arpl
xchg
add
xchg
call
mov
cli
dec
out
aas
in
adc
xchg
les
inc
aas
jo
adc
pop
mov
push
add
test
xchg
pop
adc
lods
cwde
mov
pop
out
bound
xchg
mov
mov
out
ss
pusha
push
and
rol
aam
push
hlt
add
das
adc
je
adc
inc
movs
cmp
fisub
bound
push
bound
movs
push
push
pop
push
test
test
(bad)
aas
sbb
ficom
movs
sahf
ret
aas
cmp
movs
outs
imul
and
mov
fisttp
das
mov
repnz
shl
jecxz
adc
push
(bad)
ficom
scas
dec
jno
add
cmp
pop
xor
jbe
fistp
sub
sbb
in
push
lods
rcr
or
stc
addr16
jno
test
pop
sub
push
fmul
hlt
cwde
jmp
scas
nop
inc
movs
xchg
out
loope
test
xchg
lds
sahf
dec
mov
xor
xor
xchg
rcr
push
rcr
sti
push
(bad)
fistp
pusha
sub
push
jmp
cmp
pop
xor
pop
cmps
mov
popf
pop
lock
fld1
in
int3
jmp
ret
inc
push
(bad)
out
dec
inc
adc
aas
or
cmp
mov
xor
xchg
cs
aas
add
test
or
cmc
push
xor
ins
fadd
retf
loope
sbb
aam
dec
push
mov
push
push
push
mov
mov
mov
in
(bad)
xchg
mov
ja
jbe
mov
lods
les
jb
push
bound
jmp
cs
arpl
pop
mov
out
into
push
scas
push
pop
inc
dec
inc
xor
jns
cmp
mov
das
sub
daa
jns
stc
out
je
push
cwde
jmp
and
mov
dec
fmul
mov
into
daa
mov
or
mov
sbb
ja
aaa
mov
pop
inc
loope
in
mov
mov
mov
pop
inc
fnstsw
push
nop
add
or
fldpi
arpl
mov
adc
les
mov
mov
cmp
xor
add
lods
adc
jmp
adc
push
push
aaa
push
xchg
stos
fsubr
sbb
pop
leave
inc
push
pop
xor
sti
nop
hlt
and
mov
pop
aaa
dec
mov
cmp
push
fs
jg
push
cld
lods
retf
mov
std
(bad)
retf
xchg
or
outs
into
mov
add
add
push
push
jno
mov
jb
aas
scas
mov
cmp
and
adc
mov
aad
adc
mov
jge
mov
ds
ror
mov
xchg
lea
xor
mov
pop
or
enter
call
sub
dec
xchg
xor
push
jmp
xor
popa
lea
or
cmp
mov
fild
in
movups
and
inc
xchg
rol
mov
lods
and
fucomi
scas
(bad)
(bad)
jne
push
aad
lock
cmp
push
clc
jne
sbb
je
mov
lods
cdq
hlt
sbb
mov
sti
sub
sar
dec
cmp
pop
add
mov
add
push
xor
sbb
sbb
jns
pusha
ror
test
retf
dec
out
xchg
lahf
inc
cmp
cmp
mov
inc
aam
sahf
inc
fsubr
jg
xor
ja
(bad)
sbb
jmp
inc
mov
push
in
adc
mov
adc
jns
jnp
(bad)
ret
sbb
add
clc
je
stos
cmp
pop
add
fucomip
out
mul
(bad)
pop
adc
lea
and
adc
xor
cmps
mov
or
lea
popf
pop
and
cld
and
push
jo
test
fstp
sar
lahf
test
dec
bound
jge
xchg
addr16
adc
sub
pop
(bad)
push
adc
pop
outs
jmp
ficomp
outs
sub
fadd
test
adc
cmp
add
or
or
cmp
inc
pop
pusha
push
and
jbe
adc
adc
or
iret
nop
or
jp
leave
hlt
jnp
add
loopne
mov
xlat
clc
mov
dec
sub
addr16
inc
cmc
cmps
int
aam
sbb
in
mov
aam
adc
(bad)
and
jl
icebp
loope
arpl
add
loopne
cmps
aas
(bad)
shr
call
cmp
push
fdivr
mov
in
dec
repnz
cmps
xchg
(bad)
mov
sub
pop
pop
jmp
and
es
pop
outs
out
xchg
test
icebp
rcr
lds
or
xchg
imul
cld
jb
xchg
jge
mov
addr16
call
push
dec
movs
sub
jb
es
into
push
inc
or
mov
dec
jns
ret
fcmove
jge
fwait
xchg
(bad)
(bad)
stc
in
lds
push
sub
nop
cwde
and
adc
mov
retf
xlat
pop
inc
jne
dec
lahf
lds
xchg
add
jp
sub
adc
(bad)
into
add
or
shr
sub
mov
loopne
jno
xchg
jle
pusha
jae
rcr
mov
mov
push
dec
or
add
adc
arpl
cs
retf
pop
dec
and
ins
call
sti
sahf
pop
pop
cmp
imul
test
adc
push
sbb
adc
jge
shl
adc
mov
rol
bound
or
outs
xchg
(bad)
jg
jmp
(bad)
shl
sbb
cmp
xchg
je
imul
jl
std
dec
sub
or
and
and
mov
push
xchg
push
daa
dec
nop
neg
adc
mov
mov
or
jae
into
or
inc
into
icebp
dec
mul
(bad)
test
xchg
add
cmp
inc
sbb
xor
dec
mov
loopne
jecxz
push
jmp
aad
pop
cmp
in
int
mov
and
in
fs
xor
push
jl
popa
ss
jmp
mov
push
jo
and
dec
(bad)
js
test
cmc
dec
idiv
inc
mov
inc
jno
fdivp
imul
inc
cmp
lea
mov
cmps
mov
test
xchg
jmp
adc
in
cli
fadd
cmps
cmp
xor
xchg
div
ins
aas
and
adc
ds
shl
in
add
cmps
mov
jl
fwait
xchg
xchg
repnz
cmp
jnp
sbb
sbb
push
(bad)
outs
test
mov
add
add
pop
pusha
out
add
cmp
repz
xlat
sub
dec
aaa
and
sbb
out
je
add
add
xchg
and
adc
cmp
push
je
adc
sub
adc
mov
mov
sub
cdq
popa
cmc
cmp
pop
mov
dec
cld
inc
dec
cmp
cmps
push
mov
gs
push
add
mov
data16
mov
lock
call
xchg
push
stos
lods
push
mov
push
pop
aas
add
and
fmul
scas
fisttp
sbb
sub
xchg
jl
push
std
fwait
sub
pop
inc
push
test
not
fsubr
rcr
cld
xchg
scas
or
aas
(bad)
call
mov
leave
jp
daa
rcr
xchg
sub
sbb
f2xm1
pushf
out
pop
sub
leave
jae
cmp
sub
cmps
pop
mov
(bad)
lds
out
inc
cmp
iret
iret
test
jge
fsub
pop
rol
lea
push
cmp
fldenv
push
pop
std
pop
sbb
fsub
jns
jmp
jo
pop
add
push
std
xor
xor
push
rcl
xchg
mov
lods
inc
xchg
shl
mov
inc
sbb
shr
imul
mov
mov
inc
sub
in
mov
cmp
or
(bad)
mov
jecxz
stos
aaa
and
jne
call
and
xchg
test
bswap
sar
sub
loop
test
inc
cmps
out
cmp
call
pop
int
or
leave
pushf
cmp
lods
add
ins
mov
jl
jg
cwde
fsub
je
in
movs
ror
xchg
test
sub
mov
cmp
push
shl
push
xor
sbb
dec
push
lahf
cmps
xchg
jecxz
push
cmp
adc
or
pop
in
ret
(bad)
push
rol
in
call
add
cmp
(bad)
mov
pop
(bad)
xchg
or
mov
call
stos
xor
xlat
or
ret
cwde
sub
daa
push
leave
jle
mov
pop
jl
inc
mov
push
(bad)
xrelease
xor
inc
ror
adc
jp
xor
shl
ret
pop
mov
inc
ds
add
sbb
daa
(bad)
loope
push
in
push
dec
mov
iret
mov
jnp
and
pop
repnz
adc
rol
adc
inc
lds
sahf
stc
add
jbe
add
mov
in
pushf
ja
fistp
cmp
add
or
pop
je
mov
test
mov
pop
adc
data16
cmp
loop
scas
jnp
cmp
gs
(bad)
push
retf
loope
adc
clc
xor
push
jl
das
pop
sbb
fidiv
stos
loop
adc
mov
ret
or
aas
popa
xchg
fs
mov
pushf
ins
retf
fs
std
push
rcr
arpl
ret
inc
add
dec
popf
and
loope
sbb
loope
sbb
dec
jnp
mov
push
push
or
jge
clts
cmp
out
and
in
adc
popa
test
out
cli
cmp
inc
sub
in
mov
repz
sbb
sub
pop
mov
mov
retf
dec
sahf
hlt
mov
push
(bad)
(bad)
mov
ds
push
add
push
jg
mov
inc
lds
pcmpeqw
and
cmp
(bad)
loope
js
mov
pop
xchg
add
test
xor
add
jl
jge
add
jmp
xchg
imul
or
retf
retf
cmp
push
cmp
fmul
xor
jmp
xchg
jmp
mov
push
fld
and
js
cmp
(bad)
clc
inc
call
jl
jle
pop
jno
in
in
dec
push
daa
add
adc
in
pop
fimul
sbb
lods
inc
add
sub
adc
or
imul
test
(bad)
jmp
mov
sub
sbb
ret
mov
cmp
scas
hlt
and
cmp
shl
push
cmp
mov
scas
mov
mov
ss
aam
mov
mov
shr
cmps
pop
pusha
shl
pushf
and
pop
rcl
and
(bad)
ror
(bad)
sub
inc
cli
pop
ss
push
mov
sbb
fs
cdq
lods
aaa
dec
clc
cmc
or
icebp
imul
mov
(bad)
popa
lea
push
imul
repnz
stos
xchg
out
push
les
sub
and
aaa
mov
push
stos
sbb
pop
xor
inc
jae
jmp
(bad)
jg
xor
aam
pop
dec
mov
dec
icebp
imul
aaa
pusha
dec
xchg
cmp
dec
(bad)
aas
sbb
or
out
xchg
dec
jns
mov
xchg
shl
push
outs
push
xchg
stc
sub
or
nop
hlt
out
jp
cmp
pushf
xor
stc
push
add
push
scas
outs
adc
lods
dec
jmp
xor
sbb
inc
test
fcomp
jmp
inc
pop
into
or
loop
adc
dec
cs
inc
push
sahf
pop
xor
jno
mov
jb
int
out
rol
nop
jne
xchg
push
int3
rol
sub
mov
mov
sub
cmp
xchg
and
or
retf
fldcw
jo
adc
ss
mov
push
jge
dec
mov
and
and
xchg
imul
and
pop
cmps
or
(bad)
and
mov
fld
inc
leave
mov
stos
ret
jae
int
fisubr
mov
outs
or
es
icebp
ret
jp
mov
xchg
push
data16
mov
cli
in
cli
xlat
and
addr16
fs
xchg
scas
stos
mov
dec
popf
xor
cwde
scas
jge
out
push
mov
outs
push
mov
stos
or
mov
jmp
cli
sub
and
clc
add
addr16
test
xchg
dec
daa
iret
sub
push
jp
mov
adc
xor
clc
jge
dec
fisttp
and
out
and
pushf
(bad)
rcr
inc
push
pop
cmp
fneni(8087
mov
push
stos
pop
ret
or
lods
shr
in
cmp
clc
cmp
xchg
sub
pusha
pushf
pop
pop
fiadd
jnp
push
push
ja
(bad)
leave
cmps
push
addr16
sar
inc
fsubr
mov
sub
in
mov
out
sub
cmp
mov
jne
sbb
sub
lahf
ret
lock
ins
pop
jle
mov
(bad)
in
jnp
out
dec
sbb
clc
push
aaa
push
mov
hlt
fs
std
adc
cmc
and
je
push
dec
cmp
cmps
xchg
xchg
pop
adc
jmp
mov
push
dec
(bad)
sahf
sbb
mov
stc
push
and
sub
xchg
bound
mov
pop
mov
cmp
loop
jg
cs
or
ins
shl
add
shl
jl
pop
cmp
and
leave
(bad)
dec
in
cmp
sub
cmps
and
out
enter
jg
into
jnp
psubusb
xchg
not
adc
test
jbe
push
mov
mov
adc
pop
icebp
fiadd
pop
fadd
int
fdiv
add
in
and
or
ficom
in
push
mov
in
adc
xor
mov
and
into
sub
jecxz
push
cli
clc
inc
stos
jg
retf
fmul
mov
mov
jl
push
cmp
cmps
xchg
movs
cmp
jnp
push
jnp
aam
pop
add
je
iret
bound
lahf
jl
ror
jb
into
outs
mov
call
and
sbb
dec
and
sbb
lds
add
call
je
or
and
(bad)
aas
add
popf
mov
push
mov
enter
jle
das
sbb
fimul
cmp
ins
nop
bound
adc
test
(bad)
jne
movs
xlat
ss
pop
xchg
in
mov
adc
popf
pop
(bad)
push
hlt
sub
fwait
inc
push
pop
mov
ja
fstp
inc
rcl
stos
stc
in
add
jg
cs
loop
(bad)
nop
ret
leave
in
cmp
retf
or
sbb
or
lahf
mov
fldcw
nop
fsubp
pop
mov
fidiv
sub
stos
cmps
push
adc
test
pusha
mov
cli
xor
stc
mov
enter
ins
pop
shl
in
and
fild
and
sbb
push
and
add
xchg
mov
mov
mov
sbb
inc
mov
mov
xchg
jge
imul
inc
gs
or
xchg
push
sar
test
jmp
add
pushf
retf
aad
jo
pushf
mov
sahf
pop
adc
je
repnz
(bad)
mov
daa
mov
or
scas
mov
pop
jmp
sub
int
cli
sub
in
fimul
lock
add
hlt
push
sbb
xchg
lock
lods
into
pop
gs
sbb
jo
scas
cdq
in
aas
xchg
cwde
aam
dec
stos
sbb
mov
jnp
jmp
xor
pop
int3
push
jmp
lahf
sbb
cmp
push
out
rol
jp
or
movs
test
inc
fdiv
add
mov
mov
cmp
fadd
add
ror
in
fiadd
jb
inc
xchg
add
icebp
jo
push
movs
ins
cmc
jb
pop
adc
js
dec
stc
ret
aad
les
pop
push
outs
repz
mov
jb
push
mov
push
push
mov
jo
xchg
push
adc
iret
cdq
mov
dec
cdq
icebp
or
sbb
mov
pop
cld
js
jmp
push
stc
std
in
test
test
mov
neg
mov
and
mov
rcl
jns
sub
or
sub
mov
adc
out
push
cld
inc
or
sbb
inc
mov
pop
xor
pop
lock
add
adc
stc
inc
shr
mov
mov
leave
sub
inc
sbb
jae
jecxz
arpl
mov
add
or
lods
adc
xor
in
mov
inc
add
jae
push
stc
push
mov
or
xor
and
in
ret
adc
aas
xchg
inc
int3
jo
xchg
pop
xchg
pop
pushf
mov
push
jmp
sbb
mov
adc
repnz
jge
adc
in
adc
sbb
aaa
and
pop
mov
es
pop
dec
mov
mov
fdivr
pop
mov
pop
push
(bad)
in
(bad)
stos
(bad)
rol
add
out
cwde
sbb
lock
and
aaa
jmp
addr16
jmp
cmp
mov
gs
movs
sbb
jmp
outs
jp
jae
xchg
les
out
cmp
xchg
outs
hlt
push
dec
rcl
bound
xor
jmp
imul
pop
sub
out
int
cwde
lds
sub
fwait
in
lea
stc
aas
xchg
out
sub
daa
sbb
mov
cwde
lock
mov
sti
loopne
sub
pop
add
and
fisubr
adc
jp
(bad)
in
jbe
int3
retf
mov
stc
sahf
and
add
ret
stos
hlt
adc
fxch
adc
jecxz
pop
leave
stos
cmp
push
push
sbb
ja
add
mov
or
push
xchg
mov
iret
nop
js
stc
aad
(bad)
mov
jmp
xor
push
clc
adc
out
dec
gs
add
pop
pop
mov
scas
push
inc
push
iret
jbe
mov
enter
popfw
les
and
loop
idiv
out
dec
add
imul
push
aaa
das
jbe
data16
fwait
mov
aad
xchg
(bad)
mov
dec
out
jo
sub
nop
xchg
jg
cld
arpl
(bad)
pop
jg
int
adc
(bad)
sbb
cmp
test
jge
mov
cli
push
mov
sbb
inc
call
mov
ret
pop
aam
mov
movs
dec
inc
out
pop
ror
inc
cmps
xor
loop
push
mov
loopne
pusha
inc
es
cmc
cmp
cli
inc
adc
ins
les
jmp
jns
test
daa
sbb
push
mov
leave
xchg
div
xchg
arpl
enter
fild
and
enter
(bad)
or
fadd
jmp
outs
dec
movs
jl
and
(bad)
sbb
mov
add
in
xchg
mov
mov
pop
das
cmp
pop
popf
jp
aas
xlat
or
push
fidiv
fidivr
iret
xchg
push
pop
(bad)
outs
lahf
push
pop
dec
and
mov
pushf
js
sbb
xor
push
mov
js
pop
sub
aaa
in
(bad)
cmp
jne
loope
clc
add
push
push
inc
adc
cwde
pop
(bad)
in
scas
sti
jmp
sbb
fld
mov
adc
imul
inc
mov
push
aaa
repz
fs
lods
ins
pop
mov
sub
jle
sub
test
out
and
jmp
xor
fstp
cli
rol
pop
and
jmp
mov
(bad)
sbb
inc
adc
enter
(bad)
jle
xor
mov
das
mov
inc
sbb
call
leave
jno
clc
xchg
jg
add
inc
xor
xchg
nop
add
push
mov
dec
in
cmps
or
mov
jne
mov
fimul
mov
jge
jb
mov
sar
or
dec
js
cmp
xchg
adc
pop
fstp
sti
ins
inc
leave
idiv
fadd
mov
or
push
mov
jno
pop
and
idiv
shr
stos
addr16
mov
lods
in
loop
adc
xor
and
scas
in
outs
(bad)
scas
mov
cmp
pushf
or
pop
push
into
jno
jmp
std
clc
adc
fwait
je
les
pop
retf
cs
shr
sbb
jmp
into
inc
ins
adc
(bad)
ds
xor
inc
repz
push
fiadd
xor
cmp
mov
mov
dec
outs
call
inc
xor
xchg
sub
std
outs
mov
pop
xchg
(bad)
push
cs
inc
mov
lds
in
cmp
fwait
dec
(bad)
sbb
mov
js
popa
(bad)
fst
mov
lods
aad
les
ja
adc
stc
jb
int3
pop
or
jo
push
sub
mov
pop
jns
loope
rcr
test
sub
mov
faddp
dec
aam
in
or
fsub
data16
adc
ret
mov
xchg
dec
mov
and
jmp
not
jmp
ja
jl
jmp
fsubrp
adc
hlt
jecxz
adc
retf
jo
sbb
(bad)
mov
scas
call
(bad)
pop
xor
fld
or
mov
mov
jnp
jae
sub
and
or
push
ss
mov
cli
cmp
sbb
into
repz
sbb
(bad)
cmp
pushf
push
mov
add
lahf
ror
mov
mov
movs
aaa
lea
xor
sub
jbe
dec
ja
mov
pusha
sbb
icebp
push
cmp
push
push
mov
test
jl
cmps
das
aad
cmp
push
outs
and
push
fdiv
cdq
mov
mov
sbb
xchg
sar
std
xor
sbb
test
cmps
out
xor
jne
jl
mov
retf
test
or
rcl
xor
inc
outs
ffreep
or
dec
outs
pop
sub
jns
sbb
(bad)
fldenv
gs
jmp
xchg
mov
iret
or
mov
or
aad
and
aas
outs
xchg
cs
and
ret
les
outs
or
xor
mov
sub
jle
pop
daa
sbb
std
pop
adc
in
mov
pushf
xor
pusha
repnz
dec
xor
dec
les
call
mov
leave
ins
or
push
int3
dec
xchg
hlt
xor
out
xchg
sub
fidivr
leave
sbb
loope
xchg
mov
out
push
or
pop
(bad)
(bad)
aaa
add
add
pop
and
mov
test
out
es
push
jb
push
retf
stos
aad
xor
sbb
cmps
and
das
imul
loopne
iret
push
add
shr
in
fs
pop
mov
mov
mov
loopne
or
fist
and
hlt
das
mov
aam
adc
mov
call
cs
push
inc
sub
cmp
shr
into
or
inc
xor
std
dec
xchg
jns
hlt
mov
mov
jbe
xlat
jno
(bad)
mov
ja
scas
inc
retf
add
stc
dec
cld
add
out
cmp
cdq
or
pop
push
dec
mov
int3
sbb
cmps
add
mov
sahf
not
cmp
sbb
movs
add
mov
hlt
fwait
push
std
sub
mov
xor
dec
sbb
xchg
sub
loopne
mov
mul
and
scas
sbb
or
inc
movs
adc
jno
jns
mov
xchg
movs
in
aaa
or
fnsave
shl
pop
hlt
or
scas
cdq
push
out
fst
fldcw
inc
dec
rol
pop
or
retf
pop
loope
add
mov
inc
std
shl
dec
sub
shr
pop
dec
test
bound
xchg
sub
inc
push
sub
xchg
pop
cmc
dec
loope
and
mov
jmp
cli
shl
hlt
daa
push
adc
and
sbb
cs
add
pxor
dec
inc
adc
lds
popf
add
loope
ins
push
mov
test
pusha
(bad)
mov
idiv
jns
push
hlt
pusha
or
mov
shl
and
xchg
(bad)
push
sub
adc
inc
mov
mov
loope
sub
push
pop
pop
fcomp
adc
sbb
and
retf
add
call
ss
adc
jo
lods
sbb
bound
fild
(bad)
fs
and
push
dec
clc
push
add
(bad)
jbe
je
xor
je
(bad)
cmp
iret
sahf
scas
push
(bad)
cmp
aad
sub
ret
stos
jnp
xor
jle
mov
cmps
add
pushf
inc
rcr
or
mov
push
jo
push
rcl
mov
sbb
push
out
fist
outs
xor
in
jecxz
xchg
loop
cmp
sub
dec
imul
retf
mov
jb
mov
shl
stos
adc
in
iret
and
cmp
rol
popf
pop
ins
or
xchg
les
or
dec
ds
mov
jae
mov
xchg
sbb
lahf
jmp
or
les
mov
mov
sub
std
lods
(bad)
int
push
nop
push
or
mov
jnp
mov
pop
push
push
sub
imul
add
adc
mov
jmp
adc
shl
lea
xor
neg
mov
int
add
fisttp
sbb
and
ins
mov
ret
inc
mov
mov
push
daa
call
rol
dec
(bad)
sub
cs
out
call
rol
mov
mov
lods
mov
cs
fpatan
je
mov
arpl
lock
add
inc
or
cmps
mov
cmp
pop
sub
mov
dec
in
ror
push
mov
jp
mov
mov
inc
and
cld
stos
or
sar
push
or
out
cmps
in
jl
mov
pop
jle
loopne
push
pop
arpl
test
cdq
ret
mov
push
push
(bad)
fisttp
(bad)
cmp
jne
and
mov
add
add
add
pop
aas
fidiv
mov
test
jb
mov
sub
outs
movs
jp
and
call
inc
inc
jno
(bad)
push
cmps
iret
fcomp
jns
outs
mov
mov
jne
cwde
pop
(bad)
aas
les
cdq
add
aaa
xor
int
(bad)
fmul
mov
aam
sbb
inc
cmps
jnp
retf
jo
jne
mov
cs
std
cmps
test
sub
pop
mov
inc
xor
mov
xlat
lock
and
push
cmps
jl
and
ds
mul
mov
jb
mov
(bad)
(bad)
ins
jle
cld
pusha
repz
add
inc
in
pop
iret
pop
add
cmp
retf
push
or
xlat
imul
sub
dec
pushf
fldenv
dec
xor
or
push
scas
xchg
mov
mov
or
xchg
mov
icebp
jae
fisttp
push
aam
and
lods
retf
test
std
sub
aad
xchg
cdq
fwait
xchg
mov
call
xchg
outs
xchg
int
bound
std
fild
inc
enter
mov
daa
push
retf
loopne
add
add
jne
and
pop
xlat
jmp
pop
mov
pop
sub
xchg
jns
add
shl
loopne
out
(bad)
repz
pop
repz
scas
lock
inc
clc
add
call
mov
loopne
xor
scas
rol
shr
xchg
mov
(bad)
mov
push
mov
bnd
add
test
addr16
shl
sub
jae
outs
cmc
les
mul
push
(bad)
jo
(bad)
and
(bad)
fs
mov
fnstsw
sub
jbe
push
ins
mov
add
xor
mov
hlt
mov
pushf
mov
bound
xchg
dec
aam
sub
mov
fsub
or
jmp
sub
and
jmp
dec
daa
scas
gs
jecxz
sub
sub
pop
xchg
xor
or
cmp
xor
repnz
shl
int3
fstp
das
outs
jnp
mov
stos
or
cli
pop
scas
fcmovbe
cmp
add
mov
pop
push
jae
adc
cmp
xchg
clc
cwde
jp
cdq
adc
cdq
mov
call
xchg
(bad)
ror
ja
movs
push
clc
hlt
add
pop
fld
pop
loop
and
mov
mov
jno
jb
ja
daa
xchg
loop
shl
push
or
dec
addr16
ds
and
lods
ins
jmp
mov
lahf
dec
fscale
jge
jae
mov
(bad)
pop
stc
sbb
iret
push
lea
pop
out
and
das
into
pop
mov
xor
mov
in
jmp
(bad)
(bad)
aad
iret
das
cmp
mov
pop
psubusb
idiv
in
int3
retf
jge
sub
out
inc
pop
sub
xor
sub
and
sub
mov
gs
inc
repz
sar
aam
rdmsr
fidivr
push
hlt
dec
inc
dec
xor
fistp
sub
xor
imul
pop
adc
push
xchg
loope
cmps
pop
test
sub
sub
sbb
push
(bad)
call
adc
mov
faddp
cmc
out
xchg
pusha
push
mov
dec
adc
sbb
lods
leave
mov
movs
sbb
rcr
(bad)
xor
lods
add
mov
inc
push
in
xchg
adc
arpl
inc
add
mov
add
stos
popf
inc
ret
mov
stos
stc
xor
sub
loopne
cmp
push
jp
test
stc
sbb
and
aas
stc
and
add
mov
pop
fisub
or
inc
push
cli
add
mov
and
xor
dec
cdq
mov
xchg
sub
mov
inc
out
mov
xchg
mov
add
stc
sub
jbe
and
rcr
pop
sbb
mov
xchg
out
sbb
out
xor
inc
cli
add
cmps
dec
mov
fdiv
repz
fisttp
lock
mov
inc
pop
jecxz
dec
enter
push
(bad)
push
dec
ret
gs
shl
mov
(bad)
loop
retf
loop
mov
push
push
fadd
std
or
and
aam
jne
push
push
jp
cs
lahf
aad
test
jmp
jmp
mov
into
pop
lea
ins
(bad)
aaa
fstp
jo
ror
jnp
push
or
pop
jge
push
push
adc
mov
mov
sbb
je
das
mov
adc
dec
pop
inc
mov
out
xchg
andps
je
or
cmp
pusha
not
fisttp
(bad)
rol
mov
inc
inc
scas
daa
ret
fs
movs
sub
loop
out
jnp
mov
sbb
out
mov
inc
mov
test
aaa
les
xor
cmp
pop
lods
mov
scas
adc
pop
xchg
push
data16
pushf
in
dec
stos
sbb
movs
jbe
add
test
mov
jmp
dec
lods
call
or
call
jg
lds
adc
push
xor
repz
and
jo
outs
sub
int3
mov
jge
jne
push
mov
xchg
and
xchg
and
dec
pop
jecxz
dec
push
push
xchg
es
retf
mov
xchg
fidiv
pop
fisub
movs
push
es
mov
adc
bound
jle
mov
sbb
pop
(bad)
jnp
ds
in
jl
fstp
push
ins
(bad)
dec
push
sub
shl
dec
and
dec
cmp
mov
stos
sbb
mov
dec
ins
outs
jno
add
lock
cld
cmp
xchg
or
repz
pop
sbb
stos
push
jmp
pop
cmp
sbb
jecxz
push
adc
stos
inc
mov
sahf
sub
pop
xchg
fxch
js
push
bound
fwait
jle
or
test
popf
cmps
mov
lods
xchg
nop
fadd
in
int3
mov
movs
pop
mov
sbb
lahf
inc
sub
(bad)
movs
imul
push
into
in
jbe
pop
inc
addr16
(bad)
pop
rep
addr16
inc
enter
div
jmp
stos
jmp
loope
sub
fwait
loopne
enter
sub
dec
mov
mov
out
push
call
lds
jbe
fnstsw
test
push
add
retf
arpl
out
dec
dec
xchg
adc
(bad)
test
jno
add
push
pushf
sub
jge
sbb
sub
lds
dec
outs
mov
stc
lahf
mov
inc
inc
stos
movs
jge
dec
mov
clc
pushf
stos
cmp
fcmovne
add
hlt
stc
and
add
adc
repnz
xchg
stc
cwde
mov
jle
adc
lds
pop
stc
call
lea
jmp
(bad)
pop
mov
aam
jb
mov
pop
jbe
mov
pop
sbb
sub
(bad)
mov
les
jo
xor
loope
jecxz
sti
add
ds
add
push
int
jo
retf
jle
adc
popf
adc
aaa
push
das
pop
push
or
or
gs
jb
in
xchg
sbb
mov
ja
(bad)
mov
loop
fdivr
jmp
inc
xor
aaa
ins
cli
cs
ss
pop
pusha
ds
shr
(bad)
adc
bound
pop
push
jns
lds
mov
movs
ds
add
das
loope
ja
pop
cli
ja
dec
aam
imul
out
mov
push
mov
into
cli
lds
cmc
popf
sar
xchg
push
xor
mov
jnp
fs
repnz
mov
(bad)
xor
fimul
cmp
outs
add
push
dec
in
out
jb
push
xchg
jae
loope
test
adc
dec
mov
or
fwait
or
scas
aad
mov
cmps
arpl
stos
xor
aad
test
add
movs
cs
loope
enter
xor
out
mov
fdivp
push
icebp
cwde
pop
aaa
mov
mov
cmp
pop
aaa
loop
sbb
scas
and
push
es
xor
lods
mov
dec
sub
dec
or
les
adc
scas
call
mov
jb
in
js
leave
cmp
push
lea
jae
imul
mov
cmc
jmp
mov
jmp
or
cmp
rol
fidiv
dec
dec
(bad)
or
popa
(bad)
push
enter
sar
shl
repnz
mov
sahf
inc
and
cmps
inc
or
dec
dec
das
mov
sbb
xor
(bad)
push
ror
pop
call
addr16
cmp
jp
cmc
jmp
call
mov
nop
je
and
mov
lahf
cs
out
not
aas
cmps
jae
test
int
and
push
jbe
dec
add
pop
xchg
out
xor
push
inc
xchg
mov
dec
jns
mov
test
stos
(bad)
adc
xchg
in
push
shrd
ret
cdq
sbb
jbe
pop
xlat
lds
inc
jae
mov
xor
lock
sub
test
inc
test
(bad)
into
movs
iret
dec
loope
jg
jl
inc
(bad)
call
scas
(bad)
fisttp
stos
in
(bad)
mov
or
gs
mov
inc
lea
xchg
push
mov
add
push
push
mov
fisubr
lea
scas
mov
jg
test
shr
out
das
or
push
outs
rcr
jb
sbb
sbb
adc
ins
jmp
fwait
or
push
and
add
inc
mov
cmp
jle
retf
ins
cdq
add
push
les
xor
into
test
rcr
or
in
xchg
jnp
cs
lea
cmps
je
pop
inc
out
(bad)
inc
fisttp
inc
and
(bad)
push
rol
(bad)
popa
int
in
push
das
jmp
mov
rol
push
mov
(bad)
jmp
aad
aas
outs
mov
pop
push
push
add
or
push
shl
jno
popf
jbe
daa
pop
fld
shl
pop
out
cmps
fs
or
(bad)
mov
imul
stos
test
sbb
push
mov
into
inc
push
cmp
loope
jae
add
test
and
std
leave
loopne
mov
js
dec
clc
aam
repnz
inc
xor
in
sbb
or
(bad)
mov
inc
nop
cwde
mov
xor
scas
(bad)
loop
adc
imul
xchg
es
xchg
sub
outs
das
push
xlat
pop
xor
test
xchg
inc
into
cmp
pop
push
add
ins
xchg
sbb
mov
sbb
mov
xchg
gs
fadd
aaa
and
dec
in
out
xchg
repz
lods
retf
cmp
xchg
cmp
xchg
push
push
lods
jbe
adc
sbb
popf
fadd
fisubr
fidivr
jl
scas
jnp
add
mov
pop
mov
add
cmps
xor
ja
dec
jmp
mov
sbb
adc
repnz
mov
and
xor
mov
aad
clc
dec
push
xlat
(bad)
xchg
mov
dec
cmc
mov
icebp
fdiv
pusha
mov
jg
mov
mov
push
mov
sub
mov
mov
out
test
cmp
and
xchg
loope
or
btc
enter
in
test
dec
xchg
push
sub
int
xchg
xchg
stos
shr
and
lea
arpl
out
dec
xchg
xor
mov
mov
push
push
add
inc
xchg
stos
repnz
pop
fsub
iret
jmp
in
xchg
call
or
mov
retf
(bad)
fstp
loopne
xor
push
xor
dec
add
jb
test
sub
mov
test
setae
call
pop
jge
jmp
test
fnstsw
pusha
or
and
das
nop
sub
pop
pop
not
jmp
mov
jne
dec
ins
sub
mov
data16
in
ss
xlat
out
js
xchg
and
pop
addr16
(bad)
jnp
stos
adc
jb
pop
aad
sbb
cmp
retf
movs
loopne
fsub
lods
and
or
xor
inc
popf
jmp
and
test
dec
dec
mov
inc
adc
js
fwait
inc
push
sbb
jmp
mov
int
mov
cmp
mov
pop
add
push
js
ins
std
sub
dec
sbb
xor
jb
aas
(bad)
mov
add
enter
sbb
mov
mov
sahf
adc
inc
dec
pop
push
add
cmc
sbb
sbb
cwde
cmp
test
cmps
push
fwait
xor
xor
(bad)
pop
or
add
xchg
int
jo
rep
pop
sahf
shl
jecxz
dec
int3
sub
leave
int
inc
mov
in
add
je
mov
fidiv
cld
imul
lods
mov
ja
add
cli
push
lock
adc
adc
test
xor
popf
(bad)
adc
adc
arpl
mov
xchg
xor
stos
mov
adc
sbb
push
addr16
sub
mov
cmp
xchg
inc
jb
mov
mov
lods
stos
mov
sub
es
in
and
(bad)
cmp
ds
cmps
mov
mov
sub
loope
mov
jbe
(bad)
and
sti
and
cmp
push
or
xor
movs
mov
gs
jl
cmp
fadd
xchg
jmp
cdq
mov
sbb
es
mov
jae
xchg
xchg
inc
mov
gs
pusha
add
sub
jmp
pop
add
dec
frstor
stos
inc
ret
das
and
outs
add
icebp
test
outs
je
pop
fiadd
inc
and
xchg
adc
push
(bad)
xchg
and
shl
jle
or
neg
sahf
pop
mov
cmp
cmp
(bad)
jmp
xor
xchg
rol
mov
inc
xchg
test
dec
aad
or
xor
shl
(bad)
xchg
cmps
retf
xor
stos
sbb
retf
dec
mov
and
clc
in
int
pop
mov
mov
retf
xchg
mov
fdiv
adc
mov
mov
mov
xchg
sub
jnp
mov
add
cli
clc
add
jno
push
lahf
lock
fptan
pop
and
cmp
mov
fst
js
mov
or
movs
mov
test
sti
fs
or
(bad)
mov
push
cmc
nop
xchg
lock
loop
movs
inc
cmp
cmp
test
pusha
jmp
mov
int
mov
(bad)
pop
js
popa
xor
lea
(bad)
loop
fs
scas
mov
inc
out
add
clc
cmp
test
cld
cdq
in
cmps
loop
into
add
icebp
jl
xchg
loope
adc
fst
dec
bound
into
call
and
outs
push
pop
adc
daa
push
or
xor
mov
out
mov
add
retf
xlat
jbe
mov
movs
inc
sbb
jge
daa
pop
into
rcr
lea
(bad)
enter
ja
lahf
or
outs
icebp
pop
dec
cmp
add
jg
mov
imul
icebp
lods
dec
push
mov
leave
inc
adc
adc
aad
ds
lods
popa
fxch
fild
xchg
push
cmp
push
repz
test
stos
(bad)
mul
mov
sub
lahf
pop
pop
rcr
cmp
iret
retf
int3
xlat
out
jae
mov
inc
and
pop
shr
mov
imul
in
retf
mov
inc
pusha
add
jl
mov
in
inc
dec
mov
mov
arpl
ins
mov
dec
jb
fld
gs
adc
or
test
(bad)
lahf
mov
mov
aam
cwde
jl
push
adc
pop
jmp
(bad)
sahf
xchg
push
xchg
dec
repz
ds
mov
loopne
and
repnz
jnp
mov
dec
les
xor
fucomp
add
in
pushf
retf
mov
cmp
or
and
jl
mov
pop
jg
dec
jo
jne
dec
leave
movntps
popf
mov
call
adc
mul
jecxz
retf
xor
adc
cmp
jl
lds
hlt
sub
add
std
sbb
mov
or
push
xor
jno
xor
ficom
lahf
(bad)
popa
enter
xchg
mov
push
xor
stc
inc
xchg
cmps
jbe
dec
aad
scas
cmp
cmp
ja
call
js
shl
mov
xchg
jl
cmp
mov
mov
or
loope
ret
js
test
ins
repz
movs
cdq
mov
inc
popf
int3
retf
adc
push
jne
xchg
sub
ins
retf
adc
push
pusha
cwde
inc
cmp
jmp
popa
dec
enter
inc
cs
nop
(bad)
cmps
rol
dec
rcl
inc
adc
cmp
xchg
jbe
push
cmp
shl
adc
xor
cmps
(bad)
js
and
out
sub
xor
or
fwait
das
xor
aad
out
mov
lods
or
ins
(bad)
(bad)
mov
clc
cmp
cmp
push
mov
daa
jo
pop
mov
dec
xchg
out
loope
push
jl
mov
ins
add
daa
or
repz
jp
and
mov
jnp
mov
call
imul
jbe
mov
test
jmp
loopne
jp
mov
adc
out
inc
aad
loopne
inc
fldenv
pop
or
jnp
cld
stos
inc
sahf
pop
popa
fadd
out
cmp
push
ret
cli
fsub
and
inc
or
xchg
mov
and
pop
iret
xchg
sbb
pushf
mov
push
sub
mov
je
cmp
into
add
sub
int
test
sub
and
and
push
mov
pop
inc
sub
test
jle
dec
adc
add
imul
ds
inc
lods
(bad)
dec
mov
mov
dec
frstor
mov
push
repz
mov
and
mov
push
cmp
jg
sbb
js
adc
cli
cmp
adc
dec
sub
cmp
xor
adc
ds
aad
or
int3
rol
mov
gs
pushf
jno
out
mov
gs
les
lea
xchg
fdiv
jae
pop
jbe
or
lods
int3
dec
out
and
lods
or
lea
vmulpd
and
mov
das
xor
mov
inc
(bad)
sub
les
loopne
(bad)
push
jae
stos
aad
and
dec
sbb
les
std
jo
adc
iret
arpl
adc
push
movs
inc
pop
jne
mov
repnz
inc
movs
inc
sbb
sbb
or
arpl
xchg
into
dec
jmp
(bad)
popf
inc
mov
out
ror
outs
xor
scas
xor
inc
cmp
sub
cld
into
mov
dec
add
xor
dec
(bad)
cld
add
cli
lods
ret
lds
jns
hlt
jl
jne
arpl
pop
shr
or
or
jb
inc
xlat
xor
jb
sbb
mov
dec
push
(bad)
cmp
call
inc
das
and
out
fst
das
popa
das
sub
pusha
inc
sbb
push
sub
mov
mov
or
mov
cmp
ret
cdq
mov
pop
mov
rcr
adc
dec
int
fist
test
and
xchg
mov
cmps
mov
adc
out
push
mov
inc
fdivr
cmp
test
sti
or
push
hlt
js
cdq
movs
xchg
cmp
cwde
cs
lahf
inc
sub
and
push
or
pushf
test
hlt
xchg
pop
test
jbe
pop
cmps
inc
lods
adc
jns
ror
stos
stos
sbb
jg
mov
and
and
pop
mov
jne
or
pop
sti
mov
aaa
xchg
mov
xor
(bad)
jmp
aas
sub
mov
repz
in
ret
add
and
neg
add
mov
add
cmp
push
mov
mov
ins
lea
jnp
clc
out
aas
enter
fwait
test
lock
test
call
xor
push
xlat
stos
fdiv
pop
popf
or
fsubr
imul
mov
xlat
or
adc
in
add
sti
jns
test
xchg
cmp
jg
int3
sub
mov
push
xchg
inc
dec
pop
fnstcw
fcom
mov
shl
popf
mov
iret
ss
cmp
mov
retf
sub
inc
jbe
test
sub
stos
pop
pop
test
xor
pop
and
inc
fwait
repnz
xor
adc
pop
xchg
inc
add
fwait
cwde
(bad)
std
dec
cmps
jmp
fst
jo
in
std
ror
mov
cmp
loope
adc
test
jp
mov
(bad)
jge
(bad)
jnp
xor
mov
jo
in
int3
pop
(bad)
retf
scas
out
popf
sar
xor
iret
popa
xchg
in
dec
sbb
cmc
cmp
xor
out
adc
xchg
jecxz
jne
repz
sbb
sqrtps
sahf
add
xlat
shr
xchg
mov
sub
sbb
icebp
jae
mov
ror
scas
sahf
pop
imul
adc
mul
scas
jnp
in
(bad)
jbe
cmp
in
dec
mov
jg
sub
hlt
mov
js
mov
adc
pop
lea
push
ret
lods
and
movs
sub
or
cld
(bad)
ja
jne
cmc
lods
fabs
aad
add
cld
das
fst
ds
int
push
cmp
dec
mov
mov
adc
jbe
mov
call
mov
xchg
ret
shr
add
imul
clc
dec
pop
dec
mov
test
test
cmps
hlt
sbb
push
pushf
das
das
jo
cmp
cmp
stos
xchg
loop
std
sbb
ins
and
xchg
in
mov
bound
hlt
movs
in
push
movs
movs
pop
(bad)
lds
int
fdivr
dec
mov
xlat
or
jnp
jmp
and
jne
pusha
and
sbb
(bad)
sahf
das
call
cwde
sbb
xor
pop
jmp
adc
inc
movs
loope
and
jns
xor
jo
sbb
add
in
popf
jno
pop
push
iret
loope
in
test
test
hlt
jne
mov
shr
adc
aam
shr
popa
ror
cmp
mov
rcr
xor
adc
idiv
fdivr
in
push
mov
popf
ror
xchg
jnp
aaa
test
jbe
bound
mov
sti
and
xchg
adc
aad
cmp
movs
and
adc
(bad)
imul
stos
sbb
and
retfw
js
inc
into
add
rcl
data16
adc
xchg
dec
cs
test
or
dec
mov
add
jmp
xchg
dec
div
leave
out
fidivr
xor
jno
test
test
(bad)
fiadd
add
push
xchg
push
sti
cmc
jne
outs
inc
jge
sub
jmp
aad
xchg
mul
mov
xor
xchg
pop
push
sub
inc
push
popa
and
sub
leave
lds
leave
rcr
mov
test
or
fs
mov
pop
loop
mov
pop
icebp
mov
push
sbb
mov
adc
test
iret
or
repnz
hlt
in
cdq
jle
or
inc
pop
outs
push
int3
dec
retf
mov
repz
push
fimul
xchg
movs
mov
aaa
dec
push
cmp
sbb
adc
dec
stc
inc
cmp
mov
push
cwde
dec
out
xchg
mov
loope
jmp
adc
sub
cwde
sbb
push
(bad)
cld
push
imul
out
dec
das
cli
movs
jl
sub
leave
jnp
movs
push
adc
pushf
and
shr
nop
cmp
sub
sub
mov
xchg
outs
call
out
or
add
push
add
add
push
jo
mov
movs
sbb
inc
inc
mov
cmps
cmp
int3
ins
push
pop
push
test
lock
ss
repnz
sbb
fidiv
add
fst
xchg
pop
sub
mov
jmp
mov
call
je
loope
sbb
test
arpl
std
sbb
fisub
jp
data16
pop
lea
imul
enter
sbb
stc
jge
xchg
in
jl
std
cmc
dec
mov
(bad)
movs
push
shr
(bad)
cmps
enter
lock
cdq
pop
jl
cmc
sbb
aad
stos
stos
cmp
push
(bad)
pop
xchg
sub
pop
sbb
mov
adc
les
push
fwait
mov
es
push
dec
jno
or
and
mov
inc
imul
in
push
icebp
rcr
mov
test
mov
sbb
jb
ret
inc
div
jmp
fcom
mov
or
mov
(bad)
pop
add
stc
cmp
adc
neg
ja
das
lods
or
fwait
out
cmp
je
sbb
jg
mul
and
jmp
or
cdq
inc
ror
push
lahf
mov
icebp
lea
xor
sub
sahf
jl
push
xchg
mov
int
popf
daa
push
stc
fild
test
mov
cdq
dec
fld
xor
daa
dec
jo
adc
mov
pop
mov
cli
mov
dec
in
inc
clc
sahf
shl
fild
push
lock
xchg
aaa
aas
jge
pop
push
xchg
jns
movntps
test
fwait
ret
int3
push
fsubr
sti
cld
push
xchg
inc
xor
push
imul
mov
sub
(bad)
cmps
rcl
push
jns
sub
xchg
aad
fldcw
(bad)
fbstp
dec
dec
(bad)
xchg
mov
dec
popf
out
in
inc
out
stos
pusha
mov
stos
imul
rol
push
jno
loop
jnp
shl
aad
out
xchg
in
js
fcomp
pop
js
cs
cmps
leave
(bad)
ds
dec
arpl
(bad)
or
hlt
sahf
(bad)
mov
or
or
inc
lahf
cwde
ja
adc
jbe
push
or
and
repnz
test
push
sbb
sbb
pop
mov
fdivp
inc
jecxz
es
clc
dec
xchg
pop
push
add
sub
repz
ins
pop
hlt
mov
inc
mov
adc
imul
ror
xor
mov
das
or
sub
push
sti
sbb
bound
scas
jae
xchg
mov
mov
adc
sbb
jle
call
outs
mov
test
clc
cmc
and
push
or
scas
or
int3
sbb
retf
sbb
call
(bad)
aad
repz
sub
out
aas
cmp
push
pop
add
adc
call
loopne
cmp
shl
data16
dec
xchg
sbb
fsub
pop
push
ds
push
ss
dec
clc
xlat
jp
cmp
rcl
enter
mov
ja
rcl
sbb
dec
jg
cwde
push
lea
retf
and
dec
fwait
xor
xchg
push
aam
(bad)
call
or
xchg
popa
in
movs
or
dec
fidivr
mov
shr
cmps
int
movs
scas
push
dec
sar
pop
xchg
test
jns
pop
or
push
xchg
adc
adc
pop
fld
mov
cli
jns
sti
(bad)
fwait
les
fnstsw
or
mov
int
xor
jns
or
or
addr16
shl
(bad)
adc
mov
inc
mov
inc
push
shr
nop
dec
idiv
pop
xchg
fyl2x
jo
es
les
xor
mov
jno
and
mov
jmp
aaa
aam
inc
push
jp
pop
xchg
in
stos
in
mov
out
enter
jecxz
ds
out
and
jp
fwait
mov
pop
sub
mov
mov
aaa
and
pop
mov
add
rcl
or
jno
test
in
test
pop
push
call
add
imul
mov
popf
jecxz
or
sbb
mov
stc
pop
dec
lea
jmp
call
inc
adc
jecxz
mov
sbb
jge
retf
test
ja
sub
mov
imul
push
jp
ror
fsub
xor
pushf
push
xlat
mov
int
sub
int
ret
sbb
push
shr
repz
jno
xchg
imul
jnp
or
add
sbb
aas
sti
jno
and
je
pop
mov
mov
movs
stos
inc
mov
cmps
movs
pop
dec
stos
out
xchg
outs
cdq
cdq
rcl
xchg
pop
xchg
xchg
sub
xchg
xchg
cmp
push
jbe
jp
xchg
lahf
ss
mov
ret
jne
shr
rol
ins
hlt
fs
mov
push
dec
and
inc
dec
cli
pop
cli
push
adc
cmp
idiv
stc
inc
push
push
push
in
jae
pop
das
sbb
shl
lahf
sub
cwde
push
cwde
xor
std
std
stos
repnz
enter
push
dec
jge
cmps
and
mov
sub
in
xlat
ret
hlt
mov
inc
sub
mov
lea
cmp
in
pop
lock
gs
repnz
cmps
rcl
push
and
icebp
(bad)
in
sub
jnp
jns
cmps
cmp
mov
std
mov
aam
xchg
push
stos
push
out
fwait
dec
mov
ret
xchg
into
jecxz
(bad)
mov
mov
mov
pushfw
xchg
and
ss
fs
icebp
cmp
pushf
inc
stos
pop
mov
into
sbb
mov
mov
and
xchg
out
jmp
(bad)
into
(bad)
int
lds
icebp
dec
loop
mov
aas
out
inc
call
fistp
sbb
sub
sbb
jb
mov
ja
jge
cli
cdq
sub
sahf
pop
jae
cmp
inc
js
sub
adc
pop
je
mov
arpl
push
inc
cmp
dec
inc
inc
inc
jmp
inc
xchg
add
push
mov
hlt
push
sbb
sbb
(bad)
mov
cmp
daa
dec
push
and
and
push
sbb
inc
push
dec
sbb
pusha
std
push
dec
daa
aam
dec
shl
sar
mov
adc
mov
repz
adc
in
pop
or
je
test
(bad)
jmp
jecxz
shl
in
cdq
inc
mov
dec
rol
cmps
add
sub
inc
push
add
inc
movs
mov
jecxz
out
movs
shr
mov
push
adc
fidiv
mov
shl
outs
jmp
xchg
or
cmp
push
je
outs
shl
test
xchg
xor
jl
add
loope
jnp
stos
add
retf
dec
inc
inc
sub
sub
inc
stc
aam
int
adc
mov
retf
fsubrp
push
nop
ins
inc
cmp
jne
sahf
call
xchg
call
rol
cmp
mov
jp
and
inc
jp
in
stos
xchg
aaa
dec
loope
call
cmp
das
mov
fwait
add
jge
push
xchg
add
pop
xor
jl
dec
std
pusha
jecxz
mov
data16
add
repnz
mov
sub
or
lahf
push
push
inc
outs
mov
popf
push
sbb
test
stos
test
xor
ja
loop
inc
loope
test
in
lahf
stos
es
fcom
adc
fild
push
lods
xor
jecxz
cwde
dec
das
adc
mov
fcom
cmc
cmp
add
or
jmp
mov
dec
mov
pop
cmc
and
inc
pusha
xor
cmps
cmps
dec
jp
mov
popf
std
mov
fs
imul
ret
push
cmp
aaa
loop
mov
aad
cmp
ror
mov
jb
rcl
and
mov
mov
pop
mov
out
adc
mov
fld
popf
cld
jmp
pop
call
xor
and
rcl
sub
jl
dec
outs
jl
mov
(bad)
shl
mov
cmp
fild
jae
push
inc
push
cmp
mov
and
adc
in
cmp
movs
add
jb
mov
mov
das
fsubr
mov
dec
cmp
(bad)
repnz
pop
js
jl
ja
mov
sar
stos
rol
call
ins
mov
hlt
xor
shr
xor
aaa
and
mov
idiv
mov
out
mov
fdiv
lods
sbb
or
sbb
leave
jl
int3
mov
dec
cdq
in
adc
stos
mov
dec
arpl
imul
shl
mov
clc
mov
fdivr
call
mov
cs
push
addr16
jnp
mov
call
jmp
dec
lods
mov
push
fisub
jp
inc
push
adc
call
cmp
dec
retf
xchg
jo
scas
shl
xchg
push
mov
push
adc
mov
bound
cmp
xlat
mov
or
pop
test
adc
test
xor
cmp
frstor
push
jg
clc
sub
jmp
sar
push
ds
ret
rcl
lods
fwait
cmc
jo
cmp
cmp
retf
das
cmp
(bad)
arpl
add
cld
jp
data16
(bad)
rcr
punpckhwd
xchg
inc
bnd
cvtpi2ps
scas
enter
push
(bad)
pop
pop
add
test
cmp
cwde
sbb
sbb
pop
int
push
sub
jge
mov
je
xchg
pop
or
pop
mov
add
std
mov
fbld
or
xor
mov
popa
sub
clc
lea
jo
mov
aad
pop
out
push
out
xchg
mov
sbb
sti
adc
movs
jae
jle
xor
pop
scas
fdiv
mov
and
xchg
test
scas
adc
mov
and
jp
fwait
sub
add
in
es
test
jae
sar
pop
jmp
(bad)
pop
mov
adc
or
mov
mov
xchg
xchg
fwait
pop
cwde
dec
pop
fs
rcl
add
pop
sub
(bad)
mov
(bad)
fld
not
fsubr
xchg
jb
pusha
or
cmps
inc
dec
out
cwde
sti
push
xor
jmp
fisub
lds
sbb
outs
or
add
inc
sub
aaa
out
cmp
jl
gs
pusha
pop
and
mov
xchg
vcmpps
mov
push
mov
mov
push
mov
fptan
inc
int3
(bad)
das
sub
lods
call
dec
shr
icebp
mov
nop
inc
push
mov
repnz
in
push
adc
push
inc
xchg
jg
sbb
ins
and
push
nop/reserved
jle
dec
push
add
xchg
(bad)
mov
mov
xchg
add
push
mov
sbb
push
xchg
cdq
inc
clc
sti
cli
lea
loop
ds
popa
mov
(bad)
pop
das
ds
or
repnz
cmps
inc
mov
jmp
jns
loop
shl
xor
inc
adc
das
or
or
xchg
cld
add
sub
pusha
test
xchg
iret
les
or
cmp
xchg
mov
pop
inc
xchg
sub
mov
popf
xchg
ficomp
cwde
dec
(bad)
fist
jg
sbb
inc
in
mov
mov
lods
repz
sbb
dec
lea
inc
xor
mov
inc
out
xor
loopne
dec
aad
test
mov
add
in
je
ror
addr16
adc
les
pusha
mov
loope
outs
aaa
sbb
mov
je
pop
iret
mov
inc
push
addr16
cmp
cdq
sbb
or
push
adc
jge
mov
jle
xchg
movs
rcl
xchg
jno
or
jo
xor
add
add
jmp
fwait
popa
hlt
dec
scas
xchg
nop
pop
inc
movs
ror
mov
mov
jmp
xrelease
cld
xor
mov
shl
jmp
dec
enter
in
cmp
xchg
pop
mov
aaa
xchg
and
xchg
idiv
mov
inc
cmp
sbb
cmp
test
lods
clc
mov
jno
push
push
push
loopne
jno
push
xor
stc
cmps
movs
pop
inc
cwde
xor
data16
inc
xchg
lods
movs
xchg
mov
inc
(bad)
ficomp
push
pop
out
mov
dec
retf
inc
xchg
stc
(bad)
fsubr
and
xor
cwde
inc
push
into
out
xchg
dec
neg
adc
and
push
sbb
icebp
mov
inc
mov
out
in
popf
sbb
(bad)
std
mov
fst
mov
ds
imul
mov
pop
push
sti
or
xor
sbb
mov
call
out
ret
or
(bad)
cmp
scas
jns
fiadd
mov
dec
(bad)
jns
jbe
jg
fdiv
call
lods
fstp
jo
stos
out
lds
push
(bad)
fst
icebp
out
jb
enter
and
sub
iret
mov
inc
push
cmp
adc
sbb
push
bound
shr
scas
pop
lods
in
inc
hlt
inc
imul
dec
jecxz
shr
scas
mov
(bad)
pop
mov
retf
xor
in
test
pop
hlt
or
shr
lds
xchg
ror
dec
xor
cld
fmul
(bad)
(bad)
out
fs
cmp
clc
aad
or
aam
jg
std
(bad)
jecxz
mov
jnp
sar
(bad)
call
dec
fnsave
aam
add
aad
inc
loopne
dec
call
push
jecxz
test
mov
iret
in
sub
mov
js
test
add
dec
mov
pop
push
add
int3
gs
(bad)
xor
xchg
es
daa
les
js
outs
adc
int3
inc
jns
ins
xchg
mov
retf
or
leave
pushf
push
mov
jle
sbb
jg
in
outs
jmp
mov
mov
push
daa
inc
call
mov
js
mov
mov
shl
mov
stos
sub
dec
scas
rol
mov
(bad)
data16
int3
popa
out
loop
sbb
hlt
push
push
add
rcr
mov
adc
inc
jp
outs
mov
add
mov
lods
test
jp
xor
jmp
sahf
pop
ret
inc
cmp
push
mov
and
and
pop
test
loop
in
pop
mov
pop
aas
xor
inc
mov
in
mov
in
xchg
mov
ret
and
and
jmp
add
iret
pop
push
(bad)
fsubr
xchg
sbb
dec
aaa
icebp
mov
(bad)
loop
add
sbb
adc
mov
ret
out
adc
not
xchg
inc
fst
cdq
inc
mov
sub
cmp
xchg
mov
out
cmps
fptan
aas
or
fstp
xchg
or
js
inc
jmp
or
inc
lahf
and
cs
cmp
mov
jns
in
rcr
aaa
cmp
push
and
mov
(bad)
cmp
mov
aas
mov
push
mov
shl
cmp
test
sbb
stc
vmread
into
inc
push
xor
push
push
icebp
sub
jl
push
xchg
adc
icebp
imul
outs
shl
add
ss
xor
mov
not
sub
(bad)
(bad)
retf
and
lahf
pop
pop
xchg
ds
mov
stc
(bad)
loopne
outs
in
jmp
adc
fild
lock
inc
out
fcomp
pop
mov
jecxz
clc
cld
je
out
cmc
bswap
jnp
scas
mov
cmps
push
lods
sbb
fnop
jmp
retf
inc
daa
xchg
lods
mov
sbb
inc
cmp
mov
jbe
std
mov
pop
adc
stos
xor
xor
mov
mov
xchg
repz
stos
push
shl
lods
das
cmp
fiadd
scas
fwait
cmps
jo
not
test
mov
imul
ret
xchg
adc
add
mov
pop
pop
cmp
pop
popf
inc
lock
push
test
imul
outs
jmp
popf
add
add
call
hlt
inc
iret
sbb
and
fs
xchg
pop
xor
mov
jnp
cmp
(bad)
test
test
addr16
(bad)
jge
fcom
test
mov
mov
push
scas
mov
sub
mov
test
cmps
or
pop
and
test
fwait
lahf
xor
mov
xor
sub
cmp
sar
sahf
(bad)
in
mov
aaa
lods
retf
inc
repnz
jns
rol
ret
retf
mov
sbb
and
add
add
retf
imul
in
aas
push
lods
jecxz
retf
xor
jecxz
icebp
mov
nop
sti
int
fld
out
adc
push
mov
dec
test
mov
mov
lahf
xor
add
enter
ins
cmp
loopne
popa
cmp
mov
aam
test
mov
call
sbb
popa
sbb
scas
test
push
test
mov
push
inc
sub
gs
push
mov
aam
in
int3
(bad)
pop
les
add
cmp
(bad)
pop
cwde
popa
test
sbb
or
imul
cmp
jmp
pop
adc
sub
jle
or
jg
sub
xchg
inc
imul
and
cld
and
popa
shl
jo
xsavec
shr
sub
push
popa
mov
cld
inc
sbb
loope
cli
out
inc
out
push
push
and
adc
cmp
jns
xchg
fisttp
push
(bad)
in
fld
mov
push
cld
and
pop
out
popa
cmp
jp
push
push
pop
dec
and
xchg
sub
call
ss
add
xchg
dec
imul
jbe
pop
icebp
(bad)
jno
stc
mov
cwde
cmp
loope
loop
mov
idiv
ins
bound
push
fmul
inc
dec
push
bound
mov
out
mov
stos
lds
cmp
movs
sub
add
xor
xchg
fsub
xlat
loopne
mov
sbb
fistp
jg
scas
add
jmp
cmp
mov
fst
ins
adc
dec
stc
sbb
iret
pop
xchg
fnstenv
stos
push
pop
sahf
icebp
or
mov
lock
inc
push
mov
sub
pushf
jle
or
les
mov
mov
arpl
inc
out
jae
push
leave
in
xchg
xor
adc
add
fst
adc
xor
add
popa
std
stc
sbb
jae
ret
mov
mov
pop
jnp
dec
sub
mov
hlt
fucomi
ret
daa
mov
sbb
lahf
outs
test
gs
call
into
loop
addr16
rcr
stos
mov
and
rol
or
xor
pop
pushf
out
xchg
cwde
adc
push
mov
in
lock
pop
xor
(bad)
add
hlt
inc
pusha
adc
and
pop
cmp
dec
mov
cdq
inc
fisttp
lds
aad
xchg
mov
mov
cs
sbb
jns
jp
bound
leave
push
dec
jecxz
inc
mov
sbb
mov
(bad)
xlat
cmp
cmp
(bad)
ins
add
sub
mov
and
test
pop
jecxz
sbb
cmp
mov
push
ret
je
mov
movs
sub
cmp
clc
mov
out
js
hlt
mov
dec
jl
cld
xchg
xchg
clc
imul
pop
jle
ja
pop
inc
(bad)
stos
dec
cmps
mov
stos
inc
popa
xchg
jo
xchg
and
and
or
test
xchg
dec
sti
add
xchg
pop
pop
(bad)
pop
es
gs
push
cld
pop
push
jne
xchg
inc
xor
pop
push
xor
fisubr
std
xchg
mov
aaa
sbb
scas
loop
dec
leave
add
(bad)
fcmovne
push
add
and
mov
lods
(bad)
dec
inc
adc
inc
shl
arpl
inc
mov
mov
mov
fisubr
or
retf
inc
dec
push
aas
daa
bound
mov
aaa
das
ud1
mul
inc
mov
stos
in
inc
mov
movs
lock
test
cli
pop
xchg
repz
cmp
lods
sbb
out
inc
mov
mov
xchg
jo
(bad)
dec
cmps
dec
adc
inc
mov
sub
ins
cmps
sub
sub
fistp
jbe
push
cmps
scas
jo
lods
shl
pop
iret
mov
push
dec
push
rcr
xchg
adc
jecxz
mov
pop
adc
cmp
xor
cmp
pushf
bound
inc
push
stc
jmp
jmp
sub
push
jbe
push
in
out
outs
call
mov
or
sar
movs
push
inc
into
xchg
cli
cdq
adc
aad
mov
dec
cli
jg
jne
icebp
pusha
imul
jmp
mov
or
jnp
mov
iret
push
and
test
fcomp
xor
mov
mov
mov
jmp
push
xor
pop
gs
push
(bad)
addr16
stos
inc
xchg
mov
inc
sbb
dec
out
cmps
(bad)
lods
mov
ins
(bad)
sub
mov
enter
lock
aas
mov
xor
out
stos
push
inc
or
and
ret
sar
ss
hlt
scas
xor
pop
test
hlt
mov
imul
mov
fild
mov
das
jmp
(bad)
scas
in
ins
movs
pop
and
mov
add
lods
xchg
xchg
push
cmp
add
(bad)
or
sahf
mov
add
int
mov
int
sar
stos
xor
test
push
xlat
mov
ret
sbb
mov
xchg
int
mov
test
fimul
out
push
fist
mov
xor
fdiv
inc
test
ret
mov
loop
inc
inc
mov
jo
adc
into
or
lahf
popf
pop
(bad)
jle
mov
(bad)
sub
and
data16
das
ror
sti
pop
push
shl
call
dec
out
mov
inc
mov
or
xrelease
mov
xchg
push
popa
xchg
xchg
les
call
mov
sbb
inc
pop
loopne
mov
mov
cmp
cmp
or
jbe
ret
ss
mov
pop
xchg
xor
push
and
or
lock
repnz
std
cmps
push
arpl
dec
rcl
ja
cld
lahf
call
neg
aad
cmp
int
imul
ror
pusha
sub
xor
jbe
fldenv
ror
nop
sbb
and
or
imul
push
imul
sti
addr16
pusha
fdivr
jb
adc
setae
push
je
push
jmp
hlt
mov
cmc
jp
std
lea
pop
in
pop
(bad)
pop
mov
stos
pop
xchg
adc
jne
enter
xchg
rcr
mov
jl
pop
call
pop
or
xor
lahf
mov
movs
mov
fwait
aam
push
mov
pop
xchg
imul
daa
ret
or
data16
in
add
or
in
es
or
jl
sti
leave
loopne
mov
mov
into
adc
pop
pop
stos
adc
xchg
int3
movs
mov
aad
int3
ss
test
cmp
nop
loope
jge
loop
mov
repnz
add
or
popa
xor
lock
jne
in
movs
retf
and
xchg
out
(bad)
call
ss
cmc
fs
sub
icebp
pop
mov
push
pop
push
add
arpl
out
inc
xor
lods
or
ffree
push
cld
adc
and
pop
inc
ins
push
clc
mov
lods
call
dec
jp
sbb
xchg
cmc
loopne
pop
pop
adc
popf
mul
pop
cmps
iret
push
pop
std
ret
jae
lods
adc
mov
cmp
lods
fstp
loop
add
loop
xor
jns
(bad)
sub
inc
add
test
movs
sbb
imul
scas
lds
retf
repnz
scas
(bad)
popa
(bad)
in
es
xor
mov
mov
push
pushf
inc
dec
lods
mov
xchg
mov
ret
xchg
cmps
pop
scas
int
mov
xor
xchg
jl
pop
jmp
shr
shr
mov
pop
test
fisubr
inc
sub
push
cli
fs
xor
fs
or
repz
mov
cmc
dec
xchg
(bad)
ja
mov
(bad)
and
inc
add
fidivr
movs
push
mov
push
ret
leave
jne
fcom
or
dec
int3
and
sub
es
jb
push
int3
dec
pop
or
in
scas
mov
nop
scas
or
and
shl
loopne
outs
lods
jo
mov
test
cdq
aam
pop
out
pop
outs
dec
or
lods
xchg
jmp
out
test
push
jne
mov
fmul
xchg
cmc
test
test
jns
lods
jne
xchg
(bad)
cmp
fsubr
ss
or
cmp
jl
inc
jp
jg
and
mul
fs
jge
das
je
mov
into
aam
push
cld
jle
and
in
mov
popf
xor
or
xor
jg
xchg
cmps
xchg
mov
imul
mov
int3
lea
fs
clc
dec
cmp
aam
test
inc
sub
and
jmp
push
jl
or
push
dec
mov
std
scas
fcmovne
scas
inc
mov
mov
and
or
mov
(bad)
push
fadd
mov
repz
pop
movs
sbb
xchg
mov
mov
cmps
pop
pop
lods
cmp
dec
pop
mov
fcomp
(bad)
push
out
jb
jle
clc
cdq
pop
xchg
arpl
into
imul
and
dec
jo
mov
jg
cmp
mov
imul
push
add
xchg
aas
add
xchg
stos
inc
jnp
hlt
xchg
movs
mov
sbb
call
lods
fsubrp
fwait
pop
cmp
or
sub
and
xor
hlt
sub
push
add
mov
fisttp
(bad)
shr
test
xchg
push
xor
inc
or
mov
sbb
loope
dec
arpl
pusha
xor
and
fidivr
mov
fwait
lods
inc
pop
or
adc
retf
call
sub
push
dec
int
push
inc
mov
jge
mov
cmp
iret
sub
test
jo
adc
arpl
jbe
adc
ja
jnp
test
(bad)
jle
rcl
hlt
xor
inc
stos
mov
retf
adc
mov
push
dec
das
into
add
pop
push
rcl
and
xchg
sbb
and
lahf
adc
cmp
data16
or
push
jnp
ss
dec
in
pusha
and
xchg
hlt
cmp
adc
fld
xchg
jge
adc
je
into
xchg
mov
xor
inc
psraw
loopne
aam
xlat
or
inc
mov
xchg
push
hlt
scas
xor
dec
xor
pop
out
sahf
xchg
and
mov
sbb
xchg
fadd
bound
cmc
inc
cwde
enter
and
jb
mov
(bad)
or
xchg
dec
cwde
loopne
pop
scas
ja
sub
test
and
adc
addr16
inc
or
imul
xchg
call
out
add
ds
int3
test
(bad)
in
loopne
into
mov
mov
mov
lds
in
cmc
jo
push
adc
aam
lods
rcr
add
jbe
lea
cmp
scas
inc
pop
(bad)
jge
lea
leave
ds
pop
add
xor
jmp
inc
and
inc
fdiv
mov
push
xchg
xor
(bad)
dec
and
fwait
lahf
mov
jge
or
mov
push
jle
clc
xor
mov
inc
push
je
or
xor
aaa
mov
sbb
jecxz
mov
cmp
mov
vmovaps
jmp
fwait
or
and
xchg
nop
push
stos
arpl
inc
shl
push
inc
imul
mov
mov
(bad)
adc
hlt
jecxz
or
push
out
xor
mov
mov
add
and
inc
aas
mov
iret
call
pusha
fs
neg
jg
adc
std
sub
imul
inc
aaa
inc
mov
xchg
mov
or
xor
shl
lds
aas
push
test
pop
mov
loope
int3
pop
scas
xor
push
pop
ror
mov
addr16
lds
push
fmul
ficom
outs
pop
fsubr
push
pop
pop
sub
sub
outs
sub
push
cmp
sub
sub
sbb
cmp
mov
sbb
bound
shl
jne
mov
in
mov
fimul
fadd
pop
out
cmp
xchg
bound
aaa
push
scas
add
ds
hlt
retf
aaa
jp
xor
or
nop
mov
ror
xchg
stc
adc
ja
addr16
outs
lahf
div
and
jnp
cmp
push
int3
in
cmp
sbb
xchg
jle
inc
leave
(bad)
jmp
sbb
or
fwait
xchg
test
adc
add
int3
into
mov
dec
cmps
repnz
aam
fadd
mov
mov
or
fiadd
mov
jmp
stc
(bad)
push
js
and
sub
ja
sub
cli
retf
add
jb
dec
jge
ret
mov
mov
outs
cmp
sbb
popf
cs
not
inc
es
push
stos
xlat
cmp
sub
push
jmp
sar
(bad)
retf
push
add
ret
(bad)
or
(bad)
retf
xchg
or
add
pop
call
mov
jbe
mov
repz
cmp
cmp
jl
push
jle
sbb
or
rcl
push
pop
(bad)
stos
push
mov
mov
mov
pop
add
xchg
xor
pop
jae
mov
jp
pop
and
jle
cmps
jae
lds
xchg
xchg
shr
mov
add
mov
ss
inc
(bad)
jno
ss
push
cmps
push
fbstp
or
lea
ja
test
add
jl
test
mov
fimul
adc
call
shl
cmp
into
jp
sbb
je
mov
pop
jae
sbb
pop
ds
in
xchg
popf
out
(bad)
aam
repz
pop
stc
jge
pop
fidiv
mov
or
dec
cmp
jg
cs
fwait
shr
outs
in
ret
add
dec
xchg
std
cmp
lods
pushf
pusha
loope
iret
ins
pop
call
gs
in
aaa
rcl
enter
jg
xchg
sbb
push
aas
(bad)
sub
lea
rcl
repnz
iret
ror
scas
xor
in
jnp
pushf
test
ficom
lahf
adc
sbb
mov
pop
or
push
xchg
cdq
je
sub
or
jnp
mov
call
stos
mov
mov
ins
enter
addr16
fsub
pop
popa
div
push
stc
test
mov
add
mov
out
xchg
fild
gs
jp
add
inc
ds
mov
mov
inc
pop
pop
mov
popa
add
cli
dec
stos
mov
aas
adc
jge
lods
push
jl
and
fidiv
retf
and
je
adc
in
imul
pushf
xchg
pop
ja
mov
outs
xchg
jae
nop
xor
lahf
adc
inc
int3
pop
and
sub
iret
aas
add
rcl
leave
push
add
push
inc
movs
outs
dec
push
mov
sbb
push
call
std
pop
pop
mov
mov
popa
loope
test
lock
dec
imul
adc
fs
test
xchg
jne
fldcw
hlt
inc
jp
and
dec
ret
cmp
popa
jns
ss
or
inc
dec
ss
fnsave
iret
dec
and
imul
inc
push
fsubr
lods
jg
lahf
loop
adc
mov
scas
xchg
stos
movs
adc
pop
aam
das
ss
pushf
mov
retf
and
mov
or
je
(bad)
push
shl
and
sub
xor
in
es
jp
jecxz
add
mov
ja
fadd
cmp
push
inc
data16
pop
andps
loopne
cmp
mov
sub
sub
adc
pop
pop
fiadd
(bad)
mov
cmp
dec
and
(bad)
fidiv
call
nop
aam
mov
jb
nop
xor
inc
xchg
cmc
push
xlat
pop
int
aaa
push
loopne
xor
mov
mul
mov
int3
mov
jo
push
sahf
imul
pop
psubusw
pop
cmp
dec
mov
cmp
shr
jmp
or
add
popf
fstp
outs
scas
dec
aas
in
jb
dec
stos
and
cwde
pop
xchg
in
ins
and
dec
movs
outs
and
mov
jnp
mov
leave
cdq
iret
sub
push
sbb
les
or
repnz
mov
mov
sbb
js
sub
imul
xchg
test
outs
test
xchg
cmp
push
aas
(bad)
xor
inc
int3
out
add
push
ss
and
pop
sub
push
repz
xor
retf
or
out
jno
add
in
loope
pop
jecxz
mov
loope
xchg
call
sub
sti
icebp
cs
fldcw
xor
out
retf
test
movs
daa
addr16
xor
dec
in
mov
push
and
gs
mov
cmp
jmp
call
mov
adc
addr16
jg
dec
shr
mov
inc
push
inc
cmc
pop
and
jbe
sub
ins
sub
xchg
sahf
dec
xor
ret
mov
or
fist
outs
mov
scas
loope
movs
pop
in
mov
popf
int3
push
mov
add
xchg
xor
or
xor
test
cmc
jnp
ret
jp
test
(bad)
arpl
cmp
ds
call
mov
dec
or
pop
in
mov
int
adc
adc
loop
push
and
mov
neg
imul
imul
sub
sbb
mov
das
sub
jns
cmp
jp
dec
out
not
adc
adc
(bad)
cmp
(bad)
lock
lea
jnp
cmp
add
push
and
push
push
shr
in
fbld
sub
dec
jo
fld
cmp
bound
inc
das
push
addr16
jmp
imul
mov
jo
pop
cdq
(bad)
jmp
pop
or
push
xchg
mov
rol
ins
xor
add
inc
cwde
dec
push
mov
lods
ins
mov
dec
ret
movsx
cdq
movs
ja
mov
xchg
call
in
jl
pop
icebp
loop
out
out
call
call
in
add
mov
ins
xor
ss
push
lods
scas
dec
sub
add
mov
loop
jb
and
addr16
jae
shr
test
in
mov
xchg
mov
mov
sub
sahf
xchg
inc
outs
lods
(bad)
lea
gs
scas
outs
mov
cmp
push
fcom
ret
icebp
cmps
xchg
addr16
sbb
mov
pop
scas
mov
scas
ret
cld
and
xchg
and
ins
(bad)
and
fild
hlt
inc
mov
pushf
adc
xor
and
xchg
(bad)
ins
lds
cmp
push
and
ja
dec
aas
fs
mov
mov
mov
push
jmp
push
test
(bad)
mov
icebp
push
sub
xchg
repnz
xchg
xor
mov
mov
in
push
test
and
inc
adc
push
jae
pop
mov
mov
in
mov
(bad)
add
(bad)
jo
test
lock
(bad)
hlt
call
or
jmp
rep
pop
inc
cmp
cmp
dec
sub
dec
into
dec
arpl
mov
dec
xor
mov
push
dec
rol
sbb
jnp
cmp
repz
adc
cmp
pop
ins
fwait
and
data16
repz
xchg
gs
imul
inc
jmp
ret
(bad)
mov
jno
push
fsub
mov
xchg
add
(bad)
jns
jno
jg
fucomp
sub
das
pop
and
scas
mov
jecxz
mov
push
mov
push
(bad)
fstp
lods
ins
sbb
fld
mov
cmps
arpl
dec
mov
pushf
cs
push
mov
test
xor
mov
lahf
retf
xor
stos
xchg
ret
test
push
hlt
push
or
push
dec
sub
dec
mov
(bad)
mov
call
xor
push
out
add
cmp
(bad)
cmps
jle
call
(bad)
lea
xor
push
je
jmp
add
dec
std
cmp
sub
and
outs
xor
pop
add
mov
adc
jns
mov
sub
xchg
popf
int3
in
fcmovne
pop
fdiv
mov
out
or
cmp
loop
mov
or
imul
ss
inc
xchg
imul
xor
and
mov
inc
xor
xor
shl
sbb
mov
in
xchg
out
fucomi
iret
test
cmp
mov
stc
inc
jbe
mov
lahf
(bad)
retf
dec
push
push
or
cmp
cmc
(bad)
mov
and
je
mov
inc
cmp
leave
mov
adc
data16
test
inc
int
cmp
int3
in
xor
fsubr
movs
inc
fs
jne
sar
sub
add
jge
push
mov
inc
or
push
std
push
out
lea
inc
xor
popa
call
add
push
clc
or
pop
jecxz
jle
adc
cmps
(bad)
mov
pop
add
adc
inc
dec
xor
out
adc
add
fidivr
fisttp
jbe
jbe
dec
and
jne
call
push
repnz
ror
cmps
(bad)
push
inc
and
mov
aas
jmp
dec
sub
pop
lock
enter
cs
scas
inc
cwde
pop
in
and
jb
inc
ja
lods
outs
mov
mov
das
stos
jp
dec
add
cs
icebp
fwait
rol
jp
mov
mov
xor
push
mov
dec
dec
dec
mov
test
sub
fisttp
inc
add
jle
into
aas
dec
xchg
dec
or
imul
ss
pushf
aam
ins
push
mov
aaa
or
jle
ror
je
lahf
out
jbe
bound
aad
jb
arpl
(bad)
xor
push
push
mov
scas
sub
(bad)
cld
mov
xor
lock
aad
aaa
loope
jns
scas
shl
inc
add
cmp
dec
pop
pushf
mov
outs
ja
ret
sar
int
cs
mov
jl
push
nop
repnz
cmps
mov
stos
out
dec
sbb
mov
push
daa
adc
gs
rcr
stc
int
and
cmp
cmp
fcomp
adc
neg
clc
sbb
inc
loope
fwait
nop
push
xchg
push
add
in
sub
cmovbe
aam
inc
in
or
ret
popa
inc
inc
xchg
sbb
loopne
add
leave
inc
jg
retf
jp
mov
sbb
ins
adc
ins
icebp
aas
(bad)
mov
and
pop
lds
mov
push
xchg
fwait
hlt
retf
test
lods
out
cmp
jp
leave
cmps
fwait
lods
sub
fsub
push
mov
movs
jno
push
push
aaa
stos
call
jge
xlat
sub
mov
jle
dec
and
pop
(bad)
fsubr
test
pop
mov
ret
scas
xor
mov
arpl
scas
sbb
outs
mov
movs
in
and
pop
mov
(bad)
adc
ffreep
mov
push
and
out
push
dec
adc
js
cmp
leave
mov
addr16
int3
repnz
dec
adc
sub
and
push
ror
nop
test
or
js
and
sub
fidivr
push
sbb
xchg
nop
push
xchg
push
test
pop
(bad)
push
cmc
arpl
cld
(bad)
into
xchg
dec
popa
pop
and
inc
leave
pop
es
int3
test
xor
(bad)
outs
ds
in
inc
sub
ror
push
cmp
inc
enter
movs
add
jmp
retf
xlat
push
popa
and
push
mov
mov
sbb
test
cmp
xchg
lods
mov
sub
adc
out
pop
mov
jle
lea
(bad)
std
xor
or
or
jae
mov
xor
xlat
or
and
push
mov
or
into
pop
shr
mov
loopne
bound
add
pop
mov
aam
es
push
arpl
pop
addr16
sub
mov
lds
fisttp
push
mov
mov
jmp
sbb
enter
push
les
push
loopne
repz
push
jb
push
repz
mov
pop
mov
cli
pop
loope
mov
stos
inc
cmp
or
mov
jmp
xor
dec
jle
popf
ins
mov
iret
cmp
mov
mov
cmp
add
imul
jb
lods
pop
in
retf
cwde
mov
(bad)
loopne
cmp
adc
pop
adc
sbb
int
mov
imul
adc
je
xor
pop
in
adc
jno
call
gs
outs
fidiv
rcr
or
xor
dec
add
(bad)
pop
es
mov
sub
cmp
push
mov
mov
jb
loopne
ja
adc
inc
(bad)
gs
enter
xchg
repz
mov
(bad)
out
imul
mov
jmp
jmp
in
pop
arpl
outs
push
stos
mov
mov
(bad)
out
shl
or
movs
fisubr
inc
retf
push
sbb
(bad)
in
fcom
cdq
int
mov
push
das
stos
dec
out
scas
xchg
ja
shl
jg
pop
push
mov
sub
cmp
es
(bad)
fiadd
add
sub
cmps
push
jp
push
call
sbb
xchg
xor
push
sahf
jle
js
xor
mov
mov
jmp
dec
sub
gs
mov
das
ins
push
mov
cmp
enter
sbb
push
xchg
push
xchg
leave
jp
sbb
fucomip
rol
fiadd
gs
cmps
push
jmp
xchg
sbb
in
mov
and
mov
or
mov
jge
es
jb
push
xchg
dec
and
sbb
xchg
and
adc
mov
pop
xor
pop
cmp
repz
lods
scas
fldcw
jecxz
add
pop
loope
retf
jmp
lock
out
mov
jmp
pop
ins
adc
xor
sub
push
xor
dec
mov
int3
sub
loope
aaa
xchg
xor
add
pop
jns
fstp
inc
cmc
ficom
jns
push
div
push
outs
addr16
inc
add
xchg
dec
pop
scas
leave
aam
lods
push
pop
out
(bad)
push
push
pop
lods
cmp
and
xchg
and
jp
or
xchg
mov
jg
lods
std
jo
fdiv
pushf
sub
rcl
ss
adc
sbb
or
ss
pop
mov
add
lock
scas
xor
mov
and
mov
int3
int3
les
inc
stos
aad
mov
push
stos
iret
(bad)
jmp
dec
pop
mov
mov
iret
in
add
lods
xchg
ror
jmp
jge
ret
inc
jno
ja
clc
push
jmp
test
xor
mov
or
scas
sbb
cwde
repnz
in
xchg
push
mov
dec
xor
jge
bound
jl
sub
lock
fabs
pop
lahf
cmc
push
mov
movs
inc
data16
and
push
push
dec
cmp
aas
push
out
mov
inc
xchg
xor
jae
sub
lock
test
add
push
test
mov
neg
ror
sub
xsaveopt
jae
dec
cdq
add
jl
cs
pushf
lahf
fdivr
rcr
sub
cdq
out
xchg
dec
lahf
inc
cmp
push
push
xchg
adc
push
mov
and
mov
fnstenv
inc
sub
mov
xchg
arpl
enter
cwde
add
js
lock
cmp
or
or
jno
out
ret
jo
pushf
adc
add
addr16
imul
push
push
movs
imul
ds
xchg
jp
dec
popf
pop
mov
jb
in
shr
scas
dec
mov
in
loop
fwait
scas
pop
outs
out
ror
xlat
pop
adc
mov
push
stos
repnz
pop
rcr
in
dec
adc
mov
dec
dec
cli
pop
(bad)
mov
adc
fidivr
repz
push
jmp
mov
jmp
cmps
pop
leave
or
out
in
fsub
mov
pusha
inc
lock
imul
scas
mov
test
std
mov
xchg
je
lds
cli
push
jl
scas
dec
mov
pop
sub
xchg
(bad)
jb
push
pop
cmp
gs
test
into
fwait
or
sub
ror
dec
leave
mov
add
popf
or
adc
fldcw
pop
and
inc
ins
(bad)
pop
sbb
mov
dec
js
into
retf
mov
cdq
jg
imul
adc
xor
(bad)
rcr
mov
rcr
jno
nop
imul
movs
inc
pusha
add
sbb
push
jg
data16
sbb
mov
fstp
aam
mul
dec
mov
xchg
xor
lds
leave
adc
pusha
add
jne
cdq
movs
aad
push
mov
sbb
(bad)
sub
adc
pop
and
stc
push
sub
cli
arpl
and
test
fisttp
imul
or
shr
push
and
cmps
push
shr
xor
mov
mov
adc
and
xor
int
sbb
xor
les
(bad)
or
adc
movs
div
imul
outs
mov
rol
nop
xchg
cld
cmps
stos
int3
add
loop
push
call
and
mov
call
jl
addr16
dec
cmp
pop
xor
mov
dec
stos
dec
ficomp
sub
cmp
or
pop
push
scas
jbe
mov
mov
sbb
inc
pop
inc
or
into
jo
jecxz
pop
xchg
sub
lods
out
aam
mov
cmovo
mov
rcl
push
sbb
jns
push
pushf
jo
xchg
cmp
pop
jp
mov
aam
push
mov
adc
lock
add
mov
sbb
into
xor
dec
push
cmps
mov
shl
sahf
and
in
or
retf
adc
xor
fistp
mov
loope
jae
sbb
jno
aas
mov
shr
enter
inc
xor
mov
sub
inc
out
push
mov
popa
xchg
or
jl
(bad)
mov
adc
pop
leave
push
mov
push
cmp
sbb
xor
in
pop
cmp
pop
jmp
pop
jmp
push
jmp
repnz
aaa
inc
lock
dec
pop
jmp
lods
mov
lods
xchg
mov
aaa
stos
mov
or
or
sub
add
xchg
add
add
stos
adc
(bad)
cmps
xor
lahf
fwait
xlat
in
cmp
(bad)
push
adc
les
cli
fsub
mov
les
sbb
mov
cmc
lahf
mov
xchg
dec
aad
push
addr16
cs
outs
je
inc
pop
test
push
pusha
rcr
xor
sub
mov
gs
mov
add
repnz
sbb
sti
fst
pop
mov
sub
pop
sbb
sbb
sbb
iret
pop
leave
sub
push
dec
sbb
leave
cmp
xchg
inc
(bad)
jge
dec
mov
push
inc
shr
ficomp
cmp
(bad)
jae
push
push
cmp
outs
mov
dec
(bad)
stos
cmps
(bad)
or
pop
addr16
sbb
and
dec
sbb
mov
or
into
stc
inc
imul
inc
xor
(bad)
into
push
mov
cmc
sub
mov
jnp
(bad)
cwde
mov
xchg
dec
jne
repnz
jle
stc
jbe
mov
sub
sbb
xor
mov
shr
adc
pop
or
xor
sbb
sbb
mov
inc
(bad)
out
outs
push
fisttp
adc
dec
aaa
ja
pop
loop
mov
cmps
xchg
pop
dec
push
mov
push
mov
push
inc
pop
xor
dec
in
sub
xor
adc
addr16
push
jb
cwde
or
xor
cdq
ret
out
imul
dec
pop
pushf
std
add
xchg
jb
adc
xor
jb
ss
add
psubusw
xor
mov
sbb
dec
fistp
mov
jg
outs
add
popa
sub
daa
xchg
mov
ret
sbb
loope
xor
gs
inc
scas
jbe
loopne
inc
cmp
push
cmp
dec
mov
pop
sub
pop
scas
mul
push
or
retf
cmp
cmc
in
das
out
pop
out
push
jmp
retf
test
pop
fisub
xchg
xor
inc
jae
pusha
cmp
dec
lds
(bad)
mov
loop
out
mov
adc
cdq
sbb
mov
aam
leave
inc
cwde
sahf
and
fistp
repnz
cli
pop
or
jbe
movs
push
push
ja
jae
dec
add
and
and
sbb
push
and
imul
call
(bad)
xlat
inc
add
push
push
popf
loope
pop
sub
xchg
mov
mov
stos
pop
jnp
int
stos
dec
cmp
jmp
call
ror
sahf
loope
ja
scas
test
cmp
push
jno
scas
shl
shl
add
add
ret
aam
pop
mov
xor
push
mov
jmp
and
nop
aam
xchg
sahf
inc
pop
test
(bad)
sbb
push
push
(bad)
clc
dec
sub
cmp
mov
sti
sbb
sbb
nop
hlt
jmp
scas
scas
push
test
retf
xchg
int
lea
mov
ret
jp
mov
jno
jb
jg
ror
adc
(bad)
jmp
nop
in
iret
jg
jl
sub
imul
mov
push
pop
(bad)
or
mov
js
sub
jmp
shl
loopne
adc
push
push
retf
popa
xor
cmp
cmp
add
mov
jecxz
push
jp
loope
add
pop
push
out
mov
jmp
mov
(bad)
arpl
test
in
enter
push
sbb
inc
sub
sbb
popf
movs
popa
addr16
loopne
lods
and
out
add
fidiv
or
stc
cld
leave
imul
cmps
add
popa
push
and
ja
mov
aad
rol
push
inc
adc
mov
fld
mov
and
ja
pop
pop
js
ds
pop
dec
pop
cwde
dec
out
mov
xlat
sbb
or
fcmovu
inc
xlat
mov
aam
push
add
mov
rcr
pop
les
jmp
jp
cmp
add
dec
pop
pop
pop
cmp
mov
inc
or
mov
(bad)
adc
test
pop
mov
mov
inc
mov
mov
fdiv
mov
retf
cmp
cmc
ret
addr16
push
mov
movs
fsub
movs
push
cli
xchg
gs
mov
cmc
adc
xor
mov
jecxz
sbb
xchg
dec
jo
mov
push
test
sti
inc
mov
mov
mov
mov
sub
addr16
fld
es
ins
cld
jb
mov
cmp
push
into
sub
int3
xchg
pop
mov
mov
fdiv
and
icebp
gs
rol
pop
jnp
sub
sub
movs
mov
rcr
lds
retf
or
and
jp
out
cmp
jae
(bad)
push
lods
jno
sub
sbb
movs
xchg
lock
push
sub
shr
repnz
pop
xor
aam
pavgb
xchg
and
jg
dec
inc
neg
push
dec
cmp
jno
mov
jno
pop
pop
push
(bad)
pop
in
and
mov
xor
xor
inc
div
inc
push
je
jno
aam
push
int
lahf
mov
rcr
ret
out
sti
pop
jmp
(bad)
aad
enter
adc
in
fldcw
mov
sub
mov
loopne
cmp
nop
add
xlat
mov
and
pushf
ror
jae
loope
out
int
popf
ins
bound
lock
out
(bad)
movs
je
pop
(bad)
pop
cmp
mov
les
mov
mov
ror
jecxz
sbb
jne
jne
in
mov
pause
call
cmp
add
or
xor
outs
dec
dec
in
in
cmp
ror
adc
out
sbb
sahf
mov
mov
call
nop
ins
pusha
retf
jmp
retf
and
xchg
sub
sub
dec
push
mov
add
and
dec
sahf
pop
or
xchg
repz
sbb
or
or
jmp
inc
mov
cwde
fnsave
pop
inc
or
fimul
push
pusha
push
sub
repz
repnz
std
mov
scas
lods
mov
mov
pop
dec
sbb
stos
cld
movs
lock
nop
or
dec
jmp
add
mov
imul
inc
jae
popa
ds
add
jmp
pop
test
in
mov
test
xlat
mov
(bad)
cmps
mov
jb
and
mov
iret
xchg
mov
sbb
and
dec
xchg
fadd
mov
es
es
fisubr
adc
scas
mov
mov
cmp
add
retf
fs
cs
jae
loope
sahf
xor
and
add
or
sub
movs
and
or
rcr
(bad)
(bad)
arpl
fsub
cmps
jl
pop
jo
or
push
inc
nop
pop
add
jno
out
test
mov
aas
push
std
pop
(bad)
aad
mov
pop
mov
ja
mov
mov
call
and
scas
std
cmp
push
sub
add
aad
sbb
out
popf
fsubr
and
inc
aas
call
dec
das
cld
adc
xchg
ja
iret
adc
adc
cs
dec
and
test
lock
in
call
cld
retf
bswap
sbb
stc
jae
mov
stos
ret
stc
or
or
or
pop
xchg
push
xchg
pop
pop
mov
mov
idiv
pop
gs
int
jno
lods
aam
push
push
inc
int3
jb
or
ins
push
dec
jg
inc
scas
pop
iret
xor
test
jne
xor
mov
stos
shl
pop
sub
ja
mov
mov
xor
add
pop
xchg
ret
cmp
and
mov
loop
xchg
outs
push
sbb
cli
(bad)
cmps
inc
retf
and
mov
mov
out
das
or
dec
or
fist
cmp
or
xor
adc
leave
(bad)
inc
ds
cdq
sub
sbb
addr16
mov
hlt
rol
push
imul
pop
(bad)
xchg
and
sbb
pop
movs
outs
and
aam
movs
pop
mov
in
icebp
lock
pop
add
js
mov
and
mov
mov
repnz
dec
sbb
push
push
movs
mov
movzx
xchg
ja
in
mov
movs
add
xor
out
(bad)
sub
sbb
adc
mov
mov
xlat
inc
fnstcw
inc
sahf
in
and
xor
push
ss
jl
out
retf
inc
jp
pop
or
xchg
xchg
stc
push
outs
cli
jmp
scas
or
cmp
(bad)
pusha
scas
inc
sbb
jecxz
stos
mov
arpl
fsincos
sbb
xchg
jno
outs
fsub
out
hlt
loope
add
shr
and
xor
dec
jne
mov
rcr
mov
imul
sbb
jno
adc
scas
in
leave
setg
cmp
or
push
not
cmp
xchg
jge
cdq
push
inc
adc
aas
ds
mov
arpl
xor
(bad)
xor
push
xor
daa
jmp
cmp
into
pop
popf
jae
xor
dec
push
adc
arpl
and
sub
cmp
lahf
or
fiadd
jae
jl
rcr
jo
sub
js
sbb
xor
lock
test
fldenv
in
(bad)
mov
imul
es
mov
pop
in
jnp
add
push
or
int
sbb
sub
xchg
retf
or
pop
add
push
xor
retf
pop
cwde
test
cmp
int
cli
popf
hlt
pop
repnz
test
jno
pop
sbb
sub
sbb
mov
dec
fbstp
mov
xchg
movs
(bad)
clc
jecxz
xchg
mov
outs
mov
xchg
test
or
enter
pop
adc
(bad)
call
ins
and
popa
xchg
in
fistp
cmps
push
adc
sbb
sbb
or
jle
adc
inc
test
cmp
pop
inc
dec
pop
inc
jnp
push
dec
movs
les
dec
adc
sbb
lods
cmp
std
jge
fsubr
dec
loope
fst
sahf
inc
rol
cmp
rcl
pop
int
mov
fistp
call
scas
cli
popa
inc
push
jg
in
sub
jmp
add
sbb
sub
popa
and
daa
xor
bound
xchg
sahf
data16
inc
and
jns
or
sbb
mov
in
or
(bad)
inc
mov
xchg
stos
addr16
ret
(bad)
fild
pop
sub
loopne
xchg
out
pop
jmp
adc
pop
aam
(bad)
hlt
mov
shr
gs
sbb
mov
push
cld
dec
test
retf
sbb
sub
into
sbb
and
add
xor
sub
mov
std
popf
cmps
push
xchg
xchg
inc
arpl
pop
ror
xchg
rsqrtps
mov
btc
jg
mov
lahf
jmp
add
inc
push
lods
or
jno
pop
adc
push
retf
xchg
(bad)
imul
push
pop
test
dec
xor
sbb
xchg
cld
bound
inc
adc
xlat
retf
pop
sub
xchg
aas
aam
add
cmc
fistp
int
xchg
bound
iret
mov
icebp
pushf
push
xor
pop
sub
xchg
dec
mov
pusha
jae
or
pop
push
rol
hlt
outs
push
xchg
mov
mov
lods
add
mov
cmp
lock
dec
ret
mov
and
es
inc
lods
shl
call
mov
add
mov
mov
sar
cmp
inc
outs
addr16
cmps
cmp
ins
scas
sahf
mov
mov
and
out
int
mov
pop
fild
pushf
js
sub
mov
inc
and
out
pushf
sti
cdq
je
in
mul
mov
repz
aam
aas
leave
dec
shl
lods
mov
push
mov
xchg
pop
daa
dec
jo
add
ins
call
adc
mov
mov
mov
mov
sbb
call
mov
jecxz
xchg
dec
and
xchg
add
mov
mov
mov
jbe
jmp
xor
inc
mov
inc
inc
ins
mov
cmp
mov
adc
pop
jp
pop
cwde
jmp
movs
pop
in
lea
loopne
push
lods
sahf
je
xchg
dec
add
cmp
xchg
push
sub
in
fwait
or
jne
std
pop
and
fdivr
mov
sub
jge
sub
icebp
lods
pop
dec
call
sub
mov
cmp
icebp
pusha
scas
mov
sti
dec
and
je
adc
add
adc
icebp
ror
shl
ffree
in
outs
xchg
lods
cmps
sahf
push
mov
out
mov
or
addr16
jmp
mov
push
pop
test
stos
retf
inc
mov
or
dec
pop
sub
nop
xor
int
test
add
pop
in
out
cmps
push
cs
pop
and
pop
ja
mov
ins
movs
cmp
ins
sub
cwde
test
into
mov
pop
in
retf
adc
dec
test
and
xchg
inc
dec
lea
scas
shl
div
aas
cmp
jl
pop
dec
add
inc
jno
xor
stos
mov
shl
out
ret
xchg
sbb
div
bt
pop
cdq
mov
imul
sar
das
xchg
cdq
xchg
mov
loopne
repz
out
sti
or
and
clc
ins
push
pop
(bad)
xchg
cli
pop
clc
(bad)
and
xor
mov
(bad)
sti
stos
mov
xchg
sbb
and
dec
scas
jns
push
or
xor
xchg
movs
cdq
jmp
clc
sbb
xor
push
hlt
fst
jae
scas
add
mov
outs
xchg
mov
add
das
pop
mov
or
sub
lock
lds
stos
mov
ja
mov
int
movs
adc
mov
xchg
or
jle
js
xor
arpl
dec
leave
sub
pusha
mov
pop
ret
sub
ror
and
imul
repnz
fwait
ss
sbb
rcl
add
int
xor
inc
xor
popf
xchg
xor
(bad)
cmp
out
out
test
jecxz
je
ja
dec
das
outs
sub
fcom
movs
mov
jp
cmc
cmp
dec
inc
ds
sub
lock
ins
(bad)
and
inc
xchg
mov
into
sbb
sbb
je
or
scas
lock
icebp
daa
or
mov
fwait
aas
xchg
jns
or
and
mov
ja
dec
push
mov
lods
fisttp
mov
ret
adc
neg
mov
jb
mov
rol
jns
aam
mov
fisub
xchg
add
enter
or
jl
cli
das
lea
iret
push
int
mov
pop
add
les
fwait
sbb
jp
(bad)
lock
imul
cld
xor
xchg
mov
mov
out
ins
imul
cmp
lahf
call
push
add
iret
push
aas
jo
into
inc
shr
push
push
jne
mov
in
imul
mov
push
adc
imul
add
mov
clc
daa
fld
inc
inc
ds
and
iret
inc
xchg
and
hlt
jecxz
mov
sub
adc
(bad)
sbb
nop
dec
sbb
daa
les
pop
enter
and
and
fst
popa
jmp
push
fdivrp
in
out
call
clc
test
or
ret
mov
jns
and
mov
cmc
mov
adc
jae
adc
sub
push
sub
pop
cs
cld
aad
pop
or
es
adc
in
stos
xchg
in
or
xor
xchg
sub
pop
cmc
loope
clc
mov
in
popf
ds
mov
xor
imul
adc
ja
sub
jmp
adc
fisub
(bad)
cmc
mov
pop
pusha
outs
dec
scas
popf
test
sbb
into
mov
cli
jmp
lods
mov
or
inc
push
dec
sub
lods
jl
pop
pusha
mov
mov
lods
repnz
loop
ins
aas
sbb
mov
pusha
icebp
lods
add
outs
mul
push
fist
push
jecxz
nop
sahf
adc
ret
movs
xchg
aaa
mov
cli
pop
inc
imul
add
pop
popa
fstp
sbb
call
(bad)
jle
enter
inc
jmp
mov
dec
lock
(bad)
hlt
or
mov
sbb
xchg
in
sahf
mov
in
inc
mov
mov
mov
xor
dec
sti
pushf
(bad)
sub
(bad)
xchg
loopne
dec
aas
cmps
into
movs
dec
aad
test
cmp
bound
idiv
and
call
lea
scas
test
cli
and
jne
or
pop
out
bound
dec
int
xor
ins
dec
lods
test
repz
jo
rdtsc
inc
or
shl
out
xor
inc
cs
pop
or
ret
mov
mov
inc
(bad)
cs
mov
pop
or
jecxz
inc
cmp
shl
aaa
cmp
adc
mov
fidiv
inc
jl
add
mov
int3
and
ror
outs
jge
das
and
sbb
cmp
pop
inc
ficom
ins
ins
adc
mov
rol
cmps
(bad)
mov
sahf
in
xor
inc
push
mov
inc
xor
jmp
sub
dec
(bad)
dec
or
rcl
push
mov
cmps
dec
pop
mov
iret
shr
scas
mov
and
mov
adc
add
hlt
adc
dec
jg
pop
cmps
inc
mov
push
jbe
mov
xor
mov
cmps
sub
fsubr
dec
sub
aaa
sbb
and
and
cmp
mov
mov
xchg
pop
push
stos
daa
jae
inc
sahf
stos
lahf
ss
xlat
xchg
enter
pop
movs
mov
inc
std
push
xor
and
gs
stc
clc
aam
jge
jns
dec
out
cwde
and
push
ret
lods
js
shl
dec
xor
clc
lods
sbb
aaa
lea
out
lods
add
sub
lods
pusha
push
and
mov
or
adc
mov
adc
out
call
push
dec
cmp
xor
idiv
retf
mov
imul
mov
and
jg
pop
fdivr
xchg
dec
xchg
mov
xchg
pusha
fld
fxam
(bad)
lea
dec
popa
(bad)
jbe
faddp
xor
test
mov
shr
mov
dec
mov
mov
jne
pop
jmp
jmp
scas
pop
or
push
sub
adc
dec
cmp
sub
ja
push
jno
imul
mov
inc
push
push
cmp
jb
or
dec
rcr
stos
fisttp
aam
dec
jno
test
jecxz
es
jecxz
lahf
outs
lds
pop
ins
popf
push
sub
fiadd
enter
in
pusha
retf
xchg
cmps
jmp
pushf
xchg
dec
pusha
add
imul
sub
inc
enter
adc
jo
mov
push
and
movs
icebp
int
jle
icebp
or
loope
loop
jne
cmp
nop
pop
scas
pop
cmp
stos
shr
mov
iret
sbb
mov
lea
(bad)
jl
stos
mov
in
cmp
out
sub
push
sub
stc
ins
inc
xlat
in
dec
sbb
add
cwde
std
push
jmp
xor
xchg
push
push
stos
mov
not
ds
fist
or
mov
neg
fnstsw
jg
ficom
outs
mov
lahf
retf
sbb
mov
push
jnp
jmp
imul
inc
xchg
sub
rol
push
loop
cmc
adc
mul
out
call
jge
cmp
jle
inc
aaa
test
lods
jp
retf
imul
mov
xlat
mov
and
cmp
sub
inc
mov
stos
dec
cmps
fwait
cwde
stos
and
or
addr16
imul
pop
call
xchg
push
or
mov
jmp
jle
pop
cmp
pushf
sub
stos
inc
jecxz
fmulp
mov
sub
mov
shl
in
call
jns
dec
and
mov
mov
or
pushfw
cmp
inc
mov
or
cdq
(bad)
and
pop
add
cs
jne
test
mov
xlat
mov
enter
xchg
add
mov
push
pop
iret
arpl
push
jnp
xor
jno
sbb
(bad)
call
jmp
jp
xchg
add
ret
inc
das
les
or
mov
mov
leave
sub
inc
adc
push
push
pop
imul
cmp
pop
loope
das
out
xor
cld
cmp
push
sbb
or
popf
or
mov
pop
mov
out
psubusb
mov
int3
or
jge
pop
int3
or
pop
adc
and
sub
ror
inc
jecxz
cmps
test
push
push
xor
cdq
call
sub
cwde
and
ins
inc
sbb
repnz
pop
clc
push
push
sbb
jp
mov
sub
int
aam
pop
mov
and
int
xchg
sbb
loop
cmc
inc
sbb
scas
dec
xor
retf
cmc
dec
xor
sahf
mov
(bad)
(bad)
clc
xchg
add
inc
iret
xor
test
(bad)
fnsave
mov
stos
ret
push
or
or
sub
jmp
out
sahf
sbb
test
jbe
rcr
mov
mov
dec
adc
cld
xor
stos
and
sub
les
xchg
mov
or
aas
jnp
mov
sar
fnop
xor
mov
call
scas
inc
or
or
mov
xor
cmps
and
popf
adc
xchg
xchg
and
sub
enter
mov
lahf
(bad)
es
stos
push
cmp
aad
pop
out
mov
mov
push
cld
aad
mov
daa
das
cdq
inc
sub
adc
xor
mov
push
js
mov
in
adc
and
aaa
dec
(bad)
fstp
ds
sub
xchg
jmp
icebp
xor
scas
not
sar
repnz
sub
clc
jmp
inc
push
push
pop
ins
cs
popa
mov
lds
add
inc
push
jecxz
addr16
sub
out
mov
mov
mov
cs
pop
inc
pop
lods
sub
mov
push
mov
mov
xchg
aad
movs
shl
je
mov
sub
fst
pop
jae
into
cmp
gs
xchg
arpl
in
fisttp
aam
fistp
sbb
jle
(bad)
sub
cmp
add
ret
xchg
popa
icebp
pusha
test
xchg
cwde
scas
sbb
fwait
icebp
mov
icebp
xor
in
adc
push
mov
cs
ret
lea
repnz
sub
arpl
aas
lods
jae
mov
test
push
xor
scas
pop
mov
imul
pop
cld
sbb
stos
movs
push
xlat
mov
fnsave
mov
out
adc
inc
fcmovu
mov
jo
xchg
jne
mov
dec
cmp
mov
cmp
sub
inc
push
les
pop
out
and
add
(bad)
ds
or
push
and
movs
sbb
jb
xor
pop
(bad)
bound
push
stc
arpl
imul
sbb
fs
sbb
cmc
pushf
jno
dec
dec
push
pop
pop
or
and
push
sbb
adc
cwde
test
inc
mov
fiadd
lods
mov
icebp
add
dec
(bad)
bound
retf
arpl
in
cs
jne
add
das
dec
or
loope
pop
mov
(bad)
cmp
pop
popa
pusha
clc
sub
mov
sub
dec
out
pop
in
jmp
loope
mov
fld
or
leave
and
mov
pop
fisub
in
xchg
pop
in
adc
shr
cmp
in
jle
dec
adc
(bad)
and
test
es
js
dec
addr16
jno
dec
xor
xchg
jp
dec
neg
jmp
xchg
fild
enter
pusha
sbb
cmp
lds
jnp
das
inc
xor
sbb
fstp
jl
dec
or
lock
sub
movs
ficomp
retf
or
jns
adc
sub
xor
loopne
fisubr
frstor
jmp
pusha
cdq
cmps
pop
xlat
jmp
push
inc
lock
push
(bad)
jge
(bad)
push
pop
mov
xor
jo
imul
movs
pop
inc
loope
push
(bad)
mov
pop
and
jecxz
mov
cmp
stos
fnsave
enter
jo
daa
ret
mov
les
dec
xor
push
mov
jmp
push
cdq
out
xor
js
jmp
lock
adc
movs
sbb
push
imul
fwait
jb
clc
fild
cmp
dec
and
das
cdq
inc
subps
xchg
and
sbb
pop
arpl
addr16
inc
or
and
stos
pusha
dec
and
xchg
sti
test
jo
aam
push
lods
and
or
(bad)
in
retf
int
jns
cmp
or
mov
stc
cmc
adc
add
mov
mov
and
pop
and
dec
movs
nop
adc
nop
(bad)
pusha
jmp
mov
mov
adc
mov
mov
mov
push
cs
jno
mov
(bad)
imul
adc
mov
mov
mov
mov
fs
(bad)
add
ja
test
and
mov
inc
movs
cmp
ss
pop
inc
mov
inc
cwde
inc
cmp
sub
xor
movs
loope
imul
(bad)
rcr
push
mov
repz
adc
fs
xor
mov
call
add
mov
div
cmps
jns
(bad)
in
mov
sub
ss
or
sub
fidiv
aas
inc
sbb
jecxz
or
push
cmps
jmp
push
fstp
aas
in
ror
hlt
shr
repz
push
sub
aas
hlt
enter
xor
cmps
ja
or
punpcklbw
aas
int
add
and
scas
ret
(bad)
mov
jg
pop
repz
lea
loopne
dec
mov
fwait
scas
cli
mov
repnz
dec
ror
lods
repz
mov
adc
cli
and
pop
push
xor
mov
dec
movs
pop
xchg
jo
jae
dec
pop
sbb
mov
shl
test
sub
inc
enter
sbb
test
push
pop
inc
mov
ss
cmps
rcr
in
fs
mov
xor
mov
xchg
cld
xchg
imul
inc
adc
aas
stos
xchg
fs
in
pop
in
push
aad
push
outs
xchg
push
mov
push
mov
sub
xchg
ss
cs
cmps
xchg
jno
adc
fs
rcr
sub
jns
inc
loope
sbb
rol
lds
pop
mov
movs
xchg
(bad)
fistp
call
pushf
and
adc
test
arpl
push
call
jo
push
adc
push
inc
or
cdq
sbb
iret
movs
adc
jmp
xchg
or
js
push
xchg
cmp
neg
jle
pop
or
mov
dec
lds
dec
(bad)
xor
inc
push
ins
popf
repnz
loopne
lock
jb
add
push
gs
sub
ror
cmp
pop
or
sar
int3
fwait
jo
mov
cmp
mov
jno
mov
clc
retf
lods
in
pop
jle
cmps
add
data16
push
push
dec
add
mov
ficom
mov
adc
pop
loopne
scas
rcl
call
jnp
lea
daa
mov
mov
xor
jo
std
fsubrp
stc
(bad)
repz
pop
int3
aam
lods
fwait
jbe
cmp
add
push
jnp
sub
js
js
mov
inc
pop
outs
and
(bad)
cmp
xor
(bad)
(bad)
dec
sbb
adc
push
(bad)
dec
or
stos
jge
cmp
pop
(bad)
mov
mov
retf
les
cmp
movs
shl
es
sub
ror
sbb
xchg
(bad)
jb
hlt
ins
(bad)
xor
fsubr
loopne
fist
lds
xor
mov
fldcw
adc
cld
(bad)
call
iret
(bad)
xchg
ss
repz
inc
sbb
sub
pop
imul
sub
scas
inc
mov
sbb
fs
adc
xor
(bad)
call
sbb
arpl
inc
push
fidivr
pop
push
xor
sahf
sti
add
xchg
cmp
xchg
jbe
ds
mov
mov
aam
hlt
shl
xor
sbb
push
xor
ds
and
mov
iret
cmc
add
jecxz
pop
jmp
inc
mov
outs
xchg
nop
ins
mov
pop
fsub
cmp
rcr
aam
and
or
jl
jle
sbb
cs
hlt
mov
(bad)
or
sti
xor
dec
or
inc
push
dec
or
(bad)
(bad)
int
xor
and
call
pop
sub
outs
add
mov
adc
sbb
scas
sbb
es
mov
lahf
push
shl
repnz
fidiv
mov
dec
bound
das
dec
in
ins
sub
inc
js
lea
add
push
cli
retf
jmp
inc
test
push
pop
retf
aad
repnz
stos
and
stos
mov
sub
movs
aaa
pop
scas
push
pop
xchg
lock
add
push
fst
aas
adc
std
imul
inc
ret
nop
mov
sub
in
in
jno
push
jno
shl
stc
or
jge
das
and
stos
xor
and
repnz
sub
push
inc
mov
cwde
test
inc
jno
sub
lods
sahf
js
fsubr
jne
mov
dec
sub
out
inc
daa
xor
out
ins
mov
fadd
mov
mov
mov
rcl
jge
es
mov
lods
sub
push
xchg
mov
jo
in
cmps
js
add
enter
fs
loop
test
mov
cmp
cmp
ss
sbb
cmp
fiadd
pusha
(bad)
mov
push
in
and
lods
adc
pop
mov
imul
and
cli
sbb
inc
outs
push
sbb
jle
lock
shr
les
add
dec
arpl
lods
adc
ss
adc
test
add
mov
ss
scas
or
lea
pushf
test
pop
inc
mov
addr16
pusha
aad
sbb
jnp
addr16
hlt
xor
add
and
stc
sbb
mov
movs
xor
mov
je
lds
dec
cmp
jl
mov
or
aam
retf
test
cs
repnz
jbe
test
push
call
stc
jo
mov
neg
(bad)
add
or
ror
cmp
inc
dec
and
shr
ds
xchg
in
inc
push
nop
jle
outs
movs
mov
xchg
jno
loop
(bad)
jmp
(bad)
cwde
cmp
nop
stos
repz
ror
mov
fmul
pop
bound
in
adc
push
dec
push
retf
push
inc
jno
cld
int
ror
mov
xlat
in
iret
push
mov
sbb
xchg
add
repnz
dec
mov
cwde
mov
fisttp
stos
out
push
inc
test
sahf
retf
xchg
fwait
jo
daa
in
xor
in
repz
xlat
cmp
dec
leave
lahf
ret
and
adc
push
or
int3
mov
iret
lods
data16
push
mov
dec
xor
shl
sahf
xchg
sbb
js
jmp
(bad)
fimul
call
(bad)
int
jmp
xchg
mov
jmp
fidiv
dec
adc
mov
test
movs
jo
into
pushf
mov
out
inc
jmp
lock
and
test
jnp
sbb
ja
mov
sbb
pusha
push
ret
js
scas
test
popa
test
inc
popa
rcl
cmps
fwait
xlat
addr16
cwde
ja
mov
xor
lahf
mov
lds
test
mov
in
loope
add
ret
mov
or
or
fwait
cli
xor
pop
and
xchg
xchg
es
push
cs
jge
fs
mov
test
loopne
dec
xchg
push
rol
add
aas
movs
(bad)
adc
out
out
pop
mov
loop
mov
rcl
push
xor
lahf
jbe
(bad)
pop
ret
cmp
or
jmp
leave
hlt
pop
lock
mov
stos
mov
xchg
pusha
test
sar
sbb
and
mov
push
(bad)
push
push
inc
and
cwde
xor
loop
pop
icebp
lahf
or
xor
ds
jp
out
sub
(bad)
jmp
pop
cmp
outs
inc
loop
lahf
mov
dec
jb
ror
fdivr
push
je
sub
into
mov
pushf
jae
jle
mov
movs
lods
fidiv
bound
cmp
ins
add
dec
retf
(bad)
or
iret
mov
neg
sbb
(bad)
cmp
outs
pop
iret
enter
leave
mov
xor
cld
ds
jns
xor
or
movs
sbb
dec
std
adc
pop
scas
fcomp
pop
rsqrtps
mov
pushf
add
in
and
jp
js
push
enter
mov
mov
xor
pop
fidivr
(bad)
xchg
jno
repz
xor
in
sub
mov
imul
sbb
loop
xchg
push
fdivr
sub
je
cmp
addr16
fisubr
movs
fidivr
pop
in
adc
popf
loope
mov
pusha
cmp
repnz
repz
adc
mov
dec
dec
cmps
jnp
push
imul
mov
aas
inc
cmps
or
mov
repz
hlt
fstp
add
sbb
push
jl
ss
ja
or
clc
addr16
and
xor
pusha
lods
clc
jae
mov
mov
xchg
or
jg
mov
data16
xchg
out
cmp
jle
je
retf
jl
pop
lods
add
leave
arpl
xor
lods
gs
sbb
and
shr
dec
xchg
jne
jl
(bad)
iret
sub
sub
loope
pop
mov
stc
ror
in
dec
pushf
xchg
loope
test
div
imul
inc
inc
or
int3
aas
stos
es
and
ror
inc
fld
push
dec
out
out
leave
imul
std
mov
xor
cmp
push
scas
call
popa
push
ds
(bad)
xor
fwait
out
sbb
mov
cmp
push
adc
dec
xchg
mov
(bad)
dec
(bad)
fimul
addr16
or
push
add
xchg
jge
xor
sub
mov
mov
jecxz
lds
jno
pushf
cmp
mov
mov
xchg
(bad)
jp
or
out
mov
cwde
xchg
out
lods
shl
or
fadd
sub
fidiv
or
fadd
mov
add
ss
xor
mov
mov
xchg
push
add
xchg
or
jno
push
cld
mov
repz
or
mov
repnz
in
mov
mov
mov
sub
inc
movs
retf
mov
push
mov
xchg
lods
sub
mov
and
lds
or
and
sub
add
mov
xor
adc
and
addr16
inc
aad
ja
mov
and
jo
sub
ficomp
and
push
stos
adc
not
jo
mov
xchg
dec
push
out
jle
xchg
sub
leave
xchg
loope
pop
push
dec
mov
dec
xchg
arpl
inc
cmovns
rcl
sub
fucom
mov
push
xchg
cdq
and
xor
loop
push
mov
add
mov
(bad)
and
xchg
pop
ror
fbstp
rcr
jle
ja
push
inc
out
cmp
or
mov
push
int3
adc
xchg
in
mov
test
sub
je
stc
adc
push
adc
jb
add
lea
inc
mov
jno
lods
in
dec
inc
sub
retf
test
mov
adc
ret
sub
sbb
or
addr16
sbb
inc
cmp
scas
mov
mov
stos
inc
inc
inc
adc
into
push
arpl
mov
sbb
jge
(bad)
pslld
fs
std
leave
mov
inc
jno
std
mov
int
fisubr
fbstp
push
dec
jle
(bad)
jo
mov
bound
sub
ficom
popa
scas
mov
xor
nop
fs
mov
or
stc
leave
lods
cmp
lea
jp
pusha
out
imul
mov
repnz
xchg
mov
mov
sbb
mov
std
shl
push
mov
jnp
gs
jno
and
imul
enter
pusha
in
mov
cmp
jns
cli
sti
jmp
stos
sub
repz
int3
inc
push
mov
and
adc
retf
(bad)
adc
xchg
xchg
jns
cmps
pop
xchg
test
loope
sahf
jb
imul
xchg
inc
es
pop
(bad)
ds
fild
mov
out
jae
popf
inc
bound
sub
outs
pop
icebp
pop
dec
mov
stos
or
sbb
sar
retf
outs
bound
pop
or
bnd
daa
and
(bad)
scas
mov
jecxz
es
cmps
fisttp
ins
push
mul
mov
jae
nop
mov
mov
mov
(bad)
outs
jmp
or
fild
mov
inc
mov
push
jne
xor
jmp
aad
add
xchg
into
shl
dec
push
sbb
fnsave
retf
sti
ins
retf
test
fnsave
(bad)
mov
sub
aad
mov
pop
add
movs
ins
ret
pop
lea
push
inc
push
xor
out
lea
add
pop
xor
mov
outs
test
jae
mov
je
jbe
dec
adc
mov
mov
fwait
sti
aas
adc
lahf
xor
cmp
xchg
call
pushf
pusha
sbb
fdivr
jmp
pusha
iret
ds
rol
(bad)
aaa
mov
adc
cdq
dec
ins
pop
push
dec
ins
xchg
sahf
xchg
mov
mov
dec
retf
pop
mov
xchg
adc
cmp
or
cli
sbb
pop
fld
int
cmp
and
push
jg
addr16
and
add
aad
ds
mov
or
xor
adc
mov
dec
mov
out
pop
jb
sub
lock
jo
int
push
dec
test
fbld
mov
jge
ss
stos
xchg
bound
test
cmp
inc
add
in
mov
out
out
out
mov
pop
ss
cmp
add
int
in
aas
jne
shl
into
mov
mov
dec
ds
lea
pop
pop
jbe
jns
mov
cmp
pop
mov
call
cmp
shl
fsubr
and
jbe
ds
inc
inc
xchg
jl
call
test
fisubr
sub
inc
or
xchg
xor
inc
xchg
dec
das
xor
pop
and
ins
mov
mov
or
fimul
push
rcl
lock
pop
jmp
into
pop
push
(bad)
int
pop
lds
test
mov
dec
mov
sbb
and
jbe
pop
sbb
jp
ret
xor
fnsave
int
pop
adc
js
xchg
pop
(bad)
test
xchg
das
aaa
xor
add
or
or
ins
push
sub
cmp
add
xor
stos
rcr
ins
xor
std
call
addr16
jg
xchg
mov
mov
cmp
movs
std
(bad)
das
(bad)
mov
leave
add
imul
mov
jmp
jmp
xchg
pop
mov
scas
ror
push
repnz
or
dec
push
lods
dec
add
(bad)
fcmovnb
ins
xchg
cmps
fcomp
sbb
(bad)
dec
into
jnp
call
sbb
mov
cli
inc
mov
popa
mov
or
push
xchg
pusha
cmp
sar
mov
cmp
mov
ja
mov
clc
mov
jmp
pop
shl
outs
mov
adc
xchg
mov
scas
mov
push
pop
jno
and
adc
or
mov
mov
adc
mov
(bad)
movs
ret
add
pop
cmps
mov
jo
or
les
sbb
cmps
movs
xchg
arpl
cmp
jo
ret
es
ins
loopne
and
lock
sar
std
fwait
out
movs
clc
inc
fwait
sbb
call
int3
mov
push
ins
pop
and
push
mov
or
sub
stos
mov
loopne
or
mov
(bad)
out
push
push
shl
xchg
pop
out
jge
mov
adc
adc
cwde
xor
ret
mov
sub
sbb
dec
sti
mov
mov
in
(bad)
xor
dec
ffreep
xor
cs
jne
aas
mov
inc
out
popa
popa
clc
sbb
jb
cmp
ss
sahf
ror
xchg
call
mov
or
pop
shr
or
pop
sahf
mov
int
jbe
outs
leave
fst
xor
(bad)
xchg
lds
dec
jg
shl
or
fild
pop
inc
xchg
adc
and
lods
cwde
mov
not
sub
in
inc
fs
inc
(bad)
(bad)
(bad)
adc
adc
cli
aas
cmp
xchg
inc
xchg
or
fcom
fdiv
ss
add
sbb
iret
ins
mov
add
ret
pusha
gs
cdq
test
cdq
pop
mov
pop
sbb
aad
xchg
xchg
ret
mov
fmul
test
mov
out
sub
cli
add
imul
(bad)
outs
(bad)
xor
jne
sahf
popf
adc
xor
add
out
out
jl
dec
jnp
sub
dec
pushf
pop
push
ret
js
jb
inc
test
js
jno
aas
xor
in
push
sub
xor
mov
cmp
pop
das
xor
and
outs
sbb
mov
daa
cmps
imul
pop
mov
adc
mov
mov
mov
ss
xchg
cmp
in
fwait
popf
mov
lods
sub
mov
sbb
inc
or
jecxz
(bad)
xchg
out
ficom
dec
jb
push
or
pop
pop
(bad)
pop
(bad)
xlat
jmp
into
dec
arpl
mov
mov
push
in
imul
jbe
mov
adc
jae
mov
rcr
loop
shl
loop
cdq
push
mov
in
test
xchg
sbb
hlt
adc
cmp
or
jp
loopne
adc
dec
(bad)
retf
loop
leave
xor
bound
leave
popa
movs
jl
sti
clc
imul
push
push
fst
mov
mov
push
pop
ret
outs
dec
dec
jbe
mov
aad
jmp
leave
or
int3
imul
cmp
test
retf
repnz
mov
mov
push
je
adc
jae
and
dec
shl
shl
fwait
(bad)
(bad)
jge
rcr
mov
add
adc
mov
add
jge
inc
inc
out
mov
int3
pop
mov
or
xchg
pop
or
cmp
sbb
and
in
xor
cmp
out
(bad)
cmc
sahf
sti
sub
in
leave
or
(bad)
xchg
ret
jmp
xchg
push
fnstenv
adc
pop
xor
pop
in
stos
push
cmp
lock
jmp
and
push
jne
mov
into
xlat
psllq
cld
dec
leave
lea
fcompp
nop
sub
retf
hlt
fwait
push
lea
fadd
pop
push
inc
jno
xchg
int3
pop
int
sbb
ins
cmp
jl
inc
inc
shl
cmp
jmp
inc
mov
ins
xor
jmp
sub
cli
ins
popa
into
or
mov
ds
int
out
nop
dec
loope
adc
push
sahf
aad
daa
xchg
or
ffreep
add
sbb
test
dec
inc
push
fist
shl
jne
das
and
xor
clc
xchg
push
dec
cmc
sub
mov
jmp
pop
cvtps2pd
cmc
lds
mov
adc
jne
por
adc
mov
popf
int
inc
pushf
and
jae
inc
fs
stos
push
les
test
fwait
not
(bad)
in
inc
lods
scas
inc
xor
outs
je
rcr
dec
call
and
fcomp
lds
inc
and
repnz
pop
outs
mov
push
cmps
out
shr
jo
rcl
mov
mov
or
mov
test
fnsave
stos
shr
(bad)
and
xchg
int
xor
or
ret
jle
xlat
pop
loope
fwait
rol
mov
scas
mov
and
(bad)
cmp
mov
or
js
mov
cld
dec
pop
sub
js
push
pop
pop
push
mov
loop
add
pop
stos
bnd
(bad)
nop
test
imul
clc
and
and
pop
adc
push
jnp
mov
aas
and
mov
gs
adc
loop
xchg
(bad)
jmp
imul
push
movs
fwait
popf
mov
cmp
jg
dec
push
inc
stos
dec
shl
bound
pusha
ins
cmp
dec
pop
ja
mov
jo
sub
sbb
enter
daa
bound
pop
test
psubb
sbb
es
mov
mov
mov
imul
mov
inc
push
std
mov
cli
push
(bad)
repnz
call
push
mov
iret
push
sbb
fnstsw
dec
lea
mov
or
push
in
add
inc
outs
cmp
jns
(bad)
fs
add
add
jle
and
outs
sbb
add
mov
pop
mov
mov
sar
arpl
test
sbb
mov
sub
stos
sub
cmp
cmps
loopne
mov
inc
fisttp
mov
or
sub
popf
xchg
add
ja
dec
mov
sub
push
mov
hlt
rol
dec
fs
add
loopne
in
scas
jae
pop
ds
cmp
pushf
mov
lods
and
lock
mov
inc
mov
ins
je
jnp
aaa
and
mov
fsub
gs
mov
repnz
pusha
retf
jle
adc
fcom
ss
fcmovnb
dec
lods
push
js
mov
or
scas
adc
pop
mov
xchg
(bad)
mov
jno
mov
mov
into
ficom
push
and
xlat
xor
jmp
mov
sub
dec
in
mov
pop
mov
pushf
lods
dec
sbb
mov
ret
dec
cdq
inc
and
adc
xchg
mov
test
cmp
pop
rol
(bad)
out
popf
fadd
inc
mov
inc
pop
icebp
or
retf
and
mov
push
adc
ss
stc
retf
jmp
cmc
loopne
retf
pusha
repz
add
int3
js
imul
cli
xor
mov
or
lea
daa
and
lods
fmul
push
inc
stos
inc
pop
push
jle
iret
in
and
das
xchg
not
and
mov
ds
pushf
les
jl
fsub
mov
and
add
sub
call
push
and
aas
mov
fidiv
pop
(bad)
aam
mov
inc
add
test
stos
sbb
jmp
jl
(bad)
jmp
(bad)
aam
loopne
stos
dec
in
stc
sbb
cmps
pop
div
bnd
aad
and
mov
add
mov
sub
add
or
(bad)
jmp
ins
xlat
retf
adc
sbb
test
fucomi
push
stos
call
(bad)
les
sbb
mov
fdivr
leave
shl
test
cmps
jg
je
add
out
push
cmp
enter
jmp
pushf
sub
pop
lea
dec
ins
inc
aam
aas
sbb
stos
push
fnstsw
adc
or
xor
jns
movs
push
sbb
lahf
repnz
mov
mov
push
mov
pop
xor
cmc
or
pop
idiv
xchg
jmp
jp
dec
ret
sti
ror
jne
jae
adc
lock
jbe
adc
and
cmp
std
dec
push
xchg
loop
inc
mov
sbb
ins
inc
movs
rcl
std
dec
xlat
or
(bad)
lods
mov
xchg
das
mov
and
dec
adc
push
xor
(bad)
mov
mov
jecxz
fcmovb
add
add
aam
(bad)
xor
xchg
lahf
frstor
jae
or
cdq
jb
popf
cld
les
ret
pushf
push
cmp
adc
mov
je
mov
pushf
int
jge
lods
xor
or
xor
pop
aaa
in
push
pop
mov
adc
push
movs
push
movs
imul
xor
outs
xor
xor
push
add
leave
adc
push
pop
ret
test
call
imul
cmc
imul
repnz
into
ret
mov
inc
fidiv
xchg
out
into
jg
mov
push
inc
imul
cmc
mov
sahf
fnstsw
fdivr
push
xor
shl
xchg
mov
ret
add
cmp
out
mov
add
inc
fdiv
iret
xchg
dec
jo
jge
mov
add
or
hlt
sub
aas
cmp
push
jmp
pop
mov
or
jle
push
rcl
into
aaa
add
mov
leave
jnp
sub
(bad)
rcr
add
push
or
xchg
pop
hlt
fbld
jecxz
fsubrp
inc
ret
cmp
sub
outs
push
dec
and
jne
outs
dec
dec
in
or
and
ins
fucom
mov
jmp
fiadd
sub
out
inc
pushf
xchg
jmp
and
call
dec
retf
ja
pop
and
leave
adc
add
(bad)
sub
imul
rol
mov
mov
and
in
addr16
icebp
mov
mov
ins
aaa
pop
loop
push
adc
sbb
fiadd
cmp
jge
stos
test
mov
push
mov
cmp
dec
dec
or
cwde
inc
lods
mov
inc
and
inc
enter
adc
imul
hlt
push
dec
scas
ins
in
and
or
stc
test
fdivr
mov
es
ja
lods
out
fdivr
sar
fwait
jge
imul
in
inc
xchg
sbb
lods
loop
mov
fiadd
mov
xchg
cmp
cdq
jmp
mov
jge
sahf
into
aas
add
mov
fisttp
das
xchg
push
(bad)
aas
js
rol
inc
jae
sbb
or
into
jns
cmp
add
and
xchg
jmp
inc
xor
mov
call
retf
sub
push
xchg
stos
cmc
mov
xchg
pop
xchg
jmp
jl
ds
sbb
test
jbe
ins
out
retf
dec
mov
addr16
imul
mov
hlt
adc
fld
shr
jg
out
call
jnp
sbb
lods
cmps
pop
sti
into
or
and
das
xlat
push
or
es
sbb
sbb
mov
ss
jp
icebp
push
xchg
sub
rol
and
les
lock
out
and
shr
das
lahf
inc
test
and
cwde
dec
jmp
dec
pop
repnz
sahf
jmp
sub
mov
jge
aad
xchg
or
(bad)
stos
add
push
pop
das
jp
int
jmp
add
mov
std
arpl
xchg
stos
xor
add
addr16
jno
outs
out
test
stos
aam
mov
pop
xor
jp
lods
dec
imul
xor
mov
ret
aam
pop
xor
jae
pmulhw
sbb
fst
mov
sbb
or
test
(bad)
xor
lock
cmp
out
aaa
push
rcl
or
pop
jne
mov
ror
cmp
movs
sbb
movs
dec
xor
jmp
popf
test
fcomp
xor
mov
pusha
gs
adc
test
jae
mov
xchg
jl
add
adc
ret
inc
bound
push
add
ins
jge
jecxz
out
mov
neg
das
adc
fcom
addr16
les
popf
xchg
push
inc
dec
sub
xchg
xchg
push
sbb
div
ss
mov
mov
xchg
dec
sub
or
cmp
or
dec
pop
xor
js
push
cli
sbb
mov
mov
and
xchg
cmps
xor
dec
or
mov
enter
sub
adc
das
and
sbb
mov
inc
dec
xor
xlat
(bad)
into
or
(bad)
retf
lds
(bad)
fdiv
push
dec
inc
arpl
lock
and
movs
mov
js
pop
stos
test
repnz
jae
fst
and
aaa
xor
add
pop
scas
xchg
movs
dec
test
dec
xchg
xlat
adc
push
fsubr
mov
cmps
pop
out
push
xchg
ret
jmp
ss
bts
jge
idiv
xchg
mov
pop
(bad)
jle
xlat
pop
mov
pop
pop
mov
es
lods
pop
aaa
fwait
xchg
iret
fld
mov
mov
enter
adc
movs
sbb
jnp
cmc
sbb
inc
outs
shr
sbb
mov
mov
sub
pushf
outs
imul
lea
mov
push
push
jmp
in
clc
lahf
scas
xchg
ficom
leave
pop
and
push
aad
mov
retf
outs
push
push
cmps
push
dec
stos
xlat
aas
push
or
dec
mov
mov
cmp
adc
fldenv
jnp
push
jae
fild
pushfw
test
int3
mov
dec
push
int3
mov
dec
clc
push
cmp
and
jl
jne
inc
arpl
xchg
popf
retf
mov
(bad)
addr16
push
jl
adc
retf
sub
adc
out
cmp
mov
jge
dec
jp
aaa
xor
out
xor
pusha
inc
jp
retf
int3
mov
out
mov
adc
xchg
lock
jmp
and
gs
cld
pop
loopne
(bad)
add
dec
mov
dec
test
jo
pop
fucomip
out
cmp
jp
dec
ficom
call
mov
or
sub
fsubr
add
mov
inc
loop
stc
mov
test
(bad)
adc
jo
int
mov
xor
jmp
imul
xchg
cli
jmp
test
aas
dec
loop
aas
movs
or
inc
adc
jmp
sti
pop
sbb
cmp
pop
adc
pop
inc
jo
lahf
xor
mov
sub
or
pop
add
sbb
icebp
pop
loop
xchg
repnz
dec
jo
mov
pop
jmp
push
mov
test
add
not
mov
in
sbb
popf
ss
push
popa
sub
js
shl
lock
fmulp
push
inc
cs
es
cmp
in
stc
dec
sbb
dec
inc
mov
call
test
out
movs
rcl
sahf
leave
ins
repnz
xchg
fdivr
xchg
scas
push
(bad)
push
into
mov
cmp
mov
cmc
fsub
ins
scas
pop
shl
pop
out
ror
inc
frstor
push
pop
lds
cs
jmp
sbb
pop
dec
sub
call
mov
xchg
je
pop
ins
jae
pop
add
leave
mov
outs
mov
sub
mov
jecxz
mov
in
xor
mov
xor
or
popa
jge
sub
fcom
dec
xchg
jnp
movs
mov
rol
and
jo
cmc
jnp
aam
imul
pop
inc
mul
sbb
pop
cmp
adc
adc
cld
mov
mov
call
rcr
pop
cmp
pushf
push
je
iret
imul
out
xor
jg
sbb
outs
gs
sub
push
loop
mov
retf
sar
push
loop
out
in
ins
adc
and
push
sub
jg
iret
js
div
mov
mov
cmp
xchg
std
pop
cmc
cmp
xchg
js
mov
arpl
out
loope
mov
sub
icebp
repz
mov
outs
xor
pop
les
mov
mov
retf
mov
retf
adc
cmp
(bad)
xchg
outs
sti
shr
xor
pop
sbb
xor
push
mov
mov
or
mov
ret
sub
mov
jo
push
paddusw
push
out
cmp
stc
fwait
cdq
test
scas
xchg
mov
and
cmp
inc
pop
imul
cmps
into
ror
pushf
and
or
retf
shr
mov
inc
loop
adc
cmp
das
ins
lds
mov
push
fld
xlat
xchg
mov
jmp
and
xchg
aas
xchg
rcr
fidiv
add
mov
xchg
fnstcw
mov
inc
xchg
xor
xor
(bad)
jnp
das
(bad)
add
mov
gs
inc
(bad)
mov
adc
data16
cli
cmp
imul
js
xchg
jle
mov
(bad)
sub
ret
pop
pop
sbb
push
popa
cdq
or
pop
push
rcr
jae
or
out
or
neg
loop
fidiv
push
(bad)
mov
mov
jg
nop
jbe
push
jge
dec
cmp
pop
dec
mov
les
push
dec
jp
in
mov
lds
jecxz
fs
retf
ret
or
push
jmp
shr
push
dec
lock
push
js
je
cmp
imul
inc
or
test
or
dec
mov
cmp
push
dec
cmp
fadd
fnstsw
leave
es
xchg
test
inc
fst
adc
pop
imul
pop
push
cmp
stos
xlat
sbb
rol
mov
ror
jnp
scas
xor
dec
addr16
xor
inc
ds
mov
xchg
adc
test
out
and
ret
xor
loop
mov
dec
cwde
rol
xor
push
or
sub
test
jmp
pop
pusha
cmps
aas
inc
sub
and
cmc
or
sbb
and
sub
mov
addr16
ins
lods
ret
jb
jb
mov
push
jmp
push
or
int
scas
gs
add
cmp
icebp
in
lock
jle
sbb
mov
jg
mov
fldln2
popf
cmp
icebp
in
imul
mov
lock
mov
jp
es
or
pushf
mov
push
das
push
push
adc
aad
ret
jle
fs
mov
leave
and
xchg
outs
es
nop
lea
and
jmp
iret
movs
push
test
and
repz
out
sar
jge
jb
sub
popw
movs
xor
stc
xor
xchg
push
inc
jge
and
pop
add
repz
jo
sub
mov
mov
sahf
mov
push
dec
sub
xchg
arpl
inc
popf
jno
sub
mov
xor
dec
arpl
lods
push
aam
cmp
mov
bound
or
add
das
cmp
pop
popa
fs
and
xchg
inc
cmp
test
repz
pop
push
sbb
pop
sub
mov
cmp
pop
pop
inc
stc
sub
inc
adc
pusha
daa
jb
adc
out
outs
inc
int
call
mov
mov
xchg
fwait
xchg
xchg
scas
pop
dec
jle
xor
mov
jmp
pop
mov
std
rcl
ds
mov
mov
(bad)
in
ror
lds
pop
jae
repnz
loope
add
dec
or
push
dec
jmp
pop
pusha
test
test
jp
and
sub
sahf
sbb
iret
adc
ss
push
call
mov
push
jmp
ret
mov
and
jmp
lahf
jmp
dec
xor
pop
pop
cmp
loope
aaa
icebp
imul
call
mov
mov
aad
aas
dec
add
das
adc
mov
js
push
in
aaa
repz
lods
aaa
arpl
lods
xchg
jle
add
sub
loop
sbb
ds
pop
mov
into
cmp
jg
jae
sub
icebp
jmp
test
dec
mov
jbe
jmp
aaa
retf
out
ins
aas
addr16
inc
jbe
xor
jle
xchg
sbb
add
(bad)
les
ficom
adc
ret
lods
(bad)
push
pop
je
push
add
mov
enter
mov
add
ss
cwde
aad
xor
adc
aaa
pop
jb
je
mov
add
retf
popa
sub
stos
je
es
inc
push
sbb
es
jne
and
scas
das
pop
scas
ins
lahf
mov
test
push
sbb
aad
mov
push
loopne
mov
or
in
inc
call
jnp
adc
cmp
xor
add
push
inc
dec
sub
xor
and
retf
jl
inc
daa
lods
jl
mov
adc
sub
push
inc
repz
fistp
ficom
adc
leave
popa
xchg
jae
or
inc
inc
mov
dec
mov
cmp
sub
mov
mov
scas
sar
inc
jecxz
aaa
movs
in
jnp
or
stos
and
out
cwde
hlt
sub
add
xchg
mov
int3
sub
cs
iret
xor
shl
rol
sti
cmps
aas
pop
push
fist
sub
pusha
cmp
mov
mov
mov
inc
sub
(bad)
jge
jbe
mul
iret
push
pop
cmp
mov
xor
(bad)
sbb
push
stc
sbb
repnz
pop
xchg
cld
test
cwde
outs
rcr
adc
not
gs
jmp
sub
inc
jns
inc
dec
ror
cmp
xor
push
leave
js
adc
repz
lods
pop
in
and
aaa
fisttp
leave
jecxz
das
mov
mov
jno
andps
rol
adc
add
sub
pop
shr
sbb
push
adc
mov
inc
and
xchg
push
or
ret
mov
in
mov
je
loope
mov
push
test
loopne
cwde
pop
test
cmp
fdivr
pop
fs
in
dec
fistp
aaa
das
adc
jg
into
fldenv
dec
leave
push
mov
jne
hlt
xchg
outs
xchg
add
sbb
(bad)
(bad)
mov
jge
xchg
add
jl
cli
xchg
retf
les
pop
lahf
lahf
out
lods
mov
aam
jge
inc
mul
lahf
or
test
leave
les
pop
lds
or
lea
ins
jl
out
adc
stos
(bad)
jns
xchg
ret
out
popa
sbb
sbb
ss
pop
(bad)
nop
lds
dec
out
jecxz
pop
push
adc
xchg
lods
cmp
mov
jns
push
ror
xor
aad
stos
mov
sub
inc
lahf
in
shl
push
std
sbb
pop
lock
xchg
ss
dec
jns
push
xchg
pusha
div
adc
aaa
out
lods
xor
push
cmc
xor
mov
inc
xor
rcr
in
pop
mov
add
adc
pop
or
rcr
icebp
jae
inc
and
fidiv
stos
adc
clc
xor
dec
test
xchg
test
cmp
jge
cld
rcl
fisttp
add
std
loope
sar
inc
add
mov
sahf
cmp
xchg
mov
fist
call
bound
sbb
mov
sub
pop
sbb
mov
adc
bound
add
jb
jg
sbb
out
push
ins
or
push
jp
xchg
sub
(bad)
js
in
cmp
movs
jl
lahf
stos
cmp
jge
in
outs
mov
movs
fild
xor
add
mov
push
repnz
jle
sbb
or
aas
std
pop
mov
sbb
jae
mov
int3
sbb
pop
int3
lock
mov
shl
adc
pushf
jb
sbb
cmps
lods
mov
cs
push
scas
mov
sbb
rcr
ds
test
icebp
std
in
inc
push
scas
cs
pusha
cld
dec
cmps
mov
push
nop
jle
lock
(bad)
cli
std
pop
cmp
xchg
repz
push
add
in
fistp
xchg
add
arpl
push
and
jmp
pop
test
or
dec
dec
mov
mov
pop
cld
mov
mov
(bad)
jmp
movs
mov
push
rcl
xor
push
imul
outs
icebp
pop
aas
add
jg
add
mov
sti
cmp
ret
popf
enter
jns
in
in
inc
jb
xor
test
and
ins
push
pushf
xlat
push
xchg
clc
xchg
cld
loop
pop
add
ret
ret
xchg
pop
outs
shl
nop
repz
jp
outs
test
inc
pop
pop
add
das
cmp
add
fsub
sbb
je
call
push
pop
dec
loope
lods
(bad)
push
jb
call
cmovns
push
adc
push
pop
pop
loopne
pusha
sbb
and
mov
addr16
lock
in
pop
jns
xchg
leave
lods
pop
(bad)
mov
movs
test
add
jb
repz
fadd
mov
push
clc
or
dec
mov
les
mov
jmp
pop
pop
out
fldenv
xchg
pop
xchg
aaa
out
(bad)
(bad)
fisttp
pop
pushf
in
mov
mov
jle
xchg
add
mov
sbb
dec
(bad)
jl
dec
dec
inc
loop
stos
repz
mov
mov
jle
das
pushf
push
pop
inc
inc
cmp
adc
dec
loope
adc
fiadd
cmps
jmp
inc
xchg
ss
mov
call
scas
(bad)
ja
push
mov
cs
test
pusha
push
cmps
jp
sub
or
dec
ficom
xor
lahf
sub
adc
adc
cdq
(bad)
jo
inc
dec
lds
cmp
sti
mov
test
jecxz
iret
jge
loope
jno
mov
daa
inc
inc
aaa
inc
std
sbb
popa
push
xchg
in
mov
scas
lea
mov
sub
cmp
inc
movs
dec
cmps
lods
sub
jb
xor
mov
call
sti
fld
xchg
and
ins
lea
fstp
ins
jge
das
inc
rcr
cmp
sbb
scas
mov
daa
dec
xor
jg
cmps
pop
call
push
add
push
inc
push
shl
dec
das
test
cs
xor
frndint
xchg
xor
hlt
sahf
xor
or
outs
movs
and
psrlw
lds
ja
inc
test
or
mov
dec
mov
jle
fs
dec
pop
xchg
xlat
push
jle
inc
jecxz
adc
not
jg
rcr
adc
test
pushf
pop
dec
sub
jmp
or
femms
daa
inc
aam
loop
(bad)
push
out
neg
gs
in
imul
xor
jg
jnp
ss
xchg
int3
popf
and
add
pop
adc
ss
xor
push
lods
out
mov
jno
sbb
fs
test
xchg
movs
sbb
in
add
ins
fcomp
jg
mov
(bad)
push
adc
icebp
mov
retf
add
cs
cli
or
push
jl
add
jp
pop
out
in
dec
push
cmp
xchg
push
fidiv
xchg
int
sub
add
xor
push
cs
fwait
mov
jb
push
xlat
fcom
jno
aad
inc
inc
pushf
ds
jmp
cdq
add
idiv
and
jae
out
and
mov
xor
out
test
scas
pop
inc
lds
and
dec
cmps
in
aas
jne
int
add
xlat
movs
daa
stos
stc
arpl
sbb
shl
fdivr
mov
jbe
jb
inc
push
mov
sti
cli
sbb
pop
mov
jbe
test
mov
fild
jno
inc
jb
neg
xchg
int
mov
jb
xchg
iret
jl
add
pop
push
hlt
aam
adc
(bad)
mov
loopne
cdq
sbb
xchg
or
loop
mov
fstp
inc
test
push
sbb
cmp
call
aaa
jmp
inc
cmp
loopne
xchg
mov
iret
xchg
xor
mov
jecxz
pand
call
fsubr
mov
outs
sub
sar
sbb
jl
push
jge
adc
aas
(bad)
popf
and
xor
aaa
call
pop
in
ror
mov
(bad)
call
sub
ins
rol
dec
xchg
dec
cmps
sbb
shl
retf
inc
cmp
pop
fsubr
pusha
fld
adc
adc
popa
cli
psubusw
popf
fs
sahf
in
dec
lods
inc
push
ret
in
inc
icebp
mov
xchg
int3
cmp
inc
lahf
jb
int
adc
sbb
mov
mov
cmp
popa
cmp
add
pusha
lds
fstp
and
push
push
jb
jbe
lock
mov
or
push
or
and
in
cs
out
test
mov
push
and
iret
pop
ds
inc
push
dec
push
inc
call
shl
cwde
jle
popf
ds
icebp
bound
outs
or
fisttp
ins
adc
sub
xchg
in
dec
mov
pop
leave
imul
xor
aad
and
and
push
mov
imul
sub
call
xchg
repz
das
mov
movs
repz
lods
cmp
test
jp
ss
add
dec
and
int
add
jmp
and
pop
cwde
or
inc
sbb
out
ret
repz
push
mov
push
inc
pop
mov
sbb
(bad)
adc
adc
adc
paddw
data16
dec
(bad)
xchg
mov
test
cmovl
sbb
int
imul
aam
imul
sub
mov
(bad)
mov
cli
jo
pop
jnp
lods
mov
rcl
std
push
daa
retf
rcl
call
ds
mov
pop
jge
lods
aam
imul
dec
rol
loope
popf
call
jl
mov
adc
adc
dec
dec
test
sahf
retf
(bad)
retf
xchg
not
dec
imul
dec
pop
inc
jge
push
shl
ins
fisub
cmp
outs
dec
xor
rcr
jecxz
mov
push
push
cmp
adc
call
lea
xor
ja
pop
bound
and
xchg
cmps
push
outs
pop
pop
or
fist
inc
jl
mov
jnp
sbb
sti
xchg
ins
mov
mov
sahf
xor
pop
xor
sbb
xor
(bad)
dec
mov
xchg
jnp
pop
mov
scas
pop
stos
cmp
mov
and
outs
pop
jl
addr16
aam
int
jg
pop
fnsave
into
jmp
xlat
outs
cs
popa
cmp
je
movntq
out
push
repz
lock
imul
shl
pop
add
jns
mov
fld
imul
popf
cwde
in
add
retf
jmp
leave
push
ficom
mov
push
mov
cmps
push
inc
(bad)
sub
mov
pop
inc
mov
std
into
xchg
iret
mov
sub
sbb
sub
sub
jl
cmps
cmps
inc
shl
enter
cmp
(bad)
call
inc
dec
test
mov
dec
xchg
add
push
adc
sub
fiadd
sub
(bad)
jns
mov
ja
pop
adc
jmp
xor
and
outs
outs
loope
(bad)
mov
or
aam
int
in
cmp
jmp
xlat
cmps
and
pop
loop
retf
xchg
leave
shl
es
std
stc
mov
and
jl
jge
ins
or
test
jg
mov
cld
pop
mov
jo
pop
test
add
dec
push
cmp
stc
xor
inc
mov
jne
mov
jl
rol
loope
xchg
add
xchg
xor
hlt
cmp
jno
fs
mov
dec
in
pop
int
mov
jecxz
cld
lods
mov
sub
dec
out
jne
mov
push
mov
jmp
cs
push
popf
and
inc
ja
fadd
test
ins
sti
or
sbb
push
clc
jmp
jecxz
outs
jg
lods
movs
xchg
inc
cwde
mov
jecxz
push
dec
bound
sbb
cs
or
sbb
mov
pop
addr16
fimul
inc
cmp
out
imul
mov
dec
xor
sbb
xchg
mov
xchg
pop
aaa
push
jmp
in
or
cmp
aaa
jmp
les
push
fidiv
cmp
push
mov
sbb
inc
ret
maskmovq
neg
dec
int
rol
out
adc
(bad)
stos
fs
je
sbb
mov
test
xchg
(bad)
push
inc
xchg
nop
cmp
sub
push
sti
cmp
mov
and
lahf
mov
bound
(bad)
inc
mov
add
scas
bnd
or
sbb
fdiv
cld
mov
adc
jbe
pop
pop
sub
in
cmp
push
cmp
movs
xchg
and
stc
pop
in
imul
je
pop
imul
xchg
cmp
sub
pop
dec
in
xor
push
cmp
test
xchg
mov
in
and
addr16
dec
xchg
inc
lds
fdivr
cmp
push
je
leave
fisttp
jmp
mov
fdivr
cdq
fisub
stos
xor
xchg
call
add
test
sahf
ja
mov
cmp
inc
icebp
js
xchg
cmc
or
mov
dec
mov
cld
pop
les
fadd
cmp
mov
out
xor
jmp
ret
sti
(bad)
iret
jl
mov
and
int
jmp
(bad)
adc
stos
ficomp
push
push
or
(bad)
sub
ficom
test
(bad)
lods
jge
mov
mov
push
(bad)
jmp
fsub
sar
add
ret
and
popa
xchg
scas
sbb
inc
das
adc
adc
imul
fsub
mov
mov
sbb
push
out
(bad)
jmp
ss
jno
xlat
cmp
ror
in
enter
or
shr
push
lock
test
cmp
test
push
xchg
xor
es
shr
rcr
frstor
ret
push
ret
xchg
xor
test
or
out
push
pop
xor
loopne
call
shl
add
mov
and
cmp
aam
jb
sahf
add
stos
fwait
std
call
xchg
test
sbb
(bad)
in
lods
dec
xchg
adc
mov
cli
pop
sub
jl
scas
jmp
adc
add
test
stos
push
sar
out
sbb
pop
adc
push
jp
(bad)
sub
int3
or
inc
pop
in
sub
popa
scas
adc
ficom
into
jne
in
xor
lods
mov
push
cs
or
pop
(bad)
dec
add
adc
and
jbe
stc
jge
into
int
je
lods
adc
push
test
add
dec
mov
pop
(bad)
xchg
sbb
popa
(bad)
cli
test
pusha
stc
(bad)
fisttp
les
dec
sbb
gs
push
push
sub
or
ror
ret
mov
pop
rol
and
int3
mov
xor
xchg
add
enter
cmp
jnp
dec
pop
mov
iret
stos
fadd
gs
jae
or
push
sahf
xlat
ret
pushf
sahf
int3
and
clc
call
sub
jne
das
mov
sub
push
xchg
ret
sub
sbb
fild
iret
pushf
push
pop
mov
mov
shl
or
fs
cmp
add
dec
pop
adc
js
rol
sub
leave
out
mov
jb
push
ss
push
dec
push
add
jns
shl
sub
xchg
inc
dec
stos
fsubr
or
in
add
rol
loope
xor
ins
and
pop
sub
jle
sub
push
xchg
ret
je
jmp
xchg
cmp
movs
dec
and
cdq
xchg
xchg
nop
xor
retf
test
neg
pop
or
sbb
push
shr
sub
retf
sbb
fcom
add
es
cmc
hlt
sbb
sti
jae
test
cdq
inc
aad
sti
mov
rol
mov
add
push
xchg
pop
add
cmp
xchg
and
push
jg
popa
outs
push
fisub
add
or
test
cmp
jns
adc
stos
int3
cmp
jmp
sub
xchg
loopne
(bad)
push
call
or
(bad)
lock
lock
adc
pop
fcmove
or
(bad)
jne
jne
shl
mov
sub
lock
das
pop
shl
(bad)
mov
cmps
out
movs
inc
adc
pop
(bad)
xchg
(bad)
push
test
fstp
pop
or
sub
test
popw
je
or
stos
pop
es
xchg
xor
mov
arpl
add
jae
imul
pop
test
mov
pop
dec
jecxz
mov
sbb
repnz
xchg
mov
xor
pop
mov
mov
mov
rol
retf
xlat
lahf
xchg
pop
outs
xchg
(bad)
sti
shl
pushf
enter
inc
shl
mov
rol
std
sahf
jo
adc
retf
stos
int
out
pop
ror
push
retf
push
cmp
enter
and
cmp
push
mov
and
xchg
xchg
(bad)
shr
loopne
sub
xor
out
cli
push
dec
outs
clc
das
jp
jbe
clc
inc
out
xor
pushf
dec
out
lods
push
ja
arpl
or
retf
push
stc
or
push
jne
mov
in
xchg
sub
aaa
retf
mov
jecxz
jnp
push
jns
call
jge
out
sub
mov
pop
loop
xor
jmp
and
xchg
loope
xchg
push
fldenv
ss
mov
xchg
jl
mov
dec
(bad)
les
ret
xchg
cmp
mov
je
push
je
data16
dec
shl
lock
scas
pop
stos
mov
test
push
push
jmp
jmp
sahf
pusha
xchg
into
out
gs
push
jo
sbb
xchg
imul
xchg
add
mov
xchg
aaa
mov
jae
pop
adc
xchg
imul
arpl
push
cwde
sbb
lea
pop
scas
cmp
sbb
ds
lock
pop
out
push
inc
pop
add
mov
push
cld
xchg
dec
cmp
xchg
arpl
mov
dec
lds
ds
std
push
mov
inc
mov
mov
arpl
mov
add
call
mov
repnz
cld
cdq
rol
push
pop
xchg
enter
xor
out
push
xor
out
xchg
dec
cmp
xchg
add
sar
test
xor
stos
add
mov
les
cmps
repnz
test
inc
stos
or
call
mov
mov
dec
enter
cmps
or
jg
icebp
retf
dec
ret
cmps
add
fistp
pop
addr16
push
add
das
add
repnz
xchg
sahf
inc
sbb
sbb
xchg
and
jle
(bad)
out
sub
push
aad
mov
out
mov
dec
adc
arpl
adc
lahf
xlat
stos
(bad)
sub
pushf
push
mov
pushf
mov
push
int3
pop
adc
aad
pop
sub
adc
outs
cmp
cdq
lods
sub
jae
pop
add
hlt
sub
inc
mov
mov
mov
add
xchg
mov
xor
dec
sbb
sbb
aas
mov
js
icebp
(bad)
icebp
inc
jbe
fisttp
ret
lock
ss
iret
dec
jmp
pop
xor
aad
aaa
and
popa
adc
popa
push
xchg
dec
xor
stc
pop
sbb
jle
pop
mov
xchg
shl
cmp
mov
xor
movs
inc
mov
shl
lds
sub
push
xor
(bad)
int3
jne
add
jle
rcl
xchg
lock
push
lds
cmp
retf
and
(bad)
push
pop
fs
sar
dec
outs
jo
xrelease
movs
mov
pop
add
movs
sub
in
push
push
jp
adc
add
inc
lods
aam
retf
iret
adc
js
sbb
jg
sar
lea
jo
or
dec
jns
sar
inc
loopne
repz
loopne
pop
nop
push
push
hlt
pop
mov
(bad)
pusha
sti
mov
stc
add
and
mov
pop
add
jmp
mov
pop
push
sub
shl
sbb
xlat
sub
or
jecxz
(bad)
xchg
ror
mov
or
xchg
jno
bound
test
in
call
xchg
stos
aad
cmp
inc
sub
inc
shl
xchg
jnp
push
test
sbb
mov
addr16
loope
or
leave
loope
mov
xor
push
and
jmp
aaa
ror
mov
sbb
aaa
lods
adc
adc
imul
fcom
cmp
mov
(bad)
aam
popa
adc
std
mov
or
pop
retf
pop
mov
popf
sahf
ror
pop
push
clc
sbb
ret
test
dec
mov
pminub
jp
cmps
xlat
(bad)
push
fucomp
pop
cmp
ss
cmp
xchg
data16
rcl
inc
jbe
mov
aad
imul
lods
mov
retf
(bad)
int
or
pop
push
add
(bad)
and
fdivr
pop
ror
movs
or
or
stos
das
arpl
sub
stos
aas
push
cs
push
fisubr
movs
retf
jno
enter
fdivp
call
lds
int3
stos
mov
push
ret
test
mov
sub
cmp
or
pop
nop
sub
fwait
push
sub
and
jle
lock
dec
xchg
mov
inc
(bad)
jl
push
repz
sete
fcom
jmp
push
pop
lahf
sbb
mov
ret
jl
push
adc
fldcw
movs
ret
jl
loopne
frstor
mov
iret
cs
cmp
daa
xchg
ret
(bad)
(bad)
fisttp
sbb
push
xchg
mov
fs
inc
mov
xchg
xor
pop
cmp
adc
xor
es
fisttp
and
mov
test
ins
or
dec
adc
inc
bound
sub
push
les
rol
jg
pop
fisub
(bad)
mov
sbb
and
sti
cdq
aas
js
inc
adc
cli
imul
push
ret
cmp
rcr
addr16
movs
outs
outs
stc
cmp
ret
imul
pushf
push
scas
inc
retf
retf
or
mov
fwait
sub
ds
cmps
dec
cmp
sahf
jb
call
fnstcw
rcr
or
ins
fsub
jmp
dec
std
add
jnp
dec
imul
cmp
adc
repz
or
mov
enter
enter
int
pop
jnp
aad
pusha
lods
mov
clc
std
mov
cmp
test
adc
xchg
push
lods
add
imul
sbb
mov
push
sbb
mov
jg
adc
out
movs
div
jo
mov
pop
lods
dec
popf
add
sahf
fst
outs
mov
xlat
mov
and
idiv
je
mov
jle
punpckhwd
xor
or
imul
rol
adc
push
pusha
xchg
cmps
sbb
push
dec
mov
mov
xchg
shl
pop
int
adc
icebp
test
dec
pop
imul
jle
or
loopne
and
push
(bad)
pop
outs
push
or
jno
pop
add
fmul
inc
jb
mov
cmps
daa
inc
cld
popa
jae
dec
push
pop
cwde
xor
cld
pusha
imul
mov
sbb
pop
xlat
jns
dec
jle
jmp
push
jbe
(bad)
test
inc
jle
or
add
sub
cld
dec
dec
jns
and
xchg
popa
add
div
cs
mov
adc
js
push
mov
sub
and
xor
add
mov
sar
std
add
jb
addr16
out
je
mov
adc
add
jbe
xor
test
xchg
(bad)
nop
ret
rcr
lahf
jae
adc
enter
lock
add
std
pop
push
jns
sub
sub
mov
jmp
xchg
div
dec
daa
(bad)
js
pop
test
aam
fsub
or
mov
cli
cmps
jmp
and
jl
scas
inc
and
in
mov
out
mov
pop
pop
sahf
fdivrp
mov
iret
mov
test
loop
bound
addr16
push
cli
mov
cmp
enter
les
repz
js
or
or
xor
in
retf
add
push
ret
pop
mov
fwait
mov
in
ficom
stos
mov
in
ror
arpl
les
scas
int3
jle
sahf
bound
jmp
loope
fbstp
fsub
ja
pop
test
cmps
sbb
test
neg
jl
popa
ja
push
leave
mov
sahf
sub
popf
dec
imul
inc
mov
dec
(bad)
push
je
rol
(bad)
mov
dec
adc
or
retf
sub
test
jg
push
xlat
jno
pop
pop
xchg
xor
fisubr
lahf
push
in
ins
and
xor
and
mov
jbe
outs
mul
jecxz
push
in
test
cmp
jne
mov
and
or
or
xchg
cli
stc
and
movs
pusha
inc
jle
xchg
cs
add
jmp
fs
and
xor
xchg
jb
retf
and
fwait
ss
cmp
xor
out
retf
mov
sbb
mov
push
icebp
mov
jo
sbb
icebp
xchg
pop
stos
inc
bound
sub
retf
pop
inc
pop
es
aad
xchg
push
lds
or
enter
sbb
cmp
pop
adc
test
dec
sub
xor
mov
mov
je
sar
cmps
shl
or
cs
sbb
scas
cmps
loope
pushf
push
aam
cmp
movs
mov
ret
shr
push
dec
fild
pop
xchg
ret
(bad)
xor
daa
(bad)
frstor
lahf
mov
shl
pop
bound
es
xchg
xchg
dec
(bad)
ss
ja
add
rol
sbb
cmc
mov
stc
cmp
pop
sub
mov
gs
cmps
cmc
xor
cmc
jae
mov
int
ret
pop
mov
inc
bound
or
inc
movs
mov
push
js
dec
dec
push
ret
dec
mov
and
pusha
pop
aas
out
in
call
sbb
push
mov
imul
nop
fwait
sub
neg
adc
addr16
(bad)
imul
jle
in
aad
xor
add
mov
push
inc
mov
fcomp
sub
outs
mov
imul
bound
jae
push
dec
outs
jl
add
jnp
loopne
scas
mov
aaa
push
and
mov
inc
dec
lods
pop
les
cdq
cld
add
rcr
dec
ins
loop
jmp
pop
cdq
int3
pop
je
push
mov
neg
xor
inc
mov
ror
or
sub
sar
movs
pop
out
pop
(bad)
jnp
inc
mov
ins
das
mov
sbb
lahf
push
mov
sub
std
pop
test
mov
retf
dec
mov
rcl
xchg
rcl
fadd
xor
outs
jmp
imul
or
jge
pop
bound
out
jl
cdq
jmp
sbb
stos
push
js
popf
popa
jo
sar
mov
repz
nop
aaa
test
mov
inc
ins
int
and
std
lods
dec
scas
(bad)
scas
lods
enter
addr16
or
cmp
aas
pusha
pop
(bad)
xor
lock
rcr
ja
cmp
sbb
ins
mov
test
pop
adc
or
add
push
std
sub
mov
hlt
or
inc
and
in
das
cmps
aam
test
addr16
lods
call
sub
fsub
xchg
vcvttss2si
adc
push
add
jo
jo
xor
daa
arpl
addr16
mov
and
sub
jg
dec
jecxz
push
out
mov
inc
outs
sahf
or
pop
(bad)
or
sub
mov
inc
(bad)
leave
mov
je
out
or
pusha
mov
mov
add
sbb
jb
sub
xchg
dec
fnstenv
cli
xlat
jle
cmp
pop
daa
loop
add
mov
test
cwde
bound
pop
lea
out
aaa
fisubr
and
das
rcl
daa
mov
pop
test
scas
mov
mov
test
cmps
(bad)
jmp
dec
mov
jns
int
push
popf
stos
test
test
mov
push
cmp
popa
lahf
sbb
inc
dec
loope
and
or
mov
push
int
dec
inc
xchg
fcom
mov
push
pusha
or
int
imul
shr
xlat
sar
je
(bad)
(bad)
aaa
add
pop
cmc
in
pushf
push
inc
(bad)
call
jmp
ret
jne
addr16
call
push
push
ss
sbb
ds
fs
aam
push
(bad)
inc
mov
loope
xchg
fs
test
mov
loopne
sbb
pop
ficomp
popf
pop
xchg
fwait
aad
adc
xchg
cwde
fwait
inc
call
push
cmp
jb
jmp
(bad)
pop
in
push
adc
je
jno
sub
jmp
jne
in
dec
je
repnz
mov
xchg
repz
push
fisubr
es
cmp
pop
scas
mov
push
dec
xchg
inc
repnz
in
sub
sbb
xchg
push
mov
push
test
cmp
mov
mov
adc
add
popa
add
mov
out
ja
dec
inc
lock
and
lock
xor
and
xchg
xchg
inc
xchg
in
gs
xchg
mov
mov
cmp
or
xchg
sbb
leave
add
popa
es
xor
adc
dec
dec
hlt
or
cdq
in
in
or
push
dec
rol
mov
int
sub
push
stos
dec
push
test
xchg
mov
sub
dec
sar
and
fmul
pop
jecxz
cmp
dec
cmp
jge
dec
int
push
imul
lahf
mov
outs
adc
jl
std
dec
jno
in
call
dec
mov
inc
inc
adc
lea
xor
cdq
call
jae
cmp
daa
loop
addr16
mov
lods
hlt
shr
(bad)
mov
sub
mov
mov
les
cmp
jge
fisttp
out
push
cwde
push
dec
scas
test
mov
mov
dec
mov
dec
lock
dec
cmp
cld
dec
mov
aas
inc
sti
fcomp
sub
pop
or
scas
add
in
sbb
scas
adc
enter
pop
dec
imul
push
pusha
popf
cmps
test
mov
in
gs
and
mov
mov
aam
movs
pop
inc
pushf
xchg
fs
je
fdiv
pop
icebp
loop
loope
cmp
push
and
adc
push
iret
mov
test
xchg
dec
mov
or
add
fs
pop
sbb
or
push
int3
dec
add
xchg
mov
lods
or
xchg
cs
inc
sub
push
pop
push
loop
inc
nop
and
push
das
sar
push
out
pop
xchg
sbb
ret
xor
loopne
mov
jns
sar
lea
and
pop
xchg
clc
and
jl
cmp
pushf
adc
mov
pop
pop
push
pop
adc
sub
aam
sar
sbb
cmp
ins
and
ins
(bad)
rol
call
stos
lods
repz
adc
mov
stos
xchg
and
or
cmp
popa
dec
push
jae
sub
push
push
(bad)
loopne
lock
inc
jae
xor
inc
inc
push
or
mov
jae
push
inc
inc
cdq
rcr
fsubr
call
jmp
sbb
jecxz
cmp
out
inc
pop
adc
ins
push
adc
or
fadd
fs
sbb
pop
sbb
sti
mov
ins
mov
in
inc
shl
loope
pop
pop
repnz
jns
or
xor
lahf
and
sar
push
xchg
inc
stos
jp
fst
inc
adc
cdq
cwde
jno
ja
cdq
cmp
cmp
add
jle
test
lahf
retf
jg
xchg
sub
movs
or
xor
cmp
inc
inc
fadd
dec
fimul
mov
mov
pop
loope
jbe
mov
(bad)
sti
std
or
add
inc
loop
stc
pop
jb
iret
test
ins
retf
daa
add
cmp
adc
call
jo
or
cs
scas
outs
or
outs
jmp
pop
mov
cmp
inc
(bad)
mov
jg
mov
jp
(bad)
xor
adc
mov
int3
cs
inc
sbb
inc
push
(bad)
jne
aad
mov
test
pop
pop
or
xor
inc
popa
fwait
jb
and
scas
scas
pop
mov
jnp
sbb
es
xor
or
movs
add
dec
inc
outs
jo
movs
test
inc
jg
xchg
xor
mov
xchg
in
adc
(bad)
sub
sub
ds
mov
push
aas
inc
sahf
pushf
cmps
sbb
and
adc
lock
jno
fist
adc
sub
int
cld
sub
scas
pusha
pop
cmp
xchg
aad
leave
xchg
or
(bad)
out
mov
and
cmp
outs
int
inc
push
icebp
stc
jno
daa
mov
repz
adc
cmp
sub
out
shl
test
xor
daa
test
jne
add
fcmovne
clc
fisubr
cmp
mov
shl
cmp
or
inc
fimul
push
pop
mov
cmp
imul
mov
fisubr
push
xor
dec
imul
dec
stos
call
pushf
pop
mov
loopne
enter
std
mov
push
(bad)
jbe
xchg
add
loop
gs
pop
cmp
mov
cmp
loopne
mov
dec
add
add
cmp
addr16
rcl
mov
lock
sbb
fisubr
into
addr16
sahf
and
jp
fild
jge
jo
xor
or
ror
jl
pop
dec
ret
imul
cmps
jnp
or
shl
test
ret
repz
repz
cld
pop
xor
pop
sar
mov
push
inc
inc
mov
adc
or
jmp
push
in
pop
ret
xchg
cs
movs
xlat
and
out
sbb
mov
mov
hlt
je
inc
jl
cmps
leave
retf
xchg
inc
jno
inc
repz
imul
sub
push
sbb
dec
rcl
jl
dec
push
fidivr
xchg
or
inc
clc
dec
pop
cmps
and
add
movs
out
and
sahf
addr16
js
adc
xchg
(bad)
pop
cmp
sbb
cwde
iret
sar
sahf
fild
fdivp
es
mov
sub
dec
rol
out
jmp
sbb
in
ins
add
sbb
xchg
and
jl
cmp
push
xchg
std
jecxz
shl
push
or
outs
int3
xchg
jmp
xor
in
mov
sub
gs
dec
ret
dec
push
aaa
lock
in
enter
push
imul
push
jg
mov
hlt
push
inc
(bad)
(bad)
jae
add
cmc
test
into
inc
mov
cmp
inc
out
and
stc
push
into
push
(bad)
js
jmp
sub
rol
push
push
mov
adc
imul
jmp
push
pop
add
lds
sbb
stc
(bad)
fnstcw
cmp
inc
lds
retf
retf
inc
mov
or
sti
cmp
sar
ja
or
test
push
in
jae
sub
sbb
mov
mov
xor
pop
sbb
(bad)
(bad)
fld
fwait
shr
and
jle
push
push
sub
pop
shl
dec
mov
lahf
fwait
cmc
dec
call
cli
xchg
fwait
jne
or
sbb
cmp
mov
nop
mov
int3
test
sahf
aaa
int3
jge
jl
test
pop
xchg
pop
ss
js
int3
push
fisubr
inc
dec
test
rcl
je
jge
into
pusha
xor
and
xchg
and
mov
add
push
stc
pop
iret
adc
xor
adc
fimul
mov
or
clc
lds
and
push
inc
mov
call
gs
xor
out
jmp
(bad)
jecxz
mov
mov
sbb
pusha
pop
ret
and
add
and
dec
jp
jbe
pop
aas
push
push
mov
rcl
daa
repz
xchg
stc
repnz
ficom
push
retf
pop
or
rcr
jnp
idiv
in
add
push
dec
movs
adc
cmc
jmp
mov
into
xor
cmp
push
ds
sub
sub
ins
jle
les
inc
jae
addr16
sbb
sar
sbb
adc
std
je
or
rcl
mov
div
mov
mov
in
and
push
popa
jle
cmp
mov
push
sbb
je
pop
dec
leave
xor
inc
jno
cld
loopne
cmp
(bad)
jp
pop
lock
and
and
mov
push
loopne
or
aam
in
xchg
push
loop
lea
repnz
mov
popf
pop
scas
add
push
popa
(bad)
pop
js
dec
arpl
cmps
popf
push
or
int3
xlat
push
(bad)
adc
test
push
repnz
aad
lea
or
sub
mov
mov
push
mov
jle
sub
shl
ja
push
fs
loop
shr
aaa
mov
dec
call
lods
repz
xchg
aad
shl
fstp
nop
jns
and
sbb
xchg
adc
std
fwait
add
scas
adc
ins
cmove
movs
test
fistp
aad
ins
push
and
shr
nop
push
jmp
dec
inc
xor
jl
and
loopne
ret
ret
popa
dec
inc
shl
into
mov
mov
xchg
or
mov
cld
test
sar
outs
leave
jb
gs
sub
in
fidivr
and
adc
xor
dec
jg
dec
imul
or
in
pop
mov
(bad)
mov
push
fmul
push
jb
sub
sub
adc
lods
or
cmp
xchg
sub
(bad)
jp
pop
cmp
inc
mov
mov
mov
xor
cmps
mov
fidiv
xchg
dec
shr
pop
mov
adc
outs
std
stos
neg
imul
dec
loop
fs
jb
inc
cmps
mov
shl
repnz
hlt
push
cmp
mov
ror
inc
mov
adc
jo
inc
inc
jp
cmc
mov
inc
xchg
iret
and
dec
bound
push
mov
stos
cmp
jge
out
ins
fsub
mov
fcomp
jne
xchg
sub
bswap
mov
test
push
xchg
mov
in
mov
jmp
xchg
test
dec
jne
mov
mov
inc
push
push
jge
mov
and
adc
and
jbe
add
or
call
enter
jae
cmp
popf
enter
mov
mov
jne
es
cmps
lods
fnstsw
outs
js
sahf
(bad)
jae
test
les
addr16
idiv
jo
push
and
mov
add
ror
jl
mov
or
push
loop
sar
jg
fcmovu
inc
neg
jb
les
push
sbb
test
pop
(bad)
cdq
outs
jne
cmp
adc
push
xor
(bad)
sbb
jbe
dec
stos
mov
push
ret
push
popa
push
and
push
lds
mov
jmp
add
push
add
sub
mov
and
or
rcr
dec
fs
mov
loopne
dec
jns
rol
lods
or
jp
cmp
xchg
scas
push
sub
mov
retf
imul
rcl
rcl
sbb
cmps
mov
test
mov
add
test
shl
dec
cmp
inc
leave
sub
inc
cdq
jbe
loop
or
add
and
add
(bad)
in
sahf
xchg
dec
jb
fldenv
lds
lock
mov
push
cs
xor
pushf
loope
mov
and
je
xchg
mov
mov
jp
test
pop
pop
lods
jmp
rol
pusha
pushf
loopne
mov
(bad)
sub
movs
ficomp
jae
test
std
outs
dec
or
pop
xchg
fs
mov
cmp
xchg
adc
inc
pop
sbb
aam
jecxz
fisttp
or
adc
dec
cmps
movs
aas
test
jl
xchg
outs
cmp
xchg
jno
neg
inc
cmc
outs
xlat
cwde
adc
add
(bad)
fcmovbe
scas
mov
pop
dec
ja
pop
idiv
cli
sbb
mov
add
jo
test
ror
jmp
scas
shl
bound
pop
xor
sub
aad
repz
push
cwde
xchg
xor
mov
mov
pusha
in
and
(bad)
outs
pop
jecxz
(bad)
ss
bound
addr16
add
jmp
sbb
pop
(bad)
cmp
call
data16
dec
cmps
scas
jae
lods
jb
lds
imul
in
je
loopne
and
jns
mov
push
push
loopne
and
mov
vpsadbw
adc
add
pop
xor
inc
cmp
dec
dec
stc
xchg
mov
and
or
and
cmp
jb
(bad)
imul
test
pop
xchg
stos
movs
dec
iret
push
js
inc
mov
lock
or
jae
xchg
fdiv
test
pushf
int3
daa
push
sahf
test
fild
or
xchg
push
add
sbb
mov
sub
inc
push
push
out
sti
push
sbb
fcom
inc
subps
push
das
xor
mov
(bad)
movs
pop
push
add
repz
push
jmp
aaa
int
pop
and
jae
call
gs
clc
or
dec
and
je
inc
jmp
fs
ret
int3
dec
adc
mov
mov
je
das
jns
jno
jae
fadd
hlt
adc
mov
cmc
ds
dec
in
les
xchg
mov
stos
fcmove
(bad)
mov
test
push
punpckhbw
xchg
add
push
les
push
mov
cli
jo
mov
std
jbe
ds
mov
xor
(bad)
inc
inc
aaa
hlt
dec
fwait
xchg
mov
sahf
fnstcw
outs
test
test
sti
xchg
xchg
ret
mov
xlat
mov
mov
pushf
push
pushf
les
fstp
pop
data16
(bad)
push
lock
add
mul
fmul
push
jp
cmp
dec
stos
clc
inc
mov
inc
mov
daa
inc
(bad)
cld
xchg
cdq
gs
jno
outs
adc
and
mov
fist
dec
mov
sub
xor
pop
loop
ins
rcr
outs
or
loope
mov
push
int
pop
pop
enter
mov
push
mov
jmp
add
les
mov
push
and
mov
rol
dec
sub
mov
cmps
ins
fwait
jo
xchg
mov
add
or
outs
scas
clc
pop
mov
cmp
cmp
fstp
add
jno
xchg
sub
inc
in
add
sar
retf
push
popa
out
cs
pop
int3
test
dec
lock
push
xor
xchg
(bad)
jbe
jo
call
cmovs
daa
mov
inc
xchg
out
mov
inc
in
inc
pushf
inc
push
pop
jno
dec
cmp
(bad)
cmp
mov
push
(bad)
jmp
and
(bad)
shl
cmps
and
in
imul
cmps
(bad)
sub
js
popa
pop
in
xor
xor
inc
es
js
and
into
push
repnz
ss
mov
mov
repnz
jae
inc
pop
push
out
lods
outs
inc
add
test
aas
enter
and
popf
sar
inc
iret
lods
in
xchg
call
adc
mov
mov
stos
fnstsw
and
(bad)
add
loop
data16
jns
test
xor
push
jge
das
fbld
push
add
fnsave
lods
mov
pop
pop
mov
ror
jae
stos
or
or
(bad)
repz
gs
or
and
stc
rol
sub
nop
dec
or
and
js
push
jecxz
or
xor
pop
cmp
xor
dec
push
mul
and
jecxz
outs
jbe
add
cmp
mov
icebp
or
push
jle
xor
inc
jae
and
cmp
lds
pop
mov
push
(bad)
jp
and
icebp
push
push
not
jl
lods
bound
mov
push
test
xchg
mov
xchg
leave
xchg
cmp
jmp
add
test
addr16
or
mov
rcl
xor
inc
and
push
mov
dec
inc
add
in
ja
lea
das
pop
fmul
retf
test
mov
adc
repz
mov
inc
mov
cld
or
or
mov
mov
movs
daa
push
inc
adc
xchg
mov
sub
lods
call
pop
sti
pop
scas
ja
sbb
add
fnstenv
clc
xor
and
aam
jns
and
ror
mov
pop
and
rcr
or
int3
lahf
or
adc
push
mov
jl
rcl
scas
sbb
pop
pop
pop
data16
dec
ficomp
ja
push
push
pushf
sbb
cmp
and
arpl
push
aaa
pushf
iret
(bad)
imul
mov
mov
rcl
aas
loopne
call
mov
movs
mov
out
cmc
fwait
add
out
mov
test
arpl
loopne
addr16
(bad)
push
push
std
in
mov
push
add
fwait
dec
pop
jge
add
adc
jo
rdpmc
and
inc
sbb
mov
out
rol
(bad)
and
fiadd
dec
xchg
inc
dec
mov
arpl
movs
stos
out
cs
add
jnp
xchg
push
pop
cmp
test
repz
pop
mov
mov
push
xor
iret
adc
adc
loope
jp
push
dec
sub
push
push
mov
movs
xchg
jle
ins
sar
mov
dec
adc
dec
cs
sub
sub
xlat
or
inc
retf
ins
in
icebp
adc
popf
push
idiv
add
sub
mov
adc
jbe
inc
push
push
xchg
gs
dec
ins
test
leave
adc
test
xor
lock
and
fistp
pop
xor
pop
call
and
mov
and
fwait
mov
mov
or
jo
inc
jle
(bad)
shl
dec
lods
iret
es
jmp
mov
sahf
aas
cmc
or
add
cmc
loope
and
nop
shr
sub
fwait
xchg
xchg
mov
das
cmp
mov
mov
push
adc
stos
add
out
push
mov
test
jmp
xchg
sti
test
cs
cmp
(bad)
(bad)
mov
mov
push
push
sar
xchg
xchg
loope
not
ins
mov
test
xlat
(bad)
icebp
mov
mov
xchg
std
(bad)
mov
dec
(bad)
jg
loope
mov
test
inc
mov
test
test
mov
mov
push
jns
outs
inc
sub
les
mov
lds
ds
add
popf
sbb
jmp
cs
xchg
jl
sub
test
jecxz
lock
pop
dec
add
add
add
pop
xor
dec
repnz
aad
(bad)
(bad)
push
pop
pop
or
ins
dec
inc
imul
inc
or
mov
test
sbb
leave
and
mov
lahf
mov
js
mov
cmp
xor
xchg
scas
cli
sbb
push
or
(bad)
sar
xchg
out
sbb
pop
xor
cld
pop
cmp
inc
test
jmp
sub
in
jbe
aam
mov
outs
mov
xchg
push
jle
and
mov
out
aaa
mov
mov
dec
cmps
js
ror
mov
xchg
xchg
outs
in
or
gs
mov
xchg
sub
jecxz
xchg
mov
dec
jge
jl
add
fcom
inc
or
pop
mov
mov
inc
rcr
ficom
and
xchg
das
cmps
cmps
sub
mov
dec
adc
call
sub
fs
sti
xor
xchg
jo
cdq
enter
cmp
sti
cld
mov
sbb
in
dec
sbb
ss
retf
and
movs
xor
dec
or
mov
enter
pop
pop
stos
xchg
mov
dec
popf
lock
ja
in
xchg
adc
jge
popf
or
cwde
pop
fild
xchg
cmp
enter
enter
ins
aam
clc
xor
xor
ds
inc
jmp
pop
jle
aad
pop
inc
retf
into
jne
jecxz
lock
jecxz
cld
loope
push
pop
setg
outs
add
(bad)
bound
jmp
mov
ror
add
mov
std
retf
cld
mov
mov
stc
inc
xchg
mov
jnp
call
ror
ret
mov
cmp
loop
js
fld
jb
jmp
imul
sub
add
fisub
cli
femms
aad
jmp
and
and
mov
jae
and
sbb
cli
cmp
push
dec
in
fnsave
mov
dec
call
xor
scas
sub
popa
push
sbb
mov
push
cmp
and
fsubr
lock
pop
sub
ret
clc
out
scas
jmp
sahf
imul
jge
repz
pushf
aad
ds
and
(bad)
(bad)
retf
fld
and
cld
cwde
add
out
gs
pusha
and
arpl
ret
(bad)
jg
sbb
rcl
xor
rcr
je
push
shl
mov
lea
lods
test
push
loopne
xchg
mov
sbb
sub
jns
sub
cdq
das
push
xor
std
cmp
mov
jo
sti
mov
mov
cmp
aas
pop
sbb
jae
not
push
mov
pop
cmps
rol
and
sub
mov
or
mov
sahf
dec
fwait
pop
fnstsw
xchg
push
xlat
inc
stc
xchg
test
xor
mov
test
jns
call
sub
and
add
dec
sbb
mov
xor
cmp
jnp
(bad)
out
adc
mov
test
jb
xchg
or
stos
(bad)
cmps
xchg
sbb
ss
xchg
int3
sbb
xchg
push
push
aad
mov
enter
fwait
mov
mov
test
ins
dec
mov
into
jb
push
popf
scas
nop
xor
xchg
fdivr
(bad)
repnz
pop
test
mov
sbb
jmp
pop
(bad)
lock
pop
cmps
shl
jg
sub
mov
fs
lahf
int3
inc
adc
or
mov
inc
jmp
or
mov
mov
aaa
mov
mov
pop
jnp
jns
(bad)
mov
dec
outs
adc
pop
es
and
mov
rcr
cmp
jp
fadd
xchg
ror
sbb
test
int3
mov
inc
adc
shl
loopne
aas
pop
in
dec
lds
push
dec
imul
leave
stc
mov
aam
sbb
stos
sub
dec
xchg
jge
xor
pop
lods
fcom
and
push
addr16
imul
imul
add
jmp
sti
outs
bound
and
or
adc
clc
sub
cmc
leave
cmps
out
mov
les
xchg
shl
ja
sbb
sub
mov
xchg
inc
idiv
ss
xor
movs
lods
fist
sti
xchg
hlt
pop
hlt
out
imul
xor
xor
rol
neg
frstor
stos
daa
and
jg
and
mov
jmp
sahf
xor
mov
iret
xchg
dec
sub
les
push
mov
mov
scas
dec
mov
pop
loopne
push
mov
clc
add
push
aaa
adc
ja
mov
jg
cmp
push
add
sub
xchg
inc
cs
jo
jo
cmp
ja
jmp
icebp
clc
out
adc
(bad)
lock
push
mov
shr
or
call
outs
push
stos
inc
dec
and
add
mov
cmps
push
jnp
retf
xchg
movs
cmp
mov
push
loopne
pop
ja
dec
jns
or
xlat
add
push
cmp
(bad)
pop
inc
shl
jmp
idiv
lods
daa
mov
fldenv
sbb
jp
cmp
inc
mov
loopne
(bad)
fld
mov
push
addr16
add
loop
sub
jne
je
push
in
mov
jns
xchg
mov
adc
adc
pop
sbb
scas
mov
(bad)
leave
mov
pop
adc
mov
jb
or
mov
cmp
mov
mov
fstp
(bad)
xchg
mov
pop
sub
rol
push
aam
mov
icebp
inc
ss
mov
cli
lods
mov
(bad)
sub
dec
inc
push
pop
push
retf
inc
test
push
xor
and
jbe
inc
inc
pop
push
popf
or
(bad)
adc
add
lea
movs
shl
or
adc
sub
xor
cmp
xor
fnstsw
out
xchg
ficomp
fwait
aaa
cmp
(bad)
mov
test
shl
test
shr
cmp
sti
mov
or
int3
xchg
sub
pop
mov
and
mov
add
outs
push
inc
sti
xchg
push
repz
fistp
cwde
push
rcr
movs
test
push
sub
mov
into
lea
sbb
arpl
cdq
cmp
test
mov
push
xchg
mov
movs
test
mov
fnsave
int
push
rcr
jg
xor
mov
mov
adc
sar
mov
mov
lock
popf
(bad)
pop
jne
sar
jns
mov
movs
rcr
add
push
in
retf
inc
xor
jnp
jecxz
and
sub
sub
icebp
sbb
push
dec
loopne
sbb
xchg
out
and
and
jmp
adc
mov
cld
mov
stos
imul
call
lock
push
xchg
mov
pop
cmp
mov
jo
mov
xor
jg
push
xchg
cmp
rol
(bad)
fistp
push
mov
pop
xchg
shl
(bad)
dec
push
xchg
mov
int3
in
dec
or
xor
in
mov
(bad)
aas
test
jge
loope
inc
(bad)
jnp
mov
add
mov
xlat
and
aaa
cdq
xor
mov
pop
jae
imul
jmp
mov
adc
fidivr
sahf
mov
mov
pop
mov
mov
cmp
adc
xchg
out
cmp
jae
push
arpl
dec
mov
mov
dec
and
sbb
xchg
pop
dec
(bad)
push
xchg
jnp
sub
sbb
and
sub
lods
inc
sar
xor
hlt
idiv
outs
cmp
out
loopne
mov
jp
scas
(bad)
pop
shl
fldenv
jbe
cmps
jae
movs
repnz
dec
lahf
mov
test
mov
push
pop
xlat
mov
inc
jbe
ret
or
xchg
jmp
je
repz
sub
mov
jl
int
cmp
pop
pop
ret
call
clc
sub
mov
out
and
int3
mov
sub
jl
xor
pop
pusha
pop
retf
shl
leave
rol
je
mov
xchg
sub
jl
into
cmp
fsub
stc
shl
aaa
push
popa
jae
repz
fst
movs
mov
xchg
and
add
and
xor
and
xor
loopne
or
es
stc
leave
ja
xor
push
pop
jge
or
pop
pushf
vshufps
inc
inc
xor
cmc
inc
jno
vpcmpeqw
inc
adc
push
lods
repnz
mov
fild
mov
call
xlat
fs
imul
retf
in
in
dec
ss
out
mov
lods
dec
cmp
sub
mov
icebp
(bad)
popa
test
stos
mov
loope
mov
dec
push
loope
stc
es
aaa
jge
xor
and
(bad)
outs
popf
mov
popaw
sbb
retf
out
lods
leave
test
pop
call
shl
test
or
call
call
mov
in
clc
fs
ret
movs
add
out
push
sub
mov
dec
bsr
sub
sbb
scas
or
push
aaa
or
lock
cmp
add
cmp
lods
push
jmp
push
sub
xor
push
cmc
mul
fisubr
clc
xchg
pusha
fwait
xchg
std
inc
inc
rcr
xchg
adc
dec
ins
scas
jecxz
jbe
xor
jmp
lock
(bad)
leave
into
or
arpl
jnp
inc
push
pop
lock
mov
aam
adc
mov
je
iret
pushf
out
cli
int
xor
mov
xlat
jmp
pushf
es
pushf
lds
nop
std
mov
call
clc
mov
cdq
test
add
js
retf
mov
push
dec
into
ds
xchg
lods
test
lock
pop
enter
xor
xchg
and
ffreep
jmp
neg
ja
std
jp
push
test
test
xor
aas
xor
sahf
cmps
pop
fs
xor
add
mov
push
fadd
xor
add
ja
cld
dec
sbb
mov
xor
cmp
cld
xchg
repnz
mov
or
daa
sti
outs
jne
mov
xchg
push
mov
xchg
(bad)
ds
inc
jmp
lods
xchg
inc
or
push
dec
lds
mov
inc
cli
adc
cmps
inc
add
es
mov
xchg
in
or
sub
aas
push
mov
fs
out
das
sbb
cmps
sub
mov
lods
dec
jbe
jmp
jmp
cmp
ds
xchg
cmp
pop
xchg
cwde
add
aaa
ror
(bad)
fisub
cmps
sub
mov
loop
ins
aad
outs
test
add
fs
push
in
mov
cld
dec
push
push
shl
test
mov
mov
cmp
bound
add
push
mov
(bad)
sbb
dec
sbb
xor
fidivr
jb
shl
dec
dec
ret
rcr
pushf
mov
xchg
jmp
jl
repz
jecxz
lea
xor
stos
pop
lahf
jp
xor
clc
pop
pop
fidiv
and
std
xor
jecxz
retf
push
or
push
nop
cmps
(bad)
test
enter
dec
nop
sbb
push
sub
jo
jge
mov
outs
bound
mov
dec
retf
int3
fidivr
inc
test
mov
and
mov
mov
xchg
icebp
dec
scas
pop
mov
pop
mov
fdiv
sbb
fsubr
stc
stos
movq
or
es
add
int
push
cwde
mov
and
cmp
push
hlt
jecxz
pmulhuw
push
loopne
or
mov
xor
stos
push
pop
or
push
push
adc
xlat
push
and
(bad)
dec
out
push
xchg
pop
pop
in
lahf
stos
call
xchg
loop
jno
hlt
les
inc
je
std
shl
icebp
xor
pop
int
arpl
mov
cld
iret
mov
icebp
neg
add
push
call
or
xchg
in
ins
jbe
fdivr
xor
rcr
xchg
js
jmp
cmp
fdivrp
call
test
repz
retf
mov
push
aad
aad
dec
or
imul
push
push
bound
in
add
or
adc
std
inc
test
dec
aad
xchg
pop
fs
hlt
scas
mul
les
retf
in
das
dec
inc
dec
jp
xchg
xor
adc
aaa
sub
adc
(bad)
not
mov
bswap
call
adc
mul
sahf
mov
inc
jno
aad
mov
outs
cmp
ret
inc
stc
mov
fdivr
dec
addr16
cmp
in
sbb
or
pop
inc
shr
sbb
xor
in
loop
add
adc
dec
push
aam
or
pop
dec
loop
mov
xor
pop
mov
push
ficom
sar
add
nop
scas
ret
inc
or
mov
sub
in
push
pop
or
add
clc
mov
push
psrlw
push
sbb
pop
hlt
cwde
mov
fstp
pop
mov
adc
xchg
jbe
mov
sbb
mov
adc
sbb
mov
sbb
add
loopne
add
cdq
lock
push
sub
sahf
mov
in
shr
fs
shr
mov
in
clc
and
or
loope
pop
in
ror
adc
sub
mov
add
jo
mov
icebp
sub
(bad)
pop
in
icebp
mov
jle
jg
sub
cmp
fwait
inc
xchg
and
es
(bad)
in
sbb
dec
xor
mov
push
mov
jp
sub
mov
cwde
dec
and
or
mov
inc
sub
mov
add
or
test
fisubr
adc
xlat
mov
add
xor
or
stc
fisttp
mov
icebp
movs
test
and
pop
pop
push
hlt
fcmove
xor
sti
ficom
mov
ret
js
cmps
ja
es
pop
xor
push
sbb
bound
popf
sub
test
cmc
mov
cmp
cmps
out
mov
shl
pusha
jmp
repnz
cwde
push
call
arpl
lahf
repnz
test
xchg
inc
ror
rol
aad
cmp
lahf
or
imul
push
imul
(bad)
pop
push
pop
outs
push
adc
std
cmc
jne
push
std
ret
push
outs
leave
pop
mov
cli
inc
(bad)
retf
and
cmp
outs
dec
inc
movs
dec
inc
lds
adc
int
mov
mov
dec
cli
pop
fld
jbe
mov
xor
and
pop
sub
imul
mov
inc
xchg
pop
fidivr
loopne
in
rcr
sub
ret
sbb
dec
rol
push
cmp
movs
call
jbe
mov
dec
adc
cld
xchg
out
push
loopne
push
push
std
mov
xchg
lock
rol
pop
mov
inc
adc
dec
mov
imul
pop
dec
nop
fidiv
push
add
sub
dec
(bad)
mov
lods
and
aaa
push
cmp
xlat
js
mov
clc
pop
jmp
pop
fwait
xchg
or
hlt
shl
pop
dec
sahf
jp
pop
shl
cmp
jne
popa
loopne
pop
xchg
call
pop
stc
adc
popa
cmc
push
shl
mov
cmp
test
adc
call
mov
(bad)
call
imul
rcl
jp
lea
xchg
sbb
(bad)
gs
pusha
push
fcomip
inc
xor
aad
mov
std
xrelease
mov
mov
fsub
call
call
mov
outs
or
sub
enter
push
ds
clc
out
inc
mov
mov
dec
add
dec
push
lods
jae
sub
inc
xchg
out
mov
out
pop
dec
in
rcr
xor
(bad)
shl
aas
mov
cmp
and
shl
xchg
mov
push
in
sbb
out
sti
ss
pop
adc
cmp
sbb
test
loop
mov
(bad)
pop
adc
and
dec
pushf
and
jge
es
mov
in
sbb
mov
mov
inc
aad
mov
leave
pop
sub
scas
or
dec
cs
lds
bound
inc
imul
mov
mov
popf
mov
pop
(bad)
or
push
aaa
or
or
das
sub
push
shr
leave
enter
out
adc
xchg
pop
out
loopne
pop
test
ins
pop
sahf
add
jnp
jle
rol
leave
mov
dec
lods
(bad)
sub
inc
mov
ret
inc
aas
fnclex
sbb
mov
pushf
aad
push
popa
mov
push
jecxz
mov
add
mov
pusha
out
inc
xchg
cmp
test
inc
rcl
imul
or
adc
(bad)
inc
jge
sub
movs
aam
ret
xchg
push
xor
xchg
push
jmp
cmps
inc
sub
mov
leave
add
or
loopne
push
out
mov
adc
sbb
(bad)
loopne
clc
dec
cs
mov
sub
cli
sub
retf
jle
ss
je
xchg
add
jecxz
je
in
daa
outs
pop
xchg
pusha
pushf
fs
and
push
int3
outs
ins
mov
cmp
or
fild
xor
sahf
adc
push
sbb
sbb
cmp
inc
imul
push
inc
mov
rol
jne
xchg
mov
fst
bound
or
jae
jmp
push
sub
pop
lock
inc
cmps
add
daa
ror
xor
dec
mov
retf
loopne
jbe
push
fs
cmp
(bad)
sahf
pusha
adc
(bad)
jl
stc
loop
adc
sti
loop
sub
fmul
es
jne
and
ins
push
sbb
cmp
push
gs
inc
xchg
sbb
scas
lock
(bad)
pop
ins
mov
test
mov
stos
cli
mov
mov
xor
cli
adc
xor
sar
pop
idiv
mov
xor
vmread
sub
bound
rcr
mov
sbb
inc
(bad)
mov
push
or
jl
xchg
cwde
push
ss
jge
pop
stc
add
int
enter
retf
std
push
aas
or
mov
inc
je
pop
dec
out
pop
jmp
dec
push
out
fisubr
adc
and
jae
nop
inc
ror
xchg
popa
mov
frstor
push
(bad)
pop
ja
and
out
sbb
mov
xchg
dec
ficom
(bad)
shl
mov
fidivr
add
jecxz
call
mov
jl
push
stos
cmp
mov
pop
xchg
push
scas
inc
mov
inc
imul
jmp
fmul
mov
addr16
and
rol
mov
out
out
push
sub
lock
loop
dec
clc
xchg
retf
inc
mov
xchg
pop
call
mov
stos
retf
movs
push
or
cmp
in
lds
movs
or
outs
(bad)
in
shl
inc
sbb
out
pop
pop
xchg
int3
mov
test
cmps
lods
loopne
sbb
xor
mov
repnz
xchg
pop
fisttp
xchg
fbstp
sbb
mov
pop
test
dec
cmp
call
dec
pop
test
das
fcomp
jecxz
fisttp
jg
ins
adc
ss
or
rol
loopne
push
push
outs
xor
add
pop
(bad)
cmp
popa
dec
or
js
push
pop
aaa
adc
loop
mov
or
test
mov
in
retf
popf
mov
adc
jmp
int3
mov
mov
fs
mov
daa
inc
pop
retf
or
or
jp
nop
inc
ret
js
push
add
push
ds
jns
movs
int
mov
or
mov
mov
sahf
adc
je
popa
(bad)
cdq
cdq
sub
pop
sti
inc
sub
cmp
pusha
mov
cmps
cmp
call
mov
test
push
xchg
dec
shr
daa
ds
push
std
sbb
clc
idiv
popf
push
mov
and
mov
add
out
or
sbb
lods
repnz
retf
scas
push
mov
xchg
jnp
retf
popf
pusha
mov
jle
mov
repz
rcl
hlt
cmp
retf
jb
mov
sub
pop
xchg
ret
pusha
jo
icebp
out
imul
add
xchg
and
sub
mov
repz
cmp
push
cli
pusha
les
inc
sbb
lds
aad
xchg
nop
movs
lods
sub
out
ins
push
imul
pop
inc
scas
jp
push
(bad)
mov
xlat
add
shr
fstp
add
xor
mov
jg
int3
out
jl
mov
dec
xchg
adc
inc
into
mov
test
cdq
retf
add
push
pop
xor
sahf
xabort
dec
mov
sbb
aaa
inc
add
xchg
ja
cld
or
mov
cmp
push
xchg
push
repz
push
xor
and
and
mov
retf
iret
clc
cs
mov
outs
sub
jb
adc
inc
bound
movs
mov
mov
mov
mov
jbe
jae
cmp
jp
iret
mov
in
call
push
cmps
lea
pop
dec
xchg
push
mov
dec
jns
sbb
mov
mov
jge
mov
xchg
std
sbb
cmp
mov
xchg
mov
cli
and
mov
push
hlt
cmp
xor
fmul
bound
popf
aaa
xchg
ins
rcl
aaa
dec
std
cmps
aaa
sbb
pop
mov
cmp
outs
arpl
loopne
fdivrp
or
xchg
push
adc
lds
test
adc
mov
ret
aad
xchg
jae
sbb
je
xchg
movs
js
in
dec
sub
dec
dec
inc
or
inc
jne
mov
pcmpeqb
scas
data16
jp
mov
cmp
imul
ja
int
mov
call
push
add
mov
mov
xchg
shl
mov
or
retf
add
adc
cmp
adc
outs
test
les
jp
dec
xchg
mov
dec
inc
jbe
jae
cld
retf
adc
sub
lea
or
iret
sti
das
sbb
xlat
xchg
mov
lds
pop
jmp
cmp
mov
fimul
push
sub
imul
inc
jp
enter
or
fwait
push
je
mov
ja
lock
shl
cmp
in
mov
mov
pop
sub
inc
pop
ins
jb
and
(bad)
or
ret
into
push
dec
out
es
sbb
aam
inc
adc
add
jl
(bad)
lods
xor
mov
jg
out
repz
sahf
xchg
(bad)
cwde
dec
test
mov
adc
mov
add
add
jne
cdq
mov
push
sub
js
fstp
lods
cmp
or
in
loope
into
jmp
add
ficom
in
inc
inc
adc
mov
and
or
popf
add
jb
gs
and
xor
mov
lods
call
into
in
arpl
mov
mov
out
jns
add
idiv
movs
and
pop
or
xchg
xchg
inc
add
(bad)
sub
jnp
push
sub
or
fsubr
sahf
pop
push
xchg
dec
(bad)
aam
aad
adc
popa
data16
stc
sub
ss
jae
sub
inc
fild
sub
push
mul
lods
push
jo
fwait
mov
xchg
das
loopne
inc
mov
leave
xchg
stos
(bad)
mov
inc
jno
xchg
xchg
sahf
sar
jecxz
push
loope
mov
or
mov
inc
xor
ret
sbb
mov
and
cmc
ret
mov
inc
dec
or
fisubr
cwde
sbb
push
shr
jmp
stos
data16
inc
loope
int3
sub
or
sahf
xchg
push
ret
mov
(bad)
mov
imul
(bad)
fadd
arpl
mov
dec
jb
dec
(bad)
imul
fiadd
shr
jo
push
inc
add
xchg
gs
pop
dec
push
push
sub
dec
mov
sub
cmp
sbb
xchg
mov
ficom
and
lods
ins
pop
or
add
sub
test
xor
pop
and
push
and
leave
cmps
pop
daa
push
ins
mov
adc
les
push
loope
mov
cmp
imul
mov
or
push
push
add
adc
push
cmp
cmp
cmp
cld
imul
ins
(bad)
dec
(bad)
mov
call
call
out
push
pop
mov
out
je
lahf
into
imul
outs
ins
std
shl
jne
fidivr
sbb
mov
mov
inc
icebp
jecxz
scas
jns
iret
xor
dec
push
xor
add
pusha
pop
cmp
mov
fld
cmp
iret
imul
pop
jp
loopne
scas
adc
jns
outs
xlat
test
cli
fidiv
sbb
repnz
(bad)
(bad)
jmp
mov
xchg
push
sub
popf
mov
stos
vpand
(bad)
std
add
adc
or
(bad)
iret
test
mov
jo
pop
rcr
xchg
ja
jbe
mov
push
cmps
sub
pushf
push
sar
mov
int3
stos
mov
xlat
or
scas
in
sub
mov
mov
and
jg
js
mov
pop
sbb
sbb
or
dec
retf
(bad)
jg
shl
ins
inc
mov
jmp
loope
inc
mov
add
in
xor
cmp
xchg
popa
iret
xchg
aas
add
je
scas
retf
repz
jbe
mov
xchg
push
add
jmp
(bad)
fdivr
fstp
loop
cmps
dec
sub
mov
pop
lods
sbb
outs
retf
push
stos
sbb
loope
fnsave
pop
ss
push
mov
and
push
(bad)
mov
call
stc
call
jmp
mov
adc
mov
inc
pop
imul
and
mov
mov
sti
adc
out
and
add
or
or
push
xchg
fild
test
inc
push
ret
cmps
fcom
out
xor
ins
(bad)
fldln2
fcomp
in
xchg
sbb
mov
add
in
sub
cld
adc
dec
xchg
xchg
mov
xchg
inc
inc
aad
sahf
xor
xor
in
mov
push
adc
sbb
inc
pop
adc
mov
dec
pop
mov
outs
cmps
shr
push
mov
mov
add
xor
push
jge
lock
(bad)
xchg
in
and
les
dec
cs
sub
xchg
inc
jbe
push
mov
mov
mov
test
imul
jp
test
fs
add
dec
clc
or
jns
fdivr
stos
fisub
shr
push
inc
and
inc
dec
ja
cld
aaa
jecxz
mov
cmp
pop
mov
ja
dec
loope
push
push
lds
stos
add
retf
jge
pop
jge
push
int
(bad)
bound
inc
inc
aam
fwait
jne
aad
cmp
loop
outs
jno
sidtd
les
imul
ins
inc
cmp
stos
inc
iret
pop
adc
lods
dec
xor
xchg
adc
jl
and
sahf
cs
jg
add
shl
inc
std
push
test
rol
outs
jns
push
(bad)
stos
std
icebp
jns
in
arpl
lods
jmp
mov
mov
icebp
sub
fist
stos
ret
mov
xor
aaa
into
retf
sbb
mov
cmp
mov
scas
push
out
pop
cmc
(bad)
adc
xor
int3
rcr
pop
in
loop
lahf
ret
cmp
sub
shl
fist
adc
dec
or
push
call
popa
jb
es
or
mov
and
jns
xor
add
(bad)
daa
sbb
iret
pop
hlt
push
in
sar
movs
dec
mov
int
sti
aas
xor
das
sub
ins
ja
adc
sbb
test
jp
in
xchg
fwait
fs
cld
enter
jae
repz
sub
shl
gs
out
jae
push
mov
dec
dec
out
sahf
retf
fs
arpl
xor
mov
xor
xor
and
cmps
sub
mov
shl
mov
out
adc
mov
clc
jnp
jae
push
call
mov
out
jg
out
clc
lahf
dec
into
(bad)
mov
xchg
dec
jns
loopne
sub
add
(bad)
(bad)
aas
aam
mov
mov
jbe
xor
jno
daa
cmps
and
icebp
add
mov
sbb
adc
ffree
jmp
cmp
add
fadd
cmp
push
sub
(bad)
and
jp
movs
adc
lods
in
mov
xchg
cs
xchg
push
push
jbe
add
cmp
aad
arpl
xchg
stos
aas
jmp
loope
and
pop
das
add
sub
fisubr
jmp
jae
jmp
pop
fstp
push
push
jecxz
addr16
ins
sahf
inc
sub
inc
add
je
inc
pop
sub
test
pop
jae
add
pop
rcl
adc
adc
sbb
ret
nop
(bad)
dec
and
hlt
xor
xchg
or
push
or
fsubp
ror
jecxz
push
and
mov
push
pop
aam
fmul
jp
inc
jno
leave
imul
iret
js
sub
mov
push
lds
jl
cs
push
in
into
gs
jmp
push
xlat
cmps
or
aad
dec
leave
jmp
sub
mov
mov
dec
out
(bad)
in
ret
call
adc
cld
out
ss
or
sahf
(bad)
retf
jns
pop
(bad)
adc
and
cmps
cmp
and
out
fcmovne
std
retf
pop
lods
dec
cmp
in
jle
mov
inc
into
shr
cld
sub
scas
fs
jmp
inc
les
inc
stos
inc
sbb
inc
dec
sbb
shl
arpl
outs
hlt
gs
sub
inc
sbb
or
dec
mov
xor
push
cmps
in
xor
in
in
fimul
add
fiadd
rep
bound
mov
mov
jne
les
jecxz
out
add
xor
jo
ins
addr16
sub
push
inc
addr16
and
sbb
sbb
add
aaa
xchg
ins
repz
mov
cmps
sub
adc
or
sub
push
dec
jnp
shr
test
loope
and
pop
pop
cdq
xchg
fs
cld
movs
pop
xor
out
cmp
test
jmp
ficomp
nop
and
dec
outs
pop
dec
fcomip
dec
add
sub
cmps
cmps
jg
mov
movups
int3
stc
lods
gs
cwde
and
das
pop
test
in
dec
jle
into
lock
push
sbb
and
sub
xor
in
add
mov
add
jae
or
or
mov
lods
add
mov
xchg
test
push
dec
aad
or
aas
sub
dec
rcr
loope
jnp
sbb
jmp
lahf
adc
frstor
and
mov
jge
sbb
push
push
mov
add
sbb
mov
lods
fcomip
or
push
das
add
push
fstp
add
xor
pop
(bad)
jmp
lods
mov
ret
lea
shl
out
fs
sbb
hlt
jns
lock
test
adc
nop
sar
scas
dec
jle
test
nop
out
or
mov
js
or
and
bound
aad
ds
push
es
lock
mov
ss
jnp
xor
sub
leave
stos
inc
sub
pop
sbb
les
ror
push
xor
jno
xor
jmp
push
sbb
imul
mov
mov
sub
cmp
shl
jbe
lods
mov
jb
nop
out
xchg
sub
mov
inc
xlat
pop
cmp
push
hlt
or
gs
xor
pop
add
daa
cmp
mov
pop
shr
pop
pop
clc
push
shr
cmp
sub
dec
fistp
fld
int3
push
pop
outs
push
sbb
pop
jmp
fdivp
outs
test
fisubr
dec
sahf
mov
mov
out
sub
xchg
(bad)
cmc
(bad)
push
out
les
or
jmp
mov
add
pop
lahf
sbb
cwde
cmp
lock
push
add
xor
inc
cmp
jns
jmp
fwait
xchg
mov
cmp
call
push
and
or
jge
rcl
and
(bad)
pop
outs
repnz
rol
(bad)
je
mov
and
pushf
adc
ds
jmp
jae
sbb
rcl
mov
(bad)
(bad)
inc
call
xlat
stc
idiv
retf
push
loopne
jbe
push
add
ficom
clc
jno
sbb
lock
mov
push
sub
clc
adc
jo
mov
sbb
sbb
sub
mov
rcr
push
jo
shr
dec
push
dec
cmc
jmp
sub
(bad)
data16
test
adc
cli
fisubr
pushf
mov
jae
std
xchg
push
jle
mov
mov
(bad)
sub
mul
in
fadd
mov
montmul
cmps
or
jp
(bad)
cwde
pushaw
add
or
rcr
movs
sti
and
cmc
int
inc
dec
sub
js
add
loopne
punpcklbw
mov
sub
ss
lock
jp
in
ins
sbb
les
adc
pop
push
iret
dec
mov
pop
or
je
dec
and
inc
xor
cwde
inc
or
outs
lahf
or
mov
mov
mov
sbb
pop
loopne
mov
popf
adc
or
pusha
mov
cs
hlt
pop
and
xchg
or
mov
adc
pop
rol
aam
add
scas
add
xor
adc
xchg
addr16
xchg
mov
out
fidiv
(bad)
call
bound
mov
or
repnz
cmp
neg
adc
mov
mov
xchg
mov
movs
mov
adc
add
das
ret
fwait
ja
sbb
cmp
sub
xor
sub
daa
xchg
push
sbb
loopne
fsub
shl
push
cmps
fdiv
adc
and
push
aam
lods
inc
pop
mov
les
test
mov
out
jb
xchg
movs
je
repnz
fs
inc
dec
cmp
cmp
cwde
ds
mov
cwde
imul
jae
sub
sub
mov
adc
shr
lds
cs
sub
clc
jno
sbb
out
ins
lds
aad
xor
mov
mov
dec
cmp
cmp
in
sub
ficomp
icebp
mov
mov
or
jg
(bad)
test
cmps
adc
mov
repnz
adc
fimul
adc
xor
push
fcomp
fild
test
cmp
fisttp
shr
sbb
add
cmp
lods
pop
and
loope
xchg
aam
xchg
or
aad
mov
lds
sar
test
mov
mov
cld
in
xor
call
xor
gs
push
sahf
inc
dec
pushf
mov
das
or
push
mov
lods
sub
xor
rcr
clc
or
cmp
rep
mov
jle
enter
scas
mov
sbb
jns
jb
in
jmp
mov
retf
xchg
pop
cmp
sub
mov
fwait
jp
push
pop
les
cs
jb
inc
xor
repnz
adc
jecxz
ja
and
inc
test
mov
xlat
push
or
lods
(bad)
and
sahf
test
cmp
inc
sbb
lods
je
loopne
xchg
push
sahf
and
fwait
jne
mov
in
xor
push
sti
loope
ja
out
sub
add
push
xchg
out
scas
xchg
push
push
lock
xor
in
out
cmps
inc
cmp
sbb
repz
add
adc
or
cdq
(bad)
gs
in
xlat
aas
inc
shl
jecxz
push
std
pop
sti
and
mov
and
adc
jb
xchg
mov
pushf
cmps
stos
test
mov
inc
xor
hlt
daa
fnsave
or
dec
aam
test
or
push
cdq
mov
add
adc
fisubr
idiv
in
push
add
mov
int
cmp
inc
cmp
gs
xchg
in
or
jge
pop
stos
xlat
shl
dec
imul
mov
addr16
sbb
add
ins
movs
mov
sbb
sbb
nop
movs
popf
mov
pop
loopne
jl
ret
xor
inc
popf
cmp
shl
aas
shl
(bad)
into
sti
test
push
shl
pop
movs
ror
pop
inc
das
cmp
xor
shl
sti
mov
cwde
jmp
push
out
dec
stos
jnp
pop
mov
adc
nop
scas
repnz
jle
push
mov
jg
dec
or
and
mov
mov
pop
jecxz
call
call
aaa
lods
or
lahf
sar
mov
ficomp
cmp
jns
xor
pop
test
scas
sbb
push
inc
aad
cmp
lock
pop
mov
dec
sbb
popf
std
sbb
movs
aaa
cmp
mov
dec
sub
out
cmps
inc
xchg
cmp
cmp
je
xor
cmp
mov
les
inc
and
mov
or
ds
xlat
shl
bound
mov
and
xor
fxch
jmp
movs
out
and
(bad)
fisttp
sub
push
adc
push
hlt
mov
pop
loopne
jmp
fwait
push
add
fidiv
push
in
out
mov
inc
shl
cli
ss
push
pop
and
(bad)
std
and
and
jecxz
cmp
sbb
jl
outs
scas
adc
sahf
lock
mov
cs
mov
sbb
in
outs
xchg
pop
push
pop
dec
fisubr
es
jecxz
adc
stos
jmp
cmp
test
repz
jmp
out
add
sti
or
cli
sub
fbld
xor
nop
cmp
in
inc
adc
cli
mov
cmp
xchg
add
mov
repz
in
clc
xchg
add
adc
sbb
repnz
into
dec
ror
jo
lahf
jnp
clc
loop
jl
add
cdq
jle
int
adc
jae
out
mov
pop
sub
imul
in
sbb
sahf
mov
fisttp
jb
es
inc
or
daa
jg
sbb
sbb
loop
pop
pop
push
pushf
mov
sub
cmps
sub
inc
pop
(bad)
mov
jb
jmp
mov
xlat
push
dec
cmp
into
sbb
(bad)
retf
adc
pop
jp
rcr
sub
(bad)
jp
adc
fiadd
cdq
mov
jg
push
div
push
sahf
ins
adc
xchg
int3
pushf
sub
inc
push
mov
push
xchg
adc
ins
ror
fmul
dec
xchg
aaa
push
jle
cwde
iret
add
ror
mov
call
or
dec
cmps
(bad)
xlat
xchg
jnp
add
ror
dec
mov
pop
in
test
stos
dec
cmc
push
jmp
cdq
rcl
dec
inc
push
jecxz
stc
nop
jbe
std
gs
(bad)
ss
jnp
(bad)
sti
and
aad
sbb
mov
mov
test
outs
pop
or
push
ss
cmp
pusha
lock
add
jmp
aad
inc
ficomp
ins
cs
lods
dec
xchg
xor
mov
sub
mov
lock
(bad)
ss
pop
cmp
fcom
pop
mov
stos
jno
into
ds
lock
adc
call
pop
das
mov
and
inc
dec
lods
icebp
pusha
out
or
cmp
adc
aas
xor
sbb
push
mov
inc
dec
mov
or
int3
gs
and
jns
je
or
jp
mov
mov
int
jle
mov
mov
loop
or
pop
shl
call
mov
int3
mov
xchg
test
dec
popa
mov
xor
cmp
popf
repnz
stos
pop
gs
je
pop
dec
ror
retf
xchg
or
inc
inc
jae
call
xchg
mov
shl
mov
mov
div
out
jnp
pusha
add
jns
add
ins
out
data16
xchg
mov
jbe
lods
int3
push
pop
mov
inc
pop
js
sbb
scas
push
(bad)
mov
add
pop
jmp
dec
rol
addr16
lea
cmp
mov
xor
sbb
test
or
and
sub
out
push
jmp
mov
pop
push
mov
gs
inc
dec
and
xor
das
jo
jp
imul
rol
xchg
stos
and
fiadd
fimul
leave
xchg
ins
test
and
fwait
in
outs
mov
mov
pop
sub
mov
icebp
mov
repnz
mov
inc
cmc
mov
mov
mov
sbb
and
cwde
in
or
jno
xor
push
add
ret
(bad)
inc
pop
cmp
xchg
mov
xchg
or
mov
push
adc
jg
pop
jecxz
nop
or
aas
sbb
bound
xchg
jmp
and
ja
xor
jle
mov
add
sahf
mov
dec
pop
fwait
sub
add
lahf
(bad)
mov
mov
fild
daa
stos
out
popa
retf
pop
sub
test
lods
xor
popf
adc
and
inc
je
pop
(bad)
push
cmp
out
sar
pop
xlat
imul
movups
add
or
popa
xor
mov
icebp
mov
sub
xchg
jl
mov
loope
xchg
push
arpl
dec
jne
into
mov
mov
pushf
add
push
rcl
nop
sbb
xchg
dec
cmp
or
push
jo
sbb
loopne
ja
xor
imul
and
fmul
xchg
mov
test
jmp
dec
test
cmp
test
add
(bad)
test
pushf
dec
dec
fcom
repz
cmc
or
mov
push
fs
fld
pusha
mov
data16
mov
imul
shr
ficomp
out
mov
sti
retf
jg
xchg
fist
or
scas
and
jo
xacquire
cmps
mov
add
adc
mov
xchg
mov
pop
into
test
dec
push
xchg
push
pop
inc
inc
pusha
adc
lods
cmc
pop
mov
aam
push
pusha
in
sbb
xchg
fdiv
add
mov
lods
cmp
xchg
inc
mov
(bad)
das
lea
ss
mov
inc
not
xlat
jl
dec
inc
cmp
jb
in
sub
out
mov
pop
mov
lods
and
scas
iret
xor
pop
xor
repnz
std
xchg
sar
pop
pop
dec
mov
cmps
pop
fwait
popf
aas
mov
jge
test
pop
rcr
cmp
push
sbb
and
aas
add
add
cwde
mov
pop
pop
add
pop
clc
aad
sub
popf
cwde
dec
leave
mov
mov
and
mov
xchg
add
cdq
pop
jmp
lock
test
fstp
and
pop
imul
jmp
cmps
dec
fld
jno
fld
cdq
dec
aam
push
jg
retf
sbb
call
shl
mov
sub
mov
lfs
sub
dec
sbb
push
jnp
xor
xor
out
jns
(bad)
jecxz
jno
aam
xchg
push
mov
xchg
lds
out
enter
xor
jb
jp
xchg
inc
ficomp
xchg
inc
ins
movs
shl
out
lahf
adc
jae
aad
inc
jecxz
add
in
jo
sub
dec
inc
mov
pop
xchg
in
ins
jo
or
cmp
push
ret
mov
loop
iret
stc
inc
mov
push
mov
cwde
jo
iret
js
jbe
xchg
test
jns
jmp
loope
mov
cmp
gs
mov
mov
vcvtss2sd
jmp
or
lds
mov
mov
in
jle
cs
pusha
sub
sbb
xor
adc
nop
sub
cs
add
fucomip
(bad)
ins
(bad)
mov
pop
bound
js
shl
scas
jns
push
dec
retf
pop
imul
dec
neg
popa
sbb
lods
clc
je
dec
push
fstp
jmp
push
je
movs
and
das
retf
(bad)
out
mov
pop
jbe
pop
into
leave
sub
cmc
not
scas
dec
xor
test
mov
ret
xor
out
sbb
ins
pop
movups
mov
inc
jns
mov
and
fcomi
xor
mov
sbb
stc
sbb
mov
xchg
sahf
test
pop
mov
fdiv
sbb
sub
cmp
jge
into
push
or
cmps
fwait
xor
add
push
test
shl
stos
hlt
or
adc
and
fisttp
sbb
es
jns
retf
sbb
in
push
push
ja
imul
or
fs
test
xchg
adc
out
imul
inc
pop
xlat
dec
sbb
int
test
add
push
sti
leave
mov
xlat
aam
xchg
add
in
mov
(bad)
xor
inc
(bad)
or
xchg
cwde
ret
jmp
fsub
imul
sbb
scas
push
xor
dec
mov
stc
inc
cwde
popf
jne
xor
mov
push
push
mov
adc
and
dec
add
sbb
stos
dec
stos
xor
mov
sbb
std
xor
mov
mov
fcmovbe
and
mov
cmp
shr
stos
mov
mov
data16
sbb
test
stc
jnp
mov
iret
test
mov
mov
xchg
loope
clc
xchg
stos
mov
dec
out
inc
test
fild
mov
jbe
dec
dec
in
xchg
ss
(bad)
scas
jnp
and
or
in
gs
fs
ret
mov
push
dec
add
test
mov
cwde
out
inc
mov
popf
je
sbb
pop
movs
lahf
jle
clc
movs
fisubr
cmp
std
pop
push
sub
pop
sub
pop
sub
ret
out
lahf
stos
outs
inc
xor
js
push
sub
pop
into
hlt
test
xor
sbb
cmp
sahf
cmp
test
pop
jbe
cmps
adc
movs
data16
push
out
jo
fisub
(bad)
stc
(bad)
push
mov
xor
sbb
cmp
xor
cmp
je
call
xchg
shl
dec
add
xor
mov
(bad)
mov
fsub
mov
and
lods
lock
cmps
or
cld
jg
popa
mov
sub
xchg
(bad)
xchg
fcmovnbe
jge
(bad)
into
xor
mov
mov
or
and
mov
inc
adc
mov
adc
arpl
clc
(bad)
in
dec
jo
and
fsubr
lahf
jnp
sbb
jmp
xchg
sbb
mov
lods
out
es
or
clc
rol
out
push
jne
xor
(bad)
fild
jno
cwde
(bad)
aas
das
mov
iret
push
stos
call
push
jnp
dec
addr16
xor
loope
push
mov
mov
inc
xchg
stc
jp
add
jl
add
cwde
mov
(bad)
cmps
js
imul
inc
jle
or
xchg
jmp
popa
adc
pop
stos
cmp
loop
cmp
js
jge
jmp
pop
repz
cmp
sbb
mov
push
fcmovu
hlt
retf
xchg
jg
outs
cmps
ja
xor
shl
jecxz
cmp
mov
mov
call
fldenv
aas
and
mov
(bad)
imul
fwait
rol
add
outs
std
xchg
mov
std
mov
(bad)
lock
dec
jle
add
and
adc
sti
xlat
dec
add
and
cwde
jb
mov
pop
(bad)
int
inc
std
xlat
jle
out
ror
repnz
xor
aam
loopne
push
not
mov
and
or
pop
loop
push
sub
pop
or
mov
test
call
sti
jecxz
fnstsw
add
jp
push
pop
lock
sbb
rcl
imul
or
arpl
or
inc
mov
or
push
jecxz
jecxz
cmps
daa
ss
movs
repz
pop
popa
push
test
stos
cmp
into
inc
inc
adc
out
xchg
fild
jge
out
mov
fidiv
rcr
jb
call
ror
inc
fdiv
push
pop
mov
pop
pop
mov
dec
push
pop
xor
cmp
nop
push
movs
dec
enter
imul
and
ret
paddsw
mov
sti
mov
out
or
imul
stos
cdq
xor
inc
mov
repz
mov
in
jae
sub
jecxz
mov
inc
repnz
adc
push
call
loope
int3
leave
daa
mov
test
sub
add
inc
xlat
or
inc
xchg
test
mov
out
cld
test
sti
loop
scas
mov
mov
fisubr
rcl
out
lds
retf
fidiv
pop
aad
es
rcr
adc
sbb
add
xor
push
leave
in
pop
sbb
(bad)
pop
sub
lods
rol
in
mov
pop
xchg
call
mov
jmp
cmps
sub
xchg
sub
popa
mov
aad
popa
mov
pop
mov
xchg
adc
mov
adc
lock
fs
outs
repnz
lahf
dec
inc
loop
jae
or
and
mov
pop
xchg
cwde
fmulp
out
in
adc
jl
(bad)
aam
jle
and
and
lods
push
int3
pop
pop
sti
or
scas
adc
xor
pusha
xor
test
clc
push
stos
pop
mov
stos
sbb
int
or
iret
adc
mov
mov
lock
mov
fisub
dec
ja
xor
dec
jp
movs
push
push
not
lahf
lock
fwait
or
sar
pop
sti
(bad)
jne
cld
popf
push
out
cwde
stos
popf
test
mov
into
ror
xchg
retf
js
push
shl
xchg
jle
leave
test
pop
ss
fld
test
mov
and
and
push
pop
fadd
mov
mov
pusha
call
movs
cmps
fucom
push
push
xchg
mov
jmp
(bad)
aam
imul
lds
adc
xor
stc
pop
ficomp
xchg
sub
cld
rol
mov
fdivr
mov
int
jns
inc
movs
fiadd
mov
loop
movs
pusha
cmp
(bad)
jmp
fadd
add
ins
(bad)
shl
sahf
mov
cwde
adc
fld
ins
mov
das
and
lahf
push
mov
outs
rol
jmp
mov
xor
add
dec
loop
movs
test
mov
push
mov
or
xor
pop
push
lods
sub
cmps
pop
jne
pop
cld
xor
test
inc
push
mov
movs
jge
inc
sbb
fucomi
inc
adc
jge
in
dec
mov
ret
and
or
pop
aam
mov
lds
js
push
mov
add
call
inc
shl
cmps
cs
aam
ror
xchg
rol
mov
inc
inc
push
pop
add
fild
cmpxchg
mov
js
xor
inc
inc
sub
leave
(bad)
ror
xchg
sbb
fcomip
imul
inc
idiv
call
stc
retf
cwde
sub
(bad)
add
test
ret
mov
cmp
mov
das
adc
dec
scas
imul
ja
xchg
dec
repz
sub
sbb
ror
stc
jecxz
fisttp
sbb
cmp
std
push
fist
dec
sub
movs
imul
aam
mov
fs
sub
rol
loopne
jno
lahf
xchg
int
jno
inc
lahf
mov
or
je
aaa
lods
inc
cmp
rcr
and
aam
add
sub
inc
lahf
sbb
int
repnz
push
or
jge
(bad)
mov
push
xchg
or
shl
daa
mov
add
imul
sub
cdq
or
ss
cmp
xchg
cs
icebp
daa
movs
push
cwde
aad
into
sbb
xor
xor
sti
cmps
push
movs
mov
mov
addr16
adc
call
(bad)
jmp
retf
loop
lahf
ret
add
std
push
inc
cmp
std
enter
js
xchg
or
and
or
mov
imul
inc
jb
imul
mov
fldenv
push
fwait
lods
pop
xlat
pop
jmp
data16
mov
retf
fld
int
cdq
and
cli
cmp
sti
popa
xor
shr
adc
and
xchg
or
mov
jp
cmp
jmp
js
sub
mov
xchg
fdivp
int
dec
push
push
cmp
dec
je
ret
mov
jle
sub
shl
and
mov
xor
movups
dec
aam
adc
xchg
mov
in
test
cmp
push
jge
out
out
inc
int3
jo
scas
lahf
xchg
mov
push
in
jmp
sahf
mov
and
and
inc
inc
or
adc
xor
not
pop
pop
or
fcmove
js
adc
mov
loopne
and
pop
jecxz
fmul
pusha
push
pop
pop
xlat
sub
ja
(bad)
mov
rcr
ja
aam
cmp
cmp
mov
cmp
sbb
out
das
shl
movs
popf
jb
fwait
pop
xor
imul
pushf
int3
arpl
test
call
mul
mov
mov
inc
stos
jl
imul
sar
sbb
adc
pop
jb
mov
jo
sbb
mov
inc
scas
dec
clc
js
or
out
xor
xchg
sub
add
jmp
stc
jecxz
popf
pop
jg
bound
lods
adc
jg
pop
xor
adc
sub
jmp
mov
loop
or
pop
or
mov
mov
sub
scas
mov
popf
sub
cmp
out
lods
xor
pop
fidiv
push
jl
mov
iret
inc
(bad)
pop
mov
enter
iret
push
out
pop
lods
jecxz
inc
jae
mov
inc
(bad)
aad
or
fisub
xor
push
mov
mov
xchg
dec
xor
xor
or
stos
push
mov
stc
(bad)
pop
inc
outs
imul
xrelease
out
out
sub
dec
fdivr
push
mov
add
sub
cld
fadd
add
and
ret
mov
dec
jmp
push
lds
adc
add
in
jp
cmp
xor
and
(bad)
push
add
cmp
mov
push
not
and
addr16
jae
fwait
and
dec
jae
fcom
mov
jle
rcl
stos
sub
in
add
adc
imul
jne
sub
lahf
cmc
mov
popf
mov
pop
ror
adc
or
xor
sub
inc
fistp
fs
mov
int
fsubr
enter
lea
or
mov
jle
fiadd
sbb
sbb
outs
(bad)
pop
fist
aas
movs
or
movs
push
cmc
out
dec
fstp
rcr
pop
add
fidiv
or
inc
loopne
or
ins
out
pop
clc
inc
in
fwait
call
push
jo
aad
retf
mov
add
repz
scas
out
xor
retf
mov
rcr
xchg
mov
dec
mov
cdq
ins
xchg
movs
mov
sar
fst
fcmovbe
loop
je
sti
fsubr
sbb
dec
xchg
fisttp
aad
sub
cdq
mov
fs
adc
je
sahf
adc
sub
out
fdivr
in
into
cmps
pop
lods
lahf
push
fnstsw
js
bound
add
mov
sbb
jle
icebp
cmp
inc
xchg
loopne
stos
into
mov
lock
inc
enter
ins
daa
mov
mov
pop
jge
(bad)
mov
mul
in
add
and
aas
add
pop
or
mov
sbb
cmp
daa
call
jb
adc
fdiv
sti
es
add
pusha
aam
xchg
movs
es
pop
jmp
pushf
ret
shl
js
scas
lahf
pop
xor
mov
jl
fldlg2
adc
xor
leave
jp
and
pushf
call
mov
cmp
call
stos
xchg
icebp
in
and
cmps
gs
or
inc
fisub
pop
in
bound
outs
mov
jns
mov
add
jle
call
xor
cmc
mov
pop
push
push
jmp
mov
(bad)
push
push
pop
das
addr16
das
dec
mov
cmp
and
jmp
pop
push
push
pusha
mov
mov
xchg
xlat
gs
mul
int
fwait
popa
pop
scas
push
mov
dec
out
inc
iret
rol
into
std
and
test
add
mov
cmp
aam
stos
iret
imul
test
outs
mov
and
arpl
js
pushf
int3
loop
jl
test
xchg
sbb
mov
loopne
(bad)
inc
pop
stos
out
test
enter
cmp
pop
jb
xchg
xor
int
sub
iret
mov
pop
inc
xchg
lods
int3
or
jp
adc
inc
sbb
shr
mov
sti
xchg
je
cwde
pushw
out
fwait
lods
push
jns
push
or
retf
sub
aas
retf
inc
mov
jge
lea
pop
push
mov
adc
loop
and
jg
jb
mov
popf
xlat
(bad)
cmc
adc
(bad)
test
and
sub
neg
lods
daa
mov
xchg
sar
retf
pop
add
lock
and
nop
mov
and
repz
or
adc
push
xchg
cmps
push
das
call
jo
cmp
mov
dec
cmp
push
sub
mov
pop
lds
inc
(bad)
in
cmps
mov
cmps
scas
call
lea
sar
aam
sti
stos
xchg
sbb
xor
and
sub
fst
inc
xor
adc
cmp
nop
adc
movs
xchg
nop
adc
xchg
ds
call
out
imul
dec
jmp
add
in
fs
jle
in
les
add
sbb
adc
pop
push
xchg
gs
lods
test
shl
push
in
jmp
mov
or
ja
ret
mov
jl
xchg
in
and
mov
inc
adc
cmc
ret
es
pop
add
pop
pop
and
(bad)
push
cmp
outs
mul
push
xchg
jnp
jp
inc
sub
and
mov
mov
js
lea
mov
adc
inc
xchg
xchg
fwait
push
adc
cmp
pop
cmps
into
mov
jle
fstp
pop
aam
ss
fisttp
cli
test
mov
les
add
inc
dec
nop
setl
inc
repnz
pusha
inc
mov
out
mov
xor
jb
pop
cmp
pushf
outs
mov
sbb
outs
das
fild
aad
add
adc
and
mov
pop
push
arpl
or
pop
dec
push
pop
mov
push
and
lock
sub
push
fmul
test
(bad)
fnsave
stos
sbb
jne
scas
fdivrp
and
(bad)
fidiv
fwait
xchg
mov
add
cld
test
retf
scas
(bad)
es
xchg
push
mov
ss
cmps
or
mov
(bad)
fcom
dec
fist
lds
es
jae
dec
pop
inc
vmread
adc
data16
or
fiadd
push
leave
pop
mov
mov
add
and
pop
xor
imul
sub
in
scas
mov
shl
inc
sbb
nop
mov
jno
repnz
fs
pusha
and
fmul
adc
jmp
popf
dec
mov
jecxz
inc
stos
inc
aad
pop
mov
retf
cmp
pop
test
mov
mov
loopne
ficom
dec
repz
jecxz
lock
sub
xor
mov
test
dec
call
jecxz
jecxz
cmps
sbb
sbb
gs
daa
push
xor
jmp
mov
std
or
pop
jmp
push
xlat
hlt
inc
push
in
loopne
mov
inc
push
mov
pop
(bad)
ins
scas
mov
ins
scas
out
outs
shl
or
retf
mov
push
in
mov
mov
ins
out
push
ret
mov
adc
popa
lds
les
jmp
dec
out
in
and
(bad)
into
mov
mov
div
test
dec
aas
(bad)
repz
test
popa
push
retf
dec
sar
and
xchg
dec
adc
jbe
scas
mov
dec
outs
mov
enter
out
(bad)
out
or
push
mov
push
cmp
pop
clc
and
cmp
mov
psrlw
sub
out
xor
out
sbb
fs
mov
jnp
cmp
sahf
sbb
push
cli
in
xor
test
out
push
pop
jb
cmc
das
stos
div
out
mov
in
dec
(bad)
retf
adc
fwait
mov
movs
adc
jno
cld
add
ins
push
std
mov
aaa
push
add
pop
outs
test
push
xchg
or
sbb
mov
in
mov
adc
out
into
inc
jg
mov
push
scas
jge
mov
xchg
cmps
pop
and
aad
fs
retf
in
sub
inc
nop
ret
dec
inc
rol
push
aas
(bad)
jl
arpl
stos
sbb
pop
imul
pop
cld
push
jno
fs
retf
ja
fild
pop
jne
push
mov
push
test
or
sbb
mov
dec
mov
fimul
sbb
mov
retf
clc
test
hlt
pushf
xchg
dec
int3
retf
and
xchg
dec
popf
outs
scas
dec
fiadd
into
inc
pop
enter
out
out
or
mov
popa
test
cdq
jae
add
mov
jg
outs
ja
sbb
push
clc
adc
pop
dec
push
sub
inc
repnz
iret
jle
and
fisub
xchg
pop
and
sti
dec
push
mov
clc
out
(bad)
ja
cmc
sbb
push
inc
stc
je
or
out
push
or
call
cld
stos
or
shl
mov
jno
xor
pop
jl
or
retf
(bad)
xchg
pop
cmp
les
outs
aad
cmc
arpl
jmp
aad
(bad)
scas
scas
retf
and
adc
push
mov
push
pop
lahf
mov
aas
xor
or
ret
test
dec
or
fstp
int3
mov
enter
sti
sub
sbb
cmp
out
enter
fsubr
ds
mov
stos
fnstsw
fcom
out
push
shl
jnp
sbb
push
mov
sub
out
inc
push
leave
pushf
jge
retf
sbb
out
out
dec
cmp
add
jmp
int
jb
call
sti
adc
adc
sub
jle
mov
add
jns
pop
sbb
inc
sub
pushf
(bad)
sbb
cmp
adc
bound
popf
sbb
clc
not
js
fwait
add
clc
lods
stos
cmp
and
sub
dec
xor
fcmovu
mov
jb
cmp
mov
mov
mov
(bad)
out
pop
icebp
bound
test
dec
sub
pop
scas
nop
and
not
mov
jecxz
(bad)
jbe
addr16
dec
jle
in
stc
sub
dec
jge
and
stos
mov
aas
lods
sbb
pop
cmp
movs
(bad)
in
(bad)
loope
mov
cmps
fucomp
cmp
pusha
push
push
lahf
aaa
push
test
xchg
scas
idiv
jg
cld
ins
mov
loopne
shl
lds
jno
lea
cld
repz
xchg
pop
stos
sub
call
arpl
icebp
pop
loope
mov
stos
out
xor
add
out
xor
test
push
xchg
cmp
xchg
jo
xchg
jge
sub
add
cwde
mov
cli
cmp
into
mov
adc
push
xlat
in
xor
jecxz
mov
test
js
adc
jns
jae
popa
mov
cmp
icebp
mov
loop
movs
dec
or
adc
sbb
mov
xchg
jmp
xlat
sahf
adc
and
in
sahf
imul
ds
cmc
enter
mov
mov
xchg
inc
and
dec
int3
fisubr
imul
sbb
out
mov
clc
push
cmp
push
sub
cdq
cmp
mov
test
and
add
dec
mov
dec
sbb
sub
inc
inc
fidiv
cld
popa
mov
sbb
xchg
test
daa
mov
call
dec
inc
jae
repz
(bad)
(bad)
retf
mov
lock
adc
mov
and
add
mov
psrad
adc
int3
scas
adc
ffreep
dec
jg
pop
ret
leave
dec
add
les
mov
mov
dec
aam
mov
fwait
cmp
push
clc
adc
std
jmp
and
pop
fsubr
(bad)
pop
fs
dec
in
mov
and
fmul
(bad)
xchg
adc
out
jmp
push
sbb
js
loopne
lods
push
ficom
cmp
inc
xchg
out
lahf
pop
sbb
jecxz
and
movs
adc
sti
mov
rcr
lea
inc
fs
adc
pop
jg
in
xlat
push
add
push
sbb
xor
imul
(bad)
clc
je
jns
ja
mov
mov
xor
jge
scas
fdiv
jae
sub
pop
cmp
xor
sub
imul
sti
dec
add
int3
les
dec
movs
inc
xchg
inc
ret
adc
adc
adc
mov
add
lock
lahf
pushf
ds
inc
xor
test
or
mov
add
mov
adc
rcr
dec
lock
sbb
mov
adc
aam
xlat
jl
stos
and
sahf
stc
push
ret
in
stc
pop
stos
(bad)
fimul
mov
and
adc
mov
sub
pop
and
push
in
neg
push
(bad)
call
mov
jns
and
pop
xlat
mov
jo
cmps
repnz
jae
cld
mov
xchg
sahf
jmp
dec
or
mov
sbb
dec
adc
jecxz
pop
dec
lods
inc
adc
fbstp
daa
shr
dec
inc
dec
sub
adc
xlat
es
xor
test
inc
pop
out
push
jae
stos
xor
stos
cmp
add
data16
fwait
ss
xchg
(bad)
cmp
mov
out
imul
xchg
mov
jo
mov
adc
ror
scas
repz
push
cli
gs
fbstp
add
pop
or
cdq
jl
pusha
loopne
xchg
cmp
sar
jne
ret
sub
inc
dec
jae
int
nop
movs
jl
aad
test
mov
popf
ficom
pop
or
retf
jp
or
nop
xor
lea
xchg
sbb
inc
nop
and
mov
hlt
std
jbe
and
js
pop
inc
aas
mov
loop
stc
ret
test
and
xchg
rol
das
xchg
mov
jl
js
xor
pop
sub
push
mov
movs
outs
adc
jbe
cmc
fsub
aad
stc
dec
call
jecxz
dec
lods
dec
retf
and
fdivp
mov
fld
shr
mov
sub
daa
sbb
and
push
push
sub
xchg
and
add
mov
jmp
xor
cwde
cmps
iret
std
pop
sub
cld
out
(bad)
sti
aas
push
mov
sbb
jne
dec
cmp
mov
stos
(bad)
int
ss
gs
inc
pop
push
call
dec
lahf
pop
stc
retf
pop
sub
pushaw
ins
repz
push
mov
imul
mov
ror
dec
pop
sbb
cmp
mov
xchg
xchg
iret
xchg
and
lods
ret
mov
pop
in
xchg
sub
pop
mov
cmp
pop
add
jo
(bad)
sub
bound
lds
imul
add
xor
ins
aaa
(bad)
test
dec
fcomi
cld
jp
sar
add
sbb
popa
mov
xchg
dec
loope
mov
(bad)
(bad)
das
push
inc
adc
cdq
xor
call
fdiv
sub
adc
stos
push
pop
mov
cmps
fs
mov
cmp
or
outs
push
sti
dec
inc
fdivr
dec
push
int
mov
loop
or
adc
nop
stc
and
adc
adc
test
sbb
fnstsw
out
inc
(bad)
stc
cmp
xor
out
push
sbb
out
fcom
repnz
aad
add
push
outs
inc
push
leave
pop
sub
jle
mov
or
cmc
loopne
adc
cld
in
jmp
test
pop
inc
push
pop
inc
movs
sbb
std
push
mov
cs
imul
gs
dec
ss
movs
aam
add
and
fwait
into
jmp
sbb
into
mov
dec
lds
inc
dec
or
enter
mov
inc
xor
pop
popf
inc
call
sbb
scas
das
jbe
or
imul
cmp
fcomp
call
add
stos
dec
push
mov
mov
data16
sub
ja
pusha
rcl
mov
mov
mov
mov
sbb
cld
mov
push
xor
xchg
xor
mov
ror
add
ss
adc
xchg
loope
icebp
loopne
pop
loopne
es
(bad)
xor
enter
mov
or
jl
xchg
jae
fwait
hlt
loope
popa
sub
not
jmp
xor
mov
cwde
int
dec
jb
fs
lods
push
outs
inc
outs
add
and
adc
mov
out
adc
ins
jbe
lock
dec
xor
int
(bad)
outs
mov
push
out
lock
mov
cs
(bad)
sbb
jl
mov
jmp
add
outs
(bad)
sub
adc
jnp
push
mov
daa
rcr
into
cmp
shr
jb
sbb
inc
mov
(bad)
aam
lods
aad
pop
cdq
sbb
ret
test
mov
aaa
jno
popf
sbb
add
fist
jns
xor
pop
or
sub
ror
aam
cdq
dec
pop
or
add
xchg
inc
and
out
adc
inc
lahf
repz
fsub
add
in
(bad)
mov
(bad)
repnz
js
aad
int3
test
mov
fisub
adc
aam
xor
sbb
imul
jle
mov
jo
pop
mov
inc
mov
movs
lods
std
icebp
je
out
outs
mov
jbe
mov
inc
sub
push
mov
mov
lods
mov
fsub
push
iret
shl
jmp
pushf
jl
aad
jle
xchg
adc
pop
or
sub
pop
jmp
sub
retf
jne
or
imul
dec
xchg
repz
rol
and
aam
movs
mov
fnstsw
mov
aam
add
cmc
inc
mov
jne
addr16
sbb
pop
repz
dec
pop
clc
(bad)
push
mov
mov
inc
lods
inc
push
push
push
outs
inc
sbb
inc
and
push
sbb
test
rol
or
push
xchg
xchg
std
mov
mov
cmp
dec
mov
dec
add
nop
retf
xchg
retf
gs
in
arpl
inc
sti
ja
nop
push
push
retf
inc
shl
jle
push
out
lea
out
push
rcr
jecxz
adc
loope
loope
bound
pop
lds
pusha
xchg
std
adc
mov
sub
jns
(bad)
les
cdq
movs
pop
cmp
sbb
sbb
in
ss
js
mov
pop
es
rcl
jp
inc
xor
inc
cdq
push
jecxz
dec
in
loop
in
push
jns
test
sahf
dec
jne
das
dec
fwait
and
nop
imul
fcmovbe
in
out
mov
dec
push
in
and
pop
dec
add
cmc
(bad)
(bad)
ins
push
xchg
test
shl
out
cdq
adc
push
push
or
ret
in
push
test
std
pop
cs
pop
ins
sbb
int
and
jmp
fcomp
in
fld
les
ja
(bad)
aam
(bad)
fstp
pushf
or
or
push
xor
sbb
movs
jno
dec
xchg
imul
into
not
sbb
cs
in
stc
xor
mov
fdivr
mov
es
int
or
and
cs
dec
add
pop
sti
loope
aad
pop
push
les
push
sbb
dec
cld
mov
out
shl
xchg
imul
mov
mov
or
call
pop
pop
dec
ret
push
sbb
cmp
scas
shl
stc
cmps
call
push
(bad)
sti
lods
xlat
pop
fimul
sbb
jle
or
outs
lds
out
je
popa
stos
cwde
js
call
push
mov
std
rcr
mov
jp
addr16
bound
ret
adc
out
lahf
fcom
movs
dec
stos
jns
(bad)
iret
push
dec
jno
xchg
pop
and
ins
cli
inc
xor
fadd
xchg
daa
movs
add
push
fiadd
movs
(bad)
out
sub
push
jl
div
pop
mov
add
xor
outs
cmp
pop
cmps
daa
call
das
jmp
or
jg
push
jecxz
(bad)
out
inc
sahf
cld
pop
leave
pop
mov
scas
push
cmp
fimul
cld
pop
push
fmul
dec
jae
jne
jns
xor
inc
cdq
int
xor
test
mov
out
xor
xchg
jmp
pop
test
dec
std
clc
fdiv
mov
push
sub
in
aaa
neg
dec
imul
mov
mov
pop
xchg
cmp
cdq
cld
das
jo
popa
xor
adc
sbb
pusha
push
fadd
push
inc
pushf
and
sahf
pop
(bad)
mov
cmp
cmp
mov
xchg
(bad)
test
call
pop
aam
dec
sub
push
and
xchg
addr16
rcl
cmc
(bad)
call
pop
cdq
or
test
jge
adc
loope
jmp
mov
mov
lea
cmp
cmp
cmps
push
xchg
sbb
sub
sub
out
lods
int3
xchg
dec
shr
cmp
push
daa
movs
popf
cwde
retf
movs
mul
(bad)
repnz
mov
out
out
aas
xor
cmp
push
jae
add
out
lock
lock
lods
sar
sbb
repz
ret
pop
cs
jecxz
jo
pop
fldenv
xchg
shl
push
sub
lea
ret
push
test
repz
jne
imul
add
and
lock
dec
cdq
test
paddb
dec
(bad)
out
dec
rol
jmp
outs
fwait
leave
lea
inc
dec
pop
loop
iret
push
in
cmp
test
mov
fs
imul
sub
test
pop
movs
add
sub
push
xor
dec
rcl
out
fbld
retf
nop
arpl
(bad)
push
shl
or
retf
(bad)
add
int3
outs
mov
adc
adc
(bad)
out
add
and
lods
fucom
add
mov
mov
add
in
into
sbb
cmps
jb
data16
xchg
loopne
jns
add
test
pop
sahf
bound
xchg
xchg
(bad)
out
movs
loopne
pop
and
retf
sti
jg
repz
and
add
(bad)
lock
xor
out
add
loope
sub
push
jl
(bad)
mov
pop
inc
popa
fwait
enter
add
push
retf
or
mov
or
mov
pop
jp
cdq
inc
fbld
ins
fwait
add
scas
in
jp
cmps
mov
or
adc
sbb
sub
rcl
popf
scas
(bad)
dec
push
adc
in
add
ror
adc
and
inc
jbe
add
mov
cmps
cli
out
jns
jmp
fucomip
sub
in
ja
shr
fbld
inc
xor
add
xchg
adc
mov
jge
inc
aam
lahf
xchg
cs
pop
out
pop
ins
mov
mov
inc
lds
xchg
ret
(bad)
mov
aaa
pop
push
mov
inc
push
mov
sbb
popa
lock
adc
popf
push
outs
retf
stos
ficom
dec
push
inc
jmp
pop
cdq
in
mov
push
xchg
test
pop
hlt
(bad)
hlt
or
jge
push
enter
sub
imul
xchg
out
push
mov
xchg
pop
daa
or
fstp
or
sub
mov
sbb
cmp
mov
xlat
ss
repz
jne
sub
inc
inc
mov
pop
jno
and
jb
(bad)
into
mov
aam
std
xor
mov
out
test
xchg
fbstp
mov
xor
jmp
lods
xchg
es
mov
mov
push
sub
pop
xor
mov
jns
inc
pop
push
out
sbb
cmc
sub
pop
out
inc
sub
pop
movs
mov
fild
sbb
mov
jmp
xchg
shr
popf
mov
fwait
lods
repz
pusha
add
mov
push
mov
mov
mov
jo
leave
ss
add
int3
icebp
mov
ret
dec
popa
ds
mov
adc
push
add
loope
or
xor
loope
aam
inc
sub
push
push
adc
gs
stc
fdivr
test
xchg
xchg
push
sbb
xor
xchg
mov
out
cmp
cmp
test
pop
sbb
and
mov
data16
dec
retf
clc
jnp
nop
imul
mov
mov
call
daa
jge
repz
cmp
push
sbb
pop
xor
xor
test
jae
fmul
inc
jmp
cs
add
outs
mov
push
inc
add
mov
push
fs
gs
int3
stos
pop
shl
retf
test
fwait
jmp
test
xor
sbb
push
sbb
pop
sub
cwde
jmp
xor
sbb
stos
inc
jbe
minps
and
sbb
dec
dec
xlat
inc
stos
push
push
aas
fbstp
xor
loopne
pushf
cmps
xor
sets
push
jp
aam
out
jnp
jle
and
mov
stos
jmp
sbb
popa
stc
outs
push
dec
add
fild
xor
enter
in
jle
xchg
mov
adc
dec
into
dec
and
clc
cmp
jnp
inc
jne
shl
out
hlt
shl
mov
scas
nop
in
test
(bad)
jle
jno
inc
daa
shl
mov
ja
pop
mul
jne
iret
(bad)
sti
push
and
pop
xor
mov
dec
mov
cmp
and
cli
enter
xchg
xor
call
lds
mov
mov
sub
mov
jg
push
jge
call
(bad)
and
fidivr
fidivr
xor
pop
push
pushf
cmp
lods
fiadd
mov
mov
test
xor
pop
dec
inc
mov
or
jg
sbb
rcr
icebp
sbb
mov
jl
call
sub
dec
dec
push
lods
mov
scas
sbb
ret
mov
fld
jbe
lds
dec
ds
inc
icebp
push
fiadd
(bad)
pop
inc
adc
sar
push
out
mov
inc
pop
xchg
outs
mov
cmovns
arpl
cmp
sti
fidivr
push
fild
lahf
ins
dec
outs
pushf
adc
nop
push
dec
pusha
sbb
push
imul
inc
sti
inc
add
push
and
cmp
sar
shl
call
mov
cs
mov
fs
pop
cmp
icebp
pushf
mov
cwde
or
out
(bad)
int3
test
addr16
shl
push
adc
sub
xchg
dec
ins
sub
sti
push
add
sar
pop
es
out
xchg
cmp
add
xor
js
cmp
sbb
loop
or
mov
int3
test
popa
xlat
rol
icebp
adc
inc
add
div
push
retf
pop
dec
fs
jo
mov
repnz
cmp
jnp
fcomp
push
mov
xchg
fmul
jmp
sub
mov
fsubr
ds
test
mov
jp
and
add
adc
imul
mov
xor
cdq
xchg
jo
inc
mov
cmps
xlat
mov
mov
and
mov
cdq
or
in
or
jecxz
jnp
mov
push
cdq
inc
cmc
cmp
dec
inc
mov
pop
xlat
out
push
ret
lea
mov
push
aas
enter
mov
push
das
pushw
cwde
cmp
pop
in
xor
inc
je
dec
outs
std
shl
or
ret
popa
and
mov
imul
aad
adc
pop
shr
rol
mov
repnz
movs
sbb
rol
ror
jno
cwde
pushf
xor
cmps
push
leave
loopne
sqrtps
pop
fcomp
jl
push
add
movs
xor
sub
scas
push
js
call
in
outs
(bad)
jmp
jae
sub
rol
scas
imul
rol
jns
pop
stc
cmp
das
ins
repnz
xlat
xchg
repz
imul
ror
bnd
jb
div
xor
aam
pusha
push
(bad)
xchg
sub
mov
leave
pusha
sub
ror
outs
pop
out
(bad)
int
jmp
call
lods
icebp
outs
xor
add
retf
sbb
int
pop
jg
mov
test
or
dec
mov
dec
xchg
sbb
or
sub
lock
or
pop
shr
xchg
movs
dec
xor
out
test
mov
addr16
scas
repz
sbb
mov
je
pop
adc
cmp
clc
inc
jae
into
and
jmp
mov
popf
and
cmps
leave
add
pop
ja
xchg
add
jbe
cmp
mov
mov
pop
jnp
xchg
loop
mov
ret
dec
xlat
jb
nop
inc
fidivr
xor
add
xor
pop
out
or
fdiv
fmul
ror
xor
out
cli
mov
scas
repz
xor
call
lods
push
mov
retf
ins
bound
cmp
push
cdq
xchg
jg
mov
hlt
(bad)
enter
movs
ret
clc
mov
mov
ins
fs
lods
fnsave
push
mov
sub
inc
int3
pop
and
push
pop
and
and
push
xchg
add
cmp
sub
nop
sub
sbb
jmp
hlt
and
mov
sbb
jl
into
retf
scas
stos
std
mov
test
sub
inc
and
adc
jl
sub
loop
outs
stc
mov
jecxz
pop
xchg
pop
mov
or
stos
sbb
aam
ds
aad
dec
out
mov
stc
inc
cmp
into
dec
cwde
(bad)
pop
lock
mov
and
lods
jmp
xchg
inc
sahf
jecxz
in
xchg
and
jo
cld
test
fdiv
pop
adc
rol
sub
(bad)
sbb
or
hlt
(bad)
cmp
jle
xor
arpl
inc
xchg
(bad)
cli
aas
jmp
gs
test
mov
xchg
fcmovu
or
enter
repz
push
(bad)
aad
sbb
je
or
mov
in
mov
xchg
ret
mov
xor
jb
leave
iret
push
xchg
adc
jno
inc
push
retf
mov
pop
push
mov
fild
cmc
ret
mov
popaw
add
mov
loopne
jns
call
jno
aad
ror
or
cmp
xchg
jmp
lea
pusha
pop
movups
dec
xchg
xlat
movs
xor
mov
jb
inc
jmp
sub
xor
sti
repnz
stos
outs
popf
arpl
push
pop
cmp
aas
inc
and
hlt
shl
mov
imul
fld
push
mov
hlt
pusha
mov
sub
test
cdq
cmp
aad
pop
fidiv
gs
and
sbb
loopne
lahf
push
bnd
lds
rol
scas
mov
mov
dec
repnz
ds
push
and
adc
int
gs
sti
leave
add
sti
retf
icebp
and
cmp
jmp
div
mov
mov
aaa
std
mov
adc
cld
leave
test
(bad)
idiv
or
sub
cmps
clc
std
dec
imul
stos
or
pop
scas
or
test
push
leave
and
inc
inc
out
ret
jbe
and
stc
mov
pop
xchg
aaa
cli
scas
loop
mov
add
jp
fcom
js
add
mov
cmps
inc
jle
mov
xor
and
test
into
adc
mov
ret
scas
movs
dec
adc
inc
ret
xor
cmp
scas
pushf
rcl
inc
mov
jmp
xchg
in
dec
jmp
pop
mov
push
add
sbb
inc
xor
mul
push
mov
sahf
xchg
pusha
pop
and
mov
stos
push
(bad)
dec
add
sub
dec
push
mov
sub
jnp
xor
fld
daa
pop
fnstcw
enter
mov
aas
lods
inc
pop
cmp
mov
sbb
cmp
lods
or
push
jno
mov
xor
aad
into
jns
mov
outs
mov
movs
jecxz
cmc
xor
dec
dec
pop
(bad)
jo
or
ins
or
test
xchg
mov
xor
rol
paddq
es
retf
int3
push
inc
icebp
mov
lods
sbb
and
jno
(bad)
hlt
es
loope
sbb
xor
ss
push
hlt
jne
xlat
ins
call
jo
outs
cmp
or
and
popf
test
jo
adc
call
fsubr
call
pop
mov
ror
inc
in
test
repz
loope
cld
push
and
fs
xor
mov
ja
lea
cmps
adc
clc
dec
dec
add
pop
cmp
push
push
lock
ror
arpl
inc
inc
test
fdivr
pusha
xchg
(bad)
sbb
cli
cmp
xchg
and
mov
jmp
shl
and
sbb
das
pop
mov
into
sbb
fdivr
sbb
not
(bad)
pop
call
fs
sub
xchg
pop
test
push
jmp
retf
out
mov
pop
inc
jge
sbb
cmp
mov
push
outs
sbb
push
and
(bad)
mov
data16
cwde
sbb
leave
ins
les
imul
sti
lea
inc
inc
fist
mov
int
adc
and
daa
data16
mov
pop
xor
cmp
or
push
int
push
cs
inc
and
fwait
xchg
enter
xor
cmp
jne
fisubr
mov
sub
pop
rcr
jmp
adc
mov
in
fisubr
ret
add
nop
mov
test
mov
or
in
xchg
dec
pop
adc
and
adc
or
ja
adc
iret
in
mov
jbe
xor
mov
mov
pop
jo
imul
sbb
popf
mov
sbb
mov
movs
pop
(bad)
nop
ja
sub
retf
loopne
outs
les
ss
sub
inc
push
xchg
xchg
in
cmp
mov
cmp
mov
jne
mov
inc
push
in
jmp
push
pop
xchg
cmp
xor
jne
dec
jb
rol
or
lds
xlat
sbb
repz
mov
std
add
or
sbb
xchg
clc
pop
sub
jbe
ret
push
mov
lock
cmps
std
jg
rcr
movs
pop
or
lea
jno
mov
push
stc
scas
movs
cmps
xchg
xor
mov
mov
inc
mov
loopne
xchg
ror
gs
out
loopne
out
cmp
pop
or
js
je
popa
mov
jge
push
pop
js
inc
clc
push
js
dec
mov
or
ror
mov
jbe
inc
adc
push
pop
in
pop
jbe
(bad)
lds
in
dec
jge
or
xor
cmp
adc
inc
mov
cld
or
push
mov
sar
and
and
jo
cs
inc
call
stc
add
push
std
in
adc
sub
xchg
sahf
and
dec
sub
mov
pop
mov
out
icebp
mov
or
adc
call
or
cmps
repnz
add
ret
arpl
stos
call
or
jne
mov
retf
shl
mov
dec
out
xlat
fwait
and
imul
pusha
jbe
sub
adc
or
sub
mov
dec
mov
sub
icebp
add
xchg
imul
sar
leave
je
xchg
add
mov
lea
jecxz
jo
dec
lahf
inc
xchg
add
mov
out
test
scas
cmc
mov
add
jl
and
jbe
dec
(bad)
jbe
mov
or
inc
pushf
dec
dec
not
dec
(bad)
and
lds
jnp
sub
adc
gs
sahf
jecxz
retf
lds
dec
mov
mov
loopne
cmp
or
out
fisubr
sbb
jb
daa
cli
inc
mov
jecxz
repz
ins
jne
push
pop
mov
push
rol
inc
cld
xor
xor
shl
lahf
ds
pop
dec
cdq
pop
pop
jne
or
and
loop
call
mov
push
and
popf
pop
icebp
in
jmp
std
jns
ss
pop
cs
test
sahf
imul
pop
out
iret
cmp
xor
push
fistp
inc
fidivr
add
aas
and
push
jno
clc
fisub
(bad)
loope
cmp
jp
into
sbb
add
push
test
cwde
mov
es
cmp
xor
mov
mov
xchg
or
cli
shr
mov
adc
xor
push
bndldx
imul
push
pop
rcl
in
(bad)
fidiv
jbe
adc
xor
test
xor
loope
add
dec
cmps
aas
cmp
mov
je
xor
and
ja
in
push
js
das
daa
cmp
xlat
(bad)
pop
inc
(bad)
push
loop
ret
nop
pusha
pop
imul
mov
xlat
cdq
test
and
std
and
ins
pop
fcomp
fmul
mov
adc
enter
jb
lods
dec
inc
mov
js
mov
lds
and
push
cwde
jge
mov
mov
sub
sub
outs
and
addr16
sbb
cmc
sbb
mov
out
nop
(bad)
imul
test
bound
jg
lods
add
adc
retf
jmp
dec
rol
pop
cmp
retf
inc
push
pop
mov
outs
cmps
outs
push
add
mov
pusha
pop
xchg
jmp
inc
fist
outs
movs
sub
mov
ja
mov
adc
ins
and
adc
adc
std
cdq
add
sar
fs
adc
pop
add
add
inc
call
mov
inc
jmp
(bad)
jg
and
push
ja
xor
aaa
cli
inc
jge
jne
das
xor
pop
dec
arpl
popa
mov
pop
mov
xlat
mov
push
dec
int
sub
jp
and
scas
ss
fdiv
push
sbb
add
or
push
ret
imul
aas
daa
es
out
sbb
or
adc
gs
sbb
daa
cdq
cld
xchg
xor
add
shl
into
sub
adc
xor
aad
xor
dec
cwde
popa
stos
xor
test
xchg
lods
or
fiadd
cmps
cmps
(bad)
scas
lahf
cmps
mov
sahf
dec
in
cmc
mov
ror
mov
mov
xlat
inc
xlat
lods
add
(bad)
sbb
inc
mov
cli
inc
mov
push
ret
clc
sbb
ja
xchg
and
movs
lea
aad
std
inc
sub
imul
mov
push
add
dec
jb
add
lods
out
jb
pop
loopne
xchg
and
shl
repnz
xchg
xlat
push
xchg
(bad)
sub
mov
xor
loope
loopne
cmc
paddsb
pushf
in
xlat
ins
mov
push
sbb
dec
adc
xor
inc
enter
mov
cmc
mov
push
gs
jge
cmp
in
cmps
les
fcomp
lahf
sbb
inc
inc
dec
popa
mov
pusha
imul
cmp
pop
std
iret
dec
aas
inc
mov
fcomp
mov
mov
icebp
sub
outs
movq
inc
outs
pop
int3
pop
xchg
jle
jmp
cmp
mov
push
push
adc
and
add
(bad)
jne
cmc
movs
pop
ret
(bad)
jmp
xlat
xor
cmps
adc
out
dec
ret
jge
imul
retf
int
sbb
inc
sub
test
ror
iret
push
sti
rcr
push
xor
hlt
dec
test
xor
mov
stos
sahf
out
stos
mov
bound
pop
jne
icebp
je
jge
adc
mov
outs
js
outs
out
xor
arpl
dec
sbb
sub
(bad)
or
push
or
jmp
into
ret
out
mov
ror
aam
test
dec
(bad)
in
jmp
adc
repnz
cmp
es
pop
test
in
or
retf
ret
xor
mov
jge
test
jp
ins
dec
jne
cmp
(bad)
(bad)
dec
sbb
sbb
fadd
pop
rol
fwait
and
jo
call
jo
inc
ja
and
aas
sbb
js
call
test
int3
mov
xchg
fbstp
js
(bad)
(bad)
xchg
inc
mov
push
shl
push
inc
inc
cmp
pop
aam
inc
mov
popf
in
outs
ins
int
std
and
repz
dec
(bad)
(bad)
popf
pop
movs
out
pop
jecxz
mov
mov
xchg
push
sub
cdq
and
fprem
push
in
ja
push
stc
pop
fisub
push
mov
call
daa
addr16
or
loop
push
icebp
bound
movs
test
push
adc
mov
icebp
ss
ret
retf
aam
scas
or
lods
mov
jg
(bad)
mov
push
xor
jg
xchg
hlt
lds
mov
aas
inc
fistp
cmp
sub
fild
sub
jle
push
sahf
or
push
push
mov
xchg
dec
les
or
repnz
adc
add
les
gs
sbb
in
fwait
cmp
ds
(bad)
xchg
test
adc
outs
lahf
bound
mov
inc
aad
fistp
hlt
add
adc
mov
aaa
leave
popf
ins
sub
lds
(bad)
adc
push
sub
fldcw
mov
xchg
pop
or
nop
and
sar
push
push
push
int
push
shl
imul
cmp
div
sub
cmp
nop
cmp
pop
repnz
fisttp
jbe
scas
inc
out
sahf
jmp
shl
cmovnp
in
ret
ret
adc
cmc
cmp
cmp
jo
retf
hlt
dec
pop
sub
mov
sahf
scas
jecxz
(bad)
jne
iret
and
enter
fcomp
xchg
sub
pusha
int
popa
sub
mov
inc
int3
push
ins
(bad)
or
ins
pop
sbb
and
call
lods
mov
push
fisttp
cwde
pop
xor
adc
dec
xor
mov
and
dec
ror
mov
push
pop
ds
and
out
mov
pop
cmps
shl
sbb
fnstcw
lahf
push
xor
sti
in
xor
cmp
xchg
sahf
es
jne
dec
cmp
sub
push
test
mov
pop
call
sub
push
push
mov
sub
fnstsw
mov
(bad)
hlt
imul
mov
or
lods
lods
xor
jo
lds
cmp
dec
pop
xor
leave
mov
je
(bad)
call
inc
dec
retf
pop
lahf
dec
add
dec
daa
lock
call
push
push
xchg
mov
scas
sbb
loopne
xchg
dec
push
sbb
fs
mov
gs
pop
dec
out
gs
and
das
daa
(bad)
xor
ds
push
xchg
jp
lock
sbb
lock
lahf
(bad)
xor
add
(bad)
dec
test
ins
cmps
push
loope
ror
mov
push
daa
jne
mov
xor
fisttp
mov
stos
int
fadd
pop
(bad)
push
loop
add
lds
fwait
shr
clc
push
xchg
dec
jb
dec
sbb
mov
rcr
push
sbb
mov
aam
cmps
int3
arpl
cdq
loope
rol
inc
iret
mov
sbb
push
mov
xor
das
scas
or
ss
out
(bad)
jae
mov
sbb
test
dec
loopne
inc
aas
ja
push
ffree
jne
dec
ds
mov
pop
or
call
mov
inc
sub
adc
jg
fsubr
out
inc
popf
mov
(bad)
std
xor
arpl
nop
hlt
pop
popf
lock
mov
push
jnp
xchg
cmp
pop
cmp
add
clc
and
inc
mov
ret
ins
sub
aam
lods
mov
xchg
ror
leave
fst
fcmovnb
sub
dec
sahf
cli
rol
sub
pop
loope
ss
imul
pop
retf
cwde
mov
(bad)
fstp
cmp
test
out
cmp
into
hlt
bound
sbb
lea
cmp
neg
(bad)
push
leave
enter
call
inc
xchg
aaa
sub
push
stc
mov
push
sub
loopne
cld
cld
push
cmp
in
pop
mov
sbb
sub
sbb
cmp
jmp
push
dec
push
mov
in
bnd
jb
outs
cmps
pushf
mov
daa
jnp
or
xchg
pop
push
popf
push
cmps
and
push
sti
call
jl
and
cmps
pop
mov
in
stos
cmp
sub
stos
imul
mov
sub
scas
leave
add
xor
jg
jbe
lea
adc
jb
mov
or
out
pop
cmps
repz
enter
bsr
pop
stos
and
cwde
ficomp
test
adc
fisubr
or
mov
cwde
in
fiadd
adc
movs
ret
dec
in
jo
and
mov
outs
jge
xor
jl
cmps
cld
mov
popa
xor
loopne
in
out
retf
test
sub
cli
les
fwait
and
mov
repz
jecxz
imul
retf
inc
xor
xor
jle
push
push
cmc
and
movs
jg
stc
in
add
and
jne
cs
sahf
(bad)
ds
inc
sbb
pop
retf
mov
jnp
ficom
movs
mov
push
stos
loopne
mov
fisubr
cwde
mov
lahf
pop
sbb
inc
clc
sbb
fisub
xchg
lea
outs
inc
pop
adc
add
out
ret
xor
dec
js
jle
jl
cmp
sbb
out
sub
mov
stc
push
dec
sub
mov
dec
push
pop
(bad)
cmp
mov
push
cld
jne
inc
imul
dec
jmp
nop
imul
jno
lock
cmp
pop
or
pop
cmp
arpl
cmp
adc
imul
pop
fwait
pop
in
movs
xor
aam
loop
push
enter
aad
pusha
inc
jns
(bad)
imul
arpl
adc
mov
in
enter
mov
sbb
js
js
clc
fst
cmc
and
xchg
jmp
sbb
xchg
adc
sub
ins
pop
inc
test
mov
nop
jo
mov
push
pop
out
pop
sahf
ja
(bad)
jecxz
loop
es
addr16
or
mov
or
mov
cmc
mov
int3
add
sbb
xor
movs
popf
inc
popa
pop
seta
xor
jb
bound
int
arpl
pusha
aas
ret
(bad)
sub
sub
dec
pop
ret
jne
ja
loopne
test
add
into
cmc
adc
scas
mov
push
test
xchg
neg
cmps
nop
movs
cmp
imul
cmps
enter
dec
hlt
adc
movs
lds
pop
inc
sub
aam
cmp
inc
lods
sub
mov
pop
cld
mov
and
das
push
je
enter
cs
imul
and
js
cld
xor
push
cdq
popa
add
push
or
fnstenv
ret
jbe
jle
or
mov
xchg
pop
mov
mov
push
mov
imul
sub
cmc
mov
adc
out
iret
jns
pop
fwait
inc
sbb
inc
jle
rcr
xor
pop
sbb
mov
aas
mov
push
outs
popf
jnp
pop
imul
jns
shl
jle
loopne
pusha
jl
xlat
lock
mov
xchg
push
jmp
test
gs
aaa
xchg
repnz
rcl
into
fwait
clc
fldcw
dec
rol
pusha
sub
dec
jb
out
pop
dec
xchg
cmp
imul
into
out
nop
xchg
imul
arpl
dec
mov
or
rol
or
out
cmc
cs
nop
jmp
frstor
push
test
inc
loop
fldcw
or
hlt
aad
lock
lahf
movs
daa
jmp
and
xchg
(bad)
jne
shl
add
push
je
jl
sbb
loop
mov
icebp
push
xor
lds
add
pop
fld
add
xor
jg
mov
add
ret
xor
mul
shl
fisub
loop
xlat
push
and
fstp
test
andnps
std
xor
cmps
xchg
out
js
push
test
push
enter
ja
fsubr
push
jo
and
sbb
sbb
sub
fwait
jo
in
jb
lahf
push
nop
jl
test
cmp
pusha
dec
test
cmp
ret
call
jmp
xchg
xor
jmp
ins
xor
xchg
jns
ror
mov
xor
ss
push
rol
jge
jl
stos
pop
or
push
cmp
scas
adc
in
(bad)
cmp
adc
inc
data16
rcr
jae
cwde
dec
out
fisttp
lods
fs
into
aaa
dec
inc
mov
xchg
jno
jecxz
and
ins
sub
inc
gs
adc
pop
push
adc
test
jge
mov
xor
jp
loopne
mov
pop
inc
(bad)
dec
clc
cmps
jecxz
loopne
inc
fdivr
adc
and
mov
cmp
imul
adc
ins
xchg
mov
inc
lds
out
push
and
add
adc
and
mul
loopne
rol
jge
pusha
jmp
push
or
daa
(bad)
fldenv
or
pop
jne
cmp
fs
adc
cmp
std
pop
imul
scas
addr16
xor
in
scas
test
fwait
xlat
and
lahf
and
ss
add
mov
cli
jnp
jecxz
lods
fidivr
outs
stos
xchg
jmp
add
retf
cmp
pop
adc
push
jl
add
scas
or
test
ret
xchg
sub
movs
repz
and
pop
in
inc
jne
push
test
test
pop
jb
mov
test
repnz
ret
mov
repz
sahf
sub
popf
repz
jl
repz
fnop
mov
and
in
add
rcr
xor
pop
shl
shl
jo
mov
(bad)
enter
mov
cdq
pop
dec
movs
js
iret
add
mov
es
xor
sbb
nop
and
fdivr
mov
hlt
sub
ror
scas
mov
outs
jno
pushf
call
call
sub
popa
icebp
addr16
cwde
add
mov
in
(bad)
and
sti
push
push
or
sar
adc
dec
test
dec
in
sub
jp
add
cmp
(bad)
cmp
jp
pop
push
pop
sub
inc
mov
mov
jns
ins
stos
mov
xor
cli
mov
arpl
push
mov
std
popa
aad
std
mov
xor
mov
adc
xor
sbb
xor
xchg
les
cdq
test
pop
mov
mov
pop
leave
int
in
aas
sub
call
cmp
adc
sbb
fs
lea
jae
push
lock
popf
pop
sub
call
push
and
lds
push
mov
adc
jne
fwait
mov
or
lock
adc
mov
scas
pop
mov
pushf
xor
bnd
xor
iret
adc
jg
aam
ds
lds
icebp
movs
dec
inc
int
mov
sbb
mov
jnp
aaa
jecxz
test
and
xor
adc
out
jne
pop
pop
cmp
lods
iret
repz
shl
fst
or
inc
fadd
mov
pop
in
in
dec
in
xor
push
sub
cs
pop
retf
push
add
rcr
repnz
mov
in
sbb
out
rcr
adc
push
xchg
jbe
fs
xor
out
inc
hlt
test
mov
mov
out
inc
adc
pop
push
jne
push
test
adc
(bad)
out
and
ins
xchg
adc
push
or
add
dec
int3
ror
(bad)
jo
inc
mov
inc
jle
(bad)
cdq
iret
jmp
out
jl
jmp
jecxz
xchg
lods
pop
pop
(bad)
aad
jle
and
lahf
imul
mov
jge
inc
stc
cmp
(bad)
mov
or
add
mov
out
aam
int
mov
mov
inc
retf
test
repz
inc
into
xchg
dec
cwde
mov
push
cmp
aad
scas
cmp
pop
inc
sub
xor
fisubr
push
repz
out
sub
add
(bad)
jecxz
adc
sbb
jnp
jg
jmp
ins
sti
dec
add
jecxz
push
xchg
ror
sub
jmp
dec
retf
les
xor
xor
lock
cdq
arpl
xchg
(bad)
push
xchg
mov
pop
out
mov
jns
cmp
jnp
repz
shr
leave
pop
sbb
pushf
cmps
push
popa
ret
cmp
jle
pop
lods
fidiv
sbb
sub
scas
ds
sbb
mov
or
loopne
enter
adc
mov
sbb
mov
and
(bad)
fdivr
mov
in
add
mov
mov
adc
xorps
out
cmps
mov
ins
pop
lods
lock
push
dec
retf
dec
lahf
invd
cdq
add
sbb
fdivrp
add
xchg
xlat
mov
xchg
mov
and
mov
inc
bound
xor
xor
xor
mov
inc
push
sub
or
inc
data16
dec
fild
icebp
jmp
jno
mov
xor
adc
das
clc
int
int3
push
ins
sub
into
push
shl
fisubr
push
xor
xchg
arpl
jbe
shl
into
ret
jb
add
lea
xor
outs
mov
rol
mov
(bad)
je
xchg
jno
inc
(bad)
out
shl
push
sub
fcomp
nop
dec
ja
or
neg
outs
cmc
pop
movs
dec
sub
mov
jge
fidiv
cmp
test
int
fist
inc
or
dec
out
push
call
mov
push
cmp
add
lods
xor
lock
ja
pop
sub
mov
add
movs
ficomp
push
push
call
sbb
or
adc
jne
arpl
xlat
cmp
push
in
xor
stc
test
fsubr
mov
das
jp
xor
mov
out
pop
ret
aaa
aas
push
cdq
movs
popf
(bad)
and
add
sbb
sahf
movs
(bad)
cmp
loope
xor
jb
stos
sbb
or
add
test
popa
ins
cwde
inc
sub
out
mov
inc
xchg
or
test
xor
mov
out
movs
out
shl
inc
aam
push
lods
pop
xchg
addr16
popf
mov
dec
ret
data16
inc
rol
xchg
ss
mov
das
aaa
imul
xchg
imul
loop
xor
cmp
mov
leave
stos
dec
lock
cli
icebp
int
call
outs
sbb
div
mov
jmp
(bad)
bound
test
nop
cmps
mov
lods
sbb
fld
jno
or
mov
push
push
movs
sbb
cmps
cmp
cli
xchg
adc
jge
imul
pop
sub
loop
sbb
shl
adc
xchg
xor
mov
sub
adc
mov
jnp
xor
mov
out
xchg
push
mov
add
daa
xchg
movs
ja
repz
test
adc
jl
aas
(bad)
jbe
push
cmp
add
push
inc
jle
in
in
test
lahf
adc
cmp
(bad)
xchg
sbb
pop
xchg
lock
leave
add
lods
(bad)
cvttps2pi
repz
stos
popa
nop
fsubr
fist
repz
rol
mov
scas
rcr
icebp
pusha
pcmpgtb
or
inc
and
xchg
fs
hlt
mov
mov
sub
mov
push
int3
mov
add
jmp
mov
outs
aaa
out
xchg
call
adc
out
les
sbb
jecxz
ror
stos
or
jmp
or
sbb
adc
popa
hlt
imul
cmps
fist
jbe
sub
pop
jl
pop
push
cmp
mov
xchg
fidivr
ret
push
dec
rcr
lock
or
sub
add
test
and
fidivr
fsubr
mov
mov
or
nop
inc
push
sti
es
jle
push
test
dec
mov
mov
lahf
les
dec
lahf
les
push
sbb
rol
loop
mov
mov
scas
mov
in
or
push
lahf
add
jg
scas
popf
add
dec
add
and
outs
shl
and
fldl2t
xchg
test
adc
call
pop
test
lahf
inc
pop
jl
dec
mov
mov
int3
push
cmp
lods
dec
mov
fist
gs
jo
outs
data16
xlat
mov
mov
add
push
or
pop
lods
in
loope
inc
push
mov
out
dec
vorps
and
add
add
pop
scas
cmp
shl
xor
rol
fisub
inc
call
sub
nop
leave
mov
cmovg
ja
push
das
mov
int
push
and
and
push
leave
add
gs
(bad)
outs
cmp
nop
xor
ins
cmp
popa
sti
sbb
(bad)
(bad)
mov
mov
fist
adc
in
xchg
leave
div
lds
jnp
addr16
or
add
jns
leave
adc
cs
iret
test
push
push
cmp
shl
addr16
ins
jle
push
add
push
sbb
(bad)
aas
out
mov
imul
sbb
mov
xor
or
in
cs
call
push
jg
ins
lods
hlt
movs
or
mov
in
jle
sar
and
adc
cwde
adc
jne
lods
mov
enter
(bad)
inc
adc
jo
rol
fwait
nop
shl
scas
jmp
cwde
inc
sub
std
adc
jne
aaa
call
ins
ret
mov
xchg
or
dec
inc
stc
leave
(bad)
dec
inc
mov
mov
pushf
xchg
mov
push
les
imul
sti
sbb
push
mov
das
mov
adc
cli
dec
(bad)
mov
mov
lods
sbb
daa
neg
dec
lods
mov
ror
addr16
in
xor
xlat
cs
pop
sbb
int3
fsub
xorps
mov
mov
iret
cmps
aaa
fiadd
and
cli
jbe
fs
fld
sub
call
xchg
pusha
xchg
jae
or
and
and
fcomp
xchg
dec
in
or
adc
cld
mov
mul
mov
push
push
in
xor
(bad)
pop
in
aad
xchg
rcr
lods
dec
mov
pusha
bound
pop
scas
pushf
xchg
jnp
push
dec
pop
sbb
enter
sub
xchg
pop
fsubr
test
jno
jns
sbb
daa
fcmovnu
mov
and
mov
mov
imul
test
pop
test
sub
shr
ins
call
ins
jno
add
test
and
dec
loopne
cmps
sbb
inc
or
adc
mov
sbb
mov
adc
inc
and
cwde
inc
daa
pop
cmp
jb
scas
jg
sbb
(bad)
retf
leave
movs
mov
fnstcw
dec
pop
sub
and
mov
jo
popa
pop
pop
and
xchg
cmp
jne
sbb
out
and
data16
fcomp
xchg
loop
outs
out
sbb
jmp
push
inc
and
imul
mov
mov
dec
push
lds
adc
dec
fidivr
jo
fcomp
cmp
mov
pop
sub
loopne
call
mov
cmp
mov
mov
stos
dec
mov
iret
into
and
push
hlt
mov
mov
xchg
mov
fnstenv
inc
inc
pop
mov
imul
movs
pop
jl
ja
loopne
fild
out
xchg
aad
add
jle
out
mov
dec
pop
jg
mov
test
add
xor
enter
sub
out
mov
jg
jno
dec
call
push
jnp
and
jmp
or
mov
stos
mov
mov
inc
scas
fnstenv
hlt
push
je
imul
cli
scas
jg
daa
xchg
dec
push
mov
ret
sbb
fs
pop
into
dec
stc
mov
mov
iret
dec
clc
cmp
push
ds
(bad)
jmp
mov
mov
pop
inc
jbe
out
stc
mov
jl
mov
ret
push
mov
clc
and
cmp
dec
fsubr
cli
inc
lock
xor
pop
adc
retf
retf
adc
xchg
popa
xchg
pop
pop
or
mov
shl
add
xor
stos
pop
(bad)
mov
out
nop
sbb
das
int3
push
cmc
mov
ret
std
shr
jecxz
sbb
imul
stc
pushf
sbb
adc
daa
stos
inc
xor
ins
cdq
in
or
mov
movs
jp
jae
mov
add
nop
xor
js
movs
dec
dec
adc
cmp
cmc
pop
inc
rcl
lods
mov
add
shr
scas
stos
and
mov
and
dec
xor
out
jb
dec
add
mov
pop
push
mov
mov
lods
or
add
loopne
idiv
lods
push
sub
pop
ins
loope
mov
repz
push
add
push
lods
push
outs
scas
xchg
jp
mov
ret
add
pop
int
push
sub
popa
lock
or
jge
loope
sbb
mov
sbb
dec
loope
in
jle
sbb
push
stc
leave
mov
fcomp
add
mov
data16
ficom
repnz
and
lods
pmaddwd
xchg
push
pusha
jecxz
fwait
cli
lea
icebp
mov
cmp
cwde
pop
mov
imul
jae
cmp
mov
mov
bound
inc
mov
(bad)
mov
sub
pop
test
sub
sub
xlat
xchg
and
dec
mov
loop
rol
jnp
cmp
adc
sbb
fisub
cwde
cmp
inc
push
dec
jmp
mov
xchg
pop
das
dec
xchg
sbb
stos
or
mov
arpl
ins
es
mov
int3
es
ret
sub
out
pop
push
and
jno
sub
mov
fdivrp
mov
cmps
std
pop
retf
push
jns
mov
stc
aaa
scas
(bad)
rol
inc
in
or
or
xchg
dec
(bad)
cld
je
int3
iret
dec
dec
mov
dec
(bad)
mov
inc
inc
gs
sbb
xchg
(bad)
mov
rcl
sar
push
inc
test
pop
je
mov
fs
stos
inc
dec
inc
jb
movs
in
pop
fidiv
fwait
mov
mul
aam
gs
mov
add
mov
stos
cmp
pop
ficomp
test
add
push
jp
pop
test
pop
retf
mov
sub
inc
or
popf
xchg
xchg
adc
push
sub
in
test
lds
aam
xchg
outs
in
add
inc
pop
pop
add
in
adc
out
int3
lods
repnz
mov
cs
jns
xchg
stc
mov
loope
outs
pop
(bad)
ins
retf
and
xchg
add
sub
lods
pop
rol
fild
(bad)
mov
or
mov
in
pop
or
bound
call
rcl
ins
leave
ja
ret
pop
mov
fistp
cwde
popa
ds
xchg
inc
ret
push
push
inc
push
push
pop
neg
movs
fstp
lock
(bad)
ds
xchg
(bad)
jmp
pop
sbb
push
sub
popa
fs
cld
inc
add
ret
sbb
fwait
or
cmp
jg
test
xor
into
cmp
rcl
inc
push
push
or
cmp
xchg
nop
push
icebp
push
pop
xchg
test
mov
fsubr
iret
sbb
inc
test
scas
dec
mov
out
retf
repz
inc
ins
sbb
aam
xor
mov
mov
ret
shr
(bad)
jnp
push
out
pop
xchg
je
rcl
mov
xlat
into
push
in
mov
jmp
sbb
mov
data16
(bad)
push
push
adc
dec
inc
mov
mov
fmul
std
lea
mov
shl
add
and
push
ficomp
mov
aam
iret
xor
fistp
push
xchg
jbe
sar
stos
mov
dec
fld
mov
pop
dec
add
jnp
push
inc
cmp
sub
arpl
cmp
push
lods
les
sub
mov
fadd
ds
int
sub
lahf
lea
add
inc
sahf
sub
mov
je
rcl
cmp
scas
and
xor
movs
lahf
xchg
loope
cdq
loope
arpl
stos
cmp
ss
aad
loop
sub
imul
sbb
into
inc
(bad)
sar
cwde
mov
imul
dec
sbb
pop
and
loope
xlat
sbb
dec
imul
adc
xor
in
test
mov
jle
xor
adc
sub
div
(bad)
loopne
in
imul
jnp
jecxz
inc
sbb
hlt
popf
repz
push
aam
push
push
xchg
cmps
inc
or
mov
fimul
enter
xchg
rcl
push
push
jp
sub
lds
jne
xor
dec
add
pop
call
mov
push
or
loope
dec
ins
add
add
ss
or
lods
rol
xchg
inc
out
cmc
(bad)
call
popf
int
rcr
icebp
xchg
enter
pusha
inc
pusha
pop
add
aas
push
addr16
mov
repnz
ins
enter
inc
test
fsubrp
scas
jns
inc
sub
jbe
mov
sahf
or
sub
lds
push
mov
js
dec
jl
out
out
lock
add
jl
and
push
aaa
jge
sub
mov
cs
std
add
sub
mov
dec
popa
dec
push
sbb
mov
or
xchg
mov
or
jns
cmp
xchg
daa
xchg
pop
xor
loopne
lock
dec
call
jge
inc
in
mov
mov
call
fdivr
sbb
in
test
rol
or
ins
pop
clc
test
out
or
(bad)
dec
add
jge
std
shrd
jle
and
jb
cmps
or
mov
pop
sub
fidivr
push
es
int3
or
cdq
es
pop
test
pusha
stc
or
imul
ins
bound
add
pop
mov
int3
div
mov
shl
int3
iret
and
leave
push
mov
ja
(bad)
leave
and
out
retf
stos
jns
push
xchg
jne
outs
(bad)
bound
add
js
jmp
or
(bad)
hlt
enter
loope
icebp
add
dec
mov
cs
jmp
ret
clc
icebp
pusha
ins
sbb
mov
mov
jle
xor
cmp
retf
fadd
movs
(bad)
cli
outs
push
push
mov
add
pop
and
call
into
daa
push
cmp
lods
cmc
jge
dec
mov
ins
push
fcmovnu
push
shr
imul
aaa
adc
test
or
push
xchg
in
aaa
imul
call
leave
adc
mov
and
mov
js
jmp
int3
or
dec
jne
stos
pop
lock
pop
or
dec
cmp
nop
xchg
fwait
pop
(bad)
test
jmp
or
(bad)
cmc
mov
cmp
mov
xor
push
mov
push
and
mov
dec
xor
sub
sar
or
hlt
xchg
xor
nop
rcl
iret
inc
out
popa
cmc
sub
add
pop
je
inc
aad
shr
mov
imul
sti
cld
mov
sub
mov
mov
push
mov
or
mov
adc
popa
ficom
dec
and
cs
and
dec
test
sub
adc
add
enter
pop
retf
xchg
mov
cmp
loope
aas
mov
jecxz
mov
push
jp
enter
neg
mov
or
jmp
fstp
loopne
inc
sbb
jnp
push
into
call
fcomi
dec
or
or
mov
mov
std
cmp
adc
aam
fsubr
repz
cld
mov
inc
push
out
pinsrw
enter
push
jg
and
dec
or
fdivr
or
out
out
or
mov
popa
popa
dec
scas
xchg
mov
pop
sub
call
jae
retf
dec
fwait
pop
xchg
push
icebp
jb
idiv
mov
ins
mov
xchg
int3
daa
stc
mov
retf
in
outs
out
icebp
ja
push
(bad)
out
and
sahf
mov
cmp
aam
nop
(bad)
jns
xchg
dec
sbb
sbb
dec
adc
cwde
out
ret
ror
ds
jae
push
xchg
mov
not
push
scas
fcomp
das
sub
movs
fdivr
adc
das
and
xor
pop
xlat
fwait
enter
pusha
sbb
mov
or
inc
jo
push
push
sahf
(bad)
dec
out
mov
or
fisttp
xor
outs
pop
(bad)
scas
mov
cmp
test
or
add
lods
dec
leave
outs
rcr
(bad)
jle
push
mov
sub
dec
or
or
pop
cmp
data16
jno
jge
aas
adc
adc
sub
sbb
in
add
loope
int3
ss
xchg
jne
sar
jle
dec
xor
in
rol
sub
mov
out
cld
aam
jle
cmp
jge
jmp
pop
scas
jmp
dec
sti
lea
mov
dec
add
in
and
mov
sbb
add
lock
ins
icebp
pop
jecxz
imul
jle
dec
mov
jb
adc
mov
in
fucomi
mov
sub
aad
dec
xor
mov
dec
mov
inc
push
xchg
or
fstp
pop
push
jo
mov
hlt
mul
outs
sub
mov
mov
repnz
jle
movs
jl
xlat
test
aas
jb
or
and
aam
fldl2t
(bad)
cld
xchg
adc
cmp
adc
xchg
xchg
mov
xor
jnp
or
sub
dec
in
mov
repnz
stos
mov
retf
movs
mov
mov
adc
pusha
xor
imul
push
sub
(bad)
adc
add
pop
xor
jmp
pop
(bad)
adc
cmp
lahf
sub
(bad)
jmp
aad
sbb
in
loope
jne
std
mov
xchg
add
ja
mov
jecxz
out
pop
pop
and
stos
xchg
dec
cmp
clc
dec
out
test
(bad)
js
aaa
pop
sahf
imul
sbb
loopne
mov
out
mov
mov
mov
sbb
xor
mov
xchg
dec
sub
add
in
sbb
mov
or
(bad)
jmp
sub
mov
jge
cmps
into
sub
retf
retf
or
out
test
mov
iret
out
into
xchg
cmps
call
cld
jmp
clc
xchg
ret
or
adc
push
out
adc
test
xchg
jge
(bad)
in
lods
shr
or
add
ds
fild
loopne
cwde
dec
mov
mov
sub
sbb
push
fld
retf
imul
pop
les
or
in
es
movs
jb
mov
adc
int
(bad)
fidivr
dec
call
jle
nop
jmp
outs
pop
gs
add
mov
jno
stos
mov
ss
mov
sbb
cwde
jmp
test
cmp
icebp
cmc
cmp
adc
in
pop
shl
mov
fsub
jle
outs
movs
ds
aas
out
lock
outs
inc
push
mov
mov
sub
popf
sub
and
pop
and
sub
aad
fucom
push
jmp
aaa
(bad)
push
popf
gs
shl
push
fwait
mov
addr16
in
movs
popf
dec
add
or
ins
pop
xchg
add
sbb
mov
test
dec
aad
(bad)
fistp
out
loope
loopne
retf
xchg
pop
dec
retf
(bad)
inc
sbb
sub
mov
mov
ret
es
and
cmp
mov
popa
push
mov
test
jne
adc
mov
fdiv
sub
mov
cmp
stos
sbb
cdq
cmps
daa
out
dec
stc
cmc
jno
fnstcw
mov
or
inc
in
sub
fsubr
fstp
or
push
mov
ucomiss
pop
mov
cs
jne
inc
jg
mov
jmp
dec
inc
mov
fwait
sub
dec
xchg
pop
ds
in
adc
mov
pop
xor
mov
idiv
daa
adc
dec
imul
adc
in
or
adc
add
sbb
pusha
mov
fwait
or
pop
adc
test
sub
icebp
in
jb
and
pop
push
or
int
jae
push
int
pop
outs
(bad)
jl
mov
pop
mov
or
gs
cmp
lock
sub
mov
rcr
sub
shr
ins
cmp
jb
mov
stos
cmps
sub
adc
add
pop
icebp
jle
jl
mov
sub
aas
or
cmps
hlt
pusha
jge
mov
bound
add
xchg
pop
mov
fbstp
loopne
sub
push
pop
or
imul
mov
fidivr
and
pop
add
in
test
or
ds
mov
in
sar
or
sbb
cmp
sbb
or
xor
mov
(bad)
xchg
dec
push
push
test
mov
hlt
push
and
push
jg
test
sbb
out
jbe
shr
mov
mov
add
ss
xchg
outs
and
clc
mov
movs
inc
push
test
lea
sbb
cmp
and
shl
xchg
repnz
scas
pop
imul
ret
pop
repz
pop
cmp
xchg
ret
movs
mov
cmp
cmp
outs
rcr
push
jno
and
adc
mov
push
shl
push
sahf
push
rcl
push
stc
mov
sbb
xchg
jo
cdq
xchg
push
mov
addr16
sub
lds
in
sub
movs
call
mov
mov
std
push
in
or
and
cld
mov
aad
add
mov
or
cmps
call
jbe
aad
fdivr
dec
mov
mov
imul
daa
inc
inc
mov
sub
dec
repz
iret
fxch
adc
inc
dec
sbb
xchg
pop
inc
and
dec
mov
(bad)
jp
adc
ja
imul
pop
ret
sahf
and
jmp
xchg
cmp
sti
mov
movs
adc
mov
test
retf
jg
pop
lods
cli
push
sbb
jmp
enter
pop
fild
movs
enter
gs
add
pop
add
adc
add
lods
dec
pop
xchg
or
imul
outs
dec
dec
mov
push
inc
jge
rcr
cli
sub
mov
hlt
in
sbb
pop
sbb
daa
inc
sub
adc
jnp
pop
aas
loop
stos
mov
retf
mov
shl
mov
sub
pop
sub
xor
jne
ds
cmps
fcomp
call
mov
stos
mov
retf
inc
or
cmp
call
call
xor
mov
cs
cmc
add
clc
fwait
icebp
dec
fmul
inc
cmps
loopne
or
mov
cs
adc
jo
ret
rol
ss
cmp
stos
adc
aad
xchg
fucomi
adc
fs
call
pop
xchg
mov
add
jmp
cmp
inc
dec
sub
test
stos
and
xchg
add
jbe
in
bound
into
pop
add
jp
xchg
mov
add
jle
pop
mov
je
loopne
test
add
stos
test
dec
sub
inc
cmp
pusha
sti
mov
and
add
movs
adc
add
xor
out
mov
and
dec
mov
cmp
clc
fiadd
sub
neg
movs
sbb
adc
sahf
push
(bad)
mov
push
mov
push
(bad)
mov
fsub
xchg
and
jmp
lods
mov
xchg
push
push
test
mov
popf
enter
jbe
push
js
jg
push
mov
dec
push
arpl
push
fidivr
scas
scas
or
popf
mov
push
inc
xor
or
or
dec
mov
ficomp
dec
adc
adc
mov
sbb
test
jae
pop
mov
nop
test
sub
clc
push
mov
fld
fild
inc
sbb
hlt
test
test
nop
sbb
ins
and
aaa
jnp
push
into
mov
imul
call
lods
xchg
sub
jmp
lods
lock
js
adc
sub
cmp
mov
jns
mov
xchg
retf
dec
js
jne
(bad)
cmp
stc
arpl
cmc
loopne
mov
jbe
inc
aaa
jge
repnz
sub
mov
retf
push
sbb
in
dec
pop
pushf
adc
dec
icebp
(bad)
popf
ss
mov
mov
jno
inc
outs
xchg
xchg
lea
cld
nop
or
imul
inc
cmp
cmp
or
fs
mov
dec
or
rcl
icebp
fidivr
pop
fnstenv
(bad)
and
xchg
xor
mov
outs
jecxz
mov
stos
push
adc
cmp
ficomp
add
jl
jl
test
xor
or
adc
(bad)
daa
jmp
cwde
arpl
add
popa
fcom
xchg
scas
popf
mov
in
stos
xchg
mov
daa
clc
les
sbb
push
add
cld
mov
fistp
push
inc
add
rol
mov
(bad)
or
xlat
cwde
fcomp
(bad)
pop
jmp
fdivr
dec
iret
loopne
adc
inc
popa
or
or
sar
(bad)
pop
jg
lods
pop
sbb
jp
cmp
ins
arpl
xchg
add
outs
jmp
and
adc
dec
shl
adc
inc
cmp
and
test
(bad)
daa
shr
daa
mov
jg
dec
fs
psadbw
arpl
and
jb
add
mov
adc
cmp
and
or
jmp
nop
jp
not
push
je
mov
jg
aad
icebp
inc
(bad)
push
imul
test
dec
and
shr
cmp
adc
cmps
pop
repz
sbb
mov
pop
sbb
sahf
push
jb
and
xchg
inc
add
ret
pop
jecxz
xchg
jne
ror
mov
sub
movs
jle
pop
mov
lahf
outs
dec
retf
addr16
jmp
mov
addr16
and
xor
loopne
mov
and
arpl
dec
jmp
sbb
push
and
retf
call
ja
out
aad
stc
push
icebp
test
jmp
push
sbb
das
(bad)
stc
inc
push
gs
repnz
in
add
dec
push
adc
in
sub
std
sub
pop
js
mov
lods
das
loopne
sub
sbb
xchg
sti
mov
pop
mov
dec
push
les
mov
popf
add
push
scas
mov
mov
mov
pop
and
xor
into
test
in
and
cmp
(bad)
pop
mov
cmps
jp
jmp
fsubr
mov
xor
adc
xchg
movd
and
mov
or
clc
dec
dec
mov
push
or
xor
xor
arpl
aam
(bad)
xlat
icebp
jbe
adc
jnp
inc
pextrw
adc
sar
jne
daa
sbb
push
dec
mov
in
or
xchg
mov
in
mov
call
xchg
int3
cwde
lods
es
inc
(bad)
aam
inc
xchg
pop
push
xchg
xchg
imul
mov
je
fwait
sub
lahf
sahf
(bad)
jmp
ins
and
pop
and
xchg
jp
inc
mul
cwde
icebp
dec
mov
retf
jge
(bad)
mov
sub
popf
mov
or
xchg
jmp
popf
rol
jle
arpl
or
mov
inc
enter
fcomp
dec
jne
into
arpl
dec
cmp
jnp
adc
fdiv
mov
pop
int
adc
mov
add
inc
out
out
jne
and
addr16
out
and
fld
cdq
or
aam
and
and
fisttp
imul
retf
(bad)
dec
scas
sti
imul
sub
shr
(bad)
lock
xor
scas
(bad)
ja
inc
jecxz
push
arpl
sub
ret
push
mov
cmps
push
mov
dec
cmp
cmp
fidiv
xor
jns
mov
dec
stc
mov
add
arpl
push
mov
or
mov
into
test
jmp
mov
dec
stos
mov
adc
dec
mov
pop
(bad)
lods
inc
rcr
sub
outs
pop
sbb
xchg
xchg
jl
xchg
jecxz
xor
xor
adc
sub
jmp
inc
xor
dec
arpl
sub
stos
and
cmc
push
jmp
cmp
idiv
jnp
out
gs
in
int3
cmp
jl
inc
and
jne
repnz
and
pop
dec
out
es
add
fidivr
(bad)
mov
jmp
xchg
pop
mov
push
xlat
push
bound
fincstp
ds
jne
lea
es
dec
fsubr
mov
and
out
sahf
mov
pusha
cmp
repnz
pushf
xor
popa
pop
or
cwde
jle
mov
fcom
lock
cld
repnz
loop
cdq
or
or
sbb
mov
shr
jns
int3
push
in
sahf
mov
leave
test
into
test
xor
mov
pop
mov
pop
std
and
pop
(bad)
dec
xor
aas
ins
jns
mov
jle
xor
dec
xor
jno
std
cmp
dec
js
xchg
dec
ss
mov
jmp
jb
mov
mov
data16
push
or
push
pop
dec
dec
sub
dec
inc
movs
inc
adc
fld
or
jl
dec
jmp
(bad)
mov
imul
xchg
xlat
inc
ret
dec
out
inc
fbstp
or
mov
add
icebp
sub
imul
std
mov
xchg
cmp
push
pop
sbb
adc
dec
mov
pop
repnz
js
cmp
dec
idiv
aad
jmp
rcl
iret
mov
xchg
mov
call
ret
jg
iret
fistp
xchg
jmp
mov
xchg
das
div
popf
sahf
sbb
jo
test
stc
jg
aad
mov
daa
lea
sidtd
push
xchg
mov
inc
int
xor
lea
ins
inc
stos
inc
mov
jg
pop
xchg
ror
out
lock
pop
repnz
cmp
lds
mov
mov
xor
xor
rol
sub
mov
push
add
pop
mov
inc
outs
jo
cld
pop
xchg
push
xor
ins
jg
aam
or
jp
push
dec
push
mov
push
sbb
and
push
repnz
(bad)
icebp
adc
movhps
ror
jecxz
icebp
add
and
and
loope
jnp
xchg
add
stos
add
add
cdq
cli
mov
in
xchg
jg
jne
sub
mov
xchg
cwde
mov
aas
and
push
test
xchg
movs
retf
jle
shl
outs
fnclex
inc
mov
jno
pusha
imul
or
mov
cld
push
popf
cmps
mov
xor
mov
addr16
test
lods
and
ins
(bad)
ds
lahf
ins
(bad)
sbb
pop
clc
pop
cli
or
stc
in
sbb
fistp
dec
in
(bad)
jmp
push
mov
cvtps2pi
inc
xchg
fist
test
push
push
fnstcw
jmp
(bad)
push
or
sub
and
cwde
push
push
in
xor
xor
or
in
outs
and
mov
stos
enter
mov
fsubr
add
mov
lds
push
fcomip
ins
out
push
fdiv
in
lods
mov
push
shr
push
push
cmp
sub
pop
inc
inc
jp
push
sub
sbb
iret
jmp
jmp
ret
fadd
push
and
jmp
imul
movs
cld
mov
in
fdiv
fidiv
push
sbb
scas
fild
or
adc
xchg
ins
repnz
mov
mov
sahf
jbe
mov
retf
dec
or
fs
into
rcl
sbb
jle
mov
sti
jno
jns
call
add
popa
xchg
push
pop
bnd
idiv
push
aam
jnp
gs
inc
ror
and
xchg
sub
retf
lahf
or
push
lahf
jbe
sbb
sbb
mov
jecxz
lock
inc
icebp
sub
push
dec
mov
(bad)
mov
dec
mov
cmp
clc
pop
stos
test
idiv
test
retf
je
push
jmp
dec
pop
fst
sub
jbe
mov
enter
xor
or
cmp
push
arpl
dec
mov
cmp
cmps
ret
daa
or
and
imul
and
add
or
mov
(bad)
loopne
into
out
lds
jmp
pop
cmp
jb
frstor
or
fisubr
ins
xor
fisttp
idiv
cwde
mov
xlat
jecxz
ins
xchg
lods
dec
or
jnp
or
aam
stos
sbb
sub
aaa
mov
mov
cmps
popa
lods
xor
mov
fs
xor
add
mov
pop
dec
xchg
arpl
imul
das
inc
jmp
retf
movs
cli
(bad)
push
fcmovb
(bad)
cwde
sahf
test
stos
dec
mov
not
dec
nop
mov
shr
jmp
rcr
popa
and
aam
inc
mov
fcmovu
mov
outs
out
cmps
mov
xchg
js
lds
jne
test
and
or
sahf
jno
fsubr
mov
adc
jb
inc
dec
leave
jo
lea
les
int
or
dec
das
xor
ss
sub
cmp
test
push
pop
jecxz
mov
jns
fidiv
out
int
in
jb
repz
inc
and
test
ss
out
lea
mov
cmps
adc
mov
add
ds
fcomp
cmps
xchg
push
pop
and
(bad)
div
ja
ins
aaa
jno
out
and
pop
cmps
dec
push
pop
jo
std
daa
xchg
shr
cmp
jg
adc
stos
mov
pop
adc
mov
jmp
add
into
icebp
mov
es
push
mov
jle
jno
pop
add
sub
xor
xor
hlt
mov
call
or
jmp
repnz
shl
cmp
ds
stc
aaa
adc
out
jge
popf
sub
nop
mov
ds
lods
test
mov
cmp
adc
pop
(bad)
scas
adc
ins
enter
ror
mov
and
fsubr
fadd
scas
out
cmp
and
aas
or
out
xor
xchg
call
dec
in
stos
rcl
movs
in
adc
xchg
hlt
pop
ja
fs
cld
inc
pop
pushf
fwait
dec
rol
adc
and
fsubr
in
rol
push
push
inc
ins
out
aad
xchg
scas
xchg
fiadd
das
pop
ins
xchg
lahf
sbb
test
jmp
aad
and
xchg
test
stos
xor
sub
or
(bad)
std
cs
xchg
scas
mov
loopne
out
mov
in
sub
cli
mov
nop
inc
inc
cmc
(bad)
int
sbb
fidiv
pop
mov
xchg
lods
shl
enter
in
aas
jnp
add
jecxz
(bad)
jmp
test
push
and
out
in
pushf
xor
jl
jl
lods
xchg
sub
and
cwde
xor
lock
cs
inc
adc
pop
into
retf
dec
cmp
adc
mov
inc
add
dec
and
and
jecxz
inc
jge
out
stc
pop
or
mul
jle
inc
or
add
dec
and
pop
(bad)
stos
lods
and
(bad)
push
add
and
pop
outs
inc
push
push
int
push
dec
fwait
data16
cmp
sbb
push
test
test
call
lods
fbld
popa
jno
shl
or
mov
and
call
fwait
icebp
cmp
sub
fbstp
xchg
movs
cld
mov
push
push
call
sub
not
push
movs
pop
scas
sbb
stos
int
cmc
add
inc
push
nop
mov
cld
cmp
pusha
out
test
dec
pop
movs
sbb
test
jecxz
push
cmp
inc
xchg
pop
push
nop
stc
mov
mov
or
out
test
sub
inc
cmp
movs
push
or
jae
dec
or
lds
sub
nop
xor
das
sbb
xchg
xchg
sbb
xor
mov
mov
scas
and
rcl
sbb
loopne
xor
(bad)
and
and
jmp
cli
pop
push
hlt
mov
xchg
clc
inc
add
mov
inc
jg
int3
inc
fst
ret
mov
cwde
mov
loopne
or
sbb
add
and
fs
icebp
sysret
mov
add
push
aad
adc
cmp
sti
xor
add
ds
adc
mov
arpl
push
push
mov
into
movs
push
mov
lock
jns
cdq
mov
sub
sub
xlat
cwde
call
das
mov
out
push
ficom
push
xchg
fsubr
in
mov
loop
fbld
add
pop
pop
jnp
shl
pop
and
inc
cmps
inc
pop
loope
ins
rcl
leave
cmps
icebp
cmp
iret
fldcw
test
outs
add
push
bound
jae
ss
mov
cmps
leave
(bad)
popa
sbb
inc
pusha
add
out
mov
xor
push
sbb
call
xchg
pop
call
pop
jns
push
icebp
and
int
xchg
pop
push
mov
mov
xor
push
cmp
add
pop
xor
mov
addr16
cmp
jp
rcl
imul
jb
ja
dec
inc
sub
dec
pop
ins
lods
call
add
aam
ins
leave
mov
mov
inc
push
cmc
shr
cs
cli
or
jb
sub
cmp
cdq
imul
jg
mov
xor
cmp
popa
mov
jo
es
ja
or
cmp
xlat
ret
ss
push
add
mov
rcr
nop
out
mov
cmp
jl
cmp
ins
sbb
or
fld
and
call
pop
cmp
push
mov
add
jno
sub
push
into
int3
jbe
pop
pop
leave
stc
jne
and
sbb
jno
and
data16
mov
clc
mov
pop
repnz
pop
mov
neg
leave
mov
mov
inc
ror
or
and
add
jl
pop
retf
in
test
push
or
inc
mov
js
fdiv
xor
movs
xchg
psrld
mov
rcr
cwde
adc
sub
mov
pop
in
sub
out
jnp
popf
mov
dec
call
add
cmp
scas
test
mov
cld
test
outs
ss
sbb
and
loop
inc
push
lds
retf
pop
jo
fisttp
pop
scas
sbb
shl
stos
add
sub
pop
test
cmp
aaa
clc
lahf
imul
and
mov
mov
aas
sbb
sti
in
jno
xor
push
dec
fdivr
inc
jae
aaa
pop
(bad)
stc
pushf
(bad)
sub
clc
sub
jns
mov
aam
outs
sub
and
out
movs
stc
aad
adc
ins
sahf
mov
jns
aam
leave
push
and
mov
xor
test
sub
retf
sub
in
hlt
sahf
add
loope
mov
stos
pop
inc
push
fldenv
pop
and
xor
xchg
pop
test
adc
test
push
jmp
repnz
lock
cmps
push
push
dec
aaa
adc
or
cmp
shr
sbb
retf
les
add
or
add
sub
data16
push
xor
stos
inc
data16
lods
in
fsubr
loope
call
sbb
icebp
sbb
mov
push
data16
mov
rcr
fimul
fsubr
add
and
ins
sub
sti
push
pusha
sbb
test
add
xchg
push
mov
hlt
or
mov
(bad)
and
xor
cmc
push
lock
or
dec
fnstenv
shl
scas
pop
lock
das
mov
jae
dec
nop
jl
pop
addr16
push
fimul
mov
dec
pop
and
mov
sub
es
cmp
iret
clc
sub
hlt
inc
pop
adc
scas
aaa
les
xchg
(bad)
lods
jo
mov
cmp
push
jle
ret
aam
push
ret
xchg
hlt
mov
pop
addr16
lods
xchg
xchg
js
pop
aaa
and
or
sbb
fsubr
scas
cdq
inc
imul
out
sub
out
sahf
mov
(bad)
cmp
push
mov
fcomp
aad
mov
pop
lods
sub
jbe
mov
iret
rcr
cmp
out
sti
jmp
pop
pushw
mov
scas
ins
or
push
imul
jmp
jns
xchg
lods
dec
das
movs
jg
mov
sub
push
push
imul
push
jg
imul
and
mov
adc
jmp
mov
push
add
adc
cmps
ss
pop
inc
retf
pop
dec
mov
dec
push
lds
jo
add
out
jo
push
pop
fistp
ret
mov
mov
fldcw
test
in
scas
loop
push
fdivr
mov
mov
aaa
into
lea
cmp
sti
sbb
and
je
mov
or
(bad)
rcl
xor
fldenv
in
lods
loopne
ins
push
lahf
dec
sub
mov
lds
mov
retf
je
jb
inc
test
xchg
stos
(bad)
mov
loopne
aas
aam
outs
pop
lock
xchg
push
mov
ret
in
push
pusha
je
sbb
xchg
jno
push
and
sub
aas
jmp
(bad)
jo
int
adc
jno
clc
repnz
xchg
cmp
mov
cmp
in
shl
dec
sbb
xchg
jmp
dec
inc
cs
xlat
push
out
mov
inc
test
fwait
jb
(bad)
inc
inc
jns
xlat
jae
dec
xchg
popf
nop
rcr
dec
pop
cmp
jp
je
faddp
or
jb
scas
mov
sub
test
das
and
xor
pop
mov
mov
or
movs
lds
dec
push
js
sub
(bad)
sbb
mov
mov
xor
jo
(bad)
lahf
test
adc
fwait
mov
push
test
(bad)
inc
call
lods
outs
push
xchg
repz
dec
xchg
mov
or
iret
push
shl
sbb
and
ja
cmp
add
xor
or
jae
mov
or
dec
jmp
add
push
(bad)
icebp
cld
and
div
mov
fild
push
mov
inc
jle
les
popf
cmp
jmp
sub
stos
cmp
fsub
dec
push
retf
nop
jb
repz
cld
push
ins
pop
xlat
adc
inc
(bad)
cmp
push
jo
das
adc
loop
xor
mov
das
cmp
mov
ret
ins
std
enter
shr
add
jb
ficom
mov
jne
popa
push
add
dec
cmp
add
rcl
xchg
jle
adc
mov
cmp
mov
ss
mov
stos
pop
iret
add
fs
sub
js
(bad)
loope
std
adc
mov
inc
jecxz
inc
pushf
and
xchg
rcl
ret
popf
(bad)
sbb
push
ds
test
std
jge
mov
mov
es
dec
dec
and
cmp
xlat
sub
retf
xchg
test
inc
mov
mov
mov
push
cmc
out
jmp
jb
arpl
cwde
xor
in
sbb
popw
mov
pop
popa
out
xor
sub
mov
loopne
mov
pop
ja
sbb
mov
xchg
aaa
nop
cli
outs
mov
shl
enter
gs
ja
neg
iret
mov
int3
and
cdq
and
lea
aad
in
ins
pop
jge
sbb
in
ins
jmp
inc
call
cmp
jmp
mov
inc
pop
enter
shl
jnp
out
xor
xor
sbb
ror
in
cmp
xchg
and
es
xchg
xchg
out
bnd
or
mov
rol
adc
das
dec
cmp
mov
or
enter
sub
sbb
mov
sub
mov
mov
adc
mov
dec
adc
aad
scas
mov
out
jl
neg
xchg
adc
stos
mov
xchg
cmps
(bad)
repz
lahf
xchg
fidiv
pop
adc
sbb
cmp
sti
xchg
sbb
fsub
scas
ret
push
sbb
lea
int3
push
mov
sidtd
mov
mov
and
add
in
xor
mov
push
inc
mov
daa
mov
adc
xor
push
mov
ins
push
pop
pop
push
ret
lds
jmp
jmp
cmp
jge
jae
adc
and
pop
dec
and
mov
mov
jecxz
mov
xlat
rcr
mov
mov
leave
dec
inc
dec
(bad)
xor
pop
jecxz
push
push
fwait
and
mov
jmp
jle
push
sar
jge
push
sar
cmp
mov
dec
(bad)
mov
cmp
fs
int
mov
in
es
(bad)
sbb
sbb
leave
mov
in
add
mov
int
jge
lea
(bad)
aam
push
push
repnz
leave
cmp
into
les
mov
std
jnp
mov
xor
sub
mov
xor
xchg
pop
adc
bound
stos
xchg
xchg
or
dec
jae
cmps
cmps
hlt
movs
jl
jno
cmp
popf
pop
outs
mov
mov
add
sub
neg
inc
mov
punpckhwd
iret
cs
inc
(bad)
out
ins
jl
mov
mov
dec
cmc
pop
out
sub
dec
mov
xchg
daa
and
fdivr
int
fadd
aam
je
scas
inc
in
das
mov
inc
jnp
scas
(bad)
std
jne
xor
sub
jle
push
mov
(bad)
adc
sub
es
sahf
dec
aam
movs
jo
mov
stos
mov
movs
adc
mov
xchg
or
sbb
out
adc
xchg
leave
and
jle
out
jnp
leave
dec
sub
add
dec
dec
lods
mov
cmp
mul
jno
lahf
sbb
push
fisubr
push
pusha
icebp
adc
out
mov
fld
inc
ror
test
jmp
adc
(bad)
and
and
std
push
mov
sub
xor
fs
movs
or
or
add
imul
scas
in
inc
and
test
lock
pop
sbb
mov
dec
clc
push
add
and
sbb
imul
in
call
mov
and
sysexit
mov
mov
jmp
fwait
or
not
retf
js
mov
fptan
cmp
mov
add
cmc
(bad)
out
dec
and
pop
imul
(bad)
std
dec
jg
mov
les
shl
aas
(bad)
jne
cmp
dec
fidiv
leave
and
outs
dec
inc
fs
(bad)
frstor
jno
nop
or
push
out
stos
dec
push
in
es
mov
push
js
cmp
in
push
popa
int
and
repz
jmp
out
iret
xor
push
sti
repnz
arpl
and
ror
and
push
dec
loope
fnclex
pop
jg
jmp
movs
adc
shl
shl
gs
mov
shl
add
push
lds
mov
and
loopne
rcr
rcl
jmp
sbb
lods
push
or
scas
in
les
cmp
out
fwait
cld
or
cld
retf
fwait
jo
jl
(bad)
xchg
mov
cli
jg
lds
inc
mov
push
push
push
add
mov
rcr
enter
inc
xor
mov
jae
iret
jp
fcomp
ins
shr
mov
xlat
pop
aam
in
pop
test
jmp
pop
outs
aaa
test
xchg
std
es
js
mov
jne
xchg
sbb
mov
lahf
jl
push
sub
inc
or
aaa
jmp
daa
and
inc
sbb
xlat
sub
rcl
loop
xor
mov
cmp
sbb
aas
rcl
fsub
mov
hlt
pop
push
dec
retf
inc
shl
pop
pop
mov
or
dec
pop
(bad)
sub
inc
mov
mov
icebp
sti
mov
mov
lahf
out
dec
dec
push
outs
cmps
fs
push
not
inc
sbb
sti
adc
pop
and
pop
and
(bad)
movs
jnp
adc
es
je
outs
mov
test
xchg
jae
fucomip
(bad)
dec
je
scas
icebp
mov
xchg
ret
jle
std
vpaddsb
push
adc
sub
loopne
sbb
or
dec
xchg
inc
jmp
inc
cmps
fisub
js
dec
cmp
dec
aaa
add
cmp
pop
stos
in
dec
test
call
psubusw
fs
fnstcw
fild
and
in
add
pop
out
int
inc
inc
gs
jbe
inc
out
jle
mov
xor
call
mov
sub
fs
jmp
rcr
mov
stos
sbb
mov
jmp
xchg
pop
outs
cmp
popf
in
(bad)
mov
fdiv
(bad)
xchg
test
mov
inc
bound
jno
ja
sub
cs
add
leave
add
mov
daa
cwde
push
xchg
sbb
(bad)
sub
sbb
pop
inc
out
jb
cmp
mov
push
movs
fmul
cld
sub
jle
jb
add
xchg
jg
mov
pop
mov
add
bound
push
xor
in
or
sar
sbb
arpl
(bad)
xchg
test
jb
arpl
inc
push
fdivr
fldenv
adc
popf
adc
call
ror
not
push
xor
xchg
test
jmp
mov
inc
idiv
stos
cmp
xchg
loope
or
(bad)
jb
push
in
dec
test
pop
add
and
mov
in
mov
or
dec
sub
push
inc
sbb
inc
jo
adc
add
sti
push
and
xor
sbb
cmps
hlt
mov
inc
add
pushf
lods
cmp
pop
sbb
pop
dec
enter
pop
inc
mov
jle
in
dec
nop
mov
les
outs
dec
jmp
mov
dec
add
adc
out
sbb
add
sbb
fistp
push
je
push
arpl
or
inc
dec
mov
idiv
cli
pop
sub
loop
mov
push
xchg
fsubr
add
cmp
xchg
inc
pusha
mov
outs
xchg
jge
push
fs
loop
adc
into
sti
mov
mov
or
push
pop
sti
jp
pop
push
icebp
xlat
(bad)
pop
lods
xchg
adc
test
aad
not
lock
popf
sbb
into
cdq
test
repnz
inc
inc
(bad)
popf
dec
or
mov
into
(bad)
pushw
ins
add
pop
ss
sub
jns
sbb
int3
shr
das
pop
xchg
aaa
mov
xor
mov
pop
aas
data16
data16
dec
outs
ins
mov
cmps
dec
xlat
mov
data16
pop
test
(bad)
inc
push
mov
out
xchg
ja
je
(bad)
cdq
pop
repz
xchg
shl
ds
mov
mov
xor
xor
pop
nop
pop
dec
pop
mov
sub
mov
sbb
imul
popa
sahf
dec
dec
inc
inc
sbb
test
ja
pop
jge
cmp
retf
in
and
push
aas
pop
sub
in
pop
sbb
jle
or
lds
fadd
cmp
es
pop
pop
outs
sub
adc
lock
adc
pop
outs
fs
cmp
push
outs
(bad)
repnz
push
fld
mov
shr
cld
loop
pop
sbb
mov
jg
and
das
sub
lea
setns
dec
xchg
or
mov
ret
inc
sub
lock
jp
mov
(bad)
daa
aas
xor
mov
mov
jno
mov
loope
repz
les
daa
cmp
cmp
sub
xchg
push
push
in
cmovno
pop
arpl
loopne
dec
std
mov
ffreep
inc
adc
inc
into
xchg
cmp
mov
(bad)
fcomp
jnp
jle
ds
fwait
cmp
test
pop
push
jp
and
adc
loop
xchg
icebp
add
push
jmp
push
lods
ins
mov
pop
(bad)
icebp
jp
mov
jl
es
shl
xchg
out
sub
test
mov
cmp
pop
(bad)
and
stc
aad
rol
imul
inc
into
cli
mov
sbb
gs
mov
enter
inc
mov
and
into
loope
imul
arpl
and
fwait
js
je
mov
in
mov
mov
cmp
and
inc
in
xchg
sub
ins
mov
cmc
int3
ja
xor
frstor
shl
enter
sahf
shl
cmps
mov
and
(bad)
div
xchg
push
ror
es
inc
repnz
xchg
test
test
pop
sub
and
neg
(bad)
mov
dec
mov
mov
fmul
adc
mov
pop
out
lahf
scas
inc
outs
xor
xor
rol
sahf
std
inc
hlt
iret
push
ret
js
mov
jns
imul
jo
inc
cld
mov
pop
aas
push
daa
mov
and
sbb
jl
imul
cwde
ins
cmp
push
mov
call
push
les
fmul
mov
jns
lea
js
add
mov
mov
std
jae
arpl
mov
cmc
xchg
cld
mov
(bad)
fwait
or
push
jmp
dec
enter
dec
jno
mov
mov
cmp
adc
mov
popa
adc
test
dec
push
mov
push
sbb
outs
das
int
jge
sti
pusha
dec
ror
inc
rol
scas
loopne
outs
adc
dec
out
cmp
and
dec
jmp
repz
cmps
arpl
mov
test
dec
cmps
ds
js
(bad)
push
push
cwde
dec
jne
xchg
scas
and
or
pop
inc
xor
fs
pusha
(bad)
test
or
sbb
xlat
in
inc
mov
or
shl
cwde
icebp
test
inc
inc
rcl
arpl
adc
pop
jge
jae
shl
dec
mov
call
dec
movs
add
jl
repz
push
aam
sbb
test
js
jmp
cmovg
imul
xor
mov
cwde
int3
add
lock
repnz
xchg
lods
test
and
mov
pop
shr
jno
jmp
fld
enter
xchg
mov
enter
cmp
lea
and
ret
pop
xlat
cmc
cmc
fistp
xchg
inc
loop
mov
mov
cwde
aas
cmp
cmp
mov
push
adc
mov
jg
jl
enter
or
adc
or
inc
xchg
ja
bound
mov
push
addr16
js
adc
inc
rcl
call
fucomip
mov
mov
rcl
mov
dec
loop
sbb
dec
jo
mov
leave
cmp
fild
cdq
or
test
mov
stc
sti
out
wrmsr
xor
pusha
push
jbe
lods
jecxz
movs
sti
movs
sahf
pop
xchg
mov
leave
jge
mov
fmul
(bad)
xor
sub
test
das
bound
fisub
ror
test
adc
adc
nop
jo
xchg
sbb
or
test
inc
adc
cmp
leave
jp
mov
inc
pop
mov
es
outs
inc
mov
fsubr
call
pop
aaa
jmp
stc
inc
mov
jbe
rcr
jno
shl
addr16
test
cmc
repz
mov
mov
(bad)
mov
jo
adc
std
repnz
pop
cmps
jmp
xchg
packssdw
iret
xchg
jle
call
xor
js
jno
cld
mov
or
mov
sub
fistp
lea
pop
dec
fcomp
xor
pop
jae
imul
dec
in
cmps
adc
nop
ror
sti
jo
iret
loop
inc
idiv
jge
mov
jmp
imul
push
loopne
adc
(bad)
ds
aad
jbe
adc
push
lods
icebp
ins
dec
sar
fsub
int3
sbb
push
daa
sbb
cmp
push
mov
push
shl
and
add
dec
adc
cmp
and
int3
test
and
pop
(bad)
push
pop
xlat
add
push
clc
les
add
add
push
retf
ret
repnz
int
lods
adc
pop
and
mov
in
retf
loopne
sbb
jns
dec
fidiv
in
push
in
pushf
sub
pop
jnp
dec
mov
adc
pop
(bad)
ds
pop
jmp
call
xchg
dec
xchg
push
inc
int
sbb
cdq
sub
nop
xchg
xor
sub
pop
jae
push
test
shl
sbb
mov
jmp
pop
or
in
sub
(bad)
dec
xor
(bad)
mov
jbe
lock
addr16
jp
pop
daa
pop
xor
xchg
xlat
je
icebp
outs
mov
ficomp
xchg
mov
sub
rcr
push
(bad)
pop
imul
scas
xor
data16
dec
aam
aam
out
jle
push
test
mov
sbb
dec
pop
mov
jne
sbb
js
push
shr
add
mov
movlps
pop
add
xor
pop
std
stc
xor
mov
sti
cmp
sub
adc
fild
add
fidivr
lods
mov
adc
enter
inc
or
push
dec
cmp
push
push
xchg
xchg
jb
dec
cmp
push
cmp
sub
jmp
loopne
adc
ret
bswap
push
xchg
or
push
push
cmps
xor
rcl
in
mov
xchg
or
mov
outs
lock
cwde
xchg
ds
outs
shr
push
mov
ret
push
lods
ja
jns
bound
scas
xor
and
ret
pop
adc
push
mov
lds
arpl
adc
sti
add
inc
cmp
movs
mov
mov
call
jae
mov
adc
dec
jns
mov
int
scas
add
loopne
inc
xchg
imul
cmps
call
arpl
sti
mov
mov
sbb
test
sbb
sar
push
enter
(bad)
dec
dec
not
clc
cmp
das
int
aam
movs
fcom
xchg
xchg
cwde
cli
pop
push
xor
fst
add
jge
mov
jno
xchg
pop
test
pop
mov
test
ds
push
cdq
(bad)
xor
sbb
outs
fsubr
cmps
push
test
push
les
mov
js
mov
js
enter
rcr
repz
and
fstp
pop
lods
xor
cmc
mov
imul
sub
adc
rol
ja
jl
fs
sbb
inc
dec
mov
mov
jecxz
xchg
cmp
scas
ja
add
(bad)
sub
scas
add
and
push
popa
movs
xor
xchg
or
cmp
loopne
addr16
sbb
mov
je
loop
fisubr
jl
mov
es
fist
out
pmulhuw
mov
xor
stos
hlt
outs
pushf
mov
fsub
nop
xchg
pop
out
outs
ret
daa
push
enter
and
xor
cmp
jae
mov
lahf
mov
xchg
xor
pop
pop
minss
xor
lds
lea
das
das
popa
xchg
mov
jmp
push
add
sbb
inc
add
inc
jne
jge
call
data16
pusha
ret
inc
xlat
(bad)
dec
adc
lods
adc
lods
ret
push
fidivr
arpl
adc
sti
dec
aas
hlt
xchg
ins
adc
addr16
and
or
loopne
ss
lahf
xor
js
push
inc
sbb
mov
dec
stos
mov
adc
loope
xor
cmp
scas
sahf
pop
adc
adc
imul
aam
jae
cmp
test
jp
jb
jne
inc
movs
into
xchg
add
mov
cmp
cmp
rcl
shl
cdq
xlat
lock
inc
push
xchg
clc
xor
push
jge
adc
mov
sbb
pop
aam
cmps
or
outs
push
mov
fadd
push
stos
lock
fcmove
fidiv
inc
pushf
test
xchg
xchg
pop
pop
push
retf
int
jns
sbb
cli
lds
add
shr
repnz
or
jb
loope
lea
cmp
sub
arpl
call
(bad)
jg
add
sub
in
dec
sbb
jmp
ja
test
call
int3
lods
mov
mov
mov
mov
aas
sbb
iret
in
cmc
enter
(bad)
cli
div
xchg
mov
sub
cmps
and
inc
xchg
cmp
xchg
outs
and
jns
adc
mov
mov
fidiv
add
add
clc
out
inc
pushf
lds
out
mov
mov
fs
push
push
jne
ficomp
fmul
dec
int
fbld
jmp
imul
pusha
call
(bad)
cmp
loopne
pop
mov
xor
jo
add
ret
cli
(bad)
jecxz
aas
mov
cmp
fist
mov
or
inc
sbb
das
push
neg
mov
js
ins
push
cmps
inc
inc
sbb
into
pop
(bad)
mov
push
xchg
adc
mov
mov
dec
bound
js
pop
push
pop
cmp
hlt
push
mov
dec
add
fcom
inc
and
xor
mov
cli
out
or
sub
push
add
aas
add
test
stos
mov
mov
cli
mov
ret
jecxz
pop
test
dec
mov
mov
jge
shl
imul
out
iret
sbb
data16
loop
mov
cmp
sub
retf
jns
ja
movntq
out
les
mov
ror
jb
(bad)
fmul
(bad)
scas
add
(bad)
test
xchg
in
cmp
pop
or
icebp
add
and
stos
pop
in
lds
pop
repz
fidiv
dec
cmp
mov
xor
imul
shr
dec
cmp
push
idiv
popa
gs
popf
mov
and
hlt
test
hlt
shl
js
jle
in
push
pop
into
cmp
pop
xlat
das
mov
cmp
and
lock
xlat
push
and
lock
mov
mov
aas
mov
jle
outs
mov
imul
xlat
daa
daa
jns
dec
rol
and
mov
jle
mov
lods
and
mov
push
dec
std
or
dec
(bad)
sahf
and
mov
inc
cdq
sbb
adc
pusha
mov
(bad)
cs
xor
mov
pop
jl
inc
or
or
mov
and
cmps
mov
push
mov
rol
xor
jo
sub
loopne
lahf
jo
jmp
cmps
pop
daa
js
movs
xchg
or
inc
inc
iret
xchg
jp
jns
or
and
test
cmps
cmp
mov
pop
repnz
imul
push
inc
mov
movs
adc
iret
mov
push
and
add
pusha
(bad)
mov
mov
dec
fmulp
mov
das
mov
dec
inc
sbb
adc
and
nop
push
scas
sbb
movs
jecxz
int
jae
or
inc
pusha
test
push
pop
pop
(bad)
out
addr16
fldenv
add
data16
cli
fiadd
adc
icebp
pop
neg
cmc
jle
ret
mov
rcr
(bad)
fbstp
mov
out
imul
or
(bad)
pop
iret
add
mov
repnz
cmp
xchg
test
hlt
lds
xor
ret
push
mov
movs
mov
pop
mov
or
xchg
rcl
cmp
and
popa
and
out
mov
in
dec
xor
dec
pop
mov
loope
sbb
push
pop
(bad)
fld
enter
stos
movs
cmps
mov
mov
fiadd
push
cdq
lahf
jb
test
je
(bad)
pop
pop
fucomip
push
jmp
popa
adc
xor
hlt
ins
fcomp
shl
ds
xchg
(bad)
aam
retf
pop
in
data16
jecxz
mov
mov
aam
cmp
stos
test
sbb
mov
xor
dec
jge
in
xor
sub
xor
cmc
inc
or
xlat
cmp
pop
dec
inc
das
sbb
imul
cdq
jmp
lods
das
loop
imul
sahf
inc
rol
imul
dec
add
mov
mov
inc
das
mov
test
clc
lahf
mov
add
clc
xchg
sub
cmps
pop
dec
mov
imul
xchg
into
(bad)
sub
jg
scas
xchg
add
cmp
(bad)
push
lock
sub
fadd
dec
js
sbb
cmp
movs
fld
dec
call
fwait
out
xchg
dec
add
inc
mov
adc
scas
pop
dec
mov
push
iret
lods
sub
inc
mov
ret
xchg
stc
xor
cs
jnp
push
inc
mov
jmp
mov
dec
push
xor
leave
retf
add
or
fsub
pop
aad
je
cmp
sub
inc
xlat
push
pusha
sbb
not
jp
hlt
int3
(bad)
and
ins
stos
movzx
sbb
dec
adc
shr
dec
push
mov
sti
sub
fsubr
pusha
test
and
jle
ins
dec
cmp
push
mov
cmp
int3
in
sub
outs
out
or
imul
and
pavgw
outs
push
mov
pop
iret
jge
mov
ror
push
inc
mov
dec
std
xchg
stos
adc
out
cmps
pop
and
nop
daa
sub
sub
cmp
sar
aaa
fisub
push
mov
leave
push
or
push
jl
mov
and
jl
popa
cs
or
inc
xchg
push
lock
inc
fcom
push
mov
dec
mov
adc
sub
cli
mov
mov
sbb
int3
mov
ja
add
rcl
mov
pop
iret
mov
ja
jge
fld
mov
adc
sbb
addr16
sbb
sbb
mov
jo
in
mov
scas
test
loopne
ja
cmp
or
inc
in
lods
cmps
xor
jno
dec
shl
addr16
adc
loop
inc
mov
sbb
or
push
push
mov
mov
add
les
push
int3
jno
mov
cmp
stc
mov
xchg
inc
mov
loope
addr16
mov
xchg
dec
call
mov
test
call
jp
arpl
xchg
stos
fild
div
dec
or
xor
mov
sbb
inc
pushf
push
xchg
and
sbb
xor
aas
adc
mov
and
and
pop
cmp
jno
lahf
push
in
jl
xchg
jl
sar
aas
mov
xor
cmp
mov
call
int
and
xchg
loope
xchg
jle
shl
or
lea
add
dec
cmp
sbb
sahf
cmp
or
jno
repz
imul
jmp
out
retf
jp
js
loope
add
mov
ins
repnz
lods
movs
adc
xchg
pop
hlt
push
pop
jmp
rcl
fs
dec
or
(bad)
push
inc
xchg
jmp
mov
out
push
shl
data16
push
imul
xor
sub
cdq
xchg
jge
xchg
add
lods
popf
movs
ficomp
inc
jecxz
push
mov
repnz
test
arpl
xor
jbe
jbe
stc
pop
fisttp
push
sub
loopne
cld
imul
scas
sub
pop
dec
int
pop
pop
pop
adc
inc
xchg
adc
cmp
mov
xlat
retf
adc
add
mov
sbb
xchg
xor
not
test
inc
mov
jg
or
adc
pop
jae
pop
sbb
sub
sbb
and
call
pop
xlat
xchg
jmp
cmp
mov
xlat
retf
nop
cs
(bad)
mov
or
add
add
nop
cmps
call
pusha
dec
jl
fcomip
in
daa
xchg
shr
call
jle
pop
push
daa
dec
inc
cs
repnz
jno
adc
jp
inc
dec
fwait
leave
sti
ror
scas
ja
bound
repnz
cdq
dec
xor
mov
cmps
retf
jp
mov
fistp
(bad)
in
cmp
repz
das
pop
test
(bad)
cmp
lods
jmp
jmp
sti
xchg
mov
dec
mov
pop
adc
iret
pop
pop
mov
daa
sub
xor
sbb
mov
addr16
in
sbb
or
mov
xlat
mov
rcr
ret
fcom
mov
das
mov
and
jns
add
xor
push
mov
xchg
dec
inc
loop
lds
mov
cmps
ud1
dec
test
test
xor
add
cdq
test
inc
push
leave
outs
add
loopne
or
lds
and
push
out
xchg
jp
cmps
jl
mov
enter
es
fmul
aad
fist
pop
mov
mov
ins
xor
dec
pop
test
int3
into
mov
push
cs
cmps
mov
and
mov
fidiv
int
icebp
lock
add
mov
inc
push
popa
jne
mov
dec
int3
dec
leave
aam
sub
(bad)
jo
push
out
popf
pop
or
inc
xor
jp
outs
add
inc
loope
jle
jmp
add
loop
cmp
jmp
sbb
sub
mov
ret
cdq
ins
and
mov
jp
xor
dec
movs
frstor
and
out
xchg
add
test
ja
fldz
test
fwait
push
xor
lea
repnz
retf
rcr
in
jno
pop
lds
jmp
scas
inc
popa
mov
mov
mov
mov
retf
mov
dec
popf
pop
fldcw
loope
xor
lahf
retf
push
jecxz
(bad)
push
test
lea
inc
out
xchg
xchg
add
pop
xchg
xchg
stc
gs
loop
rcr
ror
stc
pop
out
aas
sbb
popa
push
mov
aam
loopne
adc
lock
lock
xchg
inc
pop
xor
push
shl
push
std
pop
stc
xor
sar
xchg
or
sub
jle
gs
mov
in
and
movs
pop
out
outs
outs
repz
ds
fdiv
test
pop
jbe
jecxz
push
inc
fsubr
enter
sbb
cmp
mov
cmp
rcl
mov
push
mov
jg
mov
gs
pop
stos
iret
popa
mov
mov
xor
xchg
cs
jae
sbb
jns
loope
push
call
daa
sbb
sbb
fldlg2
or
xor
lods
fdiv
push
jmp
add
add
cs
ret
xor
cmps
clc
fwait
mov
xchg
pop
js
push
leave
xor
test
sbb
ret
into
push
icebp
xor
dec
fwait
jbe
inc
cmp
xchg
and
or
(bad)
mov
or
pmaxsw
scas
inc
cmp
inc
arpl
mov
addr16
stos
movs
adc
inc
adc
mov
adc
add
loope
add
sbb
pop
sbb
stos
and
mov
rcr
loop
fdivr
ja
imul
fs
inc
(bad)
push
stos
inc
or
test
mov
mov
pop
arpl
es
movs
mov
xor
(bad)
adc
xchg
lea
xchg
shl
sbb
jae
push
push
pop
or
dec
sbb
retf
scas
sbb
push
dec
fstp
sub
test
std
push
ins
jmp
add
inc
retf
not
sub
jge
fdivr
or
imul
adc
fcomp
ss
ds
loop
add
je
retf
mov
jg
cmp
enter
mov
push
es
je
es
or
mov
push
inc
inc
jge
out
(bad)
cmp
lock
fcomp
shl
jl
push
xor
mov
jo
mov
sbb
jle
sbb
jns
nop
out
mov
test
stos
sub
inc
or
xchg
gs
std
mov
ret
xchg
jno
fcmovbe
xchg
rol
sub
adc
sbb
dec
push
in
inc
sbb
inc
les
fiadd
cli
adc
xchg
movs
or
cmp
lods
neg
call
xchg
jp
push
(bad)
jae
or
adc
cmp
xchg
(bad)
and
jo
jmp
fmul
das
dec
lds
dec
push
or
inc
push
sub
loopne
retf
pop
or
cmp
fisttp
cmc
ds
inc
sub
sbb
jb
shl
das
fiadd
std
data16
cmp
mov
cs
jp
pop
fcom
std
fld
arpl
xor
dec
in
aas
into
icebp
push
outs
fadd
aas
jb
adc
jge
shr
loope
pop
fcomp
pop
leave
into
mov
jmp
pusha
mov
bound
pop
test
rol
adc
or
sti
(bad)
ficom
std
dec
push
xor
stos
leave
add
add
retf
sar
(bad)
push
out
mov
test
jb
ds
cmp
jnp
mov
xchg
test
(bad)
pushf
outs
xchg
lock
cli
lods
sbb
lea
es
fld
shr
push
xor
cmp
cmp
imul
lods
mov
lea
test
cmp
dec
cmp
retf
xor
push
xchg
stos
push
shr
mov
gs
jae
lea
xchg
mov
xor
mov
outs
mov
(bad)
ss
fcmovnbe
cmp
xchg
cmc
cmp
pop
xlat
push
inc
sti
cmc
daa
mov
aaa
repnz
and
mov
test
xor
test
int
pop
aas
jnp
xor
in
inc
ins
sub
not
data16
fiadd
inc
shl
jae
pop
xor
leave
mov
add
sbb
sub
xor
inc
mov
push
dec
dec
imul
(bad)
pop
sti
cmp
mov
stos
inc
cld
xchg
shl
mov
test
cwde
adc
mul
dec
leave
push
cmp
ins
sub
sti
jp
data16
pop
push
cdq
sub
inc
(bad)
repnz
ss
popa
push
mov
or
je
arpl
dec
sbb
aam
jnp
shr
movs
pushf
mov
imul
inc
mov
xor
jecxz
add
inc
jbe
fsub
loop
retf
icebp
mov
icebp
push
rcr
add
call
scas
rcl
cld
inc
push
movs
mov
push
adc
test
mov
adc
sub
jecxz
into
out
jmp
loop
push
mov
enter
inc
dec
push
ret
loope
push
push
sti
enter
sbb
pop
shl
std
leave
int3
push
ret
sub
dec
in
je
cmovg
push
addr16
in
shl
jle
(bad)
ins
jmp
inc
adc
xchg
push
xchg
xor
pop
pop
enter
lock
inc
popf
cmp
call
add
push
mov
call
xor
mov
arpl
mov
retf
rol
cli
mov
jnp
dec
inc
cli
test
ds
pop
lods
imul
and
shr
gs
rcl
aam
das
or
push
mov
aaa
push
sbb
iret
push
mov
stos
fwait
lahf
xor
push
rol
inc
hlt
push
jmp
mov
fstp
shl
sti
cmp
dec
addr16
jae
stc
mov
aam
jp
adc
(bad)
out
imul
cmp
push
jb
sub
push
movs
mov
or
xlat
movs
pop
jbe
aaa
sahf
pop
mov
dec
lods
out
inc
push
sub
fs
loopne
imul
add
in
dec
add
dec
pop
bound
test
bnd
ja
mov
push
xchg
stc
push
sahf
pusha
cld
mov
test
push
movs
test
imul
xchg
pop
pop
inc
shr
cmps
mov
inc
out
cmp
popf
cmp
xchg
jb
call
(bad)
hlt
xchg
jmp
jmp
mov
arpl
dec
jge
inc
loopne
dec
mov
int3
rcr
xchg
les
inc
mov
int3
pop
dec
xor
add
xchg
xchg
add
mov
call
xor
jo
mov
in
dec
lds
inc
fsubr
test
lea
dec
pop
das
(bad)
xor
mov
dec
push
cmp
(bad)
pop
call
leave
daa
push
imul
jecxz
jnp
ficom
sbb
sub
add
mov
in
xchg
push
xchg
retf
pop
rol
lahf
out
add
mov
popf
xor
push
fiadd
or
nop
dec
push
or
out
(bad)
loopne
cli
out
lods
mov
xchg
in
imul
add
sub
dec
mov
call
dec
sub
jns
les
es
imul
dec
jb
arpl
sub
mov
jmp
(bad)
mov
fisub
adc
int3
scas
pop
int
ror
test
out
pop
cmps
inc
aam
xor
popa
loop
call
in
stos
cdq
cmps
retf
adc
push
mov
dec
js
call
push
jb
out
es
sub
pop
(bad)
shr
push
mov
retf
push
jno
pop
fstp
pushf
mov
addr16
and
call
ja
and
daa
push
lahf
fwait
bound
ds
scas
push
imul
sub
mov
dec
mov
sub
stc
inc
adc
pop
dec
sub
adc
mov
sbb
cdq
mov
loop
or
mov
cdq
mov
neg
cdq
stc
in
hlt
(bad)
pusha
dec
and
push
scas
loop
fisub
scas
inc
movs
(bad)
fmul
fmul
mov
mov
or
call
or
cdq
int
stos
push
add
in
ds
stos
sub
js
or
push
mov
adc
xor
dec
and
mov
(bad)
jg
mov
stos
shr
popf
pop
jmp
and
lahf
ret
sub
adc
add
jno
jl
mov
jmp
pop
sahf
ins
mov
mov
imul
mov
mov
popa
stos
fwait
mov
xor
ss
add
push
push
or
call
jns
(bad)
iret
loop
sub
xchg
shl
sub
aam
cdq
ja
dec
sub
cmp
jb
adc
in
jmp
ss
test
xchg
out
mov
mov
adc
adc
int
sbb
inc
(bad)
mov
movs
adc
pop
or
jnp
xor
addr16
and
xchg
mov
jmp
pop
inc
pop
and
xchg
fwait
xchg
mov
out
pushf
dec
fcmovu
xchg
rcl
mov
ss
jg
dec
dec
or
add
sub
je
push
dec
sub
mov
fdivr
lock
cmp
mov
sub
outs
adc
mov
sub
jns
xor
mov
inc
(bad)
lock
jge
jne
sti
jae
adc
inc
push
loope
mov
and
cmc
cdq
xor
or
aas
or
in
aad
xchg
inc
cmp
fsub
mov
outs
xchg
sub
mov
js
movs
mov
fdiv
jle
shl
rol
arpl
dec
jns
mov
(bad)
hlt
xor
(bad)
xchg
xor
jmp
fst
sbb
in
pop
retf
(bad)
cmp
scas
sbb
and
ja
fsub
test
rcl
lahf
xchg
std
sbb
loop
push
xor
imul
hlt
cmc
and
data16
inc
cmp
and
popf
sub
aad
jns
fwait
sar
add
dec
iret
fadd
cwde
dec
cmps
iret
pop
lds
sub
es
imul
mov
adc
dec
push
mov
xchg
clc
das
jns
rcl
in
or
out
sahf
sar
leave
sahf
xchg
lahf
pushf
imul
retf
push
mov
inc
and
jp
fdivrp
outs
xlat
aad
xchg
and
push
dec
dec
popa
pop
pop
push
cli
test
push
push
mov
dec
jp
in
retf
add
mov
pop
jecxz
push
call
sbb
mov
jge
fwait
mov
arpl
push
movd
out
push
adc
loop
push
fstp
mov
mov
stc
inc
(bad)
icebp
sbb
mul
call
mov
dec
test
in
mov
xor
leave
int
cmp
scas
popf
popf
jg
push
(bad)
sbb
inc
daa
sub
dec
imul
das
cmp
int
and
jbe
or
mov
cmp
out
movs
sti
rcr
pop
iret
cmp
outs
push
jmp
and
test
pop
xor
outs
test
inc
and
jp
or
push
cld
mov
std
aaa
adc
xchg
mov
movs
clc
test
or
jecxz
sbb
ins
jne
lea
or
rol
push
cmps
ret
leave
mov
(bad)
cmp
inc
adc
(bad)
push
lds
shl
inc
fist
adc
jp
(bad)
add
pop
lds
xchg
cdq
test
and
cwde
jne
stos
pop
dec
in
sub
xchg
lods
shl
out
or
or
xchg
lods
push
dec
in
les
mov
cmp
(bad)
les
(bad)
fild
not
inc
ins
lds
xor
out
push
mov
retf
sub
jmp
(bad)
and
and
jge
jp
popf
lods
dec
xchg
inc
out
sbb
push
and
xor
push
jae
add
fwait
pop
cmps
xor
ja
inc
jo
lods
lea
mov
(bad)
stc
pop
int
and
aas
inc
jne
or
loop
sub
inc
in
jbe
aad
ja
cmp
xchg
stos
mov
mov
pop
cmp
das
mov
sub
int3
sbb
sbb
jp
pop
aas
retf
repz
dec
sbb
or
cmps
inc
sbb
jmp
(bad)
or
fimul
mov
es
mov
pop
ss
pop
and
mov
adc
dec
mov
loopne
arpl
sub
sbb
jle
imul
inc
test
ffreep
inc
push
xor
mov
mov
sub
add
jmp
xchg
sub
es
inc
lods
and
sbb
fimul
lds
stc
adc
mov
or
ror
hlt
cli
ret
sbb
movs
add
(bad)
clc
adc
mov
frstor
shr
movs
xchg
pop
xor
outs
mov
out
jmp
sbb
adc
icebp
cmp
mov
fstp
enter
jmp
pop
ja
cmp
push
mov
addr16
xor
aaa
xor
popa
add
sti
jg
lds
and
std
sub
jp
addps
cmp
push
or
ret
cs
movntq
lods
(bad)
loope
push
pop
scas
and
cmp
mov
shr
ins
ror
add
out
or
int
xchg
sbb
leave
aam
push
ror
mov
jo
cmp
push
and
test
inc
inc
dec
dec
cmp
add
in
sbb
pusha
sti
daa
iret
mov
aad
ins
cmp
aam
loopne
push
jmp
sbb
pusha
jl
ins
add
xor
cmp
inc
add
cmp
and
lods
or
sbb
stc
dec
sub
cli
add
cld
loopne
mov
or
pop
xor
mov
test
dec
jae
xchg
add
(bad)
push
or
dec
(bad)
jns
fnop
xor
xchg
and
dec
leave
mov
(bad)
arpl
jno
fidiv
or
ins
cmp
jl
icebp
push
jo
div
inc
fstp
mov
idiv
jae
enter
add
sub
movs
mov
into
dec
jb
loop
dec
fsubr
stos
movs
fsubr
dec
dec
sahf
sahf
bound
inc
and
enter
in
sub
cmp
pop
(bad)
pop
gs
mov
cmp
mov
xchg
cmp
or
jle
jae
inc
or
sub
pop
pop
inc
xor
in
adc
rol
in
pop
imul
jnp
pushf
(bad)
mov
(bad)
lds
xchg
inc
ja
cmp
in
pusha
movs
pop
dec
mov
shl
adc
in
dec
jmp
(bad)
mov
add
push
loopne
stos
add
gs
cmp
or
iret
xor
inc
jp
test
inc
ret
ds
adc
jns
sub
jl
jp
ret
mov
mov
inc
adc
ins
out
cmp
cmp
mov
pop
popa
cmc
inc
lahf
inc
lds
out
jmp
inc
outs
(bad)
call
inc
add
jae
pop
mov
or
dec
rcr
cmps
push
push
inc
adc
(bad)
sti
inc
pushf
cmp
cmp
mov
and
jae
dec
imul
adc
inc
mov
pop
shl
mov
sbb
jnp
or
out
dec
push
rcr
test
dec
pop
xchg
pop
jb
leave
(bad)
(bad)
int
fs
jecxz
push
inc
pop
sar
stos
out
mov
push
pop
test
dec
pusha
aam
or
cmps
ja
rol
jnp
je
sub
rcl
(bad)
mov
aaa
ror
cwde
jecxz
xor
je
adc
data16
and
jb
jbe
push
mov
add
xor
pusha
mov
and
xchg
xchg
mov
(bad)
hlt
dec
or
lods
mov
dec
inc
pop
nop
imul
cmp
xlat
or
mov
xchg
outs
arpl
aam
push
dec
jns
mov
mov
outs
loop
js
gs
ss
inc
add
add
jmp
hlt
ja
jg
adc
mov
or
sbb
addr16
stos
or
adc
gs
sbb
cli
pop
sbb
aaa
mov
add
out
jecxz
sbb
mov
movs
rcl
(bad)
aam
push
xor
push
fs
mov
sub
xlat
adc
out
and
cmp
test
std
scas
retf
aaa
jbe
cmp
jl
dec
xchg
pushf
repnz
fisttp
xor
(bad)
stos
fnsave
xchg
popa
jmp
test
sbb
bnd
imul
add
mov
iret
xor
inc
aaa
cmp
xor
sub
pop
jno
movs
loopne
inc
fcom
mov
and
outs
pop
dec
gs
xor
xchg
mov
sub
mov
repnz
repnz
mov
push
inc
and
xchg
mov
push
jmp
adc
jne
imul
xchg
outs
mov
sub
inc
mov
jecxz
aad
nop
adc
mov
cmp
sbb
cmc
inc
mov
aam
std
shld
inc
(bad)
jns
js
push
(bad)
xchg
or
cmps
and
mov
push
das
push
cmp
cmp
or
jae
idiv
lea
mov
and
jb
clc
ret
mov
sbb
call
push
daa
add
lods
stos
mov
pushf
(bad)
fidiv
jnp
mov
outs
out
sbb
jp
sbb
mov
lods
repnz
jno
in
and
repnz
cld
fidiv
push
sbb
mov
not
pop
cmp
shl
int3
push
pop
xor
(bad)
adc
stc
cmps
sbb
pop
inc
ins
push
pop
jp
inc
ds
shl
ror
mov
dec
or
mov
mov
pop
das
inc
bound
repnz
mov
int
pusha
adc
xor
sbb
mov
js
in
inc
test
cmp
xchg
xor
out
shr
pop
bound
cld
mov
mov
inc
xor
mov
bound
push
outs
inc
jl
ins
repnz
add
dec
gs
ins
call
add
iret
xor
cmp
add
xlat
fs
push
add
jno
jle
push
sti
mov
aas
cmp
loop
add
sbb
(bad)
pushf
push
movs
or
movs
ret
and
ja
aad
lods
mov
retf
add
cld
lods
mov
mov
mov
loop
enter
inc
sub
fisttp
popa
jno
mov
pop
jl
xchg
cli
pop
xchg
aas
sub
push
lods
fld
jmp
push
pop
mov
cmc
fisubr
push
lds
imul
mov
pop
and
sbb
pop
xchg
dec
xchg
jae
push
scas
mov
mov
push
stos
push
cmp
ins
cmp
mov
call
stos
sbb
adc
gs
js
mov
fcom
lea
daa
(bad)
and
or
out
stos
fnsave
cmp
and
adc
in
outs
add
in
in
out
adc
mov
xlat
lea
rcr
push
and
fisub
test
cmp
imul
push
gs
int
and
ss
sti
jne
mov
pusha
jns
mov
mov
cmc
inc
dec
mov
inc
sbb
or
or
sub
jns
sbb
lds
cwde
lock
ja
fs
jae
xchg
add
xlat
ret
add
daa
xchg
outs
jl
or
daa
jbe
int3
jbe
mov
and
pushf
sbb
mov
push
add
movs
mov
aam
in
sub
and
outs
(bad)
mov
jmp
mov
sti
mov
mov
rcr
data16
lock
pop
gs
dec
sub
push
or
cmp
in
jmp
shl
mov
sbb
sub
xchg
aad
xchg
inc
mov
mov
je
push
mov
or
sub
pop
scas
test
fwait
xchg
inc
or
cdq
dec
sahf
ds
jmp
xchg
add
stos
mov
test
sub
mov
loop
imul
mov
add
mov
jp
test
dec
loop
bound
out
in
in
dec
out
das
mov
jecxz
xchg
mov
hlt
ins
xor
xchg
aaa
xor
sbb
fwait
push
test
call
imul
add
std
neg
rcr
pop
dec
in
dec
xchg
aad
(bad)
adc
shl
cmps
xor
and
nop
call
xchg
sbb
leave
jbe
xchg
call
lds
jnp
mov
in
pop
fst
(bad)
jo
xor
pop
dec
jns
retf
push
bound
scas
ss
ret
pop
outs
add
adc
ret
mov
cs
mov
push
arpl
bound
daa
lahf
and
mov
aad
(bad)
sub
icebp
or
push
or
ret
loopne
cmc
mov
and
lock
pop
push
xchg
mov
and
cmp
pop
inc
and
or
push
out
mov
add
push
sahf
fs
mov
stos
scas
add
pusha
pop
pop
xor
repnz
xchg
div
xchg
jp
xchg
pop
xchg
rcr
and
or
in
repz
mov
out
mov
mov
inc
lods
in
add
add
outs
fld
sbb
(bad)
mov
inc
or
mov
gs
sahf
call
dec
ficomp
loope
fbstp
and
dec
sub
fild
or
inc
jb
xchg
pop
dec
push
shl
mov
mov
pop
gs
and
inc
or
jne
mov
shl
xchg
loopne
xor
adc
mov
jo
int3
js
or
out
test
sbb
(bad)
(bad)
ror
adc
or
shr
arpl
rcr
repz
mov
adc
mov
sahf
imul
pusha
pop
jno
enter
mov
xchg
fs
jne
stc
mov
mov
push
jg
int3
outs
ja
addr16
ret
int
add
scas
dec
test
dec
cmp
and
into
in
shr
fisttp
pop
mov
out
out
mov
das
aas
cli
iret
fsubr
cs
scas
adc
cmp
scas
jge
push
mul
ins
sbb
mov
daa
xchg
fwait
sbb
cmps
xchg
pop
xor
mov
add
gs
test
enter
inc
and
addr16
dec
or
add
lods
sub
lahf
das
dec
ds
test
jmp
sbb
push
fsub
mov
daa
inc
ret
leave
int3
fsubp
inc
call
xchg
sub
jmp
mov
addr16
inc
stc
xchg
lods
inc
xor
xchg
ds
xor
rcr
repz
loopne
fdivr
popa
mov
popf
jae
mul
xchg
in
neg
(bad)
push
push
mov
ror
xchg
jae
arpl
push
es
jmp
dec
iret
dec
add
mov
xchg
jl
sbb
scas
mov
out
jg
mov
in
fcomp
mov
sbb
mov
mov
loop
aaa
pop
mov
in
mov
in
lods
mov
add
push
mov
test
leave
fdivr
xchg
arpl
int
test
xchg
jno
les
inc
in
adc
xlat
inc
rcl
adc
(bad)
ja
cdq
mov
mov
loop
sbb
xchg
sbb
push
jae
inc
cmp
jb
xchg
inc
xor
ror
sbb
mov
test
mov
pop
xor
lock
mov
inc
iret
jl
test
sbb
fstp
icebp
call
call
pushf
ins
pop
sbb
clc
mov
pop
loope
xor
sbb
fs
mov
paddusw
sub
xchg
pop
mov
ins
repz
inc
mov
gs
cmp
iret
sbb
pop
fxch
and
stc
pop
push
loop
inc
out
xor
(bad)
pop
hlt
imul
std
test
loopne
leave
xor
movs
push
mov
daa
sub
lds
jnp
fidiv
mov
stos
sub
pop
(bad)
jbe
cmp
lods
test
fbld
popf
arpl
push
cmp
push
repnz
jnp
xchg
fiadd
inc
cmps
shr
or
loopne
inc
jb
jbe
movs
std
outs
mov
dec
sahf
mov
add
div
cmp
dec
xchg
push
ins
mov
(bad)
clc
hlt
dec
xor
mov
(bad)
mov
push
push
gs
movs
push
push
sbb
mov
(bad)
jmp
es
xchg
rcl
dec
cwde
into
inc
pop
(bad)
sbb
into
push
test
(bad)
clc
mov
mov
test
xlat
daa
sbb
and
pop
aas
cwde
scas
push
mov
out
aaa
addr16
xor
ret
mov
cmp
xor
fldcw
jg
mov
mov
sub
test
loopne
pop
xchg
xchg
or
iret
pop
movs
mov
mov
jbe
pop
and
pusha
push
adc
adc
pop
jno
nop
dec
sub
mov
mov
cld
loope
inc
(bad)
push
nop
dec
mov
fmul
das
(bad)
sbb
pop
lods
fadd
xchg
js
fwait
(bad)
mov
cmp
not
mov
or
dec
in
(bad)
sub
in
xchg
mov
cdq
pop
popf
popa
test
nop
jp
mov
cmp
or
test
jp
(bad)
loop
or
mov
xchg
int3
pop
enter
pusha
and
jmp
in
mov
je
mov
cmp
(bad)
fimul
or
pop
inc
repnz
xchg
addr16
jmp
sub
xor
dec
mov
and
jnp
xchg
in
add
jne
xchg
xor
add
mov
push
push
mov
mov
dec
les
fnstcw
outs
mov
pop
and
je
rcr
sbb
mov
pop
out
adc
sti
xlat
aaa
inc
mov
and
ins
pop
cld
mov
jns
pop
pop
lds
pop
dec
or
shl
mov
adc
mov
push
cmc
(bad)
test
dec
out
ja
rcl
imul
ins
aaa
inc
or
or
imul
dec
sub
adc
adc
or
and
adc
xlat
or
ret
and
push
shl
sbb
sub
in
loope
das
sub
xor
hlt
adc
test
sbb
test
push
add
sbb
dec
or
(bad)
push
adc
sbb
lods
test
movs
mov
das
pcmpgtd
pop
add
xlat
adc
sub
or
cs
sub
(bad)
fld
loope
push
dec
mov
ret
xor
pop
lods
jmp
adc
daa
in
mov
dec
cmp
out
les
pop
repz
in
or
jae
lods
mov
pop
push
iret
pop
pop
mov
bound
addr16
and
xor
rcr
clc
movs
test
and
sub
and
out
mov
test
jns
or
test
sbb
xchg
cmps
sti
loop
mov
test
aaa
mov
jmp
fimul
xchg
retf
in
js
sbb
or
mov
inc
inc
add
shl
pop
adc
jmp
jmp
cmp
pop
into
std
cmc
sub
fnsave
and
in
adc
xchg
push
loope
loope
mov
jae
xchg
inc
aad
imul
std
cmp
push
movs
pop
adc
mov
inc
ret
and
jo
imul
mov
es
adc
jle
cmp
inc
aad
push
jmp
int3
sub
popa
scas
mov
bound
add
sub
sub
aad
repnz
xlat
pushf
dec
xchg
mov
dec
ret
add
or
adc
repnz
adc
mov
adc
lods
push
mov
pop
inc
hlt
gs
cmp
iret
xchg
or
cmp
inc
popf
mov
jl
pop
jg
and
ds
cmps
mov
ins
dec
daa
ins
sub
dec
imul
call
rol
loopne
xlat
jmp
pop
push
pop
mov
mov
sub
pop
xor
lods
in
rcr
mov
(bad)
pcmpgtd
add
mov
jmp
cmp
xchg
call
push
xor
test
pop
xor
sub
and
and
jae
mov
add
sbb
iret
or
jecxz
adc
jmp
inc
and
sub
pop
jmp
adc
es
sbb
hlt
mov
mov
push
cli
sahf
jnp
(bad)
test
nop
push
pusha
push
loop
xor
in
test
jle
jne
rol
(bad)
pop
jmp
xchg
push
mov
dec
pop
dec
xchg
icebp
inc
das
mov
jne
add
and
pop
shl
sti
push
sti
(bad)
jp
dec
out
push
test
outs
mov
clc
ss
popa
repz
push
xlat
seto
sub
mov
xchg
std
and
mov
fadd
sub
rcl
xor
rcl
inc
xor
out
xor
es
and
leave
scas
stos
stos
pop
push
push
fnstenv
movntq
mov
add
repnz
jns
and
xchg
inc
xor
push
mov
xchg
push
adc
sub
mov
icebp
js
cmp
xchg
fst
das
mov
cwde
dec
shr
shl
dec
retf
inc
xor
cwde
or
xor
fsub
pop
jno
dec
es
sub
dec
sbb
repz
adc
xor
sbb
(bad)
ret
mov
push
pop
and
add
cwde
(bad)
mov
stc
fild
inc
mov
add
stos
(bad)
xor
mov
xchg
mov
xchg
or
ret
mov
lds
mov
daa
int3
mov
out
and
movs
mov
jge
out
xor
cmp
mov
lahf
(bad)
mov
arpl
retf
inc
mov
or
out
movs
cmp
mov
out
push
pushf
cmp
adc
imul
das
aas
out
dec
scas
adc
clc
xor
retf
jle
xchg
sbb
cmp
jae
imul
inc
jmp
sbb
xor
mov
adc
add
add
inc
fsub
mov
std
jae
sub
jmp
and
cmp
jmp
imul
int3
ret
mov
inc
fstp
cmc
shl
rcl
retf
mov
movs
inc
je
shl
xchg
cmp
xchg
cmp
mov
fdiv
outs
pop
daa
add
inc
iret
les
into
add
repnz
sbb
out
loop
imul
stos
add
les
jg
sub
sub
stc
add
das
or
in
add
arpl
dec
cmp
sbb
clc
add
aam
jl
sbb
push
sti
aaa
je
or
xchg
inc
xor
pop
cmp
jle
sbb
fisub
pusha
ror
hlt
imul
pop
int
lea
sub
hlt
push
cdq
xchg
and
pop
data16
arpl
imul
ins
xor
js
mov
adc
mov
cmp
adc
mov
or
shl
push
mov
stos
xchg
sbb
mov
test
mov
xchg
lahf
cld
dec
and
pop
cmps
add
cmps
sbb
shr
mov
mov
cli
popa
add
push
cs
pop
mov
jl
adc
(bad)
and
adc
pop
into
jg
call
sbb
cmps
pop
mov
outs
xchg
sub
sub
or
cdq
mov
or
dec
xchg
or
mov
push
and
push
into
sub
int3
(bad)
cmp
push
aas
loope
bound
jbe
xchg
mov
and
pushf
mov
fbstp
cmp
test
cmp
sahf
aas
jge
jecxz
es
adc
cmp
push
xchg
pop
and
cli
xchg
jb
mov
out
test
inc
add
pop
xchg
in
mov
add
hlt
lds
fbstp
or
ss
mov
gs
test
mov
fisttp
pop
dec
mov
add
loope
or
mov
sub
in
repz
sbb
push
ret
push
inc
movs
push
std
shl
int3
sub
cmc
mov
das
das
test
or
in
inc
jbe
int3
fprem
jno
test
mov
mov
cwde
dec
clc
cmp
mov
jmp
mov
fcmovnu
popf
mov
movs
pop
add
jno
jns
mov
adc
mov
xchg
xchg
jb
add
add
mov
sar
sar
out
xchg
pop
jmp
dec
call
sbb
jmp
cld
bound
pop
push
mov
mov
pop
dec
mov
xchg
ror
push
sar
test
ret
xchg
sbb
ds
arpl
dec
and
stos
ficom
pop
jae
xor
adc
mov
mov
js
jmp
push
rol
sbb
inc
push
jae
mov
jmp
mov
dec
ins
push
out
push
cmps
jmp
out
mov
mov
into
test
adc
out
dec
pop
sub
sbb
mov
mov
sahf
sbb
arpl
fidiv
cld
mov
fs
(bad)
sahf
cmp
cdq
ins
xor
popf
in
xchg
aam
jo
std
jns
inc
mov
dec
cs
mov
daa
dec
inc
call
jle
mov
dec
cmc
(bad)
imul
push
xchg
movs
popa
fbld
jmp
inc
ja
inc
cmp
pop
mov
test
dec
add
in
call
xchg
in
jecxz
jo
ret
(bad)
mov
xlat
out
or
mov
js
addr16
mov
dec
stos
jmp
lahf
popf
add
push
mov
adc
daa
and
dec
(bad)
mov
or
jmp
test
adc
jg
pushaw
mov
or
loope
enter
out
pushf
mov
mov
inc
mov
sbb
pop
add
cld
xchg
cmp
cmp
imul
lea
pop
cwde
in
call
outs
xchg
(bad)
cmc
sbb
(bad)
rcr
imul
in
cmp
bound
adc
inc
cs
pop
and
mov
push
push
jg
add
adc
mov
cs
push
dec
enter
cmp
xchg
stos
cs
je
repz
inc
movs
dec
xlat
div
int3
mov
(bad)
sub
movs
and
call
call
pop
loope
data16
and
add
pop
pop
adc
adc
(bad)
into
call
dec
mov
dec
xchg
mov
add
xchg
pop
das
test
retf
push
pop
xchg
add
sub
dec
mov
jge
lock
dec
push
ja
sahf
adc
add
imul
jmp
inc
dec
inc
sub
dec
test
clc
ror
mov
pop
out
mov
jne
movs
ss
pop
cld
sti
cld
stos
imul
rcl
xlat
push
jp
pop
stos
xchg
cmp
rcr
je
sub
ins
sub
pop
inc
mov
outs
jo
rcr
test
les
mov
cmovb
and
in
xor
push
push
in
sub
add
nop
loope
cmp
int3
clc
icebp
(bad)
call
cmc
jnp
shl
or
lea
adc
mov
(bad)
add
or
pop
daa
push
rol
jno
mov
push
pop
les
test
mov
jl
add
dec
movs
out
mov
jecxz
outs
pop
scas
xor
retf
test
test
sti
test
jmp
cmp
jnp
movs
xchg
je
add
pop
call
call
mov
ror
sub
movs
cmp
dec
cmp
or
mov
adc
xchg
jo
mov
add
shl
cmp
(bad)
rcr
adc
ss
mov
pop
int
mov
mov
(bad)
stc
jmp
loop
add
movs
fistp
(bad)
call
adc
xchg
mov
test
outs
arpl
idiv
mov
jb
test
pop
out
xor
inc
(bad)
outs
mov
in
and
ror
sub
rcl
into
loop
adc
push
mov
mov
sub
sbb
push
stos
sti
fs
add
sbb
jecxz
xchg
sbb
cmp
xchg
imul
xor
sahf
sbb
or
outs
jp
rcl
jmp
xchg
mov
stc
mov
imul
and
add
lods
and
pop
dec
cwde
and
test
xor
mov
mov
cwde
pusha
mov
or
fisttp
add
fisubr
cmp
daa
loopne
xchg
jge
movs
jb
imul
into
sbb
call
nop
out
(bad)
clc
push
loope
push
ins
and
sub
(bad)
jae
or
lea
xchg
std
dec
mov
fs
inc
retf
unpckhps
sbb
shl
loopne
stos
adc
jmp
add
outs
cmps
push
fidiv
into
sub
jns
imul
fist
movs
ins
gs
pop
dec
or
lock
mov
cmc
and
(bad)
mov
data16
mov
cmp
(bad)
jmp
enter
shl
pusha
sbb
push
imul
xchg
dec
das
sub
add
pop
push
adc
leave
movs
inc
jae
test
scas
mov
inc
enter
mov
mov
or
pop
mov
(bad)
xor
inc
or
int3
fistp
ins
std
ret
dec
add
xcrypt-cfb
cmps
mov
pop
or
sbb
cmp
shr
jge
outs
(bad)
mov
push
and
rcr
call
retf
cs
add
adc
std
aas
std
mov
mov
in
stos
dec
out
je
shr
xlat
pushf
sub
push
out
mov
push
int3
xchg
hlt
mov
mov
ins
mov
or
jmp
xchg
add
cmp
jg
push
dec
rol
iret
movs
rol
ss
adc
or
popf
mov
sub
fisubr
cmps
jmp
mov
(bad)
stos
inc
imul
imul
shl
jg
out
jge
ss
test
in
sub
push
retf
mov
mov
mov
shr
jl
shr
cmp
inc
jle
cmc
in
add
ds
jp
add
mov
lods
add
mov
int3
mov
xor
mov
leave
sbb
mov
sbb
sahf
pushf
out
clc
inc
push
leave
or
enter
les
repnz
xchg
pop
mov
ds
push
shl
mov
scas
or
fs
xchg
pop
scas
(bad)
jnp
xor
xchg
call
pusha
(bad)
retf
sar
dec
das
dec
hlt
fsubr
int3
retf
mov
sub
xchg
pop
mov
dec
dec
call
xlat
mov
pop
daa
lahf
jb
je
fisub
mov
jp
pop
out
or
dec
movs
pop
cmp
retf
inc
das
(bad)
push
dec
sti
pop
into
or
ins
es
mov
pop
push
jns
repnz
inc
jg
aam
bound
xor
cmp
push
shl
jmp
scas
or
mov
add
jl
shl
inc
ret
push
popf
movs
xor
and
cmp
fistp
gs
jg
and
and
gs
fcmovne
sub
ret
jle
mov
or
jb
sbb
mov
or
add
and
sub
aad
iret
xchg
pop
test
repz
push
mov
or
xor
add
in
lock
repnz
ss
inc
sar
or
arpl
lahf
xchg
sub
mov
hlt
mov
imul
inc
xchg
test
outs
int
adc
in
stos
cs
(bad)
call
das
pop
lahf
add
mov
(bad)
iret
jecxz
and
in
xchg
sbb
retf
outs
xchg
ins
cmps
pop
pop
cmp
cs
out
push
inc
shl
sbb
neg
mov
or
and
mov
dec
fisttp
mov
xchg
or
push
and
dec
sti
shl
loopne
imul
pop
adc
cs
cdq
mov
pop
lods
mov
ja
test
fmul
test
std
mov
lahf
stc
jno
sahf
loopne
xchg
inc
nop
(bad)
adc
dec
(bad)
dec
sbb
xchg
push
fdivr
fdivr
stos
mov
or
cmp
call
fisttp
mov
push
or
adc
js
pop
push
call
je
dec
cmp
pop
jmp
loop
and
cmp
cwde
addr16
jbe
and
sti
std
out
inc
jge
test
div
into
adc
aas
clc
push
(bad)
std
js
adc
nop
adc
xchg
jo
cmp
fadd
jl
xor
dec
or
adc
sub
push
cmps
sbb
repnz
imul
xchg
mov
daa
hlt
pop
dec
popa
jo
add
aad
jo
cli
stc
add
and
ret
gs
adc
stc
lds
lahf
(bad)
(bad)
cmp
mov
xor
in
bnd
fwait
xor
and
jl
sahf
dec
add
icebp
inc
dec
jmp
jl
inc
inc
inc
(bad)
pusha
adc
mov
gs
iret
add
pop
sub
and
imul
cmp
pop
test
push
es
pop
dec
mov
pushf
dec
fidiv
push
xchg
arpl
mov
sar
adc
hlt
cmp
(bad)
scas
bound
inc
in
daa
inc
sub
out
push
(bad)
sub
or
jns
mov
fmul
fisttp
test
mov
mov
cmp
arpl
int
add
mov
ja
dec
add
mov
daa
cld
js
movs
fild
mov
sahf
cmp
stc
out
mov
jl
cwde
into
or
push
and
or
mov
add
xchg
mov
inc
sub
cmp
pop
and
retf
push
add
clc
(bad)
out
cmp
or
jb
in
adc
movs
pusha
mov
cld
or
pop
mov
xchg
mov
xchg
cld
icebp
adc
sub
cmps
repnz
enter
shr
sub
mov
fisub
fsubr
repz
je
mov
xchg
add
test
add
call
nop
retf
fsubr
(bad)
fnstcw
mov
jl
cmc
fidivr
mov
cmp
sub
mov
adc
sbb
add
repnz
jnp
ja
cmp
call
mov
sbb
mov
xor
arpl
xchg
loop
xchg
or
inc
cmp
and
ja
fidiv
lods
mov
sbb
ss
mov
jl
clc
inc
sub
mov
push
jg
(bad)
pop
sbb
and
jns
aam
pushf
mov
lahf
dec
daa
js
sub
sub
dec
dec
jb
cmp
mov
or
mov
out
fucomi
je
sbb
pop
add
loop
push
scas
sub
cmp
out
xor
shr
fstp
or
cdq
xchg
fsin
pop
pop
cli
repz
sub
idiv
loopne
mov
cmp
icebp
ret
jl
ret
(bad)
xor
pop
adc
sbb
sbb
sbb
mov
or
(bad)
cmc
mov
aam
xchg
ror
js
enter
(bad)
clc
int3
sub
mov
mov
jno
sub
dec
mov
loop
jge
test
test
pop
pop
rol
dec
loopne
xchg
sbb
loop
fimul
sub
jl
(bad)
(bad)
cmps
hlt
ja
(bad)
push
add
fistp
mov
sub
sub
jo
dec
ret
cmp
pop
and
test
jmp
call
mov
xchg
call
jp
(bad)
pop
test
adc
ret
cs
sub
xchg
jp
lock
sahf
jle
mov
add
or
jo
pop
popf
call
lods
push
test
xchg
stos
or
push
cli
sub
test
dec
ret
pop
or
jbe
push
cmc
jecxz
test
cmp
out
or
add
into
nop
mov
add
jo
mov
and
sub
ins
jmp
pop
push
add
xchg
push
push
xor
push
je
and
mov
or
imul
push
lea
inc
cmp
pop
aad
bound
loope
es
stos
or
cmp
xchg
out
sahf
mov
pop
dec
das
out
mov
popa
ret
out
mov
pop
ja
mov
inc
or
int
sar
cs
add
jne
push
inc
inc
and
dec
inc
scas
mov
cld
test
dec
xor
out
mov
loopne
pop
enter
fwait
ins
sbb
xchg
push
in
dec
fsubr
dec
aaa
jns
mov
imul
daa
mov
adc
cmc
cmp
lock
jmp
dec
aas
pop
xor
sbb
sub
movs
sahf
scas
cld
call
in
not
nop
mov
mov
mov
outs
ins
in
or
mov
and
pop
das
cmc
mov
aad
test
cli
sub
iret
mov
rcl
hlt
mov
out
pop
repz
adc
dec
mov
retf
jns
movs
aam
add
push
lds
mov
hlt
pop
out
pushf
hlt
lds
mov
push
lock
cwde
jmp
icebp
ins
and
popa
std
hlt
cmp
xor
mov
or
js
xchg
daa
or
mov
xor
fbstp
and
push
cmp
mov
loopne
imul
mov
repnz
fwait
sub
rol
sbb
push
out
push
int
in
in
leave
fist
xchg
bound
int3
mov
call
push
ror
sti
mov
mov
(bad)
mov
mov
push
add
cmps
iret
dec
data16
push
cmp
lea
ss
xchg
shr
mov
repnz
or
fsub
sahf
push
jmp
adc
(bad)
enter
popa
mov
mov
jns
ret
dec
stos
push
jle
imul
push
test
dec
fcom
daa
mov
inc
pop
sar
aaa
add
adc
outs
mov
pop
push
ins
ret
or
gs
mov
(bad)
mov
das
test
push
pop
out
xchg
xchg
mov
push
out
(bad)
pop
les
sub
jb
ret
add
outs
dec
frstor
hlt
push
outs
fstp
rol
mov
std
fidivr
scas
inc
test
xchg
xor
and
jnp
add
mov
or
std
gs
sub
dec
mov
cmp
push
shr
mov
retf
fs
push
jp
test
(bad)
mov
lock
scas
add
lahf
fcomp
xchg
sub
sbb
xor
xchg
mov
mov
mov
mov
jge
dec
mov
inc
int3
mov
inc
mov
lds
sbb
rcr
sbb
in
add
cmp
ret
mov
ja
repnz
mov
mov
add
es
or
or
inc
or
or
popf
fbld
xor
jae
push
jmp
add
or
sub
cmp
or
xchg
js
push
shr
and
fisubr
scas
xchg
xchg
mov
popf
jbe
adc
xchg
lods
cs
arpl
iret
(bad)
xor
ins
xor
mov
(bad)
fild
jo
call
jns
ret
dec
add
and
mov
jno
aas
pop
iret
mov
lock
(bad)
push
out
sbb
adc
out
jns
mov
adc
mov
sub
mov
sub
stc
dec
adc
mov
cmp
cmp
int
add
sub
in
pusha
hlt
inc
adc
push
(bad)
retf
adc
cwde
cmp
int
aas
jg
(bad)
js
sti
sbb
ds
mov
inc
pusha
sub
fsub
icebp
lods
inc
xor
fbld
sub
adc
das
fbstp
iret
pop
mov
ror
dec
into
jmp
jecxz
call
cli
ds
mov
push
clc
or
and
sbb
dec
jmp
lods
or
or
sbb
es
push
xor
and
ins
inc
out
pop
ss
gs
mov
fild
and
push
and
lods
pushf
enter
jae
pop
mov
dec
mov
leave
aam
adc
outs
dec
scas
mov
int3
add
std
enter
dec
sbb
add
shl
into
aam
pop
push
mov
lock
xchg
fisttp
mov
pop
xchg
repz
fwait
xchg
cmp
ret
cmps
or
jge
push
aam
retf
dec
mov
pushf
in
pop
loop
adc
fs
jbe
mov
sbb
and
cld
inc
sbb
fbstp
cmps
inc
mov
dec
setne
push
and
mov
movs
sbb
mov
int3
pushf
sub
mov
sub
(bad)
in
shl
jbe
pop
sbb
sub
dec
mov
outs
lea
adc
shr
adc
sbb
jg
pop
xor
outs
ja
fsubr
or
in
xchg
mov
fs
lock
fld
fwait
push
mov
cmps
js
xchg
aaa
xchg
aam
pop
mov
mov
out
or
mov
pop
lods
ret
xchg
repz
jb
jg
sti
or
and
add
rcl
outs
ret
cmps
dec
mov
lock
pushf
mov
inc
push
sti
xor
push
pop
(bad)
int3
push
stc
jle
test
xchg
xchg
test
adc
inc
out
push
shl
pop
pop
ret
hlt
arpl
lea
lods
cmp
cmp
(bad)
ins
cmovne
retf
out
push
pop
outs
xchg
loopne
adc
icebp
pop
shl
add
push
test
das
adc
adc
nop
lahf
int
pop
add
cld
mov
lds
in
arpl
loope
(bad)
mov
addr16
idiv
mov
cs
bound
mov
repnz
xchg
mov
mov
mov
xchg
enter
jle
(bad)
loopne
(bad)
jp
jns
ss
fs
jmp
nop
push
cwde
cmp
inc
adc
(bad)
aam
ficomp
mov
repnz
stos
push
out
push
inc
pusha
inc
jmp
mov
into
adc
adc
mov
loope
(bad)
jg
sub
ja
mov
push
ret
ret
shl
adc
pop
outs
xchg
cmp
call
add
lock
jne
nop
ja
addr16
jo
(bad)
xor
out
jo
std
push
sti
das
adc
lods
(bad)
or
lahf
iret
inc
xor
(bad)
pop
xchg
xchg
ins
popa
sbb
cmp
in
sbb
mov
fwait
daa
cmp
xchg
inc
push
push
(bad)
fsubr
clc
jne
fisttp
gs
daa
add
fstp
je
xchg
adc
movs
push
into
icebp
mov
into
scas
icebp
jae
int
jl
mov
xor
call
ins
xor
std
pop
jnp
fidiv
xor
int3
push
mov
imul
lea
sub
jne
mov
sub
gs
mov
pop
mov
sub
jnp
and
in
popa
neg
or
mov
xor
pop
fbstp
jg
int
sar
les
loopne
into
fs
jmp
mov
mov
mov
inc
push
int3
add
add
xor
xchg
pop
aam
mov
sub
xchg
inc
push
xor
jae
fs
sub
aas
out
fsub
gs
cmp
adc
call
and
ds
mov
call
aam
push
sub
pop
scas
imul
add
xchg
dec
fwait
lea
mov
jns
jae
mov
ins
xor
push
add
mov
mov
push
repz
retf
mov
push
js
outs
ret
stos
cld
xchg
retf
and
lahf
dec
addr16
pop
aam
fwait
xor
scas
fcom
dec
sub
mov
mov
out
push
inc
ins
xor
test
add
cmc
fst
xchg
aad
arpl
mov
add
inc
fild
push
pop
test
dec
or
mov
fisub
arpl
inc
mov
scas
sbb
sub
je
jae
cmp
xor
popa
pop
jbe
sbb
int3
mov
mov
rol
mov
xor
sar
jecxz
out
adc
adc
mov
cdq
mov
and
mov
shl
push
shl
add
sti
or
adc
(bad)
fisubr
ret
xchg
inc
sbb
or
xchg
(bad)
loop
stc
arpl
cwde
jecxz
es
sub
rol
mov
cs
ret
daa
and
push
mov
scas
fld
sahf
lods
cmp
xchg
outs
cmp
sbb
mov
inc
stos
jnp
fadd
xchg
loopne
sbb
adc
call
icebp
or
sti
iret
sbb
(bad)
lock
iret
rcl
inc
scas
or
out
in
lahf
es
push
mov
fprem
mov
dec
bnd
mov
fwait
push
and
loopne
sbb
or
lods
jo
sti
imul
and
inc
jbe
out
imul
nop
jns
mov
nop
mov
sub
jbe
lds
or
jmp
xchg
adc
push
push
loop
pop
jns
or
push
adc
adc
xchg
xchg
xlat
out
and
pop
dec
sub
icebp
hlt
and
jg
add
loop
std
bound
in
push
adc
lea
das
jno
push
in
adc
sbb
add
and
and
jmp
ja
jmp
inc
outs
push
adc
jg
das
jecxz
jl
(bad)
stos
inc
xchg
sub
push
push
push
test
imul
mov
jbe
cmp
inc
push
mov
mov
aaa
repz
adc
mov
(bad)
int
int
cld
fisub
inc
stc
shl
inc
loope
es
pop
scas
ja
mov
ror
inc
ror
icebp
stos
pop
add
pop
cmps
sub
je
inc
js
aas
and
xor
cmp
hlt
mov
mov
add
ds
jp
push
cmp
or
call
mov
or
ins
sbb
movs
sbb
jns
fdivr
xchg
mov
adc
dec
test
fs
push
int3
lds
dec
loope
fwait
ss
xor
test
adc
jno
adc
shr
shl
sbb
mov
daa
mov
cmc
test
or
and
xchg
sbb
sbb
sbb
push
(bad)
lds
xlat
jmp
mov
mov
pop
test
leavew
adc
imul
push
jg
adc
cmp
dec
fcomp
lods
or
dec
jns
jnp
popf
addr16
in
dec
jb
dec
cmc
jmp
xchg
inc
(bad)
mov
addr16
retf
push
nop
ds
rol
pop
mov
pop
pcmpgtb
lea
nop
and
(bad)
sub
push
add
fadd
dec
outs
arpl
mov
in
mov
sbb
dec
push
loopne
mov
push
lock
in
lods
je
adc
call
cmp
add
xchg
pop
jo
add
cmps
jno
xchg
sub
push
or
enter
jae
rol
cmps
and
mov
iret
xor
aas
div
nop
mov
daa
js
aas
retf
pop
test
push
pminub
sbb
(bad)
test
aaa
mov
test
in
stos
xlat
inc
pushf
mov
stos
leave
and
jno
jns
rol
mov
div
cmc
shl
jg
sar
leave
adc
push
add
data16
div
push
mov
jl
and
mov
inc
aas
cmp
or
cmps
jmp
ins
mov
xchg
mov
mov
ins
fimul
popa
ret
pop
(bad)
xor
inc
cmp
inc
aam
test
cdq
inc
mov
js
std
fld
mov
xor
xchg
jne
lods
cmp
imul
popf
aad
pop
int
mov
pop
push
jp
push
ja
ds
loopne
(bad)
jae
xchg
icebp
arpl
cmp
xor
add
jecxz
mov
sbb
sub
pop
mov
push
repz
add
fsubr
or
(bad)
cmp
sbb
dec
sar
pop
xor
mov
mov
fsubr
and
fdivr
push
outs
cmp
jle
gs
out
add
xor
and
in
daa
and
in
sub
std
and
dec
fs
cmp
fadd
lods
retf
loop
add
loope
rcl
rcl
cmp
mov
jmp
add
push
fldenv
and
out
push
pop
mov
bound
cmp
mov
and
loopne
mov
cmp
pop
pop
iret
mov
int
cmps
enter
lahf
push
or
or
test
dec
je
mov
bswap
jp
nop
test
in
push
loope
lods
jg
fadd
sar
inc
ficom
cdq
or
rol
arpl
shl
scas
lahf
std
xchg
push
ins
xchg
jbe
lea
gs
pop
sub
inc
scas
out
jbe
int
enter
mov
(bad)
jae
mov
dec
and
inc
pop
mov
cmp
fbld
fdivr
cmp
sub
or
imul
cmp
dec
fidiv
cmp
call
mov
and
fidiv
inc
xor
es
inc
fsub
cmps
dec
adc
and
aad
gs
jp
movs
xlat
shl
ins
mov
xor
daa
jecxz
paddsb
bound
mov
lock
enter
jb
and
das
aaa
sub
imul
add
adc
call
sbb
xor
ss
xchg
sbb
(bad)
not
mov
out
int
jmp
lock
cmc
fcom
cmp
mov
es
ins
in
fidiv
inc
add
leave
jne
xor
cs
pop
push
jns
mov
or
das
mov
jmp
mov
inc
ds
cmp
dec
fwait
mov
mov
rcr
sar
cs
dec
movs
cmp
adc
ss
xchg
pop
inc
sbb
gs
cld
addr16
stos
stc
rcl
dec
lea
scas
hlt
push
inc
les
ds
test
cwde
pop
push
stc
inc
xchg
sub
cwde
ss
xchg
inc
fsub
dec
les
mov
adc
or
jno
xchg
jno
add
pusha
(bad)
sahf
sbb
ret
scas
int
add
shl
imul
pop
sbb
fidivr
add
fnsave
sbb
test
inc
shr
pop
popa
add
dec
sub
ja
sub
add
mov
or
gs
fwait
es
jp
leave
ret
ds
scas
ja
(bad)
xor
cmp
ins
xchg
or
test
add
xchg
jge
std
cs
mov
in
cmp
sub
movs
dec
out
inc
mov
outs
and
jns
test
jbe
jbe
sbb
std
or
mov
hlt
es
sahf
inc
mov
mov
adc
cmp
lahf
mov
std
push
fsubp
and
data16
sti
mov
fld
mov
sbb
mov
inc
outs
test
shr
or
aad
push
inc
fdiv
jg
jns
xlat
lods
pop
ret
sub
cmps
hlt
sbb
xor
jbe
mov
cwde
xlat
cmp
push
mov
pushf
inc
movs
std
stos
jmp
mov
ja
inc
add
cmc
mov
test
out
sahf
push
xchg
data16
mov
or
into
scas
inc
pop
fwait
mov
daa
sub
shl
int
jg
sbb
push
cmp
push
(bad)
mov
popa
inc
jmp
dec
cmp
icebp
fsubr
lods
pop
inc
stos
pusha
in
jge
push
dec
lahf
aad
xlat
aaa
mov
out
and
cdq
add
sahf
xor
lock
mov
aaa
xor
shl
mov
test
mov
fadd
sub
sbb
retf
mov
sub
lock
mov
out
bound
iret
dec
adc
mov
pusha
mov
inc
out
imul
sbb
stos
lock
cs
mov
xor
dec
out
push
shr
stos
adc
xchg
inc
movs
inc
fwait
mov
pop
dec
push
shl
push
push
rcl
mov
loope
inc
sbb
pop
scas
adc
jne
cmp
sub
jno
adc
bound
fadd
dec
xchg
aam
sub
push
fdivr
sar
fsubr
dec
out
icebp
popf
aaa
pop
aas
movaps
loope
(bad)
push
mov
inc
jnp
mov
popf
and
mov
push
mov
sub
dec
aam
(bad)
pop
lock
sar
adc
fild
xchg
jg
mov
es
shr
setns
retf
test
sbb
and
mov
je
cwde
inc
push
popf
out
std
jmp
xchg
mov
int3
iret
mov
sbb
sti
ror
or
xchg
push
popf
fldenv
xchg
push
pop
jbe
mov
mov
xor
sub
cwde
cwde
out
xor
mov
xor
das
js
repnz
mov
pop
xchg
lds
jp
cmp
or
sub
mov
aaa
retf
dec
ret
and
into
or
add
rol
ret
lahf
cmp
push
pop
mov
aad
inc
std
add
xlat
xchg
cmc
jae
sub
scas
dec
cwde
or
xchg
add
inc
call
jb
loopne
fistp
cmp
xor
shl
mov
jge
aam
cli
pop
mov
mov
jno
xchg
adc
ins
mov
arpl
mov
sbb
lea
push
xchg
repz
aam
and
add
push
int3
aaa
mov
sub
cmp
fsub
jae
je
scas
mov
xor
div
sbb
into
sub
sbb
xchg
addr16
inc
popa
test
sbb
adc
or
dec
jp
dec
test
(bad)
repz
lds
sub
sahf
and
data16
(bad)
popa
mov
xor
repz
arpl
add
mov
lds
xor
xlat
pop
popf
xchg
cwde
cmp
enter
hlt
stc
mov
fcomp
popa
cmp
jb
imul
lock
sahf
mov
push
and
nop
in
jg
xchg
fxam
sbb
mov
in
jno
sbb
loopne
or
dec
test
mov
movs
add
jl
add
mov
dec
sti
popf
jmp
pop
test
sub
push
xor
sbb
add
(bad)
fcmovu
add
push
push
cmp
imul
xor
call
scas
mov
mov
ret
sub
push
cmp
adc
mov
jno
sbb
mov
out
iret
rol
test
sub
in
jmp
push
adc
dec
out
pmulhw
stos
sub
fs
mov
push
add
sub
leave
leave
fidiv
nop
into
fisubr
movs
mov
add
fadd
cmp
jae
pop
push
or
shr
loop
dec
ret
pop
xor
push
data16
retf
inc
aam
popf
cmc
xor
add
or
pusha
sbb
or
out
adc
fnstsw
inc
xchg
jns
jecxz
sbb
aaa
adc
out
mov
cmps
hlt
add
inc
push
cld
xor
aas
mov
xchg
and
mov
cdq
inc
and
mov
lea
mov
into
loopne
into
test
dec
jg
rol
test
(bad)
sub
mov
mov
adc
or
sub
or
add
fwait
in
(bad)
mov
fild
je
sbb
test
xlat
add
ret
dec
lods
xlat
or
sbb
mov
adc
mov
fdivp
inc
xor
cmp
sub
(bad)
cld
imul
sahf
and
push
inc
sbb
leave
fwait
pop
repnz
push
loope
mov
pop
jecxz
jb
pushf
das
sbb
xchg
shl
add
addr16
in
pop
sub
sbb
or
mov
retf
pop
cs
jb
(bad)
jmp
mov
lods
loop
cmc
push
pop
jg
in
leave
fdivr
and
push
xchg
cmp
(bad)
gs
push
jno
xor
mov
mov
jno
mov
fcomip
xchg
(bad)
cdq
cwde
dec
shr
mov
idiv
push
mov
pop
fwait
fwait
test
arpl
fldcw
icebp
xchg
pop
cmp
inc
lahf
push
sub
xlat
sub
stos
or
out
imul
pushf
cmc
mov
xchg
pop
pop
cs
scas
test
shl
bound
jmp
mov
loop
adc
call
xchg
xor
xor
pop
and
add
mov
cmp
push
cs
sub
and
add
stos
xor
fnstcw
dec
cs
inc
(bad)
addr16
mov
gs
push
addr16
pusha
mov
mov
mov
call
jg
cmc
push
aam
pop
bt
adc
inc
ret
or
fld
fild
jle
adc
out
std
add
test
xlat
cs
aad
xchg
(bad)
inc
or
push
sub
xchg
pop
or
xor
cmp
loopne
cwde
daa
cmp
mov
repz
mov
jnp
mov
sti
in
cmp
cli
mov
push
pusha
mov
mov
jo
dec
retf
cwde
jo
dec
gs
push
out
sbb
or
jmp
sub
or
and
leave
cmp
retf
xor
iret
loopne
mov
popa
leave
loopne
mov
and
not
test
push
jne
and
inc
and
xchg
cmps
xchg
xchg
fwait
(bad)
xor
rcl
sub
or
ja
repz
ja
cmc
ret
(bad)
stos
mov
dec
dec
out
scas
imul
sbb
fwait
les
(bad)
loopne
in
std
repnz
mov
inc
outs
adc
push
push
jnp
(bad)
loope
pop
mov
xor
(bad)
jecxz
and
arpl
add
aaa
push
les
mov
push
mov
das
mov
repnz
or
jno
dec
xchg
and
sbb
shl
(bad)
sub
hlt
dec
out
sub
add
push
bound
fwait
pop
mov
inc
es
aas
mov
fdivr
jne
mov
mov
scas
mov
and
sub
jnp
in
cmp
inc
lods
rol
outs
icebp
repz
and
adc
pop
stos
push
pop
inc
jl
shl
pushf
out
cli
dec
sbb
cmp
fdivr
dec
mov
xor
or
loopne
pop
cmp
adc
push
in
mov
xchg
into
jo
dec
imul
and
gs
jle
in
push
and
jmp
mov
outs
vpcmpgtw
scas
ins
mov
pop
test
inc
mov
enter
nop
pop
cwde
mov
jp
sti
mov
mov
int3
pusha
fmul
push
jp
daa
sbb
jl
dec
fmul
mov
xchg
jecxz
dec
ficom
test
cmps
and
mov
add
(bad)
enter
test
pop
cmps
sar
jnp
mov
xlat
pop
push
add
fidiv
fdivr
and
popf
repz
add
aad
sbb
dec
sub
xor
xor
xchg
sbb
dec
scas
inc
clc
(bad)
cmp
mov
je
dec
jl
xor
xchg
stos
push
sbb
fs
loope
and
dec
repz
mov
retf
dec
mov
js
div
xor
xor
clc
and
mov
jne
sub
mul
mov
mov
push
pop
fwait
retf
adc
fiadd
add
repz
pop
mov
into
mov
(bad)
inc
push
in
dec
sar
stos
popf
jns
sti
xchg
adc
mov
mov
jg
sub
das
lock
xchg
rol
sbb
dec
pusha
add
lahf
push
sbb
shr
jecxz
or
fst
mov
fistp
mov
xchg
mov
push
(bad)
cli
popf
outs
adc
jb
(bad)
arpl
outs
es
inc
lds
xor
es
fneni(8087
loope
mov
loop
dec
shr
outs
or
add
int3
sti
imul
pop
retf
(bad)
retf
int3
cmp
cs
outs
mov
dec
fdiv
cwde
leave
pop
cmp
jmp
imul
pop
jge
inc
and
(bad)
int3
xchg
ret
ins
jle
es
push
lds
ret
out
stos
xor
add
imul
scas
aam
(bad)
cli
adc
and
pusha
sbb
scas
dec
xchg
push
xor
sub
sub
sahf
push
or
push
xchg
fstp
or
sub
xor
aam
inc
imul
out
int
cmp
ds
adc
mov
fisubr
imul
psubq
fcomp
fs
mov
rcl
push
outs
shr
sub
mov
mov
jp
pop
push
stos
xlat
adc
out
or
xchg
cmc
sti
test
data16
mov
(bad)
movs
dec
dec
cmp
add
pop
mov
mov
xor
add
imul
fist
cmps
mov
popa
cmp
mov
stc
arpl
dec
jb
lods
push
cmp
(bad)
pop
push
out
(bad)
xlat
xchg
frstor
or
mov
mov
add
mov
sub
fldl2t
rcl
in
inc
xchg
lea
ret
pop
adc
sbb
cmp
scas
jns
push
in
cwde
xchg
jno
mov
sbb
popf
cmp
jle
cli
ins
xor
mov
loop
jbe
mov
int3
jns
aad
or
xor
stos
fisubr
sub
(bad)
pop
fcomp
xchg
pop
fstp
inc
and
adc
std
add
ins
aas
into
mov
ret
mov
inc
adc
push
pop
xchg
push
inc
mov
cmp
inc
gs
jno
ret
shr
push
sub
xor
push
xchg
mov
push
jg
jl
sub
pop
aam
adc
push
in
add
mov
mov
cwde
retf
and
mov
cmp
cmp
and
mov
xor
push
mov
mov
jbe
add
leave
iret
ins
cmp
int3
pop
out
(bad)
das
rol
xchg
mov
popf
jae
xchg
clc
xchg
pop
xchg
xor
cmc
pop
dec
call
sub
pop
mov
inc
push
inc
cmp
das
out
in
or
mov
xchg
and
in
hlt
sbb
mov
fwait
cld
jno
fldenv
pop
cmp
fs
xor
jle
and
dec
je
popa
sbb
sub
push
cmp
loop
dec
stc
xchg
clc
dec
dec
cmp
jmp
into
and
and
mul
cmps
mov
das
not
pop
ficom
jnp
loop
in
pusha
cmp
aaa
mov
jle
and
cs
mov
sub
outs
sbb
dec
stc
cmp
test
sub
ins
std
cld
ss
outs
inc
stc
mov
ret
sti
push
mov
inc
cmp
sbb
test
xchg
hlt
cmp
(bad)
outs
out
inc
lea
push
push
ficom
sar
mov
xchg
in
sub
scas
gs
push
out
popa
xor
xchg
retf
push
(bad)
aaa
add
rol
xchg
lea
pop
mov
jecxz
js
sub
test
out
add
xchg
(bad)
out
push
jae
(bad)
adc
sub
iret
ins
mov
cli
or
inc
push
in
mov
fisub
or
lea
js
js
mov
push
push
test
aad
popa
mov
mov
cmps
jl
stc
jns
std
aas
fsubp
(bad)
sbb
push
xchg
test
push
add
lahf
cli
iret
push
in
pusha
pop
aaa
xchg
mov
jb
movsx
jp
dec
fild
mov
xor
xor
xchg
inc
loope
cmp
jle
fdiv
and
xlat
or
xchg
xor
xor
cdq
mov
je
pushf
ds
push
adc
inc
mov
jnp
fwait
mov
fimul
sbb
scas
pop
in
les
sub
xchg
fisttp
lods
mov
inc
inc
fs
cdq
cmp
sbb
rcl
jae
sbb
jmp
or
or
cmp
pusha
stc
pop
shr
imul
xor
ds
xchg
aas
iret
adc
add
sbb
sbb
sub
pop
inc
pop
cwde
js
sahf
jecxz
xchg
nop
or
mov
arpl
ja
sub
push
push
xchg
xchg
mov
mov
and
out
mov
fcom
in
in
test
jne
cmps
mov
(bad)
jmp
cmp
and
inc
and
jnp
adc
sbb
jl
xor
mov
or
dec
xchg
hlt
ds
jl
sar
int3
addr16
mov
pop
fiadd
inc
and
js
rcl
mov
mov
sub
xchg
movs
sub
popa
call
scas
push
cmp
loopne
popa
pop
aaa
das
jmp
sub
hlt
xor
movs
ret
enter
scas
inc
jmp
xchg
push
jbe
cmc
xor
xchg
aaa
fmul
(bad)
and
mov
repnz
sub
mov
or
fst
cmc
pop
dec
cmp
sub
add
in
adc
pop
std
inc
adc
cmp
test
iret
xor
cmp
add
cwde
dec
retf
cmp
mov
jmp
data16
push
cwde
repz
cmp
sbb
mov
shr
xor
lds
xchg
push
pop
cmp
cwde
mov
cmp
popa
jmp
out
movs
aaa
sub
cmp
inc
jb
ret
retf
inc
out
mov
xchg
mov
(bad)
sbb
push
push
add
push
add
fs
push
cli
mov
or
int
fdiv
mov
pop
pop
cmp
jle
or
test
push
dec
pop
xchg
dec
cli
js
xor
addr16
popa
sbb
pop
or
mov
or
push
or
jecxz
and
mov
xchg
stos
nop
frstor
loop
xlat
cld
adc
jbe
xor
fisttp
data16
cld
int
adc
mov
add
inc
outs
popa
loop
xor
pop
or
ror
mov
fmul
test
and
inc
stc
inc
pop
or
pop
fist
push
add
cld
xor
pusha
mov
or
adc
inc
add
shr
gs
cmp
mov
mov
jle
adc
mov
mov
test
aas
das
add
mov
das
push
enter
and
movs
retf
xor
movs
fs
std
mov
fs
cs
cld
pop
imul
pop
lea
and
or
and
or
xchg
and
mov
jno
inc
lods
or
fldenv
mov
pushf
outs
add
xor
mov
in
out
inc
mov
mov
int
xor
imul
bound
adc
jae
mov
push
xchg
dec
sar
daa
pop
adc
test
dec
xor
iret
(bad)
and
adc
aaa
imul
repnz
xlat
pop
sub
mov
mov
das
repz
cmps
jmp
cmp
dec
imul
push
adc
push
sub
jmp
iret
pushf
jmp
dec
movs
mul
xchg
push
xchg
mov
sahf
dec
sar
pop
add
sbb
push
in
pop
inc
daa
push
xor
and
push
push
cmp
jmp
mov
mov
inc
mul
and
cmp
rcr
jmp
jl
push
sbb
cmp
rol
or
xor
pop
jmp
scas
mov
jmp
loop
call
mov
in
hlt
stos
mov
and
push
loopne
scas
jns
xor
into
mov
adc
call
and
frstor
rcr
push
jb
rol
pavgw
ret
jae
cmps
loope
mov
bound
mov
mov
jg
ror
pop
pop
imul
dec
jns
mov
mov
sbb
mov
imul
and
popf
(bad)
call
jg
pop
and
mov
retf
push
push
or
dec
cs
mov
xchg
push
cli
dec
imul
jmp
mov
jmp
xchg
cmp
test
cmps
out
mov
add
outs
sbb
repz
cmp
mov
stos
test
cs
iret
dec
sub
ficomp
je
dec
mov
cmps
leave
cmp
fwait
ret
add
dec
ins
and
(bad)
inc
dec
add
test
and
push
mov
inc
int3
aam
scas
mov
inc
cli
cmc
xor
jns
pop
and
cmc
mov
cmp
jl
pop
adc
enter
sbb
je
pop
ror
fimul
sbb
bnd
mov
les
icebp
xor
xchg
inc
jl
pop
jmp
cmp
xlat
pop
pop
and
push
ret
push
xchg
(bad)
pop
add
call
push
add
dec
xor
pop
or
stos
in
xor
inc
enter
out
(bad)
(bad)
in
dec
jp
sbb
retf
push
and
push
mov
push
ins
cmc
and
mov
adc
pop
js
mov
cmp
icebp
jo
in
dec
pop
jg
loopne
loopne
cmp
ja
ins
cmp
out
(bad)
test
in
inc
xchg
sbb
push
into
xor
xor
pop
sub
out
xchg
jl
sbb
pushf
mov
aad
xlat
cmp
xor
stos
js
dec
int3
xchg
into
mov
and
mov
and
(bad)
stc
jns
aas
dec
sbb
adc
dec
xor
cdq
mov
fisttp
push
iret
sar
loop
xor
js
mov
aad
push
jae
and
popa
inc
mov
jmp
(bad)
mov
sahf
jle
cli
shr
dec
push
lods
mov
mov
lahf
repnz
push
mov
retf
shl
pusha
in
pop
ins
inc
enter
xchg
test
push
dec
int3
bound
cmp
jge
pop
xchg
lods
movs
int3
fcmovnb
and
xchg
mov
rcr
pop
lock
out
mov
lds
call
adc
fcom
jbe
sbb
mov
lds
retf
sar
in
and
and
nop
inc
adc
imul
mov
mov
and
out
push
loopne
push
mov
jp
int3
dec
pop
xchg
jb
xor
cmp
add
add
mov
adc
fisubr
jmp
cmc
mov
ret
pushaw
and
mov
int3
mov
xor
retf
test
sbb
xchg
jecxz
and
mov
pop
cmp
jnp
fstp
ret
pop
mov
mov
mov
xor
fdivrp
ja
adc
fisubr
mov
sub
jg
dec
ds
cmp
call
and
sbb
call
xor
mov
dec
adc
test
outs
shr
fcom
or
fimul
dec
mov
cmp
jmp
dec
hlt
xor
push
push
xor
adc
loopne
loop
pop
gs
fsqrt
adc
jae
js
adc
jmp
xor
fnstcw
mov
shl
retf
mov
mov
pmuludq
rcr
imul
dec
popf
or
icebp
cmp
aaa
xchg
ror
scas
ficomp
outs
sar
sub
loopne
jp
call
shr
inc
enter
and
add
sbb
stos
pusha
jmp
and
sub
je
pop
jp
imul
jns
das
cld
xchg
retf
mov
sbb
dec
aaa
leave
clc
pop
xchg
sbb
dec
mov
and
push
sar
xchg
xor
call
out
or
jne
sbb
xchg
inc
addr16
add
cmps
pop
arpl
das
call
mov
inc
(bad)
mov
fbld
aad
sub
fisub
xor
aas
inc
xchg
mov
rcr
loop
ficomp
push
pushf
mov
sti
dec
test
std
adc
mov
jl
cmp
lods
in
icebp
xchg
mov
jae
cmp
fisttp
arpl
dec
(bad)
jecxz
dec
iret
popa
sub
dec
das
push
call
call
sar
cmp
adc
pop
push
sub
dec
into
xchg
inc
mov
push
shl
clc
cdq
sti
data16
xchg
inc
in
jmp
rol
enterw
xchg
sub
rcr
sbb
cli
int
jns
bound
push
dec
sbb
not
stos
add
fsub
std
test
add
and
jnp
pushf
retf
scas
mov
cmp
out
es
pop
push
and
add
pop
sub
cmp
ins
adc
ins
adc
adc
call
inc
adc
aas
fsincos
jecxz
ror
xor
jle
push
add
xchg
out
add
into
movs
std
sub
test
mov
lock
xchg
mov
mov
out
stos
xor
adc
and
dec
push
imul
and
push
pop
test
ins
mov
pop
sbb
mov
das
ss
xor
cmp
retf
movs
aam
pop
nop
push
jle
sbb
je
sub
popf
mov
jne
xchg
mov
loop
cmps
ins
cmps
inc
lock
bound
pop
pushf
std
pop
mov
int
jge
or
pushf
out
imul
mov
pop
(bad)
lock
fld1
and
out
clc
push
xor
mul
idiv
push
inc
cs
dec
popa
jp
(bad)
mov
adc
aad
ds
(bad)
popa
daa
mov
in
ficomp
jmp
jmp
in
mov
sahf
and
movs
out
into
inc
or
push
push
and
mov
xchg
adc
lock
jno
outs
add
in
mov
xchg
push
pop
stc
fld
inc
cmps
fs
retf
out
call
fisubr
jp
mov
cdq
or
ins
scas
arpl
cmc
mov
movs
fld
mov
jno
jbe
pop
outs
inc
dec
pushf
sbb
fdiv
dec
mov
xlat
xor
xchg
(bad)
mov
pop
sti
mov
and
fisubr
sub
adc
sti
or
push
xor
push
add
in
into
arpl
jmp
xor
dec
mov
mov
adc
shl
repz
cmp
retf
cmps
pop
jno
clc
(bad)
retf
inc
dec
icebp
stos
jl
enter
push
cld
adc
mov
mov
pop
in
add
sar
jb
mov
(bad)
fstp
(bad)
scas
xchg
dec
add
and
ins
sbb
(bad)
cmp
and
sti
movaps
(bad)
data16
mov
or
imul
mov
mov
jg
call
sbb
in
ins
xor
xlat
inc
xor
sbb
(bad)
mov
retf
or
int3
push
push
icebp
sar
ds
mov
(bad)
aad
retf
imul
(bad)
sbb
dec
shr
ins
fadd
jmp
fdivp
imul
add
mov
add
jns
pop
or
enter
or
xchg
adc
xchg
sbb
xchg
and
test
into
dec
push
xchg
jecxz
or
test
loope
sub
in
inc
lds
and
cwde
js
rcl
pop
adc
addr16
fsub
lods
lea
xchg
mov
jmp
jecxz
test
iret
mov
cdq
test
or
das
aas
lods
cwde
add
push
call
mov
shr
mov
repnz
and
repnz
call
adc
add
ror
stc
or
sti
sub
int3
out
clc
cmps
cdq
in
xor
(bad)
mov
movs
les
ins
jo
stos
xchg
lock
sti
sbb
mov
(bad)
inc
sti
cld
jb
test
icebp
adc
and
popf
sar
dec
fmul
add
pusha
mov
retf
int3
in
js
sub
rcl
and
sbb
stos
out
int3
pop
dec
xchg
(bad)
push
cmps
jb
call
test
std
pop
jle
cmp
push
fimul
ficom
inc
out
leave
and
pop
(bad)
add
call
or
inc
imul
xchg
pop
retf
adc
fdiv
push
xchg
sbb
pop
gs
fldenv
xchg
or
cdq
jae
shr
pop
ds
xchg
ds
xchg
inc
arpl
add
(bad)
out
mov
leave
xchg
mul
retf
in
gs
leave
jno
inc
mov
dec
out
ins
push
add
int
jns
adc
fdivr
pop
push
xchg
lea
adc
xor
sub
sbb
sub
out
sar
and
adc
add
cdq
add
jo
into
sub
in
cmp
push
mov
bound
mov
dec
in
scas
push
push
sbb
or
adc
retf
pop
clc
mov
push
out
sub
jl
mov
inc
scas
neg
fs
fwait
inc
shl
repz
jecxz
jae
rol
ins
mov
cld
repnz
mov
cmp
lods
jnp
call
pop
mov
xor
(bad)
pop
jmp
xchg
adc
pusha
popa
xchg
sbb
fdiv
inc
add
mov
fild
mov
clc
inc
sub
aad
sbb
lahf
sbb
sbb
pop
add
inc
je
mov
push
xor
iret
push
out
push
jb
dec
aad
out
ror
adc
imul
or
scas
adc
mov
and
inc
inc
add
jp
jnp
cmp
out
jo
xor
adc
adc
and
adc
cmp
(bad)
in
fwait
push
xlat
ja
add
ja
in
(bad)
enter
sub
cdq
ss
int3
int
ror
addr16
add
leave
ds
dec
shr
jl
mov
(bad)
cmp
jno
aaa
dec
push
fst
(bad)
mov
adc
adc
cmp
xor
xchg
xchg
test
icebp
jg
or
jbe
dec
das
and
dec
adc
xor
mov
or
outs
cmp
pop
mov
loop
fucomi
cli
fdivp
dec
mov
popf
movs
mov
pop
jl
movs
std
mov
in
(bad)
add
adc
repnz
jecxz
scas
(bad)
int
and
inc
mov
(bad)
xchg
jmp
jns
jmp
ficomp
mov
lds
cmp
pushf
lods
jo
sbb
ror
xor
dec
and
je
jae
and
cmp
movs
dec
jge
out
add
pop
int3
pop
ret
xchg
cmp
call
mov
loop
popa
cmp
xchg
icebp
cld
cmc
outs
mov
jl
outs
cmp
cmp
cli
cmp
aas
xchg
loope
mov
sub
repz
mov
and
adc
and
xchg
fwait
mov
loop
movaps
inc
outs
adc
into
lods
jno
add
jnp
data16
mov
fsincos
imul
inc
xchg
fs
push
push
dec
lahf
cld
cmp
xchg
inc
loope
arpl
aam
test
cmp
add
or
fisttp
xchg
push
repnz
stos
inc
(bad)
pop
dec
int3
mov
data16
iret
mov
push
sub
pop
push
(bad)
sbb
shl
ud2
rol
std
and
jne
shl
jno
dec
adc
mov
xor
push
dec
and
pusha
enter
adc
fisubr
mov
jp
sahf
sahf
pop
imul
cmp
push
sbb
xchg
cwde
push
bound
mov
and
mov
jp
inc
or
popa
fisttp
jp
mov
popa
dec
imul
es
inc
sbb
and
dec
pop
fild
cdq
push
jp
mov
shl
mov
outs
cmp
aam
mov
mov
mov
ror
inc
inc
out
pop
jmp
cld
adc
inc
mov
pop
mov
push
ss
pusha
and
inc
adc
(bad)
cmp
ja
aas
aad
sbb
test
and
and
sub
arpl
das
fist
(bad)
xor
popa
mov
jae
adc
push
inc
std
icebp
jns
add
fs
pop
xor
(bad)
cli
push
test
jo
push
mov
int
pop
sbb
lea
dec
push
lock
cmp
inc
sub
xor
mov
mov
add
jno
adc
dec
(bad)
push
jno
arpl
(bad)
push
ss
nop
and
je
inc
fwait
jecxz
push
outs
jmp
add
stos
pop
shrd
adc
jg
mov
pop
nop
lods
inc
sahf
cmp
jbe
inc
pop
mov
pop
sbb
adc
pop
mov
and
nop
jne
pop
loope
or
adc
pushf
xchg
scas
(bad)
sbb
push
call
mov
in
adc
cwde
aam
(bad)
jp
push
xor
call
jae
dec
inc
or
ret
xchg
retf
pop
bound
inc
out
arpl
sbb
inc
mov
jns
fcmovnbe
popa
jnp
and
aad
ja
inc
xchg
shl
outs
jns
and
call
loop
pop
repz
and
or
adc
mov
or
cld
movs
and
mov
or
sahf
jne
hlt
xor
or
(bad)
push
dec
sub
dec
or
outs
dec
scas
xor
enter
aam
ins
jl
push
mov
lods
adc
fs
(bad)
push
aad
aad
add
fld1
lock
fimul
and
nop
nop
jns
dec
bound
xchg
fcmovnu
je
mov
lahf
and
aad
push
idiv
enter
pusha
sub
lods
mov
bound
adc
mov
lods
cli
loope
adc
adc
mov
icebp
retf
and
mov
jge
pop
in
add
daa
dec
pop
(bad)
jbe
fldcw
push
xchg
and
fmul
mov
and
push
xorps
shr
inc
sbb
jo
sbb
push
cmps
std
loopne
(bad)
push
aad
jb
and
fistp
fist
fnstcw
fbstp
mov
pusha
jb
inc
xchg
mov
and
inc
mov
jb
iret
push
sbb
pop
adc
pop
pop
(bad)
jl
mov
test
jmp
sbb
je
popf
iret
fisttp
push
cmp
sbb
jns
adc
enter
dec
mov
lds
inc
gs
xor
cld
test
inc
or
lock
mov
fs
dec
shl
and
or
(bad)
int
adc
push
gs
cmp
push
stos
fwait
pusha
and
(bad)
push
sti
leave
adc
dec
rcr
mov
mov
push
xor
cmp
xor
and
pop
(bad)
xor
add
xchg
xchg
dec
sahf
je
push
cmp
cmp
outs
xor
in
cmp
cmp
jmp
in
cmp
sub
cmps
cs
out
push
xor
fcom
dec
arpl
and
and
fstp
es
enter
sub
mov
jecxz
cli
retf
cmp
outs
mov
popf
int3
retf
cli
jne
pusha
cmps
jmp
dec
sub
mov
stos
jne
(bad)
cmps
xchg
mov
scas
mov
or
dec
cmp
sti
mov
adc
mov
lods
in
ret
dec
push
fisttp
push
sti
and
push
mov
gs
push
shl
xchg
sahf
sbb
in
fild
movs
out
jbe
xor
out
fbld
clc
dec
xchg
aad
dec
xchg
or
add
es
ins
inc
cwde
and
pop
jp
(bad)
stc
and
data16
and
ret
pop
xchg
hlt
cmp
push
lods
adc
or
das
jnp
or
adc
(bad)
hlt
xchg
lods
mov
fcomp
pop
outs
cmp
imul
out
push
mov
and
jnp
stos
mov
mov
not
push
adc
xor
pop
xchg
icebp
pop
in
call
push
sub
pushf
dec
aam
cli
dec
jmp
push
fs
mov
rol
out
in
mov
out
adc
(bad)
int3
retf
aas
pop
sbb
loope
dec
aad
mov
and
jle
jb
scas
gs
dec
(bad)
gs
mov
jmp
jle
das
mov
sub
adc
mov
cmps
gs
call
mov
pushf
out
jle
and
jg
jecxz
cdq
inc
fsub
mov
ins
or
cmp
stos
mov
mov
dec
cs
inc
xor
hlt
mov
sub
push
add
mov
mov
pop
sub
xchg
cld
inc
jle
aaa
stc
scas
repnz
jp
in
pop
pop
jecxz
mov
popf
sub
aas
inc
jmp
pop
sub
mov
shl
lods
pop
jl
dec
les
fwait
in
std
pusha
inc
lods
rol
push
push
pop
retf
dec
push
sti
icebp
test
push
pop
addr16
lock
fwait
jp
(bad)
leave
xchg
lods
or
cmp
dec
dec
shl
out
sbb
mov
mov
ficomp
pop
lock
mov
inc
imul
sahf
pop
sbb
mov
and
cmp
fiadd
fs
mov
fisub
aas
ficom
nop
mov
aad
dec
pop
cmp
daa
(bad)
push
mov
stc
mov
mov
mov
in
and
pop
popf
cwde
and
sbb
cmp
pop
cmp
adc
enter
outs
aam
push
and
mov
add
mov
aaa
jecxz
mov
fadd
mov
(bad)
and
cmp
mov
rol
movs
inc
cs
je
scas
leave
push
cwde
lods
cmp
mov
lock
fdivr
cld
or
out
xlat
fldcw
idiv
xchg
addr16
sbb
adc
adc
scas
aad
mov
lods
cli
iret
adc
jmp
mov
movs
adc
cmp
sbb
mov
aas
cmps
pop
jmp
push
cld
push
(bad)
bound
shl
push
inc
rcl
das
popf
rcl
jg
add
ficom
repnz
js
mov
rol
xchg
xor
xchg
stos
test
mov
inc
add
in
adc
mov
push
test
adc
idiv
jg
lods
xchg
out
lock
scas
pop
push
(bad)
jmp
xchg
popf
in
adc
pop
cdq
out
not
push
adc
fmul
(bad)
loop
push
cli
adc
mov
xchg
aaa
int3
imul
mov
sbb
cmps
dec
aad
inc
jp
ret
(bad)
mov
pop
aas
mov
ret
cs
and
bound
je
test
pop
dec
pop
jmp
push
xor
fnstenv
loopne
sti
cmps
test
js
xlat
aas
idiv
xor
pop
jb
out
pop
add
cmp
test
rol
cld
and
stos
dec
xor
xchg
jecxz
adc
popf
in
sub
sbb
jns
jge
cli
gs
jg
add
movs
xor
xor
jb
cmp
sbb
jo
inc
(bad)
mov
mov
ins
mov
addr16
stos
sbb
movs
push
pushf
jae
test
mov
or
in
test
(bad)
ret
cmps
outs
es
cmp
and
stos
push
nop
leave
repz
or
neg
inc
mov
jb
ss
push
sbb
shr
xor
push
and
cmp
xchg
repz
lds
or
ds
jbe
arpl
dec
rcl
test
xor
pop
mov
jnp
rol
ret
mov
mov
movs
push
fstp
jp
and
hlt
cli
aad
aas
jbe
lea
in
shl
leave
mov
int
or
xchg
stc
nop
(bad)
aam
pop
sbb
test
inc
push
test
mov
pop
ins
xchg
jg
scas
pop
int3
and
push
mov
shl
mov
es
(bad)
mov
in
(bad)
cmp
(bad)
mov
fdiv
dec
cmp
or
lea
pusha
or
and
sub
pop
and
and
arpl
fcmovbe
lea
lods
ror
(bad)
stos
inc
sbb
lods
fidiv
pop
dec
arpl
push
xchg
into
fs
inc
stos
xlat
mov
arpl
cdq
aas
jle
xchg
and
mov
xchg
mov
jb
out
jl
jmp
or
mov
mov
push
pop
sti
jge
xor
repz
pop
mov
test
dec
cli
shl
fstp
sbb
out
adc
jmp
dec
adc
push
inc
jle
test
out
call
jmp
pop
mov
(bad)
cmc
cmp
cmp
(bad)
mov
sahf
jns
pop
mov
push
repnz
dec
sbb
push
cmps
mov
out
or
imul
pop
sbb
xor
xor
lea
clc
fwait
xor
into
inc
fistp
ror
in
cmp
xlat
std
mov
rcl
add
imul
aas
shl
rcl
hlt
fcomp
pop
xchg
jl
add
mov
sbb
test
movs
adc
push
imul
sti
ja
call
aam
cmp
pop
movs
aaa
idiv
loope
xchg
pop
jbe
shl
add
cdq
dec
or
lods
mov
and
adc
or
cld
pop
jae
test
mov
jge
sub
or
pop
inc
mov
add
lods
sub
in
movs
mov
in
ins
cmp
xchg
jno
mov
repz
pop
outs
(bad)
jl
jb
out
rcl
dec
or
xor
and
mov
je
dec
fnstenv
mov
push
ret
lea
and
or
cmp
out
pop
icebp
pusha
pop
xor
(bad)
push
fdivr
js
push
(bad)
loopne
mov
jmp
inc
rcl
mov
cmc
stc
jb
daa
jo
(bad)
gs
sub
push
sbb
inc
dec
fnstcw
sar
xchg
loop
or
gs
xlat
dec
inc
popf
(bad)
or
pusha
push
std
ins
dec
mul
scas
in
loope
mov
sub
push
jp
out
hlt
imul
cmp
pop
std
aam
test
inc
mov
addr16
and
in
shl
aaa
or
aaa
jae
out
es
test
mov
pop
ficom
(bad)
dec
fsub
xor
cld
fs
adc
mov
or
mov
pop
movs
pop
jge
popf
loope
pusha
or
stos
jecxz
mov
mov
(bad)
pop
or
jbe
enter
sbb
in
mov
test
adc
pop
cmp
xchg
sti
inc
stc
out
xchg
call
fwait
call
pusha
jl
sub
push
and
jo
sub
jnp
daa
jp
adc
sbb
pop
mov
push
leave
pop
xlat
ret
dec
pop
and
cmps
and
mov
inc
push
mov
push
aad
inc
pop
fbstp
adc
(bad)
lods
lods
sub
gs
aas
clc
cmp
in
mov
cmp
je
imul
mov
xor
cmp
cmp
out
sar
fmul
inc
out
ss
mov
inc
clc
or
outs
xor
jmp
bound
inc
addr16
xchg
jmp
mov
loopne
lods
or
and
mov
inc
jo
xor
mov
lea
pop
mov
test
repnz
mov
xchg
out
(bad)
test
xor
mov
data16
icebp
pop
stos
mov
fadd
leave
mov
repnz
push
ins
xchg
mov
xchg
add
cmps
add
ins
cld
in
fs
adc
xor
das
push
or
pop
(bad)
fnstsw
cs
xor
mov
inc
aaa
enter
fidiv
pop
or
ja
ret
test
fiadd
jmp
clc
cmc
sub
nop
xchg
sub
test
repnz
ret
and
outs
dec
fdivr
test
pop
xlat
aas
stos
ins
mov
rol
les
out
pop
xor
ja
pop
fimul
push
mov
test
pop
or
add
scas
dec
mov
jnp
inc
cld
mov
pop
pop
xor
test
(bad)
out
mov
add
daa
dec
aam
pop
test
add
rcr
inc
imul
xor
int3
inc
mov
js
xor
mov
dec
xor
movs
push
loop
ins
inc
jle
mov
mov
leave
je
inc
hlt
jle
cmp
daa
ror
mov
xor
jo
mov
sub
mov
je
inc
xor
loop
pop
mov
rcl
retf
out
aas
mov
lea
leave
jle
inc
push
pop
mov
push
dec
jmp
int3
mov
mov
(bad)
and
jmp
mov
aam
mov
jmp
fwait
int
xchg
or
outs
xchg
inc
fs
(bad)
mov
xchg
or
or
outs
push
dec
inc
test
or
es
shl
int
(bad)
fstp
cmc
and
mov
mov
sahf
cmc
(bad)
(bad)
shl
cmp
inc
push
out
mov
mov
cmps
into
push
xlat
(bad)
clc
test
dec
je
repz
cmc
retf
cwde
pop
mov
pop
fs
hlt
(bad)
cmp
loopne
repnz
outs
jnp
hlt
int
mov
loopne
rcr
mov
mov
xchg
mov
xchg
sti
(bad)
xor
mov
ins
clc
mov
add
loopne
cmp
push
sahf
int3
fdiv
xor
mov
sub
add
xchg
cmp
test
ins
test
(bad)
out
fadd
mov
lahf
cs
outs
sbb
ror
out
pop
scas
pop
jae
rcl
fisubr
xchg
and
mov
jbe
jecxz
dec
sar
pop
in
xor
xor
dec
sbb
mov
les
dec
in
sahf
mov
mov
sbb
icebp
lods
mov
inc
leave
push
cmc
sub
jle
jae
jmp
fwait
movs
and
sbb
push
add
add
in
jge
movs
(bad)
shl
pop
fst
aad
scas
arpl
mov
cmp
jno
push
fcom
or
outs
jge
icebp
mov
arpl
adc
dec
mov
cli
push
jb
cld
adc
loope
sub
mov
jbe
in
out
ins
pop
(bad)
xor
mov
daa
add
dec
jle
ja
pop
jp
mov
xchg
leave
push
or
jp
repnz
(bad)
je
gs
(bad)
jmp
shr
popa
je
or
pop
mov
lock
add
ins
sub
jmp
add
scas
and
and
push
cmps
in
mov
xchg
arpl
mov
(bad)
(bad)
pop
shl
sub
shl
mov
push
pop
clc
fwait
or
nop
sbb
sub
fidiv
call
pop
push
inc
fcom
jle
int
dec
jmp
sbb
loopne
pop
cmp
out
jl
movs
mov
jns
(bad)
daa
adc
test
sub
movs
in
dec
in
add
pop
mov
out
sbb
mov
hlt
inc
xchg
and
jecxz
cmp
fistp
jle
mov
in
or
mov
(bad)
push
inc
xchg
in
mov
cs
outs
mov
cs
sbb
mov
iret
or
out
sub
ret
dec
jecxz
rcr
mov
push
xchg
xchg
push
pusha
mov
sbb
pushf
pop
leave
sub
jp
test
aam
mov
outs
test
(bad)
sar
das
aad
or
sub
mov
and
dec
cmp
xor
mov
shl
repz
in
aad
lock
xchg
out
pop
dec
cmp
cmp
sub
sub
fcmovu
add
neg
lods
cmp
adc
inc
movs
out
inc
mov
pop
inc
mov
mov
mov
out
loop
cmps
add
inc
jp
inc
mov
cmps
int3
lods
test
mov
xor
sub
xchg
jmp
pop
push
mov
(bad)
mov
dec
xchg
jno
ret
mov
push
cdq
ficom
mov
imul
movs
cld
xchg
test
daa
inc
add
imul
jbe
lods
lock
test
repz
sub
mov
lea
jl
ret
and
jb
ror
push
lock
test
mov
(bad)
int
pop
adc
add
inc
inc
mov
in
jne
mov
mov
pop
leave
jns
fistp
dec
dec
pop
sub
mov
push
jmp
call
dec
ins
pop
fwait
push
adc
cmp
pop
mov
mov
xlat
sub
cmp
mov
or
jle
and
jb
movs
or
push
aas
ins
retf
add
ficomp
jge
jbe
lods
mov
nop
jbe
popf
stos
jb
leave
(bad)
hlt
or
scas
pushf
ret
cmc
mov
popf
jp
repz
jmp
jmp
push
xor
xchg
test
add
pop
int3
aam
popa
sbb
movs
jge
mov
pop
nop
add
dec
repz
mov
cld
mov
mov
sub
pop
xchg
dec
sub
pop
stc
stc
in
call
push
stos
jmp
aam
pop
pop
retf
pop
fmul
cmp
shr
js
add
jbe
in
jb
dec
and
xor
mov
dec
push
push
mov
inc
out
mov
ret
xlat
in
mov
pop
xor
jl
inc
sub
sti
add
xchg
or
hlt
scas
dec
leave
sbb
and
cli
and
fstp
jmp
aaa
lods
rcl
push
mov
les
inc
inc
jg
xchg
adc
adc
pop
adc
sub
shr
sbb
daa
test
outs
stc
shl
xchg
sub
push
(bad)
cmp
jmp
cld
test
cmp
in
adc
call
aas
repnz
mov
retf
sbb
jl
cmp
cmp
stos
sbb
std
add
mov
sahf
lods
sub
aas
cwde
push
ret
hlt
fsubr
mov
mov
or
xchg
addr16
in
sub
cli
sub
and
aam
adc
sar
int3
gs
ror
js
ficom
mov
lock
fwait
sub
jne
lea
retf
pop
out
adc
sbb
sbb
inc
outs
mov
inc
xchg
push
or
popa
loope
add
jne
push
pusha
sbb
cmc
fst
push
add
rcr
jg
add
retf
je
(bad)
mov
sbb
in
paddb
mov
aaa
cli
fwait
pop
push
sbb
loop
pop
jge
pop
out
adc
cwde
into
mov
xchg
mov
(bad)
in
in
imul
retf
xchg
rcr
retf
movs
or
add
das
test
adc
xchg
or
xchg
cmc
fadd
shl
ja
not
mov
sahf
cwde
jl
push
fwait
loopne
mov
mov
bound
(bad)
outs
inc
dec
ins
sti
jmp
cld
mov
lea
lds
dec
dec
test
das
ss
loope
sar
imul
mov
sub
add
retf
cmp
adc
mov
push
sub
sahf
or
ror
pop
mov
(bad)
sub
jns
ja
adc
mov
scas
pop
xchg
sbb
sbb
(bad)
in
mov
push
mov
int3
and
pop
nop
sbb
push
or
sbb
scas
popa
(bad)
push
adc
push
ret
fsub
sbb
add
or
cs
adc
inc
mov
xor
ins
push
repz
mov
repz
pusha
xor
or
fidiv
pop
jmp
cmp
(bad)
(bad)
dec
loope
ins
jnp
sbb
das
adc
xor
add
fwait
mov
fsubr
in
xor
sub
lods
lahf
push
fs
sub
and
loopne
or
out
retf
xor
ret
xchg
sbb
jecxz
add
or
pop
push
inc
cmps
sbb
test
ins
aam
and
mov
call
jae
mov
cmps
or
add
cwde
pop
add
not
enter
cmp
sbb
mov
and
(bad)
pop
lahf
inc
sub
ficom
mov
adc
cmp
out
mov
push
aaa
inc
lods
mov
dec
push
sahf
mov
lods
ror
lahf
cmp
std
or
inc
mov
mov
fnstsw
xchg
dec
jmp
xor
pop
out
sub
call
or
and
dec
mov
lea
mov
sahf
nop
inc
cmp
(bad)
setl
cwde
xor
movs
or
adc
sti
cmc
adc
mov
jecxz
adc
xor
xor
sub
mov
je
iret
addr16
les
fld
bound
loope
mov
inc
adc
adc
jo
pop
cmps
xor
add
(bad)
clc
out
scas
lods
mov
mov
repnz
cmps
ss
stos
out
pop
and
or
(bad)
or
push
(bad)
addr16
retf
mov
ret
test
pop
adc
test
mov
inc
pop
popf
popa
cwde
movnti
clc
jne
nop
push
add
push
mov
sbb
stos
xchg
mov
push
xor
in
adc
dec
xchg
cld
ja
cmps
adc
xchg
push
sar
or
sbb
cdq
push
adc
xchg
sti
daa
add
mov
loop
mov
sahf
add
add
jbe
or
cmp
retf
scas
jns
retf
(bad)
int
fadd
and
ja
sbb
mov
jp
hlt
rcl
mov
xor
outs
ror
nop
push
xchg
xlat
sbb
pop
imul
adc
or
(bad)
and
mov
push
push
lock
push
test
inc
stc
shr
cmp
jg
pushf
mov
sub
mov
push
daa
cwde
jb
xchg
in
(bad)
pop
dec
mov
adc
mov
icebp
ins
scas
xchg
cmps
ss
inc
sbb
popa
or
cmc
dec
jl
cmp
xor
inc
mov
push
xchg
mov
and
test
leave
mov
adc
inc
mov
das
je
out
jmp
(bad)
mov
je
xor
dec
daa
popf
(bad)
cmc
int
aam
dec
mov
push
adc
inc
popa
sub
aaa
mov
out
mov
and
mov
aam
jmp
(bad)
in
lahf
stc
call
inc
cmp
mov
xor
mov
adc
inc
xor
cmp
lods
loopne
mov
call
outs
pusha
(bad)
or
sub
push
int
sbb
shl
sub
dec
mov
test
push
add
dec
rcl
cmp
fld
push
js
dec
or
enter
cmp
xor
jmp
xchg
jo
int
jnp
fimul
stos
mov
dec
outs
cli
jo
jne
push
movs
rol
shr
mov
leavew
mov
fadd
test
fnstenv
push
shr
mov
push
jno
in
dec
int3
cmp
xor
jo
xor
mov
push
jae
add
and
mov
and
test
in
repz
mov
mov
fisubr
(bad)
loopne
mov
adc
loope
pop
fdivrp
push
cdq
dec
jb
std
mov
in
ja
mov
test
or
push
jp
cmp
adc
div
add
mov
jmp
cvtdq2ps
pop
leave
add
icebp
(bad)
dec
nop
iret
ret
and
ss
pop
pusha
popf
aaa
and
in
imul
xor
lock
or
in
arpl
or
outs
int3
and
push
xor
pop
mov
inc
sahf
push
mov
retf
sti
call
sahf
pop
mov
mov
add
push
cmp
lock
(bad)
movq
pop
mov
and
sbb
sub
pop
pop
mov
in
hlt
pop
mov
mov
xchg
pop
mov
add
shl
xchg
jne
mov
fwait
(bad)
mov
in
lods
mov
cmp
mov
test
ja
pop
sub
out
in
cs
arpl
xor
add
nop
and
daa
data16
arpl
retf
pop
daa
pop
mov
dec
call
dec
hlt
xchg
std
into
push
mov
cld
stc
pop
ret
sbb
cld
ror
ins
dec
push
std
out
and
mov
jns
or
les
test
icebp
in
imul
mov
fs
test
retf
mov
xor
sbb
aam
mov
stos
(bad)
icebp
iret
test
outs
call
push
xor
mov
loop
cdq
sbb
inc
leave
sbb
adc
and
rol
std
mov
call
dec
cmps
sub
xchg
jno
loope
popa
sub
lock
ins
xor
ret
cli
push
test
test
add
cmp
in
xchg
fisttp
sub
outs
std
fsubr
outs
sub
mov
test
lods
ud1
daa
jnp
addr16
ds
es
jg
out
repz
int3
dec
push
pushf
sbb
nop
ss
add
arpl
cwde
dec
imul
arpl
lock
je
add
mov
inc
inc
es
jnp
aaa
push
jne
mov
add
inc
(bad)
out
mov
arpl
imul
add
pop
adc
jns
int
push
adc
xchg
outs
cmp
inc
les
arpl
adc
mov
addr16
je
imul
hlt
push
xchg
in
out
lock
mov
mov
test
push
rcl
cmp
xor
jmp
shl
adc
lahf
and
mov
rcl
paddq
cmp
push
sbb
out
and
ret
test
dec
and
psubusw
xor
jl
xor
jo
out
in
les
mov
xor
mov
xchg
inc
push
les
jl
pusha
lods
in
jmp
dec
jle
push
test
scas
sbb
dec
cmp
jecxz
mov
movs
dec
in
iret
fiadd
ror
mov
add
inc
inc
or
lahf
xor
int3
shl
mov
(bad)
adc
xor
ret
inc
in
fsub
rcl
sub
pop
bound
xchg
shl
push
icebp
xor
cmc
add
fnstenv
adc
jmp
jns
arpl
(bad)
int3
cli
push
data16
pop
scas
mov
jge
ret
cdq
ret
cmps
stos
pop
adc
sub
test
(bad)
aaa
ins
fwait
pop
mov
mov
adc
shl
test
pop
jle
nop
int
(bad)
std
dec
lock
mov
outs
rcr
cmp
cmc
pop
div
push
push
out
adc
and
in
in
dec
addr16
mov
data16
xor
mov
and
mov
mov
mov
cmc
enter
adc
lahf
inc
lea
fdivr
adc
and
scas
es
or
retf
mov
pop
dec
add
leave
scas
xor
inc
add
dec
sub
jb
loop
cld
les
movs
cmp
mov
gs
jmp
mov
mov
or
or
into
arpl
and
xacquire
xor
jl
stos
loopne
and
div
push
iret
popa
je
inc
mov
dec
or
pop
les
sub
and
xlat
fdiv
and
cmp
push
add
jnp
int3
fmul
adc
jns
rcl
dec
scas
dec
cli
xchg
lds
xor
int3
inc
mov
dec
add
icebp
es
test
jnp
pushf
sub
(bad)
adc
add
jge
mov
out
pop
test
sbb
push
push
cmp
vmaskmovdqu
fincstp
push
sbb
idiv
sub
push
adc
jp
fadd
enter
nop
inc
ss
cmp
mov
xor
push
in
mov
inc
add
inc
mov
test
or
pushf
jmp
pop
je
adc
imul
cwde
sbb
and
ss
push
pusha
out
test
jecxz
clc
aas
add
xchg
cdq
mov
jo
aaa
pop
cdq
lea
out
(bad)
ret
(bad)
sub
jmp
add
cmp
aam
sti
les
mov
out
add
pop
mov
push
dec
in
outs
jg
int
iret
mov
scas
loope
pop
js
sbb
dec
pop
adc
inc
or
retf
mul
push
push
xor
adc
bound
mov
inc
sub
sbb
jo
xchg
mov
sbb
cld
cmp
jb
dec
cmp
movs
mov
sub
xchg
fimul
(bad)
shl
inc
pop
adc
or
arpl
stos
push
jg
jo
pop
dec
enter
push
int3
mul
or
push
ins
pop
lods
cmp
out
cmp
adc
inc
aam
popa
dec
neg
stos
sbb
imul
jae
mov
pop
pop
mov
and
jg
cmp
fidiv
stos
push
mov
sbb
and
mov
push
dec
scas
popa
ret
scas
stos
dec
mov
lds
shl
in
sub
jnp
pop
dec
push
out
hlt
in
pop
dec
or
mov
arpl
(bad)
imul
std
leave
stc
daa
jecxz
mov
cmp
xor
cdq
(bad)
cmp
pop
aam
push
mov
sahf
fdivr
push
mov
mov
push
dec
mov
mov
pop
and
cmps
shl
scas
dec
mov
aad
data16
jp
dec
or
cmp
fisttp
ja
pop
inc
add
adc
xor
shl
aad
fidivr
xor
pop
neg
add
add
jo
inc
jl
cmp
bound
bound
xchg
mov
icebp
loop
sub
mov
fs
sub
inc
sbb
dec
stos
jg
lds
stos
sbb
jg
inc
in
inc
sbb
out
pop
popa
sbb
mov
inc
and
std
dec
(bad)
addr16
in
fwait
shl
rcr
loope
jb
and
or
sbb
mov
and
stos
pop
lods
push
icebp
mov
dec
nop
lahf
bound
add
retf
pushf
leave
repnz
pop
lock
ins
and
xchg
cmp
pop
rol
mov
jae
jns
mov
xor
xor
and
ret
fs
mov
ret
not
movs
add
in
add
jae
sbb
mov
push
cmp
mov
sub
imul
loope
jge
mov
add
mov
jmp
js
add
sbb
jbe
sub
add
and
sbb
mov
fcom
push
sar
dec
mov
sbb
mov
push
std
movs
cmc
cli
or
xchg
aam
adc
cmp
jb
out
pop
imul
pop
xchg
mov
les
push
sub
sub
pop
and
pusha
imul
jmp
xchg
scas
in
shr
cs
stos
fadd
ins
jmp
repz
hlt
shl
cmp
outs
add
pop
shl
mov
cmp
adc
mov
xor
mov
clc
mov
repnz
mov
push
inc
into
jae
mov
daa
movs
sbb
mov
sbb
mov
mov
or
je
inc
ror
jp
inc
ror
ds
adc
and
add
retf
sub
push
aad
dec
cmp
pop
lds
cmps
and
movs
inc
sbb
fs
jmp
sbb
push
pop
pop
inc
pop
xchg
sbb
rsm
adc
js
bound
jo
aad
mov
xor
mov
mov
nop
sub
inc
jmp
rcl
cmp
fwait
into
iret
clc
lods
or
dec
frstor
fbstp
push
add
frstor
mov
or
leave
bound
ss
(bad)
mov
mov
enter
sti
stos
pop
fisttp
xchg
into
aaa
mov
push
cmp
xchg
sar
(bad)
shl
sub
(bad)
mov
xchg
xor
int3
and
or
lahf
shl
das
pop
mov
mov
int3
out
mov
popa
(bad)
cmps
and
(bad)
call
jns
dec
movs
and
ficom
add
dec
ja
ds
fisub
cmc
mov
xchg
sbb
movs
xor
cmp
test
cmps
mov
adc
out
inc
jne
in
push
xchg
sbb
int
pop
dec
mov
mov
in
cmc
rol
push
xchg
ins
enter
out
xchg
aam
jecxz
add
ss
ret
ror
ins
sbb
addr16
dec
xlat
fdiv
in
sbb
and
sbb
cmp
(bad)
push
sbb
push
call
das
test
inc
jp
pushf
push
cmp
pusha
mov
les
or
xchg
js
cdq
test
add
xchg
cmp
jbe
sar
push
sub
push
push
adc
mov
push
fcomp
mov
std
mov
and
mov
dec
or
mov
sub
fyl2x
inc
test
shl
mov
rcr
sbb
sbb
pop
les
mov
xchg
fimul
imul
outs
add
dec
add
int
push
add
mov
outs
push
movs
mov
data16
mov
ins
pop
mov
std
inc
mov
(bad)
fwait
dec
test
sub
cld
inc
fsub
in
movs
xor
xor
ins
mov
nop
test
jo
and
into
or
jbe
pop
adc
je
xor
cwde
xor
test
and
loop
test
mov
mov
aam
call
call
push
leave
mov
inc
mov
adc
call
addr16
cmps
pop
or
pop
adc
int
sbb
push
cwde
test
or
mov
dec
sub
jbe
xchg
mov
movs
add
mov
fadd
mov
movs
cmp
adc
or
(bad)
mov
jno
fs
push
out
je
pop
and
inc
bound
sub
add
test
sub
test
and
mov
dec
mov
rol
mov
mov
bound
xor
add
in
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
ins
fdivr
adc
add
add
add
add
data16
jb
add
jb
popa
add
imul
add
add
add
add
add
add
add
ror
arpl
aam
aaa
jo
in
and
lahf
shr
pop
xor
arpl
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
push
sbb
(bad)
lods
ja
mov
(bad)
jnp
mov
inc
je
jge
pop
sub
out
inc
lods
xchg
out
sub
mov
inc
jp
ja
pop
push
push
xchg
(bad)
loope
out
lahf
sar
xor
das
push
rcl
out
mov
loope
out
lahf
xor
sbb
adc
and
jno
sub
xor
arpl
rcl
jo
sbb
and
popf
shr
sbb
rcl
aaa
je
sbb
mov
mov
rcl
xor
pop
sahf
mov
popf
loope
test
shr
or
jae
rcl
aaa
jo
or
or
mov
pop
lahf
adc
jo
pop
mov
and
lahf
shr
sbb
arpl
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
shl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
jg
test
xchg
(bad)
adc
push
pop
sbb
or
mov
rcl
aaa
jo
cmp
jns
shr
sbb
aaa
jo
pop
mov
(bad)
std
xchg
out
lahf
shr
sbb
arpl
rcl
aaa
xor
int3
or
push
xor
arpl
adc
jb
sbb
or
mov
rcl
jo
sbb
or
mov
add
aaa
jo
sbb
or
mov
rcl
jae
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
aaa
jo
sbb
or
mov
lods
adc
jo
push
cwde
loopne
sahf
shr
imul
inc
adc
sbb
dec
mov
xchg
in
js
shr
adc
(bad)
or
rcl
cmp
xor
xchg
(bad)
sbb
gs
rcl
xchg
mov
sahf
out
xchg
cld
retf
fwait
addr16
inc
je
and
xchg
shr
adc
mov
ret
jg
sbb
in
lahf
xlat
cmp
cdq
arpl
fidivr
fild
fwait
in
out
lock
sbb
push
dec
pop
ror
aaa
jo
sbb
call
sbb
cmp
sbb
or
mov
adc
adc
dec
sbb
and
push
adc
(bad)
aaa
jo
sbb
or
mov
rcl
mov
loope
std
add
sti
push
adc
arpl
pop
sbb
in
pop
pushf
mov
or
rcl
cmp
sub
xchg
ret
xor
cmp
xor
(bad)
(bad)
sub
ds
shl
cmp
xchg
shr
fst
aaa
jp
lds
test
ds
fs
ficom
aaa
jbe
sbb
loopne
cdq
shr
sub
pop
es
add
aad
shr
sbb
arpl
ficom
inc
xor
dec
pushf
loope
in
jns
shr
imul
aas
popa
pop
xor
int3
or
mov
(bad)
adc
push
pop
pop
mov
(bad)
loope
out
lahf
out
sbb
mov
rcl
aaa
rcr
and
test
sub
push
mov
rcl
aaa
popa
sub
jmp
popf
or
xchg
arpl
ficomp
xor
inc
sbb
or
or
adc
and
xchg
std
and
pop
test
pop
fiadd
xor
(bad)
loope
retf
rol
and
rcl
cmp
jnp
lahf
fcomi
or
rcl
aaa
jno
sbb
inc
lahf
fld
sbb
popa
pop
ret
adc
adc
or
lea
rcl
pop
pop
sbb
dec
pushf
loope
in
add
adc
rcl
inc
pop
dec
sbb
jo
rcr
mov
std
xor
mov
repz
out
mov
and
mov
clc
add
jo
ss
or
lahf
shl
adc
xchg
jl
clc
xor
jo
adc
out
xchg
cli
xor
mov
ficom
inc
sti
pop
sbb
dec
pushf
loope
in
add
or
adc
push
pop
sbb
out
xchg
cld
and
sbb
arpl
fidivr
pop
adc
xchg
fs
sub
cmp
aaa
jp
adc
in
not
sub
xor
and
pop
adc
in
add
sub
ds
jo
push
lahf
out
fs
sub
daa
lea
fnstcw
pop
adc
out
xchg
ret
and
and
jo
or
test
or
jl
jo
adc
xchg
mov
sub
ds
fs
inc
sbb
pop
lahf
fld
sbb
popa
pop
les
jle
pop
adc
sbb
sbb
sbb
and
xchg
xor
mov
xor
inc
in
jecxz
ja
xchg
repnz
outs
push
mov
(bad)
loope
loopne
lahf
sar
pop
fwait
popa
adc
dec
xor
inc
xchg
cmp
add
mov
mov
pop
test
and
popf
stc
and
xor
push
jo
pop
call
mov
mov
rcl
std
jle
mov
sahf
out
out
lahf
shl
add
adc
sub
fwait
jp
jmp
ret
and
jnp
leave
dec
cmp
and
pushf
pushf
rcr
push
mov
stos
adc
loope
inc
fwait
or
or
mov
rcl
xor
or
xchg
in
sbb
mov
xor
cmp
adc
inc
aaa
or
popa
pop
leave
dec
cmps
outs
inc
jns
xor
xchg
shl
jg
aas
loope
adc
xchg
xchg
leave
jo
sub
sbb
pop
adc
ja
std
mov
adc
repnz
jno
jb
add
mov
stc
lock
xchg
shr
sahf
and
rcl
aaa
popa
pop
or
xor
mov
xor
jbe
pop
ror
dec
sbb
pushf
test
es
push
sub
cmp
in
stos
push
or
shl
add
sbb
sub
sub
(bad)
loope
in
adc
cld
cmp
pop
rcl
push
cmp
xchg
cli
push
or
xchg
cmp
lds
cmp
mov
stc
div
add
ret
sub
outs
cmp
add
add
xchg
xor
lahf
mov
enter
add
aam
sub
mov
adc
idiv
dec
es
jg
fdiv
xchg
mov
add
jl
enter
push
add
das
cmps
clc
sub
nop
mov
push
and
in
aaa
jo
inc
xchg
jnp
in
call
cmp
cmp
sbb
mov
add
jp
call
sbb
dec
xlat
loope
or
jecxz
xchg
leave
jo
movs
adc
das
popa
pop
adc
test
rol
sub
xor
lock
mov
jg
cmp
test
nop
xchg
aaa
jo
or
ja
call
jne
add
popa
push
add
mov
icebp
lock
xchg
cli
adc
add
add
push
jg
sub
shr
lahf
mov
adc
sbb
xor
lock
clc
outs
mov
(bad)
or
imul
mov
mov
xchg
shl
cmp
dec
add
and
std
mov
adc
repnz
jno
arpl
and
mov
js
jnp
sub
mov
adc
sub
xor
lahf
shr
fld
jge
or
das
pushf
in
sbb
xlat
aas
sub
pop
push
fld
arpl
mov
test
jecxz
xchg
(bad)
jo
sub
add
aad
ds
out
add
add
das
sbb
jo
or
test
ds
inc
fstp
sub
popf
sub
lahf
shl
cmp
xor
fnstenv
and
push
test
push
jnp
inc
and
ins
sbb
jns
sbb
jno
ins
test
shr
rcl
aaa
lock
pop
popf
es
call
cmp
cmp
rcl
adc
pop
test
mov
sti
sub
ret
and
rcl
aaa
jo
sbb
cmp
mov
aaa
jo
sbb
and
lahf
repnz
sbb
xor
cmp
push
dec
shr
sbb
and
adc
jo
dec
fbld
cmp
xchg
out
lahf
shr
cmp
sub
adc
mov
sbb
dec
repz
arpl
rcl
xor
jle
jmp
rcl
sbb
mov
rcl
aaa
jo
aas
mov
(bad)
loop
out
call
pop
fst
aaa
jo
sbb
or
mov
rcl
aaa
jbe
sbb
or
mov
ficom
ss
sbb
cmp
mov
adc
dec
aaa
inc
pop
sbb
xchg
loopne
(bad)
rcl
push
in
adc
jo
sbb
and
sahf
xlat
sub
xor
adc
mov
(bad)
rcl
sbb
xor
xor
sbb
and
popf
xlat
sub
ss
adc
add
pop
adc
or
shl
sbb
mov
adc
adc
jo
sbb
and
pushf
xlat
sub
aaa
mov
xor
pop
sbb
xchg
loopne
(bad)
and
xor
xor
pop
test
mov
adc
sub
shl
mov
mov
xchg
loopne
ins
aad
sbb
mov
jo
push
mov
jecxz
call
pop
rcl
aaa
jno
sbb
or
mov
push
adc
jo
sbb
or
shr
inc
xor
arpl
fnsave
inc
pop
dec
or
(bad)
(bad)
xchg
mov
outs
rcr
sbb
popa
push
out
addr16
pop
sbb
add
adc
xchg
aaa
loopne
jl
out
lahf
shr
pop
rcl
jae
pop
sbb
adc
push
mov
rcl
mov
lea
out
lahf
shr
pop
(bad)
adc
push
pop
sbb
inc
lahf
(bad)
sub
adc
aaa
pop
push
mov
lea
sar
pop
fst
mov
pop
sbb
push
lahf
fsubr
sbb
arpl
rcl
aaa
jno
push
mov
(bad)
loopne
scas
or
mov
rcl
jg
pop
sbb
out
lahf
add
arpl
aam
aaa
jno
ror
setg
sub
jmp
arpl
aam
shl
lea
pop
in
out
lahf
mov
and
arpl
push
aaa
adc
mov
lea
rol
sbb
outs
pop
mov
pop
jo
sbb
out
lahf
mov
popa
popf
ror
aaa
outs
pop
or
adc
sbb
adc
dec
sbb
out
popf
dec
sub
sar
aaa
and
mov
adc
adc
mov
pop
jo
sbb
jg
jmp
(bad)
popf
and
pusha
xor
popa
out
rcl
mov
or
shl
sbb
mov
pop
not
daa
jno
sbb
and
pushf
std
sub
shl
lea
or
shl
sbb
mov
pop
sti
adc
and
loopne
out
fwait
sub
xor
addr16
shl
inc
pop
sbb
xchg
mov
dec
shl
sbb
mov
jno
sbb
daa
out
mov
sub
xor
arpl
shl
aaa
fstp
(bad)
fimul
rcl
pop
sbb
dec
jno
sbb
out
lahf
dec
sub
xor
xor
adc
mov
(bad)
jmp
shl
or
jae
push
sbb
out
sahf
push
sub
xor
arpl
sar
lea
(bad)
out
adc
xor
xor
push
push
adc
and
loope
out
lahf
add
lock
jecxz
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
sub
shr
sbb
arpl
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
daa
ror
xor
out
jg
jge
adc
ja
je
xchg
stc
cmp
pop
jo
loop
dec
sar
adc
imul
lahf
js
mov
sbb
or
addr16
and
push
rol
pop
out
pop
xchg
pusha
inc
adc
lea
test
jl
cmps
add
popa
aaa
and
push
ror
ins
pop
out
fs
push
push
push
cmp
inc
lea
mov
add
cmp
clc
inc
lea
dec
pop
pop
out
jb
adc
ds
inc
dec
mov
adc
push
add
jp
dec
lea
mov
push
pop
cwde
push
cmp
dec
int
fsub
addr16
jo
aaa
pop
lahf
pop
jbe
add
ja
test
test
jnp
xor
inc
fs
leave
loope
mov
int
ja
jno
arpl
jb
adc
lea
mov
jbe
stc
adc
pusha
push
adc
jge
push
stc
mov
mov
jge
jmp
sub
fistp
xchg
test
outs
inc
add
jb
push
in
cld
xchg
or
mov
ins
inc
loopne
outs
xor
ss
rcl
ins
inc
in
arpl
inc
add
outs
cmc
(bad)
out
xchg
sti
mov
adc
in
push
cmp
jbe
or
(bad)
push
sti
adc
jo
je
push
in
repz
(bad)
lock
sbb
jp
push
sub
clc
push
dec
sar
pop
std
or
push
pop
sbb
out
mov
(bad)
jg
nop
pop
ins
inc
loopne
bound
stc
dec
stc
mov
mov
jmp
dec
jl
(bad)
and
pop
adc
bound
cmp
int3
or
adc
je
and
test
mov
imul
shl
add
push
inc
pop
jl
in
sbb
pop
jae
sub
jecxz
in
cmp
or
mov
push
pop
mov
jne
and
test
mov
sbb
adc
je
pop
das
inc
leave
push
clc
cmp
jg
shr
pop
inc
movs
adc
xor
inc
inc
inc
ja
mov
outs
mov
dec
jmp
xchg
jb
xchg
pop
pusha
inc
std
or
mov
sbb
dec
out
test
push
out
push
jae
inc
dec
sbb
in
ror
ins
pop
in
fs
push
push
call
lahf
cwde
imul
pop
js
popa
push
push
sub
jecxz
loopne
rcl
push
jmp
pop
dec
inc
xchg
hlt
mov
xchg
inc
ja
in
jnp
jo
jo
(bad)
call
mov
jne
mov
outs
mov
pop
jmp
out
in
mov
andnps
dec
cmc
push
stc
test
enter
dec
ja
cli
pop
jle
pusha
aaa
and
xchg
xchg
mov
(bad)
mov
push
jb
inc
inc
add
jp
and
test
stos
push
mov
xor
jl
add
fist
test
mov
int3
test
ins
push
in
inc
mov
pop
add
lea
mov
add
popa
aaa
and
push
ror
ins
pop
out
rcr
sbb
in
jecxz
loopne
dec
icebp
movs
inc
jl
call
push
adc
hlt
loope
cmp
dec
jne
in
arpl
jge
sbb
loop
xchg
mov
jbe
in
jns
adc
js
inc
loope
std
mov
mov
and
add
jp
dec
lea
xchg
dec
ins
pusha
in
push
xor
pop
jl
push
shl
mov
push
je
jl
or
jmp
(bad)
(bad)
test
ins
dec
mov
js
jno
push
cmp
enter
icebp
xchg
fs
test
pop
pop
sti
push
je
jl
or
jne
dec
lea
mov
jo
in
add
popa
dec
jo
jb
inc
ficomp
cwde
inc
jg
mov
jb
popa
push
add
sbb
and
test
mov
sbb
push
pop
sub
cmp
ja
cdq
out
dec
icebp
mov
jge
out
pop
mov
inc
das
or
sbb
in
test
jl
in
push
rol
adc
push
loop
mov
(bad)
mov
ins
inc
loopne
jo
pusha
pop
add
in
loope
out
(bad)
mov
push
jp
push
adc
stc
test
sbb
jne
add
mov
arpl
inc
std
xchg
sti
mov
nop
pop
imul
push
mov
(bad)
call
mov
jo
lock
gs
add
jge
inc
out
(bad)
mul
ins
inc
sti
or
addr16
jo
call
or
shr
jne
and
jo
sbb
and
loope
out
lahf
mov
pop
xor
arpl
inc
aaa
xor
mov
lea
rol
outs
mov
pop
xchg
adc
adc
loopne
jmp
lahf
cmps
sub
shl
sar
cmp
jbe
jne
aad
mov
sbb
and
mov
pop
jo
sbb
and
loope
out
lahf
mov
jb
mov
aaa
es
pop
mov
adc
sbb
and
call
and
lahf
xchg
sub
icebp
arpl
aaa
sbb
push
mov
rcl
dec
sbb
pop
pop
xchg
adc
or
retf
loope
out
lahf
xchg
sub
fisub
rcr
ds
jns
dec
lea
shr
jp
aaa
pop
mov
dec
jo
sbb
and
loope
out
lahf
mov
dec
xor
arpl
pop
aaa
adc
mov
rcl
pop
sbb
pop
pop
xchg
adc
add
loope
out
lahf
mov
pop
xor
arpl
inc
aaa
sbb
lea
rcl
sbb
push
pop
call
and
loope
out
lahf
mov
push
xor
arpl
aaa
dec
pop
mov
mov
dec
sbb
pop
pop
in
adc
icebp
sahf
pop
mov
mov
shr
jb
adc
xchg
adc
push
sbb
and
loope
out
lahf
xchg
sub
fisub
rcl
adc
mov
mov
shl
inc
mov
pop
mov
sbb
and
loope
out
lahf
cwde
sub
arpl
inc
aaa
and
mov
adc
sbb
push
pop
xchg
dec
jo
sbb
and
loope
out
lahf
xchg
sub
loop
pop
rcl
cmp
mov
movs
xchg
xlat
or
shl
mov
pop
mov
sbb
and
loope
out
lahf
loope
jle
in
arpl
pop
aaa
add
(bad)
aam
mov
cli
shr
popa
mov
pop
mov
data16
sbb
out
lahf
mov
arpl
and
mov
rcl
pop
sbb
xor
mov
sbb
and
loope
out
lahf
test
arpl
arpl
rol
daa
pop
dec
mov
scas
xchg
mov
sbb
aaa
pop
mov
sbb
out
lahf
mov
arpl
push
aaa
adc
sub
or
shl
mov
pop
adc
jo
sbb
data16
xchg
imul
aaa
cmp
mov
mov
xchg
or
shr
jle
push
pop
mov
dec
jo
sbb
and
loope
out
lahf
jecxz
push
xor
arpl
pop
aaa
and
lea
ror
or
adc
es
and
lahf
mov
pop
xor
arpl
jb
inc
pop
push
mov
test
inc
sbb
xor
in
pop
jo
sbb
and
loope
out
pushf
mov
arpl
xlat
popa
aaa
das
pop
jo
and
lahf
aam
sbb
arpl
sbb
push
mov
arpl
cmp
mov
mov
dec
sbb
adc
rcl
push
jo
sbb
or
mov
rcl
xor
pop
jg
and
lahf
aam
sbb
arpl
adc
jg
cli
and
loope
out
lahf
mov
arpl
sar
pop
ja
pop
(bad)
rcl
sbb
pop
mov
sbb
jge
mov
jne
test
aaa
adc
mov
rcl
sbb
or
xor
mov
call
xchg
push
inc
bound
xor
push
lods
and
sar
sbb
xor
ins
push
adc
or
pushf
jno
rcr
test
(bad)
icebp
xchg
out
cdq
shr
sbb
lea
rcl
aaa
jno
push
mov
(bad)
in
sti
push
xchg
fldenv
pop
xor
jle
int
xor
sbb
out
pushf
icebp
sub
xor
and
sbb
cmc
or
pushf
jno
rcr
cdq
xor
rol
cmp
xor
pop
sbb
repz
mov
ret
jle
or
in
xchg
fistp
sbb
add
jno
push
popf
or
fild
or
cwde
popa
sbb
adc
lahf
and
xchg
shl
or
sbb
xchg
es
xchg
hlt
dec
xchg
icebp
sub
xchg
popw
fcom
aaa
jno
adc
pushf
loopne
popf
shl
add
mov
ret
jle
sbb
ds
xchg
sti
push
(bad)
call
inc
push
ret
jne
sbb
out
retf
sbb
and
jp
push
or
aas
mov
xchg
call
sbb
mov
ficomp
sahf
dec
and
loop
xchg
fbld
sbb
xlat
xor
pop
mov
xchg
out
or
mov
rol
ss
pop
sbb
es
repz
xchg
ret
pop
or
ins
sbb
adc
js
cmp
jecxz
lea
adc
or
pop
fmul
xor
adc
add
cmp
sbb
js
pop
lea
(bad)
loope
out
xchg
shr
sbb
jge
rcl
aaa
and
or
fmul
jl
std
or
inc
pop
add
ins
jmp
or
sbb
push
cmp
jb
pop
mov
mul
adc
xor
sub
test
mov
mov
pop
arpl
jle
add
xchg
icebp
mov
mov
push
mov
sub
(bad)
daa
mov
cld
adc
jge
add
mov
repz
aaa
js
jbe
dec
cmp
and
jl
mov
add
inc
xor
push
fild
dec
ins
pop
out
push
adc
aaa
jo
sbb
aad
shr
sbb
arpl
rcl
aaa
jo
sbb
or
mov
jo
sbb
push
fdivr
cs
jge
sbb
call
repz
sbb
pushf
xor
xor
pop
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
mov
(bad)
loope
out
lahf
shr
sbb
arpl
shl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
inc
popf
shr
sbb
arpl
rcl
aaa
cmp
das
mov
lea
sar
jno
xor
adc
jo
sbb
and
loope
out
lahf
xchg
sub
mov
shr
mov
(bad)
loope
out
lahf
shr
sbb
arpl
rcl
aaa
jo
sbb
setg
sub
xor
arpl
rcl
aaa
jo
sbb
or
mov
pop
mov
sbb
and
loope
out
lahf
mov
jbe
mov
shl
aaa
je
sbb
or
rcr
pop
mov
pop
movs
adc
xor
loop
(bad)
loope
out
lahf
popa
sub
xor
inc
aaa
add
imul
sbb
push
pop
cdq
adc
cmp
jecxz
(bad)
loope
out
lahf
shr
sub
arpl
shl
aaa
inc
pop
das
mov
rcl
sub
xor
adc
cmp
enter
loope
push
xor
arpl
jp
pop
pop
jne
and
lahf
rcr
sbb
bound
xchg
adc
xor
jmp
out
lahf
mov
arpl
adc
jo
sub
or
mov
in
adc
jo
sbb
and
loope
out
lahf
mov
arpl
pop
aaa
adc
mov
loope
xchg
or
rcr
inc
mov
jo
sbb
and
lahf
mov
arpl
pop
jle
inc
lea
rol
inc
mov
pop
mov
sbb
and
loope
out
lahf
shr
pop
xor
arpl
rcr
pop
jb
inc
lea
rol
mov
pop
mov
sbb
and
loope
out
lahf
mov
arpl
jge
add
jae
dec
lea
rol
mov
in
aas
jo
sbb
and
loope
out
lahf
movs
sub
std
arpl
jbe
add
mov
mov
sbb
sbb
pop
jo
sbb
add
cli
arpl
aaa
sbb
lea
ror
inc
mov
pop
mov
sbb
cmp
cmps
arpl
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
(bad)
dec
pop
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
aaa
jo
sbb
or
mov
rcl
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
add
sbb
add
and
jb
outs
addr16
add
add
pop
add
xchg
add
add
push
push
add
pop
add
adc
add
and
dec
inc
add
add
pop
add
mov
inc
ins
outs
bound
add
add
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
ret
add
add
add
push
add
add
push
add
add
push
add
add
push
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
sub
push
add
inc
add
add
sub
push
add
add
add
add
add
add
adc
push
add
xor
push
add
sub
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
jbe
adc
and
jbe
adc
sub
jbe
adc
xor
jbe
adc
cmp
jbe
adc
inc
add
adc
dec
add
adc
push
add
adc
pop
add
adc
popa
add
adc
imul
jns
jbe
pop
add
add
add
add
add
add
add
add
add
add
add
addr16
add
add
add
jb
rol
jns
jbe
leave
add
add
add
add
and
icebp
add
and
and
jnp
sub
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
mov
add
add
add
add
hlt
add
add
std
add
add
add
push
add
add
add
cmp
add
add
add
add
pop
add
add
add
add
add
adc
add
add
inc
add
add
add
add
gs
cs
add
outs
addr16
ins
add
fs
ins
jae
outs
jb
imul
gs
add
push
arpl
popa
imul
gs
jne
arpl
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
arpl
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
add
inc
push
push
inc
je
jb
bound
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
gs
bound
dec
outs
popa
add
add
je
js
outs
jb
gs
jns
gs
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
outs
popa
ins
add
jns
inc
gs
js
arpl
imul
ins
bound
push
jns
je
ins
cs
dec
add
jb
popa
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
gs
fs
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
imul
jb
inc
outs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
addr16
dec
gs
push
je
imul
inc
jno
popa
ins
imul
push
popa
ins
jne
add
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
imul
ins
add
jo
jae
add
arpl
je
outs
outs
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
popa
imul
jae
jne
arpl
add
outs
jns
gs
outs
outs
jae
jb
je
outs
outs
cs
jae
jne
arpl
add
add
aaa
jo
outs
add
jns
add
ins
add
outs
add
je
jb
popa
add
add
outs
add
add
add
outs
add
jb
arpl
add
add
data16
jb
add
jb
popa
add
imul
add
add
add
cmp
cmp
inc
add
inc
add
add
pop
add
data16
inc
add
add
pop
add
jne
dec
add
xor
xor
push
add
dec
add
add
imul
dec
mov
push
ins
stos
or
jp
push
sbb
mov
add
add
push
add
add
push
add
cmp
add
or
and
add
add
add
sbb
sbb
add
dec
sbb
sbb
add
push
adc
add
sbb
push
sbb
sbb
sbb
adc
and
adc
add
pop
add
add
add
add
push
add
add
or
add
adc
gs
add
add
xor
add
add
and
data16
data16
fs
sub
sub
sub
cmp
arpl
data16
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
push
add
adc
ins
popa
jns
inc
push
dec
and
popa
arpl
jb
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
adc
mov
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
