inc
adc
lods
xor
imul
std
out
(bad)
out
and
jb
mov
inc
test
xor
fsub
loopne
call
(bad)
push
pop
(bad)
mov
xchg
out
js
jb
or
adc
cmp
gs
(bad)
int
stos
ror
movs
retf
xchg
push
sbb
out
dec
cs
ret
inc
xor
ret
out
jle
mov
retf
inc
pop
das
or
adc
inc
jns
dec
ins
iret
mov
scas
cli
mov
inc
sbb
jns
mov
xchg
test
daa
mov
mov
adc
retf
or
mov
and
(bad)
fcomi
jp
(bad)
es
sub
mov
push
sbb
aas
pop
mov
in
or
pop
inc
cmp
xchg
leave
jmp
adc
ins
sub
jecxz
out
add
ins
loop
fbld
dec
in
mov
mov
jno
mov
adc
add
test
dec
xor
cmp
loope
loopne
shr
adc
cmp
movs
es
xchg
and
in
add
adc
ret
adc
sub
add
sbb
test
pusha
sub
xor
inc
shl
loope
arpl
jns
xor
mov
ins
add
dec
pusha
das
cmp
push
clc
sub
mov
into
je
arpl
mov
push
jecxz
mov
arpl
shl
or
aaa
leave
add
outs
das
mov
or
push
cmps
pop
sub
mov
ss
cli
fbld
pop
icebp
jmp
(bad)
inc
shl
jae
inc
fs
movq
and
pop
mov
cwde
add
sti
dec
xor
das
mov
fisubr
mov
xor
shr
in
loopne
outs
sbb
dec
(bad)
mov
and
(bad)
and
mov
cli
inc
adc
jecxz
sbb
jae
mov
sub
pop
popf
aad
aam
pushf
retf
push
repnz
jne
aaa
jb
mov
mov
mov
jle
inc
in
ins
mov
shl
push
adc
aad
dec
mov
fmul
ins
test
or
in
mov
mov
dec
hlt
dec
xchg
dec
jb
or
out
or
sub
das
stc
or
scas
sub
xor
in
mov
fs
ret
nop
fstp
or
or
push
push
adc
cmps
inc
out
mov
scas
push
pop
jne
dec
push
xlat
aaa
ret
in
ss
in
(bad)
pop
add
sub
lock
fidiv
js
imul
leave
(bad)
push
gs
daa
loop
or
ret
dec
add
hlt
jl
movs
mov
jne
jne
cmp
push
and
nop
outs
scas
or
adc
popa
push
mov
jae
je
and
into
ja
mov
jecxz
fcom
xor
sbb
in
and
mov
ds
retf
loop
dec
aaa
xchg
or
xor
mov
popa
jne
sbb
jg
sbb
pop
mov
mov
and
fcomp
lods
jge
cmp
pop
hlt
jmp
mov
pop
aaa
push
jo
lods
inc
call
data16
pop
inc
mov
cmps
inc
inc
fstp
sub
jb
xor
add
cld
js
add
sbb
pop
pop
shl
xor
lds
push
xor
(bad)
fwait
push
gs
sub
stc
mov
fadd
sub
cs
test
push
push
jae
add
hlt
xor
pop
fdivrp
test
rcr
nop
sbb
sbb
xor
xor
mov
ds
fs
dec
sub
pusha
daa
jge
push
sub
and
push
(bad)
cmps
mov
out
mov
shl
mov
add
es
add
popa
(bad)
xor
pop
daa
mov
in
test
lea
xchg
cmps
inc
jns
int
xchg
mov
pop
xor
div
pop
adc
dec
mov
cmp
or
mov
or
dec
inc
loop
mov
pushf
jl
data16
jmp
pop
in
push
dec
retf
jg
pop
inc
mov
call
shl
fsubr
mov
push
inc
pop
stc
scas
hlt
and
dec
int
push
cli
and
cmps
inc
fwait
inc
xchg
ins
mov
dec
sbb
mov
(bad)
repnz
sub
aad
js
jp
pop
adc
push
xor
mov
xor
punpckhwd
jge
(bad)
popf
inc
popf
imul
xchg
push
repnz
mov
sbb
push
xchg
mov
out
jo
rol
jge
jge
push
nop
pop
ret
xchg
xor
pop
inc
inc
fldenv
push
sar
adc
mov
ins
nop
(bad)
dec
loop
into
sbb
mov
dec
ret
js
xor
mov
adc
jbe
sbb
adc
mov
xor
or
adc
mov
cmp
aas
sbb
test
push
mov
aad
xchg
dec
xor
inc
sub
popf
pop
gs
push
das
lea
add
lock
and
or
xchg
pop
jnp
(bad)
mov
cmc
icebp
inc
cmp
imul
shl
mov
xchg
sbb
popf
out
(bad)
popf
mov
nop
fs
fdivr
pushf
das
(bad)
je
lahf
mul
jne
out
inc
ret
inc
pop
cmp
inc
rcr
sbb
pop
xchg
dec
out
repnz
sub
push
or
cmps
and
ror
ja
fdivrp
mov
cdq
dec
fcom
test
pop
push
pop
and
and
popf
cmp
sub
cmc
imul
xor
push
xor
mov
pushf
cmp
jmp
and
xchg
cdq
mov
and
imul
push
sbb
dec
jle
pop
jle
jns
(bad)
xlat
pop
ret
and
jae
not
(bad)
div
jg
xchg
imul
hlt
pop
add
jmp
jg
add
jecxz
movs
xlat
mov
lock
pop
dec
loopne
mov
cpuid
clc
push
xchg
in
mov
repz
test
mov
or
mul
popa
ret
fist
outs
cli
add
add
xchg
or
cdq
nop
aas
jmp
push
add
push
xchg
aas
cmps
aam
dec
and
jg
pop
mov
hlt
xor
add
ret
mov
cdq
mov
inc
cmp
lock
mov
dec
mov
popf
ror
cmp
jle
repnz
out
pop
leave
popf
das
or
addr16
fist
rol
inc
or
scas
push
shl
cmp
mov
jns
outs
hlt
leave
pop
inc
cld
dec
push
and
push
sub
cmc
mov
fwait
push
sbb
jns
dec
inc
push
inc
aaa
pop
and
dec
cmp
cdq
sbb
adc
dec
test
mov
sbb
inc
sbb
jno
or
sar
ins
pop
(bad)
retf
ja
bnd
xor
sbb
mov
cs
cmp
and
je
mov
adc
dec
inc
hlt
xchg
idiv
leave
adc
xchg
syscall
test
dec
mov
call
fsub
jge
in
or
push
mov
cmp
add
mov
xchg
js
in
pop
jecxz
gs
cmp
mov
sti
xor
sahf
jl
xchg
fsubr
mov
sbb
(bad)
xlat
bound
and
jl
cmp
dec
jmp
fisub
dec
mov
inc
mov
cmps
inc
xor
xchg
xor
mov
(bad)
fdivr
xor
mov
ror
aas
loop
cmp
rcl
and
fcmovb
in
inc
cli
retf
test
ret
(bad)
pusha
jle
xchg
lock
fcom
int3
mov
add
xor
inc
inc
push
sbb
test
push
fist
in
or
lods
les
jmp
out
cmp
(bad)
jecxz
add
dec
(bad)
pop
clc
dec
fdivr
in
leave
bound
arpl
cmp
clc
push
fsubr
sti
aam
ds
outs
cmps
es
iret
retf
jmp
sub
in
lahf
retf
fild
lods
and
aam
mov
sti
loopne
fist
aam
ins
jl
icebp
shl
popa
ss
inc
movaps
pop
push
aad
inc
sub
adc
movs
cmp
jecxz
add
xor
adc
stc
neg
pop
je
and
push
popf
mov
std
add
jnp
push
add
aas
jmp
sub
mov
call
jns
cli
sti
sbb
cli
push
sbb
sub
jno
shl
(bad)
jl
mov
js
data16
or
mov
cmp
clc
jbe
push
xchg
das
in
hlt
and
idiv
sbb
inc
sti
sbb
ins
push
mov
or
inc
cmp
sub
xlat
out
sbb
pop
mov
sbb
mov
xchg
push
sub
cdq
or
jecxz
or
(bad)
jecxz
(bad)
jne
sub
gs
shl
sbb
xor
adc
lock
mov
ins
nop
repz
das
retf
xor
std
xchg
stos
mov
add
xor
call
sub
retf
mov
adc
retf
bnd
shl
(bad)
cs
sti
retf
lods
les
mov
xlat
fwait
push
mov
bound
push
dec
inc
jg
mul
cmp
sub
mul
jle
and
mov
cmp
popf
adc
test
sub
out
cld
stos
mov
add
pop
xchg
mov
pop
mov
add
pop
cmp
loope
movs
push
jmp
leave
iret
and
aad
xchg
addr16
xlat
int
push
icebp
out
lock
or
cmps
sbb
or
imul
jnp
ss
das
fisttp
push
xchg
ficomp
sub
jmp
push
repz
mov
xor
loop
and
lds
int
jmp
out
imul
sbb
and
inc
push
popf
mov
and
push
out
mov
in
sar
adc
cmc
sbb
stos
shr
popf
pop
adc
adc
xchg
fsubr
push
jle
shl
and
pop
sub
repnz
sbb
jmp
loope
sbb
repnz
shl
js
ficomp
fidivr
es
xor
cmp
mov
and
sbb
shl
rcr
mov
pop
repnz
icebp
and
inc
enter
ud0
stos
pop
call
xchg
imul
fdivr
pop
movs
ret
add
xchg
inc
add
rol
push
push
mov
push
push
push
xor
push
call
mov
mov
movzx
and
push
and
call
mov
and
xor
add
imul
mov
mov
mov
imul
inc
cmp
mov
je
add
mov
sar
mov
xor
inc
mov
mov
imul
inc
cmp
jne
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
call
mov
mov
push
xor
push
mov
mov
push
push
mov
lea
push
push
call
push
push
push
push
mov
lea
push
push
call
add
mov
call
push
push
call
mov
xor
xor
or
div
and
or
mov
and
xor
imul
div
dec
mov
jne
call
mov
cmp
je
mov
push
call
mov
and
call
and
xor
imul
sub
mov
call
mov
and
or
call
and
xor
or
xor
div
pop
xor
pop
inc
pop
mov
leave
ret
add
mov
mov
sub
in
lods
neg
mov
sub
push
mov
push
sub
push
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
xor
mov
mov
shl
mov
and
mov
and
cmp
je
mov
or
inc
cmp
jl
mov
mov
mov
mov
mov
push
push
shr
mov
call
mov
and
call
mov
and
mov
sub
add
xor
add
mov
div
mov
mov
call
and
mov
sub
add
or
push
call
and
xor
movzx
inc
imul
add
push
mov
mov
call
mov
and
call
mov
and
sub
or
call
and
imul
or
add
inc
dec
mov
mov
jne
pop
pop
xor
pop
leave
ret
push
mov
sub
push
mov
lea
push
mov
push
xor
push
nop
nop
ret
add
mov
mov
push
call
mov
and
push
call
and
and
mov
push
call
and
sub
mov
mov
or
mov
xor
div
mov
mov
imul
mov
mov
mov
stos
sbb
call
mov
dec
call
xchg
iretw
jge
jle
ins
call
inc
clc
pop
leave
ret
push
mov
push
push
call
mov
and
push
or
call
and
xor
div
mov
xor
or
call
and
add
pop
pop
ret
push
mov
push
push
push
mov
mov
call
mov
mov
imul
and
push
sub
call
and
add
xor
xor
xor
or
xor
or
and
div
mov
xor
div
mov
add
imul
call
and
pop
imul
pop
pop
pop
ret
push
mov
push
push
push
call
mov
and
or
call
mov
and
mov
or
xor
div
mov
push
mov
imul
call
mov
and
or
mov
xor
div
push
mov
call
and
xor
or
div
push
mov
and
and
call
mov
and
imul
and
push
call
and
pop
add
pop
pop
pop
ret
push
call
mov
int3
enter
(bad)
retf
mov
retf
int3
int3
rol
aas
push
push
call
pop
pop
mov
push
push
push
push
push
push
push
push
mov
mov
call
add
mov
mov
add
mov
push
mov
push
push
push
push
push
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
add
lea
xor
lea
add
xor
xor
push
call
mov
and
add
or
xor
xor
mov
div
mov
or
push
mov
or
xor
div
mov
mov
sub
or
xor
div
xor
mov
xor
imul
or
or
pop
div
mov
call
and
xor
or
div
mov
call
mov
call
xor
mov
call
add
call
xor
push
call
mov
and
or
xor
mov
div
mov
push
push
mov
call
mov
and
xor
call
and
and
mov
sub
imul
sub
or
lea
sub
or
lea
call
and
or
xor
mov
div
push
mov
call
and
push
add
push
mov
call
mov
and
sub
call
and
xor
or
div
push
mov
call
mov
xor
mov
mov
div
mov
and
push
mov
xor
imul
and
or
xor
div
lea
xor
call
and
push
xor
pop
sub
and
mov
call
mov
and
or
xor
mov
div
lea
imul
and
call
and
add
xor
mov
div
mov
call
and
or
xor
div
push
mov
call
and
lea
and
call
mov
and
xor
or
xor
mov
div
mov
call
and
sub
add
mov
xor
push
call
fld
call
fstp
fld
push
fcomp
fnstsw
test
jne
call
push
call
cmp
je
push
push
call
cmp
je
jmp
push
jmp
push
push
call
mov
and
xor
call
mov
and
mov
xor
or
div
push
mov
push
xor
sub
call
mov
mov
and
or
xor
div
push
pop
push
sub
xor
xor
call
and
sub
mov
call
and
imul
imul
xor
mov
or
div
mov
or
mov
xor
div
and
mov
call
and
sub
xor
mov
div
mov
push
push
sub
or
call
and
or
xor
inc
sub
imul
sub
call
or
and
xor
div
mov
and
imul
call
and
sub
mov
push
push
call
and
sub
push
add
push
mov
call
mov
mov
xor
or
xor
mov
div
push
and
and
mov
xor
mov
div
mov
or
call
mov
and
imul
mov
call
and
xor
or
div
xor
mov
or
push
push
and
and
div
mov
or
mov
and
xor
div
mov
mov
xor
div
mov
call
push
mov
call
mov
push
mov
call
pop
pop
push
call
cmp
jne
cmp
je
fld
call
fstp
fld
fcomp
fnstsw
test
je
push
push
call
fld
pop
pop
mov
call
fstp
fld
fcomp
fnstsw
test
jne
push
call
push
call
cmp
jne
call
test
je
xor
push
mov
call
push
call
push
call
push
push
jmp
push
push
mov
cmps
out
pop
arpl
rcl
adc
call
call
jmp
push
pop
push
call
push
push
call
push
call
add
push
call
push
call
dec
jne
jmp
push
mov
push
push
mov
mov
call
test
je
xor
push
call
push
call
mov
mov
sub
push
mov
push
xor
push
xor
xor
push
push
call
call
call
call
push
call
push
call
push
push
call
mov
mov
call
push
call
mov
pop
push
call
push
call
pop
xor
pop
pop
ret
xor
loopne
pop
ins
std
jmp
inc
add
imul
in
lds
and
icebp
xor
adc
push
pop
mov
push
sbb
add
add
add
xor
ret
sub
stc
jae
imul
sbb
rol
mov
retf
into
fidiv
push
cli
mov
cld
lods
in
fwait
lods
jmp
or
xlat
lock
adc
call
call
lock
movs
mov
in
lea
mov
call
dec
xchg
mov
retf
jb
xor
xor
imul
lods
xlat
cmp
shl
jo
mov
xor
or
xchg
stos
retf
sahf
adc
xchg
jbe
pop
adc
mul
test
and
dec
adc
popa
cmc
mov
push
addr16
int
cmp
pop
leave
xchg
outs
sbb
or
pushf
xchg
push
jno
mov
arpl
pop
cmc
cdq
lea
lods
sbb
push
js
cmp
adc
imul
mov
rol
shr
sbb
sub
mov
or
cmp
(bad)
jb
stc
addr16
(bad)
pusha
inc
xchg
mov
push
scas
mov
dec
repnz
sbb
mov
int
mov
dec
psadbw
stos
mov
xchg
cmp
pop
cmp
and
out
push
add
gs
(bad)
ds
cmp
sar
cwde
popf
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
jmp
call
addr16
inc
inc
adc
push
xor
add
inc
cmp
test
pop
xchg
call
add
jns
shr
sbb
and
mov
xor
pop
and
ret
adc
inc
mov
adc
and
pop
xor
mov
and
std
add
add
cmp
and
cs
and
dec
add
and
call
cdq
inc
rcl
inc
test
aam
dec
mov
cmp
add
dec
inc
mov
clc
cmp
and
add
pop
std
mov
repnz
ins
jmp
add
inc
push
ins
jle
xchg
dec
add
mov
ins
jne
dec
rol
push
dec
ror
push
shl
lock
pusha
jecxz
dec
mov
push
xchg
jmp
nop
inc
mov
inc
mov
inc
add
loopne
add
xor
jne
adc
xchg
and
push
and
add
add
in
push
aas
adc
jmp
add
or
loopne
push
pusha
mov
add
or
mov
inc
adc
inc
test
leave
lock
jno
(bad)
mov
jl
adc
lahf
push
emms
(bad)
popa
pop
test
pop
jmp
enter
int3
and
fwait
add
or
jne
xchg
mov
mov
cmc
sbb
push
ret
pop
pop
and
call
popf
clc
(bad)
sub
lea
movs
xlat
invd
add
jno
or
jmp
add
or
mov
fcom
pusha
add
xor
mov
sub
xor
call
sub
call
xor
add
sbb
hlt
inc
enter
add
pop
add
cmp
sti
jno
rol
inc
add
mov
loope
add
and
movs
push
adc
lods
aam
pusha
add
call
add
or
mov
aam
dec
add
or
sbb
add
mov
div
xchg
inc
add
dec
xor
call
cmps
push
push
mov
adc
add
lods
push
inc
ret
push
add
mov
inc
push
pop
bound
call
movhps
inc
pop
pusha
mov
and
cdq
inc
dec
sub
add
lock
add
cmp
add
pop
jmp
call
push
add
nop
ret
sbb
inc
xchg
xchg
sbb
push
sub
mov
mov
ins
or
mov
xor
scas
(bad)
das
mov
icebp
pop
mov
popa
adc
pop
pop
or
inc
pop
add
add
or
add
outs
push
pop
pop
mov
push
dec
jne
outs
mov
add
push
inc
cmp
inc
call
push
les
jmp
push
push
push
lock
mov
xchg
mov
lea
mov
or
add
dec
rol
call
jo
cmp
xchg
jp
or
mov
sbb
sahf
cmp
cmp
add
dec
cmp
xor
call
or
jp
push
pusha
adc
call
add
push
ret
jnp
or
into
mov
mov
add
fldenv
sub
hlt
jne
ins
pop
xor
les
adc
aad
pop
add
add
or
mov
xchg
cmp
arpl
sar
xor
push
add
push
adc
or
loop
xchg
sub
scas
push
or
(bad)
in
scas
xor
ins
mov
add
dec
sub
shr
inc
xor
mov
nop
add
call
or
in
stos
or
and
adc
add
mov
scas
test
cmp
adc
inc
push
add
mov
add
popf
add
and
push
test
iret
aad
adc
add
lea
jo
xchg
xor
jne
jmp
ret
push
inc
pop
popa
stos
iret
cmp
icebp
cwde
push
or
sbb
push
test
jo
add
jge
shr
jecxz
add
and
xor
stos
jne
xchg
popa
add
nop
les
pusha
and
and
add
add
lea
sub
ja
and
inc
js
adc
test
sub
call
inc
or
sub
mov
mov
add
jmp
adc
jecxz
imul
add
xchg
mov
inc
push
add
add
pop
push
inc
adc
pop
pop
fsub
fmul
ja
dec
inc
loopne
mov
cdq
jmp
pop
push
call
cmc
jmp
adc
xor
adc
or
jecxz
push
add
je
add
ins
adc
fimul
jo
add
in
cmp
shl
outs
pop
mov
aaa
pop
add
movq
xor
add
adc
dec
pop
shl
xchg
mov
mov
mov
les
iret
mov
inc
bnd
pop
dec
and
sub
daa
adc
mov
pop
pusha
mov
push
push
and
add
or
popa
in
add
push
push
popa
fldenv
rol
retf
daa
aas
ret
shr
add
pop
add
push
add
jae
mov
call
pop
xor
rcr
fisttp
das
mov
add
test
push
test
bound
add
dec
add
movs
and
(bad)
or
xor
rcl
push
sub
aas
cmp
add
dec
dec
add
imul
outs
and
sub
xor
call
inc
dec
jo
add
or
pop
mov
rcl
inc
inc
retf
mov
add
and
pushf
lea
or
add
adc
add
xor
hlt
test
cmp
test
jmp
inc
ins
lock
mov
xor
lock
add
cwde
test
mov
cmps
inc
bound
inc
add
xchg
ror
or
popa
add
mov
cmp
call
call
xchg
dec
pop
dec
pop
dec
cmp
inc
sbb
fld
xlat
mov
cmp
shr
lea
popa
movs
popa
jmp
in
add
inc
or
jne
out
cmp
sub
push
fld
call
icebp
mov
pusha
daa
add
stos
in
pushf
(bad)
call
pop
mov
adc
or
xor
aaa
call
push
mov
cld
int3
mov
add
aaa
adc
or
jge
adc
sahf
pop
ret
(bad)
call
dec
call
add
sbb
push
and
pop
and
add
call
sbb
(bad)
or
add
fadd
mov
call
add
jmp
rol
add
les
add
xchg
outs
jle
pop
loopne
adc
imul
stos
add
lods
mov
jmp
ins
test
and
cs
push
add
adc
inc
cmp
ret
or
mov
cmovb
or
cmp
and
ss
mov
add
jmp
imul
call
jge
add
je
xor
into
lea
cld
lahf
dec
push
fstp
int
add
jecxz
add
clc
inc
jl
xchg
add
lahf
mov
icebp
dec
lea
add
movs
frstor
mov
mov
add
pop
mov
bound
fld
push
adc
adc
mov
in
jmp
add
push
xor
xchg
adc
call
daa
mov
mov
mov
adc
cli
test
inc
and
popa
dec
push
push
clts
mov
addr16
rol
add
or
adc
xor
pop
or
inc
cmp
push
sub
ss
xchg
mov
and
push
cmps
vmovups
adc
or
ins
sahf
or
jl
inc
out
retf
push
mov
jmp
and
adc
xchg
jno
(bad)
xchg
add
sar
ret
push
outs
mov
pop
movs
jne
adc
push
packsswb
mov
rol
xor
inc
add
mov
mov
or
js
xor
inc
add
inc
mov
sbb
pop
push
jmp
dec
(bad)
dec
mov
xchg
push
dec
add
sbb
or
sub
call
add
add
cmp
pop
xchg
adc
dec
jge
add
rcl
pusha
bound
data16
add
push
leave
fmul
add
cmp
adc
popa
add
inc
outs
mov
sub
add
sbb
iret
xchg
out
inc
leave
fistp
add
retf
push
stos
clc
cmp
add
lock
sbb
add
inc
int3
call
jno
mov
add
pusha
pusha
nop
mulps
nop
inc
and
push
mov
adc
jns
cld
scas
or
(bad)
adc
std
xor
push
mov
shl
push
xor
daa
add
fsub
push
mov
bswap
and
pop
pop
loop
sub
adc
add
inc
call
push
jne
jge
lock
or
pop
mov
pop
jne
mov
add
test
nop
loopne
stc
jne
rcl
ret
cld
pop
push
add
fdivr
bound
data16
ins
dec
test
xor
sbb
ffree
add
mov
test
ins
adc
cmovs
adc
pop
aas
hlt
int
cld
push
xor
push
call
mov
in
cmp
lea
sub
movs
pop
rol
pop
inc
adc
mov
mov
icebp
jb
jne
daa
jl
xor
sub
sbb
clc
test
push
dec
sub
or
cmp
push
push
add
(bad)
outs
(bad)
or
out
imul
lahf
inc
ret
ret
xor
push
or
push
inc
adc
add
leave
inc
add
and
out
jg
dec
adc
pop
mov
loope
mov
add
mov
jg
addr16
add
add
inc
xchg
lds
clc
adc
mov
rcr
lods
bound
sbb
mov
add
ret
add
sbb
add
push
call
loopne
pop
inc
inc
pop
push
loopne
push
sbb
or
pop
jmp
cmp
cmp
dec
pop
add
(bad)
mov
add
add
mov
xor
add
push
and
mov
or
xchg
shl
xor
jo
push
xor
ror
outs
or
data16
lock
imul
push
ret
or
cwde
or
std
inc
es
loope
xor
sbb
dec
xchg
ins
fwait
lock
add
add
inc
push
adc
add
verw
stc
sub
test
jmp
mov
dec
stc
mov
jbe
add
xor
add
adc
push
je
add
xchg
push
lea
aam
movs
hlt
mov
lea
adc
sbb
or
(bad)
jge
push
add
fnstcw
test
add
fisttp
add
inc
mov
or
daa
popa
pop
sub
xor
mov
enter
jns
rol
adc
loopne
adc
fwait
inc
xchg
bound
mov
add
in
mov
inc
loopne
push
inc
push
shl
ins
ret
loopne
and
jl
cwde
xchg
fs
out
bound
rol
inc
xchg
jnp
add
push
lods
adc
adc
fnsetpm(287
sub
xor
psrlw
shl
add
push
add
or
mov
push
rcl
xor
inc
push
(bad)
xchg
mov
mov
adc
mov
shr
or
or
les
add
mov
and
cli
shr
data16
fcomp
dec
lods
sbb
adc
pop
call
add
mov
inc
and
mov
fiadd
add
or
xor
push
add
push
pusha
mov
lods
or
sbb
lock
es
movs
pop
push
mov
inc
add
adc
and
addr16
add
loop
jne
inc
inc
xor
pcmpeqw
push
mov
dec
add
add
cmpxchg
in
sub
push
adc
es
mov
sub
jl
mov
popa
mov
fstp
xor
in
test
daa
add
push
cmp
in
pusha
(bad)
cmp
dec
mov
lock
dec
pop
mov
and
scas
cdq
jge
ins
xor
add
in
sbb
or
call
add
test
mov
and
add
add
dec
rcl
add
popa
sub
(bad)
push
mov
add
pop
add
ror
mov
das
sbb
mov
call
sbb
and
sbb
jo
add
cdq
add
rcr
add
lea
add
add
loopne
push
inc
add
jbe
call
sub
rcl
(bad)
mov
dec
xor
or
dec
mov
add
pop
push
adc
push
sbb
cmp
mov
push
pop
sbb
sub
cli
and
sub
stos
add
add
pop
push
pop
mov
inc
adc
mov
add
dec
inc
jecxz
call
jge
adc
xor
add
and
add
mov
pop
jo
call
inc
inc
mov
cmp
sbb
dec
mov
xor
sbb
(bad)
xor
sub
or
sbb
(bad)
scas
sbb
xchg
enter
add
(bad)
push
add
push
dec
pavgb
fcomp
xchg
enter
sbb
and
and
or
mov
jmp
mov
add
cmp
inc
inc
push
xor
pop
dec
add
sahf
add
add
sub
pushf
add
sub
pop
add
adc
add
inc
in
push
and
in
jns
add
pop
add
loopne
pop
add
cmp
fdiv
pop
pushf
sti
inc
scas
hlt
(bad)
add
pusha
cmp
jo
and
les
(bad)
adc
dec
and
fiadd
add
scas
sahf
sub
sbb
movups
add
mov
and
in
aaa
ins
xor
dec
cmp
jmp
xor
(bad)
lods
dec
mov
xor
mov
rcr
dec
and
mov
adc
mov
sbb
add
cmp
shl
xor
xchg
push
pusha
pop
add
add
add
mov
and
in
mov
add
or
add
dec
add
dec
and
and
push
xlat
or
mov
jnp
(bad)
(bad)
sbb
sahf
sbb
add
jge
arpl
js
bswap
and
js
ret
add
add
pop
shl
or
cmovl
jo
add
push
cmp
rol
ror
psubsb
and
push
mov
ins
mov
je
jae
sar
and
push
loopne
icebp
push
call
push
daa
add
and
pop
cli
jmp
aaa
and
xchg
mov
call
ror
arpl
push
cmovo
push
loopne
add
fwait
rol
and
add
sbb
and
lea
xor
mov
(bad)
push
lock
and
imul
cmp
lgs
or
dec
or
adc
(bad)
pop
add
cwde
call
add
adc
jge
add
push
add
inc
add
or
add
add
(bad)
loopne
and
add
mov
xchg
add
mov
mov
or
(bad)
push
call
andps
mov
xor
pop
pusha
mov
loopne
pop
(bad)
sub
xlat
and
les
xor
sub
sub
add
push
(bad)
fild
and
inc
push
add
mov
add
mov
fld
pop
push
adc
push
add
adc
add
adc
mov
mov
adc
push
test
jmp
test
loopne
add
pop
or
adc
add
xor
jno
or
stc
arpl
pop
loopne
dec
add
add
add
jecxz
add
inc
jl
jne
popa
or
retf
mov
or
cmp
xor
dec
add
push
ss
jp
cdq
fiadd
xrelease
adc
stc
sbb
cmp
call
cmp
inc
dec
pop
inc
loopne
jmp
add
shl
pop
sbb
add
mov
(bad)
arpl
nop
push
mov
or
mov
add
add
and
add
movs
push
or
add
jbe
pusha
(bad)
sar
or
add
adc
aas
mov
dec
jne
sbb
add
add
mov
or
jle
mov
add
dec
call
add
sbb
js
inc
inc
(bad)
leave
lea
clc
sbb
daa
adc
push
shl
sub
push
and
jmp
or
call
or
inc
mov
cmp
cmp
mov
call
shl
adc
iret
je
jge
jle
mov
verw
mov
loopne
clc
or
xor
push
hlt
jae
sbb
mov
xchg
inc
pushf
add
rol
(bad)
clc
sub
sbb
or
mov
jno
ficom
std
lock
sub
imul
pop
add
mov
fldcw
and
outs
push
dec
out
or
cmp
rcl
cmp
mov
inc
add
call
(bad)
sbb
add
add
adc
push
or
add
pop
adc
aam
(bad)
push
push
dec
cmp
cld
add
add
call
add
add
ss
ret
xor
les
push
xlat
(bad)
jmp
or
call
jb
int3
mov
inc
add
and
(bad)
out
inc
(bad)
into
nop
test
call
adc
push
push
(bad)
daa
push
or
fcom
js
mov
movs
mov
call
daa
jne
mov
call
in
inc
adc
adc
add
dec
and
ror
jmp
adc
inc
sub
rcr
shl
xor
mov
and
mov
mov
out
push
(bad)
clc
xchg
add
fs
adc
xor
add
dec
out
mov
add
mov
push
mov
push
and
call
add
in
call
pop
cmc
xchg
sub
and
or
pop
(bad)
(bad)
push
out
add
popa
ret
scas
scas
and
out
add
jmp
adc
(bad)
aad
inc
xor
pushf
das
jge
int3
add
push
sbb
dec
jns
sub
xor
clc
btr
xlat
mov
add
add
jp
(bad)
cmc
and
and
pop
lock
adc
loop
and
test
jle
or
push
cdq
xor
loop
call
es
push
loopne
jg
aam
xchg
push
add
adc
jl
inc
jmp
sbb
test
and
xchg
push
bound
retf
icebp
inc
mov
xor
outs
add
enter
jne
call
and
and
jmp
test
cmc
test
mov
pop
ins
or
mov
and
inc
(bad)
push
add
dec
sub
mov
lods
add
jmp
ret
add
punpckhbw
dec
add
out
dec
rol
sub
cmps
(bad)
cmp
fldenv
add
add
fisttp
and
imul
lahf
inc
inc
mov
lea
add
push
and
push
add
not
push
jo
cmp
mov
cmps
adc
mov
mov
xor
push
loopne
jl
sub
rcl
mov
xchg
or
add
push
push
inc
jo
and
mov
add
mov
add
pusha
add
push
sub
push
add
add
sar
clc
add
loop
add
mov
add
push
push
add
imul
mov
mov
addr16
add
or
xlat
adc
add
pop
mov
dec
mov
jne
in
or
push
inc
inc
aam
jne
add
dec
add
jnp
and
inc
pop
inc
loopne
and
inc
add
and
add
jl
arpl
cmp
push
and
mov
mov
add
add
xor
call
sub
ficom
(bad)
clc
inc
pop
add
inc
add
push
les
sub
inc
pop
and
add
iret
and
ja
sub
add
xor
inc
add
inc
and
and
adc
dec
add
xlat
xchg
add
jo
popa
hlt
add
and
icebp
jp
loopne
dec
jmp
mov
add
lock
xlat
shl
sbb
add
mov
inc
push
add
ror
push
nop
add
push
or
inc
add
dec
sub
add
dec
add
xor
add
and
and
add
test
add
mov
pop
or
or
sub
sbb
aas
add
dec
mov
mov
test
imul
dec
add
sar
add
ja
jmp
push
add
in
pop
inc
adc
and
inc
nop
sbb
jecxz
(bad)
ss
ins
hlt
add
jge
pop
mov
jmp
add
ins
xlat
or
nop
push
or
jl
icebp
retf
mov
xchg
or
fisubr
add
in
xchg
aam
mov
inc
icebp
lds
aam
adc
adc
shr
push
(bad)
mov
jno
add
and
mov
(bad)
add
add
or
inc
hlt
push
sbb
add
fcmovb
xor
hlt
add
fdiv
jmp
jne
adc
dec
and
enter
jmp
add
inc
dec
aad
inc
les
dec
push
aad
add
stos
mov
add
or
adc
cmp
add
mov
mov
add
mov
dec
add
adc
add
pop
adc
add
xor
test
leave
add
adc
or
je
add
sub
or
shl
icebp
mov
js
popa
add
fcmovnu
cmp
push
jge
out
sub
dec
add
sahf
mov
cmp
dec
add
call
sbb
cmp
call
hlt
push
dec
aas
and
add
dec
jno
mov
add
test
sti
int3
push
push
jne
lock
jo
add
xor
mov
sub
mov
push
lods
outs
or
cmc
inc
loopne
stc
xchg
icebp
inc
pop
enter
(bad)
cmps
add
add
test
cmp
pusha
mov
add
cld
push
inc
add
pop
xor
mov
dec
sbb
sbb
call
in
inc
ret
call
nop
add
cmp
add
or
or
addr16
shl
pop
(bad)
fmul
je
push
les
push
and
adc
inc
push
cmps
xor
add
push
loop
test
inc
shld
rcl
(bad)
cmp
add
lods
add
and
inc
add
jne
hlt
popa
in
add
adc
push
call
sbb
rcr
std
xor
adc
std
(bad)
push
test
mov
shl
outs
test
or
imul
psrlw
add
das
ss
jb
loop
jmp
push
test
or
mov
add
call
and
and
popa
fild
lea
int3
add
out
adc
mov
call
sub
xor
in
js
cmp
pop
js
and
add
dec
and
adc
stc
add
ret
push
enter
inc
aam
(bad)
je
pop
sbb
pop
mov
fist
(bad)
dec
dec
add
cmp
test
fdivr
pop
add
mov
clc
add
stos
push
jle
hlt
inc
inc
test
psraw
ins
adc
add
sub
sub
add
inc
retf
push
add
add
mov
paddd
xor
inc
and
sub
mov
lea
call
add
sub
out
or
test
add
pop
shl
xor
bndldx
mov
add
add
mov
pop
(bad)
rcr
mov
add
call
xchg
add
xchg
lock
sbb
call
fsubr
cmp
lds
or
add
push
push
sldt
cwde
add
aas
add
add
loopne
ret
add
push
into
add
out
and
push
int3
popa
push
push
xchg
sub
je
and
lods
mov
call
fstp
movs
shl
add
gs
fild
add
xlat
call
and
push
xchg
push
mov
rol
jo
add
shl
and
adc
xor
add
push
cmp
push
int
xchg
inc
mov
pop
add
mov
mov
shl
sbb
jno
adc
mov
loopne
inc
or
add
mov
push
mov
cli
and
cmp
mov
add
xchg
fadd
lea
push
inc
ins
dec
and
(bad)
lahf
xchg
adc
xor
push
cwde
sti
adc
mov
add
pop
into
xchg
sbb
dec
and
popa
outs
mov
scas
add
sbb
lea
loope
add
or
add
popa
or
jno
ror
jne
mov
(bad)
pop
xchg
dec
cmp
icebp
add
jnp
add
and
popa
(bad)
sub
add
jns
jne
mov
nop
adc
xor
sub
xchg
std
hlt
cmc
push
inc
push
sub
pop
inc
pop
and
inc
and
push
lock
and
dec
jne
inc
ret
nop
les
or
add
xchg
push
add
popa
xor
sub
movs
xlat
push
call
mov
jns
scas
sub
mov
xor
popf
aas
add
pop
adc
add
add
(bad)
(bad)
and
push
arpl
push
mov
add
add
mov
jmp
pop
pop
add
repnz
loop
loopne
pop
icebp
xor
pop
add
add
push
les
mov
xchg
add
push
mov
dec
clc
mov
pop
jmp
and
push
leave
ss
iret
fld
imul
and
add
scas
and
add
sub
and
xchg
pop
dec
enter
ja
xor
add
iret
mov
rol
cmp
sub
adc
fld1
jmp
adc
call
cli
jle
push
add
das
lea
imul
mov
cmp
push
add
adc
nop
mov
and
data16
add
test
add
mov
add
inc
cdq
movs
ja
xor
inc
clc
add
add
pop
not
nop
pop
add
(bad)
call
(bad)
sbb
ja
xor
test
push
cmp
shl
lock
rcl
cmp
call
or
sub
dec
mov
and
mov
loopne
jge
pop
sbb
aad
adc
sub
inc
or
inc
test
pop
or
adc
stos
inc
xor
(bad)
cld
not
lods
ret
mov
cs
clc
push
pop
add
add
add
mov
pop
(bad)
xchg
jbe
lea
mov
sub
add
pusha
cdq
add
(bad)
loope
push
sbb
sub
add
mov
jb
test
outs
mov
lods
and
adc
mov
jmp
push
cmp
mov
ins
xlat
adc
cmp
adc
xchg
xor
lds
test
dec
dec
add
add
pusha
sti
adc
mov
cmp
shr
and
push
xor
mov
add
dec
mov
(bad)
shl
loope
add
push
out
cmp
test
cmps
mov
sbb
sbb
lock
lock
mov
sbb
add
enter
jae
xchg
aam
mov
sbb
or
add
inc
push
mov
jbe
xchg
push
inc
add
rcr
loopne
xor
xor
inc
movs
dec
lea
inc
push
or
adc
test
mov
xchg
fild
mov
inc
ror
or
jge
add
dec
cmps
add
pusha
(bad)
mov
ins
or
fcmovb
and
add
(bad)
in
(bad)
call
rol
fwait
add
jge
add
loopne
cmp
push
test
mov
(bad)
sub
add
loopne
daa
push
adc
call
or
frstor
aaa
test
adc
mov
fsub
pop
xchg
add
call
dec
test
cmp
dec
add
fdiv
inc
lea
jge
mov
cmp
enter
and
push
xchg
dec
inc
fwait
mov
push
or
dec
cmp
adc
add
push
test
jmp
add
add
cmp
and
mov
jno
adc
mov
and
add
dec
or
shl
sysret
les
popa
push
call
jnp
or
mov
cmp
sub
add
jo
call
add
and
bound
or
xor
mov
add
and
add
add
and
ins
jo
dec
addr16
pushf
mov
dec
loopne
lock
jmp
add
fdivp
add
mov
sbb
into
cmp
pop
sub
dec
push
shl
fs
xor
push
dec
adc
leave
fs
push
push
in
add
pop
ds
leave
add
inc
mov
add
and
sub
sub
push
add
cdq
add
inc
inc
ins
add
xchg
and
cmp
add
cmp
lock
push
movs
shr
push
jne
pusha
cmp
inc
std
ja
dec
sub
push
(bad)
xor
and
sub
mov
mov
inc
aam
add
mov
push
mov
pop
adc
inc
pop
sub
mov
loop
fld
add
add
cmp
and
mov
push
or
lock
mov
rol
test
xor
add
jecxz
or
sbb
movs
ins
add
xchg
push
inc
or
loopne
cmp
mov
inc
push
out
test
mov
dec
mov
inc
sub
add
mov
xor
pop
xor
and
mov
(bad)
push
mov
or
jo
jo
jmp
(bad)
add
add
retf
xor
adc
add
je
xor
mov
pusha
inc
outs
dec
xor
add
add
std
inc
add
add
shl
pop
addr16
jb
sub
xchg
add
xchg
popa
or
add
(bad)
(bad)
push
add
and
add
push
cmovbe
ret
scas
ret
add
pop
aam
add
aaa
xor
xchg
inc
pusha
test
ja
and
dec
jae
adc
mov
xor
fs
dec
sbb
daa
and
jne
add
push
rol
and
jne
jl
(bad)
call
add
xchg
rcpps
add
stc
aam
add
push
clc
add
pop
mov
add
add
clc
or
bound
inc
xchg
sub
out
pop
add
inc
callw
push
and
inc
mov
enter
jb
jmp
nop
test
outs
xchg
stos
xor
push
(bad)
adc
sub
nop
push
cmp
inc
add
cli
dec
cmp
push
imul
rol
dec
or
loop
jo
add
and
xor
sub
jo
sbb
adc
xor
inc
into
cwde
or
add
pop
push
sahf
inc
fsub
push
add
add
add
adc
loopne
inc
int
or
xchg
test
add
cmp
bound
pop
imul
mov
in
call
gs
stos
cmps
cmp
sub
inc
add
pusha
push
adc
add
(bad)
inc
loopne
and
dec
sub
test
add
sbb
jecxz
mov
inc
adc
cmp
ja
or
jg
or
mov
mov
and
xor
sar
loopne
mov
cwde
sbb
call
loopne
push
repz
cwde
push
cdq
push
add
push
jno
jge
xor
add
ror
add
lahf
xchg
call
call
add
push
mov
sub
add
lods
or
clc
pop
xchg
push
adc
movs
push
ud0
add
or
call
lock
or
in
sbb
and
sub
rcr
lock
add
add
movs
jl
call
add
add
loopne
push
fwait
push
jns
dec
and
pop
into
mov
adc
loopne
jnp
int3
mov
test
and
mov
inc
pop
sbb
add
add
bound
pusha
cmp
mov
or
dec
mov
lea
add
ret
or
loopne
add
loopne
rol
mov
mov
(bad)
or
pop
scas
jne
and
fwait
shl
sub
sub
outs
dec
bound
inc
add
add
lods
test
xor
call
cmp
cmp
pop
dec
or
sub
mov
add
or
clc
add
add
inc
add
test
mov
mov
les
ret
jge
mov
or
xchg
call
mov
or
add
scas
sbb
jmp
and
mov
push
push
and
dec
adc
add
and
push
(bad)
enter
call
pop
loopne
jbe
add
mov
xchg
adc
test
test
add
add
add
pop
fisub
add
mov
ss
add
add
cld
and
mov
add
bound
dec
jno
inc
adc
pusha
lea
and
repz
xor
push
and
push
xlat
clc
call
add
add
cmps
nop
push
call
or
dec
pusha
ficom
mov
mov
pop
cld
add
dec
inc
fxch
test
sbb
adc
sbb
add
inc
pusha
pop
xchg
sbb
sbb
jns
mov
mov
cmp
cmp
lea
inc
fsub
inc
sbb
sub
pop
out
add
ins
jle
dec
(bad)
mov
bound
add
stc
call
xor
jge
push
aaa
jne
dec
adc
retf
inc
out
mov
ja
lock
mov
test
cmp
jl
shl
jmp
test
or
and
mov
add
retf
pusha
retf
cs
jge
jne
lea
add
inc
and
push
push
add
(bad)
adc
cmp
call
push
dec
jae
and
xchg
and
sbb
xor
adc
and
adc
sub
loopne
jmp
mov
sub
sbb
js
cmp
mov
and
or
inc
jecxz
popf
mov
mov
mov
rcr
jnp
push
lods
mov
add
inc
or
cmc
inc
push
es
fdivr
call
test
lods
push
xchg
add
fld
add
or
add
dec
mov
or
in
inc
or
inc
push
dec
pushf
adc
lea
nop
(bad)
push
push
or
pop
cmp
add
rol
call
jmp
pop
mov
jmp
rcl
pop
inc
cmp
jp
push
push
fistp
test
add
adc
push
dec
mov
add
push
add
nop
pop
enter
and
push
mov
add
stos
pop
pop
inc
inc
add
sbb
xchg
inc
mov
lds
and
ror
xchg
rol
shl
in
hlt
and
inc
sub
jmp
inc
out
add
ret
inc
mov
add
mov
pop
loopne
dec
or
cwde
inc
add
ret
xor
mov
inc
add
stos
inc
xor
jo
inc
cmp
rcl
icebp
shl
mov
mov
mov
or
mov
pop
(bad)
push
add
stc
cmp
(bad)
call
inc
imul
(bad)
rcr
cmp
inc
add
push
jg
inc
add
stos
add
adc
psubsw
fnsave
test
add
dec
loope
adc
or
dec
pop
mov
loopne
mov
mov
inc
sbb
sub
popf
mov
add
push
and
and
or
sub
loope
les
mov
or
test
ret
into
push
push
and
nop
and
shr
call
add
ror
mov
pop
shl
daa
les
push
add
jg
fild
(bad)
mov
add
mov
add
or
inc
xor
cdq
rol
fadd
push
lea
inc
add
lea
add
add
aaa
mov
call
and
ror
and
lds
jp
dec
sbb
call
inc
push
clc
add
jne
xor
test
dec
sub
push
inc
add
test
xchg
mov
stos
dec
daa
or
or
pop
leave
push
ret
call
xchg
lock
pop
inc
add
push
or
pop
mov
push
cmp
dec
mov
sbb
into
inc
mov
sbb
mov
push
call
xor
mov
and
add
add
add
das
add
push
(bad)
dec
mov
mov
pop
inc
mov
pusha
inc
cmps
(bad)
sar
add
fnstenv
loopne
and
lds
xor
adc
add
xor
inc
stc
(bad)
sub
add
mov
add
ins
add
call
inc
pop
fsubr
and
sub
add
jecxz
add
sbb
imul
pushf
inc
dec
add
mov
aam
add
add
fucomp
jbe
fcom
cmc
sbb
retf
cmc
add
test
(bad)
pop
std
repnz
sbb
cmp
adc
xor
pop
mov
push
mov
and
and
mov
les
add
push
xchg
push
and
add
jge
stos
xchg
mov
add
mov
add
popf
lea
mov
hlt
in
inc
add
imul
adc
inc
adc
xor
push
sub
push
sti
push
mov
add
test
es
add
mov
sldt
cmp
dec
sbb
add
jp
push
add
add
lods
ins
mov
add
nop
inc
call
loopne
push
mov
imul
or
and
mov
inc
inc
fidiv
mov
sbb
push
xor
pusha
div
aad
mov
call
movzx
xor
jne
(bad)
jmp
bound
je
(bad)
pusha
cmp
cmp
push
pushf
add
cwde
mov
popa
mov
add
call
xor
(bad)
adc
dec
lods
or
jnp
add
aaa
call
(bad)
add
dec
push
or
cmp
add
adc
or
push
add
and
mov
out
push
aaa
pop
jmp
call
dec
std
rcl
push
lock
retf
pusha
inc
(bad)
in
call
ror
push
je
xor
add
rol
adc
mov
inc
dec
in
inc
cmovne
or
pop
lock
adc
cmp
add
dec
adc
jmp
or
mov
das
dec
mov
leave
call
add
fmul
fwait
push
nop
mov
lock
fadd
mov
mov
push
jge
call
and
aam
add
inc
dec
cmp
pop
inc
mov
call
inc
and
xchg
add
jae
call
in
add
dec
and
inc
mov
mov
pusha
xchg
add
add
mov
and
mov
ret
mov
fisttp
add
addr16
add
xor
add
adc
jae
add
push
sbb
in
mov
nop
xor
add
scas
add
clc
push
ret
sar
add
pushf
add
str
or
popa
sbb
fidiv
add
xor
sti
xchg
pushf
add
fadd
push
add
jno
iret
push
inc
jne
add
call
add
push
out
data16
into
sub
push
mov
sbb
lahf
sti
ret
rcl
and
ins
xchg
jne
cmp
call
adc
popa
add
ret
hlt
les
std
mov
cmc
shr
fild
push
mov
rol
pusha
inc
xchg
retf
dec
or
in
xchg
inc
pop
or
cmp
lods
adc
call
pop
add
add
add
push
call
jge
inc
add
add
add
adc
jne
add
add
dec
loope
ja
adc
xor
cmp
dec
(bad)
sbb
push
jo
call
add
mov
or
push
addr16
mov
and
gs
rcl
xor
ss
jl
xchg
and
rcr
add
add
(bad)
or
sbb
call
(bad)
stos
sbb
pop
lahf
mov
mov
push
pusha
add
or
adc
aaa
in
xor
pop
sub
pop
add
pop
inc
les
call
jmp
and
adc
das
(bad)
call
popf
sbb
mov
add
push
add
fidivr
sub
or
push
or
add
mov
add
push
enter
add
add
pop
jne
add
jmp
sub
loope
add
stos
push
cmps
sbb
add
cs
adc
je
or
push
enter
jne
or
pop
or
rcl
push
add
stc
outs
ins
rcr
mov
or
dec
mov
ret
or
inc
in
add
or
mov
adc
mov
and
add
add
mov
mov
sbb
jno
push
xchg
call
and
cmp
mov
(bad)
jne
or
add
inc
or
push
movs
arpl
pusha
push
scas
shl
push
call
popa
enter
arpl
pop
push
inc
mov
inc
nop
pop
push
call
jmp
inc
push
std
add
inc
jb
xor
les
shl
xchg
or
sbb
cmc
add
cmp
add
call
call
push
mov
xor
push
inc
dec
dec
push
or
jecxz
ins
inc
test
add
rcl
add
inc
add
add
add
xor
lods
mov
or
dec
pusha
call
add
call
add
or
add
ins
cmp
add
dec
jbe
into
pop
add
out
mov
add
fs
test
pusha
push
add
(bad)
push
and
cmp
shl
cmp
sbb
mov
ret
pop
retf
sub
add
test
push
inc
push
sbb
and
pushf
rol
test
add
jge
call
push
sbb
inc
push
lods
jmp
dec
add
push
call
mov
mov
and
mov
aaa
stc
fwait
xor
or
sub
fistp
add
adc
dec
add
and
jo
mov
mov
or
add
jge
inc
shl
lds
mov
(bad)
fistp
inc
repz
jge
add
mov
test
jge
(bad)
mov
or
push
fsub
dec
scas
lock
mov
gs
sbb
jae
(bad)
ficomp
add
jg
and
call
fwait
test
add
iret
js
lea
lds
push
and
add
adc
jne
ror
in
std
mov
add
add
daa
jb
add
and
xchg
daa
loope
mov
inc
jne
cmp
ret
loopne
and
sbb
dec
xchg
and
jl
call
add
shr
ret
sbb
inc
xchg
mov
call
adc
(bad)
loope
add
add
push
add
adc
or
cmp
pop
push
add
mov
or
setbe
sbb
add
sar
mov
jne
retf
cmp
call
push
sub
call
inc
or
daa
push
add
push
inc
inc
shl
cs
add
and
inc
mov
add
nop
add
inc
and
test
add
mov
inc
add
push
xor
inc
add
adc
lock
sbb
push
push
mov
jno
inc
inc
(bad)
les
mov
(bad)
mov
lock
leave
xlat
and
cmovp
xor
push
nop
mov
adc
sub
fadd
and
add
add
or
inc
jne
push
lea
jo
aas
test
xchg
mov
inc
and
fcom
push
adc
xor
add
mov
lea
mov
xchg
fsubr
stos
jno
push
sub
(bad)
adc
lods
cmp
dec
push
inc
popa
cmp
dec
ins
and
popa
add
dec
test
rcr
cmovne
mov
sub
loop
add
test
cmps
test
push
pusha
lds
push
in
dec
pop
sti
retf
add
rcr
inc
add
and
mov
mov
add
add
pop
add
test
cmp
clc
mov
pop
and
arpl
mov
push
dec
sbb
and
int3
test
add
xchg
dec
mov
cdq
add
pop
inc
in
rcl
addr16
inc
arpl
mov
cwde
add
mov
push
adc
ja
or
xlat
inc
adc
(bad)
xor
mov
in
retf
add
aam
lock
mov
mov
push
and
fs
lods
and
add
mov
add
add
mov
inc
jb
dec
and
ds
std
add
call
cld
mov
ret
push
add
push
push
adc
mov
dec
xchg
mov
enter
jne
pop
sbb
push
cwde
add
sub
xchg
xchg
in
push
add
and
sbb
test
rol
call
repnz
add
dec
stos
enter
add
call
sub
and
lmsw
popf
into
add
sub
mov
or
clc
pop
mov
xchg
or
push
or
inc
xchg
gs
add
mov
es
adc
push
add
add
imul
jge
add
mov
dec
inc
inc
add
add
push
cs
stos
push
add
(bad)
jne
shr
mov
pusha
hlt
add
dec
movs
mov
test
add
mov
call
leave
mov
les
jo
adc
xchg
push
movs
or
(bad)
dec
add
and
add
add
add
push
add
shl
inc
push
push
stos
inc
add
pop
jne
inc
arpl
mov
add
sub
and
add
call
call
add
or
xchg
inc
xchg
inc
add
jb
add
imul
pushf
add
xchg
or
das
add
adc
or
shr
mov
sbb
call
mov
lods
push
inc
sbb
xchg
add
sbb
add
test
add
call
movs
call
jmp
dec
fadd
add
add
mov
jne
or
add
add
and
inc
jb
push
adc
jmp
pop
push
mov
add
sub
ret
aaa
jns
dec
add
mov
mov
push
xchg
mov
mov
or
call
divps
outs
mov
push
add
adc
sbb
sar
add
and
push
test
enter
dec
or
sti
adc
loopne
or
mov
fwait
inc
pop
ror
push
add
imul
movs
jge
cs
or
in
xchg
js
and
adc
inc
rol
lock
outs
mov
pusha
cmp
add
add
add
mov
jbe
or
push
jo
loopne
add
add
lds
xchg
loop
sub
add
(bad)
mov
pop
test
push
mov
add
add
hlt
inc
popf
jno
cs
add
push
add
push
(bad)
fucomi
sbb
or
call
(bad)
xchg
dec
mov
pop
mov
call
scas
and
jne
call
movs
cwde
inc
mov
loope
call
add
call
mov
mov
(bad)
fmul
adc
mov
mov
aam
add
push
popa
add
or
sub
sar
ja
sbb
add
pop
jo
xor
add
xor
xor
lea
add
ror
mov
cmp
add
add
mov
aam
inc
add
call
pushf
enter
add
call
inc
inc
das
pop
adc
push
push
pusha
inc
xchg
nop
add
xchg
add
push
sub
(bad)
lds
test
mov
xor
iret
cmp
les
add
push
add
add
jmp
rcr
dec
xor
xor
xchg
push
add
add
sbb
inc
adc
rol
add
aaa
fcmove
xor
sub
pop
dec
fld
push
dec
arpl
fs
xor
and
jne
lock
and
(bad)
rol
call
pop
test
push
inc
mov
add
test
hlt
pop
mov
adc
mov
and
leave
rol
push
push
mov
pop
test
popf
popa
push
jp
push
mov
add
mov
sub
mov
or
mov
add
ret
cld
cmp
mov
or
mov
sbb
sbb
add
mov
dec
mov
addr16
adc
fiadd
add
mov
clc
mov
dec
call
inc
test
xchg
xor
movs
pop
xchg
inc
dec
or
pop
imul
test
xor
call
pop
mov
add
add
mov
inc
add
cmp
dec
and
mov
pop
pop
add
xchg
push
movs
add
jbe
add
jne
jecxz
xchg
push
add
add
cmp
cmp
and
retf
inc
add
pop
add
or
add
fdiv
dec
cwde
rcl
inc
inc
inc
pusha
or
push
and
push
inc
cmp
lea
add
jmp
std
shr
test
xchg
in
push
pop
cmp
cld
(bad)
dec
pop
pop
mov
adc
icebp
adc
push
aam
mov
push
out
test
inc
enter
(bad)
repnz
add
mov
jmp
add
dec
sldt
adc
jmp
(bad)
sub
arpl
or
cmps
int3
add
jbe
fmul
das
inc
mov
fstp
add
int3
sahf
add
outs
inc
dec
aam
mov
fld
add
in
cmc
movs
pusha
push
call
xor
push
xlat
inc
adc
adc
mov
les
shl
retf
push
(bad)
and
mov
call
pushf
and
(bad)
xor
mov
call
push
add
push
sub
jp
sub
mov
cld
je
add
add
lsl
and
add
clc
add
sbb
push
out
xlat
xor
push
inc
or
pop
(bad)
mov
xchg
pop
popa
sbb
push
inc
xchg
stos
(bad)
sar
shl
push
add
add
inc
or
popa
icebp
jo
loopne
test
inc
aad
xor
cmp
je
rcl
add
push
push
nop
push
dec
dec
jge
add
dec
add
add
daa
push
jne
ja
std
les
ret
mov
cmp
mov
pop
call
add
call
loopne
test
aam
add
or
mov
inc
inc
add
pop
sbb
and
add
mov
add
imul
pop
pop
cli
mov
add
nop
add
cmp
jne
add
cmp
mov
add
call
call
unpcklps
add
push
mov
add
add
adc
or
call
add
xchg
add
add
ret
adc
xchg
loopne
cmp
add
mov
push
adc
xor
add
shr
add
sub
add
or
loop
jne
mov
adc
xor
adc
popa
rol
add
sbb
inc
lock
fxsave
mov
add
dec
push
sbb
mov
mov
push
mov
dec
add
xchg
inc
inc
pop
cwde
test
add
xchg
ret
call
adc
enter
pop
cmp
lds
inc
cmp
add
add
inc
mov
in
popf
or
nop
call
push
or
or
sub
icebp
sahf
and
test
push
add
pop
add
pop
jne
add
pushf
add
call
call
add
add
out
inc
(bad)
fadd
sbb
xor
mov
(bad)
adc
sbb
push
add
js
jmp
add
int3
jmp
mov
(bad)
not
aas
jne
popa
push
add
dec
arpl
push
inc
add
sub
mov
ins
xchg
dec
sbb
sub
and
mov
jne
add
pushf
outs
lahf
inc
outs
cmp
sbb
sub
add
in
add
icebp
add
add
add
add
jmp
loopne
add
ret
inc
outs
inc
mov
fwait
dec
push
cmp
mov
test
dec
xchg
movs
add
in
(bad)
jbe
rcl
add
push
call
add
mov
mov
mov
add
push
adc
push
shr
push
inc
dec
xor
inc
inc
cmp
std
rcl
call
dec
lock
push
loop
mov
dec
xchg
pusha
dec
retw
mov
sbb
push
adc
bound
leave
ss
jo
sub
add
scas
in
dec
and
add
or
xchg
push
int
or
ja
shl
add
jae
add
lock
or
xchg
jne
jnp
mov
xchg
movs
call
fs
les
adc
mov
lds
jge
or
add
call
fisttp
fist
jge
jne
jne
pusha
mov
add
aaa
pop
add
call
add
inc
add
ror
dec
jne
inc
pop
cmovne
shr
mov
pop
cmp
fadd
jne
mov
push
and
mov
push
iret
push
xchg
xor
push
or
inc
adc
sub
inc
add
js
loop
add
rol
xor
leave
rol
dec
inc
or
std
mov
adc
ds
add
ret
push
add
or
adc
mov
shr
test
add
adc
loope
(bad)
mov
xor
sub
xor
enter
nop
loopne
fcom
mov
add
lea
imul
mov
rcl
mov
imul
call
and
add
enter
add
or
pop
add
dec
pusha
adc
dec
push
jmp
inc
shr
or
js
inc
push
jmp
test
sbb
retf
or
and
popa
or
mov
jne
ret
and
jae
shl
add
rcl
push
push
inc
(bad)
call
call
fadd
sbb
add
xor
push
cmp
jge
dec
xchg
inc
push
dec
jne
fisubr
adc
add
sar
adc
aam
push
call
(bad)
xchg
clc
lahf
mov
push
stos
sub
mov
(bad)
pusha
push
imul
cmp
inc
arpl
push
add
cli
adc
push
mov
test
and
ret
sbb
cwde
push
add
pop
aaa
push
sbb
dec
imul
in
and
(bad)
test
rcr
add
add
inc
add
add
ret
sbb
call
ins
add
inc
mov
loopne
cmc
pop
pop
(bad)
(bad)
inc
mov
call
add
mov
and
hlt
jmp
add
xor
or
jge
jo
inc
sub
std
add
push
inc
imul
cdq
inc
(bad)
(bad)
dec
jmp
mov
aam
mov
xor
sub
cmp
xor
xor
push
mov
xor
and
ror
add
add
shl
push
popa
pop
mov
nop
xor
or
push
dec
sub
add
mov
adc
popf
int3
cmp
pop
inc
retf
and
shr
fs
adc
in
frstor
add
push
mov
out
dec
add
adc
mov
fcom
or
mov
daa
push
add
add
mov
pop
inc
dec
sbb
jmp
jmp
add
xchg
add
pop
sbb
add
ret
mov
rol
call
and
loopne
add
push
push
nop
lds
push
(bad)
and
test
mov
pop
push
repnz
lahf
(bad)
push
push
(bad)
or
icebp
dec
jl
call
mov
mov
ss
inc
push
fsub
add
jmp
add
mov
shl
jne
inc
dec
popf
sub
add
popa
inc
js
adc
or
inc
add
or
adc
lods
enter
(bad)
mov
jge
add
test
pop
jmp
add
lea
sbb
loopne
sbb
and
adc
add
inc
test
fadd
jns
and
ja
cmps
and
rcr
dec
mov
jae
or
inc
push
or
mov
or
adc
pop
cmp
add
mov
add
shl
add
cmp
xor
nop
js
adc
test
jno
add
sub
inc
fisttp
lock
lock
pop
in
add
push
jo
add
xor
add
rol
bound
add
xor
clc
add
or
inc
lods
xor
pop
inc
fwait
(bad)
sbb
mov
mov
xchg
lock
add
xchg
lock
add
ror
cmp
mov
add
or
loopne
ins
test
push
ss
and
ror
xchg
add
mov
lds
fld
add
icebp
push
nop
test
call
and
(bad)
hlt
icebp
cld
invlpg
jne
imul
inc
sub
jne
ins
sbb
mov
lods
gs
mov
cmp
call
lods
pop
aad
xor
(bad)
gs
sub
test
add
cmp
int3
add
pop
mov
push
js
push
xor
add
add
inc
clc
or
jmp
and
push
cmp
clc
jmp
or
inc
push
add
ret
xor
add
xchg
adc
add
adc
mov
mov
loope
(bad)
or
ret
dec
dec
and
call
mov
loopne
mov
push
push
ret
fst
sub
inc
pop
test
mov
xor
imul
mov
push
and
adc
add
rcl
adc
sub
xor
add
inc
push
out
inc
cmpxchg
fadd
call
nop
imul
sbb
add
mov
push
add
mov
test
cwde
adc
push
loope
mov
pop
scas
mov
add
xchg
ret
ss
sti
lods
mov
jl
add
xor
add
gs
or
sub
rcl
les
add
adc
xor
jge
shl
xor
mov
add
xlat
mov
inc
inc
add
push
cmp
push
add
mov
call
sbb
cwde
push
mov
jmp
add
or
jmp
adc
leave
cld
add
(bad)
push
or
lea
dec
push
push
add
add
push
adc
and
daa
and
add
call
cli
inc
(bad)
mov
push
pop
adc
and
rol
jmp
dec
add
push
scas
loop
and
jb
push
(bad)
sub
add
xor
mov
xor
pusha
cmp
add
call
inc
pop
test
iret
pop
push
mov
loope
mov
inc
xchg
push
int3
das
aam
loop
mov
add
push
and
mov
stc
mul
nop
push
pop
adc
call
and
add
imul
push
and
in
add
pop
add
test
cmp
push
test
push
add
pushf
mov
enter
push
inc
in
and
enter
add
adc
push
xor
movs
cdq
aas
add
aas
add
mov
int3
xor
mov
call
add
pop
stos
dec
jle
adc
faddp
add
call
nop
mov
popa
add
call
js
add
(bad)
pop
test
sar
call
dec
and
daa
test
push
push
ins
or
or
add
push
popa
sar
call
inc
jo
push
mov
and
add
or
daa
scas
xchg
lahf
adc
(bad)
call
(bad)
mov
inc
out
add
adc
push
(bad)
call
adc
cmovno
adc
mov
test
push
nop
cmp
jecxz
fsubr
pop
shr
js
or
add
and
adc
add
mov
push
inc
mov
dec
pop
jmp
loopne
push
jmp
jmp
mov
pop
and
xor
shr
and
pop
add
lods
add
push
test
movs
mov
cld
sbb
push
add
adc
mov
adc
adc
loopne
das
push
mov
ror
jle
push
clc
add
sbb
lock
add
aaa
add
fild
stos
fadd
jns
add
add
mov
add
xchg
femms
xor
xchg
mov
and
or
or
and
retf
in
jno
inc
test
dec
pop
bound
test
fadd
add
mov
or
ins
adc
inc
or
add
vp4dpwssds
push
adc
add
mov
or
jmp
je
xor
push
cmp
push
add
or
mov
pop
mov
push
add
jmp
loop
fst
cmp
cld
jne
add
or
loop
fdiv
or
sub
jle
mov
outs
dec
bound
add
add
inc
fld
dec
dec
add
add
and
fsub
add
xchg
cmp
and
adc
in
or
add
and
mov
cmp
push
pop
add
mov
rol
sahf
push
dec
call
call
popf
(bad)
jmp
add
inc
test
fisub
dec
mov
mov
sub
push
popa
push
xchg
and
add
(bad)
lea
add
mov
and
add
and
inc
loopne
or
call
push
push
dec
shl
add
xor
mov
rcl
rol
dec
pop
movs
xchg
dec
(bad)
arpl
jns
call
add
invlpg
dec
call
mov
mov
push
xor
sbb
push
call
mov
inc
ret
jle
bound
fadd
add
stos
stos
xor
popf
mov
jmp
inc
push
pop
jl
pop
add
je
push
or
mov
ins
add
(bad)
stc
pop
rcl
sar
mov
push
push
pusha
add
dec
push
mov
add
jne
mov
fadd
mov
add
add
jne
nop
add
sbb
mov
jge
dec
xadd
jecxz
push
jge
pusha
jns
in
and
add
xchg
add
mov
addr16
add
mov
loop
inc
push
add
sbb
or
add
cmp
xor
cld
out
mov
rol
or
add
cdq
call
inc
add
clc
sbb
push
add
adc
lods
mov
xchg
call
call
ror
aam
fwait
inc
or
ins
push
mov
mov
add
inc
adc
pop
xchg
test
dec
test
mov
add
or
xchg
add
mov
dec
call
jge
leave
pop
add
or
clc
add
fs
mov
enter
add
inc
mov
push
test
add
sub
pop
or
and
in
dec
xor
sub
mov
iret
mov
loop
enter
ficom
add
push
add
stos
lea
xchg
mov
lock
in
inc
adc
pop
lock
add
add
mov
jmp
jb
pop
aas
cmp
push
add
rol
sub
add
jmp
dec
dec
sbb
add
shl
add
jae
not
xor
cmp
jo
(bad)
xor
or
dec
inc
xor
sar
and
add
scas
icebp
lea
outs
inc
(bad)
jmp
pop
test
call
add
dec
pusha
mov
pushf
inc
add
dec
pusha
push
add
out
call
add
mov
mov
jne
cmp
add
push
push
sbb
push
add
add
add
and
fiadd
push
dec
ror
mov
and
data16
xor
popa
xchg
add
add
inc
add
dec
jno
mov
adc
hlt
or
push
pop
push
outs
mov
scas
add
push
cmp
push
add
or
dec
mov
or
popf
pop
mov
add
adc
mov
add
cmovo
push
push
(bad)
adc
pop
sbb
loop
xchg
add
fadd
pop
add
xor
push
add
rol
add
aas
jg
loopne
add
inc
call
mov
inc
adc
inc
mov
shl
in
adc
imul
push
add
add
add
mov
add
(bad)
mov
add
or
(bad)
xchg
mov
pop
inc
rcr
xchg
and
cli
(bad)
xor
mov
dec
call
mov
push
test
wbinvd
push
add
in
jmp
add
(bad)
adc
and
and
xor
add
add
mov
popa
add
or
jne
xor
inc
inc
test
call
fisttp
stos
xchg
push
mov
add
nop
cmps
mov
cmp
out
retf
cmp
pop
add
xor
sar
add
jmp
adc
mov
ret
add
xor
xor
loope
xor
sbb
call
or
xor
dec
add
cmp
sub
loopne
add
out
aas
mov
jmp
rol
lar
sub
add
cmp
dec
mov
push
add
dec
(bad)
inc
or
dec
push
add
inc
xchg
mov
lea
or
(bad)
xchg
repz
push
imul
and
add
mov
lea
push
rol
cmp
pusha
sub
add
mov
fild
shl
cmp
inc
add
add
inc
mov
or
leave
ret
add
dec
sbb
mov
scas
scas
mov
inc
sti
and
setge
lea
jmp
lods
nop
int
inc
(bad)
stc
sub
and
push
sub
lds
add
cmp
jne
mov
outs
jmp
xor
pusha
adc
loope
inc
adc
add
dec
push
add
push
adc
sahf
shl
sub
cmp
cmp
push
sbb
loop
or
leave
fcmovnb
add
mov
in
idiv
cmps
mov
or
inc
fcomp
sub
push
lock
mov
bound
mov
rol
cmp
inc
test
out
and
adc
or
push
jns
jp
inc
ror
inc
cld
jge
pop
add
mov
push
jmp
into
jo
repnz
test
shl
add
or
pusha
(bad)
cmp
out
push
fild
test
rol
xchg
mov
or
xchg
push
lea
leave
add
jmp
stos
or
ins
imul
outs
mov
pop
cli
push
gs
add
push
sbb
inc
sbb
mov
fwait
dec
pop
ror
les
cwde
loop
sub
sbb
push
shl
jecxz
jmp
test
adc
inc
push
xchg
pop
dec
add
in
sbb
or
mov
push
pop
or
mov
add
jge
mov
mov
mov
mov
ret
loopne
mov
pop
add
pop
sub
add
push
and
dec
and
mov
daa
je
xor
test
add
pop
shl
add
iret
mov
add
in
jge
and
adc
dec
or
and
lea
fisttp
clc
jne
jne
pusha
push
add
or
test
add
outs
sbb
out
add
in
jmp
or
inc
pop
rol
mov
adc
push
or
mov
push
jbe
mov
mov
pop
add
scas
pop
add
test
adc
and
add
add
adc
popa
xlat
or
xor
mov
imul
xor
nop/reserved
push
or
fadd
xchg
mov
js
clc
xchg
and
lea
push
lock
adc
dec
retf
push
cmp
mov
jp
rcr
in
and
scas
lods
sbb
fstp
inc
xchg
ret
adc
add
(bad)
in
add
adc
add
mov
inc
repz
jne
add
mov
pusha
push
inc
rol
sbb
mov
scas
gs
arpl
push
add
psubsb
in
in
inc
push
nop
icebp
inc
add
add
jmp
test
(bad)
(bad)
cmp
movs
push
aas
or
out
(bad)
mov
out
pusha
ins
add
jge
add
push
rol
rol
gs
add
fisubr
clc
and
rcl
mov
xchg
push
add
xor
pop
retf
inc
(bad)
cmp
leave
fldenv
mov
add
add
dec
cmps
outs
loopne
mov
imul
repnz
pop
sbb
std
inc
inc
test
(bad)
and
add
mov
cmp
add
pop
mov
add
xchg
aaa
or
test
sti
push
out
cmp
push
mov
hlt
mov
mov
rol
stos
add
scas
mov
popa
ret
push
add
xchg
dec
dec
repz
cmp
call
rol
xor
xor
dec
and
test
call
push
mov
lock
and
call
ficomp
add
js
call
rol
push
imul
and
xor
push
add
lds
cmp
shl
jne
add
aaa
xchg
aas
add
pusha
cmp
fs
fucomi
jno
push
call
gs
popa
std
jb
inc
pop
loopne
and
sbb
jmp
add
outs
aas
jae
add
adc
ins
hlt
sbb
add
sbb
call
push
dec
rcl
aam
push
mov
sti
mov
add
or
imul
xchg
adc
pushf
jo
cs
add
add
sbb
fiadd
shl
add
push
xor
in
add
adc
lock
fbstp
test
xchg
or
jg
mov
in
or
jmp
cld
and
(bad)
pop
add
add
add
mov
adc
pop
clc
nop
call
int3
and
call
push
and
rol
push
cmp
inc
jmp
mov
or
push
jbe
test
test
sbb
loopne
add
pusha
add
fisttp
fild
or
and
xchg
push
push
mov
out
cmp
mov
loop
mov
ret
mov
or
loope
inc
arpl
and
add
add
or
call
(bad)
or
add
call
call
inc
or
add
rol
loopne
mov
push
dec
cli
shl
add
inc
pop
out
cld
push
(bad)
call
jl
add
add
cmovp
sbb
xchg
add
mov
call
add
mov
add
dec
dec
lock
fcmovnb
pop
paddsb
pop
mov
push
cmp
lock
inc
add
mov
sbb
ins
or
sub
adc
adc
dec
or
xchg
test
jne
add
inc
fild
add
dec
jmp
call
add
mov
inc
es
jno
in
and
push
adc
test
pop
cmps
int
pusha
add
cmp
jmp
adc
call
mov
lods
mov
rol
(bad)
mov
dec
loope
cld
add
push
adc
dec
dec
ins
push
push
jo
mov
add
adc
add
inc
push
add
mov
in
cwde
add
adc
pusha
jmp
addr16
fild
vmread
sar
xor
xor
dec
push
push
add
bound
mov
add
lock
add
jl
or
or
add
push
cld
std
stos
inc
add
xchg
push
sub
push
adc
test
add
stos
jb
add
rcl
add
jl
push
jne
sbb
and
add
adc
add
adc
add
nop
or
sbb
clc
jns
lea
mov
add
add
xor
or
imul
iret
test
(bad)
call
fsub
in
mov
shl
jno
gs
fmul
xor
or
lds
add
mov
add
pop
test
pusha
loopne
jns
shl
inc
dec
shr
rcl
(bad)
and
(bad)
cld
or
add
mov
pop
enter
adc
rol
sub
cmps
jb
sbb
call
ret
or
sbb
es
pop
call
test
add
ret
sub
push
sub
pushf
nop
xor
dec
add
(bad)
enter
push
push
inc
lock
in
data16
clc
mov
add
inc
push
ret
or
cmp
add
pop
mov
jo
gs
in
add
xor
fist
test
(bad)
call
add
inc
loopne
hlt
mov
push
add
adc
or
(bad)
or
call
jne
add
jb
dec
je
adc
push
inc
and
dec
jne
idiv
inc
inc
mov
push
mov
mov
adc
inc
push
xchg
dec
add
push
or
enter
lods
rol
mov
jmp
jmp
sbb
or
aam
add
jne
pop
cmp
pop
sbb
not
cmps
add
push
adc
and
sub
and
push
pusha
push
mov
add
mov
es
mov
mov
push
shl
mov
jmp
fcomp
jle
add
out
inc
add
and
rol
push
mov
aaa
add
popf
mov
(bad)
push
out
(bad)
sbb
xchg
jecxz
ret
add
and
push
push
lea
push
sub
inc
lods
cs
clc
pusha
jnp
inc
mov
and
add
mov
scas
adc
adc
add
call
nop
lock
or
add
and
xor
push
sub
call
inc
pusha
test
and
call
xchg
push
dec
popf
push
cmp
pop
call
cmp
cmps
cmps
pop
add
mov
dec
dec
add
and
adc
add
loope
jecxz
jne
ror
add
adc
push
adc
retf
inc
pop
imul
pop
loope
add
call
inc
or
and
das
dec
inc
and
inc
mov
inc
movs
adc
dec
cmp
cmp
repnz
aas
ret
pop
sub
add
push
loopne
adc
(bad)
jle
lahf
add
dec
mov
adc
ins
(bad)
pcmpeqb
add
dec
jge
cmp
sub
fisttp
pop
mov
pop
add
dec
dec
add
shl
mov
add
and
add
(bad)
call
inc
sbb
add
mov
and
add
sub
shl
adc
sar
xchg
and
nop
dec
mov
je
inc
sbb
dec
dec
mov
add
mov
mov
push
add
sbb
jl
fbstp
push
xchg
ds
add
mov
xor
xor
cmp
mov
enter
push
call
inc
pop
mov
adc
iret
and
mov
cmovno
cdq
inc
jb
(bad)
xor
push
and
cmp
adc
push
adc
xor
ss
test
add
dec
call
add
mov
add
rcr
pop
loopne
and
mov
push
inc
inc
add
seto
ud2
pop
call
dec
cmps
add
xchg
add
test
scas
add
add
mov
cdq
add
xor
rcl
leave
mov
cmp
aad
clc
pop
jo
and
push
cmp
or
(bad)
mov
adc
push
jl
or
jle
or
ror
xor
call
test
bound
cmp
retf
adc
push
dec
dec
add
mov
jmp
or
mov
jo
mov
push
jne
push
(bad)
inc
add
dec
cmc
(bad)
in
mov
loopne
call
rcl
adc
mov
pop
xor
inc
test
dec
pop
add
add
sub
scas
xor
pop
fndisi(8087
add
dec
push
mov
call
popa
outs
shl
cwde
fwait
add
xor
mov
add
mov
add
nop
test
add
adc
or
push
add
add
add
push
add
jmp
sub
seto
ss
pusha
inc
push
dec
add
out
ds
sub
mov
and
or
sbb
and
call
mov
loopne
jp
lea
cmp
js
popa
add
call
lea
dec
pop
fmul
mov
add
push
mov
pop
jnp
lods
or
or
add
cli
inc
mov
add
pop
(bad)
xchg
shl
cwde
add
sub
(bad)
add
adc
pop
sbb
mov
gs
add
pop
xor
mov
push
scas
dec
add
aas
inc
xor
sbb
loopne
jae
gs
jne
nop
jge
pop
inc
mov
adc
iret
loopne
js
out
(bad)
(bad)
xchg
xor
inc
ins
xchg
loop
jno
jne
xor
push
hlt
xor
add
nop
pop
mov
add
mov
add
dec
ret
inc
or
shl
add
add
or
jle
jb
loopne
jne
arpl
je
add
or
adc
mov
std
push
and
and
add
sar
in
pavgb
add
add
add
in
push
xor
jb
test
or
pusha
push
add
mov
add
dec
push
dec
ins
mov
and
rol
and
add
lods
lock
cwde
mov
daa
ror
movs
add
call
loope
and
xor
push
call
sbb
add
cwde
aam
popf
push
push
push
inc
push
mov
call
out
dec
call
in
test
mov
xchg
add
mov
loopne
jge
inc
or
push
enter
or
call
and
lods
add
dec
add
jne
add
rcr
bound
inc
pusha
das
xor
stos
add
mov
aam
into
test
adc
mov
push
mov
add
ret
add
inc
add
or
mov
add
xor
and
and
enter
adc
xchg
add
add
mov
add
mov
outs
or
add
or
add
or
adc
cmp
add
dec
call
adc
dec
cmps
push
xor
rol
mov
push
push
or
pop
jle
push
and
data16
rol
dec
mov
and
add
jl
add
add
lods
icebp
inc
add
mov
push
add
or
jmp
cmps
add
inc
mov
sti
xchg
add
pop
cmps
mov
push
aam
add
bound
pop
cmp
inc
aam
sbb
dec
jne
jo
pusha
sbb
sbb
add
repnz
pop
call
or
push
pop
or
xor
sub
iret
mov
test
dec
or
and
shl
jne
cmp
call
(bad)
jmp
call
push
call
mov
add
push
add
sbb
jge
mov
add
dec
dec
in
mov
cmps
jmp
push
pop
or
nop
push
jp
pop
add
popf
xor
test
jg
pop
aaa
add
test
xor
call
xor
push
add
add
inc
stos
dec
dec
aaa
je
rol
mov
add
lar
mov
jmp
xlat
or
push
pop
ss
pop
add
loopne
inc
add
outs
ins
nop
mov
lea
add
push
cmp
ja
shr
in
xor
test
add
test
add
inc
push
fcmovnu
mov
cmp
test
rol
add
call
int3
inc
jge
lea
jge
inc
call
add
add
(bad)
fcmovnb
jno
inc
and
add
loopne
call
ret
inc
dec
pop
mov
adc
push
cmp
adc
mov
enter
call
add
mov
gs
inc
sbb
add
mov
lock
xchg
and
cmp
adc
add
and
call
loop
add
add
inc
adc
add
sar
push
mov
shl
test
add
add
mov
sar
movs
inc
dec
paddw
adc
add
add
sbb
adc
inc
inc
jmp
and
dec
pop
test
or
jbe
adc
es
add
inc
push
add
add
fwait
loope
mov
in
movs
sub
jl
push
add
xor
lods
call
sub
pusha
fs
add
cmp
mov
jmp
add
jae
rol
or
test
popf
shl
ret
jg
pop
and
push
mov
mov
add
rcl
ret
arpl
inc
icebp
daa
pop
leave
mov
jno
or
push
xlat
cmp
add
mov
inc
add
push
(bad)
xchg
and
leave
cmp
inc
push
and
add
out
and
ror
pop
push
(bad)
(bad)
or
mov
xchg
mov
xor
add
inc
push
and
xor
adc
add
call
pop
popa
add
mov
add
dec
test
push
inc
and
cmp
(bad)
jo
add
lock
mov
add
and
popf
movups
inc
add
call
pop
inc
xor
repnz
add
rol
push
popa
add
and
push
mul
push
mov
push
inc
ins
mov
out
add
bound
jle
shr
mov
or
and
add
add
push
mov
push
sbb
popa
add
out
push
(bad)
imul
mov
ins
inc
shl
add
add
test
dec
or
ret
loop
xor
retf
mov
or
xor
add
shl
icebp
rol
cld
fsub
adc
and
or
enter
add
mov
popa
popf
dec
ja
push
inc
add
(bad)
dec
add
inc
add
sbb
push
adc
pop
test
loopne
inc
push
sub
test
out
push
(bad)
loope
adc
dec
jmp
inc
mov
add
cmc
loopne
sbb
and
inc
inc
dec
mov
add
mov
or
pop
mov
add
dec
je
call
call
push
sub
leave
repnz
or
inc
jmp
add
mov
add
pusha
call
test
inc
loope
mov
jp
(bad)
jns
push
add
jo
add
pop
cmp
cwde
dec
and
js
nop
test
loopne
add
js
mov
sub
retf
rol
sub
call
ror
mov
es
dec
inc
call
mov
and
pop
loopne
xor
mov
pop
adc
out
mov
mov
push
popf
add
or
pop
leave
push
cdq
dec
cwde
dec
add
add
pop
jo
ret
hlt
add
sbb
push
adc
push
push
add
add
dec
sub
add
add
xor
add
mov
aad
add
es
add
je
mov
movs
add
mov
mov
sbb
cmp
ins
rol
in
arpl
call
add
adc
and
call
popf
test
mov
add
cmp
or
push
loopne
add
jmp
loopne
in
add
sub
lahf
add
and
mov
inc
or
add
add
add
inc
inc
test
add
add
add
xor
or
rol
nop
adc
leave
ret
adc
push
mov
es
loop
add
fsubr
pop
in
pop
outs
sub
add
xor
xor
mov
dec
call
inc
xor
jno
jmp
mov
pop
cs
call
(bad)
data16
movs
stos
inc
add
xor
push
mov
js
seto
pop
add
add
inc
and
aad
(bad)
mov
jle
mov
jne
xor
cmp
add
dec
test
sbb
or
call
add
dec
call
mov
push
add
xor
add
add
pop
popa
popa
pop
dec
add
in
sub
sub
add
push
jp
test
cmp
mov
loopne
pusha
test
cli
add
mov
add
xor
sar
jge
nop
pop
push
jmp
imul
popa
jne
push
sbb
inc
cmp
add
fadd
adc
test
rcl
add
add
xor
xchg
add
pushf
jmp
or
push
addr16
sbb
jb
sbb
sub
inc
push
mov
xchg
add
add
call
mov
push
int3
jg
mov
test
mov
add
push
inc
mov
push
and
into
inc
inc
rol
mov
icebp
rcr
jne
dec
add
loope
jns
mov
lods
dec
lea
and
and
cmp
xchg
or
add
ins
ss
ror
jae
adc
rol
adc
inc
cmp
push
adc
(bad)
xor
xchg
sub
inc
loope
stos
add
loopne
mov
adc
mov
push
cli
lods
adc
pop
(bad)
sar
bound
push
xchg
cmp
mov
scas
xor
sub
jae
jecxz
xor
add
sbb
jl
in
push
stc
dec
and
call
(bad)
call
sub
add
add
push
xchg
mov
retf
sbb
sub
jne
push
loopne
hlt
cmp
pop
test
clc
jp
adc
xor
into
or
test
ror
rcr
and
pop
push
add
add
or
inc
inc
inc
stos
test
and
add
adc
popa
jo
mov
stos
sub
add
js
mov
and
dec
cmc
adc
dec
pop
inc
add
lods
and
and
mov
and
fsubr
lea
(bad)
adc
add
xor
add
dec
rcl
pop
(bad)
jle
add
push
sbb
mov
inc
xor
adc
xor
adc
dec
mov
ins
pop
sahf
add
aad
pop
jg
inc
lock
inc
dec
loope
shl
call
(bad)
call
dec
inc
pop
add
or
inc
add
(bad)
imul
add
add
push
push
cmp
sbb
push
mov
call
and
sub
mov
dec
mov
cdq
lea
mov
ins
rcl
call
call
test
add
mov
mov
adc
inc
(bad)
fsub
or
mov
pop
pop
mov
pop
inc
pusha
push
fadd
fdiv
les
sub
and
test
lea
adc
dec
push
(bad)
mov
jge
add
pop
aaa
mov
sti
and
fistp
push
pusha
add
jo
sub
sbb
pusha
enter
adc
or
test
sub
rol
and
cmp
inc
(bad)
mov
add
add
dec
add
or
jmp
arpl
stc
bound
call
pusha
call
jb
push
inc
inc
sub
clc
push
cmp
cmp
fsubr
stos
mov
mov
and
jno
push
add
sbb
cmp
popa
cmp
pusha
rcr
stos
(bad)
arpl
add
bound
mov
jge
arpl
popa
and
sti
inc
mov
mov
inc
add
add
and
mov
ins
cmc
xchg
jnp
stos
pop
sub
jb
sub
add
mov
mov
ror
pop
jle
push
push
push
in
or
ret
add
dec
mov
pushf
jnp
add
loop
(bad)
push
add
inc
add
add
add
pop
push
push
xchg
rol
or
mov
sbb
xor
cmc
mov
mov
xor
push
push
adc
inc
add
pop
ins
fstp
dec
lea
stos
daa
push
inc
mov
stos
and
or
push
push
xor
mov
(bad)
test
sub
add
add
add
and
push
mov
sub
mov
adc
jo
and
xor
dec
ror
inc
into
mov
mov
mov
add
ins
inc
das
pop
push
dec
inc
call
enter
or
pop
mov
add
sbb
sub
push
push
push
nop
mov
inc
sbb
call
(bad)
mov
mov
adc
out
push
dec
fadd
mov
icebp
cmp
js
add
add
aaa
mov
pop
add
rol
call
mov
pop
pop
and
pushf
or
or
rol
lock
xchg
sbb
jbe
push
push
xchg
aas
sub
add
jns
or
cli
add
ja
pop
call
sbb
add
lods
adc
add
lock
and
add
push
arpl
inc
popf
xor
movs
push
inc
les
add
add
and
add
test
imul
mov
daa
cmp
ret
retf
dec
mov
add
add
push
rcr
rcl
push
add
add
add
inc
data16
or
call
test
or
mov
cmp
test
repnz
shl
call
inc
jae
add
sldt
adc
fadd
push
jmp
std
ret
fiadd
add
add
psubw
bound
jecxz
pusha
adc
mov
sub
add
pop
dec
push
fnsave
aas
and
xor
pop
sbb
loop
pop
sar
add
fimul
sbb
outs
lahf
or
mov
add
sahf
add
add
les
loope
xchg
fild
add
rol
adc
and
add
call
or
repnz
add
push
fld
add
push
xchg
pop
icebp
test
je
in
xor
xchg
cmp
add
inc
call
pop
loopne
jo
add
call
(bad)
pushf
dec
add
and
sub
cmp
ja
add
add
sub
add
add
inc
inc
imul
push
push
adc
or
aam
add
imul
mov
pusha
push
loopne
dec
cmp
enter
add
add
mov
ret
add
aad
pop
add
add
add
add
cmp
shr
loopne
test
cmp
mov
pop
jne
cmp
lldt
cmp
inc
jmp
and
add
(bad)
and
mov
call
xchg
sub
sbb
jmp
and
or
shl
test
rol
cdq
add
mov
add
or
mov
cmp
sub
popa
call
push
lahf
jge
push
loop
add
xchg
add
(bad)
or
fist
mov
add
out
and
add
adc
xchg
fst
add
add
dec
xor
sub
(bad)
(bad)
and
or
adc
add
lods
jecxz
sar
rol
add
or
jno
dec
rol
dec
mov
mov
shl
add
rol
call
cmp
or
rol
sub
jp
or
adc
outs
repnz
je
shl
or
or
jmp
dec
sbb
ret
fcom
rol
es
xchg
add
add
or
cmc
std
push
or
sub
and
add
xor
add
add
mov
cdq
jne
loopne
lock
mul
add
ret
das
pop
mov
inc
xor
mov
add
xlat
xchg
mov
fs
xor
hlt
push
sub
sbb
popa
cmp
call
adc
nop
add
add
and
jle
mov
mov
add
pop
push
add
pop
inc
mov
jmp
data16
ret
call
mov
and
jnp
jns
add
sbb
adc
inc
adc
and
cmc
xchg
mov
push
mov
adc
inc
add
add
shr
inc
add
xchg
(bad)
(bad)
mov
add
push
push
mov
fidiv
adc
test
add
xchg
inc
push
add
popa
call
add
add
pmaxub
ret
dec
test
(bad)
push
pop
mov
pop
add
mov
inc
dec
mov
fadd
mov
mov
stos
loope
lea
std
sbb
retf
sbb
cmp
(bad)
fcmovb
aas
add
add
or
mov
clts
call
add
xor
out
add
inc
add
add
push
add
sub
add
xor
xor
xchg
adc
mov
mov
pop
das
test
inc
ret
add
(bad)
xor
mov
push
(bad)
cmp
out
call
push
adc
xchg
add
(bad)
shl
mov
and
add
daa
add
inc
lock
in
add
enter
imul
dec
push
stc
add
add
ins
fcom
mov
jo
push
pusha
call
enter
aad
lock
add
inc
mov
cmp
lods
add
add
push
nop
push
repnz
cmps
add
mov
arpl
movs
gs
sbb
xor
add
add
and
xchg
cs
(bad)
sbb
dec
dec
inc
add
adc
pop
mov
dec
inc
cmps
mov
popa
push
inc
add
push
call
cwde
loopne
or
mov
loopne
xchg
ins
pop
add
(bad)
add
ds
popa
cmp
daa
or
push
and
and
and
or
or
cld
mov
bound
inc
cmp
add
push
lock
add
adc
adc
jle
xor
pop
call
add
or
stc
das
push
mov
mov
sub
sbb
push
push
add
(bad)
fst
add
jmp
or
call
lods
mov
add
rcr
add
jmp
sub
mov
aam
inc
mov
enter
push
mov
and
mov
xor
mov
add
ja
rol
push
push
mov
mov
je
sub
or
(bad)
cmp
cmp
push
ret
jb
fsub
sbb
sub
popf
mov
call
outs
rol
mov
bound
sar
mov
mov
std
popf
cmp
jne
pop
push
inc
or
adc
or
xor
push
inc
inc
xor
mov
inc
push
fdiv
sbb
dec
sbb
fnstcw
xor
mov
pop
call
in
push
loopne
or
inc
add
add
mov
pop
cmps
and
push
ja
call
push
and
and
xor
jo
retf
sub
sbb
jo
xor
add
sbb
cwde
push
adc
push
mov
add
ret
and
dec
call
test
fnsave
sub
dec
ret
mov
and
xlat
add
in
lds
add
loopne
mov
add
dec
adc
sub
jne
pop
inc
pusha
add
cmp
bound
cmp
pop
add
add
inc
movs
add
lea
adc
push
add
rcl
push
les
and
pusha
jge
icebp
cmc
sub
sub
mov
(bad)
and
add
call
sub
add
adc
sbb
push
and
(bad)
push
mov
push
jge
add
loopne
loope
push
shr
add
and
ror
dec
adc
add
add
add
call
test
add
pop
inc
rol
inc
or
cmp
mov
dec
pusha
adc
add
rcl
mov
pop
adc
inc
inc
add
call
and
adc
jo
inc
rcr
add
aas
adc
loope
call
movs
adc
sub
and
pushf
and
cmp
lock
jo
fiadd
retf
adc
or
inc
dec
or
lock
add
push
dec
sbb
adc
call
fucomi
mov
mov
repnz
add
fadd
cmc
push
dec
jno
sbb
ror
sub
and
call
xor
and
pop
les
add
cmp
push
(bad)
cs
mov
call
shl
in
loopne
adc
push
pusha
std
add
inc
loopne
add
in
dec
push
dec
add
ret
add
and
sbb
cmp
icebp
and
sar
(bad)
loopne
sbb
(bad)
dec
inc
out
add
xlat
inc
push
adc
and
xchg
push
xor
and
or
clc
bound
add
scas
add
mov
push
mov
cmp
dec
jns
hlt
mov
push
push
fisub
or
inc
sar
add
and
push
push
push
clc
mov
jl
pushf
jecxz
jp
dec
inc
aam
rol
push
in
pusha
add
add
push
mov
mov
ss
mov
cwde
ins
and
mov
adc
push
sbb
pop
movs
das
mov
mov
inc
mov
adc
push
add
mov
call
cmp
or
syscall
mov
pop
out
or
test
add
xor
(bad)
cmp
paddd
dec
bound
sbb
add
xchg
pop
add
mov
mov
sbb
add
push
xchg
sbb
je
scas
ror
push
add
loopne
movs
adc
and
adc
and
inc
adc
pusha
daa
push
mov
loopne
mov
popa
add
add
mov
clc
and
call
out
push
push
inc
inc
fadd
and
mov
inc
mov
push
test
and
add
(bad)
call
scas
mov
dec
xor
lahf
rol
add
test
add
je
and
sbb
xor
aam
scas
mov
pop
inc
sub
call
test
mov
scas
mov
add
ror
add
push
test
lea
test
gs
add
add
sub
sub
add
in
add
loopne
mov
loopne
add
jmp
mov
adc
dec
call
push
jp
call
add
inc
ss
sub
or
ror
lds
enter
mov
je
add
inc
dec
cli
cli
mov
and
or
sahf
jmp
inc
sub
call
add
arpl
xchg
dec
inc
push
jnp
add
add
sub
sbb
inc
ins
pop
push
mov
mov
repnz
and
lds
add
add
shr
loop
dec
call
mov
pop
(bad)
adc
mov
adc
xchg
and
pop
dec
jge
shl
cmp
xor
cmp
inc
jne
pop
xor
add
and
in
fld
mov
inc
call
call
add
mov
ret
add
ins
add
jge
jmp
and
add
jb
sub
mov
pop
cmp
clc
push
add
pusha
cmovne
fwait
loopne
dec
mov
call
pop
xor
mov
inc
repz
pusha
sub
sbb
out
push
add
xchg
fmul
sbb
add
push
adc
push
bound
loopne
call
sbb
add
jb
cmp
sub
add
pop
inc
mov
enter
dec
xlat
or
inc
and
inc
xor
add
mov
je
add
enter
add
push
dec
add
add
and
add
jge
jmp
sub
mov
inc
inc
add
mov
sub
add
mov
pop
or
mov
movs
xchg
(bad)
push
push
les
add
and
nop
or
pop
push
add
add
sub
bound
add
pop
lds
xchg
repz
push
pop
sub
inc
and
pop
(bad)
in
sub
loope
cmp
shl
(bad)
cld
mov
or
add
loopne
adc
cmp
shr
xor
push
add
movs
or
adc
jl
push
or
daa
loope
push
inc
and
adc
or
inc
loope
mov
inc
push
add
add
add
fisub
ror
lahf
add
sub
adc
mov
push
(bad)
adc
cmp
push
cmp
mov
out
inc
and
cmps
call
jne
jb
lock
mov
jmp
add
jmp
cmp
sub
cmp
add
call
push
enter
jbe
lock
(bad)
in
movs
mov
push
mov
inc
test
test
sub
push
add
add
mov
inc
mov
add
loope
pop
popa
pusha
xor
xchg
cmp
mov
jno
and
pop
data16
sub
mov
add
jne
mov
call
push
cmp
test
inc
push
push
rcr
add
call
inc
fist
call
mov
sub
mov
add
push
inc
or
sub
popa
enter
gs
push
mov
sar
xchg
rcr
mov
and
mov
test
or
or
stos
dec
add
mov
mov
push
mov
lods
and
add
pop
popa
or
out
pop
inc
dec
repnz
mov
(bad)
mov
nop
cmp
mov
dec
push
adc
test
add
aaa
pop
pop
add
shr
add
pop
or
popf
push
add
rol
sub
push
jmp
add
or
cmp
add
mov
add
add
add
mov
dec
dec
ret
pop
fadd
jecxz
add
push
outs
mov
and
jne
mov
xor
mov
lock
adc
push
in
xor
xchg
mov
push
dec
femms
mov
(bad)
sub
shr
sub
mov
daa
add
jnp
cmp
dec
mov
xor
xor
lock
int3
add
sbb
into
add
dec
add
js
shl
push
loopne
add
call
and
xor
add
xchg
call
jmp
add
sbb
jno
xor
test
cwde
pop
bound
push
inc
stos
jp
movs
pusha
add
lock
rol
sbb
ret
call
int
adc
shr
push
mov
popa
test
(bad)
sub
pop
sbb
pop
lea
add
push
and
jle
rol
(bad)
pop
mov
pop
pop
add
or
outs
shl
jo
mov
loopne
shl
call
and
dec
enter
mov
dec
lea
pop
fstp
inc
add
push
inc
sub
fiadd
add
inc
push
clc
add
adc
mov
push
ret
add
repz
pop
rcl
test
mul
dec
jo
add
or
shr
xor
push
dec
call
loope
mov
add
or
rcl
pop
add
sub
push
inc
fisub
dec
add
enter
sahf
sub
adc
inc
sar
dec
div
jmp
inc
cmp
shl
lock
inc
sub
push
pusha
push
loop
inc
xchg
adc
xchg
push
inc
inc
popf
ja
mov
inc
repnz
mov
fld
pusha
int3
inc
cli
ja
add
lahf
mov
inc
icebp
mov
pop
add
je
test
call
add
add
and
add
add
or
or
or
add
mov
mov
call
mov
test
push
mov
popa
outs
inc
push
add
sub
xchg
add
and
inc
push
adc
add
add
and
pusha
xor
adc
push
loopne
mov
mov
in
mov
test
add
add
cmps
call
mov
call
jle
and
jmp
inc
push
push
call
add
ucomiss
arpl
sub
outs
jns
add
stos
imul
push
jnp
inc
add
add
mov
nop
sahf
mov
nop
rol
je
loopne
call
pusha
fucomi
(bad)
push
dec
inc
add
sub
add
cmc
jne
adc
add
push
and
cmp
inc
push
and
jge
dec
add
jae
cmp
add
add
and
jp
xor
sbb
enter
sbb
add
pop
push
cdq
cmps
mov
xchg
mov
add
add
cmp
imul
or
xor
pop
sbb
into
fwait
inc
adc
fld
and
pop
mov
pop
inc
xor
shl
xor
shl
leave
pop
add
lock
xor
and
call
arpl
mov
cmp
or
mov
fild
add
add
call
js
test
idiv
mov
repnz
or
mov
ror
add
dec
sub
add
mov
mov
add
add
pusha
mov
mov
add
xchg
lods
sub
out
push
push
loop
add
pop
add
push
or
push
mov
shl
adc
inc
fild
mov
pusha
add
mov
push
movs
or
lea
cmps
dec
mov
cmp
dec
jne
aam
adc
jmp
les
jmp
and
xor
xor
adc
call
cmp
add
pop
outs
and
mov
add
sbb
ret
js
ret
call
push
push
add
and
inc
or
stos
mov
xchg
inc
jne
jb
inc
and
or
jge
add
push
test
inc
lods
xor
js
dec
xor
add
add
int3
adc
jmp
je
call
shl
or
ret
adc
mov
outs
add
lea
mov
dec
sbb
add
call
fadd
dec
adc
rol
mov
add
inc
rcl
add
rol
add
(bad)
call
adc
mov
add
or
mov
add
adc
sub
push
add
add
mov
inc
jmp
add
test
dec
add
(bad)
ltr
add
dec
jns
das
enter
repnz
add
add
add
dec
cmps
test
add
dec
fcmovu
sub
movs
adc
call
mov
add
mov
mov
lock
jge
(bad)
adc
or
and
or
ficomp
cmp
add
add
rcr
call
xchg
sub
cs
ja
stos
addr16
and
mov
push
and
push
mov
sub
bt
adc
inc
add
and
jbe
xor
ins
ret
xchg
and
movs
and
iret
pusha
outs
push
push
cmp
sub
inc
and
pop
(bad)
inc
push
inc
xlat
inc
add
test
inc
add
cmp
popf
add
imul
in
push
and
and
add
or
int
pop
push
cli
and
in
in
mov
test
add
adc
push
fnstenv
add
mov
inc
add
lock
add
jo
jmp
clc
xor
inc
loopne
arpl
add
std
jne
cwde
popa
push
push
mov
and
add
dec
add
mov
inc
jp
adc
add
adc
fldlg2
add
cdq
mov
xchg
add
sbb
pop
pop
add
mov
push
inc
call
cmp
aad
popf
xor
repnz
(bad)
mov
je
call
pop
in
call
and
(bad)
dec
lock
push
repz
jecxz
sbb
sub
rcl
sbb
call
add
mov
xchg
loope
add
sub
in
movs
call
xorpd
jb
retf
sbb
add
mov
pop
add
rcl
add
xor
cmp
add
call
add
rcr
add
jne
div
add
test
or
bnd
ss
jne
adc
ror
ja
add
sub
call
rcr
push
loopne
add
jo
ret
pop
loop
lds
add
pop
pop
stc
add
adc
gs
mov
add
add
inc
xor
retf
fadd
mov
sbb
(bad)
pushf
ins
call
mov
popa
call
adc
add
mov
dec
shl
ja
lea
cmpxchg
es
in
out
xchg
sub
in
rcl
pop
sub
rol
add
add
mov
call
(bad)
hlt
bound
mov
add
dec
adc
cld
mov
pop
in
xchg
push
xor
push
mov
mov
adc
add
push
rol
xor
push
fiadd
pusha
mov
sub
add
imul
inc
add
pusha
imul
dec
js
add
or
or
call
jne
test
adc
pusha
call
add
repnz
add
sbb
jne
add
cmp
add
pop
mov
sbb
sub
cdq
nop
pop
cmp
mov
push
inc
jns
add
or
loop
loope
loopne
pusha
clc
int
xor
add
pop
adc
je
mov
mov
xor
(bad)
std
imul
add
push
xchg
xchg
data16
add
pusha
add
out
clc
mov
rcr
jnp
mov
xor
rcr
add
push
xor
or
xchg
sbb
push
mov
mov
inc
bound
mov
call
jne
dec
mov
push
add
add
add
inc
xor
daa
push
popa
push
sbb
rcl
cwde
mov
push
mov
(bad)
dec
in
(bad)
jge
add
cmp
pusha
jne
rol
jne
inc
pusha
mov
add
add
inc
dec
sbb
push
icebp
dec
pop
test
mov
add
add
add
ror
xor
dec
add
mov
pop
or
fsubr
and
cmp
add
pop
jle
daa
(bad)
or
add
and
pop
and
call
push
mov
popf
mov
sbb
xlat
cmps
stc
and
shl
shl
(bad)
xor
pop
push
nop
and
jns
in
add
nop
inc
cmp
dec
mov
or
mov
loopne
push
loopne
add
add
add
cmp
mov
add
push
shr
pop
(bad)
mov
push
add
(bad)
push
mov
dec
jp
rcl
bound
adc
or
and
push
sbb
jg
sub
mov
dec
and
js
mov
sub
xor
(bad)
test
xchg
leave
add
dec
xchg
mov
xchg
dec
push
ret
push
mov
call
nop
or
add
add
mov
push
and
inc
mov
sub
inc
add
mov
add
nop
mov
inc
mov
lahf
jne
rcl
mov
mov
add
and
sub
xor
mov
or
dec
push
add
movs
inc
(bad)
pop
add
aas
sbb
inc
mov
xchg
nop
and
add
add
lods
add
fs
call
xor
cwde
dec
ficom
fs
jle
inc
pusha
call
rol
loope
adc
(bad)
mov
adc
push
cmp
dec
call
jmp
and
inc
shl
push
xor
pop
add
dec
call
add
add
xchg
inc
or
ins
loopne
xor
lods
dec
mov
push
add
add
(bad)
push
leave
fucomip
or
mov
nop
dec
adc
loopne
lea
and
sub
jl
ins
add
add
dec
nop
mov
adc
mov
clc
push
xchg
jmp
adc
loopne
jne
(bad)
ror
push
cwde
add
fsubr
std
mov
cmp
loop
das
cmp
adc
outs
ror
inc
push
lock
lea
(bad)
and
call
and
test
push
add
loopne
or
add
jmp
cmp
add
mov
add
dec
add
and
push
(bad)
pop
lahf
nop
add
sub
or
(bad)
call
cwde
nop
push
inc
add
push
xor
mov
cmp
add
inc
add
lods
jg
add
ret
loope
inc
add
xchg
add
mov
and
jge
xchg
add
call
add
xor
inc
xchg
call
xor
je
call
push
adc
sbb
aam
inc
inc
mov
(bad)
push
in
xor
xchg
ror
and
jbe
inc
call
inc
aas
(bad)
and
jbe
add
jae
or
sbb
sbb
inc
adc
add
xchg
in
call
inc
inc
clc
movs
nop
movs
cmp
push
adc
and
cmp
call
mov
iret
sub
mov
xchg
mov
and
add
sub
cmpxchg
add
mov
retf
callw
out
popa
add
loopne
pop
les
and
and
xor
add
shl
cmp
mov
rol
sub
xor
jmp
dec
fs
pop
push
test
adc
pop
add
cmp
pop
mov
add
mov
jge
ret
sbb
stos
cmovb
cmp
sbb
outs
push
cld
(bad)
aam
cld
mov
shr
adc
push
(bad)
cmp
add
add
pop
mov
add
add
enter
mov
ror
mov
add
add
cmp
add
loope
xor
jne
push
push
cmp
add
adc
xor
add
dec
gs
jmp
std
add
jne
ins
add
push
adc
call
test
test
ja
push
push
inc
nop
add
add
fadd
arpl
and
ror
or
add
xchg
sahf
cli
add
test
cs
mov
or
push
push
and
pushaw
adc
rol
call
and
inc
inc
xchg
call
inc
rol
push
mov
add
fdiv
add
(bad)
into
mov
call
dec
jne
invd
inc
pop
ss
add
add
aam
inc
mov
add
add
mov
sbb
adc
inc
mov
mov
add
mov
mov
inc
or
add
jno
add
jo
dec
jecxz
arpl
into
push
xor
inc
mov
daa
call
loop
lea
adc
fs
adc
and
lock
les
lea
mov
mov
or
and
and
mov
push
inc
mov
loope
add
(bad)
loopne
push
lea
or
shr
(bad)
call
mov
out
add
lea
add
pop
clc
add
mov
scas
dec
add
call
or
push
cwde
cli
and
cmp
dec
mov
sub
mov
fstp
int3
or
lock
xchg
mov
call
or
inc
pop
add
add
mov
mov
pusha
movs
dec
adc
iret
sar
push
cmp
(bad)
test
add
sub
adc
or
add
jnp
mov
add
cwde
and
jne
(bad)
pop
pop
push
sbb
xchg
adc
je
add
cpuid
(bad)
fadd
enter
es
jge
add
xor
dec
xor
loop
sti
adc
push
dec
and
add
test
loope
push
mov
dec
repnz
add
inc
and
mov
cmp
ret
call
sti
cmp
sub
add
sbb
inc
lea
mov
inc
sbb
sub
fs
lea
adc
(bad)
call
push
dec
fild
cld
push
mov
xchg
mov
adc
rol
or
xor
push
call
(bad)
mov
rcr
popa
sbb
add
dec
and
add
fadd
add
sbb
cmp
lea
mov
dec
add
cmp
add
mov
push
add
sub
inc
xchg
jmp
add
ret
xchg
sub
shr
rcl
in
dec
dec
push
and
inc
(bad)
push
add
sbb
lock
into
add
mov
fwait
sbb
adc
cmp
adc
retf
mov
loop
mov
sub
test
aad
inc
push
aam
add
cmp
add
and
xor
add
add
jbe
push
lds
inc
cwde
rcl
jecxz
jne
mov
sbb
mov
add
mov
into
or
hlt
lock
xchg
dec
inc
(bad)
shl
xor
sub
add
mov
xchg
add
ins
mov
gs
add
mov
cmc
inc
popa
(bad)
jge
ds
add
or
add
rcl
inc
or
push
inc
rcl
fisttp
in
and
cmp
nop
jmp
pop
xchg
jmp
cld
ret
pmaddwd
fadd
inc
push
sbb
aam
push
add
sub
add
sahf
(bad)
lea
sbb
inc
jg
jne
add
lock
mov
add
aaa
sub
xchg
call
and
test
push
js
add
in
push
ror
add
xor
lea
mov
pop
add
call
mov
sub
push
jnp
and
pusha
add
inc
push
jnp
mov
repnz
scas
test
sub
mov
add
pop
xor
xor
sub
sub
add
push
add
mov
add
add
aas
lods
lock
sbb
push
jmp
xchg
push
mov
movs
lods
mov
push
pop
call
push
mov
call
jne
add
inc
and
sbb
cld
or
pop
push
test
push
mov
push
or
dec
add
and
mov
push
cwde
pusha
mov
add
push
inc
add
jmp
out
add
cmp
ret
cdq
fcomp
and
and
jmp
xchg
adc
(bad)
push
cmp
push
mov
je
adc
add
dec
mov
test
rol
popa
mov
mov
xchg
and
adc
pop
in
aam
ss
xor
cmps
pop
call
sub
and
add
push
test
loopne
int
je
pop
dec
mov
push
call
and
or
xor
inc
das
rcr
add
inc
jmp
mov
and
test
push
push
push
push
cmp
push
push
push
xor
adc
shl
add
sbb
jmp
ror
fcom
push
push
add
dec
push
rol
lock
jnp
ja
mov
enter
es
push
jo
jecxz
jmp
pop
rcr
mov
ret
mov
sbb
push
and
rcl
loopne
add
pop
outs
pop
adc
popa
add
or
jle
in
test
cmp
add
mov
add
xchg
adc
add
and
add
movs
add
jle
and
adc
adc
add
cmovle
mov
mov
push
in
call
bound
add
xor
shr
mov
add
in
int3
add
and
ror
jp
add
inc
add
add
cmp
or
rcl
loopne
adc
nop
adc
out
xchg
fistp
sub
push
sub
jno
xor
add
and
int
add
add
or
push
mov
add
add
pop
mov
push
push
add
addr16
add
jmp
add
push
sbb
add
sub
add
push
dec
unpcklps
inc
cld
jecxz
xor
sub
add
loop
imul
in
inc
call
pusha
in
cmp
stc
push
xchg
bound
call
cwde
movs
pusha
test
shr
dec
ret
mov
lea
(bad)
push
cmp
add
test
xor
mov
cmp
fisubr
sub
xchg
shr
push
call
mov
inc
push
adc
push
pop
mov
cmp
pop
dec
jge
add
push
inc
add
mov
push
dec
retf
or
les
inc
add
and
ret
outs
xchg
add
add
push
mov
jo
add
call
add
mov
mov
xchg
or
add
data16
sbb
push
add
or
pop
fmul
fdiv
call
or
and
add
inc
pusha
call
adc
dec
add
inc
inc
fstp
push
prefetch
pop
test
add
outs
ins
add
and
xor
push
jne
mov
xor
or
add
sbb
rol
call
adc
sbb
popf
cwde
add
jecxz
add
inc
rcl
xchg
inc
add
push
and
push
inc
or
or
add
or
add
ds
inc
std
enter
ds
inc
adc
pusha
add
dec
jg
mov
or
popf
std
push
inc
(bad)
adc
push
cmovbe
in
dec
call
pop
mov
mov
or
dec
sub
mov
pusha
add
dec
ds
shl
add
jo
add
pop
cmp
bound
or
stc
add
pushf
push
add
pop
or
adc
js
aaa
sahf
cmp
adc
aam
minps
mov
imul
adc
adc
ret
mov
push
add
add
test
sbb
sbb
loope
loopne
push
dec
xchg
fs
add
iret
and
std
and
sub
sbb
dec
test
pop
and
(bad)
mov
dec
xor
pop
add
add
(bad)
loopne
add
add
add
xchg
pop
mov
pusha
push
or
jo
push
das
mov
ror
sub
push
inc
pusha
mov
adc
and
call
mov
repz
outs
or
pop
adc
jmp
ja
add
fist
inc
movs
je
call
je
push
add
stos
ret
inc
idiv
inc
jo
in
add
mov
add
mov
test
inc
inc
or
dec
cs
sub
mov
stc
clc
(bad)
xor
pop
add
pop
loopne
mov
pop
add
dec
push
lods
test
jae
lahf
add
call
lock
call
add
jbe
and
bound
push
call
mov
jo
add
pop
push
push
add
dec
sbb
stc
add
add
rol
shl
mov
mov
add
and
add
push
add
mov
add
jg
stos
(bad)
repz
ds
(bad)
xor
mov
add
mov
inc
movs
add
add
(bad)
loopne
dec
add
dec
mov
jne
push
add
jne
movs
loopne
outs
add
adc
add
addr16
adc
in
leave
popa
add
pop
jg
shl
in
push
call
inc
loopne
lods
xchg
push
sbb
push
pop
mov
push
sub
loopne
add
add
or
adc
jb
push
inc
ret
add
add
push
inc
dec
dec
mov
(bad)
adc
xchg
ror
jg
add
jmp
inc
or
add
cmps
outs
lods
add
or
call
call
add
xor
dec
call
add
add
inc
pop
dec
push
push
sbb
arpl
mov
cwde
inc
add
or
sbb
dec
add
push
iret
push
jo
push
jecxz
and
xchg
pop
rol
mov
sub
inc
mov
jne
rcl
jg
mov
push
test
pop
sub
xchg
nop
push
add
les
add
sub
in
jge
sub
call
xchg
jge
sbb
xlat
push
sub
lea
gs
xchg
xor
add
aaa
adc
mov
xor
sbb
add
or
mov
ret
mov
and
or
add
repz
call
mov
repz
jo
mov
mov
dec
xchg
inc
add
mov
push
sub
jecxz
test
add
inc
push
and
mov
add
or
and
or
jno
ins
and
test
ret
adc
mov
mov
add
call
adc
cmp
add
jmp
and
lods
push
in
inc
sbb
or
and
das
test
cmp
cld
push
add
cld
push
das
add
inc
bound
pop
pop
jmp
and
push
or
call
into
xor
dec
jb
add
das
call
test
add
or
xchg
in
jg
push
jb
shl
push
mov
add
xchg
cmp
sar
shl
push
out
and
jne
hlt
add
cmp
and
add
fld
inc
pop
call
pop
cmp
adc
add
popa
mov
add
adc
popa
jmp
fucompp
push
jmp
push
add
add
pop
or
pop
add
and
les
mov
vmptrld
arpl
inc
pop
xor
enter
adc
bound
mov
inc
push
xchg
sub
dec
mov
inc
adc
add
scas
mov
scas
and
in
push
into
out
sbb
add
add
and
and
or
int3
int3
xor
fsubr
(bad)
cwde
sahf
mov
nop
mov
add
xor
sbb
pop
sbb
je
sti
adc
push
mov
sub
inc
and
xor
jge
jl
inc
loop
inc
add
dec
lds
add
push
add
mov
add
jge
rcr
mov
add
daa
xor
add
mov
dec
loopne
dec
into
call
adc
test
dec
mov
add
movs
add
and
jnp
mov
jmp
cmps
mov
mov
pusha
nop
and
test
sbb
sbb
add
test
sbb
add
loope
dec
xor
push
add
cmp
leave
sbb
mov
cmps
add
call
xor
rol
sub
retf
add
mov
ret
or
add
inc
in
in
call
push
add
loope
or
dec
add
cmp
jg
or
scas
aas
das
(bad)
mov
cs
inc
not
or
daa
or
in
adc
mov
add
add
or
add
add
loop
mov
push
mov
mov
movs
mov
lock
pop
fnstcw
cmp
add
cmp
add
inc
adc
add
rcl
repnz
or
call
dec
or
inc
pop
inc
jns
ret
add
dec
add
data16
mov
fist
jle
ins
xor
or
add
mov
and
pushf
add
xchg
loopne
cs
and
dec
xchg
cmp
sbb
add
xor
jb
mov
cmp
mov
mov
xlat
push
add
add
add
leave
inc
and
jmp
aaa
popf
add
lock
cmp
cmp
xchg
inc
or
enter
popf
jmp
je
add
inc
adc
lahf
mov
loopne
jo
adc
and
dec
xor
add
mov
icebp
mov
loopne
adc
pop
test
cli
rol
mov
and
cmp
arpl
push
(bad)
dec
adc
add
or
dec
enter
add
outs
mov
inc
pop
xchg
xchg
inc
adc
xchg
hlt
mov
jp
xor
add
mov
add
push
cmp
add
jb
or
jne
mov
dec
mov
in
aaa
add
xchg
inc
imul
imul
(bad)
mov
push
add
adc
inc
jmp
test
jno
shl
loopne
adc
and
cs
scas
sub
add
mov
mov
pop
rol
add
call
add
pop
adc
push
(bad)
add
add
dec
leave
add
add
add
sub
add
dec
push
(bad)
out
lods
lock
mov
ror
popa
fbld
sub
push
cmp
mov
push
adc
jae
js
imul
into
jge
sbb
cwde
inc
inc
jmp
gs
mov
mov
xor
or
push
jo
or
rcl
mov
pop
popf
pop
cmps
(bad)
add
pop
test
or
and
jb
retf
xchg
and
shl
add
mov
clc
emms
inc
or
and
test
rol
mov
jmp
(bad)
call
test
ret
bound
mov
call
popf
rol
push
add
add
adc
xlat
clc
test
or
adc
adc
and
add
jmp
jge
cmovne
mov
mov
cs
aam
(bad)
mov
add
loopne
lar
sbb
add
in
or
mov
mov
call
test
cmps
inc
scas
mov
dec
add
adc
add
cmp
adc
or
xor
loopne
adc
push
adc
in
aam
mov
push
popa
push
mov
pop
add
inc
nop
mov
ja
add
dec
push
stos
inc
adc
mov
mov
add
add
xor
stc
mov
and
add
dec
add
shr
jo
push
aam
call
inc
xchg
imul
or
or
sti
rcr
out
push
and
mov
xor
sbb
cmp
push
test
pop
inc
add
mov
es
dec
jg
lock
ret
loope
dec
aas
shl
add
and
je
call
iretw
push
add
rol
add
shl
loopne
sti
dec
cmp
mov
add
add
sbb
mov
or
cmp
pop
je
xchg
sbb
inc
jns
adc
mov
mov
mov
inc
stc
cmp
add
movs
push
mov
adc
or
call
test
mov
add
xchg
adc
(bad)
push
xor
stos
sub
push
ror
imul
call
jge
adc
add
inc
(bad)
gs
adc
inc
or
call
je
fild
add
add
popa
inc
add
aad
inc
add
mov
mov
mov
cmp
bound
push
test
ret
or
push
ror
sub
sbb
add
cmp
adc
aam
mov
add
mov
push
inc
add
nop
mov
scas
movs
and
add
call
call
ficom
mov
dec
mov
lahf
fcom
call
(bad)
push
cmp
push
add
and
jmp
ins
push
les
lock
sbb
or
inc
movs
adc
rol
inc
sbb
repz
or
inc
xchg
ret
and
shr
test
imul
add
add
aaa
inc
gs
mov
sub
call
je
hlt
(bad)
ret
fbld
jge
inc
add
dec
add
inc
mov
sbb
pop
rcr
add
jne
mov
sti
dec
pop
cwde
inc
sub
sbb
add
add
mov
cmp
add
xchg
jle
adc
dec
(bad)
or
add
mov
test
mov
lods
or
aad
pusha
cld
add
sub
adc
dec
leave
mov
call
cmp
mov
out
cmp
dec
or
call
call
test
mov
enter
sub
sbb
cmp
ret
add
sub
test
popa
push
punpckhbw
scas
call
add
push
mov
add
or
add
ficom
lods
and
in
rol
test
(bad)
and
lea
sub
inc
add
add
inc
bound
iret
xchg
add
push
(bad)
dec
pop
outs
mov
push
mov
push
add
xor
sub
and
jl
inc
inc
push
movnti
add
mov
cmp
adc
inc
inc
mov
add
add
call
push
add
xor
add
inc
stc
(bad)
pop
inc
inc
cmp
add
outs
loopne
add
mov
pop
xchg
sbb
mov
sbb
call
sbb
inc
mov
push
add
rcr
neg
mov
push
cli
mov
add
push
add
jne
add
data16
sub
or
mov
jo
push
and
popa
push
pshufw
call
add
adc
add
nop
repz
in
sbb
sahf
rol
and
cs
dec
int
add
mov
adc
sub
daa
fiadd
pusha
loopne
add
add
add
mov
call
call
xchg
sbb
test
outs
(bad)
pop
xchg
add
add
inc
lods
scas
mov
add
mov
or
fs
add
test
push
sub
mov
mov
sbb
dec
rcl
dec
adc
pop
add
fisub
pop
lods
loopne
pop
fild
pop
test
add
lea
leave
push
or
jo
imul
mov
add
jge
push
call
inc
or
or
and
sub
or
push
push
cmp
push
and
add
call
add
mov
add
push
inc
shr
jmp
push
in
mov
add
add
jne
je
retf
mov
and
adc
add
enter
add
fs
jl
pop
lahf
loopne
pushf
xchg
(bad)
push
add
adc
daa
mov
and
adc
shr
push
xchg
adc
push
add
shl
xor
cwde
jl
dec
pop
mov
adc
(bad)
and
leave
call
sub
in
xchg
or
movs
pop
and
jmp
and
add
inc
ror
test
fwait
ret
inc
or
sahf
lldt
add
pop
pop
stos
and
add
add
and
and
js
sbb
add
add
rcr
adc
push
add
xor
ror
add
lods
mov
mov
adc
cs
jae
or
test
rcl
adc
xchg
add
shl
test
popa
rol
sub
dec
std
loope
push
pop
mov
xrelease
inc
test
call
add
and
dec
add
jmp
inc
add
cmp
sahf
mov
rcl
xor
enter
rol
push
add
cmp
add
and
inc
fs
sbb
add
call
mov
jge
pop
sub
leave
add
ja
das
add
nop
(bad)
mov
inc
pop
mov
push
fnstsw
into
call
jmp
jge
sub
loop
or
lock
add
add
ret
in
mov
mov
inc
push
jmp
jle
push
jne
add
shl
adc
mov
mov
add
and
jbe
inc
push
pusha
add
(bad)
std
jge
mov
mov
adc
pop
imul
adc
arpl
inc
daa
pop
push
add
pusha
call
push
inc
pushf
push
inc
lea
(bad)
outs
add
add
add
into
sbb
add
add
cmovb
push
mov
mov
mov
ins
add
test
push
sub
push
ins
push
shl
inc
adc
fild
adc
(bad)
(bad)
inc
ror
inc
enter
mov
arpl
pop
sbb
add
push
call
sbb
add
jmp
cmp
mov
inc
loope
call
(bad)
mov
adc
add
dec
push
sbb
call
lock
xchg
lock
adc
add
and
std
mov
add
cmps
and
push
pusha
cs
add
add
inc
dec
inc
add
xchg
sbb
adc
js
push
adc
lock
push
dec
add
add
push
push
lahf
add
dec
and
and
dec
inc
fild
mov
imul
sub
inc
fisttp
inc
add
movs
ror
hlt
icebp
jge
(bad)
jmp
test
js
pop
test
or
shl
or
add
inc
loopne
jmp
push
or
push
dec
inc
add
add
add
mov
push
push
add
rcl
add
inc
ret
mov
push
pop
add
js
mov
test
add
call
add
and
es
mov
add
add
into
in
inc
or
jge
movs
mov
add
pop
cld
cmp
add
pop
pop
or
adc
repnz
add
call
adc
repz
(bad)
pop
bndstx
add
mov
pop
hlt
dec
add
mov
or
xchg
mov
xchg
push
add
fild
hlt
fisttp
test
sbb
popa
rcr
jnp
inc
je
sub
xchg
hlt
add
add
and
jmp
enter
nop
pop
pop
inc
lods
and
xchg
inc
sub
shl
push
dec
(bad)
and
mov
call
add
push
dec
xchg
gs
clc
das
fs
movs
add
(bad)
xor
push
rol
fucomp
mov
and
mov
mov
sbb
sbb
add
mov
pop
inc
sbb
sub
lock
or
or
(bad)
and
pop
add
mov
lock
jno
call
outs
add
je
mov
lods
pop
add
add
shl
dec
add
and
sbb
fisub
arpl
add
call
(bad)
pop
add
pusha
add
jmp
add
and
(bad)
call
clc
jae
push
inc
mov
mov
add
xor
movaps
add
inc
push
jae
sbb
adc
add
fdiv
icebp
jo
mov
add
mov
call
adc
adc
(bad)
pop
popa
rcr
inc
mov
stos
mov
and
xor
add
mov
and
add
mov
push
pop
adc
ins
pop
das
daa
mov
sub
add
rol
ret
adc
rcr
and
jne
inc
test
push
and
es
push
mov
push
add
add
inc
movs
ja
sbb
bound
and
call
fs
dec
sub
or
jmp
sub
(bad)
call
push
dec
int
add
aad
test
or
jg
rol
pop
jnp
shl
adc
sub
popf
mov
jecxz
mov
mov
push
push
inc
dec
pop
ret
push
and
mov
lock
mov
or
test
dec
adc
ins
push
lea
dec
inc
or
inc
clc
in
jne
lahf
ret
or
mov
repz
mov
mov
xchg
and
xor
div
add
and
add
imul
push
shl
jecxz
push
adc
mov
pusha
add
cwde
add
add
mov
icebp
add
jecxz
pop
add
push
add
xor
test
mov
adc
inc
std
mov
mov
xchg
xor
loopne
pop
(bad)
adc
fcomp
add
dec
add
add
add
jmp
jle
mov
repnz
push
and
or
sub
mov
push
pop
(bad)
call
xor
ret
inc
call
add
xor
shr
(bad)
idiv
or
dec
mov
icebp
add
adc
add
adc
sbb
sar
push
add
nop
jle
ret
rol
imul
sbb
add
call
xchg
cmp
mov
pop
sbb
push
adc
push
mov
pushf
push
jge
or
adc
push
cwde
mov
cmp
and
test
ins
popf
jmp
add
push
xor
add
jbe
xchg
mov
push
clc
rcl
rol
jo
push
jns
cmp
or
add
xor
ss
pop
dec
add
add
add
fisub
mov
inc
cmp
jmp
mov
sub
aas
je
daa
adc
pusha
fucomi
and
std
jne
add
or
pop
mov
push
sub
mov
in
lods
mov
sub
int3
inc
inc
and
jg
call
in
wbinvd
pop
cmp
lahf
and
jl
pop
add
or
adc
add
mov
popa
pushf
xor
test
or
inc
add
add
int3
push
loopne
jne
inc
xchg
mov
add
sar
add
xor
add
add
repnz
jne
or
dec
xor
ins
(bad)
push
pop
fld
jmp
push
lea
(bad)
lahf
int
or
xchg
mov
mov
imul
add
loopne
rol
mov
sub
push
aam
dec
inc
ja
add
mov
sub
adc
in
mov
loopne
add
mov
or
jle
rol
or
les
xor
(bad)
pop
add
mov
(bad)
in
xor
arpl
add
or
cwde
pop
sbb
out
dec
sub
sbb
jmp
dec
jo
add
or
push
add
inc
cmp
push
pop
adc
and
dec
or
jge
mov
adc
xchg
mov
cmp
push
xchg
ins
add
(bad)
fisttp
shl
call
cmp
hlt
xchg
dec
rol
push
imul
rcr
add
push
add
add
shl
int3
and
add
lock
adc
cmovo
call
dec
lea
inc
push
mov
ret
dec
fs
test
daa
cdq
xrelease
call
jo
or
or
add
rcl
mov
inc
test
push
jno
dec
adc
mov
mov
inc
push
adc
add
js
jno
imul
sub
pop
inc
in
arpl
cmp
call
out
or
mov
dec
nop
repz
loopne
cmp
dec
call
shl
and
inc
repz
clc
call
call
mov
dec
pusha
(bad)
push
or
rcr
ror
mov
jecxz
jns
data16
adc
ret
jne
and
inc
mov
sbb
cmovne
mov
popa
jmp
outs
inc
xor
(bad)
mov
ins
arpl
add
pop
fadd
mov
push
aad
and
loop
mov
xchg
lods
call
or
and
popa
sbb
cmp
push
or
cmp
jne
pop
inc
adc
inc
inc
add
xchg
jns
enter
or
mov
add
mov
push
test
push
push
push
repnz
add
jge
sbb
setl
adc
inc
shl
push
push
lock
icebp
add
add
add
push
iret
imul
outs
rol
mov
fadd
and
lock
adc
push
(bad)
mov
and
mov
fmul
add
add
(bad)
retf
call
add
jp
jnp
xchg
xchg
or
test
mov
jno
jecxz
mov
sbb
mov
add
pcmpgtb
sar
sbb
adc
mov
loop
fsub
add
pop
inc
push
cdq
add
je
nop
(bad)
mov
push
push
inc
jb
int3
push
inc
push
or
popa
pop
repz
stos
add
or
adc
add
add
test
dec
add
lldt
add
nop
sbb
call
or
sub
test
jb
ins
cs
call
add
arpl
add
cmps
ja
inc
jmp
mov
aam
add
mov
or
mov
and
mov
loope
jmp
dec
rol
mov
dec
add
fisubr
xchg
dec
adc
mov
cdq
mov
addr16
call
cwde
adc
or
push
ror
mov
movs
push
add
add
jns
cmp
mov
add
xor
nop
add
xor
add
cmp
ror
jmp
test
fcmovne
push
ret
or
add
and
(bad)
js
ror
inc
and
cmp
pop
push
mov
jo
repz
mov
(bad)
and
add
das
mov
loope
push
sbb
stos
push
call
mov
shl
or
sub
call
mov
add
add
rol
pop
xchg
rcr
add
mov
pusha
xor
std
add
mov
adc
add
sub
fwait
push
hlt
add
enter
bswap
mov
add
mov
and
inc
mov
push
cmp
js
pusha
retf
adc
pusha
out
call
test
rol
addr16
inc
clc
xchg
rol
push
in
shr
push
outs
jne
dec
xor
inc
pusha
(bad)
lock
fs
sbb
ret
inc
fadd
add
adc
jmp
and
sbb
add
popa
xor
push
inc
mov
nop
mov
mov
sub
jne
inc
xor
adc
add
jp
leave
add
rcl
push
or
push
arpl
push
sbb
ret
add
inc
stos
not
jmp
data16
mov
shl
dec
add
pop
jmp
out
fadd
xchg
xchg
jne
ret
inc
int3
(bad)
lock
mov
add
aaa
call
adc
adc
xor
add
mov
enter
out
push
mov
jmp
dec
add
xchg
rol
pushw
xlat
pop
and
jmp
call
adc
push
cmp
add
push
add
mov
icebp
add
add
pop
add
push
stc
ss
pop
pop
arpl
int3
inc
add
out
mov
xor
add
mov
data16
leave
int3
cmp
adc
addr16
mov
push
cmc
jbe
add
inc
and
or
add
sub
add
add
(bad)
or
and
add
add
sub
clc
fs
jmp
xchg
fsub
xchg
sub
dec
dec
and
call
inc
add
imul
aaa
les
mov
add
add
cvtpi2ps
rcl
and
popa
movs
jae
push
push
and
and
ret
add
mov
adc
fwait
call
nop
sub
add
ret
add
add
or
dec
inc
outs
call
sbb
mov
adc
mov
lods
add
test
inc
push
into
sub
push
jbe
bound
mov
cmps
pop
lods
inc
pop
icebp
add
sub
lock
push
test
push
ror
dec
loope
adc
cmp
xchg
xchg
xor
sbb
fidiv
test
add
inc
(bad)
into
add
ret
outs
ror
and
adc
fisub
push
add
mov
or
push
mov
pop
add
mov
das
xor
lock
imul
lea
(bad)
ud0
add
repz
imul
aad
add
xchg
adc
push
and
mov
inc
add
or
arpl
and
call
inc
ret
add
add
xor
(bad)
fisubr
pop
rcl
and
sub
das
mov
adc
mov
stos
add
xlat
sub
sahf
add
push
add
push
add
ds
test
dec
add
ret
rol
and
add
add
dec
add
out
pop
add
mov
push
jmp
mov
in
and
lea
repnz
xor
adc
outs
dec
add
lldt
bnd
add
adc
mov
inc
fld
gs
fidiv
mov
or
test
mov
das
push
push
(bad)
push
add
int
mov
dec
int3
add
push
push
pop
mov
or
and
add
pushf
and
sub
and
cmp
sub
in
add
add
dec
and
inc
sahf
les
push
(bad)
push
cmp
add
loopne
and
xchg
push
fwait
inc
mov
pop
and
sub
push
inc
or
addr16
out
ror
and
add
fadd
xor
dec
inc
rol
sub
jmp
ror
pop
add
pop
fwait
shl
pusha
mov
test
or
arpl
xor
push
push
or
push
mov
and
dec
push
xchg
add
push
enter
inc
mov
adc
rol
scas
loop
in
icebp
and
or
push
fs
push
push
test
add
leave
pushf
stos
inc
hlt
add
xor
repnz
inc
sbb
cmp
aas
xor
and
lea
inc
and
and
pop
call
mov
test
nop
rol
add
in
sub
je
push
add
pop
mov
add
push
add
cld
and
cmp
mov
cmp
aas
jne
add
ret
clc
inc
xor
push
rol
adc
add
mov
inc
jmp
push
cmp
mov
mov
inc
inc
sbb
adc
or
jne
and
add
rcr
rol
jmp
retf
inc
add
push
repz
fwait
push
in
loop
aas
add
mov
add
jne
jne
inc
test
pop
push
loopne
nop
add
adc
xor
xor
push
push
scas
jo
add
push
or
ror
inc
rol
cwde
or
(bad)
adc
sbb
xchg
mov
mov
fdivr
out
add
stos
push
cdq
add
push
inc
(bad)
mov
loope
daa
sub
jge
cmp
add
push
push
(bad)
adc
(bad)
xor
rol
mov
jle
push
scas
or
inc
call
push
sbb
call
xor
cmp
add
add
mov
ss
mov
inc
dec
push
fisub
inc
in
or
iret
push
mov
adc
push
jmp
push
add
add
movs
aas
sub
add
dec
movups
pop
push
lods
push
mov
add
add
dec
cbw
jmp
sub
xor
jne
inc
or
inc
jmp
dec
call
add
rol
xor
mov
pop
xchg
mov
ret
addr16
or
add
lea
pop
cmp
push
sar
dec
mov
mov
pop
cmp
loopne
xchg
xor
test
aam
repnz
push
fistp
sub
das
or
dec
dec
jnp
inc
pop
or
mov
inc
inc
pop
lods
add
aad
lock
xor
test
out
push
and
xor
mov
add
add
add
icebp
xchg
jmp
sbb
hlt
rol
add
add
xchg
sahf
repnz
sub
cmc
jne
test
repz
test
std
shl
mov
add
fwait
inc
sub
lea
stc
inc
dec
call
lock
mov
loopne
pop
(bad)
rol
jne
sahf
add
push
or
daa
rcr
inc
xchg
mov
push
xchg
xchg
xchg
add
rcr
add
pop
add
push
sub
push
add
dec
sub
sub
ror
mov
pop
(bad)
enter
add
(bad)
std
jno
sbb
call
rcr
je
fst
dec
cmp
ins
cdq
loop
adc
test
gs
test
add
imul
sub
jle
(bad)
icebp
inc
retf
in
loopne
fs
shr
jne
scas
or
pop
test
add
sbb
cs
mov
mov
add
test
call
shr
jmp
(bad)
shl
nop
add
or
loope
(bad)
movs
add
jg
mov
pop
ss
and
(bad)
pushf
add
mov
add
rol
call
jge
outs
inc
add
pop
and
test
xor
inc
psubusb
inc
inc
adc
add
mov
add
cld
pusha
jne
std
push
mov
pop
add
or
add
icebp
xor
xor
data16
call
mov
mov
inc
jg
push
xchg
add
rcr
or
ret
add
sub
fwait
and
push
aad
inc
pop
pop
adc
js
add
test
sub
call
dec
jne
out
or
mov
inc
lock
loopne
xor
call
cs
test
add
rcl
dec
pop
sbb
pop
dec
adc
mov
sub
daa
inc
sub
sbb
sub
adc
push
pop
mov
fild
and
add
add
rcr
cld
mov
gs
or
cmp
adc
jp
adc
sbb
inc
mov
adc
inc
call
push
mov
xor
cmp
ss
mov
push
aas
xchg
test
sub
jge
adc
leave
adc
adc
fldenv
add
push
inc
mov
add
inc
push
add
sbb
(bad)
call
pop
mov
mov
pop
mov
cmovo
jne
sub
xchg
pop
push
icebp
push
out
xor
push
add
adc
xor
stc
add
adc
sahf
rcl
inc
sbb
pop
test
pop
cmp
mov
push
add
add
(bad)
aas
loope
push
jmp
add
jl
push
push
add
adc
cld
adc
ss
adc
pop
pop
inc
pop
gs
call
pop
add
inc
fiadd
lea
jno
sti
pop
add
(bad)
jge
add
sub
fsubr
mov
adc
adc
mov
fist
mov
cmp
ja
add
mov
mov
and
int3
add
pop
and
inc
call
adc
les
dec
jne
sub
repz
or
popf
or
test
mov
add
adc
test
push
ins
mov
loope
adc
test
add
add
push
dec
outs
add
mov
add
push
xor
dec
cld
inc
adc
je
cmp
mov
icebp
add
inc
inc
inc
fcom
xchg
add
ret
add
adc
mov
rcl
cmps
cmp
add
lods
and
test
mov
xor
bound
and
dec
or
and
pusha
lods
inc
push
jno
fcmovnbe
inc
push
add
test
rdpmc
test
add
lock
leave
and
add
push
imul
mov
sbb
add
jmp
mov
add
pop
add
xor
leave
nop
mov
cmps
add
adc
add
push
mov
adc
int3
jl
lea
sti
shl
push
mov
add
add
mov
iret
xchg
xor
push
call
or
icebp
jge
adc
adc
dec
call
scas
dec
add
pushf
mov
and
add
mov
leave
xor
push
data16
mov
add
pop
add
out
call
(bad)
sbb
add
add
and
ins
pop
add
ins
dec
cmp
add
sbb
adc
add
add
lock
xchg
xor
mov
test
add
pop
bound
push
and
sbb
and
and
outs
pusha
and
pop
add
push
sub
add
add
and
push
push
mov
mov
call
mov
jo
push
aas
js
sub
add
hlt
rcr
add
mov
lea
loopne
jmp
shr
jne
outs
adc
pop
push
addr16
inc
call
add
addr16
test
cmc
push
adc
aaa
inc
call
int
add
jge
adc
push
sub
add
dec
or
inc
and
push
ret
imul
dec
mov
loopne
xor
cmp
(bad)
mov
add
cdq
call
outs
pop
out
add
or
xor
inc
cmovb
lea
add
cmp
xor
dec
adc
dec
ret
aad
(bad)
and
das
add
es
push
outs
mov
xchg
add
mov
add
add
inc
lea
add
xor
dec
xor
cmp
or
loopne
add
fwait
pop
fstcw
int3
add
fcomp
je
xor
movs
adc
mov
or
xchg
dec
push
add
imul
punpcklbw
dec
call
and
(bad)
call
sub
mov
in
and
add
inc
repz
add
rol
dec
call
or
sar
nop
(bad)
xor
add
lods
clc
rol
sub
adc
adc
call
call
rcl
jmp
std
in
rcr
dec
enter
pop
test
lea
add
add
add
dec
pop
push
sbb
ja
inc
xchg
xor
add
enter
lock
add
add
loopne
adc
push
add
push
dec
add
add
cmp
in
cmp
loopne
add
lds
jg
dec
adc
jge
inc
or
rol
or
add
mov
outs
cmp
add
leave
sbb
push
jo
or
je
call
shl
fiadd
pop
pusha
call
js
arpl
test
mov
adc
xchg
dec
loopne
push
daa
lea
and
add
sbb
enter
mov
adc
test
push
in
push
push
and
sbb
add
dec
add
rol
loopne
lea
dec
mov
fild
call
xchg
mov
(bad)
out
nop
arpl
add
mov
data16
add
(bad)
cmp
ret
cmp
add
pusha
mov
cmp
and
callw
mov
popa
neg
sbb
or
(bad)
call
ror
and
es
nop
test
shl
test
adc
rol
icebp
add
add
in
jge
add
pop
adc
inc
sub
jl
xor
mov
add
or
inc
inc
cmp
mov
mov
sub
cwde
add
jle
cmp
scas
add
ret
retf
shl
rcr
xor
adc
push
adc
pop
jmp
test
mov
add
inc
xchg
push
xor
not
rol
add
dec
add
cmp
outs
push
mov
inc
add
je
add
(bad)
xchg
ret
adc
and
mov
mov
dec
push
xor
add
jp
loopne
movs
out
jns
jno
test
jns
sqrtps
jge
xor
or
stos
sti
int3
add
xchg
cmp
pop
fldenv
or
lds
add
call
inc
push
add
loop
sbb
out
xchg
call
mov
adc
into
push
inc
pusha
(bad)
cli
pop
mov
sbb
pop
(bad)
xlat
in
push
mov
or
or
and
shr
mov
add
adc
and
and
push
hlt
(bad)
push
cmp
into
call
mov
fldcw
mov
add
(bad)
in
cmp
push
dec
shl
push
lock
add
add
mov
fdivr
fild
adc
add
rol
add
inc
sub
pop
fmul
fcmovnb
loopne
add
dec
(bad)
(bad)
mov
cmp
adc
xchg
dec
add
and
or
add
call
shl
inc
mov
(bad)
call
hlt
dec
adc
setae
rol
inc
xchg
test
push
call
(bad)
adc
sub
sldt
jbe
jne
call
add
mov
dec
and
add
add
sbb
push
adc
jge
(bad)
and
call
cmp
sahf
add
sub
xchg
push
nop
adc
mov
test
nop
and
add
(bad)
loopne
inc
lock
call
jge
pop
stos
adc
cmp
xchg
pusha
add
xor
add
in
add
in
inc
and
add
fsub
and
dec
add
mov
call
xor
mov
jne
pop
imul
add
sbb
aam
or
mov
jmp
dec
adc
add
dec
xor
call
lds
sub
inc
aas
sub
inc
push
inc
shr
or
sahf
add
jge
add
fld
(bad)
pop
int3
(bad)
sub
adc
push
ins
(bad)
mov
cmp
xor
sub
(bad)
jae
mov
popa
enter
sub
clc
clc
inc
and
xor
mov
push
push
mov
add
lea
add
jmp
(bad)
xor
or
xchg
dec
lods
sbb
stos
dec
inc
fsubrp
and
mov
cmp
or
jns
or
inc
xchg
mov
adc
push
push
jmp
test
sub
ins
and
add
sbb
pop
dec
add
popa
icebp
into
outs
inc
jecxz
adc
mov
fiadd
dec
mov
push
sti
(bad)
mov
daa
call
dec
cmp
xchg
call
ss
pop
dec
(bad)
cld
sbb
push
gs
dec
mov
or
pop
out
(bad)
pop
add
xor
movlps
and
jge
or
popa
call
add
lahf
add
inc
or
lea
mov
mov
add
adc
add
add
add
jmp
lock
inc
or
sbb
or
add
sbb
lea
mov
xchg
push
add
mov
add
push
mov
inc
add
add
push
mov
inc
add
and
push
adc
cli
adc
(bad)
call
inc
mov
sbb
aas
lahf
mov
dec
mov
arpl
adc
pop
dec
push
add
ins
add
inc
add
inc
add
(bad)
pop
or
shl
inc
fadd
push
add
inc
pop
retf
dec
repz
dec
add
hlt
sub
aam
sahf
adc
std
jecxz
add
pop
push
add
add
mov
adc
add
xor
pop
pop
and
and
add
dec
std
inc
call
mov
add
cwde
inc
push
or
push
call
cmps
sub
inc
test
dec
jge
bnd
sbb
add
outs
add
mov
xor
or
pop
sub
dec
(bad)
jl
add
add
setge
popa
or
test
sub
test
and
push
jmp
call
add
lea
mov
add
rol
and
jge
dec
push
cmc
add
and
add
add
add
sub
mov
mov
adc
mov
mov
mov
sbb
std
add
fiadd
add
add
mov
popa
push
paddusb
add
adc
dec
std
dec
jge
jno
inc
push
jbe
test
push
add
mov
mov
fs
mov
add
mov
icebp
call
pop
push
sub
add
push
add
xor
shr
jnp
add
and
jno
inc
pusha
rcl
cmp
inc
(bad)
add
add
inc
pop
test
pop
and
adc
add
call
(bad)
aad
add
bound
leave
mov
rol
mov
sub
add
(bad)
mul
daa
and
sqrtps
jl
data16
adc
cmp
and
inc
add
(bad)
mov
jno
push
jge
mov
add
icebp
mov
inc
in
inc
add
pop
or
inc
iret
add
lea
or
add
mov
fistp
pop
adc
mov
push
add
push
add
push
dec
loop
sbb
cmp
mov
fcomp
or
lea
add
or
pop
or
mov
and
shr
and
xchg
add
sbb
sub
and
cmp
or
pusha
add
or
icebp
add
mov
add
add
sbb
inc
push
test
push
add
icebp
push
dec
call
je
add
inc
aaa
lea
xor
mov
fbstp
ins
add
add
add
pop
inc
lock
add
cmc
xchg
push
ret
fimul
repnz
sbb
and
xchg
mov
add
adc
loopne
add
adc
add
(bad)
shl
sub
rcr
xor
ds
test
add
jne
xor
sbb
mov
xchg
rol
adc
nop
pop
aas
inc
out
pusha
ret
push
cmp
mov
jne
mov
add
or
inc
rcl
xor
cmp
add
jne
int3
pop
jp
aam
rcl
ret
cmp
add
inc
pop
push
jle
add
ret
sbb
add
in
call
inc
add
sbb
(bad)
and
ins
ror
push
xor
mov
sub
dec
add
ds
pusha
add
add
pusha
add
cmp
fadd
mov
adc
dec
mul
cdq
xor
mov
dec
add
xor
push
(bad)
jl
call
dec
mov
enter
sub
out
shr
inc
and
pop
jmp
cmp
add
leave
jbe
xor
mov
call
sub
mov
xor
call
dec
std
pushf
popa
xor
lock
sub
push
push
shl
push
inc
mov
add
loope
pop
and
adc
nop
(bad)
jnp
pop
inc
push
mov
add
add
cmovno
mov
add
add
add
rcl
rol
lock
jns
dec
adc
adc
test
add
(bad)
mov
mov
push
ret
mov
jp
rol
hlt
add
adc
mov
inc
and
pusha
mov
add
pop
pusha
adc
dec
sub
stos
jp
call
(bad)
bound
dec
ins
fwait
inc
mov
push
icebp
add
adc
adc
xor
lds
xor
es
fwait
cs
pop
sldt
gs
mov
jne
jmp
lock
test
jle
fwait
push
mov
das
mov
jno
ror
adc
or
ins
inc
cmp
mov
push
xchg
mov
call
add
(bad)
sub
dec
cmp
inc
ret
and
dec
mov
jae
pop
jmp
and
push
and
sti
add
jmp
sbb
shl
or
xor
inc
ret
(bad)
test
add
fdiv
shl
movs
pop
push
sbb
call
mov
pop
add
pop
push
(bad)
aas
and
add
add
and
shl
or
call
mov
shl
aad
add
push
or
or
xchg
rol
das
loopne
sbb
arpl
inc
jmp
adc
add
dec
push
leave
adc
mov
push
int
or
and
adc
add
mov
and
cli
pop
add
add
add
or
ror
xor
add
pop
popa
aaa
jo
test
dec
fld
sti
add
push
mov
dec
imul
adc
add
mov
push
call
gs
jge
push
rcr
mov
pop
dec
inc
int3
mov
mov
adc
jl
loopne
push
xor
test
call
jmp
(bad)
hlt
(bad)
icebp
add
dec
(bad)
jne
cli
pop
and
add
call
mov
push
neg
pop
xor
dec
dec
pushf
push
push
mov
xor
mov
add
push
jbe
adc
or
adc
aas
sub
mov
call
inc
mov
dec
mov
mov
inc
sbb
jns
test
pop
cmp
mov
sti
push
mov
popf
dec
or
add
mov
jge
sbb
sub
ins
inc
or
fwait
mov
sbb
dec
dec
push
cli
add
psrlw
ret
add
push
adc
gs
cmp
sbb
add
outs
sbb
shr
or
mov
mov
jne
call
jmp
xor
add
cmp
add
add
ss
fwait
or
repnz
jp
test
push
push
push
adc
adc
dec
push
add
jge
cmps
xor
call
push
popf
icebp
fcomp
pushf
rcr
dec
nop
push
lea
lsl
mov
sub
dec
dec
cwde
and
and
sub
push
bound
loopne
add
in
push
add
div
fdiv
call
inc
inc
inc
pop
mov
adc
aaa
popa
push
sub
add
jmp
jne
loope
fild
test
xchg
cmps
lock
dec
test
add
adc
add
adc
in
ins
rcr
inc
jae
std
shl
xchg
test
xor
add
push
push
shl
ds
push
es
inc
sbb
outs
retf
or
fmul
rol
or
add
das
jne
add
add
pop
call
movs
sar
inc
push
push
cmp
mov
push
test
cwde
test
lds
sbb
mov
add
jo
add
sbb
leave
loop
ror
adc
mov
adc
rol
xchg
and
adc
rol
inc
or
test
cmp
add
loopne
dec
imul
add
sbb
pusha
(bad)
jmp
dec
rol
call
enter
inc
stc
movs
or
leave
add
in
push
push
add
adc
shl
push
push
dec
lahf
dec
inc
rol
pop
mov
mov
or
add
dec
adc
add
inc
sub
ror
mov
daa
add
push
cmp
mov
inc
sbb
data16
push
rol
cmp
rol
mov
and
xor
push
and
lock
fwait
mov
dec
adc
mov
adc
aas
pusha
or
dec
or
ins
inc
add
sbb
pushf
bound
add
inc
add
rcl
test
jmp
or
jg
enter
push
or
or
mov
mov
sub
sqrtps
xchg
jge
fsubp
sbb
out
aad
push
arpl
test
mov
test
inc
pop
jge
out
add
and
test
test
aam
xor
add
fld
sbb
push
test
add
mov
push
shr
aad
xor
or
push
mov
hlt
and
dec
add
fs
nop
test
or
add
pusha
xchg
setg
ror
add
and
jg
sar
inc
popf
add
js
push
add
cmp
aam
and
push
jmp
cmp
fdivr
shl
mov
push
sub
dec
mov
ss
jno
lock
push
add
jp
xchg
stc
cmp
jle
mov
outs
add
pop
sar
shl
hlt
mov
ins
nop
hlt
add
add
rol
mov
je
sub
or
fsub
push
pop
adc
or
sar
clc
ins
fisttp
dec
mov
mov
push
inc
into
and
test
pop
push
push
add
adc
dec
dec
dec
arpl
mov
add
jo
rol
call
lock
in
xor
call
xor
and
pop
dec
enter
lea
test
leave
ficom
cwde
imul
ret
aaa
cli
dec
xchg
jo
cwde
(bad)
adc
mov
inc
lea
or
daa
in
cld
mov
rol
ss
push
mov
or
add
cli
push
and
push
add
adc
dec
sub
mov
test
dec
(bad)
call
adc
jne
dec
mov
push
inc
test
rol
mov
dec
push
add
xchg
add
clc
lock
(bad)
and
dec
ret
mov
rol
push
(bad)
add
mov
pop
and
mov
pop
test
dec
mov
and
add
call
ficomp
dec
add
sbb
pop
jmp
pusha
mov
rcl
std
(bad)
mov
xor
fldcw
or
xchg
ja
add
push
mov
and
rol
std
push
add
mov
mov
(bad)
mov
mov
test
pop
mov
add
shl
and
popa
inc
or
mov
adc
cmp
nop
sbb
mov
inc
pusha
add
sbb
fdiv
add
cmp
jne
jge
add
ror
push
mov
push
dec
xor
or
ja
call
add
mov
add
add
aas
or
inc
add
test
mov
pop
in
add
push
(bad)
lds
add
icebp
sub
and
iret
int3
mov
call
sar
call
ror
push
sbb
add
lahf
mov
dec
xchg
add
push
and
mov
push
js
inc
addr16
adc
inc
add
push
add
in
xor
bound
stos
cmp
jbe
(bad)
(bad)
fisttp
or
mov
mov
add
sub
cmp
mov
clc
dec
mov
mov
pop
jne
pop
mov
fwait
push
jne
mov
jo
xor
jmp
adc
rol
or
gs
out
adc
jmp
mov
mov
inc
(bad)
aad
push
mov
mov
inc
nop
jge
test
add
and
mov
mov
mov
pop
test
add
ret
call
pop
jae
out
add
jmp
add
add
add
or
add
js
cmp
call
pop
loope
jno
mov
inc
dec
add
add
inc
(bad)
adc
sub
or
xlat
call
xor
sbb
loopne
pusha
sub
mov
xchg
mov
rol
inc
sar
add
add
push
jl
enter
stos
aam
push
fsub
or
inc
adc
shl
pop
jo
xchg
retf
pop
pop
add
call
push
push
add
in
movs
jl
rol
or
inc
cmp
add
mov
add
push
inc
add
les
cmp
dec
or
xchg
loopne
or
pushf
dec
jne
(bad)
sbb
pop
sub
mov
add
inc
fild
ins
add
jnp
push
add
dec
jne
inc
dec
loop
and
dec
ret
(bad)
out
or
mov
lock
push
and
add
mov
add
lods
sbb
loop
ins
mov
repz
and
jp
inc
pop
mov
push
out
test
xor
add
jmp
movs
mov
mov
add
adc
test
add
shr
add
inc
test
imul
add
stos
cld
pop
add
loope
sub
add
jne
call
aas
loop
add
adc
adc
dec
mov
push
std
or
cs
inc
shl
sbb
xor
mov
and
lahf
push
add
call
sub
add
jg
sbb
push
mov
pusha
sub
mov
(bad)
xor
and
add
add
rol
call
and
dec
lock
mov
jl
pop
add
pop
or
cmps
fisttp
adc
adc
pop
push
add
sub
test
push
push
push
jge
add
cwde
dec
sub
mov
mov
cmovl
adc
lea
icebp
test
int3
add
adc
loopne
push
call
daa
pmaxsw
call
sbb
dec
push
call
mov
dec
jge
or
add
add
add
js
pop
sbb
inc
or
rcr
jecxz
or
inc
mov
pop
mov
inc
sbb
cmp
add
sub
jb
add
in
pop
dec
sub
setno
dec
mov
fmul
add
lods
das
test
add
pop
mov
mov
xor
mov
adc
and
bound
je
push
and
loopne
adc
jb
mov
add
inc
pusha
sub
sub
and
in
sbb
sahf
adc
add
mov
rol
push
pushf
add
test
add
mov
adc
int3
xchg
ret
(bad)
push
inc
movs
loope
push
adc
add
and
jne
cmpxchg
xchg
add
adc
call
cwde
mov
add
and
mov
inc
or
rcr
sub
stc
xor
push
mov
mov
ja
mov
int3
add
rol
test
inc
and
aas
adc
push
aam
add
iret
add
inc
xor
shr
(bad)
push
inc
cmp
nop
addr16
inc
mov
push
sub
add
dec
sub
add
push
mov
cmp
nop
or
adc
(bad)
mov
inc
nop
mov
sti
adc
cs
in
add
add
out
cs
or
pxor
rol
lock
imul
(bad)
and
call
call
add
add
call
clc
push
push
stos
mov
add
and
(bad)
call
cmp
xor
scas
jge
mov
adc
or
pusha
add
mov
add
inc
ret
or
daa
rol
loop
add
sbb
and
xchg
or
(bad)
jno
fadd
movs
call
fsub
xchg
dec
push
mov
adc
add
add
nop
add
push
std
dec
push
rcl
cmp
add
call
sbb
or
jecxz
or
adc
inc
jecxz
arpl
jb
and
scas
loope
imul
test
pop
add
add
jl
gs
enter
rol
mov
add
mov
jae
and
add
add
jmp
sub
or
pusha
push
dec
(bad)
mov
or
arpl
xchg
add
add
add
add
enter
push
in
ror
or
jmp
push
xor
sub
call
mov
retf
div
mov
outs
sahf
inc
mov
mov
add
test
dec
nop
inc
add
push
add
mov
push
add
push
push
xor
jne
loope
add
push
or
cld
xchg
xchg
ins
jo
mov
stc
pop
and
mov
push
add
mov
add
(bad)
and
inc
and
xor
rol
xchg
loopne
xchg
adc
sub
add
cmps
mov
inc
aam
cmovp
sbb
inc
dec
mov
mov
mov
stc
add
dec
enter
or
test
pop
push
and
inc
push
inc
add
or
dec
(bad)
dec
popa
aam
(bad)
fcom
call
or
push
jmp
cmp
and
call
in
aam
mov
jmp
inc
inc
inc
add
add
mov
push
sub
push
inc
inc
fcom
shl
int3
jmp
add
jl
xor
add
int3
rol
push
add
push
push
add
inc
iret
add
ins
adc
test
push
lar
pop
stos
push
xor
cld
rcl
add
sub
push
out
add
adc
fst
or
push
popf
bound
rol
dec
cmpxchg
add
rcl
add
sbb
add
loopne
or
xor
push
xchg
jbe
test
nop
dec
fsubr
pop
mov
add
mov
mov
pop
mov
or
jns
lea
add
ror
and
adc
fbstp
call
mov
imul
mov
test
jb
add
mov
add
push
cmps
mov
add
ins
pop
or
mov
add
cmp
call
loope
inc
add
call
popa
cdq
add
or
(bad)
push
pop
loop
dec
jmp
jo
inc
add
pop
jge
popf
adc
inc
fadd
sub
push
pop
xchg
mov
adc
loopne
mov
dec
call
mov
sbb
lods
mov
ja
or
imul
inc
dec
test
ret
push
xor
inc
jnp
xor
or
or
shl
jp
loope
dec
call
pop
add
inc
jmp
mov
add
add
mov
cld
jmp
mov
(bad)
jge
rol
pop
adc
push
add
nop
mov
add
and
add
pop
dec
push
add
mov
jne
clc
data16
pop
sbb
or
inc
push
add
adc
mov
cmc
mov
adc
mov
std
mov
cmp
xor
mov
clc
inc
dec
add
xor
jbe
(bad)
jmp
add
pushf
push
add
add
pusha
(bad)
out
fadd
mov
or
dec
fidiv
and
fbld
dec
movs
shr
shl
xor
adc
call
ud2
push
lea
shr
inc
push
pop
add
inc
sub
add
add
add
call
ret
push
gs
inc
(bad)
add
pop
mov
inc
dec
ret
push
shr
and
and
call
adc
add
or
sub
jmp
jbe
or
inc
bound
mov
dec
jg
mov
jne
rcl
imul
push
jne
(bad)
jg
sbb
add
add
push
add
xor
call
and
pushf
push
outs
sbb
add
nop
cmp
test
add
jmp
mov
jmp
inc
and
rol
adc
inc
ret
lea
add
add
mov
rcr
lahf
nop
test
dec
lock
add
lock
jmp
push
push
mov
call
and
dec
shr
add
add
and
mov
push
mov
add
in
lock
adc
repz
sub
dec
add
add
inc
add
xor
inc
jmp
scas
push
push
xor
add
call
sub
adc
jne
mov
push
clc
add
add
shl
push
add
xchg
lock
mov
enter
sub
imul
imul
mov
jo
add
or
mov
adc
pop
call
add
and
test
sub
mov
add
pusha
test
ror
add
mov
and
mov
inc
int
push
loopne
daa
popa
pop
adc
scas
fcom
mov
addr16
out
mov
scas
cdq
jae
ins
jno
push
ret
loopne
push
xor
es
mov
push
and
and
mov
test
or
sbb
test
mov
add
xor
data16
and
mov
int3
add
les
loopne
test
push
add
ins
rcr
inc
fsubr
jb
lea
mov
jae
push
nop
mov
adc
add
pause
add
jne
psrlw
mov
add
dec
sbb
xchg
mov
add
adc
push
call
adc
nop
mov
push
or
out
mov
ret
pusha
shl
nop
mov
movaps
leave
or
add
cld
add
enter
add
rol
add
xchg
add
mov
test
dec
add
adc
(bad)
call
push
add
or
pop
mov
sbb
add
lds
or
and
mov
or
pusha
add
popa
bound
xor
push
cmp
test
xor
daa
add
shr
mov
jp
std
ja
xchg
test
inc
inc
in
data16
pop
and
mov
mov
add
sub
call
mov
mov
cs
or
push
loopne
add
mov
ret
mov
shl
jecxz
in
mov
push
cmp
mov
enter
pop
in
lea
mov
inc
dec
adc
or
cmp
in
inc
fld
jo
ja
add
push
leave
inc
xor
out
shl
add
shr
shl
add
xchg
loope
add
or
inc
mov
adc
ror
or
add
sub
adc
loopne
fdiv
xchg
dec
add
sbb
enter
cmp
(bad)
popa
call
add
jne
xchg
cli
(bad)
pop
add
loope
loop
pop
xor
pusha
test
add
clc
call
add
nop
xchg
pop
add
mov
mov
mov
adc
inc
in
lock
push
gs
rcpps
(bad)
fpatan
add
add
retf
les
sub
jnp
shr
cli
jne
add
xchg
test
mov
gs
pop
fmul
test
push
add
inc
cmc
movs
push
xstore-rng
cmps
add
add
inc
sbb
and
or
push
daa
bound
and
push
sbb
outs
and
bound
stos
sbb
push
cmp
xor
rol
add
inc
add
and
test
pop
add
lods
test
call
js
pusha
rcr
sbb
mov
hlt
daa
push
inc
inc
(bad)
xor
ror
xchg
push
adc
xchg
sub
dec
fbstp
and
push
sub
add
rol
test
mov
jne
jle
add
test
mov
add
ins
stos
dec
inc
add
xor
add
sub
mov
add
push
inc
push
add
dec
sbb
test
test
adc
adc
add
sub
cmpunordps
xor
(bad)
scas
jmp
adc
jmp
das
test
adc
sti
inc
add
(bad)
dec
pop
mov
fadd
jg
sbb
inc
ficom
fild
or
add
pop
adc
add
mov
adc
and
sbb
loop
jle
push
inc
add
or
xor
in
and
mov
add
pop
add
into
cmp
add
ret
jo
enter
add
mov
call
inc
sub
xchg
add
shl
xor
add
push
jmp
test
adc
or
add
adc
out
and
pop
call
adc
cmps
dec
add
inc
add
pop
loope
bound
or
in
inc
and
das
adc
adc
mov
gs
shr
add
adc
add
add
mov
xchg
add
mov
sldt
dec
inc
xchg
inc
cmp
std
sbb
jne
loopne
dec
mov
dec
add
test
mov
push
and
add
add
or
mov
add
loop
push
sub
mov
lock
add
add
repnz
mov
jl
loop
adc
mov
xor
add
mov
mov
jne
ret
ins
push
push
push
movs
arpl
call
fist
int3
ds
sub
inc
push
push
shr
mov
inc
xor
(bad)
cmp
loopne
inc
push
and
sub
inc
test
sar
xor
mov
sbb
(bad)
dec
rol
xchg
call
sbb
inc
sub
or
dec
add
adc
inc
inc
lock
aam
dec
push
adc
dec
xor
add
test
or
mov
and
pop
jl
inc
mov
pop
jge
cdq
and
add
adc
and
enter
jb
cmp
add
jecxz
lods
adc
add
div
add
movs
pusha
outs
push
add
cmc
adc
add
add
sub
adc
mov
(bad)
das
adc
cmps
inc
lock
xor
out
push
inc
into
push
add
std
call
push
add
add
or
sub
push
shl
jge
adc
add
cs
dec
fs
mov
push
adc
jge
add
xor
add
loopne
jl
call
mov
adc
pop
jge
int3
sbb
int
lea
dec
inc
jmp
adc
sub
xchg
aam
je
add
test
push
push
hlt
inc
call
add
cmp
popa
adc
bswap
cmp
and
call
add
inc
mov
lar
add
cmc
mov
mov
inc
add
bound
inc
add
sub
xchg
cmp
call
pop
add
lock
lock
add
ss
pusha
mov
or
push
add
sar
cmp
mov
add
fisub
add
cmp
mov
jno
mov
mov
jmp
add
add
movs
std
push
add
pop
add
or
jno
sbb
lds
sbb
lock
adc
shl
pop
retf
add
or
fld
sbb
mov
call
leave
adc
lds
les
dec
adc
inc
ja
pop
call
sub
mov
add
pop
xor
call
add
mov
test
(bad)
cdq
add
cmp
call
xor
dec
or
add
(bad)
cmp
add
add
fcomp
mov
or
mov
add
add
lods
push
add
xor
add
xor
pop
and
add
push
add
icebp
pop
call
push
add
add
xlat
push
jmp
popa
mov
scas
inc
add
sti
xchg
or
jp
sbb
adc
call
fiadd
or
push
add
sub
call
add
shl
pop
add
xor
add
cmovne
(bad)
jge
push
fsubr
aas
in
push
dec
inc
push
cmp
add
sbb
inc
inc
mov
and
push
mov
call
mov
jecxz
cmp
add
(bad)
cli
mov
push
add
(bad)
call
add
mov
fwait
dec
cdq
fdivr
cwde
sub
sub
add
adc
adc
xor
retf
arpl
mov
push
call
and
mov
adc
packuswb
rol
cmp
or
dec
adc
add
ds
fadd
(bad)
clc
and
mov
add
jne
add
inc
and
jb
xor
inc
and
leave
push
add
xchg
xor
test
xor
jp
mov
push
push
iret
call
jae
push
pop
xchg
xor
sub
add
mov
dec
or
dec
call
rol
add
out
adc
sbb
inc
add
add
add
jne
mov
pop
and
iret
sti
lea
pop
push
and
and
pop
mov
push
inc
push
sbb
push
call
inc
and
or
adc
mov
add
loopne
icebp
inc
dec
int3
or
loopne
ret
xadd
and
sbb
sub
push
nop
jb
push
mov
dec
imul
mov
call
ror
jne
and
loop
add
add
cmp
adc
lea
jo
lock
test
jno
bound
add
push
inc
push
or
mov
mov
repz
add
inc
sbb
add
xor
add
add
std
push
sbb
inc
les
jno
call
call
cmps
rol
add
mov
inc
shl
and
xchg
mov
gs
xor
inc
mov
sbb
imul
mov
and
adc
push
xchg
xchg
xor
add
in
add
add
dec
or
es
inc
rol
add
add
dec
push
dec
add
mov
sbb
add
pop
dec
inc
in
gs
(bad)
cmps
or
aaa
adc
lods
xor
push
cli
mov
retf
add
pop
sar
mov
adc
xchg
mov
or
push
add
imul
sub
adc
je
(bad)
out
jge
(bad)
jge
neg
add
pop
mov
scas
clc
dec
xchg
add
nop
sub
add
add
popa
rol
xor
push
rcl
push
add
cmp
div
and
test
call
inc
sub
mov
mov
add
cli
rol
push
rol
add
add
dec
push
bound
jne
jns
cwde
or
inc
test
add
sti
add
or
dec
ret
mov
nop
jmp
loope
add
rol
dec
inc
pop
xor
test
xor
cmps
inc
sbb
fild
add
add
inc
aam
cmp
pop
add
cmp
sbb
pop
sbb
mov
add
add
call
push
add
mov
or
push
add
xor
inc
(bad)
xor
call
add
xor
shr
mov
xchg
mov
mov
xchg
inc
and
inc
push
pop
rol
fcom
and
xor
push
pusha
push
add
pop
punpckhbw
sar
enter
xor
pushf
adc
adc
and
adc
aas
mov
movs
shl
push
loopne
sub
add
xor
push
xor
add
jne
add
test
pop
inc
and
add
add
sub
data16
mov
mov
jmp
push
test
add
xor
js
add
sub
and
pop
loope
loope
add
(bad)
pop
jge
or
popa
mov
add
xor
mov
dec
mov
xor
call
imul
push
ins
add
inc
fld
cmp
dec
xchg
mov
dec
(bad)
movs
add
cmp
into
push
loope
lock
daa
add
test
test
inc
aam
rcl
sldt
fiadd
push
add
lock
jle
test
add
icebp
add
add
fsubr
add
pusha
fsubr
pop
add
add
add
add
push
push
sbb
xchg
or
call
add
popa
jne
loopne
add
mov
push
push
in
mov
test
pop
sub
call
sbb
iret
stos
pusha
fs
in
stc
inc
add
mov
sub
shl
icebp
jne
mov
sub
outs
scas
adc
xor
mov
lods
jns
dec
add
(bad)
test
adc
pop
sub
adc
jne
dec
out
adc
jge
jmp
add
add
out
add
adc
iret
les
nop
mov
sub
fdiv
push
xchg
pushf
je
popf
add
pusha
adc
pusha
inc
mov
push
or
add
or
mov
pusha
mov
call
es
add
es
rcl
or
pop
sbb
add
or
add
xor
add
push
mov
mov
pop
mov
dec
push
xor
adc
jne
or
pop
adc
arpl
cmp
add
add
cld
inc
add
mov
and
adc
retf
xor
cwde
xchg
mov
std
add
add
or
ja
jns
jmp
mov
popa
les
fucomi
lahf
push
lock
(bad)
add
cli
push
inc
add
add
add
dec
mov
mov
add
push
add
push
(bad)
(bad)
leave
add
push
movs
mov
and
pusha
das
inc
inc
push
mov
mov
inc
mov
lock
jo
add
add
and
add
add
add
ror
fiadd
ret
mov
call
inc
push
test
sub
and
cld
ins
and
push
dec
leave
adc
xor
add
or
shr
jb
mov
loop
adc
ins
push
and
add
xchg
add
into
jns
lock
mov
test
add
das
add
and
adc
test
add
shl
(bad)
mov
sbb
dec
mov
mov
lods
dec
cmp
sbb
rol
jge
(bad)
pop
in
add
pop
add
or
mov
add
fist
add
mov
arpl
sbb
sbb
cwde
call
rcl
punpckhbw
add
adc
in
add
add
add
cmc
add
pop
jmp
push
add
pop
cmp
in
add
mov
add
aaa
aam
add
add
sub
js
dec
shl
gs
jmp
outs
or
jecxz
rol
cdq
mov
jge
sbb
add
add
test
in
sub
add
dec
fadd
stos
arpl
inc
jo
sbb
inc
jne
add
pop
out
and
sub
ret
mov
mov
or
sub
pop
mov
inc
(bad)
leave
mov
push
test
add
or
and
iret
push
adc
lfs
push
mov
add
add
mov
nop
ret
mov
cdq
nop
push
xchg
loopne
and
inc
call
shr
cmp
mov
iret
jecxz
call
add
ins
push
sub
dec
lea
cmc
call
pop
sub
jmp
inc
jae
ret
mov
push
adc
adc
lods
nop
push
nop
add
sub
mov
inc
jl
add
fcom
sub
js
or
add
or
mov
inc
bound
pop
ds
call
add
dec
enter
xlat
sbb
sbb
mov
inc
cmp
mov
clc
add
add
jo
add
outs
clc
jmp
add
or
or
or
sar
adc
leave
imul
add
mov
dec
mov
add
add
add
add
aas
loope
mov
fcmovnu
repnz
test
inc
push
push
jle
push
pop
adc
xor
add
pop
sub
mov
mov
and
nop
(bad)
or
add
push
adc
mov
add
xor
push
repnz
mov
xchg
jge
lea
mov
push
imul
les
lock
das
xchg
stos
add
inc
mov
add
stc
mov
(bad)
imul
or
add
(bad)
cld
fcom
mov
iret
or
add
(bad)
mov
sar
add
aas
jb
add
add
adc
lea
adc
(bad)
imul
xor
mov
adc
add
jmp
addr16
xor
stc
popa
mov
call
call
loop
push
mov
mov
je
(bad)
push
pop
nop
int
ret
push
push
and
pusha
jb
inc
add
add
add
and
add
xchg
lods
mov
or
jmp
adc
(bad)
aas
out
fisub
arpl
inc
add
sub
ret
and
cmp
rcl
add
add
add
loope
aam
pop
movs
dec
mov
inc
add
and
test
(bad)
xlat
pop
add
adc
lea
sbb
and
and
dec
and
add
push
dec
and
call
ja
mov
or
add
pop
nop
inc
call
push
add
(bad)
sbb
or
popa
or
add
xor
out
test
inc
mov
add
mov
jno
add
mov
dec
and
ins
adc
mov
loopne
push
add
add
pop
clc
jno
sub
shr
cmp
sub
push
add
add
sub
jle
rcl
add
adc
mov
add
dec
jmp
dec
push
mov
arpl
sub
jbe
(bad)
imul
add
and
add
inc
dec
add
addr16
sub
add
sbb
and
call
xchg
xor
xchg
and
add
add
jne
or
icebp
sub
and
jo
pop
dec
stos
inc
pop
cmp
mov
(bad)
xchg
lock
add
cmp
and
adc
call
add
add
inc
and
add
push
jae
test
push
and
add
mov
pop
add
dec
inc
test
push
jge
xor
or
cmc
test
jmp
sbb
loopne
and
hlt
(bad)
mov
xor
inc
xor
dec
arpl
jb
lods
add
sar
or
add
jl
call
std
and
rol
dec
mov
add
mov
clc
lea
push
dec
in
add
mov
les
sbb
mov
inc
ret
jge
ret
lds
pop
sub
inc
in
lods
loopne
mov
inc
test
add
add
inc
jae
out
mov
add
rcr
jbe
inc
sbb
add
shl
adc
bound
rol
and
sub
xor
inc
push
add
xchg
stos
inc
dec
pop
xor
add
shr
push
and
icebp
push
add
pop
jl
add
leave
shl
mov
dec
in
xchg
test
shl
add
jge
add
outs
add
rol
inc
jge
or
inc
aad
jne
stos
push
mov
inc
adc
pop
fsubrp
push
fcomp
mov
xor
xor
jb
or
push
sbb
inc
mov
add
add
(bad)
lock
lock
adc
lea
xor
add
dec
ret
push
popa
shl
mov
lock
add
mov
in
call
add
sbb
push
mov
jp
or
cdq
add
mov
fild
aam
sub
outs
lods
mov
add
push
add
push
std
jmp
xor
sub
fld
or
call
loop
rol
lods
add
ins
mov
sub
icebp
cmp
or
test
mov
inc
add
push
push
imul
pop
cwde
loope
or
add
mov
pop
inc
lock
inc
inc
inc
add
mov
dec
push
inc
lock
ja
call
push
sbb
add
in
shrd
add
call
jecxz
rol
nop
rol
add
jbe
pop
int
xchg
add
mov
mov
or
inc
lea
inc
ret
add
dec
or
mov
ds
xor
loopne
inc
xor
js
add
test
push
inc
add
call
pop
inc
lahf
retf
jae
or
add
xchg
sub
test
push
push
push
adc
nop
add
add
mov
mov
lock
add
jb
movs
xchg
movs
or
push
mov
div
in
popa
ins
cmp
std
retf
fild
mov
adc
or
mov
js
push
test
add
xor
push
test
cmp
add
or
sub
popa
dec
inc
rcl
ret
push
add
(bad)
pop
or
add
pop
rcr
rcl
add
sub
and
adc
cmp
dec
mov
add
test
test
aam
or
add
rol
cli
adc
mov
into
into
call
push
sub
inc
mov
or
inc
inc
xchg
push
mov
jge
inc
mov
test
jns
jmp
test
cmp
jmp
pusha
popf
add
retf
add
pop
and
test
pop
mov
xchg
jle
inc
add
add
or
pop
jecxz
add
sar
jecxz
add
pop
movs
add
psllw
mov
jge
out
jp
test
inc
mov
sbb
add
add
mov
add
jo
push
add
xchg
add
ss
add
add
mov
stos
in
pop
push
imul
sub
cmp
mov
repnz
retf
add
and
mov
add
cmc
push
mov
into
jecxz
push
and
aam
sbb
xor
xchg
inc
or
mov
punpckhbw
push
(bad)
sbb
sub
add
or
scas
jge
sbb
inc
test
rol
call
popa
mov
and
fisttp
int3
pop
cmp
adc
inc
add
dec
jmp
or
jne
xor
add
(bad)
call
push
adc
cli
push
or
in
test
and
and
loopne
in
add
retf
push
mov
mov
jl
fadd
cmp
cmp
inc
add
daa
nop
inc
sub
add
adc
scas
mov
jmp
inc
inc
add
outs
cld
cmp
lods
pop
int
add
call
xor
movs
mov
(bad)
(bad)
mov
cmp
inc
call
shr
cmp
movs
mov
and
pop
jmp
loopne
out
call
cli
gs
xor
xor
dec
add
push
out
push
mov
xchg
es
call
cmp
cmp
or
push
dec
xor
jecxz
inc
xor
repz
sub
in
or
in
ror
mov
mov
inc
pop
or
inc
lds
mov
inc
mov
add
es
inc
test
call
push
or
lea
sub
add
adc
add
add
xchg
test
add
punpckhdq
ret
lea
xchg
dec
inc
add
inc
(bad)
das
add
dec
and
mov
add
add
pop
fstp
add
mov
jecxz
test
mov
inc
pop
cmp
add
sbb
add
adc
add
call
sub
les
add
lea
ja
mov
inc
lahf
bound
push
cwde
or
dec
rol
inc
add
sar
fld
add
push
inc
cmp
add
sub
inc
add
lock
mov
sbb
test
(bad)
punpckhdq
jno
add
pop
fbstp
loope
call
test
mov
mov
mov
inc
mov
scas
inc
ret
call
cmp
loope
call
add
add
sbb
test
mov
sub
arpl
ror
ins
mov
adc
mov
adc
add
add
adc
pusha
(bad)
in
or
adc
xor
push
addr16
sub
mov
cwde
add
push
adc
inc
pusha
dec
push
(bad)
fistp
xor
popa
push
pop
cmp
add
test
mov
inc
add
add
enter
pusha
movs
add
adc
jmp
dec
xchg
add
ror
mov
add
pop
push
push
or
push
dec
jecxz
loope
test
jbe
add
jmp
repz
cmp
(bad)
call
or
adc
dec
retf
add
(bad)
pop
fld
clc
add
adc
add
jecxz
div
mov
or
ret
jmp
adc
loop
inc
pop
mov
mov
add
inc
(bad)
fmul
les
sbb
xchg
inc
psubusb
call
dec
loopne
dec
push
cmp
push
ror
jg
fadd
out
adc
inc
dec
shl
mov
mov
mov
sti
mov
or
add
call
jl
add
add
inc
add
dec
sub
je
add
loope
jns
add
in
xchg
fld
inc
adc
adc
mov
pop
inc
loopne
inc
(bad)
in
cmp
scas
psadbw
out
push
jge
outs
cdq
add
ja
call
pusha
lock
add
enter
add
adc
add
adc
cmp
shl
add
and
jne
mov
add
das
xor
xchg
or
inc
add
xor
mov
rol
imul
inc
xor
popf
rol
cmp
sbb
rcl
call
inc
jns
in
movs
push
mov
push
add
in
icebp
add
jmp
pop
inc
or
or
lahf
xor
push
shl
push
jo
mov
dec
xchg
jge
pusha
fs
add
dec
dec
js
rol
push
shl
add
add
jne
pop
xchg
sbb
adc
cmc
nop
add
movs
loopne
fcom
scas
sbb
add
add
jl
(bad)
and
or
push
add
mov
unpckhps
out
add
inc
jecxz
jne
mov
add
or
xor
xchg
push
(bad)
fiadd
inc
mov
push
leave
enter
mov
cmp
imul
and
fidiv
and
or
mov
inc
arpl
sbb
sub
dec
pop
in
add
adc
call
int
enter
mov
push
or
add
loopne
xchg
push
(bad)
out
mov
jb
jge
push
cmp
add
sub
(bad)
fadd
in
xchg
pop
add
rol
loopne
dec
cld
mov
sub
or
loopne
fidiv
mov
mov
inc
outs
xor
jne
adc
cmp
mov
repnz
push
add
xchg
loope
mov
clc
dec
and
(bad)
mov
sbb
fsubr
inc
xchg
gs
sbb
jae
add
nop
add
xchg
mov
jno
push
add
mov
enter
and
lock
mov
retf
jae
push
mov
or
mov
clc
sete
add
xor
test
cwde
loopne
add
pop
lock
inc
inc
mov
inc
inc
adc
dec
push
mov
je
mov
leave
and
fdiv
or
xchg
mov
add
xor
inc
dec
call
in
adc
add
push
mov
and
add
push
fnstsw
mov
add
rol
shr
pop
in
lea
sub
in
mov
mov
inc
rol
and
dec
xor
mul
xchg
mov
cwde
and
pop
inc
mov
popf
and
jns
or
or
inc
ja
xor
add
add
add
xor
add
sub
call
add
and
test
sbb
cmp
add
sub
xor
push
mov
jmp
and
xor
or
jo
jge
(bad)
rcr
add
jmp
add
fnsave
adc
(bad)
clc
dec
push
test
sub
xor
dec
add
xor
pop
sbb
cmp
sar
(bad)
cmp
or
shr
dec
inc
in
mov
dec
pop
ins
or
popf
add
inc
mov
jne
(bad)
adc
jmp
ins
pop
rol
push
push
rcr
sbb
push
les
mov
pop
mov
call
(bad)
or
cmc
and
(bad)
shl
fst
inc
xor
out
and
in
adc
inc
push
arpl
adc
inc
or
mov
cmp
add
add
inc
loopne
lds
sub
cli
inc
jne
ret
(bad)
call
cmovs
add
add
cli
jnp
dec
push
sbb
movups
ret
enter
jo
fidivr
call
push
inc
call
fmul
add
add
popf
movs
lea
xchg
and
and
add
(bad)
imul
add
and
adc
add
jne
push
pop
loopne
leave
call
mov
xor
jne
cmp
jg
push
push
ret
push
add
sub
cmp
jo
add
call
fcmovnu
pusha
add
inc
dec
cmp
call
inc
lock
sub
mov
adc
push
shl
add
and
add
add
mov
add
mov
shr
inc
mov
mov
mov
inc
push
shr
out
test
add
pop
add
push
call
icebp
add
std
cmp
dec
dec
loopne
and
add
dec
jne
outs
(bad)
call
or
stos
dec
push
lea
stc
jno
add
add
ss
push
jne
adc
add
rcr
call
add
fdiv
sub
sub
add
ret
add
pop
mov
mov
pop
mov
pusha
call
(bad)
and
dec
adc
loopne
test
add
and
(bad)
jmp
inc
shl
fimul
popa
jne
add
push
rcl
xchg
bound
popa
adc
add
inc
add
push
push
call
xchg
mov
repnz
jge
(bad)
xlat
repnz
jne
pop
add
(bad)
add
test
adc
push
dec
cmp
add
das
add
sbb
dec
pop
push
rol
les
push
push
call
sub
xchg
pop
or
outs
or
rcl
pop
add
push
dec
and
cmp
test
mov
lds
call
lea
bound
mov
hlt
mov
mov
icebp
pop
adc
sub
inc
pushf
cmp
push
push
ret
xor
push
push
xor
sub
in
mov
push
sub
rol
call
xor
ja
ja
add
fcmovne
pop
ror
loopne
adc
jge
add
xchg
jge
sub
mov
jo
push
loope
add
add
mov
cmp
push
aas
dec
mov
xchg
pop
inc
adc
xor
inc
dec
sbb
jle
adc
jge
push
fild
or
aam
push
inc
push
ins
jae
add
mov
add
dec
jmp
add
(bad)
cmp
push
not
add
mov
jmp
test
inc
adc
push
js
jmp
(bad)
std
push
das
mov
jo
nop
inc
mov
xor
out
fild
lock
add
inc
add
sbb
adc
inc
sub
pop
in
jne
mov
mov
enter
loop
data16
push
pop
call
xchg
lea
add
xchg
mov
sub
iret
push
xor
shr
push
or
xchg
pop
xor
or
mov
cmps
inc
lock
(bad)
adc
pop
gs
push
jne
mov
xor
cmp
call
add
cmps
mov
dec
and
push
xor
shl
add
sub
and
mov
call
imul
add
mov
sub
outs
pusha
mov
mov
cwde
inc
xor
daa
xor
add
push
sbb
rcr
add
add
loope
outs
inc
adc
fisub
add
add
jmp
add
push
add
xchg
or
aam
dec
dec
adc
sbb
(bad)
add
lods
cmp
pop
sar
adc
and
sar
sbb
adc
ret
lock
pop
inc
fisttp
xor
add
loopne
push
add
inc
fiadd
adc
xchg
sub
inc
call
or
dec
mov
add
adc
rol
out
and
aas
pop
mov
jo
test
mov
fistp
mov
and
dec
rol
add
leave
add
or
xor
mov
adc
(bad)
or
loope
and
(bad)
test
aaa
add
ret
and
stos
sbb
lea
jmp
push
xchg
adc
lds
pusha
popa
sub
loopne
rol
or
int3
scas
dec
call
dec
out
scas
fs
or
cmp
cmp
xor
or
push
xchg
imul
stos
pusha
clc
add
push
data16
shl
adc
call
add
lock
inc
(bad)
cmp
loop
push
push
jne
and
rol
add
loope
(bad)
adc
add
add
fiadd
dec
jne
or
mov
mov
and
les
add
adc
add
and
add
mov
mov
dec
lods
mov
loopne
cmovle
and
pusha
dec
shl
popa
mov
dec
sub
pop
inc
(bad)
mul
add
mov
ss
mov
sub
mov
rol
add
pusha
add
sahf
aam
iret
adc
push
inc
xor
dec
movs
pop
cwde
pop
ins
fwait
dec
mov
nop
sub
add
pop
and
add
push
mov
add
jne
pop
push
push
mov
jo
mov
cdq
jne
lock
rcl
adc
or
or
rcl
mov
sbb
pop
cli
xor
rol
adc
dec
mov
mov
add
rcr
add
adc
pop
inc
inc
push
popa
fs
inc
ror
and
push
cwde
retf
call
add
add
add
pop
loopne
pop
xor
xor
xchg
cmovnp
push
mov
inc
pop
xor
pop
(bad)
mov
cmps
add
add
in
std
mov
pop
push
lods
inc
add
xor
in
fs
popf
shl
inc
loope
add
mov
add
fdiv
pop
add
or
and
adc
pop
add
ret
pop
add
mov
mov
add
push
(bad)
std
mov
xchg
in
add
ret
mov
mov
inc
and
push
call
push
add
out
inc
inc
mov
leave
lahf
or
add
jle
ret
sbb
inc
mov
das
mov
mov
fsubr
inc
add
sbb
or
mov
adc
xchg
push
mov
test
cmp
ins
or
inc
ja
mov
call
inc
xor
test
add
mov
push
or
or
and
push
sbb
cld
add
push
add
adc
xor
xchg
pop
sub
add
cmp
loopne
sub
dec
mov
inc
fidiv
mov
add
adc
mov
add
rdpmc
mov
adc
add
seta
(bad)
or
jge
dec
sub
add
mov
lea
add
xor
add
add
aad
popa
call
call
call
cli
add
or
or
cmp
call
es
mov
cdq
or
add
sbb
hlt
add
push
aad
inc
and
pop
fdiv
jns
or
add
mov
jle
inc
dec
add
sbb
sbb
push
nop
in
sar
fadd
call
in
or
mov
add
add
loopne
mov
out
shr
xchg
add
or
jge
and
ret
mov
pop
add
pusha
addr16
add
mov
and
arpl
mov
xor
jne
ins
lahf
cs
push
test
ss
inc
jb
pop
mov
push
add
mov
(bad)
call
push
out
xor
call
jmp
enter
add
icebp
xor
add
lock
movups
pop
call
inc
inc
iret
adc
or
jne
cmp
dec
fadd
loop
gs
or
ins
pop
lea
and
dec
inc
pusha
rol
test
and
mov
adc
js
mov
mov
cmp
pop
dec
rol
mov
and
ins
mov
add
test
mov
xor
jne
inc
add
jg
shl
out
aam
mov
dec
inc
loop
pop
cmp
sub
fisttp
push
shl
addr16
enter
movups
pop
jae
ret
and
jne
and
and
jbe
cmp
adc
inc
mov
add
jmp
push
popf
cmp
mov
fadd
call
xchg
dec
sub
xor
xor
ret
add
es
inc
jmp
and
sbb
add
inc
add
hlt
xor
pop
lods
mov
mov
mov
lock
sub
rol
hlt
in
or
adc
xchg
(bad)
sbb
dec
add
inc
ret
rol
cs
cmp
push
cmp
rol
test
hlt
(bad)
call
jne
adc
add
outs
dec
jne
pop
xchg
jle
dec
or
or
xchg
loopne
sbb
mov
mov
inc
cmp
adc
jne
sub
lods
sub
cmps
jmp
sub
mov
(bad)
add
push
xor
cmp
push
repnz
jne
inc
and
repnz
push
mov
push
and
inc
cmp
ins
(bad)
dec
mov
mov
push
add
and
pop
rol
add
mov
add
rcl
or
push
call
nop
inc
xor
movs
jp
jbe
fsub
add
cmp
add
and
add
les
cmp
jmp
jne
dec
or
jb
dec
mov
sbb
mov
mov
push
js
cmp
mov
les
pop
inc
push
or
push
outs
add
jmp
or
rcl
jne
jne
adc
sub
push
dec
adc
vmread
hlt
xor
and
push
dec
and
add
in
call
pop
add
call
and
call
push
push
lods
mov
dec
dec
add
add
and
test
xor
test
scas
popf
add
add
inc
push
and
mov
fild
pop
dec
inc
jo
mov
xor
xor
push
xchg
pop
and
sub
pusha
pop
add
add
push
inc
add
je
pop
ror
cld
or
fisub
push
lea
inc
cmp
or
and
pop
fadd
sbb
add
(bad)
dec
sub
add
push
mov
add
push
cmp
add
pop
add
dec
add
rol
rcl
test
std
mov
mov
daa
add
pop
jmp
out
add
ins
outs
cmp
or
inc
jne
ret
rcl
add
mov
push
add
add
and
pop
add
xor
dec
test
pushf
lea
sbb
add
dec
and
call
or
pop
push
and
and
psubsb
or
push
sub
inc
cmp
pop
add
xor
cmps
push
mov
cli
sbb
and
sar
cdq
add
inc
mov
(bad)
call
mov
cmp
add
add
mov
(bad)
ins
push
add
jne
(bad)
hlt
push
les
adc
enter
push
jmp
pop
and
push
inc
add
xchg
xchg
add
add
add
pop
lock
inc
popf
ret
test
and
add
movs
add
mov
mov
pusha
ret
push
fstp
dec
sar
jb
inc
jle
sbb
in
jbe
or
push
ss
rcr
aad
sbb
sub
into
dec
and
cmp
dec
mov
(bad)
dec
mov
aaa
cmp
lock
jo
dec
shl
pop
mov
jae
sbb
pop
jp
push
xor
xor
push
sbb
adc
add
cmp
mov
inc
add
add
js
pop
add
xchg
rol
xchg
test
xor
add
lods
cmp
cli
cvtps2pi
(bad)
adc
jne
mov
add
inc
sahf
clc
pushf
inc
rcl
push
ja
mov
xor
or
add
ins
rol
jg
js
adc
sbb
fwait
shl
loopne
call
push
and
mov
inc
call
jns
add
sbb
jno
(bad)
jl
shr
or
mov
add
jae
or
leave
add
or
adc
push
call
push
mov
cwde
inc
lock
jmp
push
(bad)
mov
das
add
and
mov
dec
xchg
inc
loope
and
and
and
test
mov
add
aam
xor
clc
rcl
mov
and
cmp
sti
push
add
or
xor
add
and
xchg
cmp
or
fld
inc
and
mov
rol
mov
call
add
cli
bound
rcr
in
add
push
add
mov
push
daa
push
or
push
ins
mov
adc
jmp
call
add
rol
(bad)
inc
loope
dec
mov
ss
mov
mov
add
add
mov
(bad)
(bad)
sub
add
push
add
add
add
and
push
or
push
pop
jge
xchg
add
add
cmp
cmp
inc
in
outs
pop
lods
push
adc
add
adc
inc
mov
cmp
test
and
add
aas
xor
or
jne
sub
enter
add
(bad)
hlt
push
jge
add
aam
call
rol
rcr
and
jmp
adc
push
adc
pop
mov
jno
add
and
mov
xchg
jmp
sbb
cdq
inc
inc
add
add
loopne
dec
int
add
add
mov
xchg
or
stos
ins
shl
mov
cwde
(bad)
fimul
les
add
and
call
jge
add
inc
daa
cmp
movs
inc
dec
and
and
add
cmp
xor
adc
sub
add
inc
repnz
push
sbb
adc
loopne
jno
(bad)
in
add
aas
inc
cs
dec
add
adc
add
jno
cmp
mov
jge
ror
jb
mov
mov
xor
adc
fisub
and
jne
aas
add
add
inc
mov
inc
adc
jbe
pop
add
push
js
pop
mov
inc
jg
push
jb
popf
pop
xor
pop
add
idiv
push
add
push
ss
loope
xor
sub
clc
(bad)
fild
sbb
sbb
add
call
adc
add
in
and
sbb
retf
shl
pop
jne
repz
nop
xor
jne
rol
add
add
adc
and
jmp
or
mov
add
add
add
inc
fld
add
call
pop
icebp
adc
lds
inc
add
repnz
(bad)
or
add
add
add
icebp
rcr
pop
mov
cld
popa
and
mov
fidiv
cmp
sbb
and
call
inc
pop
verr
inc
add
dec
dec
sbb
call
dec
pop
sbb
call
jne
inc
push
push
cmp
call
sbb
lock
ja
sub
push
add
add
add
sub
add
or
add
inc
jge
jmp
call
or
add
add
ror
pop
(bad)
retf
mov
fadd
mov
cmp
mov
add
aam
add
mov
shl
inc
mov
xor
dec
lahf
jmp
inc
in
stos
inc
call
xor
add
add
shl
adc
sbb
imul
add
nop
add
into
test
nop
aaa
shr
jle
add
loopne
sub
xchg
add
ins
test
dec
sbb
dec
add
add
jno
add
cmp
shr
cdq
add
push
add
add
push
inc
mov
lea
push
or
rol
push
jo
in
or
jmp
add
push
dec
add
ins
call
lods
call
add
scas
sub
repz
add
push
add
outs
xor
mov
sbb
add
and
xor
sbb
cmps
jno
mov
adc
test
jo
dec
push
nop
push
add
dec
xchg
add
push
(bad)
in
xor
add
jecxz
add
add
loop
or
call
arpl
shl
call
inc
rcr
or
push
(bad)
jo
rol
push
inc
rol
add
add
lock
jns
call
dec
test
fiadd
xor
or
mov
or
xchg
add
push
add
xchg
call
jne
add
ret
(bad)
pop
(bad)
add
add
test
or
adc
rol
dec
(bad)
cwde
pop
mov
imul
add
fmul
fs
sbb
add
adc
cld
ds
xor
add
lock
inc
add
or
mov
and
add
call
or
mov
and
fsub
jne
jo
(bad)
int3
adc
add
push
cmp
loop
cmp
mov
aam
add
das
imul
sub
call
lods
xor
inc
inc
mov
add
mov
and
inc
inc
and
adc
push
xor
jo
dec
push
dec
movs
push
push
pop
ins
lock
call
sub
rol
loopne
clc
add
pop
mov
popa
add
adc
xor
or
and
gs
cmp
push
and
jne
sub
(bad)
adc
fs
sbb
pusha
sub
add
jge
pop
add
adc
xor
mov
fist
jns
sbb
gs
or
adc
xor
mov
adc
inc
and
nop
inc
add
pusha
cmps
add
add
cmp
mov
push
add
push
sub
nop
pop
std
add
mov
jne
ins
xchg
mov
ja
add
push
inc
add
adc
stc
lods
or
push
and
pop
lock
pop
jl
mov
mov
(bad)
pusha
add
cdq
inc
xchg
fsubr
aaa
sbb
jnp
jo
inc
les
mov
jb
xchg
ret
push
add
mov
adc
fisub
xor
xchg
inc
add
add
lahf
pop
push
popf
inc
test
daa
mov
push
dec
mov
(bad)
jo
test
xor
les
mov
je
xchg
push
pop
mov
cmp
ret
imul
push
outs
add
lds
test
add
mov
add
xor
push
pop
pop
nop
fucomp
mov
add
neg
pop
add
es
push
repnz
nop
stc
enter
pop
ret
add
sbb
push
or
call
mov
adc
inc
sbb
mov
mov
inc
clc
mov
xchg
call
cmp
mov
push
add
cmp
push
sbb
mov
pushf
call
mov
add
or
pusha
add
add
ret
add
lea
inc
ret
popf
xchg
push
sub
add
lea
je
add
nop
mov
mov
and
sbb
fidivr
test
pop
sub
xor
js
(bad)
or
mov
sbb
ins
mov
jae
add
jmp
or
jge
mov
push
add
mov
and
pop
pop
add
xor
fadd
sub
jecxz
xor
jb
fild
push
add
push
push
and
mov
test
jmp
add
mov
mov
mov
pop
push
mov
add
jp
or
push
inc
pushf
adc
and
enter
push
call
outs
dec
mov
inc
mov
add
aam
mov
dec
sub
jl
add
mov
rol
pusha
cdq
inc
movs
pusha
mov
pop
mov
inc
imul
push
call
mov
add
shl
ret
add
mov
add
xchg
cmp
push
bswap
call
popf
push
aaa
add
add
sbb
aas
add
add
clc
add
pop
sub
mov
shl
shl
mov
sub
mov
push
add
icebp
fstp
inc
(bad)
jne
or
call
sar
and
mov
rol
in
add
jo
xor
adc
sar
jmp
gs
xor
add
add
repnz
je
add
inc
xor
sbb
shl
nop
sub
call
sbb
jmp
in
loope
cmps
pop
add
mov
test
jne
add
mov
mov
test
xor
push
or
inc
ror
dec
pop
clc
call
rol
imul
loopne
stc
inc
jmp
or
add
add
add
and
push
or
adc
icebp
inc
mov
add
rcr
add
push
inc
adc
fisttp
inc
dec
call
dec
sub
and
and
jmp
and
sbb
add
(bad)
call
dec
mov
mov
int3
sub
call
mov
add
add
ret
adc
ds
mov
add
mov
or
add
push
(bad)
loopne
ror
cmp
xor
adc
adc
inc
mov
xlat
and
fwait
push
add
add
inc
pop
(bad)
mov
dec
inc
add
aam
mov
(bad)
out
push
sub
add
mov
fucomp
mov
xchg
push
mov
xor
pusha
inc
lods
in
std
pop
mov
add
jmp
sahf
inc
dec
push
adc
push
cmp
sub
cmps
inc
mov
mov
sbb
cmp
xor
aad
push
add
inc
cmp
cmp
pop
adc
add
loope
or
add
xor
ss
cmp
adc
retf
ds
add
mov
push
add
xor
mov
inc
sbb
jmp
dec
adc
ud0
xor
out
adc
fsub
pusha
add
(bad)
gs
call
les
adc
pop
dec
mov
add
sti
and
and
push
jne
inc
add
add
xchg
mov
into
int3
in
add
call
dec
adc
pusha
dec
mov
push
lds
xor
pop
hlt
push
call
dec
dec
fdiv
push
or
mov
int
mov
push
stos
mov
mov
jnp
adc
adc
jno
add
dec
inc
nop
inc
hlt
lods
imul
dec
xchg
call
push
call
pop
gs
aam
dec
or
test
aaa
xchg
inc
ror
(bad)
inc
call
in
les
(bad)
push
pop
xchg
xchg
mov
cmovg
mov
dec
nop
add
pop
inc
call
inc
add
push
call
mov
or
xor
test
or
mov
xor
add
adc
pusha
call
inc
out
add
ja
dec
test
fisub
push
aas
pop
push
pushf
sbb
ret
ret
xor
xor
mov
add
push
add
add
xchg
inc
inc
movs
inc
push
mov
or
add
xor
dec
adc
fisttp
fidivr
sbb
mov
mov
add
add
lds
push
dec
in
fsubr
inc
std
push
or
outs
inc
push
xchg
or
xor
jo
dec
inc
push
(bad)
aam
xchg
and
lea
daa
inc
shl
lds
add
idiv
or
hlt
mov
xchg
inc
and
ror
enter
call
push
xor
mov
adc
test
mov
xor
not
popa
inc
mov
and
inc
or
hlt
rcl
push
xor
fwait
mov
leave
dec
jne
sti
pop
dec
and
adc
test
pusha
push
mov
sbb
inc
bound
call
add
xor
je
xchg
add
push
fisttp
and
xchg
add
cmp
shl
icebp
push
inc
icebp
sub
pop
add
sbb
push
xor
jmp
dec
sbb
pusha
or
addps
loop
test
pop
pop
mov
xor
gs
sbb
mov
call
jne
dec
fmul
jo
add
and
inc
add
pop
or
or
or
add
add
mov
mov
popa
mov
push
add
add
add
mov
xor
das
inc
or
inc
and
push
xor
fdivr
add
das
je
iret
and
or
or
or
adc
add
mov
pop
fmul
dec
mov
cmp
jne
shr
xchg
add
add
mov
addr16
mov
or
aaa
sub
jp
and
mov
add
mov
fisttp
sub
mov
call
movs
push
xor
movs
jmp
adc
rcl
call
add
xchg
cs
adc
adc
(bad)
in
mov
inc
adc
call
dec
out
push
add
jne
pop
rol
add
inc
rol
xor
pop
dec
xor
(bad)
jns
(bad)
inc
adc
push
jl
mov
nop
sub
jmp
add
test
push
sub
and
fbld
scas
inc
bound
sar
call
push
int
add
mov
add
mov
push
sbb
or
mov
inc
inc
sbb
add
dec
pop
and
sbb
jno
imul
push
shl
mov
pop
and
mov
or
jne
jge
push
and
and
dec
ins
xchg
push
(bad)
(bad)
ror
add
sub
mov
ror
and
push
mov
lds
nop
push
dec
mov
or
xchg
or
sub
xchg
xor
jno
movs
mov
sub
add
loopne
and
adc
call
jge
add
and
rol
xor
mov
mov
xchg
fadd
pusha
xor
push
or
adc
or
sbb
add
jno
dec
call
cmp
(bad)
jle
stc
or
add
push
sub
xor
add
adc
add
adc
dec
out
mov
add
add
mov
push
add
inc
push
jmp
(bad)
loop
add
jns
pop
aam
sti
mov
fsub
loopne
mov
mov
add
or
and
xchg
lods
bound
(bad)
div
pop
punpckhbw
add
mov
or
jle
sub
mov
adc
add
add
pop
test
mov
push
call
sbb
ds
scas
or
pop
pop
add
das
add
push
add
fcomp
test
add
push
sub
pop
push
jnp
xor
add
pop
mov
mov
call
fadd
hlt
inc
popf
prefetcht0
cmp
mov
push
push
pop
add
inc
xchg
add
add
inc
add
stc
push
jne
(bad)
fs
out
pop
in
arpl
push
shl
or
mov
mov
mov
fdiv
xor
xor
adc
daa
ret
push
or
not
inc
xchg
add
mov
call
imul
sbb
add
shr
jne
test
add
cdq
sbb
mov
push
add
mov
(bad)
stc
add
mov
xor
pop
inc
pop
inc
push
add
and
scas
push
arpl
add
and
daa
or
xor
inc
shl
xor
sbb
add
sub
add
shl
outs
pusha
inc
adc
sub
add
das
pusha
inc
add
xor
add
sbb
cmps
xor
add
or
inc
or
pop
mov
cmp
(bad)
mov
pop
xor
jne
add
adc
cmp
dec
add
in
add
and
add
pop
push
mov
push
cld
repnz
rcr
add
daa
jp
ret
and
call
lock
mov
or
and
sbb
add
test
fidiv
nop
add
add
add
ror
scas
inc
lock
add
pop
push
ficom
pop
mov
mov
enter
add
inc
icebp
or
adc
add
rol
xor
or
mov
push
dec
add
add
(bad)
xlat
lds
mov
in
mov
jmp
and
cmp
outs
std
jne
pop
or
xor
add
cmp
xor
and
clc
and
push
adc
pusha
sub
inc
push
mov
add
addr16
sbb
add
pop
outs
push
enter
dec
mov
stos
add
add
int
pop
cmp
pusha
rol
pusha
in
cmp
ror
pop
adc
cmp
mov
dec
pop
mov
lods
and
call
mov
(bad)
cmp
sub
sub
xlat
mov
mov
mov
ret
mov
loopne
add
or
add
or
inc
setnp
cmp
ret
push
add
push
or
inc
shl
aaa
aas
arpl
xor
test
push
sub
cwde
frstor
add
retf
imul
sbb
sar
inc
adc
aas
loopne
or
mov
add
push
jno
or
ins
add
or
add
cmp
add
add
inc
jb
xor
xor
test
inc
rol
out
inc
call
mov
mov
test
popa
adc
pop
lea
fldenv
mov
add
inc
mov
mov
pop
push
add
add
psrlq
popa
add
add
lods
inc
jo
dec
rcl
(bad)
adc
push
push
dec
call
pop
and
jne
pop
add
add
ins
mov
add
test
xchg
push
loope
mov
pop
pop
add
adc
test
in
and
sub
fsub
xor
adc
inc
or
jbe
or
dec
inc
pop
add
inc
mov
add
int
fucomi
lds
adc
add
add
or
add
and
sbb
clc
inc
dec
lmsw
sbb
inc
pusha
add
xor
rcl
(bad)
rol
mov
add
jmp
call
loopne
addr16
add
fmul
arpl
push
pop
mov
clc
add
push
movs
adc
add
call
and
mov
call
adc
inc
sub
inc
das
out
into
add
aad
inc
ror
mov
or
fild
stc
loopne
je
or
mov
sar
or
sub
lods
xchg
push
add
and
add
and
mov
add
push
(bad)
loope
add
push
inc
cli
jge
adc
mov
(bad)
xor
pop
pop
sbb
xor
add
pop
add
rol
push
and
jb
jmp
lock
xor
add
inc
and
add
imul
cmp
enter
lods
(bad)
dec
test
adc
and
rol
in
push
dec
popa
sub
(bad)
cli
mov
xchg
inc
push
dec
cs
xor
pusha
inc
mov
jmp
test
xchg
loop
sub
mov
out
call
call
add
cwde
pusha
mov
repnz
pop
xor
inc
test
inc
pop
mov
or
pop
sbb
pop
aaa
dec
jge
pusha
int3
(bad)
mov
mov
adc
and
or
push
pusha
push
push
les
cmp
xor
add
xlat
sbb
xlat
cmp
inc
pop
push
add
add
cmp
fiadd
mov
add
cmp
xchg
inc
and
add
mov
add
and
sbb
jmp
pop
shl
neg
and
and
pusha
add
push
or
pop
arpl
push
inc
add
xchg
ret
addr16
scas
inc
lea
retf
or
data16
test
xor
nop
jmp
daa
push
pop
in
dec
pusha
jge
xchg
inc
or
pop
adc
jle
sbb
outs
xchg
push
add
mov
pop
add
inc
add
lock
push
inc
out
xchg
push
mov
mov
mov
and
add
adc
add
mov
(bad)
xchg
aas
call
add
fsub
push
add
push
add
xor
lahf
cmpxchg
add
add
fxch
xchg
(bad)
jmp
lea
mov
adc
mov
mov
and
push
bound
inc
and
jo
add
add
ror
sti
xor
add
add
push
test
add
mov
add
or
push
mov
pop
push
add
and
mov
jecxz
jmp
cmp
addr16
in
push
add
jmp
add
js
add
add
add
movs
call
mov
retf
jo
mov
add
add
add
push
inc
add
dec
inc
add
test
add
or
(bad)
sbb
or
in
xor
out
fdiv
push
push
sub
aad
mov
mov
adc
inc
addr16
mov
adc
add
xor
add
loopne
adc
pop
pop
xor
add
data16
call
and
add
add
out
nop
xor
movs
jp
clc
add
shl
or
push
call
xchg
inc
pmulhuw
adc
jl
adc
dec
rol
ja
mov
(bad)
xchg
out
cmp
call
add
gs
dec
add
or
scas
inc
movs
jbe
jmp
add
inc
fstp
rdtsc
lods
pop
cmp
jbe
inc
dec
clc
gs
loop
inc
dec
mov
inc
clc
adc
push
lahf
cmp
xlat
add
inc
add
sub
call
pop
jo
mov
add
sbb
add
sti
clc
ja
out
daa
scas
retf
call
sub
and
dec
test
adc
push
sub
lock
xor
push
and
xchg
inc
jne
dec
mov
push
nop
mov
jg
add
push
outs
push
inc
jo
or
sbb
mov
or
sub
test
inc
hlt
sbb
push
les
test
add
mov
add
inc
popa
dec
xlat
mov
into
sub
jo
enter
loop
dec
and
ret
loopne
add
das
enter
or
xor
jnp
call
sub
push
leave
verr
xor
test
fnstenv
adc
pop
dec
push
jne
data16
add
mov
fdiv
mov
(bad)
mov
pop
sub
push
xor
adc
add
test
push
mov
dec
or
mov
fsub
jle
push
les
add
inc
push
mov
test
shr
push
jp
mov
jecxz
ret
enter
mov
dec
xchg
add
or
sahf
add
fmul
dec
push
ret
imul
inc
pushw
stos
sahf
add
ror
add
add
sbb
adc
pop
xchg
push
push
inc
mov
(bad)
das
ins
push
add
pusha
add
jno
xor
add
(bad)
jecxz
gs
xchg
rol
xor
mov
inc
push
sbb
rcr
mov
cmp
inc
push
or
add
mov
inc
sub
dec
inc
repnz
jne
or
inc
push
pushf
data16
inc
popa
dec
or
mov
sbb
and
pop
mov
loopne
test
push
add
add
sbb
in
popa
mov
jge
sub
adc
sub
loop
popf
fiadd
add
xor
push
mov
fmul
js
call
mov
xor
cmp
push
test
sub
add
int3
push
popa
push
imul
and
les
ins
xor
adc
mov
and
xor
inc
mov
dec
call
cmp
dec
mov
dec
icebp
loope
jne
xorps
add
fs
or
call
pushf
mov
add
(bad)
adc
popf
movs
(bad)
mov
add
movs
add
add
add
cwde
out
ins
add
bound
fmul
add
add
push
push
push
xor
rcl
cmp
and
out
add
add
mov
pop
call
cmp
sbb
jl
and
sbb
and
inc
es
add
not
outs
add
add
jo
mov
adc
mov
retf
cmp
or
add
dec
js
setns
jo
les
call
add
call
arpl
test
add
sub
adc
inc
fwait
add
add
pop
dec
jne
xchg
dec
shr
mov
and
push
dec
mov
test
inc
add
sbb
jge
mov
pushf
mov
push
ins
xchg
sbb
mov
or
adc
imul
add
fistp
ss
sar
or
jmp
push
or
sub
pop
push
mov
inc
dec
jecxz
add
pop
or
mov
add
(bad)
xor
mov
test
push
sub
and
adc
push
add
mov
es
inc
mov
adc
dec
add
add
mov
and
xor
cs
mov
add
or
pop
sub
push
leave
sub
and
inc
ror
mov
add
ja
ins
pop
or
jg
aaa
xor
movs
push
and
mov
push
mov
inc
and
int
(bad)
sub
add
adc
jg
shl
mov
push
call
je
mov
(bad)
call
xchg
daa
push
jo
cmp
call
ltr
loope
push
in
loopne
add
rcl
inc
add
inc
or
stos
inc
xor
nop
bound
call
or
(bad)
shl
mov
das
dec
popf
add
mov
popf
push
add
arpl
xor
inc
cmp
les
rcl
sub
push
out
enter
push
inc
lods
add
mov
mov
add
cmp
push
inc
mov
add
call
dec
or
(bad)
jne
stos
add
xchg
mov
push
and
daa
jbe
pop
pop
sub
pcmpeqw
jp
(bad)
stc
ror
jmp
repnz
mov
clc
or
add
add
pop
push
(bad)
dec
xor
cmp
add
sbb
lea
add
bound
fsubr
vmptrst
mov
fidiv
inc
retf
jo
add
push
out
jecxz
and
(bad)
push
inc
sub
lock
jno
fld
sbb
xor
mov
mov
test
in
sub
jmp
shl
mov
xchg
adc
jp
add
add
mov
int3
push
dec
test
adc
cmp
pop
and
sub
jmp
inc
inc
jmp
sub
leave
shl
inc
push
and
pop
push
cwde
push
inc
pusha
mov
mov
inc
mov
cmp
mov
jo
inc
add
daa
inc
xor
or
push
popa
mov
add
dec
xor
test
dec
and
mov
inc
retf
dec
pop
add
loopne
push
pusha
jp
add
inc
inc
and
jmp
sbb
jo
add
ins
mov
push
inc
mov
xchg
(bad)
or
ret
mov
enter
(bad)
sbb
sub
add
add
push
mov
sahf
or
aaa
add
call
jo
inc
cld
call
push
dec
sub
dec
xchg
add
and
pop
leave
adc
push
call
jo
call
jne
add
out
popa
call
mov
call
cmp
out
mov
add
or
add
or
mov
add
shr
mov
nop
je
pusha
add
pop
rcl
adc
mov
icebp
xadd
sub
inc
add
call
out
add
push
int
lock
dec
mov
rol
xchg
adc
jo
add
push
aas
adc
jl
adc
add
mov
cmp
mov
call
test
or
add
or
rcl
lods
add
fcompp
mov
stc
icebp
fisub
mov
popf
shl
and
jo
inc
jns
sub
add
lods
xor
or
fs
cmps
in
dec
pusha
(bad)
shr
cmp
(bad)
jecxz
sub
sub
mov
add
rol
add
dec
clc
jmp
imul
add
push
sub
add
ins
add
inc
imul
add
inc
(bad)
dec
xchg
stos
aaa
mov
adc
call
mov
jmp
mov
ss
loopne
arpl
aam
add
xchg
cmp
cmps
jmp
psrlq
rol
add
cwde
push
inc
xor
test
adc
or
and
adc
mov
push
pusha
cld
pusha
add
mov
dec
push
arpl
arpl
dec
add
add
arpl
movs
push
call
hlt
pop
and
adc
add
pop
or
inc
push
test
sbb
call
xor
aam
cwde
inc
ror
xchg
push
lock
ret
add
stc
popa
push
add
popa
inc
adc
dec
shl
push
mov
fimul
rol
add
ret
inc
lock
loope
add
sbb
lock
push
wrmsr
dec
mov
sub
inc
or
or
push
adc
jo
cwde
sub
sar
add
rol
sbb
add
(bad)
mov
jmp
or
xor
add
add
add
push
adc
push
push
xchg
add
or
clc
sbb
call
cmp
mov
loope
add
mov
xchg
inc
add
jge
adc
mov
xor
clc
adc
dec
adc
imul
loopne
adc
sbb
add
leave
imul
movs
mov
or
add
cdq
add
clc
and
into
add
xor
dec
mov
in
stc
xor
pop
mov
lods
jmp
imul
push
add
add
mov
add
call
adc
and
test
sbb
mov
(bad)
xor
pop
inc
mov
sub
add
loopne
and
iret
in
and
mov
mov
xchg
add
xchg
push
xchg
bound
cmps
xor
inc
fimul
retf
mov
add
test
push
lea
call
mov
pop
inc
mov
cmovne
inc
jne
test
mov
dec
push
sbb
sbb
ins
(bad)
push
mov
add
fld
and
aas
add
(bad)
add
rcl
ret
and
hlt
push
or
mov
(bad)
or
push
add
cmp
test
adc
add
mov
add
jmp
jge
dec
and
push
test
jb
add
rol
and
loopne
mov
add
(bad)
inc
stos
popf
add
mov
add
xor
mov
dec
jno
mov
jae
inc
or
dec
dec
jns
and
rol
push
or
aaa
add
jb
dec
add
add
les
mov
dec
jge
inc
call
add
es
inc
les
push
lods
add
jmp
add
clc
lea
jmp
inc
sub
dec
test
add
adc
mov
sbb
jg
(bad)
scas
xchg
add
add
mov
jne
add
add
and
dec
arpl
pop
mov
and
dec
jmp
lds
call
mov
add
add
pop
add
add
mov
add
pop
lock
loop
call
(bad)
dec
xchg
jo
add
jbe
mov
ror
sbb
arpl
dec
and
cdq
adc
xchg
add
add
daa
movs
pop
pop
jmp
add
fadd
xor
inc
inc
and
xor
aas
inc
nop
(bad)
pusha
jmp
mov
xchg
and
or
sbb
add
pop
or
mov
fadd
adc
or
adc
mov
add
test
jne
sbb
pop
push
inc
sub
adc
mov
inc
xor
enter
mov
hlt
adc
add
fcom
(bad)
add
add
inc
test
jo
inc
mov
fdiv
rcl
add
in
sub
sub
adc
push
loopne
repz
cs
jle
pop
mov
enter
pusha
inc
sub
in
mov
push
jp
bound
sub
mov
add
lock
and
push
les
xlat
int3
data16
ret
aaa
pop
mov
outs
inc
add
add
add
jle
add
jb
adc
bound
int3
js
shr
pop
add
mov
push
mov
in
call
lods
inc
add
inc
mov
fwait
push
stos
dec
shr
inc
add
push
add
add
add
add
pusha
xor
add
or
jno
rol
stos
aas
xchg
jmp
dec
cld
add
test
add
hlt
in
and
dec
push
and
retf
jbe
call
sbb
mov
imul
(bad)
popf
call
add
test
add
and
add
mov
xchg
add
xchg
push
add
rol
add
add
inc
test
call
add
arpl
add
push
jg
xchg
cmp
loope
jmp
xchg
test
mov
clc
fiadd
add
dec
dec
cmc
add
adc
xor
add
mov
test
push
add
and
and
mov
or
add
fst
add
imul
xor
pop
adc
sub
cmp
xchg
or
jo
test
cld
mov
inc
sbb
push
jo
adc
and
add
and
mov
and
dec
push
call
mov
xor
xor
add
add
verr
jb
pop
fsubr
or
sbb
mov
js
and
mov
push
mov
fstp
shr
and
mov
and
add
daa
pop
xor
idiv
adc
clc
push
call
xor
test
xor
mov
push
rol
scas
ss
mov
push
or
add
sub
push
adc
dec
push
call
movs
nop/reserved
push
jbe
loop
add
add
lock
fadd
dec
fld
sar
dec
ret
push
mov
or
inc
xchg
sub
add
(bad)
mov
inc
or
add
add
inc
mov
rol
lea
(bad)
mov
rcr
xor
dec
call
add
add
add
lea
add
inc
mov
add
add
add
leave
add
add
add
push
test
jne
mov
or
sub
add
adc
fild
push
and
repz
or
aas
xchg
add
popa
cmp
add
xchg
sahf
add
mov
mov
sub
and
adc
dec
(bad)
js
add
(bad)
clc
add
cmp
inc
leave
add
(bad)
push
adc
add
add
or
loopne
lock
add
data16
add
inc
or
stos
push
add
jns
hlt
stc
icebp
mov
add
add
call
repz
inc
and
cmps
xor
add
and
mov
pop
clc
clc
xor
sub
sbb
and
nop
mov
jnp
sbb
mov
push
adc
add
add
dec
fst
jne
add
add
call
les
leave
push
test
or
add
mov
sgdtd
push
and
adc
push
retf
add
call
je
icebp
push
in
mov
cs
jge
jmp
jge
add
pusha
inc
hlt
add
mov
ins
(bad)
dec
adc
dec
cmc
add
fisttp
jno
add
call
popa
jne
call
dec
test
pop
scas
add
cmp
push
or
adc
and
inc
dec
and
sbb
movzx
add
adc
(bad)
loop
inc
jmp
sub
sub
dec
loope
pop
add
rol
dec
cmp
push
(bad)
ror
sbb
ja
add
add
add
add
jmp
jge
mov
add
(bad)
call
pop
bound
sar
or
fistp
or
rcl
movs
add
sub
xor
adc
pop
jnp
add
and
add
or
push
pop
add
adc
push
add
push
cmp
je
mov
call
out
or
sub
mov
enter
fiadd
pop
lock
or
add
inc
dec
add
add
mov
jmp
push
add
mov
and
adc
push
je
xchg
mov
pushf
lock
cmp
cmp
and
movs
sahf
add
test
call
push
or
push
add
je
mov
add
test
jae
test
call
mov
aas
and
inc
xor
and
add
or
xchg
mov
(bad)
xor
sbb
push
dec
ins
test
mov
xchg
inc
xchg
dec
mov
inc
je
iret
mov
movs
in
push
mov
inc
jmp
rdseed
and
sbb
punpckhbw
sub
sbb
push
push
add
rcl
jnp
repnz
add
or
xchg
add
mov
add
pop
and
pusha
push
add
mov
push
mov
add
push
cmp
cmp
(bad)
xchg
ror
add
mov
mov
jb
ins
cwde
mov
add
jle
je
rcl
pop
xchg
push
dec
int3
push
push
ficom
mov
mov
add
cmp
push
cmp
add
push
jmp
mov
dec
stc
push
inc
adc
ins
mov
hlt
mov
push
add
mov
xor
xor
scas
mov
push
sub
xlat
nop
add
dec
sar
shl
and
add
sbb
or
es
loopne
pop
push
add
pop
sub
popa
push
and
mov
jo
sar
dec
mov
push
add
imul
or
push
dec
add
aaa
push
call
jmp
inc
test
dec
rcr
add
mov
rcr
mov
call
and
inc
mov
dec
and
loopne
push
push
pop
inc
add
inc
das
jmp
xchg
mov
push
add
inc
or
loopne
dec
and
jne
add
add
ja
dec
inc
inc
or
xor
lock
sub
addr16
push
add
pop
adc
sahf
xor
jge
sbb
lock
mov
dec
enter
add
xchg
push
sub
(bad)
mov
mov
jbe
xor
xchg
push
dec
mov
add
shr
bound
maxps
add
inc
test
js
push
add
sub
mov
ja
and
in
push
jne
ret
jne
and
(bad)
aad
add
fild
xor
jns
mov
mov
add
pop
inc
add
push
movaps
sub
test
fild
sbb
hlt
dec
xchg
enter
aaa
mov
add
add
gs
or
inc
inc
inc
mov
adc
add
or
inc
jo
xor
push
pextrw
sbb
call
adc
add
push
push
loopne
dec
test
and
shr
pusha
mov
rol
cmps
test
xor
inc
stos
mov
add
sbb
aad
mov
lods
sub
pusha
aad
punpckhbw
adc
arpl
jne
cmp
add
fadd
jge
and
and
mov
cld
mov
pop
push
inc
or
add
mov
xchg
mov
and
dec
(bad)
sub
inc
cmp
sar
jns
inc
sub
test
popf
mov
add
cmp
pop
dec
dec
dec
or
push
loopne
(bad)
aaa
mov
mov
lock
jbe
push
add
dec
call
mov
adc
call
test
add
add
cwde
cli
dec
xor
add
add
cmp
psubsw
pop
xchg
sbb
push
jno
pop
lea
push
mov
jecxz
push
mov
add
test
ins
add
jge
mov
ss
adc
movs
pop
test
or
cs
add
add
add
dec
les
outs
add
loopne
jle
push
repz
add
data16
pop
xor
inc
adc
inc
adc
sbb
mov
loopne
inc
pusha
push
add
mov
ud2
or
push
mov
mov
sub
mov
lods
jge
test
inc
inc
ins
sti
(bad)
clc
sar
inc
(bad)
push
movs
shl
mov
add
inc
adc
call
cmp
add
or
(bad)
jmp
dec
(bad)
jne
lea
jle
push
fadd
and
add
fcomp
call
(bad)
loope
mov
adc
hlt
ret
push
jne
and
inc
inc
ret
mov
not
je
das
dec
add
sbb
hlt
add
push
add
cmp
pop
push
push
mov
clc
lar
jge
rol
stos
xor
dec
mov
setge
dec
add
add
aad
call
push
mov
inc
push
jb
inc
call
cmp
loop
jne
ds
sub
pop
push
sbb
sahf
(bad)
in
dec
jne
inc
dec
add
pop
lds
mov
mov
xlat
movs
pop
sbb
lds
adc
push
inc
adc
push
add
inc
cmpxchg
mov
add
add
mov
loope
xchg
pop
mov
arpl
leave
add
jge
or
push
add
and
pop
add
(bad)
and
add
add
add
ja
mov
add
xor
iret
ins
dec
inc
push
cmp
add
dec
ja
add
in
sub
leave
imul
jecxz
add
add
pop
mov
add
add
ins
lea
call
mov
add
add
add
add
mov
or
sub
add
add
add
mov
ret
mov
add
test
retf
fcmovnu
push
add
add
call
inc
dec
jp
mov
add
outs
clc
ins
add
push
mov
push
test
call
rol
leave
test
test
push
mov
cvtps2pi
push
and
inc
pop
(bad)
inc
inc
pop
pop
add
mov
and
add
pop
leave
add
test
ins
add
(bad)
hlt
mul
rol
jne
mov
mov
popa
mov
add
jno
jno
mov
adc
sub
inc
lea
mov
call
inc
add
lea
sub
xor
rol
jbe
add
mov
inc
sub
add
adc
mov
and
loop
push
out
call
xor
pop
fs
rol
inc
sbb
pop
add
xchg
jno
dec
retf
dec
add
pop
inc
jl
aam
add
and
adc
ds
call
xor
loopne
(bad)
call
add
xchg
push
add
xchg
mov
(bad)
enter
loop
sub
cmp
fnstcw
shl
lock
ins
loopne
add
add
aam
leave
and
and
or
repz
call
in
add
sbb
fild
or
imul
add
add
sar
jne
add
mov
add
cmp
out
fucomp
dec
add
add
add
mov
sbb
jge
pop
mov
pop
add
loopne
fist
adc
cld
loopne
popf
or
call
pop
pop
add
and
and
and
aaa
add
push
push
cmp
dec
call
icebp
jl
mov
push
sbb
jo
test
pop
push
inc
mov
add
or
add
unpcklps
cmp
and
mov
rol
push
push
vmread
push
mov
dec
out
push
stos
sub
mov
add
mov
mov
fst
sbb
or
inc
jmp
inc
in
call
mov
inc
loop
test
mov
add
and
pop
ret
xchg
dec
mov
mov
pop
add
add
push
mov
in
mov
mov
(bad)
or
jns
cmp
mov
pop
pop
outs
add
cmp
adc
mov
push
adc
jne
push
cs
and
cmp
popf
lods
psubw
mov
nop
jmp
add
add
sbb
gs
pop
(bad)
lea
adc
xor
add
popf
pop
mov
mov
or
add
dec
push
dec
popa
or
xchg
add
sub
(bad)
fbstp
mov
push
add
pusha
retf
add
mov
popa
add
add
enter
imul
add
adc
inc
dec
add
lock
dec
addr16
jo
movs
add
and
mov
sub
mov
and
add
outs
jge
iret
add
mov
or
out
call
lea
lea
push
mov
sub
add
xchg
or
add
test
loopne
pop
enter
add
dec
inc
dec
add
pop
sub
mov
sub
xchg
add
sub
mov
(bad)
jmp
sbb
or
add
add
and
adc
ss
add
dec
das
add
mov
lock
shl
jge
(bad)
stc
dec
(bad)
repnz
add
and
call
mov
push
or
call
add
add
and
push
sub
sub
adc
popf
mov
bound
sub
sbb
mov
xor
outs
add
div
add
outs
dec
jo
adc
sar
ss
jo
je
shl
mov
fstp
adc
js
add
lods
and
add
nop
push
leave
push
add
or
call
and
push
shr
clc
or
sub
bound
add
add
pop
mov
lock
jbe
add
push
push
add
push
xor
push
pop
sbb
push
or
push
cmp
icebp
test
sbb
fistp
add
pop
inc
pop
gs
inc
outs
add
push
add
jne
inc
add
cwde
mov
(bad)
jmp
out
mov
adc
pop
mov
std
jl
cwde
faddp
test
mov
in
out
dec
jp
or
mov
mov
xor
cmp
push
ja
repz
retf
into
cmp
or
pusha
push
scas
mov
cmp
rol
cli
inc
ins
mov
push
loop
ror
adc
push
in
outs
adc
pop
jne
jmp
sbb
rcl
test
dec
sbb
xchg
fs
and
sub
std
retf
pop
push
ins
ins
enter
les
aaa
mov
push
cli
mov
or
jle
pop
in
jmp
cmp
xchg
test
jp
adc
cmp
push
nop
jl
fld
int
sbb
cmps
mov
push
xor
xchg
(bad)
fcomip
sbb
jle
jecxz
mov
imul
repz
pop
int
cwde
cdq
xor
pop
adc
mov
or
pop
pop
mov
outs
int
loope
xor
out
ja
xlat
imul
dec
(bad)
bsr
mov
mov
adc
pop
jbe
xchg
fstp
movs
mov
dec
or
inc
(bad)
mov
mov
(bad)
cs
int3
rcr
mov
in
sbb
ret
pop
aam
call
adc
push
mov
arpl
(bad)
in
mul
mov
add
add
jo
fmul
cmc
imul
pushf
add
js
sbb
mov
clc
adc
jb
scas
lods
mov
movlpd
or
xchg
push
jmp
sbb
add
loop
out
dec
push
mov
outs
imul
xor
lock
adc
xchg
fsubr
sub
(bad)
push
xor
retf
scas
icebp
aam
js
out
mov
stos
sbb
pop
jmp
fstp
dec
and
cmp
add
in
or
cli
aaa
fs
pop
mov
push
sbb
jne
clc
jnp
push
inc
fcom
jo
popf
jge
jmp
hlt
mov
gs
sub
push
out
mov
rcr
stos
add
xlat
sub
xchg
adc
mov
retf
test
fxch
es
mov
sbb
(bad)
dec
cmp
jl
cmp
xchg
addr16
pop
js
lods
and
test
shl
rol
neg
mov
mov
ss
xor
jnp
mov
xchg
xchg
repz
sbb
ins
mov
aas
mov
xor
xchg
xchg
aaa
mov
xchg
push
in
pop
mov
cdq
sbb
fs
fldcw
xchg
and
add
mov
xchg
and
jle
mov
sbb
into
out
loopne
dec
jge
repz
sub
pop
adc
movs
test
cli
loop
xchg
inc
fstp
(bad)
cmps
inc
mov
dec
mov
test
sbb
and
xor
aas
mov
adc
ret
mov
out
test
cdq
outs
push
lds
fwait
mov
mov
lods
and
xor
test
adc
int
jnp
sbb
adc
pop
nop
cmp
sub
(bad)
adc
mov
or
sub
jg
add
mov
cmc
fcomp
xor
adc
or
in
mov
ret
xchg
pushf
fadd
sar
nop
les
ss
inc
dec
out
and
sub
into
arpl
ja
imul
shl
mov
sbb
adc
mov
fwait
inc
cmp
(bad)
lds
and
stc
fcomp
or
call
sbb
outs
scas
jns
sbb
add
adc
jle
jae
stos
aaa
push
js
add
cmp
pushf
gs
mov
daa
mov
add
dec
enter
in
or
nop
cmp
add
mov
mov
dec
mov
or
dec
push
xlat
sbb
inc
fdiv
mov
retf
aas
mov
cmp
jg
cmp
xor
sbb
pop
mov
jmp
mov
fadd
mov
inc
inc
(bad)
mov
pusha
mov
test
dec
sub
cmp
lahf
xlat
xchg
pop
cs
ja
scas
xchg
loopne
pusha
xchg
(bad)
rol
add
xchg
test
bound
fadd
push
(bad)
jmp
xchg
cmp
jmp
push
mov
xchg
sbb
jb
sbb
iret
push
outs
add
mov
pop
fdiv
stos
add
jmp
test
mov
cmps
ins
lods
scas
push
mov
sub
out
movs
pop
movs
es
outs
cmps
ficomp
outs
jp
popa
jp
pop
cmp
mov
add
xchg
and
xchg
fbld
nop
jo
loope
inc
xor
cmp
push
mov
mov
xchg
jns
(bad)
int
test
and
sbb
arpl
xor
pushf
jge
cmp
mov
mov
push
loope
xor
sar
xor
jmp
das
fcmovnbe
outs
or
aas
sub
shr
ficom
mov
mov
out
outs
sub
imul
hlt
test
push
stos
inc
pop
loop
std
pop
mov
in
or
jmp
cmps
adc
sub
sbb
jo
das
scas
mov
std
pop
add
cmps
rcl
leave
gs
xor
jae
push
sub
push
sub
jne
jb
shr
int3
ds
jmp
mov
jbe
sbb
inc
pop
iret
mov
add
in
jns
cs
in
scas
(bad)
push
jmp
cmps
(bad)
dec
popf
jp
inc
iret
das
out
(bad)
fidiv
int
mov
push
lods
jecxz
(bad)
lds
mov
out
push
pop
pop
push
fmul
mov
xor
pop
dec
sub
mov
ins
mov
aad
pop
inc
mov
fs
jns
jle
and
les
stos
mov
inc
adc
addr16
dec
pusha
xor
jmp
push
and
jmp
push
jbe
jp
das
push
ds
mov
cmc
inc
je
fwait
das
push
jg
push
aaa
or
retf
aaa
icebp
shl
shr
shl
sub
mov
movs
dec
mov
addr16
xchg
(bad)
(bad)
pop
shl
test
push
pop
ds
push
popf
sti
sar
je
pop
push
cmp
xchg
and
add
mov
mov
mul
int3
pop
jns
aam
loopne
sbb
imul
fcomp
inc
jb
js
jmp
enter
mov
in
les
mov
dec
sub
xchg
inc
scas
jbe
pop
mov
adc
cmp
jge
movs
test
mov
clc
jmp
out
cdq
mov
jnp
mov
mov
(bad)
lock
bound
clc
mov
cld
sub
loopne
cmp
mov
mov
cmp
scas
fsub
fstp
add
sbb
std
push
inc
popf
aas
jmp
sub
pushf
fldenv
dec
cmp
cmps
mov
xchg
lahf
mov
ins
cmp
outs
and
fnstenv
sub
in
dec
jns
cmps
popf
mov
adc
add
add
add
push
push
push
push
call
pop
pop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
sub
push
mov
push
mov
mov
mov
mov
add
push
mov
add
add
mov
mov
add
add
mov
mov
mov
mov
xor
mov
mov
xor
test
lea
mov
mov
mov
stos
mov
mov
mov
jne
lea
mov
lea
push
push
push
push
call
xor
jmp
mov
mov
mov
sub
and
mov
mov
mov
shr
not
and
mov
lea
jne
movzx
mov
mov
xor
cmp
je
lea
push
push
call
mov
test
jne
test
jne
mov
test
je
lea
push
push
call
mov
test
jne
push
call
mov
test
jne
call
mov
mov
test
je
lea
push
push
call
mov
test
jne
lea
mov
lea
push
push
push
push
call
mov
jmp
push
push
call
cmp
je
cmp
je
push
push
call
test
je
mov
mov
mov
mov
jmp
push
call
mov
mov
test
je
lea
push
push
call
mov
test
jne
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
test
jne
push
push
call
mov
test
jne
call
mov
mov
test
je
lea
push
push
call
mov
test
jne
lea
mov
lea
push
push
push
push
call
mov
mov
mov
mov
test
je
and
lea
push
push
mov
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
