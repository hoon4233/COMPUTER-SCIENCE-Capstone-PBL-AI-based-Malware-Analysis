mov
lahf
push
rol
push
mov
mov
or
and
mov
xor
call
in
mov
in
or
mov
jne
push
clc
(bad)
in
jmp
clc
mov
mov
lea
push
mov
imul
jg
mov
xor
or
je
push
mov
add
xlat
mov
cmp
sub
outs
fidivr
add
add
push
out
fild
mov
xchg
movs
sub
or
sbb
adc
hlt
fild
inc
hlt
lock
push
mov
clc
ss
jbe
in
push
mov
push
(bad)
in
popa
or
push
lock
mov
iret
jnp
repnz
imul
in
adc
clc
je
test
or
sub
jecxz
inc
add
jne
mov
int
add
mov
push
addr16
jb
dec
add
shl
inc
(bad)
push
loopne
fsubr
push
or
adc
pop
sub
clc
xchg
mov
and
pushf
pop
aas
ret
mov
adc
cmp
ror
sbb
cmps
movs
push
stc
js
lahf
popa
add
xor
sar
add
shl
dec
inc
cmp
or
add
bound
pop
test
jae
push
leave
pop
xchg
dec
fcmovnbe
inc
loopne
cmps
loop
jo
add
or
das
or
push
pusha
or
sub
and
add
inc
test
mov
adc
mov
sbb
rcl
adc
scas
repnz
add
cmp
outs
hlt
mov
test
add
mov
icebp
push
mov
mov
add
add
add
test
inc
xor
test
je
test
je
mov
int
inc
jmp
ret
ret
or
std
cld
loopne
jg
xchg
rol
add
loopne
cmp
push
cmp
xchg
iret
lea
add
push
and
lea
mov
add
dec
jne
js
xchg
clc
pop
mov
sbb
push
lea
or
js
movs
dec
cld
in
push
das
cmp
pop
add
mov
dec
and
test
jne
ins
mov
leave
je
cmp
add
adc
or
add
inc
ret
test
cmp
jne
or
inc
adc
or
cmp
jne
sub
mov
push
(bad)
add
sar
shr
push
retf
popa
je
mov
inc
jle
inc
push
jecxz
xor
add
aam
cmp
and
add
inc
inc
fldcw
jno
outs
fcmovnu
jge
ins
(bad)
and
mov
cmp
jno
imul
sub
icebp
mov
sub
stos
mov
add
clc
mov
imul
sti
(bad)
mov
or
mov
mov
dec
pop
jle
mov
cmp
clc
clc
mov
call
adc
(bad)
lods
wrmsr
(bad)
and
clc
nop
addr16
sbb
add
push
shr
rol
push
jbe
xchg
in
add
add
inc
sbb
dec
in
xchg
adc
push
bound
call
mov
fld
push
push
cli
dec
(bad)
pop
pop
mov
sub
scas
in
cmp
add
scas
fcom
fadd
and
push
rcl
pushf
(bad)
nop
add
push
rcl
add
add
movs
arpl
sbb
int3
push
pop
adc
add
and
enter
icebp
imul
jge
push
test
clc
push
lds
inc
adc
dec
push
stc
popa
mov
pop
nop
and
cdq
hlt
hlt
sub
cmp
jge
mov
pop
cmps
fld
and
jmp
imul
movs
call
in
call
je
add
test
mov
and
imul
rol
jl
jns
xor
sub
push
or
in
and
bound
push
xor
add
mov
fild
mov
dec
push
(bad)
xchg
xchg
xor
pop
add
test
mov
std
sbb
dec
fwait
adc
test
dec
popa
push
cmps
and
aad
mov
fdiv
dec
or
or
leave
inc
xor
pextrw
add
and
mov
push
mov
call
sbb
sbb
inc
sbb
nop
sti
mov
sub
add
inc
or
pop
je
pop
pop
xchg
or
mov
adc
jp
cmp
retf
jmp
or
push
je
add
mov
or
jl
push
dec
adc
clc
pop
add
mov
mov
(bad)
adc
adc
into
and
inc
mov
dec
retf
daa
xor
xor
xchg
hlt
add
xor
imul
sub
hlt
push
out
xor
cmp
xor
or
or
push
adc
test
mov
movs
stos
sub
xor
adc
jo
mov
pop
cmp
lock
ins
push
push
fsubr
test
outs
xor
cmps
adc
fdiv
pop
bound
inc
push
rcr
clc
rep
xchg
fidivr
clc
les
aas
inc
adc
dec
pop
mov
cld
pop
sbb
nop
sub
or
pop
fcmovnbe
inc
push
pop
mov
cmp
lods
push
das
dec
retf
mov
add
push
or
sub
xchg
dec
or
cld
push
das
nop
cmp
mov
sbb
or
xor
fsub
inc
fcmovnbe
ss
and
retf
inc
in
pop
pusha
(bad)
push
mov
mov
pop
mov
push
mov
pop
ret
mov
xchg
sub
jmp
push
popa
pop
or
xchg
push
push
ror
add
mov
mov
loopne
jnp
mov
pop
jmp
mov
cmp
sbb
ss
mov
mov
or
sub
fst
out
in
inc
mov
mov
and
ins
dec
cmp
dec
push
sahf
dec
dec
(bad)
call
push
jl
fisttp
int
nop
mov
je
xor
test
adc
das
and
jno
xor
ds
jne
pushf
sub
je
call
or
mov
push
aad
sub
xor
jnp
push
xchg
sbb
or
adc
add
or
sbb
test
push
and
dec
add
icebp
sub
pop
mov
(bad)
push
sub
mov
test
mov
addr16
push
sbb
add
push
cmp
outs
neg
adc
add
pop
ss
jbe
add
push
inc
add
mov
push
leave
xchg
scas
dec
rol
pop
or
xor
lds
jo
sub
cmp
or
sub
(bad)
push
jg
ret
sub
or
inc
sbb
lock
test
imul
mov
cmps
imul
int3
mov
pop
add
mov
pop
or
sbb
xchg
mov
jecxz
lea
adc
and
xor
mov
call
nop
inc
add
lods
loope
js
shl
adc
lock
and
fucomi
stc
in
retf
inc
jb
push
hlt
mov
(bad)
test
dec
adc
push
in
ins
push
shl
js
call
push
push
mov
push
(bad)
cwde
fnstsw
adc
out
add
mov
leave
xchg
dec
aas
cli
loopne
(bad)
pop
int3
(bad)
fmul
scas
add
daa
ffree
ror
rcr
lods
or
int
(bad)
daa
cld
fbld
push
push
push
mov
cmp
jg
mov
push
push
js
add
dec
jns
call
push
mov
fmul
inc
outs
add
add
fdiv
push
xor
leave
mov
test
pop
and
in
(bad)
ror
inc
lods
mov
nop
xchg
cmps
lods
lods
movs
movs
loopne
call
add
add
test
lds
movups
in
inc
pop
pop
pop
mov
data16
xchg
fcomp
adc
div
cmp
or
push
or
or
sub
cld
push
push
repnz
imul
test
or
add
mul
xchg
sbb
ficomp
int
fild
xor
(bad)
hlt
pop
in
je
inc
cmc
push
cmp
test
call
leave
or
sbb
sub
and
aad
fldenv
pop
ja
dec
js
mov
call
les
inc
cmp
pop
add
stos
ins
and
mov
retf
cmp
mov
stos
xchg
in
inc
stos
icebp
cmps
jmp
push
dec
sub
and
ror
pop
inc
adc
add
and
adc
and
xor
sbb
and
mov
jp
sub
xor
push
(bad)
ficomp
jmp
rcr
pop
cmp
jne
retf
add
rol
leave
inc
push
fnstenv
js
lock
or
or
dec
jae
add
or
pusha
xor
mov
pop
pop
jmp
bound
xchg
push
push
rdtsc
imul
test
inc
add
xor
push
scas
dec
adc
dec
call
inc
xor
div
add
ret
jne
push
retf
pop
mov
add
xchg
and
(bad)
mov
mov
and
push
sub
pusha
clc
mov
push
loop
ins
or
mov
mov
ror
iret
inc
fidivr
sub
sub
call
ds
mov
pop
dec
pushf
inc
inc
sbb
(bad)
test
sub
test
sbb
pushf
ret
mov
cmp
add
and
lock
clc
mov
add
lods
cld
mov
mov
mov
std
(bad)
xor
loopne
lds
adc
sub
xchg
out
inc
je
sub
in
sbb
cmp
and
add
das
mov
jbe
adc
sub
dec
fdiv
loopne
add
fs
cs
xor
push
mov
xor
push
mov
bound
mov
inc
push
mov
inc
push
mov
xchg
mov
aas
mov
imul
inc
cmp
and
mov
and
cwde
cmp
popa
mov
or
xchg
mov
mov
xchg
cwde
pushf
mov
imul
mov
xor
fcomp
test
add
or
sar
cld
adc
or
push
js
mov
xor
mov
mov
pusha
das
pop
dec
ret
lahf
push
push
sub
xor
jb
sub
and
jb
mov
jb
mov
pop
jb
pop
test
mov
pushf
cwde
jo
pop
jb
nop
mov
mov
and
dec
ins
sbb
mov
leave
xchg
mov
xchg
mov
push
mov
clc
mov
and
popa
add
sbb
xor
ror
xchg
daa
std
cli
add
and
inc
mov
xor
ret
adc
or
mov
(bad)
dec
test
dec
and
or
movs
dec
xchg
popa
adc
pop
mov
add
add
cmpxchg
lock
push
into
or
adc
pop
inc
cs
jno
cwde
inc
cmp
jnp
not
or
test
cmp
add
inc
mov
push
stos
dec
inc
cmps
cs
fcom
add
mov
dec
retf
xchg
in
data16
cmps
fild
jl
adc
int
pop
and
xchg
pop
or
pop
adc
leave
xor
pop
fnsave
adc
push
jmp
cld
clc
add
mov
add
lock
(bad)
adc
sbb
inc
xor
dec
adc
in
hlt
mov
outs
daa
pop
or
int3
sbb
xor
mov
popa
pushf
std
iret
js
inc
sbb
mov
repnz
call
jl
fstp
add
mov
cmp
(bad)
push
sbb
imul
cmp
sbb
push
pusha
nop
inc
lahf
mov
aaa
loop
mov
xor
nop
jmp
add
cmp
pop
cmp
xor
cmp
lahf
push
sbb
sub
idiv
dec
pop
imul
sbb
mov
hlt
clc
push
nop
cmps
inc
pop
fs
add
sbb
add
push
in
cld
lods
(bad)
mov
scas
cmp
shr
inc
mov
and
ss
rol
dec
sub
lods
sub
sbb
mov
and
arpl
adc
nop
inc
sbb
adc
add
in
sub
add
sar
mov
mov
pusha
adc
inc
cmp
push
add
pop
ret
in
dec
mov
daa
adc
cmp
call
jae
xor
xor
repz
addr16
or
ret
or
hlt
loopne
dec
push
jne
dec
xchg
cmps
fidivr
fs
popf
pusha
icebp
xor
cmp
adc
fnsave
int3
and
jmp
fsubrp
lock
mov
aaa
popf
push
cmp
js
addps
(bad)
in
(bad)
out
lea
push
cmp
fdivr
or
in
inc
add
and
and
and
mov
and
and
xchg
dec
inc
out
arpl
es
es
mov
out
clc
stos
or
dec
jne
jmp
lods
jmp
xor
mov
das
fcom
(bad)
movmskps
sar
hlt
loope
loop
sub
jo
(bad)
or
das
out
iret
lea
(bad)
sbb
mov
adc
cdq
retf
cmps
shr
add
push
movs
dec
and
add
rcr
push
inc
pop
jae
outs
sub
inc
ds
and
test
outs
hlt
enter
cmp
cmp
jbe
outs
add
mov
dec
dec
pop
and
loope
hlt
stos
xchg
pop
pusha
pushf
mov
and
(bad)
in
jl
push
push
cmps
push
sub
ret
movs
dec
nop
and
adc
test
inc
shr
shl
es
xlat
push
push
pop
add
lods
jne
mov
add
or
or
aam
cwde
xchg
pop
inc
push
xchg
fs
and
dec
mov
or
sub
add
dec
inc
push
in
xor
add
and
mov
inc
cmps
push
nop
mov
push
and
rol
in
ret
inc
shr
pop
lock
aas
mov
push
or
ja
or
sbb
add
pusha
pop
sub
sub
out
pop
in
sbb
fmul
ins
add
pop
or
add
pop
lock
xchg
jp
add
inc
loopne
adc
push
add
and
adc
jno
in
dec
inc
cmps
leave
and
leave
xor
and
mov
gs
nop
pushf
adc
clc
or
(bad)
les
lods
or
int
loopne
gs
test
dec
call
jp
mov
or
aam
rcr
bound
leave
and
retf
adc
jns
aad
nop
sub
and
inc
dec
push
lea
leave
inc
popa
push
cld
cmc
inc
push
push
sub
cs
(bad)
jmp
in
dec
jmp
jo
dec
movs
and
gs
pop
in
inc
movs
and
mov
inc
xor
mov
mov
lea
call
mov
pop
nop
xor
cmp
arpl
add
mov
add
lea
push
mov
pop
int
or
xor
sub
in
inc
test
adc
das
or
add
sti
nop
cld
push
add
arpl
add
push
cmp
mov
pop
mov
loop
sbb
mov
fcmovu
sahf
lock
dec
push
push
mov
mov
add
mov
or
xor
nop
push
xor
push
xchg
mov
sub
sbb
mov
adc
shr
out
adc
cmp
sub
or
dec
in
fisubr
push
cmps
lds
jmp
rol
jae
xchg
push
adc
scas
adc
stos
and
mov
jb
leave
sub
or
jo
push
sbb
xor
rol
mov
cmp
adc
add
push
adc
dec
test
(bad)
xor
iret
cwde
or
mov
push
mov
ss
shl
stc
add
mov
cld
fbstp
mov
imul
int3
cmp
inc
add
push
std
sub
jl
dec
nop
push
xor
cdq
mov
and
and
(bad)
lock
add
inc
repnz
push
pop
and
lds
cmp
mov
in
pop
sbb
pop
push
icebp
fcom
pop
je
dec
cmp
cmp
jne
lock
push
rcr
hlt
jo
sub
adc
push
jno
mov
xor
and
adc
pop
pop
lods
dec
cmp
push
add
dec
adc
mov
or
and
xor
xchg
mov
cmp
adc
or
popa
mov
aad
cmc
dec
dec
clc
mov
xchg
mov
and
(bad)
inc
mov
add
sub
clc
sub
inc
rcl
mov
add
inc
jge
in
rol
fisttp
push
repz
push
in
sahf
movs
mov
lea
mov
dec
int3
dec
xor
cmp
adc
add
push
loope
mov
fstp
ficom
shr
sub
xor
shr
in
loope
sub
sub
mov
stc
add
mov
sub
jae
outs
inc
jmp
daa
and
sbb
fist
inc
pop
std
xor
or
pop
cmp
mov
add
call
je
push
xchg
mov
shl
fwait
add
mov
jo
daa
xchg
add
call
mov
add
iret
xchg
dec
lds
pop
or
hlt
test
adc
xor
(bad)
pusha
mov
push
mov
and
and
xor
in
xchg
pop
adc
bound
in
inc
jb
and
and
push
mov
ret
xor
loop
add
pop
(bad)
aaa
inc
inc
icebp
mov
push
or
mov
push
or
loopne
int3
push
and
sbb
add
retf
pop
dec
les
lds
into
pop
outs
or
jo
pusha
fbld
(bad)
aad
inc
and
icebp
dec
push
test
ror
aas
add
sahf
inc
mov
push
mov
mov
or
and
aaa
add
add
adc
mov
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
adc
xor
(bad)
jg
pusha
mov
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
jnp
idiv
mov
dec
adc
out
jne
sub
shr
sbb
cmc
aas
sti
(bad)
pop
sbb
push
mov
cmp
add
ret
int
(bad)
sbb
cmc
sbb
and
loopne
loop
cmp
int
mov
int
or
mov
sub
pop
std
sar
lock
lods
mov
push
xor
adc
push
retf
and
cmp
scas
es
outs
jne
dec
xchg
add
into
pop
xor
pusha
fild
inc
or
mov
and
inc
loopne
push
in
add
icebp
ret
pop
or
pop
fstp
dec
sbb
add
push
sahf
idiv
cld
adc
fdivp
sahf
add
repz
fnstcw
jmp
mov
add
call
hlt
hlt
or
aam
mov
sar
add
aam
push
inc
call
push
mov
enter
jb
adc
mov
xchg
aam
add
inc
or
fidiv
sbb
or
mov
retf
enter
push
dec
mov
test
add
mov
add
lods
xor
xor
in
and
mov
imul
or
push
pushf
lahf
pop
cmp
jg
cmc
cmps
adc
fisttp
bound
and
lock
daa
mov
cld
fwait
push
sbb
or
pop
xchg
xor
xchg
dec
call
mov
pop
dec
rol
push
jb
or
in
xchg
mov
mov
call
inc
hlt
mov
inc
loopne
add
push
add
fcom
mov
sbb
inc
nop
int3
pop
sbb
test
out
rol
pop
adc
aas
call
and
and
fmul
test
loopne
or
movs
shl
cdq
dec
fdiv
fstp
add
mov
xor
add
jae
pusha
or
rcr
xor
lods
xchg
xchg
jne
inc
test
popa
sbb
jmp
push
daa
lea
pop
ret
push
gs
xchg
push
pop
outs
data16
inc
pop
push
dec
sbb
push
xchg
call
mov
xchg
mov
sar
inc
ins
adc
sub
cli
add
retf
aaa
mov
adc
pop
(bad)
xchg
jl
pop
in
or
call
push
in
lock
movs
xor
and
dec
mov
adc
mov
mov
sbb
xor
xlat
test
push
lock
jge
mov
inc
popa
xor
es
cmp
jbe
in
xor
mov
xor
in
and
mov
cmc
pop
push
adc
add
nop
push
add
ds
adc
pop
movs
cmp
jbe
call
(bad)
add
add
sar
sub
cmps
fs
add
in
fisttp
imul
adc
(bad)
dec
add
add
or
add
add
or
push
push
dec
pop
lods
nop
shl
jb
add
iret
push
inc
shl
ds
mov
iret
pop
test
add
push
add
adc
push
das
mov
in
and
stc
aaa
add
jns
inc
xchg
enter
mov
inc
add
adc
test
mov
mov
add
mov
ins
xchg
test
scas
mov
or
and
or
ins
and
xchg
scas
add
push
retf
es
clc
push
test
xchg
pusha
dec
stc
mov
(bad)
dec
call
inc
ins
and
pusha
(bad)
add
push
xchg
xor
jmp
mov
xor
pop
aam
stos
and
nop
inc
and
and
push
xchg
add
add
or
xor
(bad)
int
adc
sbb
stos
mov
and
mov
inc
loopne
dec
lods
push
adc
mov
pop
sbb
jo
inc
movs
mov
sti
cmp
add
adc
sar
hlt
push
and
xchg
or
sub
ss
dec
or
mov
xor
xor
out
test
aad
ret
int
cmp
inc
xchg
or
sub
jg
pop
aas
inc
dec
jb
mov
adc
push
out
pop
sub
xor
pop
sbb
xchg
and
inc
mov
cli
add
repnz
mov
test
daa
mov
js
cmp
fld
test
dec
lock
int3
into
cmp
retf
mov
push
add
pusha
ret
gs
aaa
push
leave
dec
retf
xor
and
nop
test
call
adc
stos
xchg
pop
cmp
jo
xor
add
mov
test
jmp
and
or
jns
cdq
or
shr
push
or
(bad)
or
cmp
mov
add
add
fs
mov
in
lahf
or
ja
stos
icebp
adc
add
mov
repnz
mov
xchg
mov
inc
mov
pop
xchg
add
add
sbb
lds
and
test
adc
int3
or
sbb
push
test
and
fcomp
les
push
rcr
sub
in
movups
xchg
cld
xor
xlat
and
inc
ret
mov
in
xor
adc
push
add
xchg
mov
mov
add
inc
loopne
mov
or
mov
jmp
mov
call
mov
and
rol
(bad)
shr
mov
mov
or
inc
push
mov
xor
mov
repz
fld
adc
pop
mov
pop
dec
loopne
add
cmp
fsub
in
add
push
(bad)
add
rcr
or
paddusb
js
test
es
lods
enter
test
mov
add
test
jp
mov
inc
data16
push
mov
in
dec
jne
cmp
or
mov
scas
and
in
(bad)
shl
jl
xor
add
cmp
rol
daa
ret
mov
pop
test
and
sub
aam
test
xchg
xchg
call
adc
call
rcr
clc
sub
cmp
adc
ficom
add
cmp
js
or
add
loop
xchg
or
fld
mov
sub
xchg
mov
dec
pop
test
pop
xor
adc
cmp
or
mov
mov
mov
mov
xchg
cmps
lahf
int
xor
dec
inc
add
sbb
ret
mov
loop
imul
rcl
in
sub
adc
add
push
cmp
das
jb
inc
add
call
sahf
cdq
cmc
pop
add
sbb
dec
aas
inc
dec
add
nop
retf
cld
lock
cmp
push
pop
or
loop
sbb
(bad)
nop
add
sbb
push
lock
out
xchg
jnp
pushf
clc
mov
or
test
mov
cdq
adc
aaa
jbe
ss
xchg
pushf
cmp
add
lods
arpl
cmps
popa
jne
xor
jmp
pop
adc
jmp
and
popf
outs
adc
and
xlat
xor
enter
nop
test
in
or
test
xor
sbb
lea
movs
ret
fld
mov
sbb
in
xor
and
push
adc
jno
dec
les
and
inc
dec
rol
shl
inc
mov
aam
pop
adc
sub
or
call
sbb
xor
rol
dec
xchg
and
sbb
add
adc
call
or
sbb
stos
shl
mov
cld
add
mov
test
or
cld
ja
sbb
cdq
cmp
mov
mov
(bad)
or
and
sar
cmp
inc
sbb
push
or
dec
lock
addr16
or
jno
adc
lock
aad
in
mov
mov
sbb
hlt
push
push
pop
cmps
mov
lods
push
fistp
jle
ret
push
cmp
xor
sahf
or
xor
test
xor
fistp
dec
pop
cmp
cmps
sti
sbb
test
xchg
pop
dec
pop
clc
mov
jmp
(bad)
and
mov
and
lock
pop
mov
pusha
cmp
repz
jp
stos
jp
mov
(bad)
test
push
cmp
nop
xor
dec
mov
pop
sbb
sbb
sbb
inc
sub
lods
pusha
inc
sbb
test
cmps
or
mov
xor
jae
pop
push
add
cld
cld
push
xor
xchg
hlt
hlt
dec
sbb
add
daa
mov
sub
rol
mov
xor
cli
shl
or
mov
pop
imul
xor
sbb
pop
pop
call
pop
cld
add
mov
jb
jo
sub
mov
adc
jb
loopne
(bad)
cmp
add
or
daa
sbb
call
or
sub
xor
jmp
sub
inc
enter
nop
inc
sbb
xor
sbb
cmp
inc
sbb
xchg
sti
sub
test
sbb
adc
add
fs
rcl
enter
mov
clc
retf
pop
hlt
add
and
cmp
mov
adc
outs
xchg
les
call
inc
add
rcr
dec
push
pop
lock
sahf
mov
xchg
mov
cmp
std
imul
mov
xor
shr
loopne
aaa
inc
pop
popa
cld
dec
movs
adc
cmp
popa
xor
movs
or
sbb
add
daa
repz
mov
sbb
mov
jmp
xchg
aad
jns
and
int3
add
pushf
or
leave
cmp
or
cmps
add
outs
xchg
xchg
sub
xlat
or
leave
add
cmps
or
js
imul
push
add
xchg
and
and
xchg
dec
mov
leave
cs
daa
cmp
mov
xor
ffree
dec
hlt
adc
push
cmp
adc
ss
call
xor
mov
jno
test
jl
inc
fcom
jmp
pop
xor
dec
ror
mov
lods
push
mov
sub
pop
pop
ror
pop
add
cmp
add
retf
mov
or
cmp
and
inc
jge
cmp
mov
push
pop
mov
ins
inc
fadd
inc
inc
adc
inc
call
fs
add
(bad)
je
add
mov
and
fst
pop
add
(bad)
lock
cmp
jle
dec
and
test
xchg
adc
sbb
adc
inc
mov
mov
pop
mov
pop
xchg
pop
adc
imul
add
pop
rcl
fadd
add
and
fsub
fcomp
test
xchg
mov
ins
pop
cld
sbb
scas
and
mov
clc
mov
mov
inc
pop
movs
xor
jmp
inc
sbb
into
shr
push
es
or
sub
push
out
int3
push
xchg
fist
adc
push
mov
inc
adc
stos
test
mov
dec
push
mov
nop
pop
pop
pop
sahf
ficom
and
adc
mov
inc
adc
xlat
mov
adc
inc
or
outs
mov
movs
loop
pop
leave
add
mov
add
sbb
aam
cli
loopne
je
cmps
fcomi
fcom
hlt
test
mov
ret
fdivr
mov
mov
add
das
rol
cdq
or
cmc
mov
movs
cmp
aam
inc
sar
or
add
add
and
xor
inc
add
mov
or
and
aas
or
popa
push
inc
clc
add
ror
lea
lods
stos
xlat
pop
test
rcr
sub
pop
test
xchg
out
fbld
pop
pop
test
pop
dec
or
push
push
push
adc
cdq
popf
in
les
pop
pop
pop
xor
loope
dec
sbb
movs
bound
push
jecxz
or
add
shl
sub
test
es
outs
jmp
inc
or
fwait
mov
add
cmps
loop
or
fwait
popf
movs
and
lds
push
cmp
movs
rol
xlat
pushf
dec
es
sbb
xchg
sbb
inc
sub
or
inc
xor
cwde
(bad)
test
adc
mov
inc
fs
cld
jge
or
or
stc
or
pop
pop
rol
mov
ret
push
rol
add
enter
popa
mov
xor
add
cmps
pop
push
and
inc
imul
(bad)
mov
push
mov
add
cmp
mov
test
seto
mov
not
xor
fnstenv
stos
cs
pop
mov
cmps
fcomp
adc
ret
pop
adc
mov
and
es
or
gs
xlat
in
mov
imul
in
int3
cmp
scas
sar
int3
jl
loopne
loopne
fisubr
push
lea
inc
and
pusha
lods
cmp
jb
add
in
sbb
or
pop
inc
les
mov
outs
sub
cs
fdivr
stos
jno
sahf
add
cdq
mov
mov
in
or
ss
mov
and
push
add
mov
ret
push
jmp
or
sub
xor
add
mov
mov
push
mov
fwait
sbb
movs
push
adc
inc
pop
stos
fimul
push
inc
add
sub
push
mov
or
mov
je
lock
scas
cmps
xchg
pop
mov
adc
inc
loope
mov
xchg
mov
fwait
and
xor
adc
sub
adc
add
sub
cmp
dec
sbb
call
or
push
mov
ror
mov
lods
lods
or
test
movs
lds
inc
fadd
sbb
sar
pushf
inc
scas
stos
rcr
adc
mov
cdq
nop
cmps
fadd
cmp
les
jnp
mov
out
enter
sub
shr
sub
or
popa
pop
aad
mov
lods
dec
mov
fld
or
lock
and
fsubr
or
push
add
push
out
(bad)
cmp
sub
jnp
loopne
cdq
cwde
sub
cwde
xchg
mov
xor
outs
cmps
(bad)
aad
add
and
pop
sub
and
mov
imul
ins
jno
add
mov
bnd
mov
xchg
stos
mov
in
js
push
jecxz
gs
(bad)
pop
xchg
mov
xchg
sub
shr
fadd
sub
imul
adc
pop
inc
daa
mov
in
adc
popa
mov
xchg
imul
rcl
mov
dec
daa
or
lock
ror
int
add
mov
add
loop
data16
add
int
and
(bad)
jbe
mov
arpl
xor
mov
pop
cmp
loopne
cli
xor
ret
adc
jg
sbb
xchg
cmovge
or
sbb
pop
push
mov
add
or
mov
adc
inc
inc
or
push
cdq
mov
hlt
mov
sub
out
(bad)
and
jmp
in
and
add
add
add
push
add
add
movs
loope
cmp
cld
ins
dec
imul
xchg
or
cmp
mov
jb
sub
inc
jno
(bad)
cmp
sahf
push
popf
xlat
sbb
adc
xor
mov
push
out
stc
mov
jne
and
mov
lahf
stos
mov
les
xchg
push
cld
add
std
test
pop
fsub
daa
and
icebp
sub
inc
das
outs
jns
outs
adc
cmp
mov
xor
pop
and
fcmovnbe
and
fisttp
inc
add
cmp
push
xchg
pop
mov
push
dec
mov
add
inc
mov
ins
cmovno
retf
xchg
retf
int
mov
in
cmp
xchg
pop
and
add
add
push
adc
(bad)
push
cmp
mov
les
push
push
shl
adc
mov
xchg
adc
or
lock
cmp
mov
pop
lock
sar
sbb
sub
imul
mov
idiv
and
add
push
mov
adc
and
in
push
and
or
cmp
add
and
ret
dec
cmp
add
adc
sub
shl
xor
stos
das
lock
call
or
add
mov
dec
inc
pop
inc
inc
jb
or
mov
clc
cmp
push
xchg
adc
xor
hlt
lock
ret
cld
pop
xor
test
and
ret
add
adc
fdiv
fadd
dec
dec
cmps
cdq
fdivr
and
adc
cdq
test
clc
aas
jmp
les
cdq
test
dec
inc
jb
ja
hlt
hlt
mov
iret
(bad)
in
lea
adc
ror
sbb
cmp
int3
enter
sbb
(bad)
les
inc
fsub
xchg
add
mov
adc
adc
add
xchg
dec
clc
xor
or
rcl
shl
add
or
add
test
shr
push
enter
ret
inc
mov
test
xchg
push
les
pop
or
mov
clc
clc
add
add
sub
or
inc
in
inc
and
test
mov
xchg
cmp
mov
jnp
or
ins
(bad)
lds
dec
mov
mov
dec
movs
fnstcw
outs
lahf
sar
add
pop
leave
and
xchg
inc
add
in
imul
sub
inc
or
lods
rcr
xor
lock
fsub
and
leave
or
adc
xchg
fwait
nop
gs
sbb
cmp
push
or
and
vpshld
jnp
and
or
pop
call
mov
arpl
and
lods
in
(bad)
mov
loopne
pushf
clc
inc
push
iret
gs
ja
dec
and
sbb
mov
(bad)
push
push
lahf
in
ss
add
(bad)
add
adc
or
or
in
pop
lds
into
aad
movs
test
mov
aam
test
icebp
and
bound
mov
(bad)
rcr
fsubr
pop
inc
sub
stc
shr
shr
sbb
jbe
cmps
shl
mov
add
and
and
jbe
ja
mov
shl
dec
xor
xchg
jge
sub
inc
xchg
push
inc
mov
add
inc
push
bound
mov
push
jmp
pop
sub
add
fstp
inc
imul
push
or
dec
ret
cmps
(bad)
cld
fcmovnb
pusha
jecxz
jecxz
jnp
push
(bad)
jmp
fnsave
push
add
or
in
dec
and
adc
dec
push
cdq
xchg
or
add
in
mov
mov
in
sar
jnp
add
inc
or
lock
je
add
imul
clc
push
ja
mov
inc
std
or
ret
lods
ret
push
mov
or
ins
aas
nop
mov
repnz
lods
pop
not
mov
add
fsubr
sahf
add
or
mov
mov
ret
arpl
(bad)
xor
add
cmp
sahf
je
cmp
or
add
ret
xor
icebp
adc
sar
inc
xor
sub
mov
push
add
sbb
pop
test
add
ficom
xchg
fs
ret
daa
ror
out
mov
xchg
xchg
int
rol
add
adc
pop
cmp
add
ret
mov
hlt
out
and
pusha
add
sbb
jne
sbb
sbb
nop
add
pop
pop
fstp
pop
mov
faddp
push
je
mov
adc
adc
adc
cli
or
pop
xchg
repz
int
ins
es
push
push
push
inc
pop
icebp
push
sbb
loopne
pop
inc
je
(bad)
and
sti
loope
mov
add
(bad)
pop
xor
push
inc
mov
xor
mov
push
ja
fbstp
or
sub
cmp
jg
add
ins
leave
or
mov
mov
div
adc
sbb
fwait
mov
fisub
pop
and
jne
imul
retf
dec
lock
pop
push
add
das
je
lods
add
or
xor
iret
iret
loop
add
je
out
int
cmp
push
cld
mov
neg
or
push
mov
js
mov
add
call
je
dec
rol
xor
jmp
or
add
or
jecxz
pop
dec
mov
xchg
push
ret
inc
cmp
xchg
add
push
mov
in
inc
inc
pop
(bad)
adc
aas
add
test
sub
xchg
mov
sbb
call
jp
mov
sahf
inc
or
xchg
push
sub
push
mov
sahf
cmp
sbb
aad
adc
cs
mov
jne
and
loopne
mov
mov
jmp
mov
dec
pop
out
add
sbb
add
inc
sub
inc
(bad)
adc
inc
xchg
outs
or
add
adc
dec
je
lods
add
loopne
sbb
je
(bad)
(bad)
mov
cmps
push
or
add
ror
or
nop
jg
cwde
dec
add
sbb
loopne
movs
mov
ja
push
xor
sbb
mov
push
mov
test
fst
sbb
push
sbb
das
cmps
add
pop
les
pop
scas
fmulp
push
adc
popf
sub
cdq
jmp
cli
push
or
sar
jne
jbe
push
adc
jl
lods
mov
cmp
jle
rcl
or
enter
jg
jo
idiv
dec
call
cmp
jmp
icebp
xor
(bad)
add
cmp
fiadd
lahf
push
sahf
mov
xor
inc
scas
push
sbb
inc
sub
sar
jle
lea
cmp
jle
sub
or
lock
outs
jmp
fs
adc
mov
and
inc
cmps
mov
adc
add
sub
mov
xor
aaa
(bad)
scas
mov
call
sub
cwde
jne
xor
fcomp
shl
jmp
rol
xor
dec
inc
setl
dec
and
push
and
(bad)
in
fistp
mov
sbb
sub
(bad)
jl
mov
sbb
lock
imul
jg
or
lock
cmp
cs
stc
mov
loopne
and
pop
hlt
jle
pushf
retf
cli
and
mov
inc
stos
or
ins
or
imul
push
push
push
or
scas
mov
cmp
pop
mov
sub
inc
sbb
daa
mov
add
cmc
into
repz
jne
inc
jg
out
pusha
das
psubsb
inc
inc
or
or
inc
dec
add
jne
xchg
pop
mov
cld
sbb
sbb
mov
sbb
push
xchg
in
jp
(bad)
cld
aas
add
loop
dec
push
push
mov
and
punpckhbw
push
lea
xchg
mov
cmp
cmp
lock
xchg
(bad)
repnz
add
pop
mov
pop
push
sbb
dec
pop
xchg
cmp
dec
test
mov
popa
jb
or
pop
sub
mov
jmp
test
jnp
aaa
adc
mov
inc
je
inc
push
inc
adc
jmp
cmps
sahf
dec
cmp
je
sahf
inc
pop
shl
dec
sub
xor
std
add
dec
retf
lea
and
lahf
pop
push
movs
jmp
push
add
mov
cdq
lahf
inc
sbb
cmps
inc
imul
jno
mov
cmps
cmp
push
mov
aas
loope
aas
adc
adc
and
inc
aas
test
lea
push
ja
icebp
xchg
xor
add
inc
outs
pop
pop
dec
or
and
fiadd
movs
hlt
sub
gs
mov
mov
ins
test
or
mov
daa
test
push
bound
push
add
mov
push
push
(bad)
jge
sub
jnp
inc
inc
push
adc
push
in
pop
popa
mov
or
pop
(bad)
adc
inc
pop
dec
or
and
pop
in
nop
data16
push
(bad)
imul
test
and
leave
sbb
jl
and
movsx
jno
daa
xor
sub
mov
jmp
cmps
mov
add
and
sbb
adc
push
repnz
rcr
out
mov
or
arpl
test
mov
sbb
sub
xor
pop
mov
arpl
(bad)
mov
ss
adc
lea
pop
loopne
sub
pop
and
jo
mov
(bad)
sbb
inc
add
test
adc
pcmpeqw
add
inc
sub
idiv
std
add
test
mov
sbb
jmp
pop
jnp
pusha
and
cmp
push
push
jne
mov
cmps
pop
aad
daa
inc
inc
mov
addr16
mov
jmp
cli
and
cmp
(bad)
fdivr
jne
xor
jle
pop
mov
mov
pop
shl
cmps
and
jne
mov
nop
or
mov
lds
call
cmp
je
xchg
out
sbb
jl
leave
adc
inc
jmp
movs
push
jmp
adc
adc
mov
mov
sbb
and
push
cmp
pop
inc
fdivr
inc
test
push
je
xchg
mov
popa
adc
adc
jmp
or
sub
sub
movs
inc
pop
stc
cmp
call
emms
test
in
or
mov
fwait
pusha
fcom
push
push
sbb
ficom
je
dec
mov
bound
pop
xor
es
ss
ins
add
and
shr
clc
mov
pushf
ret
shl
xor
inc
push
jne
inc
mov
push
cmp
sete
xchg
or
enter
sti
inc
mov
mov
sbb
jecxz
scas
sbb
jmp
test
inc
cmp
push
out
push
fist
cmp
sbb
idiv
jge
clc
jg
cmp
sub
iret
add
sub
cmp
xor
loope
xor
jl
or
push
push
push
adc
or
dec
mov
mov
dec
repz
mov
or
lock
xlat
in
push
dec
rol
(bad)
cmc
cmp
stos
je
dec
mov
je
jmp
push
clc
call
sbb
adc
(bad)
pop
ds
inc
dec
jmp
push
or
cmp
cmc
outs
aas
add
retf
push
stc
and
push
jmp
push
cmp
jns
xor
cwde
or
inc
mov
and
cmp
adc
mov
sub
jmp
loop
movs
mov
aam
pop
pop
xor
rcr
mov
xchg
pop
pop
mov
jl
iret
ror
jb
sub
icebp
jno
mov
or
ret
dec
icebp
repz
jbe
sbb
das
cmp
push
push
push
mov
bound
mov
jl
xchg
add
jne
retf
sub
push
push
adc
loope
imul
xchg
push
sbb
es
scas
aad
mov
adc
cmp
fwait
sar
cmp
cmp
je
lea
jo
xor
mov
out
add
out
lea
lock
fadd
mov
mov
or
retf
mov
and
test
pop
sar
shl
cmc
cmp
mov
and
rep
pop
xor
sbb
adc
adc
or
push
shr
and
and
and
push
in
mov
lock
mov
push
mov
loopne
imul
mov
std
cmp
add
(bad)
jmp
jne
fs
(bad)
jg
std
xchg
shl
or
add
int3
mov
pop
mov
lea
cmp
outs
lods
sbb
fist
fisttp
fnstsw
inc
push
fs
mov
mov
mov
mov
add
add
sbb
dec
sbb
add
add
adc
add
icebp
jg
push
or
cmovb
jg
cmp
push
sbb
mov
mov
inc
xchg
mov
cmp
mov
shr
xchg
add
push
loope
sar
loop
jne
mov
call
add
imul
sub
push
add
jns
cmps
pop
je
sbb
add
mov
pop
loopne
push
xor
mov
ins
ret
xchg
sub
xor
test
ror
ds
sbb
jnp
ror
push
dec
jns
xor
jmp
jno
loopne
mov
cmc
sub
push
jl
(bad)
cmps
out
std
jg
sub
fdivr
xor
cmp
jo
push
sbb
cmp
ror
xchg
dec
loop
fmul
sub
fidivr
cmp
mov
cmp
mov
cmp
jl
ret
sbb
sar
pop
mov
dec
loop
xchg
(bad)
ja
lea
and
jns
pop
shl
dec
jl
add
rol
int3
mov
call
jmp
pusha
sbb
sub
push
loop
jno
fsub
ret
lahf
fsubr
jg
cmp
shr
shl
push
pop
jne
push
jb
jp
mov
inc
icebp
jb
xchg
into
pop
lods
push
ss
lock
je
jno
xchg
push
xor
sbb
jnp
or
cmp
mov
and
(bad)
pop
rol
adc
mov
adc
dec
outs
test
lods
enter
or
pop
push
ja
pop
inc
shl
sbb
in
outs
in
and
mov
(bad)
push
mov
in
cld
jle
cmp
jmp
inc
add
out
hlt
cwde
nop
outs
and
pop
mov
and
aas
xchg
push
add
inc
je
xchg
sar
xor
push
aaa
inc
test
ret
push
push
ins
mov
ror
ret
je
pop
mov
pop
or
mov
std
lods
dec
data16
sub
inc
int3
jne
(bad)
pop
jne
jmp
push
add
mov
xchg
(bad)
jge
xchg
or
shr
add
inc
push
jne
add
inc
aad
or
popf
fiadd
clc
test
inc
fnstsw
fstp
out
inc
or
mov
or
popf
cmp
xchg
aas
inc
fimul
cmp
aas
and
ror
mov
sbb
xchg
mov
mov
popf
retf
mov
ins
xor
push
scas
push
in
loopne
mov
(bad)
jmp
mov
(bad)
mov
mov
or
dec
loope
sub
adc
mov
mov
cwde
pop
xlat
ret
jecxz
inc
cmp
adc
test
cld
inc
or
jge
std
test
mov
dec
cmp
or
jnp
sbb
call
int
xlat
mov
add
push
mov
pop
clc
mov
addr16
aas
or
cmp
jge
lea
mov
fnstsw
mov
or
push
sub
cmp
cmp
mov
fwait
sbb
fsub
pop
or
fwait
sbb
ret
ja
cli
xchg
in
mov
jmp
or
mov
or
aaa
cmp
push
jecxz
push
fs
jae
mov
push
push
inc
pop
loop
jp
bound
xchg
sbb
xor
mov
push
adc
jb
push
dec
aam
add
jmp
pushf
lock
jo
enter
rcl
jmp
push
add
add
pop
push
sub
icebp
inc
dec
cmp
push
ds
add
mov
ror
clc
retf
loope
es
(bad)
xor
outs
stc
cmp
mov
in
test
test
inc
push
mov
cwde
adc
dec
xor
sbb
(bad)
test
ds
mov
xchg
sar
std
inc
aad
jl
jle
mov
pusha
xor
mov
std
adc
push
sbb
fs
push
xor
push
mov
or
xor
xor
aaa
test
push
push
js
popa
pop
add
xor
test
mov
xchg
xchg
sbb
adc
addr16
push
repnz
mov
mov
cmp
jne
pop
in
les
das
shl
jge
je
imul
ss
mov
push
add
pop
dec
dec
std
pop
lea
push
inc
pop
inc
or
mov
sub
cmps
cmp
div
push
adc
jecxz
and
push
sub
jae
test
push
dec
ins
clts
and
pop
mov
sbb
push
shl
ins
pusha
jb
sbb
dec
retf
js
dec
retf
pop
ret
xor
dec
mov
push
xor
je
mov
mov
nop
push
push
add
push
xor
in
faddp
inc
ret
icebp
(bad)
mov
and
es
jne
dec
inc
push
mov
in
xor
sbb
lea
push
fild
repz
imul
adc
push
mov
cmp
and
xchg
bswap
inc
pop
sahf
cmp
shr
push
popa
mov
pop
repz
jno
lods
jl
fstp
in
add
ins
inc
add
sbb
add
loopne
xor
push
dec
je
dec
jne
ins
je
pop
xlat
outs
jmp
inc
push
add
add
imul
add
sbb
add
mov
push
xor
push
mov
(bad)
xlat
adc
jno
xchg
sub
mov
push
cs
add
jle
add
mov
push
mov
repz
ds
push
mov
push
cs
mov
jae
push
cdq
(bad)
ds
push
aas
push
cmp
fcom
movs
aas
inc
dec
add
test
push
cmp
mov
pop
out
sub
sbb
js
fstp
jl
mov
xor
cmps
jne
adc
sbb
pop
xor
jmp
add
add
mov
(bad)
pop
je
inc
pusha
jbe
into
not
push
sub
sar
adc
push
mov
sub
test
or
push
out
xor
add
pushf
pop
jb
add
out
and
xchg
push
add
or
ret
mov
das
and
pop
and
lea
pop
xchg
adc
divps
jbe
push
or
add
lock
mov
add
inc
inc
xchg
loop
test
push
pop
push
pusha
sbb
in
nop
push
mov
les
lock
lahf
lahf
add
mov
add
adc
jmp
adc
(bad)
pop
and
dec
pop
or
inc
and
daa
mov
adc
or
mov
pop
(bad)
jmp
push
dec
lods
mov
icebp
push
mov
fadd
ror
lahf
adc
ds
pop
mov
sti
or
mov
pop
jg
and
aam
mov
xor
sub
or
mov
int
add
add
or
loop
dec
pushf
and
sti
ins
loopne
add
sti
mov
sbb
loopne
mov
or
je
adc
ret
push
inc
push
mov
sbb
mov
fnsave
push
add
and
xchg
push
out
add
je
cmp
mov
ins
outs
retf
call
xchg
mov
sbb
lock
xchg
outs
xor
test
mov
inc
sub
rol
add
sub
pop
rol
sahf
or
mov
test
cs
or
sub
mov
mov
cmp
push
add
dec
aam
les
cmp
inc
pop
sub
sbb
mov
mov
adc
test
les
pushf
dec
out
retf
xor
mov
(bad)
mov
mov
cwde
ret
mov
sub
dec
rol
out
inc
mov
cwde
cmp
push
push
call
sub
jl
data16
cmp
dec
jle
add
sbb
jbe
inc
jge
cmp
mov
sub
push
jecxz
fidivr
xchg
sbb
dec
push
addps
and
imul
mov
dec
or
sahf
xor
mov
and
in
sbb
fist
cs
xor
and
outs
les
enter
cmp
jne
pop
sbb
int3
or
pop
arpl
je
loopne
push
lods
xor
adc
inc
iret
pop
cwde
scas
outs
ret
mov
scas
neg
fdivr
push
xchg
jmp
mov
xor
sbb
ror
mov
and
adc
jo
push
loop
outs
rcr
(bad)
pop
or
inc
jl
adc
jne
mov
push
mov
or
pop
cmp
sbb
sbb
xor
sbb
dec
mov
cmp
ror
push
push
ins
and
push
sar
add
(bad)
fst
pop
jl
enter
jnp
mov
mov
or
inc
jg
sub
inc
fmul
xchg
sub
add
push
adc
popa
mov
xor
sbb
or
or
test
(bad)
jg
scas
fwait
ret
add
hlt
pop
dec
or
mov
cwde
adc
ret
cli
pop
ja
inc
xchg
add
inc
or
lods
push
scas
cmp
cmc
(bad)
pop
in
cdq
mov
clc
dec
jbe
addr16
inc
sbb
pop
pop
pop
clc
inc
pop
fisubr
add
or
sbb
pop
rcr
and
and
cmp
les
xchg
adc
ret
jbe
sbb
xor
pop
inc
push
test
ins
mov
mov
mov
sbb
les
push
mov
cmp
inc
lea
adc
mov
cmp
int
(bad)
jae
rol
dec
inc
and
mov
bound
pop
xchg
lock
xchg
inc
movs
fmul
add
fs
int
or
add
jno
inc
mov
les
pusha
jge
mov
clc
push
push
xchg
dec
repz
pusha
adc
aam
mov
push
jb
push
add
outs
mov
pop
popa
xchg
fcmovne
jge
dec
loopne
inc
mov
pop
adc
jmp
sbb
cmp
out
pop
test
and
add
dec
cmp
adc
mov
sbb
adc
sbb
adc
fadd
mov
not
push
movs
rcl
adc
jbe
jge
sub
and
pushf
clc
lods
je
xlat
add
jg
jp
jb
test
lods
pop
js
scas
mov
pop
es
xor
data16
pop
cmp
ror
pop
mov
jbe
pop
pop
mov
xor
repz
fstp
movs
clc
push
jmp
push
lss
sahf
mov
and
inc
xchg
push
add
xchg
sbb
sub
bound
fsubrp
jmp
cmp
add
push
adc
pop
or
xchg
jns
pop
packuswb
mov
jl
clc
xchg
pop
inc
and
or
jbe
cdq
pop
inc
xchg
loopne
cli
pop
jmp
push
or
mov
cmps
inc
cmp
and
popa
xor
or
xchg
ficomp
xor
lods
sbb
jl
je
sub
adc
xchg
mov
jle
pop
push
int3
ss
outs
or
adc
mov
jmp
and
jne
ins
rcr
(bad)
and
pushf
mov
das
mov
xchg
ins
adc
xchg
xchg
popa
and
sbb
fild
add
in
test
xchg
dec
aas
or
sbb
ss
mov
push
lds
(bad)
stos
adc
mov
mov
mov
ja
inc
push
dec
ret
adc
or
call
dec
sbb
fisttp
xor
push
test
lea
dec
clc
dec
or
push
add
cmp
and
mov
sbb
xor
mov
sbb
aam
cwde
cmp
mov
loope
sbb
movs
or
xor
push
lea
add
ds
add
cli
mov
lock
clc
push
or
mov
xor
add
xor
shr
inc
fmul
pop
jne
retf
(bad)
fmul
fsubr
add
adc
mov
ja
aaa
jnp
xor
ins
inc
aam
call
dec
sbb
push
adc
cld
into
xor
ror
xchg
out
add
sub
adc
(bad)
dec
pop
dec
fwait
je
fcomp
add
stos
or
loopne
cmp
dec
loopne
inc
loop
in
(bad)
ins
adc
out
jmp
push
sub
cmp
in
out
push
push
loopne
loop
lds
and
shl
ret
push
sub
test
jb
jne
mov
fisubr
dec
pop
loopne
pop
mov
mov
mov
and
dec
(bad)
and
mov
nop
jge
inc
(bad)
inc
adc
add
retf
mov
imul
shl
pop
and
dec
(bad)
fisub
lock
pop
dec
push
cmp
jne
adc
jmp
ret
outs
pop
mov
in
in
lock
or
xchg
fidiv
cwde
data16
cmp
fmul
fild
jle
jne
push
call
pop
push
push
lahf
outs
je
sbb
(bad)
mov
and
cmp
or
cmp
adc
jo
ins
or
loopne
aas
adc
test
jle
mov
fisub
sub
scas
nop
cld
cmp
fadd
std
(bad)
sub
sub
repz
fimul
mov
dec
xchg
or
sub
jns
pop
mov
add
retf
shl
push
dec
jle
in
mov
push
int3
sbb
pop
add
push
xlat
enter
bound
add
lock
(bad)
(bad)
cmp
jge
and
ror
sub
cmp
call
mov
jle
or
or
mov
fistp
xchg
mov
inc
push
in
mov
cmp
outs
je
fcom
loopne
mov
or
mov
test
je
lea
push
fld
jo
lds
nop
adc
not
mov
xchg
ror
xchg
dec
lahf
inc
inc
inc
jmp
jg
lea
sbb
pushf
mov
je
int3
fmul
add
adc
mov
lock
sub
mov
jnp
inc
stos
xor
test
xor
mov
adc
add
jno
push
popa
shl
sbb
call
test
mov
test
pop
ror
rcr
retf
push
push
pop
pop
xor
jmp
inc
div
clc
jle
jmp
ror
(bad)
rcr
ja
cwde
out
pop
sbb
push
add
push
mov
in
cmp
mov
or
sub
pop
(bad)
add
sub
mov
or
add
(bad)
aam
call
cmps
mov
xor
pop
shr
and
retf
int3
xor
scas
inc
nop
cmp
cmp
test
add
mov
fcom
mov
aas
ret
fimul
or
adc
pop
xchg
aaa
adc
add
or
lahf
shl
loopne
neg
fwait
push
or
into
add
inc
int
add
pop
inc
sub
push
nop
jbe
push
push
push
push
add
in
cs
sti
xlat
lds
xor
mov
push
or
push
div
or
in
repz
sbb
in
pop
shr
push
pop
mov
dec
or
jb
cmp
jmp
fs
cmp
out
jmp
mov
mov
mov
jmp
xlat
aaa
je
mov
xor
ja
inc
jle
or
jmp
xor
sub
jb
sbb
add
stos
or
dec
mov
(bad)
fwait
xor
xchg
test
cmp
pushf
and
cmps
sub
nop
jl
adc
clc
cli
test
adc
and
int3
pusha
hlt
lods
mov
push
popa
cli
push
cmp
pop
rcr
addr16
inc
mov
dec
nop
and
ss
push
push
and
repz
push
ss
or
and
(bad)
push
or
dec
dec
arpl
xor
dec
dec
dec
push
push
or
jne
jge
fs
sub
and
das
shr
pusha
adc
iret
mov
ins
cs
xchg
or
(bad)
stc
adc
mov
jb
(bad)
fnstsw
mov
adc
lea
add
mov
test
jmp
push
mov
enter
adc
inc
push
test
test
push
add
jb
jle
jp
jno
lahf
add
test
je
mov
fild
inc
fs
add
push
push
push
(bad)
mov
mov
jmp
out
fcom
jne
cli
or
je
pop
push
push
gs
mov
clc
sbb
pop
jl
cmp
and
or
fs
in
dec
inc
pop
cmc
pusha
cmp
sbb
repz
enter
mov
add
and
add
clc
outs
cmp
rol
daa
es
push
or
inc
add
inc
vandps
loopne
jmp
jne
pop
mov
je
cmc
popf
mov
outs
mov
cmps
mov
mov
scas
sbb
shl
sub
xchg
sbb
push
ja
pop
jmp
mov
sub
push
test
aas
push
mov
or
ret
dec
inc
xchg
les
cmp
pop
sar
pop
push
and
mov
sbb
sbb
(bad)
cmp
adc
or
xchg
xor
jmp
stos
push
or
adc
and
mov
jg
xchg
leave
or
lock
add
pusha
mov
adc
push
push
or
rcr
in
mov
mov
jo
jo
push
push
add
adc
push
add
mov
loope
fsub
adc
add
sbb
pop
mov
popa
shl
aad
ret
jne
mov
jg
jb
cmp
cmp
sub
ss
(bad)
(bad)
sbb
pop
(bad)
sgdtd
pop
nop
adc
adc
popf
jmp
nop
shl
mov
mov
sbb
cmp
aam
fcom
mov
fldcw
test
cmp
shl
pop
cmps
or
inc
call
pop
mov
mov
push
test
mov
mov
dec
or
ret
retf
dec
sub
push
fs
jb
add
shl
pop
mov
ret
fistp
or
int
sbb
int
loopne
cld
lahf
jg
imul
imul
jne
aam
push
mov
aad
mov
jb
cmps
les
add
mov
push
pop
fcom
stos
inc
cmp
adc
mov
pop
loope
js
fucomip
adc
sbb
or
ret
xchg
fstp
sub
or
push
xchg
and
aas
mov
mov
test
push
stos
je
jno
retf
aaa
or
sub
xchg
cli
jae
pop
inc
cld
and
fs
push
clc
add
dec
loopne
sar
xor
add
push
das
nop
fsub
adc
fbstp
cmp
int3
push
or
rol
adc
mov
cs
or
int
fmul
movs
add
mov
mov
add
and
add
add
jg
inc
call
push
js
mov
mov
mov
jno
ficom
mov
inc
inc
or
jb
cwde
jbe
mov
or
scas
imul
adc
push
dec
movs
adc
adc
rcl
cmps
mov
sub
add
enter
movs
inc
rol
sbb
add
inc
inc
jmp
push
push
jbe
mov
mov
inc
dec
sub
shl
je
js
pop
xor
sbb
daa
push
popa
fcom
xchg
mov
mov
mov
sti
enter
cmp
out
test
fst
dec
adc
ret
cmp
and
xor
out
jnp
mov
sub
adc
fwait
xor
mov
xor
or
sahf
retf
dec
cmps
or
push
aaa
cmp
test
retf
daa
leave
sub
(bad)
jl
and
rol
cmp
pop
jmp
inc
add
push
call
mul
cmps
fdiv
mov
mov
(bad)
mov
loope
xchg
and
cmp
xchg
stc
sahf
in
sbb
cmp
mov
rsqrtps
push
xchg
pushf
dec
idiv
movs
enter
loop
(bad)
js
ret
sti
xor
cwde
adc
dec
out
icebp
push
or
add
pusha
jg
call
cmp
mov
scas
or
add
xchg
mov
add
push
sbb
in
cli
jo
jp
adc
aas
sbb
bound
arpl
and
xchg
adc
fidiv
pop
cmps
sahf
fist
inc
aaa
ret
jg
rcl
cs
mov
xor
inc
lock
lea
jge
sub
lea
stos
fs
je
test
popa
jnp
push
push
push
and
xchg
ret
sub
or
jle
push
(bad)
ds
jmp
push
mov
fiadd
mov
in
ret
push
mov
jne
push
sbb
xor
pop
jns
(bad)
std
or
fisttp
test
stos
xlat
jge
pop
push
push
sbb
das
jb
push
sub
cmp
in
pop
inc
dec
fsubr
ret
cmp
movs
add
cmp
sti
add
push
inc
xchg
xlat
aas
test
push
fbld
repnz
mov
(bad)
push
and
push
dec
cs
inc
jmp
data16
mov
inc
ds
jge
inc
xor
inc
add
push
add
push
push
lea
je
sbb
mov
pop
loope
push
arpl
inc
push
loopne
jo
iret
sub
push
or
push
lods
aas
lods
xor
repnz
jne
sub
adc
scas
sar
mov
inc
or
or
adc
mov
test
pop
je
jge
fidivr
pop
ret
jg
ret
sar
sub
mov
test
shr
mov
xor
pop
pop
rcl
nop
ficom
mov
pop
into
push
inc
outs
push
or
mov
push
fucomip
xchg
outs
sbb
ficomp
mov
sbb
adc
dec
push
inc
out
mov
sbb
retf
sub
and
(bad)
scas
and
jmp
add
and
dec
cmp
into
out
mov
mov
sbb
sbb
pop
cmps
or
cld
sbb
jae
sbb
jmp
ror
aaa
icebp
push
and
retf
sbb
lods
xor
sbb
jno
pusha
ret
pop
push
cli
xor
push
jg
das
es
add
cmp
jne
pop
loop
les
repnz
test
xchg
pop
call
cmp
mov
pop
or
pop
mov
add
std
lahf
mov
pop
add
dec
inc
js
adc
push
outs
mov
js
out
mov
jno
cld
out
dec
pushf
ret
and
imul
mov
(bad)
xor
add
push
add
sub
push
enter
cmp
mov
adc
es
inc
xor
(bad)
aam
add
mov
jl
add
push
and
and
mov
jne
(bad)
pop
jmp
ins
mov
and
sbb
add
rol
adc
push
inc
add
loope
pusha
dec
aas
ins
push
add
push
enter
(bad)
adc
push
mov
mov
dec
mov
sbb
xor
push
mov
dec
repnz
xchg
push
ins
inc
xchg
xor
xchg
sbb
cmp
xor
or
test
aad
movs
ins
jmp
retf
js
js
and
xor
cmps
or
ja
push
rcr
(bad)
sub
sbb
add
jle
adc
sbb
(bad)
sub
mov
fld
add
jne
sbb
push
xor
div
clc
cmp
cwde
jle
test
mov
(bad)
es
rcl
push
ret
enter
cmp
loop
mov
fld
addr16
bound
test
bound
cmpps
inc
rep
lods
cmp
sub
daa
add
sub
sub
add
xor
jp
test
mov
jle
sahf
scas
mov
fdivr
cmp
adc
add
cmp
xor
xchg
lds
pop
mov
cmp
mov
inc
and
fist
xchg
mov
pop
dec
push
push
cwde
inc
lea
test
push
mov
cmp
call
push
popa
and
leave
ror
mul
jo
aas
lods
add
jns
and
xor
mov
adc
cmp
inc
movs
lds
shl
into
clc
xchg
into
cmp
jne
test
(bad)
xor
pop
hlt
inc
push
add
push
push
mov
push
pushf
adc
loopne
in
or
add
sub
xor
scas
mov
movs
mov
dec
sbb
fild
lea
mov
mov
test
or
xor
or
or
mov
sahf
cdq
test
mov
std
adc
bound
lods
pop
mov
dec
push
jmp
or
adc
outs
push
mov
cmp
cmp
popa
xor
cdq
jge
and
jp
dec
adc
in
mov
mov
pop
ret
sub
lods
mov
sahf
lods
add
pop
lock
loope
inc
lea
push
add
cmp
jp
loop
inc
jmp
lea
lods
jecxz
scas
adc
cmp
inc
inc
add
push
jle
sahf
add
sbb
leave
in
jnp
and
inc
js
ret
push
adc
push
rol
sub
jo
int
jecxz
or
clc
dec
jne
and
mov
movs
pop
sbb
cmps
ins
jns
dec
add
call
and
pop
sahf
adc
mov
and
outs
or
mov
xor
test
test
adc
loop
fcomp
cli
imul
xor
sub
xor
ins
fwait
cmps
xor
cmp
sub
sub
inc
add
mov
dec
push
fs
pop
test
jb
minps
sub
cmp
aam
adc
fild
pop
sbb
in
call
mov
mov
mov
mov
aam
push
es
inc
sbb
xor
dec
retf
xor
(bad)
push
sbb
xor
ja
or
xor
push
loopne
sbb
adc
or
pop
mov
cs
dec
lea
data16
push
push
adc
ds
mov
dec
sub
adc
adc
dec
es
in
cmp
ficom
inc
push
add
dec
cmps
loopne
add
ins
xchg
imul
pop
jp
pop
push
mov
inc
sub
retf
bound
retf
(bad)
pop
je
sbb
push
mov
in
pusha
aam
ds
or
sbb
ss
loopne
inc
cmp
xlat
mov
mov
sub
addr16
setns
lock
dec
enter
sbb
add
dec
jae
and
dec
sbb
push
mov
dec
cmc
push
xlat
dec
scas
xchg
stos
push
pop
lds
jo
cmp
lods
and
pushf
les
fwait
adc
imul
inc
(bad)
add
jecxz
jne
push
pop
push
push
jmp
dec
pop
inc
les
push
push
sbb
std
or
add
in
mov
rol
call
mov
pop
fistp
test
adc
or
pop
aas
ret
call
dec
cld
dec
mov
push
push
mov
ret
or
mov
pop
pusha
jle
sbb
sahf
cmp
add
movs
ret
ins
je
rcr
gs
jmp
sbb
lods
push
mov
jecxz
or
push
sub
femms
xchg
cmp
ror
sub
inc
fs
outs
jae
mov
push
sub
jle
dec
dec
jo
xchg
add
cs
je
add
dec
hlt
xchg
add
push
mov
mov
xor
pop
jmp
jle
in
adc
push
mov
or
popa
mov
and
and
xchg
(bad)
xor
adc
push
jnp
sbb
xor
(bad)
sbb
push
js
fidiv
int
leave
inc
test
ficomp
push
push
push
push
mov
mov
sbb
mov
enter
fsubr
lds
push
pop
mov
popa
mov
mov
xchg
call
inc
js
jle
mov
dec
jl
push
push
fsub
add
jae
rcr
mov
add
shl
hlt
inc
ins
and
mov
int
sbb
sbb
and
movs
fidivr
or
mov
jmp
or
adc
jb
adc
xchg
cmp
sub
or
sbb
sbb
mov
and
or
push
dec
or
sar
gs
iret
(bad)
mov
je
sub
jbe
addr16
loopne
mov
pop
inc
data16
enter
ss
sbb
mov
test
ret
xor
(bad)
push
(bad)
push
lahf
pop
pop
push
nop
mov
mov
sub
xor
lea
or
pop
add
pop
push
dec
iret
push
mov
aaa
adc
in
or
mov
cmp
add
call
gs
movs
push
inc
pop
xchg
push
jmp
push
jg
or
sbb
mov
mov
xor
adc
mov
ficomp
sub
(bad)
shl
pop
lock
cmp
mov
dec
mov
and
test
sbb
out
retf
sub
aam
cli
xchg
enter
xlat
jge
cmp
or
data16
sub
popa
or
add
stos
and
mov
dec
jmp
mov
lods
and
xor
dec
push
add
adc
inc
pop
iret
pop
jb
jmp
test
sbb
cmp
push
es
xor
data16
mov
pusha
lock
clc
loopne
ja
mov
inc
lea
mov
fs
sub
pop
std
into
push
cmp
sahf
inc
js
push
jne
jbe
mov
push
lock
add
test
jle
cmc
popa
cli
cwde
pop
push
mov
leave
xor
cmp
fcomp
jmp
inc
ins
je
and
pop
add
sbb
add
jmp
icebp
lods
retf
das
sub
pop
add
and
push
lds
push
mov
push
mov
mov
adc
adc
add
or
pop
pop
mov
push
adc
push
pusha
iret
and
push
push
push
mov
inc
(bad)
es
and
pop
adc
daa
pop
push
dec
mov
mov
pop
xchg
cwde
enter
or
inc
sbb
ret
mov
jo
sbb
rcl
ror
mov
push
push
mov
int
mov
jae
lea
add
xor
add
inc
jo
jae
movs
fs
jo
add
call
or
je
or
or
js
js
pop
push
shl
mov
mov
pop
push
sti
leave
js
pop
inc
jo
in
mov
iret
mov
pop
in
stc
jno
addr16
movzx
retf
add
int
pusha
sub
add
fisubr
xor
shl
mov
fild
and
cmp
xchg
inc
sub
mov
das
lock
aad
mov
xchg
adc
scas
add
ror
movs
add
jmp
shr
fisttp
sahf
sub
jne
sbb
cmc
xchg
mov
xchg
sti
push
or
push
pop
test
test
retf
inc
clc
xchg
or
pop
jmp
push
mov
sub
out
xchg
rcl
push
icebp
add
enter
addr16
sbb
inc
shl
and
push
and
test
cli
mov
bound
xor
sub
xchg
dec
lock
xchg
mov
xor
and
push
sub
ss
ja
add
mov
jmp
sbb
pushf
push
clc
push
mov
out
rcl
push
sub
cmps
stc
(bad)
call
inc
add
jl
cmp
out
retf
ds
ja
sahf
out
jmp
adc
xor
xor
pop
inc
inc
rcr
jmp
pop
clc
test
sbb
xchg
adc
jmp
and
in
inc
test
dec
lea
into
push
jecxz
adc
data16
push
add
xor
xor
push
push
sub
out
inc
aas
pop
and
addr16
push
dec
adc
dec
inc
pusha
and
test
pop
or
dec
inc
jb
cmp
fs
ins
jo
je
sub
and
jle
push
add
scas
xor
or
xchg
cmp
add
imul
movs
xor
fidiv
and
mov
stos
and
mov
and
loopne
inc
inc
mov
(bad)
repnz
or
cmp
xor
push
lea
mov
jbe
into
push
gs
aam
loope
jb
not
push
xor
lods
inc
mov
stos
mov
pop
fistp
cdq
pushf
pop
iret
stos
cli
pusha
daa
nop
daa
inc
clc
pop
push
jl
sahf
cmps
stc
cmp
push
inc
cs
outs
jl
out
mov
stc
cmp
shl
jp
inc
inc
les
mov
inc
sbb
or
jl
ins
and
jne
xor
cli
add
push
and
sub
lahf
aas
lock
sbb
clc
pop
pusha
mov
or
aaa
sub
dec
or
inc
fs
push
add
mov
xor
xor
cmp
adc
mov
loopne
clc
fbstp
dec
mov
inc
cmp
cmps
add
xor
outs
and
inc
es
cmp
(bad)
push
cmp
sub
push
movs
sbb
inc
call
push
fs
shr
sbb
movs
dec
movs
cmp
ins
dec
ret
into
jg
add
fist
and
cmp
inc
and
imul
push
popa
lock
cmp
add
sbb
jb
sahf
add
adc
and
dec
inc
add
pop
jb
daa
lahf
lock
inc
or
add
cmp
pushf
push
dec
ds
pop
(bad)
stc
add
mov
dec
and
call
dec
sbb
sbb
inc
cmp
inc
cmp
inc
sub
inc
xor
pusha
icebp
mov
xchg
jl
add
cmp
movs
sbb
stos
pop
push
sbb
jecxz
cmp
inc
lahf
js
aam
icebp
push
outs
dec
cmp
xor
inc
xchg
out
sbb
inc
mov
push
sub
hlt
clc
pop
movs
mov
fisttp
xlat
cmp
push
sar
mov
dec
push
sti
push
cmp
add
add
loop
xchg
test
jge
sub
mov
jl
push
jle
jmp
and
mov
rcl
dec
push
inc
les
out
loopne
jp
sub
inc
sub
jle
mov
stos
ins
sbb
cmp
out
mov
je
sbb
push
loope
mov
mov
dec
loopne
or
jbe
push
add
call
fcom
inc
jno
(bad)
fidiv
retf
popf
ror
dec
sbb
push
inc
push
and
push
sub
and
mov
dec
imul
or
(bad)
or
ds
(bad)
push
loopne
push
dec
inc
in
dec
(bad)
into
inc
dec
sahf
(bad)
fisttp
add
xchg
xor
add
jo
fimul
aam
loopne
xor
xchg
les
cmp
fist
mov
mov
js
pop
lods
jmp
mov
sub
xchg
pushf
sbb
stos
add
push
add
or
push
mov
mov
shr
or
jmp
pushf
push
loop
adc
pop
imul
lahf
add
clc
lock
fmul
enter
mov
cmp
push
test
pop
or
lock
xchg
xchg
adc
clc
mov
outs
jmp
or
cmp
xor
adc
pusha
scas
shl
xchg
rcl
and
cmp
into
outs
sub
cmp
add
adc
(bad)
call
push
mov
or
pop
sub
es
mov
cmp
jne
pop
or
ror
daa
lock
push
nop
es
jne
adc
rol
mov
mov
ss
stos
xchg
adc
cmp
sbb
fdiv
push
retf
pop
push
pop
call
dec
and
mov
push
fadd
cmp
nop
add
nop
mov
adc
and
jmp
fucomip
fwait
push
push
dec
and
test
pushf
mov
sbb
mov
cmp
mov
xlat
dec
xor
xchg
push
retf
scas
mov
xchg
fs
ds
push
cdq
mov
xor
lds
mov
inc
(bad)
mov
cdq
and
mov
fst
daa
jmp
inc
popf
sub
sbb
mov
sbb
mov
adc
cmp
push
inc
xlat
cs
mov
dec
(bad)
or
call
js
ror
ins
data16
adc
cdq
sbb
enter
add
icebp
pop
jmp
int3
fadd
pop
mov
jl
push
test
mov
pop
and
push
xchg
ror
xchg
out
les
movhps
xor
bound
in
add
inc
hlt
loope
push
add
mov
jbe
inc
scas
xor
cdq
sub
pop
sar
add
push
sub
jb
add
dec
adc
jno
and
or
pop
sub
lahf
push
dec
ins
adc
lods
push
mov
sub
pop
pop
mov
sbb
sbb
lods
icebp
imul
dec
or
or
mov
xor
jle
lsl
sub
and
dec
les
aaa
jmp
jmp
cmps
push
pop
pop
jns
ror
push
test
in
xor
push
(bad)
inc
jge
and
fdivr
push
jo
icebp
ja
movs
(bad)
sti
inc
mov
ja
leave
mov
in
test
or
ds
xor
scas
es
cmp
jge
cmp
nop
es
ja
or
test
push
sysret
xchg
mov
add
or
aas
ret
jnp
ins
mov
push
arpl
sbb
jg
push
js
ins
pushf
outs
clc
cli
out
inc
mov
call
std
xor
add
push
pop
or
jmp
jnp
dec
and
mov
mov
loop
and
in
add
add
int3
jg
dec
loopne
inc
sbb
mov
sahf
xlat
in
iret
sub
add
jb
cmp
sar
stos
movs
sub
xor
lds
xlat
and
jnp
and
push
sbb
sub
xor
cwde
sub
jo
loope
das
lea
jle
sub
push
int
imul
sbb
repz
mov
dec
dec
stos
adc
xor
mov
push
jne
data16
call
in
pop
pop
sbb
div
test
and
inc
js
xor
je
je
hlt
aaa
and
jle
and
fisttp
sbb
je
jne
sub
je
scas
sbb
ins
xor
jbe
bound
push
jle
cmp
shr
call
fcomi
mov
mov
into
sar
pop
das
add
push
loope
push
rol
pop
cmp
mov
fimul
or
jle
mov
or
sbb
push
jmp
or
xor
add
cmp
or
leave
aaa
ret
scas
ret
fcmove
fdivrp
jg
jl
js
jg
sub
push
lods
xchg
aam
and
xor
add
rol
and
jl
jg
dec
or
add
sub
jnp
adc
(bad)
pop
push
jns
push
adc
jmp
jg
ret
add
push
(bad)
sti
dec
les
shr
or
pop
jnp
dec
push
jbe
fist
inc
fiadd
mov
ins
xlat
sub
or
ret
iret
mov
out
movs
inc
jge
add
or
push
inc
sbb
push
and
add
cmps
das
je
(bad)
cwde
and
xchg
in
fmul
adc
push
jo
push
repz
cmps
push
ins
not
xor
cmp
repnz
push
or
and
loopne
cli
je
shr
mov
inc
adc
js
push
mov
mov
push
or
dec
or
add
pop
sub
jle
pop
data16
adc
cmp
sub
repz
push
imul
inc
dec
outs
mov
dec
inc
adc
cmp
inc
cs
xor
pop
xchg
or
iret
sub
mov
xor
mov
mov
push
inc
stos
pop
into
sar
je
xor
adc
pop
jmp
push
sbb
mov
adc
dec
xor
ror
jno
or
sbb
dec
or
aas
sbb
adc
and
or
addr16
inc
js
push
jmp
rcl
cdq
lods
sbb
test
mov
inc
dec
test
add
inc
mov
shl
sbb
cmp
fcom
cmp
jae
cs
ds
adc
sbb
rcl
sub
cmp
sub
push
jo
or
mov
jns
lods
movd
or
add
jns
pop
push
repnz
stos
ja
mov
js
loopne
add
dec
movs
xchg
push
test
das
cdq
pop
shl
mov
jle
jo
push
jl
xor
lahf
imul
and
(bad)
pop
jecxz
xchg
add
(bad)
sub
js
enter
test
aas
ret
cmp
sbb
fwait
jo
js
jmp
cmp
jns
and
mov
leave
or
push
add
dec
pop
pop
aas
mov
xchg
enter
add
push
(bad)
mov
loopne
or
push
sbb
cmp
lds
xor
sub
lahf
imul
push
dec
xor
mov
pop
loop
cmp
pop
add
push
sar
out
adc
pop
push
mov
je
pop
je
(bad)
jne
mov
repnz
xchg
pop
pop
ret
sbb
sbb
pusha
mov
nop
xchg
aaa
xor
lea
or
loopne
fsub
outs
push
and
(bad)
dec
cmp
mov
dec
stc
stos
addr16
pop
(bad)
add
xor
jns
ins
adc
sbb
and
sbb
jb
cmp
loope
lds
pop
inc
and
pop
xor
sbb
adc
xor
pop
push
rcr
add
jbe
sub
pop
push
adc
sub
je
cwde
ss
lock
cmp
xor
(bad)
lock
jmp
xor
mov
lea
pop
pusha
dec
dec
xor
push
sub
je
mov
pop
dec
inc
mov
jne
push
ret
sbb
js
xchg
test
loopne
push
sub
and
fsub
ret
pushf
sahf
movs
scas
adc
out
jge
retf
jmp
and
and
and
adc
test
into
or
or
add
add
sub
add
sbb
imul
pusha
scas
call
pop
adc
pop
sbb
pop
and
cdq
xchg
ret
mov
push
bound
inc
sbb
sub
es
mov
jl
xchg
icebp
push
mov
adc
cmp
ins
inc
cdq
jo
xor
inc
daa
icebp
mov
or
ss
push
add
or
(bad)
data16
fist
fdiv
outs
adc
inc
sub
inc
ins
sbb
xchg
jl
pop
push
pop
push
xor
jns
and
adc
lods
push
xor
push
xor
sub
scas
jno
jle
inc
inc
arpl
in
dec
jo
push
repnz
jo
in
dec
dec
inc
je
icebp
stos
add
mov
push
imul
call
xchg
xchg
push
cmps
pop
add
pop
jl
fs
adc
lods
and
sbb
push
dec
dec
mov
out
mov
adc
push
rol
test
add
int
jmp
push
xchg
add
fwait
push
push
xor
or
dec
jecxz
inc
shr
mov
xor
xor
xchg
ret
push
pop
push
dec
jo
adc
loope
inc
cdq
call
sti
jne
les
add
push
cmp
push
xchg
push
add
mov
pop
mov
ja
push
mov
sub
mov
pop
lahf
outs
out
aas
push
add
sbb
dec
mov
fimul
mov
adc
test
jg
rcr
push
push
inc
dec
leave
bound
mov
outs
mov
push
movs
push
push
int
into
sbb
add
dec
cdq
fimul
in
sbb
out
movs
in
nop
jp
xor
inc
push
add
fldcw
mov
or
(bad)
jmp
cmp
push
addr16
xor
aaa
xor
push
mov
or
xor
jne
or
jo
adc
or
inc
cmp
pop
jnp
pop
stc
sbb
xchg
pop
and
pop
xchg
imul
inc
and
les
out
sbb
dec
xchg
or
ficom
lods
mov
pop
jmp
loop
test
nop
and
sti
mov
mov
sub
cmp
(bad)
(bad)
in
jmp
sbb
sbb
cmc
push
popa
ins
jmp
test
data16
bound
iret
in
dec
gs
stos
iret
sar
icebp
push
sub
ds
addr16
jg
out
callw
push
push
loope
outs
mov
push
push
push
lock
fsubr
iret
test
inc
inc
cmc
pop
enter
push
inc
icebp
push
arpl
jle
adc
mov
dec
cmp
or
gs
xor
enter
jb
add
ins
out
push
push
fcomp
xchg
mov
add
fs
jo
je
out
nop
aaa
push
jl
sbb
push
out
xor
iret
fisubr
js
nop
sbb
jbe
inc
cs
pushf
mov
movs
test
jae
in
mov
xor
stos
mov
xor
inc
push
fs
repz
xchg
retf
fsub
jns
iret
in
sub
sahf
out
sahf
jge
movs
mov
call
add
inc
sub
adc
inc
add
dec
push
cmp
sub
or
pop
jl
add
push
adc
xchg
sbb
fstp
int3
and
xchg
bound
and
or
mov
jae
(bad)
push
adc
data16
add
mov
adc
add
dec
ss
sub
add
cmps
pop
or
xchg
(bad)
and
mov
mov
inc
sahf
and
add
add
adc
mov
movs
lahf
arpl
inc
fs
pop
add
pop
test
dec
popa
and
mov
adc
or
mov
and
and
and
mov
cmp
daa
movs
jo
in
mov
mov
aam
mov
mov
test
movs
dec
mov
shr
pop
pop
ins
cmp
repz
and
imul
sub
lock
lock
repz
ja
dec
adc
lods
add
repnz
sbb
and
xor
pop
gs
je
pop
fs
adc
pop
xchg
adc
jmp
push
mov
jle
inc
lods
inc
inc
in
popa
ins
pop
popa
lods
xchg
sbb
aas
xor
mov
pushf
add
sahf
pop
aaa
push
ret
(bad)
in
pop
imul
aas
outs
adc
adc
sbb
jl
push
mov
mov
movs
dec
pop
pushf
rcr
sar
mov
int3
ja
push
mov
ror
out
je
stos
push
sbb
add
sbb
out
jle
push
jg
lea
pop
aas
adc
add
xchg
pop
rcl
jno
jno
push
or
push
repnz
xor
mov
push
out
mov
jmp
les
push
ds
repz
and
cmp
adc
jecxz
and
fistp
dec
cmp
adc
or
xor
or
pusha
(bad)
cs
das
pusha
jne
inc
movs
scas
fisttp
and
pop
mov
and
add
push
mov
and
fld
stc
dec
mov
cmp
out
sbb
test
std
outs
dec
jle
(bad)
jmp
ss
inc
add
mov
and
sbb
adc
and
push
out
nop
add
inc
mov
add
mov
add
addr16
shl
push
ins
inc
push
push
inc
cmp
js
jo
loop
sar
fadd
adc
push
mov
push
jle
pushf
neg
neg
push
push
cmps
js
xchg
sar
jnp
popa
sub
sbb
sbb
out
or
or
outs
or
sub
loope
fdivr
bound
sbb
pop
lock
das
add
loopne
inc
pop
or
sub
jl
or
push
daa
cdq
or
faddp
das
mov
cmp
je
cmp
(bad)
jne
icebp
lea
cmp
mov
inc
cwde
mov
fild
sbb
and
pop
(bad)
pop
retf
push
je
mov
or
int3
loopne
jmp
cmp
adc
repz
push
and
jae
nop
sub
pop
dec
mov
xchg
jb
cmp
pop
xchg
nop
mov
popf
mov
les
cmp
pop
mov
jb
pusha
cmp
pop
jle
je
push
xchg
iret
add
fmul
aaa
test
pop
daa
gs
add
adc
or
cmp
xor
push
repz
cdq
dec
push
inc
retf
leave
inc
dec
cmp
add
repnz
loopne
and
jl
lock
ins
out
push
addr16
lahf
pop
push
mov
cmc
and
stos
pop
scas
xor
int3
cmp
jne
outs
adc
cwde
adc
pop
push
mov
pop
lock
clc
je
push
scas
pusha
or
mov
jbe
inc
sahf
and
sub
pushw
cmc
sar
xchg
xchg
add
sbb
cwde
popa
mov
fcmovbe
into
adc
leave
int
add
mov
std
scas
xor
sbb
pop
jnp
push
and
or
or
ror
mov
push
xor
and
add
xchg
xchg
cmp
jne
jns
sub
dec
clc
push
sbb
push
push
jne
cmp
push
mov
ret
js
sahf
out
sub
cmp
mov
gs
mov
xor
fild
mov
dec
cli
push
push
push
jns
out
dec
inc
push
dec
dec
xor
ret
cmp
ficom
sub
jbe
sub
iret
cmp
or
mov
ss
(bad)
scas
lods
int
test
loopne
or
jg
bound
jo
mov
mov
sub
mov
inc
and
enter
sahf
out
push
cmp
inc
inc
lock
shl
sbb
push
lods
sbb
add
cmc
add
pusha
mov
mov
je
inc
jle
and
sub
sub
sub
lea
lods
or
pop
clc
mov
fld
sub
dec
or
add
mov
bound
cld
mov
js
mov
jg
push
(bad)
lds
cld
idiv
aam
cmp
int
or
stos
ins
js
scas
scas
std
outs
mov
lock
push
cmp
jle
fstp
jl
test
(bad)
icebp
or
fcmovu
xchg
jmp
fcomp
cld
lock
neg
push
leave
fmul
push
fnstenv
mov
push
lock
add
cmps
je
dec
ins
pusha
cmp
xchg
sub
jmp
loop
push
push
push
rcr
push
or
inc
or
daa
jle
ret
add
movs
ffreep
out
push
mov
add
add
aam
rcl
lahf
ret
lds
xchg
and
pop
sbb
and
stos
js
(bad)
adc
cmp
jge
and
and
sbb
cli
ja
push
add
add
mov
mov
imul
ins
inc
sub
add
out
(bad)
sub
(bad)
push
or
xchg
aad
xchg
push
test
mov
or
inc
or
sbb
add
mov
add
bound
push
mov
and
leave
pop
lods
or
lea
addr16
repnz
lea
cld
add
cmp
cmps
add
(bad)
and
push
mov
pop
ret
fistp
xchg
fisub
lock
pop
loopne
add
popa
sub
leave
cmp
mov
pop
push
mov
xchg
jle
jle
lea
push
aaa
adc
sbb
dec
cwde
add
in
dec
dec
aas
ins
pop
or
lahf
pop
or
add
sub
ins
fcom
jno
dec
jg
repnz
loop
jg
add
mov
pop
xchg
mov
outs
or
aam
xchg
or
inc
pop
ret
ret
repnz
dec
icebp
fdivr
ds
pop
add
sbb
adc
mov
inc
mov
xchg
into
sub
jo
sub
adc
pop
jp
and
pop
sbb
mov
adc
js
imul
hlt
js
push
(bad)
ds
cs
dec
call
(bad)
xor
outs
mov
int
rol
and
sbb
or
jae
sub
shr
push
xchg
inc
mov
xor
sbb
push
push
mov
pop
inc
pop
inc
or
jns
mov
sub
cmps
movs
push
rol
cmp
dec
cmp
xchg
sbb
(bad)
pop
mov
fadd
or
mov
fs
cmp
inc
dec
ja
sbb
cmps
repnz
push
and
arpl
add
or
test
ret
icebp
cmp
cmps
jl
push
jmp
mov
jnp
repnz
sub
call
or
aaa
mov
pop
inc
cld
dec
and
(bad)
dec
push
test
sbb
and
adc
sbb
sub
lds
sub
fist
xlat
aas
push
jmp
retf
rcl
aaa
push
das
push
xor
test
popa
shr
push
je
mov
call
push
or
(bad)
mov
stos
and
inc
push
pop
ret
pusha
mov
loopne
inc
cmp
mov
push
fbstp
sub
sub
push
cmp
push
push
xchg
movs
fs
lea
inc
sahf
cld
sub
sub
call
addr16
xor
cmp
jge
loopne
outs
dec
(bad)
sub
movs
enter
and
mov
sbb
call
call
int3
lock
fsubr
mov
and
add
or
pushf
clc
sub
mov
add
push
jb
mov
add
je
ds
cld
test
cmp
popa
aam
stos
adc
mov
ja
fisubr
inc
test
jmp
inc
call
mov
sub
inc
shl
shl
push
aad
jae
pop
(bad)
in
sub
add
out
sar
mov
shr
clc
outs
in
fild
rcr
mov
imul
and
in
and
mov
and
sbb
stos
movs
lock
daa
ret
xor
lea
push
push
outs
and
fwait
test
cld
call
push
xchg
and
fcmovnu
or
inc
addr16
mov
xor
inc
cli
jp
ret
jle
mov
cmp
je
dec
les
mov
pop
xor
ins
sub
daa
iret
and
push
sub
pop
sbb
iret
and
or
and
mov
sbb
inc
adc
jae
repnz
xchg
dec
cmc
stos
xchg
mov
or
mov
xchg
cmp
or
dec
imul
jg
add
mov
nop
add
enter
test
or
dec
adc
adc
cmp
push
inc
dec
leave
lds
adc
xchg
dec
and
push
mov
mov
push
mov
add
or
jb
sub
test
push
cmp
pop
cmp
push
cmp
in
xchg
imul
clc
dec
push
xor
test
add
or
mov
add
mov
pushf
jo
dec
push
fadd
sahf
push
or
xor
mov
popa
out
aad
outs
arpl
cmp
mov
mov
stos
inc
pop
xchg
lock
pop
or
enter
or
movs
pop
xchg
test
cmp
in
mov
sub
bound
rol
jmp
in
pop
sub
clc
jmp
add
xor
dec
retf
sar
cmp
ss
add
in
dec
dec
push
push
(bad)
outs
fsub
mov
test
ins
push
push
adc
cmp
repz
xchg
xchg
scas
repnz
xor
enter
ja
dec
mov
jl
mov
dec
pusha
test
fucomp
or
popa
jb
les
into
repz
pop
push
push
mov
imul
and
pop
or
sub
mov
inc
cmp
rcl
pop
xor
sbb
mov
jl
adc
mov
cmp
mov
xor
adc
cmc
adc
mov
inc
dec
adc
mov
and
loopne
xor
ror
add
test
push
pop
mov
test
cmp
je
mov
ins
jmp
in
pop
mov
jnp
ret
add
fild
pushf
iret
inc
jp
pop
add
sbb
xchg
cmp
leave
dec
add
add
jne
pop
rol
movs
xor
add
jl
jbe
data16
pop
dec
inc
mov
xchg
pop
inc
test
loopne
push
fs
and
sub
xchg
xor
and
or
and
jns
mov
mov
or
or
xor
jbe
sub
jp
xchg
add
seto
and
fs
xor
retf
push
cwde
leave
sbb
jne
ret
sub
push
call
xchg
inc
xchg
pushf
sbb
not
enter
leave
add
fs
jg
sbb
and
test
mov
push
sub
push
ror
cmp
push
pusha
out
xor
fsubr
retf
or
cmc
sub
and
and
xor
add
shr
test
and
or
retf
cmp
sbb
or
dec
jl
add
push
inc
pop
jo
or
shl
fcmovu
add
add
add
add
pusha
add
cmps
test
rcl
enter
dec
add
mov
pop
shl
push
pop
pop
inc
cmp
nop
ret
cmp
mov
aam
sysenter
xchg
cmp
pop
dec
xor
inc
test
loopne
jmp
push
inc
jmp
into
mov
pop
std
jle
or
das
shr
add
sub
lds
cmp
ss
repnz
cmp
push
scas
sbb
pop
xchg
loope
push
push
inc
jecxz
ds
inc
pop
dec
pusha
sbb
retf
mov
and
inc
out
shl
(bad)
in
lea
lea
lahf
adc
dec
(bad)
test
js
jmp
cli
aaa
push
sbb
div
mov
mov
xor
pop
add
cmp
arpl
sbb
arpl
push
push
jg
push
repnz
ds
pop
movs
loop
sahf
js
xchg
std
clc
xchg
dec
inc
(bad)
mov
outs
retf
mov
ins
dec
daa
stc
add
add
fst
aaa
push
daa
ds
out
push
aad
lods
in
push
adc
pop
mov
dec
fisub
and
pop
sub
mov
mov
add
xchg
sar
add
xor
in
add
or
pop
mov
push
push
jo
push
lock
push
not
aas
xchg
xchg
repz
xlat
aam
push
sti
and
fwait
mov
scas
push
jno
mov
rcl
xor
add
sub
cmp
inc
pusha
cmp
in
ss
je
mov
fs
jne
add
iret
xchg
test
mov
pop
mov
mov
loopne
dec
xor
mov
and
mov
das
mov
cmp
adc
push
mov
mov
or
pop
pop
xchg
les
push
push
dec
xor
cmp
dec
xor
pusha
add
retf
and
ret
ret
xor
in
jmp
xor
xor
sub
or
inc
adc
push
outs
stos
dec
cmp
inc
ss
sahf
mov
sub
retf
fst
push
add
sbb
push
mov
mov
adc
or
sub
xchg
fucomip
sub
jecxz
in
dec
sub
mov
rcr
pop
pusha
push
(bad)
test
sub
mov
xchg
repnz
push
ret
mov
aam
mov
icebp
neg
int
outs
mov
cmp
xchg
dec
lea
and
add
repz
sbb
jo
inc
add
inc
loop
cmp
mov
out
pop
and
or
add
cmp
mov
dec
rcl
js
dec
jl
inc
lea
aas
lahf
jl
inc
mov
mov
shr
dec
add
shl
mov
sbb
inc
inc
mov
fstp
stc
xor
scas
or
push
inc
scas
cmp
test
add
or
push
xor
inc
add
rdpmc
in
push
pop
ja
inc
or
xor
and
fs
jmp
div
(bad)
sbb
sbb
or
adc
push
add
or
outs
push
je
add
cmp
(bad)
test
js
mov
push
jbe
sbb
cmp
test
int
scas
inc
(bad)
push
rcl
sbb
cmp
clc
or
lea
push
jmp
jmp
sbb
xor
fstp
sub
push
out
div
rol
mov
rcr
lods
popf
pop
je
out
loop
inc
in
dec
repnz
idiv
push
fwait
add
push
jmp
sbb
pop
pop
pop
push
sbb
sbb
pop
aam
add
je
push
sar
add
push
push
movs
dec
add
mov
fcom
leave
in
in
js
mov
push
and
cmp
int
lock
dec
push
adc
inc
jns
punpckhbw
xor
or
sbb
pop
mov
and
test
test
add
pushf
mov
dec
or
add
popa
xor
adc
mov
inc
pop
rcr
push
imul
retf
retf
jecxz
(bad)
pushf
xchg
rol
sub
dec
sahf
int
xchg
gs
mov
jge
add
inc
adc
push
sahf
fstp
fadd
out
sbb
jecxz
or
loopne
ret
mov
pop
sub
xchg
dec
and
(bad)
push
mov
sar
add
jbe
mov
mov
dec
lea
mov
daa
mov
dec
cmp
jae
iret
shl
cmp
mov
and
mov
fsubr
cmps
xor
adc
push
imul
adc
jg
pop
dec
sbb
mov
pop
mov
or
push
or
sar
or
adc
je
mov
mov
enter
pushf
cmp
lahf
mov
push
test
sub
fist
fs
push
cmp
jne
leave
push
add
mov
pop
push
call
jmp
in
push
push
dec
in
mov
cwde
es
add
push
mov
jns
pop
pop
pop
pop
movs
dec
push
cld
pop
mov
jo
dec
je
inc
adc
pusha
mov
mov
inc
dec
mov
push
jmp
inc
push
test
sub
inc
inc
das
mov
add
in
pusha
cmp
adc
push
sub
jl
in
leave
mov
dec
pop
jb
cmps
mov
js
add
test
je
aas
dec
jo
pop
mov
pop
sub
fdiv
gs
jns
loopne
push
xchg
inc
push
push
nop
call
aaa
pop
jg
push
xor
je
add
jmp
jnp
je
mov
ins
test
sbb
or
push
cmp
mov
add
sbb
pop
cmp
add
dec
loope
clc
cmps
xchg
jb
lock
pop
mov
clc
imul
mov
test
ror
adc
adc
inc
adc
fcomp
push
mov
cmps
mov
mov
inc
cwde
sbb
push
addr16
lea
inc
jle
push
push
sbb
rcr
mov
push
and
mov
push
popf
jo
sbb
add
push
dec
pusha
add
in
int
pop
add
pop
push
dec
sti
push
add
xor
jmp
daa
ss
sbb
cmp
pusha
add
and
pusha
add
sbb
or
dec
push
movs
sbb
les
push
daa
test
in
fisttp
lods
push
lea
jg
outs
ret
adc
cdq
xchg
push
mov
and
shl
dec
sbb
mov
cmp
push
mov
push
movs
cmp
inc
fucomip
imul
and
add
xchg
test
dec
push
ins
push
clc
pushf
mov
xchg
(bad)
pop
out
and
and
adc
push
jg
cs
mov
jne
aas
bound
arpl
jecxz
jnp
outs
imul
push
shr
cs
aas
push
stos
arpl
popa
or
inc
add
cdq
xor
or
mov
push
or
or
cdq
cmp
imul
dec
ret
dec
stc
cmp
push
cmp
sub
jl
fisub
xlat
mov
add
jne
sbb
add
inc
stos
add
in
or
and
pop
aas
fldln2
enter
setne
popf
push
cdq
xchg
adc
data16
lahf
cmp
or
xchg
fadd
lods
pop
add
and
inc
js
jno
out
xchg
add
sub
lahf
jg
adc
add
pop
add
or
loopne
lds
pop
mov
sub
pop
push
sti
mov
pop
push
sbb
adc
movs
mov
mov
addr16
inc
jo
add
ret
add
pop
xor
inc
xchg
push
add
pop
popa
mov
icebp
inc
sub
or
push
dec
jmp
ss
or
clc
jl
lea
inc
popa
pusha
sbb
clc
inc
in
mov
or
icebp
adc
jp
xchg
sbb
xor
xor
push
shl
dec
xchg
nop
aas
cmps
movs
add
mov
mov
cli
fisttp
ret
jne
and
cs
adc
or
mov
aad
(bad)
test
je
aas
dec
aam
mov
aas
mov
push
sahf
sbb
sbb
jne
mov
add
push
sub
lock
inc
and
cmp
dec
enter
cmp
mov
pop
push
xchg
adc
rol
cmp
push
nop
cmp
call
cmc
inc
mov
or
push
shl
pusha
pop
mov
mov
push
push
(bad)
and
adc
add
icebp
cmp
cli
sub
mov
push
push
cmp
pop
inc
adc
fidivr
(bad)
test
pusha
js
aaa
xor
xor
xor
sbb
icebp
shl
mov
gs
test
adc
lea
mov
xor
xchg
clc
lahf
pop
push
push
adc
daa
out
fsub
xor
push
or
lods
inc
fidivr
sub
in
and
movs
cmp
mov
mov
(bad)
sbb
(bad)
retf
nop
inc
push
iretw
loopne
xor
pop
je
popf
adc
cmp
sbb
mov
stos
pop
push
test
mov
inc
xchg
jle
push
bound
(bad)
je
adc
aaa
adc
pop
test
test
std
mov
or
adc
inc
mov
pop
pop
es
dec
push
shl
fist
sbb
rcr
push
in
mov
ret
repnz
jb
adc
outs
push
dec
push
daa
sub
add
dec
xor
jl
push
dec
xchg
loope
repnz
sbb
sub
xchg
jmp
mov
aaa
jne
ret
inc
pop
push
push
adc
mov
adc
test
and
mov
enter
sub
int
ret
push
push
or
add
push
add
js
pop
add
mov
xchg
add
or
ret
neg
inc
dec
je
or
xor
aam
dec
pop
adc
sar
mov
movs
ins
adc
adc
test
outs
test
cmp
xor
xor
adc
shl
adc
dec
ins
adc
push
stos
push
loopne
xor
and
aaa
mov
sbb
ins
adc
and
adc
mov
dec
add
sar
sbb
xor
sub
dec
jae
jno
mov
mov
mov
movs
mov
dec
aas
add
mov
fisttp
inc
xchg
push
popf
ret
add
loop
and
rcl
jmp
movs
rcl
sbb
or
loopne
mov
or
xlat
jg
sbb
or
push
loop
test
inc
jmp
sub
cmp
pop
cmp
or
ins
cmp
lahf
cmp
push
xchg
sub
mov
bound
nop
out
jmp
add
or
and
adc
pop
fisubr
pusha
adc
gs
stc
add
lea
inc
push
add
lahf
mov
enter
jb
add
and
push
and
enter
mov
dec
fwait
enter
xor
jb
outs
inc
push
outs
xchg
xchg
call
adc
gs
push
adc
jecxz
ins
jo
pushf
fadd
add
xor
sub
sub
cdq
sbb
imul
sub
xor
inc
add
ret
lds
xchg
ret
pop
pop
test
add
push
dec
cwde
jne
xchg
pop
add
add
mov
push
stc
mov
sub
int3
adc
retf
add
mov
xor
test
mov
pop
sub
nop
les
ret
add
or
sub
jmp
sbb
add
add
mov
jo
popf
outs
test
repnz
sub
inc
and
inc
and
xor
xchg
pusha
pop
and
and
xchg
loope
add
cmp
(bad)
loop
xor
cmp
mov
pop
jp
pusha
and
inc
push
push
fs
xor
xor
cmp
and
adc
xor
pusha
lahf
inc
cmps
(bad)
ret
call
cmp
sub
or
rcl
cmp
dec
xor
dec
pop
jo
mov
fs
or
cwde
int3
cmps
xchg
push
push
mov
push
mov
clc
push
xor
inc
or
xchg
retf
and
test
sub
pop
add
stos
push
test
sbb
and
movs
ret
and
adc
adc
fs
ins
sbb
dec
and
imul
and
adc
daa
inc
mov
push
and
cmp
xchg
rcr
pop
mov
pop
js
inc
std
push
inc
xor
pop
sub
loop
mov
jg
adc
mov
icebp
xchg
xor
or
popa
and
rol
mov
inc
mov
lock
or
jnp
mov
emms
jb
pushf
sbb
add
mov
or
ins
std
ins
ins
ja
jle
add
inc
cli
loope
and
fisub
cli
ins
mov
pusha
jnp
sub
push
push
dec
bound
dec
sub
sbb
add
dec
inc
mov
sbb
xor
ins
pop
enter
mov
sub
jo
lea
push
scas
or
test
cmps
adc
xchg
cmp
sti
es
inc
cmp
push
sub
sbb
scas
push
out
cmp
xor
shr
jns
jg
jecxz
sbb
scas
sbb
inc
cli
pop
adc
fistp
inc
mov
adc
test
push
push
adc
add
(bad)
arpl
and
jle
fstp
mov
sbb
mov
ins
imul
sbb
xchg
push
enter
sbb
and
inc
popa
shl
dec
pop
dec
pop
sti
inc
out
mov
xchg
pop
xlat
pop
xlat
cmp
push
leave
fucomi
(bad)
jns
cmps
stc
adc
jp
dec
rcr
or
dec
cld
fimul
enter
test
call
xor
sub
pop
jo
adc
js
dec
xor
dec
leave
les
pop
xor
int
fs
adc
jb
pop
(bad)
clc
push
and
adc
mov
das
in
mov
add
es
and
fistp
jmp
push
sub
nop
mov
leave
aad
inc
dec
movs
ror
mov
xchg
mov
movs
rcr
push
daa
stc
add
xor
xchg
call
loop
inc
ret
mov
mov
add
pop
push
cdq
inc
(bad)
pop
ret
pop
mov
dec
ficom
mov
xor
xor
cmp
dec
and
and
sbb
data16
sbb
retf
sahf
rcr
(bad)
imul
cs
xor
cmp
aad
lods
mov
push
sbb
cdq
xor
push
and
pop
mov
stc
jmp
pushf
lahf
data16
mov
inc
mov
in
xchg
movs
shl
cs
movs
shl
mov
or
adc
pop
enter
adc
xor
or
out
jno
push
rcr
pushf
push
add
sub
adc
cwde
sbb
mov
imul
enter
lock
xchg
add
rcl
dec
les
fistp
add
lahf
in
nop
and
add
inc
rol
jl
jg
push
sub
cmp
jg
adc
cmp
jae
cmps
xor
xor
pop
push
add
enter
pop
pusha
mov
dec
lea
dec
adc
movs
add
aas
pushf
leave
add
mov
add
mov
jl
mov
cdq
xchg
mov
loope
les
mov
loope
add
enter
in
cmps
add
sbb
cmps
inc
sub
in
jb
xchg
pop
push
push
mov
and
sub
jg
xor
jb
xchg
lahf
mov
lahf
lahf
adc
and
inc
mov
mov
lahf
movs
sub
call
add
pop
jg
ret
add
xchg
add
lods
add
data16
xor
test
(bad)
sti
push
or
fstp
add
mov
pop
dec
inc
cmp
jl
shl
je
mov
mov
adc
mov
add
jmp
leave
add
fld
cmp
pushf
and
adc
stos
sbb
cmc
ss
rol
inc
cmp
jmp
or
jbe
loopne
or
lea
and
cmp
jl
cmp
(bad)
add
jne
cmc
pop
xchg
sub
je
mov
fs
movs
jge
add
add
enter
ins
dec
jecxz
dec
test
rdpmc
cld
imul
push
cmp
ret
or
push
int
cmp
jl
push
jno
mov
push
js
add
push
mov
dec
adc
adc
cmps
cmp
sbb
fdiv
mov
test
call
neg
sbb
xor
and
out
cmp
sub
ret
jo
std
pop
inc
cmp
jl
add
adc
mov
push
cmp
movs
or
test
aaa
aam
outs
shl
inc
retf
aad
pop
push
pop
sub
jl
iret
push
push
push
js
repz
das
add
adc
mov
jl
inc
jns
and
enter
add
call
push
jg
mov
mov
push
dec
call
mov
call
gs
and
loopne
xchg
and
adc
lea
cmp
dec
bound
(bad)
xor
mov
fst
out
mov
hlt
clc
xchg
mov
xchg
inc
add
or
mov
lea
adc
or
movs
rcl
pop
sub
xor
sub
leave
cmp
test
push
pop
push
sahf
addr16
pusha
mul
xor
ins
jo
cmc
add
jbe
pop
xlat
add
or
into
dec
mov
mov
xchg
dec
movs
nop
xchg
cwde
pushf
sub
iret
gs
mov
call
jecxz
test
pop
mov
es
ja
push
xchg
nop
(bad)
sbb
into
push
fcmovbe
fmul
cwde
xchg
or
pop
jne
out
or
mov
mov
lahf
lds
xchg
adc
sub
sub
dec
call
test
push
stos
push
pop
imul
xchg
mov
add
arpl
pop
ret
inc
push
inc
cmp
inc
mov
repz
and
or
sub
cs
dec
call
push
arpl
mov
pop
dec
xchg
adc
popa
retf
cmp
push
sahf
and
loopne
test
inc
inc
(bad)
adc
mov
ins
push
imul
dec
xor
push
push
push
jne
ins
inc
fadd
test
pop
je
jnp
or
add
rcr
lods
dec
add
ins
mov
punpcklbw
push
lock
add
jmp
push
inc
push
mov
and
popa
jcxz
jnp
add
cmp
fdiv
sub
dec
cld
jbe
sub
sub
jg
pushf
add
xor
push
push
das
cmp
jne
push
(bad)
lea
adc
xor
ficom
lahf
pop
repnz
fadd
jo
xor
and
add
hlt
add
lods
mov
cs
add
add
rol
and
pop
mov
fmul
in
and
adc
clc
dec
pop
(bad)
push
repz
or
mov
nop
stc
xchg
shr
int3
mov
or
xchg
mov
jo
test
dec
xchg
dec
pushf
fdiv
mov
and
outs
scas
pop
adc
mov
and
and
iret
movs
push
aam
call
jo
inc
cmp
add
ret
jns
popa
dec
push
or
or
and
into
sub
jne
push
and
loop
add
push
xor
shl
aam
jmp
in
ins
push
cmp
pusha
fst
mov
pushf
xchg
mov
and
in
sbb
in
and
arpl
ins
mov
sub
jo
bound
push
adc
mov
and
mov
xchg
push
lahf
push
cmp
dec
call
loopne
test
ficomp
jnp
mov
inc
es
push
sub
cmp
add
push
mov
cmp
jo
cli
pop
dec
and
push
adc
gs
xchg
adc
je
adc
and
ret
add
nop
cmp
pop
fmul
cmps
pop
mov
add
jbe
out
pop
push
jmp
call
pcmpeqd
push
mov
dec
jle
sahf
push
add
stos
mov
pop
xchg
push
fxch
fs
nop
les
je
add
fs
movs
lock
dec
rol
or
dec
shl
and
outs
and
(bad)
jle
movs
mov
dec
inc
adc
std
imul
xor
add
cmp
jne
mov
mov
(bad)
sbb
cmp
lods
mov
sub
pop
add
cmp
test
scas
jo
dec
cmp
fisub
xor
add
cmc
inc
pop
je
sbb
and
sub
and
pusha
sub
push
pushf
fmul
mov
sub
xchg
jge
mov
add
cmp
lock
cdq
and
fs
mov
push
push
je
fs
inc
push
cmc
and
dec
into
push
fidiv
ja
add
ret
dec
and
cmp
xchg
adc
mov
cmp
push
fwait
lods
stos
jle
mov
push
xchg
js
js
mov
in
dec
pusha
popf
adc
ret
xor
mov
add
pusha
add
adc
mov
jns
xchg
jl
or
daa
ja
push
addr16
je
test
xor
ins
and
push
nop
mov
test
push
fbld
xchg
rcl
dec
cmp
xor
and
rol
outs
scas
mov
aad
add
inc
cmp
or
dec
das
(bad)
fiadd
pop
(bad)
cmp
inc
gs
fstp
push
pop
cmp
dec
in
or
add
adc
ret
inc
sub
jb
fmul
jl
inc
cmp
or
jmp
fimul
jl
push
add
push
pop
bound
js
and
movs
cmp
add
jo
mov
or
sub
pop
lahf
sub
xchg
jbe
sar
adc
mov
lahf
mov
mov
movs
and
das
jno
lods
or
and
and
jo
pop
js
push
sbb
add
mov
daa
mov
nop
pop
ds
inc
add
or
cmp
mov
sub
mov
push
xor
movs
adc
inc
ss
ret
adc
gs
fldenv
lods
daa
sub
hlt
push
push
cmp
mov
adc
js
cmp
call
or
or
mov
push
mov
je
or
mov
xor
or
pushf
mov
mov
or
mov
mov
dec
enter
int
into
sbb
cmp
fcomp
test
in
in
repnz
push
jp
mov
mov
retf
retf
clc
cld
add
idiv
sbb
adc
adc
out
cdq
push
sbb
in
xchg
push
dec
and
mov
push
and
sub
add
(bad)
xchg
dec
in
xor
cmp
test
inc
inc
mov
ins
movs
push
push
push
pop
pop
or
outs
adc
shl
cli
and
fs
ins
jmp
jl
movs
jb
add
nop
xchg
cwde
pushf
mov
movs
test
sbb
xchg
dec
mov
mov
movs
push
test
inc
sub
loopne
movs
push
test
hlt
repnz
retf
cld
adc
add
fstp
mov
nop
aaa
or
adc
xor
sbb
and
xchg
retf
sub
xor
test
cmp
retf
movs
inc
dec
dec
dec
inc
pop
sub
pop
pop
add
fild
pop
enter
cmp
les
cmp
fld
int3
shr
and
dec
mov
fisubr
or
test
add
mov
jge
(bad)
out
xlat
pop
(bad)
jns
cdq
dec
popa
into
pop
call
fimul
cmp
mov
arpl
cmp
lea
dec
adc
xor
cs
nop
mov
sub
sub
in
in
and
dec
pop
mov
or
test
mov
dec
test
retf
push
jae
das
inc
shr
jl
pop
sub
pop
jge
fisttp
movs
sbb
imul
shr
adc
clc
mov
or
je
sub
data16
mov
inc
or
out
add
cmp
gs
adc
in
mov
lahf
(bad)
aam
outs
add
inc
add
mov
pop
ret
xchg
add
imul
jae
pusha
sub
arpl
push
add
adc
pop
lock
add
pop
push
into
push
adc
ja
xchg
sbb
add
addr16
push
das
js
sub
imul
xchg
xchg
xchg
daa
add
stos
xchg
jo
sbb
push
adc
push
je
das
nop
xor
inc
fwait
push
jbe
pop
jle
adc
(bad)
int
mov
test
cmp
pop
inc
or
and
xor
mov
xchg
or
jnp
ret
stc
push
jmp
inc
or
sahf
add
xchg
push
mov
cmps
test
add
push
test
jnp
dec
dec
mov
je
push
xchg
xchg
cmp
pop
ss
or
clc
pop
pop
pop
je
leave
adc
push
push
push
mov
mov
cmp
inc
loopne
fld
and
cmps
add
repnz
mov
or
push
push
into
and
fist
jbe
mov
xchg
sub
cmps
adc
ror
or
jno
fldcw
fdiv
xchg
(bad)
xlat
adc
mov
iret
(bad)
ror
pop
adc
xlat
jge
imul
push
push
int3
lods
dec
add
or
jns
cdq
cmp
inc
cmps
aas
cmp
cmp
push
jb
aas
cld
cmp
sar
pushf
push
pop
cwde
push
lock
push
jb
rcr
js
inc
push
pop
jns
adc
pushf
enter
imul
sub
adc
je
(bad)
sbb
mov
sbb
sub
push
icebp
inc
mov
dec
daa
add
mov
pop
and
jns
adc
sbb
cdq
nop
ror
adc
int3
pusha
jbe
lods
dec
inc
pop
or
mov
jmp
jle
mov
and
or
popf
sub
inc
adc
and
inc
or
pop
jge
adc
sbb
jmp
push
adc
pop
inc
pusha
(bad)
and
in
cmp
sbb
dec
xchg
push
jmp
push
push
pop
fsubr
xor
push
imul
sub
aam
xchg
adc
push
scas
adc
fsubr
pop
jl
je
daa
in
mov
push
lahf
inc
and
loop
sbb
cmp
push
stos
pop
outs
pop
sbb
push
daa
push
(bad)
shld
push
push
loopne
aad
jmp
push
mov
daa
outs
ins
mov
xchg
xchg
mov
mov
jmp
pusha
loop
je
push
add
fld
es
jg
cmp
sub
mov
sbb
popa
test
stos
push
or
adc
aas
add
cmp
add
call
mov
add
mov
cld
lahf
ror
mov
push
jno
bnd
lahf
jl
add
push
pop
lahf
lahf
(bad)
and
sub
push
stos
cmp
mov
ss
test
mov
shl
loope
mov
dec
pop
xchg
les
rol
retf
add
nop
pop
out
push
inc
cmp
mov
and
cmp
cmp
test
arpl
mov
les
add
inc
mov
push
test
or
xchg
in
pop
jmp
rcr
js
hlt
out
or
mov
hlt
jns
push
js
xchg
add
inc
aad
enter
les
dec
push
add
sbb
scas
or
bound
adc
je
xchg
jmp
cmp
xchg
and
shl
mov
fnsave
mov
xor
jns
mov
(bad)
xchg
or
pop
jl
sbb
mov
add
daa
sar
adc
adc
sbb
movs
sub
adc
fcmovne
and
sbb
in
add
jne
imul
add
inc
sbb
ret
add
push
loope
cmp
dec
jns
xor
sbb
stc
mov
pop
adc
outs
ret
jg
or
sbb
add
and
xlat
pop
jnp
ror
lds
loopne
dec
cmp
icebp
xlat
(bad)
dec
cmps
sbb
sahf
mov
mov
mov
push
xchg
ins
mov
pop
imul
inc
sbb
adc
mov
dec
arpl
sbb
std
ret
dec
rcl
jle
fldenv
pop
dec
push
push
push
jae
aas
or
lock
dec
add
and
dec
sub
pusha
jle
add
adc
int3
sub
mov
test
cmp
sahf
add
add
adc
sub
sub
mov
je
(bad)
or
(bad)
mov
xor
add
xor
inc
call
movs
bound
(bad)
push
inc
adc
push
cmp
jne
pop
push
xor
push
or
adc
add
or
mov
pop
cmps
mov
sbb
adc
fmul
push
dec
jnp
ins
inc
mov
sbb
push
lea
jl
mov
iret
xchg
mov
adc
push
or
jnp
xlat
jno
xor
pop
xchg
sub
cmp
jge
mov
push
call
lea
adc
fiadd
add
add
mov
mov
fcom
xchg
loopne
mov
dec
mov
or
mov
jae
data16
push
dec
adc
xchg
pop
ret
mov
push
inc
sbb
add
adc
inc
stos
pop
inc
adc
sbb
inc
add
cmp
inc
cmp
lea
call
into
cmp
push
adc
cld
xor
xchg
shl
outs
add
(bad)
fs
adc
add
clts
jg
add
push
push
lea
adc
cmp
pop
add
sbb
jle
das
push
add
push
lea
or
xor
pop
jl
cmp
sub
add
call
out
call
int
imul
sub
inc
push
adc
jne
xor
pop
pop
fstp
les
mov
mov
aad
cmp
cld
rcr
xor
push
sbb
ret
sbb
ja
sahf
sub
bound
push
sbb
xor
sub
mov
mov
mov
lods
mov
nop
cmc
mov
and
sbb
add
lods
push
fxch
icebp
jbe
push
push
cmp
shl
and
mov
test
in
or
cli
push
stc
imul
jb
adc
out
pop
outs
xor
ins
jmp
aad
fld
test
and
add
ja
call
adc
(bad)
int3
out
adc
lahf
ins
leave
inc
push
mov
inc
es
add
lods
jae
or
add
add
push
movs
inc
and
dec
lea
adc
mov
add
xchg
and
or
retf
mov
sbb
lods
mov
div
ja
cmp
sub
nop
dec
mov
add
or
in
daa
pop
icebp
enter
xlat
push
outs
(bad)
lock
or
push
cmp
sbb
shl
cmp
mov
outs
add
sbb
xchg
daa
push
mov
inc
jmp
inc
bound
and
sbb
js
xlat
and
sbb
dec
dec
cmp
push
rol
out
xor
jno
sbb
call
out
mov
in
mov
test
xchg
lahf
(bad)
mov
jge
push
movs
or
xchg
add
in
mov
stos
mov
out
push
int
inc
call
out
add
jge
popf
cmp
jne
add
ror
xchg
fdivr
dec
pop
jecxz
xchg
jnp
xor
dec
adc
add
dec
jnp
iret
adc
add
fadd
add
shl
push
xor
push
push
int3
push
je
sbb
jb
push
ins
fiadd
push
sub
cli
jge
lea
cmp
inc
mov
inc
push
test
clc
inc
jle
push
cli
shl
sbb
clc
add
xlat
add
cmp
stos
pop
rcr
push
gs
mov
dec
fs
add
int
mov
rcl
push
mov
enter
add
ds
fstp
inc
scas
push
mov
xchg
pop
mov
inc
test
push
jmp
lds
xor
dec
and
cmp
in
or
push
call
pushf
pusha
cld
les
xor
ins
mov
or
(bad)
xor
test
setle
dec
pop
and
(bad)
fst
dec
pushf
arpl
int3
push
mov
jb
xor
dec
ins
inc
mov
sbb
and
and
adc
sub
and
ins
dec
int
ret
fmul
add
test
cdq
mov
and
mov
dec
sbb
les
clc
(bad)
iret
cmp
sbb
sahf
leave
lea
mov
push
imul
sbb
push
mov
enter
pop
pop
jmp
pop
dec
mov
fld
rol
xchg
and
ret
adc
dec
xchg
cmp
mov
jnp
je
xor
fbld
bound
mov
pop
adc
push
iret
push
adc
add
dec
loopne
je
clc
outs
cwde
pop
dec
pusha
(bad)
dec
sbb
jmp
and
rcl
jo
xchg
sbb
test
lea
idiv
adc
xor
sbb
js
jl
pop
add
jmp
or
(bad)
test
cmp
out
aas
out
push
inc
call
sub
ins
push
int
inc
ret
pop
mov
push
int
xchg
add
sub
sti
mov
push
daa
aas
pusha
dec
test
push
jne
push
vxorps
pop
and
xor
sub
ds
loop
xor
jne
loopne
ret
cmp
xor
jp
jbe
sbb
push
loop
mov
add
inc
cmp
jno
lea
faddp
rcl
movs
fmul
mov
add
mov
xor
add
mov
dec
jne
xchg
inc
mov
adc
fld
fs
in
pop
mov
or
or
inc
jmp
adc
push
rcl
loopne
adc
test
mov
dec
or
jbe
cmp
ins
pop
add
push
ret
add
xor
bswap
retf
push
sbb
bound
push
icebp
push
cmp
hlt
das
js
cmp
cmp
lea
call
cmp
add
sbb
pop
mov
repnz
fst
je
xor
pop
js
or
mov
inc
xor
or
mov
jl
xor
cmp
mov
xchg
push
and
cld
xor
mov
mov
fcomp
imul
push
lea
and
sbb
aam
cmp
add
and
retf
call
or
mov
add
xchg
ds
push
dec
xchg
jnp
mov
jno
rcr
retf
and
adc
ret
add
jb
ror
or
loope
dec
mov
test
fild
jmp
inc
arpl
in
adc
sbb
cmp
call
mov
add
das
imul
shld
arpl
shl
mov
xor
bound
xchg
push
cmp
adc
jp
fst
loopne
and
ss
adc
test
or
dec
sbb
scas
add
aas
dec
add
loopne
push
and
sar
scas
mov
mov
mov
shl
popa
fimul
adc
adc
bound
mov
fistp
xchg
lods
mov
add
xchg
nop
dec
pop
sub
dec
std
jmp
dec
pop
add
sbb
xchg
inc
sbb
pop
cwde
adc
mov
sub
and
add
inc
ds
pop
fist
push
push
add
dec
imul
or
mov
add
jo
scas
push
cmp
repnz
mov
sbb
or
push
inc
inc
repnz
lds
sub
jmp
pop
icebp
push
or
shl
lock
and
and
(bad)
fnsave
(bad)
dec
retf
inc
enter
inc
inc
imul
inc
push
loop
cmc
ins
pop
jmp
lea
xchg
inc
(bad)
xchg
pslld
aas
enter
sti
enter
xor
jmp
outs
xor
add
adc
rol
mov
nop
cld
or
stos
fisttp
inc
push
adc
jle
mov
popa
test
ror
add
cmp
(bad)
daa
out
cmps
cmovae
dec
push
cmp
mov
dec
scas
xor
movs
ficom
cmps
sbb
mov
and
xchg
push
push
push
pop
imul
push
or
mov
test
lods
push
mov
test
xchg
push
pop
xchg
sbb
test
dec
inc
(bad)
fisubr
sub
repnz
inc
(bad)
adc
xchg
add
inc
or
add
cmp
pop
push
dec
inc
loope
xchg
imul
jns
mov
fidiv
push
mov
inc
or
cmp
inc
mov
lea
clc
call
sbb
data16
mov
or
pop
pop
mov
call
or
xchg
xor
xlat
ficom
mov
mov
loopne
retf
push
jle
jge
push
jnp
jl
jge
mov
add
int3
inc
cmp
dec
xchg
xchg
lahf
mov
popf
push
inc
mov
cwde
cli
aas
adc
inc
sbb
xchg
add
leave
pop
mov
test
add
dec
call
sub
add
cmp
mov
jle
mov
pop
test
mov
ds
sub
inc
sbb
jl
mov
mov
mov
not
nop
in
pop
add
daa
in
arpl
push
lock
into
add
mov
mov
mov
mov
inc
and
retf
scas
xchg
dec
dec
test
dec
leave
xchg
dec
leave
pop
jo
enter
mov
add
in
add
cwde
in
add
and
adc
mov
and
push
nop
movs
add
mov
add
add
sbb
jl
fcom
mov
in
add
mov
cs
test
movs
popf
nop
mov
movs
jge
pop
sbb
mov
xchg
rol
enter
lds
push
add
xchg
adc
xor
pop
mov
js
sub
fistp
and
movs
aam
or
fsubr
pop
push
cld
mov
arpl
xchg
retf
in
mov
in
cs
or
or
add
jge
dec
enter
sub
enter
push
sbb
xor
mov
ret
std
popa
and
cmps
sbb
add
adc
add
inc
(bad)
pushf
jo
fs
mov
les
mul
mov
or
dec
in
icebp
(bad)
sub
mov
pop
bound
inc
cs
or
add
and
xor
loope
dec
fild
push
pusha
dec
jae
rcl
xor
xchg
pop
std
dec
outs
jnp
call
pop
in
movs
test
jmp
inc
adc
clc
sar
jo
push
dec
xchg
mov
dec
xor
add
push
mov
xchg
aad
cmp
mov
jne
xor
bound
xor
repnz
mov
pop
dec
push
mov
sbb
test
xchg
imul
jo
jl
push
mov
inc
ret
cmps
pop
jb
nop
pop
push
jb
daa
adc
daa
pop
sub
adc
daa
pop
jb
add
push
movs
cmp
sub
ror
and
int3
push
movs
dec
adc
mov
mov
or
sub
pushf
sbb
leave
jo
pop
or
leave
or
pushf
pop
and
inc
sbb
cdq
mov
xchg
imul
sub
imul
pop
mov
test
outs
aaa
pushf
mov
aam
add
sub
adc
leave
or
add
cmp
shr
and
ret
pop
adc
je
add
retf
jg
daa
sbb
and
or
sub
mov
inc
jo
jmp
arpl
pop
inc
call
test
aam
cmp
jne
mov
shl
retf
clc
and
pop
aas
lods
sub
sbb
or
sub
std
repnz
(bad)
aaa
and
cmps
xor
cld
into
(bad)
aas
dec
outs
push
ja
pusha
sub
pop
push
inc
xchg
fcomp
cdq
inc
rol
push
inc
and
sub
dec
inc
lea
inc
int3
sbb
aas
push
not
xchg
mov
cmp
cld
gs
add
or
mov
cmp
sbb
sub
dec
add
mov
scas
sub
cmp
push
adc
leave
add
cmp
xor
push
mov
test
mov
int3
rol
mov
loop
dec
pop
or
(bad)
call
cmp
push
sub
enter
pop
fisttp
(bad)
enter
mov
(bad)
xor
out
xor
enter
push
jmp
sub
mov
sub
xor
inc
sbb
je
mov
push
push
imul
lods
fist
xchg
ja
inc
sbb
ins
dec
push
push
div
mov
adc
push
xor
sub
push
and
inc
xlat
or
sbb
pop
add
dec
push
cmp
cli
or
jae
aad
cmp
je
mov
cs
cmp
lea
xor
xchg
xor
sub
cdq
push
dec
mov
sbb
push
(bad)
or
mov
add
xor
cmp
add
pop
outs
pop
ss
dec
pop
das
clc
daa
xor
cwde
lea
jg
pop
sub
stos
lahf
outs
or
lock
sub
jp
add
int3
jne
cmp
sbb
xchg
test
add
sbb
pusha
aas
push
mov
sub
cmp
cmp
adc
add
mov
push
inc
adc
fisub
pop
lds
add
adc
xchg
sub
mov
adc
aaa
scas
inc
jb
jl
(bad)
rol
sub
sub
inc
add
push
shl
mov
push
out
adc
lds
fs
shl
sub
lock
push
jl
xchg
push
jl
mov
push
rol
cmp
loope
adc
(bad)
adc
sub
(bad)
jp
and
bound
dec
mov
sbb
call
cld
pop
cmp
mov
enter
leave
xor
shr
cmp
adc
jmp
sub
or
push
sbb
sbb
push
js
mov
rcr
mov
idiv
(bad)
pop
mov
push
jo
push
inc
pop
mov
pop
xchg
jmp
inc
in
mov
test
dec
pushf
adc
mov
clc
mov
sbb
add
pop
xchg
sub
jne
lods
or
sbb
push
repnz
dec
adc
push
adc
(bad)
in
push
icebp
add
outs
push
pop
pop
ret
add
loop
or
mov
cmp
sbb
push
add
push
push
(bad)
sub
push
enter
mov
push
jmp
fwait
scas
dec
add
dec
lods
jo
loop
sbb
stos
cmp
jb
adc
dec
push
mul
push
xor
or
mov
cmp
dec
outs
inc
pop
mov
iret
mov
mov
test
push
inc
add
jg
mov
add
repz
mov
not
out
mov
or
xchg
popa
or
xchg
push
movs
mov
mov
add
jae
push
out
lea
imul
adc
jne
or
push
cmp
sbb
jo
lods
(bad)
inc
out
push
pop
popf
leave
mov
adc
xor
rcl
mov
aaa
ret
int
into
dec
repnz
call
mov
adc
test
push
nop
mov
(bad)
out
add
xor
inc
jmp
xchg
add
jo
adc
mov
dec
xor
push
in
test
xchg
push
hlt
add
stc
xor
addr16
add
cld
push
push
daa
hlt
xchg
sbb
gs
movs
mov
adc
addr16
dec
sub
mov
ffreep
jmp
pop
jle
sub
xor
inc
dec
xchg
and
mov
shr
popf
pop
das
mov
out
mov
outs
pop
dec
mov
push
inc
xor
push
scas
or
push
call
aaa
outs
add
sub
out
push
mov
mov
and
jmp
not
or
or
cmp
out
aas
dec
add
lea
adc
xor
jmp
dec
jo
into
jne
lock
mov
ds
xchg
imul
push
pop
jbe
test
cmp
push
pushf
call
lods
scas
xchg
mov
mov
cmp
jae
mov
mov
adc
mov
sub
imul
push
dec
aad
push
push
xchg
jno
(bad)
adc
ss
pop
ds
sbb
cmp
pop
sbb
pop
lahf
test
mov
sbb
add
mov
add
mov
dec
test
push
inc
push
sub
xor
gs
inc
ins
and
jmp
push
or
mov
xor
add
sbb
sar
xor
add
adc
sbb
push
int3
sbb
inc
dec
push
and
gs
ds
repz
cmps
call
cmp
popf
in
pop
adc
repz
(bad)
sub
push
stos
mov
cmps
stc
xor
adc
sbb
push
cmp
out
sbb
not
or
push
imul
cmp
push
or
sahf
out
push
push
and
pop
lahf
out
cmp
jl
sbb
rcr
cs
sub
jne
lea
xor
mov
xor
sbb
push
pop
jmp
mov
inc
xor
xchg
cld
movs
cmp
mov
hlt
jns
shr
and
xor
sbb
xlat
test
(bad)
arpl
add
push
jbe
mov
call
jne
fwait
das
push
cwde
cmp
pop
outs
loope
add
ret
mov
inc
lea
daa
aaa
arpl
and
mov
call
ja
aas
sbb
stos
cmp
add
mov
dec
dec
inc
mov
fadd
xchg
mov
ja
sbb
xlat
es
rol
in
cmp
jl
sub
cmp
out
rcr
shr
inc
jb
or
and
xor
mov
lahf
ffree
adc
pop
xchg
mov
xchg
dec
aas
cmp
and
lds
mov
inc
push
lock
pop
call
shr
inc
or
(bad)
xchg
mov
arpl
movs
cmp
dec
dec
push
pop
into
lods
mov
adc
jmp
mov
inc
aam
mov
hlt
ret
test
pop
test
jle
jns
enter
fdiv
and
in
jno
jmp
test
int3
mov
mov
loopne
adc
xchg
cmp
adc
and
adc
or
pusha
shr
inc
and
cmps
ds
xchg
jl
sub
mov
adc
sbb
inc
cmp
pop
pop
jle
sbb
push
push
push
and
pop
push
xor
jg
add
ror
push
mov
xchg
dec
bound
mov
(bad)
imul
enter
fcom
popa
mov
sbb
pop
js
fisttp
fbld
sbb
jp
xor
pop
adc
sub
cmp
ret
rcl
pop
outs
scas
adc
mul
jns
mov
loopne
push
or
push
cli
mov
pop
sub
jmp
add
aam
sbb
inc
jns
cmc
aam
xchg
ins
ins
fisub
push
jae
pop
or
adc
je
dec
pop
and
adc
bound
and
sbb
sub
jmp
mov
push
cmp
mov
jmp
aam
inc
rcr
lock
push
fild
push
adc
cmp
and
scas
push
scas
movs
and
push
es
lea
adc
adc
pop
outs
cmp
fstp
cmp
dec
imul
pop
mov
adc
(bad)
jg
adc
aam
or
cmp
mov
inc
cld
dec
xor
or
ret
int3
jnp
les
(bad)
in
dec
pop
inc
js
or
cmps
les
jne
retf
mov
cld
(bad)
dec
xor
mov
in
push
and
xor
mov
call
pop
dec
mov
pop
add
jle
test
fimul
push
push
mov
aaa
popa
(bad)
shl
pop
js
hlt
int3
scas
pushf
int3
sbb
lea
sbb
xchg
fnstsw
sbb
test
pop
sahf
xor
mov
ficomp
scas
int3
xor
aam
jle
inc
xor
xchg
sahf
aas
jle
mov
jae
sbb
adc
and
(bad)
add
mov
test
test
pop
and
jp
fmul
fdiv
jo
mov
movs
loope
and
cmp
sbb
sbb
jmp
sub
je
adc
jmp
xor
stc
push
dec
push
or
xchg
pop
popa
push
sbb
mov
bswap
xchg
mov
push
xchg
jmp
popf
les
mov
mov
mov
push
nop
mov
test
mov
test
dec
mov
mov
pusha
jecxz
cld
xchg
loope
jnp
add
sbb
sahf
hlt
in
mov
add
or
mov
adc
ficomp
lds
and
adc
rcr
scas
sti
mov
test
cmp
sbb
iret
push
and
mov
das
lods
enter
es
aam
xchg
shl
or
add
push
pushf
jo
jns
pushf
pop
ror
mov
hlt
mov
cmp
xor
bswap
loope
dec
xchg
fsub
push
mov
add
dec
push
pop
inc
ficom
push
and
or
cmp
dec
mov
mov
dec
jl
popa
pop
sbb
pop
mov
mov
pop
xchg
ret
sbb
pop
rol
sub
js
dec
pusha
loop
je
pop
and
mul
mov
hlt
mov
and
dec
in
inc
bound
xchg
retf
mov
cmps
and
addr16
retf
shr
push
sub
stc
and
retf
pop
inc
cs
in
ins
jmp
mov
xchg
pop
cmp
adc
and
xchg
in
adc
mov
dec
sbb
inc
push
add
ror
push
stos
pushf
jge
push
pop
cmc
lods
sbb
sbb
clc
add
orps
outs
(bad)
(bad)
push
sbb
adc
imul
or
loopne
lea
jo
add
push
pop
dec
push
mov
repz
mov
push
ins
inc
loope
rcr
push
ins
fadd
jmp
sbb
fcomp
adc
mov
jg
dec
cmp
inc
lods
int
cs
sbb
fidivr
jmp
and
fsub
sub
pop
push
leave
pop
mov
dec
jne
xchg
add
ficomp
mov
aad
popf
daa
mov
or
movs
into
fcomp
cli
add
cmp
sbb
(bad)
mov
idiv
fsubr
inc
sub
pop
(bad)
jl
movs
jo
pusha
xchg
push
stos
(bad)
sbb
lock
dec
ret
and
xor
jge
sbb
jnp
mov
test
mov
jl
sub
fisttp
add
icebp
dec
fidiv
jmp
xor
adc
dec
inc
retf
inc
test
clc
xor
(bad)
pop
add
lea
jp
ins
mov
mov
mov
push
(bad)
sbb
dec
pop
jmp
pop
clc
cli
dec
fucomip
adc
push
pop
jg
popa
(bad)
sbb
imul
int3
les
shl
jns
mov
cmps
jno
lock
push
pop
(bad)
xor
jmp
push
pop
sti
aad
or
add
sahf
jmp
retf
jne
jl
add
inc
bound
cli
xor
sbb
cwde
cmp
jle
icebp
ins
inc
pop
add
adc
sub
dec
test
loop
sbb
xor
mov
jl
call
add
dec
sub
fcmove
mov
lock
das
push
scas
jns
fwait
sub
jmp
sbb
test
and
and
lods
and
shr
sbb
mov
add
or
jno
push
cwde
mov
lods
push
push
movs
(bad)
jb
rcl
das
lods
lahf
add
push
add
jne
and
ins
jmp
ds
cdq
add
push
retf
cwde
pop
les
nop
inc
jno
and
sub
mov
stc
imul
stos
jb
repz
or
adc
into
xlat
xor
clc
ror
jno
scas
push
loop
sub
mov
test
loop
mov
or
aas
imul
pop
pop
ret
pusha
xor
jne
cmc
xor
(bad)
les
add
dec
adc
dec
gs
pusha
fmul
dec
int3
js
cmp
pushf
pop
sub
inc
push
ror
popa
std
inc
(bad)
(bad)
mov
sbb
dec
jg
dec
and
out
das
test
test
icebp
jne
mov
mov
add
outs
or
push
clc
bound
adc
clc
aaa
pop
in
jne
mov
test
and
pop
or
jne
cmp
jns
test
xchg
fcomp
and
sub
pop
and
mov
imul
mov
movs
shr
sub
out
scas
test
xor
ins
popf
add
mov
cwde
xor
fdiv
mov
stos
or
push
mov
les
push
movs
adc
sub
pusha
sbb
fstp
mov
add
out
jl
dec
je
push
in
jo
pop
jo
inc
and
add
jne
pop
push
xchg
ret
test
and
dec
mov
dec
or
int
outs
mov
pop
ret
ret
mov
pop
ret
fmul
cmp
push
xchg
in
push
add
sbb
or
movs
push
jge
(bad)
scas
cs
xchg
adc
cmp
or
mov
or
rol
jns
adc
mov
enter
clc
cmps
pop
xchg
dec
cmc
dec
push
sub
jns
pusha
and
dec
or
mov
push
xchg
sbb
and
jo
in
dec
test
das
push
lea
jne
loopne
nop
cmp
jecxz
mov
cmp
sbb
pop
loope
xor
dec
mov
outs
imul
ds
les
add
cmp
sub
push
cwde
hlt
sbb
js
fmul
jnp
jge
pop
jb
js
push
lea
sub
or
or
outs
jp
(bad)
push
add
xchg
inc
jmp
jle
cs
or
mov
cld
pop
lock
xchg
add
jne
inc
cmp
pop
mov
inc
add
push
pusha
cdq
cmp
or
hlt
ds
lods
aas
mov
je
jnp
inc
ins
imul
push
cmp
je
mov
sub
mov
add
das
lods
lea
push
add
add
movs
fs
adc
loopne
or
call
shl
inc
or
inc
inc
dec
shr
fcmovbe
es
std
push
xchg
pop
jp
stos
push
out
sub
enter
push
fild
add
ficomp
sbb
fisttp
or
cwde
cmp
or
arpl
inc
les
pop
push
add
outs
add
dec
cmp
test
inc
daa
fdivr
dec
push
hlt
xor
mov
adc
loopne
sub
loopne
test
add
adc
jmp
xor
je
add
int
call
sub
nop
xacquire
dec
sbb
cmp
and
inc
cmp
and
out
(bad)
mov
stos
pushf
loop
nop
es
cdq
xchg
ror
cmp
pushw
fs
ins
out
cmp
sbb
or
sti
mov
ret
outs
pop
dec
pop
js
ja
ss
addr16
jmp
push
sub
pop
push
sub
lock
loope
dec
sub
pop
sub
push
inc
cmps
shl
dec
adc
mov
test
mov
add
dec
xor
rcl
outs
push
retf
sbb
outs
adc
xlat
push
xor
jne
jbe
je
add
mov
add
nop
push
jle
cwde
add
jmp
add
fs
mov
jge
sub
add
(bad)
pusha
push
inc
sbb
shl
adc
outs
sbb
rcl
mov
test
inc
lock
and
adc
and
mov
jp
in
and
xor
rcr
(bad)
ret
adc
neg
clc
xchg
nop
shl
rol
test
push
aad
loope
inc
daa
mov
out
rcl
movs
adc
pop
lea
retf
pop
sbb
mov
jge
jne
sub
add
cmp
cmp
stc
mov
rcl
ret
popa
xor
mov
sar
outs
mov
or
cmp
xchg
xor
pop
cmp
xchg
pop
adc
mov
out
scas
pop
sbb
sbb
cmp
fcomp
push
loopne
push
fst
jo
loopne
jb
popa
aas
(bad)
mov
fild
jno
imul
lahf
jo
ins
pop
inc
push
xchg
test
nop
mov
int3
int
or
jmp
xchg
sbb
cmp
jne
and
xlat
mov
xchg
cmp
adc
push
test
dec
sahf
jmp
lods
mov
pop
(bad)
call
in
cmps
push
ds
and
(bad)
sub
iret
xchg
xchg
or
shl
push
nop
ins
mov
mov
add
add
inc
cmp
pop
rol
mov
into
add
xor
push
sbb
inc
dec
xchg
rcr
push
out
mov
movs
mov
or
fimul
xchg
mov
sub
dec
sub
das
mov
call
bound
lea
add
jnp
dec
mov
cmp
cmps
mov
je
sbb
lods
xchg
push
clc
jmp
adc
aam
push
lahf
and
push
ins
adc
push
push
pop
ja
inc
sbb
xchg
loop
dec
inc
jl
ret
pop
sti
pop
mov
jge
enter
cdq
jmp
mov
sbb
push
push
daa
in
rol
cmp
jns
fnstsw
pop
jns
fnstcw
xchg
jns
cmp
call
adc
test
int
ja
xor
mov
cmps
jl
retf
pop
mov
add
sub
pop
push
popf
cmp
jne
pop
sub
push
push
in
push
adc
mov
push
ret
sbb
pop
lea
cwde
push
xor
outs
mov
les
stos
pop
xchg
imul
pop
and
xor
pop
adc
in
fs
xchg
in
pop
aam
sub
push
mov
rcl
pop
sub
push
push
repnz
mov
add
push
adc
adc
mov
pop
mov
mov
jnp
sti
iret
stc
sub
mov
shl
xchg
push
aas
lock
xchg
xchg
or
dec
or
xor
add
cld
push
mov
ds
or
mov
push
clc
not
sbb
push
pop
mov
push
and
es
lea
add
inc
adc
sbb
sub
loopne
je
push
and
popa
fbld
jecxz
jns
push
mov
mov
adc
aam
inc
popf
add
int
jge
mov
mov
aam
and
(bad)
dec
mov
jo
jge
mov
lea
xchg
fimul
sbb
movs
pushf
and
fimul
popa
(bad)
cmp
cmp
push
or
and
add
push
repz
cmp
dec
sbb
jp
add
add
push
xchg
adc
fwait
out
je
jbe
leave
mov
stos
pop
leave
jo
inc
push
test
dec
cmp
pop
mov
push
stos
push
mov
sbb
and
pusha
or
dec
movhps
imul
jb
dec
test
add
jmp
mov
sub
pop
mov
pop
cmp
test
or
add
data16
mov
mov
repz
mov
push
lea
mov
xor
scas
(bad)
dec
jne
or
sub
loopne
je
and
sahf
or
lods
mov
cmp
add
xor
mov
pop
sub
rol
loope
enter
outs
mov
sbb
ret
push
(bad)
sbb
pop
movs
imul
aaa
mov
into
(bad)
adc
je
ror
push
add
jne
cmp
test
cs
jp
mov
test
cmp
dec
mov
lock
inc
inc
ror
push
pusha
push
ficomp
inc
sub
pop
or
cmp
push
stos
jne
inc
sbb
xor
ffree
mov
mov
xlat
rcr
push
mov
cmc
dec
lea
ficom
rcr
lea
sbb
bound
call
jne
xor
xchg
ficomp
pop
push
push
push
or
sbb
cmp
les
ja
jb
(bad)
cmc
xor
dec
imul
or
cmps
pushf
mov
mov
add
sub
sbb
xor
ret
scas
xor
call
sbb
add
adc
icebp
push
or
in
pop
mov
sbb
and
mov
push
and
repz
repnz
js
add
sub
mov
or
ins
and
add
cmp
jmp
or
loope
mov
lock
push
or
push
push
fisub
or
pop
jne
mov
sbb
mov
loopne
shl
gs
or
loopne
test
or
push
scas
mov
adc
or
nop
arpl
and
adc
fidivr
jecxz
imul
inc
popa
xor
sub
mov
inc
dec
jge
pop
sbb
mov
adc
sbb
nop
mov
mov
lea
push
movs
push
xchg
and
mov
jg
xor
push
shl
out
adc
xor
icebp
sbb
hlt
test
in
test
movs
out
loopne
add
or
cld
ss
sbb
jb
push
shl
lods
test
add
xor
mov
pop
and
(bad)
dec
mov
lods
push
push
push
daa
adc
test
das
add
enter
pop
inc
loope
dec
and
push
and
dec
push
leave
stos
jo
cmp
(bad)
ficom
pop
mov
sub
xchg
xchg
je
or
outs
(bad)
ret
das
mov
ret
out
rol
shl
cmp
fs
je
fs
into
cdq
dec
dec
mov
cmp
(bad)
pop
outs
ds
sar
test
inc
jl
leave
ficomp
inc
clc
mov
add
add
mov
pusha
call
loope
mov
popa
mov
enter
adc
loope
push
mov
sbb
mov
and
gs
sbb
adc
sub
add
inc
inc
or
mov
xchg
fcom
pop
mov
xor
pushf
xchg
sbb
fwait
movs
jmp
jo
adc
dec
scas
pop
mov
fadd
test
sub
cmps
cmps
jmp
sti
mov
hlt
mov
xor
sbb
and
xor
mov
or
cwde
mov
adc
dec
loope
sub
(bad)
fnstenv
dec
pop
push
popa
adc
cmp
dec
call
mov
xchg
in
lods
add
mov
pusha
sbb
call
adc
adc
or
or
in
xchg
push
push
pop
scas
es
xor
jecxz
leave
cmp
jp
push
jp
add
and
ret
jle
mov
test
jo
cmp
pop
adc
dec
fwait
jne
movs
adc
cmp
sbb
and
ss
inc
dec
xor
sbb
adc
adc
xchg
loopne
or
push
daa
sub
mov
jbe
inc
mov
aaa
les
sbb
lock
je
ret
lock
clc
(bad)
pop
push
sti
lock
lods
ins
push
cmp
push
js
nop
es
sbb
or
jo
or
je
xlat
mov
ficom
inc
mov
jne
lock
mov
jne
push
mov
stos
mov
movs
pop
dec
out
adc
xchg
dec
jne
cmp
cmp
jge
sbb
mov
fadd
je
leave
jle
xor
sub
shl
sbb
pop
les
fld
rol
push
pop
les
or
xchg
push
nop
dec
sub
jmp
pshufw
out
in
pop
addr16
and
pop
fadd
je
push
adc
xor
loope
mov
adc
add
add
mov
mov
pop
push
push
(bad)
pop
(bad)
stos
or
xlat
pop
adc
jnp
jmp
mov
jg
pop
dec
or
stos
jns
push
jo
dec
jle
push
jne
mov
sbb
scas
fadd
add
add
add
cmp
cmp
push
pop
test
js
sbb
mov
jno
pusha
data16
ss
xchg
add
cmp
push
push
sub
test
inc
scas
sub
aas
jecxz
test
dec
push
push
push
push
loop
adc
xchg
push
call
push
stos
dec
mov
push
shr
pop
pusha
adc
stc
add
xor
dec
ins
jo
dec
and
pop
jecxz
and
push
xchg
bound
daa
not
call
push
jne
add
lock
arpl
sub
inc
jge
mov
lea
jmp
adc
out
sti
push
sub
call
sahf
add
sub
push
xchg
xor
jne
sbb
stos
pop
mov
sub
sbb
inc
and
addr16
sub
mov
dec
ret
es
add
je
ins
repnz
add
mov
add
rcl
cld
pop
mov
and
add
test
add
inc
add
add
ror
retf
add
push
dec
xchg
test
mov
fild
sbb
(bad)
mov
pusha
inc
push
pop
add
inc
test
or
sub
shr
mov
mov
adc
push
mov
jp
cld
xor
push
adc
or
fnstsw
pop
pop
outs
out
jmp
jae
or
xorps
push
adc
jmp
push
aam
sbb
gs
cwde
adc
xchg
into
sub
sub
loop
pusha
psubd
pop
cmc
das
inc
pop
movs
push
cmps
ret
add
xor
jp
adc
sahf
stos
(bad)
inc
mov
pop
retf
dec
push
ret
dec
dec
mov
push
das
iret
enter
mov
push
shr
dec
mov
sub
dec
dec
push
sbb
cmps
cli
arpl
div
push
add
mov
fwait
add
(bad)
mov
pushf
or
adc
shl
adc
movs
lods
add
and
and
jmp
xchg
pop
dec
ds
adc
fisttp
add
or
pop
push
rcr
neg
add
cld
xor
xchg
or
adc
adc
push
add
add
and
add
(bad)
loopne
ror
dec
add
inc
mov
push
xchg
mov
jnp
call
pop
data16
out
xor
inc
fdivr
or
outs
imul
pusha
inc
mov
ja
and
nop
pop
inc
imul
add
clc
or
add
xchg
push
xor
xchg
inc
and
and
cmp
sar
xchg
bound
or
dec
sub
lods
mov
and
push
int
pop
push
or
adc
rcl
xchg
lea
jmp
out
push
dec
add
jo
mov
mov
adc
cmp
mov
inc
fnstsw
push
cdq
idiv
pop
add
shl
inc
fs
cmp
add
rcr
imul
xor
mov
mov
xor
jbe
sub
mov
or
imul
inc
jl
add
sub
add
add
mov
(bad)
add
pop
mov
xor
or
(bad)
dec
ret
test
popa
dec
fwait
mov
add
test
and
fisttp
mov
(bad)
fiadd
and
mov
lock
and
shr
fimul
add
inc
inc
jo
call
pop
ret
shl
movs
ss
inc
out
pop
test
lock
ss
push
nop
not
jmp
neg
add
(bad)
jmp
movsx
rol
mov
or
cmp
das
pop
mov
push
lahf
sbb
pop
bswap
shr
ret
push
jns
out
xor
sqrtps
out
call
add
add
(bad)
pop
add
add
push
(bad)
repz
sti
inc
and
cmp
jns
movhlps
popf
pop
cwde
add
mov
aad
aad
inc
push
hlt
push
xor
fiadd
sbb
pop
push
cmp
inc
fucomp
and
movs
pop
sar
inc
or
sbb
dec
test
jp
add
dec
ins
retf
fisub
bound
dec
inc
add
add
push
xchg
call
mov
pop
scas
cmps
push
pop
or
popf
push
mov
or
xchg
push
(bad)
mov
pop
jno
pop
mov
push
push
stc
ins
jge
mov
stc
(bad)
leave
lds
pusha
or
gs
retf
pop
mov
pop
sub
in
xlat
push
cmp
pop
movs
(bad)
jbe
not
push
int3
xlat
ins
je
sbb
sbb
inc
cmc
jns
lods
pop
cmp
push
mov
xchg
adc
sub
loopne
push
sub
sbb
add
stc
mov
jp
push
adc
pop
mov
and
push
mov
int
rol
retf
test
pop
mov
sbb
int3
test
pop
push
stos
mov
adc
push
pop
cmp
push
mov
cmps
xchg
fiadd
aaa
jbe
add
or
(bad)
jge
adc
adc
add
shr
pop
pop
jmp
push
push
imul
add
retf
(bad)
inc
mov
addr16
or
pop
dec
fwait
add
gs
pop
loope
mov
pop
mov
push
lfs
pop
adc
ja
pop
push
outs
repz
je
nop
cmp
repz
(bad)
jmp
push
pop
cwde
push
frndint
or
add
bound
in
sbb
fisttp
(bad)
retf
adc
mov
loope
push
or
push
mov
(bad)
mov
loopne
aaa
xchg
ds
mov
movs
inc
pop
sahf
pop
xlat
cli
je
cmp
jne
fadd
ja
mov
inc
adc
jmp
mov
fucomp
push
push
sbb
mov
fcom
in
ss
inc
adc
push
xor
adc
push
adc
inc
cmp
jl
xchg
jo
(bad)
lock
mov
xchg
cmp
sbb
lds
call
cmps
pop
adc
cmp
clc
sbb
(bad)
adc
test
sbb
pop
adc
aas
adc
shl
and
mov
adc
mov
sti
jge
push
xchg
or
inc
jmp
(bad)
hlt
mov
inc
mov
or
adc
push
add
mov
xchg
adc
in
cmp
mov
ret
xor
iret
sub
push
dec
daa
push
adc
sub
jmp
mov
xchg
cs
call
shl
push
call
lods
jo
inc
popf
test
dec
push
hlt
and
fcom
jecxz
or
inc
xor
test
sbb
add
or
pop
adc
pop
addr16
in
outs
add
push
inc
xlat
sub
push
cwde
and
mov
in
cmc
sub
mov
sub
rcr
cwde
leave
loop
out
int
sbb
push
xchg
jg
mov
add
dec
and
mov
retf
adc
sbb
mov
and
sub
shr
fwait
add
or
push
lahf
call
div
mov
add
sahf
cwde
add
sbb
mov
or
mov
mov
sbb
cmps
ja
enter
adc
add
sub
dec
adc
push
push
push
sbb
pop
sub
inc
les
loope
mov
jb
(bad)
pop
cli
jno
xchg
xbegin
daa
cwde
add
dec
pop
sub
rcl
(bad)
or
push
(bad)
test
jmp
mov
pop
aam
popa
ins
test
cmps
js
xor
mov
ret
test
sub
mov
clc
popa
dec
mov
iret
inc
sbb
lea
sbb
xchg
pushf
pop
cs
mov
add
xlat
mov
pusha
adc
push
push
dec
addr16
xor
mov
add
jb
(bad)
sbb
push
into
xchg
pop
movs
push
popa
adc
test
jge
or
or
dec
mov
ret
imul
sbb
push
add
int
add
rol
pinsrw
push
push
mov
test
dec
xchg
leave
test
sub
mov
mov
aaa
stc
push
movs
dec
or
or
test
xor
or
push
jae
je
ins
adc
mov
adc
add
mov
aaa
leave
outs
test
sbb
(bad)
xor
pop
lods
jmp
popa
leave
(bad)
xor
js
loope
xchg
inc
pop
loop
push
add
adc
inc
mov
lods
ja
adc
fimul
loopne
lock
mov
and
mov
mov
adc
mov
push
cmp
mov
dec
fs
(bad)
jne
not
lock
adc
dec
call
sbb
add
jbe
(bad)
sti
cmp
rcl
pop
fmul
loope
push
xchg
retf
adc
fistp
int3
dec
fdiv
xor
cmp
in
jne
icebp
dec
scas
jle
mov
add
cmp
aam
ins
mov
push
add
dec
shl
xchg
call
sbb
test
callw
adc
aad
adc
add
pop
aaa
adc
adc
mov
add
mov
test
cmp
sbb
inc
sbb
je
jg
jb
or
add
pop
jo
add
push
ins
sbb
adc
mov
sbb
fsub
jns
ins
adc
xlat
xor
xor
push
int3
inc
push
mov
push
inc
neg
sbb
and
rcl
mov
out
popa
ins
loope
pop
movnti
dec
sub
push
mov
lea
add
sbb
mov
jmp
call
dec
jl
sub
push
sar
sbb
into
sar
rcl
add
stos
rcr
inc
add
sub
sub
or
xchg
add
pop
cli
imul
mov
enter
je
(bad)
sub
xor
pop
sbb
xor
inc
push
jne
sub
cmp
pop
or
adc
int3
mov
sub
ja
lods
sub
inc
push
sub
(bad)
push
jg
push
sbb
dec
add
cmp
inc
xadd
outs
ss
xor
inc
bound
inc
call
call
leave
mov
mov
inc
pop
and
mov
or
clc
push
cmp
xchg
dec
adc
aam
push
cmp
mov
cmp
xor
pop
push
inc
test
xor
cmp
jbe
ror
popa
sub
dec
xchg
mov
inc
lahf
mov
test
sub
(bad)
cmp
inc
lods
pop
cmp
mov
cmp
jb
sbb
in
and
cmps
xchg
xchg
push
shl
test
adc
push
in
cmp
push
mov
add
inc
and
icebp
xchg
mov
adc
ins
push
std
dec
cmps
stos
xlat
or
dec
dec
int3
nop
js
lds
cwde
daa
and
cwde
dec
and
jbe
inc
pop
dec
dec
adc
xor
and
mov
and
out
push
xor
int
adc
das
pop
adc
xor
iret
enter
adc
popa
idiv
cmps
stc
cmp
bound
mov
xchg
out
mov
push
xlat
in
add
add
cmp
inc
je
sub
js
sbb
or
jno
sbb
and
sahf
div
xchg
mov
push
adc
fmul
inc
cmp
out
call
fldcw
movs
push
ret
fsubr
inc
push
adc
data16
sti
jb
cmp
shr
mov
mov
inc
icebp
add
push
js
xor
loopne
movs
std
jmp
add
fidivr
fiadd
cs
cwde
nop
jg
rcl
shr
je
mov
mov
and
lea
inc
out
jne
and
xchg
sar
and
add
jge
push
sub
adc
xor
imul
aam
jmp
jmp
(bad)
mov
push
loop
pusha
adc
jmp
gs
into
dec
loop
dec
or
jmp
jl
sbb
add
dec
push
xlat
add
inc
imul
loopne
push
arpl
mov
cmp
sub
inc
or
mov
pop
repnz
int
and
mov
or
outs
adc
cmp
push
sub
add
xor
inc
sbb
xor
add
call
jno
jo
test
(bad)
je
xchg
dec
test
cmps
gs
sbb
sub
repnz
pop
ins
add
(bad)
add
xchg
jns
mov
mov
call
es
ins
jo
movs
adc
js
jb
mov
pop
sub
jl
repz
sar
xor
jb
xchg
mov
pop
in
jb
lea
jge
push
fwait
add
push
outs
mov
jl
es
pop
hlt
inc
loopne
int
hlt
adc
jp
xchg
xor
dec
jmp
push
cs
inc
leave
and
and
push
cmp
xchg
sbb
push
dec
inc
and
in
sub
push
mov
push
xchg
inc
push
inc
jo
cs
xchg
pop
push
test
mov
jge
js
dec
lahf
(bad)
cmp
nop
and
push
push
add
jbe
pop
pop
fisttp
sub
adc
cmps
hlt
inc
jae
push
out
sub
out
pop
outs
inc
adc
and
jg
aam
outs
mov
xor
nop
(bad)
lods
push
rcl
mov
adc
stos
ins
or
cmp
xor
push
leave
cmp
lea
adc
aas
xlat
mov
repnz
xchg
sahf
jmp
push
mov
dec
fld
ret
jp
iret
and
(bad)
mov
cmp
sbb
ret
(bad)
in
test
add
jo
xor
sub
test
xchg
mov
in
lock
add
dec
sbb
jg
mov
mov
lea
or
sahf
sub
sub
inc
sub
ret
test
sbb
inc
popf
and
mov
jne
adc
out
neg
inc
push
shl
add
call
ret
sbb
or
mov
out
dec
clc
cmp
dec
jmp
sbb
sub
sbb
xchg
cmps
adc
inc
imul
jecxz
idiv
push
sub
push
xchg
push
jo
add
sbb
sbb
outs
mov
jne
mov
xchg
test
dec
jae
adc
ret
xor
inc
sbb
jg
add
jb
sub
pop
enter
add
add
mov
mov
cdq
jb
mov
cmp
stc
cmp
ret
mov
in
inc
(bad)
sub
clc
cmp
dec
inc
hlt
cmp
cld
(bad)
xor
in
in
enter
ror
ins
and
retf
or
sbb
mov
and
push
sbb
pop
inc
inc
and
fadd
jmp
das
mov
push
jo
ja
pop
pusha
jne
dec
mov
ret
and
fwait
or
push
mov
mov
or
cmp
fs
add
sbb
js
adc
test
push
lock
push
test
dec
je
add
dec
xchg
cmp
xchg
fild
arpl
adc
xor
(bad)
aas
add
jmp
mov
xchg
lds
push
and
clc
sar
sbb
addr16
out
into
push
and
add
out
add
lods
daa
cmp
cdq
add
cmp
loope
retf
pop
(bad)
aas
xchg
and
inc
dec
in
sbb
pop
cmp
and
push
mov
pop
inc
sete
sahf
xor
or
hlt
cmp
inc
les
loopne
sub
pop
or
push
sub
add
ret
sub
push
iret
jb
cmp
or
push
mov
xor
push
jl
outs
or
psrld
sub
test
push
fnstcw
add
mov
adc
jp
mov
adc
sbb
aaa
ret
je
adc
aas
adc
out
or
hlt
or
xchg
lock
mov
add
add
mov
xchg
ins
mov
push
sbb
and
jne
addr16
mov
pop
outs
xor
push
sbb
or
cwde
adc
idiv
call
test
sub
cdq
test
jb
neg
ds
in
push
cmc
push
std
push
add
lahf
jbe
or
xor
(bad)
mov
(bad)
push
cmp
cmp
adc
jmp
push
pop
and
imul
or
add
clc
jmp
mov
xor
clc
test
js
lahf
xchg
inc
and
and
xor
jne
push
lods
cmp
pop
fiadd
lahf
(bad)
sub
or
pop
adc
add
push
lahf
pop
daa
pop
pushf
push
inc
or
xor
mov
pop
pop
loopne
or
adc
adc
mov
sub
rcl
mov
aaa
das
mov
imul
lahf
(bad)
ret
xor
stos
adc
dec
mov
in
adc
rcl
pop
push
push
imul
sub
jl
xor
jp
cmp
mov
push
sub
xor
dec
cmps
sub
lds
pop
pop
rol
fimul
dec
add
pop
out
retf
inc
pop
xchg
xchg
daa
cmp
or
scas
iret
xchg
sbb
(bad)
mov
or
sbb
outs
mov
push
mov
dec
inc
push
add
mov
adc
out
inc
cs
cmp
sub
and
mov
lods
sbb
sub
lds
or
mov
sbb
(bad)
jmp
mov
add
in
ins
data16
adc
mov
sbb
jnp
imul
dec
jmp
push
add
repz
and
inc
xchg
pop
push
test
ins
scas
lods
data16
mov
sub
loopne
repz
nop
push
jo
test
jns
pusha
stos
clc
ror
jmp
jb
jg
sub
inc
out
and
mov
pop
sub
aad
sub
fadd
aas
loopne
fsubr
(bad)
aad
ret
imul
cmp
xor
or
imul
push
aad
xchg
adc
loope
sub
loope
jne
or
push
jg
je
add
push
test
or
adc
mov
pusha
lods
push
mov
adc
dec
add
and
cs
loope
sbb
scas
xor
pop
or
jge
push
mov
mov
nop
stos
sbb
mov
add
jns
pop
mov
sbb
mov
sbb
pop
aaa
nop
jnp
int3
sbb
adc
sbb
call
add
mov
push
ins
mov
sar
scas
sub
cmp
xchg
test
xchg
push
and
(bad)
adc
add
mov
or
add
pusha
out
data16
gs
sti
cmp
mov
cdq
inc
test
dec
sbb
inc
data16
adc
and
and
push
popa
arpl
out
leave
jbe
cmps
stc
dec
fiadd
xor
js
call
pop
jns
ds
sar
stos
aad
add
imul
rcr
dec
push
aaa
jnp
repz
inc
dec
js
lea
inc
and
fisub
mov
push
call
add
adc
clc
adc
and
inc
dec
xchg
sbb
xchg
push
pop
and
jmp
pushf
sbb
fwait
icebp
sbb
js
cmp
mov
test
in
push
mov
addr16
popf
and
or
adc
add
mov
sbb
xchg
mov
push
mov
jl
retf
mov
xlat
adc
mov
and
enter
add
or
mov
jns
pop
xchg
cmps
ss
push
movs
sar
mov
inc
push
iret
repz
push
and
ss
pusha
jne
jns
out
lahf
mov
fdivp
pop
enter
imul
cmovnp
add
test
ror
sar
dec
test
jb
test
and
retf
jo
fdivp
add
cmps
sbb
cmp
fadd
lea
dec
movs
dec
add
dec
xlat
inc
stos
cmp
test
pop
mov
adc
push
popf
mov
jo
adc
rcr
add
das
mov
or
jb
xor
in
add
adc
popa
mov
add
nop
push
jne
sbb
in
dec
adc
inc
std
push
cmp
aad
push
mov
sbb
fild
popf
or
or
test
mov
mov
inc
add
jb
jle
test
pop
mov
sbb
sub
adc
and
adc
mov
inc
xchg
fs
xchg
add
add
mov
imul
ss
push
ficomp
test
mov
and
sbb
xor
or
jmp
dec
jg
add
jmp
mov
xchg
jge
and
push
dec
pop
or
(bad)
das
es
mov
pop
js
imul
sbb
push
push
pop
das
xlat
add
test
mov
shr
enter
mov
data16
add
inc
push
mov
leave
lock
and
push
pusha
add
(bad)
sub
aam
and
add
or
test
add
mov
inc
sub
nop
or
cs
inc
sub
jge
pop
jo
pop
repnz
nop
add
xchg
mov
dec
push
push
push
xchg
mov
xchg
fs
sbb
leave
sub
pusha
fbld
ret
or
loope
add
jno
adc
push
add
shr
dec
sbb
xchg
dec
cmp
push
add
and
inc
sbb
sbb
xchg
mov
loope
add
imul
je
div
retf
jl
out
(bad)
xchg
jnp
push
and
push
call
loopne
fsubr
fcomp
in
jns
add
mov
inc
mov
xchg
push
cmps
sbb
lods
mov
mov
call
pusha
dec
and
mov
push
cmp
ja
stos
loope
sub
mov
mov
sub
inc
imul
add
push
xor
adc
inc
aad
bound
xor
movs
push
mov
cmp
sbb
sbb
mov
bound
xchg
pop
and
(bad)
push
and
xor
cmp
adc
or
and
and
inc
push
xchg
and
and
test
and
adc
pop
(bad)
sbb
adc
jno
mov
outs
imul
xchg
or
int
sbb
test
pop
dec
loopne
stc
fs
adc
pusha
movs
pop
pop
pop
sar
rcr
xor
cmp
xchg
xor
mov
xchg
int3
sbb
ret
out
iret
cmps
pop
and
lahf
mov
ss
add
mov
push
xchg
bound
xor
mov
add
(bad)
neg
mov
fwait
scas
inc
or
ror
add
add
jae
xor
or
loopne
daa
and
inc
sub
push
pop
cmps
in
xchg
pop
arpl
sub
push
mov
pop
cmp
cmp
rcl
xor
pop
push
outs
mov
xchg
add
jmp
(bad)
xchg
out
sbb
jge
sbb
mov
push
mov
push
jle
dec
push
push
ds
push
cmp
test
pusha
fimul
mov
adc
push
dec
inc
loopne
push
and
jns
cwde
mov
sbb
cdq
xchg
cs
test
enter
test
das
mov
pop
test
nop
je
jg
jns
pusha
adc
mov
push
inc
test
and
es
or
mov
mov
arpl
dec
ret
push
lea
push
gs
shl
sbb
jg
sub
sub
mov
mov
enter
or
std
xlat
out
inc
in
lods
sar
mov
mov
inc
add
fs
fidiv
push
cli
jbe
dec
ss
cmp
jl
add
xchg
add
pusha
jge
add
add
ror
rcl
adc
sbb
das
sub
fmul
int
jnp
add
xor
ins
cmp
out
push
bound
jne
std
lods
and
repnz
sub
push
outs
and
xchg
shr
jle
mov
test
dec
push
mov
jae
lds
add
jg
mov
enter
sar
sar
sub
sub
pusha
xchg
mov
and
loop
(bad)
dec
push
pop
adc
push
push
and
retf
retf
rcl
dec
xor
test
inc
ds
cli
inc
jmp
das
in
pusha
stos
ss
stos
add
push
push
add
pop
int
test
js
or
jo
pop
cmp
sbb
cmps
mov
rcr
jmp
jne
into
scas
add
sub
jecxz
mov
les
shr
sahf
pop
pop
jg
fmul
ret
cmp
clc
sbb
ret
mov
push
mov
xchg
imul
(bad)
push
push
daa
fild
push
jno
or
sub
add
adc
arpl
loop
mov
mov
lahf
adc
jmp
pop
pop
(bad)
dec
jecxz
xor
mov
mov
out
adc
cmp
inc
popf
inc
push
adc
daa
adc
cmps
inc
js
cmps
add
mov
ror
pop
leave
push
push
repz
dec
jbe
sbb
inc
push
mov
cmp
div
test
pop
call
adc
cmp
inc
adc
jmp
xor
outs
loopne
mov
iret
cmp
dec
push
mov
cdq
or
inc
xor
fsub
jo
je
cmp
jns
ins
mov
loope
arpl
pop
lea
pop
popf
pusha
push
xlat
mov
cwde
inc
inc
out
bound
test
cs
outs
pop
mov
sub
inc
pusha
sub
sbb
mov
cli
add
hlt
aad
push
(bad)
pop
inc
mov
inc
call
add
cli
sub
push
dec
shl
lods
add
sub
sub
test
sub
sub
inc
cmps
xor
aad
lock
aam
sub
xor
jno
jle
push
jns
xor
je
ins
pop
shr
ds
hlt
aas
je
jmp
dec
and
rcl
and
pop
test
sar
aam
fsub
jmp
add
inc
mov
sbb
push
out
outs
jbe
xlat
mov
pop
sbb
jno
mov
imul
out
or
enter
and
xchg
les
add
jp
cmp
lods
jnp
pop
in
sub
xor
jecxz
cmps
fucomip
sar
outs
jg
cmp
jle
fcmovnb
fld
jmp
into
dec
movs
pop
sub
sub
add
add
sub
mov
mov
lock
jo
or
adc
lsl
add
inc
pop
add
and
loope
(bad)
in
push
jne
aad
sub
push
je
push
dec
push
test
(bad)
cmp
adc
(bad)
js
cld
inc
cmp
cmp
cli
jo
mov
retf
add
xor
cmp
dec
dec
add
sar
add
les
push
xor
retf
je
inc
push
or
push
pop
cmp
jno
movd
xchg
nop
inc
ret
enter
loopne
xchg
pop
je
pop
pusha
aas
fsub
and
sbb
jae
push
jb
adc
adc
pusha
jmp
ins
gs
xchg
adc
xchg
mov
cdq
clc
push
xor
cmp
mov
jb
add
sub
dec
jb
and
mov
nop
and
(bad)
enter
add
inc
lods
retf
ret
bound
das
cld
pop
lock
push
dec
mov
add
push
movs
xor
pop
daa
or
inc
inc
fcomip
or
and
push
cdq
call
repnz
ins
cmc
or
mov
add
jge
push
shl
adc
pop
inc
aad
ss
jmp
arpl
jle
or
ror
sbb
add
enter
inc
mov
xchg
or
pop
je
bound
mov
inc
or
popa
loopne
and
jno
xor
xor
cwde
cmc
adc
adc
test
fucomip
cmp
adc
daa
and
pop
push
lea
out
mov
cmp
jae
mul
or
sbb
(bad)
or
jb
iret
dec
cmovns
mov
xchg
rcr
pop
push
mov
popf
jne
cmp
lods
xor
mov
and
mov
call
and
cmc
cmp
pop
jp
je
cmp
jne
push
add
xor
not
cmps
out
je
iret
lock
ror
enter
dec
push
add
xchg
jne
sbb
push
jo
pop
icebp
pop
pop
call
xor
dec
xchg
lods
jne
push
push
cmp
push
and
inc
loop
cli
sub
inc
and
and
into
idiv
dec
xor
jmp
and
enter
dec
inc
jmp
fist
loopne
call
sahf
push
dec
int3
xchg
cmp
pop
cmps
pop
dec
cmp
cmp
adc
adc
or
sub
arpl
cmp
nop
int
pop
push
popa
add
jmp
or
cmp
in
cmps
adc
and
mov
pop
shl
in
jno
fmul
jno
jmp
(bad)
mov
adc
and
add
or
cmps
ss
push
cmps
or
in
adc
ss
mov
gs
ins
push
mov
xchg
sbb
dec
les
pushf
outs
leave
leave
mov
sbb
inc
shr
adc
sbb
test
mov
loopne
mov
or
daa
cwde
js
lea
add
cmp
cmp
push
mov
adc
fucomi
adc
out
or
and
jge
pusha
cmps
mov
or
mov
addr16
push
sub
retf
adc
jne
sbb
push
mov
imul
add
shl
or
inc
movs
and
movs
js
stos
call
adc
fmul
ds
cli
add
add
loope
pop
adc
test
mov
mov
loop
cmp
jne
sbb
mov
cmp
je
movs
add
or
push
xchg
movs
in
or
loopne
mov
push
adc
mov
inc
loope
add
(bad)
loopne
and
adc
inc
idiv
lahf
push
and
jg
and
mov
jge
xchg
ins
and
add
fisttp
les
or
xchg
or
(bad)
xchg
mov
mov
cmp
xchg
aas
or
sub
rcl
lock
popf
data16
jo
and
ret
mov
dec
sbb
push
xchg
and
call
mov
fidiv
add
jnp
inc
jo
leave
fmul
jno
dec
inc
push
mov
jecxz
pusha
outs
and
push
bound
pop
cmps
cwde
lods
mov
mov
jge
jl
inc
je
sbb
and
test
shl
adc
clc
cmps
adc
cli
xor
add
sbb
xchg
in
jmp
fidiv
es
add
sub
add
adc
fdiv
sbb
mov
push
or
or
call
jg
imul
mov
nop
cmp
fsub
pusha
mov
push
add
mov
or
aas
cmp
sbb
je
add
and
or
call
stos
push
aam
jle
dec
pop
pop
call
add
in
dec
dec
xchg
adc
js
xor
jge
mov
xor
les
int3
call
adc
lods
ret
fisttp
sub
call
inc
pop
sahf
dec
js
dec
jmp
adc
sbb
dec
sub
les
jo
hlt
xchg
and
xchg
cmp
or
push
and
int3
sahf
cmp
push
fsubp
sbb
fsubr
daa
sbb
mov
pop
xor
mov
add
and
mov
mov
arpl
cmp
add
movs
jns
and
inc
dec
dec
stos
movs
jno
push
dec
mov
icebp
mov
rcl
push
fwait
test
les
pop
adc
dec
mov
xor
dec
call
push
mov
add
out
jl
lods
or
cs
sub
xor
sub
test
mov
das
xchg
cmp
jne
inc
loop
dec
jbe
jns
out
lods
in
pusha
(bad)
cmps
and
fdiv
add
sbb
out
hlt
hlt
mov
leave
inc
lods
call
add
cmp
rcr
and
arpl
mov
push
ins
push
push
jecxz
or
test
adc
push
repz
push
pushf
jmp
pop
inc
push
repnz
xor
sub
xor
pop
pop
ins
jo
and
clc
pusha
pop
sbb
xlat
call
xor
cmp
inc
push
xchg
inc
add
mov
jle
ror
jle
and
dec
jmp
mov
pushf
xor
xor
sahf
ja
push
push
push
xor
ins
mov
xlat
std
add
xchg
cmp
sbb
addr16
sub
cld
xor
xor
pop
call
mov
xchg
adc
dec
mov
lock
cli
and
ret
xor
js
dec
cmp
loope
dec
sar
fs
push
push
js
fsub
jno
or
adc
pop
dec
pop
dec
add
adc
pop
outs
mov
fsub
fimul
ss
sub
adc
add
fadd
arpl
xor
push
lock
add
pop
pop
jne
test
dec
jne
imul
je
add
xor
pop
and
and
lock
movs
retf
lock
inc
sbb
dec
mov
xor
jno
mov
add
sar
jg
jl
jno
jmp
retf
mov
inc
out
sbb
icebp
xchg
ins
and
push
cmp
xchg
scas
adc
fmul
dec
stc
ins
add
inc
repz
je
in
xor
cmps
into
ror
xor
aad
repnz
(bad)
push
loope
popf
xchg
push
sbb
and
adc
test
dec
aas
ffree
jne
sbb
xor
xchg
lods
adc
adc
jno
std
test
bound
adc
lods
pop
sbb
fisttp
fs
push
mov
mov
or
or
movs
xchg
faddp
jle
jne
mov
pushf
sub
fcmovnb
xchg
leave
ret
sub
pop
ss
adc
xor
xor
dec
mov
mov
arpl
mov
lds
or
hlt
push
add
xchg
pop
mov
jns
cwde
and
jl
add
mov
pop
mov
cmp
jne
push
mov
sub
fld
in
push
sbb
push
mov
cdq
rcr
sub
inc
in
js
sbb
mov
xchg
sbb
aam
aas
dec
mov
cs
daa
not
call
sbb
pop
or
aad
ret
add
loop
push
aad
and
xor
pop
dec
ret
adc
enter
call
pop
stos
xor
sahf
(bad)
js
inc
add
jmp
and
out
jb
cmp
xchg
ja
or
add
mov
mov
adc
nop
mov
jns
ds
or
xchg
arpl
cdq
sub
scas
xor
mov
das
mov
and
inc
or
pop
addr16
outs
imul
fmul
jb
inc
pop
ret
ret
sub
mov
mov
add
push
xchg
sbb
and
jb
into
inc
cmp
sbb
jge
jne
stos
push
xchg
ins
mov
inc
cmp
sub
ret
lods
push
icebp
iret
inc
mov
outs
inc
cmp
inc
add
add
shl
shr
or
loope
cmp
or
jle
movs
in
mov
sub
jbe
sbb
pop
cmp
lea
icebp
int
inc
jmp
add
and
xchg
scas
pop
fcom
not
ds
addr16
inc
imul
das
retf
call
mov
add
mov
movs
push
rcl
push
inc
cmpxchg
mov
add
test
stc
dec
pop
push
jecxz
mov
test
jp
pop
jnp
add
cmc
add
dec
je
dec
cmps
fst
test
adc
push
push
mov
mov
test
sub
mov
or
adc
or
test
adc
out
add
sbb
in
ret
xlat
loopne
mov
clc
lods
pop
inc
js
adc
repz
ins
shr
or
sbb
hlt
dec
mov
mov
fwait
adc
pop
cmp
sub
pop
mov
jne
dec
nop
and
xchg
into
dec
push
adc
pop
mov
or
mov
inc
iret
jne
in
pop
call
fidivr
retf
push
cmp
adc
cwde
push
add
in
and
into
or
sub
daa
cmp
sbb
ds
xor
jbe
cmp
dec
jo
adc
push
dec
stos
mov
cli
adc
clc
lea
clc
adc
out
adc
in
cmp
or
sub
xchg
mov
push
cmp
jnp
mov
mov
or
movs
out
add
adc
xor
pop
or
dec
shl
jle
aaa
mov
cwde
and
xor
cmp
inc
jl
jmp
loopne
mov
inc
mov
or
xor
mov
xor
add
sub
inc
cmps
cmp
fisttp
sbb
adc
push
dec
imul
sahf
dec
js
push
push
mov
sti
call
sar
arpl
mov
sbb
mov
add
adc
and
add
dec
cmp
xor
pop
xchg
push
cmp
mov
gs
adc
cmps
mov
adc
add
cmp
bsr
and
sub
push
aas
push
test
mov
adc
pop
mov
nop
mov
pop
inc
jmp
pop
call
mov
icebp
xor
test
mov
rep
sbb
sub
scas
jo
fcom
add
fild
adc
pop
das
jmp
adc
or
jo
daa
xchg
ins
push
and
dec
nop
or
cdq
sbb
jo
lds
mov
add
pop
imul
or
dec
(bad)
and
fwait
sti
jne
xor
sbb
add
fadd
movs
imul
pushf
sbb
sti
inc
xchg
adc
push
add
pop
imul
mov
sbb
sbb
das
mov
in
mov
sub
xchg
aam
push
dec
add
das
cmp
jp
mov
out
test
and
mov
and
mov
sbb
lea
xchg
push
cmps
add
loop
or
mov
sub
push
add
inc
xor
test
push
and
call
pop
xor
pusha
dec
fadd
cmp
add
sub
xchg
or
adc
mov
inc
pop
cmp
std
jne
pop
mov
fstp
popa
(bad)
lea
xchg
mov
mov
or
sbb
and
cli
sub
mov
cmp
adc
mov
adc
ja
cmc
and
aaa
mov
adc
stos
repnz
adc
dec
and
xor
inc
or
push
inc
sub
nop
sbb
push
inc
add
jo
xchg
sbb
xor
ins
mov
pushf
mov
push
aam
and
inc
cmc
inc
inc
jmp
mov
outs
xchg
add
push
jbe
xchg
mov
(bad)
std
retf
or
dec
and
js
add
adc
and
sahf
push
xor
nop
popa
adc
rcl
data16
rcl
int
pop
adc
mov
sbb
shl
mov
jge
inc
or
inc
push
and
add
add
mov
xchg
jne
or
test
push
mov
call
cmp
or
mov
add
cmp
sub
or
cli
push
mov
dec
hlt
xchg
sub
pop
es
cmp
inc
and
inc
inc
adc
ins
sbb
js
cmps
or
inc
jne
sbb
inc
xor
pop
sub
sbb
add
add
adc
xchg
push
cdq
xor
pop
cli
push
popf
out
push
inc
mov
inc
aas
mov
es
popf
adc
mov
adc
jne
and
xchg
les
sbb
and
add
xor
mov
jp
jmp
retf
mov
inc
int3
imul
add
or
or
xor
sbb
or
test
xchg
pop
fstp
mov
loope
or
or
retf
dec
add
jbe
retf
test
dec
sbb
loope
in
lods
push
adc
mov
add
adc
jle
add
xor
popf
cmp
and
xchg
cmp
sbb
xor
pop
and
(bad)
test
imul
adc
mov
adc
sar
xor
test
scas
lea
addr16
adc
lahf
dec
cmp
dec
add
test
push
xchg
cs
inc
inc
mov
shr
add
sub
sbb
cmp
dec
js
mov
sbb
lea
add
icebp
xchg
and
das
xor
clc
cmp
sub
or
xchg
mov
aaa
xchg
sub
hlt
mov
jg
and
push
push
push
xor
mov
dec
jns
std
dec
xchg
sub
add
repnz
fwait
mul
cmp
call
sahf
out
add
sub
je
test
and
pop
mov
sub
scas
shl
sub
add
(bad)
mov
add
lock
loopne
(bad)
pop
jmp
cmp
pop
ins
jmp
sub
mov
push
add
push
adc
and
enter
sbb
cmp
sbb
jp
lds
jmp
jo
sbb
sti
dec
push
xchg
pusha
mov
inc
add
adc
mov
or
add
(bad)
push
add
pop
dec
das
pop
cmps
pusha
push
mov
adc
mov
push
ret
in
cmp
call
test
inc
call
je
mov
loop
adc
inc
push
sbb
mov
push
pop
push
ins
mov
dec
add
xchg
lea
test
sbb
adc
inc
push
xor
inc
enter
adc
push
or
mov
push
push
adc
fcmovne
imul
or
or
sbb
call
ret
jmp
outs
add
cdq
and
into
scas
add
fld
add
add
inc
push
lahf
stos
faddp
repz
mov
mov
test
test
push
movs
js
mov
(bad)
xchg
(bad)
cs
sub
repz
jl
sbb
inc
mov
scas
aas
test
fst
enter
inc
repz
push
push
xchg
das
pop
out
inc
jbe
inc
dec
pop
dec
adc
dec
dec
ja
aad
push
sub
push
mov
push
aas
es
fnsave
pop
ret
int3
push
cdq
ret
mov
push
fmul
std
jl
mov
(bad)
push
mov
je
test
or
ins
mov
mov
mov
dec
mov
sbb
dec
not
push
push
mov
std
retf
aaa
je
sbb
test
add
or
sub
sbb
into
ss
and
shl
sbb
adc
sub
(bad)
xchg
adc
inc
dec
aas
and
jecxz
in
sub
loopne
add
arpl
dec
and
or
adc
jo
dec
inc
bound
mov
push
mov
cs
inc
push
mov
or
inc
lahf
in
test
je
test
loope
out
in
jo
cwde
mov
or
cmp
mov
jg
addr16
pop
shl
or
rcr
add
mov
dec
cmp
push
xchg
cld
popa
or
jo
(bad)
(bad)
adc
mov
pop
clc
cmp
and
in
loope
dec
sub
jb
mov
xchg
mov
cld
jb
adc
inc
int3
fwait
sbb
inc
int3
dec
in
clc
das
mov
gs
fidivr
test
lds
inc
in
fld
adc
inc
sbb
xchg
scas
jne
dec
pusha
movs
outs
fsub
add
fbld
sub
push
loopne
scas
ret
push
xor
xor
add
or
cmp
sub
jae
ds
hlt
es
shl
hlt
pop
and
outs
fwait
in
xchg
add
or
enter
loopne
jge
lea
adc
repnz
test
dec
or
xor
add
mov
push
and
ins
jns
scas
aam
add
push
aam
jbe
movd
loopne
jle
scas
dec
in
jns
jne
or
test
cmp
js
fucom
sub
ds
and
scas
repnz
test
mov
cmps
es
(bad)
hlt
add
mov
movs
add
loopne
inc
popf
or
call
add
aad
sbb
pop
int3
xlat
mov
xor
shl
mov
dec
mov
movs
dec
push
jp
mov
push
xchg
pop
push
daa
add
push
cmp
mov
mov
xchg
cmp
sbb
mov
adc
pop
xchg
jecxz
jns
dec
das
mov
add
sbb
popa
push
mov
ss
dec
pop
retf
and
cld
xor
sbb
movs
cmp
dec
and
fnstsw
aas
adc
or
or
sub
xor
push
(bad)
adc
daa
cmp
pop
call
and
push
xchg
xor
xor
test
mov
sub
and
add
js
push
xor
pop
cwde
sbb
pop
xor
mov
popa
das
dec
and
xchg
cmp
loope
xor
dec
loope
popf
inc
imul
or
sahf
push
int3
popf
sub
adc
pop
or
pop
jl
xor
pusha
leave
jnp
xchg
or
cmp
mov
pushf
sub
(bad)
sub
push
pop
jnp
xor
push
mov
push
outs
dec
int3
xor
rol
clc
(bad)
pop
in
xor
ret
je
dec
push
mov
jbe
adc
movs
fs
dec
mov
movs
inc
adc
sbb
fild
add
dec
cmp
in
dec
dec
ret
leave
out
inc
loope
add
pop
push
pop
ret
(bad)
adc
or
add
or
pushf
daa
mov
mov
and
xchg
ss
cmp
or
jbe
cmc
mov
mov
inc
cmp
jl
pop
mov
in
xor
push
sbb
rol
lds
push
add
ins
add
lea
dec
xchg
cld
push
jmp
mov
pop
gs
pop
add
pop
mov
mov
add
xor
cmp
ins
add
leave
sbb
xchg
mov
add
push
pop
sbb
add
add
push
ret
push
jl
lds
mov
mov
inc
mov
icebp
mov
jb
or
dec
mov
cmps
xor
sub
adc
test
and
adc
dec
sahf
retf
and
adc
cmc
lods
and
ins
cmp
imul
(bad)
test
mov
cmp
adc
(bad)
aaa
or
dec
fs
add
stc
push
jno
or
or
inc
inc
add
test
and
xchg
out
dec
pop
inc
pop
pop
pop
lahf
aam
mov
stos
mov
cdq
iret
xor
cmp
cmp
leave
and
cmp
cmps
dec
pop
add
ins
std
dec
push
add
inc
pop
mov
push
cdq
mov
pop
(bad)
mov
mov
mov
dec
pop
cmp
pop
mov
xchg
sbb
or
fld
mov
inc
or
cmp
xor
inc
xlat
ja
dec
jne
mov
inc
outs
sbb
pop
xchg
and
dec
add
xor
or
adc
mov
or
or
inc
(bad)
shl
mov
pop
arpl
(bad)
fldlg2
fld
fyl2x
fstp
adc
mov
shl
sub
movsx
and
dec
mov
fmul
and
mov
iret
xor
xor
test
sbb
outs
mov
clc
fld
fabs
dec
fdiv
add
clc
jmp
fmul
fcom
inc
mul
inc
push
adc
jmp
inc
jb
fs
mov
inc
cmp
lock
mov
jbe
int3
sbb
test
jo
(bad)
jge
pop
pop
add
sub
mov
xor
mov
jl
dec
xchg
call
gs
sub
stc
cmp
popf
sbb
mov
sbb
mov
push
out
xchg
mov
cmc
push
adc
sub
jne
mov
je
popf
adc
mov
ret
and
add
push
mov
push
sbb
push
test
mov
pop
rcr
leave
enter
add
inc
adc
mov
int
dec
sti
xor
or
inc
dec
add
adc
sahf
jmp
lods
loope
test
xchg
inc
inc
es
dec
and
std
repz
arpl
shl
out
cmp
inc
cli
adc
shr
push
xchg
inc
sbb
movs
(bad)
xchg
xchg
and
mov
sub
imul
jns
mov
or
(bad)
adc
mov
add
inc
adc
push
imul
xchg
push
jmp
jb
jge
pop
xor
sub
xor
adc
sbb
pushf
fs
js
(bad)
xor
mov
std
daa
add
dec
sub
ret
jg
cmp
push
shl
mov
mov
rcl
les
cmova
cmp
jne
ds
mov
push
or
out
jp
in
mov
or
mov
mov
inc
sub
dec
sub
cld
or
push
jmp
sub
push
stc
cmp
mov
adc
cmp
sub
jne
and
pop
fldcw
in
aas
fdivr
mov
rcr
retf
or
jo
and
push
xor
mov
daa
mov
push
inc
pop
inc
add
sub
cmp
pop
cmps
xor
outs
sbb
add
xor
mov
sahf
je
push
xor
or
xchg
mov
dec
pop
or
fidiv
and
dec
sar
outs
jle
pop
je
dec
das
je
or
fwait
mov
je
xchg
icebp
sbb
les
rol
add
fwait
out
fwait
shl
mov
daa
mov
sub
sbb
ret
or
jmp
ret
pusha
mov
xor
out
ja
sahf
dec
dec
dec
adc
iret
xor
das
sub
mov
enter
imul
mov
psadbw
push
jae
repnz
adc
add
retf
dec
in
pop
ret
and
pop
test
mov
and
int
mov
add
or
and
sbb
pop
adc
mov
mov
jecxz
pop
shl
imul
sbb
repnz
sbb
sub
push
in
shl
jne
fucomp
(bad)
jl
adc
add
pop
jecxz
inc
adc
push
xchg
pop
mov
adc
aas
enter
jne
mov
inc
iret
add
nop
and
imul
xor
add
fld
mov
add
pop
(bad)
xor
adc
jecxz
popa
add
mov
retf
xor
imul
and
dec
mov
dec
and
pop
cmp
call
add
or
push
inc
lahf
inc
outs
fiadd
and
inc
fisub
pop
test
cmp
cmp
jl
add
mov
cdq
jmp
pop
pop
pop
pop
in
mov
iret
mov
cmp
mov
add
or
out
pop
out
jne
xchg
test
in
mov
ret
mov
jbe
cmp
jae
test
ret
xor
adc
outs
pop
in
sbb
adc
or
repz
xor
push
push
loopne
fadd
cli
test
push
xor
push
xor
js
or
dec
mov
or
xchg
repnz
mov
ret
test
arpl
sub
sbb
sbb
inc
sbb
push
imul
or
fnsave
ret
loop
pop
inc
push
cmc
not
(bad)
je
mov
mov
xchg
add
xchg
aam
clts
adc
mov
or
and
xchg
not
pop
mov
mov
cmp
(bad)
aam
test
jbe
and
aaa
push
(bad)
add
loopne
pushf
sbb
add
dec
adc
cmp
cmp
fadd
int3
inc
and
cmp
loopne
mov
les
cli
xor
add
jbe
mov
dec
dec
aaa
sub
or
adc
ret
popf
sbb
dec
push
(bad)
mov
lahf
test
push
les
cmp
inc
add
cmp
jle
push
dec
push
push
push
sub
and
mov
or
mov
pusha
mov
adc
inc
sub
fist
mov
dec
aad
movs
and
loope
cmp
push
and
and
mov
aad
or
jmp
daa
sub
les
dec
and
ret
sbb
cdq
dec
push
aam
xchg
or
xchg
xor
xor
(bad)
in
push
aam
sub
mov
mov
(bad)
jmp
adc
cmp
and
xlat
push
pushf
sbb
add
inc
xchg
ret
mov
pop
inc
or
inc
and
jmp
mov
sub
or
dec
js
hlt
jge
cmp
sbb
rol
mov
dec
jae
jae
push
les
sbb
dec
retf
test
mov
dec
out
add
adc
adc
mov
xchg
loopne
mov
mov
ret
rcr
test
pop
cli
sub
lds
cmp
dec
pop
sahf
and
cmp
pop
dec
pop
fs
push
ret
mov
jle
pop
and
push
add
and
pusha
cmp
xor
dec
leave
push
dec
shr
cs
repz
add
inc
ffreep
mov
lods
ins
aas
adc
push
ins
inc
jo
lods
int
pop
mov
imul
je
ja
mov
xor
or
xchg
mov
jmp
dec
push
dec
jge
sti
dec
retf
packssdw
lock
adc
out
aad
push
pop
sub
call
(bad)
push
out
and
or
mov
or
dec
(bad)
xchg
inc
ret
push
push
adc
clc
adc
inc
or
sbb
adc
or
lock
pop
popa
mov
push
or
mul
mov
jl
fild
das
xor
out
adc
or
repnz
mov
mov
xor
cmp
daa
sbb
mul
inc
or
add
lods
sub
dec
cmp
xor
pushf
add
sub
push
lods
pusha
jmp
ins
or
add
add
js
or
stos
loope
add
pop
jb
sahf
mov
sub
into
es
and
sysret
jmp
cmp
or
push
xor
or
retf
sub
push
cs
jmp
push
mov
addr16
push
pop
aaa
shr
add
or
movs
out
pusha
cmp
cli
mov
and
push
pop
pusha
lock
ins
and
iret
push
push
dec
cmp
xlat
cmp
outs
jns
mov
pop
jg
adc
mov
cmp
sar
mov
mov
push
push
aas
call
and
mov
push
cmp
jae
or
mov
push
xor
hlt
adc
test
mov
pushf
sub
adc
push
and
repnz
imul
jl
adc
push
(bad)
mov
mov
enter
push
mov
ss
jmp
sub
mov
or
pop
sbb
inc
mov
jle
icebp
inc
dec
mov
cld
les
pop
jo
cs
ins
inc
add
push
shr
push
pop
push
and
dec
ret
scas
add
mov
addr16
xlat
mov
cmp
aas
cmp
cmp
pop
cmp
shl
jo
xchg
or
add
jmp
(bad)
and
inc
add
ja
push
sub
push
mov
es
lea
push
or
xchg
add
push
sbb
push
adc
aaa
sub
pop
push
jbe
in
add
add
push
bound
shl
call
mov
stc
pcmpeqb
or
fmul
adc
data16
xchg
cmp
jne
cmp
ss
ret
cmp
or
stos
jns
ss
add
int
add
adc
or
das
xor
ja
sahf
retf
daa
pop
sbb
pop
jns
in
adc
sbb
sub
or
mov
and
cs
jecxz
mov
call
add
mov
or
push
or
push
lahf
or
jl
inc
jmp
push
push
and
push
lea
cwde
dec
adc
adc
xchg
rep
cmp
adc
or
(bad)
stos
lea
pushf
inc
dec
inc
add
inc
push
cmp
daa
mov
mov
int3
test
das
push
outs
or
int
push
out
out
gs
psrlw
rep
movs
push
sub
test
mov
jmp
iret
xor
add
adc
adc
mov
cmp
or
cmp
xchg
fcomp
inc
sub
inc
ret
sub
jbe
push
lods
push
lock
mov
(bad)
mov
loopne
gs
jne
pop
push
sub
xchg
sbb
mov
and
jns
or
jb
adc
sub
xchg
pop
adc
push
test
adc
fs
mov
fidivr
movs
dec
xchg
out
sbb
adc
fiadd
mov
movs
sub
adc
test
push
retfw
jle
pop
adc
sub
sub
sbb
mov
mov
add
push
movs
jae
adc
adc
fmul
daa
mov
dec
add
mov
test
clc
push
push
jge
das
retf
cld
mov
dec
mov
pushf
call
retf
add
add
sbb
dec
fidivr
aam
xchg
mov
push
pop
sbb
sbb
out
fisttp
(bad)
sar
or
adc
mov
dec
mov
mov
push
loopne
lds
js
psubb
mov
(bad)
loopne
pusha
aaa
jle
inc
sub
rol
imul
push
dec
jne
mov
ds
jp
int
cmp
mov
repnz
daa
fild
mov
add
dec
fmul
mov
test
or
popw
repnz
or
push
xor
inc
cli
imul
out
movs
mov
and
and
add
adc
xchg
fnsave
add
pop
and
inc
cs
lea
jmp
mov
add
mov
lea
dec
fcomp
shr
shl
je
sbb
add
mov
push
adc
out
je
mov
outs
popf
imul
or
lea
call
lea
mov
fmul
test
popf
xor
cmp
ins
test
ret
cmp
cdq
push
sar
cmp
int
mov
scas
xlat
push
dec
iret
mov
int3
jp
retf
push
add
ror
inc
sub
rdpmc
dec
or
lods
inc
outs
je
(bad)
in
inc
sbb
sahf
push
push
lea
xor
push
push
add
add
mov
movs
pop
xor
(bad)
in
shl
inc
pop
jle
and
cmp
lea
xor
xor
lock
cmp
and
das
shl
mov
add
push
lods
xor
push
sub
rcl
fcompp
call
fiadd
ins
mov
sub
ja
mov
jo
push
aad
rol
sub
aaa
mov
jmp
adc
push
and
dec
and
bound
cmp
addr16
xchg
sbb
jnp
mov
adc
rcr
add
adc
inc
test
sub
pop
mov
mov
sahf
pop
test
sbb
adc
or
out
sti
xor
out
adc
dec
jb
mov
clc
ins
mov
cmps
jne
sbb
jb
jbe
jb
retf
push
sub
jne
pmulhuw
cmps
sub
clc
clc
call
mov
or
push
adc
aam
retf
out
cdq
cmp
fidiv
(bad)
push
inc
adc
or
test
aad
in
cmp
enter
nop
push
pop
loop
aaa
xchg
ss
sbb
add
dec
cmp
push
and
hlt
and
jmp
mov
and
cmps
in
sbb
xor
push
rcr
inc
pop
les
mov
jbe
ds
cmp
stc
add
or
mov
adc
push
add
sbb
or
ror
cmp
test
jbe
dec
js
js
dec
inc
mov
fiadd
fwait
sub
sbb
rol
jno
xlat
lea
or
lea
and
adc
dec
fnstcw
movs
data16
cmc
bound
pop
loop
retf
cmp
sub
inc
popa
loopne
out
jns
mov
adc
push
into
fld
cli
or
add
cld
jbe
or
sub
push
loope
cs
hlt
dec
bound
xor
sub
push
lock
adc
sub
adc
iret
pop
dec
jecxz
mul
test
push
dec
call
ins
pop
fcomp
mov
or
push
or
adc
cmp
push
xor
rcr
jmp
test
cmp
mov
lock
fldenv
add
pusha
sbb
test
inc
adc
pop
jp
outs
dec
add
and
inc
call
inc
push
mov
icebp
cdq
pop
xchg
push
icebp
xchg
movs
movs
xor
call
xor
(bad)
dec
jb
jge
cmp
sbb
retf
mov
sub
push
ficom
loopne
sldt
mov
sar
jle
cmp
jmp
pop
iret
(bad)
sub
xor
cmp
sub
pushf
movs
xor
in
es
and
sbb
mov
sbb
push
inc
pop
inc
lahf
mov
or
test
or
test
add
dec
xor
rcr
mov
daa
mov
add
jge
and
ds
rcl
lods
aas
shl
dec
add
adc
fnstsw
xchg
mov
fisttp
ror
rcr
mov
mov
pop
mov
inc
push
mov
sar
in
pushf
inc
in
arpl
cmp
pop
pop
arpl
inc
mov
mov
sub
dec
in
das
pop
xor
adc
push
xor
mov
mov
mov
pop
dec
jp
push
mov
hlt
rcl
add
push
push
je
push
dec
push
leave
shl
jmp
mov
push
and
push
ins
gs
dec
push
fwait
xor
and
lock
(bad)
sbb
int
fs
push
add
inc
daa
dec
adc
push
push
lahf
push
sbb
inc
add
add
sti
sbb
icebp
inc
mov
or
push
mov
cmp
ins
mov
pusha
loope
rcr
mov
repz
and
add
test
add
xor
les
outs
pop
add
sub
jge
test
add
mov
cmp
(bad)
ins
pop
rol
jno
int
fmul
or
xchg
les
stos
lods
jne
inc
aam
cmp
dec
pop
or
lock
es
add
and
lods
push
repnz
mov
callw
mov
ss
push
movs
mov
xchg
add
pop
sbb
fldenv
pop
hlt
or
retf
adc
repz
inc
fs
inc
in
push
add
push
aam
push
jge
xchg
stos
mov
ss
dec
call
add
(bad)
ret
and
imul
and
xchg
or
gs
sbb
pushf
ds
xchg
test
dec
mov
mov
mov
pushf
adc
daa
mov
dec
ins
add
(bad)
cmp
add
sub
scas
push
das
push
pop
shl
add
jnp
sbb
pop
(bad)
and
imul
pop
fs
mov
jmp
lods
push
dec
fsubr
jl
jne
sbb
xor
jb
call
and
and
push
sub
pop
add
mov
add
mov
push
jmp
call
imul
sbb
push
in
mov
adc
adc
sbb
or
jl
and
out
mov
add
ins
outs
loop
push
je
mov
adc
and
inc
daa
adc
mov
jmp
add
jl
sub
sahf
cmp
sbb
jne
pop
ror
rcr
add
adc
repz
lods
cmp
push
dec
add
inc
aaa
mov
ds
and
(bad)
in
adc
pusha
mov
add
lea
xor
lahf
movs
(bad)
in
fcomip
in
add
or
push
and
sbb
push
and
mov
cmp
pusha
mov
pop
push
les
repnz
jne
add
pop
test
xlat
aaa
adc
loopne
mov
inc
outs
pop
add
(bad)
stos
ja
inc
xchg
cmp
out
test
retf
inc
xchg
rol
xchg
push
ror
lea
jnp
cmps
and
or
add
jno
jne
sar
cdq
xor
jnp
add
mov
and
or
pop
or
adc
pop
aam
xor
je
mov
push
xor
ret
cmp
mov
fs
gs
sub
push
pushf
and
sub
fsubr
push
icebp
(bad)
in
fdivr
adc
push
xlat
ins
push
pop
sub
and
fnstsw
jbe
les
push
pop
ds
jp
pop
fild
adc
mov
adc
mov
adc
(bad)
rol
push
mov
test
retf
dec
xor
xchg
add
fs
dec
in
mov
dec
jp
int3
adc
sar
adc
loop
sub
pushf
xchg
lea
lahf
lds
mov
call
out
pop
mov
add
mov
xor
adc
jne
je
lahf
xchg
shl
sbb
jp
mov
mov
idiv
loopne
dec
aam
push
push
ja
ins
or
(bad)
push
push
push
mov
sbb
xor
adc
fisubr
or
aam
push
xchg
push
cmp
mov
and
dec
in
ret
arpl
lea
aam
jnp
cli
ror
cmp
cmp
or
pop
mov
pushf
inc
sbb
dec
lods
mov
je
dec
test
(bad)
outs
mov
cmp
fadd
pop
sub
out
pop
mov
ins
xchg
loopne
stos
popf
mov
mov
dec
out
(bad)
cmc
js
dec
pusha
test
lock
sub
adc
mov
jo
popf
add
xlat
push
pop
sub
inc
add
scas
pop
pop
shr
xchg
sbb
pusha
(bad)
lods
aam
mov
mov
(bad)
ret
(bad)
outs
(bad)
retf
out
in
xchg
je
xlat
into
test
add
jmp
repz
cmp
rcl
xor
cs
cmp
mov
jo
ja
mov
mov
xchg
jo
test
pop
scas
out
mov
(bad)
mov
push
mov
jo
ret
sysret
(bad)
adc
ret
mov
mov
shr
jne
jg
mov
jl
jg
sub
or
and
inc
mov
je
or
nop
jo
mov
rcl
add
int3
dec
nop
sbb
(bad)
push
xor
nop
jo
and
sub
aas
mov
mov
mov
pop
or
xchg
ret
cmp
mov
pop
xor
lods
cmp
sub
movs
fs
pushf
clc
add
add
add
in
in
stos
inc
jmp
add
inc
adc
int3
stos
movs
sbb
fsubr
ret
or
loopne
lahf
inc
sbb
test
inc
cmp
or
stc
or
(bad)
pop
jne
push
jae
push
or
js
pop
and
add
adc
xor
es
xchg
sbb
(bad)
sub
or
xchg
fcom
jbe
add
and
js
xor
lods
ins
call
sbb
test
shl
xchg
sahf
or
ret
jmp
lahf
jnp
adc
adc
xor
add
lahf
add
inc
mov
mov
push
jp
or
and
aad
push
out
adc
jle
pop
test
or
in
inc
push
ja
in
imul
movs
cmps
stos
mov
inc
inc
arpl
mov
loope
js
out
idiv
jecxz
add
scas
hlt
push
arpl
in
sbb
jnp
dec
cmp
mov
and
push
mov
call
ins
xchg
inc
and
jp
sar
arpl
sub
dec
adc
sub
jecxz
xchg
or
imul
shr
sar
adc
add
cmp
in
sbb
fistp
inc
xlat
lahf
mov
je
fwait
shl
add
shl
push
pop
inc
jge
sbb
add
and
xchg
pop
adc
inc
pusha
xchg
pop
add
ret
sbb
push
ror
sbb
js
pop
xchg
add
add
mov
xor
jae
jmp
adc
dec
push
push
pop
retf
ret
jge
cmp
call
xchg
xchg
push
sbb
dec
add
sub
imul
hlt
repz
add
push
push
cmc
fwait
mov
loopne
imul
std
cmc
jmp
fistp
ret
xchg
test
jmp
cmovle
sub
dec
pop
fisub
sub
push
mov
cmp
push
sub
inc
cmp
and
mov
(bad)
inc
lds
adc
pop
add
ror
jp
mov
pop
les
dec
jbe
mov
leave
outs
push
dec
or
cvtps2pd
adc
cwde
and
sub
bound
nop
inc
xchg
fidivr
repz
shl
push
bound
mov
mov
sbb
inc
xchg
(bad)
xor
mov
push
loopne
ret
pop
call
les
push
cli
jb
and
ret
dec
add
sbb
sti
adc
mov
cmps
arpl
enter
xor
cs
dec
fisubr
sub
(bad)
cmp
addr16
add
mov
pop
inc
dec
(bad)
mov
inc
jl
lahf
add
in
jg
jecxz
mov
scas
lock
loop
pop
ds
add
sub
inc
and
pop
add
or
push
push
mov
outs
hlt
stos
mov
test
jle
mov
mov
mov
fisttp
add
jns
jmp
push
ins
sub
and
inc
lahf
ins
lods
sub
sub
add
loop
ds
test
sbb
loope
pop
push
retf
push
neg
sub
sbb
xchg
xor
jns
cli
or
ret
fidiv
or
ins
out
jmp
std
inc
and
dec
test
ret
out
xor
pushf
mov
jae
in
sbb
sub
ja
push
jo
or
push
(bad)
daa
popf
xchg
inc
and
inc
cmp
jl
mov
xor
xchg
hlt
ficomp
daa
push
data16
adc
push
cs
jb
sub
mov
sub
mov
mov
ja
pusha
in
sbb
and
sub
hlt
mov
mov
push
dec
push
xchg
fs
jg
test
lea
xor
xchg
repz
mov
daa
rcr
sar
dec
imul
or
cmp
adc
mov
or
sti
xchg
test
xchg
inc
inc
sbb
jmp
mov
jecxz
movs
pop
call
push
daa
cli
shr
dec
sbb
out
jle
or
int
loopne
test
sub
pusha
popa
fwait
pusha
sbb
pop
dec
sub
rol
cmp
clc
fild
pop
or
jne
push
movs
pop
dec
leave
jae
out
jbe
fcom
push
and
sub
bound
retf
lods
jne
popf
jmp
in
ret
(bad)
push
out
ror
js
test
pushf
and
adc
mov
add
jp
add
add
lods
sbb
push
pusha
xchg
shr
jb
daa
xchg
dec
pop
pop
hlt
test
mov
push
aaa
out
mov
jnp
(bad)
jno
push
cld
call
sbb
loop
or
loopne
shl
pusha
dec
jl
imul
sbb
les
add
pop
retf
pop
test
push
push
or
and
mov
dec
imul
int3
add
xor
mov
xor
add
xchg
in
sbb
sbb
into
mov
jl
outs
cdq
push
sbb
(bad)
and
and
push
lea
dec
fsubr
cli
sub
mov
loopne
xchg
push
hlt
add
ja
or
clc
xor
and
xor
pop
rcr
test
lahf
xor
jbe
sbb
push
dec
lahf
add
adc
add
jecxz
and
mov
cmc
pop
sahf
push
xchg
cmps
and
adc
sub
or
mov
mov
fst
add
inc
mov
add
inc
cwde
adc
push
inc
add
xchg
adc
push
push
sbb
add
iret
jmp
mov
retf
sub
and
adc
gs
cld
adc
ins
in
rcl
or
xchg
dec
add
sbb
(bad)
pusha
mov
push
das
push
std
pop
movs
aad
push
sbb
ret
push
or
jmp
ja
dec
adc
mov
xor
dec
aaa
jo
mov
mov
rcl
pusha
mov
cmp
arpl
(bad)
inc
jp
ds
jo
push
mov
scas
pop
add
or
push
dec
and
add
adc
push
aas
je
push
xor
adc
jp
adc
mov
dec
add
adc
and
mov
cmp
loopne
scas
mov
adc
mov
inc
cmps
push
dec
sbb
cmp
add
add
adc
loop
adc
popa
pop
adc
jmp
inc
mov
dec
sti
std
push
cmp
hlt
sbb
je
test
add
mov
repnz
jb
push
fs
stos
dec
ror
pushf
inc
adc
fisub
popa
mov
add
xchg
scas
test
rol
or
or
(bad)
(bad)
push
lea
test
lock
add
dec
jg
pusha
or
adc
fadd
mov
pop
je
and
xor
dec
out
sub
and
sbb
js
mov
and
sub
xchg
les
jmp
popa
test
sub
dec
mov
jnp
xor
jne
or
jnp
push
push
jp
or
(bad)
imul
ins
loope
ins
xchg
or
push
pop
js
sbb
push
xchg
retf
rcl
pop
pop
out
and
or
popf
mov
je
inc
loopne
or
(bad)
adc
push
or
jmp
mov
push
mov
jbe
aad
fimul
sbb
adc
jae
clc
sbb
lock
movs
imul
sub
pop
xor
jle
sbb
inc
or
jg
push
mov
push
arpl
mov
cmp
call
loope
popf
hlt
push
xchg
popf
daa
add
call
sbb
ret
gs
sub
jno
cmp
icebp
xchg
add
mov
fiadd
nop
xor
mov
je
cmps
test
cmp
mov
lods
mov
push
movs
dec
push
(bad)
push
push
push
repz
outs
imul
dec
dec
call
out
add
adc
stos
jle
add
sbb
adc
inc
clc
cmp
dec
lea
adc
pop
sub
add
xor
adc
int3
in
xchg
add
or
mov
test
mov
inc
push
dec
mov
cmp
inc
pop
lea
or
dec
jne
fimul
push
push
lods
cmovnp
and
push
pop
and
push
aam
sbb
dec
dec
cli
arpl
xchg
sub
aas
jle
clc
dec
cmps
add
dec
jae
fcom
movs
fimul
sub
inc
add
jle
lock
pop
push
and
add
ret
mov
sbb
add
jl
pop
pop
je
or
and
mov
test
sti
cwde
cmp
aaa
pop
pop
and
ror
scas
sbb
pop
ss
pop
aam
nop
clc
and
pop
or
dec
xor
outs
test
or
popa
fld
or
push
dec
mov
jg
xchg
mov
rcl
mov
sub
jle
cmp
xor
mov
cdq
push
sub
and
and
pop
inc
xchg
cmp
pop
dec
lods
xchg
inc
cmp
enter
and
out
push
pop
cmp
mov
je
and
loope
pushf
adc
ror
ins
rcr
out
ror
cs
imul
and
add
outs
or
out
or
data16
sub
in
dec
push
popf
add
(bad)
adc
nop
popa
ror
jle
push
xor
jmp
add
push
xchg
mov
jle
xor
popa
daa
mov
xor
add
shr
sbb
ret
mul
cmp
je
push
push
mov
fistp
push
dec
out
je
add
loope
add
or
(bad)
cli
retf
and
shl
aad
clc
ret
sbb
rcl
and
or
rcr
push
fiadd
test
out
mov
in
rcl
ret
aam
jmp
repnz
sbb
inc
xchg
add
jl
dec
test
pop
add
test
lahf
ins
push
gs
outs
push
addr16
outs
inc
aad
into
mov
fs
fdiv
call
jbe
dec
ret
jnp
(bad)
into
vmwrite
xor
or
inc
std
and
(bad)
sbb
(bad)
inc
dec
lods
mov
cmps
xor
inc
dec
adc
sub
cmp
push
jmp
push
ror
lea
sbb
sbb
inc
or
rcr
jbe
stos
push
fld
ror
test
in
xor
ss
daa
dec
data16
jecxz
loopne
test
pop
pop
pop
ins
(bad)
adc
inc
sub
fimul
mov
fidiv
adc
inc
sbb
stos
xchg
push
inc
pushf
sub
add
sbb
push
cld
mov
cmps
sub
sbb
and
dec
xor
or
inc
arpl
data16
fidiv
lods
mov
sbb
ins
sub
pop
cs
out
pusha
fs
add
add
add
push
inc
jge
mov
push
mov
mov
int3
xor
call
xor
push
push
push
pusha
std
adc
push
ror
les
retf
sbb
or
pop
lock
jns
clc
push
lahf
rep
xchg
int
sub
add
push
xor
and
mov
ret
mov
pop
add
adc
lods
mov
add
je
add
adc
mov
shr
ins
aam
ins
xor
pop
or
lea
jne
xor
mov
inc
pop
and
push
add
and
push
rol
or
sbb
add
mov
pop
jle
jne
xchg
mov
adc
fstp
cmp
cwde
fdivr
pop
sub
loop
fwait
jnp
sub
jnp
adc
gs
push
adc
xor
fist
jle
jo
test
fadd
mov
pop
loope
mov
dec
push
shl
fld
lahf
dec
jle
push
push
fadd
ret
adc
call
fcmove
or
sub
hlt
push
loopne
push
add
shl
es
add
mov
lahf
push
pop
loope
adc
mov
sbb
pop
push
inc
lock
rcr
jg
or
pusha
fs
pop
pop
jl
cs
push
lock
cli
rcl
(bad)
mov
push
sub
ffreep
dec
push
pushf
out
je
outs
aam
retf
jne
pop
jmp
adc
neg
or
jge
mov
fs
push
(bad)
fsub
sbb
test
cmp
outs
dec
xchg
nop
inc
add
out
push
cmp
cmp
movs
cmp
inc
les
sbb
and
call
es
push
seto
sbb
jb
imul
push
pushf
inc
(bad)
mov
xor
or
jbe
outs
add
jo
js
jb
push
or
add
iret
push
add
pop
pop
cdq
cmp
and
int3
jne
lea
in
push
(bad)
repnz
dec
cli
lock
sub
mov
arpl
dec
ret
in
adc
jns
add
push
mov
pushw
ins
dec
inc
add
fadd
jbe
(bad)
fisub
lds
mov
js
fidiv
add
and
or
shl
cwde
nop
push
add
jno
test
push
inc
(bad)
dec
rcl
mov
int
jecxz
mov
pop
xor
outs
sub
push
addr16
mov
or
fninit
fist
retf
mov
dec
data16
mov
jae
pop
adc
push
outs
into
push
push
xor
add
js
jg
(bad)
rol
lock
add
mov
sbb
cmps
add
mov
adc
cmp
adc
mov
inc
je
sbb
xchg
pop
push
push
mov
sub
pop
add
shl
xchg
ins
sub
repnz
cmp
push
(bad)
call
jp
leave
jo
xchg
push
pop
inc
repnz
and
adc
and
out
mov
mov
sbb
ret
jns
rol
adc
fwait
in
xchg
cmp
inc
test
add
xchg
sub
sub
je
push
dec
xor
icebp
dec
fwait
or
mov
es
cmps
xor
pop
and
or
mov
xchg
cmp
mov
mov
cdq
xchg
sbb
ret
xchg
and
mov
push
xchg
aam
dec
sub
push
addr16
ins
xchg
push
pop
jle
push
push
loop
adc
daa
test
lea
(bad)
test
dec
loop
adc
or
sbb
cdq
mov
jne
mov
shl
push
and
add
stos
and
xor
(bad)
lahf
or
(bad)
lods
rcr
lods
add
push
test
fiadd
adc
and
or
inc
dec
inc
add
push
mov
ins
adc
dec
xchg
xchg
pop
ror
idiv
pop
adc
inc
sub
jo
pop
xchg
jp
in
stc
inc
add
fist
cmp
lds
fwait
xor
or
(bad)
cmc
arpl
push
and
imul
inc
mov
jae
dec
and
(bad)
and
jp
mov
add
adc
ds
int3
xchg
mov
pop
ds
pop
add
cmp
cdq
cwde
pushf
mov
push
ins
xor
mov
inc
bndstx
inc
loop
outs
push
sbb
bound
sub
pop
cmps
aam
push
xor
data16
inc
mov
pusha
inc
inc
je
add
xchg
xchg
cmp
xor
add
pop
sub
lds
xchg
xchg
dec
jo
loope
or
loopne
xor
jp
enter
(bad)
sub
mov
inc
ret
add
pop
push
sbb
pushf
into
popf
into
loopne
jno
fst
sub
shl
push
jmp
ret
sbb
sbb
xor
out
ins
or
and
xchg
sub
add
and
jo
(bad)
repnz
cmp
push
inc
je
pop
in
mov
dec
push
aas
sub
pop
mov
inc
mov
xchg
outs
ret
jl
pop
dec
js
push
ins
mov
jl
ds
sbb
ins
clc
cmp
imul
push
outs
(bad)
add
inc
gs
imul
or
cmp
jle
mov
cmp
push
or
add
push
push
add
jmp
retf
inc
loopne
pop
jle
jg
xor
dec
js
out
int
xor
leave
(bad)
cmc
lea
xchg
pop
and
sbb
mov
and
je
pop
inc
push
adc
sbb
nop
out
and
pop
js
jne
mov
inc
popa
nop
repz
cld
clc
ins
loop
add
cdq
movs
mov
inc
stos
jmp
sbb
hlt
test
xor
pop
or
cmp
outs
adc
ss
test
jmp
and
pusha
ret
mov
mov
ja
aam
inc
inc
add
sbb
push
dec
aas
rol
aam
ins
push
pop
pop
adc
inc
cmp
inc
fisttp
add
sub
imul
mov
fmul
call
lods
inc
cmp
inc
push
add
hlt
popf
cli
xchg
xor
mov
in
jle
mov
xchg
ret
shr
pop
ret
clc
lds
fmul
cmp
fmul
ror
ror
dec
or
aas
jae
lds
xchg
(bad)
fcom
jb
imul
fcmove
(bad)
out
add
cli
arpl
or
jo
inc
add
jmp
out
sbb
pop
lock
ret
(bad)
cld
mov
jl
jnp
or
fmul
repnz
push
inc
shl
xor
sbb
jl
dec
retf
cld
push
push
in
out
fiadd
lock
mov
aam
pop
test
test
push
shr
out
clc
sahf
dec
and
jo
cmp
sub
fist
fadd
sbb
ja
mov
add
sub
mov
mov
ret
rcr
jnp
cmp
push
ret
les
jo
mov
outs
mov
jle
and
xor
sub
fadd
sub
adc
add
adc
or
add
adc
jl
sbb
mov
leave
sbb
sbb
add
inc
dec
retf
push
xchg
test
adc
cmp
mov
int3
push
jb
clc
stos
test
retf
jmp
sub
push
adc
pop
inc
loopne
push
jl
and
cdq
push
neg
push
xor
add
into
push
popa
cmps
jbe
cmp
inc
mov
and
or
ins
add
mov
sub
iret
jne
push
inc
or
inc
mov
fistp
sbb
and
mov
mov
(bad)
clc
in
cli
scas
retf
or
fnstcw
inc
xchg
(bad)
adc
out
out
xor
cmp
mov
stc
inc
les
adc
jl
test
sbb
xor
mov
jns
sub
mov
mov
out
jle
cmp
ret
imul
xor
stc
pop
(bad)
sbb
pop
loop
nop
sbb
call
fisub
pop
and
push
jmp
jnp
push
ss
mov
pop
ror
jg
pushf
in
cdq
lea
push
idiv
mov
push
les
iret
pop
adc
and
xor
sbb
or
mov
jno
mov
test
rcr
add
cdq
shl
mov
pop
mov
and
pop
mov
adc
add
adc
mov
movs
cld
std
sbb
sub
fcmovbe
fcom
mov
fmul
mov
push
adc
or
inc
subps
ret
clc
sub
sub
sbb
enter
sbb
xor
jg
add
mov
add
and
mov
data16
and
arpl
jb
xor
mov
and
ret
push
aaa
mov
lea
jecxz
imul
pop
add
movs
add
push
and
pusha
sbb
adc
mov
test
(bad)
and
pushf
xchg
dec
mov
jmp
retf
mov
inc
xor
push
and
xchg
icebp
leave
movs
inc
sub
push
push
sbb
arpl
jbe
push
ror
retf
cmp
xor
enter
cmp
out
and
adc
sbb
mov
pcmpeqw
pop
adc
stos
test
test
pushf
pop
add
xchg
add
mov
and
push
sub
cmp
dec
dec
xchg
in
mov
sbb
push
fsub
stos
daa
or
sbb
je
mov
(bad)
push
cmp
and
mov
(bad)
or
dec
push
dec
or
sbb
inc
data16
and
adc
adc
jae
mov
push
pop
aad
loope
or
mov
lods
inc
cmp
or
adc
fisub
repz
mov
nop
push
pop
out
jg
ins
sub
mov
adc
or
(bad)
cs
xchg
sbb
sub
dec
inc
rol
jp
lea
hlt
push
imul
dec
or
mov
inc
sub
push
push
arpl
js
loope
cmovne
je
push
call
jg
sar
and
add
jecxz
pusha
adc
js
stc
xor
push
mov
push
push
push
cmp
sbb
ror
pop
sub
adc
push
and
push
and
movs
or
mov
sbb
cmp
js
adc
test
dec
(bad)
movs
jle
rcl
mov
pushf
pop
pusha
cs
pop
es
push
push
and
jnp
js
ds
push
lods
mov
xor
test
push
mov
jp
pop
and
retf
das
ins
lea
and
push
ret
push
push
in
mov
popf
daa
add
cmp
lds
cmps
pop
(bad)
or
push
fnsave
fst
mov
pop
das
nop
jae
adc
mov
xchg
std
add
mov
mov
test
lods
inc
add
mov
xor
dec
push
mov
xchg
sar
add
push
adc
or
repz
mov
jmp
xchg
and
push
add
sbb
mov
js
js
mov
jmp
push
fiadd
xchg
cdq
outs
inc
inc
lods
and
ins
or
adc
add
clc
aam
jge
mov
clc
(bad)
cmc
shl
clc
mov
pop
and
cmp
imul
mov
sbb
test
rcr
js
xor
stos
cmp
shr
rol
loop
or
and
fs
test
je
fist
push
iret
fwait
adc
test
adc
enter
add
(bad)
arpl
cli
mov
push
ret
dec
sub
sub
aaa
xor
push
aas
mov
and
pop
clc
push
and
aaa
or
imul
cmc
and
pop
sbb
lea
mov
push
aad
xor
add
je
ret
jb
pushf
sbb
arpl
or
sbb
or
sbb
push
mov
ss
lea
dec
sbb
mov
xor
inc
mov
jmp
adc
mov
pop
lea
or
add
inc
xor
push
xchg
fld
dec
loopne
push
jbe
push
dec
push
sbb
mov
imul
jb
inc
imul
inc
mov
imul
push
push
adc
lds
mov
mov
sbb
xchg
sub
rcr
lock
cmp
aam
ins
es
es
enter
cmps
neg
and
mov
or
sbb
fst
sub
add
imul
add
xor
rol
add
xchg
cmp
push
pop
imul
mov
push
bound
push
jae
push
imul
adc
loope
stos
add
inc
call
adc
mov
push
mov
inc
push
rcr
sub
pusha
dec
add
inc
jno
add
or
add
push
test
and
leave
ds
adc
sbb
neg
or
leave
repz
sub
push
push
jge
in
mov
push
add
out
in
inc
xchg
add
inc
loopne
sbb
add
leave
test
scas
jbe
pop
push
jmp
inc
add
add
and
sub
push
ds
popf
mov
lds
xor
std
or
out
push
add
sub
lods
xor
and
stos
jle
pop
ret
div
(bad)
scas
lods
sub
sbb
lock
mov
mov
sub
add
dec
jmp
lock
or
stos
or
(bad)
loopne
mov
js
ret
mov
add
push
or
sub
mov
or
test
mov
xchg
popa
push
(bad)
mov
jne
fisttp
and
call
mov
pop
inc
and
pop
mov
data16
mov
scas
ret
rep
mov
xchg
add
inc
lock
mov
sub
jge
sub
xor
cmc
fiadd
dec
popa
stc
inc
cs
or
outs
sti
gs
cmp
jmp
pop
mov
mov
sub
dec
call
inc
fwait
cli
sbb
mov
add
or
add
fdiv
fs
push
sbb
adc
popa
xor
jp
pop
jbe
push
xchg
add
jle
inc
repnz
add
dec
jg
push
cmp
ror
mov
pop
push
mov
inc
sbb
scas
push
je
jmp
pop
push
(bad)
xor
cs
ja
cmp
mov
(bad)
adc
cmp
sbb
or
sbb
and
fst
sub
in
fcomp
(bad)
sbb
pushf
cmp
out
mov
mov
mov
add
fild
mov
jae
lods
xor
dec
adc
lds
mov
push
ss
test
ins
dec
test
inc
imul
mov
jmp
jb
mul
mov
sub
jmp
jae
ret
(bad)
push
stc
cs
push
pop
xor
inc
into
pop
mov
cmp
shr
rcl
dec
adc
leave
jnp
(bad)
and
nop
inc
ror
arpl
iret
jno
pop
jg
xor
je
imul
cmp
push
push
mov
add
pop
ins
and
hlt
push
rol
push
push
jge
jbe
dec
rol
adc
fimul
aad
push
es
rcr
sar
push
rol
test
adc
jle
or
mov
push
push
daa
movs
test
push
push
mov
mov
out
lock
sbb
sbb
or
mov
adc
es
mov
(bad)
(bad)
inc
push
inc
lea
inc
pop
setne
cld
push
sti
xor
pop
xchg
addr16
push
push
mov
or
add
aaa
ins
push
or
imul
or
or
iret
cmc
dec
mov
jno
lock
loopne
mov
jge
xchg
ss
push
cwde
stc
jo
fsubr
push
add
push
push
arpl
jo
jo
add
mov
or
mov
imul
stc
(bad)
(bad)
mul
sub
fstp
fnstsw
cmps
and
outs
xor
push
je
and
icebp
pop
div
ret
and
push
push
cmp
adc
mov
sbb
test
mov
jle
movs
push
mov
mov
into
ret
or
xchg
push
rcl
xchg
jg
pop
jbe
mov
sbb
rol
gs
lea
mov
movs
fist
fmul
leave
out
mov
or
in
xor
nop
mov
fmul
faddp
and
addr16
jl
mov
int3
sahf
imul
loop
xchg
mov
rol
jne
std
(bad)
mov
fadd
jmp
pop
jns
fsub
stos
jb
push
jo
pop
movs
movs
or
lea
shl
cwde
sar
test
xchg
(bad)
dec
and
mov
mov
mov
fdivr
movs
jmp
loope
push
pop
ret
aaa
sbb
push
and
mov
in
loopne
dec
loop
push
cmp
inc
mov
bound
add
sub
fs
movs
arpl
dec
js
mov
out
sub
sbb
pop
mov
and
or
sub
mov
push
jne
mov
movs
add
jnp
push
int3
sub
pop
jl
clc
add
mov
shl
ret
add
imul
push
aam
push
cmc
cmps
jl
pop
xor
add
sub
jo
fcomp
retf
and
adc
addr16
sbb
adc
cmp
jb
(bad)
jae
push
sub
push
cmps
lods
pop
das
cmp
xor
cmc
imul
loopne
js
popa
sbb
popa
and
and
aad
data16
and
add
adc
xchg
xchg
inc
mov
cmp
mov
add
popa
or
(bad)
add
jo
pop
out
dec
jmp
push
scas
sub
sbb
nop
jecxz
pusha
pop
xchg
push
int3
dec
dec
xchg
xchg
xor
(bad)
cmps
jge
push
loopne
push
aas
shl
mov
shl
adc
sbb
js
cmp
xchg
jb
jae
aad
ins
jnp
pop
ins
jae
xchg
jae
mov
and
push
popa
xor
ret
movs
test
int3
xchg
fisttp
sub
mov
jae
pop
dec
xor
cmp
pop
and
ja
jo
dec
cmp
clc
mov
push
pusha
adc
cwde
add
mov
fs
dec
adc
mov
in
lea
or
jno
jbe
inc
push
inc
sbb
push
push
jl
popf
or
cs
add
push
mov
ins
test
inc
cmp
adc
je
icebp
add
mov
add
les
and
mov
mov
or
adc
test
inc
jp
pop
ror
push
jo
push
dec
inc
test
jbe
cmp
add
adc
pop
les
mov
retf
aas
inc
xlat
mov
or
sub
shl
aas
xchg
shr
push
and
mov
xchg
jmp
adc
jno
in
inc
sbb
vcvtss2sd
rcl
inc
or
pop
cmp
push
inc
jo
fadd
ja
xor
and
sbb
lea
sbb
std
ret
pop
push
retf
je
pushf
or
or
(bad)
lea
daa
call
mov
xchg
xlat
pop
add
push
sub
sbb
lsl
add
mov
sub
fs
push
lahf
cmp
and
xchg
aam
jge
cli
mov
dec
retf
sub
movs
pushf
movs
cmc
pop
dec
hlt
imul
push
add
stos
add
and
lods
sbb
popa
cwde
sub
mov
push
fist
stos
pop
or
dec
scas
test
mov
imul
(bad)
fnstsw
cmp
mov
stos
or
and
lahf
imul
lfs
sbb
jmp
add
add
int
hlt
add
push
dec
stos
mov
xor
dec
shl
sub
or
or
in
pop
inc
les
add
xchg
scas
daa
popf
xor
adc
lock
ret
das
in
lea
inc
mov
jmp
repnz
aas
in
nop
lock
add
fstp
mov
pusha
std
aad
sbb
imul
mov
dec
push
mov
mov
jp
adc
aas
sub
cmp
cwde
pop
push
add
push
test
push
loop
jle
test
push
or
sub
sub
cmp
xchg
aas
xchg
pushf
sub
mov
jecxz
sar
std
rol
push
xor
add
fsub
test
test
inc
adc
or
add
mov
and
aas
cmp
lods
push
inc
push
(bad)
pop
out
adc
or
or
pop
sub
push
pop
or
inc
clc
shld
or
jne
xor
ja
dec
jne
mov
out
es
fadd
cmp
xchg
inc
(bad)
in
or
mov
xor
pop
add
jmp
add
push
or
fisubr
cs
paddw
or
inc
jne
add
jne
mov
lock
cmp
js
add
test
ja
cmp
bound
cmp
sbb
jne
push
test
pop
test
push
dec
adc
hlt
push
lods
mov
push
sbb
inc
jb
jne
in
mov
test
inc
dec
push
out
adc
adc
loopne
sub
cmc
mov
lahf
fild
cmp
or
xor
lods
stos
inc
sbb
imul
aas
cwde
xor
loope
or
es
stc
inc
cmp
fsubr
and
inc
test
sbb
test
xchg
loop
in
mov
mov
and
mov
dec
add
les
repz
push
xchg
cmp
mov
dec
fcomp
add
jle
or
ret
push
push
loope
xor
inc
daa
add
out
loopne
push
jmp
adc
mov
popa
adc
pop
push
out
push
and
cli
mov
inc
ins
fist
and
or
inc
xchg
rcl
sub
inc
lods
mov
add
punpckhwd
(bad)
stos
sub
int3
push
push
ret
jbe
(bad)
in
cmp
je
push
js
fbstp
sbb
or
dec
add
adc
adc
xor
rcl
clc
test
cdq
xchg
shl
arpl
cs
shr
in
cli
jg
adc
ja
push
enter
adc
pop
adc
jne
stc
lods
add
mov
jmp
shl
mov
lock
sub
cld
sbb
dec
adc
dec
imul
mov
ins
add
add
and
add
xor
jg
test
push
and
test
loopne
xchg
cmp
adc
retf
mov
inc
ror
sub
dec
jne
aad
cmp
jg
xor
mov
push
push
data16
sti
rol
sbb
lea
cdq
mov
into
add
fidiv
aam
cs
ins
mov
jge
dec
sub
xor
fistp
pop
jg
call
cmp
je
jecxz
je
mov
call
or
adc
push
push
add
adc
nop
mov
nop
add
push
adc
fcom
(bad)
dec
in
dec
dec
adc
pop
sahf
imul
sub
mov
cld
sar
add
mov
mov
int
pop
outs
and
add
pop
(bad)
inc
or
mov
inc
loop
cmp
dec
lods
inc
or
xor
dec
push
and
xchg
cmp
loopne
scas
xor
mov
jnp
loope
daa
sub
loopne
mov
retf
push
push
jmp
mov
xor
mov
add
ja
rcr
cmp
outs
pop
add
lods
add
mov
pop
mov
add
ret
pop
or
push
jns
call
mov
repz
adc
iret
ret
or
cmp
(bad)
mov
sub
cdq
xor
das
fidivr
add
pop
and
dec
sbb
outs
stc
sub
push
sbb
fistp
sub
and
addr16
fadd
daa
ret
test
mov
lock
cmp
cmc
xchg
jmp
cmp
sub
test
mov
sbb
jo
and
sbb
test
test
push
inc
sbb
mov
or
cwde
sub
mov
cmc
or
push
test
into
dec
cmp
jne
sbb
add
adc
adc
adc
xlat
mov
fld
push
mov
push
or
mov
or
ja
pop
aaa
stos
inc
adc
test
or
push
inc
nop
sbb
sub
add
popf
push
dec
pop
push
adc
test
outs
sbb
adc
test
xor
adc
ja
add
dec
sub
cmp
and
cdq
xor
dec
xlat
inc
sub
cmp
sbb
xor
inc
jge
cs
push
xor
dec
shl
xor
cs
push
sub
push
push
and
push
test
and
jmp
or
fldcw
fcomp
js
xor
je
or
pop
je
mov
push
lods
lahf
lods
inc
ins
sbb
add
push
pop
test
pop
out
add
add
mov
jno
aaa
inc
js
cmp
outs
push
test
xchg
sub
cmp
pop
ret
pop
push
add
loope
or
jmp
lock
dec
sbb
add
(bad)
cmp
push
sbb
cli
mov
stos
stc
cmp
je
mov
push
aas
ins
scas
add
sub
push
das
push
cwde
loopne
dec
loope
add
leave
shl
push
test
cli
add
or
adc
add
jmp
pop
or
adc
xor
in
lds
shr
ins
push
adc
xor
ret
push
xor
xor
adc
rcr
stos
adc
(bad)
jmp
(bad)
inc
fimul
sbb
mov
inc
pop
mov
movs
jns
push
hlt
adc
xchg
push
call
jmp
xor
push
clc
xchg
add
pop
jo
repnz
xor
or
ins
xor
pop
test
dec
jle
ins
(bad)
je
push
xor
push
push
xchg
call
clc
xchg
and
xchg
push
movs
retf
mov
mov
push
sub
fsqrt
mov
jle
xchg
test
(bad)
cmp
movs
or
fist
adc
add
cmp
movsx
cmp
or
jne
mov
xor
and
inc
or
xor
dec
cmp
inc
sub
pop
xor
cmp
and
push
jns
sbb
rcl
cmp
push
add
jo
cmp
ins
sar
inc
mov
xor
push
pop
(bad)
test
pop
cmp
and
add
mov
loop
add
mov
mov
push
mov
mov
in
sub
or
push
inc
pop
or
std
(bad)
fisttp
ja
pop
push
fistp
inc
adc
fadd
js
fcomi
data16
push
inc
test
push
(bad)
mov
push
jns
inc
pop
add
cmp
or
dec
shl
sbb
adc
add
adc
mov
cmp
shl
jl
call
jmp
jp
std
mov
jno
add
imul
addr16
mov
sub
or
and
jg
mov
cmp
out
retf
or
mov
mov
mov
mov
in
or
push
sbb
mul
or
add
adc
outs
mov
cmp
push
mov
mov
inc
and
mov
sub
and
and
into
and
push
fistp
jge
mov
mov
mov
(bad)
sub
dec
push
mov
adc
push
add
adc
or
mov
dec
jne
imul
sbb
fild
loopne
cmp
dec
adc
push
push
mov
push
sub
inc
cmp
pop
clc
xor
inc
cmp
fidivr
bound
jmp
in
inc
retf
push
sub
sar
and
inc
loope
jmp
inc
je
inc
sbb
mov
push
mov
or
inc
sbb
inc
mov
sub
shl
dec
inc
shl
icebp
xchg
(bad)
fwait
inc
adc
inc
sbb
gs
ret
dec
or
pop
shr
shl
jle
inc
cmp
cmp
jbe
cmc
sub
add
xchg
data16
out
in
imul
dec
and
inc
iret
jp
out
out
or
sbb
push
cmp
mov
or
fs
in
dec
add
(bad)
fist
test
dec
aad
addr16
jmp
adc
sub
sbb
test
xor
ret
dec
push
adc
add
retf
mov
xor
jge
cmp
data16
push
push
ds
jo
or
push
xlat
xchg
pop
or
dec
adc
retf
xchg
sti
ja
jmp
mov
enter
jecxz
cmps
push
push
pop
shl
fistp
or
or
sub
cmc
pop
pop
ror
push
or
mov
or
shr
or
add
daa
cmps
cmp
and
mov
pusha
rcr
jle
adc
push
pop
leave
jne
cmp
push
add
or
adc
add
xchg
xchg
cmc
xchg
adc
popa
mov
mov
ror
add
mov
mov
sbb
push
(bad)
jo
cmovb
push
mov
imul
push
add
js
mov
(bad)
mov
lods
add
pop
cmp
inc
and
xchg
test
or
push
adc
es
jmp
(bad)
pop
jg
add
mov
push
mov
sbb
adc
enter
sahf
xor
rol
jp
push
fldenv
xchg
cmp
pop
outs
pusha
and
inc
outs
lea
cmp
sbb
mov
cmp
data16
or
mov
mov
sti
pusha
ret
pop
js
popa
(bad)
fwait
cmp
cmc
call
and
fisttp
in
push
dec
shl
fsubr
aam
jmp
lea
repnz
femms
push
lock
or
ret
xor
dec
cmp
and
cwde
xchg
xlat
xor
ins
add
dec
mov
inc
push
mov
mov
test
add
fimul
(bad)
inc
call
jl
je
gs
adc
mov
test
fidiv
inc
mov
push
(bad)
in
repnz
mov
push
shr
ror
movs
mov
out
jl
push
imul
int
adc
retf
push
mov
mov
xor
sahf
inc
pop
jmp
rcr
xchg
(bad)
xchg
inc
jae
mov
xchg
xchg
adc
sbb
sti
mov
sub
push
dec
icebp
adc
cmp
add
out
mov
cmps
and
add
fwait
cmps
imul
dec
shr
inc
xor
mov
cmp
inc
fdiv
add
push
pop
mov
dec
outs
push
cmp
push
lods
je
mov
ror
test
aam
add
pusha
arpl
nop
and
shl
bound
into
cmp
(bad)
mov
and
int
cmp
sbb
dec
adc
nop
test
test
push
mov
adc
push
push
popa
mov
cs
mov
adc
aaa
xor
add
add
(bad)
sub
push
mov
iret
jbe
cmp
sbb
mov
pusha
imul
sub
and
or
push
fadd
add
shl
mov
ret
idiv
sbb
loop
and
jmp
or
shl
je
xor
lea
mov
push
push
fsubp
ins
hlt
adc
add
inc
and
xchg
movhlps
push
adc
sbb
retf
popf
inc
push
into
adc
dec
lods
mov
push
cwde
push
add
dec
call
push
mov
bound
xor
push
inc
loop
fcomp
push
and
dec
push
pop
adc
and
sub
mov
imul
lahf
push
sar
shl
xor
fstp
rcr
sub
jg
in
jmp
das
cmp
jae
pop
mov
jle
and
lea
push
xor
pop
fs
push
into
clc
mov
ror
jb
add
cwde
mov
dec
sbb
ss
loope
enter
int
mov
sub
and
and
int
lahf
mov
or
or
mov
add
icebp
cmp
or
add
(bad)
jle
mov
sub
sbb
(bad)
or
(bad)
fmul
(bad)
adc
cmp
inc
arpl
clc
je
pop
ins
lods
xor
sbb
jns
ret
(bad)
sar
ret
lock
sub
jb
enter
ds
sti
leave
adc
xchg
sub
or
mov
jp
add
or
iret
or
add
push
mov
xor
jae
and
push
inc
xor
xchg
stos
rcl
jbe
sbb
neg
xchg
sbb
pop
or
iret
push
pop
add
and
jmp
enter
fwait
inc
and
and
(bad)
adc
add
xor
adc
loopne
sub
bound
xchg
or
scas
push
aam
rcr
adc
(bad)
jne
dec
les
pop
dec
mov
mov
sub
je
cwde
(bad)
cmp
inc
pop
xor
adc
jno
int3
jbe
cmp
push
push
inc
mov
test
push
and
(bad)
xor
dec
sahf
loop
jne
push
fmul
das
ins
in
mov
and
rcl
rol
xchg
xchg
mov
adc
xor
add
and
and
ret
mov
imul
push
pop
popa
popa
sbb
adc
sbb
mov
mov
jo
mov
outs
fstp
pop
or
clc
mov
jbe
inc
add
add
mov
mov
and
sub
or
push
sbb
add
push
add
push
mov
iret
fbstp
inc
sub
or
std
call
sub
ret
mov
xor
loopne
rcr
ret
push
adc
jmp
mov
xchg
add
sar
nop
xor
xor
ins
xchg
jmp
dec
push
push
ret
jl
pop
pop
ret
sbb
rcr
shl
xchg
mov
mov
cmp
push
pop
dec
cmc
shl
cmp
pop
neg
jae
push
fucomip
ja
ss
je
cmp
loopne
add
dec
addr16
sbb
mov
sub
and
add
fimul
xchg
icebp
or
loopne
scas
push
ins
mov
jae
ret
jp
jge
lea
mov
sbb
adc
popa
(bad)
adc
and
inc
mov
mov
pop
pop
mov
dec
xor
or
add
lock
cwde
mov
dec
sbb
inc
xchg
(bad)
or
dec
adc
push
push
cmp
jmp
and
xchg
arpl
xchg
push
or
sbb
jno
es
dec
and
ror
cdq
push
jp
add
xor
cmp
pop
pop
sbb
arpl
xchg
add
pusha
and
push
cmp
add
cdq
add
or
dec
adc
cld
call
add
mov
cmp
mov
add
add
addr16
cmp
sub
shl
push
mov
push
xor
push
in
(bad)
jg
add
mov
and
cmp
je
scas
frstor
out
nop
ror
scas
jne
(bad)
ins
sbb
lods
jae
xor
ror
dec
lods
adc
dec
(bad)
sbb
fild
sti
push
in
cmp
mov
xor
mov
je
jmp
adc
or
(bad)
aad
loopne
and
movs
mov
pop
ror
fcomp
inc
or
std
call
rol
mov
test
jbe
ja
loope
mov
(bad)
int
retf
mov
xor
or
cmp
pop
push
push
cmp
aam
cmp
xchg
lock
das
jne
cwde
push
jmp
inc
pusha
xor
sbb
in
adc
cvttps2pi
adc
je
pop
fadd
call
cmp
mov
push
push
std
dec
es
adc
or
pop
call
(bad)
test
into
dec
dec
pop
jecxz
jp
or
test
fisub
and
call
bound
out
xor
out
add
sbb
or
sub
inc
adc
ret
add
jle
push
cld
call
mov
mov
mov
add
add
popa
mov
xor
dec
or
or
cmp
pusha
lods
(bad)
jbe
cmp
je
xchg
sub
or
mov
jnp
mov
jle
push
mov
scas
inc
cmp
add
sub
jae
ins
pop
jg
cmp
je
mov
mov
xor
add
pop
cmps
add
mov
jbe
rol
jne
ins
jle
or
dec
add
jae
add
jg
mov
sub
lods
sahf
arpl
jae
mov
ds
mov
fwait
call
loop
cli
mov
aad
icebp
xor
cli
or
inc
out
pop
push
pop
pushf
adc
mov
push
xlat
(bad)
std
cmc
inc
cli
cmc
out
pop
push
je
cmp
or
sub
or
in
dec
or
cmp
or
sbb
adc
daa
mov
mov
rol
pusha
sbb
sbb
jmp
dec
ss
push
mov
ret
add
sub
inc
add
push
xor
fistp
pusha
or
lea
retf
ficomp
lea
jne
test
and
xor
add
cs
xchg
add
dec
inc
adc
mov
bound
fcomp
mov
movs
xchg
pop
add
or
lea
push
and
sbb
iret
push
push
push
dec
jmp
shl
sbb
add
or
xor
or
mov
jo
sahf
lods
mov
pusha
das
in
pop
sub
push
push
push
pop
and
jae
pop
xor
sub
enter
or
cs
pop
ins
push
pusha
inc
loopne
dec
mov
js
sub
or
dec
mov
mov
test
inc
push
pop
inc
push
push
je
add
lds
jmp
push
push
inc
cdq
add
test
sbb
aam
out
mov
jb
cs
in
mov
or
or
push
lea
inc
push
push
mov
mov
inc
je
pop
add
cmps
xor
or
mov
add
cmps
fisub
(bad)
fisubr
inc
cmp
cmp
ret
and
mov
cmp
mov
aad
sub
xor
xchg
ror
push
call
scas
push
inc
mov
das
cmp
jl
(bad)
cmps
adc
lahf
push
push
push
push
xor
jo
jb
fisub
dec
adc
fmul
stc
cmp
adc
(bad)
mov
cmp
sbb
lea
dec
loop
data16
cmp
outs
xor
mov
cmp
inc
inc
mov
add
cmp
test
pop
dec
jmp
sub
xor
dec
push
dec
inc
test
mov
jne
in
sbb
shr
sar
(bad)
push
bound
push
push
aas
out
jle
aas
nop
mov
dec
add
add
add
inc
sbb
dec
jnp
add
push
pop
mov
arpl
icebp
mov
sbb
and
jmp
mov
mov
adc
adc
inc
das
jne
loopne
rcr
dec
nop
pop
nop
fst
bound
lods
out
dec
and
mov
in
push
les
(bad)
(bad)
es
imul
adc
ret
ret
(bad)
and
adc
sahf
(bad)
push
dec
add
jg
call
ss
inc
cmp
loope
rcl
mov
mov
rol
mov
mov
mov
add
ins
or
or
mov
ss
xchg
sahf
or
call
inc
sbb
js
sub
pop
sbb
mov
lahf
add
mov
add
bnd
mov
es
or
adc
push
or
call
sub
or
adc
sub
sbb
push
push
fisttp
cmp
mov
xor
push
icebp
inc
popf
pop
inc
push
cmps
(bad)
jge
dec
push
or
pop
add
into
(bad)
or
fist
mov
adc
(bad)
or
mov
popa
and
push
adc
lods
and
or
aad
and
cli
sbb
inc
xchg
mov
adc
sbb
inc
lods
pop
jp
mov
push
dec
(bad)
and
jge
sub
cmps
sbb
cdq
movs
imul
add
imul
mov
adc
rol
clc
fisubr
add
xor
test
movs
jbe
mov
ss
push
nop
adc
push
or
jl
clc
dec
dec
jne
push
addr16
jmp
aas
dec
ins
jnp
sub
cmp
lea
sahf
ret
sub
cld
add
sub
add
cli
adc
and
leave
sti
popf
rol
(bad)
ss
shl
jl
mov
sbb
adc
cmp
sahf
in
push
inc
fstp
test
sub
ss
lea
pusha
sub
das
sbb
jle
popa
push
fmul
and
pop
or
ss
mov
add
pop
or
jnp
or
mov
pop
sbb
je
je
jo
adc
(bad)
jp
or
adc
shr
xor
push
sub
pop
ins
retf
xor
sbb
test
or
adc
fistp
sbb
or
in
or
xchg
and
and
out
ffree
in
sub
sar
adc
ffree
pop
(bad)
mov
dec
mov
jmp
push
jne
out
icebp
adc
adc
sbb
cmp
cmp
repz
pop
ret
aas
enter
mov
add
cmc
js
inc
cmp
xchg
aad
(bad)
cmps
in
mov
jp
pop
popf
stos
scas
mov
pop
sub
adc
sub
stos
cmps
fild
ins
dec
push
inc
fstp
dec
push
outs
push
mov
cmps
fild
xor
fst
jmp
iret
dec
fist
fild
sbb
leave
enter
or
add
sub
push
dec
arpl
add
dec
out
outs
gs
fidivr
(bad)
in
lds
pusha
cli
push
lods
setle
dec
sub
and
mov
lods
or
xor
cwde
add
push
xchg
repnz
mov
dec
mov
and
test
lods
xor
mov
repz
ror
cmps
shl
mov
inc
out
pop
xchg
sti
add
push
shl
and
jns
jae
xor
fdiv
sub
add
aaa
xchg
push
push
(bad)
cmp
push
dec
sub
daa
push
add
pusha
dec
rcl
cli
ror
jp
sub
pop
add
inc
cdq
push
imul
inc
xchg
stos
scas
xchg
jmp
sbb
inc
das
inc
adc
bound
dec
je
inc
cmps
mov
(bad)
push
adc
sub
shl
or
(bad)
add
fwait
clc
push
fwait
add
xor
push
adc
jg
jle
add
test
pop
or
jae
fadd
leave
pusha
sbb
xor
cmp
adc
or
adc
xor
nop
adc
test
jbe
dec
add
inc
cs
(bad)
adc
les
ror
dec
loopne
mov
lea
nop
or
out
cmp
push
mov
ss
xchg
jno
test
sbb
adc
push
mov
sbb
sub
je
pop
sub
sbb
movs
call
clc
sar
lahf
mov
jo
sbb
rcr
sbb
and
jmp
add
(bad)
les
add
cs
inc
push
xchg
or
dec
loope
clc
inc
and
cmps
cmps
or
nop
clc
les
mov
adc
mov
xchg
mov
push
inc
add
or
fisub
popa
adc
es
adc
push
xchg
and
mov
or
pop
js
xor
sub
movs
xchg
adc
inc
xchg
add
cs
mov
outs
jmp
sub
pop
shrd
xchg
rol
(bad)
and
jmp
and
add
sbb
adc
sbb
cmp
pushf
sti
inc
cmp
rol
or
adc
test
rep
sti
add
jno
into
add
nop
scas
imul
cmc
adc
mov
push
sbb
pop
jge
jne
pop
dec
cmp
es
xor
je
or
adc
dec
dec
xchg
xchg
mov
aad
adc
mov
push
fs
xor
cld
jle
call
push
pop
cmp
pop
imul
pusha
int3
sub
int3
cwde
nop
jmp
sub
mov
cmp
pushf
sbb
add
(bad)
pop
inc
and
arpl
add
fidiv
pusha
dec
sub
mov
adc
cmp
mov
shl
or
repz
add
daa
inc
mov
xchg
jmp
(bad)
hlt
dec
and
daa
push
mov
ss
ficomp
inc
cmp
cs
ror
xchg
rcl
dec
push
scas
cmps
mov
(bad)
jmp
inc
hlt
cmp
adc
inc
sub
inc
add
(bad)
repnz
add
ret
and
cmp
test
xor
mov
cdq
cmp
inc
loope
pop
call
mul
inc
ficom
retf
jmp
or
inc
fs
or
out
adc
adc
xlat
sbb
mov
cmp
pop
sbb
push
add
adc
or
pop
imul
cmp
inc
dec
cs
push
sub
pop
ja
fiadd
push
dec
stos
icebp
push
xchg
sbb
mov
hlt
test
and
and
ins
and
lods
sbb
leave
cs
push
or
dec
mov
and
fnstcw
or
dec
sbb
call
sar
jae
fdivr
or
ret
dec
daa
gs
pop
cmp
idiv
or
and
xor
lods
rcl
fsubr
or
jle
sub
lea
sahf
adc
xor
outs
aas
mov
push
mov
cli
imul
mov
xlat
or
loop
mov
or
inc
add
(bad)
cmp
mov
add
push
nop
add
or
je
jmp
test
pusha
push
repnz
push
cmp
or
enter
pop
das
cmps
jge
ret
mov
push
xor
push
mov
add
movs
addr16
mov
or
and
pop
adc
add
mov
mov
mov
scas
push
fdivr
adc
and
ret
es
jg
popa
out
push
xor
or
popf
test
push
call
std
jl
fisub
push
clc
pop
adc
loop
fcom
outs
add
out
jne
loope
mov
sbb
pushf
dec
adc
adc
(bad)
imul
movs
push
add
sub
ss
stos
mov
xchg
push
rcr
lods
sbb
mov
pop
mov
and
loopne
fs
push
jno
mov
sub
inc
jae
cs
mov
xbegin
mov
pop
push
adc
inc
mov
and
jo
inc
sbb
aad
xor
sbb
push
pop
mov
sub
dec
adc
enter
push
in
xor
pop
js
push
push
(bad)
or
pusha
ds
jmp
or
adc
lea
and
xor
cmp
int
push
mov
xor
push
call
or
sbb
dec
add
rcl
jl
daa
daa
or
into
stos
fld
leave
adc
pop
adc
cmp
xchg
jg
fdiv
dec
sbb
fcom
(bad)
cli
outs
xlat
test
outs
mov
call
aaa
xchg
xor
add
add
push
or
dec
test
push
jg
shl
bound
adc
js
nop
lea
shl
mov
(bad)
or
adc
aas
aam
and
adc
in
mov
dec
add
dec
mov
pop
add
pusha
or
aas
push
mov
push
pop
push
rcr
stos
mov
jg
and
push
and
jg
or
inc
sbb
adc
imul
mov
push
call
pop
sbb
out
nop
aaa
leave
sbb
or
je
sbb
ror
adc
push
(bad)
and
pop
mov
mov
(bad)
(bad)
push
test
jmp
adc
ins
mov
ret
pop
mov
sub
or
pop
or
add
loopne
je
inc
dec
aas
mov
test
add
sbb
pop
mov
out
sub
inc
push
adc
inc
daa
jmp
jns
ins
pop
cdq
mov
inc
scas
pop
mov
jmp
mov
dec
pop
ss
add
stos
mov
js
push
cmps
test
push
push
and
or
mov
lahf
mov
sub
pop
retf
aas
add
hlt
mov
push
je
add
pop
jl
(bad)
fld
jmp
inc
in
jge
or
cdq
imul
rcr
dec
inc
push
push
push
inc
mov
push
push
sbb
and
sub
or
das
push
into
(bad)
inc
shl
lock
adc
daa
sar
stc
xchg
shl
inc
call
lock
pop
fwait
adc
push
mov
popa
ins
test
adc
jle
aad
imul
pop
inc
or
sub
stos
icebp
jno
enter
mov
fmul
and
(bad)
push
xchg
out
daa
jns
ret
xor
repz
inc
pop
stos
xor
mov
inc
pop
sahf
pop
dec
and
dec
or
dec
imul
sbb
jg
push
shl
inc
lds
xchg
add
ret
repz
dec
mov
adc
pop
mov
jl
mov
sub
jb
cmp
les
mov
fs
inc
sbb
fild
mov
jg
sbb
cmp
mov
cmp
sbb
rcl
sbb
mov
sub
sbb
mov
ins
loope
sub
xchg
in
jecxz
jecxz
xchg
lea
aas
xor
inc
lea
and
(bad)
in
cmp
add
cvtdq2ps
add
sub
fdiv
push
push
xchg
add
xor
pusha
sbb
push
and
xchg
jb
and
cwde
and
mov
or
xor
cdq
add
or
test
inc
and
ret
push
push
adc
retf
xchg
push
xchg
push
xor
push
add
lock
adc
shufps
pop
ins
or
dec
mov
sub
jb
push
movs
enter
add
je
pop
sbb
pop
dec
enter
(bad)
fwait
adc
xchg
in
jl
mov
pushf
inc
push
add
ret
loopne
in
cdq
loope
mov
lock
shr
rcl
add
inc
and
adc
mov
mov
jns
and
cmp
or
call
pushf
test
push
ret
imul
and
push
pusha
dec
je
inc
cmp
or
or
jle
jle
mov
xor
mov
and
adc
push
sub
je
mov
jmp
dec
mov
fld
leave
dec
pop
add
scas
jb
xor
or
mov
dec
pop
inc
dec
xchg
push
mov
sub
test
push
dec
adc
xor
push
int3
add
sbb
jmp
not
mov
pop
inc
sbb
push
push
(bad)
sub
ins
xchg
mov
push
adc
lahf
iret
and
mov
aam
or
cwde
adc
frstor
lahf
and
adc
in
inc
in
out
adc
dec
(bad)
push
nop
or
hlt
add
sbb
or
or
xchg
jl
aas
inc
dec
or
xor
and
sbb
jnp
mov
mov
xor
mov
push
daa
push
add
fist
add
and
fadd
nop
fwait
add
add
and
rol
loop
add
mov
cmp
xchg
loop
shr
test
rcl
jmp
or
pusha
mov
das
leave
add
jno
xor
pop
leave
xchg
pop
xor
cs
pop
leave
xchg
sub
leave
sub
sub
pop
sub
es
pop
leave
xchg
and
(bad)
and
and
mov
push
daa
and
in
addr16
push
in
scas
in
sbb
ds
xchg
rol
pusha
xchg
push
xor
cs
inc
ret
pop
imul
scas
mov
push
and
pop
aad
(bad)
jecxz
mov
ror
push
pop
and
retf
push
test
dec
dec
add
dec
adc
or
push
rol
daa
daa
daa
daa
xchg
adc
cmp
imul
loopne
in
in
retf
push
movs
push
in
in
push
jb
repnz
mov
retf
in
jbe
js
(bad)
cmp
or
outs
cmps
jne
pop
sub
aas
les
cmp
imul
cmp
adc
imul
and
mov
popa
fldcw
sbb
push
lock
es
mov
lods
push
add
leave
lahf
adc
dec
lea
inc
xchg
add
push
sub
mov
xor
xor
sub
jl
sahf
adc
mov
or
ret
push
fnclex
push
cmc
mov
mov
cmp
dec
add
nop
leave
and
mov
xchg
ret
push
and
sub
or
outs
mov
lea
sbb
add
inc
and
and
in
nop
add
sbb
mov
add
shl
inc
add
ins
das
push
or
inc
xor
(bad)
pop
(bad)
enter
das
out
sub
in
je
push
jae
js
mov
imul
mov
dec
jmp
add
pop
sbb
std
push
xchg
inc
xor
adc
mov
daa
add
sbb
and
imul
es
je
add
or
sub
sti
jmp
inc
push
sub
dec
cmp
jle
push
push
xchg
push
or
sbb
and
jbe
cwde
bound
add
sub
push
gs
push
iret
loopne
push
sbb
add
pop
mov
push
test
dec
push
bound
inc
mov
inc
and
fs
lahf
cli
push
xor
mov
std
sub
rcl
cmp
adc
push
jmp
int
jg
jmp
sub
into
imul
cbw
int3
cdq
dec
add
mov
popa
mov
dec
sub
ins
test
(bad)
xor
push
push
mov
daa
test
jae
dec
or
fld
add
adc
xor
adc
jb
mov
pop
jg
adc
push
imul
xor
(bad)
js
sti
test
mov
fild
nop
sub
and
loopne
into
inc
fwait
call
mov
jle
add
push
test
clc
xchg
in
add
and
inc
imul
stc
xor
mov
sbb
adc
fs
fisttp
enter
fs
rcl
xor
in
cdq
popf
call
cmp
dec
cmps
and
mov
or
call
idiv
add
loopne
dec
inc
xor
jo
cmp
jo
push
push
xchg
sbb
jg
cmc
add
test
xchg
inc
and
ds
pusha
cmc
div
repnz
or
push
inc
xor
pop
ret
xor
test
jp
dec
push
jl
clc
jbe
repz
pop
ror
ror
or
imul
add
jae
add
add
xor
or
in
fsub
sar
jp
adc
inc
cmp
movs
xor
js
cmp
cmp
jge
or
jl
mov
jmp
pop
cmp
or
or
hlt
imul
and
jp
in
lods
sbb
push
pop
arpl
enter
inc
jg
fs
movs
popf
test
fsubr
dec
ja
pop
shl
cs
xor
leave
and
pop
and
or
xor
mov
xor
sbb
clc
mov
je
stos
pop
sub
add
or
aam
lock
mov
cmp
loope
cmps
es
mov
js
nop
jmp
test
bound
loop
cmp
mov
mov
mov
cmp
call
add
add
sti
pop
add
shr
adc
test
gs
adc
jle
test
or
adc
jle
pop
adc
pop
inc
pop
test
(bad)
cwde
add
push
pop
ror
fmul
add
xor
xchg
sbb
pop
shr
lea
mov
daa
mov
sbb
mov
xchg
ins
cdq
push
or
cmp
or
add
add
or
mov
jnp
xor
jle
or
or
icebp
test
and
dec
adc
push
xor
dec
sbb
cmp
add
xchg
(bad)
pop
adc
mov
push
fnstenv
loopne
push
icebp
and
test
ret
sub
iret
lock
cmp
mov
jl
cmp
jg
push
fwait
adc
inc
mov
dec
mov
div
dec
mov
push
inc
mov
ja
enter
push
push
push
(bad)
mov
xor
mov
nop
cmps
push
cwde
and
ins
add
jo
daa
(bad)
push
push
sub
push
jmp
cwde
xor
lods
add
pop
mov
add
aam
arpl
(bad)
sbb
add
rcr
pop
icebp
jg
and
pop
xor
(bad)
push
jge
cld
jo
fldz
out
add
(bad)
sbb
loopne
mov
xor
arpl
adc
outs
sbb
outs
adc
or
pop
pop
icebp
adc
mov
or
push
jns
cmp
dec
add
adc
xor
or
retf
ret
cmp
mov
mov
adc
vcmpps
push
into
std
jb
mov
push
ret
mov
popa
xor
mov
in
push
and
push
pop
push
jno
jecxz
popa
adc
dec
adc
or
xchg
cmps
imul
xchg
cmp
mov
pop
(bad)
pop
jmp
aad
dec
mov
jl
cmp
cli
jle
mov
adc
push
or
mov
jae
jle
sub
jo
jecxz
jge
pop
jl
or
push
test
loope
push
add
cwde
cmps
adc
push
add
dec
test
(bad)
adc
test
or
sbb
and
mov
cmps
pop
mov
and
sub
cmps
imul
js
call
inc
call
or
add
data16
xor
jbe
pushfw
push
pop
ret
shr
pop
pop
inc
sub
adc
and
add
test
sub
add
sub
pop
inc
pop
jle
sbb
ror
mov
fst
sub
or
or
xor
cmp
sub
imul
cld
dec
stos
mov
inc
xor
lods
mov
adc
jmp
dec
call
sub
add
je
add
in
inc
dec
dec
adc
shr
lds
pop
add
bound
inc
dec
adc
lea
xor
mov
push
jno
dec
pop
sbb
inc
sub
pop
cs
shl
ins
test
add
adc
das
xchg
add
cmp
jne
test
and
mov
push
mov
je
das
pop
inc
cmp
mov
call
imul
push
sahf
cmp
cmp
jne
xchg
add
enter
xchg
inc
test
cmp
outs
pop
add
add
mov
sub
das
sbb
inc
or
pop
pop
add
cmp
cmp
sbb
push
sub
or
aas
test
push
sbb
add
outs
xor
cmp
add
test
jns
cs
and
mov
test
dec
mov
in
mov
xor
and
(bad)
fdecstp
inc
adc
fwait
pushf
ds
aas
call
and
out
mov
cdq
mov
add
test
sahf
lahf
cmps
mov
iret
jg
dec
aas
adc
lea
ficom
or
jl
dec
mov
push
push
mov
and
and
test
sub
push
mov
mov
rcl
mov
pop
rcl
xchg
mov
sbb
mov
loope
movs
adc
add
cmp
or
inc
mov
rol
data16
and
fild
cmp
int
mov
(bad)
and
loop
data16
test
and
and
xchg
lahf
cmp
or
mov
adc
push
outs
jno
dec
push
or
adc
not
loope
adc
xor
pop
xchg
adc
and
movs
sti
dec
sub
and
inc
mov
xchg
and
call
outs
js
adc
fld
hlt
dec
add
pop
or
or
call
test
or
add
outs
jg
mov
fdivr
mov
retf
sub
jl
cmc
push
push
cld
(bad)
out
xchg
push
int3
jne
push
cmp
push
push
xor
add
das
sbb
je
cmps
or
sub
and
jle
mov
fwait
clc
sub
jnp
dec
pop
outs
pop
mov
fs
jne
xchg
mov
and
and
add
shr
inc
cld
cli
push
daa
test
je
test
ds
xchg
not
ds
push
scas
icebp
inc
push
push
jl
add
pusha
and
test
inc
inc
fbld
cmp
xor
imul
or
popa
sub
and
mov
sub
lock
inc
(bad)
sbb
fisttp
adc
ins
or
sar
das
and
add
mov
cmp
xchg
(bad)
push
lea
push
or
and
shl
or
mov
adc
sar
jo
jl
cmp
cmps
push
(bad)
or
dec
clc
pop
cmp
mul
pop
add
inc
and
add
clc
adc
ret
mov
pop
ret
jo
les
xchg
jb
pop
fiadd
mov
dec
int
pop
or
jmp
popa
fs
mov
mov
fwait
shl
sbb
adc
pop
fs
ds
imul
add
fadd
pop
xchg
or
fcmovne
call
adc
pop
popf
jmp
aas
add
dec
fild
retf
sar
arpl
adc
into
sub
mov
jns
adc
sub
mov
xor
inc
xor
xchg
jle
nop
sub
pop
aas
mov
xchg
and
imul
mov
inc
pop
xchg
fisub
sbb
outs
or
add
das
pop
add
xchg
cli
xor
push
and
mov
push
mov
aas
mov
add
sbb
out
pop
mov
mov
mov
and
cwde
aas
or
cmp
push
lea
add
xchg
push
jb
sbb
sub
test
add
push
imul
stos
or
cmps
pop
pop
sbb
jb
sbb
or
repnz
and
and
cmp
or
aas
adc
sbb
cmove
rcr
cmp
cmp
inc
and
enter
leave
jae
jl
sbb
or
adc
leave
and
adc
adc
dec
repnz
and
sbb
inc
mov
pop
loop
mov
ss
popa
es
pop
mov
rol
pop
cmp
imul
push
add
nop
icebp
push
jg
pop
push
gs
pop
popf
sbb
adc
lods
adc
xor
xchg
or
adc
clc
and
gs
adc
mov
fimul
or
xor
leave
jge
add
cmp
add
inc
push
bound
mov
lock
mov
mov
sbb
mov
sub
xchg
mov
jo
or
adc
and
dec
add
cmovbe
fs
adc
adc
fs
psrad
pop
xchg
lods
inc
test
mov
add
mov
arpl
pop
test
sub
jecxz
mov
nop
das
outs
push
rcl
cmp
dec
icebp
mov
loopne
inc
test
mov
xchg
adc
jmp
and
ret
out
lods
dec
ins
mov
pusha
lods
cmp
sbb
fcomp
mov
cdq
jl
or
mov
fwait
nop
inc
es
add
dec
les
dec
aas
mov
pushf
xchg
dec
add
(bad)
sahf
sbb
dec
pop
movs
sti
mov
push
pop
fcom
pop
push
lods
aad
lock
add
mov
daa
cwde
in
mov
shl
out
sbb
xchg
clc
push
or
push
push
sbb
cmp
ins
mov
sar
mov
loopne
rcl
mov
dec
jns
xor
ss
and
mul
sub
in
dec
mov
xor
cmps
push
loope
sbb
std
mov
jl
mov
mov
add
jge
push
je
mov
popa
mov
xchg
inc
push
jl
xor
rcr
add
jb
adc
or
or
pop
pusha
sub
lahf
jmp
inc
mov
inc
cwde
pop
adc
les
add
aas
add
xor
push
sub
mov
add
mov
clc
fs
sub
push
adc
(bad)
pop
jmp
cmp
das
je
dec
push
test
rcl
mov
mov
mov
push
lods
push
xchg
push
dec
push
rcr
mov
inc
loope
sbb
call
loope
aam
(bad)
ficomp
ret
je
inc
shl
ss
pop
xor
or
push
xchg
cmp
test
stc
cwde
xchg
neg
jns
sub
dec
test
cs
xlat
ret
adc
mov
sar
sub
push
pop
or
xchg
mov
outs
out
loopne
dec
mov
jne
cmp
add
cwde
rol
xchg
ret
push
or
nop
or
push
fld
jnp
mov
mov
mov
mov
mov
mov
in
aam
sbb
ror
js
xchg
nop
arpl
mov
add
inc
xor
dec
js
mov
je
movs
push
pop
xor
dec
sbb
add
sub
and
sub
pop
adc
and
dec
ror
push
push
inc
imul
dec
mov
aas
in
icebp
jo
push
xchg
sti
or
(bad)
xor
and
fiadd
or
lods
stc
inc
cmp
and
cdq
cmp
js
sbb
pusha
out
add
loopne
xor
out
inc
es
jge
push
xor
dec
clc
ins
ror
dec
adc
mov
dec
lea
push
lea
std
(bad)
popa
lea
push
sbb
int3
adc
cmp
and
loope
cmp
fisttp
cmp
scas
dec
gs
xchg
js
or
jo
adc
movs
fwait
add
adc
fcomp
pop
mov
mov
gs
fidivr
pop
mov
cmp
ss
and
imul
adc
xchg
dec
sahf
push
dec
imul
inc
cmp
pop
out
call
test
out
xor
test
imul
(bad)
cmps
gs
and
leave
int3
out
scas
mov
xor
xor
xor
push
sub
adc
mov
or
mov
mov
sbb
and
inc
inc
js
in
cmp
sbb
push
sbb
sub
popa
push
aaa
push
mov
test
xchg
stos
xchg
(bad)
mov
pop
fild
push
es
push
or
jbe
add
or
add
sti
adc
cmp
call
lock
inc
ds
add
inc
mov
mov
ins
push
and
adc
cmp
sub
push
jge
cmp
xchg
or
push
dec
sbb
add
mov
out
or
mov
lock
and
adc
and
pusha
sub
mov
sub
shr
test
dec
sub
and
push
daa
nop
gs
loope
lock
addr16
and
popa
mov
iret
jo
xchg
inc
add
mov
push
lea
xchg
dec
push
fwait
add
inc
push
cwde
gs
rol
sbb
cmp
and
lea
adc
add
sar
add
lahf
sub
scas
mov
jne
fidivr
and
fistp
test
clc
mov
cwde
int3
lock
push
fnstsw
call
or
ins
js
cmps
inc
cmp
pop
xor
int3
lahf
aam
loopne
xlat
push
fmul
xchg
sbb
adc
in
ja
test
stos
push
xor
sub
mov
pop
pop
outs
test
nop
mov
inc
ficom
push
es
popa
arpl
jnp
mov
and
and
inc
out
push
or
and
adc
add
in
inc
call
mov
push
mov
ret
ror
inc
mov
test
repz
cmps
bsf
push
outs
ret
data16
cdq
repz
push
adc
sub
addr16
lods
or
xor
push
push
repnz
dec
fwait
xchg
push
sub
push
push
arpl
push
push
cwde
xlat
mov
stos
sub
or
pop
lea
cwde
neg
nop
push
je
lds
lahf
lock
sbb
bound
cmp
scas
rol
inc
cmp
mov
xor
jb
mov
xor
inc
add
mov
(bad)
(bad)
in
sbb
xchg
push
sbb
mov
push
and
push
push
inc
sub
inc
rol
adc
stos
mov
cmps
xchg
sub
stos
sar
aam
cmp
sub
js
xor
mov
fnsave
inc
push
push
shl
popf
les
call
add
mov
cwde
mov
adc
cmp
loop
pop
cmp
pop
mov
inc
and
xor
push
cmp
je
leave
ret
sbb
ss
nop
loop
idiv
xlat
xchg
adc
xor
push
pop
cmp
push
ror
out
mov
arpl
mov
sbb
cld
jns
jbe
or
inc
jns
cmp
push
das
jecxz
call
jae
and
dec
xchg
push
js
call
inc
loope
jmp
and
add
fisttp
jo
xchg
xchg
cdq
xchg
mov
xor
and
dec
add
jnp
jbe
shr
adc
add
sbb
mov
add
jb
lds
add
mov
gs
ins
jge
push
jb
jecxz
gs
ja
adc
jle
enter
stc
adc
cmp
adc
lods
sti
sub
jns
or
or
push
sub
mov
xchg
test
dec
imul
aam
rcr
ins
ja
(bad)
jo
lahf
pop
sub
cmp
cmp
imul
in
inc
sub
or
dec
add
or
push
add
jp
(bad)
jp
xor
jne
int
lock
push
imul
sub
aas
xor
pushf
enter
in
pop
sub
add
mov
stc
jmp
jecxz
cmp
pmaxsw
aam
and
jecxz
fsubr
call
adc
enter
out
movs
mov
mov
push
cmp
(bad)
jmp
pop
mov
sub
lock
dec
ss
inc
sub
fstp
es
inc
xor
sbb
ud1
cmp
jge
cs
nop
jge
cmps
test
enter
and
dec
jl
lea
sbb
cmp
mov
rcr
xor
and
dec
xchg
push
repnz
adc
jle
jge
cmp
leave
xchg
aad
data16
mov
add
sub
jbe
shl
pop
js
retf
stos
test
bound
xchg
jnp
retf
mov
repz
lea
jnp
outs
loopne
fwait
jne
ror
mov
dec
xchg
gs
mov
push
shr
in
mov
jnp
push
push
lea
outs
mov
or
leave
cli
clc
xchg
push
or
sub
test
or
cmp
add
fnstsw
imul
test
xchg
xor
jl
cld
jns
ss
inc
rcl
je
test
mov
push
sbb
mov
and
xchg
cmp
not
je
pop
mov
pop
lock
pusha
loope
xor
retf
ror
iret
add
shr
in
(bad)
mov
ret
cmp
hlt
ror
aaa
fsubr
sbb
loope
pushf
push
sub
div
or
fs
push
sbb
fld
(bad)
or
mov
iret
add
inc
push
nop
sub
dec
sub
xchg
push
sbb
pop
cmp
or
inc
mov
ret
(bad)
add
push
sbb
mov
jne
push
xchg
int3
pop
dec
mov
mov
dec
jb
cdq
mov
jns
arpl
jne
adc
adc
cmp
scas
mov
popf
fwait
dec
in
fs
mov
repz
jl
mov
push
inc
add
mov
push
icebp
mov
dec
mov
push
xchg
xchg
or
stos
daa
or
ror
push
ja
xchg
js
xchg
mov
lods
and
popf
pop
call
sub
sar
rcr
pusha
xchg
lods
pop
mov
and
out
bound
cdq
xor
or
xor
enter
adc
jo
push
xchg
fwait
mov
xor
test
sbb
imul
fs
mov
xor
xor
and
dec
sbb
dec
xor
mov
jl
inc
mov
push
cmp
pop
xor
push
pop
xchg
cmp
ins
push
inc
cdq
jae
add
repnz
mov
sbb
xor
xchg
hlt
fs
cmps
and
aad
push
inc
mov
xchg
clc
test
jae
daa
lods
adc
je
mov
sub
sub
push
mov
or
std
inc
mov
dec
loop
pop
inc
rcl
push
imul
xor
xchg
in
pusha
test
inc
repnz
pop
adc
lea
or
pop
outs
dec
sub
or
scas
rcl
push
sub
sbb
pop
dec
call
inc
sub
imul
mov
add
mov
dec
cmp
pop
out
push
cmp
push
frstor
pop
mov
ret
(bad)
movs
mov
jmp
xchg
enter
daa
inc
dec
pop
mov
fcomp
push
sbb
xlat
cs
or
imul
pusha
xchg
cmp
out
and
stos
sbb
push
js
popa
add
pop
jno
push
loopne
pop
cmp
iret
dec
call
int3
add
and
cmp
or
pop
fist
pop
xchg
scas
sub
rcr
lock
push
sub
sub
sbb
or
jp
jp
sbb
repnz
xor
or
lods
push
jmp
add
outs
js
(bad)
push
aas
xchg
cmp
xor
add
add
ret
jmp
mov
(bad)
xchg
mov
adc
rcl
arpl
push
adc
or
leave
mov
sbb
shr
cmp
inc
push
test
pop
inc
(bad)
cmp
sub
inc
push
pop
jno
xchg
sub
inc
clc
dec
xor
mov
loope
cmp
jo
mov
aam
repz
js
and
ins
sub
je
sahf
adc
cmp
(bad)
popa
cmp
and
cs
ret
and
in
push
sub
shl
stos
rcr
inc
pop
ins
push
repnz
sbb
(bad)
jnp
ins
mov
punpckhwd
mov
ret
or
mov
push
push
jmp
push
test
dec
and
call
nop
sbb
or
and
add
add
sub
mov
in
add
(bad)
cli
xor
dec
mov
mov
fldenv
and
inc
add
cmp
push
loopne
cmp
imul
xchg
call
xor
and
dec
push
aaa
mov
pop
push
and
jnp
pop
or
adc
mov
ret
sbb
cmp
jg
cmp
dec
(bad)
and
push
add
movs
cmp
sbb
dec
xchg
sub
icebp
mov
pop
and
pop
imul
mov
xchg
cmp
pop
dec
cmp
inc
mov
adc
cmp
mov
test
ret
mov
add
mov
or
shr
mov
add
sbb
pop
shl
sbb
aaa
and
sbb
push
js
adc
dec
adc
ror
in
cmp
pop
dec
pop
sbb
dec
or
jne
cmp
outs
push
aam
push
sbb
cmp
push
and
add
adc
xchg
aas
jecxz
jnp
adc
lea
xchg
lds
out
out
ins
mov
mov
xchg
shr
icebp
xor
dec
mov
and
mov
je
mov
cmp
mov
and
ret
mov
(bad)
push
cwde
ret
sub
lea
js
mov
and
add
adc
test
mov
test
push
test
mov
push
mov
mov
mov
add
je
je
jmp
test
lea
push
adc
iret
sar
dec
ins
mov
push
call
sbb
cdq
retf
add
and
add
adc
jno
adc
jo
or
daa
add
ins
test
cmp
int3
(bad)
add
lods
push
mov
or
jl
sahf
push
sbb
inc
adc
fnstenv
add
movs
sbb
mov
fisttp
cmp
mov
sbb
ret
and
je
inc
es
loopne
mov
inc
sub
mov
xor
add
push
sbb
jmp
aaa
mov
dec
push
arpl
sbb
retf
xlat
cmpps
dec
add
sbb
test
add
rol
fild
sub
hlt
adc
popf
je
dec
bound
inc
jae
sub
dec
dec
jo
jl
or
shl
cmp
xchg
mov
sub
push
mov
jge
fwait
mov
jg
out
mov
or
add
adc
int3
neg
push
or
test
or
cmp
push
sti
les
jecxz
aam
das
push
push
call
cmc
push
jmp
jg
add
test
popf
cmp
or
bswap
dec
int3
out
enter
mov
std
and
cli
(bad)
mov
loop
fadd
btc
add
add
iret
adc
mov
xchg
jmp
stos
popf
mov
adc
or
xchg
add
mov
je
test
or
loop
add
add
mov
lahf
(bad)
jne
push
or
cmp
je
dec
adc
push
add
sub
xchg
ror
rcr
nop
lahf
push
push
mov
pop
xchg
mov
enter
jp
adc
sub
add
imul
(bad)
and
cdq
add
aas
mov
and
inc
fs
daa
pop
rol
mov
scas
add
call
nop
aad
mov
push
push
pop
xchg
inc
mov
mov
das
sub
jb
mov
xchg
mov
ins
and
fsin
pop
xchg
inc
sbb
scas
into
neg
push
push
lea
add
fist
mov
sub
dec
inc
je
add
fdivp
sub
mov
jmp
inc
dec
jl
retf
popf
dec
hlt
enter
dec
imul
clc
rol
test
and
mov
(bad)
cmp
adc
ins
mov
jmp
xchg
jmp
push
inc
enter
push
test
xchg
cmp
and
push
add
jl
cs
xchg
mov
cli
ret
push
mov
cmp
cmp
and
cmp
sub
mov
ret
jge
inc
inc
aad
sub
jmp
loope
dec
or
adc
fld
xchg
sbb
push
test
in
je
adc
es
sbb
imul
jecxz
fwait
aas
(bad)
cmp
cmps
push
cmp
or
mov
mov
data16
test
lea
adc
call
adc
clc
movs
rol
clc
test
stc
adc
jge
clc
or
int
fldcw
sbb
add
(bad)
and
push
and
out
inc
cli
inc
dec
xor
in
outs
ffree
inc
mov
mov
inc
lds
in
add
cdq
mov
sub
and
dec
jo
and
les
sar
enter
fist
inc
sub
call
or
xchg
inc
popf
ret
in
push
clc
jle
push
inc
fistp
jmp
or
xchg
inc
outs
imul
mov
popf
push
test
pop
add
pop
cmp
lock
cdq
ret
in
pop
js
add
rcr
les
and
jl
aam
test
adc
inc
or
dec
mov
dec
pop
pop
pusha
or
call
sub
jbe
inc
inc
mov
add
mov
inc
add
cmp
jne
jns
xor
scas
cmp
mov
dec
push
push
jne
mov
test
lea
mov
call
cli
dec
add
pop
and
jo
leave
mov
sahf
fist
mov
pop
je
ret
dec
shl
imul
pop
push
cmp
inc
mov
adc
inc
add
sbb
jne
mov
mov
push
clc
arpl
mov
mov
ret
ins
cmp
call
jno
bnd
sbb
test
sbb
iret
and
mov
add
adc
and
in
fsub
mov
scas
ret
scas
loop
pop
jmp
out
rol
jmp
ror
int
lea
les
movaps
hlt
or
addr16
dec
jns
or
add
repz
sub
mov
mov
pop
or
lahf
scas
loope
or
add
fcmovbe
pusha
loop
arpl
push
add
hlt
add
xchg
fcmovne
push
inc
sbb
in
xor
pop
xchg
dec
cmp
jl
pop
dec
mov
mov
test
mov
test
jmp
jge
adc
mov
dec
fsub
and
shl
mov
jb
pushf
or
je
sbb
popa
rol
xchg
retf
fstp
xor
push
jb
pop
add
sbb
sub
sbb
hlt
dec
mov
add
cmp
cmp
sbb
or
scas
jl
ret
mov
dec
inc
mov
cmp
aam
mov
and
ret
or
inc
js
pop
retf
jae
add
push
jmp
sub
xor
aaa
mov
retf
add
jecxz
pop
jmp
inc
sub
add
push
xchg
cmc
add
push
jmp
jns
mov
ret
push
sbb
push
outs
in
fidiv
pop
dec
mov
mov
iret
pop
imul
cmps
ret
cmp
push
pop
add
mov
sbb
or
and
mov
sub
les
loope
call
mov
add
sbb
pop
push
or
sbb
mov
adc
or
je
add
fwait
dec
adc
push
dec
jne
mov
jbe
pusha
or
mov
push
sbb
xchg
(bad)
aas
adc
pop
or
add
or
add
cwde
cmp
imul
and
cmp
mov
mov
mov
js
imul
inc
mov
jne
packssdw
das
mov
iret
popf
or
pop
lods
mov
ret
xchg
(bad)
imul
retf
mov
mov
push
jno
mov
push
push
pop
icebp
dec
arpl
and
jl
test
into
fist
xor
add
add
mov
xchg
sub
int3
lods
xor
push
les
jge
push
mov
jmp
fsub
ror
pop
rcr
loop
popa
js
test
(bad)
int3
cmc
ret
pop
pop
pop
test
mov
shl
ss
add
cmc
mov
add
pop
in
jp
jge
test
fwait
js
je
ins
ja
adc
(bad)
adc
push
icebp
xor
icebp
aam
xchg
xchg
and
sbb
add
inc
sbb
mov
adc
sbb
inc
or
jnp
push
lods
or
inc
(bad)
mov
je
or
and
pop
sub
or
mov
add
mov
(bad)
fisub
lock
xor
mov
iret
jo
cmp
loop
lea
and
outs
pusha
xor
out
adc
pushf
popa
add
imul
jge
jg
xchg
je
fist
jns
mov
push
jo
adc
movs
adc
fdiv
pop
jl
sub
retf
ffree
fdiv
je
and
dec
add
jb
xchg
and
or
mul
push
je
jl
popa
and
adc
and
and
mov
shl
jl
(bad)
retf
rcl
add
mov
(bad)
adc
jmp
out
rcr
ja
call
imul
mov
push
in
xchg
(bad)
nop
out
lds
ret
push
test
shl
lock
(bad)
bound
stos
dec
into
mov
adc
and
sub
push
je
sub
das
and
or
adc
push
test
les
push
jp
xchg
sbb
mov
inc
inc
dec
outs
and
push
jbe
xchg
dec
les
pusha
push
mov
xor
aad
pusha
aas
nop
push
mov
sbb
or
test
mov
or
fisub
jl
xor
ffree
dec
inc
add
or
je
inc
ins
(bad)
mov
mov
pop
test
jne
mov
repnz
sbb
test
dec
mov
cmp
add
adc
mov
enter
add
fld
bound
xchg
add
js
add
push
(bad)
rol
dec
ret
dec
mov
lock
mov
xor
iret
push
or
mov
sbb
sar
inc
inc
sbb
aaa
not
xlat
inc
les
retf
retf
jg
loopne
gs
mov
mov
adc
nop
mov
xor
add
js
mov
test
fwait
sub
ret
jnp
outs
push
clc
dec
xor
sti
xchg
pop
idiv
aaa
and
pop
cld
dec
imul
pushf
pop
cld
push
cmc
and
inc
mov
cmp
shl
push
ret
adc
in
or
cmp
push
push
stc
push
push
push
mov
or
sbb
and
pop
sbb
adc
push
push
inc
sbb
sub
and
loop
xor
or
inc
rol
add
sbb
jmp
push
inc
dec
xor
pop
sub
and
push
xor
je
adc
jg
lahf
add
shl
(bad)
sbb
dec
aam
outs
sub
sbb
push
add
stos
pop
je
and
test
test
mov
fwait
inc
pavgb
push
retf
retf
add
inc
push
add
jb
fstp
sub
les
aam
out
and
add
retf
push
jo
cli
xor
jne
push
out
(bad)
aaa
push
jns
add
jae
loope
push
adc
dec
in
les
jne
popa
xchg
cmps
repnz
dec
push
push
movs
cmps
sar
dec
lock
imul
inc
mov
imul
rcr
scas
in
mov
push
and
mov
and
shl
or
mov
mov
jb
hlt
add
sbb
jbe
jge
cmps
movs
inc
push
pop
stos
or
push
mov
and
add
push
xor
dec
sbb
adc
xor
(bad)
out
add
or
in
loope
pop
inc
mov
js
pop
sub
ror
adc
add
loopne
sbb
push
push
pop
pop
pop
leave
adc
push
out
and
(bad)
push
add
jns
adc
in
lock
repz
inc
xchg
out
std
pop
popa
or
out
arpl
adc
mov
jne
or
xchg
sbb
inc
sbb
ja
(bad)
ror
and
add
add
push
movs
sbb
xor
push
inc
add
add
sub
fmul
popa
iret
addr16
add
sar
cmp
and
pop
retf
push
fwait
mov
adc
lods
xchg
outs
push
add
shl
dec
push
call
push
jl
cmp
jl
cmp
sub
cmp
jl
jmp
jns
rol
pop
outs
(bad)
jb
add
dec
rcr
xor
xchg
loopne
cmp
leave
mov
xchg
mov
sbb
(bad)
fucomp
call
(bad)
out
sbb
loope
lahf
sbb
adc
jmp
int3
pop
sbb
add
shl
adc
push
sahf
xor
cmp
mov
and
add
jge
popa
push
mov
shl
ret
sbb
je
adc
je
or
int
int
je
sub
je
and
mov
int
je
and
jne
mov
rol
mov
and
mov
mov
out
je
cmp
or
sbb
add
push
xchg
ret
clc
push
mov
test
xchg
inc
inc
cmp
sar
sub
xor
dec
dec
xor
popa
add
xor
xchg
add
in
jmp
or
mov
inc
clc
mov
push
test
mov
add
fisttp
(bad)
ins
mov
ja
out
lods
movs
aaa
loop
pop
test
cmp
sbb
mov
add
jo
out
adc
add
or
xor
inc
arpl
sub
inc
(bad)
in
pop
pop
sub
(bad)
push
dec
xchg
test
inc
add
add
test
pop
sbb
out
and
mov
push
push
jmp
inc
cmp
jmp
cmp
outs
test
cli
jmp
inc
xchg
inc
add
ret
and
adc
adc
inc
and
or
imul
mov
fidivr
or
and
dec
scas
jne
cmp
sub
cmp
dec
loopne
push
dec
push
push
cmp
and
jne
ds
pop
xchg
mov
(bad)
mov
inc
ins
loopne
jmp
mov
jmp
jns
inc
loopne
fisubr
add
push
mov
js
pop
or
or
or
xor
popa
or
lock
sbb
aas
dec
xchg
cs
popa
push
inc
adc
sub
in
push
add
repz
scas
cmp
push
daa
adc
inc
inc
xchg
fstp
cwde
pop
pop
inc
test
adc
pop
sbb
fmul
xor
or
and
sbb
and
and
adc
cdq
ret
movs
jmp
mov
adc
jecxz
daa
jmp
inc
dec
ret
mov
or
imul
jmp
aam
add
sar
aam
lds
adc
inc
jge
mov
push
int
fmul
fnsave
jge
cmp
mov
jge
out
sub
dec
loop
add
pop
cmp
mov
jl
cmp
dec
les
adc
push
je
(bad)
mov
dec
test
adc
ss
into
scas
sbb
xor
mov
or
xchg
pusha
pop
adc
sub
mov
push
cmc
push
cmps
add
push
sub
push
pop
sbb
add
and
jmp
out
aas
call
push
mov
jecxz
sub
test
xor
arpl
jno
sbb
pop
das
mov
jge
enter
loope
add
jmp
mov
mov
jmp
repz
pusha
sub
mov
loop
test
cwde
or
xchg
pushf
add
xor
add
push
push
adc
(bad)
out
out
push
pusha
imul
sub
push
mov
pop
pextrw
out
add
pop
sahf
mov
or
mov
push
jo
sub
xor
xor
inc
sbb
cs
sub
add
push
dec
xchg
dec
loopne
and
sub
dec
pop
imul
rol
mov
or
jns
aaa
mov
lods
aas
adc
pop
test
dec
dec
push
arpl
cli
fimul
jb
je
lods
adc
mov
jno
jno
jge
lea
sub
adc
popa
or
in
sub
push
mov
cmps
jns
adc
ror
jge
ret
or
xchg
pop
rcr
ret
jge
add
gs
pop
call
lea
sbb
dec
push
jg
push
cs
jbe
xor
push
test
rol
cmp
sub
sahf
clc
out
ficomp
jge
add
xor
pop
push
imul
scas
push
or
leave
adc
mov
jae
lea
jb
cmp
push
adc
in
cmp
pop
cs
add
push
push
xchg
mov
push
mov
in
sbb
and
xchg
and
sbb
dec
mov
cmps
push
dec
sbb
enter
js
and
add
pop
lea
sub
les
cmp
dec
popa
pop
sub
push
sbb
dec
push
add
pop
cmc
add
mov
and
(bad)
cs
addr16
add
or
mov
jp
add
push
jl
sbb
fwait
sbb
mov
jge
hlt
inc
add
cmp
movs
sub
add
push
pop
dec
(bad)
mov
push
xor
nop
test
push
out
loope
lahf
adc
sbb
add
shl
sbb
adc
sub
or
imul
pop
pop
cmc
jne
sub
dec
fiadd
in
lods
sbb
xor
add
mov
add
adc
ret
or
mov
jne
add
mov
push
jecxz
jne
sbb
fwait
pop
test
push
and
fnsave
addr16
xchg
push
inc
pop
or
inc
hlt
dec
sbb
jno
mov
push
loop
mov
fwait
jmp
xchg
(bad)
es
aad
mov
pusha
add
xchg
cmp
cmp
in
test
cmp
(bad)
(bad)
pop
ror
push
xchg
jno
adc
jne
xor
mov
rcl
es
jmp
cs
fcom
xor
iret
adc
cmp
cmp
jmp
add
not
ret
into
or
adc
cld
mov
jmp
mov
ins
cmp
data16
sbb
pop
xor
sub
jb
pop
xor
and
pinsrw
leave
mov
out
and
cmp
and
xor
sbb
sbb
lahf
push
and
mov
pop
fcom
adc
xor
adc
or
sbb
repnz
mov
cmp
clc
sti
lock
cmp
xchg
(bad)
arpl
xchg
fidiv
mov
jp
sbb
or
rcr
pop
jg
push
add
and
xlat
mov
or
retf
jmp
jmp
or
mov
xor
push
in
std
ss
pop
or
mov
push
jle
xor
psrad
mov
push
jp
les
mov
xchg
xor
sbb
cmp
dec
sar
and
aaa
das
sbb
aas
or
add
jmp
pop
or
push
mov
add
loopne
xlat
inc
cmp
cwde
pop
movs
adc
dec
xor
push
test
pusha
xchg
popa
je
mov
xchg
lea
sub
ret
add
dec
mov
test
jecxz
xchg
ja
lds
fcom
nop
mov
dec
xlat
in
in
imul
es
inc
sub
or
iret
jnp
and
cmp
or
mov
push
push
cdq
mov
lock
push
add
jp
in
xchg
jmp
arpl
or
or
sub
in
clts
pop
js
jl
mov
(bad)
jo
imul
xchg
xor
pop
pop
dec
je
push
push
jge
push
ror
fist
in
or
and
inc
cwde
movs
adc
test
sbb
mov
enter
cmp
sub
inc
jmp
add
xchg
push
xchg
enter
loopne
je
xchg
repz
push
and
cmp
rcl
cmp
mov
or
call
dec
adc
sub
or
inc
arpl
push
addr16
(bad)
and
add
jno
adc
(bad)
dec
fcmovnb
fidiv
pop
cli
movs
xchg
test
lea
mov
push
cmp
ret
and
mov
push
pop
movs
or
cld
jne
cmp
jbe
add
jmp
push
lahf
mov
adc
les
lea
inc
es
push
add
sbb
push
push
adc
push
lds
mov
int
mov
mov
fucomip
clc
push
nop
mov
sti
fwait
sbb
test
ret
call
cmp
push
fs
(bad)
pop
xor
or
call
cmp
mov
pop
movs
retf
pusha
dec
pop
(bad)
imul
mov
push
add
push
ret
add
or
je
push
stos
and
dec
mov
push
dec
cmp
mov
dec
ja
loopne
dec
stos
pop
cwde
pop
or
mov
push
and
or
pop
ret
mov
push
jo
scas
xor
pushf
sbb
sahf
sub
fnstcw
push
jge
das
sbb
mov
and
mov
pop
in
mov
fild
lahf
xchg
mov
loop
jb
and
mov
adc
sbb
push
test
pop
and
or
jecxz
or
mov
(bad)
scas
xor
(bad)
sub
jne
outs
jmp
movs
or
inc
and
and
mov
icebp
add
pop
imul
inc
(bad)
and
je
mov
pop
add
and
sbb
pop
adc
sbb
nop
pop
sub
movs
sbb
mov
sahf
sbb
pusha
lahf
jmp
or
pop
pop
jne
mov
sbb
je
mov
add
dec
imul
xor
sbb
repnz
les
xor
jns
outs
xchg
jl
inc
push
pop
dec
dec
fcmove
cmp
push
push
push
add
cld
xor
(bad)
adc
mov
and
iret
fisub
mov
pop
movs
aam
mov
adc
in
rcl
mov
jg
inc
bound
jno
jo
sbb
mov
inc
jno
and
clc
adc
push
push
xor
fcmovne
push
pop
mov
sub
outs
mov
adc
or
xor
push
mov
mov
(bad)
push
xchg
pop
enter
sub
xor
movs
sub
mov
pop
clc
mov
push
push
push
cmp
push
repnz
push
xchg
mov
add
sub
loope
xchg
call
fldenv
push
sahf
mov
xchg
jg
addr16
inc
imul
lock
jne
test
das
xchg
(bad)
outs
imul
loopne
lock
inc
gs
add
loopne
xor
xchg
xchg
fist
xor
add
mov
test
sub
dec
dec
cmp
sub
xchg
addr16
or
nop
or
xlat
inc
adc
mov
scas
scas
mov
call
ins
mov
daa
aaa
pop
adc
jle
cmp
ror
clc
jge
jbe
push
cld
shr
scas
sbb
rcl
dec
cdq
add
sbb
fmul
and
inc
pusha
add
daa
jae
imul
dec
movs
or
outs
sbb
xchg
out
push
(bad)
(bad)
push
push
stc
sub
xor
movs
cmp
push
dec
loopne
mov
sbb
pop
mov
dec
add
dec
cmp
aas
and
stos
push
mov
(bad)
or
push
inc
cmp
xchg
push
push
mov
jmp
mov
cmps
les
mov
or
in
pop
lock
mov
add
inc
ss
add
outs
rcr
lea
push
and
test
sub
ins
sub
int
cmp
cli
add
je
sbb
xchg
cdq
ror
adc
lock
pop
push
inc
les
rol
adc
xchg
xchg
std
stos
adc
nop
or
dec
sbb
mov
ins
mov
add
and
pop
outs
aad
jns
adc
and
xor
mov
adc
call
mov
sbb
mov
cmps
add
ss
and
sbb
and
inc
sar
sbb
inc
aam
rep
sbb
imul
mov
jo
push
add
pusha
or
movs
pop
mov
repz
xchg
rcl
mov
shl
mov
into
xchg
adc
imul
retf
jl
cmps
pop
sbb
cmp
dec
push
push
mov
pop
inc
lods
or
je
or
je
jae
je
add
je
popf
pop
popa
jge
or
jmp
and
adc
or
cmp
lsl
jmp
cmp
sbb
movs
mov
dec
mov
add
hlt
imul
sbb
sub
add
pop
nop
add
mov
xor
inc
cmps
xchg
or
inc
pop
loope
leave
jnp
xor
sbb
sub
loopne
jg
mov
push
or
ror
stos
add
and
xor
icebp
cmps
fnstcw
adc
dec
xchg
lds
and
add
lea
retf
jno
cmp
mov
sbb
adc
adc
pusha
fdiv
cmp
dec
push
sbb
fstp
into
add
in
int
sbb
lock
pop
fucom
pop
ror
(bad)
sub
sub
adc
int3
data16
mov
addr16
(bad)
rcl
sbb
push
imul
pop
test
push
lea
in
jl
retf
outs
movs
add
push
add
jbe
call
adc
sub
inc
inc
arpl
pop
dec
jmp
bnd
cmc
adc
and
std
cmp
or
pop
push
pop
xor
dec
das
fdiv
mov
adc
push
xor
or
add
retf
push
test
jl
push
in
push
cmp
add
adc
daa
mov
xor
repnz
jge
imul
sbb
push
sbb
jo
push
or
fstp
or
daa
pushf
dec
repnz
loop
inc
mov
inc
adc
and
mov
push
push
in
push
shl
mov
outs
test
sub
(bad)
push
mov
jo
inc
js
dec
sbb
or
jns
ret
(bad)
jp
jle
int
inc
ret
test
into
adc
lahf
push
pop
sti
push
ror
das
push
movs
in
loopne
and
aas
mov
shl
pusha
ins
es
mov
jae
nop
cli
pop
sub
ins
add
sub
retf
cld
xor
test
lahf
addr16
hlt
mov
loopne
or
jmp
push
sbb
pop
and
pop
cmps
jp
inc
push
outs
push
mov
fimul
cmp
in
jae
mov
and
mov
inc
jno
xchg
xor
les
or
mov
rol
inc
enter
sbb
and
pop
test
ror
cmps
mov
shl
mov
jge
neg
adc
or
shl
jl
mov
mov
(bad)
ss
pop
add
sub
inc
push
mov
bnd
imul
adc
enter
add
mov
pop
clc
or
iret
enter
or
enter
or
or
dec
or
iret
or
sub
push
xchg
es
fistp
div
or
or
xor
add
cmp
scas
adc
or
test
adc
dec
push
and
mov
(bad)
aam
and
dec
je
adc
push
clc
jge
add
jmp
dec
mov
inc
adc
ret
jg
sbb
hlt
test
sub
mov
sbb
add
or
pusha
xor
ja
jb
stc
sbb
std
int3
clc
sbb
cmc
add
sahf
pusha
adc
or
xchg
adc
in
dec
dec
pop
test
mov
in
pop
outs
rcr
(bad)
inc
dec
jg
in
hlt
push
fbld
imul
add
idiv
dec
xor
sbb
push
add
adc
push
lock
shl
and
or
pop
in
(bad)
lea
popa
xchg
sub
mov
stc
or
mov
adc
mov
rol
hlt
mov
add
jl
adc
cmp
xor
xchg
sub
add
pop
rol
mov
loope
cmp
mov
inc
out
push
(bad)
mov
data16
jne
inc
sbb
inc
mov
sub
xor
add
(bad)
mov
adc
cmp
fisttp
sar
inc
add
pop
out
sbb
adc
sar
push
movs
add
jp
shr
adc
fld
stc
mov
xchg
pop
pop
cmp
rcl
dec
int
imul
shl
outs
dec
mov
arpl
jecxz
sub
clc
dec
cmp
sbb
mov
mov
fild
dec
jne
mov
inc
add
cli
adc
ja
je
test
mov
mov
loopne
adc
mov
sbb
mov
loope
test
mov
fild
adc
cdq
cmp
scas
and
push
pop
push
mov
add
into
(bad)
cmp
clc
fsub
or
cli
mov
lods
jp
push
cld
jne
test
cmp
xor
cmp
push
cmp
adc
xor
adc
retf
pop
sti
mov
push
inc
add
aam
cld
jne
sbb
mov
sub
inc
fsub
xor
icebp
inc
in
sbb
mov
jne
mov
inc
jge
ss
(bad)
mov
push
fs
sbb
or
inc
(bad)
lahf
fcmovb
cmp
mov
frstor
mov
push
dec
popf
loopne
push
fsub
test
cmp
in
mov
test
pop
and
sahf
adc
adc
or
push
sbb
sbb
jl
popf
xor
push
test
ss
pop
adc
iret
add
in
rcl
mov
and
and
or
add
dec
dec
bswap
or
aam
imul
and
in
add
inc
adc
sub
les
xor
mov
push
push
cwde
pop
add
call
xchg
and
sbb
cmp
jne
movs
lds
mov
lea
mov
or
dec
sbb
push
shl
nop
sbb
push
or
(bad)
call
leave
out
dec
pop
push
pop
pop
mov
cmp
fdiv
xor
sub
fisttp
ror
or
xchg
shr
and
add
mov
ret
lahf
sbb
mov
popf
gs
rcr
mov
or
adc
inc
add
or
sub
mov
ins
jecxz
mov
ins
dec
mov
mov
rep
xor
cmp
or
or
mov
mov
mov
adc
xor
dec
repnz
pop
sub
neg
push
fld
inc
dec
fiadd
sub
fwait
lods
cli
sub
add
pop
push
ror
lods
aas
and
fldenv
in
(bad)
rcr
ror
inc
or
push
mov
or
and
sub
push
cmp
repnz
xor
sbb
les
jmp
fld
add
and
pop
xchg
retf
and
aas
mov
ret
shl
adc
mov
dec
call
sbb
loopne
jb
add
stos
rol
add
cdq
fs
push
std
jp
adc
mov
add
push
test
mov
push
xchg
push
pop
or
adc
or
push
or
cli
les
mov
loopne
adc
mov
inc
lea
je
iret
xchg
mov
lea
push
cmp
in
or
ud1
ja
inc
mov
mov
mov
xchg
loop
clc
lea
test
push
inc
cli
pop
cmp
and
rol
ret
xchg
xchg
(bad)
arpl
cmp
(bad)
xchg
and
dec
popa
cwde
xor
add
sbb
add
sbb
test
add
sub
adc
add
and
nop
inc
inc
movs
sbb
xchg
ffreep
dec
rcl
xlat
jecxz
adc
mov
lock
push
mov
adc
pushf
out
add
and
and
push
arpl
inc
pop
jbe
mov
xchg
sbb
test
mov
inc
cwde
pop
pop
cmp
xchg
jp
rol
test
or
imul
sbb
int
xchg
xor
push
push
pop
cmp
(bad)
lods
pusha
ror
lock
pop
xor
pop
and
ins
or
je
pop
and
jge
push
jle
clc
jno
shr
fnstsw
call
xor
pusha
pop
les
shr
jp
test
pop
push
aad
adc
inc
loope
sbb
inc
mov
sbb
enter
pusha
test
xor
mov
adc
outs
xchg
xor
xor
inc
loopne
int
pop
sbb
cmp
jne
jne
push
push
gs
push
adc
fxch
xchg
pushf
mov
mov
rol
sbb
jo
and
adc
movs
test
adc
fdiv
pusha
cmp
sahf
sbb
stos
cmps
fwait
les
jge
push
inc
(bad)
(bad)
in
call
push
add
cmp
call
not
stos
cmp
cs
nop
push
into
cwde
mov
in
ret
mov
cmp
and
das
sub
push
arpl
mov
pop
inc
mov
inc
(bad)
mov
dec
popf
mov
adc
mov
out
or
push
clc
mov
push
inc
dec
pop
out
mov
popf
adc
(bad)
and
cmp
sbb
adc
mov
in
xchg
pop
adc
push
pop
mov
out
adc
lods
add
inc
fmul
in
inc
xchg
mov
inc
or
clc
and
test
icebp
push
and
es
movs
xor
xor
jo
push
cmps
and
mov
dec
dec
adc
lahf
cwde
mov
mov
stos
stc
adc
xchg
inc
(bad)
mov
dec
cld
pop
scas
adc
pop
in
mov
inc
mov
je
add
mov
xlat
sbb
das
nop
imul
jg
das
out
sbb
push
and
ds
adc
in
add
inc
sti
adc
clc
mov
mov
lea
test
lea
or
cmp
cs
xor
or
xor
pushf
adc
add
sbb
call
shl
je
call
mov
dec
loopne
or
cmp
xchg
mov
enter
add
out
jl
cmps
jno
push
mov
outs
xchg
sar
inc
(bad)
push
push
dec
or
dec
or
cdq
adc
adc
mov
fwait
or
test
cdq
xlat
imul
adc
inc
or
stos
add
push
int3
adc
or
inc
jnp
or
dec
push
lock
jle
mov
push
and
mov
or
hlt
jp
xchg
inc
inc
or
call
(bad)
ficomp
sbb
clc
and
adc
mov
or
pop
push
bound
add
test
dec
add
outs
cmp
clc
add
mov
inc
dec
sbb
jbe
fisttp
sbb
sub
push
rol
outs
inc
sbb
pop
inc
xchg
loopne
sub
pop
(bad)
jg
cmp
push
out
data16
adc
cmp
xor
adc
jmp
mov
in
inc
pcmpeqd
mov
jne
jns
in
push
mov
dec
sub
or
sub
(bad)
and
cmp
adc
dec
and
push
inc
inc
data16
pop
in
mov
pop
clc
ror
or
inc
sub
(bad)
(bad)
fcmovnb
cmp
push
push
xlat
int
add
mov
jnp
inc
mov
adc
sub
bound
sbb
pop
cdq
add
aaa
inc
jo
sbb
aam
jo
pusha
push
add
mov
sbb
ins
xor
adc
loopne
fldlg2
sub
or
xor
jle
js
sub
sub
push
imul
add
fidiv
push
adc
jbe
dec
or
inc
das
fadd
out
jg
dec
mov
sbb
jno
test
ss
ret
pop
pop
jl
mov
pushf
pop
xchg
jp
jp
popf
lea
add
xchg
aaa
and
push
ja
sub
mov
add
js
(bad)
cmps
or
dec
or
xchg
shr
and
je
inc
push
adc
xor
sub
in
test
sub
mov
mov
push
and
leave
les
mov
dec
adc
popa
and
js
stc
jg
mov
aam
ins
icebp
xchg
scas
push
cmp
jne
pop
jo
sub
cmp
ficomp
mov
xor
pop
jbe
pop
jmp
les
sbb
add
mov
jle
xor
pop
sub
sbb
add
mov
mov
add
aaa
adc
push
movs
into
test
jecxz
xor
sbb
dec
or
mov
mov
mov
inc
dec
mov
in
push
or
push
shl
push
cmps
je
inc
fadd
aaa
mov
xor
lahf
sbb
xchg
data16
xchg
repz
inc
loopne
adc
int
and
shl
clc
mov
cwde
inc
push
dec
ficom
mov
fdivr
sub
bnd
loop
les
sub
test
outs
cli
xor
cmps
inc
push
js
test
or
stos
xchg
ror
dec
inc
inc
xchg
sbb
cmps
loopne
mov
loopne
retf
cdq
sub
lea
push
add
enter
xor
popa
mov
je
mov
je
cmp
and
push
jge
sub
push
rol
call
adc
int
push
add
push
sub
loop
inc
cmps
ret
out
mov
aas
or
outs
mov
jbe
mov
rcl
push
xor
int
xchg
fidiv
ficom
sub
adc
adc
push
imul
inc
xor
push
cmovl
shl
in
or
mov
xchg
and
add
sbb
push
sub
std
and
adc
xor
add
push
push
and
mov
jmp
mov
or
sub
mov
fisttp
test
or
lea
sbb
xchg
in
push
cmp
(bad)
ins
mov
int3
fisub
cmp
xchg
out
push
add
std
jmp
pop
mov
inc
sub
mov
jl
retf
mov
jg
sbb
int
or
pop
fcomp
ret
shl
sbb
fadd
ret
fld
fadd
xchg
add
lea
rcr
rcl
shl
arpl
pusha
add
sub
jmp
jb
add
push
fs
push
xchg
syscall
mov
add
jle
movs
pop
and
mov
and
daa
clc
or
vmovntps
ja
jb
cmp
sbb
push
dec
inc
fdivr
push
inc
mov
sbb
jl
jg
rol
repz
bound
mov
and
sub
ret
add
xor
ins
xchg
sahf
mov
adc
daa
jns
out
bound
arpl
dec
repz
sub
sbb
sbb
sbb
jmp
mov
imul
jne
test
mov
and
pop
dec
mov
je
adc
adc
add
pop
lods
inc
popa
in
sar
(bad)
shl
sub
adc
xchg
aam
ror
ins
aam
les
mov
sar
iret
add
cmp
mov
push
xor
mov
xchg
add
and
inc
and
clc
inc
test
adc
das
cld
xchg
js
ins
or
inc
das
clc
mov
and
inc
dec
mov
sub
loop
cmp
sbb
add
and
push
sub
or
jbe
or
push
xchg
loope
mov
popa
jb
cmp
ja
add
jnp
pop
test
lock
xlat
add
dec
pop
cmp
shr
fidivr
and
lea
imul
js
pusha
and
in
(bad)
and
sbb
fs
shl
sub
and
add
pop
pop
sbb
push
daa
popa
data16
call
jae
(bad)
adc
or
add
repz
adc
push
mov
adc
icebp
push
add
push
pop
add
icebp
sbb
sub
clc
mov
ret
mov
mov
fsub
jmp
mov
int3
and
inc
cmp
push
setp
ds
loopne
inc
mov
pop
sub
cmp
xchg
mov
pop
popf
add
aad
adc
and
mov
movs
xchg
sub
fisub
mov
xchg
sbb
push
push
pusha
mul
rol
(bad)
cdq
and
xor
aas
push
stos
mov
push
aaa
aas
stos
es
mov
cmp
(bad)
sub
ins
ins
jecxz
adc
dec
add
xchg
cmps
jo
or
retf
dec
add
inc
rol
xchg
aam
pop
cmp
das
adc
push
xor
into
add
stc
(bad)
mov
iret
xchg
pop
xor
pop
add
shl
adc
mov
rcr
pop
call
xchg
call
idiv
test
outs
mov
dec
(bad)
test
stos
jo
push
push
xchg
push
jo
popa
pusha
data16
sub
in
mov
fisttp
add
jne
xlat
add
push
ss
cmp
dec
xor
dec
inc
mov
or
push
xor
das
pop
sbb
xor
rol
and
mov
mov
dec
sbb
adc
sbb
inc
and
cmp
enter
and
sub
test
push
rol
or
or
push
in
ret
sub
or
rcr
sbb
adc
push
in
inc
and
xchg
movs
xor
dec
jno
mov
pushf
push
add
and
addr16
je
and
pop
rcl
cld
loopne
cld
mov
or
(bad)
fnclex
cs
push
xchg
jb
jle
fxrstor
push
push
mov
pop
jo
push
or
xchg
xlat
or
and
(bad)
jmp
cmp
(bad)
cmp
pop
movs
in
nop
popa
adc
ins
dec
cs
js
adc
mov
scas
push
inc
sbb
sbb
sbb
arpl
xchg
adc
shl
pop
cmp
dec
idiv
adc
adc
repnz
std
and
repnz
jbe
push
cmp
addr16
sub
fisttp
lea
xor
aaa
inc
jl
push
and
cmp
pop
data16
jmp
imul
or
or
adc
adc
jle
dec
adc
add
inc
mov
jno
test
mov
cmp
push
add
dec
or
movlps
push
inc
or
and
sub
push
das
int3
or
add
jmp
dec
in
mov
fadd
movs
dec
les
pop
loopne
xlat
out
xor
xor
or
dec
popf
xchg
jno
call
push
call
xor
dec
call
push
and
lock
push
sahf
addr16
sub
lds
push
mov
lods
ins
jns
mov
movs
ss
push
inc
fidivr
lock
sub
jp
push
mov
sub
push
inc
pushf
mov
or
out
sbb
or
add
pop
mov
mov
jp
data16
jle
(bad)
cli
sub
inc
sub
add
sbb
mov
dec
push
cmp
iret
es
popa
xor
or
mov
fs
jo
lods
cmp
das
sub
xchg
xor
das
rcl
popf
vmulpd
jo
and
pop
sbb
jg
test
xor
and
clc
push
push
aaa
cwde
icebp
into
repnz
call
test
mov
leave
pop
sub
sub
(bad)
dec
xchg
push
gs
int
js
lock
push
push
jmp
jmp
push
pop
mov
inc
popa
adc
jno
out
dec
push
rcr
jp
mov
or
xor
xor
mov
lds
push
je
add
push
adc
push
sub
sub
pop
inc
pop
inc
pop
ins
fcom
add
xor
dec
mov
sbb
dec
dec
pop
xor
add
or
add
lds
mov
dec
xor
or
or
xchg
push
cmp
add
pop
add
lock
xor
cmps
xchg
jmp
mov
loope
add
mov
test
lea
stos
mov
dec
push
mov
sbb
xchg
cmp
inc
jb
sbb
rol
aad
mov
jo
and
neg
adc
inc
call
add
fidiv
and
pop
dec
sbb
sti
mov
add
jmp
mov
jb
push
push
fdivp
xor
inc
or
pop
add
push
adc
mov
dec
adc
retf
pushf
add
movs
sub
sbb
out
call
or
adc
rcr
aad
test
pop
movs
into
cli
mov
jmp
mov
dec
mov
or
ror
fcomp
lahf
sbb
xor
push
xor
xor
mov
jle
mov
imul
(bad)
jmp
push
add
imul
push
push
stos
movs
or
and
dec
push
adc
jno
cmp
push
popa
pop
mov
jmp
mov
cmp
mov
jp
pop
inc
xor
jge
xchg
dec
mov
or
std
loopne
adc
and
cmc
(bad)
jmp
add
xor
arpl
add
jmp
fcom
lahf
rol
and
je
outs
xchg
xchg
sub
and
leave
mov
cmp
sbb
loope
xchg
fwait
sbb
pop
push
pop
mov
and
sahf
inc
loopne
lea
or
out
imul
adc
jl
fcom
add
or
inc
mov
test
add
inc
push
ret
and
ss
int
lds
mov
fadd
add
stos
push
push
xlat
adc
test
sbb
mov
lea
movs
daa
cmp
inc
adc
pop
lods
adc
movs
push
ror
add
push
sbb
jnp
adc
(bad)
ss
(bad)
push
out
inc
cmp
push
adc
movs
fsub
adc
inc
pop
pop
test
pop
cmp
inc
es
clc
mov
adc
or
in
sbb
xchg
dec
popa
leave
add
in
in
pop
ret
inc
lock
ror
cmp
or
jne
xor
xchg
out
fcom
cmp
daa
xchg
int
pop
leave
jmp
push
inc
or
std
push
and
ret
shr
outs
mov
mov
push
out
sub
int3
bound
push
and
inc
adc
sbb
push
xor
je
les
push
hlt
lds
push
mov
pop
and
or
dec
mov
(bad)
mov
cmp
dec
dec
add
fsubr
scas
je
adc
cld
fld
pushf
jp
dec
lea
cmp
aam
int
adc
adc
jmp
dec
mov
xchg
fdivrp
xchg
stos
push
dec
xor
cli
and
or
mov
adc
mov
jb
add
sub
push
dec
mov
adc
sub
ins
dec
and
push
xor
inc
jne
xchg
add
or
push
adc
dec
cmp
imul
lahf
mov
mov
sbb
lods
ret
jmp
loop
and
daa
lock
xlat
and
or
pop
inc
scas
daa
test
les
daa
jbe
dec
lds
ror
std
inc
cmp
test
push
push
cmc
pop
xchg
inc
int3
dec
cmovno
bound
add
sub
lods
scas
dec
jle
cmp
dec
cmp
add
xor
retf
push
mov
sbb
cs
jb
cmp
pusha
xlat
sbb
int
mov
loopne
push
leave
sbb
sbb
call
xchg
mov
add
mov
jbe
sub
xchg
dec
sub
inc
or
cdq
call
push
add
add
ss
sbb
(bad)
rcl
push
inc
cmp
adc
add
out
push
nop
jo
cmp
mov
jno
inc
ins
imul
in
in
push
dec
xor
push
push
inc
pop
or
jmp
arpl
retf
and
dec
inc
pop
dec
rcl
aam
jbe
arpl
dec
cli
push
sub
sar
pop
imul
add
or
inc
aas
jmp
xchg
push
shl
(bad)
xchg
nop
inc
xchg
ror
pop
inc
pop
cmp
sub
jmp
call
sub
inc
das
xor
add
loopne
es
push
loop
mov
(bad)
imul
dec
(bad)
das
cwde
inc
xor
es
ret
mov
inc
ds
cdq
call
jno
cmp
adc
dec
cli
or
mov
or
dec
lods
cmps
nop
xor
jno
retf
dec
cmp
cli
xchg
iret
sub
sub
or
(bad)
bound
cdq
jb
hlt
mov
sub
cmp
adc
xchg
push
inc
and
pusha
xor
es
cs
sbb
cmp
nop
adc
in
jo
nop
inc
mov
leave
add
retf
push
mov
push
retf
push
add
adc
bound
jle
rol
mov
jmp
mov
lea
xor
test
lahf
inc
push
outs
stos
xor
or
push
stos
xor
mov
xchg
xchg
add
inc
ja
inc
xchg
pop
clc
pop
pop
jmp
and
sbb
mov
adc
dec
jecxz
(bad)
addr16
aas
jp
fs
pop
sub
push
push
xor
loopne
call
fimul
push
push
jb
push
arpl
jg
ss
in
sti
pop
cmps
dec
gs
call
dec
mov
daa
daa
cwde
push
pusha
inc
add
cmp
push
(bad)
inc
add
push
repz
mov
sbb
popaw
push
xor
add
aas
xchg
mov
fsub
push
inc
sub
jo
mov
mov
inc
mov
add
inc
or
dec
or
or
jne
push
imul
mov
dec
cmp
pop
xchg
push
mov
add
push
mov
jp
icebp
adc
add
sub
lea
dec
mov
xor
gs
shl
sub
mov
inc
xor
das
inc
jne
adc
aad
dec
mov
and
pop
sbb
in
pop
sar
mov
pop
push
repnz
pop
inc
push
xchg
inc
call
sahf
scas
mov
cmp
inc
adc
push
add
mov
test
cli
and
add
popa
sbb
and
push
jg
or
push
pop
jb
cmp
jne
cmp
xor
sbb
or
pushf
mov
pushf
push
(bad)
pop
push
mov
or
jg
xor
inc
imul
push
test
xor
xor
js
lea
je
xor
xor
inc
cmp
cwde
std
push
ror
dec
add
mov
outs
das
pop
or
adc
bound
jge
hlt
mov
jo
adc
imul
mov
pop
pop
jmp
add
setns
or
das
pop
jne
inc
cwde
cld
jge
jmp
push
dec
mov
mov
inc
sub
sub
adc
xchg
cld
(bad)
cmp
pop
aad
adc
adc
sub
sbb
scas
dec
inc
cmp
add
adc
stos
ret
clc
hlt
jo
mov
push
repz
push
add
into
mov
into
and
popa
inc
loopne
aad
hlt
pop
xchg
mov
and
lods
pop
mov
push
sbb
adc
out
mov
pusha
push
mov
push
jl
add
lods
pop
pusha
or
add
lgdtd
loope
daa
cmp
cmp
xor
in
cdq
xchg
div
shl
cmp
ffreep
dec
sbb
pop
jno
movs
sub
xor
in
pushf
add
cmp
and
or
fild
add
jno
xchg
add
int3
mov
ins
mov
pop
and
sbb
jg
loope
in
out
fiadd
das
xor
add
mov
les
stos
inc
fst
fbstp
add
sub
mov
sbb
xor
and
or
outs
or
outs
sub
mov
aaa
mov
movs
push
das
popa
push
sbb
cmp
es
adc
dec
push
push
mul
rcl
and
call
push
mov
mov
je
sbb
ret
mov
add
xchg
pop
mov
ror
fwait
popf
outs
push
stos
dec
cmp
jmp
rcr
test
pop
jmp
outs
xor
push
push
xchg
xchg
add
adc
push
dec
inc
call
(bad)
dec
fwait
popa
fadd
jb
sbb
inc
shl
stc
movs
test
aam
cmp
pop
push
mov
push
pop
mov
sbb
call
aad
call
sub
add
loop
sbb
xchg
aam
pop
push
mov
rcl
sub
xchg
leave
pop
ror
and
mov
outs
and
les
mov
(bad)
and
dec
and
sub
test
sub
test
jmp
push
sbb
jge
jmp
adc
test
lods
jne
shr
fs
ficomp
icebp
in
cs
je
xchg
hlt
cmp
clc
push
mov
les
inc
cmp
adc
sub
inc
(bad)
xchg
sbb
pop
push
push
out
add
adc
mov
sub
pusha
xchg
pop
sti
cmp
or
lods
sbb
dec
or
pusha
std
adc
nop
ins
pop
push
inc
int3
push
popa
mov
push
ins
xor
mov
call
out
pop
shl
daa
movs
and
adc
inc
nop
push
enter
sbb
cmp
sub
xor
add
xchg
adc
mov
or
push
adc
or
sub
sub
mov
push
or
cmp
shl
inc
lods
or
outs
aaa
mov
jmp
sub
daa
push
in
push
xchg
xlat
add
xchg
pushf
pop
sbb
in
or
mov
pop
mov
pop
or
push
adc
pop
in
mov
fcmovu
adc
lea
shl
rcl
push
sbb
sbb
jmp
(bad)
mov
mov
add
dec
or
dec
loopne
push
pop
lods
aas
or
movs
jns
or
lock
xlat
call
xchg
retf
add
adc
adc
imul
cld
sub
push
lods
and
add
sub
jmp
pusha
ret
jmp
sbb
cmps
inc
jbe
gs
dec
lahf
lea
daa
movs
adc
pop
or
add
inc
adc
pop
adc
(bad)
or
rol
add
popa
dec
cmp
sub
or
lock
aad
loope
add
add
sub
test
add
movs
cmp
cwde
les
pushf
popa
and
shr
push
outs
pop
adc
add
or
sub
adc
and
sub
shl
or
add
or
xchg
lock
cmp
cmp
add
movs
inc
cmp
rcl
jo
or
movs
int3
mov
jno
mov
in
pushf
adc
pop
movs
js
adc
fdiv
adc
aam
xor
adc
(bad)
pop
dec
arpl
add
mov
retf
add
ror
add
retf
sbb
popf
adc
ror
movs
xchg
add
and
sti
inc
or
std
sub
or
or
push
iret
imul
ins
add
dec
adc
add
jl
and
add
add
test
push
xor
cwde
mov
adc
test
xchg
pop
xchg
pop
add
test
in
jo
retf
jg
pop
sub
scas
pusha
(bad)
or
push
test
mov
mov
pop
sub
lods
and
adc
sbb
dec
inc
call
push
or
and
mov
or
loop
push
jecxz
lods
xor
in
ret
push
inc
pop
xor
adc
fstp
test
add
inc
inc
xlat
out
dec
cmp
push
dec
mov
pop
dec
pop
je
sub
dec
aad
div
call
inc
call
cmps
or
repnz
xor
xchg
inc
or
adc
jo
retf
adc
xor
add
push
pop
call
cmp
and
mov
mov
adc
mov
sbb
cmp
(bad)
lea
xchg
(bad)
sub
loopne
out
aad
aad
(bad)
push
push
push
retf
add
push
sub
push
xor
mov
inc
lock
hlt
pop
xchg
rcl
mov
dec
ins
pusha
xchg
add
and
adc
push
dec
inc
fimul
mov
pop
and
mov
pop
jg
iret
je
out
dec
cmp
movs
gs
pop
ret
jg
xor
and
movs
jle
add
xor
mov
xor
adc
or
or
enter
or
pop
and
stos
push
hlt
das
push
mov
ja
sar
xchg
jecxz
jge
cmp
shl
jmp
mov
push
mov
or
rol
push
dec
sbb
mov
adc
ins
push
add
mov
lock
mov
or
dec
fisubr
cmp
add
in
jbe
cmp
nop
or
fs
cmp
sbb
cmp
push
or
mov
jmp
or
push
inc
mov
lock
xchg
add
push
dec
lock
lahf
mov
lahf
adc
xchg
fs
scas
stos
add
sti
or
inc
or
mov
pop
and
add
mov
test
test
jne
and
push
ficom
sti
or
mov
pop
inc
jno
mov
or
sti
xchg
push
mov
je
shl
add
push
hlt
or
ins
daa
xchg
mov
push
push
and
xor
sub
popf
xchg
jbe
pop
frstor
in
fadd
mov
inc
mov
nop
mov
or
xchg
jo
fild
push
test
not
jb
push
xchg
push
(bad)
cmp
les
xor
data16
pushf
sar
sbb
jbe
and
adc
sbb
add
leave
mov
popa
movs
nop
pop
mov
retf
movs
popf
test
or
lock
mov
lods
dec
sub
pop
and
pop
xor
dec
adc
or
sub
sub
and
loopne
arpl
cmp
gs
and
imul
and
xchg
mov
mov
or
fcom
test
cs
or
or
push
pop
and
ffreep
or
enter
push
add
pop
cmp
scas
inc
repnz
bound
and
lock
lods
fwait
sub
pusha
mov
sbb
lock
xor
adc
lock
imul
dec
sub
push
and
fiadd
pop
movs
loopne
imul
scas
cmp
add
xchg
pop
push
mov
test
les
push
push
jmp
mov
jno
jne
retf
mov
retf
xor
xor
jae
ror
or
mov
and
in
inc
push
jo
sbb
test
mov
add
pusha
std
push
xor
es
add
add
div
add
mov
push
retf
sbb
jmp
pop
xlat
sbb
cdq
das
pop
sbb
jbe
addr16
inc
push
mov
xchg
cmp
ret
xchg
shl
mov
jb
xor
sub
add
popa
sub
ret
pop
add
stos
(bad)
adc
add
enter
sbb
push
jne
(bad)
mov
mov
test
dec
mov
js
sbb
sbb
dec
add
xchg
arpl
outs
xor
push
push
mov
mov
and
pop
rcl
into
cli
fist
dec
jecxz
stos
fsub
mov
adc
jnp
mov
das
sbb
inc
jbe
or
jne
jmp
and
and
lods
and
out
imul
mov
push
inc
xor
repnz
lea
in
sbb
stc
dec
sbb
out
rcl
loope
sub
dec
jge
fwait
sbb
add
rcr
jmp
pop
push
gs
jmp
imul
push
jb
hlt
xor
movs
push
push
das
inc
aaa
(bad)
test
add
sub
push
arpl
cmp
mov
lds
add
cmp
sub
cmp
jmp
pop
je
test
adc
div
ror
js
sbb
xor
mov
dec
pop
add
mov
or
inc
out
and
adc
ja
fwait
cmp
mov
mov
jecxz
cmp
fadd
add
xchg
dec
lahf
dec
xchg
pop
leave
sbb
cs
ins
dec
data16
push
sbb
inc
push
pop
add
cmp
add
push
and
test
sub
xor
pop
sar
and
sbb
popf
xchg
nop
and
xchg
movs
add
pop
pop
push
dec
adc
push
pusha
pop
nop
inc
add
inc
xchg
add
ret
pop
test
retf
arpl
mov
in
dec
dec
pop
je
clc
xchg
mov
movs
pop
sahf
sub
rol
xor
push
popa
adc
and
or
and
sbb
cdq
sbb
test
add
dec
and
lock
ss
push
scas
jmp
retf
ss
pusha
xchg
sub
ret
dec
popa
dec
test
and
push
cmp
(bad)
adc
dec
cmp
stc
loopne
push
pushf
cmp
adc
xor
rcl
popa
hlt
pop
add
movs
add
add
daa
jmp
mov
popf
xor
out
mov
lds
loopne
clc
mov
sub
push
and
xor
mov
add
dec
mov
sbb
push
pop
fld
xor
xor
ficom
mov
push
pop
sub
pushf
pop
or
push
push
push
dec
icebp
pop
cmps
push
pop
test
mov
push
adc
inc
enter
(bad)
cmp
add
loopne
sub
mov
pop
mov
xchg
inc
push
push
and
fs
sub
cmp
jmp
test
lods
add
add
add
cwde
cmp
lahf
aad
dec
add
inc
sub
push
dec
stos
scas
pop
ret
in
xor
sti
jmp
sbb
or
rcl
xchg
sbb
xor
push
mov
ja
inc
ror
scas
in
or
shl
mov
or
cmp
div
pop
aaa
je
add
or
mov
mov
sbb
xor
jne
scas
loope
xchg
dec
test
mov
das
pusha
in
rol
sar
test
pop
push
add
push
movs
and
hlt
sub
xor
dec
mov
lds
mov
shr
cmp
mov
add
dec
int
or
add
fiadd
xor
adc
dec
xchg
add
test
test
push
push
xchg
movs
in
cmp
sub
icebp
adc
add
sbb
sbb
adc
fcomp
pop
inc
shr
(bad)
jo
dec
or
xchg
std
inc
push
inc
shl
push
loopne
mov
mov
lea
xchg
jg
push
or
mov
pop
xchg
imul
or
mov
lea
add
call
mov
repnz
push
mov
push
mov
addr16
dec
je
xchg
or
mov
add
daa
out
or
movs
test
sbb
imul
pop
retf
js
xor
xchg
movs
xchg
pop
mov
sbb
out
(bad)
xor
cmp
fwait
inc
dec
add
dec
jno
dec
dec
push
das
xchg
pop
jae
mov
mov
adc
xchg
mov
ret
ret
xchg
jmp
int
add
sub
pop
mov
stos
pop
and
jo
mov
mov
sub
int
ror
lar
mov
xchg
and
inc
mov
in
sbb
push
push
inc
dec
pop
and
or
je
fld
mov
loop
mov
xchg
mov
ror
fidivr
sar
ins
es
mov
mov
mov
cmp
mov
push
sbb
mov
test
inc
add
mov
(bad)
mov
out
cmp
adc
cmp
mov
sub
mov
rol
add
inc
xor
imul
or
cmp
and
cmp
gs
loop
mov
clc
aaa
js
aam
jg
jmp
pop
in
in
js
cdq
std
adc
stc
sub
jbe
xchg
jg
push
jl
adc
dec
push
pop
mov
call
add
add
mov
add
add
repz
mov
mov
add
add
add
inc
mov
xchg
mov
mov
add
mov
or
outs
mov
add
jne
push
mov
mov
test
and
inc
push
or
ds
mov
sub
lea
mov
ins
ds
(bad)
pop
xchg
dec
pop
enter
xchg
fdiv
or
pop
mov
mov
ds
jae
xor
mov
outs
or
lea
cmps
xor
push
cmp
mov
add
jmp
add
push
jp
mov
push
fwait
dec
jl
neg
stos
or
inc
push
call
adc
sbb
rcr
dec
and
mov
mov
rol
sahf
ret
js
lock
jo
hlt
pop
mov
sub
pop
mov
inc
mov
dec
add
mov
mov
(bad)
(bad)
push
jl
mov
jbe
mov
xor
or
push
jne
fidiv
adc
std
enter
mov
mov
or
fstp
lock
mov
aam
dec
mov
and
fisubr
leave
cmp
adc
add
sub
push
icebp
xchg
push
fadd
adc
std
or
addr16
adc
inc
inc
inc
mov
jge
pop
mov
pop
sti
mov
sbb
sub
and
mov
push
or
adc
jecxz
push
pop
jl
pop
js
adc
add
dec
inc
mov
mov
inc
fs
mov
sub
cmp
add
jecxz
xor
lahf
ins
jns
(bad)
mov
or
push
mov
loop
mov
push
jbe
fimul
or
mov
jb
test
inc
sbb
sahf
xchg
xchg
mov
sub
push
lea
(bad)
out
sbb
mov
add
mov
retf
cmp
jle
sub
addr16
iret
dec
or
inc
and
jge
fdivr
jne
dec
dec
pop
xor
loopne
nop
push
xlat
mov
xor
xor
sbb
jle
or
push
movs
pusha
lea
push
adc
cmp
mov
enter
ss
enter
add
or
out
ror
mov
sub
inc
pop
shl
lock
(bad)
jb
sbb
cmc
leave
retf
jns
(bad)
loopne
sub
lock
sub
(bad)
push
or
ror
xor
adc
fwait
cmps
loopne
sub
push
movs
dec
rol
loop
mov
push
cmps
sub
dec
or
mov
push
fdivr
fimul
pop
sahf
add
stos
popa
dec
call
test
inc
and
and
push
xor
cli
stc
xchg
cmp
fcmovnu
sbb
bound
in
jmp
cmp
pusha
cs
scas
scas
add
rol
dec
jmp
mov
int
aas
or
mov
xchg
ss
pop
dec
sub
clc
ret
jge
sbb
inc
inc
inc
pop
mov
jl
jecxz
fmul
mov
mov
aas
mov
daa
sbb
loop
rol
cmp
cmp
add
jo
dec
ds
lods
adc
adc
dec
mov
dec
dec
push
and
es
push
push
add
pusha
shl
les
and
sahf
enter
imul
loopne
stos
push
fmul
jle
add
mov
pop
xchg
mov
push
or
loope
mov
jle
cmp
push
and
mov
fs
sbb
pop
push
imul
adc
add
add
rol
push
stc
jo
adc
mov
in
rcr
dec
push
test
js
adc
sti
or
pop
js
and
cmp
into
sbb
out
jne
jl
adc
or
shr
bound
cmp
and
out
mov
jg
xchg
pop
lock
(bad)
ror
test
mov
mov
lea
data16
and
jb
cmp
clc
mov
dec
bound
add
sbb
jge
fild
add
xor
and
js
or
jle
jl
inc
push
sahf
dec
jle
xchg
iret
dec
rcr
or
dec
retf
mov
sbb
mov
cwde
arpl
retf
sub
js
retf
cmp
enter
inc
aaa
loop
inc
or
pop
cs
push
xchg
enter
mov
xchg
inc
and
lods
mov
pop
ret
push
and
xchg
push
pop
add
xchg
add
ret
mov
or
out
inc
ins
sbb
dec
sbb
lock
mov
and
scas
add
cmp
shl
mov
cmp
sub
sbb
add
dec
mov
outs
xor
push
xor
sbb
cmp
int3
add
jle
fwait
scas
mov
and
and
es
loope
dec
sbb
jmp
ja
loop
shl
movs
retf
mov
xor
xchg
cmp
cmp
mov
jae
aas
pop
push
scas
ret
or
jl
jne
fs
xchg
clc
or
cmps
jmp
or
fs
add
sbb
and
js
pop
push
mov
test
push
je
add
add
and
pop
adc
and
rcl
jbe
or
test
or
push
pop
jnp
ret
dec
jae
imul
xchg
dec
cmp
cmps
aad
fmul
or
int
pop
dec
cwde
sbb
sbb
fadd
push
popf
test
inc
sbb
test
rol
pop
cwde
test
movs
cdq
fwait
or
dec
xor
mov
and
add
cmc
push
hlt
mov
inc
mov
mov
mov
je
xchg
outs
jecxz
adc
mov
cmps
mov
or
xor
sub
inc
sub
jmp
cmp
or
or
test
mov
ret
jno
push
mov
pop
(bad)
pop
arpl
iret
add
adc
popf
test
sar
outs
add
in
fsubr
sub
push
fwait
gs
add
push
test
clc
push
pop
cmps
movs
sbb
add
arpl
pusha
push
jb
add
cmc
test
bound
lea
mov
inc
add
inc
mov
aas
bound
cmp
jle
or
(bad)
cmp
dec
dec
imul
sahf
int
and
ret
mov
sbb
data16
dec
and
or
jge
or
mov
ret
ror
movs
cmc
push
mov
mov
push
aas
add
adc
dec
shr
lods
mov
push
mov
popa
lods
add
cmps
iret
push
dec
sub
loope
sbb
inc
xchg
cmp
retf
and
js
cmp
and
repz
mov
xor
ficomp
movs
inc
nop
inc
addr16
fldcw
mov
adc
push
sbb
mov
and
lea
outs
fistp
inc
cmp
imul
popf
adc
loopne
or
ret
test
and
int3
cmp
cli
or
push
sbb
adc
loop
mov
mov
dec
xchg
jo
mov
imul
mov
ret
dec
in
lds
popf
idiv
inc
jmp
test
mov
addr16
xor
into
xor
in
mov
outs
loopne
pop
or
adc
mov
pop
lahf
ror
aas
mov
dec
fst
or
sub
mov
add
add
or
outs
lods
jl
std
jmp
int3
xor
add
ins
mov
fist
mov
outs
movs
xchg
popa
nop
fs
dec
outs
pop
shr
out
sub
in
lea
pop
dec
sub
mov
enter
add
or
(bad)
jmp
inc
rol
and
push
sub
outs
push
cmp
or
movs
lahf
mov
imul
or
push
jne
hlt
sub
cmps
pop
inc
pause
mov
lea
mov
daa
cmp
adc
sti
ja
push
adc
push
shl
inc
ret
dec
push
dec
clc
inc
sub
inc
mov
scas
cmp
shl
and
xor
fst
sub
sub
in
inc
sub
xchg
xchg
sahf
int
inc
adc
daa
shl
jle
mov
push
cmp
imul
mov
stc
and
push
cmp
and
sub
cmp
push
es
or
adc
xchg
xor
xchg
adc
pop
mov
rcl
jmp
mov
sbb
test
and
lock
je
loopne
jbe
shl
test
jne
pushaw
cdq
mov
xor
neg
test
inc
jo
jmp
push
pop
aad
test
inc
xor
test
fadd
into
jae
lea
jbe
mov
jne
cmp
in
mov
push
sub
dec
fdiv
cmp
je
pop
lea
popa
adc
(bad)
(bad)
hlt
jmp
push
jne
sti
cs
cld
push
push
fwait
xchg
jbe
push
iret
cmp
pop
test
jp
test
push
add
push
and
sbb
and
ins
mov
push
dec
sti
dec
movs
mov
mov
push
and
or
and
mov
(bad)
push
add
ss
sub
cwde
inc
push
xchg
inc
xor
adc
push
pop
jmp
push
add
aam
jge
push
rcl
jecxz
adc
sbb
add
pop
jbe
inc
clc
jg
adc
jecxz
add
test
mov
adc
mov
jo
dec
adc
fidiv
jo
mov
jmp
xor
rcr
mov
add
dec
mov
mov
pop
test
mov
push
inc
xchg
add
nop
imul
nop
ins
dec
stos
push
sbb
not
cld
lea
push
pop
jge
push
dec
mov
and
movs
mov
adc
sbb
xor
sub
cwde
jno
pop
adc
xchg
or
fisttp
test
cli
mov
xor
and
int3
(bad)
push
adc
cmps
cmp
push
hlt
fs
dec
xor
adc
out
lea
mov
in
loopne
test
push
push
push
inc
add
xchg
jno
cmp
dec
cmps
cli
fdiv
(bad)
idiv
dec
jno
sbb
xchg
retf
sub
jb
adc
and
ret
cmp
je
inc
jmp
push
ror
inc
loopne
lea
jl
cmp
fs
xor
arpl
jge
cld
pop
adc
push
mov
movs
mov
cld
(bad)
add
rol
inc
xor
push
or
push
add
mov
int3
lahf
jle
fcom
inc
stos
push
cmp
and
test
jno
jno
jle
push
xor
push
or
jbe
pop
cld
or
xchg
rcl
vpmulhw
xor
add
inc
or
cmp
and
ins
(bad)
stc
add
movs
int
rcr
inc
push
push
cmp
cmp
jecxz
leave
push
add
adc
retf
mov
je
adc
adc
imul
out
mov
jbe
leave
aad
cmp
dec
cmc
mov
bound
cmp
xchg
(bad)
lea
push
mov
rol
or
add
addr16
cmp
adc
add
pop
sub
pop
or
cmp
or
retf
push
(bad)
(bad)
dec
sbb
jbe
pop
mov
or
push
cs
ret
pop
mov
inc
int
outs
lea
sar
adc
push
push
hlt
lock
sub
cli
or
push
push
or
je
mov
fcmovnb
mov
jae
jmp
mov
mov
dec
rol
shl
ds
mov
and
and
jne
jbe
pop
fmul
cmp
lock
lods
mov
sbb
test
out
xchg
rol
leave
mov
retf
fdivr
scas
loopne
sbb
jne
hlt
sub
adc
test
int
sub
and
call
pop
xor
ss
cmp
mov
jbe
test
enter
dec
mov
add
mov
test
sbb
sub
inc
mov
dec
lods
(bad)
jo
push
aas
add
aaa
adc
aad
push
mov
pusha
inc
and
adc
fisubr
xor
or
dec
hlt
ss
(bad)
sbb
ficomp
test
or
jo
adc
ja
cwde
or
out
xchg
inc
lock
ret
lea
adc
dec
iret
inc
push
jmp
xor
enter
adc
dec
test
ss
and
jne
inc
add
frstor
xchg
inc
jg
inc
mov
(bad)
xlat
dec
add
push
mov
adc
lods
outs
dec
or
sub
imul
adc
push
xchg
mov
cmp
sub
and
pop
xor
and
mov
adc
sub
pushf
and
shl
jge
es
out
out
fmul
pslld
(bad)
dec
add
push
lods
lea
bound
sub
cmp
mov
jl
jp
ins
add
push
adc
xlat
sub
dec
sub
inc
loopne
inc
dec
cmp
jns
mov
jb
out
(bad)
push
aad
mov
rcl
jle
sub
jno
pusha
or
mov
push
mov
fisub
or
push
push
dec
cmp
leave
pop
inc
cmp
out
lea
push
add
or
and
and
retf
push
push
xor
and
sub
jbe
sub
nop
ret
mov
ror
mov
sub
outs
xchg
arpl
xor
adc
cmp
sub
jo
push
push
mov
push
sub
mov
nop
cdq
pop
dec
jmp
mov
int
dec
rcl
(bad)
fdivr
mov
xchg
adc
fiadd
mov
sbb
inc
rcl
inc
push
jno
call
inc
dec
lea
adc
retf
int3
aam
icebp
inc
nop
dec
inc
popa
inc
cmps
(bad)
push
call
(bad)
loopne
xchg
adc
push
out
xor
cmp
retf
jg
inc
mov
mov
sbb
adc
jo
cmps
push
jmp
loopne
or
dec
movs
sub
sub
ds
add
(bad)
shr
lock
call
adc
mov
fdivr
pop
mov
test
xor
test
sub
mov
sub
es
jmp
adc
ret
ins
xor
cmps
shr
cmc
call
mov
call
push
mov
fstp
pop
push
xor
fist
push
pop
jmp
adc
mov
push
inc
pusha
jnp
dec
dec
arpl
mov
fadd
int3
mov
popw
ins
pop
or
mov
mul
loopne
fdiv
xchg
xchg
mov
mov
sbb
add
je
xor
cmps
mov
jne
inc
dec
outs
hlt
adc
inc
add
stc
add
or
pushf
sar
mov
and
xor
push
cli
or
mov
retf
int
add
rol
xor
mov
xchg
test
adc
icebp
mov
(bad)
loopne
(bad)
and
or
pushf
ins
jl
ret
mov
dec
(bad)
inc
push
movs
and
and
shl
es
jno
mov
js
push
xor
pop
call
mov
lock
push
enter
shl
retf
or
xchg
or
(bad)
call
inc
dec
or
inc
mov
int
ror
xlat
push
or
dec
das
sar
dec
jmp
jo
and
sar
jecxz
inc
in
or
add
and
not
and
or
sub
fisttp
pop
out
into
mov
push
shr
or
add
mov
sahf
daa
mov
push
(bad)
call
call
cmps
ins
jmp
test
scas
(bad)
cmc
loopne
pusha
popa
mov
sti
mov
out
xchg
nop
or
push
xor
test
sub
xchg
or
cmp
mov
cmp
inc
call
test
adc
sti
sar
cmp
add
pop
pop
sar
cmp
mov
loopne
cmp
aas
push
sar
inc
inc
lock
mov
imul
xlat
add
nop
or
fadd
xor
mov
call
ret
jp
out
push
test
mov
mov
or
adc
adc
mov
mov
icebp
cmp
mov
pop
shr
cmp
push
iret
cmp
push
sub
lock
fucom
and
nop
imul
bound
scas
retf
fst
inc
mov
cwde
std
push
sub
push
adc
fs
retf
add
and
jmp
repnz
cmps
movups
cmp
and
xchg
cmp
and
lea
mov
push
push
aas
ds
in
or
jmp
pusha
clc
push
fistp
bound
sbb
pop
add
and
push
fs
and
jmp
cmp
inc
sar
xchg
mov
push
add
or
retf
out
aad
dec
in
jl
pop
pop
adc
fadd
cli
je
xchg
iret
das
sbb
nop
jmp
jmp
xor
int3
add
mov
mov
ret
adc
pop
(bad)
cmp
pop
(bad)
mov
jbe
fs
ins
push
adc
add
add
pop
sbb
inc
or
jmp
movups
add
and
dec
(bad)
dec
call
mov
pop
enter
sahf
push
loop
xor
mov
push
fcomp
in
call
loope
out
dec
lock
dec
sub
or
pop
ins
cli
imul
ret
(bad)
pop
mov
ret
or
dec
inc
mov
sub
call
aad
jp
adc
inc
mov
in
pushf
sbb
adc
inc
mov
call
retf
test
xchg
nop
das
fldenv
cld
push
add
mov
fistp
sub
adc
repnz
(bad)
clc
mov
or
inc
das
in
cli
stc
xchg
(bad)
sti
pop
cmp
enter
dec
mov
sub
call
push
and
cmc
into
fstp
loopne
pop
mov
dec
sub
and
or
jmp
pushf
xor
xor
cld
cwde
inc
cmp
(bad)
jmp
mov
fdiv
into
mov
adc
jle
xor
adc
das
pop
dec
inc
shl
shl
shl
cmp
mov
and
ins
(bad)
push
adc
or
cmp
xor
(bad)
fs
and
sub
or
in
jp
call
popa
mov
xlat
xor
fist
jl
jmp
jp
shl
cmp
test
arpl
je
jecxz
in
ret
push
and
pop
punpcklbw
cmp
call
(bad)
std
xor
mov
outs
pop
xchg
out
jo
mov
cs
inc
shl
xor
(bad)
jle
sub
cmp
ret
ret
cmp
xor
sub
daa
mov
icebp
shl
in
cmp
cmp
aad
adc
fisubr
push
mov
jmp
add
jbe
add
out
in
or
inc
out
popa
jnp
int3
sbb
fldl2e
out
loopne
outs
aaa
xor
sbb
lods
rcr
fcmovne
and
out
adc
popf
jecxz
push
jl
pop
xchg
loopne
into
cli
mov
sahf
sub
cmp
push
inc
push
mov
push
sar
and
push
lods
(bad)
loopne
or
aas
jl
mov
xor
sub
inc
dec
stos
hlt
adc
or
and
cmp
pushf
cmps
repnz
jmp
inc
push
or
pusha
adc
rcr
fbstp
xor
stos
add
rol
(bad)
fs
jecxz
test
ins
xor
jl
test
ret
cmp
call
in
(bad)
add
and
mov
jg
push
push
xchg
push
cwde
mov
rol
dec
ss
sub
mov
out
jmp
shl
test
shl
jmp
sub
test
sbb
jb
inc
(bad)
rcr
test
jmp
and
pop
cmp
out
sub
inc
jmp
pusha
sub
ss
adc
add
jmp
cld
loopne
lea
mov
mov
and
cs
stc
shl
jle
imul
and
dec
bound
mov
ss
sbb
pop
sbb
sbb
shl
mov
rcr
inc
xor
clc
add
ss
rol
leave
movs
and
inc
pop
out
adc
icebp
loope
xor
fisub
leave
popa
dec
or
push
aam
ins
and
push
mov
mov
adc
jg
cmp
sbb
ror
adc
or
xchg
in
stos
push
xor
repnz
jmp
les
sbb
sbb
aas
add
iret
shl
jmp
loopne
ficomp
add
adc
dec
and
xchg
sbb
rep
mov
jl
mov
add
mov
or
mov
fdivr
aaa
pop
jbe
xor
aas
fidiv
aas
sub
jecxz
addr16
inc
add
repnz
and
push
dec
imul
dec
mov
movups
add
test
ins
sbb
jb
pop
pop
or
fmul
sahf
stos
push
adc
adc
xchg
jo
mov
cmp
and
cmc
lea
js
ins
add
scas
push
lods
pop
pop
daa
push
sbb
push
push
fimul
sub
inc
jmp
add
add
ins
imul
pop
mov
cmp
ja
sub
into
lods
stos
repnz
and
sbb
mov
inc
inc
aad
sbb
retf
adc
aaa
push
fwait
lods
jg
cmp
movs
jl
adc
iret
or
mov
or
lea
into
cmp
lods
jmp
add
inc
js
add
mov
or
fistp
int
and
push
jno
outs
imul
sbb
lea
lea
lods
push
and
bound
cwde
cmp
jae
inc
cld
cs
xchg
rcl
mov
rcl
retf
jb
sbb
push
cmp
pusha
sbb
xor
mov
add
scas
or
inc
ret
movs
and
add
inc
lea
push
les
xlat
push
mov
test
out
add
cmp
inc
fsubr
sub
test
call
push
push
sbb
dec
cmp
sub
push
jbe
cmp
push
mov
fxch
ins
aaa
push
pop
dec
mov
into
mov
push
dec
sub
test
add
mov
pusha
xor
inc
clc
sbb
jge
shr
fmul
popa
fiadd
add
mov
sar
ret
shr
lods
fistp
xor
popa
lock
or
cmp
jae
xor
push
sbb
pop
mov
or
push
mov
pushf
add
arpl
mov
and
jmp
pop
xor
in
movs
sub
rol
xchg
or
daa
sub
add
shl
xchg
shr
dec
xor
add
jo
mov
push
neg
xor
xchg
dec
adc
mov
sbb
(bad)
inc
mov
dec
push
cmp
mov
ins
popf
xor
call
in
xor
mov
fsub
or
inc
fimul
dec
or
or
and
fcomp
adc
fimul
lock
int
pushf
adc
call
or
add
es
setne
mov
ins
or
daa
outs
lds
or
mov
dec
pop
es
in
in
ss
mov
ss
dec
mov
dec
inc
je
adc
add
imul
arpl
dec
mov
xor
push
cwde
sub
pop
mov
call
lock
xor
jecxz
movs
test
repnz
sbb
xor
sbb
sti
adc
mov
jecxz
ficom
and
ja
jb
xchg
nop
inc
mov
xor
stos
mov
call
push
stos
test
push
shr
js
mov
add
add
push
mov
mov
jle
ins
sub
es
add
xor
jnp
loope
add
test
cs
mov
mov
and
jle
data16
out
push
in
ins
adc
push
adc
jge
mov
mov
xor
sub
and
test
fidiv
mov
add
push
mov
in
(bad)
xor
rol
shr
les
iret
push
mov
xor
add
aam
or
fmul
retf
clc
and
rol
mov
push
stos
data16
data16
sbb
js
test
and
in
add
and
and
cmc
rcl
jecxz
int3
mov
add
hlt
add
js
mov
jp
int3
stos
sar
fs
nop
rol
ret
sbb
ins
or
sbb
aas
clc
mov
pop
sbb
in
inc
mov
ret
int3
add
xor
sbb
gs
adc
ret
cli
or
dec
add
add
inc
xchg
lods
imul
mov
(bad)
dec
repz
push
test
fld
mov
xor
jl
ss
adc
test
je
push
aam
add
sub
pop
sub
jle
inc
mov
loopne
fcomp
add
push
(bad)
sub
test
jne
jl
mov
fmul
arpl
daa
les
aad
adc
push
xchg
or
stc
les
nop
nop
and
(bad)
pop
and
rcr
ins
jle
repnz
lea
test
add
icebp
ror
mov
ja
(bad)
pop
int3
inc
inc
mov
mov
mov
or
add
jg
adc
mov
sub
inc
add
dec
jne
push
ret
ret
add
mov
inc
or
into
inc
cmp
or
adc
cli
jp
push
inc
push
jmp
sub
push
push
sar
adc
xor
adc
inc
or
popa
pop
scas
popf
nop
inc
iret
adc
popf
test
push
hlt
jnp
sar
add
pop
add
or
add
jmp
mov
(bad)
(bad)
stc
jl
add
mov
inc
add
ins
add
pop
or
pop
jbe
add
add
sbb
ds
jnp
xchg
pushf
jmp
fsubr
inc
and
in
jbe
push
cmc
imul
adc
add
add
cmp
jbe
(bad)
xor
adc
xchg
dec
jne
fild
pusha
fs
fld
push
inc
push
(bad)
push
cld
fldcw
cld
into
push
and
dec
add
ret
in
cmp
mov
mov
pop
cmp
mov
pop
lahf
push
test
and
stos
cmp
push
lea
ss
adc
mov
add
test
mov
add
sub
jne
pop
mov
jp
and
dec
xor
and
xor
shl
xchg
pop
dec
sbb
cli
add
fdiv
add
mov
pop
push
cmp
je
or
sub
fwait
dec
clc
xlat
jmp
jno
inc
xchg
lock
mov
arpl
test
call
xor
sub
and
dec
add
mov
(bad)
push
push
add
xchg
pop
cld
jg
aas
xor
cmp
jge
push
xor
xlat
push
pushf
div
cmc
push
mov
and
js
pop
cmovo
sub
fisubr
push
push
jle
jp
push
pop
cmp
push
cmp
shr
ffreep
ss
pop
xor
adc
lahf
push
sbb
pushf
ret
sbb
stos
out
or
or
sub
mov
and
fldln2
push
(bad)
mov
xor
mov
and
call
inc
xchg
push
sub
(bad)
int3
clc
lea
push
push
jne
fimul
test
dec
cld
mov
rcr
xchg
loopne
mov
xchg
xchg
cld
sub
inc
mov
ret
add
loopne
lds
jae
rcr
jl
lea
jbe
cmps
cli
sahf
mov
fcomp
sbb
movs
push
adc
jmp
out
ins
(bad)
(bad)
call
sar
xor
sbb
cmp
scas
ss
push
push
dec
test
jno
push
call
dec
xor
add
mov
retf
mov
xchg
int3
jge
loope
jbe
push
jle
mov
sub
rol
cmc
into
mov
out
fs
sub
lds
lds
rol
mov
add
xor
pop
mov
rcr
lea
pop
or
test
push
inc
sub
loop
jp
add
pop
sub
inc
out
ja
icebp
mov
push
xor
mov
pop
test
sbb
xor
push
adc
or
inc
leave
mov
or
out
push
(bad)
or
aas
xor
xchg
push
aad
mov
xor
fsub
pop
mov
adc
ja
jo
aam
jge
sbb
and
movs
pop
fdiv
test
ja
sub
je
mov
popf
std
rol
sub
xor
inc
fcomp
loop
sbb
mov
push
add
jb
fwait
dec
add
or
sar
xchg
push
aaa
mov
test
je
and
add
js
js
test
sbb
int3
movs
mov
movs
dec
hlt
fstp
mov
lea
cmp
sub
push
and
adc
sub
mov
mov
ds
sbb
and
ror
es
call
adc
inc
ret
daa
into
clc
fild
add
adc
add
in
in
(bad)
sbb
sbb
imul
xchg
or
inc
push
lock
add
lock
jb
nop
in
in
lock
sbb
(bad)
mov
inc
cmp
push
neg
data16
(bad)
sar
test
cmp
lods
(bad)
inc
add
cmp
jo
fsub
pop
pop
pop
dec
mov
jb
inc
push
xchg
outs
push
movs
jno
test
ds
sbb
and
not
jmp
pop
popf
daa
adc
enter
inc
inc
xchg
test
add
cmp
imul
mov
mov
jl
sti
mov
mov
ins
aaa
add
dec
pushf
jbe
adc
js
mov
call
xchg
jne
adc
xchg
shr
mov
dec
sbb
fstp
jmp
adc
xchg
call
mov
mov
pushf
cmp
or
pop
inc
or
sbb
adc
stos
or
fs
dec
adc
push
xchg
dec
es
inc
sub
ja
(bad)
sar
dec
repz
imul
jns
repz
sbb
mov
mov
pop
(bad)
dec
adc
inc
inc
and
je
jg
sbb
fcomp
or
mov
sub
push
shl
jne
sub
or
xor
xor
or
mov
outs
mov
sbb
je
ror
lea
ret
inc
outs
popf
pushf
mov
pushf
pop
and
out
dec
mov
cmp
push
test
jne
cmp
fsubrp
cwde
(bad)
in
fidivr
retf
fidiv
or
cmp
nop
out
push
add
es
mov
mov
add
je
push
data16
and
aad
add
sbb
push
xor
mov
dec
jno
lea
cwde
add
out
mov
mov
or
and
mov
les
leave
add
mov
ret
mov
(bad)
sbb
push
scas
and
add
sub
mov
inc
retf
rep
fcomp
imul
ins
bound
bound
popf
jl
add
shl
(bad)
sbb
xchg
sub
dec
dec
sub
bound
bound
cmp
and
push
dec
xchg
sub
jmp
dec
not
push
dec
sar
adc
jmp
push
inc
push
jmp
pop
lahf
pop
or
fst
or
int3
and
imul
mov
add
pop
add
cld
mov
hlt
mov
add
ins
jmp
add
add
cmps
push
adc
and
xor
pop
xor
push
adc
cs
inc
mov
dec
adc
add
dec
lods
inc
inc
scas
in
call
mov
outs
push
and
rcl
sbb
sbb
inc
outs
inc
add
call
inc
jp
mov
cmp
push
sbb
jns
pop
push
add
dec
(bad)
pop
rcr
jno
push
sbb
add
inc
ds
push
add
inc
adc
lahf
and
mov
jns
(bad)
mov
rcl
xor
sub
nop
xchg
add
and
add
push
movs
cdq
or
je
jle
xlat
imul
popa
or
mov
pop
dec
pop
ficom
iret
cmp
xchg
xor
packuswb
test
shl
mov
add
inc
sbb
sub
add
sub
cmps
sub
add
or
sub
add
push
pop
mov
loopne
and
sub
popa
inc
sbb
adc
call
(bad)
ins
push
fld
test
ja
fist
push
xlat
data16
cmp
add
inc
pop
sbb
sbb
fdivr
dec
or
push
add
adc
dec
or
shl
adc
clc
mov
pusha
adc
dec
sub
inc
and
and
ja
rcr
jb
or
push
xchg
mov
ret
mov
sbb
ja
sahf
mov
jae
push
sub
sbb
fmul
and
sub
sbb
(bad)
xor
add
pop
xor
and
inc
inc
rol
mov
push
sbb
ret
rcr
and
sbb
and
xor
or
lea
or
or
ret
(bad)
je
or
push
lea
(bad)
push
retf
push
shl
fimul
adc
and
push
sub
loopne
sbb
sbb
sahf
mov
cmp
push
icebp
adc
jl
fimul
jp
jo
aam
fdivr
test
je
adc
fs
lods
cmp
add
aaa
test
jge
dec
push
dec
cmp
jl
and
pop
outs
fwait
push
sahf
jp
daa
pop
pop
or
retf
dec
or
or
daa
dec
jae
aaa
xor
adc
xor
dec
add
add
(bad)
jl
shl
pop
mov
jmp
and
pusha
mov
aaa
inc
jae
and
pop
test
mov
les
cmp
pusha
fs
push
dec
add
dec
shl
or
push
pop
xor
or
test
add
cmc
rep
mov
and
bound
xchg
lods
inc
clc
test
retf
jnp
pop
je
and
add
arpl
call
mov
mov
or
gs
inc
inc
js
push
add
stos
cdq
add
lea
ror
dec
dec
mov
push
push
push
sub
enter
add
(bad)
loope
ror
push
add
outs
and
push
test
push
pop
push
(bad)
pusha
mov
aaa
or
jo
add
mov
add
add
add
adc
out
fcmovnu
and
pop
mov
lock
scas
cmp
mov
push
push
arpl
mov
lahf
sub
or
push
call
mov
xor
push
or
push
push
xchg
idiv
mov
dec
pushf
jb
pop
push
push
jle
adc
dec
sti
mov
fst
push
or
push
pop
pop
dec
add
dec
xor
add
pushf
push
push
mov
inc
add
test
and
cmp
push
jmp
mov
jb
jge
push
lods
push
xlat
or
xchg
mov
pusha
add
adc
push
retf
push
arpl
add
ret
adc
aam
lods
mov
dec
or
mov
mov
ds
adc
in
int3
sub
les
sbb
ficom
xor
stos
push
sbb
add
imul
adc
add
inc
add
inc
sub
mov
or
mov
push
sbb
stos
dec
ret
iret
lods
mov
mov
into
push
and
add
xlat
push
and
stos
adc
and
sar
mov
hlt
je
(bad)
xor
jbe
adc
jbe
popa
jp
jmp
dec
rol
xor
jmp
mov
fsubr
adc
mov
ss
fwait
jae
add
or
add
add
shl
and
jp
adc
push
pop
ret
fisub
int
and
pop
into
sub
cmp
push
pop
cdq
cmp
imul
movs
pop
test
cmp
ja
pop
adc
add
jle
or
inc
sbb
pop
add
dec
inc
aaa
inc
jns
mov
and
add
sub
mov
or
mov
push
push
xor
inc
and
xchg
inc
sbb
and
jg
pop
(bad)
cmp
je
pushf
jg
xchg
stos
daa
push
add
out
mov
lea
(bad)
jae
jne
pop
mov
or
push
sbb
or
cmp
adc
inc
call
adc
push
inc
je
cmp
pop
ins
out
pop
inc
push
neg
add
mov
xor
inc
test
inc
mov
mov
mov
push
inc
ret
or
sub
inc
ins
outs
ja
push
cmp
sub
ins
je
jo
cmp
jb
outs
ins
je
jmp
pop
fadd
xor
stc
mov
jns
fcmovnu
into
mov
jmp
pushf
jb
je
or
arpl
out
cmp
ss
xor
jbe
in
adc
pop
push
and
pop
clc
xor
xor
mov
mov
pop
cmp
push
sub
in
lahf
push
je
cmp
aas
push
cwde
and
cmp
jns
mov
rcl
mov
inc
cmp
test
sar
or
mov
pop
push
outs
sahf
rol
cli
out
push
fisttp
add
stc
cs
add
xchg
icebp
jge
xor
add
stos
mul
mov
pop
and
dec
xor
jmp
int
push
or
shl
or
jmp
cmc
test
cmp
sub
dec
add
lock
pop
loop
cmp
ja
push
rcr
pop
pop
stos
pop
inc
(bad)
(bad)
or
adc
sub
and
and
inc
cmp
popa
popf
or
mov
pop
sub
mov
mov
and
push
xchg
loopne
xchg
ret
retf
stos
or
sbb
enter
and
movs
int3
or
ffreep
adc
call
(bad)
cmc
leave
js
sar
push
sti
dec
inc
push
enter
push
dec
push
nop
push
aam
mov
sbb
imul
mov
pop
shl
icebp
jne
mov
pop
sbb
movs
int3
xor
add
pop
pop
pop
inc
sbb
xchg
pop
inc
add
je
call
mov
arpl
iret
in
js
popa
dec
xor
inc
mov
fstp
push
call
addr16
aad
inc
mov
xor
dec
inc
and
cmps
push
mov
clc
fisttp
call
fs
add
pop
shl
push
pop
or
or
rol
add
rol
mov
jbe
pop
cmp
pop
adc
hlt
add
cmp
jbe
movs
add
push
dec
add
shr
mov
and
test
mov
inc
mov
test
cs
jne
xor
push
das
pop
jno
inc
test
pop
cmp
cmp
loopne
popa
adc
xchg
add
jbe
adc
or
in
pusha
jmp
sub
sar
cmp
or
into
push
push
or
push
or
cmp
fbstp
lods
mov
add
add
dec
dec
ror
sub
adc
or
sub
pop
and
sbb
enterw
cmp
and
jle
cli
inc
jmp
pop
adc
into
jl
shl
jbe
idiv
dec
add
es
ret
lahf
pop
shr
cld
les
icebp
xor
sub
iret
mov
div
push
outs
mov
xchg
or
or
dec
pop
xlat
outs
sbb
sub
xchg
adc
dec
push
push
dec
mov
test
in
add
cmp
les
inc
and
ins
xor
cmp
bndldx
dec
cli
push
push
fnstenv
mov
or
je
mov
add
or
je
inc
(bad)
xchg
and
jecxz
ror
add
fiadd
jle
sub
test
xchg
jg
jmp
pop
add
and
ja
mov
add
dec
pop
popa
scas
add
push
rcl
fst
push
mov
nop
xchg
stc
sub
push
pop
call
aas
mov
cmp
jne
pop
je
or
fisubr
mov
inc
je
push
mov
push
(bad)
push
sbb
das
xchg
dec
lods
mov
jnp
and
cmp
cli
scas
xchg
jo
or
add
test
stos
es
cmp
popf
movs
or
call
mov
rcl
ficom
adc
or
std
es
add
add
sbb
mov
(bad)
cld
test
jne
or
jmp
test
jne
mov
jne
js
push
xor
rol
mov
je
sbb
inc
cmp
dec
sbb
lods
pop
push
add
or
or
jmp
or
inc
jp
inc
dec
sbb
stc
sbb
add
test
xor
out
ret
out
out
jns
std
add
or
adc
add
add
in
add
add
and
nop
cmp
push
pop
arpl
cmp
pop
add
add
add
push
arpl
add
adc
pop
push
push
outs
add
ret
jmp
loopne
lods
sbb
push
push
cmp
and
nop
or
inc
sahf
aas
cmps
add
sub
push
movs
ja
out
push
dec
fcmovnu
aam
fucompp
and
fwait
sbb
dec
pushf
hlt
cmp
(bad)
adc
div
push
mov
mov
push
or
daa
push
mov
not
pop
into
add
fdivr
jb
retf
adc
ficom
or
cmp
push
aam
into
(bad)
(bad)
mov
out
or
jbe
cmp
mov
xchg
fbld
or
out
aam
adc
imul
pop
add
or
pusha
test
inc
push
nop
lock
cli
adc
or
arpl
mov
aam
mov
cmp
pop
mov
div
and
aad
pop
enter
aaa
xor
adc
mov
mov
iret
arpl
out
pop
imul
mov
adc
push
jge
mov
adc
push
sub
dec
mov
div
mov
hlt
adc
add
fiadd
sub
cmc
inc
mov
fstp
cmp
jo
mov
movs
call
ret
adc
adc
sbb
sub
sub
push
pop
adc
xchg
mov
push
xchg
jbe
sub
xchg
pop
mov
popa
or
cmp
mov
add
pusha
or
cmp
add
add
pop
mov
mov
js
lea
sbb
sar
mov
push
rol
push
test
mov
cmp
scas
dec
test
add
inc
fimul
test
stos
sbb
out
sar
push
mov
sub
jmp
xor
mov
es
and
icebp
(bad)
pop
les
add
jbe
rol
or
jl
and
shl
(bad)
adc
and
cld
adc
jmp
adc
push
imul
push
push
jns
mov
(bad)
xlat
dec
jo
arpl
dec
xchg
jae
sub
test
mov
sar
sub
dec
call
inc
pop
pop
xor
push
and
retf
dec
inc
or
popf
shl
outs
push
cs
or
sbb
xor
test
inc
loopne
xor
mov
dec
xchg
sbb
fadd
pop
mov
(bad)
(bad)
rcl
shr
(bad)
cmc
dec
or
xor
push
mov
cmp
cli
mov
fdivr
xor
sbb
shl
and
xchg
sub
icebp
inc
mov
xor
shl
neg
shl
push
sub
add
sbb
xor
push
repz
inc
sub
inc
fdiv
jb
jmp
push
nop
mov
mov
sbb
xchg
(bad)
xor
dec
jnp
mov
shl
shl
push
addr16
jno
sbb
repz
jb
push
inc
mov
mov
or
popa
ss
movs
sub
stos
mov
adc
dec
mov
push
fidiv
push
dec
dec
push
test
push
mov
inc
(bad)
add
jne
cmp
leave
adc
mov
(bad)
aas
shl
sti
push
mov
inc
test
xchg
call
sbb
jg
and
mov
mul
add
stos
inc
cmp
jae
xor
sub
call
and
xchg
(bad)
jmp
loopne
sub
jl
cmp
jb
xor
inc
inc
mov
cmp
jbe
in
movs
jnp
sar
jae
mov
int
pop
repz
inc
inc
data16
add
pop
jb
leave
lea
push
add
dec
xchg
mov
push
push
outs
mov
inc
mov
jmp
cmp
out
cmc
push
pop
and
xchg
sub
sbb
dec
inc
lahf
pop
adc
sub
push
int
in
mov
jno
push
and
icebp
mov
pop
aam
or
dec
ins
xchg
icebp
repnz
push
pusha
and
push
sbb
inc
je
mov
stos
jcxz
sub
mov
jl
xor
inc
shl
mov
xor
and
(bad)
fisttp
cwde
popa
or
out
rcl
pop
fld
lods
sub
mov
pop
mov
rcl
sahf
retf
ret
pusha
or
adc
sub
in
cli
jmp
or
cs
popf
nop
lahf
adc
scas
lahf
push
push
pop
pop
out
add
jae
loope
push
ss
adc
imul
outs
popa
cmps
or
je
pusha
cmp
retf
test
add
mov
add
cmp
jp
add
sbb
div
lea
adc
pop
loope
inc
rol
dec
jne
cwde
jne
push
xor
sbb
sub
adc
xchg
cmp
pop
je
or
mov
or
dec
cmp
(bad)
int
push
push
cmc
xchg
jle
inc
shr
inc
push
dec
push
jne
push
add
or
in
or
mov
push
mov
dec
adc
test
jb
mov
test
or
ins
xor
imul
pop
mov
push
call
dec
bound
sbb
push
dec
arpl
jb
daa
cmp
inc
dec
inc
cmps
ins
pop
std
xchg
popa
pop
push
dec
push
inc
outs
add
sbb
pop
xor
das
jae
xchg
sbb
sub
or
ins
dec
lods
(bad)
in
push
inc
inc
imul
(bad)
js
je
inc
(bad)
mov
inc
dec
dec
das
mov
jns
mov
push
jnp
pop
jp
mov
(bad)
cld
mov
mov
add
scas
sbb
add
(bad)
mov
js
jne
jge
dec
dec
mov
(bad)
mov
loopne
xchg
inc
push
(bad)
or
jne
xchg
test
xor
test
jbe
mov
mov
mov
test
adc
adc
jne
mov
das
adc
adc
mov
mov
inc
enter
jmp
push
sub
sti
adc
ret
push
add
mov
leave
mov
shr
inc
push
mov
mov
aad
add
dec
test
nop
loop
cs
in
add
popf
adc
shr
add
jne
cmp
mov
and
and
test
repnz
enter
test
(bad)
leave
push
and
cmp
je
popf
mov
test
or
fnstenv
inc
ss
mov
xor
data16
add
adc
sbb
test
pop
sbb
push
fsubr
pop
and
test
mov
pop
xchg
mov
cmovg
das
(bad)
xor
adc
cld
ds
push
inc
push
adc
pop
sahf
mov
pop
or
cmps
sahf
xchg
test
inc
mov
add
idiv
jge
pusha
push
pop
jmp
mov
pop
test
sbb
inc
or
lods
xchg
sbb
popa
jmp
test
jl
push
mov
imul
pop
ror
loopne
push
cmp
xor
push
inc
mov
mov
rcr
jl
inc
and
cmp
jae
mov
push
adc
sub
cmp
call
sub
(bad)
inc
xor
inc
ds
push
inc
(bad)
(bad)
in
cmp
mov
int3
xchg
adc
sbb
imul
scas
ficom
bound
lods
or
push
xchg
jg
dec
popa
lock
or
dec
cmp
or
jne
cmp
sub
(bad)
fdiv
add
cmc
cwde
xchg
ja
jp
jg
shl
add
sub
or
add
dec
retf
les
push
lea
lahf
or
mov
repnz
jo
bound
js
call
hlt
(bad)
adc
movs
hlt
pop
inc
retf
mov
test
ficom
sbb
ss
daa
push
dec
dec
jne
fneni(8087
adc
jmp
or
enter
jl
test
inc
xor
sar
nop
mov
ret
dec
cmc
xchg
pop
ror
hlt
push
lds
add
or
dec
push
xor
test
inc
and
mov
and
jmp
adc
cmp
jo
push
mov
fcom
pop
and
int3
fadd
test
test
pop
or
dec
lods
sar
cdq
(bad)
xchg
loopne
loop
pop
sbb
inc
or
push
xchg
fidivr
cmp
mov
dec
push
pop
js
je
inc
test
je
xchg
sbb
sbb
ins
cmp
cmp
cmc
mov
dec
jmp
enter
aam
mov
imul
push
adc
mov
sub
xchg
in
mov
sub
mov
pop
push
mov
sub
mov
jle
xchg
inc
push
add
jmp
mov
or
mov
xlat
cmp
sbb
dec
sbb
call
jo
inc
adc
push
or
and
push
test
pop
aas
pusha
loope
ret
or
rol
mov
jecxz
inc
xor
jbe
mov
sbb
adc
jg
adc
or
lock
jne
(bad)
nop
mov
loopne
mov
pop
jne
(bad)
mov
mov
or
push
mov
mov
cmp
pop
inc
ror
inc
jle
lock
sbb
rol
pushf
cmp
push
nop
movs
inc
mov
fdiv
adc
imul
jo
pusha
adc
inc
pop
lock
shl
loopne
or
dec
and
mov
push
jo
jnp
add
push
loope
xchg
push
push
das
lahf
shl
(bad)
shr
repz
pop
dec
and
pop
rol
ds
sub
pop
ds
mov
sub
inc
pop
fsubr
cli
xchg
mov
inc
cmp
test
push
mov
add
data16
sub
mov
add
xchg
jnp
add
loop
lea
mov
jge
sti
test
mov
push
add
pop
push
sahf
mov
clc
xchg
retf
and
jbe
hlt
push
das
xchg
mov
mov
dec
jns
xchg
lds
mov
push
sbb
call
push
call
or
mov
sub
sub
mov
das
(bad)
icebp
jecxz
pop
pop
ror
lock
sub
sub
cmp
ucomiss
lods
and
add
nop
and
xor
test
mov
mov
loop
fimul
dec
mov
sbb
neg
inc
mov
xor
ficomp
std
mov
fiadd
cmp
cmp
dec
test
outs
push
xor
or
ret
aaa
hlt
or
push
and
js
add
sbb
(bad)
pushf
ss
cmps
cmp
add
push
ret
bnd
loope
jp
ss
jg
push
push
push
stos
into
mov
sti
test
(bad)
mov
mov
cmp
stos
sbb
sbb
xchg
and
pop
jl
shr
mov
xchg
scas
or
mov
xchg
push
and
fmul
(bad)
in
dec
xor
ins
movs
add
out
xchg
cmp
jbe
xor
mov
clc
or
retf
dec
inc
pop
pop
retf
cld
cmp
(bad)
push
sbb
pop
and
xor
xchg
sar
nop
xchg
sub
push
retf
add
test
adc
xchg
sar
xor
inc
ins
mov
jbe
and
push
out
ret
or
xor
(bad)
xchg
add
test
adc
xor
and
xchg
jno
loop
pusha
cs
jecxz
in
or
les
(bad)
test
dec
jb
pop
and
dec
shr
cmp
adc
lock
mov
inc
mov
out
mov
sbb
jae
push
sbb
pushf
pop
jg
inc
les
xchg
xchg
add
add
cld
or
iret
pop
cmp
out
cmp
jge
push
stos
pop
jmp
add
sbb
push
vpunpcklbw
mov
push
fnstenv
mov
(bad)
fcom
loope
mov
or
fdivr
fcmovnb
push
or
mov
sub
push
or
or
or
arpl
push
inc
ins
and
pop
add
jo
test
js
out
push
int3
mov
cmp
xlat
cmp
das
test
loopne
aaa
je
mov
das
cmp
xor
push
out
xor
leave
add
push
cmp
sbb
and
enter
mov
mov
jae
mov
out
aas
mov
mov
jb
xor
imul
add
in
inc
retf
or
inc
push
push
hlt
test
adc
clc
adc
rol
xchg
rol
repz
and
push
dec
xchg
push
jecxz
pop
mov
(bad)
cs
lock
arpl
jne
pop
push
push
and
mov
sub
bound
adc
or
jb
fwait
jne
cmp
sbb
sub
retf
scas
fcmovbe
into
jmp
mov
sub
push
icebp
inc
inc
out
or
stos
test
(bad)
mov
in
loope
mov
mov
add
cmps
xchg
push
ss
push
cwde
rcl
push
inc
mov
cmps
mov
push
sbb
arpl
stos
push
out
and
dec
aam
mov
and
push
sbb
xor
emms
cmp
cmp
dec
shl
mov
add
push
cmp
jb
shl
mov
in
popf
sub
out
sub
inc
dec
cmp
je
lods
test
adc
add
add
inc
add
cld
dec
pop
add
push
popf
out
xor
aam
inc
test
movs
pusha
call
push
push
dec
mov
rcr
inc
cmp
ror
push
aas
pusha
mov
adc
jmp
pop
inc
popa
or
inc
sub
mov
xchg
push
mov
xchg
jb
and
das
enter
gs
je
push
cmp
sub
loopne
pop
dec
outs
mov
jb
inc
or
push
sti
add
fs
enter
cmc
push
fwait
retf
adc
adc
ins
push
bsf
or
cld
loopne
popf
push
xor
xor
pop
bound
pusha
pop
push
pushf
or
push
dec
cmp
sbb
js
fdivr
sub
sub
and
sub
inc
adc
popf
cmp
ja
dec
fadd
ins
hlt
or
mov
mov
jne
or
sahf
pop
xchg
or
icebp
adc
popf
or
or
(bad)
push
loopne
push
add
push
add
cmp
jg
fcomp
xchg
test
or
sti
leave
mov
cmc
(bad)
or
xchg
ja
mov
add
and
inc
mov
xor
dec
or
jne
push
jmp
inc
ins
push
sub
push
xor
xor
cmp
lea
enter
add
xor
mov
inc
mov
(bad)
cli
loop
bound
pop
sub
mov
and
(bad)
aam
push
dec
les
retf
dec
repnz
jo
shr
ret
out
push
jmp
mov
jmp
sar
jle
(bad)
ss
jb
je
out
or
inc
xlat
ins
or
addr16
inc
(bad)
push
out
fbstp
lea
ins
mov
add
sub
mov
inc
mov
test
out
push
popa
sub
shl
cdq
test
(bad)
lock
cmps
nop
rcl
inc
jno
xor
div
jne
jo
push
inc
lods
inc
add
add
push
pop
inc
pop
movs
lods
sub
pushf
push
loop
jmp
outs
cmp
cs
das
xchg
cmp
mov
jb
std
int
add
sub
mov
outs
movs
mov
inc
pop
dec
inc
or
sub
xor
mov
test
mov
daa
sbb
lea
or
sub
jno
mov
mov
movs
inc
je
dec
mov
jmp
jecxz
xor
add
(bad)
icebp
mov
dec
int3
daa
pop
add
(bad)
mov
xor
inc
or
mov
xchg
pushf
push
add
xor
inc
inc
jne
cmp
mov
(bad)
adc
xor
fisttp
mov
(bad)
sbb
cdq
cs
mov
test
push
test
dec
enter
fstp
cmp
mov
pusha
rol
nop
dec
mov
aaa
loopne
fidiv
ror
dec
mov
push
dec
dec
push
hsubpd
(bad)
fsub
out
(bad)
push
dec
xchg
push
jmp
xchg
test
pop
lock
adc
adc
xor
push
inc
xlat
dec
push
adc
xchg
ret
rol
xchg
es
mov
rol
cmp
jne
cmp
ins
lea
push
xor
inc
or
into
push
call
ins
pop
and
enter
and
shl
pop
xchg
inc
stos
push
in
je
sahf
jbe
xchg
sub
sahf
inc
push
inc
icebp
lds
xchg
pusha
pop
out
cmp
jmp
out
jbe
push
test
jae
ja
data16
mov
mov
mov
jb
ror
sbb
inc
jne
inc
bound
call
xor
xor
inc
ret
cmp
std
or
sub
(bad)
jae
cmp
sbb
jmp
pop
fsub
pop
sub
push
int3
or
bound
fwait
ins
rol
push
(bad)
jmp
out
fbstp
sti
mov
pop
mov
push
lods
retf
fisttp
dec
jge
sub
js
dec
mov
les
cdq
jmp
push
xor
mov
xchg
and
xor
jge
lods
ins
or
cs
push
push
sub
and
push
mov
jne
and
pop
push
ds
push
and
pop
dec
call
adc
sub
ret
div
push
(bad)
jmp
and
inc
or
rol
mov
mov
add
jne
sub
jo
add
sbb
mov
ja
in
inc
lods
sub
pop
add
inc
mov
test
sbb
xchg
sub
xchg
into
cmp
nop
xchg
sti
sahf
(bad)
lods
mov
adc
out
ret
inc
xchg
add
push
inc
pop
push
ins
push
dec
mov
jmp
dec
and
bound
add
add
sub
xchg
add
sbb
movs
mov
xor
loope
neg
sbb
adc
adc
and
rol
pop
mov
or
adc
lds
icebp
stos
jo
(bad)
dec
je
inc
xchg
inc
daa
pusha
xchg
rcr
adc
cmp
and
xchg
push
in
ja
push
ror
push
pop
scas
in
rol
ret
xchg
ret
push
sub
inc
cmp
and
and
mov
push
lods
add
inc
jp
push
(bad)
cs
test
xor
xchg
cld
sub
and
xchg
sbb
(bad)
fstp
adc
test
out
pop
sahf
xchg
hlt
or
inc
test
add
xchg
mov
and
pop
in
mov
mov
jge
xor
movs
sbb
xchg
mov
push
out
cmp
rol
adc
call
mov
add
ror
dec
call
jo
(bad)
test
and
ret
pop
outs
sub
lods
push
fldenv
jmp
push
xchg
into
xor
repnz
mov
stos
adc
fldcw
dec
sar
sbb
iret
sbb
or
cmp
mov
adc
pop
cmps
lea
add
ret
adc
cmp
cmc
ins
fcmove
push
shl
push
sub
jmp
add
jns
cmp
shl
sub
xchg
dec
std
pop
leave
add
shl
xor
icebp
fbstp
pop
mov
fisttp
dec
cmp
ds
lea
pop
in
push
inc
lock
push
mov
sahf
inc
movs
cwde
je
gs
and
dec
test
adc
add
into
mov
imul
repnz
je
cmp
into
mov
in
sub
or
ss
fnstenv
mov
dec
xlat
(bad)
dec
call
xchg
mov
sti
xor
fwait
mov
shr
and
das
lds
in
or
add
or
add
lea
pusha
ds
in
inc
sub
fdiv
(bad)
or
add
mov
cmp
test
dec
addr16
pusha
adc
add
loope
or
fisubr
in
add
sbb
mov
sahf
pop
ins
mul
sbb
sbb
adc
jmp
mov
dec
fbld
(bad)
imul
out
xor
add
add
test
or
or
pop
cmp
sub
and
fiadd
rcl
push
jle
add
inc
fs
adc
sbb
jo
or
or
ja
or
fsubr
push
mov
xor
cmp
(bad)
mov
mov
add
mov
das
iret
xor
repz
mov
push
lahf
icebp
cmp
jnp
nop
int3
push
les
movs
xchg
or
adc
xor
(bad)
ficom
push
jno
es
loop
neg
mov
fst
arpl
cmp
movs
jnp
inc
push
js
add
xchg
xor
push
push
inc
sub
inc
movs
retf
xchg
(bad)
xor
imul
dec
mov
cmp
xor
xor
sub
loop
lds
cmp
je
popa
push
xor
push
jo
cmps
cmp
xor
(bad)
fiadd
fcomip
mov
pop
add
mov
cmp
retf
pop
je
add
inc
xchg
inc
mov
ret
stos
in
mov
cdq
dec
add
lds
push
push
je
cmp
sub
aaa
stos
sbb
sbb
aad
mov
add
outs
cmp
je
jmp
push
sbb
cwde
js
inc
popa
sbb
cmp
cmp
inc
add
cmp
mov
jb
mov
push
jne
adc
jmp
cmp
imul
jge
cdq
pusha
je
in
mov
mov
cmp
imul
push
fdivp
call
not
imul
adc
add
and
je
inc
adc
test
enter
inc
js
push
das
sbb
sub
pop
mov
scas
push
dec
sub
or
add
pop
scas
adc
pop
in
call
ja
jecxz
jmp
push
push
or
fistp
loop
cmp
cmps
ss
mov
dec
ins
sbb
hlt
pop
push
or
adc
pop
sub
adc
daa
or
popa
sbb
xor
xchg
and
outs
and
lock
fimul
inc
fadd
push
mov
mov
rcr
shl
add
add
cli
sbb
lea
sbb
mov
add
call
jecxz
sbb
add
or
shr
jg
outs
out
dec
in
popa
sub
mov
lea
iret
sbb
xlat
and
out
pop
aam
sbb
dec
jge
lea
int
loope
loop
cli
or
or
mov
push
rcr
adc
movs
lock
cmp
inc
and
cmp
out
sbb
inc
and
js
fcom
cli
or
clc
add
fs
ror
ror
adc
popf
mov
xor
xor
pop
xor
das
cmp
xchg
enter
aaa
lods
inc
add
call
stc
in
and
add
or
call
xor
lea
cmp
aam
outs
icebp
jae
mov
mov
mov
dec
push
push
loop
ss
mov
add
cmp
jb
or
jno
sub
fisttp
cmp
imul
pop
(bad)
jmp
cmp
jbe
jmp
sbb
pop
xchg
push
add
inc
pushf
outs
add
rcr
inc
cs
mov
sbb
std
aas
sub
ror
in
mov
adc
cmp
retf
cmps
mov
xchg
add
mov
xlat
mov
cwde
mov
mov
scas
fstp
add
mov
ret
imul
ror
ds
jae
fcomp
shl
jmp
push
fstp
mov
add
push
jne
sub
test
or
shl
test
movs
and
jb
push
jp
adc
fs
cld
sub
cmp
dec
adc
cli
push
push
xor
out
inc
dec
cmp
push
xor
call
jle
add
cs
fs
shr
mov
clc
stos
xor
jo
push
inc
cmp
iret
mov
inc
in
call
cmc
sbb
add
(bad)
mov
dec
push
xchg
mov
mov
shl
shl
ret
xor
test
add
mov
or
dec
add
sbb
je
push
shl
test
dec
push
bound
xchg
add
test
add
pop
push
enter
xlat
call
scas
test
mov
sti
les
lahf
fsubr
or
and
jo
pop
add
dec
lods
sub
jl
push
sbb
cmp
adc
sub
movs
sbb
pop
mov
fwait
push
aam
(bad)
arpl
popa
sub
jo
sbb
loopne
in
sti
jno
add
add
test
inc
adc
(bad)
out
push
or
out
push
sub
sar
sbb
mov
or
and
add
dec
add
sub
jne
inc
sub
adc
add
inc
(bad)
mov
jecxz
clc
add
ja
pop
push
daa
mov
sbb
std
or
(bad)
fild
das
into
(bad)
in
inc
and
mov
or
lea
sar
mov
jmp
sbb
push
sub
push
nop
pop
mov
inc
enter
cdq
div
mov
loop
sbb
and
lea
or
push
dec
icebp
clc
ret
cli
dec
adc
cwde
cs
popf
or
push
ret
test
mov
call
add
daa
jo
dec
fidiv
mov
pop
or
mov
iret
jo
sub
pop
cmp
lods
cmps
in
adc
cmp
fadd
jae
dec
add
nop
jne
or
es
rol
in
xor
inc
cwde
xor
or
cmp
mov
mov
lock
je
jle
imul
or
imul
mov
inc
addr16
pop
cs
sub
call
push
mov
mov
push
or
jge
push
ja
jb
inc
and
cmps
adc
sub
dec
xchg
push
int
fwait
cmp
jmp
dec
sub
add
inc
mov
sar
or
adc
push
(bad)
out
fdivr
dec
jne
inc
add
int3
and
and
dec
push
loopne
(bad)
xlat
push
cld
xor
and
push
or
xor
sbb
add
and
shl
cmp
push
jecxz
das
sub
pop
inc
rol
xor
fs
mov
mov
mov
sub
shl
mov
pop
mov
std
pop
pop
jp
stc
cmc
sar
mov
xchg
pop
push
ret
je
push
xchg
xchg
out
and
movs
icebp
clc
cmp
xchg
mov
mov
mov
sub
stc
mov
bnd
not
and
cmp
mov
mov
ret
out
pop
hlt
mov
or
imul
jae
or
cmp
xor
mov
dec
cli
pushf
das
mov
cmps
je
loop
psubsb
sub
or
data16
data16
ret
(bad)
adc
pusha
mov
call
inc
sbb
das
sub
jb
add
or
xlat
xchg
sar
pusha
push
cmp
mov
mov
add
ficom
test
mov
loope
inc
cs
or
mov
aam
loopne
inc
fisubr
mov
adc
jae
adc
push
mov
jecxz
pinsrw
pusha
loopne
cmp
adc
shl
pop
shl
sub
dec
sar
retf
fisttp
sbb
jecxz
add
push
or
ins
sub
js
ret
or
scas
aad
add
test
mov
cld
lock
inc
out
add
and
inc
xchg
pop
jmp
sub
pop
xchg
fs
adc
sbb
pop
fild
sub
dec
or
pop
push
(bad)
sub
lock
das
das
adc
cmps
dec
xor
or
enter
es
or
adc
nop
cmp
ss
popa
pushf
mov
test
dec
sbb
(bad)
dec
xor
adc
mov
ror
inc
sbb
sbb
add
or
xor
mov
pop
adc
push
sbb
and
popa
xor
mov
call
ds
pop
adc
lock
pop
je
sti
xor
stos
leave
in
and
mov
xor
push
cdq
add
stos
inc
stos
das
jne
cwde
lods
pop
aad
inc
int
cmp
add
cli
sbb
aas
sbb
shrd
not
aaa
xor
mov
int
add
lea
or
into
test
dec
mov
(bad)
push
xlat
jo
gs
dec
scas
push
xchg
scas
inc
dec
(bad)
mov
fisub
das
cmps
pop
into
push
jmp
push
popf
shr
or
clc
push
retf
aad
loopne
cmp
add
shl
lea
loopne
push
mov
push
and
aad
add
inc
ins
adc
xor
pusha
mov
cs
js
mov
test
cmp
xor
mov
shl
pusha
xor
add
movs
sub
repnz
gs
sub
shl
enter
pushf
push
lea
pop
aad
push
dec
cmps
push
outs
fstp
xor
into
push
sub
or
push
cmp
push
sbb
push
pop
les
mov
add
pushf
jmp
stos
and
inc
push
ja
outs
xchg
movs
lds
sti
mov
sub
outs
lds
pop
dec
pop
ins
mov
sub
sbb
jmp
cmp
add
iret
icebp
adc
loop
ficom
or
dec
jbe
enter
stc
arpl
mov
call
(bad)
mov
std
cli
push
push
and
xor
cld
pop
lock
out
ror
ins
dec
rol
push
lods
pop
out
aas
aam
mov
retf
cmp
push
call
cmp
es
and
adc
aad
mov
pusha
cmp
push
mov
jbe
outs
mov
sbb
jbe
or
jp
dec
aam
and
pop
sbb
cmp
rcr
sbb
fiadd
push
adc
push
sbb
repnz
pop
das
ja
mov
push
jo
inc
fiadd
or
dec
jmp
ds
imul
inc
xchg
xor
adc
fnstenv
push
psubusw
sub
adc
jl
pop
push
repz
push
jno
dec
mov
dec
js
int3
and
sub
push
out
test
adc
push
sub
ja
fisttp
or
popa
cs
pop
jae
jb
jecxz
shl
leave
ret
pop
push
sub
rcr
xor
jb
dec
cld
inc
and
cmp
pop
mov
add
or
cld
mov
sbb
mov
push
outs
icebp
xor
sbb
cdq
dec
leave
test
dec
lea
test
sti
push
mov
mov
adc
sbb
and
pop
cmp
clc
mov
mov
pop
xchg
pushf
inc
jle
gs
cmp
lea
and
mov
ret
fs
test
dec
scas
sub
aam
fld
retf
lods
test
add
jbe
and
mov
xchg
and
les
push
int3
das
jbe
jns
pop
push
in
dec
cs
mov
fsubr
in
lock
or
fs
add
or
movs
push
loopne
lock
dec
nop
adc
sbb
pop
das
adc
nop
fild
das
adc
test
inc
outs
pop
rcl
aaa
dec
inc
leave
adc
add
sbb
push
and
sbb
xchg
and
and
xchg
lock
pop
inc
ss
ret
cmp
xor
sub
and
push
push
in
cmp
fisubr
and
and
push
les
mov
in
scas
push
mov
retf
and
fbld
dec
jle
jmp
scas
jmp
jns
inc
pop
(bad)
inc
push
dec
fisub
(bad)
inc
inc
xchg
neg
push
ss
fisub
in
dec
push
push
push
repnz
dec
adc
add
push
dec
pop
add
(bad)
xlat
add
enter
pop
adc
ins
pop
push
xor
push
or
sub
inc
jecxz
test
lea
push
or
loope
add
add
sbb
mov
xor
dec
lods
rcr
sbb
pop
mov
adc
pop
inc
or
getsec
mov
add
inc
add
sbb
jb
pop
dec
rol
push
je
movs
in
mov
gs
sbb
imul
mov
pop
inc
addr16
out
in
or
xchg
adc
push
mov
sbb
ins
adc
sub
inc
js
add
sbb
stos
sub
dec
or
add
dec
lea
push
leave
jge
add
lea
outs
xchg
jge
mov
push
imul
stos
adc
rol
sbb
repnz
pop
add
dec
push
mov
mov
fidiv
bound
fucomi
js
inc
push
fisttp
sbb
adc
outs
add
add
outs
push
xchg
push
call
jne
repz
aam
or
adc
je
mov
fimul
shl
aam
add
inc
gs
loop
aaa
add
pop
and
adc
fst
(bad)
sub
pusha
sub
mov
(bad)
cmp
loope
pop
pop
mov
push
xor
iret
push
add
xor
(bad)
pop
cmps
sub
(bad)
sub
add
jge
sub
ja
push
pop
push
dec
mov
or
jbe
inc
push
dec
outs
push
dec
lahf
pop
dec
fistp
inc
inc
jl
mov
and
gs
and
fld
adc
xor
mov
movs
sbb
nop
add
cmp
sbb
mov
sbb
or
es
pop
lock
add
les
pop
add
inc
bound
add
add
mov
cmp
lods
cmp
shl
lea
inc
xadd
lods
push
sub
pop
push
mov
or
cs
or
js
sub
add
nop
cmp
pop
add
and
ret
add
in
imul
sub
ja
pushf
cmp
adc
xchg
pop
xor
jmp
fistp
push
or
cmp
add
inc
add
mov
push
sbb
mov
sub
push
repz
push
(bad)
imul
jo
cld
add
and
push
push
dec
push
push
inc
rcr
add
inc
rcr
pop
lods
adc
jne
dec
ret
dec
inc
sbb
je
dec
mov
sbb
sub
pop
dec
mov
fwait
add
adc
jge
inc
les
inc
enter
and
enter
rcr
adc
mov
inc
push
push
call
aam
sbb
adc
sar
sub
push
push
and
mov
add
test
das
mov
test
jg
loopne
xchg
mov
arpl
mov
pusha
cmp
test
call
mov
sbb
(bad)
inc
xchg
add
mov
xor
sub
jno
and
ficom
adc
mov
add
pop
addr16
ret
or
ret
clc
add
stc
scas
jb
push
push
push
add
cmp
add
sub
sbb
sbb
pop
add
pop
mov
sbb
(bad)
jbe
test
in
or
or
and
test
and
adc
push
dec
mov
adc
loope
pusha
xor
mov
dec
xchg
cmps
daa
dec
add
daa
sub
pop
push
inc
jne
mov
adc
sbb
dec
bound
mov
fsubr
sub
push
xchg
and
dec
mov
pop
rol
leave
cmp
xchg
mov
cs
icebp
inc
mov
push
mov
jo
add
push
outs
pop
mov
push
mov
inc
fcmovnb
mov
ret
jge
jge
mov
pop
pop
or
rol
ss
mov
pop
or
add
ins
xchg
jge
add
bound
daa
imul
(bad)
push
push
sub
sub
mov
fcomp
lods
dec
ret
xchg
xor
ret
or
pusha
les
lods
int
int
int3
fcmovb
out
add
dec
or
dec
jmp
sbb
imul
add
push
mov
add
sub
add
int3
pop
mov
jno
push
jbe
dec
xor
mov
sbb
mov
sbb
mov
jae
movs
dec
cmp
punpckldq
xchg
lods
cwde
xchg
or
mov
mov
nop
ja
outs
and
test
out
add
scas
pop
push
dec
mov
dec
xlat
mov
sub
push
in
imul
in
push
xlat
push
mov
js
cmp
mov
xchg
sbb
dec
js
mov
inc
or
inc
jle
jmp
mov
sub
mov
or
add
xchg
push
inc
or
outs
adc
sbb
push
dec
adc
iret
cs
mov
(bad)
fisttp
adc
pop
cmp
sub
add
ins
and
and
enter
ss
or
mov
add
ss
mov
nop
imul
sub
push
fs
push
push
(bad)
xor
xchg
xor
arpl
mov
adc
pop
add
push
push
(bad)
add
add
fsubr
test
push
shl
mov
ja
or
sar
sub
ret
or
stc
aas
inc
stos
and
and
out
movs
inc
pop
adc
test
mov
cmp
fcomp
lods
ret
sbb
dec
inc
xchg
iret
rol
add
cmp
cld
add
xchg
cld
fs
push
in
sub
or
adc
sbb
sbb
mov
or
and
in
sbb
sbb
idiv
push
daa
pop
push
pop
xchg
test
mov
push
(bad)
shl
pop
or
out
push
add
inc
push
cs
outs
daa
iret
jns
xchg
lods
mov
mov
inc
iret
inc
sti
mov
repz
push
pusha
push
jge
in
shr
sbb
fcmovnu
outs
xchg
test
mov
cmps
test
adc
fdivr
sub
jo
and
mov
jb
sub
jno
dec
push
or
jb
and
or
mov
and
lahf
or
dec
test
push
push
ret
xor
fsub
fimul
jl
outs
add
push
call
popa
daa
pop
add
inc
les
pop
call
dec
push
dec
outs
imul
pop
jmp
add
ret
cmp
sbb
ucomiss
push
and
and
pop
call
stc
xor
sub
dec
leave
jae
xor
dec
cmp
mov
mov
mov
outs
cs
ss
pop
push
ss
sbb
(bad)
mov
pop
mov
sub
fsub
adc
sub
pop
mov
inc
dec
adc
rol
push
add
cmp
popa
jno
dec
mov
sahf
cli
and
pop
or
loopne
add
and
fidivr
call
or
and
mov
and
xchg
lea
sub
jnp
call
sbb
js
xchg
sbb
mov
or
ret
jl
push
or
js
fadd
or
in
pop
loope
pusha
adc
rol
xchg
outs
push
pop
imul
xchg
sub
mov
xor
cmp
and
mov
pushf
aad
sbb
sbb
lods
mov
inc
repnz
mov
jne
xchg
cmp
outs
add
in
jnp
fld
sub
or
test
outs
mov
xchg
or
push
sub
fisttp
adc
cmp
pop
enter
pushf
or
lods
pusha
sub
nop
pop
add
mov
xor
pop
popa
fs
leave
and
lods
and
add
pop
push
and
rol
out
icebp
xchg
es
out
pop
inc
mov
in
outs
push
and
xchg
dec
fdivr
push
inc
xchg
fsub
xlat
sbb
add
dec
push
sub
rol
aam
lahf
mov
in
ror
pusha
mov
cmps
adc
ret
or
sbb
ret
pop
jae
or
int
fisub
loope
movs
call
push
add
sbb
out
push
(bad)
inc
push
lahf
pop
test
scas
nop
push
popf
sub
xor
dec
cmp
push
cmp
je
popa
xor
aas
mov
or
add
mov
push
mov
xor
cmps
xchg
mov
and
sti
xchg
lea
je
aas
mov
or
mov
xchg
das
pop
inc
inc
lea
jle
mov
mov
dec
call
rol
and
pusha
pop
pop
cmps
mov
lea
inc
push
pop
ins
fdiv
mov
push
push
sbb
push
push
and
adc
dec
stc
add
jne
sbb
pop
push
je
sbb
bound
cmc
xor
mov
adc
or
jno
dec
cs
int3
jbe
push
push
pop
jns
test
sub
rol
sub
or
pop
dec
arpl
cmps
cmp
cmps
inc
inc
add
mov
hlt
cdq
out
shl
xchg
push
jge
xor
movs
sub
data16
add
add
pushf
and
mov
xor
add
inc
mov
es
cwde
dec
fs
xchg
arpl
pop
repnz
or
loopne
push
xchg
leave
ret
add
xchg
outs
cmp
into
jns
cs
mov
or
das
imul
pop
xor
or
add
pop
xchg
add
jl
cmp
in
lods
dec
icebp
ds
sahf
push
mov
xor
test
(bad)
jge
popa
xor
sub
sub
in
cmp
adc
jmp
iret
and
add
inc
or
test
dec
add
add
push
icebp
dec
or
or
xor
add
push
or
sub
xchg
sub
push
lods
cmc
shr
pop
cmps
lock
inc
clc
add
push
ficom
pop
or
jnp
add
add
pushf
sub
sub
or
jmp
dec
jmp
cmps
adc
inc
lock
mov
aaa
mov
jl
jle
cmp
je
push
ret
xor
sbb
dec
pop
dec
in
ficomp
inc
retf
dec
push
push
or
out
ds
xchg
add
pop
sub
xchg
or
add
retf
repz
push
cli
jle
push
mov
hlt
push
mov
adc
mov
jno
adc
pop
test
or
call
sbb
mov
adc
dec
add
mov
ja
inc
cmps
and
pop
loopne
leave
mov
adc
add
add
test
or
sbb
jbe
xor
shr
pop
sbb
adc
push
leave
xchg
inc
and
push
adc
scas
sub
xchg
loopne
mov
mov
add
adc
pop
inc
fidivr
add
add
clc
es
shl
int3
and
adc
neg
fld
repz
fs
pop
fwait
clc
dec
xlat
je
and
add
push
je
ins
pop
or
sub
sub
test
mov
add
pop
lods
xor
imul
pop
add
into
inc
push
or
push
dec
ret
pop
add
push
std
xchg
(bad)
sub
in
xchg
dec
rol
outs
adc
sbb
movs
add
int
cmp
and
imul
loope
rcr
ret
xor
bound
lea
out
rol
inc
pop
or
jecxz
fwait
cmp
sub
adc
or
sbb
cmp
sbb
xor
and
mov
cmp
jecxz
push
add
pusha
mov
or
xor
mov
call
repz
add
sahf
sar
push
ret
adc
add
jns
shl
ins
pop
jno
xchg
or
mov
fs
fadd
jge
push
sub
or
or
cmp
cmp
jmp
sub
ins
clc
sar
xor
add
dec
nop
mov
(bad)
cmp
(bad)
and
(bad)
cmp
sbb
in
inc
dec
sbb
retf
outs
das
xor
cmps
and
sub
mov
in
inc
mov
imul
jmp
in
hlt
jmp
cmp
dec
lea
or
push
jo
mov
inc
xchg
jp
dec
jae
jmp
ins
dec
inc
fistp
lds
ins
push
daa
push
shl
scas
dec
adc
test
lock
push
xor
lods
mov
sbb
pop
push
cmp
cmp
gs
xor
add
push
sub
jb
mov
and
fiadd
sbb
sbb
push
ret
pop
inc
ret
xchg
push
leave
fist
push
in
std
jne
sub
push
loop
cmp
je
cmp
pop
inc
xor
push
mov
fsub
and
jnp
loope
push
jle
dec
inc
add
pop
dec
jp
xchg
mov
sbb
fdivr
imul
loop
push
xor
fdivr
pop
sbb
adc
add
or
mov
add
bound
and
pusha
mov
sbb
push
push
jl
icebp
mov
and
test
or
add
mov
sahf
sub
je
xor
mov
and
fidivr
inc
sub
je
and
(bad)
jmp
cmp
xchg
and
test
inc
sub
mov
push
push
cli
(bad)
push
add
sbb
rol
adc
adc
adc
fwait
sahf
adc
sub
xchg
or
inc
repnz
es
imul
sbb
jne
retf
jge
mov
lods
scas
xchg
sub
fnstcw
mov
or
xchg
mov
mov
fisttp
clc
lods
ins
push
aas
xor
sub
inc
scas
sub
push
and
js
dec
mov
rol
xor
sbb
(bad)
cmp
dec
adc
out
(bad)
push
movs
dec
cdq
rol
es
and
dec
add
lods
retf
pop
sbb
cmps
mov
and
push
push
test
sbb
cdq
or
push
dec
xor
xchg
or
xor
mov
cmp
ins
cmp
jl
cs
lods
sbb
and
xor
sar
movs
mov
lods
and
loopne
or
adc
adc
call
cmps
push
jg
movs
add
int3
push
gs
cmp
push
xchg
mov
mov
add
pop
leave
shr
pop
lock
adc
or
int
div
adc
pop
inc
or
jl
jmp
hlt
mov
mov
je
fs
mov
fsubr
lds
inc
jge
enter
inc
cmp
pop
retf
add
mov
or
or
and
retf
sbb
push
mov
add
jge
inc
arpl
mov
mov
add
sub
enter
dec
jecxz
aam
scas
imul
adc
pop
or
jle
mov
xor
retf
pop
and
fldenv
retf
stos
xor
mov
fcomp
sar
ror
add
stos
sbb
std
xor
mov
and
mov
add
ror
sub
push
outs
(bad)
xlat
xor
push
dec
xor
rol
fstp
cmp
jmp
icebp
int3
or
adc
dec
dec
lahf
out
je
and
dec
inc
jmp
cdq
aas
sbb
cmp
daa
(bad)
cmp
or
and
sbb
aas
dec
aad
stos
jmp
and
inc
inc
das
push
push
add
xor
dec
das
sub
or
jg
or
mov
cwde
add
add
cmp
sbb
cmp
add
imul
ja
shr
jne
nop
rol
pop
retf
adc
xchg
icebp
push
inc
call
mov
lock
add
push
je
or
pop
push
fiadd
or
loope
pusha
inc
fs
xor
sub
mov
push
xchg
and
mov
in
lods
jo
mov
mov
pop
in
jecxz
loopne
add
and
movs
inc
sbb
fstp
sub
movs
ret
imul
outs
inc
popa
cwde
cs
adc
jo
mov
add
fsubr
fadd
push
outs
pop
add
add
rcl
mov
push
ret
xchg
int
test
dec
xor
call
fdiv
retfw
lods
into
fcmove
adc
pushf
scas
scas
inc
test
xor
lea
popf
and
sub
mov
sub
push
pusha
pop
sbb
bound
data16
sbb
out
adc
or
add
push
dec
inc
push
loope
push
xor
dec
push
sub
xchg
clc
jmp
inc
xchg
xor
pop
adc
xchg
test
xor
and
out
pop
mov
lock
outs
adc
ds
(bad)
retf
punpckldq
push
loope
adc
adc
push
lahf
imul
and
push
sbb
mov
lods
xor
sbb
test
dec
sahf
and
push
(bad)
cmps
jnp
mov
imul
xchg
adc
cli
pusha
and
stc
mov
add
loope
scas
je
pop
inc
or
nop
jle
inc
push
pop
mov
or
pushf
add
sub
loopne
jne
add
fnstenv
jle
mov
scas
xchg
test
sbb
mov
addr16
fldpi
xchg
and
adc
scas
hlt
(bad)
lea
lea
xor
mov
loope
rcl
adc
push
add
xchg
outs
pusha
inc
cmp
shl
jno
cmp
xchg
jnp
pop
enter
int3
xor
sub
pop
cmps
mov
mov
les
add
or
xor
adc
mov
(bad)
mov
mov
cmc
mov
cmp
mov
adc
pop
push
arpl
or
lea
inc
mov
mov
sbb
cli
dec
xchg
mov
xchg
sub
add
and
push
mov
pop
and
add
stos
dec
test
or
mov
add
movs
lock
adc
movs
sbb
inc
(bad)
xor
outs
add
cs
retf
push
push
push
inc
les
jmp
push
push
jb
int
sbb
or
and
pop
bndstx
mov
sub
ds
and
sub
xchg
add
jno
or
mov
fistp
in
pop
mov
pop
xchg
fidivr
cwde
xchg
not
popa
ret
and
dec
jo
xchg
out
push
cmp
push
leave
sbb
int
push
mov
fild
inc
jmp
jbe
mov
pop
std
out
push
sbb
cli
jne
sbb
xchg
pusha
adc
arpl
cmp
test
rcl
xchg
popa
lods
daa
cmp
jge
add
mov
je
loope
cli
push
push
cli
and
in
jae
mov
jns
dec
xor
xchg
and
call
sti
pop
mov
rcr
add
je
xor
xchg
xchg
xchg
fs
mov
jno
jnp
sub
sbb
add
xchg
cmp
adc
xchg
jmp
sub
test
add
je
pop
adc
sahf
inc
adc
push
and
xchg
add
aam
or
stos
outs
xchg
mov
jns
mov
sbb
add
movs
and
jns
push
or
and
ret
clc
or
jmp
adc
shr
or
mov
scas
dec
mov
adc
ss
or
cmps
pop
inc
and
les
dec
and
add
push
(bad)
cmp
sbb
pop
sub
out
and
pop
sub
xchg
adc
inc
push
xchg
fisub
call
cwde
mov
in
cmp
add
cmp
fmul
mov
push
or
je
mov
sbb
and
in
inc
mov
int
in
and
cmc
adc
mov
mov
inc
jp
xchg
mov
inc
push
mov
jne
push
inc
cwde
inc
mov
lock
adc
stc
rcr
jl
inc
aaa
cld
adc
xchg
xchg
pop
test
push
stos
inc
dec
es
adc
jecxz
or
lods
sub
stos
or
jge
(bad)
test
xchg
or
or
sub
jb
in
cld
mov
fdiv
mov
inc
imul
syscall
sbb
data16
mov
add
push
jle
mov
dec
sbb
adc
pop
cwde
clc
and
das
dec
mov
jne
inc
inc
call
push
ud2
outs
in
pop
nop
lahf
bound
and
pop
lods
xchg
adc
bound
jmp
dec
adc
shr
and
and
dec
or
ret
push
jb
pop
xchg
test
pop
add
stc
add
into
inc
mov
cmps
or
inc
and
mov
sbb
adc
sub
inc
cmp
mov
test
adc
nop
stc
and
push
push
or
sbb
ds
jg
jo
imul
add
pop
sti
sbb
push
nop
aas
or
mov
xor
pop
sub
pop
mov
pushf
push
mov
jg
inc
pop
push
(bad)
pop
dec
xor
inc
pop
fstp
(bad)
ror
fninit
pop
inc
pop
add
jg
int
push
rcr
cmp
sbb
push
dec
in
push
dec
mov
and
into
xchg
movs
cmp
nop
push
xor
mul
adc
cmp
pop
add
in
push
fcomp
dec
ret
push
cmps
arpl
pop
push
adc
mov
dec
fidiv
xor
(bad)
push
or
call
sub
cmp
push
nop
sbb
sub
(bad)
fcom
sub
add
div
out
rol
jns
dec
cmp
mov
into
lea
mov
xor
into
add
aam
cmp
retf
pop
imul
sbb
sbb
inc
ja
pusha
dec
push
ins
lock
cmp
push
cmp
fimul
dec
leave
hlt
rcr
outs
fisubr
jne
push
lldt
jmp
xlat
mov
imul
adc
push
out
push
jecxz
inc
push
mov
and
pop
sub
inc
mov
fstp
sar
and
cmp
adc
jmp
sbb
fisub
push
push
lock
sbb
mov
push
jmp
add
dec
lock
out
pop
pop
inc
dec
adc
imul
das
mov
pushf
inc
popa
push
xor
iret
ret
pop
inc
int3
and
stos
outs
jge
sbb
lods
cmp
jmp
push
cmp
or
jae
in
push
dec
add
and
pop
xor
push
fisubr
push
ins
inc
mov
push
or
in
and
push
sub
fsubr
add
repnz
add
and
or
punpckhwd
and
les
add
jo
inc
stos
sar
push
push
or
fcom
and
or
test
outs
test
test
inc
jo
push
sub
std
xor
adc
rol
cli
dec
ret
sbb
xlat
inc
sub
or
or
jge
or
or
into
pop
lea
fwait
cmp
pushf
fidivr
cmp
int3
fs
inc
enter
mov
retf
jmp
ret
and
dec
mov
sbb
jge
pop
mov
lahf
or
inc
jo
js
adc
push
js
ss
pop
or
mov
mov
std
pop
(bad)
push
and
sbb
movs
sbb
push
inc
jge
inc
inc
cmps
inc
aas
xor
or
push
cmp
(bad)
fidivr
push
pusha
dec
jnp
xchg
sub
dec
mov
mov
mov
mov
inc
mov
ss
int3
jns
push
xchg
inc
dec
and
lahf
xor
lds
xchg
push
or
daa
sbb
push
sbb
mov
loope
in
test
je
inc
push
lea
adc
sub
ds
sub
outs
mov
sub
ja
mov
sbb
mov
es
das
and
in
cmp
into
sbb
test
cmps
ins
pusha
mov
aam
fs
push
jmp
cs
jnp
push
test
or
rcl
pop
adc
or
xchg
or
jp
pop
jne
fwait
and
stos
fwait
push
(bad)
into
or
lods
out
sti
xor
mov
mov
mov
pop
mov
pop
inc
into
add
fimul
cli
or
inc
xchg
and
adc
rcr
or
inc
add
push
sti
mov
pop
test
mov
xchg
inc
inc
sbb
jb
push
lea
mov
xor
loopne
push
xor
mov
jmp
or
aam
sub
test
(bad)
shl
addr16
sub
pop
rol
loopne
or
stos
adc
push
loopne
imul
lea
add
daa
add
stos
nop
inc
mov
add
push
stos
adc
adc
mov
les
cmp
mov
pop
fdiv
fwait
and
jno
xor
inc
push
mov
and
inc
adc
(bad)
push
adc
fiadd
jno
cdq
shl
test
add
cmp
xor
add
adc
retf
xor
fiadd
ret
xor
cs
lea
jle
ror
(bad)
sub
movs
fld
fild
or
push
mov
adc
push
adc
shl
loopne
das
jne
xchg
mov
add
div
pop
imul
or
xchg
mov
pusha
mov
jb
inc
cmp
lock
js
rcl
jnp
inc
push
and
in
jo
in
or
mov
loopne
(bad)
sbb
mov
push
js
test
fdivr
xlat
and
mov
add
pop
(bad)
xor
mov
movs
sbb
jo
mov
ret
fcom
and
cmp
loop
bound
pop
or
aaa
movs
inc
pop
hlt
(bad)
shl
inc
test
rol
xor
sbb
cmp
jge
push
mov
dec
jne
cmp
int3
aad
or
daa
cld
sahf
adc
jnp
push
adc
ss
gs
pop
test
sub
fs
xchg
and
sub
cmc
shl
cmps
sub
stc
and
sbb
aas
jle
sub
mov
sbb
dec
adc
inc
js
add
enter
rcl
push
sub
add
cmp
dec
push
test
or
into
jmp
push
and
and
shr
mov
pusha
mov
inc
pop
mov
adc
push
pop
and
pop
and
bound
ror
sub
jo
test
sbb
mov
call
adc
push
pop
push
jne
cmp
out
dec
xor
or
adc
lock
sub
aam
add
jo
cs
mov
gs
call
ins
xchg
lea
pop
jge
into
daa
cmp
xor
or
or
xchg
xchg
jecxz
pop
mov
add
(bad)
gs
inc
pop
dec
mov
ins
addr16
inc
adc
fcom
xchg
jmp
stos
xchg
mov
mov
fild
mov
imul
mov
aad
push
jl
cdq
fs
xlat
mov
dec
mov
js
jnp
pop
push
sub
outs
jo
hlt
cdq
pusha
mov
add
sub
mov
xchg
scas
ins
push
outs
jecxz
mov
sbb
xchg
jno
loope
rcl
jecxz
xor
dec
push
adc
adc
xchg
dec
jmp
inc
sbb
xor
jne
aad
out
mov
cdq
add
adc
push
add
adc
(bad)
fbstp
and
xor
adc
loop
push
and
pop
ss
and
clc
clc
ins
inc
push
mov
in
lock
std
cmp
and
pop
jo
dec
int
and
js
mov
adc
outs
sbb
mov
inc
ret
mov
or
dec
dec
loop
pop
jp
outs
add
adc
jmp
in
aad
xchg
inc
xor
mov
dec
arpl
push
adc
ret
adc
jg
shl
cmp
fsub
pop
adc
adc
and
movs
aam
ret
add
mov
(bad)
fnstenv
push
movs
push
pop
push
and
mov
mov
jmp
sbb
es
loope
test
inc
push
dec
lahf
jb
xchg
adc
pop
pop
or
or
fmul
push
push
push
or
mov
push
sub
iret
pop
mov
add
push
fs
iret
adc
clc
xor
out
push
push
pop
pushf
cmps
and
es
pop
sub
mov
sub
or
adc
push
inc
test
pop
or
adc
sub
pusha
jno
or
lds
inc
add
pop
in
or
pop
push
or
lea
mov
push
lock
aaa
add
or
fs
or
adc
cmp
into
add
movs
out
add
adc
mov
and
jno
jno
nop
cs
add
sub
retf
sub
or
popa
fsubr
or
es
je
inc
add
push
inc
add
adc
dec
and
jo
loope
adc
in
push
icebp
or
shl
add
xor
in
push
jmp
sbb
fs
enter
xor
les
push
lods
or
inc
loopne
add
mov
pop
inc
fdivr
mov
mov
dec
call
mov
mov
pop
shl
or
in
adc
clc
cmp
dec
inc
dec
aad
mov
jmp
call
push
push
mov
adc
push
movs
jle
and
test
mov
sbb
cmp
adc
mov
fisub
lock
cmps
cmc
push
ins
sub
sti
jle
cmp
add
push
jp
ror
mov
sub
cmp
(bad)
leave
arpl
ss
dec
test
je
adc
sub
popf
add
push
int
sahf
dec
sub
fistp
les
js
imul
push
pop
inc
cmp
xchg
push
mov
pop
dec
or
or
xor
mov
and
dec
push
xor
dec
sbb
lods
pop
(bad)
dec
retf
sbb
push
xchg
adc
sub
mov
sub
aam
(bad)
out
push
pop
out
cmp
sar
mov
loopne
lock
inc
adc
push
adc
cmp
add
fcom
sbb
pusha
adc
dec
sbb
mov
mov
add
pop
jmp
sub
pop
pop
or
ss
ret
mov
push
(bad)
cmc
js
and
cmp
jbe
ret
fisub
inc
sub
ss
dec
lods
push
push
imul
data16
xchg
inc
push
out
and
fsubr
add
pop
adc
daa
cmc
push
sub
push
jne
sub
adc
xchg
add
mov
(bad)
push
pusha
int
or
sub
cmp
sub
push
jbe
sub
xor
or
shr
mov
push
pusha
and
pusha
pop
jno
mov
sbb
sub
xor
pop
add
dec
add
add
(bad)
rcl
sub
jae
xchg
mov
pop
mov
icebp
add
test
jno
fadd
ret
rcl
das
repnz
pop
and
shr
xor
aas
clc
push
sbb
jmp
sub
sbb
xor
out
push
(bad)
sbb
mov
pcmpeqw
pop
lea
mov
aas
iret
lea
cwde
xchg
aaa
pop
and
sbb
hlt
int
int3
push
push
pop
mov
jb
pop
or
dec
or
jmp
push
jns
xor
jecxz
popa
push
dec
stos
jp
dec
sub
push
jno
push
dec
imul
ins
out
cmp
mov
cmovge
xchg
dec
(bad)
pop
or
xor
lds
mov
inc
push
sbb
push
push
out
pop
jno
sbb
es
outs
pop
add
jmp
outs
gs
cmp
(bad)
rcr
scas
mul
movs
je
pop
add
add
add
push
fsubr
add
mov
int
add
mov
cdq
jg
das
add
inc
or
test
sbb
mov
or
stos
loop
adc
int3
and
js
mov
or
pop
dec
fsub
out
mov
adc
sbb
add
jp
pop
mov
xchg
xchg
dec
pop
or
inc
adc
sub
out
xor
(bad)
rcl
cwde
sbb
mov
pop
mov
mov
loop
mov
ja
and
out
xor
jl
pop
push
rdmsr
push
inc
mov
add
sub
(bad)
jbe
movs
ror
adc
(bad)
sub
and
fbld
xor
data16
hlt
inc
dec
xor
lock
push
sub
in
cmp
sub
icebp
lock
fisubr
mov
jns
loopne
jg
inc
popa
fs
add
or
or
imul
adc
jo
fdiv
add
jl
mov
ret
(bad)
mov
fimul
mov
jg
repz
add
or
xor
mov
sub
aam
push
(bad)
and
pop
mov
test
in
jmp
adc
or
or
mov
inc
inc
and
mov
test
and
dec
push
pusha
dec
dec
dec
std
or
xor
mov
sbb
and
ds
or
(bad)
movs
in
push
bound
test
mov
loopne
aad
mov
sbb
mov
mov
(bad)
bound
add
out
fld
push
inc
test
jne
daa
ret
mov
xchg
push
adc
dec
jecxz
or
movs
out
add
nop
cmp
mov
push
inc
call
shl
inc
jbe
mov
dec
pushf
cs
test
not
jl
jo
or
inc
or
fdivr
ja
push
xchg
xchg
sub
popf
push
shr
cmp
jne
repz
xlat
lods
std
cmp
cmps
inc
(bad)
(bad)
hlt
cld
push
or
rol
aad
ret
mov
push
mov
aam
push
inc
js
adc
xchg
mov
movs
add
or
test
dec
xor
gs
adc
ds
xchg
ret
pop
push
mov
pusha
(bad)
fbstp
add
popa
pop
cmps
mov
fsubr
jne
mov
cmp
add
mov
imul
sub
add
test
xor
lds
and
push
pop
sbb
inc
mov
sbb
adc
adc
int
in
test
jl
or
cvtps2pd
popa
adc
or
xor
stc
mov
sub
push
mov
push
dec
inc
inc
pop
inc
inc
jge
jne
cmc
xor
je
inc
and
das
and
pop
xchg
mov
adc
inc
or
ret
loopne
mov
mov
adc
push
leave
dec
inc
loopne
push
call
inc
mov
call
stos
(bad)
arpl
(bad)
and
sbb
push
jl
mov
push
mov
inc
and
pop
and
xchg
rol
inc
add
jg
sub
je
cmp
jbe
(bad)
dec
shr
jle
push
push
cmp
jno
cld
dec
and
add
add
dec
jo
pop
js
cmc
sub
sub
fldenv
add
inc
pop
push
mov
(bad)
bound
jg
and
(bad)
aas
sti
test
and
push
push
sbb
mov
int3
icebp
mov
lock
inc
loop
inc
sbb
inc
inc
mov
and
mov
int3
je
sub
inc
mov
xchg
loope
dec
dec
push
or
aam
or
adc
or
mov
pushf
dec
and
inc
fmul
and
push
ins
add
pop
jno
pop
add
mov
xor
or
mov
movs
inc
clc
dec
xor
or
push
push
adc
pop
push
stos
dec
add
push
movs
jnp
push
and
push
inc
cs
or
push
mov
dec
inc
inc
pop
inc
mov
add
cli
inc
sub
jp
dec
mov
cmps
pop
imul
cdq
inc
clc
je
mov
or
ds
nop
(bad)
int
aam
push
or
adc
push
mov
and
and
mov
sub
and
pop
into
xor
nop
pop
inc
xor
sub
psubsb
sbb
in
pusha
cmps
mov
and
cmps
pop
push
fild
push
pop
dec
mov
dec
jae
or
xchg
and
inc
jmp
xchg
hlt
and
pop
jbe
jecxz
jmp
sbb
clc
dec
xor
and
test
and
cwde
add
aas
adc
mov
adc
lods
dec
pop
ins
jg
(bad)
pop
in
inc
ret
div
pop
cmp
ja
retf
mov
pop
pop
aas
sbb
popa
jmp
mov
inc
rcr
or
adc
add
sub
repz
es
add
(bad)
int3
mov
and
or
pusha
pop
sbb
cmps
sbb
int
mov
ds
shl
xor
outs
mov
ret
adc
and
push
cmp
jns
push
lods
sub
adc
xchg
or
aas
scas
cmp
dec
and
je
test
outs
adc
inc
adc
test
scas
adc
pop
mov
cmp
xchg
scas
dec
jb
enter
xor
dec
xor
or
push
repz
js
dec
push
inc
mov
dec
xchg
(bad)
aad
add
xor
test
jb
ins
mov
add
sbb
ret
mov
sub
ret
inc
xor
mov
add
sar
inc
in
ret
ret
inc
xor
shl
xor
or
sbb
jp
and
xchg
sbb
dec
dec
jne
sbb
and
sub
pop
(bad)
push
adc
jmp
xor
call
daa
inc
pop
mov
push
icebp
and
adc
push
push
adc
cld
push
xor
or
and
jg
push
ins
dec
and
sub
adc
xlat
push
fsubr
inc
inc
add
test
test
and
inc
test
test
int3
or
div
jbe
sbb
adc
mov
or
adc
mov
(bad)
or
les
dec
xor
inc
or
inc
push
cmp
jne
pop
and
push
add
movs
push
rol
dec
inc
jns
ret
(bad)
jecxz
out
push
mov
jge
pusha
neg
inc
ja
cwde
push
add
pop
or
jg
ds
inc
bound
ja
or
loopne
push
or
pop
sub
push
not
add
dec
pop
mov
hlt
out
pop
inc
lahf
push
cmp
cwde
je
mov
push
pop
jl
fdivr
cmp
sub
cli
cmp
mov
pop
xchg
mov
pop
imul
ss
adc
mov
jp
cli
add
sti
fsub
sub
mov
sbb
loopne
push
xchg
dec
(bad)
mov
movs
dec
dec
pop
in
dec
mov
popa
mov
pop
dec
add
das
cmps
push
std
xchg
push
cmp
mov
add
inc
ficomp
inc
adc
or
add
inc
shl
jbe
or
jbe
dec
sub
push
pop
mov
jecxz
mov
popa
ja
push
dec
sbb
test
push
inc
push
inc
in
and
clc
add
xchg
push
xchg
pop
inc
push
push
mov
loopne
das
daa
sbb
mov
adc
adc
pop
in
push
adc
test
adc
outs
cmp
push
push
pop
add
push
ss
jne
inc
add
das
pop
fistp
inc
add
pop
add
xchg
cmps
push
pop
add
or
or
or
mov
sbb
fcmovnb
xchg
mov
shl
mov
or
pop
setae
ja
dec
inc
mov
mov
lock
mov
imul
jae
mov
or
jge
ins
pop
je
imul
dec
pop
pop
lods
fldenv
gs
ret
or
retf
cld
adc
add
inc
adc
push
ja
retf
loopne
mov
sbb
push
stos
fadd
add
outs
mov
pushf
push
dec
(bad)
sub
adc
xchg
cmp
cmp
add
shl
cmp
xor
fcmovbe
nop
xor
and
xor
push
pop
jae
jmp
and
inc
out
jmp
pushf
in
lds
adc
and
imul
dec
push
outs
push
adc
jge
cmps
dec
test
mov
jo
aaa
jno
xor
cmp
push
push
stos
iret
xchg
dec
rol
jmp
mov
sub
or
cmc
es
mov
mov
mov
cmps
xor
out
inc
and
xchg
add
jno
cmp
cmp
add
repnz
enter
div
enter
clc
stc
enter
cli
sti
cld
sub
inc
mov
addr16
mov
cmp
es
and
pop
xchg
mov
in
retf
sbb
mov
imul
adc
mov
or
(bad)
cmps
inc
test
pop
or
sbb
mov
sahf
hlt
mov
dec
ret
xchg
cwde
jl
dec
add
dec
pop
pop
aas
xchg
pop
cmps
push
nop
add
pop
and
mov
xor
adc
lods
push
and
mov
mov
sub
xor
leave
xchg
pop
fs
and
xor
inc
add
adc
pop
push
outs
push
mov
adc
xchg
adc
mov
hlt
mov
and
sbb
sbb
sbb
xchg
pop
xor
dec
arpl
sub
or
or
push
arpl
pop
ret
fbstp
test
loopne
lds
mov
push
add
icebp
or
(bad)
pop
test
adc
mov
inc
mov
adc
add
mov
jne
fcom
loop
in
test
cmp
inc
push
loopne
(bad)
push
(bad)
ficom
xor
shl
repnz
add
fucomp
jmp
icebp
sbb
adc
enter
test
fild
dec
loope
add
mov
fadd
fsubr
xor
cli
clc
add
cld
dec
loope
ins
mov
inc
das
and
add
ins
fisttp
adc
push
(bad)
jge
mov
icebp
or
sub
sbb
jbe
inc
cld
cmp
adc
mov
push
cmp
jae
lock
test
int3
ins
adc
push
adc
mov
adc
push
mov
add
and
inc
and
push
sub
(bad)
push
xor
xor
or
pop
and
scas
sbb
push
mov
add
test
mov
mov
push
cmps
xor
xchg
xchg
test
fldcw
push
pop
mov
fild
dec
add
sub
daa
push
fnsave
mov
ja
sbb
or
jle
mov
xchg
inc
js
or
or
and
rcl
push
addr16
cmp
(bad)
cmp
dec
jne
and
(bad)
adc
xchg
movs
retf
push
add
aam
xchg
xor
push
pushf
or
sbb
ud2
push
or
xchg
adc
xor
inc
inc
add
gs
cmps
cmp
pop
mov
and
add
(bad)
rcl
je
cmp
push
ficom
or
js
mov
jnp
cmp
lods
mov
(bad)
out
push
mov
fcomi
mov
mov
push
popf
xchg
inc
push
shl
ret
xor
mov
sbb
ja
je
push
outs
mov
mov
push
movs
mul
mov
push
mov
stc
out
popa
and
adc
mov
test
xchg
pop
or
cmp
pop
or
mov
cs
adc
adc
fsubr
add
sub
xor
adc
rcl
and
mov
pop
rol
push
iret
sti
sub
std
xor
xor
pop
push
push
popa
es
mov
mov
sbb
stos
inc
push
or
fcom
add
push
iret
cmp
mov
mov
ret
inc
cs
bound
lahf
dec
jmp
ins
mov
dec
and
stc
or
loope
xchg
les
stos
shl
sti
and
add
jmp
loope
retf
adc
push
mov
jecxz
daa
pop
mov
inc
dec
xor
sub
mov
clc
imul
mov
mov
push
mov
or
lods
push
inc
and
cmp
mov
daa
clc
es
sahf
jg
jecxz
out
ja
cmp
(bad)
test
fidivr
shl
mov
je
adc
push
or
dec
inc
nop
jg
lea
and
dec
or
push
adc
xchg
xchg
fimul
lds
pop
pop
pop
pop
and
aas
in
and
add
mov
sbb
mov
outs
dec
sbb
fistp
push
sub
mov
nop
cmp
ss
jge
test
cs
fdiv
sar
adc
add
stos
mov
xor
mov
pusha
jl
fwait
dec
bnd
loope
hlt
add
mov
inc
push
sbb
jle
imul
add
test
sbb
xor
push
(bad)
push
push
lock
or
jmp
repnz
push
adc
jg
push
ret
jne
or
test
add
in
xchg
mov
mov
or
add
in
jge
inc
mov
ficom
dec
adc
push
add
mov
pop
mov
inc
push
jmp
call
and
rcl
ror
adc
jg
add
test
or
movs
jo
test
stos
xor
sbb
dec
or
retf
int3
mov
or
arpl
pop
inc
push
adc
jno
push
dec
sbb
push
xor
mov
inc
lds
add
add
cmp
sar
dec
inc
sub
inc
out
sar
push
dec
aaa
jo
and
les
cmp
mov
mov
pop
imul
push
mov
push
iret
and
sub
iret
and
dec
js
mov
inc
aam
js
cmp
jp
and
icebp
jg
mov
mov
jmp
icebp
js
jecxz
xchg
dec
je
or
ins
mov
mov
sub
les
les
inc
pop
dec
or
loop
xor
adc
rcr
xor
popaw
push
dec
dec
push
xchg
int
push
rcr
mov
aas
and
test
or
pop
jecxz
cmps
and
enter
xchg
lock
enter
or
popa
sar
and
push
add
nop
inc
and
popa
mov
je
mov
xchg
es
adc
cmp
pop
add
adc
fidiv
push
push
add
inc
int
xchg
mov
add
fsubr
or
test
fcom
push
test
adc
mov
jmp
mov
sub
pop
clc
lahf
cdq
cs
mov
test
(bad)
mov
push
jb
or
fwait
mov
mov
je
lahf
sub
sub
or
dec
push
mov
fdiv
mov
xchg
test
arpl
mov
push
sub
push
add
test
hlt
aas
jno
movs
mov
mov
loope
movs
int3
arpl
ret
xor
push
aad
adc
dec
pushf
jge
jle
mov
jg
and
cmc
xor
lds
add
push
fwait
lods
or
cwde
cmps
fadd
cmovb
xchg
mov
mov
dec
ins
add
popa
adc
mov
mov
jae
push
loop
rcr
or
arpl
adc
push
cmps
add
push
add
inc
jbe
loopne
add
rep
clc
aam
and
mov
call
cmps
jo
stos
lea
pop
inc
shl
add
push
mov
cdq
or
sti
xchg
(bad)
ins
xor
dec
mov
imul
test
stos
not
(bad)
out
ret
dec
sbb
pop
and
into
inc
sbb
lods
adc
or
push
out
in
jnp
push
mov
mov
dec
clc
leave
jbe
test
fnstenv
adc
xchg
jne
out
add
pop
xor
mov
inc
push
daa
sbb
mov
push
mov
dec
pop
pop
lock
lock
sbb
ret
mov
push
sahf
adc
call
sub
xchg
pop
jg
dec
push
js
dec
jl
test
xor
aaa
shl
mov
xchg
dec
call
lea
sbb
lods
and
pushf
fstp
push
pusha
pop
add
out
push
sub
popa
push
add
ret
ror
lea
dec
adc
sbb
adc
xchg
sub
inc
ss
mov
popa
jne
inc
and
xor
push
sbb
pop
sbb
push
addr16
add
cld
adc
call
dec
test
xchg
jle
cmp
movs
es
cmovns
xor
pop
xlat
mov
pushf
mov
inc
jno
pop
add
push
mov
push
daa
mov
push
aas
sbb
and
dec
mov
call
call
push
mov
push
push
or
sbb
(bad)
cmp
pop
out
scas
pop
mov
js
pop
sub
add
xchg
cmp
cmp
and
std
add
or
add
shr
cmp
push
ret
movs
cmps
mov
sub
sbb
pusha
js
xor
mov
jg
sub
push
pop
mov
inc
sub
dec
fs
add
test
leave
xchg
scas
xchg
add
mov
jbe
push
pop
rcr
bt
ret
fst
std
and
inc
test
xchg
push
add
add
push
mov
sbb
dec
pusha
push
jo
jbe
mov
lock
dec
mov
mov
sbb
add
(bad)
nop
and
or
sbb
les
inc
or
fwait
push
rol
jmp
sub
jne
dec
cmp
sbb
imul
xor
cmc
scas
mov
and
xchg
in
xor
ret
pop
adc
or
popa
adc
push
shr
mov
test
call
inc
xchg
push
test
pop
popf
xor
inc
sbb
dec
push
sbb
push
movs
cmps
loope
cmc
int3
add
dec
inc
ins
push
int
cmc
stc
clc
jo
data16
(bad)
cmp
jbe
loop
jp
and
pop
cld
rol
loopne
sub
inc
test
inc
mov
iret
push
adc
adc
(bad)
push
and
sbb
fisttp
ds
mov
mov
shl
or
inc
pop
movs
std
add
sbb
push
sbb
mov
outs
add
mov
add
adc
inc
adc
and
dec
sbb
push
js
adc
push
inc
jmp
adc
dec
mov
pop
sub
xor
daa
jo
add
add
push
je
xchg
lahf
aam
dec
dec
sub
pop
inc
outs
adc
and
xchg
sbb
fwait
adc
mov
ds
jns
pop
lock
ror
pop
add
popf
jb
xorps
inc
(bad)
jl
pushf
mov
mov
(bad)
sbb
mov
pop
xchg
test
int3
cdq
retf
pop
xor
je
sti
or
pop
inc
adc
cmp
push
data16
mov
enter
aam
push
std
mov
retf
clc
js
test
add
add
push
out
push
sub
pop
movs
mov
add
add
xlat
mov
dec
xor
sbb
xor
neg
loopne
adc
mov
neg
xor
mov
into
xchg
icebp
mov
xchg
mov
xor
xchg
add
add
gs
jl
pop
adc
xchg
dec
add
ja
movs
mov
sub
movs
cmc
jmp
cmp
xor
jo
sub
dec
add
(bad)
mov
mov
sbb
sub
shl
ins
in
push
push
outs
add
enter
adc
jmp
inc
adc
dec
fs
xchg
and
mov
adc
mov
or
arpl
fld
mov
add
pusha
jl
loopne
shl
add
push
enter
push
mov
imul
ja
inc
imul
sti
lds
jmp
push
pop
add
ds
in
adc
add
shl
xchg
jl
push
mov
mov
repz
add
dec
fisub
jg
adc
daa
lods
xchg
loope
jmp
add
adc
mov
in
xchg
std
cmp
out
jbe
pop
inc
inc
dec
sbb
sbb
dec
push
ss
fcmovu
rcl
xor
push
or
(bad)
daa
lods
aaa
std
inc
and
daa
loop
popf
mov
pop
cmp
cmp
add
adc
ud2
les
inc
leave
adc
pop
ror
mov
shr
cmp
xor
add
and
and
pushf
dec
mov
mov
sub
sub
rcr
push
es
inc
pop
inc
adc
xor
cmp
mov
test
int3
jne
inc
push
in
and
push
arpl
or
sbb
mov
dec
(bad)
(bad)
sbb
jge
cmp
imul
sbb
jge
dec
jg
xor
and
sub
or
or
pop
mov
pusha
pop
icebp
inc
lds
mov
je
mov
sbb
push
jns
push
push
add
sbb
aaa
adc
or
sbb
imul
cmp
adc
aaa
lock
or
push
or
cmp
and
xchg
vminps
adc
pop
add
add
push
and
test
jae
sbb
imul
lods
or
sbb
pop
or
or
bound
invlpg
popa
or
adc
loope
sbb
loop
mov
mov
nop
outs
sbb
sbb
xchg
repz
and
jmp
push
inc
pop
fdiv
mov
bound
push
xchg
cmp
adc
movs
inc
inc
and
or
inc
sub
pusha
xchg
pop
mov
sbb
push
popa
inc
push
sbb
jge
mov
hlt
mov
mov
leave
mov
les
jg
clc
lea
cmp
ja
mov
or
push
add
das
lea
sbb
mov
in
scas
sbb
push
and
mov
fadd
arpl
adc
push
or
ret
inc
repz
mov
test
es
add
push
call
add
jmp
add
xor
sbb
push
sub
push
loopne
pop
ds
or
xor
lea
aaa
fnstsw
mul
push
data16
lods
push
add
mov
mov
popa
loope
into
inc
jle
ja
xchg
(bad)
not
lods
pop
push
ja
jmp
or
inc
lods
mov
ins
xlat
jge
jmp
push
movs
mov
or
out
rcr
or
inc
or
in
push
sub
sbb
ja
inc
fidivr
pop
ins
mov
inc
inc
and
nop
dec
inc
push
lea
add
mov
or
xchg
test
push
push
push
adc
dec
xchg
imul
sub
inc
les
loop
bound
or
mov
xchg
fcomp
test
xor
pop
sbb
add
ror
pop
adc
scas
add
adc
adc
adc
pop
and
mov
add
mov
jb
sbb
jp
mov
ss
aaa
bound
inc
xchg
mov
cmp
(bad)
pop
jbe
les
test
dec
cdq
xor
nop
xchg
mov
mov
pop
ret
idiv
pop
test
ds
mov
inc
daa
mov
es
pop
add
nop
xchg
jnp
push
loopne
sub
pop
je
cmc
adc
sbb
pop
pop
shl
add
nop
pop
dec
mov
icebp
sahf
stos
sbb
or
push
or
adc
stc
or
adc
or
cli
pusha
cmp
repz
cld
lods
or
lods
cmp
outs
and
lea
ret
aas
inc
sbb
and
out
sbb
push
jns
mov
xchg
pop
jle
push
add
and
repnz
add
repz
sub
jne
das
mov
(bad)
push
dec
add
dec
loope
add
dec
add
xchg
xchg
cdq
jo
xchg
fwait
cmp
ins
movs
inc
inc
mov
popa
mov
arpl
scas
xchg
stc
movs
loope
adc
cmc
and
aas
imul
lock
push
jmp
pop
mov
and
jae
or
lock
push
push
fisttp
jmp
sbb
aam
push
dec
inc
cmps
pusha
inc
(bad)
fidivr
jnp
pop
outs
shl
add
inc
xor
cmc
cmp
lods
and
mov
add
sub
aad
or
jbe
mov
push
loop
or
test
xchg
cmp
cmc
cmc
mov
add
pushf
sub
mov
push
push
inc
mov
xchg
icebp
in
add
push
sub
adc
imul
fcomp
adc
and
push
ficom
lock
or
dec
cmps
popf
inc
push
in
or
icebp
sub
or
xlat
lods
sub
inc
mov
xchg
and
sub
aaa
push
sub
pop
in
sbb
add
or
adc
movs
cmps
mov
pop
jl
xor
scas
fadd
xchg
and
aam
add
and
data16
mov
and
push
mov
push
and
call
add
cmp
je
test
jo
popa
xor
int
outs
sbb
dec
cld
aaa
push
shr
xchg
out
les
pusha
ins
call
dec
mov
lahf
push
dec
(bad)
sub
(bad)
mov
lock
mov
pop
push
sbb
adc
sar
shl
add
iret
dec
pop
jl
es
xchg
add
frstor
dec
pushf
out
or
jle
cs
mov
shl
xor
mov
mov
cmp
mov
inc
in
lea
adc
ror
sbb
and
pop
cmp
(bad)
nop
fld
sub
inc
add
cmp
fldcw
xchg
and
adc
les
add
dec
mov
fidivr
and
addr16
xchg
mov
dec
inc
aas
mov
fld
adc
fsubr
push
sbb
(bad)
or
imul
or
push
(bad)
sub
lods
(bad)
sbb
jo
push
sbb
push
ror
fmul
jae
inc
mov
repz
xchg
mov
or
movs
jmp
sub
fidiv
and
ret
add
mov
loopne
jno
dec
rcl
and
sub
test
inc
and
das
inc
or
mov
pop
test
sbb
jg
inc
or
xchg
adc
js
pusha
fstp
push
push
fld
stos
push
repz
sbb
jecxz
add
push
enter
sub
inc
add
repnz
mov
ds
cmp
rol
movs
add
outs
mov
inc
xchg
jp
sbb
in
inc
out
or
inc
daa
adc
invd
dec
mov
out
push
pop
arpl
or
pop
dec
sub
or
push
dec
add
add
mov
sub
loopne
loopne
popf
push
mov
sbb
ret
out
mov
or
shr
cmp
das
add
xchg
shl
add
out
mov
add
push
push
test
dec
sbb
enter
or
movs
add
mov
jae
pop
icebp
and
or
xor
pop
sub
movs
pushf
push
jb
sbb
xchg
(bad)
mov
dec
xor
push
adc
pop
hlt
sub
jns
sbb
cwde
out
fld
out
sbb
push
pop
adc
shr
out
add
sbb
test
pop
and
jbe
nop
push
mov
or
pop
pushf
push
outs
mov
cmp
je
outs
adc
rol
mov
cmp
dec
or
mov
scas
stos
xchg
pop
ret
mov
push
enter
rcr
test
mov
sub
sub
jne
(bad)
xor
lock
bound
jae
mov
dec
push
xchg
push
xor
cmps
aas
mov
add
int
push
in
sub
leave
adc
cmp
test
cmps
rcr
and
ja
mov
mov
ror
mov
mov
frstor
inc
int3
mov
lods
xlat
out
pop
hlt
mov
aas
or
add
fucomi
adc
fnstenv
outs
cmps
loope
sbb
jp
sub
jp
pop
xor
test
cmp
push
cmc
dec
mov
push
or
xor
ret
cmp
invd
jp
or
fcomp
pop
jle
popa
jge
and
pop
dec
jne
mov
shl
arpl
pop
mov
out
pop
mov
xor
call
in
push
mov
aaa
sbb
dec
lea
aam
pop
dec
mov
inc
ss
cdq
clc
adc
(bad)
jmp
add
add
loopne
mov
rol
and
adc
ds
mul
or
(bad)
je
out
imul
scas
xlat
scas
fcmovnbe
aam
or
push
inc
add
cmp
and
dec
loop
add
mov
or
jb
mov
inc
pop
mov
mov
into
arpl
mov
rcr
inc
cmps
or
sti
pop
mov
push
test
sbb
dec
jb
outs
repnz
dec
aam
ss
shr
jle
xor
mov
cmp
dec
lock
or
pop
call
or
sbb
cmp
fs
stos
push
sub
or
cmps
lods
scas
inc
jo
add
dec
xchg
xchg
dec
rcl
xchg
sbb
es
mov
dec
xchg
mov
mov
dec
icebp
ret
add
es
mov
icebp
xchg
clc
(bad)
(bad)
loope
and
or
shr
mov
stos
xchg
or
enter
adc
push
sbb
mov
sbb
mov
std
syscall
data16
inc
pusha
call
test
jecxz
inc
push
call
mov
clc
jns
popf
xchg
xor
jp
lea
out
lock
in
ret
retf
shr
call
add
cdq
push
fcom
mov
pop
mov
loopne
pop
sahf
leave
mov
sar
dec
xor
push
(bad)
mov
test
test
adc
vpandn
xor
adc
lods
fnstenv
cmp
pop
xor
push
test
call
push
sub
shr
add
cmp
mov
push
adc
cmc
mov
sbb
inc
jne
push
adc
stos
cmps
jne
stos
int
int3
mov
imul
or
jne
push
ret
mov
xor
fldenv
cs
out
aas
popf
into
nop
or
push
rep
sbb
adc
(bad)
enter
or
mov
mov
dec
mov
or
mov
or
add
fdivr
int
add
mov
jne
mov
sub
sbb
ja
adc
shl
jbe
shl
push
out
push
scas
pop
mov
jns
add
enter
add
jle
fmul
sbb
ret
or
mov
pop
xchg
daa
adc
xor
inc
push
cmps
and
push
sbb
pop
adc
xchg
retf
cwde
or
aam
inc
push
mov
push
out
or
(bad)
xchg
lods
mov
mov
add
call
add
adc
test
jmp
jbe
pusha
sub
lock
mov
lea
retf
jl
ins
adc
inc
cmp
fimul
movs
popf
inc
inc
jne
std
sub
test
xor
cli
out
sub
mov
mov
add
lock
or
cld
add
pop
inc
outs
call
jmp
in
dec
add
movs
jmp
sbb
fnstenv
sub
sub
neg
test
loop
pusha
loop
out
add
retf
xchg
pop
push
bound
fsubrp
call
daa
dec
add
adc
nop
mov
int3
ror
dec
dec
jne
pop
cmps
sub
mov
mov
outs
inc
mov
retf
test
xchg
(bad)
daa
lods
(bad)
jle
movs
mov
ror
pop
adc
push
ss
jg
fcom
jecxz
sar
test
outs
add
pusha
dec
imul
imul
in
cld
(bad)
out
inc
adc
mov
ret
xchg
inc
cmp
add
mov
mov
sub
test
aaa
lock
add
push
cmp
(bad)
push
push
push
or
push
xor
add
test
ret
outs
mov
addr16
sbb
icebp
xchg
add
into
addr16
loop
out
or
enter
xor
inc
inc
sub
neg
out
sub
fimul
aas
outs
pop
lods
sbb
and
cmp
loopne
fsub
mov
push
xor
mov
cmp
or
jo
pop
sysexit
dec
pusha
dec
fdiv
dec
div
inc
fstp
sub
or
fwait
mov
call
add
sub
xor
add
dec
pop
in
lock
pop
adc
xor
jl
pop
pop
mov
jbe
sub
adc
xor
push
std
pop
add
pop
pop
jg
dec
push
stc
cmp
(bad)
cmp
and
arpl
addr16
int
push
nop
jbe
(bad)
pop
scas
dec
addr16
and
pop
pop
loope
jle
and
icebp
mov
xchg
cs
sti
xchg
test
es
add
pop
dec
fcom
test
(bad)
test
adc
and
mov
xchg
cmps
aam
stc
or
sbb
rcl
loopne
lock
aam
(bad)
cli
test
loopne
fcmove
jge
imul
sbb
repnz
mov
bound
mov
fimul
sbb
mov
dec
ret
sbb
push
(bad)
mov
cmp
push
sbb
inc
inc
cmp
jb
iret
sub
add
ds
les
out
adc
adc
pop
sbb
mov
mov
mov
jmp
jne
pop
lods
fld
jbe
mov
and
add
xchg
sahf
not
clc
add
dec
adc
loop
mov
scas
rcl
ins
sbb
lds
add
call
push
test
mov
test
inc
shl
dec
push
dec
jle
xchg
xor
and
push
mov
adc
mov
push
retf
dec
cdq
enter
out
loop
fmul
fsub
outs
mov
mov
repz
fild
adc
push
test
or
clc
jb
fcmovb
mov
dec
test
or
repnz
sub
sub
mov
add
ror
js
add
fmul
mov
push
jmp
xchg
int3
test
xor
mov
ds
add
jo
adc
xchg
retf
pop
leave
in
test
and
imul
mov
(bad)
aad
push
add
retf
or
mov
sub
and
mov
inc
dec
adc
stos
pushf
popa
call
jmp
xchg
cmps
iret
jae
pop
jbe
mov
pop
mov
sub
or
push
scas
pop
add
je
mov
das
arpl
in
pop
sub
push
stos
popf
es
fstp
adc
or
adc
xchg
push
sub
(bad)
jb
pop
pop
mov
sub
and
rcl
adc
loopne
xchg
pop
scas
xor
inc
retf
push
sub
test
pop
mov
call
(bad)
add
je
xchg
push
push
cmovns
aam
jns
into
clc
pop
fiadd
mov
mov
adc
js
sbb
fsubr
or
or
xor
cmp
pop
movs
inc
(bad)
or
pop
inc
(bad)
pop
and
div
mov
rcl
mov
in
mov
xor
add
jbe
es
rol
icebp
ret
test
out
dec
cwde
pop
pop
jo
retf
push
or
mov
push
adc
jmp
test
cmps
or
jmp
sbb
ja
jne
mov
in
push
sbb
xor
push
add
ins
xor
inc
push
sar
aaa
mov
or
add
mov
(bad)
out
lahf
inc
inc
mov
mov
cmp
jae
mov
daa
shr
ss
scas
dec
cmp
xor
jge
pop
jmp
push
pusha
in
sbb
jg
push
je
sbb
xchg
enter
dec
in
(bad)
and
ror
add
out
xchg
mov
ret
in
mov
jns
loopne
maxps
pop
pop
jb
pusha
mov
and
lods
cld
push
je
adc
inc
cmp
or
mov
add
ret
mov
or
xor
mov
lahf
nop
push
sub
add
mov
xchg
nop
rol
fld
pusha
add
or
outs
fldpi
mov
jnp
mov
sbb
mov
clc
mov
cmp
mov
and
and
lock
or
ret
stc
cld
sbb
dec
sbb
lods
sbb
jge
add
add
jmp
inc
pop
and
adc
xchg
int
jmp
std
cmp
add
jae
jb
and
fsub
stos
push
mov
loop
pop
cmp
add
xor
inc
jo
lahf
dec
and
rcr
je
and
add
loopne
retf
lock
(bad)
inc
js
mov
inc
adc
and
adc
mov
(bad)
mov
push
fsubr
push
and
cdq
add
xor
jmp
rcl
push
mov
mov
dec
jno
push
jo
cmps
add
pusha
add
cmp
pop
call
in
sti
inc
rcl
or
enter
xor
popf
add
sub
and
add
pop
popa
xor
xor
cmp
outs
push
out
in
dec
sbb
cmps
dec
ins
jne
xor
push
mov
mov
mov
sub
dec
dec
ja
ror
test
(bad)
clc
push
test
addr16
push
pop
add
add
cld
pop
je
outs
mov
in
ja
rcl
js
pop
je
mov
or
ret
push
sub
cld
xchg
sub
retf
mov
jmp
push
jp
mov
sub
js
mov
or
sar
and
or
fmul
and
fwait
mov
push
xchg
add
inc
jg
mov
mov
or
sbb
ret
adc
jno
(bad)
push
cmc
outs
test
mov
in
movntps
popf
call
adc
or
das
add
popa
sub
inc
fdiv
pop
movs
inc
mov
or
ins
inc
fild
in
jne
mov
xchg
or
pushf
nop
push
aaa
aas
or
movs
sub
fild
mov
jl
push
fldenv
loopne
add
sbb
test
lahf
add
fidivr
mov
xor
loop
jl
ins
mov
es
jmp
sub
jne
mov
push
inc
inc
int3
and
ret
sub
jns
add
call
js
or
sub
and
xchg
mov
pop
je
lea
dec
push
(bad)
push
jl
and
ins
mov
ret
cmp
add
cmp
ret
cmps
sub
idiv
das
and
pushf
dec
jg
sar
pusha
jns
or
mov
aas
in
pop
cmp
mov
lods
aaa
dec
enter
or
add
std
js
int
mov
aas
clc
adc
test
shl
inc
punpckhbw
or
sub
sbb
jg
adc
sbb
inc
pop
(bad)
arpl
stos
fucom
sbb
or
je
dec
mov
pusha
scas
jmp
xchg
or
loope
adc
mov
mov
in
cli
push
xchg
inc
jl
xchg
(bad)
pop
pop
jl
inc
sbb
jg
pinsrw
clc
mov
xchg
push
add
les
add
sbb
adc
bound
into
fld
sub
and
or
mov
bound
sbb
fs
fs
adc
push
adc
ds
dec
adc
mov
or
adc
mov
jbe
xor
inc
push
inc
jmp
imul
call
jmp
dec
mov
sbb
push
dec
and
xchg
mov
mov
lds
fsub
and
jmp
fild
xor
cmps
rcl
jne
and
inc
loope
bound
addr16
rcr
add
cld
call
mov
stos
jne
xchg
jle
out
clc
push
jmp
test
push
repnz
icebp
rcl
xchg
adc
sbb
mov
dec
jo
push
sbb
mov
or
sahf
cmp
lock
adc
test
mov
pop
pop
mov
test
out
lds
adc
xchg
je
xor
dec
(bad)
enter
clc
sub
mov
sbb
add
ss
cmp
outs
ins
jo
mov
and
or
inc
mov
pushf
loopne
je
xor
sub
dec
cmc
add
imul
shr
mov
sahf
lods
cmp
ror
das
jg
lods
fcmovnu
or
cmp
and
arpl
cmps
xor
xor
inc
push
or
jmp
ins
adc
retf
shl
push
sub
or
fmul
aaa
inc
sbb
and
xchg
xchg
adc
movs
fs
cmp
push
bound
fmul
inc
in
movs
mov
xchg
or
out
push
pop
add
mov
icebp
inc
xchg
push
and
nop
adc
cmp
fisub
mov
cmc
push
jp
pop
mov
mov
push
dec
mov
movs
bound
mov
cmp
pop
ins
and
sbb
cs
fwait
adc
or
mov
sub
mov
js
pop
sbb
pushf
or
outs
fist
ret
pop
fstp
push
mov
call
neg
xchg
add
sti
or
mov
out
outs
fdivr
xchg
or
jne
rol
jnp
je
jmp
jl
sub
jg
mov
retf
movs
bswap
push
mov
cmp
test
mov
test
arpl
pop
ror
mov
pop
xchg
push
and
inc
mov
cmp
push
fwait
dec
inc
push
call
cmps
or
mov
mov
cdq
call
mov
das
or
in
aas
xchg
and
add
fs
loopne
add
adc
mov
inc
ror
dec
dec
add
pop
pop
xor
cmp
mov
cmp
jecxz
mov
mov
cmp
dec
or
or
daa
mov
and
inc
pop
push
jecxz
clc
push
sbb
iret
loopne
ficom
daa
mov
xor
lods
xor
sbb
jmp
fiadd
mov
imul
push
sbb
fadd
mov
rcl
jbe
inc
es
xlat
and
inc
pop
inc
ss
xchg
pop
mov
data16
mov
jns
sub
je
dec
or
cmp
push
iret
shl
cmp
inc
push
inc
dec
sub
cmp
add
mov
xor
ss
mov
inc
ret
xchg
adc
inc
or
gs
das
adc
clc
int3
xchg
cwde
xor
pop
cdq
out
push
fcom
mov
add
jbe
push
inc
test
adc
jmp
fiadd
and
scas
mov
addr16
push
(bad)
sub
sbb
ins
mov
dec
inc
mov
std
adc
cdq
lock
clc
xchg
and
inc
push
pop
rcr
adc
retf
sub
fmul
movs
dec
and
std
push
scas
pop
in
add
dec
and
dec
xor
dec
push
fincstp
push
pop
imul
(bad)
rol
add
jne
mov
jp
inc
sub
leave
push
mov
xor
addr16
dec
popa
pusha
test
cmp
and
jbe
aaa
ins
cmp
or
cmp
daa
test
inc
inc
sbb
stc
ins
fnstenv
das
mov
pop
pop
inc
in
pop
cs
lahf
dec
rcl
enter
push
push
dec
rol
ins
mov
arpl
ror
push
cmp
dec
cmp
dec
cmps
jle
or
lods
push
(bad)
push
sti
rol
stc
cmps
daa
cld
and
dec
and
cli
cs
clc
std
jne
pushf
sbb
push
test
dec
mov
fld
(bad)
in
or
test
dec
inc
mov
sar
jle
adc
aam
outs
jge
cli
pop
jp
nop
mov
sub
add
mov
in
cmp
push
xor
sti
fs
sbb
jg
nop
and
gs
shr
sbb
inc
and
push
jb
add
out
sbb
add
jne
test
repz
add
xchg
lds
cmp
shl
xchg
or
dec
push
aas
push
mov
sub
push
sbb
test
inc
xchg
test
sub
push
pop
push
loop
or
jae
icebp
xchg
inc
push
jmp
in
test
lea
push
mul
int
sub
loope
cmps
test
enter
push
jl
cmps
clc
dec
aam
xor
mov
adc
adc
or
add
in
test
xor
dec
adc
push
cmp
dec
add
inc
cmp
push
cmp
sub
sbb
nop
sbb
scas
add
and
inc
cmp
xor
iret
mov
jl
aas
(bad)
das
inc
(bad)
cmp
pop
adc
jne
pop
push
cwde
ja
and
xchg
jo
sub
jecxz
adc
icebp
sub
mov
(bad)
scas
das
sbb
or
ror
movs
shl
je
cmp
jne
rol
out
out
mov
retf
pop
test
jbe
adc
test
dec
adc
ss
loop
popf
or
and
or
sub
xor
inc
jb
fwait
xchg
jmp
jl
data16
outs
lock
xchg
mov
cli
dec
and
leave
popa
mov
xor
adc
je
xor
pop
aaa
push
push
ss
and
je
mov
pop
movs
add
add
cmp
add
mov
stc
xchg
(bad)
and
sbb
stos
or
ret
(bad)
or
enter
sub
inc
cmp
sbb
inc
adc
pushaw
pop
popa
pop
inc
adc
pop
mov
sbb
std
into
sub
jl
bound
cmp
fadd
sub
add
(bad)
ds
or
je
data16
out
mov
xor
test
jo
jge
sbb
add
sub
and
fisttp
mov
dec
push
inc
add
cmp
sti
and
dec
jl
and
outs
mov
push
sbb
das
je
imul
pop
xchg
add
mov
sub
sahf
sbb
enter
call
sbb
add
outs
sbb
pop
ds
aam
add
xchg
and
sub
xchg
(bad)
xor
and
popf
test
aam
nop
ja
sub
inc
xor
sbb
jg
pop
dec
iret
call
xor
sub
(bad)
daa
jecxz
adc
add
call
dec
xchg
addr16
add
fsub
or
xchg
lock
jne
adc
jp
int3
stos
push
and
lock
inc
push
xor
dec
addr16
in
pop
pop
mov
cmp
leave
mov
xchg
xchg
mov
loopne
lea
dec
sbb
dec
add
stc
cmp
test
xor
lea
adc
pusha
aam
imul
(bad)
push
(bad)
into
pop
sti
or
nop
sar
xchg
xor
inc
adc
and
inc
sbb
or
fimul
je
ss
add
fisttp
add
loop
inc
adc
mov
adc
push
adc
fadd
and
inc
mov
cmp
inc
mov
add
cmp
mov
mov
or
mov
in
cdq
sbb
and
ss
sbb
adc
xchg
sar
shl
pop
adc
pusha
test
dec
jl
xor
cmp
push
adc
outs
loopne
call
aaa
out
push
lock
xor
imul
in
inc
pop
lds
adc
test
in
mov
inc
mov
movs
push
inc
cmp
or
jno
mov
add
outs
or
or
(bad)
jne
xor
xchg
add
lock
fistp
std
pop
mov
jae
inc
(bad)
int
xor
cmps
add
add
mov
dec
loop
push
inc
es
add
shr
or
stc
lea
enter
fadd
mov
push
stos
mov
mov
mov
shr
and
add
fld
or
(bad)
fcmovb
pop
les
fldl2t
cwde
push
scas
in
cs
clc
shl
scas
push
or
bound
xchg
inc
jne
jmp
xor
in
add
mov
mov
lods
test
(bad)
mov
xor
and
pop
add
jle
int
in
adc
pop
inc
add
or
and
(bad)
xor
or
scas
dec
or
mov
add
and
inc
or
popa
dec
inc
scas
lock
je
pop
fmulp
sbb
dec
ins
adc
fidiv
mov
nop
fidiv
jmp
xor
push
sbb
adc
popa
jmp
xchg
cmp
mov
ficom
aam
xor
call
lods
imul
jle
std
xor
cmp
jge
sub
(bad)
inc
xchg
jg
rol
add
aas
mov
dec
jecxz
fwait
cli
inc
inc
pop
rol
sbb
or
dec
cmps
in
sbb
movs
add
mov
jmp
ins
mov
dec
ja
mov
out
(bad)
retf
sar
int3
retf
in
das
and
cmp
ins
mov
xchg
loope
inc
mov
adc
or
cli
and
mov
loop
push
in
je
jg
mov
div
mov
sti
mov
jmp
sub
outs
ins
jb
jmp
inc
add
jae
les
jecxz
mov
pop
iret
sub
push
sbb
neg
stc
inc
xchg
sbb
inc
imul
(bad)
stc
mov
rol
push
rol
rcl
pop
cmps
cmp
add
xor
add
mov
jle
jge
adc
(bad)
ja
addr16
add
push
cmp
mov
jae
push
pop
dec
hlt
adc
mov
sub
dec
inc
add
mov
cmp
mov
add
inc
jno
adc
pop
mov
or
inc
mov
inc
add
fisub
inc
scas
fidivr
xor
xor
and
xchg
pop
xchg
lock
xchg
or
add
in
mov
imul
mov
inc
push
add
mov
cld
mov
lds
call
or
push
sub
enter
ret
shl
dec
dec
or
sbb
mov
dec
mov
or
dec
mov
jne
call
dec
xchg
adc
mov
or
xor
mov
pop
sbb
jbe
adc
repnz
pop
add
out
jbe
xor
aad
(bad)
movs
inc
outs
daa
jne
(bad)
(bad)
pop
lods
ret
xchg
aam
sub
or
add
retf
dec
mov
fnstsw
jg
cmp
and
sar
adc
push
push
sbb
push
push
pusha
mov
push
xchg
mov
and
es
sar
push
inc
jns
ja
adc
jmp
inc
mov
pop
dec
pop
or
ds
cmp
fsub
call
add
pop
push
daa
sbb
(bad)
push
inc
inc
push
into
dec
dec
and
mov
push
jne
add
mov
jb
jmp
adc
xchg
nop
add
dec
call
cmp
leave
retf
mov
test
cmp
sbb
imul
inc
ins
cmps
push
inc
push
or
in
sbb
movs
out
es
mov
dec
mov
and
in
in
mov
out
bound
js
test
and
outs
mov
inc
add
inc
movs
icebp
test
add
or
and
push
jbe
sub
out
gs
adc
call
and
es
mov
lock
or
shl
mov
out
aaa
lods
push
push
sbb
imul
or
mov
outs
iret
add
mov
outs
xor
ffree
nop
fimul
lahf
into
sahf
je
add
aas
jl
push
xchg
aaa
mov
mov
adc
add
mov
call
pop
push
or
aam
mov
adc
retf
or
cmp
(bad)
leave
ins
pop
jno
fisttp
mov
pop
call
ror
jmp
cld
ja
(bad)
fcmove
jo
arpl
inc
mov
xchg
popa
in
jbe
pop
or
stc
int3
into
mov
jnp
(bad)
(bad)
or
(bad)
enter
pop
and
loop
jmp
(bad)
movs
push
enter
sbb
fdivr
jp
dec
jecxz
aam
sbb
mov
sub
push
jp
push
push
mov
sbb
scas
bound
test
dec
lock
sub
lea
sub
or
push
je
xor
rcr
push
adc
pop
clc
mov
cmp
jp
dec
adc
cmp
push
or
push
add
or
mov
inc
inc
scas
push
pop
cmp
push
cmp
cdq
push
sti
or
jne
cmp
cmp
stos
xchg
mov
mov
inc
and
cmp
loopne
mov
add
outs
lods
aad
into
test
sbb
cmp
inc
arpl
adc
push
mov
nop
pop
in
and
and
sbb
sub
pop
or
lea
add
adc
or
fist
fistp
inc
push
fwait
(bad)
pop
xor
cs
xor
int
es
rol
and
inc
or
jbe
sub
dec
adc
xlat
popa
adc
cmp
pop
xchg
and
or
adc
movs
movs
adc
jne
popa
bound
in
ds
or
and
mov
xchg
rcr
arpl
and
retf
and
jno
shl
and
test
lock
dec
mov
test
ins
push
bound
sub
xor
and
fisttp
arpl
sbb
mov
add
cmp
hlt
sar
lock
jp
inc
imul
ds
pop
mov
sbb
shr
enter
xor
push
pop
inc
sub
mov
sbb
cmc
lahf
xor
rol
(bad)
mov
mov
out
sahf
outs
jg
dec
sbb
xor
rcr
bound
jbe
mov
add
and
inc
sub
cmp
aam
or
pop
je
add
shr
push
mov
mov
mov
nop
jnp
cmp
cmp
rcl
push
shl
and
sbb
sbb
mov
and
dec
rcl
dec
jl
cmp
jecxz
cmp
int3
adc
inc
xchg
jnp
adc
fs
inc
inc
xor
inc
bound
sbb
cli
cwde
sbb
(bad)
cwde
or
and
add
sub
test
or
mov
ret
xor
pop
add
sbb
ds
mov
outs
dec
(bad)
inc
dec
inc
sti
sbb
add
adc
enter
pusha
fs
push
sub
aam
inc
push
mov
sub
inc
inc
es
push
cmp
and
mov
loopne
pop
or
and
add
(bad)
mov
outs
or
sbb
inc
mov
fsubr
and
test
rcl
(bad)
add
pop
lahf
lods
push
stc
es
std
jmp
add
scas
adc
sub
jmp
or
pop
dec
xor
je
mov
in
or
mov
pusha
push
mov
nop
ins
test
inc
jbe
icebp
push
icebp
pop
or
rdmsr
ins
ja
popf
popf
outs
enter
mov
push
cmp
sub
or
jbe
xchg
out
and
shr
add
inc
es
push
add
add
adc
enter
xchg
(bad)
shl
mov
(bad)
out
push
jmp
dec
dec
jne
and
iret
push
pop
dec
arpl
outs
xor
call
stos
fcomp
add
ins
add
cmps
bswap
loop
fmul
inc
or
(bad)
jae
sub
(bad)
and
pop
cs
or
mov
shr
call
xor
xchg
add
push
add
xor
jb
xchg
and
push
push
mov
pushw
dec
push
bound
xor
jo
xor
gs
or
pop
push
mov
or
inc
xor
inc
dec
push
aam
sbb
or
add
adc
inc
bnd
pop
or
in
adc
es
or
or
cmp
or
push
js
mov
or
or
cmp
ficom
jae
cs
xchg
xor
push
add
out
sbb
adc
es
mov
push
neg
mov
fcom
xchg
test
pop
jno
fstp
mov
sub
inc
add
fmul
add
outs
dec
add
int3
jne
clc
sub
push
imul
and
js
xlat
inc
sub
or
sub
adc
adc
hlt
push
add
pusha
rcr
sbb
or
xchg
or
or
or
pop
pop
push
(bad)
sbb
in
xchg
mov
sbb
push
adc
sti
push
jg
jmp
mov
or
ss
pop
dec
adc
or
icebp
dec
jne
sub
ror
inc
lds
push
xchg
pop
mov
jae
xchg
daa
std
add
push
xchg
dec
(bad)
outs
and
sub
cmp
mov
adc
jecxz
jmp
or
jmp
sbb
push
pop
add
cbw
je
add
cwde
xor
imul
daa
ins
ds
push
or
add
fsub
inc
mov
imul
pop
sahf
sbb
dec
jle
jmp
mov
test
rcr
enter
cdq
jbe
xor
cli
inc
add
aas
fcmove
mov
out
mov
aas
push
push
aad
mov
sub
mov
shl
sub
ror
cmp
mov
pop
push
out
ret
call
add
inc
movs
xor
mov
xor
bound
aaa
ins
ins
js
mov
outs
add
mov
xchg
cmp
addr16
adc
movs
test
test
cmp
inc
cli
and
repz
add
and
xchg
sub
or
pop
sbb
or
pop
sti
inc
mov
mov
adc
push
push
call
popa
push
or
ins
add
adc
cld
shl
mov
xchg
mov
fs
cmp
push
lock
ror
or
jmp
call
js
rcr
pusha
daa
add
cmp
jmp
cmp
xchg
mov
xchg
test
mov
lea
aad
loopne
add
cmp
lea
(bad)
enter
pop
sbb
cmp
cmp
cmp
jno
adc
movs
inc
dec
jmp
push
lds
ds
mov
adc
adc
push
jp
cdq
jmp
addr16
scas
cmp
pop
frstor
lea
addr16
or
dec
loopne
arpl
and
out
mov
(bad)
mov
stos
xchg
xor
inc
inc
repz
mov
jmp
push
cmp
jno
nop
sbb
xchg
adc
xlat
cmp
aaa
mov
jp
and
sbb
(bad)
call
mov
add
dec
call
xor
jg
add
lea
dec
loopne
cmps
js
add
push
xor
sub
adc
jne
sub
adc
mov
pop
xor
and
or
sbb
rcr
shl
imul
dec
mov
unpcklps
dec
dec
imul
pushf
rcr
cmps
push
adc
(bad)
popa
or
xor
xchg
jbe
fwait
xchg
mov
sbb
mov
dec
dec
xlat
retf
aaa
jo
fs
adc
sub
(bad)
outs
movs
(bad)
mov
jmp
sbb
sub
mov
rol
pop
jbe
sar
scas
push
pop
es
xor
movs
ficom
mov
in
fld
xchg
cmp
call
xchg
mov
mov
mov
cmp
xor
push
cwde
cmp
pop
adc
scas
or
xor
outs
pop
pop
mov
dec
pop
loope
out
jl
in
add
inc
hlt
cmc
repnz
add
jb
or
mov
fidivr
lods
sar
test
sub
dec
bound
add
ins
bound
add
inc
cmp
add
pop
mov
(bad)
cwde
jo
push
inc
jmp
dec
mov
loopne
jb
add
add
mov
lldt
pop
ins
push
sbb
cs
dec
mov
pop
popf
add
dec
add
push
aad
jmp
rcl
push
and
shr
fs
jmp
jbe
movs
cmp
mov
or
fisttp
add
jbe
(bad)
cdq
lods
fsubr
add
add
push
js
pop
ret
fbstp
dec
add
mov
rol
add
and
call
mov
dec
out
xchg
dec
ret
ja
imul
repnz
add
popf
std
arpl
(bad)
push
jnp
dec
push
pop
test
inc
or
lock
jecxz
jbe
and
cs
and
rol
(bad)
fidivr
ficom
mov
inc
sub
jle
xor
sub
imul
xchg
outs
int
or
and
inc
addr16
jg
rcl
push
das
out
xchg
mov
jmp
jnp
sub
iret
aad
dec
xor
jmp
outs
and
inc
or
xchg
adc
loope
xchg
dec
adc
or
(bad)
ins
out
fldcw
inc
lahf
loop
push
in
call
sti
ss
fbstp
jg
out
loope
lea
add
add
mov
lods
into
add
dec
mov
inc
or
or
ja
add
sub
fadd
cmc
cwde
jl
push
or
pop
fstp
mov
lahf
xor
jne
popa
add
adc
adc
into
pop
jne
jne
sub
std
stc
xchg
stos
sbb
sbb
cmps
jne
(bad)
ja
or
aaa
std
dec
cld
imul
inc
std
cld
pop
pop
jecxz
inc
push
dec
jne
or
test
sahf
add
out
jb
sahf
rcl
jne
add
pop
rcl
clc
test
cli
int
stos
dec
add
inc
xchg
inc
mov
inc
jb
add
fld
adc
xchg
aam
ret
xchg
xchg
(bad)
js
mov
loop
mov
ja
push
retf
sbb
aaa
sbb
std
add
fld
sbb
dec
inc
ror
pop
fadd
inc
push
or
cmp
or
fdivr
sub
xchg
mov
mov
or
jmp
neg
(bad)
or
shr
mov
mov
fadd
mov
(bad)
hlt
loopne
or
jne
sar
sar
out
jno
shr
and
pop
xchg
pop
lock
pop
(bad)
dec
or
les
mov
push
sub
test
enter
dec
jne
(bad)
adc
ret
or
ror
mov
adc
das
mov
push
inc
sti
imul
inc
adc
icebp
mov
inc
out
nop
jo
into
bswap
lock
or
and
inc
clc
and
cmp
mov
xchg
mov
sub
push
test
xor
mov
add
sbb
and
enter
stc
mov
mov
mov
or
cmps
lock
mov
jbe
push
pop
lahf
xchg
sahf
sbb
enter
or
mov
jbe
test
add
mov
jo
ror
push
and
sar
adc
push
loope
mov
arpl
or
call
sub
(bad)
lahf
fst
and
jb
ret
sub
das
js
test
ins
cmp
sub
dec
repz
dec
fimul
push
add
fnsetpm(287
mov
dec
xchg
jo
add
iret
ret
mov
sub
mov
jae
sbb
cdq
add
inc
cmp
fisttp
sub
cdq
mov
fcmovnbe
(bad)
mov
inc
mov
js
adc
xchg
add
push
or
add
cmp
xchg
ss
js
cmp
mov
pusha
dec
xor
inc
popa
les
mov
mov
and
adc
or
add
add
out
push
mov
cmp
lea
mov
or
cmc
fstp
and
and
xor
mov
push
not
mov
xor
push
or
or
leave
adc
pop
inc
iret
fisttp
mov
retf
(bad)
or
jae
mov
pop
fs
add
or
je
add
test
pop
xor
sbb
mov
popf
(bad)
xor
jecxz
cmp
js
dec
mov
clc
or
push
mov
jge
push
(bad)
fild
jo
sub
into
cli
call
cmp
imul
adc
push
jne
adc
rol
loope
retf
sbb
js
fld
xchg
jp
js
push
mov
push
movs
std
repnz
loop
add
ds
push
add
call
mov
or
add
movs
lods
lods
add
or
push
cmp
mov
push
stc
enter
ffree
js
add
pusha
lock
ror
iret
jo
mov
pop
adc
neg
sbb
test
stos
cli
adc
sahf
mov
ret
shr
sub
loopne
xchg
inc
add
inc
push
or
pop
push
push
jne
or
inc
mov
inc
and
mov
movs
mov
(bad)
cmp
mov
push
dec
dec
mov
jmp
xor
add
loope
jmp
test
add
popf
data16
cmp
cmp
or
adc
sub
cmp
jne
or
jmp
adc
ficom
pusha
cmp
dec
retf
push
int
retf
sar
add
(bad)
pop
stc
mov
or
aad
mov
push
add
dec
(bad)
cmp
jecxz
dec
or
pop
sbb
int3
sti
add
cmp
jne
adc
sbb
push
out
rol
add
push
or
arpl
mov
mov
fnsetpm(287
add
lock
loope
push
pop
adc
sbb
lock
adc
adc
add
push
movs
xor
ret
dec
lock
jo
pop
sti
jne
adc
jne
dec
std
push
sahf
retf
and
sbb
adc
jg
and
push
sub
mov
mov
fs
dec
or
sub
movs
sub
pusha
pop
and
outs
inc
sub
inc
cs
(bad)
push
jg
jle
call
or
les
or
ror
shl
dec
dec
add
pop
pop
daa
hlt
(bad)
and
mov
dec
shl
rcl
loopne
adc
inc
or
cmp
ret
jmp
adc
pop
mov
mov
push
ret
add
mov
test
mov
jbe
add
inc
in
retf
push
loopne
mov
adc
add
add
push
jmp
push
loop
or
inc
dec
mov
jb
leave
fwait
fwait
mov
test
mov
out
or
or
add
mov
mov
sbb
sti
add
sti
enter
iret
pop
xor
test
mov
xchg
dec
pop
dec
mov
mov
sbb
test
pop
or
nop
ds
jmp
sbb
push
and
mov
xor
out
shl
lock
add
dec
jl
mov
add
xchg
inc
nop
stos
out
xor
stos
cmp
aas
sbb
or
jae
fmul
test
add
pop
sbb
ror
adc
stos
jge
fcomp
push
je
inc
ins
push
sbb
pusha
push
sub
ss
ss
call
jmp
ds
adc
add
lahf
adc
cmp
jb
and
cli
or
clc
add
shl
add
sbb
jp
and
or
mov
xchg
mov
inc
mov
jmp
xor
pushf
cmp
mov
pop
add
cli
repz
cmc
mov
hlt
jnp
les
dec
not
(bad)
sbb
jns
(bad)
cmps
cmp
inc
shr
or
repz
adc
add
add
sub
sub
fsub
pop
add
and
aad
jb
cld
jp
or
aas
cmp
push
loopne
or
dec
or
or
sbb
mov
lods
sbb
retf
movups
(bad)
pop
sub
cs
push
push
sbb
imul
xchg
sbb
push
addr16
cmp
icebp
adc
imul
add
jb
call
dec
call
or
test
dec
sub
add
jle
push
or
loop
sbb
or
add
cmps
pusha
std
into
jb
mov
pop
retf
mov
push
arpl
ds
jns
add
adc
inc
push
cmp
and
outs
xor
and
inc
into
int
add
xlat
push
push
or
clc
mov
sbb
mov
aaa
mov
sbb
iret
add
sbb
dec
cmp
and
jbe
das
scas
pusha
mov
or
sbb
add
add
lods
and
and
pop
or
ret
pop
pop
sahf
scas
or
and
mov
add
bound
pushf
fiadd
adc
jl
je
add
cmp
cs
xchg
sub
xchg
pop
push
add
mov
sahf
push
or
or
cmps
test
in
pop
xchg
pop
xchg
inc
pop
or
pop
add
shl
xchg
xchg
mov
and
sahf
push
mov
(bad)
int
pop
cvtps2pi
inc
in
and
bound
rcr
or
(bad)
dec
jb
xchg
or
rcr
pop
or
outs
(bad)
pop
sbb
cmp
(bad)
fmul
xor
dec
cmp
jne
add
stc
add
or
movs
fwait
call
mov
test
sbb
adc
mov
fiadd
xor
sahf
add
and
sbb
pop
mov
paddusw
mov
cdq
sbb
inc
pop
repz
add
push
mov
dec
mov
add
into
or
adc
je
aas
mov
ret
xor
ss
cmps
mov
cs
mov
stos
call
pushf
jb
inc
or
rol
or
mov
dec
ret
test
push
nop
popf
push
mov
xchg
jns
adc
xor
pop
lods
xchg
arpl
mov
mov
xor
push
inc
loop
sbb
xchg
cmc
dec
mul
call
imul
add
inc
movs
dec
ret
adc
ret
jmp
cmps
push
dec
and
dec
and
sbb
xchg
(bad)
push
adc
or
xchg
xchg
shl
adc
pop
and
les
mov
push
gs
or
inc
cmps
or
and
(bad)
sub
aaa
outs
mov
jb
shl
push
add
pushf
loopne
pop
xor
and
or
adc
or
inc
pop
pop
leave
inc
xchg
cdq
lds
fist
ror
das
daa
pop
mov
xor
mov
aas
sub
or
add
(bad)
das
cmps
xor
bound
ror
jecxz
arpl
sbb
xor
push
sub
sub
sar
cmp
mov
(bad)
and
dec
es
adc
sbb
push
push
or
mov
lahf
movs
cli
sub
iret
test
dec
sub
cmp
clc
add
mov
pop
imul
sbb
xor
add
mov
push
mov
ret
mov
outs
jno
imul
movs
daa
out
daa
loopne
xchg
dec
retf
jns
or
sub
aam
mov
or
pop
mov
in
or
xor
mov
xor
popf
fadd
lock
xchg
sbb
mov
xchg
jl
lods
ret
jp
xor
add
loopne
lahf
lds
cmp
mov
pop
sbb
inc
push
push
mov
mov
mov
and
add
dec
js
and
es
aad
popa
leave
clc
(bad)
pop
mov
xor
test
sar
push
dec
push
dec
cwde
pop
lods
jg
js
and
and
pushf
push
stos
pop
adc
ins
ficom
or
pop
xor
mov
pop
sub
loopne
cmp
(bad)
push
loopne
push
aas
pop
cmp
js
and
and
add
push
call
int3
sbb
add
add
xchg
push
ret
aad
test
out
adc
gs
add
(bad)
push
xor
cdq
jbe
push
add
xchg
int
pop
cs
popf
push
(bad)
and
dec
retf
adc
inc
mov
test
test
mov
sbb
sar
enter
adc
imul
mov
ja
push
mov
push
cmp
jbe
jle
mov
push
pop
loop
add
pop
jl
add
test
or
and
add
sar
test
mov
(bad)
cmps
add
leave
mov
lock
(bad)
shl
add
dec
or
jo
push
inc
push
(bad)
call
adc
jl
and
mov
mov
jge
mov
sbb
pop
shl
sbb
xor
or
imul
mov
or
movs
add
jo
fisubr
sar
movs
cmc
pop
ins
xor
(bad)
push
ret
mov
push
xchg
mov
outs
sub
icebp
inc
xchg
adc
sbb
cmp
xor
mov
sbb
jns
out
call
push
cld
ins
sbb
push
(bad)
push
push
mov
mov
and
int
pushf
jbe
jne
or
push
or
sbb
adc
cmp
rol
fimul
retf
and
lods
shr
or
sbb
je
daa
add
lea
ja
xchg
xchg
lahf
jle
imul
mov
lds
xchg
jp
mov
or
or
push
mov
push
adc
push
adc
jne
cmp
mov
push
inc
stos
add
and
sub
mov
add
sub
mov
sbb
ins
push
add
rcr
jmp
push
dec
or
or
cmp
dec
ja
test
sub
popa
add
push
mov
adc
out
popa
inc
lds
shl
push
clc
or
js
add
popf
cmp
jle
push
jl
cwde
xor
push
aam
rcr
out
in
lock
adc
bound
add
movs
inc
not
dec
sbb
lds
js
sbb
sbb
add
aad
adc
daa
push
push
jmp
jb
hlt
mov
pop
mov
and
aam
cmp
push
add
dec
dec
sub
push
adc
push
mov
xchg
jnp
inc
cmp
retf
mov
mov
rol
cmp
jge
(bad)
xchg
push
and
imul
js
mov
lods
cdq
popa
pop
inc
add
or
lock
pusha
jmp
ja
push
add
pop
ja
jnp
dec
rol
ja
or
pop
and
and
xor
adc
hlt
dec
sbb
ret
push
inc
mov
xchg
stos
and
adc
enter
dec
xor
push
push
mov
xchg
mov
add
xor
fidivr
mov
jle
cmp
mov
sub
mov
and
mov
mov
fst
sbb
mov
cmp
jg
rcl
cmp
jg
xor
add
cmp
loope
xchg
mov
ucomiss
imul
jbe
sub
leave
adc
push
pop
cmp
or
iret
and
or
call
ret
or
mov
shl
jbe
ret
in
pop
(bad)
hlt
js
or
xchg
int
test
jmp
pop
adc
imul
xchg
imul
jmp
jmp
adc
rcl
test
xchg
rcl
mov
dec
(bad)
jge
push
lea
push
push
shr
add
mov
dec
push
dec
or
sbb
rol
popa
rol
xchg
jnp
xchg
mov
or
or
loope
xor
mov
cmps
xchg
neg
rol
and
lods
add
adc
cli
and
xchg
mov
lods
adc
int
adc
repnz
xor
adc
arpl
add
sub
and
cmp
ds
in
jmp
gs
adc
lock
sub
sahf
pop
aas
fcom
lods
add
iret
imul
mov
push
lock
icebp
dec
ins
test
cs
mov
inc
(bad)
inc
push
mov
cmp
add
inc
or
cwde
ins
sbb
fsubr
dec
push
sub
push
mov
add
inc
jmp
shl
xlat
or
mov
lock
or
xchg
mov
sub
sbb
fs
adc
(bad)
adc
mov
dec
pop
add
push
cli
pop
push
mov
jne
pop
ja
xor
push
cmps
cmc
add
add
ja
inc
pushf
lock
ret
neg
and
mov
xchg
in
fcomp
jne
mov
inc
pusha
es
cwde
mov
or
inc
jle
mov
and
sub
jne
jg
cmp
shl
mov
push
iret
add
fist
mov
pusha
push
push
jle
arpl
sub
mov
test
imul
sahf
pop
mov
scas
mov
xchg
push
mov
jl
mov
mov
scas
xchg
imul
call
repnz
push
jmp
push
fist
loopne
nop
push
(bad)
pop
add
ficomp
inc
jo
add
call
push
sbb
shl
lds
pop
push
sub
aam
cmp
inc
(bad)
mov
jb
sbb
imul
add
add
inc
pop
fadd
dec
mov
jne
push
jle
dec
and
mov
clc
aam
and
xchg
movs
je
test
rol
add
inc
js
xchg
inc
mov
xor
sbb
dec
inc
retf
rcl
mov
mov
mul
add
cwde
lock
jno
ss
xor
or
fldenv
push
sbb
adc
add
add
shl
int3
(bad)
call
push
xchg
dec
and
rcr
sub
scas
ins
pushf
cmp
mov
in
adc
push
pop
and
jb
jmp
inc
aaa
dec
fidivr
jb
imul
add
or
sbb
and
fucomip
or
xor
and
lahf
movs
push
and
pop
nop
or
pop
jns
mov
pop
test
dec
cmp
jmp
jno
xchg
adc
test
imul
inc
dec
sbb
idiv
jecxz
add
jno
add
and
mov
sbb
xchg
mov
or
push
or
sub
and
or
or
sbb
inc
sub
push
push
dec
or
lea
test
adc
int
out
fadd
fadd
jmp
jmp
and
cld
jge
loopne
cmp
push
and
mov
ror
dec
xor
and
dec
sar
in
mov
add
cmp
loopne
add
dec
mov
retf
mov
or
jns
jle
sub
add
xor
dec
call
push
adc
adc
or
pusha
in
push
stc
xor
inc
inc
mov
test
push
cmp
call
or
mov
mov
imul
shl
push
pop
push
sbb
sub
cmp
aad
add
test
mov
dec
xchg
and
jb
add
add
test
adc
or
pcmpeqw
cmp
inc
and
sbb
inc
movs
push
ins
sbb
inc
push
pop
lods
adc
int
jge
lea
lahf
sub
xor
add
and
iret
and
dec
idiv
inc
in
jb
add
test
mov
dec
sbb
scas
push
test
push
mov
inc
add
adc
rep
mov
imul
cmp
jle
xchg
test
lods
mov
push
outs
cmp
inc
xchg
xchg
enter
pop
push
ret
mov
sbb
je
dec
jne
dec
sbb
dec
jae
pop
shl
test
test
(bad)
pop
mov
jno
xor
sbb
ins
cmp
push
into
add
ins
jecxz
dec
arpl
cmp
or
call
fstp
cmp
inc
sbb
add
sbb
or
cmp
imul
loopne
dec
and
mov
and
xchg
or
mov
sbb
js
cmp
mov
jg
xchg
movs
cmp
pop
add
dec
cld
add
pop
mov
mov
daa
sbb
inc
push
adc
xchg
out
(bad)
out
mov
repnz
sbb
pop
rol
in
sbb
lea
daa
cmps
jp
popf
ret
xchg
mov
jge
lock
xor
retf
xor
add
or
adc
xchg
xor
fidiv
push
test
inc
or
sbb
pusha
ins
test
scas
lods
xor
xchg
or
or
adc
xor
mov
or
mov
push
test
pop
cmp
pop
jl
push
rol
cmovge
ret
outs
pop
out
int3
out
inc
adc
jg
pusha
or
xor
or
add
mov
add
inc
out
dec
inc
inc
mov
push
imul
xor
pushf
xchg
push
mov
push
pop
jae
dec
repz
sbb
push
jl
xlat
jg
lea
js
and
dec
or
fidiv
lea
xchg
add
imul
push
loopne
add
pop
(bad)
stos
or
and
add
add
mov
mov
fisttp
sub
cs
fsub
push
loopne
dec
or
call
lock
or
and
ret
mov
cmp
inc
mov
mov
gs
das
inc
xor
jmp
mov
push
mov
arpl
adc
push
jmp
popa
gs
lahf
adc
sub
jbe
dec
cmp
mov
push
(bad)
xchg
or
shl
sar
or
movs
mov
les
cwde
inc
jmp
mov
push
ret
xchg
sbb
cld
inc
pop
ret
pop
call
repz
shl
mov
shl
std
retf
pop
cmp
add
and
and
out
push
xchg
aaa
xor
jns
push
js
and
and
mov
mov
fwait
in
ss
add
xor
push
push
rcr
dec
mov
mov
int3
xor
adc
loope
mov
jne
stc
lds
inc
adc
pop
in
jo
sub
xchg
daa
inc
sbb
enter
inc
stos
sub
(bad)
bound
rcl
inc
nop
ss
pusha
pusha
jge
inc
cmp
sub
ins
adc
cmp
js
add
inc
inc
imul
(bad)
aas
inc
and
push
cmp
push
test
mov
sbb
xchg
or
or
mov
cmp
adc
sbb
add
sbb
dec
adc
xchg
sar
jmp
test
ret
inc
sub
push
or
or
add
mov
sbb
or
into
mov
add
or
sbb
test
push
mov
and
pop
and
mov
or
fwait
ror
pusha
add
xchg
cmp
pop
xchg
cmc
sub
ficom
push
rcr
and
imul
inc
push
ret
mov
pushf
jo
jno
cmp
adc
pop
adc
jmp
mov
mov
sbb
dec
pop
push
les
add
rol
mov
cdq
mov
push
inc
sahf
rcl
add
pop
push
push
push
mov
scas
stos
in
pushf
sub
ins
clc
call
inc
pop
jl
ins
retf
mov
pop
ins
iret
jne
push
adc
push
outs
jne
pop
vpsrlvw
sub
jne
xchg
push
mov
cmp
sub
and
mov
sub
sub
data16
(bad)
sub
adc
ins
fild
push
push
dec
jle
push
sub
adc
rcl
pop
adc
dec
mov
dec
mov
sub
scas
mov
cmp
mov
aas
xchg
ins
mov
push
add
or
mov
mov
mov
dec
inc
xchg
jne
out
add
fistp
mov
aad
cs
push
cmp
jne
shl
adc
test
cs
xchg
jno
adc
cmp
adc
cld
dec
push
mov
in
dec
dec
jmp
adc
push
push
push
jmp
add
xor
or
lsl
or
outs
ins
pop
into
add
bound
outs
pop
sbb
aaa
leave
and
sbb
dec
dec
leave
loopne
fadd
adc
nop
and
jb
aaa
inc
mov
dec
xor
jb
pusha
add
adc
fmul
das
xor
or
ror
mov
clc
mov
jmp
and
mov
and
icebp
sbb
dec
push
hlt
push
stc
div
loop
and
and
iret
repz
ror
add
add
push
xor
in
push
sar
or
or
or
mov
inc
mov
push
add
bswap
and
add
clc
fadd
push
je
add
int3
ja
or
xchg
call
mov
inc
fs
inc
pop
xchg
mov
adc
pop
mov
pop
and
sub
mov
jl
xor
add
and
mov
cmp
or
or
dec
rcl
in
inc
cwde
rol
pushf
test
mov
sbb
cld
aaa
cmp
adc
xor
nop
arpl
dec
add
push
sbb
int
pavgb
adc
push
sbb
repz
sbb
dec
sbb
sbb
int3
add
test
pop
lods
pop
inc
cmp
nop
retf
add
or
or
sub
lds
inc
and
xchg
push
inc
mov
and
daa
add
dec
pop
cli
jbe
or
pop
movs
mov
push
ja
cmp
mov
daa
sbb
pop
add
and
and
ret
(bad)
sub
mov
xchg
sub
or
rol
jne
scas
aaa
inc
inc
pop
stos
add
push
jb
add
mov
jnp
loopne
loopne
add
inc
or
adc
xor
pop
ds
inc
push
ds
adc
dec
inc
jmp
mov
add
cwde
je
push
bound
(bad)
fild
aam
imul
mov
or
xchg
icebp
mov
into
pop
mov
rcl
test
cmp
repnz
push
retf
or
gs
cmp
dec
mov
inc
cmp
sbb
jns
inc
call
addr16
add
dec
rcl
daa
xchg
movs
push
test
and
mov
nop
or
dec
pop
or
rol
arpl
add
push
lods
fnstenv
add
adc
es
lahf
sub
rcl
inc
jge
hlt
dec
pop
inc
inc
retfw
push
loopne
in
sub
adc
loope
mov
mov
adc
test
outs
sbb
xor
lds
mov
cdq
add
and
push
sti
pop
jne
inc
je
aas
nop
add
cwde
pop
pop
nop
inc
adc
shl
mov
add
or
lock
pop
cmovo
ror
fninit
cmps
lods
pop
mov
sbb
shl
pop
adc
adc
cmp
push
mov
les
push
mov
mov
push
mov
pop
sahf
xlat
sub
add
fidiv
push
add
inc
xchg
jbe
sbb
rcl
cdq
fimul
mov
pop
or
sbb
pop
push
pop
pop
repnz
and
ins
cli
enter
and
push
sub
jmp
loop
mov
rol
or
xchg
das
out
das
sbb
(bad)
out
cmp
sub
xor
dec
sub
arpl
xchg
mov
lods
ret
nop
or
pop
aam
test
cmp
sbb
mov
pop
mov
in
fcmovnu
sbb
or
add
inc
scas
xor
les
dec
dec
xor
aam
inc
lock
sbb
mov
pop
fcomp
ds
jns
inc
mov
imul
or
hlt
inc
xchg
adc
ss
jle
mov
add
stos
add
or
lock
sbb
mov
inc
add
jmp
ror
add
sahf
push
fisub
cmp
cmps
or
adc
jb
ins
or
mov
or
push
outs
or
nop
sbb
mov
xor
inc
push
mov
inc
mov
jl
sbb
shr
inc
adc
mov
mov
cmp
ror
aas
daa
jp
push
retf
add
cmc
mov
in
sbb
pop
add
inc
in
xor
jno
or
pop
push
and
mov
aas
scas
adc
daa
loope
or
ret
je
das
js
or
fdiv
sbb
xchg
add
push
and
fstp
cmp
sar
fimul
ds
cmp
adc
call
fidivr
adc
sar
or
popf
xor
mov
ret
inc
sar
inc
mov
iret
es
(bad)
mov
data16
or
sub
mov
cld
mov
movs
imul
test
test
add
xchg
inc
ret
cwde
sub
rcl
mov
test
jge
add
xlat
mov
mov
adc
jmp
jmp
inc
mov
ror
cmp
sub
les
dec
cmp
or
mov
ss
add
xchg
mov
inc
jmp
dec
jne
push
clc
dec
(bad)
sub
loop
je
bound
xchg
xor
call
loope
call
cdq
and
adc
test
ficom
out
inc
push
mov
pop
out
fisttp
and
dec
adc
xor
push
cmp
xchg
or
cmp
scas
adc
mov
mov
push
mov
mov
xchg
inc
(bad)
jge
or
mov
mov
add
cmp
pop
nop
add
push
dec
inc
idiv
mov
std
xor
lods
dec
sbb
sbb
and
mov
jo
sub
mov
add
out
and
movs
ret
push
sub
add
jns
adc
je
mov
hlt
lods
add
pushf
inc
adc
or
dec
aas
mov
adc
push
adc
fiadd
adc
xchg
aaa
clc
(bad)
mov
dec
jg
inc
mov
xor
pop
ret
jmp
dec
or
pop
ror
push
lods
jp
mov
je
imul
sbb
fs
push
sbb
cmp
push
inc
xor
pop
mov
or
mov
pusha
sub
lods
adc
sbb
aaa
sbb
cmp
and
xchg
cmp
cmp
cmp
xchg
mov
cmp
popf
cmps
and
ret
or
push
push
adc
xor
or
dec
aad
loopne
nop
jno
pusha
push
add
jge
js
push
sbb
adc
js
inc
push
cmp
cld
dec
jmp
in
fcomp
(bad)
inc
fist
adc
add
fcomp
push
sub
jae
adc
cmp
hlt
loopne
add
nop
or
cmp
and
(bad)
(bad)
xchg
push
mov
jbe
aas
add
in
in
rol
xchg
xchg
or
or
add
or
sbb
(bad)
cmps
lods
lock
pop
push
pusha
sbb
inc
push
ret
mov
lock
ds
push
addr16
push
jo
xor
lock
xor
add
scas
sub
inc
je
xor
(bad)
(bad)
sub
add
mov
xchg
adc
nop
push
(bad)
movs
in
and
movs
adc
fld
cs
xchg
xor
fdiv
pop
add
dec
add
adc
cmps
sub
popa
cmp
cwde
ins
or
ret
mov
add
xchg
sbb
mov
cwde
push
jbe
ja
out
fwait
sbb
test
add
inc
iret
arpl
and
jnp
pop
lock
dec
lea
ret
push
stos
cmp
bound
rol
adc
add
mov
xchg
mov
cmps
xor
mov
mov
push
cmp
adc
jmp
push
imul
push
jecxz
bound
test
jae
add
cmc
imul
add
push
icebp
lods
xor
(bad)
xchg
mov
or
cmp
ret
dec
jne
cmps
ror
test
xor
aas
shl
inc
and
and
fs
xchg
pop
dec
and
pusha
loopne
mov
test
and
(bad)
fstp
mov
pop
inc
adc
jg
fs
cmp
and
pop
retf
icebp
es
and
sub
scas
hlt
inc
fld
dec
sub
inc
cmps
sbb
mov
inc
inc
add
les
cmp
inc
add
adc
and
test
repnz
add
(bad)
or
loope
inc
and
jne
pop
push
adc
js
call
pop
mov
outs
xchg
inc
jecxz
jl
mov
jmp
ror
xchg
fwait
mov
and
jne
adc
out
bound
div
inc
pop
cmp
dec
adc
and
add
mov
jo
pushf
fld
cs
lea
dec
push
out
arpl
xor
xor
xor
test
or
xor
xchg
out
jo
loope
dec
fs
add
shl
(bad)
repz
out
dec
(bad)
pusha
lea
loopne
and
data16
inc
and
xchg
fwait
and
lods
push
push
ret
xor
cmps
adc
in
sbb
push
cmp
mov
ins
ja
cmp
ja
inc
push
jp
xor
cmp
pop
lds
call
ds
scas
inc
jnp
cmp
jbe
push
sub
jbe
inc
inc
retf
pop
push
dec
adc
sub
mov
sub
dec
or
cmp
jbe
mov
push
fs
ret
jns
xchg
mov
push
call
pop
cs
jae
cli
mov
in
push
ss
adc
jle
mov
mov
loope
xchg
outs
add
test
and
fsubr
cwde
mov
test
add
mov
in
nop
ins
xlat
jmp
jmp
mov
popf
xlat
icebp
adc
push
pop
mov
fs
add
sar
adc
mov
pop
je
loop
popa
inc
push
mov
inc
jmp
xchg
or
sbb
push
mov
movs
popa
adc
ret
into
add
sub
(bad)
dec
dec
or
adc
adc
mov
ins
sub
add
push
mov
push
xor
lock
inc
xor
or
imul
je
adc
loop
add
bound
mov
mov
jmp
inc
scas
xchg
outs
fsubr
xchg
retf
sub
xchg
lds
std
jae
scas
movs
lds
sub
cmp
xor
cdq
nop
mov
je
push
std
fs
push
in
fistp
push
mov
adc
and
inc
xor
jmp
push
test
fsub
push
adc
sub
leave
pusha
imul
mov
in
inc
sbb
mov
push
inc
or
adc
cmp
add
test
xor
jle
cmp
mov
adc
jne
inc
or
push
push
sub
cmp
inc
mov
rcl
cmp
push
sub
adc
adc
mov
sub
ror
(bad)
dec
loopne
aaa
and
jne
outs
xor
add
cmp
and
aas
dec
cmps
sub
dec
jns
test
mov
shl
call
arpl
dec
push
mov
je
mov
jnp
sahf
dec
or
not
add
xchg
fs
add
jg
jne
pop
dec
stos
cwde
daa
jle
inc
cmp
add
int3
jg
push
xor
and
nop
mov
push
add
sbb
sbb
call
mov
sub
xor
sar
mov
ja
push
push
dec
leave
dec
sub
mov
adc
inc
je
scas
inc
dec
sub
in
jmp
bound
mov
add
xchg
sbb
into
pop
dec
push
add
xor
rcl
mov
or
xchg
cli
stos
or
xchg
inc
pop
out
pop
mov
inc
inc
ret
mov
lods
adc
and
or
shl
cmp
jg
jge
mov
push
add
shl
lods
out
or
pop
jl
mov
loopne
xchg
adc
inc
xchg
push
cmp
lods
push
hlt
sbb
jl
in
pop
pop
int
imul
and
inc
(bad)
in
mov
jno
popf
call
jo
shld
mov
jne
repnz
adc
pop
dec
pop
pop
push
inc
push
enter
outs
js
inc
js
mov
adc
sbb
mov
xchg
pop
fucomi
mov
xchg
jge
addr16
test
cmp
(bad)
test
adc
push
lods
ins
mov
adc
sar
scas
aad
ror
in
popf
inc
imul
sub
mov
xor
mov
jne
cmp
clc
and
add
and
inc
jns
add
cmp
outs
pop
add
jne
xor
jg
cmp
push
call
xchg
jbe
movs
das
xor
into
or
loopne
call
jl
inc
xor
loop
ret
mov
jmp
rol
adc
or
jae
cs
xor
(bad)
sub
or
jno
jge
jnp
add
push
pop
lock
dec
mov
add
and
rcl
mov
inc
imul
push
ss
cmp
ja
dec
sahf
je
pusha
pop
adc
into
mov
fs
sti
lods
ss
push
mov
mov
adc
ins
jne
push
cmp
loopne
in
pusha
dec
jle
or
outs
jmp
adc
mov
(bad)
mov
adc
sub
scas
lds
xlat
mov
sahf
mov
xchg
pop
lock
repz
jb
jmp
fsubr
cmp
popa
or
push
call
cmps
pop
int3
mov
ja
out
push
jecxz
fcomp
or
sub
cmp
dec
iret
je
or
adc
retf
jmp
int3
mov
dec
jg
inc
add
enter
fbld
call
sbb
out
pop
inc
pop
adc
movs
inc
aam
xor
and
rol
pop
or
fst
add
test
add
xchg
add
push
adc
mov
std
icebp
cmc
dec
or
sti
adc
inc
pop
push
add
mov
and
lods
cwde
mov
inc
in
dec
jbe
push
pop
pusha
je
mov
lods
adc
jmp
movs
adc
cli
jmp
xchg
sub
and
mov
sbb
scas
or
xchg
arpl
jle
inc
imul
loop
adc
adc
sbb
out
pop
lods
pop
iret
or
cdq
mov
ror
adc
stos
push
adc
sbb
dec
or
mov
mov
dec
jno
sub
xchg
popa
and
push
ja
mov
bound
test
cmp
in
inc
into
xor
dec
or
mov
mov
add
ret
popa
jo
mov
mov
mov
adc
push
lahf
test
mov
xchg
cmp
mov
sub
pusha
xor
pushf
push
and
and
and
ds
out
push
push
daa
or
cmp
xchg
mov
sahf
cmp
int
add
adc
ins
dec
adc
sar
loopne
mov
push
jo
fbld
enter
cmp
xchg
cmp
sub
push
mov
inc
jne
sbb
add
dec
and
test
push
or
sbb
int
push
test
push
push
cmp
push
adc
sbb
and
shl
cmps
sub
adc
mov
mov
or
adc
imul
dec
cmp
ret
enter
test
inc
mov
repnz
add
xor
sub
cdq
add
and
adc
repz
imul
add
inc
cmp
or
pop
or
or
and
ror
xchg
jne
ins
cmp
push
outs
mov
into
nop
repnz
dec
dec
gs
call
jbe
test
xchg
xabort
in
add
call
in
and
out
sub
jg
ss
xor
pop
das
sub
fidiv
xchg
cs
je
push
cmp
xor
dec
push
fwait
ret
and
jae
push
sbb
jge
enter
sub
rol
pop
ret
or
cmp
cmp
mov
sub
or
or
add
jo
jl
dec
ret
jb
mov
add
es
not
and
jle
shr
mov
dec
ja
int
fwait
xchg
sub
mov
pop
add
cmc
push
mov
pop
sub
add
xor
and
js
jae
mov
les
jle
sub
jge
mov
jae
jne
xchg
or
ret
or
push
mov
inc
je
outs
add
cmp
mov
jno
fadd
ins
shl
hlt
mov
test
sbb
sbb
lock
adc
out
rcr
repnz
push
enter
je
push
fsub
inc
ror
jl
sahf
add
push
xor
mov
pop
mov
add
shl
and
aam
xor
lock
ss
xchg
jo
push
pop
loope
or
hlt
sbb
mov
mov
jae
jno
js
mov
aas
dec
cmp
iret
lds
inc
cli
push
rcr
out
inc
add
ds
ror
and
cmp
fs
mov
and
cli
mov
or
ins
call
cli
pop
sbb
mov
movs
shl
std
ja
or
adc
mov
push
test
sub
push
and
push
or
cmp
ss
test
dec
xchg
adc
lods
cmp
xchg
pop
and
adc
jp
mov
ins
not
xchg
je
pusha
dec
or
cmp
sbb
or
cmp
loopne
jb
dec
mov
adc
(bad)
fisttp
pushf
bound
jb
sbb
push
lea
inc
adc
or
sbb
int
mov
sbb
scas
fs
fadd
popa
rol
mov
data16
add
retf
mov
lods
cmp
jae
in
mov
push
jno
or
cmp
js
or
adc
and
sub
inc
ins
push
sub
clc
loopne
mov
adc
mov
shl
sbb
js
sti
mov
jae
retf
jp
out
sbb
icebp
shr
test
sbb
inc
outs
fcomp
repnz
popf
outs
push
neg
mov
retf
push
lock
jmp
push
add
mov
shl
lea
sbb
sbb
inc
addr16
xor
repnz
outs
sbb
pop
mov
ret
cli
inc
rol
and
mov
adc
mov
push
mov
mov
push
cld
sub
rol
fadd
ins
xchg
cmp
jge
jne
xor
pop
mov
shl
mov
xor
and
push
push
cmps
cmp
retf
adc
add
lock
enter
inc
push
add
dec
test
push
sbb
mov
push
sub
cmps
dec
(bad)
sahf
dec
cmp
test
sub
pop
add
and
cmp
std
retf
pusha
dec
adc
test
call
sbb
sbb
push
sbb
iret
cwde
adc
mov
data16
nop
rol
push
push
jecxz
popa
mov
mov
push
test
ret
fwait
and
sub
xchg
mov
push
mov
not
cmc
push
or
sbb
ss
jb
inc
push
rol
iret
mov
mov
push
sbb
rcr
cmp
lods
mov
or
fist
sar
dec
push
mov
mov
push
ja
es
dec
sbb
inc
std
xor
bound
in
pop
(bad)
popf
dec
aaa
test
es
push
sub
jbe
pop
dec
add
popf
dec
sub
xor
sub
lods
sub
fmul
pop
lock
fs
inc
sbb
out
iret
ins
mov
mov
mov
dec
shl
pop
ja
xor
or
push
xchg
lea
shr
pop
ret
das
add
add
cmp
pop
and
add
mov
call
xchg
adc
add
sub
imul
pop
call
(bad)
push
mov
push
popa
push
cmps
push
sub
mov
xor
sbb
or
dec
mov
adc
ds
clc
je
xlat
gs
add
adc
outs
fldenv
test
cmp
or
mov
jp
cmp
add
ror
cmp
pop
rcl
retf
ret
sbb
push
and
adc
push
pop
mov
jp
pusha
shl
lods
xchg
imul
call
icebp
xchg
or
mov
mov
adc
mov
xlat
add
and
mov
ja
ds
or
adc
je
pusha
sti
or
out
shr
push
push
or
mov
push
dec
mov
inc
cs
int3
pusha
xchg
and
ins
scas
cmps
aaa
inc
call
or
adc
jmp
adc
idiv
pop
dec
mov
mov
xchg
pop
inc
push
int
data16
cld
dec
movs
dec
mov
dec
pushf
mov
add
enter
inc
nop
ret
dec
dec
sbb
add
sbb
and
adc
jp
mov
adc
push
dec
and
lods
lahf
das
xchg
jo
out
(bad)
dec
pop
pop
inc
and
pminub
in
sbb
mov
fistp
adc
cli
jbe
mov
add
ss
push
push
mov
retf
dec
ins
stos
fstp
sbb
push
jno
xchg
je
imul
jno
mov
or
repnz
cmp
(bad)
or
dec
push
movs
icebp
cmp
mov
mov
rcl
or
mov
je
jo
cmps
adc
aam
inc
shl
inc
cmp
int
xor
sub
cmp
sub
xor
ret
movs
lods
outs
push
lock
rcr
pop
fwait
or
pop
std
rcpps
xchg
jmp
ret
jae
adc
lods
push
xor
inc
cmp
sbb
scas
test
push
adc
push
mov
out
int3
push
mov
mov
sbb
push
mov
enter
ins
jl
jmp
xor
dec
dec
mov
mov
mov
dec
push
clc
lods
jnp
rcl
inc
mov
loopne
dec
inc
inc
mov
push
scas
jo
add
pop
mov
arpl
shl
sar
or
or
stos
inc
clc
call
add
(bad)
push
and
bound
dec
cdq
push
xchg
sahf
mov
lds
pop
mov
test
ret
or
dec
dec
aas
ins
xchg
ficomp
fs
dec
ins
and
jne
dec
cmp
mov
mov
xor
adc
pop
mov
ret
lea
mov
inc
dec
jge
out
xor
in
test
dec
mov
sub
sbb
mov
je
cmc
int
sub
add
mov
and
add
(bad)
nop
jbe
xor
call
ds
mov
sbb
(bad)
lods
call
into
mov
xlat
jge
inc
ins
sub
data16
inc
jb
ds
xor
das
add
mov
loopne
loopne
fucomip
add
shr
and
and
mov
call
imul
daa
inc
mov
daa
out
cmp
add
ffree
fstp
add
inc
jl
inc
add
dec
test
ins
push
add
push
fst
pusha
mov
clc
cmp
and
ror
lods
add
aam
ret
or
jp
mov
or
cmp
xchg
fidivr
push
push
and
mov
jg
pop
sub
jb
push
bound
xor
jge
jg
dec
pop
add
adc
xchg
sub
sub
sbb
or
cmp
ret
push
sbb
sbb
ret
mov
ja
mov
xchg
fmul
out
cmp
dec
sbb
addr16
push
or
sti
mov
cwde
inc
sub
sub
push
mov
cmp
mov
nop
dec
add
mov
inc
inc
mov
jmp
add
fdivr
test
and
adc
dec
and
add
idiv
add
nop
add
addr16
xchg
dec
push
test
movs
xchg
xchg
sbb
xor
daa
ror
enter
test
adc
or
jb
dec
mov
pushf
sub
inc
add
js
jo
jo
out
shl
jl
(bad)
nop
jecxz
int
xchg
shl
sbb
mov
int3
mov
jne
mov
pop
mov
cmp
push
pushf
mov
mov
xchg
push
pop
lock
retf
and
outs
or
ins
mov
xchg
test
daa
loopne
mov
mov
mov
mov
icebp
mov
push
test
xor
xchg
repz
loop
mov
idiv
jmp
cld
dec
dec
add
or
add
stos
ret
mov
add
inc
mul
rol
push
sub
pop
xor
rcr
bound
pop
pop
sbb
mov
jmp
ins
sbb
js
outs
jo
lar
aas
xchg
in
xchg
cmp
jbe
sub
ret
jmp
movs
and
das
jecxz
push
sub
inc
mov
cld
push
or
mov
test
ja
mov
and
mov
jbe
or
sub
aas
dec
pop
(bad)
cld
adc
(bad)
cmp
stos
movs
pop
sub
mov
call
xchg
leave
cmp
cmp
cmp
mov
adc
push
inc
mov
inc
and
jne
sbb
adc
xor
fs
inc
push
pop
push
or
add
retf
jb
lock
add
dec
lock
mov
aad
pop
std
cwde
pop
mov
in
jmp
mov
mov
ror
push
js
(bad)
xor
push
nop
pop
pop
sub
lods
mov
adc
cmp
cmp
xor
popa
push
mov
stc
dec
add
add
push
or
or
add
inc
and
dec
push
inc
add
shr
pop
adc
leave
ret
dec
(bad)
xchg
lock
push
sti
add
mov
test
inc
add
cmp
lock
jns
ja
mov
inc
add
xor
outs
sbb
sub
sub
aam
add
jbe
retf
or
ja
pop
mov
sahf
cmp
sub
std
data16
sub
das
lock
or
xor
icebp
or
in
sahf
sbb
adc
jl
adc
(bad)
cmp
js
ret
sub
mov
bound
in
loopne
sbb
fs
jnp
cmp
mov
jne
cmps
cmp
scas
cmp
xchg
nop
(bad)
sar
push
push
ror
inc
mov
sbb
mov
test
dec
jmp
push
jns
sbb
inc
movs
jecxz
add
outs
pusha
pop
aam
push
cmp
push
inc
add
push
adc
add
add
sbb
jl
nop
sbb
xchg
jne
add
daa
pop
and
mov
mov
push
sar
cmp
jno
dec
dec
mov
push
xor
sbb
jo
push
or
dec
xor
xchg
or
mov
pop
das
mov
outs
xchg
inc
xlat
and
ror
mov
lea
or
sti
sti
add
pop
nop
and
sub
arpl
fstp
xor
push
out
xchg
shl
push
ret
aas
(bad)
sti
and
jbe
pop
sub
pop
push
mov
adc
pop
mov
aam
loop
adc
jmp
sbb
ffreep
dec
rep
mov
mov
sahf
adc
mov
sub
sbb
lea
ror
lods
es
aas
sbb
xchg
or
lahf
ret
outs
adc
jg
xor
sub
(bad)
ret
jg
sub
add
sahf
jne
or
mov
inc
xchg
inc
push
sub
scas
jb
and
pop
adc
jge
jae
dec
add
fwait
sbb
je
test
call
add
jl
aam
push
popf
in
data16
push
adc
js
mov
xchg
and
sbb
add
and
in
inc
add
clc
push
inc
rcr
or
xchg
push
add
imul
inc
lahf
sbb
mov
add
gs
xchg
adc
jbe
sbb
inc
cmp
shl
xor
add
dec
push
xchg
adc
shl
clc
scas
cmp
std
cmp
push
pushf
inc
je
mov
dec
lods
test
out
mov
push
cmp
mov
fild
hlt
popf
sub
pop
jmp
iret
je
push
adc
or
(bad)
shl
sub
cmp
mov
or
fcom
sub
jo
gs
push
int3
jne
aam
test
frstor
dec
jb
and
lds
or
loop
ret
ds
mov
pop
push
outs
prefetchw
add
lea
inc
lods
push
cmp
cmp
xor
inc
pop
or
fimul
sbb
ror
xchg
sub
dec
and
or
jmp
scas
popf
lods
sub
pop
sub
push
or
mov
lock
dec
das
and
shr
stos
lods
std
push
xchg
lea
push
test
mov
aaa
mov
xchg
lea
sub
jle
idiv
sub
sub
jne
xor
sbb
leave
xor
mov
cmp
sub
es
xchg
or
dec
loope
mov
jmp
dec
jmp
dec
pop
mov
and
xor
inc
xchg
or
mov
popa
xor
lock
lock
pushf
push
inc
in
inc
ret
je
inc
(bad)
ss
loope
sbb
rcl
(bad)
scas
imul
fimul
push
push
ins
sti
mov
add
add
lds
or
sbb
inc
pop
add
pop
outs
or
sbb
mov
in
push
or
mov
fiadd
hlt
(bad)
pop
push
dec
je
dec
xchg
aam
iret
ror
push
mov
mov
xchg
cmp
push
js
dec
push
or
and
adc
sub
sbb
cmp
mov
or
rcl
add
fs
adc
xchg
push
imul
mov
push
into
in
sbb
aad
push
fdiv
aam
pop
mov
fidiv
cmp
es
cmp
add
sub
inc
and
or
retf
sub
pusha
inc
loopne
shr
or
int
pop
or
pusha
pop
mov
and
mov
cdq
adc
outs
mov
mov
test
push
leave
aad
dec
xchg
data16
and
inc
mov
mov
mov
mov
push
dec
and
cli
imul
out
rcr
sub
sub
jbe
sbb
mov
cmp
add
pop
pop
pop
inc
ins
sbb
xchg
dec
lds
mov
pusha
xor
cwde
inc
pop
mov
or
sub
cmp
(bad)
leave
xchg
mov
setle
pop
in
push
mov
or
add
push
dec
or
push
mov
clc
or
test
dec
outs
repnz
sub
dec
icebp
outs
jo
xor
jmp
adc
dec
jb
arpl
nop
cmp
test
test
loopne
mov
jno
push
and
stos
xor
inc
add
dec
imul
mov
push
adc
pop
adc
dec
push
inc
test
je
and
(bad)
jecxz
add
push
adc
loopne
push
inc
or
add
mov
imul
mov
sub
mov
test
adc
dec
mov
push
mov
xor
mov
or
xor
adc
sbb
ret
hlt
loope
sub
xor
dec
and
mov
rcl
jnp
dec
push
jo
fsub
add
ins
sbb
adc
dec
push
ja
or
and
ins
jmp
xor
adc
mov
push
rcl
mov
jno
ror
pop
pop
mov
jne
cmp
repnz
outs
cmc
jg
mov
sub
jae
or
fisub
adc
imul
inc
lahf
stos
cmp
pop
fisttp
and
pusha
pop
sbb
sbb
and
xchg
ret
push
sub
daa
enter
jle
mov
mov
int
sar
lock
outs
cmp
retf
adc
lea
in
rol
jmp
jl
jmp
and
pop
or
icebp
rol
loope
in
call
gs
dec
aas
mov
inc
jecxz
xchg
imul
call
xor
pop
or
cmp
or
cmp
xchg
fistp
push
mov
call
test
push
(bad)
shl
sub
inc
cmp
(bad)
push
dec
mov
pop
push
bound
push
mov
cmps
enter
pop
and
adc
stc
jl
mov
clc
and
xchg
dec
jb
stos
xor
lock
cmp
jge
jmp
scas
(bad)
sub
pop
mov
inc
dec
add
das
cwde
push
jmp
mov
xor
xor
ror
call
xchg
icebp
rol
jne
xor
add
mov
pop
ins
xchg
and
ffreep
out
xor
or
dec
pop
and
xchg
outs
stos
add
nop
retf
test
adc
bnd
loopne
lds
sub
and
sti
ret
sbb
sar
mov
push
mov
push
(bad)
int3
pop
lods
pop
mov
inc
inc
mov
mov
shl
or
test
mov
pop
push
cmp
fisubr
mov
data16
sbb
or
add
popf
retf
inc
sub
mov
or
sbb
jle
arpl
movs
jl
pop
cmp
add
or
mov
add
fucomip
inc
ins
ret
fidivr
loope
div
(bad)
hlt
inc
pushf
mov
adc
xor
pop
inc
dec
mov
cs
cdq
call
test
sub
sbb
or
sub
push
(bad)
jge
scas
imul
cwde
adc
xor
lods
in
push
popa
stos
sbb
rcl
pushf
add
dec
pop
sbb
push
cmps
push
add
shl
jne
nop
sub
(bad)
rcl
fs
sub
or
jbe
cmp
sar
sub
add
(bad)
lds
sbb
mov
popf
jne
inc
and
dec
xchg
inc
mov
js
inc
test
pop
call
xchg
add
add
gs
xor
jns
out
sbb
aas
arpl
fdivr
cmp
cmp
and
mov
dec
dec
daa
pop
sbb
sub
add
pop
adc
stos
mov
(bad)
(bad)
pop
adc
jne
and
ja
or
sub
jmp
push
test
mov
sbb
movs
sbb
sub
dec
sub
int3
in
retf
imul
mov
xchg
cmp
dec
js
push
jno
daa
js
sub
push
jmp
adc
pf2iw
add
fwait
adc
sub
movs
adc
rol
ret
push
mov
pop
fwait
jle
cmp
push
dec
sahf
adc
jbe
push
sbb
pop
cmp
push
sbb
icebp
clc
jp
dec
rol
jb
jo
mov
adc
push
inc
inc
adc
and
dec
jp
mov
jns
sbb
push
ins
ja
lea
icebp
jl
add
pop
jg
inc
xor
or
and
push
or
lods
cmps
push
inc
aam
pop
lods
mov
push
mov
lock
dec
ins
rcr
(bad)
pop
aad
lahf
jmp
pop
jo
xor
adc
mov
push
jb
sbb
rcr
ins
add
(bad)
dec
cs
xchg
mov
dec
jns
imul
shr
fwait
scas
test
adc
push
jg
call
jno
loope
xor
mov
push
inc
nop
mov
add
add
fimul
pop
into
or
jno
jns
stos
loop
mov
inc
or
ror
fnstenv
push
inc
and
addr16
or
sub
pop
sub
inc
mov
or
xchg
mov
cmp
inc
mov
xchg
(bad)
mov
push
popf
pop
test
cli
mov
scas
mov
lahf
push
(bad)
xchg
sub
ret
retf
sbb
push
jge
clc
pop
mov
popf
shr
or
(bad)
dec
inc
pusha
adc
push
mov
les
sub
push
rol
pop
cmp
dec
xchg
cwde
pop
jns
ret
rol
inc
inc
ss
mov
push
xor
arpl
add
mul
retf
call
addr16
cmp
mov
addr16
call
loop
mov
dec
xchg
push
add
loopne
mov
call
out
ret
xor
adc
dec
or
loopne
adc
dec
dec
pop
gs
cmps
call
or
add
dec
mov
cmp
dec
add
iret
in
ins
adc
cmc
sbb
sub
add
ret
in
cmp
mov
mov
sbb
pushw
mov
ret
cld
mov
sub
adc
jo
mov
xchg
inc
rol
and
je
xchg
in
cmps
xor
xor
push
dec
lock
jo
ret
cmp
add
ret
cli
sub
cmp
dec
loopne
sub
gs
cmps
nop
lea
jb
lds
sub
dec
cmp
std
test
push
cmp
add
punpckhwd
outs
into
mov
pusha
shl
cmp
fldenv
pop
or
dec
imul
sub
scas
sahf
call
pop
push
ins
data16
inc
cs
loop
or
js
and
add
dec
idiv
or
mov
add
dec
shl
cdq
movs
mov
(bad)
jmp
sub
movs
xchg
jno
add
iret
jbe
jo
data16
retf
(bad)
lock
or
push
outs
in
fdiv
stc
test
push
sahf
dec
dec
dec
or
mov
sahf
cmp
je
and
pop
mov
or
add
clc
popa
jp
pop
mov
in
je
imul
lahf
or
(bad)
enter
inc
pop
add
adc
(bad)
cmp
pop
or
jb
pushf
outs
mov
cwde
adc
or
pop
or
jmp
adc
sub
lea
paddb
sahf
xchg
dec
nop
adc
out
(bad)
pop
xchg
or
jbe
scas
mov
jne
mov
sbb
cmp
xlat
adc
fs
aad
mov
add
push
or
addr16
inc
mov
add
adc
stc
mov
add
pop
sub
addr16
rcl
daa
push
cmp
inc
test
movs
adc
pop
mov
leave
mov
ss
sbb
ret
fistp
xor
xlat
cmp
jnp
out
sbb
sbb
inc
or
adc
mov
outs
sbb
rol
or
ret
xor
pusha
sbb
add
mov
dec
add
or
or
add
mov
cmp
jle
mov
(bad)
(bad)
pop
xchg
sahf
pushf
movsx
je
or
rol
dec
out
pop
test
push
ins
add
retf
inc
clc
inc
out
je
mov
loope
jmp
xor
neg
je
gs
xchg
mov
mov
push
mov
nop
int3
bound
(bad)
daa
push
add
sar
clc
int3
mov
cmp
aam
pop
mov
mov
aad
mov
sub
cmp
xor
ds
or
adc
(bad)
xchg
sbb
shl
or
xchg
and
mov
mov
sub
push
inc
adc
(bad)
or
adc
mov
xor
cmp
cmc
dec
jle
add
and
adc
mov
sub
fild
adc
std
sbb
mov
add
cs
adc
cmps
cmps
sub
push
or
bound
popa
popf
pusha
das
je
pop
je
dec
fcomp
sub
and
add
pop
jb
mov
out
push
sbb
add
hlt
jge
push
enter
shl
dec
inc
xlat
xchg
sar
push
outs
and
clc
les
sbb
and
and
sub
test
sbb
popf
mov
mov
mov
sub
in
inc
cld
adc
inc
dec
and
mov
inc
add
or
shl
mov
test
imul
fwait
je
mov
fimul
inc
pop
pop
fistp
inc
mov
ror
cdq
mov
cmp
bound
xchg
xchg
pop
or
clc
call
jmp
repnz
sub
cld
xor
inc
xor
in
sbb
inc
push
sub
aas
sub
mov
jl
jge
xchg
sub
jl
(bad)
dec
push
cmps
or
ret
adc
movs
aas
ret
xchg
push
xlat
jge
jg
pop
xchg
jne
cmp
fdiv
and
loope
adc
rol
dec
xchg
and
daa
or
aaa
push
nop
pusha
test
cmp
jbe
gs
sbb
mov
add
(bad)
sti
sahf
(bad)
(bad)
outs
test
inc
mov
add
mov
or
jo
or
cmps
(bad)
(bad)
jo
inc
sbb
or
push
out
cmp
es
jnp
sub
dec
push
xchg
nop
imul
adc
mov
movs
loope
add
inc
push
push
cmp
and
dec
sahf
shl
adc
pop
inc
ret
ret
movs
xor
and
or
xchg
rol
outs
jg
mov
push
xor
or
not
push
cmps
inc
jp
popa
sub
and
dec
xor
jle
add
js
ins
clc
jb
and
jno
daa
scas
out
sahf
or
jno
add
inc
std
sti
lods
or
mov
icebp
xchg
dec
pop
jge
test
enter
xchg
xor
add
cmp
push
sbb
pop
test
add
or
lods
dec
sar
movs
mov
xor
or
retf
xor
lea
mov
sahf
pop
sub
rcl
fimul
inc
mov
aad
and
mov
jp
(bad)
dec
jg
loope
jbe
mov
(bad)
(bad)
scas
mov
add
sar
rcr
cmc
div
bnd
js
inc
xor
xor
sub
mov
push
inc
adc
dec
xor
mov
pop
or
retf
dec
cdq
nop
add
nop
push
sar
mov
xor
pcmpeqb
jmp
push
mov
jo
pop
(bad)
sti
cmp
das
adc
adc
dec
shl
fadd
ja
push
sbb
int
jno
and
mov
cld
lods
dec
and
nop
pop
push
jmp
test
or
hlt
lea
push
xbegin
fiadd
inc
and
mov
push
xlat
mov
pop
bnd
scas
dec
popf
fprem
ficom
dec
cmp
fcmovb
cmp
xchg
inc
cmc
aad
pop
mov
sbb
mov
fcom
dec
or
retf
movs
adc
pop
dec
rcr
add
into
fwait
inc
or
push
pop
adc
rcl
pop
ss
mov
inc
pusha
adc
mov
mov
ins
cmp
shr
in
inc
data16
lea
adc
and
pop
adc
xor
pop
fmul
add
jmp
jmp
pushf
jmp
jmp
shr
xlat
dec
sbb
push
sbb
sbb
xchg
pop
cli
jecxz
inc
loop
test
add
mov
int
mov
jne
push
add
add
ret
push
sti
cmp
xchg
popa
add
loop
mov
sbb
push
and
sbb
neg
mov
inc
jl
inc
sbb
sahf
les
mov
je
and
fimul
stos
popa
pop
pop
or
xor
inc
out
mov
jo
daa
add
inc
sbb
mov
adc
aas
add
retf
outs
loop
fsub
cmp
mov
daa
add
pop
adc
and
pop
ins
out
fdivr
retf
sub
adc
test
int3
mov
cmp
sbb
jae
loope
and
or
ss
push
xor
jo
outs
iret
addr16
xor
adc
adc
mov
mov
loop
pop
push
add
(bad)
fcomp
mov
xor
loope
push
adc
push
sbb
test
push
xchg
jmp
xchg
sub
inc
je
push
or
inc
pop
cwde
mov
mov
fdivr
adc
cmp
mov
adc
lods
and
daa
inc
call
add
mov
and
call
loop
and
pop
mov
inc
call
push
daa
sbb
push
mov
inc
sub
push
ja
shl
lods
push
sti
inc
inc
dec
loopne
push
xchg
mov
data16
mov
mov
addr16
mov
mov
retf
or
push
inc
lea
pop
pop
cmp
push
mov
lea
out
sub
pop
cmp
ins
add
lea
dec
repnz
sub
push
in
dec
scas
inc
push
pop
sar
in
push
neg
add
push
not
pop
adc
sti
call
xor
ins
pop
mov
cwde
stos
ret
stc
pop
sub
sub
icebp
out
xchg
push
js
bound
rcr
mov
jmp
or
or
(bad)
fcom
pop
sbb
cmp
push
jno
add
das
cs
sbb
loop
inc
in
mov
inc
jae
sbb
xor
xchg
sbb
pusha
and
pop
sbb
daa
(bad)
or
aas
dec
mov
(bad)
rol
xor
sub
mov
or
xchg
sbb
cld
add
xor
push
dec
add
xchg
lds
mov
xchg
stos
xor
js
lea
push
cmp
xor
inc
jmp
imul
pop
sub
(bad)
sar
push
cs
push
jg
and
out
sub
mov
sbb
or
repnz
jae
mov
call
pop
add
jp
sub
sbb
and
jne
mov
mov
sub
sti
push
adc
dec
rol
pop
retf
xor
sbb
loop
jmp
add
jp
xor
sub
je
dec
pusha
push
and
xor
adc
push
add
sub
dec
and
pop
ret
jmp
shr
inc
push
xchg
adc
push
xchg
adc
mov
adc
xchg
mov
adc
dec
add
int
xor
shl
test
(bad)
shl
loopne
xchg
shl
rol
jb
mov
xor
dec
shl
xlat
inc
mov
push
sub
cmpps
add
(bad)
mov
dec
cdq
gs
xchg
lock
xchg
pop
mov
add
or
sub
daa
xchg
clc
pop
lahf
or
rol
mov
mov
scas
xor
ret
rol
inc
sbb
leave
push
push
sbb
bound
scas
popf
mov
dec
(bad)
aam
aad
mov
(bad)
data16
fld
inc
jns
pop
jns
cwde
sub
push
cmp
ror
fldcw
int3
sbb
xchg
in
or
inc
and
xor
push
xchg
dec
stc
test
cmp
test
lods
mov
mov
jp
adc
mov
sub
jmp
sbb
pop
ds
cmp
inc
or
jae
rcl
loopne
xchg
xor
je
dec
push
sbb
dec
(bad)
das
cmps
jp
addr16
lea
ret
sar
and
lods
inc
icebp
push
xchg
cmp
pop
sub
jns
sahf
push
sub
call
pusha
and
inc
jl
in
sub
cmps
xor
test
and
dec
and
sub
mov
dec
mov
mov
or
retf
das
std
xchg
imul
fcomp
aaa
xor
sbb
sbb
scas
inc
xor
xlat
lods
xchg
mov
je
sub
icebp
add
sub
pop
add
cwde
jp
test
jne
cli
inc
shl
jmp
lea
xchg
pop
sub
add
and
jl
push
push
jb
pusha
mov
dec
xor
popa
repz
sub
retf
outs
mov
mov
add
mov
add
xchg
es
jg
xor
adc
cmp
pusha
add
test
shl
mov
pop
jmp
jl
dec
and
jnp
mov
xor
pop
mov
or
scas
adc
mov
push
xor
jns
inc
je
or
lods
loope
add
mov
movs
add
sub
add
ret
jmp
cmp
and
das
pusha
xor
add
or
pushf
(bad)
adc
xchg
inc
xchg
(bad)
hlt
ret
aam
add
pop
dec
fmul
xchg
dec
rcl
je
mov
pop
mov
push
fidiv
push
push
mov
aas
push
mov
mov
retf
stos
sub
loopne
pop
dec
test
push
push
test
lea
and
push
xchg
inc
clc
std
jo
add
cmp
mov
lds
push
lods
inc
fadd
or
or
or
mov
mov
retf
pop
outs
lds
sbb
pusha
push
and
not
sbb
add
rcl
mov
xchg
and
adc
jmp
pop
adc
arpl
cli
inc
dec
add
add
xor
pop
into
add
sahf
mov
leave
out
push
sub
add
bound
fcmovnu
sbb
adc
fdivr
loopne
add
gs
cmp
inc
(bad)
and
mov
fwait
les
and
hlt
dec
mov
in
outs
cld
or
adc
fwait
sub
pop
(bad)
mov
adc
pop
add
daa
stos
inc
imul
mov
fdivr
clc
fmul
fstp
jl
ret
in
fadd
and
or
ins
mov
dec
adc
ret
mov
rcl
jecxz
mov
cmp
add
inc
or
outs
push
cmp
icebp
mov
mov
inc
sub
xchg
dec
imul
pop
les
test
cwde
pop
repnz
cmp
ret
add
push
and
imul
xor
mov
clc
cmp
jae
push
xchg
fistp
xchg
mov
xchg
push
fsub
xchg
je
xchg
test
cmp
movs
push
mov
push
js
push
jo
sbb
les
ss
adc
pop
les
cwde
xor
push
shl
test
fild
add
sub
ins
fiadd
sub
jmp
sbb
or
imul
fist
ins
jo
mov
xchg
pop
or
dec
push
mov
test
ffree
push
ds
xchg
push
call
add
test
or
sbb
xchg
dec
push
or
adc
mov
stc
push
and
jo
jmp
adc
inc
add
mov
shr
imul
xchg
mov
js
daa
arpl
jb
push
sub
aaa
test
jmp
loopne
mov
ror
js
ret
leave
push
es
pop
xor
ret
sub
sub
push
jle
adc
popa
push
push
(bad)
test
clc
(bad)
fdiv
push
pop
int3
xchg
sbb
mov
or
adc
cmp
or
jb
mov
test
mov
xchg
push
xchg
mov
mov
ror
xchg
lea
add
jle
hlt
sub
push
je
test
sbb
pop
jnp
pop
je
sub
sbb
mov
enter
mov
or
rol
(bad)
cmp
fldl2e
inc
or
jae
adc
mov
arpl
pusha
push
sbb
(bad)
push
fmul
hlt
push
push
popa
or
push
xchg
or
cwde
cld
mov
or
xchg
jb
pop
(bad)
cmp
push
dec
inc
sbb
aas
cmp
je
or
mov
retf
xor
sub
add
dec
fst
(bad)
in
push
(bad)
fnstenv
retf
mov
sbb
xchg
popa
movs
and
sub
xor
out
or
cdq
inc
add
pop
dec
xchg
cmps
fiadd
cmp
and
jmp
pusha
inc
or
and
dec
xchg
ins
in
jge
add
push
fwait
mov
ins
sbb
push
mov
jb
es
sub
adc
mov
nop
pushf
add
shr
stos
mov
pop
sahf
cmp
adc
rol
inc
add
out
ss
xlat
mov
cwde
dec
les
pmuludq
jmp
add
jle
jecxz
and
push
js
rol
inc
fdivr
dec
mov
das
loope
dec
add
(bad)
xchg
mov
fild
nop
mov
pop
sbb
jle
lods
inc
pusha
ret
clc
loopne
cmp
lahf
dec
(bad)
adc
and
or
dec
aad
jle
sbb
clc
add
lea
fisttp
popa
loopne
dec
pusha
js
scas
sub
mov
xor
mov
outs
inc
mov
xchg
mov
in
fcomp
fld
(bad)
retf
mov
pop
jmp
or
fs
into
mov
jmp
pop
loope
xchg
stos
je
xchg
jae
adc
push
mov
call
push
or
adc
xchg
stos
cmp
pop
jl
or
push
mov
pop
or
lods
mov
in
mov
ret
pop
sbb
pop
cmp
cwde
cmp
mov
scas
push
clc
mov
add
mov
dec
mov
enter
xchg
(bad)
and
mov
mov
outs
or
outs
cmc
push
outs
cli
pop
pop
lods
add
aad
mov
add
sub
mov
and
je
xor
shr
test
and
push
inc
sar
jge
in
in
mov
cli
add
stos
lods
jle
jo
or
push
xchg
sub
add
test
movs
add
adc
das
adc
or
lods
adc
mov
push
cmp
mov
add
adc
je
and
cmps
xchg
icebp
mov
inc
jae
clc
inc
ret
icebp
pop
es
js
test
push
fdiv
(bad)
inc
ret
mov
pop
mov
enter
adc
cmp
ficom
into
push
ret
jmp
xchg
fs
cmp
jp
ficom
push
or
sar
es
lock
retf
push
jl
jge
and
(bad)
pop
add
mov
mov
jp
add
and
xor
adc
sub
mov
inc
sbb
or
xor
loop
es
pop
jmp
js
inc
je
fnsave
add
inc
sbb
scas
fcom
fdivr
gs
push
fimul
stc
xchg
add
les
pop
cmps
mov
fist
and
sbb
jb
pop
pop
sbb
sub
pop
or
ja
mov
adc
and
bswap
retf
jo
addr16
push
pop
ds
cmp
jl
cld
and
mov
ins
into
inc
add
sub
das
pop
(bad)
mov
shl
fs
or
inc
pop
out
xor
nop
int3
push
mov
xor
push
push
pop
and
mov
inc
cmps
shr
jmp
rol
inc
push
mov
mov
ficomp
ja
ret
lea
pop
pop
adc
xor
popf
fst
add
jbe
ins
jne
pusha
rol
inc
or
inc
push
adc
nop
test
add
push
(bad)
ffreep
clc
data16
mov
add
jnp
cli
xchg
aas
mov
cmp
add
dec
mov
(bad)
jg
sbb
pop
retf
dec
wbinvd
xor
ja
mov
push
add
and
add
in
and
add
adc
xchg
jmp
inc
jge
dec
stos
je
sub
rcr
bound
cmp
sbb
dec
and
sub
inc
shr
mov
mov
push
adc
popf
cs
pop
mov
neg
add
jne
rcr
sahf
and
jge
push
xor
sar
in
lods
int
out
je
cmp
cmp
pusha
nop
pop
pop
pop
cmp
cmp
mov
push
rol
push
gs
(bad)
adc
cmp
jl
jo
cmps
scas
iret
lock
sahf
and
(bad)
data16
inc
mov
mov
mov
and
fcom
(bad)
addr16
and
repnz
aam
pop
inc
adc
and
loopne
push
xor
pop
pop
ins
imul
push
adc
xchg
sar
scas
sbb
dec
(bad)
mov
data16
lods
sbb
adc
fild
fnstcw
popa
and
add
lock
in
pop
push
jmp
mov
or
or
add
test
retf
aam
imul
or
ins
aaa
push
jo
les
xchg
inc
push
jmp
push
nop
retf
add
xchg
adc
dec
mov
sub
push
mov
inc
inc
xor
xor
xchg
sub
xchg
push
jnp
scas
cmp
add
inc
out
ret
js
push
jo
sub
sbb
xor
mov
cmp
test
dec
jo
add
sti
or
jmp
cmc
mov
add
mov
mov
stos
sbb
aaa
je
mov
rcr
ficom
pop
(bad)
push
bound
add
gs
dec
in
dec
sub
repz
jne
or
popa
jno
mov
pop
sbb
push
sbb
push
cmps
mov
adc
push
add
jb
into
fisttp
mov
test
in
or
mov
push
mov
inc
pop
shl
nop
ret
neg
mov
daa
jb
(bad)
jl
das
xlat
or
scas
shl
cmp
inc
arpl
aam
jo
inc
dec
inc
punpcklbw
pop
cmp
inc
aaa
inc
sahf
and
ror
iret
repz
sbb
adc
sbb
inc
repz
sub
fidiv
push
(bad)
loopne
sub
add
sbb
push
or
cwde
in
jb
cwde
push
cld
cld
inc
loop
shl
scas
jns
add
mov
std
cmp
clc
push
jns
pop
ja
or
adc
cmp
push
add
sub
sub
mov
or
and
sbb
dec
jmp
out
mov
pop
pop
mov
inc
mov
ja
mov
and
push
fs
cmp
in
cmps
repnz
add
loopne
add
in
inc
inc
fild
push
sbb
test
jle
inc
mov
xchg
ret
push
nop
movs
mov
js
add
dec
jo
sub
data16
xor
or
cmps
call
xlat
push
imul
fild
jmp
push
and
or
cmp
jg
enter
adc
sbb
nop
dec
jb
adc
and
sbb
inc
adc
and
add
push
aas
or
adc
data16
das
ins
loope
in
test
or
push
and
movs
push
or
add
outs
sub
jmp
imul
xor
cmp
movs
jg
add
stc
sbb
or
jbe
or
call
cmp
add
sbb
jmp
mov
dec
fdiv
mov
mov
xchg
and
iret
sub
jne
(bad)
jle
xchg
ret
sbb
or
jge
push
jne
and
bound
int3
xchg
dec
fwait
inc
sbb
repnz
inc
test
hlt
and
lahf
xchg
pop
stos
outs
test
(bad)
jmp
mov
rcl
push
pop
dec
scas
sbb
xor
pusha
cmp
sub
xor
sbb
add
pop
mov
shr
and
ret
adc
dec
push
and
test
add
sub
xchg
ds
xchg
xor
add
push
jle
mov
aad
sbb
adc
or
lea
add
push
adc
pop
xlat
mov
or
cld
push
inc
dec
add
cmp
push
test
shr
and
xor
pop
jnp
sub
jg
pop
lea
test
je
or
(bad)
ret
das
cvtpi2ps
adc
sbb
push
xor
ins
push
sub
es
cmps
aaa
add
adc
jecxz
mov
or
outs
push
fidivr
int3
jno
sbb
xlat
cmp
cmpxchg
mov
sub
loopne
and
lock
mov
loope
push
sti
mov
dec
cmps
fimul
sub
mov
or
push
jo
sbb
inc
es
pop
push
paddsw
or
jo
dec
and
push
fiadd
sbb
lahf
inc
iret
pop
sbb
stc
sub
cmp
call
jns
sub
addr16
sub
outs
ja
adc
sti
pop
add
push
push
cmp
addr16
cld
push
std
dec
and
and
xor
pop
pop
push
mov
(bad)
add
pop
push
or
lock
add
sahf
rcr
dec
out
sahf
dec
push
js
inc
jns
mov
xor
jp
fisubr
pop
loopne
push
dec
pusha
jo
cli
jo
add
xchg
add
popa
(bad)
fucom
in
push
push
mov
and
sbb
mov
dec
sub
jge
add
pop
sub
adc
cmp
or
jae
mov
mov
enter
lock
retf
and
repz
pop
xor
sub
jmp
xchg
(bad)
mov
xor
dec
mov
js
mov
sbb
jl
call
aaa
mov
mov
dec
lea
push
and
sbb
push
add
test
push
(bad)
out
and
mov
or
fadd
sub
cmp
and
stos
cli
push
outs
leave
aas
pusha
mov
(bad)
call
add
push
sub
mov
sbb
pop
lahf
adc
xchg
mov
add
push
je
and
mov
sbb
ja
cli
out
add
dec
clc
lea
lea
mov
sub
or
jbe
fild
mov
ss
jg
clc
lahf
inc
add
cmp
jl
sbb
mov
push
push
lea
sub
mov
pop
repnz
xchg
ret
add
xor
ds
jg
das
jmp
xor
aaa
inc
sar
mov
and
sbb
lock
pop
mov
loope
aad
fwait
lods
jp
enter
jne
shl
aad
aas
sahf
dec
mov
inc
in
xor
mov
mov
sbb
mov
lods
inc
ins
shl
lahf
(bad)
(bad)
adc
je
pop
and
xchg
push
push
push
pop
ins
pusha
aaa
jl
sub
push
cmc
add
or
or
cmp
add
mov
data16
jne
jp
lods
aad
cdq
(bad)
pop
aas
sbb
sbb
jp
cli
xor
cmp
inc
mov
cmp
std
push
push
add
mov
loop
shr
es
clc
and
adc
cmp
add
or
sub
test
ja
xor
jo
mov
dec
enter
cmp
sar
ret
pop
or
or
idiv
dec
adc
jo
data16
inc
or
push
sub
push
sub
xor
xor
jo
jbe
cmp
jno
xchg
and
hlt
dec
jo
cmc
mov
inc
ss
mov
push
test
mov
out
loopne
dec
jnp
sub
test
leave
add
in
xchg
mov
cmp
cmp
or
test
add
jmp
daa
lods
jge
or
xchg
js
into
sar
aam
mov
adc
sbb
outs
xchg
and
cmc
or
mov
mov
dec
add
pushf
ficom
mov
loopne
fs
pop
cwde
push
add
mov
ins
jno
lahf
inc
jmp
and
sar
out
mov
not
in
loope
mov
pop
mov
mov
lea
je
mov
cdq
shl
push
push
adc
mov
retf
xlat
push
je
and
fadd
popf
test
add
ds
and
mov
sub
cmp
push
leave
and
sbb
ins
dec
and
lahf
pop
jg
outs
sbb
inc
sbb
pop
push
das
cmps
inc
pop
das
jecxz
cli
rcr
test
je
sbb
sub
fild
add
bnd
pop
out
and
add
repnz
jo
and
das
inc
aad
sbb
pop
xor
ss
loop
scas
rol
cmp
pop
mov
sub
jno
ins
nop
and
mov
shl
sub
jge
sub
div
fimul
fisubr
xchg
ja
add
or
jmp
jg
add
sub
jmp
cmp
jle
bound
jmp
icebp
cmp
inc
pop
add
ret
ret
mov
fsubp
je
cmp
jge
(bad)
sub
daa
push
sub
jmp
cmp
aam
push
dec
jg
call
pop
push
jge
jle
sbb
pop
or
call
add
add
retf
frstor
adc
fimul
in
in
sub
fld
xchg
test
add
sbb
fcomp
or
imul
sub
cmc
(bad)
(bad)
sbb
xor
mov
aad
or
stos
cmp
sub
sub
cs
enter
cwde
inc
cli
ret
jge
ins
mov
pop
nop
mov
fnstsw
mov
js
and
sub
loopne
pop
test
daa
inc
cmp
ss
push
inc
stc
add
enter
movs
lock
leave
or
xchg
ja
dec
lea
push
test
sbb
push
cdq
rol
pusha
(bad)
jg
mov
bound
push
mov
mov
push
call
dec
loope
outs
inc
dec
jne
mov
sub
inc
xor
inc
inc
add
mov
outs
or
cld
shl
xchg
aaa
adc
pop
xor
fdivr
pop
mov
and
pop
pop
push
sti
mov
cmp
jmp
xchg
rcr
loopne
into
les
into
xchg
xor
popf
or
ins
add
(bad)
mov
ins
xor
sub
sub
sub
movlps
mov
les
je
and
je
into
dec
jae
hlt
popf
js
push
mov
dec
std
dec
push
out
xor
or
and
pop
push
pop
xlat
dec
add
inc
loop
int3
outs
xlat
sub
mov
pop
(bad)
stos
add
scas
push
push
mov
mov
nop
push
pop
sub
or
maxps
xchg
movsx
push
inc
xchg
adc
mov
push
sbb
dec
fiadd
fcomp
xor
repnz
add
jl
pop
ins
add
cmp
pop
cli
push
lar
inc
jp
push
add
jl
test
or
jle
add
nop
mov
enter
cmp
xor
push
pop
and
cmp
adc
cli
dec
ss
jmp
jle
cmp
jne
xchg
and
mov
mov
push
dec
lock
mov
cdq
jo
mov
sbb
push
repnz
sbb
adc
ss
lods
rol
into
cld
(bad)
push
data16
push
inc
adc
push
sbb
mov
mov
add
xlat
push
inc
test
out
sbb
sub
inc
sub
or
daa
sub
add
sahf
push
inc
or
sub
es
cli
jo
es
shl
sub
cdq
push
rol
push
xor
pusha
cmp
jbe
icebp
je
jno
or
test
sbb
add
mov
cmps
je
inc
inc
mov
std
shl
lahf
mov
dec
jmp
int
int3
adc
jne
push
mov
adc
xor
pushf
xor
inc
(bad)
leave
nop
xchg
imul
push
push
rcr
or
loope
call
push
or
test
cmc
sti
cmp
jle
push
and
cmp
xor
push
inc
fcom
mov
dec
(bad)
adc
(bad)
lock
mov
ds
jo
mov
push
add
add
inc
and
or
loope
or
movs
xchg
jle
mov
jg
xor
loopne
cmp
add
cwde
dec
dec
fadd
jg
push
sbb
nop
cmp
and
inc
sub
inc
dec
mov
ret
jle
imul
xor
push
push
sub
scas
daa
pop
mov
jmp
cmp
outs
or
out
pop
ds
push
add
sar
sbb
mov
cmps
mov
pop
xchg
sbb
aad
push
pusha
inc
add
sub
dec
jns
adc
mov
pop
test
div
xchg
and
push
outs
les
push
add
shl
xchg
and
mov
(bad)
or
mov
inc
push
inc
clc
dec
add
dec
adc
popf
pop
jo
sbb
jne
inc
cmp
pop
cmp
call
popa
sub
dec
fisttp
ds
jmp
or
lea
ins
xchg
inc
or
push
lock
scas
or
mov
adc
cwde
push
lock
dec
rcl
mov
or
out
or
in
dec
leave
jge
inc
or
(bad)
lds
jo
ret
out
stc
jg
xor
ror
iret
shl
hlt
sub
dec
pop
ret
push
mov
jne
mov
push
in
repnz
(bad)
(bad)
pop
sbb
ja
or
movs
jp
sahf
xor
xor
jae
jo
jle
inc
repz
ja
adc
sbb
cli
adc
pushf
dec
repz
lods
jge
retf
mov
iret
mov
xlat
adc
lods
stc
mov
jecxz
sub
adc
in
imul
mov
or
addr16
in
add
jmp
add
xchg
les
xor
mov
(bad)
test
jno
xchg
pop
js
pop
xor
add
cmp
add
aaa
loopne
adc
inc
sub
and
ret
xor
je
add
repz
fistp
dec
jne
dec
mov
loope
sub
dec
sbb
imul
leave
sbb
or
mov
or
test
inc
shr
je
inc
sbb
push
cmp
push
jg
stos
fsubr
sub
mov
sub
scas
sub
loopne
pop
mov
mov
push
sbb
xor
adc
adc
push
add
js
inc
jp
xor
adc
jns
or
push
add
xchg
jle
push
and
and
xchg
xlat
jle
test
aam
je
dec
jne
xchg
adc
lds
int3
sub
sub
or
popf
enter
sub
(bad)
and
add
(bad)
add
(bad)
call
sbb
iret
push
and
push
inc
pop
(bad)
and
cmps
push
stos
add
pusha
mov
add
cmps
mov
fist
sbb
js
or
sub
sbb
jbe
mov
sbb
mov
mov
push
jle
in
repnz
push
sbb
sbb
fsubp
sub
call
mov
cmp
mov
or
or
enter
adc
ret
fcomp
enter
xlat
xchg
int
xchg
lds
enter
xchg
das
mov
dec
pop
xchg
push
jnp
pop
sub
add
sub
add
dec
xchg
cmp
and
fnstsw
inc
cmp
jg
sbb
xor
or
cmp
mov
int
sub
add
imul
sbb
sub
xchg
adc
add
pop
and
dec
jne
daa
jno
daa
jne
cmp
daa
lock
mov
sti
jne
xchg
aaa
test
inc
rol
or
mov
xchg
adc
stc
add
mov
das
cld
cmps
mov
adc
mov
pop
sahf
daa
push
add
sbb
fstp
push
or
mov
mov
fistp
cmp
fld
pop
fld
lock
push
pop
add
adc
xor
dec
inc
add
or
pop
add
mov
scas
(bad)
cmps
inc
cmp
jmp
mov
jbe
jb
repz
lea
add
add
outs
cmps
js
out
shl
mov
jo
test
in
cs
and
or
into
xchg
movs
xor
jmp
mov
cmc
pop
out
mov
stos
lea
jne
shl
aas
sub
inc
test
je
jbe
ret
inc
jmp
ficom
or
cmp
adc
inc
xchg
scas
jo
mov
add
sub
cmps
sbb
sub
push
ret
(bad)
jbe
adc
jo
rol
sub
pop
fst
and
cmp
and
add
call
mov
ja
cmps
xor
inc
ins
mov
push
gs
pusha
scas
loopne
outs
mov
sbb
inc
into
mov
add
cli
in
adc
mov
sti
add
or
add
fldcw
jp
into
ret
stos
pop
jmp
sub
mov
fwait
gs
clc
rcr
jne
nop
mov
rcl
loopne
xor
dec
lds
repz
ss
ret
mov
mov
jle
popa
call
mov
inc
jns
or
das
jl
jmp
ror
inc
int
ror
cmc
outs
lock
xchg
ret
pushf
sbb
sbb
push
sub
pop
sbb
add
sahf
enter
retf
sbb
or
cmp
fdivr
xor
pop
xor
loopne
leave
inc
out
ins
push
push
mov
dec
jp
adc
ror
fadd
sub
lock
push
mov
xchg
cmp
xor
movs
(bad)
sbb
lock
movs
or
inc
ss
pop
dec
mov
add
adc
dec
popf
push
adc
and
je
push
outs
ss
mov
sub
jmp
loopne
xchg
jmp
push
ret
fdiv
dec
fwait
jle
int
adc
push
sbb
lea
cmp
or
xchg
sti
xchg
add
cmp
dec
jo
cmp
or
sahf
add
div
pop
adc
lock
xor
mov
leave
add
(bad)
clc
das
mov
push
push
lea
adc
mov
dec
bound
pop
repnz
test
repnz
jmp
add
add
fbstp
in
inc
adc
inc
imul
adc
cwde
pop
stos
rcl
add
inc
xchg
jne
shl
and
outs
push
scas
sub
cmp
adc
pop
adc
inc
push
fiadd
mov
jmp
add
leave
lock
add
les
movs
xor
jp
outs
xor
daa
sbb
imul
xor
fisub
inc
ret
pop
adc
stos
enter
add
push
lea
aam
xchg
sbb
adc
fadd
inc
aas
inc
das
aam
mov
mov
add
jl
pop
mov
xchg
and
pop
adc
cmp
sahf
jmp
xchg
mov
cmc
loop
add
mov
add
mov
loop
inc
or
add
mov
cld
imul
iret
shl
test
loopne
xor
faddp
and
outs
js
dec
sub
cmp
rcr
jecxz
or
adc
loopne
popa
pop
and
dec
je
popf
push
add
push
inc
sbb
dec
mov
sub
or
and
das
pop
call
push
ret
cmp
sbb
mov
mov
dec
aad
mov
or
xchg
mov
add
call
ret
jo
dec
sbb
or
rol
aad
jecxz
loope
movs
sub
sbb
push
sub
cmp
push
mov
inc
mov
inc
outs
or
xor
movs
mov
push
adc
not
push
push
mov
add
mov
(bad)
imul
cmp
jo
test
mov
add
nop
mov
adc
mov
div
das
nop
inc
sub
push
in
mov
xor
sbb
pop
mov
xor
mov
xchg
daa
jmp
lea
repnz
push
outs
ss
xor
rcl
inc
mov
sbb
aas
or
add
cmps
jbe
sbb
push
sbb
lsl
mov
mov
hlt
mov
add
lahf
sbb
ret
fdiv
rol
sub
dec
outs
call
adc
fisub
clc
and
retf
jb
jp
sub
mov
xchg
sbb
arpl
add
and
loop
xchg
pop
dec
jo
add
or
mov
xor
jo
(bad)
cmp
idiv
sahf
mov
or
jle
push
in
xchg
dec
mov
daa
mov
outs
push
sbb
mov
dec
scas
jb
shl
add
cmp
push
jmp
test
pop
not
jb
outs
push
popf
sbb
push
sti
sbb
mov
mov
lock
adc
xchg
arpl
loope
push
mov
mov
sbb
inc
xor
jo
ret
adc
nop
add
push
pop
cmp
test
sbb
nop
inc
inc
xor
shr
sbb
fdivr
cwde
jo
xchg
jo
xchg
int
ds
mov
fimul
cmp
adc
or
ret
sbb
sbb
call
nop
mov
psrlq
cwde
push
cs
inc
pop
inc
mov
jne
adc
push
das
lods
scas
mov
fs
and
add
inc
or
rcr
rol
stos
xor
add
je
retf
push
call
retf
push
jo
nop
inc
mov
outs
cmp
sbb
imul
outs
cmc
mov
aaa
icebp
movs
mov
lsl
loop
retf
cmp
clc
mov
fld
ror
popa
(bad)
(bad)
sub
out
mov
test
cmp
xor
call
mov
arpl
dec
imul
jle
jne
and
inc
pop
in
test
add
popf
jmp
pop
enter
push
sub
sbb
test
lea
xchg
sub
lea
out
call
push
jp
cmp
mov
push
and
and
push
push
js
xor
ror
fmulp
mov
dec
sbb
mov
lahf
lea
or
out
daa
push
and
daa
ret
das
lods
mov
sub
ret
es
mov
dec
sub
iret
pop
push
loopne
cmp
sub
mov
inc
add
pop
add
xor
pop
xchg
cli
mov
fdivr
leave
jo
clc
ror
dec
and
adc
mov
cmp
sbb
loopne
inc
mov
mov
imul
cmp
fwait
xor
cmp
ss
mov
pop
push
aas
aad
je
xor
pop
pop
adc
adc
inc
push
dec
adc
add
xchg
sbb
cmp
mov
jge
pop
add
add
and
ja
(bad)
or
jb
or
push
scas
and
in
mov
call
fisubr
call
pop
sub
sub
dec
sbb
rcr
pop
add
and
data16
ret
scas
pop
dec
sub
cmp
xor
add
mov
fild
inc
jne
jne
test
ins
inc
jbe
xchg
out
or
pushf
cs
and
or
xchg
add
dec
xlat
sar
iret
jmp
or
bound
jmp
inc
or
and
or
push
inc
push
mov
pop
mov
scas
pop
add
outs
or
loope
sbb
xchg
push
enter
mov
sub
test
inc
or
sub
(bad)
push
add
and
jnp
out
and
jb
mov
push
or
test
test
and
sbb
loope
loop
and
ins
and
jnp
scas
adc
xchg
sub
adc
mov
mov
cmc
sbb
adc
dec
lods
stc
inc
popf
mov
xchg
out
mov
xchg
stos
pop
les
pop
add
xor
shl
fst
xchg
inc
add
sub
lods
mov
aad
pop
rol
mov
add
outs
loopne
dec
imul
es
sub
push
jo
test
inc
ret
or
fs
nop
push
mov
daa
pop
(bad)
cmp
adc
movs
add
dec
int
add
movs
mov
in
fisubr
call
pop
sub
pop
fcom
jne
sti
pop
mov
push
jne
add
mov
push
je
movs
call
dec
fnstcw
shr
push
call
mov
ds
scas
or
rcl
and
xor
repnz
and
mov
dec
js
or
retf
retf
mov
call
into
push
cwde
iret
pusha
xor
rol
aas
pop
adc
inc
and
push
popa
mov
or
repz
pop
dec
das
fadd
scas
add
fnsave
enter
imul
push
ret
add
shr
sub
mov
dec
pop
push
jge
das
mov
sti
je
imul
js
or
inc
mov
test
push
mov
fwait
retf
add
and
xor
xchg
mov
pop
jp
push
jl
inc
inc
inc
pop
or
mov
es
adc
aam
mov
inc
dec
mov
jne
out
mov
pop
cli
sub
xchg
cmp
xor
sub
loopne
cmp
das
jmp
mov
js
cmp
cld
adc
repz
add
cmc
pop
jnp
xchg
jle
inc
push
mov
cmp
jne
dec
outs
xchg
fdiv
cmp
test
xor
inc
mov
out
jae
lea
sub
js
call
mov
cmp
pop
or
dec
push
sub
adc
lahf
adc
jns
out
loopne
and
add
(bad)
cwde
pop
aaa
sub
test
push
dec
outs
sar
dec
sbb
xchg
retf
das
or
adc
xchg
mov
mov
iret
pop
je
sub
mov
aas
mov
sbb
sbb
adc
fisttp
pop
jno
cmp
jb
push
(bad)
fistp
or
inc
sub
pop
scas
or
xchg
push
and
inc
jmp
and
push
dec
call
xor
push
jl
and
push
pop
add
mov
sub
mov
dec
jo
(bad)
dec
mov
(bad)
push
sub
test
pop
mov
mov
mov
int
xor
or
push
hlt
and
loope
pop
sbb
dec
and
adc
add
xchg
std
ds
and
(bad)
cld
sbb
adc
or
sub
and
in
adc
xor
repnz
movs
or
add
js
int
push
add
inc
adc
inc
inc
(bad)
fwait
rcl
repnz
mov
mov
jbe
je
add
movs
xchg
or
mov
xor
pusha
mov
cld
sbb
and
mov
mov
je
and
jmp
dec
mov
nop
push
jmp
mov
inc
push
cld
and
sub
xor
sbb
inc
pop
call
dec
mov
sub
idiv
call
sbb
and
add
push
mov
cmp
add
or
pop
imul
xor
inc
inc
es
enter
sub
es
cs
push
cli
jae
xor
pop
xchg
jl
inc
sbb
xor
sub
add
loope
push
cmp
out
adc
gs
shr
push
jne
jne
fistp
inc
retf
and
in
das
mov
push
out
lea
mov
cdq
fsubr
dec
sub
push
inc
push
or
and
jne
sti
inc
sub
shl
rcr
pop
mov
mov
aad
inc
mov
int3
cmp
sar
cmps
test
js
adc
and
sti
pop
cld
(bad)
repz
lods
and
sub
sar
fsub
pop
call
adc
hlt
or
xor
sbb
push
xor
add
inc
and
xchg
pusha
pop
push
or
ret
pop
mov
and
jo
je
nop
inc
lods
std
jmp
xchg
cmp
xor
push
inc
test
ret
push
push
xchg
jne
dec
fdivr
aad
pop
pop
xor
xor
push
dec
or
dec
in
mov
inc
sbb
sar
sbb
pushf
cmp
push
fiadd
je
cmp
pop
jns
pop
fiadd
push
push
push
lods
jae
fadd
imul
aas
or
xor
cmp
mov
cmp
add
test
and
add
or
adc
sbb
aam
inc
push
ret
sub
add
sub
adc
mov
movs
add
push
call
dec
mov
or
sub
push
dec
cmp
loope
pop
adc
jle
pop
xchg
hlt
ins
retf
pop
cmp
sbb
mov
ret
sub
add
cmp
movs
loop
retf
xor
outs
(bad)
imul
scas
add
loopne
mov
pop
xor
push
inc
push
lea
cmp
push
inc
xor
daa
cmp
lea
push
ret
push
sbb
push
imul
cmp
pop
push
mov
data16
daa
cli
xchg
test
(bad)
ss
xor
nop
out
or
mov
adc
inc
arpl
(bad)
sahf
loope
enter
push
stc
jle
inc
mov
ffree
cli
ja
dec
or
or
mov
add
pushf
int
fbld
mov
or
push
sub
xchg
mov
fwait
add
mov
add
pop
cmp
jmp
sahf
or
mov
ds
les
ret
add
cld
mov
pop
(bad)
pop
add
xchg
mov
sbb
push
ss
add
xor
inc
ss
pop
int3
jl
and
repnz
shl
and
inc
adc
sbb
or
or
jmp
(bad)
in
ja
lea
test
add
xor
cdq
inc
sbb
dec
clc
adc
push
leave
in
mov
int3
pop
jmp
pop
or
add
inc
push
stos
lods
add
loop
out
and
bound
mov
xchg
or
xchg
mov
adc
pop
xchg
add
daa
and
fs
sbb
xchg
shl
pop
clc
or
pop
xchg
push
mov
sbb
or
xchg
ficomp
mov
mov
push
adc
mov
dec
lds
sahf
retf
test
movs
mov
loop
(bad)
xchg
xchg
xor
inc
add
cmovno
shr
and
push
pop
jb
xchg
mov
jo
jl
adc
pop
cmps
cmp
and
lock
sub
or
fs
cwde
adc
push
dec
or
clc
ds
data16
push
push
lods
add
mov
test
and
inc
push
adc
xchg
ss
adc
add
int
imul
adc
lods
add
(bad)
inc
inc
xor
add
jae
jmp
stos
dec
adc
ror
jl
outs
xor
dec
and
add
cmps
add
fimul
cmp
test
out
hlt
or
outs
test
arpl
inc
sub
or
jp
pushf
fisubr
and
add
cwde
lock
xchg
jl
mov
push
sbb
sub
inc
dec
retf
lods
push
scas
add
test
icebp
xchg
or
push
push
rcr
lds
shl
inc
push
xlat
test
pusha
xchg
ror
test
inc
dec
lock
enter
add
lahf
add
mov
sbb
mov
xor
sub
(bad)
aam
sbb
dec
dec
pop
inc
push
aas
loopne
pusha
jb
jo
pushf
push
add
js
push
shl
push
arpl
sti
inc
jmp
stos
adc
mov
ss
test
sar
int
push
(bad)
mov
repz
mov
ud0
mov
sbb
shl
jne
mov
retf
pushf
sub
ja
jle
push
sahf
(bad)
scas
mov
jne
sub
dec
idiv
inc
pusha
or
ror
jo
pop
pusha
xchg
gs
cmp
or
in
push
adc
dec
mov
es
inc
push
sahf
sbb
or
test
into
sub
and
call
dec
shl
sbb
mov
popf
cs
sub
inc
test
imul
xchg
lock
cdq
call
popa
movs
lock
jl
nop
jle
icebp
fld
jl
or
sahf
pop
adc
mov
push
adc
push
stc
sub
fs
pop
mov
inc
jmp
jo
je
rol
lods
sbb
out
fcom
(bad)
(bad)
mov
outs
cli
dec
jb
mov
sbb
push
sbb
push
lahf
dec
lods
push
sub
push
cmps
add
or
pcmpeqw
sub
es
sub
mov
inc
daa
sbb
not
add
push
push
clc
sub
shr
das
jbe
jmp
adc
in
je
aas
js
bound
ins
and
in
add
cmps
adc
popa
je
sub
(bad)
fimul
in
mov
mov
ret
add
test
jl
fdivr
inc
lock
push
sti
jne
and
fcomp
mov
jle
add
inc
mov
(bad)
push
mov
ret
push
clc
shl
dec
hlt
cld
(bad)
adc
jl
sub
mov
xchg
add
push
dec
or
int
sub
push
pop
sbb
add
sbb
shr
add
cmc
add
add
inc
fisttp
shl
daa
outs
push
mov
inc
sub
inc
jmp
hlt
xchg
pusha
xchg
sub
jbe
push
push
ret
mov
scas
inc
adc
and
sbb
clc
xchg
pop
outs
push
push
add
or
xchg
jb
mov
jbe
adc
dec
cwde
push
(bad)
cmp
inc
push
adc
push
jmp
push
test
rcr
cmp
jge
add
or
adc
daa
mov
mov
xor
adc
jns
mov
out
push
movs
xor
nop
add
jmp
push
push
or
sbb
cmps
jno
mov
and
jg
imul
add
bound
inc
lods
ret
or
or
and
sbb
test
inc
sbb
pop
cmps
adc
pop
mov
pusha
add
lea
test
cmp
lea
xor
or
cld
push
mov
ret
sub
sub
or
inc
cmp
mov
mov
hlt
add
mov
lahf
repnz
inc
call
mov
push
inc
fiadd
xchg
push
inc
gs
adc
cmp
push
push
pop
dec
and
sub
scas
cmps
sbb
mov
mov
pop
aas
cdq
and
xchg
push
rcr
leave
xor
mov
sub
sub
add
cmp
xchg
jmp
loopne
imul
out
push
cmps
sub
in
(bad)
bswap
or
lea
mov
or
jbe
js
fsubr
sete
cli
sbb
mov
add
and
js
pop
nop
sbb
mov
jl
daa
push
lea
adc
cmps
inc
enter
rcl
nop
dec
sti
test
lea
sbb
cmp
rol
mov
jnp
xor
mov
or
sbb
xor
pop
adc
xor
push
jle
push
std
das
sub
ds
lds
mov
sub
daa
xor
(bad)
push
jb
pmuludq
push
and
and
add
sub
mov
test
xor
mov
or
adc
push
loope
aam
or
(bad)
jmp
(bad)
sbb
xor
popa
xlat
add
mov
and
pop
xlat
ret
mov
aas
movs
or
daa
jo
push
not
inc
push
sub
add
sbb
sub
lods
(bad)
sbb
add
shl
cmp
jle
xchg
je
test
adc
mov
sbb
xor
push
nop
in
sahf
es
nop
addr16
movs
test
lock
sbb
push
gs
sub
add
push
jp
pusha
add
enter
inc
xchg
add
out
(bad)
(bad)
or
cmp
aam
mov
or
cmp
pop
mov
push
inc
js
mov
jns
add
push
dec
mov
fs
push
sub
push
xchg
jmp
mov
mov
push
in
xchg
inc
(bad)
test
popf
mov
push
pop
daa
xchg
rcr
adc
pushf
sbb
jae
arpl
fiadd
adc
pop
xchg
and
cmp
ret
jmp
cmps
sub
xchg
cli
dec
mov
mov
clc
iret
shr
sbb
push
jge
inc
(bad)
jnp
imul
(bad)
xchg
cvtdq2ps
popf
(bad)
add
loopne
or
shl
iret
inc
call
popf
xor
jns
je
stc
repnz
sub
jl
pop
mov
sub
pop
sub
sbb
sub
fwait
popf
es
jne
mov
or
sbb
out
dec
jb
add
mov
dec
cdq
inc
adc
pop
xchg
add
aam
sbb
jae
xchg
add
pop
and
(bad)
cmp
rcl
inc
shl
aas
add
add
pop
movs
adc
test
cmp
sub
sub
pop
xchg
out
(bad)
in
jge
mov
sbb
sub
mov
xlat
pop
setbe
mov
push
or
movs
push
and
or
(bad)
shr
shl
dec
retf
shr
jle
scas
addr16
lahf
lahf
adc
mov
push
jle
mov
sub
inc
xor
inc
pop
sahf
cdq
and
mov
and
int
or
push
push
jo
push
jmp
xor
add
sub
dec
pop
cdq
dec
pop
mov
fcomp
jo
add
aam
sar
rol
shr
frstor
enter
inc
mov
cld
add
data16
cmpps
mov
retf
mov
test
(bad)
sbb
dec
inc
jo
ficom
jne
stos
add
dec
mov
cwde
int
and
test
rol
les
ficom
imul
push
push
adc
adc
cmp
pop
cwde
sbb
and
sub
dec
cmp
call
xchg
ins
stc
xor
or
jl
nop
std
mov
or
push
mov
ror
mov
xchg
sub
mov
inc
pusha
xor
mov
or
loopne
js
sbb
sub
sbb
(bad)
jp
mov
inc
sbb
mov
add
shl
xor
mov
scas
and
sub
ins
ins
pop
dec
shr
call
lods
push
pop
out
push
pusha
(bad)
lea
dec
xor
or
sub
xchg
mov
in
loopne
sbb
mov
or
mov
scas
xor
sub
loop
dec
(bad)
pusha
inc
or
add
fimul
pop
lock
imul
or
sub
adc
inc
pusha
sbb
mov
fld
and
adc
push
add
push
push
fwait
jmp
sbb
or
je
dec
out
mov
in
js
cmp
popf
xor
sub
or
pop
or
xor
fisttp
mov
in
add
jmp
call
inc
add
xchg
movups
outs
xlat
les
imul
pop
es
add
dec
jmp
fld
imul
dec
or
pop
pop
fdivr
xchg
sbb
xor
xchg
and
cwde
fistp
fmul
sbb
lods
sbb
test
add
(bad)
fiadd
and
inc
ja
and
aas
sar
pushf
cmp
mov
or
dec
mov
push
mov
inc
shl
xor
mov
dec
dec
jns
nop
lock
sbb
jecxz
xchg
test
daa
push
test
mov
add
jp
retf
inc
and
js
mov
pop
out
ds
ins
jle
ror
or
fbld
cmps
pop
xor
sub
xlat
or
or
lods
shr
rol
pusha
add
sub
add
add
add
add
icebp
sub
(bad)
jmp
adc
add
pop
adc
shl
mov
jmp
lods
push
clc
cs
imul
push
sbb
imul
and
pop
mov
push
xor
and
cmp
sbb
inc
add
xor
call
mov
xor
dec
pop
cmp
xor
pop
cmp
leave
mov
cmp
xor
inc
outs
ror
mov
push
mov
inc
pop
mov
adc
mov
cmp
add
mov
and
jecxz
loop
push
xchg
movs
adc
not
push
pop
lea
(bad)
cmp
adc
out
sbb
push
jecxz
cmp
pop
add
push
jae
test
push
xor
lock
(bad)
sbb
data16
add
or
mov
mov
sub
fld
sub
inc
adc
or
je
scas
ret
mov
fadd
inc
(bad)
cmp
dec
push
cli
add
in
mov
lock
sbb
lods
push
mov
push
mov
push
cmp
pop
add
sbb
sub
push
dec
in
and
and
sti
jle
cmp
and
adc
or
cmps
in
cmps
jmp
mov
mov
cmp
scas
cmp
out
and
ret
cmps
push
jmp
jle
fcmovnbe
sub
jmp
pop
jno
pop
and
test
(bad)
and
jne
cdq
jns
sub
sub
mov
sub
sbb
stos
jb
ds
mov
test
out
jmp
sub
(bad)
jp
and
mov
mov
jge
inc
add
loopne
mov
mov
movs
retf
xor
sysenter
fdiv
lock
aad
or
fs
or
test
shl
dec
jno
popf
sub
ror
mul
jp
push
js
mov
or
and
and
pop
jg
or
inc
mov
not
mov
mov
mov
outs
repnz
xor
lea
repnz
xor
push
shl
mov
aas
(bad)
sbb
sub
lahf
xor
stos
or
lahf
sub
mov
sbb
push
sbb
cmp
dec
fdiv
dec
(bad)
jmp
out
cmp
(bad)
push
sbb
sbb
daa
mov
or
lods
pop
or
add
sub
push
sbb
ins
jecxz
pop
push
mov
fwait
mov
pusha
sbb
push
adc
add
sar
jmp
or
adc
imul
add
add
in
ja
or
adc
rcl
ins
or
clc
xchg
sub
loope
stc
add
or
xor
popa
iret
(bad)
sub
in
sub
push
mov
fst
sbb
inc
js
lea
sbb
pop
sbb
fnstcw
sub
push
sub
or
inc
mov
(bad)
sub
push
mov
xchg
xchg
sub
loop
int
mov
imul
add
arpl
(bad)
xchg
mov
xor
sbb
and
imul
es
fcomp
sbb
sti
pop
pop
push
cmp
fstp
cmp
and
add
dec
ds
pusha
mov
cmp
pop
call
loope
xor
fst
push
add
jmp
inc
lds
mov
inc
xor
pop
stos
mov
ret
inc
and
or
add
pop
fs
sub
xor
xor
shr
add
outs
adc
push
loopne
mov
adc
push
or
or
push
inc
or
sbb
aam
lods
or
adc
push
and
movs
mov
nop
lods
or
dec
test
pop
imul
and
mov
push
sbb
push
rcr
push
xor
adc
mov
push
xor
dec
jbe
loope
adc
hlt
jge
xchg
fadd
fsub
clc
push
in
adc
lds
les
adc
mov
and
fadd
push
pop
inc
inc
and
shl
icebp
mov
clc
inc
pusha
adc
pop
mov
inc
outs
and
mov
sbb
sbb
push
adc
push
or
hlt
and
jp
add
dec
push
add
mov
adc
in
jp
(bad)
xchg
or
sbb
fadd
pop
test
out
in
pop
jbe
mov
lea
add
adc
sahf
pop
pusha
loop
movs
shl
adc
retf
dec
inc
imul
mov
aas
or
or
inc
clc
mov
outs
or
fsub
adc
push
add
push
sub
push
fld
xor
and
ret
xchg
xor
pop
push
aaa
popf
scas
imul
mov
cmp
cld
jae
push
ds
adc
sbb
sbb
push
mov
mov
loope
push
xchg
fild
stos
gs
adc
mov
mov
mov
adc
adc
cmp
popa
xor
icebp
shl
fwait
cmp
lds
xlat
and
lods
or
add
sbb
xor
jecxz
cmps
add
xor
inc
dec
repnz
mov
or
cmp
mov
out
test
das
xchg
ds
rcl
sub
push
loope
add
in
mov
fisub
iret
mov
mov
pop
or
iret
cdq
nop
test
data16
je
push
bnd
sub
pop
inc
cmp
mov
mov
mov
sbb
push
push
lock
pop
pusha
or
sub
jne
push
mov
xchg
push
loopne
les
and
adc
cmp
dec
idiv
rol
pop
lock
push
add
dec
cmp
les
loop
jge
jecxz
sub
call
fld
push
sub
jo
push
push
movs
inc
call
clc
fdiv
jno
pop
inc
mov
imul
ds
cli
push
rol
rol
mov
sti
das
or
(bad)
jmp
push
imul
add
add
add
mov
dec
add
(bad)
push
and
pop
es
fisubr
rol
push
sbb
push
repnz
fst
sbb
mov
add
mov
mov
adc
push
push
jmp
out
xchg
xchg
xor
jle
icebp
std
sar
cli
or
and
push
cmp
(bad)
and
inc
inc
inc
gs
out
movs
and
(bad)
hlt
add
mov
jg
shl
test
adc
jns
lods
mov
les
mul
bound
cwde
in
sub
test
or
push
and
jo
jl
sbb
and
mov
sub
inc
and
fstp
je
test
pusha
inc
push
jae
or
(bad)
push
xor
scas
call
out
sbb
sbb
jl
sub
add
test
add
mov
lds
and
push
sub
sbb
mov
fisttp
push
dec
add
dec
ffree
movs
sub
std
inc
cmp
add
lock
xor
add
call
fadd
gs
and
adc
sub
cpuid
push
jmp
cmp
(bad)
sbb
pop
push
sbb
lock
cli
(bad)
push
add
cld
(bad)
dec
push
or
xchg
push
push
dec
fsubr
sbb
pop
mov
push
mov
cmps
jae
or
xchg
pop
jne
imul
mov
sar
dec
inc
retf
add
pop
call
mov
test
mov
fisttp
lock
or
inc
and
inc
rcr
push
jle
out
(bad)
or
cmp
mov
in
xchg
jne
lods
repnz
pop
add
loopne
or
bswap
rol
mov
stos
aad
mov
in
test
mov
or
and
repnz
pop
aaa
mov
mov
aad
mov
daa
push
loopne
push
fisub
push
cmp
test
adc
lea
pusha
test
or
pusha
jmp
xor
gs
inc
fstp
call
in
outs
ja
pop
add
gs
imul
jno
test
mov
mov
ins
add
or
cwde
push
dec
push
and
jl
jp
ss
inc
mov
nop
cmp
icebp
sbb
ss
int3
xor
popf
icebp
ficomp
pop
dec
call
rcr
dec
(bad)
es
gs
dec
mov
fidiv
ror
jnp
adc
add
fsubr
inc
add
pop
ret
jb
and
mov
js
add
dec
test
icebp
icebp
popa
adc
dec
data16
jmp
and
adc
pop
sub
ds
mov
add
cmp
sub
or
xlat
inc
sbb
or
push
ins
jmp
dec
or
mov
enter
adc
jae
stos
into
or
add
ret
and
or
inc
cmp
loope
xchg
sahf
ret
and
push
into
sub
sbb
dec
add
jmp
int3
ins
pusha
or
(bad)
popf
xor
call
retf
jno
je
das
jae
or
jnp
sbb
pop
es
(bad)
mov
in
sub
xor
add
sbb
and
iret
(bad)
in
push
ins
out
push
shr
dec
mov
stc
hlt
lock
or
inc
cmp
mov
jle
nop
cdq
pop
repnz
inc
mov
out
sub
fild
frstor
sub
pop
and
add
mov
push
inc
stos
fxch
inc
ins
or
sub
call
pop
outs
es
pop
push
push
sub
gs
sbb
pop
add
div
push
xchg
daa
rcl
out
xor
inc
movs
mov
call
inc
mov
xor
mov
xchg
jb
mov
jb
mov
scas
or
test
add
icebp
cmps
nop/reserved
cli
mov
xor
push
into
sbb
push
mov
inc
movs
iret
dec
ret
or
push
ficom
jg
mov
cli
dec
xor
test
xlat
mov
push
jecxz
xchg
xchg
cdq
mov
retf
pop
dec
fst
fdivr
mov
movs
mov
test
aam
arpl
pop
add
xor
sub
and
sub
aas
fild
mov
jnp
or
add
das
adc
adc
mov
or
aaa
add
xor
(bad)
js
pop
jne
sbb
or
pop
sub
lea
or
jmp
ins
cdq
mov
jp
and
or
jbe
test
movs
cmp
sar
sbb
cld
jge
(bad)
inc
loope
adc
push
aas
add
rcr
or
cmp
shr
fsub
mov
sub
inc
add
inc
movs
cmp
ror
push
add
or
mov
sub
inc
add
sbb
ins
and
push
add
and
jge
fsubr
sub
popf
push
jl
mov
ins
adc
push
in
loopne
and
or
xchg
lea
add
jge
push
sub
mov
retf
xor
push
push
pop
or
lods
mov
push
push
adc
mov
in
or
mov
aam
inc
push
adc
mov
xor
mov
inc
call
lock
ss
mov
add
fst
(bad)
dec
mov
call
xchg
rol
mov
or
sbb
ficomp
loope
cmp
into
push
ds
retf
clc
add
daa
lea
and
jae
sub
mov
sbb
cdq
std
xor
inc
or
shl
pop
push
inc
push
sub
jmp
mov
sub
popf
movlps
xchg
cmp
je
sbb
mov
loope
inc
dec
je
dec
sub
adc
inc
mov
lahf
xor
inc
jg
or
ret
loopne
jge
frstor
fcomp
dec
test
ss
out
or
nop
xor
adc
sub
adc
push
nop
push
lods
xor
inc
pop
xchg
es
pusha
imul
in
cld
push
dec
imul
aas
push
dec
imul
pop
ret
push
das
(bad)
stos
dec
icebp
adc
rcr
cmp
mov
cmp
mov
cld
mov
push
lea
ds
sub
dec
popf
ret
ja
push
int
inc
rsqrtps
or
mov
test
add
in
add
lods
push
push
dec
push
jb
loope
jecxz
pop
xchg
bound
inc
sets
xchg
or
mov
sar
xor
add
add
push
jg
mov
div
push
push
push
(bad)
mov
add
lea
pop
adc
dec
jns
push
rcr
ds
mov
rol
add
gs
pop
rol
daa
push
daa
pop
mov
fiadd
ds
push
movs
shr
mov
add
push
sub
mov
pop
xchg
(bad)
shl
ins
mov
sub
and
test
lar
mov
mov
aas
sbb
lahf
std
test
loopne
es
aas
jne
pop
pop
(bad)
add
retf
int3
pop
es
mov
fiadd
mov
mov
ins
adc
cmp
xor
rol
in
jo
mov
push
dec
fucomip
sub
call
fld
push
ss
mov
and
sbb
lock
xchg
or
or
pushf
xor
(bad)
pop
jbe
mov
or
jl
test
or
mov
daa
or
ficom
mov
call
cmp
adc
cli
or
sbb
aam
push
mov
and
and
mov
fdivr
xor
cmp
fst
or
push
cmp
xchg
and
fincstp
rol
sahf
(bad)
and
push
push
xchg
loopne
pop
adc
adc
lock
lock
jge
xlat
xor
sub
dec
add
or
cmp
and
mov
or
gs
fistp
push
push
or
bound
cli
pop
je
sbb
cdq
sbb
je
add
cmp
imul
push
aam
pusha
jnp
pop
fcmovnu
enter
sar
adc
sub
xchg
sub
or
xor
mov
push
and
push
push
jecxz
inc
add
(bad)
in
rol
lock
out
fiadd
sub
add
inc
lods
dec
test
mov
sub
(bad)
jmp
les
cdq
sub
and
daa
add
xlat
push
sbb
push
and
sbb
jle
sbb
in
add
cmp
ficom
dec
mov
fucomip
mov
fdiv
jl
call
pusha
adc
push
xchg
jns
test
imul
outs
push
ins
push
shr
inc
xor
data16
and
dec
sbb
lods
mov
ret
cmp
jns
adc
sbb
or
les
push
adc
push
imul
or
into
jecxz
sbb
jecxz
sub
sub
(bad)
(bad)
rcl
sub
sub
cmps
sub
pop
lds
dec
adc
xchg
ror
into
jg
icebp
mov
rol
dec
jecxz
adc
pop
test
jb
fwait
push
and
push
enter
mov
xor
mov
rcl
stc
inc
push
mov
into
pushf
inc
add
ja
adc
mov
jl
(bad)
nop
ret
pop
push
loopne
push
adc
pusha
inc
add
in
pop
xchg
test
add
and
mov
inc
stos
mov
sbb
js
mov
iret
les
or
sar
push
popa
mov
push
jne
push
and
adc
pushf
sbb
fcmovnb
mov
popa
push
dec
add
add
call
jnp
fstp
pop
repnz
aaa
and
sub
push
out
mov
popa
jmp
dec
add
mov
js
outs
jbe
popa
sub
mov
xor
sbb
add
and
cmp
cmp
daa
mov
es
inc
data16
add
dec
or
dec
sub
fild
xchg
cmps
push
or
jmp
mov
push
nop
jmp
inc
push
xor
jl
adc
cmp
pop
(bad)
jmp
inc
ja
leave
sbb
adc
mov
mov
mov
jg
cmp
sbb
xchg
mov
push
retf
sub
imul
outs
lods
bound
pushf
rol
adc
mov
xor
push
cwde
es
rol
ss
mov
jbe
cmp
add
inc
inc
outs
cmps
ja
mov
push
sbb
mov
mov
xor
sub
cmp
cmp
add
xor
test
loopne
inc
jmp
stos
jge
push
mov
stos
add
mov
mov
test
inc
cdq
xor
add
int3
sub
shl
sub
cmc
out
aaa
pop
ds
xchg
leave
push
stos
pop
cdq
add
and
repz
mov
pop
sub
add
clc
add
jbe
lea
mov
dec
push
or
sbb
or
pop
pusha
arpl
sbb
inc
xor
sub
dec
imul
and
call
inc
cmps
or
inc
xchg
popa
lahf
jae
outs
sbb
xor
jbe
fcom
push
or
in
(bad)
(bad)
daa
(bad)
sbb
inc
sbb
sub
push
mov
pop
sub
sub
and
push
jb
sub
xor
mov
and
scas
jnp
test
add
loope
push
cs
cmps
(bad)
jmp
ja
test
xor
mov
or
sbb
cmp
adc
mov
ds
adc
shl
fistp
cmp
dec
dec
adc
xchg
xor
mov
test
or
mov
stos
pop
mov
inc
popa
xor
mov
cmp
jne
push
adc
pop
add
sub
sbb
sub
sbb
test
cmp
jb
jl
mov
adc
inc
dec
mov
mov
mov
nop
js
xor
aad
inc
or
pop
pusha
test
aas
sub
mov
stos
mov
ss
cmp
push
call
sub
dec
es
shr
push
pop
mov
mov
sub
pop
inc
sub
cmp
adc
fsub
aad
pushf
shl
or
inc
push
ror
xchg
cmp
inc
sub
loopne
bound
(bad)
daa
mov
push
xlat
fmul
test
xchg
xchg
push
jmp
adc
inc
adc
sbb
or
pop
or
fld
or
xchg
and
cmps
or
add
and
mov
mov
shr
dec
sub
or
jns
and
seta
push
mov
inc
pop
cmp
pusha
or
dec
add
or
mov
xor
inc
sub
and
shl
ficom
(bad)
xor
mov
adc
mov
inc
movs
cmp
pusha
das
mov
dec
push
dec
mov
fisttp
(bad)
leave
js
dec
pusha
and
shr
pop
rol
sbb
cmp
cmp
mov
stc
push
movq
jne
fnstsw
sub
mov
jle
push
jg
jnp
test
sbb
sub
push
push
mov
dec
ins
gs
adc
push
inc
xor
gs
mov
stos
ror
pop
sahf
mov
int3
or
imul
xor
inc
clc
xchg
mov
mov
push
cmps
xchg
cmps
enter
sbb
xor
adc
addr16
mov
add
and
sbb
cmc
cmp
add
cmc
aas
add
in
push
mov
or
inc
cmp
cmp
adc
mov
dec
add
sub
shr
jp
stos
ja
push
cmp
jns
cmps
call
aas
mov
dec
mov
ror
dec
ret
xor
leave
or
and
fisub
cmp
cmp
push
dec
lahf
call
aam
xchg
pushf
das
push
lds
push
jmp
cmp
test
aaa
cmp
mov
add
movs
pop
push
enter
pusha
and
jae
and
in
pop
stos
popa
imul
mov
inc
mov
fisttp
xor
pop
call
push
lahf
or
add
inc
fsub
inc
push
push
dec
push
inc
cmc
sbb
pop
add
jle
dec
pop
movs
mov
xor
ret
cwde
js
inc
mov
popa
arpl
jne
shr
mov
mov
stos
into
fucomp
cmp
xchg
push
push
add
mov
adc
test
stos
push
push
push
adc
retf
add
xchg
adc
mov
mov
and
sbb
scas
add
pop
adc
push
and
sub
in
sbb
retf
jns
ins
in
push
jno
adc
mov
jle
ins
sub
adc
push
cmp
jmp
inc
dec
sub
(bad)
jbe
adc
adc
cdq
sbb
cmp
mov
xchg
pop
les
push
adc
mov
dec
dec
ror
bound
cmp
and
add
js
ror
and
pop
mov
clc
(bad)
mov
or
mov
ficomp
lods
add
movs
or
cmp
xchg
xor
rcl
out
jmp
(bad)
or
arpl
adc
retf
sub
into
sahf
push
or
mov
retf
or
adc
fs
xchg
sbb
aas
rcr
xlat
and
adc
ret
daa
or
push
jmp
and
nop
add
add
jmp
push
test
xchg
test
fild
aam
and
push
push
xchg
sbb
test
and
jmp
push
xchg
test
sub
adc
and
dec
cmp
jne
push
mov
js
push
adc
inc
popa
sub
pop
pop
clc
inc
adc
adc
ficomp
mov
add
mov
mov
sar
loopne
jae
jb
shl
(bad)
sub
xchg
mov
add
cmp
mov
ret
gs
in
push
adc
neg
(bad)
push
add
mov
push
enter
int
out
lock
add
loopne
out
ds
shl
mov
xchg
xchg
push
shl
cmp
ret
mov
mov
sbb
xchg
mov
add
iret
cmps
stos
mov
fnstsw
jle
test
scas
pushf
mov
icebp
push
mov
pop
or
xchg
clc
add
xchg
mov
lods
add
xor
mov
or
pop
cmp
cmp
add
and
or
push
jp
dec
fadd
add
popa
xchg
mov
repz
inc
mov
inc
push
jmp
or
push
push
push
or
cdq
in
sub
dec
adc
pop
cmp
pop
add
xchg
mov
fstp
nop
and
dec
push
push
pop
fist
inc
mov
dec
clc
xchg
mov
xchg
mov
inc
push
xchg
mov
int
push
repz
dec
xlat
aaa
adc
or
lea
js
jns
jne
je
push
repnz
imul
jl
jne
jmp
jbe
mov
xchg
retf
mov
fmul
add
aaa
mov
adc
sub
loopne
jmp
add
pop
mov
aam
sub
bound
sbb
pop
fisubr
xor
mov
fild
mov
arpl
push
sbb
mov
lds
int
adc
pop
stos
retf
push
sbb
cmp
add
lods
push
mov
and
add
(bad)
shl
dec
mov
(bad)
je
cmp
push
scas
mov
test
jl
add
rcr
sub
jmp
lahf
js
and
(bad)
jle
mov
retf
jae
inc
xor
out
rcr
mov
inc
sub
dec
ja
mov
xchg
jno
and
push
out
leavew
(bad)
pop
or
push
arpl
mov
dec
pushf
add
adc
out
add
and
clc
mov
aaa
cdq
mov
inc
sbb
fst
jmp
fwait
mov
or
rcl
mov
shl
jp
loope
add
add
or
lods
sbb
call
lods
dec
push
adc
lock
loop
outs
nop
(bad)
push
sub
and
pop
pusha
mov
push
cmp
xor
icebp
adc
mov
mov
adc
test
xchg
inc
adc
loopne
popa
pop
or
in
push
pavgb
enter
shl
lods
sbb
add
push
push
cmova
test
pop
mov
add
mov
aas
push
stos
add
xlat
aas
je
xchg
push
stos
push
mov
ret
out
sub
push
movs
sub
add
fs
xor
lea
xchg
inc
mov
pop
enter
and
or
cmp
inc
push
sub
ret
xchg
sub
mov
or
sbb
mov
mov
xchg
adc
mov
loopne
mov
add
and
or
or
lea
test
ins
mov
call
cmp
dec
jge
inc
xlat
sbb
imul
and
and
or
rol
jb
popf
loop
mov
cmp
popa
pop
inc
pinsrw
sahf
cwde
ficomp
dec
push
add
add
test
push
xchg
scas
add
cmp
xchg
clc
xor
cmp
ret
cmp
jo
call
add
mov
push
dec
in
jne
sbb
pop
push
jl
sbb
and
dec
xor
(bad)
and
(bad)
jo
xchg
shr
fstp
pop
data16
ss
hlt
adc
or
rcr
aam
mov
mov
rol
push
cdq
pop
idiv
jo
cs
jne
mov
adc
retf
outs
mov
jmp
pop
add
mov
mov
inc
cdq
repnz
sub
in
shr
je
adc
mov
fmul
add
mov
jo
adc
sti
dec
jae
in
nop
adc
cmp
ins
pop
add
cmp
into
sbb
out
outs
and
shr
cdq
pop
idiv
sbb
pop
jmp
dec
movs
iret
push
shr
sbb
cmps
dec
jbe
adc
sbb
nop
pop
fisubr
xchg
or
sbb
mov
lods
adc
fild
dec
dec
push
inc
cli
jge
sbb
ret
enter
fadd
fstp
pop
fstp
mov
cmp
sbb
and
push
sub
sahf
sahf
jl
inc
dec
xchg
and
lahf
inc
nop
mov
fs
inc
rcr
test
movs
or
fadd
xchg
and
push
and
add
iret
pusha
add
fst
out
or
fdiv
or
ds
hlt
sbb
add
pop
mov
scas
sahf
cdq
pop
mov
call
fiadd
mov
cmp
hlt
sbb
(bad)
mov
scas
(bad)
movs
fimul
adc
loopne
mov
sbb
mov
jp
cmp
(bad)
cmp
mov
fs
mov
push
ins
aaa
icebp
cdq
jmp
sbb
movs
xchg
jle
les
or
loopne
sbb
push
ss
sbb
cmp
dec
cwde
inc
mov
inc
ins
iret
mov
sbb
div
cmp
(bad)
rcr
ret
scas
inc
pop
pop
aaa
add
loop
mov
add
cmp
add
test
js
fcmovnu
or
push
mov
out
or
lods
inc
aaa
aaa
gs
out
or
or
data16
add
jmp
jne
cmp
push
fild
lock
rol
cwde
pop
dec
test
pop
lods
mov
scas
arpl
jbe
int3
xchg
shr
fcmovu
mov
test
adc
imul
iret
adc
nop
sbb
mov
popa
daa
fst
clc
xor
loope
fsubrp
ret
push
das
imul
movhps
or
sub
xor
add
rol
and
cmp
push
fld
or
mov
cdq
and
je
push
clc
lock
mov
mov
(bad)
adc
or
add
dec
push
jo
push
xlat
popf
out
add
call
loopne
sbb
sahf
or
or
pusha
ror
add
loopne
ins
fs
add
add
test
lea
sub
adc
lock
ret
inc
cmps
call
mov
call
mov
fdiv
mov
pusha
cli
sbb
lock
xchg
mov
dec
ja
mov
or
clc
scas
ss
or
jle
adc
inc
add
push
jle
add
or
(bad)
dec
push
jb
cmp
arpl
and
cmp
mov
push
pop
clc
fld
and
sbb
add
fs
and
sub
lods
xchg
sbb
inc
cwde
dec
inc
lea
iret
or
xchg
cmc
mov
pushw
jo
xor
sahf
pusha
cmp
jl
cmp
sbb
add
cdq
or
push
mov
nop
push
dec
movs
xlat
jb
sub
dec
cdq
pusha
shl
dec
ret
je
shl
popa
pop
jno
sub
push
add
add
je
push
adc
aaa
pop
adc
test
cmp
pop
lods
ss
cmp
sbb
and
pop
mov
mov
and
xchg
sub
xor
adc
and
xor
jb
xor
xchg
cmp
push
mov
sbb
js
shl
mov
std
sub
pop
arpl
loope
fistp
adc
push
mov
ins
pop
mov
push
add
adc
mov
or
adc
push
push
mov
cmp
jl
mov
add
and
push
out
nop
sub
fmul
lock
cmp
jmp
mov
int
jl
test
add
dec
in
and
sub
xor
imul
xor
pop
stos
jne
cmp
enter
or
cmp
or
cmp
jge
clc
push
inc
add
dec
dec
(bad)
mov
popa
pop
lock
les
pop
repnz
sub
es
pop
mov
daa
scas
jl
idiv
xchg
or
sbb
cmp
cwde
inc
jge
pop
dec
or
lock
cmc
mov
scas
sub
aad
dec
and
pusha
in
pushf
test
nop
shl
mov
data16
push
adc
jnp
sub
mov
push
(bad)
and
ins
inc
push
in
jae
or
mov
shl
xchg
xchg
or
test
dec
and
pop
sub
(bad)
push
jae
pop
jb
in
enter
sbb
mov
mov
int3
pop
fcmovb
sbb
jne
xchg
fwait
ret
jmp
add
imul
jnp
cmp
movzx
or
dec
push
gs
ja
or
aas
mov
push
inc
or
pop
mov
lods
in
pop
mov
sbb
xchg
pop
loopne
ret
in
sub
add
mov
add
loop
mov
cwde
mov
adc
loope
retf
pop
xchg
btc
push
push
push
add
inc
cli
leave
and
enter
mov
mov
pop
enter
mov
xor
fs
dec
mov
dec
or
mov
add
sub
jo
and
inc
pop
inc
add
pop
xor
adc
cwde
cmp
sub
xchg
ror
nop
sub
arpl
inc
outs
imul
pop
mov
add
jo
inc
ss
repnz
test
unpckhps
addr16
fadd
mov
leave
movs
or
sbb
cld
add
xchg
sub
xor
mov
mov
sbb
or
mov
jno
push
(bad)
cmp
mov
es
sbb
mov
dec
cmp
pop
pop
rol
sbb
mov
int3
push
test
xchg
movs
sbb
and
sub
dec
cld
inc
push
xchg
mov
pop
or
call
je
dec
mov
cmps
dec
inc
gs
call
test
jl
adc
inc
int
(bad)
mov
xchg
sbb
adc
ror
add
push
fcomip
movs
out
cs
or
and
cmps
jge
cmp
js
jle
in
mov
je
mov
or
popf
xchg
rcr
movs
sahf
cld
sbb
fisubr
rcl
xor
mov
aam
add
pop
xchg
pushf
push
push
xchg
ins
pusha
pop
je
or
inc
mov
mov
dec
cwde
push
outs
fcomp
out
push
sbb
jne
cmp
in
clc
push
and
fdivr
push
bound
pop
dec
push
xor
mov
jl
mov
fnclex
ret
pop
mov
pop
push
fst
mov
jbe
lea
mov
jmp
sahf
in
sub
inc
shl
loop
sbb
das
movs
sub
fld
aaa
lods
push
lahf
push
sbb
xchg
push
fstcw
add
or
mov
daa
loope
inc
or
mov
mov
jo
(bad)
xchg
fld
add
icebp
dec
mov
jmp
xchg
mov
xlat
shl
or
xchg
imul
sub
aas
or
push
add
xor
rcl
jnp
lds
lock
pop
mov
push
push
and
push
sbb
fs
shl
cmp
adc
jo
inc
movs
dec
mov
push
dec
inc
ja
loopne
(bad)
fsave
xchg
push
sti
(bad)
cwde
pop
frstor
fld
adc
push
les
imul
and
fimul
xor
xchg
mov
in
pop
imul
xchg
mov
sub
int
cmp
imul
out
and
sar
sub
daa
xchg
mov
cdq
dec
or
leave
jmp
lods
pusha
cmp
rcr
fcomp
mov
dec
push
fmul
lods
jge
movzx
shr
fldenv
add
ret
ins
ret
jl
retf
dec
rcl
add
sub
inc
hlt
and
test
cmp
adc
bound
les
push
dec
push
pop
jge
(bad)
mov
fnstcw
jno
and
inc
xor
inc
pop
not
sbb
xchg
mov
add
and
mov
fwait
nop
xor
sti
test
add
inc
clc
imul
icebp
mov
mov
or
and
inc
jno
xlat
or
mov
sbb
sbb
movs
std
cdq
cs
aaa
fsub
in
xchg
fldenv
ss
jle
push
adc
shl
adc
fsubr
pop
push
cmp
jmp
popf
fcom
jg
fwait
sahf
jp
fstp
jg
mov
mov
inc
cmc
add
not
push
fdivr
into
repz
add
pop
sub
ja
call
and
pop
pop
pop
leave
xor
mov
mov
pop
loop
inc
mov
push
sub
push
cmps
add
push
repnz
pop
jmp
fwait
imul
mov
pop
xchg
push
fcomp
lahf
push
jg
sbb
jne
push
jge
inc
sub
scas
psrlq
sar
fwait
adc
imul
ret
adc
inc
lock
fimul
(bad)
jg
adc
enter
pop
js
mov
and
dec
nop
icebp
mov
dec
pop
je
sbb
aam
dec
and
jmp
adc
add
adc
and
int
add
fldcw
dec
xchg
retf
int
ret
cmovbe
nop
pop
and
repnz
sbb
jne
jle
adc
adc
sar
add
addr16
and
sub
aaa
mov
loope
sar
arpl
into
mov
push
je
push
loope
add
sbb
xor
mov
xor
cmp
xchg
ins
xor
inc
xchg
enter
iret
pop
repnz
out
adc
cmp
pop
jbe
mov
jne
arpl
imul
mov
inc
enter
cmp
aam
and
loope
loopne
jb
mov
aaa
sub
scas
cdq
mov
or
arpl
mov
clc
sbb
jmp
pop
aas
pop
pop
or
out
fisttp
push
mov
inc
test
cld
(bad)
mov
mov
pop
cmp
inc
pusha
std
and
sub
push
inc
pop
adc
fistp
mov
jae
sahf
cld
sbb
add
jno
fcom
cmc
cmp
cmp
or
cmp
fmul
mov
pop
pushf
mov
ds
adc
or
sbb
adc
cwde
xchg
loopne
and
lea
dec
out
sub
push
mov
lods
cwde
sti
jno
or
mov
test
div
adc
jo
xor
es
mov
fadd
(bad)
out
retf
dec
mov
sbb
shl
inc
lock
hlt
clc
shr
xor
mov
clc
cmp
ror
fadd
add
js
push
pop
cmp
adc
jmp
js
push
ins
xchg
int3
add
and
cmp
mov
xor
mov
xor
push
jo
test
dec
or
ficom
bound
adc
cmps
add
inc
jmp
and
es
clc
push
inc
sub
imul
or
sbb
jp
and
jl
lock
xchg
cs
scas
test
sbb
add
cmp
or
add
add
inc
or
dec
dec
push
xchg
mov
inc
mov
xchg
xor
inc
or
add
pop
out
or
and
dec
push
add
rol
pop
inc
dec
test
mov
mov
mov
add
ret
xor
loope
push
push
xor
mov
sti
pop
push
mov
cmp
cmp
mov
dec
cs
add
in
sbb
mov
cmp
adc
ret
pop
mov
pop
and
loop
push
or
or
sbb
add
aad
pop
and
mov
mov
pop
cmp
dec
arpl
sbb
test
or
movzx
sub
retf
icebp
fwait
add
adc
inc
and
sar
mov
(bad)
fld
add
push
xor
mov
test
test
int
inc
sub
inc
sub
jl
sub
pop
xor
xchg
cmp
add
or
repnz
jo
out
lea
popa
mov
iret
cmp
ret
jne
clc
cdq
loope
imul
push
or
dec
cs
loopne
xor
in
xor
sub
push
push
adc
and
test
sbb
pushf
push
push
loope
xlat
enter
out
ins
mov
rcl
xchg
jo
stos
add
ds
jmp
adc
ror
push
or
jae
test
inc
shl
enter
rsqrtps
push
mul
or
lods
xchg
jp
out
cmp
jle
adc
ins
(bad)
cli
loope
rcr
sar
mov
add
add
scas
mov
push
cmp
sbb
and
mov
pop
lods
outs
out
test
xchg
rol
add
ins
ret
push
push
gs
pop
add
xchg
icebp
mov
sbb
push
ret
inc
dec
adc
dec
inc
retf
push
lock
mov
mov
lods
push
fcom
mov
mov
sub
or
jmp
dec
mov
pop
add
movs
or
mov
cmp
cmpxchg
jbe
hlt
lea
clc
xor
mov
fwait
xor
xor
dec
je
xchg
xchg
add
cmp
int
rcl
fs
mov
mov
sbb
xchg
sbb
cld
jmp
mov
test
or
mov
clc
mov
movzx
mov
push
idiv
mov
outs
ss
hlt
test
je
cmp
imul
popa
hlt
mov
pop
and
dec
xor
jnp
inc
pop
or
sub
jl
jmp
or
mov
repnz
or
add
and
ret
jo
pop
jecxz
in
add
and
and
sub
add
pop
sbb
add
ds
and
sbb
lods
nop
and
pushf
dec
and
cs
add
mov
push
jl
std
sahf
ins
and
shr
inc
push
xor
adc
clc
cmp
shr
rcr
or
sbb
lock
mov
movs
out
shl
cmp
jbe
aas
ror
xchg
push
jbe
dec
or
dec
enter
dec
fsub
sbb
inc
or
sub
jmp
dec
and
jge
or
ss
pop
rol
sahf
sbb
pop
pop
test
ret
jns
jmp
cwde
loopne
push
cmp
or
xor
aad
enter
pop
adc
f2xm1
mov
push
jbe
sub
adc
push
or
sbb
jnp
call
fnstsw
jno
push
shl
or
enter
cmp
fldl2e
test
pusha
mov
stc
retf
movs
add
dec
push
(bad)
or
sub
jmp
fwait
dec
add
cs
dec
out
push
fidiv
push
ins
add
sub
push
or
stos
ds
xchg
retf
or
lods
adc
mov
int3
lea
dec
movs
imul
jbe
inc
inc
inc
inc
jg
cmp
repz
or
push
mov
movs
pushf
lods
mov
jg
mov
sbb
out
call
sahf
out
sahf
lock
hlt
clc
clc
cld
dec
push
es
lea
xor
jmp
lock
cld
loopne
xchg
clc
adc
or
cmp
repz
cmp
sbb
lea
xchg
sbb
jl
cld
jmp
or
out
jo
neg
adc
and
enter
pop
stc
sub
push
pop
nop
mov
test
sar
xchg
mov
dec
mov
lods
adc
xchg
aas
inc
fisub
out
add
nop
dec
shl
fcom
ret
pop
mov
mov
jns
fwait
and
sub
xor
inc
jns
jl
dec
push
addr16
das
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
aas
or
push
movs
loop
push
cwde
lods
push
das
push
add
lds
add
pop
cmp
push
or
cmp
jg
(bad)
mov
adc
(bad)
mov
xchg
inc
repnz
(bad)
ins
mov
add
push
je
sub
inc
push
sub
aam
xlat
(bad)
fucomip
push
push
sub
and
mov
pop
fild
pop
or
push
inc
jmp
add
mov
xchg
ja
jb
sar
mov
les
or
aaa
mov
mov
mov
dec
mov
jmp
ret
cmp
jae
(bad)
idiv
outs
or
jae
shrd
shr
ret
fld
jg
js
stc
xor
mov
add
arpl
lea
imul
pop
inc
fwait
mov
inc
or
outs
fucomip
inc
outs
pop
push
(bad)
sub
jae
pop
xchg
loope
shl
lock
push
push
xchg
pop
clc
pop
movs
push
mov
cmp
dec
jne
test
imul
mov
mov
call
sub
jo
mov
jmp
out
sub
pop
pop
add
sbb
je
cmp
ret
(bad)
neg
into
mov
jo
lock
sub
xor
inc
pop
adc
int3
dec
push
sahf
add
mov
dec
fincstp
je
test
fcmovnbe
(bad)
xchg
jne
jmp
clc
inc
dec
inc
dec
les
sub
jne
pop
cmp
xchg
ins
mov
je
inc
cmp
dec
mov
adc
jae
pop
xchg
fdiv
adc
imul
xchg
out
jne
xor
(bad)
cmps
sub
rol
push
xchg
inc
inc
fxch
cmp
rcr
add
test
push
inc
mov
mov
push
mov
ins
jb
sbb
adc
jp
bound
xchg
cmps
retf
mov
or
rol
jne
inc
inc
pop
enter
sbb
adc
clc
lods
mov
push
xor
sbb
xor
sbb
leave
push
movs
mov
push
add
imul
push
arpl
pop
inc
fsub
ret
jecxz
pop
adc
or
and
loopne
fsubr
sbb
movs
int3
fmul
sbb
add
shl
xor
push
clc
stos
dec
xor
xor
bound
add
lock
pop
xchg
ja
ja
and
xor
inc
in
inc
cmp
adc
(bad)
xor
in
dec
mov
xor
inc
pusha
cmp
sbb
xor
cdq
call
inc
pop
mov
mov
pusha
inc
cmp
push
xchg
inc
pop
jge
lock
ror
out
inc
mov
jle
adc
mov
push
add
xor
jp
ret
loopne
add
jne
push
jmp
sub
mov
pop
add
and
push
jae
and
xor
jne
and
push
movs
clc
mov
and
(bad)
pop
cli
mov
xor
dec
ja
ret
or
mov
xor
add
js
aas
xchg
addr16
dec
pop
mov
pusha
sbb
and
xor
mov
js
ss
pop
jmp
dec
stos
idiv
mov
xchg
ins
sti
arpl
rol
cmp
adc
inc
or
ins
dec
pusha
mov
xor
mov
xor
in
imul
into
and
cli
push
cmp
add
or
push
push
cmp
xlat
inc
das
push
iret
outs
dec
mov
sbb
inc
mov
clc
rcr
inc
fisttp
ret
clc
scas
push
inc
sbb
int
inc
mov
sbb
loope
mov
gs
js
fwait
retfw
xchg
sub
pop
mov
ret
stos
push
bnd
jae
push
cmp
pop
(bad)
mov
imul
mov
cmp
jno
je
pop
fwait
push
inc
out
out
scas
dec
dec
ins
xadd
sbb
or
mov
and
leave
mov
xor
aam
jno
or
and
(bad)
xchg
and
loopne
mov
or
lea
gs
test
mov
dec
cli
sbb
inc
cmp
je
or
clc
lods
cmp
and
in
ret
mov
push
pop
push
adc
fiadd
(bad)
stc
xor
jle
pusha
mov
iret
xor
mov
loope
jne
and
or
out
rol
movs
pop
(bad)
sar
cld
cmp
je
sahf
inc
clc
scas
xchg
cmp
je
test
je
sbb
adc
fadd
aam
xchg
pop
arpl
(bad)
outs
or
cld
clc
mov
pop
ins
into
jne
push
clc
popa
jl
mov
push
sub
xchg
cdq
outs
loopne
mov
mov
sub
cmp
test
adc
sub
sub
sbb
add
hlt
mov
jo
or
js
ss
fimul
aaa
test
loopne
mov
inc
cmp
daa
inc
lock
adc
sub
ja
pop
xor
nop
push
lods
jmp
jg
clc
test
inc
dec
add
add
loopne
pop
or
sub
cmps
dec
leave
mov
or
stos
push
dec
and
and
or
shl
std
int3
mov
cs
in
mov
add
mov
call
add
sbb
or
loope
out
or
cmc
cdq
mov
and
jne
sub
popa
add
and
loope
bound
loopne
mov
bound
mov
jl
push
inc
shl
fucomip
mov
push
mov
mov
push
jmp
call
jo
dec
dec
pushf
push
push
sbb
pop
cmp
sub
clc
std
cmp
jmp
pusha
cmp
je
cmp
ja
loopne
or
push
pop
movs
mov
mov
cmp
dec
cmp
lods
lods
ret
cs
mov
sbb
pop
test
loope
hlt
inc
lock
and
and
push
or
inc
neg
dec
mov
outs
adc
pop
je
(bad)
cld
pusha
lock
cmp
scas
xor
push
dec
dec
push
sub
je
int3
ret
test
push
and
and
mov
xor
mov
test
add
les
xchg
mov
inc
in
pop
or
dec
or
add
adc
or
push
add
sub
dec
rcl
mov
push
mov
dec
ins
clc
loopne
pop
rep
in
mov
retf
iret
pop
lock
test
jecxz
inc
add
clc
add
in
push
xchg
push
mov
mov
lods
push
add
xor
shl
push
mov
test
pop
fwait
mov
inc
jmp
mov
inc
adc
inc
push
dec
pop
rcr
out
mov
dec
shl
and
inc
xchg
jo
and
call
ret
aad
jmp
sbb
cmp
in
sub
fldcw
in
xlat
sub
dec
je
jecxz
inc
sub
mov
mov
fisttp
jmp
ds
jne
and
jmp
add
sub
adc
mov
or
je
dec
cld
push
and
jmp
sbb
jns
add
adc
mov
enter
cld
hlt
or
mov
std
xchg
adc
mov
mov
cmp
jle
mov
or
jne
xchg
sub
and
dec
cmp
cmp
or
inc
inc
push
dec
jne
jns
aam
adc
and
scas
inc
cmps
and
inc
lea
sbb
add
jmp
sub
dec
ror
cmp
sbb
aaa
aam
dec
or
rcl
int
test
cmp
and
push
call
fsubp
xor
dec
fsubr
push
and
loope
aas
repnz
add
mov
cmp
jle
mov
jmp
stc
sbb
adc
adc
push
ss
pop
push
inc
clc
jecxz
fs
je
dec
push
cli
outs
adc
adc
jbe
out
shl
jge
dec
jmp
inc
das
test
data16
dec
test
enter
mov
jne
or
adc
add
mov
add
icebp
push
adc
stc
and
sbb
inc
cdq
jmp
add
out
or
fs
cli
fld
data16
mov
ja
pop
ja
jl
or
push
shl
ret
push
dec
push
add
mov
adc
loope
and
sub
mov
das
clc
mov
inc
pusha
push
dec
and
adc
dec
(bad)
add
jmp
jecxz
cwde
mov
sbb
imul
add
je
cs
and
xor
add
sbb
lock
or
fistp
(bad)
pop
add
or
cmp
adc
jae
mov
test
ret
jo
mov
and
add
lods
inc
jbe
mov
sbb
pop
add
adc
fs
mul
neg
mov
adc
cmp
xchg
rol
and
ins
js
push
xchg
xchg
xor
test
sub
pushf
jbe
sbb
or
and
pop
pushf
loopne
or
iret
ret
fnstcw
xor
gs
jne
cmps
pop
or
repnz
pop
nop
pusha
xor
lds
inc
and
mov
or
test
test
mov
aam
aas
and
push
ja
(bad)
mov
mov
or
sahf
adc
je
jmp
dec
or
test
jecxz
pop
pop
push
rol
imul
and
ror
or
cmp
jno
mov
ins
mov
inc
das
imul
or
push
xor
pop
add
shl
pop
pavgb
fisubr
push
int3
cwde
mov
inc
jmp
sub
and
mov
idiv
jge
add
clc
cmp
mov
cmps
xchg
inc
cmp
jl
enter
adc
jmp
ja
cmp
xchg
gs
and
scas
sbb
adc
jp
or
jge
jl
adc
push
sub
jmp
retf
push
xor
idiv
int
or
fiadd
mov
adc
fnsave
sub
and
sbb
jle
jb
int3
lea
(bad)
pop
mov
jge
sub
stos
add
push
loop
sub
cmp
sub
dec
adc
cs
or
and
sub
bound
xlat
jg
(bad)
xlat
js
lods
aaa
sub
fsubr
jnp
in
sbb
iret
out
sub
repnz
push
in
add
into
dec
mov
xchg
test
pop
xchg
and
movs
or
inc
and
push
mov
and
sub
inc
or
sbb
mov
sub
leave
inc
and
pop
adc
xor
cmp
ja
js
jge
add
(bad)
mov
std
(bad)
mov
cmp
xchg
xchg
in
cmp
test
ficom
push
xchg
loopne
out
jl
push
mov
je
inc
jmp
xchg
add
inc
jae
push
mov
jo
push
push
add
add
jne
push
je
jmp
push
push
bound
xor
jl
inc
jmp
mov
adc
mov
enter
push
rol
add
xchg
hlt
inc
rcr
in
push
push
cmp
jmp
xchg
and
loopne
arpl
inc
jl
in
pop
cli
sbb
jge
sahf
in
sbb
add
or
movzx
stos
or
inc
mov
lods
loopne
mov
sbb
add
hlt
mov
scas
std
retf
xor
pop
xchg
mov
leave
push
adc
(bad)
fs
inc
je
and
pop
call
sub
or
outs
js
test
ffree
ret
cmps
push
jb
cmp
push
and
cs
ror
retf
icebp
mov
repnz
jmp
pop
jp
add
pop
jmp
ja
push
daa
mov
fnstsw
fcomp
cli
je
loope
cld
dec
(bad)
cmp
add
sahf
jne
jmp
push
xchg
sub
cmp
jne
ds
push
inc
and
pushf
or
adc
lods
and
inc
adc
push
fnsave
lea
or
lods
xchg
mov
dec
cmp
add
ret
and
pusha
pop
nop
push
mov
dec
jo
jmp
test
jne
inc
pop
loope
(bad)
jbe
shl
or
push
add
push
lods
pop
aam
xchg
inc
push
shr
dec
out
mov
add
and
enter
scas
push
push
movs
cmp
jmp
cdq
sub
ret
test
inc
int3
movs
test
sbb
xchg
pop
and
mov
xchg
fldenv
cmp
push
(bad)
jmp
mov
inc
mov
jne
shl
pop
jecxz
nop
ror
fwait
mov
sbb
daa
outs
push
or
mov
in
and
jb
add
push
xor
push
sahf
xchg
retf
imul
add
fs
push
shl
push
cmps
xor
push
push
and
push
imul
inc
ins
imul
repz
or
or
ins
ins
imul
inc
call
xor
ins
ins
ins
ins
ins
or
and
cwde
aam
sbb
test
cli
dec
jp
push
adc
data16
sub
sar
dec
mov
add
ret
or
fbstp
ret
pop
sub
movs
ja
jbe
mov
ret
push
scas
(bad)
xchg
adc
sbb
mov
sbb
shl
je
jmp
and
jp
sbb
jmp
idiv
and
movs
jl
sbb
cs
sbb
sbb
sub
mov
stos
cmp
pop
lods
sub
nop
hlt
pop
sar
mov
sbb
pop
je
loopne
sbb
jne
mov
push
or
scas
or
pop
dec
cld
xchg
je
adc
inc
push
jb
into
dec
mov
jge
pop
lock
mov
jmp
inc
dec
add
pusha
or
dec
sbb
or
push
out
push
int3
les
test
inc
js
xchg
retf
adc
dec
cmp
push
and
xor
adc
push
imul
mov
test
jbe
data16
or
jg
(bad)
stos
mov
cwde
inc
jl
popa
inc
xor
test
(bad)
pop
jl
leave
ret
fwait
jo
mov
xor
push
in
ror
mov
iret
not
outs
outs
ret
inc
(bad)
push
sub
dec
or
push
xor
add
cld
push
dec
adc
cmc
and
sbb
and
pop
cmp
cmc
dec
out
pop
pop
push
push
mov
sbb
add
mov
hlt
lods
lock
pop
add
jo
hlt
xor
clc
and
cdq
mov
cdq
push
push
push
outs
push
sbb
ret
cmp
push
xor
dec
adc
sub
je
sbb
mov
push
fs
dec
and
sar
dec
ror
ficomp
fchs
mov
pop
sbb
je
mov
or
in
ins
adc
inc
or
and
sub
int3
dec
and
adc
xor
rcl
loopne
es
test
dec
test
call
push
cs
and
mov
adc
js
push
dec
test
or
inc
lea
jp
dec
es
sbb
adc
jp
into
dec
or
and
jnp
jmp
retf
or
scas
sbb
mov
cld
or
push
sub
mov
call
cmp
xchg
mov
out
pushf
ficomp
add
arpl
dec
jmp
xor
test
pop
cmp
jge
sub
add
dec
hlt
push
daa
jo
ret
and
ds
repnz
pop
sub
jb
inc
pop
inc
retf
cmc
push
inc
cmps
inc
mov
ins
(bad)
push
addr16
ins
fnstenv
ficomp
mov
cmp
sbb
add
or
dec
dec
es
idiv
add
fidivr
add
or
ins
cmps
inc
push
stc
pop
inc
or
out
loope
add
sub
pop
cs
pop
pop
cmps
push
pop
pop
sub
fisubr
rcr
sbb
add
sub
sbb
jge
inc
xchg
add
js
inc
jle
stos
or
jg
pushf
dec
adc
das
dec
sbb
add
or
loopne
sar
jmp
adc
push
add
mov
(bad)
mov
and
jl
push
dec
or
movs
sti
jl
push
jbe
jecxz
retf
mov
xor
add
xchg
cmp
xchg
(bad)
xor
ss
cmp
mov
rcl
je
mov
leave
jmp
inc
and
push
cmp
dec
sub
sub
int3
xor
dec
mov
and
xchg
sbb
test
pop
je
or
mov
call
and
add
xchg
adc
popa
mov
nop
jae
loope
or
mov
aam
dec
rcr
jmp
sbb
pop
lods
mov
push
sbb
fs
test
xchg
add
fld
xor
jp
mov
gs
rol
push
cmp
push
pop
add
jns
or
jmp
or
cmps
jmp
xchg
add
push
call
scas
adc
pop
sbb
jmp
sub
nop
adc
bound
mov
sti
iret
dec
push
inc
mov
and
adc
mov
jbe
push
or
loopne
or
addr16
push
and
sbb
or
push
movzx
call
pusha
sar
adc
or
add
mov
xchg
push
mov
push
jle
dec
pop
xchg
icebp
mov
push
inc
cmps
mov
xchg
test
scas
cld
aam
sub
iret
ret
pusha
mov
xor
int3
jmp
cmp
push
lods
or
arpl
jo
sub
add
mov
ins
adc
lds
push
and
push
and
aaa
or
repz
or
inc
js
or
cmp
and
add
pusha
mov
jne
aas
add
mov
xlat
and
inc
mov
jne
mov
adc
or
sub
movsx
shl
or
mov
es
fisub
(bad)
push
dec
mov
add
add
jmp
push
sbb
clc
fidivr
hlt
jb
cmp
popa
rcl
xchg
jae
push
cmp
mov
sbb
daa
sub
mov
ds
add
sbb
push
cmps
mov
pop
pop
inc
aaa
test
add
pop
add
dec
test
mov
popa
mov
jne
loop
add
clc
push
ja
sbb
cmp
fstp
xchg
jbe
sub
add
adc
mov
sub
or
cmc
mov
mov
lock
push
add
xor
mov
mov
add
fwait
sti
jecxz
inc
pusha
pop
mul
add
je
aas
movs
xor
call
mov
cld
adc
ss
out
or
xchg
cli
movs
jbe
dec
adc
daa
sub
jge
or
adc
enter
sbb
rol
lods
mov
test
inc
cli
imul
push
bound
test
and
inc
std
lea
jl
call
mov
sbb
or
stos
or
sub
adc
and
mov
sbb
pop
jmp
mov
loope
xchg
shl
rol
into
imul
(bad)
or
add
sub
nop
stos
pushf
ins
(bad)
push
inc
test
test
push
mov
lods
sar
xchg
sar
or
xchg
gs
mov
jmp
movs
hlt
out
ss
or
shl
cld
cmp
push
dec
jp
jo
inc
push
daa
popa
dec
jo
cs
mov
adc
std
jae
test
fcomp
sbb
add
mov
mov
xchg
leave
mov
sbb
inc
cmp
cwde
inc
(bad)
push
cmp
(bad)
and
pop
jo
sbb
mov
and
or
call
fimul
stos
jge
add
bnd
mov
test
ins
mov
inc
cli
xchg
xchg
jmp
imul
(bad)
sahf
ds
popa
cmp
mov
je
sbb
dec
xchg
or
push
outs
xchg
retf
mov
or
xor
es
inc
inc
sbb
sub
and
push
jl
jb
das
mov
and
mov
dec
and
lea
test
sbb
or
mov
jns
add
pop
gs
inc
or
sbb
popa
push
push
push
jno
call
and
push
jo
stos
add
sbb
test
dec
sbb
ror
cmp
ins
sysenter
xchg
shl
mov
test
pop
push
adc
fiadd
daa
push
push
push
jmp
pop
fistp
adc
cld
jne
mov
call
jmp
push
add
icebp
sub
mov
aam
adc
or
add
jecxz
add
mov
jne
(bad)
pop
mov
cmp
ret
inc
add
mov
test
movs
out
pop
push
hlt
mov
mov
aas
or
push
repz
sub
leave
xchg
jle
sbb
sahf
mov
adc
fld
inc
mov
xchg
mov
(bad)
cmps
jge
inc
rcl
lea
dec
sbb
cmp
inc
std
cmp
push
movs
in
cmps
jecxz
cld
pop
mov
sub
mov
in
mov
cmp
(bad)
push
pop
adc
nop
lahf
xor
pop
sbb
add
mov
jecxz
jo
fadd
add
adc
sub
or
xchg
enter
sti
xchg
mov
div
cmp
and
loopne
xchg
nop
xor
sar
cmp
pop
xchg
std
push
imul
clc
and
push
sub
push
jno
test
inc
pusha
inc
icebp
pop
ss
sbb
and
add
lods
adc
retf
test
mov
jle
and
bound
xor
sub
mov
inc
bound
or
and
sbb
mov
cmp
outs
rol
cmp
inc
cmp
sbb
loop
and
or
adc
push
push
inc
jl
xchg
popa
push
sbb
and
cmp
xchg
sub
cmp
cmps
jb
nop
pop
sub
mov
pop
(bad)
or
loopne
shl
pop
pop
jmp
rcl
xchg
or
lock
push
dec
jmp
inc
int3
ret
ins
sbb
or
lods
jno
mov
imul
push
mov
sub
add
movs
fimul
cmp
jne
daa
ficomp
sbb
adc
xchg
xor
xchg
int3
shr
sbb
in
lods
or
push
lahf
pop
sbb
out
and
fnstsw
pop
dec
ds
or
jbe
inc
sbb
ja
inc
sub
sahf
push
fs
adc
cmps
mov
mov
and
in
mov
xor
dec
cmp
inc
fcomp
cmp
repnz
fst
call
das
das
and
adc
daa
loope
xchg
cmp
cmp
je
push
push
xchg
test
sbb
cmp
and
cmp
pop
push
pop
sub
ins
xor
add
outs
jne
pop
dec
imul
push
lock
mov
jnp
adc
push
pop
inc
adc
cmp
inc
sbb
mov
xchg
test
push
aas
jb
mov
push
mov
mov
inc
sbb
stos
addr16
pop
dec
dec
xchg
imul
das
pop
repnz
mov
callw
cmp
fs
fs
adc
movs
and
add
pop
dec
and
ss
aaa
mov
inc
test
inc
add
cmp
sub
rcr
je
out
mov
push
rol
pop
imul
aad
into
sbb
inc
xor
or
(bad)
and
push
cmp
or
adc
jne
or
add
xchg
call
push
jmp
(bad)
jne
adc
push
add
das
or
add
mov
push
jmp
(bad)
mov
cmove
inc
inc
jmp
and
inc
add
adc
fimul
cmp
push
xchg
xor
shl
sbb
or
jmp
loopne
push
imul
inc
add
dec
dec
sbb
adc
mov
push
sbb
xlat
xor
push
aas
aaa
jno
jbe
add
jae
popa
mov
sbb
daa
sbb
push
xchg
hlt
add
(bad)
xchg
mov
jecxz
mov
or
xor
push
jle
aad
pop
retf
xchg
test
outs
push
sub
dec
fld
mul
test
jg
aas
adc
cmp
out
in
add
pushf
aad
xchg
add
or
sub
movs
test
sar
sbb
add
lods
mov
mov
fld
cmp
and
mov
rcl
test
leave
clc
ror
ret
jmp
push
dec
dec
(bad)
pusha
and
arpl
mov
fisubr
xchg
inc
cmp
sti
or
sub
inc
sbb
test
or
adc
(bad)
pop
(bad)
sub
push
and
jmp
gs
mov
popa
jns
push
xor
xor
pusha
adc
push
add
icebp
ret
loope
ficom
xor
icebp
movs
sbb
or
dec
mul
mov
(bad)
ror
xor
xor
adc
gs
add
mov
mov
iret
jge
mov
add
or
add
iret
aas
fsub
lea
and
js
add
inc
in
and
rol
cmp
loopne
fwait
jl
jp
rcl
outs
adc
pop
add
pop
or
mov
clc
or
addr16
xor
fxch
push
or
pop
push
scas
push
add
mov
or
add
or
rol
mov
or
inc
fild
jne
add
sbb
nop
push
pop
mov
push
inc
push
ret
aas
test
js
ret
adc
loope
push
xor
daa
ds
push
or
out
cmp
or
or
mov
xchg
call
pop
js
push
mov
(bad)
adc
mov
mov
and
mov
das
sub
ins
dec
test
fisubr
xor
ficomp
cmp
pusha
cmps
pop
scas
rcl
call
or
js
cmp
adc
or
jbe
fldenv
adc
aam
mov
and
xor
push
es
int
add
mov
add
cmp
sub
inc
ror
inc
sbb
cmp
bound
mov
inc
les
maskmovq
test
cld
mov
sbb
clc
imul
sbb
push
in
push
aad
nop
lock
jne
jp
rcl
dec
xchg
inc
cmp
popa
jl
cmp
jg
mov
cwde
shr
cmp
jne
sub
jecxz
push
jl
dec
sub
in
ins
or
jmp
push
fs
adc
mov
cwde
jne
jbe
stos
xor
adc
pop
ffreep
sub
std
mov
mov
or
cmp
into
mov
jmp
repnz
mov
fidiv
je
nop
fdivrp
cmp
cmp
jmp
cld
push
pop
fisub
test
pop
cs
lock
xchg
je
arpl
int3
or
jmp
shl
std
mov
mov
hlt
jl
(bad)
or
inc
xor
pop
inc
xor
push
inc
dec
push
xchg
push
loopne
ins
ret
test
scas
sub
add
jae
lahf
rcr
fs
or
jl
retf
outs
jnp
sbb
call
pop
sub
outs
pop
xor
dec
push
mov
fwait
mov
ins
push
fidiv
(bad)
clc
ja
push
xor
xor
jmp
xor
dec
dec
out
fsubr
adc
pop
sub
and
sub
cmp
push
sbb
or
and
push
xor
pop
cmp
cmp
jno
dec
sbb
sbb
mov
call
test
retf
ficom
push
push
pusha
cmp
je
popf
mov
add
loopne
mov
inc
or
xchg
xor
or
(bad)
call
inc
test
inc
xchg
add
mov
pusha
mov
add
ins
and
inc
mov
jbe
xor
push
cmp
sub
push
mov
cmp
ins
xor
je
adc
sbb
pop
and
cld
cmp
jl
pop
cld
push
dec
outs
inc
loopne
adc
xor
les
jmp
jbe
sbb
cli
ss
imul
xchg
push
or
jbe
xchg
and
stos
or
dec
lock
fadd
rcl
push
cmp
inc
ins
add
add
sbb
(bad)
iret
sub
movs
add
sahf
mov
mov
xor
jo
ss
mov
pop
loopne
mov
imul
sbb
mov
je
ss
popa
xor
add
mov
enter
fcom
test
push
push
or
add
and
repz
aas
leave
aam
or
retf
inc
or
shr
fild
xor
or
(bad)
pop
(bad)
(bad)
in
sub
cmp
je
cmp
xchg
xchg
jmp
mov
fld
aam
icebp
mov
cmp
sar
into
pop
and
sbb
cmc
in
adc
idiv
adc
pop
fisttp
ret
cmp
adc
sub
adc
add
loope
neg
add
(bad)
xlat
add
sub
add
es
mov
mov
push
sbb
aaa
or
jg
cmp
adc
sbb
fdiv
pushf
jle
mov
xor
or
push
out
mov
mov
jle
sub
or
rcr
sbb
mov
call
add
push
mov
ins
inc
retf
cld
and
or
mov
add
inc
mov
sub
(bad)
pop
add
jns
neg
es
adc
add
aaa
add
adc
fisubr
mov
add
add
inc
inc
hlt
out
lods
mov
cld
push
xor
xchg
aaa
sub
mov
jecxz
les
in
fist
cld
les
adc
sub
pop
or
js
mov
mov
dec
pop
mov
and
sti
add
mul
ss
mov
adc
or
pop
xor
jmp
push
ret
jle
mov
jle
das
mov
movs
pop
sub
add
mov
pop
sar
add
fsubrp
pop
push
cmp
jl
dec
cld
mov
into
xor
push
push
mov
int3
or
test
inc
push
sbb
push
popa
mov
movs
add
add
dec
adc
sub
jl
sub
and
or
adc
jmp
stc
and
inc
add
and
fst
push
rcr
jge
pusha
inc
loopne
pop
xor
bound
data16
jo
test
jg
js
cwde
cdq
adc
add
mov
jle
aam
or
or
add
pop
fist
not
mov
or
stc
(bad)
(bad)
in
(bad)
dec
in
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
push
sub
sbb
shl
xchg
xor
(bad)
jl
aad
add
ret
xchg
std
cmp
clc
test
jle
rcr
not
mov
inc
jmp
cmp
test
in
add
sbb
fldln2
inc
in
fnstsw
loopne
loope
jne
es
inc
popa
or
sar
push
pop
in
xor
out
mov
mov
mov
push
fldz
test
xchg
ss
xchg
in
in
jmp
test
add
add
mov
add
or
adc
add
scas
daa
add
shr
push
fcompp
mov
ins
imul
inc
in
jbe
(bad)
xchg
(bad)
lock
jmp
xchg
jp
(bad)
cwde
adc
mov
loope
jno
mov
fsqrt
xor
sub
or
pop
mov
or
shr
and
sub
cli
and
sbb
adc
add
shl
add
or
(bad)
aas
jmp
mov
jbe
arpl
pusha
xlat
sub
in
xchg
jp
pusha
xchg
lea
cld
add
sar
sar
movsx
sub
add
pop
aad
dec
sar
int
ss
push
iret
or
and
jmp
sar
rol
mov
mov
or
in
adc
push
ror
pop
call
add
ret
adc
imul
fistp
call
test
lods
or
icebp
cmp
clc
inc
je
aad
pop
add
add
jnp
leave
pop
or
pusha
cmps
dec
cmp
pushf
test
sub
jb
fnstenv
jmp
jne
dec
popf
outs
loopne
sbb
fsubr
(bad)
or
add
or
add
adc
adc
jle
in
das
ins
jmp
adc
scas
imul
mov
mov
pop
ins
xchg
test
adc
mov
repnz
or
ret
and
hlt
or
add
dec
in
push
fldcw
xchg
or
adc
into
pop
fs
jnp
adc
pop
in
xlat
lds
and
or
bound
sbb
or
movs
inc
sub
adc
pop
xchg
fld
or
popf
add
fidiv
and
pop
sbb
inc
fbld
loop
cmp
ret
xor
adc
jp
ret
inc
dec
push
gs
push
cmp
jmp
daa
je
xchg
arpl
sub
dec
mov
sbb
mov
loope
fld
dec
daa
push
push
ja
sbb
inc
fidiv
or
and
mov
sbb
in
jbe
add
add
mov
movs
mov
push
(bad)
mov
pop
mov
adc
xor
push
adc
ror
push
mov
loopne
add
jb
dec
jo
aas
test
fnsave
mov
dec
jo
or
adc
jb
sbb
xor
movs
shl
adc
push
jae
loopne
int
loopne
gs
adc
add
dec
push
pop
xor
fisttp
test
shl
pop
cmp
cmps
cmp
mov
adc
ret
dec
inc
xor
fidivr
shl
mov
jne
and
jnp
mov
fisub
sub
push
sbb
(bad)
mov
add
add
leave
dec
xchg
loope
sbb
cmp
add
outs
fimul
sbb
push
movs
lea
pop
iret
out
or
and
(bad)
adc
or
mov
sbb
out
xchg
into
mov
and
gs
push
loop
loope
sti
and
test
add
mov
cmp
sub
sbb
dec
jo
add
cmp
sar
mov
or
adc
mul
adc
adc
or
or
pop
adc
xor
pop
adc
or
and
cdq
cmp
and
test
inc
xchg
and
push
imul
outs
cmps
and
mov
push
or
loopne
test
loop
stos
(bad)
pop
sub
fld
loope
imul
sub
fs
sub
cs
lock
add
das
push
call
adc
retf
out
jg
pop
jns
test
add
hlt
push
adc
jns
test
or
push
jmp
imul
mov
dec
and
or
mov
or
push
mov
push
iret
out
pop
nop
test
mov
jmp
and
fisttp
push
add
jp
and
jecxz
mov
arpl
or
jmp
sbb
xor
ja
mov
sbb
or
js
jle
pop
movs
or
icebp
dec
and
jecxz
xchg
cmp
push
xchg
dec
add
cmp
push
push
mov
inc
and
pop
cmp
push
inc
xchg
leave
fcom
pushf
mov
inc
mov
imul
adc
into
push
es
jns
dec
in
or
add
add
pop
lock
out
test
fisttp
repz
fld
loope
jmp
add
dec
mov
dec
add
sahf
push
and
or
shl
adc
or
push
test
push
enter
popw
adc
push
sub
stos
in
outs
ins
push
and
inc
dec
pop
adc
neg
cmp
pop
das
jno
push
scas
adc
and
pop
bound
je
test
je
jae
pop
sub
jmp
neg
or
push
adc
mov
xor
clc
sti
adc
and
or
mov
mov
pop
jl
dec
cmp
dec
adc
sub
nop
add
loopne
iret
fld
lahf
mov
dec
js
fcomi
fisttp
outs
aas
stos
or
xchg
sbb
pop
dec
inc
js
or
sar
(bad)
test
into
dec
iret
adc
adc
sti
adc
nop
xchg
inc
test
imul
(bad)
and
xor
imul
cli
dec
xor
push
scas
ins
add
or
mov
pop
call
test
ror
inc
jg
mov
or
mov
adc
pop
sub
test
retf
fs
jp
repz
call
dec
add
clc
push
or
push
ins
adc
inc
sbb
pop
pop
add
push
pop
pop
je
imul
adc
or
and
push
call
mov
loop
imul
sub
test
in
clc
or
jno
jmp
sbb
and
popf
and
or
pop
cmp
ror
cmp
push
xchg
fistp
push
mov
xor
and
inc
pop
pop
xor
sbb
pop
add
mov
dec
mov
sbb
mov
mov
imul
xlat
sbb
pusha
mov
jmp
popa
mov
add
imul
push
test
arpl
or
pop
inc
clc
imul
rcl
push
push
sahf
add
inc
test
jo
mov
rcr
pop
and
sub
inc
dec
js
pop
sub
enter
in
xor
(bad)
pop
mov
daa
adc
pop
sbb
adc
dec
mov
cwde
push
ret
jo
sahf
jo
fimul
(bad)
xor
nop
mov
jb
movs
pop
pop
push
and
cwde
add
gs
leave
push
neg
gs
(bad)
push
mov
or
sbb
dec
jmp
js
imul
fwait
outs
mov
(bad)
and
ja
inc
(bad)
xlat
mov
xchg
pop
push
sub
and
xchg
mov
cs
iret
test
fnstsw
ss
sbb
fnclex
sbb
push
cld
test
and
enter
pop
push
fldcw
inc
cld
fwait
mov
movs
pusha
or
sub
pop
mov
clc
adc
push
ficomp
sbb
pushf
aad
popf
mov
data16
fmul
(bad)
fcomp
out
jmp
adc
lahf
ins
loope
add
mov
or
je
add
lea
cmp
and
inc
mov
jp
mov
push
sbb
xchg
sbb
movs
xchg
inc
test
mov
jns
xchg
mov
leave
mov
mov
add
test
or
pop
mov
adc
jne
mov
dec
adc
hlt
cmp
je
xor
mov
xor
mov
jmp
nop
outs
cmp
fiadd
fldcw
or
sub
test
into
or
call
mov
(bad)
call
cwde
and
xor
inc
cs
pusha
sub
add
and
repz
jbe
lock
sbb
ficomp
js
sub
sbb
lea
jmp
and
pop
popa
outs
and
lea
sbb
mov
push
push
or
mov
sti
jnp
xchg
aad
and
push
data16
inc
sbb
push
fmul
inc
test
lock
push
sar
push
movs
fmul
daa
adc
push
dec
ins
add
inc
mov
pop
clc
test
fiadd
add
add
jae
or
test
stc
ret
add
sbb
mov
test
push
addr16
dec
in
lock
or
xchg
xlat
mov
push
sbb
clc
add
fmul
xchg
pushf
mov
inc
sbb
sub
(bad)
fcomp
add
cmp
dec
lock
popf
jne
(bad)
xor
test
sbb
adc
sub
jb
gs
das
into
rcl
jae
xor
es
out
dec
shl
xchg
aam
inc
mov
xor
loopne
push
dec
dec
fdiv
sar
mov
push
int
fdivr
adc
sub
and
ret
sbb
fidivr
adc
xchg
out
jno
xor
ins
xor
fimul
jnp
ins
iret
ins
mov
daa
pop
nop
push
xchg
fdivr
fs
push
out
cmp
xchg
bound
rcl
xor
mov
retf
dec
cmp
(bad)
or
not
adc
(bad)
jge
fcomp
movs
out
xor
adc
retf
int3
xchg
imul
lds
fst
(bad)
jge
pop
mov
das
xchg
or
add
int
in
pusha
and
cmp
pop
adc
(bad)
jge
imul
jb
inc
adc
int
sbb
cmp
dec
adc
(bad)
jge
in
rcl
out
xor
add
into
mov
sbb
leave
or
mov
lods
pop
fisub
out
xor
das
push
cmp
push
push
pop
and
push
sub
push
or
xor
loopne
cmp
fnstenv
dec
cdq
sbb
sub
outs
sub
daa
adc
fmul
dec
adc
es
fisttp
ffree
mov
xchg
push
push
(bad)
and
addr16
add
fistp
inc
cmps
or
xchg
xchg
nop
and
in
push
xchg
jl
dec
push
nop
xchg
xchg
addr16
inc
push
fisttp
movs
push
(bad)
pop
sub
push
sbb
push
xor
or
or
lods
adc
int3
clc
in
into
xchg
dec
or
or
pop
jb
mov
cs
push
mov
stos
test
pop
adc
add
mov
sar
aas
dec
shl
pop
xor
pop
in
js
jnp
sub
mov
ss
retf
add
fadd
nop
and
or
into
not
mov
loopne
mov
mov
(bad)
jne
aaa
es
imul
push
lods
add
ret
sbb
mov
loopne
and
sete
fabs
or
fcom
icebp
test
add
enter
fdiv
jns
out
pop
add
push
sbb
sub
sbb
adc
je
cmp
in
dec
(bad)
out
das
clc
lods
push
fnsave
or
or
jg
movs
sub
ins
xor
data16
push
sbb
or
test
fnstenv
and
or
fstp
sbb
pop
xor
xor
xor
jl
pop
jl
push
test
rol
pop
ret
mov
clc
call
out
nop
out
retf
and
sub
pop
sahf
sub
cmp
dec
add
mov
inc
in
sbb
fsubrp
and
dec
mov
add
and
pushf
and
and
cdq
add
dec
cs
cmc
cmc
inc
fs
sub
in
mov
cmp
add
nop
mov
add
shl
sbb
(bad)
push
inc
outs
jmp
jb
adc
xchg
jle
call
test
and
pcmpeqw
or
and
clc
pop
test
cdq
pop
add
inc
sti
inc
mov
ds
stos
cmp
pop
pop
push
iret
add
or
aam
sar
xchg
jne
pop
push
jae
xchg
jo
in
adc
call
pop
mov
jae
jnp
mov
cmp
xor
shl
fiadd
sub
loop
shufps
push
add
pop
add
push
adc
out
je
push
nop
pop
inc
(bad)
das
cmp
xor
inc
cmp
push
test
jne
imul
fs
xor
cmc
jmp
dec
or
cmp
jecxz
in
add
mov
clc
je
cmp
cmp
or
jne
or
add
sbb
pop
inc
fldenv
cmp
loope
dec
rcl
(bad)
or
add
jno
fisttp
(bad)
jne
xor
inc
adc
mov
adc
push
in
pop
jl
inc
and
cmp
push
pop
aam
js
lea
push
sub
mov
aam
inc
inc
adc
mov
adc
mov
push
cmp
xor
cmp
xchg
adc
fwait
in
lea
ret
xor
data16
dec
pusha
xor
or
and
inc
and
and
adc
dec
xor
retf
pop
in
pop
fcomp
inc
clc
sub
retf
popa
xor
push
push
push
adc
push
fist
or
lods
js
mov
jns
movs
cdq
or
jne
mov
push
test
test
mov
add
ja
clc
movs
ret
pop
cld
movs
or
hlt
pop
leave
loope
daa
sub
test
sub
adc
sbb
jmp
dec
add
mov
mov
pop
mov
xchg
fs
xchg
mov
ret
add
movs
fadd
jmp
rol
lock
sbb
push
hlt
mov
push
mov
and
sbb
jns
or
or
jmp
std
jmp
fmul
pop
sub
mov
aam
sahf
mov
push
push
(bad)
out
jmp
inc
add
adc
sar
leave
loope
daa
scas
sub
into
adc
(bad)
jo
data16
cdq
mov
sbb
mov
jne
mov
adc
push
mov
xchg
in
dec
ror
xchg
jle
xor
dec
in
outs
adc
cmc
cld
jne
es
xchg
push
cmp
push
cmp
xor
adc
daa
loope
retf
dec
nop
sbb
push
test
jns
gs
leave
and
pop
das
xor
pushf
or
mov
cmps
ja
inc
cmp
test
xchg
sub
(bad)
jl
sub
sbb
inc
add
push
pop
loopne
sub
aaa
pusha
push
cmp
pusha
pusha
mov
jle
jne
adc
dec
xor
or
es
ds
ins
cmovo
sub
sub
or
add
cs
jl
sti
mov
add
rcl
fist
adc
inc
jg
mov
or
lock
push
fstp
and
push
add
pop
add
cmp
or
cmp
jl
jnp
jg
mov
loopne
and
or
sbb
sar
inc
ret
into
call
push
fs
cmp
arpl
dec
clc
inc
retf
or
cmp
loope
hlt
xor
jg
jmp
and
mov
pusha
jbe
stos
cdq
push
push
test
push
cmps
push
xor
and
rol
cmp
movs
gs
fild
xchg
push
xchg
scas
dec
mov
popa
mov
and
jo
xchg
xlat
ss
jae
xor
pusha
sar
clc
jae
cmp
jl
cmp
jg
or
mov
js
adc
into
hlt
pop
jne
push
and
bound
lock
cmps
xchg
aad
fisttp
rol
adc
test
pop
xor
sub
add
and
xchg
inc
lahf
dec
mov
adc
xchg
adc
and
push
fdiv
inc
sbb
shl
or
rcl
sbb
ret
pop
xor
in
pop
je
mov
jle
add
inc
sbb
adc
lock
or
mov
push
fcmove
lods
lods
cld
in
jmp
loop
mov
mov
out
and
test
mov
xor
mov
cmps
mov
add
mov
mov
jne
and
or
adc
test
stos
movs
fdivr
push
ds
into
push
sub
cmp
sbb
inc
inc
dec
pop
sub
push
into
popf
out
jae
add
idiv
adc
add
rcl
adc
mov
fcomp
in
sub
jns
adc
enter
jo
sub
push
xor
dec
jo
retf
fwait
mov
icebp
es
(bad)
xor
cmp
stos
sub
retf
sbb
fldcw
or
adc
out
cmp
in
loopne
scas
cmp
cmp
xchg
and
test
adc
es
out
aam
lahf
jle
inc
push
lds
js
retf
outs
adc
mov
out
loopne
movs
or
std
ror
imul
test
dec
jl
pop
mov
adc
mov
mov
jge
jbe
das
pop
dec
xor
mov
cmp
mov
adc
dec
shl
test
call
jle
repnz
dec
push
push
cmp
sbb
dec
or
push
arpl
or
push
pop
dec
push
push
jmp
xor
add
jne
scas
mov
jnp
shl
cmp
jmp
jae
rol
je
imul
sbb
and
inc
cmp
adc
inc
arpl
daa
jmp
xor
jmp
mov
scas
jl
or
mov
xchg
lock
leave
mov
dec
push
pushf
iret
test
push
push
push
rol
cmp
inc
or
int
mov
fbld
sbb
mov
xor
or
sub
test
push
rcr
adc
std
push
shr
test
and
push
sahf
test
and
test
mov
cs
mov
pop
es
jmp
xchg
mov
lea
imul
nop
dec
cs
sub
pusha
je
gs
dec
add
or
add
stos
popa
scas
movs
cmc
aam
and
loopne
aad
scas
sahf
rcl
and
jmp
stos
loopne
ins
sar
sub
add
fisttp
sbb
dec
cld
or
sbb
sub
dec
jne
in
fcmovne
fcmovu
jmp
mov
add
xchg
or
inc
lds
adc
iret
popa
scas
fwait
xchg
jo
or
jl
pop
shr
enter
test
sub
int3
and
int3
pop
and
es
sbb
adc
xchg
xor
rcr
cmp
jmp
adc
retf
leave
or
mov
je
pusha
test
xchg
out
sub
add
push
mov
push
or
loopne
mov
xchg
out
xor
js
in
cmp
aas
daa
cmp
jle
out
out
adc
inc
adc
cmp
test
mov
icebp
xchg
test
pop
ror
or
mov
out
dec
dec
ror
stc
inc
push
outs
and
push
or
data16
dec
sbb
add
cmp
fdiv
adc
dec
and
jo
fdiv
ret
loopne
or
scas
jmp
test
mov
fadd
mov
pop
cli
xor
inc
or
dec
mov
cmps
sar
jg
mov
or
mov
pop
push
pop
xchg
gs
rol
movs
shl
xor
gs
in
std
cli
fbstp
enter
pushf
push
test
jne
push
jmp
sbb
jo
loopne
shr
dec
js
(bad)
jecxz
push
xor
sub
pusha
mov
icebp
dec
stos
call
sbb
sub
popa
outs
iret
ret
adc
test
dec
or
jne
mov
cwde
cs
or
je
sub
cmp
lock
mov
sbb
add
sbb
push
lock
lock
and
jg
jmp
enter
es
xchg
xchg
pop
dec
push
jns
cmp
pop
fcom
mov
repnz
push
cmp
je
push
fidivr
pusha
pop
sbb
sti
hlt
add
add
pop
shl
or
and
pop
outs
imul
ror
repz
movs
push
sbb
or
xor
push
push
cdq
add
fcmovnu
mov
sar
push
fisttp
(bad)
fisttp
xchg
xchg
xchg
adc
adc
and
pop
test
push
or
clc
push
jbe
adc
sbb
test
fs
push
cmp
mov
ror
mul
adc
cmc
nop
mov
pop
shl
cmp
cmp
xor
jne
shr
push
pop
add
sbb
sahf
adc
xor
or
js
leave
cli
pop
inc
add
sub
adc
inc
stos
daa
and
add
add
in
scas
cmp
mov
dec
(bad)
dec
or
lea
into
imul
fwait
jl
add
dec
dec
dec
adc
js
mov
push
aas
jbe
push
pop
nop
jp
adc
mov
push
and
mov
jmp
dec
push
cli
and
dec
jne
add
les
call
loopne
cmp
repnz
push
inc
push
dec
fst
xchg
aam
jmp
rcpps
pop
xor
dec
hlt
add
mov
adc
mov
sahf
push
cs
in
jecxz
xchg
add
sub
movntps
jae
mov
lods
rcl
loopne
pop
cmp
dec
fimul
sub
xchg
(bad)
and
lock
xchg
push
arpl
jno
gs
jp
inc
cmp
mov
(bad)
and
lock
jb
add
dec
xor
loopne
cmp
call
jo
ror
int3
jae
les
in
or
in
or
nop
dec
es
bound
sbb
or
lods
sbb
pusha
mov
mov
ror
xlat
les
cmp
mov
xor
sbb
sub
xchg
addr16
int
stos
push
mov
ror
test
test
xchg
push
sub
cmp
sbb
mov
xchg
adc
outs
xchg
xor
mov
int
ins
xor
aaa
push
push
mov
in
mov
push
or
adc
movs
mov
scas
push
(bad)
mov
inc
adc
inc
dec
or
fldcw
add
jne
or
or
or
adc
cmc
or
inc
pop
jmp
adc
in
or
ror
and
adc
dec
movs
push
mov
cmp
inc
jbe
ins
or
pop
sbb
rcr
je
adc
pusha
retf
xor
scas
dec
pop
push
daa
mov
add
add
aam
jge
icebp
mov
dec
(bad)
adc
inc
push
pop
or
test
inc
fst
call
pop
mov
jbe
and
sbb
and
fbstp
retf
cs
adc
pop
cld
xor
jae
fnstsw
jne
mov
cmp
dec
adc
in
jmp
xor
dec
jae
cmp
outs
mov
in
es
gs
je
mov
lahf
or
pop
mov
push
push
fidiv
shr
add
dec
xchg
test
in
mov
pop
mov
shl
jo
push
out
mov
mov
add
and
push
(bad)
mov
cdq
call
or
push
mov
stos
add
in
xlat
nop
dec
scas
into
jne
int
and
pop
cmps
mov
pop
cmp
shl
inc
mov
(bad)
push
stc
cmps
sub
pop
jp
aad
mov
add
cmp
jle
pop
jb
fdiv
cdq
and
popa
cmp
inc
xor
sub
iret
sar
add
movs
out
and
mov
or
push
cli
dec
jne
ror
and
jmp
dec
sbb
pop
call
mov
or
push
ins
xor
xor
push
or
add
jb
push
or
je
add
xor
retf
dec
add
jl
jle
dec
adc
dec
jp
push
inc
call
fs
(bad)
jbe
test
sub
mov
les
popa
retf
imul
mov
jmp
push
pop
or
dec
loopne
push
jnp
arpl
sub
or
inc
pop
ret
adc
punpckhbw
add
data16
and
gs
in
fiadd
rol
xor
mov
enter
test
test
fnstenv
xchg
cmp
retf
or
cmp
loop
adc
add
add
in
stos
xor
mov
or
cmps
xor
inc
xor
xchg
hlt
xor
ss
push
test
(bad)
pushfw
sbb
mov
add
sbb
int3
mov
fdiv
or
xchg
push
popf
adc
repz
mov
dec
inc
xor
add
into
xchg
mov
jmp
xchg
repz
or
loopne
or
push
rol
lock
in
inc
or
add
(bad)
pop
dec
cmp
or
add
leave
xor
jns
pop
pusha
dec
sbb
pop
cld
cmps
aad
mov
xchg
add
mov
lea
dec
in
(bad)
ds
mov
psubsb
inc
cld
lock
fwait
xor
test
mov
sub
sub
jp
lock
mov
or
clc
sub
in
aaa
add
adc
inc
fs
inc
test
retf
mov
mov
push
test
hlt
mov
icebp
mov
mov
mov
and
add
imul
adc
lahf
adc
xlat
lea
sub
nop
es
cwde
jmp
dec
cld
dec
cmp
push
xchg
mov
jae
and
xor
daa
add
inc
add
loope
sbb
pushf
pop
push
mov
ins
inc
push
(bad)
pop
dec
or
pop
cmps
push
push
jecxz
push
pop
sahf
nop
sub
inc
fimul
test
or
adc
jg
sub
add
fwait
mov
(bad)
pusha
or
inc
gs
test
mov
cs
pop
mov
sbb
adc
imul
ins
call
adc
jae
int3
adc
inc
retf
and
and
test
pop
mov
in
jne
push
cmp
or
or
scas
movs
jge
inc
and
push
fild
das
cld
mov
jge
pop
and
pop
xor
add
shl
mov
(bad)
pop
div
and
popf
inc
push
jne
aaa
xor
cmp
inc
push
xlat
sbb
xor
push
xor
mov
dec
push
in
cs
pop
sbb
repz
ja
dec
or
or
shl
or
fisttp
push
pop
xchg
aad
aam
or
and
or
(bad)
rol
push
pop
lds
into
movs
inc
or
push
retf
ret
jns
inc
sub
gs
fcom
add
add
test
sar
int
mov
sbb
inc
imul
push
sub
aad
mov
int3
xor
add
xchg
aad
jo
push
sub
push
push
loop
pop
mov
xor
hlt
sbb
push
dec
mov
mov
adc
adc
xor
add
stos
(bad)
adc
call
cmps
add
in
mov
xor
add
aas
push
and
dec
inc
adc
es
(bad)
cs
adc
cmc
push
or
repnz
jae
or
in
stos
pusha
loopne
clc
mov
dec
(bad)
sbb
fmul
jnp
js
shr
cmp
dec
les
add
jnp
fcomp
cmp
and
test
push
fmul
mov
mov
mov
mov
and
(bad)
or
or
popa
das
cmp
popa
mov
or
ins
lock
lods
aas
jae
add
rcl
repz
hlt
add
add
das
(bad)
push
and
dec
inc
test
sbb
(bad)
or
add
and
push
add
outs
xor
or
out
in
jp
shl
mov
loope
out
push
es
inc
and
or
pop
mov
shl
or
pop
cld
aam
lods
pop
cmp
or
(bad)
test
mov
jmp
retf
adc
or
clc
lahf
xchg
aam
cmp
out
test
jne
retf
add
jmp
aas
retf
cmp
jb
mov
mov
or
ret
push
jo
pop
pop
sar
or
sbb
pusha
adc
inc
rol
movzx
add
and
cmp
adc
push
dec
sub
call
retf
(bad)
adc
rol
mov
xchg
mov
push
pop
or
cmp
sbb
call
push
mov
popa
add
jae
mov
inc
shr
call
add
adc
mov
outs
jl
jne
sub
mov
or
les
es
jle
test
pop
rol
push
xor
ret
jl
mov
adc
rcr
iret
fld
jge
jb
mov
cmp
xlat
xor
add
ret
sbb
pop
(bad)
sub
ret
arpl
call
push
gs
adc
or
aas
(bad)
add
adc
pop
iret
rcl
add
sub
(bad)
out
aas
pop
inc
ja
cmp
adc
adc
js
js
ds
je
movs
popa
xor
inc
movs
add
sbb
(bad)
pop
sbb
push
mov
push
mov
outs
sbb
mov
loop
dec
loopne
ret
js
clc
retf
adc
inc
cmp
mov
or
mov
mov
ins
int
or
add
mov
sbb
or
cmp
jbe
jo
add
mov
mov
pop
push
jmp
je
mov
sbb
pop
xor
push
daa
jle
jmp
jmp
shl
std
shr
push
sbb
xor
(bad)
push
int3
add
cdq
xor
dec
sbb
sbb
add
mov
bound
push
pop
add
sub
popa
clc
sub
xchg
test
mov
add
adc
fwait
popa
sub
sbb
add
jbe
add
cmp
inc
jmp
mov
add
and
add
mov
ins
xchg
jb
xchg
sbb
fisttp
xor
lea
div
pop
ret
push
repnz
jbe
inc
mov
inc
mov
and
push
bound
mov
sbb
dec
sbb
add
sti
ret
sub
jb
fsubrp
scas
and
int3
add
jmp
outs
push
ret
or
pop
mov
cwde
imul
xchg
pusha
adc
lock
inc
push
in
push
lods
jmp
add
or
mov
or
lock
jno
xchg
enter
(bad)
fcomp
sahf
shr
jae
movs
add
(bad)
lock
adc
lods
add
or
sub
sbb
hlt
push
jne
mov
xor
sub
daa
push
jae
js
xchg
xor
push
retf
cmp
mov
mov
arpl
sub
lahf
xor
(bad)
shl
inc
fisttp
adc
sub
test
rcr
add
pop
push
inc
sub
aam
or
ja
loopne
loopne
mov
push
imul
pusha
sbb
sbb
add
jne
adc
adc
and
imul
mov
mov
mov
push
jns
or
pop
dec
xchg
cs
add
and
repz
mov
adc
ret
or
jo
fisttp
jmp
add
adc
and
and
push
pop
and
mov
pop
sahf
jp
mov
dec
ins
or
push
pushf
mov
xor
dec
sub
mov
lods
div
dec
les
daa
xor
mov
inc
out
ss
bnd
or
xor
mov
lock
push
test
cwde
sbb
add
les
xchg
push
adc
xchg
das
xor
shr
add
out
inc
aam
mov
adc
into
ins
xchg
jle
cmp
add
pop
div
or
dec
je
sbb
cmps
test
or
add
xor
and
jne
std
push
cmps
movs
ror
inc
mov
jge
xchg
lea
sbb
lock
xor
ret
shr
jmp
pusha
jg
in
pop
call
or
cmp
dec
jbe
push
jbe
ins
je
ja
jmp
mov
xor
adc
arpl
ss
cmp
jne
inc
inc
nop
std
or
or
cdq
jp
les
leave
pop
nop
pusha
imul
into
enter
sbb
jns
movs
test
test
es
sub
test
addr16
test
mov
and
mov
div
push
jo
cli
add
cli
call
mov
inc
cld
xor
pusha
and
xchg
mov
jne
cmp
or
add
dec
aam
add
in
add
sub
scas
aam
mov
dec
repnz
add
pusha
movs
push
jo
inc
rol
movs
inc
scas
lea
or
jge
(bad)
int
mov
push
xor
rcr
icebp
cs
add
fcom
pop
xor
add
pop
add
stos
mov
inc
sub
inc
pop
call
cli
add
mov
test
pop
mov
pusha
and
jle
fcmovne
adc
pop
ucomiss
sub
(bad)
ror
popa
fsubp
out
into
popa
sub
sbb
cwde
push
adc
mov
into
sub
ds
adc
mov
pusha
add
sub
jecxz
and
add
shl
clc
sbb
loope
ins
cmp
mov
sub
clc
vminsd
add
sbb
and
retf
inc
arpl
mov
outs
or
inc
adc
adc
and
aas
and
cmp
add
push
dec
cmp
xchg
xchg
xchg
mov
add
lea
test
pop
sbb
movs
cmp
mov
or
push
pop
pop
(bad)
int3
daa
cmp
cdq
jecxz
push
(bad)
xor
jo
adc
and
add
cmp
out
fidivr
jno
fisubr
pop
sub
jg
mov
mov
add
and
out
mov
push
test
inc
jmp
inc
inc
addr16
or
outs
adc
cld
cmps
arpl
or
fisub
mov
or
cmp
dec
out
jns
jbe
sar
je
jne
(bad)
mov
push
pop
jmp
jnp
and
inc
leave
or
mov
cdq
jmp
pop
mov
jmp
(bad)
xchg
arpl
jmp
rdpmc
shl
push
clc
leave
mov
or
mov
jae
loop
fstp
lock
fcmove
call
push
mov
adc
div
test
or
dec
inc
cmp
cmp
bswap
arpl
xchg
cmp
sub
ins
mul
or
push
fadd
call
pusha
rol
inc
fld
cld
aaa
je
je
mov
ret
xor
iret
cwde
mov
or
xor
xchg
imul
push
inc
pusha
fnsave
(bad)
mov
sbb
scas
lods
sub
add
add
into
cmp
call
dec
push
add
inc
inc
cmp
test
or
xchg
and
cwde
inc
cld
sub
test
inc
js
pop
inc
sub
sub
or
xchg
scas
mov
je
adc
sbb
jne
sub
add
mov
or
adc
mov
into
ficomp
and
jmp
or
pop
or
jb
xor
bound
pop
mov
idiv
loopne
cmp
add
icebp
cmc
pop
nop
add
mov
out
cmp
xor
mov
popa
sti
loopne
(bad)
dec
mov
jmp
mov
rcr
in
out
push
rcl
into
dec
out
and
popf
sbb
pusha
dec
xor
in
inc
clc
add
mov
xlat
iret
jnp
rol
stos
imul
push
aaa
push
outs
add
or
dec
add
add
mov
inc
rol
mov
loope
lock
and
movs
add
jns
and
cmps
js
cmp
or
nop
cmp
pop
inc
jg
fild
or
jo
es
sbb
push
pop
pushf
push
inc
push
push
ins
aas
das
imul
jl
mov
xchg
(bad)
sbb
xor
enter
call
push
sbb
or
nop
mov
add
pop
push
test
sub
test
inc
or
jnp
imul
jl
push
inc
ret
adc
sbb
xchg
inc
fild
sbb
dec
sbb
push
cli
mov
movs
pop
fs
xchg
sub
or
sbb
push
test
inc
jl
ror
addr16
mov
or
test
scas
pop
pop
dec
lock
pop
cmp
(bad)
out
or
or
mov
or
ret
pop
call
cmp
pop
mov
add
mov
adc
cmp
xchg
mov
sti
inc
sbb
stc
pusha
push
or
lods
(bad)
test
push
sub
or
or
add
sbb
push
lock
inc
popa
xchg
fmul
inc
xor
sub
jno
mov
sbb
cmp
mov
aad
mov
mov
mov
(bad)
ja
add
es
mov
sbb
inc
inc
stos
lahf
idiv
cmp
jb
cmp
ja
add
cmp
adc
(bad)
cmp
sahf
xor
rol
dec
jne
adc
cmc
mov
ins
pop
neg
dec
rol
xchg
jmp
xchg
push
sbb
push
add
pop
je
or
je
push
and
pop
out
push
add
out
repnz
je
push
and
jle
jb
loop
push
adc
dec
fdivr
inc
ins
push
fld
mov
popaw
adc
push
lods
movs
or
jbe
mov
add
cmp
sbb
mov
loope
add
add
sbb
cmp
not
ds
dec
jo
cmp
add
ror
or
sub
addr16
mov
mov
pop
cmp
add
add
push
adc
pop
rcr
(bad)
ss
sbb
xor
(bad)
xchg
dec
(bad)
test
cli
cmp
adc
mov
pop
push
pop
adc
cmp
clc
test
mov
es
cli
cmovne
xchg
add
mov
loopne
ss
mov
and
cmps
loopne
and
movs
sub
pusha
adc
xor
lea
add
add
cmp
sub
je
sub
fst
dec
xor
mov
mov
mov
push
test
jmp
xor
aam
jno
mov
sbb
pop
jmp
push
test
sub
xchg
test
pop
mov
xchg
hlt
aam
mov
add
mov
enter
mov
das
(bad)
adc
dec
(bad)
jae
dec
mov
add
and
add
push
jmp
and
nop
hlt
mov
or
mov
jb
lods
add
and
dec
les
sub
fs
aad
icebp
fdivr
cmp
int
ret
jl
retf
xor
adc
into
or
aam
adc
or
or
adc
adc
push
push
push
push
or
push
pop
push
dec
xchg
pop
or
add
adc
cmp
hlt
dec
sbb
dec
loopne
dec
or
jb
clc
and
mov
ins
inc
push
movs
lea
mov
sbb
mov
and
pop
sub
xor
cmps
inc
pusha
pop
je
or
mov
fsin
push
push
sub
dec
adc
mov
cmp
ret
mov
inc
and
mov
adc
push
add
jno
push
iret
xchg
into
and
in
xor
xlat
jp
pop
cmp
adc
adc
add
out
xor
add
add
or
sahf
sbb
(bad)
jbe
xchg
arpl
loopne
adc
add
add
pusha
nop
sub
add
lods
or
lods
xchg
pop
or
call
add
xor
lea
and
dec
clc
sbb
loop
xor
jmp
pusha
loop
push
and
out
pop
push
rol
jl
mov
or
xor
add
push
xchg
mov
push
sbb
push
inc
jmp
jne
jmp
lea
and
daa
push
das
sub
retf
xor
cmps
pop
pushf
or
cmp
cs
inc
stos
add
dec
js
cmp
inc
adc
sar
jmp
adc
jg
xor
or
xlat
in
add
call
xor
push
pop
adc
ror
add
pop
mov
fidiv
loope
mov
cli
xor
inc
add
adc
pop
nop
stos
pop
mov
add
(bad)
repnz
cmp
sub
push
inc
cmp
xor
cmp
adc
inc
add
ins
and
lahf
sbb
mov
stos
add
add
jmp
adc
mov
cmp
jle
add
sub
pop
xchg
and
mov
hlt
dec
xor
rol
adc
not
cmp
data16
cmp
mov
or
jmp
mov
dec
cmp
sbb
int
mov
nop
aam
add
pop
mov
inc
or
jae
push
adc
xor
js
lahf
aad
xor
adc
inc
cmp
pusha
sbb
cmp
mov
pop
mov
ffree
dec
xor
or
rcl
jmp
(bad)
jge
add
out
jle
(bad)
jbe
and
pop
out
test
enter
sub
clc
popa
bound
fsub
jae
xchg
fist
dec
or
call
xor
fcmovnb
rol
ss
popf
or
push
push
out
push
dec
in
jbe
add
rdpmc
inc
jl
cmp
xor
push
cmp
nop
out
cmp
push
(bad)
pop
retf
push
call
jmp
sbb
add
push
loop
inc
push
test
repz
imul
inc
pusha
dec
pop
call
inc
rcl
jg
add
cmp
jg
je
or
cmps
les
mov
sti
inc
pop
(bad)
mov
or
inc
jmp
xchg
jne
or
nop
push
inc
add
jp
test
daa
inc
bnd
pop
push
push
ins
ja
or
jmp
jbe
sub
fisttp
sti
jmp
dec
sti
dec
icebp
mov
dec
adc
sar
adc
aam
jge
ins
xchg
add
mov
push
cwde
cmp
push
sub
jbe
rcl
hlt
xchg
xor
sub
add
sub
arpl
ret
loope
mov
cmp
push
jno
mov
and
cmp
pop
cmp
loopne
mov
pop
jbe
cmp
inc
(bad)
outs
jg
mov
(bad)
mov
fs
mov
addr16
sbb
or
sbb
xor
and
jmp
dec
xor
sbb
push
loopne
jmp
jle
jmp
int
or
xor
cmp
sahf
and
jne
test
jo
and
dec
push
dec
jo
ss
fiadd
sub
lock
xchg
push
jle
adc
push
jb
fld
iret
dec
pop
lahf
rcl
pop
scas
in
inc
xor
adc
mov
out
fidiv
mov
add
push
inc
fist
cwde
pop
mov
pop
inc
adc
push
ror
dec
pop
push
xor
aad
rcr
dec
add
sub
and
mov
sub
or
inc
or
push
daa
je
xor
inc
mov
add
mov
dec
adc
and
mov
lock
movsx
fimul
push
add
pop
sub
mov
or
imul
fstp
dec
jmp
fild
jo
jo
(bad)
repnz
call
or
xchg
ret
mov
push
lods
add
dec
clc
aas
sbb
jmp
ret
add
mov
cmp
ret
sub
xchg
add
aas
pop
pushf
cmps
(bad)
je
add
jecxz
and
cmc
popa
sbb
mov
cmp
shr
adc
imul
inc
bound
ins
inc
sti
cmp
pop
in
(bad)
js
std
les
mov
or
push
je
cmp
dec
fnsave
pop
sub
(bad)
jo
mov
mov
jmp
sbb
add
sub
add
sub
inc
les
aas
pop
jne
jmp
pop
inc
push
cmps
and
mov
mov
cmp
je
inc
cmp
inc
xchg
nop
push
cmp
mov
jl
enter
movs
push
es
inc
rol
stos
inc
mov
fldl2e
retf
mov
jge
lods
out
or
call
xchg
stos
inc
enter
jmp
loope
fldenv
rol
rcr
imul
clc
mov
(bad)
push
test
mov
mov
rol
mov
adc
call
(bad)
mov
or
xor
loop
je
popf
jne
or
rol
sub
aad
fsub
in
or
push
and
mov
jmp
cmp
xor
aam
or
push
and
jb
sub
out
and
add
les
push
inc
push
or
sahf
scas
nop
add
pushf
xchg
jne
mov
jmp
fld
push
out
add
jecxz
adc
ret
jne
sub
inc
add
fwait
imul
cmovl
dec
mov
add
add
jne
jne
jbe
loop
xlat
pop
fild
outs
cmp
lahf
or
jo
or
pop
sbb
std
popa
fidivr
mov
cdq
add
adc
add
nop
nop
inc
std
sbb
jmp
sub
fadd
rol
lods
and
jl
neg
mov
pop
loop
sbb
add
je
mov
pop
and
push
ins
shl
jmp
mov
out
cmp
or
fwait
sub
add
(bad)
mov
push
repnz
jl
sar
push
mov
push
inc
jnp
pop
(bad)
push
add
popf
sub
dec
adc
fsubr
fdivr
or
jmp
ret
outs
stos
jno
push
add
inc
push
or
stos
rol
mov
ret
clc
adc
dec
jns
data16
sbb
jo
sub
js
and
cmp
dec
dec
ror
add
push
rcl
mov
sub
pop
and
dec
dec
rol
jmp
add
mov
pop
test
add
push
add
es
jmp
jle
aaa
int
push
mov
nop
add
add
push
rcl
out
out
mov
out
dec
js
mov
in
or
push
xchg
das
or
loop
pusha
jp
cmp
pushf
jne
xchg
jno
push
inc
clc
push
xor
out
movs
test
adc
or
add
or
movs
icebp
pop
push
lods
call
pop
dec
or
pop
pop
clc
and
and
or
clc
inc
mov
je
fisub
pushf
inc
scas
or
jne
in
and
jno
push
and
push
fcmove
inc
push
mov
or
mov
bound
int
and
sbb
push
cmp
adc
je
out
dec
data16
je
outs
jmp
out
mov
adc
mov
mov
inc
or
in
xchg
mov
out
mov
fst
das
adc
jp
leave
jno
mov
push
(bad)
ds
aam
push
mov
and
icebp
rcl
jne
add
add
sbb
in
add
push
xor
out
add
mov
cwde
test
xchg
sbb
add
push
ds
out
push
addr16
mov
stc
pop
sbb
push
pop
add
sbb
outs
sbb
arpl
push
add
sub
fsub
jg
xor
(bad)
rol
js
add
cmp
movs
ds
ror
jo
fisttp
lea
inc
dec
pop
push
cmp
add
add
out
dec
jo
fs
jmp
pop
les
sub
sub
sbb
sub
outs
in
jmp
out
std
jmp
fild
lea
inc
dec
dec
fidiv
push
add
imul
fs
add
and
repz
aas
xchg
pop
not
mov
dec
or
and
inc
jg
xlat
mov
test
pop
je
dec
dec
add
mov
or
mov
mov
inc
dec
sbb
jl
add
pushf
fisttp
and
mov
pop
rcl
xor
adc
dec
call
mov
arpl
cs
dec
xchg
sti
or
sub
or
sahf
clc
or
adc
sahf
int3
mov
mov
arpl
mov
sti
or
jge
or
jle
pop
ja
xor
adc
mov
aam
push
clc
stos
cwde
inc
jle
inc
scas
ret
nop
xchg
xor
daa
hlt
inc
jmp
adc
ds
add
add
inc
sbb
add
adc
in
enter
sbb
or
jp
dec
and
jge
mov
adc
inc
rol
adc
je
push
sbb
pop
popf
rcl
jbe
inc
or
push
mov
mov
or
xor
xor
popf
es
aaa
loope
xchg
add
and
and
icebp
int3
and
ins
adc
cmp
xor
mov
sbb
xor
fiadd
fst
push
xchg
adc
test
mov
mov
mov
add
loop
xor
cmp
cmp
iret
adc
data16
imul
(bad)
daa
inc
inc
arpl
mov
push
or
adc
adc
repz
iret
jmp
sbb
mov
leave
cdq
or
ds
outs
idiv
mov
inc
xor
bound
add
mov
adc
(bad)
or
int
cdq
add
adc
lock
xor
and
arpl
push
jo
fnstcw
inc
adc
mov
cmp
shr
loopne
mov
mov
sbb
pop
pop
daa
sub
inc
xchg
mov
fidivr
mov
or
test
push
cwde
or
sbb
add
ds
mov
inc
push
bound
scas
imul
cmp
and
jl
and
ins
mov
mov
push
xchg
xor
add
pop
push
repz
fisub
in
test
xor
sub
xor
add
in
adc
jmp
mov
adc
cmp
aad
pusha
js
jmp
or
xchg
push
dec
rcl
xor
or
in
not
push
jo
clc
xor
in
add
pusha
jecxz
mov
dec
xchg
ja
cmp
push
mov
mov
dec
jne
adc
sbb
xor
or
daa
push
sub
adc
in
out
inc
and
in
neg
in
adc
clc
psadbw
pushf
je
outs
jne
adc
aaa
xor
mov
popf
mov
inc
dec
fstp
xchg
push
jmp
(bad)
sub
hlt
mov
sti
mov
push
sbb
pusha
sbb
and
mov
jo
sbb
adc
cmp
jno
bswap
jle
enter
adc
mov
mul
jg
push
push
or
and
mov
je
or
push
test
or
jne
xor
(bad)
add
pop
hlt
rcr
mov
add
push
adc
add
adc
stos
pop
jge
test
test
loopne
cwde
or
ds
mov
ins
loope
ss
push
push
push
push
push
mov
cmp
adc
sbb
push
sbb
outs
inc
int
push
pop
out
sbb
push
fcom
sbb
sbb
lods
cmp
rol
sbb
mov
and
adc
ret
pop
or
scas
pop
adc
jne
adc
mov
xchg
loope
sub
clc
pop
sub
push
outs
sub
push
push
mov
push
or
sbb
jns
pop
es
call
sbb
imul
sub
inc
and
fs
div
(bad)
xchg
mov
lods
cs
inc
and
cdq
es
icebp
jne
lods
add
rcr
push
shr
test
push
and
or
mov
gs
mov
arpl
fmul
lock
inc
ds
sub
mov
mov
mov
mov
jbe
sbb
movs
add
test
fcom
out
ins
mov
and
inc
mov
ds
mov
jle
mov
or
adc
or
and
or
jno
aaa
icebp
sub
fldcw
pusha
fs
aad
inc
adc
fisub
loop
daa
mov
dec
aaa
cmps
push
sub
xchg
dec
pop
xor
or
repz
or
add
add
add
fmul
inc
sar
cs
daa
mov
push
adc
mov
or
cmp
xor
(bad)
and
mov
mov
(bad)
sub
xlat
aaa
push
int
mov
jmp
inc
pusha
out
mov
(bad)
adc
jbe
push
sbb
mov
push
adc
dec
repz
add
add
test
add
mov
sub
je
inc
je
mov
push
aam
(bad)
or
or
or
add
cmps
cmp
or
scas
xchg
ret
cmp
loopne
add
dec
adc
inc
pop
ror
ror
jo
mov
pop
hlt
enter
dec
repnz
out
mov
cmp
pop
jge
cmp
jle
push
xchg
js
mov
and
xor
mov
inc
inc
int3
mov
xor
clc
mov
cld
mov
es
cmp
scas
adc
lea
push
xchg
pop
sbb
pop
out
fs
and
loop
rol
add
adc
dec
jmp
add
pop
push
xchg
jl
jmp
xchg
mov
iret
lods
mov
cmp
sub
pop
adc
popa
jecxz
inc
movs
aaa
not
test
sbb
or
imul
jnp
out
sbb
sbb
ds
outs
add
jle
ret
pop
cdq
addr16
movs
mov
mov
xchg
push
add
xchg
sub
pop
adc
test
and
sub
jmp
dec
retf
shl
ss
pop
mov
push
aaa
lods
inc
jne
and
clc
aam
mov
push
mov
rep
lds
cmp
pop
xor
add
scas
sub
clc
popa
rol
and
pop
movs
dec
test
mov
inc
stc
dec
je
popa
sbb
or
in
pop
add
cdq
les
cmp
sbb
(bad)
jge
stos
adc
mov
call
mov
mov
dec
push
push
jmp
push
inc
xor
cmp
lock
cwde
clc
dec
add
mov
aaa
pusha
movs
xor
inc
xchg
jne
sbb
jns
popf
mov
imul
mov
test
cmp
push
or
ret
call
inc
aas
cmp
sti
add
loopne
fmul
div
jge
xchg
mov
pop
cmc
leave
movs
pop
mov
xchg
test
dec
hlt
sbb
ja
inc
repz
pop
dec
cmp
inc
aam
sub
call
cmp
dec
xchg
adc
fistp
sbb
push
xchg
pop
shl
inc
inc
pop
mul
and
cmp
jl
movs
sbb
push
dec
adc
xchg
dec
movs
fnsave
aaa
inc
push
dec
cmp
mov
jg
arpl
in
inc
add
inc
fiadd
cmp
jg
es
je
or
jne
or
or
bound
sub
clc
mov
fmul
sbb
jl
dec
jne
and
int3
mov
ret
stos
hlt
out
cmp
sub
dec
or
daa
jmp
loopne
or
pop
not
enter
pop
imul
xor
add
push
clc
mov
jle
fidiv
(bad)
out
rol
pop
lods
or
test
jmp
ins
bound
adc
test
aam
or
mov
cmc
(bad)
sbb
push
inc
test
mov
pop
add
rcl
xchg
imul
retf
pusha
push
je
adc
xor
sub
movs
es
jmp
ret
mov
pusha
or
fimul
inc
ffreep
add
push
inc
ficom
add
xor
lahf
jo
je
push
push
mov
mov
add
shl
iret
ss
inc
xchg
push
mov
mov
sbb
push
pop
mov
lods
je
add
mov
or
fwait
add
push
xchg
adc
sub
sbb
movs
dec
mov
dec
add
adc
push
mov
loop
(bad)
mov
into
or
add
outs
and
pop
aas
mov
add
or
inc
or
cdq
or
pop
dec
scas
or
pop
inc
jmp
mov
sub
xor
add
push
dec
jb
(bad)
aaa
scas
pop
dec
jne
push
cmp
bound
add
add
clc
into
retf
cs
push
mov
adc
inc
mov
(bad)
mov
je
sbb
add
fstp
out
jecxz
pop
rol
lea
rol
dec
cs
pushf
add
xchg
imul
sar
aad
or
clc
je
scas
or
dec
mov
test
push
sub
cmc
mov
outs
call
xor
outs
add
xchg
or
inc
push
mov
fs
inc
in
outs
movs
sahf
pusha
push
cmp
aam
movs
cmp
jae
inc
mov
inc
add
movs
jle
push
push
mov
cmp
sub
sbb
sbb
imul
sbb
sub
or
test
retf
jge
push
in
stos
adc
movs
xor
xor
pop
pop
jle
push
es
inc
mov
(bad)
push
les
or
mov
and
cmp
push
adc
cmp
push
cmp
adc
or
jbe
inc
inc
xor
movs
jnp
xchg
xchg
scas
xor
popf
xchg
sbb
fcomp
xchg
imul
cld
cli
ss
push
dec
add
fist
in
push
pop
mov
add
test
push
jmp
and
add
xchg
sbb
repz
aam
mov
mov
xor
stos
jns
xchg
out
rol
(bad)
repz
popa
(bad)
add
(bad)
fmul
push
push
pop
out
(bad)
int3
or
loopne
sub
pushf
aam
push
sub
dec
(bad)
xlat
mov
sbb
inc
add
jle
repnz
aaa
fsub
mov
pop
mov
and
test
add
pop
push
push
call
add
loopne
dec
pusha
push
loop
sbb
pop
inc
sar
adc
and
inc
xor
or
inc
sbb
aam
pop
push
ja
mov
dec
inc
jno
add
or
cmp
clc
sub
dec
clc
xchg
(bad)
mov
fistp
pop
aaa
sbb
je
push
push
mov
cmp
pop
std
ds
movs
jo
or
pop
jmp
test
jmp
pushf
inc
das
or
push
xor
call
or
push
inc
int
adc
inc
xchg
sbb
adc
push
mov
(bad)
mov
push
mov
loopne
sti
dec
push
cmovnp
dec
push
adc
or
push
call
pop
push
cld
(bad)
cli
cmp
shr
or
jmp
adc
sub
mov
cli
sbb
pop
inc
and
inc
mov
adc
jl
or
push
jmp
adc
and
mov
mov
rcl
xor
nop
retf
adc
repz
adc
out
mov
imul
mov
jmp
repnz
lea
pop
repnz
xor
je
add
nop
gs
xor
mov
cdq
add
in
jo
cmp
(bad)
cmp
or
pop
dec
add
ja
adc
jmp
nop
fld
scas
fnsave
fdivr
mov
or
pop
pop
mov
or
and
rcl
daa
and
js
clc
or
sbb
loopne
aam
stos
mov
je
rol
add
std
test
xchg
xchg
sub
dec
jmp
or
xor
cmp
call
pop
cmp
adc
jl
inc
hlt
jecxz
(bad)
mov
inc
dec
adc
mov
and
xor
jp
inc
add
repnz
xchg
push
add
mov
push
in
jbe
ret
sub
inc
outs
call
sbb
sub
cmp
cmp
dec
jmp
cmp
jmp
cdq
xor
dec
in
add
mov
dec
outs
or
rol
cs
shl
js
nop
ret
lods
or
jo
or
stos
adc
(bad)
cmp
cvtps2pi
test
pop
mov
mov
lods
enter
adc
jns
stc
cmp
xlat
je
push
pop
or
out
sahf
cmps
push
fwait
jp
jmp
mov
cmp
jb
iret
adc
int
sar
call
mov
retf
mov
rol
sub
rol
imul
sub
adc
or
add
cmp
add
add
and
add
fiadd
shl
jmp
mov
aaa
mov
mov
adc
mov
sub
fwait
ja
sub
pop
jl
and
cmp
cdq
pop
out
(bad)
sbb
lahf
adc
test
sub
cdq
push
cmp
pop
push
jae
mov
sbb
and
call
outs
mov
pop
mov
adc
je
dec
je
adc
mov
or
adc
neg
mov
inc
push
sbb
adc
sub
pop
jae
push
test
sub
push
push
addr16
jne
xor
inc
aam
les
rcl
mov
jle
and
aad
ins
(bad)
sbb
or
push
xchg
or
ret
(bad)
mov
xor
cmp
(bad)
test
xor
adc
cmp
xchg
xchg
inc
mov
(bad)
fadd
faddp
xchg
mov
inc
gs
xor
imul
xlat
push
ficom
call
mov
or
jno
mov
fild
xchg
call
xchg
pop
ret
push
enter
sbb
popf
push
jb
jbe
fisubr
(bad)
jne
or
cmp
out
jge
jl
jg
mov
leave
call
jmp
mov
mov
loop
inc
xchg
loopne
push
push
call
or
imul
adc
push
and
pop
or
jle
xor
and
(bad)
cmps
pusha
scas
push
inc
adc
cs
push
sub
and
and
sbb
int3
add
out
xchg
xchg
sbb
xchg
push
push
xor
into
lea
pop
cld
lea
aaa
imul
mov
push
mov
daa
add
sub
leave
jae
or
aam
or
add
in
and
or
leave
nop
push
dec
xlat
adc
or
test
iret
fstp
js
repnz
cmp
or
data16
sub
push
shr
or
push
ds
jmp
aam
add
enter
fsub
inc
pusha
adc
les
ror
push
jle
ins
mov
ror
sub
loope
dec
pop
sub
sub
(bad)
aam
movsx
add
stos
adc
movs
inc
push
dec
ins
pop
cmp
pushf
dec
dec
movs
ds
jecxz
add
sub
jmp
loop
adc
gs
mov
mov
retf
cmp
push
inc
lods
inc
cld
jmp
sbb
inc
or
loopne
movs
test
dec
lea
lea
mov
dec
loope
mov
mov
push
in
iret
repz
out
jmp
repz
in
out
sti
out
aas
fild
sub
sub
mov
dec
or
cs
adc
or
and
xor
add
add
add
and
xor
xor
jp
cs
(bad)
push
pop
cmp
outs
loope
push
mov
inc
cs
push
add
inc
sub
sub
adc
sahf
mov
and
sbb
mov
dec
dec
pop
into
add
inc
mov
push
sub
movzx
jg
mov
sbb
adc
ss
fidiv
or
add
pop
es
or
mov
leave
dec
mov
lea
sar
mov
(bad)
neg
dec
and
jb
sbb
xor
test
mov
mov
inc
sbb
mov
test
pop
xchg
or
pop
mov
push
mov
mov
pop
push
inc
test
mov
sub
xor
and
bound
sub
mov
jne
mov
neg
push
cmp
outs
pop
jle
cmp
dec
xchg
dec
add
add
inc
cmp
inc
into
adc
or
xchg
mov
icebp
xor
inc
sti
mov
mov
inc
add
add
nop
push
or
sub
mov
lea
jl
ins
(bad)
(bad)
int
mov
dec
jmp
fs
(bad)
pop
inc
inc
(bad)
je
sub
mov
xchg
fcomp
add
shr
xor
pop
hlt
mov
pop
(bad)
fld
add
and
fisub
(bad)
dec
outs
sbb
dec
mov
in
test
mov
inc
or
mov
push
xor
ror
and
out
and
sub
enter
popa
push
jg
lods
cli
std
mov
sahf
movs
inc
mov
push
das
adc
push
(bad)
dec
shr
test
retf
dec
push
xor
ins
or
dec
out
adc
hlt
push
pop
inc
mov
cmp
adc
add
push
mov
push
sbb
jne
pop
popa
cs
push
or
leave
sbb
dec
push
dec
aam
jge
and
dec
push
or
call
in
adc
add
push
adc
push
call
add
lock
sbb
push
push
add
cdq
mov
cli
call
adc
in
aad
pushf
cwde
or
rol
and
mov
or
xchg
or
jg
or
sub
jge
and
ins
add
fdivr
add
xor
hlt
and
pushf
fadd
push
mov
clc
(bad)
inc
mov
xor
sbb
inc
fiadd
adc
rol
sbb
push
or
cmp
xchg
push
jmp
je
cs
loop
fisubr
outs
rcr
jae
jp
(bad)
sbb
into
dec
add
in
pop
xor
jp
inc
les
lods
push
in
lods
cwde
scas
and
mov
and
push
mov
pushf
nop
push
jmp
sub
pop
clc
cmp
jge
mov
inc
shl
(bad)
or
adc
repnz
inc
inc
ret
push
outs
or
ss
sti
push
daa
lea
cmp
ror
cmp
hlt
movs
add
imul
and
mov
jl
ret
scas
jmp
test
or
pop
enter
jb
sar
test
lods
mov
cwde
pushf
clc
xor
mov
or
call
mov
inc
lahf
add
mov
mov
or
dec
adc
jno
test
ja
test
ins
or
push
mov
or
push
bound
ret
xchg
mov
dec
scas
inc
inc
mov
mov
enter
nop
fcomi
or
mov
mov
je
add
sbb
sbb
mov
xor
loop
jmp
test
mov
mov
dec
lahf
and
add
or
xor
not
mov
ret
add
xchg
add
scas
or
push
jl
adc
xor
mov
sbb
add
or
sbb
arpl
adc
mov
dec
bound
or
adc
mov
add
add
add
stos
stos
and
(bad)
or
sahf
das
lods
mov
clc
mov
imul
loopne
pusha
(bad)
sbb
push
add
add
stc
inc
add
pop
and
push
clc
jl
out
cwde
jmp
out
xor
sbb
inc
clc
not
stc
cmp
or
inc
jmp
add
out
or
adc
out
sbb
add
out
push
mov
adc
bswap
outs
mov
retf
inc
push
dec
clc
jg
cmp
add
xor
shl
push
or
lds
push
cmp
clc
add
test
mov
sbb
jb
sti
sub
xchg
ficom
mov
hlt
repnz
and
mov
test
ror
or
frstor
cmp
mov
or
movs
add
out
add
cld
jmp
cmp
je
sub
(bad)
cmp
cmp
pusha
fisttp
cmp
ret
sub
les
and
pop
not
adc
pop
xchg
loope
test
aas
cs
xchg
loopne
sbb
ins
push
push
jecxz
cld
push
cmp
cwde
and
jmp
xor
add
shl
mov
pop
jmp
mov
pop
sub
je
add
add
adc
adc
js
dec
sbb
jmp
adc
add
sub
mul
and
arpl
rol
mov
test
sti
adc
rcl
xchg
js
not
shr
and
cmp
adc
xor
psrad
adc
and
mov
fisttp
fld
nop
iret
in
jle
mov
jae
je
shl
lahf
dec
sub
outs
xchg
aaa
and
imul
push
pop
jmp
aas
ins
ins
lds
loopne
and
push
(bad)
push
xor
mov
and
push
and
mov
xor
cmp
ins
xchg
sbb
lea
ds
mov
mov
and
push
mov
add
adc
fld
mov
xchg
mov
dec
inc
and
xchg
lea
dec
mov
pop
push
jmp
adc
sbb
outs
cmp
add
mov
je
push
push
jmp
mov
and
pop
mov
jl
test
pusha
and
test
ja
in
add
add
aam
mov
mov
inc
mov
and
or
pop
or
popf
fisubr
push
cmp
xor
and
add
cmps
arpl
xchg
sbb
mov
and
adc
or
cmp
mov
cli
repz
pop
mov
mov
pusha
das
sbb
test
mov
adc
mov
retf
inc
arpl
xor
and
inc
mov
test
pop
scas
inc
test
lock
cli
inc
dec
(bad)
neg
jnp
ror
mov
adc
add
inc
sbb
cmps
push
jg
add
add
je
pop
enter
mov
cld
and
or
or
sahf
hlt
add
push
xlat
mov
sbb
dec
sbb
inc
fnstenv
(bad)
pop
arpl
clc
ret
dec
addr16
inc
gs
mov
das
add
or
xchg
sbb
mov
push
sub
sub
sub
push
sbb
mov
bound
mov
cld
mov
inc
lods
js
shr
repnz
(bad)
cmp
sbb
rcl
add
pop
mov
pop
pop
pop
test
fnstenv
scas
in
mov
aaa
std
sub
jbe
push
dec
call
js
jnp
sbb
test
push
push
lock
ror
push
mov
test
popf
lds
add
jp
hlt
pusha
call
push
sbb
cmp
lds
mov
sti
and
push
jnp
cmp
jne
bound
cmp
mov
dec
and
cdq
in
add
xchg
call
shr
sbb
fdiv
ds
or
rcr
les
add
mov
inc
cmp
push
test
sub
adc
cmp
add
add
lock
jge
fldcw
jnp
cmp
or
fs
sbb
cs
jae
ret
push
inc
jge
inc
hlt
cmp
jmp
call
sub
push
call
sbb
adc
jo
mov
stc
push
xchg
ss
test
or
pop
mov
cwde
je
test
movs
stos
push
mov
test
lock
jmp
and
mov
xlat
or
cmc
pop
retf
inc
push
adc
ret
out
or
(bad)
push
push
bound
inc
inc
out
mov
repnz
ret
cmp
xchg
mov
mov
sub
je
cmp
movs
sub
inc
retf
cmp
in
add
test
loopne
xor
adc
sbb
dec
out
sub
or
push
dec
mov
scas
in
ins
jnp
xchg
shl
sub
pop
jmp
(bad)
lock
or
cmp
out
mov
nop
add
cmps
push
cmps
inc
xor
pop
ss
jmp
or
jbe
mov
dec
mov
dec
or
push
or
jmp
or
je
lods
and
push
bnd
outs
jle
pop
mov
mov
repnz
or
push
jo
cmp
jmp
out
push
push
in
js
and
cli
push
call
xor
inc
mov
je
mov
and
popf
mov
push
jmp
mov
mov
or
mov
shl
ret
sbb
pop
in
nop
mov
cmp
ficom
cmp
shl
pop
pop
sub
inc
cmp
cmp
sbb
adc
push
and
ins
mov
mov
aad
inc
mov
xor
adc
push
adc
hlt
pop
arpl
in
pop
cld
mov
xchg
xchg
retf
enter
pop
or
cmc
push
fstp
sbb
cmp
(bad)
jp
mov
jl
jp
hlt
adc
add
retf
test
jl
or
call
mov
and
jne
sahf
sub
setae
xor
test
in
and
add
xchg
xchg
and
pop
dec
leave
imul
push
sahf
pushf
dec
dec
or
js
sahf
dec
sbb
fdivr
sub
dec
ins
mov
cmp
hlt
push
inc
push
xchg
mov
lods
push
imul
(bad)
loopne
shl
and
or
test
push
rcl
rcr
inc
add
lods
mov
adc
xchg
inc
rol
int3
dec
imul
xor
push
stos
or
add
jmp
sub
movs
add
push
push
push
push
or
or
push
inc
mov
or
add
in
sbb
cwde
xchg
inc
lea
pop
stos
mov
shl
adc
test
mov
xor
shl
push
xchg
and
sub
pop
ret
sub
lock
xchg
adc
or
data16
inc
inc
test
jle
test
test
cwde
lock
or
or
retf
sub
cmps
rcl
sbb
and
fistp
retf
ret
and
push
fistp
loope
mov
add
imul
and
in
fmul
shr
cmp
push
lock
push
adc
ror
or
inc
test
pop
imul
xchg
jl
dec
dec
and
pop
clc
add
(bad)
mov
ret
fadd
jae
cmp
sbb
sbb
nop
fist
add
and
sub
cmp
les
ret
jbe
xlat
loopne
std
pop
fcmovbe
push
push
push
cmp
adc
mov
pop
test
dec
mov
or
(bad)
fcomp
shl
and
fnstsw
repnz
cmp
fsub
movs
xchg
mov
(bad)
or
fmul
or
adc
push
or
das
inc
inc
push
cs
push
adc
rol
fist
push
jecxz
outs
add
pop
mov
mov
ins
push
fcom
jle
add
inc
(bad)
frstor
imul
stos
ret
pop
fmul
push
cld
rcpps
mov
pop
and
fild
inc
pusha
or
add
mov
pop
jno
and
test
xchg
sub
call
pop
les
add
push
jnp
dec
xor
add
dec
add
mov
xchg
mov
cmp
jns
lds
rol
imul
movs
mov
mov
push
fmul
stc
test
sub
(bad)
xchg
rcr
in
or
ror
pop
cmp
and
cmp
and
jno
xor
jo
jno
(bad)
fsubr
fild
add
or
in
or
nop
xor
and
inc
or
push
fwait
sub
ja
jae
out
xchg
and
es
xor
push
gs
ins
adc
in
fistp
lods
pop
sub
mov
pop
lea
rep
int
cwde
js
hlt
jne
xchg
xor
clc
add
clc
je
dec
lea
push
retf
jmp
sbb
das
les
add
mov
cmp
cmp
mov
ins
retf
pop
jge
nop
dec
cmp
add
mov
retf
xor
pavgw
jo
pop
enter
xor
dec
test
lea
hlt
sub
add
pop
push
mov
xchg
sub
and
rcl
cld
mov
xchg
or
outs
retf
push
ret
sub
call
dec
cmps
not
fmul
and
push
xchg
push
stc
mov
clc
pop
jg
and
jbe
adc
sub
pop
or
es
fcom
dec
rol
adc
push
xchg
adc
nop
adc
es
jmp
call
xchg
cs
clc
add
stc
inc
gs
lods
adc
repnz
adc
and
aad
or
int3
add
in
push
outs
dec
or
enter
js
push
stos
scas
ret
test
mov
jne
nop
ja
fistp
xchg
repz
rcr
out
sub
out
pop
mov
loope
into
outs
xchg
xchg
dec
das
outs
mov
push
and
sar
or
pop
push
pop
and
retf
jne
int3
fldenv
push
xchg
and
jle
push
push
jo
push
add
(bad)
sti
rcl
adc
fsubr
(bad)
push
movs
icebp
mov
and
mov
not
and
or
sub
mov
cld
adc
dec
xchg
ror
pop
add
test
jl
adc
mov
js
push
adc
add
lock
lea
jno
mov
shl
sbb
and
mov
inc
mov
jmp
xlat
pop
push
pop
adc
or
inc
sub
mov
pusha
push
pop
sbb
dec
les
or
lar
sbb
sti
add
sub
sub
push
sbb
in
inc
or
and
jo
add
adc
and
inc
or
movs
gs
inc
ret
jbe
mov
test
lock
nop
push
mov
mov
rcr
jl
jmp
inc
mov
popw
ss
(bad)
jno
adc
hlt
or
sahf
xchg
add
mov
cmp
xor
inc
push
sar
mov
pop
ins
(bad)
and
mov
and
mov
mov
enter
adc
push
sbb
mov
pop
movs
out
shr
lock
add
adc
imul
adc
in
jecxz
and
mov
sub
jmp
add
icebp
jmp
cmp
dec
int
mov
add
sub
push
mov
movs
jo
xchg
call
dec
(bad)
(bad)
pop
aad
push
sub
sbb
stos
sub
jno
ret
cmp
or
loope
sbb
mov
and
and
sbb
aam
sub
in
js
ret
ins
inc
mov
adc
pushf
inc
sub
loopne
and
and
mov
inc
(bad)
pop
leave
lea
stos
push
ins
cs
cld
stos
and
jg
loop
inc
jb
test
loop
add
adc
shl
mov
(bad)
sbb
lea
mov
jb
sub
mov
adc
popf
jns
cmp
sub
dec
inc
inc
inc
je
add
adc
dec
ds
shl
or
adc
jo
sub
or
and
(bad)
retf
or
inc
pop
mov
xor
cmc
sub
or
pop
outs
adc
and
sub
or
adc
push
inc
mov
(bad)
(bad)
jecxz
mov
call
rol
sbb
ficomp
jae
sub
dec
or
or
fwait
push
loopne
test
pop
jns
jp
mov
idiv
cwde
nop
(bad)
imul
daa
push
dec
stc
xchg
imul
(bad)
dec
arpl
cmp
push
arpl
mov
adc
adc
xchg
and
mov
sbb
fisub
xchg
dec
dec
pusha
rol
pop
nop
hlt
jl
call
and
movs
je
mov
adc
loop
adc
fwait
int
mov
cwde
and
ds
push
jl
push
push
mov
(bad)
mov
daa
adc
pop
cmps
and
xor
adc
adc
xchg
fadd
pop
(bad)
jmp
fsubr
jg
mov
(bad)
neg
xchg
adc
mov
add
inc
loopne
sub
pusha
imul
push
mov
adc
nop
sbb
inc
mov
cmp
test
shr
xchg
sbb
js
push
xor
stos
(bad)
mov
ins
and
fwait
mov
or
ins
mov
scas
js
adc
or
les
cli
push
fnstcw
mov
or
or
dec
inc
repz
fs
mov
adc
sbb
bound
rcr
jo
sub
bound
dec
dec
das
nop
push
inc
dec
adc
ins
sub
push
rcr
xor
outs
or
jmp
mov
sar
sub
jmp
inc
inc
push
adc
pop
mov
cmps
pop
jno
fs
push
repnz
adc
xchg
add
and
sbb
lea
jns
mov
xor
mov
cmp
mov
retf
mov
sub
rcr
push
adc
addr16
pusha
xchg
mov
frstor
test
lock
dec
fs
sub
cmp
leave
xchg
xchg
ins
adc
xchg
jp
or
shl
ss
mov
mov
cs
pop
icebp
js
fimul
inc
jmp
enter
push
(bad)
lods
jo
xlat
dec
cmp
xchg
daa
cli
or
cmp
iret
push
mov
push
dec
jle
mov
pop
cwde
pop
dec
sbb
pop
cmp
xchg
push
clc
lods
sbb
adc
(bad)
setne
daa
ret
mov
push
or
test
adc
and
add
push
mov
loop
pop
mov
push
mov
cmp
cmp
push
loopne
hlt
push
shl
jns
(bad)
pop
push
xor
cs
fsub
add
jmp
mov
or
push
inc
lahf
out
stc
outs
xchg
ret
sub
push
xor
dec
sti
or
push
inc
cmps
xor
xchg
cmp
jb
and
adc
adc
stc
push
sub
adc
push
movs
sub
dec
pop
mov
dec
or
add
and
sbb
push
jp
or
cmps
and
sub
sub
cs
inc
jmp
dec
call
add
inc
test
mov
sub
sub
and
pop
sbb
inc
xor
add
sub
jo
mov
push
shl
fst
out
jbe
iret
fdivr
push
jmp
dec
hlt
cmp
push
mov
sub
xor
daa
sub
pop
dec
pop
pusha
inc
rcr
push
push
cmp
pavgw
and
pop
mov
mov
cli
push
imul
hlt
add
gs
xchg
shl
clc
cdq
xor
(bad)
call
(bad)
(bad)
jp
push
call
jle
xlat
je
into
cdq
or
sbb
push
or
cmp
xor
push
push
add
stc
push
test
or
push
icebp
scas
in
xchg
jle
mov
push
add
adc
and
sbb
sbb
mov
je
ret
jge
adc
or
mov
mov
jmp
push
jmp
rcl
push
mov
xchg
std
xor
pusha
pop
push
jo
hlt
push
push
int
adc
push
sbb
add
loope
mov
cmp
mov
jne
and
xor
pop
jmp
imul
mov
mov
inc
imul
jnp
loope
adc
push
cmp
cmp
add
mov
mov
ss
mov
add
leave
std
xor
cli
or
pop
mov
push
and
loopne
push
sbb
(bad)
or
xchg
mov
nop
je
add
push
add
ror
mov
pop
bound
ins
jmp
jno
xor
loop
sub
in
jnp
push
adc
jns
and
pushf
push
js
sar
dec
or
mov
ficom
hlt
push
out
mov
or
ffreep
push
add
sub
push
rol
push
rol
dec
mov
lea
jg
repnz
cmp
cmps
test
sar
ds
add
adc
push
jecxz
pop
sbb
push
fdivr
push
inc
mov
movs
dec
push
inc
in
outs
stos
mov
gs
add
das
push
lods
pop
add
scas
push
dec
xor
sub
jne
sub
leave
lock
es
lea
mov
cmps
add
sbb
mov
push
mov
or
mul
and
and
push
ins
or
enter
cld
sub
inc
adc
stc
mov
and
in
pusha
cwde
push
sbb
js
cmp
or
sbb
fimul
femms
sbb
jmp
push
retf
or
arpl
cdq
cmps
pop
sbb
lds
mov
inc
xchg
push
pop
xor
mov
les
add
cmp
shl
out
and
js
jle
in
pop
sub
inc
cmps
hlt
mov
lea
push
lea
xor
push
nop
add
xor
sbb
sbb
push
push
mov
xchg
arpl
clc
leave
cmps
loopne
mov
setle
and
sub
ins
and
dec
sbb
int
adc
vpcomd
dec
jno
aaa
mov
add
add
shl
cmps
jb
and
xor
movs
cmp
repnz
cs
add
cmp
dec
rol
jecxz
or
adc
nop
fiadd
pop
inc
ffreep
adc
lods
or
sub
ficomp
test
mov
(bad)
les
sar
jae
(bad)
jl
or
loopne
xchg
mov
test
stc
xchg
push
es
daa
or
or
push
xor
cmp
jmp
dec
movs
lea
jg
adc
sub
pop
enter
test
sub
cmp
in
xlat
mov
jp
xor
clc
(bad)
cwde
shl
or
adc
mov
or
inc
jmp
add
mov
pop
je
and
jnp
gs
pop
dec
sub
pusha
je
add
clc
inc
or
ret
mov
mov
not
shr
and
xchg
or
mov
and
icebp
test
js
adc
clc
inc
cmp
or
mov
xchg
retf
fisub
xchg
jne
bound
cwde
sbb
dec
xchg
pop
movs
xchg
xchg
dec
pop
xchg
and
or
and
sbb
test
pop
movaps
jbe
nop
dec
xor
or
jecxz
push
ret
or
std
mov
push
repnz
fwait
jne
jno
cmp
sbb
das
adc
pop
dec
sbb
mov
jl
lds
or
inc
dec
xchg
push
xchg
add
ret
sahf
or
sbb
xchg
call
pop
fisttp
xor
cmp
inc
inc
push
xchg
and
pop
jmp
or
adc
sbb
inc
sbb
xsha256
cmps
push
js
mov
mov
mov
push
pop
dec
sub
je
and
jg
mov
push
jle
jge
in
lods
sbb
fadd
push
pop
jge
icebp
dec
outs
add
sbb
xchg
adc
pop
mov
push
popa
push
push
inc
mov
mov
retf
dec
mov
imul
push
arpl
xor
nop
enter
push
add
or
xchg
aas
inc
div
cli
cdq
(bad)
ror
sub
add
add
shl
mov
ss
jo
imul
hlt
inc
and
(bad)
jge
stos
xchg
dec
aas
mov
popf
int3
xchg
fadd
mov
push
cmc
adc
add
cmp
popa
js
push
(bad)
pop
mov
mov
sbb
adc
pop
inc
jg
push
mov
jmp
mov
inc
inc
sahf
push
mov
inc
push
or
out
nop
aaa
idiv
pop
mov
test
push
and
out
idiv
loopne
fcmovnbe
test
sbb
cdq
fisttp
fmul
dec
mov
adc
cmp
push
or
inc
rcl
and
scas
hlt
aad
jg
xor
jne
ret
inc
add
inc
mov
dec
icebp
mov
inc
cmp
into
retf
dec
cwde
dec
ret
js
js
dec
push
daa
xor
sbb
cwde
cmp
mov
cmp
mov
fild
lock
jge
push
push
cdq
cmps
es
arpl
movs
inc
adc
inc
xor
xchg
fdivr
xor
ret
lock
sbb
in
jg
shr
xchg
xchg
or
pop
loope
and
or
and
dec
jl
pop
sbb
fbld
jmp
inc
jae
sahf
fadd
in
adc
adc
or
(bad)
sbb
xor
bound
dec
push
xchg
or
add
movs
cmp
add
movs
adc
mov
lea
repnz
pop
es
ins
leave
mov
sahf
sub
adc
add
outs
loop
pop
pop
call
jnp
push
push
xor
dec
int3
dec
add
or
imul
cmps
inc
dec
loop
aaa
call
nop
push
aad
shl
ins
rcr
mov
ds
pushf
or
into
out
mov
or
xchg
push
push
pop
fcmovbe
sub
jmp
push
pop
and
mov
and
es
adc
adc
retf
cmp
sub
dec
push
rcr
cmp
mov
jne
xchg
inc
call
or
adc
and
dec
jl
adc
cld
pushf
pop
mov
ret
jnp
hlt
pop
adc
mov
icebp
mov
xchg
mov
les
call
stc
lods
sbb
dec
aam
dec
call
adc
fld
cdq
movs
inc
adc
inc
xor
inc
add
movs
shl
jae
aam
pop
sar
adc
sbb
add
test
sahf
inc
pop
pop
jns
mov
push
lods
dec
enter
pop
xchg
cmp
xor
sub
jbe
movs
pop
ret
icebp
cdq
xor
push
mov
lods
lods
jb
and
(bad)
xor
mov
add
ret
icebp
add
xchg
cs
rol
ret
add
test
bound
loope
sbb
cmps
mov
les
or
pop
inc
fdivr
je
sbb
push
mov
popf
mov
or
add
sbb
mov
or
push
push
pop
aad
dec
arpl
test
movs
retf
inc
sbb
addr16
rol
repnz
jle
adc
inc
aaa
(bad)
push
test
push
mov
icebp
cmp
je
dec
add
push
push
push
cmp
lea
repnz
add
sbb
in
sub
or
cmp
sbb
and
adc
and
xor
mov
sbb
xchg
inc
sub
pop
or
push
inc
inc
sbb
lock
xchg
push
je
push
push
js
cmp
out
loop
daa
ror
mov
(bad)
inc
dec
das
inc
pop
push
xor
mov
pop
fisttp
loopne
add
dec
jmp
cmp
push
adc
lahf
or
adc
xchg
xor
mov
mov
retf
out
xor
pusha
shl
and
mov
xor
xor
out
ffreep
rcl
mov
add
jmp
sub
mov
loop
adc
add
push
fadd
dec
push
add
jb
pop
call
outs
movzx
jle
jp
sbb
ins
xor
mov
or
icebp
sub
sub
pop
sub
clc
xchg
inc
(bad)
or
jl
adc
pushf
mov
inc
inc
cmp
adc
jb
pop
mov
sub
(bad)
lock
jle
cwde
push
sbb
or
rol
jbe
pop
jmp
repz
and
rol
jne
call
cdq
ret
or
or
or
in
imul
sub
lea
lea
popa
rol
(bad)
or
jle
pushf
cmp
pop
add
std
jmp
cmp
pushf
mov
in
cmps
inc
sub
cwde
loope
cmp
mov
jnp
fiadd
test
or
cmp
jmp
idiv
mov
jnp
add
lods
test
jnp
jnp
mov
mov
cmps
jnp
add
dec
xchg
jl
fidivr
repnz
mov
mov
dec
jnp
add
inc
jg
clc
out
cmp
add
sub
xor
mov
pop
jl
add
loope
loope
lea
push
mov
retf
jp
pop
enter
sub
sub
push
iret
jge
push
or
je
or
push
push
add
hlt
mov
mov
xchg
pop
aaa
out
mov
cmps
sub
jne
add
in
test
jnp
sbb
into
gs
xchg
xchg
jo
pop
inc
mov
call
cmp
sti
(bad)
jmp
mov
or
or
dec
lock
or
enter
inc
hlt
jne
push
jg
or
arpl
aas
cli
pop
mov
sbb
stc
sti
imul
push
popa
jecxz
ret
out
dec
dec
cmp
setl
clc
push
sub
js
push
jne
cs
jb
fdiv
mov
ret
setp
scas
sub
cwde
mov
std
(bad)
lods
gs
stos
retf
dec
icebp
push
cmps
repnz
or
jne
lahf
dec
fdiv
jo
adc
mov
and
dec
pusha
cmp
xor
jno
or
call
or
frndint
shl
xchg
shl
fsubr
mov
pop
dec
or
lea
sub
ins
lods
sbb
data16
sbb
push
add
jae
adc
dec
xor
popa
or
jne
push
pop
outs
(bad)
(bad)
lods
outs
stos
aaa
ror
push
push
or
sbb
ins
sbb
(bad)
push
nop
push
das
icebp
mov
inc
push
xchg
(bad)
push
sub
xor
push
mov
ret
data16
pop
push
fistp
pop
jmp
jb
ret
data16
dec
out
xor
inc
mov
shl
push
sbb
push
fxch
xor
mov
inc
fisubr
mov
sub
sbb
retf
not
mov
inc
jge
cmp
dec
or
add
les
idiv
adc
cmp
cmps
adc
out
sbb
aam
shl
xlat
or
jae
les
jbe
aas
add
add
dec
and
fsubr
jmp
pop
xor
cmps
out
sbb
dec
push
inc
add
xor
gs
out
pusha
fs
aam
dec
sbb
inc
and
push
rcl
mov
pusha
or
xchg
or
shl
add
cmp
add
popf
dec
jns
adc
jb
jg
adc
mov
pop
movs
sub
xchg
ror
call
sbb
imul
mov
mov
pop
mov
call
je
sub
jmp
push
repnz
or
inc
push
aaa
jo
popa
push
(bad)
pushf
jb
sub
push
psubb
push
push
adc
ins
xor
cmp
fs
in
adc
add
fst
fnstsw
push
stos
xchg
ret
jmp
cli
inc
dec
cmp
push
adc
sbb
mov
xor
xor
dec
shr
mov
mov
shl
fstp
(bad)
push
(bad)
jb
imul
in
call
rcr
jmp
je
push
sbb
adc
or
retf
sti
mov
aam
into
jae
aam
test
adc
nop
jmp
daa
pop
cwde
cs
dec
inc
pop
shl
popa
inc
xchg
mov
add
push
xchg
jo
fimul
mov
push
push
adc
pop
movs
mov
and
mov
adc
cs
add
test
imul
popa
sub
in
or
push
push
mov
and
sbb
and
mov
pop
and
push
push
data16
clc
popf
mov
push
xchg
sbb
mov
xlat
fadd
rol
mov
add
sub
popa
out
lods
cmp
je
mov
jg
dec
or
nop
adc
pop
cmps
sahf
sub
or
sub
xchg
pop
push
adc
add
mov
inc
mov
xor
int3
adc
imul
fucomip
adc
aam
or
pop
add
or
xor
popf
int
cli
sbb
jge
hlt
xchg
push
jns
cmps
adc
jl
stos
inc
ja
and
pop
stos
dec
inc
add
sub
movs
pop
jge
xor
mov
(bad)
fld
call
adc
or
jmp
cmp
sub
cmp
mov
sub
jbe
inc
inc
pop
jle
jne
iret
inc
mov
(bad)
and
cld
adc
(bad)
inc
jo
out
adc
bound
mov
cmp
pusha
add
xor
mov
lods
loope
pop
push
and
outs
dec
imul
dec
sub
hlt
mov
call
cmc
ss
adc
lods
imul
aam
or
sub
push
fistp
ins
rcl
push
push
movs
test
inc
push
sbb
mov
push
mov
fcom
lods
int3
mov
pusha
sub
fisttp
popf
movs
test
daa
add
push
mov
repnz
sub
pop
add
push
std
sbb
mov
inc
(bad)
push
push
add
inc
cs
push
push
dec
stos
push
and
sub
xor
mov
and
sbb
ror
adc
(bad)
xor
icebp
push
or
push
jle
sub
and
xchg
ret
imul
adc
push
or
jno
xor
cmp
pushf
mov
ja
mov
hlt
clc
das
xor
ja
jge
loop
jne
inc
cmp
jne
adc
jl
fst
xor
or
xor
and
xor
mov
mov
stos
data16
sub
call
and
in
test
test
push
daa
mov
cmp
add
push
aam
cmps
mov
mov
sbb
movs
sub
lock
es
scas
fcmovnb
sbb
xlat
mov
lods
pop
and
mov
push
aaa
or
aas
aaa
jns
cmp
xor
and
mov
inc
jo
dec
test
cdq
adc
shr
loopne
lock
shl
add
adc
fdiv
int
jne
ret
(bad)
fbstp
xor
mov
xchg
ret
fisttp
leave
loop
cmp
mov
sbb
xor
push
or
inc
retf
pop
(bad)
iret
iret
bound
(bad)
lock
sbb
cdq
pop
pop
add
add
dec
xchg
xchg
lea
add
js
add
sbb
or
in
add
xchg
mov
fldcw
ins
pop
adc
pop
dec
xchg
xor
add
push
add
sub
mov
loope
test
sti
xchg
jle
pop
jge
sub
(bad)
pop
add
or
aad
jecxz
xchg
xchg
mov
pop
inc
aas
gs
push
mov
and
stc
das
and
jmp
or
or
shl
sub
xchg
fiadd
cmp
cmp
ja
jmp
xor
fs
xchg
push
inc
sbb
bound
or
sub
dec
and
nop
or
jmp
dec
fist
dec
or
inc
lea
ins
xchg
and
adc
xchg
outs
(bad)
xchg
enter
loopne
gs
push
sub
cmp
call
add
cmp
fucomip
jle
sbb
ficomp
jmp
imul
or
(bad)
or
rol
shl
jmp
sub
mov
loop
dec
mov
push
cs
out
mov
push
jmp
xor
lock
loope
xlat
jl
or
cmp
or
sbb
push
and
lahf
enter
pop
cmp
xor
cmp
cwde
test
add
bound
popf
push
dec
xchg
ss
cwde
pop
inc
shr
xchg
fld
push
outs
fisub
jno
je
xor
push
sbb
xor
pop
dec
adc
out
pop
or
jbe
sbb
xchg
rol
dec
add
cmp
xor
test
(bad)
pop
(bad)
fcmovnb
and
push
inc
sbb
or
aas
mov
adc
sbb
mov
and
mov
or
push
ret
inc
mov
ret
and
out
add
push
jmp
movs
jle
adc
sub
mov
lock
add
push
jns
jecxz
mov
dec
(bad)
test
aaa
or
push
and
adc
inc
cmp
push
jp
enter
push
fild
std
and
mov
and
shl
add
jge
jb
outs
int
pop
in
hlt
je
mov
or
leave
push
mov
hlt
sbb
shl
dec
push
scas
xor
mov
dec
ss
sub
movups
fadd
mov
sbb
pop
sbb
int
sar
xchg
push
add
fdivr
je
nop
dec
mov
popa
cmp
mov
adc
jnp
(bad)
cmp
scas
mov
push
ret
sbb
push
add
mul
jb
dec
or
in
pop
sbb
outs
pop
pop
shr
mov
mov
into
pop
fidivr
or
push
sub
sbb
cld
xchg
xor
ror
lods
sub
xchg
sahf
mov
push
sub
jge
jns
js
push
or
pop
enter
das
sbb
das
pop
cmp
add
jb
movs
test
add
mov
push
pop
push
adc
dec
into
inc
inc
inc
lea
mov
ret
out
xchg
fldenv
fwait
imul
adc
push
cwde
fdivr
cmps
ja
push
push
xor
jmp
pop
sbb
push
inc
loop
rcr
mov
cmp
jne
or
int3
and
cdq
sahf
stos
pop
(bad)
xchg
xchg
add
retf
mov
jbe
or
pop
je
sub
movs
mov
adc
cld
imul
data16
mov
pusha
je
jmp
adc
sub
fisubr
push
cmp
adc
nop
jne
fisttp
push
fwait
push
jne
retf
sub
and
push
mov
adc
clc
pop
dec
mov
icebp
push
sub
ds
pop
fs
sar
or
mov
sub
shl
shr
xchg
or
(bad)
lahf
jecxz
ret
outs
jmp
add
mov
mov
push
sbb
fild
xchg
mov
xor
mov
sbb
jbe
and
inc
mov
inc
xor
xchg
add
or
adc
ins
loope
push
mov
popa
mov
stos
push
mov
pop
sti
pushf
sbb
pop
loopne
cs
jnp
adc
loop
jb
lods
add
mov
pop
adc
jo
xchg
in
pop
fmulp
popa
jo
cmps
mov
mov
xor
ror
loopne
adc
inc
test
inc
push
aaa
adc
push
pop
or
pop
push
and
ins
(bad)
aas
cs
mov
test
sub
cmp
jnp
xchg
stc
xchg
sbb
jmp
fsub
push
daa
xor
jmp
jmp
lock
into
dec
add
in
stos
aas
mov
bound
jmp
pop
pop
and
daa
pop
pusha
jb
and
maxps
and
mov
add
scas
(bad)
shl
jmp
push
scas
loope
jge
jno
lods
pop
cmp
in
add
push
dec
mov
into
add
inc
sub
dec
ret
adc
jmp
fild
sbb
adc
jne
dec
add
out
fisttp
xlat
push
fild
cmp
shr
push
jge
fstp
repz
lock
repz
fwait
pop
sub
inc
push
pop
iret
repz
jb
mov
popf
cmp
adc
or
mov
xchg
outs
xchg
mov
push
sahf
xchg
out
push
ja
imul
sub
jge
mov
pop
sub
(bad)
cli
rol
add
inc
sub
mov
adc
xor
mov
xchg
dec
cmp
movs
mov
adc
jo
adc
dec
cld
je
adc
cmp
inc
es
pop
adc
retf
mov
push
or
cmp
int
ror
test
pusha
(bad)
xor
stc
mov
push
ror
shr
iret
or
imul
imul
xchg
mov
mov
mov
test
adc
cli
inc
add
repz
jb
or
cdq
popa
sbb
add
dec
inc
test
and
add
mov
fadd
outs
aas
fild
xchg
out
pop
sub
jne
or
push
push
ret
mov
mov
iret
push
jne
aam
in
shr
inc
add
pop
shr
cmp
mov
nop
test
stos
pop
mov
push
pop
popf
sbb
ins
mov
mov
mov
jmp
dec
or
add
cmc
pop
jg
or
inc
in
dec
fcom
(bad)
iret
inc
popf
or
scas
test
inc
xor
loope
inc
sbb
or
popa
pushf
daa
jne
jl
jne
push
xor
lods
or
sbb
lods
sbb
adc
ins
(bad)
fbstp
or
mov
test
add
sbb
jbe
bound
push
adc
test
adc
aam
sbb
pushf
(bad)
je
dec
push
into
jmp
pop
inc
jp
add
or
xor
xor
scas
inc
push
fmul
adc
xchg
and
adc
(bad)
pop
retf
xchg
sbb
and
stos
test
lock
jae
movs
or
adc
or
imul
outs
stos
shl
cmp
jl
push
in
inc
cmp
fld
cmp
jecxz
in
cmp
ins
ins
xchg
adc
add
mov
arpl
lds
push
and
mov
hlt
ret
and
sbb
mov
pusha
inc
xchg
mov
mov
out
pop
pop
clc
ret
adc
mov
sti
fmul
push
imul
(bad)
adc
les
adc
mov
lea
test
sub
call
push
ja
jmp
cmp
push
int
hlt
xchg
dec
rcr
ja
hlt
jecxz
retf
mov
mov
jb
ficom
das
jbe
or
sbb
dec
jne
add
mov
fmul
inc
mov
push
mov
push
dec
mov
mov
shl
cmp
push
xor
mov
fld
into
jo
into
pop
je
inc
mov
fs
adc
pop
nop
(bad)
pop
clc
jbe
sahf
dec
mov
add
jl
jmp
mov
push
scas
add
test
loopne
ins
loope
rcr
outs
dec
addr16
pushf
add
cmp
pop
pop
stos
fsub
add
or
call
aad
push
pop
adc
scas
sbb
nop
xchg
mov
push
push
inc
aas
std
je
test
mov
popa
ret
xchg
movs
mov
fidivr
and
dec
sbb
aam
xor
cmp
mov
adc
sub
adc
sbb
xor
sub
inc
dec
sub
pop
into
lea
and
sbb
push
cmps
retf
imul
add
add
sub
es
inc
mov
pop
inc
aaa
sub
pop
jmp
xor
add
push
adc
adc
sbb
dec
movs
mov
mov
cmp
iret
loopne
or
ficom
or
add
test
ds
adc
or
enter
dec
daa
loope
fdivr
int
and
adc
or
sbb
inc
pop
or
push
rcl
sbb
js
mov
in
inc
mov
lods
leave
push
dec
jo
cwde
mov
les
mov
fidiv
and
mov
fmul
pusha
or
in
daa
ficomp
push
or
adc
cmp
add
push
arpl
je
add
loopne
add
push
int3
push
jecxz
rol
dec
movs
or
push
mov
sbb
fnsave
popa
dec
xor
fcmovu
push
shr
sar
pop
sub
xor
lods
add
adc
mov
das
pop
cld
xor
dec
mov
movs
pusha
call
popf
imul
clc
call
movs
jge
mov
dec
imul
cs
adc
jmp
mov
mov
xchg
push
sti
push
pop
cmp
xchg
loope
xlat
inc
mov
mov
int
cmp
pop
sbb
sbb
push
cmp
mov
adc
xor
test
inc
sub
jmp
mov
push
cmps
sub
jmp
jp
sub
lea
sbb
push
sar
and
sub
je
(bad)
(bad)
shr
nop
jne
imul
jmp
or
mov
cmp
cmps
pop
nop
adc
jmp
and
add
imul
call
mov
fadd
adc
jle
push
test
inc
sbb
xchg
ror
xor
xor
jge
nop
(bad)
xchg
or
call
add
stc
test
in
or
and
(bad)
sub
cmp
jo
add
dec
call
adc
je
pop
inc
nop
add
outs
push
cmp
jne
xor
jmp
mov
and
mov
adc
lahf
xchg
add
push
xchg
movs
sub
lahf
add
push
mov
inc
xchg
(bad)
cld
test
clc
fnstenv
push
add
shr
mov
dec
xor
in
popa
sbb
push
cmps
pop
adc
mov
mov
test
add
cmp
push
xor
stc
mov
xchg
loopne
add
add
inc
mov
and
xor
xor
and
xor
outs
call
das
sbb
mov
xor
add
les
data16
ins
je
or
sbb
and
adc
push
pop
lds
ja
adc
sahf
or
adc
mov
adc
push
clc
cmp
jb
add
mov
push
jb
adc
or
jge
xchg
xor
mov
dec
add
test
icebp
sti
xchg
cs
inc
adc
nop
call
ret
out
jno
or
rcr
xchg
lea
xchg
lds
cmp
je
inc
frstor
add
or
and
add
sahf
jnp
fwait
out
push
fbld
into
call
push
xor
sub
dec
xlat
push
rol
push
sti
ror
sbb
test
gs
cmp
jl
push
lea
movd
xchg
mov
jo
cmp
push
mov
push
loopne
out
adc
stc
cmp
lods
sub
aas
test
data16
push
and
xchg
or
or
dec
inc
and
test
adc
sbb
cmp
adc
xchg
push
jb
pop
xchg
xchg
data16
mov
out
dec
inc
jmp
sbb
mov
push
jb
add
xchg
push
adc
mov
push
push
clc
ss
xor
fs
pusha
imul
push
aaa
popf
rol
daa
push
xor
jmp
mov
cmp
out
rol
cdq
jne
push
jmp
aaa
or
add
fisubr
push
cdq
xor
mov
not
sbb
rcl
and
aaa
jae
sbb
push
int3
push
push
cld
and
push
mov
(bad)
shl
add
mov
pop
iret
in
add
sub
push
mov
or
jbe
add
fidivr
xchg
fs
adc
jmp
dec
inc
enter
or
and
imul
nop
or
jno
dec
neg
je
sub
push
push
adc
xor
dec
push
fcomp
dec
add
mov
lea
mov
clc
int3
push
aaa
movs
movs
outs
fmul
or
mov
rep
sbb
lds
ror
jo
(bad)
call
or
rol
retf
imul
aas
adc
je
lods
es
pop
call
test
out
gs
mov
repnz
xchg
arpl
add
push
jmp
add
pop
ss
cmp
movs
popf
dec
and
cmp
sbb
adc
pusha
cmp
adc
add
inc
jge
test
mov
cmps
cmp
add
push
aad
xchg
inc
mov
fwait
enter
cli
cmp
add
adc
mov
and
sub
je
sub
mov
sbb
rol
loopne
cmp
dec
sbb
cmp
mov
mov
test
dec
fmul
clc
cdq
adc
push
xor
cs
fisttp
dec
xor
mov
sub
add
clc
in
mov
inc
xor
adc
and
aaa
shr
add
push
mov
adc
pop
sub
xor
loope
ret
out
bound
jle
push
jmp
push
ret
push
adc
xor
mov
hlt
jne
ds
loope
clc
and
push
push
cmp
ins
xor
pop
add
loop
jmp
sbb
or
jno
inc
sbb
sub
pop
leave
mov
push
hlt
ret
inc
bound
in
sub
sbb
imul
fidiv
dec
rcl
dec
dec
mov
into
sub
in
sbb
xchg
jl
jnp
mov
enter
mov
or
mov
in
jno
in
ficom
call
xor
cmp
(bad)
cmp
in
and
cdq
fmul
popf
fdiv
pop
enter
mov
in
add
xchg
nop
or
mov
pusha
xor
fadd
cld
(bad)
shl
xor
and
sub
sub
sub
stos
xchg
xor
fisttp
test
pop
aas
call
adc
dec
aad
and
mov
in
mov
js
lds
dec
pop
lock
in
dec
rcr
push
out
adc
xlat
and
and
sbb
sub
es
mov
or
mov
xor
xchg
sbb
jns
stc
iret
add
dec
mov
dec
sbb
ja
mov
ror
mov
lea
into
fnstsw
call
push
add
xor
pop
dec
pop
daa
les
adc
mov
cmc
movs
jge
ss
and
push
inc
xor
out
mov
add
dec
js
or
mov
push
push
and
and
or
dec
dec
jmp
stos
in
mov
dec
sbb
or
inc
stos
or
push
rol
sbb
adc
loope
cmp
jae
xchg
clc
mov
jno
or
fwait
sbb
fist
sub
je
dec
xchg
adc
jmp
xchg
pop
lock
loopne
mov
ins
push
adc
jae
fdiv
xchg
imul
mov
xor
and
mov
jmp
push
dec
xor
jmp
mov
or
or
cmp
scas
and
retf
xor
push
sub
shr
push
lea
xchg
adc
push
pop
pop
ins
mov
add
in
ror
ret
mov
test
(bad)
jmp
jo
dec
shl
pop
je
jnp
mov
jbe
je
out
test
push
mov
dec
inc
mov
stos
jo
or
and
push
inc
push
mov
fld
dec
pop
popf
cmp
lods
(bad)
or
add
add
lods
fdivr
push
adc
ret
mov
dec
and
out
add
add
sbb
popa
sub
les
mov
sub
mov
outs
jl
push
mov
ja
fdivr
sub
je
nop
and
addr16
fcom
jne
call
push
push
adc
cmp
ja
and
sbb
fstp
das
les
je
fisub
test
add
lahf
push
jle
jmp
mov
push
sbb
sub
hlt
push
pop
das
jmp
int
fadd
pusha
test
or
out
push
fadd
and
jno
and
mov
xor
dec
mov
jnp
add
add
rol
pop
pop
pop
push
dec
jmp
imul
inc
sub
push
mov
xor
xor
cwde
je
jmp
pop
pop
mov
shl
pop
mov
clc
int
inc
or
fchs
lods
es
dec
dec
retf
xor
sub
or
jmp
add
ret
lods
jne
in
jo
outs
dec
test
dec
movs
icebp
dec
xor
mov
pushf
add
or
dec
mov
mov
add
mov
cmps
jo
or
lods
xor
xor
repnz
lea
cwde
call
mov
scas
and
imul
rol
push
pusha
sbb
lods
add
mov
mov
ret
std
inc
test
xchg
push
mov
xor
scas
mov
in
xchg
push
cdq
push
sbb
fadd
jle
xchg
xchg
mov
and
push
mov
add
add
mov
and
inc
jnp
inc
push
fdivr
mov
and
and
pusha
in
or
rcr
mov
ss
sub
dec
je
and
fcmovnbe
sbb
xor
das
pop
icebp
rol
mov
std
popa
or
jns
jle
cwde
shl
int3
in
xor
cmp
ret
add
ror
xor
jo
xor
xor
(bad)
jbe
or
inc
mov
mov
mov
out
and
jecxz
jbe
dec
pop
mov
xor
and
xor
inc
(bad)
jmp
shr
popa
addr16
daa
push
cmp
arpl
or
rcl
arpl
add
add
xchg
pop
jmp
push
adc
in
fs
or
cmp
cs
sbb
scas
adc
cmp
add
je
pusha
push
iret
dec
add
mov
mov
jne
imul
xchg
daa
adc
push
sbb
mov
neg
jmp
arpl
test
push
xor
mov
bound
pop
nop
cmps
hlt
push
sbb
add
js
cmp
jne
cmp
adc
ja
les
jno
je
sub
mov
adc
dec
ret
adc
js
sbb
push
jg
arpl
pop
add
xor
inc
xlat
and
sub
sbb
add
mov
inc
fcomp
sbb
pop
addr16
add
jl
sub
dec
push
push
cmc
push
push
ss
cmp
je
gs
jb
pop
cmp
mov
popf
add
aam
jo
fcom
adc
aam
hlt
mov
xlat
jne
xchg
jnp
lds
push
xchg
push
jmp
mov
sahf
and
cmp
jnp
mov
xor
or
cmp
adc
call
rcl
xor
and
and
push
add
mov
xchg
rol
push
adc
and
imul
in
dec
cs
(bad)
push
push
das
je
pusha
pushf
loop
pop
or
dec
add
sub
or
or
enter
sbb
test
cmc
data16
inc
pop
or
movs
jecxz
into
sbb
add
push
lock
enter
xlat
out
and
cmps
bound
pushf
les
cmp
cmp
xor
push
sub
mov
add
dec
ret
xchg
mov
adc
into
cmp
jmp
stos
push
(bad)
(bad)
idiv
and
movs
int
rcl
cdq
test
jo
and
int
jo
inc
addr16
jmp
pop
aam
js
aaa
and
mov
inc
pushf
sbb
mov
push
(bad)
pop
push
adc
push
pop
push
sbb
push
mov
xor
adc
jne
pop
adc
loop
sub
stc
push
push
pushw
xor
push
cmp
pushf
jae
mov
cmp
je
retf
xchg
cmp
sub
test
or
jmp
stc
cdq
push
loop
push
push
pop
jo
scas
mov
cmp
(bad)
jae
retf
sub
rcr
(bad)
jae
jmp
mov
(bad)
aaa
shl
ficomp
je
push
cs
and
mov
out
push
gs
fcomp
add
add
fwait
call
or
cdq
add
(bad)
loope
cwde
mov
push
test
push
add
and
(bad)
jmp
xchg
cmp
and
push
jne
movs
xor
icebp
mul
pop
jecxz
jle
out
rol
or
ds
push
rcr
and
or
sub
mov
mov
xchg
sbb
fwait
test
xchg
push
dec
addr16
sub
add
push
pop
iret
push
sub
js
iret
xchg
add
leave
dec
ror
push
fcmovne
sbb
pop
in
push
ds
jo
mov
in
test
in
mov
adc
xor
dec
jmp
std
jno
data16
sub
sub
push
sub
mov
push
dec
sub
sub
mov
mov
pop
pop
(bad)
mov
bsr
dec
sbb
mov
mov
lds
loopne
jmp
popf
(bad)
stc
sub
push
inc
pop
sub
ret
dec
icebp
pop
push
js
inc
jl
mov
idiv
das
sub
sbb
pushf
in
push
add
dec
push
mov
loop
jp
out
and
cmp
popa
push
xor
dec
push
and
pop
xchg
or
iret
add
js
loopne
dec
push
imul
xchg
sbb
je
sub
aam
and
dec
(bad)
(bad)
mov
or
daa
ja
mov
frstor
ja
je
cmps
leave
and
sbb
(bad)
in
mov
test
or
jle
or
jp
and
jle
ss
add
push
lods
dec
ds
movs
imul
inc
int3
and
inc
push
push
in
pop
inc
imul
xchg
jbe
cmp
mov
xor
fdivr
arpl
xor
mov
mov
push
add
mov
stos
lock
xor
ret
clc
mov
aaa
dec
shl
in
je
popa
xchg
jg
popf
cmps
call
(bad)
push
jmp
sbb
imul
outs
or
popa
ds
rcr
mov
sti
ret
cmp
xchg
xor
or
ret
ja
pop
pop
bound
je
(bad)
jne
mov
jae
or
sub
out
dec
je
dec
int3
jp
scas
mov
jne
push
and
jecxz
push
and
sbb
push
shl
jnp
out
mov
ja
das
fist
cwde
aaa
pop
pop
movzx
outs
jno
icebp
scas
sub
fld
sub
pop
scas
sub
push
push
dec
(bad)
jb
shr
mov
mov
(bad)
adc
gs
inc
xor
adc
shl
lods
xchg
mov
xor
(bad)
jl
xor
jbe
jnp
xchg
ret
jp
in
into
jle
cmp
js
xor
mov
ja
clc
push
pop
je
das
icebp
xchg
fcomp
add
push
push
cmp
cli
push
cmp
mov
push
sub
xchg
outs
xchg
or
add
push
pushf
pushf
adc
cmp
gs
in
or
test
xchg
push
sbb
in
add
nop
mov
call
call
(bad)
(bad)
ret
imul
aas
xchg
jo
dec
adc
idiv
dec
adc
test
dec
test
sub
push
mov
jmp
test
rcl
mov
inc
inc
iret
xchg
dec
scas
data16
pop
scas
mov
push
or
xchg
test
inc
ror
push
sbb
xchg
xchg
xchg
sbb
sbb
add
sti
sbb
adc
xchg
sti
xchg
in
cmp
mov
stos
cmp
inc
adc
jo
push
(bad)
jg
pop
push
movs
imul
add
mov
nop
cmp
push
dec
pusha
dec
or
mov
mov
sub
mov
popf
cmps
and
or
iret
pop
push
in
dec
add
or
xor
outs
sbb
jge
(bad)
into
inc
mov
movs
and
add
or
ss
sbb
pusha
push
add
loop
and
add
ins
sbb
and
xchg
jle
int
stos
cmp
(bad)
jmp
push
push
sbb
or
leave
call
mov
mov
popa
inc
call
add
ret
jmp
xor
or
test
mov
(bad)
je
push
lods
and
and
xlat
rcl
mov
sub
imul
ret
dec
test
push
inc
daa
xor
and
es
or
fsubr
adc
pop
push
mov
or
test
dec
shr
adc
sub
rcl
test
inc
jmp
cmp
sub
cdq
add
ss
dec
popf
stc
fiadd
aam
xor
mov
outs
sub
sbb
cdq
cmp
cmc
and
sbb
sti
cmps
and
pop
jne
push
or
sbb
sbb
mov
or
pop
add
or
push
push
push
test
mov
pop
pop
dec
or
xchg
addr16
xchg
movs
add
cmp
push
rcr
cld
lea
pop
shr
or
mov
pop
(bad)
or
adc
enter
mov
push
sbb
or
pop
add
cwde
hlt
sbb
pop
xchg
dec
shr
sub
mul
xor
movs
lods
add
push
xor
js
xor
mov
mov
lock
inc
push
and
xchg
push
dec
sub
pop
jmp
push
lea
cli
leave
jb
adc
pushf
dec
rol
or
fstp
add
loop
je
cmp
mov
movs
retf
js
inc
and
add
add
out
mov
cmp
adc
mov
or
pop
sahf
dec
push
inc
lea
push
or
das
je
ficomp
aam
aad
mov
mov
test
add
jl
add
sbb
and
push
or
lock
js
fadd
pop
add
sub
or
adc
inc
cmp
into
leave
fisubr
fnsave
pop
jge
dec
bound
cmp
and
(bad)
sub
fstp
and
jmp
add
sbb
or
pop
mov
pusha
test
dec
fist
icebp
mov
push
push
jmp
sub
add
and
lods
mov
icebp
shr
dec
push
sbb
rol
jbe
jbe
pop
xor
cmps
or
(bad)
cli
pop
mov
je
cmovbe
jmp
adc
ds
inc
aam
push
cmp
movs
xor
cmp
and
mov
xor
or
xor
push
aaa
dec
fsubr
add
lods
xor
sbb
push
jae
ror
push
out
push
sbb
sbb
pusha
sbb
cmp
sub
xchg
mov
cwde
adc
sbb
or
add
pop
inc
enter
loopne
int3
xor
and
and
sub
pop
rcl
je
mov
retf
jmp
or
jnp
fcmovnu
rol
add
adc
adc
ret
call
xchg
in
inc
and
adc
xchg
dec
mov
sbb
push
add
inc
sbb
push
lea
jo
push
push
into
test
add
call
and
fldenv
dec
adc
add
and
inc
mov
outs
add
rcr
adc
je
push
leave
into
ins
lock
ror
or
add
rcl
ret
sar
shl
cld
ins
inc
pop
leave
and
cmps
les
and
sub
or
pop
(bad)
iret
pop
add
dec
popa
mov
push
mov
sub
pop
push
push
push
mov
push
push
and
inc
cmp
push
es
ror
fmul
inc
inc
aas
bound
gs
cmp
mov
mov
adc
jno
in
dec
(bad)
aas
or
outs
mov
or
into
push
not
push
(bad)
jne
aaa
sub
cmps
lea
js
mov
mov
add
add
sub
mov
ret
fisub
push
dec
xor
and
mul
and
and
or
and
repnz
int
xchg
dec
push
inc
adc
out
movs
dec
or
inc
ret
dec
push
fst
aaa
xchg
or
xchg
mov
inc
scas
lea
loopne
nop
sub
and
sub
adc
inc
lock
or
adc
fist
sub
add
dec
add
mov
xchg
pop
xor
inc
loope
cmp
mov
sysret
inc
lds
push
adc
and
cmp
cmp
xchg
sbb
dec
and
sub
pop
out
cmp
rol
add
or
je
leave
mov
mov
xchg
inc
adc
inc
or
je
cmp
and
add
push
adc
retf
xchg
and
add
add
ja
xor
inc
mov
jns
std
sub
adc
shl
loopne
cmp
inc
adc
loop
dec
pop
dec
aas
adc
call
push
xor
icebp
ret
pop
fidivr
pop
xor
adc
mov
pop
loop
cmp
ins
mov
in
push
xchg
cmp
add
rol
pop
jb
clc
movs
les
mov
xor
cmp
adc
push
sub
mov
arpl
aaa
dec
lods
adc
add
in
js
jecxz
ds
mov
leave
add
add
add
mov
xor
popf
sub
nop
mov
and
dec
adc
enter
push
xor
pop
enter
fmul
adc
retf
xor
add
loop
mov
and
jg
and
sbb
call
xor
test
mov
cmp
jne
mov
push
nop
ret
hlt
add
sbb
bound
es
dec
cmp
mul
or
in
es
push
xchg
xor
fld
push
cmps
mov
or
jle
aas
jmp
(bad)
jmp
sbb
jge
rol
and
jno
scas
cmp
inc
stc
jmp
sub
sahf
add
jae
daa
inc
sub
sahf
inc
add
ror
mov
div
sti
cmps
xor
out
test
jge
jae
(bad)
jmp
ins
pop
pop
xor
push
rol
cmps
sub
sbb
clc
loopne
add
sar
fs
rol
inc
popa
pop
push
dec
dec
cld
mov
dec
mov
inc
adc
test
or
mov
jmp
cli
add
sbb
test
inc
adc
les
add
or
inc
and
and
and
test
bound
push
jo
xor
iret
push
inc
and
or
test
or
(bad)
sub
or
xor
loope
lods
(bad)
xchg
test
inc
pop
and
xchg
add
xor
call
adc
adc
add
outs
cmp
ror
mov
inc
adc
in
push
or
mov
add
test
add
in
push
push
push
mov
jl
jbe
bound
jge
stos
push
cmp
sub
add
or
and
call
dec
ret
sub
lea
(bad)
add
stos
pop
ds
pop
mov
sub
inc
add
mov
inc
aam
add
(bad)
fs
dec
cmp
iret
mov
mov
and
lods
bound
hlt
add
xchg
dec
xlat
sbb
mov
call
mov
mov
xchg
mov
sub
fbstp
sti
or
pop
mov
retf
push
mov
and
fild
ret
enter
cli
and
add
sbb
or
xor
popa
jae
rol
or
jecxz
sub
push
xchg
ja
sub
lock
dec
jmp
or
test
add
add
lea
mov
clc
mov
jbe
jle
dec
mov
or
mov
pop
bnd
bound
xor
not
and
pop
adc
adc
mov
bound
inc
sti
retf
rol
jp
jne
shl
adc
or
sbb
cmp
into
lahf
adc
out
inc
add
push
push
(bad)
cmp
add
ret
aas
add
lods
mov
mov
push
sti
add
ret
add
sbb
mov
sbb
scas
shr
out
je
mov
ret
out
addr16
call
sub
push
ss
sub
rol
adc
or
push
or
mov
push
xor
call
cmp
cmp
daa
and
push
push
clc
sub
lock
add
pop
daa
mov
inc
push
adc
and
pop
adc
ds
mov
mov
lea
stc
add
popf
ss
inc
sbb
loope
push
or
and
sub
inc
and
inc
pop
add
popf
mov
pop
lods
push
mov
xchg
mov
fcom
ret
out
shl
xchg
cld
jo
stos
js
push
call
and
fbstp
sbb
dec
push
push
fcomp
or
mov
pop
add
stc
leave
lods
pop
add
push
pop
pop
jae
adc
adc
push
rcl
sub
pop
push
cld
(bad)
loop
xor
outs
or
push
inc
sub
adc
test
dec
pop
inc
or
adc
xchg
add
sub
dec
sahf
xor
adc
and
inc
in
nop
xchg
ret
ror
fisub
loopne
push
call
(bad)
dec
lods
add
arpl
xchg
xor
xor
mov
repz
pop
loopne
push
mov
and
push
div
cwde
mov
cmp
lahf
(bad)
and
inc
push
inc
imul
inc
test
push
sbb
fisubr
mov
mov
or
sbb
inc
ja
xchg
popf
sub
in
push
sub
mov
sbb
mov
push
inc
mov
je
fnsave
mov
(bad)
mov
leave
inc
cmp
mov
add
in
iret
push
inc
lods
movs
bound
in
push
arpl
pop
dec
sub
inc
jae
aas
push
and
and
or
add
mov
add
dec
(bad)
xchg
cs
mov
push
retf
and
jbe
sub
pop
xor
push
rcl
jne
pop
push
cmp
cmc
adc
push
cmp
pop
ss
pop
retf
add
aas
and
add
mov
xchg
sub
or
sub
pop
pop
mov
iret
jne
and
and
adc
inc
and
call
test
xor
adc
sbb
add
push
cwde
sub
add
lods
sub
int3
rol
in
jp
sbb
push
adc
sub
inc
dec
jo
push
sbb
ror
stos
lds
add
inc
sub
cmp
or
xchg
or
or
dec
or
adc
and
mov
and
push
or
fadd
or
sbb
inc
test
rcr
push
mov
leave
inc
or
clc
cmp
inc
inc
ret
cmp
hlt
and
bound
mov
mov
mov
add
push
ins
lea
aaa
daa
(bad)
adc
jae
ret
sbb
fs
daa
pusha
mov
add
jmp
sub
xor
enter
add
jnp
push
pop
or
pop
add
add
push
xlat
cmp
push
push
int3
mov
xor
jno
lock
cmp
sub
ja
pusha
cdq
adc
je
dec
hlt
or
adc
jmp
or
sahf
test
mov
push
loope
jo
test
pop
icebp
sub
or
and
shl
and
pop
icebp
scas
inc
daa
push
dec
pop
fld
pop
(bad)
cmp
mov
add
test
mov
call
inc
and
jo
pusha
add
add
jmp
pusha
adc
test
pop
push
in
ficom
sub
mov
pop
dec
sbb
lods
inc
jecxz
enter
pop
push
mov
sub
push
call
movaps
add
add
add
add
fwait
xchg
cmp
pop
push
rcl
fstp
pushw
gs
or
dec
js
cmps
add
jle
sbb
mov
sub
scas
add
sub
and
mov
push
cmps
inc
fwait
les
movs
ss
add
adc
jp
repz
cmps
pop
push
mul
jo
inc
data16
scas
les
lock
and
lods
in
push
sub
pop
icebp
sub
xor
stos
jg
jmp
dec
push
pop
mov
popa
jecxz
sub
lea
(bad)
aam
mov
outs
and
mov
add
and
rcl
pop
pop
int
adc
cmp
fsub
inc
arpl
leave
and
test
dec
call
adc
(bad)
lock
mov
jmp
iret
das
lods
and
mov
xchg
mov
jl
jne
call
in
jle
adc
inc
outs
loope
mov
in
xor
shl
push
jne
add
and
mov
aam
pusha
mov
movs
sar
je
call
sub
movs
and
pop
es
outs
scas
rcr
jmp
and
sbb
cli
add
add
lock
shr
add
mov
push
sti
jle
push
bound
inc
add
aas
in
cmp
pop
inc
dec
pop
mov
mov
in
jae
xchg
mov
add
sbb
xor
rcl
pop
call
jne
inc
je
or
les
or
xor
adc
add
lea
mov
adc
inc
js
or
jg
push
movs
dec
cmp
fdivr
movups
jmp
fld
adc
call
cwde
imul
cmp
dec
cli
cmp
fdiv
leave
jne
pop
and
cmp
into
inc
jbe
cmp
sbb
sbb
loop
stos
adc
inc
(bad)
add
sub
hlt
cmp
js
cmp
and
mov
adc
jp
aaa
sbb
sub
mov
es
test
les
rcr
mov
ficom
add
xor
ins
add
mov
je
in
lock
icebp
and
xor
sbb
out
adc
jl
cmp
jg
push
(bad)
out
dec
dec
mov
push
rdtsc
inc
inc
cmp
jge
push
mov
mov
jmp
ja
jb
dec
test
mov
push
inc
nop
mov
and
mov
out
outs
mov
fisttp
cmps
in
nop
inc
inc
cmp
inc
fcomp
aas
inc
jmp
jmp
push
push
imul
clc
jmp
jmp
xchg
jmp
sub
push
fsubr
cli
push
cmp
and
add
push
idiv
adc
pusha
daa
popf
dec
pop
aam
in
lods
mov
mov
add
push
je
mov
xchg
xlat
in
mov
push
xor
stc
push
sti
ss
xor
or
add
sub
pop
fmul
sub
aad
rol
dec
dec
xchg
add
adc
push
add
cmp
in
adc
dec
and
cmps
test
les
rcl
pop
and
xor
nop
inc
push
icebp
sub
push
pushf
xor
push
aam
shl
mov
movs
je
push
xor
scas
mov
fs
inc
jb
mov
dec
jmp
in
pop
pop
inc
aas
fcom
adc
add
cmp
jo
sub
pop
push
and
xchg
test
push
add
sar
rcr
mov
fdiv
mov
push
xor
add
add
push
hlt
and
pop
push
dec
xchg
xchg
ret
jno
outs
popa
push
loope
push
inc
pushf
bound
(bad)
add
push
stos
sub
pop
test
pusha
inc
in
push
push
popa
inc
or
arpl
adc
cdq
jp
inc
inc
add
and
neg
js
shl
inc
and
sahf
ja
dec
mov
pop
(bad)
arpl
or
sbb
loop
cmc
adc
mov
xor
scas
or
and
push
cmp
jne
fnstenv
f2xm1
xchg
mov
leave
loop
push
jg
sub
push
daa
inc
mov
mov
and
xor
adc
test
mov
and
stc
pop
inc
shr
add
push
push
ror
pop
add
clc
ret
add
push
test
fdiv
loop
sbb
inc
aaa
cmp
adc
cdq
std
enter
mov
sub
mul
sahf
in
gs
adc
fistp
jne
sub
icebp
jnp
push
fmul
push
pop
add
ret
loop
mov
mov
mov
ds
add
hlt
ins
push
les
in
outs
popa
lahf
jo
fisttp
xchg
cld
jge
outs
jne
push
retf
xlat
shl
pusha
fwait
sub
jmp
into
xor
sbb
mov
(bad)
jge
inc
test
add
nop
inc
mov
mov
nop
mov
pop
clc
addr16
xor
test
adc
push
mov
test
aaa
movs
mov
shl
and
xor
push
adc
push
push
bound
idiv
mov
pop
inc
and
push
mov
out
adc
imul
sbb
push
leave
lock
adc
sbb
es
push
adc
jo
imul
xchg
inc
cwde
push
adc
enter
xchg
jmp
popa
push
sbb
push
add
pop
push
leave
cli
das
mov
test
sbb
gs
inc
add
sub
ret
mov
xchg
xlat
pop
push
jmp
in
out
add
mov
enter
jae
pop
inc
fdiv
pop
jne
clc
sbb
in
push
push
push
and
test
add
rcr
push
ret
mov
ins
push
add
addr16
pop
ret
je
sti
sub
mov
fdivr
cmp
sbb
mov
mov
outs
hlt
add
inc
xor
xor
mov
jmp
add
fld
leave
dec
add
mov
inc
(bad)
sub
inc
push
(bad)
push
pop
ret
and
dec
adc
sbb
fdivrp
push
mov
or
jmp
sar
dec
add
sbb
pop
iret
sub
push
ins
or
ror
je
dec
pop
cmp
js
cmp
(bad)
xchg
add
sub
push
add
in
aam
fadd
push
add
sub
les
mov
lock
retf
out
adc
jne
push
mov
xchg
cmp
mov
mov
mov
in
xor
jmp
xchg
mov
repnz
add
es
add
jge
or
sub
mov
test
and
and
leave
adc
popa
xor
scas
xchg
test
ret
push
pop
dec
mov
(bad)
mov
test
loop
xchg
ror
ds
pushf
gs
jmp
or
sahf
ds
sbb
push
pop
mov
push
mov
mov
test
xor
fs
mov
mov
out
push
fmul
retf
add
ss
push
ret
jl
hlt
retf
cdq
ret
(bad)
fiadd
rcl
ins
mov
ins
(bad)
jmp
daa
inc
cwde
xor
xchg
and
cmp
jne
sub
pusha
adc
push
or
dec
enter
mov
inc
push
inc
inc
mov
and
sbb
out
in
retf
sub
out
ret
or
repnz
push
fs
arpl
ins
add
sub
mov
sbb
push
cmc
popa
push
add
and
xor
mov
mov
mov
jo
and
cmc
mov
cmp
mov
jmp
mov
fisub
sub
nop
inc
es
mov
sub
mov
popa
dec
pop
lock
sbb
scas
sar
rol
lahf
mov
inc
push
or
and
ror
and
pusha
inc
xchg
popa
jg
fs
sub
xlat
mov
enter
push
push
clc
fcom
and
and
mov
shr
or
call
movs
shr
or
jecxz
adc
xchg
retf
test
lock
mov
push
mov
pop
and
daa
mov
pop
rcr
daa
popa
mov
mov
adc
and
mov
pop
les
jmp
movs
pusha
in
or
outs
push
lea
sbb
add
inc
or
ins
mov
outs
ret
mov
mov
rcl
cmp
adc
rol
cmp
mov
enter
test
jg
rol
jnp
pop
add
dec
jg
loope
imul
mov
lds
pop
xor
or
or
pop
or
lods
mov
stos
js
push
push
iret
cwde
ret
mov
push
daa
push
rol
mov
(bad)
ret
fistp
push
out
rol
jnp
xchg
dec
inc
adc
adc
cmp
adc
nop
xchg
push
dec
in
push
add
loope
stc
jbe
mov
or
in
inc
vprotb
pop
mov
xchg
aam
sub
mov
push
sar
mov
lea
aam
or
push
sbb
pop
mov
dec
pop
lds
sub
sub
sbb
pop
shl
adc
mov
push
test
add
xor
mov
sbb
inc
sub
jbe
jg
sbb
mov
ja
lds
xchg
fs
inc
sub
push
mov
mov
call
sub
ror
movs
sbb
or
xor
bound
mov
test
dec
add
pushf
sbb
mov
std
sbb
jge
push
adc
ja
cmp
out
mov
push
nop
aaa
push
test
or
fadd
sub
jae
shr
adc
push
sub
or
lea
add
dec
sbb
pop
sub
mov
xchg
mov
push
or
mov
adc
sub
dec
mov
ins
bound
jo
adc
add
ja
adc
xchg
arpl
pop
sbb
nop
js
mov
adc
jb
inc
sti
scas
lock
xor
jmp
fadd
xor
sbb
rcr
or
imul
sahf
(bad)
lahf
scas
xlat
mov
pop
daa
mov
push
ret
add
xor
and
dec
jne
pop
shr
out
or
and
push
mov
cmp
jmp
push
bsf
mov
sbb
jl
mov
mov
enter
shr
xchg
adc
sub
mov
and
adc
mov
rcl
test
mov
cmp
inc
inc
cmp
sbb
cmp
or
lock
add
mov
(bad)
mov
pop
add
cmp
cmp
test
in
pop
repz
rcl
xor
add
cmp
lock
and
adc
mov
push
int
push
or
mov
mov
les
test
push
add
push
fidiv
pop
jno
mov
fwait
call
leave
fdiv
push
xchg
sub
pushf
cmp
imul
js
xchg
pop
adc
dec
retf
in
mov
pop
dec
xor
mov
and
mov
test
(bad)
mov
fidiv
add
and
std
jge
xchg
test
push
mov
mov
or
sbb
(bad)
idiv
inc
sbb
jl
rcr
mov
adc
push
xchg
(bad)
push
dec
lds
inc
pusha
or
and
inc
push
cli
inc
imul
cmp
sbb
retf
add
ret
mov
mov
xchg
addr16
sbb
js
(bad)
icebp
aaa
inc
shl
test
inc
sub
sub
add
mov
push
dec
movs
adc
clc
add
loop
jle
jl
pushf
jns
jo
shl
add
xlat
pop
clc
daa
or
sub
inc
lods
cmp
repnz
xchg
pop
lds
mov
pop
mov
or
rol
fstp
aam
enter
fdivr
(bad)
mov
mov
add
and
fs
(bad)
cmp
push
push
mov
inc
test
pushf
add
retf
xchg
loopne
jae
aas
out
and
push
and
mov
adc
add
scas
inc
sub
inc
jmp
popf
push
aam
les
xor
sbb
xchg
pushw
dec
or
jg
add
shl
dec
pop
rol
jae
test
or
mov
xchg
mov
sub
(bad)
dec
dec
repnz
jo
nop
out
mov
and
(bad)
scas
mov
or
pop
and
xchg
push
push
cmp
inc
cld
push
repz
adc
inc
stc
add
int3
cmp
cdq
loope
add
bnd
mov
cmp
les
xor
cmp
enter
lods
adc
push
or
aad
mov
dec
and
xor
pop
xor
xchg
jle
inc
jno
push
push
rcr
jmp
pop
popf
mov
ficom
or
pop
push
repz
ja
pusha
ror
mov
add
sbb
or
cmp
mov
mov
mov
pop
mov
push
add
rol
and
xor
dec
push
dec
loopne
cmp
ins
adc
retf
inc
ret
sbb
in
cld
ins
ins
xchg
in
push
retf
sub
inc
cli
and
xchg
(bad)
pop
mov
sub
cmp
mov
(bad)
icebp
sub
call
push
(bad)
sub
gs
or
dec
and
daa
mov
sbb
inc
add
inc
loop
and
test
inc
xlat
in
jle
int3
in
cmp
adc
out
jo
jne
push
or
jg
and
sub
inc
fsubr
xor
jecxz
add
add
push
rol
bound
jge
inc
dec
push
xchg
or
nop
adc
js
mov
push
push
fsub
or
adc
cmp
sub
call
push
mov
sbb
mov
shl
mov
jo
xchg
out
sar
lods
mov
adc
pop
mov
test
sub
inc
or
pop
cmp
add
in
adc
or
mov
adc
sbb
(bad)
and
loope
add
and
sbb
sti
push
sub
jo
lea
add
retf
loop
push
inc
or
mov
nop
jo
sti
and
or
popf
mov
call
imul
and
es
add
ret
push
cwde
or
data16
mov
(bad)
xor
iret
sbb
sbb
sbb
adc
es
pop
out
into
push
js
jb
sbb
jl
test
dec
nop
xor
cmp
mov
inc
pop
movs
inc
rol
lock
sbb
push
push
jo
push
push
adc
rol
pusha
xchg
xchg
ins
xchg
adc
jmp
jmp
call
push
aaa
scas
push
shr
in
ds
mov
mov
retf
xchg
pop
dec
pusha
mov
sub
pop
inc
loop
jp
(bad)
aam
pop
shl
mov
icebp
pop
jno
cmp
dec
dec
ret
push
cdq
data16
lock
push
mov
loopne
push
inc
mov
or
cli
inc
sub
dec
sbb
jnp
xor
or
neg
push
and
popa
movs
icebp
dec
jmp
cdq
cmp
add
sar
ins
inc
aas
dec
fs
sub
or
or
inc
pop
gs
sub
sbb
or
imul
ins
cli
sub
pop
or
mov
sbb
add
sbb
xor
xor
not
enter
mov
mov
add
call
stos
add
dec
mov
lods
push
adc
shl
aam
jecxz
loopne
ja
add
gs
lods
(bad)
xchg
and
adc
jns
dec
bound
call
and
dec
add
cld
rol
add
jo
mov
and
cmps
jno
add
jle
mov
mov
add
sahf
dec
or
mov
xchg
mov
mov
punpckldq
nop
cld
aam
xor
pop
aam
shl
push
mov
aad
mov
jo
out
aam
aam
xor
xchg
pushf
loopne
sub
dec
cmp
out
jecxz
in
sti
(bad)
jge
call
adc
pop
fst
and
inc
push
mov
daa
or
out
add
aad
pop
je
test
clts
cmp
inc
lds
inc
sub
xor
fnstcw
add
add
and
or
test
pusha
inc
inc
js
pop
mov
adc
lahf
(bad)
add
inc
cmp
xchg
jmp
cmp
dec
mov
daa
inc
sub
mov
pop
inc
dec
xchg
hlt
pushf
jbe
xor
push
push
mov
ret
fnstcw
cld
dec
clc
inc
xchg
or
add
xchg
fcomp
add
push
and
push
or
pop
cld
adc
mov
dec
mov
movs
ret
push
jmp
popa
xchg
add
js
scas
mov
sbb
ins
cmp
int3
push
push
dec
push
inc
test
mov
and
mov
in
xor
in
and
js
retf
rol
nop
mov
fadd
and
mov
mov
test
or
imul
mov
adc
and
ret
inc
inc
bound
mov
or
xor
jns
loopne
cdq
and
and
adc
and
add
dec
mov
mov
mov
(bad)
lods
jg
pop
imul
pop
call
sbb
leave
fs
jmp
or
cs
cs
mov
jo
shr
sub
leave
inc
cmp
rcl
cmp
add
push
or
dec
push
mov
mov
dec
and
sbb
inc
mov
lahf
and
pop
dec
aad
and
add
pop
sbb
add
inc
adc
enter
enter
or
xor
add
into
lock
loopne
push
adc
pusha
push
jl
xchg
add
sub
ds
inc
fild
movs
rol
adc
jnp
mov
adc
cmp
adc
outs
xor
cmp
loope
lock
add
jns
(bad)
fstp
fld
fcomp
sbb
xor
xor
nop
mov
jae
scas
cmp
fsubr
adc
push
push
lods
sti
xchg
mov
je
dec
adc
jne
jnp
jge
pop
inc
xlat
mov
push
xchg
lock
xchg
add
iret
mov
sbb
sti
gs
(bad)
jbe
xchg
dec
xchg
(bad)
(bad)
jne
stos
je
xor
cmp
mov
sbb
push
mov
movsx
(bad)
jmp
or
push
mov
pop
dec
adc
inc
pop
adc
bound
push
push
data16
gs
popa
dec
sbb
inc
mov
std
add
hlt
add
or
dec
cld
clc
sar
test
ret
cmps
retf
jno
mov
sbb
data16
adc
fiadd
hlt
adc
in
inc
mov
test
push
(bad)
aam
stos
mov
inc
popf
loope
dec
pop
(bad)
sub
dec
pop
cs
jne
adc
movs
xor
fcmovnu
mov
dec
or
sub
and
add
push
or
fsubr
idiv
or
lods
rol
(bad)
lds
jg
and
cmp
inc
xchg
loope
retf
or
cld
dec
xor
jo
mov
clc
and
cdq
retf
daa
cld
sbb
xor
std
retf
clc
lea
retf
mov
or
inc
xor
pop
or
inc
push
pushf
clc
lods
mov
loop
sar
dec
enter
in
or
xchg
push
sub
lea
dec
loope
and
or
or
pop
xor
adc
fisttp
push
sbb
inc
jo
add
and
ins
pop
call
pop
mov
les
mov
push
pop
aad
jmp
es
or
push
enter
dec
lea
das
loopne
sbb
inc
add
nop
mov
add
(bad)
mov
add
sub
ins
add
push
mov
ret
adc
push
rcr
fsubr
xor
fsubr
and
dec
clc
mov
fisub
dec
fdivr
stos
mov
(bad)
jbe
jg
(bad)
nop
aas
movs
mov
mov
lock
cs
sbb
mov
push
call
stos
int
inc
push
mov
inc
or
jbe
iret
js
xchg
neg
js
dec
fisub
mov
ds
rcr
cmp
sbb
aam
loopne
jl
imul
mov
enter
mov
test
or
and
lock
xchg
inc
sbb
inc
loop
xor
pop
sbb
outs
loope
or
xchg
fsubr
iret
mov
popa
sbb
mov
jg
lds
in
in
mov
lods
bound
loop
aad
push
xor
ficom
adc
loop
ror
cmp
push
xor
adc
jmp
mov
xlat
jecxz
lods
pushf
aaa
mov
shr
daa
pop
ins
jecxz
in
in
enter
in
in
in
ret
sbb
aad
xchg
or
sbb
mov
popf
sub
aaa
pop
jbe
mov
aas
pop
enter
sbb
mov
inc
mov
sbb
in
loopne
or
clc
inc
daa
int
dec
fbld
lods
sbb
and
xor
xchg
fnstenv
push
push
sbb
dec
ds
sub
dec
in
in
in
mov
sub
xchg
in
(bad)
mov
adc
jmp
pop
out
mov
mov
mov
fisub
adc
shl
ins
mov
sub
int3
adc
movs
inc
cwde
sub
rcr
in
jnp
sbb
clc
dec
nop
fidiv
enter
out
add
out
jecxz
mov
pop
outs
je
shr
movs
adc
je
pushf
adc
and
inc
adc
pop
inc
clc
loopne
pop
nop
out
clc
in
inc
add
call
popa
mov
add
aas
loopne
clc
jp
jmp
pop
mov
jp
pop
jl
xchg
adc
push
mov
mov
es
push
jmp
jp
aad
jg
test
js
aad
sub
push
enter
add
or
inc
or
jne
(bad)
(bad)
mov
je
inc
and
fidivr
push
mov
or
add
and
call
dec
test
add
popf
mov
ins
push
jo
mov
push
push
cmp
jns
popa
mov
cld
mov
sbb
sub
in
adc
mov
inc
pop
mov
sbb
stc
ds
cwde
in
push
inc
mov
shr
mov
jp
or
add
mov
xor
xchg
pop
in
pop
sub
fadd
aas
test
mov
sub
adc
inc
pop
and
int3
pop
dec
in
retf
paddq
dec
jg
in
mov
add
jg
adc
mov
pop
scas
inc
out
mov
mov
pushf
pop
cwde
pop
nop
push
pop
xchg
dec
xadd
xor
fild
xchg
cs
out
aas
add
out
mov
iret
pop
mov
dec
call
fimul
and
xchg
and
dec
lock
lds
adc
lock
mov
imul
pop
repnz
cmp
jb
jb
fsub
push
lock
add
and
sti
mov
cmp
dec
inc
push
in
pop
jo
inc
push
in
mov
or
dec
rcr
pop
xor
in
outs
aam
adc
sbb
sub
push
outs
push
cmp
cld
pop
jb
pop
mov
test
dec
mov
or
dec
push
push
mov
ja
jg
sub
icebp
push
pop
cmp
jb
cmp
and
jb
in
in
jb
pop
jb
in
in
pop
jb
pop
in
in
in
and
jb
in
in
jb
pop
jb
in
in
pop
jb
pop
in
in
in
and
jb
in
in
jb
pop
jb
in
in
pop
jb
pop
in
in
in
and
jb
in
in
mov
in
sbb
jmp
add
sub
sub
loope
movs
or
pusha
repz
sbb
call
enter
test
sub
shl
and
fild
xchg
dec
sbb
mov
into
lahf
(bad)
dec
mov
cmp
in
push
je
loopne
das
mov
inc
ror
or
pop
leave
pop
and
or
addr16
test
loopne
add
or
fidivr
adc
pop
push
inc
pop
add
(bad)
adc
sbb
jge
or
lea
pusha
sar
adc
je
pop
lods
add
div
xchg
xchg
dec
pop
jo
pusha
inc
imul
shr
cs
iret
pusha
jo
push
inc
xor
sbb
cs
pop
pop
mov
lahf
pop
icebp
les
nop
rcl
fcomp
mov
pop
(bad)
lods
inc
sub
push
push
rol
aas
xchg
pop
push
aas
ja
mov
mov
lahf
mov
add
mov
push
or
mov
push
jg
std
pop
mov
pop
mov
les
scas
outs
aam
sbb
pop
adc
pop
inc
cmp
inc
cli
push
enter
aas
shr
and
push
mov
ss
adc
mov
adc
and
push
push
fistp
retf
adc
popf
push
lods
inc
cmp
pop
push
fldenv
push
lock
cwde
sti
ffreep
aas
xchg
jnp
xor
bound
lahf
(bad)
jle
add
ins
pop
xchg
out
retf
loopne
or
bound
add
lods
jmp
inc
add
cmp
inc
lods
mov
pop
adc
cmp
sub
or
adc
cmps
pop
and
add
mov
add
in
sar
xor
pop
dec
xor
xor
inc
add
lods
rcr
mov
cmp
rcr
(bad)
lahf
sub
std
mov
adc
sahf
sub
es
jns
test
and
or
mov
sub
aas
pop
aas
ja
ss
in
add
(bad)
pop
add
arpl
mov
pop
mov
add
sbb
fcomp
outs
cmp
xchg
dec
dec
inc
in
sbb
(bad)
jecxz
and
jecxz
aas
iret
push
add
inc
aam
pop
xchg
adc
inc
clc
mov
mov
and
push
and
fsub
aam
add
lahf
dec
shl
push
les
mov
mov
or
jg
test
adc
xor
fistp
and
adc
add
pop
pop
es
push
adc
mov
and
mov
fcomip
sub
stos
and
add
xchg
dec
dec
add
add
ret
adc
and
add
push
pop
inc
jb
mov
jg
fcom
ins
mov
sub
push
ret
mov
lahf
pop
pushf
jl
inc
pop
js
aas
call
mov
push
sar
fistp
add
xor
sti
jg
cli
adc
push
cmp
inc
ror
inc
dec
sti
fsub
adc
inc
dec
sar
cmp
je
and
cdq
jbe
adc
dec
xor
mov
mov
push
(bad)
sub
ret
or
or
cmp
sbb
pushf
jno
rcl
pop
aas
xor
pop
stos
sub
adc
aam
adc
inc
sbb
add
mov
mov
les
add
and
cmp
fadd
enter
push
or
sbb
dec
pop
add
and
jbe
xchg
aaa
rcr
or
pusha
add
and
test
es
(bad)
in
repnz
or
sbb
pop
fsubr
xchg
test
sbb
or
add
and
repz
xor
adc
pusha
aas
xchg
jl
cmps
adc
nop
mov
dec
pop
mov
inc
push
or
mov
inc
pop
sub
aas
and
leave
inc
mov
pop
or
cmps
es
add
xor
sub
xor
jl
nop
xchg
dec
cmp
adc
dec
cwde
in
or
dec
fadd
(bad)
fbstp
xchg
push
dec
(bad)
fdivr
icebp
sbb
hlt
or
fisttp
cs
out
shr
cdq
cdq
in
fisubr
lds
dec
or
xchg
dec
repnz
(bad)
rcl
pop
and
iret
cwde
mov
sbb
or
adc
imul
mov
add
sbb
mov
adc
push
push
(bad)
out
inc
aas
loop
rcl
adc
pop
scas
movs
jae
inc
div
jnp
push
punpcklwd
mov
lods
mov
inc
movs
fstp
movq
fsubr
mov
aas
jg
pop
rcl
sbb
test
or
and
mov
and
and
mov
and
rcr
xor
dec
dec
push
sbb
jmp
js
mov
push
(bad)
cwde
and
movs
(bad)
in
inc
xchg
das
arpl
or
bndstx
adc
adc
in
jbe
or
sti
sub
imul
ficomp
add
fs
in
mov
push
or
loopne
fadd
jg
adc
add
fidiv
(bad)
inc
jns
retf
or
adc
sbb
call
adc
pop
dec
adc
rcl
test
cmp
adc
out
adc
fisub
push
aas
dec
jo
lods
in
cwde
aas
inc
fidiv
sbb
adc
mov
push
pop
es
daa
or
dec
pop
jg
and
xchg
inc
aas
mov
mov
sbb
inc
mov
rcl
pop
pop
leave
pop
dec
stos
(bad)
pusha
mov
sbb
dec
mov
dec
dec
push
inc
fwait
inc
mov
ins
and
aas
pop
movs
cmp
scas
les
pushf
inc
and
mov
aas
xor
adc
aas
cwde
jbe
test
les
jo
adc
and
ins
loopne
hlt
imul
nop
jmp
aaa
mov
pushf
cmp
enter
xor
adc
lahf
mov
push
sbb
addr16
or
enter
mov
sub
adc
xor
ret
ror
fadd
add
scas
sbb
push
cmp
or
popa
add
popa
pop
cmp
push
test
jg
sub
mov
adc
test
ficom
add
jno
pop
stos
ret
shl
add
pop
je
inc
in
sub
mov
jno
sbb
shr
rol
fs
cmp
add
mov
cbw
movs
iret
clc
aas
fild
inc
pusha
inc
jle
popa
aas
and
jo
inc
cmp
sub
jg
pop
lock
shl
sbb
lock
and
pop
inc
in
pop
daa
push
aam
icebp
add
mov
jb
lods
sbb
sub
inc
mov
dec
xor
in
in
mov
sub
push
inc
cs
pop
ins
mov
sar
clc
or
movs
sar
das
loope
adc
lods
cwde
(bad)
push
and
test
cs
inc
mov
test
cdq
ins
fs
jg
pop
cmp
and
mov
or
pop
or
inc
scas
pusha
push
mov
loopne
add
leave
sub
and
pop
dec
cmp
or
sub
mov
daa
cmps
jbe
mov
lock
mov
or
inc
push
jb
push
push
js
loopne
aas
or
call
sbb
xchg
(bad)
pop
es
adc
sar
or
rol
imul
jbe
fsub
das
(bad)
bound
xor
imul
iret
jnp
mov
imul
sub
clc
adc
xchg
jp
daa
jbe
inc
mov
fwait
pusha
pusha
push
scas
inc
mov
xchg
dec
xchg
push
neg
sub
mov
sub
jo
aad
in
pop
cwde
sub
daa
fs
pop
leave
call
or
inc
ficom
inc
fwait
xor
sub
mov
sbb
pop
add
sbb
ror
daa
xchg
je
pop
(bad)
mov
xchg
add
sub
mov
test
sub
ss
jo
das
xchg
pop
mov
sub
daa
lock
or
push
and
lock
cmps
push
mov
lahf
dec
cs
setbe
aaa
ja
bound
nop
sbb
dec
das
adc
daa
and
cwde
das
cmp
(bad)
in
pop
stc
adc
or
daa
inc
fcmovbe
jp
xor
daa
ja
fwait
stos
push
pusha
xor
leave
add
add
sub
daa
push
xchg
inc
inc
xchg
js
mov
sub
xor
or
jno
sbb
sub
jno
jbe
shr
mov
(bad)
stc
sub
test
aad
data16
xor
add
xor
mov
inc
aad
dec
mov
add
or
and
adc
inc
inc
or
xchg
push
add
fist
add
adc
mov
es
push
inc
aaa
cmp
mov
jo
push
pushf
cmp
iret
rep
lods
mov
cmp
fsub
jmp
call
jns
out
push
pusha
popa
outs
jnp
jns
out
(bad)
pushf
test
sahf
ret
rcr
fsubrp
hlt
cmp
sar
or
cmp
repz
push
pop
push
jae
or
ret
rcr
jns
iret
repz
jns
out
adc
push
pop
sahf
out
sahf
sbb
sbb
sbb
jns
out
push
pop
and
xor
jns
out
dec
gs
sahf
out
sahf
fwait
mov
iret
fucomp
cmp
repz
push
cmp
cmp
repz
data16
cwde
iret
repz
mov
neg
ds
sahf
out
push
out
sahf
out
rcr
jmp
aas
adc
iret
repz
imul
repz
repz
(bad)
aad
out
ds
out
std
or
daa
sahf
out
sahf
xor
push
pop
ins
jns
popf
out
xchg
gs
ins
xor
es
xor
or
imul
sbb
call
test
std
mov
jo
lahf
sbb
sbb
adc
add
popa
out
lods
pusha
arpl
ins
ja
pop
jl
xchg
je
dec
ins
adc
xor
stos
pusha
ins
sub
daa
leave
outs
inc
sub
popf
add
imul
jb
jo
outs
adc
push
outs
and
jnp
gs
push
inc
js
arpl
and
sbb
gs
jo
popa
ins
inc
outs
loope
mov
fs
push
push
push
outs
outs
fdiv
sti
mov
inc
imul
push
jns
gs
daa
iret
outs
pop
fwait
push
and
shr
enter
add
outs
je
sti
int
std
jb
arpl
jae
inc
jb
dec
ins
outs
jae
dec
popa
mov
push
xor
dec
adc
daa
sub
and
sbb
mov
and
inc
jne
(bad)
outs
je
dec
fs
paddd
je
arpl
and
outs
xor
loopne
sbb
add
push
gs
jne
fdiv
daa
cmp
sbb
(bad)
fiadd
mov
gs
rol
ins
sti
dec
outs
fs
jno
imul
ror
fs
fnsave
repz
outs
dec
outs
imul
sbb
pop
mov
push
sub
push
sbb
lods
mov
and
outs
jae
stos
and
mov
(bad)
outs
sbb
ins
jmp
imul
js
dec
out
fdivr
imul
jb
jne
add
xor
xor
bound
ins
pop
ffree
outs
(bad)
jbe
dec
mov
dec
inc
sahf
outs
loope
push
jno
mov
mov
lods
fucom
test
sub
cmp
inc
pop
xor
inc
mov
fnstenv
ins
push
ins
jne
sbb
sbb
add
push
cmp
arpl
loopne
or
xchg
inc
xor
fsub
pushf
mov
imul
pop
inc
sti
fld
push
out
ret
mov
sub
jnp
js
add
cmc
push
loopne
stc
add
or
dec
cs
mov
or
xor
lea
mov
add
pop
mov
es
inc
add
sub
pop
add
in
or
data16
xor
cmp
cmp
call
ss
popa
data16
arpl
fdiv
mov
retf
rol
ret
cld
(bad)
cmps
mov
mov
rol
or
call
ror
push
test
jle
out
sti
push
and
loopne
sahf
in
push
(bad)
push
jo
ror
inc
shr
in
jne
mov
add
adc
int
ds
icebp
push
push
stc
pusha
pop
sub
push
mov
mov
mov
cld
jle
sti
xor
hlt
outs
lock
lock
mov
push
loopne
inc
xor
inc
inc
inc
xor
pop
fdivr
push
xor
cmp
inc
aaa
inc
xor
aaa
inc
add
inc
cmp
aam
mov
cmps
xor
int3
mov
into
icebp
lock
idiv
jo
push
push
nop
push
nop
jle
(bad)
push
(bad)
lock
mov
pop
xor
test
and
cmp
push
mov
pop
enter
inc
pusha
mov
mov
or
inc
add
inc
mov
inc
ss
outs
(bad)
push
xchg
push
inc
and
outs
pop
das
call
adc
sbb
dec
aad
cmp
lahf
add
nop
or
fimul
pop
add
movs
and
sar
adc
popa
scas
add
push
mov
and
pop
sahf
popf
test
sar
add
jno
stos
xor
fsub
sbb
sbb
jmp
cmp
and
sub
ja
nop
mov
inc
call
or
or
lahf
or
jmp
pusha
scas
cmp
jmp
sbb
not
(bad)
aas
adc
xchg
mov
mov
inc
imul
js
test
mov
cmc
(bad)
jmp
add
add
aam
ja
add
ja
push
or
pop
or
cli
cld
mov
xlat
jmp
inc
jb
jne
cmps
mov
(bad)
xor
call
gs
lds
stos
or
add
inc
cmc
mov
or
adc
mov
stos
and
aas
mul
sub
inc
sbb
cmpxchg
je
outs
outs
lahf
pop
pop
sbb
in
rol
(bad)
cld
mov
shl
outs
test
mov
push
adc
inc
cmp
jle
aam
repz
push
jmp
(bad)
jmp
repz
retf
add
aad
add
test
xor
sar
add
cmp
push
lock
es
cmc
add
push
nop
dec
out
pop
or
nop
mov
rcl
pop
add
fwait
dec
sar
loope
stc
dec
pop
mov
int
mov
imul
outs
(bad)
inc
movs
and
outs
outs
outs
je
bound
jb
outs
and
inc
dec
push
and
(bad)
mov
ins
outs
fs
fldenv
mov
ja
neg
mov
lahf
push
jne
mov
cdq
daa
fwait
push
(bad)
fild
std
jge
and
mov
ficomp
and
mov
mov
push
xchg
mov
add
pusha
add
inc
outs
push
and
add
cmp
and
add
mov
sti
push
ror
sub
sbb
addr16
das
retf
mov
addr16
mov
(bad)
dec
cwde
inc
dec
aam
enter
fidiv
dec
mov
test
cs
stc
push
jo
push
push
pop
xor
int3
inc
jb
adc
loopne
jo
ret
xor
call
xchg
jb
jb
mov
fimul
addr16
xchg
and
adc
xor
cmp
add
push
icebp
dec
or
dec
sahf
or
or
push
dec
or
inc
xchg
lock
clc
push
xor
xchg
dec
fild
(bad)
(bad)
fstp
xchg
add
iret
fs
(bad)
lds
jmp
stc
inc
fidiv
mov
(bad)
(bad)
push
(bad)
pop
dec
fnstenv
fbstp
rol
push
fs
push
xchg
inc
je
sbb
(bad)
(bad)
call
inc
cmp
movs
int
imul
movntps
push
pop
in
or
(bad)
(bad)
(bad)
push
mov
and
sub
jmp
scas
(bad)
mov
call
ret
push
adc
int3
dec
cmc
(bad)
(bad)
(bad)
inc
mov
or
inc
ins
dec
adc
cmp
mov
dec
sbb
fs
sar
(bad)
(bad)
(bad)
call
push
and
sub
(bad)
cmp
xor
add
inc
xor
sahf
(bad)
(bad)
(bad)
call
dec
daa
jg
mov
fimul
dec
sahf
sub
add
js
add
call
jb
xchg
mov
popa
aam
push
pusha
sub
jp
push
push
(bad)
call
xor
bnd
and
aam
scas
call
(bad)
(bad)
(bad)
jmp
xchg
sub
cmps
sbb
xchg
(bad)
mov
scas
retf
repnz
push
jle
xlat
add
cmp
cmps
inc
dec
push
pop
sti
sbb
int
sub
adc
pop
adc
inc
(bad)
inc
pop
fucomip
and
stos
shl
lds
pop
cld
das
rcr
aam
xchg
mov
dec
lock
jnp
outs
test
jmp
adc
fcomi
fisttp
pop
xchg
pop
cmp
sub
push
(bad)
(bad)
(bad)
push
ss
xchg
pop
pusha
pop
fmul
mov
adc
dec
arpl
(bad)
(bad)
dec
adc
fist
mov
ins
inc
jne
imul
(bad)
jmp
push
int
jb
xor
ins
adc
iret
mov
in
add
sbb
dec
(bad)
(bad)
(bad)
call
out
out
ss
mov
or
and
(bad)
cmp
sbb
pop
xor
pop
jecxz
iret
sar
(bad)
(bad)
dec
sahf
jns
and
xchg
out
movs
fimul
mov
cld
mov
xchg
cmp
sbb
(bad)
(bad)
(bad)
push
std
cmps
mov
shl
and
cdq
xchg
(bad)
enter
clc
enter
jmp
push
inc
rcl
fsubr
cdq
mov
push
(bad)
(bad)
(bad)
dec
imul
inc
and
(bad)
pop
adc
xadd
(bad)
(bad)
jmp
aad
fwait
ret
sar
add
les
es
dec
xchg
movs
sti
ret
(bad)
(bad)
(bad)
call
jno
out
mov
jge
xor
cdq
mov
in
out
mov
(bad)
(bad)
cmp
pop
or
xchg
js
jecxz
retf
jbe
adc
ja
bsr
(bad)
(bad)
(bad)
in
pushf
jo
clc
jb
adc
push
and
aam
daa
aas
push
scas
inc
imul
(bad)
(bad)
mov
adc
out
into
outs
data16
mov
sbb
and
outs
sti
imul
stos
scas
(bad)
(bad)
(bad)
inc
in
sbb
add
mov
ror
mov
mov
inc
ret
mov
rcr
in
jbe
into
(bad)
(bad)
jg
(bad)
movs
cmp
pop
inc
repz
ss
mov
dec
sbb
jp
inc
mov
sub
(bad)
(bad)
(bad)
dec
mov
loopne
mov
cmp
fisubr
jo
push
ins
jb
sub
(bad)
(bad)
(bad)
jg
retf
adc
ret
in
fst
leave
push
xchg
mov
sbb
aaa
repz
(bad)
(bad)
jmp
sar
fiadd
and
mov
mov
into
mov
xor
jmp
or
(bad)
pop
jo
cmps
xor
aaa
ror
cmc
sbb
push
outs
or
or
aas
div
in
rol
and
into
int3
ret
cmp
jecxz
div
(bad)
jmp
xor
mov
mov
fmul
icebp
mov
cmc
(bad)
(bad)
call
mov
pushf
mov
jge
dec
mov
jge
sbb
jle
sbb
pop
in
jmp
mov
sbb
repz
ins
fisubr
cmp
or
sub
(bad)
(bad)
inc
call
enter
fwait
push
fiadd
mov
jmp
std
(bad)
mov
stos
mov
sbb
mov
pop
dec
sti
pop
or
cwde
push
mov
sub
(bad)
jmp
stos
arpl
ror
mov
add
rcl
mov
ds
int3
icebp
shr
fld
(bad)
(bad)
(bad)
call
cmp
ja
sahf
and
loope
dec
cmp
fistp
mov
sbb
mov
outs
pop
(bad)
(bad)
(bad)
jmp
inc
call
dec
cmp
(bad)
xchg
inc
(bad)
or
jp
enter
ficom
(bad)
(bad)
jmp
xor
pusha
(bad)
in
imul
mov
imul
aas
sub
sbb
add
inc
jmp
dec
popa
and
repz
(bad)
(bad)
(bad)
(bad)
fcomip
jecxz
dec
das
sahf
add
ret
stos
sub
fist
scas
icebp
aam
fnstsw
out
dec
cmps
into
sbb
ja
pop
adc
inc
pop
repz
cmps
xor
int3
push
push
(bad)
(bad)
(bad)
jg
xchg
shr
dec
outs
or
fist
sti
out
push
mov
dec
dec
mov
pop
xor
sub
pop
clc
mov
push
and
(bad)
(bad)
(bad)
(bad)
les
adc
in
pop
test
loopne
sub
and
imul
jge
cmps
push
xchg
(bad)
jg
call
inc
cmp
push
add
adc
sub
in
(bad)
(bad)
mov
mov
adc
cmp
loop
push
test
xor
(bad)
(bad)
push
push
mov
lock
repnz
das
pop
int
gs
(bad)
inc
jg
pop
mul
mov
sub
mov
and
and
(bad)
std
dec
cwde
jbe
(bad)
(bad)
push
sbb
jns
xor
dec
xchg
repz
xor
mov
cli
add
push
mov
(bad)
dec
in
and
ret
aaa
or
shr
es
fs
inc
out
fmul
out
mov
push
aam
out
cmps
sbb
clc
out
sub
inc
(bad)
sub
ss
int
jg
call
inc
test
ss
xor
jne
icebp
xor
scas
sub
mov
(bad)
outs
ret
cdq
xor
push
ret
adc
sub
(bad)
jg
hlt
ins
inc
cmp
or
repz
das
test
push
push
xchg
imul
(bad)
ficom
aad
sbb
xchg
or
das
shl
xor
mov
pop
and
push
es
add
call
pop
sbb
cld
and
or
dec
xor
imul
das
cmp
loopne
sar
retf
fadd
lock
mov
xor
xchg
pop
mov
out
(bad)
(bad)
jmp
add
mov
lahf
push
pop
push
cmps
lods
movs
mov
jne
push
jns
or
(bad)
push
and
xchg
xchg
push
pop
dec
cs
fdiv
ret
in
std
imul
cmp
xchg
shl
sub
loope
std
bts
or
jmp
pop
mov
imul
cmovle
mov
movs
cld
xchg
adc
push
and
imul
(bad)
(bad)
(bad)
cli
adc
test
rcr
std
inc
bound
xchg
cmps
xchg
sub
mov
(bad)
dec
aaa
ds
rcr
sub
jle
int
sub
sar
(bad)
push
mov
jb
push
out
les
inc
out
cmp
out
les
xor
sbb
xor
(bad)
(bad)
(bad)
jmp
jge
jecxz
adc
arpl
sub
loop
ins
cs
add
push
push
mov
mov
push
adc
jle
mov
or
cwde
push
dec
or
retf
lods
es
and
(bad)
(bad)
call
add
dec
pusha
sub
mov
add
out
movs
adc
(bad)
(bad)
dec
mov
xchg
int3
mov
jmp
(bad)
mov
dec
and
ja
rcr
shr
call
fstp
fs
loop
mov
and
(bad)
jp
ret
js
(bad)
(bad)
jg
ret
ror
push
hlt
fild
jl
and
(bad)
call
xor
cmps
mov
and
sahf
jecxz
ss
repnz
adc
ds
(bad)
call
fs
mov
and
or
inc
stos
mov
mov
jge
loope
cmps
xor
call
jl
ror
ins
adc
inc
inc
shl
std
cmp
bswap
retf
push
cmp
sub
xchg
fisttp
(bad)
jmp
nop
jmp
mov
movs
mov
jns
sbb
push
push
bound
sub
(bad)
(bad)
inc
xor
lds
inc
mov
jmp
cdq
pop
inc
dec
sbb
(bad)
(bad)
mov
inc
push
popa
push
xlat
adc
jmp
shr
into
test
iret
loop
jmp
jge
es
adc
pop
rcr
xchg
rol
(bad)
inc
mov
aas
mov
imul
pusha
nop
pop
fwait
js
test
push
jno
sti
xor
push
js
out
dec
mov
movs
mov
out
inc
push
pushf
or
xchg
jae
add
fld
push
inc
or
and
(bad)
dec
shr
mov
ror
mov
in
xchg
or
scas
test
popf
pmaxsw
fs
call
in
(bad)
inc
pop
fs
inc
pop
pop
adc
rcr
(bad)
(bad)
dec
or
adc
in
ins
clc
and
xchg
enter
push
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
add
out
lock
inc
les
or
pop
jmp
or
fs
(bad)
inc
jae
bound
mov
test
jbe
aad
cmc
gs
test
cs
add
pop
(bad)
push
mov
lock
cmp
fsubr
mov
sub
mov
(bad)
(bad)
(bad)
inc
jg
aaa
or
iret
sti
loope
scas
rcr
mov
js
in
test
(bad)
(bad)
dec
mov
out
ja
push
leave
dec
xchg
dec
ins
xchg
lds
cmp
inc
jno
push
adc
(bad)
(bad)
(bad)
mov
xchg
mov
pop
push
inc
cmp
(bad)
jne
loope
or
push
mov
dec
(bad)
call
(bad)
mov
mov
xor
sahf
in
fisttp
xchg
sbb
sub
and
(bad)
out
std
or
jg
mov
pop
push
stos
pop
sahf
xchg
adc
repz
mov
outs
and
(bad)
(bad)
inc
inc
mov
xlat
data16
jns
push
and
dec
push
sbb
(bad)
call
add
mov
dec
cmps
and
add
mov
or
(bad)
(bad)
(bad)
push
cwde
dec
call
push
jmp
add
push
adc
mov
cmps
push
pop
mov
push
and
push
add
fld
or
pop
cmc
pop
ja
enter
push
(bad)
mov
data16
(bad)
hlt
push
xchg
push
jmp
loop
jp
push
mov
add
sub
fdivrp
(bad)
(bad)
inc
call
scas
xchg
fisubr
inc
dec
xchg
mov
jb
cdq
outs
add
jl
sub
nop
sub
(bad)
(bad)
jmp
add
ret
pop
xor
(bad)
retf
add
adc
daa
(bad)
(bad)
(bad)
dec
adc
fst
psubsb
xchg
xchg
cdq
mov
mov
or
jmp
(bad)
(bad)
call
out
movs
shl
add
add
mov
call
dec
(bad)
loopne
mov
inc
fwait
mov
sar
push
xchg
sbb
in
shr
jge
sbb
jns
aaa
sub
(bad)
(bad)
jmp
sbb
sbb
(bad)
ret
push
addr16
inc
pusha
push
xchg
cmp
adc
sti
cmp
(bad)
(bad)
jg
dec
and
jmp
pop
push
ins
outs
fwait
mov
ret
or
fstp
(bad)
(bad)
push
imul
xchg
rep
call
pop
jb
mov
dec
cmp
adc
(bad)
fist
loopne
mov
mov
xor
cli
movs
pop
cdq
push
(bad)
lods
ret
shl
xchg
push
mov
pop
fsub
(bad)
(bad)
(bad)
(bad)
cmp
inc
push
or
cmp
push
xchg
popa
xor
fild
jbe
cmp
sbb
inc
in
push
pop
or
cmp
aad
retf
outs
out
mov
pop
fbstp
fs
jg
cmc
push
push
xor
icebp
mov
in
push
test
(bad)
call
bound
scas
jmp
or
pop
mov
into
lock
xor
icebp
(bad)
(bad)
out
cli
ins
xor
xlat
mov
in
data16
(bad)
sub
ret
call
mov
dec
xchg
loop
loopne
xchg
cs
xor
xlat
(bad)
(bad)
(bad)
jmp
popa
push
push
and
and
fidiv
cmp
dec
pop
sub
push
sbb
nop
inc
pop
outs
pop
icebp
(bad)
jmp
lds
je
pushw
cld
inc
bound
cmp
push
data16
inc
xchg
jp
adc
dec
clc
(bad)
(bad)
call
loope
cmovo
and
std
cmp
xor
dec
cli
adc
dec
(bad)
(bad)
jmp
ds
cmp
les
mov
hlt
(bad)
add
fisubr
(bad)
(bad)
call
loopne
mov
int
xchg
cmps
pop
stos
loope
and
(bad)
rcr
cmp
mov
sbb
call
inc
add
jb
xchg
movs
pushf
mov
dec
pop
jmp
xor
movs
sub
mov
outs
aas
lods
jns
test
adc
pushf
test
push
push
mov
out
and
pop
lahf
retf
les
push
sbb
movs
push
ds
cmp
ror
adc
dec
fwait
sub
sar
pop
ja
out
(bad)
adc
inc
pop
loopne
lods
xchg
adc
pop
movs
sti
js
push
mov
out
jle
jge
lahf
and
(bad)
(bad)
(bad)
dec
and
iret
stos
sbb
pop
dec
dec
push
xchg
dec
cmp
xor
pop
mov
adc
aad
(bad)
(bad)
jmp
(bad)
and
leave
mov
add
xchg
int3
fst
jnp
or
inc
(bad)
(bad)
(bad)
jmp
aad
aaa
jns
pop
movs
sub
prefetch
std
cmp
jecxz
nop
hlt
(bad)
dec
push
mov
call
mov
loopne
push
fidivr
loopne
cmc
popa
imul
cmp
(bad)
in
push
pop
sub
xchg
sub
push
idiv
call
mov
sub
inc
push
(bad)
(bad)
call
and
inc
scas
sbb
jle
inc
adc
retf
or
stos
(bad)
(bad)
(bad)
call
mov
push
inc
es
and
add
mov
push
(bad)
or
cmp
(bad)
(bad)
mov
movs
fild
jae
mov
dec
or
mov
(bad)
mov
add
clc
js
shr
cmp
push
out
imul
(bad)
(bad)
(bad)
inc
pop
add
ins
xchg
inc
pop
aam
(bad)
mov
iret
into
xor
je
in
ret
ins
push
(bad)
jmp
(bad)
out
call
fcomp
xor
call
stos
ss
add
lods
js
dec
rol
mov
repz
jmp
pushf
jge
dec
ss
mov
in
push
mov
cmps
mov
fmul
xchg
pop
sahf
push
push
cmps
(bad)
(bad)
(bad)
push
sbb
inc
imul
mov
pushf
fcom
sbb
jecxz
ja
dec
mov
cwde
sbb
call
sar
(bad)
(bad)
push
stos
test
ficom
repz
cmp
sar
sar
out
(bad)
inc
das
into
es
cmp
(bad)
mov
int
pushf
jecxz
movs
arpl
lods
jmp
ror
push
sub
call
jmp
inc
(bad)
scas
aas
pusha
xchg
fdivr
push
pop
mov
push
jnp
adc
sub
cdq
test
or
(bad)
inc
xchg
or
clc
and
arpl
test
ins
(bad)
fnstenv
ss
(bad)
(bad)
(bad)
(bad)
jnp
ins
int3
pop
imul
push
dec
outs
cwde
and
sub
xlat
mov
and
or
jae
jge
(bad)
ret
cmc
stos
fwait
popf
dec
addr16
cmp
data16
mov
mov
das
jmp
dec
xchg
daa
adc
(bad)
jmp
xchg
das
loope
xchg
(bad)
cmp
xlat
in
pop
jnp
or
push
pop
aad
sub
inc
mov
adc
out
sbb
sar
dec
ss
loope
sbb
mov
pop
and
mov
pop
outs
call
pop
cmp
and
mov
retf
call
imul
jg
sub
stos
(bad)
(bad)
(bad)
mov
dec
push
jae
lahf
test
add
mov
xor
push
xchg
ror
dec
cmps
mov
add
dec
lods
jmp
mov
jbe
sub
bnd
inc
jne
retf
aaa
std
(bad)
call
test
pop
aas
pop
xchg
lock
into
inc
outs
ins
xchg
mov
xor
(bad)
jg
imul
xor
call
cli
retf
mov
mov
(bad)
inc
and
bound
mov
(bad)
(bad)
fld
in
add
fcom
or
nop
fcmovne
push
pop
(bad)
(bad)
(bad)
jmp
pop
imul
pop
or
ja
call
jmp
or
pop
test
xor
(bad)
(bad)
inc
adc
pushf
ins
xor
cmps
outs
push
mov
loopne
pop
inc
mov
pop
(bad)
mov
(bad)
(bad)
(bad)
(bad)
cld
cmc
(bad)
fs
out
loope
and
fcomp
cmp
out
mov
mov
xchg
pop
or
cs
(bad)
(bad)
(bad)
call
ret
or
mov
inc
sub
adc
pop
xor
fs
(bad)
(bad)
(bad)
push
out
ins
popa
rcl
adc
popa
push
add
scas
xchg
retf
mov
and
cmc
les
pop
sar
push
jp
data16
lods
data16
sahf
xchg
call
(bad)
(bad)
inc
push
xchg
fist
and
dec
out
dec
std
xor
add
inc
adc
stc
and
ins
mov
not
das
(bad)
add
loop
push
xchg
xor
out
sbb
sbb
into
scas
jbe
lock
in
cmp
(bad)
dec
movs
xor
dec
repz
adc
dec
fmul
aad
das
stos
test
jge
pop
(bad)
(bad)
(bad)
(bad)
aas
mov
cmp
retf
mov
or
push
jmp
inc
jecxz
or
(bad)
(bad)
(bad)
inc
aaa
movs
xchg
jo
fistp
xor
cli
test
mov
scas
push
add
fwait
stos
and
push
mov
dec
jle
iret
sbb
das
cli
inc
cmp
push
mov
out
inc
jb
dec
or
fwait
xor
lock
in
stos
rcr
mov
or
push
pop
mov
sub
gs
ret
pop
retf
xchg
(bad)
(bad)
call
jge
in
mov
and
push
js
sahf
xchg
nop
or
(bad)
(bad)
(bad)
(bad)
jmp
push
das
out
pop
out
xor
sbb
jmp
sbb
add
and
(bad)
(bad)
aaa
push
in
pop
or
sbb
(bad)
popf
movs
jge
add
fiadd
(bad)
(bad)
dec
push
or
xor
push
arpl
or
call
lds
ret
les
dec
outs
(bad)
(bad)
(bad)
jmp
pop
je
mov
xor
cmps
cli
ins
inc
sbb
cwde
xchg
lea
(bad)
(bad)
(bad)
(bad)
cmp
push
call
dec
mov
adc
idiv
(bad)
(bad)
(bad)
(bad)
mov
neg
pop
mov
pop
or
bound
mov
dec
sar
lods
(bad)
(bad)
(bad)
dec
popf
adc
jb
push
mov
ret
xor
adc
and
mov
loop
stos
(bad)
(bad)
call
mov
das
push
out
xor
repnz
int
mov
bound
(bad)
jmp
das
aaa
scas
scas
mov
mov
outs
outs
jmp
fidiv
dec
dec
mov
inc
dec
or
sbb
pop
neg
lahf
lea
inc
icebp
outs
adc
mov
xor
mov
stc
sbb
(bad)
inc
lods
es
rcr
outs
push
dec
inc
xor
cmp
(bad)
mov
push
into
lea
sar
inc
and
(bad)
dec
jnp
and
xlat
xchg
mov
add
inc
inc
(bad)
(bad)
(bad)
jmp
jmp
sub
push
scas
shl
push
lods
cmps
pusha
mov
mov
in
cwde
(bad)
(bad)
(bad)
(bad)
cli
movs
int3
sub
xor
add
push
jmp
sub
jno
push
mov
(bad)
(bad)
(bad)
call
fnstsw
popa
dec
jle
data16
inc
jo
mov
cmp
mov
call
inc
inc
test
mov
cmp
jp
jmp
xor
cmp
push
add
outs
cli
dec
cmc
pop
jo
jecxz
inc
push
cmp
mov
retf
push
xchg
(bad)
(bad)
(bad)
jmp
ja
dec
arpl
or
push
push
faddp
push
in
es
adc
(bad)
(bad)
jmp
xchg
mov
cld
loope
fwait
adc
mov
repz
jnp
aad
(bad)
call
mov
cmp
sbb
inc
xchg
(bad)
in
add
inc
outs
xchg
add
cmc
stos
(bad)
jg
jg
ror
push
inc
sub
sub
aad
xchg
daa
arpl
sbb
data16
or
push
jp
jp
xchg
je
out
xchg
lods
icebp
xor
dec
dec
mov
xor
and
ud0
(bad)
jmp
into
push
mov
nop
clc
jbe
mov
cli
inc
push
clc
(bad)
xchg
mov
iret
rol
jmp
movs
sub
iret
lea
addr16
pusha
bound
lods
sub
pop
les
xchg
sub
and
cli
sbb
(bad)
sbb
inc
rcr
xor
into
popf
xchg
xchg
cmp
xchg
inc
pushf
shl
mov
(bad)
mov
in
mov
idiv
std
shl
pop
jb
cmps
adc
push
lock
(bad)
aaa
ret
icebp
add
daa
cmp
outs
or
sbb
sahf
adc
or
fsubp
ins
mov
das
adc
(bad)
stc
repnz
test
push
mov
cdq
js
dec
(bad)
xor
out
cli
(bad)
(bad)
imul
inc
lock
dec
mov
int
sbb
add
shl
and
xchg
rcr
add
jo
sbb
jge
fnstcw
mov
jnp
pop
lods
lods
adc
(bad)
(bad)
inc
mov
je
xlat
shl
out
cmp
ffreep
inc
fnstenv
xchg
es
add
pop
(bad)
(bad)
(bad)
call
cmp
mov
or
push
and
mov
jnp
inc
push
ret
push
mov
(bad)
outs
and
adc
pop
pop
push
das
xlat
nop
mov
(bad)
(bad)
fistp
jmp
cli
push
sbb
mov
cmp
inc
leave
add
push
pop
pop
fs
mov
push
push
es
cmp
mov
cmps
movs
push
(bad)
mov
(bad)
inc
fsubp
ja
inc
sbb
test
push
inc
xchg
jl
mov
outs
fwait
jb
mov
stos
sbb
adc
pop
and
xor
in
mov
pusha
cmp
mov
(bad)
(bad)
(bad)
fbld
push
fcomp
(bad)
int
daa
xchg
xor
mov
mov
sub
sbb
push
mov
out
adc
sbb
dec
xchg
xchg
mov
push
je
mov
add
(bad)
call
gs
cmp
in
jno
sar
cwde
xchg
inc
or
xor
fsub
test
std
sub
call
jno
push
xchg
stos
pushf
xchg
fwait
jle
fidiv
hlt
idiv
sar
jg
(bad)
jg
add
retf
xor
or
call
call
jb
add
jmp
jo
stos
sbb
imul
ss
adc
(bad)
(bad)
fcom
jg
sub
sar
cmp
pop
push
pop
clc
call
pop
cmp
xor
mov
push
and
lods
jl
cwde
jnp
iret
lahf
out
(bad)
(bad)
push
in
loope
out
xchg
inc
int3
jl
sbb
leave
push
test
sub
fld
inc
data16
mov
jmp
dec
jo
rep
or
neg
inc
mov
mov
imul
(bad)
jg
xor
jecxz
int
inc
jnp
cmps
mov
aam
inc
sbb
(bad)
(bad)
clc
mov
push
pop
mov
add
or
mov
ret
scas
mov
(bad)
(bad)
jg
(bad)
or
fidiv
cmp
push
xchg
push
or
pop
in
or
jmp
sbb
je
lods
add
pop
push
shr
pop
jge
push
fcomp
out
sbb
jmp
adc
cmp
aad
addr16
fstp
push
repz
fldcw
idiv
(bad)
(bad)
inc
jnp
fild
mov
add
xor
ins
mov
sbb
sub
dec
(bad)
pop
lock
hlt
xor
pop
pop
es
lods
fcomp
ret
inc
int
aad
(bad)
jmp
cmp
mov
pop
jecxz
cmp
cwde
jno
mov
(bad)
(bad)
inc
xor
add
cmp
mov
sbb
mov
fisttp
sbb
inc
sbb
(bad)
(bad)
inc
hlt
test
and
xor
xchg
fldenv
repz
inc
jno
inc
out
xor
push
add
push
lods
cmp
test
ss
enter
mov
pop
dec
inc
adc
dec
xchg
dec
popf
pop
sahf
cwde
nop
fnstenv
test
push
cmp
jne
imul
(bad)
mov
sar
lahf
shr
loope
cmp
bound
fiadd
mov
imul
out
push
in
in
jae
std
mov
cmp
fwait
test
xor
lods
(bad)
(bad)
call
mov
mov
sti
inc
sub
mov
call
dec
cmps
(bad)
mov
(bad)
push
cmp
das
push
popa
pop
fcmovnu
mov
(bad)
(bad)
(bad)
mov
push
cmps
ja
in
pop
jno
fwait
aaa
adc
add
sar
fadd
(bad)
(bad)
(bad)
inc
xor
jp
push
mov
xor
dec
int3
outs
add
loop
clc
sub
dec
sahf
push
adc
sahf
inc
mov
mov
mov
mov
arpl
push
pop
scas
les
dec
push
(bad)
jns
dec
inc
daa
push
fdivr
fcomp
mov
rcl
inc
cmps
push
xchg
mov
pop
lods
sub
cdq
nop
(bad)
xchg
cmp
sbb
int3
fs
outs
mov
imul
(bad)
inc
test
or
(bad)
push
aas
mov
loope
jne
push
mov
add
(bad)
(bad)
jmp
dec
cmp
rcl
inc
pop
or
pop
push
retf
pop
stos
mov
mov
inc
(bad)
push
cld
ins
shl
cmp
imul
xchg
sub
loope
call
(bad)
nop
sahf
fsubrp
pop
or
push
adc
sbb
cs
movs
sahf
add
fdivrp
(bad)
(bad)
jmp
daa
inc
(bad)
idiv
stc
mov
jns
jbe
or
nop
push
push
mov
xchg
fnstsw
push
mov
push
and
fisub
in
in
(bad)
push
(bad)
(bad)
(bad)
jmp
scas
aad
pop
ret
aaa
je
hlt
inc
or
sub
inc
xchg
enter
out
ins
mov
(bad)
(bad)
(bad)
fcomi
dec
sahf
xchg
push
gs
cmp
mov
or
inc
cmps
jge
das
loopne
adc
stos
inc
int3
pop
xor
cmp
dec
mov
fidiv
mov
inc
mov
mov
sbb
dec
es
inc
jns
and
(bad)
(bad)
(bad)
(bad)
mov
(bad)
sub
cmps
or
push
xchg
pop
push
inc
push
call
shl
in
retf
stos
and
mov
jmp
mov
outs
mov
test
inc
movs
imul
loop
fidiv
add
or
push
hlt
sbb
leave
sub
mov
das
in
mov
fldz
mov
mov
or
mov
imul
sbb
push
(bad)
(bad)
jmp
jg
sub
pop
fstp
outs
inc
lods
adc
stc
jmp
or
xor
sub
call
inc
stc
aam
stc
inc
fsub
sub
into
ins
mov
fwait
push
(bad)
(bad)
(bad)
jmp
xor
xchg
fs
in
mov
addr16
pushf
rol
dec
push
mov
call
pop
and
(bad)
mov
push
pop
(bad)
(bad)
dec
and
sbb
stc
test
push
int3
mov
bound
movs
(bad)
(bad)
(bad)
(bad)
(bad)
pop
pop
inc
cmp
mov
push
dec
dec
mov
sbb
jl
cmp
mov
mov
loopne
movs
dec
lahf
bound
and
adc
sub
sub
test
inc
sar
(bad)
mov
xor
lahf
in
imul
mov
and
(bad)
jp
gs
(bad)
(bad)
mov
das
retf
sub
lods
sahf
fcom
ret
aad
mov
cmps
call
in
aam
les
xor
repnz
jbe
mov
jp
ret
(bad)
(bad)
mov
push
repz
icebp
pop
in
fs
mov
inc
cmp
out
adc
call
loopne
sub
mov
xor
dec
cs
add
(bad)
faddp
aad
push
out
(bad)
(bad)
jmp
inc
test
in
xchg
vpshlb
outs
sbb
test
adc
test
(bad)
(bad)
(bad)
call
xor
inc
out
ds
call
mov
mov
adc
mov
cli
call
jge
lds
pop
test
mov
(bad)
(bad)
lods
out
fwait
iret
push
jle
fldenv
lock
fadd
fstp
call
(bad)
gs
aas
ror
dec
retf
ins
pop
jmp
(bad)
jmp
mov
mov
cmp
dec
push
xor
sub
(bad)
stos
push
jl
enter
(bad)
inc
xor
push
push
adc
xchg
stc
(bad)
jne
xchg
int
sbb
pop
(bad)
(bad)
(bad)
call
cmp
movs
inc
sbb
mov
fidiv
test
ret
sbb
jle
mov
retf
gs
dec
iret
daa
pop
cmc
inc
adc
and
sub
xchg
mov
push
(bad)
(bad)
iret
lods
xor
fwait
fwait
jnp
or
(bad)
(bad)
jmp
mov
add
jecxz
in
jb
sub
je
push
push
push
jae
add
xchg
mov
inc
xor
mov
dec
fstp
test
imul
push
aas
loop
int3
xor
dec
sti
sub
sub
or
test
pop
sub
cmp
(bad)
jg
mov
xchg
arpl
cmp
pop
mov
mov
pop
cmp
xor
addr16
(bad)
(bad)
jmp
cmp
aas
hlt
push
jo
add
rcr
xor
aas
pop
ds
mov
sbb
(bad)
jmp
mov
mov
out
jg
jge
sbb
mov
mov
ins
inc
sbb
sbb
(bad)
(bad)
dec
add
test
mov
and
mov
lock
xlat
pop
pop
fadd
mov
daa
(bad)
xchg
mov
pop
retf
in
inc
or
sub
call
mov
popa
aam
push
les
push
les
pop
stos
(bad)
(bad)
(bad)
mov
adc
outs
push
push
std
mov
cmp
(bad)
or
ss
or
sub
push
sysret
adc
call
ins
mov
cmc
push
movs
inc
pop
dec
test
(bad)
(bad)
jmp
xor
outs
imul
mov
push
dec
inc
retf
adc
scas
sti
retf
(bad)
jmp
in
int
cmp
fisubr
pop
stos
out
inc
sub
adc
dec
gs
cmps
and
sar
pop
stos
popf
dec
fmul
cmp
jnp
add
out
cmp
sub
jb
push
sbb
sar
movs
mov
retf
pop
or
xor
sub
shr
test
(bad)
(bad)
(bad)
(bad)
jl
gs
sbb
pop
pop
inc
pop
loopne
clc
std
add
sbb
mov
into
jle
cli
cmp
mov
cmc
inc
sub
xchg
out
pop
mov
pop
pop
cmp
fisttp
pop
retf
xor
mov
xchg
(bad)
(bad)
lea
inc
adc
jecxz
inc
fldenv
icebp
aam
push
pop
stos
mov
mov
inc
in
popf
jb
and
pushf
sbb
movs
pop
cwde
add
(bad)
mov
leave
outs
not
push
push
mov
cld
pop
rcl
(bad)
(bad)
(bad)
(bad)
jge
and
xchg
and
mov
mov
es
mov
retf
push
inc
pop
movs
(bad)
(bad)
jmp
leave
hlt
je
test
inc
sbb
mov
mov
push
test
cmp
sbb
retf
cwde
shr
pop
adc
jne
cmp
(bad)
(bad)
(bad)
mov
shl
jns
dec
sub
iret
pop
shl
pop
xor
cld
pop
ins
mov
lods
add
push
mov
cmp
adc
lahf
(bad)
inc
(bad)
jmp
sbb
jnp
sbb
(bad)
in
out
jmp
xchg
sub
inc
adc
icebp
mov
(bad)
(bad)
retf
(bad)
(bad)
(bad)
jg
pop
fst
cmp
xchg
(bad)
repnz
mov
and
push
xchg
jb
pop
mov
and
add
sbb
mov
nop
in
lock
xchg
xor
and
or
mov
mov
sub
repz
and
cwde
fisubr
or
rcl
(bad)
(bad)
jmp
ds
jmp
das
xchg
add
mov
ds
pop
push
xchg
mov
(bad)
push
enter
xor
lods
ds
add
mov
xor
push
cdq
sub
fdivrp
(bad)
(bad)
push
imul
stos
push
mul
imul
and
mov
iret
popa
call
jne
call
xchg
in
adc
shl
(bad)
sar
popf
mov
(bad)
(bad)
(bad)
push
fnstenv
xor
mov
aas
inc
shl
add
xchg
pop
push
ja
push
xor
daa
(bad)
(bad)
(bad)
call
lea
out
fldenv
fsubr
in
int3
xlat
jno
xchg
ja
add
(bad)
push
mov
add
aas
cmp
(bad)
(bad)
call
pop
lods
cmps
xchg
sub
nop
cmc
movs
and
mov
test
sahf
out
repnz
daa
mov
mov
scas
inc
arpl
cwde
push
scas
leave
mov
push
xchg
dec
icebp
jmp
(bad)
call
jecxz
(bad)
sub
xor
push
mov
rol
ja
xor
rcl
mov
adc
dec
mov
es
outs
lea
mov
je
ss
sub
int
pop
mov
xchg
mov
fnstcw
(bad)
call
xchg
gs
aam
mov
xchg
out
jmp
jg
shl
(bad)
(bad)
(bad)
mov
inc
mov
xchg
test
push
inc
pop
mov
call
(bad)
(bad)
(bad)
fistp
fwait
sbb
cmp
sti
ins
mov
mov
(bad)
dec
test
sbb
repnz
push
daa
shl
dec
jmp
ja
xchg
(bad)
jge
cld
fmul
(bad)
(bad)
(bad)
call
pusha
rcl
loope
add
test
in
sbb
cwde
cli
ss
nop
cli
mov
(bad)
(bad)
(bad)
push
xor
mov
or
add
inc
ret
pop
sbb
mov
mov
inc
mov
adc
pop
lods
stos
in
iret
icebp
adc
pop
(bad)
(bad)
(bad)
out
movs
call
out
mov
add
int
popa
cwde
rcr
(bad)
mov
(bad)
(bad)
(bad)
mov
jle
jl
dec
or
mov
and
and
popa
and
mov
pop
in
xchg
xor
(bad)
(bad)
push
sbb
mov
repz
fwait
(bad)
data16
sbb
and
adc
xor
(bad)
push
jno
lods
dec
sahf
add
bound
xchg
or
and
fwait
sub
sub
int
dec
cli
addr16
icebp
(bad)
inc
fcomp
sbb
(bad)
(bad)
jns
lock
mov
pusha
ds
mov
cmp
addr16
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
cli
pop
xchg
outs
sbb
xchg
mov
cmp
in
cdq
adc
and
push
cld
lock
or
cmps
dec
xor
fsub
add
inc
(bad)
jmp
loope
scas
je
mov
outs
loope
(bad)
xor
lods
pop
mov
scas
mov
(bad)
fstp
cmp
dec
test
icebp
rcr
mov
popf
inc
retf
xor
test
inc
dec
(bad)
(bad)
(bad)
cmp
push
repz
pop
test
sar
xor
in
mov
aam
and
hlt
xchg
adc
mov
sub
in
mov
sub
(bad)
fmul
xchg
lds
inc
out
test
mov
adc
or
inc
mov
loope
mov
out
inc
es
or
xchg
inc
pop
popf
fdivr
jge
add
imul
repnz
(bad)
(bad)
inc
movs
mov
lock
fisttp
std
scas
fsub
pop
mov
data16
aas
rcl
or
(bad)
(bad)
call
pop
mov
mov
jmp
nop
movs
push
addr16
addr16
cmp
sahf
hlt
jmp
in
data16
jmp
(bad)
sbb
mov
xchg
push
pop
pusha
sbb
shr
(bad)
(bad)
dec
jmp
xchg
retf
or
(bad)
lds
aas
mov
add
popf
pop
clts
mov
js
(bad)
push
enter
xlat
xchg
clc
lahf
jl
mov
call
cmp
sub
jmp
sti
cmps
int
test
daa
mov
scas
sbb
icebp
xchg
xor
mov
(bad)
(bad)
(bad)
inc
cmp
dec
jmp
lods
xor
or
and
fcmovu
pushf
retf
mov
mov
cli
cmp
jmp
mov
or
retf
xlat
div
adc
lods
push
retf
mov
std
das
inc
xchg
fdiv
jns
sub
fbld
sub
push
(bad)
(bad)
call
lea
retf
fist
pop
jecxz
outs
shl
push
dec
inc
jns
mov
ja
shl
in
pushf
(bad)
mov
movs
rcr
mov
fsub
jl
mov
das
push
push
(bad)
(bad)
dec
nop
loop
and
inc
pusha
dec
add
push
cmp
add
data16
movs
fs
(bad)
fbld
jbe
(bad)
(bad)
(bad)
call
in
adc
fwait
retf
into
cmp
xchg
popf
cs
loop
ja
pmulhw
jge
jmp
retf
(bad)
(bad)
(bad)
call
sbb
adc
pop
fsubr
dec
popa
add
lods
mov
cmc
jbe
mov
in
pop
jns
jmp
(bad)
mov
pop
pop
test
rcr
mov
aam
scas
push
push
in
lea
std
jle
(bad)
(bad)
(bad)
dec
push
xor
(bad)
or
test
pop
xlat
mov
jl
adc
lods
cmp
cmp
(bad)
push
ror
jp
mov
or
out
sbb
xor
out
lods
sub
dec
push
adc
pop
push
icebp
add
mov
mov
mul
ss
sub
fistp
test
loopne
(bad)
jge
sub
in
out
pusha
cmp
add
inc
mov
(bad)
enter
(bad)
jg
not
cli
stc
dec
stos
adc
adc
aaa
ins
jmp
adc
(bad)
(bad)
(bad)
jl
push
scas
mov
aas
jle
imul
je
inc
(bad)
jns
push
aam
mov
call
leave
daa
test
mov
and
(bad)
mov
jg
mov
push
cmp
dec
in
push
(bad)
jmp
push
std
loopne
mov
cmp
add
gs
imul
mov
stc
cld
retf
fdivr
(bad)
(bad)
inc
fs
cld
xor
gs
fistp
pop
xor
scas
fst
adc
mov
jmp
inc
(bad)
(bad)
mov
lock
cmp
fnsave
ins
fs
dec
nop
xor
mov
sbb
popa
and
mov
pop
push
ret
pushf
inc
cmp
mov
ins
loopne
(bad)
(bad)
dec
sar
test
cs
(bad)
addr16
xchg
xchg
mov
stos
add
push
mov
scas
cmc
cdq
(bad)
(bad)
(bad)
call
fistp
push
mov
mov
or
jg
jg
inc
retf
sub
push
push
(bad)
(bad)
(bad)
call
sub
loop
nop
add
inc
xchg
and
(bad)
and
nop
mov
(bad)
dec
pop
in
movs
adc
dec
(bad)
fcomip
(bad)
cmp
push
sub
mov
mov
rcl
lock
cmp
fwait
outs
js
sub
sti
mov
std
call
xlat
pop
inc
je
jae
add
push
jne
mov
(bad)
(bad)
inc
xor
push
inc
add
cmp
push
mov
pop
xchg
jns
add
(bad)
(bad)
(bad)
fld
jecxz
and
movs
dec
and
mov
xchg
out
(bad)
scas
sar
jne
(bad)
(bad)
inc
mov
sti
enter
int3
mov
lock
movs
das
mov
ds
leave
in
cs
(bad)
(bad)
dec
fisubr
sub
cmc
sbb
es
xchg
or
(bad)
cmp
jb
fwait
scas
cmp
(bad)
jg
inc
daa
inc
hlt
mov
sti
ret
adc
sub
cmp
push
repz
add
ins
scas
pop
(bad)
(bad)
(bad)
(bad)
cmp
jns
(bad)
pop
sbb
push
das
cld
cs
and
jae
xor
(bad)
in
dec
pop
adc
(bad)
(bad)
(bad)
(bad)
cmp
or
lds
lds
jmp
pushf
sub
xchg
fcom
mov
call
push
cli
jns
out
jg
leave
jge
push
popa
fadd
dec
pop
cmps
jae
(bad)
(bad)
(bad)
ds
(bad)
mov
cmp
inc
(bad)
inc
stos
lods
stc
xor
or
adc
xchg
leave
inc
pop
cli
push
cs
arpl
push
add
scas
(bad)
test
dec
and
icebp
sahf
adc
stos
mov
dec
outs
std
dec
je
lods
clc
lds
hlt
popf
push
je
scas
dec
outs
xchg
(bad)
(bad)
(bad)
call
or
jno
test
cli
pusha
xchg
pop
push
loope
and
aaa
(bad)
fldcw
scas
cdq
inc
cmc
outs
xor
(bad)
(bad)
mov
and
out
es
pop
xor
mov
dec
out
adc
pop
inc
inc
mov
into
mov
outs
mov
call
sbb
mov
(bad)
call
dec
pop
cmp
test
push
mov
test
(bad)
dec
sbb
call
or
pop
(bad)
xor
push
fs
(bad)
jnp
add
inc
lds
and
into
cmp
(bad)
(bad)
call
add
pop
daa
fcom
std
mov
or
mov
pop
pop
dec
cmps
push
(bad)
(bad)
call
aad
out
inc
mov
inc
inc
fsub
(bad)
retf
mov
(bad)
mov
in
pop
mov
jb
fcom
jp
inc
mov
lea
es
lock
pop
icebp
jmp
je
xchg
sub
scas
dec
cdq
aas
mov
dec
outs
dec
(bad)
(bad)
out
or
shl
fs
xchg
jp
enter
jne
adc
add
(bad)
(bad)
(bad)
(bad)
scas
sbb
adc
lods
adc
retf
ss
les
(bad)
jge
pop
scas
rcr
(bad)
(bad)
(bad)
jmp
xor
scas
pop
popa
aas
loope
or
xchg
fiadd
sbb
(bad)
jmp
dec
or
lds
(bad)
mov
fmul
add
mov
pop
aam
and
(bad)
(bad)
jmp
add
xchg
bound
sub
call
movs
inc
push
hlt
push
bound
(bad)
(bad)
dec
fnstcw
imul
aas
jne
test
je
popa
mov
(bad)
(bad)
(bad)
(bad)
cli
dec
movs
je
enter
add
sbb
xchg
test
lahf
mov
mov
jno
mov
fsubr
call
or
stos
jns
faddp
push
inc
lea
xchg
cmp
adc
xor
test
stc
mov
(bad)
fidiv
or
hlt
sub
(bad)
dec
inc
sub
mov
jno
arpl
xchg
push
add
arpl
push
(bad)
(bad)
(bad)
jmp
icebp
mov
pop
inc
sar
sbb
adc
(bad)
test
lahf
fisttp
mov
push
cld
test
pop
(bad)
mov
push
cmp
inc
pop
outs
gs
ss
jnp
(bad)
push
je
pop
into
cmc
mov
sbb
cmp
das
div
or
mov
inc
(bad)
inc
call
retf
loope
mov
inc
mov
ffree
in
lods
cld
(bad)
(bad)
dec
inc
push
push
cwde
jnp
xlat
adc
das
mov
or
lods
push
ds
cmc
xor
jge
(bad)
jg
dec
push
retf
ror
or
cmps
mov
inc
in
(bad)
(bad)
(bad)
jmp
cmps
inc
pop
jb
(bad)
stc
retf
push
arpl
xchg
lods
fld
aam
in
inc
data16
jno
aaa
and
add
out
and
jns
xchg
add
fsub
pop
cmp
xchg
lds
(bad)
int3
adc
test
xor
test
or
(bad)
(bad)
(bad)
jmp
sti
outs
dec
cs
pop
mov
sbb
push
or
pop
jne
cwde
mov
(bad)
(bad)
(bad)
jmp
fiadd
mov
ss
xor
ds
cmc
push
push
sub
dec
push
mov
(bad)
inc
xchg
add
dec
mov
xor
jg
mov
pop
fcom
sbb
add
loopne
jmp
pop
mov
ret
add
nop
aam
mov
in
test
sub
mov
jmp
xchg
fisub
imul
mov
add
cmc
mov
(bad)
(bad)
(bad)
out
push
icebp
jl
adc
out
mov
xor
loope
fsubr
jno
iret
dec
mov
ss
push
test
mov
dec
sbb
loop
xor
(bad)
std
adc
push
mov
(bad)
jmp
ds
adc
mov
push
pop
mov
xchg
or
dec
and
bound
iret
pop
jo
cmp
sbb
mov
(bad)
jmp
cmp
mov
mov
inc
jno
add
cld
sbb
fisttp
(bad)
(bad)
dec
mov
mov
cs
pushf
aaa
xchg
mov
rcr
ds
or
(bad)
repz
pop
cmc
fsub
dec
xchg
push
mov
cld
and
jmp
(bad)
cmc
stos
mov
inc
lods
loopne
lods
hlt
push
(bad)
(bad)
push
add
add
das
les
xchg
inc
push
(bad)
test
cmp
dec
cmp
jmp
call
jo
(bad)
(bad)
call
repz
cmp
test
repnz
iret
stos
pusha
lds
cmp
(bad)
popf
mov
xor
mov
push
imul
jp
add
das
idiv
inc
js
mov
(bad)
jmp
adc
rol
out
test
leave
sar
mov
mov
clc
push
(bad)
push
ret
(bad)
(bad)
call
add
jmp
shr
cld
xlat
test
in
xor
aam
cmp
or
dec
loop
xor
stc
es
aaa
push
adc
int3
fisttp
shl
fimul
mov
mov
jmp
loope
push
rcl
test
das
xor
(bad)
xor
(bad)
iret
dec
sbb
push
shr
push
lods
mov
xor
je
jg
xlat
aas
push
sar
test
lds
ins
(bad)
(bad)
(bad)
jmp
cmp
sti
mov
mov
std
fnsave
jl
bound
jge
or
dec
dec
sti
push
sub
std
js
mov
cmc
and
adc
xor
cmp
push
inc
dec
test
(bad)
(bad)
call
mov
xchg
jge
call
je
mov
pop
sbb
and
cmc
cli
dec
mov
mov
fs
stos
loop
or
(bad)
daa
or
movs
loop
(bad)
dec
push
aad
cmp
ret
nop
repz
cld
mov
lock
cmp
adc
and
int
in
push
and
hlt
xor
(bad)
call
adc
xor
inc
cmp
adc
jno
add
jmp
mov
pop
iret
jnp
cmp
add
mov
cmp
test
or
sub
rol
retf
add
(bad)
(bad)
(bad)
jp
xor
ins
xchg
and
loope
or
and
or
mov
lods
push
push
mov
jmp
cmps
inc
es
cmc
push
cmp
or
inc
push
mov
call
dec
cwde
and
cmp
fsub
mov
mov
dec
push
movs
xor
jbe
(bad)
inc
cld
dec
mov
pop
leave
cli
xor
sbb
jae
mov
pusha
sub
outs
xchg
icebp
jno
sbb
es
adc
mov
(bad)
(bad)
(bad)
jmp
jl
xor
test
xchg
stos
lock
push
jno
ins
loope
movs
mov
mov
or
add
retf
les
pop
inc
outs
nop
stos
mov
adc
and
fs
(bad)
(bad)
(bad)
jg
and
dec
ins
rcl
xchg
daa
aad
jecxz
jle
adc
(bad)
(bad)
(bad)
inc
mov
(bad)
movs
pop
out
cld
push
xchg
sub
push
js
mov
pop
and
push
enter
(bad)
jmp
inc
dec
xchg
add
push
or
and
jl
add
add
mov
hlt
push
jo
imul
xchg
(bad)
(bad)
(bad)
jmp
cmp
push
mov
inc
mov
cwde
aam
and
mov
and
(bad)
push
cmp
lahf
adc
mov
pop
mov
icebp
fxch
inc
daa
arpl
imul
dec
call
fist
mov
push
mov
sbb
je
sub
idiv
and
sahf
fidivr
xor
pusha
sub
cmp
sbb
xchg
hlt
mov
(bad)
(bad)
push
add
push
out
sub
ja
mov
cwde
out
xor
(bad)
mov
fcmovnb
pushf
mov
jp
cmps
dec
ins
repnz
sbb
das
es
scas
push
mov
jo
(bad)
cmp
and
dec
sub
shl
pop
inc
jo
dec
sub
xor
inc
push
push
push
hlt
sbb
(bad)
(bad)
jmp
mov
stos
aam
or
icebp
out
cmp
add
xchg
mov
inc
add
(bad)
jmp
fs
add
mov
(bad)
stc
jne
das
cmp
ret
add
pop
mov
mov
xor
inc
movs
jbe
pop
or
loopne
(bad)
fmul
out
rol
mov
call
sahf
mov
dec
mov
out
mov
xlat
lea
pop
jg
sub
clc
scas
(bad)
(bad)
(bad)
push
cmp
push
icebp
js
mov
mov
or
retf
mov
push
adc
ret
xchg
(bad)
fwait
xchg
lds
dec
call
outs
pop
sbb
les
dec
adc
(bad)
(bad)
jmp
adc
(bad)
ffree
aad
xchg
jns
jmp
or
cmp
sbb
(bad)
mov
in
mov
sbb
jns
sub
sub
out
ins
cmps
mov
jne
mov
dec
mov
ins
push
call
or
adc
js
add
in
cmp
(bad)
jmp
lahf
leave
pusha
add
xor
mov
shl
pop
lea
jg
xchg
sbb
sbb
std
xchg
jae
test
sar
inc
dec
and
mov
push
cmc
pushf
loopne
mov
mov
pushf
cwde
dec
bound
scas
add
xchg
dec
jg
daa
xor
cdq
inc
cmp
mov
cdq
xor
xchg
shr
(bad)
(bad)
(bad)
mov
mov
ror
lods
push
add
icebp
pushf
push
or
or
fwait
mov
shl
mov
and
arpl
in
or
das
test
clc
jg
(bad)
aas
call
test
mov
out
jecxz
retf
aaa
adc
or
(bad)
jmp
mov
adc
dec
lea
std
xor
push
mov
pop
mov
into
adc
movs
into
cli
jge
cmps
dec
sbb
(bad)
mov
add
shl
inc
xor
std
xchg
(bad)
(bad)
jmp
mov
jmp
fisub
mov
push
or
mov
sahf
push
jno
(bad)
call
jne
xchg
in
jno
int
xor
pop
pop
je
xor
pop
cmp
jmp
in
aad
cmps
mov
mov
mov
stos
fwait
cmps
dec
fsubr
cmp
or
jl
xchg
push
popa
pop
popf
cmp
and
inc
mov
fsub
xchg
xchg
jbe
add
sahf
movs
test
mov
(bad)
(bad)
jg
inc
mov
xor
jb
out
call
adc
push
lods
adc
retf
(bad)
jmp
adc
int
stos
mov
and
inc
fbstp
in
(bad)
inc
shr
xchg
fsin
dec
cmc
adc
inc
(bad)
and
mov
dec
lods
stos
jo
mov
call
loope
xor
(bad)
jnp
std
(bad)
(bad)
dec
out
add
and
or
popf
mov
mov
(bad)
(bad)
call
push
les
inc
int3
cmps
jne
icebp
xor
dec
jno
out
jb
mov
in
mov
mov
jmp
or
cmp
push
ret
add
lahf
cmp
(bad)
(bad)
cmp
adc
call
iret
js
sub
fnsave
sub
jge
mov
je
leave
sub
outs
outs
xchg
sub
outs
sub
jg
scas
cmp
enter
push
mov
add
call
push
call
nop
xor
test
dec
popa
daa
dec
out
into
inc
ret
aas
or
xor
cdq
(bad)
dec
xor
lods
int
xchg
push
fsubp
vpsllq
lahf
xchg
fisttp
ficomp
mov
(bad)
push
mov
ret
push
xor
je
cmp
out
dec
gs
or
cmp
mov
(bad)
(bad)
dec
mov
jmp
ror
movs
mov
or
das
mov
xchg
pop
imul
jnp
sub
push
gs
inc
call
scas
fdiv
scas
loope
(bad)
push
call
(bad)
dec
pop
enter
xchg
imul
lods
(bad)
sub
add
(bad)
(bad)
(bad)
(bad)
std
mov
dec
sbb
add
lods
push
loope
mov
jge
sub
and
jb
jb
ficom
(bad)
pop
or
jae
cmps
fidivr
data16
(bad)
(bad)
(bad)
jmp
xor
fdivr
outs
xor
mov
add
xchg
jns
jmp
xor
dec
outs
xor
std
(bad)
out
sub
jb
fwait
adc
rcr
les
mov
mov
adc
div
fld
mov
and
inc
stos
mov
(bad)
mov
add
fadd
shr
dec
inc
mov
push
dec
adc
hlt
in
xor
(bad)
(bad)
call
aam
ret
pop
in
repnz
push
pop
cli
daa
or
sub
sub
outs
(bad)
(bad)
jmp
xor
or
nop
lahf
fidivr
or
dec
outs
dec
and
push
jns
or
dec
mov
lods
sti
mov
push
push
or
xor
and
jmp
and
in
jl
repnz
loopne
push
push
cmp
into
inc
push
mov
into
pusha
idiv
(bad)
(bad)
dec
fisub
lods
add
pop
fsqrt
mov
jne
leave
adc
xor
enter
(bad)
(bad)
cli
xchg
cmps
fist
or
cmp
push
in
jbe
retf
dec
or
test
cmp
jg
jmp
mov
pop
scas
imul
cwde
enter
(bad)
int3
mov
icebp
(bad)
dec
das
or
ret
pop
test
addr16
xchg
(bad)
(bad)
(bad)
(bad)
mov
xchg
pop
mov
lea
jmp
adc
jmp
sbb
(bad)
jg
les
das
xor
icebp
xchg
cmps
ret
fs
ret
jb
and
push
dec
cli
(bad)
jnp
(bad)
int3
adc
sub
rol
(bad)
(bad)
test
retf
pop
lahf
into
shl
push
cmp
nop
or
mov
push
loop
mov
sbb
(bad)
call
pop
pop
add
and
(bad)
in
xchg
sbb
ret
(bad)
fistp
ret
out
mov
sbb
add
jp
test
leave
push
fcom
das
cli
leave
xlat
repz
lea
std
pop
sub
mov
call
sbb
fwait
(bad)
sub
imul
aaa
and
lock
mov
(bad)
(bad)
(bad)
jmp
jbe
sbb
call
fst
lods
push
jg
pop
outs
mov
sub
jmp
sbb
add
mov
adc
dec
adc
aas
rol
mov
pop
cmp
(bad)
jmp
jle
sti
pop
push
cmps
leave
loop
outs
xchg
and
mov
add
sub
dec
ret
cmp
(bad)
(bad)
dec
sbb
add
call
pushf
(bad)
mov
test
cmp
push
ins
int3
jl
mov
push
(bad)
xchg
hlt
(bad)
(bad)
(bad)
(bad)
call
fldcw
sub
shr
popf
fs
stos
(bad)
cmc
sbb
fbstp
ins
(bad)
(bad)
(bad)
jmp
movs
retf
push
sbb
jecxz
ss
pushf
mov
stos
rcr
les
rcl
(bad)
(bad)
jmp
icebp
pushf
dec
add
not
sbb
dec
rcl
sbb
lea
or
loopne
xor
int3
stos
retf
xor
xlat
ds
xchg
and
enter
xchg
or
sbb
call
(bad)
loopne
cmp
mov
hlt
(bad)
and
sub
push
ss
xchg
and
push
pop
into
inc
cmp
je
das
ins
pop
call
jge
sbb
pop
call
(bad)
(bad)
push
mov
xor
cmc
ins
leave
test
xchg
jbe
pushf
sub
cwde
in
movzx
in
div
(bad)
(bad)
inc
ret
or
jp
ins
adc
sbb
mov
pop
and
xlat
inc
jge
sbb
aam
iret
mov
bound
aam
sahf
adc
mul
(bad)
into
pop
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
xor
pusha
mov
add
shl
inc
mov
lock
retf
push
mov
mov
mov
(bad)
(bad)
(bad)
call
add
dec
iret
push
pop
push
xor
rol
mov
lds
movs
sub
addr16
test
ja
(bad)
out
idiv
call
dec
adc
pop
in
addr16
(bad)
(bad)
jmp
lahf
fbstp
in
(bad)
outs
fisub
jle
fs
stos
dec
leave
mov
sub
mov
sbb
dec
or
sub
ins
sbb
push
test
add
mov
(bad)
call
or
xor
xchg
popa
add
push
push
stc
and
adc
(bad)
jg
test
fwait
pop
jge
sahf
add
mov
jmp
(bad)
adc
xor
sub
push
cmps
rcl
je
(bad)
pop
imul
pop
push
lods
fs
int
out
xchg
xacquire
in
test
push
fcomi
sub
(bad)
push
(bad)
pop
sar
sbb
xlat
xchg
xchg
xchg
inc
sub
ds
(bad)
(bad)
(bad)
dec
xor
aaa
dec
loopne
aad
xor
int3
cmp
cmp
aas
jae
push
pop
std
adc
(bad)
inc
ins
pop
(bad)
sar
push
in
enter
adc
loop
mov
(bad)
inc
cdq
add
movs
jp
lahf
xchg
das
xchg
or
(bad)
dec
sub
(bad)
(bad)
(bad)
dec
imul
xchg
loope
sub
add
add
mov
push
mov
push
iret
jmp
mov
call
add
test
and
dec
xchg
mov
(bad)
(bad)
(bad)
mov
xchg
rcr
or
test
frndint
pop
jecxz
mov
push
fs
(bad)
(bad)
(bad)
jmp
mov
lock
ins
mov
inc
inc
dec
cmp
das
enter
mov
outs
fisttp
(bad)
jmp
sub
das
test
(bad)
or
and
sbb
fsubp
jne
push
cld
dec
pop
inc
in
xor
cs
jo
call
xchg
scas
repz
outs
adc
aas
pop
imul
and
pop
out
loopne
mov
(bad)
(bad)
mov
cmp
mov
pop
loop
fisubr
xor
mov
or
cs
(bad)
(bad)
dec
es
dec
mov
popa
dec
iret
shr
(bad)
xchg
pop
lock
cli
outs
adc
dec
add
(bad)
dec
pop
or
jecxz
ret
xchg
cli
xor
dec
jp
dec
dec
mov
lahf
fdiv
adc
ret
scas
pop
jle
sbb
sbb
cmp
jmp
and
cmps
push
dec
das
ds
pop
sub
(bad)
(bad)
(bad)
jg
stc
sti
adc
shl
movs
push
daa
test
repnz
add
ins
clc
(bad)
jg
fsub
arpl
dec
dec
jle
imul
xchg
fwait
mov
or
clc
stos
push
test
xchg
and
push
cmps
aas
js
cmp
jo
out
(bad)
(bad)
(bad)
call
test
test
out
push
and
xor
les
add
sbb
fs
jmp
inc
pop
xor
add
xchg
or
(bad)
(bad)
jg
(bad)
mov
xchg
test
test
cmp
sub
call
(bad)
(bad)
(bad)
push
out
inc
in
jne
xchg
mov
outs
popa
(bad)
xchg
dec
inc
mov
pop
mov
push
pop
add
cmp
inc
lods
add
sti
mov
mov
add
push
(bad)
(bad)
(bad)
call
add
jns
or
shr
add
dec
adc
scas
imul
(bad)
(bad)
(bad)
push
add
xor
mov
xchg
sbb
outs
(bad)
arpl
mov
mov
aaa
sub
(bad)
(bad)
jmp
inc
sub
pop
add
cs
arpl
fisttp
rol
loop
les
(bad)
(bad)
(bad)
dec
cmc
bound
and
xor
dec
sti
stc
push
aam
out
jbe
pop
inc
in
push
cmc
out
xchg
lods
jmp
sbb
sbb
inc
adc
(bad)
(bad)
push
mov
(bad)
cdq
mov
or
pop
int
and
mov
dec
aas
cmps
ja
lds
adc
out
jp
mov
sar
xchg
and
std
(bad)
(bad)
fcomip
in
pop
es
pop
pop
push
out
xchg
xor
retf
pop
mov
ret
add
mov
jne
stc
stos
mov
inc
cs
sub
jg
jmp
aaa
dec
jo
xor
xor
sbb
push
inc
push
pop
push
test
(bad)
push
das
xor
ss
test
dec
mov
rcl
js
(bad)
mov
mov
cmp
imul
scas
(bad)
rcl
(bad)
(bad)
call
push
cmps
lea
enter
imul
es
in
out
pop
and
je
pop
imul
aas
int3
pop
or
imul
push
scas
fisub
jmp
add
push
push
ins
dec
hlt
clc
(bad)
(bad)
jmp
mov
mov
je
pop
cmp
loop
mov
aam
ins
test
(bad)
out
pop
test
xlat
xlat
stc
push
pusha
pop
cmps
adc
sbb
inc
nop
xor
dec
mov
popf
(bad)
(bad)
(bad)
inc
jg
ins
ins
cmp
imul
loop
movs
adc
mov
xchg
jae
push
fdiv
jmp
sub
stos
pushf
inc
sbb
or
test
or
ficomp
out
adc
jae
(bad)
(bad)
(bad)
push
sbb
or
bswap
out
shl
mov
js
mov
sub
scas
pop
mov
inc
jo
in
jns
das
mov
sub
and
in
push
pop
mul
(bad)
(bad)
cmp
iret
sub
sbb
push
addr16
cwde
ret
pop
push
(bad)
(bad)
(bad)
call
jp
test
shl
test
(bad)
ds
pop
pop
jno
scas
mov
mov
push
pop
icebp
jne
(bad)
(bad)
(bad)
inc
mov
bound
mov
adc
add
mov
pop
rcr
ds
inc
iret
int
cmps
sbb
das
jecxz
adc
(bad)
(bad)
(bad)
jmp
in
xor
in
repz
hlt
sti
fistp
lea
jbe
and
lea
dec
inc
inc
(bad)
dec
(bad)
jmp
shl
pusha
xor
xor
scas
cmps
rcr
or
cmp
(bad)
(bad)
in
dec
jp
aam
out
sbb
shr
nop
(bad)
(bad)
xchg
jbe
push
mov
inc
(bad)
(bad)
(bad)
dec
inc
daa
xchg
gs
jmp
shl
inc
fst
loopne
pop
shl
or
(bad)
(bad)
dec
sar
stc
scas
sub
lock
in
sbb
mov
fild
aam
sbb
xchg
test
xchg
sub
sub
dec
xchg
movs
xchg
outs
retf
std
mov
pop
icebp
mov
push
pop
mov
sub
call
mov
retf
jnp
xor
inc
les
das
add
add
jg
(bad)
(bad)
inc
das
repz
jae
and
and
retf
pusha
xor
mov
adc
(bad)
(bad)
jmp
mov
outs
scas
push
es
or
aaa
xor
or
das
dec
push
jns
inc
bound
add
pop
in
jns
jmp
ss
in
mov
sahf
sub
jp
mov
mov
ret
sub
movs
and
(bad)
jmp
leave
popf
imul
cmp
pop
push
std
push
sbb
mov
js
push
or
stos
(bad)
(bad)
(bad)
fld
push
xor
dec
daa
hlt
and
out
bound
inc
cmp
addr16
jl
nop
(bad)
mov
loopne
push
in
js
cmp
aad
lods
mov
outs
idiv
adc
adc
sub
out
pop
loopne
(bad)
enter
(bad)
pop
xor
xor
pop
ret
dec
inc
fbstp
test
stos
ins
add
jle
jbe
aaa
std
mov
cmp
inc
es
or
in
pop
(bad)
(bad)
(bad)
call
cmps
dec
or
jnp
sub
jg
adc
xchg
mov
mov
(bad)
(bad)
fdiv
es
aam
sahf
in
rcl
loope
lock
js
mov
outs
(bad)
call
loopne
jo
les
and
sbb
sbb
adc
in
xchg
scas
pop
ds
js
call
adc
movs
cmps
shr
cmp
push
into
sbb
into
scas
add
(bad)
(bad)
push
data16
pusha
call
pop
pop
xor
ror
pop
pop
and
aad
jbe
(bad)
(bad)
jmp
inc
nop
sub
jmp
sbb
mov
loop
rcl
iret
mov
(bad)
pop
jp
retf
push
std
jbe
pop
std
mov
mov
dec
jmp
add
sub
loop
xchg
call
scas
cmc
data16
shl
inc
xor
pop
cmp
lock
(bad)
(bad)
(bad)
push
addr16
shl
outs
add
inc
add
cmp
mov
ror
lock
neg
pop
cld
(bad)
jmp
inc
xchg
sbb
cmp
cmp
in
pushf
hlt
cmp
xor
push
shr
ror
daa
sub
jp
outs
mov
mov
push
gs
fadd
pop
test
inc
mov
or
out
cdq
lods
call
or
in
mov
(bad)
in
xchg
(bad)
(bad)
(bad)
(bad)
mov
sbb
in
jmp
loop
popf
loope
cld
adc
mov
or
sahf
test
and
mov
or
add
sub
call
shl
pop
jmp
ins
test
mov
rcr
pushf
or
(bad)
(bad)
jmp
ret
sti
mov
nop
push
stc
pusha
jmp
sub
loop
jmp
arpl
mov
(bad)
jg
(bad)
and
mov
inc
shl
fmul
test
(bad)
push
push
sbb
mov
jno
ja
push
scas
push
scas
pop
into
leave
jbe
scas
inc
xor
(bad)
(bad)
jle
or
cdq
frstor
adc
sar
scas
jnp
sub
call
fs
or
cs
and
(bad)
call
out
das
into
outs
mov
test
mov
mov
ret
xchg
and
cmps
pop
outs
sbb
mov
je
lahf
hlt
loopne
mov
mov
(bad)
(bad)
push
xchg
sub
add
addr16
mul
aam
sbb
jmp
jle
stc
mov
sub
inc
ror
xor
cli
push
call
(bad)
(bad)
jnp
fs
xchg
rol
cmp
sub
into
lds
or
inc
scas
cs
jns
(bad)
(bad)
(bad)
jmp
push
xchg
push
or
clc
push
push
sbb
ds
dec
pop
lods
push
jl
dec
and
cld
(bad)
(bad)
push
hlt
dec
retf
pop
leave
arpl
ds
and
imul
add
xor
(bad)
(bad)
inc
call
mov
jne
inc
pop
enter
push
addr16
jg
(bad)
(bad)
push
hlt
bound
or
and
lea
movs
cmps
add
pop
inc
mov
xor
push
xchg
add
mov
mul
das
mov
add
xor
(bad)
(bad)
(bad)
in
jle
movs
mov
ror
mov
addr16
xchg
cld
mov
pop
push
mov
lock
(bad)
call
jnp
and
loopne
dec
loope
out
rcr
dec
ins
aad
adc
(bad)
(bad)
call
ins
mov
ss
mov
or
mov
xchg
rcr
mov
lock
jmp
(bad)
mov
nop
scas
sub
push
(bad)
(bad)
jg
cmp
or
pop
jbe
or
mov
cwde
fistp
sbb
push
dec
jle
dec
repnz
aad
pop
aad
das
pop
xchg
repz
cmps
movs
push
sub
mov
jmp
shl
outs
mov
inc
cmp
mov
out
sub
add
int
sbb
sbb
(bad)
(bad)
(bad)
call
xor
mov
daa
mov
sub
cmp
jno
scas
pop
(bad)
mov
mov
push
ret
(bad)
jmp
cmps
outs
push
les
mov
jecxz
lods
div
loop
pusha
inc
mov
call
xchg
(bad)
sbb
repz
mov
cmp
cli
dec
ja
fcom
(bad)
(bad)
in
jmp
lock
aad
ficom
call
imul
jb
adc
pop
or
jecxz
(bad)
mov
lea
sbb
ds
das
das
gs
push
mov
(bad)
mov
(bad)
jecxz
mov
imul
mov
sbb
call
out
(bad)
je
xor
xor
pop
clc
sbb
ret
jp
or
jns
mov
inc
push
adc
xchg
out
xor
enter
in
jmp
sub
fcomip
(bad)
jnp
imul
ret
pop
stos
aad
mov
cmp
jnp
mov
add
xchg
fs
(bad)
call
push
xchg
mov
add
pop
sub
xor
add
(bad)
fcomip
adc
cmp
gs
jbe
cwde
cmc
jns
shr
mov
loope
push
fs
idiv
popa
mov
pop
mov
fild
mov
(bad)
(bad)
call
mov
leave
(bad)
pop
stos
je
mov
aam
mov
(bad)
(bad)
call
adc
push
push
mov
or
(bad)
sar
ror
push
aad
int
cmps
call
(bad)
(bad)
(bad)
jmp
xchg
mov
sti
(bad)
mov
movs
jne
mov
fsub
inc
xchg
xchg
xchg
clc
(bad)
dec
test
pop
jg
(bad)
(bad)
jmp
loopne
in
rol
add
js
dec
sbb
sar
cld
pushf
nop
arpl
or
sub
cmp
out
sti
(bad)
(bad)
(bad)
jmp
popa
jge
outs
out
xchg
jecxz
mov
sub
retf
xchg
cmps
inc
mov
(bad)
jl
hlt
fst
ins
call
test
ds
dec
cmc
leave
lock
call
push
xchg
push
popf
push
shr
pusha
dec
out
jg
inc
sbb
mov
lods
push
mov
fnstsw
push
in
imul
cmps
icebp
dec
adc
sbb
push
gs
jbe
xchg
(bad)
(bad)
(bad)
jmp
in
out
or
jno
jmp
push
movs
mov
cmps
jecxz
adc
gs
pop
(bad)
(bad)
(bad)
(bad)
ficomp
xchg
test
mov
enter
jbe
mov
ja
lods
or
dec
ss
out
mov
jb
jle
xchg
(bad)
(bad)
(bad)
dec
adc
xor
add
into
int3
mov
inc
pop
inc
adc
test
pop
jl
(bad)
gs
sub
addr16
fadd
add
(bad)
(bad)
fdiv
mov
mov
mov
arpl
in
(bad)
out
jecxz
mov
add
(bad)
mov
clc
sbb
test
adc
int3
(bad)
(bad)
jmp
daa
cmp
sbb
scas
or
sub
mov
stos
cmc
(bad)
(bad)
(bad)
inc
scas
inc
xchg
(bad)
jmp
rcr
retf
jl
ret
mov
ffreep
jecxz
clc
(bad)
(bad)
(bad)
push
push
(bad)
push
popa
inc
es
cmps
adc
and
movs
cmps
das
inc
sbb
push
jns
shl
aas
push
test
fist
xchg
sbb
adc
(bad)
(bad)
push
pop
stc
jnp
dec
add
and
ret
call
jb
les
inc
lds
jmp
(bad)
mov
scas
inc
cwde
loop
lock
jle
les
mov
push
gs
ja
cmp
add
jmp
ror
inc
loope
cmp
mov
(bad)
(bad)
mov
out
outs
and
popa
loopne
js
dec
jo
js
lock
mov
mov
into
dec
lods
(bad)
(bad)
(bad)
call
pop
inc
imul
fnstenv
add
pusha
jp
xchg
scas
cmp
(bad)
jmp
adc
es
jbe
stos
mov
in
add
pop
and
out
or
cmp
adc
dec
xor
pop
fsubr
fsubr
push
and
retf
(bad)
(bad)
jg
xor
out
jno
(bad)
std
clc
(bad)
dec
mov
mov
movs
add
push
cs
fs
inc
mov
jmp
mov
(bad)
(bad)
(bad)
inc
hlt
jg
sti
movs
ror
cwde
mov
imul
sub
and
adc
movs
add
fdivr
push
jge
mov
lahf
xchg
inc
xchg
cmp
push
js
inc
jb
push
repnz
fdivr
or
sar
inc
sbb
mov
aaa
std
jmp
cli
mov
retf
lods
push
mov
ds
jb
push
popa
mov
mov
(bad)
call
adc
outs
aas
or
mov
fs
pop
stos
dec
mov
mov
(bad)
(bad)
(bad)
cli
jle
or
mov
adc
ret
sbb
out
setp
jecxz
xlat
jmp
pop
or
imul
retf
aas
and
add
cli
outs
mov
jg
jae
dec
leave
in
jns
sti
sbb
(bad)
(bad)
jmp
ror
and
ins
test
adc
jbe
out
dec
(bad)
pop
cmp
sbb
sti
inc
add
fistp
push
fnstcw
(bad)
fcomip
xor
enter
sbb
jns
sub
or
push
outs
mov
xchg
push
push
jo
(bad)
inc
jle
popf
jno
int3
sub
sahf
arpl
xchg
mov
scas
mov
fidivr
(bad)
jg
adc
movs
or
jg
push
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
pushf
or
xor
mov
test
arpl
mov
addr16
aam
mov
cmps
cmp
mov
xor
(bad)
(bad)
inc
jne
out
xor
mov
ror
cmp
jl
stc
mov
dec
(bad)
(bad)
fcomip
daa
aad
ds
call
popa
stos
ret
add
call
(bad)
(bad)
(bad)
dec
jecxz
xor
fistp
sub
inc
gs
ds
mov
pop
ja
mov
sub
mov
je
adc
mov
xchg
(bad)
(bad)
inc
push
lea
cs
test
out
icebp
jg
rcl
sub
(bad)
(bad)
jg
mov
xor
or
jb
leave
xchg
inc
or
push
fwait
xchg
icebp
popf
push
sbb
add
dec
out
inc
cli
mov
mov
dec
mov
pop
stos
into
push
(bad)
(bad)
call
fcomp
dec
mov
into
xlat
add
xlat
in
cdq
jo
pop
or
cld
sbb
pop
jecxz
cld
jns
jo
jmp
ds
call
lods
ins
fdiv
sbb
dec
clc
aad
fidiv
mov
mov
push
fstp
sub
idiv
test
pop
xor
pop
sbb
stos
(bad)
(bad)
jmp
xchg
div
fmul
popa
jae
div
imul
inc
(bad)
(bad)
(bad)
jmp
cmp
sti
loope
dec
xchg
rcl
xchg
jns
retf
movs
mov
(bad)
(bad)
(bad)
call
fbld
aas
pop
test
aas
push
mov
push
nop
test
out
(bad)
leave
js
jge
(bad)
(bad)
(bad)
push
mov
xchg
ror
(bad)
mov
out
jp
call
fwait
aaa
jmp
(bad)
(bad)
(bad)
dec
and
sbb
fiadd
sbb
sahf
adc
and
jbe
and
(bad)
sub
cli
(bad)
fbstp
sbb
scas
inc
daa
fs
bound
scas
(bad)
(bad)
(bad)
jmp
xchg
push
push
mov
add
mov
pop
sub
mov
and
(bad)
call
cli
in
iret
add
in
mov
mov
mov
mov
jg
jmp
in
scas
fwait
in
inc
jp
retf
adc
mov
pop
aas
shl
fcomip
mov
mov
mov
arpl
iret
dec
sbb
loope
int3
jl
mov
or
adc
(bad)
(bad)
cmp
cmp
call
icebp
mov
in
and
xlat
sub
(bad)
jmp
and
push
mov
xor
push
push
imul
arpl
pop
cmc
mov
fs
cwde
pop
lea
mov
iret
ins
ss
jge
int3
add
(bad)
(bad)
(bad)
inc
std
je
xor
fadd
enterw
lock
mov
cmp
cmps
(bad)
(bad)
(bad)
(bad)
call
ret
ds
mov
retf
or
clc
call
push
(bad)
jmp
je
shl
loopne
or
sub
clc
mov
dec
lods
lods
call
(bad)
(bad)
jmp
or
movs
loopne
out
test
jbe
jl
neg
pop
aas
mov
push
mov
rol
and
(bad)
inc
lea
fisubr
es
adc
(bad)
(bad)
adc
adc
mov
cdq
adc
jmp
and
push
daa
in
outs
test
xor
sub
(bad)
(bad)
(bad)
call
leave
or
mov
retf
jno
ds
dec
(bad)
jb
fsub
mov
jmp
add
icebp
jmp
sbb
jb
push
clc
dec
ret
push
sbb
addr16
(bad)
(bad)
(bad)
jmp
lods
ins
jmp
fs
sar
inc
or
ds
(bad)
jmp
sub
xor
(bad)
(bad)
dec
dec
jmp
imul
leave
inc
es
jb
push
mov
jmp
in
je
sub
(bad)
(bad)
mov
int3
ja
and
in
cdq
pop
scas
xchg
sbb
loop
imul
mov
mov
pop
fcos
(bad)
mov
or
aad
xchg
push
icebp
cmp
add
cmp
test
xchg
imul
(bad)
inc
retf
pop
mov
je
or
fsubr
movs
ins
jns
fadd
(bad)
(bad)
inc
and
call
imul
jne
stos
xchg
imul
sti
fisub
dec
mov
cli
(bad)
(bad)
call
xor
mov
pop
stos
push
push
adc
(bad)
leave
jbe
imul
sbb
cmp
adc
fs
pop
mov
leave
or
mov
adc
arpl
(bad)
out
sub
xchg
adc
sar
leave
int3
sbb
out
mov
stos
cmp
jmp
(bad)
retf
xor
jp
ret
lods
add
test
(bad)
(bad)
jmp
cs
xor
cwde
ror
mov
dec
(bad)
pop
lods
fsubr
push
jns
stos
fld
(bad)
mov
test
pop
pushf
sar
dec
pop
push
mov
addr16
jns
dec
call
inc
xor
dec
adc
dec
mov
ret
push
sbb
lock
retf
dec
mov
loop
xor
pop
pop
mov
push
daa
out
js
loop
push
mov
(bad)
xchg
ror
test
fst
scas
xor
pushf
inc
inc
(bad)
inc
cld
fstp
xchg
inc
xor
gs
mov
dec
lods
cmp
mov
in
and
mov
nop
xchg
imul
mov
movs
daa
stos
sub
pop
movs
ficom
mov
dec
lds
jge
call
mov
neg
push
fs
out
(bad)
(bad)
(bad)
(bad)
mov
jmp
inc
out
int3
les
xchg
loop
add
stos
push
mov
(bad)
leave
ds
(bad)
(bad)
jmp
xchg
inc
sbb
pop
int
pop
mov
call
mov
pop
push
mov
and
call
cmp
and
out
push
sub
cmp
pop
fdiv
cmp
sbb
jne
cmp
jmp
or
or
loop
in
aaa
loop
pop
out
sub
mov
jp
repz
(bad)
arpl
inc
xchg
xor
ficom
imul
fwait
mov
cmp
adc
push
rcr
(bad)
(bad)
(bad)
jmp
push
out
mov
outs
xchg
ins
cmps
cmp
push
nop
jmp
mov
sub
pop
rcl
call
mov
imul
push
mov
ins
jmp
and
aad
and
dec
lods
fsub
fidivr
daa
and
push
jne
fistp
sub
cli
add
mov
or
hlt
lock
test
(bad)
(bad)
(bad)
call
sar
xchg
mov
ret
lods
sbb
or
rcl
mov
test
jae
clc
jmp
inc
fwait
add
stos
mov
retf
test
(bad)
(bad)
(bad)
jg
sbb
jg
fidiv
or
aas
or
jbe
mov
(bad)
(bad)
(bad)
inc
fld
div
fwait
addr16
mov
xchg
mov
movs
push
sub
ret
rcr
xchg
adc
and
add
push
sar
push
enter
(bad)
(bad)
call
cmp
dec
outs
add
mov
lds
(bad)
scas
xchg
or
mul
add
jg
ins
cld
jmp
and
pop
xchg
add
int3
ins
inc
shl
(bad)
(bad)
(bad)
es
outs
bound
adc
jle
fwait
mov
in
or
push
cmp
sub
(bad)
(bad)
dec
enter
mov
ins
push
dec
and
xchg
jae
adc
pop
cmps
xchg
ret
int3
mov
mov
(bad)
push
dec
ja
fldcw
(bad)
add
sub
xchg
stc
rcl
cmc
cwde
iret
xchg
and
(bad)
dec
push
sub
(bad)
dec
jns
cmc
cmp
add
(bad)
jmp
mov
fistp
or
and
fsub
(bad)
(bad)
(bad)
call
sbb
pop
call
outs
adc
cmp
enter
sbb
or
(bad)
(bad)
jg
mov
fcomp
jmp
aam
out
pop
mov
mov
(bad)
call
std
xor
dec
xchg
out
popw
les
jno
lahf
stos
mov
or
xchg
dec
mov
lahf
test
add
mov
mov
push
(bad)
in
rol
(bad)
(bad)
push
pop
mov
and
jno
pop
addr16
sub
(bad)
(bad)
dec
jnp
aad
adc
ret
call
adc
retf
mov
in
mov
mov
fwait
xchg
fs
mov
add
cmp
cmp
fisttp
mov
daa
ds
rcl
mov
cmc
cmp
test
fstp
adc
(bad)
(bad)
(bad)
jmp
inc
xchg
xor
cmp
xor
pusha
loopne
mov
sub
scas
adc
(bad)
mov
lock
repz
cmps
add
sti
stos
pop
idiv
jbe
sahf
retf
and
sub
sbb
fcmovbe
add
jns
mov
xor
mov
fcomp
(bad)
cmp
cmc
sub
jnp
in
pop
or
pop
out
(bad)
rol
jbe
mov
scas
dec
cli
mov
or
stos
ins
xchg
adc
test
jg
(bad)
call
outs
nop
pop
push
push
mov
mov
mov
push
or
add
push
ret
lahf
jno
adc
and
imul
sar
fnstcw
loop
cmp
pop
enter
pop
icebp
jmp
lea
and
or
inc
test
shr
ins
push
(bad)
(bad)
mov
retf
push
sub
jo
sub
lods
pusha
dec
les
sbb
(bad)
(bad)
(bad)
(bad)
dec
pop
inc
xchg
ret
dec
fisub
mov
xchg
jmp
stc
out
or
(bad)
(bad)
(bad)
jmp
out
cmp
push
popf
pop
inc
mov
sbb
cmps
call
(bad)
(bad)
(bad)
call
or
in
test
dec
dec
(bad)
sbb
xor
hlt
popa
aaa
ja
nop
jne
jbe
jg
imul
inc
jmp
jge
mov
out
clc
or
add
cmp
lahf
sbb
and
jg
jmp
dec
int3
pushf
jnp
adc
es
adc
adc
and
imul
out
mov
jge
add
popa
fstp
xor
jmp
loop
iret
in
pop
jecxz
dec
(bad)
jmp
and
pop
sbb
aaa
sbb
mov
and
popa
divps
or
(bad)
call
mov
jmp
es
inc
mov
mov
and
popa
inc
(bad)
(bad)
(bad)
dec
lock
ss
sbb
jnp
xchg
inc
dec
mov
jecxz
(bad)
(bad)
jmp
sbb
pushf
cli
pop
jo
jle
add
retf
xchg
and
test
adc
jmp
and
(bad)
push
cmps
sub
and
mov
or
cmp
xor
std
lahf
jb
(bad)
(bad)
dec
fst
dec
addr16
pop
jno
nop
xor
(bad)
jbe
add
add
dec
jnp
idiv
repz
jmp
jnp
mov
cs
arpl
jo
fld
xchg
xchg
bound
daa
(bad)
(bad)
(bad)
push
gs
cmp
popf
fcmovnbe
repz
mov
aad
fidivr
(bad)
(bad)
(bad)
call
(bad)
dec
rol
push
pop
xchg
in
bnd
xor
icebp
rol
loope
cld
(bad)
mov
pop
add
mov
sub
leave
les
(bad)
(bad)
std
retf
cmp
add
into
jno
outs
push
ficomp
ins
jns
fwait
imul
(bad)
(bad)
(bad)
call
and
cwde
nop
add
dec
out
push
lods
adc
dec
jmp
push
shl
cmps
jmp
sar
test
(bad)
fnsave
addr16
pusha
mov
mov
movs
call
dec
jno
mov
cld
stc
sbb
fadd
xchg
movntq
or
push
or
or
adc
loopne
fs
(bad)
(bad)
(bad)
jnp
mov
inc
movs
push
and
int3
pop
fidivr
jno
pop
jp
mov
cwde
or
(bad)
push
hlt
add
xchg
out
add
ret
pop
adc
in
(bad)
outs
pop
(bad)
jmp
clc
jecxz
cmp
dec
dec
bound
inc
mov
call
pop
sub
(bad)
dec
fs
pusha
push
out
fldenv
fbstp
sbb
inc
inc
inc
(bad)
jmp
stos
xor
ins
push
out
ror
add
jo
xchg
fild
(bad)
call
cmp
loop
push
scas
mov
sar
in
sti
(bad)
(bad)
inc
cmp
or
das
ficomp
sbb
mov
push
ficomp
mov
mov
xor
pop
adc
lock
(bad)
(bad)
(bad)
push
and
xchg
push
or
ds
push
pop
sub
add
dec
adc
push
mov
(bad)
jmp
or
loop
scas
nop
dec
fistp
mov
inc
gs
sub
pop
out
mov
cmps
mov
and
cmp
loopne
mov
sbb
(bad)
(bad)
(bad)
clc
jmp
jb
or
mov
call
hlt
les
inc
sub
mov
stos
push
int
and
fisttp
leave
imul
or
and
cmp
cmps
add
cmp
repnz
xor
jmp
(bad)
(bad)
(bad)
call
jns
sub
jl
test
mov
addr16
das
push
lods
fdivp
pop
test
ret
call
dec
jg
mov
jmp
cs
jb
cli
pop
gs
sahf
or
shl
retf
fistp
adc
(bad)
(bad)
jmp
leave
pop
test
call
sbb
or
in
out
mov
imul
movs
clc
call
(bad)
in
in
out
dec
scas
cmc
(bad)
mov
(bad)
(bad)
fcomip
lds
out
jle
cmps
push
and
aad
cld
mov
xor
arpl
mov
(bad)
(bad)
(bad)
jmp
retf
clc
int
adc
xor
(bad)
dec
shr
outs
or
sbb
add
stos
jae
out
mov
push
adc
mov
lock
retf
push
or
or
(bad)
(bad)
(bad)
call
je
jmp
add
cdq
dec
out
jo
fwait
cmp
sti
adc
lods
jb
adc
mov
aaa
sbb
adc
int3
jge
inc
scas
cmp
jno
sub
dec
iret
jno
pop
es
inc
rcr
(bad)
(bad)
(bad)
inc
inc
clc
aaa
push
les
(bad)
xlat
push
cli
xchg
xlat
cs
pop
(bad)
cmp
popa
sub
lahf
stos
and
out
lock
popa
push
sub
mov
(bad)
(bad)
(bad)
fidiv
into
mov
aad
sbb
pop
dec
leave
shr
sar
sbb
jmp
push
xchg
mov
inc
hlt
mov
inc
dec
mov
add
jne
sbb
fcmovb
push
ja
and
imul
jp
sahf
adc
out
clc
(bad)
dec
cld
enter
push
jmp
je
mov
xchg
sti
and
xchg
push
push
(bad)
(bad)
dec
xchg
fnstenv
inc
imul
sub
xchg
imul
pop
mov
(bad)
inc
mov
pop
bt
fadd
fs
lods
jp
sub
fldlg2
mov
jmp
push
adc
div
cld
pop
std
xor
add
call
mov
leave
jmp
test
aam
std
sub
fld
push
cli
inc
sub
imul
jmp
dec
fisttp
dec
jg
sub
mov
cmp
sbb
sbb
(bad)
(bad)
(bad)
(bad)
cli
mov
jg
xchg
mov
mov
lea
push
push
push
dec
movs
pop
icebp
inc
fisubr
out
int
and
loop
and
loopne
push
call
add
fcomp
pop
sbb
mov
mov
fistp
or
push
(bad)
aad
cmc
fwait
jmp
dec
in
test
push
test
push
cdq
sbb
xlat
in
icebp
cwde
jae
push
lods
loope
dec
in
fmulp
popa
lock
retf
add
ret
test
(bad)
(bad)
mov
shl
(bad)
jb
push
cdq
sub
nop
stos
ret
jbe
fcomp
loop
fdiv
cmp
mov
jmp
sbb
sub
pop
dec
pop
inc
movs
aas
jbe
xor
or
inc
stos
adc
(bad)
(bad)
dec
out
xor
(bad)
xor
pop
in
push
in
cmps
inc
dec
fld
fwait
clc
push
mov
(bad)
out
clc
push
jae
jo
sub
cmp
dec
int3
cs
inc
pop
xchg
pop
sti
push
xchg
call
test
and
and
(bad)
hlt
ficomp
test
add
cld
cmovne
push
mov
(bad)
(bad)
mov
cs
mov
mov
clc
inc
xor
mov
push
ds
ins
scas
(bad)
fild
and
push
sub
ret
sub
cdq
mov
add
lea
pop
jl
cmp
test
sti
cli
test
jno
mov
(bad)
jg
retf
lods
xor
jo
mov
xor
in
cmp
aad
stc
inc
bound
dec
jmp
xor
lods
add
jne
cdq
in
xor
push
ret
xlat
(bad)
loopne
or
xchg
out
or
popf
call
out
fidiv
(bad)
mov
cs
icebp
mov
xlat
in
mov
int
xor
int3
sbb
mov
push
retf
dec
push
dec
add
push
rol
fisubr
ins
cmp
(bad)
dec
cwde
mov
sar
stc
xchg
(bad)
mov
mov
mov
addr16
mov
mov
jecxz
xchg
sbb
lock
push
add
ja
lods
sti
cmp
cmp
hlt
nop
xchg
mov
or
mov
(bad)
(bad)
(bad)
push
add
aas
mov
adc
cmps
sub
cmp
das
inc
mov
inc
je
sbb
(bad)
(bad)
(bad)
jmp
and
cmp
push
mov
in
dec
stc
ja
fisubr
adc
cmc
movs
stc
(bad)
(bad)
(bad)
(bad)
jmp
xchg
ret
dec
shl
mov
(bad)
aam
inc
xor
lock
xchg
fwait
fs
jg
fcomip
mov
in
into
(bad)
jle
repz
pop
call
std
cmp
sbb
lds
inc
leave
cli
mov
test
(bad)
(bad)
(bad)
mov
jmp
cwde
add
xchg
mov
fwait
push
mov
adc
inc
and
out
jmp
mov
repz
(bad)
(bad)
call
shr
dec
js
stc
mov
fbld
inc
jmp
in
ins
dec
sub
in
xor
inc
(bad)
loop
idiv
pop
mov
jmp
(bad)
(bad)
(bad)
call
and
mov
mov
pop
or
pop
fcom
outs
mov
retf
addr16
ret
call
(bad)
(bad)
cmp
loope
and
jnp
dec
fwait
add
mul
push
mov
cmp
or
add
gs
mov
jmp
ficomp
fwait
jno
mov
adc
movs
inc
lock
ficomp
mov
mov
(bad)
xchg
push
cmps
sbb
mov
imul
jg
dec
jecxz
shl
pushf
shl
icebp
mov
pop
mov
(bad)
(bad)
(bad)
fld
mov
(bad)
push
test
jmp
cmps
jl
pop
dec
pop
jo
add
(bad)
call
js
into
popf
xchg
jae
pop
mov
cmp
mov
das
pop
in
out
in
or
or
outs
adc
add
dec
in
dec
or
mov
iret
sub
add
xor
pop
pop
(bad)
(bad)
(bad)
jmp
jmp
aas
scas
sbb
jmp
dec
mov
and
fldcw
xchg
and
in
(bad)
push
mov
(bad)
adc
lea
pushf
stos
add
adc
(bad)
(bad)
(bad)
jmp
adc
dec
mov
sub
stos
pop
test
cmp
(bad)
into
xchg
jns
repnz
(bad)
(bad)
jmp
ds
push
cli
or
inc
sti
hlt
int3
mov
cdq
ret
in
add
jle
(bad)
sub
or
cli
add
(bad)
(bad)
(bad)
ds
sar
jns
rcl
mov
mov
lods
push
and
stos
lods
and
(bad)
call
xchg
inc
stc
loopne
fmul
mov
cdq
mov
pushf
inc
mov
data16
cmp
pop
popf
sub
cmps
(bad)
(bad)
jg
repnz
push
std
or
ins
shr
leave
idiv
(bad)
(bad)
jmp
inc
cmp
jae
jmp
sbb
movs
ins
or
pop
(bad)
(bad)
(bad)
call
mov
les
(bad)
outs
fstp
daa
fs
movs
xchg
or
(bad)
(bad)
call
mov
cmp
les
pop
in
xor
pop
int
mov
movs
sub
(bad)
jmp
(bad)
in
cdq
out
lea
in
(bad)
mov
push
push
cli
jmp
cs
sti
inc
aam
sbb
(bad)
(bad)
(bad)
(bad)
fcom
jmp
mov
xchg
pop
jnp
sbb
adc
(bad)
enter
inc
sahf
push
adc
pop
dec
das
(bad)
(bad)
(bad)
push
and
scas
mov
xor
sub
inc
lods
test
fnstcw
push
cmp
ins
retf
jmp
xchg
xor
ins
call
mov
retf
aas
aas
dec
stc
push
mov
scas
mov
sti
xchg
clc
test
push
xor
ins
loope
inc
dec
sbb
(bad)
(bad)
(bad)
call
add
pop
test
fdivr
in
icebp
es
xchg
cld
sbb
outs
and
(bad)
mov
enter
clc
lods
sbb
scas
cmp
into
mov
sbb
cwde
dec
lock
je
(bad)
inc
mov
jbe
sub
pop
push
ja
sar
aaa
std
ffreep
bound
in
sub
daa
in
call
mov
popf
dec
aaa
pop
jl
(bad)
(bad)
(bad)
(bad)
mov
fild
pop
out
or
or
cmp
xor
(bad)
(bad)
call
xor
stc
dec
addr16
cmp
(bad)
data16
(bad)
mov
xchg
add
ret
call
jae
adc
pop
cmp
dec
js
inc
int3
fldcw
(bad)
sahf
lea
imul
(bad)
(bad)
(bad)
call
mov
xchg
(bad)
adc
pop
inc
dec
into
std
xchg
push
push
ror
(bad)
icebp
inc
fldcw
mov
aaa
in
xor
(bad)
addr16
inc
inc
add
outs
mov
pop
add
jo
call
out
mov
icebp
ins
cwde
cmpxchg
mov
(bad)
(bad)
(bad)
inc
mov
scas
cmc
mov
mov
repz
push
aad
js
dec
adc
mov
sub
mov
(bad)
(bad)
call
mov
imul
(bad)
xlat
out
and
xchg
mov
push
sbb
stos
xor
(bad)
mov
mov
xchg
xchg
loopne
push
or
popa
ret
xor
pushf
hlt
jbe
dec
mov
icebp
push
das
mov
dec
mov
rcr
cmp
aaa
mov
inc
into
mov
ja
cmp
push
rcr
shl
std
add
(bad)
(bad)
(bad)
jmp
out
stos
fs
jns
aas
push
retf
lock
out
lock
sub
(bad)
inc
dec
stos
and
pusha
mov
clc
outs
push
adc
push
loop
add
(bad)
(bad)
(bad)
jmp
pusha
cmps
pop
adc
shl
add
or
push
push
ins
xchg
stos
fistp
stos
(bad)
jg
call
leave
clc
in
mov
ss
ret
cwde
mov
pop
xlat
out
int3
jmp
ja
(bad)
inc
(bad)
and
in
xor
adc
loopne
jp
sbb
cmp
(bad)
call
inc
dec
push
and
cld
or
xor
pushf
xlat
cmc
movs
addr16
sub
push
adc
ins
inc
and
cmps
ins
into
(bad)
(bad)
(bad)
jg
enter
rcl
adc
sub
sbb
out
hlt
or
pop
aaa
mov
jg
sub
sbb
cmp
sbb
call
aas
jmp
pop
mov
cmc
(bad)
(bad)
push
add
and
xor
fnstenv
inc
mov
push
dec
push
jmp
frndint
cld
dec
ds
fld
imul
(bad)
(bad)
mov
movs
ss
inc
sub
sbb
aad
jo
test
push
jno
ss
xchg
mov
sbb
pop
gs
(bad)
call
or
pop
sub
adc
idiv
(bad)
push
xlat
sub
call
bound
call
inc
rcl
clc
mov
(bad)
(bad)
dec
je
sbb
mov
adc
dec
jb
cli
and
mov
jmp
je
jnp
loopne
or
mov
lds
push
ret
(bad)
(bad)
(bad)
dec
rcr
shl
mov
or
adc
push
outs
xlat
in
dec
movs
rcr
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fcomp
mov
lods
dec
lds
cmp
adc
add
(bad)
iret
pop
dec
ja
pop
hlt
inc
mov
sahf
(bad)
mov
fisubr
std
clc
adc
fwait
mov
sub
dec
ins
mov
dec
dec
and
(bad)
jmp
aas
xchg
shr
in
loop
mov
mov
sbb
xor
mov
(bad)
(bad)
(bad)
(bad)
call
icebp
(bad)
movs
jp
xchg
sub
das
loop
test
stos
not
push
jmp
(bad)
xor
mov
dec
jle
mov
adc
repz
call
(bad)
(bad)
jmp
repnz
daa
aad
dec
xchg
and
fimul
mov
mov
test
sbb
(bad)
int3
mov
repnz
lods
jl
or
(bad)
(bad)
call
pop
xchg
cmp
pop
sub
jmp
(bad)
pop
sub
popa
push
out
cmp
lahf
mov
(bad)
(bad)
(bad)
out
out
hlt
inc
pop
hlt
xlat
adc
sbb
xchg
cmps
lods
jge
sub
xor
cmp
adc
sbb
(bad)
(bad)
inc
mov
ins
inc
ins
mov
(bad)
adc
add
and
inc
pop
movs
mov
(bad)
(bad)
call
stos
repnz
retf
mov
push
mov
cmps
dec
popa
repz
push
cmp
addr16
fiadd
mov
push
mov
mov
test
js
pop
es
xchg
mov
js
lea
(bad)
call
mov
adc
scas
int3
xchg
in
bound
fbld
push
jge
pop
dec
add
xlat
add
(bad)
inc
dec
xchg
sub
cld
ja
bound
adc
(bad)
(bad)
push
cmp
popa
jp
movs
push
repnz
cmp
pop
push
aaa
lahf
pop
jle
cmp
xchg
cmp
pop
cld
(bad)
(bad)
dec
leave
(bad)
add
cmp
xor
inc
sub
pusha
test
clc
cmc
(bad)
inc
add
adc
les
xor
sub
cmp
xchg
out
(bad)
cmp
fisttp
cli
xor
inc
mov
sub
(bad)
popa
jo
mov
(bad)
(bad)
(bad)
inc
or
test
pushf
mov
cdq
and
mov
fwait
cli
inc
dec
mov
jmp
dec
cdq
scas
movs
fwait
pop
xor
shl
loopne
mov
adc
icebp
inc
sahf
cmp
dec
scas
cli
(bad)
call
xor
push
mov
fmulp
dec
cmp
stos
jg
push
sbb
scas
push
and
int3
jg
(bad)
(bad)
(bad)
cmp
mov
(bad)
mov
outs
jmp
lahf
jg
inc
push
jno
int3
div
cmp
and
push
inc
fistp
out
mov
jle
cli
(bad)
(bad)
mov
mov
mov
pop
cmp
inc
xchg
xchg
mov
jmp
cs
fld
jecxz
xchg
adc
dec
push
shr
enter
in
mov
sub
enter
adc
jns
pop
inc
test
in
test
and
(bad)
(bad)
(bad)
(bad)
call
imul
pop
fs
mov
and
push
ficomp
(bad)
into
cmp
leave
(bad)
(bad)
(bad)
(bad)
(bad)
xlat
(bad)
cmp
mov
inc
outs
mov
ins
(bad)
dec
push
xlat
cmp
inc
mov
je
adc
sbb
ja
ss
inc
icebp
outs
or
mov
outs
mov
xor
hlt
cmp
push
les
ret
in
mov
pop
cld
mov
or
pop
dec
or
dec
adc
call
xchg
fisttp
imul
fild
lds
shr
inc
(bad)
push
call
dec
into
push
dec
lods
retf
imul
das
pushaw
(bad)
(bad)
(bad)
call
mov
mov
xchg
je
fldcw
adc
inc
sub
inc
in
dec
lahf
cmps
ret
icebp
cmps
aaa
xor
aad
mov
adc
lock
or
(bad)
(bad)
jmp
js
mov
icebp
mov
rcr
sbb
mov
pop
lahf
(bad)
(bad)
(bad)
inc
push
cmp
xchg
in
xchg
jo
arpl
dec
jne
(bad)
mov
js
fbld
movs
cmp
call
scas
push
arpl
push
lahf
dec
push
cld
xor
loope
int
mov
mov
(bad)
jmp
mov
ret
mov
test
imul
cmp
cmps
lods
adc
into
jno
jo
(bad)
(bad)
inc
pop
jecxz
cmc
and
inc
adc
add
mov
lods
pop
and
jmp
push
sbb
cmp
mov
cmp
aad
add
outs
(bad)
(bad)
call
mov
shl
stos
into
fdivr
and
inc
adc
(bad)
push
outs
fisub
jmp
clc
adc
push
fs
inc
mov
test
nop
ja
std
sbb
and
or
hlt
cmps
pop
pop
xchg
or
ret
iret
in
inc
(bad)
xor
(bad)
fcomip
pop
sahf
add
sbb
push
jbe
adc
lea
jb
je
loopne
jmp
push
sbb
inc
jne
out
loopne
and
bound
fmul
adc
call
outs
(bad)
and
cs
mov
out
sbb
scas
cmp
(bad)
(bad)
push
gs
cli
pop
add
xor
outs
and
hlt
mov
push
pop
out
fwait
mov
enter
fdivr
(bad)
call
(bad)
jnp
or
xor
(bad)
inc
or
xor
(bad)
(bad)
call
adc
pop
retf
call
scas
aad
int
push
push
imul
aas
xchg
(bad)
(bad)
jmp
push
in
ret
fmul
push
pop
inc
inc
inc
mov
inc
fistp
push
inc
(bad)
(bad)
test
inc
push
or
mov
int3
(bad)
leave
adc
mov
test
push
cmp
or
icebp
rol
and
fiadd
jg
movs
sub
pushf
ret
xchg
or
(bad)
jmp
mov
sahf
(bad)
xor
push
cmp
or
sbb
jecxz
and
(bad)
(bad)
push
cmc
and
push
push
inc
iret
and
cli
dec
les
aas
mov
(bad)
(bad)
mov
mov
cld
adc
pop
mov
jne
mov
sub
push
xchg
cmp
(bad)
jmp
xor
(bad)
pop
jg
pop
or
add
mov
movs
mov
xchg
cmp
inc
aam
cmp
fwait
test
fistp
sub
fwait
adc
cmp
imul
std
push
mov
adc
shl
in
ss
(bad)
(bad)
(bad)
call
sbb
std
mov
dec
adc
or
xor
popa
xor
cmp
and
(bad)
(bad)
push
rcl
xchg
mov
popf
cmp
(bad)
xor
mov
mov
mov
call
imul
dec
sbb
sub
push
imul
xchg
dec
add
mov
rcr
push
jge
cwde
hlt
pop
lods
loope
push
inc
sbb
leave
mov
int3
int3
adc
pop
sbb
shl
fbstp
mov
test
jmp
out
mov
lock
fsin
sub
xor
dec
push
cmp
lods
lock
ret
inc
xor
mov
int3
ja
jmp
pusha
cmp
(bad)
(bad)
call
xor
xlat
dec
push
and
mov
and
and
(bad)
dec
push
or
js
pop
adc
xchg
push
jnp
shl
push
jo
mov
(bad)
mov
jo
push
jno
mov
cmc
out
adc
addr16
jmp
ficom
dec
cmp
jne
push
iret
inc
add
inc
loope
mov
mov
addr16
fiadd
(bad)
(bad)
in
popa
add
fdivr
cli
or
jl
mov
xor
and
sti
xchg
jmp
jmp
mov
pop
ds
adc
cdq
lds
mov
jnp
mov
lods
or
rep
inc
(bad)
(bad)
(bad)
(bad)
mov
jg
push
in
stos
outs
cdq
loopne
xchg
mov
jmp
add
imul
add
xchg
xor
push
clc
xchg
js
int3
mov
xchg
fs
scas
xchg
shr
inc
pop
out
cwde
jnp
fcom
mov
pop
pop
add
pop
dec
rcl
fwait
push
mov
fistp
call
fisubr
jnp
leave
mov
inc
mov
mov
cmps
or
inc
push
push
pop
(bad)
call
lock
dec
je
pop
xor
(bad)
(bad)
jmp
ret
sbb
add
vmwrite
lods
(bad)
ror
pop
xor
out
cli
(bad)
jmp
dec
adc
jge
cmc
pop
(bad)
cmp
pushf
lahf
mov
es
and
cmp
jmp
sbb
dec
inc
lods
loop
mov
add
and
mov
mov
retf
(bad)
ins
adc
enter
mov
mov
cld
(bad)
jmp
ss
xor
sbb
jae
dec
repz
call
aas
inc
mov
stos
jle
(bad)
add
pop
jmp
outs
pop
addr16
jbe
or
jg
callw
lahf
icebp
or
jb
les
lds
sbb
push
xor
inc
pusha
movs
(bad)
(bad)
(bad)
push
fist
call
jns
pusha
mov
lea
jmp
scas
ins
mov
bound
(bad)
call
cmps
jne
hlt
into
jle
rol
add
call
(bad)
(bad)
mov
add
stc
jle
movs
push
out
dec
inc
dec
stos
push
dec
mov
dec
mov
(bad)
(bad)
inc
ffree
add
or
adc
not
cmps
cdq
push
int
int3
enter
and
(bad)
(bad)
(bad)
inc
scas
sub
cmp
hlt
enter
test
and
fsubr
sbb
mov
mov
rcr
scas
and
fld
ror
sbb
in
das
and
(bad)
(bad)
call
movs
pop
jbe
fwait
cli
mov
cmc
inc
sbb
xor
(bad)
(bad)
(bad)
(bad)
dec
aaa
dec
aad
ret
pop
fmul
jg
inc
or
call
jp
loope
push
xchg
paddq
jns
mov
loopne
in
mov
test
scas
clc
call
fisttp
sti
mov
(bad)
pusha
fld
enter
add
xchg
scas
scas
(bad)
(bad)
dec
mov
mov
loopne
popf
iret
cmps
leave
jns
sub
dec
mov
je
data16
mov
and
div
loopne
adc
or
aam
mov
stos
retf
gs
mov
out
in
jle
cmc
nop
sub
pop
xlat
cmps
sbb
(bad)
(bad)
(bad)
jmp
icebp
dec
xor
pop
pop
jg
cmp
(bad)
jecxz
test
xor
mov
jnp
add
xchg
(bad)
(bad)
(bad)
(bad)
push
mov
adc
pop
scas
push
ja
lods
or
hlt
call
xchg
add
es
(bad)
mov
or
push
mov
repz
cs
cmp
xor
and
mov
push
stc
mov
sbb
mov
ds
aam
repnz
clc
mov
arpl
cmc
xor
or
hlt
(bad)
(bad)
(bad)
jp
fldcw
fs
jecxz
out
mov
cmps
mov
out
xchg
fidivr
call
aam
je
lods
cmp
rep
int
and
out
or
inc
adc
inc
push
gs
jg
xor
cmp
inc
add
inc
js
(bad)
(bad)
(bad)
dec
jmp
neg
xchg
jo
and
pop
jp
add
adc
test
(bad)
(bad)
(bad)
inc
cmp
xor
gs
push
gs
call
mov
dec
mov
ds
(bad)
(bad)
call
cmp
in
add
jmp
mov
lahf
in
sbb
jg
cmp
(bad)
(bad)
jmp
and
or
fstp
jns
fidivr
and
fdiv
js
pop
(bad)
(bad)
(bad)
inc
jp
leave
ja
sbb
pop
daa
jae
pop
imul
js
inc
aam
adc
sub
ud0
mov
sbb
push
inc
add
out
(bad)
daa
mov
rol
(bad)
(bad)
dec
test
and
cmc
movs
sbb
mov
(bad)
push
loopne
pop
add
xchg
(bad)
(bad)
(bad)
dec
mov
in
fwait
out
mov
add
xor
test
inc
pusha
jne
and
inc
xchg
enter
xchg
jb
adc
mov
ja
xchg
and
inc
mov
movs
enter
outs
jns
or
pop
aam
mov
out
jae
cmp
(bad)
call
sti
movs
or
and
or
rcr
push
mov
push
dec
or
in
push
cld
(bad)
(bad)
(bad)
push
dec
push
pop
fdivr
nop
sub
dec
fwait
iret
fcomp
clc
sbb
jo
dec
test
mov
and
or
and
or
in
add
push
ds
mov
push
lods
jmp
add
ja
dec
xchg
ds
call
pop
cmp
jecxz
cwde
xor
and
xchg
adc
cmc
adc
jae
xchg
(bad)
(bad)
(bad)
call
pop
mov
(bad)
loopne
pop
adc
test
scas
in
je
das
mov
jns
inc
(bad)
(bad)
(bad)
call
cmp
mov
cmp
mov
retf
repnz
stos
and
cmps
shr
pop
stos
cli
and
dec
int
(bad)
(bad)
(bad)
ffreep
jmp
jge
test
mov
mov
and
mov
sbb
mov
aaa
cld
(bad)
in
xchg
pop
cli
stc
stc
mov
pop
xchg
push
xchg
fild
push
mov
pop
fsincos
(bad)
(bad)
(bad)
call
test
nop
inc
jecxz
adc
push
addr16
or
mov
or
lahf
mov
call
cdq
dec
rcr
lods
lock
push
jp
call
std
(bad)
call
xchg
test
jns
adc
ret
dec
or
push
push
push
cld
ja
in
adc
aad
jae
fcom
lods
retf
push
call
std
(bad)
call
jo
or
ret
jle
cmps
inc
xchg
jno
cli
mov
adc
jmp
pusha
enter
xchg
in
mov
adc
xor
jmp
jge
xlat
shr
add
(bad)
(bad)
(bad)
call
js
push
sub
dec
out
or
loope
mov
mov
jg
inc
(bad)
(bad)
(bad)
jmp
add
sub
or
out
scas
adc
mov
pushf
dec
adc
cmp
rol
xchg
loope
xchg
jns
mov
scas
adc
int
not
cmp
or
(bad)
fisub
stos
stos
aaa
das
std
ins
xchg
mov
xchg
mov
sar
(bad)
push
lahf
sti
outs
ror
or
stc
mov
mov
mov
jmp
test
clc
gs
cmp
pop
xchg
xor
jae
clc
(bad)
inc
int3
iret
leave
xchg
jnp
pusha
lea
inc
fist
mov
jmp
mov
sub
cmps
ret
ret
fbld
movs
(bad)
(bad)
(bad)
push
int
sub
pop
adc
bound
lods
inc
add
popa
xchg
(bad)
loope
cmc
jbe
(bad)
call
(bad)
ds
sub
mov
daa
add
jmp
scas
cmp
adc
cmp
xor
enter
jecxz
and
aam
xor
call
leave
leave
call
and
in
addr16
and
rcr
in
mov
push
jg
add
sub
inc
jbe
mov
ret
(bad)
mov
mov
xlat
pop
cdq
leave
ds
push
call
gs
mov
push
push
(bad)
(bad)
(bad)
jg
sub
jecxz
xor
jmp
imul
out
and
daa
call
(bad)
push
(bad)
ins
or
xchg
push
aaa
mov
inc
cmc
xchg
cdq
jg
idiv
dec
cmps
dec
enter
lods
mov
fimul
push
dec
jb
mov
jbe
(bad)
(bad)
(bad)
call
imul
adc
xor
pop
jns
into
xor
std
jae
lods
int3
and
aas
add
inc
stc
mov
or
aaa
hlt
adc
xchg
div
jmp
(bad)
mov
sbb
movs
jo
xchg
aaa
xor
rol
adc
shl
jmp
(bad)
(bad)
(bad)
call
pop
push
and
adc
addr16
and
div
popf
nop
mov
cli
shl
lods
repz
(bad)
(bad)
call
loope
iret
xchg
lods
add
(bad)
pop
fwait
sti
inc
ret
imul
push
(bad)
pop
(bad)
out
jb
push
push
cmp
(bad)
(bad)
(bad)
inc
xchg
add
cmp
in
dec
cld
mov
push
or
(bad)
jg
xchg
mov
or
mov
test
test
ret
in
shl
sub
(bad)
call
test
xor
push
adc
xor
scas
xor
(bad)
inc
pop
inc
test
dec
fistp
pop
sub
lds
inc
enter
std
arpl
fsubr
or
jmp
xor
lea
cmc
(bad)
(bad)
dec
jecxz
mov
mov
movs
mov
push
arpl
aas
push
icebp
mov
xchg
imul
(bad)
(bad)
fbld
sahf
xchg
nop
addr16
in
push
and
loopne
xor
or
cli
mov
sub
test
das
imul
adc
in
popf
pop
outs
hlt
inc
sub
jg
(bad)
jmp
in
pushf
add
fst
repz
inc
movs
cs
mov
(bad)
ror
or
mov
sbb
inc
xor
(bad)
(bad)
jg
jge
push
mov
fs
scas
outs
lods
leave
add
xor
outs
xchg
fs
xchg
icebp
mov
jmp
gs
push
bound
popf
(bad)
mov
sub
cli
call
dec
mov
pop
std
xor
loop
(bad)
lahf
pop
sbb
xor
and
mov
lock
les
xor
in
pop
push
jmp
mov
xor
(bad)
(bad)
jmp
ss
cdq
jg
add
dec
or
add
test
scas
fidivr
mov
lahf
mov
xchg
inc
loopne
dec
into
lahf
and
xor
cmp
out
mov
mov
jne
sahf
xlat
dec
(bad)
(bad)
(bad)
push
xor
cmp
sbb
cmc
dec
xchg
ds
xchg
loopne
and
pop
fnstenv
icebp
iret
(bad)
jmp
sbb
(bad)
movs
sub
test
adc
jecxz
leave
ss
xchg
or
jmp
or
sbb
(bad)
(bad)
jmp
mov
scas
cs
daa
jns
sbb
sbb
es
xor
dec
jmp
clc
mov
ins
inc
mov
ins
adc
push
(bad)
pop
arpl
pop
lods
or
mov
movs
jnp
sahf
imul
xor
movs
(bad)
(bad)
(bad)
jmp
dec
call
mul
ret
pop
mov
in
fwait
sub
call
clc
inc
sbb
mul
pop
adc
mov
cwde
out
lock
dec
and
xchg
xchg
scas
add
retf
(bad)
(bad)
(bad)
fistp
jns
inc
out
call
sub
cdq
or
mov
call
cmp
or
mov
or
call
cs
pushf
add
jo
(bad)
call
fild
jbe
mov
mov
mov
pop
jge
jmp
inc
inc
cmp
call
cld
dec
push
xor
mov
mov
cmp
or
push
je
dec
lock
pop
pop
rol
popa
pop
or
xor
iret
jmp
add
pop
js
(bad)
hlt
rcr
jbe
inc
fisttp
pop
adc
jle
jmp
pushf
ins
xchg
(bad)
(bad)
(bad)
call
sbb
int
pop
cmp
mov
stos
not
lods
adc
push
pop
sbb
push
dec
retf
xchg
outs
lahf
dec
je
pop
aam
push
dec
repnz
xor
inc
push
cmps
sub
ja
mov
and
(bad)
imul
call
call
cmc
fld
add
and
sub
sub
lods
addr16
or
popa
shl
dec
dec
shl
or
call
loopne
mov
shl
or
jmp
cmc
out
loop
in
js
cmp
(bad)
call
js
ins
fild
pop
pop
cmps
fs
and
test
retf
test
cmps
xchg
in
dec
js
(bad)
(bad)
(bad)
jmp
or
xchg
xor
fbld
loopne
not
(bad)
ror
pop
jmp
rcr
(bad)
(bad)
(bad)
inc
cmp
jecxz
sahf
cmp
pop
es
loop
and
mov
mov
sub
push
push
jae
mov
mov
add
inc
rcr
sub
js
jbe
mov
xor
(bad)
(bad)
(bad)
in
rcr
outs
xor
add
ds
fild
mov
out
pop
lods
add
mov
(bad)
(bad)
jmp
ja
xchg
or
in
icebp
out
mov
leave
das
xchg
cs
push
test
leave
inc
sbb
mov
lods
retf
xabort
into
mov
or
dec
not
mov
adc
inc
ja
cmc
mov
mov
retf
idiv
sbb
stos
pusha
inc
(bad)
(bad)
jmp
xlat
fcomp
pop
xchg
cmp
or
fcmovne
add
sar
ja
xchg
dec
pop
shr
mov
(bad)
(bad)
push
dec
lods
into
bound
(bad)
mov
pop
pushf
add
in
lock
fcmovnb
popa
add
(bad)
(bad)
jmp
(bad)
adc
stos
jne
or
mov
sub
inc
jp
xchg
cmc
(bad)
leave
sahf
jg
iret
sbb
call
mov
fimul
inc
loopne
mov
cmp
add
or
jg
popa
add
ds
psubusb
cli
jmp
push
(bad)
(bad)
(bad)
jmp
retf
ret
lea
outs
inc
cmp
mov
push
pop
push
dec
cmps
jns
xor
(bad)
(bad)
cmp
inc
sbb
cwde
pop
ror
popf
push
mov
xchg
shr
pop
cmp
(bad)
(bad)
out
scas
les
push
punpckhbw
sub
inc
retf
jg
leave
std
fldenv
rol
xchg
and
(bad)
dec
fsubr
dec
fisub
lods
xchg
sbb
dec
fxtract
out
cld
ret
aam
add
push
imul
(bad)
(bad)
push
mov
jae
nop
repz
out
mov
pop
pop
cwde
xchg
dec
pop
dec
pop
(bad)
mov
aas
shr
fucom
sbb
pop
daa
mov
in
std
out
pop
neg
mov
and
popa
cmp
fcomp
adc
adc
and
cld
lock
(bad)
(bad)
jmp
movs
aas
pop
sbb
repz
sub
(bad)
push
out
xor
add
cli
(bad)
mov
mov
jecxz
pop
rcr
movs
push
pop
add
gs
jmp
cmp
push
jns
xor
pop
xchg
lock
lods
add
cwde
clc
(bad)
(bad)
cmp
inc
or
pop
mov
push
ret
mov
out
and
mov
mov
inc
sbb
pusha
test
jp
movs
pusha
pop
cdq
jo
jl
mov
(bad)
call
bound
inc
xor
mov
mov
(bad)
(bad)
jmp
in
movs
fidivr
mov
cdq
xlat
cmp
jp
std
jne
push
push
lock
(bad)
inc
and
dec
mov
fwait
push
sbb
test
int
movs
fs
stos
fsubp
cdq
mov
stos
sbb
adc
xchg
stos
fistp
(bad)
cld
(bad)
(bad)
push
pop
repnz
fld
mov
je
dec
jae
push
div
aas
sub
sub
in
aad
sar
push
hlt
repnz
or
pop
dec
daa
lods
pop
and
cmp
das
aam
daa
pop
div
mov
arpl
jno
daa
out
inc
xor
icebp
mov
jge
out
outs
inc
xor
sub
adc
fadd
jno
xor
retf
cld
(bad)
(bad)
call
xchg
jae
retf
call
pop
fmul
sbb
dec
es
pop
test
(bad)
dec
(bad)
(bad)
inc
xchg
dec
out
sub
sub
cmps
dec
lods
movs
ror
fisub
and
(bad)
(bad)
(bad)
(bad)
jge
xor
cmc
out
je
jae
pop
fcmove
add
das
stos
xchg
test
mov
(bad)
(bad)
(bad)
push
xchg
add
jg
mov
ins
add
shl
stos
xor
test
call
adc
or
cmp
fs
inc
inc
sub
ret
xor
jo
inc
stos
push
movs
xor
jg
(bad)
arpl
mov
fcom
(bad)
(bad)
inc
dec
inc
and
fucomp
adc
cdq
adc
out
call
shr
in
out
daa
test
js
stc
(bad)
(bad)
(bad)
jmp
repz
fisubr
adc
inc
repz
loop
pushf
inc
fisub
jmp
dec
enter
ret
test
inc
cmc
je
aad
sbb
fldcw
cli
mov
or
(bad)
(bad)
(bad)
(bad)
mov
aam
xlat
imul
je
pop
cmc
mov
rcr
jl
or
mov
and
push
aas
cmp
test
nop
sahf
and
(bad)
call
dec
fwait
sti
sbb
pop
movs
cmp
test
pop
jne
sub
mov
jb
mov
jmp
dec
and
push
sti
out
fild
inc
xchg
in
mov
jbe
stc
push
dec
std
(bad)
jl
je
cli
daa
push
stos
jnp
pop
xor
adc
aaa
fisub
test
mov
mov
dec
pushf
out
mov
aas
pop
sub
add
cmps
mov
test
loopne
dec
ror
sub
xor
or
or
shl
sar
(bad)
(bad)
call
or
loope
outs
movs
test
mov
mov
loopne
nop
mov
out
fdivrp
(bad)
jg
pop
rcr
inc
mov
jp
loope
retf
rcr
inc
sub
push
mov
lds
(bad)
jmp
lea
inc
addr16
push
xor
(bad)
push
in
or
stos
out
mov
or
in
popa
push
test
jmp
or
jo
xor
xor
cld
cmp
(bad)
mov
jo
mov
outs
mov
in
dec
(bad)
jp
ss
or
mov
pop
stos
mov
mov
(bad)
neg
mov
mov
inc
xchg
enter
adc
mov
out
inc
in
shl
(bad)
dec
and
sti
cwde
sbb
test
jle
cmp
sbb
mov
(bad)
dec
add
xchg
sbb
mov
ret
std
xchg
cld
dec
sar
ja
jae
leave
or
aad
cwde
or
in
adc
(bad)
(bad)
jmp
nop
xchg
lock
shl
lea
popa
das
sar
aaa
sub
and
mov
jno
pusha
or
leave
mov
cdq
jg
xlat
and
mul
(bad)
(bad)
(bad)
jp
mov
xor
loop
aaa
jmp
mov
ficomp
(bad)
(bad)
mov
les
mov
stos
cmp
(bad)
pop
sub
cli
aaa
mov
add
push
(bad)
inc
cld
(bad)
ds
push
push
xchg
sbb
aas
aad
dec
push
das
xchg
aas
xor
pop
stos
(bad)
mov
out
repnz
xor
mov
sbb
push
jmp
aad
xor
ficom
ja
fsincos
inc
fild
dec
outs
push
or
jnp
mov
ret
(bad)
(bad)
(bad)
jnp
push
je
dec
hlt
cmp
nop
gs
scas
int3
jmp
mov
movs
ret
cmc
das
and
div
sub
mov
jb
(bad)
xchg
jb
cmp
(bad)
(bad)
(bad)
(bad)
jmp
or
mov
jne
jge
jmp
pop
or
test
push
add
test
addr16
(bad)
xor
out
add
jns
nop
imul
outs
xchg
or
xor
(bad)
(bad)
(bad)
dec
add
jb
xchg
and
stos
adc
push
ret
mov
lahf
int
mov
(bad)
(bad)
(bad)
(bad)
cmp
retf
push
bound
and
jle
mov
mov
cmp
(bad)
push
lods
xor
xor
xor
ds
add
shl
cmp
std
(bad)
inc
inc
and
add
ja
mov
push
mov
lock
dec
push
in
stos
pop
inc
ins
or
xchg
mov
adc
call
out
dec
lahf
mov
lock
add
(bad)
inc
test
test
xor
loope
adc
repz
cmps
push
push
jns
pop
shl
(bad)
mov
jmp
ss
sbb
adc
retf
mov
cmp
mov
(bad)
(bad)
jmp
or
jns
in
(bad)
movs
es
int
pop
loopne
mov
das
call
adc
dec
and
push
into
pop
jmp
sbb
je
(bad)
(bad)
(bad)
mov
test
xchg
pop
cmp
cmp
movs
or
test
add
cmc
jns
les
(bad)
(bad)
(bad)
(bad)
jmp
test
and
jbe
jl
xor
fisttp
call
js
(bad)
ja
(bad)
mov
mov
pop
mov
pop
cwde
aad
and
xchg
loopne
pop
lods
es
(bad)
jg
sub
(bad)
and
call
jae
cs
(bad)
(bad)
(bad)
(bad)
fcmovnu
mov
(bad)
cmp
nop
mov
xor
and
sub
(bad)
(bad)
(bad)
call
mov
arpl
sbb
(bad)
xchg
push
mov
scas
pop
out
movs
popa
cli
test
or
(bad)
push
fwait
pop
fdecstp
mov
adc
push
fld
hlt
dec
ret
pusha
sub
jecxz
fdivrp
(bad)
(bad)
jg
je
inc
cs
jp
retf
xchg
push
xchg
fidivr
xchg
test
mov
mul
jmp
(bad)
(bad)
(bad)
jmp
leave
bound
lods
sub
out
ins
pop
xchg
jmp
in
sbb
rol
(bad)
inc
inc
cdq
dec
fs
test
jnp
push
or
outs
je
and
loope
movs
fdivr
inc
mov
mov
sub
push
(bad)
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
stc
lock
jne
dec
retf
push
push
movs
or
xor
cli
cmps
in
popf
adc
(bad)
loope
(bad)
(bad)
(bad)
push
mov
pop
push
push
ds
hlt
inc
fs
xor
inc
push
mov
aam
movs
pop
mov
(bad)
(bad)
jg
test
pop
nop
dec
mov
into
jbe
out
sbb
cld
cmp
dec
mov
(bad)
(bad)
(bad)
in
lods
add
or
adc
jno
test
sub
ret
call
mov
jge
aad
mov
(bad)
(bad)
inc
rol
xchg
clc
js
pop
ret
jbe
ins
and
dec
xchg
cld
test
xchg
stos
jbe
mov
mov
xchg
mov
jge
(bad)
(bad)
jg
call
add
rcl
cdq
mov
mov
dec
adc
(bad)
(bad)
(bad)
jmp
mov
sub
push
enter
xor
jge
loop
xchg
mov
inc
jge
mov
cmc
dec
push
add
clc
into
ja
adc
xchg
mov
pop
and
gs
ins
sahf
add
jg
call
data16
sub
dec
jno
fld
mov
inc
pop
push
jmp
aam
sti
(bad)
(bad)
inc
mov
push
inc
(bad)
fdivr
pop
out
xor
dec
int
jns
addr16
adc
cld
cmp
jle
add
stos
or
in
mov
jno
xor
mov
fucompp
repz
js
xchg
and
(bad)
test
test
(bad)
push
movs
mov
adc
push
jmp
sahf
and
(bad)
(bad)
call
add
mov
ds
rol
pop
mov
xor
push
pop
xor
(bad)
(bad)
jmp
aam
push
jbe
dec
adc
pusha
mov
mov
jbe
pusha
jp
mov
and
(bad)
mov
xor
mov
xchg
cmp
(bad)
(bad)
mov
call
sahf
popf
and
fisttp
fcmovnu
cmc
(bad)
call
push
xor
test
add
ins
jle
inc
and
sub
test
mov
pushf
dec
inc
stos
push
mov
inc
das
sti
fld
jnp
push
jns
(bad)
(bad)
(bad)
fidiv
pop
aaa
fs
mov
jae
add
push
not
mov
int
add
and
pop
pop
in
in
scas
rcl
xor
jecxz
pop
xchg
ret
adc
mov
(bad)
or
pusha
adc
add
test
cmp
in
xor
mov
fmul
mov
jb
and
(bad)
mov
jecxz
sbb
repz
loopne
(bad)
shl
js
mov
ds
add
sbb
sar
(bad)
push
les
std
cmps
dec
fimul
cmps
push
mov
pop
pop
cwde
xor
data16
(bad)
(bad)
(bad)
jg
adc
mov
mov
(bad)
in
(bad)
in
sub
popa
xor
pop
push
mov
xor
(bad)
(bad)
jmp
cld
movs
sti
or
loope
ds
hlt
inc
and
(bad)
jle
mov
and
lea
push
mov
or
jae
lods
rcr
(bad)
(bad)
mov
push
pop
and
inc
call
xor
or
inc
inc
mov
add
cdq
enter
imul
sub
or
push
aad
sbb
(bad)
out
(bad)
rcl
jp
xor
lds
movs
nop
push
jle
pop
sahf
(bad)
call
loop
(bad)
mov
dec
into
mov
sub
(bad)
mov
pop
ja
mov
(bad)
in
jmp
cwde
(bad)
into
push
inc
sub
sbb
retf
mov
push
xchg
dec
adc
(bad)
cmp
cld
scas
stos
data16
xchg
call
or
(bad)
jmp
mov
mov
jp
xor
xlat
jecxz
imul
out
(bad)
(bad)
inc
jmp
jb
aas
push
mov
mov
inc
mov
xchg
and
dec
jmp
jae
mov
add
and
sbb
addr16
fst
xor
jno
cmp
data16
gs
loopne
cs
pop
sbb
mov
dec
sub
(bad)
(bad)
(bad)
push
movs
popw
inc
mov
mov
fwait
mov
sbb
movs
xlat
dec
pop
stos
lods
sub
(bad)
mov
push
xchg
jb
pop
ret
mov
cdq
sahf
sbb
mov
(bad)
push
xchg
popf
mov
outs
xor
xor
pop
hlt
mov
push
cmp
xchg
xor
addr16
mov
outs
jb
mov
fs
mov
inc
dec
sar
pop
add
mov
push
lods
cwde
hlt
pop
imul
cmp
add
push
idiv
(bad)
(bad)
inc
sub
jg
inc
jnp
xchg
imul
jns
mov
mov
call
mov
sbb
pop
cwde
shl
iret
ins
cli
and
addr16
inc
sahf
sbb
(bad)
(bad)
fdiv
stos
bound
adc
inc
in
and
adc
sub
mov
(bad)
(bad)
out
xchg
pop
fcomp
bound
clc
movs
mov
mov
ret
lock
(bad)
(bad)
dec
stos
xchg
ror
arpl
add
mov
(bad)
(bad)
(bad)
jmp
and
sbb
lock
pop
push
pop
mov
ds
test
push
pusha
clc
retf
movs
and
stos
ins
mov
lock
imul
std
repnz
pop
sub
pop
and
je
in
mov
fmul
jno
xor
sbb
adc
ins
rcr
popa
xchg
dec
sar
in
out
mov
jge
dec
pop
cld
in
add
pop
hlt
loop
adc
inc
ss
dec
xchg
cli
and
ja
imul
cmp
or
(bad)
(bad)
(bad)
push
or
cmp
data16
pop
cmp
repnz
call
or
ja
mov
stos
cwde
cdq
(bad)
fnstsw
xlat
push
inc
ds
jb
xchg
add
cmp
call
push
mov
bound
(bad)
fwait
in
(bad)
in
xor
and
push
pop
jmp
jg
out
(bad)
(bad)
(bad)
call
shl
ds
xlat
mov
ltr
ds
mov
jmp
retf
jae
xchg
xchg
xor
(bad)
mov
(bad)
(bad)
cld
and
inc
xlat
inc
lahf
lods
lea
popf
ret
iret
test
jb
(bad)
(bad)
(bad)
jmp
and
mov
arpl
pusha
jmp
leave
jnp
outs
inc
and
add
jnp
push
or
push
fwait
mov
addr16
adc
or
(bad)
mov
sub
cmp
sar
popa
stc
lahf
xor
cli
icebp
pop
jbe
pop
sbb
dec
cmps
in
shl
dec
not
test
(bad)
call
sbb
outs
sbb
ret
int
icebp
fistp
sbb
scas
out
iret
fcom
inc
es
push
lahf
fbstp
pop
inc
clc
arpl
(bad)
add
or
mov
or
xchg
or
(bad)
call
popa
lahf
repnz
ss
dec
stos
mul
lock
or
movs
pop
(bad)
(bad)
fisttp
jnp
mov
adc
pop
fidivr
mov
jl
jmp
xor
xor
adc
fwait
test
add
or
xchg
cmps
das
cmp
add
pop
test
xchg
(bad)
fisub
or
or
(bad)
jmp
(bad)
dec
lods
sub
cmp
adc
xor
(bad)
rcl
jle
ret
(bad)
(bad)
inc
iret
jo
xchg
(bad)
pop
aam
push
fsubr
sub
jg
jecxz
call
dec
test
inc
sub
test
lea
les
imul
push
(bad)
(bad)
(bad)
dec
jp
mov
enter
xor
leave
fwait
cs
mov
lods
dec
(bad)
mov
mov
call
xlat
cmp
push
mov
and
xchg
xor
push
cmps
lods
or
mov
dec
and
(bad)
(bad)
call
or
xor
sbb
xlat
js
adc
sahf
fiadd
mov
aas
dec
or
(bad)
jg
dec
xor
or
add
xchg
xor
cld
and
jb
(bad)
(bad)
(bad)
mov
jge
pop
retf
outs
(bad)
ror
push
aad
cmps
add
mov
cmp
inc
clc
(bad)
mov
in
jno
xor
cli
xor
push
mov
sub
or
dec
push
and
fld
add
xor
push
pusha
popa
(bad)
(bad)
(bad)
(bad)
out
ror
mov
or
lea
inc
push
jmp
push
mov
sub
xchg
cli
(bad)
(bad)
call
aaa
stc
add
ds
int
sbb
inc
std
loop
mov
jne
pop
or
jmp
xor
dec
dec
(bad)
ja
add
dec
push
mov
es
je
jle
jge
fldenv
cmc
inc
call
imul
cmps
popa
icebp
sar
add
in
imul
(bad)
(bad)
(bad)
mov
fidiv
and
into
iret
leave
jge
nop
jbe
jno
cmp
rcl
jmp
mov
inc
fwait
adc
cmps
popf
add
pop
adc
and
dec
xchg
aas
fwait
jl
fwait
mov
dec
push
inc
sar
inc
pop
inc
js
fbld
mov
adc
pushf
cs
call
adc
fnstsw
ror
popa
les
or
loop
cld
(bad)
jg
sbb
adc
popa
and
dec
inc
adc
jne
inc
mov
mov
ss
(bad)
(bad)
(bad)
call
pop
sbb
dec
xchg
test
jnp
sbb
mov
dec
in
sbb
(bad)
push
test
(bad)
(bad)
(bad)
mov
adc
imul
movs
jecxz
rcl
pusha
div
(bad)
(bad)
(bad)
jmp
jae
cmp
xchg
push
test
inc
cmp
not
mov
ret
pushf
xchg
loopne
and
clc
push
mov
stc
pop
movs
xor
loope
(bad)
push
cs
cdq
imul
mov
jp
das
in
scas
or
sbb
fmul
inc
pop
pop
call
dec
xchg
ror
sub
jg
addr16
ucomiss
rcr
jge
sbb
mov
or
pop
adc
(bad)
(bad)
call
mov
pop
ins
adc
jge
rcr
jl
shl
pop
add
fist
loopne
push
inc
sub
je
inc
sbb
mov
(bad)
pop
and
pop
sub
(bad)
call
dec
sub
sbb
jmp
or
add
mov
dec
(bad)
(bad)
(bad)
call
retf
pop
sbb
fisttp
pop
scas
and
mov
jp
cmp
pop
(bad)
mov
or
jae
gs
int3
dec
(bad)
aad
mov
(bad)
call
and
xor
xor
test
lahf
lods
scas
xchg
and
pop
icebp
jmp
addr16
sub
jbe
addr16
mov
cmp
outs
inc
test
call
es
mov
jge
and
and
pop
pop
fs
jp
subps
adc
mov
(bad)
(bad)
(bad)
inc
push
dec
pop
cwde
lock
dec
mov
inc
cmc
faddp
out
jmp
inc
xor
lahf
retf
(bad)
(bad)
(bad)
inc
fs
out
fsubr
in
adc
xchg
rcl
stos
add
fdivr
jl
xchg
jl
(bad)
(bad)
(bad)
jmp
test
jmp
or
or
sti
mov
xor
cld
mov
jge
add
mov
jmp
mov
sar
inc
fiadd
pop
scas
gs
sbb
loopne
(bad)
jg
and
adc
jo
inc
sub
sbb
rcl
and
(bad)
mov
popa
push
mov
stos
mov
stc
dec
data16
pop
sbb
push
jmp
jbe
ffreep
mov
shl
movs
cmps
mov
arpl
xor
(bad)
(bad)
(bad)
(bad)
mov
sub
cmp
into
push
dec
mov
les
ss
arpl
mov
add
inc
rcr
out
icebp
add
(bad)
(bad)
je
cli
(bad)
inc
daa
mov
adc
hlt
jl
jae
cmps
fidiv
(bad)
(bad)
call
or
inc
mov
or
shl
ret
cmp
fmulp
mov
ficom
jmp
push
movs
movs
and
dec
int
cmps
push
xor
push
and
in
cli
mov
inc
cmc
les
and
je
cmps
xor
jmp
jle
sbb
mov
mov
jg
inc
mov
xchg
xor
inc
cmp
xchg
test
(bad)
(bad)
call
or
aaa
jg
rcr
xchg
fxtract
int
sbb
cli
into
fcom
shr
retf
jg
dec
dec
not
sub
clc
js
and
push
pop
mov
into
xchg
movs
xchg
rol
sahf
push
adc
adc
and
xor
cmp
xor
jl
nop
lods
adc
inc
fisttp
add
enter
mov
mov
pop
loopne
and
inc
movs
cmp
ins
movs
add
loope
cmp
sub
sbb
jne
(bad)
jmp
cmp
push
popf
dec
sbb
dec
nop
inc
sti
ds
sbb
sbb
(bad)
fild
lahf
add
jno
pop
jp
xor
mov
call
daa
sub
aas
mov
gs
mov
inc
imul
inc
push
xor
(bad)
push
bound
sbb
(bad)
mov
mov
out
sbb
sbb
push
mov
les
mul
ins
xor
stc
or
inc
shr
(bad)
(bad)
mov
inc
(bad)
fld
inc
mov
mov
mov
mov
jnp
xchg
add
(bad)
(bad)
(bad)
dec
mov
xchg
ds
jbe
push
shl
pop
daa
ja
das
in
mov
mov
test
mov
sbb
movs
add
aas
outs
sub
jns
test
(bad)
inc
mov
push
sub
retf
es
sub
push
faddp
sbb
jge
out
pop
adc
addr16
(bad)
(bad)
(bad)
jmp
shl
jo
cmp
xchg
push
add
lahf
cld
ficomp
add
dec
cmps
(bad)
fcomip
call
cmps
fwait
xor
xor
inc
(bad)
fcomp
pop
aas
fisttp
jg
dec
mov
fld
es
popa
push
mov
mov
inc
scas
dec
call
movs
ins
aad
call
jno
(bad)
call
cmp
sub
push
jbe
mov
adc
loop
retf
mov
mov
(bad)
mov
jno
jns
pop
data16
pop
imul
aam
sub
ins
jae
sahf
test
rcl
outs
push
fstp
xchg
push
xor
lea
(bad)
(bad)
inc
sub
js
mov
adc
lds
shl
or
mov
(bad)
jmp
push
in
(bad)
adc
mov
dec
retf
or
rcr
push
mov
(bad)
(bad)
inc
sbb
(bad)
sbb
int3
mov
out
repnz
into
add
out
lods
mov
cmps
lods
(bad)
(bad)
(bad)
call
cmps
xchg
mov
dec
fwait
fs
stos
daa
dec
push
or
mov
jmp
pop
sub
(bad)
call
clc
xor
adc
push
ret
popf
mov
cli
mov
adc
push
mov
(bad)
imul
in
cmp
or
sbb
sub
(bad)
call
dec
jle
sbb
jmp
cdq
mov
shl
jge
jnp
(bad)
(bad)
push
test
jmp
js
arpl
cmp
scas
icebp
or
dec
push
(bad)
in
(bad)
(bad)
jg
dec
sahf
es
sub
jp
cmp
mov
lds
jle
mov
sbb
fldcw
dec
call
or
mov
jb
cmps
xor
cwde
(bad)
jmp
cmps
std
push
add
addr16
xchg
int
adc
adc
aam
call
ds
imul
push
jnp
imul
mov
mov
fnstenv
call
sub
lea
hlt
push
adc
stos
(bad)
out
clc
dec
je
lock
imul
scas
hlt
mov
mov
mov
loope
clc
(bad)
(bad)
dec
test
cmp
sub
xchg
dec
call
dec
push
adc
mov
(bad)
in
scas
push
fnstenv
or
movs
mov
cmp
iret
xchg
repz
cli
push
adc
(bad)
push
test
(bad)
bound
clc
movs
les
jp
mov
jbe
pop
mov
xchg
mov
(bad)
jg
jl
mov
and
out
jno
mov
(bad)
(bad)
jg
mov
push
bound
cmp
jbe
push
pop
jbe
mov
out
jb
popf
cs
xchg
ins
idiv
(bad)
(bad)
(bad)
clc
adc
dec
dec
les
(bad)
jns
push
sar
scas
sbb
stc
sahf
dec
(bad)
or
aas
dec
xchg
lock
test
dec
repz
(bad)
(bad)
(bad)
call
rcl
xor
adc
mov
cmp
paddw
adc
in
jmp
or
cwde
je
add
xor
shl
mov
fmul
xor
cmp
push
std
(bad)
push
in
gs
and
shl
(bad)
adc
retf
into
fwait
(bad)
(bad)
(bad)
call
outs
and
xchg
cmp
imul
(bad)
jmp
cli
sbb
and
imul
repnz
or
call
adc
fcmove
(bad)
(bad)
(bad)
dec
out
jne
dec
test
scas
sti
add
sub
out
addr16
xor
xor
int3
stos
aad
(bad)
(bad)
(bad)
inc
pop
inc
inc
cmp
mov
das
push
pop
xor
and
mov
fcmovnu
adc
(bad)
push
das
fst
enter
add
fldenv
cdq
mov
call
retf
out
push
loop
sub
pop
sbb
je
mov
xor
xchg
retf
dec
(bad)
jl
dec
cdq
mov
lods
hlt
sbb
ins
cld
jmp
adc
icebp
pop
mov
cmp
(bad)
jmp
clc
adc
push
xor
les
pop
or
mov
stos
(bad)
xchg
aaa
jbe
inc
adc
fdivr
mov
int
xchg
jle
xchg
xor
xchg
icebp
inc
repz
xlat
in
(bad)
and
loope
scas
(bad)
call
test
push
popf
inc
call
xchg
sbb
xor
(bad)
(bad)
(bad)
(bad)
cmp
inc
sbb
jl
jmp
mov
addr16
adc
(bad)
(bad)
call
adc
nop
add
fistp
rcr
fimul
(bad)
fcomip
rcl
fwait
add
(bad)
cmps
loopne
popf
ror
mov
popa
push
(bad)
(bad)
call
xchg
xchg
gs
ficomp
or
popf
mov
add
jb
(bad)
(bad)
(bad)
(bad)
sti
cmp
adc
stc
xchg
cs
mov
or
loopne
stc
mov
sahf
(bad)
mov
loope
jmp
mov
aad
scas
xchg
add
mov
ror
dec
std
push
stc
dec
cmc
xchg
mov
mov
(bad)
(bad)
(bad)
jg
loopne
push
push
ins
cwde
push
mov
jns
(bad)
add
div
lock
and
(bad)
(bad)
inc
sub
out
mov
adc
cmp
dec
cmp
and
in
test
gs
pop
(bad)
gs
(bad)
(bad)
(bad)
(bad)
jmp
adc
test
movs
and
out
sub
fcmovb
ins
lock
mov
adc
stos
xlat
or
aad
cli
or
mov
push
lea
aad
frstor
push
retf
hlt
call
(bad)
loope
or
or
lahf
shl
pop
xchg
cli
cmp
aaa
jg
(bad)
pop
sub
jecxz
jo
push
sbb
adc
push
(bad)
adc
jno
(bad)
(bad)
inc
data16
not
sbb
mov
ins
fistp
push
sbb
dec
xlat
sbb
(bad)
(bad)
(bad)
call
add
jno
(bad)
or
(bad)
neg
sub
cmc
jge
xchg
pop
xor
retf
xchg
inc
mov
scas
call
jl
jb
call
sub
xchg
jae
or
(bad)
(bad)
jg
and
pop
loope
jb
jnp
push
xor
add
xchg
xchg
jl
adc
test
ss
shl
jmp
sar
xchg
test
xchg
pop
mov
inc
push
push
(bad)
(bad)
(bad)
inc
pop
div
sbb
inc
jae
addr16
(bad)
int
jnp
xor
data16
(bad)
popf
add
scas
clc
(bad)
jge
cmps
push
js
dec
push
mov
lods
leave
pop
xlat
mov
adc
in
aaa
ret
call
ret
std
scas
stos
fcomp
jle
mov
(bad)
(bad)
ficomp
pop
add
mov
mov
aam
mov
(bad)
call
stc
ins
pop
addr16
dec
ror
mov
jne
mov
cs
ds
pop
(bad)
(bad)
(bad)
dec
jbe
in
mov
push
mov
outs
sbb
addr16
inc
jmp
cmp
mov
xchg
xlat
(bad)
call
push
xor
pop
xchg
ss
frstor
stos
not
sar
(bad)
(bad)
jg
sub
or
xchg
cmp
dec
add
pop
aam
xchg
pop
jmp
jg
sbb
fadd
mov
loop
add
pushf
repz
nop
pushf
mov
js
mov
pop
mov
xchg
mov
call
or
xor
lea
inc
cwde
lds
out
lock
xor
arpl
adc
jmp
call
xchg
test
xchg
mov
xor
mov
cmp
dec
push
cs
(bad)
(bad)
call
and
xor
xchg
fild
add
rcr
pusha
es
xlat
fsub
clc
(bad)
(bad)
jmp
push
jge
rol
ret
cmp
add
jge
mul
(bad)
jmp
nop
call
int
or
mov
pop
(bad)
(bad)
fcomip
fimul
test
in
xlat
add
inc
or
mov
inc
daa
out
sub
sahf
int
(bad)
(bad)
call
dec
ins
push
(bad)
pusha
dec
mov
mov
cmp
mov
sub
mov
push
push
xchg
(bad)
(bad)
inc
or
jmp
jne
test
in
and
ds
lds
push
mov
pop
das
cmp
dec
repnz
jns
adc
lods
mov
addr16
xlat
addr16
pop
cli
sar
inc
mov
jbe
enter
je
cmp
int3
pop
sbb
jns
inc
sbb
mov
mov
adc
ds
fs
sar
(bad)
(bad)
jmp
in
mov
mov
jo
jmp
imul
pop
xchg
lods
movs
clc
push
jle
cld
(bad)
fcomip
jmp
in
jl
push
cmps
jecxz
cmp
add
mov
mov
les
xor
(bad)
(bad)
aas
jae
jmp
(bad)
into
movs
lods
cs
xor
cdq
xchg
cld
adc
sbb
push
mov
ret
sub
(bad)
(bad)
call
cmp
jmp
lock
mov
inc
add
inc
pop
test
xor
(bad)
inc
cmp
pusha
aam
std
inc
dec
pop
dec
xor
push
xchg
loope
(bad)
(bad)
(bad)
call
mov
xor
lea
mov
outs
add
cli
outs
int
pop
jg
fcomip
in
mov
push
jns
cmp
(bad)
sbb
(bad)
(bad)
in
xchg
cli
data16
sahf
das
imul
push
mov
push
aam
in
fcmove
adc
inc
shl
mov
out
aaa
jle
push
mov
or
stos
call
mov
(bad)
(bad)
(bad)
(bad)
dec
iret
xchg
dec
xlat
popf
cs
fs
ret
mov
pop
js
mov
dec
mul
cmps
inc
in
inc
mov
mov
inc
pop
std
mov
inc
sub
das
test
push
dec
or
(bad)
call
dec
jnp
sbb
mov
dec
cmp
mov
jne
add
lods
dec
jmp
inc
dec
(bad)
sbb
(bad)
(bad)
jg
mov
std
inc
out
pop
pop
es
and
inc
sar
mov
int3
pop
pop
(bad)
add
in
push
add
jno
(bad)
(bad)
(bad)
mov
inc
retf
(bad)
repnz
repnz
rol
fmul
es
adc
lock
mov
inc
sub
lahf
sahf
pop
pop
mov
loopne
push
hlt
push
je
(bad)
mov
push
int3
and
sbb
dec
xchg
out
icebp
push
push
lock
call
(bad)
(bad)
jmp
out
pop
mov
outs
rol
cli
jb
cdq
imul
iret
push
ins
aam
inc
dec
(bad)
jmp
cmp
mov
or
jge
std
add
(bad)
push
mov
or
cmps
adc
imul
sub
repnz
dec
xor
and
and
fisubr
xlat
les
(bad)
(bad)
call
lahf
add
cmps
cli
(bad)
arpl
xchg
mov
pop
mov
ret
data16
inc
jnp
ins
movs
and
mov
(bad)
(bad)
jmp
xchg
retf
daa
cmc
(bad)
xchg
das
push
mov
fimul
outs
jb
pop
mov
les
xchg
push
dec
leave
cmp
push
lea
stos
add
xor
pushf
jns
(bad)
mov
call
inc
or
retf
push
jne
xchg
xchg
and
inc
scas
jnp
lahf
not
(bad)
jmp
jae
ja
cdq
adc
cld
test
cli
inc
add
pop
xor
idiv
inc
test
inc
sbb
sbb
outs
adc
push
fstp
(bad)
add
clc
scas
or
cmps
shl
jmp
xchg
mov
cmp
fadd
sbb
dec
rcr
or
xor
pop
mov
mov
pop
(bad)
(bad)
(bad)
(bad)
cmp
jo
ja
out
adc
cmps
jno
stc
cwde
adc
test
mov
mov
(bad)
(bad)
(bad)
jmp
cmp
mov
enter
into
les
pop
nop
dec
pop
push
in
and
(bad)
jmp
cmp
out
pop
enter
xor
rcl
nop
xor
jg
dec
aam
inc
repz
pop
mov
jbe
dec
or
mov
mov
call
movs
pop
add
aam
mov
shl
sbb
jno
loope
adc
cmp
pop
ret
(bad)
(bad)
(bad)
inc
dec
pop
push
dec
pop
pop
adc
ret
outs
jbe
clc
sbb
ret
push
out
and
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cmp
out
push
sub
in
sub
stos
cdq
rcl
push
xchg
repnz
jne
(bad)
(bad)
dec
mov
xchg
jbe
cli
lods
(bad)
in
out
jo
stos
sar
imul
(bad)
(bad)
mov
pop
lea
dec
pop
fnstcw
mov
fst
pop
add
jle
dec
mov
fsubr
and
cmps
scas
bnd
sbb
pop
lds
(bad)
(bad)
call
mov
xchg
in
dec
dec
add
add
push
mov
call
(bad)
mov
imul
xor
gs
retf
cs
xchg
lds
push
jbe
(bad)
cmp
dec
cdq
inc
ja
sbb
and
jecxz
je
dec
mov
cli
(bad)
(bad)
call
push
mov
sbb
lea
mov
imul
xchg
xchg
inc
lock
jmp
mul
cdq
jecxz
in
add
repnz
stos
addr16
dec
push
add
lock
jno
repnz
(bad)
mov
enter
push
cld
mov
add
inc
mov
(bad)
(bad)
inc
pop
aad
in
jecxz
mov
(bad)
push
mov
test
call
lahf
cmc
(bad)
sahf
cmp
mov
icebp
(bad)
mov
add
cmps
fld
sub
ret
std
bound
int
(bad)
(bad)
(bad)
dec
iret
mov
adc
scas
pop
mov
xchg
dec
jne
icebp
repz
rol
push
xchg
lock
(bad)
ins
test
call
sbb
mov
and
xchg
push
push
push
lods
sub
pop
mov
jb
sub
(bad)
(bad)
(bad)
inc
out
jle
mov
fistp
mov
xor
imul
lea
sbb
add
je
sar
outs
xor
popa
pop
stc
call
mov
fld
dec
into
loop
(bad)
(bad)
push
hlt
rcr
jge
lods
shr
and
loope
test
int
clc
xor
loop
jl
(bad)
imul
(bad)
call
pop
cmp
push
inc
adc
inc
out
dec
call
lods
nop
jecxz
hlt
sar
in
(bad)
jg
and
ins
xchg
call
in
push
nop
pop
xchg
push
sub
out
mov
(bad)
(bad)
(bad)
jmp
push
sub
lods
xor
dec
jno
aad
mov
icebp
scas
sbb
out
aas
je
mov
sbb
xor
(bad)
(bad)
dec
sbb
loopne
clc
xchg
cmps
sbb
mov
cld
push
or
(bad)
jmp
or
xchg
in
mov
daa
sti
test
rol
adc
and
popa
mov
cmc
mov
mov
mov
pop
sub
(bad)
(bad)
(bad)
(bad)
mov
repz
(bad)
cmp
adc
pop
ret
out
adc
ret
dec
xor
hlt
(bad)
(bad)
call
dec
inc
loopne
and
js
(bad)
std
jp
out
cld
call
sti
dec
mov
retfw
das
fidivr
sub
jle
jl
es
fwait
out
daa
(bad)
(bad)
(bad)
jmp
(bad)
dec
fwait
arpl
pop
jp
into
dec
sti
add
nop
test
repz
mov
(bad)
mov
mov
mov
loope
lock
xchg
mov
or
add
or
ret
mov
in
fnsave
out
in
dec
pusha
xchg
sub
adc
adc
mov
(bad)
push
aaa
les
int
cmps
les
mov
dec
inc
(bad)
cmp
call
sbb
(bad)
(bad)
inc
jne
adc
jno
mov
ret
and
dec
sbb
mov
loope
jo
icebp
(bad)
(bad)
mov
loope
arpl
cmp
sub
inc
push
pop
cmp
mov
in
pop
cld
pop
mov
std
add
pusha
mov
push
(bad)
jmp
sub
or
xchg
jae
ret
test
loope
cli
loope
jp
xchg
test
imul
popf
xor
cmps
mov
mov
pop
clc
(bad)
(bad)
call
je
les
rcl
mov
dec
pop
(bad)
in
nop
pop
cs
sub
xchg
std
sbb
sub
mov
jmp
das
add
add
dec
loopne
adc
push
xrelease
push
frstpm(287
test
es
adc
scas
es
sbb
lahf
(bad)
jmp
retf
xchg
ficomp
adc
mov
(bad)
adc
pusha
add
inc
(bad)
in
out
or
pop
hlt
in
jmp
inc
(bad)
(bad)
(bad)
in
xchg
cmp
icebp
sub
fidiv
je
sbb
mov
(bad)
(bad)
in
and
jo
outs
xchg
mov
fwait
jb
adc
push
jns
mov
inc
sbb
shl
push
(bad)
inc
pop
and
loopne
shr
inc
jg
pop
aam
xor
std
push
cld
dec
xchg
mov
gs
mov
jg
(bad)
push
sbb
fsub
daa
into
in
clc
or
and
mov
outs
mov
push
mov
lea
repz
xlat
out
inc
push
pop
xor
push
popa
hlt
ficomp
dec
addr16
fimul
inc
add
pop
out
out
int3
xchg
retf
mov
(bad)
push
popf
dec
ins
data16
fadd
jg
cmps
and
call
jecxz
idiv
icebp
aaa
mov
daa
movs
sub
es
lock
xchg
jo
(bad)
call
sub
sub
mov
popa
sbb
out
sbb
push
(bad)
jp
xlat
push
add
add
mov
push
jae
scas
rol
push
icebp
or
(bad)
(bad)
(bad)
js
jbe
pop
cs
dec
rcl
sub
push
cmps
mov
or
or
add
(bad)
xchg
ret
repz
mov
jmp
dec
mov
addr16
jle
adc
(bad)
cdq
repz
mov
pushf
push
(bad)
(bad)
jg
retf
in
shl
mov
mov
sub
add
(bad)
(bad)
(bad)
jmp
cmp
pop
inc
mov
dec
inc
inc
sahf
add
aad
mov
cli
mov
call
call
push
popa
and
jmp
jb
arpl
jmp
(bad)
(bad)
jmp
push
fidivr
mov
mov
xor
or
jae
xchg
inc
leave
lahf
jp
and
test
mov
mov
sbb
sahf
jae
xchg
hlt
mov
push
out
pop
iret
jnp
outs
jb
sbb
frstor
je
(bad)
dec
mov
push
adc
ss
(bad)
(bad)
fdiv
push
pop
fs
mov
inc
mov
add
imul
xchg
or
push
popf
test
(bad)
jmp
jns
in
dec
xchg
mov
dec
xchg
dec
push
pop
adc
stc
or
(bad)
(bad)
(bad)
push
xchg
out
arpl
adc
stos
inc
add
pop
movs
pop
ins
stos
mov
outs
scas
sub
mov
(bad)
(bad)
jmp
adc
add
inc
stc
mov
fs
mov
(bad)
(bad)
(bad)
inc
push
pop
les
inc
ror
call
cmp
aaa
lds
mov
dec
sbb
push
cmps
clc
icebp
xor
js
push
mov
cs
xor
dec
out
(bad)
call
cmc
scas
rcl
leave
outs
mov
test
fidivr
pushf
ins
sbb
bound
push
add
adc
arpl
lahf
es
aas
push
(bad)
(bad)
(bad)
jmp
push
and
ror
aam
add
div
or
sbb
stc
into
icebp
retf
sar
add
js
jbe
mov
cld
stc
pop
lods
fcomp
(bad)
(bad)
inc
jns
outs
add
mov
add
or
jmp
(bad)
(bad)
call
test
pop
pop
sub
and
and
mov
retf
jmp
ins
adc
mov
addr16
dec
out
sub
ins
adc
(bad)
dec
mov
xlat
loope
inc
retf
cmp
push
outs
sbb
jmp
mov
leave
push
popa
sbb
xchg
sti
cmp
(bad)
(bad)
(bad)
push
cmp
inc
loope
enter
ins
mov
xor
sti
push
xchg
sub
shrd
pusha
clc
(bad)
(bad)
push
icebp
inc
fnstenv
adc
nop
jbe
(bad)
mov
xor
adc
fnsave
aam
cli
jnp
(bad)
(bad)
jmp
sub
nop
jmp
mov
call
sub
pop
call
pop
mov
xor
mov
jl
cmp
shl
dec
mov
or
loope
jb
int3
cld
push
gs
(bad)
(bad)
jmp
mov
jns
cmps
es
popa
jno
popa
test
out
jg
jp
or
into
xor
shl
(bad)
(bad)
(bad)
dec
add
test
pop
mov
or
sbb
sbb
sub
(bad)
push
push
jns
pusha
cmp
mov
cli
(bad)
call
sub
sub
push
xchg
push
(bad)
or
jb
nop
sbb
add
jmp
push
push
dec
dec
fucomip
repz
push
loop
in
adc
(bad)
call
repnz
(bad)
repnz
cld
jp
inc
(bad)
sbb
(bad)
(bad)
inc
js
jmp
push
stc
xor
loopne
push
movs
or
clc
(bad)
ins
adc
(bad)
(bad)
jmp
xor
sbb
cmp
jno
test
dec
sub
int
(bad)
stos
pop
jp
(bad)
jg
loopne
push
imul
pop
popf
out
stc
int3
dec
lfs
add
(bad)
pop
xchg
and
arpl
dec
mov
es
(bad)
(bad)
(bad)
mov
jns
jbe
pop
sbb
movs
rol
xchg
sub
xor
xor
out
retf
adc
jg
popa
std
fs
inc
sti
sbb
clc
(bad)
jg
ret
mov
test
xchg
mov
mov
pusha
dec
dec
(bad)
(bad)
jmp
ins
and
inc
(bad)
lahf
pusha
xor
push
pop
or
and
scas
clc
(bad)
call
fbld
mov
mov
cld
push
pop
out
call
out
iret
or
jmp
mov
repz
jp
ret
adc
loope
test
xchg
aam
(bad)
push
push
mov
mov
out
inc
lahf
push
mov
dec
sbb
jns
cld
xchg
cmp
add
call
stos
jle
call
add
gs
(bad)
(bad)
(bad)
jmp
out
das
push
xor
lods
ds
ret
add
test
shr
mov
mov
jmp
in
hlt
shr
(bad)
(bad)
(bad)
inc
jb
stos
jo
in
in
idiv
jmp
repnz
and
je
cmps
pop
pop
sbb
dec
mov
inc
jp
adc
icebp
push
imul
rcr
jp
mov
ins
ds
inc
sub
dec
mov
sub
add
dec
fld
jg
and
push
push
enter
inc
ret
adc
(bad)
(bad)
call
push
push
retf
ja
inc
pop
dec
hlt
int3
nop
fmul
in
jns
lock
jl
test
loope
int
push
retf
pop
mov
xor
jg
(bad)
call
test
cwde
leave
jb
(bad)
sti
mov
xor
jns
sbb
push
(bad)
(bad)
(bad)
push
adc
mov
dec
adc
cdq
(bad)
adc
hlt
sub
jmp
jle
inc
adc
ror
retf
test
pusha
xchg
lahf
xchg
or
icebp
inc
xlat
jo
rcl
inc
mov
icebp
(bad)
jg
xchg
(bad)
ss
mov
jno
jb
aas
add
cld
in
arpl
and
adc
arpl
ffreep
and
lahf
mov
das
in
daa
push
leave
aad
loopne
sti
fnsave
repz
dec
lea
cmp
sbb
xor
push
inc
retf
push
and
sub
xor
(bad)
mov
mov
mov
test
dec
mov
movs
imul
adc
cmp
adc
inc
sub
movs
ja
jns
test
cmp
xchg
pop
nop
arpl
dec
int3
jle
(bad)
(bad)
jg
sbb
addr16
mov
sub
test
jb
imul
sbb
sub
(bad)
(bad)
dec
inc
fucomp
mov
iret
cmc
iret
(bad)
leave
push
mov
push
lahf
scas
stc
xor
shl
loope
mov
clc
call
and
jo
cdq
or
fadd
mov
shr
stc
and
mov
adc
scas
sbb
(bad)
sti
(bad)
js
data16
out
stos
loopne
scas
mov
cwde
and
pop
rol
(bad)
inc
xor
sbb
pop
pop
sbb
fbstp
(bad)
cs
push
in
ror
(bad)
jmp
pop
dec
or
pop
xchg
push
mov
add
cmp
(bad)
jmp
pop
(bad)
loop
jns
ins
push
dec
sbb
or
sub
mov
xchg
in
cs
fild
cmps
add
cwde
icebp
inc
(bad)
sub
mov
ins
pop
mov
(bad)
(bad)
dec
jbe
add
inc
mov
inc
inc
adc
mov
mov
pop
jge
pop
sub
jg
inc
xchg
push
or
mov
cld
nop
fimul
clc
sti
rcl
(bad)
(bad)
cmp
pop
ret
push
mov
adc
out
mov
out
out
inc
inc
push
mov
push
call
lock
mov
jbe
mov
adc
push
xchg
mov
inc
pop
adc
popf
mov
cmp
fist
dec
jns
bound
(bad)
(bad)
jmp
int
out
(bad)
cmp
and
pop
aas
ret
push
cdq
push
inc
jmp
dec
jnp
inc
xchg
mov
arpl
dec
(bad)
in
cmp
pop
shl
js
(bad)
(bad)
(bad)
(bad)
jmp
int3
push
pop
pop
int3
lods
dec
es
pop
add
sbb
or
out
mov
(bad)
(bad)
(bad)
dec
cmp
pop
(bad)
lahf
(bad)
ja
xor
add
ds
and
imul
lds
and
mov
cmp
(bad)
push
and
jno
sbb
adc
popf
adc
retf
xchg
popa
mov
(bad)
pusha
and
add
inc
int3
in
adc
test
out
(bad)
(bad)
(bad)
dec
xor
xchg
(bad)
fnstenv
xor
rcr
dec
jb
inc
xchg
popf
sar
inc
ds
pop
xchg
(bad)
(bad)
(bad)
push
call
cmp
rsm
cs
arpl
icebp
loope
cmps
dec
adc
cdq
loop
jl
mov
push
call
push
std
cmp
je
push
pop
imul
data16
push
leave
in
aad
sbb
loopne
cmp
aad
cmp
xlat
xor
icebp
sub
xor
ds
sub
sbb
and
div
pop
pop
and
or
xchg
neg
add
fdiv
sti
sub
imul
in
(bad)
(bad)
jmp
cmp
sahf
adc
xlat
mov
push
scas
ds
(bad)
(bad)
(bad)
cli
inc
(bad)
pop
out
xor
shl
mov
mov
shufps
call
out
jo
(bad)
xor
push
out
loopne
in
and
out
or
(bad)
(bad)
inc
and
aam
aad
call
pop
retf
or
pop
retf
enter
jecxz
inc
cmp
(bad)
(bad)
(bad)
jmp
xchg
xchg
fisubr
gs
loope
int
addr16
rol
push
sub
(bad)
(bad)
(bad)
(bad)
cmp
adc
add
ficomp
jmp
dec
lods
inc
mov
in
ret
inc
(bad)
(bad)
(bad)
call
hlt
popa
push
cmc
jl
xor
xchg
jb
or
inc
add
iret
cmps
cs
(bad)
(bad)
(bad)
jmp
and
aas
aaa
ins
mov
pop
and
jg
imul
into
mov
jmp
enter
mov
and
out
(bad)
(bad)
push
loopne
mov
retf
(bad)
fucomp
push
cmp
sbb
xor
adc
xchg
or
loope
adc
jnp
mov
push
jb
enter
call
fld
push
xchg
adc
push
jle
mov
outs
stos
jg
inc
push
je
outs
pop
push
int3
sbb
mov
(bad)
call
nop
pop
xchg
add
xchg
fld
push
mov
arpl
xor
inc
xchg
test
xchg
(bad)
(bad)
mov
push
cmps
int3
aaa
adc
retf
scas
pop
xchg
(bad)
(bad)
(bad)
dec
xor
(bad)
push
retf
sbb
adc
add
dec
(bad)
mov
dec
dec
jmp
mov
rol
inc
mov
fldcw
loope
(bad)
(bad)
jmp
lods
fcom
or
cmp
xchg
add
mov
and
dec
xchg
jo
cmp
mov
into
lea
jo
out
sub
add
daa
sub
cmp
or
jecxz
inc
xchg
inc
jg
daa
lahf
lds
jns
fidivr
xchg
push
std
(bad)
jmp
stos
and
pop
or
cmp
cmps
pop
mov
fisub
in
gs
dec
std
push
mov
fwait
(bad)
(bad)
mov
and
adc
add
shl
and
(bad)
(bad)
push
or
mov
sysret
cmps
fucomi
pop
sbb
xor
movs
out
mov
jmp
sub
dec
ss
test
cmps
inc
add
mov
push
retf
test
mov
(bad)
(bad)
jmp
pop
vmptrst
inc
ins
sub
xchg
or
and
into
cmp
jb
(bad)
(bad)
dec
mov
jae
loope
dec
dec
(bad)
add
gs
mov
ss
pop
std
test
mov
sub
jmp
fs
jle
and
fldenv
ror
int
ds
pusha
loop
mov
fbld
(bad)
(bad)
(bad)
(bad)
dec
mov
dec
push
lea
ins
push
xor
(bad)
test
pop
push
loopne
xchg
aad
ret
(bad)
(bad)
push
inc
movs
pop
xchg
xchg
enter
in
movs
push
ins
fst
pcmpgtd
mov
cmp
popa
pop
popf
add
stos
leave
mov
jns
leave
pop
xor
and
mov
sar
loop
jo
xor
and
(bad)
aam
mov
mov
dec
cwde
stos
cmc
fnstsw
lahf
cmc
stos
call
dec
push
jl
cwde
jmp
jnp
icebp
sbb
or
call
jmp
movs
loopne
xor
pop
in
pop
repnz
cmp
mov
in
dec
sub
xchg
mov
(bad)
(bad)
(bad)
jmp
hlt
fcmovnb
icebp
pop
inc
mov
and
into
xor
pop
into
pop
ins
jle
dec
(bad)
int
into
and
jmp
jbe
sahf
(bad)
xor
sbb
jp
lods
stc
out
out
es
jle
mov
into
pop
cmc
dec
scas
imul
xor
cmp
cmc
inc
ins
cli
cmp
loopne
sbb
cmps
scas
mov
scas
ret
push
and
pop
dec
jge
loop
fisubr
cmp
xor
push
pop
or
add
imul
outs
push
pop
enter
pop
(bad)
(bad)
mov
add
aad
mov
lods
and
ficom
int
pop
loopne
cld
mov
fs
fcomp
(bad)
mov
xor
xchg
cmp
(bad)
(bad)
(bad)
jnp
dec
or
push
stos
ror
pop
jmp
fisubr
cmp
push
and
fistp
out
xchg
mov
and
mov
fistp
js
fsubr
rol
test
repnz
lahf
sub
popf
hlt
imul
inc
mov
push
imul
call
icebp
push
inc
mov
(bad)
sbb
ins
in
(bad)
fs
stc
jnp
mul
(bad)
(bad)
jmp
jl
push
pop
jmp
stc
es
cmc
xlat
outs
inc
cdq
mov
les
mov
sar
stos
(bad)
dec
cs
shl
push
mov
cdq
fidivr
jg
test
jp
inc
inc
ins
scas
push
gs
inc
jmp
push
pop
(bad)
jmp
test
push
sub
or
loopne
hlt
cmp
es
(bad)
(bad)
call
adc
test
xor
or
or
mov
into
ss
push
add
pop
cs
leave
ret
rcl
ret
push
xor
push
pop
mov
mov
jbe
call
sub
bound
pop
movs
(bad)
(bad)
cld
jns
ficomp
cmp
cmp
(bad)
(bad)
push
fsubr
jp
jmp
push
push
push
push
cli
mov
and
test
push
iret
ins
mov
push
cmp
and
inc
mov
rol
jge
xor
retf
cdq
fild
push
int
into
ins
fnstcw
xor
or
(bad)
(bad)
cmp
fild
shr
ss
pop
js
xlat
push
inc
(bad)
(bad)
jg
ins
cli
mov
mov
lods
repz
jbe
xchg
les
(bad)
(bad)
jmp
test
inc
jle
jge
enter
cmp
jg
test
in
and
(bad)
(bad)
jmp
push
mov
movs
jns
bswap
fwait
mov
pop
out
sub
inc
mov
(bad)
(bad)
(bad)
inc
imul
or
cs
mov
mov
retf
or
pop
mov
inc
push
call
mov
je
imul
cs
push
jnp
pop
enter
daa
mov
inc
push
adc
xchg
aad
jle
push
hlt
mov
rcr
sar
(bad)
(bad)
mov
adc
add
or
dec
adc
sub
fadd
(bad)
(bad)
(bad)
jg
fcomip
mov
cmp
cs
dec
(bad)
and
ret
ins
xor
cmp
jns
push
int3
dec
or
aaa
cmp
jl
popf
xor
mov
sub
dec
pop
fldcw
push
jnp
lahf
xchg
xor
(bad)
fcomip
push
aad
neg
retf
(bad)
cld
adc
call
xor
dec
xchg
repnz
(bad)
inc
jg
shr
dec
cmp
dec
dec
movs
(bad)
and
imul
or
repnz
mov
xchg
xor
int3
dec
and
lods
pop
sbb
sub
test
mov
xchg
(bad)
(bad)
(bad)
(bad)
call
mov
add
mov
popf
les
and
das
adc
sub
je
in
iret
push
mov
pop
fdivr
jl
out
popf
in
push
mov
leave
scas
mov
out
push
push
fstp
shr
loopne
(bad)
jmp
mov
lahf
int3
fdivr
mov
dec
(bad)
lock
(bad)
mov
dec
push
sar
inc
out
ja
push
ficomp
(bad)
(bad)
inc
jnp
add
sub
xchg
and
fcmovb
mov
mov
pop
mov
mov
and
xor
xor
adc
cmp
mov
jge
xchg
pushf
inc
enter
and
add
outs
outs
test
(bad)
(bad)
(bad)
call
std
mov
sbb
pop
(bad)
mulps
scas
sbb
inc
call
(bad)
jg
push
(bad)
int
mov
fcom
xchg
mov
mov
or
jg
(bad)
call
(bad)
sbb
dec
dec
scas
into
ds
dec
cmp
mov
dec
aam
out
clc
inc
mov
enter
fmul
dec
int3
mov
(bad)
fbstp
fcom
retf
add
push
(bad)
loopne
push
add
or
xchg
sub
cld
ret
jmp
into
adc
sbb
call
dec
mov
loopne
xchg
adc
or
add
imul
cmps
inc
sub
fisttp
jmp
sti
sbb
ins
mov
or
ins
push
inc
ds
mov
outs
sbb
push
and
push
add
in
cld
(bad)
jmp
test
mov
and
fisubr
repz
(bad)
(bad)
jg
cmp
scas
(bad)
push
dec
aas
sbb
shl
je
dec
cli
push
loop
mov
jo
enter
loope
cmp
je
pop
push
mov
add
(bad)
(bad)
(bad)
push
pop
mov
iret
push
cmp
and
pop
jg
mov
or
mov
daa
shl
mov
rcl
fld
mov
push
(bad)
or
aaa
cmps
les
(bad)
(bad)
mov
pusha
xchg
ds
and
mov
es
dec
sub
sar
and
mov
(bad)
(bad)
(bad)
jg
jns
adc
cld
or
out
xor
mov
dec
repnz
inc
pop
mov
(bad)
jmp
movs
into
shl
xchg
inc
or
or
mov
cmp
fadd
cmp
in
push
adc
xchg
lods
sbb
jge
(bad)
(bad)
(bad)
(bad)
jns
cmc
jbe
sub
iret
icebp
clc
cwde
pop
jbe
sub
adc
add
loopne
jno
(bad)
(bad)
jmp
and
dec
maskmovq
mov
push
mov
je
or
(bad)
mov
jb
call
(bad)
inc
sti
ror
out
xchg
dec
pop
mov
fs
ret
mov
mov
fcos
(bad)
(bad)
inc
xor
cmp
aaa
mov
inc
push
cmp
repz
imul
dec
jb
xor
mov
loop
lods
adc
inc
pop
out
jg
ins
hlt
xchg
pushf
(bad)
fild
or
loopne
xchg
inc
mov
(bad)
(bad)
jmp
dec
sar
test
push
mov
inc
jns
je
jmp
sbb
(bad)
(bad)
(bad)
(bad)
jmp
sub
idiv
iret
jne
inc
cmp
push
add
stos
xlat
or
dec
bound
mov
(bad)
(bad)
(bad)
push
fild
xchg
pop
adc
fwait
or
imul
inc
push
and
loope
push
ud0
(bad)
call
pop
add
adc
dec
push
jb
push
push
test
ror
(bad)
(bad)
(bad)
inc
or
xchg
out
fisub
dec
test
movs
dec
inc
mov
push
dec
outs
mov
sbb
mov
ja
(bad)
leave
or
and
add
mov
imul
mov
ja
ret
xor
jns
fsub
sbb
cld
mov
mov
mov
jmp
scas
dec
out
(bad)
(bad)
(bad)
(bad)
jp
dec
mov
fimul
add
(bad)
dec
pop
adc
mov
push
les
pop
jp
(bad)
(bad)
(bad)
push
(bad)
outs
fpatan
jo
sbb
aam
into
fdivp
shl
inc
cli
cmp
push
mov
pop
and
cld
(bad)
jg
dec
test
cmc
sbb
jecxz
mov
fcomp
push
cpuid
xor
dec
mov
adc
mov
pop
arpl
ftst
loope
(bad)
jmp
jae
xchg
int3
repz
mov
jo
ds
xor
mov
or
ss
xchg
lahf
push
std
call
imul
dec
jmp
outs
push
repnz
jl
in
mov
jmp
sti
mov
jne
jecxz
cs
hlt
add
loopne
mov
out
loope
aas
test
(bad)
(bad)
(bad)
ds
das
inc
(bad)
aad
neg
cmp
dec
inc
es
das
data16
aam
jle
mov
call
loop
adc
loopne
fwait
mov
je
jno
(bad)
(bad)
call
sub
xchg
xor
add
cmp
popa
pop
add
xchg
cmp
add
jns
(bad)
fcomip
inc
jo
(bad)
sbb
mov
push
(bad)
ds
mov
dec
jo
ss
scas
icebp
(bad)
jmp
mov
movs
xchg
retf
in
dec
fimul
dec
cmp
jmp
push
outs
pop
inc
push
or
in
cmp
sbb
in
add
(bad)
(bad)
call
mov
mov
call
ror
loopne
js
es
dec
jnp
repz
clc
mov
mov
xor
pushf
xor
test
ss
adc
xchg
(bad)
(bad)
(bad)
call
sar
cmp
enter
or
push
xchg
push
and
out
xchg
dec
sbb
dec
aad
cmp
inc
into
dec
push
pop
pop
ins
adc
push
mov
xchg
pop
in
pushf
xor
shl
sbb
ins
mov
out
ret
mov
xlat
adc
aam
push
mov
push
nop
movs
cmp
jmp
lods
xchg
mov
cmp
fist
pop
shl
mov
sbb
jno
or
pushf
cmc
sub
loope
(bad)
(bad)
(bad)
jmp
(bad)
lea
ror
bound
fs
cmp
retf
pushf
jmp
jb
and
in
scas
sti
int
mov
loopne
cld
inc
scas
fs
movs
clc
dec
fisubr
loop
ror
(bad)
(bad)
(bad)
push
loop
xor
dec
call
push
stos
in
mov
push
push
xor
mov
out
shl
adc
mov
mov
pop
dec
bound
(bad)
push
test
or
or
xor
loope
jno
adc
scas
sbb
mov
add
mov
(bad)
(bad)
push
push
daa
enter
sbb
imul
dec
sub
jmp
xor
pushf
push
out
mov
aam
push
fdivr
jnp
mov
(bad)
fmul
add
sub
lock
ret
and
add
dec
inc
xor
adc
(bad)
(bad)
push
in
popa
ret
adc
xchg
pusha
hlt
popa
repnz
pop
pop
pop
in
mov
(bad)
push
pop
and
cmps
addr16
(bad)
(bad)
(bad)
fst
inc
xchg
xor
aas
jecxz
pop
cmp
cmp
push
jmp
xor
inc
mov
sub
jno
pusha
outs
les
xor
xchg
jb
or
jmp
int3
xor
mov
not
jae
sub
pop
mov
inc
ja
xor
and
(bad)
(bad)
jmp
xchg
jge
lds
sub
stc
scas
fisub
mov
(bad)
call
inc
mov
jmp
and
fisttp
in
lods
scas
(bad)
pop
mov
or
js
(bad)
(bad)
(bad)
call
popa
lods
jnp
pop
adc
enter
das
les
(bad)
and
push
push
out
jne
ins
in
push
mov
cmp
ja
mov
add
sub
loopne
je
pop
outs
clc
(bad)
jmp
repnz
pushf
hlt
sbb
inc
sbb
jb
gs
ds
xchg
fcomip
(bad)
jp
not
cmps
jle
out
push
stos
push
mov
xchg
repnz
sub
adc
pop
jg
(bad)
push
loope
pop
outs
mov
pop
sbb
icebp
shr
adc
test
outs
cli
call
mov
xor
pusha
mov
enter
fs
mov
mov
push
lahf
pop
in
inc
push
pop
aam
sub
pushf
es
ja
push
sbb
inc
cmp
pusha
(bad)
cmp
aad
(bad)
(bad)
fist
and
rcl
lods
adc
popa
ss
adc
icebp
(bad)
(bad)
call
sub
push
push
inc
inc
aad
bound
call
cs
push
and
jmp
mov
lock
xor
out
push
pop
loop
out
(bad)
jmp
dec
fadd
xor
clc
lods
jg
cmc
mov
(bad)
(bad)
(bad)
inc
push
in
ins
lds
jp
sar
jae
mov
imul
mov
lds
(bad)
(bad)
(bad)
dec
push
xchg
xchg
and
ss
fs
add
ins
fcompp
movs
dec
inc
lods
cwde
jmp
push
jg
or
cmp
ror
mov
and
dec
jle
or
daa
test
xchg
inc
fdivr
jbe
jae
mov
nop
mov
into
mov
retf
xor
sahf
cmp
arpl
adc
(bad)
(bad)
mov
cmps
pop
jmp
sub
sub
mov
or
push
cli
fcomp
or
dec
adc
outs
std
(bad)
(bad)
(bad)
dec
cmps
mov
dec
(bad)
leave
mov
in
inc
mov
adc
cmp
mov
jle
(bad)
mov
sub
(bad)
lods
imul
mul
sbb
(bad)
call
fdiv
(bad)
(bad)
(bad)
push
in
sbb
sub
sub
rcl
inc
stos
xchg
and
jg
ja
(bad)
call
add
mov
stos
xor
sbb
xchg
daa
ja
mov
mov
std
icebp
neg
pop
jg
mov
or
(bad)
(bad)
(bad)
jl
popa
cmp
pop
jl
xchg
(bad)
mov
xchg
mov
cmp
fsubr
mov
(bad)
(bad)
mov
imul
test
inc
cmp
dec
inc
call
(bad)
(bad)
jg
inc
in
rcr
outs
cmc
into
sub
mov
inc
test
test
call
pop
aam
imul
imul
enter
(bad)
call
dec
retf
sbb
shr
sbb
fisttp
xor
dec
fst
lods
jbe
call
cmp
and
or
out
push
out
mov
mov
dec
hlt
cmp
pop
pop
mov
jge
inc
dec
mov
mov
(bad)
(bad)
fnsave
sbb
movs
push
cdq
dec
leave
call
xor
cdq
retf
and
aad
out
mov
inc
std
(bad)
(bad)
jmp
cli
bound
rol
push
dec
test
mov
aaa
scas
test
mov
pop
int3
push
xor
stos
rcr
into
and
hlt
mov
or
fcomp
adc
rcl
jb
add
sub
lahf
push
pop
cwde
ret
(bad)
dec
cmp
or
(bad)
shr
(bad)
(bad)
cmp
idiv
and
xchg
push
ret
cdq
popf
addr16
cmps
(bad)
js
aaa
lods
mov
adc
test
mov
inc
or
iret
(bad)
jb
lock
inc
mov
mov
lds
jb
(bad)
(bad)
dec
inc
pop
loope
enter
shl
mov
enter
into
pushf
inc
push
call
ret
dec
pop
fld
sub
js
mov
std
addr16
cmp
dec
xor
mov
or
mov
cmp
leave
dec
in
fstp
or
int
cmp
adc
(bad)
(bad)
(bad)
dec
dec
movs
imul
je
jg
gs
shl
xchg
out
in
and
(bad)
call
(bad)
ror
sub
ror
sub
cmp
lods
stos
pop
adc
test
stos
mov
hlt
in
pop
cmp
push
add
jnp
out
cld
jo
popa
(bad)
jmp
adc
sub
and
and
mov
mov
dec
inc
or
jl
imul
or
(bad)
(bad)
jmp
outs
pcmpgtd
stos
sub
dec
xor
cmp
nop
xchg
or
inc
adc
xor
xchg
cmp
push
add
xchg
xchg
mov
test
(bad)
or
loopne
(bad)
dec
out
jbe
push
(bad)
mov
and
jne
sbb
rcl
aaa
mov
and
into
mov
add
cwde
cmp
leave
lds
in
(bad)
(bad)
(bad)
(bad)
out
test
xor
rol
pusha
sbb
movs
xchg
mov
das
rol
dec
call
inc
adc
and
jmp
jecxz
sbb
(bad)
pop
cmps
ins
movs
inc
cmp
daa
cmps
inc
(bad)
out
xchg
sbb
call
jnp
iret
out
std
es
jmp
adc
fwait
gs
out
dec
jmp
push
test
fs
bound
loope
sub
(bad)
(bad)
push
enter
stos
pop
push
cli
aam
leave
ins
xchg
out
mov
sbb
jmp
nop
loopne
cmp
push
stos
(bad)
out
pop
repz
sub
add
mov
stos
cmp
jle
addr16
(bad)
(bad)
(bad)
(bad)
inc
push
in
jb
scas
bound
retf
scas
xchg
(bad)
or
pop
push
mov
pop
test
(bad)
(bad)
inc
fld
fwait
xchg
aas
adc
test
cmps
mov
cli
ficomp
mov
(bad)
lods
call
neg
std
xchg
leave
jp
out
cwde
sets
xor
add
cmp
add
(bad)
(bad)
(bad)
out
(bad)
pop
data16
fiadd
jmp
imul
jl
sub
jns
add
(bad)
(bad)
jmp
mov
fs
clc
stos
(bad)
in
cmp
cmp
ds
fwait
pop
push
jmp
lods
int
xor
(bad)
(bad)
jmp
and
ud0
imul
push
aaa
fst
and
pushf
sub
cs
push
out
push
clc
and
cmp
pop
jbe
mov
(bad)
(bad)
(bad)
push
out
inc
cdq
jle
(bad)
outs
fwait
cmps
mov
in
cld
push
dec
pop
daa
dec
or
aas
push
test
(bad)
(bad)
jmp
sbb
clc
fwait
popf
sbb
pop
xchg
mov
jmp
cmps
push
mov
sti
mov
rcl
sbb
push
inc
mov
fwait
and
nop
mov
mov
dec
rol
push
out
fmul
daa
aam
shl
(bad)
call
xor
in
imul
cmp
daa
mov
lods
mov
pop
call
(bad)
push
pop
sub
fs
loop
sti
jp
mov
push
test
(bad)
(bad)
(bad)
jmp
sbb
inc
pop
push
adc
dec
mov
push
out
les
cmp
cmp
cmp
sti
(bad)
(bad)
push
fcomip
mov
in
std
mov
(bad)
shl
les
ins
push
push
in
inc
cld
(bad)
(bad)
jg
pop
sub
push
neg
jnp
mov
cld
add
xchg
out
(bad)
(bad)
call
je
stos
lahf
add
nop
fidivr
push
out
mov
xchg
out
ss
jg
push
pop
(bad)
(bad)
(bad)
inc
leave
out
retf
xor
out
fwait
push
or
repnz
mov
nop
adc
enter
pop
(bad)
(bad)
(bad)
inc
ss
jl
add
loope
xlat
inc
lahf
mov
mov
adc
push
push
xlat
pop
mov
mov
sbb
stos
pop
dec
mov
enter
std
aam
jg
inc
(bad)
(bad)
(bad)
jmp
mov
popf
ins
push
and
ss
fadd
sbb
jge
sbb
jecxz
pop
into
pop
fistp
test
jg
(bad)
call
cwde
sub
jmp
push
scas
adc
ins
jmp
ins
mov
(bad)
jmp
ds
add
imul
inc
dec
pushf
pop
or
pop
jle
xlat
sub
(bad)
dec
fnclex
jmp
cld
test
scas
and
test
outs
outs
mov
in
jg
(bad)
call
inc
sub
pop
adc
push
in
repz
cmp
xchg
arpl
push
mov
add
jmp
call
shr
mov
mov
in
mov
ds
nop
jp
addr16
mov
(bad)
(bad)
push
sub
inc
sti
jmp
xchg
sbb
iret
(bad)
ja
rol
xchg
xchg
push
icebp
pop
inc
pop
pop
sbb
(bad)
(bad)
jmp
test
xchg
xchg
(bad)
scas
ja
pusha
adc
movs
xchg
mov
or
mov
sub
xchg
sahf
mov
jg
cmp
xchg
stos
mov
mov
mov
fs
pop
xor
inc
imul
inc
push
loope
(bad)
(bad)
(bad)
mov
mov
and
adc
push
nop
cmp
loopne
lods
sbb
outs
sbb
(bad)
(bad)
push
ins
and
mov
ins
fild
call
aam
push
pop
jle
imul
(bad)
(bad)
jnp
jo
mov
cmp
cmp
mov
(bad)
push
inc
movs
bound
mov
movs
push
(bad)
push
xor
lock
arpl
xor
icebp
jmp
loopne
push
xor
retf
into
and
and
fsubrp
(bad)
(bad)
(bad)
inc
in
pop
popa
jno
inc
shl
int
ins
or
push
xchg
sub
sub
(bad)
(bad)
inc
out
dec
adc
rol
(bad)
xchg
sbb
neg
sbb
(bad)
jmp
ins
test
lods
fwait
cwde
add
sbb
or
outs
fadd
sahf
lods
std
lds
je
pop
cmp
(bad)
in
movs
mov
fst
mov
or
dec
or
mov
xchg
dec
fild
and
push
push
jg
scas
mov
pop
hlt
cmp
adc
mov
mov
(bad)
lock
scas
mov
or
pop
xchg
sub
and
leave
xchg
les
dec
and
shl
or
mov
jno
dec
dec
call
inc
pop
mov
cwde
inc
jp
xor
loope
out
dec
pop
mov
(bad)
(bad)
(bad)
jmp
imul
stc
add
jo
(bad)
inc
ins
push
jnp
pusha
ins
push
loopne
push
cdq
dec
pop
(bad)
shr
clc
mov
push
aam
hlt
cmp
add
(bad)
(bad)
call
shl
add
jno
mov
cmp
ins
adc
cwde
in
pop
aaa
fwait
push
cld
fld
nop
mov
(bad)
(bad)
(bad)
jmp
xchg
pop
sbb
cmp
mov
nop
sbb
or
jmp
inc
sub
push
cld
inc
xchg
add
das
jp
mov
push
mov
(bad)
sbb
popa
xchg
(bad)
(bad)
(bad)
(bad)
cli
lods
pop
in
mov
push
out
enter
xchg
cmc
sub
xchg
adc
sub
(bad)
(bad)
jmp
sub
inc
in
xchg
repz
shl
mov
and
cmp
fadd
xchg
fbstp
(bad)
(bad)
(bad)
inc
aam
inc
sahf
(bad)
fidivr
adc
adc
sub
cmp
pop
fnsave
xor
pop
(bad)
(bad)
(bad)
push
sub
mov
jl
std
and
xor
sbb
pop
lahf
iret
jp
repnz
(bad)
(bad)
(bad)
dec
mov
loope
add
lea
test
and
push
push
xchg
fbld
mov
xchg
push
in
adc
pop
fcmovb
stc
fidivr
push
lods
jle
imul
push
push
push
mov
jnp
cmp
add
cmps
fild
cmps
push
sbb
and
mov
(bad)
(bad)
push
sub
add
and
lock
mov
cmp
(bad)
(bad)
(bad)
mov
test
xor
out
cs
sbb
js
push
add
sar
add
(bad)
(bad)
(bad)
inc
xor
mov
out
and
pusha
(bad)
ins
imul
push
mov
push
inc
push
jge
nop
dec
call
(bad)
fiadd
jne
or
mov
sub
mov
mov
leave
inc
mov
or
test
push
push
and
mov
xor
pop
int
add
or
jmp
fdivr
inc
xchg
jo
fadd
cli
pop
cld
jmp
jp
pop
fbstp
xchg
xchg
leave
aam
jns
imul
mov
inc
and
outs
fdiv
jnp
mov
addr16
dec
sub
(bad)
(bad)
inc
pop
mov
rcr
repnz
enter
xchg
enter
xchg
jmp
in
xor
push
dec
loope
inc
and
xor
dec
iret
addr16
pop
jmp
jle
jle
cmps
cmp
(bad)
(bad)
inc
sahf
movs
fimul
loope
leave
mov
jae
xor
and
dec
sbb
leave
(bad)
(bad)
(bad)
jmp
push
sbb
test
pop
clc
push
or
xor
push
cmp
sub
ret
shr
call
inc
cmps
hlt
mov
mov
sub
gs
lods
sub
(bad)
(bad)
(bad)
inc
movs
call
lods
out
in
sub
fmul
mov
pop
jo
ins
(bad)
(bad)
(bad)
push
aad
mov
das
retf
cmp
imul
stos
or
arpl
(bad)
(bad)
inc
xchg
jp
fs
mov
sbb
jmp
outs
clc
push
pop
cli
xchg
loop
sub
mov
mov
(bad)
repz
adc
movs
aaa
cld
(bad)
call
lods
inc
ror
xor
int3
inc
push
sub
(bad)
(bad)
(bad)
inc
adc
xchg
dec
sub
cmp
(bad)
in
xchg
xlat
popa
and
(bad)
(bad)
jmp
addr16
push
(bad)
push
xchg
adc
sbb
mov
(bad)
xchg
xchg
jg
mov
(bad)
jmp
inc
xor
(bad)
pusha
popa
call
add
push
pop
jp
and
(bad)
(bad)
(bad)
push
(bad)
lock
push
fstp
ss
push
pop
or
(bad)
cmc
push
or
enter
sbb
(bad)
(bad)
call
in
mov
pop
mov
xchg
out
out
jg
fldenv
push
stc
pop
shl
pop
out
loopne
(bad)
(bad)
(bad)
dec
add
repnz
sub
xor
dec
jecxz
and
es
gs
mov
imul
sub
enter
mov
test
mov
sbb
mov
xchg
cmp
(bad)
(bad)
dec
popf
dec
mov
(bad)
jo
sbb
leave
pop
mov
adc
out
scas
fidiv
sbb
and
jne
in
push
xchg
call
adc
add
out
sub
jnp
movs
jmp
(bad)
(bad)
(bad)
dec
pop
dec
hlt
repz
add
into
and
nop
push
jns
shl
xchg
mov
xor
(bad)
(bad)
(bad)
fistp
adc
or
inc
push
ror
mov
mov
xor
(bad)
inc
add
pop
inc
dec
jmp
lods
(bad)
(bad)
mov
mov
adc
(bad)
loop
sbb
lahf
inc
clc
test
(bad)
call
and
mov
sti
cs
jnp
in
inc
cmps
test
pop
add
pop
stos
and
ds
xor
icebp
(bad)
(bad)
add
enter
ja
mov
(bad)
frstor
xchg
test
pop
jmp
add
sub
imul
es
call
stos
jle
mov
das
(bad)
(bad)
jmp
lea
(bad)
(bad)
(bad)
push
cwde
cmp
xlat
icebp
pusha
mov
jae
daa
mov
or
mov
xchg
repz
mov
mov
shl
jae
inc
mov
inc
(bad)
dec
(bad)
das
imul
ins
jbe
sub
mov
mov
fsubr
sub
(bad)
(bad)
(bad)
jmp
mov
stos
cwde
movs
mov
and
cmp
daa
int3
sbb
xchg
scas
(bad)
inc
adc
idiv
mov
or
int3
jecxz
jno
jo
test
lds
call
les
outs
rol
mov
xchg
jno
retf
mov
sbb
loop
shr
das
mov
gs
pop
shl
dec
das
lds
pop
jg
add
xlat
fdivr
xor
(bad)
dec
test
fbstp
rcl
and
push
adc
out
jo
cld
add
jmp
or
(bad)
or
xchg
mov
(bad)
jle
jecxz
ins
xor
je
xchg
xor
push
mov
inc
inc
sbb
mov
mul
test
mov
(bad)
mov
add
jl
sar
repnz
xor
hlt
add
sti
xor
imul
cdq
jle
das
(bad)
xchg
sbb
mov
fadd
les
inc
out
fdivr
mov
push
lods
and
inc
mov
inc
xor
inc
aad
hlt
(bad)
(bad)
jg
push
fistp
cmp
in
aaa
mov
jae
jb
(bad)
(bad)
(bad)
dec
movs
mov
and
cmp
dec
dec
xchg
sub
lock
jne
mov
(bad)
(bad)
jmp
or
test
cdq
cmc
pop
mov
xchg
push
out
fisttp
loop
push
(bad)
(bad)
jmp
push
jge
cmp
mov
pop
jmp
or
push
xchg
mov
in
(bad)
(bad)
jmp
clc
mov
or
out
lods
add
movs
cmp
and
cwde
pop
(bad)
push
and
or
je
cli
mov
fidiv
push
int
iret
mov
xlat
shr
mov
cmp
mov
out
aaa
or
mov
call
stos
(bad)
jl
int3
popf
mov
(bad)
(bad)
call
mov
jmp
shl
jnp
fidiv
(bad)
push
outs
dec
loop
mov
jmp
lods
std
(bad)
push
ins
add
movs
cmp
pop
lahf
inc
lds
push
call
(bad)
(bad)
(bad)
jmp
je
cmp
dec
and
ret
in
pop
cmc
push
add
pop
gs
mov
jg
fdivr
(bad)
(bad)
(bad)
in
shl
and
inc
rol
popa
inc
cmp
jg
pop
fld
cdq
ins
bnd
xchg
(bad)
(bad)
(bad)
out
and
mov
jmp
lds
gs
dec
dec
dec
ins
test
lds
cwde
mov
test
out
(bad)
(bad)
(bad)
(bad)
in
scas
jmp
inc
push
mov
in
daa
movs
inc
cwde
add
ss
das
jp
cmp
(bad)
cmp
adc
jge
push
ffreep
mov
mov
loop
sar
push
push
cmps
int
outs
mov
mov
imul
dec
and
inc
(bad)
out
adc
cli
mov
sub
jecxz
mov
call
je
jnp
jmp
pop
mov
fidivr
xchg
call
xchg
inc
iret
shl
clc
cs
add
sbb
stos
xor
inc
movs
adc
popa
and
(bad)
(bad)
(bad)
call
sub
jp
(bad)
ins
retf
enter
cmp
sbb
popa
jno
pop
ror
nop
(bad)
(bad)
(bad)
(bad)
fldcw
loop
sbb
and
or
cmp
pushf
mov
outs
pop
or
dec
add
mov
pop
push
dec
xchg
shr
les
pop
test
mov
addr16
scas
mov
mov
dec
jnp
pop
cmp
jns
outs
movs
bnd
dec
sar
(bad)
jmp
adc
pop
not
shl
push
dec
jecxz
or
push
shl
mov
(bad)
div
shr
dec
mov
lods
bound
lahf
lock
inc
(bad)
aas
aad
nop
movs
xchg
(bad)
jmp
int
pusha
lods
fstp
mov
xchg
pop
pop
leave
push
mov
adc
jb
(bad)
(bad)
(bad)
call
xor
or
dec
fbstp
or
sbb
in
lds
ror
(bad)
(bad)
(bad)
inc
arpl
stos
ret
push
sahf
or
inc
mov
out
imul
mov
push
das
cmc
inc
xchg
rcl
(bad)
(bad)
(bad)
xchg
or
or
out
mov
outs
xor
jge
mov
mov
cdq
sub
add
and
in
dec
pushf
add
cli
les
out
dec
(bad)
(bad)
(bad)
jmp
cmps
cmp
test
adc
inc
xor
aaa
mov
mov
or
inc
and
les
in
jmp
and
stos
jg
push
xor
outs
fucomi
outs
mov
jno
mov
pop
mov
or
int
shl
(bad)
dec
add
cli
into
mov
dec
mov
retf
sub
mov
lds
jns
mov
mov
dec
(bad)
mul
fcomp
imul
(bad)
inc
push
push
iret
ret
xor
mov
pop
lock
mov
test
mov
scas
sub
mov
xchg
(bad)
xchg
xchg
(bad)
xchg
push
test
jbe
mov
inc
sub
mov
inc
(bad)
sub
das
jo
sub
dec
jmp
call
mov
cdq
sub
cld
(bad)
std
fist
jae
mov
iret
ja
outs
mov
dec
pop
(bad)
or
mov
(bad)
popa
dec
mov
aaa
call
xchg
das
or
(bad)
dec
out
in
pop
call
dec
inc
add
inc
dec
jns
xchg
mov
inc
sbb
out
fcomip
mov
push
sbb
mov
jmp
(bad)
(bad)
jmp
mov
hlt
icebp
jo
movs
out
popa
movs
sub
fiadd
push
xchg
(bad)
aam
pop
fnstcw
push
mov
cmp
pop
aam
fadd
xor
scas
cmps
mov
das
clc
js
push
or
xor
push
loope
not
int3
add
jg
sub
dec
(bad)
xor
test
pusha
jae
fbld
gs
adc
retf
cmc
(bad)
push
sbb
daa
cmps
push
jecxz
mov
push
and
xchg
out
mov
sub
cmc
(bad)
fistp
sbb
(bad)
and
cmps
cs
imul
adc
and
cld
(bad)
call
adc
leave
outs
out
ret
int
fwait
sbb
mov
fadd
push
sbb
(bad)
(bad)
jmp
aas
inc
loop
push
shl
rcl
push
xchg
sbb
xor
add
pop
dec
add
(bad)
(bad)
dec
xchg
pop
mov
xchg
sbb
loope
scas
popf
dec
popf
arpl
lods
sub
(bad)
je
(bad)
(bad)
mov
inc
jne
jnp
add
stc
jmp
(bad)
jecxz
in
(bad)
(bad)
(bad)
call
lds
or
lds
loop
test
lock
xchg
inc
and
(bad)
push
sub
mov
popf
cmps
or
test
shl
(bad)
pop
adc
add
data16
rol
dec
xchg
jp
ins
loopne
(bad)
(bad)
(bad)
jg
cdq
or
dec
shl
jns
movs
dec
(bad)
push
mov
adc
jmp
(bad)
(bad)
(bad)
inc
and
mov
adc
push
test
outs
mov
sbb
jo
inc
sbb
(bad)
(bad)
call
stc
enter
jnp
lods
push
sbb
test
add
rol
ds
mov
(bad)
(bad)
(bad)
call
push
inc
arpl
jge
idiv
iret
dec
loope
jp
pop
out
loop
call
sub
and
or
mov
mov
fmul
(bad)
mov
aaa
cmp
and
add
(bad)
call
dec
or
gs
dec
mov
out
jae
and
stos
mov
out
mov
leave
dec
sub
or
dec
push
mov
retf
sub
fs
in
(bad)
(bad)
(bad)
call
mov
mov
loop
out
mov
mov
xchg
popa
neg
jns
cmp
(bad)
call
scas
jbe
(bad)
daa
xchg
ret
jg
and
pop
lea
shr
push
jno
push
test
(bad)
(bad)
(bad)
jmp
imul
pop
jmp
add
cmp
iret
popa
mov
and
adc
jnp
repnz
(bad)
(bad)
call
mov
jb
addr16
cmps
push
outs
movs
cwde
jl
repz
sbb
push
lods
(bad)
(bad)
dec
mov
lods
not
xchg
(bad)
pop
mov
aam
repnz
retf
xchg
retf
(bad)
push
loopne
out
loop
scas
aam
fnsave
adc
popa
or
fistp
dec
adc
mov
jmp
mov
loopne
(bad)
(bad)
(bad)
(bad)
aas
call
mov
add
add
xchg
sub
ins
out
mov
dec
dec
popa
mov
(bad)
(bad)
(bad)
inc
and
cmp
sbb
das
sub
hlt
mov
aam
xor
stc
mov
test
or
(bad)
(bad)
jmp
jge
dec
(bad)
movs
sub
popa
cmp
dec
dec
imul
pop
mov
(bad)
aam
adc
outs
push
ret
mov
add
idiv
lods
(bad)
(bad)
(bad)
call
adc
inc
cmps
mov
in
fcomp
sbb
sti
mov
xor
jg
(bad)
(bad)
ficomp
mov
shl
push
mov
and
jge
pop
mov
dec
jmp
mov
call
or
mov
inc
cmp
(bad)
jg
adc
or
shl
sbb
in
sbb
and
ss
clc
pop
hlt
(bad)
jmp
int3
mov
inc
adc
out
in
sbb
je
aad
jb
pop
aaa
lahf
(bad)
(bad)
(bad)
(bad)
mov
stos
mov
xor
mov
ins
cwde
and
icebp
jge
mov
nop
cmp
stos
(bad)
call
(bad)
(bad)
lods
(bad)
(bad)
mov
es
in
test
push
(bad)
addr16
or
cmp
popf
hlt
mov
lahf
neg
dec
mov
imul
sbb
(bad)
call
fidivr
mov
pop
sbb
setns
fwait
repz
test
in
fistp
(bad)
(bad)
(bad)
(bad)
jnp
sbb
mov
xchg
jmp
xchg
mov
test
mov
(bad)
aad
dec
jge
xchg
inc
xchg
xchg
(bad)
push
ret
push
mov
jnp
clc
push
pusha
(bad)
in
cmp
packssdw
push
mov
jnp
(bad)
repz
sbb
sub
dec
(bad)
(bad)
jg
frstor
adc
cs
iret
xchg
jmp
xchg
int
mov
int3
ins
rol
(bad)
(bad)
(bad)
push
inc
mov
jl
and
rol
mov
push
xor
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lock
cld
sbb
sbb
arpl
inc
(bad)
xchg
dec
dec
xchg
dec
test
xchg
(bad)
(bad)
(bad)
inc
push
out
pop
repz
push
xor
xchg
mov
std
or
push
jne
out
cmp
inc
inc
jb
sti
mov
gs
mov
(bad)
xchg
retf
movs
xchg
adc
shr
adc
pusha
out
int3
test
push
push
mov
jge
mov
sbb
(bad)
call
sbb
xchg
das
or
mov
sub
xchg
idiv
(bad)
jmp
retf
bsf
inc
cmps
movs
daa
std
mov
fs
iret
(bad)
xchg
mov
call
inc
cmp
pushf
call
adc
cld
mov
shr
(bad)
(bad)
(bad)
(bad)
fnsetpm(287
xor
arpl
icebp
mov
fimul
jns
scas
popa
inc
pop
rcr
push
jo
and
xchg
hlt
into
sti
push
(bad)
jmp
sti
les
xlat
out
inc
push
sub
sbb
mov
icebp
(bad)
(bad)
call
outs
push
cmp
or
jo
cs
dec
call
or
cmp
daa
movs
outs
mov
adc
xor
(bad)
(bad)
push
add
pop
daa
out
lods
in
xor
lods
ins
mov
push
loop
cmp
repnz
mov
sub
cmp
enter
jp
push
dec
mov
repnz
pop
fadd
lds
sbb
jae
fwait
pop
stos
out
xchg
adc
jmp
inc
shr
add
push
outs
call
stos
ds
aad
ja
(bad)
inc
sbb
in
pop
xchg
cmp
aam
pop
enter
(bad)
out
clc
(bad)
(bad)
inc
mov
popf
push
mov
jecxz
test
jge
popa
jbe
jecxz
and
(bad)
(bad)
jmp
and
add
mov
fisttp
xor
or
(bad)
(bad)
jmp
lock
and
mov
add
xor
push
je
adc
out
sub
pusha
mov
mov
and
mov
cli
dec
rcr
adc
mov
push
pop
lods
les
retf
ds
mov
jecxz
push
or
mov
popf
cli
cmp
jmp
(bad)
(bad)
push
test
test
sbb
lods
call
scas
sbb
xor
and
inc
inc
push
retf
add
(bad)
dec
add
inc
or
fcomp
or
(bad)
rcl
cli
(bad)
(bad)
push
inc
push
enter
(bad)
(bad)
cmp
call
popa
mov
cmps
leave
pop
mov
call
pop
(bad)
in
or
stc
retf
fadd
pop
(bad)
jg
jmp
sub
call
push
and
cmp
xlat
or
sbb
arpl
xlat
(bad)
(bad)
(bad)
(bad)
xor
mov
hlt
xor
push
mov
cli
jmp
pop
xchg
shl
cld
fs
adc
mov
(bad)
test
stos
inc
in
xor
and
mov
(bad)
cmp
pop
or
ror
in
loop
mov
(bad)
call
sub
das
sub
mov
jl
in
ror
scas
and
(bad)
dec
xchg
enter
mov
add
sub
call
int
sbb
(bad)
fnsave
or
sub
push
(bad)
(bad)
dec
les
fmul
out
jbe
outs
stc
and
in
inc
xor
(bad)
(bad)
jg
(bad)
aam
pop
jg
jno
(bad)
loop
retf
test
and
adc
rcl
loope
or
(bad)
jmp
not
repz
mov
mov
mov
aaa
gs
dec
imul
sbb
(bad)
(bad)
(bad)
inc
cld
push
or
cdq
xchg
or
inc
or
adc
(bad)
fldenv
pop
cmp
(bad)
jg
in
cmps
pop
ss
pop
dec
sbb
retf
sub
cmp
xlat
push
mov
out
and
mov
mov
add
(bad)
push
mov
daa
or
(bad)
mov
lock
lahf
dec
and
cmp
(bad)
(bad)
mov
cs
dec
dec
fwait
je
xor
push
(bad)
or
pop
icebp
jmp
pop
icebp
sbb
(bad)
(bad)
jg
push
int
sbb
push
mov
retf
sub
ss
(bad)
or
in
jg
push
push
cmp
jg
inc
fbld
mov
cmps
test
outs
dec
sub
pop
jmp
jmp
adc
repz
test
aas
hlt
xchg
iret
(bad)
fcomi
or
(bad)
(bad)
jmp
test
dec
mov
jl
sbb
cmp
(bad)
push
xchg
in
mov
push
mov
imul
inc
pop
xchg
test
(bad)
sub
in
mov
add
(bad)
(bad)
fild
push
push
or
mov
dec
(bad)
pop
leave
(bad)
repz
test
add
adc
jb
call
call
(bad)
sti
fcom
scas
test
inc
push
(bad)
(bad)
inc
inc
movs
in
sar
add
int
idiv
loopne
adc
enter
inc
pop
sar
(bad)
fmul
dec
shl
imul
dec
ret
sbb
and
ret
push
loop
jmp
dec
mov
fidivr
out
inc
sbb
add
test
or
ins
call
fisttp
push
sar
lods
outs
jnp
jmp
outs
clc
push
cs
pop
add
movs
or
jnp
inc
jne
inc
mov
add
sbb
(bad)
(bad)
call
scas
in
mov
sbb
mov
push
and
mov
fadd
(bad)
fcomip
inc
push
rcl
loop
add
push
in
dec
sub
dec
cmp
mov
adc
jecxz
imul
mov
(bad)
mov
jmp
add
add
gs
pop
dec
push
sub
mov
dec
ret
cdq
iret
scas
mov
jo
xchg
lods
bound
mov
(bad)
fucomip
sbb
xchg
push
dec
sub
pop
popa
fmul
mov
add
mov
or
push
std
and
mov
jp
bound
xor
test
xor
push
inc
mov
(bad)
(bad)
(bad)
call
hlt
cld
stos
aas
xchg
xchg
scas
mov
ja
std
jp
retf
xchg
mul
(bad)
or
mov
(bad)
(bad)
jmp
dec
dec
push
icebp
mov
or
das
cmc
jge
ja
into
dec
hlt
retf
dec
mov
adc
idiv
(bad)
(bad)
push
pushw
push
aad
repnz
stos
test
add
cwde
cmps
mov
les
call
mov
(bad)
inc
out
inc
frstor
cmp
cmc
jnp
lahf
or
and
lods
out
xchg
(bad)
mov
cwde
call
stc
mov
ins
ffree
mov
or
(bad)
jmp
sub
jge
sbb
fwait
pushf
cmp
shl
mov
call
into
stos
sub
in
sub
mov
cmp
pop
(bad)
call
push
ret
stos
xchg
lahf
sub
ret
cmp
mov
(bad)
call
push
mov
jbe
xor
lods
jb
aam
cmp
jns
out
mov
and
(bad)
inc
xchg
add
mov
mov
scas
jb
(bad)
inc
dec
gs
dec
jbe
pop
(bad)
or
sbb
mov
inc
pop
sub
not
xor
jns
cmp
pop
les
push
mov
sti
lahf
mov
and
mov
(bad)
neg
xor
loopne
fimul
mov
mov
aas
add
cmp
push
push
mov
out
push
stos
push
sti
and
(bad)
(bad)
inc
fistp
hlt
or
inc
out
mov
stos
sbb
and
in
sub
or
std
dec
out
xor
iret
adc
leave
cmp
test
sbb
push
in
pop
addr16
mov
fsub
(bad)
and
pop
stos
mov
xchg
mov
lods
add
push
pop
xchg
test
xchg
push
lods
and
inc
fld
(bad)
(bad)
(bad)
inc
loopne
cwde
adc
adc
and
gs
sub
jecxz
push
push
ret
out
dec
dec
xchg
fadd
xor
std
push
pusha
jae
fstp
sub
test
xchg
icebp
(bad)
(bad)
mov
jg
and
mov
sub
retf
je
(bad)
(bad)
dec
in
mov
xchg
jno
int
cmp
ins
inc
call
and
mov
adc
add
xchg
sub
out
jg
xor
cmp
clc
jg
(bad)
pushf
sub
fdivr
arpl
clc
call
cmps
scas
(bad)
jg
pop
mov
(bad)
mov
(bad)
cld
(bad)
(bad)
jmp
into
fidivr
sub
loopne
mov
jne
add
jno
sbb
outs
xchg
movs
pop
dec
cmp
(bad)
lds
mov
hlt
sub
xchg
idiv
xchg
arpl
mov
add
add
(bad)
(bad)
fst
jnp
and
xor
out
dec
std
scas
mov
pop
cmp
and
shr
ins
jle
dec
(bad)
(bad)
push
cmps
adc
and
jno
ins
mov
rol
add
cwde
and
inc
inc
mov
jmp
sbb
inc
aas
sbb
dec
add
or
cmc
cmp
cmp
out
mov
ret
mov
(bad)
(bad)
(bad)
inc
mov
hlt
mov
add
xchg
cs
adc
inc
not
cmps
inc
mov
(bad)
push
sub
cmp
loope
push
cmp
mov
cmp
xchg
dec
jmp
(bad)
push
inc
cmc
mov
retf
(bad)
push
mov
lods
jl
mov
out
jg
push
jp
add
call
sub
scas
sbb
dec
mov
enter
mov
(bad)
ja
pop
loope
imul
sub
fs
dec
xchg
stc
dec
inc
mov
dec
mov
xor
adc
or
stos
xchg
outs
test
das
ret
stos
push
aaa
loop
popf
test
call
cld
(bad)
ds
adc
jae
(bad)
sti
jge
push
sub
and
cmp
iret
dec
mov
pop
mov
cmp
hlt
fild
mov
mov
imul
fwait
and
loop
sar
int3
call
(bad)
rcr
mov
sti
in
add
mov
adc
lock
(bad)
(bad)
(bad)
call
(bad)
mov
push
out
stc
sub
fs
shr
or
pop
test
xor
cmp
jmp
scas
xchg
push
add
les
xchg
and
jb
mov
clc
pop
cmc
les
cdq
fbstp
push
add
xchg
sbb
(bad)
mov
add
shr
push
dec
lods
sar
push
and
dec
hlt
(bad)
stc
stos
loop
inc
cwde
xchg
xor
xchg
push
cs
cmp
test
jg
js
jl
fwait
aaa
std
(bad)
jmp
mov
or
cmp
cmp
sub
fwait
push
fcom
sub
inc
movs
mov
(bad)
(bad)
(bad)
dec
ins
repz
mov
add
mov
inc
jnp
out
je
mov
cmp
int
(bad)
(bad)
call
ja
in
movs
inc
js
adc
xor
fmul
repnz
sbb
lods
xchg
(bad)
dec
jbe
add
lock
sbb
int
push
hlt
jo
jle
test
sub
(bad)
(bad)
(bad)
(bad)
aas
pusha
imul
push
and
ins
xor
lods
pop
jnp
leave
dec
jg
(bad)
push
(bad)
jmp
call
(bad)
inc
into
ins
inc
mov
xchg
ret
mov
(bad)
(bad)
(bad)
call
loop
leave
cli
dec
ss
cmp
sub
dec
sub
mov
ror
(bad)
(bad)
call
aam
xchg
or
ins
into
stos
sbb
aas
loopne
(bad)
mov
inc
test
cs
inc
add
ret
rol
push
jmp
(bad)
(bad)
jmp
fistp
je
sbb
stc
ja
push
mov
call
es
popf
imul
nop
stc
daa
mov
cld
push
test
cmp
pop
push
ret
or
(bad)
(bad)
(bad)
dec
in
lea
stc
fisubr
mov
dec
and
cmps
cmp
push
test
or
ds
aam
retf
addr16
mov
add
push
loopne
adc
mov
rcr
mov
clc
adc
pop
jle
cli
jp
outs
ins
and
and
dec
cld
ror
mov
add
call
push
je
retf
mov
xchg
out
pop
mov
jbe
ja
rol
das
dec
mov
xchg
add
cli
cmc
scas
enter
cli
dec
cmp
xchg
jle
xor
and
pop
cs
scas
mov
inc
cld
(bad)
(bad)
out
out
or
push
xlat
cmp
cmps
xor
mov
ins
test
cmp
mov
(bad)
jnp
xchg
fwait
(bad)
mov
icebp
jg
and
push
mov
pop
mov
ret
sub
aam
pop
pop
stos
inc
(bad)
retf
push
mov
sti
loope
adc
(bad)
(bad)
(bad)
push
lahf
and
mov
std
push
or
in
nop
gs
pushf
(bad)
popa
cmp
iret
shr
(bad)
jmp
jp
jl
sub
pop
(bad)
pop
cwde
and
loope
sub
inc
mov
jp
pop
sub
(bad)
(bad)
(bad)
(bad)
aas
push
fsubr
(bad)
cmps
sub
les
mov
sbb
and
dec
iret
cmc
and
jg
je
sub
pop
(bad)
(bad)
(bad)
call
cwde
xchg
sbb
pop
(bad)
cld
mov
rol
fimul
sub
inc
jno
(bad)
(bad)
(bad)
push
stos
daa
inc
test
xchg
icebp
(bad)
mov
in
fild
fs
sbb
pop
pop
push
stc
(bad)
(bad)
(bad)
call
mov
jmp
(bad)
mov
pop
repz
mov
pop
outs
jl
fisubr
inc
cmp
(bad)
(bad)
jmp
std
arpl
jecxz
gs
dec
sbb
push
or
push
pop
(bad)
jg
(bad)
out
jle
js
loopne
imul
pop
mov
jae
call
jp
ja
sar
mov
adc
ins
jbe
sbb
lods
(bad)
(bad)
inc
test
aam
scas
xchg
movs
icebp
je
inc
pushf
mov
jne
xor
and
(bad)
(bad)
dec
cwde
pushf
add
jmp
sti
cmps
jno
outs
dec
xchg
adc
repz
std
(bad)
sti
cmp
mov
cld
pop
mov
xor
stos
ds
fst
jbe
inc
cli
dec
in
les
jo
dec
call
(bad)
outs
sbb
pop
mov
xchg
inc
jbe
out
fwait
(bad)
jmp
leave
cmps
pop
nop
pushf
mov
inc
jle
es
cmp
mov
inc
dec
lods
push
dec
push
inc
call
and
(bad)
(bad)
(bad)
inc
pop
or
xchg
cmc
movs
jl
inc
retf
les
sbb
cmp
(bad)
(bad)
(bad)
mov
movs
inc
inc
mov
mov
stos
std
pushf
and
push
push
scas
addr16
cdq
push
or
(bad)
push
test
lock
ds
and
mov
or
jmp
jns
sub
mov
jae
and
mov
sub
sbb
cli
inc
(bad)
jg
dec
mov
sub
mov
shl
pop
repnz
les
je
out
(bad)
(bad)
(bad)
dec
cli
dec
mov
loopne
xchg
sub
xor
jnp
das
lds
imul
inc
or
dec
jge
push
and
mov
jp
pop
or
jns
or
jmp
adc
cs
mov
cmp
(bad)
(bad)
in
stos
or
pop
lock
push
test
jbe
xchg
(bad)
(bad)
(bad)
inc
jne
lock
leave
aad
imul
mov
movs
je
cmp
outs
clc
jmp
or
xchg
stc
aas
jl
jbe
loopne
in
retf
inc
dec
inc
add
jmp
dec
adc
inc
mov
jl
mov
(bad)
(bad)
call
out
sbb
cmp
push
clc
out
fsub
hlt
cld
retf
mov
xchg
dec
leave
(bad)
(bad)
(bad)
mov
rcl
xchg
sub
jle
pop
in
mov
outs
add
movs
daa
or
mov
sbb
and
shl
je
cmp
inc
cdq
dec
ja
out
outs
test
xchg
cmp
(bad)
inc
cld
fcom
nop
inc
jecxz
js
rol
push
pop
mov
nop
jmp
or
sbb
jne
cmp
push
bound
aaa
pop
(bad)
mov
mov
rcl
pop
mov
loop
mov
js
xor
(bad)
(bad)
fcomip
xchg
dec
sub
imul
and
push
rcr
jg
(bad)
dec
sub
sub
dec
into
and
outs
jg
xor
or
out
(bad)
(bad)
call
pop
jmp
and
aad
and
cmp
(bad)
push
sub
sub
dec
adc
leave
call
inc
call
out
inc
test
sbb
scas
mov
mov
in
add
(bad)
inc
imul
fwait
repz
fcomip
pop
cs
out
loope
call
ror
movs
cmp
aaa
cld
(bad)
call
cmc
adc
inc
mov
sbb
ret
sub
add
call
mov
sub
(bad)
jmp
leave
cmp
mov
cmps
add
(bad)
(bad)
(bad)
call
add
popa
retf
xor
or
jne
jo
sbb
mov
(bad)
call
cmp
cmc
mov
xchg
fs
and
es
(bad)
in
add
(bad)
(bad)
dec
jb
ss
dec
mov
sbb
adc
(bad)
jmp
mov
jl
int3
add
rcl
ds
mov
xlat
ret
popf
sbb
call
repz
pop
pop
imul
retf
and
sahf
mov
adc
rcl
nop
ins
lock
dec
mov
ficomp
ins
jns
jmp
ins
and
(bad)
(bad)
(bad)
call
sub
xchg
pop
icebp
push
es
xor
push
sub
shl
rcr
sub
add
(bad)
call
adc
test
out
and
dec
enter
(bad)
(bad)
mov
jge
push
mov
ror
mov
push
adc
ror
xor
mov
mov
outs
fdivr
fdivr
fmul
fbld
repnz
enter
sub
cmps
aam
xor
cmp
movs
mov
popa
add
or
nop
ret
xchg
xchg
std
sbb
into
stc
dec
pop
inc
(bad)
sahf
dec
push
pop
inc
or
(bad)
inc
icebp
jmp
xchg
sub
and
pop
lds
pushf
xchg
(bad)
dec
gs
push
scas
dec
(bad)
(bad)
(bad)
call
pushf
ret
mov
sahf
pusha
iret
adc
lock
sbb
sbb
push
pop
jae
cwde
ds
scas
(bad)
(bad)
(bad)
push
pop
movs
push
xchg
in
es
cs
imul
mov
xchg
add
(bad)
(bad)
(bad)
jmp
fwait
mov
push
push
das
cmps
sbb
cs
fsub
dec
mov
pop
jbe
test
jmp
mov
lods
inc
jp
sub
sbb
adc
pop
jns
push
mov
cmp
(bad)
dec
inc
push
cmps
lea
push
enter
sub
test
(bad)
dec
add
jge
xor
loopne
sub
lahf
inc
jbe
aas
jb
test
outs
out
cmps
pop
loopne
xor
pop
test
sbb
and
neg
push
(bad)
(bad)
(bad)
in
popf
call
mov
stc
inc
fcomp
enter
(bad)
cs
in
pop
loope
sar
jnp
pusha
jo
imul
mov
ret
fldl2t
jg
xchg
mov
je
pop
(bad)
(bad)
(bad)
(bad)
mov
(bad)
pop
outs
jmp
sub
xchg
ror
sub
sub
adc
aam
(bad)
(bad)
call
sub
call
mov
dec
sub
test
xor
out
ins
imul
mov
mov
das
test
inc
sub
stos
(bad)
ror
movs
(bad)
jmp
push
iret
add
cwde
nop
in
and
lods
in
mov
push
pop
xor
fcomip
(bad)
(bad)
(bad)
jno
addr16
mov
xchg
sbb
adc
iret
nop
and
mov
jmp
imul
call
pusha
cmp
inc
mov
imul
(bad)
push
jmp
push
and
mov
stos
jnp
push
sub
pop
sahf
push
jnp
sahf
movs
cmp
(bad)
push
or
xchg
mov
sub
pusha
js
mov
std
in
mov
aaa
jl
out
cmp
xchg
(bad)
(bad)
(bad)
call
(bad)
dec
lods
or
cmps
(bad)
sub
sub
ret
mov
xor
sbb
fcom
cmp
fwait
or
popf
fdivr
mov
jg
(bad)
(bad)
mov
repz
cmp
test
jp
nop
(bad)
popa
push
outs
cs
(bad)
ss
call
(bad)
(bad)
call
inc
retf
pop
movs
cdq
jge
cli
cld
dec
inc
mov
push
pushf
cwde
movs
mov
call
inc
(bad)
xlat
and
ficom
or
push
rcr
aam
popf
inc
xchg
push
push
(bad)
(bad)
(bad)
(bad)
jge
adc
mov
sub
(bad)
lods
call
loope
pushf
or
inc
mov
(bad)
(bad)
call
xor
mov
mov
or
and
sub
add
(bad)
(bad)
inc
bound
in
push
adc
adc
cli
mov
jo
fsincos
je
cmp
xor
(bad)
(bad)
(bad)
jnp
push
mov
mov
scas
stc
(bad)
das
test
fpatan
bound
stos
lock
inc
adc
scas
inc
sub
outs
cli
jmp
jge
mov
xor
dec
xor
mov
and
cmp
rol
and
loopne
inc
retf
adc
adc
(bad)
push
sahf
jle
pop
sub
cmp
(bad)
mov
shl
mov
scas
retf
bound
sbb
lds
push
sub
scas
push
and
mov
xchg
adc
shr
clc
cmp
aam
(bad)
adc
cs
cmc
sti
xchg
stc
or
mov
sahf
pop
xchg
push
push
sub
add
ficomp
movs
fldcw
push
jle
mov
(bad)
(bad)
(bad)
call
mov
adc
mov
repz
cli
(bad)
cmps
les
shl
mov
(bad)
jmp
inc
retf
leave
fistp
dec
jns
sbb
popf
popa
inc
mov
xor
cmp
nop
add
push
and
call
cld
into
add
xchg
das
mov
pop
sbb
adc
out
ja
stc
ret
mov
(bad)
(bad)
jmp
xor
loope
push
in
mov
or
neg
jbe
push
jecxz
dec
push
(bad)
(bad)
(bad)
jmp
(bad)
out
into
lods
in
ret
pop
std
jg
fwait
push
pop
push
repnz
das
add
xchg
(bad)
(bad)
inc
int
dec
sub
dec
dec
out
mov
ficomp
inc
(bad)
out
movs
test
cmp
imul
cmp
push
cld
lea
addr16
cli
xchg
scas
and
sahf
out
int
(bad)
(bad)
(bad)
call
jge
xchg
stos
ret
retf
and
dec
cdq
and
stc
mov
mov
or
(bad)
(bad)
mov
xchg
jg
jle
inc
push
stc
jl
ret
mov
ss
push
mov
sbb
(bad)
(bad)
call
ja
mov
sub
cs
add
dec
shl
xor
jl
add
(bad)
in
(bad)
inc
or
fucomi
pushf
mov
lods
cmp
push
push
or
and
sub
dec
lahf
xor
icebp
(bad)
push
(bad)
imul
mov
neg
bound
jge
mov
retf
mov
out
mov
retf
push
popf
jle
je
dec
mov
sub
xchg
aad
sbb
jmp
cwde
inc
aam
into
inc
mov
(bad)
out
mov
(bad)
sub
or
shl
adc
out
xchg
in
(bad)
(bad)
push
imul
dec
jno
outs
mov
out
mov
(bad)
fadd
push
pop
mov
loopne
xor
or
sti
lds
in
adc
icebp
(bad)
(bad)
push
fwait
push
xchg
pop
out
repnz
sub
fadd
gs
jns
xchg
cmp
cmps
add
push
cs
(bad)
(bad)
stc
cmc
inc
pop
adc
lds
mov
push
mov
mov
cmp
cmps
dec
pop
dec
or
inc
dec
xchg
xchg
mov
mov
inc
pushf
and
(bad)
(bad)
dec
ret
out
sbb
sahf
ret
retf
jnp
popa
push
xor
test
add
sbb
pop
(bad)
(bad)
call
mov
add
popw
mov
in
cmp
sbb
xchg
neg
add
(bad)
(bad)
mov
xchg
lock
(bad)
(bad)
gs
push
sub
sti
xchg
das
sbb
pop
lock
xlat
ror
jae
in
int
clc
pop
mov
sub
xchg
(bad)
(bad)
jmp
xchg
push
pop
(bad)
adc
jno
adc
xor
xchg
arpl
sub
pusha
ffree
(bad)
jle
scas
xchg
(bad)
cmp
test
add
popa
scas
pop
js
rol
and
sub
push
test
aam
test
ds
shl
xchg
aaa
dec
ret
aaa
call
pushw
mov
add
(bad)
(bad)
(bad)
fisubr
dec
repz
cmp
pop
test
mov
sbb
lods
cs
mov
fstp
lods
(bad)
(bad)
(bad)
inc
lods
mov
xchg
mov
imul
mov
adc
add
xor
rol
fistp
in
dec
rcl
push
jg
pop
dec
or
call
adc
arpl
mov
mov
jg
loopne
xor
sub
mov
in
out
vcvtps2dq
cld
xchg
dec
xor
add
or
pushf
cmps
(bad)
pop
stos
pop
shr
ret
and
ja
xchg
ins
xchg
shl
add
adc
leave
outs
mov
call
fdivr
retf
mov
inc
sahf
or
pop
mov
(bad)
mov
sub
push
scas
lea
push
hlt
jecxz
ret
xchg
in
jmp
or
loop
fadd
xor
pusha
arpl
mov
enter
in
imul
in
jmp
fcom
aam
ins
iret
push
pusha
(bad)
(bad)
(bad)
call
push
stos
addr16
or
inc
or
loop
retf
movs
jae
js
push
cli
(bad)
call
or
jge
jg
cmp
mov
leave
fwait
leave
adc
xchg
or
(bad)
mov
mov
rcl
add
xor
sti
pop
dec
adc
(bad)
(bad)
inc
or
mov
fisubr
aas
cmp
xchg
pop
sar
xor
inc
shl
push
(bad)
(bad)
(bad)
inc
xor
hlt
mov
jo
fstp
inc
xchg
test
dec
add
loope
aas
(bad)
mov
jmp
pop
push
icebp
sub
fcom
into
cmps
dec
jns
int
xchg
(bad)
(bad)
ficom
or
cmps
dec
xchg
(bad)
ror
(bad)
jge
pop
fwait
mov
push
cdq
mov
loopne
cli
xchg
test
frstor
(bad)
dec
jne
push
arpl
sub
(bad)
scas
and
jecxz
fidiv
mov
jmp
add
push
imul
jg
call
or
mov
lods
daa
push
rcr
and
jnp
out
dec
adc
in
(bad)
(bad)
call
aas
push
xlat
and
cmps
jge
lods
adc
jle
dec
dec
and
pop
shl
(bad)
(bad)
(bad)
(bad)
cmp
jne
add
dec
fcomp
dec
aaa
gs
cwde
pop
adc
or
mov
dec
(bad)
(bad)
(bad)
call
test
fcomp
mov
add
or
js
loope
ret
dec
repz
repz
cld
(bad)
(bad)
jg
(bad)
lds
sub
mov
aas
push
loop
inc
bound
or
test
xchg
pop
cmp
ja
(bad)
call
dec
mov
push
and
pop
add
inc
bound
xor
inc
push
cwde
(bad)
mov
les
lds
sub
mov
mov
xchg
mov
jecxz
xor
cli
xchg
dec
test
inc
or
test
pop
scas
cmps
retf
rcr
aaa
mov
sbb
push
mov
(bad)
jo
std
fld
mov
(bad)
(bad)
(bad)
push
adc
int3
add
repz
or
sbb
cmp
icebp
fstp
pop
shr
dec
push
(bad)
sbb
pop
adc
mov
pop
enter
pop
pop
je
dec
(bad)
push
inc
mov
sub
(bad)
(bad)
(bad)
(bad)
call
pop
aad
mov
dec
fiadd
cli
jmp
sub
gs
push
icebp
push
xor
adc
xchg
mov
nop
(bad)
sub
fs
xor
jns
inc
add
fcmovb
out
xor
(bad)
(bad)
mov
dec
mov
cmc
cmp
or
mov
sbb
ss
(bad)
mov
inc
inc
mov
pop
out
loop
mov
pusha
rol
xor
sub
sub
les
jmp
cmp
jmp
retf
(bad)
(bad)
push
xor
cmps
test
dec
mov
lea
mov
das
icebp
inc
pop
(bad)
(bad)
(bad)
push
cmp
cs
ins
inc
adc
mov
rol
dec
call
mov
(bad)
(bad)
jmp
cdq
cmp
aad
and
stos
jp
out
jb
stos
dec
inc
sbb
aaa
mov
mov
dec
cli
or
shl
test
lock
(bad)
(bad)
(bad)
(bad)
fst
push
push
out
ins
into
lods
(bad)
icebp
dec
shl
xor
cmp
sub
jmp
cmp
(bad)
(bad)
(bad)
dec
xor
ret
push
(bad)
sbb
out
pop
dec
lock
int3
sub
jle
rol
xchg
jae
mov
sbb
sub
nop
sbb
ins
add
movs
lock
inc
lds
push
movs
arpl
out
(bad)
(bad)
call
sbb
fidivr
mov
cwde
(bad)
sub
loop
(bad)
xlat
gs
add
push
(bad)
jmp
sbb
and
mov
ret
dec
mov
stc
rol
sbb
cmp
mov
mov
jp
jnp
dec
mov
xchg
or
pop
retf
fdiv
jmp
stos
mov
mov
retf
loopne
jl
enter
hlt
(bad)
push
or
inc
xchg
scas
fucom
xor
sbb
in
mov
pop
xchg
ja
(bad)
fisttp
cpuid
movs
(bad)
ins
bound
push
sar
push
push
ss
jmp
or
or
je
pop
outs
xchg
adc
repz
pop
mov
(bad)
(bad)
(bad)
jmp
xchg
(bad)
pop
nop
mov
xor
push
jmp
mov
xchg
cmp
cmp
push
xlat
push
icebp
cs
in
scas
popf
sbb
dec
les
ds
sbb
iret
neg
fsub
test
or
fadd
mov
in
and
call
outs
add
sbb
sbb
daa
push
sbb
movs
or
jno
fs
leave
(bad)
(bad)
(bad)
push
inc
xchg
stos
jne
imul
jmp
loope
lock
adc
out
mov
mov
xchg
(bad)
(bad)
(bad)
mov
inc
lahf
cmps
shr
bnd
pop
stos
cmc
mov
mov
inc
retf
icebp
pop
or
cmp
push
sbb
inc
call
lea
shl
popa
iret
mov
dec
mov
add
push
mov
jb
pop
sti
sub
out
mov
cwde
jle
into
adc
mov
(bad)
(bad)
jg
dec
jbe
add
inc
xor
pusha
jecxz
fadd
jmp
scas
sbb
adc
(bad)
call
or
dec
mov
mov
mov
cmps
mov
xchg
out
jbe
in
jno
adc
mov
call
cmp
cwde
mov
aaa
lds
mov
xchg
ins
pop
lods
pushf
push
addr16
(bad)
(bad)
dec
cmps
add
adc
xor
adc
mov
mov
lods
(bad)
cld
leave
(bad)
(bad)
(bad)
dec
stos
cli
movs
and
aam
pop
adc
fisub
ret
call
(bad)
(bad)
(bad)
jmp
pop
or
inc
push
enter
(bad)
push
add
mov
data16
rcr
inc
fldcw
cmp
adc
scas
(bad)
(bad)
call
fwait
inc
ffreep
pop
test
cmps
outs
ins
or
sbb
dec
inc
jno
sbb
inc
cwde
xchg
(bad)
xchg
and
xchg
stc
jecxz
jns
in
in
(bad)
(bad)
(bad)
call
sub
and
sbb
fwait
leave
sub
inc
xchg
ins
pop
call
pop
jns
pop
add
pop
mov
sub
push
inc
push
(bad)
(bad)
(bad)
call
fldcw
call
retf
or
dec
repnz
ja
fwait
(bad)
mov
push
cli
into
in
push
fwait
inc
jno
adc
cmp
xchg
sub
(bad)
(bad)
(bad)
call
lods
jns
pop
data16
mov
daa
cmp
repnz
inc
enter
(bad)
cmp
fwait
dec
dec
(bad)
arpl
(bad)
(bad)
call
fwait
(bad)
stc
mov
pushf
mov
add
ins
in
lods
nop
mov
addr16
pop
(bad)
(bad)
(bad)
dec
push
pop
mov
leave
xchg
lods
cmc
mov
stc
jb
push
cmp
xchg
add
cmp
(bad)
(bad)
dec
xlat
ja
push
out
pusha
fwait
add
gs
stos
push
fnstsw
mov
sbb
(bad)
(bad)
inc
pushf
push
test
out
jmp
sub
outs
in
inc
std
inc
jnp
adc
adc
mov
pushf
sub
clc
jg
xor
cld
add
out
push
(bad)
(bad)
(bad)
inc
push
nop
sub
out
adc
or
xchg
pop
bound
stos
adc
mov
jmp
lock
mul
xor
push
dec
sub
clc
(bad)
dec
lods
sbb
cmp
inc
aad
imul
std
cli
loop
rol
adc
out
xchg
cmp
int3
dec
add
jge
fs
push
(bad)
jmp
mov
inc
jmp
scas
aas
popf
mov
movs
mov
pop
scas
daa
mov
xchg
(bad)
(bad)
inc
popa
pop
pop
push
call
mov
(bad)
and
pop
scas
pop
jnp
dec
inc
inc
sbb
(bad)
(bad)
(bad)
push
fwait
iret
jo
mov
sar
xor
cmp
dec
test
mov
je
xor
call
cld
xlat
jecxz
xchg
jp
mov
fld
call
addr16
sbb
(bad)
(bad)
mov
clc
or
cmp
xchg
fsub
mov
mov
dec
ret
js
(bad)
(bad)
jge
mov
stos
jno
cmp
bound
out
xchg
or
inc
sbb
(bad)
jmp
enter
and
inc
jl
cwde
and
push
adc
dec
out
imul
out
pop
or
adc
mov
(bad)
(bad)
dec
jnp
xchg
fxch
dec
cmp
movs
aad
adc
ret
jno
loope
jbe
imul
dec
das
shl
stos
push
cmps
cwde
mov
inc
cmps
ds
inc
jno
jmp
xor
(bad)
push
or
iret
mov
loope
dec
test
push
jae
and
(bad)
call
pop
leave
sbb
pop
mov
les
mul
inc
shr
(bad)
(bad)
(bad)
(bad)
jnp
push
(bad)
fcmovnbe
in
jecxz
popa
test
sbb
sub
fcmovnu
xor
lea
sbb
(bad)
(bad)
(bad)
mov
js
adc
lds
shl
push
and
(bad)
mov
in
mov
fs
(bad)
(bad)
fild
or
mov
xor
cmp
sub
(bad)
(bad)
(bad)
inc
clc
jge
arpl
adc
xchg
imul
xchg
stos
mov
pop
les
or
mov
mov
idiv
jmp
out
int3
outs
clc
jg
ja
lea
movs
mov
dec
(bad)
jnp
dec
idiv
dec
or
in
sub
and
mov
sbb
(bad)
jmp
dec
fstp
int
repz
dec
xor
scas
pop
ret
(bad)
push
cs
xor
int
or
push
sub
addr16
lea
sbb
(bad)
dec
xor
imul
mov
retf
xchg
(bad)
(bad)
inc
mul
gs
dec
or
dec
int
cmp
inc
xor
into
enter
pop
aam
xchg
repnz
xor
sub
sbb
pop
lock
in
(bad)
push
mov
pop
xchg
xchg
add
aad
push
(bad)
(bad)
jmp
pushf
pop
xchg
cmp
in
icebp
sahf
jnp
jg
bnd
mov
mov
sub
push
loop
call
jl
or
xchg
icebp
fcomp
pop
mov
(bad)
(bad)
(bad)
push
out
push
out
out
cmp
mov
(bad)
addr16
xchg
aaa
lods
jno
cdq
out
mov
xchg
xchg
or
cli
cli
push
xor
push
sbb
mov
mov
pusha
adc
jbe
scas
lods
sar
inc
call
sbb
push
in
repz
(bad)
(bad)
jmp
inc
mov
pop
fiadd
add
and
fstp
mov
mov
lods
inc
fild
pop
push
loop
in
das
cwde
in
stos
or
fnstsw
cmp
dec
add
add
(bad)
aad
mov
mov
mov
(bad)
(bad)
jmp
xchg
mov
mov
popa
jo
cmp
and
mov
(bad)
fisub
out
xor
(bad)
jmp
mov
cmp
adc
jle
in
cs
into
rcr
and
popf
lods
lea
(bad)
(bad)
jmp
mov
xlat
daa
push
ret
push
mov
out
cli
push
rcr
push
inc
movs
push
push
nop
dec
test
test
call
dec
mov
mov
iret
add
or
jns
xor
mov
(bad)
(bad)
call
dec
jmp
mov
enter
mov
int
(bad)
cld
pusha
mov
(bad)
(bad)
call
test
cmp
aam
inc
push
push
mov
retf
pop
mov
inc
inc
clc
in
(bad)
jmp
fist
out
mov
mov
add
ficom
je
adc
dec
lock
retf
(bad)
mov
xor
call
mov
(bad)
(bad)
(bad)
(bad)
(bad)
scas
jae
repnz
es
sub
mov
xlat
mov
push
mov
repnz
addr16
retf
sbb
inc
loope
push
mov
cmovp
aas
leave
mov
aaa
or
and
(bad)
(bad)
(bad)
out
push
fisubr
hlt
xchg
inc
paddb
outs
aaa
cmp
mov
ja
pop
scas
shl
cdq
or
inc
(bad)
(bad)
(bad)
(bad)
inc
mov
fwait
loopne
mov
dec
mov
mov
lods
lock
xor
or
inc
dec
je
pushf
push
xor
(bad)
(bad)
jmp
dec
iret
test
sub
push
lea
ss
lods
es
(bad)
(bad)
(bad)
(bad)
jl
leave
adc
mov
rol
mov
jp
adc
mov
(bad)
jl
mov
call
test
popa
ror
(bad)
in
clc
sub
mov
inc
and
(bad)
dec
icebp
out
push
lods
jbe
dec
mov
or
es
(bad)
(bad)
aas
xor
imul
push
mov
sbb
inc
and
mov
sub
xchg
mov
retf
mov
add
int
icebp
dec
sbb
movs
stos
pusha
inc
pop
mov
(bad)
inc
jae
lock
xchg
scas
inc
cmp
cmp
cli
jp
inc
add
xchg
hlt
pop
xor
(bad)
(bad)
inc
sahf
(bad)
push
test
pop
cs
cwde
call
lock
(bad)
inc
mov
hlt
sub
mov
cmp
add
mov
hlt
ror
bound
test
(bad)
(bad)
dec
dec
jns
inc
push
out
xlat
xor
cmp
aaa
sar
pop
xchg
lahf
jg
stc
inc
out
and
(bad)
inc
adc
cli
dec
add
out
xor
jmp
frstor
inc
add
(bad)
jmp
or
or
or
push
xor
and
mov
bound
inc
pop
movs
outs
dec
(bad)
(bad)
mov
push
test
cld
outs
push
adc
pop
fidivr
or
(bad)
(bad)
(bad)
inc
adc
dec
or
std
jecxz
push
leave
fwait
or
sbb
pop
mov
xchg
adc
js
aam
stos
xor
adc
(bad)
push
out
jmp
clc
pop
jb
cmp
pop
pushf
sbb
mov
aas
rcl
jo
(bad)
(bad)
(bad)
push
aaa
addr16
bound
add
cmps
enter
and
ins
lods
sub
fwait
mov
out
push
sbb
(bad)
dec
iret
mov
mov
push
dec
fst
es
rcr
ror
iret
dec
sbb
xor
movs
jecxz
cs
(bad)
jg
dec
sbb
mov
nop
fcomp
and
test
mov
ins
inc
inc
aaa
push
and
call
cmp
fdivr
push
sbb
(bad)
dec
xor
aas
lods
mov
inc
push
mov
stos
add
ffree
mov
mov
jb
(bad)
(bad)
(bad)
jmp
inc
and
mov
retf
pop
mov
stos
xor
call
scas
jmp
(bad)
inc
imul
xchg
test
sbb
jbe
push
cli
adc
fs
sub
ins
fldcw
sar
hlt
mov
test
fmul
push
push
inc
jmp
mov
cmps
(bad)
(bad)
(bad)
call
xchg
les
arpl
shr
mov
cmp
fmul
dec
out
cli
(bad)
(bad)
inc
imul
shl
inc
mov
in
pushf
fadd
sbb
xchg
mov
xchg
in
xor
(bad)
loopne
mov
xor
test
adc
(bad)
(bad)
jmp
cli
mov
jg
and
dec
inc
or
sub
push
jl
fwait
(bad)
mov
int
sar
(bad)
call
push
xchg
mov
xchg
lahf
push
addr16
adc
sbb
mov
sbb
jnp
enter
pop
pop
mov
stos
mov
(bad)
(bad)
inc
or
out
test
dec
enter
mov
pop
call
sub
pop
cmc
fadd
int
lock
pop
mov
arpl
scas
test
dec
mov
in
out
(bad)
(bad)
(bad)
jmp
mov
xchg
sbb
mov
push
add
call
cmp
mov
ret
(bad)
(bad)
push
sti
fwait
cmp
ss
mov
loopne
jae
lods
jecxz
loop
cld
js
(bad)
(bad)
jg
stc
test
cdq
jmp
mov
aaa
gs
inc
dec
xor
adc
ja
xchg
loope
(bad)
(bad)
inc
sbb
pop
lahf
sub
sbb
stos
cli
and
add
shl
(bad)
(bad)
(bad)
call
sub
mov
in
jne
jl
or
pop
hlt
sbb
xor
pusha
arpl
push
dec
movs
inc
push
imul
mov
or
cmp
(bad)
(bad)
mov
inc
pop
(bad)
cli
retf
enter
add
xor
icebp
stos
mov
fwait
(bad)
(bad)
(bad)
push
std
or
fistp
add
jnp
inc
pop
(bad)
jl
shl
call
inc
xlat
(bad)
(bad)
(bad)
cmp
or
test
add
clc
dec
lea
pop
xchg
(bad)
mov
(bad)
(bad)
jg
push
pop
outs
ss
pop
dec
stos
and
jnp
or
into
sub
mov
(bad)
(bad)
inc
cld
paddsw
leave
or
add
inc
sub
mov
mov
xchg
mov
dec
adc
repz
int
pop
jo
aas
pop
pop
cli
mov
(bad)
(bad)
call
or
sti
inc
mov
or
push
sub
jl
mov
mov
push
mov
cld
lds
mov
or
sbb
(bad)
(bad)
(bad)
(bad)
jp
loopne
lock
pushf
shl
sub
sub
ret
aas
adc
ja
iret
add
and
inc
(bad)
(bad)
(bad)
jmp
aas
cmps
loope
leave
aad
push
xor
rcl
jecxz
sbb
loop
cmc
jp
pop
cwde
test
out
loopne
daa
popf
xchg
xor
in
push
(bad)
fsubr
(bad)
in
in
das
inc
ret
or
xor
pop
sbb
fisttp
fsub
cs
push
push
push
mov
cmps
xchg
aad
mov
ins
mov
add
pop
mov
xor
mov
cld
jmp
sub
in
cdq
fs
scas
cmp
mov
sub
(bad)
push
rol
mov
xchg
out
cmp
or
in
xchg
and
inc
popf
clc
(bad)
(bad)
jmp
mov
daa
ret
or
test
or
call
(bad)
(bad)
jmp
fwait
rol
cld
loope
jb
jg
popf
ins
mov
leave
sahf
dec
(bad)
(bad)
(bad)
dec
mov
jb
ds
mov
inc
icebp
aad
mov
push
jle
(bad)
(bad)
jmp
or
jmp
inc
imul
sub
jnp
push
cmp
mov
cmp
call
jmp
pop
cmps
fdivr
jno
and
pop
cmp
push
mov
push
(bad)
push
stc
adc
lods
jbe
ret
sbb
jl
call
fcomip
(bad)
call
push
jle
jno
dec
push
cmp
push
push
sub
pop
(bad)
dec
add
mov
test
adc
xchg
pop
jge
mov
ins
outs
jmp
jmp
adc
pusha
ins
xchg
cli
and
sub
add
cmps
xchg
sub
push
movs
pop
lock
(bad)
(bad)
(bad)
jmp
mov
mov
lods
pop
add
js
sbb
xchg
and
xor
sub
jmp
gs
(bad)
(bad)
jmp
add
adc
inc
mov
mov
push
mov
dec
loop
(bad)
xlat
scas
(bad)
dec
inc
or
cmp
add
mov
add
scas
sub
ror
int
ins
mov
push
adc
loopne
(bad)
dec
mov
out
jg
ds
loopne
inc
sbb
xchg
ja
mov
mov
fisubr
outs
jge
push
ficom
cld
gs
or
js
out
jg
(bad)
(bad)
dec
aad
mov
mov
xchg
out
add
add
in
int3
jb
ins
pop
mov
stc
(bad)
call
rol
and
stos
(bad)
sub
call
cmps
add
(bad)
push
add
dec
cmp
fstp
sti
pop
ds
jmp
(bad)
xlat
(bad)
(bad)
push
pop
lea
aam
mov
in
fidivr
nop
cli
out
sbb
rol
(bad)
(bad)
(bad)
(bad)
jnp
mov
call
sbb
out
fld
jne
mov
mov
int3
lock
(bad)
inc
mov
pop
jnp
retf
dec
rcl
and
xlat
int
and
dec
ret
jmp
mov
retf
nop
ficom
xor
jl
mov
call
(bad)
(bad)
(bad)
jmp
cmp
xchg
neg
jl
sub
loope
imul
pop
sbb
pop
adc
(bad)
inc
ret
pop
pop
out
sbb
xchg
push
std
push
xchg
jl
push
mov
loope
call
mov
test
ret
mov
mov
mov
test
xor
(bad)
(bad)
(bad)
mov
scas
pop
out
daa
push
push
rol
xor
adc
cmps
jle
mov
mov
loopne
(bad)
out
scas
lock
mov
repnz
es
xor
aas
in
popf
jbe
xor
(bad)
(bad)
(bad)
cmp
add
sub
out
inc
sti
lods
lock
jmp
int
(bad)
(bad)
(bad)
inc
xor
imul
adc
sbb
cmp
push
cmp
mov
adc
add
cdq
aad
popf
pop
xchg
test
cmp
call
push
push
aaa
mov
fs
sub
adc
out
les
lods
cmc
cmp
(bad)
call
lods
fdivr
shl
dec
push
loop
scas
mov
add
mov
jb
les
enter
(bad)
jmp
inc
jp
jmp
dec
lahf
inc
mov
or
ins
mov
or
inc
shr
cli
xchg
aam
retf
inc
inc
cmp
fwait
cwde
fistp
in
rcl
rol
mov
mov
retf
xchg
js
(bad)
(bad)
(bad)
call
sbb
cld
inc
imul
sbb
fcomp
shr
loopne
mov
adc
out
bound
or
cmc
pop
out
mov
and
neg
hlt
in
jmp
je
add
or
xchg
test
cs
mov
iret
mov
mov
shl
int
jp
outs
sub
(bad)
(bad)
(bad)
call
xor
sub
sbb
in
nop
pop
test
xchg
cmp
dec
jg
fsubr
(bad)
cmp
xor
fdiv
hlt
ins
adc
std
jno
jb
fild
outs
mov
cld
ja
(bad)
ds
stc
cwde
mov
enter
leave
call
push
dec
sub
ss
les
cmp
jmp
hlt
sub
mov
call
push
mov
or
xchg
(bad)
fisttp
scas
sbb
std
(bad)
jmp
or
sbb
out
je
xchg
mov
ror
jg
push
or
in
(bad)
push
je
sub
out
(bad)
fstp
inc
fneni(8087
xor
inc
outs
jbe
js
ret
cli
dec
mov
or
call
cld
out
int3
or
and
inc
(bad)
jmp
cli
mov
pop
ss
jmp
ret
call
inc
ret
pop
xor
adc
scas
fist
xchg
leave
enter
mov
xchg
mov
fwait
jmp
call
ficomp
or
imul
outs
aad
es
pop
(bad)
(bad)
call
lods
pop
stos
mov
into
cmp
jb
or
mov
xchg
movntps
mov
inc
pop
mul
out
sub
xlat
or
outs
loopne
jecxz
adc
jp
imul
call
jle
leave
adc
cmc
jp
add
cmps
fcmovbe
push
pop
jo
les
loop
loop
jmp
mov
fiadd
(bad)
(bad)
(bad)
mov
add
lock
mov
adc
dec
test
scas
neg
aam
cli
(bad)
call
lods
push
and
xor
add
add
shl
jecxz
push
std
push
daa
adc
je
in
cwde
out
rcr
pop
adc
pop
mov
mov
repz
(bad)
leave
bound
repnz
add
pushf
fld
(bad)
(bad)
(bad)
push
dec
sahf
mov
fcomp
and
rol
and
cmps
repz
jmp
retf
enter
jmp
pop
fidiv
test
lea
(bad)
dec
push
hlt
stos
int
and
mov
cmp
(bad)
(bad)
call
xor
int3
and
xchg
sbb
xor
retf
loope
jecxz
es
stos
xor
adc
ins
inc
mov
(bad)
call
mov
ins
nop
(bad)
in
pop
cmp
pop
out
repz
in
sbb
(bad)
(bad)
mov
aam
xor
push
cmps
push
pop
popa
lahf
pop
out
mov
fs
(bad)
(bad)
dec
outs
outs
dec
inc
mov
stc
icebp
push
int3
xor
ins
cmp
mov
loopne
sahf
call
push
xchg
jmp
push
mov
sbb
fiadd
adc
(bad)
inc
and
stos
add
retf
inc
inc
popf
sub
add
push
fldenv
adc
add
(bad)
(bad)
(bad)
jmp
sar
out
add
xor
inc
dec
pop
xchg
fs
xchg
pop
test
aaa
sub
jg
jmp
sub
cdq
jae
(bad)
shufps
pop
scas
dec
(bad)
(bad)
(bad)
jmp
xchg
mov
arpl
mov
das
movs
inc
add
sbb
sahf
jg
mov
add
fcomp
(bad)
lods
cld
pop
(bad)
das
cmp
(bad)
(bad)
(bad)
jmp
test
and
xor
cmps
out
adc
(bad)
mov
jmp
or
ret
mov
dec
jle
pop
or
mov
aas
jmp
xlat
push
outs
daa
in
mov
aaa
mov
mov
in
sub
scas
jp
mov
retf
lock
imul
(bad)
fdivr
and
dec
mov
jns
(bad)
adc
test
push
out
dec
inc
inc
bts
jle
cmc
push
lahf
inc
and
inc
popa
and
cwde
mov
movs
pop
mov
scas
js
outs
dec
cmp
mov
jb
(bad)
mov
sub
jg
ret
ror
jmp
out
jg
mov
push
fidivr
pmulhuw
or
(bad)
(bad)
jmp
shr
mov
adc
call
pop
(bad)
sub
outs
jp
in
ins
cmp
lock
(bad)
(bad)
(bad)
jle
in
int
cmc
(bad)
test
and
add
aaa
push
das
sub
lahf
push
(bad)
(bad)
(bad)
dec
out
iret
fld
sub
jmp
pop
push
mov
call
(bad)
(bad)
jmp
jp
out
pop
ret
and
pop
ins
imul
aad
loop
mov
xor
(bad)
(bad)
(bad)
mov
mov
add
jne
push
add
inc
jmp
je
cmps
or
cld
(bad)
jmp
xor
mov
dec
lea
(bad)
push
int3
jle
fwait
sub
adc
mov
and
or
(bad)
(bad)
cmp
push
inc
xor
mov
data16
and
in
mov
(bad)
call
imul
sub
cmp
popf
jno
test
bound
sub
xchg
pop
pop
mov
call
daa
mov
scas
enter
inc
pop
das
add
ror
mov
jl
fsubr
dec
ins
les
loop
das
xchg
sbb
pushf
and
cmc
shr
(bad)
(bad)
(bad)
call
inc
lods
jo
xor
movs
sbb
sub
mov
jmp
(bad)
jg
xchg
mov
dec
ins
rol
pusha
clc
push
rcr
fwait
mov
or
(bad)
jmp
jge
or
adc
fistp
xor
sti
lods
aaa
xchg
div
jo
adc
adc
mov
lods
dec
mul
in
or
(bad)
(bad)
(bad)
(bad)
jmp
popa
out
mov
ja
or
adc
mov
sub
js
sub
pop
add
sahf
dec
ror
dec
mov
hlt
add
inc
jmp
cmp
cli
test
lock
loopne
jg
push
test
std
xchg
pop
fisubr
push
sar
call
pop
int
lods
mov
xchg
movs
pusha
pop
loopne
mov
pop
fdivr
(bad)
call
dec
aad
adc
test
cli
sar
rol
cdq
jmp
(bad)
(bad)
(bad)
push
sbb
es
xor
aad
and
stos
xchg
add
hlt
pop
jl
loopne
sbb
rcl
push
sbb
ins
mov
fistp
mov
sahf
or
adc
les
cmp
es
(bad)
jmp
pop
or
stc
pushf
sar
les
aas
int
(bad)
mov
add
inc
dec
xlat
(bad)
lods
shl
imul
das
stos
fiadd
fnsave
sbb
loopne
in
out
mov
aaa
sub
xlat
rol
inc
push
(bad)
pushf
cmps
xor
loop
gs
push
movs
adc
pop
jg
gs
jns
(bad)
(bad)
(bad)
mov
(bad)
push
aad
pop
cwde
fnstcw
cmps
test
popa
inc
test
lods
mov
(bad)
(bad)
dec
push
xor
(bad)
sub
fwait
stos
cmp
mov
push
outs
test
jne
shl
sbb
clc
(bad)
(bad)
(bad)
call
ficomp
sub
mov
(bad)
(bad)
int
(bad)
sub
jle
mov
fnsave
call
xchg
xor
mov
sub
xor
jns
add
inc
cmps
aad
int3
mov
jbe
rcl
out
and
inc
retf
js
jp
add
mov
lock
sub
(bad)
test
pushf
sti
loope
adc
and
jmp
mul
push
fisub
ss
pop
and
scas
ret
(bad)
jmp
jns
jg
inc
mov
sub
bound
ret
and
jne
cmps
(bad)
(bad)
(bad)
call
xchg
jne
and
inc
cmp
mov
mov
xor
sub
pop
inc
not
(bad)
pop
hlt
outs
sbb
arpl
or
or
aaa
int
sti
inc
(bad)
jg
sub
lea
loopne
jmp
das
imul
(bad)
(bad)
(bad)
dec
xor
ficom
sub
push
push
jp
sbb
xor
(bad)
jmp
cmp
movs
out
daa
(bad)
in
mov
movs
int
dec
cmp
sub
xchg
lock
sub
or
mov
fdivr
(bad)
call
sbb
dec
scas
cmp
nop
jl
out
jmp
push
cwde
xlat
mov
mov
push
xchg
jl
adc
add
add
sti
ror
ret
inc
clc
(bad)
push
shl
or
dec
dec
cmp
adc
mov
mov
mov
sub
adc
leave
push
push
mov
xlat
stc
or
sbb
fisttp
ret
dec
sub
(bad)
(bad)
(bad)
jmp
popf
rcr
adc
cmp
jmp
repz
in
aaa
jge
(bad)
fwait
xchg
(bad)
(bad)
(bad)
(bad)
jg
in
cmp
loopne
adc
fimul
or
cmp
bound
fiadd
add
push
sub
mov
adc
inc
aaa
xchg
cwde
cld
xchg
dec
or
fs
(bad)
(bad)
call
in
cmp
push
movs
dec
xchg
cmp
sbb
aam
cmp
xchg
lds
mov
mov
(bad)
dec
(bad)
sar
adc
sbb
mov
mov
into
sti
das
mov
imul
test
dec
sbb
(bad)
(bad)
(bad)
call
inc
cmp
pushf
cmp
adc
fst
or
rcr
push
or
cmp
popa
inc
mov
mov
mov
std
jl
add
lock
(bad)
(bad)
(bad)
jmp
push
sbb
add
sub
ret
sbb
mov
push
jmp
jmp
push
jg
loop
in
aas
lods
push
in
outs
sbb
xchg
icebp
jmp
sub
jg
dec
push
adc
imul
xchg
aas
cmps
jle
(bad)
(bad)
(bad)
push
inc
or
sti
fwait
mov
adc
adc
mov
pop
hlt
jne
jb
xor
cmp
(bad)
mov
pop
out
push
xor
jmp
out
sub
aam
aam
mov
or
adc
push
inc
ret
add
imul
fwait
mov
idiv
jnp
cwde
lahf
fiadd
lods
repz
dec
rol
icebp
dec
dec
ins
rol
or
test
adc
or
int3
(bad)
call
fdiv
push
push
pop
push
and
or
loope
dec
test
mov
xchg
lahf
(bad)
lock
(bad)
(bad)
fbld
push
popf
pop
je
sub
js
fbstp
icebp
je
shl
dec
sub
(bad)
(bad)
dec
not
mov
ja
aas
outs
out
sbb
mov
mov
jnp
xor
inc
fstp
lahf
dec
call
mov
rcl
mov
sub
(bad)
(bad)
jmp
pop
aam
fadd
jecxz
mov
sbb
stc
inc
into
xchg
push
adc
or
dec
icebp
lock
repnz
clc
mov
xchg
inc
pop
cmp
pop
xor
add
(bad)
jg
call
das
jg
in
push
inc
cmc
or
jge
adc
in
pusha
jne
out
(bad)
(bad)
(bad)
call
aaa
(bad)
inc
pop
inc
push
enter
and
aad
sahf
push
into
bnd
pop
or
iret
adc
(bad)
(bad)
(bad)
jmp
pop
gs
clc
pop
imul
dec
rol
aas
cli
xchg
aas
inc
mov
(bad)
(bad)
(bad)
inc
cmp
js
aad
ret
fwait
adc
cmp
mov
int3
rcl
jno
mov
(bad)
(bad)
(bad)
call
pop
dec
retf
adc
cmp
imul
mov
fsubr
jg
in
xchg
cmp
(bad)
jmp
lods
jge
mov
mov
mov
sub
outs
push
aaa
stos
add
jle
xor
and
js
ja
loop
(bad)
(bad)
(bad)
jmp
pop
mov
sbb
mov
cmp
xchg
xchg
xchg
jno
in
jle
push
push
popf
data16
(bad)
(bad)
jmp
loope
pop
mov
mov
xchg
jns
mov
std
stos
inc
repz
jle
les
sar
movs
lods
lds
int3
push
(bad)
cmp
pop
rcr
xchg
jg
cmp
mov
jge
sub
jo
and
mov
xor
gs
pop
test
jl
in
(bad)
jg
pop
mov
sbb
and
mov
cdq
int3
mov
add
jmp
mov
cld
in
ins
dec
xchg
(bad)
or
std
neg
or
stos
inc
jo
sub
pushf
(bad)
(bad)
(bad)
jg
jnp
cld
or
out
je
stos
sub
and
movs
mov
sbb
rol
pop
out
imul
rcr
(bad)
inc
cmps
mov
outs
push
add
fs
sub
(bad)
std
addr16
cli
jns
jae
loop
fwait
repnz
test
xchg
xchg
je
add
jmp
scas
and
(bad)
jmp
adc
iret
cmp
(bad)
mov
pop
mov
lods
adc
inc
push
or
fnstenv
sbb
inc
sbb
(bad)
fdivp
mov
adc
(bad)
(bad)
(bad)
push
mov
scas
retf
test
and
inc
movs
rcr
fmul
aas
mov
dec
inc
test
mov
sar
cmc
les
jp
xchg
pop
popf
ss
cli
cmp
push
inc
std
(bad)
(bad)
cli
bound
push
in
inc
fnstsw
xor
stos
cli
lods
cmp
(bad)
jg
add
aas
and
and
daa
leave
(bad)
(bad)
(bad)
fbstp
push
outs
jbe
sbb
xor
out
shl
push
mov
pop
add
adc
push
test
imul
lahf
pusha
repz
push
call
mov
push
arpl
cli
(bad)
mov
test
xchg
fld
sbb
or
(bad)
jmp
js
fs
movs
call
je
inc
xchg
add
mov
jp
gs
mov
adc
(bad)
(bad)
jmp
mov
mul
fdiv
mov
xor
jl
das
idiv
mov
lahf
and
(bad)
(bad)
dec
call
repnz
sbb
sub
addr16
aaa
inc
pop
fld
dec
out
sar
(bad)
fcomip
(bad)
cmp
call
sbb
jno
or
pop
mov
test
cld
ja
imul
mov
hlt
je
push
push
xor
xchg
clc
mov
data16
ins
add
(bad)
(bad)
(bad)
dec
inc
jne
shl
xor
int3
adc
mov
ret
outs
pop
push
int
(bad)
jg
(bad)
mov
xor
lods
clc
(bad)
mov
and
arpl
dec
(bad)
(bad)
(bad)
push
ins
xchg
adc
popa
sti
shl
jno
jmp
cmp
xor
adc
mov
arpl
loope
mov
jg
scas
ja
sbb
mov
ffree
mov
cmp
movs
cmp
cmp
push
adc
add
inc
or
add
inc
(bad)
inc
push
cs
sbb
inc
xor
sub
shr
in
fisttp
cmp
inc
dec
xchg
cmp
jge
hlt
push
fcom
(bad)
(bad)
(bad)
mov
dec
leave
scas
mov
inc
ficomp
xchg
ins
repz
mul
inc
loope
cmp
(bad)
(bad)
dec
sub
xchg
and
(bad)
ror
bound
sub
aas
add
das
xchg
outs
outs
rcl
ins
add
(bad)
(bad)
(bad)
jge
pop
jns
mov
loope
pusha
and
(bad)
xchg
add
mov
cli
xchg
(bad)
(bad)
jmp
out
lods
xor
jb
push
add
xchg
cmp
jnp
and
je
sar
or
in
imul
or
push
cmp
(bad)
dec
pop
xor
add
or
inc
pop
xchg
int3
aad
sub
xchg
daa
add
pop
mov
fsub
pop
push
jmp
mov
outs
cmc
hlt
out
xchg
aas
(bad)
(bad)
(bad)
jmp
js
into
mov
mov
fcmovu
xlat
in
leave
movs
or
dec
mov
pop
(bad)
(bad)
jmp
(bad)
mov
outs
jo
popf
push
xchg
cmp
xor
mov
jmp
jle
cli
nop
push
lahf
or
test
add
or
jl
dec
add
test
call
clc
cmc
ret
xor
lock
test
mov
aam
sahf
pop
cmc
jmp
fisubr
aas
xor
cwde
(bad)
(bad)
jnp
ds
sub
sbb
(bad)
(bad)
push
sub
inc
mov
not
sbb
test
and
sti
jmp
std
(bad)
(bad)
mov
dec
stc
iret
mov
add
inc
mov
xchg
bound
call
test
sub
jb
aad
sub
aam
sahf
das
lock
inc
cmp
lea
jmp
cdq
(bad)
cli
xchg
add
xor
ins
xchg
pop
inc
push
mov
mov
loop
test
(bad)
(bad)
(bad)
call
bound
movs
ret
push
add
imul
cld
push
mov
(bad)
(bad)
dec
dec
add
push
aas
add
jnp
test
jl
mov
call
fsub
scas
jno
out
jmp
sub
pusha
mov
popf
pop
lock
(bad)
(bad)
jmp
jge
sbb
fisub
push
jmp
clc
enter
std
les
dec
sub
leave
add
add
or
sub
cmps
rcr
(bad)
call
sbb
cmps
push
add
rcl
retf
pushf
push
mov
sbb
push
(bad)
(bad)
(bad)
call
div
push
xor
sub
iret
mov
xor
mov
xor
cdq
sbb
call
push
(bad)
in
or
fs
adc
push
enter
test
cmp
ret
push
cld
popf
das
pop
inc
cwde
push
push
adc
out
adc
mov
xor
(bad)
push
inc
cmp
fcomip
das
push
test
dec
add
and
mov
cmp
pop
jecxz
jmp
(bad)
dec
in
enter
cwde
shr
scas
bound
gs
fisttp
mov
mov
ins
repnz
loop
mov
scas
or
ror
sahf
xor
push
rol
stos
jle
imul
cmp
call
push
xchg
cmp
jb
dec
mov
std
jb
push
cmps
ret
add
push
fimul
(bad)
(bad)
jmp
mov
outs
stc
clc
jae
leave
cmp
into
lea
clc
(bad)
dec
not
xchg
xor
push
jl
fwait
jl
int3
sub
lahf
fwait
cmps
das
mov
jb
(bad)
(bad)
(bad)
jmp
bound
fisub
ret
or
lahf
iret
addr16
push
inc
mov
fild
push
mov
outs
cli
mov
cmp
xor
push
das
stos
in
ret
lock
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
cmp
mov
or
add
push
arpl
(bad)
pop
jmp
fadd
push
xor
jb
int
mov
out
nop
jae
out
call
push
aaa
cmp
mov
(bad)
jg
ret
lods
mov
fstp
pop
stos
sbb
sub
ds
(bad)
call
cli
sbb
mov
ja
daa
gs
jo
(bad)
(bad)
mov
loopne
pushf
leave
sbb
stc
fild
push
jo
and
mov
or
cwde
movs
cli
das
adc
xor
or
daa
bound
mov
mov
(bad)
mov
jp
sbb
ja
arpl
add
es
enter
out
call
popf
fwait
pusha
in
sti
push
sbb
popa
cmp
xlat
sbb
cmps
fisttp
inc
cmp
(bad)
(bad)
jmp
stc
cmp
sub
sub
adc
neg
push
jbe
shl
data16
int3
arpl
inc
xor
jge
sar
(bad)
dec
mov
ins
cld
inc
loopne
popf
cmp
sub
fwait
jle
inc
lods
or
(bad)
(bad)
(bad)
jmp
aaa
pusha
ja
and
pop
lahf
inc
stc
cmc
imul
ins
push
fcomp
icebp
mov
dec
mov
in
(bad)
(bad)
(bad)
(bad)
call
pop
mov
mov
cmp
cld
enter
(bad)
rol
mov
jmp
(bad)
push
fmul
dec
(bad)
ret
adc
xchg
nop
mov
(bad)
(bad)
call
pop
rcl
jae
mov
iret
pushf
xor
push
xchg
and
cmp
js
jle
es
(bad)
jmp
ficomp
or
ret
jb
mov
mov
xor
dec
dec
adc
(bad)
xchg
push
jecxz
and
icebp
and
xchg
pop
test
fsub
test
adc
(bad)
(bad)
adc
adc
pop
and
dec
cdq
ins
jmp
aaa
add
out
mov
cli
mov
(bad)
inc
mov
mov
jl
imul
call
xlat
mov
sub
daa
(bad)
(bad)
(bad)
(bad)
jge
ds
mov
dec
push
loope
imul
ret
int
and
sbb
add
inc
jbe
imul
imul
add
(bad)
(bad)
(bad)
mov
jle
ret
pop
ret
xlat
outs
daa
cwde
and
cmp
xchg
aas
cmp
jae
or
(bad)
inc
(bad)
(bad)
push
mov
push
into
fdiv
arpl
xchg
adc
and
cmp
(bad)
(bad)
dec
jl
dec
sub
cmp
mov
fisubr
shl
xchg
cmp
push
mov
clc
addr16
(bad)
push
xor
scas
jae
and
addr16
jmp
and
push
addr16
out
mov
call
xacquire
fcomip
sub
jbe
sbb
jle
push
xor
cmp
sub
push
inc
mov
(bad)
(bad)
jns
inc
fcomp
mov
mov
iret
mov
add
enter
(bad)
call
pop
pop
jne
and
jb
pop
out
push
mov
int
test
cld
(bad)
jmp
dec
fdivr
push
xlat
test
sbb
sub
jg
rcl
add
xor
mov
(bad)
icebp
pop
fld
(bad)
(bad)
in
add
or
inc
jns
gs
jg
inc
(bad)
(bad)
push
pop
mov
mov
adc
xor
pop
mov
xchg
inc
or
fdivr
(bad)
(bad)
inc
or
xchg
mov
jg
and
pop
jbe
sub
retf
add
mov
sub
(bad)
call
fbstp
out
cmp
jecxz
cli
sbb
shr
or
adc
faddp
int3
cmp
das
add
mov
xchg
(bad)
dec
loopne
or
pop
sub
pop
xchg
cmc
aam
mov
dec
sbb
imul
adc
mov
cld
(bad)
jmp
aam
cmp
imul
(bad)
pop
inc
adc
adc
neg
inc
jg
jb
(bad)
call
and
sub
xor
ret
in
out
ins
push
cmps
aaa
(bad)
(bad)
(bad)
inc
outs
int3
enter
xor
stc
retf
jno
push
loop
in
pop
jp
sub
icebp
cli
mov
jmp
movs
popa
fidivr
outs
ret
sar
inc
fidiv
(bad)
(bad)
dec
sub
dec
mov
test
(bad)
dec
iret
ror
(bad)
(bad)
(bad)
jg
repz
dec
add
pop
(bad)
add
in
mov
or
mov
jl
cmp
std
(bad)
out
(bad)
(bad)
(bad)
jmp
addr16
stos
clc
mov
lods
lea
pop
fs
hlt
inc
add
sub
frstor
cmps
hlt
sub
or
daa
cmp
fs
mov
call
inc
shl
(bad)
cmp
pushf
pavgb
(bad)
xchg
test
push
or
xchg
dec
and
std
dec
cld
(bad)
(bad)
in
ret
loope
jmp
in
adc
inc
sub
fisttp
(bad)
(bad)
jg
jbe
mov
lea
into
pop
jb
and
icebp
les
mov
jmp
cld
rcl
cmp
retf
push
inc
ffreep
mul
mov
icebp
mov
pop
ja
mov
fidiv
enter
xor
into
sbb
(bad)
(bad)
(bad)
call
or
retf
mov
inc
jecxz
out
dec
int
cmc
jg
inc
sub
sbb
(bad)
(bad)
(bad)
call
into
inc
jg
nop
sbb
mov
repnz
xor
in
popf
sub
xor
scas
mov
fdivr
jmp
lds
lea
mov
repnz
call
xchg
mov
in
push
xchg
sbb
or
sbb
inc
xchg
aaa
or
inc
push
pop
mov
rcl
cs
jl
outs
xchg
mov
jmp
test
fwait
ror
adc
(bad)
(bad)
jg
and
call
(bad)
mov
popa
fld
icebp
mov
into
push
adc
bound
(bad)
(bad)
(bad)
inc
add
mov
sub
xchg
dec
test
lods
hlt
(bad)
(bad)
jmp
enter
sub
aaa
xchg
pop
xor
jg
popa
sbb
or
mov
(bad)
(bad)
fucomip
popa
out
mov
mov
cmp
(bad)
mov
call
shr
xchg
sbb
jns
(bad)
(bad)
(bad)
dec
jecxz
scas
cmp
call
cmp
xchg
sbb
mov
xor
neg
sub
(bad)
xchg
call
(bad)
(bad)
push
(bad)
push
adc
cmp
add
mov
retf
lahf
fcomi
adc
dec
(bad)
(bad)
(bad)
(bad)
mov
rcr
xchg
arpl
xor
pop
mov
lock
stos
pop
pop
inc
pop
push
cmp
popf
adc
(bad)
push
mov
ret
ins
mov
not
sub
inc
(bad)
(bad)
inc
out
fcomp
add
sti
mov
imul
push
sub
sar
(bad)
lock
inc
arpl
pop
fisubr
push
(bad)
(bad)
(bad)
(bad)
ds
sub
push
out
inc
pop
adc
jge
cmps
push
mov
(bad)
mov
and
rcl
inc
inc
adc
inc
iret
cli
retf
jg
xchg
stc
sar
(bad)
(bad)
(bad)
das
and
outs
ret
and
mov
gs
(bad)
mov
sar
cs
dec
cmc
movs
and
xor
adc
cmp
push
in
push
adc
in
bound
(bad)
and
and
pop
sub
test
(bad)
push
jae
and
mov
test
pop
jbe
pop
outs
inc
sub
sbb
xchg
in
jp
push
mov
ds
cs
(bad)
(bad)
mov
je
mov
adc
rol
pop
test
out
test
push
pop
stos
(bad)
out
xchg
mov
sbb
pop
sub
jmp
pop
inc
stos
mul
sbb
movs
add
mov
(bad)
jmp
push
mov
pusha
or
mov
psubb
dec
push
pop
push
or
retf
(bad)
(bad)
(bad)
jmp
stc
rcr
inc
pop
fistp
jmp
pop
xor
sub
stos
jmp
call
jmp
test
fnstcw
push
dec
xchg
mov
mov
jbe
add
push
icebp
(bad)
dec
outs
ins
mov
js
test
sbb
lods
fs
(bad)
jmp
(bad)
(bad)
call
mov
call
call
jmp
(bad)
(bad)
call
div
repz
inc
add
into
jno
popa
xchg
push
mov
mov
mov
mov
pop
push
call
in
sub
movs
pop
repnz
cmps
sar
(bad)
(bad)
jmp
sbb
ss
js
(bad)
sahf
pop
test
fbstp
mov
and
adc
mov
fcmovb
sti
(bad)
(bad)
(bad)
dec
mov
in
lock
das
sbb
sub
dec
push
sbb
adc
mov
mov
jno
sbb
mov
inc
scas
(bad)
jns
pop
(bad)
mov
add
(bad)
call
mov
xchg
ror
dec
popa
add
mov
(bad)
mov
out
(bad)
ins
jmp
loopne
(bad)
jmp
inc
xor
push
jae
dec
xor
mov
dec
inc
sbb
xor
sbb
ss
icebp
fs
rol
mov
push
lock
(bad)
jmp
je
and
jo
loope
sahf
mov
(bad)
xchg
pop
lock
jg
out
(bad)
(bad)
(bad)
(bad)
push
int
rol
adc
pop
ss
outs
jp
or
jle
pop
mov
out
movs
mov
xor
jp
add
rcl
jmp
pop
fisub
jne
adc
push
add
xor
add
std
(bad)
inc
xchg
cs
in
mov
aas
shl
outs
icebp
imul
inc
repz
mov
cmps
fwait
stc
jp
inc
repnz
(bad)
(bad)
jmp
adc
test
push
sub
or
xchg
inc
add
sbb
fiadd
fdivr
lock
lds
(bad)
(bad)
dec
pop
sub
fwait
pushf
ret
sahf
dec
inc
test
loopne
xchg
xor
push
adc
clc
(bad)
(bad)
call
mov
ds
xlat
icebp
icebp
imul
jge
jo
cs
lods
ja
ja
pop
rep
fisttp
mov
dec
call
cli
(bad)
call
lods
mov
sbb
cdq
mov
(bad)
inc
mov
sti
mov
jecxz
adc
(bad)
popa
dec
push
sahf
mov
int
(bad)
(bad)
call
jae
adc
jbe
mov
mov
aam
shl
ret
dec
sbb
pop
js
mov
xchg
aaa
xor
xchg
fdivr
pop
mov
scas
adc
(bad)
(bad)
(bad)
aas
shr
in
fisub
dec
je
inc
sti
call
jnp
fiadd
jmp
jns
push
test
xor
mov
inc
sub
icebp
ds
scas
(bad)
(bad)
(bad)
push
jnp
sub
xlat
fmul
stc
and
jne
(bad)
cmps
imul
cmps
xchg
std
cmps
mov
jmp
push
test
fs
ss
out
add
(bad)
(bad)
call
mov
out
cs
xor
test
mov
jle
scas
cwde
cmp
call
loopne
call
in
xor
les
add
jbe
pop
sahf
pop
pop
clc
(bad)
(bad)
call
add
lods
jno
sub
call
adc
mov
pop
test
mov
and
mov
aam
pop
dec
mov
or
dec
(bad)
ffreep
inc
cli
mov
dec
stos
sub
cmp
jmp
ret
cmp
add
add
push
arpl
pop
jmp
or
pusha
and
mov
sti
jp
aad
cmp
xlat
jle
call
hlt
push
sar
mov
dec
mov
jmp
(bad)
fldcw
pop
(bad)
das
jmp
(bad)
(bad)
fucomi
mov
call
stc
mov
add
test
arpl
(bad)
call
sbb
xchg
rol
sahf
xchg
add
xchg
ret
into
mov
(bad)
jmp
outs
into
imul
mov
xor
sbb
mov
xchg
mov
cli
(bad)
ds
leave
int
or
cmc
jp
pushf
icebp
clc
ins
nop
mov
aad
jne
nop
in
outs
ja
(bad)
(bad)
call
or
dec
dec
jb
test
enter
in
shl
or
mov
add
icebp
push
shl
pop
mov
(bad)
movs
sub
xor
das
pop
lock
cmp
cmp
stc
fsub
jge
mov
mov
(bad)
inc
int3
xlat
mov
psrlq
push
xchg
mov
mov
jne
inc
mov
add
and
lods
sbb
pop
inc
mov
jge
sub
(bad)
(bad)
(bad)
cmp
sbb
push
ja
sbb
ja
cmps
sub
out
cmps
xchg
scas
test
(bad)
(bad)
inc
stos
push
dec
jmp
test
sub
stos
ret
cmp
fcomp
mov
(bad)
(bad)
(bad)
inc
pop
les
jno
test
outs
mov
and
or
jg
push
icebp
jmp
(bad)
(bad)
mov
add
loope
jnp
pop
pop
mov
jg
mov
adc
cld
sbb
(bad)
ins
pop
test
dec
push
xchg
add
mov
xor
lea
(bad)
(bad)
(bad)
call
fcomp
sar
or
push
inc
cmps
lea
pop
ror
push
push
or
(bad)
cmp
(bad)
jmp
or
loope
repnz
cmp
test
sbb
mov
push
fldcw
adc
pop
push
jg
mov
cli
dec
aad
jo
das
cli
(bad)
mov
xchg
xchg
je
sub
repnz
or
mov
ficom
pop
imul
ja
call
fnstenv
xor
test
push
jne
sbb
(bad)
(bad)
(bad)
ds
push
in
jl
cmp
jb
xor
scas
pop
mov
cmp
(bad)
(bad)
(bad)
jmp
popa
std
mov
in
les
jmp
xor
lds
aad
shr
pop
stc
rol
(bad)
jg
inc
popa
aam
mov
fnstcw
movs
xlat
stc
loope
into
scas
jl
and
fcmovnbe
test
or
inc
and
mov
icebp
and
(bad)
mov
cmp
(bad)
(bad)
dec
retf
fild
xor
std
js
(bad)
icebp
out
mov
mov
dec
out
(bad)
(bad)
(bad)
push
push
outs
mov
cmp
sbb
aaa
lds
cmp
mov
mov
hlt
(bad)
(bad)
jmp
mov
jle
jbe
ins
shr
push
xchg
and
or
add
clc
add
mov
ja
pop
or
hlt
(bad)
call
mov
cmp
aam
dec
stc
jae
adc
dec
fcom
mov
push
mov
(bad)
(bad)
(bad)
cmp
aam
and
xchg
jne
fdiv
ret
shl
jg
(bad)
call
jae
sti
call
jbe
int
nop
mov
mov
cmps
push
or
call
pop
fcmovu
outs
inc
fdiv
pcmpeqd
push
stos
mov
xor
push
pop
pop
add
(bad)
or
inc
frstor
aad
or
daa
sbb
(bad)
(bad)
call
sub
push
js
std
push
daa
mov
in
adc
inc
iret
fld
fcomip
jmp
in
sub
test
inc
loopne
add
nop
lea
lds
lds
pop
xor
gs
push
clc
data16
neg
jecxz
dec
clc
jb
test
stos
(bad)
(bad)
call
inc
jno
retf
(bad)
cwde
ret
fidiv
mov
mov
sub
jne
fwait
push
movs
in
pushf
cs
(bad)
(bad)
(bad)
mov
les
xchg
rcl
xchg
mov
push
shl
pop
push
aas
jle
(bad)
(bad)
(bad)
jmp
pop
es
into
add
cs
sbb
adc
lods
jmp
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
sub
in
mov
pop
add
mov
jbe
push
out
test
(bad)
jmp
jmp
dec
mov
inc
ins
push
out
ds
das
(bad)
(bad)
inc
ret
sbb
fst
and
movs
mov
push
mov
or
or
(bad)
push
mov
mov
ss
mov
das
adc
push
mov
clc
mov
mov
shl
repz
and
in
les
lea
in
dec
xor
pushf
sbb
das
sar
in
enter
gs
jle
(bad)
fsubr
lahf
push
cmps
fcos
(bad)
(bad)
jmp
scas
test
arpl
dec
lods
jns
loope
pop
xor
pop
outs
call
fmul
(bad)
(bad)
inc
xchg
jb
sub
int3
and
push
cli
adc
lock
cs
(bad)
jmp
mov
mov
xchg
sbb
pop
jns
pop
icebp
mov
fidivr
das
cld
fwait
or
scas
adc
(bad)
(bad)
push
test
inc
addr16
das
call
stc
pop
dec
das
rcl
int
push
xchg
and
(bad)
pop
icebp
(bad)
dec
movs
fs
xor
jg
add
cmp
adc
imul
push
retf
and
rol
repz
icebp
(bad)
(bad)
jmp
add
jmp
stc
lods
sub
dec
mov
mov
fisttp
mov
cmp
in
outs
inc
cmp
jne
es
inc
mov
push
lods
sbb
(bad)
(bad)
call
pop
push
push
in
aas
xchg
and
mov
jnp
stos
rcl
jge
xchg
push
mov
mov
(bad)
(bad)
(bad)
push
ret
das
and
fldenv
mov
mov
idiv
inc
xlat
mov
aam
cmp
xor
cmp
fs
xlat
xor
inc
push
inc
stc
loop
mov
xchg
lock
cmps
push
cmp
jle
shl
addr16
(bad)
(bad)
dec
pop
popa
xor
mov
(bad)
std
push
mov
or
jl
scas
mov
(bad)
(bad)
(bad)
call
xchg
loope
popf
mov
mov
xchg
cmp
mov
(bad)
inc
ds
push
mov
int3
mov
call
call
call
mov
lds
add
sar
(bad)
mov
test
pop
sub
into
shl
mov
push
or
(bad)
(bad)
jmp
sub
push
jbe
neg
loope
sbb
sar
or
dec
lahf
outs
cmp
pop
pop
rcl
neg
or
push
jne
mov
ds
fwait
imul
(bad)
retf
mov
pop
dec
sbb
sub
(bad)
mov
(bad)
jmp
mov
jp
js
into
cmc
(bad)
(bad)
jmp
push
sbb
adc
or
push
std
mov
sub
loopne
movs
mov
pushf
mov
xchg
dec
ret
inc
jp
fnstsw
sbb
and
sar
(bad)
inc
int
push
and
add
mov
das
jmp
movs
dec
sub
(bad)
(bad)
jmp
fdivr
or
div
dec
les
out
push
call
loop
(bad)
(bad)
(bad)
(bad)
dec
scas
stc
pop
sbb
mov
je
mov
cdq
jne
je
or
(bad)
sti
lea
(bad)
call
out
or
xor
cmp
(bad)
fbstp
push
cmp
xor
sub
(bad)
(bad)
inc
mov
push
loope
sbb
mov
sbb
mov
mov
cmps
and
mov
(bad)
(bad)
(bad)
(bad)
repz
test
mov
add
sub
sub
lods
(bad)
in
(bad)
(bad)
call
add
mov
lods
mov
lds
xor
and
xor
mov
mov
(bad)
call
lods
out
movs
push
or
(bad)
fstp
retf
daa
add
jbe
pop
cwde
and
adc
bound
test
push
js
and
fdivr
je
and
(bad)
jmp
loop
popw
stc
out
mov
jle
mov
arpl
cdq
sbb
push
push
(bad)
(bad)
(bad)
push
jns
mov
dec
cmp
jp
mov
test
ins
push
and
jecxz
mov
push
jmp
pop
and
int
hlt
and
scas
jle
adc
es
(bad)
mov
mov
dec
mov
std
push
jge
jmp
test
jbe
inc
dec
push
cld
(bad)
(bad)
dec
out
out
cdq
int
rcr
int
dec
test
sbb
and
inc
xor
inc
cmp
jnp
popa
retf
and
(bad)
mov
movs
xchg
in
call
aad
mov
ret
sahf
xchg
inc
cmps
xlat
(bad)
(bad)
(bad)
call
loope
sbb
mov
cmp
pushf
jnp
cmps
loope
hlt
dec
(bad)
call
xor
sbb
loop
enter
inc
idiv
xor
sbb
jns
cs
loope
aas
adc
mov
inc
ins
repnz
loope
(bad)
(bad)
dec
push
mov
and
loop
add
int3
pop
test
lods
mov
push
test
out
clc
fcomip
movs
cmp
xchg
test
xlat
xor
adc
push
fisubr
mov
dec
call
movs
(bad)
in
clc
pusha
mov
push
lds
mov
clc
(bad)
(bad)
fcomi
stc
adc
popf
sti
pop
test
add
cmp
aam
ds
sbb
stos
sub
adc
cmp
dec
fiadd
sti
jge
pop
cmp
repz
ins
cs
inc
cld
mov
pop
inc
in
push
xchg
sbb
imul
inc
test
loop
sub
mov
push
sbb
inc
imul
ins
and
ss
(bad)
(bad)
jmp
stc
add
dec
lahf
push
add
repnz
in
mov
rol
das
sar
adc
imul
push
adc
(bad)
(bad)
(bad)
cmp
sub
xchg
fld
push
push
addr16
ins
rcr
mov
ds
and
cmp
push
pop
(bad)
(bad)
(bad)
(bad)
mov
xchg
cmp
ja
fcom
cmp
mov
cmps
cwde
dec
jmp
jmp
cmp
push
mov
(bad)
push
(bad)
cmp
sbb
or
sbb
(bad)
mov
push
mov
dec
xchg
out
(bad)
(bad)
inc
adc
in
sub
pop
popa
mov
outs
mov
xor
sbb
aam
mov
in
(bad)
ins
push
jmp
mov
and
mov
stc
(bad)
push
mov
bound
(bad)
push
inc
cmp
dec
int3
push
xor
inc
push
mov
retf
call
mov
cli
(bad)
(bad)
mov
bound
rol
push
or
in
cmps
dec
mov
pop
jae
(bad)
(bad)
(bad)
jmp
test
fs
mov
in
inc
fldcw
test
fdiv
mov
(bad)
(bad)
inc
ds
retf
(bad)
fmul
add
push
retf
fcmove
jl
or
mov
call
adc
call
popf
in
push
xor
pop
outs
sbb
and
mov
dec
jbe
xor
imul
mov
scas
sbb
mov
(bad)
jmp
lock
cwde
mov
rol
add
dec
inc
adc
aaa
lds
mov
inc
(bad)
(bad)
jg
push
inc
arpl
fadd
xchg
inc
dec
or
je
stc
lahf
or
xchg
push
icebp
(bad)
(bad)
(bad)
mov
push
sbb
adc
xchg
lods
jnp
or
dec
pop
fist
push
mov
call
into
test
mov
nop
xlat
pop
push
mov
ja
sbb
ins
(bad)
inc
(bad)
fild
(bad)
(bad)
(bad)
jmp
retf
cmps
jle
dec
loope
imul
mov
call
xchg
movs
ja
push
mov
stos
ins
call
mov
xchg
jns
pop
repz
xchg
inc
dec
sub
lods
aad
hlt
jmp
jo
ret
retf
inc
lds
(bad)
cli
push
shr
(bad)
dec
or
stc
hlt
xchg
std
jl
movs
bound
add
inc
cmp
xor
(bad)
sar
(bad)
(bad)
dec
imul
or
sub
out
js
ds
fisub
lods
add
inc
fnstenv
jb
pop
sub
(bad)
out
sub
ret
mov
mov
daa
push
dec
and
jb
fdivr
rcl
lds
sbb
adc
and
mov
or
lods
movs
add
or
clc
mov
or
xor
not
sub
call
jle
lds
call
fiadd
(bad)
(bad)
(bad)
call
jnp
push
adc
ror
jmp
xchg
mov
mov
sbb
inc
mov
aad
mov
adc
add
repnz
(bad)
(bad)
call
and
cmps
scas
pop
cs
cmp
sbb
sub
adc
xchg
add
mov
lods
pusha
retf
mov
mov
xor
repnz
cmp
es
scas
lods
cmps
shl
(bad)
(bad)
(bad)
dec
rcr
push
out
jp
loope
pop
or
out
xchg
cwde
xlat
cwde
pushf
xchg
mov
cmc
dec
cmp
cmp
movaps
(bad)
jmp
cmps
test
sbb
fst
test
imul
jmp
adc
fild
cdq
cmp
and
(bad)
(bad)
(bad)
inc
lods
inc
(bad)
cmp
or
repz
add
adc
cmp
and
hlt
xchg
popf
nop
jle
fwait
mov
fild
mov
lea
cmp
add
pop
xchg
scas
or
sahf
and
dec
mov
(bad)
(bad)
(bad)
call
jne
stos
call
jmp
mov
sbb
iret
retf
call
mov
sub
int3
cmp
cs
rol
and
(bad)
(bad)
(bad)
mov
jmp
pop
mov
retf
or
ss
stc
and
jmp
(bad)
(bad)
call
sbb
js
sub
sbb
cmps
jae
cmp
xor
out
adc
pusha
aam
or
jns
and
test
out
xor
ins
mov
push
and
(bad)
(bad)
(bad)
dec
push
inc
mov
in
dec
mov
mov
mov
pop
and
push
inc
pop
(bad)
(bad)
(bad)
(bad)
jg
adc
lods
add
add
inc
(bad)
ds
mov
out
cld
dec
push
jns
clc
or
loop
(bad)
(bad)
(bad)
jmp
daa
mov
sub
ins
pop
je
shl
les
outs
jp
js
daa
mov
(bad)
jmp
mov
jae
pop
test
and
push
adc
(bad)
(bad)
jmp
inc
cmp
ja
add
and
outs
or
fld
jmp
loopne
push
sbb
jae
rol
(bad)
mov
imul
sub
popf
test
(bad)
(bad)
(bad)
inc
jmp
jmp
push
call
xor
add
call
test
iret
adc
push
(bad)
lods
add
mov
(bad)
(bad)
(bad)
call
sahf
mov
in
sbb
dec
repz
into
push
pop
addr16
pusha
mov
stos
or
adc
mov
mov
bound
sub
jecxz
daa
fst
jo
test
stc
mov
(bad)
jmp
das
aas
retf
test
or
dec
pop
stc
jle
dec
(bad)
or
leave
ror
iret
(bad)
(bad)
(bad)
mov
sbb
mov
inc
sub
inc
or
and
pop
inc
pop
aaa
cdq
loop
(bad)
(bad)
jmp
sbb
lods
std
movs
sub
sub
sub
inc
mov
and
jo
xchg
(bad)
(bad)
(bad)
call
and
xor
mov
movs
les
sahf
into
xor
retf
out
vcvtdq2pd
cdq
(bad)
(bad)
(bad)
call
call
xor
jp
inc
xchg
cld
mov
test
push
xchg
jge
mov
out
mov
mov
adc
adc
ret
cmp
mov
xchg
cdq
xchg
dec
add
xor
jb
push
add
(bad)
sub
retf
inc
cli
mov
(bad)
(bad)
(bad)
sti
loope
xchg
push
call
mov
fldenv
push
(bad)
(bad)
(bad)
mov
mov
inc
loopne
and
mov
push
add
push
scas
mov
fs
call
and
sar
mov
(bad)
(bad)
call
and
popf
jne
cwde
mov
sub
ja
das
loope
mov
push
dec
xor
cld
inc
xor
sub
push
cmp
push
jnp
mov
idiv
sbb
dec
jne
jp
rcr
adc
push
stos
pop
outs
mov
(bad)
(bad)
(bad)
inc
adc
dec
cdq
inc
faddp
and
and
pop
xchg
mov
pop
dec
dec
add
(bad)
call
pop
pop
push
shl
adc
imul
jmp
xchg
mov
push
push
into
bnd
fisttp
push
xchg
sub
cld
stos
iret
and
jmp
cs
jge
jmp
add
push
mov
jg
fidiv
cdq
jg
push
mov
xchg
push
imul
pop
jecxz
js
(bad)
(bad)
lods
nop
dec
aam
push
push
add
push
push
out
rcr
enter
call
(bad)
(bad)
(bad)
jmp
(bad)
add
cdq
repz
adc
outs
pop
sub
nop
stc
out
mov
(bad)
(bad)
(bad)
(bad)
aas
push
out
jo
or
inc
(bad)
iret
pop
jle
cmp
call
add
je
cmps
test
(bad)
(bad)
(bad)
inc
cld
enter
mov
push
enter
push
js
pop
mov
sbb
jmp
or
pop
mov
sbb
mov
nop
mov
sar
(bad)
(bad)
(bad)
jle
add
mul
loopne
cmp
inc
iret
ret
aam
and
int3
mov
ds
(bad)
(bad)
dec
daa
push
je
cmp
inc
add
ds
push
jae
jae
sub
add
mov
ss
(bad)
(bad)
inc
call
rol
mov
sbb
mov
sar
push
ins
fisubr
ficom
pop
daa
inc
es
mov
nop
xchg
dec
add
adc
sub
(bad)
(bad)
fisttp
js
mov
add
mov
dec
neg
outs
mov
lods
push
repnz
inc
mov
mov
aam
(bad)
(bad)
(bad)
(bad)
mov
cmc
sub
cmp
xor
add
mov
sar
aaa
std
xchg
or
daa
dec
adc
or
loopne
mov
mov
inc
ds
lea
mov
lea
movs
xlat
adc
int3
nop
cli
iret
mov
xchg
or
cmp
xor
adc
pop
pop
icebp
lods
xor
and
in
jnp
pop
(bad)
push
test
cs
cmp
shr
in
xchg
inc
adc
sbb
add
lea
(bad)
jmp
sbb
in
pushf
and
sar
xor
push
cmp
jne
cmp
cli
sti
inc
inc
push
push
xor
push
mov
sub
push
mov
cmps
and
mov
xor
dec
pusha
movs
fidiv
jne
mov
rol
push
fild
jg
mov
shl
mov
test
xchg
test
add
loopne
cmp
test
xor
jl
xor
pusha
bndstx
cmps
sbb
outs
fisttp
push
push
ret
add
icebp
test
mov
pop
jnp
and
je
push
mov
data16
mov
mul
cmps
mov
xor
xchg
popa
loopne
das
mov
add
sbb
sar
pop
add
xchg
gs
adc
inc
inc
or
mul
out
cmps
add
(bad)
jae
adc
(bad)
mov
pop
retf
idiv
jge
rcr
inc
add
cmp
sub
ja
lahf
sub
fs
test
cmps
push
or
pop
aas
or
scas
sar
lods
fstp
jno
xchg
adc
sub
mov
fs
push
mov
sub
mov
adc
imul
sub
add
imul
push
lea
add
retf
mov
pop
mov
fldenv
out
test
retf
ss
fimul
inc
dec
add
in
add
ss
(bad)
lea
popf
icebp
(bad)
jae
jo
js
xchg
lock
nop
sub
(bad)
jge
jo
add
jmp
sub
mov
lea
mov
data16
sub
dec
inc
fwait
je
pop
add
push
sbb
inc
lock
add
dec
rol
aaa
les
dec
xor
and
sbb
bound
lahf
sbb
sar
cli
clc
mov
mov
adc
ins
inc
retf
add
int
adc
sbb
sti
or
jae
xor
ins
cmp
or
adc
jmp
xchg
mov
rol
or
leave
loopne
cmp
mov
jne
cmp
adc
rol
mov
pop
sub
pushf
stos
xchg
adc
rcr
(bad)
cmps
call
dec
jp
fcom
loope
mov
push
js
and
stos
xchg
add
xchg
mov
push
inc
or
pop
push
add
(bad)
bound
pusha
jmp
lods
into
pop
sub
push
jl
inc
loopne
sbb
xchg
pop
stc
jl
and
repnz
cwde
lock
ret
xlat
jecxz
mov
dec
out
sub
push
pop
call
pop
lds
inc
mov
pop
ins
test
add
cli
mov
and
fild
add
enter
pop
cmp
push
add
mov
pop
mov
add
cmp
pop
aad
lock
cvtps2pi
xor
inc
add
jmp
xor
pop
(bad)
loopne
lock
punpcklwd
loope
mov
xlat
ins
sbb
mov
mov
cmp
mov
and
ds
pop
add
mov
adc
outs
push
icebp
mov
cmp
in
lahf
mov
or
xchg
enter
fild
(bad)
and
cmp
(bad)
in
and
cmp
pop
cld
push
ins
out
xor
(bad)
out
out
ret
retf
adc
out
push
push
inc
push
gs
or
repz
bound
(bad)
dec
das
shl
aad
xchg
call
mov
popa
lea
ret
add
push
lods
mov
gs
fcom
adc
test
add
fs
fistp
leave
and
ror
fld
xchg
les
cdq
nop
sub
lods
out
stos
lods
mov
idiv
push
xor
push
push
inc
xor
data16
xor
sti
not
cmp
add
in
add
adc
sbb
shr
push
jmp
xchg
lods
sub
xchg
mov
shr
dec
mov
jne
mov
mov
cmp
mov
adc
or
(bad)
out
and
test
dec
sar
aad
je
pop
and
push
loopne
sub
lea
inc
or
dec
mov
add
inc
add
or
push
ror
daa
add
clc
out
mov
into
add
les
jg
mov
and
jne
std
loopne
push
rol
jmp
test
mov
push
add
or
cmp
xchg
mov
dec
jb
sub
mov
out
ret
repnz
stos
add
fld
scas
xchg
jecxz
push
or
cld
push
jmp
(bad)
add
adc
mov
loope
pop
xchg
arpl
jmp
dec
push
jo
inc
sub
(bad)
ret
lock
push
test
or
inc
popa
sbb
aas
or
je
cmp
je
loop
adc
cmp
xchg
das
cld
jmp
fild
push
inc
jmp
(bad)
test
out
pop
push
jecxz
cmp
cmp
or
adc
sub
les
pop
or
scas
adc
test
xor
sub
xchg
std
adc
cld
add
dec
call
in
pop
mov
jne
or
leave
pop
mov
mov
not
loope
add
jb
cmp
ja
cmp
sub
or
(bad)
call
cmp
adc
mov
mov
adc
iret
sub
inc
xchg
inc
imul
adc
jg
inc
jo
push
or
and
rcr
mov
mov
mov
dec
les
add
push
inc
or
xchg
call
or
inc
(bad)
fmul
scas
push
sub
pop
cmp
or
popa
dec
ins
sbb
inc
adc
add
dec
adc
and
ja
dec
hlt
jnp
rol
sti
test
loop
out
test
scas
lock
lock
push
lods
jg
(bad)
push
push
aad
xchg
pop
sti
mov
pusha
sub
sub
pop
loopne
loope
popa
jb
sub
jne
sub
jmp
rcl
(bad)
fild
add
stos
adc
sahf
push
xchg
sbb
add
sbb
or
dec
pop
es
std
mov
pusha
lock
push
add
out
pop
aad
sbb
dec
add
dec
push
dec
or
mov
into
mov
(bad)
lahf
push
add
ja
mov
add
xchg
adc
mov
sahf
je
jb
imul
push
ins
add
sbb
add
add
push
push
cmp
sahf
fstp
bound
cs
add
inc
inc
ins
add
(bad)
outs
mov
call
es
add
scas
jo
xlat
scas
popf
fwait
shl
ins
inc
test
in
jge
scas
lea
mov
mov
arpl
out
cmp
addr16
push
jae
jnp
jo
xchg
push
je
outs
push
add
xchg
fdivr
inc
xor
jecxz
dec
jb
add
push
(bad)
pop
cmp
jae
xor
sub
xor
xlat
loopne
add
adc
je
push
fmul
fisubr
ins
mov
inc
iret
xchg
inc
add
adc
ret
jnp
addr16
dec
jns
jbe
jmp
dec
sbb
fdivr
sub
faddp
push
fs
ins
xchg
or
scas
fst
fs
ins
out
pop
jae
ins
dec
add
loopne
into
cmp
ins
pop
inc
push
pop
ja
loope
outs
and
bound
scas
jne
fs
push
aas
outs
push
mov
mov
arpl
outs
inc
push
xchg
arpl
push
out
xor
pop
ror
dec
pandn
aaa
sbb
out
rcl
and
mov
loopne
ds
xlat
or
add
sbb
xor
cmp
aam
daa
enter
cmp
cmp
repnz
push
adc
jae
iret
test
ja
outs
push
sub
sub
push
mov
mov
mov
and
dec
hlt
cli
or
dec
(bad)
add
inc
push
dec
inc
dec
aam
dec
sub
fld
jle
dec
dec
inc
push
dec
out
inc
inc
dec
xchg
fcomp
adc
dec
dec
inc
pop
push
inc
push
push
adc
outs
sub
add
add
xchg
cvtdq2ps
cmc
mul
add
shl
retf
es
in
int
shl
dec
ins
popa
addr16
pop
inc
call
cmp
mov
outs
jae
mov
pop
inc
inc
cld
push
or
out
inc
inc
jl
add
push
push
xlat
add
pop
cmp
xchg
push
lock
out
std
mov
mov
shl
xor
jnp
push
inc
push
push
pop
pusha
jo
idiv
adc
loopne
and
out
out
xor
push
nop
sahf
out
test
push
dec
pop
push
js
call
(bad)
out
cld
iret
repz
psubusb
xor
xchg
inc
ret
mov
cmp
add
add
stos
jmp
call
adc
adc
adc
outs
dec
pop
mov
mov
cs
sub
cmps
fdivr
dec
mov
pop
je
popa
arpl
inc
js
test
push
into
pop
dec
jnp
(bad)
arpl
sbb
bound
jb
mov
mov
mov
push
jo
popa
dec
and
jo
dec
push
lock
or
sbb
jg
fstp
sbb
imul
ins
pop
bound
in
pop
and
sbb
es
popa
and
push
cli
ins
gs
mov
or
push
sub
pop
imul
sub
add
push
imul
add
cmps
push
mov
mov
rcl
sbb
push
dec
inc
mov
ss
(bad)
(bad)
jmp
retf
outs
clc
pop
fwait
int3
push
cmp
cmp
adc
jnp
in
lahf
dec
mov
aaa
sub
(bad)
stos
inc
cli
(bad)
(bad)
ds
leave
sbb
movs
mov
loop
jp
push
inc
jo
cld
push
xchg
movs
mov
ret
sub
test
call
sub
dec
test
pop
xchg
inc
cmp
sar
(bad)
call
jns
adc
and
cmp
in
cmps
inc
mov
loope
sub
xchg
(bad)
(bad)
fld
pop
jle
dec
sub
inc
inc
std
or
repnz
push
jmp
pusha
and
(bad)
xchg
push
inc
push
(bad)
(bad)
(bad)
dec
outs
push
push
push
jg
ds
fst
imul
push
sbb
add
dec
sub
lods
and
(bad)
xchg
ret
cwde
fisub
jne
mov
push
fisub
jnp
nop
in
rol
stos
(bad)
mov
and
sbb
inc
sahf
push
rol
(bad)
call
cli
pop
popa
xchg
rdmsr
mov
(bad)
push
(bad)
idiv
(bad)
(bad)
mov
push
adc
inc
in
mov
(bad)
sub
lock
or
mov
sub
sar
mov
daa
xor
mov
jecxz
xor
add
enter
add
ins
(bad)
fcomip
inc
ss
int
int3
ret
mov
xchg
shr
mov
dec
das
repz
ret
clc
or
movs
popf
inc
std
mov
sbb
retf
pop
pusha
sar
jg
adc
fisttp
in
mov
fld
aad
mov
idiv
(bad)
(bad)
dec
test
xchg
das
or
cmp
add
sub
ret
int3
test
mov
in
mov
(bad)
(bad)
fist
mov
movs
retf
int
outs
push
mov
mov
stc
mov
cmp
(bad)
(bad)
call
jmp
xor
popa
mov
or
jle
add
aas
sar
adc
inc
inc
call
mov
inc
lahf
loopne
loopne
test
sbb
call
(bad)
(bad)
(bad)
push
rcr
push
dec
mov
push
jae
adc
test
pop
cmp
leave
inc
popf
or
lea
or
sbb
(bad)
(bad)
jmp
lahf
xor
mov
mov
inc
lock
test
test
push
mov
sar
std
int3
stos
xchg
and
dec
jmp
aaa
retf
xchg
pop
adc
sub
call
cli
pop
(bad)
and
out
jnp
mov
ror
or
mov
xor
in
or
(bad)
(bad)
push
fst
cmp
xchg
lods
add
loop
dec
ins
ret
mov
mov
(bad)
(bad)
cmp
jmp
in
bound
mov
push
test
int3
not
jmp
(bad)
out
(bad)
stos
push
or
loopne
ja
xchg
mov
mov
lock
jns
(bad)
(bad)
dec
call
les
xchg
cmp
das
mov
shl
gs
mov
stos
rol
(bad)
inc
icebp
pop
es
push
pop
out
retf
pop
dec
push
cld
out
daa
stc
mov
mov
inc
ret
push
mov
(bad)
jg
(bad)
clc
lds
jb
nop
jle
mov
mov
xor
dec
jecxz
div
test
mov
cmps
push
fmul
test
pusha
out
call
scas
mov
clc
(bad)
(bad)
push
pop
enter
jg
(bad)
and
test
sbb
sbb
clc
(bad)
jmp
sub
rcl
pop
sub
retf
imul
movs
iret
leave
repnz
es
(bad)
jmp
adc
jne
and
push
cmp
fdiv
fadd
test
call
cmp
xor
mov
imul
jge
sbb
or
mov
shl
aaa
sti
psllw
push
lods
dec
ins
sub
push
add
(bad)
bound
cdq
stc
add
stos
repz
ja
test
aam
addr16
sahf
xor
jle
(bad)
(bad)
jmp
shl
pop
xchg
pop
jmp
xor
inc
shr
loope
repnz
jmp
lods
mov
or
loopne
and
dec
cs
jb
jns
xor
div
popa
push
pop
idiv
(bad)
(bad)
call
sar
test
dec
shl
sub
adc
aaa
data16
add
mov
(bad)
push
cld
fwait
ret
mov
retf
jo
or
cli
lods
add
mov
add
(bad)
(bad)
jns
push
mov
jae
fisubr
std
xchg
inc
inc
xchg
into
sub
outs
fisub
add
jp
(bad)
(bad)
(bad)
fist
jb
pusha
fwait
jbe
retf
imul
pop
fsub
(bad)
(bad)
cmp
repz
dec
sub
sahf
lods
test
dec
push
push
loop
cmp
xchg
(bad)
(bad)
(bad)
push
js
and
push
leave
dec
adc
out
scas
mov
cmp
cs
cmp
dec
push
cld
(bad)
push
loop
test
and
cs
ficom
pushf
fstp
clc
enter
dec
(bad)
jmp
push
das
sbb
jb
ror
sub
adc
inc
mov
aad
adc
popa
imul
js
xchg
sub
lods
xchg
mov
(bad)
cmp
sub
(bad)
(bad)
cmp
fsub
dec
out
xchg
leave
xchg
pop
out
repz
and
lods
fwait
mov
repz
jg
push
mov
dec
imul
test
pushf
sbb
fistp
cli
ja
xor
push
scas
adc
stos
xchg
inc
fsub
(bad)
(bad)
(bad)
inc
mov
ja
pushf
repnz
into
xchg
xor
daa
sbb
aaa
lods
outs
outs
es
(bad)
call
cmp
mov
push
(bad)
(bad)
inc
pop
adc
data16
call
outs
neg
mov
sar
(bad)
(bad)
(bad)
call
ret
stos
retf
xor
ret
call
push
leave
xor
js
push
cmps
mov
mov
(bad)
or
or
xor
xchg
cld
inc
inc
es
mov
jecxz
mov
jmp
(bad)
call
repz
fsubr
push
in
nop
fs
ja
sub
cmc
jecxz
inc
(bad)
(bad)
(bad)
(bad)
call
adc
dec
jl
push
clc
aaa
push
and
stc
sbb
adc
repnz
jae
(bad)
(bad)
dec
fld
stos
ret
jle
fisttp
cs
int3
mov
pop
add
adc
enter
(bad)
(bad)
jl
out
cmp
push
ret
inc
xor
fistp
sub
pop
std
sbb
data16
(bad)
(bad)
inc
mov
jne
inc
sub
imul
add
cwde
stc
mov
not
jmp
xchg
ret
(bad)
int
mov
cs
mov
icebp
rcl
fs
in
add
(bad)
call
daa
adc
gs
inc
jg
dec
and
inc
fisub
call
mov
jle
ja
xchg
cmp
jp
pop
dec
(bad)
call
dec
mov
jbe
fadd
mov
mov
or
(bad)
retf
push
movs
(bad)
jg
loop
dec
adc
xor
xlat
sub
pop
sbb
or
loope
jno
sub
(bad)
(bad)
jg
lods
pop
mov
imul
push
imul
stos
rcr
(bad)
jecxz
fild
add
addr16
dec
mov
(bad)
inc
push
push
mov
frstor
retf
cmp
xchg
adc
in
test
outs
dec
lock
(bad)
jp
mov
outs
dec
mov
(bad)
(bad)
jmp
sub
pop
call
imul
ret
add
cld
cli
jb
(bad)
(bad)
(bad)
jmp
vmovss
popf
mov
sbb
push
imul
fsub
pushf
std
(bad)
(bad)
(bad)
push
data16
jb
mov
cmps
mov
idiv
(bad)
sub
inc
dec
mov
rcl
(bad)
(bad)
(bad)
inc
pop
or
gs
and
jno
mov
pop
call
cmp
adc
jmp
fcomip
stos
add
and
sub
js
dec
jbe
or
scas
adc
mov
(bad)
(bad)
jmp
shl
data16
push
and
add
or
in
cmp
cmp
idiv
(bad)
(bad)
jmp
(bad)
sub
or
shl
sub
shr
je
mov
jns
(bad)
(bad)
(bad)
clc
js
mov
adc
jne
sub
enter
into
or
(bad)
(bad)
push
repz
mov
popf
and
idiv
xor
dec
add
sbb
stc
inc
mov
mov
push
push
movs
lahf
mov
sub
dec
shl
pop
and
xlat
enter
les
rcr
(bad)
dec
xchg
xchg
jl
cmp
mov
pop
in
hlt
or
or
ja
add
dec
add
and
(bad)
(bad)
(bad)
jg
ins
push
lods
jb
leave
nop
adc
sub
cmps
mov
xchg
fwait
mov
les
pop
cmc
(bad)
call
add
xchg
test
adc
cmp
jmp
jg
fistp
jle
sbb
ja
xor
mov
imul
(bad)
xlat
movs
jmp
lock
call
(bad)
sbb
jae
cwde
push
jnp
out
cwde
lods
(bad)
xchg
lods
loopne
(bad)
(bad)
inc
iret
mov
aaa
sahf
push
mov
fadd
mov
shr
push
jae
push
(bad)
(bad)
fsub
fbld
mov
or
or
cwde
fiadd
sahf
mov
loope
mov
das
xor
mov
cmp
aaa
std
push
stc
cs
mov
test
dec
xchg
xchg
popf
int3
push
(bad)
(bad)
(bad)
(bad)
cmp
dec
sbb
sbb
adc
xchg
inc
dec
mov
push
cmp
mov
mov
(bad)
(bad)
inc
cwde
(bad)
out
push
cmc
mov
shl
out
rcl
cmp
ins
dec
sbb
jbe
std
hlt
(bad)
fcomip
xor
push
pop
xchg
movs
inc
inc
jno
(bad)
jp
sbb
outs
jl
lods
dec
sub
(bad)
call
sbb
repnz
mov
xchg
call
shr
(bad)
mov
and
(bad)
(bad)
(bad)
dec
mov
xor
jp
std
sti
sbb
into
sub
fisub
dec
push
lds
daa
pop
shl
sbb
mov
iret
sub
push
jecxz
aad
xor
(bad)
dec
ja
in
or
inc
cmpxchg
mov
iret
xlat
ret
js
je
mov
fild
(bad)
inc
imul
xor
lahf
mov
fisttp
mov
mov
retf
(bad)
(bad)
call
lock
cdq
fstp
adc
cmp
jbe
ficom
jae
idiv
mov
sbb
shl
push
fsubrp
ret
dec
xchg
inc
leave
ficom
push
mov
push
into
push
pop
jg
fnstsw
ror
aas
es
jae
pop
imul
je
lods
add
aad
xchg
arpl
xchg
(bad)
push
sbb
adc
(bad)
(bad)
(bad)
jle
push
nop
inc
in
shl
xor
xchg
cmp
test
inc
inc
mov
bound
xor
(bad)
(bad)
(bad)
dec
or
sbb
test
sub
test
cmc
jl
fmul
shl
(bad)
(bad)
call
imul
(bad)
loope
jno
outs
imul
loopne
out
adc
mov
pop
sbb
(bad)
(bad)
dec
or
in
mov
add
pop
dec
ret
pop
and
mov
aas
add
sub
mov
std
sub
hlt
es
pop
(bad)
inc
icebp
xor
(bad)
sbb
(bad)
(bad)
push
mov
sti
das
push
movs
(bad)
retf
aaa
call
jnp
cmp
mov
(bad)
dec
mov
and
xchg
pop
pushf
in
mov
mov
mov
mov
sar
(bad)
(bad)
call
adc
mov
nop
jl
xchg
icebp
loop
movs
jmp
imul
das
xchg
icebp
push
cmp
aam
xchg
mov
and
and
inc
std
fstp
retf
jb
xchg
imul
arpl
fdivp
(bad)
call
xchg
cld
dec
cmps
dec
push
fs
out
mov
cs
clc
shl
fmul
(bad)
inc
test
xchg
push
icebp
push
dec
mov
mov
jmp
dec
jge
mov
(bad)
and
mov
inc
clc
das
js
jne
and
jmp
xor
push
xchg
dec
into
xor
sub
jb
xchg
stos
(bad)
(bad)
push
shr
jmp
test
dec
jmp
sti
ins
fidiv
adc
std
outs
cli
scas
xchg
or
fld
add
mov
(bad)
(bad)
jmp
iret
push
pop
adc
les
adc
in
iret
clc
sub
pop
jecxz
(bad)
push
sbb
call
clc
(bad)
fidiv
adc
call
call
retf
(bad)
sbb
dec
jecxz
sbb
(bad)
mov
adc
adc
(bad)
push
sub
pop
pusha
push
retf
test
mov
pop
cmp
pop
inc
xor
sar
pushf
movs
in
inc
cli
cmp
fisubr
cmps
cmc
(bad)
call
ret
mov
xor
in
std
sub
pop
setle
mov
fstp
out
add
xchg
(bad)
cwde
xor
cmc
adc
add
mov
(bad)
(bad)
call
mov
cmp
dec
inc
lock
jne
loop
jmp
cmp
add
movs
rcl
std
mov
mov
pop
cmc
add
je
aam
ficom
sti
pop
mov
xor
and
and
mov
test
arpl
add
mov
xchg
mov
pop
jb
sti
push
fstp
retf
test
dec
fwait
(bad)
sub
retf
ret
stos
dec
inc
add
call
cld
adc
xor
add
or
addr16
push
jmp
and
data16
inc
cmps
(bad)
jg
test
fdiv
mov
ret
arpl
mov
push
push
fcomip
cmp
popa
add
and
mov
(bad)
(bad)
call
sub
add
push
xchg
inc
mov
int
ror
(bad)
fdivr
shl
mov
or
(bad)
(bad)
inc
or
xchg
ds
mov
mov
in
mov
stc
adc
jo
xchg
push
or
cli
ds
mov
shl
sub
cs
(bad)
(bad)
dec
(bad)
sbb
add
test
dec
push
fdivr
pop
dec
mov
out
ins
sbb
inc
or
jns
or
mov
test
fstp
es
pop
mov
adc
test
dec
push
xor
outs
test
jbe
add
mov
dec
dec
movs
sbb
call
mov
cmp
(bad)
(bad)
(bad)
call
call
pop
jo
clc
mov
and
aam
push
dec
pop
mov
dec
dec
pop
cmp
adc
and
dec
mov
sahf
out
out
fwait
mov
(bad)
(bad)
(bad)
jmp
ret
mov
fidivr
in
add
pop
xchg
mov
cld
and
jmp
(bad)
(bad)
(bad)
cmp
push
mov
into
icebp
sub
mov
fdivr
pop
mov
(bad)
(bad)
push
sub
addr16
sub
cmps
jg
std
dec
mov
xchg
adc
(bad)
jg
and
mov
ror
inc
(bad)
pushf
(bad)
(bad)
(bad)
call
jno
repnz
jg
xor
jmp
xor
movs
adc
mov
jmp
shrd
cmc
pushf
sbb
jge
and
dec
jne
vcvtsi2sd
(bad)
mov
scas
sbb
inc
adc
push
mov
sti
jle
(bad)
(bad)
(bad)
jmp
push
mov
fist
sar
or
popf
push
cld
jmp
jbe
dec
cwde
lods
mov
jg
add
lods
(bad)
call
xor
xor
(bad)
dec
ffreep
jge
int
sub
cli
jo
(bad)
call
mov
int
jne
shr
sub
sub
xchg
popf
out
dec
sub
(bad)
(bad)
(bad)
jmp
bound
or
(bad)
ror
jg
clc
lahf
inc
in
mov
ss
jne
dec
dec
ficomp
dec
jb
hlt
stos
mov
cmp
movs
mov
add
(bad)
(bad)
(bad)
out
rcl
push
pop
xlat
js
aaa
cmp
mov
es
frstor
ficom
test
adc
or
fld
mov
clc
int3
sti
aas
mov
push
xor
add
inc
shl
xchg
ins
lahf
inc
mov
(bad)
inc
and
jb
xchg
lds
push
add
adc
cmp
paddsw
mov
aaa
(bad)
loopne
iret
aad
or
dec
ds
jne
push
(bad)
pop
pusha
cmps
and
adc
(bad)
(bad)
(bad)
jmp
mov
fadd
push
mov
pop
int3
mov
lahf
mov
push
pushf
in
retf
xchg
sbb
nop
aas
aas
sub
in
push
fdiv
gs
and
sub
imul
mov
xor
ds
(bad)
jmp
pushf
loopne
test
sbb
cmp
sbb
xor
cli
(bad)
dec
and
scas
in
neg
les
ins
pusha
(bad)
(bad)
jmp
jle
cs
popa
inc
leave
mov
cmp
xchg
sbb
dec
pop
or
mov
dec
jmp
test
fcom
pop
xchg
movs
sbb
fld
(bad)
dec
mov
(bad)
je
adc
adc
sbb
add
(bad)
sbb
loopne
pop
jns
test
jle
scas
cld
cwde
mov
dec
aas
inc
or
(bad)
dec
push
add
lock
sub
mov
stos
push
xchg
dec
test
cmp
mov
(bad)
jmp
xlat
pushf
push
out
xchg
jge
xchg
inc
cmp
int
xor
push
nop
jb
xchg
mov
or
(bad)
(bad)
call
inc
add
idiv
jl
jecxz
push
push
xor
add
punpckhbw
xchg
(bad)
jp
jmp
mov
add
jge
and
(bad)
(bad)
(bad)
jg
sbb
int3
mov
fs
or
mov
ror
je
and
add
sbb
add
fdiv
dec
pop
fisttp
jnp
xchg
lock
dec
mov
arpl
mov
mov
adc
loope
test
pop
js
jmp
clc
add
jle
sub
mov
(bad)
(bad)
(bad)
js
sub
sbb
stos
(bad)
jp
aaa
xor
cld
sbb
xchg
fdivr
movs
push
push
xor
jo
call
(bad)
pop
(bad)
jmp
dec
xchg
push
sbb
test
fcmovb
xchg
xchg
(bad)
cs
popf
xor
std
test
call
ja
aad
inc
je
dec
push
repz
adc
mov
inc
repnz
add
(bad)
mov
jmp
xchg
pop
jp
sti
sbb
retf
ja
adc
(bad)
(bad)
call
lds
adc
inc
sbb
call
out
mov
popa
shl
gs
inc
test
jg
pop
jbe
dec
test
mov
jmp
mov
leave
inc
repz
(bad)
(bad)
(bad)
in
out
scas
test
mov
jae
sub
sub
pop
xchg
lods
fild
pop
sub
push
clc
adc
mov
mov
js
stc
js
(bad)
outs
push
xor
pop
pop
xor
xchg
xor
adc
es
lea
adc
fst
icebp
push
or
push
jo
call
cdq
mov
add
dec
cmp
bound
and
dec
cdq
pop
arpl
(bad)
(bad)
inc
lahf
lahf
ins
dec
aaa
push
and
mov
outs
mov
cmp
mov
sub
mov
call
fnstsw
dec
add
jecxz
push
loopne
fdiv
je
sbb
(bad)
(bad)
push
outs
adc
sbb
lahf
jle
push
push
mov
jl
mov
pop
int
mov
cs
or
(bad)
(bad)
(bad)
(bad)
jge
aaa
sbb
pop
retf
imul
add
sar
and
inc
mov
(bad)
call
or
sti
fdivr
out
xchg
jb
cdq
imul
mov
xor
(bad)
(bad)
call
jp
inc
aas
or
(bad)
xor
xchg
inc
inc
jbe
inc
push
pushf
(bad)
pop
mov
and
(bad)
(bad)
(bad)
jmp
xor
aaa
jnp
or
retf
aad
inc
daa
pop
jb
outs
mov
(bad)
(bad)
jmp
dec
loopne
call
mov
xor
les
in
mov
fidiv
dec
rol
jbe
jmp
fnstenv
push
jne
inc
in
cmp
mov
(bad)
mov
xor
mov
bound
ret
ja
fs
(bad)
(bad)
(bad)
call
push
outs
jo
jl
adc
pop
cmp
fld
push
imul
mov
test
(bad)
(bad)
fild
hlt
js
in
repz
push
in
(bad)
pop
xchg
mov
test
sahf
add
inc
add
inc
mov
nop
push
mov
call
(bad)
call
outs
out
stos
or
loop
(bad)
in
test
ja
cmc
sbb
xchg
or
jmp
(bad)
(bad)
(bad)
dec
or
xchg
ins
frstor
pop
ret
pop
mov
mov
out
xchg
std
ret
out
sbb
fst
fs
(bad)
(bad)
jmp
out
out
int3
popa
retf
adc
jmp
sbb
mov
mov
mov
dec
mov
loop
fcomp
and
daa
inc
mov
enter
and
(bad)
(bad)
(bad)
cmp
lock
adc
dec
mov
pop
cdq
mov
mov
hlt
sbb
repz
inc
int3
cmp
(bad)
call
jle
cmps
rcl
jecxz
pop
test
rol
sahf
or
xlat
adc
dec
jmp
idiv
push
(bad)
(bad)
(bad)
cli
in
mov
push
push
gs
inc
add
pop
mov
push
and
add
jp
or
or
xor
es
(bad)
call
(bad)
xchg
ret
pushf
push
and
mov
pop
idiv
enter
(bad)
call
jne
stc
xchg
jne
adc
jnp
imul
or
or
retf
sbb
and
or
mov
inc
jmp
(bad)
(bad)
(bad)
inc
vpcomb
adc
add
test
inc
ins
push
movs
push
icebp
adc
das
repnz
jae
outs
cwde
daa
mov
xchg
jns
ud2
sub
push
nop
mov
pop
or
dec
ret
lods
repz
xchg
add
mov
dec
cli
pop
icebp
mov
fwait
and
add
dec
popf
sbb
repz
fwait
loope
movs
sti
mov
or
std
lock
popf
xor
and
cs
dec
or
mov
call
std
aaa
les
test
dec
inc
cmp
fnstsw
and
pop
mov
fs
(bad)
(bad)
jmp
leave
fbstp
jns
icebp
push
add
ficom
leave
das
mov
into
fcomi
inc
add
int
(bad)
(bad)
(bad)
lea
sub
push
xchg
sbb
pop
rol
iret
sbb
jae
xor
(bad)
(bad)
jmp
movs
call
cmp
inc
ror
ins
cwde
ror
fwait
mov
and
dec
popa
xchg
(bad)
(bad)
(bad)
jmp
jl
xchg
or
in
aad
sbb
inc
shl
add
scas
jb
clc
cmc
sbb
nop
call
mov
mov
cmp
outs
sub
push
lahf
std
dec
dec
pop
out
(bad)
jne
mov
jae
inc
out
bnd
pusha
xchg
fnstcw
push
cmc
mov
loope
pop
dec
and
jns
pop
push
inc
fcmovu
pop
fdivr
push
mov
jmp
xor
xchg
add
push
pop
add
or
and
cdq
fist
sbb
(bad)
(bad)
(bad)
inc
lds
ja
ja
mov
mov
push
cmp
loope
retf
push
lds
adc
mov
jmp
mov
add
into
push
movs
pop
fimul
rol
push
adc
popf
repnz
cmp
inc
dec
dec
sub
pop
push
rcr
repz
call
sahf
clc
push
mov
push
cli
(bad)
(bad)
(bad)
dec
lock
fucomp
jmp
add
rdpmc
(bad)
idiv
(bad)
(bad)
call
into
or
adc
nop
out
movs
lds
push
in
mov
(bad)
xchg
or
pop
pop
mov
(bad)
push
mov
cs
icebp
push
adc
jge
dec
push
scas
xchg
test
cmp
movs
mov
push
sub
push
add
enter
xchg
mov
ja
sbb
(bad)
in
(bad)
(bad)
(bad)
call
and
or
mov
lods
push
sub
push
and
sbb
test
cmc
pop
cmp
cmc
or
in
push
out
mov
(bad)
fdivr
pop
std
inc
lods
aam
stc
lock
jbe
enter
and
xor
out
(bad)
(bad)
(bad)
(bad)
cmp
lahf
xor
popa
int3
shl
sti
repnz
or
(bad)
aas
out
mov
(bad)
call
out
repz
dec
push
xchg
push
fidivr
dec
daa
jmp
dec
inc
cmp
std
(bad)
(bad)
(bad)
bound
dec
pop
jmp
loop
dec
rcl
dec
lock
(bad)
inc
mov
dec
lahf
stos
fcmovbe
ss
xor
jmp
(bad)
dec
(bad)
pop
loope
jmp
push
inc
dec
fcom
lods
outs
jmp
test
(bad)
mov
push
pop
push
imul
movs
adc
jne
xlat
aas
and
xchg
and
fwait
cld
(bad)
(bad)
(bad)
mov
loop
dec
or
rol
mov
or
or
dec
pop
add
mov
(bad)
dec
lods
imul
mov
pop
pop
or
(bad)
jecxz
outs
adc
fimul
in
movs
mov
(bad)
inc
sti
fsub
xor
mov
push
sbb
inc
stos
inc
jp
rcr
sbb
dec
or
push
popf
cdq
mov
(bad)
(bad)
call
movs
inc
adc
cmp
sbb
iret
jae
push
mov
(bad)
nop
pop
jmp
cwde
(bad)
(bad)
(bad)
jmp
inc
add
out
sbb
sub
xchg
cdq
adc
add
ds
mov
(bad)
push
mov
push
rol
mov
movs
fwait
dec
mov
and
pop
dec
mov
or
inc
int
popf
cmp
mov
fs
cli
(bad)
aaa
xor
and
aaa
std
(bad)
push
cld
dec
sbb
xchg
sbb
aas
adc
sub
lods
mov
das
aaa
(bad)
(bad)
(bad)
dec
clc
scas
xchg
jns
sbb
ins
mov
inc
pop
std
(bad)
(bad)
dec
(bad)
jmp
dec
pop
pop
std
sar
shl
sub
cmp
stos
ret
jns
xchg
mov
cmp
(bad)
(bad)
call
pop
mov
add
jb
mov
push
frstor
test
fs
ss
xchg
cmc
(bad)
(bad)
mov
retf
pop
scas
or
mov
stc
jp
xchg
in
(bad)
(bad)
out
div
je
lahf
fisttp
jmp
int3
fisub
and
push
pop
add
mov
(bad)
dec
cs
jecxz
pop
cs
stos
pop
jns
jmp
cmp
xor
aaa
aaa
xor
(bad)
pop
mov
scas
call
outs
jbe
ins
lods
std
fwait
shl
push
js
jo
cs
and
jg
repz
inc
push
push
inc
push
inc
pop
dec
imul
je
jg
inc
and
push
idiv
das
sub
outs
add
je
ins
imul
or
outs
jae
add
pushf
not
inc
and
add
ret
dec
(bad)
nop
cmp
ret
pop
pop
cld
ret
xor
repnz
mov
push
ret
cmp
cmp
ret
das
adc
inc
push
das
(bad)
mov
ret
xor
or
xor
sbb
aaa
add
add
daa
xchg
cmp
inc
and
stc
(bad)
and
add
push
or
lar
or
jl
add
cwde
das
sub
mov
add
xchg
inc
pop
add
fnsave
enter
xchg
mov
add
cmp
lods
sbb
call
adc
ins
fwait
nop
mov
out
xor
add
sbb
push
sub
cmp
xlat
pop
sub
inc
jmp
cs
popa
pop
add
sub
idiv
cli
and
push
dec
xchg
inc
cs
add
xor
push
rol
jnp
mov
jo
add
add
popf
retf
bound
pop
add
sbb
mov
add
mov
push
(bad)
and
inc
adc
mov
mov
imul
loope
mov
push
aam
pop
pop
adc
nop
call
enter
adc
call
inc
rol
int3
xor
mov
ja
xor
cmp
loope
push
enter
pop
inc
ret
cmp
fstp
push
cmp
lock
imul
out
push
ret
mov
jle
je
lea
call
pop
or
mov
ins
jne
enter
pop
test
ror
(bad)
lods
pop
les
mov
jle
or
sahf
in
je
not
add
in
mov
out
pop
(bad)
out
adc
and
push
push
mov
out
mov
ds
(bad)
nop
mov
and
ss
mov
mov
popa
aad
in
es
iret
add
lock
mov
addr16
adc
scas
hlt
mov
and
mov
pop
sub
xrelease
or
jbe
push
imul
adc
jbe
daa
dec
cwde
dec
and
(bad)
scas
add
pushf
jmp
test
jae
fdivr
jbe
daa
push
add
sub
push
pop
cmp
test
jae
inc
sub
and
(bad)
(bad)
push
pop
pop
cmp
xchg
fcmovb
bound
or
xor
ret
xor
or
stc
fld
or
jmp
es
mov
or
(bad)
jb
popf
or
jne
lea
mov
retf
sub
call
dec
rol
push
nop
adc
sbb
jb
into
dec
test
ret
and
pop
mov
and
pop
add
das
cmc
cmp
jae
push
xchg
add
test
ret
cld
sbb
fwait
daa
pop
push
push
lea
ins
inc
mov
dec
movs
inc
sub
add
cmp
sub
mov
repnz
sub
push
add
into
test
popf
inc
ins
and
add
add
pop
pop
mov
icebp
outs
add
add
inc
pop
jbe
test
cmp
xor
aam
inc
add
mov
cs
adc
lods
gs
cmps
push
test
ja
pop
push
fimul
jb
stos
(bad)
loop
add
xchg
icebp
adc
mov
pushf
adc
cli
sbb
push
push
xor
push
mov
push
(bad)
std
repnz
add
sub
mov
test
mov
ins
or
into
mov
or
jo
or
xor
fisub
mov
rcr
(bad)
pusha
stos
mul
mov
xor
lahf
ret
mov
shl
xor
and
mov
adc
clc
nop
or
test
mov
mov
add
adc
or
mov
push
add
paddq
dec
ret
fsub
daa
in
je
inc
and
cld
pop
add
das
adc
xchg
(bad)
pop
mov
mov
mul
cmp
inc
add
and
or
cmp
int3
test
or
out
sbb
and
xor
inc
push
jp
push
es
loop
mov
or
mov
sbb
pop
sub
sbb
(bad)
in
dec
mov
repz
dec
fucomip
cmps
mov
movhps
xor
push
(bad)
cmp
add
adc
imul
pop
jnp
add
dec
je
mov
mov
mov
cs
add
mov
retf
adc
cmps
jp
les
shl
sbb
pop
sub
stos
out
lahf
or
jnp
das
mov
pop
(bad)
fst
lea
pop
js
add
or
scas
mov
xchg
cmps
mov
lahf
stos
clc
fiadd
lock
mov
mov
pop
(bad)
or
dec
add
push
enter
push
adc
jb
lock
adc
adc
in
add
pop
(bad)
add
test
add
fstp
xor
pushf
jp
push
aam
mov
ror
movs
cmp
imul
jg
sbb
sbb
or
inc
nop
je
rol
ret
hlt
es
scas
call
add
adc
jl
xchg
lea
je
or
mov
js
push
and
sbb
stos
cld
adc
adc
int
adc
out
adc
cmp
cmp
cli
ins
pop
gs
stos
movs
dec
pop
push
push
cmpxchg
or
ins
imul
sbb
sbb
icebp
adc
push
mov
sbb
xor
or
adc
fistp
xor
xchg
jmp
pop
scas
(bad)
ss
adc
push
push
call
je
xor
adc
add
(bad)
or
jl
jne
jo
jae
imul
cmp
addr16
lods
adc
xrelease
dec
fwait
or
xor
call
pop
shr
(bad)
xor
and
and
push
stos
and
sub
push
lods
sub
idiv
mov
inc
sub
fmul
push
push
or
rcr
cwde
lock
push
xor
push
les
lea
cmp
push
xchg
cmp
fmulp
ds
mov
xor
ins
mov
add
fdiv
adc
retf
add
cmp
cmp
cld
lea
(bad)
and
jae
add
int3
fistp
cdq
adc
loopne
xchg
cmp
nop
cmp
xlat
ret
xor
xor
fadd
stos
test
retf
daa
fidivr
fcomp
repnz
cmp
jne
ja
into
or
jbe
mov
xor
dec
adc
push
sbb
push
dec
xor
ss
aas
jmp
push
ret
aad
adc
xor
cmp
sub
js
pop
or
push
call
and
retf
push
sbb
add
pop
push
or
call
popf
addr16
call
mov
or
sub
jmp
lock
das
jle
pop
ins
add
jmp
mov
jmp
push
in
xor
call
movs
ret
push
xchg
add
jle
pop
sbb
cmp
es
push
setno
xchg
pop
je
cld
or
icebp
inc
add
pop
xor
and
dec
dec
and
or
pop
(bad)
xchg
lock
aad
push
rcl
sar
rol
add
pop
pop
(bad)
sbb
not
adc
enter
or
out
sub
(bad)
sub
mov
xor
adc
lea
out
or
adc
rcl
(bad)
mov
push
and
mov
push
jns
fisttp
cld
mov
clc
repnz
push
xor
push
dec
add
adc
add
xor
push
mov
sub
cmps
add
mov
loopne
fbld
xchg
xchg
pop
push
retf
cmps
fld
add
mov
mov
jne
ss
pop
adc
push
call
xchg
dec
aam
pavgb
jae
push
push
lea
(bad)
adc
add
push
vzeroupper
inc
xchg
lea
push
cmps
push
push
xchg
pusha
sahf
push
and
pop
push
add
pop
cmp
and
sbb
mov
pop
sbb
mov
aam
test
jl
mov
stos
lea
push
xor
jnp
sbb
add
dec
enter
xor
movs
sbb
push
bound
or
push
dec
fidiv
lds
mov
shr
xor
xor
repnz
jnp
adc
or
cmc
mov
cmp
adc
shl
mov
jae
adc
pop
push
clc
movs
(bad)
sbb
hlt
out
icebp
(bad)
call
outs
sbb
fist
mov
imul
daa
pop
retf
xchg
and
ret
dec
dec
or
ds
clc
test
push
adc
iret
ror
repz
jo
jno
pop
sub
add
fmul
inc
xchg
xchg
adc
xor
add
xchg
call
sub
jmp
xchg
adc
cmc
mov
mov
sub
dec
xor
or
cmp
cmp
shl
cdq
call
aam
je
jmp
unpcklps
adc
sbb
ins
gs
aas
and
data16
mov
lahf
jno
or
mov
lods
sub
retf
sbb
add
call
cmc
push
inc
(bad)
movs
xor
not
pusha
cmp
mov
cmp
mov
and
mov
xchg
adc
jmp
ret
out
mov
aad
xor
mov
leave
(bad)
add
cmp
inc
mov
pusha
push
sahf
ins
cmp
out
sbb
xor
js
adc
adc
setno
sub
gs
add
js
ins
sbb
enter
cmc
cmp
popa
(bad)
pop
or
push
movs
imul
retf
and
pop
adc
outs
daa
pop
call
pop
mov
pop
cmp
mov
or
retf
sbb
sbb
je
bound
dec
cmp
mov
dec
movs
pop
push
sbb
test
xor
pusha
or
lock
outs
rol
push
push
dec
test
out
jl
imul
and
daa
cmp
push
push
pop
xor
mov
(bad)
mov
and
sbb
icebp
xlat
pushf
and
push
add
es
sbb
cdq
fisttp
mov
sbb
cli
cld
out
inc
nop
dec
sub
adc
or
test
sbb
call
xor
inc
sbb
sar
add
push
push
lods
xor
pop
pusha
dec
imul
cli
and
scas
mov
mov
idiv
pop
call
mov
mov
cs
inc
mov
dec
cmp
test
or
add
mov
sbb
jb
push
sbb
inc
or
push
push
and
shl
jae
xor
and
push
xor
xchg
repz
(bad)
sbb
xchg
mov
mov
outs
mov
call
add
dec
inc
sub
mov
xchg
mov
shr
nop
inc
pop
cmp
sbb
movs
addr16
inc
addr16
push
lahf
lock
jle
mov
adc
jb
sbb
inc
cwde
fnstenv
daa
push
sub
add
(bad)
or
and
inc
dec
enter
and
lea
pop
ret
fisub
inc
ror
call
lods
std
std
stos
dec
je
daa
daa
pop
sub
popa
sub
scas
add
jmp
lods
push
sub
jmp
mov
xor
mov
push
push
adc
call
enter
pop
popf
hlt
inc
outs
add
ds
iret
push
gs
movs
jb
mov
repnz
(bad)
int
inc
dec
lock
jge
mov
jmp
rol
xchg
adc
pop
xchg
xor
push
fisub
dec
mov
es
or
and
enter
aad
cdq
fsubr
pop
xchg
xchg
fild
cmp
adc
leave
popa
mov
mov
jp
cs
jmp
xor
mov
adc
mov
or
push
call
je
dec
sub
push
adc
lea
mov
inc
mov
xchg
dec
imul
and
ss
xchg
sahf
shl
mov
push
imul
nop
cmp
push
push
add
add
cwde
jg
pusha
test
or
call
and
outs
jbe
adc
mov
pop
jno
or
enter
push
out
jne
dec
push
xor
pop
mov
sahf
xor
inc
cdq
add
jnp
cmp
inc
jo
cmp
aam
add
inc
aas
(bad)
and
fsubr
jecxz
xchg
repz
add
call
fiadd
push
repnz
mov
lods
rol
movs
dec
ds
sub
adc
push
sar
nop
inc
ficom
ret
add
test
inc
and
out
pop
cmp
pusha
fmul
dec
jne
cs
ins
(bad)
int
cld
or
jne
inc
sbb
xor
or
fs
popf
jo
(bad)
mov
mov
les
adc
in
and
fcomp
bound
ds
sbb
cmc
mov
mov
lods
cwde
es
and
pop
mov
push
je
adc
xchg
ins
cmc
dec
mov
in
and
mov
jnp
mov
and
gs
xchg
sahf
cld
sbb
push
sbb
mov
test
dec
jg
jbe
nop
dec
popf
mov
leave
and
ret
lahf
jl
jl
adc
cmp
xor
jb
mov
sub
rol
pop
mov
xlat
mov
adc
pop
imul
add
push
or
or
test
mov
push
xchg
mov
push
cmp
push
adc
xchg
out
xor
(bad)
call
bound
mov
sbb
push
sub
ss
and
sbb
inc
push
adc
and
pop
or
das
retf
inc
rol
mov
outs
jl
les
mov
push
jl
or
ret
jmp
mov
inc
dec
or
inc
fadd
pop
mov
push
or
cld
clc
or
sbb
or
outs
push
push
outs
je
mov
stos
retf
shr
movs
adc
dec
leave
inc
jno
xor
mov
lds
int3
ss
bts
cmp
je
test
and
sub
pop
sbb
push
cwde
shl
je
push
mov
inc
fdivr
inc
xchg
jl
add
stos
mov
add
lods
aaa
cmps
adc
scas
or
mov
pushf
add
loopne
sub
cmp
add
sbb
movs
xchg
or
push
or
adc
or
into
ins
and
sbb
ins
call
cmp
pop
gs
scas
repz
ds
enter
js
and
inc
cmc
loope
mov
clc
mov
sub
mov
inc
push
sbb
sub
fwait
rcr
or
push
pop
sbb
push
adc
or
xchg
sbb
and
pushf
cmp
xchg
lahf
cdq
test
inc
cmp
push
adc
add
in
in
add
jbe
fucomp
mov
inc
fst
xor
push
push
mov
or
cld
jmp
or
ret
rol
inc
push
and
xor
aaa
cwde
push
cmp
push
or
jb
scas
dec
mov
ins
cdq
mov
inc
push
pop
xlat
(bad)
sbb
fisub
xchg
(bad)
loopne
add
sub
or
inc
ret
pop
xor
add
test
fs
jb
or
(bad)
push
lods
stos
or
and
neg
adc
jae
lea
inc
rol
mov
cmp
jl
jle
push
jne
pop
in
push
cld
stos
push
push
mov
and
cmp
xchg
dec
mov
fidiv
das
shr
cmp
je
mov
nop
jne
scas
out
inc
xor
xor
je
mov
stos
inc
sbb
cmp
jno
adc
ins
add
lods
cmp
neg
xor
loop
cmovge
add
popa
push
cvtdq2ps
(bad)
mov
push
sar
inc
dec
push
push
icebp
inc
(bad)
mov
cwde
retf
jns
and
pop
loop
xchg
loop
mov
or
push
inc
cs
add
sub
mov
and
inc
xlat
push
adc
ror
mov
push
mov
jno
es
test
stos
sub
(bad)
jg
shr
mov
sub
ins
lods
aad
or
stos
bound
sub
lahf
mov
add
sub
jne
inc
add
xor
(bad)
(bad)
jns
cmp
mov
aaa
push
call
add
push
clc
mov
inc
inc
cmp
dec
or
mov
pusha
cmc
cmp
jmp
adc
rol
jbe
cmp
push
lods
mov
ror
out
push
sub
js
das
mov
xor
(bad)
gs
adc
cmp
mov
mov
in
sbb
inc
add
cmp
inc
mov
in
xor
in
jp
and
and
sbb
inc
push
aad
pop
add
add
add
lods
add
and
fsub
cld
std
loope
std
inc
mov
call
inc
xchg
shl
aad
push
ss
mov
idiv
not
les
mov
popa
loop
and
adc
inc
or
cmp
mov
push
adc
aad
push
imul
ret
rol
or
lods
and
jmp
call
fmul
mov
xchg
enter
mov
inc
cmp
sbb
dec
pusha
lea
sahf
fwait
add
bound
xchg
into
xchg
retf
cmp
add
jl
call
and
cmp
jl
pushf
jge
sub
ins
and
jmp
cmc
and
xor
repz
or
call
adc
sbb
push
add
mov
inc
sbb
ror
out
movs
mov
sbb
out
mov
mov
adc
cwde
xchg
loopne
sbb
pop
idiv
icebp
inc
inc
loopne
xor
leave
pop
js
and
aam
gs
inc
pop
fld1
dec
jecxz
shl
mov
push
cwde
call
mov
inc
mov
ret
cmp
and
jmp
add
dec
mov
push
adc
popf
sahf
outs
mov
jl
inc
shl
pop
mov
jmp
call
nop
adc
jae
xor
ud2
mov
pop
das
pop
sbb
push
add
jo
jmp
and
stos
std
adc
mov
cmp
dec
dec
mov
nop
ja
cmp
jne
js
(bad)
pop
test
inc
adc
adc
push
mov
mov
ins
xchg
outs
sahf
adc
fstp
ins
ins
outs
jb
outs
push
push
add
iret
jo
jno
addr16
jae
sbb
je
mov
mov
cs
fs
hlt
cmp
iret
and
rcr
add
or
imul
(bad)
call
push
pop
lock
cmps
push
fdiv
(bad)
sub
pop
cmp
adc
cmp
int3
jo
rcr
retf
sbb
and
outs
fld
fild
arpl
outs
in
inc
iret
sbb
enter
test
out
inc
cmp
les
xchg
ja
mov
push
movs
and
js
lds
push
jg
xchg
gs
pop
fist
mov
cmp
fsub
lock
or
bound
sub
and
cmp
fist
leave
mul
dec
aad
leave
sub
jl
lods
jge
pop
and
call
pop
jge
mov
arpl
fimul
xchg
push
or
fdivr
sub
sbb
loopne
loope
sub
pop
add
jns
or
call
daa
add
jnp
mov
add
or
and
and
push
fnstenv
mov
lea
popa
test
jmp
xchg
push
add
sbb
add
mov
sbb
inc
je
dec
mov
add
mov
cmp
sub
or
add
ror
scas
es
gs
lods
in
cmp
mov
cmp
sbb
dec
push
mov
mov
add
ja
xlat
jmp
inc
xor
push
sub
es
leave
or
add
or
gs
mov
mov
int3
mov
mov
mov
mov
loope
mov
pop
and
push
push
mov
adc
or
inc
pop
and
retf
syscall
or
ret
push
and
loopne
das
add
sbb
ins
adc
pop
push
lods
fsubr
test
push
jns
fadd
jb
fld
adc
pusha
add
add
xchg
imul
push
pop
mov
movs
das
popa
and
sub
pop
arpl
inc
lods
sbb
xor
adc
cmp
popf
inc
jp
shl
cmp
add
(bad)
jae
leave
pop
inc
mov
adc
and
add
push
and
je
int
push
jo
mov
sbb
inc
popf
mov
fsubp
adc
sub
into
sub
scas
add
(bad)
xor
mov
clc
jmp
loopne
jno
dec
xchg
sub
les
ds
sub
xchg
inc
sbb
repz
or
xchg
cmp
jmp
xchg
enter
dec
popa
aad
fsub
jae
cmp
loope
pop
and
xchg
mov
and
cmp
aam
pop
jg
imul
inc
mov
clc
ror
inc
mov
sti
mov
dec
and
call
add
arpl
dec
adc
dec
push
in
inc
mov
mov
mov
rol
icebp
imul
inc
sti
int
(bad)
dec
adc
mov
(bad)
xor
inc
or
inc
outs
in
jmp
fcmove
inc
and
dec
loopne
sbb
(bad)
jnp
add
fisttp
adc
jae
jbe
not
loop
xchg
loopne
inc
sbb
addr16
push
and
and
ja
test
sbb
mov
call
lock
pop
cmp
jne
out
fmulp
jne
xchg
and
call
imul
jno
pop
pop
dec
and
sbb
iret
mov
mov
call
dec
pop
sahf
rcl
adc
(bad)
pop
(bad)
int3
push
rcr
sbb
out
mov
pop
xchg
and
je
enter
sub
xor
or
fistp
nop
cmps
or
sahf
repnz
push
inc
push
and
(bad)
loope
(bad)
push
test
out
dec
test
mov
data16
push
out
xor
ror
inc
(bad)
mov
repnz
push
je
mov
jg
das
mov
mov
jg
push
mov
popa
in
stc
in
sub
mul
in
and
or
frstor
je
mov
ficom
test
fs
rcr
pop
dec
mov
int3
cmps
inc
aaa
push
je
int
(bad)
jno
mov
add
out
mov
(bad)
add
push
mov
xor
call
jnp
xor
cmp
inc
inc
jmp
mov
jo
mov
ins
mov
mov
lock
and
popf
dec
push
jnp
cmps
add
xchg
or
out
mov
aad
mov
mov
push
das
pop
sbb
retf
push
sub
je
clc
mov
add
push
add
retf
jns
or
jae
call
test
je
push
int3
sub
xchg
cmp
div
mov
loop
mov
mov
adc
and
shl
fsub
add
pusha
inc
in
jl
in
mov
sar
ret
mov
jmp
mov
push
push
push
inc
inc
sar
push
sbb
adc
stos
je
mov
pop
sbb
ret
lahf
mov
or
(bad)
and
cmp
shl
cwde
ror
dec
or
adc
sub
call
call
ds
xor
cmps
add
rcl
push
clc
sub
sub
and
popa
sub
popa
popf
sbb
shl
adc
jnp
jl
add
push
ret
jo
pusha
rol
hlt
add
daa
xor
cmps
shl
lea
rol
repnz
loopne
lods
jnp
sub
xor
in
jle
sbb
aaa
xchg
call
xchg
sbb
fsub
xor
fdiv
jb
or
pop
cmps
mov
pop
mov
push
mov
inc
xchg
out
rol
add
out
jmp
pusha
js
push
mov
dec
jbe
aas
pusha
retf
ins
vsubsd
test
jp
mov
repz
scas
sar
outs
cld
scas
jp
mov
test
pushf
and
push
aam
loopne
mov
adc
or
fsub
fiadd
push
cmp
adc
call
cwde
out
xchg
aas
or
add
repnz
ss
jmp
and
cmp
ret
or
push
jmp
ret
clc
push
xor
fst
add
lea
retf
or
adc
push
xor
push
shl
out
sub
or
ja
leave
sub
call
jo
mov
mov
inc
and
xor
jns
sbb
push
jg
and
sahf
push
aaa
xor
push
dec
out
push
xchg
push
(bad)
adc
out
repz
and
je
cmp
push
push
cmp
pop
aaa
cdq
nop
retf
mov
ja
sub
and
sbb
lea
frstor
or
sbb
(bad)
in
xchg
mov
pop
pop
push
sub
jmp
cmp
jl
(bad)
add
jl
cmp
jmp
and
dec
cmp
adc
les
or
les
jmp
scas
inc
mov
fild
fs
adc
enter
cdq
ss
pop
adc
jmp
xchg
push
xor
dec
push
jo
adc
leave
enter
ficom
and
mov
inc
repz
and
es
inc
(bad)
sbb
xchg
mov
scas
cmp
je
push
xor
popa
dec
jne
adc
sar
inc
jle
add
call
movs
and
push
pusha
sub
pusha
jbe
fsincos
into
stos
mov
inc
je
xchg
add
jmp
sbb
popa
and
push
mov
jmp
push
ins
xor
jae
jge
(bad)
out
pop
dec
adc
nop
inc
movs
add
std
aad
cwde
xor
imul
or
jne
retf
loopne
int3
adc
js
dec
xlat
or
daa
call
sub
stos
mov
cs
mov
jb
mov
adc
cmp
rcr
enter
lock
pusha
push
fsubr
aam
leave
std
mov
aam
test
cmp
dec
xor
jne
shr
cmp
sbb
(bad)
jb
adc
xor
shr
mov
cmp
in
mov
test
cmp
mov
dec
jnp
adc
xor
data16
pushf
sub
popa
sbb
cmps
adc
fadd
retf
cmp
das
popa
mov
inc
stos
jnp
cs
add
nop
add
cmp
stos
push
xchg
xor
jmp
xor
mov
movs
ds
dec
ret
pop
push
cmc
xchg
push
mov
sbb
cmps
mov
lock
in
fsubp
mov
xor
push
rcr
mov
rcl
mov
jo
sub
jnp
outs
mov
jbe
test
jle
push
push
push
dec
pusha
add
in
aaa
clc
pop
add
jnp
stos
jg
lea
je
and
add
call
in
mov
ret
aas
xchg
or
mov
add
cmp
dec
les
ror
cli
scas
shl
xchg
iret
and
les
pop
sub
dec
cmp
mov
or
xchg
push
cmp
sub
or
add
retf
mov
(bad)
rol
add
shl
popa
mov
adc
dec
push
push
add
cmp
mov
adc
call
mov
xchg
dec
into
leave
pop
or
in
mov
add
add
dec
mov
scas
pop
mov
call
push
push
cmp
call
or
push
mov
push
out
push
mov
cmp
mov
fnsave
adc
inc
mov
lods
and
test
inc
jecxz
cmps
xor
call
(bad)
andnps
sar
scas
mov
or
push
mov
jo
jns
cld
add
jo
fstp
or
xor
add
retf
sub
jbe
push
movs
and
mov
loope
xchg
(bad)
mov
sub
sar
add
mov
jge
xor
push
shl
cmp
addr16
or
cdq
hlt
out
es
push
mov
call
jo
inc
cmp
mov
cld
xor
jno
push
cmp
shl
icebp
mov
add
lock
daa
push
lods
mov
test
cmp
pop
and
loope
cmps
or
popf
adc
dec
adc
sub
cs
adc
mov
into
fwait
test
lods
gs
shl
and
cld
gs
add
cmp
push
in
(bad)
fs
or
shl
push
out
inc
mov
and
scas
mov
pop
rcl
add
ret
mov
push
cdq
adc
add
dec
scas
nop
push
jo
jecxz
or
shl
dec
push
fidivr
mov
into
test
xor
sbb
loopne
jb
add
call
add
ficom
push
add
jo
pop
(bad)
(bad)
adc
add
lea
sti
jae
cmp
(bad)
and
or
mov
lea
sub
or
push
xor
push
jge
xchg
or
aam
int
push
or
adc
mov
(bad)
das
fdivp
inc
mov
ins
sbb
ret
mov
outs
and
sbb
and
and
dec
enter
popf
or
shr
sub
sbb
lea
pushf
imul
lea
adc
out
mov
arpl
push
sbb
inc
ins
test
add
add
lods
add
inc
lods
lods
jb
fisttp
add
fucomip
push
fs
sbb
adc
clc
icebp
call
loopne
xor
mov
adc
nop
and
test
xor
and
inc
rdpmc
push
and
or
sub
imul
ret
push
fst
and
daa
sahf
outs
or
sub
inc
inc
rcl
out
hlt
or
sub
mov
push
ins
push
cmp
mov
xlat
je
fadd
aad
retf
jne
iret
mov
push
pop
mov
leave
push
jle
lahf
mov
pushf
mov
js
push
inc
ds
pop
mov
dec
adc
inc
mov
shr
pop
fadd
mov
add
js
in
rcr
pop
cli
repz
ret
xor
push
xor
les
sbb
loopne
or
stc
add
call
jbe
test
or
mov
cmp
pop
rcr
(bad)
in
cdq
push
mov
add
lods
(bad)
jl
jmp
outs
add
je
popa
sbb
paddw
sbb
sub
push
push
loope
mov
or
mov
outs
and
or
xor
lods
out
adc
cmp
xchg
nop
add
mov
lock
out
mov
in
mov
adc
jl
pusha
imul
aas
add
fsubr
ins
pop
adc
popa
sbb
mov
int3
call
nop
push
movs
retf
jecxz
inc
imul
sub
mov
push
mov
ret
sbb
inc
call
sbb
fs
cwde
pusha
test
pop
inc
rcl
pop
cmp
sbb
imul
push
add
ror
mov
cmp
xor
inc
call
cmp
stos
push
lods
gs
xor
jo
pop
xor
cmp
fs
jae
lock
jl
add
nop
mov
inc
cs
imul
sar
xchg
movs
das
jo
pushf
add
jmp
jg
icebp
call
pop
dec
test
retf
cmp
test
fwait
lock
sbb
and
xor
and
push
nop
xor
or
lock
es
outs
xchg
out
data16
call
inc
dec
cmp
jbe
inc
retf
inc
dec
inc
sti
rol
push
mov
jo
fs
and
mov
mov
push
push
inc
les
rcl
push
movs
adc
inc
cwde
pusha
fbld
es
pusha
repnz
ret
pop
pusha
pop
repnz
add
fmul
test
or
mov
xor
loopne
cmp
pop
inc
test
sbb
mov
pop
add
and
or
jmp
in
xchg
mov
dec
and
mov
call
cmp
imul
(bad)
sbb
mov
jno
xchg
pop
(bad)
xchg
push
or
sahf
add
sbb
xchg
pop
nop
sub
xchg
ins
dec
std
cmp
xchg
ja
cmps
lahf
push
push
call
cld
add
mov
cmp
cmp
push
addr16
cmp
mov
sbb
ds
repnz
ret
rcl
test
mov
add
ss
push
and
gs
outs
dec
xlat
push
push
cdq
and
sub
dec
(bad)
or
push
call
mov
repnz
shr
(bad)
jle
(bad)
cmp
out
call
dec
imul
dec
ret
movs
adc
int3
push
adc
loopne
dec
in
aaa
cdq
pop
push
add
jo
shr
imul
jle
test
push
xor
sbb
aas
dec
mov
xchg
push
ror
jmp
fidivr
addps
push
and
adc
add
retf
pop
jl
lock
in
fsub
inc
inc
inc
sub
sar
movs
mov
or
mov
pop
mov
mov
lock
and
cmp
add
sbb
repnz
ds
or
jmp
loopne
pop
call
push
pop
mov
repz
test
or
adc
push
loopne
mov
iret
sub
mov
fcomp
bound
cmps
test
pop
mov
sahf
pusha
push
pushf
jno
clc
and
lock
or
ficomp
dec
inc
cs
pop
call
cmp
(bad)
mov
ins
(bad)
aad
mov
mov
inc
pop
lock
dec
popa
adc
mov
pop
popa
jns
or
add
fild
lock
sub
and
inc
push
pop
test
or
and
sbb
jno
loop
sbb
dec
xor
mov
pop
xchg
dec
dec
mov
or
jbe
mov
sub
sbb
mov
push
popa
ret
(bad)
pop
adc
out
xchg
(bad)
das
or
dec
cmc
xlat
add
pop
adc
(bad)
sub
inc
inc
jl
push
push
clc
or
in
add
or
adc
in
fmul
mov
nop
cmp
pusha
or
cmp
jnp
xor
aas
pop
mov
cld
mov
js
scas
jne
push
mov
jecxz
pop
into
adc
repz
inc
push
jl
sbb
mov
cmps
gs
jecxz
mov
adc
dec
mov
mov
pop
movs
pop
aam
pop
add
push
sub
mov
xor
pop
jb
cmp
add
sub
out
mov
sub
pop
push
xchg
not
lea
push
jb
pop
out
sub
and
lods
and
mov
xchg
adc
scas
jle
movzx
push
lahf
push
test
push
push
push
pop
mov
pop
ins
pop
dec
or
dec
or
leave
sub
sbb
movs
popa
fsubr
ror
pushf
sbb
in
into
pop
loope
nop
or
xchg
adc
cmp
inc
outs
adc
push
push
pushf
inc
fisub
adc
lahf
sub
lds
mov
ja
(bad)
or
add
sub
je
(bad)
mov
sub
jmp
cmp
or
and
pop
jle
call
jp
and
mov
mov
adc
xchg
jp
jmp
clc
sbb
les
jp
push
ins
test
push
call
stos
push
jo
sub
sbb
outs
sub
test
repnz
or
push
xchg
jle
mov
sub
add
(bad)
xor
mov
jp
push
mov
movs
int
das
push
std
jl
xchg
movs
dec
ins
test
mov
add
cmp
into
test
jle
mov
sbb
pop
push
outs
fild
add
(bad)
fisttp
jb
adc
adc
rol
cmp
jne
add
rcr
imul
adc
sbb
and
pop
imul
fisubr
clc
arpl
movs
outs
inc
test
push
stos
lds
loopne
xor
push
jnp
movs
jns
sti
mov
cmp
pop
jnp
outs
outs
inc
ret
out
add
jl
outs
sbb
inc
call
sub
push
fisubr
call
mov
jmp
and
test
jl
sbb
je
ss
les
sahf
ja
adc
push
xlat
std
dec
mov
aas
add
mov
cmp
js
push
retf
outs
je
test
pop
sbb
inc
inc
stos
push
int3
shl
jmp
add
mov
ret
sar
inc
cmp
rol
ret
scas
lea
sub
pxor
add
pushf
or
add
retf
pop
lahf
es
sub
pop
xchg
sbb
mov
test
or
and
call
push
push
cmps
add
xchg
xor
or
mov
lock
sbb
scas
add
jl
add
aas
dec
cdq
jne
mov
scas
mov
jmp
rcr
adc
das
xor
add
inc
bound
and
addr16
ins
ja
leave
push
das
mov
ins
std
pop
(bad)
outs
mov
fisttp
pop
add
jmp
enter
push
inc
or
sub
xor
jp
into
inc
mov
mov
cmp
out
dec
or
add
sbb
mov
fwait
gs
scas
leave
or
in
mov
cmp
rcr
push
push
(bad)
cmp
add
jbe
(bad)
adc
push
out
dec
pop
add
mov
mov
popa
adc
dec
or
push
add
push
clc
mov
push
call
not
mov
fwait
lock
push
dec
addr16
push
cdq
sahf
je
popa
sub
pop
push
es
push
and
jmp
fadd
lock
sbb
les
sbb
shl
and
lds
lock
stos
pop
adc
jp
xchg
pop
icebp
mov
and
into
mov
add
inc
adc
pop
xor
dec
sahf
mov
adc
push
imul
clc
xchg
and
or
cmp
or
inc
sbb
out
xor
pop
je
inc
push
mov
add
pusha
xchg
das
and
cli
mov
je
ins
push
iret
push
cdq
lea
push
ret
sub
fnstenv
dec
ror
call
xchg
cmp
popf
xor
loopne
test
cmp
jno
push
pop
cmp
in
pop
dec
enter
push
sbb
dec
jmp
jns
cmp
test
and
es
add
inc
sbb
add
mov
pop
iret
mov
pop
dec
gs
and
adc
sbb
movs
ins
dec
lock
add
popf
xchg
das
repnz
rol
mov
jl
call
cli
adc
mov
inc
inc
push
or
ret
inc
ins
repz
test
call
int3
cli
pop
mov
pop
pop
pop
push
jns
jmp
stos
xchg
adc
or
sbb
jne
lods
mov
call
xor
xchg
mov
imul
pop
pop
dec
(bad)
bound
test
lock
std
and
sbb
shr
push
dec
stos
or
or
jle
adc
jmp
lea
push
pop
dec
add
je
dec
and
call
mov
retf
jg
and
rcl
lods
sbb
(bad)
dec
mov
(bad)
sub
stos
mov
lea
outs
out
test
push
or
and
dec
xchg
lea
adc
jmp
rcl
pop
add
popa
adc
push
add
mov
push
cmp
adc
loopne
mov
outs
mov
shl
or
ins
add
inc
icebp
cwde
in
movs
xor
fnop
int
xchg
retf
ror
mov
inc
sub
xchg
test
sbb
nop
jns
fbstp
push
movs
ins
xlat
add
popa
mov
push
pop
fmul
dec
in
xor
and
sbb
lock
add
inc
pop
dec
imul
data16
(bad)
sti
inc
adc
or
pop
fbstp
pushf
inc
pop
or
fprem
push
sbb
pop
jmp
nop
pop
mov
popa
pop
pop
gs
fs
adc
cmp
jmp
mov
outs
push
lock
xor
push
jo
add
cmp
movs
dec
std
and
retf
inc
mov
jp
dec
mov
call
call
adc
push
jg
inc
cdq
mov
mov
mov
gs
not
push
imul
pop
enter
sbb
pop
ret
lods
mov
sbb
jmp
sub
or
sub
dec
and
shr
cmp
xor
dec
cmc
mov
test
repz
push
mov
inc
push
xchg
lock
dec
xor
xchg
add
or
ins
test
nop
cmc
mov
add
sub
movs
pusha
iret
xlat
psubsb
sub
cwde
inc
xlat
je
inc
sub
jmp
in
sbb
inc
xor
call
sub
cmp
lea
pop
add
lods
push
ins
add
dec
call
or
pop
mov
xor
lods
mov
mov
xor
or
rol
mov
fs
outs
jo
fldpi
adc
inc
cmp
jmp
mov
jge
rol
stos
mov
pop
xchg
cmc
adc
out
push
adc
inc
add
sbb
add
popf
cmp
or
mov
push
or
mov
ret
jnp
xchg
pop
mov
in
dec
shl
push
fcom
pop
cmp
in
pop
or
add
pop
cmp
inc
xor
lock
sub
mov
mov
imul
je
test
mov
mov
cmp
je
loop
enter
ret
aam
inc
aas
and
jmp
aad
test
adc
pop
out
pusha
xchg
mov
dec
popf
nop
mov
add
jmp
fdiv
inc
shl
pop
jl
jg
les
ins
push
call
jge
ret
bound
or
mov
push
neg
jmp
push
jp
cmp
sbb
jmp
cmp
mov
cmp
movsx
adc
shl
sbb
pop
fcom
bound
sar
mov
shl
mov
adc
mov
mov
icebp
call
jae
test
add
or
test
(bad)
dec
sub
mov
cmp
in
add
dec
add
mov
pusha
aas
or
movs
mov
fiadd
or
shr
inc
test
mov
mov
adc
shl
dec
in
dec
pop
push
leave
mov
adc
mov
fcom
cmp
inc
mov
in
inc
mov
mov
dec
in
sbb
and
inc
loopne
rol
xor
dec
add
add
ror
cmp
ss
lea
cmp
mov
(bad)
das
call
jae
xchg
adc
mov
adc
add
sbb
fld
test
aaa
fiadd
mov
mov
inc
call
and
mov
push
sub
sub
imul
jns
fs
add
sbb
add
inc
sub
adc
push
mov
xchg
or
int3
and
push
or
or
nop
mov
std
or
sub
add
pop
mov
xchg
and
dec
xchg
adc
or
hlt
xchg
inc
and
sahf
push
push
in
imul
push
inc
add
sbb
or
inc
sti
sbb
cmp
jae
sub
fst
dec
mov
or
cmp
adc
jbe
stos
mov
sbb
dec
ficom
outs
and
movs
cmp
lahf
in
and
(bad)
push
jp
sbb
sub
call
out
popf
or
add
xchg
icebp
sub
repz
xor
add
inc
cdq
mov
jle
inc
mov
mov
cmp
movs
adc
inc
and
push
scas
pushf
sbb
mov
lahf
jge
xchg
sbb
sbb
cmp
xor
je
out
pop
cmp
mov
and
inc
fsubr
outs
fldcw
cmp
jb
addr16
leave
adc
sub
cmp
ins
push
outs
cmp
sub
pusha
inc
inc
or
mov
nop
sub
xlat
cmc
sbb
pop
jb
pushf
adc
and
dec
popf
sbb
jl
add
sub
cmp
imul
inc
or
retf
fcomp
push
mov
mov
add
pop
call
sar
jbe
sbb
inc
cs
push
lods
push
jnp
out
or
loopne
or
or
loopne
or
and
and
loopne
fwait
cmc
ins
inc
mov
imul
or
jns
rol
rcr
aam
mov
or
in
add
mov
sub
sub
inc
adc
add
pop
push
jo
push
mov
pop
pop
add
mov
test
lock
add
lods
jae
mov
jge
dec
dec
ja
adc
mov
push
(bad)
sub
lea
sbb
xchg
jl
pop
add
sub
data16
sub
xor
mov
adc
into
and
gs
pop
cdq
dec
aas
imul
inc
into
mov
shl
xor
lea
cmp
push
test
hlt
mov
sti
push
and
xchg
inc
test
add
sbb
add
sbb
sub
stc
ins
push
sub
retf
sbb
retf
pop
ret
push
and
and
adc
fcom
and
mov
jmp
(bad)
or
cmp
in
push
or
sbb
call
in
adc
pusha
stos
mov
loope
ins
loop
xchg
inc
adc
xchg
inc
and
sbb
dec
or
int3
fs
xchg
pushf
sub
sub
pop
adc
pop
nop
lea
in
pop
jne
idiv
or
push
sub
fcomp
ins
dec
pop
push
and
sbb
mov
mov
mov
fs
shr
fisttp
adc
sbb
jmp
sub
dec
fstp
shl
dec
nop
jne
mov
jecxz
push
and
dec
ins
lea
outs
push
dec
lea
outs
mov
push
cmps
push
push
jo
adc
test
data16
sbb
xchg
xchg
sub
adc
add
xor
adc
dec
movups
add
mov
mov
call
jl
es
sub
xor
mov
sahf
and
or
adc
or
stc
inc
pop
je
aam
retf
push
inc
pop
ins
and
xchg
sti
or
fadd
push
jbe
inc
mov
dec
ja
inc
inc
data16
dec
mov
jmp
mov
cmp
xor
push
es
mov
add
inc
push
push
sar
jb
scas
lea
cmp
jae
mov
inc
dec
mov
add
cmp
jp
fnsave
push
outs
xor
or
mov
pop
mov
mov
add
push
retf
or
cdq
mov
dec
out
push
push
pop
and
repnz
mov
js
pop
shl
dec
xchg
or
mov
mov
add
pop
stc
jg
or
mov
clc
adc
push
sub
enter
dec
xchg
dec
movs
push
cmps
inc
out
push
sbb
dec
out
jne
arpl
push
sub
js
sub
cmp
xor
adc
cmp
cmp
bound
sbb
loopne
xor
mov
mov
rcr
call
aaa
js
sbb
shr
imul
ins
pusha
adc
push
ds
scas
mov
sub
in
aam
movs
cmps
dec
fwait
cmps
(bad)
xchg
movs
cmps
sub
inc
inc
pop
cmp
jb
xchg
inc
pop
ret
pop
in
imul
into
in
push
mov
js
shl
das
stos
push
cmp
pop
test
bsr
jmp
inc
dec
mov
jp
xor
inc
aaa
inc
call
dec
shl
pop
push
xor
js
xor
push
ds
test
inc
mov
sbb
shl
mov
and
pop
or
and
inc
aas
jbe
in
ja
mov
or
ja
ds
gs
push
inc
sar
add
pop
add
shr
fnsave
sub
pop
jo
repz
adc
jg
out
lock
xor
mov
in
or
je
or
inc
das
js
(bad)
and
xor
dec
adc
add
stos
inc
sub
add
mov
hlt
lods
(bad)
add
sub
xor
pop
scas
nop
addr16
push
cmp
and
jb
push
cmp
stos
or
push
and
(bad)
mov
sbb
lahf
jmp
pop
into
mov
aam
icebp
xor
loopne
inc
mov
adc
in
jbe
es
xchg
fiadd
xchg
in
icebp
in
leave
cmp
xor
sbb
inc
cmp
push
push
push
repz
and
sub
pop
sub
cmps
push
jp
xor
sbb
adc
xor
push
sub
scas
pop
jmp
and
or
daa
pusha
inc
add
repnz
mov
pushf
sub
jl
adc
mov
cmp
jns
adc
mov
iret
pop
cmp
sbb
push
dec
mov
outs
xchg
jle
adc
jne
lods
pop
mov
mov
sti
xor
and
adc
dec
inc
inc
dec
xor
add
jbe
inc
cmp
push
fdiv
dec
int
xor
je
vgetmantpd
inc
add
je
xor
out
jp
sub
mov
adc
(bad)
enter
xor
adc
nop
push
cmp
mov
jmp
cli
fsub
xlat
sub
popa
fst
and
add
xchg
adc
and
aas
cs
mov
js
inc
mov
inc
hlt
push
inc
cmp
xchg
push
jns
inc
xchg
rol
inc
push
or
push
retf
cmp
inc
adc
sub
xor
pop
out
cmp
test
xor
movs
xchg
pop
mov
sbb
adc
mov
jo
into
sub
cdq
mov
inc
ret
sub
inc
clc
cwde
call
in
pusha
mov
xchg
inc
je
cmp
pusha
sbb
push
test
rcl
into
lds
xlat
in
xchg
or
push
out
ror
add
mov
dec
adc
xor
fadd
push
mul
repz
iret
push
mov
mov
call
rol
lock
xor
dec
fiadd
jp
adc
dec
cmp
or
mov
shr
mov
push
or
sti
mov
popa
mov
inc
add
push
adc
jl
dec
mov
je
arpl
jbe
ds
(bad)
je
fimul
js
fnstcw
int
in
pop
jns
data16
outs
jnp
mov
mov
jle
add
sar
push
or
(bad)
mov
cmp
adc
xchg
sub
jb
mov
nop
sbb
mov
pop
ret
push
sbb
jae
adc
sbb
test
ror
push
(bad)
movs
or
mov
push
sub
std
mov
add
add
loopne
cs
call
sub
push
jb
leave
add
xor
add
inc
sub
mov
jno
sub
add
and
sub
rol
outs
lods
iret
mov
sub
mov
mov
cmp
cmp
test
sub
movs
add
push
mov
inc
sub
pushf
pop
adc
pushf
adc
pop
repz
adc
sub
inc
push
or
pop
fstp
ins
or
mov
add
pop
add
mov
jnp
and
enter
je
stos
sbb
inc
sbb
push
push
jo
jg
hlt
pop
ins
iret
xor
inc
sbb
int
jp
lea
inc
push
and
adc
pop
jmp
sbb
fwait
inc
sub
leave
add
sbb
inc
cdq
movs
xor
inc
push
sbb
cwde
mov
sbb
xor
(bad)
sbb
sbb
jbe
sti
sbb
pop
jecxz
xor
sub
fcom
popa
mov
rcl
mov
cs
sub
push
nop
and
fstp
inc
push
pop
loope
push
dec
mov
nop
cmc
dec
inc
loopne
stos
sbb
lods
ins
adc
and
cmp
or
stos
je
je
and
sbb
dec
xor
jmp
test
dec
sahf
call
jmp
js
sbb
mov
and
inc
sbb
sbb
loopne
nop
aad
scas
test
pop
add
add
es
sub
push
mov
retf
enter
xor
xlat
or
fadd
data16
mov
mov
sbb
mov
mov
je
pop
mov
inc
cs
stos
enter
xor
mov
mov
cmp
paddsw
sti
xor
cli
and
xor
or
add
dec
retf
sbb
data16
mov
push
data16
dec
inc
pushaw
ret
test
mov
cli
xchg
sub
xchg
shl
stc
and
push
inc
mov
add
adc
jne
push
or
dec
jbe
je
lods
xchg
sub
popa
dec
jae
test
nop
add
and
in
cwde
cmp
pop
enter
inc
hlt
in
sbb
pushf
mov
sbb
push
xlat
loopne
retf
je
ja
jb
dec
test
sbb
jle
push
ins
mov
inc
(bad)
(bad)
jge
xor
and
lock
inc
ret
xor
lock
pop
xchg
or
push
dec
dec
or
jmp
jns
and
outs
sbb
jmp
das
mov
nop
movs
cwde
mov
adc
(bad)
js
movs
repnz
pop
cmp
cmp
xchg
mov
pop
cwde
aam
call
dec
inc
enter
pop
xor
addr16
in
push
dec
push
and
js
adc
jnp
xor
add
jp
outs
js
in
enter
in
push
mov
inc
push
or
inc
enter
inc
jnp
add
push
(bad)
cdq
shl
add
adc
(bad)
pop
in
cmp
lea
xchg
mov
xchg
fmul
mov
add
pop
pop
dec
in
dec
cs
xor
inc
dec
cs
add
or
pushf
retf
add
cmp
xchg
jl
ror
or
inc
scas
or
and
sbb
in
loopne
popa
xchg
clc
lods
adc
pop
adc
add
pop
add
jb
push
neg
mov
dec
enter
ret
and
and
adc
fstp
pop
aaa
sub
mov
(bad)
push
cli
add
jle
adc
xor
push
mov
pop
or
sar
lahf
push
and
mov
push
add
nop
xchg
or
xchg
mov
lods
aaa
daa
fs
push
js
scas
hlt
test
pusha
ja
jne
je
lea
mov
sbb
loopne
adc
adc
rcr
nop
js
inc
xchg
push
jecxz
mov
adc
adc
cmp
dec
scas
and
call
js
pop
xor
and
(bad)
(bad)
(bad)
js
shl
and
add
cwde
inc
push
scas
or
test
pop
cmp
xor
lds
(bad)
daa
hlt
xor
add
cmps
ss
jge
pop
enter
mov
xchg
retf
inc
jmp
adc
daa
mov
pop
pop
push
jnp
lea
push
and
repnz
or
cmp
imul
adc
je
enter
ins
je
mov
pop
pop
inc
inc
lea
xchg
pushf
push
aas
test
mov
or
in
mov
rol
scas
inc
mov
imul
inc
adc
inc
adc
(bad)
add
hlt
xchg
imul
adc
xor
pop
sbb
std
aas
xor
mov
jbe
pop
test
push
push
and
and
pop
pop
mov
mov
push
add
dec
test
retf
cld
pop
adc
retf
es
dec
mov
sbb
sar
sbb
sar
push
sbb
mov
push
jg
sub
jge
mov
xchg
es
cmp
inc
pop
and
data16
and
les
jae
or
clc
inc
and
icebp
outs
xchg
cmp
push
mov
jg
dec
out
shr
sub
pop
je
test
jne
mov
das
add
sbb
sti
addr16
xchg
bound
dec
and
movs
jge
add
ret
mov
dec
inc
mov
jmp
mov
cmp
fdiv
loopne
shl
jp
in
std
mov
out
push
mov
pop
cs
add
je
(bad)
xor
or
mov
pusha
cdq
and
jl
mov
sub
cmp
or
fsub
xor
retf
add
sbb
mov
and
xor
mov
sub
add
lds
retf
sbb
inc
retf
sbb
add
in
mov
xor
push
(bad)
push
and
pop
xor
adc
jo
mov
pop
int
loopne
xchg
mov
push
add
mov
xor
mov
inc
dec
cs
jge
push
jmp
cmp
jae
dec
push
push
sbb
pop
jae
mov
pop
push
inc
inc
add
sbb
cmp
fld
mov
movs
sbb
mov
cmp
jmp
call
xor
fs
test
inc
dec
inc
add
stos
jp
or
mov
inc
adc
shl
fucomip
add
push
jne
cmp
pushf
mov
dec
sbb
dec
dec
push
push
jmp
fild
jp
lds
or
xchg
or
ja
lea
dec
jp
data16
stc
test
inc
test
aad
adc
and
add
jmp
sahf
add
inc
add
rcl
shr
sbb
and
cmp
xor
cmp
add
es
sysret
add
xchg
cs
mov
xchg
mov
fadd
clc
lea
sbb
sub
cwde
push
lahf
cmps
jne
xor
jmp
sub
xchg
sbb
mov
push
jo
adc
mov
add
sub
and
fst
inc
ret
test
outs
ret
rep
jbe
scas
sar
xchg
sbb
inc
inc
dec
lea
dec
jne
aas
push
loop
push
dec
mov
xchg
lods
iret
pop
or
std
add
inc
ret
sbb
cmp
cmp
test
push
inc
mov
sub
or
add
in
inc
fld
(bad)
adc
fiadd
out
or
mov
jmp
dec
iret
sbb
into
ret
xor
mov
pop
mov
div
sub
xchg
and
dec
ret
clc
shl
jle
cmp
jb
daa
xchg
sub
push
mov
data16
mov
fbstp
add
outs
mov
fadd
cmp
jbe
pop
inc
push
or
fstp
imul
ins
inc
ins
dec
out
cmp
mov
xor
lea
inc
mov
and
test
in
mov
mov
aas
dec
nop
sub
xor
jo
or
test
and
add
sbb
dec
mov
add
addr16
push
adc
dec
in
mov
push
inc
lea
imul
add
or
xor
jo
jl
loopne
cmps
mov
clc
xchg
xor
ret
sub
xor
test
and
sbb
adc
sub
xor
sub
cld
out
inc
ss
pusha
dec
adc
push
add
mov
xor
inc
push
mov
add
pop
sub
out
dec
shr
or
cli
mov
gs
and
add
popa
xor
cmc
mov
mov
cmp
jne
cmp
jmp
sbb
movs
scas
sbb
pusha
add
cmp
xchg
retf
ds
xor
(bad)
and
cmp
ret
mov
data16
ins
mov
ror
and
adc
enter
pop
ret
sbb
or
je
retf
mov
rol
xlat
jae
lea
adc
das
cmps
ds
rcl
cmp
sar
add
mov
add
bound
loopne
mov
sub
push
sbb
jae
jmp
add
adc
push
mov
inc
sbb
sub
sar
and
pop
lock
add
ds
jb
cmp
pop
xor
or
(bad)
or
push
ja
clc
adc
pop
popa
pop
aas
adc
mov
loop
inc
ins
loopne
jo
lds
jae
xchg
adc
imul
xor
mov
pop
les
push
mov
cmp
and
push
arpl
jne
cmp
stc
shr
add
mov
pushf
jmp
stc
icebp
sub
sub
call
out
fnsave
xchg
push
mov
sub
jne
sbb
jae
cdq
xchg
push
adc
lods
rcl
lock
add
dec
ja
lods
test
pop
div
sbb
ficom
ret
ret
mov
loopne
mov
add
test
sub
xor
sbb
and
mov
scas
xor
iret
add
or
add
push
pop
or
enter
or
enter
or
je
or
out
adc
xor
mov
or
xchg
jmp
shl
adc
mov
push
int3
sahf
dec
loopne
es
or
or
xchg
fild
push
sbb
xor
sbb
pop
or
fs
inc
push
or
or
inc
push
sbb
dec
in
sub
mov
fs
test
xlat
add
inc
jo
loope
test
icebp
jno
adc
pop
inc
pop
popa
jmp
pusha
or
int
mov
xchg
test
add
hlt
not
je
dec
or
inc
lea
add
jne
cmp
popa
inc
add
add
xchg
inc
mov
cdq
mov
sbb
sbb
lds
xchg
mov
pop
xor
cmp
adc
pop
sbb
leave
mov
mov
aad
inc
inc
pop
ror
dec
dec
outs
mov
adc
movs
fprem
sbb
(bad)
ret
adc
or
and
adc
unpckhps
sbb
and
js
or
add
or
push
inc
icebp
sub
and
xchg
mov
add
pop
and
jb
dec
add
sbb
ret
mov
jne
dec
inc
enter
cmps
call
inc
rcl
mov
(bad)
in
mov
push
cmps
lods
test
mov
xchg
mov
dec
mov
cdq
inc
mov
xchg
mov
xor
push
pop
movs
shl
fsubr
in
gs
in
inc
adc
pop
mov
pop
(bad)
adc
sbb
leave
daa
xchg
pop
aam
and
gs
in
lods
mov
(bad)
sbb
std
adc
pop
sahf
icebp
jne
fwait
ret
retf
add
pop
mov
out
mov
mov
jb
mov
xor
sub
pop
cmovnp
add
push
push
rcr
movq
xchg
arpl
sbb
or
add
pop
dec
jae
xchg
jecxz
or
fimul
loope
pusha
sub
pop
xchg
ficom
add
inc
push
in
sub
pop
xchg
inc
mov
test
mov
pop
jns
in
test
call
jnp
xor
mov
push
xor
mov
xor
push
pusha
pop
and
jo
mov
push
sub
mov
add
in
push
push
pop
pop
sub
dec
cs
pop
mov
adc
sub
dec
mov
push
pusha
push
ret
call
sbb
sbb
sub
add
push
pop
or
xchg
sub
pop
push
nop
or
retf
pop
pop
push
fs
or
es
cmps
in
pop
push
pop
nop
add
in
lods
lods
inc
cmps
fs
cmp
add
cdq
in
in
test
sub
popa
add
sbb
jmp
out
add
daa
or
and
cmp
inc
xor
shr
xchg
jle
test
add
add
retf
xchg
jl
rol
cmp
mov
mov
and
mov
inc
sbb
push
popa
xchg
add
dec
sbb
pop
push
mov
dec
dec
add
stos
popa
adc
xchg
pop
aam
sbb
jge
test
xchg
pop
add
cmp
add
rol
cmp
xchg
dec
test
pop
dec
and
xchg
xchg
jne
mov
pop
aam
in
xchg
or
add
or
jl
mov
mov
add
mov
dec
enter
push
push
sbb
inc
add
mov
sbb
mov
dec
push
sub
and
jo
in
sub
and
add
sub
daa
sbb
ret
push
xchg
retf
nop
pushf
nop
xor
add
lock
push
sub
les
and
test
add
mov
sbb
xchg
pushf
pop
mov
or
movs
cwde
pushf
dec
and
mov
jb
mov
arpl
inc
or
pop
iret
jmp
(bad)
call
mov
cmp
mov
test
leave
and
mov
inc
hlt
out
mov
pop
cmp
xor
or
mov
aaa
xor
mov
sub
adc
inc
sbb
sbb
mov
unpcklps
jns
sbb
inc
mov
sub
cdq
nop
xchg
mov
gs
enter
mov
jno
or
sub
or
and
fwait
lea
hlt
fidiv
retf
add
mov
nop
cmp
and
and
mov
pop
and
sub
mov
mov
push
movs
daa
aam
xchg
test
xor
je
dec
scas
retf
mov
(bad)
stos
cmp
ret
jmp
or
ret
push
pop
adc
pop
mov
stos
gs
sbb
out
and
push
add
cmp
push
add
popf
sti
inc
jbe
adc
inc
cmp
jb
add
add
into
sub
aas
fnsave
pop
push
mov
push
call
mov
movs
icebp
jmp
scas
inc
or
fwait
xor
push
sbb
daa
or
xchg
xor
rol
jne
adc
test
cmps
popf
aam
pop
and
mov
sbb
and
leave
xor
mov
jmp
or
or
mov
cli
push
push
add
loop
and
hlt
call
xlat
adc
mov
mov
adc
int3
xchg
xchg
lods
jle
stc
in
jmp
sahf
retf
push
aas
stc
mov
ds
aam
pusha
stc
clc
lock
(bad)
outs
cmp
mov
adc
(bad)
aam
xor
pop
and
or
imul
dec
cmp
ins
pop
ret
cmp
fldenv
or
call
push
fild
cmp
ss
mov
xor
daa
xchg
outs
lds
clc
inc
push
hlt
and
inc
sbb
mov
push
mul
and
sbb
sbb
ss
repnz
jns
imul
ins
fsub
jp
aaa
or
out
in
fcomip
sub
pop
(bad)
call
scas
sbb
ficom
add
push
test
in
popa
es
jb
jecxz
dec
ret
lahf
push
add
ror
and
jl
pop
pop
and
adc
je
cmp
xlat
and
add
pushf
fs
and
inc
pop
and
push
xor
or
repz
div
and
or
sbb
add
sbb
(bad)
call
pop
je
dec
xchg
(bad)
les
xchg
or
dec
mov
(bad)
aam
mov
push
call
dec
push
call
fwait
inc
push
loope
test
jno
inc
xchg
retf
xor
cs
inc
mov
cmc
mov
add
xor
or
xor
pop
cmp
push
ds
dec
sar
jae
inc
xchg
icebp
pop
xlat
add
mov
repnz
sub
icebp
nop
push
(bad)
in
xchg
loopne
inc
aam
out
out
add
push
lea
call
xchg
mov
xchg
sbb
or
data16
and
push
pop
retf
sbb
cmp
neg
ss
push
xor
mov
push
sbb
and
adc
jno
push
pop
add
xlat
inc
sbb
test
or
push
call
fistp
sahf
push
ret
call
xlat
arpl
inc
push
orps
push
pop
dec
mov
mov
or
sbb
xor
loope
fmul
mov
dec
lea
jl
bound
ficomp
or
mov
or
pop
imul
std
pop
pop
pop
popf
aam
sar
clc
jns
jns
or
test
movs
shr
cld
jns
mov
and
(bad)
rcr
enter
dec
cld
adc
mov
jl
(bad)
sub
clc
rol
rol
imul
jle
xchg
mov
jo
adc
ret
ja
sub
or
add
and
iret
sbb
inc
imul
outs
jle
retf
push
inc
add
loopne
add
cmp
cmps
cmp
adc
or
sti
push
mov
arpl
es
fstp
adc
sti
dec
sbb
push
xor
mov
jno
add
or
xchg
sub
inc
jp
or
add
mov
aas
lods
nop
aas
pop
test
icebp
xor
sub
enter
xchg
in
mov
add
ins
ss
jmp
rcl
add
das
jle
pop
clc
loopne
push
pusha
cmc
add
pop
xor
sub
lods
inc
push
in
sbb
sub
pushf
cmp
inc
lock
ret
shl
add
or
cs
add
jne
loope
xchg
xor
push
xlat
popa
data16
retf
clc
jne
out
movs
cs
dec
sbb
jb
push
xchg
jmp
out
and
inc
call
jbe
and
clc
mov
sub
ins
adc
cdq
inc
inc
js
pop
pushf
dec
ds
add
or
call
lds
xchg
adc
inc
push
jne
cmp
xor
jge
mov
cmps
jl
mov
clc
sbb
adc
cmps
cmp
and
mov
xchg
cwde
add
dec
icebp
add
outs
inc
xchg
jbe
mov
push
adc
cdq
rcr
xchg
xor
outs
push
jnp
rcr
test
cmp
je
test
push
sbb
dec
sub
repz
jne
daa
cmp
in
jne
and
push
es
sub
mov
fisttp
mov
add
das
inc
fucom
adc
adc
loope
sbb
jle
inc
movs
jno
mov
call
aaa
or
inc
call
xor
lahf
ins
mov
sbb
push
adc
xchg
repnz
pop
or
mov
inc
jmp
mov
or
sbb
fsub
push
push
stc
mov
sbb
xor
test
jge
dec
inc
pop
jno
lea
movs
mov
mov
sbb
jbe
dec
clc
push
or
or
push
sbb
jp
sbb
pop
adc
and
add
and
jne
cmp
xor
and
addr16
mov
or
repnz
xchg
lods
mov
imul
dec
test
jge
fistp
hlt
repz
jmp
movs
adc
adc
pushf
jb
jge
call
cdq
or
add
and
leave
add
sub
inc
sub
loopne
jmp
push
scas
pop
mov
dec
int3
fnstenv
into
mul
push
mov
ret
adc
jmp
cmp
ja
cmp
sbb
rcl
into
mov
dec
sbb
mov
test
rcl
mov
mov
popf
ins
fisttp
add
fsubr
fs
push
rcl
xor
xor
xor
inc
mov
fmul
mov
push
loop
or
fcom
test
sub
push
cld
sub
lods
shr
dec
out
ss
jmp
jmp
push
and
pop
fst
pop
xchg
adc
ret
adc
cmp
call
and
div
ins
aaa
or
inc
jo
add
or
jne
sbb
call
call
sub
icebp
call
and
sahf
mul
movs
cld
mov
std
push
hlt
sbb
ins
inc
inc
dec
mov
push
jns
add
retf
fwait
jbe
ins
stos
pop
dec
and
inc
sbb
add
lods
dec
fcomp
popa
das
call
xchg
and
push
test
mov
(bad)
mov
test
cmps
fsubr
inc
add
cs
pop
dec
jns
(bad)
lock
loopne
xor
hlt
les
nop
and
xor
push
inc
xor
add
and
dec
(bad)
out
test
popf
xchg
pushf
pop
push
xor
jmp
adc
or
hlt
sbb
inc
jb
cmp
sbb
and
sbb
push
enter
mov
jg
pop
test
adc
push
test
(bad)
adc
sbb
push
mov
pushf
aam
sbb
or
test
in
xor
lock
sub
ret
and
or
add
jmp
pop
sbb
sub
rcr
jmp
arpl
movnti
mov
sbb
idiv
cdq
push
xlat
or
dec
or
or
movs
push
shr
sbb
jmp
je
pushf
sub
cmps
and
pop
es
ds
es
inc
(bad)
rol
and
not
fwait
inc
pop
push
imul
xlat
inc
arpl
sbb
lods
ret
adc
adc
hlt
cs
mov
mov
and
mov
and
lods
push
loopne
imul
adc
aaa
push
pop
test
jns
dec
cld
inc
xchg
sub
and
loopne
es
mul
test
jecxz
sbb
stos
adc
cli
push
and
ret
es
push
dec
jo
test
adc
dec
push
jecxz
unpckhps
ds
(bad)
push
pop
add
cmp
rcl
into
inc
push
push
scas
dec
gs
fcomp
mov
sbb
mov
dec
inc
test
add
jmp
inc
inc
dec
push
mov
and
aad
mov
inc
ror
add
mov
lods
movs
ins
jmp
inc
sbb
mov
ins
add
test
cmp
adc
sbb
or
test
xor
hlt
bnd
add
or
or
mov
scas
add
cdq
sahf
jmp
add
inc
les
scas
inc
sbb
arpl
jmp
nop
xchg
xor
dec
sbb
adc
and
subps
test
into
clc
pop
call
adc
cmc
add
fidivr
or
adc
movs
xor
and
clc
js
call
or
loope
or
sub
or
loope
dec
push
xor
call
je
sti
sub
add
es
mov
dec
cmp
jb
inc
cmp
fcom
pop
clc
adc
je
sbb
retf
push
idiv
sub
jge
out
inc
adc
add
iret
or
shl
fst
les
xor
mov
push
or
inc
push
sbb
inc
sub
js
dec
ins
mov
stc
inc
cmp
xchg
sub
icebp
cmp
or
fbld
es
mov
jmp
bound
and
(bad)
adc
jo
add
sub
and
repz
scas
cmp
xor
clc
inc
adc
sbb
sbb
(bad)
jo
fsub
inc
mov
int
or
data16
cmp
sbb
sub
sbb
(bad)
mov
push
cs
pop
xor
clc
inc
pop
fadd
cdq
cmp
lds
ss
mov
call
(bad)
in
bnd
sbb
pop
ret
adc
sbb
sbb
sub
cmp
sbb
mov
in
or
scas
pop
and
jecxz
cmps
and
aaa
xor
sub
mov
xor
les
jns
jecxz
adc
pop
repnz
xor
fadd
retf
push
fs
inc
add
pusha
test
movs
lea
call
inc
cmps
and
mov
sbb
arpl
repnz
or
icebp
push
movs
mulps
test
push
icebp
iret
mov
sti
les
and
or
jne
and
cs
ja
push
ret
dec
mov
sub
sbb
xchg
call
fwait
push
es
or
adc
xchg
sub
jnp
sbb
ror
clc
cmps
inc
jl
mov
into
dec
enter
mov
adc
fmul
outs
add
aam
rcl
or
mov
imul
push
dec
jmp
aad
push
das
call
add
add
add
arpl
arpl
and
mov
cmp
xchg
repz
repnz
push
fnsave
daa
jbe
adc
in
fidiv
xor
cdq
adc
add
jle
lds
mov
add
jl
into
and
mov
xchg
add
inc
xor
int3
test
and
jmp
aam
cmp
movs
jge
pop
lock
sbb
jbe
mov
shl
push
and
jo
jb
and
mov
adc
mov
std
mov
cmp
mov
xchg
or
xor
cmps
sub
std
add
jbe
mov
in
lea
push
push
test
push
push
sbb
pop
jecxz
popa
call
outs
xchg
loopne
push
push
cmp
push
sub
je
out
xor
jae
mov
ret
cmp
fnsave
mov
sub
or
aad
mov
jne
dec
lods
lods
pop
xlat
mov
unpcklps
adc
push
retf
push
(bad)
icebp
aam
fistp
stc
pslld
inc
nop
xchg
dec
adc
push
test
sbb
les
(bad)
lods
push
out
lahf
(bad)
push
lock
popf
jb
push
mov
clc
cwde
(bad)
pop
sub
lahf
push
(bad)
pop
add
add
cmp
mov
loopne
daa
ror
sar
push
dec
je
push
jbe
mov
ss
add
inc
adc
ja
jmp
pop
mov
ins
fsub
cmps
jno
stc
adc
inc
nop
inc
fist
cmp
jge
arpl
neg
mov
mov
pop
xor
jo
dec
push
mov
dec
call
call
nop
inc
or
repnz
add
test
sbb
dec
enter
cmps
call
add
pop
jne
pop
sub
cmps
or
add
cmc
push
jmp
inc
fmul
dec
nop
outs
repz
xchg
mov
fsubr
pop
and
bound
gs
dec
test
fwait
or
pop
and
inc
push
and
das
add
sub
pop
fsubr
js
dec
inc
add
call
mov
push
xchg
jne
ins
dec
leave
ss
mov
rol
or
xchg
sbb
push
cli
mov
or
add
je
cwde
test
jmp
pusha
add
icebp
nop
sbb
dec
dec
push
fwait
add
ins
cld
dec
jmp
or
(bad)
add
jno
xor
ret
inc
test
fdivr
add
rcl
aad
or
or
cmp
inc
cld
mov
or
rcr
test
inc
outs
push
idiv
aas
shl
adc
add
into
call
adc
xchg
jbe
jbe
or
js
jns
jg
cli
mov
and
push
jne
mov
cwde
fnstcw
add
jmp
ds
fbstp
add
sbb
inc
dec
sbb
cmps
or
js
shufps
lock
sub
out
add
cwde
inc
cs
rol
daa
cmp
int3
jb
push
add
push
or
add
loope
pusha
sub
call
sbb
je
aas
sbb
inc
adc
jmp
jmp
repnz
push
adc
comiss
gs
aam
push
adc
and
retf
add
xchg
call
xor
push
cld
push
loopne
cmp
aas
inc
or
loope
fsubrp
sub
inc
inc
cmp
ror
shl
dec
add
ins
or
inc
movs
or
adc
xor
push
fisub
cmp
jbe
add
sub
cmp
dec
sbb
(bad)
add
sbb
mov
inc
mov
cmp
or
dec
xchg
jle
repnz
xchg
cld
mov
popf
loope
add
jg
adc
repnz
jle
outs
call
call
mov
icebp
mov
dec
ret
ror
sbb
or
jmp
jge
or
rcl
pop
cmp
shr
shl
hlt
add
sbb
push
es
in
cmp
inc
or
push
mov
jne
and
xchg
test
sub
pop
dec
sub
add
mov
push
pop
ins
gs
xor
mov
clc
sub
inc
pop
fnstcw
or
fild
add
mov
sbb
stc
std
pop
sbb
or
cld
xor
add
adc
add
sbb
add
in
lock
out
test
add
sahf
jbe
or
ins
cmp
add
or
mov
mov
push
pop
adc
fcom
daa
push
xor
and
sub
or
clc
je
aad
jo
inc
jb
jne
je
outs
inc
cmp
sbb
inc
add
dec
dec
mov
sub
adc
ret
test
mov
pop
push
aaa
fbstp
jg
xlat
mov
fistp
fsubr
push
call
inc
or
hlt
cmps
xor
call
xor
loope
sbb
mov
cli
rcl
sub
and
cmp
dec
dec
inc
jl
sub
cmp
ror
data16
add
cmps
test
cmps
je
xchg
mov
repnz
push
xchg
push
xchg
rol
ins
xor
bound
or
call
sub
sub
xor
retf
jnp
fidiv
lea
mov
clc
mov
sbb
sub
sub
rcl
sub
inc
xchg
jns
xor
push
pusha
out
sahf
out
push
dec
inc
cmp
shr
sahf
xlat
inc
in
push
jmp
push
mov
lahf
cmp
loope
shl
inc
and
(bad)
fnsave
pop
nop
xor
pop
push
cmp
lea
out
add
pop
cmp
mov
mov
aad
dec
cmp
ja
xor
in
xchg
mov
add
pop
push
xchg
fstp
inc
dec
out
outs
xor
cmp
dec
pop
add
pop
loopne
bound
int
mov
adc
dec
dec
or
in
push
in
xor
jle
ja
push
pop
jle
xchg
adc
inc
out
pop
adc
ds
cli
push
mov
out
push
mov
es
outs
ret
cld
or
loop
(bad)
fcom
call
ret
mov
int
in
or
ins
sbb
stos
popf
push
xor
add
jnp
adc
cmp
lock
ret
push
jno
lahf
ror
jno
popa
nop
sbb
dec
ins
xchg
mov
cmp
push
call
cmp
jns
sbb
jecxz
push
sub
jmp
pushf
xchg
sbb
jmp
aam
push
sbb
cmps
mov
jo
scas
add
mov
pop
ret
ret
xlat
maxps
fwait
loope
call
adc
sbb
and
jnp
outs
or
mov
sub
pop
jmp
mov
dec
push
mov
daa
in
adc
int3
mov
in
into
cmps
push
sbb
adc
(bad)
rcl
add
jmp
fsubr
add
ja
call
xchg
mov
imul
xor
mov
inc
xchg
xchg
fimul
xchg
rol
loope
mov
ins
repz
sub
pcmpeqb
jmp
popf
rcl
push
mov
cwde
push
call
pop
or
shl
das
mov
and
mov
cmp
jne
sbb
call
mov
add
clc
adc
or
and
xchg
nop
sub
lds
sub
xor
sub
int3
cmp
out
enter
and
movs
cmc
xor
xor
mov
mov
push
lds
cmp
or
add
in
dec
in
aas
push
enter
clc
ficom
test
pop
loope
inc
mov
pop
dec
mov
xchg
or
push
adc
repz
clc
in
call
and
ret
mov
pop
ins
out
and
jns
shl
and
mov
push
aam
pop
nop
in
adc
xchg
sub
xor
pop
pop
mov
mov
pop
push
pop
out
out
mov
test
push
xchg
pushf
mov
jns
movs
lods
mov
out
mov
loopne
call
inc
clc
or
pop
shr
inc
mov
sbb
pushf
or
test
lahf
add
(bad)
lock
inc
jmp
jge
or
stos
push
or
pusha
enter
jecxz
or
imul
fisttp
enter
movs
lds
fsubr
sub
sub
cwde
test
add
jne
mov
pop
and
lods
test
lods
jae
xor
or
(bad)
fcom
sbb
lods
sub
dec
cmp
mov
or
jne
inc
or
and
jmp
jns
push
pusha
call
push
or
sbb
add
jb
or
push
aam
cmp
loope
call
ret
dec
pop
movs
and
jecxz
xor
inc
push
in
fst
xchg
adc
pushf
inc
adc
(bad)
or
or
fiadd
sub
jns
add
inc
dec
mov
aas
jmp
movs
mov
mov
mov
xchg
retf
in
int3
call
jle
cmp
mov
call
or
sar
fld
sub
test
fild
pop
(bad)
sbb
mov
mov
push
pop
dec
cmps
mov
loope
mov
mov
test
jne
or
xchg
dec
sbb
mov
mul
lea
pushf
and
cmp
shl
pop
or
lods
and
sub
mov
mov
mov
cmp
inc
std
out
jl
sub
cmp
ja
xchg
xchg
inc
pop
ret
pop
sbb
and
add
or
and
pop
add
pop
and
inc
sti
imul
js
cmc
inc
pop
lea
xchg
out
cmp
fucomp
mov
lock
jmp
iret
adc
and
mov
(bad)
out
in
cmp
pop
or
dec
pop
add
aas
mov
bnd
jmp
and
inc
pop
jg
add
sbb
mov
jg
cmp
test
lea
neg
test
mov
cs
pop
test
sbb
xchg
(bad)
ror
es
mov
out
in
mov
je
or
inc
or
and
je
ja
arpl
lahf
mov
jmp
jne
inc
sub
add
adc
cmp
jmp
scas
dec
jmp
ss
cmp
mov
push
add
xor
sub
push
movs
push
dec
and
frstor
cmps
rcl
int
lds
test
mov
lods
pop
aad
cwde
call
push
cmc
adc
add
leave
call
jp
(bad)
mov
mov
imul
retf
inc
in
test
mov
inc
push
int3
icebp
jae
jmp
es
push
xchg
icebp
jns
sbb
ja
shl
je
das
inc
jecxz
pop
push
or
xchg
add
js
and
and
adc
inc
cmp
js
popf
(bad)
mov
cmp
iret
mov
mov
push
mov
sbb
inc
pop
or
rcr
mov
cmp
sbb
xor
in
xchg
push
adc
jo
mov
test
scas
pop
jmp
or
daa
jmp
fisub
jnp
mov
daa
mov
stos
pop
and
cmp
add
inc
outs
into
movs
in
cmps
mov
loopne
cmp
(bad)
je
enter
mov
pop
mov
loopne
xor
add
jmp
div
lock
je
mul
movs
xor
xchg
ins
popa
add
sar
adc
rol
fbld
out
jmp
call
xchg
clc
sti
sbb
jle
add
imul
dec
bound
je
idiv
adc
ins
or
popa
sbb
cmps
sbb
mov
addr16
mov
xlat
das
movs
mov
nop
data16
leave
xchg
xchg
icebp
mov
imul
or
lds
sub
inc
adc
xchg
xor
push
mov
aad
jb
jne
adc
mov
mov
sbb
mov
scas
cwde
mov
(bad)
pop
rcl
sub
lods
inc
sub
fadd
xchg
adc
mov
fild
or
jmp
xor
(bad)
out
loope
pop
daa
mov
lds
sub
in
sti
lea
pop
inc
and
sbb
retf
mov
or
and
jne
push
imul
mov
mov
push
scas
lea
cmps
adc
inc
icebp
arpl
js
jmp
push
adc
jmp
aam
mov
loopne
test
push
xor
mov
(bad)
and
mov
push
mov
push
sahf
aad
(bad)
cmp
mov
adc
dec
loope
xchg
push
xor
sbb
xchg
xor
dec
sbb
mov
sub
cdq
cld
dec
sbb
dec
pop
add
(bad)
jg
jl
adc
neg
mov
(bad)
pop
pop
clc
jle
inc
add
xlat
add
pop
clc
clc
cmp
vmread
dec
sbb
mov
or
jne
and
rcr
fcmovnbe
sub
or
dec
jmp
cdq
push
je
inc
aas
out
push
jge
xor
cmp
call
cwde
add
dec
dec
jmp
lea
sub
inc
xor
call
popa
cmp
push
add
out
je
retf
inc
out
dec
cmp
ds
data16
mov
inc
inc
int3
jne
sub
test
test
jmp
popa
adc
and
add
push
cmc
sar
xchg
mov
gs
dec
test
sub
shl
test
sub
into
add
sub
or
mov
mov
sbb
ret
sub
scas
cmp
cli
or
pop
cmps
cmp
daa
push
sbb
xchg
inc
jnp
outs
ja
enter
lea
ss
sub
jns
pop
pushf
adc
cmp
cmp
xor
push
add
movs
js
fbstp
or
movs
cld
mov
mov
inc
mov
push
push
or
mov
push
inc
call
sub
sub
sbb
mov
fs
lds
pop
cmp
inc
push
push
dec
or
or
lock
sahf
push
xchg
push
je
test
addr16
pop
rcl
cmp
div
push
call
mov
mov
cmp
daa
dec
and
out
xchg
and
out
ds
fsubr
shr
loope
addr16
adc
shl
loopne
xchg
enter
loop
or
or
jl
out
out
cmp
data16
sbb
and
jb
jl
rol
sbb
inc
shl
cmp
and
sub
add
mov
sbb
jo
cmps
lock
cmp
outs
sbb
call
std
(bad)
stos
imul
add
cmc
cld
push
int3
xor
or
in
push
pop
push
and
in
pop
(bad)
cld
xchg
mov
(bad)
loope
adc
push
push
push
inc
xchg
jo
push
cmp
ja
cmps
aas
push
inc
fbld
sahf
dec
inc
mov
and
jge
cmp
adc
ret
mov
mov
jle
and
sbb
enter
out
and
retf
xchg
and
push
jo
xchg
or
or
mov
sub
inc
add
(bad)
xchg
data16
aaa
js
scas
sub
adc
add
push
popf
lea
ins
(bad)
mov
fist
bound
push
ja
sbb
cmp
dec
cmp
ja
aaa
push
mov
push
adc
jo
cmp
push
sti
inc
xchg
sbb
sub
xchg
jne
ret
(bad)
loopne
loop
push
pop
shr
in
adc
push
cmp
enter
jbe
adc
xchg
add
dec
dec
imul
or
and
xor
test
je
icebp
call
mov
mov
fwait
xchg
jo
or
rol
mov
xchg
mov
sub
call
sub
mov
mov
inc
mov
pop
cmp
xchg
and
add
add
loop
mov
xor
cmp
jno
sub
fcomp
jbe
and
adc
call
adc
pop
cmp
arpl
cmp
push
popf
in
jecxz
jmp
push
add
mov
imul
(bad)
arpl
cmc
add
pop
xor
sbb
fs
and
retf
pop
in
bt
jle
sbb
jae
xchg
adc
cmp
xor
es
adc
inc
cmp
daa
test
push
not
ja
mov
out
pop
and
mov
mov
sbb
add
imul
mov
pop
cmp
inc
inc
jecxz
adc
sbb
fld1
shl
pop
(bad)
push
sti
gs
cmp
in
inc
xor
mov
retf
or
sbb
sti
cmp
or
pop
call
pop
pushf
push
inc
inc
and
scas
sbb
hlt
sub
mov
add
inc
sub
dec
rol
gs
cli
sbb
mov
jne
or
mov
dec
pop
es
jne
xchg
in
nop
sub
xchg
lock
or
sub
mov
shl
cwde
sahf
push
arpl
jp
pop
(bad)
popa
lods
dec
stc
enter
and
(bad)
push
lea
jnp
push
mov
ror
test
push
jae
mov
mov
inc
test
test
fistp
mov
std
push
cld
add
sbb
loopne
pusha
enter
push
mov
in
xor
xor
jmp
pop
ja
clc
mov
sub
pop
sub
and
inc
jnp
and
pop
cmps
inc
pusha
sub
cmp
ds
in
fs
js
push
outs
push
push
popf
mov
mov
mov
mov
pop
cmp
xchg
push
sar
imul
lock
jmp
add
addr16
push
nop
das
outs
loop
ror
in
push
ds
gs
sbb
call
cs
repz
pop
mov
add
loopne
or
mov
adc
les
xor
data16
push
inc
imul
cmp
scas
adc
mov
or
sbb
push
cmp
or
mov
pop
and
add
xchg
sub
fcom
ret
and
mov
mov
jmp
add
jo
mul
retf
sub
sub
pop
fs
(bad)
scas
ret
pop
inc
add
cmp
jb
gs
push
test
sbb
pop
sbb
mov
push
jp
or
call
test
mov
in
fucomp
xor
je
cmps
fadd
ret
mul
loop
mov
lahf
push
lods
je
pusha
mov
ins
dec
(bad)
xor
rol
mov
sub
push
out
pop
fcmovnb
ret
sbb
cmp
ret
call
(bad)
rol
push
pop
cmp
je
into
sbb
call
mov
popa
test
xor
int
or
push
test
jbe
and
je
pfadd
or
pop
adc
into
mov
mov
jae
mov
ret
push
loopne
fnstsw
in
add
lea
loopne
ror
adc
out
fs
xor
ret
lea
iret
es
jnp
push
add
add
mov
sar
inc
pop
add
mov
dec
loopne
and
add
xor
call
ins
call
xchg
mov
inc
scas
add
add
cmp
pop
or
(bad)
in
daa
cmps
cmp
pop
lea
lods
xchg
js
push
add
adc
mov
xlat
call
les
mov
inc
jg
sub
add
sbb
adc
hlt
add
fst
cmp
in
nop
test
(bad)
leave
jo
ins
mov
loopne
adc
call
or
push
jae
and
adc
sbb
add
jle
pop
or
and
xchg
sub
bound
and
cs
lock
mov
cmp
mov
aam
retf
call
inc
dec
xchg
lods
shl
inc
cmc
loop
inc
xor
or
fwait
int
fild
xchg
push
mov
jb
shr
mov
je
jmp
fs
add
outs
pop
sub
mov
aad
fmul
push
repz
xchg
or
adc
add
push
call
inc
fisttp
loopne
leave
push
mov
cld
(bad)
pop
mov
fild
cld
mov
xchg
mov
out
and
hlt
xchg
sub
dec
adc
aas
push
loopne
or
cmps
fld
mov
jbe
fdivr
ficom
ror
add
out
fcom
fst
sub
push
cmp
in
loop
pop
inc
aad
inc
cld
in
jo
mov
imul
jmp
adc
mov
adc
movs
and
fsub
push
retf
add
mov
dec
cmp
lahf
jge
imul
sub
mov
cmp
and
loopne
aaa
sbb
retf
sahf
xchg
(bad)
and
push
and
and
jmp
(bad)
(bad)
xor
lahf
loop
jb
xor
clc
mov
and
rcr
ins
and
hlt
scas
mov
push
ins
dec
ret
sbb
jo
push
pop
or
pusha
xchg
int
mov
xor
in
ss
push
cld
xchg
into
xor
(bad)
xor
fadd
dec
mov
mov
push
and
add
mov
mov
sbb
das
adc
mov
add
(bad)
mov
mov
call
inc
std
jne
mov
fld
mov
fidivr
jmp
retf
js
sbb
leave
loopne
or
sub
retf
dec
clc
and
hlt
or
push
push
mov
call
popf
test
(bad)
rcr
xlat
and
not
rep
xor
mov
std
mov
push
jmp
xchg
aaa
(bad)
push
jb
movs
sbb
fcom
mov
push
out
dec
lea
push
inc
xor
mov
imul
jae
fld
aam
es
les
ret
pusha
(bad)
jne
mov
test
and
xchg
dec
inc
pop
ja
pop
sti
leave
jmp
xlat
fs
loope
push
loope
leave
xor
lea
dec
in
movs
popa
add
std
loope
jmp
or
call
jbe
pop
pop
adc
shr
xchg
xor
inc
xor
inc
xor
xchg
fcmovnb
(bad)
loopne
mov
movs
icebp
jb
inc
or
adc
mov
out
push
pop
mov
dec
js
call
rol
mov
jl
sbb
sbb
div
cli
or
inc
or
inc
dec
jne
add
je
cs
add
and
clc
mov
inc
push
jnp
test
xor
js
pop
int3
enter
mov
dec
or
clc
int
cmp
les
lea
push
mov
pop
xor
pop
sar
loop
push
and
push
and
call
(bad)
add
sbb
movs
cli
(bad)
mov
scas
pop
and
leave
dec
out
jne
cmovae
imul
aam
or
sub
xlat
aas
sbb
push
cli
jo
lahf
test
add
(bad)
ds
retf
ins
lock
or
mov
out
mov
mov
xor
ja
mov
or
test
jmp
xor
add
mov
mov
fwait
xlat
add
push
cmp
push
sub
jmp
adc
cs
jo
jno
sbb
add
lods
mov
push
jmp
and
dec
cli
in
and
(bad)
sbb
fcmove
cmps
loopne
retf
cld
cmc
call
cmp
push
add
imul
mul
push
outs
cmp
push
rcl
sti
mov
pop
jl
mov
mov
lock
adc
xor
mov
sub
cmp
sbb
mov
das
and
rol
fiadd
les
push
sbb
or
lods
mov
cmp
(bad)
and
rcl
sbb
rcr
jg
aam
rol
dec
std
add
mov
cmp
retf
cwde
sub
mov
scas
xchg
add
rcl
out
add
or
cmp
push
loop
fs
dec
add
cmp
sub
test
jno
adc
push
call
push
test
xchg
xor
in
sahf
sbb
push
dec
lds
sbb
leave
ror
jmp
aaa
cmp
push
xor
ret
jo
or
movs
sub
xor
cmp
mov
lock
and
adc
jl
xor
cmp
cmp
xchg
sahf
inc
cli
ds
aad
sahf
sbb
or
pop
test
(bad)
sbb
data16
shr
lock
movs
sub
and
outs
(bad)
sbb
mov
pop
jmp
jo
loopne
bound
stos
jecxz
cld
cmps
(bad)
jo
loop
pop
in
stos
sar
rcl
ret
es
adc
xor
in
inc
xor
and
sbb
dec
call
loopne
sbb
out
push
cmp
cmp
jns
and
(bad)
adc
(bad)
cs
es
(bad)
inc
aaa
ds
jmp
and
sub
sbb
xor
pop
adc
mov
enter
iret
pop
jmp
xchg
popa
adc
mov
cmp
ins
pop
adc
pop
and
fsub
adc
jg
xchg
or
(bad)
mov
and
(bad)
retf
inc
cmp
sub
out
xor
pop
mov
adc
pusha
imul
jmp
mov
enter
adc
out
or
push
mov
fs
loop
or
stc
jb
jb
pop
ins
ss
inc
sub
sub
call
neg
add
pop
xchg
or
adc
jno
ret
and
dec
mov
adc
pop
lods
mov
or
cdq
sbb
xor
shl
aaa
sub
cmp
loopne
mov
or
fisubr
xor
arpl
clc
hlt
call
adc
push
stos
fsub
ja
js
push
cmp
inc
fsubr
or
es
xchg
retf
jb
imul
imul
sbb
add
loopne
xchg
movs
xor
popa
push
cmp
and
aam
inc
sub
jae
fst
push
fldlg2
or
inc
rcr
ror
and
leave
and
sub
or
mov
and
sbb
stc
push
cld
fs
or
cdq
nop
or
sub
jmp
dec
mov
retf
and
ins
mov
mov
push
dec
pop
push
adc
sbb
mov
lods
xor
adc
xchg
push
jmp
mov
add
aaa
call
mov
xor
les
mov
inc
aas
mov
and
push
pop
lods
dec
mov
ret
ret
mov
daa
inc
pop
sbb
add
add
xlat
fimul
jl
js
pusha
jl
arpl
rcl
call
bound
lods
mov
(bad)
dec
(bad)
sbb
int3
dec
mov
lock
xchg
xor
mov
ja
ss
xor
push
inc
popa
adc
hlt
dec
mov
cli
dec
dec
dec
(bad)
and
push
popf
mov
push
fst
sbb
call
dec
pop
mov
and
and
arpl
test
repz
pop
cmp
add
fcmovbe
call
jge
and
imul
jge
sbb
dec
pop
push
push
add
fwait
and
mov
sahf
and
push
jmp
aaa
xchg
xchg
pop
mov
xor
mov
enter
inc
mov
and
(bad)
add
and
sbb
and
add
cmp
inc
adc
int3
jo
into
fst
lock
mov
push
push
cmp
in
(bad)
(bad)
push
adc
jmp
pop
call
ror
cmp
dec
loop
jns
add
and
outs
rcr
and
and
push
add
adc
(bad)
or
rol
cmp
js
mov
cwde
scas
sub
ins
fsub
jp
shl
push
push
or
and
loopne
xchg
add
test
add
sub
mov
call
dec
cmp
cdq
add
dec
sub
hlt
inc
adc
add
jl
or
xor
push
jge
sbb
sub
retf
pop
jp
iret
pushf
mov
loop
inc
adc
aas
push
jo
(bad)
or
mov
(bad)
or
sub
jns
ins
lock
and
and
pop
xor
loope
cwde
shl
add
cmp
aad
adc
in
jge
popf
sub
sub
ja
movs
inc
(bad)
mov
imul
adc
fsub
jmp
jmp
fs
outs
mov
je
popa
je
cmp
je
cmp
fnstenv
mov
push
mov
or
ins
pop
rcr
add
mov
sbb
and
mov
dec
or
push
mov
inc
call
push
cli
loop
jg
cwde
adc
in
sar
popa
cmp
fwait
ret
loopne
xchg
ficom
or
push
test
mov
push
sbb
or
fdiv
xor
add
pop
add
inc
ins
ret
pop
jmp
icebp
or
jmp
inc
mov
pop
fidivr
dec
lock
sub
add
daa
jne
dec
(bad)
or
and
cmp
(bad)
xchg
and
ret
jne
int
pop
add
cs
je
xor
popa
pop
and
idiv
loope
and
jne
or
dec
je
ja
inc
std
jne
and
aaa
sub
popa
ret
pop
daa
cmp
and
adc
or
adc
push
out
ins
jmp
sub
jl
test
xchg
aam
hlt
xor
je
cmp
push
fsubrp
mov
push
jae
test
inc
rcl
add
cmp
mov
pop
add
lahf
jno
or
sbb
sbb
dec
ins
aas
jg
fwait
retf
or
and
push
enter
sub
int3
sub
fcomp
call
aas
retf
arpl
lods
jmp
sar
in
ja
cmp
fwait
rcl
ror
(bad)
dec
jnp
stc
add
sbb
clc
or
dec
xchg
loopne
inc
lock
(bad)
push
sbb
jae
jl
xor
cwde
call
mov
js
mov
loopne
mov
lea
test
cmp
pop
adc
lds
inc
sub
mov
mov
push
shl
test
cdq
imul
add
mov
rcl
xchg
sub
inc
jmp
aaa
jle
xchg
push
call
std
jbe
or
add
repnz
enter
pop
cld
sub
add
mov
push
lds
(bad)
inc
ins
sbb
jmp
rol
push
test
loopne
cmc
cmp
mov
lahf
(bad)
push
and
adc
or
dec
adc
popa
js
xor
xor
adc
or
fs
push
push
rcr
dec
rcr
inc
sbb
pop
aam
pop
sub
sbb
(bad)
mov
push
cli
adc
stos
pop
inc
add
and
mov
or
jnp
inc
(bad)
aad
int3
mov
test
sbb
jmp
dec
cdq
and
prefetcht0
inc
add
xor
call
call
push
or
in
call
movs
aaa
imul
jnp
add
adc
inc
mov
arpl
dec
repz
lods
mov
and
mov
sub
inc
mov
mov
ds
pop
aaa
jl
mov
inc
sbb
push
call
inc
rol
sub
outs
push
push
jge
lods
xchg
jb
mov
or
push
add
inc
xchg
outs
in
test
jno
cdq
add
in
inc
into
(bad)
xchg
shl
les
test
adc
into
jnp
xchg
xor
in
or
arpl
es
push
test
push
clc
nop
movs
adc
pop
leave
sub
xor
fidiv
rcl
into
push
jbe
dec
xchg
cmp
call
mov
outs
pop
push
pop
mov
fs
cmp
xchg
pushf
lods
sub
dec
and
adc
adc
sub
jae
dec
jmp
or
and
push
shl
mov
jecxz
(bad)
pop
fucom
pusha
and
dec
ficomp
call
adc
jmp
pop
pop
push
push
jl
cmp
jb
call
call
pop
jbe
or
mov
ror
dec
push
ret
mov
pop
push
lahf
and
lods
add
xchg
xchg
(bad)
fucomp
push
cli
inc
fadd
ror
push
lods
and
mov
in
mov
and
rcl
mov
fsub
inc
jo
loop
sbb
push
and
add
ret
pusha
mov
adc
jnp
xchg
dec
jmp
(bad)
or
fld
mov
sub
stos
les
add
mov
adc
pop
mov
inc
outs
add
push
call
adc
or
push
fst
inc
retf
jb
sub
in
push
push
sub
add
idiv
add
ds
bound
or
inc
xchg
(bad)
movs
jnp
js
or
pop
xor
mov
push
inc
ds
cmp
pop
add
dec
movs
sti
push
movs
sbb
sbb
inc
cwde
dec
inc
sub
push
mov
jnp
fild
(bad)
xchg
ret
push
daa
pop
add
add
push
lock
adc
add
push
and
dec
(bad)
out
(bad)
shr
mov
loopne
nop
or
and
mov
fadd
pop
adc
mov
and
or
add
jmp
xchg
inc
mov
dec
das
lods
cmovo
lea
out
inc
xchg
dec
jb
ss
jbe
test
or
sub
mov
outs
fld
pop
js
inc
repz
xchg
call
mov
or
mov
adc
add
push
xor
in
aas
and
cmovle
and
pop
jmp
add
pop
icebp
adc
add
sub
ficomp
xor
adc
clc
xchg
(bad)
fild
dec
mov
test
js
inc
jmp
xchg
or
std
mov
push
dec
push
or
mov
mov
push
adc
mov
hlt
or
sub
shr
sbb
and
push
mov
popa
and
mov
mov
jbe
sub
sbb
sub
daa
add
into
dec
mov
fild
sub
cwde
or
jo
sub
hlt
mov
rcl
xchg
inc
cmp
(bad)
shl
in
or
pop
or
cmp
shl
dec
addr16
adc
ins
add
or
pop
fistp
sub
nop
mov
repz
push
xor
(bad)
sub
sub
or
fbstp
mov
adc
pcmpgtd
jmp
inc
inc
inc
clc
jmp
or
or
push
inc
or
push
into
xchg
pop
(bad)
out
sbb
into
bound
enter
clc
pop
push
adc
lds
sub
sahf
dec
jmp
clc
adc
and
outs
push
jmp
jns
pop
mov
lock
dec
mov
or
sbb
pop
jmp
and
push
push
add
or
mov
sub
mov
stos
jmp
mov
shl
push
call
jmp
fisttp
or
adc
jmp
inc
shr
call
and
adc
sar
xor
jb
outs
mov
fucomip
cmp
call
mov
or
stc
rcl
ins
mov
or
dec
cmp
je
pop
cmp
rcr
sar
mov
push
and
add
(bad)
sub
jb
inc
jle
lods
ja
stos
in
sahf
shr
(bad)
loop
and
sub
jg
dec
mov
bound
sub
cmp
push
xlat
push
rcr
xchg
push
es
push
jns
retf
push
add
xchg
pusha
fs
aaa
inc
push
popa
sbb
add
dec
lea
push
loop
std
inc
mov
in
dec
repz
nop
push
cmps
shl
retf
adc
dec
mov
mov
xchg
pop
mov
sbb
pop
jecxz
mov
in
pop
xor
dec
xor
lock
call
sub
inc
je
test
xor
mov
inc
test
pop
cmp
movs
xor
inc
sbb
jl
or
icebp
das
loop
sar
movd
push
push
xchg
ss
and
xor
add
in
arpl
pop
inc
jo
shl
jmp
adc
jmp
pop
dec
inc
in
push
xlat
(bad)
cs
mov
push
or
pop
outs
pop
add
push
pop
repnz
inc
fsubr
xor
jge
jp
loopne
cmp
ins
push
inc
push
loope
push
in
jb
push
dec
and
inc
jae
mov
das
cmp
hlt
add
push
(bad)
mov
mov
adc
sysenter
das
mov
inc
fsubr
call
sbb
test
sbb
leave
ret
add
mov
or
push
pushf
push
adc
call
cmp
pop
je
not
pop
scas
(bad)
push
enter
xchg
cmp
add
cmp
call
or
sbb
or
movs
inc
and
rcl
adc
xchg
push
jl
sbb
adc
or
aas
jno
div
shl
pop
(bad)
retf
repz
ret
cmps
mov
adc
mov
mov
cmps
mov
cmp
cmp
mov
ror
retf
jmp
jb
push
xor
mov
sub
into
mov
adc
or
and
xor
test
mov
pop
sbb
call
retf
mov
adc
inc
pop
inc
push
ret
nop
push
mov
jne
and
sbb
sti
pop
imul
icebp
fcmove
sub
mov
mov
or
jge
cmp
test
retf
sub
pop
test
lea
sbb
and
mov
rol
std
sbb
push
test
inc
cmp
jb
or
ja
ins
mov
int3
mov
and
jl
pop
ret
call
fisttp
mov
mov
test
xor
idiv
lock
test
ret
iret
mov
add
in
dec
adc
es
rcl
push
mov
or
cmovne
and
cmp
fld
out
cmp
(bad)
push
mov
xor
pushf
les
inc
jo
jae
repnz
adc
pop
dec
scas
shr
pop
push
dec
push
aaa
xchg
inc
ficom
sbb
push
xchg
and
cmp
mov
in
and
inc
add
int
cld
jmp
push
or
jecxz
inc
mov
and
pop
test
pop
add
lea
popf
jbe
scas
push
adc
jo
inc
xlat
imul
ds
adc
jne
xchg
cmps
and
mov
pop
div
dec
and
in
inc
lock
shl
push
mov
or
or
sahf
rcr
jle
les
xchg
call
mov
jne
mov
add
push
push
adc
(bad)
pop
(bad)
sar
jg
cmp
push
daa
add
mov
add
sar
mov
sub
add
mov
loopne
pop
jb
enter
mov
aam
fistp
xchg
je
fst
fisubr
das
icebp
bswap
jmp
jmp
cld
out
pop
pop
test
mov
xchg
xor
imul
lea
sbb
in
jp
xor
pusha
pop
dec
sub
test
movhps
and
fs
pop
dec
pushf
data16
inc
push
cmp
dec
jns
jmp
inc
add
test
and
or
jmp
cli
in
lods
jmp
call
js
adc
push
hlt
mov
xor
dec
cmc
idiv
push
jmp
movsx
jle
adc
dec
sbb
cmp
loopne
ds
push
pusha
xlat
push
ins
cmp
fsub
je
loopne
push
push
dec
mov
jge
aaa
out
call
jmp
fcom
mov
add
mov
add
inc
ins
push
dec
test
js
jnp
dec
add
pop
scas
push
pop
mov
push
inc
mov
lea
jl
les
xadd
mov
xchg
inc
push
jp
add
cmp
mov
fidivr
add
lods
pop
sbb
test
rol
pusha
gs
out
push
add
popf
inc
mov
cmp
sbb
mov
cmp
jne
movzx
and
pop
aam
inc
inc
sbb
out
mov
int
push
jmp
call
iret
mov
aaa
pop
lock
test
jo
enter
pop
jecxz
cmp
xchg
rcr
push
jp
(bad)
fisttp
cmp
daa
inc
push
dec
cld
neg
mov
inc
mov
sbb
push
cwde
xchg
cmp
fld
sbb
pop
pop
clc
loop
sti
mov
clc
add
xchg
mov
ret
xchg
outs
and
cwde
xchg
dec
dec
cmp
loopne
push
adc
mov
sub
adc
jp
mov
adc
dec
mov
sub
lds
imul
sbb
jns
pop
xor
mov
int3
mov
daa
jmp
hlt
xchg
cmp
jge
mov
mov
add
in
in
add
cmp
sbb
push
adc
push
xchg
shr
cmp
mov
dec
mov
inc
inc
cmp
or
loopne
and
sub
bound
pop
daa
inc
mov
aas
inc
add
push
stos
xchg
dec
dec
xchg
pop
mov
adc
cmp
add
inc
and
fadd
shl
adc
test
mov
adc
or
jne
jb
mov
fs
add
pusha
cs
fst
xor
sub
jns
and
fadd
rol
mov
jo
retf
jmp
js
mov
and
jns
push
mov
(bad)
(bad)
in
dec
arpl
jle
inc
push
(bad)
sbb
cdq
sub
xchg
pop
mov
ins
adc
je
push
inc
cmp
movs
jb
mov
sub
adc
jnp
sbb
jmp
or
fild
xchg
dec
push
xchg
scas
sar
or
sbb
add
xor
inc
addr16
jmp
int
popf
aaa
pop
pop
call
adc
bnd
iret
lods
mov
mov
pcmpgtb
test
and
nop
inc
sbb
in
mov
mov
into
push
push
pusha
sbb
pop
inc
and
test
sbb
mov
ja
adc
add
jns
call
and
clc
lahf
hlt
int
ins
aam
fdivr
jge
mov
add
loope
fistp
and
(bad)
lods
push
mov
ins
retf
sar
pop
dec
and
ret
stos
sbb
cmp
xchg
push
test
inc
adc
stos
stos
call
sbb
loopne
add
fdiv
jb
dec
inc
cmp
xchg
ret
adc
cmp
retf
adc
mov
adc
push
add
or
sahf
jmp
add
add
lds
rcl
retf
inc
sbb
xchg
fs
jo
das
sbb
sti
(bad)
lahf
loopne
mov
sub
cmp
cs
xor
scas
sub
stos
leave
enter
or
or
xor
cmp
movs
jle
sbb
adc
add
and
sbb
inc
and
scas
jge
ins
sub
jmp
mov
fnstsw
scas
pop
push
adc
mov
add
mov
cmp
add
es
call
inc
pop
mul
les
push
dec
mov
adc
cmp
test
sub
cmp
add
add
push
pop
push
popf
ss
std
xchg
and
dec
sub
sub
jb
fwait
and
adc
inc
sub
daa
and
inc
ret
out
pusha
jmp
xor
or
dec
sbb
add
das
add
fs
cwde
pop
ja
push
ror
mov
pop
sub
push
les
clc
mov
mov
in
push
clc
ins
sub
add
sbb
or
jmp
and
xchg
call
lock
dec
adc
adc
jmp
test
push
movs
and
xchg
mov
mov
sbb
arpl
inc
fwait
es
dec
cmp
xchg
pop
test
inc
into
out
test
inc
xlat
mov
cmp
les
push
jmp
mov
push
test
inc
jge
aad
shl
and
iret
sub
(bad)
mov
xchg
or
inc
push
fs
retf
mov
sub
inc
mov
(bad)
jle
push
repnz
dec
sar
test
pop
xchg
mov
xlat
loopne
mov
fisubr
pop
adc
pop
lods
das
nop
jb
stc
pop
ja
pop
mov
mov
lock
and
or
sbb
add
mov
stos
in
pop
pop
dec
or
inc
adc
mov
sub
inc
sbb
jle
retf
push
pop
aas
shl
push
cmp
xlat
cli
pusha
test
mov
movs
mov
pusha
ins
out
shl
and
pusha
popf
mov
sbb
sbb
cmp
and
leave
and
fmul
les
lods
xor
clc
mov
push
jmp
xchg
or
mov
mov
jnp
inc
push
xor
(bad)
dec
jnp
leave
and
xchg
ja
sbb
xchg
sub
xchg
mov
inc
cmp
shl
xchg
push
(bad)
jge
dec
jb
jnp
es
test
xor
aad
xchg
test
add
sbb
cmp
in
jb
leave
cmc
loope
and
and
push
xor
mov
jb
pop
sbb
push
cmps
add
mov
mov
jmp
fs
inc
and
xor
push
jnp
jmp
leave
pushf
pop
repz
sbb
pushf
shl
mov
(bad)
cmps
test
mov
mov
and
sub
inc
xchg
xor
ret
jnp
cwde
jb
(bad)
or
lea
xor
and
imul
test
sub
add
or
dec
jb
movs
bound
aas
dec
popf
ret
or
xor
pop
mov
pop
jne
sbb
inc
cmps
or
inc
imul
enter
jne
xor
inc
jne
jb
leave
pushf
pushf
nop
adc
jo
inc
es
nop
fdiv
out
mov
jne
dec
xchg
cmp
jne
xchg
jns
daa
pcmpeqb
push
jmp
or
rol
jmp
je
or
mov
jge
jmp
adc
mov
lahf
cmps
std
dec
cmp
dec
cmp
jp
and
cs
and
repz
mov
or
xchg
xchg
outs
rol
jb
test
out
cmp
jns
or
or
jne
adc
inc
jmp
jge
js
retf
push
add
pop
push
inc
adc
pop
inc
(bad)
cmp
pop
retf
jne
(bad)
daa
push
dec
cld
push
ror
pop
shr
add
in
pop
lods
popa
into
test
dec
movs
fild
xchg
lock
test
or
xchg
push
mov
nop
mov
mov
and
arpl
test
(bad)
fisttp
loopne
rcr
idiv
aas
or
test
xor
ja
call
pusha
inc
and
int3
sub
cmp
dec
test
sahf
and
sbb
push
hlt
xor
or
add
std
and
out
mov
pop
adc
add
xor
and
sbb
push
enter
inc
fsubrp
mov
je
je
xchg
sbb
mov
popf
in
cmp
(bad)
cmps
sbb
pop
jb
inc
dec
call
push
call
call
mov
jge
sbb
add
(bad)
(bad)
adc
push
inc
clc
mov
sbb
daa
push
adc
mov
lods
add
add
ja
inc
(bad)
scas
jbe
rcl
lds
pop
xor
ror
adc
push
les
xor
icebp
push
xchg
push
bound
scas
inc
adc
xor
push
les
fsubr
push
stc
mov
or
sub
xor
pop
mov
shr
pop
cmp
enter
or
shl
cld
cli
inc
repnz
mov
test
xor
push
mov
mov
or
hlt
lock
and
cmp
xchg
gs
call
sub
ret
and
call
xor
pop
xchg
adc
movs
push
jno
pop
xchg
sub
nop
or
xor
inc
sbb
in
xchg
movs
jmp
outs
ja
frstor
push
cmps
test
adc
dec
cmp
imul
dec
leave
aam
jne
add
pop
mov
xchg
and
xor
and
test
sbb
jp
add
outs
cmc
mov
mov
dec
xlat
mov
(bad)
mov
clc
mov
sub
and
lea
inc
cmp
lods
ins
push
rcl
push
lahf
dec
ficomp
ret
ror
push
aaa
sar
test
adc
push
jl
cmp
or
lods
stos
cmps
je
jo
sbb
ror
scas
or
xor
mov
outs
and
inc
adc
cdq
rcr
adc
mov
pop
test
xor
mov
pop
adc
outs
or
push
popa
xor
mov
mov
push
and
arpl
mov
leave
or
clc
retf
adc
nop
pop
mov
push
outs
mov
jge
and
mov
pop
cmp
and
push
cmp
cdq
scas
mov
les
push
ror
mov
xor
jge
mov
add
and
and
push
push
aam
or
sub
test
mov
fs
stc
test
cdq
dec
test
ds
push
pop
inc
sub
and
xchg
into
pop
xor
ss
mov
push
not
adc
sub
pop
jns
jmp
jbe
pop
fnstsw
push
sub
retf
adc
fnstcw
je
mov
mov
movs
lock
adc
imul
call
not
fmul
int
les
dec
adc
mov
(bad)
dec
ror
out
sub
xchg
lods
push
repnz
mov
push
or
loope
mov
add
adc
fsub
xchg
mov
inc
jne
mov
data16
jmp
inc
into
xor
sbb
sbb
popa
and
in
dec
dec
mov
popa
sub
push
aam
into
mov
or
(bad)
rcr
fcmovnb
rol
test
in
loopne
inc
out
jne
xchg
add
inc
(bad)
ds
imul
es
ja
cmp
adc
div
dec
jmp
xor
test
inc
inc
pusha
add
in
add
in
inc
inc
inc
pop
je
pop
hlt
mov
mov
push
cdq
mov
jecxz
(bad)
fs
or
push
mov
(bad)
adc
stc
add
and
loopne
inc
icebp
xchg
xchg
or
inc
push
inc
xchg
in
and
arpl
add
mov
push
mov
mov
inc
inc
add
xor
inc
jmp
dec
(bad)
pop
add
add
popf
popa
adc
push
sub
push
pushf
cwde
leave
mov
or
mov
cmp
mov
push
mov
sbb
mov
jmp
(bad)
inc
dec
xor
xor
clc
and
cmp
xor
aas
jae
clc
rol
pop
pop
(bad)
or
div
and
scas
hlt
pop
cmps
sub
jne
shr
or
pop
dec
mov
push
mov
jne
mov
xor
dec
sub
add
(bad)
push
outs
dec
push
xchg
rol
sub
dec
fbld
cmp
or
jmp
sbb
push
(bad)
nop
pcmpeqw
retf
cmp
sub
rcr
lock
sub
push
rcr
push
adc
cli
dec
push
clc
out
lods
(bad)
sbb
adc
dec
push
inc
pushf
ror
dec
adc
loopne
inc
nop
inc
cs
dec
pop
lahf
nop
push
xchg
cmp
imul
push
pop
xchg
push
retf
cmp
(bad)
call
or
movs
cmps
sbb
jbe
inc
(bad)
nop
scas
xor
push
mov
xor
jbe
mov
test
mov
add
hlt
inc
push
pusha
dec
test
inc
scas
mov
into
(bad)
mov
fisub
bound
jb
add
add
icebp
pop
inc
mov
push
push
mov
mov
das
les
mov
push
nop
mov
xor
xor
push
sbb
mov
pusha
lock
lock
ja
pusha
cmps
push
sbb
xchg
pop
mov
add
repz
es
add
lock
not
push
rcr
stc
dec
test
or
xor
xchg
ret
(bad)
xchg
test
or
jmp
mov
ins
aas
call
inc
dec
enter
add
add
cmp
movs
xchg
lahf
add
cmp
or
dec
cdq
or
lds
mov
in
sub
or
mov
inc
mov
jbe
add
cmp
ret
mov
and
xchg
fs
jnp
je
ds
and
sbb
stos
(bad)
cli
dec
inc
add
add
xchg
jmp
dec
pop
arpl
add
call
jb
push
pop
gs
call
ror
xor
imul
jns
(bad)
fdivr
pusha
xchg
mov
sub
inc
cmc
adc
test
xchg
out
xor
outs
popf
sbb
(bad)
push
sahf
call
(bad)
fs
push
cmp
cmps
mov
or
cmp
stc
adc
and
cld
jne
and
jp
cmp
mov
rol
push
pusha
sbb
push
test
sub
imul
mov
jae
push
aaa
add
sbb
push
xchg
out
inc
loopne
add
daa
cmp
xchg
sbb
outs
add
loope
(bad)
push
jl
push
sub
xor
pop
add
shl
or
pop
inc
jmp
jge
call
add
jo
sbb
adc
data16
sbb
or
adc
cs
(bad)
fmul
inc
dec
pop
jbe
add
pop
std
xlat
sahf
dec
add
(bad)
in
sar
jg
jmp
adc
fs
pop
jl
inc
pop
or
add
rcl
loope
imul
mov
enter
or
or
sti
scas
dec
shl
and
loopne
cmp
mov
adc
test
mov
sub
loopne
xchg
push
fnstcw
lock
les
in
pop
sub
cmps
movs
(bad)
retf
lock
xor
mov
fsubr
fisub
stc
ds
call
call
xrelease
sbb
in
or
aaa
or
inc
in
movhps
jp
push
dec
mov
push
sbb
jmp
ins
call
dec
pop
sbb
in
push
outs
cmp
bound
or
test
or
sbb
or
inc
rcl
cli
xchg
sar
dec
ror
shl
jnp
fsub
or
mov
aam
or
jae
pop
fst
int3
lods
jl
enter
cmps
and
inc
call
clc
sar
fisub
aam
leave
sbb
rcl
dec
shr
xchg
push
(bad)
push
lea
pop
cmp
sbb
add
ds
lods
mov
mul
and
test
push
clc
into
stos
call
mov
fcmovu
and
cmp
adc
pop
add
or
and
cmc
xor
mov
shl
xor
movs
push
jecxz
ss
jmp
ja
ret
repnz
pop
sbb
loop
and
loope
test
inc
pop
xor
repz
jmp
xchg
enter
sbb
(bad)
int
movs
cmc
aam
xor
sbb
and
cmp
xchg
mov
jl
push
jmp
cmp
in
mov
ja
popa
nop
and
sub
dec
xchg
inc
sbb
mul
in
push
mov
cmc
inc
outs
sub
scas
shl
sbb
test
sti
inc
inc
inc
inc
movs
test
test
jae
push
ss
cs
(bad)
mov
mov
repnz
scas
retf
xchg
push
in
pop
adc
aam
out
adc
cld
jmp
ror
xor
push
push
pop
push
jl
pop
jo
sti
or
inc
mov
or
mov
push
adc
sub
add
lods
add
dec
or
add
inc
cdq
cs
dec
add
mov
les
sbb
cld
ss
and
or
cmc
sti
or
sbb
test
int3
mov
sbb
sub
or
sub
fist
out
(bad)
retf
fld
retf
sbb
pop
je
sub
pusha
pop
cmc
and
or
jle
add
imul
cmp
or
pop
add
add
xor
test
inc
clc
(bad)
lock
push
cmp
jl
mov
cmp
dec
jmp
sub
inc
jne
clc
add
push
fadd
mov
add
addr16
aaa
mov
into
push
jmp
(bad)
jb
lods
add
fadd
cpuid
mov
cmp
pop
pushf
in
cwd
popa
dec
dec
or
pushf
dec
or
mov
dec
mov
icebp
cmp
scas
mov
pusha
std
mov
mov
xor
xchg
mov
or
mov
dec
pushf
cmc
jae
jb
jnp
mov
mov
pop
aam
iret
jo
fwait
mov
ins
shl
cli
call
fidivr
hlt
cs
imul
es
frstpm(287
or
xor
out
push
mov
mov
ds
or
pop
xchg
fdiv
inc
pop
fcom
sbb
mov
mov
inc
jge
imul
inc
loopne
ret
sub
mov
fs
movs
push
nop
adc
aaa
mul
movs
push
inc
xchg
mov
or
loope
pop
mov
push
jle
jno
inc
add
xchg
mov
(bad)
pop
das
or
jno
shr
sbb
push
ss
mov
clc
sbb
(bad)
jne
cmp
and
jg
inc
jmp
xor
adc
mov
in
inc
outs
mov
pusha
jbe
add
aam
lock
movs
ins
ja
adc
dec
jg
(bad)
sbb
or
sub
jno
test
loopne
dec
(bad)
pop
test
call
sbb
sbb
cdq
cmp
push
jp
iret
xchg
push
ss
imul
pop
std
stos
sti
mov
ror
cmp
pop
test
cmp
sahf
out
ret
test
and
not
jnp
adc
repnz
and
mov
xchg
or
adc
call
jnp
ret
or
jbe
inc
retf
stos
cmp
push
mov
pop
mov
ret
into
popf
cmc
push
dec
push
lea
mov
xchg
or
jmp
pop
push
je
push
push
sbb
cmp
jcxz
jg
nop
adc
xlat
je
cmp
pop
and
and
push
and
mov
xchg
lods
and
add
sub
or
mov
jmp
popf
push
sbb
je
dec
xor
push
or
sub
pop
inc
push
(bad)
push
or
cs
inc
adc
push
or
or
xor
paddsb
cmp
push
lea
cmp
pushf
retf
test
fisub
pop
call
retf
out
test
jp
jl
jmp
fidivr
xchg
mov
dec
mov
and
adc
cld
lahf
mov
push
int3
push
cdq
mov
push
jnp
dec
or
ins
push
add
dec
inc
sub
pop
cmp
idiv
mov
cmp
and
or
lea
push
push
mov
popa
push
cld
sbb
sbb
lock
test
and
rcr
and
icebp
xchg
inc
outs
and
mov
push
jo
adc
xchg
and
loopne
mov
jo
mov
or
fcom
xor
stos
jmp
or
test
aas
out
mov
push
ins
les
pop
lahf
ret
adc
xchg
mov
add
pop
cmp
pop
jbe
cld
xchg
retf
repnz
call
out
(bad)
mov
jmp
push
xor
sbb
mov
push
pushf
popf
xor
cmovbe
jmp
pand
mov
sub
mov
add
js
(bad)
movs
push
imul
or
cmps
movs
xor
jno
inc
out
loopne
pop
ret
lods
sub
mov
loopne
jge
mov
(bad)
rol
add
and
adc
gs
cmc
mov
adc
lds
pop
in
mov
adc
adc
adc
popf
fidiv
nop
rcl
test
or
test
push
push
ds
sub
inc
mov
pop
mov
dec
rol
push
lea
or
push
adc
cmp
lods
gs
test
mov
mov
sbb
mov
xchg
adc
test
(bad)
mov
jae
fs
imul
adc
add
jns
sti
pop
(bad)
adc
jae
and
sbb
aam
or
pop
add
or
add
adc
or
lods
cli
inc
test
xchg
fsubr
cmp
or
cmp
ror
cmp
jb
adc
cdq
fwait
mov
sub
push
sub
outs
adc
and
imul
cwde
and
rol
ss
int
adc
test
in
or
cmp
push
jnp
mov
je
ins
das
mov
adc
cmp
mov
jmp
xor
loopne
or
outs
inc
xchg
xor
lea
in
js
add
test
ds
neg
adc
stos
add
xchg
and
(bad)
xchg
in
les
mov
jo
sbb
aam
imul
mov
jmp
xor
popf
mov
xor
je
setbe
jb
xchg
call
imul
inc
clc
pop
pop
pop
xor
hlt
sti
push
mov
retf
mov
sbb
out
call
mov
in
sub
and
jp
adc
repz
adc
mov
bound
dec
push
ret
mov
arpl
and
mov
xchg
or
hlt
add
push
les
jne
pop
jg
mov
sbb
mov
test
mov
sbb
inc
xchg
inc
mov
stos
sbb
push
adc
sub
push
mov
adc
jmp
adc
bound
xor
and
push
inc
adc
das
add
add
addr16
jae
test
mov
cmp
inc
sbb
arpl
test
add
stos
lds
xchg
and
mov
push
test
jns
add
sub
push
push
mov
cdq
rcpps
bound
push
repz
adc
xchg
in
jp
cmps
es
pushf
add
push
jge
test
sub
jmp
pop
loope
adc
retf
or
out
push
push
inc
std
jl
inc
push
xlat
jne
lods
or
cmps
sbb
call
pusha
out
jg
sbb
jne
jmp
out
push
mov
mov
aaa
arpl
adc
cmp
sub
gs
mov
cmp
clc
je
cmps
je
mov
sbb
sub
sub
dec
push
pop
fwait
(bad)
das
add
cs
dec
mov
das
shr
push
jl
test
mov
pop
outs
leave
inc
test
jo
push
stc
jge
add
jge
xchg
cmp
sbb
inc
push
pushf
add
or
test
je
sub
jo
aam
imul
sbb
test
jnp
cmp
inc
mov
pop
xor
sub
jge
jo
aam
es
inc
lods
sub
shr
out
sub
rcl
popa
dec
js
xchg
mov
push
mov
cmps
inc
fs
sbb
dec
lds
call
cdq
inc
pxor
pop
nop
sbb
jg
push
sub
inc
adc
and
inc
push
mov
mov
pusha
jo
test
cdq
jge
aam
mov
jbe
js
cs
sub
jo
add
or
enter
jg
pop
gs
xchg
scas
adc
jecxz
add
pop
pop
cdq
(bad)
sbb
add
cmp
nop
dec
sub
shl
repnz
ss
xchg
(bad)
stos
sbb
out
mov
sub
xchg
push
add
or
push
push
jle
or
jge
je
ds
xchg
add
or
pop
xor
out
jne
or
test
or
xchg
mov
cmp
test
adc
adc
and
cmp
dec
push
pushf
pop
mov
xor
js
popf
pushf
pop
sub
je
push
popf
ds
cmp
je
(bad)
stos
aam
pusha
stos
and
mov
div
test
adc
call
lock
sbb
cs
sbb
(bad)
jge
mov
push
adc
push
sti
push
sbb
xchg
or
and
outs
dec
push
jl
fisttp
outs
inc
or
jbe
jle
cmps
push
test
ja
adc
mov
inc
test
sbb
hlt
outs
rcl
jle
ret
cdq
cmc
mov
mov
fcmovne
ds
dec
popa
iret
sbb
ds
push
clc
push
int3
icebp
je
sub
and
sub
xchg
movs
dec
sub
ja
jle
mov
je
add
sub
or
test
inc
mov
xchg
movs
sti
push
mov
push
stos
(bad)
xor
in
inc
fdiv
adc
ss
push
fsub
jp
sub
sbb
ins
push
xchg
mov
psubd
(bad)
adc
loop
das
dec
call
enter
xchg
add
jne
sbb
xor
xlat
jmp
push
push
inc
jl
mov
iret
jb
adc
cmp
pop
jmp
loope
adc
rcr
push
pop
dec
popf
and
or
xor
in
fmul
cmps
loopne
aam
jne
push
(bad)
mov
(bad)
dec
jmp
inc
jne
jb
and
push
enter
movs
pop
sbb
enter
jmp
jno
inc
or
shl
test
bound
adc
mov
test
add
(bad)
dec
xor
mov
sub
(bad)
mov
xchg
movs
and
sbb
mov
dec
clc
test
leave
and
adc
call
and
dec
push
dec
lods
and
add
add
adc
imul
mov
push
pop
pop
js
add
loope
mov
cmp
lea
mov
inc
and
clc
sbb
cdq
jge
add
adc
ror
inc
and
sbb
jg
sbb
imul
add
inc
pop
mov
pop
dec
mov
les
xor
pushf
push
out
lods
mov
mov
shl
xchg
sahf
ud2
or
outs
jl
mov
dec
call
or
pop
push
inc
repz
push
mov
call
fwait
push
push
inc
or
jl
and
jmp
jnp
ins
xor
out
and
sbb
cmps
or
sbb
adc
mov
nop
aam
and
push
test
scas
inc
jmp
hlt
push
or
mov
jge
inc
aad
psubq
mov
pop
lods
and
dec
jae
sub
test
or
fnsave
xchg
push
sub
push
sub
mov
std
gs
dec
jbe
test
inc
test
xchg
inc
fist
xchg
cmp
adc
xchg
inc
sbb
or
not
or
mov
mov
out
dec
sbb
lea
or
out
push
(bad)
and
(bad)
jbe
push
pop
rol
imul
adc
push
xchg
and
scas
into
icebp
(bad)
and
(bad)
xor
les
dec
push
sahf
aas
jl
dec
cmps
xor
push
pop
test
pusha
gs
aaa
loop
mov
add
sub
fild
jne
je
cmp
not
gs
push
test
sub
xlat
sub
xchg
sbb
sub
add
inc
jo
ins
dec
ja
pop
(bad)
mov
mov
xchg
js
lods
jmp
jl
dec
xchg
sbb
(bad)
lods
mov
sbb
std
fs
arpl
mov
arpl
mov
out
xchg
dec
pop
xchg
mov
sub
sbb
dec
cld
sbb
adc
sti
adc
out
add
sbb
test
pop
and
sub
movs
cli
lock
clc
(bad)
add
cmps
enter
mul
ret
inc
popa
push
sbb
lock
jp
jmp
out
mov
push
xchg
xchg
fs
jns
dec
or
sahf
sbb
cdq
adc
test
nop
movs
mov
push
jns
enter
test
sti
adc
call
or
push
mov
dec
push
sub
jo
and
mov
ins
add
and
push
div
retf
dec
je
and
jno
add
sar
push
cmp
pop
loopne
mov
sbb
push
imul
jg
mov
call
and
std
pop
(bad)
jmp
pop
sbb
mov
mov
repz
pop
pop
cmp
fs
retf
or
rcr
sub
daa
or
xor
ror
es
shr
imul
loopne
jb
aam
arpl
push
inc
jmp
cld
jl
into
sbb
or
mov
fmul
adc
add
add
and
ret
push
or
call
push
push
js
popa
aad
or
or
pusha
push
cld
stos
add
call
pop
add
sbb
rol
inc
xchg
push
lds
adc
ins
pop
fidivr
scas
scas
mov
push
mov
jmp
push
dec
mul
sbb
mul
pop
or
in
cmps
and
adc
addr16
push
fucomip
adc
mov
sti
ss
sti
sub
in
pop
jle
pusha
cs
sbb
inc
fs
and
fld
ja
or
adc
adc
jo
shr
sbb
add
sub
cld
fsubr
fucomi
jb
jae
add
pop
sbb
retf
jmp
and
push
ins
fnstsw
sub
inc
fs
out
add
adc
ds
mov
jnp
add
jle
xchg
adc
mov
aad
mov
das
or
add
movs
dec
pop
add
jno
xor
cmp
mov
out
mov
lea
ins
adc
rcl
add
div
into
(bad)
sti
adc
add
sbb
iret
add
test
xor
sbb
sbb
pushf
sbb
jns
or
stos
push
shl
inc
fdivr
lock
scas
fnstcw
shl
lea
mov
jno
icebp
ins
iret
xor
imul
pop
push
push
pop
push
inc
dec
lods
(bad)
or
sar
pop
jmp
inc
xchg
call
jne
or
out
fwait
ins
adc
data16
sbb
add
das
xor
out
cmps
shr
push
rcl
push
mov
or
aas
mov
xor
je
or
sbb
movs
add
sub
inc
jle
sbb
gs
lea
mov
dec
leave
fiadd
dec
mov
lea
push
adc
pop
xlat
mov
pop
rol
push
mov
mov
sbb
fdivr
(bad)
mov
loope
je
movups
rol
adc
leave
mov
push
jl
sti
jmp
mov
mov
stos
sub
mov
sub
call
shl
scas
popa
dec
or
call
add
adc
sbb
sub
dec
call
retf
xchg
mov
push
call
jl
repnz
call
fs
pop
inc
ins
pop
pshufw
je
mov
vmread
idiv
arpl
(bad)
sbb
sub
retf
mov
movs
jb
pop
nop
mov
stos
pop
sub
xchg
mov
mov
mov
sub
rcl
add
sbb
inc
pop
ja
jb
add
int3
sbb
and
int
or
cmp
and
xchg
data16
sbb
sbb
ret
pushf
cmp
dec
mov
and
sahf
and
int
ja
and
stc
and
cmp
dec
(bad)
mov
sar
sbb
dec
jne
imul
push
or
adc
data16
and
mov
rcl
arpl
cmp
or
test
adc
push
sbb
cs
xor
inc
mov
out
dec
xchg
pop
cmps
in
or
adc
pusha
adc
sbb
sub
or
aad
lods
push
jmp
cmp
jo
fistp
rcl
inc
mov
or
inc
mov
jmp
sbb
scas
sbb
add
in
mov
push
and
bound
mov
ret
pmuludq
pop
jmp
in
pop
and
xchg
popa
lea
add
call
jb
lea
test
xchg
mov
adc
ja
clc
sbb
jne
mov
outs
sahf
out
push
cmp
jne
(bad)
es
jne
push
inc
out
call
clc
bound
dec
cwde
push
mov
jb
jmp
movzx
dec
(bad)
jmp
adc
dec
repz
adc
std
jmp
cld
iret
into
aam
lods
fucomi
pmaxub
ret
cmp
mov
pop
mov
sbb
ret
mov
add
or
and
sub
icebp
(bad)
adc
cmp
and
or
push
xchg
clc
retf
or
inc
loopne
cmp
es
loopne
or
and
jo
daa
test
push
cmp
loopne
dec
pop
and
xchg
and
mov
jmp
int
add
pop
dec
adc
sub
xor
mov
push
sub
xchg
rcr
loopne
pop
(bad)
ins
shr
xchg
and
adc
or
test
push
ss
pusha
sbb
jge
and
adc
jne
int3
inc
adc
pop
push
sbb
(bad)
call
imul
inc
dec
shl
inc
std
mov
es
movs
push
aaa
dec
test
arpl
in
xchg
dec
inc
jmp
inc
(bad)
lahf
xor
add
rcl
sbb
fdivr
cmp
sbb
mov
add
or
adc
xchg
add
add
jno
addr16
mov
inc
xchg
cmps
inc
pop
sar
je
sub
mov
leave
xchg
xchg
jne
ja
cwde
in
das
adc
iret
aas
dec
popa
lock
push
pusha
cmp
inc
cmp
imul
sub
mov
repnz
push
shl
loop
js
xor
mov
push
dec
or
cmp
xchg
cli
fsub
or
test
sub
and
mov
in
add
adc
sub
call
xchg
and
sub
call
shl
aaa
bound
inc
mov
add
adc
inc
test
call
inc
xlat
jmp
mov
frstor
push
(bad)
sub
and
sbb
jbe
xor
mov
in
popa
inc
rcr
cdq
or
jmp
add
test
and
xor
add
dec
rol
jne
add
mov
or
add
mov
adc
pop
mov
dec
in
add
add
iret
inc
mov
mov
jl
add
fisubr
sar
cmp
add
mov
in
add
or
mov
and
jns
cmp
push
inc
add
add
push
int3
dec
mov
dec
add
pusha
or
aam
cmp
dec
cmp
call
movs
mov
cdq
inc
and
inc
outs
xchg
sbb
rol
pop
data16
mov
ret
bound
push
lahf
push
push
mov
inc
xor
adc
inc
xchg
push
jbe
and
add
ss
(bad)
dec
inc
cmp
mov
sub
and
add
adc
mov
cwde
js
ret
jmp
pop
pop
add
ror
fst
sahf
jl
sahf
aas
cmp
inc
test
xchg
out
leave
out
inc
push
pusha
mov
xor
scas
movs
nop
mov
ja
inc
test
pop
mov
test
or
push
or
xor
sub
jmp
mov
dec
stos
or
push
in
xor
or
or
sbb
cmp
adc
jmp
mov
(bad)
push
and
arpl
mov
mov
mov
add
add
xchg
xor
ins
jmp
push
cmp
sar
add
test
push
adc
neg
in
jo
mov
push
sub
or
test
add
mov
sub
or
mov
pop
mov
xor
les
xchg
cmp
add
jnp
inc
int
popf
cdq
cdq
sbb
sar
dec
dec
(bad)
jmp
mov
jg
add
sbb
mov
enter
pop
(bad)
fmul
add
or
dec
inc
inc
dec
pusha
popa
test
sbb
dec
(bad)
call
shl
and
or
mov
cmp
jne
add
lea
pusha
ins
add
xor
or
push
xchg
pop
out
mov
test
dec
mov
lods
pop
stos
and
sar
dec
mov
test
pop
and
iret
int3
out
sub
lock
add
ror
shl
sub
push
das
cmc
sar
xor
popa
cmp
push
inc
arpl
(bad)
imul
cmc
pop
xor
jl
loopne
mov
sub
push
adc
(bad)
jmp
out
push
js
fiadd
sbb
out
push
fs
(bad)
xchg
in
je
xchg
movs
ja
adc
jb
push
xchg
push
leave
mov
stos
mov
loopne
call
push
test
inc
xor
pop
or
stos
pop
adc
pop
xchg
(bad)
adc
loopne
inc
pop
pop
(bad)
sub
mov
scas
retf
jmp
cmp
xor
les
pop
xchg
inc
cmp
cmp
loopne
jne
jg
dec
(bad)
push
push
push
rcl
lods
adc
cmp
mov
or
xchg
ds
mov
dec
jo
or
jle
inc
ret
dec
leave
test
(bad)
sbb
movs
adc
add
and
fisttp
dec
mov
stos
xchg
and
xchg
cmc
mov
jne
cmp
pop
shl
shl
retf
aas
add
cmp
or
ja
sti
stc
stc
std
add
jmp
and
jb
sbb
sbb
and
dec
mov
add
inc
sbb
clc
xchg
or
xchg
sub
inc
inc
push
call
clc
cld
jmp
mov
xchg
add
or
dec
xchg
retf
in
add
dec
dec
dec
mov
inc
cs
cld
xchg
stos
mov
mov
shl
cmps
adc
fcom
xchg
cmp
sbb
in
(bad)
hlt
lock
sbb
cs
out
aad
push
fwait
jno
jecxz
(bad)
mov
xor
stos
mov
pop
fstp
cld
test
push
clc
popf
add
lea
cmp
push
cs
retf
pop
pop
dec
bndstx
sbb
or
enter
je
test
xchg
push
pop
shl
and
or
outs
inc
aas
jp
arpl
xchg
dec
adc
mov
js
ror
inc
jl
in
movs
cmp
xor
mov
data16
push
mov
(bad)
shr
inc
push
sbb
das
pusha
sub
sub
je
jb
mov
clc
mov
clc
and
jo
jo
shr
mov
(bad)
cwde
adc
clc
fwait
dec
cld
scas
push
or
mov
push
sub
and
lea
ja
push
(bad)
add
sbb
xchg
push
jle
je
inc
push
retf
mov
pop
fnstcw
sub
sub
xchg
fidivr
sub
sub
or
dec
add
pop
push
push
arpl
push
pop
gs
in
rol
and
or
mov
add
xchg
push
bswap
mov
pop
pop
xchg
xor
arpl
shl
and
mov
jae
(bad)
jle
aas
test
inc
pusha
pop
inc
cmp
push
out
sbb
mov
sub
(bad)
jne
push
aam
cmc
mov
inc
xor
or
test
pop
sbb
movs
sbb
rcl
test
sub
aad
sbb
or
or
mov
pop
sahf
push
mov
in
xor
sbb
or
and
call
fidivr
inc
push
and
popf
loopne
inc
sbb
call
ret
sbb
sub
dec
adc
or
cmp
sub
cmps
mov
shl
fwait
retf
push
ins
js
cmp
inc
add
push
ret
cmps
loopne
aam
loope
add
add
xchg
dec
imul
and
mov
xchg
enter
(bad)
adc
push
cmc
lahf
pop
mov
aaa
mov
sbb
sub
arpl
or
into
push
and
jo
leave
pop
shr
mov
ret
or
adc
call
or
jmp
iret
mov
in
cwde
mov
or
mov
icebp
xor
lods
es
pushf
dec
rol
add
or
add
xor
mov
popa
cmp
mov
adc
ret
xchg
cmp
lods
mov
sbb
add
(bad)
mov
inc
pop
aam
icebp
test
push
add
add
rcl
sbb
out
dec
jp
push
dec
ror
dec
push
cmp
inc
jmp
inc
loope
and
inc
or
inc
push
aas
clc
mov
add
dec
icebp
test
jmp
lds
inc
inc
ins
cmps
pop
iret
and
mov
(bad)
cwde
popa
add
lods
add
jns
or
loop
out
into
adc
xor
sub
clc
inc
mov
mov
stos
mov
call
arpl
shl
cmp
push
inc
int
sub
sar
cmp
and
push
lahf
add
rcr
adc
or
xchg
cmp
call
scas
sub
ins
pop
xchg
push
imul
pusha
shr
adc
add
inc
and
int
and
inc
sub
jl
and
inc
sub
pop
sub
or
fnsave
cmc
sub
mov
inc
pusha
das
mov
sbb
push
mov
loopne
xor
mov
fdivrp
and
mov
sbb
or
nop
cld
or
mov
mov
cmp
xchg
xor
and
jns
pop
add
jb
inc
sbb
push
imul
in
add
aaa
jmp
or
in
pop
loop
cmp
test
daa
mov
sbb
adc
ins
add
dec
aas
repnz
add
mov
ins
ret
inc
aas
loopne
sub
push
push
into
jl
inc
shl
inc
pushf
jle
sti
mov
mov
mov
std
sbb
into
push
sbb
inc
cmp
inc
push
or
inc
mov
in
(bad)
outs
retf
shr
sbb
je
jo
push
lock
(bad)
jbe
or
je
push
jns
jne
cmp
mov
add
inc
fs
jp
adc
and
les
test
inc
shl
push
or
mov
pushw
push
push
ins
xlat
rol
add
into
jae
mov
pop
mov
cmp
jne
ffreep
rol
rol
daa
sbb
sbb
mov
sub
or
sbb
iret
adc
push
sbb
xor
xchg
jg
into
mov
and
es
dec
mov
gs
push
shr
ins
mov
pop
pop
test
gs
and
adc
sahf
jo
out
jmp
out
pop
leave
sbb
addr16
sbb
loope
sub
test
cwde
sahf
fcmovnbe
dec
jmp
(bad)
test
aam
popa
test
dec
xchg
and
or
jmp
lods
xchg
cmp
xchg
push
sub
sbb
cmp
(bad)
jmp
fst
mov
or
sbb
sbb
cmp
add
stc
ja
sub
mov
popa
sbb
xchg
int3
sub
cmps
icebp
ror
dec
add
add
mov
popa
popa
jmp
and
xor
in
xchg
sbb
je
jbe
pop
or
cmp
fcom
and
in
movs
lods
fcomp
xchg
aad
mov
test
or
out
and
mov
das
cmps
cmp
mov
je
sub
mov
aas
jne
xchg
mov
add
shl
dec
cmp
mov
in
adc
js
je
aam
sub
cmp
in
sbb
dec
cmp
mov
inc
pop
int3
jo
rol
inc
mov
es
pusha
cs
dec
test
aam
add
inc
jl
pop
je
fs
and
sub
sbb
mov
fisubr
inc
push
dec
test
ret
add
sahf
sub
pop
fisub
dec
jmp
jno
cmp
int
je
gs
sub
inc
(bad)
sub
jge
clc
pop
popa
je
push
adc
push
add
add
adc
and
fwait
cwde
mov
das
shr
js
inc
call
sbb
cmp
xor
les
inc
enter
cdq
sub
rcl
es
cmc
sub
jb
and
pusha
pop
pop
add
jmp
sahf
inc
scas
mov
lock
js
pop
xchg
pusha
shr
fst
and
xchg
fs
inc
clc
adc
cld
movs
call
fidiv
jl
mov
add
(bad)
and
mov
jl
jg
movs
jb
jecxz
inc
dec
(bad)
mov
inc
popa
xchg
shl
sti
js
scas
pusha
jmp
ja
mov
loope
loope
call
pop
push
out
pop
inc
pop
cmp
or
cli
dec
outs
dec
in
add
jmp
in
jae
push
inc
lods
pop
cmps
loope
aam
enter
or
jl
popf
dec
cdq
cmp
das
loopne
add
sub
fwait
mov
call
fcmove
lods
jle
dec
ficom
and
dec
fnstcw
add
dec
cmp
imul
xor
(bad)
fs
adc
dec
mov
sub
jns
add
or
jmp
sar
out
push
add
je
cmp
lar
mov
scas
fs
mov
dec
xor
adc
xlat
movs
not
jmp
sub
add
call
jmp
xor
add
(bad)
dec
clc
jno
lock
call
xchg
pop
sub
adc
or
jo
mov
and
add
or
xor
push
(bad)
or
loope
ret
xchg
int3
sbb
dec
loopne
xor
shl
dec
ins
cmp
dec
push
or
fmul
dec
inc
inc
mov
push
sub
mov
repnz
xor
lock
inc
jle
in
xchg
in
pop
xchg
jge
mov
lock
mov
xor
cld
data16
add
pop
imul
sahf
jbe
xor
adc
das
enter
jo
ds
popa
aaa
and
clc
xchg
clc
pop
jbe
movs
push
pushf
mov
iret
cmps
cmp
fcom
and
jno
fnstsw
loopne
mov
paddusb
js
jns
arpl
aam
add
sbb
or
fwait
(bad)
movs
push
nop
or
xor
sbb
dec
and
inc
pop
sub
movs
mov
mov
pop
call
cs
out
xchg
cmp
and
or
mov
mov
push
scas
inc
movs
adc
pop
pop
test
idiv
dec
ja
retf
je
ja
push
jo
loopne
pushf
add
pop
cmp
and
xchg
cmps
mov
pushf
loope
lods
sbb
jnp
(bad)
shl
(bad)
push
mov
mov
fwait
dec
ficom
jmp
iret
out
ins
(bad)
fmul
popa
jae
sub
test
xchg
push
sub
xchg
xor
je
ror
addr16
test
shr
mov
or
jns
lds
mov
cli
mov
xchg
cmp
adc
mov
icebp
and
mov
lds
lahf
fmul
imul
cmp
xchg
movs
repnz
or
cmp
outs
mov
sbb
fstp
pop
xchg
aas
xlat
outs
ins
adc
pushf
jmp
(bad)
movs
push
inc
dec
adc
loope
add
(bad)
sub
sbb
jmp
push
cdq
or
mov
mov
out
pop
jne
out
ficomp
cmp
(bad)
jae
pop
jle
xchg
jmp
pop
mov
std
adc
js
mov
or
movs
jmp
ins
in
test
cwde
jmp
sub
(bad)
(bad)
cmp
dec
mov
out
cmp
add
cwde
js
daa
fs
xor
cmp
inc
mov
popa
out
fimul
shr
rol
cmp
jl
push
mov
cmp
add
fs
push
push
sub
rol
pop
loopne
inc
pushf
push
es
lock
test
inc
cs
sbb
mov
mov
push
and
sbb
cmp
inc
add
cmp
movs
repnz
inc
mov
mov
xchg
add
enter
movs
repnz
xchg
mov
xchg
mov
mov
ficomp
call
adc
jp
or
daa
fisubr
call
retf
mov
jmp
cmp
add
or
enter
sahf
out
sahf
pushf
mov
push
cmps
ins
fistp
add
push
out
sub
(bad)
cmp
test
adc
jb
sar
push
ds
daa
in
cmp
cmp
dec
xor
inc
pop
cmps
jge
repz
adc
inc
mov
mov
out
fiadd
and
sbb
out
sahf
out
pop
ins
je
sahf
out
sahf
xchg
mov
sahf
cmps
fnstcw
fadd
adc
ds
out
push
fs
xchg
out
sahf
out
mov
fsubr
iret
repz
add
adc
xor
pop
cmp
repz
sahf
mov
out
sahf
out
hlt
add
sbb
dec
out
sahf
out
je
cmps
rcr
jns
shl
lock
or
out
sahf
out
sub
inc
dec
pop
popf
out
sahf
data16
mov
add
test
call
call
ss
cmp
pusha
xchg
setle
pop
repz
cli
push
cs
inc
push
push
pop
jns
out
jo
nop
mov
out
(bad)
call
(bad)
popa
dec
adc
push
popf
lock
inc
mov
mov
mov
or
(bad)
clts
daa
push
dec
aaa
sub
xchg
inc
or
out
dec
scas
sbb
adc
jo
neg
ins
(bad)
push
inc
or
adc
pusha
push
lock
leave
imul
call
cmps
imul
and
add
jbe
fist
sub
jo
jae
mov
and
push
push
out
sub
scas
or
pop
pop
push
jo
sahf
mov
add
or
sahf
pop
or
pusha
and
repz
cmp
loopne
iret
sti
out
push
pop
sbb
jle
cmp
cmp
aas
rol
adc
adc
mov
repz
or
fiadd
cmp
or
jle
repz
out
je
enter
jns
ja
and
push
pop
test
call
lahf
pop
push
sbb
xchg
push
push
iret
cmp
jl
fcomp
cmp
repz
or
dec
clc
repz
repz
mov
iret
jb
les
bound
cmp
repz
add
iret
repz
pop
sbb
jp
aam
jle
sub
out
mov
mov
xor
add
jns
dec
(bad)
xor
int3
vmwrite
lods
push
xchg
jns
out
in
or
sahf
out
sahf
pushf
arpl
fcomp
iret
jnp
repz
outs
cs
dec
cmp
push
cmp
call
adc
push
ret
repz
and
jae
cmp
pop
sbb
iret
cmp
imul
iret
or
push
xor
adc
jne
cmp
jae
retf
stos
add
test
pop
sbb
call
out
jns
sub
dec
pop
fucom
cli
addr16
ret
jae
popa
repnz
(bad)
cmps
cs
jae
popf
cmps
pop
cmp
out
pushf
cmp
pop
sbb
into
leave
(bad)
imul
out
mov
dec
not
cmp
dec
ja
into
addr16
iret
inc
ja
daa
scas
push
fild
repnz
pop
pop
sahf
jg
jns
iret
aas
fisubr
das
mov
jmp
(bad)
push
dec
(bad)
inc
and
jb
mov
jb
shl
icebp
leave
enter
test
test
stc
and
jb
lds
in
aad
jb
pop
mov
enter
int
in
pop
enter
fnstsw
std
ret
jb
pop
jb
jecxz
pop
jb
pop
shl
and
stos
pop
enter
fist
sti
jb
pop
jb
cmps
out
jb
pop
xchg
xlat
mov
inc
jb
test
scas
out
lahf
test
fistp
(bad)
jle
sahf
pop
push
out
add
dec
sbb
adc
add
adc
xor
adc
dec
push
and
add
add
mov
push
jle
sbb
movs
pop
push
popa
pusha
add
call
or
retf
rol
jo
jns
outs
mov
fisubr
call
out
push
mov
mov
rcl
aaa
mul
ins
mov
std
jmp
xor
xor
inc
outs
jo
jb
addr16
xor
xor
int
dec
sub
das
and
imul
inc
mov
xchg
rcr
add
add
mov
or
mul
add
add
xor
inc
cmp
das
pop
add
inc
out
inc
rcl
adc
xchg
ja
push
dec
imul
add
inc
xor
int
cmp
sub
push
or
xor
sub
shl
aaa
mov
sbb
popa
jb
and
jb
xchg
sub
outs
bound
sbb
setle
xchg
jmp
out
push
and
sub
push
jle
jecxz
add
add
daa
daa
pop
adc
adc
fsub
daa
adc
(bad)
mov
or
adc
dec
into
jb
pop
xchg
cmp
cmp
add
add
mov
fcmovnb
(bad)
sbb
jmp
xlat
(bad)
iret
repz
push
add
sbb
sbb
ror
(bad)
(bad)
inc
sub
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
(bad)
dec
fdivr
jmp
rcl
mov
sub
mov
(bad)
call
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
mov
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
jmp
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
call
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
dec
movs
mov
sub
mov
(bad)
and
or
adc
stos
sbb
(bad)
(bad)
cmp
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
addr16
push
aam
call
xor
hlt
(bad)
(bad)
(bad)
dec
xchg
sbb
push
sub
ins
fs
add
hlt
push
imul
ins
sbb
xor
(bad)
(bad)
jmp
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
cld
fistp
ficom
gs
aam
pop
popa
mov
into
(bad)
(bad)
mov
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
jmp
inc
fldcw
inc
mov
sar
add
in
add
pop
dec
or
(bad)
dec
into
push
stos
inc
add
adc
or
and
(bad)
call
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
call
or
mov
xchg
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
(bad)
(bad)
jmp
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
pop
mov
stos
sub
inc
jge
xchg
(bad)
shl
inc
movs
(bad)
(bad)
inc
imul
xor
sbb
push
imul
aam
loopne
(bad)
mov
ficom
int3
dec
frstor
fistp
mov
mov
aad
(bad)
(bad)
(bad)
push
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
push
fmul
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
(bad)
(bad)
(bad)
jmp
mov
mov
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
inc
lds
or
sub
mov
cmps
call
ret
shl
sbb
(bad)
ficomp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
call
or
adc
mov
jnp
sbb
xchg
or
(bad)
(bad)
(bad)
(bad)
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
mov
mov
ja
mov
out
cwde
ud0
cmp
(bad)
inc
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmps
not
pusha
ror
imul
push
scas
fdivr
outs
mov
pop
(bad)
fldenv
fild
aaa
push
scas
mov
fidivr
mov
(bad)
(bad)
inc
push
mov
xor
mov
add
push
xlat
int
push
fdivrp
(bad)
(bad)
call
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
pop
(bad)
out
add
and
ret
push
sub
inc
lds
xchg
inc
dec
or
(bad)
(bad)
(bad)
mov
out
cli
retf
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
(bad)
(bad)
(bad)
jmp
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
(bad)
(bad)
jmp
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
(bad)
(bad)
call
mov
popa
ja
mov
out
repz
gs
fisubr
(bad)
jg
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
or
pop
pop
(bad)
jno
jo
add
sub
mov
mov
mov
xor
call
dec
mov
mov
and
(bad)
jns
(bad)
(bad)
push
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
(bad)
out
adc
push
lea
fnstcw
mov
dec
hlt
mov
or
dec
adc
add
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
add
mov
lea
push
pusha
call
loopne
adc
loope
xchg
retf
les
jb
out
imul
push
mov
(bad)
inc
test
pop
adc
push
sbb
adc
and
inc
and
inc
(bad)
fcomip
jmp
jl
or
push
fs
dec
mov
mov
and
cmps
xor
mov
sbb
loope
lods
out
sar
mov
adc
stos
and
leave
jmp
sti
(bad)
(bad)
(bad)
jmp
gs
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
(bad)
(bad)
push
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
(bad)
cmp
test
cwde
cmp
test
mov
mov
scas
clc
(bad)
dec
pop
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
add
inc
xlat
ss
push
out
mov
mov
movs
(bad)
(bad)
(bad)
inc
inc
jno
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
sar
sbb
adc
cwde
mov
scas
mov
push
mov
(bad)
(bad)
call
push
hlt
out
les
fdecstp
jmp
lea
inc
(bad)
call
(bad)
xor
push
retf
jo
outs
sbb
sub
loope
fisub
loope
sub
push
and
dec
in
mov
(bad)
jmp
xchg
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
(bad)
mov
pop
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
jg
(bad)
push
imul
inc
jp
mov
arpl
lods
(bad)
loope
int3
mov
(bad)
(bad)
dec
dec
adc
mov
jo
popf
mov
test
and
pop
ins
dec
icebp
cmp
les
mov
cwde
dec
add
(bad)
call
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
(bad)
(bad)
dec
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
(bad)
(bad)
call
pop
rcr
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
loopne
and
gs
adc
jns
(bad)
push
movs
dec
mov
movs
daa
sub
repnz
in
(bad)
(bad)
jg
and
out
mov
shl
es
xchg
aas
mov
adc
std
(bad)
jg
out
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
daa
or
mov
jb
and
jmp
push
add
test
pop
mov
mov
ret
mov
lea
(bad)
(bad)
inc
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
sub
sahf
or
es
leave
in
push
ja
pop
sub
(bad)
(bad)
(bad)
jmp
sbb
fild
sbb
repnz
adc
dec
jae
adc
sbb
and
(bad)
adc
nop
dec
(bad)
call
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
(bad)
(bad)
inc
cmp
push
add
outs
jge
aaa
ss
fidiv
test
stos
(bad)
call
xchg
xor
imul
fld
adc
nop
in
and
(bad)
mov
fdivr
(bad)
(bad)
jmp
leave
pop
sub
and
mov
and
mov
sub
fidivr
call
dec
(bad)
sub
hlt
sbb
sub
call
lods
mov
call
pop
cmp
xor
jb
and
lea
jb
pop
je
fwait
aad
js
fs
(bad)
(bad)
dec
push
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
cli
mov
cmp
nop
es
xchg
pop
in
ja
out
clc
jmp
push
xor
cmp
imul
ins
arpl
sub
shr
aam
push
(bad)
(bad)
jmp
fs
imul
dec
pop
mov
outs
jns
(bad)
mov
arpl
dec
retf
or
xchg
mov
dec
(bad)
(bad)
mov
call
test
shl
inc
xor
inc
jae
(bad)
(bad)
call
inc
sub
dec
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
stos
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
inc
mov
xor
outs
pop
ins
das
lods
pop
(bad)
(bad)
(bad)
inc
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
(bad)
(bad)
(bad)
cmp
out
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
lock
cld
sahf
ins
xchg
(bad)
test
loop
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
jmp
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
(bad)
dec
mov
mov
fidivr
jecxz
fstp
mov
(bad)
(bad)
(bad)
call
and
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
jmp
out
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
icebp
(bad)
dec
ret
xchg
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
pop
inc
int3
inc
ins
xchg
sbb
(bad)
jmp
mov
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
(bad)
fild
(bad)
repnz
clc
(bad)
mov
(bad)
jmp
cmp
outs
mov
adc
(bad)
inc
jge
repz
dec
mov
or
(bad)
xor
sbb
mov
test
(bad)
fidiv
fs
mov
adc
fadd
arpl
(bad)
(bad)
jmp
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
call
sub
and
xor
loope
jmp
cmps
jbe
jne
inc
aas
mov
cmps
mov
inc
mov
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
(bad)
(bad)
(bad)
push
dec
mov
mov
pop
dec
adc
mov
mov
fidivr
loopne
mov
in
xor
mov
mov
out
scas
mov
push
shr
(bad)
xor
fdivp
pop
imul
(bad)
(bad)
(bad)
jg
mov
jge
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
(bad)
(bad)
(bad)
call
push
cli
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
(bad)
(bad)
jmp
sub
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xchg
(bad)
(bad)
push
mov
mov
cmp
rol
xchg
or
in
xchg
loop
(bad)
mov
in
rol
cmp
pop
dec
(bad)
iret
aas
sub
xchg
movs
(bad)
inc
ja
push
or
mov
(bad)
in
out
pop
les
and
loop
outs
dec
jg
or
(bad)
jge
jmp
shl
mov
(bad)
lds
xchg
lahf
mov
inc
std
mov
jl
inc
add
call
fwait
pop
aas
test
mov
sbb
(bad)
(bad)
(bad)
dec
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
(bad)
(bad)
(bad)
(bad)
inc
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
icebp
(bad)
(bad)
push
sbb
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
fild
aas
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
std
(bad)
mov
fwait
push
add
in
mov
dec
leave
xor
inc
arpl
or
call
adc
push
std
(bad)
(bad)
dec
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
cld
push
test
mov
in
pop
shl
push
mov
inc
aad
in
jmp
bound
inc
(bad)
(bad)
(bad)
inc
enter
jo
sahf
in
sub
push
in
cmp
pop
cmp
outs
(bad)
mov
or
xchg
movs
loope
mov
sub
dec
dec
cmc
scas
repz
xor
(bad)
(bad)
call
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
pop
scas
clc
jns
sub
sbb
repnz
and
sbb
pusha
jle
cmc
mov
inc
jmp
lock
ret
mov
fld
pop
push
shr
xor
mov
stc
(bad)
(bad)
(bad)
call
and
push
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
jnp
je
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
call
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
jmp
inc
push
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
es
aam
jmp
(bad)
stc
mov
mov
lock
imul
(bad)
(bad)
(bad)
push
daa
test
(bad)
cs
mov
call
mov
loope
into
cs
fisttp
mov
aas
add
add
pop
std
pop
jmp
icebp
and
cmp
std
ins
inc
popa
ds
jo
test
jg
(bad)
(bad)
call
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
clc
pop
popa
pop
test
xlat
imul
stos
or
mov
cmp
pushf
in
adc
add
(bad)
(bad)
(bad)
call
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
(bad)
(bad)
push
inc
sub
neg
jmp
pop
test
or
xchg
popa
mov
(bad)
mov
ja
xor
cdq
or
pop
ins
les
jo
hlt
vpshaq
sahf
fs
mov
jns
mov
(bad)
mov
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
jno
test
aam
ins
fucom
jmp
aam
push
sub
push
fs
rcl
jmp
sar
stc
jp
gs
push
pop
dec
arpl
(bad)
(bad)
inc
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
dec
(bad)
(bad)
(bad)
inc
inc
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
inc
jne
(bad)
or
pop
fnstenv
lods
push
mov
enter
mov
(bad)
(bad)
jmp
mov
mov
mov
and
mov
movs
movaps
mov
or
or
mov
or
and
(bad)
(bad)
jmp
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
jmp
mov
mov
pop
lahf
mov
xor
leave
(bad)
(bad)
mov
xchg
or
sbb
or
sub
out
(bad)
(bad)
(bad)
call
imul
ins
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
out
cli
(bad)
inc
push
gs
(bad)
adc
mov
jl
fstp
mov
repz
aam
gs
mov
test
into
push
(bad)
das
xor
je
mov
movs
inc
cmp
rcl
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
rol
jae
add
pop
fisttp
jno
daa
add
mov
or
(bad)
dec
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
(bad)
(bad)
(bad)
call
mov
mov
pop
cs
xor
mov
mov
add
loop
mov
call
ja
add
es
jecxz
or
xchg
(bad)
(bad)
mov
fsubr
jp
pop
test
push
iret
or
add
mov
jecxz
push
setae
mov
push
mul
(bad)
(bad)
jmp
xchg
addr16
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
fwait
(bad)
(bad)
(bad)
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
mov
fcomip
push
sar
ret
aas
mov
fisttp
fmul
(bad)
fisubr
add
mov
stos
add
jmp
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
lds
(bad)
push
mov
xchg
pop
mov
add
xlat
jmp
sub
sahf
mov
scas
sbb
(bad)
(bad)
(bad)
(bad)
in
arpl
es
mov
or
ss
jb
test
add
xchg
mov
(bad)
jmp
mov
sub
xchg
ror
repnz
mov
fcmovnu
sbb
xchg
rcl
icebp
aam
inc
push
test
cmp
ja
sbb
(bad)
jmp
pushw
cmp
adc
or
sahf
(bad)
clc
bound
or
(bad)
call
push
ins
iret
inc
mov
or
(bad)
(bad)
jg
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
out
test
fdivr
lock
lds
ret
dec
jg
mov
jmp
retf
mov
xchg
xor
mov
add
aam
push
ficom
and
addr16
jp
(bad)
jmp
pop
push
sub
or
mov
sub
mov
(bad)
sbb
xor
bound
lods
lds
pop
cmps
xchg
(bad)
(bad)
dec
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
xchg
adc
fldenv
adc
jo
(bad)
(bad)
call
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
(bad)
(bad)
jmp
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
idiv
(bad)
mov
call
shl
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
(bad)
dec
sub
std
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
call
push
jno
imul
sub
mul
sbb
jne
pop
mov
sti
push
cs
test
jns
mov
cmp
jns
push
dec
push
lds
jge
mov
lock
add
ret
xchg
cld
(bad)
(bad)
call
xchg
adc
mov
cmp
lds
or
dec
xchg
sbb
jle
adc
dec
outs
cli
bound
pop
(bad)
(bad)
(bad)
call
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
adc
(bad)
call
out
inc
push
mov
pop
dec
test
unpckhps
sbb
sar
add
fwait
gs
imul
and
dec
sar
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
adc
(bad)
push
loopne
or
stos
rcl
jmp
ja
das
aas
jns
ss
(bad)
fcomip
push
add
sub
dec
lea
pusha
jle
xor
out
(bad)
(bad)
push
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
or
call
or
mov
leave
adc
(bad)
call
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
xlat
inc
mov
mov
mov
inc
mov
push
ja
cwde
pop
ins
(bad)
adc
dec
or
jle
daa
mov
fnstsw
xor
mov
pop
hlt
push
lds
(bad)
out
hlt
push
out
rcl
pop
mov
test
or
fisubr
add
pop
in
shl
lods
clc
pop
sbb
and
sub
data16
loope
lds
gs
(bad)
jmp
sbb
xchg
sub
in
scas
mov
(bad)
repz
(bad)
(bad)
(bad)
(bad)
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
std
(bad)
(bad)
push
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
jg
cs
xlat
push
scas
xchg
adc
lea
or
mov
dec
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
jmp
add
push
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jmp
fmul
dec
pop
push
cli
jle
jnp
sub
sub
xchg
mov
call
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
(bad)
call
push
aas
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
loopne
ror
(bad)
out
and
loope
or
mov
clc
(bad)
push
mov
inc
out
cmp
ja
fsub
push
jle
hlt
out
lods
(bad)
(bad)
call
aaa
test
mov
adc
xor
add
mov
aaa
add
pop
lods
test
push
retf
ret
lea
dec
push
test
(bad)
(bad)
dec
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
dec
call
sbb
mov
sbb
lods
sbb
popa
fwait
(bad)
(bad)
(bad)
call
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
(bad)
(bad)
(bad)
call
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
pop
pop
cmc
push
shr
xor
add
and
in
mov
cmps
daa
aam
es
pop
leave
and
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
(bad)
(bad)
(bad)
dec
jno
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
(bad)
(bad)
(bad)
push
cdq
ja
and
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
out
adc
jmp
jns
je
js
push
cli
mov
jmp
dec
std
ins
mov
xchg
cli
fisub
nop
jmp
fiadd
pop
push
repz
arpl
popa
sub
(bad)
(bad)
jmp
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
push
outs
pop
dec
dec
fs
arpl
dec
or
or
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
(bad)
(bad)
jg
js
rol
inc
inc
addps
dec
out
inc
mov
push
(bad)
(bad)
(bad)
push
add
jne
ds
mov
or
ror
adc
push
mov
cmp
pop
(bad)
(bad)
(bad)
jmp
push
fistp
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
push
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
(bad)
push
in
or
cmp
in
paddsb
(bad)
call
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
(bad)
(bad)
(bad)
call
cli
sbb
sub
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
es
inc
push
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
(bad)
(bad)
dec
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
fdivr
(bad)
(bad)
push
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
(bad)
(bad)
(bad)
(bad)
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
jmp
pop
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
(bad)
mov
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
out
clc
(bad)
mov
sahf
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
(bad)
(bad)
(bad)
mov
jge
mov
pop
mov
mov
sbb
mov
(bad)
(bad)
dec
mov
and
sbb
sbb
out
(bad)
rol
cmps
arpl
(bad)
sbb
xchg
or
test
mov
(bad)
(bad)
inc
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
(bad)
(bad)
call
movs
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
push
(bad)
(bad)
jmp
mov
cmpxchg
mov
punpckldq
(bad)
(bad)
mov
dec
pop
mov
xchg
pushf
xor
loopne
mov
std
pop
fidivr
mov
enter
mov
out
(bad)
bound
xor
xlat
cmp
or
outs
hlt
(bad)
mov
xlat
add
mov
fucom
fbstp
pop
arpl
dec
lahf
call
adc
jno
jnp
cli
(bad)
inc
enter
lods
jne
or
into
outs
es
lods
jg
sub
mov
xchg
(bad)
(bad)
call
rcr
mov
(bad)
and
xor
pop
or
addr16
(bad)
(bad)
(bad)
inc
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
(bad)
(bad)
(bad)
(bad)
sub
jmp
jecxz
in
fmul
lock
mov
pop
and
push
xor
jmp
loop
push
dec
jg
outs
test
or
rcr
(bad)
(bad)
(bad)
call
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
(bad)
xchg
test
call
(bad)
call
cmp
xor
not
adc
iret
push
retf
mov
ret
pusha
test
cli
(bad)
jmp
pop
mov
test
fistp
ret
imul
(bad)
dec
inc
ja
imul
setl
(bad)
sub
mov
cwde
cmc
cld
sar
(bad)
(bad)
(bad)
call
push
fidiv
sbb
mov
inc
sub
mov
cmp
(bad)
out
clc
(bad)
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
(bad)
(bad)
(bad)
jmp
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
(bad)
(bad)
(bad)
dec
leave
dec
das
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
xlat
(bad)
(bad)
push
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
inc
(bad)
call
jge
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
fcomip
inc
in
sbb
bound
and
inc
sbb
jmp
sbb
dec
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
xchg
or
inc
loope
add
jg
jbe
scas
cmc
test
and
mov
mov
(bad)
call
ror
sar
add
push
movs
not
cmp
and
(bad)
(bad)
jg
in
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
xor
fnop
add
push
(bad)
and
stc
popa
call
add
add
fsubr
or
sbb
into
sub
mov
xchg
(bad)
loope
(bad)
(bad)
push
fxch
sub
inc
and
jne
jp
adc
scas
dec
jae
or
(bad)
call
out
sbb
test
jbe
out
push
into
icebp
mov
(bad)
fild
outs
lea
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
dec
jmp
sbb
push
bound
fwait
push
mov
xchg
xchg
(bad)
(bad)
(bad)
call
push
es
mov
cld
mov
adc
push
ja
ss
adc
(bad)
(bad)
(bad)
jmp
inc
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
(bad)
(bad)
dec
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
movs
(bad)
call
in
test
adc
ja
mov
ret
sub
out
mov
cmp
cdq
in
or
pushw
(bad)
(bad)
(bad)
jmp
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
clc
(bad)
(bad)
dec
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
and
mov
enter
add
add
mov
pop
add
test
push
pop
pop
pushf
pushf
pushf
pushf
or
or
xchg
mov
jg
mov
push
aaa
not
adc
sar
mov
or
or
or
(bad)
sbb
push
dec
int3
sub
ins
jns
out
in
sbb
pop
fsub
jns
out
mov
out
sahf
add
mov
jns
adc
sahf
out
mov
repnz
dec
retf
push
sahf
out
jmp
sahf
out
mov
out
sahf
xchg
cmps
data16
out
out
xchg
push
(bad)
out
sahf
out
mov
test
out
sahf
mov
cs
outs
jns
out
out
push
sahf
pop
fsubp
jns
out
mov
out
sahf
add
sahf
out
loope
xchg
push
shl
jns
out
mov
icebp
or
dec
leave
sub
jns
sbb
sahf
out
mov
out
sahf
test
and
out
in
xchg
push
aad
jns
out
mov
cmc
or
lea
sub
out
in
sbb
jns
out
mov
iret
imul
xchg
push
push
repz
repz
xor
mov
repz
mov
jae
repz
repz
mov
iret
repz
retf
sub
stos
iret
repz
stos
imul
sbb
repz
fwait
fwait
pop
pop
repz
repz
cmp
mov
mov
pop
cmp
repz
xchg
iret
repz
repz
cmps
addr16
pop
cmp
repz
xchg
xchg
push
push
repz
repz
xlat
aaa
aaa
mov
repz
mov
ja
test
jg
cmp
repz
iret
das
das
scas
iret
repz
scas
outs
outs
out
out
pop
cmp
repz
lahf
lahf
pop
pop
repz
repz
aas
aas
mov
mov
sahf
out
mov
pusha
adc
sahf
out
xor
dec
sub
jns
out
sbb
js
out
sahf
add
and
adc
out
out
xor
add
out
sahf
ret
and
sahf
or
add
iret
repz
or
add
repz
repz
push
push
push
into
repz
push
add
or
repz
jmp
adc
adc
sbb
pop
sahf
neg
es
add
or
inc
dec
dec
or
or
mov
mov
pslld
adc
adc
jb
sbb
pop
leave
inc
jb
sbb
and
jbe
adc
jecxz
outs
sub
addr16
add
adc
adc
pop
enter
adc
or
and
(bad)
push
and
jns
bound
pop
dec
or
or
jns
out
adc
jns
xor
mov
es
sahf
cmp
xor
xor
mov
mov
fnsave
rol
jbe
(bad)
sbb
fucomi
pusha
xchg
sar
enter
pop
xor
cli
call
imul
outs
and
arpl
adc
fsub
dec
dec
cmp
xlat
cmp
aad
add
dec
and
jns
xchg
jo
mov
push
das
das
adc
and
add
test
mov
push
inc
outs
(bad)
ins
push
(bad)
out
add
das
sub
ins
ins
adc
sar
push
add
add
add
scas
cli
push
pop
and
push
pop
shl
xor
push
push
pop
cmp
or
dec
jo
inc
arpl
push
ret
push
dec
inc
outs
arpl
adc
or
push
outs
imul
pusha
dec
repz
or
or
dec
es
inc
adc
cdq
or
ins
jae
popf
xchg
and
xchg
push
pop
inc
inc
call
out
add
jb
js
sbb
sub
push
ins
fdiv
add
pop
mov
mov
adc
cmps
add
mov
(bad)
(bad)
out
jb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
out
adc
aaa
cmp
call
mov
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
gs
and
push
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
addr16
adc
imul
jno
ss
mov
js
jp
jl
jle
mov
xchg
pushf
mov
lea
leave
and
nop
and
xchg
xchg
fucomip
push
(bad)
arpl
push
inc
sub
sar
ss
or
dec
dec
inc
dec
mov
xchg
cmp
pop
xchg
push
dec
dec
push
push
sbb
(bad)
fisubr
pop
push
dec
dec
inc
sbb
or
mov
and
push
xor
inc
rcr
ins
inc
stos
jb
imul
mov
and
and
cs
int
shl
sub
push
push
sub
and
ins
add
arpl
jmp
mov
and
and
daa
mov
fmul
ins
jae
sbb
xor
and
ins
and
imul
ins
inc
cs
mov
xor
mov
pop
rol
mov
rol
les
retf
stos
out
ins
bound
scas
and
xchg
jbe
dec
mov
mov
lods
jmp
bound
push
push
outs
je
into
push
or
and
push
lods
sar
mov
imul
mov
adc
pop
daa
sub
push
shr
das
arpl
cmp
arpl
dec
popa
sub
mov
neg
shl
cmp
popa
imul
out
xor
sbb
pusha
mov
inc
gs
sub
pusha
and
ret
pop
xor
ret
sub
push
fistp
push
xor
push
ss
or
xor
jns
fs
xor
hlt
shl
sbb
add
push
mov
imul
mov
or
jo
cli
jbe
inc
sub
add
or
mov
cwde
shl
push
mov
mov
inc
lock
out
nop
jle
imul
out
push
xchg
test
outs
bound
pop
enter
inc
aaa
ins
xor
jnp
jmp
imul
dec
sbb
imul
inc
jno
mov
pop
cmc
jecxz
push
push
leave
nop
je
ret
cs
mov
in
mov
adc
adc
cmp
rol
and
and
ror
cmp
addr16
jae
lahf
xor
rol
data16
and
add
mov
mov
js
dec
and
retf
inc
sub
pop
jne
and
dec
or
cmps
(bad)
in
pop
add
cmp
(bad)
ret
inc
jne
ds
gs
int3
pop
mov
and
dec
cmp
xor
dec
cwde
push
loopne
jmp
inc
push
mov
inc
bound
or
dec
loope
pop
ins
add
inc
mov
or
jbe
std
pop
xor
push
push
add
adc
add
xchg
inc
add
pusha
loop
push
and
mov
mov
daa
cmp
inc
pop
sbb
mov
sub
jb
push
(bad)
or
shl
js
xchg
push
inc
add
mov
icebp
call
lea
cs
mov
js
mov
ins
and
dec
imul
arpl
shl
jo
ds
dec
dec
inc
movs
and
daa
daa
pop
data16
or
push
jns
mov
adc
adc
cmp
call
popa
addr16
jbe
mov
add
stos
mov
pusha
inc
jbe
(bad)
push
js
sbb
lahf
fs
xor
fdiv
movs
add
cmp
inc
(bad)
cmp
xchg
and
push
lds
rcl
shl
dec
dec
mov
xchg
pusha
lock
fninit
pushf
(bad)
xchg
pop
pop
pop
push
push
mov
into
xor
aas
cmp
add
(bad)
pusha
ins
call
sub
das
fdiv
add
js
mov
data16
or
xchg
inc
push
push
push
push
dec
push
imul
jne
repnz
je
outs
loopne
push
mov
fistp
outs
les
push
ret
add
push
xlat
sbb
jno
pusha
aam
jo
or
test
push
jg
jae
inc
push
shl
xor
call
popa
pop
nop
pusha
sbb
xchg
lods
sbb
or
xlat
arpl
das
je
outs
xchg
daa
xchg
fisub
or
cmp
idiv
cmp
or
ds
and
cmps
jnp
sub
es
shl
push
jle
xchg
popf
add
fs
push
and
add
sub
pop
or
sbb
adc
das
push
jp
aas
pushf
repnz
and
and
xchg
xor
adc
pop
mov
pop
sbb
jle
jne
pop
or
ss
sbb
push
in
or
jecxz
sbb
movs
pop
xchg
mov
jo
sub
or
push
fbld
test
inc
cmp
repz
push
jo
pop
dec
loop
iret
repz
cmp
sahf
sar
cli
ins
icebp
ds
cmp
mov
sbb
push
iret
repz
adc
push
or
add
cld
sahf
out
call
out
mov
aam
outs
ror
mov
idiv
enter
mov
mov
sahf
out
sahf
movs
mov
out
sahf
out
push
mov
sahf
js
pusha
pop
dec
xor
int
jns
adc
hlt
aam
repz
repz
je
xor
out
sahf
out
repz
sahf
out
sahf
nop
sbb
out
idiv
cld
repnz
push
lods
test
jns
pop
cmp
hlt
icebp
xchg
push
pushf
push
test
sbb
fs
outs
stos
and
sub
shr
cmp
pop
leave
inc
push
add
add
pusha
jg
add
adc
xor
dec
mov
inc
xchg
dec
push
cmp
add
add
push
ja
shl
mov
retf
add
and
in
shl
pop
fisttp
or
inc
add
call
add
mov
(bad)
(bad)
(bad)
call
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
(bad)
(bad)
(bad)
push
mov
mov
mov
ret
(bad)
(bad)
enter
int3
int
iret
rcl
(bad)
(bad)
(bad)
call
rcl
aad
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
mov
repz
cmc
div
clc
stc
cli
sti
cld
stos
loop
test
popa
and
jmp
push
sub
sub
popa
mov
popa
jmp
jo
inc
gs
rcr
aas
or
push
fsubr
add
bound
sbb
ret
popf
call
arpl
je
(bad)
in
jo
pop
lea
dec
mov
lods
inc
mov
push
push
add
mov
add
(bad)
test
in
push
mov
mov
and
call
sar
std
mov
push
mov
enter
cmp
dec
jnp
push
std
and
cmp
dec
gs
inc
or
fild
ds
inc
cmp
cld
fstp
lods
ds
add
dec
inc
push
push
mov
mov
add
jg
inc
pop
mov
mov
shr
lock
sub
(bad)
std
mov
daa
into
mov
mov
mov
cvtdq2ps
push
dec
outs
jae
dec
dec
and
push
inc
inc
ins
jne
test
ins
xor
fucomip
and
sub
sub
jbe
xor
or
xor
lds
jbe
inc
add
dec
and
pop
in
bound
inc
cs
ret
fidiv
xor
dec
mov
sbb
dec
jae
mov
sti
outs
cli
imul
jae
mov
adc
shl
sbb
jne
xor
pop
mov
push
movs
test
jg
fstp
jnp
dec
inc
pop
and
pop
fcomp
mov
addr16
nop
cwde
shl
imul
xor
or
imul
sar
fsub
mov
psubsb
dec
sbb
mov
add
imul
pop
sbb
mov
pop
push
and
imul
dec
push
pusha
dec
mov
pop
cmps
and
inc
jae
xchg
cmp
mov
sub
xor
push
jle
xchg
retf
imul
inc
sbb
xchg
jecxz
ss
dec
lock
pop
jae
ds
cmp
xchg
retf
fcom
dec
pusha
cli
pand
(bad)
mov
shr
pop
cmp
mov
or
mov
hlt
cmp
mov
les
neg
mov
ja
lods
retf
lahf
daa
lahf
mov
push
out
push
(bad)
mov
test
daa
push
push
imul
jo
(bad)
stos
mov
sub
push
add
sti
xchg
sbb
xor
push
add
add
dec
push
push
inc
out
mov
arpl
daa
sbb
xor
imul
push
inc
cmovs
mov
sbb
repz
cmp
or
js
es
out
mov
pop
lods
pop
sbb
bound
sti
xor
xor
in
sub
jmp
push
add
and
adc
mov
xor
je
mov
pop
sbb
loopne
pop
mov
pusha
pop
pop
fisubr
cmp
pop
pusha
jae
or
adc
add
lock
sahf
jbe
leave
jb
push
ja
outs
push
or
sbb
inc
into
arpl
shl
cmp
rol
adc
and
dec
repz
out
loopne
rol
lock
aad
clc
mov
outs
das
xchg
rol
jb
or
cmp
inc
sub
inc
xor
sbb
inc
pop
sub
push
outs
sar
push
outs
pop
xor
push
scas
mov
jle
push
inc
push
pusha
imul
push
push
inc
push
inc
add
adc
and
pushf
or
fiadd
call
mov
jo
inc
or
push
sbb
cmp
pop
jbe
fdiv
fsubr
jle
sub
pushf
movs
xchg
setle
enter
scas
jo
pushf
jp
add
push
mov
js
dec
into
adc
dec
loopne
fisubr
dec
add
xor
dec
add
popa
pop
frstor
ja
adc
daa
pop
fnstsw
outs
adc
jle
movs
push
loope
outs
jmp
ror
pop
popf
add
inc
jae
retf
ins
push
push
jne
imul
adc
or
int3
push
add
push
adc
inc
mov
movs
ins
push
pop
fsub
xor
pop
push
pop
dec
lea
and
or
aaa
cmps
jbe
pusha
ins
int
retf
aaa
and
test
jae
jae
outs
adc
mov
add
fistp
push
jne
popa
mov
adc
sahf
and
or
xor
test
add
xlat
push
data16
stos
movs
sbb
inc
gs
shl
ja
arpl
fdivr
sub
add
push
aas
adc
jbe
in
test
not
dec
pop
lds
or
mov
outs
loopne
cmp
daa
push
sub
je
je
xchg
push
aaa
dec
loop
inc
arpl
jne
mov
loop
fadd
jmp
push
push
inc
push
jb
xchg
push
dec
shl
sbb
loope
popf
sbb
lock
cmp
pop
jbe
sbb
rol
pop
cs
hlt
adc
hlt
mov
cs
cli
add
jns
mov
inc
daa
mov
mov
or
inc
or
popf
popa
outs
aas
add
int
ins
adc
inc
cmp
scas
test
push
jmp
daa
(bad)
das
inc
add
outs
xchg
add
test
xchg
das
lods
jge
sbb
inc
push
fsubr
push
add
adc
push
mov
jo
lahf
dec
add
ja
and
outs
inc
jo
fs
and
outs
iret
lds
fmul
aaa
test
mov
cmp
add
or
lock
mul
idiv
or
daa
pusha
mov
addr16
je
aaa
sbb
lock
push
sbb
push
enter
or
xchg
add
loopne
pop
or
outs
adc
push
xor
mov
adc
daa
inc
mov
add
push
(bad)
icebp
dec
sbb
test
push
(bad)
pop
push
ins
push
nop
stos
fst
dec
add
mov
test
outs
inc
ret
mov
add
nop
aaa
mov
dec
outs
jnp
cmp
(bad)
aam
pop
and
inc
aas
leave
mov
inc
push
(bad)
int
and
xchg
adc
retf
add
or
dec
neg
iret
cmps
mov
(bad)
ss
pop
push
jb
popf
jle
push
frstor
xchg
adc
inc
loop
pop
in
idiv
pop
fmul
stc
das
sub
pop
rcr
das
cld
xchg
pop
xor
enter
jb
daa
xor
aas
int3
cmp
push
add
jg
or
cmp
ss
push
aas
mov
xor
in
sbb
and
inc
ror
dec
push
mov
add
and
mov
(bad)
xor
das
push
icebp
dec
push
out
or
pop
fadd
push
inc
mov
mov
jo
aam
out
test
inc
call
pushf
pop
push
daa
movs
call
jns
or
aas
not
push
fmul
push
fdiv
(bad)
push
cs
cmp
push
ds
xchg
dec
ud2
fild
push
adc
pusha
push
inc
adc
pop
lahf
fild
pop
scas
push
pop
mov
mov
pop
dec
je
cmps
fmul
ss
imul
ins
mov
nop
mov
ds
sbb
mov
dec
jbe
jg
test
cdq
cwde
dec
fwait
mov
js
cmp
popa
mov
mov
sub
pop
pop
aaa
loopne
inc
dec
adc
mov
and
fisubr
inc
aaa
shl
jle
js
in
jns
cwde
scas
rcl
sbb
mov
emms
adc
dec
lock
add
inc
pop
lock
(bad)
inc
enter
add
xchg
dec
mov
addr16
cdq
dec
cdq
pusha
pop
lods
fld
jo
pop
xchg
push
mov
rcl
leave
jae
into
fsub
loopne
add
(bad)
ficomp
push
addr16
(bad)
fadd
add
pand
rcl
dec
pop
xlat
repz
push
sub
push
lock
xor
mov
push
pusha
jns
inc
jb
nop
or
fdiv
and
add
push
pop
dec
sahf
mul
push
addr16
push
add
in
inc
repnz
mov
cmp
mov
call
je
and
fisubr
sahf
mov
dec
loopne
daa
fimul
sbb
pushf
leave
and
sub
cmp
jo
js
daa
xor
jb
add
lods
mov
leave
inc
jb
loopne
sbb
jb
adc
repz
mov
lsl
add
cmp
daa
iret
add
or
jbe
xchg
or
or
enter
dec
ror
add
loopne
jp
ja
call
pop
pop
xor
mov
xlat
push
loopne
cmp
push
cmovo
add
dec
sbb
jb
nop
ja
add
mov
(bad)
push
add
enter
xchg
pmuludq
dec
jb
add
or
enter
cmp
push
lahf
pop
lahf
arpl
or
jns
scas
test
mov
call
das
sbb
xchg
enter
sar
ins
fwait
and
out
loopne
sar
and
mov
call
push
add
and
add
add
mov
lods
(bad)
sbb
mov
daa
or
test
sti
je
test
and
dec
adc
sub
pop
mov
or
push
mov
and
pop
lods
push
jne
add
sub
rol
jl
inc
inc
(bad)
call
out
imul
outs
scas
push
fs
sbb
or
pop
popa
(bad)
and
mov
pop
bound
shr
pop
test
push
sti
xchg
cmc
dec
cmps
jb
lock
jnp
fwait
add
mov
(bad)
outs
pop
leave
add
push
push
push
inc
push
dec
mov
test
std
adc
sbb
inc
dec
pop
cmps
mov
dec
add
inc
pusha
inc
or
push
aad
addr16
jbe
clc
daa
jb
loopne
push
sbb
arpl
add
add
sub
inc
sbb
add
sbb
stos
xor
popa
xor
add
cmp
pop
addr16
sbb
int3
or
push
and
sbb
mov
jo
movs
or
pop
add
outs
jo
or
mov
xchg
nop
adc
xchg
xchg
mov
arpl
xchg
mov
outs
pop
imul
fs
inc
jno
jl
add
fsubp
xchg
inc
out
int
cmp
sbb
cmp
dec
repnz
push
inc
dec
(bad)
cmp
lods
rcr
hlt
es
jl
sub
add
and
lahf
ret
jae
add
loope
xchg
dec
dec
pop
push
pusha
jns
push
xchg
icebp
or
push
mov
sub
push
add
out
int3
inc
inc
push
inc
jno
push
sbb
or
cmp
xor
int3
pusha
pop
loopne
stos
jo
frstor
pop
push
test
pushf
movs
xor
fcmovbe
lds
sbb
add
add
xor
and
add
inc
xchg
add
push
or
mov
jecxz
iret
pop
in
add
js
cmp
jl
pusha
lea
inc
add
dec
js
pop
pop
inc
jne
dec
inc
sbb
and
outs
and
xlat
pop
mov
xlat
out
sub
pop
leave
dec
mov
(bad)
bound
sub
ss
mov
adc
addr16
xor
cmp
pop
add
data16
mov
outs
push
movs
imul
jecxz
push
ss
push
ret
stos
jb
ret
xchg
cs
and
cmps
cmp
pop
add
pop
dec
add
and
cwde
hlt
pop
sbb
xchg
add
jae
push
and
(bad)
mov
pushf
loope
pusha
bnd
lahf
xor
out
inc
and
add
fisub
lods
push
sbb
shl
fs
inc
dec
sub
sub
das
mov
push
out
xor
push
jbe
jg
fs
inc
pusha
and
mov
das
xor
add
push
lods
dec
test
add
call
sbb
fs
shl
dec
outs
inc
jns
data16
sub
add
lahf
push
rol
push
call
or
mov
loop
add
cmp
clc
mov
scas
les
jae
ret
dec
mov
test
into
pop
adc
cmp
inc
pop
sub
xor
mov
lods
inc
aas
push
ins
fidiv
add
repnz
scas
pop
call
push
xor
push
and
into
repz
pop
sub
push
xor
cmps
mov
push
int
bndstx
inc
sbb
adc
jo
out
dec
inc
dec
pop
fcmovnbe
add
bnd
jo
push
cmp
or
xlat
mov
push
lahf
sbb
or
xchg
pop
dec
rcr
in
pop
sub
jo
inc
push
jecxz
shl
push
stos
dec
mov
xor
mov
test
cwde
shl
lock
lahf
inc
iret
jle
xchg
or
pop
jg
add
push
add
mov
enter
mov
sub
lock
or
movs
mov
sbb
mov
add
pop
inc
outs
push
xchg
(bad)
push
popa
test
add
clts
inc
and
call
inc
iret
add
sub
rcl
out
and
scas
mov
jb
or
mov
int
movs
sbb
repnz
xchg
or
adc
mov
sub
fadd
jns
call
sub
loope
jnp
sub
push
icebp
push
bound
xor
inc
neg
mov
dec
push
inc
mov
push
inc
xchg
push
sbb
outs
mov
and
cmp
push
cwde
das
xor
imul
pop
adc
inc
jl
fs
pop
sub
cmp
data16
lea
mov
test
mov
les
es
push
addr16
arpl
aaa
bound
pop
push
imul
pop
jo
outs
and
add
xor
(bad)
out
lea
jae
fnstenv
out
das
(bad)
fistp
add
jp
or
shr
pushf
jb
hlt
(bad)
ins
add
fsub
stos
and
fdiv
lods
adc
cmp
mov
dec
sbb
fstp
pop
retf
jo
pop
xchg
fs
inc
mov
cmp
pop
call
sub
jl
push
popa
add
xchg
pushf
fadd
mov
aaa
mov
xor
dec
push
stos
outs
push
aad
or
sbb
mov
add
push
sbb
hlt
and
add
add
pushf
fld
es
pop
add
aaa
jle
sbb
push
mov
inc
inc
dec
add
push
enter
cmp
sar
imul
push
loopne
cmp
repz
inc
inc
cmp
repz
nop
cmp
sub
sub
out
and
mov
pushf
repz
in
mov
repz
fs
dec
sbb
sub
jns
jle
push
or
add
xchg
add
xchg
fs
ror
sbb
pop
mov
(bad)
sbb
xor
add
push
and
or
aaa
or
fdivr
out
popf
je
ja
push
adc
and
pop
inc
inc
push
addr16
das
outs
mov
in
push
xorps
ins
xchg
out
push
push
and
jb
fild
or
iret
add
sub
mov
mov
into
aas
xlat
es
pop
shl
mov
pop
dec
pop
push
inc
idiv
xchg
push
add
bound
adc
adc
dec
xor
ss
inc
mov
pop
popa
test
sbb
pop
sub
xor
add
movs
add
(bad)
pushf
sbb
and
sbb
sub
mov
cmp
(bad)
jg
pop
inc
mov
iret
mov
in
call
popf
inc
jle
adc
push
ficomp
ins
aas
and
push
xor
fcomp
loopne
jb
jle
jl
mov
inc
inc
mov
mov
pusha
add
adc
add
out
movs
push
jmp
pop
inc
ja
or
(bad)
pop
(bad)
lahf
ja
add
push
dec
cmp
sub
mov
dec
dec
add
xor
sub
mov
jnp
add
jecxz
sub
test
repz
push
outs
push
jl
push
or
jns
out
out
adc
sahf
adc
adc
aam
cmp
repz
lods
sbb
cmp
repz
adc
hlt
in
out
sahf
cmps
pop
nop
and
out
ds
jmp
shr
mov
pushf
jnp
jns
jp
push
js
ja
cmp
or
icebp
mul
push
push
sbb
jg
sbb
aas
jle
inc
xlat
popa
mov
xchg
pop
pop
cmp
sahf
out
sahf
pop
js
mov
repz
sar
xor
add
out
fidivr
push
pop
ja
mov
loopne
out
jns
adc
push
dec
ins
mov
outs
scas
push
xor
inc
imul
adc
(bad)
fild
inc
ins
add
(bad)
iret
call
push
or
or
movs
xchg
mov
inc
pop
sahf
dec
lahf
adc
xlat
push
in
rol
xchg
push
sub
pop
cs
fst
out
outs
add
pop
fist
inc
inc
xlat
pop
xor
push
fdivr
sbb
imul
les
or
pop
xchg
xchg
or
sub
pop
sahf
add
add
pop
push
dec
push
je
call
push
inc
or
or
lahf
mov
aaa
dec
out
psubsb
pop
jb
lods
mov
pop
inc
or
enter
ret
and
or
(bad)
das
push
add
add
jns
clc
das
dec
repz
add
sbb
add
scas
inc
ret
dec
pusha
add
inc
mov
into
js
nop
add
out
and
push
pop
lock
or
pop
outs
loope
and
aaa
add
push
ins
cs
addr16
mov
out
xchg
and
mov
outs
enter
xchg
cmps
das
jo
and
mov
mov
das
and
nop
or
add
add
cs
or
adc
mov
inc
cs
or
loopne
fld
mov
rcr
adc
and
je
or
in
pop
jl
push
push
mov
cmp
xchg
sub
adc
hlt
push
add
stc
add
in
lahf
mov
xor
mov
inc
fdivr
inc
jle
ds
rcr
aas
mov
inc
sar
or
pop
push
mov
or
add
fild
and
and
sahf
ja
xor
or
adc
sub
inc
dec
push
aaa
jns
out
push
pop
pop
pop
imul
cmps
imul
imul
pusha
vscatterdps
ret
mov
mov
inc
ja
adc
cmp
repz
and
cmp
jl
pop
pusha
push
arpl
bound
pusha
jp
push
sahf
pop
pop
add
nop
(bad)
jmp
(bad)
pop
push
push
push
push
call
cmp
pushf
cwde
cmps
imul
adc
push
add
jns
or
add
xor
lds
dec
dec
add
(bad)
(bad)
(bad)
std
lds
ins
push
add
outs
push
ins
pop
add
imul
fucomp
mov
cmovle
jns
pop
pushw
pop
es
inc
ds
repz
sbb
(bad)
(bad)
in
or
in
sbb
add
pop
adc
in
xor
fbld
(bad)
dec
push
addr16
push
xchg
dec
das
sbb
jae
and
fwait
push
and
mov
pop
sti
shr
(bad)
fucomi
std
lds
outs
sub
ins
daa
cld
mov
arpl
lock
sub
mov
(bad)
enter
mov
add
out
mov
dec
pop
inc
(bad)
xchg
jl
imul
push
and
call
or
pop
shl
add
(bad)
(bad)
(bad)
jmp
push
add
ror
adc
(bad)
out
js
push
sbb
sub
dec
push
iret
enter
mov
(bad)
sti
and
jns
dec
jb
(bad)
call
icebp
movs
addr16
sub
or
daa
push
(bad)
aas
dec
push
dec
inc
leave
and
adc
movs
shr
inc
aaa
daa
call
adc
pop
add
mov
add
loop
(bad)
push
xor
enter
jmp
std
mov
mov
push
mov
sub
sahf
push
(bad)
cwde
and
xchg
ss
lea
xchg
xchg
(bad)
(bad)
push
add
jl
push
jns
(bad)
in
jns
in
(bad)
in
or
jae
mov
xor
js
cmp
cmps
prefetchw
pop
je
mov
inc
push
inc
ds
dec
dec
ror
sub
pushf
dec
pop
test
loop
or
or
push
dec
fsub
imul
scas
xchg
sbb
pop
scas
scas
xor
mov
mov
test
adc
popf
xor
lahf
cmp
mov
popa
std
push
inc
mov
(bad)
cli
xchg
inc
push
mov
push
jno
mov
sub
loop
jbe
jo
(bad)
imul
ins
adc
ds
outs
pushf
jl
(bad)
ds
ins
push
inc
aad
and
inc
push
inc
inc
inc
inc
call
inc
ror
pop
test
sub
add
out
outs
cmp
mov
mov
adc
or
push
call
outs
push
xchg
xchg
fist
push
lods
xor
mov
pop
mov
pop
(bad)
cmps
inc
push
popf
xor
cmps
inc
push
mov
(bad)
fistp
scas
popa
cli
loop
jbe
mov
mov
imul
sahf
pop
repz
lods
ins
(bad)
cli
scas
ins
push
movs
arpl
xchg
push
outs
ja
fisttp
mov
iret
jl
int
shr
push
bound
mov
test
mov
fimul
aas
cmp
pop
inc
cmps
cdq
adc
cmp
xor
repnz
jb
add
pop
sbb
add
dec
adc
mov
test
(bad)
push
jae
(bad)
fbld
add
mov
push
mov
mov
les
push
ins
push
mov
push
call
mov
xor
dec
sub
fimul
adc
xchg
cmp
and
pop
or
jge
add
sbb
ja
(bad)
jmp
adc
pop
inc
daa
adc
mov
inc
fxam
popf
pop
sti
jmp
push
loopne
pop
add
xchg
ret
mov
jg
ud0
dec
inc
rcl
adc
je
cmp
daa
cmp
sub
and
cmps
test
push
movups
adc
scas
fnstsw
push
jg
or
inc
inc
loopne
add
add
cmp
stos
ins
(bad)
inc
mov
hlt
addr16
test
push
lahf
sub
movs
xor
mov
mov
mov
push
adc
mov
push
lea
pop
leave
mov
dec
or
icebp
(bad)
call
or
add
jbe
and
call
ds
ret
fcomp
jmp
inc
std
jb
pop
jmp
push
into
sbb
adc
pop
dec
pop
inc
in
xlat
jne
pop
push
push
sbb
cs
jecxz
aas
and
and
and
mov
pop
ja
cmps
adc
and
inc
lods
pop
sub
inc
mov
lea
ja
and
call
js
mov
fcom
(bad)
js
out
cdq
sahf
jmp
push
scas
dec
leave
xchg
mov
mov
mov
ja
push
jecxz
adc
push
or
pop
cli
scas
outs
add
and
inc
mov
fild
sub
aad
lock
fild
or
into
dec
or
cmps
ins
dec
(bad)
push
push
leave
sbb
test
cmps
push
pushf
cmp
jae
dec
push
inc
cmp
repnz
ss
fnstsw
cmp
daa
cmp
aaa
(bad)
leave
push
mov
ja
mov
aaa
pop
je
iret
push
pop
push
fnstsw
and
pop
add
adc
xor
shr
cmps
stos
imul
lea
int
mov
push
mov
and
scas
clc
or
(bad)
and
jl
push
arpl
cs
push
(bad)
mov
jne
jmp
sbb
mov
push
(bad)
fbld
cs
push
loopne
je
adc
cdq
imul
(bad)
dec
mov
inc
inc
les
imul
dec
push
dec
pop
dec
das
push
push
popf
pushf
cmp
push
push
push
push
push
loop
lds
inc
add
jno
push
das
and
cdq
jl
pop
sbb
adc
adc
daa
out
sbb
jmp
cwde
(bad)
(bad)
fist
into
jnp
nop
mov
mov
into
xchg
daa
push
scas
push
push
int3
xchg
stos
bound
and
test
cld
sbb
xchg
xor
sub
push
in
push
popa
loopne
or
push
add
sub
ja
cmp
shl
imul
jmp
push
(bad)
std
call
sbb
mov
sub
jns
out
push
popa
pusha
arpl
repnz
js
ins
push
adc
jbe
pop
push
addr16
leave
(bad)
and
bound
push
out
rol
out
add
jns
push
daa
and
xchg
inc
out
jmp
dec
lods
mov
(bad)
idiv
adc
pop
icebp
push
cmps
cdq
xor
mov
cdq
(bad)
stc
mov
cmp
push
push
pop
push
xchg
pop
test
imul
or
adc
push
sar
in
dec
xor
fiadd
icebp
push
(bad)
icebp
pop
outs
mov
add
push
push
repnz
sbb
jg
lods
jp
js
add
or
push
xchg
and
and
in
jmp
stos
xor
ss
or
cmp
xor
lods
adc
(bad)
jmp
and
movs
sbb
pop
cdq
adc
push
lea
push
push
add
push
je
addr16
pop
popf
jl
jl
push
dec
ds
ss
pop
cwde
and
sbb
jecxz
lar
xor
pop
aaa
(bad)
clc
imul
sbb
(bad)
ror
push
ret
mov
jae
inc
cli
ror
dec
push
and
sbb
int
xchg
cmps
or
adc
div
pop
push
out
(bad)
xlat
pop
jg
sub
cdq
lods
dec
add
sti
pushw
neg
push
lock
pop
cwde
popa
inc
call
dec
loop
inc
inc
shr
pop
out
pop
std
outs
mov
xor
test
inc
imul
push
dec
pop
inc
hlt
pusha
inc
(bad)
jg
gs
jle
imul
outs
ins
imul
pop
jmp
dec
xlat
aas
cmp
ret
sub
mov
js
dec
xlat
cmp
outs
add
pop
push
push
push
add
inc
das
xor
push
pop
or
pop
sbb
pop
mov
cdq
(bad)
mov
outs
or
pop
neg
int
mov
movs
dec
ret
mov
or
xor
and
add
stos
fistp
(bad)
and
iret
(bad)
mov
push
pop
pop
pop
fisttp
outs
xchg
jo
or
jns
cmc
call
pop
mov
in
adc
sti
add
add
int
sbb
scas
fs
fs
jmp
mov
jmp
outs
sbb
push
inc
ja
jmp
mov
sub
jns
clc
jb
repnz
mov
mov
ss
push
mov
arpl
les
mov
icebp
jg
mov
mov
push
cmp
js
pop
sti
pusha
pop
push
jmp
int3
xchg
and
test
pop
jo
cs
in
pop
inc
daa
add
xchg
(bad)
xor
sub
sahf
outs
xchg
or
ss
push
sbb
(bad)
dec
dec
sahf
bnd
push
or
cmps
test
xchg
jae
jmp
sub
add
pusha
adc
add
fwait
or
or
xchg
xchg
jno
out
sub
adc
pop
sahf
pop
or
inc
jne
(bad)
dec
inc
mov
xchg
stc
cmps
popa
ds
outs
xor
out
jl
ror
cli
nop
inc
movs
cmp
mov
mov
(bad)
push
into
ins
cs
imul
shr
mov
shl
jns
jge
jle
shl
retf
mov
sub
mov
mov
(bad)
cld
sti
sbb
jmp
or
mov
daa
call
(bad)
jg
fs
sti
push
dec
inc
fisubr
or
daa
pop
dec
jmp
add
outs
es
dec
loope
mov
xchg
addr16
aas
or
push
or
adc
mov
mov
shl
cli
jns
dec
xchg
cmps
push
(bad)
std
enter
jo
in
and
push
or
xchg
sub
out
adc
and
lahf
dec
pop
bound
xchg
hlt
call
call
cdq
dec
xor
ds
stos
sub
pop
push
loopne
ss
data16
push
test
int3
pop
fdivr
nop
xchg
ins
lds
scas
fiadd
fdivr
bound
xlat
jno
jo
out
iret
out
fnstenv
push
jbe
mov
jnp
fdivr
push
mov
mov
mov
sbb
into
or
ins
mov
sahf
mov
es
xlat
fs
pop
and
inc
sti
push
inc
inc
(bad)
jne
xor
ja
daa
push
repz
pop
xor
and
adc
push
add
(bad)
mov
outs
mov
inc
ficom
jmp
imul
jbe
push
mov
sahf
movs
pop
push
rcl
(bad)
xchg
(bad)
out
test
loop
(bad)
sbb
iret
sub
add
iret
clts
sbb
aaa
(bad)
leave
jae
dec
out
push
pop
or
call
outs
and
xor
out
mov
and
push
pop
adc
adc
pop
(bad)
je
test
lods
fsub
nop
ss
in
mov
call
fidivr
fistp
mov
loopne
jg
fsub
fdiv
fidivr
fadd
xlat
xlat
jle
xchg
mov
icebp
popf
out
lea
mov
fnsave
std
leave
js
shl
and
mul
mov
mov
push
dec
icebp
je
add
mov
pop
jl
pop
repnz
repz
push
inc
cmp
pop
mov
sar
test
call
inc
push
(bad)
loope
(bad)
in
jb
push
test
mov
inc
(bad)
mov
cmps
imul
or
sbb
or
ror
into
push
dec
js
pop
push
fs
sub
sub
neg
sbb
bound
or
lods
cmp
fild
mov
ins
ss
fild
dec
ds
jns
xlat
jp
js
repz
ja
shl
jne
cmp
retf
jae
jb
push
int3
retf
mov
mov
rol
mov
cmp
imul
push
xchg
push
xchg
push
xlat
mov
mov
inc
push
js
inc
push
paddsb
jmp
test
idiv
xor
rcl
dec
xchg
add
dec
inc
xor
imul
pop
cld
mov
xchg
mov
xchg
push
push
xor
push
aam
add
(bad)
in
and
push
mov
(bad)
jmp
dec
pop
lock
add
sbb
push
bound
push
jle
imul
bound
sbb
mov
and
aam
(bad)
clc
inc
add
jbe
out
(bad)
lods
cmp
mov
add
shl
fstp
xchg
jne
es
mov
leave
enter
push
(bad)
jo
outs
ret
outs
shr
inc
dec
ret
les
enter
clc
jle
js
into
jle
(bad)
mov
(bad)
(bad)
xchg
cs
fisub
jbe
std
lds
dec
nop
xor
add
cmp
mov
div
je
pushf
jl
aas
bound
push
aaa
push
sub
iret
repz
or
jg
dec
adc
imul
mov
lods
arpl
imul
in
and
pushf
mov
imul
scas
jl
pop
cs
pop
cmc
inc
sbb
mov
and
or
adc
xchg
cmp
or
xchg
mov
iret
push
sbb
int
add
cld
inc
imul
pop
out
gs
push
fiadd
bound
aad
rcr
jb
jno
push
ins
ret
inc
shr
imul
mov
push
mov
das
push
pop
outs
push
icebp
mov
push
rol
dec
js
data16
push
int
rol
xchg
fild
ret
pop
push
inc
dec
in
push
mov
cdq
cmp
mov
mov
sbb
fwait
push
outs
imul
pop
cmp
sub
adc
or
cmps
xchg
(bad)
fcomp
mov
rcl
xchg
popa
or
ja
(bad)
call
xchg
dec
push
mov
push
rol
and
push
adc
pop
ror
cmps
mov
push
mov
and
push
sbb
and
test
inc
ds
(bad)
pop
(bad)
sbb
(bad)
mov
jge
sub
into
ja
push
imul
mov
dec
outs
mov
mov
in
mov
mov
mov
scas
popa
pusha
out
(bad)
pop
scas
punpckldq
pop
pop
cld
jo
fnsave
xchg
mov
xchg
pushf
push
out
push
leave
jle
jmp
ins
iret
mov
(bad)
nop
pop
or
ss
mov
cli
mov
inc
jp
inc
cmp
or
or
ror
pop
das
shl
imul
sub
xchg
fwait
jns
int
and
aaa
sub
retf
data16
sub
sbb
push
mov
(bad)
out
les
rol
xchg
xor
iret
jae
dec
add
es
mov
cmp
sbb
repz
stos
int
iret
call
or
shl
adc
call
lds
(bad)
mov
gs
gs
mov
push
mov
jg
in
leave
mov
pop
scas
stos
pop
test
pop
sti
cmps
pop
mov
out
push
cmps
cmps
cld
push
psubd
pop
cld
aaa
cmps
pop
test
std
test
dec
stos
xchg
jl
mov
es
imul
mov
mov
enter
jg
lock
(bad)
cs
scas
push
pop
clc
inc
ss
(bad)
stc
xchg
cmp
pushf
gs
clc
and
movs
cs
repz
xchg
add
inc
xor
fbld
leave
adc
push
test
mov
call
pop
into
mov
scas
pop
fs
(bad)
outs
sbb
mov
mov
icebp
retf
sub
cs
cli
test
sbb
xor
add
les
pop
dec
adc
lods
mov
add
(bad)
std
jnp
sahf
movs
inc
add
push
adc
lahf
(bad)
mov
add
mov
aas
stos
dec
stos
pop
mov
stc
xchg
clc
mul
fnstsw
mov
div
sahf
push
lahf
icebp
sahf
push
sti
out
imul
push
lock
cs
lahf
aas
mov
pop
hlt
mov
clc
movs
pop
jns
ins
fld
test
cld
test
dec
lahf
pop
mov
fldcw
pop
das
mov
ret
cmp
mov
mov
mov
lods
into
test
pop
sub
movs
jns
hlt
inc
ss
iret
repz
cmc
add
add
push
sub
dec
cmps
sbb
pop
stos
test
test
inc
pop
push
pop
push
cld
jne
jg
arpl
or
pop
(bad)
fild
fdivp
retf
scas
test
dec
pop
or
xchg
(bad)
cmp
pop
push
push
es
xchg
dec
add
pop
pop
xchg
adc
in
sub
test
popa
adc
and
stos
dec
imul
add
pop
out
fsubrp
cld
pop
pop
sub
push
cli
push
daa
mul
dec
(bad)
(bad)
lock
lock
jbe
pop
in
fwait
push
push
call
std
fstp
dec
push
push
psubsb
out
jmp
nop
(bad)
cmovle
into
jmp
dec
mov
call
out
jmp
mov
(bad)
repnz
idiv
fdivr
stc
push
push
cli
es
stos
popf
jl
ins
std
lods
inc
lods
lods
mov
or
es
lds
addr16
mov
mov
pop
clc
aaa
mov
push
ds
call
inc
xor
add
or
inc
(bad)
mov
xchg
jl
or
mov
ss
iret
imul
cdq
mov
lock
cwde
jmp
lods
cmps
fiadd
dec
sbb
lds
mov
daa
iret
repz
not
les
pop
mov
xor
out
inc
add
outs
pop
into
data16
(bad)
aaa
push
dec
push
shr
dec
enter
mov
pushf
push
cmps
adc
mov
or
pop
mul
mov
inc
and
ss
ss
dec
dec
dec
fadd
cwde
out
mov
mov
xchg
scas
xor
call
loope
push
inc
movs
out
add
pop
xlat
sahf
lods
cs
push
nop
dec
dec
dec
xchg
outs
dec
jle
pop
scas
adc
mov
out
jmp
neg
fwait
push
fsubp
in
sahf
call
push
pushf
fcmovnb
xor
repnz
movs
pop
out
jmp
cmps
push
mul
std
sbb
fs
push
mov
mov
push
sahf
sti
sahf
dec
es
cmp
call
lock
adc
xchg
mulps
xor
pop
adc
jmp
xor
jb
scas
movs
jmp
sub
enter
adc
mov
push
cs
in
mov
out
rol
cs
fsub
xor
dec
pusha
and
mov
pusha
xchg
std
mov
or
mov
pushw
dec
or
cs
out
out
sahf
movs
dec
adc
mov
mov
test
aad
(bad)
mov
idiv
sbb
shr
(bad)
fcomip
push
in
out
outs
pop
xor
push
push
(bad)
out
push
(bad)
fwait
adc
xchg
ss
out
xchg
loopne
mov
push
xor
dec
fimul
mov
push
fisttp
push
(bad)
ins
xchg
xchg
xchg
push
pop
jo
fnstcw
fimul
mov
pop
(bad)
or
inc
sahf
(bad)
mov
push
jecxz
mov
mov
(bad)
jecxz
in
call
shr
es
jecxz
out
out
mov
mov
in
clc
mov
clc
lods
data16
mov
in
pop
mov
(bad)
(bad)
xchg
xchg
je
aaa
push
mov
inc
cld
sub
cmps
add
imul
dec
sbb
push
mov
cld
sub
push
sbb
enter
push
jne
dec
xor
push
inc
popa
adc
into
shl
inc
inc
call
into
test
pop
std
sbb
adc
add
sub
and
fiadd
ins
repz
or
cmps
mov
xor
push
cmps
cli
mov
mov
jle
xchg
xor
mov
inc
sub
data16
mov
aad
(bad)
iret
scas
popf
pop
test
cwde
out
xchg
data16
out
lds
xchg
push
fst
scas
pop
mov
fisttp
(bad)
sub
cmps
mov
cmp
ins
outs
fild
out
add
rcl
xor
in
mov
aaa
daa
rol
push
cmp
(bad)
ja
push
xlat
mov
fmul
mov
(bad)
dec
(bad)
dec
mov
jo
js
push
push
xchg
push
cwde
(bad)
mov
in
push
fwait
push
out
fdivr
jno
call
sahf
pop
push
lahf
pop
scas
mov
cld
aaa
out
sahf
lock
inc
sbb
cmps
rep
popa
loope
ror
push
mov
and
xchg
push
sbb
dec
xor
dec
add
push
sub
call
(bad)
dec
or
int
adc
shr
inc
push
mov
ds
cmps
(bad)
sahf
push
fst
xchg
(bad)
sub
addr16
fwait
iret
jae
xor
and
ss
pop
fild
jecxz
cmps
lea
pop
ins
mov
xchg
neg
jecxz
mov
(bad)
fsubrp
jmp
(bad)
in
lahf
pop
scas
push
fsubr
loop
out
xchg
ficom
out
fcom
pop
sub
pop
push
fmul
pop
aam
loop
retf
mov
sahf
cmp
sar
pop
jns
outs
mov
push
into
jp
mov
jl
iret
jge
push
pop
jle
mov
sti
shr
push
cmp
scas
xchg
js
idiv
fldz
fimul
fist
push
xchg
push
fst
jecxz
dec
jmp
push
push
xchg
loop
push
jecxz
push
xchg
(bad)
in
push
es
scas
das
push
jno
add
js
mov
jno
sbb
(bad)
lock
pop
jmp
and
or
outs
push
movs
imul
nop
and
mov
inc
adc
jp
inc
inc
or
ret
pop
dec
fs
setp
sub
out
loop
mov
inc
(bad)
out
sahf
dec
inc
inc
push
push
and
sub
imul
mov
push
aaa
scas
std
cwde
inc
fidiv
scas
lds
int
stos
cmps
cmps
into
out
jo
or
jecxz
loope
cmp
scas
xchg
push
(bad)
push
fucomip
mov
mov
xlat
mov
mov
rol
sub
pop
shr
pop
jnp
shl
int
push
fwait
fwait
data16
jns
js
ja
ja
jbe
imul
jbe
retf
ja
vmread
(bad)
out
jno
(bad)
pop
cs
outs
inc
jae
arpl
push
push
rol
(bad)
(bad)
out
xchg
aad
(bad)
mov
push
je
nop
cs
push
and
jmp
mov
push
push
push
xchg
push
ficom
(bad)
mov
das
aaa
in
pop
cld
lock
ss
jae
mov
pop
shl
push
mov
jbe
(bad)
cmp
add
daa
and
sub
pop
mov
or
dec
sahf
mov
(bad)
mov
or
ret
xchg
into
imul
jae
inc
scas
jns
int
(bad)
ja
inc
dec
add
adc
or
mov
pop
out
or
(bad)
sbb
das
or
(bad)
sub
fcom
lock
stos
fwait
xchg
imul
lods
pop
or
mov
(bad)
pop
dec
mov
pop
out
push
lahf
cmp
push
fimul
shr
fcom
mov
and
xchg
and
out
shl
iret
ss
sub
into
jle
int
out
cmps
dec
mov
xlat
pop
sub
in
adc
cs
jne
ja
cmp
(bad)
je
ss
sti
lock
mov
jle
cmps
pop
ins
mov
cmp
iret
and
test
or
push
mov
aad
dec
mov
pop
mov
data16
jecxz
daa
pop
das
push
xchg
das
sbb
scas
es
push
jle
es
inc
out
call
jl
cmc
fwait
push
mov
outs
test
jo
std
sbb
je
outs
inc
and
dec
push
xor
inc
dec
rcr
add
sbb
mov
jmp
test
push
int3
outs
pop
or
pop
fiadd
adc
leave
mov
(bad)
inc
and
outs
out
mov
jmp
push
add
lods
xor
cli
shr
ss
outs
in
call
out
mov
nop
cmp
pop
sbb
mov
push
into
cmps
stos
pop
rol
jge
cs
(bad)
scas
aad
cmp
xor
aam
ror
add
sbb
out
test
cmp
cld
cmp
pop
retf
pop
push
mov
pop
jg
mov
enter
fmulp
clts
into
leave
jns
ds
pop
xor
dec
push
xchg
push
push
or
xchg
leave
jnp
jbe
loope
sbb
(bad)
jb
push
inc
jae
pop
pop
mov
icebp
push
leave
push
retf
push
jg
outs
cmp
sbb
xor
push
jbe
shl
shl
rcl
pop
aad
call
daa
push
xlat
fld
add
dec
pop
push
into
push
cmc
jb
mov
daa
movs
(bad)
mov
push
mov
push
(bad)
mov
call
push
or
add
sbb
and
or
pop
or
cmps
add
adc
aaa
ret
mov
neg
ret
in
sub
xchg
push
aam
add
mov
mov
call
cs
aas
add
sub
outs
rcl
inc
test
adc
pop
inc
jbe
add
movs
fwait
jmp
mov
push
push
(bad)
cmps
into
std
cmps
pop
inc
daa
cmp
scas
or
test
push
jno
(bad)
sahf
out
dec
push
dec
out
jns
fwait
int
inc
test
cmp
xor
lds
out
mov
ins
fistp
mov
rcl
mov
jo
outs
fidiv
push
fwait
aad
ins
data16
mov
add
xor
les
retf
ret
lock
daa
push
sub
pop
sbb
out
jg
(bad)
retf
pop
pop
xor
lahf
inc
test
iret
xchg
and
inc
push
push
dec
mov
imul
loopne
and
adc
(bad)
loop
push
xchg
xor
fidivr
icebp
test
pop
inc
out
push
add
cmp
adc
call
jge
pushf
js
(bad)
mov
jl
sub
(bad)
shl
cmp
(bad)
(bad)
in
outs
sub
inc
retf
fmul
jg
push
(bad)
or
lods
pop
and
fmul
cmp
cmp
mov
jo
frstor
cwde
inc
fisubr
inc
movs
out
mov
loop
dec
stos
push
call
cmp
daa
aam
jbe
jae
jp
mov
inc
inc
ficomp
ret
dec
or
xor
cs
lds
dec
mov
ror
push
pop
mov
test
rcl
jl
mov
push
push
imul
mov
movs
mov
movs
mov
push
jl
(bad)
push
pushf
jne
imul
inc
div
imul
shr
mov
mov
(bad)
dec
leave
retf
jle
push
aas
inc
inc
jnp
xor
scas
rcl
pop
push
dec
(bad)
mov
jo
mov
dec
(bad)
cmp
jle
pop
loope
mov
cld
mov
jne
outs
jne
je
push
inc
add
mov
cmps
jmp
mov
or
dec
cdq
mov
or
sar
scas
xor
gs
ins
push
into
jo
aad
or
popf
(bad)
inc
cwde
(bad)
or
mov
mov
push
fisubr
mov
pop
cdq
sahf
adc
add
cmp
movs
pop
or
ss
out
mul
or
pop
(bad)
mov
jne
xchg
mov
sub
push
stos
out
data16
test
out
test
dec
mov
into
push
pop
sbb
idiv
adc
(bad)
fisub
sub
lods
inc
adc
mov
lea
push
ins
ss
fwait
jbe
adc
xchg
ins
(bad)
lahf
out
movs
push
mov
mov
mov
mov
outs
lods
xchg
push
movs
mov
mov
repz
jg
nop
fs
dec
cmps
cli
cmc
jmp
and
ins
ins
and
es
xlat
ja
pop
cmp
icebp
push
jmp
cs
divps
xlat
mov
neg
pop
mov
rcl
fldenv
push
rcr
mov
mov
loop
push
dec
push
push
(bad)
lahf
outs
loop
mov
int
outs
mul
xor
daa
pop
fisubr
sub
scas
push
pop
ds
push
push
into
mov
mov
ror
addr16
into
imul
ins
push
shl
fcomp
jmp
mov
iretw
push
mov
add
mov
or
retf
cdq
dec
retf
lock
fidiv
nop
push
pop
mov
xor
jle
hlt
cwde
inc
out
mov
push
push
lahf
pop
imul
cwde
push
mov
pusha
imul
ja
call
idiv
pop
or
jp
inc
imul
aad
mov
ret
outs
into
ret
outs
sub
cs
jbe
mov
mov
jnp
into
(bad)
loopne
mov
push
mov
fld
fwait
mov
(bad)
mov
xchg
mul
sahf
and
mov
call
add
fcmovu
out
shl
ins
aas
push
shr
ins
and
cs
push
das
out
fmulp
push
pop
cmp
push
retf
retf
dec
int3
push
inc
not
outs
jbe
or
aaa
pop
js
out
int
push
test
xchg
inc
mov
sahf
cs
aam
jb
daa
fstp
jns
aaa
dec
xor
push
xchg
push
or
stc
push
push
xor
or
(bad)
dec
sbb
ins
pop
(bad)
mov
sbb
addr16
fidivr
sahf
fadd
in
test
test
xchg
add
inc
add
or
(bad)
mov
fild
push
adc
mov
test
lahf
ficomp
mov
mul
xchg
dec
xchg
xlat
push
pop
pop
or
lds
test
jmp
out
jne
pop
movs
mul
ret
ins
es
and
push
cs
ja
mov
cwde
jp
sub
cs
xchg
scas
push
mov
adc
lock
inc
call
or
push
push
sub
hlt
ud0
jle
jb
rcl
jbe
popf
and
mov
xor
es
ret
test
xlat
add
out
inc
mov
(bad)
leave
xchg
adc
sub
leave
jle
scas
ss
int3
nop
jmp
outs
dec
add
stos
sbb
jne
shl
dec
clc
fcomp
nop
push
mov
pushw
fs
rol
xor
aaa
daa
pop
lock
dec
dec
call
sub
xor
sbb
imul
outs
arpl
out
cdq
pop
push
call
mov
outs
out
data16
ss
xchg
mov
adc
jp
push
pushf
dec
(bad)
push
out
push
push
pop
mov
push
xchg
(bad)
nop
fbld
daa
iret
mov
dec
lods
xchg
xchg
mov
inc
test
xchg
inc
xchg
mov
test
fisub
sub
rcl
pop
inc
test
fbstp
mov
xchg
cmps
xchg
test
mov
xchg
mov
test
push
jg
dec
or
imul
(bad)
pop
call
mov
add
test
cs
push
push
int
cmovp
ja
push
jmp
pop
xchg
sbb
mov
push
mov
mov
cmp
popa
sbb
shr
mov
and
push
int
jecxz
jb
xor
jne
xor
cmp
sub
pop
jbe
jbe
jae
add
retf
pop
leave
cs
clc
das
cmp
xor
data16
int
xchg
aad
scas
or
fstp
das
in
push
lods
cs
and
dec
pop
mov
fld
and
sub
mov
mov
faddp
imul
ins
dec
jae
pop
aad
mov
push
fsub
pop
popa
add
test
data16
fstp
pop
xor
push
out
imul
fsubrp
cdq
(bad)
in
cdq
loop
cmp
scas
push
out
loope
dec
or
aam
xchg
test
push
into
mov
into
xchg
push
retf
or
retf
mov
dec
out
ret
push
les
cmp
daa
cs
ins
or
es
ins
(bad)
adc
add
adc
std
push
push
push
aam
jle
cmps
adc
inc
out
and
sbb
sbb
mov
inc
sbb
or
mov
(bad)
nop
sub
cld
xchg
cmps
push
xor
mov
sbb
mov
in
pop
push
dec
mov
push
das
push
pusha
movs
cmp
jbe
ja
neg
mov
jns
push
push
mov
adc
and
push
mov
scas
cdq
test
(bad)
push
sbb
dec
aam
(bad)
int
adc
test
imul
xor
clc
scas
inc
push
and
adc
xchg
cdq
xchg
pop
popa
cld
mov
or
gs
ret
outs
call
(bad)
outs
and
inc
xor
(bad)
xchg
aad
push
pop
lock
sar
fld
dec
xchg
mov
jno
cld
sbb
out
in
dec
neg
fcom
arpl
neg
shr
test
mov
out
test
(bad)
(bad)
xor
pop
mov
and
mov
data16
loopne
jbe
jb
test
dec
xchg
or
push
or
popf
pop
cld
and
or
pop
push
out
adc
jns
mov
push
or
push
xchg
jge
cmp
pop
adc
pop
imul
pop
mov
push
mov
mov
push
mov
push
test
sbb
pop
aas
shr
loopne
push
push
ret
sub
jb
mov
cs
fimul
cmp
pop
inc
pop
push
pop
add
push
iret
inc
xchg
xor
ss
xlat
call
ret
not
(bad)
ret
pusha
adc
mov
push
dec
xchg
out
jp
cmp
les
xor
sbb
jnp
adc
inc
cmp
cmp
rol
into
rcr
push
push
ins
and
push
push
push
test
push
push
(bad)
ss
js
data16
cmp
mov
xchg
into
out
popf
adc
jle
test
outs
pop
inc
pop
jb
xchg
fcmovbe
pop
push
int3
ror
ds
jp
pop
je
ret
jle
out
imul
es
dec
and
aam
pop
jmp
cs
and
daa
stc
pop
push
adc
mov
daa
jmp
lea
or
sbb
fwait
pop
push
call
push
mov
popf
pop
pop
mov
sbb
xchg
fisubr
aaa
ss
cs
pop
(bad)
mov
out
sub
sub
jne
aad
jl
push
mov
pop
pop
into
scas
xor
lock
shr
mov
cli
ror
or
out
and
xor
mov
push
(bad)
mov
(bad)
out
gs
or
sbb
pop
out
lods
pop
inc
xchg
enter
mov
dec
shl
jg
rol
adc
loope
dec
pop
pushf
adc
dec
test
mov
scas
(bad)
cmp
int
pop
ins
cs
test
jge
jns
xchg
mov
xlat
mov
(bad)
mov
js
cmps
cmp
stos
jle
cmp
xor
or
pop
nop
cmps
imul
pop
adc
sar
sbb
push
sbb
add
push
and
arpl
jmp
and
sbb
add
mov
sbb
sbb
pop
ficomp
cmps
data16
and
mov
push
setbe
push
call
ins
pop
es
hlt
xchg
adc
sahf
push
jb
push
pop
arpl
(bad)
jmp
sahf
push
mov
dec
adc
push
inc
ds
pop
data16
outs
jle
xor
es
movs
scas
xor
or
mov
xchg
rol
add
pop
push
ss
test
cs
aaa
pop
addr16
inc
pop
cmovs
loope
mov
fld
aam
xchg
mov
shr
inc
push
int
sbb
int3
pushf
push
mov
cmp
cmps
ret
rcr
(bad)
push
lods
inc
out
movs
or
dec
das
repnz
pop
push
push
sub
dec
loop
outs
and
es
mov
pop
mov
pop
sub
pop
and
push
test
sbb
sbb
cmps
pop
ds
dec
pop
sbb
mov
pop
xchg
cs
jmp
jmp
ss
pop
cs
push
sbb
(bad)
enter
pop
scas
fdivr
pop
dec
sti
bound
dec
ror
xor
test
lds
data16
adc
add
jle
(bad)
xchg
push
cmp
test
daa
ds
es
mov
retf
mov
jle
xchg
je
fbld
ror
icebp
retf
(bad)
iret
test
test
mov
ss
push
cmps
xchg
sbb
(bad)
scas
inc
clc
ja
dec
out
mov
cli
(bad)
or
add
jns
sub
outs
call
ret
pop
cmovbe
or
mov
sbb
icebp
(bad)
xor
sub
daa
and
and
stos
shl
push
push
mov
xor
and
push
fs
push
fild
dec
fisub
and
and
lea
inc
and
fisubr
ret
push
inc
sbb
lea
scas
pop
inc
lahf
inc
es
cmp
lods
xor
shr
jp
retf
pop
push
jle
jmp
scas
pop
pop
inc
les
rol
inc
cmp
dec
(bad)
mov
pop
jle
inc
out
rcl
rol
lds
and
int3
daa
mul
jl
ret
or
inc
data16
inc
std
fwait
cmp
push
stos
xor
pushf
test
dec
push
push
das
sbb
sub
aas
or
aaa
nop
sbb
neg
xor
push
pop
xor
das
fisttp
pop
xor
pop
cs
ret
push
inc
bound
mov
cmp
ss
inc
cmp
daa
cs
push
jae
push
inc
lock
jecxz
inc
ds
push
jns
mov
test
ja
mov
div
cmp
ins
pop
push
xor
xor
or
outs
push
mov
sbb
push
and
add
pop
icebp
or
pop
cmp
sbb
les
jae
mov
cli
mov
pop
push
push
sbb
sub
out
retf
sahf
daa
inc
pop
scas
icebp
mov
pop
outs
int3
mov
add
or
inc
sub
out
(bad)
dec
not
inc
idiv
dec
das
pusha
sub
push
scas
sbb
ss
in
cmp
or
jmp
sbb
into
cmp
sbb
(bad)
scas
dec
shr
inc
(bad)
aas
mov
jno
shl
inc
(bad)
jbe
push
dec
mov
sub
jbe
pop
push
and
push
mov
ins
mov
mov
ins
movs
lods
add
pop
outs
(bad)
jno
xchg
je
fcomp
jne
pop
jb
mov
dec
pop
ss
outs
dec
imul
cs
ja
lock
mov
mul
in
call
sub
sbb
cmp
and
mov
mov
or
and
mov
idiv
jo
bound
push
icebp
cs
cmp
jle
push
inc
lods
(bad)
enter
pop
cmps
mov
cmp
mov
in
jecxz
icebp
sysret
inc
inc
pcmpgtd
ds
push
into
ret
dec
into
mov
ud0
sub
pop
jle
adc
adc
adc
hlt
aaa
lahf
mov
xchg
adc
stc
mov
fadd
mov
push
ins
push
push
mov
pop
push
jp
ficomp
xchg
mov
retf
into
mov
jge
sub
xchg
jg
cmp
test
test
inc
jbe
fiadd
xchg
pop
sahf
xchg
mov
pop
dec
add
bound
xor
popf
and
ins
push
push
leave
(bad)
jg
or
or
aas
xor
aam
jmp
xchg
mov
das
add
push
(bad)
data16
add
pop
test
push
lods
sub
xor
push
jp
aad
push
pop
jg
inc
xchg
retf
jno
cmps
mov
inc
int
loop
out
pop
xchg
daa
(bad)
icebp
outs
test
dec
push
sub
les
jmp
and
out
xor
add
cmp
or
ror
adc
and
jne
rcl
sub
das
push
cmps
add
sub
sub
sub
(bad)
fisub
push
sub
in
neg
xchg
xor
xor
test
push
push
ss
fisub
pop
pop
daa
xor
ss
out
test
aaa
push
push
cmp
inc
jbe
push
cmp
lahf
sub
push
test
fbstp
push
push
stc
ud2
or
not
sub
dec
pop
add
push
and
nop
mov
fwait
push
scas
mov
cs
jo
push
out
daa
into
sbb
and
pop
adc
push
cs
push
ret
adc
pop
cmps
(bad)
scas
push
inc
push
test
fmulp
sbb
xchg
mov
ds
data16
sahf
add
cdq
jo
jnp
mov
call
mov
or
push
push
xor
lahf
pop
cmp
or
or
xor
add
sbb
push
loop
xor
xchg
cs
cmp
ins
jg
xor
(bad)
xchg
cmp
push
cmp
ficomp
bnd
ds
aaa
dec
sahf
fcmovnu
push
inc
ss
ss
aaa
cmp
int
jnp
push
xchg
pop
inc
xchg
inc
xchg
cld
sbb
inc
inc
aaa
pop
xchg
cmp
(bad)
cmp
xor
adc
popa
inc
movd
cli
test
jle
mov
pop
and
push
es
shr
test
(bad)
inc
jp
test
jle
(bad)
test
mov
loopne
xchg
ficomp
sub
(bad)
neg
js
sbb
(bad)
scas
out
mov
dec
inc
retf
jbe
ror
(bad)
lods
dec
jp
lea
adc
cld
or
fwait
xchg
xor
out
and
sbb
sbb
aaa
sbb
sbb
(bad)
mov
daa
and
pop
sub
and
imul
add
es
das
(bad)
aaa
pop
rol
es
sub
pop
sbb
loop
aas
add
test
(bad)
dec
cld
cdq
dec
xor
imul
lods
(bad)
or
shr
das
push
test
pop
ds
js
js
pusha
mov
pop
inc
mov
out
fbld
push
dec
mov
mov
out
push
into
mov
mov
jecxz
aas
retf
push
pop
jbe
out
xchg
cmp
inc
mov
je
pop
in
in
mov
push
xor
ins
push
sub
pop
sub
sub
jns
bound
sub
sahf
aaa
cmp
jnp
pop
cmp
mov
iret
pop
ss
in
dec
adc
das
pop
mov
xor
xchg
stos
push
mov
les
mov
push
push
adc
add
loop
dec
add
jmp
retf
push
cmp
pop
out
push
dec
mov
outs
cmp
dec
dec
pop
push
retf
mov
clc
mov
push
pop
call
pop
pop
or
call
fdivr
dec
pop
mov
inc
aas
movhps
ds
mov
xchg
je
ds
out
pop
add
fiadd
aas
aas
jb
push
mov
cmp
aaa
jno
aaa
add
cld
in
push
add
sahf
int
add
es
(bad)
push
push
and
jo
sbb
aad
xor
xor
jp
loop
or
push
jg
(bad)
not
dec
dec
mul
in
addr16
in
mov
mov
push
into
mov
mov
jecxz
daa
mov
es
call
sub
sub
paddd
or
(bad)
xchg
mov
popf
pop
in
in
dec
aaa
dec
dec
sub
pop
pop
dec
scas
or
pop
dec
das
dec
mov
dec
cmovp
pop
jl
mov
das
dec
cmovs
inc
adc
add
cld
pop
dec
(bad)
sub
adc
mov
frndint
mov
ins
sub
mov
add
xor
push
mov
push
inc
push
out
pop
pop
mov
scas
out
push
in
mov
mov
push
mov
push
iret
stos
mov
(bad)
into
mov
enter
push
sbb
jmp
or
mov
push
bound
pop
pop
pop
sbb
fisttp
(bad)
pop
pop
add
retf
xchg
push
pop
push
aas
mov
lods
pop
push
pop
das
push
pop
aaa
movs
pop
xor
push
pop
push
lds
push
pop
push
psllw
pop
push
daa
xor
sbb
or
sub
lahf
pop
inc
jmp
out
pop
ins
pop
(bad)
cs
outs
cs
push
ret
test
or
(bad)
jns
out
test
mov
mov
test
mov
pop
ficom
ss
pop
mov
not
pop
jnp
inc
fiadd
nop
pop
into
pop
pop
nop
pop
aas
outs
add
movs
inc
dec
(bad)
mov
pop
jmp
and
pop
and
addr16
push
pop
pop
xchg
ins
pop
fwait
pop
pop
push
pop
mov
dec
pop
test
das
pop
pop
das
(bad)
retf
mov
pop
sysret
pop
pop
mov
test
dec
mov
and
adc
push
std
mov
scas
xchg
mov
stos
ds
mov
inc
jae
pop
test
inc
inc
jns
stos
mov
cmp
inc
test
add
call
retf
out
int3
mov
sub
xlat
push
push
into
and
bound
iret
mul
pop
push
xchg
adc
ss
ret
jl
push
jg
inc
push
sti
jl
or
outs
es
int
es
retf
jle
jge
or
fsubr
push
sub
sub
int3
sub
retf
push
xchg
stc
outs
mov
xchg
mov
xchg
push
push
mov
fld
xor
push
mov
mov
mov
pop
mov
(bad)
push
bswap
pop
push
pop
xchg
adc
inc
pop
out
(bad)
mov
es
data16
jge
sti
mov
nop
lds
pop
cmp
fst
pop
cmp
push
test
adc
test
adc
pop
cmp
mov
daa
push
pop
sub
std
out
rol
cmp
pop
mov
mov
xor
ret
pcmpgtd
add
jg
push
not
rol
sbb
jmp
sub
jg
xor
pop
inc
add
nop
jnp
iret
pushf
pop
(bad)
jmp
inc
es
push
shl
jne
(bad)
cmp
pop
jg
inc
inc
gs
test
fsub
jne
lods
sub
lea
mov
pop
jp
mov
nop
scas
push
mov
imul
pop
push
xchg
setne
rcl
mov
pusha
push
iret
xchg
pop
(bad)
fbstp
push
lock
(bad)
neg
pop
repz
(bad)
mul
push
stos
push
shr
lods
push
(bad)
clc
scas
mov
mov
mov
ins
jae
mov
gs
mov
lods
push
fs
mov
shl
out
xchg
rcr
test
ins
out
fisub
push
(bad)
lds
fisub
enter
push
retf
fmul
push
test
test
pop
leave
lahf
outs
mov
enter
pop
mov
fdiv
sti
popw
les
rcr
push
adc
mov
lods
pop
(bad)
repz
(bad)
rol
inc
xchg
jns
int
mov
push
push
or
lahf
or
xor
xor
outs
mov
mov
call
das
push
movs
adc
or
js
inc
jnp
(bad)
data16
loop
xor
dec
test
push
outs
sub
test
into
into
xchg
push
iret
xchg
arpl
dec
bound
xchg
rcr
gs
cdq
movs
jno
out
push
rcl
arpl
add
imul
cdq
cdq
fsin
mov
jmp
ss
lods
push
sti
mov
push
mov
push
xor
ins
mov
mov
mov
int3
data16
sar
ret
jp
jge
inc
out
cmp
jl
push
enter
xor
push
retf
cmp
in
retf
or
test
into
xchg
test
mov
cld
ror
jmp
dec
rol
aam
aad
mov
jbe
xchg
mov
iret
push
jns
mov
lea
clc
(bad)
pop
pop
iret
scas
iret
es
push
retf
push
lock
mov
sbb
retf
test
(bad)
cmp
outs
push
dec
xchg
je
adc
or
dec
or
jmp
(bad)
sbb
cmp
(bad)
mov
popa
cmp
les
push
adc
jl
add
dec
push
jmp
retf
lea
pop
jne
nop
(bad)
int
pusha
pop
into
xchg
bound
cmps
push
xchg
mov
push
fwait
imul
rcr
push
ins
jbe
cs
aam
(bad)
(bad)
lahf
push
frstor
inc
cs
div
mov
mov
fs
add
(bad)
lds
enter
retf
mov
mov
xchg
inc
(bad)
int
mov
dec
movs
out
pop
push
into
daa
aaa
fcompp
jl
into
iret
push
rcl
in
enter
xchg
push
aam
cdq
fcomp
ss
cwde
fstp
push
fidiv
lahf
(bad)
imul
scas
js
(bad)
jae
stos
lods
div
jne
(bad)
dec
mov
mov
inc
in
out
dec
aas
add
mov
pop
leave
xlat
xor
adc
adc
or
cld
add
sub
test
push
pusha
lds
cmp
adc
mov
mov
mov
pop
xchg
popa
xchg
outs
mov
lds
(bad)
iret
cdq
jle
call
fwait
ins
push
pushf
scas
sar
(bad)
sahf
jo
outs
(bad)
outs
es
sahf
xchg
sar
aad
dec
scas
lods
pop
push
jo
test
cmc
mov
idiv
push
cli
mov
mov
push
mov
push
push
(bad)
cmp
xchg
int
push
ror
push
imul
addr16
xchg
(bad)
pop
enter
push
pop
(bad)
mov
retf
xchg
push
retf
xchg
ds
sar
iret
out
rcr
repz
(bad)
sahf
lock
sahf
popf
mov
fucom
outs
enter
push
daa
(bad)
ss
mov
inc
stos
retf
out
lods
push
mov
inc
cmps
xchg
jl
outs
add
mov
out
call
dec
nop
nop
and
leave
loop
pop
sbb
dec
adc
adc
pop
or
(bad)
cs
ds
js
js
inc
mov
mov
dec
retf
popa
adc
cwde
push
push
cmps
inc
js
iret
call
ret
rcr
mov
jnp
push
push
(bad)
sar
(bad)
(bad)
stos
cmp
movs
jae
stos
(bad)
jmp
mov
out
dec
icebp
push
repnz
fstp
cmc
mov
pop
ins
mov
cmp
mov
mov
(bad)
push
cs
pop
mov
dec
sbb
sti
mov
mov
or
push
rcl
imul
lea
std
ret
xchg
push
(bad)
data16
icebp
enter
xchg
retf
cwde
int3
cdq
mov
rcr
push
lea
nop
das
es
sahf
sar
mov
push
iret
fwait
push
pop
into
call
scas
retf
(bad)
shr
popa
sub
outs
mov
jmp
add
(bad)
push
or
cdq
hlt
adc
(bad)
mov
mov
or
movs
mov
loopne
jb
je
les
cmps
(bad)
mov
test
test
fld
pop
push
(bad)
pop
(bad)
ds
xchg
dec
int3
xchg
(bad)
mov
ins
push
out
(bad)
nop
jge
mov
js
sahf
rol
aam
push
pop
cmp
out
push
push
push
jns
mov
sub
jae
push
cmps
fistp
push
fsub
loopne
dec
loop
jp
in
push
in
jg
(bad)
scas
push
out
push
call
(bad)
jmp
add
out
repz
mov
in
push
in
mov
test
adc
mov
sub
out
into
mov
imul
xchg
mov
icebp
push
push
mov
repnz
mov
(bad)
xlat
mov
idiv
stc
(bad)
(bad)
sti
lds
mov
std
leave
fwait
push
popf
push
int3
pushf
shr
sahf
int
mov
in
dec
fimul
mov
lahf
shl
push
mov
bswap
cwde
mov
nop
es
mov
pop
retf
jle
shr
lods
push
aam
jmp
in
sar
jb
popfw
ds
sub
cwde
sub
xlat
mov
das
adc
jg
xor
into
sub
pop
or
mov
mov
ja
out
sub
or
mov
lds
cmp
push
xchg
arpl
push
mov
fwait
jo
imul
fmul
mov
fistp
lods
mov
movs
pop
jns
ds
and
outs
fwait
xchg
sar
shl
pushf
pop
(bad)
mov
sub
push
fisub
cmps
loopne
ins
cmp
test
push
test
sahf
loop
jge
(bad)
jne
fdivr
in
daa
lods
pop
jl
jl
ja
push
pop
in
jg
out
or
out
jbe
mov
call
jmp
in
mov
out
mov
mov
bound
xchg
push
lds
(bad)
repz
pop
pop
cli
leave
sahf
dec
mov
mov
out
std
push
inc
mov
fisub
push
mov
lods
sub
retf
cld
shr
fdivr
cli
rcl
les
cmc
int3
cmps
out
mov
out
stos
inc
mov
jae
addr16
add
push
rcr
ficomp
outs
sub
pop
call
push
adc
stos
mov
sub
cmps
lea
imul
xlat
bound
lea
(bad)
mov
(bad)
nop
push
enter
xchg
(bad)
xchg
imul
push
mov
sahf
inc
aam
ins
push
lods
not
movs
push
shl
sub
sahf
test
sub
lds
je
push
xor
sbb
push
mov
jo
mov
ss
cs
imul
je
push
xlat
pop
mov
jle
in
fcmovu
movs
jle
push
push
push
ficom
shld
mov
imul
jbe
jbe
movs
es
cmps
jp
loopne
jnp
out
cmps
js
fild
fnstenv
jecxz
push
in
out
mov
mov
mov
mov
(bad)
repnz
hlt
(bad)
pop
test
ds
clc
retf
mov
stc
retf
movs
ins
lods
repnz
sysret
shl
cli
retf
push
retf
leave
leave
mov
(bad)
sahf
stc
(bad)
scas
cmc
rcl
outs
jmp
nop
outs
mov
mov
or
jno
pushfw
(bad)
call
mov
adc
or
pop
sub
test
add
dec
pop
fimul
sub
xchg
ud2
or
mov
jo
loop
out
gs
pop
(bad)
xchg
jo
xchg
addr16
pushf
jmp
push
(bad)
sub
pop
lods
retfw
fwait
jbe
xchg
sbb
into
shl
shr
mov
push
cmp
jg
mov
jg
push
push
shl
sahf
jbe
imul
push
jno
jo
into
inc
or
loop
xor
(bad)
rcr
jbe
mov
jnp
into
ror
cmps
push
ja
mov
jbe
push
aad
aad
neg
loopne
(bad)
pop
out
movs
aaa
fwait
add
fisubr
test
mov
mov
in
push
out
icebp
stos
mov
push
jmp
cdq
(bad)
in
les
mov
ja
ds
hlt
leave
push
cmc
retf
ins
inc
mov
outs
push
cmps
ss
push
jne
fucomp
push
push
push
test
dec
int3
mov
popf
mov
push
push
jle
imul
cmc
xchg
cmps
push
icebp
out
push
loopne
out
(bad)
in
lds
sub
mov
lds
pop
push
call
xor
(bad)
(bad)
cmp
push
sub
nop
inc
sbb
jo
das
xor
xor
fist
pushw
or
and
popa
mov
fs
mov
int3
jbe
aaa
dec
xchg
(bad)
xchg
jae
xchg
imul
push
xchg
test
push
retf
popf
ss
push
lods
adc
into
(bad)
shl
jg
sub
fild
xchg
stos
mov
in
push
xchg
push
shl
mov
xchg
test
in
iret
lods
inc
mov
jp
mov
jecxz
pop
pushw
pop
pop
xlat
jecxz
mov
movs
out
mov
not
ror
dec
lock
es
aam
aad
aad
aaa
cmp
ds
pop
test
scas
mov
fnstenv
push
mov
push
mov
adc
xchg
mov
inc
jmp
pop
icebp
(bad)
aas
out
(bad)
fdivp
(bad)
movs
push
cmps
cld
int3
dec
mov
retf
repnz
push
repz
cmps
popf
(bad)
into
cs
test
pop
hlt
retf
faddp
pop
cs
push
repz
xchg
push
(bad)
mov
mov
rcr
out
push
jecxz
mov
cs
(bad)
lds
xchg
clc
call
dec
mov
adc
mov
daa
and
call
jne
sub
smsw
sub
ja
mov
addr16
push
lods
mov
int
push
push
jbe
jns
not
aam
jge
enter
leave
test
mov
mov
int
sahf
iret
movs
lds
lahf
rcr
out
jno
bound
lods
mov
test
adc
fidiv
push
mov
out
and
mov
mov
imul
out
(bad)
mov
push
push
aad
mov
lea
scas
push
xlat
daa
dec
imul
dec
nop
push
aad
addr16
out
data16
dec
fdiv
ja
mov
push
fnstenv
mov
popf
out
test
mov
jle
call
in
call
jno
mov
jmp
xchg
leave
stos
xchg
scas
(bad)
retf
push
retf
stos
pop
lock
xchg
mul
icebp
push
lock
retf
stos
pop
push
mov
test
out
pop
adc
je
mov
(bad)
out
mov
mov
and
pop
cmp
leave
shl
cmp
add
sbb
adc
inc
mov
push
clc
push
imul
add
pop
add
out
pop
or
or
test
les
mov
mov
mov
sahf
mov
xchg
push
leave
pushf
pop
pop
retf
(bad)
ins
mov
sar
int
iret
cmps
mov
stos
mov
mov
fldcw
lea
lods
mov
stos
ss
cs
mov
mov
push
loope
cs
mov
int
ins
repz
mov
sar
(bad)
call
push
rcl
sar
gs
pop
shr
push
pop
jbe
in
out
push
jmp
ret
aad
mov
jmp
mov
retf
mul
les
call
sahf
push
cdq
pop
loopne
es
inc
inc
fistp
ret
movs
(bad)
test
(bad)
jbe
xchg
imul
int3
scas
push
retf
scas
lods
push
int3
mov
mov
scas
es
das
retf
(bad)
push
ss
push
out
leave
test
mov
in
(bad)
cmps
fisub
outs
fdivr
mov
mov
(bad)
xlat
mov
mov
push
or
jmp
scas
xchg
jle
fmul
xchg
(bad)
fucomip
mov
sub
add
aas
xchg
dec
movs
sbb
ss
push
mov
push
cs
ds
xchg
xor
jbe
test
push
(bad)
leave
mov
imul
sahf
jns
mov
into
cmps
mov
out
stos
mov
(bad)
scas
mov
push
pop
cmp
inc
push
(bad)
pop
cmps
xchg
mov
loope
jle
fbstp
enter
retf
into
push
loopne
push
aam
repz
addr16
int
(bad)
jecxz
push
jecxz
push
in
fnstcw
mov
pop
loop
push
das
inc
fsubr
outs
mov
in
cmc
pop
jecxz
(bad)
aad
jmp
(bad)
push
fcmovne
mov
inc
mov
(bad)
mov
fdiv
into
fimul
fimul
fistp
adc
mov
lahf
out
push
int3
retf
mov
pop
scas
out
(bad)
cmp
scas
push
es
out
jno
pushw
daa
pop
enter
pop
ins
jnp
test
(bad)
cmps
movs
cmps
shl
adc
fidiv
aad
mov
jo
sar
sbb
push
push
push
push
ret
add
add
mov
jae
rcr
push
cs
pop
sar
(bad)
ds
arpl
es
adc
add
std
push
dec
cmps
mov
mov
push
mov
pop
mov
xchg
out
mov
es
push
int3
movs
add
mov
cmc
(bad)
shr
push
shl
mov
mov
push
push
mov
into
mov
sbb
ja
ds
xchg
jbe
xchg
and
pushf
push
cmps
mov
movs
hlt
ins
push
push
fsubr
clc
outs
scas
movs
es
lods
mov
mov
push
movs
pop
push
mov
mov
inc
fld
(bad)
test
mov
push
mov
push
push
fbstp
fld
loop
es
cmps
fisub
mul
outs
mov
and
push
rol
sub
leave
mov
int3
mov
int3
neg
std
mov
push
push
call
int
push
ds
retf
call
outs
call
call
cmps
les
fild
jecxz
mov
scas
mov
mov
leave
mov
(bad)
mov
div
fidivr
pop
(bad)
fisttp
push
or
pop
mov
pushf
je
(bad)
push
fidiv
(bad)
outs
aas
sbb
daa
adc
pop
ret
sbb
push
pop
sub
(bad)
bound
sub
cmp
lea
ja
aam
lods
jbe
movs
push
retf
push
mov
push
in
xchg
mov
push
int
xchg
jo
rcl
test
aam
adc
jnp
aad
push
jp
fistp
mov
mov
jo
movs
pop
pop
call
push
cmps
jno
mov
jbe
mov
cs
out
xchg
ror
ror
cmps
fstp
mov
push
mov
push
rol
jg
in
jle
mov
ss
rcl
ret
push
xchg
push
rcl
scas
mov
push
ret
xchg
jo
(bad)
test
retf
jle
mov
push
ffreep
pop
jecxz
retf
mov
push
sbb
mov
int3
call
outs
jno
out
daa
pop
retf
cmp
hlt
push
pop
scas
outs
pop
in
stos
sub
movs
fadd
xor
(bad)
mov
(bad)
push
shl
imul
(bad)
pushf
mov
loope
and
or
ffreep
inc
addr16
inc
cmp
jmp
aam
data16
xlat
es
xchg
outs
repz
xor
movs
pop
sub
sbb
sub
in
mov
pop
adc
and
call
std
jo
push
cmps
pushw
int3
test
sahf
ins
pop
jbe
cmps
mov
cmps
xchg
push
int
call
stos
not
scas
nop
rcl
mov
xor
call
(bad)
call
ins
push
pop
push
call
outs
outs
out
sahf
xchg
cmps
mov
test
xchg
xchg
out
cwde
push
scas
fwait
xchg
out
popf
xchg
push
pop
pushf
pop
mov
call
out
lahf
fwait
out
lahf
pushf
mov
and
mov
mov
pop
lfs
mul
mov
mov
call
pop
out
rcr
fs
cdq
jl
leave
xchg
cmps
lahf
aam
mov
push
lods
ds
data16
mov
int3
mov
xchg
push
mov
pop
mov
fidivr
aas
push
aaa
push
in
mov
leave
xor
neg
in
scas
scas
xchg
lods
push
(bad)
lods
sbb
test
push
loop
loopne
movs
mov
popf
jg
xor
mov
(bad)
mov
outs
sbb
fs
mov
lods
loopne
add
and
sub
xchg
push
in
inc
iret
out
scas
pop
mov
fs
sub
xchg
push
sub
or
sti
jp
pop
add
and
pop
push
cmp
pop
adc
push
xchg
ret
xchg
mov
ds
mov
shr
xchg
ins
stos
pop
test
(bad)
test
test
xchg
push
(bad)
aad
sub
(bad)
mov
mov
or
push
inc
iret
fcmovnbe
cmp
add
aas
push
xor
mov
or
pop
or
jg
popf
or
mov
cmp
push
push
pusha
add
sbb
jo
fs
sar
retf
mov
push
sahf
stos
aad
mov
pop
iret
mov
mov
mov
in
xstore-rng
cmps
mov
push
aas
in
std
js
in
pop
data16
push
loop
mov
fld
(bad)
scas
(bad)
push
loope
(bad)
loopne
stos
pop
and
test
mov
pop
popa
les
fwait
cmps
shl
push
xchg
mov
add
dec
inc
cmp
mul
stos
(bad)
mov
add
or
test
jne
movs
xchg
push
sahf
push
mov
cld
mov
in
daa
pop
mov
add
out
daa
ja
mov
push
and
scas
mov
mov
pop
push
pop
(bad)
xlat
mov
int
xchg
test
push
int
jle
push
sar
das
(bad)
aam
fwait
push
mov
mov
jg
stos
sbb
jno
jl
jmp
jmp
sub
push
aaa
and
push
jg
pop
mov
adc
sbb
or
inc
xor
mov
add
iret
retf
(bad)
jle
fist
mov
in
mov
xchg
mov
push
mov
sbb
out
inc
mov
leave
mov
imul
enter
(bad)
pop
in
jmp
ffreep
faddp
lods
sahf
stos
push
ret
or
push
sahf
inc
xchg
outs
push
xchg
jbe
rcl
push
movs
xchg
les
cmps
icebp
and
add
xor
or
mov
cwde
ja
(bad)
pushf
out
aad
inc
adc
je
fimul
test
add
or
mov
clc
mov
pop
sub
call
sahf
mov
push
(bad)
dec
ja
pop
int
into
cmp
xchg
cs
mov
push
mov
mov
data16
ret
inc
imul
sbb
inc
jmp
mov
push
test
xchg
mov
sub
add
push
adc
(bad)
push
(bad)
cmps
mov
cdq
pop
mov
scas
(bad)
cmps
sar
inc
fcmovb
ror
fidivr
push
das
mul
retf
mov
int3
mov
mov
mov
jg
(bad)
mov
fnsave
(bad)
fadd
lods
idiv
lock
jl
into
stos
inc
les
push
(bad)
mov
mov
div
pop
pop
aad
in
clc
dec
inc
cwde
(bad)
cwde
out
xchg
leave
mov
retf
cmps
out
mov
iret
dec
sbb
xchg
and
popa
cs
movs
test
adc
xchg
aaa
xchg
jl
fidivr
shr
outs
iret
mov
int
xchg
(bad)
scas
xchg
es
shl
aam
(bad)
(bad)
fdivr
and
je
mov
hlt
xor
cmp
sub
pop
sahf
add
mov
and
sub
mov
rcr
push
scas
dec
mov
dec
into
out
ret
jecxz
jmp
push
push
out
push
loop
cs
loop
(bad)
mov
shl
retf
enter
pop
sbb
push
push
ss
push
fadd
fcmovnb
scas
or
stos
push
movs
es
(bad)
cmps
sub
out
mov
mov
sub
loop
(bad)
test
popa
rol
fistp
lods
add
sbb
xchg
jg
mov
out
fwait
push
int
xchg
xchg
inc
call
ret
add
call
add
sub
arpl
pop
adc
adc
mov
lds
ja
mov
mov
out
pop
dec
xor
rcr
shl
push
scas
shl
nop
out
test
ret
pop
push
pop
xor
and
aaa
aas
xchg
adc
push
div
cli
cs
or
inc
sub
ins
pop
lock
pushf
xchg
xchg
jnp
mov
xchg
or
data16
lds
outs
lds
rol
(bad)
rol
pop
ret
(bad)
rol
push
shr
icebp
xor
idiv
sahf
mov
int
push
loopne
push
(bad)
in
jl
leave
es
fcmovnb
popa
fidiv
shr
add
jg
iret
mov
inc
movs
(bad)
(bad)
mov
lods
mov
inc
stos
inc
xor
or
test
loope
out
xchg
jp
fistp
out
(bad)
push
lods
push
sbb
outs
fdiv
jne
out
ret
test
or
mov
push
add
cs
add
add
mov
pop
adc
sub
and
fwait
xchg
std
retf
rcr
scas
add
into
shl
xor
sbb
mov
mov
add
mov
aaa
mov
fidiv
mov
and
add
fimul
dec
adc
(bad)
or
cmps
pop
and
jbe
outs
lahf
or
retf
push
inc
mov
xchg
(bad)
mov
mov
out
enter
adc
test
arpl
loope
push
loopne
push
fucomip
(bad)
mov
fidivr
leave
fmul
(bad)
(bad)
fld
push
fadd
mov
inc
mov
scas
sar
fwait
pop
add
ret
sar
mov
add
mov
push
xchg
mov
mov
xchg
cmc
adc
or
inc
sahf
inc
mov
cmp
pop
dec
inc
fwait
ret
push
ret
fwait
jle
movs
adc
pop
fild
push
push
mov
push
cmp
movs
cmp
add
adc
push
dec
pop
add
push
mov
pop
xchg
lahf
push
xor
test
scas
cmps
push
mov
(bad)
mov
xlat
gs
push
mov
iret
shl
fadd
fadd
mov
(bad)
mov
sub
xchg
cmp
mov
mov
and
or
mov
sub
jae
stos
out
lahf
or
xor
jmp
mov
cdq
cmp
push
shl
mov
test
leave
inc
cmp
dec
pop
(bad)
push
shl
rcr
out
jmp
loopne
shl
push
fldlg2
pop
cmp
inc
(bad)
fmul
call
(bad)
mov
les
ret
push
or
mov
mov
(bad)
mov
mov
test
adc
jae
pop
ret
call
push
add
mov
mov
ret
push
push
lds
mov
push
aad
fnstsw
pop
data16
sub
dec
add
cmp
adc
dec
test
push
test
shl
pop
fcomp
mov
mov
inc
xor
mov
aam
(bad)
pop
aaa
ins
rcr
enter
xchg
jns
fwait
scas
xchg
mov
rcr
mov
or
and
mov
pop
pop
xchg
or
in
and
xor
pop
inc
cmp
dec
pop
push
jo
lahf
push
enter
sar
cmps
fist
jecxz
pop
enter
jecxz
pop
(bad)
ds
loopne
fistp
pop
pop
(bad)
pop
iret
pop
pushw
fmul
mov
jbe
mov
retf
(bad)
mov
int
mov
(bad)
(bad)
sahf
sar
out
mov
out
xchg
lods
jmp
mov
mov
adc
inc
loopne
sub
adc
leave
dec
dec
push
or
arpl
idiv
cmp
bound
fdivr
jl
mov
stos
std
push
pop
add
dec
outs
xchg
cmp
sub
adc
jno
mov
pop
pop
rol
xchg
mov
sbb
xlat
shl
(bad)
or
pop
rcr
sar
inc
pop
imul
cs
les
in
dec
fwait
test
sahf
cs
shr
inc
adc
pop
inc
dec
mov
push
ret
mov
or
pop
sub
pop
mov
scas
sub
adc
popf
mov
shl
add
test
xchg
idiv
adc
fxch
(bad)
xlat
retf
out
retf
movs
sub
push
enter
sti
arpl
pop
push
(bad)
ret
push
iret
fidiv
(bad)
fcmovne
mov
ins
test
(bad)
fdivr
imul
ret
push
ins
pop
not
mov
leave
scas
retf
or
mov
cmp
mov
mov
(bad)
mov
xor
and
jg
ror
xor
imul
mov
jge
sahf
mov
(bad)
sar
fnstcw
mov
jbe
dec
mov
sub
data16
out
push
imul
rcr
push
fcmovnb
push
ror
cmp
sahf
ret
stos
out
movs
adc
hlt
cmp
pop
rol
xchg
xor
es
aam
(bad)
not
cld
fcmovnb
pushf
push
test
or
jbe
cmp
or
push
pop
call
out
ret
mov
(bad)
daa
pop
or
nop
jae
fcmovb
or
mov
xchg
ss
mov
mov
rcr
int
jno
adc
retf
push
push
dec
cmp
lds
fmul
ret
int
idiv
fidivr
int
scas
retf
push
fdivr
fmul
xlat
aad
xor
mov
cs
mov
(bad)
lods
(bad)
pushf
mov
nop
adc
out
outs
mov
loop
aas
cmp
inc
sub
jmp
mov
jg
loop
(bad)
push
xor
or
xchg
ds
xor
push
push
mov
adc
ins
push
les
adc
dec
sub
or
sbb
push
ret
test
and
xchg
(bad)
inc
sar
dec
mov
pop
rol
ss
and
pop
mov
mov
adc
push
cmp
retf
mov
xchg
sahf
fst
mov
pop
xchg
stos
bound
cmp
adc
adc
and
add
xchg
fwait
add
push
xchg
out
stos
xchg
mov
push
fisub
(bad)
jbe
dec
xlat
(bad)
loop
dec
pop
loopne
shl
(bad)
(bad)
(bad)
scas
fst
(bad)
cmp
(bad)
idiv
fcmovne
fcmovu
fstp
fxch
mov
push
aam
mov
rol
dec
sar
clc
dec
mov
shl
mov
add
das
shl
cmc
jbe
add
adc
cmp
cmp
push
mov
jbe
in
mov
push
lds
add
lahf
loop
in
mov
ja
aaa
or
sub
sbb
imul
dec
or
(bad)
mov
daa
pop
push
sbb
adc
test
les
or
shl
fsub
outs
fxch
mov
or
push
pop
(bad)
jecxz
xchg
fimul
push
fisttp
aad
int3
jmp
mov
cli
sbb
push
add
addps
jno
push
mov
hlt
pop
add
cmp
aad
inc
add
inc
retf
push
out
ja
pop
fsubrp
sahf
out
rol
iret
das
scas
out
add
push
pop
loope
(bad)
iret
xlat
retf
push
retf
leave
push
mov
lods
(bad)
(bad)
fcomi
out
mov
jle
(bad)
fcmovu
leave
mov
out
sbb
ret
mov
sub
stos
inc
retf
imul
mov
or
add
lods
jle
popf
xchg
jmp
nop
push
push
push
mov
sbb
cwde
adc
jmp
push
sbb
jnp
fiadd
div
or
push
ficomp
push
xchg
ret
ret
iret
mov
scas
fild
fisubr
push
pcmpeqb
push
adc
add
push
fwait
call
sbb
pop
lods
mov
ror
les
xchg
es
xor
ror
sar
xor
out
scas
sahf
xor
fsubp
jmp
cmps
ss
scas
adc
jnp
loope
push
adc
mov
inc
and
sub
inc
push
stos
add
idiv
imul
adc
outs
shr
addr16
fdivr
push
inc
add
jmp
(bad)
xor
(bad)
out
(bad)
not
push
iret
inc
sar
ror
dec
test
sub
push
out
int3
jle
div
movs
pop
push
out
enter
ror
les
sub
out
int3
sar
loop
pop
sbb
push
rol
mov
cmps
push
shl
into
test
movs
(bad)
out
xchg
lock
test
lods
pop
nop
mov
pop
adc
dec
sub
jmp
cld
ret
das
cmp
sub
call
sub
(bad)
mov
pusha
shl
test
aad
xchg
outs
fnstsw
jg
into
sbb
cmps
xchg
call
gs
push
push
or
cmp
mov
test
in
fst
inc
aad
leave
sahf
sahf
fidivr
fdiv
loop
cs
mov
ret
push
test
push
repz
adc
fld
push
ret
mov
xchg
neg
cmp
adc
add
cmp
pop
and
or
jnp
push
xlat
adc
push
adc
or
push
cli
xor
xor
faddp
(bad)
push
loopne
mov
(bad)
out
jecxz
in
or
push
fnstsw
mov
neg
sar
loope
xlat
out
pop
adc
fucomip
(bad)
out
fst
stos
mov
neg
out
push
test
sahf
stos
dec
fxch
not
aad
call
mov
test
push
sub
test
cmps
mov
mov
fidiv
(bad)
mov
or
push
inc
inc
movs
neg
adc
push
sub
xchg
out
mov
mov
lea
(bad)
mov
xor
enter
sahf
mov
add
aad
mov
(bad)
pop
fadd
sahf
movs
repnz
cmp
pop
adc
push
sbb
outs
adc
icebp
mov
and
ins
into
mov
ret
(bad)
ror
xlat
retf
ror
(bad)
(bad)
dec
mov
jnp
cld
or
(bad)
stc
in
loope
xlat
push
into
lock
ins
loop
dec
lahf
xor
sbb
or
pop
adc
or
sub
and
imul
mov
pop
push
or
and
daa
push
sub
lock
nop
jbe
shl
ret
retfw
rcr
mov
mov
scas
(bad)
into
in
in
in
fsubrp
call
sub
fadd
(bad)
ds
inc
imul
out
sahf
int
cmps
retf
retf
(bad)
iret
mov
push
(bad)
fmul
sahf
(bad)
retf
stc
dec
test
out
out
lds
out
test
mov
pop
test
(bad)
mov
stos
xchg
mov
dec
into
mov
mov
cdq
(bad)
jmp
nop
inc
stos
out
fimul
call
sbb
push
mov
mov
mov
mov
ss
jle
xchg
cs
xchg
mov
into
int
push
mov
jbe
outs
out
inc
ins
jg
in
fcmovne
push
xlat
(bad)
ss
pop
dec
jmp
mov
mov
pop
push
inc
or
test
sub
jns
call
xchg
mov
nop
xor
sub
inc
mov
je
jbe
out
int
scas
sub
ds
loop
jmp
mov
outs
out
mov
js
pop
mov
mov
call
arpl
(bad)
dec
adc
push
inc
push
into
cmp
or
loop
inc
adc
xor
jge
pop
push
lods
mov
xchg
in
(bad)
mov
data16
mov
out
cli
mov
data16
div
out
out
out
fnstsw
fist
loop
shr
loopne
popf
or
inc
push
neg
sub
pop
jl
adc
idiv
rcl
mov
sbb
aam
out
mov
mov
neg
test
test
add
retf
mov
push
out
cmps
xchg
inc
push
loope
pushf
xchg
mov
sub
test
push
xchg
cli
dec
or
aas
fwait
mov
push
xchg
add
xchg
ds
mov
ret
movs
nop
xchg
pop
sar
scas
sbb
iret
push
xlat
inc
je
aas
mov
xchg
and
or
sbb
inc
mov
mov
jg
cmp
adc
mov
and
mov
pop
retf
push
push
cdq
and
jbe
adc
pop
cmps
out
push
(bad)
out
fild
fwait
mov
pusha
push
lock
jecxz
in
loopne
jmp
pop
fisub
iret
mov
dec
pop
icebp
test
out
into
fidiv
test
fadd
mov
in
add
fstp
in
fmul
lock
(bad)
cld
clc
repnz
sti
div
mov
loopne
mov
push
repz
imul
loopne
out
inc
movs
mov
xlat
int
mov
stos
out
int3
(bad)
out
not
add
(bad)
cmp
fsub
adc
not
(bad)
retf
pop
sub
mov
mov
jg
push
jle
idiv
mov
pop
ins
mov
neg
push
test
and
jmp
popa
int
and
mov
push
or
call
jo
add
(bad)
jne
fdivr
ss
jl
jg
pusha
shr
cs
stos
mov
fsubr
enter
mov
add
and
dec
cmp
jmp
lock
outs
jmp
and
or
xor
or
icebp
jae
sbb
xor
xchg
cwde
not
into
retf
data16
(bad)
iret
test
jp
data16
outs
fisttp
loope
imul
sbb
cmp
pop
out
repnz
jmp
faddp
dec
hlt
stc
imul
xchg
push
jmp
clc
in
imul
ss
call
jmp
push
cmc
outs
js
stc
hlt
(bad)
std
clc
hlt
xor
cs
cmc
lock
push
pop
pop
in
mov
in
jmp
mov
loop
shr
out
fidivr
pop
mov
mov
mov
xlat
int3
ret
enter
xchg
mov
(bad)
xor
pop
pop
out
test
mov
mov
lds
shr
fbstp
xchg
xchg
hlt
push
adc
push
(bad)
adc
test
jmp
div
cmp
int3
mov
pop
lock
call
pop
push
into
not
sub
mov
rcl
sub
mov
jmp
mov
push
fcmovne
jle
sti
pusha
push
inc
test
or
dec
adc
das
lods
adc
and
mov
mov
fwait
mov
(bad)
jmp
scas
inc
xor
(bad)
fcmovne
mov
push
es
(bad)
stos
bound
xor
loope
push
call
push
imul
out
icebp
jmp
out
pop
div
test
push
cld
mov
hlt
push
dec
mov
hlt
ss
out
pop
call
sahf
jmp
mov
add
(bad)
sub
test
pop
out
into
dec
mov
out
shr
mov
scas
pop
test
mov
ins
test
mov
lods
pushf
(bad)
lods
lahf
js
sbb
mov
mov
adc
loope
mov
cmovb
adc
push
scas
mov
push
aas
fwait
int
test
fwait
xchg
dec
sbb
sahf
test
stos
inc
sub
in
jbe
mov
sbb
fcom
sbb
or
fsub
sub
aas
add
and
mov
push
rcr
call
cmps
xor
sahf
fbstp
inc
mul
push
in
push
icebp
aad
inc
aad
cmc
pusha
xchg
fidivr
in
(bad)
hlt
cmc
out
psllw
cmp
es
push
stc
pop
imul
and
fs
jmp
movs
jmp
aam
adc
stos
fstp
leave
leave
mov
out
aad
out
enter
in
mov
into
add
jp
fmulp
mov
ins
sub
(bad)
scas
sahf
inc
ins
adc
fidivr
push
pusha
sub
into
out
shl
add
test
imul
push
mov
mov
test
ins
ss
xchg
loopne
xchg
mov
sahf
xchg
jne
mov
mov
mov
push
shl
mov
xchg
jecxz
das
mov
sbb
xor
(bad)
jnp
cmps
pop
push
adc
cmovne
mov
loopne
mov
aam
sbb
lds
addr16
out
push
inc
scas
pop
sub
push
not
sti
pop
pushf
stc
mov
in
push
in
xlat
add
iret
test
sbb
repz
outs
out
out
(bad)
push
pop
mov
fnstenv
sub
xlat
fld
add
lds
test
out
sar
mov
mov
dec
and
int3
mov
sub
test
fbld
(bad)
outs
fcmovbe
into
mov
fdivr
xor
paddw
and
mov
mov
sbb
fwait
mov
mov
jle
mov
dec
je
sbb
push
or
fmul
mov
outs
xchg
dec
out
aam
std
jg
addr16
pop
jmp
push
and
das
outs
pop
pop
mov
stos
inc
(bad)
mov
push
mov
jbe
push
cmp
out
lods
push
shl
fdivr
jmp
scas
in
scas
call
sub
sahf
push
cmc
mov
out
sub
adc
pop
hlt
es
out
(bad)
scas
das
ficomp
cs
(bad)
mov
out
fild
mov
(bad)
mov
inc
mov
fcmovu
out
into
cli
or
mov
movs
out
out
ror
lock
movs
into
out
mov
mov
pop
push
(bad)
dec
(bad)
xchg
ja
and
(bad)
in
jbe
fisubr
clc
out
adc
dec
daa
iret
and
add
pop
adc
jl
repz
in
pushf
xchg
push
mov
mov
test
ret
test
mov
loopne
jmp
iret
into
push
inc
ret
(bad)
outs
jmp
out
(bad)
jmp
ds
mov
in
dec
inc
cmp
or
dec
push
mov
inc
(bad)
sub
inc
xchg
ret
inc
scas
outs
aad
or
pusha
xchg
loope
push
push
add
dec
fmul
imul
lock
push
mov
dec
data16
outs
push
out
in
inc
lods
jno
stos
into
fsub
(bad)
fsubp
loope
mov
sub
mov
mov
cs
add
ret
mov
push
mov
out
(bad)
push
iret
mov
pop
mov
(bad)
ret
pop
mov
test
stos
into
scas
jg
fsub
jmp
inc
lea
test
cmc
and
sbb
pop
inc
mov
xchg
jmp
rcl
nop
out
ret
fst
adc
nop
push
mov
(bad)
xchg
inc
cmps
xchg
push
xchg
and
mov
sub
pop
and
mov
(bad)
xchg
(bad)
push
fcomp
call
fsubr
and
jg
js
xor
xor
es
movs
xchg
repz
data16
ds
xor
(bad)
push
das
ds
jecxz
mov
pop
mov
aad
pop
pop
js
(bad)
fcom
inc
sahf
rcl
shl
fsubp
dec
cmps
add
(bad)
pusha
movs
push
jecxz
lahf
mov
cmp
fidivr
stos
faddp
mov
push
(bad)
int
out
enter
ret
out
out
inc
inc
(bad)
loopne
fucom
and
push
xor
mov
(bad)
jmp
in
mov
pop
jae
xchg
add
or
cmc
pop
or
adc
outs
clc
mov
push
(bad)
scas
cmps
mul
loope
jge
mov
xchg
inc
cmps
ret
lods
fwait
or
sahf
(bad)
mov
sahf
mov
fstp
mov
jmp
int3
mov
stc
imul
xchg
(bad)
mov
xor
sbb
pop
call
mov
sub
mov
fmul
sbb
stos
push
push
xlat
aas
out
ret
es
jbe
push
rcl
outs
add
ja
pop
pop
push
jne
test
xchg
fistp
popa
jno
out
or
iret
mov
mov
pusha
imul
mov
mov
in
(bad)
lods
push
push
aam
add
dec
sbb
out
in
jmp
test
sar
mov
add
inc
pop
xor
outs
or
jle
mov
xor
inc
ror
cmp
mov
lods
out
ret
push
scas
inc
loopne
push
les
scas
enter
movs
push
dec
push
retf
stos
rcl
dec
xlat
mov
push
into
out
adc
scas
mov
mov
add
scas
mov
cmp
or
inc
ins
arpl
jle
sahf
mov
hlt
inc
popf
je
mov
(bad)
mov
xlat
jmp
mov
push
retf
mov
mov
push
(bad)
pop
pop
jmp
mov
scas
xlat
aam
out
cmp
inc
aam
in
stos
test
out
sbb
cmps
sahf
in
lds
jmp
and
sub
mov
xor
and
mov
add
movs
stos
push
les
or
lahf
out
pop
jbe
pop
push
pop
push
inc
push
jmp
out
fstp
not
push
mov
xlat
enter
push
leave
xlat
push
je
xor
and
test
int3
push
pop
call
xlat
(bad)
into
xor
loop
push
fbstp
sub
and
inc
push
cmp
xor
jg
pop
xor
hlt
push
mov
(bad)
lds
push
outs
mov
sub
les
dec
mov
push
stos
pop
xchg
jmp
xlat
xchg
sub
mov
adc
mov
or
jbe
jle
shl
in
(bad)
in
or
std
lds
div
hlt
push
push
lds
xchg
lds
outs
neg
(bad)
inc
xchg
xor
pop
push
add
or
mov
pop
adc
getsec
mov
lea
(bad)
jmp
push
jmp
fcompp
scas
ror
sar
mov
es
stos
cs
retf
mov
sbb
xlat
mov
xchg
ror
pushf
sahf
jbe
or
mov
jg
imul
pop
adc
es
sbb
addr16
hlt
(bad)
int3
mov
sbb
cs
retf
jbe
test
pop
sbb
out
mov
pop
out
lds
cmps
push
out
rcr
pop
and
pop
(bad)
aad
fs
(bad)
popf
jb
lods
(bad)
loope
scas
mov
sub
jle
or
div
icebp
push
test
jmp
jmp
sbb
xchg
or
sbb
or
sbb
and
and
pop
adc
add
adc
inc
fld
outs
sbb
cmc
scas
out
in
mov
scas
test
loope
push
out
push
in
in
jmp
fcmovnbe
rcl
loop
dec
scas
shl
push
sbb
(bad)
mov
int
int
and
es
cmps
mov
push
inc
fstp
adc
add
lea
mov
mov
sub
daa
ds
outs
mov
xchg
pop
sar
mov
stos
xchg
mov
push
push
push
loopne
cmc
inc
fisubr
(bad)
mov
into
sahf
out
jmp
out
scas
call
icebp
out
into
repnz
cli
stc
(bad)
sti
xor
test
int3
push
or
adc
int3
mov
xor
outs
inc
inc
inc
inc
inc
aaa
jne
fstp
add
push
(bad)
aaa
xchg
outs
cmp
or
cld
(bad)
into
int3
cmc
clc
repz
hlt
es
jmp
dec
push
inc
loopne
imul
ds
xlat
sar
add
push
out
shl
jne
ds
xchg
sar
iret
ret
cmps
xchg
dec
cli
aaa
add
mov
popf
out
into
adc
inc
mov
lahf
out
mov
cmps
mul
rol
aam
lahf
add
fsub
sub
(bad)
aam
pop
(bad)
cs
mov
cmps
out
jmp
rcr
jle
(bad)
sub
add
add
mov
movs
mov
scas
mov
addr16
syscall
lea
ja
xor
add
ins
adc
xchg
loope
add
sbb
push
dec
cmps
cdq
cwde
fmul
push
xor
shl
push
test
inc
or
in
je
inc
adc
fisub
or
mov
pop
cmp
cs
push
(bad)
jne
or
xchg
into
mov
out
pop
pop
lods
loop
inc
lahf
out
mov
mov
shr
stos
ror
js
xchg
out
pop
loop
add
push
push
(bad)
dec
out
stos
pop
inc
add
out
push
or
mov
push
pop
mov
xbegin
scas
adc
mov
add
in
in
scas
cdq
xchg
jmp
and
inc
mov
lock
pop
xor
daa
inc
push
es
push
scas
pop
loopne
inc
loope
out
sbb
loop
(bad)
std
cli
cli
ds
inc
repz
imul
idiv
xor
inc
neg
dec
loopne
es
lock
dec
fsubr
mov
fild
cs
add
push
mov
xor
fist
lea
pop
pop
mov
xchg
push
outs
mov
mov
cmps
xchg
loop
leave
push
neg
jns
adc
jecxz
cs
lock
repnz
mov
xchg
pusha
(bad)
and
fcom
data16
clc
push
test
sbb
add
mov
ins
call
push
push
mov
xchg
and
out
cmp
push
cli
pop
xchg
or
pop
push
mov
data16
push
push
pop
pop
dec
nop
add
cmovle
cld
cld
xchg
aaa
stc
not
push
cmp
repz
lahf
lods
adc
test
fcomip
pop
jae
add
outs
or
push
stc
sahf
pop
pop
push
in
dec
mov
inc
in
loope
(bad)
push
sti
add
push
in
(bad)
jmp
inc
xlat
in
mov
inc
push
push
push
push
mov
stos
scas
lahf
repz
test
push
push
rol
xlat
aam
loopne
adc
std
mov
add
ja
test
data16
rol
cwde
cmp
adc
fild
and
inc
daa
mov
(bad)
dec
add
hlt
or
or
pop
outs
add
fwait
or
adc
cs
call
xchg
push
inc
test
mov
push
mov
(bad)
mov
outs
pop
repnz
mov
(bad)
repnz
fnsave
add
stc
lds
lahf
out
pop
or
dec
cli
push
cs
adc
inc
call
and
pop
(bad)
xlat
loop
stos
xchg
mov
aas
xor
mov
addr16
sub
and
lock
pushf
or
sbb
sub
adc
pop
jg
inc
fcom
and
xor
jge
xchg
mov
fdivp
in
in
outs
add
aaa
movs
mov
sbb
pop
cli
fild
cdq
mov
je
aas
pop
sti
xchg
lods
pop
mov
pop
outs
mov
mov
rcl
fdivr
iret
or
aaa
pop
cmp
dec
add
icebp
jmp
sbb
jmp
cmp
cwde
es
test
inc
cmp
loope
test
add
sbb
(bad)
jge
push
xchg
popw
jne
dec
add
and
or
mov
mov
push
clc
fild
sbb
inc
cld
std
cld
fisub
and
inc
and
(bad)
push
cmp
test
xlat
add
(bad)
mov
xchg
fcom
dec
mov
call
das
cmps
out
dec
cmp
add
loopne
cmp
out
push
dec
lahf
jbe
bound
and
jg
jo
xchg
or
pop
outs
pop
pop
mov
lods
test
cmc
jmp
add
ja
addr16
mov
inc
inc
das
pop
xchg
(bad)
mov
das
and
mov
shl
les
es
fwait
sub
and
scas
sub
xchg
inc
xor
adc
sar
ss
aas
cmp
pop
sbb
adc
cli
jmp
das
jge
fs
xlat
ret
add
sahf
scas
std
pop
fisub
adc
add
mov
icebp
pop
xchg
fcmovnu
fidivr
icebp
(bad)
out
out
fwait
xchg
clc
sub
inc
cmp
xchg
sbb
adc
sub
icebp
or
test
nop
xchg
sub
pop
dec
pusha
mov
addr16
inc
pop
pop
adc
das
sub
inc
inc
movs
xchg
ja
fcmovnb
cmps
cmps
clc
push
imul
ss
(bad)
jmp
aad
in
sub
mov
push
imul
adc
cs
sti
(bad)
push
inc
jl
fsubrp
(bad)
cs
dec
fisubr
mov
(bad)
jmp
push
mov
xchg
jmp
jg
jmp
jg
stos
inc
cld
js
adc
adc
out
or
and
(bad)
push
and
mov
mov
hlt
(bad)
sbb
jno
dec
das
mov
adc
push
push
adc
inc
xor
(bad)
(bad)
jmp
sub
inc
inc
xchg
push
push
test
mov
stos
stos
dec
scas
ror
lods
add
push
shl
sbb
scas
ss
data16
stos
push
ret
mov
pop
mov
sti
movs
add
jno
pop
mov
or
lds
mov
cmp
sbb
std
mov
imul
push
push
mov
push
fbld
cs
dec
and
pop
push
mov
and
aam
dec
ss
and
cmp
(bad)
(bad)
jmp
push
sub
cmovno
pop
pop
pop
cmp
aaa
or
xchg
pop
dec
dec
cdq
bound
(bad)
std
mov
dec
dec
cdq
dec
aas
ds
inc
aaa
aaa
xchg
sub
and
pop
(bad)
jmp
xor
xchg
pop
adc
push
dec
js
pusha
(bad)
mov
test
push
mov
jno
loop
bound
(bad)
dec
adc
or
stos
pop
es
pushf
rcr
loope
movs
mov
inc
test
mov
xchg
out
adc
call
mov
sub
(bad)
jg
adc
sbb
push
(bad)
jne
fidiv
test
jge
mov
fs
add
sbb
dec
xchg
xor
cdq
mov
dec
cmc
push
or
retf
pop
repnz
outs
add
jo
dec
sub
ja
out
mov
out
push
lods
xchg
and
sbb
push
adc
ror
xor
imul
adc
icebp
jno
pop
scas
data16
inc
add
and
ja
sub
dec
(bad)
push
(bad)
movs
add
scas
mov
jmp
push
xor
data16
(bad)
and
fbstp
outs
pop
mov
inc
es
inc
cmp
pop
or
test
add
out
pop
push
or
push
inc
inc
mov
mov
or
ins
imul
nop
dec
sbb
sar
push
pop
pop
movs
mov
out
and
hlt
sbb
cld
rol
mov
lds
popa
mov
push
add
adc
inc
and
outs
jmp
mov
xchg
dec
xchg
sbb
cld
mov
out
cmp
inc
ror
and
call
pop
add
fmul
cmps
(bad)
outs
pop
jmp
fadd
fwait
vphaddwd
jbe
mov
(bad)
push
outs
loope
adc
jg
pusha
push
adc
xor
adc
out
pushf
push
pop
sahf
push
gs
(bad)
xor
or
out
jg
mov
or
dec
bound
fist
dec
sub
push
cli
dec
(bad)
pop
test
mov
addr16
aad
cs
pop
dec
or
dec
psrlq
(bad)
or
xor
pop
mov
inc
pusha
out
enter
clc
jg
add
push
push
mov
sub
jnp
add
pop
mov
sbb
imul
jmp
sub
pop
mov
inc
mov
mov
mov
push
push
mov
pop
sub
xor
sar
mov
(bad)
mov
mov
xchg
cmc
jle
gs
cmp
adc
push
push
xchg
nop
xor
add
xor
mov
push
inc
cmp
sahf
nop
out
mov
sahf
aam
mov
std
push
sub
loopne
dec
mov
pop
inc
add
test
add
xor
sub
jmp
mov
xchg
out
shr
fsub
xor
mov
(bad)
mov
cmc
jmp
cmp
sahf
inc
call
jno
popa
mov
stos
mov
(bad)
mov
(bad)
stos
mov
xchg
fild
and
add
imul
push
in
cli
push
mov
sub
imul
and
cld
into
(bad)
cld
in
(bad)
xchg
inc
pop
inc
cld
out
jmp
cmp
sar
fbstp
in
call
mov
ds
int
ja
imul
(bad)
inc
dec
inc
adc
xchg
jno
adc
jbe
(bad)
(bad)
jg
sbb
push
push
jg
jne
lahf
(bad)
mov
aam
into
retf
retf
jmp
int3
mov
mov
mov
push
mov
pop
or
jno
syscall
movs
in
cmps
add
repz
push
sbb
sbb
mov
add
xor
add
add
sub
dec
inc
shr
push
lahf
nop
add
add
mov
adc
xor
push
inc
call
pop
enter
(bad)
jg
in
cs
pop
add
addr16
repz
pop
add
mov
pop
imul
add
cs
push
add
sbb
addr16
dec
rol
out
sbb
fld
mov
mov
or
enter
rcr
pop
mov
fnstenv
sbb
cdq
loope
xchg
out
add
clc
cs
push
add
cmps
xor
or
in
cmp
xchg
dec
push
add
sar
xor
pop
xchg
sbb
das
aas
xchg
jbe
sbb
pop
xor
dec
cld
pop
sbb
mov
pop
lock
mov
pop
cld
(bad)
mov
loop
loopne
rcr
sbb
pop
sbb
push
mov
call
adc
lea
ret
mov
ficomp
bswap
popa
pop
add
mov
(bad)
pop
cld
add
add
pop
cmp
leave
xadd
loopne
sbb
jg
add
dec
loope
jae
xor
add
mov
clc
cmp
adc
clc
pop
pop
pop
mov
aas
clc
movq
cld
or
xchg
add
push
inc
ror
sar
movs
jmp
ror
in
call
mov
ins
xchg
loopne
cld
popf
jnp
in
mov
popa
pop
pop
jecxz
clc
pop
jnp
mov
inc
pop
xchg
inc
jo
mov
pop
rol
ss
call
fiadd
les
lock
sbb
popa
rol
inc
mov
add
or
fsub
test
rcr
and
push
arpl
subps
popa
jecxz
ficomp
dec
and
cmp
out
or
jo
xchg
out
pop
out
pop
dec
addr16
retf
shl
addr16
inc
imul
imul
and
mov
femms
xor
or
je
(bad)
fild
out
hlt
xchg
hlt
cmp
xchg
hlt
xchg
hlt
push
push
dec
mov
scas
and
push
out
sub
xchg
into
(bad)
push
xchg
push
xchg
mov
push
push
push
inc
das
sbb
cmps
inc
dec
and
push
xchg
push
push
inc
ror
xchg
btc
arpl
leave
push
and
imul
jecxz
push
and
(bad)
mov
imul
mov
aaa
xchg
sub
nop
je
add
cs
sub
inc
jp
sbb
jp
push
and
dec
jnp
retf
mov
lods
loopne
and
sub
mov
mov
sub
sahf
pxor
push
inc
push
cmp
dec
daa
push
ds
dec
ds
push
adc
add
test
aad
jbe
je
es
mov
nop
sysret
movs
nop
cs
push
dec
add
lea
popf
pop
cmps
and
or
and
mov
ja
scas
into
leave
repz
push
push
shl
lock
push
inc
xchg
leave
cmp
inc
cmp
or
fild
cdq
dec
sub
and
adc
arpl
ja
outs
lods
or
push
jg
push
xchg
jp
pop
sbb
pop
xchg
pop
push
dec
xchg
xchg
ds
xchg
cs
jno
outs
cwde
ficom
pop
dec
inc
ds
or
add
mov
movs
dec
push
adc
daa
xchg
mov
xchg
out
and
ficomp
cmp
xchg
sbb
sbb
sbb
sbb
outs
data16
sbb
pop
push
sbb
sbb
dec
inc
sbb
sbb
ds
sbb
cs
sbb
push
push
sbb
sbb
push
push
enter
(bad)
jo
popa
cmp
fs
hlt
xor
pop
div
hlt
xor
daa
cmps
push
sbb
(bad)
and
add
aaa
dec
dec
ds
sahf
xchg
ret
xchg
sbb
das
or
pop
outs
test
fdivr
xchg
call
enter
pop
mov
call
dec
out
pusha
out
(bad)
push
movs
xlat
pop
inc
addr16
add
ss
addr16
addr16
addr16
addr16
push
sbb
(bad)
call
sub
pop
fs
cmps
(bad)
lahf
fdiv
loop
call
fsub
add
(bad)
jns
jnp
es
int
cs
jnp
adc
xchg
jns
cli
push
pop
retf
data16
out
cmp
fidiv
mov
xor
jne
aaa
add
inc
das
ss
das
inc
das
es
pusha
cs
das
push
mov
xchg
aaa
in
fild
add
mov
mov
scas
mov
mov
jl
and
scas
shl
inc
call
inc
pop
adc
mov
das
out
mov
bswap
js
adc
hlt
xlat
xchg
out
adc
adc
out
adc
jns
(bad)
imul
inc
xchg
adc
push
mov
and
and
cs
push
push
je
xor
xor
jb
pop
(bad)
pusha
or
push
or
int3
fistp
add
or
push
movq
inc
pop
test
aaa
jge
call
fild
add
or
les
sub
enter
int3
sub
inc
je
repnz
and
add
adc
adc
cs
adc
adc
push
hlt
adc
adc
push
fmul
repnz
cmp
sub
(bad)
sub
(bad)
stos
sub
enter
retf
jb
push
sub
popa
mov
jbe
cmp
sub
movs
mov
or
aaa
push
inc
dec
inc
xchg
daa
push
inc
cmovno
cs
idiv
cmp
fisubr
out
or
(bad)
mul
cmp
inc
mov
or
or
or
or
cs
or
push
push
dec
or
push
cmps
push
div
inc
and
(bad)
xchg
and
inc
iret
mov
mov
lea
lea
add
add
mov
pop
data16
inc
adc
or
aaa
mov
call
pop
jbe
inc
addr16
dec
inc
cmovno
out
fiadd
fbld
jns
(bad)
pop
ds
mov
xor
inc
dec
fiadd
fiadd
fiadd
fiadd
mov
dec
adc
xor
push
out
mov
mov
(bad)
into
add
bound
scas
push
mov
xchg
mov
jg
sbb
push
add
pop
iret
dec
add
jle
xor
sub
cmps
fnstenv
sbb
ins
push
push
in
xlat
jmp
(bad)
mov
mov
adc
dec
rol
cmp
or
inc
inc
cs
inc
inc
inc
push
push
inc
inc
inc
inc
push
push
xchg
push
out
xchg
inc
inc
xchg
add
add
shl
retf
jp
cli
adc
inc
pop
add
xor
add
inc
inc
xchg
sbb
data16
add
push
call
imul
out
pop
sbb
push
add
mov
push
(bad)
rcl
add
add
add
rol
rol
push
push
rol
rol
push
push
pop
add
pop
add
out
pop
sbb
std
cmps
(bad)
rol
rol
jmp
add
add
shl
add
inc
dec
xor
pop
or
inc
push
dec
add
add
jae
add
add
ss
cli
daa
jo
push
outs
data16
inc
sbb
inc
fadd
dec
cdq
pop
dec
xlat
(bad)
add
lahf
ins
cmps
(bad)
dec
add
add
jecxz
cmps
sbb
ins
jecxz
cs
jecxz
push
push
jecxz
jecxz
push
push
arpl
(bad)
mul
arpl
jl
jp
fdivrp
mov
ins
mov
mov
pop
scas
rcr
or
inc
(bad)
out
arpl
dec
(bad)
xchg
fadd
bound
(bad)
fadd
fsub
cmps
fadd
fcom
movs
(bad)
ss
ss
ss
ss
(bad)
mov
ret
ins
and
pop
(bad)
leave
(bad)
sar
ds
mov
out
xlat
imul
(bad)
rol
jecxz
out
cmps
mov
xchg
ds
dec
and
mov
es
push
mov
push
lods
ins
lods
ins
(bad)
imul
sub
scas
ins
fdivp
pushf
iret
arpl
xchg
(bad)
(bad)
aam
pop
rcr
cmps
scas
pop
fstp
sahf
mov
fld
gs
arpl
pop
arpl
push
dec
fstp
pop
aas
fstp
pop
cs
jnp
pop
push
out
push
pop
(bad)
sbb
sub
ds
jle
add
daa
sbb
push
aaa
add
cmps
xchg
lea
movs
xchg
lea
add
pop
add
mov
es
rol
(bad)
push
push
rol
mov
rol
(bad)
imul
fdivr
mov
out
cdq
xlat
lea
push
into
aam
mov
scas
scas
mov
rcr
mov
sbb
ja
or
or
pop
pushf
mov
push
push
push
or
or
cs
or
push
push
or
or
push
push
cmp
cmp
xchg
(bad)
imul
enter
enter
js
js
cmps
sahf
js
js
xchg
mov
adc
xchg
(bad)
xchg
mov
xchg
(bad)
xchg
(bad)
push
push
mov
(bad)
push
pop
xchg
mov
movs
icebp
xchg
out
xchg
xlat
xchg
xor
ror
ror
sbb
pop
shl
js
inc
mov
cmp
push
jle
rcr
jbe
mov
int3
aas
adc
pop
push
xlat
xor
xor
push
push
ss
xor
push
dec
push
xchg
mov
mov
arpl
lea
jecxz
mov
mov
adc
push
adc
sbb
(bad)
jle
pop
ficomp
(bad)
and
xlat
fiadd
inc
mov
and
cmp
mov
xchg
pop
mov
mov
inc
arpl
sub
sub
mov
lea
adc
pop
and
lock
es
mov
mov
or
daa
nop
jae
neg
xchg
mov
sub
mov
mov
into
sbb
pop
addr16
scas
scas
gs
retf
out
inc
arpl
dec
mov
add
dec
mov
jle
xor
sub
gs
pop
pop
xor
jecxz
mov
fisubr
jecxz
jecxz
into
(bad)
pop
(bad)
jmp
jecxz
jecxz
cmps
xor
(bad)
into
xchg
mov
sbb
mov
push
into
and
mov
push
gs
out
push
mov
and
push
ret
push
mov
xor
dec
sub
xchg
gs
inc
add
add
or
or
push
mov
imul
imul
loope
out
jbe
clc
xchg
(bad)
aad
sbb
xchg
loope
scas
sahf
xchg
dec
(bad)
cs
mov
jg
push
nop
jno
add
pop
not
inc
(bad)
movs
mov
loopne
(bad)
call
movs
inc
(bad)
fidiv
jecxz
push
push
bound
arpl
mov
pop
outs
inc
inc
mov
or
pop
add
push
(bad)
sbb
icebp
div
fistp
mov
and
fs
xchg
xchg
xchg
xor
xor
push
and
push
str
sbb
push
dec
arpl
idiv
sub
jno
out
retf
iret
jecxz
ret
adc
mov
arpl
ja
scas
push
lahf
xchg
arpl
xor
xor
pop
ja
mov
iret
les
pop
outs
adc
(bad)
das
sbb
mov
jecxz
out
test
arpl
fbstp
push
push
imul
pusha
scas
not
mov
jg
in
or
outs
cmovle
xchg
dec
punpcklbw
dec
push
dec
mov
mov
xchg
pop
dec
data16
and
adc
push
xor
push
push
mov
push
jmp
out
mov
add
fiadd
xor
add
add
(bad)
pop
scas
xchg
mov
jecxz
mov
jg
mov
add
je
pop
push
push
loop
xor
pusha
ret
xchg
adc
add
add
adc
dec
push
(bad)
adc
dec
imul
bound
dec
out
mov
imul
push
imul
push
pusha
mov
imul
stos
push
pop
dec
lods
xor
mov
inc
mov
mov
aas
fs
shl
les
shr
inc
adc
call
es
outs
(bad)
retf
push
ret
inc
adc
rcl
cmp
pushf
bound
bound
mov
mov
int3
fs
adc
mov
test
sub
icebp
enter
iret
xchg
mov
sahf
dec
mov
sahf
mov
adc
mov
mov
and
sub
pop
inc
inc
mov
mov
adc
int
mov
push
into
push
rcl
push
fstp
jbe
clc
popa
scas
test
es
cmp
push
adc
ins
sub
and
mov
mov
(bad)
div
out
es
(bad)
lods
dec
mov
mov
scas
outs
sbb
push
xchg
(bad)
call
loop
les
hlt
les
dec
lea
and
call
xchg
orps
mov
es
cwde
mov
pop
xor
mov
imul
xchg
jg
ss
sbb
push
add
pop
or
aas
daa
or
dec
imul
bound
dec
out
bound
dec
(bad)
into
or
inc
push
jne
inc
adc
sahf
lahf
and
nop
les
cmp
xchg
adc
and
adc
jns
jecxz
sub
das
mov
xor
nop
sysret
js
js
(bad)
idiv
js
out
out
and
xchg
fbld
xor
dec
fcom
push
mov
dec
or
jle
xchg
cs
push
and
and
push
out
adc
or
or
out
out
mov
adc
enter
add
add
les
les
les
les
imul
mov
rol
sbb
loop
das
jbe
push
sub
jp
pop
nop
pop
push
push
nop
cmp
ds
cmp
out
(bad)
push
(bad)
mov
add
sbb
jl
pop
retf
mov
inc
inc
jle
push
sbb
jbe
add
adc
adc
push
pop
mov
bound
or
faddp
and
mov
mov
(bad)
and
les
arpl
jnp
fidiv
mov
data16
mov
es
push
push
pop
mov
push
jno
aaa
dec
outs
adc
fcmovnu
pop
push
adc
dec
(bad)
test
out
out
in
adc
push
xlat
mov
adc
inc
cmps
scas
sub
push
inc
xchg
inc
cld
sub
mov
xor
pop
add
adc
adc
push
in
icebp
adc
pop
xchg
mov
popa
out
push
out
mov
icebp
push
test
mov
mov
mov
pop
mov
cmps
and
scas
xchg
mov
jg
test
repz
inc
and
cs
mov
clc
aas
xlat
push
mov
pop
push
push
loop
les
xor
iret
and
and
retf
scas
mov
dec
les
(bad)
loop
loop
xchg
je
and
push
push
mov
dec
or
mov
cmps
add
sbb
add
addr16
les
adc
(bad)
iret
add
mov
adc
dec
cmps
mov
sbb
sbb
push
inc
sbb
ja
add
pop
and
mov
mov
and
mov
cs
add
pop
pop
push
adc
add
(bad)
adc
outs
imul
jle
push
xlat
int3
les
frstor
(bad)
push
fisub
mov
cmps
stos
xchg
outs
adc
mov
jle
adc
and
dec
push
adc
dec
push
push
add
dec
push
(bad)
pushf
dec
adc
xlat
pop
ficom
sub
sub
(bad)
into
dec
adc
inc
(bad)
mov
or
scas
cmps
add
or
mov
add
mov
jbe
pop
and
inc
lods
push
cmp
int3
neg
and
in
add
inc
adc
int3
mov
pop
inc
ins
mov
(bad)
scas
les
test
lahf
xchg
les
les
mov
jle
inc
or
fs
add
pushf
inc
pushf
push
push
inc
mov
push
dec
jbe
adc
into
bound
mov
(bad)
mov
scas
cmps
bound
add
xchg
dec
add
add
xchg
add
mov
and
and
and
adc
push
dec
out
ret
add
ffreep
int3
pop
mov
mov
mov
mov
xchg
mov
jle
shr
je
push
add
ins
loope
push
ins
popa
ins
popa
(bad)
mul
les
not
ins
popa
ins
into
(bad)
ins
ins
popa
ins
mov
push
lods
sub
(bad)
push
xchg
mov
outs
ss
adc
scas
imul
aam
or
or
(bad)
div
fbstp
iret
or
push
outs
(bad)
mov
scas
jle
or
xchg
or
mov
dec
addr16
adc
inc
or
ret
or
inc
(bad)
not
inc
or
out
or
es
push
(bad)
push
lds
scas
sahf
pop
sbb
xchg
mov
adc
xchg
push
gs
push
out
add
mov
push
xchg
xchg
push
push
pop
push
pop
(bad)
idiv
push
pop
out
out
sub
je
mov
mov
mov
push
pop
push
pop
cmps
sahf
push
pop
push
pop
xchg
mov
jle
inc
pop
sub
popa
push
push
popa
popa
popa
sar
popa
popa
popa
popa
out
out
push
popa
popa
faddp
sbb
push
push
push
push
mov
push
scas
lahf
test
test
mov
movs
push
and
sbb
jb
outs
push
push
push
push
push
push
push
push
push
push
push
dec
push
push
push
imul
push
dec
add
cmp
ret
mov
mov
ret
add
test
mov
test
push
arpl
(bad)
adc
mul
inc
or
out
or
(bad)
xor
xor
xor
xor
xor
(bad)
xor
jbe
mov
sub
mov
mov
push
sub
cmp
test
or
out
fimul
daa
or
push
xchg
aaa
test
fnstenv
loopne
mov
movs
lock
lock
xchg
mov
movs
lock
sub
sub
lods
sub
lods
out
sub
and
test
jo
loope
sahf
sar
mov
mov
jbe
rcr
mov
lods
sub
sub
lods
sub
(bad)
in
test
or
jmp
js
mov
(bad)
enter
mov
jo
jo
scas
mov
sahf
mov
mov
add
adc
lds
add
adc
(bad)
not
adc
out
out
push
adc
(bad)
adc
adc
into
mov
ret
adc
cmps
sahf
ret
adc
xchg
add
jbe
ret
and
inc
rol
inc
ds
pushf
daa
sub
or
push
and
push
and
neg
rcl
int
or
ret
mov
pop
and
cmps
ret
pop
sahf
xchg
popa
inc
lds
div
(bad)
mov
mov
imul
mov
mov
out
mov
mov
(bad)
into
mov
mov
(bad)
mov
mov
adc
push
ret
lock
ret
mov
jle
adc
mov
or
xchg
push
dec
or
dec
inc
or
dec
ss
dec
es
add
dec
push
push
pusha
inc
or
call
int
sbb
ror
and
mov
mov
test
test
mov
and
add
mul
popa
and
out
and
and
(bad)
popa
and
and
(bad)
popa
and
and
mov
and
and
cmps
mov
and
fwait
xchg
pop
push
pop
xchg
test
and
div
mov
dec
aaa
daa
inc
xor
and
sbb
outs
xchg
loopne
inc
cmp
aaa
push
xchg
mov
dec
mov
and
(bad)
cmp
cmp
cmps
sahf
sub
cmp
xchg
out
inc
inc
inc
iret
adc
adc
imul
adc
adc
out
daa
pop
mov
(bad)
mov
xor
or
imul
mov
jle
jle
inc
pop
inc
pop
stos
and
aas
inc
dec
or
push
pop
pop
ds
outs
rcl
push
dec
or
lds
sbb
call
sbb
sbb
into
(bad)
sbb
sbb
mov
ret
adc
or
mov
pop
out
or
or
out
or
or
(bad)
into
or
or
(bad)
mov
mov
or
or
cmps
sahf
or
or
xchg
mov
and
xchg
pop
pusha
or
or
sbb
inc
pop
push
adc
inc
mov
adc
adc
xchg
mov
ins
iret
mov
(bad)
mov
lock
xor
inc
mov
aas
(bad)
push
xor
and
push
add
test
test
test
test
test
test
jle
sub
or
and
sub
sub
dec
call
aad
or
add
adc
dec
fistp
push
aam
add
adc
cmps
mov
dec
icebp
scas
dec
and
ins
pusha
or
mov
ins
pusha
ins
pusha
(bad)
ins
pusha
ins
pusha
into
(bad)
ins
pusha
ins
pusha
mov
pop
scas
sahf
sbb
sbb
xchg
mov
adc
sbb
pusha
ins
outs
pushaw
ins
pusha
dec
push
push
es
dec
aas
int
add
(bad)
cs
cmps
xor
out
mov
imul
imul
mov
mov
mov
lahf
or
sbb
xchg
adc
out
mov
mov
xor
or
xor
push
push
lods
jg
add
xchg
dec
gs
cmps
mov
adc
dec
push
dec
push
out
out
add
push
fimul
(bad)
(bad)
add
xlat
add
cmp
inc
rol
xor
rol
add
add
add
shl
loopne
rol
pusha
push
dec
mov
aas
(bad)
daa
arpl
arpl
jle
inc
add
add
mov
add
(bad)
push
and
and
(bad)
xchg
mov
int
loopne
(bad)
push
mov
aaa
sub
xchg
rcl
adc
mov
cld
cmps
cmc
xchg
shl
outs
mov
xor
in
add
and
mov
dec
in
(bad)
mov
xchg
add
loope
pusha
out
(bad)
mov
add
nop
push
outs
or
pushw
or
xchg
pop
add
and
and
adc
pop
outs
adc
aas
or
and
mov
add
inc
shr
test
movs
icebp
fild
xor
add
inc
sbb
push
add
inc
inc
xor
xor
mov
dec
push
or
add
mov
pusha
sub
sub
(bad)
test
into
add
call
push
ins
lods
loopne
addr16
add
xchg
or
or
outs
inc
add
add
sub
cld
aaa
or
or
cs
or
push
push
inc
sbb
jle
test
sbb
daa
jo
and
lods
jmp
or
cs
mov
pop
mov
mov
push
dec
push
push
or
push
add
or
or
cs
and
pusha
pop
push
and
pusha
push
push
add
push
cmc
call
add
sbb
pop
out
dec
add
push
data16
pop
mov
pop
pop
add
and
xor
xor
push
push
lock
add
div
add
aas
add
inc
or
dec
popw
add
or
or
daa
add
(bad)
test
add
out
out
nop
arpl
fistp
pusha
movhps
add
jmp
mov
mov
out
ins
mov
je
outs
into
mov
out
xchg
cmc
mov
nop
iret
sub
or
pusha
inc
xor
jmp
pop
inc
call
(bad)
sar
pop
inc
into
(bad)
je
mov
mov
sub
cmp
jmp
xchg
icebp
(bad)
shl
not
lea
popa
cmp
jle
por
jns
out
xchg
out
xchg
test
pusha
xor
ficomp
pop
pop
sbb
inc
jmp
and
or
xchg
rcr
add
rol
sahf
inc
fwait
ror
push
add
shr
pop
std
aas
mov
pop
push
int
dec
sbb
dec
icebp
pop
and
shr
(bad)
movq
pop
enter
psllq
push
pusha
and
enter
pop
dec
dec
dec
pop
fadd
(bad)
clc
add
fld
lds
(bad)
cmp
fistp
jo
sbb
leave
mov
add
dec
neg
arpl
add
addr16
push
mov
push
push
out
push
jge
aas
mov
push
lock
ja
mov
cmovo
jb
mov
cld
rcl
lock
pop
dec
daa
cld
dec
add
adc
jg
pusha
test
daa
dec
dec
and
jb
dec
dec
(bad)
pop
jge
nop
mov
add
gs
pusha
imul
inc
sub
adc
lock
xchg
jg
push
retf
sahf
xchg
and
nop
test
cli
stc
push
xor
mov
add
and
out
push
dec
movs
hlt
push
cli
inc
mov
mov
fisub
push
jecxz
xchg
push
jmp
fidivr
iret
outs
pop
and
hlt
xchg
and
sbb
pop
adc
dec
sub
add
sbb
push
sahf
mov
ret
call
(bad)
call
or
and
mov
(bad)
and
inc
cmp
push
sub
xor
xor
popf
nop
es
mov
daa
dec
push
or
montmul
cmps
xchg
mov
mov
imul
add
dec
pop
xor
jbe
pop
adc
scas
dec
sub
and
add
popf
rcl
mov
outs
xor
jl
adc
test
adc
xor
inc
jb
gs
dec
test
not
add
test
inc
shr
mov
dec
pop
sbb
(bad)
movs
bound
cld
bound
xchg
out
mov
xchg
(bad)
jb
outs
and
ss
stc
je
in
addr16
cmps
push
sub
cmps
ficom
(bad)
jle
add
je
or
push
call
fcmovnu
pusha
adc
inc
fcom
and
es
loopne
mov
in
sub
push
adc
pop
leave
cld
(bad)
out
arpl
pop
cmc
cmc
call
out
fstp
fcom
cmc
mov
(bad)
fnstsw
fcmovbe
hlt
xchg
test
sub
sar
dec
cmc
mov
repnz
dec
aaa
xor
(bad)
outs
(bad)
push
xor
das
bound
fcom
cld
pop
sbb
icebp
mov
jbe
inc
(bad)
ins
nop
out
js
pop
cmp
test
xor
sbb
sub
dec
std
pop
int3
je
(bad)
jmp
(bad)
mov
outs
test
xlat
rcl
xchg
iret
mov
mov
cs
push
and
mov
sub
adc
inc
fsubr
mov
push
fnstsw
pop
addr16
test
shl
pop
std
(bad)
jns
daa
retf
jno
daa
hlt
adc
mov
push
add
jle
inc
movs
mov
push
pop
dec
shld
pop
pop
pop
inc
cli
nop
push
(bad)
mov
imul
into
push
mov
out
mov
jg
enter
(bad)
pop
sbb
cmp
jmp
fdivr
ja
push
mov
push
dec
or
xchg
in
cmp
sub
out
jo
jmp
pop
inc
dec
or
or
xchg
dec
push
dec
fidivr
push
inc
jecxz
push
in
cmp
jmp
push
repnz
imul
fiadd
out
jo
jl
dec
xor
push
fwait
push
aaa
and
mov
and
rol
lahf
push
push
movs
xchg
push
pop
jle
xchg
neg
push
or
call
ds
or
pop
mov
das
stc
cmps
pop
movups
in
loope
shl
xchg
je
mov
push
aad
inc
lea
or
sar
cmp
stos
(bad)
aad
fadd
dec
mov
add
sahf
push
out
jmp
(bad)
mov
pop
push
add
xchg
ficomp
sub
(bad)
dec
jne
sbb
std
mov
adc
ror
mov
fimul
scas
cmp
dec
test
mov
sbb
mov
add
pop
cmp
xchg
mov
xor
push
fild
xchg
ss
mov
iret
sar
dec
jbe
jbe
nop
push
outs
fist
mov
and
sahf
push
inc
in
xchg
add
inc
jo
lds
inc
push
adc
int3
and
lods
jecxz
or
xchg
std
push
mov
inc
popf
push
into
xchg
push
das
ins
add
ror
enter
(bad)
jae
sub
inc
out
int
push
ja
es
pushf
xor
add
outs
xchg
xchg
in
jmp
shl
sar
mov
ret
mov
test
into
fdecstp
jecxz
imul
leave
(bad)
pop
xchg
and
xchg
mov
sbb
push
push
cli
adc
into
push
push
xchg
push
adc
mov
sbb
pop
(bad)
loop
aad
outs
cs
inc
xchg
adc
out
dec
sahf
call
ja
call
pop
jo
inc
inc
mov
jle
jle
fiadd
in
cs
shr
ins
push
inc
push
ss
je
enter
sub
add
cli
add
ficom
push
loopne
ins
push
fwait
popa
pop
daa
dec
scas
ins
pop
test
xchg
ins
pop
pop
imul
aas
fcom
jmp
in
cdq
dec
cs
loopne
jmp
call
jl
pop
and
retf
adc
and
push
xchg
sbb
nop
cmp
rol
cmps
push
(bad)
pop
inc
pop
dec
idiv
movs
inc
call
inc
jmp
pop
inc
push
dec
adc
js
mov
and
xor
mov
xor
mov
in
jge
outs
inc
scas
push
nop
jle
inc
(bad)
js
pop
dec
mov
(bad)
mov
inc
and
xor
adc
std
pop
pop
adc
push
or
mov
mov
jle
movs
fild
rcl
xchg
mov
jl
xchg
(bad)
(bad)
mov
adc
cmovs
xor
sub
dec
es
rol
dec
push
xchg
aam
pop
je
imul
push
pop
retf
xor
in
fistp
scas
inc
adc
dec
and
scas
into
adc
or
ja
push
pushf
sbb
push
sub
mov
popa
mov
das
dec
and
sub
push
jecxz
dec
dec
cs
jno
xor
xor
iret
inc
imul
push
mov
xchg
test
xor
mov
push
shr
add
jle
sar
and
imul
dec
dec
xchg
sub
push
add
test
mov
dec
test
and
sbb
scas
aaa
or
mov
je
push
cs
pop
mov
int3
mov
xor
neg
iret
adc
adc
call
sbb
sub
cdq
sub
std
pop
and
sub
sub
add
jg
inc
lsl
bound
jge
dec
shr
mov
inc
cmp
inc
or
jmp
cs
call
add
inc
pop
fwait
outs
mov
pop
pop
inc
mov
mov
daa
sysret
pop
xor
add
cli
add
stos
dec
sub
ins
adc
cli
aaa
mov
mov
mov
push
iret
nop
aad
pop
or
mov
xor
and
aas
les
jmp
scas
push
ss
pop
add
jae
fidivr
cmp
add
outs
mov
push
adc
arpl
xchg
cs
inc
jmp
ss
lods
scas
int
mov
imul
les
mov
(bad)
jns
jnp
adc
retf
push
int
fucom
fisttp
iret
add
add
jne
push
sti
into
push
pop
retf
inc
mov
clc
lods
pusha
push
or
cs
pop
or
sbb
out
movhps
adc
push
add
test
(bad)
xchg
bound
dec
inc
out
rcr
(bad)
cmps
lahf
jo
push
aam
sbb
idiv
repnz
idiv
mov
push
adc
mov
mov
inc
xchg
mov
push
add
xchg
aaa
int3
xchg
jmp
nop
sahf
dec
hlt
ds
popf
push
rcl
mov
rcl
xchg
mov
jp
pop
or
out
mov
pop
push
dec
fwait
lds
or
mov
or
pop
jns
or
mov
mov
ins
xchg
fbld
(bad)
out
adc
lods
jge
out
add
mov
outs
ja
cld
adc
aas
mov
pop
lahf
xchg
sub
sar
icebp
ret
dec
fcomp
jmp
adc
dec
(bad)
into
push
mov
aad
(bad)
cs
int
fmul
shl
test
movs
push
sub
idiv
add
sbb
lahf
js
shl
dec
push
dec
shr
push
aam
push
lods
clc
push
aad
inc
fldcw
add
mov
mov
enter
lahf
rep
pop
mov
add
out
cmc
bswap
sbb
sahf
out
mov
(bad)
leave
enter
rol
jbe
push
and
adc
mov
add
retf
mov
jle
cmp
(bad)
ss
ror
dec
fstp
inc
add
fmul
pop
loopne
stc
adc
leave
(bad)
in
fxch
out
fcmove
lds
rol
cmps
mov
mov
jbe
ret
cmps
or
dec
in
int3
pop
sub
in
retf
leave
test
pop
xchg
out
fisubr
(bad)
shl
arpl
ja
into
cmp
add
(bad)
push
imul
ins
cld
pop
push
movs
retf
pushf
mov
retf
movs
or
fsub
(bad)
shr
pop
mov
mov
push
jg
sub
(bad)
dec
jecxz
pop
dec
sahf
xchg
xchg
jecxz
(bad)
enter
pop
call
sbb
jecxz
fmulp
call
lods
movs
repz
dec
inc
cmp
clc
inc
es
mov
fisubr
adc
push
sub
mov
pop
movs
daa
lea
outs
int3
stos
lea
lds
mov
js
lods
outs
inc
add
dec
inc
pop
add
dec
mov
mov
push
add
aaa
sbb
clc
ins
dec
xor
sub
test
ds
retf
fbld
shr
clc
das
stos
hlt
xchg
test
mov
adc
jb
js
rol
xchg
ins
dec
(bad)
adc
shr
mov
js
jno
cs
scas
xchg
push
pop
sahf
mov
mov
push
pop
or
pop
or
push
sub
cmp
imul
sahf
mov
enter
loop
outs
sbb
xchg
(bad)
outs
mov
cmp
mov
push
ins
fcomp
leave
cmps
data16
mov
cmp
mov
inc
(bad)
mov
fnstsw
xor
outs
push
retf
les
cmps
iret
push
fadd
stos
xchg
push
pop
outs
lahf
gs
cmp
sub
push
jle
fwait
les
sti
ds
jle
xor
gs
iret
shl
cmp
xlat
ret
push
mov
inc
out
cdq
mov
popa
mov
cmp
lods
xchg
es
icebp
outs
cmps
xchg
jle
dec
mov
or
cmp
imul
(bad)
iret
mov
cmps
shl
mov
sbb
lds
add
icebp
movsx
push
outs
push
dec
mov
xor
loop
out
xchg
sbb
iret
dec
sub
mov
aas
es
mov
aam
dec
mov
daa
(bad)
adc
mov
jp
rol
mov
(bad)
lea
ds
mov
xchg
jle
(bad)
xchg
cmp
adc
xchg
xlat
mov
test
lock
outs
sbb
push
lds
or
or
out
pop
outs
ja
sbb
inc
(bad)
je
popa
call
rol
push
popa
addr16
ror
and
inc
(bad)
(bad)
scas
ret
retf
pop
ret
inc
ficomp
adc
pop
jne
pop
pop
dec
inc
xchg
mov
jnp
gs
aaa
shl
imul
sbb
add
jecxz
cmps
es
les
jecxz
sbb
imul
loopne
cmp
lea
push
dec
mov
aaa
push
leave
mov
and
ret
mov
push
(bad)
call
or
mov
sbb
pop
iret
(bad)
loop
ret
enter
das
loop
(bad)
sahf
add
mov
jmp
test
mov
sbb
(bad)
mov
enter
sbb
pusha
scas
dec
sbb
scas
clc
inc
cmp
loope
retf
adc
sbb
push
imul
jecxz
out
in
adc
push
xchg
xlat
sti
loope
into
cmc
out
in
(bad)
mul
(bad)
les
pop
and
bound
adc
dec
loop
mov
hlt
das
shr
push
pop
shl
push
pusha
xor
and
xchg
pop
push
push
int3
mov
loop
pop
std
lahf
(bad)
in
(bad)
dec
cmp
sub
test
sbb
outs
fstp
in
xor
loope
mov
es
dec
addr16
cmc
lock
into
and
call
mov
inc
(bad)
and
(bad)
mov
pop
int3
ja
mov
or
jmp
and
fs
mov
mov
sbb
(bad)
mov
mov
(bad)
ret
clc
ja
cmps
rol
mov
or
sar
sahf
les
push
mov
ins
pop
arpl
mov
into
ret
pop
(bad)
es
outs
enter
xor
les
enter
shr
dec
inc
xchg
and
pop
sub
scas
cmp
xor
ret
lods
lahf
sub
out
pusha
cs
movs
(bad)
mov
inc
outs
jecxz
int
cmp
or
add
fimul
jbe
mov
test
xchg
mov
push
das
adc
cmp
fcompp
out
pop
push
cmps
inc
mov
out
xor
mov
add
es
in
dec
movs
ficomp
ret
(bad)
int
mov
sbb
into
iret
(bad)
(bad)
std
push
inc
adc
inc
inc
cmp
js
fs
adc
inc
lods
push
scas
cmps
inc
inc
inc
xchg
and
(bad)
xor
(bad)
iret
out
ja
loop
test
dec
dec
mov
inc
add
or
xor
and
jg
jg
fcmovbe
aam
push
jno
mov
out
push
in
fadd
or
les
mov
(bad)
and
js
aaa
iret
cmp
adc
(bad)
int
out
inc
test
xor
dec
pop
es
sub
cmps
outs
inc
mov
push
cmp
jno
cmps
add
cmps
arpl
pop
push
inc
aas
aas
push
(bad)
clc
cmc
mov
or
out
les
push
loop
les
mov
sbb
dec
cwde
push
ins
outs
mov
lock
pop
push
push
xchg
pop
dec
fld
add
jb
iret
clc
push
push
pop
lahf
push
inc
inc
adc
xchg
push
push
ss
(bad)
fnstenv
pop
add
add
mov
xor
clc
imul
mov
pop
add
out
sbb
daa
and
lods
sbb
xchg
pusha
dec
cld
lahf
adc
cmp
nop
(bad)
lods
stos
cld
xchg
mov
xchg
les
(bad)
ja
cli
call
aam
mov
ret
xchg
jg
push
stc
sub
pop
jg
inc
cmp
sub
call
adc
xor
sbb
aas
and
sbb
adc
xchg
add
cmps
push
xor
pop
cmps
and
stc
adc
mov
xor
xor
pop
pusha
ret
jg
clc
jg
sub
pop
sbb
dec
popf
jge
call
add
mov
stos
push
jg
mov
adc
leave
push
test
xchg
pop
div
xchg
nop
hlt
mov
and
inc
fist
inc
cmp
xchg
popa
inc
(bad)
cmps
inc
inc
and
std
(bad)
jmp
leave
push
push
and
cmp
lods
fwait
nop
call
mov
cld
ret
inc
lea
jle
ins
gs
mov
xchg
xchg
add
fwait
mov
and
(bad)
inc
pop
jo
imul
jl
cwde
sbb
sbb
add
sub
sbb
adc
sbb
gs
rcl
sbb
add
jl
iret
mov
push
loopne
cmovno
cmp
jns
jg
pop
push
push
in
movsx
pop
loopne
push
or
ins
add
sysret
clc
pop
push
and
ror
cld
lock
sti
mov
pop
lock
out
cld
cmovns
and
fsubr
mov
mov
into
icebp
dec
push
add
adc
ret
f2xm1
in
sbb
cmovb
int
mov
xchg
add
lock
out
add
dec
and
leave
leave
imul
cmovb
and
and
add
add
pop
inc
inc
outs
and
movs
dec
add
and
xchg
ja
adc
cmp
mov
push
(bad)
mul
popf
aaa
mov
bound
push
sbb
inc
or
or
(bad)
xchg
and
mov
add
imul
sub
push
dec
xor
xor
sbb
add
movs
push
pop
fwait
test
mov
pushw
xchg
cmps
pop
mov
adc
sahf
ss
pushf
test
sub
add
loope
push
jle
push
sub
or
dec
add
xchg
pushf
cmps
push
rol
pop
or
aas
fcom
mov
js
(bad)
adc
pop
int
mov
jp
lock
out
jge
adc
(bad)
dec
out
or
imul
inc
xchg
adc
pusha
test
enter
adc
pop
pop
std
and
or
mov
sub
push
test
rol
add
loopne
test
xor
ins
and
pop
shr
pusha
and
inc
ds
pusha
and
das
mov
add
add
inc
sar
or
lock
repnz
cmp
(bad)
imul
xchg
mov
mov
add
add
push
xor
push
sahf
aaa
and
loope
(bad)
push
xchg
or
push
jle
push
pop
add
ja
xchg
aaa
adc
dec
xchg
data16
add
test
add
mov
mov
add
push
and
add
daa
jbe
sbb
push
mov
sub
mov
add
movs
push
adc
pop
mov
mov
aam
out
addr16
xchg
pop
push
adc
or
ds
lock
cmp
in
cdq
das
inc
ret
push
scas
mov
mov
inc
pop
imul
pop
es
add
push
test
loope
cmp
xor
es
stos
add
xchg
fist
xchg
sub
add
pop
add
outs
mov
or
das
dec
pusha
add
scas
in
add
daa
add
push
sub
test
out
add
inc
les
sbb
xor
js
addr16
jbe
inc
scas
add
add
sahf
aaa
add
and
add
js
or
jbe
push
add
fild
cmp
sbb
mov
push
fdivr
push
js
add
pop
add
add
add
add
ds
and
mov
pop
sub
cmp
push
inc
ja
jne
into
(bad)
jbe
test
lea
test
daa
nop
pop
pop
adc
and
pop
adc
push
dec
imul
jbe
(bad)
rcr
pop
imul
ds
mov
dec
jmp
mov
mov
not
cdq
lods
inc
imul
popf
iret
push
loopne
mov
mov
pop
(bad)
sbb
jg
data16
mov
scas
push
shl
inc
mov
jne
(bad)
xchg
daa
pop
jge
lods
adc
out
mov
retf
pop
stos
push
push
xchg
mov
xchg
xchg
xchg
adc
lea
and
inc
into
lods
inc
(bad)
ret
out
mov
fs
pop
mov
(bad)
ret
imul
pop
cmps
ret
cli
out
leave
cmps
sbb
ret
jp
mov
cmp
add
or
xchg
sub
data16
rol
es
pusha
jge
scas
jo
push
cmp
lods
daa
adc
adc
push
ret
add
pop
add
out
mov
fmul
in
out
cmp
xlat
xor
jle
push
int
pop
adc
pop
push
imul
pop
(bad)
aam
push
add
das
pop
into
aam
imul
into
xor
sahf
(bad)
into
jmp
xor
addr16
add
lock
into
add
movs
adc
mov
lock
cmps
inc
ins
dec
jmp
loopne
add
xchg
and
fistp
xchg
(bad)
pop
mov
pop
test
jg
sbb
jbe
nop
cmp
xor
inc
imul
sbb
(bad)
xchg
pop
dec
das
imul
aad
mov
iret
push
pop
aam
(bad)
mov
push
jbe
loopne
mov
or
push
push
es
add
push
ss
mov
cmp
push
push
mov
dec
aam
push
inc
scas
adc
neg
shl
pusha
inc
pop
out
(bad)
outs
ror
sbb
(bad)
sbb
mov
push
pop
push
push
sub
pop
push
or
ss
(bad)
push
aam
daa
imul
pop
retf
push
repnz
(bad)
pop
add
rcr
(bad)
push
mov
(bad)
cmp
(bad)
pop
sbb
or
data16
push
add
movs
adc
imul
fsubp
ficom
add
das
pop
enter
rcr
(bad)
data16
and
pop
add
rcr
push
dec
inc
movs
mov
xchg
ds
dec
(bad)
cs
mul
out
mov
dec
mov
rcr
(bad)
scas
sbb
cwde
je
add
or
es
pop
add
pop
leave
mov
das
rcl
push
push
je
xchg
(bad)
div
jo
and
add
(bad)
mov
mov
cmps
add
jmp
daa
je
and
rcl
pusha
xor
add
das
je
push
cmc
lods
xchg
xchg
sti
pop
xchg
or
jmp
call
movs
out
jp
outs
push
rcr
out
xlat
lea
mov
jmp
dec
pop
add
inc
and
sbb
out
(bad)
mov
sub
or
mov
cmp
enter
test
mov
jno
aas
cmp
pop
sar
scas
push
rcl
add
xchg
add
sahf
xchg
int
or
pop
add
into
xor
add
add
jle
push
sub
pop
loopne
pop
cdq
and
out
out
push
test
sbb
inc
add
jo
fwait
push
push
(bad)
clc
add
dec
call
das
sbb
ds
cs
mov
(bad)
add
dec
xchg
dec
(bad)
mov
daa
popf
cmp
je
jle
ja
dec
and
sbb
pusha
es
push
inc
cvtps2pi
inc
hlt
shl
out
(bad)
and
sub
scas
sub
rol
sahf
xchg
rol
or
sub
push
cmp
mov
call
es
push
cmp
(bad)
sbb
xor
imul
sbb
mov
jbe
arpl
aaa
pop
aas
lea
and
xor
push
mov
(bad)
das
and
scas
cmps
sahf
mov
xchg
jecxz
xor
sbb
jbe
pop
int3
mov
icebp
les
dec
cs
les
dec
cmp
push
push
pop
loop
mov
out
mov
mov
adc
mov
sbb
adc
bound
les
pop
and
xchg
bound
popa
mov
push
push
(bad)
loope
pop
pop
imul
out
pop
popa
jne
mov
pop
popa
test
test
fcom
addr16
test
mov
push
test
dec
cmp
push
push
adc
popa
(bad)
imul
xlat
(bad)
xor
adc
mov
lock
jle
inc
add
xchg
test
loopne
imul
aaa
sbb
adc
sbb
pop
push
add
imul
enter
push
pop
fld
call
xchg
stos
push
seto
add
add
nop
leave
add
add
adc
add
or
adc
and
push
enter
xchg
dec
sub
or
out
pop
mov
push
and
add
pop
test
mov
mov
xor
mov
add
enter
stos
add
packuswb
ror
add
add
jg
adc
or
add
ficom
add
push
xchg
push
mov
add
stc
(bad)
out
not
add
adc
or
inc
xor
push
sub
mov
out
push
bound
and
(bad)
test
push
add
inc
and
mov
sub
xor
mov
ret
lsl
cmp
push
push
add
outs
js
pop
shl
aaa
(bad)
rcpps
dec
sub
mov
dec
jno
addr16
or
das
push
mov
add
or
lods
pusha
jo
push
inc
inc
sbb
inc
xor
call
and
sbb
call
sbb
add
add
pop
or
sbb
call
sub
mov
outs
jae
and
cmp
push
xor
add
jbe
and
pop
movs
aam
data16
in
outs
fwait
and
xor
ds
mov
or
retf
cs
fwait
xor
jae
fist
add
and
loope
aad
test
(bad)
fstp
cmp
stc
adc
jo
bound
or
cmp
add
dec
mov
je
mov
pop
fs
popaw
ins
in
cmp
pop
add
or
or
ins
sbb
fstp
sbb
js
lea
(bad)
loop
(bad)
(bad)
push
adc
push
sub
popa
adc
movs
push
or
fsubrp
lods
sar
or
mov
lods
stos
push
and
cmp
sub
jbe
enter
add
icebp
cmp
jns
jle
cmp
push
ins
imul
(bad)
(bad)
cmp
pop
es
xor
dec
aaa
js
fst
fisttp
sar
jnp
(bad)
(bad)
(bad)
(bad)
fild
cmp
or
sbb
inc
xor
scas
sub
push
cld
ins
pop
dec
mov
mov
jmp
sbb
rcl
mov
jae
(bad)
(bad)
jmp
and
jno
jne
sub
jmp
lock
imul
push
inc
(bad)
(bad)
call
adc
or
add
bound
push
cli
(bad)
push
pop
push
cld
xchg
mov
add
(bad)
(bad)
(bad)
cld
ja
icebp
es
movd
gs
ret
adc
sbb
in
xchg
cs
sti
(bad)
(bad)
(bad)
(bad)
call
shl
mov
mov
std
cs
add
xor
ins
lea
(bad)
(bad)
(bad)
dec
mov
jnp
jecxz
out
jnp
icebp
xchg
pop
push
and
mov
stos
or
jl
(bad)
(bad)
jmp
(bad)
push
sub
nop
cwde
fnstenv
lea
sub
xchg
push
outs
out
shr
(bad)
pushf
movs
ins
push
(bad)
(bad)
call
shr
mov
leave
movs
sti
mov
ret
xchg
inc
test
pop
or
sub
(bad)
(bad)
inc
dec
and
push
adc
sbb
jb
int3
xor
xchg
push
sbb
(bad)
(bad)
(bad)
dec
mov
shl
sub
xor
mov
sub
mov
sti
inc
not
inc
(bad)
(bad)
push
mov
mov
cmp
shl
push
or
call
jo
xlat
push
(bad)
inc
(bad)
jb
pop
push
dec
mov
push
and
(bad)
(bad)
(bad)
dec
xor
inc
xor
sub
mov
pop
cmps
xchg
gs
xor
es
jmp
hlt
imul
push
(bad)
(bad)
(bad)
push
mov
sbb
push
fisttp
xor
test
inc
(bad)
(bad)
(bad)
dec
ja
test
dec
mov
retf
dec
lock
cwde
ins
cmps
mov
leave
data16
out
xor
(bad)
inc
shr
adc
mov
retf
push
pop
scas
inc
ror
es
jo
rcl
xchg
(bad)
call
in
dec
es
mov
ss
mov
jp
lods
inc
dec
mov
(bad)
nop
sub
sub
or
mov
out
pop
jne
pop
(bad)
(bad)
jg
cdq
push
push
mov
mov
sub
sbb
stc
mov
repz
(bad)
(bad)
(bad)
push
fucom
mov
inc
(bad)
div
sar
ror
add
mov
xchg
sub
(bad)
(bad)
dec
in
addr16
idiv
jno
addr16
dec
adc
jns
out
add
in
push
cmp
(bad)
call
xchg
xor
xor
jns
aam
fmul
aad
in
pop
loope
(bad)
fbld
int3
add
loop
out
in
inc
and
inc
jp
(bad)
(bad)
jmp
fmul
mov
add
jmp
(bad)
adc
push
pop
(bad)
(bad)
(bad)
jmp
into
xor
mul
cmps
sub
pushf
jmp
test
(bad)
(bad)
(bad)
jmp
pusha
mov
aam
push
xor
arpl
sub
push
fsubr
(bad)
in
(bad)
call
mov
push
push
pop
imul
pop
ret
pop
mov
fisub
jo
jb
imul
std
push
dec
adc
or
and
lock
push
hlt
cmc
aas
mov
cdq
sbb
add
fs
pop
adc
push
test
pop
adc
dec
fwait
push
add
xor
cmp
aas
xor
data16
je
jp
test
mov
outs
(bad)
push
xchg
xor
xor
xor
xor
xor
dec
xor
xor
push
xor
pop
xor
or
xor
ja
jl
xor
xor
mov
lds
iret
xor
(bad)
(bad)
(bad)
fistp
xor
xor
xor
xor
xor
xor
xor
repz
add
adc
sar
add
(bad)
jmp
cmp
cmp
cmp
test
ret
cmp
cmp
cmp
cmp
cmp
cmp
inc
popa
sub
out
pop
out
or
gs
xor
(bad)
jmp
repnz
xor
fdiv
xor
add
sub
(bad)
fstp
call
cmp
cmp
cmp
cmp
cmp
lock
fisttp
cmp
cmp
cmp
cmp
push
cmp
cmp
outs
cmp
(bad)
(bad)
push
xchg
cmp
cmp
cmp
cmp
xchg
cmp
sbb
sub
ja
scas
ds
or
dec
pop
aas
outs
aas
je
jnp
ret
aas
loop
test
jmp
add
inc
xor
xor
jge
mov
xchg
xor
xor
xor
xor
xor
add
add
jb
and
xor
xor
xor
(bad)
(bad)
fist
xor
aad
inc
xor
push
mov
xchg
aaa
movs
aaa
mov
ins
cmp
push
cmp
(bad)
(bad)
(bad)
jmp
cmp
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmp
sar
sbb
ds
ds
aas
push
aas
outs
push
jns
cmp
and
xor
(bad)
jg
sbb
jb
mov
xchg
xor
xor
xor
xor
sar
idiv
xor
xor
xor
xor
xor
xor
dec
xor
xor
(bad)
jg
xor
imul
ss
fbstp
in
ss
sub
loopne
loopne
mov
cdq
aaa
sahf
aaa
mov
inc
mov
aaa
cmp
inc
aaa
int
shl
xlat
aaa
jecxz
icebp
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
push
cmp
ins
cmp
jl
test
xchg
cmp
cmp
cmp
and
cmp
cmp
inc
cmp
aas
clc
dec
cmp
jnp
xchg
cmp
mov
cmp
cmp
icebp
add
dec
cmp
cmps
cmp
cmp
cmp
sbb
(bad)
(bad)
(bad)
jg
popa
cmp
outs
cmp
js
test
mov
cwde
cmp
cmp
cmp
mov
lds
int3
cmp
cmp
in
in
cmp
(bad)
(bad)
(bad)
(bad)
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
(bad)
cmp
pop
cmp
out
lock
mov
xor
(bad)
int3
aas
rcl
clc
(bad)
(bad)
call
popf
xor
push
xor
cmps
xor
xor
das
cli
inc
leave
xor
xor
ss
ss
jp
adc
sbb
(bad)
aas
cld
aaa
inc
aaa
push
aaa
addr16
aaa
pop
cmp
cmp
cwde
cmp
cmp
cmp
cmp
cmp
into
mov
add
pop
cmp
cmp
cmp
pop
and
fistp
fidivr
(bad)
cmp
ret
cmp
and
pusha
cld
ror
xchg
push
cli
xor
xchg
add
push
mov
mov
xor
mov
xor
xor
pop
xor
xor
(bad)
fcomip
push
inc
xor
xor
xor
xor
xor
scas
xor
ins
ss
ja
xor
loop
inc
ss
mov
mov
shl
aad
or
jmp
dec
aaa
and
sub
aaa
cmp
aaa
pop
aaa
sbb
jae
mov
das
(bad)
js
jge
call
aaa
out
in
ficomp
pop
pop
cmps
sbb
dec
mov
icebp
cmp
(bad)
call
std
cmp
cmp
inc
push
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jmp
pop
cmp
je
cmp
push
movs
jmp
pop
adc
mov
cmp
cmp
cmp
cmp
loopne
jmp
mov
cmp
test
mov
adc
adc
mov
mov
push
jo
clc
cli
jg
in
stos
xor
xor
xor
xor
aaa
jl
inc
icebp
div
mov
xor
push
mov
imul
mov
xor
xor
xor
fdiv
loopne
in
call
mov
ss
ss
ss
add
add
or
or
adc
data16
jg
call
or
jmp
inc
aaa
das
mov
dec
aaa
push
aaa
push
call
ds
loopne
cmp
call
ss
ss
out
add
jmp
cmp
inc
mov
ds
mov
ficomp
cmp
sar
retf
xor
jl
test
xchg
xor
mov
inc
cmp
xor
xor
xor
xor
(bad)
cld
xor
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
cmp
jb
pop
and
mov
jmp
out
push
cmp
repnz
cmp
dec
xchg
cmp
ds
js
test
cdq
ds
(bad)
ds
aas
ss
mov
lahf
(bad)
lock
mov
outs
dec
or
adc
jecxz
or
xor
xor
xor
xor
xor
xor
(bad)
push
arpl
jnp
aam
fdiv
icebp
xor
xor
xor
push
ss
ss
inc
cmp
repnz
cmp
cmp
idiv
(bad)
mov
xor
xor
jne
xchg
jmp
lock
(bad)
fcomip
xor
aaa
lahf
aaa
div
mov
enter
cmp
jg
cli
push
add
cmp
cmp
sbb
cs
cmp
(bad)
jmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
jbe
cmp
or
mov
cmp
cmp
xchg
push
cmp
cmp
cmp
cmp
ds
add
inc
(bad)
into
outs
mov
(bad)
ds
ds
mov
(bad)
mov
adc
sbb
sbb
and
data16
sub
xor
xor
jle
test
mov
aaa
push
sub
mov
nop
aas
imul
push
push
add
and
bound
jnp
lods
xor
(bad)
jmp
shl
xor
xor
xor
xor
xor
xor
sub
sub
cmp
jg
mov
xor
xor
xor
xor
xor
xor
mov
pop
pop
jle
xor
mov
loopne
aas
icebp
ja
fist
dec
xor
jge
shl
sbb
pop
shl
fdiv
cs
add
ss
cmps
test
rcl
add
sub
pop
std
aas
(bad)
into
push
je
jl
xor
aaa
shl
aam
dec
(bad)
aas
fcmovu
aaa
sub
xor
xchg
cmp
cmp
mov
xlat
mov
push
lock
mov
dec
scas
and
add
xor
adc
cmp
jmp
xor
inc
xor
jbe
movs
xor
add
xor
clc
xor
and
es
inc
call
std
ss
ss
data16
jle
xchg
ss
ss
ret
ss
inc
push
xlat
ss
ss
xor
aaa
stos
fcmovu
aaa
(bad)
mov
jg
mov
cmp
cwde
cmp
cmp
imul
cmp
adc
inc
lea
stos
cmp
mov
retf
pop
loope
cmps
mul
add
cmp
cmp
cmp
sar
cmp
arpl
cmp
cmp
cmp
cmp
cmp
jb
pop
adc
xchg
mov
sub
lahf
es
cmp
cmp
test
pop
cmp
xlat
cmp
lea
mov
sar
cmc
cmp
push
hlt
es
(bad)
cmp
xchg
ds
gs
jb
xchg
aas
repnz
or
or
inc
in
cmc
das
jp
and
outs
add
cli
xor
xor
std
aad
and
or
xor
xor
inc
pop
adc
(bad)
mov
iret
xor
mov
ss
aaa
and
sub
imul
pop
popa
ret
mov
push
(bad)
jmp
adc
inc
in
dec
cmp
xor
pop
cmp
cmp
jb
add
cmp
pop
mov
add
or
fild
jmp
aas
daa
aas
iret
aas
xlat
aas
icebp
aas
adc
lods
add
or
xor
xor
cmp
xor
hlt
push
fidivr
xor
sub
jg
mov
pushf
xor
pop
(bad)
(bad)
push
dec
xor
xor
xor
xor
bound
mov
mov
out
clc
loop
or
sub
mov
stc
ss
aaa
dec
aaa
ja
jmp
scas
aaa
shl
aaa
and
sub
cmp
retf
fwait
dec
mov
cmp
xchg
sbb
mov
cmps
(bad)
jg
push
adc
dec
xor
xor
(bad)
scas
outs
loop
xor
jo
sahf
xor
xor
(bad)
out
sar
xor
xor
out
shl
shl
cmc
das
cmp
div
inc
cmps
xor
aaa
cs
dec
aaa
shl
stc
aaa
push
cmp
outs
cmp
dec
cmp
cmp
cli
cmp
cmp
cmp
sbb
hlt
ds
add
dec
add
pop
xor
xor
inc
fwait
cmps
xor
sub
pop
push
mov
adc
fiadd
push
cmp
pusha
ds
inc
test
loope
movs
or
cmp
jg
cld
dec
sub
jnp
mov
call
xor
mov
xor
(bad)
xor
sbb
cmp
adc
cmp
cmp
sahf
push
lock
and
iret
cmp
mov
cmp
cmp
add
aas
cmp
cmp
dec
lods
retf
mov
pop
cmp
(bad)
enterw
fisttp
lock
(bad)
cmp
sbb
es
ds
mov
ds
cmp
jb
push
add
cwde
xor
jno
ja
fidiv
aas
cmp
jg
mov
cld
out
or
cmp
cmp
into
pop
cmp
cmp
cmp
push
(bad)
(bad)
std
inc
out
cmp
cmp
cmp
fisub
xlat
cmp
rol
loopne
stc
dec
xor
pop
jb
xor
(bad)
(bad)
(bad)
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
stos
icebp
xor
push
mov
fwait
xor
ds
lock
xchg
ss
jne
jge
cmps
sub
mov
bound
test
jecxz
cmp
push
pushf
cmp
(bad)
std
xor
add
push
xor
xor
xor
sbb
xchg
xor
xor
jmp
xchg
lds
sbb
xor
(bad)
dec
jne
jl
lock
xor
xor
xor
mov
out
(bad)
mov
inc
sub
das
les
inc
ss
ss
test
push
scas
jo
sbb
mov
clc
cmp
(bad)
(bad)
dec
cmp
cmp
push
cmp
cmp
cmp
inc
cmp
lea
push
retf
sbb
stos
icebp
shl
cmp
popa
xor
xor
xor
cmp
adc
gs
xor
xor
xor
sar
dec
loop
dec
jl
ins
cmp
cmp
cmp
cmp
push
cld
test
push
sar
or
cmp
mov
clc
mov
cmp
out
cmp
ins
ret
rcl
ds
mov
into
lea
movs
aas
push
mov
aas
shl
pop
nop
stos
jno
movs
scas
mov
jne
shl
cmp
mov
xor
sub
xor
xor
sub
mov
shl
xor
jge
mov
pop
cmp
cmp
aaa
jns
dec
cmp
dec
mov
jns
xchg
cmp
cmp
clc
outs
jb
adc
dec
cmp
stos
cmp
loopne
popf
cmp
stos
addr16
lea
mov
cmp
es
ins
daa
adc
loopne
add
xor
xor
xor
xor
pop
pop
xor
xor
xor
jmp
xor
xor
xor
xor
xor
mov
cmp
cmp
cmp
mov
outs
push
cmp
cmp
cmp
aaa
(bad)
cmp
aaa
in
call
cmp
inc
dec
cmp
call
xor
(bad)
mov
lods
ss
fadd
les
enter
es
push
xchg
xchg
pop
aaa
pop
aaa
pusha
repz
jg
xchg
xchg
aaa
cwde
aaa
pushf
loop
rcr
and
aaa
mov
mov
data16
into
int3
cmp
fisttp
hlt
aaa
clc
aaa
cld
mov
or
ss
cld
aaa
test
cli
push
cmps
pop
ss
ss
ss
shl
je
jl
call
push
aam
or
call
and
cmp
pop
call
or
jmp
xchg
mov
xchg
mov
cld
cmp
sbb
(bad)
and
cli
push
mov
repnz
cli
mov
cmp
cmp
data16
int
sbb
and
cmp
push
mov
js
loopne
(bad)
(bad)
jl
cmp
cli
lods
(bad)
mov
loopne
in
cld
cmp
adc
sbb
loop
ds
ds
ds
ds
test
xchg
ds
mov
test
aas
mov
cwde
aas
mov
inc
fwait
(bad)
fdiv
add
jmp
ins
and
pop
loopne
outs
mov
xor
push
xor
xor
xor
xor
xor
xor
xor
pop
xlat
jl
xor
pop
or
sar
mov
xor
inc
xor
pop
push
xor
dec
cwde
(bad)
mov
xor
xor
xor
xor
dec
cld
ja
xchg
xor
xor
xor
xor
(bad)
and
inc
xor
inc
mov
jmp
xor
mov
mov
mov
pop
aas
in
in
xor
adc
sbb
adc
push
inc
pop
je
jecxz
sub
pop
add
pop
dec
push
data16
cwde
cmp
push
in
adc
sbb
cmp
dec
scas
push
cmp
pop
cmp
fisub
test
sar
lock
xchg
sub
cmp
cmp
and
test
nop
cmp
jb
frstor
and
dec
cmp
mov
add
cmp
add
out
adc
push
add
mov
cmp
and
push
cmp
pusha
push
mov
pop
icebp
pushf
cmp
adc
push
push
or
add
aam
cmps
mov
ins
cli
jl
nop
fild
(bad)
xor
iret
push
add
cmps
push
call
xchg
int3
icebp
pop
test
out
aam
fdiv
fmul
xor
xor
xor
xor
test
jg
add
pop
or
or
adc
adc
sbb
adc
and
sub
sub
dec
cmp
ss
cmp
rcr
inc
push
xor
dec
hlt
adc
rsm
sar
cmp
cmp
cmp
xchg
inc
xor
stos
sbb
add
outs
sub
cs
aas
dec
aas
push
xor
fs
ins
push
jl
or
mov
xchg
aas
pushf
aas
movs
aas
lods
aas
mov
mov
mov
fcomp
hlt
shl
pop
mov
aas
dec
test
mov
or
mov
xchg
mov
sahf
je
jl
xor
(bad)
push
mov
mov
xor
aas
sar
ret
mov
out
fdiv
call
jbe
xor
pop
cld
dec
in
clc
pop
fidiv
xor
xor
xor
xor
(bad)
xor
call
sub
xor
xor
xor
xor
xor
xor
xor
adc
add
(bad)
(bad)
aas
inc
sbb
xor
sbb
cdq
(bad)
mov
movs
iret
std
push
ror
dec
(bad)
(bad)
(bad)
jmp
jmp
xchg
xchg
push
lock
loop
add
enter
add
and
add
(bad)
(bad)
call
push
hlt
loopne
imul
das
mov
xchg
loopne
dec
and
inc
mov
mov
xchg
mov
aaa
mov
das
lods
pop
jb
add
les
call
dec
dec
test
repnz
(bad)
(bad)
(bad)
push
mov
and
shr
jns
cld
adc
arpl
int3
stc
(bad)
(bad)
(bad)
dec
ins
mul
mov
push
pop
ficom
popf
push
loopne
rol
or
adc
mov
jmp
push
and
pop
mov
out
mov
neg
or
add
pusha
xchg
(bad)
(bad)
(bad)
jmp
pushf
dec
cmp
xchg
shr
sbb
and
fisub
leave
test
movs
pusha
je
addr16
(bad)
(bad)
(bad)
jmp
sub
inc
lods
jne
jle
mov
daa
cmp
mov
inc
call
pop
(bad)
(bad)
(bad)
dec
xor
int3
add
xor
das
jp
push
push
nop
sbb
ret
call
mov
(bad)
(bad)
inc
mov
adc
sti
or
imul
iret
aam
sar
push
outs
(bad)
(bad)
(bad)
jmp
les
mov
ret
xchg
dec
jg
fwait
sub
scas
sar
mov
push
mov
(bad)
(bad)
(bad)
call
scas
data16
xchg
mov
adc
dec
adc
add
jb
xchg
movs
ret
(bad)
(bad)
call
test
int
inc
xchg
adc
push
jo
fwait
adc
idiv
(bad)
(bad)
inc
xor
loopne
inc
xchg
ret
mov
mov
or
out
and
(bad)
stc
sbb
xor
movs
pop
movs
inc
push
in
lods
sti
ins
jl
or
jbe
xor
push
(bad)
(bad)
(bad)
push
gs
dec
(bad)
jecxz
pop
dec
call
sub
dec
jcxz
nop
out
adc
xchg
sub
(bad)
(bad)
call
cmps
js
pushf
ds
cmp
mov
ret
jecxz
addr16
pop
push
(bad)
pushf
daa
cmp
dec
cli
adc
out
out
ret
fld
dec
lods
push
outs
pop
push
test
iret
out
test
ins
or
(bad)
(bad)
(bad)
(bad)
jle
or
push
add
movs
hlt
and
xor
adc
es
ret
mov
jbe
mov
leave
jb
icebp
icebp
mov
adc
xchg
xor
mov
in
lock
(bad)
(bad)
inc
hlt
push
or
(bad)
and
mov
mov
pop
mov
inc
(bad)
(bad)
(bad)
(bad)
mov
ds
pop
push
cmc
jmp
sub
jne
cmps
ds
xor
(bad)
(bad)
(bad)
jmp
aaa
scas
add
loopne
push
mov
into
pop
jbe
jbe
jle
loopne
enter
mov
push
inc
popw
call
mov
jns
adc
pop
pushf
jmp
(bad)
(bad)
dec
movs
lods
jae
movs
mov
cdq
pop
xor
fsubrp
hlt
mov
inc
or
ret
mov
xor
loopne
dec
clc
ret
outs
aad
fisubr
(bad)
(bad)
inc
les
xlat
mov
cmps
or
sub
sbb
cmp
sbb
pop
add
cdq
jmp
lods
ret
cmps
inc
adc
dec
add
and
mov
int
jb
pop
sub
into
cmp
js
retf
jbe
popf
cmp
pop
lods
(bad)
fcomip
dec
(bad)
call
jns
out
cli
inc
inc
xchg
pop
addr16
dec
jo
adc
add
(bad)
(bad)
call
imul
cmps
or
and
adc
or
rol
(bad)
push
xrstors
fldenv
mov
ret
cli
scas
cmp
(bad)
(bad)
call
xor
xchg
daa
mov
dec
mov
pop
out
(bad)
xchg
out
out
(bad)
(bad)
(bad)
jmp
pop
ja
dec
aam
je
inc
pop
(bad)
sbb
repz
jnp
fldenv
(bad)
xchg
or
(bad)
jmp
sti
jbe
jl
data16
rcl
dec
ss
xor
mov
mov
frstor
jbe
add
arpl
cdq
imul
cs
jmp
jl
shr
(bad)
push
jmp
cwde
rcl
xchg
add
mov
(bad)
(bad)
(bad)
jmp
monitor
mov
add
cmps
mov
mov
push
push
or
sbb
inc
xor
xchg
(bad)
repnz
jmp
ret
(bad)
(bad)
(bad)
inc
jmp
imul
dec
xlat
mov
adc
and
(bad)
(bad)
cmp
aaa
mov
ja
dec
push
and
gs
shr
jp
mov
pop
(bad)
(bad)
cmp
mov
sti
push
adc
std
and
(bad)
pop
scas
inc
pop
retf
cwde
(bad)
jno
(bad)
(bad)
(bad)
call
in
adc
enterw
aaa
xchg
jae
call
inc
pushf
dec
cmps
dec
xor
or
icebp
xor
loop
pop
jg
(bad)
mov
cmp
repz
sub
mov
int
adc
or
(bad)
(bad)
jmp
mov
ja
sar
or
(bad)
and
inc
cdq
lods
lock
iret
push
je
or
(bad)
jnp
mov
std
add
int3
jl
test
push
cli
jecxz
(bad)
call
sub
mov
inc
test
mov
aad
add
sub
(bad)
(bad)
mov
xchg
popa
lock
push
cld
sbb
jae
cmp
add
mov
es
sub
xchg
jl
mov
fiadd
fld
xor
dec
(bad)
dec
leave
fisub
cmpxchg
not
sub
(bad)
(bad)
call
movs
pop
call
mov
ins
ret
ss
pop
jae
mov
(bad)
jo
cmp
popf
(bad)
(bad)
jmp
xchg
loopne
mov
popf
fist
ds
mov
jo
psllw
cmc
(bad)
jl
push
fsub
aas
pop
pop
daa
bound
and
retf
into
jmp
inc
pop
fmul
(bad)
jmp
mov
scas
add
add
or
into
mov
cmp
(bad)
jmp
pop
xchg
fidivr
mov
pop
sar
and
adc
adc
bound
pop
(bad)
(bad)
(bad)
dec
sub
les
cmp
lods
das
or
push
pop
xor
xchg
cs
jle
lods
inc
add
lods
scas
ja
push
mov
mov
(bad)
push
in
mov
fidivr
ds
movs
mov
les
jmp
sub
pop
cmp
fwait
dec
sbb
int3
pop
fcmove
inc
fs
fs
(bad)
(bad)
dec
push
inc
jns
inc
fs
push
imul
movs
les
(bad)
das
dec
test
mov
and
xchg
clc
call
loopne
sub
(bad)
ins
cmp
mov
(bad)
push
jne
repz
sahf
fild
(bad)
das
lahf
iret
(bad)
popa
data16
xlat
jmp
pop
mov
xor
(bad)
(bad)
jmp
arpl
dec
jg
popa
out
ret
pop
xchg
ret
loop
xchg
sahf
call
(bad)
fdiv
or
jecxz
mov
retf
pop
inc
mov
mov
sbb
jmp
inc
and
jg
cs
jg
jae
dec
adc
(bad)
(bad)
call
outs
fnstenv
out
lock
xchg
adc
and
(bad)
cmp
sbb
(bad)
fist
les
dec
jno
aad
lods
mov
loop
rcr
inc
outs
outs
jmp
outs
test
jbe
fmul
sbb
xchg
mov
mov
jmp
mov
push
dec
outs
std
inc
fsubp
call
jge
cmp
and
shl
jne
mov
inc
mov
scas
inc
sub
pop
fs
xor
mov
(bad)
jmp
sub
rsm
mov
and
push
hlt
js
sbb
mov
out
mov
test
mov
out
daa
sbb
les
jb
dec
mov
dec
enter
pop
xor
push
adc
(bad)
jnp
pop
stc
mov
adc
aas
(bad)
call
mov
(bad)
(bad)
dec
nop
fsincos
jge
into
out
movs
sti
out
daa
les
sbb
rcr
outs
in
sbb
push
push
xor
into
sbb
rol
(bad)
(bad)
dec
dec
dec
push
out
js
mov
stos
sar
jg
in
cmp
outs
outs
aas
pusha
ficom
jo
das
mov
icebp
and
mov
in
scas
fiadd
push
in
bnd
mov
dec
(bad)
(bad)
(bad)
(bad)
jmp
shl
ins
in
jmp
inc
test
lea
lods
fsub
(bad)
sti
xchg
mov
and
fist
fs
mov
cdq
cwde
sbb
scas
adc
sti
bound
(bad)
inc
aad
aam
into
ret
and
outs
out
mov
test
or
jecxz
(bad)
in
call
mov
aaa
call
xor
jbe
aam
bswap
ins
push
cmp
and
adc
idiv
(bad)
(bad)
push
sbb
shr
or
push
stos
dec
push
cwde
ins
sub
or
movs
lock
(bad)
shl
sbb
stos
dec
loopne
pop
ret
mov
fsub
test
(bad)
(bad)
jmp
jl
enter
sbb
ror
popf
jmp
daa
ins
jmp
dec
shl
mov
movs
dec
cdq
(bad)
and
jp
aaa
(bad)
(bad)
call
push
lods
xor
push
test
bound
add
push
adc
mov
(bad)
(bad)
(bad)
inc
cmp
mov
inc
jbe
(bad)
stos
movs
inc
mov
es
iret
test
shr
cwde
clc
jmp
jp
(bad)
fiadd
xchg
sbb
inc
mov
or
clc
pop
inc
jae
xor
int3
jmp
pop
(bad)
push
cld
cmp
aad
fidivr
es
or
adc
xchg
push
push
fs
int
fist
(bad)
(bad)
stc
dec
(bad)
mov
mov
inc
xor
or
cdq
cld
ins
loop
mov
adc
sbb
push
adc
jmp
xor
mov
int
cmps
sub
xlat
add
mov
sub
jmp
jmp
push
xchg
cmc
leave
mov
mov
mov
inc
call
add
mov
push
fild
aaa
cmps
adc
cmp
mov
(bad)
dec
retf
std
push
inc
sahf
repnz
mov
jne
xchg
rcl
pop
(bad)
(bad)
(bad)
jmp
test
icebp
fwait
cmp
mov
xchg
cmps
sub
pusha
repnz
and
push
cmps
mov
inc
adc
in
sub
lds
retf
xchg
dec
xchg
dec
sbb
or
icebp
add
sub
lods
int3
(bad)
repnz
clc
dec
jmp
cld
pop
rcl
mov
jge
sbb
xchg
(bad)
movs
mov
(bad)
(bad)
(bad)
inc
inc
adc
into
xchg
call
xor
in
sub
pop
loopne
mov
sub
shl
(bad)
cmp
(bad)
jg
dec
jmp
adc
cli
mov
mov
cmps
cdq
jmp
clc
push
sar
(bad)
jmp
pop
aaa
dec
pop
out
inc
repz
xchg
mov
jae
vrsqrtps
(bad)
(bad)
call
or
enter
in
dec
pop
add
mov
sub
mov
lods
mov
(bad)
jmp
imul
mov
dec
enter
jne
sub
mov
(bad)
(bad)
jmp
jns
add
(bad)
cs
movs
mov
push
(bad)
mov
xor
cs
(bad)
(bad)
inc
callw
out
and
push
cli
or
adc
adc
loopne
rol
push
rol
xchg
push
(bad)
dec
in
mov
mov
or
push
sbb
sar
(bad)
jmp
push
pop
repnz
adc
aam
mov
xchg
es
lods
mov
jg
repz
push
xchg
inc
jge
lock
push
xor
cli
inc
movs
jge
or
movs
add
mov
movs
jno
test
popa
push
cmp
(bad)
dec
xchg
lahf
sahf
jno
inc
cmp
test
push
adc
sbb
cmps
cmp
xor
(bad)
jmp
imul
mov
jbe
(bad)
nop
mov
cli
jo
mov
cmp
push
xor
sbb
pop
adc
jp
mov
out
or
(bad)
(bad)
(bad)
js
cmc
test
imul
es
hlt
shl
cvtps2pi
stos
push
or
inc
arpl
dec
lahf
fdiv
rcr
or
push
sub
or
pop
xchg
add
int3
sar
rol
call
imul
(bad)
push
push
sbb
je
mov
jb
mov
hlt
inc
sub
mov
call
ja
mov
movs
cmp
or
cdq
sub
dec
push
call
scas
loopne
addr16
popf
pop
fistp
and
mov
(bad)
(bad)
mov
xchg
and
mov
loop
push
fnstenv
daa
fimul
pop
jnp
xchg
(bad)
mov
sbb
xchg
in
inc
addr16
adc
daa
dec
dec
sbb
ins
imul
(bad)
jmp
popa
retf
int3
ins
xchg
stos
jne
leave
jbe
ins
retf
aad
pop
xor
sar
call
fcom
cmp
push
mov
sub
jmp
cmp
fadd
cmp
xor
(bad)
(bad)
(bad)
jns
sti
jnp
ret
dec
inc
jnp
jbe
jecxz
pop
fistp
rol
adc
(bad)
es
(bad)
pop
push
mov
mov
dec
or
jno
fsub
dec
arpl
cmp
(bad)
cmp
mov
bound
js
(bad)
cmp
(bad)
call
cmp
imul
mov
jo
add
lock
(bad)
mov
outs
ds
jl
iret
test
inc
adc
pop
jecxz
scas
neg
cwde
(bad)
(bad)
call
(bad)
rol
dec
xor
das
pop
into
and
data16
inc
(bad)
call
inc
or
mov
(bad)
dec
in
push
ds
out
movs
inc
jp
mov
call
fldenv
stos
pop
and
cmp
repz
xchg
cmp
sahf
and
cdq
add
cmc
test
(bad)
pop
(bad)
(bad)
(bad)
jmp
jecxz
xor
cli
iret
cli
mov
sbb
mov
cmp
inc
or
mov
cmps
es
(bad)
(bad)
dec
mov
cmp
and
fistp
add
aaa
mov
fcomip
pop
sbb
mov
dec
add
shl
jae
ja
jne
pushf
addr16
jl
(bad)
(bad)
dec
jns
shr
cmp
int
fisttp
sbb
dec
jmp
(bad)
dec
test
nop
ins
jnp
fadd
xor
sbb
div
pusha
cwde
aaa
inc
jg
dec
les
push
sub
jo
mov
test
test
or
(bad)
(bad)
call
mov
dec
mov
inc
pop
pop
fadd
push
jb
arpl
repz
adc
jo
xchg
lock
and
(bad)
(bad)
in
test
popf
movs
xlat
arpl
inc
(bad)
jl
stc
fs
bound
dec
or
int3
jns
adc
test
sbb
inc
xchg
in
xchg
pop
push
ins
cmp
int
sub
push
shr
mov
(bad)
in
jg
inc
rol
or
and
push
outs
in
stc
fwait
adc
repnz
js
xchg
xchg
popa
ds
ror
(bad)
(bad)
mov
call
inc
mov
test
mov
stos
fistp
and
in
mov
(bad)
(bad)
(bad)
jmp
xlat
shl
adc
call
repnz
mov
and
fidivr
adc
(bad)
fcomip
call
outs
sub
xor
arpl
push
into
popa
aad
iret
mov
cmp
push
xor
xlat
add
stos
lock
dec
stc
adc
ss
sti
clc
sar
mov
sbb
mov
(bad)
jb
ss
pop
mov
fild
mov
mov
mov
shr
cmp
popf
int3
xor
lds
pop
jmp
movs
sbb
sbb
cwde
out
(bad)
(bad)
push
sub
pop
and
loop
rep
inc
sahf
inc
cmc
sub
mov
and
sub
(bad)
(bad)
(bad)
jmp
xchg
stc
into
in
pop
data16
pop
ret
sub
pop
and
lahf
lahf
and
dec
pop
jl
(bad)
(bad)
dec
lods
dec
xchg
xchg
loopne
and
xchg
xor
daa
xchg
cs
inc
mov
mov
sti
(bad)
call
inc
fsub
jl
int3
dec
pop
mov
ins
push
mov
leave
in
mov
xlat
sub
cmp
out
mov
sbb
repnz
adc
mov
(bad)
(bad)
(bad)
dec
pop
push
dec
test
sbb
mov
div
sbb
inc
push
maxps
add
mov
(bad)
(bad)
push
push
xchg
mov
xchg
lods
jl
call
(bad)
imul
xchg
mov
adc
test
dec
pushf
and
jp
ds
mov
out
push
ins
es
repnz
mov
xchg
mov
adc
mov
js
and
aad
xor
add
pushf
les
add
or
sahf
(bad)
(bad)
mov
mul
std
sub
dec
inc
imul
or
test
aaa
das
cli
das
shr
xchg
fs
xlat
inc
pop
push
rcl
call
adc
add
push
popf
call
fs
mov
xchg
adc
cmc
mov
add
or
add
xchg
(bad)
(bad)
(bad)
jmp
in
jp
retf
pop
adc
mov
mov
inc
sub
daa
mov
(bad)
(bad)
(bad)
push
rol
movs
inc
push
sbb
push
dec
cmp
xor
cmp
sub
arpl
sub
add
rcl
xchg
inc
mov
imul
loopne
popf
dec
mov
dec
call
cmps
jbe
popa
scas
clc
xchg
adc
or
dec
push
push
add
and
sbb
(bad)
(bad)
(bad)
call
je
xchg
mov
loope
xor
clc
jmp
mov
mov
xor
push
mov
call
mov
fbld
dec
nop
sbb
(bad)
jno
or
inc
or
clc
push
out
push
jmp
(bad)
jp
and
retf
fs
(bad)
(bad)
jmp
ror
lds
sbb
lea
jno
mov
pop
sub
outs
mov
icebp
dec
(bad)
(bad)
(bad)
(bad)
mov
sub
rcl
or
xchg
pop
adc
jnp
mov
cmp
pop
xchg
(bad)
(bad)
(bad)
call
push
out
cmp
mov
jp
xor
mov
and
mov
sbb
(bad)
call
in
aad
jns
lds
push
shl
cdq
cmps
(bad)
(bad)
call
fst
or
stos
xor
(bad)
sti
xchg
xchg
addr16
fsubr
jge
mov
xchg
push
mov
sub
idiv
(bad)
(bad)
inc
or
dec
inc
cwde
pop
jb
or
cmp
cmp
cmps
push
(bad)
(bad)
jmp
inc
fcomi
cmp
stos
and
rcl
repz
fst
sahf
jmp
fwait
sub
nop
stos
call
xchg
clc
pop
stos
(bad)
fs
(bad)
(bad)
inc
es
mov
sbb
setae
add
out
(bad)
mov
or
cmp
inc
cmp
xor
adc
call
pop
fsubrp
dec
fmul
fistp
mov
mov
add
pusha
adc
arpl
cmp
(bad)
(bad)
(bad)
call
cld
xchg
nop
mov
in
push
icebp
cmps
mov
das
xor
fs
repnz
jnp
push
mov
scas
or
mov
das
ret
or
mov
jns
fs
(bad)
(bad)
(bad)
cmp
jns
or
int3
or
mov
and
inc
aad
idiv
loop
mul
pop
cld
in
(bad)
call
mov
std
inc
(bad)
stos
ret
imul
push
and
repnz
jno
push
xor
(bad)
(bad)
call
(bad)
cwde
shl
das
push
hlt
jnp
dec
cwde
adc
jmp
test
scas
mov
add
test
inc
add
(bad)
(bad)
(bad)
call
test
(bad)
adc
sbb
dec
mov
(bad)
fiadd
jle
ds
(bad)
(bad)
call
push
sbb
sbb
movs
dec
push
xor
xor
jns
(bad)
xor
(bad)
(bad)
jmp
ins
jne
adc
sbb
imul
pop
mov
mov
and
int
(bad)
mov
mov
repnz
cs
or
pop
repnz
(bad)
(bad)
(bad)
inc
out
jo
and
jle
jb
pop
cld
add
lods
in
sub
mov
std
or
pop
out
adc
mov
shl
(bad)
(bad)
(bad)
cmp
dec
inc
pop
shl
mov
push
cs
mov
dec
mov
mov
popf
xchg
(bad)
(bad)
(bad)
jmp
dec
pop
mov
aas
push
pushf
mov
test
push
fbld
nop
xor
xchg
call
loop
cld
mov
push
scas
jle
lahf
fwait
iret
in
pop
idiv
mov
mov
or
xchg
out
pop
cmp
xchg
jg
in
push
push
(bad)
(bad)
(bad)
call
repnz
pop
in
idiv
sti
fisttp
pop
ret
jmp
stc
mov
adc
(bad)
(bad)
jns
xor
ins
scas
push
pushf
push
cmps
jns
test
sub
sub
mov
add
xor
test
in
inc
inc
pop
add
cli
add
pop
aam
(bad)
(bad)
(bad)
(bad)
fmul
pusha
xchg
cmp
enter
test
stos
rol
mov
(bad)
(bad)
(bad)
aas
dec
mov
inc
xchg
adc
push
in
stos
sub
test
add
xchg
ja
retf
(bad)
jmp
push
stc
addr16
or
dec
adc
or
mov
enter
or
sahf
cmps
dec
loope
sar
(bad)
call
cmp
out
mov
pop
xlat
mov
inc
in
repz
sar
(bad)
(bad)
(bad)
jmp
out
xor
push
sub
sahf
mov
cmp
out
jg
dec
jp
fld
cmp
les
jg
mov
popf
xchg
or
lock
jno
in
cmps
mov
mov
daa
add
(bad)
jmp
dec
leave
mov
sbb
(bad)
push
mov
xchg
(bad)
sar
mov
(bad)
jg
enter
xor
int3
xor
cmp
(bad)
lods
not
jmp
pop
push
(bad)
inc
call
repz
mov
div
and
(bad)
push
loopne
xor
sub
jns
xor
mov
mul
(bad)
jmp
inc
and
cld
enter
add
test
jge
call
add
nop
repz
mov
xor
(bad)
(bad)
(bad)
jmp
mov
ror
daa
xor
mov
jbe
or
cs
mov
loope
add
xor
push
cmp
out
jmp
or
push
cmp
clc
movs
xchg
in
frstor
mov
xchg
lea
dec
add
shl
and
pop
cs
cmp
(bad)
(bad)
call
sbb
loope
in
push
lods
es
push
das
mov
jle
adc
(bad)
(bad)
call
or
cdq
(bad)
push
gs
xlat
push
fcom
dec
adc
out
pop
arpl
outs
dec
loop
ins
or
rcl
(bad)
(bad)
(bad)
dec
push
rcr
inc
pop
push
jmp
and
sub
mov
inc
adc
pop
inc
mov
jp
inc
xchg
movs
data16
(bad)
inc
cmps
scas
mov
sar
dec
push
ins
add
ja
cld
movs
lock
out
mov
mov
xlat
mov
sahf
sbb
retf
mov
(bad)
jg
sub
sub
aas
popa
aam
push
hlt
xor
dec
stos
scas
jmp
sar
(bad)
(bad)
cmp
sbb
and
cmps
(bad)
test
loopne
xchg
and
mov
outs
mov
cmp
mov
gs
pop
cld
test
(bad)
mov
jg
icebp
das
xchg
nop
mov
pop
dec
jl
(bad)
pop
std
ss
mov
addr16
test
(bad)
(bad)
dec
jl
dec
enter
xor
xchg
cmp
sbb
jae
imul
xchg
fidivr
dec
(bad)
(bad)
(bad)
jmp
shr
es
jns
sub
pop
mov
std
enter
cdq
pop
adc
pop
jp
jge
push
(bad)
(bad)
(bad)
push
jne
or
fs
out
mov
shr
push
data16
dec
adc
cld
in
(bad)
inc
xor
pop
jle
aaa
imul
rcl
adc
inc
push
xchg
pop
add
fcomip
aaa
inc
nop
xchg
imul
inc
retf
movs
(bad)
ss
or
cmp
shl
outs
ja
adc
fucomi
jmp
inc
in
(bad)
(bad)
(bad)
jmp
mov
into
xor
fisubr
arpl
xchg
mov
pop
in
sbb
(bad)
(bad)
call
jmp
add
or
call
push
retf
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
push
mov
fisub
repz
into
daa
popf
out
push
mov
cmc
jmp
or
push
add
or
jg
call
mov
mov
rcl
scas
mov
jmp
ins
nop
push
pop
sub
xchg
shl
call
cmc
add
cwde
cmps
jmp
pushf
sbb
or
(bad)
inc
pop
mov
imul
out
lea
cmps
adc
ds
inc
adc
icebp
aaa
add
bnd
lea
call
xchg
lds
test
jl
repz
(bad)
(bad)
(bad)
jmp
fs
ret
push
je
and
xchg
mov
xchg
push
sub
fld
mov
sub
(bad)
in
add
sti
sbb
pusha
outs
push
adc
xchg
mul
xor
lods
adc
sub
jp
xchg
mov
sbb
popa
jnp
sti
xor
jmp
adc
lds
jle
xor
cld
(bad)
jb
pusha
jle
imul
(bad)
mov
jmp
cmp
in
pop
sbb
sub
xor
fwait
mov
jmp
(bad)
(bad)
(bad)
jmp
pop
lods
lods
jnp
cld
mov
cs
mov
iret
cli
lock
mov
inc
std
(bad)
(bad)
in
mov
mov
(bad)
int3
pop
sar
jg
in
xchg
repnz
mov
out
je
add
out
sub
arpl
pop
jb
fst
or
movs
push
inc
sub
test
dec
and
repz
sbb
(bad)
jmp
leave
inc
jae
adc
pop
pop
shl
lods
and
sahf
lock
(bad)
(bad)
out
jp
enter
jns
cmp
xor
(bad)
sbb
shl
(bad)
(bad)
(bad)
(bad)
cld
cmp
mov
mov
xor
(bad)
mov
adc
inc
mov
and
lods
adc
jns
rcl
(bad)
(bad)
(bad)
(bad)
dec
dec
cmp
iret
sar
loop
xchg
xchg
and
push
ficomp
add
stos
(bad)
(bad)
(bad)
push
loope
mov
add
movs
sub
bound
es
pusha
ret
sbb
jecxz
sub
xchg
sbb
add
daa
or
shl
mov
jl
mov
mov
cmp
pop
mov
mov
or
sbb
imul
es
(bad)
(bad)
xor
push
popa
jo
aad
cmc
fincstp
sbb
or
mov
psubsw
and
outs
cli
call
js
cmp
pop
call
fbstp
in
mov
xchg
jmp
or
pop
push
inc
mov
jae
xor
xlat
(bad)
(bad)
(bad)
dec
lds
mov
(bad)
loop
mul
(bad)
xor
std
scas
dec
in
imul
int
ror
(bad)
(bad)
jmp
mov
push
and
mul
pop
pop
int
and
inc
mov
push
cmc
pop
clc
inc
fimul
call
pop
mov
add
shr
mov
cmp
lods
mov
(bad)
(bad)
out
mov
(bad)
out
push
enter
(bad)
or
sbb
push
stos
xlat
(bad)
pushf
sbb
inc
pop
not
cmc
jnp
mov
(bad)
cmp
ret
mov
retf
scas
cmp
mov
movs
push
leave
pop
adc
gs
push
dec
ins
aaa
jnp
xor
mov
in
popa
and
cmp
repz
outs
loopne
bound
inc
jecxz
pop
fdivr
loopne
add
sbb
(bad)
(bad)
jmp
sub
jo
fnstsw
mov
xchg
(bad)
and
outs
mov
cmc
lea
push
sub
add
add
repz
(bad)
lahf
and
xchg
(bad)
(bad)
(bad)
call
das
(bad)
push
dec
or
xor
cmp
mov
xor
sub
bound
clc
dec
mov
xchg
xadd
add
popa
into
mov
or
das
sub
jmp
test
inc
das
test
js
pop
stos
fistp
push
out
test
adc
int3
cli
sbb
add
xor
or
or
test
(bad)
(bad)
(bad)
call
adc
(bad)
call
addr16
movs
mov
pushf
stc
dec
jb
adc
mov
mov
cmp
test
int
pop
adc
(bad)
sub
(bad)
(bad)
(bad)
fcomp
lock
dec
and
cmp
jns
or
jb
out
push
mov
(bad)
(bad)
mov
push
sar
mov
dec
aad
or
fstp
(bad)
jmp
mov
adc
shr
cmp
cli
jnp
jg
(bad)
inc
sbb
es
outs
pop
enter
jno
inc
int3
enter
popf
sbb
(bad)
lods
and
mov
xchg
repnz
inc
enter
xor
shl
popa
ss
cs
out
out
mov
sbb
jbe
rcr
(bad)
(bad)
jmp
and
xchg
repz
pusha
leave
cmp
xor
gs
dec
jns
movs
adc
std
lods
mov
call
(bad)
fsubr
aaa
js
jbe
pop
rep
xchg
movs
inc
xchg
(bad)
test
mov
sti
(bad)
dec
xchg
ins
hlt
imul
xchg
retf
mov
data16
and
scas
add
(bad)
(bad)
(bad)
jmp
jge
mov
adc
fidivr
repnz
psubd
mov
outs
int
call
push
lods
jmp
xchg
(bad)
cmp
aaa
mov
inc
cmc
aaa
mov
mov
adc
(bad)
(bad)
call
jle
add
cmp
lods
enter
cmc
cmp
pop
mov
das
jmp
or
(bad)
(bad)
(bad)
jle
arpl
daa
mov
leave
(bad)
pop
cmp
repnz
sbb
je
add
(bad)
(bad)
jg
shr
mov
dec
mov
xor
aaa
xor
and
jle
data16
(bad)
(bad)
(bad)
jmp
pop
adc
mov
jnp
icebp
push
push
add
inc
mov
and
sub
xchg
addr16
dec
fdiv
mov
(bad)
(bad)
push
xor
add
aad
mov
popa
pop
jno
xchg
add
and
enter
scas
cli
push
int
push
sub
dec
gs
cmps
mov
call
xchg
idiv
cmps
sub
retf
clc
jmp
(bad)
(bad)
sbb
cmps
popa
mov
jmp
inc
mov
js
cmp
adc
jp
lea
cwde
dec
imul
sbb
dec
jb
sbb
and
mov
pop
mov
test
fdivr
(bad)
call
dec
enter
push
push
rcr
pop
add
mov
sbb
in
push
sbb
xchg
leave
mov
or
lods
mov
outs
or
outs
mov
sbb
(bad)
(bad)
push
xchg
or
(bad)
sub
sti
mov
xchg
add
stos
inc
dec
or
call
(bad)
(bad)
js
dec
test
cdq
pop
sbb
push
out
inc
push
fisttp
div
in
in
ins
xchg
das
push
in
jge
mov
cmc
xchg
repz
inc
mov
fsub
cdq
inc
fild
push
sub
imul
aam
mov
jo
lock
push
xor
iret
mov
jp
(bad)
(bad)
(bad)
(bad)
cmp
ins
xlat
add
es
mov
mov
pop
sub
dec
loop
inc
sbb
pop
jmp
and
cs
pop
ss
push
cmc
push
call
enter
jg
mov
fwait
mov
cmp
loop
in
lods
ins
xor
fs
sub
(bad)
(bad)
(bad)
call
mov
push
sar
xchg
add
retf
jne
and
push
fisubr
mov
(bad)
(bad)
push
mov
int3
push
(bad)
nop
xor
pop
cmp
cmps
rcl
outs
xor
popf
pop
lods
test
mov
xor
(bad)
jmp
cdq
inc
inc
retf
leave
and
mov
inc
mov
int
(bad)
inc
sub
inc
xchg
add
test
aam
sub
inc
xor
lock
jmp
ins
repz
scas
imul
fcom
ror
(bad)
cmps
xchg
ss
hlt
ss
cmc
(bad)
push
push
xor
and
and
ja
sbb
retf
cmp
xor
push
cli
mov
mov
push
dec
or
jmp
mov
dec
out
mov
in
out
or
adc
(bad)
(bad)
(bad)
jmp
fadd
(bad)
ja
enter
stos
adc
dec
stos
mov
loopne
push
std
(bad)
dec
inc
inc
mov
jge
pop
jp
or
inc
inc
mov
sub
sar
(bad)
fdivr
jne
stos
lds
jns
(bad)
stc
mov
movs
cld
sbb
mov
inc
int3
inc
enter
mov
pop
pop
cmp
sub
arpl
jae
ins
dec
lods
movs
(bad)
(bad)
(bad)
dec
outs
pop
mov
pop
movs
outs
pop
lods
mov
jl
xor
adc
mov
hlt
mov
xor
or
shl
fmul
jmp
gs
mov
psubusb
sub
in
pop
(bad)
sbb
pop
xchg
push
fistp
jae
jge
ror
(bad)
inc
jge
push
ins
bound
pop
sbb
or
xchg
or
test
call
xchg
fldcw
pop
inc
xor
js
push
enter
pop
mov
aad
xchg
inc
mov
mov
fcomp
jmp
mov
dec
sti
adc
adc
mov
stos
pusha
xchg
(bad)
(bad)
(bad)
fild
rcl
loop
shl
(bad)
lods
mov
inc
ret
xchg
in
jbe
cmc
push
pusha
jnp
movs
sbb
(bad)
(bad)
call
add
out
retf
dec
and
mov
rcr
pop
dec
stos
xor
jle
or
mov
(bad)
jmp
scas
aad
cmp
xor
addr16
jae
(bad)
(bad)
out
or
inc
pop
call
in
repnz
xchg
(bad)
fidivr
push
popf
sbb
mov
(bad)
mov
jnp
jae
push
sti
pop
addr16
push
jg
icebp
cld
rcl
fstp
rcl
(bad)
(bad)
(bad)
dec
mov
ja
(bad)
popa
dec
xchg
aad
jmp
popa
cs
ror
ror
push
fistp
mov
outs
mov
aam
fcmovb
inc
stc
cdq
or
jg
inc
or
cmp
add
loopne
jmp
(bad)
(bad)
(bad)
cli
inc
(bad)
ss
das
int
jbe
sub
(bad)
ror
push
cmp
retf
pminub
sbb
call
repnz
in
lods
fist
shr
mov
pop
ins
lds
(bad)
mov
xor
jl
cdq
test
arpl
sti
arpl
dec
jmp
sub
into
(bad)
not
jae
(bad)
(bad)
dec
push
iret
test
into
mov
fdivp
dec
add
xchg
cdq
dec
adc
(bad)
jmp
jg
ja
out
lock
clc
fwait
dec
inc
nop
mov
aad
(bad)
jg
lock
mov
sbb
clc
mov
pop
or
jb
(bad)
(bad)
inc
mov
(bad)
cwde
sbb
(bad)
fild
test
mov
xchg
cld
(bad)
(bad)
cld
jg
add
test
ja
icebp
and
pop
mov
rcr
ret
(bad)
call
push
pusha
mov
out
aas
ret
jbe
out
mov
mul
pop
popa
(bad)
(bad)
(bad)
inc
in
enter
mov
(bad)
mov
div
inc
fmul
push
mov
fcomip
push
int3
imul
jnp
out
mov
pop
mov
call
cld
jmp
ss
mov
aas
sahf
mov
mov
aas
mov
(bad)
(bad)
ds
(bad)
popa
push
out
aas
aaa
mov
cmp
loope
addr16
shl
push
loope
jmp
jle
and
cmps
sbb
fild
call
cmps
mov
mul
movs
jmp
inc
ss
mov
sbb
je
push
mov
outs
adc
cwde
sbb
mov
(bad)
push
jmp
sahf
sar
(bad)
jnp
(bad)
mov
cmps
pop
fwait
cmc
imul
dec
outs
adc
lods
pop
mov
cmp
fwait
(bad)
(bad)
dec
mov
push
pop
or
mov
aad
in
lahf
call
push
jg
(bad)
ja
test
pop
mov
xor
test
dec
inc
arpl
cli
(bad)
(bad)
(bad)
(bad)
mov
addr16
mov
fimul
xlat
cmps
test
arpl
xor
dec
push
in
(bad)
push
fstp
outs
outs
mov
fcmovnu
in
in
div
mov
mov
cs
cmp
inc
movs
dec
hlt
sub
scas
pop
dec
test
ins
cmp
(bad)
jg
jmp
adc
std
fnstsw
sbb
hlt
ja
xchg
mov
inc
sbb
mov
cmp
inc
dec
dec
or
out
cmps
wbinvd
sub
inc
fld
pop
retf
(bad)
(bad)
call
inc
cdq
sti
pop
ins
icebp
outs
fbstp
iret
cmp
xor
retf
movs
mov
(bad)
jmp
(bad)
(bad)
call
out
sahf
and
movs
in
jmp
fs
mov
(bad)
scas
dec
adc
popf
pop
and
enter
pop
inc
test
retf
stos
std
adc
dec
(bad)
jmp
cmp
inc
ror
in
scas
repz
push
add
(bad)
fist
test
adc
push
cmp
loop
sub
inc
int3
cwde
adc
loop
fcmovne
sbb
jne
clc
jne
add
stos
adc
xchg
(bad)
(bad)
(bad)
inc
push
push
out
repnz
stos
stos
into
mov
mov
jmp
ss
mov
dec
loope
xor
sbb
xor
ret
sbb
ins
dec
test
jne
(bad)
(bad)
jmp
cs
sbb
sahf
or
jg
mov
ins
fisttp
mov
jecxz
rcl
mov
add
bound
(bad)
lds
(bad)
(bad)
(bad)
mov
cwde
push
loop
jecxz
and
push
cmps
adc
inc
xor
xchg
data16
scas
ret
jno
sub
cli
wrmsr
add
add
ret
cld
(bad)
(bad)
dec
dec
mov
mov
aad
imul
xor
push
xchg
out
repz
jecxz
cmps
ins
push
imul
adc
push
aam
adc
inc
(bad)
dec
out
sub
add
mov
inc
int3
add
pop
shl
or
cld
or
and
lahf
addr16
and
mov
(bad)
(bad)
push
ret
and
pop
inc
bound
and
and
rcl
lods
and
inc
mov
inc
pushf
in
mov
jae
mov
aad
dec
cmp
cmp
ret
(bad)
jg
adc
hlt
and
int
push
cmps
dec
stos
stos
pop
or
out
stos
jae
(bad)
jg
sbb
mov
imul
jne
in
dec
mov
inc
iret
pushf
xchg
ret
mov
add
sar
mov
nop
(bad)
jmp
pop
retf
ins
mov
xchg
in
cs
mov
jmp
pop
xchg
in
call
cdq
call
or
push
jecxz
xor
pop
shl
neg
cmps
js
xor
popa
cli
xchg
outs
loope
xchg
nop
cmp
jge
(bad)
(bad)
dec
out
loope
not
adc
inc
inc
xchg
inc
push
xor
or
arpl
dec
and
or
xchg
(bad)
call
push
or
imul
jne
and
adc
push
daa
jae
add
sbb
aam
ret
sbb
(bad)
(bad)
(bad)
(bad)
call
pushf
mov
(bad)
push
xor
dec
scas
popa
outs
sar
adc
jge
xchg
sbb
ins
loop
call
mov
cdq
mov
mov
inc
outs
cli
jmp
nop
je
cmp
inc
ins
push
sbb
in
clc
mov
(bad)
mov
or
(bad)
cmp
gs
pushf
adc
dec
fisubr
fdivp
stos
mov
add
mov
mov
sbb
cmps
(bad)
(bad)
call
mov
jo
(bad)
div
jp
sysret
das
data16
rcr
addr16
cmc
ds
fwait
(bad)
(bad)
(bad)
(bad)
mov
stc
inc
mov
lock
les
fwait
mov
cs
inc
cld
(bad)
(bad)
jmp
(bad)
sub
jno
xchg
xor
in
movs
sbb
push
cmp
and
or
sar
push
(bad)
call
sbb
popf
xor
cs
shl
fcomip
cmp
mov
sbb
div
in
fld
(bad)
(bad)
dec
call
jnp
mov
sbb
js
and
mov
mov
(bad)
(bad)
(bad)
call
fisub
icebp
dec
popa
std
fdivp
or
iret
lods
aas
cmp
mov
stos
(bad)
(bad)
(bad)
inc
fcomp
pop
sbb
in
ins
ja
iret
test
scas
sbb
(bad)
lds
(bad)
dec
lahf
push
add
cmp
cmp
push
push
mov
out
dec
xchg
ds
scas
sub
(bad)
(bad)
(bad)
call
rol
mov
sub
stos
out
push
lahf
test
sbb
(bad)
call
pop
sbb
ficomp
pop
inc
cli
mov
sbb
ins
jge
mov
ret
loop
lds
(bad)
jg
jmp
ret
inc
xchg
cmp
test
or
popa
push
dec
ja
idiv
dec
enter
push
sub
out
imul
jb
jle
mov
leave
(bad)
(bad)
(bad)
jmp
fdiv
aad
daa
xchg
xor
push
adc
jae
dec
popf
cmp
jmp
sub
scas
or
scas
cmp
scas
cwde
jo
fnstcw
xchg
cmp
into
jle
js
xchg
jmp
out
clc
(bad)
inc
mov
jbe
jne
fwait
ds
jmp
(bad)
jmp
int
push
cmps
dec
xchg
xchg
scas
sub
dec
push
int
in
push
aad
(bad)
(bad)
fbld
scas
test
dec
push
sti
push
aas
stos
push
test
push
lods
mov
popf
pop
(bad)
(bad)
(bad)
call
pop
cld
pop
loop
xlat
mov
std
mov
sub
mov
sub
sub
sub
sub
mov
or
sahf
scas
cmp
push
pop
jno
loop
add
pusha
mov
jp
in
jmp
cmp
out
in
leave
iret
fimul
call
hlt
rep
pop
es
jge
add
xchg
mov
pop
outs
inc
pop
in
gs
xor
mov
jmp
inc
xchg
jno
mov
mov
mov
push
sbb
or
gs
push
cmp
(bad)
jmp
push
int
adc
mov
out
jmp
movs
mov
call
xor
mov
cli
mov
or
mov
mov
ret
cwde
lahf
xor
inc
push
retf
(bad)
jg
dec
int3
jns
mov
sbb
fdivr
out
dec
cmp
pop
popa
cmp
cld
inc
jnp
pop
addr16
cdq
lock
cli
mov
jg
cmp
adc
ss
dec
fadd
sar
jg
push
cmp
sbb
shl
dec
inc
pop
(bad)
call
jl
cmc
lods
xor
js
ins
xchg
xor
movs
adc
dec
mov
pop
into
mov
mov
outs
(bad)
call
sub
out
cwde
adc
loop
ja
xchg
jo
dec
pop
loop
aaa
(bad)
out
and
push
cdq
(bad)
xor
fldcw
mov
sbb
push
push
sub
pop
or
push
sahf
cmp
je
inc
mov
int
das
sbb
(bad)
(bad)
(bad)
cmp
fstp
dec
rcr
xchg
and
int
or
jmp
mov
in
(bad)
(bad)
(bad)
inc
lea
out
adc
outs
addr16
sub
push
in
fcomi
das
icebp
cmps
xor
scas
(bad)
jmp
cli
mov
push
adc
jle
in
or
jg
hlt
sub
ret
ret
pop
sbb
in
jmp
pushf
xchg
xchg
enter
mov
test
sbb
retf
inc
popa
or
inc
popf
(bad)
(bad)
(bad)
push
mov
mov
mov
mov
dec
sbb
jo
xchg
sahf
popf
sbb
fidivr
mov
lea
mov
jge
sub
icebp
(bad)
inc
sbb
adc
pop
rcr
aad
and
arpl
xor
inc
(bad)
(bad)
(bad)
jg
loop
push
dec
(bad)
push
dec
(bad)
adc
and
popf
cwde
and
mov
dec
popa
ret
push
ret
xor
mov
or
(bad)
(bad)
call
pushf
jnp
ds
adc
dec
mov
fisttp
(bad)
(bad)
jge
(bad)
cld
imul
pop
(bad)
cmp
lods
inc
sub
scas
test
mov
mov
pop
cmp
(bad)
(bad)
call
mov
ror
jmp
mov
(bad)
(bad)
fnsave
or
jmp
dec
xchg
mov
sbb
iret
pop
cld
xchg
lahf
mov
out
repnz
inc
dec
aam
(bad)
push
pop
fst
out
lods
pop
repnz
icebp
cld
test
(bad)
(bad)
(bad)
call
in
das
outs
dec
push
ja
pop
xor
dec
pop
lahf
pop
xchg
hlt
fs
mov
(bad)
(bad)
dec
test
xor
jl
fcom
jecxz
cli
scas
leave
mov
iret
jl
mov
pop
or
mov
sbb
mov
in
into
(bad)
pop
mov
jno
mov
das
stc
cmp
aas
push
daa
sti
(bad)
(bad)
call
jl
(bad)
pop
stc
loope
jmp
xor
cmp
mov
jnp
rcr
(bad)
inc
jle
and
mov
out
ficom
jbe
dec
int
cmps
sub
mov
mov
mov
pop
push
or
movs
rol
or
shl
(bad)
(bad)
jmp
push
sub
bound
cmp
(bad)
jg
mov
mov
(bad)
(bad)
push
sub
inc
js
add
dec
push
les
mov
sub
hlt
outs
add
jmp
dec
inc
scas
shr
push
mov
popf
push
ins
popa
(bad)
cmps
and
es
pop
pushf
dec
inc
(bad)
and
mov
sub
sub
pop
mov
inc
or
scas
xor
cmp
es
ret
mov
outs
cli
inc
into
and
shr
xchg
sbb
aaa
mov
loope
mov
mov
fbstp
(bad)
dec
mov
jmp
nop
mov
add
inc
movs
jae
aas
cmps
xor
dec
popa
rcl
push
xchg
test
pop
dec
xor
retw
popa
jbe
xor
sbb
push
cs
fcomip
or
and
jg
test
pushf
pop
mov
daa
(bad)
(bad)
(bad)
push
(bad)
mov
out
fstp
dec
xor
out
loopne
loopne
mov
add
jmp
shl
fadd
xor
cmp
iret
call
cmp
mov
and
jp
mov
jne
pop
sti
push
fadd
shr
(bad)
(bad)
call
and
out
dec
fistp
fnsave
sub
mov
push
(bad)
(bad)
call
aas
cmp
in
(bad)
lahf
daa
das
jge
pop
ffree
ja
ds
xchg
repz
imul
mov
pop
xor
out
sub
lods
dec
test
jp
inc
adc
sub
xchg
ds
test
in
push
(bad)
cld
mov
test
xchg
movs
gs
sti
dec
out
cmp
je
frstor
push
lods
(bad)
(bad)
mov
lock
enter
out
scas
mov
adc
test
mov
jmp
xlat
aad
(bad)
int
repz
stc
sahf
jg
mov
imul
(bad)
repnz
mov
dec
mov
adc
in
cmp
aas
call
mov
leave
arpl
dec
fadd
std
jmp
push
pop
xor
push
int
out
mov
(bad)
ins
ins
fcmovnu
and
hlt
mov
retf
lahf
sub
les
push
mul
(bad)
jmp
xchg
or
stc
sbb
test
inc
pop
push
cld
pop
sub
data16
jmp
(bad)
call
into
arpl
adc
and
lds
xlat
cmp
(bad)
(bad)
(bad)
cmp
call
sub
es
sbb
pusha
xor
mov
pop
cwde
sahf
cmp
outs
sub
cmc
and
and
dec
(bad)
(bad)
(bad)
inc
leave
fistp
fdiv
push
into
push
addr16
jb
imul
sar
inc
test
jg
nop
(bad)
jo
adc
mov
push
loope
or
push
lahf
add
out
fist
enter
mov
push
lods
jo
push
test
pop
loopne
and
jg
inc
mov
mov
(bad)
(bad)
dec
jmp
fist
aas
xor
and
lahf
clc
jns
or
mov
(bad)
dec
pop
lods
xor
mov
test
in
inc
movs
push
(bad)
sub
out
fs
(bad)
inc
or
movs
mov
inc
es
dec
(bad)
call
or
(bad)
jg
mov
mov
retf
inc
mov
dec
test
pop
cmp
imul
dec
jl
cli
(bad)
(bad)
(bad)
jmp
retf
shrd
push
leave
push
sub
out
or
int3
sub
xor
jle
icebp
repz
hlt
(bad)
(bad)
(bad)
out
test
dec
jnp
jnp
jmp
addr16
mov
mov
add
idiv
out
cli
jmp
ja
pusha
inc
repz
into
lahf
jbe
fimul
cdq
push
aaa
mov
fidiv
imul
fdivr
cld
ds
mov
mov
pop
cmp
cmps
jl
call
(bad)
mov
jmp
(bad)
(bad)
(bad)
jmp
cmp
out
sub
std
test
lods
and
nop
xchg
mov
mov
test
jmp
popa
and
push
mov
fcmovnbe
stos
(bad)
call
jb
and
jno
std
imul
pop
je
fcomi
loop
adc
mov
retf
mov
or
aaa
je
call
cmps
cmps
cmp
sar
mov
jae
ja
sbb
mov
cmc
jmp
jmp
dec
push
mov
inc
or
xchg
sbb
mov
dec
call
jl
mov
adc
adc
add
ja
adc
(bad)
(bad)
(bad)
inc
fistp
push
std
popa
fild
mov
inc
cmp
int3
fcomp
test
(bad)
jg
(bad)
cmp
sar
cli
lea
mov
jb
push
jbe
sub
iret
iret
jb
(bad)
(bad)
(bad)
(bad)
jne
in
out
pop
ins
jmp
jge
shl
mov
rcr
add
adc
jecxz
pop
cmp
(bad)
call
mov
dec
sti
sub
jge
in
xor
out
es
(bad)
(bad)
(bad)
inc
std
sub
push
mov
inc
loopne
xor
mov
clc
xchg
in
dec
mov
jl
ds
push
mov
mov
loopne
jecxz
into
xlat
mov
(bad)
(bad)
(bad)
mov
jmp
jmp
sbb
mov
ja
push
lods
ds
lods
ficom
(bad)
(bad)
dec
xchg
jg
fimul
cwde
repnz
adc
fmul
nop
test
lock
aam
push
(bad)
mov
rcl
sti
sbb
div
int3
mov
fmul
mov
sub
pop
dec
jp
mov
call
add
mov
sti
mov
adc
jo
stc
(bad)
(bad)
(bad)
push
push
shr
sbb
sbb
sbb
jecxz
lea
gs
(bad)
(bad)
(bad)
call
mov
jge
mov
dec
cmps
bsr
(bad)
leave
push
stos
mov
fcmovnb
(bad)
(bad)
(bad)
push
and
xchg
repnz
pop
neg
pop
ins
pop
aad
cmp
(bad)
clc
xchg
ins
sbb
push
sbb
in
clc
jmp
xchg
or
repnz
test
and
(bad)
inc
pop
cwde
xor
stc
adc
pop
jg
fs
retf
shl
outs
(bad)
lods
cmp
mov
out
scas
ror
pop
pcmpeqd
cld
xchg
test
sub
imul
adc
add
push
dec
fcomip
(bad)
dec
pop
push
sub
sar
xchg
pop
sahf
xor
pop
(bad)
fld
adc
sub
mov
ja
mov
clc
les
mov
mov
(bad)
fsub
imul
fsubr
out
sub
cmp
inc
lock
test
pop
std
add
out
add
push
call
and
mov
cs
ins
pop
jno
shr
jmp
mov
pop
(bad)
(bad)
(bad)
(bad)
cmp
push
mov
mov
mov
jmp
cmp
xlat
push
lahf
sbb
(bad)
inc
cs
pop
xchg
iret
jge
popf
sub
dec
(bad)
adc
dec
aas
imul
mov
cmp
(bad)
(bad)
(bad)
fstp
and
mov
dec
test
sbb
repnz
pop
(bad)
cli
and
mov
add
push
xor
retf
(bad)
lahf
mov
xchg
je
mov
(bad)
(bad)
mov
jne
cmp
ret
and
loop
adc
add
add
inc
sbb
js
cmp
(bad)
call
push
add
in
ret
sar
or
and
xor
and
lods
fst
dec
(bad)
jb
jecxz
ds
aaa
mov
js
or
push
movs
ret
mov
push
jg
out
xchg
pop
mov
adc
jg
movs
push
sub
xlat
outs
push
in
adc
fcomp
outs
dec
rcr
test
pop
das
(bad)
jbe
fcomip
addr16
or
add
int3
lahf
into
xchg
test
cmp
(bad)
(bad)
fmul
xchg
pmuludq
and
sbb
xor
cwde
jl
loope
adc
(bad)
mov
mov
shl
jge
repz
mov
pop
mov
std
popf
pand
cmp
stos
(bad)
push
dec
jg
xchg
ds
jecxz
leave
ret
push
jmp
sbb
call
in
in
jle
cmps
mov
pop
pop
aas
repnz
mov
into
(bad)
(bad)
call
or
sahf
ret
pop
mul
xchg
mov
push
mov
(bad)
(bad)
call
pop
sbb
jmp
jle
pop
stc
pushf
aas
sub
xchg
(bad)
call
dec
(bad)
(bad)
(bad)
jmp
(bad)
out
pop
inc
jle
js
and
out
fmul
mov
stc
(bad)
int
aas
push
(bad)
(bad)
(bad)
jmp
pop
test
ror
aas
int
and
popf
repnz
pop
in
pop
(bad)
jns
retf
adc
pop
xor
out
jmp
sahf
test
push
cld
mov
call
ret
dec
retf
jg
scas
push
xlat
hlt
loopne
repz
add
out
(bad)
(bad)
(bad)
call
repz
jae
out
out
(bad)
mov
popa
xor
loope
ss
fmul
sbb
jp
fsubr
dec
mov
test
fcmovnb
ffreep
or
movs
clc
ss
(bad)
(bad)
jmp
pusha
(bad)
call
push
outs
pop
cmc
mov
call
inc
imul
(bad)
(bad)
dec
inc
dec
std
pushf
sbb
jno
arpl
ss
dec
sbb
xor
retf
jmp
pushf
dec
(bad)
and
jl
mov
(bad)
mov
and
(bad)
dec
mov
fidiv
sbb
mov
pop
cmp
adc
(bad)
call
mov
popf
fwait
push
mov
int
addr16
inc
das
lahf
jmp
(bad)
(bad)
jmp
fiadd
les
scas
ret
pop
jnp
push
fucomip
mov
cmps
adc
into
mov
ss
(bad)
call
imul
sub
(bad)
daa
cmp
(bad)
call
cld
fdivr
fbld
popf
xchg
mov
out
inc
enter
cs
int3
push
jmp
clc
or
jg
pusha
inc
repz
jne
mov
cmc
out
fcomi
in
sti
cmp
cmp
dec
jl
ins
dec
aad
(bad)
(bad)
(bad)
jmp
mov
imul
lods
sahf
pop
jecxz
pop
mov
jecxz
fidiv
jmp
sbb
in
jecxz
shr
out
pop
inc
fst
out
lods
(bad)
out
clc
scas
mov
in
fild
sbb
or
mov
imul
sbb
(bad)
dec
push
cmc
outs
push
push
(bad)
xor
push
mov
in
ret
aaa
sbb
pop
shl
(bad)
(bad)
(bad)
(bad)
fstp
loop
es
cdq
xchg
lock
test
ins
jbe
cmp
fadd
and
(bad)
(bad)
push
out
mov
mov
stos
(bad)
jle
dec
xor
js
jmp
inc
mov
push
add
jg
sahf
pop
mov
sar
fbld
or
aam
mov
jnp
jl
sti
dec
jb
(bad)
jg
dec
and
adc
push
(bad)
sti
sub
and
pop
retf
addr16
shl
(bad)
(bad)
(bad)
call
loope
adc
out
sti
jge
cli
sub
je
mov
outs
aas
jnp
mov
sahf
cmp
mov
fs
sub
sti
jnp
mov
mov
sti
outs
jmp
(bad)
(bad)
ins
jg
mov
fdiv
(bad)
fist
cld
retf
cmp
mov
pop
lock
shl
out
jg
(bad)
jmp
adc
inc
das
mov
push
clc
retf
add
jmp
cmp
mov
push
add
fwait
add
sub
stc
add
ret
dec
jb
cmp
cmp
rcr
das
add
out
sbb
shl
dec
das
cld
in
(bad)
fcom
into
cli
jne
or
clc
cmps
xchg
pop
ins
stos
(bad)
jg
(bad)
jmp
repz
(bad)
test
sbb
in
xlat
or
sbb
cmp
(bad)
(bad)
(bad)
fisttp
loop
jae
jbe
adc
or
xor
inc
push
popa
dec
jp
push
ins
xor
call
ret
add
jle
mov
fidiv
jmp
pop
dec
mov
pop
retf
es
cmp
jnp
lds
cld
or
lea
(bad)
(bad)
call
leave
(bad)
and
jecxz
loope
std
in
mov
mov
adc
or
loopne
pop
push
jg
jge
test
ret
or
pop
jle
(bad)
(bad)
(bad)
inc
out
xchg
rcl
aas
mov
mov
rcl
das
fwait
mov
jno
scas
(bad)
(bad)
(bad)
call
fistp
fild
jecxz
xlat
mov
jae
test
push
test
mov
sti
(bad)
mov
mov
call
xor
rol
ret
out
(bad)
(bad)
call
jle
dec
sbb
outs
cmp
retf
mov
dec
fdiv
(bad)
jnp
adc
jae
(bad)
mov
xor
jg
fcmovnb
mov
cmp
aam
aaa
pop
cdq
mov
(bad)
(bad)
dec
jg
addr16
(bad)
mov
adc
scas
outs
sti
mov
xchg
pop
and
mov
(bad)
call
int
int
and
push
xor
call
sbb
pop
pop
push
mov
std
aam
push
or
sbb
mov
mov
call
(bad)
imul
xchg
push
ins
addr16
cs
(bad)
aam
xor
mov
(bad)
fdivr
fwait
add
ret
das
xor
loop
(bad)
jmp
xlat
push
or
jg
dec
cli
movs
(bad)
aas
jmp
in
stos
mov
mov
(bad)
jmp
movs
idiv
(bad)
fsubp
dec
out
icebp
int
lods
imul
pop
cli
enter
push
mov
cli
mov
sub
fild
fimul
enter
inc
call
mov
cmps
sar
retf
fdivr
(bad)
dec
dec
push
inc
outs
stc
mov
rcl
ffree
sub
jp
mov
(bad)
(bad)
jmp
(bad)
mov
call
and
push
popf
jbe
int3
iret
(bad)
sti
arpl
sub
(bad)
das
call
jle
jns
and
(bad)
(bad)
call
xchg
(bad)
pushf
(bad)
jne
fdivr
movs
and
xor
cwde
je
movs
mov
or
in
(bad)
mov
mov
push
mov
mov
(bad)
(bad)
jg
imul
inc
repnz
mov
fnstcw
gs
xlat
das
adc
ins
imul
std
(bad)
(bad)
mov
push
iret
fwait
(bad)
dec
mov
mov
imul
ins
nop
pop
pop
loopne
clc
mov
and
or
mov
shl
(bad)
(bad)
call
push
out
push
es
xchg
or
push
and
sub
or
adc
(bad)
(bad)
jg
adc
idiv
cwde
popa
xchg
ins
dec
adc
mov
hlt
jae
mov
dec
(bad)
dec
mov
add
ja
repz
out
mov
out
int3
rcr
(bad)
imul
(bad)
(bad)
(bad)
jmp
sub
js
push
inc
enter
push
mov
sub
lahf
xlat
cdq
pushf
push
scas
frstor
movs
bnd
fdiv
dec
pop
fdivrp
adc
or
dec
sbb
jbe
mov
daa
xor
(bad)
(bad)
mov
cs
jp
bound
pop
pop
loop
retf
(bad)
retf
jmp
cmps
jbe
cmp
dec
mov
sbb
inc
in
mov
int3
mov
imul
jmp
cs
jecxz
xchg
es
sub
add
add
in
inc
mov
call
(bad)
cli
ret
mov
sbb
sbb
popa
bound
fwait
mov
imul
repnz
(bad)
push
mov
and
test
lds
mov
ds
retf
mov
cmp
(bad)
fisttp
inc
push
ficom
scas
(bad)
dec
mov
mov
sub
sub
pop
in
jg
(bad)
call
call
loope
cld
in
add
(bad)
int
(bad)
xor
(bad)
(bad)
dec
pop
sahf
stc
bound
shl
xchg
or
mov
lods
cmc
call
jbe
gs
(bad)
in
call
xlat
inc
lea
sub
and
out
mov
imul
scas
sar
mov
push
pop
mov
jns
div
gs
scas
mov
(bad)
(bad)
push
and
daa
mov
push
popf
mov
xchg
xor
xlat
enter
loop
push
ret
lods
shl
int3
pop
popf
lods
in
(bad)
pop
arpl
je
call
int
cmps
call
stos
push
mov
jnp
xchg
loopne
cmps
fs
inc
std
or
(bad)
inc
repz
pop
mov
popa
xor
cwde
fst
fild
jae
mov
out
cli
retf
int3
fnsave
in
daa
xchg
xor
xchg
cld
inc
push
std
pop
or
cld
dec
(bad)
jmp
clc
cs
outs
push
jmp
cmp
push
aaa
xchg
adc
mov
(bad)
jmp
mov
je
jl
adc
sub
call
xor
call
jne
jno
sbb
test
(bad)
cli
fs
xchg
fistp
(bad)
lock
(bad)
(bad)
call
cmp
mov
inc
adc
jmp
shl
push
and
xchg
test
push
arpl
adc
sub
fxch
adc
aaa
(bad)
(bad)
jmp
jbe
sbb
pop
push
arpl
xchg
xor
sar
pop
cmp
iret
scas
aad
pop
xchg
sbb
loope
add
pop
jmp
(bad)
(bad)
jmp
shr
popf
fdivr
push
(bad)
mov
and
ret
(bad)
pop
mov
(bad)
inc
(bad)
call
sbb
dec
push
xchg
ret
mov
call
push
mov
test
movs
or
ret
cmps
xor
imul
or
int3
fs
lea
adc
lods
out
dec
xchg
retf
mov
xor
mov
push
mov
jmp
stc
add
dec
aaa
(bad)
jle
test
push
retf
fwait
inc
mov
jb
(bad)
mov
loop
inc
inc
cmc
(bad)
imul
cmp
(bad)
(bad)
dec
pop
fldcw
ja
push
pop
mov
xchg
mov
mulps
dec
movs
dec
outs
(bad)
(bad)
dec
dec
or
daa
cld
es
adc
add
jle
out
(bad)
(bad)
push
push
jnp
jmp
mov
jmp
rol
inc
shl
or
lods
xchg
xor
(bad)
jmp
pop
mov
rcl
push
cmp
and
jae
sti
aaa
push
xchg
sub
(bad)
(bad)
(bad)
call
sub
jo
push
test
out
rcl
mov
dec
inc
dec
xchg
cmps
jae
mov
(bad)
pop
push
inc
jg
(bad)
push
jge
mov
leave
dec
cwde
xchg
cmp
sahf
add
and
fiadd
dec
mov
sti
mov
cmp
cmp
fdivr
(bad)
mov
popa
test
sub
inc
movs
ret
popa
repnz
cmp
and
pop
sub
(bad)
(bad)
jmp
cmp
pop
fs
(bad)
inc
fdiv
inc
pop
pop
sbb
iret
xchg
cmps
inc
cli
dec
fwait
idiv
gs
sti
(bad)
jge
and
fst
sbb
retf
push
iret
jp
(bad)
xor
sbb
mov
(bad)
(bad)
call
test
add
sub
pop
mov
mov
fwait
or
shl
jmp
sbb
add
cli
popa
ss
push
call
(bad)
mov
xchg
scas
jo
popf
sar
sub
retf
or
xlat
shr
mov
call
cmp
in
and
movs
pop
call
outs
xor
dec
in
stc
loope
pop
or
add
data16
sub
adc
das
bound
scas
pushf
(bad)
(bad)
(bad)
call
js
mov
in
add
adc
push
call
sbb
adc
and
cmp
adc
(bad)
(bad)
jmp
test
mov
xor
pop
and
xchg
lahf
adc
pusha
push
add
jmp
ror
push
add
fsubrp
xchg
fbld
pop
movs
jb
into
xor
xchg
int
(bad)
(bad)
inc
cmp
shr
mov
(bad)
stos
mov
call
mov
xchg
mov
(bad)
(bad)
jmp
test
cs
test
jmp
in
fist
push
mov
pop
inc
test
sbb
aam
jg
(bad)
jmp
mov
jg
xor
jp
aam
xor
cmp
pop
data16
mov
add
(bad)
dec
mov
cmp
mov
(bad)
(bad)
jmp
rcr
inc
and
jmp
stos
loop
cwde
sahf
add
xchg
inc
push
in
std
(bad)
(bad)
call
push
test
scas
dec
pusha
mov
and
mov
push
ret
xor
imul
outs
xor
push
xor
cmp
push
arpl
adc
sar
jmp
(bad)
icebp
cdq
jns
pushf
pop
not
aam
movs
mov
aad
sub
push
mov
(bad)
(bad)
call
movs
mov
inc
xchg
xchg
pop
add
out
fild
fndisi(8087
jmp
mov
repz
les
push
sbb
cmc
(bad)
(bad)
mov
jo
mov
sbb
mov
mov
add
sub
retf
loopne
call
cdq
pop
not
gs
mov
cld
adc
sbb
xor
outs
call
outs
mov
dec
ins
lods
aad
pop
jb
pop
int
xchg
adc
or
jg
cmps
xchg
push
(bad)
(bad)
(bad)
(bad)
fidivr
xchg
lea
in
or
arpl
nop
(bad)
(bad)
push
add
ja
das
cli
jmp
pop
fnstenv
or
fstp
loop
push
sbb
movs
sahf
mov
(bad)
fucomip
mov
retf
fdiv
inc
push
push
loop
mov
sar
pop
(bad)
(bad)
(bad)
call
pop
adc
hlt
retf
in
mov
cli
ficomp
retf
(bad)
shl
xor
int3
repz
jns
add
cli
pop
je
jmp
and
test
ins
mov
out
cmps
scas
(bad)
(bad)
(bad)
(bad)
(bad)
sti
xchg
repnz
sub
push
outs
loope
mov
inc
movs
mov
mov
lods
mov
sar
push
mov
movntps
pop
push
mov
imul
sub
and
mov
(bad)
(bad)
jmp
outs
outs
outs
rol
sub
js
leave
inc
xchg
xchg
mov
jns
sub
lods
std
movs
and
repnz
pop
sub
addr16
mov
nop
ret
or
call
lods
lock
cmc
jno
jnp
call
(bad)
fidiv
add
frstpm(287
mov
pop
mov
stos
outs
loopne
dec
mov
and
(bad)
(bad)
call
xor
(bad)
sub
xor
inc
sub
inc
jecxz
test
sbb
xor
(bad)
(bad)
jmp
adc
adc
test
or
test
or
cdq
retf
or
daa
call
dec
sub
pop
ins
dec
outs
push
xchg
and
adc
pop
xchg
pop
cmp
popa
sbb
cmps
sar
dec
mov
add
pop
(bad)
(bad)
(bad)
jmp
pop
dec
sub
mov
es
fsubr
mov
adc
adc
imul
inc
rcr
movs
sbb
sub
sub
add
jae
(bad)
(bad)
dec
ror
sbb
xchg
push
mov
cmp
movs
js
jne
lock
jmp
ret
mov
imul
jno
(bad)
inc
mov
std
push
pop
stos
mov
repz
inc
sbb
ror
pop
ja
push
and
outs
(bad)
(bad)
fdivr
jbe
dec
jle
dec
popf
imul
pop
js
dec
inc
pop
imul
inc
(bad)
(bad)
(bad)
call
add
ins
out
ror
sbb
enter
sbb
and
test
sti
(bad)
(bad)
(bad)
(bad)
fnstenv
sti
fsub
aaa
xor
add
imul
lods
adc
aam
mov
arpl
sbb
aad
xchg
lock
mov
cmp
(bad)
jg
mov
in
pusha
mov
lods
jmp
mov
shr
(bad)
jmp
push
mov
sub
push
push
lods
stos
out
(bad)
retf
mov
xchg
dec
mov
cli
(bad)
(bad)
dec
and
(bad)
(bad)
cmp
pop
cwde
rcl
pop
bound
pop
xchg
fs
into
mov
(bad)
(bad)
jmp
or
ret
mov
inc
rol
push
pop
retf
xor
sub
pop
xchg
(bad)
(bad)
(bad)
dec
fucomip
inc
cmp
icebp
loop
icebp
or
jmp
lea
lods
push
add
mov
(bad)
(bad)
(bad)
push
int3
cmp
push
push
loopne
clc
sub
jne
or
jl
xor
je
push
aas
lahf
(bad)
(bad)
(bad)
(bad)
mov
adc
jae
add
push
and
xchg
push
mov
cmp
xchg
(bad)
mov
(bad)
(bad)
(bad)
jmp
and
in
(bad)
sbb
xchg
mov
dec
dec
call
mov
das
xor
adc
(bad)
call
sub
sub
pop
das
sub
out
popa
adc
in
test
cli
push
(bad)
out
xchg
das
addr16
or
(bad)
icebp
push
push
je
sub
dec
dec
inc
jl
call
loopne
imul
push
pop
jb
mov
dec
icebp
and
(bad)
test
adc
cld
push
movs
xor
bound
(bad)
dec
div
inc
xor
xchg
call
hlt
iret
pop
fld
dec
xchg
(bad)
jbe
aad
test
cmp
cmp
sbb
(bad)
arpl
(bad)
(bad)
push
(bad)
pop
hlt
sub
cmp
cmp
and
mov
mov
dec
pusha
mov
or
stos
pop
add
mov
xchg
and
inc
lods
lds
(bad)
(bad)
jmp
mov
sbb
cmp
push
mov
fst
mov
clc
xchg
mov
and
jnp
into
rol
push
repnz
in
jmp
xchg
xlat
es
cli
push
(bad)
ins
int
iret
int
sti
xor
(bad)
(bad)
(bad)
call
pop
jbe
mov
adc
rcr
nop
pop
mov
xlat
sahf
push
cmp
out
cmp
(bad)
call
loopne
cmp
call
push
mov
pop
pop
mov
mov
movs
sbb
xlat
(bad)
out
fidiv
popf
mov
adc
mov
cmps
or
cli
movs
pop
daa
xchg
sti
in
int3
lods
pop
fwait
dec
pushf
cmc
jb
call
(bad)
(bad)
(bad)
push
adc
mov
mov
add
ss
dec
xchg
gs
push
jge
jg
(bad)
fist
inc
add
aaa
enter
xchg
sti
ja
add
inc
cmp
xor
(bad)
jg
xchg
cld
push
dec
jno
in
popf
lahf
je
aas
es
mov
mov
mov
ja
(bad)
call
push
dec
adc
je
stos
adc
loop
cld
or
cmp
stc
xchg
into
(bad)
(bad)
(bad)
jmp
cdq
cmp
mov
mov
sub
ror
movs
or
dec
call
cmps
jg
call
and
fs
lea
xchg
outs
xchg
fs
loope
dec
mov
arpl
push
pop
cmp
xor
xlat
pop
shr
ins
add
inc
enter
iret
lock
call
jle
imul
pushf
lds
int3
mov
xchg
int
icebp
retf
aas
dec
(bad)
jmp
dec
mov
retf
mul
cmps
inc
pop
jb
sub
(bad)
(bad)
call
jl
loop
pop
mov
push
(bad)
push
jl
mov
nop
fisttp
xchg
sbb
(bad)
(bad)
jg
lods
push
and
xchg
out
scas
cmp
pop
fistp
lods
sti
stc
adc
enter
(bad)
(bad)
(bad)
dec
jmp
fs
int
mov
mov
xchg
enter
mov
(bad)
(bad)
(bad)
dec
imul
adc
jnp
scas
aaa
clc
lock
xchg
mov
ds
and
imul
call
dec
xor
dec
retf
adc
test
push
lds
(bad)
(bad)
(bad)
dec
xchg
or
in
sub
xlat
loopne
rol
pusha
or
in
push
sub
push
hlt
scas
or
jmp
call
or
sar
scas
jecxz
mov
cmps
(bad)
cmp
sub
sbb
mov
pop
sbb
cld
pop
fdivp
push
test
mov
sbb
xchg
mov
(bad)
(bad)
mov
pop
(bad)
mov
or
jmp
and
jecxz
dec
or
loope
aaa
adc
mov
test
pop
aam
and
(bad)
(bad)
call
scas
pop
adc
mov
ins
pop
dec
or
nop
call
arpl
stos
sbb
pop
cmps
sar
push
enter
icebp
add
loope
jmp
xchg
(bad)
(bad)
jmp
xchg
and
call
mov
std
loope
add
push
pop
nop
pop
sub
ins
aad
pop
cmc
add
adc
dec
inc
and
adc
dec
xchg
inc
(bad)
(bad)
(bad)
jg
out
hlt
jbe
out
(bad)
push
gs
adc
sbb
xor
aad
stos
push
cmp
mov
std
fcomip
jmp
cmp
add
or
(bad)
jge
mov
popa
push
loop
mov
push
out
daa
shl
cld
cmps
popf
push
(bad)
mov
mov
jl
push
push
pop
add
jg
sub
sbb
sub
cmps
and
mov
(bad)
push
push
or
push
int
fsubr
cmp
repz
inc
dec
out
jmp
pop
jmp
sub
and
sbb
movs
xchg
lods
xchg
jle
outs
cmp
cld
(bad)
call
fnstsw
mov
mov
hlt
ret
gs
outs
(bad)
mov
inc
mov
enter
fnstenv
mov
(bad)
(bad)
(bad)
push
and
jnp
movs
lea
xchg
mov
fs
shl
adc
call
(bad)
call
add
inc
and
push
cwde
je
mov
xor
jno
add
rcr
jne
(bad)
call
push
fcomp
jmp
lea
sbb
jmp
popf
sbb
mov
neg
pop
in
popf
pop
nop
mov
repz
out
mov
aaa
mov
dec
jg
cmp
(bad)
(bad)
(bad)
jmp
fdiv
push
jb
dec
into
repz
retf
lock
pop
mov
lahf
lds
pop
scas
(bad)
fcomip
call
cmps
fwait
push
inc
xchg
je
xchg
loop
inc
xchg
or
(bad)
(bad)
dec
jnp
push
mov
inc
xchg
sub
gs
(bad)
jb
cmp
sar
call
dec
aam
ins
call
pop
push
pusha
mov
sub
fwait
jl
fwait
out
(bad)
inc
test
sub
cmc
xchg
cld
rol
cli
jo
xchg
lea
std
call
ins
and
push
mov
nop
pusha
fmul
pop
inc
fsubr
xlat
mov
mov
aam
daa
jne
cld
(bad)
jmp
and
call
es
(bad)
push
and
xchg
mov
das
out
and
adc
fdivr
lahf
(bad)
jg
push
cmc
repz
fsubr
test
(bad)
push
shl
mov
ins
mov
imul
repz
test
nop
fsubp
(bad)
(bad)
(bad)
jmp
(bad)
add
pop
pop
fiadd
adc
pop
push
daa
xor
push
push
(bad)
push
ja
(bad)
(bad)
(bad)
jmp
(bad)
aas
das
js
sbb
ins
loope
(bad)
jl
test
in
jae
loop
or
hlt
mov
(bad)
inc
xchg
popf
sub
(bad)
test
adc
clc
sub
out
(bad)
mov
add
out
xchg
xchg
pop
cmp
mov
popf
cmp
(bad)
(bad)
dec
push
fldenv
enter
imul
sub
jmp
pop
faddp
pop
arpl
mov
hlt
jmp
test
push
mov
rcr
fwait
arpl
dec
add
nop
nop
aam
ret
xchg
pushaw
inc
ins
mov
fiadd
xor
aaa
cld
call
adc
push
xor
sub
sbb
mov
xor
inc
push
(bad)
mov
in
sbb
repz
fdiv
retf
(bad)
pop
lahf
dec
pop
pusha
neg
fwait
mov
out
test
dec
outs
popa
inc
sub
cld
or
xchg
pop
cmps
lahf
mov
cs
ja
cmp
test
call
xor
cs
xor
jp
add
jae
sbb
jg
out
jp
mov
pop
mov
sub
add
xchg
shl
mov
(bad)
(bad)
(bad)
clc
or
add
pop
jns
adc
mov
mov
and
les
test
cmp
test
pop
cmp
add
or
mov
or
inc
hlt
pop
out
imul
das
scas
(bad)
inc
cmp
sbb
in
call
pop
xchg
ins
int
(bad)
jmp
shl
xor
ja
sub
xchg
xchg
push
outs
jg
sahf
mov
test
in
xchg
jns
iret
mov
daa
loope
or
ins
hlt
in
scas
lods
fwait
pop
adc
inc
lea
data16
and
mov
xor
and
xchg
jle
call
test
aaa
mov
jne
mov
jmp
fnsave
scas
mov
pusha
jne
push
jno
push
(bad)
(bad)
(bad)
(bad)
jl
(bad)
fsub
pop
dec
pop
fdivr
call
rol
daa
ret
or
cli
(bad)
bound
ins
mov
push
dec
jmp
aam
shl
jge
cmp
shl
movd
aas
cld
and
cmps
mov
cli
(bad)
jle
int
and
cmc
ror
xlat
adc
outs
cli
aad
mov
and
xor
cmp
mov
clc
inc
adc
mov
xchg
lahf
ins
mov
ds
xor
aaa
mov
jl
(bad)
(bad)
jmp
cmps
rcr
xor
pop
or
inc
cmp
adc
repz
dec
int
(bad)
(bad)
push
inc
mul
and
(bad)
add
cmp
fwait
sub
xchg
sub
inc
test
xor
pop
nop
in
pop
stc
sub
xor
mov
aaa
jge
mov
mov
push
jae
pop
rol
dec
cmp
addr16
xor
sub
fadd
les
(bad)
call
cld
jb
das
sub
test
mov
imul
aad
pop
xor
(bad)
(bad)
jmp
cmps
sbb
cmps
cmp
int
pop
icebp
(bad)
outs
mov
push
scas
std
mov
iret
sub
(bad)
sbb
xchg
mov
and
jbe
sti
popa
popf
scas
(bad)
lea
mov
std
pop
je
sub
jmp
lods
(bad)
(bad)
(bad)
(bad)
cmp
dec
dec
dec
mov
inc
mov
popf
inc
je
fs
aad
jg
sbb
outs
and
push
imul
ss
mov
popa
nop
mov
push
or
sub
out
aas
cli
jecxz
jg
dec
shr
push
ins
int3
ds
xchg
jl
movs
xor
das
clc
(bad)
mov
pop
movs
loop
lahf
add
or
mov
cmps
push
in
(bad)
(bad)
(bad)
std
cli
and
cmp
pop
cmp
imul
adc
ss
loope
(bad)
call
and
xor
sbb
or
add
test
lock
cli
sbb
ficom
dec
jmp
in
icebp
not
jmp
out
into
arpl
or
les
pop
std
(bad)
(bad)
(bad)
in
mov
ins
(bad)
es
popf
nop
pop
and
ins
mov
in
std
(bad)
(bad)
mov
add
jmp
sub
jns
lahf
inc
mov
sub
aas
cwde
movs
clc
es
push
das
(bad)
(bad)
(bad)
mov
mov
or
fdivr
fidivr
sub
sub
adc
(bad)
out
ret
or
into
paddusw
out
int3
or
ret
(bad)
jge
test
(bad)
(bad)
(bad)
fisubr
and
bnd
lock
daa
cwde
cs
shl
sub
(bad)
jg
test
test
inc
mov
ss
push
(bad)
jmp
aad
cmc
ja
imul
test
addr16
xchg
mov
lods
(bad)
cdq
es
pop
std
arpl
jae
mov
mov
dec
addr16
sub
(bad)
(bad)
fcomip
mov
xchg
mov
and
pop
(bad)
arpl
dec
push
cld
mov
sub
or
pop
mov
jge
jmp
dec
in
(bad)
(bad)
(bad)
jge
or
das
rol
jmp
cmps
pusha
inc
cli
in
hlt
jecxz
xchg
aas
rep
repnz
fmul
hlt
mov
dec
adc
cmp
(bad)
(bad)
push
mov
mov
pushf
mov
retf
leave
stos
cmc
fwait
fwait
jmp
sti
xchg
xchg
sti
shr
ds
(bad)
(bad)
push
xor
jmp
in
xchg
jne
addr16
mov
mov
dec
mov
cmp
aas
mov
pop
in
cdq
lahf
sbb
imul
mov
(bad)
(bad)
(bad)
call
sbb
mov
jmp
bound
xor
int
and
pop
ror
jl
sub
cld
(bad)
(bad)
dec
cdq
das
stc
daa
popa
iret
adc
jge
out
add
retf
enter
jno
ds
inc
rol
stos
or
clc
mov
cdq
sub
out
xchg
sub
nop
lods
ins
cmp
mov
retf
sub
xchg
repz
and
cmp
xor
push
(bad)
(bad)
call
fcomp
pop
xor
push
pop
aas
loop
xor
repz
inc
inc
(bad)
and
add
or
pop
cdq
leave
and
shl
push
(bad)
(bad)
(bad)
cmp
repnz
fsub
pop
mov
jo
loopne
sti
(bad)
test
push
mov
lock
inc
shl
pop
dec
stos
jle
mov
sub
jg
dec
xor
lods
sub
fcom
aaa
xor
cmp
xchg
lock
(bad)
mov
inc
out
lock
shl
cli
inc
daa
sbb
aaa
pushf
inc
(bad)
(bad)
(bad)
call
rol
mov
scas
cld
dec
fistp
push
outs
fidivr
push
add
pop
mov
(bad)
rol
cmp
stc
sub
mov
(bad)
(bad)
jg
pop
jb
cmp
rcr
inc
cld
ja
lock
mov
jg
adc
gs
(bad)
(bad)
dec
sub
enter
push
(bad)
mov
pushf
lods
cmc
cmp
retf
je
xor
cmp
pop
mov
hlt
test
jge
ins
push
push
jg
jmp
push
push
(bad)
inc
sub
dec
adc
loope
fadd
dec
and
xchg
inc
pop
fdiv
call
sub
loope
sbb
xchg
lods
repz
and
and
push
mov
fld
(bad)
call
mov
mul
dec
mov
imul
mov
sbb
jbe
cdq
(bad)
out
mov
icebp
sub
cmc
stos
es
mov
gs
mov
(bad)
(bad)
(bad)
(bad)
std
push
clc
imul
mov
into
rcl
js
mov
jmp
jmp
dec
sahf
xchg
call
stc
outs
repnz
ins
mov
push
inc
adc
dec
(bad)
es
and
dec
repz
jmp
mov
jmp
test
mov
mov
cwde
(bad)
(bad)
(bad)
push
nop
sar
push
xchg
adc
int3
pop
mov
leave
mov
pop
(bad)
sub
pop
test
push
and
stos
(bad)
(bad)
(bad)
jmp
fst
or
sub
popa
es
outs
inc
jg
add
dec
push
pushf
(bad)
(bad)
(bad)
(bad)
(bad)
cwde
or
xchg
jecxz
js
test
leave
(bad)
in
push
push
sub
add
das
test
sbb
popf
mov
repz
xor
outs
xlat
(bad)
out
cmps
js
xor
nop
inc
ret
push
fimul
fs
(bad)
(bad)
jg
jo
rol
repz
dec
fnstsw
or
bound
arpl
(bad)
(bad)
push
jno
in
retf
outs
test
jmp
addr16
fldenv
dec
push
xchg
arpl
(bad)
adc
(bad)
(bad)
inc
ds
lds
or
add
adc
mov
in
bound
int3
jo
ds
fst
inc
das
fist
sar
ds
cmp
jmp
pop
or
(bad)
call
pop
ins
push
sub
pop
add
retf
out
xchg
cdq
call
pop
std
in
pop
dec
(bad)
fcmovu
mov
mov
and
(bad)
(bad)
mov
inc
dec
lods
xchg
nop
enter
(bad)
cmp
movs
cld
(bad)
(bad)
call
mov
xchg
in
xchg
xor
gs
push
and
(bad)
mov
xchg
fs
push
ds
(bad)
(bad)
push
jne
test
pop
pop
mov
dec
les
add
pop
adc
(bad)
jg
xor
jg
(bad)
mov
adc
aad
xchg
push
je
enter
jmp
push
mov
pop
rol
(bad)
mov
push
pop
push
clc
xchg
mov
mov
ins
inc
adc
inc
jnp
(bad)
(bad)
out
clc
das
out
or
jnp
push
repnz
mov
sbb
(bad)
(bad)
(bad)
dec
inc
test
(bad)
sbb
(bad)
inc
pop
pop
jg
jl
add
pop
inc
push
jp
cwde
(bad)
jg
dec
sub
and
add
popa
sti
(bad)
add
adc
xchg
ds
and
sar
dec
lods
sti
mov
mov
push
add
sbb
(bad)
(bad)
jmp
cmp
in
fs
sbb
aas
sti
mov
cmps
cmps
scas
in
fld
sar
adc
xor
jle
sbb
int
rcl
(bad)
(bad)
call
push
xchg
das
iret
dec
add
mov
and
stc
repnz
aam
adc
popf
dec
call
(bad)
(bad)
(bad)
jmp
sub
loopne
test
hlt
fsub
(bad)
mov
push
mov
cmp
jle
jns
cmovns
(bad)
(bad)
(bad)
mov
pop
cld
xchg
in
mov
loope
fdivr
inc
mov
or
inc
cwde
or
xor
cld
mov
scas
cwde
lahf
push
rol
cli
bound
push
into
xchg
xor
cmps
mov
inc
xchg
popf
cmp
jns
dec
sar
retf
mov
fucomi
mov
inc
and
sbb
inc
jmp
sti
out
int
out
xchg
adc
xor
(bad)
mov
inc
aaa
sbb
sub
pop
push
pop
retf
popw
jae
clc
pop
enter
or
sti
(bad)
mov
call
hlt
(bad)
shl
sbb
scas
(bad)
les
dec
cmps
test
pop
mov
js
js
out
jns
arpl
push
aam
lds
mov
push
sete
and
iret
retf
jmp
mov
(bad)
(bad)
(bad)
(bad)
cmp
dec
leave
push
pop
cmps
call
cmp
fistp
xchg
mov
sub
jmp
sbb
clc
(bad)
(bad)
(bad)
cmp
push
mov
aam
jno
push
aas
xor
popf
fld
(bad)
push
imul
mul
gs
xchg
cmp
test
jno
out
mov
(bad)
and
(bad)
jg
neg
test
mov
dec
mov
mov
(bad)
(bad)
out
sar
int3
sub
jmp
into
add
loop
pop
in
mov
mov
mov
(bad)
cmp
leave
fimul
stc
jo
mov
jp
mov
mov
icebp
fdivr
jmp
gs
clc
(bad)
(bad)
inc
fisubr
pop
push
mov
fucomi
jp
fldcw
into
and
pop
call
loopne
mov
aaa
mov
int
add
out
or
gs
scas
outs
and
ficom
(bad)
(bad)
(bad)
cli
pop
dec
ds
das
shr
pop
mov
dec
push
and
xlat
mov
out
dec
xchg
aaa
clc
stc
sti
inc
cmp
add
rol
in
inc
shr
nop
div
dec
sahf
js
mov
mov
add
sahf
rcl
outs
mov
jg
mov
sub
inc
push
jbe
imul
mov
retw
lods
aad
test
(bad)
jg
popa
and
outs
aaa
cld
jb
ret
inc
jp
cdq
xchg
mov
iret
outs
out
or
and
hlt
sub
cld
mov
sti
es
(bad)
stc
std
mov
lods
int
sti
sti
repnz
int3
cli
sbb
jns
mov
mov
aas
ret
bnd
lock
repnz
aaa
dec
shl
inc
popa
fdiv
ins
xchg
(bad)
(bad)
call
pop
jno
mov
mov
adc
fnstcw
lock
sub
aas
sub
call
dec
cmps
hlt
(bad)
das
repnz
fst
enter
or
in
(bad)
dec
std
jg
(bad)
mov
push
ret
jnp
std
std
(bad)
fdivr
rcr
inc
cwde
or
sbb
(bad)
jmp
jbe
fdiv
gs
mov
(bad)
loop
ret
xchg
jae
push
aaa
sub
mov
cld
cmc
mov
stc
jg
test
or
enter
add
call
mov
retf
cmp
inc
ret
jo
xor
jle
or
cmps
or
jmp
dec
jle
jmp
xchg
shr
test
and
add
fcmovu
push
adc
jbe
les
or
(bad)
(bad)
jmp
aam
pop
mov
cs
jecxz
mov
xor
loope
(bad)
add
call
sub
cdq
sbb
jp
(bad)
out
enter
jge
int
stos
pop
jmp
ds
cmp
mov
xor
cmc
dec
cmp
retf
mov
(bad)
jmp
mov
sbb
inc
sub
ja
push
jmp
lahf
out
mov
mov
in
(bad)
(bad)
(bad)
dec
xchg
jmp
push
imul
out
(bad)
rol
dec
pop
(bad)
cmp
jnp
(bad)
(bad)
inc
lods
cmp
ja
ficom
stc
repz
mov
jns
inc
add
(bad)
(bad)
call
into
mov
sbb
xchg
sbb
jge
cmc
repz
(bad)
(bad)
jmp
cmp
ficom
xchg
xlat
or
arpl
aam
stos
cmp
pop
test
(bad)
(bad)
inc
retf
in
push
fdivp
push
in
dec
(bad)
outs
ret
sahf
pop
cmc
jl
fstp
(bad)
(bad)
(bad)
push
mov
aaa
sbb
dec
xchg
mov
cmps
dec
inc
shr
sub
jle
mov
in
push
jecxz
test
pop
mov
inc
gs
stos
mov
mov
inc
xor
mov
xor
fcos
(bad)
(bad)
(bad)
stc
imul
jb
xchg
adc
test
stc
jae
out
inc
lahf
(bad)
retf
lock
(bad)
mov
daa
inc
loop
call
dec
xchg
mov
ret
out
jmp
mov
out
cmps
arpl
mov
jmp
mov
int3
xchg
jmp
jg
mov
(bad)
push
mov
call
push
imul
push
rol
(bad)
jmp
hlt
mov
pushf
xchg
and
inc
add
jge
(bad)
jne
dec
mov
lahf
add
sub
cs
xor
cmc
pop
into
xchg
fs
(bad)
(bad)
inc
scas
add
ror
stos
pusha
jmp
mov
(bad)
(bad)
push
sahf
scas
jl
pop
fbld
(bad)
xchg
shl
std
lahf
mov
mov
sti
(bad)
(bad)
(bad)
jmp
fisttp
test
sti
or
adc
das
sub
xlat
adc
mov
inc
sbb
mov
add
in
inc
dec
push
or
ins
dec
ins
inc
jl
popa
sbb
xor
mov
(bad)
(bad)
(bad)
call
(bad)
cmp
or
addr16
into
call
ret
clc
inc
mov
cmp
cli
(bad)
dec
loop
push
aas
cmpxchg
dec
jmp
jns
dec
cmps
inc
mul
(bad)
(bad)
(bad)
inc
dec
cmp
xchg
adc
inc
sti
popf
mov
or
ret
pop
cmp
jmp
add
dec
sbb
fisttp
or
rol
and
(bad)
(bad)
(bad)
mov
cwde
push
icebp
pushf
test
mov
rcr
pop
xor
adc
push
inc
adc
jnp
iret
inc
outs
inc
fst
ret
mov
ret
fwait
xor
add
cmp
(bad)
push
and
cmps
xchg
lahf
or
lds
loopne
jmp
pushf
(bad)
mov
(bad)
and
(bad)
jmp
add
sub
fcmovu
jle
mov
sbb
(bad)
int
sub
(bad)
jno
inc
ins
(bad)
jmp
sahf
int
(bad)
(bad)
(bad)
jg
arpl
paddw
pop
cdq
xor
xor
push
inc
pop
push
clc
mov
(bad)
(bad)
(bad)
inc
sub
xchg
repz
lahf
(bad)
xchg
std
pop
clc
push
repnz
adc
sbb
or
mov
jmp
(bad)
cmp
xlat
adc
imul
cmp
mov
test
aaa
popw
pop
mov
ss
sahf
aad
mov
xchg
fidiv
gs
dec
cmp
sbb
not
sub
jmp
ret
pop
lock
icebp
daa
lods
and
jg
cmc
inc
(bad)
iret
fistp
mov
(bad)
inc
imul
retf
(bad)
pusha
clc
fucom
sar
lds
pop
rcr
jl
out
xor
or
(bad)
(bad)
fincstp
dec
pushf
es
(bad)
(bad)
dec
mov
jge
mov
sbb
popf
cwde
mov
mov
(bad)
jmp
pop
or
inc
jnp
vorps
sar
arpl
inc
imul
(bad)
clc
ror
(bad)
adc
(bad)
(bad)
(bad)
in
ds
stc
mov
dec
(bad)
lods
inc
cdq
cmps
mov
mov
js
jns
popf
bound
ss
jmp
cmps
ins
jbe
mov
iret
scas
(bad)
push
cmps
std
jle
and
sahf
lds
push
(bad)
shl
pop
lock
jmp
lea
xchg
mov
push
mov
out
sahf
(bad)
dec
or
mul
fstp
xchg
je
mov
idiv
into
mov
mov
cmps
cmp
jno
in
imul
push
call
mov
fstp
mov
cld
dec
or
repz
cwde
xor
mov
jl
xchg
movs
lods
stos
jg
mov
push
jns
cmp
clc
sub
neg
icebp
or
scas
sahf
xor
(bad)
fild
adc
jbe
(bad)
call
nop
adc
lahf
jmp
push
cs
sti
mov
(bad)
outs
clc
outs
push
inc
int3
std
loopne
pushf
dec
or
cmp
ret
push
fs
push
mov
pop
test
jmp
pop
out
js
jl
ins
mov
sti
ror
push
mov
movs
xor
(bad)
cli
in
icebp
(bad)
mov
aad
fs
mov
dec
and
dec
jge
sub
mov
push
(bad)
(bad)
jmp
and
nop
aas
and
cld
pop
ins
test
jns
imul
jle
(bad)
(bad)
call
mov
jle
rcr
(bad)
call
aaa
push
pop
xor
cmp
iret
push
(bad)
or
(bad)
loope
adc
ret
xchg
add
(bad)
(bad)
cld
loop
(bad)
mov
mov
xor
out
fsub
repz
jp
jbe
mov
jl
shl
jb
mov
dec
aaa
or
inc
(bad)
in
xor
sar
jo
jl
mov
and
jg
(bad)
dec
xlat
mov
jge
push
mov
ficomp
xchg
mov
ja
(bad)
fcomip
pop
mov
adc
jp
aad
jg
dec
int
sti
mov
aas
pop
jo
push
(bad)
(bad)
jg
mov
es
(bad)
out
mov
cwde
imul
adc
mov
jg
lds
stc
retf
ds
mov
mov
dec
cmp
les
sti
ror
mov
or
cmp
dec
mov
(bad)
fcomip
and
rcr
(bad)
div
inc
cmp
popf
fwait
mov
fisub
push
aas
cdq
xchg
lock
cli
mov
and
jmp
std
dec
(bad)
(bad)
call
jns
(bad)
pop
(bad)
jge
je
ret
adc
mov
jmp
movs
xor
sbb
imul
outs
jno
(bad)
(bad)
(bad)
(bad)
lock
fst
cmp
lods
addr16
(bad)
pusha
repnz
pop
push
dec
cmp
aam
(bad)
(bad)
(bad)
cmp
sub
sub
jnp
and
idiv
pop
iret
jmp
(bad)
(bad)
(bad)
sub
js
inc
dec
jae
mov
inc
enter
xchg
fimul
lahf
(bad)
neg
cmc
push
ffreep
mov
sahf
jmp
in
lods
add
add
cmp
mov
mov
dec
out
or
mov
pop
mov
(bad)
(bad)
mov
xchg
inc
sbb
xor
mov
fwait
sbb
sub
icebp
test
push
ins
pop
inc
addr16
lahf
in
sbb
adc
bound
icebp
ins
out
(bad)
call
or
jnp
add
mov
mov
adc
adc
(bad)
jmp
shr
xchg
jecxz
pop
call
mov
les
sub
mov
cmps
cmp
and
push
jnp
pop
mov
jae
ss
hlt
call
std
int
and
add
movs
test
ds
cld
inc
(bad)
(bad)
mov
aaa
ins
mov
dec
dec
xor
dec
mov
fidiv
inc
jg
ds
repz
mov
mov
(bad)
cmp
xchg
mov
xor
sbb
inc
gs
fcom
test
aam
(bad)
inc
inc
jecxz
add
dec
sbb
jae
jne
inc
call
add
scas
inc
test
or
jl
sar
(bad)
call
xor
nop
movs
je
nop
jne
or
add
test
cs
sti
adc
stos
bound
inc
pop
pop
sub
pop
push
or
(bad)
(bad)
(bad)
inc
(bad)
mov
sub
sbb
aaa
pop
ret
push
out
pop
in
movs
or
(bad)
adc
(bad)
(bad)
inc
test
stos
inc
retf
shr
pop
jecxz
xchg
jle
out
fcmovb
push
in
cmp
xor
jg
pop
icebp
mov
cmp
retf
sbb
sbb
mov
mov
sti
dec
aad
fldcw
(bad)
and
sub
in
fisttp
aam
jmp
mov
lods
sub
lods
inc
xchg
(bad)
(bad)
call
mov
inc
adc
xchg
iret
inc
dec
loop
pop
dec
js
xchg
fmulp
fwait
lea
(bad)
call
data16
enter
push
inc
and
cmp
inc
lds
(bad)
(bad)
jmp
xchg
mov
adc
push
icebp
cmps
jbe
outs
sub
mov
retf
inc
mov
jmp
ret
pop
outs
push
dec
pop
cmc
(bad)
(bad)
stc
add
ins
mov
fiadd
xchg
mov
jnp
jne
les
and
pop
lea
(bad)
call
in
add
(bad)
ficomp
dec
loopne
mov
xchg
and
inc
loope
dec
call
dec
pushf
clc
pop
mov
pop
in
(bad)
scas
adc
(bad)
(bad)
(bad)
inc
addr16
enter
or
je
cld
and
enter
bound
daa
jl
push
dec
stos
jbe
pop
out
nop
(bad)
(bad)
mov
shl
and
clc
mov
clc
mov
mov
xlat
dec
mov
sbb
(bad)
lock
addr16
jns
iret
cwde
adc
or
rcr
jge
(bad)
(bad)
inc
aam
(bad)
out
bnd
and
push
(bad)
xchg
mov
mov
inc
jo
cmc
(bad)
(bad)
dec
dec
mov
test
push
dec
mov
jnp
add
not
xor
test
adc
sti
mov
jo
addr16
adc
retf
jo
dec
cmp
push
ss
ds
imul
(bad)
(bad)
(bad)
jmp
fwait
cdq
mov
jns
imul
mov
xchg
(bad)
(bad)
dec
add
mov
repnz
push
xchg
popf
or
pushf
and
push
xchg
out
call
(bad)
cmp
loop
out
lea
repz
and
jge
iret
or
mov
sbb
xor
(bad)
jmp
aam
out
(bad)
adc
or
pop
lods
pusha
jo
sub
cld
pop
push
and
xchg
out
lds
ds
jp
clc
cld
pop
(bad)
(bad)
push
add
push
aas
sub
push
cmp
mov
push
or
xchg
dec
ret
scas
cli
jmp
out
pushf
loope
call
inc
hlt
test
(bad)
(bad)
(bad)
jg
sub
rol
inc
ret
in
loopne
or
sbb
pop
xor
pop
jmp
jmp
adc
mov
xchg
jae
(bad)
in
xor
lahf
ret
ret
shr
lea
adc
sub
or
inc
mov
jb
out
ror
(bad)
inc
jecxz
sub
sbb
mov
inc
mov
push
nop
dec
outs
jmp
or
cmp
xor
test
or
ja
(bad)
(bad)
jmp
jge
push
ret
sbb
add
inc
xchg
cmps
jnp
pop
cmp
mov
jb
adc
push
test
cmc
(bad)
dec
cdq
sbb
cmp
inc
pop
push
lods
fld
xchg
mov
dec
and
sbb
cmp
(bad)
(bad)
(bad)
mov
popa
mov
(bad)
data16
or
cmp
xlat
push
in
and
(bad)
jmp
and
pop
and
jp
hlt
xor
pop
sbb
pop
jl
(bad)
(bad)
dec
mov
and
dec
and
rol
sub
jmp
daa
mov
pop
adc
cmp
mov
fldenv
enter
mov
sub
cmps
add
jo
(bad)
(bad)
dec
test
xchg
pop
retf
push
int
jno
xor
dec
ins
test
jmp
out
clc
in
out
shl
dec
pop
push
add
add
push
popa
dec
ds
(bad)
mov
adc
adc
xor
fidivr
ins
cmp
neg
fwait
cmp
xchg
(bad)
inc
and
test
adc
mov
hlt
dec
in
dec
ins
push
fst
or
mov
cwde
dec
mov
mov
(bad)
(bad)
call
enter
sbb
xchg
(bad)
push
push
(bad)
xor
pop
push
cmps
movs
sbb
push
sti
icebp
(bad)
(bad)
push
jg
ss
mov
adc
and
jae
cmp
jl
jecxz
imul
dec
or
call
stos
jp
pop
in
popa
ret
cmps
dec
pop
pop
jg
(bad)
jmp
push
mov
shr
test
lods
test
out
cld
shl
dec
push
test
pop
or
dec
cmps
cld
mov
hlt
sbb
fcomp
outs
(bad)
(bad)
push
xchg
and
ss
xchg
dec
cmc
push
imul
jb
push
(bad)
jg
jmp
mov
test
scas
xor
xchg
add
repz
fadd
test
in
movs
pop
mov
lea
test
push
xchg
pop
movs
add
xor
data16
(bad)
(bad)
jmp
inc
and
call
enter
sbb
and
addr16
movs
inc
aaa
push
adc
ins
aaa
(bad)
(bad)
jmp
jmp
xchg
scas
xchg
div
xor
sbb
push
fwait
pop
pop
cld
(bad)
(bad)
mov
ret
add
outs
sahf
popf
jbe
(bad)
cli
xchg
sub
mov
mov
xchg
pushf
add
fsubr
sub
(bad)
inc
jnp
aam
jns
std
push
mov
gs
jmp
sub
or
xchg
mov
fsub
fstp
sub
or
push
sub
and
mov
xor
mov
cmp
add
arpl
and
mov
aaa
mov
jg
jg
ds
push
data16
mov
gs
cmc
xor
(bad)
call
xchg
rol
jp
out
pop
mov
mov
mov
dec
cdq
je
(bad)
jg
jmp
dec
mov
cmp
push
iret
add
repz
test
cmp
repz
retf
es
mov
and
mov
fbld
jno
mov
(bad)
(bad)
jmp
cmps
adc
call
int3
inc
mov
loop
cdq
stc
(bad)
(bad)
fist
bound
pop
cmp
push
repz
shl
(bad)
(bad)
sub
sbb
out
movs
int3
push
add
mov
xor
cmp
sub
jb
push
into
shl
mov
sbb
add
(bad)
(bad)
(bad)
call
add
ror
mov
es
cwde
fld
adc
xor
retf
or
(bad)
in
fcomip
loopne
mov
scas
ins
ffree
xchg
and
add
nop
cmp
ja
(bad)
(bad)
(bad)
inc
adc
cmc
pop
scas
adc
cli
cmp
test
mov
cmps
addr16
sbb
(bad)
(bad)
jmp
arpl
jnp
enter
xchg
aaa
jmp
and
push
mov
add
mov
add
add
cmp
or
jmp
pop
enter
stos
and
inc
add
ss
nop
push
jmp
(bad)
(bad)
(bad)
jmp
cmp
jle
ret
gs
mov
pop
sub
sub
push
xor
loopne
inc
lods
xor
xor
cmp
jo
bound
add
sbb
data16
jg
(bad)
call
pop
test
add
xor
sbb
in
les
and
or
(bad)
(bad)
fucomi
mov
dec
push
mov
(bad)
mov
(bad)
(bad)
(bad)
jg
add
fisttp
sub
lahf
adc
or
xchg
mov
inc
cmp
inc
mov
xchg
out
daa
lea
stc
(bad)
jg
or
inc
cmp
loopne
cmps
ret
fs
(bad)
push
lea
jl
fwait
mul
sbb
push
add
and
(bad)
call
mov
inc
xchg
push
sub
sub
in
add
push
cli
repz
xchg
(bad)
(bad)
(bad)
dec
bound
in
xor
mov
push
sub
inc
jle
xchg
push
and
inc
mov
fwait
push
(bad)
(bad)
dec
(bad)
in
jmp
hlt
call
in
fwait
sbb
inc
(bad)
(bad)
(bad)
inc
dec
xchg
cmp
cmp
pop
adc
xchg
sbb
call
cmp
(bad)
(bad)
(bad)
stc
bound
mov
stc
ffreep
fsubp
mov
stos
pop
add
push
std
mov
mov
(bad)
jmp
stos
test
push
cld
jbe
ja
aas
pop
jle
lock
mov
(bad)
call
fdivr
jmp
sahf
(bad)
fbstp
push
push
movs
dec
cmps
stos
cmp
out
(bad)
(bad)
fild
push
xor
gs
call
sbb
das
(bad)
jge
fbld
xchg
add
vpsubsw
adc
pop
lock
(bad)
call
and
inc
push
lea
scas
mov
retf
test
jmp
cmc
xchg
mov
pop
dec
xor
add
lahf
mov
mov
sub
pop
(bad)
(bad)
(bad)
jmp
xchg
jmp
cmp
ja
pop
fnstenv
mov
adc
add
mov
jmp
push
and
fwait
popf
data16
es
adc
sti
in
xchg
xchg
aas
mov
mov
or
or
hlt
dec
and
or
(bad)
(bad)
(bad)
call
js
inc
test
scas
fldenv
aad
es
movs
push
mov
push
xchg
clc
stos
ret
cmps
icebp
icebp
aas
in
(bad)
(bad)
jmp
mov
mov
pop
stos
adc
mov
je
push
mov
ficomp
pop
fsub
jns
(bad)
iret
shl
mov
mov
or
cli
mov
(bad)
jg
data16
sub
pop
pusha
cli
mov
fidiv
aaa
or
jbe
add
aam
jge
sub
(bad)
jg
or
mov
dec
imul
pop
cwde
ret
push
push
pusha
push
add
adc
ins
add
(bad)
(bad)
dec
xchg
add
pop
jl
mov
or
add
retf
add
jnp
dec
(bad)
(bad)
(bad)
out
loop
daa
sub
and
sub
pusha
cmp
in
dec
pop
out
push
sti
(bad)
(bad)
jg
and
rol
dec
fwait
retf
adc
fs
mov
leave
retf
mov
fcom
add
(bad)
(bad)
jmp
retf
pop
mov
sbb
js
shld
mov
ins
int3
retf
mov
push
or
clc
(bad)
inc
cld
call
mov
bound
addr16
out
lds
daa
sbb
daa
shr
mov
out
setno
jg
(bad)
mov
adc
mov
out
push
xchg
xchg
sahf
outs
inc
jmp
push
pop
or
mov
(bad)
mov
pop
mov
mov
mov
cmp
mov
je
cs
arpl
out
stos
jg
lock
outs
sahf
add
inc
(bad)
std
and
(bad)
aas
rcl
call
(bad)
fdivr
nop
(bad)
xchg
mov
clc
and
lahf
idiv
(bad)
(bad)
jmp
popf
mov
pop
xchg
test
call
jne
push
sar
scas
(bad)
(bad)
(bad)
(bad)
std
lods
fcomip
div
pop
jmp
cld
dec
xor
jmp
mov
cmp
adc
movs
lods
(bad)
mov
cmps
lock
sbb
outs
movs
mov
add
cli
dec
into
(bad)
in
adc
pop
push
adc
js
push
sti
push
mov
(bad)
(bad)
jmp
adc
add
jl
retf
or
(bad)
and
loopne
and
mov
xor
adc
mov
(bad)
test
cmps
or
test
shr
in
(bad)
cmp
jnp
or
and
dec
int3
add
adc
dec
push
sub
sbb
cmc
jmp
jle
sub
scas
(bad)
bound
push
hlt
into
icebp
cs
enter
xor
push
jp
dec
push
lods
rcr
push
das
nop
push
dec
aad
and
cmp
clc
mov
pop
push
mov
sbb
(bad)
(bad)
mov
mov
sub
cmps
jle
(bad)
mov
pop
jne
and
rol
out
jg
jmp
jb
jmp
scas
cld
call
popa
push
ss
lods
(bad)
push
adc
xchg
xor
fwait
retf
pop
pop
rcl
int3
nop
jmp
dec
loop
xchg
ss
fild
jge
sub
mov
das
imul
cmc
(bad)
(bad)
jmp
nop
xchg
xor
jl
repz
adc
int3
out
xor
mov
or
pusha
ret
cdq
(bad)
daa
cli
mov
jmp
dec
xchg
and
mov
pushf
dec
fnstcw
sub
test
jo
and
mov
pop
mov
(bad)
inc
sbb
push
loope
dec
gs
imul
shl
jge
rol
add
sub
xchg
mov
sub
int3
js
lods
adc
mov
mov
shr
ss
xor
out
push
enter
dec
jb
out
cli
aaa
hlt
scas
inc
lea
(bad)
fsubr
dec
nop
xor
clc
jb
mov
(bad)
(bad)
push
inc
pop
cmc
push
call
cmp
lahf
call
cmc
shl
sub
push
jp
push
jecxz
dec
cdq
jae
(bad)
(bad)
(bad)
jmp
neg
div
and
push
outs
jg
retf
out
pop
out
pop
call
jle
xlat
add
sar
push
popa
jle
jl
rol
xor
jo
stos
and
pop
loopne
cwde
fs
stos
sbb
xor
mov
xchg
div
sbb
test
call
(bad)
in
xchg
pop
int3
into
xor
cmp
push
mov
sar
dec
adc
(bad)
call
sbb
(bad)
mov
adc
sub
(bad)
inc
sub
cmp
ror
mov
xor
es
(bad)
(bad)
(bad)
(bad)
fcmovu
cmps
mov
push
push
inc
jmp
inc
dec
mov
rcr
outs
clc
cmp
(bad)
(bad)
dec
mov
ret
mov
dec
push
fmul
inc
or
aad
(bad)
movs
xor
mov
(bad)
call
pop
enter
push
sar
mov
iret
loopne
iret
xor
sbb
cmc
add
lock
jns
out
push
push
not
aad
mov
movs
wbinvd
jg
repz
outs
ja
repnz
or
sar
jmp
jmp
sahf
adc
adc
adc
inc
xor
ds
add
call
dec
and
aam
or
adc
aam
and
into
jl
(bad)
(bad)
fistp
mov
fwait
mov
push
and
adc
push
aas
jmp
lahf
ins
inc
lahf
fsub
(bad)
(bad)
(bad)
inc
push
nop
sti
pop
jg
fmul
jae
addr16
xlat
xlat
jno
add
push
jbe
int3
movq
jmp
clc
div
mov
out
movs
mov
lahf
push
push
jl
sub
movs
frstor
jp
fnsave
mov
std
dec
adc
jmp
sbb
fs
call
adc
adc
pop
(bad)
(bad)
(bad)
(bad)
or
adc
or
shr
adc
dec
cmp
in
pop
and
sar
aaa
mov
std
(bad)
inc
sbb
xor
lahf
(bad)
repz
push
xchg
pusha
cs
and
mov
std
(bad)
call
fwait
hlt
mov
ret
scas
ss
mov
outs
lock
mov
or
pop
inc
pop
out
sbb
cmp
sub
cli
fdiv
xchg
(bad)
cmps
cmp
(bad)
inc
xchg
mov
retf
cmp
out
in
xor
enter
mov
and
(bad)
(bad)
push
push
retf
mul
jb
loopne
inc
jnp
test
aad
bswap
mov
cwde
adc
(bad)
(bad)
call
cwde
adc
pop
mov
test
ja
ja
in
adc
cmps
xchg
xor
arpl
jecxz
call
jecxz
xchg
or
mov
push
jmp
xor
out
(bad)
mov
cli
or
jle
push
clc
fstp
es
xor
(bad)
(bad)
jmp
ss
hlt
scas
mul
cli
cdq
out
sub
push
sub
adc
pop
(bad)
call
ror
(bad)
pop
add
dec
and
call
(bad)
(bad)
(bad)
push
and
xchg
icebp
ud2
stos
inc
outs
mov
jmp
sbb
out
in
jns
fild
call
cmp
xor
adc
hlt
out
cld
inc
loopne
stos
xor
cmp
mov
inc
mov
mov
mov
lock
pop
adc
mov
cwde
outs
push
push
(bad)
(bad)
(bad)
call
les
cwde
test
jnp
neg
cmp
pop
in
dec
dec
out
cs
mov
imul
jbe
in
jmp
jp
and
in
jno
xor
(bad)
mov
icebp
or
call
fcomp
dec
out
pop
push
jmp
mov
dec
push
and
mov
dec
cld
xor
pop
adc
mov
nop
icebp
jno
xor
(bad)
(bad)
inc
push
cmp
das
test
push
rcl
ss
test
js
xor
mov
stos
mov
jmp
dec
outs
arpl
out
push
dec
or
and
outs
out
jmp
loopne
cwde
mov
inc
rcl
fwait
jp
(bad)
(bad)
(bad)
jmp
pop
mov
xchg
mov
sti
dec
add
int
mov
fs
push
loopne
mov
(bad)
(bad)
(bad)
push
mov
(bad)
popf
gs
push
std
inc
push
repz
std
xchg
mov
shl
stc
nop
xlat
(bad)
(bad)
(bad)
call
lahf
rcr
out
xor
or
xchg
xchg
stc
out
sbb
mov
outs
add
retf
cmp
jo
out
retf
(bad)
inc
jmp
out
nop
enter
add
dec
fcom
fdivr
fcmovbe
repz
mov
retf
mov
and
cs
iretw
dec
jge
xor
push
gs
(bad)
(bad)
call
loopne
cmps
pop
adc
(bad)
movs
mov
dec
adc
push
mov
in
mov
push
sub
pop
ret
jno
jb
and
xlat
pusha
popf
call
call
push
mov
movs
jl
imul
jmp
mov
hlt
mov
out
jae
cmp
and
das
test
test
call
dec
pop
sub
ins
mov
mov
adc
pop
cdq
sbb
clc
fcomip
push
xchg
xchg
(bad)
into
pop
sub
into
dec
into
stos
dec
jmp
or
push
cmp
sbb
mov
out
and
fucom
(bad)
cmp
jno
adc
cdq
cmp
into
icebp
les
cmps
scas
lock
xchg
dec
jbe
ins
sbb
stos
mov
daa
(bad)
inc
leave
xchg
int3
(bad)
ins
idiv
stc
ja
xchg
xor
pop
xor
inc
jg
push
test
mov
mov
cmc
mov
int
(bad)
(bad)
inc
jne
xor
xlat
mov
ret
jge
sub
fsubr
pusha
mov
test
cmp
cli
ja
cmc
pop
xchg
xor
xchg
pop
dec
sub
fcomip
call
mov
xchg
pop
div
cdq
push
ins
sbb
add
or
shr
movs
mov
and
call
lods
mov
daa
shl
call
add
jge
or
sbb
and
xchg
fdiv
je
jmp
int
and
and
mov
cli
cmp
fsubr
out
daa
fstp
sti
idiv
push
xchg
add
pop
mov
(bad)
(bad)
(bad)
call
or
pop
mov
mov
call
xor
or
leave
mov
(bad)
(bad)
(bad)
jg
add
into
inc
rcl
sbb
mov
mov
add
and
out
pusha
not
je
cli
(bad)
dec
inc
enter
fs
into
push
into
aaa
fnstsw
in
mov
scas
xchg
mov
fnstenv
(bad)
out
repnz
xchg
cli
mov
pop
iret
fst
popa
mov
outs
jecxz
fs
add
and
(bad)
(bad)
(bad)
jmp
mov
lahf
in
mov
add
test
xchg
lahf
arpl
mov
mov
xchg
gs
jne
(bad)
(bad)
clc
imul
push
cmp
cmp
jp
xchg
frstor
xchg
push
xchg
(bad)
(bad)
jmp
fcomp
and
rol
cmps
fldenv
adc
dec
jnp
pusha
mov
jbe
aad
mov
jmp
shr
mov
inc
push
pushf
xchg
fnstenv
popf
fs
mov
(bad)
mov
ds
pop
das
pop
xchg
pop
ins
pop
push
push
push
sbb
popf
mov
(bad)
(bad)
(bad)
fcom
and
xchg
mov
in
int3
ja
mov
jbe
jae
jnp
(bad)
(bad)
(bad)
inc
loope
sub
jecxz
not
xchg
and
aam
pop
sbb
test
(bad)
test
(bad)
jmp
dec
cmps
imul
in
aam
xchg
daa
movs
cld
rcl
push
call
ret
jl
js
ins
or
mov
dec
jno
ins
(bad)
ror
data16
(bad)
in
clc
add
push
movs
or
fadd
push
add
mov
mov
lahf
jb
sub
sub
push
mov
jo
hlt
imul
outs
ja
mov
inc
je
fcom
or
fnstenv
popa
inc
fsubr
(bad)
(bad)
jg
jne
stc
add
cmc
xlat
cld
push
mov
dec
dec
out
idiv
imul
out
or
xchg
xchg
sub
mov
mov
jl
fdivr
jae
sub
or
dec
ja
xor
mov
xchg
call
(bad)
(bad)
or
ret
fbstp
fisttp
pop
inc
(bad)
dec
sar
sub
mov
(bad)
(bad)
inc
cmps
xor
fs
imul
int
jmp
jle
mov
iret
or
dec
inc
mov
(bad)
mov
mov
push
js
iret
xor
neg
popf
dec
(bad)
sub
jb
jmp
mov
pop
test
in
repz
lods
(bad)
(bad)
mov
jp
std
add
sar
or
dec
mov
cld
pop
xor
retf
and
call
stos
push
test
xor
add
mov
fisttp
and
test
outs
cmp
int
(bad)
(bad)
call
jns
inc
cmp
cmp
and
jae
mov
xchg
or
cmp
or
(bad)
(bad)
push
push
pusha
test
or
xchg
mov
xlat
(bad)
fstp
cmp
mov
(bad)
(bad)
call
jmp
das
cmp
sbb
pop
sbb
pop
js
jne
adc
inc
jmp
xchg
daa
(bad)
(bad)
jmp
outs
mov
or
shr
cmp
clc
add
inc
scas
dec
or
(bad)
call
aam
xchg
clc
and
ja
das
add
pop
ret
pop
outs
into
push
neg
inc
inc
and
out
adc
jae
mov
or
cmp
and
nop
sub
and
cmps
inc
(bad)
mov
push
je
aam
xlat
pop
xchg
(bad)
(bad)
(bad)
(bad)
fld
xchg
xor
and
cwde
inc
mov
rol
je
leave
xchg
bound
repnz
(bad)
(bad)
(bad)
(bad)
push
xchg
cmps
les
out
stc
sbb
mov
int
add
pop
(bad)
push
add
fdivr
push
adc
pop
fwait
jne
xor
xlat
adc
das
clc
call
xor
cli
mov
ja
mov
stos
ror
xchg
ret
or
(bad)
(bad)
(bad)
dec
iret
arpl
push
bound
arpl
fprem
lds
adc
pushf
rcr
push
(bad)
inc
leavew
fs
and
shl
cmp
mov
sub
dec
xchg
xchg
pextrw
pop
icebp
call
mov
sub
inc
push
sbb
xor
mov
inc
sar
retf
(bad)
(bad)
(bad)
call
mov
loop
mov
pusha
dec
addr16
test
nop
ret
inc
cdq
push
in
and
(bad)
aaa
push
push
js
fmul
sahf
imul
(bad)
(bad)
jg
push
sbb
inc
aas
(bad)
jo
add
cmp
adc
pop
data16
out
fdivr
(bad)
(bad)
jmp
pop
mov
adc
xchg
add
in
pop
xchg
or
call
(bad)
(bad)
jmp
pusha
mov
jae
mov
int3
cdq
lea
(bad)
(bad)
inc
out
vmread
jl
in
mov
mov
or
inc
(bad)
jg
(bad)
out
je
inc
jmp
dec
push
mov
mov
push
jne
in
(bad)
(bad)
(bad)
(bad)
cmp
fmul
shr
test
loopne
and
jecxz
(bad)
(bad)
(bad)
jg
xor
xor
neg
sbb
sub
fst
and
dec
(bad)
mov
dec
jl
pop
aas
stos
mov
pushf
cmp
or
mov
mov
(bad)
push
inc
push
mov
in
adc
jg
push
lahf
nop
push
jg
(bad)
(bad)
pop
popa
add
mov
push
int3
xor
mov
bound
adc
push
adc
cs
mov
or
jg
add
mov
mul
xchg
or
hlt
and
imul
das
shr
jge
test
sub
jnp
pushf
rcl
shr
lahf
push
out
(bad)
(bad)
(bad)
push
mov
jbe
lds
or
rcr
mov
shl
cmp
(bad)
jmp
pop
jbe
or
fstp
mov
sub
or
jb
enter
xchg
or
sahf
fdiv
inc
jns
aas
fcom
fimul
cmp
inc
in
andps
call
jg
stos
(bad)
cli
add
bound
inc
mov
shr
(bad)
call
mov
mov
dec
xor
mov
add
mov
call
loope
or
and
cmp
ret
add
data16
cld
imul
inc
cmc
(bad)
(bad)
(bad)
jmp
pop
retf
dec
(bad)
mov
push
or
out
sbb
nop
dec
stc
cmc
sbb
call
shl
(bad)
loope
into
enter
mov
enter
add
dec
into
pop
mov
mov
das
retf
lods
or
cld
(bad)
(bad)
call
add
es
sub
dec
xchg
(bad)
jp
mov
pop
pushf
mov
(bad)
(bad)
fbld
jnp
movs
imul
ss
pop
mov
hlt
push
jne
ss
(bad)
(bad)
call
cld
fild
jns
scas
out
jb
fwait
popa
mov
ret
outs
(bad)
mov
dec
adc
popf
les
sbb
shl
test
out
sub
pop
jmp
(bad)
(bad)
(bad)
js
jmp
jle
pop
int3
xchg
leave
mov
and
pop
push
in
sbb
call
adc
clc
(bad)
inc
retf
mov
call
jae
dec
sub
(bad)
(bad)
(bad)
(bad)
cwde
lods
lea
cmp
mov
xor
enter
mov
and
ret
repz
cmps
(bad)
(bad)
(bad)
out
cmps
nop
les
cdq
dec
movs
(bad)
lahf
loope
cmp
test
adc
(bad)
(bad)
call
push
arpl
jge
into
sbb
in
sub
cs
ins
ret
jo
xor
std
jmp
cli
inc
dec
add
push
push
retf
push
int
mov
sub
dec
neg
arpl
lock
mov
fdivr
(bad)
(bad)
call
jo
inc
cmps
aas
in
imul
dec
xlat
fldcw
lods
sbb
push
inc
iret
ret
mov
repz
pop
dec
cld
inc
push
push
dec
pop
mov
sbb
xchg
std
jg
pop
cld
cmp
mov
aad
pop
sub
popf
out
rcl
movs
(bad)
jg
or
pop
or
and
movs
mov
dec
std
(bad)
(bad)
inc
dec
pusha
mov
sbb
mov
test
ja
mov
dec
sbb
jp
cmp
mov
fs
jne
cld
int3
lahf
or
jbe
jbe
loopne
fdivr
inc
gs
ss
sub
(bad)
inc
mov
ja
mov
pop
shl
test
lahf
mov
int
jmp
cli
or
(bad)
in
mov
cwde
pop
mov
or
lods
jb
(bad)
(bad)
(bad)
(bad)
push
ror
sbb
imul
(bad)
mov
retf
sti
test
sub
call
(bad)
jmp
push
aaa
mov
cwde
ins
push
push
sub
lds
push
imul
(bad)
(bad)
call
(bad)
sub
fiadd
ret
xor
jb
fs
jns
xor
pop
lock
and
mov
out
popa
xchg
out
xor
js
sar
(bad)
inc
xor
xchg
pop
pop
outs
mov
jne
pop
jae
mov
mov
jb
adc
fcomip
scas
pop
lods
jmp
xchg
sti
ret
mov
aaa
std
push
les
lahf
pop
test
xchg
retf
cmp
fwait
jle
cmps
mov
das
sub
xor
stc
push
movs
lahf
jne
into
add
(bad)
jmp
fwait
mov
fistp
outs
jmp
mov
in
loopne
icebp
(bad)
jmp
stos
and
or
ror
xchg
xchg
push
call
cmp
push
and
stos
nop
retfw
fadd
xor
addr16
push
test
mov
push
std
(bad)
(bad)
fldenv
push
pop
sbb
mov
imul
inc
pop
ret
ins
xor
pop
loop
pop
icebp
push
jecxz
xor
adc
lods
enter
pop
adc
fadd
sub
(bad)
(bad)
dec
or
stos
std
cmp
clc
xchg
pop
adc
not
xor
das
clc
inc
dec
fimul
loope
psllq
pop
icebp
(bad)
cmp
push
imul
fnstcw
js
or
bound
(bad)
call
mov
push
dec
popa
retf
jp
cmp
rol
(bad)
(bad)
jg
rcl
movlps
add
pop
or
sub
mov
add
jne
stc
aam
ja
jns
xchg
mov
idiv
jg
inc
dec
xlat
sbb
jl
shr
mov
mov
push
push
jb
xchg
mov
pusha
retf
sbb
xor
in
shl
movs
adc
fucomip
xchg
push
jne
or
adc
addr16
(bad)
call
and
nop
jns
xchg
outs
out
mov
pop
xchg
and
xchg
scas
mov
hlt
(bad)
dec
jno
mov
sub
jmp
and
wrmsr
push
xor
pop
cmp
mov
adc
adc
sub
enter
aaa
cmp
aad
sub
(bad)
call
out
ret
jecxz
mov
sbb
test
sub
sub
fistp
enter
xor
pop
movs
fldenv
jbe
or
(bad)
icebp
icebp
movs
loop
mov
dec
pop
mov
or
cmp
ret
das
inc
mov
iret
pushf
or
fadd
sub
call
pop
ret
jb
and
retf
(bad)
ins
inc
cs
mov
ret
outs
clc
jmp
enter
mov
aad
out
sub
icebp
test
(bad)
jg
cmove
sub
mov
mov
xchg
mov
(bad)
(bad)
jg
mov
add
lods
mov
ins
mov
int
out
fbld
mov
pushf
add
(bad)
(bad)
(bad)
push
outs
(bad)
xchg
int3
bound
in
sbb
les
xlat
fbstp
(bad)
cmp
int
(bad)
(bad)
(bad)
jmp
jno
or
or
xchg
mov
jb
mov
mov
fsubr
(bad)
(bad)
call
loopne
adc
enter
and
or
adc
push
mov
enter
in
icebp
cld
sbb
inc
loopne
pop
sub
mov
(bad)
(bad)
(bad)
jmp
add
inc
lock
loop
std
or
or
mov
iret
mov
(bad)
(bad)
(bad)
jmp
cmps
mov
imul
popf
int3
cmp
fwait
ror
loop
outs
clc
(bad)
jmp
rcr
cmp
js
sub
int
mov
add
pushf
adc
xor
(bad)
(bad)
(bad)
inc
jg
retf
popa
mov
mov
mov
jns
test
inc
sub
imul
(bad)
(bad)
(bad)
push
addr16
outs
sub
mov
adc
into
inc
dec
jg
cli
adc
in
(bad)
(bad)
(bad)
dec
neg
adc
gs
mov
xchg
sbb
fisubr
pop
outs
inc
and
jg
push
mov
shr
xchg
test
sbb
jecxz
mov
jmp
out
(bad)
dec
nop
repz
fdivr
inc
push
adc
push
xchg
cmps
dec
mov
dec
gs
(bad)
(bad)
(bad)
jmp
ds
pop
arpl
or
xchg
std
fsubr
(bad)
(bad)
iret
enter
and
pop
mov
sub
ins
sub
inc
jle
mov
int3
sbb
addr16
cli
test
dec
and
add
in
dec
and
(bad)
mov
(bad)
(bad)
push
and
push
out
pop
mov
mov
aam
or
out
jmp
xor
mov
cmp
call
(bad)
js
and
and
ins
mov
cwde
sbb
icebp
(bad)
jmp
in
dec
clc
sbb
mov
lock
add
nop
ret
jle
jnp
dec
fs
mov
shl
sub
push
lods
mov
jnp
sub
enter
sti
xor
and
pop
push
fidiv
neg
pop
mov
mov
(bad)
(bad)
(bad)
jmp
ret
mov
movs
xchg
in
popa
add
data16
fcmovne
fucom
adc
xor
push
lods
push
repz
movs
int
(bad)
(bad)
jmp
sbb
or
pushf
data16
int
in
int
pop
push
dec
xchg
fstp
mov
(bad)
call
cmp
nop
and
fisttp
out
adc
aam
pop
(bad)
(bad)
(bad)
dec
outs
mov
int3
jmp
hlt
cmp
cmps
and
fmul
adc
fistp
pop
test
(bad)
(bad)
call
mov
sub
cmp
int
add
cs
imul
and
cmp
push
imul
jmp
daa
hlt
mov
lods
push
enter
inc
sar
cmp
js
std
cdq
fst
iret
hlt
rcr
inc
and
push
fcomip
(bad)
call
jp
xchg
pop
js
hlt
or
mov
jae
es
push
into
outs
(bad)
(bad)
(bad)
(bad)
jge
sbb
call
jecxz
mov
leave
retf
(bad)
sub
(bad)
push
jne
jg
je
sar
(bad)
push
mov
int
jae
inc
loop
mov
dec
xor
pop
sub
js
loop
fisttp
loope
in
and
movs
pop
clc
(bad)
(bad)
inc
mov
nop
movs
mov
ds
enter
add
leave
xor
jg
das
and
pop
cwde
ds
jae
div
jo
jg
mov
push
adc
repz
push
mov
mov
fild
call
pop
xchg
cmps
xchg
inc
push
cmp
(bad)
inc
jmp
xchg
sbb
and
sub
je
outs
push
adc
ins
and
push
push
(bad)
movs
mov
test
sti
jmp
call
inc
scas
and
rcr
lods
add
clc
icebp
(bad)
(bad)
(bad)
inc
and
data16
int3
out
cdq
ins
pop
scas
xchg
mov
movs
pushf
jge
push
into
mov
call
xor
int
pop
test
fild
inc
jbe
iret
jge
fisub
(bad)
aas
mov
rol
(bad)
cmp
out
dec
movs
scas
dec
sub
cli
test
xor
stos
sbb
(bad)
mov
pop
idiv
jp
mov
aad
dec
paddusw
sub
(bad)
call
jle
repnz
(bad)
push
cld
stos
push
loope
out
data16
and
retf
jle
jg
dec
repz
and
rcl
loopne
add
jo
pop
sahf
or
sbb
add
outs
clc
jmp
mov
pusha
push
and
xchg
and
jns
push
pop
push
jns
jmp
push
dec
mov
push
mov
jo
mov
test
sbb
sar
(bad)
dec
or
(bad)
push
jo
mov
inc
out
movs
ficom
popa
xor
pop
ret
stc
addr16
fcomip
(bad)
fdivr
rcl
cmp
or
xchg
lods
mov
ds
sbb
(bad)
(bad)
inc
jg
out
cwde
add
xor
out
dec
mov
sub
call
(bad)
(bad)
(bad)
dec
rcr
imul
xchg
and
test
cmp
scas
gs
pop
xchg
fdiv
(bad)
(bad)
(bad)
jmp
mov
enter
and
popf
shl
cs
in
jg
rol
and
aaa
xor
loopne
or
rep
mov
mov
cmp
cwde
(bad)
mov
adc
hlt
test
(bad)
(bad)
call
into
lods
push
fdivr
dec
inc
popa
imul
dec
jmp
not
in
ins
jns
mov
(bad)
iret
mov
xchg
mov
clc
mov
ret
(bad)
jmp
mov
jno
push
call
mov
fdivr
or
ror
push
scas
dec
shl
scas
xchg
(bad)
(bad)
(bad)
mov
and
call
bound
or
cwde
inc
aam
inc
or
jle
cmp
(bad)
dec
fs
dec
cmp
fld
pop
mov
repnz
test
iret
dec
cmp
jle
pop
jne
data16
push
mov
int3
(bad)
(bad)
(bad)
inc
jmp
dec
(bad)
jle
pop
int3
sbb
fst
dec
add
cdq
es
push
fimul
repnz
fs
xchg
mov
aam
push
add
std
sbb
xchg
or
(bad)
ins
std
jg
stos
cld
js
sub
and
mov
(bad)
(bad)
(bad)
mov
inc
push
mov
scas
mov
gs
nop
lea
inc
pop
cld
jb
call
(bad)
(bad)
dec
ret
mov
push
gs
xor
cmp
dec
xchg
nop
jecxz
fcom
(bad)
stc
xor
inc
jo
outs
aam
mov
mov
neg
jb
mov
jnp
sar
(bad)
push
pop
push
mov
out
sub
fnstsw
(bad)
and
lods
jg
(bad)
jmp
or
jno
cmps
int
dec
pop
pop
inc
mov
mov
jno
(bad)
inc
ins
pop
add
imul
jecxz
js
punpckldq
mov
pop
mov
int3
or
in
xchg
jp
inc
sub
sbb
(bad)
push
imul
pop
or
and
jbe
and
and
mov
fisubr
div
leave
push
shl
jmp
in
mov
xor
stc
(bad)
(bad)
(bad)
push
or
push
pop
ins
retf
push
cmp
or
rcr
fbstp
pop
sbb
fild
mov
mov
test
and
push
push
aam
cld
push
or
pop
inc
push
add
(bad)
in
jbe
out
cmp
mov
test
inc
jb
and
jmp
outs
push
call
cmc
xchg
mov
inc
js
mov
aaa
lods
push
ret
mov
inc
mov
mov
int3
sub
or
(bad)
jmp
pop
hlt
add
addr16
sti
lods
sbb
mov
mov
mov
adc
mov
test
xchg
(bad)
dec
in
scas
fisubr
dec
clc
les
mov
pusha
pop
aad
mov
std
inc
mov
and
repz
fimul
push
jne
sahf
(bad)
inc
pop
or
(bad)
(bad)
(bad)
(bad)
fld
adc
ret
icebp
or
arpl
dec
and
out
jae
pushf
fcmovnu
push
inc
jmp
sar
xor
sbb
jo
pop
adc
xchg
pop
inc
aam
ss
(bad)
imul
mov
mov
shl
dec
enter
pop
dec
sub
(bad)
(bad)
(bad)
fsubr
cmps
jno
(bad)
fdivr
mov
and
(bad)
dec
jae
fs
in
clc
pop
loopne
pusha
leave
xchg
sbb
xlat
pop
or
cmp
jae
repz
(bad)
jmp
lods
xor
test
jb
add
jne
aam
mov
lods
xor
push
jne
sti
ss
and
(bad)
(bad)
jmp
jmp
pop
push
arpl
into
xchg
jge
jecxz
jge
imul
(bad)
mov
adc
inc
mov
pop
jb
pop
dec
mov
retf
xchg
mov
(bad)
(bad)
call
out
jle
inc
mov
push
xchg
fsub
dec
mov
repnz
cmc
pop
mov
leave
jmp
cmp
shl
push
or
aad
mov
fwait
popa
sub
pusha
ja
aam
sub
lahf
jno
xchg
test
adc
(bad)
(bad)
jmp
in
cmps
ds
loop
pop
pop
mov
cmp
xchg
jp
mov
mov
and
inc
aaa
xor
test
push
aad
mov
aad
or
call
lahf
lea
ret
xchg
cli
sbb
sbb
fild
lock
in
pushf
(bad)
mov
push
cmp
mov
ss
aad
sbb
adc
movs
out
out
push
(bad)
(bad)
(bad)
jg
lea
hlt
xor
cmp
bound
popa
mov
adc
addr16
mov
inc
push
repz
mov
cli
(bad)
mul
inc
mov
sbb
je
(bad)
(bad)
(bad)
dec
add
add
xor
dec
push
and
sahf
aam
shl
or
leave
jb
outs
and
mov
imul
jnp
imul
scas
and
adc
jg
push
dec
loope
inc
push
std
jmp
outs
cmc
sahf
rcl
mov
fiadd
fst
sub
mov
fwait
movs
jmp
add
sahf
dec
adc
(bad)
add
pop
xchg
(bad)
(bad)
call
enter
(bad)
rcl
xlat
call
cmp
fisttp
ss
(bad)
(bad)
jmp
imul
test
push
sub
cmp
(bad)
(bad)
(bad)
inc
push
cwde
cmp
pop
leave
push
xchg
jns
mov
jecxz
sbb
add
sbb
jmp
push
and
movs
ret
inc
xchg
fdivp
idiv
dec
std
idiv
(bad)
dec
jnp
sbb
addr16
jne
pop
in
cmp
shl
lahf
outs
fsub
gs
(bad)
(bad)
(bad)
inc
xlat
jl
sbb
add
xchg
sbb
xor
mov
scas
cmp
adc
push
fwait
cmp
or
push
xlat
cmp
sbb
test
mov
je
(bad)
mov
cli
scas
add
sbb
cli
mov
ss
add
cmps
(bad)
(bad)
(bad)
call
(bad)
jg
out
add
mov
mov
repnz
sbb
xrelease
inc
stc
mov
ins
dec
push
dec
cmps
xor
sub
mov
xchg
outs
or
(bad)
dec
in
pop
call
ss
and
test
std
call
jnp
mov
xor
dec
dec
mov
xor
push
scas
sbb
mov
std
outs
jo
rcr
mov
pop
(bad)
aad
jp
cmp
jg
sub
cmp
data16
pop
mov
std
(bad)
(bad)
(bad)
jmp
mov
daa
inc
cmp
pop
push
shl
and
xchg
movs
xchg
xchg
icebp
mov
je
retf
(bad)
(bad)
jmp
dec
cli
loopne
data16
xchg
add
xchg
add
sbb
vunpckhpd
sar
jmp
and
loop
adc
icebp
jnp
lahf
xchg
inc
xor
dec
jl
push
(bad)
(bad)
jg
mov
ret
jbe
into
out
cmc
hlt
sbb
aaa
js
cmp
mov
mov
dec
test
jnp
or
fimul
clc
jecxz
sbb
or
scas
mov
loope
sbb
mov
jno
test
enter
and
aaa
sub
sub
hlt
xchg
call
mov
jg
push
mov
adc
push
add
outs
cdq
sbb
jmp
loopne
jae
push
and
(bad)
fwait
cmp
pop
popf
(bad)
(bad)
(bad)
push
adc
push
mov
pop
xor
sahf
or
ret
sub
clc
xchg
xor
xchg
sar
(bad)
(bad)
ffree
or
mov
xchg
ja
dec
push
scas
jo
inc
and
push
pop
adc
stos
mov
scas
out
fs
inc
cmps
in
xchg
leave
aam
xor
cdq
add
shl
repz
cdq
sti
cmps
mov
push
dec
pushf
push
cwde
into
pop
fmul
ja
hlt
(bad)
call
pop
ret
jmp
fdivr
adc
xor
pop
test
retf
call
mov
xor
mov
mov
in
aas
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
push
push
mov
pop
add
pusha
loopne
cmp
mov
dec
clc
push
mov
(bad)
(bad)
inc
mov
popa
sub
scas
call
jge
je
ret
cwde
cmp
or
xor
jecxz
xchg
shl
fild
aam
xchg
jge
daa
gs
dec
(bad)
or
jg
pusha
mov
out
xor
(bad)
mov
mov
sbb
pop
xlat
rcr
mov
aas
rcl
lods
mov
je
(bad)
(bad)
(bad)
call
cwde
push
div
shl
addr16
push
mov
sbb
add
(bad)
(bad)
(bad)
in
xor
mov
and
mov
dec
cmc
xor
retf
(bad)
in
int
mov
sub
add
mov
(bad)
mov
xchg
cmp
movs
mov
int3
xchg
inc
jl
cmps
xlat
nop
mov
in
add
xchg
jmp
jb
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
stos
xchg
fadd
hlt
fwait
pop
test
or
ins
sbb
mov
fcmovnb
ss
mov
lods
cmps
jmp
mov
mov
cmps
mov
daa
adc
dec
test
dec
jae
pop
dec
jg
mov
rcl
adc
test
(bad)
(bad)
(bad)
aas
(bad)
loopne
xor
sti
ficom
mov
xchg
lea
(bad)
(bad)
(bad)
jmp
xchg
out
imul
mov
aad
cdq
cmp
inc
mov
out
outs
js
cld
(bad)
push
(bad)
cmp
dec
call
add
shl
int3
xor
das
add
(bad)
(bad)
call
stos
(bad)
int
push
sub
aas
xor
fisttp
clc
mov
add
(bad)
(bad)
dec
(bad)
cld
jecxz
or
not
adc
mov
xchg
in
fst
test
dec
ja
xchg
inc
retf
mov
shr
jle
and
loope
stos
call
aaa
test
sbb
jmp
(bad)
sahf
adc
pop
or
add
xchg
les
push
cmp
xchg
inc
loope
pop
hlt
jmp
fisub
or
push
aas
xchg
cmp
int
cli
jmp
shr
mov
fwait
int
sahf
mov
(bad)
(bad)
jg
pop
mov
xor
dec
jl
and
jae
cli
inc
adc
shl
gs
and
sub
jbe
arpl
add
xchg
mov
mov
shr
pop
mov
dec
fmul
mov
(bad)
call
popf
mov
fnstcw
(bad)
xchg
test
shl
dec
push
std
dec
inc
dec
ins
aaa
and
pop
adc
int
pop
aas
adc
(bad)
fcomip
test
and
fs
mov
xchg
stc
lea
lahf
movs
nop
in
sub
or
aaa
mov
jmp
in
fld
int3
pop
inc
mov
dec
push
mov
(bad)
jg
push
es
jns
add
sti
mov
push
dec
jo
pop
and
mov
dec
ins
in
(bad)
(bad)
(bad)
mov
mov
dec
push
add
pop
xlat
mov
in
xchg
sbb
cli
jnp
dec
call
or
inc
cmps
add
mov
sbb
fst
inc
ins
ret
xchg
imul
not
(bad)
(bad)
(bad)
inc
test
jge
cmp
cmps
cwde
lods
mov
pusha
xchg
jno
push
jp
test
pop
mov
jge
in
mov
lods
jle
test
(bad)
into
xor
mov
pushf
mov
stos
and
(bad)
jmp
mov
add
sub
addr16
cmc
push
das
ds
das
mov
in
out
push
pop
adc
pop
sti
pop
(bad)
(bad)
(bad)
fistp
test
jmp
sub
shr
outs
jl
aas
pop
std
(bad)
(bad)
call
cmp
pop
int
mov
aas
movntq
lds
(bad)
(bad)
mov
mul
cmp
leave
xor
inc
cdq
cmc
xor
data16
sti
or
(bad)
call
cdq
fmul
or
ins
mov
push
pusha
imul
call
inc
hlt
(bad)
(bad)
(bad)
jmp
outs
xor
xor
dec
es
movs
popf
and
aaa
rcr
lods
movs
shr
repz
(bad)
(bad)
dec
or
dec
push
jmp
jmp
lds
mov
xor
int3
xchg
jle
pop
std
ror
xchg
stc
hlt
sub
ror
and
gs
cdq
adc
(bad)
(bad)
cmp
retf
jmp
pop
pop
stos
push
out
mov
shl
inc
dec
xchg
(bad)
xchg
repnz
dec
(bad)
inc
sub
out
(bad)
fiadd
sahf
xchg
adc
mov
ins
or
cmc
(bad)
(bad)
(bad)
sub
retf
js
xor
cdq
fs
pop
jle
arpl
pop
int3
call
(bad)
xchg
jns
in
mov
retf
lds
fisub
(bad)
(bad)
push
test
(bad)
neg
popa
fbld
push
cmp
(bad)
(bad)
call
and
inc
les
outs
(bad)
lock
adc
inc
fst
stos
outs
shl
std
inc
pop
inc
lea
mov
push
mov
or
mov
(bad)
call
push
ret
lds
sub
cdq
les
or
inc
mov
jecxz
scas
pop
mov
push
mov
xchg
rol
jae
loopne
sbb
xor
mov
int
jl
ror
test
retf
jno
mov
(bad)
call
imul
sub
leave
mov
xor
or
pop
(bad)
std
(bad)
(bad)
(bad)
jmp
jnp
inc
adc
xor
repz
sysexit
add
ret
xor
mov
cli
jle
(bad)
mov
cs
fadd
inc
cmc
mov
in
and
fxch
mov
add
(bad)
jmp
retf
(bad)
es
stos
dec
std
dec
cmp
nop
sub
movs
jle
aas
lock
mov
call
push
ficomp
dec
pusha
jle
mov
lods
push
loopne
scas
loopne
mov
jo
sbb
idiv
push
cmp
dec
imul
lea
stos
stos
(bad)
(bad)
call
mov
pop
lods
pop
fcmovnb
pusha
jo
xchg
fld
pusha
(bad)
sub
rcr
cld
(bad)
(bad)
(bad)
mov
jnp
cmp
xor
imul
dec
mov
call
push
ins
and
mov
xchg
sbb
mov
rcr
fs
sbb
(bad)
mov
jns
lahf
aas
pop
scas
cmc
push
cmp
std
repnz
out
enter
lea
mov
cld
xchg
aad
pop
sub
cmc
dec
cmc
pop
(bad)
(bad)
(bad)
call
stos
xchg
retf
jns
lods
test
sub
test
rcr
(bad)
(bad)
jmp
test
xchg
adc
fxch
fild
push
xchg
mov
mov
pop
cmp
pop
mov
dec
popa
and
rcl
out
pop
pop
mov
fistp
(bad)
shl
jae
mov
(bad)
(bad)
jmp
out
not
mov
out
lock
loope
addr16
rol
loop
(bad)
(bad)
jmp
ret
xchg
and
das
pop
lock
add
cli
cld
(bad)
jg
xchg
aam
xchg
push
stos
int3
repz
repnz
jle
mov
call
sbb
outs
pop
aas
jne
jae
mov
jo
ret
or
(bad)
(bad)
(bad)
jmp
shr
(bad)
cmp
inc
push
rcl
fwait
push
cmps
(bad)
mov
(bad)
ds
scas
inc
cmp
jno
lahf
push
adc
push
sub
dec
gs
dec
lea
mov
lds
pop
mov
push
and
pop
add
and
dec
and
push
enter
(bad)
sbb
jbe
mov
or
jmp
stc
mov
xchg
or
test
int3
mov
(bad)
(bad)
mov
xchg
dec
ret
into
lahf
dec
outs
clc
mov
ja
imul
jbe
loope
adc
in
fdiv
(bad)
(bad)
jmp
movs
sub
aas
pop
or
cwde
hlt
adc
mov
(bad)
mov
call
mov
dec
outs
shl
xor
out
xchg
mov
sub
(bad)
(bad)
jmp
mov
lds
push
cld
mov
cli
mov
sbb
and
out
cmps
xchg
popa
mov
jmp
(bad)
(bad)
(bad)
jmp
xlat
aas
inc
adc
(bad)
(bad)
nop
or
and
cmp
mov
(bad)
(bad)
jmp
mov
and
es
fsubrp
push
in
xor
jle
daa
pop
outs
cmps
cmp
inc
inc
icebp
jmp
sub
(bad)
(bad)
mov
pop
das
pop
mov
and
adc
lea
mov
(bad)
jmp
adc
imul
ja
sub
cmp
rcr
mov
mov
mov
xchg
aaa
mov
(bad)
xor
jo
(bad)
(bad)
push
sbb
mov
out
call
jmp
dec
hlt
std
sub
push
mov
add
(bad)
fld
mov
btc
jb
pop
out
sub
(bad)
push
scas
fild
shr
out
ja
pop
push
cmps
xchg
push
cmp
(bad)
(bad)
inc
loopne
(bad)
in
adc
movs
or
test
inc
mov
sub
push
rcr
adc
in
xchg
mov
or
es
icebp
sub
scas
icebp
hlt
call
jmp
icebp
or
fld
(bad)
cwde
xor
cs
imul
mov
std
(bad)
call
and
iret
enter
sbb
add
xchg
add
lods
pop
mov
(bad)
(bad)
(bad)
mov
mov
test
in
and
mov
dec
test
pop
pop
ins
jmp
call
movs
aas
cmp
jae
or
out
mov
pop
cmp
(bad)
(bad)
dec
shl
rol
pushf
into
pushf
(bad)
in
call
neg
sbb
sar
(bad)
(bad)
inc
pushf
fcom
jge
std
ins
sub
call
fdiv
sbb
lock
fwait
and
mov
(bad)
jmp
jecxz
ret
scas
xchg
xor
or
inc
clc
iret
adc
mov
add
and
mov
hlt
into
test
outs
iret
adc
jecxz
adc
adc
aaa
shl
es
mov
xor
(bad)
call
ret
je
hlt
fs
xchg
push
enter
jb
cs
jbe
aaa
aas
add
(bad)
out
mov
pushf
xchg
les
jl
mov
(bad)
(bad)
inc
sub
adc
and
push
xor
and
xchg
iret
pusha
jnp
sub
(bad)
out
cli
xor
cli
addr16
mov
mov
sbb
cmp
(bad)
call
pop
bnd
xchg
addr16
jns
fidivr
mov
mov
mov
rcr
mov
int3
dec
retf
enter
call
mov
hlt
xchg
(bad)
(bad)
(bad)
push
pop
and
adc
popa
or
repnz
loope
xor
jmp
jecxz
mov
outs
inc
push
(bad)
(bad)
(bad)
push
pop
imul
inc
inc
repz
jo
in
jecxz
lods
leave
mul
cdq
xlat
repz
and
(bad)
(bad)
cli
inc
sbb
(bad)
and
(bad)
push
pop
aaa
pop
pop
xor
test
ds
sbb
mov
pop
dec
arpl
addr16
sub
outs
out
pop
xor
mov
(bad)
(bad)
(bad)
inc
push
int
jne
jecxz
fstp
cmp
enter
jl
dec
fcom
pop
aam
stos
xchg
call
cld
cs
sbb
cld
push
sbb
imul
repnz
cs
sbb
dec
mov
pop
shl
mov
push
data16
sbb
(bad)
(bad)
jmp
xor
icebp
adc
jl
repz
push
mov
into
bound
xchg
xchg
sbb
scas
push
test
(bad)
call
and
dec
clc
sub
mov
stc
mul
fbstp
xlat
sub
out
jb
(bad)
(bad)
(bad)
inc
jnp
adc
nop
out
call
fpatan
cmp
in
inc
shr
or
(bad)
jl
push
(bad)
(bad)
(bad)
dec
loopne
mul
cmp
cs
xchg
sub
fs
dec
cmc
shr
inc
test
mov
sub
stc
adc
fwait
lahf
sub
push
jae
imul
mov
lock
out
movs
mov
pop
outs
(bad)
(bad)
(bad)
jmp
retf
mov
dec
stc
mov
dec
out
pop
mov
pop
into
mov
add
(bad)
jmp
(bad)
hlt
ret
dec
cmp
xchg
mov
jae
xchg
cmps
pop
sti
add
(bad)
(bad)
push
pusha
mov
mov
pop
adc
adc
cmp
sub
out
mov
xchg
in
sbb
out
test
(bad)
(bad)
call
loope
sub
sbb
dec
loope
and
pop
scas
mov
inc
push
xchg
(bad)
(bad)
(bad)
jmp
cmc
sbb
xor
mov
xchg
add
cmc
dec
jl
fsin
(bad)
jmp
(bad)
(bad)
push
mov
in
(bad)
outs
mov
mov
jns
data16
(bad)
(bad)
(bad)
dec
into
xchg
in
mov
div
in
divps
xchg
ins
mov
add
aaa
mov
call
in
lods
mov
inc
jmp
fdivr
ror
ds
loopne
xor
out
cld
dec
add
cmp
repz
movs
xor
jb
push
cld
(bad)
call
(bad)
add
in
enter
fadd
jne
inc
ins
mov
ins
call
jg
(bad)
call
(bad)
fcmovnbe
inc
shl
push
out
cmc
rol
(bad)
clc
(bad)
jg
or
fcom
mov
jle
pop
lods
repz
mov
(bad)
(bad)
jmp
(bad)
fadd
fsub
xlat
sbb
or
mov
cmp
imul
jmp
adc
lea
xchg
popa
mov
ja
enter
(bad)
das
cli
call
jmp
pusha
aam
mov
push
call
adc
div
movs
mov
aaa
addr16
in
cmp
mov
pop
lock
jle
mov
(bad)
shl
and
jp
add
ds
cmp
ja
jae
imul
xchg
jo
and
pop
out
xor
(bad)
mov
call
sbb
int3
adc
mov
(bad)
cwde
pop
xor
stc
jmp
or
pop
stc
out
std
(bad)
(bad)
inc
xchg
push
cmps
addr16
jge
or
push
add
jb
push
fisttp
cwde
mov
add
call
and
xchg
xchg
push
iret
xor
sahf
pop
sbb
frstor
(bad)
call
cld
mov
jge
arpl
ss
mov
outs
jge
nop
loopne
(bad)
dec
scas
test
mov
sbb
sub
(bad)
(bad)
(bad)
mov
mov
into
add
add
xor
fistp
sbb
shr
jmp
mov
das
mov
jno
mov
test
mov
jecxz
fldz
lods
or
jmp
das
add
lock
sahf
xchg
iret
inc
call
(bad)
dec
mov
mov
lahf
int
adc
cmc
jmp
push
mov
in
fcomp
(bad)
(bad)
(bad)
jmp
icebp
mov
pop
dec
sti
lods
mov
dec
pushf
pop
sahf
ret
cld
cmps
cmp
inc
mov
adc
js
(bad)
(bad)
(bad)
inc
or
mov
xor
dec
in
mov
add
and
mov
cmps
jg
mov
hlt
hlt
(bad)
(bad)
(bad)
jmp
push
push
or
push
xchg
or
fst
push
addr16
add
call
xlat
cmovge
icebp
(bad)
js
dec
ret
sub
mov
mov
aad
cli
mov
enter
(bad)
dec
cmp
fisttp
cli
lods
push
test
hlt
out
mov
and
movs
mov
stos
ds
pop
cmps
push
ss
fcmovu
imul
mov
xor
clc
pop
push
pop
(bad)
(bad)
mov
push
cmc
imul
adc
test
(bad)
retf
mov
pop
icebp
call
in
adc
movs
or
sbb
leave
or
mov
push
or
das
mov
xor
test
(bad)
mov
mov
cmp
push
mov
mov
clc
mov
(bad)
(bad)
(bad)
jb
xchg
leave
push
gs
call
pop
mov
retf
push
fwait
ja
pop
(bad)
retf
sub
inc
mov
jmp
(bad)
scas
or
(bad)
icebp
retf
cmps
lods
out
push
es
movs
cli
test
jae
push
mov
jns
push
mov
mov
pop
jecxz
sub
(bad)
xor
in
(bad)
(bad)
call
sahf
pushf
xchg
jns
xor
cmp
pop
adc
add
ds
jg
ins
outs
push
(bad)
push
scas
(bad)
(bad)
(bad)
call
dec
lea
int3
stc
sub
cdq
sar
mov
xchg
(bad)
jg
(bad)
(bad)
add
iret
enter
fs
mov
loopne
cdq
loop
jne
ja
in
stos
jl
adc
add
ror
mov
fcomp
pop
and
dec
lods
outs
xchg
lods
call
loop
call
(bad)
(bad)
(bad)
(bad)
jl
pusha
retf
dec
inc
mov
hlt
jnp
push
sbb
mov
fisttp
jg
ja
pop
cld
(bad)
(bad)
(bad)
mov
imul
sub
mov
cmp
jmp
mov
jnp
lds
jg
mov
cmp
mov
clc
inc
jne
mov
cmp
iret
retf
push
clc
(bad)
(bad)
jmp
adc
push
enter
and
scas
mov
daa
scas
cld
jp
adc
(bad)
(bad)
mov
test
(bad)
stc
adc
out
into
cmps
push
mov
(bad)
(bad)
(bad)
call
gs
jp
pop
sbb
push
test
test
fmul
mov
out
mov
mov
(bad)
cmp
(bad)
lods
pop
popf
xor
(bad)
(bad)
call
xchg
jp
ins
ins
add
and
mov
(bad)
out
fs
adc
or
fmul
pop
int
sub
daa
jg
inc
push
and
clc
push
(bad)
(bad)
(bad)
(bad)
fst
adc
std
mov
mov
inc
dec
dec
push
aas
mov
(bad)
push
(bad)
push
sbb
cmp
out
mov
das
sar
stos
jmp
or
mov
or
(bad)
(bad)
(bad)
fisubr
ret
dec
mov
test
jne
and
cld
mov
mov
adc
(bad)
in
(bad)
cld
dec
push
sbb
std
icebp
mov
push
aas
push
jge
pop
test
adc
ss
not
mov
das
sar
mov
int3
pop
das
mov
or
fnstcw
out
test
inc
fwait
(bad)
gs
fst
push
idiv
scas
es
xchg
(bad)
(bad)
(bad)
call
les
mov
inc
outs
cdq
hlt
jne
xchg
inc
loope
sbb
mov
jno
pusha
dec
jl
(bad)
(bad)
call
cwde
inc
xchg
adc
lea
xchg
mov
push
add
inc
push
or
inc
mov
arpl
(bad)
fisttp
es
mov
stc
and
rol
repz
(bad)
(bad)
(bad)
(bad)
mov
sub
cmps
out
jbe
mov
pop
loope
imul
pop
mov
cmps
cli
(bad)
call
in
inc
sbb
cmp
(bad)
fcomp
lea
jmp
lock
jae
cmp
sbb
mov
cmp
jo
dec
aaa
lods
cld
aaa
pop
add
(bad)
rcr
sbb
nop
ja
(bad)
(bad)
inc
sahf
hlt
xchg
dec
movs
inc
inc
and
xchg
aaa
mov
ret
scas
fxch
out
cmp
into
(bad)
(bad)
(bad)
dec
and
movs
std
test
push
call
jmp
push
sbb
(bad)
and
(bad)
mov
lods
nop
adc
inc
or
jae
push
push
and
(bad)
(bad)
(bad)
inc
movs
pop
call
ds
loope
ja
xchg
(bad)
jmp
sti
pop
jp
pop
xor
sbb
push
mov
mov
fisub
jns
xchg
add
mov
mov
ret
dec
pushf
jb
out
and
and
pop
inc
(bad)
fisttp
cmp
or
(bad)
(bad)
push
ins
aas
js
ja
repz
rcr
push
xor
loopne
push
xor
jnp
das
mov
add
or
cmp
xchg
(bad)
cli
dec
cmc
sbb
repz
adc
lods
fisttp
ins
movs
jl
nop
imul
aaa
dec
adc
popf
ins
mov
sbb
(bad)
mov
jae
mov
add
aam
inc
adc
imul
sbb
sub
xor
adc
add
sbb
ss
ja
(bad)
scas
lods
and
xchg
cmp
retf
cmp
call
and
ds
add
or
into
stc
in
je
jp
out
jg
movs
popa
push
ins
push
std
(bad)
push
test
jp
sub
cmp
and
mov
loope
retf
aad
(bad)
dec
and
pushf
mov
sbb
xor
xchg
pop
xchg
sub
sbb
sub
fs
in
push
dec
and
bound
mov
popf
mov
add
(bad)
(bad)
push
xchg
mov
(bad)
mov
cmps
popf
daa
mov
nop
pop
pop
inc
repz
outs
in
add
pop
(bad)
(bad)
out
clc
push
fsubr
mov
inc
aad
mov
ds
ret
and
mov
sub
dec
xor
mov
xchg
inc
mov
jg
mov
and
add
lds
xlat
cwde
pop
jmp
xor
cmp
(bad)
mov
dec
add
add
retf
xchg
adc
mov
mov
dec
in
je
cmc
daa
xor
sub
lods
arpl
dec
pop
mov
mov
inc
shr
pop
mov
repnz
xchg
add
iret
les
xchg
or
(bad)
(bad)
(bad)
mov
cwde
test
inc
sbb
xchg
(bad)
dec
movs
push
rcr
pop
jnp
fisttp
sahf
add
(bad)
dec
daa
push
enter
inc
lods
push
jg
dec
mov
and
jb
(bad)
mov
sbb
int
inc
mov
mov
and
or
ror
cmps
fcomip
xchg
mov
mov
add
loop
add
mov
(bad)
dec
add
inc
imul
xlat
adc
mov
mov
aad
mov
fcomi
popf
aas
mov
(bad)
(bad)
jmp
mov
jno
jno
add
gs
mov
sub
inc
mov
pop
icebp
adc
(bad)
(bad)
call
iret
xchg
neg
mov
or
imul
xchg
js
jo
mov
adc
(bad)
(bad)
jmp
mov
adc
or
cli
mov
sbb
sub
jae
test
sar
loopne
push
mov
pop
lods
mov
mov
fist
jae
movs
lods
xor
imul
inc
pop
movs
rol
mov
or
sbb
mov
mov
data16
sar
movs
sbb
(bad)
call
ficomp
mov
aas
inc
jo
in
xchg
dec
cli
enter
jns
(bad)
(bad)
mov
sbb
hlt
cli
retf
imul
cmp
mov
(bad)
shl
je
push
push
xchg
jmp
push
fidiv
jecxz
loopne
cmp
xor
imul
test
loop
sub
(bad)
jmp
push
scas
cli
jp
neg
cmc
add
or
je
xchg
iret
xchg
sub
lds
psubd
call
scas
push
push
lods
dec
ret
sti
(bad)
call
adc
dec
jge
ss
adc
dec
inc
ss
aam
mov
push
stc
(bad)
jmp
xchg
icebp
je
xor
fld
push
mov
imul
xchg
ja
(bad)
push
ret
and
push
fsub
(bad)
(bad)
(bad)
(bad)
js
aad
lods
dec
jnp
push
neg
fld
je
dec
cmovbe
mov
test
(bad)
(bad)
(bad)
(bad)
jns
(bad)
mov
push
sti
mov
ins
xor
in
fist
retf
(bad)
(bad)
(bad)
(bad)
dec
push
mov
mov
mov
not
lea
xchg
aam
sub
(bad)
(bad)
inc
pop
push
(bad)
ficom
out
mov
sbb
sub
sub
(bad)
(bad)
dec
xor
push
and
inc
out
pop
adc
mov
(bad)
mov
mov
sub
out
mov
movs
jnp
lock
mov
clc
mov
maxps
fsubr
call
ret
xchg
mov
pop
push
scas
test
aad
lock
sar
xchg
mov
xor
call
dec
add
pop
inc
sub
mov
fdivr
fistp
mov
adc
gs
jecxz
shr
hlt
bound
add
inc
scas
sub
jmp
push
ds
inc
fmul
into
xlat
lock
fdivr
pop
mov
ja
dec
cli
call
ficom
(bad)
dec
inc
inc
idiv
(bad)
fisttp
jecxz
and
inc
movs
adc
and
test
jecxz
sub
or
(bad)
(bad)
dec
add
inc
inc
gs
inc
nop
adc
ss
clc
popf
ror
pop
push
mov
jmp
shr
(bad)
(bad)
(bad)
out
dec
rol
cli
cmp
pop
cmc
fcom
imul
addr16
scas
mov
popf
sar
mov
(bad)
(bad)
mov
scas
movhps
jmp
arpl
pand
dec
aas
sub
xor
inc
movs
xchg
test
jecxz
shr
push
out
sub
mov
jg
push
aaa
fist
ror
xchg
jb
mov
pusha
ins
(bad)
mov
lea
cld
(bad)
(bad)
inc
or
out
inc
bound
push
int3
add
(bad)
push
mov
mov
les
sbb
outs
push
mov
ret
sbb
mov
xor
aas
mov
(bad)
(bad)
jmp
leave
xchg
or
pop
sub
sbb
(bad)
xor
pop
mov
imul
or
(bad)
cmp
daa
sbb
inc
sbb
add
fdivr
sub
(bad)
call
nop
xchg
mov
pop
test
cmps
mov
nop
lea
(bad)
data16
or
mov
gs
(bad)
(bad)
call
in
mov
adc
or
in
imul
lods
adc
jno
es
movs
jp
out
cs
call
int
sahf
cwde
(bad)
(bad)
(bad)
call
mov
xor
popfw
aad
cwde
outs
dec
fldcw
sub
mov
pop
sti
(bad)
jmp
cli
mov
jg
repz
mov
push
mov
sti
in
(bad)
(bad)
call
ficomp
mov
xchg
jns
mov
(bad)
das
cmps
adc
cld
sub
in
jge
push
jmp
add
hlt
cmovne
xchg
fiadd
sub
or
nop
dec
call
sti
jmp
repnz
add
(bad)
push
std
jb
outs
pop
jl
es
mov
fnsave
xor
js
push
inc
xchg
and
cmc
pusha
or
imul
mov
test
push
(bad)
(bad)
(bad)
cmp
and
aas
test
or
jge
mov
mov
(bad)
jmp
sub
sbb
int3
pushf
rcl
lahf
(bad)
loope
add
aad
and
les
xchg
sbb
(bad)
arpl
(bad)
(bad)
push
mov
ret
movs
fild
leave
push
cs
pusha
adc
adc
inc
and
(bad)
cmp
in
xchg
adc
cmc
adc
add
ja
add
inc
shl
lea
pop
les
icebp
sub
jae
das
enter
ins
stc
addr16
or
sbb
push
or
(bad)
(bad)
inc
movs
cmp
jo
xor
clc
mov
sbb
push
cld
push
enter
int
ds
fcmovbe
push
push
cwde
mov
test
rcl
(bad)
(bad)
call
std
ss
and
inc
pop
mov
pop
sub
shr
popa
inc
jle
sub
mov
(bad)
(bad)
(bad)
cmp
gs
pop
ins
(bad)
mov
push
pop
je
std
pusha
inc
ret
jmp
(bad)
jmp
mov
mov
mov
(bad)
mov
imul
add
cmp
sbb
stos
das
(bad)
mov
mov
push
ja
(bad)
adc
cmps
xchg
les
xor
cmp
mov
mov
xor
mov
faddp
pop
jbe
in
inc
sbb
stc
cmp
lock
(bad)
push
and
retf
jno
mov
es
aas
nop
jo
(bad)
call
mov
sbb
adc
inc
push
dec
les
sub
mov
mov
mov
sbb
pop
add
lea
stc
mov
adc
popf
pop
in
or
jmp
or
pop
and
push
test
jne
pop
in
ja
xor
(bad)
(bad)
call
fisttp
in
jbe
or
in
mov
sub
sub
int3
xor
jmp
les
dec
(bad)
jecxz
jmp
sar
push
cs
cmp
inc
(bad)
cmp
ffreep
pop
pop
outs
mov
mov
shr
sbb
(bad)
call
fstp
loopne
mov
jns
pop
ror
rcr
jge
sbb
out
test
jp
inc
cmp
addr16
cmp
jbe
sub
add
push
std
(bad)
jg
ret
mov
mov
sub
out
add
push
mov
(bad)
cmp
dec
pop
push
push
xchg
add
add
add
popa
div
(bad)
dec
mov
add
pop
jns
ins
icebp
push
cmp
(bad)
(bad)
call
cmp
or
(bad)
jge
mov
xlat
(bad)
jb
cmc
sub
jg
jl
mov
in
outs
cli
mov
jmp
jg
adc
pop
inc
cld
inc
cmp
cld
idiv
jmp
cs
loopne
pop
xchg
sub
sub
push
mov
arpl
(bad)
(bad)
inc
fld
rol
pavgw
or
add
loop
(bad)
(bad)
mov
mov
add
push
pop
es
fs
popa
in
shl
mov
or
push
mov
pop
popa
loope
dec
rcr
jecxz
mov
adc
(bad)
(bad)
call
mov
(bad)
pop
int3
sbb
out
pop
(bad)
lds
and
in
inc
adc
aaa
data16
pop
sub
push
stos
jmp
fnsave
push
ins
call
sbb
push
fcomi
push
jmp
call
mov
cli
mov
jge
jecxz
(bad)
adc
mov
push
call
push
popa
inc
push
fsubr
mov
jle
(bad)
push
and
push
iretw
cmp
shl
(bad)
jmp
inc
dec
mov
mov
lahf
lods
neg
(bad)
dec
lock
adc
mov
iret
clc
daa
jmp
xor
dec
cmc
(bad)
(bad)
jmp
push
stos
adc
inc
cmc
jl
xchg
cmc
sbb
adc
out
out
out
dec
inc
(bad)
(bad)
mov
ds
inc
or
call
jl
cs
jmp
aam
(bad)
(bad)
(bad)
jmp
cld
sub
inc
cmp
retf
mov
stos
cwde
call
cli
das
pop
mov
(bad)
(bad)
call
mov
add
xor
and
shl
mov
popa
js
sbb
xchg
jmp
imul
adc
xor
icebp
inc
xchg
jnp
dec
push
cmp
sub
push
mov
cmp
dec
push
cld
(bad)
call
ins
test
xlat
pop
mov
mov
mov
out
push
(bad)
(bad)
mov
lock
pop
out
cmp
sbb
je
push
mov
xchg
in
cwde
pushf
fild
in
cwde
cwde
add
xchg
sub
cmp
inc
out
push
stc
adc
stos
push
sbb
in
test
fdiv
mov
(bad)
(bad)
(bad)
jge
aaa
nop
movs
stc
sub
sub
js
bnd
pop
icebp
call
or
(bad)
jl
cmp
add
(bad)
stos
retf
mov
cwde
icebp
std
scas
(bad)
shl
adc
test
retf
or
call
fucomi
call
pop
jmp
sbb
pusha
cld
(bad)
(bad)
inc
test
mov
aad
movs
add
jmp
add
ins
cmps
jae
jecxz
outs
push
iret
mov
fdiv
mov
dec
ss
mov
mov
lods
jnp
out
cli
(bad)
call
or
or
push
(bad)
jmp
and
(bad)
(bad)
(bad)
faddp
xchg
cwde
mov
adc
jo
dec
dec
dec
inc
cmp
call
dec
mov
push
aad
adc
(bad)
inc
pop
push
lods
or
out
pop
mov
test
adc
mov
add
ss
scas
or
repz
mov
mov
inc
add
mov
fwait
test
mov
fdiv
lea
jl
cmps
mov
push
push
mov
cdq
(bad)
(bad)
jg
repnz
or
ins
inc
mov
fist
inc
clc
das
add
scas
(bad)
jl
(bad)
call
and
or
and
fidiv
arpl
push
lea
jmp
in
jge
mov
out
mov
xchg
rcr
dec
and
lods
cmp
sbb
not
cmc
popa
add
dec
jo
sbb
bound
(bad)
(bad)
call
jbe
out
mov
repz
shr
cld
sub
mov
mov
(bad)
(bad)
dec
test
cmp
fild
mov
scas
jmp
jg
ins
jge
mov
ds
mov
add
js
dec
mov
je
mov
imul
add
mov
pop
xchg
pushf
jns
cmp
jg
cli
retf
fimul
mov
daa
mov
test
xor
sbb
push
mov
mov
dec
out
je
jge
aad
test
dec
fsub
adc
pop
fisub
jne
inc
(bad)
(bad)
(bad)
mov
dec
jbe
daa
jl
das
scas
dec
gs
fdiv
imul
jnp
xchg
jns
inc
aad
sbb
(bad)
(bad)
inc
push
repz
mov
xchg
into
or
pop
ins
popf
pop
fs
es
movs
mov
(bad)
cmps
(bad)
(bad)
jmp
pushf
bound
pop
movs
pop
jmp
cli
dec
and
fdiv
out
call
lahf
push
adc
mov
les
pop
push
ins
popa
sub
xor
ret
adc
mov
dec
iret
pop
ins
shl
xchg
int3
fsubr
adc
test
xchg
jge
pop
fs
fsubr
pushf
fidivr
in
sub
xchg
cmps
test
inc
or
push
es
push
xlat
mov
jmp
sub
sti
arpl
jecxz
test
pusha
shl
enter
jmp
and
icebp
pop
dec
pop
mov
dec
fcmovu
sti
hlt
push
jg
cmp
inc
fwait
add
(bad)
fcomi
lahf
push
test
mov
dec
popa
pop
sub
mov
rcr
sub
(bad)
outs
dec
inc
inc
mov
add
sbb
push
lods
in
hlt
(bad)
lods
lds
and
sbb
leave
adc
out
repnz
push
mov
fist
mov
(bad)
(bad)
mov
jno
pop
jmp
mov
nop
push
leave
ins
jno
movs
add
aad
fld
call
jmp
out
(bad)
push
mov
mov
dec
sbb
(bad)
scas
repz
push
sahf
(bad)
cmp
in
add
sbb
jle
(bad)
(bad)
jmp
push
jmp
cmc
mov
int3
pop
pop
or
not
pop
sbb
jnp
(bad)
(bad)
(bad)
inc
stos
pop
rcr
inc
mov
jle
push
fisttp
jmp
jge
add
push
or
sub
push
loopne
loop
pop
into
or
sub
mov
(bad)
(bad)
(bad)
dec
mov
arpl
sbb
test
or
or
(bad)
sti
sub
mov
scas
clc
jmp
lahf
loopne
(bad)
push
imul
jb
stc
(bad)
(bad)
inc
pop
cmp
retf
movs
mov
out
mov
xchg
jmp
cmp
imul
ret
mov
pop
push
mov
mov
idiv
(bad)
(bad)
jmp
hlt
mov
add
outs
dec
int
sti
sub
shl
push
pop
iret
mov
push
mov
lock
mov
cmp
int3
add
sti
into
(bad)
(bad)
(bad)
call
sub
mov
ficomp
cmp
adc
mov
(bad)
dec
inc
daa
test
inc
icebp
aad
mov
or
push
dec
je
scas
cli
mov
mov
nop
xchg
push
mov
mov
enter
dec
hlt
call
in
call
or
stc
(bad)
loopne
(bad)
(bad)
jmp
sar
inc
fdivr
rcr
mov
arpl
lods
xor
icebp
(bad)
jg
add
pop
mov
mov
push
pop
mov
clc
(bad)
mov
repnz
xchg
sub
cmp
dec
and
(bad)
jmp
mov
jmp
fadd
mov
push
ret
jg
(bad)
(bad)
cmp
arpl
jl
sahf
jne
ror
push
dec
ins
es
js
clc
xchg
xchg
dec
mov
(bad)
push
cli
cmps
ret
mov
fimul
mov
inc
dec
rcl
xchg
mov
out
sar
(bad)
jmp
inc
hlt
scas
jnp
icebp
or
ins
jns
pop
xchg
rcpps
jl
mov
jge
and
cmp
jmp
ret
out
imul
fnstenv
out
outs
imul
dec
xor
(bad)
(bad)
mov
push
pop
das
fwait
clc
cdq
xor
repnz
sub
(bad)
mov
stc
fsub
imul
ins
push
test
mov
ret
aaa
mov
call
jmp
iret
ss
mov
rcr
pushf
ss
or
lds
fdiv
sbb
loopne
mov
push
mov
xlat
xor
push
(bad)
call
loopne
in
pop
aas
or
mov
daa
sti
and
(bad)
(bad)
push
adc
xor
sti
das
mov
jge
pop
jge
data16
gs
in
cmp
(bad)
(bad)
jmp
and
lock
mov
xchg
loop
push
push
jle
push
data16
call
in
(bad)
(bad)
jmp
sti
mov
retf
neg
les
das
xchg
imul
retf
jb
sub
(bad)
(bad)
(bad)
jge
pop
mov
leave
adc
lds
pop
into
mov
jb
inc
sbb
sti
cmp
sbb
(bad)
(bad)
fldenv
js
rcr
aam
in
sahf
mov
dec
daa
mov
xadd
(bad)
(bad)
call
ret
jae
(bad)
mov
or
mov
mov
adc
ror
(bad)
(bad)
(bad)
(bad)
jmp
ins
or
jmp
sbb
scas
add
cmc
dec
pusha
pop
add
add
gs
scas
in
(bad)
xchg
and
into
xchg
push
inc
repz
dec
adc
std
es
mov
add
in
bound
add
call
mov
fdiv
sti
movs
cmp
in
pop
mov
sub
cmp
jmp
cmp
push
add
or
sbb
gs
jle
cli
(bad)
(bad)
(bad)
call
stos
loopne
jg
repz
add
ins
in
dec
sti
fnstenv
(bad)
iret
mov
ins
arpl
push
jmp
sti
(bad)
in
movs
test
cli
in
stc
out
(bad)
dec
and
dec
inc
dec
cmp
imul
in
imul
dec
push
cli
(bad)
push
inc
pop
and
push
daa
ss
or
fdivp
(bad)
(bad)
jmp
jmp
mov
add
(bad)
jl
lods
repnz
mov
(bad)
jmp
repz
push
mov
test
outs
or
jb
xchg
pop
neg
movs
sbb
(bad)
(bad)
call
out
daa
xchg
sub
lock
rcl
or
and
pop
add
jmp
push
sahf
add
add
clc
pop
data16
aam
loop
call
clc
push
push
call
mov
and
xor
(bad)
jmp
in
xlat
push
(bad)
or
dec
lds
mov
clc
out
retf
shr
mov
dec
mov
ins
mov
stos
(bad)
aad
dec
inc
xor
rol
(bad)
(bad)
(bad)
jmp
icebp
in
or
es
test
push
scas
and
in
mov
sbb
(bad)
cmp
loop
icebp
je
push
int
int
fstp
xor
(bad)
(bad)
jg
imul
loope
sbb
mov
cmp
fs
imul
stc
add
pop
es
mov
(bad)
fcomip
push
jg
lahf
in
adc
fwait
test
imul
jmp
adc
xchg
movs
clc
idiv
push
mov
jg
sub
cmp
mov
shl
add
lds
cmp
xor
mov
test
rcl
(bad)
(bad)
(bad)
jg
cwde
scas
mov
add
cwde
mov
sbb
imul
sub
aam
hlt
sbb
push
sar
(bad)
call
scas
imul
add
sub
xchg
push
mov
pop
movs
pop
ficom
dec
add
xchg
ud0
(bad)
call
mov
jnp
pop
xlat
cmp
(bad)
mov
(bad)
mul
jae
lea
(bad)
jmp
data16
call
xchg
fdiv
mov
rol
cmc
stos
pushf
push
cwde
sbb
lahf
int
inc
and
(bad)
(bad)
(bad)
mov
std
jmp
(bad)
mov
sti
fwait
jmp
lods
in
pop
(bad)
sbb
mov
sbb
cmc
xchg
(bad)
(bad)
(bad)
dec
adc
sbb
call
push
loop
movs
or
stos
jg
jmp
lahf
call
jmp
imul
lea
(bad)
(bad)
call
in
out
stc
aam
lahf
mov
out
sti
aaa
sar
jmp
rol
cmp
mov
outs
(bad)
(bad)
(bad)
push
in
fidivr
mov
cmp
lods
pop
mov
push
cmc
inc
pop
fistp
and
(bad)
jmp
adc
inc
js
aad
push
fwait
add
add
dec
push
push
xor
fimul
or
in
dec
mov
xor
call
xor
mov
jecxz
lea
in
xchg
pop
inc
pop
aam
scas
cmp
adc
jmp
sub
(bad)
(bad)
(bad)
dec
sbb
sub
out
fsubr
mov
sub
sti
ja
(bad)
(bad)
(bad)
in
mov
jne
mov
sub
sbb
(bad)
fstp
(bad)
jg
gs
inc
icebp
sbb
arpl
jno
xchg
xchg
(bad)
inc
jmp
mov
or
adc
loop
jne
mov
cli
(bad)
ja
jmp
(bad)
(bad)
(bad)
dec
add
push
int
add
mov
sbb
pop
lods
std
jno
mov
fild
inc
movs
cmp
jnp
pop
jne
iret
cmp
cmp
in
outs
call
jg
into
(bad)
mov
addr16
cmc
in
sub
jno
xor
(bad)
(bad)
dec
push
pop
lods
sub
call
cli
mov
ins
mov
loop
mov
sub
mov
sub
loop
(bad)
ja
sub
pop
add
stos
jmp
xlat
rcl
in
std
adc
(bad)
(bad)
call
mov
xchg
aas
cld
mov
adc
(bad)
mov
sub
aas
stos
fsubr
int3
(bad)
mov
pop
xchg
std
aam
jmp
pop
sbb
outs
mov
(bad)
scas
adc
xchg
push
mov
call
test
and
lahf
enter
stos
mov
inc
jge
inc
add
sahf
movs
fnstcw
cmp
stos
imul
in
(bad)
(bad)
(bad)
push
jmp
inc
jne
cwde
imul
dec
jecxz
scas
outs
aam
hlt
js
xchg
dec
mov
xor
(bad)
(bad)
mov
adc
mov
imul
mov
fsubrp
fdiv
out
cli
inc
jle
lods
(bad)
ds
(bad)
jge
xor
fcom
arpl
mov
jmp
call
mov
dec
xlat
test
inc
loop
cmp
scas
jecxz
or
loope
adc
cld
jmp
cs
add
dec
(bad)
cmp
into
push
push
call
leave
jnp
scas
cli
push
lahf
ja
dec
inc
cmp
pop
shr
int
cld
idiv
cmp
mov
jbe
mov
ja
mov
inc
(bad)
leave
(bad)
(bad)
dec
stos
jmp
call
mov
imul
cmp
jmp
lds
jecxz
das
jne
xor
pop
cmps
push
dec
push
and
retf
and
dec
int3
mov
push
imul
mov
push
imul
push
mov
test
rcl
hlt
jae
icebp
into
push
clc
stos
push
sbb
repnz
add
(bad)
jmp
adc
sbb
jecxz
iret
adc
sbb
sbb
rcr
(bad)
push
repnz
sar
fscale
jns
jne
out
scas
test
xor
or
mov
and
mov
cmp
pop
fistp
and
lods
in
std
(bad)
(bad)
push
hlt
adc
inc
or
cmc
jge
shr
call
and
inc
in
push
mov
mov
(bad)
ds
inc
std
dec
mov
ds
mov
shr
(bad)
(bad)
mov
cli
mov
pop
retf
data16
cmp
mov
and
sub
mov
out
(bad)
sar
in
sub
mov
jg
repz
in
push
mov
pop
clc
jmp
mov
add
mov
mov
inc
xchg
sbb
pop
ins
cmp
dec
fndisi(8087
(bad)
inc
mov
cld
inc
rol
pop
pop
fsubr
(bad)
mov
mov
dec
push
hlt
xchg
cmp
out
mov
out
add
aaa
out
pop
mov
ins
(bad)
jmp
pop
int
xor
mov
fld
hlt
sahf
or
(bad)
(bad)
call
sahf
cwde
and
test
call
push
push
jae
push
pop
in
and
pop
out
ja
(bad)
(bad)
(bad)
jmp
ins
daa
fpatan
mov
pop
fdivr
ja
cmp
jmp
lock
stos
mov
ins
jmp
aas
dec
fimul
clc
fwait
call
mov
in
call
or
and
push
aas
pop
hlt
fwait
mov
sar
lods
int
enter
pop
stos
(bad)
(bad)
imul
mov
fwait
ins
sbb
popf
mov
push
rcr
inc
cli
idiv
mov
xchg
iret
cld
sub
mov
inc
or
hlt
push
inc
pop
push
jecxz
add
mov
mov
(bad)
(bad)
(bad)
cmp
sbb
arpl
sbb
and
sbb
xor
mov
xchg
out
outs
jnp
dec
cmp
movs
fcomi
shr
in
mov
fadd
sahf
cmp
sub
inc
aam
je
xor
cdq
push
xchg
call
out
xchg
outs
lock
mov
add
mov
pop
ja
pop
jmp
inc
rcr
scas
sbb
xor
xchg
pop
xor
popf
out
push
imul
(bad)
(bad)
jmp
pop
pop
push
pusha
mov
mov
jle
or
ficomp
mov
popa
dec
outs
lock
pop
xor
fstp
repnz
sub
xor
cmc
dec
and
push
xchg
pop
addr16
cld
(bad)
(bad)
jmp
lea
loope
sar
bnd
mov
xchg
aaa
sbb
dec
into
jne
jp
inc
fcom
jbe
pop
pop
loopne
sar
(bad)
(bad)
fisttp
pop
test
movs
xchg
dec
cli
std
xor
dec
mov
cs
xchg
pop
(bad)
daa
pushf
in
(bad)
fcomip
push
add
cld
bnd
add
sti
push
data16
popf
inc
xchg
jl
inc
call
mov
push
(bad)
iret
(bad)
jmp
or
scas
xor
xor
pop
jns
(bad)
inc
cli
call
clc
adc
mov
test
cmp
sahf
inc
lock
sub
clc
cmp
(bad)
call
push
mov
mov
and
aas
sbb
pop
aam
fucomi
jg
mov
neg
clc
test
cmp
and
push
jnp
lods
std
jmp
sahf
xchg
js
jecxz
sub
push
add
mov
test
xlat
aaa
inc
push
pop
(bad)
(bad)
fcomip
add
add
ret
push
scas
or
mov
loopne
jmp
lock
mov
jle
jge
add
adc
nop
test
push
cld
popf
or
fisttp
sub
cld
(bad)
jmp
js
and
sbb
add
add
rcr
mov
sbb
jg
ins
les
loopne
and
push
mov
push
(bad)
mov
sahf
cmps
repnz
popa
imul
scas
aaa
mov
sub
clc
sbb
jmp
scas
fist
addr16
xchg
jae
out
inc
cmp
fsubp
(bad)
cmp
movs
pop
scas
mov
ror
sub
iret
popa
cld
sbb
inc
call
jl
xchg
es
jp
jl
mov
cld
call
std
(bad)
jg
jnp
pushf
cmp
cli
rol
ja
fist
push
push
daa
mov
sar
(bad)
iret
dec
mov
cmc
mov
xor
mov
(bad)
inc
inc
mov
in
adc
mov
lock
xor
sbb
(bad)
inc
pop
jmp
fwait
jg
aas
aaa
in
iret
or
or
js
iret
push
cmp
das
sar
into
add
add
mov
dec
sti
mov
xchg
jg
mov
scas
jecxz
pop
aaa
or
pop
sbb
push
sbb
cld
out
loopne
adc
loope
clc
or
push
test
je
lock
(bad)
(bad)
(bad)
cmp
sahf
jne
aas
mov
movs
popa
mov
rcl
mov
(bad)
(bad)
inc
xlat
pop
psrlw
cmp
inc
dec
aam
xchg
pop
sar
mov
test
sub
dec
(bad)
jne
xor
scas
data16
jecxz
enter
(bad)
or
(bad)
mov
mov
adc
daa
scas
jg
fimul
sub
push
cmp
sub
sbb
xchg
fwait
sbb
pop
sbb
out
mov
sub
ud0
lock
cs
push
fdivrp
fst
mov
pop
push
das
test
push
loope
(bad)
fisttp
sbb
adc
dec
cld
push
dec
(bad)
shl
ins
int
sbb
sub
(bad)
(bad)
dec
mov
mov
jle
mov
xchg
mov
mov
in
mov
test
xlat
jne
mov
clc
mov
dec
jmp
jg
push
std
fs
(bad)
mov
retf
repz
dec
jae
test
add
mov
cmp
(bad)
(bad)
jmp
loope
lods
cmp
arpl
out
adc
andps
icebp
pop
dec
push
mov
jmp
inc
shr
sbb
cmps
jecxz
ins
loop
cmp
loop
pop
xor
out
xlat
out
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
div
sbb
out
and
popa
inc
jecxz
jmp
pop
push
(bad)
(bad)
(bad)
(bad)
mov
add
push
mov
push
adc
hlt
xor
adc
(bad)
(bad)
in
jg
(bad)
push
cli
jmp
movs
inc
mov
push
nop
mov
pop
shl
pop
or
stos
(bad)
mov
out
fist
stos
test
sahf
stos
data16
mov
mov
(bad)
inc
scas
xor
xlat
fs
shl
jge
outs
jae
out
out
loop
mov
(bad)
jmp
mov
in
out
cs
jl
imul
inc
push
jl
mov
aas
out
jp
retf
pop
jge
jmp
jmp
(bad)
(bad)
push
push
jle
jle
add
adc
cmc
imul
stc
in
int3
fist
sbb
mov
jmp
stos
pop
popf
enter
ror
fiadd
je
out
cs
aad
inc
mov
ja
inc
mov
aaa
in
and
(bad)
(bad)
(bad)
dec
jnp
fiadd
mov
(bad)
mov
cmc
or
cmc
mov
lds
(bad)
das
clc
sbb
data16
xor
pop
cdq
(bad)
(bad)
call
gs
imul
outs
daa
mov
loop
adc
jne
call
(bad)
call
fcmovu
in
aaa
dec
push
or
outs
mov
mov
repnz
pop
xlat
ins
mov
hlt
test
dec
mov
lods
sti
mov
mov
(bad)
arpl
daa
out
adc
(bad)
call
mov
mov
loop
mov
jbe
fist
dec
sbb
(bad)
call
in
jb
xor
inc
mov
mov
imul
(bad)
(bad)
(bad)
cmp
xchg
mov
push
cld
and
int3
movs
jge
dec
(bad)
popa
gs
mov
(bad)
mov
mov
jmp
jnp
xchg
sbb
sbb
(bad)
in
(bad)
push
(bad)
mov
cli
in
xchg
pop
aaa
std
arpl
mov
ret
pop
(bad)
(bad)
mov
ds
sub
push
aas
(bad)
pop
jb
(bad)
(bad)
je
adc
leave
add
cmp
pop
and
jmp
push
call
in
clc
das
sar
outs
rcl
dec
dec
cmps
fcmovnu
test
sbb
mov
(bad)
push
pop
inc
mov
iret
imul
or
(bad)
jmp
les
jl
push
stos
icebp
clc
mov
cmp
adc
dec
mov
xor
call
hlt
and
or
inc
and
jmp
repnz
or
jns
pop
test
inc
pop
ins
call
(bad)
mov
xlat
bound
(bad)
(bad)
(bad)
(bad)
jl
int3
enter
pop
cld
cmp
retf
mov
fstp
xchg
and
pop
mov
(bad)
fild
fimul
repnz
pop
push
in
cmp
(bad)
call
sbb
fadd
xchg
test
dec
pop
and
(bad)
(bad)
jmp
jbe
gs
enter
mov
cs
jns
sub
push
aam
clc
(bad)
push
pop
sub
(bad)
sub
cli
mov
jle
fidivr
scas
xor
jno
ins
mov
cwde
mov
sti
add
es
(bad)
(bad)
inc
sub
jg
cmps
out
and
jbe
pop
jl
lods
neg
mov
aam
xchg
bound
inc
mov
iret
mov
jp
pop
push
js
pop
stc
add
(bad)
(bad)
(bad)
(bad)
jg
sub
rcr
shr
pop
shl
outs
retf
fidiv
push
xor
ds
ror
sbb
(bad)
jmp
cmc
mov
jnp
xchg
jmp
into
int
adc
xchg
in
mov
mov
mov
mov
in
cmp
cmp
pop
ss
push
cmps
repz
pop
imul
dec
jmp
mov
mov
jecxz
dec
gs
ret
(bad)
push
fisub
dec
test
pop
pop
ret
clc
(bad)
(bad)
call
jnp
cmp
loopne
cli
(bad)
les
or
(bad)
xor
imul
call
cs
ds
icebp
cmps
aas
dec
xchg
jb
xchg
lods
pop
xor
sub
and
(bad)
push
mov
dec
cmp
mov
sbb
rol
mov
sub
push
sbb
clc
js
mov
jl
ror
xchg
iret
(bad)
pop
icebp
cmp
mov
outs
xor
xchg
sbb
mov
inc
addr16
imul
xchg
cmc
adc
fdivr
(bad)
(bad)
inc
rcr
xor
aam
lock
test
aaa
mov
iret
sbb
fsub
and
mov
repz
arpl
cmp
fcom
imul
cmps
sbb
fwait
retf
pop
in
jge
xlat
cmp
repz
push
hlt
adc
(bad)
(bad)
(bad)
jg
dec
in
js
mov
push
(bad)
adc
out
and
push
imul
(bad)
(bad)
(bad)
cmp
mov
(bad)
or
mov
pop
daa
push
jne
call
frstor
ret
scas
(bad)
(bad)
(bad)
dec
mov
cmps
clc
dec
int
mov
sub
sbb
ror
cmp
pop
jmp
(bad)
(bad)
call
dec
std
je
ins
dec
out
push
jg
lea
loop
xor
std
les
arpl
iret
and
popa
mov
imul
push
call
xchg
sar
test
xchg
mov
(bad)
(bad)
inc
dec
in
and
xchg
cwde
ret
inc
cld
lahf
pop
mov
inc
inc
jbe
cwde
mov
mov
(bad)
(bad)
(bad)
call
sahf
inc
out
xchg
mov
or
sub
mov
pop
dec
mov
adc
cmp
push
and
dec
pop
nop
rcl
jp
ret
out
xchg
(bad)
(bad)
dec
rol
jb
fcmovnu
leave
lahf
out
pushf
in
call
sar
neg
mov
xchg
cld
sub
xor
and
cmp
mov
xchg
adc
and
sbb
dec
dec
mov
mov
lahf
call
not
(bad)
(bad)
jmp
xchg
and
jp
outs
cmp
cmp
pop
xor
push
cld
(bad)
cmp
xchg
(bad)
add
addr16
(bad)
(bad)
(bad)
mov
xchg
jne
fcomp
lods
jecxz
loop
pop
stc
sbb
add
call
cmps
jns
push
lahf
and
inc
daa
cld
mul
mov
loopne
xchg
dec
(bad)
(bad)
(bad)
(bad)
call
pop
out
out
dec
cld
xchg
and
mov
push
es
push
adc
fnsave
test
fistp
xlat
popa
bound
jno
mov
jecxz
push
adc
shl
and
mov
cmovg
push
sbb
(bad)
(bad)
(bad)
inc
push
push
sbb
call
jne
fisttp
aad
dec
sub
(bad)
inc
pop
popf
retf
push
ret
sbb
stos
cmc
js
jne
arpl
or
sbb
std
cwde
pop
(bad)
(bad)
(bad)
jmp
dec
fcom
imul
and
cmp
cld
fs
repz
(bad)
jmp
pop
sbb
scas
lahf
into
xchg
fbstp
nop
xor
dec
inc
clc
xchg
and
loope
sti
push
mov
inc
popa
fld
clc
jmp
xchg
xlat
retf
cwde
jns
mov
inc
out
xor
ror
dec
push
jmp
(bad)
out
push
xchg
cmp
dec
jnp
push
sub
sub
outs
addr16
(bad)
(bad)
call
retf
(bad)
stos
pushf
inc
cmp
rcr
out
(bad)
ja
cmps
push
adc
stos
pop
(bad)
(bad)
(bad)
push
pop
mov
mov
jns
mov
dec
out
frstor
scas
adc
scas
inc
mov
dec
xor
clc
bound
nop
dec
cdq
stos
adc
push
mov
sub
fiadd
push
scas
mov
mov
iret
(bad)
call
in
test
mov
lods
leave
idiv
test
(bad)
(bad)
(bad)
cmp
loope
mov
mov
or
movs
xchg
ss
push
jne
arpl
rcr
in
fldcw
sub
(bad)
(bad)
jmp
sbb
fsubr
push
xchg
add
inc
adc
push
adc
aad
inc
outs
das
adc
push
(bad)
mov
or
sbb
inc
cs
test
arpl
and
cmc
pop
xchg
jmp
mov
pop
inc
neg
ds
(bad)
call
(bad)
je
sub
mov
cmc
mov
ffree
cld
dec
call
mov
dec
or
or
daa
jl
push
out
pop
sbb
and
mov
xor
(bad)
cmp
lahf
xlat
pop
adc
add
(bad)
retf
push
xchg
jo
jmp
mov
inc
jmp
call
aad
jnp
ret
in
lea
inc
inc
sub
push
add
(bad)
(bad)
inc
dec
sbb
inc
mov
test
call
adc
test
ja
loope
and
test
addr16
jb
lds
out
xchg
mov
or
jmp
out
into
(bad)
sub
push
dec
rcr
push
jg
movs
dec
sub
xor
cs
or
pop
mov
dec
mov
cs
sbb
mov
(bad)
inc
xchg
push
jb
ret
(bad)
mov
loop
rcr
jae
mov
or
pop
ss
call
jp
ins
sahf
mov
sti
pop
arpl
jle
jmp
clc
push
stc
pop
pushf
(bad)
cmps
cmp
retf
lock
out
fild
mov
loopne
jg
push
dec
stos
imul
inc
pusha
repz
sahf
xchg
arpl
aaa
pop
(bad)
mov
(bad)
out
cmp
push
xchg
fs
inc
jns
jecxz
(bad)
(bad)
(bad)
(bad)
jmp
imul
adc
cmp
sbb
jbe
iret
aaa
stc
jmp
ss
call
es
(bad)
retf
adc
and
pusha
(bad)
push
push
rcr
pop
sub
jmp
sbb
(bad)
loopne
cmp
inc
mov
test
mov
jg
inc
ret
mov
push
adc
fs
mov
ja
jmp
test
add
mov
nop
lahf
jg
xchg
inc
sti
cmc
imul
hlt
add
(bad)
jmp
mov
int
repz
push
jl
int3
pop
iret
push
stos
(bad)
jg
mov
inc
neg
cmp
jle
xor
outs
neg
sub
jo
dec
jp
jbe
loope
movs
in
into
daa
mov
dec
out
and
repz
mov
inc
jne
pminsw
xchg
fwait
push
repnz
(bad)
(bad)
jmp
imul
xor
fwait
jbe
inc
out
imul
xchg
cmps
addr16
out
aas
in
sbb
mov
jmp
nop
mov
or
movs
movs
mov
cmp
jle
ja
mov
(bad)
mov
push
das
pop
shl
call
mov
xor
mov
mov
(bad)
jmp
gs
jecxz
cdq
and
sub
in
sub
movs
or
jge
push
jecxz
(bad)
(bad)
(bad)
(bad)
js
fld
adc
in
scas
xor
xor
cdq
(bad)
out
pop
idiv
mov
gs
push
jge
(bad)
(bad)
call
sar
pop
cld
mov
mov
test
xor
shl
movs
(bad)
(bad)
(bad)
call
mov
mul
movs
push
enter
repnz
clc
popf
mov
pushf
adc
movs
(bad)
(bad)
(bad)
(bad)
(bad)
cld
fild
rcl
add
xchg
jmp
ds
ret
and
(bad)
(bad)
(bad)
jg
in
call
lods
daa
fwait
(bad)
es
mul
mov
sar
rcr
pusha
(bad)
(bad)
(bad)
mov
rcl
imul
lahf
ffree
jno
int
(bad)
xor
call
cli
sbb
fstp
jnp
xchg
mov
mov
cs
hlt
push
sahf
idiv
dec
jg
popf
add
imul
fcom
clc
push
jmp
(bad)
(bad)
dec
xlat
dec
test
jp
jbe
gs
(bad)
lock
xchg
pusha
xor
cli
adc
loopne
(bad)
(bad)
jmp
repz
mov
add
dec
mov
push
gs
mov
into
sbb
pop
(bad)
(bad)
(bad)
int
add
ja
popa
add
push
pop
cmp
hlt
and
adc
arpl
(bad)
(bad)
(bad)
jmp
shl
sti
mov
and
sub
shl
jl
mov
jmp
dec
cdq
push
cmp
pushf
jecxz
and
sub
out
push
cld
or
mov
cdq
ins
lock
xchg
cld
adc
mov
jae
dec
inc
and
fwait
ins
xor
mov
dec
hlt
inc
into
add
push
lea
inc
mov
ins
retf
imul
(bad)
(bad)
(bad)
call
xchg
rcr
outs
jbe
stc
dec
cmp
xchg
(bad)
dec
lahf
jmp
(bad)
call
jne
(bad)
push
jg
sti
sub
out
test
(bad)
push
(bad)
sahf
call
mov
pop
lock
out
adc
sbb
or
inc
scas
loop
outs
push
(bad)
jnp
cli
(bad)
jg
(bad)
imul
push
push
popa
mov
cmp
mov
mov
push
(bad)
jmp
imul
fstp
stos
repnz
jmp
loope
mov
sbb
(bad)
sub
add
(bad)
(bad)
call
dec
lods
loopne
dec
pusha
cmps
pop
mov
mov
push
xchg
add
call
push
rol
mov
inc
adc
aam
ror
mov
xor
mov
mov
add
xor
(bad)
out
jae
mov
push
jb
push
jbe
or
pop
es
jne
add
mov
std
xchg
xchg
pop
adc
add
(bad)
sti
cs
les
loopne
pop
cmc
dec
(bad)
or
adc
xor
scas
imul
(bad)
(bad)
(bad)
call
and
(bad)
out
arpl
or
popf
frstor
aaa
cmp
jg
mov
hlt
cwde
data16
shr
(bad)
(bad)
(bad)
fst
jmp
mov
loopne
repz
bound
(bad)
cwde
cmps
dec
pop
stos
(bad)
(bad)
(bad)
inc
lods
pop
ds
cli
cmp
sbb
jmp
sahf
cmp
das
loope
xchg
mov
(bad)
(bad)
inc
sub
lahf
pop
jmp
jo
pop
cmp
dec
loopne
(bad)
(bad)
pop
cmp
aaa
sub
(bad)
(bad)
(bad)
jmp
jmp
lahf
jne
int
std
int
mov
fmul
and
pop
test
call
outs
test
stos
mov
retf
push
movs
jb
pop
inc
aad
dec
jmp
repz
jge
jbe
fwait
lods
mov
ror
(bad)
sub
(bad)
xchg
fadd
cwde
ja
cmp
(bad)
inc
jg
pop
inc
shl
loopne
jbe
or
and
(bad)
call
xchg
sahf
sbb
sbb
add
pop
sub
(bad)
mov
or
call
adc
inc
push
mov
mov
pop
(bad)
xchg
add
scas
nop
xchg
jmp
(bad)
inc
loope
fsubrp
mov
mov
scas
xchg
cmc
ror
xor
scas
test
or
(bad)
(bad)
(bad)
cmp
and
sti
xchg
or
mov
sbb
shl
add
pop
sbb
sub
push
lds
mov
call
test
push
xchg
mov
fstp
push
movs
enter
not
(bad)
(bad)
(bad)
mov
sbb
out
xacquire
pop
push
outs
push
test
cmc
lea
(bad)
inc
imul
push
and
mov
mov
out
mov
(bad)
dec
xchg
outs
mov
cmp
xor
ins
out
sub
mov
scas
(bad)
(bad)
(bad)
push
xchg
fnstsw
sahf
das
xchg
bound
mov
xor
and
loop
fsub
(bad)
(bad)
call
jmp
mov
and
pop
outs
pop
and
pop
pop
and
cmc
adc
cli
mov
add
(bad)
pop
mov
repnz
xchg
mov
jg
stos
addr16
sub
sub
adc
clc
(bad)
aas
out
mov
mov
cmp
and
jne
sub
(bad)
fist
push
icebp
lea
rol
(bad)
aad
xlat
cmp
(bad)
(bad)
(bad)
call
sar
adc
loop
or
out
jle
outs
push
push
aad
xor
and
call
adc
cld
cmp
sbb
in
mov
cmc
test
cmp
sub
les
(bad)
fcomip
cld
jp
mov
jge
xchg
mul
sub
xor
cmp
jb
(bad)
fisttp
and
add
pusha
jno
mov
jno
(bad)
(bad)
push
lods
cs
pop
dec
aad
std
(bad)
idiv
into
or
xchg
inc
neg
and
pop
in
stc
jbe
rcl
(bad)
data16
or
fidivr
sti
test
popf
lods
cmp
jge
ret
cli
rcr
stos
(bad)
jg
lock
and
fistp
fs
test
inc
adc
xchg
push
sar
cdq
les
adc
jg
xchg
push
sbb
mov
mov
jecxz
fistp
push
jbe
or
ja
mov
mov
jno
dec
sub
inc
mov
aaa
(bad)
sti
(bad)
(bad)
jg
mov
or
mov
push
outs
fs
stos
adc
fcom
jmp
add
call
mov
scas
add
jmp
clc
jg
dec
dec
gs
jns
data16
jo
jns
pop
fst
pusha
int3
mov
nop
add
test
push
mov
(bad)
fbstp
pop
data16
jne
je
cmp
jne
fadd
xchg
clc
push
lea
retf
add
jge
(bad)
mov
les
inc
in
cwde
xor
lods
add
dec
(bad)
mov
sub
jl
jmp
push
push
imul
(bad)
call
mov
jae
jge
or
jmp
xchg
inc
je
shr
pop
fbld
pop
mov
(bad)
(bad)
fst
addr16
or
sub
out
call
addr16
test
sub
or
jl
xchg
sbb
(bad)
jmp
daa
shr
retf
inc
push
fcom
ja
js
mov
add
call
clc
call
loope
iret
std
jge
cli
adc
and
std
sbb
int
popf
push
scas
xchg
and
jne
data16
mov
shr
adc
call
mov
mov
hlt
mov
xor
cmp
pop
ins
mov
or
push
fwait
mov
repnz
dec
pop
mov
lock
(bad)
(bad)
(bad)
jmp
add
rcr
es
pop
push
mov
out
push
add
arpl
(bad)
(bad)
(bad)
jge
fidivr
lods
gs
sar
aad
xor
into
rcr
in
xor
or
mov
out
retf
sar
fcomip
(bad)
jg
aas
inc
test
nop
aam
out
pop
icebp
adc
fwait
retf
call
call
int
scas
pop
in
ror
cdq
xchg
sub
mov
lock
xor
fwait
(bad)
arpl
mov
mov
mov
arpl
js
inc
call
cwde
(bad)
(bad)
(bad)
inc
mov
inc
dec
push
xchg
pop
inc
adc
and
pop
aas
in
or
repnz
xor
(bad)
(bad)
jmp
xchg
lds
mov
xchg
test
and
fiadd
jle
clc
inc
(bad)
cdq
pop
xor
ss
xchg
sti
je
scas
test
(bad)
(bad)
(bad)
push
jl
jge
push
fcomp
push
shr
aas
int
daa
aam
outs
xchg
xchg
aaa
out
mov
(bad)
(bad)
jmp
mov
mov
ins
adc
loop
jns
jle
imul
mul
ins
xchg
sbb
(bad)
(bad)
ds
data16
fs
and
(bad)
mov
xchg
dec
jae
rol
jecxz
rol
mov
rcr
(bad)
call
mov
pop
fnstenv
sub
pop
das
sar
(bad)
call
(bad)
(bad)
fiadd
pop
xchg
xchg
mov
sub
pop
xor
jmp
or
scas
ret
sub
mov
out
pop
sbb
cmc
inc
add
(bad)
mov
lock
movs
mov
icebp
jecxz
aad
push
mov
push
call
mov
(bad)
inc
mov
inc
(bad)
mov
jbe
mov
(bad)
test
and
(bad)
(bad)
push
test
xor
call
cmp
mov
and
icebp
and
(bad)
(bad)
call
outs
sbb
test
mov
sub
mov
sub
adc
fldenv
test
xor
jmp
push
sub
int3
inc
xrelease
or
push
xor
(bad)
(bad)
(bad)
jae
sbb
inc
call
sub
dec
jno
push
(bad)
mov
dec
jae
mov
enter
mov
(bad)
popf
mov
add
jmp
pop
mov
sti
retf
pop
cmp
dec
ins
outs
gs
(bad)
(bad)
fild
aas
adc
xor
sub
cwde
pop
int
cmp
shr
(bad)
mov
js
pop
(bad)
push
lods
mov
mov
neg
test
fcom
loop
xor
mov
inc
repz
dec
mov
mov
pop
rol
(bad)
sbb
jmp
test
xor
fsub
xor
enter
lahf
inc
fisub
aaa
mov
mov
loope
(bad)
(bad)
jmp
popf
cmp
stos
aam
mov
dec
das
aas
sbb
and
cmp
(bad)
(bad)
(bad)
push
addr16
jno
outs
out
mov
pushf
pop
test
inc
xchg
iret
adc
or
adc
scas
retf
push
fbstp
test
push
aaa
adc
scas
aas
adc
(bad)
dec
out
cld
jae
xchg
loopne
cmp
std
push
aad
stos
mov
aaa
xchg
sbb
dec
cmps
and
call
es
mov
fld
imul
(bad)
(bad)
fbstp
shl
stc
in
mov
dec
movs
pop
xchg
jmp
jmp
int3
fxtract
jne
int
xor
fstp
mov
(bad)
jmp
mov
pop
aas
xor
enter
add
pavgw
outs
ins
mov
nop
or
(bad)
(bad)
(bad)
frstor
loope
repz
jbe
loop
ja
push
or
dec
inc
mov
(bad)
adc
je
(bad)
(bad)
(bad)
(bad)
mov
pop
or
adc
outs
xchg
(bad)
icebp
daa
mov
sbb
mov
(bad)
fcomip
call
push
mov
push
lods
push
pop
cdq
mov
xchg
popf
movs
mov
lods
add
(bad)
jmp
mov
vpaddd
aad
(bad)
mov
pop
in
sub
mov
push
mov
mov
mov
adc
push
xchg
std
loope
mov
into
push
push
adc
dec
out
sti
loop
(bad)
(bad)
jmp
inc
iret
sub
jecxz
repz
jmp
or
xor
aad
jbe
emms
inc
mov
inc
adc
fimul
sbb
mov
fdiv
test
cld
(bad)
(bad)
(bad)
js
out
(bad)
rcl
xor
in
sbb
call
xchg
(bad)
call
jns
bnd
mov
loope
icebp
inc
mov
(bad)
in
icebp
push
cmp
(bad)
(bad)
dec
ja
repz
jb
outs
add
mov
(bad)
lds
or
jmp
cmp
ud0
aaa
std
out
sti
and
adc
or
mov
push
call
cmps
xor
fisub
out
ret
fadd
ins
push
push
xor
xchg
cmp
mov
es
xchg
(bad)
(bad)
jg
push
out
dec
xchg
(bad)
(bad)
idiv
mov
out
lods
add
xor
ror
jmp
retf
(bad)
call
pop
push
mov
or
push
adc
push
fucomp
pop
repz
add
push
mov
mov
(bad)
jg
into
lods
loope
mov
daa
es
call
mov
jg
mov
shl
mov
pop
or
and
inc
inc
(bad)
(bad)
(bad)
out
retf
jmp
ffree
call
loope
outs
pop
jbe
mov
movs
mov
sub
(bad)
jmp
sbb
call
cld
cld
or
mov
pop
fimul
int
(bad)
(bad)
(bad)
jmp
jg
int3
inc
into
jle
(bad)
loop
jnp
jmp
test
std
inc
mov
xor
scas
gs
pop
cmc
(bad)
inc
sub
fucom
xchg
push
cld
or
in
xchg
mov
not
sbb
jg
mov
(bad)
jg
test
pop
popf
cld
aad
sub
rol
mov
lods
cmp
or
pop
ins
int
pop
lods
jg
(bad)
jmp
xchg
in
jbe
pop
and
mov
fsubr
loope
lea
xchg
pop
mov
(bad)
jp
add
xchg
lock
push
arpl
loopne
sub
mov
inc
in
test
adc
(bad)
(bad)
(bad)
in
ins
loop
(bad)
lods
jl
fiadd
fisubr
pop
push
jb
and
imul
and
sar
inc
(bad)
jmp
retf
call
pusha
cld
mov
outs
dec
enter
push
add
shr
clc
(bad)
call
mov
leave
test
sub
dec
aas
pusha
icebp
int3
xchg
(bad)
pusha
retf
sbb
(bad)
call
sub
mov
dec
pop
sar
xchg
in
rcl
inc
sbb
std
inc
clc
scas
ins
push
leave
(bad)
(bad)
jmp
(bad)
into
cli
call
xchg
dec
pop
jmp
mov
xor
movs
(bad)
jmp
add
call
and
(bad)
dec
xchg
cmp
adc
push
pop
stos
stc
push
stos
setne
aaa
jmp
sbb
lock
mov
(bad)
(bad)
push
xchg
iret
fs
jns
imul
sub
imul
call
aas
jo
stos
(bad)
push
sub
aas
xchg
sbb
mov
cmp
jnp
(bad)
mov
jg
inc
pop
lds
push
mov
aas
lea
jecxz
dec
xor
xor
push
jecxz
movs
sar
(bad)
inc
das
pop
aas
cmc
test
in
test
lds
inc
or
outs
(bad)
adc
(bad)
(bad)
jg
std
pop
popf
fwait
adc
ins
and
aad
out
std
sbb
or
dec
and
add
aaa
jnp
(bad)
(bad)
(bad)
inc
push
jmp
and
add
sub
loop
mov
nop
dec
lea
out
lock
dec
(bad)
and
fbstp
mov
mov
out
in
xchg
xlat
int
(bad)
(bad)
dec
sbb
pop
cld
sbb
les
push
pop
inc
jne
jb
inc
(bad)
(bad)
(bad)
(bad)
ficom
sbb
and
xchg
or
cld
cmp
sub
jg
(bad)
pop
cmc
(bad)
cmp
mov
(bad)
aaa
or
jge
pop
cmp
xchg
cmp
out
clc
(bad)
(bad)
jmp
repz
cs
loop
data16
test
mov
(bad)
cwde
call
fidiv
sub
std
int3
lds
xchg
ds
sbb
push
cmp
(bad)
jmp
call
jl
sub
test
dec
iret
les
(bad)
push
push
and
(bad)
call
pop
dec
arpl
add
repnz
(bad)
nop
inc
loope
jp
ret
fcomp
ds
xlat
(bad)
jmp
ds
fwait
dec
dec
pop
jns
mov
aas
jle
arpl
add
jg
idiv
sub
cld
aaa
pop
cmps
enter
mov
sub
mov
(bad)
(bad)
(bad)
cld
cmc
clc
daa
out
loopne
or
dec
push
mov
xor
add
mov
(bad)
jg
jmp
fisttp
frstor
je
dec
push
imul
inc
data16
das
ret
push
fucomip
cmp
call
fwait
ror
mov
(bad)
mov
ret
inc
mov
jno
jbe
push
cld
out
ja
shr
(bad)
inc
xlat
in
push
sbb
mov
dec
inc
xor
cmp
scas
repz
push
push
sbb
inc
mov
leave
lds
pushf
adc
fdiv
scas
dec
int
lock
fisttp
(bad)
jbe
sahf
lahf
pushf
inc
(bad)
(bad)
(bad)
jg
pop
adc
pop
in
jl
movs
mov
daa
sub
pop
xchg
pop
retf
in
and
(bad)
call
jns
lahf
movs
inc
mov
sbb
and
(bad)
inc
hlt
es
hlt
aam
jmp
shl
repz
(bad)
fist
mov
call
test
rcl
push
cmp
lods
jge
loop
dec
into
shr
adc
aam
(bad)
cmp
mov
addr16
sub
jg
dec
fild
outs
and
(bad)
(bad)
jmp
mov
mov
jge
in
pop
inc
ja
xor
mov
mov
adc
(bad)
mov
sar
ja
cld
mov
lds
aaa
jno
push
mov
pop
(bad)
dec
ja
inc
dec
in
mul
dec
add
int
pop
fsub
mov
mov
retf
sbb
mov
sbb
xchg
push
adc
jg
test
dec
jmp
fsubp
aad
mov
dec
adc
data16
inc
aad
push
inc
inc
sub
(bad)
mov
pop
add
imul
jae
xor
and
stos
(bad)
(bad)
(bad)
dec
cld
in
(bad)
mov
in
pop
xchg
out
mov
sbb
in
push
stos
ja
jmp
cli
push
test
and
inc
mov
ds
dec
out
sti
leave
cmp
dec
lea
(bad)
(bad)
call
cmp
push
cmc
mov
jl
test
scas
iret
dec
push
xchg
ss
(bad)
(bad)
dec
psrad
aad
xchg
push
rol
gs
mov
xchg
(bad)
jmp
or
std
shl
pop
jl
jmp
mov
jl
aad
lock
jmp
push
push
popf
cmp
or
sbb
mov
jp
in
sbb
ds
mov
(bad)
(bad)
(bad)
jmp
sub
xor
in
aam
mov
sub
mov
(bad)
jg
pop
dec
jbe
mov
jbe
add
mov
sub
movs
cmp
push
fdiv
push
push
cmp
jae
jg
(bad)
(bad)
(bad)
call
stc
out
add
fwait
mov
loop
sbb
mov
sub
add
push
imul
les
cmc
icebp
(bad)
fsub
lds
loopne
cmp
fsubrp
jmp
fcom
pop
mov
(bad)
(bad)
jg
mov
ds
mov
ins
sub
cmc
leave
cmps
mov
push
div
mov
mov
xor
xchg
cmps
in
bound
push
out
ja
(bad)
and
push
ds
dec
cmps
push
lahf
movq
rol
adc
xor
sahf
dec
jecxz
(bad)
(bad)
inc
loop
lds
add
or
aaa
aaa
(bad)
jmp
pop
mov
scas
nop
iret
cmp
bound
mov
pop
(bad)
(bad)
(bad)
jmp
mov
pop
push
mov
call
inc
dec
sub
xor
and
xchg
(bad)
(bad)
push
mov
icebp
enter
add
cmps
adc
lods
les
ins
add
sar
call
mov
lods
mov
dec
xlat
aam
pusha
push
push
cwde
movs
sbb
mov
(bad)
das
push
or
mov
inc
cmp
push
pop
mov
mov
push
cs
dec
inc
or
es
(bad)
(bad)
(bad)
(bad)
(bad)
jg
adc
or
xor
pop
fstp
mov
clc
mov
in
(bad)
(bad)
(bad)
out
pusha
and
idiv
hlt
push
arpl
sub
mov
ins
pop
inc
arpl
(bad)
cmp
fadd
pop
jle
pop
or
and
lock
and
dec
xchg
or
shl
dec
push
outs
dec
sbb
icebp
sub
test
pop
call
cli
pop
pushf
mov
sub
jle
aad
or
inc
mov
jmp
jno
lock
leave
mov
jg
(bad)
(bad)
call
sbb
push
ficomp
mov
adc
test
jmp
shl
and
clc
(bad)
(bad)
(bad)
jns
hlt
or
into
push
mov
mov
jle
xor
mov
add
push
int3
pop
ja
mov
mov
ds
(bad)
aad
jb
cdq
(bad)
(bad)
(bad)
(bad)
jmp
dec
sbb
fbld
mov
push
daa
sub
push
rcr
lock
pusha
out
clc
(bad)
jg
mov
add
leave
gs
and
and
jmp
mul
jne
dec
mov
call
nop
xlat
xchg
pop
(bad)
stos
aaa
lds
idiv
mov
adc
out
lods
sbb
retf
test
stos
mov
push
inc
icebp
sbb
out
xchg
jae
mov
sbb
(bad)
call
mov
(bad)
and
mov
inc
cmp
lods
(bad)
(bad)
(bad)
jg
cmp
in
mov
shr
ins
mov
mov
adc
dec
sti
int
(bad)
pop
aad
(bad)
call
jmp
(bad)
xor
in
(bad)
add
jl
(bad)
(bad)
(bad)
fbld
(bad)
ds
fisttp
pop
or
inc
or
pop
dec
jae
mov
jge
in
sub
inc
dec
fld
cwde
pop
adc
push
jg
test
les
lods
mov
fisttp
and
(bad)
add
and
add
inc
push
dec
daa
sbb
jp
jne
adc
pushf
sti
cdq
hlt
jp
xor
cmp
xchg
xchg
inc
jns
ins
jae
(bad)
(bad)
call
mov
xchg
repz
icebp
push
cmp
sti
cwde
sti
inc
jg
mov
or
dec
jmp
(bad)
mov
out
jmp
int3
gs
(bad)
(bad)
(bad)
jmp
sbb
out
add
shr
adc
adc
sub
cmp
call
mov
or
sub
std
add
outs
daa
je
in
out
in
movs
and
ss
sti
ficomp
inc
add
out
adc
pop
js
test
mov
(bad)
(bad)
inc
jo
mov
mov
aam
outs
push
pop
jmp
jecxz
cmp
mov
out
out
(bad)
(bad)
(bad)
call
call
fisttp
sub
xchg
pop
fwait
in
int
inc
adc
mov
les
cmp
cmp
(bad)
dec
xor
xor
inc
cmp
inc
(bad)
out
ss
int
cli
(bad)
mov
nop
aaa
jns
push
repz
mov
pushf
js
(bad)
dec
push
xor
mov
arpl
std
push
mov
inc
(bad)
dec
pop
fwait
jle
popa
pop
cmp
mov
sub
ret
add
cmp
jmp
ret
mov
(bad)
mov
inc
repz
lea
cmps
xchg
pop
movs
hlt
(bad)
push
movs
xor
test
(bad)
(bad)
call
add
or
in
ins
pop
bound
mov
outs
idiv
jb
(bad)
(bad)
dec
xchg
or
mov
adc
lods
icebp
daa
inc
add
sbb
push
inc
dec
jl
je
lock
(bad)
jg
out
test
sub
popf
sub
mov
call
(bad)
(bad)
fbld
lods
mov
jg
movs
test
shr
jne
(bad)
(bad)
(bad)
jmp
pop
ret
jmp
ins
shl
fs
enter
(bad)
pop
bnd
iret
aam
ins
add
(bad)
mov
addr16
jp
rol
or
push
mov
(bad)
(bad)
jmp
xor
pop
call
addr16
push
push
fstp
imul
mov
out
or
je
mov
iret
sub
or
scas
xchg
pop
aas
ror
sbb
sahf
ins
cmp
sar
(bad)
(bad)
jmp
fld
iret
mov
inc
shl
or
add
or
jnp
das
shl
nop
mov
rdmsr
daa
(bad)
es
fisttp
pop
fwait
(bad)
mov
arpl
sub
jns
(bad)
(bad)
(bad)
call
jg
ret
cmc
or
aam
cdq
or
cwde
push
or
adc
call
test
cld
and
pop
stos
dec
ja
aam
icebp
jl
dec
jnp
prefetch
push
ja
(bad)
(bad)
cmp
add
and
stos
popa
call
jmp
fcomi
or
xchg
pop
es
mov
add
xchg
fmul
fistp
inc
sahf
mov
and
mov
pop
hlt
pushf
inc
test
jle
pop
test
(bad)
(bad)
(bad)
inc
hlt
cli
setge
xor
call
pop
adc
(bad)
(bad)
(bad)
call
jbe
imul
xchg
sbb
pop
out
mov
add
icebp
jns
cmps
or
or
push
ins
sar
data16
xor
scas
enter
std
cli
adc
(bad)
(bad)
mov
mov
sub
cwde
aaa
mov
mov
out
in
adc
aas
sbb
dec
stos
sbb
(bad)
(bad)
dec
ror
mov
mov
cwde
add
lds
cli
sahf
(bad)
jbe
jecxz
(bad)
loopne
in
(bad)
(bad)
(bad)
(bad)
cmp
mov
sbb
movs
test
cli
les
lea
movs
or
(bad)
(bad)
inc
inc
aam
push
mov
lahf
and
stc
in
icebp
or
ret
(bad)
(bad)
(bad)
call
cli
mov
lahf
mov
les
sbb
mov
add
inc
(bad)
scas
dec
fld
lods
data16
and
or
inc
setnp
mov
mov
mov
test
ins
ror
(bad)
inc
ss
pop
(bad)
gs
inc
mov
(bad)
(bad)
jmp
fnstsw
test
in
daa
out
enter
loop
dec
push
test
mov
adc
fcomip
(bad)
cmp
mov
push
push
adc
lock
adc
inc
pop
jp
sbb
movs
movs
lds
(bad)
(bad)
(bad)
dec
xchg
jl
pop
and
mov
and
jb
mov
rol
jmp
loopne
jns
cmc
repnz
cmp
(bad)
inc
jecxz
push
fs
push
jle
hlt
adc
aas
(bad)
(bad)
(bad)
inc
leave
pop
or
mov
bound
jns
cmp
jl
adc
ds
shl
mov
adc
(bad)
(bad)
push
push
mov
dec
inc
mov
xlat
add
dec
aam
icebp
jo
repnz
pop
add
and
mov
mov
call
jmp
lock
dec
(bad)
(bad)
retf
adc
sbb
jmp
sub
out
ds
retf
xchg
sub
ss
(bad)
(bad)
jg
dec
dec
cmps
mov
popa
test
cmps
dec
mov
pop
xlat
mov
jmp
fdivr
jp
sub
push
mov
out
mov
(bad)
jmp
push
ja
xchg
sbb
push
push
xchg
das
rol
shr
add
(bad)
(bad)
(bad)
out
arpl
fwait
jmp
shl
xor
sahf
dec
mov
adc
push
cld
jmp
stos
mov
adc
call
push
mov
ror
(bad)
(bad)
dec
cmc
call
inc
mov
pop
inc
sub
cmc
push
cwde
fdivrp
adc
call
adc
dec
jmp
shl
xchg
lds
idiv
(bad)
clc
cmp
aad
push
leave
fsubr
xor
jmp
out
scas
(bad)
(bad)
(bad)
jmp
cmp
cmp
std
jecxz
das
mov
or
sbb
pop
ss
cld
call
jl
sbb
mov
and
push
sub
retf
mov
xchg
cs
or
jo
gs
add
jmp
mov
je
push
adc
jmp
cmp
add
sbb
xor
sub
jmp
clc
fisub
sub
div
es
(bad)
(bad)
(bad)
call
mov
cmps
inc
mov
mov
sbb
sub
sbb
mov
(bad)
jmp
xor
outs
xchg
ins
lea
pushf
fs
xchg
pop
fst
(bad)
call
into
push
popa
outs
adc
(bad)
repz
jge
cmp
mov
xchg
mov
(bad)
(bad)
(bad)
push
adc
mov
repnz
xchg
ds
mov
neg
sub
(bad)
(bad)
inc
movs
repz
sub
in
scas
cdq
loope
in
mov
mov
inc
stos
sbb
(bad)
jle
cmp
setbe
jmp
scas
dec
loope
imul
add
(bad)
call
jle
sub
jnp
jecxz
push
sbb
sub
lods
push
mov
fstp
dec
lods
cmps
add
sbb
in
stos
jne
mov
add
es
dec
aaa
test
(bad)
push
les
test
adc
mov
or
imul
cmc
push
jmp
sub
ficomp
jp
ja
(bad)
dec
fisttp
leave
shr
and
cmp
mov
inc
sti
cli
sahf
adc
call
pushf
stos
call
sbb
push
lea
jbe
ins
pop
sbb
push
ja
jmp
cwde
sbb
fisttp
lods
sub
(bad)
jmp
jg
adc
pop
mov
das
cmp
stc
sub
retf
iret
add
(bad)
jg
mov
mov
xor
data16
inc
(bad)
test
call
popf
loope
lea
mov
sti
xor
inc
xor
in
sub
(bad)
(bad)
jmp
cmp
sub
mov
imul
add
dec
sbb
xchg
push
mov
test
sti
inc
lock
sbb
xlat
(bad)
xor
xor
(bad)
(bad)
jmp
movs
xor
cmp
shl
enter
pop
dec
or
fnsetpm(287
pop
mov
jmp
imul
test
stos
sahf
pop
into
sbb
push
pop
pop
ins
retf
sbb
(bad)
jmp
cdq
push
pop
cli
call
adc
or
pop
out
imul
cdq
loop
(bad)
mov
sbb
test
fidiv
adc
pop
cld
(bad)
jmp
sbb
adc
add
adc
fimul
in
mov
dec
lock
(bad)
dec
mov
push
loop
test
fs
sub
mov
es
or
dec
sbb
rcl
clc
mov
jecxz
ret
movs
(bad)
cmp
call
pop
mov
cmp
(bad)
jmp
cmp
xchg
dec
jge
mov
hlt
sbb
arpl
mov
mov
(bad)
(bad)
push
addr16
fcmovu
in
loop
cmp
mov
mov
dec
mov
inc
nop
sbb
retf
clc
(bad)
(bad)
jg
jmp
int3
cmp
dec
ficomp
xchg
mov
pop
dec
or
(bad)
(bad)
sbb
cmps
add
movs
ins
test
aad
dec
mov
imul
dec
out
mov
out
cmp
mov
dec
in
mov
adc
mov
mov
or
repz
jmp
in
fimul
(bad)
(bad)
(bad)
dec
movs
aam
outs
pop
test
cmp
cmp
in
and
cld
fnstenv
mov
dec
retf
adc
inc
push
mov
sub
inc
cmp
push
sub
add
leave
repnz
pusha
jmp
mov
pop
popa
rcl
test
wbinvd
sbb
mov
outs
or
cwde
cmp
(bad)
(bad)
jmp
fbld
jbe
fwait
ret
cmp
xchg
in
ins
sub
cdq
repnz
xchg
or
lods
add
fisub
push
push
pop
ins
dec
ror
sbb
inc
test
ins
loope
(bad)
(bad)
(bad)
jg
mov
mov
les
xor
ss
int
adc
in
mov
js
mov
lahf
(bad)
(bad)
(bad)
call
lahf
sub
div
mov
inc
cld
call
into
cmp
ret
sub
mov
sbb
jmp
adc
je
cli
ja
test
inc
ins
es
loop
outs
xlat
fiadd
cmc
(bad)
(bad)
(bad)
mov
icebp
aam
enter
leave
jl
and
and
jnp
xor
(bad)
call
mov
out
gs
aaa
mov
add
jo
xor
mov
and
scas
push
ficom
push
push
test
leave
pop
mov
lods
sbb
jnp
pop
lock
mov
inc
sbb
jmp
(bad)
js
lock
inc
pop
add
cmc
(bad)
(bad)
jmp
dec
cmp
and
arpl
arpl
or
xor
cwde
(bad)
push
adc
xor
jns
push
retf
data16
rcr
mov
pop
retf
lods
imul
ret
push
xchg
inc
pop
shl
xchg
push
push
(bad)
(bad)
(bad)
jmp
push
mov
icebp
push
add
cmp
nop
lods
cmp
push
call
xor
(bad)
(bad)
(bad)
jmp
clc
add
cmp
pop
inc
cmp
stos
cmps
or
stos
mov
dec
push
jmp
or
in
movs
inc
add
hlt
add
or
(bad)
(bad)
inc
pop
jnp
movs
dec
call
rol
xchg
mov
xchg
frstor
(bad)
(bad)
(bad)
push
in
inc
addr16
addr16
xchg
dec
stc
dec
or
pop
mov
rcr
jmp
jp
inc
cmp
mov
dec
pusha
stc
data16
inc
push
mov
ja
jge
add
ds
jle
or
in
push
neg
(bad)
(bad)
fild
mov
cmp
test
sub
xchg
int3
and
(bad)
(bad)
(bad)
call
adc
cmp
add
(bad)
(bad)
dec
cs
data16
and
icebp
dec
gs
(bad)
(bad)
inc
cmc
mov
test
lods
pop
adc
loope
dec
xchg
inc
sbb
mov
dec
jmp
(bad)
cmp
or
sbb
outs
call
push
cmp
inc
bswap
pop
les
clc
jmp
jns
push
cld
dec
add
inc
popa
mov
(bad)
loope
mov
test
xchg
ja
add
cmps
shl
push
neg
jle
fisttp
adc
xchg
je
adc
inc
push
mov
pop
cmp
add
into
push
dec
popf
stc
stos
(bad)
mov
pop
jg
sbb
push
dec
fidiv
std
pop
fcmovne
movs
jbe
cmp
vmulps
ficomp
std
movs
add
in
pop
dec
and
(bad)
sbb
fld
in
inc
mov
sbb
jmp
add
add
imul
push
xchg
adc
ins
cwde
(bad)
(bad)
(bad)
cmp
jb
in
call
(bad)
jne
mov
pop
dec
scas
sub
(bad)
call
stos
xchg
pop
mov
mov
(bad)
arpl
dec
xor
lods
repz
sub
(bad)
inc
xor
sar
int3
imul
(bad)
clc
dec
(bad)
call
pop
inc
jno
xchg
out
rcr
pop
and
adc
push
scas
xchg
(bad)
(bad)
in
xchg
add
fisubr
jnp
mov
or
loope
adc
add
mov
js
push
xchg
cmp
les
push
nop
sbb
(bad)
fcomip
sbb
jle
ins
or
inc
sbb
(bad)
popa
jmp
xchg
(bad)
(bad)
outs
mov
rol
inc
mov
fwait
inc
imul
ja
movs
sbb
pop
jecxz
mov
test
div
addr16
xor
fnstcw
xor
jmp
mov
dec
dec
rcl
ret
dec
mov
cmc
gs
sbb
cmp
inc
pop
lods
and
ins
xchg
sbb
cmp
jg
or
pop
or
pop
movs
stos
and
mov
mov
push
adc
inc
js
push
lods
in
iret
jle
cmp
lds
push
jo
jmp
push
(bad)
in
jl
frstor
mov
ret
mov
or
and
(bad)
(bad)
cmp
ror
int3
mov
repnz
cmp
inc
outs
call
and
xchg
arpl
adc
push
sub
and
mov
js
movs
dec
mov
xchg
call
add
enter
push
(bad)
rcr
mov
sbb
jne
aas
lods
jmp
cli
scas
(bad)
jmp
cli
cmp
mov
mov
jb
add
sbb
fstp
fs
mov
leave
in
push
imul
mov
retf
xchg
jno
ficomp
jno
out
cmp
jmp
and
push
(bad)
(bad)
call
xor
(bad)
pminub
xor
mov
bound
mov
nop
mov
(bad)
(bad)
(bad)
call
cs
jae
fcomp
(bad)
rcl
mov
shl
jae
retf
jmp
mul
and
nop
ja
adc
inc
(bad)
(bad)
(bad)
call
inc
in
push
cmp
cli
jne
or
push
and
cmp
lods
sub
(bad)
(bad)
inc
inc
ficomp
cli
xor
iret
and
inc
jl
jle
fdivr
(bad)
(bad)
(bad)
mov
inc
nop
mov
lods
loopne
dec
xchg
inc
fisub
repz
ror
neg
dec
lock
pop
add
test
cmps
adc
aad
loop
push
jne
inc
pop
lock
lock
js
adc
inc
je
dec
cld
jne
inc
jbe
ja
pop
xor
dec
or
das
call
jg
jle
add
pop
rcr
push
dec
xchg
sbb
pop
fdiv
adc
iret
movs
loope
ror
xchg
add
loop
les
iret
sub
and
mov
xchg
adc
cmps
jmp
cmp
mov
retf
mov
mov
loop
(bad)
(bad)
jmp
repz
sti
pop
pop
cld
fisubr
out
dec
cmps
sub
out
inc
loopne
test
scas
(bad)
(bad)
(bad)
push
add
inc
in
jmp
mov
xlat
idiv
and
push
addr16
jecxz
mov
je
(bad)
inc
test
xlat
mov
cmp
imul
jne
test
sub
(bad)
(bad)
call
imul
dec
ins
mov
sub
ins
push
mov
arpl
ja
push
(bad)
lock
sbb
loope
dec
test
loope
add
pop
push
test
and
and
and
(bad)
call
mov
push
cmps
jmp
ins
bound
call
jno
daa
dec
nop
jg
(bad)
(bad)
(bad)
(bad)
mov
adc
xchg
daa
adc
and
mov
xor
movs
lahf
cmovs
stos
lods
(bad)
call
xlat
aam
pusha
cmc
lea
in
sub
movs
movs
fbld
mov
mov
rcl
or
es
push
jb
dec
add
mov
pop
add
(bad)
(bad)
clc
repnz
test
jg
(bad)
cmc
jecxz
mov
or
lods
cmc
pushf
(bad)
(bad)
call
test
mov
push
(bad)
push
test
inc
push
push
cli
or
(bad)
inc
sti
lea
cmps
jns
mov
ds
push
fbstp
mov
fwait
adc
sub
cmps
aaa
push
mov
mov
(bad)
(bad)
(bad)
dec
add
or
xor
xchg
pushf
mov
int3
int
sub
aam
outs
sar
push
scas
(bad)
fsub
sub
push
aaa
sbb
and
ret
mov
sub
jmp
std
cmp
jnp
push
sub
inc
and
lahf
fcomi
cmp
cmc
mov
dec
enter
xor
(bad)
shl
sahf
imul
(bad)
or
dec
dec
arpl
jmp
cmp
jae
fsubr
je
cmp
jmp
pushf
(bad)
gs
pusha
dec
jbe
cmps
ins
cli
pop
add
jmp
xchg
sub
ins
call
mov
leave
(bad)
(bad)
(bad)
push
add
pop
gs
mov
pop
push
cmp
movs
pop
adc
and
push
add
mov
(bad)
inc
ds
adc
dec
mov
lods
push
in
push
sbb
jge
push
mov
(bad)
call
mov
sbb
das
mov
int3
sti
adc
add
js
ja
inc
dec
add
cmp
test
or
(bad)
(bad)
jg
(bad)
stc
push
out
add
cmovo
setge
push
into
mov
ret
inc
idiv
pop
mov
daa
xor
jecxz
pop
call
and
(bad)
(bad)
inc
cmp
jne
cmps
test
add
je
scas
nop
sar
inc
push
jg
inc
cdq
xchg
or
sbb
stos
sbb
lock
jbe
aaa
ja
xchg
test
rcr
(bad)
jmp
cli
fxch
and
jbe
ret
loop
sub
and
push
sub
inc
fsubr
adc
(bad)
(bad)
(bad)
mov
aas
rol
inc
push
outs
or
xchg
mov
rcr
cmps
loopne
inc
sar
(bad)
inc
push
cmp
jmp
dec
fidivr
(bad)
and
icebp
mov
in
dec
mov
les
in
push
dec
mov
(bad)
push
ins
shr
test
or
pushf
call
push
(bad)
push
pop
inc
add
test
jbe
aaa
jns
jmp
pop
and
(bad)
out
retf
pusha
imul
in
loopne
xchg
push
daa
sbb
inc
jnp
nop
lahf
inc
int3
push
jmp
mov
rol
inc
clc
(bad)
je
push
inc
xor
(bad)
clc
push
xchg
ret
fcom
dec
mov
mov
xor
jb
sub
aas
out
fisubr
pop
dec
sub
ret
inc
(bad)
(bad)
(bad)
push
dec
push
sub
add
pop
(bad)
in
sbb
add
mov
je
add
loop
icebp
mov
sbb
call
mov
mov
lds
call
(bad)
(bad)
(bad)
call
stos
push
cmp
(bad)
daa
pop
fidiv
scas
lahf
jae
test
pop
in
pop
imul
ror
js
loop
iret
mov
mov
mov
test
inc
or
push
sub
pusha
call
mov
icebp
aam
outs
cli
stos
mov
loopne
push
mov
in
into
cdq
nop
xor
pop
pop
xchg
cmc
(bad)
(bad)
(bad)
jmp
mov
shl
push
retf
sub
enter
mov
sub
jbe
xchg
sub
inc
jecxz
(bad)
(bad)
xor
mov
pusha
popf
adc
stc
sub
test
push
std
test
(bad)
(bad)
(bad)
(bad)
aas
cmp
xlat
hlt
leave
fimul
out
jmp
adc
js
xchg
nop
scas
push
dec
(bad)
(bad)
(bad)
call
jp
push
push
int3
ror
sar
xlat
mov
jmp
xchg
dec
mov
(bad)
(bad)
jmp
jne
mov
jp
(bad)
std
fmul
fdivr
int
scas
inc
pop
inc
ror
push
or
arpl
ds
mov
pop
test
std
xchg
bound
cdq
mov
pop
mov
sub
pushf
or
fnsave
xor
jg
xchg
js
(bad)
(bad)
call
lea
add
jno
je
xor
pop
fnsave
cmp
aam
(bad)
(bad)
(bad)
inc
fidiv
test
xchg
sub
je
push
and
dec
cld
jns
dec
sub
lods
mov
dec
into
bound
xor
xor
sbb
dec
mov
mov
sub
fist
dec
lea
fild
mov
cmp
(bad)
fisttp
mov
pop
sbb
scas
les
xor
loopne
les
(bad)
fdiv
call
or
nop
push
sbb
leave
fisttp
pop
loopne
(bad)
(bad)
(bad)
jmp
sti
aam
rol
leave
movs
cli
and
mov
adc
cs
mov
and
mov
pop
scas
test
inc
push
cmp
(bad)
(bad)
jmp
push
aas
fsub
xchg
pop
push
and
mov
add
(bad)
(bad)
(bad)
out
ds
mov
imul
dec
and
xor
and
stos
jbe
dec
and
frstor
call
in
imul
and
mov
sub
je
(bad)
(bad)
dec
mov
adc
dec
mov
sbb
jmp
ret
mov
jns
cdq
push
clc
mov
ficom
jb
(bad)
xchg
add
mov
jle
push
in
inc
xlat
mov
jmp
call
push
(bad)
fimul
jne
ds
mov
xor
sbb
push
jp
and
loop
clc
movs
mov
sub
ret
pop
push
and
gs
xor
test
fs
and
setne
outs
mov
hlt
scas
pop
add
std
in
(bad)
dec
or
clc
leave
test
(bad)
(bad)
(bad)
call
and
in
in
inc
jbe
shl
daa
cdq
mov
pop
push
ffreep
fisttp
inc
dec
(bad)
(bad)
(bad)
jmp
popf
loope
adc
push
icebp
mov
jp
stos
(bad)
std
stc
call
sub
ds
(bad)
(bad)
(bad)
dec
hlt
jp
add
in
or
cmp
call
sbb
mov
add
(bad)
ror
sub
and
cmp
and
mov
jge
(bad)
(bad)
jmp
into
add
gs
scas
in
sbb
inc
sbb
fidiv
inc
loop
pop
cmps
imul
push
jl
mov
(bad)
js
imul
mov
(bad)
mov
and
clc
inc
repnz
bnd
clc
rcr
stos
or
call
jmp
xchg
mov
xor
mov
sbb
mov
pusha
sti
(bad)
(bad)
fcomip
and
mov
imul
xor
jns
call
jmp
mov
push
lods
push
sbb
or
lock
jecxz
add
pop
pop
loopne
mov
or
sbb
and
mov
ss
sti
and
(bad)
inc
push
push
mov
imul
aaa
cmps
fsubr
mov
lods
sub
mov
(bad)
jg
jbe
mov
iret
jmp
shl
jmp
lods
mov
mov
mov
into
xchg
mov
sbb
nop
mov
pusha
push
cld
(bad)
dec
jg
push
sub
fldenv
pop
imul
mov
(bad)
(bad)
inc
bound
pop
es
jno
or
in
add
jmp
mov
push
lahf
or
push
sub
xchg
cmc
and
xchg
(bad)
(bad)
(bad)
push
test
mov
lea
popa
sar
add
call
idiv
(bad)
(bad)
mov
or
mov
inc
popa
lds
js
pushf
cdq
xor
(bad)
(bad)
call
loope
data16
mov
test
(bad)
push
dec
imul
(bad)
jmp
arpl
out
push
pop
das
call
adc
or
in
mov
repz
(bad)
in
mov
pop
(bad)
inc
(bad)
movlhps
and
mov
xor
js
cmp
test
(bad)
mov
(bad)
mov
add
call
gs
ds
inc
pop
cmp
cs
adc
xchg
jno
xor
add
pop
pop
aam
or
(bad)
(bad)
(bad)
mov
jle
mov
pop
jl
in
fbld
mov
iret
mov
mov
lock
dec
sub
xor
and
ror
je
sub
data16
ret
push
push
clc
sub
pop
mov
popf
xor
dec
inc
js
push
or
xchg
or
push
icebp
or
xor
xchg
movs
movs
pop
gs
sub
cdq
mov
std
inc
mov
sti
lock
sub
(bad)
(bad)
fcomip
push
sti
call
loope
js
sub
into
nop
dec
fdivr
cmp
jns
(bad)
(bad)
jmp
int3
add
call
xchg
add
dec
(bad)
ds
mov
(bad)
fisttp
pusha
shl
mov
sahf
mov
push
imul
jae
inc
sti
inc
(bad)
(bad)
(bad)
fcmovnu
jmp
fwait
sti
fsubr
(bad)
push
clc
mov
jg
pop
ins
fcomi
stc
cmp
add
(bad)
(bad)
(bad)
call
mov
and
scas
fild
pop
sub
bound
ror
call
add
inc
repz
dec
dec
and
bound
inc
inc
mov
jno
sub
add
cmp
leave
sti
dec
cld
(bad)
(bad)
jg
sbb
xchg
pop
add
in
or
out
or
and
push
dec
loopne
fnstenv
dec
cmp
add
pop
pop
mov
or
(bad)
jmp
add
push
push
mov
scas
sub
rcr
and
imul
std
retf
lahf
shl
dec
sbb
add
fdivr
xlat
xor
loope
je
pop
mov
frstor
xor
jp
(bad)
adc
out
or
in
aas
sti
scas
cli
mov
fidiv
pop
test
cdq
mul
std
jbe
(bad)
mov
ins
mov
les
mov
mov
ja
ret
out
xor
(bad)
(bad)
call
movs
or
outs
or
clc
inc
dec
repz
lds
mov
dec
fild
mov
out
add
sub
mov
xor
push
mov
(bad)
(bad)
call
scas
push
mov
xor
js
mov
add
nop
(bad)
(bad)
(bad)
(bad)
call
push
mov
shl
fisttp
or
inc
in
add
sub
mov
mov
inc
mov
aas
(bad)
(bad)
(bad)
call
mov
ds
scas
repnz
dec
lock
xchg
lods
(bad)
lds
leave
test
pop
mov
mov
push
jns
ds
call
dec
stos
cmc
and
xchg
addr16
xchg
xchg
int3
daa
fs
or
inc
outs
add
mov
and
fst
mov
lods
(bad)
(bad)
(bad)
(bad)
cmp
fistp
dec
not
pop
push
inc
push
pop
inc
jle
pop
or
dec
cmp
out
jg
(bad)
(bad)
dec
push
fdivr
mov
repz
jecxz
and
mov
pop
(bad)
(bad)
call
enter
xchg
sub
ins
xchg
add
sub
jb
add
(bad)
(bad)
dec
push
mov
scas
dec
fisttp
aad
xchg
out
xor
icebp
call
std
jg
mov
mov
fmul
(bad)
cld
push
push
(bad)
(bad)
jmp
pop
pop
xor
mov
jae
xor
xor
pop
inc
pop
(bad)
(bad)
(bad)
call
retf
sti
int3
outs
cld
xchg
or
mov
pop
mov
pop
jno
repnz
popf
(bad)
(bad)
(bad)
dec
aam
fst
outs
(bad)
pop
out
mov
xor
push
jbe
cmps
jae
(bad)
jmp
cmps
aam
pop
shr
jmp
fistp
jge
ss
popa
pop
mul
(bad)
(bad)
(bad)
jmp
les
rol
mov
das
fscale
mov
bound
push
out
fwait
int3
pop
dec
aad
cli
jg
ja
in
adc
push
xchg
lds
scas
loopne
add
call
popf
mov
cmps
ficomp
fcom
iret
arpl
push
add
test
arpl
add
(bad)
(bad)
(bad)
mov
adc
out
rcl
shl
pop
lds
(bad)
push
jnp
hlt
cmp
repnz
out
push
in
mov
xchg
and
sub
aad
aam
mov
repz
xlat
in
pop
call
div
popf
ret
sbb
cmp
(bad)
jmp
push
stos
add
add
inc
call
in
adc
outs
shr
and
pusha
sub
(bad)
(bad)
mov
jl
(bad)
cmps
daa
in
lods
shl
hlt
ror
out
idiv
je
sub
push
lahf
push
or
fwait
jmp
inc
add
(bad)
(bad)
call
push
rcr
dec
add
movs
xchg
xor
mov
int
mov
mov
or
popa
mov
jmp
sbb
dec
fdivr
dec
jne
fisub
call
fwait
dec
leave
aaa
(bad)
(bad)
(bad)
inc
out
sub
or
adc
pop
leave
mov
xchg
add
jp
mov
and
(bad)
(bad)
call
(bad)
sub
mov
dec
rcl
xchg
loope
cmps
adc
xchg
ds
sub
inc
inc
sbb
mov
and
ins
mov
and
cli
(bad)
(bad)
call
push
jmp
mul
dec
lds
jne
jns
sbb
movs
xor
(bad)
(bad)
jmp
sbb
sbb
mov
mov
cmc
mov
mov
pusha
mov
sar
jmp
(bad)
(bad)
(bad)
call
mov
inc
inc
jne
mov
das
rcr
sub
push
test
sbb
or
(bad)
call
pop
sti
dec
adc
add
daa
mov
out
xor
pop
scas
mov
dec
(bad)
retf
push
mov
outs
cld
cmps
adc
mov
loope
or
(bad)
(bad)
(bad)
call
scas
int
mov
mov
repnz
sub
jno
pop
sti
movs
or
pop
sti
(bad)
jmp
mov
jp
loope
je
lea
lahf
xchg
je
int
xor
dec
mov
out
mov
(bad)
ja
rcr
popa
sbb
pop
lods
sub
pop
xor
fcmovb
lea
(bad)
(bad)
(bad)
(bad)
dec
dec
das
outs
xor
xchg
daa
movs
and
loope
mov
js
lock
jmp
in
inc
stos
clc
fisttp
dec
cmp
call
mov
imul
push
ja
stc
fld
imul
add
(bad)
fistp
(bad)
stc
bound
or
(bad)
xchg
(bad)
popa
clc
or
out
sbb
jmp
jo
push
(bad)
sub
xchg
clc
cmp
(bad)
(bad)
(bad)
inc
js
in
add
loope
dec
dec
iret
daa
in
hlt
and
das
(bad)
fadd
stos
(bad)
(bad)
(bad)
(bad)
cli
popf
mov
cli
lods
mov
xlat
sti
mov
shr
xor
call
inc
push
cli
(bad)
(bad)
dec
fdiv
or
(bad)
push
mov
js
or
daa
rcl
push
sahf
clc
or
inc
dec
sti
bound
add
mov
imul
js
and
jge
xor
mov
fisubr
sti
inc
xchg
(bad)
(bad)
dec
imul
aam
xor
sub
call
push
xchg
cmp
inc
inc
sbb
(bad)
(bad)
(bad)
inc
pop
cmp
sub
dec
push
jg
pop
jbe
in
jge
pop
adc
jg
sub
out
mov
(bad)
call
cwde
iret
or
inc
push
adc
mov
sbb
add
and
jg
mov
and
(bad)
(bad)
call
push
sub
repz
aas
(bad)
lds
add
sbb
loopne
mov
cld
inc
push
sub
(bad)
(bad)
(bad)
push
loopne
repz
add
sbb
or
inc
fdiv
pop
jge
aas
fs
dec
popa
and
(bad)
push
mov
mov
sar
xor
cmp
pop
int
jge
xlat
(bad)
sbb
mov
jnp
out
mov
mov
sbb
popf
mov
mov
add
pop
jl
in
clc
pop
cmp
daa
js
inc
jp
pop
clc
pop
js
sub
push
(bad)
cmp
jl
xchg
dec
imul
mov
(bad)
(bad)
jg
out
(bad)
cld
aad
dec
int3
mov
outs
shl
mov
inc
aad
push
push
sbb
(bad)
mov
popf
pop
jecxz
cmp
(bad)
lock
inc
lahf
cmc
sbb
fbstp
adc
(bad)
(bad)
(bad)
cmp
out
int
enter
(bad)
push
cmp
fs
jge
call
add
lock
jge
out
cmpps
fsubr
mov
dec
or
mov
(bad)
sbb
cmps
cmp
cmp
gs
(bad)
(bad)
call
lock
jecxz
xchg
fld
sub
out
inc
out
sti
ror
push
movs
pop
(bad)
(bad)
mov
cmp
inc
aaa
ret
mov
cmc
not
(bad)
std
and
je
inc
inc
test
(bad)
(bad)
(bad)
mov
pop
les
div
jmp
outs
pop
jl
inc
mov
xchg
bound
(bad)
(bad)
(bad)
(bad)
dec
ret
pop
sbb
pop
mov
push
bnd
rcl
sar
loop
push
mov
fdivr
js
dec
(bad)
jmp
dec
jno
add
(bad)
(bad)
call
ja
dec
out
test
push
mov
fld
out
pop
sbb
sbb
mov
push
call
std
loop
pushf
jmp
stos
add
(bad)
out
mov
mov
jmp
aad
and
in
push
imul
push
cmp
ss
jbe
cwde
jb
cmp
push
out
inc
dec
std
mov
add
loopne
nop
sbb
pop
scas
not
add
(bad)
in
sub
sbb
inc
hlt
pushf
sahf
ja
retf
mov
sub
nop
lock
mov
dec
std
or
std
mov
fistp
(bad)
(bad)
(bad)
inc
hlt
in
ret
(bad)
or
arpl
dec
jl
sbb
pop
xor
pop
jecxz
sbb
jmp
xor
lea
loopne
pop
(bad)
mov
pop
cmp
test
sbb
(bad)
(bad)
(bad)
inc
mov
jecxz
sbb
aaa
daa
sub
xor
add
dec
xor
lahf
retf
mov
in
mov
and
push
and
or
(bad)
jmp
icebp
ud1
clc
add
lods
out
or
outs
jg
and
call
gs
test
out
shl
icebp
ins
mov
or
xchg
sub
jmp
int3
jo
rol
inc
xor
dec
inc
dec
xor
pushf
les
int3
(bad)
jns
add
mov
jecxz
and
retf
sar
or
cmp
cli
mov
out
add
movs
sbb
mov
mov
test
fucomip
push
jl
xor
jbe
(bad)
jp
outs
adc
cwde
inc
mov
adc
cmp
inc
sbb
xor
or
xchg
cmp
pop
sbb
and
inc
dec
sub
ja
(bad)
push
cld
pop
xchg
mov
out
adc
xor
and
xor
retf
inc
mov
or
(bad)
(bad)
push
sahf
imul
mov
lds
add
xchg
rcr
push
or
(bad)
jmp
repz
cs
lock
loopne
mov
cmp
jmp
cmps
xchg
cmp
aad
fiadd
or
(bad)
(bad)
(bad)
push
cmp
fs
(bad)
rol
(bad)
out
jl
fistp
imul
cld
jb
jecxz
fcmovbe
in
ins
int
pop
call
xor
sub
sub
or
(bad)
pop
push
sbb
push
inc
das
jg
mov
dec
out
inc
cmp
(bad)
push
cmp
fimul
jmp
ja
enter
(bad)
(bad)
cmp
sub
cmps
mov
lods
loop
call
movs
inc
dec
cs
sbb
(bad)
(bad)
(bad)
(bad)
mov
(bad)
push
push
retf
and
fwait
daa
out
push
pop
cmp
loop
mov
or
stc
jne
movs
mov
lahf
inc
test
dec
cmp
nop
shl
pop
(bad)
jl
imul
rcl
xchg
xchg
push
push
xchg
or
push
jb
jecxz
(bad)
(bad)
(bad)
sti
repz
add
pop
fbstp
das
dec
sub
cmps
(bad)
mov
fsub
jo
jg
(bad)
jmp
jo
push
in
in
pop
sahf
cmc
les
jge
outs
xor
(bad)
(bad)
(bad)
push
out
cdq
pushf
jmp
jbe
pop
cmp
sti
push
(bad)
ror
pop
xor
jmp
jmp
mov
sahf
ret
sub
ss
cld
mov
jns
cdq
mov
scas
clc
inc
(bad)
jle
mov
int3
or
pop
mov
movs
mov
push
jecxz
(bad)
dec
inc
(bad)
loop
jne
loope
bound
xchg
pushf
scas
cmp
(bad)
mov
daa
gs
lahf
mov
lods
fsubr
nop
addr16
mov
push
add
cs
dec
mov
in
out
pushf
rcr
paddd
(bad)
(bad)
(bad)
dec
cmc
cdq
sub
sbb
cdq
inc
cdq
lods
add
sub
xchg
int3
ret
cdq
js
sbb
jmp
inc
retf
aas
ror
test
into
xor
mov
cmp
lods
shr
xor
leave
dec
mov
mov
cli
or
and
sub
outs
int3
fs
mov
mov
sub
test
cmp
cmp
pop
mov
paddsb
or
(bad)
(bad)
jmp
fst
pop
mov
ins
push
sbb
fmul
outs
ins
mov
hlt
jg
(bad)
(bad)
call
jmp
mov
enter
sbb
rol
lods
in
popa
xor
add
es
inc
pop
jns
(bad)
mov
(bad)
pop
xor
mov
jge
jbe
mov
xchg
mov
lock
mov
mov
pop
sub
dec
iret
xlat
xor
(bad)
(bad)
(bad)
jmp
pop
mov
sahf
cmps
pop
sahf
mov
mov
je
jle
pushf
test
inc
imul
cmc
cld
(bad)
(bad)
(bad)
(bad)
cmp
ds
kmovw
sub
xchg
imul
ja
(bad)
mov
inc
mov
jae
in
arpl
pop
pop
cld
ror
add
test
clc
fucomp
sub
jl
sti
cmp
test
or
imul
arpl
cmp
dec
add
mov
(bad)
(bad)
call
mov
std
in
lds
mov
pop
dec
stc
leave
jae
and
mov
dec
(bad)
clc
mov
fnstsw
cld
mov
iret
push
(bad)
(bad)
jmp
adc
jmp
xchg
jg
sbb
or
lock
or
pop
sbb
idiv
inc
xor
out
imul
in
and
les
or
jno
and
inc
push
pusha
push
(bad)
call
push
adc
sbb
dec
mov
lock
cmp
leave
ja
lea
ss
jp
xchg
or
add
and
lea
(bad)
sar
imul
fistp
mov
inc
mov
push
pop
cmp
inc
sub
cmp
(bad)
(bad)
(bad)
call
imul
push
gs
xor
ins
dec
pop
and
or
arpl
(bad)
(bad)
call
leave
mov
jo
cld
bound
and
jge
(bad)
jnp
cmp
adc
aas
jle
cli
jg
gs
ja
mov
mov
repnz
(bad)
(bad)
jmp
stc
fistp
movs
pop
lea
xchg
ja
jns
clc
mov
iret
test
(bad)
inc
lods
mov
(bad)
cmp
or
(bad)
push
mov
mov
xor
mov
or
scas
(bad)
(bad)
(bad)
jmp
pop
inc
arpl
into
test
gs
pop
cmp
sub
mov
arpl
cli
loop
mov
mov
shl
sbb
mov
lahf
aad
lods
retf
(bad)
call
(bad)
(bad)
stos
mov
add
test
inc
mov
cs
jns
mov
test
(bad)
call
ret
out
or
js
pop
out
add
lahf
loop
(bad)
(bad)
(bad)
jmp
stos
and
or
jecxz
in
push
es
add
mov
sub
jmp
loope
fisttp
or
into
mov
adc
loope
add
mov
cld
mov
movs
fcmove
gs
and
mov
das
or
mov
mov
xchg
out
retf
dec
out
fistp
mov
mov
inc
loope
pop
sub
dec
lock
cmp
fs
and
mov
mov
cmc
or
(bad)
(bad)
jg
add
mov
pop
push
sbb
cmp
mov
icebp
push
mov
(bad)
(bad)
cmp
iret
sbb
jnp
imul
int3
ja
fs
popa
and
cmp
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
in
jbe
mov
pop
out
(bad)
xlat
stos
inc
xchg
mov
jp
push
jns
out
inc
std
out
push
movs
sbb
pop
aas
dec
push
(bad)
rol
mov
(bad)
call
out
dec
lods
jmp
hlt
add
out
lods
pop
clc
ficom
jmp
sub
ja
(bad)
std
push
dec
pop
xor
repnz
out
(bad)
(bad)
(bad)
jmp
outs
cmp
adc
lahf
push
mov
dec
stc
fs
loop
xlat
jbe
rcr
loopne
(bad)
(bad)
(bad)
inc
iret
pop
jecxz
xor
hlt
fnstenv
and
xor
inc
xor
xchg
add
or
movs
sub
movs
(bad)
retf
stos
(bad)
call
dec
inc
lahf
pop
imul
push
outs
xchg
fidiv
ds
addr16
dec
(bad)
dec
mov
push
mov
pop
mov
or
mov
pusha
sar
add
imul
adc
fcomp
add
loop
call
(bad)
(bad)
(bad)
fsubr
push
std
daa
pop
sub
outs
(bad)
(bad)
dec
mov
mov
mov
sub
cmp
mov
(bad)
(bad)
(bad)
jmp
xchg
fisub
add
rcr
js
or
push
push
xor
fst
call
sub
inc
fist
push
adc
nop
(bad)
(bad)
(bad)
call
mov
stc
push
mov
push
push
(bad)
xor
(bad)
imul
mov
and
sub
mov
dec
adc
loopne
fcmovne
(bad)
push
loopne
out
ss
lds
call
jmp
(bad)
mov
jno
add
(bad)
xor
pop
cmp
add
lahf
(bad)
aad
iret
sti
push
mov
bound
ror
stc
mov
inc
(bad)
jmp
out
(bad)
scas
cli
push
fild
lock
(bad)
ds
pop
mov
dec
fstp
les
lock
pop
inc
cmp
(bad)
dec
int3
sub
mov
(bad)
jnp
ins
fdivr
cs
call
pop
jl
(bad)
(bad)
(bad)
call
les
xchg
scas
test
xchg
dec
aaa
sub
or
sbb
int3
push
ja
cmp
(bad)
(bad)
call
mov
push
cld
into
ss
cmp
or
jg
or
sub
and
add
int
(bad)
(bad)
call
xchg
(bad)
repz
cli
dec
gs
jae
out
pop
sar
xchg
cs
xchg
icebp
fwait
inc
inc
shl
dec
leave
loope
pop
call
int
shr
sbb
std
inc
aas
into
adc
int3
(bad)
cmps
ret
(bad)
jmp
call
cmc
test
js
xor
sub
(bad)
push
jae
(bad)
(bad)
dec
xchg
out
push
ds
mov
dec
mov
mov
jne
(bad)
(bad)
dec
xor
add
(bad)
ja
in
loope
pusha
call
lods
movs
ret
(bad)
(bad)
push
push
lock
shr
jg
in
(bad)
scas
(bad)
push
addr16
ins
into
aam
(bad)
(bad)
(bad)
jmp
rol
xor
mov
arpl
and
sub
add
mov
into
outs
xor
(bad)
(bad)
jmp
out
and
gs
jecxz
fisttp
fidiv
out
mov
enter
sar
(bad)
dec
lock
jp
adc
in
lods
push
ins
mov
mov
jo
ins
(bad)
(bad)
(bad)
push
adc
xor
imul
or
cmp
in
pop
fidivr
push
inc
jmp
pop
jnp
test
and
and
out
sti
add
dec
imul
dec
les
add
push
cmp
loope
sti
loope
add
test
stos
fcmovnu
addr16
mov
(bad)
push
addr16
cmps
xchg
sbb
outs
sti
jmp
rcr
inc
inc
rcl
sbb
shr
ror
(bad)
(bad)
(bad)
mov
js
jnp
mov
(bad)
mov
push
pop
hlt
outs
aas
cmp
(bad)
mov
mov
cmp
scas
stos
mov
mov
jl
dec
lahf
std
outs
jge
les
cmc
hlt
(bad)
(bad)
(bad)
dec
jge
mov
ja
cmp
js
sahf
pop
inc
lahf
inc
loope
movs
and
xchg
inc
cmps
mov
loop
clts
push
loop
bound
(bad)
(bad)
call
sti
pop
xlat
into
sar
scas
lock
jmp
jl
jle
pop
pop
push
fwait
inc
dec
xchg
(bad)
(bad)
(bad)
jmp
add
pop
es
les
and
mov
pop
add
imul
aad
stc
(bad)
(bad)
(bad)
jmp
push
push
ss
lds
jle
lods
mov
cdq
arpl
(bad)
(bad)
(bad)
dec
mov
mov
push
cmps
pop
mov
stc
sahf
(bad)
sti
pop
cmp
push
dec
loopne
mov
sbb
pusha
mov
iret
das
(bad)
movs
retf
mov
push
inc
out
into
xchg
dec
pushf
(bad)
(bad)
(bad)
call
xor
dec
dec
loopne
pop
dec
fild
push
inc
test
hlt
sbb
(bad)
call
and
cld
int
call
pop
daa
pop
push
jmp
lods
sub
sub
xlat
cmc
popf
out
jmp
adc
push
loop
ds
jno
out
push
xchg
(bad)
(bad)
(bad)
mov
mov
and
jne
rol
mov
stos
loope
sub
sti
mov
(bad)
(bad)
out
push
dec
lds
cli
fld
mov
pop
xor
rol
(bad)
outs
cdq
push
lahf
call
loopne
and
add
mov
test
mov
adc
cmp
mov
pop
pop
bound
lds
fsub
ds
sti
mov
std
jae
(bad)
jg
ds
sar
or
xchg
inc
inc
arpl
sub
(bad)
dec
cmp
cmp
aaa
loope
mov
test
xor
or
popa
and
jp
(bad)
inc
jmp
enter
push
push
or
adc
mov
std
(bad)
jmp
push
cmp
mov
lock
xor
fild
aad
pop
xchg
into
adc
ins
add
inc
js
ja
or
lods
mov
add
push
dec
shr
inc
fsubr
adc
(bad)
(bad)
jmp
jmp
inc
(bad)
leave
add
scas
xor
push
xor
xchg
mov
mov
fisttp
jmp
inc
mov
xchg
out
movs
jmp
daa
jl
jmp
pop
imul
dec
clc
sbb
mov
popf
mov
add
mov
cld
mov
fdivr
jle
movs
and
dec
xlat
fwait
mov
sbb
mov
(bad)
(bad)
mov
jge
mov
rcr
and
std
pop
sti
dec
add
sti
jno
enter
outs
clc
loopne
in
and
cdq
jo
sub
in
sub
cmp
(bad)
call
stos
test
mov
sub
sub
add
mov
mov
sub
xor
imul
ds
in
popf
(bad)
(bad)
(bad)
call
out
test
jg
mov
cwde
pop
lock
push
loopne
sahf
sub
mov
(bad)
(bad)
cmp
pop
mov
mov
jbe
enter
and
addr16
test
loope
lock
mov
rcr
out
(bad)
dec
mov
push
out
jmp
scas
add
aam
pop
cmps
sbb
jecxz
(bad)
(bad)
(bad)
mov
cmps
ror
jg
cmp
add
jle
test
xchg
iret
add
mov
out
adc
pop
pusha
sub
sub
test
(bad)
(bad)
(bad)
inc
lock
push
shr
(bad)
adc
pop
mov
dec
jle
scas
fcmovbe
(bad)
(bad)
(bad)
(bad)
clc
in
mul
and
movs
data16
nop
adc
ret
lea
(bad)
jle
sub
inc
shl
fbld
std
outs
cdq
repnz
inc
jo
jmp
call
jbe
(bad)
mov
fwait
int3
add
pop
std
and
ficomp
push
pop
add
push
ja
or
xor
retf
test
(bad)
(bad)
jmp
or
cwde
lea
add
call
ins
adc
aas
xadd
outs
call
cmc
(bad)
cmp
mov
inc
ins
pop
lods
ja
bound
mov
xlat
aad
push
adc
shl
(bad)
jae
scas
pop
popf
(bad)
(bad)
fild
jle
push
call
push
das
push
call
loop
mov
(bad)
(bad)
(bad)
call
add
imul
pop
es
push
dec
mov
push
or
js
sub
jg
mov
mov
xchg
jle
mov
cmp
jmp
(bad)
jp
push
cmp
fidivr
ret
sub
cmp
iret
addr16
aas
(bad)
(bad)
jg
popa
ins
pop
add
pop
jno
dec
push
push
cwde
mov
(bad)
sub
sub
mov
jmp
js
jmp
push
cmps
cwde
push
adc
idiv
(bad)
call
data16
lea
ins
xor
inc
fbld
sbb
(bad)
(bad)
(bad)
(bad)
inc
je
mov
fs
cmps
push
adc
ret
jnp
xchg
cld
loope
(bad)
mov
loopne
inc
and
mov
and
inc
sbb
nop
repz
cli
(bad)
(bad)
mov
test
mov
dec
dec
cli
sbb
icebp
push
clc
cmp
(bad)
inc
jb
push
test
popa
iret
daa
push
or
push
sub
xor
and
xor
in
adc
xor
(bad)
(bad)
fild
jecxz
cld
lea
jns
gs
popf
cmp
in
test
xchg
jecxz
(bad)
(bad)
(bad)
call
movs
dec
cmp
mov
add
scas
movs
repz
push
ror
jg
ss
sbb
stos
add
iret
jmp
add
fisub
data16
retf
jae
inc
push
jnp
loope
mov
(bad)
inc
data16
ret
dec
dec
sub
repz
aaa
das
mov
rol
out
sbb
pop
repz
hlt
cld
loopne
call
pusha
js
cmp
add
and
das
dec
mov
fistp
xor
loope
retf
fsubrp
xchg
mov
out
jb
mov
dec
mov
sub
fwait
xchg
jns
inc
int
or
inc
and
and
outs
jns
(bad)
(bad)
jmp
out
fist
enter
push
out
push
ret
(bad)
iret
push
out
jbe
add
std
(bad)
out
outs
in
jmp
xchg
adc
mov
cld
out
jb
out
add
cdq
loope
(bad)
cdq
mov
fst
shl
mov
mov
cs
jne
(bad)
(bad)
inc
mov
lods
xor
mov
cmp
daa
std
loope
out
shl
mov
or
data16
je
dec
ja
arpl
and
ins
and
(bad)
(bad)
(bad)
(bad)
cmp
dec
push
sub
adc
sbb
aaa
fdivr
imul
fidivr
adc
mov
fst
enter
inc
pop
pop
inc
xchg
(bad)
shl
cmp
pop
in
mov
in
enter
into
mov
inc
mov
(bad)
out
cli
out
into
ror
mov
(bad)
xchg
xor
hlt
out
loope
hlt
(bad)
(bad)
fistp
xor
adc
jecxz
pushf
dec
ror
(bad)
(bad)
call
pause
out
cwde
idiv
sbb
test
jmp
int
xchg
movs
lahf
xchg
(bad)
into
sti
dec
pop
sar
dec
inc
cli
jmp
in
mov
xlat
out
jb
(bad)
(bad)
(bad)
dec
sbb
aaa
pop
test
std
(bad)
fmul
fdiv
call
lock
xchg
aas
mov
add
(bad)
jmp
in
xchg
cmp
call
movs
push
idiv
(bad)
jmp
in
mov
out
shr
mov
mov
out
jp
in
sbb
out
cli
dec
push
(bad)
add
jecxz
loopne
(bad)
mov
pop
sahf
(bad)
jmp
jmp
shr
scas
sti
pop
xlat
out
stos
or
(bad)
ja
(bad)
(bad)
(bad)
(bad)
jmp
mov
call
add
shl
(bad)
test
stos
push
adc
pop
sbb
mov
(bad)
(bad)
(bad)
jmp
push
mov
cmps
outs
push
cs
sbb
retf
fnstsw
sub
f2xm1
shl
pop
and
pop
push
std
(bad)
jmp
mov
and
test
fwait
pop
mov
or
and
(bad)
(bad)
(bad)
call
sbb
push
mov
sbb
mov
shr
xlat
or
(bad)
(bad)
jmp
xor
xchg
std
sbb
dec
cmp
pop
lock
cwde
popf
push
inc
push
retf
pop
xor
(bad)
(bad)
(bad)
jmp
xor
std
xor
std
jmp
test
cmp
imul
jmp
loope
xor
popa
shufps
pop
mov
sbb
jo
mov
adc
(bad)
(bad)
call
test
push
test
int3
data16
test
lea
xor
sbb
fwait
inc
cmc
scas
mov
pushf
xor
pop
ins
int3
ss
scas
add
mov
pop
ss
push
iret
adc
lahf
enter
(bad)
mov
pop
je
cwde
shl
aaa
xchg
rcl
repnz
jl
mov
(bad)
(bad)
jmp
pop
fcom
xchg
or
jmp
xchg
dec
add
lods
jne
dec
mov
sbb
sbb
(bad)
inc
repnz
push
sahf
and
sub
xchg
cld
repnz
dec
sar
xchg
cmps
xor
or
test
fistp
xlat
pop
cmc
(bad)
inc
jno
bound
aad
add
test
mov
fcom
call
mov
mov
mov
mov
mov
jae
sbb
cmp
jno
push
sub
push
shl
mov
dec
mov
outs
daa
jo
inc
outs
ins
inc
jge
gs
xchg
aas
mov
and
adc
(bad)
cmp
lds
or
rol
call
addr16
and
std
(bad)
(bad)
out
mov
pop
cmp
(bad)
xchg
adc
leave
les
adc
in
outs
shr
cli
add
and
pop
jecxz
jne
fdivr
mov
(bad)
mov
(bad)
icebp
sub
mov
invd
fmul
popf
arpl
jmp
dec
push
(bad)
jg
jmp
push
test
outs
jge
jle
lock
fcom
cli
out
fst
xchg
into
sbb
push
sti
outs
xor
cmps
jne
je
dec
rol
in
push
or
inc
pop
cli
retf
cs
cwde
pop
cmc
(bad)
inc
fsubr
push
and
repnz
stos
jmp
xor
(bad)
(bad)
(bad)
inc
lea
test
clc
loopne
jns
test
loopne
push
out
push
push
dec
(bad)
jb
(bad)
(bad)
(bad)
jmp
push
ja
mov
cmp
push
xchg
or
jge
jmp
(bad)
(bad)
jmp
adc
cmovp
xor
xchg
(bad)
mov
ds
sbb
cs
mov
jmp
mov
mov
rcr
retf
cld
(bad)
(bad)
mov
adc
xchg
sar
jmp
call
mov
(bad)
(bad)
mov
ja
mov
pop
lods
push
xchg
and
fstp
mov
dec
push
cmps
std
scas
ins
mov
xchg
add
(bad)
(bad)
(bad)
cli
mov
mov
or
arpl
das
ins
sub
mov
jo
clc
cmps
(bad)
(bad)
(bad)
jmp
popf
ss
int
jecxz
out
mov
fdivr
push
mov
jp
adc
push
jae
stc
std
(bad)
(bad)
(bad)
fnsave
jg
pop
ds
in
jp
icebp
mov
bound
adc
push
(bad)
xor
jecxz
xor
mov
sbb
mov
cmp
repz
add
mov
add
icebp
inc
sar
fnsave
in
mov
mov
fcomp
cmc
mov
xor
xor
repz
stc
adc
sub
(bad)
call
adc
lods
mov
cli
jl
and
mov
call
je
ror
adc
jp
in
aas
push
test
mov
push
adc
add
fild
sbb
push
inc
(bad)
sub
es
mov
call
dec
xor
cwde
dec
in
xor
in
pop
test
call
sub
out
add
(bad)
(bad)
(bad)
push
add
rcr
sbb
dec
mov
push
std
retf
mov
sbb
jbe
xor
(bad)
(bad)
jmp
xchg
push
mov
ror
pop
xor
retf
hlt
aas
sbb
adc
outs
mov
cdq
mov
bound
ss
ss
fisttp
pusha
in
jmp
xor
mov
add
ret
call
(bad)
jmp
xor
sub
hlt
lds
mov
push
in
into
std
cmp
push
mov
(bad)
(bad)
(bad)
jmp
out
pushf
cwde
adc
push
xlat
pop
xor
cmp
test
out
xchg
shl
cli
lods
(bad)
(bad)
mov
aam
pushf
ror
xor
fisubr
lahf
rcr
jge
sti
outs
movs
inc
call
cmps
sbb
daa
mov
(bad)
call
cld
jle
or
push
int
(bad)
and
and
(bad)
fistp
call
pop
dec
push
outs
test
scas
sbb
cld
in
nop
shl
jmp
inc
mov
cld
imul
(bad)
call
call
lea
push
push
fsub
mov
js
mov
sahf
jg
or
dec
cmp
adc
je
shl
cli
out
clc
enter
cmp
add
rol
(bad)
jg
inc
inc
or
and
out
jecxz
or
inc
cli
mov
les
push
sar
call
jmp
or
inc
std
out
inc
add
xchg
dec
inc
pop
retf
mov
(bad)
(bad)
std
sbb
lahf
pushf
or
in
js
ret
mov
cmp
out
inc
adc
cmp
(bad)
(bad)
mov
xor
push
cwde
ficomp
retf
les
fisubr
sub
or
(bad)
sbb
or
mov
scas
jmp
adc
outs
(bad)
(bad)
inc
movs
(bad)
mov
push
test
sahf
daa
aaa
stos
iret
loop
mov
adc
and
cmc
push
jmp
imul
sub
call
mov
cmp
sbb
sub
scas
imul
dec
lods
jmp
cmp
sbb
cmp
fidiv
xor
lds
sar
fadd
imul
push
fisub
out
(bad)
js
(bad)
cmp
mov
jmp
scas
sti
(bad)
jo
adc
(bad)
mov
cmps
repnz
popa
adc
sti
test
call
pop
cmps
cmp
mov
xchg
add
loop
arpl
paddw
test
mov
jae
or
pop
ficom
push
push
sbb
loope
inc
aaa
or
sbb
cmc
(bad)
(bad)
call
sbb
dec
test
mov
xor
xchg
iret
popf
inc
jle
sar
inc
pusha
cmp
popf
and
lods
std
inc
ficom
or
call
(bad)
pop
inc
std
mov
dec
jno
cmc
in
iret
scas
pushf
dec
jg
ss
xor
shl
cdq
rcl
or
popa
icebp
je
push
(bad)
shl
aas
test
adc
(bad)
(bad)
inc
or
aam
add
scas
sbb
ds
clc
ins
popa
(bad)
mov
sub
pop
dec
fsubr
data16
retf
mul
(bad)
(bad)
call
pop
repz
popa
cmp
movs
int3
mov
push
xor
(bad)
(bad)
(bad)
mov
cmovnp
cmp
in
or
aaa
inc
movs
in
ds
(bad)
(bad)
(bad)
call
icebp
jns
inc
cmp
xchg
test
dec
lahf
frstor
xchg
ret
cmp
mov
xchg
cld
in
sbb
(bad)
(bad)
inc
sbb
into
sti
retf
add
jae
js
cmps
xor
fbld
mov
fild
mov
std
push
push
add
sar
rcr
cmps
xor
mov
mov
(bad)
(bad)
(bad)
jmp
in
in
push
fdiv
mov
inc
pop
pushaw
std
dec
scas
iret
in
mov
dec
push
movs
xchg
jns
iret
movs
cli
inc
pop
fsubr
adc
dec
mov
jg
(bad)
(bad)
(bad)
fnstcw
jmp
(bad)
xchg
or
lods
daa
and
enter
and
sbb
push
push
test
cmps
push
xchg
aaa
out
mov
add
jbe
ficom
hlt
pop
pop
je
sub
sub
push
cmp
mov
inc
addr16
sti
shr
scas
mov
ret
mov
add
fistp
das
(bad)
mov
mov
sahf
bound
loopne
or
ja
pushf
jg
in
jo
dec
or
inc
sub
inc
mov
repz
loop
scas
dec
loop
jo
aad
(bad)
dec
lods
cdq
in
mov
not
scas
sub
and
(bad)
(bad)
call
add
stc
hlt
fldenv
test
(bad)
or
lock
(bad)
(bad)
jmp
out
cmps
pop
inc
std
scas
cmc
inc
jns
pop
dec
in
jnp
pop
fmul
pushf
sbb
pop
(bad)
call
fmul
je
sbb
mov
push
loopne
std
xchg
sub
push
fld
inc
imul
std
out
lds
jnp
dec
inc
ss
(bad)
(bad)
call
add
lahf
repnz
pop
cmp
mov
aam
(bad)
mov
(bad)
(bad)
(bad)
push
int
stos
and
or
ret
pop
mov
push
sub
and
inc
pop
(bad)
add
jg
enter
movs
mov
leave
test
mov
aad
call
lahf
mov
sbb
or
dec
int
aas
icebp
push
pop
jg
lahf
js
cdq
(bad)
(bad)
call
lahf
fmul
inc
mov
int
pop
push
sub
lock
dec
(bad)
repz
mov
sbb
push
mov
jns
inc
jle
jmp
mov
fdivr
(bad)
(bad)
push
lods
pop
pop
sub
imul
daa
pop
mov
pop
clc
sub
enter
(bad)
(bad)
(bad)
dec
push
ror
cs
idiv
ror
xor
push
sub
movs
fadd
iret
mov
lods
(bad)
(bad)
(bad)
dec
or
outs
sub
xor
jmp
add
cld
movs
out
push
test
jg
inc
cmp
stos
dec
xchg
scas
fisubr
popa
cmp
xchg
cmp
xchg
nop
leave
icebp
sbb
jl
cmps
ds
shl
lods
out
dec
(bad)
(bad)
(bad)
inc
xchg
popa
mov
inc
arpl
xor
addps
(bad)
xchg
push
ins
fdiv
(bad)
(bad)
(bad)
jmp
sub
movs
push
add
stc
mov
out
cdq
movs
fxch
mov
mov
out
or
inc
inc
adc
sbb
adc
push
ja
mul
ds
push
call
mov
into
mov
call
push
mov
call
(bad)
(bad)
mov
pop
adc
and
sub
stc
out
add
sub
dec
dec
stos
aad
push
mov
mov
loop
cdq
inc
mov
ss
mov
xchg
and
lock
stos
mov
push
jmp
in
or
mov
or
ss
cmp
sub
lea
(bad)
(bad)
push
and
nop
das
ds
xchg
(bad)
in
mov
add
int
and
adc
sbb
in
mov
bnd
or
retf
inc
mov
pop
std
pop
lock
add
push
jl
into
dec
retf
jbe
dec
cmc
div
(bad)
(bad)
jmp
mov
aad
cmps
ja
std
pushf
mov
clc
xor
cmp
mov
pop
sub
adc
(bad)
in
aaa
mov
mov
pop
aad
dec
loop
cmp
push
adc
mov
(bad)
(bad)
mov
shl
pop
jne
fst
and
call
test
and
js
fdivrp
das
mov
mov
int
push
jne
out
mov
cmps
(bad)
(bad)
(bad)
jmp
stc
sub
xchg
imul
add
pop
xchg
xor
mov
js
inc
and
inc
xchg
cmps
mov
mov
scas
pop
push
ret
push
add
(bad)
adc
(bad)
mov
js
mov
aam
jne
cmp
xchg
std
(bad)
(bad)
inc
jge
cmps
scas
stos
jbe
ja
or
scas
ret
je
fisub
out
clc
fwait
sub
jmp
dec
pop
jo
push
sbb
(bad)
(bad)
call
movs
jno
mov
push
test
or
stc
mov
jo
add
les
xor
cwde
push
sbb
add
(bad)
(bad)
call
mov
mov
fucomi
mov
pusha
arpl
loope
push
and
mov
push
jmp
addr16
sub
fcomip
(bad)
call
shl
(bad)
pop
xor
lahf
in
ins
sbb
inc
xchg
cmps
mov
dec
das
fs
jo
fidivr
pusha
dec
cmp
cmp
adc
mov
ret
(bad)
(bad)
jmp
mov
loop
clc
and
add
sbb
ror
xor
xchg
popf
add
jp
inc
cmps
outs
cmp
xor
sar
cli
mov
cli
call
inc
(bad)
xlat
cmp
and
cmp
outs
sti
test
(bad)
xchg
push
sbb
std
cmp
inc
or
jb
and
mov
and
sar
sub
pop
(bad)
pop
pusha
pop
mov
fs
add
pmullw
jge
jbe
push
mov
bound
sub
sub
add
(bad)
(bad)
fbstp
sub
js
mov
popa
cmp
pop
ror
(bad)
adc
xchg
inc
jp
aaa
cld
inc
xchg
fdiv
or
shl
dec
push
test
rol
sbb
(bad)
dec
jne
(bad)
adc
xacquire
dec
cmp
or
push
fnstsw
jecxz
sub
fidivr
fidiv
inc
adc
or
or
and
(bad)
(bad)
inc
inc
mov
xchg
mov
call
sbb
xchg
ins
sub
daa
nop
add
push
inc
push
test
dec
call
xchg
loope
xchg
xchg
or
(bad)
jmp
and
(bad)
jg
test
(bad)
je
hlt
xchg
mov
ret
inc
xchg
and
test
jecxz
fisub
mov
psubusw
sbb
add
jb
add
mov
(bad)
(bad)
(bad)
push
or
cmp
ins
(bad)
sbb
ror
movs
into
add
lea
into
xlat
sbb
ds
cwde
jae
push
(bad)
call
js
jnp
xchg
test
add
push
inc
mov
sar
inc
xchg
out
sbb
jo
(bad)
(bad)
call
sub
fucom
cmp
out
dec
test
mov
jne
push
mov
repnz
les
push
push
(bad)
sbb
cmp
push
in
mov
(bad)
mov
jg
(bad)
jg
fwait
jnp
add
fnstsw
sahf
nop
mov
out
lock
into
(bad)
(bad)
(bad)
(bad)
mov
sar
mov
iret
add
in
mov
imul
sbb
repz
(bad)
push
and
out
rcl
repz
and
aaa
jl
jecxz
call
xchg
push
add
(bad)
mov
in
or
movs
popa
inc
jmp
(bad)
(bad)
fiadd
rcl
jl
stos
(bad)
aad
and
arpl
jmp
retf
xchg
mov
(bad)
jmp
rcr
mov
scas
inc
pop
sbb
enter
dec
push
cld
ror
and
and
sbb
push
add
xchg
(bad)
(bad)
(bad)
cmp
push
es
sbb
mov
cs
fmul
icebp
repnz
sbb
repnz
popf
in
(bad)
(bad)
(bad)
call
cmp
mov
repz
fild
clc
jg
mov
jmp
inc
lea
sbb
in
ror
and
mov
xchg
data16
jno
jecxz
dec
cmp
add
mov
cmp
dec
add
mov
adc
add
xchg
jo
cwde
mov
loope
dec
or
inc
xor
imul
or
xlat
mov
out
(bad)
dec
mov
jge
std
mov
fisubr
mov
test
popf
jg
(bad)
jmp
scas
or
dec
loope
adc
push
mov
xor
cli
push
jne
fiadd
adc
mov
sub
and
pop
int
dec
add
(bad)
call
sub
jb
idiv
or
mov
call
cld
(bad)
(bad)
(bad)
(bad)
aas
stos
mov
scas
jne
or
std
mov
sbb
addr16
xlat
test
out
sub
(bad)
(bad)
push
lock
rcl
call
add
jl
add
dec
push
sbb
popa
std
pop
dec
fld
popa
(bad)
cmp
sbb
(bad)
(bad)
(bad)
call
sar
test
call
push
fcomp
call
fidivr
jbe
(bad)
mov
jmp
ins
sbb
sub
sbb
pop
outs
hlt
icebp
sbb
shl
(bad)
(bad)
jmp
jp
cmp
mov
call
sub
mov
(bad)
call
xor
pop
pop
sub
ins
sub
push
into
jbe
pop
mov
and
(bad)
dec
sub
ret
(bad)
psadbw
push
pusha
pop
adc
push
scas
add
sbb
push
call
push
inc
leave
pop
dec
or
xor
fdivrp
pop
sbb
imul
add
and
push
add
(bad)
int
nop
aam
mov
and
stos
jmp
daa
out
rcl
imul
aaa
inc
push
(bad)
out
cli
call
lods
in
or
ds
jb
cmp
loopne
jge
jo
in
aad
loop
jmp
dec
shl
jecxz
sbb
pop
add
push
cmps
aas
out
jle
(bad)
(bad)
inc
push
jmp
sub
out
mov
aas
fmul
call
xor
xchg
or
cmp
ja
jecxz
add
pop
imul
push
push
(bad)
cmp
repnz
nop
mov
jae
(bad)
in
arpl
add
inc
cmp
and
inc
lds
int
or
pop
pusha
bound
cld
sbb
jg
aad
(bad)
(bad)
(bad)
(bad)
(bad)
aas
ins
mov
test
addr16
call
int3
jg
idiv
jnp
xlat
call
loope
loopne
jp
mov
movs
arpl
mov
sti
imul
std
out
jge
mov
sar
call
ja
call
xchg
jle
out
out
sbb
ja
idiv
or
(bad)
jg
pop
dec
std
add
pop
xchg
fimul
pushf
sbb
stc
iret
std
es
cmps
pop
add
add
jmp
stc
addr16
mov
mov
ins
retf
sbb
(bad)
(bad)
push
xor
mov
mov
shr
sub
hlt
mov
dec
scas
mov
and
cmc
jmp
clc
jmp
repz
ror
inc
arpl
cmovs
and
jbe
xchg
mov
(bad)
push
outs
fld
or
loopne
(bad)
sqrtps
jne
movs
dec
cwde
jno
jg
lahf
jg
xor
in
lock
sbb
(bad)
push
jl
sti
jae
loope
(bad)
pop
shl
mov
and
mov
jg
ret
pop
fist
pop
or
outs
sbb
lods
fcomip
call
les
push
cld
xor
and
fild
push
ins
jmp
cmp
jg
imul
in
cmp
cmc
sub
mov
(bad)
(bad)
call
xor
cmc
shl
mov
push
out
mov
stos
push
jo
xor
pop
xor
dec
push
repnz
(bad)
jmp
mov
stos
pushf
dec
or
(bad)
fild
sub
xlat
push
cli
xchg
mov
test
jp
cs
or
push
(bad)
push
sub
hlt
add
iret
jmp
popf
popf
xlat
iret
sub
push
rcr
(bad)
(bad)
(bad)
jg
mov
test
out
in
sub
pop
shl
imul
dec
stos
dec
aam
cs
fnstsw
mov
pop
loopne
jmp
push
fistp
mov
pop
scas
jnp
lea
(bad)
(bad)
mov
leave
xchg
add
inc
lods
jo
bsr
or
mov
sbb
aam
shl
xor
les
xor
and
adc
push
outs
push
jne
add
inc
adc
fdiv
jmp
rol
pop
je
or
xor
(bad)
inc
repnz
iret
jmp
or
pusha
and
jmp
(bad)
(bad)
fld
push
push
test
jb
push
sbb
push
aam
mov
jns
(bad)
(bad)
dec
leave
add
push
call
dec
aaa
jns
and
shl
hlt
into
cmp
adc
pop
cmp
ins
jp
movs
lock
xchg
cdq
sub
push
stc
test
pop
pop
into
outs
jae
pusha
outs
(bad)
call
dec
xor
mov
mov
aas
inc
mov
rol
add
scas
cli
(bad)
push
jmp
and
push
inc
pop
stos
(bad)
das
add
inc
test
sar
(bad)
push
xchg
mov
and
dec
mov
call
mov
call
dec
imul
movs
xchg
icebp
mov
test
sub
in
add
jmp
jmp
stos
jmp
fsubr
ds
cmp
adc
pop
inc
rcr
sub
cwde
xor
and
sbb
enter
sbb
cmc
pusha
sub
call
loop
mov
xor
push
popf
or
(bad)
(bad)
(bad)
push
aas
jmp
inc
jecxz
(bad)
pop
xchg
push
cwde
imul
push
xchg
fldcw
call
lods
ins
dec
ins
jae
fwait
jnp
imul
xchg
adc
mov
jl
inc
aad
in
ins
jecxz
pop
adc
(bad)
fnstcw
(bad)
(bad)
(bad)
call
xchg
(bad)
cs
mov
fstp
sahf
push
mov
out
adc
mov
pusha
add
jae
in
sbb
outs
adc
push
outs
sub
fcomp
jo
cwde
es
int
mov
mov
or
mov
mov
mov
mov
mov
dec
(bad)
call
iret
mov
mov
inc
popa
cmp
mov
dec
jb
jmp
sbb
js
cdq
lods
dec
mov
repnz
mov
dec
ja
fwait
(bad)
push
push
mov
cmps
mov
jno
aaa
enter
(bad)
call
add
(bad)
sbb
jae
add
add
push
xchg
pop
(bad)
cld
(bad)
(bad)
(bad)
inc
mov
arpl
inc
sbb
jmp
ror
scas
retf
jmp
pop
sub
(bad)
jmp
jge
sbb
pop
mov
and
mov
xor
mov
(bad)
jmp
loopne
dec
data16
call
add
(bad)
(bad)
call
mov
into
clc
(bad)
sbb
fdecstp
cmp
out
fstp
retf
outs
and
cmc
inc
std
cmp
(bad)
jmp
aaa
call
es
sahf
pop
loop
nop
loop
mov
outs
(bad)
(bad)
(bad)
inc
xchg
xlat
xchg
loop
in
mov
cmps
enter
std
and
(bad)
and
shl
jl
mov
inc
jmp
inc
gs
fist
or
or
jbe
(bad)
(bad)
(bad)
call
lahf
add
retf
sbb
push
mul
add
js
mov
mov
(bad)
(bad)
dec
popa
shl
shl
leave
idiv
mov
xor
in
arpl
and
push
(bad)
jmp
push
iret
mov
inc
retf
fsubr
(bad)
mov
lods
sub
(bad)
(bad)
dec
xchg
adc
dec
stc
sar
cmp
inc
(bad)
call
sub
scas
jle
enter
mov
mov
adc
cmp
lods
aas
cdq
push
je
scas
jns
dec
in
pop
and
(bad)
(bad)
(bad)
jmp
ds
xor
mov
push
sahf
loop
adc
jp
(bad)
in
or
inc
das
add
(bad)
(bad)
call
sbb
icebp
pop
sahf
out
jl
addr16
jae
fidiv
div
xor
adc
popa
mov
shr
mov
(bad)
(bad)
dec
sar
sti
push
rcr
cli
pop
cmp
sar
fimul
imul
(bad)
jmp
nop
xor
xchg
leave
dec
movs
cwde
ins
scas
leave
jp
pop
pop
add
sub
in
push
mov
(bad)
(bad)
(bad)
dec
out
fisubr
clc
mov
fist
mov
and
pop
out
push
xor
xor
jmp
adc
sahf
icebp
retf
out
mov
pop
mov
cmps
dec
std
mov
inc
mov
dec
sbb
xchg
xchg
inc
push
(bad)
mov
pop
dec
ds
adc
sahf
cmp
jle
adc
scas
cld
fimul
ret
popa
stos
dec
push
icebp
xor
scas
push
cmp
aaa
push
pop
aaa
jl
in
sti
push
popf
mov
mov
jb
fdiv
(bad)
inc
mov
lock
inc
into
shl
and
jno
fild
outs
jge
ja
mov
pop
xor
test
out
xchg
(bad)
push
or
jb
in
lods
fldenv
add
xor
(bad)
call
add
jno
and
dec
aaa
mov
fbld
pop
stc
ret
pop
xor
mov
(bad)
jg
inc
aaa
fsub
inc
test
les
mov
mov
(bad)
(bad)
jmp
cmps
pusha
fcmovnu
clc
in
cld
jl
xor
inc
fsubr
mov
stc
push
pop
dec
and
das
ror
inc
lock
mov
xchg
pop
push
(bad)
(bad)
(bad)
push
and
pop
cmp
in
and
sub
repz
loop
mov
inc
fisttp
or
dec
jns
inc
mov
xchg
or
lods
sbb
hlt
test
fsubr
jp
nop
shl
xchg
mov
gs
in
test
xchg
data16
xchg
inc
push
(bad)
(bad)
(bad)
(bad)
(bad)
fnsave
xchg
xor
sub
mov
loop
out
or
int
xor
sub
popa
scas
(bad)
(bad)
(bad)
stos
and
bound
pushf
mov
(bad)
mov
test
ins
mov
(bad)
jecxz
(bad)
(bad)
(bad)
(bad)
cli
lahf
jno
jl
mov
je
pop
cdq
je
fidiv
inc
fistp
xor
mov
shr
inc
sub
repz
or
stos
mov
fdivr
(bad)
(bad)
jg
or
mov
jae
retf
popa
dec
fs
mov
test
fimul
push
and
(bad)
out
call
push
add
int3
xchg
popa
or
inc
xchg
jp
dec
(bad)
(bad)
(bad)
call
pop
ret
mov
jl
adc
cmp
sbb
lahf
pop
pop
cmp
fadd
stc
sub
adc
adc
ror
test
rol
ror
mov
lock
int
push
inc
push
push
loopne
push
repnz
(bad)
(bad)
(bad)
(bad)
jns
imul
mov
cli
mov
dec
(bad)
and
jns
aad
mov
add
outs
or
das
rcl
jns
cmp
pop
leave
(bad)
or
scas
mov
cmp
out
into
ret
repnz
dec
repnz
mov
scas
mov
shl
repnz
adc
in
inc
pop
cmc
add
pop
not
outs
jb
clc
pop
xor
(bad)
(bad)
(bad)
(bad)
fnstsw
inc
mov
shr
out
enter
fidivr
bound
mov
(bad)
call
rcr
cwde
scas
pop
or
ficomp
push
sbb
es
fidiv
(bad)
dec
cmp
es
loop
sub
(bad)
cmp
mov
(bad)
(bad)
(bad)
dec
mov
jo
in
inc
cmp
in
inc
sbb
into
fiadd
push
cdq
idiv
(bad)
(bad)
call
sbb
mov
not
js
mov
in
(bad)
(bad)
fisub
lahf
push
stos
mov
xchg
adc
call
pop
add
xchg
mov
(bad)
(bad)
call
movs
pop
xchg
jns
fisubr
xchg
add
xchg
ret
mov
call
sbb
jg
jb
dec
pusha
std
loope
fwait
cmp
(bad)
sar
aas
arpl
rcl
imul
add
das
xchg
xchg
cli
jae
outs
(bad)
(bad)
call
cdq
pop
sbb
and
call
not
cld
mov
das
jnp
jo
aaa
add
add
sar
pop
outs
out
inc
sti
mov
mov
fcomi
stos
nop
imul
in
mov
sar
pushf
(bad)
jno
cwde
and
jno
and
(bad)
jns
inc
fisttp
mov
addr16
lahf
sbb
repz
icebp
ds
jb
movs
inc
add
(bad)
dec
fiadd
rcl
xchg
push
sahf
lahf
(bad)
(bad)
(bad)
jmp
cmp
clc
cdq
xor
ror
add
push
fldenv
mov
(bad)
(bad)
dec
call
sbb
mov
sub
adc
cmp
or
mov
mov
adc
pop
or
mov
xchg
add
cdq
add
or
pop
jb
mov
push
call
inc
push
(bad)
(bad)
(bad)
push
fwait
shl
inc
cmps
aaa
stos
jns
imul
mov
rcr
cmp
(bad)
push
int
popf
into
lods
imul
xchg
mov
and
mov
sar
mov
call
pop
xor
(bad)
fcomi
daa
and
shr
rcr
jg
call
(bad)
jg
inc
jno
hlt
sbb
add
(bad)
mov
(bad)
(bad)
jg
loopne
xlat
imul
les
xchg
jb
fcmove
and
sub
xor
or
faddp
dec
inc
jp
or
mov
clc
sub
cmp
mov
cmc
mov
lahf
cmps
xor
or
outs
and
in
jp
cmp
in
or
xor
sub
xor
sbb
js
in
cmp
outs
mov
(bad)
(bad)
(bad)
push
push
aam
jmp
dec
into
mov
mov
pop
loope
mov
jge
cld
push
xchg
(bad)
(bad)
(bad)
inc
push
test
test
loopne
fwait
mov
mov
push
pop
jo
add
push
mov
dec
fmul
mov
lods
sub
(bad)
(bad)
jmp
data16
imul
(bad)
cdq
xor
sar
adc
(bad)
fldcw
call
cmp
xor
mov
aad
fs
dec
jbe
xchg
outs
pop
inc
(bad)
(bad)
(bad)
mov
fld
cmp
cmps
or
psubsw
out
mov
or
cld
jmp
(bad)
stos
sub
rep
cli
outs
daa
jmp
iret
xor
out
push
jecxz
push
jmp
push
and
dec
cli
leave
shl
std
inc
add
ins
add
out
clc
(bad)
call
ret
xchg
out
leave
mov
mov
daa
and
sub
(bad)
(bad)
(bad)
fstp
push
xlat
(bad)
bound
cwde
scas
jmp
shl
xchg
xchg
mov
in
adc
cmc
mov
jno
(bad)
jg
mov
and
or
pop
loopne
fwait
retf
lea
in
sbb
(bad)
(bad)
jmp
add
ins
or
iret
cmp
dec
add
sub
ja
(bad)
shl
pop
(bad)
(bad)
(bad)
(bad)
jmp
jg
jecxz
mov
mov
pop
je
and
(bad)
ror
cmp
sbb
adc
(bad)
frstor
fsub
pop
test
sub
or
push
jecxz
jne
jne
outs
in
sar
or
or
mov
jns
push
(bad)
call
xor
xchg
xchg
pop
cmp
push
xchg
push
sbb
pop
mov
idiv
neg
hlt
addr16
mov
sub
inc
fnstenv
icebp
xchg
jno
stos
(bad)
(bad)
(bad)
jmp
dec
and
out
and
cmc
adc
(bad)
ja
sub
jp
(bad)
jmp
stc
mov
sub
dec
mov
sbb
ds
sub
ds
pop
frstor
and
push
xchg
jge
lahf
sar
scas
clc
inc
inc
es
dec
out
ins
add
lods
jne
repnz
seto
icebp
xchg
sbb
(bad)
dec
adc
jae
fistp
inc
fld
push
js
add
(bad)
(bad)
jmp
in
jecxz
rol
ins
lahf
sub
xor
je
ficom
(bad)
mov
inc
add
jg
scas
movs
add
jle
addr16
xchg
addr16
(bad)
(bad)
dec
push
adc
daa
neg
jns
aaa
mov
jbe
jae
mov
mov
add
call
or
xchg
mov
fbld
(bad)
jmp
jne
inc
sub
add
xor
mov
(bad)
(bad)
push
jb
int3
in
sti
add
mov
pop
mov
aas
repz
xchg
(bad)
(bad)
jg
adc
fdiv
cld
sub
stos
call
sub
xchg
inc
pop
jns
(bad)
(bad)
(bad)
dec
xor
fild
push
jae
jle
mov
push
push
fild
(bad)
call
test
cwde
push
push
int
ins
jbe
mov
mov
dec
shufps
sbb
dec
mov
jmp
lock
shr
sahf
loopne
addr16
(bad)
mov
movs
add
iret
and
lea
cld
sub
push
mov
inc
(bad)
jne
jo
mov
inc
cld
fsub
jecxz
cmc
pushf
and
add
ret
(bad)
mov
sbb
lock
(bad)
mov
(bad)
and
jmp
jg
neg
xchg
xchg
(bad)
stc
push
pop
outs
(bad)
(bad)
mov
out
jnp
sub
adc
mov
mov
imul
jmp
movs
fmul
xchg
and
scas
and
sti
mov
push
push
xor
cmp
sar
(bad)
(bad)
jmp
dec
rol
cmp
push
shl
mov
jmp
xchg
lock
out
seta
cmp
jg
test
fidivr
cs
aad
jge
rol
sub
(bad)
(bad)
(bad)
call
xchg
movs
inc
jae
in
out
mov
call
or
mov
scas
icebp
pushf
inc
popf
pop
fs
out
adc
std
pop
jp
shl
adc
mov
stos
mov
mov
ja
jb
and
test
ror
mov
(bad)
icebp
(bad)
(bad)
jmp
add
cmc
icebp
mov
pusha
out
stos
cmp
out
aam
cli
pop
in
jbe
push
sbb
(bad)
dec
or
int
mov
push
and
mov
pop
hlt
jmp
fdivr
sbb
pusha
sahf
pop
push
dec
aaa
and
lock
(bad)
jmp
push
and
cmp
(bad)
(bad)
(bad)
jg
ret
fistp
shl
in
inc
fwait
sbb
mov
dec
lahf
rcl
inc
and
xor
cmc
pop
es
mov
jb
(bad)
(bad)
retf
imul
cmp
(bad)
(bad)
call
dec
xchg
xlat
adc
outs
push
jle
pushf
push
aam
scas
call
imul
sub
(bad)
(bad)
(bad)
jmp
shl
sbb
inc
imul
ss
retf
inc
pop
push
cli
ja
sub
outs
xchg
scas
(bad)
mov
adc
rol
sbb
shl
jo
sbb
push
xchg
xor
(bad)
(bad)
(bad)
call
jns
adc
cld
in
inc
inc
ficomp
retf
push
into
add
add
sub
push
(bad)
(bad)
(bad)
call
mov
jnp
std
loope
cld
ins
bound
and
sub
es
inc
out
inc
jmp
ins
adc
fidivr
mov
mov
inc
icebp
pop
ss
fsub
mov
stos
or
sahf
dec
repnz
pop
adc
fwait
in
jmp
loopne
push
lods
dec
jb
hlt
cmps
repz
data16
xlat
inc
push
in
stc
pop
movs
jo
out
jmp
adc
push
call
es
adc
scas
sbb
add
std
xchg
in
dec
mov
(bad)
(bad)
(bad)
fmul
lods
dec
fdivrp
and
pop
push
jmp
cmp
sbb
add
(bad)
(bad)
(bad)
dec
(bad)
xchg
xor
bound
xor
jne
lahf
movs
jno
daa
add
and
adc
stc
cld
(bad)
(bad)
(bad)
(bad)
in
dec
loopne
ja
add
jp
push
in
data16
retf
push
lea
dec
inc
mov
cmp
pop
(bad)
(bad)
(bad)
jmp
(bad)
pop
cmc
loope
ja
test
out
fist
imul
sbb
(bad)
scas
out
aas
cdq
sar
xor
arpl
lock
retf
sub
adc
mov
jle
test
pop
jle
fcom
sub
mov
call
mov
cmovp
mov
ret
call
fnstenv
ret
cmp
lods
jns
ret
je
xchg
outs
test
(bad)
(bad)
inc
mov
cmps
aas
add
cmp
bnd
cmp
mov
iret
sub
cmp
(bad)
(bad)
jmp
mov
shr
sbb
pop
imul
ret
xlat
aas
std
mov
(bad)
(bad)
jg
out
dec
rol
adc
lahf
jmp
call
or
les
(bad)
lock
(bad)
jmp
mov
daa
mov
sbb
repnz
adc
xlat
lahf
bound
(bad)
ret
adc
pushf
or
sbb
scas
mov
aaa
push
add
(bad)
(bad)
call
mov
push
pop
add
ret
xchg
sahf
xchg
mov
(bad)
xchg
inc
adc
(bad)
push
(bad)
mov
push
xchg
daa
jb
pusha
pusha
mov
fdiv
enter
test
shl
dec
pop
add
fwait
repnz
sbb
or
pop
aas
ins
pop
(bad)
(bad)
(bad)
in
ficomp
cli
pushf
repz
clc
xchg
fcomp
dec
icebp
mov
hlt
(bad)
(bad)
(bad)
jmp
lahf
fimul
push
das
add
mov
ret
dec
ds
test
jge
popa
test
cmp
(bad)
(bad)
inc
cmp
cmp
mov
or
jo
mov
sbb
jmp
jmp
(bad)
iret
outs
mov
add
sub
cmp
add
and
cmp
sub
adc
mov
inc
mov
xor
fbld
test
(bad)
push
mov
jmp
inc
mov
js
sbb
inc
xor
xor
call
mov
shl
loopne
scas
pop
test
sbb
outs
mov
test
ins
jo
js
imul
retf
jl
retf
mov
(bad)
jmp
fimul
sub
ret
sahf
fiadd
mov
nop
icebp
adc
pop
(bad)
push
mov
xchg
mov
mov
dec
sti
ja
lea
(bad)
(bad)
inc
out
xor
retf
mov
in
jg
sti
add
mov
sbb
retf
dec
sar
addr16
sbb
retf
ret
jo
xor
out
jmp
pop
out
mov
jnp
ficomp
jecxz
arpl
jo
fdivr
jmp
pusha
out
push
das
or
sahf
pushf
out
jp
clc
and
lea
(bad)
inc
xchg
cmps
cdq
pop
or
or
xchg
xor
(bad)
(bad)
in
sub
adc
mov
jle
push
imul
mov
shl
push
popa
(bad)
(bad)
(bad)
jmp
(bad)
cli
repz
daa
sbb
aam
jg
aaa
(bad)
mov
in
fldl2e
push
addr16
lods
out
sub
mov
les
call
mov
dec
lods
scas
jle
pop
icebp
(bad)
inc
pop
stos
aas
loope
dec
sub
fidivr
jb
daa
pop
(bad)
(bad)
fcmovnu
mov
outs
or
in
ret
aaa
repnz
xchg
add
cmp
ins
jecxz
and
retf
xor
add
or
dec
ficom
and
movs
pop
xchg
out
push
in
xor
ja
dec
jmp
mov
pop
mov
adc
test
es
or
(bad)
(bad)
(bad)
mov
pop
push
cmc
jp
cs
add
popf
mov
push
imul
das
or
call
(bad)
arpl
fidivr
xlat
movs
lea
neg
mov
xor
jecxz
jmp
rcl
mov
aas
(bad)
sar
pop
repz
fcomip
(bad)
fbstp
push
sub
cmc
call
(bad)
(bad)
(bad)
jmp
sub
sahf
push
or
push
retf
sub
aad
sub
call
sbb
add
fs
(bad)
fcomip
jge
mov
into
pop
push
dec
xor
dec
outs
sbb
shr
adc
(bad)
(bad)
(bad)
push
imul
fnstsw
sub
mov
push
retf
or
outs
sbb
jae
ds
cmp
pop
adc
(bad)
(bad)
call
mov
das
adc
es
(bad)
retf
mov
cld
adc
ins
dec
mov
(bad)
push
adc
loope
sahf
out
push
mov
ss
(bad)
jmp
inc
fwait
xchg
scas
dec
mov
repnz
mov
nop
idiv
mov
(bad)
(bad)
jmp
xor
jmp
stc
jmp
or
mov
cmp
and
add
cs
mov
sbb
sar
jg
inc
std
mov
jmp
stos
sub
into
cmp
cmp
xchg
sbb
(bad)
imul
in
mov
dec
sbb
out
cs
(bad)
(bad)
jg
push
repnz
test
xchg
cmps
fmul
clc
call
sub
(bad)
(bad)
(bad)
std
xor
jb
js
ret
in
icebp
lods
das
push
inc
pop
mov
stc
push
sub
(bad)
(bad)
(bad)
jmp
lock
mov
adc
inc
jmp
xor
mov
stc
popa
(bad)
(bad)
jg
mov
push
add
nop
jmp
add
dec
push
or
jno
in
(bad)
(bad)
(bad)
jmp
and
mov
pusha
(bad)
mov
jo
scas
inc
pop
hlt
xchg
sahf
jns
push
adc
movs
icebp
and
and
dec
jae
call
adc
(bad)
(bad)
mov
jg
cmp
lods
ss
cmp
push
jg
adc
(bad)
(bad)
(bad)
(bad)
cmp
loopne
push
pop
xchg
sbb
xor
pop
mov
or
cmps
iret
xchg
push
sub
(bad)
(bad)
jmp
pop
outs
add
xor
dec
sti
mov
push
enter
dec
lahf
imul
sar
(bad)
(bad)
fcmovbe
or
add
call
add
dec
jb
cld
outs
lods
test
(bad)
jg
xchg
ds
fbld
jmp
inc
adc
add
ror
mov
out
in
or
popf
(bad)
ficom
cmp
js
ins
mov
fwait
mov
in
dec
push
jbe
test
scas
pop
dec
inc
jno
out
dec
ins
stos
ret
(bad)
(bad)
fbld
mov
pop
test
in
(bad)
movups
retf
xor
mov
(bad)
(bad)
(bad)
dec
sti
jne
fwait
add
sbb
aaa
cli
jo
mov
inc
stos
aad
shl
(bad)
(bad)
(bad)
call
aaa
mov
add
scas
lock
sub
push
cmps
mov
adc
jno
(bad)
mov
cmps
(bad)
(bad)
(bad)
dec
pslld
push
and
cmp
push
mov
xchg
iret
rcr
inc
pop
into
loop
xor
(bad)
(bad)
call
(bad)
cmp
ds
pop
in
add
fiadd
sbb
ins
(bad)
(bad)
(bad)
(bad)
aas
jns
mov
and
push
mul
ror
and
lods
add
jno
mov
sub
(bad)
in
sbb
out
sar
push
inc
xchg
in
adc
add
ret
cld
cld
leave
(bad)
mov
(bad)
(bad)
(bad)
jl
push
out
data16
sti
jno
add
repnz
icebp
mov
add
mov
sub
cwde
jbe
scas
add
call
inc
sbb
and
sbb
in
xor
rcl
jmp
sub
call
mov
jmp
dec
sar
(bad)
adc
xchg
(bad)
jmp
dec
sti
jg
std
cld
adc
in
cmps
inc
sub
xchg
nop
adc
out
(bad)
(bad)
(bad)
(bad)
jg
jns
sub
fidiv
lds
das
add
dec
mov
test
jle
(bad)
mov
pusha
add
outs
xor
retf
pop
fcos
push
dec
pop
rcl
(bad)
cs
push
pop
sub
dec
cmps
sub
int
(bad)
(bad)
(bad)
(bad)
mov
sub
popa
movs
jb
test
lods
add
fmul
(bad)
cli
(bad)
(bad)
(bad)
dec
fsubr
inc
les
mov
inc
fst
sti
test
jmp
xor
lock
pop
aaa
test
aas
fcom
(bad)
call
lock
mov
sub
mov
jbe
repz
shl
jae
out
push
mov
sti
or
(bad)
(bad)
(bad)
jmp
and
cli
adc
and
pop
mov
fistp
fwait
or
dec
clc
(bad)
(bad)
jp
into
jmp
mov
popa
mov
retf
sub
fist
movs
not
push
pop
ret
cmp
ins
xchg
mov
cmp
pop
inc
cmc
cmc
and
mov
push
lock
int
xchg
sub
in
not
(bad)
(bad)
(bad)
fnstsw
test
fs
aam
lock
inc
in
imul
add
loop
push
iret
xchg
mov
cmp
mov
xchg
cmc
call
sub
adc
sbb
pop
(bad)
(bad)
jg
mov
test
int3
pop
call
or
sar
mov
add
cmc
cwde
bnd
sar
movs
and
gs
add
ret
(bad)
(bad)
call
pushf
adc
fstp
test
sbb
fsubr
cmps
jbe
xor
sahf
inc
cmp
cmc
das
sub
(bad)
(bad)
jg
add
jno
popa
fdivp
nop
(bad)
rcr
or
(bad)
fcomp
das
retf
test
aad
(bad)
mov
mov
sub
(bad)
scas
pop
mov
pop
ja
(bad)
push
mov
xchg
stos
ins
mov
sbb
inc
ds
ss
lahf
(bad)
(bad)
(bad)
call
ficom
gs
aas
pusha
xchg
enter
fmul
(bad)
int
imul
pop
call
(bad)
ds
(bad)
add
adc
aaa
xchg
fmul
sbb
cmps
pop
aas
xchg
lods
clc
add
call
and
fcomp
inc
cmc
mov
shl
(bad)
call
mov
pop
loop
pop
out
mov
pop
cld
ds
mov
fist
movs
shr
(bad)
and
outs
pop
enter
(bad)
(bad)
jmp
jp
xchg
jecxz
add
push
retf
pop
xchg
sti
or
inc
pop
inc
or
cmp
movs
sbb
dec
or
test
stc
xor
mov
jb
or
ss
(bad)
(bad)
(bad)
(bad)
cmp
jb
outs
push
stos
adc
mov
push
scas
in
out
add
retf
xchg
aad
sub
jg
shl
call
jne
lock
pushf
dec
or
lods
xchg
loope
sbb
aas
std
arpl
(bad)
call
or
jns
mov
mov
add
fdivr
loop
call
mov
(bad)
iret
and
cdq
fstp
ficom
outs
out
cmp
gs
xor
pop
pop
jnp
or
xchg
mov
add
(bad)
(bad)
(bad)
jmp
popf
xor
sub
enter
fistp
fs
jle
mov
test
pop
or
loope
(bad)
(bad)
(bad)
ds
retf
test
(bad)
xchg
push
sub
dec
xchg
or
dec
mov
(bad)
(bad)
(bad)
call
dec
out
dec
jae
jmp
jo
in
ficom
push
out
in
ins
jg
cmps
xor
(bad)
jg
cli
stc
xor
cli
ret
push
cmp
inc
jg
mov
sti
sub
cmps
ds
scas
push
pop
or
(bad)
retf
adc
(bad)
inc
and
jle
(bad)
jp
inc
push
push
iret
test
and
jecxz
fbld
shr
push
pop
lods
push
jns
jno
pop
iret
in
pop
pushf
int3
into
ffree
jge
sbb
jmp
jbe
rol
jle
repnz
add
push
xchg
call
cs
aad
sbb
sbb
fwait
mov
es
(bad)
(bad)
jmp
pushf
les
sbb
in
pop
sbb
push
in
push
arpl
ins
pop
mov
jle
(bad)
(bad)
dec
mov
(bad)
in
mov
fadd
fdivr
cmp
sub
mov
(bad)
(bad)
(bad)
push
jmp
js
stc
loopne
sub
js
fimul
push
dec
inc
jge
push
sbb
mov
dec
(bad)
call
in
jno
push
sar
out
fimul
(bad)
jle
jge
aad
fwait
test
(bad)
(bad)
(bad)
inc
adc
mov
mov
mov
xor
pop
jmp
mov
mov
ret
push
cmc
pop
sbb
hlt
sahf
popa
xchg
nop
jne
jl
stos
mov
push
call
sbb
adc
mov
jge
mov
push
aaa
std
sub
ror
sbb
mov
sub
or
sbb
stos
xor
cmp
dec
ins
cmp
lea
sub
(bad)
(bad)
jmp
inc
pop
mov
out
pop
sub
and
jmp
repnz
loopne
add
(bad)
(bad)
(bad)
jmp
pop
push
(bad)
out
jae
jns
xchg
pop
inc
mov
mov
jmp
hlt
repz
jmp
call
ins
adc
lds
adc
outs
jp
jp
cld
pushf
and
mov
adc
lahf
pop
std
cmp
test
std
jge
cli
fist
dec
cmp
(bad)
cmp
mov
into
sub
cmp
inc
jecxz
je
call
lods
stos
ja
scas
cmp
jo
mov
or
mov
je
mov
imul
mov
call
adc
adc
sbb
add
cmp
das
(bad)
cli
fadd
lds
xchg
hlt
push
fsub
inc
adc
add
(bad)
push
cmp
sbb
xor
mov
mov
call
jg
add
lods
sub
ins
xchg
or
push
out
mov
push
ins
cmp
jge
test
mov
(bad)
cli
out
fdivr
sti
inc
fdiv
lahf
(bad)
jg
ja
test
pop
add
mov
push
int3
pop
fadd
fsub
(bad)
(bad)
(bad)
call
inc
mov
fsub
ficomp
test
je
adc
dec
inc
(bad)
(bad)
(bad)
dec
and
stos
mov
gs
and
dec
push
out
call
aaa
out
clc
(bad)
(bad)
jmp
cmp
mov
(bad)
rol
popf
mov
mov
aaa
(bad)
(bad)
jmp
sub
and
into
int
out
dec
fsub
mov
(bad)
push
pop
mov
mov
xchg
or
xchg
dec
jns
push
lock
inc
rcr
push
cld
mov
adc
mov
pop
mov
cmp
js
(bad)
(bad)
jmp
repnz
hlt
xor
test
repnz
lds
fcomip
jbe
test
(bad)
(bad)
(bad)
(bad)
jle
(bad)
push
fsubrp
leave
adc
jbe
bnd
stos
ss
call
jbe
inc
stc
movs
jae
ret
(bad)
mov
retf
inc
repz
pop
std
adc
call
fs
(bad)
mov
in
int
inc
out
push
gs
ja
sbb
in
push
dec
sbb
int3
jnp
out
adc
stos
(bad)
(bad)
fist
and
cld
cmovbe
add
retf
int
test
adc
nop
jl
push
mov
fiadd
inc
mov
cmc
movs
dec
push
fs
leave
xchg
dec
xchg
je
cmp
cwde
mov
inc
adc
sbb
std
(bad)
(bad)
call
jnp
leave
sti
aam
stc
pop
and
pop
cmp
ins
sti
fmul
in
loopne
not
or
and
dec
pop
push
add
hlt
mov
out
ds
(bad)
dec
ins
imul
inc
cmps
and
mov
push
mov
scas
clc
call
xchg
adc
cli
in
call
out
pop
push
push
cmc
mov
jg
(bad)
(bad)
fadd
or
fsub
mov
xor
(bad)
cmp
xor
mov
call
dec
inc
mov
cli
into
jbe
dec
imul
push
xor
(bad)
(bad)
(bad)
jmp
pop
pop
scas
xor
(bad)
push
add
mov
and
nop
setnp
sbb
add
outs
jle
mov
add
es
jl
stos
sub
loop
cld
(bad)
(bad)
fdiv
popf
ficomp
fisttp
adc
push
sub
sar
call
add
mov
sub
cmp
jg
mov
sqrtps
fbld
sar
sub
je
add
add
pop
out
(bad)
call
jle
or
retf
xchg
jp
add
jp
std
pop
repnz
or
gs
mov
in
retf
out
cmps
scas
out
xor
(bad)
fisubr
dec
cmp
mov
(bad)
(bad)
call
les
cmps
popf
mov
lea
ins
fild
sub
aad
(bad)
(bad)
dec
and
xlat
push
xchg
mov
or
repz
ss
push
clc
call
pop
cmp
in
push
mov
test
(bad)
call
jno
call
addr16
adc
xchg
sbb
cld
adc
mov
rol
test
inc
xchg
dec
fstp
mov
into
inc
pop
ds
imul
inc
push
pop
cmp
(bad)
(bad)
(bad)
push
jg
fisttp
push
dec
sub
loop
retf
mov
(bad)
or
(bad)
(bad)
(bad)
dec
test
ds
mov
je
jb
stos
out
cmps
or
cmp
(bad)
dec
xchg
and
mov
ss
neg
xor
mov
pop
sub
sbb
retf
loopne
mov
inc
test
out
test
cmp
cmp
test
add
jnp
repz
push
fdivp
or
call
shl
xor
rcl
repz
inc
aaa
and
hlt
add
fcmovu
stos
jp
or
jmp
(bad)
(bad)
(bad)
jg
ror
xchg
push
or
test
daa
add
mov
add
pop
ins
dec
inc
data16
mov
imul
ror
(bad)
dec
les
mov
retf
cli
jg
cmp
lahf
mov
pop
rol
sar
(bad)
(bad)
dec
dec
or
mov
aas
push
fs
bound
call
(bad)
(bad)
(bad)
call
and
shl
stos
dec
push
mov
push
and
xchg
jae
jge
out
inc
jbe
xor
dec
(bad)
(bad)
(bad)
inc
add
sub
dec
mov
repz
push
mov
loopne
(bad)
push
mov
sbb
or
enter
xchg
in
cmp
scas
mov
jmp
fild
cmp
les
add
adc
sbb
sbb
pop
into
out
jno
dec
and
(bad)
jg
inc
push
xchg
pop
scas
xlat
xchg
stc
or
int
out
(bad)
(bad)
(bad)
call
out
adc
mov
loope
xor
add
add
pop
stos
sbb
pop
std
inc
add
pushf
or
xchg
sbb
out
jb
and
cs
mov
ins
fiadd
pushf
sahf
mov
inc
jno
icebp
(bad)
jmp
loop
lds
lds
push
(bad)
lock
sub
(bad)
(bad)
(bad)
cmp
dec
test
sti
push
cmc
push
fbld
pushf
(bad)
jns
ret
cmp
(bad)
mov
pushf
add
mov
imul
push
gs
cmp
dec
aad
addr16
mov
or
or
push
dec
shr
cmp
sahf
repnz
mov
and
outs
(bad)
jns
popa
mov
ins
push
push
mov
dec
mov
mov
xor
mov
jl
cmp
pushf
(bad)
(bad)
(bad)
jmp
push
push
stos
test
fist
jnp
mov
and
mov
cwde
or
(bad)
(bad)
call
xchg
cmp
xor
test
jmp
in
cmp
ins
xor
inc
mov
adc
ficom
jle
adc
clc
shr
mov
imul
(bad)
call
or
add
(bad)
xor
push
mov
add
(bad)
(bad)
(bad)
call
fidiv
adc
inc
sar
or
jg
addr16
push
jecxz
or
repnz
or
mov
cmp
mov
mov
push
add
shl
xchg
mov
and
aaa
loopne
in
jle
xchg
(bad)
(bad)
(bad)
call
retf
repz
ficomp
(bad)
jnp
mov
adc
ret
push
sbb
dec
adc
and
mov
rcr
fcmovb
jne
inc
jge
fdiv
push
push
loopne
(bad)
mov
sub
inc
push
add
jns
push
sub
jg
push
jae
inc
ds
popa
pop
leave
in
add
aad
stos
inc
jmp
int
adc
not
(bad)
(bad)
(bad)
(bad)
cmp
sub
in
imul
pop
rcl
cmps
sbb
cld
lods
and
pop
jmp
(bad)
jmp
(bad)
test
in
push
sbb
push
cli
xchg
push
sbb
leave
pop
(bad)
cmc
jmp
call
inc
movs
je
(bad)
push
jo
bound
jmp
fadd
pop
ss
xchg
pushf
bound
xchg
dec
imul
in
xchg
push
sub
sub
ss
(bad)
(bad)
fild
lock
push
(bad)
leave
test
je
out
xchg
xor
sbb
fnstenv
jno
(bad)
jmp
ret
bound
ror
repnz
inc
jb
popf
mov
mov
popf
pop
pop
(bad)
jmp
loop
retf
mov
pop
or
jle
jge
mov
ins
adc
fs
(bad)
ins
pusha
push
rol
xor
enter
sahf
adc
clc
push
mov
(bad)
mov
push
rol
jmp
mov
or
pop
shl
(bad)
(bad)
jmp
jl
mov
outs
outs
test
movs
int
outs
bound
pop
(bad)
mov
call
and
in
cld
retf
test
mov
mov
je
sub
jmp
in
cwde
sub
adc
ss
in
mov
pusha
pop
scas
(bad)
(bad)
push
jmp
dec
sub
aam
pop
jl
retf
lea
or
out
jp
or
inc
cmps
(bad)
(bad)
dec
lock
icebp
add
push
nop
pop
pushf
inc
mov
neg
popf
add
js
imul
(bad)
(bad)
(bad)
inc
or
pop
popf
(bad)
mov
gs
inc
sbb
daa
or
ret
inc
jne
(bad)
(bad)
(bad)
jmp
add
jge
or
xchg
int
mov
data16
pushf
sbb
(bad)
(bad)
(bad)
fst
add
stos
daa
inc
aaa
ins
mov
mov
push
cdq
out
xchg
add
lds
stos
das
ror
movs
dec
and
mov
and
(bad)
mov
and
jge
fimul
mov
aas
rcl
rcr
jg
(bad)
(bad)
(bad)
(bad)
sti
adc
loop
(bad)
movs
push
shl
add
pop
test
dec
lea
jge
sar
add
dec
imul
mov
inc
push
mov
dec
shl
aad
sbb
gs
or
cmps
retf
mov
pop
mov
adc
adc
aad
(bad)
dec
lods
pop
or
xchg
test
gs
test
xor
(bad)
mov
jg
mov
xor
fild
dec
scas
mov
mov
jp
pop
pop
mov
popf
jbe
nop
fcmovnb
add
(bad)
(bad)
(bad)
mov
jno
iret
sub
jmp
out
not
cmps
inc
mov
push
cmps
test
pop
sub
and
jnp
push
cwde
xor
mov
(bad)
loope
(bad)
jmp
jl
jmp
clc
(bad)
jmp
mov
inc
ja
(bad)
adc
outs
(bad)
jne
clc
sti
(bad)
(bad)
(bad)
inc
ds
mov
mov
or
movs
inc
and
push
push
ins
push
(bad)
dec
mov
pop
xchg
adc
mov
cmps
repz
mov
ss
leave
out
sbb
dec
test
nop
out
aas
outs
dec
xchg
mov
(bad)
(bad)
(bad)
js
xor
add
jns
test
sbb
pop
mov
inc
or
and
(bad)
(bad)
(bad)
inc
mov
add
inc
lods
test
cmp
ret
pop
sub
sbb
(bad)
(bad)
call
dec
sahf
mul
xchg
mov
adc
arpl
pop
hlt
aaa
iret
cmp
call
(bad)
(bad)
inc
dec
call
imul
test
lock
pop
cdq
lods
pop
sub
(bad)
out
clc
jmp
jmp
cmp
mov
sub
call
add
add
sahf
shl
out
fld
push
xor
pusha
sbb
dec
ds
or
pop
xchg
add
test
and
mov
enter
jle
imul
push
(bad)
push
cs
add
popa
lea
repnz
xchg
xor
(bad)
(bad)
(bad)
jmp
sub
pop
std
or
frstor
scas
inc
call
mov
(bad)
(bad)
(bad)
aas
aad
mov
and
movs
movs
cmp
push
xchg
inc
jo
xor
cwde
rol
rol
cwde
add
(bad)
(bad)
call
pop
sub
sub
mov
in
sbb
jg
xchg
pop
shld
ret
(bad)
fcomip
dec
xchg
push
add
mov
ret
test
add
xchg
gs
(bad)
(bad)
(bad)
inc
pop
fdivp
and
cmps
cmp
lods
jbe
push
clc
push
in
sahf
std
(bad)
out
nop
sub
(bad)
iret
pop
dec
shl
mov
(bad)
ds
fiadd
je
inc
sbb
std
(bad)
mov
jmp
inc
pop
call
pop
imul
sub
out
clc
add
or
cmp
stos
in
push
out
ja
mov
cmp
iret
jae
arpl
data16
paddd
je
(bad)
test
xchg
pop
data16
movs
test
sbb
fadd
inc
sbb
mov
fbstp
ins
cs
sti
and
push
lods
adc
jb
mov
or
add
xchg
jecxz
idiv
(bad)
(bad)
jmp
mov
jle
lods
clc
pop
stc
in
subps
inc
jp
adc
jecxz
ds
(bad)
jmp
jo
div
mov
pop
add
es
aaa
adc
(bad)
(bad)
push
mov
mov
and
jbe
lock
and
mov
test
call
jns
clc
fidivr
aad
or
push
cmp
lods
or
scas
and
xchg
mov
mov
arpl
add
neg
sbb
fild
mov
mov
fsqrt
xchg
fcom
jbe
xor
add
sbb
push
pop
mov
(bad)
(bad)
(bad)
dec
ss
jge
js
sub
or
jae
add
pop
clc
add
lods
das
data16
mov
sub
pusha
inc
pop
scas
lea
clc
fsubr
(bad)
(bad)
call
inc
std
inc
pop
aaa
add
neg
fs
xchg
fdiv
xor
pushf
not
cmps
add
(bad)
(bad)
(bad)
(bad)
clc
icebp
scas
sbb
xor
and
pop
imul
in
scas
adc
aam
mov
push
je
push
mov
xchg
sbb
fwait
sub
mov
aam
mov
mov
nop
lock
jbe
xchg
repnz
sub
inc
xor
add
les
or
aam
scas
mov
(bad)
(bad)
(bad)
fistp
nop
aam
test
ja
mov
xor
sub
mov
loop
(bad)
out
sub
out
inc
loopne
sub
xlat
loopne
and
or
cdq
hlt
xchg
(bad)
fcmovnu
(bad)
call
movs
mov
std
push
je
jmp
pop
jmp
popf
(bad)
(bad)
(bad)
push
daa
cmp
jmp
popf
and
pop
out
or
adc
pusha
adc
pop
aad
ret
sub
(bad)
(bad)
(bad)
jmp
movs
cmp
sbb
adc
dec
jae
lods
mov
leave
movs
inc
pop
pop
(bad)
(bad)
(bad)
mov
sub
push
mov
xor
call
ss
pop
mov
fisttp
pop
push
retf
cmp
jg
inc
sar
call
adc
mov
inc
inc
jg
(bad)
dec
(bad)
(bad)
and
rcr
into
mov
jbe
popf
dec
sbb
(bad)
(bad)
push
sbb
pop
scas
inc
ret
jecxz
call
daa
adc
adc
test
adc
jge
(bad)
(bad)
inc
loop
test
mov
mov
hlt
and
adc
(bad)
mov
neg
add
jns
pop
in
push
adc
aad
ss
cli
repnz
(bad)
(bad)
call
not
pop
dec
cli
je
mov
cmc
sub
xor
jne
paddw
jmp
add
jnp
push
call
and
daa
iret
sub
shl
popa
loop
(bad)
(bad)
push
pusha
(bad)
xchg
xchg
cmp
(bad)
(bad)
push
rol
inc
rcr
or
pop
push
cld
(bad)
(bad)
dec
(bad)
jmp
aas
nop
fild
dec
frstor
popf
cmc
cmc
pop
dec
mov
mov
cmc
cmp
add
das
mov
push
push
mov
cwde
into
addr16
dec
mov
addr16
lock
(bad)
jns
xchg
add
inc
push
das
pop
fild
mov
(bad)
(bad)
fist
push
mov
fstp
or
xchg
scas
inc
rol
xchg
sti
jg
(bad)
(bad)
mov
enter
xchg
xchg
dec
push
xorps
das
cmps
fsub
fnstenv
outs
cmps
cmp
mov
(bad)
mov
iret
mov
(bad)
push
cs
loope
fwait
push
and
popf
popa
mov
(bad)
jg
and
dec
loope
pop
movs
jno
and
mov
push
fimul
cmp
ds
adc
mov
sar
or
mov
mov
jl
cmp
pop
es
jg
ja
mov
push
push
push
hlt
imul
fisubr
dec
dec
(bad)
jmp
hlt
mov
es
mov
mov
xchg
es
iret
enter
inc
inc
fidiv
lods
mov
cmps
iret
mov
add
add
fiadd
leave
test
sti
scas
cli
xor
and
in
pop
pop
lahf
mov
dec
and
inc
in
stos
(bad)
(bad)
inc
and
adc
repnz
repnz
or
jl
fst
ds
sub
jmp
icebp
pusha
imul
div
shl
cmp
in
call
hlt
sbb
les
jns
mov
outs
mov
sub
xlat
out
pop
cmps
xor
out
jno
push
sub
push
std
(bad)
(bad)
(bad)
mov
sbb
xlat
popa
mov
cmp
jge
add
pop
shr
dec
sbb
dec
mov
(bad)
call
mov
jo
mov
pop
xchg
arpl
pop
mov
xchg
jno
aad
cmps
jg
pop
cmc
xchg
dec
mov
out
inc
xchg
outs
call
aas
(bad)
(bad)
(bad)
dec
pop
rcl
xchg
repz
xor
mov
int
stos
fild
push
cmp
pop
mov
rcl
or
mov
xchg
jno
call
sub
test
retf
dec
es
cmp
movs
and
jg
hlt
(bad)
push
xor
pop
inc
addr16
ret
stos
jmp
dec
add
add
sbb
aaa
mov
push
add
add
push
and
pusha
fimul
(bad)
(bad)
(bad)
(bad)
sti
mov
cmp
pusha
mov
add
call
fs
add
inc
xor
call
jmp
push
pop
add
into
retf
push
dec
ins
and
(bad)
(bad)
(bad)
inc
push
mov
push
mov
lds
(bad)
mov
cs
outs
shr
loopne
xchg
mov
in
(bad)
(bad)
(bad)
jmp
and
sahf
in
rcr
xchg
nop
mov
cdq
pop
inc
dec
loop
loop
popa
(bad)
(bad)
jmp
ret
cmp
call
push
cmp
add
pop
aas
or
push
inc
pop
jne
(bad)
inc
cmp
repz
cld
jl
pop
mov
mov
mov
shl
adc
xchg
or
aas
es
sub
mov
cwde
(bad)
(bad)
(bad)
jg
adc
sbb
mov
cmp
add
cmps
mov
adc
add
fs
cld
cmps
mov
or
(bad)
mov
jle
aaa
push
and
(bad)
das
jl
dec
xor
das
pop
lock
inc
test
aas
inc
add
(bad)
ss
and
xchg
aas
mov
(bad)
(bad)
(bad)
aas
jle
call
pop
mov
inc
dec
stc
mov
clc
jmp
test
ret
pop
jge
dec
std
(bad)
(bad)
fimul
sbb
mov
rcr
nop
add
and
push
jno
movs
(bad)
retf
pop
cmps
stos
dec
cmps
mov
cmp
and
sub
sahf
mov
scas
sub
in
lea
xor
(bad)
jmp
shr
cdq
pop
rsqrtps
cmp
rcl
pop
push
(bad)
(bad)
(bad)
call
xor
jae
stc
and
inc
pop
inc
push
clc
cmp
retf
out
ss
xor
outs
clc
shr
add
out
and
jb
pusha
xchg
jae
cs
jbe
push
in
sbb
imul
call
popa
push
popa
sub
mov
data16
dec
test
push
adc
test
test
push
mov
adc
push
pop
ret
(bad)
inc
(bad)
data16
out
pop
xor
scas
data16
cmps
lods
call
(bad)
jae
pop
dec
mov
or
push
jg
sub
mov
add
mov
mov
std
das
xchg
add
gs
pop
sbb
inc
(bad)
(bad)
(bad)
call
adc
pusha
sar
retw
data16
out
inc
dec
es
xchg
repz
xchg
clc
frstor
movs
cmp
push
bound
(bad)
cmp
(bad)
(bad)
inc
adc
imul
in
mov
(bad)
jmp
(bad)
pop
mov
dec
ss
mov
lahf
push
jl
leave
cwde
imul
lock
dec
adc
add
pop
into
jge
out
add
in
inc
mov
inc
push
out
imul
iret
push
idiv
xor
(bad)
neg
inc
pusha
in
aam
inc
pop
push
outs
je
add
push
or
pop
fldcw
jns
mov
test
pop
pushf
pusha
movs
test
cs
jbe
mov
add
push
ss
loopne
jne
(bad)
pop
jno
cld
cmp
pusha
sbb
ds
mov
(bad)
(bad)
call
cmps
add
int
cmp
adc
adc
jp
test
(bad)
jg
jmp
push
jmp
cs
xor
iret
push
xchg
or
(bad)
(bad)
fistp
mov
cmp
and
outs
or
outs
push
std
ror
repnz
in
sbb
dec
outs
idiv
mov
ins
mov
mov
mov
aad
push
and
(bad)
(bad)
(bad)
cli
mov
mov
repz
mov
jecxz
fsubr
ret
mov
sbb
sub
xchg
xchg
xor
or
ret
ja
mov
sti
jae
imul
jne
add
fsubr
lds
jb
xchg
xchg
lods
xchg
and
(bad)
cmp
(bad)
mov
mov
inc
in
(bad)
in
cdq
inc
adc
mov
fwait
cli
mov
icebp
out
push
out
sbb
(bad)
push
clc
ins
fdivr
fcom
iret
test
adc
sub
dec
mov
pop
aad
int3
fcmovnbe
inc
jb
mov
jbe
cli
outs
add
(bad)
(bad)
(bad)
push
fnstcw
pusha
or
and
push
cmc
push
pop
mov
fisttp
xchg
mov
push
inc
sub
mov
inc
mov
add
jb
lahf
iret
adc
push
test
xchg
sbb
cwde
mul
fs
mov
(bad)
aaa
rcl
scas
lock
or
imul
(bad)
mov
mov
call
stos
push
loopne
sub
pop
and
cld
(bad)
(bad)
mov
jmp
aaa
jns
xchg
xchg
jle
int
enter
sub
scas
(bad)
(bad)
jmp
(bad)
inc
cmp
xor
pop
das
daa
shl
mov
ret
das
clc
(bad)
(bad)
mov
jmp
loop
imul
pop
mov
dec
mov
dec
jle
push
cld
(bad)
push
fidiv
lds
test
stos
ins
jmp
not
sahf
add
(bad)
jmp
push
loope
sub
mov
adc
jbe
(bad)
call
push
aas
mov
mov
mov
mov
push
clc
fucomip
jmp
aaa
ss
mov
ds
sub
in
push
sbb
sbb
jg
jmp
push
and
fsubp
out
mov
call
(bad)
(bad)
(bad)
dec
or
in
leave
mov
pop
cmp
rol
add
cmp
pop
aad
xchg
add
(bad)
lods
ficom
sti
mov
fmul
outs
mov
loope
icebp
ud2
sbb
push
jbe
popa
dec
pop
(bad)
xchg
bswap
push
pushf
mov
dec
cmps
jecxz
outs
jmp
test
and
cli
shl
cmp
ret
mov
movs
mov
adc
jb
iret
fs
dec
repnz
lock
dec
(bad)
cmp
xchg
mov
add
xor
(bad)
fistp
xchg
push
test
cmps
(bad)
stos
div
les
xchg
xchg
out
jp
outs
adc
mov
nop
(bad)
(bad)
(bad)
push
sahf
sahf
fmul
sub
sbb
mov
inc
enter
inc
xchg
lea
lock
std
outs
clc
xor
or
nop
cmp
sbb
jecxz
pop
pop
push
add
dec
(bad)
(bad)
push
sbb
xchg
add
xchg
mov
adc
sbb
div
jecxz
ror
(bad)
(bad)
dec
pushf
mov
cmc
icebp
dec
cmp
fisttp
mov
xor
inc
push
int3
inc
lea
fwait
pop
inc
pop
inc
das
add
pop
push
in
outs
xchg
push
mov
xchg
icebp
loop
fs
lsl
add
aam
lods
sar
xor
in
ds
(bad)
jecxz
add
xchg
into
call
(bad)
out
out
sub
sbb
jns
shl
(bad)
(bad)
jae
(bad)
mov
(bad)
(bad)
(bad)
inc
mov
out
push
test
daa
sub
xchg
(bad)
xchg
es
test
push
mov
(bad)
call
into
xlat
jb
mov
pop
cs
xor
dec
xchg
mov
sub
imul
push
repz
adc
mov
(bad)
gs
out
inc
and
jnp
(bad)
(bad)
jg
pop
outs
push
call
ss
mov
clc
lock
mov
sbb
xchg
cmp
call
push
mov
xlat
add
(bad)
(bad)
call
js
cmp
pusha
jl
outs
retf
jle
xor
(bad)
(bad)
(bad)
(bad)
cli
retf
(bad)
cmp
movs
mov
sbb
sbb
ret
cmps
xchg
sbb
dec
mov
jecxz
pushw
(bad)
(bad)
push
mov
outs
xchg
mov
or
inc
scas
mov
sbb
pusha
ret
sahf
inc
call
and
imul
or
push
fld
(bad)
out
ficomp
jmp
mov
(bad)
call
arpl
jmp
sub
mov
stc
push
lahf
movs
and
jmp
mov
mov
xor
fabs
sahf
or
cld
jge
jno
(bad)
out
sub
enter
shl
test
pusha
pop
push
mov
pop
cmp
or
add
jae
call
mov
add
ret
loop
inc
xchg
xor
(bad)
(bad)
(bad)
in
aas
movs
push
push
neg
not
or
mov
cmps
jl
arpl
mov
(bad)
(bad)
(bad)
dec
ret
cmp
mov
cli
clc
mov
pop
xchg
std
hlt
or
jae
pusha
sbb
cli
fisttp
call
sti
mov
sub
(bad)
(bad)
push
addr16
out
fs
movs
fcom
xchg
xor
lods
xor
push
aaa
dec
xchg
enter
ret
test
retf
movs
sub
call
jg
sub
outs
add
pushf
mov
and
cmc
push
sbb
js
inc
fwait
adc
out
movs
lea
test
jnp
ror
nop
(bad)
jg
sbb
inc
mov
mov
adc
in
pop
cmp
call
xchg
mov
add
daa
retf
loopne
xchg
adc
pop
retf
cmp
inc
dec
shl
data16
lock
mov
jg
fst
mov
mov
test
jns
data16
jmp
inc
sbb
mov
ficom
add
sbb
fs
dec
jmp
out
xor
cmp
xchg
(bad)
jmp
push
or
or
pop
fist
sbb
push
fsubr
stos
(bad)
push
div
xor
sub
in
stc
mov
(bad)
push
pop
test
clc
je
mov
push
(bad)
(bad)
mov
movs
fmul
push
(bad)
jg
lds
ins
retf
push
jmp
(bad)
(bad)
(bad)
call
fidiv
sahf
fstp
push
fs
imul
scas
clc
pop
movs
xlat
push
outs
nop
(bad)
(bad)
(bad)
fbld
push
jg
das
inc
stc
push
loope
aaa
repnz
mov
test
dec
sahf
add
lods
cli
loop
push
or
addr16
push
push
pop
pop
outs
fiadd
sbb
sbb
(bad)
(bad)
(bad)
dec
mov
sub
les
addr16
imul
loopne
or
ins
fnstsw
ja
add
(bad)
(bad)
jmp
jge
adc
inc
std
jle
sub
add
icebp
ja
call
dec
mov
xor
xchg
leave
add
jmp
dec
test
or
mov
adc
(bad)
cmps
stos
jle
dec
sbb
call
movs
es
xchg
pop
inc
adc
jo
inc
inc
inc
nop
pop
xchg
push
ficomp
add
pop
fs
sbb
and
ds
cmp
(bad)
(bad)
(bad)
mov
repnz
fbld
sbb
sub
pop
call
ins
mov
(bad)
dec
jecxz
int3
stos
cdq
sub
push
cmp
push
sub
jo
(bad)
mov
jmp
xchg
push
(bad)
(bad)
(bad)
dec
retf
rcl
mov
adc
mov
(bad)
mov
dec
aas
or
cdq
loope
mov
(bad)
push
adc
mov
enter
test
jmp
mov
cmp
aad
(bad)
call
int
call
aas
sahf
push
int
dec
mov
jg
mov
jo
sar
jg
xchg
ret
(bad)
sar
fsubr
sti
pusha
fwait
hlt
sub
xor
mov
dec
pusha
adc
xlat
test
jl
call
push
xchg
mov
pusha
stc
aam
dec
xor
sub
(bad)
inc
nop
lods
sub
push
aad
nop
mov
stc
imul
mov
es
(bad)
(bad)
dec
out
xchg
mov
pop
jecxz
lock
hlt
xchg
lock
mov
(bad)
jmp
les
xchg
dec
adc
sub
aam
fcomp
cmp
adc
pop
(bad)
(bad)
jmp
js
mov
pop
(bad)
xor
or
push
push
add
sub
cmp
icebp
mov
sbb
and
sbb
jnp
(bad)
ds
(bad)
jmp
mov
xchg
xchg
mov
cmps
fs
cld
xchg
cdq
push
jl
xor
inc
movs
mov
cmp
(bad)
(bad)
(bad)
inc
out
xor
in
je
repnz
jae
iret
cld
add
popa
lea
aaa
add
push
cld
jl
add
push
adc
popa
(bad)
mov
push
(bad)
sbb
adc
fsubr
call
mov
or
cli
(bad)
(bad)
jmp
inc
add
xchg
sbb
sbb
mov
mov
(bad)
push
mov
call
or
(bad)
dec
cli
and
daa
pop
(bad)
push
cwde
sbb
repz
(bad)
(bad)
(bad)
call
fcomp
into
loope
jmp
aaa
js
xchg
mov
test
out
cmp
or
(bad)
(bad)
inc
call
and
mov
mov
push
test
xchg
(bad)
call
pop
dec
sahf
retf
ins
jg
les
mov
push
addr16
popf
repz
and
dec
(bad)
(bad)
(bad)
inc
imul
adc
push
fs
sbb
adc
daa
mov
(bad)
(bad)
jmp
call
outs
out
inc
(bad)
inc
call
or
fwait
clc
jns
jmp
rcl
sub
cmp
les
sub
idiv
test
scas
call
sub
jl
mov
out
(bad)
lahf
jl
push
or
jb
(bad)
(bad)
(bad)
(bad)
cmp
mov
inc
popf
pop
outs
ret
sbb
mov
adc
pushf
push
sub
fist
movs
int
mov
xchg
push
rcl
dec
mov
dec
(bad)
(bad)
(bad)
jmp
mov
cmp
lahf
adc
call
push
pusha
outs
call
push
(bad)
cld
(bad)
(bad)
push
sbb
and
jo
add
es
(bad)
in
shr
popf
mov
(bad)
dec
add
jle
and
sub
out
dec
pop
ds
dec
jmp
call
mov
inc
add
add
push
in
call
mov
(bad)
(bad)
dec
arpl
push
popf
or
or
pushf
ja
push
pusha
cmps
inc
out
pop
pop
sti
nop
jge
cwde
ja
push
(bad)
jmp
stos
xchg
(bad)
push
adc
ins
push
dec
sbb
mov
or
mov
outs
lock
(bad)
push
scas
xchg
cmps
loopne
mov
lds
aaa
fdivr
ret
mov
(bad)
jg
inc
(bad)
out
lods
xor
cld
jle
ins
lea
add
int3
(bad)
(bad)
(bad)
jmp
push
mov
push
mov
aad
jnp
sbb
push
and
cmp
(bad)
(bad)
call
jo
jne
mov
ins
pop
jnp
cmp
data16
jno
adc
push
xchg
push
adc
sbb
(bad)
dec
loopne
sub
push
call
cwde
lds
ror
add
mov
(bad)
push
mov
in
sub
aad
pop
out
in
fnstcw
jmp
sub
mov
(bad)
(bad)
(bad)
dec
stos
(bad)
int3
pop
addr16
aas
xchg
xlat
cdq
xchg
mul
ja
pushf
movs
jne
scas
dec
jmp
(bad)
inc
xchg
fs
ins
mov
jp
fld
por
test
mov
pusha
aaa
xchg
(bad)
(bad)
(bad)
jmp
js
ret
xchg
loopne
pop
lock
fnstsw
add
in
mov
sub
(bad)
(bad)
(bad)
(bad)
std
popa
ret
cwde
cmp
pop
jp
out
rol
jmp
outs
push
and
or
stos
adc
dec
mov
aam
pop
push
push
pop
aaa
inc
data16
jae
rcl
mov
pop
mov
sbb
jb
and
les
(bad)
push
mov
push
jg
jmp
out
addr16
sbb
mov
arpl
add
(bad)
(bad)
call
cmp
xor
jne
call
cmp
xor
or
mov
or
xor
repz
and
mov
in
xor
adc
jmp
or
and
mov
xchg
push
xchg
push
fsubr
arpl
dec
xchg
mov
mov
ret
jbe
popa
fsubr
(bad)
(bad)
jmp
mov
popf
and
into
fstp
ds
mov
dec
fidivr
jle
inc
pop
and
ret
(bad)
in
ss
test
mov
popa
add
push
and
adc
inc
loopne
in
cdq
add
adc
xchg
pop
bound
xor
imul
and
(bad)
(bad)
inc
(bad)
and
out
push
(bad)
push
fbld
gs
sahf
sub
(bad)
fld
outs
rol
in
inc
pop
in
sbb
fwait
ins
add
dec
ins
pusha
test
push
fimul
jmp
aad
cmp
test
ret
mov
data16
test
stos
mov
ret
sar
mov
ds
daa
jns
je
(bad)
mov
lea
fwait
sbb
arpl
sbb
(bad)
fstp
cli
(bad)
rcl
mov
xchg
and
add
fwait
xchg
adc
ins
cs
xchg
jnp
imul
mov
jns
inc
push
sbb
daa
ss
xchg
sub
call
sbb
inc
sbb
xor
or
inc
xlat
je
mov
and
xchg
cli
mov
bound
addr16
pop
stos
ja
sub
dec
inc
mov
and
pop
je
sbb
adc
mov
xchg
aam
(bad)
call
mov
mov
hlt
mov
std
xor
inc
cmc
push
jmp
fdivrp
(bad)
jmp
push
adc
(bad)
mov
inc
mov
lods
(bad)
mov
(bad)
or
dec
aad
outs
(bad)
mov
adc
test
or
imul
push
add
mov
cli
movs
(bad)
(bad)
(bad)
inc
fisttp
cmp
and
int
jne
icebp
aaa
(bad)
rcr
test
push
loopne
push
jmp
call
retf
scas
aaa
add
test
add
out
add
daa
add
(bad)
(bad)
push
push
pushf
lods
loop
jnp
(bad)
in
les
in
inc
xor
cwde
push
jnp
(bad)
repz
(bad)
(bad)
push
nop
ror
or
pop
xor
out
fs
pop
push
mov
or
cs
cmp
(bad)
(bad)
inc
icebp
outs
mov
ins
cdq
xchg
jp
movs
jb
aas
push
xchg
dec
xor
sub
adc
(bad)
mov
pop
mov
adc
sbb
mov
cld
(bad)
jg
fucom
mov
pop
shl
outs
xor
cwde
pop
sub
jmp
(bad)
push
pop
sbb
es
jno
push
xchg
or
clc
or
jmp
sub
pop
ja
(bad)
(bad)
(bad)
dec
test
sahf
pop
test
adc
addr16
xchg
js
xor
bound
call
add
xchg
pop
cwde
clc
xchg
add
push
imul
enter
jmp
inc
mov
add
pop
xchg
mov
ror
test
mov
(bad)
mov
sbb
xor
pop
jle
adc
sahf
stos
int3
xor
push
cld
(bad)
(bad)
scas
data16
aaa
dec
clc
cmp
and
cdq
cmp
mov
jmp
jmp
jns
sbb
(bad)
imul
xchg
pop
jns
(bad)
xor
shl
mov
pop
xor
mov
das
call
aaa
mov
aaa
sti
mov
dec
dec
or
popf
out
cdq
jnp
pop
cmp
mov
ins
rcr
enter
pop
jbe
(bad)
pushf
jmp
and
lahf
dec
xchg
mov
cmp
(bad)
inc
mov
jmp
mov
mov
xchg
sub
inc
sar
(bad)
(bad)
jmp
cld
(bad)
jge
push
loopne
pavgw
sub
jmp
int
out
adc
pop
or
pop
or
add
andps
(bad)
or
dec
cmp
retf
xor
push
sub
mov
scas
push
xor
inc
lods
cmp
imul
call
mov
jnp
mov
mov
push
mov
shl
or
adc
popa
(bad)
(bad)
(bad)
jmp
sub
pop
sbb
outs
or
dec
les
mov
repz
xor
call
es
sti
cmp
popa
jle
icebp
jl
and
or
mov
daa
inc
jno
sti
inc
pop
(bad)
sbb
mov
xlat
(bad)
cmp
jmp
mov
and
std
cld
int
movs
int3
mov
mov
xchg
sbb
or
loopne
jb
ret
arpl
in
adc
fild
mov
scas
and
in
pop
inc
neg
jl
cmp
mov
pop
call
xor
(bad)
(bad)
call
sub
int3
xor
rcr
loopne
sbb
pushf
dec
sbb
push
data16
nop
mov
(bad)
(bad)
(bad)
jmp
mov
fidivr
pop
jle
and
xor
fbstp
mov
(bad)
(bad)
call
lock
ds
cmp
(bad)
pop
ret
inc
mov
nop
movs
scas
xor
int3
sbb
cmp
xchg
add
push
inc
jbe
fst
ret
jmp
ret
cmc
scas
shl
mov
sbb
mov
and
mov
sub
lahf
jmp
mov
or
jmp
mov
pop
xor
add
out
dec
cmp
xchg
xchg
inc
scas
ja
pop
xor
leave
push
cmp
pop
call
inc
std
das
cli
mov
cmp
dec
enter
mov
(bad)
(bad)
(bad)
repnz
cmp
dec
bound
sahf
dec
cs
pop
jp
daa
mov
(bad)
(bad)
(bad)
call
push
xchg
or
jg
ffreep
(bad)
push
cmp
sar
or
sub
clc
fisubr
out
fnstsw
mov
cmp
ss
pop
outs
and
push
push
cs
(bad)
(bad)
inc
add
push
mov
ja
fsubr
nop
out
dec
jle
rcr
push
xlat
add
jmp
jg
fcmovne
jge
cmp
retf
aad
scas
sub
mov
outs
jg
or
sub
xchg
rcr
shr
add
bound
das
inc
add
push
sar
test
repnz
jo
xlat
in
aas
sti
dec
jo
mov
or
and
jle
(bad)
mov
ja
(bad)
jmp
xor
xchg
loopne
shr
div
mov
mov
add
or
and
jb
dec
(bad)
and
faddp
adc
xor
lds
mov
dec
jmp
retf
pop
add
daa
lahf
add
push
jns
int3
sbb
mov
dec
out
push
mov
neg
imul
arpl
sbb
iret
mov
and
pop
add
shl
mov
and
and
je
push
cmp
xor
dec
pop
ds
add
movs
pop
xchg
mov
adc
(bad)
(bad)
(bad)
jmp
int3
(bad)
in
sub
mov
mov
jmp
(bad)
out
(bad)
(bad)
std
inc
call
call
outs
inc
shr
(bad)
call
lock
sbb
mov
shl
mov
jb
retf
iret
fwait
(bad)
(bad)
dec
ins
adc
dec
jne
xor
das
(bad)
fwait
cmps
ror
push
push
or
add
or
shl
cmp
mov
xor
adc
and
mov
clc
(bad)
and
inc
xchg
gs
push
pop
sbb
mov
jecxz
ja
xlat
out
mov
out
addr16
push
std
(bad)
jg
mov
sbb
aas
sub
cmps
jne
xor
mul
dec
int
inc
(bad)
(bad)
(bad)
inc
xor
imul
xor
push
jmp
mov
xchg
xor
int
cmp
sar
(bad)
call
add
(bad)
mov
mov
cmps
cld
repz
xor
cmp
(bad)
jg
mov
pop
mov
mov
push
mov
out
mov
iret
jmp
push
and
pop
and
in
fstp
(bad)
sar
xor
daa
push
rcl
or
icebp
rol
xchg
push
push
mov
push
fisub
lods
aad
pop
sub
(bad)
mov
jb
ror
xor
outs
sub
mov
xchg
xor
add
mov
adc
jbe
cld
rcl
pop
mov
test
ss
jb
repz
std
(bad)
call
jle
mov
mov
push
dec
xchg
jo
pop
cld
(bad)
jmp
mov
iret
push
push
mov
fwait
and
mov
or
lods
(bad)
(bad)
(bad)
jmp
leave
jns
and
or
xor
xchg
movs
or
dec
into
inc
jp
add
call
fld
daa
and
dec
adc
cld
jbe
mov
in
movs
test
imul
(bad)
es
fbld
mov
(bad)
dec
(bad)
dec
cmp
fs
xchg
mov
mov
cmp
cdq
mov
or
jmp
jmp
je
shl
xor
jmp
test
ret
sub
loop
or
push
mov
push
ret
imul
sbb
aad
das
add
(bad)
(bad)
(bad)
jmp
stc
xchg
xchg
mov
test
push
loop
movs
xchg
push
int
ret
call
sub
out
leave
jmp
(bad)
dec
dec
jns
rol
int
pop
mov
dec
mov
sbb
hlt
jbe
ins
sub
adc
std
test
mov
call
(bad)
(bad)
push
fcom
dec
or
stos
sub
scas
xchg
mov
cmp
inc
mov
xchg
dec
cmp
inc
cdq
push
dec
xchg
cdq
cmps
js
jbe
adc
lods
aam
les
sub
mov
adc
or
cmp
dec
push
mov
and
loopne
mov
imul
mov
fldcw
inc
aam
mov
xchg
(bad)
ja
inc
popf
aam
mov
cmp
sub
jmp
xor
dec
stos
push
stos
stos
in
or
dec
pop
push
push
(bad)
(bad)
call
loope
xchg
movs
call
push
bound
push
jne
pushf
mov
sbb
(bad)
jmp
cmps
sar
fs
dec
data16
cmps
cmp
outs
sub
movs
pop
push
aad
and
(bad)
(bad)
(bad)
call
leave
jo
mov
pop
cmp
dec
dec
mov
inc
mov
or
movs
lods
cld
dec
inc
jmp
cmps
jbe
fs
movs
mov
dec
push
ss
pop
push
xor
jno
in
add
sub
pop
and
pop
cmp
sar
jo
int
jle
je
mov
loop
test
jmp
ret
jmp
ret
mov
sar
push
dec
add
xchg
mul
scas
clc
mov
inc
shl
mov
and
movs
xor
js
pop
loopne
mov
les
sti
movs
push
jbe
push
scas
cli
(bad)
jmp
mov
adc
jbe
pop
xlat
ins
mov
dec
pushw
mov
(bad)
(bad)
push
dec
pop
dec
mov
xor
test
push
jmp
nop
pushf
stos
adc
outs
lods
ss
imul
fdiv
pop
movs
out
aad
jl
ss
bound
(bad)
add
cmc
push
sbb
pop
push
fcmovnu
hlt
mov
ret
mul
mov
mov
or
(bad)
(bad)
jmp
aaa
leave
fiadd
inc
jmp
inc
fiadd
outs
push
addr16
cmps
xor
outs
push
sbb
mov
icebp
cmp
dec
ins
addr16
scas
xchg
jmp
xchg
xor
(bad)
push
ds
test
clc
movs
push
mov
(bad)
push
nop
test
repnz
cli
arpl
push
pop
ss
inc
sub
jne
pop
sbb
mov
test
fcom
push
sar
(bad)
jmp
aad
sub
lods
pusha
jnp
mov
and
and
pop
imul
shr
xor
mov
fstp
xor
clc
cmp
lods
xchg
(bad)
idiv
(bad)
call
jb
push
frstor
dec
jmp
jmp
jns
lods
add
cld
(bad)
jmp
leave
sbb
add
inc
imul
mov
in
test
(bad)
(bad)
jmp
shl
jecxz
and
or
push
cmc
bound
xchg
inc
push
pop
or
mov
test
loope
jmp
icebp
jmp
push
inc
retf
ss
aad
(bad)
std
sub
popf
mov
pop
cmp
jmp
dec
fstp
sbb
clc
(bad)
jmp
push
xlat
dec
idiv
fldenv
mov
push
inc
test
imul
outs
cmp
inc
movs
pop
pop
imul
mov
push
mov
add
sub
xchg
mov
xchg
jle
test
movs
test
mov
xchg
pop
mov
cld
gs
iret
fbstp
pusha
inc
push
add
mov
(bad)
(bad)
jle
stos
pop
jg
int3
aaa
xchg
(bad)
and
test
jg
mov
and
aad
(bad)
(bad)
push
mov
jb
scas
aam
pop
adc
mov
fwait
aas
mov
imul
test
cld
fbld
push
jp
pop
stos
mov
outs
dec
sub
(bad)
pop
jmp
dec
lock
jmp
mov
in
pop
jge
je
dec
pop
popa
movs
(bad)
nop
inc
dec
mov
cli
inc
jno
push
sub
push
ror
les
loop
call
mov
mov
xchg
mov
pop
cmp
adc
(bad)
(bad)
call
push
sar
fwait
lods
int3
adc
adc
repz
idiv
jb
cs
call
or
outs
aad
cmc
push
cmp
js
mov
ja
cmp
and
aas
aam
push
(bad)
(bad)
(bad)
(bad)
cmp
aam
retf
xor
sub
push
fdivr
add
jp
pop
inc
or
imul
xor
mov
inc
into
pop
in
call
(bad)
(bad)
push
jle
dec
int
ret
dec
dec
inc
fs
not
adc
js
inc
mov
inc
mov
sbb
jmp
cli
sbb
out
movs
js
sbb
push
out
xchg
xor
fldcw
repz
(bad)
call
xchg
rol
lds
sbb
lds
xchg
cdq
sti
scas
rcl
call
mov
adc
mov
pop
ja
pop
fnstenv
(bad)
(bad)
dec
fisub
cmc
xor
lahf
rcl
push
dec
pop
shr
pop
cmps
push
popf
jbe
pop
adc
inc
(bad)
(bad)
(bad)
call
push
dec
(bad)
dec
jecxz
ret
repz
ss
lea
dec
pop
(bad)
(bad)
(bad)
(bad)
fldenv
dec
mov
pop
addr16
jp
push
cmp
fcomp
das
inc
push
fld
movs
mov
(bad)
fstp
mov
mov
int
int
xor
ds
inc
sti
(bad)
(bad)
push
push
gs
sub
scas
and
int3
xchg
pusha
sbb
imul
(bad)
(bad)
(bad)
jg
xchg
inc
stos
jns
ficomp
ins
test
call
xchg
loope
mov
fs
(bad)
(bad)
inc
movs
out
xchg
mov
test
jnp
lods
cmove
pusha
xchg
pop
xor
mov
lods
lahf
movs
(bad)
inc
ja
into
jne
cmps
fist
dec
vunpckhps
xchg
sbb
dec
scas
dec
imul
out
xchg
not
jecxz
or
and
(bad)
(bad)
fild
call
rcr
arpl
mov
and
mov
dec
push
mov
jg
cmps
hlt
add
pop
outs
(bad)
loope
adc
sub
(bad)
(bad)
(bad)
in
mov
or
push
ds
fxch
retf
pop
cmp
das
in
pop
adc
icebp
mov
xlat
jmp
jnp
lock
mov
clc
es
outs
and
sub
jmp
xor
cld
jb
dec
cdq
jmp
outs
retf
std
xor
mov
cld
jmp
dec
arpl
cmp
mov
mov
dec
adc
sub
popf
adc
loop
nop
xor
adc
jno
push
xchg
mov
fdivr
(bad)
(bad)
(bad)
jmp
cmp
jmp
cwde
dec
int3
lods
xchg
jae
dec
xchg
jo
jge
pop
pop
mov
adc
call
movs
sti
cmp
fcomp
dec
imul
arpl
dec
cmps
jno
movs
dec
or
sub
mov
icebp
jmp
fstp
popa
scas
jle
xor
lea
mov
sar
sahf
(bad)
out
push
push
(bad)
(bad)
(bad)
call
mov
js
out
clc
int3
sti
jle
cdq
ret
std
(bad)
in
mov
lods
sbb
(bad)
dec
(bad)
out
pop
jno
call
pop
jbe
out
mov
(bad)
inc
fnstenv
xchg
in
shl
jg
cmp
dec
fnsave
cmp
lods
std
(bad)
call
scas
outs
ss
mov
fbld
retf
jg
sahf
sbb
std
mov
or
pop
stc
lods
das
xchg
mov
std
std
push
cld
xchg
cli
cmp
xchg
hlt
(bad)
(bad)
cmp
cld
xlat
jmp
dec
idiv
retf
stos
ret
and
mov
addr16
std
loope
(bad)
(bad)
out
sub
cs
pop
cld
in
popf
fistp
mov
pop
aas
mov
mov
(bad)
aas
(bad)
les
out
sti
mov
movs
add
jge
das
(bad)
(bad)
(bad)
fbstp
jg
dec
sahf
(bad)
scas
aas
cli
aam
(bad)
fiadd
stos
dec
inc
pop
inc
adc
lock
jge
neg
pusha
add
cmps
mov
sub
aad
das
sbb
jecxz
movs
(bad)
mov
pop
mov
mov
jmp
mov
std
(bad)
call
pop
repz
inc
enter
icebp
cmps
mov
fucomp
xor
(bad)
out
retf
cmc
mov
adc
repz
pop
(bad)
(bad)
jmp
cmp
cwde
and
int3
jno
lock
dec
repz
mov
jmp
ds
hlt
(bad)
call
ja
loop
(bad)
ins
push
xchg
jg
mov
lea
pop
(bad)
call
and
jmp
push
aam
dec
lods
shl
mov
(bad)
(bad)
(bad)
call
out
daa
cmp
inc
dec
test
xchg
test
cdq
xchg
xor
stos
mov
jnp
dec
mov
sbb
loop
in
dec
out
test
jl
movs
fild
jg
es
(bad)
fcmovnbe
xor
sbb
dec
dec
mov
mov
mov
(bad)
(bad)
call
fisttp
fidiv
xchg
mov
xor
jbe
imul
(bad)
jmp
lods
jno
call
in
dec
mov
out
pop
call
pop
scas
cld
jg
int3
inc
or
dec
scas
jmp
dec
lock
leave
pop
movs
stc
ins
jecxz
scas
fdivrp
fwait
pop
addr16
jmp
push
ret
pop
push
stos
xor
out
mov
std
dec
ror
or
(bad)
jmp
rcr
into
add
jns
stos
ins
sti
push
(bad)
(bad)
(bad)
inc
aam
movs
mov
xor
xor
push
mov
xor
hlt
(bad)
call
pop
xor
cwde
in
sub
(bad)
xchg
clc
cmc
dec
retf
fcomp
xlat
out
xchg
jg
jle
mov
xchg
(bad)
(bad)
push
ins
mov
bnd
hlt
imul
aas
xor
sub
xchg
out
sti
sub
pop
call
retf
es
or
(bad)
call
(bad)
out
sub
std
mov
jge
out
std
clc
outs
popf
dec
pop
popf
jnp
lahf
cmp
sti
push
loope
in
mov
jecxz
fs
inc
retf
iret
int3
sub
int
test
mov
jns
out
xor
test
fsubrp
out
ds
dec
fdivrp
(bad)
retf
hlt
addr16
xor
jae
xlat
xchg
or
ja
rcr
push
xlat
jle
mov
xchg
adc
idiv
das
cli
idiv
jnp
test
mov
je
gs
dec
outs
cli
jne
fsubrp
mov
push
(bad)
mov
ret
into
fist
clc
mov
jecxz
shl
(bad)
enter
das
push
jmp
outs
(bad)
jg
retf
jge
popf
sahf
cmp
jg
shl
pop
jecxz
mov
gs
fidivr
inc
push
call
inc
cmps
jne
aaa
jae
pop
fs
int
das
shl
aas
nop
test
das
cli
call
scas
imul
stos
add
jle
jl
dec
(bad)
mov
cmp
rcl
out
iret
hlt
out
jne
aad
sti
mov
jmp
addr16
push
xchg
das
xchg
js
xor
dec
jo
cmp
cld
div
fwait
fwait
fs
fidivr
std
push
lahf
jmp
pop
add
xchg
jo
addr16
rcl
mov
pop
sti
lods
hlt
sub
mov
cmp
dec
jg
mov
sar
cdq
jnp
fdivp
outs
or
cmp
pop
cmps
outs
js
scas
push
jae
mov
out
cmc
sub
jnp
mov
inc
cmps
lock
call
je
in
jmp
cmps
fdiv
pop
jo
dec
out
pushf
cmp
inc
out
jmp
test
mov
loopne
call
jp
fdiv
daa
jns
dec
sub
into
mov
push
jae
clc
call
jmp
fstp
iret
or
inc
out
dec
inc
(bad)
mov
mov
jle
(bad)
pop
dec
into
outs
sar
mov
mov
push
sub
(bad)
mov
push
mov
out
das
lock
(bad)
(bad)
(bad)
fucomip
cmps
jg
repz
in
pop
jge
fistp
push
aas
cs
into
lahf
sti
ins
fstp
sub
ja
(bad)
push
call
jno
cld
pop
lahf
(bad)
mov
movs
jl
jae
adc
jg
mov
test
xchg
xor
push
cmp
cmp
mov
xchg
fcomp
fcomp
inc
iret
cdq
test
fst
adc
ret
xchg
push
cld
(bad)
inc
ja
lock
js
scas
bound
mov
push
call
pop
sar
lds
in
data16
lahf
test
mov
mov
inc
or
xlat
pop
iret
push
in
(bad)
mov
jns
lds
cmc
jmp
ins
out
ins
mov
jp
(bad)
popf
shr
in
(bad)
(bad)
aad
dec
fadd
mov
rcr
mov
mov
fwait
xchg
(bad)
(bad)
(bad)
std
jg
mov
hlt
fdiv
push
or
adc
je
hlt
sti
in
cmp
ja
pop
retf
add
cmc
stc
hlt
enter
(bad)
call
push
ds
dec
stos
xor
pop
out
and
jns
xchg
pop
aas
jge
lahf
jg
ret
fwait
(bad)
mov
mov
adc
sahf
mov
pop
int3
adc
cmp
inc
addr16
aad
or
(bad)
std
dec
loop
(bad)
in
scas
push
cli
pop
and
daa
fs
lahf
jp
bound
sbb
jmp
fs
repnz
imul
dec
in
inc
ds
sbb
sar
(bad)
mov
sbb
push
cmp
mov
inc
mov
ja
dec
pop
jb
sti
mov
xlat
mov
cmp
test
aad
mov
cmp
(bad)
(bad)
(bad)
call
sahf
xchg
sbb
xchg
push
into
(bad)
js
std
sub
inc
sbb
fnstcw
(bad)
dec
lock
ja
repnz
jecxz
pushf
mov
fstp
mov
cld
(bad)
(bad)
jmp
(bad)
je
pop
pop
and
imul
jg
fist
shl
fstp
pop
pop
adc
push
xchg
xlat
pop
fdivr
add
aad
add
mov
(bad)
(bad)
jg
imul
mov
pop
outs
jp
push
das
fidiv
and
inc
xchg
fbld
test
inc
stc
(bad)
std
je
adc
jnp
adc
test
fistp
out
hlt
arpl
stos
es
(bad)
call
jmp
arpl
leave
dec
mov
cmc
pop
and
test
mov
inc
fisub
mov
test
inc
out
xchg
div
out
(bad)
jmp
jmp
shl
push
call
aaa
cli
cld
popf
xchg
and
add
clc
imul
int3
sti
loop
aad
adc
test
(bad)
inc
movs
mov
lods
push
adc
xchg
mov
iret
xlat
pop
cs
jmp
xlat
test
pushf
push
jg
pop
div
loope
cmp
sti
scas
mov
(bad)
jmp
ins
and
cs
inc
aas
(bad)
add
pop
icebp
(bad)
mov
sub
out
or
test
or
ins
fs
adc
mov
mov
pop
cmc
(bad)
(bad)
(bad)
cmp
xchg
data16
push
inc
into
imul
push
xor
dec
xlat
jmp
adc
jmp
repnz
in
mov
mov
or
stc
xor
pop
fisub
push
stc
push
int3
jns
jmp
pusha
mov
push
xchg
inc
mov
(bad)
out
gs
out
into
imul
jne
std
xor
and
mov
or
out
(bad)
jmp
mov
icebp
gs
pop
jnp
mov
jae
jp
mov
rcr
out
mov
xor
fwait
and
and
inc
jmp
test
dec
rcr
jne
xor
sbb
xchg
test
test
fwait
mov
(bad)
(bad)
(bad)
(bad)
fimul
pop
pop
retf
test
das
dec
push
sbb
scas
xchg
cmp
mov
dec
(bad)
sub
fidivr
stos
movs
mov
mov
or
cld
retf
jle
int
xchg
xchg
in
sub
daa
in
ins
repnz
(bad)
jmp
pop
repnz
repz
repnz
mov
lock
outs
fsubr
cld
jle
push
out
fistp
jns
jae
lahf
movs
je
fistp
jbe
push
cli
ja
push
lahf
outs
mov
(bad)
ss
pop
je
(bad)
(bad)
(bad)
jmp
inc
mov
mov
push
into
sbb
mov
or
fist
sti
leave
sti
pop
lock
lods
clc
(bad)
(bad)
fiadd
mov
add
xchg
jmp
sbb
(bad)
out
out
mov
repnz
mov
(bad)
mov
fst
cli
lods
push
test
push
mov
(bad)
jg
in
cli
cmp
xor
sub
(bad)
rcl
(bad)
(bad)
call
rcr
imul
leave
hlt
mov
mov
jp
cmp
pop
repz
pop
xchg
(bad)
jnp
mov
int3
fdivrp
pusha
in
aas
adc
pop
(bad)
or
fadd
in
jg
xor
push
pop
test
fild
and
(bad)
(bad)
and
xchg
stc
mov
iret
jg
loope
push
sar
fwait
repnz
mov
pop
and
jmp
retf
call
jnp
imul
pop
loop
sub
xchg
mov
push
ret
jno
sub
imul
(bad)
mov
das
retf
xchg
in
fs
and
arpl
(bad)
(bad)
(bad)
jmp
sub
pop
retf
mov
xchg
push
sbb
xchg
and
(bad)
rcr
pop
mov
(bad)
cmp
fiadd
in
sti
sbb
xor
xchg
xchg
retf
into
cmp
retf
jbe
fwait
clc
mov
std
mov
sub
je
scas
sub
mov
bound
fst
pop
xchg
aam
int3
jo
(bad)
mov
jmp
xchg
enter
xchg
xchg
gs
add
leave
lea
movs
push
add
scas
clc
dec
stos
mov
dec
aam
jl
mov
hlt
xchg
stos
and
sbb
jg
sar
jae
rol
jge
xor
pusha
pop
(bad)
call
xchg
push
scas
into
mov
fist
sar
pop
(bad)
or
lods
in
adc
jl
jecxz
jmp
xlat
sbb
pop
jg
retf
lahf
push
jbe
gs
sub
fs
(bad)
(bad)
(bad)
jmp
xor
enter
nop
jle
xlat
rcl
imul
fisttp
fwait
in
jmp
push
std
dec
dec
jmp
out
or
test
mov
mov
out
test
push
shl
pop
jmp
sti
ret
xor
cmc
push
jne
adc
(bad)
jg
jmp
cmc
sbb
xor
dec
push
loopne
scas
mov
jmp
cli
pop
cmp
mov
xchg
jo
outs
push
shl
(bad)
sar
sar
dec
fsqrt
mov
sub
xchg
(bad)
es
(bad)
call
call
cmp
jp
mov
pop
(bad)
aam
pop
dec
dec
(bad)
jg
mov
cmp
inc
inc
cs
nop
cs
js
in
clc
ret
in
push
ins
in
dec
in
xchg
or
push
ja
push
scas
inc
ret
xor
(bad)
(bad)
sti
cmp
cld
xchg
repnz
xchg
out
inc
ret
inc
lahf
xchg
sti
in
sar
or
mov
aaa
loopne
cmp
mov
imul
imul
adc
dec
push
push
mov
jmp
jge
xchg
cmp
pop
repz
popf
mov
into
xchg
sub
(bad)
jmp
xchg
push
repnz
jnp
lods
not
sub
loope
sub
cmp
fild
pop
inc
js
(bad)
xor
out
cwde
cs
(bad)
(bad)
(bad)
fcmovnbe
arpl
popa
out
ficom
mov
fmul
mov
imul
out
or
(bad)
(bad)
cmp
pop
fdiv
cmp
xlat
pop
jno
std
jb
outs
pop
sar
mov
mov
hlt
adc
push
sbb
outs
mov
movs
adc
pop
mov
xchg
js
(bad)
outs
call
mov
(bad)
adc
jno
push
mov
jecxz
pop
enter
inc
sub
lock
sbb
stos
mov
(bad)
ret
(bad)
inc
push
sar
xchg
ds
mov
stos
mov
cwde
sbb
cmps
mov
cmps
(bad)
(bad)
push
cs
iret
mov
retf
jge
out
sar
inc
out
retf
bound
xchg
jge
jge
aad
outs
clc
sbb
sahf
fbstp
mov
jae
or
in
clc
(bad)
jg
fdiv
imul
dec
cmp
in
or
jns
add
jbe
sub
mov
dec
fwait
mov
(bad)
jg
mov
cmovnp
sti
push
jmp
push
jecxz
imul
inc
cld
ret
pop
pop
cmp
aaa
push
aad
dec
dec
(bad)
cmp
lahf
(bad)
(bad)
(bad)
(bad)
mov
jo
int
xchg
fist
xchg
dec
clc
hlt
iret
mov
aas
fst
ss
pop
xlat
(bad)
mov
fs
dec
pop
or
scas
jge
fld
popf
(bad)
(bad)
(bad)
call
push
jl
push
fld
popa
scas
mov
sbb
scas
fstp
pop
cs
scas
mov
xchg
cmps
sbb
xor
xor
dec
dec
and
mov
cmp
(bad)
call
hlt
push
mov
dec
mov
jb
mov
call
cwde
movs
(bad)
and
test
sub
das
mov
cwde
sub
leave
cli
dec
jl
ss
(bad)
(bad)
push
add
test
fmulp
jmp
jbe
iret
scas
dec
das
cmp
cmps
jb
pop
dec
cmp
pop
ffreep
in
stos
(bad)
call
rcl
enter
xchg
cmc
sub
nop
idiv
(bad)
(bad)
(bad)
fxam
loope
dec
lea
and
(bad)
pop
je
cld
sub
lds
cmps
movs
in
and
(bad)
push
fwait
aad
dec
jle
cmps
nop
sub
lock
aas
adc
(bad)
aam
pop
mov
cmc
fisttp
xor
neg
pop
fdivr
ror
sub
ss
jmp
xchg
call
(bad)
mov
loop
xor
(bad)
cmc
jl
jg
mov
(bad)
pop
jg
mov
push
or
repnz
mov
ret
dec
neg
cmp
dec
sahf
out
jnp
cdq
jecxz
mov
test
and
(bad)
(bad)
(bad)
arpl
jb
xchg
xchg
sahf
add
fs
stos
pop
xlat
pop
push
cmp
dec
cli
mov
cmp
(bad)
jg
test
out
in
xor
call
(bad)
jmp
mov
mov
pushf
iret
(bad)
sub
int3
fisttp
movs
lea
add
cli
mov
mov
pop
pop
arpl
mov
mov
scas
clc
aaa
cld
in
mov
mov
mov
or
mov
call
jl
ds
repz
mov
pop
scas
scas
clc
(bad)
(bad)
out
jg
push
or
xor
shl
pop
mov
retf
jg
mov
and
jmp
push
push
push
imul
sub
and
ss
mov
loop
(bad)
xlat
fdivr
icebp
call
xlat
clc
pushf
adc
sbb
ficom
mov
cmp
f2xm1
mov
outs
push
(bad)
(bad)
jmp
xlat
cmp
lea
cmp
rcr
fwait
shl
cmp
aas
pushf
das
mov
hlt
cmp
movs
mov
cs
xchg
ret
out
(bad)
loopne
enter
jg
(bad)
jmp
dec
pop
js
fist
mov
int
loopne
mov
sub
out
stc
retf
mov
jle
outs
cli
ja
jo
loop
stos
push
dec
add
xor
iret
test
out
jmp
(bad)
mov
sub
ja
stos
pop
jne
ret
scas
cld
jo
(bad)
(bad)
dec
jns
pop
enter
cmp
in
xchg
out
cli
sar
(bad)
iret
push
dec
dec
cli
mov
add
xor
jecxz
(bad)
inc
and
imul
push
(bad)
push
out
retf
out
adc
aaa
not
pop
or
jae
mov
dec
sub
mov
aam
jmp
sub
mov
adc
mov
cmp
sbb
repnz
aam
ret
fmul
pop
das
aas
pop
out
xchg
sti
icebp
xchg
(bad)
and
icebp
push
scas
fsub
jae
mov
jmp
(bad)
cmp
js
out
jb
cmps
mov
or
stos
jle
xchg
imul
mov
loopne
inc
cdq
fcmovne
pop
sahf
xor
imul
mov
rcr
out
std
push
sar
jg
ss
mov
xlat
jmp
scas
adc
jmp
adc
stc
(bad)
(bad)
(bad)
push
loop
cmps
jl
fst
adc
pusha
mov
jmp
ret
sti
and
(bad)
inc
push
sub
xor
shl
jp
sar
cmps
loope
(bad)
call
or
jl
add
aaa
in
add
daa
inc
push
push
popf
or
call
in
stos
call
in
(bad)
repnz
sbb
(bad)
dec
xchg
fild
mov
ja
cli
repnz
ds
or
arpl
add
std
inc
sub
jp
dec
(bad)
(bad)
dec
stos
cmp
aaa
arpl
and
movs
aad
fstp
in
arpl
je
mov
ja
xchg
in
iret
jns
pop
xchg
mov
loope
enter
sar
out
cmp
lahf
jp
outs
ins
jns
and
and
cli
(bad)
inc
(bad)
jo
retf
std
pusha
cmp
push
xor
dec
xchg
pop
xchg
idiv
add
dec
push
add
xor
sub
in
(bad)
(bad)
(bad)
dec
and
pop
mov
add
jnp
jno
xchg
jmp
retf
xchg
inc
stos
jge
call
jmp
cmp
arpl
jmp
(bad)
fdiv
popa
pop
or
sub
push
(bad)
jmp
pop
jg
leave
neg
(bad)
mov
lods
hlt
mov
rcr
es
jo
pop
or
jb
dec
dec
outs
cmps
cmp
sar
dec
jecxz
addr16
jne
push
mov
xor
cmc
dec
(bad)
in
xchg
shr
mov
jle
imul
mov
iret
push
imul
jle
cmp
fsub
adc
sub
jmp
inc
pop
or
mov
and
cmp
jmp
mov
outs
test
lock
scas
mov
rcr
stos
pop
xchg
jmp
addr16
jmp
popf
sti
leave
xchg
pop
dec
inc
lods
stos
ja
ja
call
mov
cmc
hlt
pop
ret
mov
lahf
hlt
in
xlat
jno
mov
pusha
pop
or
mov
mov
fidivr
jmp
popf
dec
jns
sub
mov
ret
add
pop
loopne
out
scas
dec
cmps
fild
out
mov
retf
jg
mov
repz
outs
jge
push
fsubrp
(bad)
xlat
hlt
fist
(bad)
int
dec
pop
mov
nop
jno
mov
jl
pop
ja
addr16
(bad)
(bad)
ds
xor
fst
jbe
mov
xchg
push
xchg
ja
push
(bad)
(bad)
mov
push
xchg
lds
mov
push
pop
mov
mov
std
(bad)
(bad)
(bad)
cmp
retf
mov
nop
pop
sub
nop
leave
sbb
cmp
hlt
(bad)
(bad)
(bad)
mov
fwait
sub
add
enter
das
(bad)
movs
jl
sbb
(bad)
call
push
sbb
mov
mov
imul
shr
cli
loopne
das
cli
retf
fsub
mov
fld1
(bad)
shl
xor
stos
outs
cmp
(bad)
mov
iret
aaa
jmp
jl
dec
mov
jl
and
push
cmp
push
popf
jl
shr
imul
mov
test
into
mov
inc
mov
jmp
inc
sar
(bad)
mov
test
jmp
jl
lahf
jnp
inc
fisub
pop
idiv
aas
fnstsw
imul
cmp
lods
push
dec
aam
repz
pop
mov
xchg
and
in
cmp
jmp
xchg
dec
xchg
daa
cmc
repnz
sub
in
out
jp
adc
jmp
ret
lock
dec
dec
nop
jnp
pop
das
and
stos
adc
inc
dec
fdivr
cmp
jmp
push
pop
jmp
sub
hlt
aaa
(bad)
popf
lods
retf
mov
sbb
lds
xor
stos
stos
movs
out
clc
mov
cmc
aas
sub
cmp
or
jp
clc
jmp
mov
stc
into
jnp
js
std
jmp
mov
mov
mov
cmp
mov
je
push
jb
(bad)
(bad)
jmp
sub
fdivr
retf
cmp
iret
ss
xchg
movs
cmps
out
ins
rcl
(bad)
(bad)
(bad)
in
(bad)
fidivr
add
xor
cmp
movs
or
lea
call
(bad)
(bad)
mov
fcom
mov
and
pop
retf
cmp
icebp
call
fisubr
sbb
jg
sbb
jp
pop
mov
jge
mov
xchg
fbstp
dec
cli
fs
(bad)
sub
ja
fst
sti
repnz
xor
frstpm(287
xchg
mov
mov
call
fstp
jb
add
lahf
mov
jmp
and
inc
mov
in
jmp
jns
(bad)
sub
lahf
jbe
xor
in
(bad)
mov
repz
jp
pop
mov
gs
nop
xor
movs
push
jl
inc
or
test
inc
mov
jmp
in
sti
outs
loopne
(bad)
in
das
mov
fiadd
sbb
jnp
mov
mov
mov
sahf
mov
xor
pop
dec
xchg
dec
cmp
fistp
xchg
jge
lods
shl
mov
lods
sbb
jl
inc
out
lods
xchg
pushf
mov
dec
inc
into
sub
inc
xchg
call
movs
jle
sub
addr16
adc
out
adc
(bad)
(bad)
push
xor
xchg
cdq
jnp
ja
ficomp
fucomip
sbb
dec
sar
dec
imul
pop
xchg
xchg
enter
inc
jg
dec
movs
adc
dec
enter
(bad)
mov
lods
cdq
mov
mov
(bad)
(bad)
(bad)
(bad)
cli
jg
xor
aaa
xor
xchg
xchg
mov
jne
cwde
xor
sbb
lahf
jno
(bad)
(bad)
dec
mov
shr
dec
dec
out
jecxz
fld
(bad)
cmp
in
arpl
dec
push
lea
(bad)
fucomp
stc
adc
jmp
shl
test
fs
div
sahf
xchg
mov
xchg
hlt
jg
sub
test
mov
mov
pop
xchg
sub
(bad)
(bad)
push
outs
dec
pop
cld
push
dec
inc
jg
mov
jge
out
cmc
push
mov
fs
(bad)
cdq
xor
(bad)
dec
cli
jbe
lods
mov
push
scas
iret
fsubr
adc
(bad)
jecxz
pop
pusha
mov
inc
mov
push
nop
jecxz
ds
jl
cmps
out
(bad)
daa
pushf
cmp
outs
clc
idiv
test
sti
test
jae
push
call
jb
je
sahf
or
inc
ftst
std
xor
icebp
push
js
inc
pop
jae
pop
jl
jnp
or
mov
hlt
jl
sub
sbb
xchg
fistp
icebp
neg
hlt
and
push
(bad)
jg
sbb
jp
fcomp
and
cmc
(bad)
(bad)
(bad)
(bad)
jnp
jecxz
jg
jns
jle
adc
jne
adc
jge
jg
xchg
das
push
mul
cli
push
scas
(bad)
(bad)
dec
sbb
sub
out
cdq
shr
stc
movs
iret
push
js
sti
sbb
pop
call
sar
xor
fs
mov
jg
cld
mov
gs
jno
std
test
(bad)
(bad)
call
mov
pop
mov
iret
(bad)
mov
sbb
push
fs
in
cdq
mov
dec
dec
(bad)
pop
xchg
in
fnclex
into
stos
in
imul
pop
pop
int
cmp
dec
fcmovnbe
xlat
push
jge
jnp
xor
xchg
in
mov
loope
ins
iret
pushf
retf
(bad)
les
(bad)
dec
div
push
push
mov
int
xlat
and
pop
sar
retf
jae
aam
icebp
out
in
imul
in
into
xchg
enter
sbb
jmp
mov
xlat
int3
ss
mov
cli
mov
xchg
ins
fild
addr16
(bad)
fist
mov
mov
fisubr
test
loope
push
stos
clc
invd
lahf
mov
(bad)
(bad)
call
nop
push
std
repz
std
repnz
mov
or
mov
fcmovnu
xchg
xlat
dec
test
push
fidivr
cli
fisttp
push
cld
(bad)
fdivrp
pop
mov
sbb
mov
jmp
fcom
loopne
or
lea
out
ja
push
sti
pop
mov
icebp
div
(bad)
stc
push
jns
lahf
jp
cmp
lods
xchg
(bad)
dec
jmp
das
jmp
pop
sar
jg
fistp
pop
outs
mov
jns
inc
(bad)
(bad)
(bad)
call
std
xor
aaa
frstor
jb
sbb
mov
out
call
out
(bad)
call
ror
(bad)
xchg
icebp
xchg
pop
out
pop
test
pop
jnp
ds
cli
inc
(bad)
(bad)
jmp
gs
fdivr
or
(bad)
fwait
(bad)
shl
sbb
outs
(bad)
(bad)
(bad)
(bad)
mov
add
in
ret
pop
arpl
pop
jne
dec
mov
lahf
cdq
stc
cs
(bad)
inc
lahf
dec
pop
test
pop
mov
fsubr
pop
ror
(bad)
(bad)
jl
pop
push
(bad)
fisub
dec
call
mov
(bad)
data16
(bad)
(bad)
xlat
mov
sahf
test
cwde
jnp
stos
sub
mov
fnsave
(bad)
mov
dec
call
pop
(bad)
jmp
shl
xor
daa
xchg
(bad)
(bad)
(bad)
dec
add
jmp
movs
out
xchg
mul
xchg
loop
out
fcmove
mov
cwde
dec
(bad)
(bad)
(bad)
(bad)
dec
fwait
or
iret
sti
fidivr
popa
cmps
mul
cmc
lods
mov
cmp
dec
pop
dec
jnp
repnz
mov
xchg
(bad)
(bad)
(bad)
dec
xchg
xchg
xchg
adc
mov
jle
aad
mov
jge
or
ins
or
call
in
sub
mov
mov
sub
das
popf
outs
std
movs
fistp
mov
in
(bad)
(bad)
aas
(bad)
test
(bad)
dec
mov
stos
dec
or
mov
pop
lock
xchg
(bad)
(bad)
(bad)
push
std
jp
call
inc
jmp
mov
pop
mov
call
pop
aad
xchg
lods
mov
repnz
inc
push
mov
retf
out
jb
cli
nop
xchg
outs
dec
movs
xchg
cmc
sbb
ins
inc
mov
mov
or
mov
adc
repnz
shl
int3
push
dec
jp
int
inc
dec
jle
test
outs
(bad)
cld
cmps
cmp
xchg
call
and
mov
outs
dec
pop
lods
and
dec
ss
dec
js
mov
dec
add
sar
inc
cmps
outs
aas
push
in
and
mov
sbb
mov
(bad)
mov
mov
xor
ds
(bad)
into
cmp
gs
jmp
dec
leave
and
sbb
addr16
leave
pop
ja
aad
arpl
out
push
(bad)
(bad)
(bad)
dec
sahf
mov
lock
push
lods
sahf
hlt
push
jmp
mov
data16
lea
jnp
jnp
jle
mov
mov
dec
dec
inc
(bad)
xchg
(bad)
(bad)
(bad)
jg
fcmovne
mov
stos
popf
fwait
xchg
lea
push
lea
aas
xchg
pop
lahf
call
(bad)
sti
sbb
(bad)
dec
xor
pop
loope
add
lock
mov
int
pop
dec
push
jg
call
mov
pop
scas
pop
js
out
and
mov
(bad)
in
ret
(bad)
(bad)
(bad)
jmp
rol
das
gs
jb
mov
ret
or
fsubr
pop
mov
iret
dec
mov
(bad)
xchg
fdivr
or
(bad)
jp
inc
mov
jg
xchg
sbb
xchg
and
and
retf
je
mov
(bad)
js
sub
nop
in
xchg
dec
mov
jbe
inc
pop
push
pop
sub
sub
jo
mov
inc
clc
(bad)
(bad)
dec
push
daa
sub
xor
push
xchg
(bad)
or
jne
xor
adc
je
stc
lahf
dec
xchg
or
mov
je
sar
cs
sbb
jbe
mov
cmps
pop
pop
dec
imul
ins
dec
mov
hlt
mov
(bad)
dec
push
sub
xor
lea
mov
rcl
dec
mov
in
mov
cli
pop
pop
push
in
std
outs
mov
sbb
mov
cli
jp
dec
pop
dec
ja
clc
call
into
pop
push
cmp
shl
stos
(bad)
(bad)
(bad)
jmp
jb
retf
pop
fist
inc
lods
xor
push
fcmovbe
jle
daa
xor
(bad)
(bad)
(bad)
cmp
stos
mov
jb
cmp
lahf
hlt
(bad)
mov
nop
out
inc
fistp
cmp
clc
(bad)
jmp
mov
das
xchg
in
xor
pop
jl
enter
mov
(bad)
in
add
jne
scas
push
fld
sub
(bad)
pushf
js
out
mov
stos
gs
or
cdq
sbb
xor
sub
cmps
repz
(bad)
mov
call
mov
or
js
cmp
(bad)
(bad)
call
mov
out
neg
fnstsw
stos
(bad)
sbb
jnp
push
scas
push
pushf
cs
ret
xchg
cli
mov
cwde
ins
cmp
push
mov
jo
sar
pop
xor
jmp
jne
cmp
cmp
call
aad
cmp
out
retf
jecxz
nop
adc
lock
(bad)
pop
mov
(bad)
lock
nop
pop
aas
inc
std
mov
sub
aad
hlt
fldcw
adc
fild
idiv
rcl
mov
fld
mov
push
add
sbb
stos
(bad)
(bad)
jmp
mov
mov
rcr
ds
icebp
test
lea
push
mov
outs
jle
(bad)
mov
mov
je
dec
popf
xchg
dec
fsubr
xchg
xchg
or
mov
idiv
dec
pushf
or
cld
out
lods
fild
leave
outs
cmp
dec
pop
in
leave
push
dec
add
(bad)
call
(bad)
out
push
into
sub
inc
mov
jmp
pop
daa
call
(bad)
(bad)
in
addr16
jne
pop
out
xchg
jbe
mov
dec
stos
jbe
xor
xlat
xchg
in
test
(bad)
call
std
xor
in
lods
aad
jge
pop
push
sbb
(bad)
mov
ins
mov
cmps
mov
lods
test
cli
in
or
hlt
fucomi
pop
movs
cmc
(bad)
call
outs
cmps
pop
call
dec
mov
(bad)
idiv
popa
js
(bad)
(bad)
jg
adc
dec
mov
sti
add
mov
daa
inc
out
jp
(bad)
mov
ret
lds
mov
cmp
fs
xchg
cli
(bad)
(bad)
jmp
mov
xchg
xchg
mov
into
mov
neg
push
xchg
add
repz
lock
xor
jg
sub
std
lds
je
inc
sub
mov
std
xchg
ins
int3
jmp
dec
lock
(bad)
(bad)
(bad)
jg
retf
mov
stos
jmp
cmps
div
aas
mov
call
mov
jb
jo
push
(bad)
(bad)
(bad)
jmp
jne
(bad)
imul
push
call
mov
adc
cmp
test
sub
jmp
inc
mov
mov
cmp
test
loopne
pop
pop
pop
das
test
cmp
loope
cwde
push
fidivr
popa
movs
and
retf
dec
pop
push
adc
ja
xchg
cmp
push
lods
arpl
jp
dec
cli
cli
(bad)
mov
lahf
jae
retf
xchg
std
dec
pop
nop
pop
ins
push
call
repnz
out
inc
(bad)
imul
into
adc
fnstcw
cmps
das
imul
dec
outs
leave
mov
nop
pop
or
jmp
sub
(bad)
(bad)
(bad)
call
int3
sti
fdivr
adc
(bad)
mov
arpl
test
lahf
repz
xchg
ja
clc
mov
xchg
rep
mov
ins
imul
add
hlt
hlt
cwde
mov
test
ins
xchg
je
(bad)
sub
jg
jbe
stos
mov
pop
xor
mov
sahf
sar
push
mov
push
pop
outs
cs
pop
(bad)
jbe
push
inc
(bad)
(bad)
jg
mov
mov
js
outs
pop
dec
aad
ins
std
clc
push
pop
dec
mov
(bad)
push
inc
jg
(bad)
jmp
dec
mov
and
mov
stc
sub
(bad)
mov
mov
sahf
lods
fiadd
pop
popf
jp
aas
xchg
mov
xor
(bad)
(bad)
jmp
pop
sbb
ja
add
push
sahf
cmp
fistp
ja
mov
mov
(bad)
(bad)
jg
push
mov
mov
cs
fcmove
inc
in
mov
into
gs
out
pop
in
pop
movs
sub
dec
(bad)
fnstsw
sub
mov
(bad)
std
lock
xlat
(bad)
jg
jecxz
jle
mov
mov
lahf
iret
cmp
pop
fsubrp
mov
(bad)
push
imul
das
jb
test
mov
(bad)
jmp
dec
movs
(bad)
push
loopne
sbb
fimul
leave
jmp
cmp
nop
sar
(bad)
(bad)
mov
js
xchg
retf
int
aad
das
leave
xchg
push
mov
icebp
pushf
fstp
mov
into
addr16
ins
stos
lea
jno
jle
in
(bad)
and
xchg
int
xchg
xor
out
sar
push
mov
xlat
mov
call
cmp
jl
cmp
pop
jbe
mul
(bad)
jns
jecxz
cmp
cmp
xchg
sub
(bad)
xchg
mov
mov
test
xor
and
hlt
mov
neg
nop
ss
cmps
xchg
cmps
es
scas
fwait
jbe
call
mov
dec
mov
cmp
xchg
mov
mov
scas
gs
xchg
test
loope
sub
outs
cli
(bad)
call
inc
ret
xor
cmp
or
jno
jg
(bad)
jnp
fsub
mov
or
pop
jmp
xor
mov
and
(bad)
call
(bad)
push
jnp
xor
jp
(bad)
sub
or
(bad)
(bad)
jmp
and
mov
test
loop
ins
jmp
mov
mov
pop
nop
xchg
sub
mov
lods
pop
jle
repnz
(bad)
(bad)
out
cli
repnz
in
lahf
(bad)
dec
lahf
addr16
data16
aas
mov
jnp
pop
aaa
push
xor
xchg
cmp
xchg
or
outs
sub
xor
jg
mov
(bad)
(bad)
out
inc
and
cwde
mul
dec
pusha
mov
jmp
hlt
icebp
movs
sbb
test
stc
(bad)
ja
fstp
pop
xor
pop
ss
(bad)
in
adc
(bad)
push
shr
jle
icebp
mov
xlat
dec
popf
movs
push
jmp
in
xchg
xchg
inc
cmps
mov
es
xlat
mov
call
jp
movs
pop
jp
pop
lods
push
in
out
lods
int3
jns
icebp
mov
(bad)
(bad)
fild
adc
gs
cs
fiadd
pop
clc
cdq
loop
lods
sbb
aam
dec
imul
(bad)
(bad)
jmp
(bad)
bnd
jne
mov
lahf
out
retf
ret
sbb
sbb
test
ret
add
cmc
pushf
pop
sti
push
dec
dec
xlat
sti
push
(bad)
jmp
jbe
dec
mov
daa
test
ja
jbe
mul
push
pop
pop
std
(bad)
int3
inc
cmps
jl
pop
(bad)
(bad)
(bad)
dec
(bad)
dec
push
sub
cmps
js
xchg
push
dec
mov
xchg
imul
mov
adc
cmp
jne
ret
scas
clc
call
(bad)
xor
jmp
jo
repnz
mov
cmp
(bad)
(bad)
call
mov
std
outs
dec
iret
xor
jno
cmps
xor
(bad)
sti
dec
stc
xchg
lods
(bad)
dec
in
fmul
pop
loope
iret
dec
int3
lods
fldcw
nop
(bad)
(bad)
(bad)
jg
cmp
cdq
dec
ja
retf
pushf
mov
mov
xlat
push
mov
ins
repz
fstp
(bad)
(bad)
push
(bad)
jae
mov
seto
leave
mov
out
cmc
mov
mov
(bad)
dec
or
xor
movs
ins
cli
pop
inc
dec
lods
add
xor
fistp
cdq
xchg
add
sbb
fistp
xchg
add
push
mov
mov
xchg
dec
repnz
(bad)
(bad)
inc
mov
imul
pop
gs
lahf
sub
dec
mov
mov
(bad)
push
call
fcmovu
xchg
mov
jmp
xchg
in
(bad)
ficomp
(bad)
jmp
addr16
jmp
pop
mov
mov
adc
out
xchg
(bad)
test
aaa
std
push
cs
jmp
repnz
or
rcr
push
ds
jecxz
xor
das
clc
mov
fisub
jle
loop
outs
jle
bswap
lods
das
int
out
jp
call
adc
std
mov
sbb
hlt
jb
push
jp
scas
push
hlt
into
aam
(bad)
(bad)
inc
cmp
pop
daa
sub
fwait
enter
into
jg
cmp
jae
cmc
mov
clc
sahf
loopne
jmp
jnp
test
or
les
repnz
(bad)
call
or
ds
mov
jg
lahf
jle
cmp
aad
push
jmp
js
sbb
mov
out
mov
ins
int
repnz
sub
arpl
push
sbb
faddp
aas
(bad)
dec
xchg
hlt
inc
aaa
imul
push
int
idiv
ja
adc
pop
add
fild
add
scas
cmp
and
sahf
adc
into
(bad)
(bad)
(bad)
jmp
aad
repz
(bad)
in
gs
cmp
pop
pmaxsw
fdivp
xor
(bad)
mov
pop
inc
jge
je
xchg
movs
jns
fsubr
jg
(bad)
repz
xchg
xlat
ja
xlat
(bad)
shr
frstor
jnp
mov
sahf
push
call
aas
jns
clc
mov
inc
dec
into
push
sbb
idiv
mov
(bad)
jmp
pop
out
gs
(bad)
je
inc
ret
cmc
pop
retf
pop
mov
nop
aaa
pop
sbb
or
add
ret
dec
jecxz
lods
(bad)
aam
lods
outs
(bad)
sti
hlt
mov
test
jmp
mov
add
out
xor
movs
(bad)
loop
stos
hlt
aaa
pop
test
jmp
aad
cmc
sbb
push
std
cmp
popa
push
scas
aad
jmp
lods
pop
in
(bad)
push
mov
in
jp
popf
pop
mov
mov
bound
inc
shl
xchg
and
push
int3
sar
call
scas
iret
xor
push
xor
cmps
mov
jnp
call
or
call
(bad)
scas
rol
fsubp
dec
int
scas
call
scas
(bad)
(bad)
(bad)
mov
test
lods
lahf
std
or
adc
pop
jg
rcr
(bad)
(bad)
(bad)
call
xchg
int
aam
fst
mov
dec
rol
pop
xchg
fwait
sbb
pop
sub
fnsave
xchg
sbb
stos
mov
stos
add
std
jbe
scas
call
(bad)
(bad)
(bad)
fistp
addr16
jmp
adc
rol
mov
fcomp
retf
dec
jg
(bad)
call
cld
or
fstp
sub
adc
dec
dec
scas
jmp
mov
iret
cdq
inc
(bad)
(bad)
inc
popf
jae
fwait
arpl
shl
xor
pushf
push
(bad)
pop
loopne
pop
gs
lahf
cdq
scas
(bad)
ror
or
jl
iret
inc
or
(bad)
fbstp
inc
jne
dec
(bad)
ds
ficom
call
(bad)
(bad)
(bad)
dec
push
mov
paddd
sahf
mov
into
imul
mov
jnp
cmc
call
sahf
outs
out
test
mov
sbb
andnps
xor
dec
push
and
out
inc
push
ds
mov
(bad)
(bad)
(bad)
(bad)
cli
push
pop
lods
out
and
scas
xor
mov
out
xchg
jnp
mov
cmp
mov
pop
(bad)
adc
mov
dec
call
cld
dec
and
fidivr
pop
mov
jg
mov
jg
ds
push
jns
jle
mov
pop
mov
aam
dec
pop
sub
call
lea
jp
jg
pop
test
xor
mov
(bad)
mov
repz
mov
dec
and
repz
mov
cwde
(bad)
(bad)
jmp
sbb
hlt
lods
fnstsw
out
pop
dec
mov
and
xchg
or
(bad)
jg
cmc
repnz
cli
shl
jbe
xchg
xchg
fwait
push
mov
(bad)
(bad)
call
jno
rcr
push
push
dec
aas
and
xchg
sbb
mov
leave
sti
mov
lock
add
and
jge
outs
xor
popf
mov
cmp
pop
cmps
jg
jmp
dec
in
(bad)
(bad)
(bad)
jnp
push
jg
out
fisubr
sbb
mov
stos
out
pop
mov
cmps
dec
inc
(bad)
(bad)
call
and
retf
jle
push
mov
popf
inc
jmp
dec
jmp
(bad)
(bad)
jmp
call
leave
hlt
gs
sahf
xchg
dec
ret
ror
xchg
js
(bad)
(bad)
jg
and
cdq
pushf
lds
sub
push
dec
jno
sbb
lahf
mov
sub
xchg
cmp
dec
pop
mov
mov
arpl
(bad)
(bad)
dec
pop
and
stc
ja
ret
int
jmp
int3
fldenv
dec
mov
(bad)
(bad)
(bad)
(bad)
jmp
fmul
(bad)
stc
mov
cmp
add
(bad)
mov
mov
out
sbb
mov
push
push
xor
pushf
mov
mov
or
cmp
sbb
sub
or
icebp
inc
ja
xchg
jo
jg
jo
or
mov
(bad)
mov
popf
stos
out
popf
and
(bad)
(bad)
(bad)
fadd
sbb
jbe
(bad)
rcl
sar
mov
lds
test
aad
and
out
mov
imul
lea
jno
mov
push
mov
jno
jge
repz
and
add
(bad)
(bad)
(bad)
std
(bad)
outs
aaa
mov
aaa
push
sub
cmp
(bad)
in
ret
xchg
xchg
dec
loopne
loope
inc
mov
(bad)
push
lods
hlt
aad
dec
mov
idiv
dec
retf
ficomp
hlt
ins
xchg
(bad)
(bad)
(bad)
jmp
dec
mov
jns
mov
lds
rol
cmps
loop
(bad)
(bad)
push
add
push
jmp
jo
jnp
mov
les
adc
(bad)
(bad)
mov
sub
cmp
ins
repnz
stc
cmp
jb
jno
movs
(bad)
(bad)
jg
out
ins
mov
in
dec
dec
test
push
push
adc
xchg
int3
ds
call
sub
push
dec
push
ffree
addr16
retf
outs
sbb
xor
test
int
(bad)
(bad)
out
sub
div
jnp
std
loope
mov
lock
pop
into
cs
xchg
pop
inc
xchg
ror
push
jne
pop
popa
adc
push
sti
jg
fs
push
(bad)
out
lods
mov
icebp
adc
mov
sti
bound
or
mov
mov
adc
and
lock
aaa
xor
xchg
or
or
cld
mov
call
inc
xchg
test
pop
pop
in
pop
mov
in
push
push
mov
add
jg
fstp
push
mov
mov
dec
addr16
pop
imul
mov
fs
mov
(bad)
stos
shl
mov
(bad)
(bad)
out
dec
xchg
in
outs
daa
rcr
enter
or
or
push
mov
push
pop
xor
(bad)
jmp
cmp
loop
test
push
mov
fwait
xchg
cs
(bad)
push
fbld
add
pop
cmc
scas
hlt
mov
sub
jle
mov
clc
(bad)
(bad)
(bad)
jmp
dec
fcom
shl
mov
int
or
ins
mov
pop
sbb
mov
cmps
cmovg
cmc
mov
ficomp
cld
pop
mov
fmul
jl
out
mov
or
mov
aaa
pop
(bad)
dec
sub
loopne
int
xor
(bad)
(bad)
sbb
(bad)
jg
push
aas
int
test
es
imul
dec
sti
jg
leave
call
call
xchg
shl
xchg
push
scas
pop
shl
(bad)
(bad)
(bad)
dec
dec
out
mov
mov
imul
mov
xor
lods
fild
jl
xchg
test
xchg
xchg
fdivr
adc
push
shr
sub
cld
call
out
int3
inc
xchg
mov
(bad)
(bad)
(bad)
(bad)
fnstcw
retf
push
int
push
(bad)
jmp
imul
jbe
xor
scas
cli
jmp
aaa
pop
jge
push
popf
imul
jb
push
(bad)
and
jp
cld
ins
xor
push
cld
call
out
mov
cs
lds
mov
or
xlat
and
call
ins
xor
outs
gs
xchg
pop
pop
arpl
jmp
sub
pop
dec
(bad)
(bad)
(bad)
push
xchg
mov
fdivp
jae
jle
cwde
fs
loop
out
xchg
(bad)
imul
pop
fsubp
pop
fwait
xchg
fiadd
fnstenv
inc
add
mov
pop
xor
outs
outs
(bad)
call
inc
push
adc
xor
out
arpl
pop
adc
aas
cs
jg
(bad)
jno
xchg
icebp
(bad)
jnp
jl
adc
mov
cli
xchg
das
shl
aad
pop
(bad)
mov
(bad)
push
ror
mov
push
rep
arpl
mov
(bad)
(bad)
jg
mov
push
xchg
into
cmp
rcr
mov
iret
xchg
or
xor
inc
cmc
mov
add
(bad)
xchg
popf
test
fsub
pop
sub
pop
daa
call
(bad)
(bad)
jmp
mov
std
sub
xchg
sub
daa
mov
jmp
aaa
iret
adc
inc
in
pop
sub
(bad)
(bad)
(bad)
jmp
loope
sub
jb
mov
adc
cdq
pop
mov
and
stos
pop
(bad)
jns
pop
(bad)
(bad)
(bad)
jmp
mov
ins
mov
push
push
inc
jnp
cmps
mov
jbe
scas
(bad)
(bad)
(bad)
push
fst
push
pushf
shl
mov
jl
adc
ja
imul
bound
jmp
jl
xchg
scas
push
mov
inc
retf
cld
fisttp
push
enter
pop
(bad)
pop
(bad)
(bad)
call
pop
mov
iret
jp
repz
pop
test
mov
es
mov
ja
(bad)
(bad)
aas
xchg
imul
mov
jecxz
arpl
xchg
cmps
inc
jbe
ja
dec
(bad)
(bad)
(bad)
jmp
jno
mov
popf
mov
push
ins
xchg
mov
pop
(bad)
inc
jno
dec
ret
push
clc
inc
ins
cmp
mov
jecxz
xchg
int
js
leave
mov
jb
push
xor
push
xchg
dec
jecxz
fldcw
sbb
inc
stc
test
cmp
icebp
cld
jnp
push
mov
idiv
call
xor
inc
lods
mov
shr
icebp
sbb
xor
push
call
loope
xchg
xchg
jg
lods
iret
sub
mov
add
cld
(bad)
dec
(bad)
mov
pusha
je
test
mov
out
or
or
mov
(bad)
call
sub
jo
scas
in
push
sar
cs
lahf
nop
stc
arpl
scas
clc
(bad)
fild
ja
jnp
mov
cmp
loop
and
hlt
iret
sbb
adc
call
cdq
pop
sub
in
push
out
xlat
jg
ja
adc
(bad)
(bad)
(bad)
mov
xchg
jmp
inc
test
not
das
loope
or
pop
shr
cld
(bad)
dec
repnz
cli
inc
dec
jne
sbb
(bad)
cmp
scas
retf
(bad)
(bad)
(bad)
jle
int3
xlat
stos
sub
lds
push
and
push
cmp
inc
outs
xchg
test
mov
push
xchg
repz
mov
xchg
cmps
dec
mov
push
loop
ins
idiv
idiv
stos
int
repz
(bad)
(bad)
jmp
jno
dec
out
int3
fisub
ss
xor
out
sbb
push
arpl
dec
(bad)
cmp
imul
out
push
cmp
retf
(bad)
(bad)
jg
mov
into
push
push
dec
sub
dec
ins
ret
into
jne
or
sahf
leave
and
(bad)
jmp
movs
(bad)
cmp
ja
xor
mov
(bad)
and
push
movs
pushf
jnp
add
aad
scas
xor
(bad)
(bad)
(bad)
dec
mov
sub
pop
iret
sbb
cs
inc
popf
sti
xchg
leave
pop
mov
(bad)
(bad)
call
jmp
mov
jge
repnz
jns
hlt
idiv
push
mov
jmp
clc
pop
ins
and
rcl
jl
xchg
imul
addr16
push
jmp
sbb
sub
xchg
outs
pop
out
ret
adc
mov
call
or
cli
out
gs
scas
sub
daa
jae
gs
fxch
sbb
(bad)
(bad)
dec
daa
xor
lahf
popa
in
cmp
(bad)
dec
std
fdiv
sub
sbb
call
cli
(bad)
(bad)
mov
jns
test
sub
ja
aad
leave
call
(bad)
dec
jmp
jae
jmp
shl
adc
(bad)
(bad)
call
mov
adc
sub
push
hlt
scas
clc
(bad)
sahf
fidivr
call
out
out
int
fwait
(bad)
outs
ds
out
fdivrp
loop
scas
aam
mov
cld
mov
call
(bad)
jmp
jb
out
call
cld
lahf
into
jg
lock
xor
aaa
js
mov
mov
lock
(bad)
(bad)
call
ror
popa
lock
adc
fidivr
pop
push
mov
aad
stos
(bad)
outs
cli
(bad)
push
mov
mov
ins
pop
fbstp
fnsave
push
mov
mov
in
(bad)
(bad)
retf
mov
dec
test
ficom
cmc
push
out
or
retf
jbe
ja
lea
dec
jb
(bad)
(bad)
jg
xlat
bound
cld
outs
lea
imul
mov
dec
(bad)
xlat
nop
(bad)
ss
(bad)
inc
hlt
mov
hlt
sbb
das
jge
loope
jl
pop
retf
jmp
mov
arpl
int
punpcklwd
imul
idiv
mov
std
jb
in
xchg
jle
jge
mov
(bad)
(bad)
push
jnp
mov
pushf
jmp
neg
call
cld
movs
rcr
sar
(bad)
(bad)
call
fcomp
fld
dec
pop
js
and
in
dec
jp
xlat
add
movs
addr16
pop
call
outs
xchg
jns
mov
jnp
or
iret
xor
mov
xchg
jg
ins
(bad)
pop
out
aaa
retf
mov
xchg
int
iret
mov
lock
call
or
clc
sub
ret
jb
cmp
lahf
mov
(bad)
int
loope
retf
cmp
xor
fnstenv
sahf
cwde
fisub
jg
inc
pop
into
mov
mov
outs
in
jmp
fwait
push
mov
(bad)
(bad)
mov
pop
cmovnp
jo
inc
into
cwde
mov
aas
xchg
jmp
ja
jmp
repnz
ja
rol
neg
aas
xor
test
(bad)
jg
jmp
sub
pop
mov
xchg
or
mov
(bad)
(bad)
(bad)
dec
popf
or
jns
dec
push
mov
jp
or
popf
jg
or
aam
retf
fistp
hlt
in
fistp
test
rol
(bad)
call
mov
sub
test
imul
es
sbb
daa
inc
jbe
cs
pop
xor
jl
sbb
(bad)
jmp
push
and
clc
fisubr
retf
ficom
lea
(bad)
dec
dec
inc
adc
stc
aas
mov
(bad)
xlat
ds
fisub
or
xor
cmp
ror
xlat
scas
aaa
jmp
xor
cld
(bad)
(bad)
rcl
repnz
sahf
cs
(bad)
(bad)
push
repnz
addr16
mov
sti
add
neg
repz
outs
mov
imul
xchg
mov
out
cmp
(bad)
(bad)
(bad)
call
icebp
daa
pop
xor
call
inc
out
nop
jns
xchg
int3
sti
addr16
aaa
inc
loop
jg
and
(bad)
dec
aam
shl
fs
aaa
das
out
outs
enter
fsubr
jle
call
xor
cmps
xchg
cmp
aas
pushf
xchg
test
(bad)
(bad)
jmp
push
cmps
lods
xor
jns
mov
hlt
call
clc
mov
lahf
nop
adc
(bad)
jmp
fldcw
inc
cdq
and
sti
xchg
xor
xchg
jmp
mov
in
(bad)
mov
nop
jmp
shl
xor
lods
test
gs
(bad)
mov
inc
cmps
out
retf
cdq
fs
or
lea
pop
mov
jg
cmps
jbe
and
cmp
or
xbegin
sub
(bad)
(bad)
call
mov
xchg
ins
sahf
cli
and
xor
idiv
mov
cmps
sti
sbb
jmp
dec
dec
cmp
outs
xor
cmp
stos
mov
pop
addr16
cmps
adc
push
push
push
scas
fldenv
aaa
pop
fnstenv
pop
(bad)
xor
sub
push
jmp
fwait
cld
aad
cmps
fstp
out
dec
mov
pop
jbe
mov
(bad)
(bad)
jmp
inc
push
inc
pop
pop
lds
xlat
cdq
add
xor
outs
ja
sbb
(bad)
(bad)
jmp
mov
jmp
mov
and
cmp
sbb
in
je
(bad)
(bad)
(bad)
jmp
pop
mov
mov
stos
pop
xchg
mov
dec
push
lods
stc
lods
imul
mov
mov
fstp
xchg
outs
fmul
push
xchg
je
aaa
pop
call
jecxz
sar
mov
push
mov
push
fwait
sub
jmp
xor
xor
fist
pop
popw
sbb
(bad)
sbb
lods
je
(bad)
call
cdq
scas
mov
(bad)
lods
jbe
sbb
push
clc
dec
mov
mov
mov
cmp
push
sub
das
test
lahf
dec
cld
push
xchg
lods
xchg
jge
or
(bad)
(bad)
jmp
arpl
xchg
xchg
int
inc
fs
cdq
aad
out
repnz
fs
xchg
jmp
(bad)
(bad)
push
lods
jg
jp
sbb
les
xchg
jbe
dec
mov
fist
lods
scas
dec
call
jae
ins
ror
dec
push
add
adc
imul
ins
mov
mov
inc
cmp
sub
sti
jnp
cmps
add
xchg
sub
push
pop
ss
call
(bad)
inc
fdivr
repnz
pop
cmps
adc
outs
dec
push
clc
jno
or
outs
xor
data16
mov
repnz
shl
dec
mov
inc
dec
retf
ss
mov
fcom
sub
push
jmp
jl
call
pop
retf
pop
scas
test
std
cmps
ja
ficomp
mov
js
popf
mov
leave
les
(bad)
push
mov
push
push
sar
push
jno
into
xchg
clc
and
mov
lods
aam
fs
mov
lea
add
cld
call
fucomi
mov
mov
cmps
cmp
repnz
cmc
inc
(bad)
(bad)
call
mov
mov
inc
mov
std
pop
cwde
pop
movs
mov
ror
(bad)
(bad)
(bad)
dec
jnp
je
outs
pop
xchg
leave
ds
dec
pop
cmp
test
xchg
jne
(bad)
(bad)
(bad)
call
pop
dec
scas
aam
movs
(bad)
cmps
mov
and
add
leave
xlat
pop
mov
pop
adc
mov
(bad)
(bad)
push
mov
inc
pop
sbb
clc
pop
(bad)
dec
sbb
xor
fisttp
jp
call
jmp
dec
xchg
or
fwait
lods
push
dec
mov
outs
movs
adc
push
(bad)
dec
jge
sub
push
out
and
movs
movs
stc
xchg
jl
(bad)
(bad)
push
pop
push
xchg
cmc
rcl
ja
jo
test
nop
mov
hlt
or
jmp
icebp
test
mov
sbb
and
inc
adc
(bad)
(bad)
(bad)
jmp
retf
fistp
ins
jmp
cmp
fiadd
movs
out
(bad)
movs
pop
popa
cld
call
mov
gs
(bad)
test
mov
xor
std
aaa
out
xor
jmp
sti
mov
cmps
js
(bad)
(bad)
push
lahf
hlt
inc
ins
dec
or
xor
and
das
mov
shl
jae
jmp
dec
dec
rep
pop
lgs
lea
icebp
lock
(bad)
(bad)
mov
fucomi
fild
push
lods
mov
mov
ret
inc
or
or
mov
pop
scas
hlt
adc
leave
mov
test
imul
mov
xchg
call
aad
test
scas
aad
pop
imul
sub
test
sub
sbb
test
gs
jnp
sub
xchg
repz
dec
in
(bad)
and
jmp
add
loopne
mov
mov
cmp
xor
push
and
das
icebp
pop
sub
adc
out
pop
mov
mov
imul
or
sbb
(bad)
inc
fcmovnbe
pusha
pop
shl
pop
and
mov
mov
ins
(bad)
pop
jnp
hlt
mov
sub
(bad)
(bad)
mov
hlt
outs
call
xor
xor
cs
test
mov
stos
(bad)
in
xchg
mov
aaa
xor
fstp
cmp
jmp
(bad)
push
jecxz
es
cwde
and
imul
mov
call
call
ins
xchg
mov
clc
push
sbb
xor
(bad)
(bad)
jmp
xchg
mov
add
clc
clc
cld
fwait
push
cld
std
cld
pop
int3
inc
(bad)
(bad)
(bad)
mov
cld
out
int
fistp
cld
shr
mov
mov
pop
mov
loope
(bad)
dec
push
pop
jmp
cmp
not
(bad)
(bad)
mov
addr16
sahf
sbb
test
stos
arpl
mov
data16
mov
inc
out
int3
cmp
dec
and
xchg
sub
paddb
mov
clc
mov
adc
sbb
jmp
jle
loop
repz
call
(bad)
(bad)
push
mov
sbb
ins
push
inc
loop
fstp
call
cli
cmps
inc
scas
pop
mov
ror
sar
js
push
fdivr
int3
addr16
cmp
fs
cmp
mov
sti
daa
mov
das
sbb
inc
(bad)
jmp
pop
arpl
fucom
call
sub
(bad)
(bad)
jmp
inc
(bad)
(bad)
pop
je
(bad)
sbb
sub
inc
mov
js
xor
pop
mov
dec
mov
push
stos
inc
imul
rcr
xor
push
add
dec
jmp
cmp
out
mov
addr16
mov
push
fidiv
mov
mul
xor
cli
jb
dec
test
dec
adc
(bad)
(bad)
jmp
inc
or
or
sub
add
mov
pop
sub
sar
stos
push
test
jmp
pop
sbb
xor
adc
aad
jmp
dec
or
push
mov
ins
scas
push
dec
mov
xchg
mov
call
dec
sar
(bad)
call
sar
xlat
dec
pop
sub
fcom
dec
push
dec
or
std
jo
ds
(bad)
(bad)
(bad)
jmp
lahf
jmp
les
out
iret
sub
push
iret
inc
xchg
lds
mov
push
stos
jle
ins
push
in
push
ins
inc
lods
push
sbb
(bad)
in
(bad)
call
push
es
inc
push
movs
shr
jle
lods
push
in
inc
push
sbb
push
ins
push
cmc
(bad)
jg
adc
push
push
popf
push
in
repnz
mov
stos
jle
ins
push
std
scas
mov
out
and
jmp
push
mov
xor
stos
mov
push
fild
(bad)
fcomi
stos
push
test
mov
ins
xor
push
retf
dec
stc
mov
sar
push
(bad)
(bad)
(bad)
call
xchg
cmps
xchg
cmps
popf
cmps
inc
rcr
ret
mov
dec
fisttp
stos
dec
pop
dec
sbb
cdq
(bad)
(bad)
(bad)
call
fadd
lods
clc
outs
clc
dec
jl
mov
ror
push
fmul
(bad)
(bad)
mov
loope
lock
das
clc
or
sbb
psrad
(bad)
popf
jo
jg
mov
xor
sub
sub
iret
cmp
sti
call
cld
dec
iret
sub
cli
ficom
adc
retf
icebp
scas
icebp
imul
(bad)
(bad)
(bad)
jg
cld
jnp
daa
jl
arpl
cmp
inc
cwde
or
push
cmps
rdpmc
mov
(bad)
test
xor
fs
int3
jne
clc
push
std
sbb
fadd
dec
or
popf
sbb
push
cwde
xlat
cdq
setns
(bad)
inc
repz
mov
movs
jge
mov
or
mov
dec
call
ficom
sub
sub
sub
and
or
std
pop
cli
lods
hlt
pop
shr
jg
mov
mov
mov
jmp
hlt
push
std
push
std
adc
pop
inc
loop
push
aas
test
xchg
add
push
iret
pop
(bad)
(bad)
(bad)
jmp
mov
into
mov
(bad)
aam
data16
jmp
and
rep
icebp
dec
repz
not
call
push
aad
xor
cmp
dec
out
sahf
cmps
stos
out
iret
js
mov
call
in
cmps
sbb
popf
test
xor
dec
scas
fwait
jle
xor
hlt
(bad)
(bad)
call
ret
lock
sahf
sub
test
lahf
scas
outs
cmps
(bad)
sar
ret
and
or
int
add
fwait
fwait
stos
retf
loopne
and
(bad)
(bad)
(bad)
jns
jns
jns
jns
cmp
cmp
mov
ss
adc
mov
(bad)
mov
les
bound
mov
and
pop
cld
dec
cld
lea
mov
jg
fwait
cld
movs
js
jae
adc
aad
sar
add
je
push
(bad)
(bad)
data16
cmp
pushf
xchg
xor
loope
push
rcl
jbe
dec
dec
cli
adc
aas
pop
enter
mov
adc
popa
pop
loope
rcl
fs
sahf
xlat
add
imul
add
aad
rcr
leave
int3
jle
pop
cmp
fmul
push
jl
cmp
xlat
(bad)
(bad)
mov
rcr
and
gs
push
mov
in
shl
frstor
iret
push
mov
push
stos
(bad)
jg
movs
sub
mov
add
mov
stc
daa
mov
neg
jmp
test
push
dec
push
or
ret
dec
fldenv
clc
(bad)
call
xlat
dec
jecxz
retf
dec
push
pop
mov
push
fimul
out
test
push
loop
lock
(bad)
(bad)
jmp
xchg
int3
push
sbb
arpl
add
push
fmul
adc
daa
pop
sub
push
dec
pop
and
jge
cmp
mov
dec
jmp
fdivp
(bad)
fistp
hlt
sub
jmp
inc
jge
jle
(bad)
push
std
sub
gs
int3
push
jg
fild
inc
dec
or
rol
or
adc
call
mov
inc
clc
mov
mov
dec
push
das
iret
adc
cmp
mov
dec
ja
adc
jns
jns
clc
mov
test
and
outs
mov
ins
jg
pop
push
icebp
(bad)
(bad)
ficomp
pop
gs
pop
scas
push
mov
sub
cmp
loopne
je
or
(bad)
(bad)
inc
bound
icebp
push
inc
sub
sub
scas
enter
sbb
(bad)
(bad)
jmp
inc
fidiv
jno
nop
fs
ds
stos
mov
(bad)
and
(bad)
(bad)
fnsave
mov
loope
cmp
xchg
iret
or
xchg
popa
jmp
mov
fcmovnb
inc
test
popa
clc
xchg
(bad)
push
xchg
ret
sub
out
jp
jns
sahf
add
out
out
sar
(bad)
(bad)
call
jns
cmp
outs
pop
jnp
push
loope
push
sub
push
add
iret
retf
cmps
mov
push
pop
ror
sub
ror
xor
lock
pushf
pop
add
mov
loope
cwde
or
mov
add
into
or
cli
dec
jg
push
call
cmps
scas
(bad)
(bad)
dec
lds
cli
mov
stos
cli
mov
mov
lods
inc
enter
add
(bad)
dec
jge
cmp
fsubr
mov
dec
aaa
inc
jg
dec
shr
inc
je
jae
pop
pop
mov
push
mov
mov
(bad)
call
dec
mov
mov
xor
mov
fisub
cmps
je
xor
fdivp
shl
inc
ret
inc
cmc
(bad)
(bad)
(bad)
mov
sbb
retf
dec
add
cmps
add
inc
pop
fwait
sbb
(bad)
fisttp
dec
jnp
cdq
es
jmp
add
mov
pop
movq
fild
jg
das
(bad)
sub
add
dec
jl
mov
mov
jg
mov
mov
es
push
cmp
cs
add
pop
enter
mov
aas
rol
jmp
adc
push
ret
fld
dec
js
mov
(bad)
(bad)
fcmovnb
or
seta
in
loop
loop
jae
fsubr
enter
and
je
push
loopne
(bad)
jmp
js
clc
stos
clc
test
jnp
jnp
mov
ret
loopne
loop
xchg
icebp
xchg
outs
sbb
cdq
pop
ds
xchg
jecxz
(bad)
call
jo
icebp
pushf
xor
ja
or
inc
xor
ret
test
jmp
(bad)
(bad)
mov
dec
xchg
test
cmc
cmp
rol
(bad)
dec
sbb
dec
mov
dec
jnp
jge
std
mov
cld
mov
mov
mov
(bad)
(bad)
dec
or
sti
mov
imul
sbb
xor
(bad)
addr16
or
scas
sbb
sbb
ss
jl
(bad)
(bad)
(bad)
jmp
test
outs
imul
jno
jmp
int
jge
add
jge
mov
push
loopne
icebp
add
(bad)
(bad)
(bad)
inc
retf
rol
cdq
mov
ret
retf
movs
adc
iret
jmp
jmp
or
pop
jmp
(bad)
inc
test
jg
imul
retf
jp
pop
jno
je
fisttp
mov
pop
mov
ja
daa
or
inc
test
mov
sub
adc
and
or
inc
out
dec
jae
in
(bad)
call
add
push
icebp
adc
cs
sub
into
adc
das
or
jg
dec
and
mov
pop
imul
fstp
mov
mov
(bad)
(bad)
mov
in
pop
cwde
(bad)
mov
popa
push
clc
adc
test
hlt
ror
xor
pop
mov
(bad)
(bad)
call
je
dec
icebp
xchg
loop
bound
ror
xchg
xchg
daa
add
arpl
(bad)
(bad)
(bad)
inc
jp
fnstenv
xlat
adc
leave
jo
fsub
add
sbb
popa
xlat
lock
outs
xchg
je
(bad)
(bad)
dec
mov
test
repnz
add
pusha
cmp
push
and
test
jecxz
push
int3
retf
cli
dec
std
push
mov
dec
fcomp
test
(bad)
(bad)
(bad)
(bad)
call
xor
repz
cmp
fwait
div
mov
mov
clc
rcl
scas
call
(bad)
fmulp
xor
je
xor
hlt
cdq
jmp
jno
test
dec
test
push
cli
(bad)
(bad)
(bad)
ficomp
dec
call
movs
out
(bad)
rol
ds
ret
test
cmp
arpl
or
and
icebp
(bad)
(bad)
(bad)
mov
push
cld
xchg
js
clc
inc
jno
jno
js
mov
(bad)
jle
(bad)
(bad)
call
xchg
pop
stos
or
adc
push
sub
dec
lds
imul
scas
xor
sbb
adc
cmp
ret
inc
loope
ret
push
ret
out
sar
(bad)
into
xlat
(bad)
(bad)
push
jae
adc
cmp
stc
ret
repz
adc
(bad)
xor
push
rcl
add
cli
push
jg
xchg
arpl
jo
js
pop
dec
movs
cmp
jnp
(bad)
(bad)
jmp
jmp
gs
push
loope
popa
xchg
shl
sbb
sub
jbe
ss
(bad)
(bad)
(bad)
inc
imul
xor
daa
in
jno
jne
out
daa
nop
daa
adc
push
lods
mov
(bad)
(bad)
(bad)
jmp
dec
adc
ss
shr
aam
out
(bad)
rol
push
data16
aam
jne
(bad)
dec
(bad)
jg
xchg
imul
mul
out
push
jnp
mov
je
jmp
repz
mov
fsubr
mov
mov
jo
das
fcomp
into
and
dec
repz
(bad)
(bad)
(bad)
jmp
out
stos
pop
xchg
add
mov
push
cs
je
push
sar
(bad)
iret
gs
jmp
(bad)
movs
add
cmc
jle
ins
pop
mov
jg
pop
shl
jmp
or
test
cmp
dec
ret
(bad)
push
inc
and
ret
(bad)
clc
sub
jne
ret
pop
sub
jnp
pusha
outs
mov
(bad)
mov
mov
les
pushf
imul
jmp
inc
(bad)
(bad)
clc
dec
rcr
(bad)
out
mov
mov
in
jmp
jge
(bad)
push
lods
clc
jg
mov
aaa
rol
(bad)
aas
mov
mov
and
cld
add
cmp
sub
ss
mov
or
(bad)
jg
jl
add
add
iret
lock
xchg
xchg
(bad)
call
repz
sub
sahf
xlat
push
iret
sbb
push
outs
stos
es
call
dec
jecxz
in
dec
leave
cmps
das
dec
test
dec
mov
test
push
ds
in
xor
les
in
(bad)
(bad)
jg
aas
xor
push
fistp
hlt
cwde
hlt
mov
out
test
fiadd
sar
(bad)
jmp
mov
js
jl
aas
lods
call
jl
dec
std
add
jns
adc
(bad)
sbb
jo
xor
in
das
sbb
pop
and
es
(bad)
call
jl
mov
std
cmp
enter
and
adc
int
cmp
cld
test
pop
(bad)
(bad)
(bad)
jmp
jmp
jae
arpl
test
push
pushf
jmp
push
pop
push
cmp
stos
out
(bad)
(bad)
(bad)
jmp
push
pop
push
push
test
cwde
stos
shl
es
(bad)
jmp
(bad)
sbb
push
(bad)
xlat
pop
cmps
call
cli
inc
shr
gs
fidiv
xlat
or
mov
xchg
sti
js
pop
mov
push
call
mov
jns
sub
(bad)
mov
xor
add
cmp
cdq
inc
int3
jns
sbb
jp
pop
and
ins
jae
and
push
mov
(bad)
jmp
rcl
shl
aas
and
jmp
xchg
fimul
dec
test
jmp
sbb
(bad)
(bad)
cli
pop
adc
jmp
fwait
pop
cmps
hlt
adc
jl
je
pop
mov
cs
(bad)
jmp
mov
jmp
xchg
test
stos
sbb
int3
in
cmc
(bad)
(bad)
jg
stc
mov
mov
xor
ja
mov
push
pop
sub
(bad)
mov
fwait
mov
(bad)
call
inc
xchg
pop
jne
dec
or
(bad)
(bad)
jmp
push
dec
rcl
jmp
push
setp
ret
cmp
xchg
sub
loopne
mov
mov
mov
sar
(bad)
(bad)
(bad)
ficom
jmp
stos
cwde
xor
fadd
sub
int3
jge
and
inc
xchg
cwde
pop
int3
sbb
xchg
cld
rcr
mov
pushf
hlt
xchg
aam
call
(bad)
(bad)
mov
in
enter
imul
sbb
fdivr
pushf
out
inc
(bad)
mov
(bad)
(bad)
(bad)
mov
repz
aas
dec
xchg
(bad)
stc
cld
repz
out
iret
out
iret
aas
lahf
(bad)
aas
(bad)
sub
and
(bad)
mov
inc
in
data16
imul
call
data16
jb
xor
cmps
in
ds
fisub
test
(bad)
(bad)
mov
pop
ficomp
popf
pop
jle
jbe
sbb
imul
sbb
pushf
pop
xor
cmp
mov
in
stc
leave
cld
add
cld
mov
inc
push
mov
dec
cld
popa
out
inc
and
fwait
adc
repz
jae
jg
(bad)
(bad)
call
repnz
jge
pop
outs
and
push
pop
call
cli
jl
xchg
push
sar
mov
ins
sbb
mov
pop
cwde
pop
dec
mov
push
(bad)
(bad)
push
or
push
xor
mov
xchg
mov
in
int
xchg
pop
fnsave
jg
dec
push
push
lea
mov
pop
shl
add
(bad)
(bad)
push
(bad)
inc
ret
ins
sbb
jmp
mov
out
xor
cs
not
in
in
mov
aad
(bad)
(bad)
(bad)
jmp
mov
lds
cmps
fwait
push
shl
jmp
fcmove
mov
pop
mov
cli
(bad)
push
adc
test
cwde
mov
clc
inc
sub
ss
push
in
(bad)
(bad)
call
int3
mov
mov
push
or
fld
lahf
into
sti
(bad)
mov
outs
xor
mov
vpsubsb
sar
fcomp
(bad)
jmp
mov
movs
pop
test
cdq
idiv
loope
out
xchg
(bad)
dec
je
mov
mov
(bad)
js
ficomp
call
jmp
mov
fld
aad
int
imul
dec
sahf
hlt
push
ja
and
ret
jmp
push
push
call
(bad)
call
clc
cs
xor
inc
fistp
pop
push
jnp
in
not
inc
mov
out
(bad)
call
in
or
jge
popf
jns
iret
or
or
sbb
mov
push
icebp
imul
jl
push
int3
test
mov
and
cmps
xor
and
and
add
add
cli
out
add
sub
dec
xchg
cld
dec
mov
inc
repnz
call
daa
es
stc
xchg
outs
fs
lahf
sub
pop
xor
(bad)
out
mov
iret
xor
push
dec
clc
cli
stos
xchg
retf
cmps
(bad)
cmc
loope
adc
(bad)
mov
xchg
sbb
jnp
cmp
jns
cli
mov
not
or
loop
mov
lods
mov
(bad)
(bad)
(bad)
inc
out
mov
aas
mov
mov
push
into
cwde
data16
sub
outs
pop
(bad)
(bad)
(bad)
(bad)
cmp
cwde
out
lfs
mov
jle
jbe
mov
cwde
sar
adc
out
out
out
ret
into
adc
jmp
clc
jmp
stos
stc
icebp
(bad)
rcl
cld
mov
cmc
cwde
pop
sti
mov
fsubr
clc
(bad)
(bad)
jmp
call
push
pop
out
aas
mov
loop
push
call
(bad)
push
mov
push
bound
cmc
cdq
inc
mov
lods
jge
(bad)
(bad)
(bad)
jg
mov
movs
jno
fstp
outs
dec
fisttp
mov
jbe
test
jmp
clc
adc
fsub
mov
jmp
dec
ffreep
jnp
pop
pop
push
mov
(bad)
(bad)
call
leave
test
imul
sahf
mov
xchg
outs
mov
jbe
cmp
jg
jmp
outs
push
mov
loope
test
add
cmps
cmp
ins
pop
pop
into
(bad)
(bad)
(bad)
(bad)
cmp
sbb
mov
ins
pop
jae
and
mov
fcomp
xor
ret
sbb
ret
sbb
fadd
into
dec
fnsave
inc
adc
ror
mov
sbb
cmp
clc
nop
cmp
in
mov
jmp
fdivr
mov
mov
fild
push
and
jle
(bad)
nop
push
not
call
call
pop
arpl
xchg
add
imul
jmp
mov
imul
(bad)
(bad)
(bad)
mov
stos
sar
inc
fisttp
mov
cs
jno
ins
sub
test
jmp
(bad)
mov
cmp
adc
add
mov
mov
add
push
push
jp
(bad)
push
retw
leave
adc
mov
jb
sbb
(bad)
sbb
std
(bad)
(bad)
(bad)
jmp
std
cli
mov
cli
loopne
mov
xor
push
in
push
sbb
add
(bad)
(bad)
call
repz
cmp
dec
aaa
fwait
out
mov
or
sub
mov
cld
call
fcomp
and
lods
jne
jge
sbb
(bad)
imul
or
cmps
leave
jge
aad
ja
or
mov
loope
in
ss
mov
xlat
out
jle
sar
(bad)
(bad)
mov
icebp
(bad)
aas
cwde
ins
out
jp
popa
(bad)
sbb
jp
rcr
xor
into
(bad)
jmp
pop
mov
aad
jnp
pop
repz
scas
into
dec
sbb
(bad)
dec
push
in
das
int3
jmp
jae
mov
out
pop
and
dec
mov
pushf
and
test
mov
ds
addr16
mov
lods
(bad)
xchg
in
xlat
cmps
or
sub
mov
push
dec
jge
(bad)
(bad)
push
retf
ins
leave
jmp
sahf
cwde
retf
push
push
loop
psubusb
jmp
out
imul
push
(bad)
(bad)
(bad)
call
mul
clc
fcom
xchg
pop
mov
push
stc
xchg
jae
mov
in
(bad)
dec
pushf
std
fwait
(bad)
(bad)
jmp
cmps
popf
std
jmp
pop
nop
cmp
out
xchg
(bad)
call
std
mov
dec
retf
int3
mov
int
out
mov
daa
push
add
mov
(bad)
adc
arpl
hlt
clc
(bad)
(bad)
(bad)
ds
sub
mov
jle
aad
div
inc
ins
(bad)
or
out
and
mov
out
mov
lds
inc
repnz
aaa
mov
sbb
xor
call
pop
loopne
idiv
add
fcmovnb
push
ins
cdq
jno
call
mov
xchg
xor
popf
dec
addr16
adc
repz
sti
int3
push
and
(bad)
(bad)
(bad)
(bad)
cmp
test
and
push
adc
cwde
add
cmovb
sbb
(bad)
(bad)
jmp
push
or
fwait
mov
pop
test
dec
mov
ret
shr
cmp
(bad)
aas
shl
int
ret
(bad)
int
ror
pop
inc
push
sbb
adc
push
xchg
sub
das
nop
mov
pop
cld
cmp
les
pop
mov
das
enter
loopne
jns
mov
and
push
rcl
bound
outs
or
test
add
aas
add
mov
add
lock
call
pushf
cmps
add
scas
or
jae
(bad)
push
sub
(bad)
pop
jle
(bad)
(bad)
(bad)
cmp
cld
(bad)
mov
pushf
gs
mov
dec
leave
in
jge
out
mov
call
lahf
push
xlat
daa
into
test
sar
cmc
iret
and
das
dec
push
icebp
(bad)
dec
cmp
sub
out
icebp
clc
addr16
movs
xlat
addr16
xchg
dec
movs
dec
sti
ret
push
test
pusha
pop
pop
push
adc
jne
mov
jmp
jp
mov
mov
sbb
dec
das
dec
std
std
retf
iret
mov
push
ret
(bad)
mov
outs
repnz
movs
jge
sbb
scas
inc
inc
cmp
in
(bad)
jmp
daa
pushf
aas
pop
in
js
push
jmp
repnz
dec
out
cmps
movs
cmp
push
ja
aam
pop
inc
mov
fdivr
(bad)
inc
mov
xchg
fst
movs
xor
daa
imul
mov
(bad)
(bad)
(bad)
fiadd
inc
arpl
xchg
fisttp
mov
adc
jbe
cmc
mov
imul
jnp
test
pop
jp
ret
sbb
sbb
push
pop
(bad)
(bad)
(bad)
mov
push
fsub
hlt
xor
sbb
add
lds
add
aad
outs
jne
cwde
cmp
(bad)
(bad)
(bad)
jmp
xor
adc
aad
pop
mov
pop
jae
popa
push
popa
sub
mov
pop
out
fwait
and
vmwrite
mov
hlt
jge
cmp
(bad)
(bad)
jmp
call
pop
sbb
lods
mov
rcr
jno
(bad)
arpl
scas
clc
inc
jbe
mov
(bad)
mov
in
fadd
ins
das
(bad)
leave
retf
inc
adc
(bad)
ficomp
lock
jmp
out
in
rol
jg
fcmovu
add
ins
mov
pop
(bad)
mov
test
jo
inc
fld
sbb
jl
jnp
push
xor
(bad)
(bad)
(bad)
call
ficomp
outs
test
pop
fwait
inc
scas
bound
clc
clc
xchg
test
jge
sar
(bad)
not
(bad)
movs
xchg
shl
cdq
jne
or
pop
sahf
dec
clc
(bad)
(bad)
push
mov
pushf
cs
cld
xchg
mov
arpl
rol
inc
outs
xchg
fdivr
hlt
fsubp
div
mov
lahf
inc
std
jle
std
mov
dec
mov
cli
push
cdq
mov
mov
lods
arpl
jbe
test
stc
retf
lahf
(bad)
and
ins
jo
ja
dec
(bad)
(bad)
(bad)
jmp
dec
ins
push
dec
(bad)
dec
xor
xchg
jns
cmp
shr
lds
fcmovnu
cmp
(bad)
(bad)
(bad)
cmp
fld
cmps
das
outs
fist
xor
jl
pop
out
stc
(bad)
rcl
(bad)
dec
mov
pop
jg
retf
push
rcr
sti
jne
xchg
(bad)
(bad)
jmp
lahf
and
or
jmp
pop
sti
push
ss
cmc
out
fcomp
in
push
xchg
cmp
scas
cs
mov
lahf
xor
cmp
mov
repnz
loop
push
(bad)
mov
paddsb
aas
sub
inc
cld
mov
cmp
or
stos
sub
ds
leave
xchg
ror
scas
mov
jmp
out
cmp
into
clc
jns
jl
inc
fsubr
(bad)
jg
jmp
ja
xchg
cdq
lods
fldcw
jno
mov
jle
fild
stos
fiadd
sub
or
fdivr
in
(bad)
(bad)
dec
jmp
sub
outs
xchg
jnp
scas
mov
sti
pop
call
int3
stc
cmp
jmp
pop
fsubr
fmul
enter
fcos
(bad)
(bad)
inc
mov
cdq
mov
jns
jne
adc
or
gs
cmc
std
pop
push
jg
(bad)
(bad)
cmp
shl
std
(bad)
dec
pop
neg
jge
jo
dec
in
sti
sub
(bad)
(bad)
out
clc
mov
and
adc
test
cli
cld
push
cmp
xlat
std
xchg
(bad)
(bad)
(bad)
(bad)
mov
int
fnsave
int3
mul
icebp
and
add
jb
lock
adc
jno
dec
(bad)
(bad)
(bad)
(bad)
call
cmps
into
fnsave
data16
mov
xchg
ud0
pop
imul
add
(bad)
(bad)
inc
push
pop
ret
je
or
add
and
add
dec
add
jno
(bad)
jmp
shl
add
push
fidivr
inc
rol
and
mov
add
sub
jmp
enter
add
or
add
(bad)
(bad)
(bad)
js
ret
mov
test
dec
jnp
add
and
push
fild
jecxz
inc
(bad)
test
pop
movs
push
mov
cmp
pusha
sub
cdq
int3
adc
or
pop
and
jg
mov
pop
mov
adc
sbb
inc
xchg
dec
mov
adc
cmps
and
lahf
add
jb
lods
pop
cmc
(bad)
(bad)
mov
xor
fwait
push
imul
shl
(bad)
(bad)
(bad)
dec
cmp
hlt
jne
jo
sar
inc
out
(bad)
push
mov
mov
mov
repz
mov
dec
ins
jl
stos
les
push
xchg
sub
cdq
jp
cmp
jmp
ds
(bad)
xchg
(bad)
psadbw
jle
daa
scas
mov
xchg
xchg
dec
fisttp
hlt
out
jbe
mov
xchg
mov
xor
movs
mov
cli
pop
mov
pop
iret
call
(bad)
fistp
icebp
fwait
stc
inc
jbe
cs
xor
pop
cli
(bad)
pop
std
(bad)
(bad)
(bad)
jp
out
mov
jae
push
xchg
imul
icebp
into
mov
clc
ja
mov
push
pusha
aas
ds
(bad)
(bad)
mov
dec
leave
pandn
pop
xlat
jns
loopne
ret
fisttp
stc
lods
fnsave
es
push
(bad)
(bad)
mov
adc
es
cli
out
shl
fsubp
out
xchg
scas
aaa
jl
dec
(bad)
dec
(bad)
(bad)
push
jmp
dec
pop
xchg
cmps
sbb
ins
add
call
add
pop
out
cli
(bad)
(bad)
fisub
mov
out
retf
mov
jbe
dec
and
std
add
imul
xchg
in
scas
cld
jg
(bad)
add
(bad)
(bad)
call
pop
aam
pop
dec
inc
jle
mov
in
jp
(bad)
call
adc
int
iret
fdivr
jno
xlat
int3
mov
sar
in
mov
cdq
das
clc
(bad)
(bad)
jnp
out
std
add
cmc
pop
das
mov
cld
movs
sub
sbb
pop
cmps
(bad)
(bad)
(bad)
inc
gs
pop
push
shr
inc
in
cmps
scas
push
out
cmps
pop
loop
cmp
(bad)
(bad)
mov
je
mov
(bad)
sub
stos
call
imul
(bad)
dec
aad
add
mov
sub
xor
sub
into
(bad)
(bad)
(bad)
jg
shr
mov
out
ds
pop
popf
mov
or
xchg
iret
and
cli
aas
loope
(bad)
(bad)
(bad)
cmp
int3
add
sti
mov
test
xchg
inc
sbb
inc
imul
(bad)
(bad)
out
xor
jecxz
mov
add
clc
out
or
stos
gs
(bad)
fbld
inc
aad
xor
outs
cmp
test
jae
xchg
mov
jmp
pop
mov
stc
jo
jmp
mov
(bad)
(bad)
out
cwde
enter
into
pop
out
lahf
(bad)
call
mov
in
push
and
sbb
cmp
(bad)
call
mov
imul
jp
test
out
and
ja
xchg
xchg
jl
jg
popa
clc
cld
aas
(bad)
ds
push
outs
push
sub
in
out
sub
(bad)
jmp
sub
neg
cli
xor
js
sub
push
and
jmp
out
aas
cmp
cmp
push
jbe
jb
sub
(bad)
sti
xchg
popa
scas
xor
test
dec
aaa
cld
(bad)
(bad)
sti
sbb
daa
push
xor
adc
fucomip
xor
jmp
test
popa
call
shr
mov
popa
lods
xor
cli
dec
shl
sub
push
xchg
loopne
pop
(bad)
(bad)
inc
sub
call
mov
mov
scas
push
jnp
in
out
dec
(bad)
(bad)
sub
bound
sub
push
cmps
add
out
cld
add
or
cmp
loopne
das
pushf
mov
mov
ror
pop
clc
pop
or
fwait
cmps
std
mov
mov
and
jg
add
mov
cmp
(bad)
(bad)
aas
sbb
pop
mov
mov
cmp
clc
or
add
fcmovb
aam
or
mov
dec
xor
and
sar
outs
mov
mov
mov
inc
adc
xor
dec
xor
stos
adc
push
jb
xchg
aam
(bad)
icebp
sub
data16
ret
loopne
(bad)
jae
push
lea
or
outs
sub
(bad)
(bad)
(bad)
std
jmp
sbb
into
popf
inc
(bad)
xchg
mov
lods
arpl
mov
in
ss
out
xchg
mov
aaa
xchg
fadd
inc
fld
mov
xchg
inc
jle
cmc
fimul
dec
(bad)
jg
call
enter
(bad)
sub
jmp
nop
lods
xchg
cli
mov
inc
sar
push
out
fist
repnz
pop
or
cld
aaa
retf
stc
hlt
outs
fnsave
hlt
mov
loopne
mov
mov
jne
pop
in
out
mov
scas
in
(bad)
call
pop
std
push
dec
mov
das
sbb
mov
mov
pop
hlt
movs
scas
data16
out
pop
(bad)
in
gs
data16
mov
xor
(bad)
(bad)
(bad)
fcom
sbb
dec
pop
call
fmul
shl
aam
dec
rol
(bad)
std
(bad)
(bad)
jmp
lds
mov
inc
aad
sub
mov
sbb
into
inc
ret
in
add
out
cmp
out
mov
mov
mov
test
std
xchg
cmps
lahf
sbb
aad
(bad)
out
clc
(bad)
aas
pop
inc
mov
mov
arpl
hlt
mov
idiv
xchg
mov
clc
jno
(bad)
(bad)
(bad)
(bad)
sti
ja
cs
popf
xor
pop
les
add
or
jno
out
mov
ds
(bad)
(bad)
call
outs
out
loopne
test
push
(bad)
aas
fst
mov
arpl
out
inc
fwait
(bad)
pop
sbb
sbb
mov
xor
jecxz
outs
movs
out
sub
jg
jmp
push
push
pusha
(bad)
mov
push
addr16
(bad)
(bad)
(bad)
(bad)
ds
mov
xchg
pop
clc
jl
sar
inc
in
pushf
pusha
inc
arpl
daa
dec
pop
add
test
shl
(bad)
(bad)
cld
mov
xchg
mov
ret
hlt
and
xor
cmp
or
(bad)
(bad)
call
fs
jmp
pop
cli
das
test
call
mov
ficomp
daa
clc
inc
jl
and
xchg
stos
pusha
fnstcw
hlt
cmp
push
ds
sbb
or
aam
add
jmp
or
in
test
push
call
cmp
lds
fiadd
cmc
(bad)
(bad)
push
inc
out
push
out
jns
fchs
ds
mov
(bad)
outs
aas
xor
cli
fistp
ins
inc
mov
out
mov
sbb
sti
fsub
jns
data16
aam
mov
cld
and
movs
push
std
pop
cmp
pop
mov
(bad)
jmp
dec
in
cs
out
push
mov
gs
xlat
xor
div
shr
gs
dec
repz
pop
and
mov
push
lock
(bad)
push
jle
dec
adc
pmaddwd
lods
push
sub
out
ret
inc
pop
sub
call
(bad)
jmp
jmp
pop
(bad)
sbb
mov
and
(bad)
(bad)
dec
ss
inc
sub
sahf
xchg
cmp
inc
or
call
adc
(bad)
(bad)
jmp
dec
adc
mov
sub
add
and
push
and
mov
cmp
in
repz
lock
push
mov
pop
jle
pushf
mov
and
dec
aaa
lock
inc
mov
cmp
dec
push
jmp
adc
popf
adc
retf
jecxz
(bad)
popa
and
fmul
xchg
add
(bad)
jmp
pop
mov
iret
test
cmps
jmp
fadd
shl
adc
iret
xchg
xchg
outs
mov
retf
(bad)
(bad)
inc
push
mov
add
and
mov
(bad)
pop
outs
sub
adc
sahf
shr
div
(bad)
(bad)
jmp
arpl
or
in
mov
outs
pusha
imul
movs
xchg
mov
pop
fneni(8087
call
cmps
es
mov
pop
inc
mov
jmp
call
dec
sub
movs
(bad)
int
lods
aas
(bad)
daa
repz
ret
jns
sbb
dec
jmp
xchg
push
pop
xchg
fs
(bad)
(bad)
(bad)
call
pop
jl
mov
lea
aad
mov
push
adc
pop
and
mov
jecxz
push
(bad)
out
clc
call
jae
(bad)
jo
pushf
fidiv
inc
mov
test
add
push
push
mov
and
dec
mov
scas
ficom
loope
retf
inc
add
(bad)
(bad)
jmp
rol
sbb
mov
sub
mov
sbb
fisttp
push
call
push
xor
ss
ror
and
mov
sub
xor
call
jns
add
push
sub
pop
jg
(bad)
mov
ins
cmp
push
xchg
call
rcr
call
xor
sbb
push
ror
rol
call
js
shl
jmp
pop
pop
jns
push
mov
retf
popf
sbb
lds
mov
mov
fs
repnz
mov
(bad)
(bad)
call
sbb
les
lock
fs
cli
xchg
add
pop
xchg
push
and
mov
mov
std
call
adc
pop
shl
xchg
(bad)
(bad)
(bad)
call
xchg
mov
and
jns
mov
jmp
add
adc
jne
fnsave
clc
(bad)
(bad)
push
pop
jns
into
aad
pop
jecxz
cmps
lds
sub
pop
(bad)
push
dec
outs
and
pushf
adc
or
lods
lock
dec
sub
(bad)
jmp
(bad)
not
lods
dec
xchg
stos
movs
aad
(bad)
stos
inc
dec
out
in
dec
xchg
jmp
cmp
jg
fmul
in
sbb
cmp
jnp
(bad)
pop
cld
jmp
jb
pusha
fsubr
es
es
ret
frstor
pop
pushf
cdq
sub
test
mov
push
or
sbb
inc
sub
bound
adc
jle
jbe
jbe
(bad)
or
inc
data16
(bad)
jg
call
scas
sahf
xchg
mov
push
(bad)
(bad)
das
stc
idiv
mov
jb
fwait
push
in
shl
xchg
or
in
push
test
xor
add
(bad)
mov
shr
mov
mov
rol
and
sub
or
(bad)
call
aam
xlat
lds
dec
lds
cmps
xchg
add
sub
add
(bad)
fistp
dec
std
fwait
into
cmovo
xchg
inc
(bad)
ins
pop
call
push
addr16
(bad)
idiv
jmp
xchg
fsubrp
add
adc
jecxz
xchg
pusha
mov
xor
ret
sub
sbb
jge
pop
aad
sub
add
out
or
dec
adc
mov
or
retf
(bad)
(bad)
mov
dec
add
inc
dec
jnp
fmul
test
(bad)
ds
xor
inc
(bad)
inc
inc
aam
sbb
mov
adc
imul
pop
and
cdq
imul
fisttp
pushfw
ins
sbb
push
push
push
or
push
push
(bad)
(bad)
fild
(bad)
ja
sti
xor
lahf
outs
sbb
loop
test
xor
(bad)
jmp
nop
ins
scas
pop
dec
and
xchg
(bad)
repz
add
arpl
enter
inc
mov
or
add
fwait
pop
push
cld
(bad)
(bad)
call
dec
not
jge
out
movd
loop
push
arpl
and
repnz
add
cli
and
stos
ja
inc
add
(bad)
mov
retf
stos
int3
(bad)
call
or
inc
out
cli
sub
inc
jl
movs
pop
sub
xor
call
(bad)
push
xchg
cmps
(bad)
(bad)
jmp
lods
mov
dec
push
or
inc
sbb
lea
aad
ins
and
jbe
and
dec
jg
outs
mov
call
dec
pop
mov
call
scas
aad
adc
lea
repz
xor
add
std
inc
cmp
sti
(bad)
(bad)
dec
push
in
out
adc
pop
push
pop
mov
adc
dec
and
adc
in
cmp
addr16
jg
inc
ins
push
sar
mov
aaa
mov
add
adc
nop
mov
not
(bad)
(bad)
jmp
cld
push
sub
fst
scas
aam
add
mov
xchg
inc
scas
jb
cmp
call
repnz
cli
dec
adc
mov
rcl
retf
and
pushf
ret
les
mov
xchg
jns
cmp
push
dec
call
pop
xor
popa
inc
les
mov
clc
js
mov
add
sub
xor
pop
add
je
loope
or
in
mov
daa
xor
sbb
xchg
mov
sub
or
dec
sbb
ja
arpl
fs
jmp
xchg
in
cs
fadd
mov
and
and
dec
or
ja
aam
es
(bad)
into
xchg
addr16
push
(bad)
(bad)
inc
lods
xchg
jo
add
movs
fisttp
jl
int
inc
scas
xchg
retf
push
out
nop
push
nop
mov
jno
mov
mov
and
sbb
shl
jecxz
cmp
(bad)
(bad)
(bad)
fld
pusha
push
nop
xlat
and
add
in
jne
(bad)
loopne
xchg
sbb
int3
jg
(bad)
inc
bound
inc
ins
addr16
das
and
cdq
call
add
jg
(bad)
call
in
add
clc
cs
test
retf
jno
and
mov
or
pop
adc
mov
or
(bad)
jmp
mov
or
dec
scas
gs
and
dec
mov
push
push
std
and
add
(bad)
jmp
or
ja
jl
xchg
jl
aaa
aas
or
(bad)
test
repnz
jecxz
sub
call
xchg
sub
pop
cmovp
mov
and
in
hlt
push
shl
add
jge
(bad)
mov
push
cs
(bad)
(bad)
(bad)
jg
jmp
push
retf
in
sbb
inc
and
loope
out
ret
icebp
(bad)
(bad)
jg
into
ss
int
leave
sub
sub
add
dec
add
in
push
(bad)
dec
jbe
fst
and
push
loop
pop
test
jnp
sbb
sbb
push
fisttp
(bad)
call
pusha
movs
push
xlat
out
adc
jecxz
jno
hlt
inc
xchg
sahf
and
(bad)
(bad)
(bad)
jle
adc
and
xchg
fmul
mov
lahf
movs
adc
inc
dec
mov
(bad)
(bad)
dec
cmp
pop
pop
pop
cmp
inc
adc
test
cmp
push
mov
inc
mov
ret
ret
sub
(bad)
fistp
and
mov
dec
pop
jmp
jo
arpl
hlt
mov
popa
(bad)
(bad)
(bad)
push
sbb
in
adc
jmp
dec
sbb
mov
cmp
repz
cwde
cli
les
clc
retf
push
adc
aaa
(bad)
(bad)
(bad)
inc
or
push
leave
sti
sbb
sbb
jae
movs
icebp
outs
lea
mov
mov
(bad)
(bad)
jmp
(bad)
push
cli
push
stc
bound
adc
(bad)
mov
scas
dec
shr
or
(bad)
jmp
push
aas
je
xlat
hlt
xlat
sub
sbb
movups
or
call
outs
and
push
sub
outs
adc
jmp
fist
ret
sub
adc
out
xor
(bad)
(bad)
inc
retf
mov
pop
mov
adc
dec
lea
mov
mov
pushf
test
loop
mov
cwde
xchg
inc
pop
std
pop
(bad)
(bad)
jg
loop
test
or
sub
ins
dec
popa
sbb
xchg
mov
hlt
sbb
mov
mov
(bad)
(bad)
mov
push
dec
sbb
ins
or
xchg
push
fstp
outs
dec
sub
es
fnstsw
call
std
jnp
mov
(bad)
aaa
adc
lods
pop
stos
idiv
mov
add
ret
(bad)
cli
add
rcl
clc
(bad)
inc
test
cmp
add
das
push
icebp
(bad)
(bad)
jmp
sahf
pop
stc
int3
pop
or
push
js
adc
and
(bad)
(bad)
(bad)
call
ror
scas
push
xor
lock
jecxz
lods
add
nop
or
xchg
nop
mov
mov
(bad)
mov
xor
popa
and
add
sbb
sbb
jmp
retf
jne
fcomp
fmul
shl
xchg
and
pop
lock
(bad)
(bad)
stc
or
lds
(bad)
mov
sub
xchg
pop
sbb
push
push
mov
add
pop
enter
inc
bound
add
inc
dec
addr16
and
dec
sbb
in
inc
push
loopne
dec
xchg
cmp
jns
(bad)
(bad)
call
icebp
jns
cmps
and
push
aam
popa
ficom
push
iret
rcl
cwde
jp
add
call
dec
cmp
push
scas
sub
adc
daa
push
(bad)
(bad)
(bad)
call
cmp
or
inc
test
add
mov
xchg
je
adc
cmp
or
mov
out
getsec
mov
retf
xchg
dec
ins
mov
call
pop
sub
dec
mov
jns
xor
push
xchg
dec
jo
sbb
mov
arpl
(bad)
call
push
inc
ret
mov
mov
mov
push
js
imul
vpsadbw
call
mov
(bad)
dec
xchg
cld
hlt
mov
mov
(bad)
mov
arpl
scas
mov
inc
jp
sub
and
(bad)
(bad)
push
hlt
and
add
(bad)
mov
arpl
imul
loopne
add
pop
cld
mov
aas
(bad)
(bad)
(bad)
push
icebp
mov
ja
mov
and
out
or
mov
pop
iret
pop
ins
push
pop
ud0
(bad)
in
jbe
adc
ja
jl
inc
fnstenv
lock
pop
dec
test
push
clc
xchg
lock
mov
jmp
cmp
retf
xor
pop
sub
ins
or
inc
rol
xchg
dec
dec
dec
xor
add
xchg
sub
(bad)
sti
jmp
ins
fcom
xor
ss
enter
xor
std
push
xor
mov
into
push
shl
push
dec
inc
addr16
dec
aam
or
(bad)
jmp
sbb
push
adc
stos
stc
idiv
jo
sahf
out
shr
mov
mov
shr
pusha
or
retf
pusha
std
lea
inc
dec
push
mov
adc
iret
fiadd
das
sbb
test
pushf
or
jmp
xor
inc
es
cmp
mov
call
repz
mov
jb
mov
pop
popa
rcr
lods
inc
into
mov
jg
and
jae
dec
cs
dec
add
ins
push
mov
xchg
sub
outs
cli
inc
pop
dec
xor
(bad)
(bad)
sbb
add
(bad)
out
jo
sti
fsubr
mov
test
retf
sub
in
movs
loopne
jg
popf
retf
das
(bad)
pop
adc
or
pop
enter
add
xlat
add
call
repnz
mov
dec
nop
mov
dec
outs
sar
jae
dec
jecxz
sbb
(bad)
js
das
push
cld
sub
inc
aam
(bad)
(bad)
(bad)
mov
push
xlat
lock
dec
adc
dec
add
ret
sub
pop
mov
fnsave
movs
(bad)
(bad)
out
clc
(bad)
out
std
test
mov
dec
mov
pop
fild
popf
mov
(bad)
inc
cmp
mov
sub
enter
cwde
push
adc
ret
pop
sub
and
mov
and
mov
out
ret
pusha
in
jmp
push
jnp
daa
xor
outs
xchg
gs
cs
or
mov
adc
call
sbb
push
out
scas
cmp
or
push
out
lahf
inc
cmps
mov
dec
les
add
imul
push
add
call
mov
scas
repz
scas
xchg
jg
sub
mov
fstp
and
add
push
test
mov
inc
(bad)
(bad)
(bad)
inc
and
and
pop
jmp
sub
ja
mov
push
lahf
dec
daa
push
fstp
push
cmp
or
xchg
inc
hlt
push
adc
inc
add
js
and
mov
int
loopne
jmp
mov
lea
mov
pushf
retf
icebp
lods
aad
sti
or
icebp
pop
into
jno
dec
out
xor
cmp
jg
xchg
jecxz
retf
aad
cmp
retf
cmp
ret
(bad)
(bad)
call
out
dec
mov
fidivr
jecxz
xor
test
push
add
cmps
fcomip
mov
sub
rol
xchg
pop
jb
dec
xor
lock
pop
fmul
xlat
add
arpl
xchg
leave
out
jns
pop
cmc
jmp
cdq
movs
pop
sbb
fwait
cmps
(bad)
in
(bad)
xor
sbb
xor
mov
cs
clc
cmp
cmp
out
jmp
sub
jb
es
push
in
in
mov
retf
mov
sbb
push
mov
inc
mov
push
mov
sbb
in
mov
and
mov
ss
aaa
mov
icebp
(bad)
lock
jae
test
push
xor
iret
dec
fimul
in
mov
push
(bad)
(bad)
cmp
jp
ret
das
test
add
and
into
icebp
test
shr
and
inc
jbe
jmp
jae
mov
fs
test
loop
not
(bad)
(bad)
(bad)
inc
adc
mov
inc
sbb
dec
sub
scas
imul
ins
pop
fadd
(bad)
(bad)
(bad)
(bad)
in
cs
cmp
pop
fcomp
ja
cs
inc
pop
adc
add
cmp
fsub
push
mov
push
call
leave
jp
cmps
sbb
inc
or
iret
add
shl
add
fcomip
jecxz
idiv
(bad)
(bad)
jmp
iret
iret
xchg
mov
mov
mov
sar
std
je
jg
fwait
and
movs
and
std
jmp
xchg
jmp
jl
fmul
in
xchg
mov
inc
add
movs
out
sar
push
mov
add
cmps
gs
mov
dec
imul
dec
xchg
push
and
lock
jg
dec
xor
bound
adc
ret
or
push
jmp
outs
(bad)
(bad)
dec
and
outs
mov
pop
pop
sbb
or
cmp
stc
aaa
add
call
call
inc
mov
sub
sbb
jg
sbb
push
cmp
jb
(bad)
(bad)
(bad)
inc
lahf
retf
add
in
xchg
or
xchg
pop
shr
or
arpl
dec
mov
(bad)
in
push
jo
ds
push
jmp
and
ror
mov
dec
add
in
(bad)
(bad)
(bad)
jmp
or
enter
sub
mov
xchg
adc
lock
jge
or
dec
sub
ret
add
pop
mov
pop
and
jmp
mov
and
sub
std
inc
retf
lock
not
pop
push
xor
and
sub
sub
stos
movs
mov
xchg
dec
jae
xor
cmps
imul
test
out
add
movs
xlat
xchg
loope
aad
jns
xchg
cmp
fild
xchg
mov
rol
cmp
cmc
retf
(bad)
xor
dec
retf
sbb
aad
scas
push
push
mov
ja
int
ja
or
(bad)
jmp
lods
pop
inc
fs
ss
xchg
fsubr
ja
shl
dec
xchg
push
adc
mov
or
push
cld
out
cli
push
adc
cmps
and
push
(bad)
out
js
sbb
(bad)
(bad)
inc
add
and
stc
(bad)
mov
out
das
mov
inc
cmps
jno
(bad)
jmp
fsubr
xchg
mov
bound
movs
adc
clc
jnp
sahf
fisub
xchg
xchg
icebp
inc
cdq
sbb
pop
test
(bad)
(bad)
(bad)
jmp
out
test
sub
cld
or
scas
and
lods
xchg
and
lock
sub
cmp
jns
dec
jge
mov
in
aad
dec
inc
and
pusha
cmp
repnz
sbb
stos
dec
les
(bad)
(bad)
(bad)
inc
xchg
stos
xchg
test
dec
mov
hlt
pusha
pop
stos
jecxz
cs
fadd
adc
cmp
push
and
cld
mov
adc
xor
outs
mov
add
push
mov
push
pop
adc
(bad)
(bad)
(bad)
dec
push
cmp
out
jmp
ror
xchg
in
push
pop
jbe
in
sub
loope
dec
mov
xor
or
push
jae
loopne
rcl
scas
mov
jae
idiv
out
clc
push
sbb
ret
fsub
loope
stos
push
fld
and
xchg
jno
push
das
mov
push
(bad)
mov
xchg
mov
lds
das
mov
sahf
or
cmps
pop
cmp
jmp
inc
mov
push
jl
mov
cld
inc
rol
test
cmc
(bad)
(bad)
call
retf
dec
adc
loop
push
aam
hlt
push
xchg
std
push
add
sub
js
mov
fistp
call
daa
out
nop
xchg
stos
xchg
add
inc
fst
cwde
fild
adc
fidivr
or
ret
(bad)
(bad)
(bad)
jmp
xchg
push
xchg
in
sbb
push
fldenv
ins
lods
xchg
xor
jo
jnp
arpl
cmps
xchg
(bad)
jecxz
cmc
dec
cmps
or
push
mov
mov
(bad)
std
or
sbb
(bad)
(bad)
jmp
fadd
call
and
mov
loope
aad
adc
test
aas
mov
aas
std
(bad)
(bad)
dec
and
and
mov
adc
jne
pop
ret
mov
into
jo
dec
mov
pop
idiv
jmp
mov
dec
pushf
xchg
je
sub
fnstcw
pop
sub
pop
lock
mov
mov
mov
jns
out
push
ret
xor
fdiv
lods
mov
xchg
or
or
jmp
mov
inc
jnp
add
(bad)
outs
pop
mov
call
aaa
cld
ret
shl
pushf
fild
sub
(bad)
rcr
pop
fadd
mov
(bad)
(bad)
jmp
sub
pop
push
loop
lea
cmp
or
icebp
adc
(bad)
jg
mov
cmp
test
pop
xlat
inc
je
pop
lods
mov
(bad)
(bad)
dec
push
jne
inc
xchg
mov
(bad)
pop
pusha
xor
inc
xor
add
(bad)
(bad)
(bad)
jmp
and
and
cs
fnstsw
mov
outs
pop
lock
xchg
js
jmp
lods
mov
jge
leave
fdiv
in
js
push
pop
loopne
(bad)
sti
inc
cs
mov
loop
(bad)
retf
cs
pop
mov
int
(bad)
(bad)
jmp
call
popa
jae
fstp
fstp
mov
sti
(bad)
mov
sbb
cmp
dec
jnp
add
(bad)
sub
jno
add
test
(bad)
(bad)
(bad)
fisubr
or
inc
xchg
les
xor
popf
test
xchg
add
dec
mov
leave
inc
cld
dec
sbb
xchg
sub
dec
ss
fdivr
cmps
pop
cmp
xor
mov
add
and
push
fwait
dec
mov
cmps
nop
sub
das
cli
jmp
jmp
nop
xor
cmp
ret
sahf
mov
in
test
outs
out
loopne
sahf
shl
scas
out
inc
cmc
cwde
(bad)
(bad)
(bad)
jmp
mov
xor
fdivr
inc
sub
sbb
or
jno
adc
xor
(bad)
(bad)
(bad)
cli
sub
sbb
sub
pop
dec
sub
ficom
cmp
add
and
aas
jno
add
sbb
nop
loope
cmp
fs
adc
pop
push
cmp
ds
imul
cmp
inc
or
jl
mov
gs
xchg
dec
mov
pop
or
(bad)
call
mov
mov
mov
les
pop
popf
sub
jno
sbb
push
or
adc
(bad)
(bad)
(bad)
mov
xlat
scas
cmp
add
mov
cld
mov
pop
out
push
cld
(bad)
push
inc
mov
sahf
gs
loope
jo
retf
pop
cld
xchg
mov
fdivrp
(bad)
push
push
mov
and
fidivr
daa
(bad)
sar
sub
(bad)
inc
pop
cmp
iret
sbb
and
or
ins
jmp
lods
dec
repz
pop
inc
pushf
movs
lods
xor
call
jp
in
ins
add
push
out
inc
loope
ins
and
pop
test
lea
ret
(bad)
inc
cld
rcr
ret
ins
xor
mov
into
sbb
xchg
pusha
shl
dec
push
mov
mov
imul
sbb
or
repz
imul
pusha
in
sbb
(bad)
(bad)
dec
out
outs
mov
mov
dec
sub
mov
add
addr16
(bad)
(bad)
inc
pop
ret
lds
push
les
je
push
or
pop
cmc
rcr
adc
ins
adc
or
cmp
retf
aas
jo
inc
stos
sar
xchg
sub
adc
xor
dec
cmp
cs
cli
push
adc
movs
movs
mov
repnz
(bad)
(bad)
(bad)
call
pop
add
dec
aaa
mov
outs
jp
ja
dec
mov
mov
jne
pop
jmp
lds
(bad)
(bad)
call
sar
fisttp
pop
cmp
mov
enter
or
mov
xchg
jmp
xor
mov
mov
(bad)
(bad)
call
xchg
repnz
jo
das
pop
pop
je
pop
or
hlt
xchg
mov
mov
aad
movs
or
(bad)
(bad)
inc
and
outs
daa
arpl
mov
iret
addr16
jae
loopne
(bad)
(bad)
jg
fs
sub
scas
test
push
or
push
pop
fwait
rcr
xor
inc
into
xchg
inc
or
ja
cli
mov
jmp
es
mov
inc
sar
das
sar
add
test
test
fsub
jmp
add
cmp
xchg
mov
cmovs
fistp
es
push
inc
push
mov
fsubr
repnz
jne
js
xor
mov
(bad)
(bad)
dec
cmps
popf
xlat
mov
shl
add
fmul
cmp
cmc
inc
mov
pop
aam
jp
push
iret
(bad)
es
mov
and
(bad)
call
arpl
xrelease
sbb
sub
mov
retf
xchg
mov
(bad)
fcomip
and
or
add
cmp
icebp
cmps
dec
and
add
mov
cmp
(bad)
(bad)
mov
outs
xchg
cli
push
(bad)
jb
in
pop
xchg
sahf
pop
or
enter
(bad)
mov
cli
cmp
pop
aam
loop
add
mov
mov
test
xchg
retf
(bad)
(bad)
(bad)
(bad)
ss
push
add
push
sar
mov
iret
inc
popa
mov
in
cmps
or
(bad)
mov
gs
xchg
inc
ret
rcr
sbb
loopne
mov
clc
or
push
jecxz
in
jb
aam
mov
mov
scas
jmp
in
shl
sbb
enter
mov
mov
(bad)
dec
lods
sbb
sbb
mov
add
xchg
and
mov
jmp
cs
ror
call
call
fnstenv
mov
sub
data16
dec
sub
add
mov
(bad)
in
outs
sub
shr
push
push
cwde
mov
test
sub
aad
sub
nop
sahf
xor
call
in
dec
call
es
mov
fst
inc
cld
xchg
sbb
(bad)
(bad)
inc
add
pusha
mov
popf
mov
xor
mov
(bad)
std
dec
fbstp
pusha
add
test
arpl
inc
push
dec
xor
mov
loop
push
ins
mov
inc
stc
push
sbb
es
and
ins
mov
inc
not
add
add
hlt
mov
inc
push
fistp
sbb
mov
mov
or
(bad)
call
push
lea
lds
dec
icebp
sbb
pop
mov
and
pusha
dec
cmp
(bad)
call
(bad)
dec
dec
jmp
push
fwait
and
mov
in
aaa
cmp
and
(bad)
dec
fst
imul
mov
push
aad
ja
cmp
jne
push
pusha
mov
int3
call
pop
push
imul
mov
pop
jbe
xlat
fs
jns
fidivr
aam
mov
pusha
add
pop
loopne
push
jno
add
mov
(bad)
jp
arpl
icebp
xchg
inc
(bad)
(bad)
(bad)
dec
and
aaa
cmp
xchg
in
xchg
and
xchg
or
(bad)
(bad)
jmp
jmp
je
push
retf
(bad)
fsub
cmp
sub
aas
fld
add
cmp
(bad)
(bad)
(bad)
call
mov
mov
xchg
dec
hlt
test
push
sbb
jg
movs
xchg
nop
(bad)
retf
inc
add
fdivrp
inc
pop
aam
xchg
repnz
arpl
jmp
inc
inc
inc
adc
sbb
(bad)
(bad)
(bad)
inc
push
cmp
pop
pop
adc
inc
cld
fisttp
gs
lods
add
or
idiv
(bad)
call
mov
rol
cmp
pushf
call
jno
or
xchg
jne
mov
push
mov
rcl
add
lahf
sbb
or
mov
rcl
xor
jmp
xor
mov
mov
in
and
mov
sub
aaa
call
fnstsw
push
sub
lock
(bad)
mov
jp
(bad)
(bad)
call
mov
xchg
movs
mov
inc
xchg
xchg
mov
cmp
push
(bad)
(bad)
(bad)
jmp
sahf
fs
dec
sbb
jb
or
inc
out
xchg
pop
sbb
fadd
mov
and
mov
daa
sbb
fsub
mov
add
fadd
icebp
jbe
daa
in
(bad)
(bad)
(bad)
push
push
or
repnz
sbb
and
stos
or
mov
(bad)
fisub
(bad)
(bad)
mov
shl
jmp
dec
dec
xor
ret
ins
jecxz
push
jns
sbb
push
loopne
push
or
mov
jae
movs
and
mov
mov
or
call
jmp
or
xchg
das
adc
dec
adc
ins
mov
xor
fwait
push
iret
sahf
inc
mov
pushf
mov
pop
pop
je
pop
adc
bound
(bad)
(bad)
(bad)
inc
mov
jl
xchg
pusha
dec
mov
pop
pop
push
push
mov
or
dec
(bad)
(bad)
(bad)
jg
jb
pop
fiadd
outs
cmp
add
(bad)
pop
jo
pop
loop
jb
(bad)
(bad)
dec
gs
out
inc
dec
imul
xchg
retf
jb
cmp
mov
(bad)
retf
addr16
fwait
(bad)
(bad)
(bad)
call
loope
sbb
pop
int
sbb
sti
push
cmps
mov
inc
cmc
add
add
(bad)
inc
test
adc
(bad)
imul
iret
pop
jle
imul
loopne
mov
loopne
jno
int3
ss
cmp
(bad)
(bad)
inc
adc
ds
std
mov
pop
cmc
fild
cmp
out
inc
popf
out
(bad)
(bad)
mov
push
ss
add
in
push
clc
and
adc
add
inc
icebp
hlt
js
jmp
cli
adc
cdq
xlat
mov
cmp
xchg
mov
(bad)
(bad)
push
mov
ins
inc
cmp
jae
adc
scas
hlt
(bad)
push
movs
or
(bad)
push
fisttp
imul
push
and
aas
outs
jae
fimul
push
mov
and
dec
iret
jo
xchg
push
out
das
sub
cdq
dec
xor
and
(bad)
(bad)
(bad)
call
cs
movs
sub
dec
pop
xlat
lock
sub
sub
les
(bad)
(bad)
inc
lock
add
cmp
adc
and
or
bswap
adc
jmp
xor
popf
mov
mov
push
adc
repz
(bad)
(bad)
call
pop
shl
or
das
jge
ds
pop
or
sbb
popa
mov
(bad)
(bad)
jmp
sub
sbb
cmc
inc
pmaxub
sbb
jmp
movs
cmp
in
mov
(bad)
(bad)
(bad)
jmp
das
add
jb
xor
mov
cmp
dec
fmul
(bad)
sbb
and
xlat
cmp
sub
pop
cmp
mov
cmc
inc
test
inc
sub
(bad)
(bad)
(bad)
inc
lods
or
add
mov
pop
and
aad
scas
mov
xchg
sub
clc
(bad)
(bad)
(bad)
fimul
les
inc
inc
mov
rcl
sbb
jmp
loopne
loopne
sbb
repnz
jge
dec
sar
or
sbb
scas
or
out
cs
(bad)
push
cmp
xchg
into
fidiv
out
inc
repnz
mov
cmp
or
test
in
cmps
(bad)
cmp
(bad)
mov
cmp
jg
mov
xlat
ins
pushf
push
cmp
(bad)
jg
sbb
mov
lds
nop
lock
inc
es
add
sub
xchg
(bad)
mov
ja
sub
stos
and
int
(bad)
dec
or
jp
push
loopne
push
jb
sub
mov
inc
sbb
test
idiv
outs
add
lea
sbb
adc
xor
add
mov
inc
imul
pop
in
jno
shl
dec
(bad)
cmp
cmp
(bad)
cmps
(bad)
addr16
xchg
push
loope
sbb
stc
aam
repz
lahf
xchg
(bad)
(bad)
call
cmp
mov
jp
sub
jbe
js
xor
loope
rcl
out
cmp
mov
lods
xor
repz
adc
call
(bad)
call
pop
clc
push
xor
ins
mov
iret
xchg
dec
cmp
stos
push
(bad)
jg
call
cmp
stos
xchg
movs
sar
lods
ret
cdq
addr16
and
sub
enter
(bad)
(bad)
inc
dec
or
inc
add
push
ret
pusha
push
pop
pop
not
aad
cwde
sbb
(bad)
(bad)
in
push
sbb
in
pop
cwde
adc
mov
push
scas
jnp
adc
xlat
out
loopne
js
mov
(bad)
(bad)
call
je
pop
or
adc
sahf
mov
test
add
dec
or
and
cmp
rcr
fdiv
fstp
mov
sub
cld
out
jae
out
dec
data16
icebp
jae
retf
(bad)
lahf
mov
mov
fwait
sub
cmp
pusha
push
loopne
rcl
(bad)
rcl
(bad)
(bad)
call
push
xchg
fstp
ret
xchg
pop
add
test
fiadd
dec
mov
xchg
adc
fcom
test
mov
test
cs
ds
jmp
mov
test
and
ins
(bad)
jo
loopne
or
dec
push
into
push
push
dec
push
in
(bad)
(bad)
call
or
push
dec
ss
loop
shl
inc
push
and
mov
in
jnp
(bad)
(bad)
inc
sub
jecxz
movs
enter
cld
rol
stc
cmp
inc
mov
(bad)
fild
jmp
cs
mov
inc
cwde
or
adc
(bad)
(bad)
call
mov
pop
(bad)
adc
cmp
jl
nop
shl
les
retf
pop
xchg
mov
(bad)
inc
stos
mov
pusha
jp
mov
mov
pop
cmps
clc
(bad)
(bad)
dec
out
push
rcr
pop
dec
jge
jl
test
cwde
push
jg
mov
fmul
arpl
push
in
je
sub
fwait
aaa
repnz
repnz
(bad)
(bad)
(bad)
jmp
push
and
push
cmp
xchg
add
mov
add
jmp
dec
in
int
add
(bad)
(bad)
(bad)
(bad)
mov
cmp
adc
inc
xlat
sub
push
aam
mov
int3
pmulhw
xchg
int
and
pusha
icebp
(bad)
(bad)
(bad)
mov
mov
fcom
mov
adc
stos
out
popa
sub
fwait
(bad)
(bad)
fistp
div
jle
js
scas
push
mov
and
rol
sbb
adc
inc
sar
(bad)
stc
mov
xlat
push
push
movs
xchg
hlt
fstp
adc
(bad)
(bad)
(bad)
jg
inc
xor
ret
xor
in
sbb
mov
xchg
mov
mov
mov
push
(bad)
(bad)
(bad)
inc
jp
cmp
ror
jnp
rcl
mov
stos
imul
inc
(bad)
(bad)
(bad)
jmp
in
xor
mov
add
jmp
test
and
in
mov
xor
repz
inc
jmp
gs
fcomp
imul
adc
dec
(bad)
(bad)
jmp
and
or
adc
push
mov
and
dec
repz
cmp
adc
out
cmp
(bad)
inc
jecxz
neg
and
test
inc
jp
cli
jnp
test
addr16
cmc
jmp
ret
push
nop
mov
fild
jp
cmp
into
mov
adc
into
xchg
dec
mov
pop
lock
push
test
push
push
arpl
rol
iret
cmp
mov
aaa
or
sub
inc
and
mov
scas
sahf
push
(bad)
jb
loop
sub
jbe
push
nop
pop
arpl
or
pop
inc
xor
cmp
(bad)
jmp
push
and
inc
add
mov
(bad)
cli
push
push
xor
daa
shl
xor
inc
hlt
jmp
jo
test
xor
push
std
mov
jmp
push
jle
clc
daa
mov
and
mov
(bad)
inc
push
adc
fstp
mov
mov
add
jmp
ins
xchg
imul
ss
(bad)
(bad)
(bad)
push
xor
sti
inc
out
test
pop
push
mov
loop
dec
sbb
sahf
push
mov
mov
pushf
cmp
jo
adc
or
inc
outs
add
or
sbb
stc
(bad)
(bad)
(bad)
inc
repnz
xchg
inc
leave
out
inc
mov
inc
and
mov
pop
push
pop
jge
dec
(bad)
jmp
arpl
jecxz
icebp
repnz
and
les
pop
cli
mov
icebp
inc
mov
mov
fisubr
sbb
(bad)
aaa
das
(bad)
(bad)
mov
mov
fwait
inc
ins
fwait
xchg
xrelease
mov
xchg
leave
xchg
xor
jmp
inc
cdq
adc
push
test
pop
js
cs
(bad)
mov
fadd
(bad)
(bad)
fcomip
js
add
sbb
(bad)
xchg
mov
fimul
cmp
sbb
(bad)
fbstp
sbb
iret
jl
pop
mov
pop
data16
mov
call
pop
xchg
sbb
mov
xor
popa
pop
push
(bad)
(bad)
jg
inc
push
cmc
shl
cmp
shr
pop
(bad)
(bad)
inc
stos
popa
lods
into
icebp
out
rcr
in
test
jecxz
and
(bad)
(bad)
inc
pushf
sub
cld
loop
sbb
sub
lahf
inc
mov
push
hlt
sub
and
cli
(bad)
(bad)
jmp
aas
or
sub
mov
int3
adc
jb
xchg
pusha
leave
shr
adc
(bad)
out
out
dec
mov
or
cmc
aaa
push
xchg
jle
mov
sbb
and
pop
out
inc
(bad)
mov
repnz
fcmovnb
popf
sbb
loopne
mov
(bad)
xchg
xchg
push
call
stos
outs
mov
cmc
push
sbb
sti
imul
(bad)
(bad)
(bad)
inc
aaa
add
(bad)
(bad)
stos
inc
cmc
pop
pushf
mul
and
retf
lods
sub
(bad)
mov
mov
imul
push
jp
lods
test
push
es
mov
adc
mov
xchg
loop
push
dec
test
dec
mov
out
pop
sub
lods
sbb
sub
stos
sar
ret
inc
push
or
sbb
scas
mov
(bad)
(bad)
call
call
fstp
pop
in
jbe
add
popa
push
or
jg
sahf
nop
outs
sbb
xchg
call
and
cmp
xchg
fimul
push
cmp
mov
ret
jecxz
sahf
popf
inc
mov
sbb
(bad)
(bad)
push
push
stos
movnti
push
ds
fcomi
(bad)
out
loop
imul
cdq
(bad)
(bad)
(bad)
out
cs
je
mov
mov
jp
inc
fcmovnb
inc
push
pop
std
jecxz
push
pop
push
inc
sbb
stos
or
xor
dec
or
shl
(bad)
adc
push
adc
ja
mov
mov
push
xor
sbb
cli
pusha
imul
dec
push
inc
or
(bad)
(bad)
call
pop
addr16
mov
add
fs
idiv
ds
out
sti
sti
and
in
in
popf
(bad)
(bad)
(bad)
(bad)
sti
jb
jns
sahf
jae
mov
(bad)
out
push
mov
jecxz
in
je
imul
shl
pop
hlt
(bad)
jmp
ss
test
data16
jns
out
inc
fnstenv
fst
xchg
(bad)
(bad)
jg
jmp
ror
cld
ror
jg
aam
mov
(bad)
xchg
daa
aad
(bad)
(bad)
(bad)
call
sub
arpl
inc
dec
test
xor
fnsave
lea
test
cmps
mov
(bad)
(bad)
(bad)
jmp
mov
pusha
les
and
sbb
mov
fidivr
enter
fadd
mov
add
or
fistp
(bad)
(bad)
(bad)
jmp
cld
fcmovu
cmp
mov
mov
mov
gs
leavew
pop
repnz
push
sbb
adc
dec
mov
leave
scas
pop
cld
sbb
(bad)
(bad)
call
or
or
fwait
retf
push
ins
cmps
sbb
push
rol
add
pop
sub
dec
daa
and
push
(bad)
iret
test
test
or
(bad)
(bad)
inc
add
jg
sbb
daa
fst
push
aad
mov
mul
inc
(bad)
(bad)
dec
(bad)
push
cs
stos
xchg
mov
mov
inc
ja
mov
inc
data16
fwait
sub
push
jle
add
and
imul
std
(bad)
push
cld
push
les
mov
xor
mov
mov
cmp
push
mov
xchg
mov
or
dec
jl
or
pop
xor
(bad)
(bad)
call
scas
adc
ja
xchg
jo
dec
dec
xchg
ret
dec
and
in
xchg
call
pop
in
je
dec
pop
cld
(bad)
inc
(bad)
leave
test
fcom
retf
xor
fisttp
adc
pinsrw
(bad)
(bad)
dec
cmp
shl
jnp
into
into
loope
fdiv
sar
mov
push
add
jmp
cs
pushf
inc
fnstcw
pop
aam
das
popa
xchg
(bad)
(bad)
cmp
imul
xor
sub
add
fist
push
(bad)
jmp
shl
sub
dec
pop
or
dec
loopne
sub
mov
(bad)
(bad)
(bad)
jmp
popf
sub
xor
aaa
mov
aam
adc
push
mov
int3
(bad)
dec
clc
loop
retf
(bad)
lods
mov
aas
in
(bad)
(bad)
(bad)
call
xchg
test
push
retf
push
adc
mov
mov
or
sbb
(bad)
(bad)
jg
rcl
inc
sbb
(bad)
or
mov
sub
xchg
aad
clc
icebp
in
retf
icebp
(bad)
(bad)
call
push
(bad)
rcr
test
lods
cmp
mov
add
push
dec
pop
hlt
dec
mov
add
idiv
movs
cli
jnp
gs
or
aam
leave
icebp
jg
int3
fstp
rcr
xor
loop
mov
sub
(bad)
jb
repz
out
cli
cmp
das
cli
mov
outs
mov
stos
and
pop
cmc
jl
lds
inc
push
xchg
das
xor
jns
dec
(bad)
mov
not
scas
push
retf
movs
mov
inc
clc
clc
in
rcr
dec
cmp
pop
inc
sar
jmp
jg
jl
test
cmovno
fild
jg
or
push
mov
pop
pop
aas
nop
inc
xchg
sub
jmp
clc
fbstp
movs
adc
aad
add
cmp
(bad)
push
loope
fcmovu
mov
call
xlat
rcl
mov
(bad)
jle
iret
neg
scas
sub
inc
jo
jnp
xchg
pop
sbb
(bad)
ds
ins
out
mov
stc
pop
mov
sub
jle
inc
(bad)
rcl
pop
add
mov
cli
(bad)
out
xor
aas
push
pop
leave
sar
sar
aam
(bad)
loopne
mov
mov
rep
push
out
jl
test
(bad)
cmp
sub
bswap
movs
jo
mov
ja
(bad)
xor
mov
add
sub
mov
enter
imul
cmps
xor
mov
jg
mov
inc
in
popf
sub
pushf
out
mov
lock
sub
(bad)
(bad)
jmp
je
fnstcw
and
outs
push
push
or
mov
int
aam
lahf
mov
(bad)
push
ja
pop
mov
fst
mov
mov
mov
add
dec
cwde
loopne
mov
rcr
test
jecxz
adc
popf
loopne
ror
(bad)
(bad)
(bad)
inc
cmp
mov
imul
pop
xlat
stc
call
add
adc
jp
in
(bad)
(bad)
(bad)
call
cmp
push
daa
inc
or
inc
adc
div
and
push
(bad)
jbe
data16
(bad)
adc
push
cwde
mov
xor
fisttp
mov
add
mov
in
mov
icebp
adc
rol
call
jmp
loope
(bad)
or
adc
dec
jmp
mov
in
or
outs
jmp
push
adc
xchg
cmps
pop
sbb
loopne
(bad)
(bad)
(bad)
call
lods
and
adc
jne
xor
push
cmps
cmp
icebp
out
js
push
imul
in
rol
(bad)
(bad)
(bad)
call
sbb
aaa
adc
rcr
cmc
mov
adc
mov
gs
es
mov
lock
(bad)
jbe
push
adc
shl
loope
outs
xor
jecxz
(bad)
(bad)
call
pop
clc
mov
sbb
pop
hlt
dec
repz
cmp
lods
mov
(bad)
cwde
cs
scas
fdiv
(bad)
mov
cmp
rcl
(bad)
jno
pop
jp
in
or
(bad)
mov
sbb
or
sbb
fidivr
dec
call
arpl
call
rcr
mov
push
mov
jmp
out
int3
jmp
pop
jns
lahf
xor
daa
ret
push
inc
adc
cmp
sbb
test
call
ja
sbb
lods
mov
pop
out
(bad)
(bad)
dec
mov
(bad)
pop
std
xchg
and
and
inc
pop
ficomp
xchg
push
shr
jl
mov
mov
movs
xchg
imul
retf
mov
rol
call
outs
cli
(bad)
(bad)
ficom
int3
sti
cs
std
fbstp
xlat
pop
in
lods
(bad)
mov
pop
inc
add
je
out
int
sbb
(bad)
(bad)
call
fistp
(bad)
push
push
out
xchg
(bad)
in
sbb
aad
push
lods
ss
(bad)
(bad)
jmp
test
sub
icebp
aam
mov
and
je
mov
xchg
out
pop
sbb
pushf
outs
mov
push
(bad)
jg
pop
adc
out
mov
inc
gs
dec
jmp
je
inc
add
inc
or
icebp
sbb
test
cld
xchg
xchg
fcomip
cwde
sbb
mov
jle
js
mov
dec
cmp
fild
mov
push
xor
in
ror
jg
scas
je
adc
and
inc
mov
call
or
xor
js
bnd
mov
shr
fxch
add
mov
outs
xchg
lock
retf
aam
pop
pop
pusha
setne
cwde
xchg
(bad)
(bad)
(bad)
(bad)
stc
mov
(bad)
(bad)
mov
pop
mov
movs
sub
sbb
fwait
mov
dec
(bad)
(bad)
(bad)
jmp
xchg
sbb
icebp
pushf
mov
pop
imul
repnz
es
add
jae
or
out
aaa
stc
inc
(bad)
(bad)
(bad)
dec
popa
mov
in
pop
mov
pop
add
mov
ins
lds
(bad)
dec
mov
inc
jo
call
(bad)
call
inc
in
jo
fstp
inc
aas
add
iret
aas
ds
add
(bad)
icebp
mov
imul
fst
pop
pushw
dec
sbb
jl
and
hlt
call
sbb
test
pop
frstpm(287
outs
adc
cwde
and
push
dec
mov
pop
int3
aaa
std
(bad)
jmp
shl
lods
scas
xor
loope
imul
or
into
pop
ins
jne
xor
pusha
cmp
aas
into
push
sub
cld
inc
fisub
pop
scas
xchg
pop
push
cmp
push
and
(bad)
cmp
jle
(bad)
(bad)
inc
and
in
jb
aaa
outs
fist
aaa
in
xchg
scas
push
jecxz
fisub
(bad)
(bad)
inc
mov
mov
sub
rcr
and
imul
out
push
or
scas
push
lock
(bad)
(bad)
(bad)
jmp
push
mov
sbb
adc
lods
pop
aad
ret
enter
aam
pop
(bad)
lahf
test
dec
cmc
push
mov
sub
inc
(bad)
adc
push
push
sub
sub
inc
scas
mov
fld
ja
xlat
dec
inc
pop
inc
loopne
lahf
mov
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cmp
mov
gs
aad
jne
hlt
mov
ss
cmc
mov
(bad)
mov
xchg
aas
ds
push
jl
pop
sub
ja
aas
(bad)
pop
inc
jle
inc
retf
outs
push
repz
das
(bad)
(bad)
(bad)
inc
adc
pop
(bad)
jmp
xchg
mov
mov
cdq
xor
jnp
scas
mov
push
jno
mov
repz
(bad)
(bad)
(bad)
call
push
cmps
sbb
xchg
cli
xchg
in
sub
test
jmp
jg
call
je
mov
xchg
pop
shl
jnp
cli
dec
loop
xchg
add
push
jl
lods
aam
xchg
jle
loope
pop
pop
mov
push
imul
xor
mov
movs
sub
mov
cld
jp
xchg
mov
(bad)
xor
in
xor
aam
(bad)
(bad)
(bad)
call
test
jbe
idiv
pushf
std
inc
xor
inc
repnz
fdiv
rcl
pop
fdiv
mov
jmp
jbe
cmp
jb
jmp
cmc
test
(bad)
(bad)
push
scas
cmps
jnp
inc
lds
xchg
loop
scas
les
lds
cmp
dec
push
xchg
(bad)
into
shr
push
int3
or
cmp
(bad)
(bad)
(bad)
jmp
loopne
xchg
mov
(bad)
cmp
scas
fldcw
mov
stos
push
jg
(bad)
(bad)
call
test
imul
aam
and
add
jno
in
push
add
xchg
(bad)
dec
inc
mov
fsub
int
lea
(bad)
adc
xchg
(bad)
sar
dec
gs
pop
dec
test
(bad)
xor
jmp
mov
sub
or
xchg
pop
mov
mov
call
inc
push
push
mov
adc
adc
(bad)
dec
aas
xor
push
push
movs
jne
cwde
lahf
mov
sbb
xor
inc
(bad)
jmp
scas
out
div
pop
inc
or
hlt
cli
(bad)
loope
retf
push
cdq
inc
push
pusha
sbb
(bad)
(bad)
call
dec
adc
adc
fcom
cmp
mov
lea
sbb
add
inc
ret
lods
adc
(bad)
(bad)
(bad)
in
adc
jg
sub
push
mov
jb
ret
jecxz
mov
and
imul
imul
mov
lds
and
(bad)
(bad)
(bad)
push
mov
xor
fwait
inc
and
sub
add
or
in
repnz
(bad)
(bad)
dec
test
clc
(bad)
push
xchg
mov
cmp
(bad)
aad
push
pextrw
(bad)
push
clc
arpl
nop
cdq
xchg
call
xor
cs
out
jp
movs
cld
cmp
sar
inc
int
scas
mov
icebp
jl
jnp
fucom
into
adc
mov
pushf
lds
cmp
in
mov
test
jg
sub
retf
fimul
sub
add
dec
out
inc
fbld
jmp
sbb
jmp
pop
sbb
popa
lahf
mov
mov
scas
sub
mov
popf
imul
sbb
sub
not
icebp
mov
icebp
in
(bad)
pop
mov
xor
xchg
mov
clc
inc
jae
pop
push
stos
cmp
sti
ror
push
movs
xor
lock
cli
push
mov
stos
shl
ds
push
pop
sbb
adc
mov
(bad)
inc
pop
(bad)
(bad)
(bad)
fcomi
shl
hlt
ins
out
lahf
lahf
das
inc
mov
push
out
xor
arpl
out
(bad)
(bad)
(bad)
call
into
cmc
cs
bound
push
in
or
sbb
adc
cs
clc
ret
fisttp
bound
sbb
mov
cmps
sub
repz
out
(bad)
(bad)
(bad)
in
mov
mov
jge
dec
add
xchg
or
jo
xor
dec
(bad)
(bad)
(bad)
jmp
jp
ret
outs
mov
sub
push
xor
cmps
cmp
push
ss
je
(bad)
fbstp
add
sbb
add
out
popf
add
jb
fwait
fwait
(bad)
(bad)
(bad)
(bad)
jge
dec
xor
nop
pop
dec
inc
and
(bad)
cmps
xor
fstp
xchg
lds
(bad)
(bad)
(bad)
(bad)
stc
iret
pop
pop
out
jge
ins
sbb
mov
mov
xor
add
popf
ja
out
pusha
lods
into
and
jg
jmp
hlt
pop
fwait
xchg
fidiv
dec
fs
jo
inc
push
or
add
cmp
cmp
mov
popf
xor
scas
pop
imul
repz
lea
std
mov
push
lahf
sub
xchg
mov
rol
cmc
ret
fucom
mov
neg
leave
dec
add
mov
retf
inc
or
(bad)
jmp
sub
loope
jo
lds
push
hlt
cmp
aas
mov
add
cmp
push
add
xchg
lods
xchg
out
dec
mov
(bad)
das
test
push
aad
loopne
imul
(bad)
(bad)
inc
(bad)
loope
fsubr
push
add
xor
cmps
push
mov
(bad)
(bad)
call
xor
stc
push
sbb
adc
jg
inc
xor
and
xor
(bad)
(bad)
jmp
aam
fs
mov
jns
sbb
jae
aas
jo
xchg
push
fldcw
dec
imul
cmp
jg
cmps
or
mov
(bad)
stos
outs
test
sub
mov
jbe
mov
or
(bad)
(bad)
mov
fld
jg
jmp
dec
mov
loope
in
mov
mov
int
and
lahf
(bad)
nop
fwait
mov
aam
jno
jae
add
mov
or
jnp
rcr
cmp
(bad)
(bad)
(bad)
(bad)
dec
cld
cmp
inc
dec
(bad)
movs
mov
jle
cmp
icebp
shl
shl
jl
call
or
in
adc
xor
xor
fidivr
sar
arpl
mov
int3
jno
lahf
sub
stos
push
fldenv
(bad)
(bad)
fidiv
add
adc
(bad)
lods
xor
(bad)
(bad)
mov
pop
push
mov
das
sub
pop
dec
movs
test
xchg
ja
or
mov
mov
rcr
(bad)
(bad)
inc
pop
mov
sbb
xchg
pop
bound
(bad)
(bad)
(bad)
fiadd
add
mov
or
mov
cvtps2pi
and
(bad)
(bad)
mov
pop
(bad)
pusha
retf
pop
adc
xor
sbb
(bad)
(bad)
(bad)
call
lahf
ficomp
fucomp
xor
add
pop
inc
jmp
sbb
fistp
mov
add
mov
and
jge
(bad)
(bad)
(bad)
(bad)
jp
inc
mov
xlat
jmp
call
cld
rcr
pushf
add
push
jo
(bad)
(bad)
(bad)
jmp
adc
outs
mov
addr16
scas
pop
scas
cmc
fsub
sbb
push
in
pop
xor
test
mov
fucomi
mov
dec
adc
sbb
push
adc
xchg
jle
js
add
sbb
(bad)
(bad)
push
std
pop
jmp
cwde
(bad)
outs
mov
psubb
xor
xchg
mov
data16
cmp
aad
(bad)
xchg
daa
into
push
sti
mov
loop
mov
fnstcw
(bad)
fisttp
lods
(bad)
repnz
ds
or
(bad)
js
scas
mul
push
mov
lahf
sub
loope
scas
sub
ds
push
add
and
pop
jnp
xchg
pop
mov
call
fcmovb
out
dec
dec
jecxz
push
stc
ins
mov
in
bound
gs
(bad)
(bad)
fisttp
out
pop
lea
mov
neg
adc
xor
fiadd
jp
(bad)
(bad)
(bad)
call
jge
jb
call
hlt
sub
xchg
push
aas
js
daa
and
in
test
jo
mov
js
out
shl
pusha
gs
movs
rsm
sub
cmp
xor
clc
(bad)
iret
pop
(bad)
(bad)
inc
out
sub
dec
gs
bound
aad
fs
nop
fldenv
mov
xchg
and
(bad)
cld
xor
or
sub
pop
ret
inc
mov
aaa
inc
jnp
ret
out
add
push
in
repnz
cmp
fmul
and
add
dec
pop
jnp
gs
xchg
mov
clc
(bad)
(bad)
(bad)
mov
mov
movs
gs
not
cmp
jmp
out
mov
call
(bad)
(bad)
(bad)
in
inc
sub
jne
pop
(bad)
je
sbb
pop
sbb
adc
out
ret
jne
mov
pop
xchg
cmc
(bad)
(bad)
(bad)
jmp
push
push
xor
repnz
repnz
or
ja
js
into
(bad)
xchg
retf
sbb
(bad)
(bad)
(bad)
(bad)
push
ret
movs
call
cli
(bad)
pop
ins
imul
rcl
xchg
pop
mov
push
js
imul
xchg
in
inc
neg
lahf
movs
out
mov
add
pushf
push
jnp
xor
push
(bad)
call
xchg
stos
dec
push
rol
in
mov
stc
dec
aas
jg
je
sahf
lahf
pop
or
call
and
cmps
jge
das
push
pop
mov
pop
ja
pop
aaa
jns
loopne
jecxz
pop
dec
pusha
mov
mov
iret
(bad)
dec
lock
repz
sbb
shl
and
inc
sar
ins
pop
pusha
push
add
repz
jns
cld
sub
(bad)
(bad)
(bad)
dec
(bad)
neg
jmp
pusha
ficomp
ja
jl
outs
inc
imul
pusha
sahf
cld
sbb
(bad)
(bad)
out
cli
aam
sar
imul
movs
outs
or
push
(bad)
push
les
(bad)
(bad)
jmp
ret
sbb
or
cmp
cld
shl
jmp
xor
(bad)
dec
jno
cmp
cs
out
xchg
cli
pop
aad
jle
retf
ficomp
cmp
(bad)
(bad)
(bad)
(bad)
mov
sub
jae
xchg
pop
inc
adc
arpl
push
pop
xor
mov
inc
fisttp
cmps
mov
mov
and
cmp
xchg
retf
mov
or
jl
test
mov
ds
inc
mov
scas
leave
xor
pop
mov
push
imul
daa
mov
sahf
add
(bad)
(bad)
(bad)
(bad)
dec
jo
mov
mov
imul
repnz
and
jl
mov
jno
(bad)
(bad)
(bad)
dec
pop
mov
sbb
call
lea
push
pop
out
sub
imul
xchg
or
jmp
pop
lock
mov
jp
dec
sub
dec
pop
sub
push
fsubr
test
push
call
and
fiadd
aaa
arpl
add
sbb
mov
push
mov
pop
mov
loope
mov
and
in
mov
sbb
xchg
(bad)
ss
(bad)
(bad)
jmp
jmp
jne
sbb
push
call
cmp
cmps
div
mov
add
adc
shr
cmp
(bad)
(bad)
(bad)
call
dec
xor
shr
(bad)
push
popa
mov
es
pusha
xchg
and
loopne
fisub
mov
sar
fisttp
dec
xor
and
ret
and
(bad)
(bad)
mov
scas
dec
clc
(bad)
loop
lods
dec
hlt
pop
push
jo
xlat
xchg
cmps
mov
js
or
cmp
call
and
mov
inc
lahf
xchg
arpl
dec
pop
or
aad
(bad)
push
jge
test
add
jle
mov
ins
push
jne
dec
nop
jl
and
adc
cmc
call
and
(bad)
(bad)
call
jge
mov
or
dec
addr16
ds
or
xchg
lds
ja
dec
test
jb
jmp
mov
ret
rcr
sub
push
ins
fst
(bad)
(bad)
call
mov
aaa
add
mov
and
mov
jns
shr
popa
js
outs
cli
jg
(bad)
cmps
cld
loopne
imul
cli
xor
xchg
mov
loope
sbb
inc
mov
aam
fiadd
mov
mov
dec
cmps
ins
dec
push
mov
call
std
jp
neg
inc
cwde
jne
popf
inc
inc
inc
cwde
jbe
lahf
jmp
fwait
aaa
push
dec
xchg
imul
ret
sbb
cmp
in
out
fisubr
popa
inc
mov
pushf
inc
xor
jmp
mov
jno
jge
frstor
xor
adc
inc
pop
and
and
pushf
loopne
popa
cmp
mov
xor
xor
pop
xchg
addr16
(bad)
(bad)
mov
cmps
dec
jbe
add
mov
xchg
adc
cmp
cmp
mov
mov
scas
jp
fldcw
cli
lods
popa
mov
add
enter
mov
das
dec
idiv
fcomip
mov
cmp
xchg
jbe
cwde
in
stos
int
cdq
fdivr
dec
cmp
outs
jmp
gs
add
call
sub
lods
push
dec
in
xchg
out
leave
jl
xor
js
(bad)
call
jnp
adc
jmp
mov
sti
bound
pushf
das
pop
into
pop
xor
ins
jmp
mov
and
mov
aad
(bad)
call
pop
mov
in
cmc
sbb
xchg
out
fcos
(bad)
(bad)
jmp
pop
dec
mov
jp
ins
das
cmp
mov
data16
pop
sar
pusha
or
(bad)
push
dec
mov
mov
xor
push
push
lods
jp
aas
sbb
mov
inc
add
add
dec
stc
and
stos
or
or
pop
or
repnz
or
xchg
dec
daa
xor
sar
sbb
push
mov
arpl
lea
pusha
adc
mov
mov
addr16
fsubrp
inc
jmp
ins
jg
cs
into
xor
dec
pop
rol
ret
icebp
(bad)
mov
fstp
push
cmp
adc
fadd
mov
jg
mov
or
adc
pop
(bad)
(bad)
(bad)
push
sub
jg
inc
cmp
ins
mov
not
rol
dec
shr
push
(bad)
(bad)
(bad)
inc
mov
jno
in
ret
xor
lods
test
dec
add
push
pop
push
mov
fdivr
(bad)
(bad)
call
sub
ins
pop
push
clc
and
std
leave
push
loope
sbb
rol
outs
add
cld
jno
(bad)
in
jmp
fcomp
mov
out
scas
inc
fistp
mov
xchg
pop
adc
add
inc
cs
not
inc
icebp
jmp
push
xchg
jno
shl
in
dec
lock
pop
push
sub
in
or
fbld
add
mov
(bad)
(bad)
jg
xchg
nop
dec
ffreep
mov
add
or
pop
out
imul
fcmovnu
int3
xor
cli
cli
adc
(bad)
(bad)
jmp
ficomp
test
imul
pushf
or
cmc
cmc
xor
cmp
push
aaa
retf
enter
mov
(bad)
(bad)
dec
jecxz
arpl
xchg
popf
stos
xchg
aad
ins
mov
imul
push
push
(bad)
(bad)
(bad)
call
adc
mov
jmp
sub
push
and
mov
std
inc
push
(bad)
jb
out
std
sbb
outs
cli
jp
sbb
call
retf
jle
(bad)
call
jge
jp
push
shr
jmp
sub
xchg
adc
xchg
pop
cwde
mov
dec
std
out
dec
(bad)
(bad)
(bad)
(bad)
std
cmps
es
call
sbb
loop
sar
clc
mov
fiadd
pop
aas
push
(bad)
(bad)
(bad)
call
cdq
clc
clc
mov
inc
shl
add
nop
sub
sub
mov
aas
(bad)
dec
sar
mov
xor
addr16
rcr
jge
(bad)
fcomip
xchg
adc
adc
stos
jp
mov
mov
jnp
aad
(bad)
(bad)
jmp
xor
mov
or
dec
iret
push
cmp
(bad)
mov
pop
mov
push
shl
xchg
mov
test
outs
cmp
cdq
test
test
(bad)
dec
push
popf
pop
ror
jl
in
inc
call
cmp
lds
dec
gs
add
(bad)
fild
iret
xchg
push
ret
(bad)
push
or
mov
fidiv
ins
es
sbb
(bad)
fisttp
jno
test
jo
dec
out
mov
lahf
jl
push
xor
(bad)
push
mov
hlt
mov
jle
push
cmp
je
push
xor
cbw
cmc
in
jmp
int3
std
movs
push
and
xor
ret
and
ds
shl
(bad)
(bad)
(bad)
push
mov
ss
(bad)
xchg
push
xchg
ret
aad
cmp
shl
adc
add
adc
call
clc
or
out
jae
pop
xor
int
push
jecxz
popf
push
inc
aam
mov
mov
add
je
jns
mov
(bad)
icebp
dec
push
je
mov
push
mov
repnz
(bad)
inc
stos
jl
stc
and
dec
push
sub
xchg
mov
adc
pop
call
bound
sub
fsubrp
inc
pop
fcmovnbe
je
(bad)
(bad)
jmp
pop
adc
pop
adc
dec
icebp
fist
add
cmp
fst
jle
jns
mov
mov
push
je
xor
pusha
in
jp
lock
(bad)
mov
enter
out
sbb
(bad)
sub
dec
lahf
call
stos
add
pop
test
sbb
and
(bad)
(bad)
(bad)
fstp
jno
sbb
mov
rol
call
jg
sub
adc
arpl
sbb
outs
mov
call
fcomip
sub
dec
std
movs
push
or
outs
and
test
inc
arpl
jne
push
sahf
jbe
arpl
xchg
jae
and
dec
aam
mov
fcomp
mov
push
sahf
fldln2
jb
in
mov
ror
adc
outs
mov
xchg
(bad)
mov
(bad)
in
sbb
fisubr
mov
cmp
(bad)
in
into
jno
sub
rol
inc
dec
data16
fnstcw
and
inc
jmp
and
stos
push
lds
or
fcomip
mov
or
inc
mov
xchg
js
adc
adc
out
push
and
pop
es
xchg
xchg
inc
mov
fsubr
mov
inc
inc
push
shl
sub
frstor
call
jmp
mov
rcl
sub
das
push
pop
jbe
rcr
out
cmps
sbb
fs
(bad)
(bad)
(bad)
(bad)
jmp
addr16
loop
aad
in
jo
ss
dec
adc
push
xor
dec
mov
stc
ret
movs
dec
dec
cmp
das
dec
enter
xchg
jmp
adc
inc
dec
scas
inc
iret
or
xchg
(bad)
(bad)
call
pop
push
dec
pushf
jle
xchg
out
inc
push
cmp
push
pop
xor
push
ret
and
(bad)
(bad)
jmp
xlat
add
mov
inc
std
adc
aas
shl
out
movs
iret
clc
mov
push
fbld
sar
imul
lahf
int
inc
dec
(bad)
xchg
call
lock
call
cmp
pop
(bad)
push
mov
outs
jmp
ins
in
xchg
pop
retf
mov
(bad)
dec
fcom
adc
in
mov
repz
cmp
clc
rep
pop
jne
inc
pop
adc
mov
stos
and
mov
jns
xor
leave
lods
dec
scas
(bad)
jg
(bad)
call
push
xlat
mov
adc
dec
aaa
sub
adc
int
test
fnsave
shr
mov
jnp
mov
aad
(bad)
push
(bad)
retf
outs
push
push
cs
out
es
sub
pushf
retf
pop
mov
lds
xchg
loopne
(bad)
push
sbb
add
adc
jb
movs
mov
test
pop
jb
mov
popa
test
cmp
(bad)
cmp
ftst
je
xchg
js
push
dec
movs
xor
das
clc
dec
adc
cmps
aas
and
sbb
lock
or
pop
xor
inc
stos
sub
push
not
adc
ret
jle
push
(bad)
(bad)
mov
iret
jno
jae
and
xchg
jae
data16
xchg
mov
(bad)
push
pop
lahf
sub
lods
mov
je
pop
mov
(bad)
dec
call
mov
pop
not
rol
cmp
lods
push
idiv
add
in
stc
stc
xchg
(bad)
loop
popa
sar
pop
or
mov
(bad)
(bad)
jmp
aas
cmc
icebp
aaa
jmp
and
jg
pop
(bad)
or
dec
jle
(bad)
jecxz
shr
rcl
inc
mov
bswap
lds
jecxz
jg
(bad)
mov
pop
ror
ror
les
ds
int3
mov
jae
(bad)
call
cld
lea
rep
jle
cmp
jns
mov
data16
ins
mov
pop
mov
(bad)
(bad)
(bad)
inc
ins
dec
call
jg
inc
pop
jns
loope
cmc
xchg
mov
cmp
out
xor
inc
cmps
(bad)
jmp
pop
iret
nop
pop
loop
icebp
mov
(bad)
loop
test
shl
and
mov
cmp
mov
jmp
out
mov
dec
xor
adc
ret
mov
aas
lods
scas
push
jae
add
(bad)
call
iret
fsubr
xchg
cli
cmc
pop
xchg
in
jno
mov
icebp
das
mov
popa
test
push
push
sub
sub
(bad)
out
clc
(bad)
(bad)
jmp
pop
and
out
xor
push
stc
cld
imul
dec
mov
dec
or
jmp
hlt
(bad)
push
xchg
pop
out
dec
xlat
jp
push
mov
mov
daa
sub
call
cwde
aaa
lods
cmps
mov
cmps
xchg
enter
fdivr
ret
(bad)
fcomip
jmp
inc
scas
or
push
retf
cmp
sbb
(bad)
inc
or
cli
stos
(bad)
jmp
fs
jb
stc
pop
ss
sti
retf
mov
dec
sub
xchg
push
cld
cmps
out
retf
or
jnp
add
xor
je
(bad)
(bad)
inc
cmp
push
arpl
sub
icebp
iret
and
sub
test
aas
or
(bad)
(bad)
call
retf
mov
pop
mov
(bad)
jecxz
jg
dec
fadd
cmp
sub
dec
(bad)
jg
and
int
fcmovb
ja
cmps
cwde
xor
sti
lock
sub
jno
mov
test
in
fsub
jns
(bad)
(bad)
(bad)
inc
ja
mov
loopne
or
xor
movs
xchg
sub
mov
icebp
add
lods
call
mov
ss
mov
add
lock
add
jmp
inc
scas
add
es
jmp
sbb
(bad)
(bad)
dec
pop
push
xchg
push
adc
in
push
aaa
call
mov
xor
fimul
push
loope
add
dec
popf
pop
icebp
in
in
ja
aad
in
jne
mov
stos
add
mov
(bad)
std
stos
inc
mov
pushf
xor
sbb
push
sbb
mov
jp
aas
sub
in
call
mov
fimul
ins
or
jns
or
(bad)
(bad)
(bad)
mov
fwait
mov
push
mov
fwait
push
and
xor
cmc
mov
pop
in
mov
jmp
(bad)
lock
mov
sub
xchg
mov
imul
gs
in
(bad)
(bad)
call
jle
call
xchg
aad
ja
popf
outs
sti
pop
loope
out
push
mov
dec
test
or
(bad)
jle
pop
mov
ja
mov
jmp
stc
(bad)
(bad)
(bad)
(bad)
add
pop
popfw
pop
sub
leave
fist
gs
sbb
sub
(bad)
(bad)
jmp
pop
ja
dec
stc
mov
call
retf
in
push
xor
inc
push
jl
xchg
loopne
(bad)
jmp
jbe
xchg
sbb
in
sbb
pop
sar
mov
cmps
cmc
inc
jl
xchg
(bad)
(bad)
(bad)
mov
lods
cmc
fcmovne
push
pusha
(bad)
cmp
lea
in
pop
sbb
pop
mov
loopne
int3
arpl
jnp
(bad)
(bad)
dec
and
jp
movs
mov
in
test
mov
shr
inc
imul
movs
ret
(bad)
jmp
shl
mov
sub
cmps
add
pushf
and
and
arpl
lock
(bad)
jmp
pop
pusha
and
xchg
int3
xchg
cmp
aaa
inc
cs
scas
jge
(bad)
(bad)
mov
aaa
xor
jge
leave
adc
das
stos
and
lahf
xchg
icebp
push
ss
bound
adc
call
clc
sub
jp
shr
(bad)
repz
in
sub
cmp
jl
cmp
mov
lea
cld
xchg
rcr
(bad)
(bad)
inc
sub
pop
(bad)
(bad)
aaa
fucomip
cwde
aad
jb
mov
mov
adc
aad
sbb
loopne
(bad)
call
dec
sub
and
popa
sub
add
test
push
mov
push
xor
dec
or
pop
aad
sbb
push
ds
arpl
call
xchg
pop
std
push
lock
adc
inc
fwait
cmp
(bad)
scas
pop
sahf
(bad)
(bad)
(bad)
(bad)
cld
mov
dec
in
je
aam
jl
sub
xor
dec
retf
pop
gs
mov
inc
sbb
cmp
sbb
inc
xlat
pop
push
cld
call
inc
clc
dec
imul
daa
push
mov
movs
(bad)
call
adc
jbe
and
inc
addr16
push
sbb
push
(bad)
(bad)
loope
mov
in
nop
hlt
push
adc
xchg
int
into
sahf
cmp
(bad)
inc
shr
cmp
in
popa
dec
push
jp
repnz
repz
add
(bad)
(bad)
call
jmp
cmp
mov
pop
in
pusha
sub
cmp
cmp
into
stos
gs
sahf
(bad)
(bad)
(bad)
jmp
jle
clc
(bad)
cs
jnp
cmc
dec
push
sbb
rcr
fwait
call
(bad)
(bad)
push
xor
fidiv
push
rcr
push
imul
mov
cld
(bad)
(bad)
jmp
gs
in
(bad)
mov
mov
cmp
push
loopne
(bad)
pop
js
inc
sub
lods
cmc
ss
sbb
push
dec
xchg
add
sbb
sub
daa
or
pop
sar
(bad)
(bad)
(bad)
mov
jp
imul
jns
fild
sub
sti
(bad)
call
add
sbb
inc
add
mov
add
mov
(bad)
test
pop
loopne
sar
cmc
nop
and
clc
jg
mov
add
jg
or
jmp
js
aad
icebp
js
call
(bad)
test
cmp
mov
cwde
mov
(bad)
(bad)
(bad)
in
in
iret
cmp
test
push
cmp
xchg
repz
dec
pusha
xchg
inc
aas
cmp
(bad)
(bad)
mov
mov
sub
stc
jnp
cmc
fwait
xlat
xchg
scas
loope
mov
(bad)
(bad)
(bad)
jmp
and
retf
jne
fmul
cs
mov
repz
cli
add
fwait
sbb
add
(bad)
(bad)
jmp
cmc
popf
push
mov
loope
loopne
xor
rcl
(bad)
enter
pushf
cmp
arpl
add
(bad)
push
xchg
aas
nop
gs
fwait
sub
fdivr
inc
mov
push
(bad)
xlat
jle
shl
loopne
icebp
stos
std
dec
xor
in
and
cs
mov
div
or
or
inc
je
out
test
push
mov
push
rol
jno
(bad)
(bad)
(bad)
(bad)
fstp
fimul
mov
(bad)
rcr
pop
shl
cmp
repz
es
sar
inc
cmp
push
adc
call
dec
arpl
mov
aad
and
nop
cmc
sahf
xchg
mov
(bad)
(bad)
(bad)
jg
rcl
xor
int3
stc
pop
(bad)
mov
jecxz
jnp
dec
cmc
add
mov
dec
lods
mov
cmps
int3
jns
lds
je
mov
out
fcomp
xor
popf
ja
lods
loopne
cs
gs
(bad)
(bad)
(bad)
in
movs
dec
mov
sub
mov
push
xor
jmp
jae
shr
inc
data16
test
mov
into
std
mov
clc
cwde
push
call
dec
pop
popa
mov
mov
push
or
(bad)
sti
cmp
out
mov
fadd
dec
mov
xchg
nop
fadd
(bad)
(bad)
(bad)
call
rcl
fs
stos
lods
fsub
mov
jb
int
je
ss
(bad)
(bad)
(bad)
inc
xor
mov
xchg
fnstcw
in
nop
rcl
sbb
retf
sar
pop
jecxz
(bad)
(bad)
mov
int3
pop
(bad)
dec
sub
xor
cmc
(bad)
(bad)
in
ficomp
cmp
mov
test
dec
or
nop
pop
jo
lods
xor
in
pop
in
inc
push
and
jmp
stos
pop
and
(bad)
jmp
mov
push
mov
or
enter
push
outs
in
inc
xchg
mov
(bad)
(bad)
fstp
dec
test
cs
sub
pop
or
xor
push
xchg
sbb
mov
(bad)
(bad)
(bad)
jg
mov
jae
scas
mov
and
pop
add
adc
adc
dec
xchg
in
test
jmp
ja
in
std
mov
(bad)
mov
mov
sub
jle
pop
sahf
hlt
pop
loopne
das
cmps
not
push
sbb
push
lahf
fisttp
fs
mov
out
jmp
clc
call
push
sti
sbb
pop
enter
repnz
je
outs
stos
mov
(bad)
mov
fidivr
push
int3
nop
js
popf
inc
(bad)
std
movs
enter
out
push
dec
int3
(bad)
(bad)
(bad)
call
cmc
xchg
adc
jne
push
jmp
jmp
or
fdiv
jmp
pop
push
shl
(bad)
push
(bad)
(bad)
(bad)
(bad)
in
xor
bound
inc
cmps
adc
dec
imul
jmp
and
add
test
std
test
lds
ret
hlt
push
adc
mov
ds
repnz
sahf
test
mov
sar
pop
mov
mov
mov
push
jg
ret
mov
push
enter
mov
add
xor
popa
mov
(bad)
(bad)
dec
mov
cmp
popf
aas
mov
adc
lods
shr
stos
mov
xor
sbb
mov
out
xchg
movs
push
popa
lods
into
inc
push
daa
fadd
mov
out
push
int
pop
cmp
sbb
inc
add
xchg
xchg
inc
xchg
es
int
int3
into
push
xchg
(bad)
(bad)
(bad)
inc
push
cs
mov
jge
cld
gs
clc
sub
and
lock
int3
xchg
and
(bad)
dec
mov
or
sbb
and
inc
std
cmp
(bad)
(bad)
fcomip
movs
inc
push
ror
mul
pop
shl
mov
call
pop
dec
xchg
sti
mov
(bad)
cmp
xchg
mov
dec
bound
cmc
aas
jno
outs
(bad)
(bad)
(bad)
call
cmps
retf
jae
inc
(bad)
push
xor
sbb
fsub
jne
jge
mov
jecxz
ret
jg
ret
bound
sbb
loop
inc
adc
jecxz
add
(bad)
(bad)
push
mov
cmp
sub
xor
dec
mov
retf
in
shl
sbb
sub
(bad)
(bad)
call
push
in
call
bound
cld
add
pushf
dec
mov
pop
or
push
mov
cli
(bad)
(bad)
jmp
xchg
xchg
lods
retf
mov
in
and
mov
jnp
std
pop
ret
push
aam
mov
cwde
cs
pop
lahf
imul
pop
(bad)
(bad)
(bad)
jg
rcl
jle
xor
or
shl
add
outs
adc
outs
xchg
pusha
jb
jne
(bad)
dec
pop
sub
les
(bad)
cvtps2pd
hlt
jmp
(bad)
(bad)
call
dec
push
fbstp
pop
cmp
ins
not
rcr
imul
scas
ret
mov
push
jmp
mov
outs
in
add
pop
ins
in
jecxz
sub
push
xchg
nop
cmp
mov
lock
push
cmp
(bad)
(bad)
out
mov
(bad)
mov
push
das
fisttp
scas
jmp
addr16
dec
icebp
xor
inc
(bad)
mov
cmp
mov
sbb
pop
ds
(bad)
(bad)
inc
mul
fidiv
mov
hlt
push
cmp
js
jl
dec
sub
cli
sbb
pushf
jno
or
call
mov
push
(bad)
jmp
scas
cli
out
pop
cmp
nop
test
stos
jnp
test
mov
iret
xor
(bad)
mov
ret
icebp
leave
loop
sar
rol
mov
(bad)
jmp
push
adc
adc
dec
push
addr16
test
cs
aam
xchg
jo
(bad)
mov
clc
dec
cmp
daa
or
pop
sub
pop
mov
and
test
outs
cmc
cs
(bad)
fxch
pushf
jmp
lock
in
cmps
cmps
ficomp
mov
out
js
movs
inc
lock
jmp
pop
cwde
test
lods
jmp
adc
pop
fsubr
(bad)
icebp
imul
jae
cmp
or
xchg
adc
jp
out
xor
adc
outs
cmps
shl
call
xor
(bad)
(bad)
push
xchg
mov
push
and
or
lods
and
adc
(bad)
(bad)
jmp
mov
aad
jbe
ja
int
cmp
inc
out
or
add
out
(bad)
(bad)
(bad)
jmp
mov
cld
cwde
mov
xchg
mov
mov
xchg
fadd
pop
and
and
icebp
jmp
lods
mov
nop
sub
sub
stos
add
mov
mov
cld
cmc
sahf
call
loopne
sbb
ins
iret
pop
ins
cmc
cmp
mov
cmc
sbb
jmp
and
out
inc
ss
cmp
mov
xchg
repz
loopne
inc
in
jae
xchg
(bad)
(bad)
push
xor
(bad)
retf
mov
loop
and
iret
test
cmc
(bad)
(bad)
sub
(bad)
jg
jg
int3
sbb
arpl
sahf
push
jecxz
push
xor
iret
xlat
nop
into
dec
(bad)
(bad)
dec
xor
mov
and
sub
cmp
xchg
arpl
retf
inc
sub
xor
add
xchg
push
icebp
mov
(bad)
(bad)
(bad)
(bad)
cmp
sbb
(bad)
jp
cmp
div
scas
and
mov
push
ins
cmp
(bad)
push
add
cmp
sti
push
push
daa
mov
(bad)
nop
and
xchg
icebp
movs
xchg
(bad)
(bad)
(bad)
jmp
(bad)
scas
sub
jne
test
gs
xchg
int3
xor
cmp
fdiv
jns
arpl
(bad)
(bad)
jmp
mov
sbb
add
xchg
mov
nop
push
mov
fwait
or
push
inc
xor
in
adc
adc
xchg
fild
and
mov
jb
xchg
(bad)
(bad)
mov
push
addr16
ficom
cli
push
push
test
mov
rcr
and
cli
(bad)
call
push
pop
and
pop
div
push
aam
mov
xlat
mov
(bad)
(bad)
call
or
adc
stc
or
pop
add
adc
sub
jecxz
ja
sar
hlt
or
or
sub
add
(bad)
(bad)
(bad)
mov
mov
inc
sbb
mov
mov
push
stos
dec
test
retf
mov
pop
imul
mov
sbb
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
fcmovne
fnstenv
dec
mov
mov
xchg
xor
(bad)
aas
adc
js
popa
fild
mov
and
pop
and
push
xchg
or
add
sbb
pop
mov
xor
sbb
scas
jmp
sub
(bad)
(bad)
dec
xor
cmp
sbb
sahf
js
test
xor
mov
or
jbe
fdivr
mov
add
and
push
mov
jne
mov
rcr
xor
(bad)
(bad)
push
dec
in
pop
mov
fst
mov
mov
inc
cli
cmp
out
cli
(bad)
std
and
mov
adc
mov
ins
jbe
(bad)
mul
pop
int3
jae
out
cli
(bad)
call
sar
ins
jecxz
push
pop
vldmxcsr
xor
jnp
(bad)
(bad)
(bad)
push
and
les
pop
dec
cwde
addr16
mov
mov
jo
cmp
movs
xor
loopne
inc
clc
test
add
or
pusha
ins
xor
xchg
jo
sbb
cld
scas
lock
and
lods
dec
mov
mov
(bad)
(bad)
dec
jmp
add
pushf
cmp
pop
pop
fisttp
mov
movs
test
enter
sub
aas
pop
cwde
fisubr
mov
push
sbb
jno
(bad)
(bad)
(bad)
cmp
mov
pop
dec
call
xchg
int
call
jg
ja
adc
stos
dec
xchg
dec
(bad)
mov
(bad)
daa
retf
mov
(bad)
(bad)
(bad)
push
mov
sub
sti
mov
out
mov
stc
clc
dec
and
sti
pop
lock
in
inc
add
(bad)
mov
into
xchg
jge
cwde
xchg
dec
loopne
clc
mov
jb
ret
ja
loop
out
(bad)
(bad)
jmp
and
test
add
cld
jo
ins
or
xchg
in
mov
test
hlt
idiv
das
sub
outs
pop
xchg
test
xchg
fisubr
sub
dec
xchg
(bad)
inc
mul
jle
ficom
lods
(bad)
push
call
inc
les
ret
dec
mov
in
jae
xchg
pusha
mov
sbb
mov
xor
das
dec
pop
cwde
lock
mov
test
jmp
lods
arpl
(bad)
(bad)
(bad)
push
jno
fwait
pop
fcmovu
test
push
lahf
cmp
test
fld
dec
mov
(bad)
(bad)
(bad)
jmp
sti
mov
adc
cmp
(bad)
enter
dec
mov
popa
inc
icebp
sub
xchg
xchg
xchg
mov
sar
cmc
fimul
and
in
call
mov
sub
dec
add
push
mov
fcomip
(bad)
call
das
loopne
je
out
mov
popf
jns
pop
pop
daa
cmp
pop
(bad)
(bad)
(bad)
push
lea
loop
jl
add
xor
pushf
dec
cmp
imul
(bad)
(bad)
(bad)
dec
std
adc
js
daa
icebp
test
loop
ins
out
aaa
mov
pusha
xor
pop
out
xchg
cmps
or
(bad)
(bad)
call
push
imul
movs
xchg
jp
sar
out
xchg
ins
mov
scas
mov
jbe
jmp
cmc
call
neg
xor
cmp
clc
sub
jmp
xchg
pop
out
push
dec
sub
push
aad
std
(bad)
sti
mov
dec
pushf
push
add
fimul
leave
lods
sahf
sahf
lods
popf
or
stc
push
sahf
xchg
(bad)
scas
cmps
movs
fcom
outs
call
cli
call
add
cs
(bad)
in
adc
jb
push
sar
(bad)
dec
mov
in
xor
stos
mov
pop
sub
scas
mov
(bad)
jg
ja
pop
mov
fld
data16
jne
mov
adc
repnz
fcmovnb
(bad)
(bad)
push
out
(bad)
out
jno
add
hlt
inc
mov
in
sbb
mov
ret
jbe
mov
loopne
mov
pop
(bad)
jg
xor
call
jecxz
imul
mov
jbe
jns
sbb
inc
ja
idiv
inc
into
mov
fst
mov
das
es
je
fwait
sti
sub
jbe
(bad)
(bad)
push
fstp
fstp
mov
aas
inc
(bad)
sub
in
and
cmp
dec
sbb
sub
push
mov
jmp
frstor
push
mov
push
dec
xchg
mov
idiv
(bad)
(bad)
jmp
pop
inc
ficom
aas
dec
fild
jle
jnp
add
sbb
sbb
fimul
(bad)
(bad)
(bad)
inc
das
sbb
imul
fs
arpl
dec
xchg
fadd
push
mov
(bad)
jmp
cli
cmp
shl
jns
es
movs
cmp
lods
jnp
loopne
(bad)
(bad)
clc
jae
cmp
in
enter
xor
mov
sar
aad
add
(bad)
call
(bad)
sub
test
add
repnz
mov
and
scas
retf
into
(bad)
out
bound
jmp
(bad)
(bad)
(bad)
fcomip
jle
dec
sub
fnstsw
sub
mov
inc
enter
pop
mov
jns
mov
lods
(bad)
inc
jmp
mov
and
sar
out
adc
(bad)
(bad)
das
push
xor
popa
xor
ds
or
adc
(bad)
es
xchg
or
xor
dec
mov
cld
jbe
mov
hlt
mov
shl
inc
fadd
xor
jne
sbb
(bad)
imul
jne
stos
fcomi
sub
inc
mov
fs
(bad)
ins
outs
aad
(bad)
inc
add
mov
std
fcmovne
lahf
jno
movs
retf
and
dec
loopne
inc
jecxz
xchg
loop
lods
lds
and
pop
push
aad
addr16
sbb
and
call
dec
mov
jg
inc
lds
mov
loopne
inc
scas
rcr
xchg
(bad)
(bad)
(bad)
call
sub
cmp
lods
cwde
inc
jbe
repz
sub
arpl
mov
xor
mov
int
fld
fwait
into
jle
imul
(bad)
fist
cs
pop
sub
stc
ja
gs
add
xchg
mov
ds
add
std
(bad)
(bad)
(bad)
fistp
adc
cmps
out
cwde
push
jp
pusha
outs
es
les
lds
add
inc
xlat
or
(bad)
call
or
out
out
(bad)
pop
jge
(bad)
sbb
(bad)
(bad)
(bad)
push
adc
and
mov
push
jbe
cmp
cmp
dec
in
fwait
es
cmc
add
(bad)
jg
jg
xchg
lea
push
mov
dec
cli
jb
cmp
push
jmp
mov
bound
mov
or
inc
xchg
aaa
mov
lahf
pop
retf
xchg
mov
lea
(bad)
(bad)
dec
scas
mov
(bad)
xor
add
cmp
(bad)
stos
fadd
push
mov
out
stos
(bad)
(bad)
(bad)
cmp
sbb
dec
aas
cld
sti
(bad)
inc
push
popa
icebp
mov
mov
inc
push
mov
stos
addr16
lds
ds
in
mov
xchg
inc
inc
xchg
(bad)
(bad)
(bad)
call
das
pop
cmp
ins
add
jecxz
jp
cmpxchg8b
cmps
mov
sub
add
cmps
(bad)
(bad)
(bad)
call
js
sbb
out
mov
aaa
scas
stos
mov
sti
stc
add
sbb
rcl
or
out
dec
mov
(bad)
rcl
div
inc
xor
scas
cmp
jmp
sub
outs
mov
add
arpl
jnp
pop
dec
cmp
call
aas
(bad)
(bad)
(bad)
push
dec
jno
mov
(bad)
xor
mov
fisub
in
shr
(bad)
and
fcomip
(bad)
(bad)
(bad)
push
cmps
shl
int
dec
adc
call
lea
adc
cmp
(bad)
(bad)
(bad)
(bad)
jmp
push
push
cmp
(bad)
xchg
mov
mov
xor
(bad)
(bad)
(bad)
dec
outs
push
rcr
imul
ss
dec
retf
mov
mov
cmp
(bad)
xor
fcmovu
jle
mov
pop
hlt
sti
dec
sbb
in
jl
mov
(bad)
inc
out
std
sbb
out
retf
sub
imul
pop
fucomp
stos
(bad)
(bad)
jmp
pop
lods
(bad)
int3
add
mov
jo
jbe
pop
or
pop
add
(bad)
(bad)
(bad)
call
mov
pop
cmp
xor
jno
add
push
adc
xor
pop
push
(bad)
(bad)
(bad)
dec
stos
or
add
jecxz
pop
and
mov
or
xchg
mov
xchg
(bad)
(bad)
(bad)
(bad)
jnp
mov
jg
add
jnp
cmp
mov
cmc
jp
das
xchg
xchg
mov
(bad)
(bad)
(bad)
dec
lea
mov
loopne
xchg
pop
jae
out
mov
push
adc
int
pusha
(bad)
(bad)
jg
shl
iret
into
add
outs
das
stc
jne
in
inc
sahf
jbe
in
mov
push
sbb
lea
jnp
cwde
jmp
rcr
lahf
aaa
sbb
(bad)
out
cmc
loop
xchg
lock
(bad)
inc
loope
or
jae
inc
sub
mov
xlat
fcom
jo
out
(bad)
clc
(bad)
dec
inc
icebp
add
fwait
cmovle
mov
stc
cmps
adc
and
(bad)
(bad)
mov
jg
mov
jg
popf
jecxz
cs
mov
push
jno
ret
mov
(bad)
(bad)
std
push
pop
or
jbe
mov
arpl
std
aam
inc
cld
(bad)
ffreep
jg
ja
jle
dec
ins
push
mov
jle
mov
(bad)
(bad)
jmp
cli
std
call
pop
inc
sar
popf
pop
cmp
out
shl
sbb
ss
sbb
retf
repz
(bad)
jmp
jno
sub
pop
dec
pop
pop
jge
loop
cs
pusha
pop
push
gs
pop
mov
test
dec
cmp
mov
dec
adc
dec
adc
jmp
icebp
jge
push
cmp
(bad)
fdivp
(bad)
jmp
jmp
mov
shl
(bad)
data16
cmp
xor
dec
repz
je
addr16
loope
ins
jne
mov
outs
jg
mov
jmp
inc
cmp
scas
lods
out
mov
cld
cmp
pop
dec
xor
scas
std
add
cli
pop
xor
(bad)
(bad)
call
xchg
cmp
jl
cmp
popa
int3
sbb
repnz
(bad)
(bad)
jg
cmp
outs
dec
call
adc
ret
mov
jbe
das
(bad)
(bad)
jmp
(bad)
mov
pop
nop
out
pop
cmc
outs
arpl
icebp
retf
inc
idiv
ss
(bad)
dec
mov
lods
mov
clc
ins
jl
mov
mov
inc
jnp
pop
es
(bad)
call
fistp
hlt
scas
fidiv
mov
stos
mov
push
inc
add
jle
repz
and
xchg
(bad)
(bad)
(bad)
call
mov
mov
xor
xchg
fscale
add
xchg
push
xor
mov
mov
push
mov
push
add
test
jo
xchg
call
sub
pop
xor
sbb
pop
push
call
cmp
shl
jge
push
iret
fiadd
mov
lock
jmp
imul
jne
push
shl
dec
xor
fstp
xchg
push
(bad)
out
movs
xor
jge
push
jnp
sbb
jge
mov
inc
(bad)
(bad)
jmp
or
and
int
pop
dec
push
sub
loopne
repz
jg
inc
push
xchg
pop
ret
lods
mov
push
push
in
pop
dec
add
hlt
(bad)
mov
lea
or
mov
xlat
inc
(bad)
xchg
idiv
movs
(bad)
(bad)
(bad)
(bad)
out
icebp
pop
ret
cdq
int
pop
sub
das
mov
mov
jbe
paddd
inc
sbb
(bad)
cmp
xchg
(bad)
pop
neg
adc
push
addr16
jg
(bad)
(bad)
(bad)
jg
mov
mov
push
add
dec
rol
cmp
pop
and
stc
into
xchg
(bad)
(bad)
jmp
mov
ins
in
mov
push
jnp
and
fld
in
cdq
xor
(bad)
(bad)
(bad)
inc
lds
lods
in
mov
mov
(bad)
cld
adc
add
jno
std
(bad)
(bad)
(bad)
jmp
mov
mov
addr16
(bad)
mov
or
fwait
sub
movs
addr16
mov
jnp
in
add
lds
sbb
or
dec
jp
cld
xor
(bad)
jg
sti
fld
imul
das
into
xchg
das
adc
sbb
xchg
lahf
add
stos
sub
(bad)
(bad)
jmp
loope
push
inc
aaa
pop
(bad)
push
jo
pop
pop
push
push
mov
jno
mov
cld
mov
std
dec
jmp
jg
bound
and
mov
pop
jae
test
mul
lock
(bad)
out
fidiv
loopne
xor
mov
(bad)
test
sar
(bad)
fbld
jmp
sbb
sub
daa
call
inc
and
jge
(bad)
sbb
jg
loopne
daa
dec
lock
xchg
push
push
cmp
fcmovbe
fcmovnb
(bad)
inc
push
outs
ds
in
into
cs
pushf
jne
es
push
int
sub
jmp
jge
(bad)
(bad)
(bad)
push
retf
pop
pop
ret
clc
rcr
stc
sbb
sbb
pop
sti
inc
add
fidivr
pusha
mov
mov
or
scas
cwde
dec
dec
dec
pop
mov
(bad)
push
repnz
loop
push
xor
iret
add
scas
shr
retf
loope
xor
jmp
bswap
retf
cld
cwde
add
aad
jne
push
cmps
ja
aam
inc
fnstcw
mov
pop
xor
push
(bad)
(bad)
(bad)
inc
es
jbe
inc
mov
adc
clc
mov
cmp
xchg
push
ins
or
(bad)
inc
xchg
mov
fucomip
retf
xchg
jo
xchg
push
(bad)
(bad)
(bad)
jmp
aad
adc
mov
pop
cs
in
and
jb
clc
inc
(bad)
fisttp
loope
out
pop
jle
scas
pop
repz
cwde
cmp
movs
loopne
int
xchg
xor
loop
mov
cwde
and
jecxz
push
mov
mov
sar
(bad)
jg
js
int
push
inc
dec
aas
adc
pusha
mov
jge
arpl
mov
adc
outs
outs
mov
push
pop
and
out
loop
std
(bad)
(bad)
mov
mov
sub
mov
push
aas
sub
push
add
jg
pop
sar
int
loopne
xchg
xor
out
out
cli
(bad)
jg
cmps
push
inc
and
fdivp
repz
rol
test
mov
je
(bad)
(bad)
jmp
repnz
jmp
or
out
int
ss
cmp
pusha
stc
sbb
jg
dec
shr
xor
loop
add
call
inc
mov
mov
mov
loope
sub
hlt
pop
inc
push
(bad)
cli
mov
std
or
sbb
pop
scas
pop
imul
fs
(bad)
dec
popa
mov
jp
leave
sub
in
adc
add
sar
call
jmp
sar
jle
cwde
aad
in
adc
out
pop
call
pop
movs
pop
call
adc
int
lock
jg
ja
ror
and
jle
(bad)
(bad)
(bad)
call
xor
or
sbb
cmp
adc
inc
mov
xor
neg
lahf
cmp
push
(bad)
inc
or
daa
mov
add
div
(bad)
addr16
inc
stos
mov
(bad)
jmp
add
sub
pushf
out
in
adc
cs
out
int3
jle
sbb
mov
mov
adc
neg
bndldx
test
(bad)
mov
sbb
xor
add
(bad)
jmp
sti
dec
pushf
mov
sub
imul
shr
mov
(bad)
(bad)
(bad)
push
gs
mov
push
pop
ja
xchg
and
and
pop
sbb
xor
idiv
(bad)
(bad)
jmp
sbb
dec
repnz
sahf
sbb
inc
movs
retf
jmp
repnz
(bad)
push
sub
dec
lahf
rol
pusha
adc
mov
data16
(bad)
out
clc
cmp
jge
xchg
cmp
(bad)
cmp
xchg
fcomp
adc
dec
jmp
test
out
movs
clc
pminub
push
ins
jmp
jae
pusha
call
add
mov
call
push
data16
(bad)
in
(bad)
jmp
outs
jmp
mov
adc
cdq
sar
neg
add
lahf
or
cmp
vmwrite
bound
jge
add
dec
cs
iret
imul
ror
(bad)
(bad)
(bad)
call
mov
jle
adc
mov
add
mov
shrd
pusha
inc
xchg
stc
mov
lahf
jl
mov
adc
test
pop
cmc
dec
cdq
mov
pop
icebp
mov
mov
cmp
test
mov
(bad)
(bad)
dec
adc
xchg
mov
out
jp
leave
xchg
ja
cmp
add
(bad)
inc
dec
sar
es
outs
mov
inc
sbb
(bad)
(bad)
push
push
(bad)
or
sub
cmc
push
cmp
push
int3
shr
cmp
outs
adc
ins
fbstp
aas
in
(bad)
call
pop
(bad)
adc
scas
loopne
dec
add
out
pop
inc
popf
mov
or
lock
sti
dec
lahf
rcl
xchg
inc
(bad)
(bad)
(bad)
mov
pusha
mov
xchg
mov
mov
int3
loopne
retf
mov
mov
mov
(bad)
(bad)
(bad)
dec
(bad)
sbb
popa
jecxz
xchg
das
mov
pop
aas
dec
(bad)
daa
push
fdivr
add
push
xor
jg
(bad)
push
jmp
mov
mov
mov
add
fiadd
inc
or
cmps
fdivr
ins
mov
xchg
mov
fcom
or
movs
inc
in
retf
push
add
xor
(bad)
(bad)
jmp
cmp
and
sub
xchg
fiadd
out
pusha
in
pop
adc
pusha
hlt
fwait
movzx
push
lahf
test
mov
mov
jg
(bad)
mov
push
das
adc
out
popa
ret
adc
nop
dec
out
out
shl
dec
out
call
xchg
cwde
mov
arpl
jo
jecxz
mov
int
daa
in
(bad)
(bad)
(bad)
dec
stc
xor
or
xor
je
ud1
loop
outs
or
mov
push
idiv
jle
mov
mov
push
mov
inc
inc
fdiv
repz
jnp
repz
(bad)
(bad)
(bad)
call
stc
popf
shr
je
fld
ins
mul
mov
jns
jle
xchg
mov
dec
loopne
call
cmp
mov
xchg
or
xchg
aam
test
lds
ins
lods
xchg
shr
jge
mov
out
mov
aam
mov
call
adc
fdivr
loop
inc
mov
adc
scas
xchg
jecxz
cli
test
jecxz
in
mov
cwde
es
and
fisub
lock
mov
mov
dec
dec
std
dec
jmp
(bad)
clc
ret
gs
js
xchg
pushf
outs
sbb
dec
xchg
bound
fldenv
mov
jmp
call
(bad)
loop
rcr
xor
call
ins
out
shr
jmp
lds
sbb
(bad)
(bad)
(bad)
push
adc
repz
jge
and
pop
iret
std
sbb
int
out
jmp
cli
repnz
jmp
outs
(bad)
(bad)
call
iret
(bad)
cli
cli
jae
cmp
mov
rcr
into
mov
rol
(bad)
(bad)
inc
cmp
jle
push
jnp
(bad)
xchg
pusha
xor
retf
cwde
dec
pop
mov
jl
xchg
cmp
(bad)
jg
sti
mov
cwde
lods
neg
ins
ss
push
jo
push
stos
js
dec
popa
sti
call
adc
cld
stc
pop
sub
or
pop
or
cmp
jne
mov
das
test
mov
dec
pop
bound
sti
call
lock
mov
push
inc
sti
shr
ss
(bad)
(bad)
call
xchg
sbb
jle
not
dec
out
mov
cmps
std
xchg
pop
(bad)
(bad)
(bad)
call
adc
jns
or
ins
mov
inc
sbb
xor
shl
cmp
or
popa
test
js
bound
pop
xlat
mov
aas
inc
pop
sbb
call
sub
scas
push
(bad)
repnz
lds
(bad)
pop
lock
or
test
xlat
pop
test
(bad)
jl
dec
cmp
or
pop
add
mov
dec
sbb
jo
inc
stos
(bad)
je
inc
shl
vpcmpgtd
dec
in
icebp
iret
sti
pop
mov
(bad)
(bad)
(bad)
call
pop
xor
pop
addr16
ja
or
loope
pushf
iret
shl
sbb
fmul
pop
jmp
(bad)
stc
test
sbb
push
sbb
test
scas
data16
xchg
or
mov
inc
push
(bad)
call
test
mov
scas
push
sahf
leave
cmp
cmp
arpl
mov
push
jnp
in
xor
out
push
push
loopne
cmp
neg
push
not
lock
dec
(bad)
(bad)
sbb
je
inc
mov
(bad)
out
bnd
loope
and
lea
mov
ja
pop
mov
jns
push
shl
(bad)
(bad)
cmp
mov
ins
mov
inc
jle
int
sbb
dec
xor
mov
(bad)
jg
mov
pop
push
in
es
ds
xor
rol
xchg
arpl
(bad)
(bad)
dec
cmp
aas
jecxz
pop
cmp
fisttp
enter
mov
mov
pop
out
loope
adc
or
(bad)
in
enter
adc
cld
pop
mov
pusha
dec
inc
imul
test
mov
cmp
or
(bad)
fdivp
sub
adc
mov
mov
pop
stos
push
jns
in
(bad)
(bad)
dec
jmp
hlt
xor
sbb
xchg
jne
retf
sub
xor
inc
xor
pop
call
xchg
and
stos
dec
mov
sbb
or
(bad)
jg
or
or
hlt
jle
mov
mov
xor
jg
fdiv
jp
repz
clc
int
(bad)
shr
dec
shl
adc
sar
(bad)
call
sub
nop
(bad)
inc
push
push
bound
test
dec
sub
add
(bad)
call
adc
int3
mov
enter
dec
jae
mov
mov
loope
sub
mov
jmp
mov
fcomp
push
out
and
jecxz
or
(bad)
(bad)
(bad)
jmp
push
cmps
jp
and
inc
adc
sub
loopne
push
loop
(bad)
test
lds
je
mov
mov
push
lea
lods
sbb
fild
push
sbb
(bad)
(bad)
(bad)
jg
mul
cmovns
std
xchg
ja
push
loopne
adc
jp
cmps
jo
test
xchg
and
out
inc
mov
pop
(bad)
mov
out
mov
jne
(bad)
mov
mov
in
jo
das
stc
push
loop
(bad)
sub
add
je
jne
cmp
add
call
(bad)
retf
or
rol
cmp
xchg
cmpxchg
cmc
rol
addr16
into
(bad)
(bad)
(bad)
inc
aad
and
and
push
lock
dec
push
push
sub
adc
cdq
jb
adc
inc
loopne
jge
scas
movs
sbb
jmp
inc
jg
fiadd
(bad)
test
fs
aas
adc
jmp
not
stc
lods
jge
sub
xor
mov
out
outs
pop
xchg
push
adc
jno
loop
xchg
adc
(bad)
(bad)
(bad)
push
ja
cdq
lds
ds
imul
push
pop
ins
jge
stos
mov
add
or
repz
push
js
jle
aam
repnz
mov
sub
retf
das
cli
(bad)
out
and
push
cli
mov
jb
push
dec
dec
jmp
xchg
and
dec
mov
out
les
jo
mov
into
(bad)
(bad)
(bad)
push
(bad)
cwde
push
lock
pop
cmps
mov
add
add
inc
push
popa
mov
aad
mov
dec
int
mov
les
jmp
sbb
dec
jp
cmp
jp
xchg
push
sbb
pop
loopne
push
addr16
inc
cwde
ins
out
mov
(bad)
(bad)
(bad)
dec
jge
xchg
mov
fimul
scas
shl
out
sub
nop
cdq
and
popa
test
and
pop
test
ins
aaa
pop
mov
lahf
mov
and
sbb
in
(bad)
(bad)
(bad)
(bad)
(bad)
stc
lea
jae
inc
cmp
mov
sbb
cmc
jle
adc
jg
bound
repnz
(bad)
(bad)
jmp
idiv
out
mov
or
out
in
sar
xchg
test
hlt
push
xchg
mov
or
aas
int3
fild
sbb
sub
aaa
mov
sar
(bad)
jmp
lds
jmp
jl
push
dec
sub
sbb
(bad)
jmp
sbb
fistp
inc
jnp
(bad)
das
xor
pop
and
in
pop
daa
aas
test
(bad)
jg
mov
cmps
call
mov
mov
jne
cdq
cmp
inc
dec
sti
pop
loopne
cld
(bad)
push
jnp
add
daa
add
das
sbb
sbb
sahf
(bad)
fwait
pop
cwde
(bad)
(bad)
(bad)
push
fild
inc
xchg
sbb
push
add
or
adc
mov
les
mov
pop
lock
dec
pop
stc
stos
sbb
pop
cmp
enter
jae
add
adc
adc
in
mov
iret
pushf
cli
lods
imul
mov
sub
(bad)
mov
arpl
inc
jecxz
fnstenv
or
xor
lock
fisub
das
loope
hlt
xor
(bad)
(bad)
(bad)
aas
or
or
dec
jmp
dec
sbb
mov
mov
ror
mov
mov
dec
cmp
mov
icebp
call
out
outs
and
sbb
int
(bad)
(bad)
jg
addr16
fidiv
dec
add
pop
imul
and
(bad)
(bad)
(bad)
inc
push
je
adc
out
mov
and
out
cmp
mov
fnstsw
xchg
(bad)
inc
shl
push
inc
sub
ja
jns
and
(bad)
(bad)
call
push
adc
dec
inc
fwait
in
les
bound
cmp
inc
ja
cmp
pushf
dec
cld
(bad)
(bad)
(bad)
cs
jmp
push
int3
out
cmp
mov
hlt
(bad)
mov
dec
je
(bad)
addr16
(bad)
dec
fwait
or
or
inc
mov
cld
fcmovne
xchg
mov
sub
or
rcl
ror
mov
jno
jb
bound
std
ret
xor
aaa
pusha
xlat
inc
fisttp
xlat
sbb
push
pop
push
icebp
and
or
sar
jle
and
push
adc
(bad)
jmp
imul
fisub
and
push
into
jp
movs
jno
inc
pop
add
jmp
push
lock
aam
jns
fldcw
mov
jnp
fsubr
(bad)
inc
lods
lock
push
(bad)
jns
xor
enter
shr
imul
push
js
mov
(bad)
mov
scas
adc
js
lds
push
loopne
push
rol
mov
je
(bad)
dec
retf
ins
add
cmc
and
mov
jmp
mov
sbb
jmp
scas
fstp
sub
sub
cmps
pop
loope
mov
pop
js
cmps
adc
mov
(bad)
(bad)
(bad)
push
jp
adc
add
aaa
mov
push
jmp
mov
(bad)
(bad)
(bad)
mov
and
push
rcr
shr
imul
lock
(bad)
call
int
mov
outs
pop
pop
pop
loop
jmp
daa
inc
mov
xor
dec
jno
dec
(bad)
and
fild
sbb
dec
gs
jns
(bad)
mov
or
(bad)
xlat
cmp
(bad)
(bad)
(bad)
call
ss
iret
retf
sti
aam
ds
or
mov
jno
xchg
(bad)
outs
adc
repnz
(bad)
(bad)
dec
ins
jmp
or
jae
or
int
movs
fild
repz
mov
dec
sbb
(bad)
(bad)
mov
idiv
mov
push
cld
jb
call
clc
mov
jbe
sbb
loopne
(bad)
push
imul
mov
call
outs
lods
(bad)
(bad)
fild
jb
sbb
out
enter
sub
in
jne
int3
(bad)
(bad)
(bad)
jmp
in
xor
mov
test
aas
hlt
lock
mov
leave
mov
(bad)
pop
clc
pop
push
(bad)
fcmovnb
(bad)
fild
es
xlat
or
pop
sbb
cmp
push
fdivr
loope
(bad)
(bad)
dec
lds
popf
lock
mov
xor
call
ret
mov
(bad)
jmp
cmp
jno
pop
and
outs
mov
aad
cmc
mov
(bad)
out
mov
jg
loope
adc
out
mov
in
in
call
mov
or
rcr
stc
mov
jbe
cdq
xor
add
std
xchg
fild
ins
or
arpl
mov
stos
jne
mov
dec
stos
add
and
es
pop
mov
fnstenv
lods
ret
(bad)
(bad)
(bad)
mov
repz
retf
lods
jge
mov
inc
in
push
mov
mov
aaa
or
call
aam
push
je
in
sbb
push
(bad)
(bad)
(bad)
dec
jo
push
pop
aad
call
jmp
jp
mov
jle
out
sub
sub
(bad)
(bad)
(bad)
call
xchg
sub
push
mov
push
pop
mov
sub
pop
mov
retf
xchg
dec
scas
mov
movs
stos
hlt
mov
hlt
mov
cmp
icebp
gs
test
ds
adc
(bad)
jg
(bad)
cmp
aas
in
loop
sbb
inc
cmc
das
jnp
movs
inc
inc
movs
push
or
retf
push
std
daa
iret
paddsb
push
(bad)
cmp
movaps
(bad)
(bad)
(bad)
inc
cmp
imul
dec
popa
(bad)
cmp
mov
inc
mov
stos
cld
mov
adc
clc
sar
push
xor
(bad)
inc
fstp
sbb
dec
mov
and
xchg
(bad)
jmp
jnp
nop
in
mov
jmp
jb
ins
dec
cmp
cmp
cld
(bad)
(bad)
inc
jle
shl
(bad)
push
in
(bad)
adc
adc
mov
jno
sub
mov
daa
xchg
enter
std
(bad)
and
addr16
dec
mov
stos
cmp
(bad)
dec
sahf
in
add
leave
in
mov
jnp
xor
aam
lods
cmp
jge
(bad)
(bad)
mov
stos
imul
xor
sahf
push
jl
xor
and
sbb
(bad)
lahf
mov
(bad)
(bad)
(bad)
jmp
xchg
imul
xor
int
jge
sbb
movs
arpl
in
sbb
pop
movs
jle
pop
sub
cmp
ins
lahf
cmp
adc
fcomip
push
sub
sub
mov
sbb
xchg
ficomp
push
jmp
mov
(bad)
(bad)
call
mov
xor
mov
loopne
shl
inc
cmp
lahf
jno
or
add
push
(bad)
call
cmps
dec
std
pop
pushf
in
fistp
pop
dec
and
das
add
lods
xchg
adc
adc
mov
inc
test
int3
mov
out
cld
pop
adc
cmc
mov
pop
adc
mov
(bad)
call
sbb
std
xlat
fnstcw
xor
sahf
push
jg
jmp
pop
js
int3
hlt
js
cmc
mov
sbb
out
mov
dec
mov
push
(bad)
jmp
or
sahf
in
jmp
enter
xlat
(bad)
pushf
jge
jge
jg
ror
lods
cmp
mov
ds
mov
out
fcomip
mov
add
push
or
test
or
push
icebp
add
cwde
(bad)
(bad)
jg
push
mov
pop
jp
aam
(bad)
xchg
or
and
mov
or
(bad)
(bad)
dec
pop
ret
mov
ret
inc
push
movs
inc
dec
xor
scas
das
in
lds
(bad)
jmp
cwde
adc
movs
and
aas
pusha
in
jb
call
movs
gs
sti
shl
shl
(bad)
jmp
pop
jecxz
mov
add
dec
out
jmp
dec
ffree
out
test
cmps
cmc
cli
scas
mov
and
cs
jg
out
add
jmp
mov
and
inc
xor
sub
in
cdq
mov
fcmovu
inc
mov
mov
(bad)
call
outs
xchg
jg
leave
je
jmp
cmp
clc
cmc
or
nop
mov
nop
mul
jae
(bad)
(bad)
dec
test
ret
pusha
xchg
xchg
push
test
(bad)
(bad)
dec
sahf
jb
(bad)
fisttp
jle
inc
xchg
pushf
movs
addr16
cmp
(bad)
(bad)
(bad)
push
retf
inc
xchg
adc
enter
jbe
out
jne
sub
add
(bad)
jmp
cs
out
pop
imul
ss
cmc
in
clc
clc
add
sbb
or
jg
sbb
sar
mov
cmp
(bad)
xchg
(bad)
div
mov
cld
ffree
fmul
ja
(bad)
jmp
jnp
iret
mov
push
aam
(bad)
pop
mov
xlat
scas
mov
repz
scas
das
sar
jmp
pop
call
jg
sbb
clc
fiadd
mov
arpl
fld
push
jb
jg
jae
xor
ffreep
jbe
inc
jg
mov
cmp
not
add
fidivr
(bad)
jmp
dec
popa
scas
xchg
mov
push
sbb
outs
pop
xor
imul
xor
ret
(bad)
jmp
mov
call
pusha
dec
out
inc
lahf
xlat
ffreep
fcom
add
(bad)
mov
adc
jnp
gs
gs
push
cmp
lods
push
sbb
and
(bad)
add
pop
jle
mov
mov
(bad)
(bad)
(bad)
(bad)
sti
outs
pop
je
out
popf
adc
loopne
jge
or
fdiv
dec
fisttp
mov
jnp
cmp
mov
xor
not
pop
jg
aaa
(bad)
div
int
(bad)
inc
idiv
ja
(bad)
lock
mov
outs
mov
fdiv
jno
gs
(bad)
(bad)
(bad)
(bad)
mov
(bad)
clc
sub
fmul
sbb
or
add
rol
gs
add
ds
in
fimul
mov
call
(bad)
call
mov
add
mov
pop
inc
mov
xlat
and
test
enter
imul
add
(bad)
(bad)
mov
xchg
or
xchg
add
jae
out
fldenv
idiv
(bad)
(bad)
jg
or
int3
cdq
repz
repz
jns
repz
cs
sub
test
jmp
cli
fistp
arpl
mov
pop
int3
xor
mov
pusha
dec
fstp
cmps
stc
xor
jg
mov
(bad)
(bad)
mov
jmp
call
sbb
cmp
mov
add
in
push
pop
add
pop
or
and
(bad)
ja
sar
add
mov
outs
xor
fst
outs
push
cld
movs
sar
jns
push
mov
push
xchg
pop
xor
mov
clc
push
xor
and
(bad)
mov
sub
pop
xor
lds
cmps
xchg
cmc
int
jae
(bad)
(bad)
(bad)
test
ds
sub
rcr
inc
cli
imul
ins
sbb
xor
(bad)
(bad)
mov
adc
mov
inc
repz
push
ret
and
out
ds
ret
shr
(bad)
(bad)
call
ja
pop
or
outs
sbb
fcom
cmp
ins
pushf
xor
pop
repnz
fs
mov
(bad)
jmp
or
push
xchg
scas
mov
push
sub
cdq
sub
dec
jo
jo
int3
sub
shr
sub
(bad)
(bad)
call
cli
clc
xor
cmp
mov
in
cdq
dec
fst
xor
push
push
frstor
fwait
cmp
scas
nop
(bad)
addr16
push
hlt
ror
movs
jmp
in
pop
or
ret
mov
and
mov
(bad)
(bad)
(bad)
(bad)
ds
xor
leave
mov
sbb
jmp
fmul
rep
fisttp
inc
xchg
(bad)
mov
loope
call
mov
hlt
(bad)
mov
sub
stos
leave
js
mov
addr16
xor
loope
and
popa
mov
push
and
ins
fs
pushf
iret
push
(bad)
inc
mov
(bad)
gs
mov
pop
sbb
outs
add
sti
adc
(bad)
call
xchg
sub
loopne
push
out
aad
mov
pop
cmc
jecxz
push
cmp
dec
clc
add
sbb
pop
test
(bad)
(bad)
(bad)
mov
inc
sub
ret
dec
cmp
mov
(bad)
ficomp
pop
push
sub
ficomp
(bad)
(bad)
push
lds
mov
adc
shrd
lods
mov
sbb
in
(bad)
mov
(bad)
repz
xchg
mov
adc
rcr
pop
icebp
(bad)
call
ret
clc
jecxz
push
mov
mov
xchg
xchg
inc
pop
test
adc
(bad)
(bad)
inc
cmp
pop
pop
ret
aam
add
stos
jl
and
sub
ins
iret
mov
dec
xor
add
into
ret
push
ret
mov
sub
sbb
(bad)
jmp
sub
pop
fs
mov
push
sub
lds
call
push
inc
fbstp
(bad)
or
adc
in
mov
test
mul
sar
(bad)
(bad)
call
add
fs
cmp
fcom
mov
aas
cwde
mov
enter
sub
(bad)
call
push
xor
push
sub
stos
inc
fwait
lea
arpl
mov
push
add
daa
loope
rcr
jge
push
cwde
pusha
mov
dec
mov
push
and
sbb
inc
lahf
into
out
cmp
(bad)
call
(bad)
hlt
bound
(bad)
out
rcl
lea
ret
or
outs
push
mov
add
out
clc
(bad)
(bad)
in
xor
push
stos
aaa
out
cmp
sub
xchg
loope
loopne
sbb
(bad)
(bad)
(bad)
out
cwde
bnd
xchg
pop
out
into
xor
repz
adc
cmp
retf
rcr
and
outs
cmp
sti
pop
mov
(bad)
(bad)
jmp
mov
test
enter
inc
inc
fbstp
(bad)
dec
rcl
mov
push
sbb
(bad)
(bad)
(bad)
cmp
int3
arpl
sar
add
ret
daa
push
retf
cmp
and
inc
fwait
adc
(bad)
(bad)
(bad)
fild
push
jne
js
mov
scas
and
pop
adc
nop
mov
mov
sbb
out
lea
dec
popf
and
icebp
push
imul
icebp
mov
pop
mov
(bad)
call
into
dec
jp
popa
xabort
mov
std
jmp
imul
and
xlat
xlat
inc
(bad)
call
in
fdiv
sbb
pop
mov
mov
popf
inc
sub
(bad)
(bad)
jg
sbb
int3
push
mov
sub
sbb
mov
push
enter
adc
(bad)
mov
adc
push
mov
mov
inc
fcomip
and
(bad)
(bad)
jg
iret
mov
mov
arpl
adc
add
inc
cmp
enter
push
jge
or
ror
pop
inc
adc
lods
fmul
or
sbb
mov
xor
mov
(bad)
(bad)
fcom
jns
int3
jno
fsubr
push
jmp
add
js
(bad)
dec
sub
shl
pop
or
cmp
sbb
sbb
fdivr
(bad)
jmp
xor
movs
mov
cmp
fstp
arpl
push
push
sbb
lods
imul
(bad)
(bad)
(bad)
dec
mov
and
lods
mov
sahf
leave
fmul
popf
jnp
jnp
sti
fisubr
movs
push
aad
push
cwde
pop
jno
dec
std
add
pop
push
repz
sub
test
adc
jmp
or
call
addr16
std
push
in
mov
loop
jns
cmps
imul
jno
or
(bad)
jg
mov
cmp
xor
stc
push
call
(bad)
call
dec
enter
and
jg
lods
ret
and
push
add
(bad)
(bad)
(bad)
jns
lea
into
in
iret
sbb
movs
ss
fwait
(bad)
xchg
pop
mov
enter
xor
cld
sbb
xchg
push
ror
js
es
and
sets
xchg
add
cmp
mov
jmp
mov
out
push
lahf
inc
jg
jns
cmps
add
ucomiss
(bad)
(bad)
(bad)
jg
daa
ins
cmp
or
scas
dec
hlt
imul
hlt
pushf
adc
xchg
ins
mov
(bad)
(bad)
jmp
call
ins
push
cmc
pop
ja
jmp
adc
pop
loopne
sbb
jmp
(bad)
jnp
sbb
cmps
jge
adc
inc
adc
pop
fdiv
and
shl
fcomip
pushf
add
mov
inc
adc
jl
call
(bad)
inc
push
cli
sbb
inc
and
(bad)
(bad)
jmp
fs
inc
mov
or
aam
dec
ret
mov
retf
mov
xor
pop
xlat
(bad)
(bad)
inc
mov
sbb
sbb
(bad)
dec
(bad)
push
xor
imul
fwait
hlt
push
and
jecxz
(bad)
jg
cdq
out
aas
test
mov
aaa
stos
mov
out
lods
adc
(bad)
mov
(bad)
shr
(bad)
cmp
idiv
(bad)
jmp
stos
or
ror
das
sbb
adc
add
mov
mov
(bad)
(bad)
(bad)
jmp
lods
(bad)
aam
pop
jecxz
mov
jns
mov
push
fild
inc
mov
mov
hlt
sub
std
add
sbb
mov
popf
xchg
int3
jo
call
retf
dec
rep
pop
and
xchg
inc
cli
jmp
(bad)
(bad)
(bad)
call
adc
mov
and
ins
test
pop
and
push
out
hlt
neg
js
xor
jmp
mov
jbe
sbb
stos
sbb
dec
loop
in
inc
xchg
pop
xchg
pop
xlat
adc
jg
jmp
cmp
jecxz
jge
jecxz
jo
cmp
mov
cmp
mov
inc
sub
(bad)
(bad)
jmp
inc
or
mov
cmc
mov
nop
mov
adc
in
into
inc
cmp
shr
(bad)
dec
or
aad
mov
jg
sub
pop
hlt
(bad)
jg
adc
cmp
push
mov
jp
sbb
int3
test
cmp
(bad)
jmp
test
mov
mov
ja
xchg
popf
aam
(bad)
lods
leave
xchg
sub
(bad)
(bad)
jmp
add
test
jnp
nop
xchg
xor
lea
inc
dec
mov
pop
pop
stos
jl
xchg
jb
sub
mov
out
cmp
(bad)
(bad)
jg
and
add
cmps
mov
rol
xchg
jmp
pop
mov
mov
outs
clc
scas
mov
push
cdq
test
pop
int3
push
imul
inc
pop
popf
push
scas
(bad)
(bad)
jg
rol
mov
js
rol
xor
xchg
fild
inc
jp
inc
leave
add
fcom
mov
into
aas
popa
inc
mov
(bad)
(bad)
(bad)
mov
and
in
jg
test
retf
fld
xchg
or
or
pop
sbb
jmp
imul
jp
fs
or
xchg
fidivr
pop
nop
and
or
repnz
(bad)
(bad)
in
(bad)
sti
iret
leave
mov
sub
cmp
popf
and
mov
sbb
ja
push
nop
inc
pop
loop
stc
rcl
pop
or
mov
bound
mov
or
adc
dec
inc
adc
imul
mov
add
mov
mov
les
aaa
out
cld
cwde
outs
add
(bad)
(bad)
dec
mov
mov
inc
movs
out
or
lds
cmps
push
jmp
inc
push
pop
and
(bad)
inc
cmc
int
jl
sbb
push
inc
xchg
adc
mov
imul
(bad)
sbb
iret
repnz
iret
cmps
xor
retf
aaa
mov
sbb
fcomp
xchg
test
imul
lock
add
mov
in
cli
(bad)
(bad)
call
stos
sbb
mov
pop
adc
mov
mov
push
jge
out
add
pop
push
inc
clc
push
sbb
sbb
add
push
push
jmp
sbb
cmc
jae
pop
push
movs
popf
dec
dec
je
cmp
dec
aad
cmp
pop
int
call
jp
cs
sti
mov
adc
fs
lahf
pop
nop
jecxz
dec
inc
outs
xor
call
mov
(bad)
jmp
jmp
lea
mov
add
push
std
xchg
push
je
(bad)
fbld
ins
loopne
stos
(bad)
dec
jl
adc
call
aaa
cdq
ret
pop
js
repnz
dec
jbe
aam
sbb
sbb
sub
mov
push
sub
sbb
xchg
pop
inc
jnp
(bad)
(bad)
inc
jg
dec
fbld
out
int3
and
scas
add
sub
xchg
and
call
push
bound
into
sti
aam
pop
add
jg
(bad)
fldcw
xchg
inc
fndisi(8087
add
xlat
out
lods
repz
jae
inc
imul
or
dec
aad
pushf
rol
outs
jl
(bad)
dec
jp
mov
fist
test
push
push
fld
lock
push
xchg
hlt
push
xchg
mov
fs
cmp
nop
cmp
outs
or
sbb
sahf
mov
pushf
or
xchg
sar
push
hlt
test
sar
jb
iret
test
dec
hlt
ja
movs
jno
in
push
aaa
push
(bad)
outs
xchg
(bad)
(bad)
(bad)
(bad)
jmp
sbb
test
mov
pop
loopne
dec
mov
cmc
xchg
aam
xor
mov
(bad)
jmp
or
and
jne
mov
mov
or
lods
rcl
(bad)
(bad)
(bad)
jmp
sahf
dec
dec
cmps
cmp
daa
test
or
retf
loope
adc
sbb
out
(bad)
jmp
mov
mov
lds
inc
ret
ds
les
(bad)
call
cli
xchg
cmp
inc
aam
pop
or
icebp
mov
add
(bad)
dec
and
push
adc
xchg
test
sbb
mov
icebp
mov
movs
jmp
nop
cli
sbb
mov
or
(bad)
(bad)
call
add
inc
popf
adc
inc
ins
sub
bound
lds
imul
(bad)
call
sar
ja
cs
arpl
cmp
fild
mov
call
cmp
(bad)
(bad)
(bad)
fdiv
sub
jns
fdivrp
cld
repnz
or
pop
das
cmps
sbb
adc
or
fist
jne
imul
cli
push
inc
call
bound
(bad)
dec
cmp
ret
push
jle
stc
into
pop
dec
jmp
(bad)
mov
jmp
cmc
enter
cmps
add
aam
jmp
cli
(bad)
(bad)
call
mov
loopne
xor
daa
retf
iret
mov
retf
mov
dec
mov
das
sar
mov
bound
push
clc
dec
mov
jnp
rcl
or
push
(bad)
jmp
fwait
pop
imul
inc
pop
out
jl
mov
jb
sbb
(bad)
(bad)
(bad)
inc
cld
adc
dec
push
jle
mov
fwait
cmp
cmp
adc
stc
shl
cmp
jecxz
cmp
mov
(bad)
(bad)
(bad)
inc
push
pop
fadd
sbb
mov
jl
xor
xchg
cdq
cmp
(bad)
add
pop
cmp
scas
(bad)
push
jns
ret
test
jmp
clc
(bad)
(bad)
(bad)
jge
popa
(bad)
cmp
adc
cmps
jle
in
(bad)
lds
or
cmp
cmc
lahf
nop
mov
(bad)
(bad)
(bad)
call
mov
push
test
popf
aam
xor
pop
clc
fwait
rol
sbb
imul
dec
leave
ret
lock
fcmove
and
jge
or
mov
ret
xchg
test
or
(bad)
iret
adc
jb
lods
nop
in
mov
cwde
pusha
mov
enter
gs
(bad)
(bad)
in
clc
cmp
retf
dec
shr
cmp
fild
(bad)
dec
pop
nop
xor
(bad)
call
mov
mov
or
add
jno
ins
xchg
push
push
enter
jp
sbb
movs
sub
dec
push
cdq
xchg
xchg
(bad)
(bad)
(bad)
cmp
int3
jmp
xor
push
push
repz
data16
sbb
test
cmps
sbb
or
inc
scas
pop
movs
xchg
xchg
jmp
sub
fwait
and
into
(bad)
repnz
push
xchg
push
push
mov
jmp
add
scas
fdivr
xor
pop
and
les
jecxz
xor
inc
jbe
(bad)
(bad)
(bad)
jmp
or
test
dec
(bad)
pop
cmp
jo
cli
mov
sti
adc
aaa
mov
mov
fcomip
jmp
xchg
pop
and
push
pop
adc
mov
push
idiv
and
jg
call
in
mov
adc
pop
out
or
test
xor
outs
mov
add
std
pop
hlt
call
mov
ror
test
pusha
adc
sahf
xor
inc
add
les
pop
adc
in
std
(bad)
(bad)
jmp
jl
inc
nop
mov
push
lea
(bad)
in
gs
enter
ficom
(bad)
(bad)
jg
sbb
dec
push
fdiv
cdq
xor
retf
xchg
pusha
mov
dec
(bad)
(bad)
(bad)
dec
loopne
adc
inc
mov
addr16
pop
bound
sbb
or
jge
sbb
sub
add
out
cwde
dec
jnp
mov
popf
test
inc
clc
jmp
cwde
mov
stos
jno
xchg
les
sar
pop
(bad)
mov
in
shl
cmp
(bad)
dec
inc
add
(bad)
ror
in
or
(bad)
call
mov
jns
jns
in
adc
out
ror
add
and
scas
(bad)
(bad)
inc
jbe
fidiv
cmp
int
and
mov
ins
mov
inc
pop
and
adc
(bad)
(bad)
jmp
pop
and
je
popa
test
add
fdiv
jo
movs
inc
int
mov
jae
sbb
(bad)
(bad)
(bad)
inc
ret
sbb
imul
mov
cmps
jge
adc
adc
addr16
das
(bad)
inc
pmaxub
jge
mov
and
or
push
inc
mov
loopne
pop
inc
pop
std
inc
sub
cmp
add
dec
or
data16
cmp
jge
jg
(bad)
(bad)
push
inc
push
push
xchg
or
xor
mov
lods
sti
and
outs
hlt
cmps
inc
inc
ds
inc
call
ret
test
add
add
in
ss
(bad)
(bad)
jmp
push
test
shl
dec
inc
daa
popa
push
adc
shr
mov
(bad)
(bad)
(bad)
cmp
call
mov
or
or
jg
(bad)
jns
jb
pop
stos
inc
test
(bad)
(bad)
(bad)
mov
mov
jp
imul
or
inc
fiadd
pop
jle
call
ins
push
js
scas
out
sub
es
adc
inc
jne
div
and
(bad)
dec
xor
out
mov
lods
add
retf
call
es
daa
sti
stos
int3
call
pop
pop
sub
mov
sar
sub
popa
cmc
push
sbb
inc
pop
imul
jp
lahf
cli
(bad)
(bad)
(bad)
call
bound
cld
mov
cld
push
add
push
(bad)
mov
fisub
sub
(bad)
(bad)
push
and
add
scas
out
ds
fstp
pop
sahf
add
jne
popa
xchg
xlat
ror
adc
mov
test
dec
rcl
popf
out
call
xchg
cld
cmps
imul
ss
(bad)
dec
arpl
cmp
pop
shl
repz
mov
inc
fisttp
(bad)
(bad)
(bad)
(bad)
cmp
pushf
imul
adc
fs
pop
cmp
popf
jns
push
ret
adc
add
(bad)
sti
nop
test
into
sbb
adc
push
jno
inc
jns
sub
int
test
sub
xchg
xor
dec
push
jge
push
call
(bad)
jmp
fist
daa
mov
push
cmp
ins
mov
mov
dec
push
xlat
mov
outs
std
or
test
dec
int
ret
ins
xchg
adc
ror
sti
mov
call
dec
lgs
mov
fistp
out
popa
dec
and
and
push
xchg
or
inc
add
mov
mov
daa
mov
out
lock
or
sti
(bad)
push
pop
adc
jmp
push
push
xchg
arpl
push
push
mov
add
not
aaa
test
push
mov
(bad)
(bad)
cmp
inc
mov
add
std
push
push
or
cmps
(bad)
(bad)
jmp
mov
pop
test
std
popf
pop
div
or
(bad)
push
mov
xchg
loop
mov
jg
fsubr
or
pusha
jns
cmp
jp
xchg
pop
mov
ja
(bad)
(bad)
jmp
in
test
adc
mov
fcomp
not
nop
xchg
loope
popf
jle
(bad)
(bad)
dec
lahf
adc
jae
stos
mov
push
es
out
repz
mov
push
push
dec
add
mov
(bad)
pusha
clc
(bad)
dec
adc
enter
std
les
and
(bad)
(bad)
out
pop
push
mov
mov
hlt
mov
inc
outs
xchg
xor
jo
(bad)
inc
sbb
push
mov
sub
inc
addr16
xchg
cmp
gs
addr16
(bad)
push
outs
mov
adc
add
aam
arpl
retf
ins
aam
mov
ins
call
pop
xchg
xor
pop
arpl
cs
imul
(bad)
mov
cmp
xlat
loope
outs
test
adc
bnd
loope
(bad)
call
and
add
shl
adc
mov
call
(bad)
(bad)
mov
mov
cdq
mov
adc
cmp
nop
jmp
fadd
add
dec
and
iret
out
add
and
(bad)
jmp
iret
iret
jno
jmp
sbb
mov
push
in
call
push
into
mov
hlt
mov
sub
fdivrp
(bad)
(bad)
push
repnz
mov
jns
mov
nop
into
fbstp
neg
(bad)
push
mov
(bad)
(bad)
(bad)
call
(bad)
push
in
lahf
jmp
cmp
cmp
aad
aad
cmp
test
sbb
adc
push
ret
inc
sti
add
data16
jmp
add
jp
xchg
popa
jmp
loop
fistp
jmp
fild
icebp
push
pop
cmp
push
jne
test
test
scas
in
nop
sar
popa
bound
leave
out
cli
jmp
inc
mov
ror
js
mov
dec
repnz
dec
sub
xchg
inc
sbb
xlat
imul
(bad)
jg
inc
cmovbe
jecxz
mov
mov
addr16
xchg
clc
jmp
lock
jmp
imul
loop
jmp
mov
push
mov
aad
shr
mov
test
stc
or
jnp
es
(bad)
xchg
ret
hlt
hlt
mov
cmps
mov
xchg
lea
out
div
mov
ret
and
fcomip
(bad)
inc
mov
add
ja
xchg
cdq
movs
shl
or
push
pop
jne
adc
pop
add
jmp
cmp
test
mov
pop
je
jecxz
dec
popa
pop
xorps
int
jne
pusha
sbb
jb
lods
pop
push
jmp
(bad)
push
xchg
jne
mov
test
inc
push
adc
or
(bad)
mov
xor
outs
inc
call
inc
pop
xchg
pop
mov
es
mov
dec
xchg
push
loope
pcmpeqb
push
mov
call
rcl
jp
ja
ret
sbb
jae
fwait
xchg
rcr
lahf
(bad)
jmp
sbb
loopne
push
dec
xchg
jnp
repnz
jmp
(bad)
push
std
cld
jnp
loopne
dec
and
jl
dec
jle
das
add
push
cwde
bound
or
es
(bad)
(bad)
dec
out
lds
popf
stc
jge
push
ins
fistp
mov
add
push
int3
movs
or
(bad)
jmp
push
dec
stc
adc
mov
inc
mov
(bad)
(bad)
(bad)
push
stos
lahf
sub
cmps
jo
ror
push
xchg
test
adc
fistp
leave
xor
(bad)
call
xchg
mov
cmp
es
inc
mov
sub
retf
mov
(bad)
jmp
scas
pop
aad
jo
loope
and
xchg
mov
mov
pushf
and
fcmovb
dec
pop
pop
lahf
cld
mov
scas
inc
pop
xor
(bad)
mov
(bad)
mov
lods
stos
retf
stos
call
loope
mov
mov
jae
jo
js
outs
retf
(bad)
sbb
stc
fld
or
jb
lods
arpl
in
dec
aas
mov
pusha
or
push
stos
mov
push
fstp
out
pop
sub
ja
jb
add
in
je
cmp
or
(bad)
(bad)
jmp
and
lods
call
push
xchg
pop
cmps
loopne
repnz
xchg
inc
std
or
bound
dec
fmul
pop
inc
test
sub
push
add
sbb
fcmovnbe
pop
cs
mov
shl
mov
or
mov
cmp
or
mov
mov
lds
xor
add
pop
pop
stos
mov
mov
add
jg
jmp
imul
jmp
mov
in
jge
mov
lods
inc
cmps
dec
pop
hlt
shl
jbe
sub
ror
call
inc
adc
shl
(bad)
(bad)
(bad)
inc
jmp
les
cmc
adc
or
ds
and
pop
mov
(bad)
call
fsubp
push
pop
ds
je
mov
cdq
dec
xor
(bad)
push
cmp
int
xor
pop
adc
test
pop
sbb
sbb
cmp
fdivr
fdivr
lods
outs
mov
jle
jnp
fdivr
mov
push
xchg
pcmpgtb
jmp
pop
jg
(bad)
push
sbb
iret
mov
add
adc
inc
(bad)
mov
pop
xor
sbb
enter
inc
cmp
fnstcw
(bad)
call
(bad)
jle
fcomip
lea
or
xchg
add
pop
or
enter
and
(bad)
(bad)
(bad)
jmp
aad
aad
or
sbb
push
not
cmc
adc
sbb
mov
int3
or
(bad)
(bad)
jmp
out
or
fild
cwde
cmps
mov
cwde
or
inc
inc
push
shl
je
or
dec
ins
pop
cld
adc
xor
xchg
push
in
jp
adc
sbb
dec
jmp
fmul
and
ins
icebp
(bad)
(bad)
call
cmp
mov
xchg
je
stos
xchg
inc
push
sbb
test
inc
push
mov
or
xchg
fbld
enter
cli
scas
popa
call
dec
cmp
and
mov
(bad)
call
ins
(bad)
jbe
or
push
sbb
or
inc
jae
adc
test
retf
jecxz
(bad)
(bad)
(bad)
jmp
(bad)
xor
mov
inc
dec
call
mov
and
push
ror
cli
out
out
cli
push
sbb
jmp
mov
xchg
or
enter
inc
(bad)
(bad)
(bad)
push
cmc
inc
(bad)
cli
sub
test
push
call
stos
and
lahf
sbb
movs
inc
adc
pop
(bad)
fistp
mov
sub
and
mov
int3
xor
mov
popf
xor
fisubr
iret
and
mov
idiv
bound
mov
je
fadd
mov
(bad)
rcr
jp
fnstsw
int3
jg
push
add
dec
(bad)
jmp
imul
jbe
cwde
setp
(bad)
(bad)
(bad)
inc
jle
not
inc
test
ret
cmp
xlat
xor
mov
mov
(bad)
(bad)
(bad)
push
inc
sbb
push
or
cs
adc
push
push
mov
dec
adc
loope
mov
(bad)
cld
int
jge
jb
mov
fmul
pop
neg
and
xor
mov
inc
or
cmp
stos
(bad)
dec
sub
add
pop
pop
(bad)
outs
pushf
xchg
xor
mov
div
not
fimul
jmp
sar
call
mov
xchg
(bad)
loope
int
mov
mov
mov
adc
or
push
std
push
shr
out
(bad)
rcr
or
sti
arpl
rcl
(bad)
(bad)
mov
adc
(bad)
or
stos
ror
(bad)
clc
test
in
adc
xchg
(bad)
(bad)
(bad)
call
cs
test
jo
or
fild
out
test
add
(bad)
(bad)
jg
lods
stos
jb
ret
fadd
data16
test
nop
push
mov
retf
icebp
push
int3
xchg
clc
(bad)
(bad)
call
inc
add
pop
pop
mov
cli
cmc
jb
xchg
das
add
mov
fwait
(bad)
(bad)
mov
pushf
mov
retf
mov
fisub
inc
push
ins
push
mov
inc
loopne
out
pop
ror
pusha
out
jmp
inc
out
imul
cli
cmp
outs
sbb
and
hlt
sbb
xor
jge
pop
in
pop
in
(bad)
inc
cmp
das
push
clc
inc
or
vpaddw
scas
xchg
retf
pop
(bad)
(bad)
(bad)
call
retf
ja
dec
mov
sub
sub
sbb
in
jno
jle
popf
dec
aaa
sbb
dec
or
call
and
cli
(bad)
dec
popf
iret
mov
push
call
jecxz
cmp
js
(bad)
inc
dec
mov
mov
push
pop
imul
cs
(bad)
(bad)
(bad)
out
push
fst
mov
adc
in
icebp
add
fmul
sbb
jmp
ret
sub
test
(bad)
(bad)
push
in
(bad)
cwde
sub
retf
inc
call
pop
mov
imul
icebp
(bad)
(bad)
(bad)
cmp
ds
in
xchg
jnp
xchg
dec
xchg
(bad)
repnz
jns
in
cli
mov
(bad)
(bad)
(bad)
fistp
xchg
cmps
daa
(bad)
(bad)
xor
mov
das
iret
ret
fimul
in
(bad)
(bad)
(bad)
jmp
jns
shr
ret
mov
mov
mov
inc
jl
loop
call
popf
loop
loopne
fsubr
mov
fldcw
and
nop
lds
mov
cmps
jmp
fild
cmp
push
add
dec
mov
fbld
outs
out
xor
mov
movs
or
nop
test
out
aam
inc
cmp
(bad)
std
cmp
int
and
jnp
add
mov
jne
or
js
mov
(bad)
(bad)
(bad)
cli
and
add
bound
pop
or
mov
add
pop
mov
mov
or
mov
je
inc
pop
mov
dec
stos
sub
loopne
iret
(bad)
(bad)
(bad)
push
jne
or
dec
adc
sub
jmp
and
(bad)
in
(bad)
in
std
xchg
jnp
pop
je
(bad)
jg
mov
dec
icebp
mov
nop
add
(bad)
out
test
shr
(bad)
pushf
test
push
test
push
ja
dec
pop
or
xor
shr
xchg
jg
icebp
fldcw
shl
jbe
(bad)
(bad)
inc
adc
fwait
je
pop
cmps
xchg
xor
push
xchg
cmps
add
stc
mov
rol
(bad)
(bad)
(bad)
(bad)
mov
push
mov
jl
xor
cmp
retf
sub
loop
inc
xor
dec
xor
(bad)
pop
ins
xchg
fistp
push
scas
pusha
push
xchg
ficom
and
dec
lock
jmp
in
(bad)
(bad)
(bad)
mov
sbb
addr16
and
pop
jnp
jae
xchg
mov
pop
or
or
add
call
push
adc
dec
xchg
cmps
div
out
xlat
in
lds
(bad)
call
mov
cmp
rcl
and
retf
cmps
mov
mov
into
dec
ret
push
jp
(bad)
(bad)
(bad)
(bad)
aas
hlt
xchg
rcr
mov
jecxz
jmp
lahf
dec
add
push
push
test
dec
jl
xchg
std
ss
aad
sbb
cmc
(bad)
(bad)
jmp
sahf
pop
mov
mov
jo
scas
mov
sbb
call
add
outs
jle
add
repz
add
imul
fdivr
mov
nop
sbb
es
outs
sub
fldcw
push
(bad)
jg
movs
add
pop
xchg
cmp
aam
mov
or
dec
rcl
(bad)
(bad)
(bad)
inc
lock
sub
movs
push
(bad)
mov
mov
in
test
ss
jp
(bad)
(bad)
(bad)
jmp
stc
jg
shl
jg
test
sub
out
movs
push
pop
dec
mov
enter
mov
test
(bad)
pop
pushf
icebp
out
adc
xchg
(bad)
mov
(bad)
mov
mov
cdq
pop
popa
pushf
rol
lods
sbb
ds
or
imul
inc
dec
push
mov
jb
jl
add
jg
imul
jle
dec
adc
cmps
dec
outs
jne
icebp
(bad)
inc
adc
lahf
arpl
add
add
daa
xor
mov
xor
lods
adc
imul
movs
jge
mov
ins
sub
xchg
xchg
(bad)
(bad)
jmp
jle
enter
shr
sub
shl
mov
daa
sub
(bad)
(bad)
(bad)
jmp
outs
sub
pop
push
in
dec
ds
sbb
ins
cmp
add
xlat
mov
(bad)
(bad)
push
adc
push
mov
sub
xor
iret
mov
loopne
icebp
not
mov
mov
(bad)
(bad)
(bad)
out
icebp
cmp
and
imul
nop
out
stc
push
mov
stos
push
pop
fdiv
or
jl
(bad)
(bad)
jmp
dec
cli
outs
mov
cmp
sbb
add
mov
out
inc
mov
(bad)
(bad)
out
push
push
add
inc
sbb
add
shl
jb
cmp
or
push
je
pop
and
cmp
(bad)
(bad)
(bad)
out
cmp
out
in
pop
adc
pop
nop
cmp
stos
jns
mov
pusha
js
pop
inc
push
add
lea
push
data16
ins
jbe
or
jno
mov
in
xchg
sbb
add
xor
jb
stos
mov
xchg
push
lock
mov
jmp
cmp
loop
ret
shl
loop
into
(bad)
(bad)
jmp
shl
shl
call
out
aaa
cdq
mov
push
cli
outs
ins
(bad)
(bad)
(bad)
call
xchg
sbb
mov
movs
(bad)
div
dec
adc
adc
nop
ss
movs
iret
jecxz
fld
pusha
inc
inc
adc
lods
repz
and
cmps
(bad)
(bad)
(bad)
jmp
mov
fwait
pushf
pop
xchg
sbb
fs
sbb
push
add
outs
push
jmp
(bad)
lea
fsubr
dec
adc
popf
test
in
xor
(bad)
(bad)
inc
dec
mov
xchg
lods
xchg
scas
jbe
xor
out
pop
mov
or
into
sub
jg
mov
jnp
(bad)
cmp
mov
in
xchg
fsubr
sub
(bad)
(bad)
(bad)
inc
inc
mov
loop
xor
pusha
push
push
in
inc
pop
popf
pop
scas
movs
and
pop
fimul
(bad)
(bad)
(bad)
dec
(bad)
imul
sahf
es
je
add
xchg
fcomp
jo
cmc
outs
sub
jg
fninit
or
arpl
sub
sbb
push
sub
mov
and
retf
inc
xchg
jge
mov
call
cwde
stos
jg
or
adc
sub
inc
inc
jae
test
and
mov
add
int3
pop
xchg
test
inc
in
sbb
mov
ds
fwait
mov
outs
cmps
xchg
jo
sub
jg
into
jne
mov
bt
cdq
sar
push
xchg
pop
dec
call
mov
mov
or
jne
call
mov
cmp
inc
inc
or
cmp
xlat
adc
adc
jmp
(bad)
dec
jl
cmp
les
(bad)
mov
enter
js
jae
lahf
sbb
mov
ins
sub
out
xor
or
xlat
(bad)
fcomip
call
loopne
jmp
loop
imul
cs
pop
and
add
push
out
jmp
movs
js
jo
out
push
or
mov
cmovb
cmp
retf
mov
(bad)
push
xor
xchg
retf
jo
adc
inc
inc
jp
sub
add
call
push
ins
push
ja
(bad)
scas
test
loopne
and
call
leave
sub
lods
ds
push
sbb
cmp
xchg
std
stos
dec
dec
lahf
add
(bad)
(bad)
(bad)
push
mov
pusha
ja
in
xor
(bad)
mul
add
cmp
fsubr
test
call
mov
test
adc
inc
popf
mov
mov
add
(bad)
call
sbb
stos
aad
sub
repnz
xor
mov
or
adc
push
adc
cmps
(bad)
(bad)
jmp
xchg
pop
aam
push
jns
jne
cmp
ja
(bad)
ins
or
jmp
aad
aad
test
fstp
scas
mov
jne
mov
data16
mov
push
push
aaa
xlat
hlt
(bad)
loopne
add
cmp
(bad)
jp
iret
iret
sbb
inc
mov
sbb
fnstcw
pushf
retf
aaa
sub
sti
popf
add
add
jmp
mov
adc
(bad)
(bad)
xlat
xchg
and
ja
cli
mov
sub
xor
push
cmps
mov
sti
cld
sbb
pop
cmp
(bad)
inc
mov
fcom
daa
fild
fwait
xchg
pusha
outs
popf
jp
mov
jb
pop
cmc
pop
or
sti
mov
xor
jmp
add
xor
ficomp
and
cmps
or
psadbw
(bad)
jmp
push
loop
nop
aad
scas
and
mov
out
paddw
loope
push
gs
ret
mov
push
ss
(bad)
(bad)
repz
iret
pop
push
push
lock
(bad)
dec
into
xor
outs
add
int
lahf
in
in
daa
add
pop
xchg
jne
out
xchg
(bad)
inc
inc
cld
mov
ss
dec
in
call
jg
dec
and
fld
pusha
push
mov
mov
cmp
std
(bad)
(bad)
inc
push
js
outs
add
push
rol
test
dec
jecxz
(bad)
call
cs
cmp
inc
mov
fst
or
and
jg
jecxz
std
jmp
lahf
cdq
jmp
ret
mov
push
(bad)
(bad)
fild
mov
call
ret
imul
call
jmp
call
xchg
outs
sti
iret
jo
xor
mov
add
aas
dec
out
push
pop
(bad)
jno
es
(bad)
dec
jecxz
xchg
fcmove
int
sti
mov
fwait
xchg
fdivr
das
clc
adc
push
sub
ficomp
mov
std
push
(bad)
cmp
inc
repz
outs
(bad)
(bad)
jg
nop
lods
push
jg
(bad)
push
and
arpl
fiadd
mov
sbb
cld
cmp
xchg
aaa
jmp
jecxz
stos
xor
sti
pop
and
repnz
and
test
push
mov
loopne
ins
jnp
adc
pop
fpatan
ins
mov
(bad)
fsubr
out
sub
add
sub
push
(bad)
xchg
rcl
sub
mov
out
movs
add
arpl
jb
mov
(bad)
jg
icebp
mov
add
push
fs
adc
sbb
jp
pop
mov
jmp
fist
xchg
xor
cld
ret
pop
(bad)
xchg
sub
pop
cmp
sub
jmp
shr
pop
jmp
fs
dec
hlt
test
xor
(bad)
fild
and
sub
(bad)
xor
dec
adc
xchg
mov
sub
jae
(bad)
(bad)
call
push
imul
jge
and
sbb
mov
jp
jmp
sub
mov
mov
mov
retf
mov
scas
in
adc
aad
leave
sbb
xchg
inc
mov
(bad)
mov
iret
mov
cmps
adc
mov
test
add
(bad)
call
cmp
mov
push
cs
mov
jmp
call
jge
es
xchg
push
mov
ret
outs
push
cmc
je
ret
cmc
popa
push
daa
inc
repz
(bad)
(bad)
(bad)
jg
xor
mov
mov
mov
dec
aam
and
rol
dec
sbb
mov
mov
into
xor
daa
mov
add
pop
(bad)
(bad)
(bad)
(bad)
jns
(bad)
out
aad
test
jecxz
inc
sbb
out
mov
clc
sbb
xor
icebp
pop
pop
(bad)
(bad)
(bad)
inc
mov
jns
adc
in
sbb
jge
dec
scas
xchg
sbb
push
push
sbb
push
(bad)
jp
xor
mov
fwait
movs
repnz
test
pushf
sti
mov
sar
icebp
xchg
dec
jo
add
outs
and
(bad)
fild
test
in
pop
adc
push
(bad)
(bad)
jmp
cld
push
jp
mov
int3
cmp
cmp
call
(bad)
call
adc
loope
rol
shl
test
pop
cmp
adc
call
dec
retf
(bad)
mul
pop
and
adc
pusha
mov
mov
(bad)
(bad)
call
std
xor
adc
cmps
pop
call
adc
loop
mov
in
(bad)
(bad)
(bad)
(bad)
mov
pop
scas
aam
les
mov
les
inc
jbe
fistp
mov
cli
(bad)
lea
dec
xchg
and
push
shrd
(bad)
(bad)
(bad)
(bad)
fidivr
jno
sbb
rcr
sub
(bad)
rcr
cdq
adc
daa
ret
sti
gs
xlat
(bad)
(bad)
(bad)
inc
aam
push
pop
adc
(bad)
movs
sub
pop
rol
repnz
jle
xchg
out
out
cmp
ja
or
sub
lahf
in
ja
sub
dec
pusha
add
pop
(bad)
(bad)
(bad)
(bad)
in
and
add
push
pop
cli
cmp
xchg
pushf
stos
push
ss
jae
add
adc
adc
mov
mov
xchg
(bad)
test
in
shl
or
movs
rcr
mov
(bad)
call
sub
dec
(bad)
mov
inc
test
mov
mov
cmp
je
and
or
stos
(bad)
inc
mov
icebp
cs
xchg
aas
xchg
cmc
sbb
test
je
add
in
push
in
fidivr
add
(bad)
inc
loope
lahf
jmp
(bad)
cmps
cmp
rcr
lahf
push
pop
fwait
out
xchg
(bad)
(bad)
jg
out
aaa
popa
sbb
push
push
out
nop
ret
push
cmp
std
lahf
sub
push
(bad)
(bad)
(bad)
sti
cs
sbb
sub
es
ja
loope
or
xor
or
cmps
gs
popa
mov
mov
clc
mov
daa
jle
jmp
(bad)
(bad)
js
cli
icebp
pop
xor
inc
out
mov
xor
in
(bad)
(bad)
(bad)
(bad)
cmp
push
inc
push
(bad)
shl
inc
mov
inc
or
and
cdq
mov
(bad)
(bad)
call
jl
push
imul
mov
dec
sbb
enter
or
daa
pop
imul
fdivr
(bad)
(bad)
(bad)
fldenv
fninit
call
or
xchg
push
imul
sbb
pop
out
dec
and
jnp
jns
nop
(bad)
jmp
dec
inc
imul
inc
adc
add
mov
cmp
push
ja
lock
(bad)
(bad)
jmp
(bad)
or
ret
pop
adc
and
mov
enter
cdq
push
jmp
xchg
xor
pusha
int
(bad)
mov
movs
mov
not
sub
adc
dec
sub
adc
add
mov
push
call
call
daa
lods
test
test
lods
fld
cmp
mov
adc
mov
sub
les
jmp
mov
cld
pop
popf
sar
in
sub
inc
sub
hlt
inc
add
push
in
clc
leave
push
in
pop
dec
jb
(bad)
(bad)
mov
out
scas
dec
sbb
aas
sub
inc
sbb
pop
adc
cli
pop
pop
xor
call
add
test
mov
std
in
out
push
fld
sbb
rcl
jne
lods
(bad)
(bad)
(bad)
push
sub
sti
mov
pop
jo
or
outs
or
and
sbb
call
pop
fs
into
sbb
xchg
mov
jl
call
(bad)
jmp
add
add
ins
dec
push
and
test
push
sbb
(bad)
(bad)
(bad)
mov
mov
in
int
adc
lods
fdivrp
les
popa
into
std
mov
fmul
dec
icebp
mov
mov
jle
idiv
cmp
mov
sbb
cmp
(bad)
mov
mov
loopne
mov
jmp
xchg
test
(bad)
(bad)
jmp
bound
jecxz
rol
fnstcw
xor
cmp
mov
dec
sbb
(bad)
(bad)
(bad)
dec
or
mov
gs
mov
push
lods
push
mov
inc
es
stc
xor
hlt
(bad)
lods
sub
scas
cli
(bad)
in
push
jb
stc
stos
ret
mov
fs
add
push
mov
scas
cmp
(bad)
call
mov
xchg
xchg
add
icebp
mov
xchg
pop
mov
movs
mov
out
jl
aam
mov
repz
rcr
mov
fwait
popa
sar
push
test
loope
(bad)
(bad)
dec
inc
xchg
mov
sub
pushf
hlt
ds
les
push
rol
xchg
inc
xor
std
mov
shr
retf
(bad)
dec
(bad)
aam
in
adc
mov
out
les
das
pop
stc
add
inc
push
cli
(bad)
add
mov
(bad)
(bad)
call
mov
std
jecxz
pop
and
dec
mov
add
xchg
lock
dec
cli
(bad)
(bad)
cmp
das
enter
mov
mov
fstp
sub
ret
out
add
imul
(bad)
cmp
push
aam
sbb
int
or
int3
dec
das
adc
inc
aas
xchg
mov
push
pop
adc
ds
retf
jle
ss
jmp
hlt
rep
loopne
add
mul
(bad)
out
jg
out
hlt
inc
jb
mov
inc
jb
aaa
enter
jnp
inc
in
jg
jmp
pop
mov
aaa
push
stos
jo
and
fs
test
add
rol
adc
int
pop
xchg
(bad)
(bad)
call
mov
mov
xor
call
ja
call
inc
push
arpl
mov
lahf
pop
aaa
movs
call
add
cmp
(bad)
(bad)
jmp
add
retf
prefetch
or
inc
fild
sahf
adc
inc
(bad)
xor
(bad)
(bad)
call
and
sub
push
mov
inc
fld
movs
xor
(bad)
(bad)
jle
jl
stos
pop
arpl
cmp
add
adc
jmp
inc
out
imul
(bad)
cmp
out
cmp
fisttp
sti
std
inc
mov
cmp
sub
mov
add
dec
mov
mov
or
cld
mov
or
or
jno
pop
repnz
loopne
push
sbb
dec
add
popf
or
pop
xlat
es
sbb
inc
cmp
pop
cmps
xlat
(bad)
(bad)
(bad)
jmp
scas
or
mov
jno
xor
test
sbb
rcl
sbb
ds
cmp
mov
(bad)
(bad)
jmp
push
adc
or
cli
ficom
add
xor
sub
mov
stos
(bad)
jmp
xchg
call
push
lods
mov
pop
idiv
inc
cld
sahf
es
cvttps2pi
push
cld
(bad)
(bad)
jnp
aaa
repz
push
scas
(bad)
inc
ret
inc
jmp
mov
stos
cmps
test
and
ins
jb
xchg
mov
fs
in
jecxz
push
imul
loopne
push
and
(bad)
fs
mov
cmp
clc
xchg
jecxz
in
jae
jge
stos
lock
inc
xchg
add
or
cmp
(bad)
mov
or
or
idiv
mov
in
out
inc
xchg
ja
dec
div
mov
jle
out
xchg
jo
xor
(bad)
(bad)
jmp
inc
popf
xchg
jge
push
inc
cmp
jge
jnp
mov
fs
and
jno
jns
ja
cmp
jne
out
adc
inc
sahf
or
movs
pop
push
lds
add
nop
rol
or
in
leave
enter
adc
pushf
sbb
int
push
xor
inc
push
sub
adc
mov
mov
retf
sub
(bad)
out
and
(bad)
(bad)
jg
ja
fisttp
mov
sbb
sub
dec
push
pop
push
xchg
mov
test
pop
pop
das
cmc
jae
mov
sub
push
xor
sar
mov
pop
(bad)
(bad)
(bad)
inc
loop
pusha
jne
xchg
bound
sbb
in
test
aam
jno
lods
sti
lock
(bad)
jmp
inc
mov
arpl
and
inc
push
shr
lds
cmc
sbb
inc
inc
outs
clc
lds
pusha
dec
jge
xor
push
fisub
(bad)
(bad)
(bad)
inc
push
int
sbb
jbe
clc
jecxz
jnp
in
das
pop
sbb
pop
sbb
sbb
ss
push
mov
ror
lea
(bad)
mov
adc
test
cmp
(bad)
call
add
aas
dec
push
out
jge
add
(bad)
ins
retf
imul
mov
imul
(bad)
(bad)
dec
cs
or
sub
pop
push
mov
sub
jbe
cmp
inc
outs
(bad)
(bad)
(bad)
(bad)
cmp
repnz
rcl
sbb
push
retf
pushf
gs
and
ret
mov
and
ret
ins
call
jle
pop
push
mov
(bad)
mov
int3
or
mov
shr
hlt
sub
or
loopne
js
adc
pop
cmp
retf
out
leave
jg
or
(bad)
(bad)
jmp
int
stc
inc
inc
xchg
jno
shl
cdq
xchg
(bad)
std
dec
xor
idiv
push
lods
test
jecxz
(bad)
inc
xor
jmp
adc
jl
dec
add
dec
test
aas
data16
ss
inc
(bad)
(bad)
(bad)
jmp
jl
ror
setg
mov
or
adc
push
cs
add
sub
inc
(bad)
(bad)
(bad)
push
mov
inc
lods
jle
outs
inc
pop
or
or
sar
fcomp
add
(bad)
jmp
cld
jae
xlat
retf
jl
aas
jecxz
sti
aam
(bad)
(bad)
push
cld
mov
idiv
ret
ins
jl
jg
ficom
loop
pop
add
out
mov
js
mov
(bad)
call
iret
mov
(bad)
into
pop
ficom
mov
fadd
inc
cmp
inc
dec
div
sub
aaa
dec
cdq
stc
sub
int
je
push
pop
sti
addr16
(bad)
(bad)
inc
pushf
sar
scas
ss
pop
jns
cli
sub
ins
jl
iret
test
mov
jne
not
(bad)
(bad)
push
cld
mov
mov
cmp
push
and
sbb
pushf
push
or
push
ret
cld
jmp
leave
jl
xor
(bad)
(bad)
(bad)
(bad)
jnp
repz
jns
sub
sub
mov
sub
xchg
repnz
ins
sub
arpl
(bad)
(bad)
(bad)
inc
pop
sbb
jmp
ret
movs
jmp
sub
out
cmp
leave
sar
out
clc
adc
cmp
icebp
push
loop
pop
inc
(bad)
(bad)
jmp
mul
adc
cmp
push
ror
lock
(bad)
pusha
mov
ja
popa
add
sub
jae
in
out
sbb
ds
cmp
mov
jecxz
sub
push
xchg
fist
mov
xor
inc
sbb
(bad)
dec
repz
push
int
icebp
fdiv
sub
pop
dec
mov
shl
sub
add
scas
fsub
jmp
cmp
dec
lods
(bad)
dec
push
jo
sbb
out
pop
or
pop
sar
ds
push
in
mov
push
movs
inc
(bad)
(bad)
call
out
xchg
dec
jge
xchg
cmp
dec
fmul
adc
bound
sbb
and
or
in
std
shl
xchg
pushf
mov
aad
jg
rcr
add
stos
in
loop
(bad)
aas
add
(bad)
fdivrp
cmps
mov
idiv
push
int
jo
lds
ror
(bad)
(bad)
(bad)
jmp
xchg
adc
jnp
xor
mov
mov
sbb
mov
loopne
imul
adc
push
or
mov
add
cli
push
enter
push
mov
push
shr
stc
lea
adc
test
mov
data16
mov
enter
(bad)
jmp
int3
push
push
adc
or
mov
ret
xchg
sub
test
mov
sbb
xor
bound
push
pop
(bad)
sbb
lahf
popf
mov
and
mov
mov
popf
test
(bad)
(bad)
call
outs
cld
cld
pop
xchg
daa
mov
inc
or
add
jne
push
xor
xor
icebp
imul
xchg
push
adc
jb
sbb
jmp
loop
jmp
dec
fdivr
stos
ficom
loope
push
jo
inc
and
in
xor
lea
push
std
mov
pushf
xchg
jae
sbb
fs
clc
call
or
push
xchg
outs
xlat
mov
jne
push
or
xchg
add
xor
cmp
sbb
pop
dec
cmps
jmp
js
fwait
rcl
mov
(bad)
(bad)
(bad)
call
lods
or
xchg
mov
(bad)
push
push
push
(bad)
mov
cmp
(bad)
dec
fld
lods
xchg
call
sub
dec
adc
rcr
(bad)
jecxz
(bad)
(bad)
(bad)
call
arpl
(bad)
in
sbb
adc
fdivp
int3
iret
sbb
push
test
imul
push
es
(bad)
(bad)
(bad)
cmp
mov
dec
loope
clc
push
fnsave
fcom
xor
cmp
cli
xlat
adc
cld
retf
add
push
push
stos
mov
mov
inc
clc
pop
dec
dec
add
pop
dec
fldcw
(bad)
call
dec
jecxz
or
cmp
inc
fwait
ret
ds
call
adc
cmps
mov
(bad)
sbb
hlt
(bad)
jmp
mov
bound
sbb
aaa
dec
popa
clc
fimul
cmp
loopne
xlat
fiadd
cli
fdiv
(bad)
jmp
inc
aas
inc
lahf
hlt
iret
xchg
dec
push
adc
(bad)
or
(bad)
jg
and
aas
adc
jmp
jge
sbb
(bad)
(bad)
call
mov
sub
dec
rcl
lds
push
pop
fdiv
pop
adc
cmp
sahf
nop
xchg
(bad)
cmc
jb
sahf
inc
mov
(bad)
call
jmp
inc
data16
in
repz
pop
pusha
pop
jnp
and
add
scas
add
lahf
add
sub
test
push
jp
(bad)
call
push
int
cs
mov
loop
jns
fdiv
inc
test
(bad)
daa
push
dec
fdivp
adc
iret
jl
mov
adc
mov
shl
fidiv
push
sub
div
scas
(bad)
jle
push
ds
das
mov
mov
mov
cmp
aam
or
add
aaa
mov
mov
push
mov
sbb
cs
push
inc
dec
sti
aad
leave
or
cmc
lock
sbb
push
test
push
js
jp
cmps
in
lock
(bad)
dec
adc
mov
sbb
dec
add
into
out
adc
xchg
mov
int3
movups
(bad)
(bad)
dec
jo
cmc
push
cmp
mov
enter
add
mov
fwait
push
inc
inc
(bad)
(bad)
(bad)
inc
cmp
popa
cwde
add
xchg
mov
ret
js
pusha
and
and
in
xor
(bad)
(bad)
jmp
add
jne
outs
cmp
test
popa
jbe
pop
in
push
loope
or
shr
sub
(bad)
inc
mov
push
loop
adc
js
mov
mov
mov
jmp
out
xor
lods
mov
mov
mov
lds
dec
pop
and
jbe
ja
xor
int3
mov
ja
add
fld
(bad)
(bad)
call
xchg
xlat
ret
mov
inc
mov
sbb
sub
test
push
dec
(bad)
(bad)
cmp
mov
stc
aas
fnstenv
(bad)
fbld
lea
icebp
das
mov
nop
lea
xor
(bad)
jmp
fsubr
mul
cmp
dec
mov
pop
ds
or
xchg
and
(bad)
(bad)
(bad)
mov
icebp
ins
jmp
jge
outs
js
push
pusha
push
adc
je
ficomp
jecxz
xchg
hlt
(bad)
(bad)
(bad)
sti
add
std
xor
and
setne
mov
std
pop
mov
(bad)
call
aaa
scas
scas
pop
pusha
rol
test
push
xchg
and
inc
pushf
pop
push
sub
inc
std
push
sar
mov
pop
fldlg2
sub
leave
jbe
fnstcw
mov
pop
inc
push
xor
call
jg
bound
inc
ror
(bad)
fild
repnz
mov
dec
(bad)
movs
mov
ror
je
dec
sub
mov
push
mov
(bad)
(bad)
(bad)
(bad)
dec
push
scas
dec
(bad)
pop
rcl
das
pop
cmp
enter
clc
ja
sahf
gs
rcl
cmp
(bad)
inc
mov
loopne
xor
mov
pop
jecxz
scas
dec
sbb
sar
(bad)
(bad)
sti
outs
out
std
mov
cmp
(bad)
addr16
jmp
dec
xchg
push
(bad)
(bad)
(bad)
mov
dec
pop
in
mov
xor
mov
cmps
mov
mov
mov
dec
scas
fdiv
pushw
sahf
(bad)
(bad)
call
xchg
clc
mov
adc
pusha
xchg
jnp
rep
sbb
mov
add
popa
cmps
add
hlt
mov
or
jmp
ss
mov
in
bound
adc
(bad)
(bad)
call
idiv
jecxz
sub
jb
scas
xlat
mov
mov
outs
lds
and
mov
xor
outs
xchg
add
cmps
xor
add
xchg
add
call
fdiv
ds
std
(bad)
mov
xor
or
push
add
push
ror
(bad)
fild
ja
jl
fsin
lods
sub
mov
adc
call
lods
fisttp
mov
cmp
mov
jae
arpl
(bad)
(bad)
dec
mov
or
fcmove
cmp
fsub
mov
jnp
push
scas
and
sar
dec
push
fwait
bound
jmp
or
(bad)
sbb
inc
adc
dec
(bad)
(bad)
jmp
jle
mov
(bad)
shr
out
cmc
loope
int3
sub
movs
push
movs
or
adc
(bad)
jg
enter
dec
sub
and
mov
mov
sub
jg
dec
cld
xor
std
or
fcomp
lods
add
outs
mov
cmp
out
fsubr
(bad)
push
sub
adc
push
mov
(bad)
jl
mov
xchg
adc
pop
scas
rcl
aas
jo
sub
inc
xchg
sub
and
push
xor
jmp
cmps
enter
jmp
mov
push
push
shl
pusha
jecxz
das
and
and
xchg
mov
mov
das
adc
and
sbb
fs
or
jg
aas
jns
iret
fldenv
pushf
pop
push
pop
outs
mov
push
in
shl
sbb
pop
add
sub
cmp
jae
inc
hlt
jmp
std
xchg
jae
ins
sti
jmp
jmp
push
mov
cmp
or
mov
into
in
push
or
inc
xor
(bad)
push
dec
adc
test
mov
iret
movs
or
dec
fnstcw
repz
(bad)
fcom
adc
mov
les
mov
adc
cmp
imul
pop
dec
cwde
(bad)
adc
cmp
cmp
(bad)
(bad)
test
or
pusha
aaa
dec
arpl
or
(bad)
cmp
in
(bad)
(bad)
(bad)
push
or
inc
cld
sbb
sub
int3
mov
ss
pop
out
mov
cmp
fwait
ins
std
into
or
int3
fscale
xor
outs
fdivr
in
(bad)
(bad)
push
jp
mov
mov
lods
(bad)
bound
rcr
mov
adc
mov
out
enter
(bad)
call
in
ins
dec
add
pop
fisub
hlt
push
into
cmp
push
retf
push
jbe
(bad)
(bad)
push
fisub
(bad)
sub
jl
cmc
mov
push
jmp
sub
mov
mov
(bad)
call
push
out
test
inc
jne
out
fldcw
cmp
neg
mov
xor
arpl
(bad)
(bad)
jmp
and
mov
retf
and
fist
mov
jmp
pop
inc
mov
inc
jns
sbb
test
scas
lods
jge
out
adc
mov
into
sbb
jle
rcr
call
(bad)
jg
(bad)
cmps
jl
outs
or
fbld
(bad)
in
cwde
nop
movs
imul
mov
(bad)
mov
aad
and
dec
stos
inc
mov
or
cdq
enter
(bad)
fild
add
loope
leavew
hlt
mov
mov
jg
add
mul
xor
iret
loopne
sub
xor
shl
cld
cmp
retf
ins
js
(bad)
mov
sub
mov
mov
movs
or
inc
mov
aam
push
sbb
(bad)
(bad)
call
and
jmp
out
loope
xor
mov
add
shl
or
inc
(bad)
(bad)
(bad)
(bad)
mov
push
jp
(bad)
dec
and
sar
repnz
dec
in
pop
or
(bad)
push
test
cmp
call
adc
adc
dec
pop
fstp
(bad)
(bad)
(bad)
(bad)
mov
mov
jmp
pop
mov
aas
mov
fnstenv
int
add
mov
mov
(bad)
(bad)
inc
xor
sar
jg
(bad)
lods
jp
int
or
jnp
xchg
jg
mov
or
call
jmp
mov
jnp
adc
push
(bad)
(bad)
(bad)
push
push
call
ficomp
addr16
jns
stos
outs
imul
adc
daa
in
cmc
adc
(bad)
(bad)
(bad)
dec
mov
xor
push
mov
mov
add
push
xchg
pop
jg
fild
pop
push
sbb
(bad)
(bad)
push
test
mov
xchg
retf
xchg
test
jb
sar
leave
sbb
push
mov
add
and
jge
(bad)
dec
enter
shl
ret
jae
ins
ins
xchg
inc
jo
jmp
jae
scas
aaa
in
push
(bad)
(bad)
(bad)
dec
popa
inc
sbb
out
add
and
daa
je
mov
rcl
sub
ds
cli
dec
std
(bad)
inc
mov
pop
sbb
ret
dec
outs
jns
mov
(bad)
jg
adc
and
add
push
mov
dec
inc
mov
(bad)
inc
shl
inc
int3
xor
pop
movs
jge
test
(bad)
inc
xchg
inc
sti
movs
data16
jg
or
cmps
mov
push
mov
stc
jmp
sbb
lahf
ins
(bad)
imul
or
xor
fdivrp
(bad)
(bad)
call
pop
xor
mov
mul
lock
jle
rcr
dec
ds
cmps
sub
cmp
(bad)
call
xor
cld
(bad)
push
cmp
dec
inc
in
out
inc
(bad)
popa
imul
push
scas
inc
in
mov
mov
mov
(bad)
jmp
jp
mov
mov
mov
daa
call
xor
cmp
push
add
mov
inc
imul
jp
or
cmc
or
das
xor
ret
jb
bound
adc
out
and
pushf
jmp
(bad)
dec
adc
fwait
jno
add
leave
cmp
cmp
pop
fld
pop
(bad)
(bad)
dec
jle
jns
ret
add
call
out
push
add
lahf
lds
mov
(bad)
(bad)
(bad)
dec
out
xor
and
push
xor
push
loope
push
mov
pop
inc
js
enter
(bad)
shr
push
jae
sub
in
les
pusha
jo
iret
stc
ret
cli
(bad)
(bad)
(bad)
jl
out
jb
bound
add
retf
jp
lahf
push
or
(bad)
(bad)
jmp
cmp
inc
fcomip
pop
call
std
dec
std
mov
dec
out
dec
push
(bad)
call
aaa
cmp
push
gs
and
sbb
xchg
call
cmp
dec
div
adc
(bad)
jmp
call
cmps
out
fiadd
outs
ficomp
daa
push
push
inc
push
jb
stos
(bad)
fisttp
jmp
jecxz
sub
jae
jmp
fistp
mov
mov
push
lea
icebp
outs
cmps
sbb
pop
xlat
or
(bad)
jmp
xchg
into
mov
mov
mov
jg
mov
pop
jnp
push
push
xlat
loope
lods
les
dec
jle
jmp
cmps
leave
mov
jecxz
(bad)
cmps
aaa
retf
push
pop
hlt
loop
(bad)
sub
fistp
jbe
xchg
lahf
icebp
add
(bad)
(bad)
(bad)
(bad)
std
ds
cli
fwait
sub
nop
adc
call
inc
pop
fstp
add
mov
(bad)
jmp
dec
test
jmp
push
push
fld
cwde
out
dec
popf
xor
fcom
(bad)
mov
fistp
sub
sbb
(bad)
fucom
mov
(bad)
(bad)
(bad)
mov
aas
test
arpl
sub
in
(bad)
pop
movnti
cmp
fcmove
xlat
lods
(bad)
(bad)
(bad)
call
and
(bad)
and
xchg
push
xor
mov
jae
jb
push
leave
inc
pop
ret
loopne
mov
(bad)
(bad)
(bad)
(bad)
jp
cmps
cmp
pop
push
pop
std
sub
cs
pop
lock
test
pop
add
mov
(bad)
push
dec
scas
adc
xchg
call
(bad)
(bad)
(bad)
jg
or
test
call
pop
imul
mov
xchg
(bad)
adc
(bad)
(bad)
jmp
(bad)
inc
fcomp
pop
retf
cmp
fabs
mov
cmp
rcr
ds
outs
fisubr
mov
mov
pushf
movs
xlat
xchg
call
pop
bnd
push
sub
mov
add
loop
movs
dec
enter
add
loope
cmp
jno
imul
mov
xchg
(bad)
(bad)
(bad)
push
push
mov
(bad)
out
rep
ret
popa
mov
mov
cmp
xor
ds
loop
(bad)
jg
stos
pop
cmps
adc
fsubrp
and
mov
mov
in
out
div
leave
xchg
add
jg
(bad)
push
sbb
mov
fmul
fadd
add
(bad)
(bad)
call
xor
inc
add
jecxz
rol
test
dec
push
sbb
test
out
fdivrp
(bad)
(bad)
(bad)
mov
mov
loop
mov
pop
js
push
test
adc
repnz
jecxz
mov
mov
shl
mov
(bad)
push
cli
aam
xor
jae
out
jg
int3
pop
sti
cld
sbb
adc
inc
mov
jp
sbb
arpl
rol
mov
mov
sar
addr16
aam
push
pop
mov
(bad)
icebp
outs
clc
pop
dec
es
pop
mov
es
(bad)
xor
(bad)
(bad)
out
clc
gs
mov
sub
and
mov
jb
cmp
popw
lock
sar
in
and
(bad)
ds
mov
int
sti
fcomp
pop
add
(bad)
call
(bad)
je
das
(bad)
sbb
out
fnstenv
fimul
sbb
jg
shl
xchg
das
adc
sbb
int
jmp
(bad)
(bad)
call
arpl
(bad)
(bad)
mov
loopne
push
mov
xchg
dec
cdq
idiv
pop
or
std
(bad)
push
pop
or
and
mov
dec
dec
xchg
fisubr
loope
mov
(bad)
(bad)
(bad)
jmp
mov
sub
jae
inc
nop
pop
fldenv
leave
sbb
inc
rcr
aaa
sbb
call
sbb
shl
mov
fwait
cmp
cdq
ret
push
addr16
ds
sub
loopne
(bad)
(bad)
(bad)
dec
ja
addr16
dec
inc
addr16
and
test
adc
arpl
dec
inc
xor
and
lahf
(bad)
(bad)
(bad)
inc
add
add
pop
or
adc
popa
loopne
push
iret
js
jge
inc
lahf
outs
jp
(bad)
adc
fcmove
pop
inc
mov
ss
call
lods
mov
test
cmp
inc
xchg
mov
or
xor
or
(bad)
call
cli
retf
add
lods
inc
pop
push
ins
shl
inc
pop
into
in
je
(bad)
(bad)
jg
cld
shr
jns
fdivr
sub
xchg
in
(bad)
(bad)
(bad)
jg
pop
and
fnstenv
cmp
jmp
iret
xchg
push
les
out
xor
jecxz
repnz
les
call
(bad)
call
push
mov
dec
ins
es
adc
sub
sub
lahf
push
push
ins
sti
fiadd
pushf
push
(bad)
(bad)
(bad)
(bad)
stc
(bad)
sti
scas
cmp
dec
enter
js
popa
xchg
mov
cmc
loop
ret
mov
mov
idiv
(bad)
(bad)
(bad)
mov
test
rcl
out
clc
mov
lock
cmp
add
add
les
(bad)
(bad)
(bad)
call
push
xor
inc
cmp
std
std
ins
jle
(bad)
push
retf
sbb
dec
and
cmp
push
mov
inc
sub
xor
jns
je
(bad)
(bad)
jmp
ins
imul
add
gs
cdq
mov
fmulp
loopne
pop
lock
jle
push
cld
adc
daa
call
adc
push
retf
jbe
add
(bad)
dec
(bad)
jle
cmps
jae
clc
clc
cmp
jg
fistp
sti
call
pop
push
or
clc
shr
sbb
js
(bad)
into
inc
xchg
call
sub
(bad)
jg
aas
clc
in
mov
inc
push
in
jnp
sub
rcl
scas
pop
dec
aad
lock
pusha
push
inc
sub
(bad)
push
mov
jnp
cmps
mov
(bad)
(bad)
(bad)
call
jge
test
jb
xor
imul
and
mov
sti
bound
inc
imul
and
stc
mov
mov
cmp
out
xchg
test
xlat
and
mov
jnp
movs
not
(bad)
(bad)
jle
hlt
and
xlat
xor
xor
inc
imul
ja
(bad)
(bad)
jmp
out
das
mov
in
hlt
sbb
lds
add
jle
(bad)
(bad)
(bad)
cmp
fcmovnu
out
out
jl
mov
fwait
out
jle
cmp
jg
fstp
push
push
inc
or
(bad)
call
inc
rol
out
sub
(bad)
mov
xor
and
sub
popa
fstp
jmp
(bad)
jg
ss
rcr
xchg
fst
add
add
test
dec
add
call
cwde
add
cmp
jp
jl
jg
inc
lea
mov
in
sahf
and
loope
call
xchg
addr16
jg
adc
(bad)
(bad)
(bad)
cmp
mov
jp
sub
sub
dec
cmps
(bad)
nop
ds
inc
pop
shr
push
mov
cld
(bad)
sar
xchg
dec
jecxz
inc
inc
or
(bad)
(bad)
jg
js
sub
cmp
loop
add
sub
mov
call
push
call
fdiv
mov
inc
nop
jb
mov
jno
ins
dec
sbb
mov
test
pop
enter
sbb
add
push
sub
pop
and
mov
xor
cli
xor
repnz
(bad)
(bad)
(bad)
jmp
retf
cdq
js
ror
rcl
push
fidivr
push
lods
cwde
inc
fisttp
adc
int3
sub
jecxz
mov
mov
outs
cld
pop
in
cs
ins
sbb
xchg
mov
icebp
repnz
inc
fst
fnstenv
out
mov
das
test
xchg
add
lods
adc
ror
(bad)
jmp
bound
in
and
retf
aam
inc
ja
jmp
adc
and
(bad)
(bad)
(bad)
out
test
imul
jge
mov
push
cdq
xchg
xor
jl
pop
add
mov
call
pop
cmp
jle
cdq
cmp
(bad)
idiv
fsin
push
mov
xchg
add
(bad)
(bad)
dec
sahf
xchg
mov
out
ds
and
cmp
mov
jb
jno
cmc
sbb
cli
ins
(bad)
(bad)
(bad)
call
shr
movs
rcl
mov
(bad)
test
push
xchg
std
(bad)
(bad)
call
cmp
ins
inc
push
arpl
addr16
cmp
ss
inc
in
cmp
cmp
(bad)
(bad)
call
adc
movups
repz
jb
inc
inc
jo
jbe
outs
fisttp
xchg
sti
in
sbb
inc
and
lahf
dec
xchg
sbb
shl
mov
sahf
(bad)
(bad)
(bad)
dec
lods
popf
repz
dec
fdivr
push
in
cmp
sbb
lods
imul
inc
int3
xchg
jmp
push
add
push
dec
sbb
sub
enter
mov
(bad)
call
sbb
inc
sti
cdq
xor
sbb
fmul
adc
or
jmp
mov
idiv
push
test
mov
psubsb
test
icebp
(bad)
push
pop
xchg
mov
call
dec
rcr
lock
mov
and
lods
aad
mov
gs
jg
mov
pop
xor
xchg
call
sti
xchg
or
call
movs
jle
je
aaa
test
add
jmp
(bad)
(bad)
call
sbb
in
shl
sti
shl
sub
not
push
(bad)
cli
push
nop
fcmovnbe
cli
scas
mov
cmps
cmp
or
dec
outs
add
or
fs
sbb
mov
jl
call
int3
data16
mov
int
in
add
in
(bad)
(bad)
jmp
call
lods
fistp
adc
xchg
and
outs
adc
out
out
adc
(bad)
cli
inc
mov
(bad)
mov
imul
pop
fbstp
and
popa
adc
cwde
inc
daa
xor
imul
stos
(bad)
jmp
inc
scas
push
dec
sub
loop
outs
test
sar
(bad)
(bad)
fistp
mov
into
sahf
ja
sbb
inc
cmps
mov
scas
hlt
cmp
jb
push
fdivrp
(bad)
(bad)
(bad)
out
out
arpl
xchg
dec
hlt
movs
imul
cld
mov
cdq
cmp
out
icebp
imul
loope
ret
jle
and
push
xor
(bad)
(bad)
(bad)
mov
jae
xor
cld
clc
mov
inc
cwde
dec
lahf
test
add
cmp
call
or
xchg
cld
sbb
shl
pop
aaa
mov
mov
(bad)
(bad)
(bad)
call
pop
out
dec
push
test
or
or
mov
(bad)
enter
ret
fucomp
sbb
xchg
call
jmp
or
in
pop
add
cmps
test
les
mov
inc
sbb
(bad)
(bad)
call
mov
mov
pop
mov
cmp
sub
int
popf
cmp
or
mov
(bad)
(bad)
(bad)
(bad)
ficomp
sbb
cmc
sub
or
xchg
jl
shl
mov
(bad)
(bad)
inc
(bad)
idiv
out
retf
jecxz
lods
xor
inc
ja
(bad)
clc
mov
dec
std
(bad)
fcomip
(bad)
jmp
aaa
outs
idiv
mov
xchg
shr
in
mov
lea
sub
(bad)
faddp
mov
imul
nop
xchg
sub
fnsave
(bad)
(bad)
(bad)
stc
cmps
ret
loop
mul
jns
pop
sbb
movs
mov
push
dec
clc
sub
xor
out
hlt
push
cmp
out
xchg
jae
mov
inc
in
fistp
pop
sbb
movs
dec
jo
jnp
(bad)
xor
cmp
dec
loopne
scas
jno
dec
sub
shl
pop
mov
(bad)
push
data16
xor
sti
out
in
mov
lahf
pop
lods
adc
and
(bad)
(bad)
jg
and
(bad)
int
add
shr
and
push
push
fcomp
and
hlt
call
in
jns
mov
jge
push
mov
adc
fwait
outs
aaa
fsubr
and
pop
inc
stc
es
out
cld
add
dec
and
push
sbb
mov
fisub
inc
xor
rcr
into
movs
jl
aaa
cld
call
xchg
push
call
adc
addr16
(bad)
jmp
scas
and
mov
(bad)
push
mov
int
sbb
adc
cmp
ret
(bad)
call
lods
jno
in
dec
(bad)
mov
pop
shr
fisub
cmc
shl
fwait
(bad)
mov
test
fisub
mov
lods
push
fmul
or
dec
push
pop
jns
dec
(bad)
call
jmp
and
(bad)
mov
aas
or
cmp
jg
lods
xor
mov
inc
push
push
(bad)
mov
mov
aad
fcmovne
mov
jo
lock
pop
mov
(bad)
dec
xor
cli
add
xchg
xchg
mov
adc
or
inc
(bad)
(bad)
(bad)
call
inc
enter
into
popf
or
cld
std
jnp
loopne
xchg
cdq
cmp
ret
mov
cmp
(bad)
(bad)
(bad)
jmp
lods
rcr
inc
test
xchg
data16
(bad)
loop
in
stos
sahf
xchg
push
pop
in
inc
mov
cmp
stos
inc
pop
fldcw
(bad)
in
pop
les
ins
sub
xchg
sar
test
adc
(bad)
(bad)
(bad)
inc
cmp
xchg
ins
aas
retf
mul
popf
push
das
dec
in
sahf
pop
ds
inc
cmps
(bad)
call
pop
fidivr
add
or
popf
fdivr
pop
icebp
call
test
out
jg
cmps
sahf
retf
es
cmps
bound
pop
dec
mov
(bad)
call
mov
data16
push
js
loope
(bad)
scas
js
out
xlat
(bad)
cmp
pop
sar
cmp
jo
sti
repnz
jmp
mov
mov
sti
xor
(bad)
pop
fcmovnbe
fild
(bad)
(bad)
(bad)
(bad)
jg
cmps
sar
sar
lahf
call
rcl
mov
xor
sub
mov
inc
in
out
xchg
pop
stos
rcr
fmul
jo
outs
(bad)
(bad)
push
sub
xlat
jle
cld
jno
push
mov
rcr
push
push
(bad)
dec
mov
mov
dec
ret
xchg
stos
cdq
xor
jmp
(bad)
lock
and
in
(bad)
(bad)
push
ds
pop
in
pop
pushf
jle
jnp
in
jmp
leave
ds
(bad)
(bad)
mov
cmp
mov
mov
aaa
cmc
pop
pop
stc
les
not
and
xchg
fwait
das
adc
fcomip
(bad)
(bad)
fisub
leave
test
(bad)
leave
add
dec
xchg
mov
(bad)
neg
pop
(bad)
jmp
lds
fwait
je
push
fld
push
daa
and
cdq
mov
sti
fdivr
movs
cdq
fsub
loop
xlat
lods
push
add
jmp
je
inc
fwait
jg
cmc
cmp
and
pop
retf
push
stc
out
aas
enter
call
sbb
out
sub
and
fdivrp
icebp
dec
push
retf
retf
pop
sbb
(bad)
jmp
push
jne
and
sub
fadd
jmp
imul
add
(bad)
(bad)
(bad)
(bad)
push
cli
sub
jb
and
cmovs
xor
mov
or
in
lock
and
sub
push
jl
(bad)
(bad)
(bad)
fild
mov
push
mov
(bad)
adc
pop
inc
fidivr
xor
aad
ss
(bad)
(bad)
(bad)
jge
cld
in
push
sbb
rcl
std
mov
repz
push
call
(bad)
retf
add
mov
mov
inc
(bad)
jmp
loopne
retf
(bad)
xchg
cli
cmps
loop
fnsave
(bad)
(bad)
(bad)
(bad)
jmp
neg
sbb
arpl
pop
je
hlt
pop
cmp
push
xchg
xchg
outs
jge
cmp
dec
pushf
js
sub
jg
(bad)
(bad)
(bad)
inc
xor
das
or
inc
jmp
(bad)
cmps
pop
inc
pushf
sbb
lods
add
(bad)
call
mov
sbb
(bad)
enter
cli
ins
xchg
mov
add
movs
cmc
ds
jmp
jecxz
repz
addr16
cmp
dec
cmps
iret
(bad)
cli
pop
lahf
cwde
dec
pop
je
(bad)
jmp
mov
pushf
ret
mov
or
jmp
pusha
and
(bad)
arpl
mov
jecxz
jl
inc
push
popf
and
mov
into
sbb
jmp
je
bnd
call
push
mov
pop
sub
sbb
js
adc
mov
std
imul
and
pop
jle
ret
(bad)
jge
outs
cld
mov
fbld
or
(bad)
call
ficom
cmc
sub
sub
mov
push
and
dec
loopne
jmp
sub
mov
add
pusha
inc
(bad)
cwde
fdivr
pusha
xor
adc
stos
cmp
lahf
lods
mov
(bad)
mov
push
jge
pop
dec
or
inc
aaa
dec
fldenv
push
imul
(bad)
(bad)
(bad)
dec
mov
iret
dec
mov
inc
out
dec
scas
adc
or
push
movs
in
xor
jmp
call
mov
cmc
or
cmp
lds
cld
scas
jecxz
jne
mov
jae
ret
loope
out
jmp
add
test
(bad)
fnstcw
adc
call
std
mov
push
cmp
ins
pop
call
aaa
retf
mov
or
sti
mov
outs
test
dec
iret
adc
pop
ret
mov
add
add
dec
cmp
sar
call
push
mov
cmc
lds
mov
jl
jp
mov
jo
sbb
(bad)
(bad)
(bad)
dec
mov
push
mov
mov
outs
inc
jns
ja
adc
cs
mov
push
inc
jmp
cld
dec
jne
out
outs
mov
js
mov
adc
add
mov
test
jmp
or
idiv
call
lock
idiv
xchg
sbb
lock
aas
ret
jmp
iret
push
aad
add
xchg
xchg
cmps
shl
neg
or
push
(bad)
inc
push
mov
fbld
cmp
push
and
cli
cmps
jmp
add
shl
fdivr
(bad)
push
or
xchg
jmp
cmp
mov
pop
sar
mov
scas
jge
inc
(bad)
fsub
in
je
(bad)
call
call
inc
pusha
cmp
push
pusha
push
mov
in
fidivr
(bad)
(bad)
jmp
fs
dec
and
inc
push
mov
mov
adc
dec
gs
inc
cmp
lods
clc
inc
inc
ins
inc
pop
push
std
dec
fwait
inc
add
pop
lods
(bad)
int3
sar
les
enter
leave
es
(bad)
jmp
xchg
mov
and
sbb
in
mov
lahf
nop
loop
dec
mov
(bad)
jmp
push
mov
cmps
mov
sti
adc
loopne
and
mov
mov
inc
les
or
sub
xor
(bad)
(bad)
(bad)
mov
cmps
int
push
cmp
jb
pop
jno
cmps
fs
pop
mov
xchg
inc
pop
jae
call
and
stos
pop
cmp
call
(bad)
(bad)
inc
mov
test
test
xchg
enter
rcr
inc
sub
jne
add
rcl
cwde
scas
add
sbb
out
push
rol
(bad)
(bad)
jg
jo
dec
jecxz
sbb
into
les
std
mov
mov
cmps
rol
loope
into
ins
sub
inc
int3
mov
inc
dec
dec
ja
pop
inc
(bad)
adc
je
mov
sub
rol
fdivr
aaa
hlt
mov
pop
mov
jmp
je
sahf
cld
sub
mov
lds
xchg
jge
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
sbb
dec
push
lods
cmp
pop
mov
fwait
mov
jae
les
(bad)
(bad)
push
push
in
repz
or
ds
scas
adc
outs
push
sbb
dec
inc
imul
clc
xchg
addr16
shl
in
(bad)
(bad)
(bad)
call
inc
or
push
push
adc
popa
bound
and
add
jo
and
(bad)
(bad)
(bad)
push
enter
lods
pusha
mov
test
(bad)
pop
and
sar
(bad)
(bad)
push
dec
mov
jns
mov
out
inc
cmp
enter
add
adc
pop
cld
inc
clc
fwait
inc
adc
in
(bad)
(bad)
jmp
aam
aam
(bad)
inc
jae
or
enter
loopne
fwait
mov
(bad)
(bad)
(bad)
call
stos
sub
xor
std
sub
(bad)
inc
aam
cli
adc
in
das
fistp
mov
(bad)
mul
xchg
sti
ret
and
ficom
cmc
(bad)
mov
je
push
lock
jo
aam
xchg
(bad)
push
jl
int3
(bad)
(bad)
mov
repnz
test
call
mov
std
sbb
mov
aaa
out
mov
idiv
(bad)
frstor
std
call
xlat
cs
fiadd
and
mov
fs
(bad)
(bad)
(bad)
call
mov
mov
(bad)
fdiv
pop
add
push
push
lea
mov
pop
sub
inc
stc
enter
push
ins
in
push
mov
popf
(bad)
(bad)
(bad)
dec
fild
add
mov
jmp
add
inc
ficom
(bad)
(bad)
inc
or
dec
mov
xor
adc
or
das
cvtps2pi
jno
iret
int
movs
out
mov
xlat
outs
and
cmps
clc
iret
hlt
mov
pop
jg
jl
xchg
mov
push
push
lahf
add
fcomip
(bad)
cli
or
push
shr
push
dec
add
mov
clc
sahf
xchg
(bad)
(bad)
(bad)
jmp
es
cmp
stos
in
and
sub
call
out
or
out
sar
into
cli
in
out
(bad)
dec
mov
cs
loope
add
out
cwde
dec
sub
xchg
jo
mov
dec
(bad)
repnz
and
stos
push
cs
(bad)
(bad)
push
jnp
loope
jae
outs
jg
add
jg
fild
sub
loop
dec
add
packuswb
mov
adc
cmp
bound
(bad)
(bad)
(bad)
jmp
rol
push
das
scas
jae
fmul
jmp
pop
mov
repz
mov
fcomip
dec
xor
out
scas
xchg
sbb
push
cld
dec
pop
add
rol
call
sub
scas
cmps
aaa
pop
(bad)
mov
call
push
fisttp
jae
fdiv
(bad)
(bad)
(bad)
(bad)
call
out
dec
loope
test
js
ds
(bad)
mov
int3
retf
push
cs
jg
(bad)
dec
retf
cmp
cmp
pop
sub
and
loopne
pop
mov
add
(bad)
call
mov
imul
leave
loop
in
adc
jmp
jbe
xor
dec
cmp
jge
xchg
call
add
mov
out
dec
lea
ret
std
(bad)
(bad)
(bad)
call
push
lahf
stc
add
mov
xor
inc
xchg
mov
sahf
adc
sar
(bad)
(bad)
mov
mov
dec
pop
and
mov
addr16
icebp
fimul
mov
push
mov
and
pop
inc
inc
push
scas
dec
or
repnz
(bad)
(bad)
(bad)
push
icebp
lds
cld
dec
mov
setge
mov
pop
adc
xor
or
(bad)
(bad)
call
in
jno
hlt
add
in
and
ds
push
stos
sti
out
jmp
add
adc
pop
push
leave
xor
cmp
jmp
nop
(bad)
push
add
test
sbb
(bad)
fist
add
lock
adc
pop
xor
push
mov
or
(bad)
jg
fisubr
sub
scas
dec
pop
mov
jne
cli
mov
scas
(bad)
adc
(bad)
(bad)
jmp
ja
xor
enter
adc
or
pop
in
(bad)
jmp
(bad)
(bad)
call
popf
movs
test
mov
jmp
xchg
xchg
int3
lock
jle
cld
lods
add
aaa
cld
call
add
(bad)
idiv
imul
dec
sar
daa
clc
(bad)
(bad)
(bad)
dec
ds
push
enter
or
inc
sahf
(bad)
out
(bad)
mov
je
aam
out
loope
push
jmp
cs
cmp
outs
enter
repz
call
(bad)
jg
pop
fwait
push
inc
pop
or
inc
jp
(bad)
dec
fcom
mov
cld
call
loopne
mov
retf
lods
inc
cmps
les
xchg
sub
jae
(bad)
mov
jbe
mov
sar
jmp
cld
scas
shr
call
repz
xchg
movs
lea
cmp
les
push
clc
mov
jecxz
xor
(bad)
(bad)
mov
mov
sbb
(bad)
int3
iret
push
stc
mov
push
jmp
(bad)
jmp
enter
into
movs
cmp
sbb
test
fldenv
sbb
out
fnstcw
stos
in
add
frstor
fisttp
xlat
(bad)
(bad)
jg
xor
retf
out
lods
dec
pop
pop
xchg
movs
fcom
adc
imul
push
dec
(bad)
sbb
popf
inc
mov
fistp
dec
ss
sbb
js
rep
sbb
mov
xor
fdivr
pop
mov
(bad)
jmp
jecxz
or
sub
mul
jp
mov
mov
xchg
mov
retf
(bad)
dec
xor
pop
in
cdq
test
mov
(bad)
iret
or
cmps
out
clc
jmp
repnz
add
push
dec
xchg
aas
add
pushf
std
jecxz
sbb
(bad)
(bad)
dec
add
pushf
les
sbb
ss
icebp
xchg
clc
ds
jge
add
jb
push
call
out
ret
cli
pushf
sub
retf
das
push
loopne
ins
inc
(bad)
(bad)
(bad)
mov
xchg
clc
push
test
div
mov
in
push
pop
inc
or
idiv
lahf
sbb
(bad)
(bad)
jmp
mov
sbb
mov
dec
mov
lock
test
in
jle
das
xor
cmp
(bad)
(bad)
(bad)
call
sbb
cmp
push
mov
out
in
pusha
xchg
mov
aam
mov
jne
(bad)
(bad)
(bad)
fcom
jmp
pusha
in
inc
ds
pop
sbb
and
push
inc
jg
(bad)
(bad)
jmp
ret
sbb
cmp
in
xor
adc
paddb
inc
(bad)
(bad)
(bad)
(bad)
fdivrp
hlt
dec
js
add
ret
sub
pushf
adc
cmp
ret
push
je
sub
jmp
call
and
out
ja
hlt
and
inc
ds
mov
lods
pop
sub
outs
clc
push
mov
es
pop
push
jmp
int
mov
mov
(bad)
(bad)
call
fwait
mov
sub
dec
(bad)
cmp
pop
cmps
aam
adc
stc
test
pop
sub
call
arpl
or
shl
xor
dec
in
and
sti
(bad)
jmp
fidiv
(bad)
jae
je
jmp
xchg
mov
sahf
ds
fcomip
(bad)
jmp
adc
leave
pushf
jae
outs
pop
adc
xchg
push
add
ret
les
mov
ret
bound
jg
and
(bad)
push
jae
test
mov
or
mov
mov
dec
retf
(bad)
(bad)
mov
(bad)
daa
push
mov
test
mov
aas
pop
mov
dec
sub
pop
cmp
pop
mov
mov
fs
xlat
fsubr
jb
mov
mov
pop
(bad)
(bad)
(bad)
(bad)
mov
add
add
aas
icebp
retf
das
sbb
(bad)
loopne
lods
pop
pop
rcl
jo
pop
(bad)
push
push
xlat
xchg
sbb
push
and
sbb
loopne
outs
dec
jg
add
jg
sbb
(bad)
jnp
cmps
(bad)
call
aam
dec
inc
jo
or
scas
fnstsw
ror
(bad)
cld
dec
jp
push
ficom
dec
or
cmp
into
lea
dec
xchg
jg
xor
(bad)
pushf
add
dec
sub
mov
cmp
pop
popa
and
scas
cmps
ret
inc
mov
pop
dec
adc
stc
mov
ss
inc
jns
mov
cmps
call
inc
dec
clc
ret
dec
jns
xor
pop
std
fwait
les
xor
arpl
in
lahf
xor
test
(bad)
(bad)
(bad)
inc
push
inc
or
mov
fbld
jl
fsubrp
jns
enter
mov
dec
push
clc
call
test
sahf
jecxz
add
(bad)
jmp
cli
movs
inc
xchg
mov
sub
cmp
es
mov
mov
out
jg
test
mov
mov
shr
jbe
call
dec
imul
call
inc
and
ds
je
stos
outs
(bad)
(bad)
(bad)
call
add
aam
or
and
or
cli
push
leave
add
fwait
sub
and
sahf
fdivr
(bad)
(bad)
inc
shl
sahf
addr16
push
lods
cmps
outs
pop
mov
push
jmp
pop
mov
hlt
(bad)
(bad)
(bad)
call
std
js
retf
push
scas
pop
es
or
add
(bad)
ja
mov
in
outs
ins
pushf
xor
popa
test
mov
pop
loop
add
lahf
cmp
mov
mov
(bad)
(bad)
(bad)
call
push
out
rcl
aas
test
mov
call
arpl
or
fnstsw
hlt
dec
xchg
loopne
nop
xchg
into
retf
lea
dec
test
dec
sahf
sbb
pushf
arpl
(bad)
call
and
pop
cmp
mov
call
cli
xlat
movs
jp
(bad)
(bad)
(bad)
mov
push
sub
outs
sti
mov
sahf
adc
sbb
and
add
(bad)
push
scas
adc
jle
bound
jmp
sbb
loope
xor
je
sar
xchg
or
pop
scas
iret
nop
jmp
cmp
popa
or
lds
(bad)
(bad)
(bad)
(bad)
cmp
mov
and
call
retf
dec
mul
jp
jno
(bad)
(bad)
call
mov
dec
sub
pop
sahf
adc
push
fwait
xlat
addr16
or
pop
sub
xchg
stos
inc
cli
jbe
jnp
adc
add
push
mov
(bad)
(bad)
push
sub
cwde
scas
aaa
mov
ss
lods
(bad)
jo
pop
leave
jo
lock
(bad)
(bad)
mov
loop
sti
fcomp
mov
mov
jno
das
cmc
(bad)
(bad)
dec
xor
mov
outs
test
test
fadd
call
retf
test
retf
sti
lock
fdivr
cmp
lock
shl
jl
jg
(bad)
mov
cmp
(bad)
cwde
and
dec
jb
mov
enter
pop
fld
call
xchg
lds
jnp
sub
scas
push
mov
inc
cli
mov
mov
(bad)
inc
clc
das
add
sub
push
inc
lahf
lea
adc
leave
arpl
ror
scas
and
xor
out
test
and
sub
adc
xchg
clc
push
mov
cli
outs
bound
mov
(bad)
(bad)
call
jnp
dec
and
xor
or
test
sub
mov
cs
fcos
jg
dec
jle
stos
call
jb
das
cs
iret
shl
and
xchg
fcomip
(bad)
(bad)
mov
sub
iret
test
fbstp
xchg
push
xchg
jne
dec
call
stc
jmp
xlat
fadd
retf
(bad)
(bad)
(bad)
push
int
sub
mov
cmps
sti
test
mov
mov
dec
jl
es
xchg
jge
(bad)
(bad)
(bad)
jmp
(bad)
movs
jo
mov
call
ret
fs
mov
mov
(bad)
(bad)
call
xchg
xchg
nop
scas
mov
movs
fcomp
inc
xchg
pop
mov
enter
xchg
(bad)
push
(bad)
mov
mov
fcomp
fstp
popa
(bad)
add
inc
stc
jmp
jns
out
sar
scas
cmc
ja
outs
loop
(bad)
(bad)
stc
and
pop
inc
ror
sbb
inc
data16
add
mov
das
inc
push
scas
pop
xchg
adc
xor
or
enter
(bad)
(bad)
(bad)
jmp
test
aaa
push
bnd
xor
repz
or
les
out
sbb
(bad)
jmp
pop
xor
mov
inc
add
fwait
rcr
xor
mov
out
clc
(bad)
jmp
adc
push
icebp
xor
xchg
aas
in
mov
cmp
mov
fucomip
pusha
(bad)
(bad)
(bad)
(bad)
cmp
mov
outs
and
(bad)
aaa
out
push
xor
mov
mov
dec
sub
pop
push
inc
into
or
aas
inc
loop
adc
ins
mov
(bad)
(bad)
push
ss
or
call
push
sub
xor
loopne
test
(bad)
(bad)
(bad)
(bad)
jmp
mov
cmp
and
int3
and
sar
mov
aaa
sahf
xchg
inc
sbb
pop
fs
push
ror
jae
cmps
cmp
add
(bad)
dec
js
sbb
addr16
pushf
mov
lock
mov
retf
stc
sbb
jo
pop
jmp
test
ret
les
mov
mov
je
test
fild
stos
pop
or
push
pop
test
ins
jmp
mov
scas
sahf
nop
jno
push
mov
sub
cmps
out
jge
call
sub
and
inc
pop
je
sbb
das
arpl
jmp
sub
sub
fnstenv
sbb
or
das
pusha
or
out
mov
iret
mov
push
hlt
ds
sub
jmp
mov
push
jo
addr16
(bad)
(bad)
cmp
pop
sub
(bad)
push
test
jle
mov
inc
mov
(bad)
(bad)
call
mov
add
mov
js
sub
push
jmp
test
jmp
in
and
inc
out
sbb
cmps
in
jo
push
inc
loop
gs
jmp
pop
jg
repnz
mov
cmp
sub
arpl
sbb
push
gs
push
in
fist
xor
pop
lods
lods
mov
jp
xchg
mov
test
pop
scas
ds
cmps
mov
icebp
(bad)
(bad)
jmp
mov
in
not
(bad)
xlat
test
adc
pop
inc
outs
shufps
xchg
and
sahf
rol
je
cmp
sbb
js
sbb
setnp
adc
mov
dec
les
push
sar
data16
stos
(bad)
(bad)
jmp
imul
outs
xchg
or
inc
jns
pop
into
das
(bad)
(bad)
(bad)
jmp
jae
call
inc
jnp
retf
mov
jo
jle
daa
(bad)
stc
test
(bad)
(bad)
call
icebp
or
mov
mov
cld
sbb
rcl
jecxz
mov
push
loope
jae
mov
(bad)
call
xor
stos
mov
cli
sbb
or
or
and
pop
push
fwait
sub
dec
int3
(bad)
repz
in
jg
stos
pop
pop
jl
repz
cmp
push
sbb
sub
jecxz
jb
adc
idiv
(bad)
(bad)
push
es
jns
ds
jge
push
call
pop
setge
(bad)
pop
ss
je
push
mov
(bad)
imul
dec
aam
or
(bad)
(bad)
fcomip
fisttp
cld
mov
fs
leave
imul
dec
pop
iret
dec
sbb
mov
aad
and
jl
push
jns
(bad)
pusha
stos
stos
xchg
sahf
push
fs
(bad)
(bad)
(bad)
inc
in
and
adc
shl
dec
(bad)
cwde
push
mov
pop
and
push
outs
addr16
(bad)
(bad)
dec
out
lahf
clc
or
mov
ret
push
and
test
js
cmp
mov
and
(bad)
(bad)
mov
(bad)
fstp
arpl
xchg
lahf
cmp
mov
(bad)
fild
shl
push
push
jae
repnz
xchg
in
sti
fwait
int
and
mov
jmp
data16
xchg
xor
mov
sar
cld
jmp
mov
inc
push
jge
inc
aad
hlt
add
mov
(bad)
(bad)
push
inc
adc
cmps
add
push
inc
add
movs
jecxz
(bad)
(bad)
int
xor
movs
sub
jne
and
cld
dec
sbb
cmc
test
dec
jmp
(bad)
(bad)
(bad)
ffreep
mov
fidivr
in
ret
cmps
in
xor
js
aam
mov
mov
add
mov
pushf
(bad)
jae
or
cld
pop
add
sbb
mov
mov
clc
and
or
call
lock
pop
mov
jmp
cli
inc
inc
jp
sub
pop
mov
fldcw
xchg
push
jb
pop
(bad)
jmp
xor
pop
cmp
enter
cmp
dec
pushf
mov
in
mov
pop
int
cmp
mov
xchg
(bad)
(bad)
(bad)
push
mov
arpl
jae
xchg
sbb
mov
mov
retf
(bad)
add
lods
inc
call
popf
clc
mov
jecxz
mov
(bad)
cs
xor
stos
(bad)
(bad)
(bad)
dec
enter
shl
mov
leave
shr
ja
(bad)
xor
int
inc
sbb
fld
(bad)
call
mov
jno
repnz
mov
out
jmp
clc
mov
int3
jae
adc
sbb
popf
fild
sbb
clc
xor
(bad)
(bad)
inc
push
jmp
test
nop
stos
inc
mov
stos
sbb
out
xchg
repnz
xor
aas
fnclex
cmp
dec
cdq
push
iret
les
repnz
repz
mov
inc
mov
das
dec
rol
sub
mov
mov
call
adc
nop
dec
out
push
idiv
(bad)
(bad)
call
sub
fsubr
loope
sub
xchg
int3
fs
dec
push
mov
ret
addr16
in
mov
dec
or
in
cli
inc
push
fwait
test
(bad)
xor
mov
(bad)
(bad)
mov
fsub
les
cmp
mov
outs
xchg
rcr
je
sar
inc
cld
jmp
jge
sbb
fild
icebp
inc
shl
mov
add
arpl
mov
repz
jmp
mov
ror
cdq
neg
(bad)
fcomip
(bad)
cmp
cld
outs
sbb
mov
and
cs
mov
lea
sub
scas
jnp
or
call
jmp
adc
mov
retf
adc
fisub
and
retf
inc
les
jmp
(bad)
jmp
push
jnp
sahf
dec
and
push
mov
leave
and
adc
mov
(bad)
jmp
pop
xchg
movs
gs
aad
dec
cmp
adc
mov
xchg
sti
cmp
arpl
fbld
dec
nop
xchg
aam
adc
jge
(bad)
(bad)
(bad)
fisttp
pop
retf
fdivr
ret
jecxz
(bad)
outs
mov
xor
gs
cmp
inc
push
(bad)
(bad)
(bad)
(bad)
cmp
mov
retf
push
int3
pop
xchg
mov
pop
in
inc
mov
inc
cmp
test
call
pushf
jb
into
mov
jae
xor
cmp
loopne
xor
lea
xchg
push
(bad)
(bad)
(bad)
push
inc
stos
stc
clc
mov
inc
mov
adc
aad
mov
mov
(bad)
(bad)
call
hlt
inc
aas
push
lds
(bad)
js
cli
(bad)
dec
jle
add
add
(bad)
loope
dec
(bad)
(bad)
mov
int
and
mov
out
and
adc
into
mov
push
or
pop
int
ins
jecxz
inc
aas
test
add
loope
test
movs
xor
xlat
jne
fwait
(bad)
(bad)
(bad)
(bad)
jg
lds
pop
imul
cld
cmp
clc
xor
push
mov
push
int3
jnp
xor
xchg
fild
(bad)
(bad)
call
cmp
mov
test
xchg
lods
mov
mov
(bad)
mov
push
dec
hlt
rol
xchg
loopne
into
sbb
ja
fcmovu
jge
push
imul
(bad)
(bad)
dec
daa
iret
into
add
into
stc
or
gs
pop
pop
dec
inc
int3
mov
(bad)
sti
rol
mov
mov
xchg
cmps
sbb
(bad)
pop
push
(bad)
adc
stos
(bad)
jo
lock
scas
pop
pop
push
nop
(bad)
mov
pop
outs
fld
and
in
push
call
inc
js
pop
sub
std
push
test
cmp
jmp
(bad)
inc
jbe
call
or
pop
iret
sbb
loop
stc
add
(bad)
jb
dec
jmp
movs
mov
and
clc
clc
sar
jecxz
leave
les
dec
(bad)
fmul
fucomip
scas
rcr
fsub
dec
cmp
jmp
mov
retf
neg
(bad)
(bad)
jmp
pop
aas
xlat
in
jmp
cmp
call
fstp
call
loopne
fiadd
leave
inc
popf
pop
and
adc
pop
repnz
ins
inc
sub
hlt
imul
cmps
call
pop
sti
jae
sbb
loope
xor
or
jmp
xchg
pop
push
fidivr
(bad)
(bad)
call
lock
sar
add
jmp
ror
in
jg
dec
mov
jae
fwait
(bad)
call
(bad)
xor
(bad)
rol
call
jmp
push
std
mov
test
(bad)
(bad)
jmp
ret
iret
xor
jecxz
(bad)
and
mov
or
cli
xor
enter
and
leave
(bad)
(bad)
(bad)
call
stos
in
dec
sbb
sbb
scas
push
jmp
inc
lods
cmp
pop
rcl
pop
adc
pop
pop
lock
(bad)
(bad)
lahf
adc
add
mov
daa
sti
jle
pop
inc
out
xchg
(bad)
fild
adc
inc
stc
xchg
and
push
sbb
or
mov
(bad)
push
loop
inc
in
sti
adc
dec
jp
ins
mov
out
mov
add
(bad)
(bad)
call
inc
hlt
push
sub
pop
enter
dec
xchg
inc
pop
out
jl
rol
test
jecxz
sar
mov
pop
add
xchg
inc
fwait
push
pop
daa
jge
std
idiv
or
cmp
out
pop
mov
mov
mov
dec
(bad)
push
jb
out
cs
fist
pop
iret
in
in
dec
(bad)
mov
xor
fstp
pop
sbb
gs
daa
xchg
push
(bad)
(bad)
(bad)
dec
mov
sbb
test
inc
in
cmc
ds
lahf
pop
push
jne
adc
and
add
lock
out
mov
and
dec
push
mov
pop
jnp
fcmovu
outs
jg
(bad)
call
(bad)
repz
mov
push
pop
push
push
push
lock
mov
(bad)
(bad)
(bad)
(bad)
jle
imul
(bad)
xchg
imul
ss
imul
push
idiv
(bad)
(bad)
call
lods
sar
(bad)
ja
(bad)
dec
out
jmp
jmp
jnp
cmp
mov
jp
push
imul
fidiv
push
jecxz
(bad)
(bad)
(bad)
dec
cmc
aaa
das
add
dec
ja
cmp
arpl
cwde
inc
aas
aaa
jp
xor
inc
(bad)
test
mov
mov
jmp
or
clc
mov
lods
push
gs
retf
or
fwait
or
(bad)
(bad)
inc
push
add
xor
xor
mov
add
mov
cmps
sbb
lahf
mov
mov
add
sbb
imul
loope
or
shl
adc
ds
(bad)
jg
inc
je
aam
pop
(bad)
sub
int
in
ret
mov
(bad)
call
mov
sahf
(bad)
mov
(bad)
adc
jle
dec
and
mov
sub
push
rol
(bad)
fmul
push
sub
scas
mov
inc
cld
pop
(bad)
call
mov
out
int3
jmp
shl
je
mov
call
push
jmp
or
add
sbb
jmp
inc
push
add
inc
and
jge
shl
mov
(bad)
cmp
xor
pop
jp
cmp
lea
jge
mov
es
(bad)
inc
inc
cmp
jmp
fidiv
das
cmp
xchg
jp
dec
fs
inc
cld
fidivr
sbb
mov
fld
xlat
(bad)
jl
jbe
inc
sub
jg
and
dec
daa
in
pop
sub
mov
(bad)
(bad)
fnstsw
out
add
repz
adc
mov
sub
or
pop
sbb
sbb
push
aas
addr16
push
add
aad
jp
(bad)
jmp
mov
push
push
loop
mov
(bad)
sbb
cmp
pop
push
lahf
jecxz
arpl
(bad)
(bad)
jmp
sahf
out
sub
sbb
hlt
mov
pop
or
jns
sub
shr
and
retf
scas
(bad)
fsub
sub
retf
loope
dec
sbb
mov
imul
gs
loop
adc
cmp
(bad)
(bad)
jmp
aaa
mov
shl
mov
or
retf
aad
aam
xor
shl
(bad)
(bad)
inc
dec
add
xor
icebp
and
sub
inc
xor
(bad)
mov
ret
dec
rcl
push
(bad)
(bad)
(bad)
dec
sar
shr
dec
adc
sbb
(bad)
pop
lods
(bad)
cmp
mov
jg
(bad)
fild
shl
retf
push
arpl
fisub
sub
jecxz
lock
sar
jmp
jmp
mov
dec
push
test
push
cs
mov
fld
(bad)
call
(bad)
mov
aad
rcr
ins
jnp
scas
mov
ds
sub
inc
pop
xchg
and
(bad)
dec
add
sub
xchg
mov
imul
out
(bad)
dec
in
push
(bad)
jbe
jmp
(bad)
(bad)
(bad)
call
es
pop
xrelease
imul
pop
mov
cmp
inc
ficom
out
(bad)
(bad)
(bad)
call
add
xor
or
sub
inc
(bad)
ins
xchg
cmc
push
loope
mov
repnz
in
sbb
mov
(bad)
(bad)
inc
bound
xor
ret
arpl
enter
icebp
gs
push
xchg
sub
les
adc
lods
popa
adc
ficom
xor
push
lods
dec
mov
adc
sbb
inc
iret
push
jne
(bad)
jmp
call
pop
jecxz
inc
push
fdiv
add
pop
cmp
and
outs
add
cwde
push
scas
sbb
sbb
sti
inc
(bad)
call
and
(bad)
push
lods
arpl
mov
icebp
mov
mov
xchg
jg
xchg
clc
cli
mov
(bad)
jge
inc
pop
jg
scas
lock
mov
add
adc
(bad)
(bad)
jg
mov
sbb
in
add
sub
push
or
(bad)
(bad)
(bad)
in
data16
ins
or
mov
imul
hlt
std
out
(bad)
jmp
mov
neg
das
fdiv
dec
dec
jge
or
push
fcom
cmps
lock
js
push
pop
in
xchg
lods
xor
bound
pop
es
or
xor
fbld
cmp
hlt
xor
sub
dec
sbb
ja
push
div
(bad)
(bad)
(bad)
jg
cld
int3
lods
sahf
gs
xchg
je
test
not
out
gs
jno
inc
cmp
inc
cld
(bad)
jg
pop
mov
ss
mov
inc
es
lahf
xchg
adc
cmp
mov
jmp
inc
test
arpl
sbb
fisub
fst
cmc
call
sbb
fcomip
arpl
xchg
mov
(bad)
call
push
aad
or
mov
fcom
pop
mov
test
sti
mov
ds
(bad)
mov
dec
ffreep
dec
mov
pop
pop
xor
xchg
loop
mov
out
jecxz
(bad)
jmp
lahf
add
add
repz
adc
and
mov
sbb
(bad)
(bad)
fild
cmps
inc
mov
mov
popf
daa
adc
jae
push
leave
pop
inc
cmps
test
(bad)
(bad)
push
in
add
mov
pop
in
shl
hlt
dec
fistp
test
pop
lahf
(bad)
pop
fbstp
cmp
jp
out
xor
int3
stc
adc
dec
adc
push
adc
add
and
sbb
cmp
iret
adc
pusha
inc
mov
es
jmp
cmp
sahf
sti
xchg
(bad)
fcomip
(bad)
sti
movs
imul
nop
sbb
add
sub
(bad)
jmp
arpl
pop
sbb
inc
inc
sbb
stos
imul
(bad)
(bad)
jmp
sbb
ret
loopne
sbb
pop
repnz
mov
mov
loopne
pop
test
js
jb
and
test
icebp
fdivr
jg
pop
(bad)
ins
(bad)
cli
psllq
mov
push
cmp
push
popf
lock
retf
sbb
(bad)
(bad)
mov
(bad)
jnp
cmp
jg
cmps
shr
mov
in
mov
sbb
(bad)
jmp
add
test
xchg
loope
aam
or
dec
push
pop
call
pop
icebp
jo
xchg
inc
ja
loope
shld
lods
pop
clc
in
das
add
lods
loopne
inc
addr16
out
or
mov
out
je
mov
(bad)
ins
cmps
sbb
mov
fsub
pusha
ficom
cmp
fadd
cmp
or
repz
jg
aad
vmovaps
pop
mov
fstp
(bad)
(bad)
(bad)
mov
cmp
or
xor
call
lods
inc
fld
pop
or
in
push
jbe
mov
bound
xor
data16
lock
mov
add
add
test
push
int
ja
clc
icebp
sbb
jb
mov
pop
mov
test
mov
(bad)
(bad)
out
ins
sahf
pop
rcr
mov
je
push
daa
dec
pusha
pop
jne
pop
(bad)
cmp
neg
(bad)
jmp
int
daa
or
test
xor
out
mov
dec
sahf
mov
inc
pusha
or
fadd
dec
cld
mov
cdq
(bad)
(bad)
(bad)
jmp
loopne
sub
aas
pop
mov
or
mov
test
cmp
(bad)
(bad)
(bad)
inc
mov
push
sbb
inc
in
xchg
pop
ins
aaa
xchg
mov
(bad)
pop
shl
sbb
push
popf
mov
sbb
dec
arpl
movs
dec
call
call
and
fsub
pop
and
and
pushf
fcomp
js
xchg
lahf
in
(bad)
(bad)
(bad)
(bad)
mov
add
push
adc
loopne
xchg
xor
adc
and
xlat
add
movs
add
push
int
or
jmp
aaa
pop
pop
lods
retf
mov
neg
and
retf
mov
repnz
push
mov
inc
call
sti
jl
cmp
pop
fsub
aas
cmp
fild
(bad)
xor
xor
fcom
xor
jbe
mov
jg
and
xor
pop
mov
ret
fimul
xchg
mov
dec
add
test
(bad)
fist
mov
(bad)
fcomip
aaa
fmul
sbb
std
cmp
popf
das
sbb
cmp
(bad)
iret
and
(bad)
(bad)
(bad)
call
in
dec
mov
dec
outs
mov
jns
fcom
jmp
dec
push
ret
jecxz
(bad)
push
mov
mov
adc
mov
mov
addr16
jo
iret
add
cmp
push
xor
(bad)
(bad)
dec
out
or
iret
adc
(bad)
rcr
adc
or
repnz
cmp
(bad)
out
adc
or
je
mov
dec
jno
mov
outs
das
mov
mov
icebp
xchg
mov
(bad)
jp
dec
and
(bad)
(bad)
mov
add
and
stos
imul
sub
jmp
sub
mov
xchg
shl
(bad)
cmps
(bad)
out
cmp
pop
cwde
push
adc
cmp
(bad)
jmp
cli
repz
jge
popa
call
mov
(bad)
(bad)
fist
jg
test
or
cmp
inc
psrlw
(bad)
(bad)
(bad)
push
inc
in
pop
xchg
lds
add
in
movs
push
jl
retf
xor
(bad)
jmp
call
fsubr
call
pop
out
mov
lods
mov
aas
popa
call
mov
mov
ret
lock
cmc
scas
xor
sub
cmp
(bad)
(bad)
std
sbb
retf
sbb
mov
mov
inc
jecxz
clc
retf
sahf
in
inc
(bad)
out
jmp
in
pop
ret
mov
test
imul
js
icebp
(bad)
push
call
add
ror
mov
push
inc
clc
jg
(bad)
cmc
push
and
pushf
mov
sbb
inc
push
inc
je
dec
cmps
lods
jno
jecxz
mov
test
sbb
mov
dec
jmp
xchg
lods
jecxz
sbb
adc
add
and
(bad)
(bad)
push
frstor
and
sti
mov
into
lds
xor
jmp
icebp
sbb
retf
push
bound
xlat
je
aad
lock
mov
pop
mov
jae
es
(bad)
call
pop
test
icebp
push
out
ins
outs
add
mov
or
(bad)
(bad)
mov
xchg
lea
bnd
sti
sub
xchg
push
adc
idiv
leave
cmp
dec
cmp
rcl
lods
adc
(bad)
(bad)
jmp
add
lea
aaa
push
(bad)
mov
or
add
outs
ret
ja
test
jbe
adc
stos
outs
xor
cmp
push
xchg
push
aaa
jb
xchg
mov
iret
es
mov
shl
mov
into
jmp
mov
aas
dec
(bad)
jmp
add
cmp
fsub
push
or
add
stos
mov
clc
(bad)
jmp
ror
clc
cmp
mov
mov
xor
arpl
retf
sar
(bad)
(bad)
mov
lahf
xchg
aas
jns
fld
aas
in
sub
jmp
push
sti
xchg
imul
xor
outs
cli
call
js
scas
imul
test
push
xlat
(bad)
fcomip
sub
adc
inc
pushf
in
inc
sub
sub
(bad)
(bad)
jmp
mov
xor
clc
and
push
xchg
out
sbb
xchg
mov
out
clc
jae
ficomp
shr
loopne
pop
sbb
cwde
or
ds
mov
(bad)
(bad)
(bad)
jmp
and
mov
repnz
pop
out
pushf
sbb
add
mov
jbe
fwait
(bad)
push
add
mov
cmp
fidivr
fs
call
jge
(bad)
retf
cdq
std
ret
icebp
sar
mov
(bad)
(bad)
mov
rol
iret
shl
sbb
fcmovnu
pushf
retf
and
and
(bad)
call
movs
fld
push
and
cmps
dec
rcl
adc
fbld
pop
dec
int
hlt
(bad)
jmp
ficomp
ficomp
mov
ret
std
pop
xor
pop
fs
mov
jmp
sub
stc
cli
push
xor
mov
and
fidiv
jmp
jmp
push
mov
jno
loope
push
push
xchg
(bad)
(bad)
(bad)
push
pop
add
mov
mov
sub
into
push
iret
loop
cmp
xchg
cmc
or
push
and
out
scas
pop
loope
icebp
push
pop
mov
dec
mov
daa
jne
(bad)
(bad)
push
stos
xor
in
mov
jno
fist
lock
dec
mov
inc
mov
fstp
dec
cmp
dec
inc
jg
movs
fs
sub
fild
(bad)
jmp
mov
fiadd
pop
push
movs
cdq
scas
adc
lods
jl
stos
(bad)
dec
pop
add
loop
push
xchg
gs
inc
stos
mov
movs
(bad)
(bad)
jmp
cmp
(bad)
mov
pop
xor
aas
(bad)
jns
mov
cmp
out
dec
(bad)
(bad)
mov
xchg
push
mov
jae
dec
stc
xchg
jae
out
xor
(bad)
out
neg
enter
add
or
cmp
dec
test
fucomp
repz
clc
(bad)
call
aaa
dec
push
or
xchg
daa
sar
push
or
(bad)
(bad)
in
sar
and
sbb
inc
and
mov
pop
push
clc
lods
lods
sbb
pop
jg
mov
call
xchg
xor
in
imul
scas
retf
fwait
add
aaa
(bad)
cdq
pop
xor
add
dec
shr
test
(bad)
push
xchg
in
shr
or
mov
bound
(bad)
jg
rol
pusha
lods
push
cmp
ret
lea
pop
clc
(bad)
dec
jno
mov
aas
cli
mov
arpl
das
sar
or
loop
or
and
movs
xchg
push
scas
icebp
mov
xchg
std
stc
sbb
fcom
sbb
nop
leave
aad
out
mov
mov
(bad)
(bad)
(bad)
jmp
pusha
pop
(bad)
or
addr16
xchg
fdiv
sbb
add
mov
inc
cmp
dec
and
cmp
scas
cld
sub
push
enter
(bad)
test
push
(bad)
(bad)
call
aam
fdivr
in
int3
cmp
jmp
cmp
jecxz
neg
sub
(bad)
(bad)
(bad)
(bad)
bound
jbe
and
add
dec
clc
push
pop
imul
inc
cmc
mov
test
cld
xchg
data16
mov
jns
dec
ficom
repz
add
js
pop
mov
inc
mov
ret
retf
(bad)
in
mov
add
(bad)
(bad)
dec
add
jae
inc
sbb
jl
inc
and
and
pop
cmc
jg
fisttp
ins
cmp
iret
mov
mov
cmp
push
(bad)
iret
fmul
or
mov
popf
cmc
(bad)
(bad)
jmp
jp
(bad)
(bad)
adc
or
xchg
xchg
mov
sahf
inc
xor
mov
ss
leave
push
cmc
sub
cmp
fs
sub
ja
ins
push
add
jno
mov
(bad)
pusha
sbb
ss
(bad)
(bad)
(bad)
call
sub
xchg
out
(bad)
in
mov
cdq
xchg
jecxz
mov
inc
jns
mov
fmul
mov
sub
(bad)
(bad)
(bad)
aas
push
retw
lock
lods
xlat
or
lahf
cmp
cs
retf
or
(bad)
jg
add
fidiv
movs
clc
jle
dec
lea
sti
cmp
push
fadd
aad
(bad)
jp
shl
sub
sub
or
mov
out
(bad)
fnsave
inc
push
mov
ret
jge
fbld
jle
sbb
int
imul
enter
mov
adc
sti
rep
imul
lock
(bad)
(bad)
jmp
mov
sbb
std
sbb
cs
fdivp
add
adc
(bad)
dec
dec
scas
call
mul
xchg
stc
push
cmp
add
mov
dec
pusha
cmp
and
pushf
cmps
test
scas
cli
ror
push
push
push
test
mov
xchg
loopne
adc
cdq
mov
loop
jecxz
gs
int
(bad)
(bad)
(bad)
(bad)
push
popf
outs
inc
(bad)
movs
stos
inc
aaa
jmp
inc
stos
repnz
fcom
(bad)
(bad)
jmp
cmc
jo
imul
dec
jmp
daa
mul
mov
dec
mov
(bad)
call
add
fist
loop
sbb
add
mov
out
lock
(bad)
(bad)
push
test
retf
sbb
mov
dec
fbld
jg
fmul
(bad)
(bad)
(bad)
inc
(bad)
dec
sub
cmp
push
push
loopne
dec
test
std
mov
mov
(bad)
test
dec
mov
jp
test
pop
push
sub
push
fmul
jl
mov
push
fiadd
(bad)
ror
daa
ins
hlt
push
push
retf
lods
shl
cld
fcomip
loope
sub
dec
mov
sub
adc
pop
add
inc
push
rcl
xor
fdivr
jbe
and
(bad)
(bad)
(bad)
push
aas
mov
jge
aam
xor
add
pop
loop
and
or
in
(bad)
(bad)
(bad)
jmp
jg
ror
mov
jl
xor
dec
jle
ins
add
(bad)
(bad)
(bad)
dec
sub
pushf
mov
stos
in
sahf
add
mov
jp
(bad)
fwait
xor
(bad)
daa
add
fcomip
(bad)
(bad)
cmp
inc
mov
pop
lods
fimul
enter
ja
cmp
cld
dec
inc
pop
(bad)
dec
out
sbb
clc
xchg
cwde
leave
into
cdq
ret
mov
ins
add
leave
inc
dec
cs
loopne
jbe
adc
shr
inc
(bad)
mov
lods
mov
and
push
dec
xor
(bad)
inc
mov
pop
repz
js
test
or
add
mov
mov
test
shl
mov
mov
(bad)
(bad)
push
cld
mov
psignd
inc
inc
dec
mov
pop
bound
pop
aam
cmps
(bad)
and
push
(bad)
jmp
mov
loope
cmp
js
pop
adc
sbb
les
(bad)
push
cmp
iret
sahf
icebp
xchg
sub
fsubr
xor
call
out
sub
int3
popa
cmps
(bad)
(bad)
(bad)
push
pusha
xchg
cmps
push
es
xlat
sbb
jle
inc
and
lea
outs
aaa
movs
xor
push
mov
mov
mov
jg
add
cmp
mov
(bad)
(bad)
call
int3
(bad)
cmc
ds
pop
fmul
or
popf
shl
loopne
iret
mov
cmc
cmp
mov
jne
(bad)
sub
xor
(bad)
outs
sbb
les
int3
jecxz
mov
add
fdiv
inc
cmps
es
push
adc
fcomip
ins
mov
jg
cmpps
mov
cmp
cmp
mov
jl
jg
es
xchg
add
cmp
in
cmp
cmc
push
js
(bad)
(bad)
inc
(bad)
jmp
shl
and
out
jns
cwde
push
adc
fwait
adc
inc
(bad)
(bad)
inc
std
in
xor
inc
js
pop
aas
addr16
sbb
lds
test
xor
jne
(bad)
(bad)
(bad)
mov
adc
rcl
mov
shl
out
sub
mov
and
out
das
(bad)
(bad)
(bad)
jmp
out
(bad)
std
out
xchg
mov
ret
les
lahf
je
push
and
idiv
mov
jmp
lods
imul
int3
jb
cmc
int3
xchg
jmp
(bad)
pop
mov
cmps
add
mov
bnd
cmp
(bad)
(bad)
mov
iret
not
add
(bad)
jnp
mov
ficom
sbb
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jnp
int3
pop
pop
dec
test
ror
xor
push
mov
jg
xor
jecxz
sub
(bad)
out
cmc
mov
mov
(bad)
jmp
push
lods
shr
mov
cwde
rcr
test
daa
or
jle
mov
inc
jns
or
(bad)
(bad)
(bad)
(bad)
(bad)
sti
push
mov
je
mov
pop
mov
add
bound
inc
call
push
xchg
mov
inc
(bad)
dec
les
add
cmps
mov
lods
aad
inc
dec
(bad)
fild
cmovbe
ret
into
ss
push
cmc
shl
(bad)
(bad)
(bad)
(bad)
and
sbb
shl
mov
push
inc
add
push
stc
sbb
jge
xchg
lods
ins
(bad)
(bad)
(bad)
inc
pop
jmp
in
and
adc
cmp
les
and
daa
pop
xchg
(bad)
dec
fiadd
mov
mov
inc
ds
or
cld
cmp
xor
movs
jmp
(bad)
out
push
aam
(bad)
sub
pop
ins
lock
(bad)
(bad)
(bad)
dec
fucomi
cmps
xor
xor
in
repnz
int3
sub
outs
sbb
(bad)
(bad)
(bad)
push
inc
xchg
bound
add
stc
inc
adc
push
outs
shl
dec
or
xchg
jge
xchg
jmp
adc
retf
add
clc
(bad)
dec
cwde
das
and
aam
dec
push
int
jg
fs
inc
pop
ins
adc
(bad)
pushf
dec
mov
xor
jnp
dec
ret
scas
xchg
jmp
sbb
fmul
cmp
into
call
mov
(bad)
(bad)
(bad)
mov
xchg
push
je
dec
mov
cmps
jo
in
mov
or
sbb
dec
sbb
jae
cmp
ror
data16
pop
push
mov
add
fisubr
cdq
mov
inc
int
jmp
(bad)
in
or
push
add
imul
add
call
ins
push
mov
jo
pop
rol
mov
es
(bad)
mov
(bad)
cli
adc
cmp
fisub
xor
fisub
xor
in
push
fmul
call
stos
lock
or
pop
cmp
sub
inc
xlat
and
xchg
rep
jmp
(bad)
mov
and
lea
lock
inc
cmps
and
push
mov
sbb
adc
(bad)
(bad)
(bad)
jmp
cmp
xchg
cdq
fistp
mov
xchg
push
jbe
bound
xlat
push
in
adc
outs
clc
mov
test
inc
and
xor
(bad)
(bad)
mov
retf
pop
and
pop
add
aas
cmps
(bad)
xor
ror
mov
dec
push
push
dec
not
pushf
sub
in
inc
mov
pop
xor
adc
cli
mov
or
ds
rcr
xchg
cmp
xor
loopne
mov
xchg
repnz
mov
mov
loope
xchg
std
call
sbb
cs
loopne
iret
mov
pop
inc
fld
sti
popa
sub
add
push
jo
retf
cld
xor
and
inc
bound
mov
shl
pop
mov
(bad)
(bad)
inc
shr
dec
cmp
sbb
js
cmps
add
imul
les
cmp
(bad)
pop
rcl
loopne
push
cmp
test
ror
(bad)
call
cld
test
mov
add
arpl
dec
push
cmps
in
sub
pop
ret
fs
cmps
sbb
(bad)
(bad)
inc
jl
push
mov
fsubrp
adc
xor
mov
ret
mov
call
jecxz
push
add
cmp
dec
jo
mov
dec
adc
jno
sahf
dec
scas
fisttp
out
lods
(bad)
aas
xor
mov
js
xor
call
(bad)
jmp
push
cdq
xchg
outs
fimul
jecxz
inc
ret
imul
iret
call
out
xor
stos
mov
aas
pop
fisub
(bad)
(bad)
(bad)
call
push
or
call
lds
and
push
in
jp
xchg
sub
(bad)
(bad)
mov
cmp
jmp
movs
jle
mov
sahf
adc
jmp
fsubrp
clc
pop
sar
stos
mov
sbb
ins
stos
mov
cld
ds
(bad)
(bad)
(bad)
push
sub
out
repnz
sbb
or
mov
mov
mov
popf
mov
popf
gs
xchg
clc
xlat
stc
lahf
and
lea
icebp
pusha
jle
(bad)
(bad)
(bad)
jmp
pop
cmp
mov
enter
mov
mov
dec
or
push
rol
(bad)
(bad)
(bad)
(bad)
jle
cli
sub
push
add
cld
adc
das
aam
es
bound
aaa
in
sbb
movs
jl
(bad)
(bad)
jmp
mov
fs
sub
mov
adc
call
jp
out
and
(bad)
(bad)
(bad)
jmp
(bad)
mov
or
cli
popa
repz
mov
mov
xchg
cwde
inc
hlt
pop
mov
push
dec
xor
jbe
cmp
jmp
xchg
xchg
add
cmc
mov
popf
sbb
dec
cmp
js
sbb
(bad)
shl
clc
pop
push
fbstp
(bad)
ss
(bad)
(bad)
jmp
mov
dec
and
aaa
jae
mov
ins
mov
test
jmp
or
mov
(bad)
push
fstp
(bad)
cmp
aaa
(bad)
push
jge
imul
xchg
pop
daa
aas
push
sub
ja
call
push
push
jmp
mov
ja
loop
xchg
scas
imul
jmp
adc
icebp
pop
pop
cmp
cmp
neg
xor
inc
xor
xchg
push
add
inc
lods
push
xchg
pop
je
inc
push
sub
push
and
(bad)
fild
or
adc
adc
mov
pop
adc
mov
and
adc
stos
push
add
or
mov
fisttp
pop
rol
std
fisttp
mov
push
movs
mov
fimul
shl
mov
hlt
imul
(bad)
(bad)
(bad)
dec
mov
out
xlat
icebp
out
sub
mov
push
xor
iret
mov
(bad)
(bad)
(bad)
jl
mov
repnz
out
icebp
daa
in
xor
daa
cmp
or
mov
test
enter
(bad)
(bad)
in
call
sub
cld
cmps
(bad)
fdivr
fdivr
clc
inc
mov
pop
mov
std
push
int3
add
dec
jo
frstor
les
popf
ds
setp
and
outs
pop
(bad)
(bad)
mov
jmp
fisubr
pusha
aas
dec
pop
imul
inc
add
das
cli
stos
push
daa
es
sbb
xor
xchg
clc
fadd
jmp
es
adc
retfw
add
xchg
xor
stc
cmp
(bad)
(bad)
(bad)
push
outs
test
sbb
ja
outs
sbb
ret
cld
or
jne
rcr
sbb
repnz
popf
test
jmp
cld
pushf
sbb
xchg
push
hlt
fiadd
scas
test
adc
and
and
and
(bad)
jg
out
mul
xor
sar
jb
fimul
out
mov
cli
(bad)
(bad)
(bad)
jl
push
or
or
mov
leave
(bad)
sti
dec
mov
fs
push
mov
lods
bound
push
mov
mov
sub
mov
xchg
pop
test
pop
repnz
stos
sar
mov
or
cs
test
ror
(bad)
(bad)
xchg
adc
mov
outs
(bad)
jmp
pop
pop
pop
xchg
adc
gs
or
adc
mov
(bad)
clc
cdq
mov
int3
(bad)
(bad)
(bad)
inc
push
dec
add
pop
sbb
mov
jmp
setg
ds
(bad)
(bad)
(bad)
jmp
movs
jmp
ins
vphaddbw
popf
add
jmp
(bad)
(bad)
(bad)
(bad)
call
cmp
je
xchg
(bad)
adc
div
loop
aaa
mov
ins
cmp
popa
fiadd
pop
(bad)
inc
(bad)
jg
loope
rol
(bad)
(bad)
call
jp
inc
push
inc
mov
mov
inc
mov
add
xlat
xlat
shl
sub
imul
sub
jmp
jge
shr
(bad)
(bad)
(bad)
(bad)
cmp
pop
retf
rcl
mov
mov
pop
pop
mov
shl
ds
adc
and
or
test
xchg
int3
std
mov
test
mov
(bad)
(bad)
inc
(bad)
mov
jmp
jmp
sbb
out
push
rcl
mov
adc
(bad)
(bad)
(bad)
call
repnz
out
add
shl
dec
popf
into
mov
test
out
ret
mov
xchg
cli
jbe
xlat
xor
js
mov
jae
jl
ror
fdivr
(bad)
(bad)
(bad)
cld
xchg
dec
nop
lods
sar
jns
cwde
leave
ins
mov
pop
call
jp
ins
cs
test
(bad)
(bad)
ds
mov
out
mov
add
sbb
test
retf
xchg
mov
or
adc
retf
dec
loop
mov
mov
aam
jmp
xor
hlt
outs
cli
mov
dec
imul
or
aam
div
pop
dec
sub
pushf
(bad)
push
push
loope
hlt
dec
bound
rol
sbb
shl
xchg
or
loop
push
xchg
rol
pop
or
inc
cs
ror
jbe
or
inc
(bad)
(bad)
(bad)
call
je
push
cmp
sub
out
(bad)
fcomp
mov
mov
adc
(bad)
(bad)
(bad)
jns
mov
cwde
mov
hlt
jecxz
mov
dec
inc
popf
cmps
push
loope
test
mov
sbb
retf
adc
(bad)
(bad)
call
inc
pop
ins
je
xor
retf
cmp
jno
xchg
mov
inc
cmp
dec
cmps
test
(bad)
sti
lods
mov
mov
cmp
dec
es
call
dec
mov
jmp
iret
lds
outs
xchg
int3
lods
(bad)
(bad)
(bad)
(bad)
cmp
push
std
pop
and
inc
(bad)
pop
jecxz
hlt
sub
sub
dec
imul
adc
loop
test
fcom
xchg
(bad)
(bad)
inc
pusha
jge
jae
add
inc
cmp
jecxz
jb
idiv
stc
aam
xor
push
sbb
jmp
jl
call
(bad)
lock
lahf
dec
push
mov
(bad)
(bad)
(bad)
jp
repnz
xchg
ins
xchg
add
and
jnp
sbb
mov
sahf
retf
rcl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
mov
adc
jle
out
xchg
xor
inc
mov
mov
mov
(bad)
(bad)
push
push
add
cmp
sub
xchg
push
lea
jnp
sbb
jno
sar
ja
cli
pop
mov
jno
mov
rol
(bad)
jg
(bad)
stc
mov
in
inc
ins
(bad)
sub
fld
jnp
test
add
adc
aam
cmp
push
push
mov
or
cld
jo
sbb
(bad)
(bad)
inc
das
push
movs
dec
or
cmp
movs
aad
(bad)
shr
cli
cli
pop
pop
les
je
push
cld
sbb
push
xor
add
xchg
inc
dec
xor
test
leave
push
and
mov
mov
push
mov
(bad)
xchg
mov
daa
adc
cmp
jno
sbb
xor
out
sbb
aam
into
push
popf
mov
es
mov
xlat
fwait
(bad)
(bad)
(bad)
call
xchg
or
or
fnsave
test
imul
shr
gs
sub
daa
fwait
sub
pop
mov
je
mov
repz
(bad)
jg
(bad)
jmp
fisub
jle
das
outs
cmp
add
dec
je
fwait
push
sbb
(bad)
(bad)
push
sbb
aaa
sbb
xor
stos
mov
stos
dec
cmc
int
out
push
ror
pop
cmps
mov
loop
ins
cmp
adc
out
fdivr
add
mov
jecxz
iret
outs
dec
mov
push
dec
cld
inc
fst
inc
dec
mov
fnstcw
iret
aaa
sbb
pop
arpl
xchg
inc
int3
dec
aad
dec
xchg
cli
cmp
pop
sub
aad
lods
in
adc
dec
(bad)
(bad)
dec
cmp
fidivr
js
arpl
pop
cld
ret
(bad)
ja
mov
bound
loop
fstp
ins
nop
ja
mov
push
aas
dec
push
inc
addr16
add
(bad)
(bad)
(bad)
(bad)
fild
jno
out
das
test
cmp
sub
stc
push
js
or
jmp
inc
or
mov
(bad)
jg
pusha
xchg
inc
jmp
cmp
sti
popa
jp
sti
imul
popa
bound
call
je
leave
dec
adc
test
(bad)
shr
je
fisub
aad
ror
jle
aam
(bad)
(bad)
(bad)
mov
adc
jg
jmp
sbb
xor
outs
out
xor
jb
(bad)
(bad)
push
mov
sbb
xor
push
dec
inc
sbb
daa
jge
repnz
ror
ror
gs
ja
out
es
das
xchg
mov
mov
(bad)
(bad)
call
mov
lods
or
pop
and
gs
mov
out
inc
jnp
cld
fld
or
lds
scas
repz
sbb
in
add
(bad)
push
ret
mov
in
cmps
in
lods
(bad)
aam
(bad)
dec
xchg
aad
(bad)
(bad)
(bad)
jg
push
jmp
push
sti
fistp
repz
pop
or
ins
es
pop
xchg
inc
and
fnstsw
(bad)
dec
pop
push
or
and
mov
cmc
test
sbb
in
sahf
retf
cli
adc
sar
mov
fwait
and
xor
jmp
(bad)
jmp
add
lock
mov
test
sahf
add
xor
fistp
test
icebp
aad
(bad)
(bad)
jmp
xchg
mov
pop
imul
dec
mov
jno
movs
das
cwde
aaa
xlat
call
sbb
(bad)
outs
cmp
mov
or
sbb
cmc
mov
(bad)
dec
lods
mov
(bad)
adc
outs
int3
xor
and
push
inc
mov
xchg
pop
(bad)
(bad)
(bad)
push
push
adc
fnstsw
mov
mov
loopne
pop
xor
lods
pop
adc
int
xor
(bad)
(bad)
(bad)
(bad)
fnsave
dec
fs
mov
imul
in
add
inc
(bad)
(bad)
or
(bad)
inc
pop
xchg
out
into
addr16
xor
(bad)
icebp
jae
(bad)
(bad)
(bad)
mov
jno
pop
xchg
jp
dec
out
out
add
in
xor
(bad)
(bad)
(bad)
jge
jbe
sbb
inc
pop
xor
cmp
retf
push
and
inc
jle
pop
movs
and
(bad)
call
jge
repnz
dec
mov
or
adc
inc
pop
ret
mov
das
cmps
test
test
mov
pop
dec
xchg
(bad)
inc
jae
fwait
(bad)
retf
shl
imul
iret
jns
jns
adc
rol
xor
cld
(bad)
call
retf
ss
jae
out
jns
popf
mov
pushf
(bad)
in
fcomp
cdq
jecxz
test
jae
(bad)
(bad)
jmp
fsub
jle
jle
jb
jbe
movs
inc
mov
retf
inc
and
(bad)
call
or
dec
lods
pop
pushf
out
scas
and
mov
add
or
popa
in
(bad)
(bad)
dec
inc
sub
dec
fld
jle
add
cld
lods
mul
adc
mov
(bad)
mov
or
outs
cmp
arpl
or
pusha
(bad)
(bad)
fpatan
cmp
retf
mov
push
add
shl
xchg
fiadd
rcl
fbld
(bad)
(bad)
(bad)
stc
xchg
scas
mov
push
mov
mov
fcomp
in
xor
pop
inc
sub
loop
ret
idiv
add
mov
pop
xchg
mov
inc
or
ja
mov
adc
mov
jle
(bad)
(bad)
(bad)
(bad)
ds
push
bound
(bad)
xor
jge
dec
js
dec
loop
in
push
stc
popa
xchg
mov
mov
loope
xchg
outs
cmp
call
mov
pop
loopne
add
(bad)
jmp
test
int
xlat
rol
inc
dec
lahf
jns
movlps
(bad)
mov
xchg
int
mov
gs
ja
in
movs
push
(bad)
(bad)
(bad)
clc
mov
mov
mov
cmp
fmul
ret
pop
gs
(bad)
jmp
fistp
mov
in
lahf
add
fbld
inc
cld
ret
test
call
pop
add
xor
sahf
(bad)
mov
stc
xchg
jmp
das
adc
std
(bad)
(bad)
(bad)
dec
mov
xlat
pushf
cmps
pop
xor
shr
push
and
jne
cmp
(bad)
(bad)
(bad)
inc
xchg
inc
adc
and
adc
cs
aam
xchg
pusha
(bad)
(bad)
jbe
mov
(bad)
dec
mov
retf
jp
cli
dec
mov
pop
scas
fdiv
mov
out
ja
sbb
jmp
scas
cli
mov
add
sahf
jmp
popf
mov
in
xor
gs
lock
test
int
ins
pop
(bad)
call
jmp
xchg
out
scas
mov
and
xchg
xor
clc
pop
loopne
repnz
mov
jg
cbw
(bad)
fidivr
stc
repz
jecxz
inc
adc
xlat
jecxz
fcmovu
or
mov
lds
ds
xchg
aad
pop
cmp
loopne
dec
mov
jb
add
lock
xor
(bad)
(bad)
fld
es
push
jne
popf
lods
jmp
inc
mov
ins
(bad)
(bad)
(bad)
(bad)
mov
push
or
pop
add
pop
loop
adc
lods
retf
add
(bad)
(bad)
(bad)
push
shr
dec
mov
cmp
fisub
dec
sti
out
(bad)
repz
cmps
test
icebp
add
xor
cmp
repnz
(bad)
(bad)
call
xchg
inc
cmp
or
and
call
outs
or
jb
add
(bad)
(bad)
dec
adc
nop
cmp
sbb
dec
pusha
pop
ss
xor
les
(bad)
call
cld
push
cdq
popa
std
sbb
push
inc
les
jae
sahf
loop
mov
xchg
lds
call
inc
mov
(bad)
std
aad
xchg
(bad)
in
out
fisubr
pushf
jae
xchg
cmps
lock
or
out
loop
sbb
add
and
int3
pop
mov
ins
mov
mov
jns
mov
lds
jmp
sahf
outs
ret
je
pop
pop
or
je
call
(bad)
(bad)
jg
push
(bad)
pop
pushf
ins
xchg
imul
aad
mov
mov
jle
(bad)
(bad)
(bad)
jmp
cmps
into
pusha
push
div
repz
pop
jno
or
bound
or
inc
mov
icebp
sub
mov
dec
imul
ret
pop
test
and
in
jg
jge
dec
dec
pop
jbe
idiv
(bad)
(bad)
jmp
or
add
jno
jecxz
sbb
push
daa
cmps
adc
lock
inc
stc
and
dec
popf
mov
enter
je
inc
sbb
(bad)
out
adc
retf
(bad)
push
mov
add
call
std
ins
mov
jmp
es
fisttp
adc
fs
sti
repnz
aaa
icebp
(bad)
popa
adc
add
(bad)
stc
mov
cwde
shl
(bad)
call
fsubp
lods
push
loop
in
mov
fidivr
mov
imul
mov
inc
(bad)
cdq
cmc
in
mov
das
cli
ret
fild
cmps
lds
fwait
xchg
mov
and
fndisi(8087
xchg
(bad)
(bad)
(bad)
call
xchg
je
lods
xchg
xor
push
test
(bad)
jmp
std
(bad)
(bad)
(bad)
(bad)
cmp
loopne
loop
add
sub
mov
jecxz
fcomp
jmp
dec
jp
mov
pop
fadd
iret
mov
iret
sub
cmp
loope
and
cli
push
fiadd
popa
loop
lods
movs
push
lea
clc
(bad)
push
rol
sbb
jnp
jb
mov
in
(bad)
xor
(bad)
mov
sub
mov
retf
(bad)
adc
dec
in
or
aaa
push
call
(bad)
(bad)
(bad)
push
push
cmps
aad
jge
in
pop
scas
aas
ins
ja
push
jp
or
popw
std
jp
adc
(bad)
(bad)
(bad)
dec
outs
cmp
into
and
fcmovnb
outs
jecxz
dec
cmp
cmp
dec
ret
push
mov
jmp
jns
jle
cmp
dec
inc
mov
dec
mov
fwait
ins
imul
out
neg
lock
xor
call
movs
cmc
fwait
mov
pop
xor
push
(bad)
mov
pop
fs
add
popa
fld
(bad)
fisubr
inc
test
das
punpckhwd
(bad)
(bad)
jmp
cli
xor
jnp
jp
pusha
pushf
adc
retf
xchg
ret
bound
aad
sub
cld
pusha
push
imul
dec
mov
mov
rcr
inc
stc
fnsave
(bad)
(bad)
call
sti
(bad)
(bad)
jno
fnsave
inc
push
aaa
mov
popf
sysexit
cmp
loop
jg
jg
dec
test
inc
inc
and
pusha
int3
iret
xor
jbe
outs
dec
(bad)
(bad)
fbstp
xchg
mov
xchg
jle
pop
iret
ror
sub
cmc
ja
ficom
(bad)
(bad)
jmp
xchg
repz
aam
fstp
jbe
pop
jmp
stos
sub
cmp
test
shl
out
cmc
cmps
mov
pop
repz
adc
xlat
mov
or
xchg
inc
pop
inc
les
(bad)
(bad)
jg
fmul
out
dec
rol
iret
jno
shl
pop
(bad)
out
ret
retf
xchg
jge
(bad)
and
jmp
(bad)
pop
fiadd
scas
jo
push
sub
scas
mov
je
cs
mov
(bad)
(bad)
jmp
ins
jmp
add
lods
test
sahf
fmul
jb
cmp
jmp
jp
xchg
mov
pop
mov
add
jg
and
pushf
mov
(bad)
(bad)
call
les
stos
retf
popf
pushf
push
imul
icebp
pushf
mov
mov
fild
call
cs
or
sub
je
into
out
retf
jl
(bad)
(bad)
(bad)
push
dec
out
jmp
(bad)
loope
adc
cli
pop
popf
xor
jle
(bad)
sti
sbb
ss
jmp
rcr
pop
mov
adc
(bad)
(bad)
jmp
cmp
or
pusha
(bad)
adc
or
pop
xor
gs
out
dec
mov
popa
mov
in
pushf
cld
outs
das
(bad)
(bad)
(bad)
call
cmp
out
test
ret
jae
jbe
sti
movs
mov
daa
add
pop
add
mov
mov
std
das
clc
(bad)
jmp
adc
mul
div
imul
(bad)
jg
jmp
test
jp
sbb
ins
xchg
xchg
sbb
add
cmp
(bad)
(bad)
jg
push
call
fisttp
sar
jge
fcmovu
xor
push
std
(bad)
push
mov
cmp
lds
xor
sbb
outs
xor
clc
pop
inc
outs
(bad)
(bad)
(bad)
(bad)
bound
push
out
popa
inc
cmps
stos
aad
test
mov
fsub
retf
jge
fnstenv
(bad)
call
inc
jmp
jge
mov
pop
popa
imul
add
mov
add
jmp
clc
imul
or
pop
pop
mov
pop
out
inc
inc
mov
or
retf
in
test
adc
sbb
or
sbb
push
xchg
int
ud0
jmp
jmp
je
bound
mov
mov
cmp
or
push
in
push
push
xchg
or
pop
lds
nop
movs
add
and
pop
(bad)
fild
jecxz
dec
jle
retf
jno
stos
leave
and
sahf
je
(bad)
(bad)
(bad)
jmp
jo
ror
aam
fucomi
sub
or
mov
xor
mov
aam
inc
xchg
push
dec
les
cmps
mov
cmp
stc
cwde
gs
(bad)
(bad)
dec
(bad)
mov
jae
inc
or
int
hlt
test
enter
adc
cs
leave
(bad)
(bad)
(bad)
(bad)
jmp
aad
push
inc
sbb
adc
out
jl
jns
imul
add
rcl
cmp
sub
cwde
mov
pushf
outs
fs
xor
cld
int
movs
xor
or
stos
ss
push
inc
iret
ins
retf
lods
iret
clc
(bad)
dec
je
cmp
dec
sub
mov
xchg
cs
add
push
or
or
rol
out
pop
mov
mov
xor
jbe
scas
aas
shl
pop
loop
jl
scas
adc
(bad)
call
push
and
cmps
jns
add
add
retf
push
cmp
push
outs
rcl
mov
xchg
inc
inc
lods
(bad)
(bad)
jg
pusha
shr
cmc
fisttp
cld
push
jmp
into
mov
loope
cli
imul
hlt
in
dec
pop
cmp
mov
std
(bad)
dec
jnp
xor
retf
movs
cli
inc
aas
shl
pushf
je
dec
call
in
lock
popa
mov
ss
and
jmp
pop
fwait
adc
sbb
mov
mov
ss
fs
shl
(bad)
jg
call
inc
iret
ret
xor
inc
push
inc
sbb
cwde
and
clc
call
sahf
in
cmp
jns
fld
out
dec
stos
jl
lods
enter
dec
stos
pop
inc
inc
(bad)
movs
sub
xor
iret
pop
cmps
hlt
call
dec
push
mov
pop
push
push
(bad)
(bad)
call
adc
add
lods
call
cmps
fild
sbb
clc
(bad)
(bad)
inc
dec
sbb
xlat
jl
jno
jge
dec
mul
push
sbb
mov
sub
ja
clc
mov
shl
adc
mov
dec
es
sub
(bad)
inc
jle
mov
xrelease
mov
loop
(bad)
(bad)
mov
jbe
jnp
cwde
and
movs
pop
sbb
inc
cmc
and
inc
cmp
imul
cmc
pushf
jecxz
in
imul
jmp
sub
arpl
cld
ins
ins
stos
fisub
rcr
xchg
push
or
jecxz
movs
scas
xor
sub
xchg
mov
mov
jns
xchg
xlat
into
sub
jge
(bad)
jg
(bad)
push
inc
xor
or
lods
mul
add
loop
pop
dec
cmp
(bad)
(bad)
call
pop
adc
xchg
aas
lea
ins
cmp
push
cmps
and
in
test
xor
push
xchg
pop
rcr
jbe
add
or
jmp
inc
adc
push
pop
cwde
int
shl
push
call
clc
arpl
into
cmps
xor
je
or
das
mov
(bad)
fisttp
pop
add
jmp
inc
sahf
jae
loopne
or
mov
dec
dec
ja
adc
mov
(bad)
(bad)
mov
int
(bad)
sub
leave
(bad)
fmul
pop
mov
cdq
lods
enter
xchg
inc
or
nop
(bad)
push
js
sti
or
xchg
daa
jns
mov
cli
lods
call
outs
jge
adc
(bad)
push
ds
jg
fucomip
outs
in
bound
(bad)
rcr
cmp
jecxz
push
test
outs
inc
clc
push
xchg
and
jne
sub
(bad)
sub
out
mul
cli
clc
or
les
mov
inc
(bad)
mov
push
pop
(bad)
(bad)
(bad)
push
mov
cmp
xlat
mov
fwait
mov
stos
ins
ror
int
push
adc
(bad)
(bad)
(bad)
jmp
je
lods
mov
xchg
popa
inc
pop
adc
adc
add
or
arpl
or
(bad)
call
and
scas
out
cmp
movs
add
mov
(bad)
cmp
out
jg
iret
adc
mov
sbb
jmp
out
jp
or
ret
jns
lock
icebp
sbb
mov
cmp
inc
(bad)
(bad)
fcomip
xchg
jbe
sahf
mov
pop
pushf
lahf
mov
mov
lea
(bad)
loopne
sub
add
cpuid
repnz
fs
stos
sub
clc
call
pop
imul
dec
sbb
in
inc
push
inc
(bad)
mov
dec
push
pop
push
sahf
les
in
mov
scas
inc
dec
loopne
jmp
mov
iret
retf
jle
mov
xchg
mov
(bad)
fnsave
aam
push
or
psubd
(bad)
(bad)
jns
nop
(bad)
jne
aad
(bad)
jle
push
mov
test
xchg
or
(bad)
push
call
loope
pop
jb
ret
scas
and
in
loopne
je
jbe
test
fnsave
xchg
xlat
push
jmp
mov
mov
arpl
rcr
(bad)
(bad)
dec
popa
rcr
jmp
push
adc
mov
add
test
add
addr16
aaa
std
(bad)
jmp
push
(bad)
cmp
xchg
fsubr
pusha
call
cwde
jmp
or
cmp
pop
int3
mov
inc
pushf
das
jmp
sbb
push
inc
das
sar
test
mov
scas
jbe
jmp
or
lods
cmp
xchg
sahf
(bad)
(bad)
(bad)
jmp
mov
pop
mov
aad
in
repz
xlat
mov
scas
xchg
paddd
(bad)
(bad)
jp
(bad)
mov
in
mov
repz
leave
retf
mov
jb
push
pop
sbb
mov
or
cmp
fbld
in
fidivr
dec
fs
ja
jecxz
rol
clc
(bad)
call
sub
movs
ret
mov
paddb
push
fisubr
jmp
outs
mov
adc
jb
out
mov
jmp
call
in
ja
adc
pop
inc
mov
xor
mov
add
pop
int
popf
sahf
movs
mov
popf
xchg
jmp
fldcw
xchg
repnz
mov
and
out
cmp
test
cdq
clc
xchg
ds
shl
ins
xchg
or
mov
mov
(bad)
mul
ror
imul
arpl
mov
adc
(bad)
(bad)
inc
ficom
xor
xchg
push
fs
rcr
(bad)
mov
inc
push
push
in
es
mov
js
adc
mov
cmp
(bad)
push
(bad)
fist
leave
jno
pushf
loopne
pop
scas
ret
cmp
inc
es
push
out
test
inc
scas
jle
mov
cli
(bad)
rcl
cmps
stc
cmps
mov
xchg
cli
(bad)
call
xchg
stos
mov
fbld
rcr
push
or
cmp
loop
xchg
out
dec
shr
pop
clc
dec
test
inc
jae
jle
sbb
(bad)
(bad)
fnsave
xadd
(bad)
or
rcl
lea
add
sbb
adc
push
mov
cmp
mov
call
into
rcr
or
sbb
jg
sar
loopne
dec
xchg
aaa
lods
fnstenv
rcr
mov
inc
iret
xchg
mov
jmp
daa
std
mov
fisubr
data16
inc
mov
mov
pop
jle
(bad)
(bad)
(bad)
jmp
sbb
cs
test
push
imul
lea
movs
idiv
xor
jecxz
xchg
jb
add
inc
and
jge
sbb
inc
jae
rcr
inc
in
cmp
inc
push
jno
xchg
neg
(bad)
aas
mov
push
je
push
lock
(bad)
movs
imul
inc
xor
arpl
in
pop
or
add
pop
push
ret
xchg
(bad)
fldenv
mov
jmp
rol
(bad)
mov
mov
inc
and
movs
mov
adc
mov
mov
repnz
int
mov
(bad)
(bad)
(bad)
(bad)
fyl2xp1
push
call
retf
fwait
aad
cmc
xchg
cli
xor
pop
add
mov
call
push
cli
imul
in
ror
cmps
daa
mov
(bad)
call
scas
mov
test
outs
out
xor
ds
and
mov
dec
pop
jge
bound
adc
mov
sbb
inc
call
lods
out
push
out
loope
jb
dec
mov
(bad)
call
mov
and
jmp
push
je
pop
sahf
inc
outs
sbb
je
sti
in
push
inc
push
(bad)
(bad)
dec
lods
or
(bad)
scas
jle
icebp
inc
pop
(bad)
sub
fdivr
outs
mov
push
cld
jmp
inc
ss
and
mov
repz
popf
pop
in
pop
ja
and
xchg
loop
(bad)
(bad)
call
std
std
add
lea
xchg
cs
push
pop
push
jo
cmp
push
pop
aam
xchg
cmp
out
lods
je
and
(bad)
cmp
pop
ds
jo
mov
rol
sub
ins
fs
or
adc
push
das
out
data16
data16
js
sahf
(bad)
jmp
xchg
rcr
jg
ds
fwait
ins
xlat
addr16
rol
pusha
mov
addr16
shl
fstp
popf
sub
adc
sbb
sar
jg
mov
(bad)
cld
add
jmp
mov
call
sbb
xchg
inc
push
icebp
loope
enter
mov
jg
push
cli
(bad)
(bad)
call
and
std
jbe
stos
scas
rcl
jle
mov
stc
repnz
add
(bad)
(bad)
jmp
mov
sub
mov
jnp
addr16
pop
sub
adc
mov
mov
(bad)
(bad)
call
bsf
sbb
jg
cmp
sub
xor
adc
les
(bad)
(bad)
(bad)
or
repz
add
aas
push
sub
into
add
add
jnp
mov
les
pop
add
add
dec
icebp
ja
jge
jp
jmp
mov
rcr
push
and
call
sbb
inc
test
xchg
mov
mov
mov
inc
in
div
jl
push
sbb
xor
jmp
shr
ret
cmps
(bad)
mov
int3
js
es
call
lods
popf
(bad)
(bad)
(bad)
(bad)
fmulp
dec
cld
sar
sbb
add
mov
mov
or
mov
enter
mov
mov
push
add
jb
cs
(bad)
fisttp
inc
hlt
into
lahf
pop
cli
add
mov
iret
mov
cmps
(bad)
daa
pop
pushf
mov
(bad)
(bad)
call
sbb
out
xchg
mov
fcomp
dec
hlt
out
call
dec
inc
mov
sbb
lods
mov
scas
shl
mov
cmp
scas
(bad)
(bad)
jg
stos
leave
mov
scas
mov
sti
call
frndint
mov
neg
add
inc
fild
xor
push
fidiv
cdq
add
cmp
adc
inc
xor
dec
iret
adc
mov
ret
dec
(bad)
pop
in
cmp
push
outs
dec
movs
adc
hlt
arpl
pop
adc
repz
jmp
sbb
lahf
jb
arpl
xor
out
ss
(bad)
(bad)
call
out
push
hlt
(bad)
hlt
jmp
imul
mov
sub
loopne
or
gs
jb
adc
es
mov
(bad)
mov
jmp
sahf
mov
(bad)
call
adc
sub
test
popa
fidivr
popa
call
xchg
sub
push
cld
and
aaa
dec
pop
cmp
sbb
(bad)
(bad)
call
out
mov
jl
push
ins
(bad)
mov
stos
repnz
bound
cmp
(bad)
(bad)
(bad)
mov
(bad)
aas
int3
add
fsub
test
push
sar
mov
scas
push
adc
ret
(bad)
jmp
fistp
cli
int3
sbb
ret
test
fdivr
imul
(bad)
(bad)
dec
enter
arpl
ror
aam
imul
test
pop
jbe
fild
cli
pop
xor
cmps
push
mov
enter
xchg
hlt
xor
div
dec
mov
(bad)
inc
clc
(bad)
(bad)
inc
test
repz
ficom
push
cmp
push
adc
dec
ret
lea
or
pop
cmc
dec
inc
push
xor
or
(bad)
(bad)
dec
push
clc
dec
stos
lahf
adc
xlat
adc
sbb
(bad)
jmp
daa
inc
cs
sub
ss
(bad)
(bad)
(bad)
jns
out
fsub
xchg
rcr
jmp
cmp
or
cmc
(bad)
(bad)
(bad)
inc
test
ds
mov
and
xchg
pop
(bad)
(bad)
(bad)
push
pop
ror
add
div
sbb
fsubr
xchg
jecxz
mov
sub
dec
mov
es
push
ins
out
push
mov
hlt
fcomip
ja
push
xor
dec
xlat
add
sbb
(bad)
dec
ins
dec
adc
(bad)
(bad)
call
xor
aam
rcl
xor
mov
test
je
addr16
fwait
ret
(bad)
jg
jmp
movs
xor
sbb
xor
movs
mov
mov
(bad)
inc
or
mov
add
adc
imul
test
jmp
pop
test
mov
adc
fcompp
xchg
inc
dec
pop
outs
(bad)
(bad)
(bad)
(bad)
mov
sub
das
sti
dec
mov
xchg
das
inc
pop
retf
mov
pop
(bad)
jg
out
mov
call
(bad)
or
(bad)
jns
retf
lods
jg
fwait
pushf
or
inc
in
(bad)
(bad)
(bad)
(bad)
mov
push
mov
imul
rcr
out
xchg
cmp
xchg
xchg
(bad)
(bad)
(bad)
call
pop
mov
lea
add
adc
xor
not
mov
pushf
(bad)
mov
sbb
cmp
sahf
xor
test
lea
scas
ficom
(bad)
in
or
shr
jle
neg
enter
hlt
push
std
dec
mov
cli
sub
mov
mov
fcomp
(bad)
(bad)
dec
mov
fwait
outs
outs
and
pushf
cmps
xchg
and
and
cmc
rcl
(bad)
cmp
stos
cs
jbe
adc
fnstenv
into
pop
mov
cmp
(bad)
(bad)
push
psubusb
or
lods
adc
iret
in
pushw
(bad)
(bad)
(bad)
call
push
xchg
ins
gs
jle
dec
sti
loopne
gs
ror
popf
xor
push
pop
(bad)
mul
hlt
(bad)
(bad)
dec
push
xlat
sbb
and
js
jae
out
loopne
xchg
push
hlt
xchg
(bad)
(bad)
out
adc
sbb
je
out
jecxz
pop
push
rcl
inc
mov
xchg
scas
(bad)
jg
mov
imul
mov
das
push
fs
ins
fchs
sbb
test
daa
mov
es
sub
leave
jg
sbb
xor
xor
pop
test
fld
movs
into
jp
xor
or
retf
add
sar
xor
adc
xor
outs
push
call
bound
jmp
sub
call
inc
xor
aad
mov
jge
nop
pop
or
cmps
pop
test
mov
(bad)
call
mov
out
push
sbb
pop
enter
and
pminub
pusha
fidiv
or
sbb
hlt
add
aam
xor
mov
add
ja
int
fisttp
add
loop
fld
call
aas
or
pusha
hlt
jle
jecxz
xchg
add
in
pop
(bad)
mov
data16
out
aaa
push
dec
loopne
rcr
(bad)
dec
movs
sbb
sbb
arpl
sbb
mov
jmp
jmp
scas
pop
mov
push
ins
mov
out
(bad)
(bad)
stos
push
out
into
test
adc
call
cmp
data16
(bad)
(bad)
(bad)
jmp
fiadd
imul
out
jecxz
cs
add
inc
jg
rcr
ror
dec
cmp
out
pop
imul
cmp
fwait
mov
leave
mov
ret
ror
out
push
push
aam
(bad)
(bad)
(bad)
dec
repz
jecxz
daa
sbb
out
out
jo
cmps
(bad)
repz
and
xchg
test
pop
lock
mov
inc
(bad)
(bad)
(bad)
(bad)
inc
fst
xchg
mov
and
and
pop
cmp
sar
in
aad
mov
add
add
aam
xor
add
dec
dec
in
jle
shl
sbb
(bad)
jg
mov
repz
call
adc
pop
mov
push
sbb
fwait
(bad)
(bad)
(bad)
jnp
leave
xlat
push
popa
dec
push
pop
jmp
lods
imul
sahf
shr
sbb
sub
jmp
push
fild
cld
(bad)
jmp
add
sbb
call
add
mov
(bad)
(bad)
(bad)
(bad)
mov
retf
neg
outs
int
shl
mov
jns
mov
sub
sbb
xchg
pop
pop
mov
cwde
(bad)
mov
push
adc
(bad)
(bad)
mov
cld
and
ins
mov
(bad)
sub
jp
retf
inc
out
(bad)
mov
(bad)
push
cli
pop
mov
jecxz
hlt
mov
mov
shr
xor
mov
outs
(bad)
(bad)
call
mov
or
popa
adc
inc
movs
mov
pop
lea
ds
add
adc
das
clc
push
pusha
mov
push
sub
popf
add
push
inc
cld
mov
xor
aad
jle
retf
stos
mov
xchg
mul
outs
or
pop
inc
cmp
push
(bad)
in
inc
(bad)
(bad)
jmp
cmps
jnp
cmp
pop
xchg
aam
fwait
in
inc
(bad)
cmp
xchg
mov
and
pop
test
(bad)
push
lahf
mov
mov
aad
sub
sub
adc
and
(bad)
(bad)
jg
mov
push
leave
jno
mov
in
jmp
aad
mov
(bad)
(bad)
(bad)
cmp
pop
hlt
test
xchg
fwait
iret
cli
(bad)
push
rcr
cmp
out
gs
int3
sub
jae
jg
(bad)
dec
xchg
fild
out
ret
dec
push
pop
dec
inc
adc
cmp
or
pmaxsw
pop
inc
call
loopne
push
retf
push
mov
das
lods
mov
ins
repz
retf
xlat
dec
adc
jp
js
leave
jl
mov
in
fbstp
data16
repnz
jl
call
(bad)
(bad)
call
pop
pop
(bad)
dec
cli
dec
xchg
fisubr
aas
ret
cmps
out
movs
(bad)
(bad)
(bad)
call
aas
jp
ins
fwait
jle
adc
inc
test
add
int
dec
jne
clc
(bad)
jmp
cmp
lea
and
std
add
arpl
(bad)
inc
ficom
mov
lods
push
dec
xor
mov
adc
mov
clc
jbe
cdq
push
mov
mov
scas
sar
das
xor
dec
xor
out
(bad)
(bad)
jmp
cs
xor
inc
loop
dec
dec
jb
cmps
leave
ins
pushf
sbb
jmp
fmul
dec
icebp
js
jmp
test
(bad)
nop
pop
pop
repnz
(bad)
daa
jne
jecxz
ja
psubq
(bad)
(bad)
jmp
dec
adc
(bad)
ins
mov
jg
test
test
mov
js
mov
sbb
cmp
stc
neg
fadd
mov
stos
mov
retf
out
jb
loope
repz
data16
out
sbb
mov
(bad)
in
mov
js
fnstenv
aaa
jp
mov
push
fdivr
sbb
(bad)
call
ja
and
test
mov
jmp
fwait
das
adc
mov
pop
jmp
mov
(bad)
jmp
test
(bad)
mov
jmp
dec
mov
arpl
(bad)
(bad)
mov
add
sbb
out
pushf
mov
cdq
ret
(bad)
pop
mov
pop
sbb
ins
(bad)
call
cwde
sbb
mov
jo
sub
xor
(bad)
dec
xchg
cdq
call
scas
loop
inc
sub
sbb
je
xchg
loop
xchg
pop
mov
mov
jmp
push
sahf
pop
mov
xchg
aas
mov
xor
mov
addr16
xor
fdivr
dec
(bad)
push
pop
jno
jnp
mov
repnz
out
push
xor
push
mov
adc
into
(bad)
(bad)
(bad)
call
rcr
push
cli
sub
cmp
(bad)
mov
test
shl
stos
pop
xchg
pop
es
fnstsw
imul
stos
xlat
xchg
lahf
push
push
mov
out
aam
(bad)
(bad)
(bad)
cmp
dec
aam
das
xchg
and
test
mov
pushf
cmovb
xchg
cmp
(bad)
(bad)
jmp
fistp
or
shl
mov
daa
push
(bad)
adc
aaa
fild
jmp
fldcw
sti
inc
xor
std
dec
rcr
daa
push
in
ja
dec
adc
dec
cmp
cmp
(bad)
(bad)
(bad)
mov
add
or
push
xor
out
loopne
inc
cmps
lods
cwde
sub
(bad)
(bad)
(bad)
jmp
fcomp
out
dec
data16
xor
cmp
jbe
jle
sbb
das
pop
and
into
pushf
fist
cld
mov
(bad)
push
je
jmp
mov
or
jge
lahf
(bad)
push
add
jg
ret
sub
push
xor
add
(bad)
ret
lea
ret
push
jmp
and
movs
in
mov
xchg
hlt
mov
fwait
int
cmp
pop
std
mov
(bad)
lds
(bad)
pop
sahf
jmp
(bad)
or
scas
mov
mov
js
push
fisubr
mov
push
fstp
cmp
jmp
mov
outs
aad
dec
xor
call
jg
sub
or
xor
fstp
lahf
add
(bad)
inc
jbe
out
fld
adc
cmp
ins
lahf
leave
pop
mov
cld
push
pop
push
mov
mov
cmc
dec
addr16
out
icebp
inc
xor
mov
repz
xor
(bad)
jmp
mov
mov
daa
mov
sbb
xchg
cmps
popa
int
jno
stos
cmp
into
sub
popf
push
cmps
jge
mov
aad
inc
and
sbb
push
imul
cmps
push
mov
adc
mov
sahf
shl
stos
cmp
ja
mov
sub
(bad)
(bad)
(bad)
cld
nop
jmp
call
inc
ror
push
mov
or
call
arpl
in
movs
push
ret
or
push
leave
inc
clc
(bad)
(bad)
mov
lods
fisubr
push
xchg
(bad)
pop
push
jecxz
inc
outs
nop
jno
dec
jmp
nop
pop
mov
add
xchg
xor
xchg
call
push
stc
inc
nop
inc
fnstcw
mov
out
dec
loope
pusha
jecxz
xchg
aaa
add
aas
cmp
call
inc
aas
push
sub
mov
mov
bound
movs
loope
(bad)
push
aas
jl
sar
ret
shr
jle
cmp
ins
loopne
out
(bad)
(bad)
mov
sub
jge
in
add
sbb
adc
pop
ins
mov
(bad)
jl
cmp
pop
out
cdq
movs
invlpg
fxtract
pop
fimul
mov
fisttp
mov
outs
push
hlt
pop
aam
ret
fcmovb
adc
jns
aam
push
add
iret
xchg
out
or
ret
mov
stc
cmp
ds
mov
call
mov
fs
fwait
outs
lock
(bad)
jmp
scas
pop
arpl
pusha
sub
jae
movs
pop
cdq
movs
or
(bad)
(bad)
(bad)
jmp
mov
movs
sub
shl
and
mov
inc
mov
mov
(bad)
jmp
mov
stos
mov
xchg
xchg
push
mov
rcr
test
das
hlt
loope
addr16
test
call
enter
cwde
in
scas
retf
rcr
int
out
push
hlt
push
cld
movs
add
sbb
inc
mov
(bad)
jmp
pop
fsubr
into
clc
dec
stos
data16
or
dec
(bad)
(bad)
(bad)
out
push
pop
jp
mov
stos
pop
inc
xchg
stc
je
out
fsub
sbb
jnp
adc
(bad)
(bad)
inc
fcomi
and
mov
push
jg
stos
lahf
inc
aaa
sbb
or
adc
(bad)
(bad)
call
movs
imul
sbb
js
fstp
test
inc
inc
xor
xchg
lods
fdivr
adc
lods
dec
jo
sbb
int
aad
scas
pop
lock
je
into
add
lock
lds
inc
adc
daa
jnp
pop
icebp
(bad)
(bad)
jp
ss
or
mov
dec
enter
mov
sub
out
xor
out
xor
xchg
xchg
sub
mov
(bad)
out
jge
(bad)
push
stos
rcl
sbb
push
pop
sbb
das
xchg
or
xchg
(bad)
(bad)
jmp
int
pop
sar
add
xor
ja
out
dec
test
rcr
jecxz
jg
jmp
mov
xchg
jne
mov
in
(bad)
fs
push
cmp
ins
jle
arpl
pop
cld
(bad)
mov
mov
stos
xchg
idiv
popa
std
inc
push
pop
movs
cmp
dec
(bad)
fdivr
mov
xor
xchg
xchg
sbb
dec
stos
shl
jmp
inc
adc
idiv
sub
push
sbb
scas
(bad)
mov
movs
inc
clc
push
fnstsw
int3
test
jbe
sar
(bad)
push
mov
adc
(bad)
mov
test
jle
les
jg
xor
push
jbe
iret
adc
mov
add
ret
repz
in
fwait
es
and
xchg
nop
test
shl
rol
mov
(bad)
call
pop
pop
mov
lea
add
xchg
lock
sahf
sub
xchg
loop
(bad)
call
ss
push
out
jo
repnz
mov
pushf
in
jbe
push
dec
loopne
add
jo
xor
(bad)
call
loopne
or
sub
jbe
jmp
data16
imul
cmps
je
mov
mov
fistp
dec
aaa
(bad)
sar
clc
(bad)
inc
inc
test
scas
push
int
arpl
push
jge
(bad)
jmp
test
dec
jns
xchg
scas
enter
(bad)
popa
sbb
xor
cmp
(bad)
(bad)
(bad)
(bad)
call
or
mov
cs
add
push
mov
mov
or
sub
in
(bad)
call
int
daa
mov
shr
fcomp
push
gs
sub
cs
iret
daa
xor
(bad)
(bad)
(bad)
call
sbb
ins
in
xchg
ror
sub
xchg
push
pop
data16
fistp
inc
xor
(bad)
(bad)
dec
and
call
mov
aas
xchg
fsubrp
rol
push
or
(bad)
mov
sti
ins
call
retf
retf
mov
jl
loopne
(bad)
inc
push
cmp
mov
enter
add
int3
adc
outs
or
cli
dec
push
sub
mov
icebp
aaa
std
jg
(bad)
call
push
not
enter
jmp
xchg
inc
mov
lock
pop
jne
mov
dec
xchg
xor
jnp
inc
dec
out
out
mov
call
lock
loope
mov
es
jecxz
xchg
out
(bad)
loop
sub
fs
jecxz
pop
push
inc
sbb
gs
inc
dec
xor
(bad)
mov
adc
aas
sahf
xchg
xchg
mov
ret
cmp
push
xchg
mov
mov
push
mov
shl
gs
pop
inc
fistp
fldcw
adc
xchg
lea
lock
mov
adc
xor
mov
dec
(bad)
inc
xor
and
dec
(bad)
and
pop
fisubr
push
mov
popf
xor
pop
(bad)
(bad)
push
sub
stos
cs
push
repz
sub
jge
fmul
(bad)
(bad)
call
jnp
mov
xchg
jnp
repz
test
mov
fimul
enter
repnz
(bad)
(bad)
call
enter
retf
cmp
xchg
xor
popa
pop
mov
inc
inc
js
mov
in
(bad)
push
fadd
sbb
ins
addr16
mov
fwait
jmp
and
mov
mov
jmp
jmp
dec
mov
xor
mov
retf
pop
or
mov
es
(bad)
(bad)
jmp
movs
jne
mov
stc
ss
fbstp
inc
sub
add
popf
mov
cmp
sbb
cmp
or
out
mov
popa
jp
xchg
jecxz
hlt
mov
(bad)
jmp
push
lea
pop
pop
jns
ja
in
mov
sub
(bad)
sbb
jle
inc
xor
call
cld
lods
xchg
(bad)
arpl
jmp
movs
fwait
push
sahf
or
ss
aad
popa
push
imul
stc
aas
or
out
das
xchg
push
aam
jecxz
push
int3
dec
push
out
aad
icebp
div
ret
jl
inc
mov
jge
(bad)
(bad)
dec
dec
xchg
jp
mov
fild
pusha
pop
dec
popf
cmp
mov
fld
jne
stos
(bad)
arpl
inc
cli
inc
repnz
dec
add
sbb
std
rcl
in
shr
xor
call
pop
in
mov
lods
loop
cmps
or
and
dec
xor
(bad)
(bad)
(bad)
inc
pop
sar
adc
xchg
shl
bound
jecxz
pop
sbb
inc
adc
cld
(bad)
inc
and
popf
cld
sub
dec
xchg
inc
xor
inc
in
mov
nop
cmp
retf
imul
push
ror
inc
dec
jmp
mov
add
inc
push
sub
(bad)
push
xor
movs
std
mov
push
push
fnstcw
inc
popa
out
hlt
sub
mov
push
add
lods
add
cwde
jmp
sub
push
push
mov
adc
mov
push
mov
xchg
push
mov
je
add
(bad)
(bad)
(bad)
jmp
xchg
jb
mov
pop
sub
pop
test
cmps
inc
retf
mov
into
fcom
sub
(bad)
(bad)
(bad)
inc
mov
and
mov
sub
cmps
mov
in
push
or
in
(bad)
(bad)
(bad)
jmp
or
jno
xchg
out
ins
(bad)
les
push
call
(bad)
scas
sub
outs
cdq
xchg
iret
dec
clc
jecxz
std
scas
inc
stos
sub
push
and
(bad)
(bad)
std
xor
mov
adc
ja
xchg
mov
jmp
rcr
aaa
enter
mov
jmp
mov
dec
mov
lock
jg
push
sahf
cmp
imul
frstor
(bad)
data16
mov
ret
icebp
out
retf
push
cld
mov
outs
in
int
mov
push
bound
daa
dec
xchg
jne
mov
(bad)
mov
repz
xchg
sub
cmp
rcl
sub
rol
repz
call
daa
mov
or
sar
lea
xchg
into
sub
(bad)
fsub
data16
dec
cmc
jp
mov
(bad)
lods
lods
sti
jmp
xor
push
xchg
jae
mov
fcomip
jmp
retf
add
and
jmp
xchg
(bad)
call
lods
daa
aas
mov
(bad)
pusha
call
loope
xchg
or
inc
mov
jmp
test
and
cmp
jb
(bad)
call
sub
adc
(bad)
(bad)
(bad)
mov
lods
into
pop
push
jmp
mov
ret
inc
push
ds
mov
xchg
inc
hlt
mov
lock
jmp
pop
sbb
out
sub
add
neg
dec
cs
pop
jp
adc
jmp
xchg
lods
psubq
pusha
add
(bad)
(bad)
(bad)
fst
dec
out
push
mov
mov
fcomp
(bad)
and
cmp
(bad)
mov
(bad)
push
push
rcl
xlat
sbb
into
pop
mov
jbe
mov
inc
out
imul
jno
ret
in
(bad)
(bad)
(bad)
dec
sbb
ficomp
jnp
movs
dec
and
xchg
jb
rcl
mov
xchg
mov
into
leave
jp
(bad)
(bad)
(bad)
ds
cmps
popf
(bad)
retf
fs
aaa
popf
push
jno
inc
jmp
aad
push
push
outs
(bad)
(bad)
jg
pop
sub
nop
sub
mov
lds
jns
sub
mov
xor
cld
(bad)
dec
xlat
hlt
movs
sub
int3
jbe
xchg
into
icebp
jbe
fnstsw
cwde
lods
lods
cmp
sub
push
pop
xor
xor
sbb
pop
loopne
(bad)
(bad)
jmp
bnd
push
mov
xor
lods
mov
mov
push
ja
mov
stos
cmps
jne
aaa
gs
mov
xor
daa
mov
fcomp
mov
mov
push
ins
(bad)
aad
jb
data16
cmp
fisub
fimul
jmp
sbb
shl
or
(bad)
in
lea
scas
fild
aaa
mov
(bad)
sbb
adc
(bad)
mov
add
shl
les
cld
fwait
push
cld
mov
sub
out
xor
add
cmp
scas
(bad)
(bad)
(bad)
push
int
jle
fdiv
ins
inc
jg
int
dec
icebp
scas
sub
retf
clc
or
mov
pushf
sbb
cmp
and
xor
(bad)
aas
call
fwait
call
jmp
(bad)
scas
cwde
fwait
imul
aad
mov
dec
shl
int
add
(bad)
cwde
ins
push
out
fstp
lock
out
adc
(bad)
(bad)
(bad)
(bad)
cld
inc
imul
xor
push
jg
adc
test
sti
(bad)
xchg
rol
(bad)
dec
pop
movs
call
or
sub
jmp
fimul
mov
sub
jmp
lods
push
sbb
cmp
add
or
inc
in
pop
les
mov
add
mov
or
sub
pop
into
mov
call
jp
mov
lock
mov
(bad)
pop
imul
clc
in
sub
jmp
(bad)
mov
pop
sub
push
lods
mov
dec
imul
sub
inc
mov
(bad)
fbld
push
nop
(bad)
mov
dec
cs
or
pop
mov
(bad)
(bad)
sti
inc
inc
sub
or
fnstsw
pop
jecxz
inc
outs
(bad)
mov
stos
mov
ja
(bad)
fist
(bad)
jne
neg
(bad)
(bad)
(bad)
call
stos
iret
push
mov
sub
ja
cld
cdq
mov
iret
inc
aaa
(bad)
lods
fmul
mov
ins
mov
(bad)
call
rcr
cmps
mov
(bad)
test
xor
cmps
xor
adc
(bad)
sti
xlat
push
cwde
inc
std
scas
clc
test
clc
cwde
popf
test
jmp
mul
test
(bad)
pop
dec
fldcw
pop
sub
or
xor
(bad)
call
repz
aam
aam
int
mov
adc
or
xchg
inc
push
push
push
jnp
ror
and
push
mov
nop
aaa
stc
(bad)
movs
cmps
in
daa
pop
cmp
mov
pop
fstp
inc
sbb
push
(bad)
mov
sub
inc
int
lock
sub
jmp
(bad)
jmp
aam
cs
fcmovnbe
adc
sbb
shr
jbe
adc
inc
(bad)
(bad)
(bad)
jmp
pop
mov
out
push
pusha
test
lahf
mov
lea
jae
xor
rcl
in
inc
adc
inc
cld
push
ja
out
xor
loope
cmp
dec
pop
in
outs
cdq
arpl
std
lods
dec
(bad)
(bad)
(bad)
fcomip
clc
lds
repz
dec
cmp
jp
mov
mov
add
movs
xor
jne
mov
adc
dec
cmp
dec
aam
adc
jp
jg
inc
cmp
and
test
fs
or
mov
jmp
pop
iret
ret
fsubr
inc
aad
adc
lahf
sar
lea
pushf
sbb
jl
add
imul
(bad)
jg
push
sbb
fcom
clc
test
pop
cmp
outs
(bad)
fsub
xor
mov
xchg
fld
push
sar
sub
fwait
(bad)
call
gs
mov
mov
(bad)
(bad)
cmp
pushf
or
inc
inc
and
repz
jb
movs
push
mov
push
cmp
push
mov
or
pop
(bad)
aad
sub
dec
pushf
mov
ficom
ficom
pop
cld
xor
pop
push
mov
(bad)
adc
call
in
cmc
jge
cmp
dec
idiv
dec
cmp
lock
movs
div
cmp
cmps
(bad)
dec
fcmovnbe
pop
xor
mov
xchg
pop
(bad)
outs
cmp
mov
(bad)
(bad)
call
push
int
(bad)
xchg
add
dec
or
iret
xchg
jbe
dec
pushf
mov
inc
(bad)
pusha
ins
ds
jg
test
and
dec
out
les
cmp
jp
dec
add
mov
mov
test
es
lahf
scas
fdivr
pop
cmp
cmp
(bad)
(bad)
(bad)
mov
push
cmc
cmp
inc
inc
mov
sbb
mov
jecxz
mul
addr16
int
idiv
movs
(bad)
(bad)
(bad)
inc
push
inc
cmp
repnz
test
pop
fisubr
ins
pop
mov
hlt
dec
mov
xor
aaa
(bad)
or
(bad)
inc
sbb
sbb
push
es
cmp
cdq
je
sub
lds
jo
(bad)
dec
(bad)
jge
push
icebp
mov
dec
aaa
rcr
push
call
(bad)
fnstsw
test
xchg
ds
sub
rcl
scas
sti
dec
push
out
lods
fld
cmc
mov
(bad)
(bad)
mov
pop
xor
jns
fst
or
hlt
jmp
out
xchg
add
stos
push
into
pop
adc
das
xchg
pop
rol
test
in
cmc
in
mov
ret
iret
adc
sahf
sub
push
cmps
imul
sub
cmps
jmp
mov
push
xchg
outs
bound
push
std
(bad)
inc
sub
out
(bad)
ficom
sub
add
cmp
test
push
in
inc
(bad)
(bad)
(bad)
jmp
cmc
and
and
(bad)
fldcw
adc
(bad)
mov
push
sbb
(bad)
out
(bad)
cmp
xchg
inc
and
call
sbb
js
(bad)
(bad)
cmps
jmp
jo
daa
(bad)
sub
cmp
and
rol
test
mov
(bad)
(bad)
mov
mov
mov
and
fimul
cmp
or
test
cmp
pop
int
mov
lock
int3
int
jmp
repz
not
jmp
rcl
test
call
jmp
xor
mov
(bad)
fwait
sbb
sahf
leave
icebp
in
jmp
test
inc
jnp
jmp
sub
mov
(bad)
mov
cmp
mov
sub
(bad)
call
cmc
sub
lods
outs
fcmovbe
xchg
dec
jle
mov
adc
xor
(bad)
(bad)
(bad)
jmp
bound
sahf
jne
div
(bad)
push
add
sbb
loop
out
adc
dec
mov
xor
ffree
mov
stc
xor
call
cmp
std
jmp
imul
mov
ins
mov
inc
(bad)
jmp
dec
out
mov
repz
mov
push
mov
pop
cmps
arpl
and
out
push
cli
rol
(bad)
jmp
xlat
stos
push
jbe
push
cmps
fisubr
dec
(bad)
pop
aam
out
mov
jbe
iret
fidivr
jmp
sub
jp
fstp
adc
loopne
loopne
(bad)
cmp
mov
sbb
cmp
sbb
or
jmp
inc
xor
test
inc
frstor
sub
add
(bad)
push
into
js
into
repz
push
dec
push
iret
ret
sar
enter
push
push
sub
idiv
pushf
stos
push
(bad)
(bad)
dec
mov
add
shl
out
or
fisubr
push
mov
sti
and
aad
inc
hlt
aad
cdq
mul
in
sbb
push
call
cli
(bad)
dec
push
loope
ror
push
or
push
jl
mov
popf
loope
add
into
adc
add
(bad)
(bad)
(bad)
(bad)
jge
add
push
mov
and
call
add
push
pop
stos
(bad)
jmp
in
stos
sbb
(bad)
(bad)
jmp
ror
xlat
cld
sub
inc
sub
(bad)
or
lahf
dec
fldenv
sub
inc
inc
fisub
xor
sbb
xchg
imul
test
sbb
dec
jle
pop
sbb
mul
popa
test
out
ficom
in
movs
jns
sbb
(bad)
aad
(bad)
dec
fisubr
in
stc
stos
jp
test
pop
movs
(bad)
mov
and
std
(bad)
jg
xor
xchg
pop
xchg
sub
pop
call
push
dec
lea
(bad)
dec
mov
shl
scas
sbb
sbb
imul
fcomp
sub
cld
(bad)
(bad)
dec
js
or
cwde
mov
rol
or
(bad)
(bad)
call
ss
sbb
jo
shl
sti
cdq
push
scas
ja
fst
jne
push
jmp
call
inc
fist
mov
inc
pop
addr16
(bad)
fst
call
pop
jno
push
scas
int3
movs
pop
out
dec
mov
adc
into
or
stos
lahf
jp
ds
push
mov
(bad)
(bad)
jns
popa
mov
dec
ret
fist
fdivr
(bad)
dec
test
cmp
aaa
ins
pop
push
bound
hlt
jno
rcpps
cwde
mov
mov
(bad)
jmp
sti
push
adc
cs
sub
sti
je
jns
fnsave
ret
(bad)
jmp
cmp
out
shr
push
icebp
sbb
jmp
mov
pop
cld
push
cmp
popf
repz
(bad)
ror
dec
jnp
stos
mov
inc
cmc
pop
cmp
(bad)
cmps
bound
adc
(bad)
(bad)
jmp
or
cmps
popf
jecxz
or
push
stos
test
inc
mov
cli
jmp
dec
lea
xor
mov
loopne
add
xor
adc
out
cmp
(bad)
(bad)
jmp
(bad)
jbe
mov
xor
stos
or
addr16
stos
fisttp
or
cmp
dec
nop
(bad)
(bad)
jmp
jecxz
ins
(bad)
hlt
inc
retf
test
push
jne
cmc
push
jg
pop
jns
or
cmc
out
push
cli
sub
ss
or
shl
dec
daa
(bad)
(bad)
jmp
sti
pop
aas
xchg
popf
pop
test
jg
int
xchg
int3
imul
(bad)
(bad)
jg
out
icebp
jne
int3
mov
mov
jmp
adc
hlt
push
jmp
ror
dec
push
sbb
jns
lods
scas
xor
int3
sbb
push
cmc
jle
popf
dec
or
(bad)
out
clc
call
test
stos
(bad)
mov
pop
mov
jbe
hlt
hlt
jmp
or
push
mov
or
cmp
bnd
mov
jmp
retf
push
push
call
cmps
jns
aas
mov
into
add
mov
mov
and
pop
retf
lahf
test
pop
repz
jmp
fsub
dec
jmp
jns
inc
(bad)
(bad)
push
mov
(bad)
iret
(bad)
push
pop
inc
sbb
jmp
(bad)
(bad)
push
pop
add
aas
cmp
mul
(bad)
in
sti
sbb
jp
jmp
test
push
pop
xor
push
frstor
add
cld
(bad)
(bad)
(bad)
jmp
push
repnz
mov
rcr
aam
xlat
clc
stos
xor
int
mov
out
dec
cld
jmp
aad
ror
mov
mov
(bad)
(bad)
(bad)
jg
lods
adc
dec
and
and
imul
jp
in
push
stos
gs
push
push
push
jae
outs
sub
sub
(bad)
(bad)
(bad)
cmp
sub
ins
cmp
cmp
fwait
push
iret
xor
cmp
fidivr
iret
dec
imul
(bad)
(bad)
(bad)
dec
dec
cmp
mov
xchg
mov
xor
(bad)
jb
test
pop
dec
mov
(bad)
push
push
ret
cmc
mov
popa
mov
jno
dec
mov
aaa
std
cmp
stos
(bad)
or
ja
xchg
out
pop
adc
(bad)
jg
test
fcomp
mov
jg
call
neg
and
jg
push
add
xchg
xor
fcos
(bad)
call
das
in
rcl
ss
lods
jb
retf
test
ja
gs
(bad)
inc
xchg
dec
loop
jmp
ret
es
xchg
ja
aaa
rep
mov
call
call
mov
xchg
jne
xor
push
scas
bound
bound
xchg
push
(bad)
(bad)
(bad)
in
and
xor
outs
add
enter
jle
test
or
adc
(bad)
(bad)
in
dec
dec
mov
scas
dec
push
inc
or
mov
bound
shr
mov
iret
(bad)
jmp
clc
adc
mov
es
mov
cwde
cli
xchg
(bad)
out
cmp
iret
(bad)
(bad)
(bad)
(bad)
in
push
mov
xchg
test
(bad)
nop
je
and
dec
pushf
sahf
and
mov
sbb
not
mov
cmp
cmp
xchg
nop
into
mov
xor
daa
mov
ror
nop
push
sbb
(bad)
mov
movs
cmp
pop
xchg
sahf
lock
(bad)
(bad)
out
ss
push
jae
jl
cmp
fistp
inc
xchg
push
push
sar
or
imul
cmp
mov
ret
(bad)
fild
out
sub
retf
sbb
ins
push
hlt
xor
das
cli
jg
or
jno
ret
cmps
mov
fyl2xp1
dec
aas
in
das
jmp
jg
movs
imul
mov
mov
dec
xor
jmp
call
(bad)
jno
lock
sbb
mov
dec
jle
mov
fwait
(bad)
(bad)
(bad)
jmp
mov
jmp
pop
(bad)
mov
push
mov
push
and
in
lods
(bad)
fcomip
push
sbb
inc
xchg
fs
cli
vsqrtsd
pop
dec
adc
hlt
(bad)
inc
cmp
cld
outs
ins
push
and
dec
pusha
ja
(bad)
int3
mov
fild
fwait
push
clc
cwde
sbb
cs
cmp
int
add
idiv
(bad)
(bad)
call
(bad)
mov
sub
or
lahf
hlt
dec
add
arpl
out
adc
loop
ret
in
cmp
jmp
jae
inc
pop
cmc
jge
neg
ja
add
outs
mov
cmc
(bad)
cmp
adc
push
retf
pop
bound
js
loopne
jmp
pusha
pusha
push
inc
(bad)
call
add
inc
je
stos
adc
(bad)
(bad)
(bad)
jmp
sbb
sbb
ds
(bad)
pop
sub
ins
lock
push
ja
cmc
cmps
xchg
scas
cmp
call
(bad)
mov
dec
pop
add
sbb
call
xor
add
(bad)
call
and
clc
test
test
mov
ret
int3
sbb
les
push
xor
icebp
adc
add
jo
lea
inc
sub
call
pop
dec
nop
add
fs
dec
xor
loope
mov
xor
mov
icebp
inc
retf
jmp
inc
inc
push
test
outs
cwde
lock
mov
ficom
xor
pop
fwait
sbb
or
pop
int
or
(bad)
(bad)
call
pop
mov
std
mov
movs
adc
cli
rol
mov
dec
repz
add
sahf
out
adc
(bad)
push
jle
xchg
cmps
in
fiadd
sub
fsubr
(bad)
(bad)
(bad)
mov
iret
out
(bad)
pop
pop
repnz
and
ja
add
hlt
clc
imul
cmc
(bad)
(bad)
(bad)
(bad)
mov
dec
xchg
call
stc
call
(bad)
cs
into
call
jmp
dec
(bad)
xor
sbb
stc
push
das
shr
neg
push
out
inc
ds
dec
enter
jg
inc
xchg
loope
outs
mov
sti
movs
loope
dec
add
rcr
xchg
sbb
jmp
or
and
mov
in
lock
loope
mov
jmp
js
loopne
add
inc
mov
inc
and
test
mov
pop
or
jmp
cld
(bad)
(bad)
jmp
repnz
imul
pandn
fadd
test
mov
inc
inc
jae
repnz
jg
fs
sbb
fdivr
cmp
hlt
aam
(bad)
(bad)
jmp
icebp
arpl
in
mov
test
sbb
fnstsw
nop
(bad)
mov
mov
pop
scas
clc
jbe
hlt
dec
sub
test
mov
fst
mov
xchg
jnp
push
out
sub
(bad)
mov
xchg
out
iret
mov
aaa
add
out
xchg
xor
fs
call
or
mov
arpl
stc
jp
pop
or
push
ret
movs
mov
(bad)
jg
psraw
adc
lahf
sub
push
ins
scas
xchg
add
jg
xchg
dec
xor
jne
dec
sub
(bad)
(bad)
(bad)
push
push
mov
mov
movs
cmp
out
xlat
cmp
mov
ret
(bad)
std
sbb
aaa
cdq
push
cwde
call
(bad)
lods
mov
sbb
dec
in
pop
fisttp
(bad)
(bad)
dec
movs
adc
fidiv
pop
jae
push
call
jmp
(bad)
(bad)
(bad)
sti
cmp
fcom
and
xrelease
(bad)
call
(bad)
xchg
ja
(bad)
(bad)
jmp
pop
fwait
jmp
xchg
jle
pop
not
stos
dec
mov
cmps
out
call
ss
ja
mov
sbb
arpl
mov
nop
jmp
mov
fsub
dec
int3
movd
dec
cli
movs
mov
in
dec
cmc
push
fmul
push
(bad)
imul
push
aad
ins
js
mov
sub
sbb
(bad)
(bad)
(bad)
jge
xor
dec
(bad)
cld
ins
push
ins
push
push
xchg
xchg
xchg
imul
mov
jl
fild
pop
xchg
popf
out
adc
ss
mov
retf
fsub
fisttp
frstor
(bad)
fs
pop
sti
(bad)
inc
inc
ret
enter
(bad)
xchg
je
ret
sub
push
imul
js
inc
(bad)
(bad)
(bad)
call
stos
mov
neg
les
rcl
arpl
outs
fdivr
jnp
repz
jg
fs
popf
inc
hlt
mov
xchg
loop
int3
mov
in
jbe
sbb
mov
fneni(8087
mov
in
scas
lods
push
push
rcl
dec
mov
popf
cmps
outs
cli
into
push
jg
inc
cld
mov
stos
je
enter
in
retf
pop
cld
xchg
bts
pop
addr16
dec
imul
jl
in
push
mov
pop
push
xor
xor
(bad)
inc
je
outs
mov
jnp
pop
xchg
xchg
jmp
aaa
movs
add
loope
jmp
rol
xchg
outs
push
xor
ins
sar
mov
mov
(bad)
jns
mov
jne
inc
data16
mov
repz
clc
pop
(bad)
(bad)
(bad)
inc
int
xchg
cli
mov
pop
(bad)
xchg
lock
loope
xor
pop
xchg
xchg
lahf
movs
dec
jl
add
push
retf
adc
dec
scas
xchg
outs
mov
les
push
frstor
push
dec
sar
push
jne
xchg
(bad)
call
jno
rcr
rcr
aas
sbb
addr16
mov
mov
(bad)
(bad)
call
cld
test
inc
(bad)
dec
sti
lds
sbb
pusha
jns
into
inc
inc
(bad)
cmp
mov
stos
dec
jne
inc
clc
add
test
adc
imul
loopne
sbb
dec
sbb
dec
lock
jg
hlt
jmp
mov
adc
push
es
xlat
or
rcr
out
jle
adc
in
jg
push
pop
pop
imul
dec
sub
xchg
inc
mov
push
cdq
ret
sahf
stos
in
pop
in
push
fnstsw
loop
nop
test
call
retf
mov
loopne
shr
ja
cwde
adc
(bad)
(bad)
(bad)
out
rcl
aas
jnp
xor
jg
retf
jmp
out
push
push
sub
(bad)
(bad)
push
or
xchg
aas
cwde
mov
sbb
addr16
fisub
mov
clc
out
mov
sar
dec
sub
jmp
pop
rol
in
test
(bad)
jmp
xor
dec
add
dec
mov
and
repnz
js
(bad)
(bad)
(bad)
inc
ins
ins
(bad)
fdivr
js
ror
ficom
sbb
mov
pop
adc
int
lock
shl
js
fs
mov
dec
lods
outs
pop
fwait
mov
scas
mov
movs
inc
mov
ins
lahf
enter
or
(bad)
in
ds
add
ret
dec
movs
pop
mov
cmp
fist
fwait
(bad)
pop
and
imul
call
jmp
inc
adc
and
movs
push
pushf
push
mov
pushf
lds
addr16
and
clc
(bad)
(bad)
jmp
enter
adc
xchg
mov
call
outs
mov
fsubr
mov
push
ror
test
cmp
jne
dec
mov
pop
sub
jne
(bad)
(bad)
(bad)
push
hlt
inc
iret
gs
cs
sbb
inc
jmp
inc
xor
push
popa
push
ss
in
(bad)
(bad)
push
lds
xchg
pop
into
scas
hlt
jns
movs
lahf
push
pop
cdq
in
dec
in
and
mov
icebp
imul
loope
aad
xchg
pop
jmp
jmp
push
push
stos
sub
adc
cs
xchg
retf
nop
cmp
out
push
ret
daa
(bad)
(bad)
(bad)
jmp
or
mov
push
mov
jne
adc
out
sub
jg
mov
je
std
push
loope
(bad)
(bad)
call
jne
sub
sbb
inc
push
or
pop
cmc
pop
push
jno
mov
jno
hlt
(bad)
(bad)
jmp
repz
dec
xlat
pushf
scas
scas
mov
sub
dec
mov
enter
(bad)
(bad)
(bad)
(bad)
xor
aas
movs
cmp
int
mov
or
inc
fiadd
push
and
mov
in
pop
pusha
ror
jle
adc
adc
jl
mov
movs
mov
int3
xor
(bad)
mov
jle
repnz
inc
sub
add
or
and
mov
mov
(bad)
(bad)
(bad)
(bad)
js
jb
and
add
pop
movs
in
mov
jo
std
gs
fdiv
cmp
outs
inc
std
xor
push
mov
pusha
pop
adc
loopne
das
or
push
xchg
loop
inc
jno
pop
(bad)
xlat
jo
(bad)
(bad)
(bad)
(bad)
call
fist
je
mov
adc
inc
jle
add
addr16
retf
push
cld
(bad)
(bad)
dec
mov
sbb
cli
xchg
mov
sbb
inc
xchg
or
shl
(bad)
inc
mov
addr16
sbb
fiadd
stos
mov
(bad)
call
in
sub
data16
or
hlt
rol
retf
sti
push
test
cmp
(bad)
(bad)
jmp
pop
sub
or
jae
ds
adc
adc
aam
add
push
pop
mov
out
shl
shl
pop
push
loop
push
outs
mov
fild
jg
mov
xchg
loop
fld
pop
movsx
les
ss
inc
test
mov
bound
cmp
aad
std
sar
sub
mov
mov
in
popa
dec
sahf
out
cli
(bad)
push
(bad)
push
rcr
xchg
out
test
sbb
sbb
aad
stos
ja
mov
pop
jl
ss
jne
div
(bad)
(bad)
mov
stos
or
xchg
and
cs
lods
push
jae
cli
push
cld
cmc
add
(bad)
(bad)
push
xchg
sbb
rol
loop
adc
ins
xlat
loope
cdq
sub
inc
pop
cmp
out
ss
(bad)
(bad)
(bad)
out
sbb
das
jb
and
loopne
xchg
jmp
fist
(bad)
push
in
out
mov
push
sub
out
mov
in
ret
cwde
push
add
jae
add
mov
fbld
cs
xchg
push
ret
pop
lods
cmp
inc
cld
ret
lods
jl
mov
js
in
into
jle
inc
inc
dec
dec
aas
test
out
in
add
(bad)
(bad)
(bad)
call
cmp
mov
addr16
call
sub
jmp
mov
pop
nop
(bad)
jmp
cmp
inc
sbb
jmp
call
cmps
ins
xor
fnstenv
sbb
stos
(bad)
cmp
xchg
sbb
xor
mov
rcr
cmp
jbe
cmp
dec
call
jo
mov
mov
pop
cmp
out
out
lock
cmp
iret
out
dec
cli
xor
sub
adc
hlt
cli
test
das
lods
fdivr
(bad)
fbld
hlt
imul
repnz
sbb
sbb
sbb
cmp
rcr
addr16
iret
dec
stc
inc
(bad)
mov
call
rcl
adc
cmps
cmp
mov
or
push
xor
jl
in
fidiv
jae
or
(bad)
(bad)
mov
sbb
into
(bad)
aas
movs
outs
inc
js
xor
dec
mov
(bad)
(bad)
(bad)
push
dec
xor
arpl
repz
(bad)
xor
mov
daa
xor
push
fsubr
mov
adc
lods
cdq
inc
int
dec
xor
cdq
pop
imul
pop
xor
sub
repnz
push
stos
cmps
sub
xor
xor
(bad)
call
ins
scas
imul
call
outs
shr
(bad)
add
xchg
mov
mov
xor
mov
pop
and
cmps
jmp
xor
push
fs
cmps
push
out
or
xor
std
push
fs
xchg
icebp
mov
adc
std
outs
mov
imul
lods
jle
int
ror
cwde
xchg
pop
das
sub
pop
sbb
cmp
call
(bad)
call
mov
pop
or
sbb
jg
pop
mov
rcr
aad
imul
dec
cmps
(bad)
call
sub
pop
inc
xchg
sub
cmps
scas
dec
ins
dec
(bad)
(bad)
call
ss
imul
xchg
cmc
test
push
in
pop
and
ficomp
call
call
dec
(bad)
pop
stc
enter
sbb
mov
daa
rcr
(bad)
(bad)
(bad)
jmp
jne
and
cli
mov
adc
sti
sar
imul
dec
sahf
sub
(bad)
inc
push
(bad)
pop
neg
pop
mov
pop
ror
aas
out
(bad)
(bad)
(bad)
cmp
outs
mov
pop
jg
leave
xchg
jle
mov
(bad)
cld
lock
cld
fstp
(bad)
(bad)
(bad)
jge
in
cld
in
pop
dec
iret
ds
ret
test
(bad)
push
cld
out
aas
fdivrp
jmp
ds
icebp
fidiv
mov
mov
push
aam
mov
mov
ds
lahf
push
mov
lock
out
mov
xor
arpl
jle
test
fnsave
(bad)
out
(bad)
(bad)
(bad)
out
sbb
pop
repz
mov
fdivr
(bad)
mov
outs
sub
fcomip
lods
inc
push
add
and
shl
xlat
(bad)
(bad)
mov
adc
iret
fadd
retf
iret
adc
retf
sbb
pop
sti
into
pop
inc
mov
mov
or
push
into
sar
(bad)
call
pop
idiv
jne
(bad)
pop
loope
test
jne
add
dec
dec
jae
(bad)
push
mov
jmp
stc
out
lahf
jb
nop
jle
repz
sbb
adc
popf
ret
adc
adc
jle
sub
out
sti
or
mov
push
cmp
and
mov
into
popa
push
bound
rol
call
xchg
(bad)
mov
inc
fisubr
scas
xor
(bad)
(bad)
mov
adc
es
push
mov
cdq
xor
dec
aaa
and
call
iret
imul
movs
mov
lock
pushf
mov
ret
push
rcl
(bad)
(bad)
(bad)
call
xchg
add
sti
inc
mov
shl
sub
or
test
fcmovnb
or
stos
sbb
cmp
out
call
pop
out
loop
push
mov
(bad)
and
(bad)
inc
lock
sbb
sbb
hlt
test
scas
call
lods
cmp
std
mov
xchg
pop
fwait
retf
sub
mov
(bad)
mov
jp
cwde
fwait
(bad)
dec
daa
lods
in
shl
inc
pop
fsub
popf
movs
(bad)
outs
call
cdq
xor
sbb
sar
(bad)
inc
xchg
cwde
aam
mov
fist
push
cdq
lock
aam
adc
sub
scas
(bad)
(bad)
(bad)
jg
mov
pop
mov
or
movs
fldenv
sub
xor
or
(bad)
test
(bad)
jmp
into
dec
mov
cmp
icebp
sar
out
pop
(bad)
mov
xor
cmp
ins
push
shl
add
dec
jae
mov
jecxz
mov
fnsave
mov
jnp
jno
daa
cli
jle
(bad)
(bad)
(bad)
jmp
movs
jns
sub
jl
mov
push
mov
cmp
xchg
xor
nop
iret
or
inc
dec
movs
fadd
fiadd
retf
addr16
leave
jo
lods
repz
sar
out
cli
call
ins
xchg
lds
popf
sbb
pop
jno
jecxz
mov
cld
(bad)
(bad)
(bad)
jg
pop
mov
xchg
call
xlat
jmp
adc
xor
scas
mov
ss
xlat
stc
cmp
pop
je
hlt
xchg
inc
or
xor
mov
imul
fldenv
fsubr
outs
stos
mov
xchg
jne
push
dec
mov
outs
(bad)
push
pop
xor
mov
and
fdivr
push
cmp
jmp
mov
call
es
cmp
or
pop
(bad)
(bad)
push
gs
scas
in
leave
inc
fs
and
(bad)
push
sub
mov
sub
inc
jbe
pop
jbe
popa
jo
mov
(bad)
mov
jge
dec
movs
push
fidivr
clc
cmp
call
pop
and
push
loope
leave
adc
cmp
fs
lods
bnd
outs
test
mov
add
das
fiadd
stos
(bad)
loopne
(bad)
sti
add
je
aam
push
jmp
mov
bound
xchg
retf
push
inc
into
aam
xchg
inc
out
inc
outs
(bad)
(bad)
in
mov
aam
imul
cmp
rcr
push
(bad)
mov
adc
add
stos
xchg
shr
jmp
fisub
inc
ja
(bad)
inc
push
sub
ins
push
push
push
xchg
sbb
sbb
add
(bad)
aaa
cld
inc
outs
nop
push
lds
lea
fld
fisub
retf
xor
jg
jmp
xor
mov
jne
dec
loope
mov
add
pop
add
outs
scas
and
fwait
push
out
repnz
sar
lods
fdivp
lds
adc
test
out
push
(bad)
mov
gs
and
mov
(bad)
(bad)
(bad)
jmp
ds
mov
out
imul
pop
xchg
xor
shrd
and
mov
daa
(bad)
cld
pop
std
mov
jmp
xchg
js
pop
jge
cmp
(bad)
fistp
lds
push
and
inc
cs
add
rcr
outs
mov
(bad)
dec
(bad)
loopne
cwde
out
icebp
mov
xlat
loopne
inc
inc
fild
scas
or
inc
pop
push
and
jmp
or
mov
mov
(bad)
in
rcl
sbb
xchg
into
inc
(bad)
(bad)
(bad)
call
xchg
ror
mov
inc
adc
mov
mov
add
xor
outs
sbb
(bad)
(bad)
(bad)
jmp
bound
pop
addr16
mov
xchg
(bad)
or
dec
ins
call
dec
dec
dec
add
inc
rcr
push
xchg
jne
cmp
imul
ja
inc
adc
in
add
and
std
call
cmp
add
jb
mov
or
call
dec
pusha
sub
cmp
(bad)
(bad)
(bad)
dec
ds
push
pop
je
(bad)
not
pop
out
inc
xchg
lea
fild
pop
or
out
push
xor
fidivr
add
inc
add
repnz
xor
mov
add
or
mov
pusha
sahf
in
pushf
add
push
xor
dec
dec
sub
dec
xchg
jns
jb
or
dec
inc
mov
mov
inc
xchg
loope
jbe
(bad)
sub
(bad)
call
xchg
pop
cmp
push
in
inc
sub
push
retf
fldenv
dec
shl
push
jo
clc
lods
cwde
pusha
adc
mov
add
(bad)
dec
mov
mov
jbe
scas
ret
mov
and
inc
or
imul
(bad)
inc
push
xchg
xor
or
add
(bad)
(bad)
(bad)
cmp
inc
xor
mov
sub
adc
xor
inc
(bad)
(bad)
call
out
push
out
and
pop
in
inc
ss
sar
dec
inc
mov
adc
jmp
call
ret
je
adc
mov
sub
(bad)
(bad)
(bad)
call
add
stos
rol
pop
icebp
pop
xchg
(bad)
adc
aam
(bad)
add
lods
inc
pop
(bad)
(bad)
(bad)
fistp
ds
pop
lahf
xor
hlt
mov
inc
and
add
pop
adc
(bad)
call
push
add
mov
mov
rol
inc
ins
sub
daa
and
(bad)
in
(bad)
inc
outs
pop
mov
mov
and
in
call
rol
mov
clc
(bad)
call
pop
sbb
aam
jg
aad
dec
hlt
dec
(bad)
(bad)
jmp
lock
mov
sub
mov
dec
mov
push
and
push
add
(bad)
(bad)
dec
or
les
and
(bad)
push
pop
lock
test
push
jmp
mov
pop
pusha
popf
jge
mov
adc
lods
repz
mov
movs
mov
outs
mov
adc
sub
retf
aaa
cmp
daa
and
mov
and
adc
cs
in
std
dec
inc
ret
es
or
push
pinsrw
mov
and
call
dec
retf
in
outs
jmp
dec
pop
push
mov
cwde
repz
loope
nop
repnz
push
and
(bad)
(bad)
call
ins
jae
cmc
aad
aam
and
test
adc
adc
and
sbb
cli
(bad)
(bad)
(bad)
call
or
mov
aad
adc
add
inc
jmp
push
ja
(bad)
xchg
out
(bad)
(bad)
jmp
mov
outs
and
repnz
ja
xchg
dec
sbb
in
ja
in
jge
(bad)
(bad)
(bad)
ds
in
das
mov
dec
sbb
and
or
cmp
cli
push
out
push
jmp
in
pop
outs
xrelease
sbb
xor
push
adc
in
adc
jl
(bad)
(bad)
call
rcl
pop
cwde
(bad)
pop
xchg
mov
ror
mov
jg
test
cli
xchg
hlt
or
dec
repnz
test
mov
inc
fs
dec
pushf
adc
mov
cmp
ret
fadd
add
int3
or
and
inc
in
and
dec
aam
mov
cmp
and
inc
clc
and
cli
shr
xchg
inc
add
add
(bad)
mov
dec
jb
push
dec
jns
fist
or
add
aaa
dec
clc
mul
ins
jb
jmp
clc
adc
xor
fcomip
(bad)
jmp
inc
adc
int
push
inc
sub
adc
shr
jmp
(bad)
adc
and
jmp
rcr
sbb
push
mov
sub
mov
(bad)
cmp
rcr
add
jp
shr
cmc
cmp
and
adc
aam
mov
jbe
push
pop
sub
jbe
or
dec
push
cli
pop
rcl
inc
and
fimul
cld
push
jg
xor
jne
pop
xchg
cld
(bad)
(bad)
inc
sbb
adc
mov
and
addr16
adc
add
repnz
jmp
sub
inc
loopne
(bad)
and
inc
in
xor
(bad)
jmp
in
sbb
push
xor
mov
mov
ret
xor
add
pop
lahf
add
inc
(bad)
call
inc
mov
cdq
gs
jmp
pop
aad
(bad)
dec
out
fild
pop
xor
dec
push
push
mov
pop
pop
scas
lods
shl
jg
sub
inc
adc
retf
popa
(bad)
dec
pop
cmp
or
pop
xchg
xor
jge
loope
(bad)
xchg
dec
outs
ret
dec
in
jne
jmp
pop
mov
repnz
ins
dec
int3
stos
lods
push
xchg
jg
xchg
popa
mov
(bad)
(bad)
jmp
mov
(bad)
imul
mov
(bad)
mov
sahf
mov
cmp
(bad)
jle
xchg
icebp
pop
cs
inc
arpl
fidiv
xlat
popa
sub
pusha
fdiv
add
cmp
fadd
jl
sub
div
sahf
data16
movs
pop
jmp
sbb
inc
xlat
and
xchg
(bad)
cmp
inc
(bad)
(bad)
(bad)
jmp
inc
xor
fst
push
push
pushf
int
add
ja
push
push
mov
sahf
sub
pop
cmp
(bad)
(bad)
call
xchg
jbe
popa
mov
xor
mov
out
mov
xchg
push
pop
pop
dec
push
sub
(bad)
(bad)
jmp
pop
sbb
sub
fistp
pusha
int
add
ja
or
(bad)
(bad)
(bad)
(bad)
cmp
call
fs
data16
mov
scas
daa
sti
or
test
sub
cld
(bad)
(bad)
jge
sbb
jl
xor
adc
xchg
(bad)
xchg
adc
scas
cmp
(bad)
in
retf
call
int3
jns
(bad)
(bad)
dec
jbe
in
dec
inc
mov
xor
jle
add
gs
scas
(bad)
int
adc
(bad)
fist
cli
daa
push
call
jmp
mov
or
inc
sbb
ins
lods
mov
xchg
loope
(bad)
call
bound
pop
adc
int
rcl
add
loope
mov
call
shr
cdq
inc
sar
cmp
sub
inc
fdivr
mov
xor
imul
inc
jb
cld
xchg
sahf
rcl
outs
sbb
pusha
mov
addr16
or
mov
(bad)
mov
ror
add
jge
gs
sbb
xlat
(bad)
(bad)
dec
pop
dec
ins
cmp
add
not
stos
xchg
neg
dec
sbb
dec
add
and
lods
and
(bad)
jg
xlat
cmp
jle
retf
xor
das
daa
xchg
out
(bad)
(bad)
(bad)
dec
imul
call
add
jp
or
sub
push
pusha
cmp
test
xor
dec
mov
jle
cmp
pop
(bad)
push
push
mov
xor
(bad)
jns
push
aad
mov
sub
mov
inc
bound
jmp
clc
pop
shr
(bad)
(bad)
(bad)
jmp
pusha
in
xor
mov
(bad)
push
enter
sub
je
ins
jge
int3
mov
(bad)
(bad)
jg
push
xchg
dec
out
into
fcomp
lock
stos
js
jae
wrmsr
jg
mov
(bad)
(bad)
dec
ins
add
fisttp
xlat
jbe
mov
ret
mov
ja
scas
jecxz
call
mov
push
dec
cmc
out
inc
std
pop
mov
fucomip
add
mov
jle
clc
ss
sub
mov
xchg
jnp
cld
(bad)
fucomip
aad
pop
es
sbb
jge
fcomip
in
aad
jnp
(bad)
jg
cs
push
loop
mov
mov
jmp
jbe
aam
dec
hlt
inc
imul
repnz
dec
les
mov
jmp
sub
pop
mov
jo
dec
ret
(bad)
(bad)
mov
add
fdiv
mov
stc
ja
inc
stos
inc
test
(bad)
(bad)
(bad)
inc
ror
push
mov
in
call
sar
call
(bad)
mov
inc
xchg
push
fwait
mov
out
ins
mov
jg
bnd
mov
pop
(bad)
clc
cmc
mov
clc
das
neg
sahf
push
jmp
(bad)
or
jns
leave
mov
fidivr
ins
sbb
mov
psrld
test
scas
lock
(bad)
loopne
dec
lock
mov
fbld
imul
cmp
cld
pop
fst
jp
(bad)
cli
or
popf
(bad)
(bad)
jg
jl
pop
cmp
lds
scas
lods
bound
out
sub
or
mov
dec
bound
cmp
push
stc
inc
loopne
call
adc
add
pop
xor
lahf
test
mov
adc
sub
pop
(bad)
and
rol
sbb
jno
scas
test
(bad)
mov
js
xchg
xchg
cmp
inc
mov
fs
stos
inc
mov
(bad)
(bad)
(bad)
dec
call
pop
xchg
daa
push
dec
js
xchg
(bad)
mov
sub
add
pop
mov
jmp
outs
lds
out
sbb
fcomp
push
sub
out
clc
call
mov
mov
mov
adc
loope
mov
xchg
sub
arpl
push
inc
push
pop
sar
adc
popf
mov
jo
(bad)
(bad)
jg
mov
in
imul
cli
call
popa
movs
popf
outs
mov
enter
push
clc
jmp
jl
shr
cmp
inc
mov
(bad)
call
std
xlat
test
jl
push
js
adc
pop
dec
jecxz
test
push
(bad)
call
xchg
mov
xchg
sbb
mov
int3
and
and
imul
push
cli
sbb
sbb
call
in
pop
cmp
sbb
mov
jl
stos
jb
cmps
adc
push
mov
call
out
call
jmp
mov
fdivp
das
lods
ret
dec
dec
adc
pop
mov
in
(bad)
dec
push
push
add
cmp
ror
test
clc
es
(bad)
(bad)
(bad)
jmp
cmp
sbb
div
pop
inc
test
cmpxchg
pop
in
jo
out
mov
mov
out
and
movs
clc
jmp
ja
lock
jns
mov
(bad)
leave
js
nop
jnp
pop
(bad)
(bad)
jmp
rcr
in
push
dec
cli
arpl
cwde
or
cmp
out
shl
das
vxorps
(bad)
jmp
push
movs
out
daa
cmp
and
xlat
xchg
shl
jmp
aas
lock
sbb
ret
mul
cmp
mov
or
adc
daa
push
dec
mov
dec
inc
loop
dec
std
jge
mov
call
push
daa
dec
push
fisttp
hlt
dec
xor
loop
or
inc
xchg
dec
xchg
retf
sub
in
sbb
hlt
mov
cmp
and
cmps
imul
call
pop
push
cli
fld
inc
int
test
dec
sub
call
cmc
or
xor
cs
shl
mov
fdiv
repz
push
movs
jl
ret
out
(bad)
cli
es
rol
sar
mov
mov
cli
mov
es
popf
hlt
mov
(bad)
jg
inc
sbb
cmc
iret
cli
mov
iret
arpl
mov
jge
xchg
es
push
sti
xlat
cdq
and
lea
push
mov
sar
inc
aas
rcr
dec
mov
mov
in
pushf
adc
cli
out
clc
fild
shl
sahf
add
mov
cmp
loope
push
cld
(bad)
call
mov
(bad)
jl
jbe
stc
fs
cmp
je
sar
sub
(bad)
fucomip
out
mov
cmp
sbb
test
(bad)
dec
dec
call
outs
jbe
mov
(bad)
mov
push
daa
scas
push
cmp
mov
mov
sbb
push
xor
sub
scas
shl
out
push
or
xchg
mov
mov
or
pop
jecxz
inc
dec
shl
fwait
pop
or
mov
pop
clc
or
shl
aam
xlat
out
ins
push
add
js
xchg
mov
add
dec
popa
std
mov
or
loop
scas
mov
enter
push
inc
add
cmp
push
aaa
dec
loope
mov
outs
jmp
pop
mov
mov
push
or
mov
jnp
inc
push
(bad)
(bad)
jmp
push
inc
jp
sub
push
ror
aam
push
call
(bad)
(bad)
jmp
push
inc
dec
test
stos
cmp
cmps
push
(bad)
(bad)
(bad)
(bad)
js
(bad)
ins
cmc
test
mov
jmp
dec
pop
(bad)
imul
mov
(bad)
(bad)
(bad)
jmp
adc
xor
pop
push
lds
out
aad
neg
mov
ja
fs
bound
(bad)
push
adc
out
shl
inc
jle
arpl
or
jns
jmp
adc
ja
adc
adc
test
clc
cld
call
xor
xor
int3
imul
(bad)
mov
and
mov
adc
out
sub
seto
arpl
ja
imul
xchg
cmp
(bad)
call
push
mov
cmps
add
push
xor
cmp
xor
pop
push
mov
sbb
xor
test
iret
nop
and
(bad)
call
push
xchg
dec
and
pop
ss
xor
or
aad
dec
repnz
stos
inc
fld
enter
cwde
aaa
adc
add
and
and
dec
jmp
(bad)
jmp
out
cmp
clc
mov
loope
ds
not
loop
add
xor
cmp
mov
cwde
(bad)
(bad)
(bad)
push
les
cmp
ins
cdq
aam
inc
dec
addr16
int3
retf
stc
xor
mov
(bad)
jg
(bad)
pushf
rol
pop
fidivr
data16
(bad)
pop
and
(bad)
(bad)
(bad)
push
mov
push
in
xor
aas
icebp
shl
ds
pushf
inc
dec
inc
fbstp
sbb
icebp
mov
xlat
mov
aad
push
pop
sub
(bad)
(bad)
(bad)
(bad)
mov
stos
icebp
mov
adc
cld
(bad)
cmp
les
fadd
loop
pop
dec
lahf
clc
inc
xor
dec
test
bound
push
xchg
fs
(bad)
(bad)
dec
sbb
call
pop
loopne
or
jp
icebp
add
jmp
mov
pop
cmp
mov
mov
pop
(bad)
cld
xchg
les
imul
call
sub
mov
(bad)
(bad)
(bad)
dec
jg
inc
pop
idiv
(bad)
jbe
fdivr
dec
cli
jge
(bad)
jmp
std
out
stc
add
mov
and
fst
dec
repz
pop
and
add
xchg
and
cs
je
lock
(bad)
dec
out
inc
js
add
scas
mov
inc
mov
jg
cmp
mov
add
pop
das
adc
das
imul
mov
push
out
es
imul
mov
(bad)
lods
js
jl
imul
outs
mov
scas
stc
neg
mov
hlt
inc
minps
cld
mov
xor
icebp
(bad)
(bad)
out
fldcw
addr16
jecxz
pop
test
mov
(bad)
into
xor
call
ins
cli
call
clc
in
je
out
aas
scas
stos
jle
cmps
adc
inc
push
pop
pop
(bad)
setb
test
push
pop
or
stos
push
and
ja
and
out
(bad)
(bad)
(bad)
(bad)
jmp
popf
(bad)
out
jb
and
sbb
jno
into
cdq
sbb
out
cmps
(bad)
(bad)
(bad)
(bad)
fdiv
int
in
ss
fist
call
xor
js
push
xor
(bad)
(bad)
(bad)
jmp
fld
jg
sub
mov
in
cmp
ficomp
inc
(bad)
jne
pop
ss
mov
in
repnz
sti
cmps
push
or
lock
clc
inc
aam
inc
xor
jbe
movs
pop
nop
out
sbb
stos
jmp
call
mov
stc
mov
rcr
iret
sub
sub
jbe
cmps
xchg
xchg
and
call
repnz
add
pop
push
xchg
jg
push
or
(bad)
jmp
add
retf
scas
jbe
push
ficomp
pop
fs
arpl
jg
inc
(bad)
inc
and
not
repz
scas
or
leave
int
test
outs
movs
js
cmp
out
(bad)
(bad)
call
sub
retf
dec
xlat
in
dec
inc
in
mov
aad
sti
inc
mov
in
add
lock
mov
jg
pop
(bad)
fisubr
pop
clc
jle
shl
call
add
ja
outs
(bad)
cmp
clc
(bad)
scas
sub
xchg
sbb
sbb
add
inc
jg
(bad)
dec
pop
enter
mov
xchg
jle
scas
aam
sub
aas
movs
scas
pop
(bad)
(bad)
(bad)
dec
aam
ins
std
mov
adc
ds
mov
and
jl
aas
push
lea
or
(bad)
js
je
xor
fidiv
cmc
ret
outs
or
mov
lods
sbb
out
inc
jmp
xchg
xor
dec
jl
sub
cld
sbb
xor
jmp
clc
in
arpl
aaa
xor
inc
rcr
cwde
stos
pop
ins
pusha
add
repz
or
cdq
pop
push
out
stc
xchg
retf
push
test
jns
or
js
shl
fidivr
sub
jecxz
mov
inc
inc
stc
das
les
(bad)
(bad)
inc
mov
daa
push
mov
lods
pop
int3
dec
test
inc
cmp
das
in
popf
cmp
inc
push
dec
xchg
in
popf
xor
loop
aam
mov
add
fimul
fucom
cmps
fld
out
popf
das
lahf
mov
sti
inc
leave
lea
mov
mov
cdq
xchg
retf
jb
shl
div
adc
mov
add
mov
arpl
cld
sbb
outs
(bad)
das
fsub
ror
shr
pop
pop
cmp
push
sbb
arpl
call
outs
mov
pop
and
mov
je
(bad)
(bad)
mov
mov
cmps
mov
adc
add
mov
sub
push
pop
fstp
imul
dec
adc
fsub
mov
(bad)
out
fsub
mov
mov
lods
mov
push
dec
std
(bad)
call
jb
not
sub
imul
inc
push
sub
lock
out
(bad)
(bad)
(bad)
(bad)
jnp
idiv
and
ins
(bad)
lods
pop
mov
into
mov
es
mov
test
sar
jg
test
movs
adc
les
out
adc
push
jmp
int3
int
push
es
and
inc
or
inc
div
cmp
movs
jne
les
(bad)
jmp
mov
retf
(bad)
cmp
add
or
dec
mov
pop
(bad)
(bad)
dec
mov
jnp
add
add
pop
mov
jp
mov
leave
clc
inc
rol
mov
test
cmps
fisttp
dec
ins
retf
push
push
sub
jle
in
fwait
jmp
call
push
mov
das
jmp
mov
(bad)
(bad)
call
xchg
sub
outs
test
mov
(bad)
(bad)
jg
mov
fsubr
(bad)
mov
sbb
inc
and
xor
div
inc
pop
shl
cdq
icebp
(bad)
jmp
cmps
xor
and
mov
or
mov
scas
popa
cmp
or
fisub
ss
(bad)
push
shl
mov
ja
(bad)
mov
scas
shl
in
sti
jecxz
sub
mov
(bad)
call
adc
inc
pop
and
xchg
adc
dec
inc
adc
fs
cmp
je
jmp
jl
ror
pop
in
(bad)
fbstp
retf
cdq
mov
jo
inc
cwde
in
pop
dec
pop
test
imul
mov
movs
sub
sbb
xchg
jno
mov
neg
xor
daa
leave
test
jmp
(bad)
je
shl
cli
jmp
xchg
xchg
retf
sub
ret
stos
test
cmp
fs
sar
(bad)
(bad)
dec
dec
mov
repz
movs
ja
add
cli
cli
scas
dec
add
inc
enter
icebp
(bad)
cmp
mov
jo
fst
push
dec
outs
lods
mov
popf
dec
(bad)
sbb
xor
dec
inc
xchg
mov
inc
rcr
dec
stc
imul
(bad)
jmp
cmp
cld
iret
pop
and
(bad)
not
int3
jmp
push
(bad)
cmp
pop
sbb
test
xchg
pop
(bad)
(bad)
(bad)
inc
pushf
lea
and
inc
(bad)
aad
push
inc
mov
(bad)
enter
clc
jnp
lock
(bad)
jmp
stos
shl
and
inc
clc
fistp
iret
dec
xchg
enter
mov
pop
mov
call
movs
dec
dec
adc
mov
push
(bad)
xor
ret
jo
(bad)
call
add
and
je
mov
sub
inc
dec
cmc
inc
sub
(bad)
(bad)
(bad)
cmp
fadd
push
sub
gs
aam
je
inc
stos
ret
sub
std
(bad)
call
std
fsubrp
jmp
call
out
mov
fxch
mov
dec
(bad)
(bad)
(bad)
push
out
xor
out
and
data16
inc
sub
in
aaa
cli
mov
(bad)
jmp
adc
dec
xchg
aam
pushf
jge
movs
(bad)
mov
mov
test
int3
pusha
cli
pop
(bad)
(bad)
(bad)
call
mov
imul
adc
ins
rcr
xor
xor
inc
push
add
call
lods
aam
ss
in
sub
dec
(bad)
dec
pop
into
ins
sar
or
neg
fidivr
dec
jg
push
mov
pop
inc
fimul
jmp
push
mov
push
xchg
fld
arpl
xor
(bad)
jmp
iret
ffreep
and
cs
(bad)
fbstp
into
ins
xchg
mov
push
mov
gs
mov
dec
cmp
iret
(bad)
retf
sub
test
ror
(bad)
adc
shl
and
es
(bad)
(bad)
call
out
cmc
test
mov
mov
imul
mov
ret
(bad)
fcomip
xchg
sti
ins
test
cmp
xor
jle
(bad)
jo
add
fnsave
jg
(bad)
jg
add
ret
push
push
aad
mov
loop
cmc
je
(bad)
ins
in
leave
sub
div
xor
jnp
push
cs
sbb
sbb
xchg
inc
and
adc
xor
cld
add
outs
es
add
sar
inc
xlat
inc
or
push
mov
jecxz
outs
lds
pop
push
dec
out
mov
(bad)
jg
out
or
fwait
sbb
ret
xchg
aam
xor
hlt
jb
(bad)
jmp
cwde
imul
pop
mov
mov
je
sbb
xchg
popa
je
dec
jns
mov
mov
cwde
movs
mov
mov
lods
(bad)
(bad)
(bad)
push
push
adc
ja
add
mov
icebp
shr
ss
mov
fistp
dec
push
dec
push
sub
mov
inc
or
sub
mov
into
adc
fwait
add
cmp
aas
push
out
xchg
rcr
call
or
dec
setb
in
xchg
test
adc
ds
cmp
lahf
mov
(bad)
inc
pop
icebp
cmps
je
and
dec
mov
or
mov
(bad)
(bad)
call
not
es
(bad)
jp
jb
pop
fwait
clc
cwde
faddp
inc
stc
je
jo
aad
cmp
mov
(bad)
mov
and
fs
xchg
mov
push
sar
push
jle
outs
fprem
jp
cmp
fisttp
mov
out
gs
ins
mov
fild
mov
lock
fs
popf
aam
fwait
(bad)
mov
scas
adc
mov
call
fnsave
adc
pop
and
xor
sub
push
xor
(bad)
(bad)
push
xchg
lods
cld
push
cdq
int3
es
fstp
jl
mov
sub
(bad)
jmp
add
(bad)
sti
outs
in
addr16
out
mov
repz
xor
(bad)
(bad)
jmp
inc
cld
jge
vmwrite
pop
(bad)
sbb
mov
out
xor
and
dec
enter
icebp
jmp
lock
push
lahf
mov
jmp
cli
jp
scas
inc
sahf
neg
(bad)
(bad)
(bad)
(bad)
fidivr
popa
fisub
jo
sti
sub
(bad)
(bad)
mov
popf
mov
ins
mov
dec
(bad)
(bad)
(bad)
add
les
inc
data16
sub
pop
dec
movs
cwde
mov
icebp
or
(bad)
dec
jns
out
push
scas
or
fist
pop
shl
mov
dec
mov
sbb
retf
cmp
jmp
mov
mov
mov
xor
icebp
xor
sub
pop
or
scas
retf
sahf
sub
mov
push
movs
fs
jge
mov
push
jne
mov
jmp
jmp
mov
xchg
sub
cmc
push
rcr
sti
jo
jnp
jg
(bad)
call
loopne
in
idiv
push
out
addr16
in
jge
outs
(bad)
out
cmc
jne
mov
sar
(bad)
jmp
jmp
out
jge
mov
(bad)
(bad)
jmp
test
ret
adc
test
das
es
aas
sub
(bad)
cmp
lock
das
retf
jmp
xor
(bad)
(bad)
test
sbb
dec
push
(bad)
jmp
and
outs
fisubr
test
test
jmp
(bad)
(bad)
(bad)
push
data16
fstp
xchg
adc
jbe
cmc
leave
sub
dec
sub
dec
retf
dec
mov
jne
dec
fwait
(bad)
(bad)
(bad)
mov
imul
outs
pmaxub
jbe
xor
push
ficomp
in
inc
add
(bad)
(bad)
(bad)
cmp
cmp
cmp
xor
and
xlat
cli
mov
add
pop
loop
(bad)
(bad)
push
jmp
bound
stos
mov
ja
or
sbb
mov
pop
out
out
cld
pop
cld
(bad)
ficomp
int3
xor
push
sbb
mov
mov
push
in
dec
(bad)
jg
dec
out
jb
shl
retf
dec
call
jns
ds
(bad)
(bad)
dec
sar
dec
fistp
or
or
arpl
lock
jmp
cmp
inc
es
div
nop
dec
loop
out
mov
inc
jge
dec
or
jg
imul
pop
mov
ja
push
loopne
nop
repnz
(bad)
(bad)
push
aam
or
jae
jae
or
movs
pop
addr16
xor
push
int
sbb
jg
add
sbb
pop
in
in
mov
pop
push
(bad)
(bad)
(bad)
jmp
test
lds
out
inc
enter
pop
jmp
stc
cmps
pop
pop
xchg
mov
mov
or
aam
push
xor
sbb
fdiv
jp
and
jae
dec
xchg
clc
dec
cmp
outs
ret
loope
ficomp
mov
push
(bad)
mov
sub
jae
mov
fs
push
push
xor
pop
sbb
push
inc
gs
(bad)
(bad)
push
rcr
ins
sub
dec
loop
add
dec
jp
shr
es
mov
cmp
outs
mov
push
cld
add
push
imul
dec
and
jmp
repz
or
pushf
mov
xchg
(bad)
(bad)
(bad)
cmp
jp
popa
cs
sbb
or
inc
dec
push
xchg
test
leave
std
mov
(bad)
sbb
mov
(bad)
dec
popa
(bad)
loop
xchg
es
jmp
dec
mov
ds
pop
inc
std
mov
push
inc
xor
(bad)
cmps
xor
push
scas
add
(bad)
jmp
xchg
push
add
dec
dec
into
hlt
cmc
call
lahf
and
arpl
das
add
xor
mov
mov
adc
sar
loope
inc
dec
push
cmp
pushf
(bad)
mov
jbe
mov
cmps
popf
cmps
popa
mov
stos
(bad)
(bad)
(bad)
jg
xor
inc
mov
jbe
call
pop
enter
mov
scas
mov
xchg
cwde
loopne
xor
inc
fidiv
sbb
push
or
mov
not
adc
mov
push
in
movs
popf
mov
scas
and
jle
add
mov
sti
repz
inc
xchg
push
in
aad
cld
punpckhbw
int
mov
mov
test
push
call
pop
cmp
sbb
pop
(bad)
(bad)
push
clc
jo
pop
and
out
cmps
std
sub
mov
in
and
add
out
push
push
aaa
cmp
mul
mov
inc
icebp
jg
dec
(bad)
xor
adc
int3
cmp
(bad)
dec
mov
push
xchg
cmps
test
xchg
sbb
xchg
xor
daa
xchg
dec
add
sar
cmp
adc
dec
int3
push
mov
je
aas
not
jbe
jo
hlt
xchg
pop
jno
in
in
xchg
sub
fld
(bad)
(bad)
in
push
into
stos
and
gs
adc
mov
jo
movs
push
pop
dec
fwait
cdq
aam
sbb
es
mov
ret
cwde
imul
(bad)
sbb
sub
icebp
push
icebp
inc
popa
pop
mov
push
ficomp
mov
aaa
ret
ret
mul
iret
adc
retf
(bad)
(bad)
(bad)
call
ret
sbb
pop
cmp
xchg
push
bswap
cmps
adc
or
jl
cli
mov
(bad)
inc
call
adc
sahf
in
mov
movs
fisub
xchg
(bad)
(bad)
(bad)
dec
push
aaa
mov
fidiv
cdq
jmp
stos
or
adc
pusha
fiadd
fwait
into
(bad)
shr
jbe
(bad)
(bad)
(bad)
dec
arpl
adc
dec
cmps
push
xor
movs
sbb
or
mov
sub
loopne
push
pop
addr16
and
icebp
movs
(bad)
pop
mov
sub
sbb
mov
rcr
(bad)
dec
in
mov
pop
dec
test
outs
enter
inc
ds
cld
(bad)
imul
test
das
xor
inc
fld
(bad)
(bad)
push
cwde
mov
add
adc
(bad)
arpl
dec
cmc
test
and
ins
(bad)
sub
inc
mov
jmp
add
push
repz
inc
test
(bad)
(bad)
mov
sar
stc
pop
push
jg
xlat
das
add
push
lock
repnz
cmp
loopne
dec
xor
jmp
jmp
or
pop
sar
(bad)
mov
sub
add
cmp
jb
dec
mov
cld
adc
hlt
mov
jbe
mov
cmp
xor
push
mov
add
call
and
cmc
pop
ins
dec
add
or
push
(bad)
(bad)
jg
push
test
sbb
adc
cmp
inc
fwait
push
(bad)
sar
mov
(bad)
(bad)
fild
(bad)
sbb
pop
add
pop
pop
push
cmp
mov
inc
sub
(bad)
(bad)
(bad)
inc
call
out
dec
imul
mov
and
mov
retf
test
lods
rol
enter
mov
sub
imul
xor
cmps
cmps
add
mov
mul
mov
or
outs
loope
movs
inc
push
(bad)
mov
mov
dec
pop
test
jae
pop
outs
xor
call
shl
pusha
xchg
push
push
cmp
bound
mov
outs
gs
fcomip
shl
out
inc
or
mov
add
inc
aad
push
in
(bad)
(bad)
(bad)
fcom
retf
das
mov
push
or
push
push
push
xchg
lds
push
dec
dec
mov
loopne
add
sub
(bad)
dec
bound
cmp
retf
into
inc
sbb
xor
mov
dec
mov
(bad)
jg
xor
pop
stos
push
push
mov
push
inc
stc
cmp
retf
movs
adc
jg
dec
cmp
adc
mov
ret
xchg
test
adc
pop
sub
test
dec
ins
sub
cmc
adc
pop
inc
aas
pop
stos
pop
sub
stos
(bad)
daa
xchg
(bad)
(bad)
push
push
ds
test
mov
mov
jge
sub
xchg
dec
outs
or
(bad)
(bad)
(bad)
(bad)
inc
dec
or
std
pop
mov
add
lods
push
fcomp
sub
(bad)
(bad)
inc
sub
push
retf
add
cmp
sar
int3
inc
test
or
pop
dec
jmp
sahf
or
push
gs
(bad)
(bad)
(bad)
jmp
test
lea
ss
fs
sub
ins
dec
loopne
push
inc
imul
add
pop
add
pop
jno
jae
push
lahf
shl
(bad)
ficomp
not
inc
lahf
push
inc
push
xor
inc
cmp
cmps
jge
add
jmp
xchg
push
scas
jle
sbb
les
ficom
ret
sar
outs
dec
(bad)
out
pop
fs
dec
fisttp
ficom
les
mov
sub
fadd
jmp
jne
or
not
cmp
sbb
inc
cld
jg
call
jl
xor
jp
addr16
sub
or
mov
outs
das
movs
and
(bad)
(bad)
push
sar
dec
xor
add
pause
aaa
shl
fwait
leave
outs
pop
and
fcomip
sbb
out
popa
cmp
sub
adc
jae
jecxz
cli
(bad)
(bad)
call
shl
or
adc
mov
enter
jo
sub
mov
div
inc
cwde
pop
call
cld
das
ins
or
jmp
div
cmp
outs
push
sar
(bad)
(bad)
(bad)
std
mov
xlat
jns
sti
pop
mov
sti
xchg
call
inc
dec
inc
pop
mov
pop
and
(bad)
cmp
xchg
inc
or
push
or
mov
(bad)
jo
int3
retf
dec
test
inc
inc
(bad)
(bad)
(bad)
call
out
leave
dec
or
cmp
cmp
or
xor
sti
sbb
int
sub
not
mov
rcr
pop
stos
vcvtpd2ps
cld
(bad)
inc
sbb
ins
mov
pop
bound
inc
repnz
add
push
and
in
mov
and
ja
mov
push
or
cmps
or
mov
(bad)
(bad)
jmp
dec
push
dec
outs
xlat
sbb
mov
lahf
(bad)
cmc
jecxz
das
lock
jge
cmp
movs
cld
sub
cmp
jmp
mov
sbb
mov
(bad)
movs
(bad)
mov
jge
cwde
test
(bad)
call
pop
sub
sbb
leave
and
xor
xor
mov
lods
or
ins
mov
mov
lock
xor
cmc
outs
xchg
pop
adc
mov
(bad)
call
out
rol
cld
inc
popa
inc
xchg
dec
cmp
push
push
pop
jmp
(bad)
(bad)
dec
sbb
cdq
scas
pop
jle
xor
imul
pop
test
test
pop
shl
jnp
mov
xchg
fidiv
ja
imul
sar
add
or
xchg
sti
inc
stos
mov
mov
mov
bound
outs
repz
or
mov
dec
jb
adc
(bad)
push
in
mov
xor
int3
inc
lock
mov
push
lea
ror
nop
jmp
aam
(bad)
(bad)
(bad)
dec
cmps
mov
jecxz
dec
retf
int3
cmp
not
fcmovbe
or
repnz
jmp
jmp
dec
mov
es
ins
mov
pusha
loop
mov
pop
or
fdivr
pop
lahf
or
out
xchg
jl
into
adc
aam
or
ror
ror
aam
(bad)
(bad)
jmp
ret
aas
sbb
jmp
fwait
pop
scas
sbb
mov
(bad)
jg
sub
mov
in
test
or
push
aaa
cmps
add
popf
out
in
outs
clc
mov
push
sbb
jle
push
or
fisubr
div
(bad)
(bad)
(bad)
push
adc
add
dec
clc
xchg
push
mov
xchg
popa
in
in
int3
mov
inc
jns
(bad)
(bad)
(bad)
std
hlt
outs
push
pop
lea
dec
loope
add
loopne
mov
inc
sub
(bad)
(bad)
(bad)
push
(bad)
or
push
inc
add
fimul
repnz
push
or
stos
xor
pop
xchg
pop
inc
adc
repnz
cmovbe
(bad)
(bad)
inc
push
dec
movs
or
cmp
push
and
shr
and
(bad)
(bad)
(bad)
mov
dec
sbb
mov
push
adc
mov
push
inc
std
iret
movs
(bad)
(bad)
(bad)
jmp
loop
lea
mov
inc
dec
dec
cs
xor
ja
fimul
adc
adc
scas
popa
ja
push
aas
sar
scas
dec
(bad)
mov
(bad)
jmp
(bad)
sbb
das
xchg
les
repnz
stos
inc
jle
jge
inc
out
and
mov
rcl
(bad)
push
pop
pop
outs
add
std
fdivrp
nop
cld
mov
adc
cmp
sub
(bad)
(bad)
fild
mov
leave
inc
lods
fsubr
and
mov
jns
imul
push
shl
pop
test
cld
dec
push
adc
push
sub
int3
fcomp
fisubr
mov
in
cli
mov
test
(bad)
(bad)
jmp
cwde
xlat
cmp
enter
shr
stos
mov
loop
and
in
in
(bad)
(bad)
(bad)
push
call
inc
pop
and
stc
dec
bound
scas
add
add
cmp
je
(bad)
jg
jmp
mov
sbb
test
es
aaa
in
ror
(bad)
(bad)
(bad)
call
and
add
add
(bad)
out
pusha
and
cmp
xchg
aaa
aam
mov
cmp
fisub
loopne
(bad)
(bad)
(bad)
call
nop
out
xlat
cmp
in
movs
outs
mov
inc
std
xchg
pop
adc
and
jae
sbb
(bad)
(bad)
push
sub
scas
sbb
push
lods
pushf
into
test
mov
pop
pop
and
(bad)
(bad)
push
sub
imul
in
or
loopne
push
pop
or
or
and
(bad)
(bad)
jmp
inc
push
call
mov
sub
jmp
sbb
shr
clc
jmp
cs
out
sar
pop
push
imul
(bad)
(bad)
(bad)
(bad)
aas
xchg
push
inc
xor
iret
sbb
outs
add
fcom
sti
jg
add
lds
mov
loop
fisubr
popf
shr
imul
or
add
lods
fadd
(bad)
cld
push
cmp
sbb
aam
clc
push
sub
push
imul
lock
jmp
call
mov
fsub
repnz
dec
jns
jecxz
mov
mov
pop
aaa
leave
sar
mov
mov
jle
repnz
movs
imul
inc
icebp
inc
xchg
jle
hlt
scas
(bad)
fmul
cmps
pop
pop
retf
psllq
hlt
bound
pusha
lods
(bad)
(bad)
push
adc
popf
cmp
gs
fcomp
mov
retf
rol
jg
jo
test
neg
xchg
arpl
lds
sar
pop
outs
dec
add
(bad)
(bad)
jg
mov
sub
lods
xlat
xchg
jno
jmp
sar
das
cli
das
sub
in
retf
xor
cdq
repz
mov
fist
(bad)
mov
sbb
jge
stos
xor
inc
js
and
(bad)
cmp
push
imul
sti
or
fimul
jns
(bad)
(bad)
call
aaa
aaa
jnp
cwde
add
(bad)
rol
loop
jp
mov
mov
inc
inc
inc
gs
fnsave
dec
dec
jmp
clc
inc
ins
xchg
inc
ror
xor
popa
add
dec
test
mov
rol
mov
ds
adc
xor
adc
(bad)
(bad)
jmp
push
xchg
xor
cmc
push
xchg
fcmovbe
jmp
dec
sub
aaa
mov
cmp
(bad)
(bad)
(bad)
jmp
and
bound
out
mov
pop
nop
pop
pop
(bad)
xchg
repnz
pop
sub
idiv
(bad)
(bad)
push
dec
test
repz
cmp
or
sub
fmulp
aam
jbe
aaa
mov
cmc
data16
(bad)
(bad)
(bad)
jmp
sbb
sbb
pusha
sbb
pop
outs
push
mov
(bad)
mov
es
pop
sub
test
cmps
mov
cmp
mov
xchg
cld
mov
outs
jle
sub
jmp
js
mov
(bad)
(bad)
(bad)
push
xor
cmps
fild
lods
test
in
lock
outs
xor
popa
sbb
or
lock
adc
(bad)
(bad)
inc
enter
retf
shl
adc
xchg
repnz
xchg
jnp
mov
(bad)
(bad)
cmp
or
and
and
xchg
pop
push
inc
ret
push
cmp
scas
xchg
mov
ror
jno
popa
pusha
mov
in
in
mov
push
jmp
popa
sbb
adc
(bad)
(bad)
jg
dec
les
pop
aas
inc
xchg
add
jl
push
loop
sbb
std
(bad)
(bad)
(bad)
call
sar
idiv
xlat
cmp
inc
cmp
sub
mov
jge
pop
pop
jmp
stos
pop
cmp
(bad)
(bad)
jmp
scas
mov
mov
jl
add
xlat
stc
push
clc
or
(bad)
shl
loope
(bad)
call
jmp
repz
retf
push
push
(bad)
retf
or
(bad)
hlt
(bad)
dec
(bad)
fcomp
rol
popa
mov
hlt
jne
(bad)
(bad)
(bad)
mov
out
sbb
cmps
jno
ins
mov
pop
add
xchg
xor
call
pop
div
idiv
jnp
pop
in
mov
mov
neg
mov
mov
(bad)
(bad)
(bad)
dec
rcr
mov
sbb
mov
(bad)
push
pop
in
add
cmp
add
mov
push
(bad)
cli
mov
inc
sbb
jae
push
pop
fstp
jmp
xchg
cmps
push
lock
pusha
add
add
inc
sbb
bound
mov
imul
push
xchg
lahf
push
fcmovnu
push
sar
(bad)
jg
inc
jl
push
dec
in
jmp
cmp
xchg
jmp
bnd
test
jge
ret
mov
fadd
ret
imul
adc
mov
mov
mov
or
fadd
ret
(bad)
adc
(bad)
mov
xor
adc
aad
cmp
and
fucomi
out
clc
call
sub
bound
fsubrp
(bad)
cmps
retf
lds
jb
outs
outs
clc
(bad)
jmp
outs
add
ins
les
rol
cmp
in
jg
add
into
jnp
add
call
icebp
aas
add
(bad)
push
pop
fdiv
test
and
jae
mov
cld
jmp
mov
xor
mov
in
icebp
cmp
(bad)
(bad)
inc
rcr
(bad)
jno
mov
imul
mov
inc
dec
dec
xor
fimul
mov
cmps
jg
(bad)
call
adc
sub
pop
ins
stos
mov
inc
push
add
(bad)
(bad)
jmp
mov
pushf
jo
ret
mov
loopne
jge
adc
stc
je
pop
(bad)
sti
mov
loope
ret
dec
or
(bad)
push
div
(bad)
cli
pushf
das
(bad)
aas
adc
cld
call
adc
dec
test
lods
push
mov
imul
fisub
add
mov
ror
pop
imul
div
ss
jmp
lea
or
adc
ds
xchg
cld
fisub
(bad)
(bad)
call
add
pop
sbb
test
sbb
int3
mov
call
cld
(bad)
cmp
aas
pop
les
mov
test
aas
leave
adc
pop
dec
dec
push
movs
inc
jb
call
or
cld
lods
dec
jmp
jg
call
ins
sub
adc
(bad)
call
sbb
in
mov
scas
repz
stc
mov
neg
and
sar
inc
or
(bad)
fldenv
enter
stc
out
hlt
xchg
nop
in
xchg
push
mov
jg
jge
xchg
mov
cmp
mov
icebp
test
out
pop
adc
cli
mov
retf
call
pop
xchg
dec
xchg
bound
add
dec
call
add
pop
out
mov
sub
xor
cmp
int
push
adc
push
push
xchg
(bad)
pop
ins
pop
inc
pop
test
stos
mov
xor
(bad)
mov
aas
xor
jl
retf
ficom
jmp
(bad)
inc
rcr
gs
jbe
lahf
in
inc
inc
in
sub
retf
outs
push
std
(bad)
(bad)
dec
repnz
xchg
pusha
mov
or
mov
repz
xchg
jge
push
mov
out
cld
mov
mov
jmp
enter
fidivr
dec
sbb
test
pop
inc
mov
or
in
sar
(bad)
call
nop
shl
repz
mov
sub
inc
sub
mov
jg
ror
loope
sbb
and
scas
dec
jmp
ja
or
cli
pop
movs
hlt
push
jne
inc
pop
and
(bad)
push
js
std
sub
(bad)
fsubrp
xchg
rcl
(bad)
push
adc
(bad)
(bad)
(bad)
in
stc
jecxz
dec
jo
adc
mov
aaa
pop
sub
das
mov
inc
movs
xchg
and
add
(bad)
(bad)
call
push
jmp
add
dec
add
gs
push
sub
call
inc
movs
adc
repz
mov
adc
push
movs
jae
jle
pop
lods
xor
mov
stos
push
movs
gs
daa
outs
(bad)
inc
and
sub
cdq
daa
call
inc
loopne
push
jmp
mov
dec
mov
sbb
hlt
(bad)
popa
pop
mov
(bad)
(bad)
(bad)
(bad)
stc
test
jg
repz
mov
push
test
shl
test
mov
rol
mov
(bad)
jmp
cmp
push
jns
cmp
xlat
popa
je
sbb
jne
xchg
pop
out
(bad)
push
pop
inc
out
vmread
push
mov
cli
or
out
or
retf
clc
push
das
sbb
aam
mov
cmp
and
dec
add
adc
push
test
scas
je
adc
jmp
sbb
(bad)
dec
add
or
cmp
mov
pop
push
mov
inc
push
ret
mov
hlt
fwait
cmp
shr
out
dec
sub
(bad)
(bad)
out
pop
and
ss
sahf
pop
outs
cwde
xchg
repnz
inc
pop
fbstp
sahf
xchg
or
push
repnz
ss
sub
neg
mov
rcl
push
in
add
xchg
ja
lea
or
pop
jmp
fdivr
(bad)
mov
fwait
push
xchg
ins
stos
mov
mov
js
xchg
stos
mov
clc
loop
and
xor
sub
sub
jge
(bad)
(bad)
inc
lods
lods
cmps
repnz
cmc
mov
cmp
mov
repnz
(bad)
jg
stos
test
popf
leave
dec
popf
inc
xchg
pop
stc
jnp
inc
lahf
popa
push
jge
repz
adc
jg
(bad)
jnp
out
push
inc
lea
unpckhps
adc
pop
mov
mov
adc
test
(bad)
(bad)
jmp
lea
movs
or
mov
pop
cmps
ins
pop
push
or
push
movzx
pop
test
sbb
sbb
(bad)
fisttp
or
arpl
inc
pop
or
pop
stos
clc
(bad)
(bad)
jmp
add
xchg
sbb
call
fist
adc
hlt
sub
retf
lea
pop
fiadd
xchg
push
or
dec
fcomip
(bad)
call
mov
(bad)
bound
push
push
add
jle
pop
mov
ins
in
hlt
cmp
movs
push
inc
cli
cs
hlt
stc
push
mov
mov
mov
adc
ret
aad
mov
sbb
jp
fisubr
bound
pop
(bad)
(bad)
(bad)
(bad)
(bad)
js
mov
(bad)
pop
add
arpl
call
cmp
xchg
and
(bad)
(bad)
jmp
addr16
sub
xor
xchg
test
adc
test
pop
adc
std
(bad)
(bad)
(bad)
call
out
in
fcomp
cmp
push
add
adc
push
push
inc
and
inc
sbb
pop
and
(bad)
call
xor
pushf
sbb
xchg
jb
jl
mov
add
mov
call
stos
pop
std
add
std
call
daa
pop
add
lea
sar
test
mov
ja
mov
movs
inc
cld
pop
mov
fldcw
jbe
dec
xchg
out
xchg
dec
adc
fcomip
jg
int3
sub
jb
in
push
stos
fsub
mov
push
ins
std
xor
lods
inc
xor
fwait
mov
(bad)
(bad)
(bad)
dec
xchg
cmp
xor
sbb
cmps
xchg
test
std
xor
mov
or
xor
aaa
sub
mov
(bad)
(bad)
(bad)
fsubr
mov
sti
fiadd
fcomp
mov
xor
cdq
push
(bad)
(bad)
(bad)
call
adc
sbb
ret
rol
lods
push
or
mov
adc
sub
add
adc
mov
fild
push
inc
call
jno
push
in
stos
call
push
mov
dec
mov
retf
enter
push
popa
push
pop
(bad)
jmp
les
loop
imul
(bad)
(bad)
jg
mov
inc
das
cdq
das
out
test
inc
jne
rcr
jbe
push
test
test
(bad)
(bad)
cmp
cmc
xor
iret
cmps
aaa
jnp
faddp
ss
push
stos
adc
loopne
push
dec
push
aaa
std
call
mov
std
push
and
xchg
mov
jle
sbb
packuswb
mov
push
inc
pop
arpl
mul
sar
pop
sbb
es
mov
call
test
jecxz
jne
(bad)
(bad)
(bad)
dec
std
mov
push
jle
or
jb
jge
lds
sub
xchg
bound
fwait
xor
data16
adc
(bad)
(bad)
(bad)
cmp
ja
dec
lahf
(bad)
pop
sbb
pop
or
dec
inc
inc
cdq
loopne
sub
stos
adc
inc
lahf
xchg
or
dec
leave
icebp
addps
call
sbb
in
xor
push
pop
add
push
fcomip
mov
jbe
fwait
into
xor
leave
fstp
bound
adc
loope
push
mov
dec
in
ret
dec
push
jae
push
jmp
xor
(bad)
jno
mov
(bad)
(bad)
inc
push
inc
add
jne
or
sub
pop
xchg
clc
and
(bad)
(bad)
sti
sbb
inc
mov
push
stc
ins
int3
jb
mov
jecxz
cmp
sahf
mov
(bad)
call
mov
fist
pop
cmp
mov
inc
test
ja
test
clc
(bad)
jmp
inc
mov
daa
mov
fild
aam
xor
popf
pop
adc
jmp
data16
dec
retf
sbb
sbb
(bad)
or
aas
push
sub
cmp
(bad)
jmp
and
mov
push
mov
xor
(bad)
mov
or
aas
sub
popa
mov
xchg
dec
add
pop
sbb
clc
and
lock
(bad)
jg
pusha
or
mov
idiv
push
icebp
(bad)
(bad)
push
ja
sbb
adc
retf
fdivr
xchg
iret
push
dec
ja
loopne
jg
dec
mov
mov
or
ror
ss
rol
(bad)
(bad)
pusha
(bad)
(bad)
jg
xor
(bad)
(bad)
xchg
xchg
add
or
fdivr
dec
mov
xchg
mov
xor
pusha
push
push
cli
push
ds
loop
in
lods
and
cs
(bad)
(bad)
(bad)
cli
pop
sub
pusha
cmps
pop
stc
mov
das
sar
add
bound
xor
daa
inc
loope
mov
clc
shl
push
cmp
leave
(bad)
retf
sub
jecxz
(bad)
jg
push
jp
push
mov
sub
fwait
inc
std
sar
sti
sub
push
pop
in
cmp
xchg
add
sub
cdq
dec
push
jg
call
fld
inc
dec
sub
adc
(bad)
call
sub
inc
pop
and
std
sub
das
adc
and
loop
pop
(bad)
mov
push
cmp
sub
adc
scas
lods
dec
cmp
pop
loopne
xchg
mov
jbe
jmp
jl
adc
mov
(bad)
(bad)
dec
mov
pop
add
jecxz
mov
test
rcr
xor
inc
(bad)
jmp
push
mov
mov
rcr
jmp
jecxz
add
(bad)
call
jmp
sbb
push
lea
and
in
mov
ja
cmp
(bad)
jae
xor
fbld
mov
and
in
xlat
adc
dec
sbb
fsub
mov
aaa
mov
call
mov
das
outs
hlt
iret
retf
pop
lds
mov
sbb
(bad)
(bad)
jnp
sub
adc
in
aaa
jmp
bound
cmp
call
(bad)
popf
data16
or
or
hlt
sahf
inc
xor
mov
ja
pop
(bad)
dec
icebp
jne
dec
cmp
hlt
xor
loop
imul
fistp
dec
or
xchg
jl
xor
inc
jns
sbb
mul
mov
(bad)
(bad)
mov
es
mov
fmulp
leave
mov
ins
int
add
iret
arpl
(bad)
jmp
in
retf
xor
(bad)
sbb
jp
mov
arpl
outs
shl
push
(bad)
(bad)
(bad)
push
je
gs
test
push
pop
or
sub
shl
(bad)
pusha
int3
popa
jns
fstp
(bad)
(bad)
(bad)
fucomi
fstp
inc
(bad)
adc
or
push
sbb
pop
daa
int3
(bad)
mov
ss
(bad)
(bad)
push
fdiv
and
sbb
lds
jecxz
rol
mov
shr
dec
mov
mov
icebp
das
rcl
aaa
out
mov
fstp
or
icebp
je
jo
fwait
jns
jae
int
inc
xlat
mov
(bad)
(bad)
(bad)
call
shld
mov
sbb
push
mov
cli
es
mov
(bad)
(bad)
(bad)
(bad)
in
or
xchg
adc
ins
sub
or
cmp
cli
pmovmskb
mov
ja
xchg
jmp
xchg
mov
call
lock
scas
fmul
jne
adc
or
lahf
sbb
lock
(bad)
inc
inc
pop
and
popa
scas
rcr
aam
mov
cmp
jge
cmps
and
xchg
stc
out
in
or
shl
test
mov
xchg
xchg
mov
lock
(bad)
fimul
retf
mov
push
sti
adc
push
mov
(bad)
inc
fimul
xor
sub
(bad)
mov
adc
jmp
pop
adc
loopne
pop
clc
out
pop
imul
(bad)
push
mov
out
fcomp
jg
xchg
inc
popa
push
dec
test
loop
outs
sbb
sbb
movs
(bad)
(bad)
mov
(bad)
(bad)
push
jecxz
in
ds
mov
mov
push
inc
ja
adc
jp
push
test
cli
cs
pop
je
(bad)
mov
pop
rcr
sub
mov
scas
pusha
imul
jnp
or
cmc
or
xor
pop
xor
sti
(bad)
(bad)
(bad)
push
fdivr
and
xchg
les
jmp
nop
push
sahf
ins
rcl
les
xchg
(bad)
dec
(bad)
push
push
push
lock
fs
addr16
xor
stc
(bad)
es
fisubr
call
daa
cmp
or
clc
push
xchg
jmp
jmp
mov
(bad)
data16
fwait
ins
add
(bad)
out
adc
cmp
jl
cmp
test
pop
lods
add
aas
jnp
mov
push
std
(bad)
call
je
outs
mov
cld
imul
shr
cmp
test
adc
jl
ja
xor
repnz
into
mov
mov
mov
sbb
(bad)
aam
mov
fbstp
cmc
inc
pop
cmp
or
(bad)
(bad)
(bad)
push
mov
leave
mov
mov
adc
push
pop
xchg
inc
ja
mov
shl
mov
xor
cmp
ret
or
std
inc
jge
es
mov
(bad)
jg
mov
lods
rcr
jmp
xor
jle
pop
pop
ds
sar
(bad)
(bad)
jmp
sub
test
(bad)
xor
addr16
call
jns
lods
xchg
mov
outs
gs
xor
sbb
sar
mov
test
or
loope
or
sub
xchg
fnstenv
mov
sub
cwde
out
xchg
loopne
dec
(bad)
call
imul
nop
cmp
ins
jbe
les
xchg
jmp
(bad)
(bad)
(bad)
std
stos
js
movs
mov
and
or
out
mov
push
or
xchg
mov
xchg
or
stc
leave
mov
jge
aam
(bad)
mov
int3
jne
std
pop
shl
(bad)
push
cli
(bad)
(bad)
(bad)
inc
lock
ds
xlat
test
fist
xor
fadd
xchg
xor
dec
mov
fbstp
popf
iret
dec
scas
push
push
std
(bad)
jmp
in
cmp
and
jmp
fdivr
sub
(bad)
(bad)
push
push
mov
stc
cld
mov
push
in
sub
clc
rcr
(bad)
in
jmp
outs
cmp
cmp
leave
repz
fiadd
(bad)
scas
imul
sub
jns
pop
jmp
xor
xchg
cmp
es
cmp
clc
(bad)
jg
call
add
test
and
inc
inc
in
mov
fmul
(bad)
push
call
cmp
aas
or
in
dec
ja
adc
test
pop
or
sti
jle
aaa
push
mov
mov
daa
(bad)
ss
mov
cld
(bad)
(bad)
push
and
bound
dec
cmp
int3
and
(bad)
xchg
cmp
test
(bad)
push
jno
(bad)
jg
fs
cld
out
and
jo
push
clc
test
sub
std
int3
adc
push
mov
shl
sbb
call
(bad)
sbb
cmp
call
je
loopne
call
sub
rcr
sahf
push
mov
pop
inc
jmp
ret
ins
mov
pop
adc
dec
les
leave
loope
(bad)
lods
xchg
push
push
(bad)
(bad)
(bad)
jns
mov
or
sbb
out
fisubr
sbb
(bad)
sbb
jne
(bad)
mov
xor
pop
dec
mov
dec
int
imul
jl
add
lds
mov
bound
(bad)
jmp
inc
xor
inc
xchg
imul
push
pop
mov
(bad)
fisttp
push
movs
inc
sub
repz
mov
dec
adc
xor
adc
mov
dec
pop
add
xchg
pop
inc
mov
cmp
movs
das
add
idiv
pushf
fist
xchg
loope
daa
add
push
mov
dec
dec
push
xchg
(bad)
jbe
mov
clc
cmp
ss
adc
iret
adc
push
(bad)
(bad)
jg
sbb
loope
sbb
jb
iret
aaa
stos
pusha
int
mov
xor
ret
hlt
lods
(bad)
jmp
mov
out
daa
xor
adc
sub
test
(bad)
mov
sbb
inc
sbb
and
dec
push
jmp
cmp
(bad)
inc
test
jnp
cmp
sub
outs
xor
clc
mov
sub
(bad)
das
cli
jmp
dec
cmc
cmp
sub
jge
mov
jbe
jo
pop
sub
sahf
fucomi
mov
dec
xchg
xchg
loop
jbe
dec
in
loop
adc
clc
mov
(bad)
(bad)
call
push
jns
mov
repz
fist
mov
(bad)
(bad)
(bad)
push
xchg
lea
pop
dec
or
or
push
push
ror
jge
test
push
mov
outs
cmp
push
or
jmp
or
ret
pop
dec
(bad)
(bad)
in
mov
stos
call
gs
mul
cmps
xlat
adc
mov
std
mov
dec
sbb
mov
stos
loope
test
mov
pop
movs
stos
add
(bad)
fcom
adc
(bad)
(bad)
(bad)
call
adc
mov
and
dec
and
adc
call
push
sbb
(bad)
jmp
xchg
arpl
or
(bad)
retf
icebp
xchg
pusha
push
jnp
in
nop
mov
jl
lods
mov
pop
mov
scas
and
ja
cld
sub
inc
not
retf
sub
in
lea
test
or
jmp
jns
pop
repz
mov
pop
jmp
clc
jle
nop
pop
push
inc
std
aaa
loopne
fwait
(bad)
sub
dec
mov
clc
retf
and
cmp
les
(bad)
call
mov
add
sbb
mov
fcom
mov
stc
iret
retf
adc
jl
cwde
pop
out
push
(bad)
(bad)
(bad)
jg
sbb
stc
pusha
daa
mov
sbb
fs
inc
enter
adc
fcomi
adc
ins
or
jg
(bad)
fiadd
addr16
cmp
and
loopne
mov
and
xchg
test
(bad)
in
sbb
retf
enter
jns
sbb
pop
mov
clc
cmp
(bad)
(bad)
jl
push
int3
in
xchg
and
sub
sub
sti
push
lock
inc
or
cli
push
cmc
dec
xor
jmp
lock
(bad)
(bad)
jmp
mov
call
jb
adc
add
adc
xor
in
cmp
jl
pop
or
in
popf
cld
jmp
cld
(bad)
(bad)
fucomi
sahf
pop
or
out
lahf
cs
dec
add
rcl
cmp
in
xchg
out
sbb
jmp
std
or
scas
les
mov
ins
cmovno
cmp
adc
jmp
mov
outs
sti
adc
inc
jnp
xlat
(bad)
fist
and
inc
dec
cmp
in
mov
iret
inc
mov
(bad)
ret
or
mov
dec
sub
mov
test
mov
xor
mov
inc
push
or
or
or
popa
ret
mov
loope
cmp
(bad)
(bad)
jmp
xor
nop
inc
xchg
ins
inc
mov
gs
(bad)
inc
jmp
daa
fs
mov
ror
out
fidivr
(bad)
cmp
pop
ret
jmp
mov
(bad)
adc
out
shr
sub
movs
(bad)
(bad)
inc
nop
push
int
push
cli
mov
ds
lahf
inc
jp
pushf
inc
or
(bad)
loop
mov
cmps
outs
or
cmps
sar
jmp
(bad)
(bad)
(bad)
out
stos
mov
push
hlt
shr
and
or
pusha
and
lods
xchg
out
inc
pop
hlt
(bad)
dec
imul
add
mov
jge
outs
adc
or
(bad)
(bad)
(bad)
dec
sbb
push
fistp
and
jnp
call
cmps
nop
push
(bad)
jmp
jbe
imul
sti
push
fisubr
jae
adc
mov
cmps
addr16
std
cmp
jp
std
add
dec
dec
cdq
pop
sbb
lds
test
sub
mov
inc
clc
pop
sahf
cmps
xchg
pop
and
fist
dec
sar
push
daa
icebp
enter
cmps
aad
in
xchg
add
sar
call
std
les
jp
or
loopne
dec
adc
in
pop
(bad)
idiv
pop
aam
lock
mov
les
lock
das
cli
(bad)
(bad)
jo
imul
jbe
xor
nop
imul
pop
js
in
pop
jge
in
sbb
or
fs
rcr
leave
or
imul
call
mov
push
das
(bad)
xor
mov
dec
cmp
(bad)
icebp
jbe
call
lock
arpl
fwait
retf
sub
jecxz
aas
pop
sub
clc
add
pop
xor
xor
and
aaa
std
call
popf
add
fimul
inc
dec
stos
(bad)
clc
push
xchg
adc
adc
adc
aaa
clc
test
scas
inc
fbstp
push
mov
or
or
leave
xchg
mov
inc
mov
and
xor
shr
jp
clc
xchg
and
mov
(bad)
call
xchg
jmp
or
jmp
inc
jnp
jo
mov
sub
movs
pop
icebp
cmp
push
xchg
jnp
test
pcmpeqb
sar
inc
js
or
packsswb
mov
sbb
xchg
adc
sti
(bad)
(bad)
(bad)
push
adc
sub
cmp
rol
sub
sub
inc
ds
push
or
pop
outs
adc
lods
inc
pop
cmp
cmc
mov
cdq
call
movs
(bad)
(bad)
(bad)
push
add
scas
mov
or
mov
or
pop
inc
iret
cld
cmp
sahf
or
and
popa
mov
bound
das
sbb
sbb
leave
xchg
jae
je
stos
(bad)
fcomp
adc
rcl
scas
and
sbb
std
mov
fwait
shl
lods
sar
lahf
add
and
mov
dec
mov
aas
shl
pop
scas
pop
stos
loope
cmp
(bad)
jmp
pop
sub
mov
push
sar
jns
mov
add
(bad)
push
nop
pop
fs
ror
jl
cld
adc
out
inc
lahf
cmp
(bad)
(bad)
jmp
aaa
enter
jg
nop
pusha
aas
pop
inc
mov
xchg
push
lock
mul
xchg
mov
ds
mov
inc
push
pop
ror
pop
adc
outs
pop
test
jg
xor
loop
js
mov
pop
sub
fidiv
add
out
inc
mov
add
sbb
jo
bound
loope
push
add
lahf
xchg
xor
pop
xor
das
and
(bad)
pusha
daa
push
call
(bad)
(bad)
jmp
sar
shr
retf
mov
adc
jle
inc
int3
fbstp
(bad)
inc
jmp
sbb
dec
scas
push
mov
mov
xor
mov
fs
add
hlt
push
mov
mov
cli
sbb
jns
adc
lea
aaa
cli
xor
add
add
hlt
sbb
xor
add
push
xor
(bad)
jg
inc
ja
xor
sub
clc
jns
mov
or
mov
dec
in
addr16
sbb
xor
je
icebp
cli
and
or
jg
push
in
bound
arpl
hlt
mov
mov
jge
jge
popa
mov
jae
in
(bad)
dec
sbb
push
sub
(bad)
fisttp
pop
mov
push
sbb
outs
sbb
or
push
int3
out
cmps
(bad)
loopne
xchg
outs
(bad)
cwde
(bad)
aaa
jge
jle
jbe
lock
sbb
(bad)
sbb
(bad)
and
repz
out
(bad)
jg
and
xor
sar
xchg
adc
scas
adc
xlat
jno
sbb
outs
aas
mov
mov
fldcw
int3
dec
jmp
dec
clc
pushf
sbb
or
(bad)
(bad)
push
stos
je
dec
jp
dec
fs
xor
jns
in
rol
xor
aad
(bad)
dec
xchg
push
outs
sbb
fnstsw
sbb
add
push
(bad)
enter
(bad)
(bad)
(bad)
(bad)
jnp
outs
std
xchg
or
jnp
push
jmp
add
into
sar
leave
jmp
ja
pop
loopne
xchg
mov
xor
cmp
mov
xchg
cmp
fsubr
(bad)
(bad)
(bad)
(bad)
mov
adc
sbb
sub
iret
xchg
lea
and
popa
xchg
scas
xor
(bad)
(bad)
jmp
xchg
mov
paddw
sub
aas
and
test
outs
fstp
js
add
(bad)
(bad)
fsubrp
aas
test
lds
ins
mov
in
out
add
pop
inc
std
push
cld
call
jmp
dec
iret
mov
jne
cmp
outs
adc
aad
mov
and
mov
cwde
push
mov
pop
ds
fs
xlat
bound
shl
cs
jg
or
xor
pop
shl
xor
push
xor
adc
jecxz
or
inc
jle
dec
jmp
mov
cwde
mov
mov
cmp
repnz
push
aam
fisubr
push
sub
and
adc
cmps
and
and
inc
test
pop
inc
mov
push
mov
jge
mov
dec
scas
pop
cmc
neg
lds
pushf
and
out
aas
xor
out
adc
(bad)
(bad)
push
mov
mov
sub
(bad)
sub
inc
sub
xchg
jae
(bad)
(bad)
jmp
sub
gs
adc
ret
jmp
or
pushf
lods
or
rcr
xchg
push
fs
loop
mov
dec
(bad)
dec
jmp
cdq
mov
xchg
(bad)
cmp
mov
inc
pop
jl
rcl
repz
and
dec
jnp
or
(bad)
(bad)
call
jo
scas
and
hlt
enterw
sub
into
lods
iret
mov
xor
push
ins
enter
push
je
add
xchg
out
dec
push
cdq
xor
ret
int
imul
or
sbb
int
push
pop
mov
in
push
or
(bad)
jg
test
mov
xlat
sub
sar
and
outs
and
fadd
pop
bound
mov
jo
test
(bad)
(bad)
dec
dec
int3
adc
pop
or
hlt
in
jno
and
or
xchg
rol
std
(bad)
push
(bad)
out
je
imul
pop
sub
inc
sub
xchg
jns
cmp
sbb
std
dec
jb
outs
mov
sub
sahf
xor
xor
call
add
add
lock
iret
dec
sub
movs
(bad)
(bad)
(bad)
jmp
and
xor
aaa
push
lahf
adc
push
dec
test
push
inc
dec
mov
sub
out
out
clc
(bad)
jmp
push
mov
data16
pop
mov
xor
loope
xchg
and
push
jge
pop
into
mov
xor
cmp
and
out
xchg
push
xor
sub
(bad)
fwait
ret
and
aaa
inc
call
(bad)
cmp
xchg
fwait
xchg
mov
cli
or
add
pop
cmps
(bad)
(bad)
(bad)
(bad)
call
aaa
(bad)
(bad)
sbb
pop
cli
sbb
gs
push
into
jb
or
retf
xor
inc
push
loopne
mov
call
or
movs
mov
mov
cdq
ret
(bad)
xor
mov
dec
cmps
mov
(bad)
(bad)
(bad)
call
and
popf
push
aam
fimul
(bad)
pop
inc
adc
xor
jb
dec
stc
or
adc
push
jbe
scas
pop
cmc
call
mov
xchg
dec
sti
mov
out
jmp
shl
and
clc
call
arpl
push
sbb
(bad)
(bad)
(bad)
jg
(bad)
in
ret
push
xchg
out
lock
loope
push
ins
push
adc
jo
js
(bad)
push
inc
sub
add
add
jmp
enter
mov
stc
xor
(bad)
(bad)
jmp
in
shl
adc
mov
xor
sbb
lods
sub
dec
data16
inc
xchg
sub
lock
(bad)
les
push
int3
sar
call
gs
bound
mov
loopne
aad
inc
mov
call
imul
cdq
adc
mov
mov
and
ins
ror
xor
out
jmp
(bad)
push
cmps
xchg
xor
lds
sbb
pushf
jae
mov
jns
arpl
sbb
call
sub
cmp
ins
dec
lahf
fwait
and
sub
sbb
push
mov
push
(bad)
jg
lea
xor
nop
test
(bad)
mov
retf
imul
pop
pop
fcom
test
push
or
(bad)
(bad)
(bad)
jmp
add
dec
xchg
dec
or
cmp
arpl
inc
mov
test
push
(bad)
(bad)
(bad)
jmp
add
dec
rol
mov
data16
rcl
inc
jno
and
(bad)
mov
push
hlt
shl
pop
xor
lods
(bad)
call
std
cmp
ret
dec
pop
aam
movs
adc
cmps
sbb
das
js
(bad)
inc
repz
mov
sub
and
xchg
(bad)
mov
pusha
test
add
xchg
push
jmp
inc
sbb
fcos
inc
cld
ss
cmp
stc
xchg
push
loopne
jb
cdq
das
sub
int3
xchg
(bad)
dec
enter
shl
repnz
and
lds
pop
cli
pop
xor
and
clc
call
lea
pop
into
jmp
(bad)
(bad)
out
clc
sbb
pushf
sbb
xor
mov
pop
shl
(bad)
(bad)
inc
sub
and
pop
fadd
push
jae
mov
push
pop
fwait
pop
aaa
(bad)
(bad)
(bad)
(bad)
mov
idiv
xor
cmp
pop
repz
int3
test
mov
daa
frndint
call
mov
jle
sti
xchg
popf
aaa
ja
(bad)
mov
jbe
lods
popf
pop
jbe
hlt
jg
or
xchg
mov
call
xchg
xor
cmp
cmp
or
add
call
cmps
mov
mov
mov
repnz
es
(bad)
(bad)
dec
lods
retf
fmulp
fcmove
mov
or
dec
gs
xor
mov
imul
pushf
push
aas
lods
arpl
int
pop
shr
dec
repz
stos
popf
(bad)
ss
ret
pop
cmc
xlat
mov
rcl
(bad)
jne
xlat
aaa
mov
pop
sti
(bad)
imul
out
push
push
lds
lock
hlt
loope
jmp
and
cwde
repz
out
not
mov
fucomip
(bad)
(bad)
(bad)
call
ret
fdivr
xchg
adc
xchg
push
in
xchg
mov
int
fdivrp
mov
xchg
les
pop
ja
sub
sbb
repz
and
sub
pop
xor
(bad)
(bad)
call
cmp
dec
iret
lods
and
nop
push
inc
retf
push
les
and
sbb
push
mov
pop
pushf
jbe
jl
leave
pop
ds
sbb
jmp
aas
mov
(bad)
out
cmps
ins
repz
pop
(bad)
(bad)
(bad)
jmp
xlat
cmc
mov
stos
lds
jae
dec
xlat
not
mov
(bad)
cli
(bad)
(bad)
(bad)
jmp
mov
sti
shl
outs
mov
stos
xor
cmp
push
fcom
lds
mov
clc
(bad)
mov
icebp
mov
mov
das
imul
cld
(bad)
jmp
mov
mov
mov
inc
or
xchg
jae
dec
push
mov
test
mov
pop
mov
mov
packuswb
mov
pop
push
imul
stc
mov
pop
cmc
(bad)
cmp
xchg
mov
movs
xor
cdq
sbb
jge
inc
mov
pop
mov
pop
xchg
ja
clc
(bad)
(bad)
push
mov
icebp
inc
and
xchg
loope
sub
cvtdq2ps
(bad)
or
sub
mov
xchg
xor
lock
(bad)
fbstp
jmp
es
fidivr
sub
outs
(bad)
(bad)
fistp
pop
ret
xchg
aas
add
jae
adc
repnz
imul
dec
inc
sbb
retf
pushf
mov
cmp
(bad)
(bad)
(bad)
push
mov
retf
imul
mov
sbb
cs
jl
fdivr
jecxz
jle
repz
sti
(bad)
lods
jns
shl
cwde
jbe
(bad)
in
pop
cmps
out
je
cmp
or
inc
dec
pop
fs
jmp
adc
sar
(bad)
js
dec
int
jp
pop
stos
enter
call
mov
packssdw
(bad)
xchg
sahf
cmp
test
stos
pop
adc
add
dec
mov
js
add
and
adc
jmp
jge
mov
xchg
leave
addr16
das
adc
mov
neg
cwde
(bad)
(bad)
call
mov
jb
neg
mov
ret
in
sti
dec
jg
jo
sar
(bad)
jmp
je
lock
imul
cmp
repz
popf
(bad)
(bad)
(bad)
(bad)
cld
call
hlt
jge
jmp
push
mov
jae
in
pop
ret
dec
mov
data16
fild
inc
fwait
out
mov
jb
push
movntq
push
cld
push
imul
scas
pop
mov
out
rcr
dec
and
mov
ret
push
dec
(bad)
(bad)
call
in
leave
xlat
repz
mov
mov
cmps
pop
ficomp
div
(bad)
(bad)
call
imul
adc
sub
mov
push
push
out
cmps
retf
push
enter
pop
push
pop
int
(bad)
idiv
out
(bad)
dec
cmc
int3
imul
je
mov
in
inc
fistp
xlat
(bad)
(bad)
(bad)
call
int
or
fdivrp
js
pop
xchg
jl
outs
mov
adc
mov
into
jle
mov
mov
jg
jmp
retf
jecxz
das
lea
pop
out
jmp
cmps
adc
push
jbe
fmul
(bad)
(bad)
jg
xchg
jb
fsub
scas
sti
mov
cmps
mov
adc
arpl
inc
(bad)
(bad)
(bad)
call
mov
mov
mov
outs
adc
outs
test
xor
(bad)
(bad)
(bad)
mov
and
mov
lods
enter
cs
xchg
xchg
dec
jae
xor
int
in
sbb
ds
shl
(bad)
inc
cmp
xchg
xor
jbe
inc
je
(bad)
(bad)
(bad)
mov
add
jg
mov
adc
inc
xchg
(bad)
daa
cmp
mov
je
movs
(bad)
(bad)
(bad)
call
call
jns
sub
(bad)
in
into
cmp
jo
or
jno
or
imul
in
push
cmp
movs
adc
repz
sar
(bad)
(bad)
call
jge
lds
pop
add
inc
adc
fidivr
or
outs
sbb
and
dec
push
add
dec
mov
lea
pop
fstp
in
mov
loopne
(bad)
std
in
mov
sbb
in
jecxz
cmp
(bad)
jmp
mov
out
int
fcom
push
cmp
pop
in
push
clc
mov
jle
out
cpuid
daa
test
and
xchg
push
xchg
popa
sahf
mov
sahf
jle
pop
aad
mov
popa
imul
jle
jle
iret
repz
jno
inc
jns
gs
pushf
xlat
std
adc
(bad)
(bad)
cmp
not
push
xor
jmp
jmp
mov
sbb
call
inc
(bad)
mov
fnstsw
adc
jmp
mov
jmp
fistp
jle
mov
mov
repz
cmp
sub
fcos
(bad)
out
adc
retf
lock
sbb
cmp
dec
aas
push
cmps
ins
ins
pop
(bad)
(bad)
(bad)
(bad)
cmp
jmp
mov
cmc
and
cmp
mov
in
cdq
popa
jmp
pop
cmp
fs
pushf
neg
sbb
add
gs
jecxz
cli
bnd
add
push
jg
cld
jmp
fs
cmp
cwde
test
clc
sti
dec
cmps
lods
jno
hlt
jmp
sahf
repnz
dec
push
jne
cs
scas
ret
lea
hlt
aaa
ins
lods
mul
pop
or
cmp
clc
and
das
clc
xchg
das
mov
pop
cli
outs
fistp
pop
ret
xchg
ins
jmp
clc
in
repnz
cmp
ficomp
(bad)
inc
sub
pop
cld
neg
fisubr
push
mov
pop
sub
pushf
sbb
(bad)
(bad)
dec
rcr
mov
mov
clc
jl
or
arpl
dec
popa
in
mov
dec
cmps
cmps
in
sub
xchg
jmp
mov
xchg
cwde
scas
movs
leave
adc
mov
push
add
test
mov
mov
xor
cwde
pop
into
xor
push
cld
test
sbb
mov
push
pop
xor
push
jb
inc
out
clc
fcmovnu
pop
lods
mov
cmp
xchg
push
inc
(bad)
mov
clc
jmp
or
test
push
lds
dec
adc
or
xor
jg
mov
icebp
inc
sub
addr16
inc
pop
add
push
add
(bad)
jg
(bad)
lods
retf
mov
aad
data16
add
lahf
inc
(bad)
pop
(bad)
(bad)
(bad)
jmp
ins
loop
fldcw
dec
and
stos
dec
sahf
pop
movs
retf
fwait
sub
push
into
adc
or
(bad)
cmp
mov
mov
mov
mov
dec
adc
(bad)
inc
adc
(bad)
pop
mov
sbb
push
push
dec
dec
jo
(bad)
sti
mov
(bad)
(bad)
(bad)
jmp
jmp
xor
xchg
int
neg
pop
inc
loopne
hlt
mov
into
outs
pop
loop
(bad)
(bad)
push
aad
sbb
jno
or
stc
mov
addr16
jp
fs
jg
call
sub
out
cmp
daa
outs
inc
in
outs
ds
lods
(bad)
rol
ins
mov
dec
pop
sub
test
push
jp
test
shl
inc
(bad)
push
imul
mov
(bad)
(bad)
(bad)
ffreep
stos
addr16
into
out
sbb
cld
into
xchg
xlat
jle
mov
sbb
cmp
dec
add
cmp
xchg
fistp
dec
(bad)
(bad)
call
(bad)
xor
ror
sti
pop
mov
call
addr16
jb
xchg
mov
(bad)
jl
ror
shr
scas
aas
sbb
ds
movs
aas
js
pop
mov
push
or
in
sbb
clc
jmp
cmp
loop
mov
out
aam
into
repnz
(bad)
push
js
dec
fcom
jne
out
(bad)
lock
jle
pop
loop
inc
ret
je
mov
data16
cli
cmp
(bad)
(bad)
jmp
xchg
out
hlt
add
test
(bad)
mov
ret
pop
adc
mov
push
jmp
adc
mov
(bad)
(bad)
into
jne
jge
jge
cwde
cmps
xchg
ret
clc
(bad)
(bad)
(bad)
out
mov
jne
test
cmp
add
ins
stc
outs
pop
(bad)
cwde
shr
(bad)
(bad)
(bad)
out
pop
jge
in
aad
xlat
lahf
fbld
(bad)
in
pop
xchg
jnp
add
(bad)
jg
inc
inc
bnd
mov
(bad)
cmp
outs
outs
jmp
and
(bad)
jmp
repz
and
popf
or
mov
sti
sbb
icebp
jmp
cmp
cmp
fcmovb
(bad)
call
dec
lahf
xor
mov
hlt
repz
iret
test
xor
inc
icebp
jb
mov
xor
lds
(bad)
(bad)
call
mov
mul
outs
push
sbb
rcr
mov
fcomip
mov
inc
push
sub
cdq
mov
hlt
(bad)
(bad)
call
sub
(bad)
hlt
arpl
jno
ret
add
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
fld
jne
mov
mov
mov
pop
pop
push
jns
retf
cmp
icebp
call
add
inc
lahf
jnp
call
sar
(bad)
inc
leave
mov
call
out
xor
(bad)
cmp
and
fs
mov
cmp
dec
cmc
xchg
sub
lock
mov
and
sub
out
popa
mov
jae
or
fild
ja
shl
xchg
sti
jbe
repnz
pop
adc
mov
add
(bad)
inc
cmp
jmp
cld
icebp
or
mov
mov
mov
mov
test
int
stc
(bad)
cmp
jnp
cdq
(bad)
rcl
cld
mov
jb
(bad)
inc
jge
cwde
std
retf
mov
or
clc
adc
es
jp
aas
sti
push
scas
adc
push
mov
add
xchg
sub
jg
shl
movs
(bad)
(bad)
dec
cmp
gs
inc
fidivr
sub
jge
jge
div
(bad)
(bad)
push
test
pop
in
jb
mov
scas
xchg
pop
jl
dec
(bad)
cmp
or
mov
(bad)
(bad)
(bad)
jmp
mov
fldcw
push
repz
mov
cmp
pop
cli
maxps
outs
leave
(bad)
dec
sar
iret
ja
sub
xor
fist
or
push
stos
(bad)
out
es
(bad)
loope
push
dec
jmp
(bad)
(bad)
(bad)
push
int
jl
stos
cmp
lods
dec
stos
jne
ins
cli
mov
stos
loop
fisttp
addr16
(bad)
(bad)
fucomi
push
shl
in
push
xor
push
int
jnp
outs
enter
mov
or
in
push
mov
das
sub
push
das
lods
or
sbb
std
cmp
out
icebp
repnz
(bad)
cmp
xlat
and
std
jmp
push
cmp
mov
dec
movs
jo
rol
cmp
pop
cmp
inc
shl
inc
sbb
imul
cmc
lds
mov
add
pop
(bad)
(bad)
mov
dec
jno
adc
sahf
push
add
sbb
std
cmp
mov
xchg
or
cld
mov
sti
inc
dec
loopne
mov
push
pop
mov
mov
push
sub
out
jg
test
adc
xor
outs
(bad)
(bad)
call
cmp
pop
add
iret
dec
mov
dec
jmp
mov
js
test
jnp
ret
mov
jge
mov
inc
adc
fwait
add
inc
cmp
ds
repz
sar
dec
xchg
icebp
cli
pushf
dec
fdiv
lods
xchg
pop
lods
jge
push
jg
inc
sub
into
enter
pusha
jnp
xlat
shl
rol
and
retf
or
into
xchg
mov
icebp
clc
xchg
ficomp
iret
mov
call
(bad)
pop
mov
(bad)
(bad)
(bad)
mov
jae
in
sti
dec
jmp
sub
mov
push
mov
outs
cmc
clc
loope
add
(bad)
(bad)
jmp
pop
popf
rol
pop
xchg
(bad)
inc
lahf
cs
out
aam
sbb
(bad)
sbb
cmp
stc
aad
pop
xchg
mov
ficomp
mov
stc
scas
sbb
popf
mov
ds
(bad)
(bad)
(bad)
dec
jecxz
xchg
fdivrp
pop
push
xlat
jg
cmc
pop
dec
iret
mov
(bad)
cmc
sahf
inc
loope
movs
xchg
sar
inc
(bad)
(bad)
cmp
icebp
push
ins
repz
mov
scas
(bad)
in
sti
mov
in
jmp
jns
cmc
xlat
sbb
pop
push
ds
(bad)
(bad)
dec
iret
push
jge
in
sub
mov
pop
xchg
pop
shl
adc
hlt
mov
(bad)
push
mov
dec
push
mov
scas
inc
jo
inc
cs
clc
ss
jg
sub
mov
sub
int
pop
sub
dec
fcomip
(bad)
inc
pop
mov
mov
aam
xor
imul
inc
jle
jmp
aam
fwait
scas
dec
(bad)
(bad)
(bad)
(bad)
ret
pop
sub
outs
pop
mov
fldcw
fcmovnbe
icebp
shr
or
mov
or
pop
std
outs
sbb
sub
xor
and
jmp
retf
idiv
jl
or
int
xlat
nop
jne
adc
push
mov
sbb
int
mov
pop
and
dec
and
pop
lock
sar
pop
jge
stos
stc
inc
aad
and
imul
(bad)
jmp
inc
adc
pop
pop
std
stos
out
add
push
div
adc
shr
cli
jg
adc
fs
rcl
stos
lock
jle
fdecstp
mov
pop
pusha
sbb
jns
repz
jmp
jmp
pop
fcmovne
cmc
loop
cmp
add
pop
adc
out
jle
jge
adc
(bad)
jns
(bad)
jmp
scas
jmp
retf
cli
xor
fcomp
inc
in
xor
iret
addr16
call
rcl
out
sub
jns
jmp
pop
push
pop
mov
(bad)
(bad)
(bad)
push
call
jge
popf
xchg
push
fnstcw
xchg
pop
in
xlat
cs
sti
xchg
jg
pop
(bad)
(bad)
(bad)
call
push
jl
int3
jmp
aam
test
imul
cmc
mov
call
(bad)
jmp
push
xchg
xlat
out
jnp
repnz
jp
jae
hlt
fimul
int
gs
jno
div
aad
(bad)
(bad)
fidivr
icebp
loop
pop
neg
cmc
test
inc
cmc
inc
jmp
cmp
lods
popf
shr
(bad)
push
aas
sahf
cs
iret
(bad)
jmp
sbb
repnz
outs
int
jg
inc
fadd
scas
xchg
jb
add
mov
iret
cld
in
test
popa
jg
lods
(bad)
push
sbb
push
shr
stc
enter
pop
cmp
mov
lock
mov
cmp
scas
or
jle
(bad)
(bad)
(bad)
jge
enter
into
(bad)
rol
test
ret
rcl
push
mov
js
dec
push
test
(bad)
push
out
das
pmaxsw
jg
aas
pop
div
xchg
and
mov
cli
mov
aad
xchg
cmps
std
fcmovnu
push
sti
xchg
ret
mov
inc
and
or
aas
push
jo
sti
mov
daa
push
push
mov
sub
das
fdivr
inc
loop
sbb
out
shl
rcr
inc
je
sbb
jmp
(bad)
fcomip
cmps
(bad)
pop
outs
enter
jle
movs
mov
sbb
retf
shr
test
sub
dec
(bad)
outs
lods
(bad)
mov
and
mov
loop
shl
cmp
in
add
repnz
clc
mov
push
push
data16
xchg
mov
pushf
(bad)
jle
mov
scas
jmp
outs
cmp
mov
outs
into
mov
jp
jge
cld
adc
imul
fstp
call
sub
shl
arpl
dec
mov
cmp
pop
iret
pop
test
pop
movs
mov
aaa
xlat
jnp
sar
jmp
ds
stc
xchg
inc
or
int
int
std
mov
aad
pop
out
push
(bad)
clc
clc
push
cld
das
lods
fwait
cmp
jne
mov
and
sub
mov
xchg
jg
cs
movs
enter
add
mov
sar
inc
(bad)
sti
jmp
lds
mov
xchg
repnz
sub
aam
in
(bad)
jmp
pop
jp
in
push
lds
das
lea
pop
xor
(bad)
call
cmp
scas
and
mov
in
cli
mov
popf
not
mov
test
or
mov
xchg
shr
outs
jns
leave
aaa
dec
je
outs
push
ja
cmp
adc
in
cmp
ret
jmp
add
stc
dec
aaa
je
movs
dec
retf
lahf
jle
pop
pslld
xabort
(bad)
(bad)
mov
hlt
jecxz
dec
out
imul
xor
(bad)
clc
jno
adc
test
out
mov
jmp
cmp
out
dec
sbb
int3
loop
xchg
lods
mov
dec
fidivr
xchg
jne
adc
adc
out
jmp
mov
or
xor
or
(bad)
xchg
clc
(bad)
mov
icebp
sbb
cmp
loop
(bad)
idiv
cmp
call
sahf
mov
xor
jnp
adc
push
xor
sub
mov
mov
xor
or
push
mov
push
seta
ins
idiv
hlt
mov
sub
in
hlt
scas
xchg
(bad)
imul
sbb
add
mov
out
sub
sub
(bad)
(bad)
inc
das
jp
push
jmp
mov
lahf
inc
call
scas
push
adc
lods
(bad)
(bad)
jmp
ret
mov
dec
(bad)
out
icebp
(bad)
push
mov
pop
xor
lahf
out
out
and
(bad)
(bad)
(bad)
inc
inc
jecxz
mov
shl
sub
and
scas
imul
ret
hlt
(bad)
(bad)
(bad)
mov
pop
inc
out
ret
push
(bad)
scas
cld
dec
repz
xchg
(bad)
(bad)
fist
test
das
adc
push
in
cld
push
mov
mov
ins
cld
mov
(bad)
call
cmc
xlat
mov
jge
cmps
add
mov
cwde
sbb
pop
jne
retf
sub
cmp
push
rcr
std
(bad)
jg
retf
push
cwde
add
(bad)
iret
pop
adc
add
jo
movs
popf
(bad)
jg
add
jecxz
push
mov
out
jns
into
pop
cmp
call
inc
iret
test
shl
(bad)
(bad)
sub
pop
test
push
add
push
mov
loopne
cld
dec
mov
xchg
cli
xor
dec
lods
(bad)
push
push
mov
jmp
sub
movs
dec
push
dec
pusha
mov
sub
in
and
sub
das
xor
add
sahf
(bad)
(bad)
add
(bad)
call
imul
pop
mov
xor
push
xor
dec
retf
out
xchg
mov
or
dec
jnp
xor
arpl
(bad)
jg
fistp
mov
xor
(bad)
dec
dec
sbb
cmp
xchg
sbb
sbb
inc
jmp
xchg
xor
pop
xor
adc
(bad)
sub
lods
(bad)
std
dec
fstp
(bad)
(bad)
(bad)
jmp
xor
test
daa
sub
push
test
repz
sub
bound
jne
outs
push
mov
pop
(bad)
retf
mov
push
ja
(bad)
(bad)
(bad)
jmp
mov
jnp
push
ja
outs
push
push
data16
xor
mov
mov
dec
push
push
(bad)
jbe
les
dec
and
xchg
repnz
or
jp
loopne
sub
jg
mov
push
mov
sub
loop
jmp
and
jle
or
adc
rcl
xor
pop
fwait
mov
mov
lock
cs
fs
jle
adc
pop
inc
push
call
test
fscale
mov
call
cld
fstp
jl
or
mov
mov
jno
mov
lock
xchg
mov
or
push
fadd
(bad)
(bad)
(bad)
jmp
aam
ja
sbb
ss
jg
xor
xchg
cwde
pop
ins
push
rcr
adc
cmp
test
jmp
outs
or
mov
cdq
dec
cmp
mov
pop
dec
push
mov
popa
out
clc
out
mov
loope
jno
out
and
inc
pop
pop
xor
(bad)
jg
loope
xor
xchg
sbb
in
mov
clc
imul
pop
sub
(bad)
(bad)
mov
and
cmp
adc
xor
inc
enter
jbe
into
repz
ror
cmp
in
mov
push
out
outs
mov
or
(bad)
(bad)
(bad)
call
sub
jg
or
cmp
inc
xlat
xlat
fldcw
test
adc
(bad)
inc
pop
(bad)
mov
pop
push
pop
xchg
cmp
add
(bad)
(bad)
push
mov
out
(bad)
push
loope
jae
fs
cmp
mov
int
out
nop
scas
arpl
(bad)
(bad)
call
inc
sbb
ror
(bad)
lods
mov
jae
inc
out
xchg
repz
test
or
dec
sub
(bad)
xor
test
push
adc
enter
(bad)
(bad)
mov
in
add
mov
or
js
dec
test
fist
fistp
(bad)
inc
dec
clc
mov
dec
inc
lahf
adc
add
xor
mov
(bad)
(bad)
(bad)
dec
xor
cdq
mov
push
imul
xchg
call
inc
cmp
into
and
sbb
cmp
cmp
(bad)
push
xor
push
iret
stos
push
sahf
(bad)
(bad)
(bad)
call
push
gs
repnz
retf
mov
gs
nop
enter
repz
mov
cs
sub
xchg
push
fadd
out
dec
add
sbb
(bad)
call
pop
(bad)
xor
xchg
push
(bad)
push
aaa
or
popa
or
xor
call
in
mov
dec
jmp
jle
pop
je
arpl
sub
call
rcl
xchg
mov
pushf
add
sbb
(bad)
stc
(bad)
(bad)
(bad)
(bad)
mov
pop
ins
add
movs
fdivr
cmp
adc
retf
mov
bound
sub
dec
lock
and
add
enter
(bad)
mov
and
(bad)
dec
pop
lea
jae
inc
fistp
mov
test
add
(bad)
jmp
es
es
lods
dec
hlt
ins
adc
(bad)
(bad)
(bad)
rcr
mov
std
mov
sub
repz
es
jl
int
fadd
(bad)
cmp
ret
pushf
aam
sti
lea
inc
lahf
aaa
mov
push
xor
xchg
jmp
mov
icebp
and
call
rcr
lds
add
and
int
sbb
sbb
(bad)
call
cmp
xor
fisub
xor
mov
loope
(bad)
dec
xchg
add
dec
sbb
push
enter
shl
mov
add
push
(bad)
(bad)
xchg
mov
je
inc
(bad)
clc
(bad)
dec
call
push
stos
outs
add
rcr
lds
and
in
test
push
scas
cs
cmps
shl
lods
popw
adc
(bad)
(bad)
fcomip
mov
or
jge
xchg
sub
(bad)
mov
lahf
inc
xchg
mov
loopne
arpl
(bad)
dec
sbb
jmp
ret
adc
adc
mov
xchg
ins
jb
out
movs
inc
or
sti
fsubp
mul
repz
jae
stc
jg
cmp
mov
pop
xor
sub
shl
imul
jmp
add
mov
inc
rep
add
ins
daa
mov
icebp
cmp
sbb
scas
shl
xor
xor
mov
and
ss
(bad)
inc
sbb
push
dec
and
add
jae
pop
imul
xchg
dec
ins
push
ss
cli
inc
cmp
mov
lods
adc
loope
and
(bad)
(bad)
jmp
not
cmps
fild
pop
inc
add
dec
adc
add
cs
adc
in
lds
inc
cmc
imul
mov
and
xor
dec
mov
aad
jne
xchg
cld
(bad)
(bad)
(bad)
jmp
fsub
test
int
imul
lods
sub
fcom
into
jge
(bad)
dec
shl
icebp
stos
cs
dec
add
sub
sub
or
ja
stos
ja
cli
push
pop
inc
xchg
add
fsubp
and
int3
aas
inc
ss
(bad)
(bad)
jmp
ret
and
outs
inc
mov
and
jo
sbb
test
ret
out
(bad)
loopne
(bad)
dec
push
add
xor
pusha
push
dec
ret
xchg
hlt
push
jbe
pop
and
scas
mov
push
mov
aam
loopne
and
(bad)
mov
mov
and
push
jmp
call
test
jo
mov
inc
outs
jecxz
push
call
pop
inc
mov
(bad)
mov
fist
ss
pcmpeqb
mov
shl
mov
pop
stos
leave
call
(bad)
aad
adc
xor
pop
loopne
dec
mov
dec
packsswb
add
adc
xchg
test
sbb
(bad)
call
pop
or
in
or
mov
clc
clc
adc
hlt
iret
clc
leave
(bad)
pop
fwait
mov
ret
(bad)
(bad)
(bad)
dec
pop
icebp
xlat
fdivr
cld
adc
adc
in
js
mov
(bad)
fbld
aam
(bad)
data16
cmp
(bad)
loop
(bad)
jnp
(bad)
inc
push
hlt
inc
arpl
icebp
(bad)
fcomip
mov
ret
js
js
pop
lock
jg
js
cmps
or
ret
(bad)
das
lock
dec
sti
out
adc
jle
cld
sbb
(bad)
(bad)
(bad)
fiadd
and
push
pmuludq
inc
mov
loope
add
mov
div
(bad)
(bad)
dec
loopne
push
(bad)
sub
push
xchg
mov
ffreep
sar
(bad)
(bad)
jmp
icebp
sbb
add
imul
imul
xchg
mov
fmul
je
ins
test
test
jb
jbe
idiv
dec
fmulp
(bad)
call
sbb
sbb
test
mov
test
pop
data16
popf
ins
pusha
xchg
cmp
sub
(bad)
(bad)
push
and
add
in
lock
ja
in
popf
jl
jg
xchg
mov
scas
ret
xor
ins
xor
cmp
(bad)
out
fdecstp
adc
push
in
sti
sub
test
jnp
dec
fld
pop
int3
mov
mov
fcomp
(bad)
fdiv
(bad)
(bad)
call
idiv
std
adc
mov
xchg
xor
aas
adc
cmp
mov
(bad)
(bad)
push
xchg
sahf
daa
dec
call
popf
pop
mov
xchg
fistp
sahf
cld
dec
mov
(bad)
jmp
jp
test
imul
mov
call
int3
mov
ins
lahf
stos
adc
xor
mov
xchg
push
sbb
mov
sub
add
in
push
dec
dec
mov
push
inc
adc
arpl
xchg
sub
xor
push
std
inc
xor
inc
cmp
ror
mov
fld
cmp
cmp
adc
inc
push
mov
out
mov
stos
ins
cmp
dec
out
and
inc
pop
xchg
out
sub
ins
dec
sar
(bad)
adc
div
add
pop
rol
and
popa
mov
pop
(bad)
(bad)
in
mov
jnp
or
jno
mov
fwait
jg
loopne
jecxz
(bad)
(bad)
push
xchg
mov
xchg
jp
push
cmp
cmp
loop
sbb
(bad)
call
sub
repz
adc
xchg
lds
cmp
inc
cld
or
daa
xor
mul
mov
dec
and
int
cld
mov
jle
daa
int3
arpl
inc
xchg
mov
pop
mov
xchg
(bad)
jg
jg
sub
cmp
fidivr
ret
ret
mov
xor
ins
out
fwait
ins
xor
(bad)
jmp
add
push
outs
jl
jl
stos
add
push
jb
aaa
in
adc
xchg
pusha
popa
jb
dec
xchg
dec
xor
(bad)
(bad)
inc
adc
pop
fstp
pop
std
and
bound
(bad)
out
and
inc
stc
sbb
aaa
sar
(bad)
(bad)
js
add
jmp
(bad)
jecxz
aad
cmps
out
je
shl
push
outs
mov
(bad)
loop
aad
inc
jne
in
ds
or
mov
xchg
fsubr
mov
(bad)
jg
cld
inc
addr16
mov
pop
aaa
lock
pop
sahf
sbb
movs
in
sub
dec
sbb
fst
inc
add
push
add
scas
fisubr
jge
adc
adc
dec
into
adc
(bad)
(bad)
(bad)
dec
shr
sub
loop
popa
mov
cdq
inc
sbb
(bad)
pop
fild
inc
xchg
(bad)
shl
(bad)
(bad)
push
add
daa
push
jnp
cmp
loope
das
push
cmps
lock
mov
pop
dec
mov
sti
mov
loopne
add
xor
rcl
mov
dec
(bad)
(bad)
call
dec
(bad)
and
mov
mov
mov
add
pop
es
out
cmp
ss
sub
stos
adc
sub
inc
data16
mov
lods
xor
push
xchg
lods
loope
add
xor
(bad)
mov
imul
mov
push
jmp
dec
clc
mov
push
(bad)
(bad)
call
(bad)
sbb
call
loope
popa
cmp
cmps
xlat
push
push
scas
lods
lock
sbb
(bad)
(bad)
(bad)
call
jge
xlat
aas
movs
jmp
dec
xlat
cmp
ss
nop
push
inc
jnp
sar
add
(bad)
jmp
mov
cmps
aas
and
pop
cmp
clc
sti
lock
movs
or
mov
fs
mov
jbe
ret
icebp
js
mov
dec
jmp
cmp
out
jmp
mov
push
mov
aad
mov
jmp
dec
fcmovnbe
imul
jbe
mov
rol
mov
jno
mov
(bad)
(bad)
push
pushf
xor
in
loop
out
mov
sti
add
pop
(bad)
or
dec
xor
imul
scas
push
mov
mov
out
clc
(bad)
in
push
out
or
or
dec
jmp
and
xchg
push
(bad)
(bad)
(bad)
push
jl
push
inc
aas
into
mov
dec
push
mov
push
xchg
fwait
popa
sub
cli
xor
pop
and
aam
and
push
or
pop
jae
dec
aaa
add
in
div
retf
outs
jae
in
cmps
cmps
in
loope
push
(bad)
ja
jae
mov
jmp
rcr
test
mov
dec
xor
jl
jbe
aas
imul
addr16
outs
add
push
ins
and
cmp
lahf
cmps
fmul
fimul
dec
add
into
jbe
jno
sar
(bad)
(bad)
jmp
mov
movs
std
aas
mov
and
add
pop
movs
push
aam
(bad)
inc
dec
mov
mov
rcr
mov
rcl
inc
cli
aad
xor
adc
dec
mov
inc
dec
cmp
(bad)
(bad)
(bad)
(bad)
jmp
xchg
pop
jb
sub
and
call
enter
cdq
pop
out
or
(bad)
(bad)
(bad)
jl
xchg
stc
push
retf
xchg
jb
outs
imul
mov
xchg
and
dec
jecxz
call
(bad)
jmp
jb
std
xchg
pusha
cmp
sub
lds
inc
sti
inc
mov
(bad)
(bad)
(bad)
jmp
out
mov
mov
fimul
jbe
xor
or
outs
int3
rep
push
scas
movs
dec
cld
dec
xor
popf
lods
adc
aaa
outs
(bad)
(bad)
(bad)
jg
xchg
push
aas
mov
repz
pop
popa
cdq
xchg
ins
pop
mov
xchg
leave
sub
cmp
inc
and
hlt
or
push
cli
add
sbb
out
inc
(bad)
jg
sub
lea
mov
dec
clc
std
sub
(bad)
(bad)
jmp
xchg
outs
mov
push
xor
add
js
test
mov
dec
mov
pop
mov
leave
jle
add
mov
xchg
and
shl
imul
cs
lock
add
clc
pop
xor
fwait
push
fs
jmp
and
(bad)
jg
cmp
sbb
inc
or
push
(bad)
aam
jne
scas
mov
jmp
mov
je
dec
or
push
inc
clc
dec
(bad)
(bad)
(bad)
jmp
xor
or
or
mov
push
aam
ja
mov
add
(bad)
call
and
mov
mov
into
ret
xchg
adc
jmp
mov
test
popa
cld
mov
mov
or
fidiv
fst
adc
xchg
int3
jbe
cmc
retf
ins
dec
sbb
(bad)
movs
push
and
fwait
cmp
(bad)
mov
jmp
mov
xchg
mov
repz
mov
mov
(bad)
loop
mov
(bad)
(bad)
(bad)
jmp
fucom
jb
cli
jnp
mov
dec
stc
in
inc
mov
imul
and
jg
push
push
mov
mov
enter
inc
mov
sti
lahf
test
xor
mov
pop
pusha
pop
(bad)
(bad)
push
pop
daa
push
jmp
daa
mov
push
nop
retf
jno
hlt
mov
mov
call
nop
dec
add
inc
mov
pop
push
aas
pop
(bad)
arpl
addr16
push
jmp
lahf
add
je
loopne
cmp
test
les
add
mov
jg
or
rcl
scas
sbb
sub
sbb
xor
mov
(bad)
(bad)
cmp
cmc
inc
imul
std
shr
sahf
dec
retf
jo
mov
inc
add
inc
push
and
sti
sub
pop
movs
fadd
push
jb
les
imul
dec
or
cld
mov
aas
or
std
scas
inc
int
pop
inc
leave
cmps
or
dec
pop
mov
(bad)
push
add
mov
lods
(bad)
jne
fcom
push
dec
(bad)
(bad)
mov
sahf
xchg
test
out
dec
iret
fwait
shl
pusha
loopne
add
daa
aam
sbb
dec
rcl
dec
std
xchg
aam
sti
add
pop
mov
loop
jmp
sbb
or
adc
add
outs
fwait
cwde
fnsave
(bad)
jmp
pandn
je
xor
mov
mov
sbb
adc
xor
mov
aaa
(bad)
jg
or
sbb
dec
or
xchg
je
jg
jg
out
in
es
ret
sar
sbb
xor
adc
movs
ins
stos
std
pop
js
mov
push
sub
push
xor
(bad)
(bad)
(bad)
cdq
in
outs
arpl
nop
cmp
mov
hlt
mov
jecxz
call
sar
sub
push
push
dec
je
cmp
push
mov
xlat
mov
xchg
adc
(bad)
call
xor
jp
sub
movs
inc
repnz
or
sub
int
dec
xchg
cmp
xchg
push
call
xchg
cmp
sar
(bad)
mov
add
push
call
scas
ret
and
mov
inc
cs
cmc
nop
mov
mov
mov
int3
mov
jbe
out
(bad)
push
pop
cmps
out
cdq
rcl
(bad)
call
sbb
(bad)
fcom
xor
out
sbb
aam
dec
mov
pop
push
outs
(bad)
(bad)
(bad)
call
pop
clc
aad
or
add
cmp
mov
pop
ret
mov
(bad)
std
(bad)
(bad)
in
aad
jg
adc
ret
jmp
stc
(bad)
cs
mov
adc
(bad)
push
add
rcr
loop
push
dec
lds
mov
mov
push
popa
test
(bad)
(bad)
(bad)
jmp
adc
setne
in
fcom
pop
sub
mov
mov
fwait
(bad)
xchg
iret
dec
inc
cmc
int
inc
push
js
mov
push
push
adc
xor
jbe
fcomip
sahf
retf
dec
outs
leave
aas
add
push
xchg
enter
add
(bad)
(bad)
(bad)
clc
push
mov
mov
pop
int3
jmp
pop
push
nop
fcomp
xchg
ret
push
jae
pop
(bad)
(bad)
call
fimul
(bad)
push
fwait
pop
or
jbe
cli
into
addr16
cld
enter
idiv
sub
jmp
fdivrp
sbb
xchg
adc
fwait
pusha
sbb
push
mov
sar
sbb
(bad)
(bad)
jmp
dec
shr
fldcw
sub
addr16
sbb
shl
repnz
(bad)
inc
pop
add
into
test
outs
mov
cmp
(bad)
cmp
push
push
mov
push
mov
or
jmp
mov
in
inc
inc
(bad)
(bad)
dec
es
jbe
fdivp
xchg
pop
pusha
out
icebp
or
mov
shl
out
mov
(bad)
popf
pop
cmp
repnz
(bad)
(bad)
jmp
retf
fmul
cmp
fidivr
pop
nop
(bad)
(bad)
jmp
pop
(bad)
mov
sahf
cmc
push
std
or
es
or
stc
jp
add
sar
ror
fwait
dec
test
ss
xchg
ss
stos
push
pop
mov
jecxz
sar
ffree
fsubp
push
push
sbb
lock
inc
das
sub
pop
rcl
sti
and
shr
pop
xor
lahf
(bad)
pop
icebp
add
sub
(bad)
xchg
rol
mov
in
(bad)
(bad)
inc
and
popa
test
xor
imul
scas
or
test
mov
(bad)
push
out
data16
jge
cmc
pusha
mov
push
push
(bad)
rol
pusha
xchg
loopne
jno
lock
retf
stc
(bad)
bound
xor
aam
cli
(bad)
mov
sub
inc
int3
inc
into
push
aam
(bad)
fdiv
es
out
jmp
div
cmps
or
int3
xor
dec
jge
jns
pop
add
push
push
sbb
jo
add
(bad)
(bad)
fcomi
mov
and
ficom
outs
pop
(bad)
xchg
xchg
dec
pushf
cmp
(bad)
push
cmc
push
pop
push
add
gs
fisubr
iret
add
xlat
xchg
je
mov
mov
inc
lahf
inc
xor
mov
cdq
popa
mov
lods
or
(bad)
(bad)
jl
push
in
dec
cwde
sub
leave
das
stos
sub
push
fcmovu
nop
inc
(bad)
mov
mov
add
fwait
aad
sub
push
outs
ret
inc
(bad)
in
pop
aad
pusha
cmp
fdivr
(bad)
(bad)
call
add
retf
les
push
or
push
sti
xchg
xor
mov
(bad)
(bad)
jg
fsincos
lock
data16
aad
mov
call
inc
xor
sbb
clc
and
jg
(bad)
(bad)
in
jmp
mov
neg
or
ficom
jl
cld
or
inc
lock
mov
cmp
jle
div
repnz
(bad)
(bad)
call
test
scas
test
and
aam
xchg
push
add
jl
mov
(bad)
(bad)
(bad)
mov
ins
int
xor
lock
or
add
add
fucompp
xor
clc
(bad)
(bad)
jmp
retf
or
xor
adc
mov
pop
xchg
test
lods
mov
jbe
clc
dec
mov
sub
sbb
(bad)
(bad)
jmp
dec
rcl
adc
mov
mov
xchg
movs
jne
cmp
jmp
mov
cli
in
mov
retf
inc
dec
ret
fdivrp
pop
shl
pop
pop
adc
shl
or
inc
cli
ffreep
je
inc
sub
mov
sbb
jmp
push
xchg
js
(bad)
dec
(bad)
(bad)
(bad)
call
push
call
jge
loope
cdq
jg
xor
lds
out
out
stc
inc
mov
adc
jg
hlt
into
or
cwde
(bad)
xlat
sub
cs
in
ret
dec
cmp
push
(bad)
(bad)
jmp
pop
mov
sbb
adc
repz
push
sub
fbld
or
dec
dec
hlt
pop
and
test
sbb
xor
scas
jnp
(bad)
(bad)
inc
shl
push
inc
mov
pop
jae
call
pop
adc
icebp
dec
dec
test
cli
scas
clc
dec
pop
xlat
(bad)
out
dec
add
leave
call
pushf
mov
(bad)
(bad)
fbld
lock
xchg
xchg
jge
mov
outs
mov
xor
into
cmp
and
cli
mov
xor
not
lods
cmp
(bad)
(bad)
jmp
sbb
add
repz
mov
ret
test
dec
mov
xor
retf
scas
fcomi
dec
jle
and
pop
jne
push
(bad)
fild
(bad)
push
mov
sbb
inc
ficom
leave
mov
jmp
push
sti
mov
mov
repnz
jae
or
jnp
add
(bad)
jg
dec
inc
adc
mov
iret
jg
(bad)
and
cli
daa
push
add
stos
add
xchg
sbb
dec
add
cli
cmps
into
or
inc
aad
mov
test
sbb
clc
push
pop
mov
cld
dec
mov
mov
std
retf
(bad)
(bad)
(bad)
(bad)
dec
bound
lea
or
push
test
punpckldq
lea
adc
and
push
fnstcw
add
pop
mov
shl
pop
cmp
out
adc
add
fisttp
aaa
rcl
cs
cli
jnp
call
call
scas
rcl
pop
adc
adc
sub
icebp
xlat
cmps
mov
out
xchg
fldcw
and
(bad)
gs
sub
dec
stos
leave
ins
sbb
mov
std
push
(bad)
out
clc
(bad)
(bad)
pop
pop
mov
mov
inc
cmp
mov
fdiv
xchg
fstp
fwait
(bad)
out
subps
xchg
jmp
call
mov
jmp
(bad)
jmp
stos
xchg
push
push
loope
xor
mov
fbld
lds
adc
das
cmps
lea
cld
add
int
xor
xchg
xor
dec
adc
aaa
sub
jmp
xor
clc
(bad)
jg
loop
rcl
cmps
std
xlat
in
dec
cmp
adc
cmp
jmp
dec
inc
(bad)
or
add
neg
(bad)
(bad)
(bad)
fbstp
jmp
sub
aad
inc
imul
mov
cdq
inc
add
jmp
push
jns
add
loope
ret
sar
ror
dec
cmps
jnp
icebp
push
les
loopne
(bad)
(bad)
inc
push
out
outs
cld
das
clc
lock
clc
jo
scas
test
add
xchg
or
push
jl
sahf
out
ror
add
lods
mov
jmp
jp
ret
pop
ret
(bad)
out
jp
js
bswap
(bad)
cmp
or
sbb
lds
push
or
outs
xchg
pop
loope
popf
lock
stc
outs
jmp
pop
xchg
(bad)
loope
les
(bad)
call
fimul
or
inc
add
call
cmp
out
inc
inc
xchg
push
mov
cmp
cmp
(bad)
(bad)
push
pop
sahf
inc
mov
ret
or
push
call
pop
mov
xchg
cdq
pop
(bad)
(bad)
jmp
imul
xor
cmp
call
mov
call
sti
xor
adc
jns
sbb
fiadd
cmps
in
push
mov
inc
mov
mov
jmp
sub
adc
(bad)
(bad)
jmp
outs
add
dec
mov
stos
stos
aas
mov
mov
sub
mov
cmps
pop
test
mov
jmp
inc
mov
mov
inc
pop
mov
in
or
pusha
pushf
sbb
pushf
or
inc
loope
dec
cmp
cld
add
dec
dec
(bad)
lods
xor
retf
dec
rcr
xchg
out
imul
lods
sbb
xchg
xor
cmp
jo
inc
test
push
mov
push
repz
adc
sti
call
push
pop
adc
inc
cld
loop
sbb
and
xchg
pop
test
(bad)
mov
pop
ret
cmp
in
jle
inc
sbb
cmp
and
(bad)
(bad)
push
cmps
pushf
xchg
fisub
cmps
pushf
(bad)
(bad)
or
push
mov
mov
xchg
popw
loopne
(bad)
(bad)
adc
int
jg
lea
sub
bound
in
(bad)
(bad)
call
or
ja
jnp
les
jecxz
cmp
scas
imul
arpl
(bad)
(bad)
push
inc
jnp
push
cwde
shl
lds
stc
and
scas
sbb
mov
jmp
inc
mov
jmp
test
movs
push
push
pop
out
adc
iret
pop
rcl
or
jecxz
mov
dec
aad
mov
adc
(bad)
xchg
xchg
fs
cmp
or
xor
lock
(bad)
jg
jg
dec
das
jle
scas
adc
xor
jb
aaa
or
clc
mov
(bad)
(bad)
fild
mov
out
add
movs
push
jmp
xchg
into
retf
out
inc
xor
imul
fs
cmp
mov
movs
jns
in
leave
push
bnd
jle
xor
xor
jmp
mov
(bad)
sti
and
shl
mov
(bad)
(bad)
jmp
ror
clc
(bad)
or
pusha
add
lods
jnp
rcl
retf
pop
ins
movs
jle
call
mov
jne
adc
ror
clc
(bad)
dec
addr16
cmps
inc
inc
and
mov
dec
(bad)
jg
sbb
(bad)
dec
sbb
push
popf
lods
mov
cmp
idiv
(bad)
(bad)
push
sub
lock
pop
loopne
repz
dec
add
in
out
pushf
push
outs
ins
pop
lds
fwait
in
xchg
cmp
jmp
cmp
lods
mov
neg
hlt
(bad)
jg
mov
mov
stc
add
ds
mov
inc
push
xchg
call
jge
mov
es
leave
shr
popf
rcr
frstor
lods
enter
(bad)
out
cli
push
clc
mov
push
jge
icebp
je
shl
mov
dec
fnsave
test
jecxz
jecxz
jle
das
add
xchg
outs
ror
xlat
xchg
imul
(bad)
(bad)
mov
(bad)
sub
sub
pop
inc
popf
xor
or
popf
cmps
jmp
(bad)
(bad)
jg
fs
sbb
push
sbb
mov
mov
dec
mov
sub
dec
jbe
pusha
push
das
into
push
add
frstor
pop
cwde
or
cmp
rcl
jmp
inc
xor
adc
push
and
mov
jnp
add
fcmovnu
scas
scas
add
fld1
cmps
add
ss
and
(bad)
dec
and
repnz
scas
adc
fwait
sbb
mov
jae
cmp
dec
call
push
xor
mov
mov
pop
(bad)
dec
push
xor
(bad)
(bad)
(bad)
(bad)
stc
shl
push
out
xor
mov
jl
lahf
xor
outs
or
ret
lock
popa
or
cld
arpl
popa
mov
nop
or
(bad)
(bad)
call
mov
xchg
mov
jge
pop
cmp
push
xchg
iret
ins
mov
ds
in
add
mov
pop
mov
lea
test
mov
mov
mov
fild
clc
fwait
scas
dec
loop
(bad)
(bad)
call
mov
ds
std
adc
ins
lods
aam
test
jp
popa
add
(bad)
(bad)
(bad)
(bad)
jns
or
imul
mov
pop
mov
add
add
aaa
enter
std
mov
inc
(bad)
(bad)
push
(bad)
bnd
push
sbb
shl
ds
inc
inc
dec
add
dec
cdq
clc
pop
inc
int3
int
push
sbb
dec
mov
jecxz
dec
xchg
sub
aad
(bad)
cmp
lods
mov
xchg
loop
inc
dec
push
je
ror
lods
(bad)
(bad)
(bad)
(bad)
ds
jnp
cmps
xchg
xor
push
cwde
jne
sbb
pop
mov
jg
xor
(bad)
fild
gs
clc
cmps
stos
jno
shr
(bad)
loop
jns
add
(bad)
out
xor
pop
mov
push
jmp
xchg
jmp
loop
(bad)
(bad)
push
call
add
fistp
in
fcomp
and
out
push
aad
pop
pusha
(bad)
(bad)
(bad)
(bad)
mov
in
mul
popfw
inc
push
jecxz
mov
push
gs
test
fdivrp
and
mov
and
push
mov
stos
aas
add
mov
lahf
mov
fnstsw
pop
dec
(bad)
aad
(bad)
hlt
pop
(bad)
(bad)
call
xchg
sub
pop
adc
outs
rcr
add
ins
push
mov
(bad)
inc
xchg
mov
mov
pop
cmp
pop
mov
xor
call
inc
mov
rcl
pop
hlt
(bad)
(bad)
in
mov
mov
es
fiadd
push
sbb
(bad)
cmc
jmp
jg
sar
xchg
jmp
addr16
inc
cmps
mov
ins
(bad)
in
jl
in
cmps
or
push
pop
js
push
mov
shr
pop
or
(bad)
mov
fisub
dec
fs
fcmovnb
xor
mov
xlat
int
jecxz
call
and
(bad)
(bad)
(bad)
dec
outs
add
(bad)
icebp
into
fld
mov
mov
imul
ffree
(bad)
(bad)
(bad)
jmp
les
dec
adc
xchg
ja
les
jb
pop
xchg
jle
add
jbe
(bad)
(bad)
(bad)
(bad)
cmp
mov
cmps
or
xor
or
xchg
scas
out
or
adc
mov
fdiv
cmp
(bad)
(bad)
call
(bad)
sub
or
inc
aad
repz
(bad)
call
(bad)
mov
(bad)
(bad)
(bad)
(bad)
cmp
inc
add
ret
pusha
out
fucomp
cwde
loopne
(bad)
dec
lahf
pop
popa
cli
dec
shl
rcl
imul
mov
push
xchg
out
and
cmps
lock
mov
adc
or
and
(bad)
ja
mov
mov
xor
jmp
sar
pop
imul
jle
pop
call
adc
out
or
call
das
mov
fmulp
es
push
(bad)
sub
out
sar
mov
dec
adc
mov
lahf
sbb
scas
daa
ins
adc
add
test
mov
jmp
jg
retf
mov
gs
repnz
shl
or
popa
jb
ins
out
cmp
test
xchg
add
fnstenv
bound
in
xor
les
js
xlat
push
xchg
fdivr
(bad)
(bad)
jmp
jns
hlt
inc
pop
sub
adc
ins
js
or
mov
sub
(bad)
(bad)
jmp
adc
xchg
add
and
add
cdq
aas
neg
xor
push
cs
(bad)
jg
add
movs
adc
aad
loopne
fcomp
inc
in
cmp
jo
(bad)
(bad)
(bad)
jle
add
jne
(bad)
jge
stos
mov
sub
(bad)
(bad)
repnz
ins
push
std
inc
xor
dec
and
jb
pop
xchg
mov
adc
fs
sbb
add
call
add
mov
iret
fcomip
(bad)
jmp
xor
lods
test
inc
mov
int3
std
out
ja
sahf
or
(bad)
(bad)
(bad)
(bad)
mov
sbb
mov
(bad)
fneni(8087
(bad)
push
sub
sahf
jbe
sbb
daa
jge
(bad)
(bad)
push
cs
pop
adc
jmp
dec
(bad)
div
repz
(bad)
(bad)
call
test
mov
fwait
jmp
cmp
jno
cli
stc
adc
(bad)
stos
mov
xor
(bad)
push
push
jp
push
or
and
adc
fdivr
(bad)
inc
test
mov
ret
sbb
mov
pushf
sar
mov
or
(bad)
cld
aaa
repz
stos
test
out
test
cmovne
(bad)
mov
xchg
cmps
mov
or
mov
(bad)
jg
aaa
cld
pop
(bad)
sar
ss
add
cmps
popf
jecxz
cmp
sub
xchg
popf
lea
push
sub
push
movs
pop
imul
mov
jp
mov
push
lds
cmc
mov
mov
test
and
sub
test
setb
dec
sar
cmps
ret
scas
jmp
cmps
or
in
imul
(bad)
(bad)
(bad)
call
pop
mov
pop
rcr
push
cmp
jbe
add
movs
cmp
lahf
outs
sub
rol
inc
scas
dec
in
push
stc
jb
mov
mov
das
dec
dec
add
mov
test
test
pop
pushf
mov
loope
stos
neg
(bad)
jmp
mov
mov
mov
mov
mov
leave
jmp
mov
fild
sbb
ret
xchg
or
pop
lock
push
dec
push
not
mov
ins
mov
jmp
jbe
add
(bad)
call
pop
push
retf
cmp
and
addr16
add
add
loopne
pop
nop
icebp
pop
movs
call
cmp
push
jecxz
pop
or
clc
(bad)
inc
jmp
dec
add
cmp
push
jbe
outs
or
out
jg
(bad)
jmp
cld
repz
data16
inc
sbb
sub
xor
xchg
mov
sahf
inc
push
pop
cdq
pop
or
inc
ret
push
xchg
and
(bad)
inc
push
fist
pop
or
pop
mov
sbb
adc
xchg
in
xchg
hlt
push
push
cld
(bad)
call
push
xor
loope
call
adc
add
stc
and
and
jo
adc
sub
ds
pop
add
lahf
inc
dec
jmp
xchg
out
(bad)
(bad)
(bad)
cli
sbb
popa
int3
lock
pop
pop
arpl
jge
pop
retf
jno
aad
inc
push
iret
jae
bound
dec
sbb
in
ror
bound
cmps
shr
lods
pop
loop
(bad)
jmp
jmp
stos
lds
mov
or
add
push
in
dec
loop
xchg
mov
sub
in
or
das
cli
jmp
sbb
pop
nop
push
or
int3
(bad)
loopne
popf
inc
sub
retf
(bad)
(bad)
(bad)
call
inc
jmp
cwde
push
ins
dec
cmp
cmp
(bad)
mov
pop
ftst
cmp
les
lds
or
push
ret
adc
sbb
sbb
js
push
mov
jae
mov
mov
(bad)
(bad)
(bad)
(bad)
call
fcomi
pop
jmp
enter
mov
push
push
and
cmps
out
in
fld
(bad)
(bad)
(bad)
(bad)
jmp
mov
scas
inc
xchg
xchg
ins
push
ds
and
les
(bad)
pop
js
idiv
or
div
jne
fild
scas
cli
and
ja
sar
jmp
or
jne
(bad)
out
ficom
mov
push
sar
xor
adc
psubsw
(bad)
mov
(bad)
jle
mov
inc
rol
sbb
(bad)
(bad)
jmp
mov
out
movs
dec
and
xor
sbb
loope
xor
cs
fld
shl
loopne
daa
ins
loop
xchg
cmp
(bad)
push
leave
fsubrp
cli
imul
ds
out
jge
and
(bad)
(bad)
(bad)
out
add
mov
sub
jo
jbe
mov
jl
jecxz
icebp
and
div
outs
add
out
out
daa
int
shl
push
ret
inc
fwait
mov
push
test
and
cmovg
(bad)
(bad)
inc
xor
fisubr
test
int
push
xchg
repnz
lock
push
xor
mov
(bad)
(bad)
jmp
lahf
arpl
add
pop
mov
pop
pusha
(bad)
and
iret
lea
and
xor
mov
mov
(bad)
(bad)
jmp
sbb
test
mov
adc
lods
xor
inc
pop
and
loopne
(bad)
jg
pop
fcomp
es
jmp
into
jo
adc
and
xchg
in
outs
pop
dec
neg
ins
loope
(bad)
(bad)
call
push
mov
scas
xchg
inc
lods
and
sbb
mov
in
pop
xor
outs
mov
sti
xchg
xchg
cmc
mov
or
sar
push
dec
(bad)
and
push
pushf
pop
mov
xchg
retf
mov
mov
(bad)
jmp
cmp
xchg
in
pusha
jb
shl
(bad)
bound
pop
jg
push
ror
(bad)
(bad)
mov
inc
push
mov
jno
shr
mov
xor
xchg
(bad)
call
fidiv
outs
lock
jmp
push
and
(bad)
(bad)
(bad)
call
mov
push
pop
inc
fwait
ins
mov
rcl
sti
push
xor
mul
inc
mov
inc
das
cmps
mov
(bad)
adc
aaa
outs
fldcw
xchg
xchg
pop
dec
mov
(bad)
xchg
fs
test
mov
pop
lahf
test
(bad)
dec
in
(bad)
mov
(bad)
jmp
ins
(bad)
int
(bad)
sub
ins
loope
pop
outs
rol
cmp
and
dec
lock
dec
cmp
mov
push
or
repnz
aaa
inc
lahf
or
sub
scas
arpl
mov
(bad)
(bad)
(bad)
jmp
jb
sti
cwde
sbb
imul
test
cmp
xchg
mov
nop
movs
mov
(bad)
(bad)
jmp
jae
mov
and
push
push
xor
pop
adc
std
or
adc
nop
mov
cli
outs
mov
and
ins
inc
jmp
cld
test
or
and
inc
pushf
repz
icebp
and
jne
and
mov
or
repnz
imul
push
sbb
jp
mov
(bad)
(bad)
jmp
(bad)
adc
pusha
mov
aam
iret
or
ins
dec
popa
mov
push
or
pop
push
and
outs
stc
push
xchg
clc
test
add
cwde
sbb
(bad)
(bad)
(bad)
dec
std
into
in
enter
aad
lock
mov
scas
ds
adc
aad
unpckhps
mov
call
popa
mov
rol
scas
jecxz
int3
mov
(bad)
(bad)
(bad)
mov
repnz
jecxz
sahf
xchg
sub
enter
fst
in
pop
mov
call
adc
rcr
sub
mov
mov
sub
(bad)
(bad)
(bad)
dec
mov
mov
shr
and
ret
mov
pop
loop
(bad)
jg
(bad)
pop
pop
call
arpl
add
sub
clc
movs
lock
jmp
icebp
adc
add
mov
add
or
pop
mov
test
jo
jmp
loope
cld
(bad)
inc
das
fstp
data16
xchg
mov
push
call
inc
mov
mov
cli
(bad)
in
push
adc
jmp
and
pop
jne
push
jno
mov
in
adc
or
(bad)
xchg
or
inc
sub
jg
(bad)
jmp
ss
rcr
inc
pop
cmps
adc
jo
nop
iret
xor
mov
sbb
dec
pop
xor
jne
jle
dec
mov
arpl
fsub
daa
shl
stc
std
xchg
fdivr
(bad)
(bad)
(bad)
mov
mov
sbb
shl
mov
ins
out
pusha
add
scas
push
das
rcr
add
and
and
out
mov
or
mov
ja
dec
cdq
mov
mov
(bad)
jg
(bad)
mov
movs
adc
(bad)
sub
and
mov
add
retf
or
pop
push
mov
mov
shr
sub
data16
fnstenv
test
mov
inc
cmp
cli
scas
hlt
bound
adc
adc
cli
(bad)
dec
mov
imul
add
push
mov
call
dec
ror
pop
mov
jno
and
dec
jne
out
mov
dec
or
stos
call
fist
in
mov
call
and
les
add
push
cmp
cmp
ret
dec
clc
adc
push
shl
(bad)
fsubrp
adc
popf
adc
(bad)
fistp
fninit
jno
push
xor
into
aaa
jo
mov
jge
sar
(bad)
jmp
pop
or
sub
stos
sbb
rol
sub
inc
add
xlat
(bad)
(bad)
(bad)
inc
bnd
or
shr
sub
adc
push
(bad)
cdq
xor
or
repz
mov
clc
(bad)
(bad)
jg
stc
sbb
ins
jnp
add
lahf
mov
scas
mov
jg
movs
shl
jmp
clc
sub
mov
int3
or
cmps
js
lds
mov
xchg
mov
fcomp
add
jg
sar
mov
and
jg
and
mov
inc
adc
jb
es
adc
(bad)
(bad)
jmp
mov
sbb
push
sti
mov
mov
icebp
cmps
sbb
aad
clc
in
xchg
dec
fwait
clc
push
sub
xchg
(bad)
dec
hlt
aad
sahf
pop
jp
push
and
mov
ds
hlt
push
cmc
dec
cli
jl
fdivr
shl
adc
mov
mov
loop
ficomp
mov
aas
cmp
push
sub
jno
mov
push
sahf
lds
xchg
lahf
sahf
enter
pop
dec
xor
(bad)
(bad)
(bad)
cmp
stc
(bad)
hlt
into
cmp
xchg
xchg
fmul
or
dec
shr
and
pushf
cmp
inc
scas
(bad)
aad
scas
mov
cmc
das
mov
jle
or
jl
jg
(bad)
mov
fwait
mov
ins
pop
dec
mov
in
cmc
call
stos
jmp
jmp
out
mov
jmp
fsubr
or
sub
mov
add
(bad)
div
(bad)
jns
dec
in
dec
push
mov
cmps
mov
pop
neg
neg
ret
push
push
inc
(bad)
mov
mov
call
cmps
pop
sub
outs
aam
call
fwait
adc
sbb
adc
cmp
add
jp
cli
jmp
adc
sahf
jmp
int3
xchg
cld
push
cmp
inc
(bad)
push
or
jp
mov
call
fwait
and
xchg
ins
xor
nop
cmp
repnz
(bad)
(bad)
(bad)
(bad)
dec
ds
jp
int
loopne
pop
hlt
jle
jo
or
adc
in
fnstenv
jecxz
ins
aas
(bad)
fild
mov
cmp
jno
outs
loope
bswap
clc
pop
lock
retf
xor
cmps
shr
and
xchg
in
or
push
xchg
clc
int
ss
and
gs
jp
(bad)
(bad)
inc
jb
mov
call
lea
cmp
xchg
(bad)
(bad)
(bad)
push
jg
inc
or
inc
dec
xchg
int3
fisubr
aas
sub
jae
test
cmp
(bad)
inc
xchg
cli
retf
push
out
push
cmc
dec
retf
inc
outs
aam
ja
mov
or
pcmpgtw
(bad)
(bad)
(bad)
call
dec
sahf
inc
sub
xchg
jp
mov
inc
cmp
push
mov
mov
dec
(bad)
(bad)
mov
jp
or
pop
test
adc
pop
push
dec
(bad)
(bad)
(bad)
inc
aas
xor
jmp
inc
test
sahf
movs
in
mov
jecxz
aad
dec
jg
sar
sti
(bad)
jmp
cli
fwait
adc
aad
sbb
sbb
leave
push
imul
inc
(bad)
(bad)
push
in
push
rcr
xlat
dec
jge
sbb
dec
fstp
into
cmc
mov
xchg
add
sbb
jg
mov
lock
jns
add
mov
hlt
(bad)
sti
movs
idiv
inc
clc
(bad)
(bad)
inc
xor
cld
into
cmps
push
dec
mov
stc
pop
dec
mov
das
in
inc
ror
lods
iret
pop
lock
inc
xor
and
cmp
sbb
cmc
mov
and
(bad)
sahf
ret
(bad)
(bad)
mov
push
inc
add
aad
out
push
pop
fs
repnz
addr16
jmp
into
fld
dec
(bad)
addr16
int
xlat
loopne
aam
shr
jmp
push
fmul
xor
imul
ins
inc
scas
xor
aas
cld
(bad)
(bad)
(bad)
jmp
push
push
pop
inc
add
push
rol
inc
jo
mov
mov
jmp
add
mov
dec
movs
leave
push
jno
mov
jg
loopne
xchg
sub
mov
dec
xchg
xlat
pusha
push
outs
push
add
pop
xor
mov
je
(bad)
(bad)
(bad)
(bad)
clc
outs
cld
int3
jp
(bad)
jb
adc
cmp
push
js
in
push
push
or
mov
fldcw
(bad)
inc
shr
retf
mov
dec
in
and
mov
ror
stos
loop
xor
(bad)
(bad)
(bad)
sti
rcr
lods
and
iret
imul
mov
xchg
jle
cmp
cmp
jae
scas
push
lea
mov
and
int3
push
fisub
(bad)
scas
inc
leave
sub
push
push
dec
or
jno
ds
test
xor
outs
data16
scas
dec
popf
icebp
je
or
(bad)
(bad)
mov
push
in
jmp
arpl
pop
aas
dec
sub
inc
sbb
(bad)
jmp
mov
popa
push
mov
inc
lahf
add
add
into
mov
sar
mov
xchg
mov
ds
xchg
mov
dec
sahf
jecxz
rcr
fmul
(bad)
cmps
jecxz
pop
pop
sar
sbb
mov
in
ror
(bad)
int
les
(bad)
clc
jecxz
out
or
fist
push
or
fisub
pop
mov
pop
std
call
loop
jecxz
inc
(bad)
add
sbb
mov
and
push
imul
dec
outs
push
hlt
mov
jnp
dec
test
sahf
in
movs
dec
mov
call
int3
arpl
adc
add
(bad)
aam
and
push
fiadd
cmp
stos
(bad)
dec
ror
xchg
inc
popf
pop
je
sbb
dec
sub
(bad)
inc
push
push
fwait
out
cmps
mov
xchg
or
adc
inc
sub
xchg
xchg
pop
std
stos
cdq
hlt
(bad)
(bad)
(bad)
jg
das
push
sub
cmp
sub
sub
enter
mov
jmp
cdq
in
sar
(bad)
inc
mov
jecxz
sub
pop
into
mov
inc
dec
fidivr
cmp
fisttp
ret
aaa
push
cwde
mov
xchg
int
mov
jmp
jmp
and
out
mov
mov
out
fwait
enter
xor
or
arpl
fs
inc
lods
add
or
add
add
sub
pop
xor
jmp
sub
push
rcr
lea
jb
xor
(bad)
dec
push
mov
out
out
add
leave
rcl
fscale
add
fcom
ins
mov
sub
test
push
lods
lahf
jns
cld
jg
or
mov
xchg
xchg
pop
and
mov
call
adc
dec
and
aaa
aaa
in
push
mov
jb
fcomp
inc
push
sar
push
push
push
and
mov
xor
push
sbb
jecxz
scas
xchg
hlt
jg
fisub
or
dec
es
les
push
adc
jmp
pushf
xor
lea
js
jmp
xor
cmp
call
dec
jge
add
push
dec
push
fldcw
or
out
jmp
xchg
movs
mov
icebp
cmp
cdq
xchg
add
add
mov
fs
jb
sahf
xchg
add
(bad)
(bad)
(bad)
call
add
inc
ret
(bad)
rcr
fwait
xchg
stc
std
push
jp
fist
out
pop
(bad)
(bad)
(bad)
inc
sub
or
xchg
lods
mov
xchg
pop
clc
lahf
aaa
adc
and
rcr
pop
ins
pop
jmp
inc
xor
enter
int3
(bad)
loopne
sbb
jmp
inc
jle
loopne
sbb
inc
push
les
jmp
jl
mov
cmp
(bad)
(bad)
(bad)
(bad)
mov
jp
xchg
mov
adc
and
jle
xor
in
xchg
cdq
cld
adc
arpl
call
inc
mov
fcom
scas
jae
xor
or
xor
(bad)
(bad)
mov
inc
xchg
jns
cdq
cs
mov
xor
cmp
loop
sub
sahf
call
inc
ret
les
repnz
(bad)
(bad)
(bad)
inc
and
mov
cld
in
pusha
test
jbe
sahf
outs
sti
xor
aam
jl
xchg
push
(bad)
dec
(bad)
cmp
push
stos
ins
mov
dec
push
or
(bad)
pushf
fld
sub
mov
test
push
sub
jmp
dec
inc
inc
dec
xchg
mov
imul
push
shr
sub
(bad)
mov
sub
repz
add
sbb
repz
iret
lahf
stos
mov
(bad)
(bad)
(bad)
mov
outs
fsub
fnstcw
daa
mov
stos
sbb
xchg
pusha
movs
stos
call
or
jecxz
pop
iret
dec
out
addr16
mov
pop
jmp
aad
push
leave
jle
fiadd
jl
xor
dec
shr
mov
(bad)
(bad)
mov
not
test
repz
arpl
push
or
mov
call
cs
mov
ds
sahf
xchg
jp
or
ret
or
in
(bad)
fcomip
loop
lock
xchg
loop
push
repnz
push
frstor
ret
dec
push
(bad)
jg
jmp
mov
stos
out
mov
adc
mov
add
data16
stos
mov
sub
and
clc
xchg
xchg
xchg
dec
sbb
sub
retf
or
inc
faddp
mov
sub
add
and
(bad)
(bad)
fist
fucomp
dec
stc
inc
push
scas
pop
inc
fs
xor
pop
dec
sub
(bad)
outs
cmp
jmp
or
xchg
addr16
cmp
jg
fdivrp
(bad)
(bad)
jmp
adc
jmp
or
cs
stos
(bad)
jle
or
(bad)
push
cmps
neg
lods
in
adc
pop
push
pop
aas
loopne
jne
adc
arpl
push
mov
(bad)
(bad)
(bad)
jmp
je
imul
fsub
jo
ror
std
pusha
mov
inc
mov
(bad)
push
sub
stos
xor
pop
ins
ror
push
out
add
jbe
hlt
lods
hlt
mov
call
push
cwde
test
or
scas
fiadd
loop
enter
inc
sbb
dec
cwde
mov
(bad)
(bad)
mov
repz
xor
or
and
ja
push
or
sub
jmp
icebp
addr16
jae
xor
mov
cmp
push
push
fidiv
jl
cmp
clc
(bad)
(bad)
(bad)
jmp
clc
xlat
pop
dec
pop
dec
hlt
out
dec
aas
jnp
mov
rcl
or
jb
jmp
pop
and
in
cli
(bad)
jb
pop
adc
faddp
inc
sti
lods
add
nop
icebp
call
sub
or
push
cdq
and
and
(bad)
(bad)
call
movs
ficomp
mov
xor
and
loopne
xor
adc
icebp
scas
mov
add
or
cmp
dec
and
push
retf
sub
push
(bad)
push
retf
loope
loopne
stos
push
pop
js
aaa
pop
loopne
mov
aas
aam
mov
cmp
mov
inc
cli
dec
rol
dec
nop
jne
ret
cld
xchg
mov
jmp
loop
xor
cmp
add
fucomp
ins
cmps
ds
retf
enter
jo
(bad)
(bad)
(bad)
dec
das
ds
inc
cld
sbb
jb
jnp
mov
das
jne
mov
inc
fbld
sahf
pop
or
and
fidiv
mov
sbb
scas
inc
mov
stos
adc
hlt
iret
nop
cmp
add
push
and
xor
inc
(bad)
(bad)
(bad)
inc
inc
jmp
retf
mov
out
jl
mov
mov
aad
add
clc
mov
inc
int3
repz
cmp
and
push
ret
push
pop
add
ins
sub
push
mov
(bad)
mov
call
push
(bad)
fstp
or
adc
(bad)
cmp
(bad)
(bad)
inc
sub
sti
add
jle
inc
hlt
test
(bad)
jg
ret
(bad)
nop
test
loop
add
enter
xor
popf
hlt
(bad)
(bad)
(bad)
(bad)
call
ss
js
lea
sub
ffreep
sub
or
add
repz
(bad)
(bad)
mov
xchg
and
mov
imul
dec
in
es
jb
pop
nop
(bad)
dec
dec
mov
sbb
dec
adc
mov
adc
(bad)
dec
add
fadd
push
add
int
xlat
cmp
es
jnp
or
(bad)
call
test
dec
(bad)
mov
in
mov
sbb
add
cmp
jg
(bad)
js
mov
pusha
sub
in
es
call
retf
out
xor
pop
pop
mov
jle
adc
cld
call
lds
fimul
sbb
jl
shr
(bad)
jg
movs
fbld
aaa
xchg
out
cmc
sub
dec
sar
adc
(bad)
fistp
stos
jg
pusha
cld
push
(bad)
cdq
adc
outs
bound
clc
retf
cdq
dec
(bad)
(bad)
(bad)
dec
pop
hlt
cmp
sbb
pop
outs
movs
fwait
or
add
dec
mov
dec
fldenv
dec
adc
mov
movs
mov
sub
xor
add
clc
(bad)
(bad)
cli
and
jnp
push
jae
jl
add
push
movs
sbb
(bad)
(bad)
dec
dec
outs
xor
inc
xchg
mov
add
fcom
mov
cli
popf
je
(bad)
(bad)
dec
rol
mov
cwde
jb
ret
cmp
sbb
(bad)
ins
into
idiv
inc
dec
clc
int
sbb
int3
jge
jmp
sbb
pop
cmp
cmc
xor
sub
daa
push
ins
mov
jmp
pop
test
jbe
repz
jmp
cs
pop
or
cmp
arpl
je
cmp
in
(bad)
(bad)
(bad)
call
rol
lock
mov
jecxz
sti
loop
or
pop
cwde
out
and
pop
inc
cmp
mov
loop
ja
pop
(bad)
mov
aam
xor
lea
movs
pop
(bad)
(bad)
(bad)
dec
pushf
fimul
add
iret
xor
lods
lock
push
cmps
in
mov
cmp
dec
dec
jecxz
(bad)
sub
push
outs
aas
popa
and
dec
(bad)
arpl
inc
popf
mov
lock
jmp
pusha
jle
aas
cmp
xlat
loop
cmp
mov
cld
cmp
cmp
sub
dec
jae
xor
ss
mov
fld
sbb
ret
(bad)
call
pushf
out
into
push
test
mov
inc
iret
inc
lods
sub
cld
jmp
mov
dec
stos
adc
or
adc
aaa
or
ins
cmps
xchg
test
mov
and
scas
jle
pop
mov
dec
sbb
mov
out
test
adc
hlt
lock
(bad)
call
imul
stc
xchg
stc
das
test
aaa
xor
cmp
mov
outs
ds
jae
(bad)
(bad)
(bad)
call
std
repz
jg
movs
mov
js
loop
stc
iret
add
daa
mov
pop
stc
sahf
(bad)
jae
(bad)
jmp
mov
mov
xchg
je
into
lahf
xchg
dec
repnz
pop
mov
call
ja
jae
sub
shr
and
into
mov
(bad)
inc
cs
or
ret
jmp
lds
fistp
jmp
dec
jnp
xor
idiv
cdq
xlat
dec
cmps
pop
jno
pop
leave
dec
push
mov
sub
xchg
cmp
jbe
call
stc
(bad)
(bad)
jmp
xor
retf
into
jge
aas
cmc
pop
dec
(bad)
jmp
ds
xor
xor
std
aad
js
mov
loop
(bad)
dec
test
pop
ds
clc
inc
retf
sub
inc
(bad)
(bad)
mov
(bad)
cmps
mov
xor
div
fcom
xor
push
mov
jg
(bad)
jmp
ins
test
xor
neg
dec
and
enter
(bad)
ja
ret
fsub
push
js
repnz
(bad)
(bad)
(bad)
call
sub
mov
jle
mov
mov
shl
adc
ins
repz
(bad)
(bad)
call
retf
xor
sbb
push
fucom
stos
xchg
dec
jb
fisttp
call
fdiv
test
xlat
(bad)
popa
mov
sbb
sbb
cmps
inc
ret
rol
xchg
sbb
mov
mov
and
push
repnz
mov
push
orps
or
pop
jbe
fcomip
(bad)
fsubr
pushf
imul
(bad)
movs
mov
xlat
push
stos
mov
push
xchg
mov
jnp
jo
rcl
xlat
sub
ret
xor
(bad)
jmp
mov
mov
(bad)
xor
push
xlat
(bad)
(bad)
(bad)
jmp
fsub
rcl
fisub
cmp
stos
jae
das
ss
mov
sysenter
arpl
pop
(bad)
(bad)
(bad)
inc
test
xor
inc
mov
dec
cmp
out
pushf
add
cmps
mov
stc
push
inc
loop
xor
jno
(bad)
sbb
or
or
inc
lea
push
out
or
(bad)
(bad)
(bad)
(bad)
cmp
xchg
adc
cmc
jecxz
test
f2xm1
sti
mov
pop
cmp
adc
sub
hlt
imul
(bad)
(bad)
ds
jbe
ja
test
retf
cli
xlat
ss
or
mov
sub
inc
pop
pop
loopne
(bad)
push
repz
rcl
mov
fistp
jg
inc
dec
pop
pop
mov
movs
cli
xor
push
sti
inc
xchg
adc
call
or
jmp
mov
rol
fwait
pop
jnp
push
fsub
mov
mov
(bad)
(bad)
jmp
adc
retf
push
shufps
or
int3
test
add
pop
mov
xchg
jmp
cli
push
retf
pop
test
sahf
repz
inc
ficomp
ds
aaa
imul
mov
xor
add
(bad)
jmp
mov
mov
rcr
dec
inc
mov
pop
les
je
leave
dec
inc
inc
mov
in
inc
jmp
mov
imul
(bad)
call
mov
jl
icebp
mov
cmp
jge
jl
pop
sub
adc
xchg
(bad)
(bad)
(bad)
call
lea
pop
aaa
xchg
dec
sbb
mov
cmp
inc
cmp
sub
aam
test
xor
jl
pop
push
scas
push
sub
mov
call
stos
div
push
inc
mov
xor
add
dec
push
sbb
cmp
sar
div
outs
jg
aam
aam
rcl
mov
iret
push
call
cmp
add
jge
mov
(bad)
in
icebp
(bad)
call
test
push
ficom
sub
seto
(bad)
jg
inc
or
cmp
fcom
nop
(bad)
sbb
mov
add
(bad)
dec
retf
jns
push
repnz
pop
mov
scas
scas
pop
fstp
aam
push
jle
xor
cs
ss
(bad)
(bad)
call
xor
out
push
cmp
nop
jmp
sbb
rcr
imul
(bad)
(bad)
call
aam
xor
(bad)
repnz
outs
xor
sbb
cmps
jb
dec
fcmovne
xor
push
sub
(bad)
(bad)
inc
or
out
pop
in
ins
dec
jp
jne
aaa
stc
inc
cmc
aam
and
cmp
or
fdiv
(bad)
repnz
sbb
sub
(bad)
jmp
fbld
(bad)
sbb
retf
xchg
pop
jecxz
(bad)
(bad)
dec
jnp
jne
mov
mov
cmp
sub
iret
mov
(bad)
into
(bad)
hlt
adc
lahf
test
push
push
dec
aad
dec
popa
add
mov
add
adc
pop
adc
fdivr
(bad)
in
(bad)
jp
jge
daa
dec
pop
push
mov
sub
mov
into
aaa
nop
arpl
in
fmul
jg
(bad)
dec
leave
sar
pushw
lods
dec
mov
push
or
xor
push
sbb
cmp
sub
mov
pop
pop
cmp
mov
(bad)
(bad)
inc
mov
icebp
rol
int3
cmp
retf
dec
adc
push
sar
out
add
(bad)
(bad)
inc
mov
adc
xlat
pop
push
and
pushf
retf
das
xlat
mov
mov
aad
mov
jmp
or
ror
xchg
sbb
lods
cmp
xor
push
addr16
out
andnps
sub
jns
scas
rol
mov
(bad)
jmp
fidivr
or
(bad)
mov
mov
push
push
cmp
push
aad
mov
mov
or
(bad)
jmp
test
ds
push
mov
pop
loope
xchg
lahf
fisub
pop
sahf
cli
(bad)
(bad)
call
int
shl
sub
xchg
ins
sub
dec
ret
jmp
jb
iret
and
aad
mov
adc
scas
popa
xchg
test
(bad)
jl
cmp
dec
aas
xor
cmp
mov
push
popa
(bad)
(bad)
(bad)
jg
loopne
xor
iret
push
sub
push
test
ret
jmp
xchg
jmp
push
push
cmp
aaa
cmp
push
xlat
addr16
leave
push
aad
nop
sub
outs
xor
lods
mov
jle
(bad)
call
add
inc
int3
xor
in
ror
jmp
aad
jg
clc
or
sub
jmp
int
cli
add
shl
je
(bad)
mov
ror
daa
(bad)
push
push
imul
icebp
(bad)
dec
sbb
jmp
scas
stos
sbb
inc
shl
mov
adc
fistp
loopne
lahf
pop
mov
mul
xor
aam
xchg
(bad)
(bad)
(bad)
push
aas
cwde
aaa
movs
lock
retf
xor
inc
mov
into
pop
inc
and
aaa
std
dec
push
mov
mov
cld
fisttp
scas
cmps
mov
adc
pop
adc
call
pop
mov
push
inc
xor
mov
(bad)
(bad)
mov
jp
xchg
xor
ret
inc
jmp
mov
sbb
and
add
mov
or
push
add
or
mov
push
es
(bad)
jmp
sub
das
in
loop
add
sbb
or
push
int
(bad)
mov
int3
imul
retf
ds
jmp
mov
and
shr
cmp
adc
mov
and
(bad)
(bad)
(bad)
jnp
hlt
dec
jle
cmp
rcl
sbb
add
inc
repz
(bad)
out
mov
inc
(bad)
cmc
addr16
push
fst
ss
sub
inc
aam
lea
dec
(bad)
pop
sbb
push
outs
push
push
xchg
outs
cmp
ss
pusha
jmp
gs
call
clc
dec
xchg
fistp
mov
fild
jl
inc
xchg
nop
push
addr16
in
(bad)
(bad)
(bad)
std
out
(bad)
std
call
jno
cmp
jl
xlat
jg
pop
add
xor
aaa
(bad)
std
(bad)
(bad)
call
adc
repnz
sub
add
les
mov
call
inc
jge
(bad)
jmp
imul
or
cwde
pushf
and
jno
xor
lods
jne
add
dec
cli
adc
(bad)
fistp
fmul
fs
test
cld
or
retf
add
test
mov
sar
(bad)
jg
jmp
js
test
xchg
scas
or
leave
popa
sbb
(bad)
fist
sbb
push
jno
xor
or
fadd
push
adc
sub
(bad)
(bad)
dec
push
fst
dec
jo
retf
push
sub
ret
sti
fdivr
sub
(bad)
dec
cmp
xchg
xchg
xor
jae
fwait
dec
out
mov
cmc
inc
in
sub
loope
rol
pop
scas
adc
mul
dec
cmp
aaa
mov
adc
sti
(bad)
sub
push
dec
in
adc
int
fisttp
aam
sbb
xchg
pop
adc
jge
or
(bad)
(bad)
mov
push
cmps
loopne
cmps
pop
test
shl
in
mov
dec
sub
(bad)
cmp
ds
sub
int3
lods
daa
jbe
and
ss
daa
cmp
push
out
ds
or
loope
jnp
xor
jle
fnstcw
lock
(bad)
inc
cmp
mov
dec
ficom
addr16
ds
mov
jae
sub
call
or
pop
aam
retf
sbb
(bad)
(bad)
(bad)
fbstp
fadd
add
add
test
cmps
jle
fwait
(bad)
fldenv
(bad)
(bad)
dec
movs
iret
call
dec
pushf
dec
iret
getsec
movs
fidivr
mul
cli
jg
add
mov
(bad)
(bad)
out
(bad)
rcl
xchg
jae
jns
jle
cmp
and
inc
stos
rcl
inc
sbb
dec
add
sub
fcomp
adc
mov
or
dec
add
ss
mov
bound
(bad)
mov
fisubr
xor
(bad)
call
(bad)
xor
mov
mov
mov
cmp
(bad)
(bad)
fisttp
push
imul
cmp
lock
fiadd
sub
add
(bad)
fild
test
(bad)
fs
inc
sbb
cmp
dec
mov
xchg
dec
cs
(bad)
(bad)
dec
push
inc
and
jne
xor
cs
sbb
cwde
arpl
cmc
outs
aad
into
loope
call
add
jbe
rcl
or
test
scas
fwait
cmp
(bad)
(bad)
mov
int
mov
data16
pop
into
xchg
sub
clc
jl
loope
(bad)
push
js
dec
push
not
add
adc
push
mov
(bad)
(bad)
mov
xlat
pop
cdq
outs
sbb
mov
call
(bad)
dec
fbstp
(bad)
(bad)
xor
xor
or
fiadd
in
and
ret
mov
cld
mov
push
pop
push
pop
(bad)
fmul
fst
push
xor
(bad)
(bad)
push
xchg
clc
out
sbb
inc
cdq
mov
push
neg
inc
cld
jg
sub
mov
pusha
xchg
push
or
cmp
(bad)
push
dec
loopne
in
rol
jl
int
or
dec
js
lea
push
cli
(bad)
mov
je
xor
and
push
test
(bad)
(bad)
(bad)
push
icebp
sbb
push
mov
cs
jno
sbb
iret
push
mov
jl
ins
pop
rep
jmp
call
dec
cmp
(bad)
in
dec
jl
mov
mov
call
push
js
and
and
jp
cli
dec
clc
add
les
into
pop
adc
(bad)
(bad)
mov
test
mov
shl
jmp
(bad)
(bad)
(bad)
mov
mov
jp
and
fst
fcmovnbe
mov
retf
xor
(bad)
(bad)
jmp
push
arpl
dec
mov
aad
movs
sub
xor
int
mov
jl
dec
js
leave
adc
(bad)
(bad)
jmp
xchg
scas
mov
lds
mov
movs
in
int
pop
mov
es
fwait
xchg
(bad)
(bad)
call
pop
pop
cs
mov
cmp
(bad)
retf
pushf
adc
pushaw
xor
(bad)
(bad)
(bad)
inc
lds
xchg
jno
mov
cmp
movs
bound
ds
ror
(bad)
cmp
test
jno
aaa
adc
arpl
adc
popa
or
mov
mov
test
hlt
rol
jp
jno
cdq
loopne
jle
xchg
ins
sbb
inc
(bad)
(bad)
(bad)
call
inc
repnz
sbb
sbb
paddb
sbb
scas
repnz
mov
xor
(bad)
(bad)
jl
push
lahf
lahf
shr
nop
fisub
cmp
fisttp
into
mov
xcrypt-ctr
cmps
sbb
pushf
jne
push
(bad)
(bad)
mov
push
xlat
out
dec
(bad)
sbb
(bad)
fsin
test
cmps
mov
push
push
mov
mul
movs
dec
into
push
mov
or
ins
and
in
xor
push
jle
(bad)
aad
(bad)
ds
fwait
stos
jecxz
lock
jg
sub
push
mov
out
jmp
clc
movs
inc
ror
xor
inc
arpl
sub
or
push
push
sahf
mov
adc
(bad)
jnp
jae
push
cmp
(bad)
push
jb
arpl
add
mov
(bad)
mov
pop
dec
mov
lds
retf
clc
inc
pop
retf
(bad)
loopne
mov
dec
dec
loope
out
ds
(bad)
imul
sub
pusha
fadd
dec
and
cmp
cmp
push
mov
jo
(bad)
(bad)
dec
loope
pop
cli
cmp
frstor
cmp
inc
bound
aas
mov
or
retf
arpl
fwait
dec
add
inc
xchg
fstp
mov
dec
xor
xor
es
inc
pop
aad
or
xor
(bad)
(bad)
jmp
sub
ret
sar
mov
mov
loop
xchg
not
mov
aam
aad
mov
(bad)
inc
jns
mov
bound
xor
and
shr
hlt
xchg
movs
movs
mov
push
lock
(bad)
rol
(bad)
inc
xor
dec
pushf
jmp
out
and
and
jecxz
adc
out
sub
jle
(bad)
call
(bad)
(bad)
(bad)
cld
push
cmp
inc
nop
test
push
ret
jno
sbb
or
pop
or
ja
dec
bound
retf
sbb
add
pop
pushf
(bad)
gs
mov
ins
xor
sar
jbe
xchg
imul
(bad)
(bad)
(bad)
jg
pusha
sub
xor
dec
add
sbb
xor
xchg
test
mov
repz
sub
scas
dec
loop
das
mov
cmp
xchg
jl
fst
(bad)
cdq
iret
sub
sbb
in
(bad)
(bad)
call
ror
push
test
sbb
clc
mov
mov
xchg
into
and
pop
std
pop
and
clc
data16
add
pop
add
fsubr
sar
imul
sbb
inc
sub
call
or
ins
(bad)
mov
cdq
stc
das
shl
outs
ret
and
dec
push
(bad)
inc
ror
imul
dec
sbb
dec
arpl
xchg
xchg
push
jmp
push
pop
pop
les
cmp
(bad)
push
jg
cdq
hlt
call
(bad)
(bad)
(bad)
jg
stos
mov
addr16
push
xor
inc
pop
inc
xchg
pop
fs
push
fsubr
fwait
ret
and
out
pop
(bad)
(bad)
(bad)
inc
lea
sub
cmps
push
sub
sahf
fist
aaa
jge
(bad)
and
pop
add
sbb
jg
(bad)
inc
pushf
xchg
js
or
aaa
jmp
movs
cmp
mov
aas
(bad)
dec
jbe
sbb
dec
int3
fild
mov
inc
(bad)
test
jle
add
(bad)
call
xchg
(bad)
lea
out
pop
stos
xchg
sub
das
jle
mov
dec
ret
(bad)
(bad)
push
mov
fsubr
xchg
xor
rol
jecxz
xor
es
jb
clc
pop
(bad)
jmp
jmp
int3
pop
call
inc
sbb
cld
(bad)
jmp
pop
cmp
ins
ret
ss
pop
jbe
int
or
in
stos
mov
test
sub
(bad)
(bad)
(bad)
dec
push
add
in
out
mov
in
push
push
mov
mov
mov
cld
push
stos
shl
sub
add
(bad)
or
call
dec
fadd
push
pop
shl
xchg
add
dec
sbb
pop
jno
or
pop
clc
call
mov
cmp
(bad)
(bad)
aam
ret
xor
clc
(bad)
(bad)
clc
xor
out
stos
imul
mov
mov
inc
mov
jmp
add
add
enter
jo
push
fs
sar
es
pop
jg
or
jb
cmp
inc
sar
(bad)
(bad)
(bad)
push
cs
jbe
jg
mov
cwde
int3
sbb
in
out
lea
outs
push
dec
jmp
aas
(bad)
mov
(bad)
(bad)
in
and
outs
jl
dec
and
call
lods
imul
mov
popw
adc
(bad)
mov
and
or
lods
cld
or
fdivr
sbb
ins
mov
enter
push
jp
push
(bad)
loop
adc
pop
shl
mov
add
jmp
mov
xchg
add
shl
popa
cs
(bad)
(bad)
(bad)
jg
call
shl
mov
sub
mov
mov
ja
int
aam
shr
cmp
ja
(bad)
(bad)
(bad)
in
push
cmp
or
out
sahf
sub
xchg
dec
adc
repz
push
cwde
or
(bad)
(bad)
inc
cmps
push
repz
or
xchg
inc
jge
inc
push
pop
mov
shl
push
and
(bad)
(bad)
push
stos
cmp
add
fiadd
rcr
push
(bad)
bound
inc
cmps
arpl
clc
mov
pop
lods
fnsave
xchg
inc
cmp
das
jnp
lods
fbld
jle
cdq
cmc
xor
inc
adc
(bad)
(bad)
jmp
dec
aam
mov
mov
movs
adc
out
loop
jmp
loopne
mov
or
icebp
stos
or
mov
mov
sbb
push
stos
sbb
(bad)
sbb
dec
test
mov
cld
loope
call
loop
mov
jbe
pushf
imul
pop
add
outs
clc
cmps
int
rcl
mov
das
and
xchg
(bad)
jmp
inc
adc
jae
popf
lods
das
adc
(bad)
movs
in
std
mov
(bad)
(bad)
(bad)
jmp
popf
outs
lods
cmc
rol
dec
sbb
xor
ret
cld
lds
scas
push
jge
pop
(bad)
call
adc
jo
mov
jmp
popf
mov
out
mov
cmp
dec
jmp
inc
out
shl
ja
scas
inc
(bad)
pushf
in
sub
out
(bad)
call
mov
sahf
(bad)
(bad)
ins
mov
push
xchg
(bad)
fldcw
hlt
scas
(bad)
(bad)
jl
add
and
adc
xor
jg
pop
cmc
fild
and
aad
add
cdq
mul
call
jle
aam
xchg
mov
jbe
(bad)
(bad)
jg
xchg
sbb
pop
cwde
cmp
rcl
xor
push
lds
xchg
je
jno
jg
in
push
pop
test
cmp
js
mov
push
sbb
addr16
or
scas
xlat
movs
xlat
xor
mov
arpl
sahf
lds
out
jae
pop
clc
fadd
or
jno
popa
push
pop
jb
mov
jp
pop
mov
hlt
mov
sub
sti
(bad)
jnp
push
hlt
jge
and
neg
pop
xchg
pop
in
mov
fcomp
pop
push
pop
or
bound
loopne
sub
sbb
bound
test
cmc
das
push
test
clc
sbb
push
mov
jmp
iret
fdiv
mov
dec
cmp
cdq
movs
fucomi
dec
jo
cmp
fadd
or
test
sar
dec
hlt
adc
aas
(bad)
in
lds
test
lods
test
(bad)
cmp
push
mov
dec
inc
repnz
push
aaa
add
cmp
sbb
push
int
or
or
clc
popa
(bad)
leave
pop
outs
aaa
jmp
add
mov
dec
(bad)
call
pop
mov
rcl
test
jecxz
xor
dec
or
mov
(bad)
(bad)
(bad)
call
lea
js
repnz
(bad)
push
in
and
jae
xor
or
xor
out
jmp
icebp
cdq
cmp
(bad)
xchg
pop
inc
out
es
pop
mov
and
(bad)
(bad)
(bad)
dec
int
cmc
adc
sbb
or
mov
jmp
sbb
lods
jecxz
mov
(bad)
inc
repnz
movs
add
sub
lock
inc
mov
sbb
push
adc
hlt
(bad)
(bad)
dec
xor
enter
test
or
imul
jmp
jo
adc
push
push
(bad)
mov
sbb
jo
lods
retf
mov
jge
popa
(bad)
(bad)
jmp
int
aas
cmp
test
jle
cmovnp
popa
or
xchg
jns
stos
(bad)
mov
bound
pop
in
aad
test
mov
mov
jmp
repnz
mov
call
cmps
rol
push
sbb
ds
push
jbe
add
loop
push
jg
xor
(bad)
call
or
xor
psllq
outs
into
and
cmps
adc
mov
dec
(bad)
xchg
cdq
gs
test
or
sbb
sub
push
adc
pop
xor
dec
and
js
cld
(bad)
call
adc
dec
lods
push
xor
movs
cmps
jne
cmp
jp
fdivrp
mov
call
push
adc
dec
push
int
shl
and
inc
outs
pop
push
pushf
sub
fwait
std
jg
(bad)
(bad)
aas
adc
xchg
jnp
js
test
call
and
jge
call
fs
repnz
jecxz
jle
jle
sbb
sub
movs
lods
dec
fbld
iret
retf
add
in
aam
aam
sti
inc
xor
cmc
(bad)
call
repz
xchg
sbb
ret
mov
les
mov
nop
pop
out
dec
adc
lods
lahf
xor
out
mov
or
lods
data16
cmc
js
push
ror
retf
push
call
in
dec
jecxz
call
or
mov
sub
lods
in
setge
xor
lods
ds
xlat
(bad)
(bad)
(bad)
fistp
dec
adc
xchg
mov
movs
in
lea
inc
mov
or
(bad)
(bad)
dec
mov
js
loope
jnp
(bad)
pop
sbb
push
(bad)
jmp
pop
out
sub
xor
xchg
ror
movs
cli
cdq
outs
test
pop
hlt
cmps
jg
jmp
add
mov
ret
cmp
pop
sbb
data16
aam
(bad)
(bad)
call
xchg
mov
xchg
xchg
mov
sbb
in
push
push
jl
out
hlt
call
dec
mov
pop
mov
movs
inc
pusha
sbb
dec
and
(bad)
inc
cmp
xchg
pusha
mov
ins
jmp
mov
jge
pop
inc
in
jb
add
(bad)
jecxz
inc
pusha
or
or
(bad)
in
dec
jno
jmp
pop
or
loopne
sub
adc
icebp
(bad)
mov
test
test
cld
cmc
mov
and
xor
jle
xchg
pop
adc
push
(bad)
jg
mov
jnp
aas
add
sub
jae
aad
push
jle
jmp
movs
inc
(bad)
jae
repz
(bad)
(bad)
jmp
das
loop
mov
mov
inc
je
in
call
ins
outs
add
inc
jns
lea
(bad)
inc
pop
mov
jmp
rcl
cwde
xchg
push
ret
inc
lds
enter
aam
mov
mov
lods
aam
les
ins
add
push
jp
adc
pop
lods
aad
dec
int3
(bad)
(bad)
(bad)
call
and
xchg
xor
adc
xor
sub
(bad)
(bad)
(bad)
push
and
xlat
pop
in
ja
out
out
(bad)
mov
data16
scas
sub
sub
mov
test
ins
mov
dec
imul
jl
inc
push
call
cdq
dec
cld
das
cld
cdq
pop
shl
les
pop
xlat
pop
sbb
(bad)
inc
cld
inc
mov
cmp
xchg
add
sbb
mov
(bad)
(bad)
dec
das
sbb
sbb
xchg
fs
shr
xchg
xor
out
fbld
push
(bad)
(bad)
(bad)
call
popa
repz
push
cld
mov
aas
push
cs
mov
icebp
iret
jg
cld
pop
dec
cmp
fbld
sahf
and
repz
cmp
xchg
test
cli
(bad)
(bad)
inc
pop
call
rcl
pop
sbb
shl
or
mov
mov
cmp
push
jo
xor
jecxz
xchg
aaa
pop
cmp
jns
jne
fst
pop
(bad)
mov
shr
pop
mov
dec
push
push
or
(bad)
(bad)
(bad)
call
ins
lds
jo
cld
xchg
jnp
push
mov
mov
mov
mov
and
inc
jmp
mov
iret
mov
fdivr
ret
jbe
cli
cmc
xchg
add
mov
add
cmp
or
(bad)
cmp
call
arpl
dec
addr16
adc
adc
sbb
jg
add
aad
(bad)
rcl
and
mov
add
call
icebp
fidiv
outs
jmp
test
adc
or
mov
repnz
lds
mov
and
daa
stos
test
(bad)
(bad)
(bad)
clc
cs
add
movs
outs
or
push
mov
add
(bad)
jo
enter
mov
jnp
push
mov
(bad)
(bad)
(bad)
push
push
enter
js
push
jecxz
mov
or
add
(bad)
cwde
or
pusha
xchg
(bad)
(bad)
(bad)
dec
(bad)
jmp
mov
cs
bnd
gs
mov
bound
push
(bad)
out
cli
call
sub
add
add
or
mov
(bad)
(bad)
dec
xchg
inc
enter
sar
mov
fcomp
xor
shr
jge
xchg
dec
jb
xchg
add
js
test
mov
(bad)
(bad)
(bad)
jg
adc
iret
adc
sar
popf
add
addr16
ret
out
es
hlt
(bad)
(bad)
(bad)
fistp
push
xor
lahf
fdiv
loope
mov
fidiv
xchg
lea
in
jmp
or
(bad)
cmps
lods
dec
aad
enter
cmp
out
and
fcomip
xchg
pop
push
hlt
js
jne
mov
inc
sahf
stos
inc
aas
dec
dec
mov
fdivr
jmp
and
ins
adc
mov
mov
jg
mov
xchg
mov
push
mov
bnd
jmp
jnp
jp
out
clc
dec
adc
out
inc
stos
mov
es
cmp
mov
imul
xor
push
cmc
(bad)
push
xor
icebp
jno
inc
jns
in
ins
mov
xchg
dec
in
repnz
mov
cmp
xor
xchg
xor
mov
mov
(bad)
(bad)
dec
loop
sbb
xchg
inc
add
inc
lea
or
mov
call
ins
(bad)
jmp
push
das
call
or
into
cld
jmp
fisttp
dec
xor
pop
(bad)
call
cmp
add
cmc
les
push
ror
xor
cdq
mov
(bad)
mov
mov
aas
mov
sub
lock
push
xor
push
push
cs
setbe
(bad)
fdivr
pop
lea
shr
xlat
add
ret
stos
xor
(bad)
out
clc
sub
aam
ins
xor
dec
dec
shl
inc
sbb
sub
sub
add
inc
ss
jecxz
dec
add
push
xchg
(bad)
(bad)
fbld
fwait
pop
fs
adc
movs
dec
cmp
scas
and
or
inc
adc
in
cli
inc
das
cmp
dec
jl
test
cmp
xor
(bad)
call
xchg
dec
pop
call
(bad)
repz
test
(bad)
(bad)
(bad)
jg
pop
push
in
add
jl
dec
jge
and
cwde
rcr
data16
pop
fistp
imul
jns
mov
jae
ss
cmp
loope
aaa
xor
adc
adc
ret
xchg
pusha
jne
(bad)
(bad)
cmp
mov
lods
pop
pop
dec
cmps
xchg
pop
inc
pop
arpl
lods
mov
es
mov
xor
xor
ret
fs
pop
push
or
(bad)
dec
popa
sar
sbb
ret
pop
adc
adc
xor
inc
les
(bad)
(bad)
call
out
push
enter
or
pop
adc
mov
push
mov
out
and
std
cmc
movs
push
rcr
xchg
pop
loopne
inc
sub
enter
das
sub
inc
cwde
jg
lea
push
fisttp
sbb
call
jecxz
mov
mov
add
js
pop
xor
dec
(bad)
(bad)
(bad)
(bad)
jle
mov
cmp
cdq
push
sbb
ss
push
sahf
mov
pop
(bad)
(bad)
(bad)
call
mov
aad
loope
mov
or
cli
pop
pop
mov
push
sub
enter
pusha
and
les
mov
push
xchg
fsub
ret
pop
dec
xor
inc
stos
adc
jbe
call
sbb
cmps
mov
(bad)
(bad)
fisubr
outs
shl
lahf
mov
outs
add
pop
int
js
mov
gs
nop
sub
out
jno
hlt
mov
cwde
inc
(bad)
(bad)
(bad)
inc
jp
cmc
and
outs
out
aaa
push
ffreep
xor
movs
ds
mov
(bad)
(bad)
(bad)
call
sub
push
or
pop
xchg
pop
mov
(bad)
hlt
pop
pop
jns
sub
fcmovu
sub
(bad)
mov
test
shl
fadd
jmp
and
xor
(bad)
mov
repz
xchg
and
xchg
enter
fcomip
sbb
ror
cmp
fmul
dec
int3
fistp
cdq
ss
(bad)
(bad)
out
cmps
mov
sbb
jmp
call
outs
(bad)
(bad)
(bad)
(bad)
(bad)
stos
push
push
mov
scas
and
jne
leave
mov
addr16
xchg
jp
pop
jmp
cmps
xor
xlat
test
mov
(bad)
xchg
jecxz
inc
add
jg
or
(bad)
test
and
sbb
dec
dec
or
jmp
or
cmp
(bad)
(bad)
mov
jl
out
imul
push
mov
push
add
mov
repz
test
aaa
icebp
(bad)
(bad)
sti
fdiv
mov
fcom
add
dec
mov
cmp
jg
sar
xor
ror
mov
(bad)
xor
les
jmp
aam
dec
adc
aas
xchg
movs
icebp
ins
and
cli
xor
(bad)
(bad)
push
cmp
(bad)
pop
push
lods
je
in
dec
in
pop
sub
cwde
pop
and
imul
(bad)
retf
outs
pop
jg
cmp
sti
xor
(bad)
(bad)
call
mov
adc
mov
repnz
test
ficomp
and
and
pop
hlt
mov
add
icebp
sub
push
xchg
cmp
lock
call
fdivr
(bad)
(bad)
call
adc
mov
iret
inc
cmc
sub
fistp
xchg
cli
ror
(bad)
(bad)
jmp
and
cmps
outs
add
push
mov
ds
xchg
hlt
stc
and
jp
inc
ja
(bad)
(bad)
call
retf
pop
xlat
sbb
les
les
pop
(bad)
mov
inc
hlt
cmp
xchg
inc
cmc
jo
gs
call
cmp
loop
(bad)
(bad)
push
inc
push
xlat
repnz
jge
fcomp
inc
push
mov
sahf
ja
je
mov
pop
stos
lods
jl
sbb
mov
mov
xor
cmp
ret
(bad)
call
clc
mov
imul
(bad)
dec
xchg
popa
test
or
and
mov
mov
xor
in
repz
and
mov
(bad)
(bad)
push
pop
iret
fnstenv
std
(bad)
and
shr
mov
lods
movs
hlt
pop
jns
cli
(bad)
(bad)
clc
sub
xor
jo
sahf
mov
sti
jecxz
test
mov
adc
test
mov
data16
inc
sbb
pusha
ins
xor
add
(bad)
(bad)
inc
or
test
(bad)
xlat
mov
out
jp
mov
cmp
jg
rcl
(bad)
jp
std
pop
inc
jmp
add
fsubr
emms
adc
aam
and
jl
out
jae
mov
inc
inc
mov
rcr
push
fwait
or
fimul
retf
or
ret
aam
aaa
loopne
jmp
nop
xchg
xchg
call
out
add
retf
inc
sbb
sbb
(bad)
(bad)
mov
into
mov
fiadd
mov
arpl
sahf
mov
stos
out
xor
jmp
push
dec
jge
(bad)
(bad)
(bad)
jmp
inc
daa
mov
repz
push
in
sahf
mov
add
ins
int3
push
add
pop
mov
fistp
not
ret
loop
fisub
cli
(bad)
call
sbb
test
lea
fwait
test
outs
jge
fsub
jbe
add
lods
mov
xor
cld
ds
es
and
(bad)
(bad)
sti
xor
or
adc
xor
xchg
in
mov
lahf
test
and
cmc
add
or
ret
mov
movs
dec
jg
out
cmps
cmp
jmp
mov
add
(bad)
(bad)
inc
mov
(bad)
sbb
sbb
and
pusha
(bad)
retw
loop
pop
pop
mov
cmp
jle
(bad)
(bad)
(bad)
call
arpl
inc
cvtps2pi
jge
dec
jbe
(bad)
out
(bad)
and
jecxz
pusha
fdiv
rcl
(bad)
push
pop
and
mov
inc
push
and
(bad)
(bad)
mov
jg
sbb
div
jmp
mov
adc
nop
jg
mov
dec
add
call
mov
push
sti
(bad)
(bad)
(bad)
jg
mov
pushf
cli
or
or
jnp
pop
xchg
retf
pop
cld
ds
cmps
fldl2e
daa
or
(bad)
jg
aad
add
ss
into
aaa
xchg
fwait
sub
cmp
jp
out
jmp
js
and
movs
mov
sub
xlat
adc
mov
and
pop
out
adc
push
sbb
inc
ret
sub
into
ins
movlhps
adc
out
lea
std
(bad)
push
out
ret
hlt
out
pop
(bad)
cmc
pushf
test
out
pop
gs
(bad)
retf
(bad)
push
scas
dec
jne
jle
test
icebp
mov
xchg
popf
xchg
or
cwde
popf
lea
inc
repz
adc
jmp
add
sub
div
(bad)
(bad)
mov
je
neg
xor
in
xor
sub
pushf
stos
test
(bad)
call
sbb
xchg
or
mov
das
inc
in
cmp
jbe
pop
call
push
(bad)
(bad)
(bad)
aas
ins
faddp
or
sbb
xor
mov
fnstenv
push
dec
ret
(bad)
mov
xor
cmp
mov
cmps
popa
jle
stos
iret
int3
fs
adc
or
(bad)
(bad)
(bad)
push
jbe
nop
mov
dec
scas
imul
movs
movs
cdq
adc
mov
inc
pop
or
retf
add
xchg
inc
(bad)
(bad)
(bad)
inc
cwde
lock
fwait
repnz
data16
cld
inc
cli
aas
retf
mov
xor
out
jle
(bad)
(bad)
jmp
pop
push
cli
xchg
sub
cmp
lods
mov
xor
mov
fisub
rol
adc
imul
aad
test
cmp
cmc
stos
mov
loope
push
lds
jo
popf
adc
push
mov
sbb
jmp
pop
in
out
mov
or
iret
imul
mov
(bad)
(bad)
(bad)
(bad)
pop
dec
aam
lds
fcmovnu
jecxz
fnstsw
(bad)
push
gs
stos
shr
jmp
in
jns
popa
addr16
adc
pop
mov
cdq
jmp
push
hlt
loope
cmps
inc
or
rcr
and
nop
test
mov
mov
mov
mov
sar
iret
fstp
sub
jmp
push
out
ins
adc
cmp
inc
mov
stos
sbb
dec
xchg
shl
repz
clc
scas
(bad)
(bad)
(bad)
inc
iret
pop
sub
xor
es
mov
(bad)
icebp
nop
dec
mov
xor
pop
xor
xchg
inc
inc
sub
mov
fiadd
(bad)
(bad)
(bad)
(bad)
out
or
call
ins
(bad)
in
mov
xlat
sub
pop
mov
(bad)
(bad)
inc
sub
in
mov
sub
cmps
(bad)
imul
mov
cmp
pusha
nop
pop
sbb
dec
fwait
mov
mov
add
xlat
imul
(bad)
jmp
das
es
mov
and
and
mov
mov
in
jne
jecxz
(bad)
(bad)
push
mov
push
repz
xor
js
add
sbb
and
mov
xor
call
mov
mov
or
or
es
shl
hlt
pop
icebp
and
in
push
pop
aad
add
dec
sbb
(bad)
and
int
cmp
(bad)
mov
inc
dec
(bad)
(bad)
(bad)
call
inc
cmp
rcl
sbb
in
aas
ret
lahf
xor
mov
(bad)
mov
jo
ds
cli
(bad)
(bad)
(bad)
mov
inc
ins
mov
in
jg
mov
jge
cmp
outs
outs
movs
mov
cli
push
push
in
pusha
mov
dec
addr16
push
xchg
add
dec
jmp
pand
ja
cli
mov
inc
(bad)
(bad)
(bad)
fldcw
mov
jae
sahf
cmp
imul
cmc
sar
retf
fild
push
ja
imul
out
test
jge
stc
out
and
in
mov
mov
adc
inc
jle
lock
lock
(bad)
dec
retf
xor
pop
div
fcmovnu
std
cmp
push
fidiv
call
dec
sbb
in
sub
jno
test
fidiv
popa
(bad)
jg
(bad)
cmp
xlat
ror
ret
jp
aad
nop
arpl
sub
adc
popa
xor
pop
std
inc
cmp
xor
xlat
push
sbb
mov
adc
scas
leave
ins
sub
ss
cwde
fild
mov
sub
push
std
inc
and
dec
les
push
sti
ror
and
(bad)
(bad)
call
cdq
and
shl
jns
outs
dec
jg
jbe
nop
les
mov
shr
adc
loop
push
into
inc
dec
jmp
sbb
sbb
pop
mov
mov
add
xchg
inc
sbb
push
mov
and
sar
ins
ret
out
ins
movs
inc
inc
fs
add
(bad)
(bad)
dec
push
cmp
and
or
dec
pop
(bad)
fdivr
xchg
jecxz
clc
call
dec
pop
push
push
or
lea
mov
(bad)
fild
daa
dec
and
call
mov
jge
xor
mov
je
cdq
jl
mov
inc
sti
jnp
push
rcl
(bad)
(bad)
cmp
ja
and
rcl
cmp
(bad)
mov
repnz
or
cmovbe
(bad)
outs
push
outs
mov
cmp
fcomip
mov
mov
and
pop
addr16
push
loopne
nop
add
mov
cwde
pop
and
(bad)
call
lea
test
pop
sub
fdiv
fnstsw
adc
(bad)
sub
fisub
mov
ja
jecxz
dec
(bad)
and
fsubr
adc
call
jp
add
mov
dec
mov
call
pop
fsubr
movaps
mov
jl
(bad)
inc
int
fisubr
cli
sub
shr
inc
enter
int
inc
and
fadd
(bad)
mov
stc
sti
test
mov
cmp
(bad)
jmp
imul
inc
aam
add
movs
mov
xchg
mov
fsub
ret
pop
cmp
enter
mov
add
cmp
jmp
fnstenv
adc
push
aas
rcr
pushf
out
and
test
inc
and
sbb
add
call
mov
sbb
fnsave
pop
loopne
fs
xchg
dec
push
imul
(bad)
push
cmps
push
dec
push
popa
daa
sub
fadd
fmul
xor
add
in
loope
cs
(bad)
(bad)
inc
das
rcl
mov
inc
call
aas
nop
xchg
xchg
aad
cwde
jle
jae
push
retf
and
(bad)
(bad)
inc
lods
and
lock
jecxz
push
nop
jecxz
mov
mov
push
pop
push
jp
jmp
or
or
ret
sbb
mov
stos
loop
fld
(bad)
fist
mov
aaa
aad
out
xlat
mov
xchg
jp
lahf
and
clc
rcl
add
and
xlat
add
mov
jmp
call
imul
jmp
in
jbe
jbe
retf
fisttp
cmp
mov
push
mov
jo
loope
fiadd
icebp
push
adc
cmp
fdivrp
(bad)
(bad)
inc
xlat
push
cmps
repnz
add
fwait
iret
cmp
mov
xor
rcl
and
(bad)
jmp
mov
(bad)
sub
arpl
retf
inc
pop
xchg
(bad)
test
cmps
push
cmp
ja
(bad)
(bad)
call
out
push
jae
call
daa
adc
test
or
lods
(bad)
mov
inc
push
and
call
(bad)
jmp
jae
call
mov
jg
cld
(bad)
(bad)
cmp
adc
and
fstp
mov
stos
les
pop
mov
jbe
mov
mov
mov
pop
nop
lahf
jae
sbb
mov
inc
cmp
es
imul
je
movs
lahf
pop
icebp
popf
or
mov
ds
jbe
test
jmp
fcmovb
cmp
iret
mov
cmp
sub
adc
and
(bad)
(bad)
(bad)
call
mov
pop
mov
cmp
add
jo
pop
dec
das
(bad)
lahf
push
mov
sahf
adc
(bad)
call
test
or
mov
push
xor
adc
lock
iret
xchg
popf
inc
sahf
sti
dec
js
pop
(bad)
scas
fwait
dec
clc
(bad)
jmp
pop
pop
sar
fsub
push
push
sub
pop
push
(bad)
or
scas
pop
mov
stos
jl
add
mov
and
(bad)
dec
mov
push
mov
pop
jg
xor
jecxz
xor
(bad)
(bad)
mov
call
pop
jbe
pop
cwde
or
mov
scas
(bad)
fcomip
sbb
xchg
push
dec
pop
inc
xor
mov
sbb
sub
pusha
jmp
mov
cs
sar
inc
std
(bad)
inc
sbb
sub
inc
mov
fidivr
cmp
push
ja
les
push
jmp
sbb
sub
mov
dec
in
jp
call
sbb
(bad)
dec
sub
lea
idiv
dec
(bad)
mov
mov
cld
xchg
and
xor
push
imul
lahf
sub
cmp
std
(bad)
(bad)
(bad)
cmp
jb
arpl
sub
lds
cmp
jb
dec
(bad)
xchg
or
sbb
(bad)
call
mov
imul
mov
adc
stos
add
xchg
mov
mov
(bad)
push
xchg
out
and
idiv
out
cmps
shr
loope
(bad)
jg
rcr
xlat
retf
mov
jecxz
mov
mov
or
mov
fcmovb
xchg
outs
push
in
lods
dec
dec
lods
or
pop
sub
(bad)
(bad)
jg
dec
jmp
int
jae
push
icebp
lods
out
in
cwde
mov
lods
dec
cmp
cmp
addr16
inc
inc
test
dec
and
inc
mov
adc
cmps
jmp
(bad)
dec
sub
xor
xor
sbb
jmp
push
popa
hlt
push
(bad)
ds
adc
js
pop
loopne
pop
shl
test
adc
cmp
pop
cmc
(bad)
call
inc
cmp
scas
cs
mov
aas
push
pop
jne
loopne
(bad)
(bad)
(bad)
jnp
pop
pop
add
sar
test
pop
xor
shr
push
xor
(bad)
jecxz
fadd
push
xchg
cli
lods
mov
push
repnz
aas
pop
cli
or
inc
xor
dec
dec
and
xchg
push
mov
addr16
adc
in
or
jge
(bad)
hlt
push
mov
dec
fisub
call
(bad)
cmp
mov
in
mov
jae
loopne
sub
mov
cdq
(bad)
lods
mov
icebp
cmp
xchg
repz
and
mov
xchg
(bad)
fcomip
call
jmp
sahf
mov
fs
adc
and
xor
lods
imul
sbb
mov
mov
ds
push
sbb
fwait
mov
sub
xchg
jb
je
loop
and
(bad)
push
std
call
and
push
sub
icebp
pushf
adc
jmp
hlt
jg
dec
into
inc
jp
xchg
sbb
cmp
ja
(bad)
push
int
add
popf
sbb
jg
js
sub
push
mov
dec
imul
(bad)
(bad)
xchg
push
aaa
imul
aam
mov
aas
int3
add
outs
mov
mov
(bad)
in
inc
cld
hlt
add
inc
jnp
cmps
repz
mov
lock
lea
(bad)
sti
fild
popf
lods
arpl
mov
adc
ins
mov
(bad)
sti
es
jecxz
gs
stos
add
or
adc
cmc
(bad)
(bad)
mov
jmp
add
ss
loopne
pop
adc
jle
out
(bad)
(bad)
(bad)
fild
jle
sbb
and
inc
jg
or
mov
cwde
fist
mul
jbe
(bad)
(bad)
call
ins
dec
jle
pusha
out
aaa
sub
test
in
jmp
sub
mov
sub
outs
clc
and
ss
icebp
shl
jg
test
(bad)
call
daa
push
push
scas
add
push
cmps
stos
popf
rcl
call
sti
xchg
int3
cld
daa
mov
add
sti
mov
sub
out
hlt
fcomp
adc
(bad)
push
retf
cmp
arpl
dec
inc
clc
mov
pushf
lods
add
scas
clc
fild
cmp
jns
adc
pop
dec
mov
pop
xor
jo
jae
les
sti
leave
dec
loopne
ja
(bad)
imul
in
sub
(bad)
jne
pop
mov
das
movs
call
lds
loopne
out
std
sub
cmp
cmp
mov
sub
loop
and
xor
(bad)
(bad)
(bad)
(bad)
fidivr
push
and
adc
call
mov
(bad)
jo
jg
(bad)
push
xchg
ret
scas
je
inc
mov
mov
cmp
cmc
sbb
js
pushf
sbb
scas
mov
std
bound
fist
or
add
je
arpl
sti
sub
ja
les
je
fcomip
(bad)
(bad)
(bad)
adc
mov
fisub
add
xor
xchg
sbb
arpl
rol
in
adc
(bad)
call
sbb
add
mov
(bad)
cld
sbb
jp
cmp
(bad)
fisttp
enter
adc
sbb
(bad)
(bad)
fcomip
sbb
inc
xor
movs
ficom
jmp
and
call
push
addr16
lods
xchg
adc
(bad)
(bad)
dec
das
dec
retf
mov
add
ins
cmp
jmp
test
daa
ret
cwde
jmp
sar
fwait
icebp
data16
jne
ins
leave
mov
jmp
(bad)
sbb
(bad)
jg
sbb
mov
loope
pop
imul
(bad)
jmp
mov
fnstsw
sbb
stos
les
inc
int3
add
pop
lahf
dec
loop
push
jl
cmp
aas
cli
and
xor
xchg
inc
inc
cli
stos
or
xlat
xor
cmp
(bad)
(bad)
(bad)
push
sub
cld
ja
mov
int
pop
jns
aam
stos
pop
es
test
jl
repz
jmp
jp
movs
sahf
sbb
iret
and
fucom
mov
sar
(bad)
push
add
push
sahf
mov
cmps
cmp
call
inc
mov
es
adc
pop
jmp
outs
xlat
jbe
pop
push
xchg
(bad)
xlat
call
add
mov
cmp
fistp
jne
mov
imul
dec
add
stos
xchg
cmp
cmp
std
out
sub
fimul
iret
lock
cmp
fiadd
pop
out
test
(bad)
(bad)
(bad)
aas
dec
cmc
mov
push
mul
push
push
(bad)
les
test
jnp
(bad)
sti
jnp
jns
cmc
pop
pop
(bad)
(bad)
(bad)
push
dec
sti
or
(bad)
outs
dec
in
adc
out
imul
sti
cwde
scas
mov
cli
(bad)
fcomip
push
ss
jbe
jne
pop
dec
adc
(bad)
jmp
jl
imul
adc
addr16
shr
(bad)
cmps
push
clc
jbe
pcmpgtd
ror
xor
adc
lods
mov
(bad)
(bad)
call
aaa
call
in
sub
xor
into
dec
jnp
dec
sbb
xor
hlt
data16
int
stos
cmc
(bad)
(bad)
jmp
xor
pop
daa
inc
fidivr
xor
pop
pusha
push
jnp
in
loope
aam
sub
jmp
mov
test
out
fld
pop
shl
(bad)
(bad)
(bad)
dec
mov
dec
bound
(bad)
js
mov
jmp
adc
push
fwait
in
lds
in
das
cli
pop
push
push
mov
call
in
push
sbb
cmp
(bad)
(bad)
(bad)
cli
xchg
fucom
add
arpl
xchg
pop
fld
xchg
fsubp
jbe
loopne
call
or
fcomip
(bad)
push
loopne
xchg
mov
mov
push
dec
test
fld
clc
or
(bad)
sub
lock
mov
push
(bad)
(bad)
(bad)
call
mov
xor
inc
inc
cmp
icebp
leave
mov
adc
inc
xor
jg
inc
cld
inc
loope
in
arpl
push
xor
ja
sar
xor
jae
shr
lock
mov
(bad)
(bad)
push
cdq
ins
clc
pop
sub
arpl
leave
jl
xor
cmp
jns
out
movs
jne
xor
jmp
in
fldcw
mov
add
fisttp
cli
icebp
aad
jl
scas
pop
push
pop
dec
(bad)
jg
adc
daa
iret
loop
lods
out
cdq
enter
test
fild
out
jnp
or
lods
daa
push
out
mov
inc
cmp
lods
sbb
(bad)
jmp
outs
dec
aam
xor
fsub
xchg
push
xchg
mov
std
xchg
xchg
lods
mov
dec
hlt
adc
mov
add
test
sbb
push
scas
arpl
adc
mov
push
sti
mov
clc
enter
dec
sahf
push
and
mov
repz
mov
neg
out
xchg
addr16
cmp
(bad)
(bad)
in
jno
mov
clc
and
ret
dec
ret
sbb
cmp
jg
test
ror
loope
inc
out
in
(bad)
jmp
ret
add
retf
shl
pop
cmp
inc
shld
fdivr
(bad)
(bad)
jmp
scas
ror
loopne
cwde
jne
push
xor
or
pushw
mov
jg
(bad)
(bad)
inc
jge
out
pop
xchg
(bad)
adc
es
dec
mov
bound
adc
(bad)
push
sub
rcr
cmc
adc
inc
and
mov
retf
xchg
jb
mov
add
clc
(bad)
inc
scas
inc
ja
in
mov
xor
out
aad
out
test
or
(bad)
call
sbb
icebp
push
neg
jbe
lea
xchg
aad
adc
(bad)
mov
adc
push
add
xchg
das
fnstcw
jnp
je
cli
jle
repz
(bad)
(bad)
jg
mov
sub
push
or
pop
and
mov
(bad)
(bad)
(bad)
(bad)
push
test
stos
stc
scas
push
mov
and
popf
loop
mov
test
mov
sbb
push
aas
(bad)
jg
call
mov
aam
dec
mov
rol
add
jge
mov
(bad)
(bad)
fcomip
pop
ret
or
or
add
inc
ins
and
adc
pop
enter
cmp
adc
(bad)
(bad)
inc
lock
pop
inc
mov
enter
nop
jg
shl
mov
jg
lods
dec
sbb
imul
call
dec
mov
lods
sub
add
inc
inc
or
pusha
jg
cmp
mov
loop
imul
adc
das
sar
sub
sti
test
aam
inc
dec
(bad)
lock
test
push
retf
sbb
dec
sar
jbe
pop
sub
xor
push
std
(bad)
jmp
jge
jl
(bad)
pop
inc
clc
sbb
cmp
jmp
pop
lock
adc
push
icebp
ins
push
jecxz
xchg
pop
push
or
inc
stc
sbb
mov
(bad)
push
(bad)
mov
pushf
mov
cmp
push
dec
int
sbb
xor
out
jmp
cwde
and
jno
fsubr
call
ins
bound
imul
jl
mov
stos
sbb
out
cmc
js
sbb
icebp
(bad)
(bad)
push
mov
fist
add
les
je
jne
jle
adc
(bad)
call
and
adc
loop
ins
push
add
jb
ret
call
(bad)
sub
into
loopne
dec
jne
scas
jne
mov
add
sub
iret
mov
push
ret
pop
xlat
je
fpatan
icebp
fst
inc
xlat
adc
hlt
(bad)
jmp
das
sub
pop
dec
push
push
inc
imul
or
sbb
mov
(bad)
push
test
xor
pop
aaa
xchg
loopne
xor
fwait
push
xor
clc
(bad)
call
jae
xor
sub
xlat
pushf
iret
not
jae
(bad)
enter
dec
clc
add
jmp
mov
cmp
sbb
aaa
sbb
cmc
jo
jle
leave
push
jmp
jp
repnz
sub
jecxz
movs
pop
arpl
jg
shr
test
scas
mov
dec
dec
inc
or
cmp
sub
lea
(bad)
popa
in
mov
enter
adc
stos
movs
mov
fwait
(bad)
jo
adc
retf
push
pop
aam
leave
call
rcr
(bad)
(bad)
mov
mov
jno
ror
adc
xchg
loopne
pop
dec
sub
mov
xor
movs
ins
sbb
(bad)
(bad)
push
sahf
jns
xchg
jns
mov
pop
mov
inc
add
test
jmp
jmp
push
cli
shr
push
mov
jp
stc
adc
mov
push
push
(bad)
dec
in
pop
mov
stc
outs
add
aad
dec
stos
jg
mov
add
push
in
jge
push
adc
into
imul
gs
icebp
(bad)
dec
mov
xlat
and
sub
jbe
sub
stc
clc
pop
imul
sbb
jecxz
push
jns
rep
fcos
(bad)
(bad)
(bad)
in
mov
(bad)
cmps
out
xor
and
sub
xchg
loop
ror
pop
icebp
daa
aas
(bad)
(bad)
(bad)
dec
int3
stos
and
jae
call
outs
sub
xchg
stc
sbb
(bad)
(bad)
call
push
call
std
and
outs
pushf
cmp
mov
dec
xchg
push
aaa
jle
cmp
sbb
(bad)
(bad)
call
fisub
fstp
push
lods
rcr
jnp
mov
leave
push
dec
dec
out
(bad)
imul
mov
hlt
jae
cld
stos
push
jg
les
push
std
sbb
mov
cmps
sar
jg
sahf
mov
fnstcw
fstp
and
aad
leave
jbe
in
(bad)
dec
and
xchg
iret
jmp
mov
push
mov
sar
mov
je
mov
(bad)
(bad)
(bad)
(bad)
jmp
int3
call
jmp
icebp
xchg
outs
jbe
ds
ins
fild
mov
pushf
or
jmp
inc
jp
out
shl
test
ret
bound
fsub
cmc
jmp
xchg
mov
dec
int3
pop
sar
mov
pop
cld
call
in
sbb
aaa
mov
idiv
sbb
jbe
push
sub
jmp
clc
cs
push
mov
push
dec
cmps
sbb
mov
lods
sbb
xor
movs
xchg
cli
rcl
adc
cmc
inc
sub
push
ja
push
xor
outs
and
aaa
push
scas
pop
(bad)
sbb
cmps
mov
clc
cmp
jmp
ficom
in
sub
sbb
psraw
arpl
dec
cwde
lods
daa
inc
aam
jg
mov
pop
ins
es
mov
mov
lea
add
xchg
push
jne
pop
inc
out
jb
clc
dec
lock
(bad)
jmp
mov
pop
loopne
je
into
(bad)
(bad)
(bad)
dec
jl
or
bnd
dec
push
jbe
push
pop
inc
and
sbb
jge
lock
add
xchg
and
mov
push
sbb
sub
mov
sti
std
mov
jmp
movs
js
(bad)
call
pop
shl
pop
xchg
cmp
mov
hlt
(bad)
(bad)
(bad)
inc
add
add
rcr
add
mov
fldcw
dec
dec
cli
out
retf
cmp
aaa
pop
icebp
cmp
aam
sub
into
xor
mov
push
(bad)
mov
stos
push
xchg
adc
jmp
inc
cmp
ret
mov
(bad)
(bad)
(bad)
cmp
nop
cld
loope
rcl
pop
(bad)
mov
cmc
add
dec
jb
std
mov
(bad)
(bad)
(bad)
inc
in
sbb
xor
jg
mov
pusha
jb
jecxz
lea
lahf
and
(bad)
(bad)
(bad)
(bad)
std
popf
ss
div
mov
into
add
cs
or
adc
test
mov
jmp
mov
cmp
mov
push
ins
sbb
pop
add
xchg
stos
xchg
push
iret
pushf
shl
cmp
mov
mov
clc
jmp
clc
(bad)
out
out
push
inc
iret
inc
jnp
mov
les
dec
(bad)
jmp
add
dec
mov
pop
sub
jg
or
std
jg
xchg
pop
fincstp
and
fcom
or
adc
inc
lahf
inc
dec
loope
js
nop
or
mov
xchg
scas
repnz
mov
ret
xchg
sbb
pop
std
jae
pop
jb
ret
es
fcom
cmps
mov
call
and
sahf
cdq
cmp
mov
and
imul
and
fdivp
adc
loopne
enter
push
dec
pop
rcl
sbb
(bad)
call
icebp
(bad)
cmp
mov
test
jg
in
hlt
aam
or
addr16
into
dec
jecxz
call
repz
loopne
int
mov
inc
sub
(bad)
call
inc
mov
xor
clc
(bad)
xor
js
out
clc
push
adc
js
shl
(bad)
jmp
cmp
les
mov
retf
jne
xchg
sbb
fiadd
mov
inc
cmp
push
mov
or
(bad)
(bad)
mov
xor
jmp
push
mov
pop
mov
push
sbb
pop
sub
mov
(bad)
(bad)
dec
fldcw
sar
out
sub
adc
test
ret
adc
ret
jl
cmp
xchg
inc
fist
or
sub
clc
(bad)
(bad)
jmp
(bad)
mov
int
mov
mov
pop
fistp
mov
mov
ds
les
or
or
cmp
je
pushf
and
inc
push
xor
loopne
sbb
jb
xor
jmp
retf
popa
mov
sub
push
int3
sbb
aas
and
lea
outs
mov
jg
and
push
sar
(bad)
cs
inc
scas
xor
arpl
xchg
mov
(bad)
(bad)
fistp
sar
add
inc
mov
test
sbb
js
add
sub
pop
rol
aas
js
or
out
mov
dec
xor
or
pusha
pop
mov
sbb
jne
ret
mov
(bad)
(bad)
(bad)
(bad)
inc
hlt
pop
sar
test
mov
and
and
push
call
fild
(bad)
(bad)
push
mov
(bad)
out
mov
shl
arpl
or
jae
and
push
dec
cmp
jle
(bad)
jmp
adc
jl
add
push
push
rol
inc
push
loopne
mov
jmp
iret
fmul
add
(bad)
mov
(bad)
popf
in
dec
loop
(bad)
ja
pop
neg
out
sub
ss
push
push
xchg
or
scas
sub
sahf
and
fsubr
(bad)
(bad)
(bad)
inc
and
test
lods
cmp
add
ret
push
and
outs
ret
jle
(bad)
call
aad
fst
xor
fwait
out
enter
and
ins
(bad)
cmp
sub
jmp
lock
push
fistp
neg
sbb
jae
dec
mov
jmp
out
mov
cmp
test
(bad)
(bad)
nop
lods
movs
cmps
lds
stc
icebp
xchg
retf
push
lea
sub
test
lahf
adc
mov
(bad)
call
xor
sbb
test
xchg
fsub
mov
cmp
clc
jge
cli
(bad)
dec
mov
aaa
push
arpl
pushf
mov
fst
retf
scas
xchg
push
inc
push
(bad)
(bad)
call
push
dec
test
inc
xchg
adc
mov
aam
sbb
sub
adc
stos
cli
aas
push
fisub
das
jbe
shr
sbb
les
(bad)
jmp
mov
dec
out
mov
(bad)
cwde
and
mov
sbb
xchg
lds
(bad)
(bad)
(bad)
call
ds
sbb
cmc
dec
das
in
mov
cmp
jl
scas
dec
movs
xchg
sti
(bad)
adc
xchg
(bad)
(bad)
(bad)
call
push
dec
or
ret
add
ror
xor
into
adc
cmc
adc
sub
sbb
(bad)
call
mov
sub
push
(bad)
jecxz
add
dec
cli
(bad)
mov
and
add
leave
add
or
mov
pop
or
js
nop
adc
jp
lahf
movs
adc
or
enter
(bad)
(bad)
push
jmp
mov
aad
push
sbb
push
loop
(bad)
(bad)
(bad)
(bad)
jmp
jmp
xor
stc
mov
jb
adc
cmc
ja
(bad)
(bad)
(bad)
push
jge
mov
les
fisub
ins
push
sti
hlt
fist
push
add
mov
jmp
in
pop
enter
pop
sti
aam
push
lea
sbb
mov
mov
adc
push
mov
scas
jle
gs
or
or
mov
cmp
or
xor
js
enter
push
cld
(bad)
(bad)
mov
xor
ja
icebp
rcl
scas
inc
adc
or
(bad)
jmp
aaa
adc
xchg
mov
pop
and
popf
sub
fadd
loopne
(bad)
(bad)
jmp
out
leave
out
push
xor
mov
mov
mov
shl
test
dec
add
push
scas
xlat
push
fidivr
push
call
loope
mov
cwde
outs
pop
push
hlt
xor
adc
xchg
pop
cld
scas
dec
cmp
stc
add
(bad)
dec
inc
ss
shl
fisub
mov
jl
inc
jge
jo
cmps
(bad)
jmp
dec
cmp
push
xchg
pop
fyl2xp1
cmp
test
mov
scas
sub
repnz
mov
icebp
daa
cmp
adc
leave
cmp
jg
fadd
aaa
movs
cli
jo
mov
jl
imul
mov
sar
and
mov
xchg
ret
(bad)
mov
inc
into
dec
iret
fwait
jecxz
adc
lock
outs
idiv
jmp
test
dec
pop
movs
xchg
icebp
jp
ja
jbe
(bad)
(bad)
jg
idiv
jmp
cli
stos
or
out
inc
ins
jns
adc
xor
mov
dec
jmp
call
push
mov
and
aam
xlat
lea
add
(bad)
push
loop
shr
frstor
push
inc
repnz
xchg
pop
lock
xchg
push
lods
pop
push
xchg
rol
cmps
aam
test
jmp
rcl
(bad)
das
clc
(bad)
jmp
cmps
iret
inc
scas
(bad)
rcl
and
icebp
mov
sub
ja
fild
(bad)
mov
or
jns
out
dec
mov
mov
adc
bound
(bad)
(bad)
(bad)
jmp
retf
xlat
lahf
adc
mov
test
mov
mov
mov
mov
loope
out
ret
inc
cmp
(bad)
(bad)
(bad)
(bad)
cmp
mov
jo
ror
lods
aad
push
jmp
fadd
aad
(bad)
(bad)
inc
sar
popf
push
in
data16
push
aam
(bad)
data16
fld
rol
(bad)
in
or
mov
test
scas
jns
mov
fmul
cmp
lock
(bad)
(bad)
(bad)
dec
jbe
inc
jp
mov
in
inc
call
inc
mov
data16
sbb
(bad)
dec
dec
or
push
sbb
inc
inc
leave
mov
jecxz
retf
aad
sbb
mov
repz
push
ja
xchg
nop
inc
sar
hlt
pop
mov
xchg
pop
jnp
and
jle
ror
xlat
(bad)
xchg
call
mov
stos
xor
inc
cld
push
jg
int3
cld
adc
ret
loopne
xor
xchg
mov
fcom
scas
adc
cwde
push
sbb
cmps
sbb
push
nop
xchg
in
mov
xchg
sbb
push
and
(bad)
(bad)
cmp
iret
cld
(bad)
stos
aam
or
das
ins
xor
and
mov
dec
loope
loop
jmp
cmp
(bad)
mov
cmp
xor
out
and
aaa
pop
ret
pop
clc
(bad)
loope
and
out
(bad)
mov
fidiv
cli
mov
adc
cdq
pushf
jnp
(bad)
(bad)
dec
sub
sbb
in
lock
lahf
mov
jge
lock
mov
es
stos
outs
mov
sar
psubsb
test
xlat
xchg
mov
xlat
test
test
cli
or
dec
aas
dec
xor
jmp
iret
arpl
aaa
std
mov
movs
call
jnp
call
leave
std
push
(bad)
(bad)
inc
or
push
test
xor
pusha
sbb
ds
jge
(bad)
(bad)
(bad)
jg
fimul
xlat
pop
pop
sbb
inc
push
pop
cmc
push
ss
xor
repnz
ins
in
mov
mov
add
test
into
neg
mov
jmp
iret
aad
pavgw
push
jae
mov
call
pop
stc
(bad)
(bad)
(bad)
jmp
xor
mov
xchg
ja
or
sbb
mov
jg
(bad)
(bad)
dec
lock
ret
xor
(bad)
lods
jmp
in
or
ins
dec
mov
mov
jmp
in
mov
xchg
fstp
sub
dec
mov
(bad)
(bad)
jg
cmc
stos
sbb
into
in
test
push
xchg
call
loop
and
(bad)
push
sbb
mov
sbb
(bad)
mov
mov
(bad)
(bad)
push
(bad)
mov
push
and
xchg
test
mov
xor
xchg
or
jb
adc
inc
cld
(bad)
push
scas
and
dec
xchg
das
adc
pop
inc
sbb
aam
sahf
int
int
lea
inc
mov
mov
test
mov
es
xchg
std
(bad)
(bad)
(bad)
cmp
test
mov
pop
(bad)
mov
pop
push
out
sub
je
add
jge
lea
(bad)
push
or
or
push
push
cmc
jb
les
div
cmp
jg
add
push
sub
xchg
jmp
dec
loope
std
(bad)
(bad)
(bad)
jmp
daa
in
out
dec
pop
dec
or
int3
dec
jecxz
jle
mov
fnsave
ins
aad
sub
fsubr
ins
ins
(bad)
(bad)
(bad)
(bad)
cmp
sbb
mov
mov
push
xchg
sbb
pusha
cmp
add
daa
jge
lods
fwait
mov
dec
mov
dec
loop
mov
(bad)
(bad)
(bad)
push
test
xchg
ins
sub
fstp
js
(bad)
xchg
les
in
xor
aam
mov
jmp
mov
bound
cmp
bound
pop
(bad)
push
pop
pop
lahf
or
clc
test
mov
(bad)
(bad)
call
ins
or
push
(bad)
in
sub
lock
and
jge
ins
sbb
sbb
sub
jl
cwde
mov
mov
sbb
(bad)
clc
popa
adc
lock
fdivr
adc
inc
dec
push
mov
mov
push
movs
jo
aas
mov
jbe
mov
jp
jnp
pop
and
xadd
mov
(bad)
(bad)
jmp
inc
xchg
cwde
cmp
push
cmc
mov
mov
xchg
dec
(bad)
popa
fisttp
and
cld
jp
xchg
mov
push
test
fwait
loope
test
retf
pop
dec
adc
pusha
push
pushf
or
inc
pop
xor
pop
mov
(bad)
mov
mov
xchg
push
std
and
mov
jne
pop
cmp
jp
jmp
cmp
mov
adc
push
jns
mov
lahf
mov
mov
call
out
sub
xchg
fdiv
jg
sbb
pop
neg
ins
inc
xor
(bad)
call
shl
clc
sbb
scas
clc
dec
fstp
popa
out
imul
sti
jmp
call
cmp
retf
cmp
(bad)
(bad)
(bad)
mov
rol
pop
addr16
outs
outs
loope
fisttp
mov
mov
xor
(bad)
(bad)
(bad)
push
mov
dec
add
mov
cmp
cmp
out
mov
fs
sbb
jne
ret
xchg
dec
xchg
not
loopne
call
or
pop
jno
inc
and
clc
fcmovnbe
sbb
sub
inc
jmp
test
stos
js
add
dec
jmp
jle
sbb
lods
xchg
mov
outs
clc
(bad)
jmp
stos
jge
fld
dec
call
pop
add
mov
scas
das
sar
repz
cmp
ja
ss
xor
lds
sar
xor
dec
ret
clc
mov
mov
adc
push
pop
out
(bad)
inc
xchg
pop
or
sbb
mov
stos
mov
dec
push
clc
(bad)
fimul
pusha
mov
mov
call
xor
imul
dec
cmp
sbb
(bad)
jg
and
stc
and
mov
and
stc
call
dec
rol
xchg
cwde
mov
lods
pop
aas
cmp
sub
ss
push
xchg
mov
dec
in
pop
xchg
push
jmp
ss
(bad)
(bad)
jmp
pop
jg
repnz
sub
aad
inc
sti
and
push
movs
nop
fiadd
das
arpl
sub
(bad)
push
and
repnz
lock
scas
inc
and
lock
jbe
std
loopne
adc
dec
mov
outs
(bad)
mov
test
aam
push
rcr
movs
inc
push
std
(bad)
push
inc
out
(bad)
mov
cld
xor
push
std
test
adc
jmp
push
ror
out
pop
in
jns
fstp
xor
(bad)
(bad)
(bad)
mov
add
ret
push
arpl
adc
mov
lea
jmp
jmp
or
adc
xor
ret
mov
dec
xchg
inc
rcl
(bad)
cmp
hlt
jg
dec
add
xchg
dec
cld
std
cmps
fild
das
icebp
mov
add
(bad)
fist
mov
xor
fdivr
popf
iret
jae
neg
lods
jl
in
imul
dec
in
ins
mov
bound
outs
dec
fdivrp
(bad)
mov
dec
pop
scas
or
aam
stos
std
sbb
cmp
mov
(bad)
(bad)
call
sbb
sbb
(bad)
jae
sti
mul
std
mov
xlat
or
sbb
(bad)
jmp
xlat
(bad)
adc
sbb
aas
shr
push
inc
stos
out
es
jmp
or
test
repnz
xor
js
pop
scas
ds
iret
mov
aas
hlt
add
test
fisub
jmp
test
push
cmps
movs
mov
nop
cmp
xlat
ror
(bad)
push
mov
frstor
inc
cmp
inc
lea
mov
in
arpl
not
in
(bad)
(bad)
cmp
mov
xchg
aas
cli
ficom
out
sbb
adc
and
(bad)
(bad)
call
jmp
dec
mov
clc
rcl
icebp
adc
fldcw
daa
(bad)
xor
cwde
xchg
pop
call
jmp
mov
rcr
mov
pop
mov
jne
sub
ja
int
inc
js
lahf
pop
(bad)
(bad)
out
repnz
test
push
(bad)
(bad)
mov
out
jbe
adc
fisttp
jecxz
sub
pop
push
or
test
(bad)
(bad)
push
inc
popf
test
lds
fstp
or
cmc
test
add
sahf
push
push
fbld
mov
(bad)
pop
sub
cmp
pop
cmp
inc
cmc
rcl
push
push
aaa
and
inc
call
sahf
add
test
cmp
(bad)
add
add
icebp
push
or
inc
daa
mov
adc
or
(bad)
(bad)
(bad)
jmp
rdtsc
les
bound
and
or
jo
cdq
mov
std
js
cdq
inc
xor
(bad)
(bad)
(bad)
call
test
adc
iret
xor
sub
out
and
lods
jp
jb
ds
(bad)
(bad)
jmp
jmp
pop
dec
call
jl
mov
aad
pop
push
cmp
call
out
arpl
sbb
imul
mov
push
rcr
(bad)
call
or
cmp
jmp
mov
sti
xchg
pop
jne
add
gs
adc
jmp
sub
div
enter
data16
sub
or
(bad)
(bad)
jg
movs
pushf
cmp
std
(bad)
hlt
mov
add
add
sbb
jne
add
stos
sub
ins
rcl
push
jg
ins
outs
icebp
dec
jmp
shl
in
lods
cmovge
outs
popf
out
xchg
iret
jle
pop
pop
dec
xor
std
(bad)
aas
mov
dec
jb
sbb
fist
xlat
aaa
outs
and
fisubr
and
mov
retf
hlt
(bad)
(bad)
push
repnz
outs
add
fdivr
mov
out
nop
mov
inc
and
lds
push
cli
pop
retf
(bad)
(bad)
(bad)
jmp
rol
cmp
mov
push
sar
enter
cmp
std
jmp
movs
and
dec
ins
aaa
loop
jbe
pop
ins
add
jle
inc
or
push
sub
fcos
(bad)
(bad)
mov
into
sub
push
fild
jnp
mov
adc
arpl
fist
call
repnz
call
call
mov
and
mov
cld
aaa
test
nop
mov
or
sbb
clc
sub
push
cmc
jg
or
int
lock
inc
pop
or
xchg
mov
sbb
push
push
inc
clc
xor
xchg
popa
xlat
(bad)
call
sbb
shr
test
pop
inc
fwait
mov
fsubp
mov
mov
and
ret
mov
dec
bound
jno
(bad)
(bad)
(bad)
stc
repz
cmp
dec
stc
and
aam
ret
mov
bound
jo
push
inc
(bad)
(bad)
lock
popa
movs
rcl
adc
cld
and
adc
push
outs
imul
jg
ror
dec
inc
(bad)
pop
loopne
loope
xchg
pusha
mov
mov
repnz
repnz
lds
jo
test
arpl
imul
fild
call
gs
ja
jg
movs
jb
pop
int3
mov
(bad)
(bad)
(bad)
(bad)
jg
xchg
dec
stos
mov
fwait
outs
xor
push
xor
loop
xchg
les
leave
hlt
pop
and
jnp
(bad)
(bad)
call
jge
add
mov
out
scas
(bad)
lea
add
out
cmp
xor
mov
mov
cli
and
or
je
adc
jmp
sbb
lea
aas
inc
inc
test
mov
test
mov
in
xor
cld
and
mov
sahf
sub
popf
dec
cwde
push
dec
in
xlat
mov
(bad)
(bad)
push
sahf
loop
int
xor
repz
xchg
and
sub
fstp
lahf
(bad)
jmp
mov
inc
(bad)
jg
xor
dec
adc
ficomp
jmp
loopne
mov
jne
jge
add
pop
fwait
dec
test
(bad)
(bad)
inc
movs
cmps
sbb
mov
jecxz
jmp
movs
dec
sar
lds
pop
std
(bad)
jmp
ret
jmp
mov
sti
movs
ja
cmps
movs
ins
push
mov
cmp
cld
adc
popf
inc
neg
pushf
xchg
mov
(bad)
jmp
jno
jns
repz
jo
pop
and
test
or
jnp
cmp
add
sbb
(bad)
jp
ret
jmp
in
xchg
add
xchg
adc
daa
aad
bound
cmp
call
sbb
mov
cmp
hlt
mov
push
jmp
mov
jnp
cwde
movs
in
mov
cmp
inc
dec
dec
jg
push
mul
and
xor
std
jmp
imul
push
dec
jnp
fidivr
(bad)
cmp
dec
mov
cli
jg
push
jmp
cmp
mov
scas
ins
imul
out
js
test
sbb
hlt
and
sar
jl
(bad)
mov
hlt
mov
or
dec
and
mov
xchg
mov
sub
popa
xor
mov
xchg
jae
inc
js
les
or
sbb
xor
fidivr
inc
in
pusha
ss
fiadd
(bad)
xor
pusha
mov
add
pop
xchg
mov
mov
jbe
cmp
adc
ins
sar
(bad)
(bad)
(bad)
fdiv
adc
xchg
ret
add
pop
cmps
div
adc
mov
shl
push
cmp
repnz
(bad)
call
xchg
add
or
mov
sbb
xchg
pop
adc
(bad)
stos
jle
jmp
mov
arpl
mov
jns
pop
mov
push
iret
call
add
push
xchg
stos
shl
mov
(bad)
jmp
repz
imul
dec
cmc
pop
push
aaa
inc
(bad)
dec
cli
pop
(bad)
jne
iret
int
adc
fild
mov
mov
sbb
push
cwde
mov
pop
nop
inc
repz
mov
dec
inc
mov
sbb
cmp
jl
cli
in
cld
pushf
xchg
stos
xchg
imul
lods
xor
push
pop
and
sub
jg
mov
int3
loopne
jge
fs
icebp
jmp
outs
xor
add
fs
mov
xor
(bad)
dec
stc
mov
mov
std
pop
cmc
xchg
pop
std
mov
int
call
fisub
fild
mov
cmps
and
xor
cmps
xor
mov
jne
jge
maskmovq
ins
outs
pop
clc
out
mov
es
sbb
inc
aaa
sti
mov
in
retf
(bad)
(bad)
jmp
sbb
mov
jecxz
pop
cmps
mov
dec
pop
ret
iret
stos
xor
xchg
(bad)
push
mov
(bad)
jmp
sub
mov
push
ret
xchg
cmp
and
adc
push
(bad)
call
push
in
jecxz
stc
(bad)
popa
mov
xchg
adc
ins
stos
mov
out
retf
(bad)
(bad)
(bad)
call
stos
push
repz
dec
(bad)
ds
(bad)
xor
push
cmp
movs
mov
ins
in
frstor
xchg
push
dec
pop
sbb
(bad)
in
(bad)
xchg
xchg
lahf
les
inc
add
ret
pop
fdiv
push
inc
mov
(bad)
(bad)
dec
push
or
push
mov
xlat
sub
aad
push
pop
add
xchg
cs
gs
or
gs
sub
in
push
push
and
jae
and
or
push
xlat
fchs
in
inc
(bad)
dec
call
jg
rol
mov
inc
mov
inc
adc
(bad)
push
adc
fiadd
outs
dec
in
mov
or
arpl
(bad)
(bad)
(bad)
call
leave
sub
mov
mov
dec
int3
or
nop
mov
mov
out
(bad)
(bad)
jmp
sbb
and
das
cmp
repz
in
xor
(bad)
cmps
xchg
mov
sbb
add
pop
repnz
icebp
rcl
movs
clc
fisttp
std
push
call
aam
fldcw
pop
add
lock
mov
lea
retfw
inc
adc
call
ror
or
in
cmp
test
lods
jl
(bad)
(bad)
dec
mov
fisttp
(bad)
std
mov
cmp
movs
(bad)
(bad)
(bad)
(bad)
jmp
jmp
cmps
aad
xor
pop
xchg
inc
ficomp
or
xchg
and
sbb
cli
(bad)
jmp
xor
mov
jno
mov
dec
jo
arpl
cs
push
pop
outs
stc
cli
adc
leave
push
push
or
jmp
mov
loopne
xchg
push
cmps
cmps
(bad)
(bad)
(bad)
call
push
test
jmp
cmp
outs
sbb
(bad)
mov
mov
push
out
std
or
xchg
test
jl
fdiv
mov
sar
push
in
int3
jns
adc
cld
or
add
clc
loope
inc
mov
mov
and
and
(bad)
lock
(bad)
(bad)
out
(bad)
fsubr
pop
fwait
retf
(bad)
mov
jo
rol
mov
xchg
hlt
xor
dec
cmp
shr
cwde
aam
pushf
push
jg
and
inc
fdivr
push
push
adc
jbe
or
cmp
nop
sbb
stc
cs
loope
mov
inc
loope
inc
cwde
fist
mov
cwde
clc
jmp
adc
arpl
push
in
mov
add
inc
cmp
pop
pop
jecxz
cwde
repnz
(bad)
jbe
jne
inc
out
pop
jbe
pop
sbb
inc
dec
rol
stos
fild
sbb
sub
(bad)
fild
and
fmul
pop
xchg
mov
sti
out
push
addps
(bad)
(bad)
cmp
fiadd
call
loopne
in
mov
les
(bad)
(bad)
jmp
outs
or
addr16
sub
mov
scas
addr16
fcomp
iret
mov
adc
cli
ins
jo
mov
cmp
sbb
ins
outs
sti
pushf
addr16
pop
inc
fadd
pop
lahf
mov
lods
pop
aas
daa
iret
xchg
jno
dec
outs
mov
clc
call
clc
sbb
cmp
add
mov
pop
dec
xor
lea
std
hlt
xchg
dec
sar
(bad)
jg
mov
mov
push
mov
cmp
fstp
and
mov
mov
push
add
std
or
pop
or
xor
inc
adc
mov
repz
fisttp
popa
in
adc
rcr
cmp
mov
sahf
ins
out
ds
mov
(bad)
jg
(bad)
(bad)
(bad)
(bad)
out
sti
xor
stc
and
pop
mov
cwde
(bad)
repnz
sbb
repnz
(bad)
(bad)
(bad)
jge
pop
add
jecxz
pushf
out
push
mul
jbe
lods
cmp
das
clc
ja
sbb
dec
aad
lock
in
int3
out
and
pop
lock
lock
(bad)
(bad)
call
jno
ins
jg
ds
daa
rcl
lahf
dec
jge
mov
pop
mov
mov
cli
or
(bad)
jg
call
push
xchg
mov
jecxz
es
pushf
jp
in
(bad)
mov
mov
jle
rcr
jae
xchg
pop
cmc
sbb
push
xor
pop
(bad)
(bad)
(bad)
out
jle
xchg
imul
jne
in
mov
sbb
mov
(bad)
sub
and
call
rcr
xor
enter
inc
jo
rcl
add
(bad)
push
push
ds
call
bound
daa
add
loopne
add
mov
push
pop
pop
test
idiv
(bad)
call
sub
ror
xchg
std
push
nop
addr16
aam
add
js
add
jno
out
cwde
(bad)
(bad)
(bad)
push
lods
pop
fisubr
sahf
sbb
je
sbb
jne
dec
in
mov
repnz
fbld
(bad)
(bad)
inc
push
mov
bound
mov
pop
jne
daa
sbb
sbb
jmp
and
pop
mov
mov
or
repz
cmps
loop
test
(bad)
mov
push
scas
mov
pop
pusha
scas
es
minps
sbb
(bad)
push
mov
jl
in
test
inc
cli
dec
popa
rcl
addr16
test
rcr
test
xlat
sub
sub
adc
into
cmps
aam
mov
dec
fsubr
sar
(bad)
(bad)
(bad)
inc
fwait
xor
add
push
jl
repnz
arpl
xchg
nop
outs
cmps
mov
dec
fcmovne
cmp
mov
call
sbb
xchg
mov
push
movs
mov
lods
fld
in
mov
jecxz
inc
clc
(bad)
jmp
dec
shl
neg
test
jl
sti
push
popf
mov
mov
fidiv
jo
div
fst
(bad)
popf
imul
(bad)
(bad)
fldenv
push
retf
rcl
ss
and
cmps
mov
test
int3
jbe
xchg
cwde
shr
nop
scas
data16
leave
adc
(bad)
xchg
adc
in
push
adc
pop
cmp
jg
addr16
(bad)
push
cld
in
cwde
fidivr
xlat
cs
push
cld
cli
mov
and
(bad)
cmp
(bad)
(bad)
call
push
sbb
sub
and
lds
lahf
dec
aad
mov
repz
repz
and
mov
call
shl
push
xchg
cmc
rcl
sub
pop
pop
mov
fmul
sbb
nop
xor
xor
dec
sbb
dec
or
xchg
push
cmp
(bad)
(bad)
jmp
jae
jl
fcomip
push
push
out
loope
adc
push
push
adc
(bad)
(bad)
(bad)
dec
sub
ret
dec
cmp
jmp
or
je
adc
inc
scas
mov
stos
(bad)
call
icebp
addr16
test
jno
dec
imul
mov
mov
and
scas
mov
jmp
adc
mov
(bad)
jl
out
mov
push
mov
mov
(bad)
out
clc
aaa
add
addr16
out
ja
jge
or
sub
not
clc
clc
rol
(bad)
jmp
cli
(bad)
mov
lahf
test
js
mov
sbb
jge
add
add
adc
mov
or
sbb
lds
scas
es
(bad)
repnz
sti
lods
mov
push
call
inc
rep
jb
push
(bad)
dec
add
mov
ins
ds
cld
inc
ds
jl
and
(bad)
(bad)
(bad)
jmp
outs
jecxz
out
(bad)
retf
xchg
pop
je
mov
push
mov
ins
cli
dec
bound
jge
call
stos
mov
cmp
dec
out
(bad)
jnp
fstp
pushf
pop
and
(bad)
(bad)
dec
push
cld
inc
sbb
enter
stc
xchg
fld
nop
adc
(bad)
mov
and
jg
jmp
loopne
push
mov
cmp
enter
inc
lahf
(bad)
pusha
cmc
jmp
sub
jbe
(bad)
ds
jl
jno
cmp
retf
rol
pop
mov
into
(bad)
(bad)
(bad)
(bad)
cmp
and
adc
out
out
outs
mov
fbstp
scas
and
jmp
pop
into
lods
shr
pop
jle
call
mov
mov
out
mov
jo
pop
loopne
and
aad
xchg
pop
inc
xor
pusha
iret
mov
xchg
push
sub
(bad)
push
sti
sbb
hlt
popa
or
movs
push
addr16
aaa
into
cmp
repnz
(bad)
(bad)
mov
pusha
scas
and
aad
push
cld
shl
mov
rol
(bad)
pop
add
jg
call
cmp
sbb
mov
sbb
(bad)
or
add
(bad)
call
adc
enter
xchg
pop
ret
enter
jmp
(bad)
push
mov
xchg
push
es
adc
mov
ficomp
add
fwait
mov
or
lock
inc
(bad)
mov
dec
xor
aas
call
mov
(bad)
(bad)
inc
scas
pop
cmp
pop
dec
(bad)
imul
or
ret
out
pop
std
xchg
jmp
inc
mov
in
sub
(bad)
(bad)
(bad)
jmp
xor
cmps
gs
retf
out
into
fistp
pop
in
push
aas
xor
sbb
(bad)
(bad)
(bad)
fld
cdq
push
cmp
push
(bad)
xchg
mov
rol
xor
(bad)
sti
aam
push
mov
jmp
iret
(bad)
clc
inc
sub
iret
pop
sub
fdiv
hlt
inc
pop
dec
out
enter
push
(bad)
(bad)
(bad)
(bad)
ds
(bad)
lahf
leave
inc
pop
sbb
stos
sti
or
(bad)
sub
pmaddwd
je
cli
jmp
pop
mov
push
pop
inc
jp
popf
repnz
(bad)
(bad)
inc
sub
(bad)
inc
add
xor
adc
cmps
loope
sti
inc
xchg
cmp
mov
push
es
mov
xchg
(bad)
cli
mov
sbb
pop
inc
ret
outs
xchg
out
sub
(bad)
inc
ja
shl
inc
(bad)
xchg
mov
mov
mov
(bad)
mov
outs
clc
dec
cmps
sbb
and
cli
mov
cmp
repnz
push
ret
icebp
(bad)
push
mov
push
lock
sub
jle
mov
cld
lds
inc
das
cmps
shl
add
call
xchg
(bad)
imul
hlt
clc
(bad)
inc
bound
mov
mov
mov
loop
in
cdq
ret
pop
xor
popa
and
mov
pop
lods
push
fdiv
idiv
call
enter
ret
mov
mov
sub
cwde
rcl
out
cli
(bad)
(bad)
push
sti
out
push
ins
xchg
repnz
in
aad
into
sti
lods
adc
jge
cmp
jmp
imul
(bad)
(bad)
(bad)
mov
rcr
ss
xlat
aad
or
outs
sbb
lahf
stos
imul
ja
jmp
xor
sbb
test
jns
cmp
(bad)
(bad)
pop
push
outs
xor
call
std
sbb
inc
inc
ds
xchg
mov
(bad)
out
cli
jbe
mov
call
aas
cmc
add
xchg
dec
xchg
add
cmps
out
jns
div
call
lea
ficom
scas
ret
mov
(bad)
inc
pop
pop
stos
int
add
cmc
pop
std
fstp
push
int3
hlt
pop
push
inc
fmul
sar
cmps
sub
iret
cmp
mov
sub
xor
retf
jbe
sar
pop
cmp
call
sar
sbb
out
xchg
jp
imul
jg
(bad)
hlt
cmp
add
cmp
fiadd
je
dec
jge
xor
pop
adc
into
(bad)
mov
mov
stos
add
rcl
pop
sbb
aaa
mov
xchg
mov
xor
xchg
dec
(bad)
jl
jns
sub
and
add
pushf
movs
xor
or
sub
ret
(bad)
jmp
sar
mov
xchg
out
lock
mov
test
mov
not
xchg
lea
(bad)
nop
xchg
lods
cmps
pop
retf
inc
es
push
add
out
and
mov
fdiv
(bad)
(bad)
mov
xchg
pop
imul
(bad)
adc
pop
jg
pop
cmp
repnz
(bad)
push
dec
ret
or
jo
add
cmp
ss
or
jmp
jne
test
add
mov
aad
repz
adc
push
and
jge
mov
xor
mov
mov
xor
pop
cld
pop
enter
jnp
push
pop
dec
jle
or
cmp
or
movs
push
(bad)
(bad)
fcomip
xchg
pop
xchg
ret
fstp
and
inc
test
or
aaa
sbb
outs
ja
(bad)
(bad)
(bad)
js
mov
and
mov
and
lahf
pop
(bad)
inc
call
scas
mov
jnp
int3
or
movs
jge
mov
adc
repz
std
cmp
out
xor
out
clc
(bad)
jmp
mov
scas
xchg
xor
push
js
sbb
mov
add
fwait
movs
(bad)
mov
pop
jb
daa
adc
hlt
movs
retf
in
(bad)
push
adc
cmp
dec
pop
(bad)
(bad)
inc
pop
push
cmp
ins
push
adc
out
cmp
(bad)
(bad)
(bad)
jmp
mov
dec
inc
ja
sbb
add
imul
movs
sub
ret
shl
and
xchg
hlt
mov
rcl
enter
xchg
loop
inc
cmp
inc
pop
inc
xor
sub
inc
bound
and
(bad)
(bad)
inc
xchg
fucomip
dec
loop
leave
sub
xor
xor
xchg
outs
shr
iret
mov
retf
(bad)
(bad)
jmp
xor
cs
adc
sbb
adc
call
(bad)
(bad)
(bad)
jmp
sbb
(bad)
sbb
ror
inc
ins
mov
arpl
mov
mov
(bad)
(bad)
inc
jge
inc
call
popa
fidivr
aas
mov
test
ret
mov
xchg
out
cmp
repz
push
mov
stos
mov
(bad)
(bad)
mov
xchg
adc
xor
into
aas
enter
inc
movs
lea
sbb
push
dec
cld
(bad)
push
scas
cld
movs
jge
jno
adc
inc
cmp
imul
(bad)
(bad)
jg
sub
movs
push
retf
sbb
mov
imul
leave
jmp
sbb
(bad)
(bad)
call
in
and
cli
push
cmp
xor
mov
daa
jmp
and
mov
(bad)
fs
push
add
mov
or
(bad)
(bad)
(bad)
jmp
(bad)
fadd
mov
xchg
fcom
les
addr16
in
mov
clc
(bad)
push
sbb
bound
(bad)
pusha
mov
sbb
adc
call
and
int3
mov
test
sti
dec
dec
inc
cmp
jnp
test
jecxz
jne
cmp
dec
(bad)
cmc
mov
ins
fild
imul
dec
outs
adc
outs
dec
imul
pop
std
mov
mov
aad
fwait
and
mov
sub
jmp
loope
movs
pop
sbb
mov
into
push
or
out
leavew
sub
inc
push
jmp
cmp
out
ds
xchg
xor
dec
xchg
xor
aaa
cmps
lock
popa
out
cld
imul
xor
dec
or
addr16
mov
sti
sub
scas
xchg
mov
popa
sub
mov
test
mov
enter
test
pop
dec
jae
xor
(bad)
jmp
pop
rcl
ficomp
sub
mov
pushf
cmc
cmp
(bad)
(bad)
(bad)
fld
jnp
sbb
cmps
arpl
dec
push
iret
call
hlt
mov
(bad)
jmp
mov
in
push
(bad)
pop
mov
sub
dec
add
inc
leave
popa
add
mov
jmp
daa
das
jmp
(bad)
fwait
ror
ror
fs
icebp
xlat
lods
dec
repz
call
imul
clc
or
sbb
xchg
sbb
fsub
pop
test
ret
(bad)
inc
cld
pusha
les
fdiv
push
mov
xor
(bad)
mov
(bad)
push
cmp
pusha
sbb
cmc
adc
aam
sti
(bad)
push
and
dec
into
stos
adc
jae
out
movs
iret
sub
push
jle
push
outs
add
add
add
xchg
or
ret
adc
xor
js
sbb
jmp
(bad)
mov
and
call
adc
hlt
(bad)
daa
cli
adc
cld
call
outs
outs
out
popf
lods
outs
push
loop
loop
mov
sti
aam
jae
es
scas
hlt
jns
lods
xor
mov
or
aaa
std
(bad)
jmp
xchg
add
mov
mov
xchg
stos
stos
sahf
dec
in
cmp
enter
dec
pop
xor
jmp
xrelease
xchg
jne
jns
das
or
mov
(bad)
fld
(bad)
push
jns
xor
jns
lahf
(bad)
or
sub
jb
sub
mov
dec
cmp
rol
dec
mov
retf
in
xchg
pop
in
pushf
mov
or
(bad)
jne
mov
add
mov
outs
ret
inc
imul
fistp
or
(bad)
(bad)
inc
sub
dec
hlt
push
shl
and
stc
cld
xor
sub
lods
sbb
inc
(bad)
dec
jae
popf
sbb
bound
mov
out
aam
test
sahf
sbb
(bad)
(bad)
(bad)
dec
mov
lock
xchg
movs
lock
mov
inc
jnp
pop
mov
fcmovu
addr16
jecxz
mov
(bad)
lods
pop
jle
(bad)
jmp
pop
cs
popa
outs
sbb
neg
lods
cmp
sti
cdq
in
(bad)
(bad)
dec
xchg
mov
and
sti
mov
lock
inc
push
and
ffreep
fcomip
jmp
in
pop
loopne
pop
daa
dec
dec
mov
aad
xchg
xor
(bad)
(bad)
jg
sbb
add
test
jae
cmp
inc
retf
jge
xor
idiv
int3
pop
cmp
repnz
(bad)
(bad)
(bad)
out
dec
mul
xor
imul
ret
xlat
sbb
cmps
retf
icebp
jl
(bad)
in
icebp
mov
(bad)
(bad)
dec
hlt
es
dec
aas
(bad)
mov
popf
push
lods
xchg
sbb
mov
hlt
shl
push
(bad)
(bad)
jg
mov
rcr
sti
xchg
adc
retf
jae
pop
inc
(bad)
(bad)
mov
loopne
mov
push
(bad)
cmp
jp
and
gs
or
(bad)
call
jae
gs
xchg
iret
dec
pusha
mov
out
mov
aaa
inc
mov
iret
mov
jecxz
xchg
test
dec
scas
inc
sub
(bad)
(bad)
(bad)
cmp
cmp
pop
jae
push
push
cs
pop
mov
sub
call
(bad)
(bad)
(bad)
sti
dec
sub
adc
sbb
fdivr
scas
push
jl
mov
sbb
aad
inc
arpl
xchg
xor
cld
(bad)
(bad)
jmp
and
neg
adc
pop
je
lock
adc
pop
cmp
push
dec
and
add
jl
push
and
sbb
shl
and
adc
call
sub
sar
ret
push
cmp
mov
adc
jge
sub
adc
jge
dec
movs
and
(bad)
(bad)
(bad)
aas
xchg
in
jle
dec
sub
fisttp
jmp
(bad)
pop
inc
call
pop
dec
retf
jmp
fist
gs
cld
xor
aas
call
mov
mov
inc
push
push
pop
sbb
cld
mov
sub
sbb
sbb
imul
(bad)
dec
jo
popa
pop
and
sub
fcom
dec
fcom
gs
retf
sar
(bad)
push
mov
mov
push
fisttp
mov
outs
(bad)
xchg
ins
xor
call
lods
jge
push
popa
cmp
movs
jmp
jbe
int3
jg
pop
icebp
icebp
leave
xor
mov
cmp
jae
(bad)
jg
dec
push
xchg
jb
add
enter
push
add
stos
ins
test
pop
or
call
imul
fiadd
push
fs
(bad)
(bad)
jmp
mov
jmp
xor
and
sbb
mov
cmp
and
mov
aaa
adc
mov
cli
cli
call
mov
sar
(bad)
dec
sbb
dec
mov
push
sub
cdq
mov
clc
pushf
lock
push
xchg
ins
cld
jbe
lea
or
cmps
call
add
retf
(bad)
lahf
xlat
xor
cli
scas
ret
je
daa
imul
(bad)
rcr
stos
sub
mov
jmp
xchg
repz
in
or
imul
(bad)
dec
idiv
jnp
add
push
mov
xor
aad
pop
pop
and
(bad)
(bad)
jmp
nop
fwait
sub
xchg
fs
cmp
call
shl
loop
and
dec
(bad)
jg
push
aam
cwde
std
push
adc
mov
ds
jle
cmp
mov
(bad)
(bad)
(bad)
inc
pop
stos
enter
pushf
push
aam
push
mov
xchg
clc
jecxz
out
push
(bad)
in
in
or
xor
(bad)
mov
sbb
lods
test
les
sbb
jge
mul
(bad)
(bad)
(bad)
dec
ja
retf
ins
test
jle
cli
out
fiadd
fild
jl
pop
xchg
jge
dec
call
(bad)
(bad)
mov
es
scas
jmp
loope
dec
clc
fdivr
enter
dec
loope
call
jmp
and
jge
imul
mov
push
pop
(bad)
add
repnz
mov
gs
cmps
mov
jg
jmp
sbb
bound
(bad)
imul
lahf
fcmovnb
daa
aas
(bad)
movs
jge
ror
dec
(bad)
jo
push
es
aaa
adc
inc
jg
dec
out
stc
(bad)
(bad)
call
(bad)
sbb
sub
pop
enter
jecxz
mov
push
jmp
out
add
(bad)
(bad)
(bad)
inc
jns
idiv
sub
dec
and
ret
mov
lods
dec
pop
inc
mov
(bad)
(bad)
jmp
cmp
pop
out
data16
fcmove
jge
or
xor
and
add
outs
and
lods
bound
pop
and
add
xor
jne
mov
pop
cmp
prefetch
sbb
sub
cmps
retf
mov
mov
sub
sbb
jl
(bad)
(bad)
(bad)
fist
mov
rol
(bad)
das
mov
scas
xor
sbb
(bad)
dec
push
pop
xchg
fbld
and
idiv
xor
cmps
shl
jbe
push
pop
aam
sar
(bad)
jg
or
call
lahf
adc
(bad)
mov
loop
adc
dec
xchg
sub
addr16
sub
inc
xor
scas
cli
inc
dec
pop
add
mov
mov
sahf
mov
and
je
call
push
(bad)
in
lahf
inc
ins
mov
(bad)
fst
add
mov
mov
mov
sbb
or
aas
mov
mov
in
sti
not
pushf
aad
shl
ins
xchg
mov
mov
ja
fdivr
push
jmp
call
call
mov
cwde
arpl
pop
cmp
addr16
(bad)
fwait
jne
lea
inc
mov
shr
jge
fild
arpl
sub
push
jp
mov
test
or
mov
dec
sbb
(bad)
jg
mov
cmp
mov
xchg
jg
add
pop
es
(bad)
mov
cmp
test
cli
and
adc
es
push
inc
mov
in
mov
dec
inc
(bad)
call
lea
inc
dec
fld
ret
(bad)
(bad)
(bad)
(bad)
(bad)
jle
enter
and
dec
fisttp
rcl
int3
mov
mov
lea
or
mov
(bad)
jp
test
data16
fsubr
shr
mov
sbb
or
nop
pop
mov
lock
cmp
jmp
ja
inc
mov
es
aas
(bad)
pop
outs
fild
pop
rcr
(bad)
(bad)
(bad)
in
aas
fadd
sub
in
jnp
xor
sub
js
scas
test
inc
pop
add
sbb
mov
fmul
mov
(bad)
(bad)
jmp
and
mov
xchg
aad
repnz
mov
aas
xchg
push
or
inc
mov
xor
(bad)
(bad)
push
cmp
add
nop
or
sbb
dec
out
out
pushf
cmp
lahf
idiv
icebp
jmp
(bad)
call
into
cmp
mov
mov
inc
popa
scas
cdq
cmp
cdq
xchg
inc
mov
scas
(bad)
cmp
jge
add
or
fsub
shl
lods
mov
(bad)
mov
outs
dec
xor
adc
adc
mov
hlt
sbb
inc
sbb
mov
push
(bad)
jmp
je
dec
add
repnz
out
mov
fild
jg
jle
xchg
clc
(bad)
(bad)
inc
(bad)
lock
stos
arpl
data16
fist
push
fiadd
(bad)
mov
ret
pop
jnp
mov
inc
int3
push
or
(bad)
mov
iret
add
cmc
jmp
movs
sbb
(bad)
jns
push
and
cli
arpl
retf
(bad)
fcomip
mov
xchg
xchg
and
(bad)
ja
repnz
lock
mov
test
sbb
(bad)
pop
lods
fst
ret
ins
cld
movs
call
fwait
shl
jne
cmp
add
xchg
jmp
loope
xlat
mov
into
lock
lods
mov
(bad)
fidiv
or
out
frstor
rol
mov
jae
push
mov
(bad)
jmp
inc
std
loop
rcr
sub
jl
stc
imul
mov
(bad)
dec
xor
inc
enter
addr16
jne
xchg
inc
mov
xor
fisub
cwde
adc
stos
cmp
neg
mov
sbb
test
mov
cli
call
adc
loopne
adc
(bad)
(bad)
dec
adc
aas
mov
scas
js
pop
(bad)
gs
out
adc
in
lods
and
push
loopne
lds
and
gs
ins
les
out
cmp
ds
xor
mov
xchg
pop
xor
std
outs
test
or
dec
xchg
jmp
jbe
movs
xor
sub
ja
test
and
sbb
(bad)
(bad)
mov
aas
repz
xor
int3
mov
adc
inc
jns
nop
xchg
(bad)
nop
js
sub
in
xor
pop
pop
push
sbb
(bad)
dec
jge
clc
retf
or
js
sub
loopne
add
push
movlhps
xor
repnz
push
mov
test
inc
mov
loopne
pop
sub
inc
push
call
xor
pop
push
(bad)
(bad)
(bad)
dec
outs
or
sahf
nop
sub
push
into
xchg
push
mov
inc
and
and
jno
inc
fcmovbe
cmp
(bad)
in
(bad)
(bad)
(bad)
jmp
jl
pop
xor
aad
pop
cdq
ds
pop
ret
jmp
lods
cs
out
push
mov
cmps
mov
(bad)
(bad)
(bad)
call
(bad)
cmp
dec
sbb
fild
out
(bad)
mov
pop
repz
cvttps2pi
fdiv
xchg
ins
xchg
scas
dec
fcomp
mov
ja
rcr
pop
ja
popf
sar
mov
repz
(bad)
mov
(bad)
dec
ret
pop
cmp
in
ja
sahf
inc
push
sbb
fst
jmp
scas
neg
pop
jge
lods
js
inc
sub
icebp
(bad)
(bad)
(bad)
inc
add
call
test
outs
xchg
mov
rcr
sub
jmp
sub
or
jmp
sbb
or
fbld
movhps
inc
add
or
adc
(bad)
dec
ret
xchg
dec
fisttp
icebp
add
ss
pop
popa
pop
repnz
or
sbb
pop
psadbw
icebp
hlt
ret
jmp
rol
sbb
cmc
int
sbb
std
(bad)
call
loope
pusha
dec
push
shr
push
das
and
fsub
retf
ins
std
(bad)
inc
xchg
cmps
adc
fcomp
dec
ins
sbb
sbb
xor
fldcw
and
movs
sbb
sub
mov
in
inc
mov
cld
(bad)
(bad)
cmp
mov
mov
and
inc
xchg
xchg
stc
jb
call
test
popf
clc
pop
cmps
push
hlt
add
xor
cmps
neg
mov
sub
cdq
pop
adc
jp
jbe
add
in
inc
in
movs
(bad)
jmp
into
xor
hlt
jne
jmp
or
push
mov
outs
push
push
lea
pop
sbb
pop
dec
add
scas
push
xchg
mov
or
js
mov
mov
loop
loop
daa
mov
mov
lock
mov
(bad)
dec
add
rol
or
xor
in
(bad)
inc
ds
xchg
retf
mov
mov
lahf
mov
jg
sbb
inc
xor
sub
inc
cmc
fwait
xor
scas
es
cs
jecxz
loop
push
aaa
adc
fcom
sbb
cmc
cmp
out
iret
aaa
or
cmp
cwde
xlat
nop
aas
push
scas
sbb
ds
(bad)
(bad)
jg
(bad)
aas
cmp
xor
hlt
in
out
push
lock
mov
push
rol
mov
jb
jg
sub
sbb
mov
(bad)
(bad)
(bad)
dec
mov
pop
xor
push
sub
loope
xor
sbb
sub
push
cmp
push
inc
mov
call
inc
push
ins
sub
sub
add
mov
call
test
jmp
add
shl
mov
xor
fistp
out
in
adc
(bad)
cmp
sti
lahf
dec
pop
jg
lahf
cmc
popf
pop
jae
ins
int
or
les
imul
je
add
xor
shl
(bad)
lock
ror
(bad)
(bad)
fcomip
retf
or
or
into
leave
jge
push
ret
adc
jno
pop
(bad)
(bad)
out
clc
in
out
shl
and
fs
jp
sbb
pop
lods
jge
lock
jmp
rol
inc
add
and
or
repnz
(bad)
(bad)
push
lds
les
add
xchg
in
mov
in
int
scas
pcmpgtb
xor
rcr
adc
inc
ja
loopne
inc
aaa
clc
rcl
adc
dec
(bad)
and
mov
call
imul
xchg
je
sti
bound
sub
push
call
(bad)
dec
test
lahf
(bad)
icebp
retf
push
add
(bad)
(bad)
dec
push
sbb
pop
std
rol
xor
rcr
shl
fs
retf
cmps
jmp
mov
push
dec
sar
sbb
pop
mov
shl
rcr
jmp
cmp
repnz
test
pop
test
ffreep
sbb
or
cmp
mov
xchg
div
xchg
sar
(bad)
(bad)
inc
xchg
popa
mov
push
dec
popf
arpl
sahf
mov
push
cmps
jno
inc
shl
mov
imul
in
jg
mov
lods
jae
hlt
add
nop
push
fdiv
pop
rcl
call
dec
cli
sub
adc
fmul
iret
sti
mov
sub
(bad)
inc
data16
jno
les
pop
rcr
mov
mov
lods
mov
shr
cmp
je
push
lock
inc
sub
mov
movs
xor
movs
jmp
jno
outs
and
add
xchg
es
sbb
pop
dec
add
call
jmp
jbe
mov
inc
out
add
xchg
mov
int
or
jmp
adc
(bad)
dec
into
sahf
outs
and
pop
dec
adc
sub
push
push
mov
pusha
xor
in
mov
push
call
inc
cs
mov
fist
xchg
(bad)
rcr
fild
mov
mov
leave
ror
data16
xchg
loop
push
pop
jb
ror
repnz
(bad)
jmp
push
inc
xor
mov
dec
dec
aam
lahf
adc
add
test
push
lea
sub
jle
cmp
push
jo
nop
in
das
test
fcmovu
pop
adc
push
ror
in
inc
or
dec
push
xchg
out
(bad)
(bad)
jmp
pusha
jg
pop
push
jae
and
push
pop
jl
fcomp
and
xlat
push
(bad)
aas
dec
jmp
xchg
lea
jb
xchg
ficom
call
aad
repnz
loop
adc
xchg
hlt
inc
retf
push
std
fs
adc
mov
mov
retf
sub
xlat
pop
fwait
xchg
mov
push
jnp
adc
pop
push
adc
aam
mov
pusha
pop
dec
scas
call
lds
pop
les
fbstp
dec
nop
mov
(bad)
(bad)
mov
jecxz
loope
sub
rol
push
call
mov
icebp
xchg
cmp
(bad)
(bad)
(bad)
in
sahf
ss
mov
adc
bound
pop
inc
cld
push
pop
ss
push
(bad)
(bad)
(bad)
push
cmp
jb
cmp
daa
or
cmp
or
fmul
jmp
sub
ins
lods
clc
(bad)
push
adc
cmp
scas
add
lea
lock
mov
scas
push
xor
mov
(bad)
(bad)
(bad)
push
dec
sub
hlt
mov
in
enter
in
fcmovnb
outs
adc
test
lods
xchg
jge
mov
test
xlat
mov
mov
int
inc
lea
pop
pusha
int
xor
jecxz
(bad)
(bad)
(bad)
jmp
retf
pop
xor
clc
jp
xor
add
or
sbb
jnp
lods
ficomp
(bad)
jmp
inc
mov
ss
push
sbb
and
and
pop
outs
clc
(bad)
(bad)
jle
pop
sbb
cmps
xor
and
test
xchg
jae
cwde
dec
(bad)
(bad)
(bad)
(bad)
mov
xor
int
push
xor
icebp
pusha
mov
mov
or
jg
inc
mov
cmp
inc
mov
xor
cmc
(bad)
mov
push
loope
(bad)
(bad)
cmp
jp
jns
das
push
iret
or
fsubr
mov
(bad)
jg
xchg
(bad)
or
aad
(bad)
lock
xchg
xchg
pop
mov
(bad)
(bad)
jg
or
leave
jb
in
xor
imul
cmp
inc
ins
mov
pop
(bad)
(bad)
(bad)
jmp
or
out
or
xor
jmp
add
xchg
xchg
bswap
jo
jg
jmp
jecxz
sbb
stc
test
das
jae
or
ja
cmps
inc
add
or
scas
push
push
(bad)
cli
add
outs
mov
sbb
push
lods
in
sub
outs
or
call
(bad)
jns
imul
inc
mov
adc
mov
dec
mov
(bad)
push
xchg
xor
push
test
fcmovnu
clc
cwde
xor
hlt
dec
fnsetpm(287
out
mov
(bad)
call
(bad)
xor
push
sub
cmp
jmp
lods
xlat
cmps
retf
adc
pop
cld
(bad)
jmp
scas
fdivr
pop
sub
xor
call
std
aas
pop
(bad)
(bad)
(bad)
inc
pop
sbb
(bad)
ror
clc
ffreep
out
ret
jne
nop
enter
ja
scas
mov
jle
(bad)
(bad)
call
test
cmp
outs
ficomp
adc
mov
xor
cs
mov
cmp
jns
inc
dec
cld
in
jecxz
in
aaa
mov
in
outs
(bad)
fild
dec
mov
or
sti
in
fild
cmps
jmp
xor
inc
and
aaa
xor
retf
dec
mov
(bad)
dec
(bad)
fs
sbb
push
stos
sbb
inc
test
mov
test
push
(bad)
(bad)
mov
out
iret
sub
sub
pop
inc
js
scas
adc
mov
enter
imul
(bad)
call
sub
in
sbb
adc
mov
mov
hlt
imul
sub
push
nop
clc
adc
in
inc
mov
pop
rcr
lock
repnz
mov
jle
(bad)
(bad)
(bad)
push
in
in
(bad)
jo
cmc
jecxz
mov
test
xchg
les
xchg
mov
(bad)
(bad)
dec
inc
mov
xchg
test
pop
push
cmp
sub
jge
mov
in
hlt
sbb
dec
cli
(bad)
(bad)
(bad)
clc
(bad)
gs
gs
or
ds
icebp
cs
shr
sub
test
(bad)
jmp
or
aam
mov
push
rcl
jl
jecxz
(bad)
call
and
cmp
cwde
sti
movs
movs
jge
inc
lock
add
xor
sbb
hlt
pop
in
retf
mov
(bad)
jmp
loop
fimul
cld
cmc
pop
pop
leave
cmps
stc
outs
pop
aaa
pop
inc
ss
popf
(bad)
dec
xchg
mov
cld
(bad)
mov
shl
pop
popa
or
lahf
push
xchg
fs
in
(bad)
(bad)
(bad)
call
sub
(bad)
aam
xchg
xchg
inc
push
jle
cld
sub
iret
fcom
in
bound
push
cmp
and
mov
movs
or
jno
ret
sbb
add
push
add
xor
cmp
mov
jg
inc
call
into
and
xor
sbb
pop
sar
ror
push
and
(bad)
mov
lahf
aaa
and
sbb
lods
mov
mov
movs
sub
mov
hlt
aaa
fsub
out
lods
sub
mov
(bad)
jmp
xor
out
jmp
mov
(bad)
mov
and
and
cmps
dec
sar
call
xchg
add
inc
rol
adc
dec
mov
mov
scas
ds
lods
jl
call
(bad)
call
jmp
inc
sbb
loopne
cmp
mov
cld
retf
mov
enter
inc
inc
sar
call
shl
(bad)
cmps
in
mov
out
and
stc
xor
pop
or
push
mov
hlt
ins
dec
xchg
cmp
lods
daa
jae
jo
(bad)
mov
dec
mov
movs
lea
int3
into
(bad)
call
jnp
xchg
jmp
cli
(bad)
sti
enter
leave
xor
ins
stc
shr
mov
cmp
sbb
(bad)
(bad)
push
stc
sbb
imul
int
mov
jbe
sbb
mov
mov
es
(bad)
mov
and
scas
jge
sbb
push
xchg
or
call
(bad)
sbb
sub
(bad)
arpl
in
push
jo
jl
outs
push
stos
jl
pop
adc
mov
xchg
xor
(bad)
(bad)
(bad)
and
fbld
pop
inc
push
hlt
mov
imul
mov
test
js
jmp
mov
gs
ja
adc
retf
push
xor
cmc
stos
xor
addr16
outs
aad
enter
push
jo
push
add
(bad)
jg
xchg
test
adc
in
xor
icebp
jp
ins
sub
cmp
out
mov
call
enter
push
(bad)
mov
cld
jo
mov
cmp
adc
pmullw
xchg
or
cli
call
cmp
(bad)
(bad)
(bad)
cmp
popf
sbb
xchg
and
cmps
push
adc
mov
icebp
push
(bad)
push
(bad)
jmp
cmp
xchg
sbb
mulps
push
add
xor
add
es
out
adc
push
push
jg
mov
mov
imul
xor
sub
(bad)
mov
sub
xor
cld
mov
mov
shl
jecxz
repnz
popf
out
aad
jp
(bad)
(bad)
dec
fs
add
add
and
daa
xor
rcr
inc
sbb
out
push
and
fild
adc
out
inc
arpl
or
mov
inc
inc
ror
(bad)
call
pop
or
mov
sub
pop
call
mov
bound
mov
mov
xchg
add
test
mov
mov
cmps
mov
inc
fxtract
js
pop
fidivr
sub
out
sbb
(bad)
(bad)
(bad)
out
not
cli
xor
add
inc
imul
jl
mov
sub
xor
(bad)
(bad)
(bad)
jg
jg
and
adc
movs
mov
loop
inc
rol
sub
int3
cli
mov
(bad)
(bad)
(bad)
push
mov
push
dec
mov
or
std
jecxz
aas
lahf
stc
je
xor
mov
inc
or
add
test
fsubr
jmp
sub
xlat
dec
leave
inc
pop
(bad)
(bad)
inc
in
cdq
mov
xor
sahf
cmp
in
and
ss
out
push
gs
ret
push
ds
mov
repz
lods
stos
shl
(bad)
(bad)
(bad)
(bad)
js
sub
mov
cmp
lea
fstp
sbb
shl
push
inc
in
int3
clc
xor
(bad)
(bad)
ds
mov
popa
sbb
xor
call
(bad)
call
cmps
into
inc
int3
mov
(bad)
(bad)
dec
das
div
mov
ret
mov
xchg
cmp
sbb
push
jp
jno
(bad)
(bad)
(bad)
push
push
push
cmp
imul
popa
xchg
dec
sbb
(bad)
pop
lds
or
mov
push
mov
bound
inc
(bad)
popf
bound
adc
ss
cmp
dec
or
pushf
imul
(bad)
(bad)
(bad)
dec
jb
fwait
leave
push
shl
dec
xor
out
jecxz
out
inc
gs
cdq
lods
cmp
(bad)
(bad)
(bad)
clc
push
sti
fdivr
mov
cmp
cmps
sub
outs
mov
cld
sti
fbld
shl
out
push
add
(bad)
dec
sub
out
mov
push
or
mov
lds
shl
mov
fmulp
fldpi
inc
movs
fcomip
ja
mov
in
loop
or
mov
(bad)
sbb
retf
call
lahf
int3
jnp
lock
scas
push
shl
scas
ss
inc
fwait
and
cmps
adc
ret
sub
out
ret
xor
inc
or
fst
lock
out
pop
mov
(bad)
(bad)
(bad)
jle
int3
pop
jae
out
xchg
fstp
sbb
popa
jno
jg
call
(bad)
(bad)
call
sub
cli
fwait
test
outs
sbb
addr16
adc
inc
or
cmc
(bad)
call
push
sub
push
jnp
adc
inc
icebp
push
int3
aaa
stc
and
mov
jno
and
cmp
pop
push
ja
mov
neg
cmp
inc
pop
inc
fwait
and
pop
sahf
(bad)
pop
das
xor
push
into
pop
lock
fstp
cmp
or
(bad)
(bad)
call
(bad)
outs
aaa
into
pop
(bad)
sbb
pop
adc
sub
loop
jle
jmp
mov
push
popa
cmp
int3
push
jmp
jg
int3
fs
pop
hlt
xchg
xchg
dec
cmp
(bad)
(bad)
call
mov
(bad)
(bad)
sbb
jne
sbb
xor
sbb
arpl
inc
pop
pop
xchg
popf
cmc
(bad)
(bad)
fcomip
call
xor
iret
stos
sbb
rcr
and
sahf
push
aaa
std
(bad)
jmp
out
dec
arpl
retf
aam
out
cld
dec
test
(bad)
(bad)
(bad)
jmp
mov
xchg
shr
cmp
ss
(bad)
sbb
xchg
imul
movs
(bad)
inc
inc
repnz
mov
dec
loop
pop
dec
imul
mov
push
cwde
mov
jmp
imul
(bad)
(bad)
jmp
loop
cmp
pushf
xor
xchg
cmp
cmp
mov
mov
das
(bad)
(bad)
(bad)
(bad)
fimul
xchg
out
retf
inc
mov
xchg
jg
sub
bound
call
pop
dec
mov
xchg
scas
push
cli
xchg
jl
inc
and
scas
pushf
test
xchg
inc
call
rol
jo
cs
push
sbb
in
mov
loope
and
(bad)
(bad)
call
jno
inc
adc
ret
sub
add
addr16
pop
jmp
aad
cmp
stos
mov
(bad)
(bad)
(bad)
jg
imul
pop
mov
pop
(bad)
jmp
ror
sub
inc
movs
lea
add
ins
sbb
das
imul
ja
cli
inc
xor
outs
push
cmp
xchg
inc
adc
mov
std
pop
(bad)
scas
test
mov
loopne
(bad)
(bad)
push
xchg
stos
clc
fnstsw
push
jb
stos
imul
and
(bad)
(bad)
jg
daa
cmps
lea
xor
je
jnp
xchg
push
(bad)
xchg
daa
cmps
outs
cwde
xchg
jp
cmp
mov
out
cmp
mov
inc
and
(bad)
(bad)
jmp
jmp
rcl
pop
lock
or
repz
add
and
das
sub
sub
das
std
jmp
push
ret
je
sbb
fisttp
pop
ss
(bad)
(bad)
mov
imul
pop
sub
js
push
or
push
jmp
inc
call
mov
or
mov
pop
inc
cli
aad
and
test
xchg
fcomip
(bad)
push
adc
fiadd
push
aas
mov
push
mov
mov
fnstenv
call
xchg
mov
dec
adc
push
out
sub
jae
mov
out
cmp
fbstp
in
jg
(bad)
(bad)
jmp
fucomp
push
arpl
sbb
retf
mov
dec
push
xlat
call
adc
pop
aaa
dec
(bad)
dec
and
or
mov
cmp
mov
(bad)
(bad)
call
int
std
lahf
xchg
inc
ror
jl
inc
cmps
fcom
dec
sub
push
xchg
mov
(bad)
call
lea
xor
and
out
xchg
dec
lea
sbb
jb
movs
cmp
pop
ds
or
sahf
jns
xor
(bad)
(bad)
call
(bad)
adc
cmp
loop
push
jmp
ret
cwde
mov
mov
(bad)
(bad)
jmp
fbld
fild
pop
call
ins
mov
mov
dec
xchg
sub
sbb
ja
out
loopne
sar
push
in
or
ds
mov
adc
mov
call
not
inc
push
sub
inc
out
(bad)
mov
es
push
add
das
pop
les
and
xchg
inc
fdiv
(bad)
jg
ficom
mov
mov
fist
ins
adc
jmp
jmp
test
int
cdq
repz
pop
outs
mov
add
imul
sar
mov
mov
repnz
inc
les
sti
fcomi
dec
inc
movs
add
loopne
mov
mov
imul
mov
fbstp
in
rcl
(bad)
cli
xor
mov
push
out
int3
fld
xchg
clc
call
sbb
mov
push
adc
push
ja
push
mov
jmp
sub
mov
sbb
jmp
(bad)
push
loop
push
fistp
cmps
(bad)
sub
xchg
add
lahf
sahf
(bad)
jmp
enter
inc
(bad)
in
movs
jno
push
clc
ds
fisttp
dec
nop
cmps
xor
clc
(bad)
inc
daa
fmul
les
int3
inc
and
(bad)
ret
ss
fwait
add
(bad)
cmp
mov
mov
pop
dec
lods
xor
add
ds
sbb
push
imul
sub
mov
cmp
mov
dec
cmp
loopne
aad
pop
or
(bad)
dec
dec
imul
jmp
adc
loope
frstor
nop
and
iret
leave
mov
cmc
mov
(bad)
jmp
cmc
pushf
rcr
pop
ss
push
sbb
in
out
push
cld
lahf
xor
cmp
(bad)
mov
pop
pop
daa
loop
(bad)
rcr
out
dec
out
xchg
mov
iret
xchg
adc
dec
lock
pop
or
js
cmp
xor
push
in
sar
inc
jl
cwde
lahf
mov
or
(bad)
(bad)
jg
sbb
push
jne
fstp
mov
pop
inc
fdiv
xchg
(bad)
out
pop
ins
push
stos
ss
daa
ret
bound
call
icebp
(bad)
call
dec
jnp
js
repnz
(bad)
jecxz
sbb
fwait
sar
add
mov
or
pop
arpl
dec
cmps
lock
hlt
std
call
inc
lods
xchg
and
xor
mov
sub
in
jmp
add
loopne
(bad)
xchg
pop
xchg
cmp
pop
sub
jmp
jo
(bad)
pop
pop
cld
jp
mov
stc
pop
and
mov
fsubp
(bad)
mov
rcr
push
aaa
(bad)
fdivr
call
lock
push
cmp
int3
dec
mov
sub
or
hlt
(bad)
push
lods
add
add
add
in
mov
sbb
(bad)
(bad)
(bad)
mov
mov
pop
and
rcl
out
out
sbb
push
scas
xor
js
repz
inc
dec
icebp
aam
scas
stc
push
cmp
mov
std
cld
and
bound
sahf
cli
dec
or
call
dec
adc
popf
jecxz
jl
mov
out
jmp
lock
daa
les
iret
rcl
(bad)
sbb
(bad)
dec
and
dec
std
mov
inc
push
push
fucom
ret
cli
(bad)
(bad)
ins
inc
cmp
out
repz
lahf
fs
xor
test
pop
jg
push
dec
mov
cmp
gs
and
(bad)
call
enter
mov
dec
inc
lods
ror
les
push
sub
mov
push
xchg
movs
dec
test
test
push
rcr
dec
sbb
or
add
mov
pop
jle
sar
jmp
(bad)
or
cdq
cmc
std
adc
mov
out
test
dec
jge
retf
loop
sti
xchg
loop
mov
(bad)
call
aas
mov
mov
jg
add
std
cmp
mov
icebp
add
and
lds
(bad)
popf
push
(bad)
jmp
rcl
adc
retf
jne
inc
mov
jns
sbb
jecxz
inc
cli
fstp
xchg
cmc
and
not
jnp
(bad)
les
inc
lods
call
or
or
xor
or
sti
cmp
add
test
(bad)
jmp
push
sub
inc
pop
xchg
fnstcw
ds
(bad)
(bad)
call
push
(bad)
xor
repnz
cwde
jg
ds
cld
rcl
(bad)
(bad)
call
loopne
sbb
loopne
lock
ret
(bad)
dec
div
lea
pop
fild
mov
imul
adc
nop
repz
push
jne
(bad)
and
cmp
cli
(bad)
(bad)
in
pop
ja
adc
rol
test
jp
sbb
add
call
aam
cdq
inc
and
test
push
push
mov
inc
retf
loope
cli
(bad)
(bad)
jmp
sti
rcr
push
adc
fmul
test
cs
ins
mov
cld
jmp
into
popf
sbb
push
sbb
int3
and
xlat
inc
adc
cdq
sbb
or
js
pop
test
(bad)
(bad)
(bad)
jmp
(bad)
cs
sub
test
inc
pop
and
int3
enter
jg
lea
or
push
out
xor
(bad)
(bad)
push
inc
gs
push
sbb
fwait
inc
ds
dec
jmp
push
mov
in
sub
pushf
and
adc
cdq
ucomiss
fisub
in
or
in
sub
adc
rcr
pop
xchg
push
(bad)
retf
ret
inc
push
pusha
call
ficomp
fsub
cmps
sbb
add
(bad)
and
jmp
ins
adc
or
push
xor
in
mov
scas
xchg
mov
test
ror
xchg
in
and
fld
shr
jmp
sbb
pcmpgtb
(bad)
(bad)
mov
icebp
adc
scas
scas
and
jl
or
out
jmp
shr
(bad)
(bad)
(bad)
dec
jecxz
cwde
sbb
je
inc
sbb
addr16
jg
dec
int
(bad)
xor
out
cmp
or
push
lahf
adc
lods
fisub
xor
stos
mov
dec
dec
aam
(bad)
call
push
pop
cmps
cmp
jmp
mov
fcomip
(bad)
(bad)
dec
pop
push
repnz
loop
mov
je
add
or
or
(bad)
(bad)
(bad)
jmp
sbb
popf
and
loope
mov
jnp
sub
inc
inc
scas
stos
push
(bad)
(bad)
mov
mov
mov
ret
ja
scas
cld
sbb
push
(bad)
(bad)
jmp
test
popa
xchg
call
sbb
clc
sar
push
jno
in
mov
(bad)
fcomip
(bad)
jmp
sub
fiadd
jg
scas
fisub
jl
mov
loop
std
and
jmp
ds
sbb
mov
in
daa
mov
lods
es
sub
adc
jmp
pusha
pop
(bad)
int3
mov
pop
call
xor
push
rol
push
inc
pop
inc
add
jae
add
lds
(bad)
enter
and
std
mov
enter
jno
(bad)
mov
xor
jge
shl
dec
fmul
jns
loopne
std
mov
mov
ja
(bad)
movsx
push
sbb
inc
jo
add
jnp
sbb
mov
xlat
out
loopne
cmp
(bad)
push
test
jg
fistp
out
ja
xor
fstp
xor
mov
xlat
pop
dec
add
xor
int
call
std
jg
inc
or
fs
adc
jp
(bad)
push
sub
add
mov
pop
push
(bad)
call
xor
stc
xor
inc
pop
je
in
sbb
sti
test
sahf
pop
out
cli
push
std
push
cmp
mov
arpl
mov
lods
mov
(bad)
jmp
inc
push
xor
mov
and
push
hlt
pop
sbb
movs
stc
pop
lahf
call
push
(bad)
jmp
sub
test
(bad)
les
sub
sbb
jb
push
mov
(bad)
jmp
(bad)
mov
sub
mov
ss
xor
mov
or
jmp
dec
xor
push
lods
pushf
or
in
mov
mov
or
mov
test
sbb
loope
sub
(bad)
mov
and
ret
ds
jae
es
sbb
(bad)
(bad)
(bad)
(bad)
mov
out
cmc
xchg
pushf
nop
dec
popf
das
sub
jb
call
pop
ror
fsubr
lods
xchg
hlt
add
sbb
lds
add
mov
xchg
jmp
inc
dec
cmp
mov
push
adc
(bad)
mov
xchg
sbb
xor
sbb
outs
lods
push
mov
inc
push
cmc
push
jno
or
pop
aas
sbb
neg
pop
pop
push
cli
inc
mov
push
mov
call
sbb
(bad)
call
adc
idiv
push
xor
push
loop
cs
stc
cld
cmp
adc
jmp
das
mov
mov
sar
sub
add
mov
sar
or
mov
retf
jecxz
aam
mov
das
cli
jmp
mov
mov
dec
sub
xor
sub
sbb
ror
(bad)
inc
ja
mov
dec
ud1
ja
loope
push
imul
sub
push
aaa
xchg
or
cmps
movs
(bad)
(bad)
mov
pop
cmps
retf
ins
sbb
sub
lods
inc
pop
fild
mov
push
(bad)
cmc
cmps
adc
(bad)
(bad)
(bad)
(bad)
push
fsubr
dec
test
mov
addr16
inc
and
movs
(bad)
shl
adc
(bad)
(bad)
push
mov
mov
les
jmp
aaa
es
dec
mov
jns
inc
mov
adc
jmp
jb
aaa
in
cmp
je
jg
push
daa
add
daa
xor
inc
mov
ja
les
inc
popf
mov
nop
dec
add
add
adc
call
or
pop
inc
outs
xlat
inc
mov
(bad)
(bad)
(bad)
mov
cmp
cmp
push
test
add
jl
scas
pop
(bad)
std
(bad)
call
out
cwde
sub
push
pop
popf
pushf
jbe
pop
movs
stc
pop
mov
clc
pop
dec
cmps
push
or
iret
push
pop
std
push
xor
psubd
jg
mov
data16
(bad)
mov
fisub
sbb
fistp
adc
aas
(bad)
(bad)
inc
icebp
jns
and
retf
jbe
push
mov
pop
mov
xchg
sbb
xor
(bad)
(bad)
jg
pop
rol
cwde
push
add
fist
out
dec
fs
dec
ds
pop
inc
and
push
lods
adc
sub
xor
mov
mov
xor
(bad)
(bad)
inc
(bad)
push
push
clc
adc
enter
jns
sub
jp
cdq
sbb
fild
ret
(bad)
(bad)
(bad)
push
inc
adc
sbb
scas
sahf
push
nop
icebp
cs
jne
inc
xor
push
cmp
cwde
enter
mov
mov
cli
fld
cmp
(bad)
xor
pop
jmp
dec
loopne
mov
loop
cmps
jmp
adc
or
je
mov
add
(bad)
jmp
(bad)
cmp
xchg
mov
das
test
push
jecxz
ja
(bad)
(bad)
mov
loopne
jp
stos
outs
push
sbb
adc
or
mov
popa
cwde
adc
cld
(bad)
call
retf
bound
push
jle
pop
in
xchg
push
cmp
jbe
xor
xor
push
cld
jecxz
jecxz
pop
inc
jl
fstp
sti
repz
jg
jae
mov
and
mov
(bad)
(bad)
inc
inc
mov
lods
cs
mov
sahf
mov
fnstsw
dec
pop
dec
idiv
(bad)
call
pop
cmps
ret
mov
aad
movs
mov
out
adc
sub
xor
stos
(bad)
call
lahf
ins
fbstp
cmc
mov
mov
cwde
repz
push
xor
cmp
outs
dec
add
lods
repnz
mov
in
popa
cmp
(bad)
(bad)
push
out
pop
cmc
fwait
test
jmp
inc
sar
dec
(bad)
(bad)
jecxz
xchg
pop
sbb
cmps
gs
ds
div
inc
(bad)
xor
(bad)
(bad)
(bad)
(bad)
dec
mov
and
pop
sub
into
pop
iret
out
mov
movs
shr
sbb
daa
call
(bad)
call
add
and
inc
adc
out
(bad)
in
js
das
in
inc
mov
aam
push
or
jb
les
repz
test
inc
xchg
inc
movs
mov
(bad)
int3
aas
retf
dec
popa
mov
aaa
retf
mov
(bad)
loope
fcomp
(bad)
(bad)
(bad)
cmp
std
pop
mov
(bad)
data16
mov
pop
das
xchg
mov
repz
pop
(bad)
(bad)
(bad)
dec
jne
mov
mov
cmp
rcl
cld
jo
cld
shl
jo
in
sbb
sbb
cmp
adc
adc
cmps
icebp
mov
and
dec
test
ror
clc
pop
or
or
ins
loope
mov
mov
fdivr
(bad)
jmp
jle
cmp
cmp
dec
inc
xor
in
mov
mov
lahf
movs
inc
dec
das
mov
call
bound
daa
aam
addr16
(bad)
(bad)
(bad)
call
fs
in
fst
push
jno
call
push
out
push
sar
fisttp
aas
das
ficom
push
mov
push
pop
setae
push
cmps
pop
jl
inc
sahf
sub
movs
xchg
pop
lods
sbb
mov
fwait
pushf
mov
cmps
mov
fdivr
inc
loopne
dec
dec
sbb
pop
dec
fimul
(bad)
(bad)
dec
stos
lods
nop
pop
test
fyl2x
lock
sahf
dec
xchg
jmp
repz
fcomp
(bad)
(bad)
(bad)
(bad)
jmp
mov
inc
sbb
outs
and
cli
mov
das
push
dec
repnz
pop
out
inc
mov
bound
push
sub
dec
test
cdq
fmul
loopne
int
inc
pop
aad
fcos
(bad)
(bad)
(bad)
cli
mov
hlt
loope
mov
and
sub
shr
leave
adc
retf
fcomip
dec
jnp
xchg
and
xchg
inc
jne
shl
and
les
repnz
xchg
movs
pop
loopne
xor
loopne
jl
(bad)
(bad)
jg
lahf
pop
xchg
imul
or
push
jo
mov
and
aaa
aas
mov
xchg
jno
loopne
(bad)
jge
(bad)
loopne
or
xor
push
sub
mov
adc
pop
outs
cli
cwde
inc
mov
mov
sahf
stc
shl
(bad)
pop
add
ficomp
mov
push
sti
popf
ret
(bad)
(bad)
call
push
fsubr
push
mov
xor
jge
test
lods
dec
xchg
mul
mov
and
push
push
sti
lods
cmp
jmp
dec
ret
fmul
xchg
test
jl
jb
rcr
(bad)
mov
dec
xor
gs
(bad)
je
loope
iret
out
pushf
fcom
pop
shr
(bad)
(bad)
(bad)
jmp
rcr
popf
lock
xor
(bad)
(bad)
jnp
jne
mov
das
push
je
xor
outs
jbe
ret
(bad)
(bad)
(bad)
(bad)
out
cmp
pop
ret
or
lds
outs
jge
lds
mov
pop
push
mov
jns
jl
fdivr
mov
bound
(bad)
jmp
sti
es
xor
cmp
xchg
dec
jmp
daa
add
jmp
mov
repnz
sbb
repnz
imul
inc
je
add
and
xor
dec
fldenv
cmc
push
sub
aaa
cmp
(bad)
jg
(bad)
and
cmc
xchg
test
imul
leave
(bad)
(bad)
inc
dec
xchg
ins
(bad)
sub
dec
stc
aad
sbb
cld
dec
cmps
jmp
push
xchg
je
jmp
rcr
mov
jb
rcl
adc
and
sar
inc
(bad)
cs
fst
out
mov
shr
jl
pop
xchg
cwde
inc
mov
test
inc
mov
mov
xlat
xchg
(bad)
inc
cmc
enter
out
jne
(bad)
(bad)
inc
movs
jbe
jmp
shr
hlt
lods
aaa
mov
cli
dec
dec
hlt
mov
aam
mov
inc
out
scas
mov
(bad)
push
xchg
sub
or
mov
out
mov
or
sub
mov
cmp
(bad)
mov
(bad)
test
add
jmp
mov
(bad)
(bad)
(bad)
fbld
jle
ins
fs
mov
repz
ficomp
or
add
rol
adc
mov
mov
jb
lea
(bad)
jmp
dec
loop
dec
inc
out
mov
sbb
inc
sub
(bad)
(bad)
call
cwde
jge
or
outs
out
lods
shl
pop
mov
cmp
adc
(bad)
jmp
xchg
inc
xchg
fimul
ss
fiadd
lds
mov
mov
jmp
add
cmps
sbb
mov
lds
call
ret
mov
mov
rcr
inc
cli
popf
stc
mov
cs
into
or
(bad)
jmp
push
(bad)
and
inc
cmp
add
jge
push
retf
das
mov
cmp
cmp
push
repz
sub
call
jl
hlt
jne
sar
pop
sbb
pop
pusha
outs
and
xor
(bad)
dec
and
call
(bad)
xchg
gs
dec
popf
(bad)
mov
pusha
inc
pop
rcr
ss
dec
lock
ss
(bad)
dec
dec
pop
xchg
push
ins
fsub
pusha
repz
mov
fsubr
(bad)
(bad)
(bad)
push
mov
aam
jl
push
dec
or
(bad)
jp
sub
int
jmp
xchg
xor
(bad)
(bad)
(bad)
dec
mov
sbb
sub
dec
jge
hlt
shl
xor
sbb
(bad)
(bad)
(bad)
(bad)
es
stc
adc
(bad)
test
or
call
mov
in
or
mov
and
(bad)
pop
call
jmp
into
(bad)
mov
push
rol
xchg
bound
retf
fld
retf
inc
sar
das
mov
jle
ds
mov
rol
push
stc
jne
mov
jmp
ins
and
pop
cmp
add
rol
xchg
hlt
xchg
mov
adc
mov
lea
out
pop
pushf
mov
retf
std
fistp
js
imul
cli
in
sub
call
aaa
inc
xor
jbe
aad
inc
inc
ret
cmp
ds
lds
out
(bad)
push
lea
push
dec
sar
(bad)
(bad)
stc
mov
and
sbb
fadd
mov
mov
adc
xor
(bad)
dec
je
je
dec
push
jne
leave
fldpi
scas
(bad)
imul
aam
sti
pop
and
fisub
push
add
fstp
cmps
dec
nop
leave
sub
cwde
out
movs
das
xor
sbb
jl
hlt
inc
push
bound
cmp
out
push
dec
mov
mov
mov
sbb
jmp
cmps
jg
xor
inc
mov
pop
mov
sub
jl
sub
adc
lds
cmp
mul
(bad)
(bad)
(bad)
jmp
push
jb
lods
js
push
dec
loop
mov
faddp
cwde
push
jnp
int3
ret
xor
or
add
(bad)
call
loop
(bad)
jmp
sbb
xlat
and
dec
(bad)
mov
inc
cmp
mov
pop
jne
jb
adc
repnz
daa
inc
lock
jg
fisttp
outs
dec
fisub
mov
pop
and
mov
call
(bad)
(bad)
(bad)
jmp
cmps
imul
cmp
(bad)
mov
out
cmps
jmp
hlt
test
nop
adc
in
push
out
pop
xor
jecxz
sbb
lds
fadd
outs
cmp
pop
popa
stos
cmps
push
push
nop
icebp
mov
fistp
push
je
push
shl
inc
in
and
or
xchg
add
add
mov
retf
(bad)
(bad)
(bad)
dec
xlat
sahf
push
arpl
test
and
pop
iret
adc
sbb
add
das
push
mov
and
outs
das
or
pop
cli
add
jmp
js
push
xchg
pop
cmp
or
inc
(bad)
(bad)
(bad)
out
mov
or
mov
jmp
xor
js
jne
and
sahf
repz
fld
lods
enter
or
les
cmc
adc
mov
push
stos
(bad)
jmp
into
lods
or
push
xchg
test
adc
repnz
mov
cmp
mov
jle
repnz
dec
(bad)
rcr
cmp
dec
int3
sub
bound
int
xchg
push
dec
dec
jecxz
pusha
jecxz
lods
pop
icebp
xor
ror
ret
(bad)
scas
cli
(bad)
push
mov
test
mov
adc
mov
test
xchg
enter
fs
call
sub
mov
int3
push
or
mov
iret
push
cli
add
popf
add
inc
jnp
(bad)
popf
call
add
lods
push
imul
enter
cmp
(bad)
(bad)
(bad)
inc
xlat
loop
xor
add
je
outs
adc
and
lods
cmp
or
(bad)
dec
gs
in
les
adc
iret
push
mov
loopne
dec
mov
sub
ins
bound
cld
nop
std
push
adc
add
xchg
(bad)
dec
xchg
inc
or
mov
into
xchg
(bad)
(bad)
jmp
add
(bad)
loopne
(bad)
mov
ret
pmaxsw
mov
(bad)
inc
test
icebp
out
mov
push
paddusb
daa
out
push
popf
jg
mov
fbld
sub
sbb
ror
inc
xchg
repnz
dec
jmp
xchg
and
dec
(bad)
(bad)
(bad)
dec
dec
cmp
repnz
xor
arpl
iret
test
inc
xchg
adc
sbb
ss
(bad)
(bad)
(bad)
cld
ins
call
out
dec
sbb
das
add
push
mov
xlat
sbb
cdq
mov
xchg
loope
(bad)
(bad)
(bad)
aas
pushf
enter
fistp
into
imul
fwait
repz
retf
push
sbb
xchg
aaa
push
(bad)
(bad)
(bad)
jmp
imul
shl
(bad)
shl
scas
call
rcl
into
lds
xor
(bad)
jmp
leave
in
pusha
xchg
xchg
and
(bad)
inc
cmp
cmp
adc
jns
(bad)
fild
fist
fcom
xor
sbb
xlat
lea
pop
sbb
sti
in
mov
cld
sbb
(bad)
(bad)
(bad)
inc
cwde
dec
sbb
mov
outs
(bad)
push
xchg
mov
xchg
push
or
ror
mov
(bad)
mov
loop
or
jb
add
jp
xchg
xor
mov
pusha
idiv
call
jmp
jp
das
ja
dec
prefetchnta
out
test
jmp
in
mov
xor
jmp
lds
inc
pop
mov
push
fcom
(bad)
(bad)
(bad)
jg
out
cli
xchg
push
mov
push
push
lds
icebp
inc
dec
xor
loopne
dec
call
jae
out
fs
out
xchg
push
cli
xor
dec
sbb
aas
jle
aas
data16
aas
leave
iret
(bad)
movs
sbb
rcl
mov
push
and
dec
dec
pop
movs
nop
out
(bad)
dec
bound
pushf
in
out
ins
movs
jecxz
fwait
sub
(bad)
jmp
into
ins
sub
push
jl
pop
inc
push
std
xchg
(bad)
sbb
iret
scas
xlat
mov
(bad)
dec
xor
iret
test
and
int3
jns
inc
and
inc
dec
or
inc
fnstsw
(bad)
(bad)
dec
xchg
sti
call
(bad)
xor
adc
stos
push
std
sbb
call
jle
sub
sub
sti
xor
push
pop
inc
test
iret
pop
push
scas
xor
test
(bad)
(bad)
(bad)
fdivr
push
cdq
test
sti
sbb
add
cs
nop
cs
cld
push
nop
inc
mov
sti
or
xchg
(bad)
(bad)
(bad)
call
sbb
and
cmp
add
repz
inc
lods
in
sbb
xlat
data16
jmp
dec
cmp
in
pop
out
shr
retf
aam
gs
jb
sub
sub
pusha
cld
(bad)
dec
daa
(bad)
inc
ja
pop
aas
mov
inc
push
mov
fwait
sahf
and
(bad)
jg
call
jecxz
cmp
ds
cmp
lahf
add
push
push
jo
xchg
ret
cmp
pop
pop
icebp
add
xchg
mov
arpl
js
mov
cmp
cli
inc
sub
cmp
aaa
xor
sub
cmp
mov
sbb
mov
lock
adc
push
sbb
add
rcl
or
rcl
sub
(bad)
(bad)
popa
cmp
xchg
outs
inc
clc
(bad)
call
inc
cld
mov
jo
aam
xor
stos
sbb
jmp
call
inc
int3
xchg
loope
dec
not
xchg
and
idiv
push
movs
(bad)
jmp
mov
fst
loopne
pop
retf
ja
(bad)
(bad)
jmp
arpl
ror
inc
inc
adc
jecxz
sar
(bad)
inc
xor
int
mov
repz
movs
nop
and
(bad)
(bad)
call
pusha
push
test
and
and
inc
scas
es
ret
pushf
aaa
sbb
rep
add
or
dec
or
or
shl
inc
sub
stos
mov
jmp
gs
cld
(bad)
dec
arpl
dec
mov
call
adc
mov
rol
loope
(bad)
js
out
data16
cmp
add
cmps
pop
push
sub
dec
ss
mov
push
mov
dec
and
sub
lds
xchg
pusha
adc
movs
jg
dec
cld
retf
retf
mov
sbb
xor
nop
call
push
clc
cbw
dec
fist
xchg
mov
sub
test
push
(bad)
jg
inc
pushf
adc
cdq
push
push
jmp
mov
pop
nop
or
mov
push
push
test
inc
in
mov
test
test
aas
cmp
out
fmul
jno
(bad)
call
js
push
sub
pusha
ins
and
sar
or
icebp
pop
adc
retf
and
pop
out
stc
mov
jp
jg
cdq
fldcw
enter
pop
adc
popf
int
and
xchg
fwait
out
jle
int3
mov
jno
(bad)
jmp
and
sahf
pop
fcomp
fdivr
mov
mov
mov
dec
mov
(bad)
dec
add
mov
mov
mov
cmovl
xor
dec
jo
lods
(bad)
jmp
adc
inc
arpl
mov
ins
call
xor
adc
faddp
js
les
out
jg
rol
push
sub
dec
shl
dec
xchg
(bad)
or
in
jo
fidiv
popf
sub
mov
mov
cmp
push
cld
clc
pop
stc
push
add
fst
xchg
stc
or
jmp
(bad)
(bad)
(bad)
inc
adc
mov
dec
jle
xchg
mov
mov
(bad)
mov
mov
mov
xor
shl
in
stc
mov
jg
movs
fdivr
sbb
pop
f2xm1
push
jg
call
sbb
dec
pop
(bad)
and
mov
ds
push
lods
or
cdq
jne
(bad)
(bad)
jmp
leave
dec
repz
xchg
xchg
in
mov
retf
fsub
icebp
(bad)
inc
enter
pushf
mov
das
pop
(bad)
push
stos
loopne
add
add
or
adc
add
shr
sbb
(bad)
jmp
repnz
xor
(bad)
retf
xchg
ja
fld
stc
xor
ds
(bad)
cld
in
jl
std
inc
mov
add
(bad)
std
inc
rcl
test
sar
(bad)
sub
mov
mov
dec
add
(bad)
(bad)
call
push
ss
into
jae
push
mov
sbb
(bad)
jmp
inc
test
xlat
arpl
jmp
call
or
sub
xor
fnstsw
(bad)
jmp
mov
fdiv
ret
jae
ror
xchg
stos
in
stc
cdq
lahf
xor
(bad)
(bad)
call
jmp
sbb
jnp
in
or
fwait
sbb
jge
mov
hlt
(bad)
(bad)
push
or
xchg
fsub
xor
sub
lds
add
mov
and
les
das
mov
dec
into
cli
arpl
or
(bad)
(bad)
(bad)
(bad)
jge
cmp
xor
mov
cli
mov
fsubr
jmp
mov
(bad)
(bad)
inc
pop
aaa
sub
push
bound
movs
xor
ins
lods
(bad)
mov
std
outs
sub
mov
fbld
(bad)
(bad)
call
cwde
mov
sub
fsubr
jp
xchg
mov
or
push
push
test
mov
loop
enter
neg
push
sub
mov
xor
jae
cmc
xchg
(bad)
(bad)
(bad)
jmp
pop
jo
inc
mov
mov
rcl
(bad)
mov
outs
add
or
pop
popa
mov
aas
out
cs
mov
ja
outs
in
sar
ja
cs
data16
jmp
add
test
jg
adc
cld
int3
cmp
clc
xor
xchg
mov
or
xchg
and
aas
cmps
and
pop
(bad)
(bad)
call
and
out
mov
mov
jl
adc
ror
(bad)
(bad)
call
mov
mov
push
cmp
sub
pop
sbb
or
clc
lock
dec
test
(bad)
(bad)
jmp
xor
je
(bad)
cld
in
push
mov
daa
jne
mov
fdiv
xor
call
add
jge
retf
sub
aaa
cld
outs
inc
xor
dec
lds
stos
test
fistp
dec
gs
idiv
push
(bad)
mov
pop
and
xor
adc
pop
rcr
pop
(bad)
jmp
imul
sub
xchg
jg
add
rcl
xor
jns
ror
inc
jbe
(bad)
inc
imul
jle
imul
adc
pop
(bad)
call
sub
push
jecxz
sbb
mov
shl
mov
sub
inc
cwde
pslld
cmp
(bad)
(bad)
(bad)
std
jp
add
into
pop
es
mov
jp
mul
adc
xor
sub
cs
mov
(bad)
mov
inc
add
arpl
test
mov
imul
into
cld
icebp
fcomp
(bad)
push
dec
jge
adc
adc
jmp
mov
repnz
push
std
fsubr
pop
stc
outs
rol
add
popa
jne
mov
mov
cmp
push
pop
mov
clc
pop
and
dec
loope
inc
int
test
js
inc
int3
xlat
mov
(bad)
dec
dec
loope
inc
adc
je
test
leave
and
out
jecxz
(bad)
hlt
ret
shl
cli
mov
call
test
(bad)
(bad)
(bad)
jmp
xor
movs
and
faddp
pop
cmp
adc
mov
mov
add
jae
mov
inc
mov
in
cmps
loop
jmp
xor
in
sbb
add
(bad)
sub
scas
or
in
arpl
jbe
sub
sar
pop
cmc
pop
pop
lods
pop
push
jae
xor
dec
or
xor
in
jmp
and
push
cmp
jmp
push
dec
xchg
idiv
(bad)
arpl
das
xor
pop
inc
dec
dec
(bad)
sbb
pop
std
pop
cmc
(bad)
(bad)
mov
xchg
sbb
ds
xchg
stos
shl
push
mov
(bad)
mov
xrelease
push
mov
fist
pop
dec
dec
fcos
mov
sar
in
add
psubd
ret
(bad)
(bad)
cli
loopne
mov
dec
fs
jmp
bound
xchg
(bad)
jg
dec
clc
push
mov
in
inc
dec
inc
jp
popf
cmp
push
test
ja
mov
cmps
jle
inc
ja
adc
idiv
(bad)
push
push
ror
lds
push
mov
mov
stc
clc
(bad)
dec
movs
jmp
sbb
xor
retf
xor
outs
pop
and
mov
add
pop
add
(bad)
jmp
xor
(bad)
cmc
bound
arpl
fnstcw
repz
std
jns
js
sbb
movs
mov
jmp
out
ds
inc
fist
clc
pushf
shl
mov
xor
cmps
lahf
stos
ins
hlt
dec
xor
push
cmps
sar
(bad)
int
(bad)
ins
push
push
adc
mov
cmp
dec
cli
push
sbb
dec
inc
add
loopne
call
push
das
sbb
test
push
xchg
(bad)
sar
jmp
jb
(bad)
sti
jnp
mov
fistp
fist
sbb
adc
sbb
or
xchg
sbb
(bad)
(bad)
call
pop
cdq
push
sub
jb
jle
xchg
mov
bound
not
or
clc
pop
jb
mov
pusha
xor
aas
ret
jg
call
retf
or
sub
fisubr
test
inc
adc
dec
push
les
call
outs
mov
sub
inc
pusha
fcomp
repz
sub
inc
mov
adc
outs
or
(bad)
(bad)
jmp
mov
fisttp
xchg
(bad)
mov
and
cmp
inc
addr16
push
leave
clc
(bad)
call
clc
outs
cld
adc
sub
movs
int
or
repz
les
test
mov
(bad)
dec
inc
mov
mov
das
aaa
out
ror
push
fld
mov
int
xchg
fwait
jge
pop
call
(bad)
(bad)
out
jns
cwde
ja
pop
jns
sbb
out
mov
rol
push
add
hlt
jg
clc
cwde
test
push
jecxz
arpl
ret
xchg
sar
dec
rol
xlat
pop
ja
pop
or
lds
mov
dec
dec
repnz
fistp
or
sub
inc
int
bound
pop
(bad)
(bad)
jg
stos
fnstsw
(bad)
sbb
lods
repz
dec
scas
fistp
xlat
lea
add
pop
sbb
(bad)
(bad)
jmp
out
inc
mov
nop
frstor
fnstcw
and
adc
adc
dec
int3
jmp
(bad)
mov
pop
jae
aad
and
in
fidivr
(bad)
(bad)
(bad)
call
cmp
arpl
outs
adc
shl
push
inc
jmp
mov
jl
jmp
in
ja
mov
sbb
or
pop
iret
lods
cmps
out
pop
ret
jp
imul
push
test
xlat
mov
jmp
pop
push
test
leave
sbb
mov
push
or
sub
loop
pop
out
scas
les
test
int3
cdq
out
les
fcomp
addr16
inc
sub
xor
jnp
test
add
adc
lock
fstp
dec
les
push
hlt
stos
call
hlt
dec
xchg
push
add
stc
adc
(bad)
call
js
jnp
mov
mov
or
push
mov
(bad)
mov
pop
movs
(bad)
pop
dec
mov
xlat
jnp
cli
cmp
call
out
pop
dec
test
mov
pop
pop
and
sub
adc
or
(bad)
push
ret
adc
cmc
mov
jo
add
lock
out
or
push
xor
cmp
repnz
(bad)
jg
call
mov
test
mov
jecxz
daa
cmp
(bad)
jmp
movs
fcmovnbe
das
inc
cli
dec
enter
add
mul
sar
call
cmp
loopne
jl
or
push
mov
jbe
adc
loopne
xor
int
lods
je
dec
jnp
sub
mov
iret
aad
pop
push
cmp
jbe
cli
push
into
jo
std
hlt
xchg
xlat
xchg
xchg
or
cmp
mov
(bad)
dec
ret
(bad)
fimul
dec
test
cmp
retf
sbb
jne
xor
(bad)
(bad)
(bad)
mov
leave
mov
mov
and
(bad)
mov
call
movs
arpl
aam
test
(bad)
jge
cli
call
xchg
adc
xor
xchg
or
mov
jmp
dec
add
mov
xchg
jmp
adc
mov
cld
jnp
inc
inc
sbb
js
(bad)
(bad)
call
cmps
inc
dec
sbb
test
lods
sub
adc
gs
(bad)
sbb
rcl
popf
mov
cmp
sahf
add
(bad)
repnz
adc
mov
jae
mov
pop
scas
and
or
adc
add
mov
add
(bad)
(bad)
mov
mov
add
push
dec
dec
loope
addr16
mov
test
cmp
pusha
xor
loop
test
movs
jns
(bad)
(bad)
(bad)
inc
jg
fstp
arpl
xor
outs
in
btc
shl
xchg
data16
inc
push
xchg
clc
inc
fdiv
(bad)
retf
push
adc
or
push
inc
push
daa
cli
fbld
add
fdivr
lds
enter
mov
vandps
(bad)
jmp
imul
xlat
cmp
jecxz
nop
ret
push
or
jnp
pop
clc
push
or
retf
or
and
push
in
daa
rcl
(bad)
(bad)
jmp
sbb
imul
pop
or
xchg
retf
and
(bad)
nop
into
dec
adc
inc
std
imul
(bad)
xlat
or
dec
mov
fild
inc
test
fisub
sbb
xor
or
xchg
and
inc
cmc
(bad)
out
jp
fs
push
stos
and
or
outs
push
mov
clc
(bad)
(bad)
mov
dec
sub
inc
xlat
arpl
push
cld
push
sbb
push
int3
daa
in
and
out
push
push
(bad)
(bad)
(bad)
(bad)
dec
cmc
stos
shl
div
inc
int
in
add
lahf
pop
xor
adc
sub
call
xor
or
inc
pusha
mov
(bad)
jge
loope
lea
sub
iret
push
mov
and
mov
or
aam
mov
(bad)
(bad)
dec
ss
pop
push
or
cmp
in
das
out
add
sub
into
retf
jno
sub
cmp
inc
cld
popa
xchg
ror
test
cmc
aam
add
or
ret
loopne
out
fadd
(bad)
(bad)
(bad)
call
cmp
or
hlt
xchg
mov
push
jecxz
jg
retf
mov
out
jmp
jg
dec
outs
and
out
retf
popa
in
test
(bad)
(bad)
jmp
and
lahf
or
(bad)
mov
jecxz
(bad)
mov
lahf
mov
repz
xchg
jne
in
sar
call
aas
or
mov
jae
fwait
imul
mov
imul
mov
xor
cmp
push
ret
adc
sub
jmp
jmp
lock
sahf
ret
and
std
(bad)
lock
xor
and
(bad)
(bad)
call
fwait
lahf
mov
(bad)
and
sub
out
dec
popf
inc
mov
call
mov
shr
xchg
pop
cmp
fcom
aaa
mov
(bad)
inc
cmps
cs
jae
ret
add
push
das
sub
pop
pop
or
lods
cmp
arpl
test
inc
ds
lods
loope
dec
ror
jbe
(bad)
and
sbb
retf
aad
repz
(bad)
push
and
test
pop
outs
in
nop
fcom
iret
adc
test
xchg
repz
imul
or
xchg
(bad)
sti
repz
push
cmp
into
in
push
call
sbb
xchg
xor
rcl
or
push
cld
sub
not
retf
sbb
sti
lods
xlat
repnz
icebp
mov
add
in
(bad)
dec
push
mov
xor
inc
(bad)
scas
pushf
or
cmp
inc
or
sahf
ror
(bad)
clc
stos
push
ins
jb
(bad)
mov
jae
sub
jmp
sub
fild
sub
rcl
sbb
cli
or
pop
jnp
inc
pop
mov
xchg
pop
mov
add
lahf
leave
imul
popf
mov
dec
(bad)
jge
sub
jmp
cmp
pushf
addr16
or
hlt
jl
jne
gs
(bad)
(bad)
push
das
(bad)
cli
lock
sub
pushf
stc
cmps
jmp
pop
pop
cld
cld
rol
(bad)
push
ins
adc
cmps
xor
xchg
stos
imul
cwde
test
dec
xlat
outs
inc
dec
jg
mov
(bad)
xor
in
aam
lock
loop
cli
push
pcmpgtb
and
aad
sub
xor
repnz
rol
dec
mov
cmp
and
(bad)
jmp
loopne
adc
call
fdivrp
xor
aaa
inc
fcomp
sub
(bad)
jge
or
stc
adc
xchg
xchg
lods
mov
sbb
dec
or
lds
mov
dec
ficomp
and
(bad)
cmp
lock
mov
pop
push
mov
mov
add
(bad)
(bad)
push
inc
cmp
push
repnz
fcmovnb
sti
or
leave
xchg
cmc
dec
into
mov
ja
cli
call
lods
es
cs
pop
xchg
cmp
mov
fisttp
into
call
dec
pop
cmp
pop
mov
sub
and
mov
(bad)
(bad)
call
(bad)
add
cmp
(bad)
std
cli
pushf
ja
push
pop
enter
mov
sub
push
hlt
mov
mov
lods
or
gs
clc
out
dec
sub
mov
push
mov
ret
and
sbb
loop
inc
fild
loop
pop
or
ret
jg
clc
scas
nop
fincstp
dec
jnp
ins
shrd
(bad)
call
mov
pushf
pushf
mov
xor
icebp
dec
xor
and
mov
push
push
loop
pop
(bad)
or
fs
or
sub
std
jno
les
sbb
add
jno
xchg
add
push
fs
adc
push
aam
loop
iret
in
jns
dec
jo
jmp
mov
aaa
or
mov
int
or
xchg
je
add
inc
cld
loop
pop
push
xor
out
cmp
(bad)
stc
cld
sti
mov
aas
enter
stos
dec
loope
jg
push
pop
mov
in
(bad)
(bad)
jg
(bad)
pusha
jg
test
adc
or
jecxz
xchg
mov
cmp
(bad)
push
in
in
jno
jnp
call
call
adc
adc
(bad)
(bad)
(bad)
dec
pop
sub
mov
jecxz
xor
or
or
rcr
mov
pop
mov
mov
jnp
cmp
sbb
mov
ss
mov
or
(bad)
jmp
mov
push
test
or
jecxz
clc
or
loopne
into
xchg
leave
sar
push
xor
(bad)
xor
loopne
add
xor
shr
adc
clc
sbb
push
std
mov
test
push
ror
mov
cli
(bad)
(bad)
(bad)
jl
imul
sbb
sbb
push
ror
dec
das
test
xchg
pop
call
xor
and
(bad)
jmp
loop
bnd
call
or
or
cmp
(bad)
(bad)
call
test
clc
ficomp
ja
or
fdivr
cli
inc
pop
cmp
inc
dec
clc
(bad)
(bad)
inc
pop
ret
cli
mov
xor
imul
sbb
xor
(bad)
jmp
mov
xchg
jb
mov
mov
jno
sbb
sbb
out
repnz
not
imul
xchg
xor
imul
sub
(bad)
(bad)
(bad)
dec
mov
fucomip
mov
ds
inc
adc
dec
push
mov
enter
cs
mov
gs
jmp
iret
xchg
mov
ins
push
mov
in
adc
mov
or
(bad)
(bad)
dec
outs
mov
or
scas
(bad)
cdq
movs
push
test
sbb
out
jb
hlt
push
(bad)
dec
pusha
ret
or
stc
adc
hlt
xchg
jo
rol
(bad)
(bad)
push
mov
jns
cmp
xchg
daa
push
cmp
inc
scas
xchg
xor
xchg
ficomp
fdivrp
cmp
(bad)
inc
dec
(bad)
clc
add
push
fcmovne
jno
(bad)
pop
mov
loopne
pushf
dec
adc
push
push
jmp
xchg
(bad)
mov
add
sbb
js
xor
(bad)
nop
push
ins
lock
(bad)
inc
ja
jge
xchg
std
and
(bad)
(bad)
das
mov
out
cmp
(bad)
inc
mov
mov
xchg
dec
cs
mov
popf
xchg
xor
mov
(bad)
push
cmp
dec
hlt
inc
nop
jno
mov
pop
cmp
mov
nop
or
jo
mov
lds
outs
data16
cld
cmps
(bad)
out
hlt
(bad)
mov
shl
mov
shl
cmp
adc
lahf
xor
inc
xchg
mov
test
daa
pop
add
(bad)
mov
add
js
faddp
jle
inc
stos
dec
push
lock
cmps
sbb
mov
(bad)
call
or
mov
fsubr
sub
cmps
mov
shl
pop
(bad)
fst
dec
arpl
loope
(bad)
scas
ss
inc
loop
mov
push
mov
lock
stos
(bad)
cmp
jl
mov
push
dec
jge
shl
mov
cmps
clc
or
jnp
lods
and
clc
cmp
outs
outs
popf
add
enter
pop
shr
pop
cwde
push
sbb
ss
das
cmps
shl
adc
mov
cmp
(bad)
(bad)
outs
sbb
xor
cld
pop
and
out
mov
out
pop
inc
or
and
mov
sub
jno
(bad)
jg
fmul
and
inc
jge
call
sar
xchg
aaa
(bad)
(bad)
push
dec
lods
pop
jge
adc
push
out
out
test
aam
mov
adc
sub
(bad)
sar
int3
sbb
jmp
push
sar
push
and
das
inc
push
loop
mov
int3
loopne
fimul
mov
mov
jae
(bad)
(bad)
(bad)
jl
inc
mov
push
pushf
leave
mov
jp
inc
icebp
outs
mov
sar
jnp
cmp
in
sbb
xchg
push
fsubr
mov
push
cmp
aad
push
not
daa
repnz
(bad)
adc
and
(bad)
sahf
push
pop
xchg
mov
rcr
xchg
call
ins
push
jmp
jecxz
fcom
clc
inc
mov
jg
ins
xchg
ficomp
push
sbb
mov
mov
cmps
jl
xor
test
fcmovnb
or
(bad)
(bad)
jmp
jnp
inc
pop
mov
dec
aam
fwait
xor
ror
sub
pop
loopne
dec
test
mov
in
into
mov
mov
jo
xlat
push
daa
pop
adc
(bad)
(bad)
in
call
or
xchg
cmp
adc
xlat
dec
mov
sbb
dec
add
fwait
dec
pop
jo
inc
test
push
popa
xchg
(bad)
(bad)
mov
adc
fnstcw
mov
test
pop
imul
in
push
cmp
mov
out
push
xchg
pop
xor
sub
mov
sqrtps
jle
(bad)
(bad)
(bad)
dec
mov
movs
sti
sub
push
mov
je
jle
retf
(bad)
in
jmp
(bad)
(bad)
jmp
jl
loop
jnp
icebp
pusha
sub
sub
in
fsubr
push
repnz
xor
(bad)
in
in
mov
xchg
(bad)
(bad)
(bad)
std
pop
xchg
push
mov
jl
movs
xor
pusha
cdq
jle
jecxz
arpl
cmp
and
dec
and
push
pop
xchg
pusha
outs
mov
call
in
xchg
inc
jo
aam
mov
aas
leave
cmp
(bad)
jmp
ret
xlat
cmp
xor
dec
aam
xor
cli
or
and
lahf
xlat
inc
sub
dec
(bad)
jge
daa
ins
outs
add
bound
aad
(bad)
call
jnp
int3
jns
inc
inc
inc
out
xor
test
ds
inc
mov
test
(bad)
jg
xchg
cmp
mov
outs
cmps
(bad)
sbb
xor
jne
jmp
sar
(bad)
mov
imul
(bad)
enter
jae
xchg
out
loop
pushf
pop
aaa
clc
(bad)
jg
mov
loop
lock
(bad)
lds
push
fld
xor
mov
cmp
or
out
xor
(bad)
in
ret
(bad)
or
dec
sbb
scas
adc
rcr
push
inc
or
call
(bad)
mul
jmp
(bad)
mov
in
sub
fisttp
(bad)
(bad)
inc
aaa
fsubr
das
icebp
jae
clc
addr16
loop
out
jb
mov
pop
mov
shl
lock
(bad)
push
clc
mov
adc
stc
(bad)
inc
pop
cmp
(bad)
(bad)
out
and
loop
pop
jmp
cmp
jmp
hlt
(bad)
(bad)
(bad)
stc
sub
fwait
cdq
mov
fwait
ja
aad
leave
inc
jg
mov
push
pop
cmp
fisttp
jo
push
scas
adc
xchg
push
ret
std
push
arpl
mov
inc
mov
or
push
cld
or
and
push
ret
pop
pop
ret
push
or
mov
mov
cmp
(bad)
(bad)
jmp
cmps
xor
xor
gs
pop
fstp
test
cmps
cmp
stos
ror
adc
dec
push
(bad)
cmp
stos
sbb
xchg
xor
movs
add
lds
(bad)
(bad)
cmp
mov
cmp
mov
div
adc
sub
mov
cmp
pop
dec
jmp
hlt
(bad)
mov
add
call
push
test
sbb
stos
jle
cmp
rol
and
test
mov
retf
(bad)
jg
lock
xor
inc
into
jmp
pop
repnz
das
or
jge
xor
sar
inc
(bad)
fisttp
cmps
pop
imul
sbb
inc
pop
xchg
(bad)
(bad)
call
xor
out
xlat
loop
xchg
dec
xchg
ins
sbb
sbb
push
cmp
(bad)
(bad)
push
and
js
inc
pop
xor
mov
jae
psllq
cmp
adc
jp
(bad)
(bad)
(bad)
call
(bad)
xchg
stc
int3
sar
rol
imul
mov
repz
cs
call
(bad)
pusha
mov
lds
pop
or
scas
jae
pop
or
scas
inc
pop
repz
xchg
ja
push
rcl
xchg
fisttp
mov
mov
mov
(bad)
rol
push
mov
(bad)
call
adc
add
loope
sbb
das
mov
mov
lds
jbe
aam
jge
cli
mov
add
icebp
xchg
push
jne
mov
inc
leave
sbb
(bad)
(bad)
jmp
stos
mov
inc
sub
pop
and
or
sub
fiadd
mov
(bad)
sub
pushf
sbb
lock
and
sub
clc
sbb
pop
jns
mov
popa
push
or
pop
leave
add
and
jo
sti
call
dec
(bad)
xlat
pop
not
push
das
aam
add
(bad)
(bad)
(bad)
jg
push
adc
sar
xchg
loope
retf
cs
sbb
bnd
(bad)
into
jns
sub
(bad)
(bad)
dec
in
jle
daa
mov
dec
and
lock
or
sub
jmp
jp
dec
mov
mov
dec
loope
push
test
mov
xor
call
pop
push
sub
loope
inc
sar
(bad)
dec
lods
mov
push
pop
xor
adc
jns
sbb
cmp
mov
retf
cwde
pop
leave
and
out
jne
fidivr
xchg
push
xchg
inc
out
lods
cmps
push
(bad)
mov
pop
fidivr
fsub
cld
xor
push
xor
add
clc
(bad)
jmp
inc
cli
xor
xchg
lods
ret
jmp
aaa
std
push
xchg
dec
jnp
test
push
push
addr16
(bad)
call
mov
test
sar
cs
(bad)
xchg
icebp
lods
mov
lds
mov
jmp
jmp
sub
movs
fnstenv
cli
fldenv
les
xor
add
xor
xchg
call
jne
fincstp
shl
xchg
pop
out
fs
(bad)
call
mov
fbstp
jmp
adc
cmp
add
pop
cld
and
xor
cmp
sbb
fidiv
aam
xchg
xchg
(bad)
(bad)
inc
pusha
pop
movs
dec
aam
inc
jmp
lock
retf
retf
jno
retf
das
sub
sti
es
mov
std
daa
jl
mov
es
(bad)
(bad)
(bad)
cld
cmp
or
mov
jb
adc
test
cmp
pop
jnp
ins
popa
fsubr
lea
call
sbb
push
clc
jl
ficomp
dec
repnz
dec
jp
and
stos
mov
pusha
mov
call
inc
loop
pop
add
in
xlat
mov
ins
ret
pop
cmc
(bad)
call
sbb
xor
xor
sar
js
add
(bad)
(bad)
inc
lahf
mov
cwde
jecxz
inc
inc
call
imul
jg
adc
lea
out
(bad)
(bad)
(bad)
jmp
ins
xor
inc
lahf
shr
mov
add
aas
mov
(bad)
test
movs
pop
(bad)
(bad)
push
jmp
push
jge
jb
enter
pop
retf
nop
stos
js
ret
xor
(bad)
adc
sti
jnp
gs
loop
or
inc
popa
inc
ds
xchg
ror
pop
repz
(bad)
out
adc
pushf
cli
xor
inc
jmp
push
mov
(bad)
out
or
pop
push
lahf
and
mov
pop
das
dec
fdivr
(bad)
sub
aad
(bad)
jae
xchg
pop
out
push
push
loope
call
ret
jmp
sub
dec
jg
in
ret
adc
test
pop
pop
add
pop
das
ins
jns
icebp
das
pop
arpl
or
popf
dec
add
sub
repz
jb
out
js
jmp
out
cmp
lock
xchg
add
pushf
rcl
test
fidivr
call
cli
int3
jle
(bad)
out
mov
das
rcr
add
cld
vmread
push
xchg
cmp
add
(bad)
(bad)
call
retf
leave
in
jmp
mov
push
imul
scas
test
(bad)
sar
mov
lea
xor
aaa
dec
and
inc
cmp
(bad)
(bad)
(bad)
fsub
cmps
pop
rcr
mov
xor
sbb
rcl
dec
outs
add
leave
mov
lods
adc
xor
(bad)
dec
rep
push
mov
mov
jnp
je
pop
je
fcmovnb
(bad)
push
mov
dec
push
pop
dec
hlt
adc
(bad)
(bad)
mov
dec
(bad)
fld
add
mov
and
in
in
xchg
add
mov
call
std
lea
clc
and
(bad)
and
outs
cld
shr
loope
jmp
cli
mov
lock
sbb
cdq
jmp
clc
mov
sub
xor
les
(bad)
(bad)
(bad)
call
sub
imul
sahf
in
dec
retf
clc
cmp
(bad)
sahf
ins
xchg
sar
sub
neg
(bad)
jmp
stos
clc
inc
jp
mov
pop
jle
int3
iret
gs
mov
in
fcomip
imul
(bad)
cld
jmp
out
ret
and
sub
mov
dec
rcl
mov
bound
inc
adc
test
fisttp
adc
mov
xor
scas
adc
(bad)
out
aaa
jmp
add
sbb
adc
jmp
push
mov
lahf
movs
jl
(bad)
(bad)
(bad)
jg
push
std
adc
xor
and
addr16
push
and
mov
shr
pop
pop
outs
jge
std
fcomip
(bad)
push
jb
push
jno
dec
cmp
add
add
pushf
int3
push
push
xor
pop
cmp
out
push
xor
or
pop
(bad)
sbb
pop
or
adc
ss
or
loop
push
jge
pushf
sub
call
sbb
sbb
out
sar
(bad)
(bad)
(bad)
inc
adc
dec
scas
xor
shl
xchg
mov
pop
fistp
mov
jmp
inc
cmp
imul
mov
sub
push
int3
xor
shl
sbb
sub
dec
push
dec
jl
sti
fnsave
mov
mov
adc
call
cli
loop
sahf
or
test
fs
je
xchg
fst
dec
push
cmp
popf
aam
outs
call
push
xor
or
(bad)
(bad)
(bad)
aas
mov
aam
movs
das
sub
fcmovnbe
jl
pushf
push
sbb
test
lods
xchg
call
mov
mov
lods
sbb
(bad)
call
inc
rcl
sti
int3
movs
pusha
maskmovdqu
not
sub
pop
inc
and
icebp
(bad)
call
loope
jmp
add
pop
sub
xchg
ror
mov
mov
idiv
out
ss
clc
dec
adc
gs
ja
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
xor
xchg
or
into
dec
adc
inc
test
je
(bad)
fisubr
and
(bad)
sbb
(bad)
(bad)
(bad)
jmp
repnz
cmps
js
jge
xchg
pop
sar
and
cmp
dec
ret
(bad)
(bad)
(bad)
(bad)
jl
les
cld
push
ins
scas
xchg
daa
cmp
sti
test
js
push
or
dec
scas
push
(bad)
(bad)
jmp
jp
test
cmps
xor
mov
stos
mov
jl
jecxz
jmp
rcr
into
ins
(bad)
(bad)
mov
mov
mov
stos
jns
imul
(bad)
in
fucom
ret
and
(bad)
inc
add
pop
and
and
lods
aaa
adc
and
mov
cli
dec
fidivr
aaa
push
int3
pop
ds
icebp
repnz
pusha
loop
(bad)
ja
les
mov
dec
xchg
in
lahf
in
js
pop
aam
mov
xor
jp
ret
call
out
stos
aad
pop
mov
sub
arpl
push
pop
adc
std
mov
call
(bad)
(bad)
dec
sar
mov
movs
lock
out
(bad)
cmp
(bad)
mov
(bad)
retf
dec
jbe
pushf
mov
sti
inc
repz
(bad)
(bad)
(bad)
jmp
movs
jmp
daa
and
pop
dec
mov
pop
mov
je
jle
pop
add
outs
and
retf
mov
xchg
push
bnd
jno
jnp
push
or
sub
xchg
popa
stos
push
pop
std
call
push
adc
cld
fs
cmp
lahf
dec
push
mov
scas
popf
push
fisub
xchg
adc
lock
dec
and
cmps
pop
pop
nop
pop
cwde
iret
sub
or
repnz
sub
xor
out
cmp
sahf
lods
jle
jmp
(bad)
and
jae
mov
or
jns
(bad)
mov
sti
dec
arpl
lock
inc
fs
call
add
pop
jnp
movs
mov
hlt
(bad)
fbld
jg
loop
lods
out
sbb
test
test
(bad)
fist
jle
popf
mov
mov
out
add
(bad)
jmp
fidivr
(bad)
pop
jne
jmp
inc
sbb
add
mov
pop
xchg
mov
inc
out
push
adc
xchg
loope
js
fcomip
(bad)
dec
fsubr
xor
jg
frstor
scas
push
sbb
inc
shl
xor
adc
(bad)
(bad)
push
xor
movs
add
dec
ret
shl
out
jle
dec
dec
test
in
jle
scas
xlat
out
cmc
jmp
cwde
pop
hlt
dec
push
loopne
iret
repz
fsub
repz
fdivr
(bad)
(bad)
call
stos
mov
jo
lock
aam
and
jle
enter
fwait
std
add
fstp
mov
outs
(bad)
call
or
add
inc
mov
ins
push
or
call
and
cmp
lock
(bad)
inc
push
dec
and
mov
fcomp
sub
das
or
stos
inc
inc
sbb
adc
dec
xchg
mov
xor
mov
or
pop
loopne
in
mov
dec
dec
fistp
xchg
cmp
(bad)
pushf
repz
fadd
push
adc
sub
push
cmp
or
scas
jo
xlat
mov
mov
pop
and
xor
jb
scas
popa
xlat
jg
stos
sub
push
je
ror
dec
ins
jb
sar
(bad)
dec
ins
mov
test
cld
pop
test
loop
loopne
jge
xor
jbe
std
mov
pop
jl
inc
imul
lods
popf
call
ja
cmp
mov
ret
push
bnd
adc
sbb
sub
adc
push
push
out
test
in
pop
push
out
(bad)
(bad)
jmp
nop
neg
adc
adc
pop
test
outs
in
stc
call
mov
jnp
test
push
inc
push
ja
jmp
neg
jnp
movs
(bad)
(bad)
mov
(bad)
call
cmps
call
outs
outs
sti
sub
cmps
ds
push
pop
clc
and
sub
pop
(bad)
(bad)
(bad)
jmp
push
xlat
jmp
sar
out
iret
fdivr
fist
aaa
jo
lahf
(bad)
dec
(bad)
mov
ret
sub
ret
loopne
pop
cdq
mov
cmp
ret
dec
fimul
stos
and
xlat
or
push
pop
js
aas
retf
inc
jmp
or
ja
cmps
dec
call
fldln2
out
mov
and
(bad)
sub
(bad)
jg
dec
jo
xor
aad
mov
push
cld
(bad)
(bad)
call
data16
push
mov
sahf
movs
xchg
(bad)
iret
cmp
sbb
and
leave
leave
ja
jmp
cmp
pop
dec
fmul
(bad)
(bad)
call
jle
sbb
movs
or
sub
in
jb
div
jo
scas
jg
(bad)
rcr
mov
iret
jno
mov
out
push
test
xchg
push
fiadd
shl
mul
(bad)
inc
shl
pusha
loopne
mov
loope
inc
adc
lock
movs
(bad)
jmp
pop
cdq
ss
mov
aad
xchg
(bad)
or
add
cmp
inc
repz
push
add
cli
jmp
enter
or
cmp
(bad)
out
mov
mov
aad
mov
mov
pop
mov
stc
add
std
pop
push
pop
ss
(bad)
jg
(bad)
(bad)
call
mov
mov
adc
jp
dec
mov
inc
mov
aam
sbb
sahf
jg
call
mov
add
inc
sti
rcl
ror
(bad)
lock
(bad)
(bad)
call
in
sar
jmp
jmp
fidivr
sbb
hlt
fiadd
cmps
call
sbb
push
(bad)
outs
shl
int
leave
mov
(bad)
(bad)
(bad)
fsub
mov
xchg
sbb
sub
sti
add
out
aam
or
mov
aad
mov
cmp
xchg
cli
pop
lock
(bad)
inc
std
dec
dec
push
std
jg
xor
lods
jno
dec
aas
add
ds
jns
pop
cmp
sbb
xor
(bad)
(bad)
mov
fisub
je
and
jo
(bad)
out
popf
aad
mov
cld
imul
ja
xlat
xchg
mov
mov
adc
mov
sub
das
pushf
addr16
(bad)
(bad)
(bad)
inc
cs
push
cmp
enter
gs
sbb
inc
sti
sub
push
neg
out
and
div
xchg
(bad)
fwait
stos
imul
jmp
daa
cld
int
push
mov
pop
xchg
pop
cmp
push
scas
xchg
out
push
repz
(bad)
(bad)
inc
into
pop
fwait
cmp
xor
and
jle
mov
jb
enter
sbb
cmps
sbb
(bad)
pop
or
popa
or
js
dec
cld
mov
stc
push
push
xor
clc
cmps
fiadd
mov
inc
mov
mov
cli
(bad)
jmp
popf
addr16
push
scas
test
jmp
aam
push
mov
jmp
xchg
push
pushf
mov
sbb
aas
mov
xchg
(bad)
(bad)
(bad)
(bad)
in
cdq
(bad)
sub
into
out
data16
dec
out
jg
sbb
inc
pushf
xchg
jl
cmps
xor
(bad)
(bad)
(bad)
inc
lock
xchg
loope
mov
xlat
lods
xchg
or
xlat
ds
aad
jnp
movs
inc
fldcw
(bad)
(bad)
call
jb
les
scas
and
or
into
jb
xor
movs
(bad)
(bad)
(bad)
call
fucomip
aaa
aad
mov
iret
in
imul
mov
add
or
daa
les
and
cdq
xor
pop
gs
scas
es
jmp
sbb
fwait
dec
mov
in
mov
lahf
scas
(bad)
(bad)
jmp
mov
mov
les
lods
inc
loopne
dec
(bad)
mov
(bad)
inc
inc
enter
sbb
int3
sti
js
retf
mov
pop
jmp
call
aad
pop
xor
fs
push
jmp
es
xchg
adc
dec
mov
repz
inc
cld
(bad)
(bad)
inc
nop
in
mov
dec
add
xchg
add
cmc
push
es
and
punpckhbw
xor
das
(bad)
(bad)
push
std
mov
loope
jne
sub
or
retf
enter
loopne
push
push
mov
dec
out
mov
movs
mov
mov
cli
adc
mov
fild
pop
(bad)
(bad)
(bad)
jmp
mov
xlat
fstp
push
rcr
mov
cmc
pushf
jle
daa
add
(bad)
jg
jmp
(bad)
push
cmc
dec
mov
push
sbb
xchg
jmp
cmp
(bad)
call
out
pop
inc
mov
popf
test
jbe
or
sub
push
test
cdq
cmp
std
cmp
jno
call
nop
mov
push
jo
jnp
retf
not
int3
jp
dec
aad
aaa
fbld
cld
(bad)
mov
add
std
xchg
pushf
js
xchg
cmp
(bad)
(bad)
(bad)
aas
or
cli
or
pop
ret
add
sahf
jmp
or
cmc
pusha
daa
div
(bad)
(bad)
dec
frstor
mov
ds
dec
paddq
stos
mov
pop
push
and
pop
std
(bad)
call
jmp
not
hlt
mov
jmp
or
sub
(bad)
(bad)
push
dec
imul
call
cli
outs
dec
shr
jmp
cld
hlt
xor
xchg
jbe
cld
and
ja
jg
je
cmps
jle
jo
add
inc
mov
mov
jmp
int3
mov
sbb
xchg
(bad)
jg
adc
sahf
cmp
push
mov
(bad)
(bad)
jg
mov
mov
cmc
mov
push
es
mov
cmp
das
mov
sar
repz
dec
imul
stos
rep
not
mov
(bad)
jg
mov
mov
jge
hlt
in
iret
ds
out
hlt
(bad)
(bad)
(bad)
push
test
bound
lea
clc
retf
fist
call
dec
inc
(bad)
(bad)
(bad)
call
or
jbe
rol
pop
lea
mov
call
call
or
dec
pop
add
xlat
sbb
(bad)
out
popf
inc
out
iret
repnz
(bad)
(bad)
(bad)
jmp
or
or
mov
sub
sbb
ficomp
lock
out
cmp
push
sbb
iret
ret
jp
call
(bad)
(bad)
jmp
fsubr
call
pop
pop
adc
push
sbb
outs
sti
mov
(bad)
(bad)
call
or
mov
mov
loope
mov
or
mov
or
pop
dec
std
jg
xor
dec
outs
cmp
xchg
pop
ror
call
jge
jmp
mov
aas
frstor
aas
mov
clc
scas
outs
jg
jle
adc
not
cmps
(bad)
inc
ret
ins
int3
cmp
out
or
inc
jmp
ins
dec
pop
mov
push
(bad)
(bad)
(bad)
jg
adc
or
cmp
inc
mov
shr
shr
dec
inc
scas
ins
imul
push
xchg
mov
lea
(bad)
das
sbb
add
das
dec
ror
dec
scas
(bad)
add
push
inc
pop
dec
fist
pusha
arpl
sbb
or
std
adc
sar
cmp
ss
push
int
cmps
push
dec
push
mov
(bad)
jmp
pop
sbb
sti
cld
in
sub
push
xor
(bad)
jg
movs
jo
aad
sbb
xchg
pop
adc
inc
cmc
fs
stc
jle
bnd
push
sti
stc
cmc
jl
sbb
cmps
cmp
popf
sub
dec
rcr
in
(bad)
jg
or
loop
rcl
les
xchg
pop
cmp
inc
jmp
gs
dec
out
inc
gs
nop
out
in
jmp
and
in
std
mov
push
(bad)
mov
jl
stos
mov
or
sub
clc
jg
or
stc
retf
mov
int
retf
dec
or
add
test
pop
cmp
ds
aam
jae
dec
add
imul
mov
xor
(bad)
inc
clc
fidiv
mov
xchg
data16
jb
stc
cmovns
mov
(bad)
(bad)
dec
mov
push
js
test
mov
or
pop
fstp
push
lock
pop
repnz
and
fbld
ret
clc
push
mov
retf
jmp
mov
push
fnsave
ret
movs
mov
and
movs
into
push
pop
test
(bad)
(bad)
(bad)
jmp
inc
movs
push
add
fs
scas
jecxz
(bad)
mov
jg
mov
sub
xchg
inc
mov
mov
mov
inc
jo
inc
add
loopne
mov
lock
xor
jg
loop
mov
(bad)
arpl
pop
dec
mov
lods
add
jns
(bad)
sbb
lea
cmp
jle
call
fsubr
(bad)
ja
stc
mov
iret
out
cmps
int3
push
mov
leave
es
sub
dec
lods
mov
out
bound
outs
(bad)
inc
mul
sbb
mov
pop
aad
je
mov
push
cmc
idiv
fwait
jae
fcom
and
sbb
ret
cmps
push
(bad)
(bad)
jmp
fisubr
jns
gs
push
retf
iret
push
mov
fdiv
repnz
(bad)
jmp
jb
(bad)
jg
(bad)
fdiv
inc
sub
or
sub
xor
(bad)
(bad)
jmp
mov
popa
push
jno
jb
mov
add
xchg
leave
cmc
mov
dec
sar
jnp
popa
sbb
push
lock
cmc
pop
cwde
jnp
push
movs
(bad)
in
(bad)
call
scas
xor
imul
ja
xor
jge
gs
(bad)
push
outs
clc
(bad)
(bad)
(bad)
call
sub
mov
in
mov
inc
test
mov
add
les
pop
movs
fdiv
or
pop
mov
sbb
daa
fs
push
in
int
push
(bad)
cmp
movs
xchg
fidiv
(bad)
call
(bad)
sti
jne
adc
fist
je
(bad)
jmp
fsubrp
push
inc
jns
ins
push
and
(bad)
(bad)
ficom
(bad)
mov
cmp
mov
xchg
xchg
(bad)
sub
push
scas
inc
inc
cld
inc
out
cmps
mov
fisttp
jmp
sti
add
and
es
(bad)
(bad)
jmp
pop
int
pop
fbld
xor
cmps
fimul
mov
adc
dec
jp
ja
mov
xchg
(bad)
(bad)
(bad)
inc
(bad)
adc
or
ja
pavgw
sub
leave
lds
and
sti
xor
pusha
adc
cmc
(bad)
(bad)
(bad)
jmp
ror
leave
push
xchg
es
imul
lahf
dec
inc
push
lods
mov
js
adc
dec
mov
fisubr
loop
pop
inc
push
pop
dec
cs
cmp
std
(bad)
dec
xchg
pop
xlat
xlat
xchg
xchg
jge
out
dec
stos
mov
mov
lock
fistp
cmps
jge
jo
and
(bad)
es
jmp
hlt
(bad)
push
dec
mov
popf
test
xchg
fisubr
xchg
mov
push
shr
retf
cdq
fistp
lods
fstp
sub
xchg
dec
push
out
or
(bad)
push
xchg
mov
pop
push
ret
pop
leave
push
ss
cmc
pop
(bad)
call
cld
aam
lock
es
mov
ds
lock
push
mov
pop
int3
mov
xor
call
push
aas
sti
mov
xor
pusha
fnstsw
fmul
mov
push
xor
(bad)
jmp
dec
sahf
mov
mov
fwait
adc
sbb
pop
call
jmp
push
(bad)
inc
cmp
cmp
jo
xchg
call
and
jno
xor
sbb
cmp
push
dec
cdq
cmc
scas
(bad)
pop
cmp
lds
dec
jae
add
(bad)
(bad)
jge
xlat
inc
jno
dec
cmps
pop
shl
cmc
inc
call
mov
push
add
ror
mov
mov
jmp
cli
push
cmp
sub
sbb
iret
pop
cli
jg
(bad)
(bad)
(bad)
(bad)
inc
mov
xchg
(bad)
pop
out
je
ficomp
rcl
jg
mov
mov
sbb
cmp
(bad)
(bad)
push
ins
sub
push
sar
popa
sbb
aaa
or
clc
add
pop
cmps
cmp
movs
mov
push
(bad)
jmp
ss
cmps
ret
(bad)
in
test
dec
sbb
push
push
cmc
(bad)
(bad)
call
xor
repz
das
aas
je
xor
popa
sbb
cli
inc
packsswb
jp
dec
rcr
je
popa
rol
ficom
dec
(bad)
(bad)
(bad)
call
test
sub
ins
or
sub
test
add
and
adc
jmp
pop
and
sbb
xchg
outs
cmp
out
fidiv
mov
inc
hlt
int3
std
js
jle
adc
cs
jo
arpl
jae
lahf
ret
rcl
(bad)
mov
or
jg
add
or
fild
js
and
and
gs
dec
movs
cld
(bad)
(bad)
dec
cmp
fidivr
fwait
and
inc
and
dec
clc
clc
or
outs
and
in
mov
cld
jg
scas
into
jl
mov
dec
cli
mov
(bad)
(bad)
jmp
lock
mov
rcr
mov
pop
shl
std
xchg
inc
xor
sub
nop
rol
arpl
ds
call
pop
(bad)
pop
mov
pop
sbb
call
aam
or
pop
in
and
das
cli
push
xor
pop
or
icebp
(bad)
aam
ss
icebp
call
(bad)
shr
sbb
push
(bad)
(bad)
inc
cmps
xchg
mov
inc
out
fs
div
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
jge
test
imul
dec
sar
sbb
(bad)
pop
or
sub
fcmovu
lds
in
fiadd
loop
cmps
dec
add
sub
(bad)
out
cmps
xchg
(bad)
cli
les
int
inc
test
pop
lods
jmp
retf
popa
cld
push
xchg
adc
shl
add
in
sub
in
das
jnp
sti
(bad)
(bad)
jmp
sbb
mov
sub
enter
inc
adc
xchg
ja
(bad)
(bad)
dec
psubq
retf
mov
ret
clc
hlt
(bad)
fistp
cld
inc
lods
(bad)
jmp
fisttp
cmp
lods
shl
hlt
arpl
cmp
dec
(bad)
int3
clc
pop
cmp
lock
push
call
mov
(bad)
push
lock
and
add
inc
mov
push
in
call
(bad)
(bad)
push
and
push
imul
or
pop
or
ret
movs
idiv
loope
sar
(bad)
inc
sbb
inc
call
xor
jb
fidiv
(bad)
pop
and
and
sbb
scas
fsubr
out
push
xchg
mov
(bad)
(bad)
(bad)
mov
ret
mov
xchg
fsubr
or
(bad)
in
rcl
jns
dec
jecxz
add
stos
and
xlat
cmp
cmp
xlat
(bad)
(bad)
cmp
test
ds
into
xchg
rcl
xchg
push
sub
das
mov
scas
je
stc
popa
sub
data16
call
fcmovbe
mov
dec
mov
(bad)
(bad)
jns
adc
clc
movs
push
dec
enter
fld
xchg
(bad)
jmp
lock
push
sbb
das
cli
xor
mov
push
jg
(bad)
(bad)
jmp
ja
ins
inc
cld
add
xchg
mov
and
push
xor
in
xchg
(bad)
(bad)
jmp
xchg
push
dec
inc
fwait
int
ins
ret
sbb
fsub
push
in
inc
ss
test
cwde
(bad)
(bad)
(bad)
jmp
ret
ror
jo
je
cmp
mov
xchg
or
cmps
(bad)
(bad)
(bad)
mov
add
xchg
inc
ror
repz
cmps
(bad)
(bad)
mov
add
rol
(bad)
adc
xchg
xchg
ins
call
inc
inc
jo
pop
or
add
jne
movd
sub
lods
push
push
gs
cmp
call
mov
jnp
sbb
stc
push
cmp
rcl
xchg
xchg
int
mov
aad
imul
or
adc
fmul
imul
dec
(bad)
(bad)
(bad)
(bad)
inc
in
call
inc
data16
cmp
les
push
inc
mov
call
jg
(bad)
(bad)
(bad)
inc
fdivrp
mov
cld
xchg
mov
and
stos
lods
lods
icebp
fstp
test
sti
sbb
inc
xchg
fstp
jge
mov
movs
dec
push
(bad)
not
cmp
xchg
aaa
fdivrp
(bad)
(bad)
dec
lds
mov
leave
xor
fimul
movs
test
mov
mov
cdq
mov
pusha
sbb
and
ins
std
pop
(bad)
(bad)
jg
or
push
lea
add
jns
dec
mov
nop
lahf
les
dec
(bad)
(bad)
(bad)
dec
outs
xchg
xchg
(bad)
and
je
mov
cwde
test
mov
jmp
lock
jmp
inc
push
(bad)
stos
and
and
loopne
lahf
std
(bad)
(bad)
mov
mov
cmp
fsub
pop
mov
and
xchg
gs
into
js
jl
cld
push
push
jle
fs
pop
ins
das
stc
xchg
test
imul
clc
call
sbb
jle
jp
ds
mov
ret
push
iretw
inc
dec
inc
fisubr
cwde
addr16
mov
cmp
or
push
mov
or
mov
mov
xchg
ins
mov
sbb
jmp
call
add
fwait
adc
push
loope
sub
and
outs
in
push
repz
push
lds
sti
and
jle
xchg
int
xchg
out
ja
cld
pop
lahf
jae
sub
add
adc
(bad)
jmp
retf
sub
retf
pop
sahf
das
push
popf
ror
push
pop
xlat
in
pop
jp
(bad)
(bad)
(bad)
dec
add
aas
in
(bad)
in
sbb
jno
mov
pop
push
aad
mov
pop
dec
add
dec
xchg
and
sar
lock
push
mov
fxtract
imul
cmps
(bad)
das
add
xor
in
hlt
dec
movs
push
imul
ret
xlat
mov
pop
test
mov
jge
call
test
div
(bad)
mov
faddp
mov
clc
ret
ins
xchg
in
in
jne
pop
std
fistp
fsub
jne
sahf
pop
cld
lods
xor
cmps
ss
(bad)
(bad)
mov
out
push
test
mov
stos
ret
les
ror
call
fisttp
push
push
fsub
test
aas
jg
addr16
add
(bad)
(bad)
jl
sahf
and
repnz
mov
inc
mov
push
and
(bad)
call
mov
aaa
dec
jl
out
jmp
inc
mov
outs
(bad)
cmp
dec
lock
push
jp
popf
(bad)
in
mov
sbb
mov
outs
xchg
and
(bad)
jg
(bad)
mov
jecxz
and
aaa
cmc
sub
cli
mov
dec
movs
and
loopne
(bad)
out
jp
setge
idiv
stos
jmp
jns
and
(bad)
jmp
sbb
mov
mov
in
call
sbb
stos
inc
push
in
(bad)
(bad)
in
cmp
adc
in
in
mov
aaa
jbe
push
into
clc
dec
inc
pushf
pop
(bad)
test
lock
fbstp
jge
jge
(bad)
(bad)
(bad)
push
out
and
jmp
stc
cmp
inc
in
pop
into
arpl
jae
aad
xor
sar
fisubr
xchg
add
dec
cs
xchg
pop
pop
or
jmp
fisub
sbb
or
(bad)
xchg
jmp
push
test
sub
ins
sbb
test
add
into
icebp
jb
(bad)
jg
(bad)
mov
mov
jmp
aam
sub
loope
(bad)
(bad)
call
or
repz
pop
ficom
push
pop
sbb
mov
ret
(bad)
cli
cmps
(bad)
inc
mov
(bad)
jae
mov
pop
and
call
sbb
jl
dec
shl
out
inc
fs
push
(bad)
and
mov
sahf
(bad)
jmp
je
xlat
inc
mov
xchg
repz
loopne
jno
sbb
xchg
ins
sub
std
test
bound
lock
(bad)
xor
dec
push
xchg
outs
sub
pop
sti
(bad)
ffree
fmul
(bad)
(bad)
jg
bound
pop
(bad)
or
cs
and
sub
and
inc
add
mov
jmp
lahf
sub
pop
or
pop
pop
das
and
loope
(bad)
push
rcl
lock
stos
adc
dec
scas
bound
(bad)
icebp
(bad)
(bad)
(bad)
(bad)
call
and
xchg
repnz
pop
idiv
cs
xor
xchg
xor
pop
mov
jmp
ins
and
mov
mov
bound
mov
(bad)
(bad)
inc
mov
data16
add
movs
sbb
cmp
daa
rol
fist
(bad)
dec
(bad)
and
mov
stc
lods
dec
outs
gs
(bad)
(bad)
jmp
arpl
call
jp
cli
xor
push
jae
rcl
cmp
scas
clc
jmp
inc
jg
fcom
mov
scas
xor
jno
scas
xor
adc
sbb
scas
out
dec
repz
inc
lods
add
sbb
(bad)
stos
adc
jmp
pop
jg
test
add
scas
mov
push
cmc
(bad)
dec
ja
add
dec
loop
push
adc
jmp
or
(bad)
mov
jae
push
imul
mov
pop
icebp
call
out
shr
dec
sar
(bad)
xlat
mov
(bad)
jg
mov
xor
add
pop
mov
pop
pop
movs
xor
out
pop
hlt
(bad)
(bad)
mov
call
ins
cdq
sahf
arpl
in
call
(bad)
(bad)
jmp
out
ins
lods
sub
pop
sub
xchg
add
jo
cmp
push
mov
scas
xchg
icebp
loop
fs
pop
nop
in
loop
pop
add
ja
mov
adc
cdq
mov
bound
mov
std
cmc
or
nop
and
leave
loopne
sbb
cmovns
mov
call
loopne
iret
lods
ins
pop
mov
stc
dec
mov
and
cmc
in
xor
ins
add
pop
popa
(bad)
(bad)
call
(bad)
pushf
inc
shl
out
push
gs
mov
jmp
or
(bad)
(bad)
inc
inc
js
inc
pop
imul
jnp
mov
int3
or
xchg
lea
push
dec
mov
jmp
data16
addr16
sbb
(bad)
(bad)
(bad)
mov
pop
xchg
aad
mov
sbb
sti
(bad)
mov
shl
das
in
into
aad
add
push
jo
(bad)
jg
xlat
add
adc
jbe
test
fs
xchg
(bad)
jne
inc
add
mov
cli
inc
shr
rol
sbb
jmp
lods
cmps
imul
sbb
inc
jle
jb
test
mov
or
add
shl
or
lods
xchg
dec
dec
sub
sub
sti
mov
cmp
les
(bad)
and
pop
test
in
ret
push
add
(bad)
dec
mov
aam
mov
mov
icebp
outs
mov
jmp
xchg
movs
scas
movs
repnz
iret
arpl
cmp
inc
lods
repnz
es
pop
aas
aas
jo
(bad)
jl
mov
jp
pop
mov
hlt
(bad)
(bad)
(bad)
out
mov
sbb
cmp
pop
ss
or
cmp
(bad)
(bad)
(bad)
fnstsw
pop
push
xor
int3
test
imul
push
psubsw
(bad)
sbb
pop
dec
xor
cdq
inc
ins
xchg
(bad)
dec
xchg
out
loopne
(bad)
call
mov
cmp
in
push
xchg
xor
call
movs
pop
push
mov
popf
imul
in
(bad)
inc
push
arpl
imul
sub
cs
mov
popf
mov
fwait
or
(bad)
(bad)
call
inc
jnp
push
mov
sub
mov
push
and
sbb
push
in
inc
call
mov
push
xor
xchg
test
or
(bad)
ds
lea
mov
cmp
enter
(bad)
fstp
pop
int
lods
clc
(bad)
(bad)
inc
loopne
or
retf
jno
jg
jnp
push
inc
sub
cmps
call
les
stos
(bad)
(bad)
jmp
(bad)
mov
sub
cld
pop
test
adc
xchg
(bad)
(bad)
cmp
aad
pop
sub
push
push
rcl
lds
inc
(bad)
mov
dec
mov
mov
(bad)
call
not
mov
add
dec
pop
ins
mov
retf
push
mov
add
(bad)
(bad)
(bad)
(bad)
fistp
xchg
test
and
out
mov
fld
xor
movs
daa
(bad)
pop
pusha
mov
loopne
or
xor
jl
mov
and
push
fiadd
(bad)
(bad)
jmp
sub
retf
in
icebp
jb
test
mov
jo
mov
adc
xor
and
aam
jle
mov
clc
cmp
mul
int
out
rcr
das
sub
aad
(bad)
jmp
data16
jo
dec
sbb
sete
pop
push
in
into
(bad)
or
dec
daa
(bad)
(bad)
(bad)
jmp
imul
rcr
cmp
in
imul
push
repz
mov
mov
pop
(bad)
(bad)
mov
je
adc
(bad)
std
(bad)
retf
cli
int3
fidiv
pop
js
push
(bad)
jl
outs
(bad)
dec
xchg
das
mov
inc
sub
pop
ss
inc
mov
ins
mov
(bad)
call
aad
pop
xlat
jae
(bad)
mov
repz
cmp
bswap
pop
mov
int3
push
xchg
mov
leave
push
mov
push
test
(bad)
(bad)
jmp
pop
dec
mov
xor
loop
stos
(bad)
retf
mov
not
or
xchg
out
mov
jg
adc
fadd
out
ds
or
lock
int
pop
(bad)
(bad)
(bad)
push
not
inc
cmc
pop
mov
repz
cld
dec
add
popa
cld
xor
ret
jnp
jo
(bad)
(bad)
(bad)
call
sub
dec
xor
scas
pushf
jae
ins
arpl
dec
iret
adc
shl
jmp
mov
pushf
aaa
jg
out
sbb
sbb
jmp
xor
in
shr
or
repz
hlt
xor
(bad)
cli
cmp
(bad)
or
(bad)
dec
cdq
xor
dec
jmp
xor
je
sub
jbe
mov
movs
fmul
adc
(bad)
(bad)
(bad)
push
sbb
xchg
or
addr16
sar
pop
adc
bswap
mov
(bad)
(bad)
(bad)
dec
pop
and
arpl
shr
imul
mov
mov
jmp
sbb
xchg
xchg
and
dec
clc
mov
out
jmp
cmc
shl
in
mov
dec
loop
(bad)
push
dec
inc
lock
jecxz
pop
hlt
jmp
mov
out
stc
pop
popa
(bad)
in
and
xor
(bad)
(bad)
mov
in
fld
pop
inc
push
and
popa
mov
pop
pop
in
sbb
push
fimul
mov
inc
and
cmps
xlat
test
pop
push
(bad)
xchg
push
inc
push
jbe
cdq
push
dec
call
mov
clc
movs
or
xor
pop
test
call
or
div
mov
cli
mov
xlat
push
jnp
jg
(bad)
(bad)
in
(bad)
jl
sub
jo
and
cwde
sbb
cmps
xor
add
jo
push
aam
add
(bad)
(bad)
push
and
ins
imul
daa
leave
pop
into
cli
test
jmp
stos
xor
outs
or
mov
mov
(bad)
jecxz
sti
lahf
sbb
clc
pop
push
stc
sub
cdq
mov
push
frstor
lock
xor
push
xchg
in
(bad)
(bad)
push
inc
loop
fcom
and
cmp
lods
mov
jg
sbb
pop
sti
mov
(bad)
(bad)
(bad)
(bad)
jl
je
mov
lahf
outs
fldenv
mov
pushf
sub
push
(bad)
push
ror
frstor
inc
gs
outs
(bad)
jmp
push
test
sbb
jecxz
sahf
inc
jp
neg
cdq
pop
push
rol
sbb
add
mov
mov
jg
dec
ss
mov
push
sub
jns
inc
mov
cmp
idiv
(bad)
mov
mov
inc
xchg
sti
sbb
or
mov
push
cmp
adc
mov
sub
(bad)
cmp
stos
cmc
push
pop
jg
adc
xchg
(bad)
mov
push
iret
out
call
test
arpl
(bad)
(bad)
(bad)
mov
aad
ja
fnstsw
dec
xchg
add
dec
jecxz
inc
ja
mov
call
ret
movs
fcmovnu
pop
xchg
int
(bad)
(bad)
jg
sub
outs
ret
xchg
call
icebp
sbb
fdiv
cli
inc
sar
sbb
mov
(bad)
(bad)
call
inc
repnz
mov
bound
dec
pop
scas
inc
pushf
les
cmp
(bad)
(bad)
(bad)
jmp
movlps
pusha
pop
sbb
jecxz
sub
je
fadd
stos
lods
jbe
out
and
(bad)
mov
repz
repnz
stc
xchg
pop
call
hlt
jg
pop
inc
add
stc
(bad)
pop
xchg
bswap
ja
int
clc
fwait
(bad)
sub
mov
icebp
repnz
stos
and
add
mov
(bad)
(bad)
cmp
or
xor
pop
mov
adc
add
jb
imul
push
aam
or
mov
mov
or
std
fild
adc
jecxz
dec
mov
jle
into
arpl
inc
mov
call
enter
nop
inc
add
inc
popf
mov
enter
ja
mov
sub
jmp
imul
popa
loopne
jmp
call
aas
mov
add
mov
or
xchg
std
movs
clc
data16
or
cwde
mov
idiv
aad
xchg
ins
leave
call
sub
push
xor
(bad)
(bad)
call
fsincos
pop
mov
adc
stos
out
cmp
(bad)
imul
push
inc
std
push
pop
and
mov
aad
dec
adc
cmp
pusha
jge
ins
(bad)
(bad)
jg
je
sbb
sub
call
outs
push
pop
add
fld
cmp
js
test
lods
pop
jne
push
in
out
(bad)
jmp
push
pushf
mov
add
dec
lods
or
(bad)
aas
jb
or
loop
pushf
shr
jmp
and
mov
jmp
call
es
and
lock
and
mov
jmp
add
mov
(bad)
(bad)
dec
inc
mov
sbb
movs
cmp
cvtps2pd
sbb
movs
xor
mov
pushf
pop
scas
fnstenv
jg
fisttp
inc
push
mov
xchg
jecxz
jnp
lods
inc
stc
(bad)
(bad)
jg
call
test
sti
repz
(bad)
mov
std
(bad)
(bad)
(bad)
jg
push
out
mov
pop
pop
imul
(bad)
aas
cs
push
and
jl
scas
sbb
pop
and
fadd
int
sar
loope
cmp
add
(bad)
(bad)
(bad)
fcomp
jecxz
fld
addr16
packuswb
add
test
sbb
clc
inc
les
pop
jmp
int
pop
aas
stc
add
hlt
outs
int
icebp
inc
mov
or
aam
jmp
pusha
xor
xchg
xchg
js
shl
sub
mov
(bad)
(bad)
(bad)
jg
mov
(bad)
lea
imul
stos
clc
loope
nop
jne
push
cs
xchg
(bad)
ja
(bad)
(bad)
(bad)
fbld
out
nop
fld
aad
push
dec
das
stc
sbb
pop
push
shl
jbe
(bad)
(bad)
(bad)
call
mov
nop
mov
js
jbe
jg
mov
lahf
dec
(bad)
das
inc
outs
mov
(bad)
(bad)
push
push
std
outs
daa
fisttp
nop
(bad)
lahf
stos
xor
scas
outs
dec
dec
fst
xchg
jle
xor
and
sahf
int
sbb
pop
xor
inc
add
addr16
iret
push
dec
hlt
and
stos
rcr
sbb
scas
or
xor
fs
push
add
inc
aam
(bad)
inc
ror
shl
retf
(bad)
xchg
jl
ret
mov
dec
or
(bad)
push
xchg
dec
mov
sbb
arpl
mov
into
add
or
push
repnz
mov
jbe
push
mov
rol
movs
cmp
(bad)
loop
clc
arpl
lods
dec
(bad)
mov
fidiv
imul
pop
pop
mov
jge
ror
cmp
(bad)
(bad)
dec
sub
jecxz
push
inc
mov
loopne
add
or
iret
inc
das
es
int3
or
and
stos
xchg
xor
inc
mov
lods
sub
ror
lock
dec
clc
push
and
iret
mov
loop
test
jle
dec
dec
and
sar
(bad)
call
jmp
xchg
jo
pop
gs
mov
mov
imul
mov
xor
push
xchg
cmp
into
rcr
loopne
sbb
(bad)
cmp
dec
or
sub
adc
(bad)
lods
inc
mov
mov
(bad)
(bad)
(bad)
jmp
sti
clc
sub
jb
push
push
push
aad
call
sbb
push
cli
inc
pop
in
(bad)
call
mov
js
imul
cmp
mov
add
jl
mov
(bad)
dec
jecxz
fwait
loopne
add
push
xchg
pushf
adc
in
sub
sti
(bad)
(bad)
(bad)
jmp
scas
pop
mov
jne
stc
pop
cdq
repz
fwait
in
(bad)
xchg
stos
out
std
call
push
aam
or
sahf
jmp
jne
sahf
fimul
or
push
outs
adc
inc
sub
mov
cld
call
cmp
sbb
push
clc
inc
rcr
mov
cld
jg
adc
xor
(bad)
jnp
mov
push
lods
cli
pop
(bad)
push
mov
inc
xchg
push
loop
ins
imul
sbb
loop
and
imul
dec
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
push
inc
icebp
aaa
mov
xchg
jp
loope
dec
jmp
lods
lods
push
cmp
fwait
cmc
pop
pop
cmc
(bad)
jmp
bound
jns
pop
mov
push
aaa
mov
and
(bad)
jnp
cld
fbld
fdivr
mov
jl
push
mov
les
jmp
fs
cmp
pusha
cmovno
(bad)
call
cld
sbb
jne
shl
jge
test
sbb
push
gs
jecxz
mov
push
aad
(bad)
das
out
cmp
(bad)
push
sbb
add
sbb
push
call
add
jno
lock
mov
mov
ficom
fidivr
(bad)
inc
xchg
jle
push
jmp
rcr
lods
int
mov
cmp
inc
(bad)
jp
mov
push
stos
xchg
adc
jl
fild
(bad)
(bad)
(bad)
jmp
inc
(bad)
jae
adc
jmp
adc
cmc
jae
mov
adc
dec
shl
push
cmp
(bad)
mov
(bad)
jmp
fld
dec
cmp
lock
pop
pop
pop
xor
sti
jl
sbb
(bad)
jg
xor
add
mov
add
inc
mov
jmp
and
mov
(bad)
jg
cmp
mov
das
ret
jbe
xchg
push
mov
scas
push
loop
jae
jo
xchg
push
fist
mov
mov
push
mov
lahf
loopne
lods
in
ins
pop
sbb
jge
outs
mov
(bad)
in
cmp
jge
dec
and
adc
sti
mov
(bad)
jg
xchg
jae
xor
add
(bad)
pop
lds
and
(bad)
cli
clc
dec
dec
jmp
fst
or
rol
mov
mov
inc
push
sbb
leave
shl
pop
jge
(bad)
hlt
idiv
mov
xchg
inc
pop
jnp
mov
push
push
mov
shr
xor
(bad)
(bad)
(bad)
inc
mov
ins
pusha
inc
push
mov
dec
clc
xchg
mov
pop
cmps
jne
xlat
(bad)
inc
in
and
cmp
repnz
mov
loopne
add
ret
pop
dec
adc
lock
push
dec
xor
mov
iret
sti
jmp
imul
(bad)
(bad)
dec
data16
dec
ffreep
out
in
fimul
cmp
sbb
jmp
pop
sahf
aaa
je
mov
fild
dec
xor
and
fld
das
in
cmp
sbb
(bad)
(bad)
call
and
test
aas
xor
cmp
fwait
adc
sbb
mov
push
pusha
xchg
and
(bad)
in
aam
xor
enter
sbb
(bad)
loopne
enter
loope
shl
lea
jns
in
scas
in
jge
sbb
(bad)
dec
ins
mov
sbb
xor
mov
and
jp
gs
xchg
into
pop
sbb
(bad)
xchg
jmp
movs
(bad)
out
mov
gs
or
mov
or
(bad)
inc
push
jge
test
jne
inc
lods
stos
(bad)
(bad)
(bad)
jmp
daa
mov
scas
test
aad
imul
aaa
mov
mov
(bad)
(bad)
(bad)
inc
inc
sti
cld
pop
pop
push
or
mov
push
psubb
out
jecxz
cmps
scas
ret
dec
mov
or
jg
out
jno
adc
mov
test
arpl
push
outs
lods
out
push
mov
jge
shl
movs
aas
pop
xor
jp
mov
or
(bad)
call
xor
(bad)
sti
jmp
sti
inc
call
out
pop
mov
xor
sti
push
repnz
jmp
dec
rol
jnp
out
lahf
push
fbld
je
sbb
not
loopne
mov
mov
in
in
(bad)
call
jmp
js
out
cmps
dec
rcl
push
int
clc
mov
enter
idiv
stos
pop
icebp
sar
shl
shl
rcr
clc
call
push
mov
push
or
sar
push
or
or
push
mov
cld
mov
loopne
cmp
call
lahf
loope
dec
call
jo
or
loopne
outs
in
bound
pop
mov
and
jmp
and
pop
mov
nop
sahf
push
fwait
cwde
scas
ja
retf
jl
daa
jge
fstp
out
hlt
mov
push
pop
fmul
mov
adc
dec
imul
das
adc
lds
jl
pusha
out
and
dec
jae
jnp
cmp
scas
mov
cmp
cld
aad
fidivr
jmp
(bad)
hlt
clc
jecxz
fdivrp
mov
xchg
sahf
xchg
mov
mov
cld
mov
inc
out
fwait
ja
dec
fistp
shl
(bad)
call
mov
mul
out
mov
add
cmps
cmp
stc
clc
out
adc
cmps
mov
or
dec
sub
adc
lahf
cld
push
ins
cs
push
rol
das
mov
shl
stos
shl
mov
sti
das
cld
or
pop
cld
inc
xchg
pop
pop
jno
mov
sbb
pop
sbb
mov
inc
xchg
es
jmp
(bad)
(bad)
(bad)
mov
movs
dec
adc
pop
imul
movs
(bad)
or
xchg
stc
retf
out
sar
xchg
(bad)
(bad)
(bad)
inc
mov
rcl
jmp
pop
cmps
(bad)
div
dec
retf
xchg
js
inc
mov
hlt
cmp
xlat
jl
outs
fisubr
mov
int3
mov
scas
(bad)
mov
push
and
in
mov
dec
(bad)
jmp
clc
jo
and
clc
push
cmp
sbb
mov
movs
aas
xor
mov
(bad)
(bad)
(bad)
(bad)
jmp
rcr
scas
rol
jg
mov
inc
pop
movs
mov
ins
mov
(bad)
(bad)
(bad)
(bad)
cmp
sub
imul
movs
and
mov
pop
dec
or
jecxz
(bad)
inc
push
out
pop
pop
popf
xchg
call
push
or
xchg
dec
adc
mov
cli
jmp
jl
outs
inc
outs
mov
aad
hlt
sub
ret
push
loope
dec
pop
or
call
xor
cdq
dec
icebp
sbb
sub
(bad)
(bad)
call
addr16
mov
mov
int3
out
retf
stos
inc
test
dec
pushf
cmp
xchg
in
aad
aas
jp
sub
mov
popa
ret
pop
int
lods
ret
int
popa
fimul
cwde
cmps
and
jns
(bad)
dec
out
call
and
popf
push
dec
pushf
pusha
jmp
add
fild
push
mov
ds
not
mov
mov
adc
sbb
and
daa
fwait
stos
pusha
in
fmul
push
and
jae
jle
std
stos
(bad)
cmp
cwde
scas
test
adc
hlt
jle
sar
dec
push
(bad)
in
aam
push
loope
(bad)
(bad)
(bad)
dec
in
loope
sbb
sub
ins
mov
push
mov
jmp
add
(bad)
(bad)
inc
cmp
push
mov
or
mov
icebp
mov
cmp
mov
cld
(bad)
(bad)
(bad)
call
mov
inc
xchg
scas
pop
xor
pop
xor
pop
stos
dec
cmp
nop
jnp
cdq
add
ror
inc
in
arpl
mov
xor
daa
push
mov
into
or
out
jne
imul
dec
(bad)
mov
pop
stos
mov
lods
int
test
out
jmp
icebp
test
(bad)
or
pusha
and
int
(bad)
sub
mov
(bad)
(bad)
(bad)
clc
adc
xchg
and
push
lods
daa
inc
fmul
inc
pop
push
aad
ja
mov
push
(bad)
(bad)
mov
jg
popa
(bad)
call
scas
adc
ret
mov
adc
add
out
and
xor
adc
dec
outs
dec
push
rcr
xor
lods
pop
bound
pop
jne
push
fwait
cli
mul
or
dec
cmp
stos
movs
and
icebp
(bad)
dec
xor
lahf
movs
cmps
cld
scas
lea
dec
cs
(bad)
fbld
std
push
arpl
jbe
pushf
push
xor
cdq
(bad)
sbb
in
adc
popf
icebp
imul
mov
fidiv
or
jns
add
push
xor
mov
mov
(bad)
call
lahf
cli
imul
push
sahf
popa
jmp
or
iret
fidivr
push
(bad)
mov
adc
std
(bad)
lock
repz
sti
mov
lods
(bad)
(bad)
(bad)
inc
out
sub
outs
je
jp
imul
aas
inc
clc
and
push
add
(bad)
(bad)
dec
mov
mov
sbb
fisubr
sbb
sbb
sbb
imul
rcl
aad
dec
mov
(bad)
(bad)
(bad)
ds
in
ficomp
xor
push
ins
pusha
mov
fidiv
lea
add
aaa
std
jmp
or
sbb
jmp
call
ja
sar
(bad)
(bad)
pop
jb
mov
mov
call
add
sar
or
popf
jl
dec
xor
ret
and
dec
sub
ret
pop
fistp
or
xchg
sar
and
(bad)
jg
jge
loope
retf
cmp
add
jmp
push
fst
jecxz
dec
iret
pop
jo
jle
icebp
call
out
out
xor
pop
add
mov
test
nop
(bad)
pop
repnz
or
stos
sub
sub
dec
pop
(bad)
jg
call
cmps
repnz
sbb
lods
lahf
or
xlat
cmp
(bad)
(bad)
call
push
fcomp
jle
dec
je
xchg
aaa
xchg
movs
dec
push
inc
or
push
push
sar
(bad)
call
xor
fucom
mov
push
sar
xlat
add
ins
out
mov
stc
or
test
lods
outs
cli
sbb
shl
xchg
bound
nop
imul
jg
mov
push
retf
sbb
adc
std
call
mov
outs
dec
or
icebp
fdiv
jl
(bad)
(bad)
jg
dec
xchg
and
mov
add
in
cmp
stos
xor
int3
pop
push
mov
dec
cmp
hlt
sub
sti
add
out
push
cmps
ds
movs
and
call
popf
inc
mov
pop
(bad)
mov
pop
cmps
pop
imul
out
loop
sbb
(bad)
(bad)
call
jp
cmp
mov
mov
mov
pop
mov
jp
clc
mov
lds
add
jmp
and
push
test
mov
or
(bad)
jg
cld
mov
out
sub
retf
cmps
fdiv
fistp
add
cmps
les
push
out
xor
addr16
adc
pop
ds
mov
or
inc
add
out
(bad)
push
adc
xor
rcr
(bad)
(bad)
(bad)
jmp
cmp
dec
xchg
hlt
test
push
shl
jg
(bad)
icebp
shl
call
nop
shl
mov
mov
cmps
retf
sbb
std
mov
pop
mov
js
nop
jne
jl
(bad)
sbb
xor
ficomp
sub
ja
push
mov
call
leave
xor
repnz
mov
sub
vlddqu
outs
rcl
and
adc
aad
inc
push
cs
popf
cmps
hlt
adc
pop
or
out
ret
fsqrt
out
mov
jg
add
fincstp
idiv
mov
xlat
add
cmc
mov
(bad)
jmp
lock
mov
mov
cmp
dec
aam
stc
xchg
push
mov
clc
ja
imul
lds
sub
out
in
push
dec
xabort
cli
inc
loopne
aaa
pop
in
gs
gs
(bad)
(bad)
mov
jle
jge
push
push
sub
enter
push
cli
cmp
cs
mov
or
dec
(bad)
(bad)
(bad)
push
pusha
sub
ret
sbb
dec
xor
ins
ins
mov
(bad)
mul
xchg
retf
(bad)
xor
xchg
daa
inc
(bad)
(bad)
(bad)
inc
jecxz
rcr
pushf
pop
jae
std
int
jmp
je
ret
ret
and
xor
(bad)
(bad)
(bad)
dec
fwait
cwde
jb
push
fsubrp
sahf
push
mov
fadd
mov
adc
pop
lock
arpl
(bad)
dec
mov
jl
in
ror
sub
dec
cmps
fist
xor
xor
loopne
jmp
inc
xchg
fninit
fnsave
mov
mov
mov
cmc
(bad)
(bad)
(bad)
call
sbb
dec
sbb
push
fisub
jnp
in
add
pop
pmaxub
not
push
jae
test
sub
(bad)
(bad)
jmp
fiadd
out
xchg
test
adc
sti
mov
js
mov
daa
mov
fs
(bad)
(bad)
push
push
xor
push
in
mov
clc
sbb
pop
in
mov
cmps
add
pop
xchg
loop
adc
xchg
shl
lea
mov
cs
(bad)
(bad)
jmp
sbb
addr16
mov
frstor
sub
mov
outs
lock
fiadd
adc
xchg
fsub
ss
jbe
(bad)
(bad)
call
or
ja
ds
or
sti
imul
cmc
arpl
xor
mov
imul
push
or
call
test
dec
arpl
(bad)
pop
sahf
add
push
fs
lahf
push
scas
add
out
cmps
mov
int
(bad)
(bad)
(bad)
dec
das
push
or
(bad)
neg
sbb
push
ins
cmp
je
shr
sbb
movs
and
sahf
les
sub
pop
adc
je
sbb
inc
enter
test
mov
int
inc
dec
xchg
neg
retf
ss
push
dec
(bad)
(bad)
(bad)
(bad)
jmp
pop
out
das
cmps
jmp
sub
icebp
mov
sbb
pop
call
(bad)
(bad)
(bad)
fstp
xchg
cld
inc
pop
jb
pop
add
add
std
inc
add
inc
cmp
and
sub
xchg
and
bound
cdq
jne
(bad)
sahf
rcr
lock
aaa
iret
mov
mov
int
xchg
jg
pusha
dec
sbb
push
jge
inc
ss
cli
jns
xor
in
or
data16
ins
adc
lods
(bad)
mov
jb
dec
in
pop
icebp
rcl
outs
test
mov
and
pop
cmp
adc
sub
push
enter
repnz
(bad)
(bad)
jmp
push
loope
push
fsub
cmps
xor
jl
dec
cs
int
pop
hlt
adc
test
frstor
icebp
mov
(bad)
push
mov
xor
sub
or
xchg
mov
enter
scas
pop
sub
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
jl
push
imul
aad
push
dec
jnp
sti
stos
movs
adc
imul
jle
xlat
(bad)
push
fld
movs
xor
fsubr
mov
popf
sub
sub
push
dec
mov
sti
test
mov
and
jg
inc
cwde
jmp
in
mov
(bad)
push
(bad)
call
stc
pop
test
movs
push
aad
jbe
gs
(bad)
jg
retf
out
adc
lods
shr
cmc
clc
mov
neg
sar
xchg
mov
ficomp
das
xchg
(bad)
aam
(bad)
xchg
int3
push
inc
fiadd
push
fcomip
fcomp
(bad)
(bad)
inc
pop
stc
sub
iret
push
pop
fisubr
js
jo
jecxz
(bad)
fwait
data16
sub
dec
xchg
and
cld
(bad)
(bad)
jg
mov
xchg
mov
and
in
xor
dec
sbb
mov
repnz
(bad)
aas
cli
pop
les
xchg
in
sbb
shr
(bad)
sti
test
sti
(bad)
(bad)
(bad)
(bad)
mov
enter
or
and
xor
push
dec
das
aad
push
lods
adc
push
mov
adc
(bad)
push
pop
or
sbb
mov
sbb
mov
ds
das
xor
jae
lahf
adc
sti
ss
(bad)
(bad)
(bad)
jg
push
dec
add
outs
sti
rcr
shr
cmc
and
(bad)
(bad)
(bad)
inc
iret
cld
pushf
aaa
add
sbb
aad
cmp
dec
jbe
ds
pop
mov
outs
mov
setge
lods
pop
dec
mov
pop
rol
xor
jnp
xor
js
(bad)
(bad)
(bad)
jmp
cmp
or
adc
addr16
lds
(bad)
and
push
movs
pop
jp
(bad)
jg
and
loopne
pop
xlat
and
pop
and
fwait
lahf
mov
xor
mov
(bad)
call
xchg
lds
mov
test
movs
ds
call
lods
pop
loop
pop
fdivr
loop
out
or
lods
test
sahf
dec
cmp
in
jle
cli
js
sbb
ss
(bad)
retf
mov
push
int3
jb
ffree
jnp
push
mov
xor
and
addr16
xchg
xor
js
cld
(bad)
(bad)
std
(bad)
loopne
sbb
mov
xlat
xchg
mov
xor
fistp
xor
(bad)
(bad)
(bad)
jmp
cmp
out
add
(bad)
out
or
or
adc
push
push
dec
xchg
(bad)
pop
fbstp
les
js
xor
aaa
arpl
ficomp
mov
inc
cld
lock
sub
jmp
adc
xchg
fld
mov
cmp
fisttp
std
jmp
shr
xlat
mov
push
scas
and
fistp
neg
jge
push
mov
dec
(bad)
(bad)
jmp
(bad)
mov
cmp
cmp
repz
mov
aas
movs
pop
sbb
(bad)
call
jmp
pop
sub
in
rol
loopne
mov
jno
adc
std
mov
sbb
and
mov
cld
(bad)
call
out
in
inc
mov
fisub
mov
xlat
stos
imul
xor
sti
or
jg
fs
push
pop
enter
dec
mov
jle
adc
(bad)
(bad)
jnp
lea
pop
lods
cld
ins
inc
int3
or
fidivr
out
or
lea
pop
dec
sub
(bad)
(bad)
dec
aad
jnp
in
jns
hlt
jbe
cmpxchg
lods
ss
pop
mov
jbe
(bad)
call
pop
jae
pop
mov
push
or
mov
push
(bad)
(bad)
(bad)
dec
ins
fwait
jno
test
sub
ins
mov
cdq
jmp
or
retfw
push
or
cmp
adc
jae
(bad)
call
fadd
pushf
push
retf
jo
outs
pop
sbb
mov
ror
inc
jge
(bad)
(bad)
(bad)
jmp
jne
and
push
and
lahf
push
adc
out
add
inc
pusha
cli
(bad)
(bad)
(bad)
jmp
cmp
mov
test
psubusb
pop
mov
int3
jmp
sub
xchg
(bad)
sti
and
ss
out
xchg
stc
adc
in
jmp
les
add
cld
ja
(bad)
jp
mov
xlat
aaa
mov
push
fbstp
outs
dec
cmps
sbb
pop
fbstp
sub
mov
aaa
xchg
pop
sahf
movs
call
pop
in
adc
arpl
out
and
(bad)
(bad)
push
sub
int
pushf
imul
aaa
adc
inc
or
das
sbb
int3
es
push
ss
out
imul
rcr
(bad)
(bad)
(bad)
jnp
mov
stos
xchg
mov
cmps
and
and
test
sbb
pop
out
fs
jmp
xor
test
mov
stos
jno
jo
mov
mov
(bad)
(bad)
dec
outs
push
iret
daa
mov
test
fist
lds
mov
jg
adc
fst
jmp
(bad)
(bad)
inc
add
cmc
cmp
cld
or
enter
rol
aam
xor
iret
lods
push
mov
mov
adc
leave
mov
sti
lods
pop
xor
stc
inc
push
std
(bad)
jmp
add
or
enter
(bad)
(bad)
xchg
adc
aad
std
pop
out
(bad)
jbe
push
xchg
inc
add
shr
mov
mov
aas
jae
lods
cmps
and
pop
std
dec
xor
dec
aam
push
sahf
mov
(bad)
mov
xchg
leave
call
add
scas
dec
rcl
inc
inc
sbb
inc
fcmovb
cmp
pop
pusha
xchg
add
and
pop
pop
and
xchg
inc
aad
push
push
jle
dec
and
(bad)
(bad)
inc
lock
das
mov
inc
jns
ret
mov
shl
adc
es
dec
iret
addr16
cmp
(bad)
(bad)
(bad)
dec
cmp
ins
cli
xlat
cmp
and
add
mov
pop
data16
push
jmp
jbe
test
(bad)
(bad)
call
sub
mov
retf
inc
out
iret
das
imul
mov
sub
push
jbe
(bad)
(bad)
(bad)
call
sub
or
fwait
enter
and
iret
aam
push
test
imul
(bad)
(bad)
(bad)
(bad)
aas
ds
stc
pop
inc
ss
mov
xchg
stos
adc
out
arpl
xor
inc
movs
daa
cdq
xchg
test
aam
and
jp
mov
fwait
outs
shl
inc
jg
(bad)
(bad)
(bad)
(bad)
ficom
loope
mov
aam
stos
jecxz
test
jo
push
mov
dec
int3
inc
inc
ds
jecxz
das
pusha
cmp
cmp
ins
dec
cld
(bad)
jmp
hlt
cmp
in
call
pop
mov
call
xor
jae
and
pop
mov
adc
cli
lods
lock
xchg
push
jge
fld
cmc
push
scas
sbb
(bad)
or
mov
xchg
cmc
(bad)
jg
sub
cmp
or
or
(bad)
in
call
jo
mov
push
inc
fmul
bnd
lea
mov
pop
(bad)
xlat
ds
jbe
fdivr
(bad)
(bad)
jmp
inc
inc
imul
inc
jecxz
jecxz
mov
mov
sbb
enterw
sbb
cmp
add
ins
aad
mov
call
stos
(bad)
jb
jbe
push
xchg
retf
iret
mov
loop
vandnps
sbb
js
(bad)
(bad)
cmp
push
push
mov
out
push
leave
xchg
(bad)
cmovae
sbb
or
(bad)
(bad)
(bad)
(bad)
cmp
mov
ror
(bad)
sbb
or
fucompp
arpl
(bad)
mov
jle
cmp
(bad)
(bad)
jmp
xchg
pop
sbb
push
and
ja
and
jne
gs
xor
imul
in
and
loope
or
jne
jge
or
movs
jmp
mov
(bad)
jge
mov
(bad)
dec
mov
pop
xlat
arpl
mov
xchg
cmp
mov
and
(bad)
movs
jno
add
(bad)
push
cmps
jl
inc
jne
xchg
cli
push
inc
adc
sub
dec
cmp
(bad)
jg
aas
leave
sahf
xor
es
test
adc
ss
or
cmp
push
sbb
xchg
add
inc
dec
imul
xlat
push
dec
ins
ja
lea
add
xor
push
sbb
lahf
xchg
(bad)
push
sub
ror
add
add
or
pop
ficomp
jge
pop
(bad)
(bad)
(bad)
jmp
aaa
repnz
push
xor
popa
xchg
and
ins
sub
jmp
jne
jo
out
mov
xor
mov
or
jb
nop
(bad)
jmp
repnz
jmp
mov
sbb
push
lods
cmp
adc
popf
repz
jmp
in
pop
xchg
jg
repnz
fs
(bad)
(bad)
(bad)
push
in
sub
pushf
mov
pop
mov
mov
(bad)
cld
jb
push
test
(bad)
(bad)
(bad)
push
sub
inc
sub
inc
inc
mov
push
xor
jecxz
call
(bad)
jmp
jmp
push
push
or
hlt
popa
pop
sahf
aad
mov
push
out
loop
ins
cmps
repz
rcl
pop
add
leave
mov
fadd
(bad)
out
push
mov
cmp
dec
jecxz
or
out
out
outs
(bad)
jmp
inc
sti
cld
cmp
retf
cdq
shl
dec
popa
xchg
pushf
adc
dec
stos
(bad)
ret
fstp
enter
jmp
addr16
mov
fisub
retf
push
pop
arpl
lock
(bad)
(bad)
(bad)
push
adc
cdq
nop
and
sahf
xor
jnp
cmps
xor
es
mov
mov
cld
(bad)
call
out
call
int3
sub
cmps
sbb
repnz
(bad)
dec
out
xchg
jecxz
cld
and
push
(bad)
lock
in
xlat
test
pop
jg
pop
(bad)
cmps
cmps
pop
fwait
push
cmp
add
(bad)
jns
ret
in
shr
inc
and
dec
xor
jg
push
mov
xchg
iret
rol
mov
or
adc
popf
ja
(bad)
(bad)
mov
xlat
mov
pop
or
call
mul
cld
leave
bound
xchg
cmp
sub
jmp
pop
mov
loope
cwde
push
push
adc
int3
arpl
cmc
xlat
mov
or
cld
mov
inc
inc
clc
call
pop
(bad)
(bad)
ret
mov
add
jl
call
adc
xchg
sub
sub
push
imul
out
(bad)
mov
jbe
(bad)
pop
ins
xor
cmp
test
aam
mov
or
adc
sub
inc
retf
add
cmc
arpl
jl
jg
out
(bad)
iret
out
test
jg
dec
cld
repz
jbe
sbb
or
add
mov
cmp
push
retf
adc
(bad)
(bad)
(bad)
call
movs
dec
adc
sub
lods
shr
xchg
js
std
jbe
mov
add
push
or
hlt
push
cdq
and
leave
add
ret
(bad)
(bad)
(bad)
call
and
mov
mov
sahf
repz
stos
div
push
mov
sub
dec
push
loope
jg
dec
xchg
mov
imul
mov
and
fld
aas
rcr
push
(bad)
(bad)
(bad)
(bad)
call
cmp
imul
jbe
cmps
fucomip
sahf
xchg
mov
push
mov
psubusw
lahf
in
(bad)
(bad)
(bad)
call
sbb
mov
test
imul
or
lods
inc
dec
lds
ds
(bad)
(bad)
(bad)
jmp
(bad)
mov
stos
not
pop
dec
jg
icebp
nop
lods
mov
mov
fdivr
jmp
jnp
jmp
cld
or
push
addr16
fdivr
and
cwde
scas
push
icebp
out
pop
sub
outs
xchg
aam
test
(bad)
call
lock
inc
mov
push
dec
aam
(bad)
cmp
fiadd
std
js
loop
scas
push
call
inc
adc
xchg
nop
adc
and
popa
pop
jmp
jo
mov
into
mov
dec
data16
cmps
mov
jo
test
mov
sbb
or
cwde
out
jle
(bad)
sbb
inc
(bad)
xchg
jne
jmp
test
(bad)
push
push
push
pop
mov
xchg
test
cmp
sbb
(bad)
inc
out
cmp
pop
sbb
les
mov
cs
mov
fisttp
pop
sbb
pop
je
ins
scas
mov
lds
shr
pop
jp
sub
leave
pop
or
mov
fucomp
adc
jp
test
pop
sbb
clc
and
icebp
pop
outs
out
jle
xor
out
push
push
les
push
push
cs
inc
xor
es
cwde
imul
lock
imul
cwde
adc
(bad)
(bad)
jg
pop
fldz
lock
jl
outs
mov
or
mov
pop
xor
ror
in
and
adc
ins
cmp
(bad)
(bad)
(bad)
(bad)
mov
cli
clc
outs
pop
pop
jo
mov
sahf
dec
div
jno
sbb
mov
sbb
pusha
loope
movs
mov
jle
lea
inc
inc
cmp
hlt
(bad)
(bad)
mov
mov
fwait
cmps
push
sbb
sub
adc
outs
jo
jmp
call
hlt
loope
in
sbb
jae
imul
idiv
out
cmp
mov
icebp
out
cmp
(bad)
dec
aas
pop
sbb
xor
in
(bad)
cmp
mov
hlt
sar
(bad)
mov
aas
jo
push
ret
imul
lock
jbe
idiv
call
popf
loope
out
jl
loope
and
mov
jmp
jmp
mov
cmp
loope
retf
mov
into
and
jl
std
(bad)
(bad)
inc
lahf
stos
jecxz
cmp
ja
arpl
mov
add
ins
test
jg
sub
outs
ret
push
push
in
xor
(bad)
mov
mov
loope
mov
sub
movs
sahf
mov
(bad)
mov
jl
cmp
fbstp
mov
mov
(bad)
fisubr
int3
cmp
mov
enter
out
jne
push
leave
cs
(bad)
hlt
push
xchg
sub
inc
inc
and
popf
int3
ds
sbb
scas
imul
inc
call
rcr
test
or
mov
test
mov
pop
sub
jecxz
jns
push
sub
jns
xchg
adc
(bad)
mov
mov
loop
das
ins
sar
dec
sub
jns
cmc
in
or
je
fdiv
push
jg
(bad)
(bad)
(bad)
(bad)
in
fsubr
dec
xchg
cld
fdivr
jmp
mov
stos
dec
sub
pop
popa
(bad)
(bad)
(bad)
jmp
outs
mov
pop
mul
stc
xchg
lods
mov
xchg
adc
(bad)
imul
(bad)
(bad)
(bad)
(bad)
fcomi
std
jmp
mov
fdiv
test
movs
movs
stos
xchg
(bad)
(bad)
(bad)
call
xchg
ja
(bad)
movs
scas
xor
mov
xor
in
scas
data16
sub
(bad)
mov
pop
mov
fsubr
pop
stos
dec
leave
gs
fistp
pop
pushf
inc
jle
(bad)
(bad)
mov
xchg
xchg
fwait
sub
pop
sub
fadd
(bad)
(bad)
dec
sbb
push
fcom
cmp
pop
arpl
inc
mov
addr16
(bad)
(bad)
dec
movhlps
addr16
add
jmp
jns
xor
out
mov
jo
jne
mov
(bad)
(bad)
jnp
push
int3
outs
cmps
jns
not
add
sub
xor
aad
cmps
retfw
(bad)
jmp
std
repnz
sub
in
mov
aaa
stos
sub
mov
mov
push
mov
and
push
sahf
mov
pop
inc
or
sbb
(bad)
dec
shl
(bad)
mov
dec
xchg
shr
sbb
stos
scas
xchg
inc
fwait
mov
and
test
cmc
push
xor
pushf
mov
push
loope
push
sahf
out
aaa
push
shl
loope
into
xor
push
mov
pop
and
ja
dec
push
arpl
(bad)
adc
inc
into
jg
jmp
push
(bad)
repz
neg
aaa
fldcw
out
xor
dec
sbb
add
sbb
int3
sbb
fld
mov
out
clc
mov
fld
mov
inc
call
and
(bad)
(bad)
(bad)
sbb
icebp
enter
dec
test
mov
(bad)
or
xchg
test
lea
out
(bad)
(bad)
dec
cli
push
push
dec
lds
loope
mov
jnp
and
movs
push
stos
aam
or
mov
clc
(bad)
(bad)
dec
outs
cmp
shl
sub
ret
in
adc
mov
pop
jg
inc
outs
clc
(bad)
jmp
push
int3
adc
stc
std
mov
loope
xchg
push
sbb
cmp
in
dec
loope
outs
cmp
mov
adc
sbb
ins
ja
jle
(bad)
jg
cmp
push
mul
sub
sbb
add
in
cli
mov
inc
or
repnz
xchg
ds
movs
loopne
jmp
ror
sub
mov
lock
sbb
scas
fbld
sub
(bad)
(bad)
(bad)
call
cmp
lds
lea
mov
out
sbb
sub
mov
pop
xor
out
pusha
mov
mov
and
pop
icebp
add
test
mov
ja
ret
mov
add
shl
daa
xchg
jp
stc
shl
lods
jne
movs
pop
in
cwde
lock
(bad)
(bad)
(bad)
push
adc
fidivr
imul
jl
jmp
inc
mov
jecxz
icebp
lahf
push
sub
outs
mov
fwait
(bad)
(bad)
(bad)
call
jmp
pop
mov
mov
ja
leave
sti
ret
gs
mov
xchg
xor
adc
out
cmps
hlt
dec
imul
cmp
pop
(bad)
push
push
cmp
jmp
fdivr
ret
fstp
dec
inc
jmp
or
rcl
mov
adc
(bad)
inc
movs
call
mov
jl
imul
xchg
mov
mov
push
fprem1
imul
outs
push
mov
add
mov
mov
jge
(bad)
jno
repz
(bad)
(bad)
(bad)
(bad)
jns
ins
in
fcomp
scas
jb
out
ret
sub
ret
xchg
push
leave
xor
sub
cmps
mov
inc
addr16
push
movzx
shr
rcr
repz
push
push
cmc
mov
xor
(bad)
call
and
cmp
push
adc
movs
ret
ds
(bad)
(bad)
call
or
js
js
sub
adc
jbe
stc
gs
(bad)
jmp
add
stos
call
not
(bad)
(bad)
(bad)
call
cwde
das
loopne
sub
pop
xor
pop
add
iret
mov
iret
scas
cmc
or
mov
test
(bad)
(bad)
(bad)
cmp
push
jle
(bad)
mov
fisub
retf
mul
inc
pushf
dec
jae
sub
mov
into
loopne
xchg
xchg
std
ins
cmp
(bad)
mov
ret
or
(bad)
gs
push
adc
xchg
mov
hlt
mov
(bad)
jmp
push
mov
or
movs
mov
adc
pop
mov
mov
rcr
loop
jle
jb
push
ins
mov
add
or
ret
mov
adc
xor
loope
jg
push
ror
pop
adc
out
(bad)
inc
adc
stc
sub
xor
xor
fwait
(bad)
jmp
aam
adc
pop
jo
out
rcr
push
pop
mov
(bad)
mov
push
jle
repz
in
repz
xchg
add
test
inc
sub
(bad)
(bad)
jmp
add
mov
add
mov
pop
and
lock
add
clc
outs
jbe
xor
mov
sbb
sti
push
out
pop
add
jl
fsubr
mov
cmp
fbld
jle
out
pop
(bad)
(bad)
(bad)
call
daa
sub
sti
pop
jg
add
mov
sbb
rcr
mov
out
cmp
(bad)
(bad)
(bad)
fistp
push
jl
movs
sub
(bad)
loop
imul
push
mov
jl
xchg
(bad)
(bad)
jg
cmp
sti
in
dec
adc
aaa
cld
push
pushf
out
lds
push
out
mov
pop
mov
mov
cli
(bad)
inc
xor
adc
push
std
mov
mov
cs
fimul
(bad)
push
icebp
add
outs
call
repz
push
test
repz
lods
ds
(bad)
idiv
das
mov
mov
int3
dec
in
or
aad
repnz
cld
test
or
jmp
dec
mov
lea
ffreep
mov
push
mov
fist
lahf
(bad)
(bad)
(bad)
mov
lods
jmp
adc
fistp
or
call
mov
mov
movs
loop
ja
sub
jne
imul
(bad)
jmp
js
iret
cmc
sahf
mov
(bad)
mov
cmp
xchg
mov
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
outs
test
cwde
add
add
and
bound
jmp
sahf
add
cs
jno
sbb
push
mov
mov
stos
mov
test
(bad)
inc
bound
mov
and
neg
pop
pop
xchg
fmul
(bad)
call
push
fistp
cld
cmp
or
jge
test
cmp
push
dec
inc
(bad)
std
scas
jae
jg
stos
loope
nop
pop
cmps
fidiv
or
sub
nop
xchg
sti
cli
sbb
sub
sbb
xlat
or
lock
mov
into
jnp
dec
inc
lahf
mov
jmp
loop
call
fs
lods
icebp
sub
xlat
push
mov
mov
push
push
out
int
jmp
pop
and
sbb
push
mov
out
daa
ficomp
sti
push
and
jecxz
and
fnstsw
(bad)
(bad)
inc
ffree
sub
js
nop
jmp
mov
jae
in
mov
std
(bad)
call
inc
cmp
cmp
mov
xlat
inc
xor
js
data16
or
fadd
xchg
gs
sar
call
test
mov
daa
xor
inc
jg
ror
(bad)
jmp
addr16
mov
in
test
cmp
hlt
push
xor
inc
mov
mov
(bad)
(bad)
(bad)
inc
aas
pushf
sbb
jbe
xchg
scas
lds
xchg
ficom
jno
ret
adc
addr16
lods
mov
enter
(bad)
(bad)
cld
std
fucomip
out
add
addr16
inc
jb
add
inc
sbb
enter
shl
scas
pop
(bad)
call
cdq
sahf
sti
stos
sti
in
(bad)
mov
scas
aad
cmps
xchg
sub
xchg
sbb
mov
call
or
mov
jns
out
call
and
adc
jl
mov
inc
sub
push
jno
mov
push
mov
dec
(bad)
in
out
pop
push
xchg
sub
retf
xchg
adc
dec
or
pop
ror
mov
ret
adc
inc
ins
popa
leave
add
mov
push
or
mov
push
sbb
jno
mov
(bad)
(bad)
fist
inc
cmp
aad
jmp
dec
in
fisub
sub
pop
dec
mov
sbb
jae
add
(bad)
jmp
outs
aam
push
retf
retf
dec
sub
dec
pop
ds
(bad)
inc
cwde
les
clc
inc
push
inc
sbb
adc
jge
cmc
aam
(bad)
push
mov
retf
cmp
jb
adc
les
out
and
push
xchg
pop
push
daa
in
cld
outs
call
hlt
cli
lahf
clc
sub
dec
cmp
iret
in
inc
es
sbb
sbb
into
icebp
nop
sbb
jmp
scas
sti
dec
ss
pop
(bad)
arpl
inc
(bad)
(bad)
(bad)
jmp
jg
cmp
or
out
lahf
enter
leave
(bad)
neg
stos
cmp
mov
(bad)
(bad)
inc
cli
cmp
xor
sub
push
xor
loope
mov
loopne
add
leave
xchg
(bad)
jle
and
mov
test
sbb
les
cs
arpl
inc
retfw
push
aam
pop
jbe
inc
xchg
mov
ins
jg
push
add
adc
outs
and
mov
(bad)
(bad)
jmp
(bad)
lock
retf
stos
popa
cmp
mov
jl
jecxz
iret
icebp
push
neg
mov
pop
cmp
add
mov
retf
push
sbb
dec
xchg
mov
call
inc
jnp
jle
sub
popf
or
ret
and
shl
mov
ret
dec
movs
(bad)
js
out
les
in
inc
rcl
(bad)
(bad)
jmp
sub
outs
lds
das
xchg
adc
jne
push
(bad)
aad
mov
aam
and
pop
xor
sub
jmp
test
ret
icebp
pop
ficom
out
pushf
out
clc
ins
fbstp
(bad)
(bad)
(bad)
push
in
cmp
cmps
out
mov
jns
pusha
ja
loope
(bad)
mov
das
push
sub
pop
jmp
lea
loop
ret
fcom
add
(bad)
push
mov
pop
in
jp
in
loop
push
and
jns
ds
adc
out
fnstenv
call
xchg
in
(bad)
call
ror
sbb
pusha
gs
aas
out
xor
nop
mov
jnp
sbb
call
cmps
pop
pop
pop
jmp
add
(bad)
mov
sbb
mov
pop
(bad)
mov
sbb
dec
cdq
xor
push
pop
fcom
retf
mov
cs
sar
push
mov
ss
out
sbb
dec
cmp
fwait
push
mov
jmp
fs
out
mov
jg
aam
(bad)
imul
daa
inc
jle
stc
sti
(bad)
(bad)
(bad)
call
and
sar
and
inc
les
shr
aas
xchg
jl
lahf
fsubrp
xor
pusha
push
(bad)
(bad)
(bad)
jmp
dec
mov
test
fwait
pop
loope
xchg
xchg
xor
mov
jo
mov
cli
adc
retf
fst
or
inc
mov
lea
outs
lods
ficomp
mov
neg
inc
mov
(bad)
(bad)
out
or
in
sub
icebp
pop
ss
sbb
imul
(bad)
fnsave
icebp
mov
xchg
pop
aaa
js
cmp
fimul
push
sbb
sub
cmps
fdivp
add
fcomp
ret
adc
dec
inc
cli
and
inc
dec
jmp
inc
out
jae
lods
(bad)
(bad)
inc
ds
pop
fucomp
or
out
mov
test
jnp
ins
fcom
test
jg
jle
sbb
jmp
sbb
add
push
mov
out
push
(bad)
(bad)
sti
adc
lds
bound
push
cmp
(bad)
sti
fnstenv
jecxz
scas
out
inc
scas
mov
(bad)
jl
js
pop
xor
pop
lods
ins
or
(bad)
(bad)
push
adc
std
mov
loop
xchg
jmp
xchg
lahf
xor
imul
lods
dec
addr16
push
or
out
xor
xor
dec
ins
cs
mov
mov
scas
cmp
pop
(bad)
(bad)
(bad)
call
lods
test
push
push
aam
(bad)
repnz
mov
popa
cmp
add
xchg
test
std
aaa
cld
sub
sahf
imul
dec
cmp
push
(bad)
enter
fidivr
(bad)
(bad)
push
js
aaa
std
push
pop
push
dec
mov
fist
(bad)
test
daa
fs
mov
dec
cmc
scas
test
jmp
iret
xchg
call
cmc
or
xor
sbb
call
push
stos
or
(bad)
dec
jecxz
lds
addr16
aaa
xchg
fsubr
stc
push
cmp
out
loop
stos
std
mov
in
xor
dec
loope
xchg
pop
mov
or
in
shl
stos
(bad)
(bad)
(bad)
mov
xor
cdq
sub
scas
std
mov
lods
cmp
ins
loope
jmp
xor
jo
je
fstp
mov
jno
(bad)
jmp
mov
(bad)
(bad)
call
xchg
cmp
xor
stc
sub
movs
jmp
fld
scas
int
sahf
cmp
rcl
push
push
mov
or
xchg
mov
fmul
cmp
xchg
(bad)
std
(bad)
dec
dec
clc
or
lods
std
lock
add
dec
mov
gs
or
leave
sub
push
push
xchg
out
(bad)
retf
jmp
aas
pop
(bad)
(bad)
(bad)
call
inc
test
cmps
mov
rcl
mov
adc
cli
mov
lods
adc
js
sub
mov
pushf
pop
pop
mov
retf
inc
jl
loop
(bad)
(bad)
dec
fnclex
mov
repz
adc
mov
repnz
pop
mov
adc
xor
(bad)
(bad)
(bad)
push
test
test
aas
add
cmp
fidivr
fidivr
xchg
addr16
(bad)
(bad)
(bad)
jmp
mov
lds
bound
push
sahf
xchg
in
inc
imul
sbb
push
jbe
inc
lahf
(bad)
(bad)
(bad)
mov
sar
push
fsub
mov
xor
movs
push
push
push
pop
cld
dec
imul
inc
xor
and
iret
test
call
retf
push
mov
jae
cmp
lahf
jnp
cmp
imul
(bad)
(bad)
mov
je
or
(bad)
fnop
push
xchg
aaa
mov
(bad)
in
sbb
(bad)
(bad)
call
fsub
into
test
push
adc
mov
mov
(bad)
test
(bad)
(bad)
push
xchg
jmp
jge
mov
mov
cmp
fiadd
(bad)
(bad)
inc
hlt
pop
imul
aad
out
inc
(bad)
cmp
cmp
out
adc
pop
xchg
pop
inc
dec
push
aas
jle
xor
or
movs
cld
(bad)
mov
loop
gs
jae
iret
leave
shr
movs
shl
sub
fsubr
loopne
push
fcomp
idiv
xchg
hlt
(bad)
fistp
push
or
dec
xor
cld
aam
cmps
and
mov
mov
enter
pop
xor
xchg
ins
ss
and
xor
mov
loop
(bad)
inc
ret
fcmovb
pop
pop
int3
or
imul
cmps
out
js
in
out
mov
fild
xchg
movs
and
out
addr16
nop
movs
scas
push
(bad)
jg
(bad)
mov
jmp
popf
jns
push
mov
cli
cdq
push
(bad)
call
and
in
cli
mov
dec
imul
scas
cli
xchg
into
sahf
sub
and
imul
inc
aad
sub
or
sub
cdq
cmp
dec
(bad)
jg
(bad)
cmp
push
or
test
pop
out
out
scas
mov
div
jbe
(bad)
nop
clc
cs
mov
test
imul
jmp
xchg
imul
call
jle
push
outs
and
retf
out
ins
push
cmp
movd
(bad)
(bad)
inc
jns
sub
aad
daa
jns
neg
pop
mov
inc
loope
nop
(bad)
(bad)
(bad)
jmp
in
and
aas
outs
outs
repz
and
addr16
popf
xchg
push
cmc
jmp
adc
mov
shl
sar
es
jp
dec
ret
inc
outs
loope
mov
call
(bad)
jmp
lods
lahf
pop
gs
inc
hlt
push
test
jg
arpl
outs
out
xchg
inc
adc
das
clc
add
fcomp
rol
cdq
jae
xchg
(bad)
into
mov
sar
inc
pop
sar
imul
xchg
(bad)
cmps
inc
mov
cmp
xor
rcr
cld
mov
fldenv
sbb
inc
retf
inc
lods
push
inc
repnz
pushf
add
cmp
cli
mov
lea
push
pop
sub
retf
and
je
nop
or
pop
jge
scas
out
in
test
mov
imul
shl
rcl
stos
sar
imul
das
cli
fisttp
shl
xchg
push
sub
call
lds
(bad)
(bad)
inc
hlt
mov
stc
and
jp
add
pop
sbb
or
pop
xchg
pusha
mov
test
sbb
adc
pop
or
js
in
xchg
pop
sbb
cmp
(bad)
cmp
inc
ds
mov
cmps
ret
retf
cdq
cmp
push
repnz
xor
(bad)
(bad)
fiadd
or
fbld
mov
mov
das
mov
cwde
fcmove
cmp
(bad)
push
das
int3
pop
xchg
push
repnz
test
mov
dec
jbe
pop
sub
sbb
repz
repz
lods
jle
mov
adc
mov
popa
adc
shr
fxch
push
push
call
pop
sbb
or
or
popa
and
(bad)
(bad)
inc
repz
sbb
scas
(bad)
ins
int3
jno
ins
addr16
mov
cmc
pop
jo
cld
(bad)
jg
and
push
sbb
dec
fnstsw
aaa
jmp
inc
add
pop
data16
clc
inc
(bad)
ins
jo
and
or
mov
and
jmp
sub
enter
mov
or
cdq
fmul
ja
scas
dec
xchg
dec
std
(bad)
jmp
fwait
pusha
test
add
fisub
aaa
fnsave
mov
out
mov
je
fbstp
inc
(bad)
call
push
adc
(bad)
or
mov
add
add
cmp
aas
xchg
imul
mov
adc
jmp
icebp
sbb
sbb
sub
int
ret
fwait
in
xor
(bad)
std
mov
loopne
jle
dec
push
add
sar
iret
mov
jg
sub
inc
dec
jp
jne
sub
xlat
ror
(bad)
call
std
lea
push
inc
pop
mov
fdivr
jecxz
pop
cld
(bad)
call
js
add
retf
addr16
push
cld
(bad)
sti
fist
push
cwde
call
mov
xor
in
leave
mov
jmp
(bad)
jbe
out
in
push
mov
scas
cmp
outs
push
jle
push
jns
mov
mov
add
xor
imul
std
in
js
mov
inc
fdiv
mov
(bad)
fs
jmp
ins
mov
lods
inc
iret
or
mov
loope
(bad)
leave
fisttp
(bad)
fimul
stc
mov
scas
inc
inc
fdiv
cmps
movs
mov
je
sbb
(bad)
sti
push
iret
idiv
mov
aas
shr
mov
or
scas
push
cmp
outs
jg
(bad)
(bad)
cmp
fcmovu
ds
cld
addr16
dec
pop
jle
repnz
div
(bad)
(bad)
fcomip
leave
mov
fdivr
adc
mov
xchg
mov
je
(bad)
(bad)
jmp
mov
mov
mov
lock
jo
and
jmp
inc
mov
pop
lahf
movs
clc
or
sar
mov
call
jle
arpl
sub
rcl
mov
repnz
lock
mov
movs
sar
push
std
std
push
or
sbb
stos
and
test
(bad)
jp
jnp
mov
and
xchg
sbb
(bad)
(bad)
jmp
jns
mov
inc
cmp
jg
lods
adc
xor
aas
mov
pop
xchg
lahf
jecxz
cld
ins
mov
outs
cmp
mov
(bad)
mov
pop
dec
dec
(bad)
(bad)
shl
cmps
hlt
ja
call
call
dec
xor
ins
(bad)
(bad)
(bad)
dec
sbb
inc
pop
jmp
adc
inc
imul
retf
(bad)
(bad)
cmp
mov
(bad)
xor
mov
das
adc
mov
(bad)
(bad)
(bad)
(bad)
jg
out
sub
adc
pop
(bad)
arpl
inc
jmp
shl
ja
push
sub
push
(bad)
inc
addr16
out
jge
inc
into
xchg
xlat
push
mov
jo
jg
push
inc
xchg
rcl
lea
mov
add
jmp
push
ret
adc
lods
scas
jne
dec
push
in
ds
jecxz
push
mov
(bad)
(bad)
mov
shl
pop
mov
(bad)
int3
int
pop
xor
mov
mov
jmp
je
push
inc
fimul
(bad)
(bad)
jmp
mov
rol
nop
adc
ror
push
pop
add
ret
ret
sbb
mov
daa
in
(bad)
push
dec
and
stos
push
fisub
cmp
lahf
cld
movs
push
push
dec
and
mov
sub
push
pop
repz
dec
mov
in
dec
add
jmp
cli
arpl
sbb
cmp
fwait
push
aaa
imul
(bad)
(bad)
(bad)
jg
jl
aaa
pop
adc
outs
ds
pop
je
in
jno
dec
out
add
(bad)
push
lahf
mov
or
jae
push
out
cmp
push
dec
(bad)
(bad)
mov
mov
sbb
sbb
push
push
clc
lds
adc
cmp
push
clc
outs
js
loope
jmp
je
or
cld
mov
dec
push
mov
dec
cmp
mov
sbb
popa
mov
jns
adc
sub
sub
xchg
push
stc
pusha
cmp
lock
leave
int
mov
mov
and
mov
adc
(bad)
inc
cmp
sub
lods
xchg
cld
cli
mov
(bad)
jecxz
in
(bad)
dec
fsubr
std
cs
xor
(bad)
call
dec
fisttp
cmc
(bad)
(bad)
(bad)
mov
cdq
and
mov
dec
dec
pop
add
xchg
add
inc
xor
daa
hlt
stos
frstor
arpl
hlt
into
(bad)
(bad)
out
xchg
inc
sub
push
pop
and
popf
add
(bad)
in
cmps
adc
push
movs
das
mov
inc
jecxz
repz
xchg
icebp
sar
(bad)
(bad)
(bad)
push
jb
pop
jg
cmp
sbb
iret
stos
mov
mov
je
enter
ins
xor
sub
(bad)
jmp
inc
shl
and
inc
inc
std
lods
jmp
pop
cmps
out
cmp
cmp
aad
div
jl
fsub
sbb
fwait
cmps
cmp
pcmpgtd
outs
test
sub
aaa
lods
iret
or
hlt
dec
xor
loopne
xchg
xor
xchg
push
xor
mov
cmc
(bad)
(bad)
jg
sub
mov
add
inc
in
call
cmp
movs
xchg
js
add
inc
xchg
je
jns
js
mov
cmp
(bad)
retf
imul
sar
(bad)
push
mov
js
loope
mov
jl
fadd
mov
adc
xchg
xchg
jmp
sbb
fdiv
daa
(bad)
out
(bad)
iret
out
dec
mov
outs
inc
in
arpl
pop
out
xor
ds
cmp
std
fld
jmp
clc
lahf
leave
push
xchg
jbe
sub
sbb
(bad)
(bad)
jg
jle
jg
sti
ins
sub
dec
jp
test
(bad)
push
jbe
(bad)
sbb
mov
pop
inc
es
jno
test
sbb
cmp
jne
sbb
scas
fidiv
lds
jle
dec
or
call
jg
or
dec
into
and
xchg
mov
stos
adc
sub
(bad)
(bad)
(bad)
jmp
jg
sub
ss
sar
in
aaa
(bad)
pop
jnp
push
jne
xchg
icebp
and
or
shr
pop
cld
push
jmp
imul
retf
(bad)
sbb
pop
out
xchg
ins
and
out
out
(bad)
fcomip
call
lock
push
mov
push
mov
pushf
cli
cmp
jbe
cli
push
call
movs
inc
cld
and
in
out
xchg
clc
jb
fisubr
arpl
(bad)
(bad)
(bad)
icebp
inc
xchg
cdq
scas
mov
adc
aad
cwde
out
test
mov
sub
pop
cmc
(bad)
jmp
pop
daa
loopne
or
fs
aaa
cmp
mov
out
sbb
pop
and
jmp
ficom
dec
pop
jne
mov
pop
repz
jns
das
cmp
pusha
out
outs
sbb
movs
push
(bad)
hlt
ret
cmp
pcmpgtb
jne
inc
movs
fs
ja
aam
das
pop
push
add
adc
vmovhps
and
sbb
mov
mov
call
jns
lods
aad
mov
in
push
test
push
clc
aaa
bound
jge
cmp
mov
(bad)
call
loopne
rcl
inc
rcr
inc
std
dec
sbb
(bad)
in
add
xchg
add
dec
xchg
dec
mov
stos
das
shl
sub
push
jno
mov
inc
mov
repnz
sub
lods
cmp
adc
(bad)
push
pop
pop
sub
mov
jp
clc
(bad)
(bad)
call
jns
ja
daa
in
mov
adc
and
out
push
sahf
mov
pop
in
mov
mov
jmp
call
xor
mov
and
shl
loop
dec
cmp
(bad)
call
dec
inc
jge
push
inc
push
aaa
sbb
mov
push
mov
test
mov
jae
(bad)
(bad)
(bad)
jnp
pop
test
ss
sbb
adc
mov
gs
push
movs
out
retf
(bad)
(bad)
jmp
pop
(bad)
repz
test
imul
mov
gs
ss
(bad)
pop
mov
(bad)
(bad)
(bad)
push
sub
out
jmp
pmulhw
cmp
fstp
jle
out
in
cdq
pop
aam
push
test
mov
fcmovnbe
push
jmp
push
hlt
ja
addr16
repnz
dec
call
lock
push
push
mov
movs
inc
stos
jmp
je
test
mov
scas
or
(bad)
(bad)
(bad)
(bad)
fdiv
ret
jbe
inc
push
ret
arpl
sbb
(bad)
jge
pop
iret
jne
inc
ja
in
and
push
inc
push
lods
test
mov
mov
pusha
push
and
sti
loope
mov
cmc
out
(bad)
pushf
pop
not
nop
pop
jge
test
lods
mov
lods
and
(bad)
(bad)
call
imul
push
mov
push
comiss
icebp
aas
sub
xchg
push
mov
xor
neg
adc
cmc
std
adc
sbb
ror
je
ret
pop
cwde
jmp
mov
sti
mov
(bad)
add
(bad)
mov
lahf
(bad)
not
cmps
push
xor
icebp
div
cmp
std
scas
dec
jle
dec
ret
dec
ja
(bad)
fisttp
and
cmp
dec
iret
mov
jecxz
cmp
or
xchg
test
pop
stos
jle
xor
pushf
daa
adc
pop
cli
nop
push
jmp
jl
loope
push
fadd
in
ins
aas
lahf
call
cmp
loop
aad
(bad)
call
and
pop
xchg
jmp
adc
mov
loop
(bad)
rcr
sub
psubd
add
push
mov
enter
pop
or
adc
mov
ret
loopne
aaa
sbb
jmp
hlt
mov
(bad)
rcr
pop
icebp
loope
jns
xchg
call
xor
test
mov
jge
cmp
std
(bad)
inc
pop
leave
arpl
jmp
retf
test
add
ficomp
mov
(bad)
(bad)
mov
loope
shr
push
mov
cmc
lods
aaa
stos
and
mov
mov
or
mov
(bad)
(bad)
(bad)
jg
jne
int3
xor
fs
push
mov
mov
div
jae
push
stc
test
out
ror
ins
test
fadd
mov
ja
fisttp
ror
mov
sub
pop
dec
(bad)
mov
shl
out
xor
shl
in
dec
jge
mov
dec
push
mov
(bad)
push
mov
shl
in
mov
ror
sar
call
loopne
lock
xchg
ror
mov
ins
cli
xlat
ja
jle
sahf
daa
jg
scas
mov
lock
(bad)
(bad)
jge
addr16
iret
gs
out
xchg
mov
ins
pop
lods
les
fmul
pop
popa
aam
call
movs
mov
in
pushf
jg
or
(bad)
mov
arpl
adc
aaa
inc
inc
add
movs
(bad)
xchg
cld
cdq
(bad)
(bad)
inc
call
retf
or
inc
ret
je
cmp
and
out
ja
daa
mov
xor
inc
add
sub
popa
or
dec
mov
ins
or
ds
aad
hlt
cmp
adc
jnp
int3
pushf
(bad)
inc
push
(bad)
rcr
add
jno
add
int
(bad)
(bad)
call
mov
hlt
xor
jno
call
xor
ins
call
pop
dec
sti
(bad)
(bad)
(bad)
call
and
test
inc
addr16
pop
mov
inc
addr16
jb
lahf
inc
mov
loope
and
in
jmp
jmp
cs
int3
into
xor
cld
jb
in
repz
xchg
pop
mov
mov
inc
aas
inc
sar
xlat
sahf
mov
stos
movs
icebp
(bad)
dec
call
dec
xor
and
(bad)
(bad)
(bad)
call
or
mov
sub
(bad)
test
rcr
cwde
inc
jmp
ret
neg
sar
inc
mov
ins
dec
inc
fimul
or
jmp
dec
rcl
lods
mul
stc
xchg
add
fsubr
popa
sti
mov
mov
mov
repnz
push
pop
stos
iret
into
out
(bad)
(bad)
(bad)
jmp
sub
push
jb
call
pop
int3
mov
lea
adc
lahf
cld
stos
repnz
out
cli
push
or
xor
(bad)
mov
sti
push
add
cmps
push
call
sub
shr
mov
(bad)
xor
dec
mov
push
gs
mov
or
imul
or
imul
xchg
jo
in
imul
icebp
xchg
jnp
sahf
mov
repz
pop
cmc
jl
mov
int
sub
fnstenv
push
mov
push
lods
jl
scas
mov
cmc
js
aad
mov
(bad)
jp
sar
jmp
(bad)
(bad)
(bad)
jg
sbb
and
jb
cmp
vpmacswd
les
lea
push
pop
jns
push
imul
sub
inc
call
xchg
(bad)
(bad)
jg
loopne
xchg
sub
pushf
lods
pop
xchg
xchg
rcr
push
pop
lea
jmp
mov
cmp
call
pop
and
push
jne
lods
ret
das
(bad)
mov
(bad)
jge
aas
jae
dec
loope
repnz
cmc
or
daa
jno
std
mov
ins
and
dec
fwait
mov
jle
in
(bad)
in
test
jne
pop
scas
push
pop
gs
dec
mov
fidiv
inc
xchg
jne
xchg
bnd
cdq
cwde
and
add
in
(bad)
(bad)
(bad)
jmp
xor
and
inc
or
in
(bad)
rcl
retf
shl
or
ins
mov
pop
cmp
(bad)
call
or
test
add
int3
cmp
sar
(bad)
(bad)
(bad)
(bad)
dec
and
pop
and
stc
dec
adc
push
out
aaa
mov
adc
les
sbb
(bad)
(bad)
(bad)
cmp
xlat
mov
cmp
push
cmp
int
add
push
lahf
(bad)
(bad)
(bad)
fcomip
icebp
fwait
or
frstor
push
outs
dec
rcl
in
(bad)
aaa
push
jl
and
xchg
xlat
(bad)
(bad)
push
pop
add
in
xchg
imul
mov
loope
jle
mov
dec
sub
cmps
std
ja
cli
mov
mov
add
mov
push
push
out
mov
call
and
pop
ror
fidiv
imul
fsubr
lods
dec
mov
test
sahf
jae
out
aas
inc
xchg
(bad)
xchg
cmp
xchg
(bad)
sub
xor
std
outs
jmp
(bad)
xchg
cmp
ss
jp
sahf
sbb
cli
sub
call
mov
neg
push
hlt
inc
cmp
test
aam
into
push
jns
inc
lds
call
mov
sti
das
cmps
call
scas
cmp
aaa
sub
inc
jno
frstor
in
ss
dec
stc
push
mov
jbe
jle
adc
and
sti
gs
into
add
fdivr
xor
and
(bad)
mov
ins
les
xchg
stos
std
mov
lahf
inc
jae
add
jmp
xlat
cmp
jmp
loopne
xchg
sti
clc
leave
sbb
scas
xchg
je
push
mov
stos
(bad)
aaa
mov
imul
addr16
add
jle
inc
add
rcr
std
lds
jmp
scas
jge
sub
jmp
(bad)
call
jl
(bad)
dec
jne
in
iret
xchg
leave
arpl
inc
and
out
inc
dec
(bad)
call
or
loop
jmp
jns
push
xor
stc
pop
adc
(bad)
(bad)
jmp
hlt
inc
dec
dec
int3
push
jg
mov
push
jl
dec
(bad)
xor
lock
jg
je
in
int3
daa
cmc
movs
mov
pop
cs
clc
jnp
(bad)
jmp
xor
mov
xchg
mov
dec
jmp
mov
pop
lea
jo
daa
or
dec
dec
sub
imul
push
test
ins
(bad)
(bad)
(bad)
jg
dec
sbb
jg
adc
jbe
test
sub
ret
cmc
mov
mov
jp
hlt
pop
retf
jl
jl
jp
dec
icebp
shl
and
xchg
mov
mov
pop
into
pop
ins
shl
neg
cmp
outs
and
or
sbb
add
(bad)
mov
xchg
pop
clc
push
int
jno
jg
repnz
(bad)
neg
stc
sub
sti
cmps
(bad)
(bad)
(bad)
dec
cmp
fldcw
xchg
xchg
icebp
outs
(bad)
jae
dec
adc
leave
retf
lock
mov
(bad)
(bad)
(bad)
dec
dec
sub
pop
mov
mul
jge
daa
add
(bad)
pop
inc
shl
loop
dec
jmp
push
nop
push
(bad)
(bad)
stos
cwde
adc
mov
push
dec
repz
jno
shr
(bad)
(bad)
mov
mul
leave
push
aas
dec
sbb
leave
js
repz
call
adc
jecxz
cld
pop
sub
jo
add
pop
pop
and
(bad)
(bad)
(bad)
fld
jmp
(bad)
mov
das
in
mov
out
dec
mov
push
pop
and
pop
adc
(bad)
in
sub
xor
test
fwait
inc
(bad)
(bad)
jmp
jns
gs
imul
and
js
std
or
xchg
jp
inc
and
cmp
ja
cli
push
test
cwde
cmp
jns
pop
and
aam
pop
aam
loop
fs
retf
or
loope
(bad)
jle
aaa
nop
mov
add
jnp
jle
push
jnp
or
(bad)
push
jnp
into
adc
ror
and
and
addr16
ret
icebp
or
(bad)
fdivr
(bad)
cmp
sub
jae
mov
mov
dec
aas
prefetch
or
aam
clc
dec
loope
xchg
jecxz
test
cmps
mov
pop
xchg
lahf
push
add
jmp
lods
xchg
dec
or
sbb
mov
loop
in
mov
sbb
sub
(bad)
cli
adc
(bad)
in
shl
nop
mov
adc
mov
jno
inc
call
std
fldenv
or
loop
(bad)
fdiv
lea
lods
(bad)
(bad)
fild
xchg
mov
mov
(bad)
(bad)
sbb
push
(bad)
(bad)
(bad)
dec
ins
mov
in
shr
movs
out
cmps
sub
outs
jmp
sbb
(bad)
dec
push
mov
jl
fst
dec
xchg
ins
adc
mov
push
mov
idiv
lds
sar
int3
jmp
(bad)
nop
stos
retf
jno
scas
ficomp
mov
lods
add
xchg
shl
inc
aad
(bad)
das
clc
into
fstp
addr16
ja
stc
movs
push
adc
push
int3
clc
add
(bad)
(bad)
(bad)
dec
call
xor
mov
push
mov
in
cmps
xchg
inc
imul
lods
test
pop
popa
das
(bad)
(bad)
(bad)
jmp
inc
push
push
div
mov
jb
outs
rep
ror
sahf
ret
ror
leave
int
lock
mov
(bad)
out
xchg
test
sbb
imul
push
dec
shr
jno
popa
sub
xor
(bad)
(bad)
mov
sub
int
clc
or
(bad)
and
dec
mov
cli
dec
and
loopne
pop
push
mov
jmp
mov
jnp
jge
loopne
sar
or
push
xchg
push
mov
bswap
inc
add
lahf
sbb
pop
xchg
cmc
mov
pop
adc
je
repz
stos
cmp
mov
push
cld
or
jl
mov
dec
loope
sub
xor
(bad)
(bad)
call
jge
jmp
pop
(bad)
xchg
mov
dec
sub
les
and
test
(bad)
(bad)
dec
shl
hlt
pop
retf
(bad)
and
out
mov
cmc
adc
lods
adc
das
aaa
call
jmp
retf
pop
bound
pop
push
fucomp
inc
xchg
jg
(bad)
call
pop
pop
adc
je
push
pop
lahf
mov
scas
jl
cmp
or
mov
cld
call
xchg
mov
mov
mov
or
(bad)
jmp
push
cld
movs
add
outs
xor
cmc
or
cwde
mov
imul
dec
mov
sbb
out
ret
fbstp
xlat
fsub
out
in
stos
cmp
pop
hlt
mov
pop
aas
ins
les
inc
mov
push
sbb
sahf
push
mov
xchg
jbe
cmp
mov
cmps
(bad)
arpl
cld
ret
jbe
out
retf
std
inc
sti
mov
call
in
sbb
ds
imul
fcom
(bad)
(bad)
jmp
add
stos
or
ror
push
aam
xchg
fiadd
xchg
dec
push
mov
outs
sbb
(bad)
(bad)
call
ds
jmp
mov
push
fcom
mov
mov
xchg
ret
inc
jmp
pop
mov
(bad)
add
test
xor
out
nop
cli
ret
lahf
dec
out
fdivr
adc
imul
retf
(bad)
mov
les
adc
icebp
mov
sahf
mov
push
popf
les
int
xchg
hlt
(bad)
(bad)
(bad)
call
cwde
sbb
and
fstp
imul
into
(bad)
jae
jb
xchg
jbe
popa
cld
or
jmp
(bad)
frstor
dec
jmp
pop
movs
inc
xchg
test
push
mov
sar
fld
mov
push
(bad)
call
aam
pop
jnp
outs
dec
sti
(bad)
(bad)
(bad)
(bad)
stc
fcmovnbe
fld
jmp
imul
hlt
adc
stos
lock
cmc
sbb
push
scas
stc
xchg
xchg
adc
add
cli
(bad)
fist
add
test
scas
cmp
xchg
pop
out
xchg
adc
(bad)
call
lock
mov
fistp
push
hlt
(bad)
in
outs
jge
(bad)
jmp
pop
std
sbb
cmp
(bad)
dec
out
cli
(bad)
push
mov
sub
and
cmp
lods
pop
cdq
sti
mov
or
adc
ja
call
push
sub
(bad)
repz
cwde
or
inc
xchg
rcr
xchg
shl
jae
sbb
fild
daa
lock
push
dec
mov
(bad)
call
and
aas
jmp
loop
jle
jp
fcomp
dec
popa
pop
adc
mov
out
jae
(bad)
(bad)
(bad)
(bad)
jmp
ins
pushf
push
cmps
fadd
xchg
aam
stos
cmc
jne
jmp
xchg
xor
(bad)
jg
dec
or
in
adc
leave
xchg
jno
lods
dec
fisub
ja
or
out
stc
lea
mov
ins
jbe
idiv
jmp
ss
movs
pop
aad
sbb
sub
or
sbb
sub
nop
rcl
or
(bad)
mov
int
and
inc
sar
sbb
sbb
(bad)
pop
cld
push
jle
mov
dec
xor
pop
jns
addr16
pop
aas
lods
sahf
mov
test
es
pop
clc
jmp
pop
(bad)
out
push
push
sahf
out
cmp
cmp
sub
inc
push
das
(bad)
(bad)
(bad)
call
or
fild
dec
es
add
js
clc
(bad)
jmp
jle
cmc
shr
push
(bad)
arpl
jp
lock
popw
popf
ds
sub
cli
jmp
data16
xor
repz
(bad)
fbld
jl
xor
adc
(bad)
jg
jmp
mov
mov
repnz
(bad)
mov
pop
inc
inc
sbb
jge
fcomip
inc
xor
fadd
xor
adc
pop
lock
jg
adc
mov
in
stc
neg
fidivr
sub
jle
xchg
ret
jmp
test
inc
mov
cmp
ret
sub
sbb
adc
push
cwde
test
dec
inc
xchg
mov
mov
mov
push
iret
inc
inc
xor
rcl
call
mov
(bad)
scas
arpl
ror
(bad)
(bad)
push
cwde
scas
mov
test
dec
push
cmp
mov
xchg
sub
cmp
std
inc
sahf
jecxz
hlt
ss
sbb
adc
jns
sahf
add
out
mov
xchg
mov
nop
(bad)
mov
adc
ds
adc
cmp
stos
outs
jo
jg
mov
sbb
(bad)
pop
cli
jge
cmp
loopne
clc
fstp
mov
jb
(bad)
hlt
imul
lods
jmp
or
lods
jg
neg
(bad)
jmp
(bad)
mov
div
iret
add
fs
xor
(bad)
(bad)
call
les
dec
into
int3
fwait
cmp
scas
pop
xor
sub
outs
and
dec
sar
(bad)
(bad)
push
fcomp
jbe
cld
jg
jg
jp
push
hlt
jg
call
loope
mov
adc
rcl
cli
jne
aas
sbb
pop
scas
mov
lods
ja
(bad)
(bad)
jmp
mov
cs
lds
es
je
push
mov
(bad)
test
gs
sbb
(bad)
(bad)
inc
pushf
not
call
(bad)
pop
in
loopne
jmp
sahf
push
jmp
(bad)
(bad)
push
jg
test
scas
sbb
jg
nop
mov
(bad)
out
xor
mov
sub
pextrw
and
(bad)
call
push
std
add
das
inc
test
add
imul
dec
pushf
outs
cli
scas
ficom
(bad)
(bad)
push
das
fs
dec
fmulp
cmc
xchg
xchg
rcr
clc
jnp
xchg
or
inc
pop
mov
mov
lods
jg
(bad)
mov
ins
push
xchg
leave
enter
mov
mov
(bad)
jg
pusha
cdq
rcr
retf
lahf
cmp
shrd
add
imul
fdiv
jg
cmp
(bad)
push
jge
mov
jbe
mov
clc
mov
(bad)
fcomp
rcr
mov
jno
mov
mov
jg
pusha
jne
jg
sbb
std
into
(bad)
pushf
(bad)
ja
imul
out
add
cmc
adc
fistp
lea
mov
jg
call
jo
or
jbe
mov
aam
sti
outs
out
scas
(bad)
jmp
shr
fwait
jnp
mov
cmc
fisubr
retf
das
or
xlat
out
jno
call
stc
std
xor
add
retf
je
mov
shr
cmp
pop
inc
xor
(bad)
mov
xchg
cmps
cmp
ficomp
sub
inc
std
(bad)
push
in
test
inc
clc
adc
call
mov
pop
es
hlt
(bad)
push
cld
(bad)
mov
pushf
repz
dec
aaa
mov
or
lock
jmp
jae
mov
lock
jp
pop
inc
mov
push
inc
call
dec
aaa
pop
(bad)
inc
cs
mov
add
lock
pop
test
popf
sub
(bad)
in
push
sub
clc
out
cs
rcr
mov
hlt
cmps
outs
jne
std
push
mov
aas
mov
mov
pop
xlat
or
xchg
fdiv
loope
pop
and
xchg
xor
clc
(bad)
call
jbe
retf
jb
jnp
sub
(bad)
lock
retf
push
movs
mov
(bad)
dec
movs
aam
lea
fdiv
aas
cmc
fs
jg
call
ficomp
call
add
or
add
pop
pop
jg
and
pop
js
mov
loopne
imul
idiv
(bad)
fistp
sbb
sbb
cmps
out
dec
mov
outs
cmps
aam
arpl
loope
sub
lods
call
mov
daa
dec
cmp
ins
inc
jmp
rol
mov
(bad)
mov
mov
je
jbe
xor
lahf
sub
mov
adc
add
mov
pop
push
add
sub
icebp
jmp
stc
pop
push
dec
mov
and
inc
ror
daa
cmp
stc
dec
test
push
fcmovnu
add
(bad)
clc
(bad)
pushf
cli
cdq
retf
in
mov
popa
clc
popf
jle
std
fcmovnbe
aas
sub
mov
cs
ret
jmp
shl
cmp
push
xchg
leave
adc
xchg
mov
jmp
jmp
test
adc
mov
stc
ficom
jg
(bad)
jmp
retf
pop
ret
ja
mov
lods
mov
mov
pop
xor
cmps
pop
mov
(bad)
(bad)
(bad)
call
retf
(bad)
sub
out
mov
sbb
ds
(bad)
(bad)
sti
sub
xchg
imul
verr
out
test
test
and
mov
(bad)
call
cmp
aaa
push
mov
add
retf
pop
xchg
std
cmc
outs
mov
mov
pop
sub
shl
fcom
sbb
call
xor
bound
pop
jmp
xchg
cmp
adc
dec
cld
test
jecxz
cli
mov
dec
hlt
jae
add
std
icebp
neg
inc
sti
adc
sbb
pop
std
fbstp
scas
test
add
push
xchg
mov
(bad)
(bad)
jmp
xchg
(bad)
adc
mov
enter
std
test
fwait
mov
(bad)
(bad)
call
mov
sti
stos
ds
mov
sar
pop
mov
or
call
stos
daa
pop
mov
out
cmps
push
neg
loopne
push
retf
daa
int3
sub
jge
and
mov
and
inc
mov
lea
(bad)
pop
rcl
aam
cmps
inc
bound
add
movs
or
mov
or
mov
xchg
fldenv
xor
or
sahf
fstp
(bad)
jne
imul
mov
ins
mov
inc
int
out
jl
xor
inc
(bad)
call
(bad)
jns
xor
sub
mov
inc
push
cmp
call
call
fstp
add
out
and
and
ja
in
jbe
jo
mov
pushf
(bad)
(bad)
(bad)
call
mov
lock
lock
pop
data16
cmps
(bad)
mov
(bad)
(bad)
(bad)
(bad)
fcomip
fwait
lods
scas
sbb
addr16
imul
jmp
sub
shl
cdq
push
add
call
icebp
aaa
pop
xor
bound
mov
adc
xchg
shr
loope
jmp
cwde
call
lahf
outs
mov
(bad)
(bad)
call
add
int3
pusha
mov
cmc
in
sub
in
in
sub
lea
stc
repnz
mov
pop
jp
mov
stos
out
das
(bad)
xchg
mov
pop
lock
enter
dec
clc
scas
icebp
std
aam
pop
test
and
push
call
mov
neg
ins
test
add
popa
jb
xor
repnz
pop
and
(bad)
fcomip
xchg
out
adc
push
xchg
stc
in
imul
sub
xchg
shl
sbb
dec
data16
js
cmp
mov
xor
scas
adc
inc
xchg
mov
mov
mov
clc
sub
xor
(bad)
js
cmp
xchg
sbb
pop
daa
(bad)
call
inc
jae
sub
lea
imul
add
mov
mov
int
into
call
std
add
add
fwait
sar
xor
push
repnz
push
out
cmp
rcl
add
add
test
call
add
outs
loop
jo
std
call
(bad)
push
mov
push
mov
jmp
(bad)
(bad)
(bad)
ficom
add
int
cdq
push
icebp
sbb
in
mov
pop
sub
out
lahf
fidivr
(bad)
(bad)
cli
and
(bad)
jecxz
icebp
scas
mov
adc
sbb
das
pop
(bad)
push
jecxz
xlat
pop
jb
jl
or
(bad)
push
push
(bad)
in
xchg
dec
adc
mov
inc
mov
mov
jmp
nop
mov
aam
adc
cmps
push
popa
(bad)
(bad)
call
dec
movs
in
jno
cmp
mov
rcr
cmp
scas
(bad)
inc
add
pop
(bad)
in
xchg
(bad)
inc
dec
(bad)
jnp
cmp
sub
inc
mov
and
js
jae
jp
cmp
jae
hlt
(bad)
ficom
test
jge
(bad)
(bad)
push
cmp
cmc
pop
shr
retf
sub
stc
push
aam
(bad)
cmp
cld
clc
aaa
mov
adc
and
dec
jmp
inc
or
jg
call
adc
dec
mov
push
pop
cwde
inc
call
in
push
fsubrp
fisub
arpl
dec
inc
jmp
dec
shl
in
js
call
mov
mov
push
jns
in
js
xor
lock
(bad)
fprem
outs
lds
cmps
pop
jg
cmps
mov
jg
cmp
xlat
jecxz
mov
cmc
shr
push
outs
das
int3
adc
cmp
push
mov
ins
sti
imul
adc
inc
or
mov
and
inc
out
jbe
and
xchg
imul
(bad)
dec
and
sub
out
push
inc
das
hlt
jle
fptan
sub
cli
(bad)
fbld
mov
and
das
jmp
sbb
cmp
push
adc
mov
lds
cmc
jmp
jge
pop
(bad)
cmp
in
push
or
jmp
shl
mov
xchg
popf
sub
jnp
(bad)
out
cli
rcr
fwait
add
dec
cmp
jmp
clc
add
das
les
sub
cmp
lds
mov
push
cwde
into
repz
jno
ffreep
popf
and
pusha
stos
or
pop
xor
xchg
js
add
pop
stos
mov
and
inc
test
pop
mov
mov
(bad)
push
pushf
mov
popf
imul
(bad)
mov
mov
push
dec
pusha
jmp
inc
push
mov
int3
jno
xor
adc
mov
(bad)
(bad)
mov
push
xchg
cmps
mov
inc
(bad)
mov
xchg
aaa
sub
pop
adc
cld
(bad)
(bad)
(bad)
jg
out
(bad)
xor
je
in
(bad)
pop
xor
gs
sti
cmc
idiv
pop
aaa
(bad)
fistp
ret
jne
mov
mov
int3
push
retf
mov
(bad)
cld
push
adc
out
sbb
mov
xor
xchg
fld
add
inc
push
clc
aas
adc
fild
push
into
mov
retf
dec
mov
inc
call
sub
add
fstp
sub
jmp
or
std
rol
das
(bad)
in
sub
into
icebp
pop
push
cmp
pop
xor
mov
test
mov
stos
or
fidivr
or
(bad)
in
(bad)
dec
mov
lods
push
jb
mov
repz
cmp
xchg
sbb
dec
aam
mov
(bad)
jmp
cmp
push
sbb
adc
jecxz
mov
mov
xchg
(bad)
cli
leave
push
push
fcmovbe
inc
cmps
(bad)
mov
(bad)
or
push
mov
push
out
jmp
sub
inc
mov
ret
pushf
(bad)
(bad)
(bad)
push
into
mov
enter
dec
push
out
lods
xchg
call
ja
daa
out
and
pop
xchg
daa
(bad)
dec
in
and
or
inc
push
jnp
loope
cmp
push
and
push
or
(bad)
call
xchg
sbb
dec
repnz
rcr
lods
mov
cmps
or
and
jne
adc
(bad)
(bad)
(bad)
mov
int3
push
lahf
jmp
xchg
mov
(bad)
(bad)
ds
or
das
cli
test
cs
push
inc
ret
jne
hlt
repz
cmps
fcom
dec
mov
popa
mov
(bad)
(bad)
dec
aaa
adc
cmp
fadd
xor
mov
xor
jmp
loope
dec
sar
dec
xchg
or
shl
mov
jl
popf
or
dec
outs
enter
jo
and
xchg
jp
aas
outs
xchg
(bad)
fbld
push
stos
cmps
scas
out
sbb
or
(bad)
rol
clc
(bad)
(bad)
call
outs
or
xor
out
inc
retf
sbb
push
sub
or
jg
loope
movs
test
cli
(bad)
jmp
cmp
lock
mov
or
pop
test
add
out
popa
inc
ret
(bad)
jmp
add
cmp
clc
sub
inc
loope
fild
cld
jmp
es
cli
test
jne
scas
push
popf
cmp
xor
xchg
dec
mov
xor
lahf
mov
jmp
fdivr
cli
pop
(bad)
outs
in
cld
dec
mov
pop
cld
(bad)
and
adc
fyl2x
icebp
jnp
clc
clc
mul
adc
cli
loopne
stc
(bad)
daa
(bad)
in
mov
dec
push
cmp
jnp
dec
adc
(bad)
test
(bad)
(bad)
(bad)
(bad)
push
and
aam
test
(bad)
div
push
icebp
mov
pop
out
xchg
repz
(bad)
(bad)
dec
mov
movs
test
pop
inc
jno
imul
call
sub
call
gs
push
arpl
pop
repz
sti
repz
jmp
lahf
push
jle
(bad)
out
out
iret
idiv
jge
mov
out
(bad)
jmp
(bad)
sti
push
mov
sti
pop
icebp
sub
adc
pop
cmp
fidiv
(bad)
(bad)
out
sbb
mov
loop
scas
cwde
sbb
jmp
in
mov
sub
jg
popa
std
lock
add
ror
rcl
add
add
mov
sub
mov
mov
cmp
push
mov
push
xchg
adc
inc
mov
(bad)
xchg
iret
in
neg
rcr
mov
sbb
shl
cmps
icebp
cmc
jnp
shr
aas
push
daa
int3
xor
dec
fisub
ret
pop
inc
(bad)
fcomip
(bad)
jnp
inc
push
xchg
mov
and
jecxz
lahf
ds
fwait
jae
dec
cld
call
dec
ds
scas
mov
pusha
jns
sub
retf
shl
(bad)
mov
sub
mov
dec
inc
mov
fwait
mov
sbb
test
jno
les
out
ins
fbstp
push
jp
fisub
push
std
mov
xchg
or
fucomip
or
xlat
xor
add
ja
cmps
jb
xor
repz
arpl
jmp
aaa
pop
add
aad
ds
repz
sub
mov
pop
cld
(bad)
loopne
jb
sbb
mov
sti
and
sbb
aad
(bad)
(bad)
dec
sub
xor
xchg
jp
cmp
clc
xor
xchg
lods
out
jle
sbb
dec
int3
dec
xor
aas
pop
cmp
jbe
cmps
mov
ss
idiv
cmps
cmp
push
sub
adc
repnz
test
fimul
push
cld
(bad)
sub
xor
(bad)
jg
mov
ins
push
std
pop
add
and
and
cmpxchg
sbb
mov
(bad)
dec
jl
mov
push
add
push
cwde
out
xlat
xchg
cli
(bad)
jg
and
mov
cmp
mov
mov
ss
sar
mov
(bad)
(bad)
jmp
fidiv
scas
mov
pop
mov
int
in
cmps
in
into
scas
sbb
call
(bad)
jmp
lock
pop
(bad)
adc
xchg
pop
push
pop
jmp
fisub
sbb
neg
xchg
pop
(bad)
(bad)
(bad)
jmp
cld
std
addr16
ss
cmp
(bad)
rol
xchg
loopne
and
out
xchg
inc
or
repnz
in
push
dec
icebp
int
data16
sbb
adc
jae
dec
xchg
(bad)
cmp
push
or
add
dec
fldcw
ja
aad
(bad)
pop
icebp
daa
xchg
scas
mov
adc
fst
daa
retf
aam
loope
sub
push
call
(bad)
pop
adc
xchg
leave
inc
icebp
mov
cmp
call
pop
jmp
xor
xchg
jle
inc
movs
call
mov
xchg
push
(bad)
jmp
or
xor
outs
aad
aaa
jg
cmp
dec
stos
inc
movs
sbb
shl
pusha
and
jnp
fimul
xchg
push
push
aas
ficom
or
(bad)
(bad)
dec
mov
scas
push
pop
(bad)
xchg
out
enter
loope
push
fistp
xor
fild
mov
cmp
mov
cmp
mov
cmp
inc
std
pop
cmc
mov
sub
xchg
fmul
shl
(bad)
(bad)
mov
push
mov
xchg
cli
aaa
push
inc
xor
mov
(bad)
push
movs
test
sbb
mov
(bad)
jg
cmp
mov
xor
adc
xlat
xor
(bad)
(bad)
jmp
mov
das
out
mov
ss
jo
mov
jecxz
scas
sbb
sub
(bad)
jmp
pusha
test
loopne
push
fisub
add
in
mov
pusha
xor
mov
mov
in
xor
(bad)
jg
test
les
push
je
rcr
jmp
clc
push
xor
(bad)
jmp
cmp
enter
ds
push
call
stos
loope
pop
ds
(bad)
inc
fcmove
xor
(bad)
das
pusha
pop
mov
mov
fisttp
pop
add
push
ret
jmp
xchg
scas
cmp
(bad)
xor
rcr
aas
mov
ins
mov
mov
mov
les
mov
cmp
mov
dec
(bad)
jmp
adc
fistp
les
fwait
pop
fild
bound
pop
je
(bad)
(bad)
call
cmp
xchg
scas
or
call
stc
gs
push
imul
push
lea
clc
ss
(bad)
out
into
fst
jl
mov
(bad)
(bad)
call
pop
leave
xchg
cmps
in
(bad)
inc
push
jge
push
pop
mov
mov
call
loop
outs
(bad)
in
mov
test
jmp
aaa
sbb
(bad)
xchg
mov
xchg
aaa
inc
jmp
scas
adc
loope
retf
outs
sbb
mov
js
cmp
mov
shr
or
push
in
(bad)
(bad)
(bad)
jg
mov
jnp
movs
ret
xor
les
(bad)
rol
add
aam
add
sub
mov
jo
in
mov
std
dec
stos
outs
cmp
ret
xchg
mov
jne
add
(bad)
sbb
mov
cmp
test
out
jl
dec
push
sub
jmp
jg
xor
clc
rcr
pop
mov
sbb
call
mov
jmp
mov
jle
aad
cdq
aaa
sbb
int
xchg
or
imul
popf
sahf
add
stos
adc
mov
or
cli
sbb
mov
inc
mov
ss
(bad)
(bad)
push
cmc
cwde
pop
out
stos
repnz
cdq
ret
add
movzx
and
call
in
(bad)
call
jecxz
call
push
test
into
push
push
jb
inc
xchg
jp
mov
sbb
clc
lea
mov
jne
aam
jp
jmp
mov
repz
inc
in
adc
idiv
(bad)
push
fxch
push
lock
enter
rol
cmp
cmp
(bad)
(bad)
(bad)
push
mov
xchg
dec
add
mov
outs
pop
jne
pop
sub
mov
and
mov
and
shl
js
int
sar
mov
xchg
je
call
push
iret
cmc
xor
sub
mov
and
jg
in
je
(bad)
loopne
mov
push
mov
add
push
mov
add
hlt
xor
and
hlt
fnstsw
push
cmp
jle
std
(bad)
(bad)
call
pushf
mov
sub
and
out
adc
mov
imul
or
aaa
push
pop
cmp
mov
call
push
in
xchg
bound
ss
jg
pop
lahf
lahf
clc
lea
repnz
(bad)
(bad)
(bad)
mov
lods
pop
jp
xchg
nop
push
retf
sbb
test
aaa
fstp
daa
or
push
xlat
(bad)
(bad)
call
jg
(bad)
ret
scas
mov
loopne
fist
sub
call
data16
jge
(bad)
push
ins
jno
cli
inc
inc
ss
sub
mov
cs
test
jecxz
inc
fwait
ins
data16
xchg
dec
test
rcr
mov
(bad)
(bad)
push
rol
bt
sub
jge
jmp
pop
inc
mov
retf
mov
(bad)
(bad)
jmp
mov
jmp
cs
and
test
add
push
push
fild
adc
cwde
div
xor
scas
(bad)
(bad)
(bad)
(bad)
(bad)
sahf
add
mov
sub
pop
xchg
sub
jle
stc
pop
mov
mov
std
es
mov
mov
xchg
mov
push
sub
clc
shl
push
daa
add
pop
add
stos
dec
push
call
mov
sahf
popa
sub
out
push
call
inc
add
mov
(bad)
inc
retf
(bad)
(bad)
cli
cmp
add
lds
cmp
out
inc
jno
jp
mov
push
or
(bad)
(bad)
fisttp
test
inc
xchg
xchg
xabort
xor
iret
mov
pop
add
out
inc
pusha
in
push
xchg
add
adc
inc
dec
test
repz
mov
mov
xchg
ret
mov
cmp
(bad)
(bad)
push
clc
stos
rcl
mov
dec
in
xor
and
and
(bad)
(bad)
jmp
mov
jl
enter
xchg
inc
inc
loope
sar
xor
es
(bad)
(bad)
mov
jno
cmp
add
jno
fld
cmp
or
(bad)
(bad)
(bad)
jg
movs
push
sub
add
jp
movs
bound
dec
hlt
mov
inc
xlat
arpl
add
mov
jle
clc
ins
out
sub
outs
call
ins
sbb
fild
jg
(bad)
sbb
push
jb
inc
or
or
scas
leave
ins
movs
cmp
in
call
push
sub
jmp
retf
sbb
mov
les
pushf
cdq
inc
sub
dec
rcr
inc
je
(bad)
jmp
inc
gs
or
shl
fs
cmp
mov
add
mov
inc
push
shr
in
push
sub
push
dec
cli
(bad)
dec
sub
(bad)
(bad)
fld
xchg
xchg
mov
fsub
xor
fidivr
dec
cmps
scas
mov
(bad)
(bad)
inc
and
cdq
or
hlt
stos
daa
shl
scas
jmp
pop
popa
pop
rcl
pop
mov
push
adc
je
enter
call
aam
jp
sub
and
cwde
adc
pop
and
rcr
rcr
retf
movs
inc
dec
lea
aad
aad
imul
add
mov
adc
ins
lahf
lods
imul
call
outs
xchg
and
fsubr
mul
fiadd
(bad)
(bad)
jmp
xchg
rol
std
js
ret
fucomi
int
pusha
in
rol
nop
dec
fsubr
jmp
sbb
mov
mov
push
stos
movs
sbb
xchg
call
loop
aad
mov
out
pop
xor
dec
mov
ret
cli
sub
jae
xlat
jmp
in
(bad)
call
xor
jbe
sub
(bad)
cmc
pushf
in
add
in
pop
and
xchg
mov
push
sub
cmp
ret
in
(bad)
cs
mov
stos
outs
cli
mov
mov
rcl
leave
push
push
inc
cld
push
cli
aas
fwait
imul
sub
(bad)
leave
push
je
in
jp
fimul
(bad)
jmp
fcom
movs
in
call
rcl
ss
es
pop
xor
mov
(bad)
(bad)
push
pop
jge
dec
and
xor
cmp
cwde
mov
(bad)
es
xor
push
dec
shr
xchg
test
sahf
mov
xchg
cmp
jl
nop
mov
push
std
push
cdq
adc
int3
push
pop
mov
xchg
cmps
cdq
adc
pop
test
mov
fwait
(bad)
jg
call
or
imul
dec
pusha
aas
fsubr
jbe
jmp
js
jecxz
stc
jb
fidivr
call
adc
adc
push
aaa
pcmpeqd
inc
and
fs
xor
adc
add
jb
mov
cmp
push
xchg
mov
call
mov
xchg
dec
rep
ja
fild
or
or
es
and
sbb
jl
sbb
(bad)
call
enter
dec
mov
sub
sahf
mov
scas
sbb
call
scas
(bad)
jmp
ret
or
pop
cmp
mov
push
(bad)
jmp
(bad)
adc
add
mov
mov
add
inc
cmp
mov
fisubr
push
ins
and
movs
cld
jnp
pop
clc
mov
rcr
dec
popf
adc
push
mov
cmp
gs
pop
aam
psrad
(bad)
inc
lahf
mov
or
call
(bad)
xchg
sub
jns
les
shl
dec
(bad)
(bad)
(bad)
call
cmp
ffree
sbb
dec
and
loopne
(bad)
push
mov
sub
test
stc
fldenv
test
(bad)
sub
inc
xchg
mov
xchg
idiv
push
sar
cdq
jae
xor
xchg
bound
dec
cmps
inc
or
ins
inc
loope
jmp
je
int3
aad
pop
je
mov
test
xor
(bad)
fisttp
sbb
fld
adc
int3
and
sub
pop
dec
mov
(bad)
(bad)
jmp
lods
mov
pop
jge
test
shl
das
xchg
scas
mov
mov
fld
add
call
sti
loop
push
pop
(bad)
ror
pushf
ins
and
(bad)
push
or
dec
daa
mov
shl
xchg
std
cld
jne
jg
int3
add
pop
dec
push
stos
inc
mov
adc
(bad)
(bad)
inc
dec
repnz
retf
sbb
jle
outs
cmp
jmp
popa
or
or
movs
pop
sahf
xor
inc
sub
jg
cld
inc
mov
or
outs
das
jl
(bad)
jmp
inc
push
sti
sub
das
push
das
fstp
push
bound
pop
dec
sub
ficomp
jo
in
pop
sar
pop
xor
pusha
out
je
aaa
mov
sbb
cmp
xor
shr
xor
call
cli
jmp
movs
call
push
rol
(bad)
call
sub
dec
fnsave
push
dec
mov
xchg
jns
nop
bound
jns
mov
mov
movs
cdq
jp
sbb
jge
jle
xchg
(bad)
(bad)
(bad)
(bad)
sti
mov
and
test
dec
push
xlat
mov
scas
(bad)
in
and
shr
jge
fcomp
data16
(bad)
(bad)
inc
scas
imul
sub
ds
imul
adc
cmp
out
jl
or
bound
repnz
sbb
bound
cli
push
fs
jmp
xor
inc
adc
inc
sar
sbb
mov
inc
push
cmp
out
ror
adc
movs
cli
xor
add
pop
dec
fsub
in
dec
(bad)
(bad)
(bad)
fdivr
mul
push
aaa
jnp
out
push
sbb
mov
mul
jne
(bad)
call
fdivp
lds
jmp
add
shl
sbb
mov
jmp
pop
jp
sbb
arpl
pop
inc
aas
js
jge
fmul
inc
sub
jg
(bad)
fld
mov
mov
inc
cmp
and
ins
pop
or
lods
sub
into
les
call
add
test
in
movs
pop
push
push
inc
inc
pop
dec
loope
das
push
rcr
inc
mov
pop
hlt
(bad)
dec
icebp
fwait
es
addr16
xchg
call
sub
lahf
push
push
cdq
(bad)
(bad)
(bad)
dec
out
fcom
in
xchg
and
jnp
xor
mov
or
or
cld
push
pop
ret
xchg
(bad)
sar
cmp
fwait
add
gs
(bad)
call
movs
or
pop
das
sbb
test
enter
loope
dec
fwait
or
pushf
adc
(bad)
push
nop
lahf
repnz
iret
push
jge
enter
inc
movs
jecxz
idiv
and
inc
imul
and
enter
pop
(bad)
(bad)
cmp
jp
test
and
mov
mov
leave
arpl
add
and
pop
mov
xlat
mov
xchg
pop
cmp
pop
mov
(bad)
jmp
mov
inc
xor
and
sbb
loopne
loope
enter
into
fimul
xor
imul
dec
dec
jecxz
sub
xor
enter
jnp
fdivr
(bad)
call
sti
ficom
in
jns
adc
aam
jbe
dec
and
shl
fisttp
xchg
ss
repz
(bad)
(bad)
inc
sub
mov
push
cmc
cdq
ret
push
div
push
popf
ret
jp
test
pop
cld
call
mov
dec
iret
push
sbb
fldcw
ss
jp
mov
(bad)
push
mov
je
adc
int3
in
xchg
adc
xlat
adc
inc
std
jmp
leave
cmp
cmp
ins
sbb
sbb
idiv
(bad)
cmp
mov
fcomi
inc
sbb
jg
outs
dec
out
sub
push
aaa
lock
fstp
stc
call
mov
inc
fisub
jbe
cld
repnz
retf
jmp
push
xchg
mov
test
lock
(bad)
mov
neg
mov
jle
pop
mov
push
outs
jns
mov
xor
daa
sbb
fcmovbe
out
adc
adc
(bad)
push
fcomp
ss
mov
pop
imul
dec
pop
(bad)
(bad)
(bad)
call
sub
jb
jb
push
loop
sbb
mov
mov
adc
and
pop
sub
jmp
cli
call
cld
call
sbb
out
mov
fnstcw
call
sub
scas
cwde
push
inc
inc
and
jle
mov
pop
stos
pop
shl
dec
out
cld
das
sub
(bad)
xchg
stc
mov
sti
sahf
aaa
inc
sbb
loope
pop
nop
les
sbb
sub
cmps
dec
scas
push
lods
(bad)
(bad)
mov
cmp
ds
loope
lods
fiadd
mov
fldenv
mov
pop
adc
in
cmp
jb
rcr
call
inc
in
push
dec
arpl
or
clc
(bad)
(bad)
dec
jl
das
dec
and
jecxz
sbb
sbb
sub
mov
movs
jmp
clc
and
fisub
cmc
imul
inc
lods
adc
fdiv
xchg
lds
mov
into
(bad)
pop
hlt
sub
retf
xor
jp
cmp
inc
inc
jle
popf
dec
sbb
dec
jb
idiv
and
or
sub
(bad)
inc
mov
into
test
stos
cmc
mov
outs
mov
xlat
(bad)
(bad)
call
inc
stc
jp
scas
iret
mov
rcr
popa
mov
push
popa
push
out
call
inc
std
mov
push
sub
push
push
imul
pusha
jno
call
cld
mov
add
sub
fst
and
adc
mov
fsub
call
adc
push
imul
pusha
and
shr
sbb
jg
(bad)
jmp
dec
cs
mov
dec
rcl
and
jp
mov
dec
ret
(bad)
fisub
outs
jecxz
cmc
scas
gs
in
retf
inc
aad
sub
in
cmp
outs
clc
pop
cwde
es
rol
add
(bad)
(bad)
jmp
call
in
sub
mov
inc
inc
aaa
(bad)
es
or
cld
jge
add
(bad)
lods
add
lahf
loope
dec
cld
inc
lahf
push
push
mov
push
loopne
(bad)
mov
leave
dec
push
jmp
loop
gs
loopne
inc
fisttp
cmp
call
fld
xor
js
xor
stos
sar
fwait
(bad)
fist
mov
fbstp
call
shr
cli
mov
sub
pop
cmps
jg
pop
mov
(bad)
dec
hlt
lods
arpl
mov
sar
cdq
(bad)
cmp
pop
and
(bad)
(bad)
call
cli
sub
lock
lods
fs
mov
fistp
stos
inc
or
inc
jno
jo
pop
or
(bad)
(bad)
(bad)
push
xor
pusha
(bad)
cld
rol
rcr
jae
repz
mov
and
cld
stos
xchg
(bad)
(bad)
(bad)
jmp
(bad)
fistp
cmps
sub
jl
pop
and
cld
xchg
jmp
add
dec
inc
rcl
(bad)
inc
mov
in
xor
outs
bound
mov
dec
enter
pop
retf
cld
and
jecxz
fbld
push
mov
or
jg
xchg
push
mov
ret
cli
or
retf
push
xchg
adc
mov
sub
loope
xor
icebp
xor
jo
clc
(bad)
(bad)
(bad)
cmp
(bad)
add
dec
lahf
mov
cmp
sbb
mov
retf
xchg
sbb
jl
(bad)
outs
aam
xchg
sahf
push
xchg
outs
lea
adc
sbb
xor
(bad)
(bad)
xor
(bad)
(bad)
inc
xchg
bound
or
out
sub
dec
(bad)
push
ds
jb
hlt
mov
outs
jbe
(bad)
(bad)
(bad)
jmp
cmps
ss
cmp
sbb
mov
imul
out
neg
dec
(bad)
(bad)
(bad)
(bad)
mov
ins
loope
mov
lock
xchg
(bad)
dec
sbb
pop
pop
es
sbb
rol
dec
lods
push
mov
or
mov
out
xor
std
mov
movs
push
pop
sub
push
je
dec
lods
sbb
adc
imul
dec
jge
xchg
cmp
cli
mov
imul
idiv
sahf
xchg
shl
cmps
dec
pop
add
mov
(bad)
bswap
je
jge
and
mov
sub
call
adc
aaa
popf
addr16
mov
inc
jl
mov
fld
inc
stos
and
je
push
inc
cli
push
mov
push
icebp
xchg
add
pop
add
(bad)
fld
ret
pop
xchg
add
in
cmp
mov
cmps
mov
and
mov
cmp
(bad)
call
sub
lods
jmp
rol
inc
add
fincstp
(bad)
ja
add
std
mov
jl
outs
(bad)
dec
jl
in
sub
jge
(bad)
jg
push
nop
scas
or
mov
(bad)
out
pushf
sbb
int
sbb
xor
clc
(bad)
sti
pop
rcl
repnz
mov
cli
(bad)
mov
(bad)
call
rcr
sbb
pusha
(bad)
fist
ins
(bad)
mov
scas
jle
jg
(bad)
jmp
call
lahf
(bad)
fst
test
aad
jbe
enter
lock
scas
mov
dec
fdivr
mov
test
pop
mov
(bad)
inc
xchg
hlt
in
rcr
adc
retf
adc
adc
cmps
sbb
clc
imul
(bad)
(bad)
cmp
and
xchg
cwde
or
sbb
scas
inc
out
and
inc
and
cmp
mov
jmp
pushf
into
call
sub
push
test
pop
push
jne
sbb
daa
loopne
add
popf
and
imul
cmps
mov
(bad)
jmp
inc
loopne
rep
out
inc
inc
lds
daa
lods
lds
lods
or
mov
(bad)
(bad)
(bad)
fsubp
nop
sbb
fcos
test
jg
mov
sub
mov
movs
mov
enter
(bad)
push
push
xor
hlt
and
loop
jl
xor
jp
sub
ins
loopne
cwde
outs
neg
push
jo
jns
outs
iret
jp
(bad)
(bad)
call
test
adc
(bad)
leave
scas
cmps
pushf
sar
loope
pop
pop
daa
fwait
popa
in
push
(bad)
leave
add
lock
(bad)
jmp
loop
rcr
mov
aad
push
in
pop
mov
imul
inc
loope
sub
idiv
mov
ins
mov
aam
std
jle
xor
gs
loop
cmps
test
fs
addr16
jmp
add
ins
lea
clc
and
add
sbb
repnz
add
add
ins
mov
push
int
xchg
jle
cwde
stos
and
pop
sbb
sahf
and
(bad)
jne
add
ja
cli
dec
loop
cdq
dec
xchg
std
icebp
aad
(bad)
mov
pop
fwait
and
push
stos
mov
bound
data16
lock
(bad)
mov
cmp
retf
push
push
fnstenv
cdq
push
(bad)
(bad)
inc
in
cli
pop
mov
pop
xchg
mov
in
xchg
jecxz
push
dec
mov
(bad)
call
jmp
icebp
add
xchg
fisub
xor
push
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
jl
das
mov
pop
mov
jns
stc
mov
xchg
jo
fidivr
ss
(bad)
(bad)
fild
push
jmp
xchg
pop
mov
dec
outs
arpl
js
pop
hlt
cli
push
std
mov
xor
pop
not
faddp
adc
inc
mov
mov
(bad)
jmp
adc
push
adc
adc
mov
mov
xchg
sar
js
pop
cmc
mov
call
scas
retf
and
(bad)
jg
adc
sub
stos
sub
ins
dec
push
push
inc
jl
push
and
or
std
(bad)
(bad)
fmul
adc
retf
test
sbb
(bad)
(bad)
jg
(bad)
cmp
push
pop
mov
ret
dec
seta
(bad)
(bad)
push
loope
xor
aam
mov
cld
pop
fmul
jne
test
mov
mov
dec
popf
and
(bad)
jmp
shl
js
in
push
pop
sti
and
cmp
es
in
jmp
stos
lods
popa
cdq
fidiv
(bad)
call
jp
jg
out
ins
fwait
repnz
pusha
(bad)
(bad)
(bad)
(bad)
in
or
jns
ret
dec
xchg
dec
imul
popf
push
mov
xchg
mov
outs
je
mov
cmc
call
iret
jle
mov
push
je
pushf
mov
push
add
pusha
pop
ja
cld
inc
out
push
mov
popa
ins
sub
(bad)
call
nop
mov
std
cmp
ja
in
scas
repz
inc
inc
pop
and
test
xchg
cmp
mov
add
(bad)
(bad)
(bad)
dec
and
or
mov
jmp
mov
pop
cmp
xchg
mov
pop
icebp
inc
cld
add
(bad)
(bad)
jns
adc
add
in
jo
test
add
jmp
stc
stos
(bad)
mov
sahf
cs
sbb
clc
je
mov
iret
xor
dec
xchg
aad
aam
xchg
and
lock
(bad)
dec
mov
add
cwde
sbb
mov
pop
inc
push
add
mov
(bad)
(bad)
(bad)
(bad)
adc
jmp
mov
xor
xor
push
stc
shl
jecxz
stos
loope
mov
cdq
(bad)
rcr
dec
xor
push
inc
mov
fsubr
xchg
inc
sbb
jg
cs
sbb
pop
mov
(bad)
inc
call
js
popa
aam
push
call
ja
xchg
push
call
pop
or
mov
xchg
dec
xchg
add
std
jle
xor
call
xchg
xchg
daa
mov
adc
js
(bad)
(bad)
mov
push
pop
inc
pusha
dec
shl
fdiv
frstor
jmp
call
xor
or
aad
popf
aad
or
int
ja
push
retf
aaa
fnop
pop
adc
retf
sahf
mov
dec
inc
imul
nop
inc
and
(bad)
sahf
scas
push
push
mov
jo
cld
(bad)
dec
dec
dec
jae
cmp
out
shl
jmp
mov
repnz
xchg
adc
out
pusha
add
test
xchg
cmps
in
xchg
jns
xchg
je
std
(bad)
(bad)
call
scas
mov
test
xchg
loope
sbb
outs
push
inc
push
sub
push
add
and
inc
ss
xchg
(bad)
bound
add
mov
call
cdq
or
and
int3
in
int
test
(bad)
out
adc
popf
jne
adc
push
scas
(bad)
sahf
test
or
clc
(bad)
push
cmp
pop
fidivr
push
ds
fisttp
pop
xchg
(bad)
(bad)
inc
and
sbb
fild
out
imul
scas
jmp
fistp
test
jno
adc
inc
lods
xor
stos
mov
sub
push
xor
repnz
push
mov
xchg
mov
mov
cmp
int
cmp
call
ret
clc
int
fild
cwde
and
(bad)
ror
jmp
ret
pop
ja
jge
push
adc
add
(bad)
(bad)
call
neg
scas
pop
gs
loope
repnz
(bad)
pushf
adc
xchg
jmp
mov
pusha
das
call
aaa
jmp
xor
sub
lea
xor
or
inc
call
and
stos
shr
(bad)
js
retf
inc
das
in
rcr
and
movs
mov
push
jg
call
push
scas
mov
dec
xchg
cmp
test
mov
loope
jl
(bad)
(bad)
jmp
enter
xor
in
xchg
sub
pop
stos
rol
or
(bad)
(bad)
(bad)
push
jb
mov
mov
mov
xor
add
dec
loopne
mov
dec
dec
push
mov
pop
(bad)
(bad)
(bad)
(bad)
out
dec
dec
out
aas
cmp
ret
sub
inc
aad
mov
nop
jae
rcl
movs
js
mov
dec
add
(bad)
hlt
jge
sub
xchg
ss
(bad)
(bad)
call
sub
out
xor
sbb
pop
icebp
cmps
enter
shl
dec
jbe
call
adc
sub
outs
ins
fcmovbe
mov
xchg
inc
jnp
loope
ins
push
xor
aas
sub
loope
(bad)
(bad)
(bad)
fbld
out
adc
inc
jl
mov
add
(bad)
(bad)
(bad)
jmp
cmp
push
mov
inc
add
pop
bound
stos
pusha
jne
(bad)
xchg
sub
sub
icebp
jmp
scas
or
sti
add
inc
popa
xchg
sbb
lock
jmp
cmp
pusha
imul
call
popf
(bad)
int
xchg
or
push
aad
cmps
fwait
and
dec
(bad)
xchg
(bad)
arpl
cmp
mov
outs
(bad)
(bad)
mov
cmp
fisubr
jl
in
or
xor
push
dec
(bad)
(bad)
(bad)
push
dec
jge
jge
imul
pop
enter
dec
sub
push
in
je
cmovne
lahf
and
iret
xlat
cmp
cs
(bad)
in
(bad)
jle
sub
mov
mov
arpl
or
jmp
mov
inc
push
jle
(bad)
(bad)
(bad)
call
icebp
xor
pop
ss
js
mov
(bad)
sbb
push
test
jmp
(bad)
cli
(bad)
(bad)
push
lds
(bad)
shl
mov
jno
das
cwde
scas
mov
test
gs
(bad)
(bad)
call
sub
dec
pop
int3
sbb
inc
out
das
adc
push
or
sahf
in
inc
mov
pop
movs
and
and
adc
gs
jno
sbb
sahf
jmp
pop
pusha
and
das
pop
arpl
std
stc
pop
mov
adc
aas
mov
popa
inc
lods
(bad)
inc
fst
repz
es
clc
add
pop
push
xor
pop
sbb
idiv
(bad)
dec
rcl
test
or
add
js
dec
xchg
loop
in
adc
(bad)
inc
inc
push
lods
lea
xlat
pushf
push
gs
popf
(bad)
ins
push
dec
sahf
push
(bad)
dec
jbe
loopne
fdivr
mov
enter
fcmovnu
neg
pop
(bad)
pop
popf
cmps
mov
mov
jmp
xor
mov
xor
pop
adc
out
inc
push
(bad)
jg
mov
cvtpi2ps
xchg
out
lahf
pop
es
rol
mov
jp
jecxz
push
or
loopne
mov
sbb
sub
jl
add
fcom
mov
clc
dec
(bad)
mov
xchg
mov
pusha
std
pop
fisub
pop
(bad)
jmp
dec
inc
or
jmp
enter
scas
mov
pusha
adc
loopne
mov
fist
lods
mov
mov
aaa
pop
(bad)
adc
adc
sub
pop
xchg
xor
retf
std
xchg
pop
sub
jbe
neg
add
sbb
(bad)
push
clc
test
xor
fild
call
jno
je
js
dec
sahf
dec
fisub
sbb
call
pop
jg
jo
dec
ins
sbb
js
push
jmp
int3
(bad)
(bad)
fisttp
lods
sbb
adc
mov
retf
sbb
inc
imul
(bad)
(bad)
dec
jmp
int
daa
movs
lods
inc
mov
dec
xchg
test
cmp
cmc
mov
movs
jo
inc
movs
shr
cs
(bad)
(bad)
jmp
inc
jns
dec
fwait
add
data16
add
mov
(bad)
rcr
sub
add
mov
sbb
(bad)
jmp
hlt
and
std
aad
repnz
push
out
ss
sub
dec
push
push
repz
icebp
cmp
cld
(bad)
fwait
out
mov
add
(bad)
(bad)
clc
pop
adc
sub
enter
pop
int
lock
aas
pop
dec
outs
mov
fs
(bad)
fbld
ret
cmps
fiadd
int3
loopne
call
inc
mov
(bad)
lahf
adc
(bad)
inc
(bad)
sub
pop
inc
in
mov
test
push
pop
adc
out
sbb
(bad)
(bad)
fcomip
(bad)
int
mov
pop
mov
inc
repz
inc
outs
push
lea
cmp
das
es
test
or
les
retf
push
lods
pop
sub
clc
xchg
add
cmp
(bad)
(bad)
mov
sub
dec
add
mov
js
repnz
scas
jmp
(bad)
(bad)
(bad)
call
test
ret
rol
xchg
aam
sub
cmc
pop
cmp
jle
std
push
cmp
(bad)
jmp
ja
xor
in
scas
adc
mov
adc
gs
lods
retf
sar
inc
xor
div
jns
pop
dec
mov
dec
test
adc
push
cld
jmp
dec
retf
(bad)
mov
inc
sbb
cdq
xchg
ds
pusha
mov
std
(bad)
jmp
mov
or
shl
push
lock
xchg
xor
lahf
imul
xor
ret
sub
cld
push
(bad)
std
rcl
mov
pop
out
inc
dec
aas
test
(bad)
out
xor
ja
xchg
iret
cwde
cdq
xchg
sbb
div
int3
pop
clc
jmp
in
add
add
cmp
enter
jecxz
inc
ja
sar
mov
stos
push
cli
xlat
call
cld
dec
add
or
adc
aaa
ret
jecxz
dec
nop
mov
enter
adc
jno
mov
addr16
outs
mov
cli
in
(bad)
pmuludq
xchg
aam
fnstcw
dec
add
adc
inc
mov
lahf
cld
pushf
inc
outs
rol
jge
xchg
xchg
out
jnp
mul
(bad)
mov
adc
aaa
cld
push
cmp
cs
(bad)
dec
rcl
adc
dec
inc
cmp
jbe
jae
and
test
(bad)
repnz
cmp
(bad)
(bad)
out
and
xchg
or
jg
mov
adc
and
cmp
mov
jle
and
xchg
test
or
adc
jle
fs
test
mov
and
icebp
fcom
(bad)
(bad)
push
fdivr
cs
iret
jmp
mov
mov
leavew
cmc
(bad)
adc
fs
xor
(bad)
(bad)
jg
sub
push
retf
mov
mov
jmp
mov
es
loopne
cs
cmp
in
clc
(bad)
jns
popf
movs
jge
push
pop
js
push
push
jmp
out
(bad)
jg
test
xchg
add
ret
inc
cmc
iret
std
int3
mov
loop
dec
clc
das
ror
sbb
shl
dec
mov
(bad)
jmp
clc
lods
out
xchg
sbb
outs
cmp
push
dec
mov
jmp
outs
and
jmp
mov
mov
sbb
retf
shl
cli
mov
push
gs
cwde
mov
add
cmp
sub
int
shr
adc
jo
mov
lock
das
cmp
shl
jne
cmp
mov
mov
aad
ins
je
loop
jns
adc
loop
or
movs
outs
adc
and
icebp
int
jecxz
test
aaa
xor
ins
call
or
scas
cld
xor
call
loopne
add
mov
into
jge
outs
in
imul
aam
sub
mov
(bad)
mov
data16
dec
mov
sahf
and
call
add
call
add
adc
xchg
cdq
push
(bad)
dec
push
add
fild
call
mov
jns
in
(bad)
dec
add
int3
lea
pop
aad
inc
pop
ja
push
faddp
cld
bound
fs
jmp
aaa
fst
jmp
mov
out
or
mov
dec
mov
call
mov
lods
xor
sar
dec
adc
inc
xor
pop
sbb
adc
call
dec
div
jg
mov
mov
mov
push
stos
fst
stos
mov
ss
add
es
fwait
xchg
inc
jg
(bad)
jmp
dec
cmps
push
test
sbb
mov
push
jmp
fild
fwait
and
scas
rcr
xor
test
mov
dec
mov
and
(bad)
fnsave
or
or
(bad)
fdivrp
(bad)
out
aaa
cmp
in
int3
cdq
jae
jg
jns
push
add
out
or
jmp
sub
inc
mov
jne
aam
sti
pop
aad
jne
xor
ret
xchg
loop
add
cmp
mov
test
shl
add
call
(bad)
jmp
add
lods
aas
loopne
push
cmp
enter
scas
shr
push
mov
xor
cmp
aad
mov
enter
push
(bad)
jmp
jp
in
xchg
int3
cs
mov
add
icebp
inc
popf
xor
jmp
pusha
(bad)
ret
sub
outs
push
scas
xor
lahf
out
push
test
sub
sub
jns
adc
xbegin
lahf
outs
adc
(bad)
(bad)
(bad)
mov
pusha
xchg
repnz
aad
jl
test
adc
jl
pop
xor
(bad)
(bad)
(bad)
mov
in
leave
push
cmps
aam
fiadd
(bad)
mov
cwde
adc
mov
(bad)
(bad)
fcomip
add
js
add
loopne
popa
or
inc
out
shl
cli
fbstp
add
push
cmp
popf
into
popf
sahf
cmp
xchg
cmc
inc
pop
in
in
mov
sbb
ror
dec
(bad)
jmp
stos
cdq
out
mov
mov
(bad)
(bad)
ffreep
jne
clc
ja
ficom
xlat
int3
retf
push
mov
add
mov
js
add
fcomp
(bad)
jmp
lahf
sbb
xor
scas
or
dec
push
fsub
sub
add
(bad)
jg
push
push
lea
sbb
jae
mov
xchg
add
enter
gs
addr16
mov
loopne
jo
dec
or
nop
push
pop
ins
(bad)
out
cli
dec
and
paddq
ja
mov
sbb
push
out
(bad)
(bad)
dec
xchg
sahf
or
(bad)
xchg
jg
mov
scas
scas
mov
add
push
jno
fld
cli
sbb
outs
fs
pop
out
jl
add
call
adc
jns
das
sbb
xor
fistp
and
mov
jne
mov
not
or
retf
pusha
int3
or
retf
std
in
jp
(bad)
dec
aaa
push
xor
mov
(bad)
bnd
int3
add
sar
push
mov
(bad)
dec
shr
cmp
xchg
inc
push
(bad)
in
imul
(bad)
jg
ja
sub
jp
xchg
jl
or
pushf
sub
(bad)
(bad)
(bad)
(bad)
aas
sbb
push
jne
in
sbb
(bad)
jnp
sti
sub
jb
push
outs
pop
sub
dec
push
(bad)
add
imul
ins
hlt
stc
call
sub
dec
dec
mov
pop
lds
(bad)
(bad)
(bad)
call
sub
sub
cmp
retf
xor
jae
push
mov
jno
sahf
jnp
mov
(bad)
jmp
sub
jae
cmps
xor
mov
pushf
retf
lods
adc
fs
movs
mov
popf
xlat
sbb
cld
jmp
add
and
inc
ret
adc
aas
xchg
jne
mov
lods
adc
sahf
mov
or
jmp
xchg
mov
jmp
ret
repnz
call
sub
inc
push
(bad)
(bad)
out
mov
fs
(bad)
nop
popf
or
pop
enter
dec
push
jnp
(bad)
(bad)
jmp
in
jne
xchg
jbe
xchg
jb
in
inc
(bad)
cmp
xchg
inc
jg
movs
jg
ret
dec
adc
sbb
(bad)
(bad)
call
adc
inc
neg
mov
ins
push
jae
mov
call
add
test
add
rep
fisubr
arpl
mov
(bad)
dec
push
xchg
push
dec
jne
inc
xor
push
mov
push
sub
lahf
je
(bad)
das
shl
dec
(bad)
(bad)
(bad)
jmp
dec
mov
add
pushf
call
mov
cld
mov
(bad)
(bad)
call
dec
or
(bad)
in
mov
scas
adc
mov
pop
mov
clc
(bad)
call
jb
add
cmp
ja
aas
fisubr
pushf
call
cld
push
xchg
and
outs
jmp
cdq
lock
fbstp
dec
cmp
fdivrp
fisttp
loope
push
mov
xlat
(bad)
out
(bad)
rcr
call
push
mov
adc
js
mov
mov
adc
(bad)
fild
dec
jno
sti
in
ret
clc
daa
outs
lock
popf
aam
call
popa
retf
pop
cmp
xchg
popa
mov
ret
test
xor
test
jo
ja
and
jl
(bad)
(bad)
jg
or
cmp
popa
sbb
mov
lahf
cmc
push
xchg
cmp
mov
and
mov
pop
jns
mov
mov
mov
ds
fist
(bad)
jmp
pop
dec
cmp
ret
adc
outs
xor
mov
sbb
dec
addr16
jge
into
test
fwait
mov
cdq
inc
xchg
cdq
std
(bad)
in
add
sbb
push
fld
inc
ja
xor
push
outs
stos
xchg
sbb
sub
jle
(bad)
(bad)
mov
pop
cli
push
add
push
ds
pusha
cmp
adc
(bad)
jmp
pop
mul
lds
int
sub
cld
mov
movs
push
jnp
(bad)
(bad)
(bad)
jmp
push
inc
push
test
push
sar
jns
shl
jbe
ficomp
mov
sti
mov
pop
dec
outs
add
imul
pusha
jns
xchg
hlt
(bad)
jg
mov
rol
add
cmp
mov
pop
fadd
push
clc
push
cwde
pushf
fcmovu
or
xor
push
(bad)
(bad)
(bad)
mov
das
pop
sbb
sbb
sti
aaa
stc
aaa
or
add
pusha
sub
mov
dec
test
sub
loope
int
mov
and
in
xor
and
adc
call
(bad)
mov
cld
mov
repnz
push
imul
stc
pop
sahf
jns
sahf
sub
mov
(bad)
jmp
fcom
jmp
retf
fs
jecxz
cmp
push
cs
pop
aad
(bad)
dec
mov
xchg
xchg
fstp
mov
cmp
fnstcw
mov
sbb
xchg
bound
mov
jmp
shr
jbe
xchg
xor
out
(bad)
(bad)
(bad)
mov
push
pop
rol
sub
cmp
dec
call
imul
(bad)
inc
in
mov
(bad)
(bad)
and
and
dec
add
js
cmp
(bad)
xchg
repnz
jle
or
inc
sti
cmp
mov
fadd
and
pop
push
mov
cmp
pop
add
sti
and
ret
jmp
pop
ins
sbb
(bad)
jg
dec
jnp
pop
pop
and
hlt
inc
pop
out
dec
add
xchg
inc
in
mov
xchg
push
jne
cmp
mov
(bad)
test
jg
mov
test
adc
stc
inc
xchg
mov
jge
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
ret
pop
iret
push
mov
rcr
xchg
cs
call
mov
inc
mov
shl
nop
sub
mov
sbb
adc
mov
and
ficomp
test
cmp
(bad)
pop
lock
cli
es
addr16
arpl
mov
(bad)
in
(bad)
cmps
sub
(bad)
(bad)
(bad)
inc
cwde
test
clc
or
inc
out
loop
mov
pmaxsw
xor
and
idiv
(bad)
(bad)
inc
sbb
add
gs
mov
rcr
and
and
pop
pop
xchg
jmp
pop
sub
dec
in
inc
or
jle
cs
stos
sar
or
jge
jo
out
test
pop
dec
mov
outs
xor
add
dec
nop
(bad)
(bad)
(bad)
inc
aas
int3
fmul
jmp
retf
std
adc
mov
inc
fmul
or
es
(bad)
dec
xchg
fadd
jns
icebp
cmp
inc
jp
xchg
das
mov
add
clc
jg
adc
mov
xlat
pop
ins
jge
dec
cld
jp
stos
jg
(bad)
jmp
data16
cs
jmp
mov
repz
(bad)
(bad)
(bad)
jg
nop
outs
and
push
sar
jecxz
data16
fimul
sti
xor
pop
dec
mov
inc
mov
cmp
push
test
push
stc
lods
out
push
cdq
fs
bound
jmp
(bad)
cpuid
push
(bad)
(bad)
(bad)
call
pop
out
push
xlat
(bad)
call
xchg
nop
mov
or
lahf
ret
push
mov
add
and
push
sbb
(bad)
dec
pop
movs
fdivr
pop
cmp
mov
mov
rol
aam
jg
jno
jb
sbb
sub
(bad)
push
xchg
int3
jmp
pop
mov
mov
push
mov
test
(bad)
jmp
jl
(bad)
push
fimul
push
adc
fnsave
lahf
pop
sbb
cld
inc
pop
pop
ja
dec
iret
lahf
and
mov
pop
jmp
or
dec
loop
rcl
and
data16
stos
(bad)
(bad)
(bad)
push
lods
ret
mov
or
mov
xchg
inc
rol
retf
mov
ins
mov
(bad)
(bad)
jg
push
dec
cmp
sti
inc
not
push
ins
cmps
aaa
mov
adc
mov
std
cli
scas
(bad)
jmp
popf
add
les
sub
inc
loopne
lods
dec
fisttp
(bad)
jmp
xchg
and
mov
aaa
adc
scas
icebp
xor
inc
(bad)
inc
push
test
sub
(bad)
mov
adc
xchg
lock
pop
(bad)
hlt
fstp
dec
pop
(bad)
in
(bad)
inc
aam
adc
ins
in
call
imul
les
sbb
jmp
das
cli
adc
inc
int3
imul
push
dec
sbb
or
(bad)
(bad)
mov
iret
mov
test
popf
fwait
out
push
push
xchg
loop
repz
(bad)
fcomip
call
mov
scas
and
jle
push
ins
je
adc
jo
ret
sbb
daa
xlat
adc
hlt
out
test
inc
inc
cmc
lock
sub
xchg
(bad)
jnp
add
(bad)
mov
dec
push
jbe
cmps
xor
pushf
pop
pop
in
inc
imul
pop
mov
jp
mov
and
fsave
pop
mov
inc
xchg
jp
ins
cdq
mov
imul
cmps
cmps
icebp
cmps
cmp
jne
stos
mov
outs
pop
jbe
movs
ja
sbb
(bad)
or
(bad)
(bad)
jmp
pop
rol
in
repz
mov
(bad)
gs
fisttp
dec
outs
outs
out
mov
add
dec
xchg
aad
add
daa
stos
aas
imul
call
inc
mov
gs
xor
push
es
jg
mov
sub
je
cdq
in
push
cdq
push
stos
int3
xchg
or
xchg
xor
add
aas
std
ss
loope
mov
dec
mov
cld
(bad)
jmp
in
or
test
jb
dec
aaa
ins
arpl
call
inc
into
fisub
in
sub
jg
pop
add
fwait
mov
ja
rcr
outs
ja
mov
push
jp
jnp
adc
into
add
test
int
jg
dec
xchg
sub
imul
sub
dec
cmps
push
sbb
inc
sbb
sbb
lods
clc
lea
or
mov
cmp
(bad)
(bad)
(bad)
push
fld
or
cli
fisubr
hlt
xchg
sbb
imul
jne
lods
aaa
pop
icebp
fs
cmps
pop
xchg
cmp
call
scas
test
lods
les
cmp
(bad)
dec
xor
jae
es
or
push
in
and
mov
pop
test
sub
pop
mov
imul
movs
jmp
fwait
loopne
sbb
mov
rcl
(bad)
(bad)
mov
sbb
stos
in
cld
mov
stos
xchg
ret
lods
sub
out
jl
mov
jg
(bad)
fisubr
int
adc
xlat
pushf
hlt
ins
cmp
imul
cmps
fisttp
jns
call
loopne
jbe
les
adc
movs
std
jae
test
imul
mov
mov
stos
rcr
call
(bad)
mov
pop
xor
nop
xor
int3
ret
ins
lods
int3
mov
(bad)
(bad)
(bad)
jg
outs
add
or
add
mul
add
ja
inc
adc
add
ret
in
aas
add
and
into
pop
add
pop
and
(bad)
push
inc
jge
cmc
ret
(bad)
push
sti
inc
add
or
add
push
call
jmp
retf
pop
(bad)
(bad)
jmp
movs
jns
loopne
popa
ds
aam
stc
sbb
sar
out
inc
repz
xchg
ss
call
repnz
pop
jle
xchg
xor
inc
inc
(bad)
jmp
sbb
(bad)
cmps
mov
es
fild
pop
dec
loope
pusha
push
lds
sahf
pop
xchg
and
cld
(bad)
(bad)
jmp
mov
out
adc
rol
push
push
sbb
mov
popf
(bad)
jg
cmp
and
mov
and
popf
clc
(bad)
(bad)
inc
sub
push
mov
hlt
add
test
push
or
jl
jb
cmp
push
adc
cmp
cli
dec
mov
mov
jecxz
idiv
sar
mov
jl
xor
(bad)
test
fchs
mov
(bad)
(bad)
jmp
pop
mov
out
ins
push
pushf
mov
xor
sahf
inc
jbe
inc
mov
pop
(bad)
jg
inc
out
mov
neg
push
mov
pop
retf
cs
(bad)
(bad)
dec
call
sub
jl
leave
iret
int3
inc
ja
not
sub
mov
xor
nop
adc
xor
(bad)
mov
ins
lock
(bad)
hlt
or
mov
ret
leave
je
sub
outs
mov
es
push
ins
sahf
jg
(bad)
(bad)
jg
cmps
(bad)
push
mov
jmp
jge
mov
pop
xchg
mov
sub
sbb
jmp
dec
int3
adc
pusha
mov
pop
enter
ret
jmp
jb
imul
jmp
inc
and
loope
jbe
fnstsw
pavgw
retf
(bad)
(bad)
jmp
jl
mul
cmp
pop
out
jg
inc
jp
into
shr
mov
inc
retf
adc
push
and
mov
retf
cmp
dec
rol
outs
fistp
adc
add
outs
mov
(bad)
(bad)
(bad)
jmp
push
mov
sbb
aam
in
call
(bad)
aad
xchg
rol
adc
push
ds
ins
gs
ret
in
sub
gs
loop
cmp
mov
repz
jns
sub
jmp
ret
bound
add
les
jbe
push
das
jecxz
cli
mov
rol
or
jecxz
(bad)
sub
or
mov
xchg
xor
gs
(bad)
inc
mov
adc
cmp
add
jns
mov
(bad)
(bad)
mov
mov
ret
sbb
out
push
outs
(bad)
dec
hlt
sub
enter
pop
add
std
fsubr
sar
sbb
jp
add
jmp
popa
stos
sti
jo
pop
or
fstp
sar
(bad)
(bad)
jp
out
inc
not
enter
loopne
popf
or
cli
imul
(bad)
ds
jmp
mov
mov
dec
push
xlat
push
js
pop
add
call
add
sub
repnz
pop
cs
dec
adc
outs
cdq
add
addr16
mov
call
inc
fldl2e
sar
(bad)
call
int3
fisttp
(bad)
(bad)
dec
xchg
out
addr16
add
fst
adc
ss
push
inc
imul
scas
cli
(bad)
jmp
push
adc
mov
xor
push
add
repnz
or
push
nop
push
aaa
inc
add
(bad)
jmp
gs
inc
aaa
jbe
xchg
jmp
(bad)
mov
mov
daa
jle
popa
imul
jae
out
call
mov
mov
test
inc
xchg
lea
(bad)
ds
(bad)
(bad)
jmp
push
lods
jbe
fistp
xchg
fmul
retf
mov
xchg
jg
jg
(bad)
call
and
int3
mov
call
lahf
stc
pop
cmc
xchg
retf
arpl
mov
(bad)
(bad)
(bad)
jmp
cdq
shl
or
xchg
or
call
xor
(bad)
cmps
(bad)
inc
and
loop
sahf
push
jge
je
jmp
and
retf
lock
mov
ret
jg
mov
push
fsubr
in
(bad)
push
cmp
fsubr
jecxz
jg
sar
call
leave
mov
lahf
cdq
xchg
jmp
clc
lgs
(bad)
out
mov
pop
dec
push
call
push
mov
pusha
retf
aad
nop
fnstsw
(bad)
inc
jno
mov
mov
adc
gs
push
sbb
fadd
daa
jns
or
std
loop
fist
sbb
pop
cmp
jbe
xor
adc
fadd
push
jns
mov
add
shl
or
cmp
ins
(bad)
mov
inc
ss
xlat
pop
call
mov
cmp
jmp
ins
jmp
adc
add
in
cmp
(bad)
jg
cwde
cmp
inc
outs
and
into
dec
xor
outs
xor
jp
retf
jo
hlt
outs
ret
lods
xor
bswap
loope
push
jns
scas
repz
sbb
(bad)
jg
add
ja
dec
imul
retf
jg
ins
cld
jno
pop
sbb
mov
rcr
(bad)
(bad)
(bad)
dec
or
not
daa
push
or
(bad)
dec
mov
mov
cmps
jmp
mov
aas
loopne
pmulhuw
loop
(bad)
(bad)
(bad)
(bad)
fcom
int
bnd
mov
xchg
inc
in
daa
pop
cmp
mov
xor
std
pushw
adc
cmp
sub
sar
mov
mov
outs
cli
mov
(bad)
(bad)
jge
loopne
ficomp
xchg
mov
cmc
fdivr
jns
out
ret
iret
out
je
imul
adc
inc
ins
popa
sbb
xchg
sub
out
ja
xor
add
mov
inc
jne
mov
sbb
sub
sbb
push
ja
(bad)
(bad)
jg
or
fstp
mov
test
test
jecxz
aaa
retf
lods
(bad)
call
(bad)
test
ins
(bad)
jmp
shr
sub
scas
out
out
nop
bound
test
or
push
rcl
inc
(bad)
daa
sbb
sub
(bad)
xor
gs
ret
repnz
push
retf
pop
rcl
fs
mov
cmp
test
fwait
jg
(bad)
(bad)
(bad)
mov
(bad)
ror
xlat
ins
xchg
stc
into
add
inc
shl
retf
int
inc
or
mov
mov
fcom
inc
jmp
fs
push
xor
adc
fnstenv
jne
dec
(bad)
(bad)
(bad)
jmp
jle
mov
fs
inc
inc
add
retf
mov
loope
inc
jns
icebp
retf
push
jge
idiv
fild
dec
psubusw
jl
jo
lock
and
sub
out
mov
jns
out
mov
je
(bad)
call
stos
or
jb
xchg
pushf
jge
adc
mov
mov
sti
fldenv
jge
xor
adc
ja
and
push
shl
lods
xchg
add
pop
sar
sub
jb
pop
sub
ds
dec
std
push
mov
jg
pop
mov
cmp
int
shl
mov
fdivr
xor
popa
cmp
outs
retf
rcr
ds
in
(bad)
(bad)
inc
adc
push
jmp
mov
push
cmps
outs
cmp
test
mov
outs
iret
xlat
xor
shr
frstor
in
sub
lds
mov
ret
jmp
(bad)
call
ja
repnz
mov
mov
addr16
mov
call
jo
cdq
mov
jns
lods
xor
mov
jecxz
loop
in
sub
stos
movs
inc
sahf
mov
(bad)
(bad)
mov
retf
in
loop
jmp
arpl
gs
fisubr
jge
mov
adc
in
dec
mov
lods
jb
jle
popa
inc
cdq
in
adc
out
loopne
dec
adc
mov
outs
rcr
fsub
das
(bad)
dec
sub
pop
push
out
jge
fsubr
ds
adc
add
add
rcl
add
push
or
dec
leave
cli
add
jo
aam
jl
ds
fdivr
jmp
mov
scas
xchg
mov
call
mov
cmc
lods
inc
loop
push
aam
jle
lock
(bad)
dec
mov
jo
mov
sbb
dec
mov
mov
pop
mov
mov
loopne
jg
mov
sbb
ds
mov
jbe
cmp
xor
aaa
std
fbld
dec
(bad)
cmp
imul
push
movs
pop
int
push
out
push
enter
dec
pop
loopne
push
shr
cli
cmps
fcomip
push
inc
test
hlt
jle
sbb
or
and
jp
mov
(bad)
call
mov
sbb
ins
dec
sub
dec
loopne
lods
(bad)
or
ins
enter
pop
(bad)
inc
xchg
mov
(bad)
retf
outs
or
xor
push
push
lds
pop
ins
jbe
or
xor
push
gs
jo
repz
hlt
jmp
sbb
in
jo
int3
xchg
or
sahf
mov
call
cmc
pop
std
popf
mov
les
jbe
xchg
xor
sbb
aas
pop
xchg
(bad)
loopne
cmp
jmp
clc
inc
cmp
sbb
stos
dec
std
icebp
fcmovnbe
loope
ss
idiv
je
cld
(bad)
(bad)
call
scas
pop
sbb
mov
fst
pop
and
inc
jbe
mov
stos
dec
dec
not
pop
xlat
shl
pop
mov
(bad)
(bad)
(bad)
dec
jae
cmc
or
mov
bound
cdq
das
scas
jbe
dec
lea
dec
adc
push
dec
daa
retf
hlt
add
or
mov
or
movs
mov
jmp
imul
inc
outs
(bad)
ss
pop
(bad)
aas
mov
adc
mov
jle
call
lea
jmp
adc
(bad)
sahf
dec
lods
ret
fwait
test
xor
push
push
adc
call
lock
sbb
cmp
(bad)
inc
xchg
icebp
push
fdivrp
jmp
cmps
call
bound
lods
(bad)
(bad)
pop
je
cmp
push
cmps
adc
jbe
xchg
dec
xor
lahf
cmp
stos
push
fisttp
fst
xchg
(bad)
(bad)
jmp
cmp
mov
cld
cmp
and
cld
or
loope
and
sahf
neg
(bad)
sbb
(bad)
int
ja
xchg
cmps
aam
stos
jl
mov
jno
jg
push
fs
cmc
hlt
sbb
dec
stc
pop
sti
cld
(bad)
(bad)
push
add
xlat
(bad)
sbb
add
jmp
loop
(bad)
inc
xor
(bad)
(bad)
mov
or
jle
inc
repz
xor
sar
int
push
(bad)
call
mov
cmp
or
loopne
jg
mov
add
(bad)
inc
loopne
mov
(bad)
std
xor
test
xor
jp
es
(bad)
(bad)
out
outs
loop
cmp
mov
ret
iret
cli
add
add
fisub
jno
mov
popf
lock
(bad)
(bad)
dec
dec
mov
stc
lods
xchg
je
pop
lods
pop
inc
jecxz
into
jmp
(bad)
mov
popa
inc
push
push
dec
clc
jg
xchg
jmp
popa
add
push
retf
push
in
push
in
pop
add
sbb
mov
mov
push
scas
mov
mov
dec
cli
adc
jge
mov
and
(bad)
dec
mov
push
push
and
xchg
sbb
and
enter
ret
aam
(bad)
(bad)
call
add
lods
or
addr16
fwait
add
mov
sbb
pop
jecxz
xchg
nop
jb
cli
(bad)
(bad)
dec
push
xchg
jg
jo
inc
pushf
ret
inc
hlt
cmp
dec
jns
and
cmp
push
gs
ins
mov
cmp
(bad)
push
or
cmp
in
js
rol
cli
mov
sbb
call
inc
push
pop
cmc
leave
xchg
jae
sbb
xor
into
mov
mov
sub
(bad)
(bad)
cmp
jle
cmp
(bad)
jno
mov
inc
jno
ud2
cmovle
xor
or
and
std
dec
jmp
or
xchg
scas
adc
(bad)
(bad)
mov
icebp
jge
xor
push
and
lock
sub
popa
test
stos
xchg
fistp
popa
mov
pop
mov
xchg
loopne
jmp
adc
sbb
movs
or
inc
jmp
aas
fiadd
jmp
(bad)
(bad)
jmp
ficomp
shl
sti
sbb
test
mov
jmp
adc
mov
(bad)
call
movs
out
retf
icebp
jmp
cmp
cmps
sub
shl
push
cld
jp
or
(bad)
push
call
push
xor
(bad)
(bad)
jmp
into
xchg
xchg
add
fs
push
call
adc
push
(bad)
mov
call
mov
(bad)
(bad)
push
mov
outs
fidiv
adc
out
add
push
and
pop
push
mov
ficom
(bad)
outs
(bad)
add
not
das
ret
or
xchg
popf
inc
ins
sbb
test
(bad)
(bad)
call
mov
pop
imul
iret
loop
inc
cmps
or
xor
mov
push
cmp
cli
scas
cli
bound
rol
or
je
jle
cmp
iret
jecxz
pop
xor
outs
loopne
jle
ret
stc
dec
sbb
(bad)
fisttp
jmp
add
sub
repz
xor
call
std
(bad)
call
and
mov
into
js
xchg
daa
jmp
fwait
call
(bad)
push
adc
add
pop
bnd
idiv
movs
repz
std
adc
or
(bad)
jmp
and
fnstcw
add
dec
pop
add
adc
and
stos
cmps
pop
(bad)
(bad)
(bad)
push
cld
fs
and
jle
or
push
dec
jmp
xchg
mov
ss
addr16
sbb
sbb
or
popa
into
call
retf
je
fwait
and
push
jp
icebp
xor
dec
push
fstp
xor
out
ret
lock
call
loopne
dec
jnp
arpl
loope
cmp
xchg
or
in
mov
pop
pop
xor
xchg
push
sub
mov
es
cmps
push
icebp
sub
js
rol
mov
sub
push
dec
cmp
(bad)
jmp
fld
sub
sar
retf
mov
push
jecxz
fdiv
ret
sbb
addr16
pop
(bad)
mov
sub
fcom
sub
cmp
push
cmp
or
pop
loopne
sti
(bad)
mov
dec
pop
das
cmps
push
cmp
ins
out
sbb
xchg
(bad)
(bad)
(bad)
dec
mov
dec
mov
push
loope
xchg
iret
repnz
fld
fs
shl
mov
cmc
mov
dec
retf
push
aaa
cld
das
clc
dec
and
pop
pop
cdq
ds
shl
mov
(bad)
(bad)
jmp
(bad)
add
mul
fbld
and
mov
stos
jmp
inc
mov
shl
xchg
sub
(bad)
jg
cmp
push
pop
pop
test
int
inc
rcl
xor
or
sahf
inc
or
add
ror
jns
or
fwait
dec
jns
xchg
sar
sub
sbb
sbb
jmp
jb
mov
or
xchg
lahf
xchg
movs
call
in
inc
ret
call
dec
jge
int
cmp
mov
pushf
and
pusha
inc
(bad)
push
pop
stos
call
fcom
test
cld
neg
(bad)
(bad)
(bad)
(bad)
mov
inc
adc
cmc
lahf
mov
mov
clc
ins
jae
or
jecxz
cmps
push
test
lods
out
inc
mov
rcl
les
in
pop
sbb
hlt
mov
lahf
mov
ins
clc
icebp
(bad)
cmp
push
push
cli
movs
pop
mov
outs
(bad)
jmp
cmp
adc
push
sub
ins
int
cld
mov
xor
das
clc
(bad)
jmp
or
out
clc
fld
pushf
or
imul
add
outs
mov
mov
cmp
cli
mov
push
xchg
pop
enter
into
dec
stos
jle
jmp
sbb
xlat
dec
fcmovnu
dec
arpl
and
mov
(bad)
(bad)
push
inc
cmp
xchg
ficom
mov
idiv
in
cmp
dec
dec
jmp
jmp
inc
call
in
jno
pop
sbb
ret
add
dec
retf
aam
rol
dec
cwde
div
test
(bad)
(bad)
(bad)
mov
and
dec
cmc
xchg
(bad)
fwait
mov
xchg
cmp
dec
pop
ins
mov
ins
lods
mov
pop
pushf
inc
call
or
jmp
add
sbb
push
mov
loop
cdq
adc
loope
scas
imul
jno
test
out
mov
sbb
cmp
cli
dec
dec
inc
xor
int3
xor
hlt
xchg
imul
fdivr
hlt
xlat
xchg
scas
lods
into
mov
(bad)
lds
shl
xchg
push
les
adc
xchg
adc
je
repnz
lock
inc
clc
pusha
jne
js
enter
xchg
xor
mov
mov
mov
hlt
dec
mov
jg
xchg
add
adc
popa
vpmovdb
stc
sbb
fcomip
call
jb
mov
mov
call
mov
mov
fadd
jmp
mov
js
cmc
vmovntps
out
sahf
adc
dec
jle
xor
mov
(bad)
cmp
mov
push
mov
es
fs
fsub
sbb
icebp
lods
xchg
mov
mov
dec
sti
pop
js
call
popa
cld
pop
inc
and
or
ins
or
idiv
fild
dec
lods
mov
fstp
cmp
jnp
hlt
(bad)
(bad)
(bad)
mov
(bad)
iret
jns
or
pop
js
mov
and
call
cdq
ud0
test
ins
mov
pop
mov
mov
xchg
jp
clc
xchg
adc
(bad)
(bad)
inc
mov
es
add
pop
mov
gs
aam
or
pop
mov
shr
shl
sbb
mov
dec
(bad)
(bad)
(bad)
call
and
mov
pop
out
cdq
inc
daa
lds
push
mov
cmps
mov
loop
(bad)
(bad)
call
cs
fwait
push
clc
push
popa
pop
cs
inc
cmps
xor
(bad)
sub
aad
lahf
inc
push
(bad)
inc
in
mov
mov
data16
xor
sub
dec
xor
adc
dec
aad
(bad)
(bad)
(bad)
inc
xor
cmp
in
test
aam
lahf
in
pop
and
inc
setg
iret
xor
call
into
lea
int
ret
pop
push
dec
sar
adc
outs
mov
cli
out
mov
push
jge
or
je
xchg
addr16
out
add
add
ins
arpl
sahf
js
int3
int3
and
or
bts
jnp
xchg
lea
int
dec
dec
jo
jmp
(bad)
(bad)
js
dec
rcr
xor
imul
lahf
inc
mov
adc
test
dec
mov
cmp
push
loop
pop
fisubr
mov
stos
jno
out
leave
not
xor
cmps
mov
repz
pop
lock
icebp
imul
cli
repz
sar
xor
mov
in
pop
fmul
mov
cld
(bad)
(bad)
fcomip
fist
ins
xchg
ins
rcr
cmp
push
xlat
mov
push
das
shr
ja
push
(bad)
in
mov
dec
sub
(bad)
test
push
ret
stc
loope
cmps
xor
pop
mov
or
aam
mov
(bad)
(bad)
call
ficom
cmp
cmc
cmp
dec
iret
or
jecxz
out
fld
mov
bound
mov
(bad)
out
dec
inc
xchg
push
(bad)
(bad)
mov
push
gs
xchg
loop
adc
out
cli
pop
cmp
dec
into
pop
rcr
xor
cmp
adc
sbb
mov
sbb
sub
pop
cmp
and
js
cdq
loop
(bad)
call
xchg
enter
into
(bad)
lods
xchg
mov
pop
push
adc
dec
and
test
(bad)
fnsave
cmc
push
inc
les
imul
sbb
push
fdivr
jg
cmp
addr16
jnp
xor
faddp
in
add
sub
cmp
(bad)
(bad)
push
push
jb
shl
mov
add
jne
imul
icebp
(bad)
call
icebp
jl
add
lea
fisubr
xchg
(bad)
adc
addr16
sub
(bad)
(bad)
(bad)
(bad)
cmp
movs
xchg
mov
push
ret
pop
bnd
mov
lods
adc
mov
(bad)
fadd
sbb
push
test
cld
mov
mov
sbb
loop
(bad)
(bad)
(bad)
jg
(bad)
aam
and
aaa
jae
(bad)
pusha
fnsave
(bad)
movs
(bad)
mov
lahf
xor
pop
mov
repz
xchg
dec
mov
push
aam
repnz
scas
test
jg
data16
or
dec
(bad)
in
ins
data16
mov
call
and
std
test
movs
add
hlt
fdivr
or
(bad)
mov
add
loopne
adc
int
dec
pusha
(bad)
add
xchg
(bad)
test
aas
imul
xor
mov
out
adc
pop
or
cmp
ficomp
adc
lds
(bad)
(bad)
jmp
test
sar
in
inc
adc
imul
sbb
in
mov
imul
clc
dec
sbb
push
cmc
push
sar
push
cld
dec
pushf
dec
loope
fisubr
add
test
shl
iret
jnp
pop
push
in
call
dec
mov
je
sahf
cdq
add
int3
aam
sub
(bad)
(bad)
inc
ins
mov
leave
icebp
inc
mov
jo
retf
int
xor
shl
(bad)
dec
adc
pop
leave
pop
fdiv
and
movs
neg
daa
aaa
and
(bad)
(bad)
(bad)
inc
(bad)
sub
cld
pop
pop
stos
aam
sbb
aas
sbb
out
scas
pop
mov
dec
xchg
call
sbb
cmp
jne
fisttp
movs
out
push
test
movs
sbb
or
fs
push
xchg
jmp
mov
jmp
in
mov
daa
stos
xchg
out
aaa
sti
shl
(bad)
(bad)
(bad)
push
movs
ja
or
ins
fadd
xor
sub
add
jmp
cmp
add
pop
call
fnstcw
retf
inc
or
lea
lock
(bad)
fisttp
or
adc
bound
sub
repnz
ins
dec
(bad)
out
add
or
into
dec
dec
std
pop
cmp
mov
dec
ficomp
xchg
inc
mov
(bad)
(bad)
jmp
and
mov
aam
pop
dec
sub
adc
in
and
sbb
mov
call
or
cdq
shr
add
push
ror
cmc
iret
push
cmp
pop
dec
sub
inc
jnp
or
push
pop
dec
scas
iret
stc
jnp
add
(bad)
rcl
jmp
cmc
test
js
aaa
aad
(bad)
(bad)
(bad)
(bad)
std
sub
adc
in
cdq
(bad)
in
loopne
and
push
add
mov
aad
xor
cwde
dec
cmp
mov
push
(bad)
jg
jg
ret
in
dec
rol
clc
mov
pop
shl
sar
jmp
(bad)
jmp
inc
lods
jno
shr
das
setle
mov
fmul
sti
loopne
mov
mov
inc
lock
out
div
into
cmp
mov
ret
and
icebp
(bad)
(bad)
(bad)
call
addr16
std
call
aas
stc
loopne
mov
lds
in
fisub
inc
mov
not
(bad)
(bad)
call
inc
dec
adc
mov
jle
clc
repnz
call
xor
(bad)
(bad)
(bad)
jg
xlat
ret
or
fdivr
in
in
in
jb
popa
es
mov
jno
or
add
int3
and
add
(bad)
(bad)
call
pop
cmp
nop
cmc
jge
pushf
dec
sbb
(bad)
mov
pushf
mov
into
daa
add
jo
aad
hlt
jns
inc
jnp
sbb
cmp
fs
and
adc
mov
mov
and
pop
pusha
inc
dec
call
or
lods
adc
aas
outs
add
(bad)
inc
cmp
push
add
imul
clc
adc
(bad)
dec
inc
adc
rol
call
loope
cld
fld
lods
pop
add
sub
sbb
push
inc
push
jmp
sar
adc
test
mov
fbstp
call
push
push
out
xlat
mov
call
dec
pop
inc
jmp
(bad)
and
dec
addr16
adc
lock
and
jge
lods
lods
loopne
sar
(bad)
jmp
call
push
adc
shl
ss
cld
mov
pop
loop
ja
cdq
shr
(bad)
or
add
(bad)
dec
retf
call
jp
inc
dec
outs
enter
arpl
dec
shl
mov
pop
bound
pop
push
test
inc
sub
push
ds
sub
dec
ja
(bad)
(bad)
dec
movs
push
ror
ret
fnstsw
sbb
jne
aam
add
sub
dec
mov
test
sub
xor
or
jg
(bad)
dec
test
(bad)
cwde
cmp
xchg
ja
test
cmp
leave
ss
je
(bad)
(bad)
(bad)
call
out
stos
or
repnz
pop
cmp
popf
xchg
pop
(bad)
stc
fcom
mov
lods
sbb
push
jnp
xor
imul
dec
std
mov
jno
push
add
(bad)
jge
stos
add
jl
inc
cmp
lock
dec
ror
cmps
dec
mov
pop
out
scas
add
xchg
loope
jmp
cli
jp
out
mov
imul
leave
enter
loope
xchg
cld
inc
push
aad
or
pusha
push
dec
add
inc
(bad)
aad
push
push
fiadd
ds
mov
xchg
jg
jl
cmps
ret
scas
fcomip
(bad)
mov
fsub
xchg
stc
lds
ret
jo
cmp
inc
dec
sub
and
fdiv
inc
popa
ret
inc
lea
sahf
push
std
call
inc
aad
ins
scas
(bad)
add
imul
sub
inc
jl
das
and
(bad)
push
jmp
or
(bad)
(bad)
(bad)
inc
dec
dec
push
shr
int
xor
(bad)
popf
and
retf
loopne
xor
pusha
cld
push
or
(bad)
movs
jo
pop
xor
sar
(bad)
mov
std
gs
iret
(bad)
cmp
js
dec
jg
inc
xor
jbe
pop
pop
sub
movs
loope
scas
nop
cmc
pop
cmps
test
(bad)
push
jmp
or
push
test
sub
(bad)
(bad)
push
adc
mov
and
or
mov
pop
jmp
repz
mov
jp
and
(bad)
call
pop
xchg
jno
xor
push
pop
pusha
das
mov
dec
pop
fistp
fdivr
sar
pop
xchg
(bad)
repnz
mov
pop
loope
(bad)
(bad)
(bad)
(bad)
ds
sub
fisub
push
mov
cmps
sub
stc
add
stos
aas
pop
mov
cdq
xchg
sbb
cld
fild
xor
push
add
in
adc
dec
jg
sub
pop
xchg
cli
sti
sub
mov
and
mov
shl
(bad)
(bad)
mov
mov
(bad)
pusha
add
outs
scas
cmp
out
movs
pusha
inc
cmp
xchg
(bad)
(bad)
(bad)
(bad)
fistp
loope
cwde
xor
das
xchg
leave
mov
fucomi
mov
dec
xor
push
sbb
jbe
dec
mov
(bad)
(bad)
push
enter
dec
dec
rcr
out
test
(bad)
ins
mov
movs
xor
ret
adc
push
inc
jmp
repz
or
sub
test
jbe
pop
mov
test
sub
jmp
mov
pop
adc
cmp
mov
pop
or
clc
cdq
jno
jl
(bad)
call
push
lock
sub
pop
push
shr
cli
outs
xchg
lods
pop
sahf
push
mov
push
hlt
cwde
pop
mov
dec
stos
or
ret
cmp
fstp
call
fistp
movs
aaa
dec
cld
mov
pop
adc
jae
cmc
jns
and
pusha
jno
(bad)
(bad)
(bad)
ds
sbb
clc
nop
pop
lods
and
test
int
pop
stos
and
mov
(bad)
inc
sahf
fcomip
mov
cmovle
mov
push
xor
jns
jo
(bad)
(bad)
(bad)
push
shl
mov
push
inc
inc
iret
ins
mov
sub
inc
cmp
xchg
(bad)
cmp
ins
stos
or
push
xchg
xchg
inc
mov
shl
ret
scas
inc
ja
mov
rcl
add
sub
sbb
(bad)
(bad)
push
aas
fdivp
fsub
mov
push
popf
dec
das
dec
call
mov
ror
jl
sub
jmp
sbb
sub
shl
cmp
into
xor
sub
add
js
mov
repnz
xchg
inc
(bad)
call
mov
aam
dec
or
fnstenv
pusha
mov
inc
outs
repz
pop
xchg
ficom
rcr
shl
in
retf
aad
shl
(bad)
(bad)
jg
or
or
clc
loopne
call
int
cld
and
das
add
call
and
add
std
(bad)
call
std
(bad)
jmp
mov
pop
cmp
(bad)
and
inc
cmc
mov
pop
lods
inc
xor
inc
in
imul
fidivr
or
std
lahf
in
xlat
jge
or
fisub
ins
dec
jne
ins
std
jg
dec
pop
mov
cs
pop
outs
cmp
adc
push
(bad)
and
and
cmps
jg
jnp
mov
jge
fistp
hlt
sub
test
mov
mov
mov
and
sub
test
(bad)
(bad)
call
arpl
(bad)
push
je
lods
hlt
xchg
repz
fisub
stos
sub
std
test
ret
jg
test
pusha
dec
call
jp
mov
(bad)
call
fidivr
push
cmp
sub
out
loop
push
fcmovbe
in
xor
cmp
(bad)
jmp
jbe
pop
enter
test
in
popf
xchg
das
mov
or
cli
test
(bad)
(bad)
inc
mov
jnp
pop
(bad)
aam
mov
and
outs
adc
mov
out
mov
loop
(bad)
(bad)
mov
stos
out
js
add
loopne
cmp
adc
pop
bound
test
jge
inc
ret
cmp
and
pop
shl
not
scas
pusha
jae
(bad)
jmp
mov
jmp
push
shr
fdivr
(bad)
xchg
dec
enter
aas
push
mov
stos
inc
adc
mov
popf
xor
imul
mul
or
xchg
addr16
mov
(bad)
pusha
sar
in
icebp
std
xchg
idiv
xchg
mov
jmp
xchg
std
push
mov
mov
test
push
push
or
lods
jmp
aaa
fcomp
retf
das
push
push
jb
rcl
or
or
(bad)
call
push
sbb
mov
adc
sub
mov
bound
jmp
xchg
loope
xchg
lea
dec
dec
test
and
pop
or
adc
push
gs
aam
sbb
(bad)
jmp
mov
scas
data16
stos
shr
sahf
push
pop
imul
sbb
std
mov
push
cld
jmp
inc
in
mov
dec
mov
rol
add
bound
or
dec
dec
jmp
in
sbb
cmp
add
mov
paddd
jne
jno
jp
lock
or
(bad)
outs
cli
(bad)
jg
push
cld
adc
mov
cmps
into
(bad)
pushf
push
(bad)
lock
call
pop
add
inc
jne
outs
(bad)
arpl
pop
mov
loop
(bad)
mov
jecxz
cmp
out
mov
push
call
fs
jae
jecxz
(bad)
push
push
and
mov
int3
and
and
nop
add
leave
cmp
imul
jmp
arpl
add
hlt
inc
xchg
call
pop
cmps
push
(bad)
mov
xor
(bad)
(bad)
jg
dec
jge
nop
mov
imul
hlt
ret
test
dec
mov
icebp
(bad)
(bad)
call
adc
mov
and
mov
test
mov
movs
enter
jbe
jmp
cmp
jmp
pop
xchg
push
sbb
aam
mov
mov
and
cmp
data16
cmp
add
jnp
scas
inc
mov
mov
cs
push
and
hlt
(bad)
call
jg
mov
cmp
cmc
icebp
cmp
mov
lock
jnp
mov
mov
dec
(bad)
ins
stos
sbb
sti
int3
xchg
ins
mov
jg
cmp
push
movmskps
repnz
add
xchg
cmp
sbb
(bad)
(bad)
mov
xor
mov
js
or
adc
and
daa
hlt
pop
sbb
icebp
js
scas
aam
mov
dec
pusha
jo
xor
bound
int3
das
sub
ret
shl
or
(bad)
(bad)
push
in
push
sti
inc
mov
addr16
ja
clc
aam
sar
ins
sub
push
jmp
in
and
iret
scas
(bad)
(bad)
dec
stos
sub
mov
cmp
mov
mov
inc
inc
call
cli
(bad)
mov
(bad)
enter
into
jp
and
stos
xchg
call
(bad)
mov
mov
arpl
loopne
je
in
xor
mov
jl
inc
dec
clc
pop
cld
sub
pop
ror
test
(bad)
(bad)
(bad)
jmp
stos
jae
hlt
cld
imul
pop
test
pusha
mov
outs
pusha
jno
ja
ret
mov
les
jmp
(bad)
(bad)
(bad)
call
shl
or
and
ror
cmp
imul
cmp
shl
das
(bad)
(bad)
(bad)
dec
lock
push
add
dec
out
scas
leave
xor
or
xor
lea
loope
add
stos
sahf
jle
xchg
xchg
or
(bad)
mov
popa
mov
call
adc
push
cmp
(bad)
inc
inc
jecxz
in
xor
cwde
sahf
sbb
mul
pop
enter
popf
in
and
call
mov
fist
adc
pop
movaps
or
in
bnd
cmps
mov
sbb
inc
sbb
and
jecxz
(bad)
dec
xchg
imul
xor
adc
sub
mov
cdq
ficomp
(bad)
dec
add
push
inc
sar
shl
mov
push
int3
adc
dec
jmp
add
lds
ds
push
mov
(bad)
(bad)
call
loope
pop
and
icebp
(bad)
and
aad
test
js
sub
dec
sub
pop
retf
mov
imul
adc
or
cmps
jecxz
mov
(bad)
push
sbb
daa
or
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
push
jmp
sti
xor
add
mov
xchg
mov
cmp
idiv
push
inc
jg
mov
jnp
and
lds
popf
fistp
or
ss
dec
mov
mov
stos
in
stos
xor
or
out
call
sti
stc
shr
inc
cmp
ret
push
xor
mov
inc
retf
mov
sahf
mov
imul
(bad)
push
and
xchg
jno
or
jl
inc
jb
pop
push
int
mov
or
(bad)
(bad)
call
(bad)
cs
repz
sub
nop
lods
xchg
xchg
mov
adc
pusha
jbe
(bad)
push
arpl
or
test
(bad)
fwait
mov
cmc
mov
cli
and
push
cli
retf
dec
(bad)
fucomip
(bad)
pop
xor
or
les
ss
sub
mov
jge
fstp
cmp
das
scas
push
sub
(bad)
mov
mov
retf
outs
dec
movntq
xor
mov
int
mov
fstp
mov
xchg
inc
dec
daa
inc
and
mov
scas
es
int3
aaa
xabort
fwait
or
ret
mov
daa
cmp
in
lahf
cmp
pop
xchg
adc
sbb
(bad)
fcomip
out
into
xor
cmp
out
into
(bad)
mov
sub
(bad)
mov
pop
cwde
rcr
clc
dec
mov
out
mov
mov
dec
pop
mov
or
xchg
push
dec
sahf
je
loopne
mov
(bad)
call
in
outs
jg
sub
sub
shl
lahf
xor
hlt
aam
test
(bad)
mov
adc
pop
adc
mov
sbb
call
inc
dec
fiadd
mov
or
bound
ds
xlat
mov
(bad)
jmp
bound
jno
add
push
mov
xchg
adc
mov
movs
(bad)
push
popf
fwait
sub
sbb
ja
sub
call
mov
enter
lock
stos
push
shl
or
lods
push
mov
ss
repz
xchg
mov
jge
push
jl
xchg
outs
push
xor
xor
repnz
(bad)
call
push
add
repnz
ins
fs
sub
icebp
lds
push
add
mov
dec
push
jnp
ds
fistp
outs
cli
in
dec
fdiv
ss
out
aam
mov
jle
in
mov
jmp
mov
mov
je
test
leave
clc
mov
sar
jg
sub
mov
xchg
pop
push
stos
icebp
fs
cmps
icebp
ja
ss
sub
sbb
mov
call
lock
test
push
adc
cmp
add
ins
xor
jmp
sbb
mov
mov
scas
clc
pop
jbe
mov
les
dec
xor
ins
scas
ins
pop
retf
mov
(bad)
(bad)
(bad)
mov
mov
push
jecxz
pop
push
mov
(bad)
retf
pop
mov
or
(bad)
(bad)
jmp
cs
mov
sub
pop
sub
ja
cmp
test
icebp
(bad)
(bad)
inc
(bad)
outs
cs
imul
mov
mov
call
test
mov
pop
inc
push
xor
mov
mov
std
popf
call
sbb
mov
mov
mov
mov
ja
jl
push
push
add
cmp
sbb
sbb
movs
cmps
jo
jbe
mov
jmp
bswap
dec
lahf
minps
rep
mov
mov
retf
std
mov
or
(bad)
call
lock
cdq
cmps
les
fcom
jnp
xor
push
out
lods
mov
inc
call
std
mov
mov
mov
sub
std
lds
div
push
loop
mov
sti
mov
retf
cli
(bad)
(bad)
(bad)
dec
std
cmp
mov
mov
lods
lock
(bad)
clc
test
stos
icebp
(bad)
(bad)
(bad)
dec
xchg
cwde
cmps
sub
loop
cld
aad
xlat
fcmovnbe
div
mov
mov
retf
fbld
push
sub
xchg
fst
cdq
sti
ficom
xchg
ror
(bad)
fcomip
leave
rcl
push
mov
les
inc
cwde
test
sbb
(bad)
in
mov
outs
inc
int
mov
adc
mov
sbb
(bad)
popf
jle
mov
xchg
sti
lods
in
daa
fwait
xchg
dec
mov
(bad)
inc
and
and
movs
mov
enter
xchg
dec
push
adc
cdq
stos
sahf
cmp
(bad)
sti
cmp
daa
test
icebp
(bad)
jmp
push
les
cli
push
(bad)
mov
push
test
xor
inc
xor
popa
pop
cmovl
addr16
or
stos
(bad)
jmp
data16
fwait
cs
cmp
mov
cmp
mov
test
mov
jbe
(bad)
(bad)
inc
push
fldenv
test
mov
mov
hlt
ss
jp
sahf
jno
test
dec
fcom
jae
push
fs
test
inc
arpl
ins
fisubr
add
stos
dec
aad
cs
dec
mov
push
pop
mov
nop
fs
(bad)
int
(bad)
mov
xchg
pusha
test
push
jl
jl
xchg
xor
sbb
fucomi
lods
(bad)
(bad)
(bad)
call
xchg
jbe
inc
daa
pop
and
mov
sub
out
adc
fadd
js
push
sar
bound
(bad)
call
rcl
pop
mov
retf
scas
mov
addr16
mov
out
shl
jmp
mov
data16
mov
mov
aam
scas
out
sbb
test
adc
clc
inc
sbb
aam
sbb
sub
xchg
xor
fidivr
sbb
sbb
(bad)
(bad)
out
add
pop
pop
xchg
vcvttsd2si
fmul
mov
retf
(bad)
call
adc
dec
xor
jle
scas
out
push
xor
mov
pusha
std
(bad)
(bad)
(bad)
call
ds
xor
fidiv
sub
arpl
iret
xchg
push
cmps
es
(bad)
(bad)
jmp
fsubr
test
jle
jp
cs
sbb
sub
pushf
mov
mov
(bad)
(bad)
(bad)
call
dec
cld
jbe
add
push
inc
outs
aam
stc
sbb
aam
icebp
cmps
or
dec
jmp
inc
pop
lahf
pop
ins
inc
dec
cmp
inc
aaa
mov
adc
and
(bad)
(bad)
fcomp
xor
pop
out
inc
push
fsubr
arpl
shl
ret
cmp
mov
add
add
adc
add
(bad)
aad
inc
ja
xchg
jae
push
jb
loop
xchg
xor
leave
cmps
push
inc
xor
(bad)
call
push
jp
scas
outs
data16
push
mov
xor
push
cmp
repz
mov
(bad)
(bad)
(bad)
jmp
xchg
add
cmp
out
add
sti
inc
jmp
lds
in
sar
mov
movs
lock
stos
lods
out
inc
clc
popa
ror
xchg
loopne
sub
loop
(bad)
(bad)
jmp
mov
adc
mov
mov
test
mov
mov
or
(bad)
xor
push
push
jno
push
(bad)
(bad)
mov
add
mov
dec
jg
cmp
ret
cmc
call
mov
xchg
pushf
fsub
fbstp
(bad)
(bad)
(bad)
call
jl
lds
rcl
xor
daa
movs
or
or
lock
ins
or
pop
sub
pop
cmp
ins
xor
mov
or
shr
mov
fdiv
stc
pop
mov
xor
cwde
gs
(bad)
fbld
pop
pop
cmp
mov
mov
es
loopne
mov
mov
pop
jno
jo
clc
mov
mov
(bad)
(bad)
(bad)
push
push
add
test
add
lds
neg
dec
test
faddp
mov
js
loope
(bad)
(bad)
fist
push
repz
push
jns
cmc
retf
es
push
jp
or
out
or
jge
call
inc
pushf
jmp
sbb
outs
aaa
ja
lahf
cmps
inc
inc
out
mov
(bad)
(bad)
(bad)
(bad)
in
xor
adc
mov
jmp
ins
lds
add
retf
cmp
aaa
push
rcr
sbb
push
fwait
pop
sbb
outs
(bad)
iret
mov
stc
(bad)
(bad)
loop
dec
(bad)
(bad)
repnz
retf
shr
out
repz
pop
or
ins
dec
lods
hlt
sbb
clc
xchg
into
hlt
icebp
xchg
and
jbe
ins
jae
cli
lods
in
lods
scas
push
add
(bad)
jne
sbb
xlat
or
add
inc
rcl
(bad)
(bad)
(bad)
jle
sti
ror
(bad)
sub
sti
xchg
fistp
stos
xchg
arpl
xchg
repnz
ds
push
push
pushf
loope
imul
aas
push
xchg
mov
sbb
iret
sar
jle
jnp
jmp
lahf
jge
xor
bound
fnstsw
cs
mov
cmc
in
dec
ins
iret
push
rcr
aaa
sbb
js
inc
cmp
call
mov
repz
fsub
addr16
into
jge
mov
jae
jbe
adc
sub
sub
cmc
(bad)
(bad)
jnp
imul
jmp
cmp
pop
(bad)
inc
test
(bad)
das
push
mov
sbb
inc
loop
nop
pop
push
(bad)
out
and
xlat
push
cwde
xor
sbb
mov
sub
(bad)
(bad)
(bad)
jmp
test
dec
into
inc
in
js
imul
dec
lock
mov
outs
arpl
jo
push
(bad)
xlat
das
stos
jg
or
imul
(bad)
call
push
lock
(bad)
(bad)
(bad)
jnp
jb
enter
repnz
or
(bad)
mov
out
cmp
pop
(bad)
(bad)
call
ret
(bad)
(bad)
scas
push
mov
test
push
rcr
pushf
mov
(bad)
push
mov
fdiv
(bad)
sub
(bad)
aad
fucom
dec
fwait
lea
add
call
cs
jae
and
push
(bad)
rol
jle
(bad)
(bad)
push
mov
stos
mov
pop
and
xor
mov
in
push
mov
(bad)
push
(bad)
cmp
call
mov
movs
int3
xor
jmp
(bad)
call
int
inc
cwde
xchg
push
mov
sub
imul
cwde
adc
sub
(bad)
(bad)
fisub
test
in
icebp
pop
dec
push
xor
or
add
adc
(bad)
dec
in
mov
ja
push
jle
cmps
in
outs
lahf
(bad)
(bad)
call
idiv
mov
mov
pop
fstp
fild
fist
jmp
int
mov
das
or
hlt
clc
dec
mov
js
js
mov
(bad)
jmp
mov
neg
mov
xor
ins
(bad)
(bad)
(bad)
call
sahf
cmp
xor
sub
sub
mov
aaa
xor
jne
in
sbb
call
and
mov
push
add
clc
call
scas
out
jnp
cld
xlat
sub
ret
or
(bad)
js
iret
adc
sub
push
mov
aam
xor
mov
push
sar
ja
test
xchg
lock
push
neg
loop
loope
(bad)
jmp
test
iret
test
mov
ins
ss
push
push
imul
(bad)
(bad)
jl
mov
arpl
push
sub
mov
mov
push
int
inc
aad
ds
(bad)
(bad)
(bad)
sti
ins
mov
pop
push
adc
mov
add
pop
sbb
imul
out
adc
(bad)
(bad)
(bad)
call
repz
push
or
xchg
push
dec
jl
(bad)
jne
cmp
adc
push
jnp
jg
(bad)
call
jecxz
ins
das
in
fdivr
jnp
rol
(bad)
repz
(bad)
(bad)
(bad)
call
jmp
or
push
repz
mov
add
das
mov
push
pop
not
aad
or
pop
sbb
jge
mov
(bad)
jg
pop
or
in
das
adc
pusha
sub
das
mov
adc
(bad)
in
cmp
dec
mov
push
xlat
xor
pop
and
movs
test
call
imul
leave
mov
mov
stos
xor
clc
(bad)
loop
shr
mov
add
push
daa
fs
xchg
mov
pop
call
out
(bad)
mov
cmp
push
arpl
(bad)
(bad)
(bad)
(bad)
cmp
ret
rcl
lahf
xor
(bad)
fistp
std
lods
addr16
xor
push
cli
(bad)
call
lea
das
sub
jg
loopne
out
test
or
out
dec
stc
(bad)
(bad)
(bad)
dec
mov
imul
ins
and
mov
push
cmps
(bad)
dec
scas
pop
inc
idiv
test
inc
clc
ins
sahf
xor
in
pop
adc
loop
mov
loopne
out
lds
pop
sub
in
cmp
stc
movs
pop
in
jno
adc
sbb
test
push
cmp
(bad)
inc
pop
adc
fimul
push
in
add
xchg
in
sub
push
mov
mov
pop
and
xlat
cmp
enter
dec
loope
(bad)
(bad)
call
pop
sub
enter
movs
sahf
pop
dec
mov
loope
cmp
addr16
mov
and
cmc
cmp
dec
sub
out
sub
(bad)
retf
(bad)
dec
push
xor
inc
sbb
(bad)
mov
mov
test
(bad)
clc
mov
jg
int3
xchg
dec
data16
fcomp
dec
pop
das
lods
jle
adc
loope
(bad)
jmp
in
pop
or
jp
jg
inc
int
sbb
out
test
popf
sbb
fiadd
push
pusha
push
jae
jecxz
dec
or
(bad)
ret
stos
mov
retf
push
(bad)
jmp
push
ror
leave
leave
enter
aas
jl
jne
mov
aad
jnp
push
mov
add
outs
push
popf
or
dec
dec
pop
add
xor
out
pop
bswap
inc
sub
lahf
(bad)
js
push
mov
(bad)
(bad)
(bad)
push
mov
cdq
mov
fadd
inc
xor
jnp
shl
(bad)
mov
into
bound
call
movs
fsubr
xchg
xchg
adc
fadd
dec
(bad)
(bad)
jmp
cmps
mov
push
sub
jns
jae
adc
ror
cmc
mov
les
fisubr
dec
sub
jmp
cmp
mov
(bad)
adc
xor
xor
inc
nop
(bad)
(bad)
(bad)
stc
das
and
dec
jb
inc
push
stos
push
xchg
ret
fwait
sub
dec
enter
xor
inc
or
mov
enter
inc
sub
(bad)
(bad)
(bad)
cmp
lock
fstp
fwait
push
into
lahf
push
icebp
sbb
dec
inc
sub
(bad)
call
pop
mov
test
sti
mov
addr16
repnz
adc
test
mov
dec
pop
clc
lahf
push
pop
push
jge
fstp
ret
(bad)
(bad)
jmp
(bad)
jno
fst
jmp
(bad)
repnz
sub
std
and
(bad)
(bad)
(bad)
(bad)
fistp
pop
in
les
sub
mov
pushf
fcomip
adc
dec
stos
call
(bad)
call
sub
jecxz
in
push
add
ds
dec
jmp
xlat
jno
hlt
mov
or
jle
jmp
cwde
fsubr
fld
clc
or
repnz
pop
xchg
mov
(bad)
(bad)
(bad)
jmp
jecxz
test
shr
in
enter
test
sbb
cmp
pop
adc
(bad)
call
ins
mov
(bad)
ficomp
dec
call
ds
jb
xor
pop
sub
fsubr
push
sub
xchg
call
mov
or
nop
push
or
inc
jno
xchg
es
jmp
popf
retf
push
mov
test
sub
inc
mov
dec
(bad)
mov
jnp
loope
es
inc
mov
jecxz
xor
mov
mov
sbb
xchg
das
inc
enter
xchg
(bad)
(bad)
push
(bad)
push
pop
inc
movs
lea
jge
inc
arpl
mov
(bad)
(bad)
inc
or
lods
push
adc
fcom
sub
clc
fistp
xor
test
inc
sbb
test
sbb
outs
push
xchg
or
inc
sub
(bad)
(bad)
jmp
lea
mov
ins
push
out
aas
loopne
out
scas
clc
mov
movs
sar
(bad)
(bad)
jmp
push
xchg
pop
outs
cld
lods
sar
xor
into
imul
enter
mov
jmp
(bad)
call
(bad)
xchg
push
adc
pushf
jne
push
xchg
mov
adc
push
jo
leave
cli
push
inc
mov
sub
xor
(bad)
cmp
cwde
in
test
ins
pusha
(bad)
(bad)
call
pop
inc
dec
fadd
mov
fist
mov
aas
dec
or
nop
mov
test
jnp
cmp
call
jmp
dec
jecxz
test
aad
repz
jecxz
cld
(bad)
(bad)
mov
inc
test
fistp
fistp
jl
push
add
sbb
and
adc
sub
scas
sahf
jae
dec
pshufw
(bad)
(bad)
call
and
mov
cld
(bad)
jnp
or
ds
imul
and
(bad)
sbb
push
xchg
iret
push
pop
mov
inc
fisttp
imul
hlt
cs
xor
pop
(bad)
sbb
and
ss
sub
(bad)
push
cwde
xchg
dec
call
int3
inc
and
sub
sbb
sbb
js
addr16
daa
inc
test
cmc
cmp
sbb
gs
dec
xor
dec
mov
push
(bad)
(bad)
(bad)
(bad)
mov
dec
ds
(bad)
or
jg
adc
push
mov
adc
(bad)
(bad)
(bad)
(bad)
clc
sar
xchg
movs
addr16
adc
jnp
dec
mov
movs
(bad)
iret
adc
xor
in
xor
fcmovu
sub
std
(bad)
inc
push
cmp
ins
mov
daa
push
(bad)
and
adc
adc
(bad)
(bad)
call
aas
add
(bad)
outs
dec
fldenv
pop
mov
fisttp
xchg
cwde
mov
pop
mov
idiv
pop
lock
loop
pusha
sub
mov
enter
jle
lods
repnz
add
(bad)
fild
jl
push
cmps
sub
aas
shl
or
rol
or
das
test
sbb
mov
inc
in
(bad)
(bad)
dec
(bad)
mov
rcr
lea
fnstsw
lahf
dec
or
sub
out
(bad)
call
push
sbb
jae
aas
in
adc
lea
data16
push
jp
loop
push
mov
int3
xor
(bad)
call
popf
outs
push
pop
and
stc
cmp
(bad)
(bad)
jmp
jnp
and
jge
jo
cmp
out
fs
xlat
mov
ds
into
mov
les
cli
(bad)
jmp
adc
(bad)
pop
cmp
leave
outs
dec
int3
xchg
pop
sbb
sub
add
cdq
and
mov
xchg
jecxz
sub
stos
ins
jmp
or
test
mov
rol
(bad)
fldcw
mov
jmp
xor
scas
sbb
push
(bad)
call
sbb
inc
pop
jmp
push
into
aas
mov
adc
hlt
mov
sub
sub
push
scas
(bad)
jecxz
(bad)
(bad)
jmp
rcr
movs
movs
ret
ins
sub
pop
mov
mov
mov
(bad)
(bad)
fbld
scas
cli
mov
sahf
push
mov
rol
add
aaa
or
adc
push
mov
push
bound
sbb
adc
inc
pop
mov
daa
cmps
idiv
push
imul
stos
nop
pop
or
xchg
(bad)
call
xor
jae
ins
scas
jl
jb
mov
in
xor
sub
xchg
outs
(bad)
(bad)
inc
aad
scas
in
dec
pop
shr
bound
mov
ss
cmp
sub
call
xchg
popf
xchg
mov
jl
fcomp
xchg
(bad)
adc
(bad)
(bad)
(bad)
in
jp
mov
movs
adc
icebp
shl
js
out
gs
inc
cmps
push
sub
rcr
loop
mov
cmc
ins
fild
in
(bad)
(bad)
dec
cli
into
loope
in
jae
in
push
xlat
pop
scas
in
mov
xor
test
cli
(bad)
jmp
pushf
mov
imul
loope
add
jg
pop
(bad)
pop
inc
mov
call
fwait
les
pop
adc
sbb
push
pop
shl
rol
jo
mov
(bad)
(bad)
(bad)
(bad)
cmp
sbb
popa
je
lahf
cmp
dec
jno
es
std
cmp
xor
mov
or
mov
push
test
inc
adc
lds
comiss
into
sahf
out
mov
(bad)
pop
test
(bad)
(bad)
jg
aas
dec
xchg
stc
adc
mov
lds
and
xchg
out
push
cmp
lods
cli
(bad)
(bad)
jmp
mov
dec
cmp
cmp
(bad)
jge
pop
les
jle
xor
jmp
test
lods
nop
bound
adc
jb
jbe
out
addr16
(bad)
mov
outs
add
call
gs
jle
adc
fild
cmps
xlat
es
inc
xor
jne
adc
pusha
(bad)
(bad)
(bad)
jg
or
add
fidivr
sbb
xor
stos
fwait
pop
push
dec
(bad)
stc
pop
daa
pop
mov
and
jmp
xor
stos
jecxz
pop
inc
imul
or
jmp
(bad)
out
xor
(bad)
jl
jmp
aas
mov
(bad)
(bad)
jmp
test
in
jge
(bad)
into
push
cmp
add
(bad)
(bad)
jmp
jno
or
cmp
ss
xlat
cs
iret
sbb
iret
sbb
or
push
(bad)
(bad)
(bad)
jmp
sbb
lods
cdq
loop
cmp
inc
adc
out
lods
ror
out
in
xor
mov
pop
xor
outs
outs
sar
(bad)
mov
pop
daa
retf
jg
inc
adc
(bad)
jecxz
sbb
jl
in
(bad)
call
(bad)
and
ret
shl
arpl
cmp
in
pop
lds
mov
xchg
ret
(bad)
(bad)
mov
arpl
(bad)
jo
loop
les
mov
and
jge
or
xchg
dec
les
call
pop
hlt
jae
mov
cmc
mov
and
sbb
jns
dec
push
inc
out
sahf
adc
inc
es
mov
ss
and
add
add
pop
and
fstp
jbe
test
iret
out
es
in
inc
test
shr
mov
std
inc
xchg
imul
ror
out
inc
(bad)
push
mov
(bad)
mov
mov
jge
repz
sbb
push
push
(bad)
(bad)
mov
xor
shr
sbb
xchg
mov
rol
and
arpl
rol
mov
iret
mov
jo
fnstsw
into
sbb
adc
ror
and
cmp
lods
shl
(bad)
jg
cli
mov
mov
cmp
push
pushf
mov
(bad)
mov
push
sti
(bad)
and
sub
jmp
mov
loope
jnp
outs
xor
xor
fcomp
ja
mov
add
mov
xor
icebp
ins
call
(bad)
(bad)
(bad)
fcomp
push
dec
adc
xchg
dec
and
mov
cwde
adc
mov
loop
out
or
ret
xchg
aaa
push
shl
retf
xchg
cmp
mov
inc
(bad)
(bad)
inc
aam
dec
fbstp
or
fucomi
adc
aaa
loopne
cmps
push
xor
xchg
sbb
push
cmp
outs
jb
rol
cld
ds
(bad)
jp
sahf
or
fs
fucom
jnp
mov
jb
or
add
dec
scas
je
(bad)
cli
mov
out
jmp
stc
and
pop
add
xchg
xchg
retf
popf
dec
or
push
pop
sub
push
mov
(bad)
(bad)
(bad)
jmp
and
rcr
push
lahf
push
cli
pusha
xchg
sti
jmp
xchg
mov
(bad)
(bad)
(bad)
jmp
adc
pop
dec
sahf
ins
leave
sub
cli
fadd
les
mov
popf
push
iret
jge
mov
dec
and
int
(bad)
sbb
repnz
push
add
jno
inc
(bad)
mov
fmul
in
(bad)
jmp
sbb
sub
cmp
mov
push
xchg
movs
ret
lea
push
sub
call
mov
shl
(bad)
outs
lea
or
push
aad
(bad)
jmp
xchg
fucomip
cmp
or
xchg
test
jae
test
(bad)
(bad)
jg
xor
repnz
mov
retf
lods
inc
enter
push
arpl
xlat
jge
(bad)
fdiv
test
sub
movs
mov
adc
(bad)
mov
mov
mov
push
lods
(bad)
call
push
sbb
ss
dec
imul
mov
and
test
(bad)
(bad)
(bad)
fbld
xchg
mov
dec
jns
mov
dec
xchg
xchg
push
sub
xor
dec
(bad)
jp
mov
mov
push
cmp
pop
mov
jmp
popa
jne
int
sub
call
(bad)
stc
jb
jae
jle
dec
fild
sub
hlt
pushf
hlt
fdiv
fild
dec
test
repnz
call
dec
or
call
ficom
(bad)
(bad)
call
lods
dec
into
mov
sub
lods
cmp
or
and
and
ins
loop
mov
es
call
daa
fwait
sahf
inc
std
cmc
dec
shl
sub
push
push
scas
call
mov
imul
enter
daa
push
test
sbb
stos
cmps
push
dec
dec
aaa
mov
out
cld
paddw
hlt
and
xchg
jge
push
es
clc
ud0
inc
sbb
add
jecxz
mov
inc
out
jg
mov
std
push
test
sub
mov
cld
or
cmp
lahf
fsubr
xchg
in
push
and
and
call
adc
jmp
push
dec
(bad)
jg
inc
mov
mov
pop
in
jl
jbe
hlt
adc
movs
mov
js
fbld
jno
pop
(bad)
jmp
mov
and
mov
jp
in
enter
xchg
lock
and
and
push
push
lea
rol
out
jmp
mov
jmp
(bad)
sbb
cmp
jae
or
add
jo
mov
(bad)
mov
ret
mov
test
inc
lock
aaa
pop
sti
push
cmp
clc
(bad)
cmp
cs
mov
pop
dec
into
and
shl
jmp
ror
jno
push
icebp
pop
stos
and
js
inc
adc
jae
call
(bad)
(bad)
call
(bad)
ficom
push
and
retf
mov
or
sbb
ret
and
mov
mov
hlt
jmp
dec
sti
mov
vmwrite
pushf
mov
(bad)
fidivr
jg
lea
fidivr
inc
in
or
ret
lock
scas
mov
jg
jge
call
aad
test
jecxz
jmp
cmp
sahf
out
ss
xchg
xchg
nop
mov
adc
popa
mov
ror
sbb
push
push
add
mov
adc
jb
hlt
mov
enter
(bad)
arpl
mov
aaa
adc
push
fs
(bad)
dec
fs
adc
xlat
pop
inc
jbe
loop
cmp
or
pop
retf
mov
ret
fstp
bound
dec
sbb
(bad)
mov
push
(bad)
and
xlat
lahf
xor
and
mov
mov
mov
mov
call
ja
loop
inc
inc
push
and
mov
xor
(bad)
(bad)
fild
push
test
hlt
ins
inc
jne
xchg
adc
and
stos
(bad)
(bad)
(bad)
(bad)
dec
and
test
cmp
pop
ds
ja
iret
sbb
repz
jnp
mul
rcr
mov
call
jns
dec
(bad)
mov
int
pop
rcl
xor
pop
inc
lock
clc
(bad)
call
icebp
sub
pop
inc
aaa
xchg
retf
cld
xchg
lods
loopne
lods
(bad)
(bad)
jmp
jo
jp
es
pminub
idiv
sahf
scas
add
fnsave
push
inc
or
hlt
sar
in
ficomp
rcr
(bad)
(bad)
(bad)
push
gs
mov
jmp
xchg
outs
call
mov
stos
fisubr
push
fsubrp
scas
cli
dec
dec
imul
(bad)
fdivr
sub
stos
sbb
lods
xchg
arpl
jp
(bad)
(bad)
call
pusha
dec
xchg
(bad)
(bad)
std
jnp
leave
out
mov
xlat
lock
or
ins
jbe
aam
(bad)
(bad)
inc
xchg
dec
cmp
clc
sbb
inc
cmp
test
retf
adc
inc
xchg
(bad)
(bad)
(bad)
mov
jle
jmp
cmp
sub
fucomp
ins
loopne
inc
adc
in
test
aaa
in
(bad)
(bad)
dec
mov
sbb
cmp
jl
mov
pop
retf
hlt
leave
jnp
hlt
push
push
and
adc
pop
inc
(bad)
inc
call
leave
jle
repz
xchg
jns
mov
call
pop
(bad)
jno
mov
dec
push
inc
push
ds
push
dec
std
(bad)
(bad)
jnp
retf
dec
sar
mov
xor
call
fdivr
push
push
cmps
dec
dec
dec
xchg
adc
mov
jmp
(bad)
mov
mov
adc
int
push
dec
jg
(bad)
call
pop
sub
movs
dec
push
dec
(bad)
add
stos
movs
push
sbb
(bad)
(bad)
dec
pop
jge
in
out
push
cmp
cs
push
inc
sbb
aad
pop
cmc
pushf
mov
(bad)
dec
lock
loop
leave
or
popf
arpl
cmps
daa
loop
mov
std
outs
adc
cmp
xchg
cmc
push
clc
sbb
shl
(bad)
inc
lods
cmp
xchg
sbb
pop
mov
out
jecxz
xchg
xchg
(bad)
repnz
addr16
sbb
movs
test
add
std
adc
cwde
adc
push
jg
jmp
push
xchg
xor
and
sub
sub
dec
pop
push
iret
or
mov
xchg
aaa
mov
sub
jmp
push
xchg
dec
mov
(bad)
test
mov
jecxz
inc
int
mov
cli
(bad)
(bad)
(bad)
call
xchg
pop
and
mov
jle
sbb
loope
ret
es
push
fs
inc
push
fisubr
test
pcmpeqb
test
mov
into
aaa
das
dec
cmp
mov
push
inc
mov
sub
jmp
nop
xchg
mov
(bad)
mov
jmp
pop
jne
cmp
loope
xor
imul
push
sub
(bad)
inc
jl
push
and
mov
pusha
pop
cli
dec
outs
imul
jmp
(bad)
(bad)
(bad)
call
lods
ds
cmp
sahf
jbe
ret
js
push
cli
jp
mov
imul
jmp
cmp
ret
xchg
ins
(bad)
retf
cmp
ds
aas
sub
sub
lea
mov
stos
xchg
and
mov
ins
enter
stos
xor
cwde
sbb
dec
and
inc
or
cmp
(bad)
(bad)
(bad)
push
mov
mov
sub
fld
add
pusha
dec
lods
xchg
sbb
inc
sbb
jnp
lods
push
jb
jne
sub
pop
(bad)
(bad)
(bad)
jg
cmp
out
cmp
je
push
hlt
inc
icebp
jecxz
inc
add
mov
inc
cmp
repz
div
pop
dec
pop
popf
push
mov
jbe
inc
(bad)
mov
(bad)
(bad)
(bad)
push
movs
push
mov
xor
cmp
arpl
and
mov
lea
ins
shl
xchg
add
cmp
cmp
in
dec
or
sbb
pop
pop
(bad)
(bad)
call
pop
mov
retf
adc
add
adc
pop
daa
mov
push
xchg
and
sbb
(bad)
(bad)
call
pusha
lods
div
pop
or
mov
cli
lods
xchg
sti
push
inc
aam
pop
sbb
xchg
rol
cld
add
inc
sbb
jg
das
xchg
pop
mov
xor
add
int3
jmp
mov
sbb
add
(bad)
(bad)
(bad)
(bad)
out
(bad)
cli
or
in
mov
out
cmp
and
inc
xchg
sbb
pushf
outs
xchg
or
(bad)
dec
outs
mov
in
aam
mov
enter
lock
(bad)
in
(bad)
in
jecxz
add
jecxz
lahf
jbe
je
or
(bad)
(bad)
mov
fs
shl
or
test
or
test
test
cmp
or
daa
sti
mov
jp
(bad)
fdivr
xor
mov
xor
shr
(bad)
jg
call
cs
arpl
ret
push
pop
xchg
or
pusha
fsub
(bad)
(bad)
(bad)
call
retf
(bad)
jle
or
add
(bad)
loop
je
mov
push
mov
lods
jne
cli
xor
test
call
ret
pop
lods
loop
cmc
inc
jbe
pop
inc
call
lods
int3
sbb
add
sub
xchg
jmp
inc
lods
mov
ror
cmp
(bad)
dec
je
leave
ror
fisttp
and
push
adc
push
push
out
addr16
mov
or
(bad)
cmp
sbb
iret
adc
xor
(bad)
jmp
push
mov
movs
ret
inc
xor
(bad)
push
test
xor
(bad)
(bad)
(bad)
call
ja
(bad)
out
sub
adc
and
xlat
adc
pop
jae
or
fmul
std
inc
cld
je
(bad)
fcomi
dec
and
jle
sub
call
(bad)
cmp
sbb
cmps
sbb
add
add
cmp
jecxz
push
shl
sbb
sar
jno
(bad)
jmp
mov
mov
jmp
cmp
lods
push
loopne
xor
(bad)
call
pop
cmc
int
imul
mov
shl
punpckhwd
xor
inc
pop
jmp
xor
lods
or
fimul
in
xchg
cli
push
in
lock
cmp
ficomp
inc
jb
mov
pcmpgtd
mov
(bad)
(bad)
(bad)
(bad)
fsub
add
jae
jl
repnz
adc
mov
mov
(bad)
call
into
sub
jns
sub
int
pop
mov
cmp
pop
lahf
and
dec
mov
fisttp
into
aad
xchg
xlat
adc
add
jmp
rcr
jne
add
push
loopne
(bad)
mov
xchg
mov
mov
xchg
push
ret
mov
(bad)
mov
add
mov
sbb
xor
sbb
or
push
or
out
lahf
push
inc
jecxz
dec
in
add
por
push
(bad)
call
scas
mov
jne
push
imul
dec
xor
bnd
add
ffreep
shr
push
sahf
test
sti
dec
das
inc
call
mov
mov
sub
je
mov
(bad)
(bad)
inc
arpl
(bad)
jmp
sbb
cmp
and
ret
push
das
mov
pop
inc
pop
cmp
test
popf
mov
pop
xor
inc
into
ret
(bad)
(bad)
jmp
test
and
scas
cmp
iret
lock
dec
jge
es
push
xor
into
mov
jmp
(bad)
(bad)
(bad)
jge
push
loop
arpl
js
aad
rol
fcmovb
cdq
(bad)
(bad)
mov
(bad)
(bad)
call
aad
adc
mov
add
retf
xor
sar
stc
pop
sub
inc
(bad)
lock
xor
call
dec
cli
scas
or
daa
daa
pushf
pop
jne
js
pop
xchg
(bad)
(bad)
(bad)
jmp
jns
or
fmul
lock
aaa
mov
imul
cwde
int3
jmp
icebp
jg
jmp
mov
dec
addr16
dec
sbb
ja
ret
and
fsub
push
mov
not
retf
push
inc
sub
ins
adc
adc
jbe
test
sub
repz
mov
fcomip
(bad)
(bad)
std
(bad)
js
call
sbb
add
xchg
jg
xchg
mov
clc
(bad)
in
clc
movs
std
pop
sub
jl
xchg
xchg
sbb
(bad)
call
repz
mov
cmp
sbb
test
aad
ja
cmp
jmp
hlt
push
inc
fist
xor
lods
jno
mov
popf
fcmovu
or
dec
pop
add
dec
pushf
fwait
dec
call
call
inc
xchg
or
lods
stc
sti
outs
leave
sub
(bad)
(bad)
(bad)
call
cmp
test
cmp
inc
daa
popa
popf
and
ja
cmp
cmp
or
and
jmp
mov
outs
sub
xchg
fsub
push
bound
fisub
lock
sbb
ror
mov
out
ins
clc
(bad)
(bad)
dec
mov
jge
dec
mov
dec
loop
mov
test
enter
adc
or
rcl
dec
inc
add
xor
out
(bad)
xchg
mov
jne
out
or
call
sahf
clc
outs
adc
xchg
mov
add
sar
or
scas
push
test
(bad)
std
cmp
fld
or
(bad)
(bad)
(bad)
jmp
pop
sbb
add
xor
jge
mov
pop
jge
inc
leave
mov
dec
and
cli
and
jle
(bad)
(bad)
(bad)
call
hlt
out
repnz
xor
data16
jge
ret
add
cld
clc
mov
(bad)
jmp
push
and
mov
pop
jmp
fdiv
je
push
sub
icebp
sbb
(bad)
(bad)
(bad)
jmp
(bad)
pop
xchg
sahf
out
loope
xchg
cdq
jmp
(bad)
fwait
xor
imul
xor
addr16
(bad)
(bad)
(bad)
cmp
(bad)
aad
dec
pop
xchg
fldcw
mov
mov
ds
jns
(bad)
jg
(bad)
jns
mov
aas
mov
mov
sbb
ins
mov
(bad)
aas
lods
(bad)
(bad)
(bad)
jmp
frstor
jmp
rcl
ss
cmp
ror
jmp
cli
test
fstp
loope
repz
cs
xor
push
(bad)
jmp
dec
mov
ja
xchg
cmp
sub
int
movs
loopne
das
fisubr
(bad)
test
repz
clc
jecxz
sbb
in
data16
popf
and
mov
ret
pop
and
sbb
iret
mov
in
pop
jmp
(bad)
fcomip
dec
mov
dec
cmp
inc
imul
jecxz
cmps
or
(bad)
(bad)
inc
adc
push
sbb
jge
test
stos
inc
lock
daa
arpl
inc
repnz
xor
dec
(bad)
(bad)
(bad)
call
mov
js
out
bts
ret
(bad)
nop
mov
inc
xchg
addr16
mov
cld
(bad)
fdiv
inc
xrelease
lock
push
jl
ret
ret
inc
test
adc
mov
mov
(bad)
sbb
gs
fild
pop
dec
ficom
test
(bad)
fcomip
push
pop
sbb
mov
dec
stos
cmp
call
das
(bad)
(bad)
(bad)
fcomi
sti
add
sti
out
inc
(bad)
fimul
xchg
mov
ss
xchg
int
ds
in
add
cmc
(bad)
cmp
sub
and
daa
xchg
(bad)
(bad)
(bad)
cmp
or
mov
sub
sbb
xchg
(bad)
inc
sahf
mov
mov
push
(bad)
call
les
or
daa
xchg
or
(bad)
mov
and
jb
jp
pop
mov
mov
xlat
loopne
out
jl
pop
test
ss
cmc
mov
rol
stc
pop
xor
in
das
test
adc
adc
pop
call
xor
jl
std
cmc
dec
cmp
sub
pop
jns
es
loopne
(bad)
(bad)
jmp
fcomp
dec
in
ret
out
mov
inc
mov
cli
pop
imul
scas
(bad)
(bad)
(bad)
dec
mov
mov
in
ret
xor
mov
movs
cli
jle
push
xor
xchg
(bad)
mov
(bad)
jle
xor
and
test
jnp
out
leave
jge
mov
in
imul
jmp
popf
enter
mov
inc
sub
ins
test
fstp
jo
mov
mov
scas
jbe
and
mov
test
inc
pop
pop
pop
sub
mov
xchg
cld
jmp
sbb
or
mov
sti
(bad)
jae
fistp
nop
jmp
mov
jnp
pop
jp
adc
sub
into
pop
adc
fwait
(bad)
in
mov
daa
xor
add
and
xchg
xchg
xor
cld
pop
mov
outs
sbb
hlt
(bad)
(bad)
(bad)
dec
mov
movs
mov
dec
leave
mov
sbb
mov
xchg
stos
popa
jmp
push
mov
push
stos
in
adc
cmps
repnz
pop
xor
lock
cmp
out
mov
jl
mov
sub
inc
push
jae
add
(bad)
adc
mov
(bad)
(bad)
jmp
mov
aaa
and
jle
pop
xor
inc
jo
scas
adc
or
scas
jmp
mov
mov
sub
pushf
xor
out
mov
push
retf
retf
jp
cmp
pop
jne
pop
imul
dec
push
dec
outs
js
loopne
scas
inc
lds
push
dec
mov
sbb
(bad)
jle
jg
cmp
(bad)
(bad)
inc
lock
push
iret
call
sbb
repz
int
jmp
imul
(bad)
call
in
sbb
xchg
pxor
cmps
rol
fistp
pop
xchg
jmp
pop
outs
xchg
movs
jmp
popa
jae
push
jo
jno
push
sbb
outs
cli
test
inc
xor
call
fdivr
call
mov
mov
daa
mov
cwde
dec
sbb
xchg
sbb
xchg
mov
les
jp
ins
sub
ret
pop
shl
ret
sub
popf
mov
(bad)
and
xchg
clc
sti
jo
sti
push
(bad)
mov
lods
(bad)
call
mov
loopne
cmps
int
lds
jl
adc
adc
jl
ss
cmps
js
inc
cld
pop
mov
test
ficomp
cmp
outs
pop
sbb
and
popa
mov
and
call
std
jmp
sbb
xchg
or
out
adc
div
xchg
(bad)
jmp
fistp
leave
loope
inc
lock
dec
add
cs
mov
call
stos
cmp
mov
jg
mov
fist
xchg
sbb
inc
xchg
sti
inc
(bad)
(bad)
(bad)
dec
mov
push
je
adc
and
out
pop
cmp
xchg
and
pop
movs
mov
inc
popf
xchg
add
fs
lock
xor
add
adc
sbb
inc
hlt
retf
(bad)
xor
adc
popa
(bad)
inc
adc
mov
sub
outs
adc
jnp
dec
mov
add
sub
out
pop
mov
fimul
cmps
(bad)
cmp
cmp
or
inc
and
xor
loopne
(bad)
(bad)
(bad)
jg
jecxz
jns
adc
add
dec
cwde
repnz
rcl
mov
jae
in
dec
(bad)
(bad)
(bad)
cmp
shr
addr16
inc
adc
fmul
jno
mov
dec
adc
xchg
dec
ins
xor
mov
xchg
in
push
or
dec
mov
fldenv
imul
call
rol
mov
push
cmp
std
fdiv
dec
rcl
inc
fmul
std
ja
push
xchg
mov
mov
enter
aaa
xlat
mov
and
in
xor
repz
mov
(bad)
cmp
sti
adc
push
daa
in
mov
out
int
movs
clc
cld
pop
stc
mov
mov
mov
mov
popa
dec
sbb
loope
jb
jbe
in
jnp
mov
inc
jmp
jg
or
out
ss
ins
jle
(bad)
mov
(bad)
call
int
pop
sbb
cwde
cld
fsubr
outs
xchg
sub
cmp
(bad)
rol
stos
and
ret
fwait
inc
xchg
ror
repz
test
jg
in
jle
mov
(bad)
pusha
push
cwde
push
sar
hlt
push
inc
mov
sbb
and
arpl
dec
pop
(bad)
adc
dec
pop
sbb
jae
mov
repnz
pop
xchg
sti
rcl
mov
jno
fisubr
xchg
dec
(bad)
call
or
int
mov
pusha
(bad)
stos
dec
adc
pop
inc
not
push
call
lods
xchg
sub
push
loopne
(bad)
(bad)
jg
and
add
iret
sahf
mov
sub
hlt
int
or
ja
sub
xchg
cmc
cmp
jp
loopne
dec
loop
call
les
mov
add
fmul
pop
xchg
xchg
cli
aaa
stos
xchg
or
nop
lds
and
(bad)
mov
ret
sub
mov
loop
sbb
(bad)
(bad)
call
sub
cmps
add
xlat
add
fstp
sub
or
daa
pop
leave
stos
cmp
mov
inc
outs
cmp
aam
push
aam
cmps
mov
shl
jg
in
mov
ficom
inc
mov
loopne
mov
cmp
(bad)
(bad)
(bad)
cmp
xor
mov
in
mov
lahf
push
sub
mov
xchg
cmp
lock
cli
(bad)
jg
pushf
out
les
js
fcmovne
repz
mov
mov
pop
int3
(bad)
(bad)
(bad)
out
mov
cmp
outs
and
loopne
and
out
cmp
mov
xchg
jmp
(bad)
push
pop
nop
pop
cmp
lahf
xor
cli
add
lock
and
push
out
enter
jmp
dec
(bad)
mov
or
add
in
test
inc
sbb
mov
idiv
jns
int
fucomi
lahf
xchg
mov
cld
arpl
sbb
dec
mov
(bad)
(bad)
(bad)
stc
inc
loope
mov
dec
push
ficomp
fidiv
dec
adc
call
aad
je
pop
mov
pop
test
(bad)
(bad)
(bad)
(bad)
push
sar
sahf
push
repnz
push
dec
or
(bad)
mov
add
nop
xor
cmc
pop
and
jmp
ins
std
jl
dec
mov
sbb
push
ror
cwde
push
dec
cmp
aam
out
cmps
cdq
mov
xor
add
rol
addr16
push
jg
sub
pushf
out
inc
dec
(bad)
int3
nop
add
fwait
push
cld
ds
xchg
outs
leave
imul
mov
fs
(bad)
mov
movs
dec
repz
(bad)
mov
cs
movs
popa
xor
ret
sbb
push
mov
imul
adc
push
inc
ret
cmp
fldenv
aaa
cld
(bad)
cmp
add
or
push
shr
cli
push
xchg
fldenv
inc
test
enter
(bad)
call
or
add
fnstcw
add
cmp
test
jns
adc
clc
cli
push
jno
cli
mov
jg
sub
pop
mov
icebp
cmp
(bad)
fwait
mov
lea
scas
add
(bad)
jmp
push
jne
jnp
mov
xor
xchg
setns
jl
xor
cmp
mov
mov
dec
mov
in
(bad)
(bad)
mov
sbb
jecxz
mov
xchg
sbb
or
das
out
and
pop
push
nop
test
fst
aas
(bad)
mov
sub
or
pop
push
push
call
(bad)
dec
xor
repz
inc
xor
scas
push
lea
dec
mov
out
jge
test
shl
adc
mov
jbe
mov
fbld
(bad)
jg
xchg
and
shr
inc
jne
pop
repnz
cwde
pop
hlt
out
clc
mov
jb
inc
jmp
(bad)
fld
push
pop
movs
push
cmp
fcmovu
in
pop
test
fs
sbb
mov
(bad)
dec
pop
dec
pop
repz
mov
pop
scas
xor
mov
rcl
dec
(bad)
mov
nop
sar
add
pop
mov
repz
push
push
mov
dec
xor
fsubr
cs
and
and
jne
les
pop
jne
pop
add
clc
clc
cmp
cld
das
sub
clc
pop
jo
std
push
push
test
clc
or
xchg
aad
cli
adc
mov
cld
jmp
pop
jae
jecxz
jo
out
xchg
jmp
outs
pop
add
(bad)
jmp
or
clc
in
ins
(bad)
(bad)
jg
pop
cmc
out
xchg
sub
retf
inc
fistp
clc
rol
loope
retf
(bad)
(bad)
inc
mov
mov
imul
xchg
(bad)
mov
and
(bad)
(bad)
call
sub
and
add
push
ja
cmp
ins
sub
dec
or
mov
aas
inc
(bad)
push
ins
xor
jb
and
clc
lods
aas
fisttp
jge
pushf
or
add
sar
jmp
lahf
cld
jg
fbld
mov
(bad)
(bad)
cmp
fdiv
mov
outs
xchg
mov
xchg
pop
mov
jecxz
mov
mov
enter
sbb
ins
aaa
jbe
loope
fwait
(bad)
(bad)
(bad)
(bad)
fisubr
ret
adc
adc
aas
add
repz
xlat
mov
mov
aam
push
fist
jns
mov
and
not
push
sahf
fcom
push
pop
sub
mov
mov
stos
xchg
inc
mov
(bad)
sti
cmp
js
cmc
fisubr
(bad)
jg
add
orps
arpl
sub
or
(bad)
inc
sbb
and
lea
mul
movs
sub
sub
or
fdivr
fistp
adc
cwde
cmp
(bad)
push
loope
out
popf
xor
jno
daa
sub
sbb
mov
shr
jle
mov
mov
xchg
aas
rcr
push
ins
aas
stc
lods
inc
cmps
stc
push
hlt
std
cmps
(bad)
mov
movs
mov
ins
out
movs
dec
lock
mov
mov
ret
and
sub
int3
jae
out
push
(bad)
call
(bad)
(bad)
fild
pusha
jnp
and
retf
daa
stos
mov
or
adc
pop
(bad)
(bad)
(bad)
mov
pop
ret
leave
sbb
push
ja
ds
(bad)
mov
jmp
and
jmp
add
(bad)
out
pop
lds
shl
(bad)
jg
push
pusha
test
or
ss
push
xchg
movs
push
outs
pop
inc
fist
ja
xchg
xchg
stos
sub
mov
int
jmp
arpl
fisub
inc
pushf
out
jg
xor
mov
sbb
(bad)
(bad)
jmp
(bad)
ret
das
(bad)
pusha
cmc
fs
sbb
mov
movs
sub
and
(bad)
(bad)
dec
stc
sbb
popf
and
jl
adc
adc
push
pop
pop
cli
pop
xchg
xchg
xchg
int3
not
mov
(bad)
mov
dec
enter
stos
aad
adc
cmp
xchg
pop
(bad)
(bad)
inc
dec
inc
mov
and
or
mov
sahf
xchg
jmp
repnz
(bad)
(bad)
(bad)
js
aam
outs
xchg
push
inc
imul
or
add
jg
mov
mov
(bad)
(bad)
mov
jl
jg
xor
enter
xchg
dec
pop
loopne
in
out
(bad)
inc
push
cs
aad
cmp
xchg
lock
add
fcmovbe
cdq
es
clc
(bad)
mov
mov
std
push
hlt
(bad)
(bad)
(bad)
inc
push
loope
mov
rol
jo
cmp
xchg
mov
int3
inc
enter
jnp
add
jmp
pop
cmp
enter
fmulp
repz
fist
push
(bad)
sbb
movlps
cmc
mov
xlat
test
out
in
mov
add
loop
sub
fadd
(bad)
(bad)
mov
movs
pop
sar
hlt
call
mov
inc
aam
and
lea
adc
mov
fisub
(bad)
(bad)
(bad)
(bad)
mov
into
xchg
mov
push
xchg
scas
mov
jmp
fdivr
push
or
cmc
sub
(bad)
call
push
enter
jg
test
scas
iret
push
retf
aam
ins
mov
in
jmp
test
lods
dec
icebp
call
pop
dec
dec
fsubrp
fabs
loopne
fiadd
cs
sub
(bad)
(bad)
fist
dec
stos
in
popf
lds
push
adc
push
aas
mov
dec
mov
sti
fcmovu
and
dec
mov
mov
and
scas
dec
sbb
inc
stc
rcl
shr
pop
cmc
(bad)
(bad)
out
cmps
adc
mov
push
inc
pop
ds
add
dec
js
int
mov
outs
and
ror
mov
jo
rcr
stos
outs
(bad)
mov
out
mov
dec
push
repz
std
xor
cmps
icebp
xchg
int
(bad)
(bad)
(bad)
jmp
pop
xchg
mov
and
jns
cmp
cli
clc
jmp
xor
sahf
rol
xor
jg
(bad)
inc
mov
sti
aam
fadd
xchg
shl
or
or
gs
out
cli
add
dec
adc
add
outs
mov
fwait
sub
test
repz
jo
mov
xor
sbb
test
in
adc
(bad)
cmp
push
sbb
nop
aas
inc
repz
jg
inc
mov
jbe
out
mov
ins
mov
pop
add
mov
mul
loopne
pop
adc
int
push
mov
jo
pop
stos
mov
jp
not
leave
in
jle
dec
pop
and
ins
fidivr
mov
dec
(bad)
jg
loop
fcmovu
inc
div
jge
fsubr
lahf
pop
fwait
scas
ret
push
lahf
push
jmp
(bad)
jmp
mov
sub
jg
(bad)
iret
ins
repz
cli
adc
dec
push
adc
jnp
scas
pop
cmps
dec
pop
(bad)
out
mov
mov
mov
xchg
adc
(bad)
fbld
mov
jg
xchg
adc
test
stc
dec
adc
(bad)
(bad)
inc
xor
int3
dec
mov
loop
and
xor
xchg
inc
dec
sub
popf
xchg
leave
jge
xor
jmp
push
(bad)
jecxz
clc
push
not
pusha
retf
retf
pop
fld
mov
pop
pop
mov
movs
mov
inc
mov
out
jae
and
out
jmp
clc
es
inc
lea
or
call
inc
pop
daa
jge
pushf
out
jae
push
sti
(bad)
jg
(bad)
cmp
cmp
sbb
cld
popf
pop
jl
cmp
inc
mov
(bad)
jmp
out
ins
push
fld
repz
mov
aad
js
cld
(bad)
(bad)
jle
fstp
js
div
call
icebp
loop
add
(bad)
jmp
add
sti
pop
sub
mov
(bad)
fisubr
dec
cmp
pop
pop
cmp
jecxz
iret
xor
cmp
loopne
and
sub
call
inc
adc
mov
add
mov
inc
sub
std
daa
(bad)
(bad)
(bad)
je
shl
cli
arpl
in
and
inc
sahf
jp
and
dec
add
aam
and
(bad)
(bad)
jmp
ds
push
add
inc
mov
mov
push
push
fisttp
or
(bad)
(bad)
dec
dec
(bad)
lock
(bad)
xor
cmp
inc
stc
test
and
jmp
cmps
jae
xchg
dec
dec
xor
loopne
and
lock
(bad)
mov
cmps
sub
(bad)
mov
mov
sub
mov
jg
add
das
inc
sbb
iret
mov
mov
sahf
mov
dec
lea
jbe
out
int3
cmp
sub
sub
(bad)
out
push
adc
clc
sub
data16
ins
xor
(bad)
cdq
inc
mov
clc
je
fstp
sbb
(bad)
(bad)
push
out
pop
arpl
loopne
jge
data16
rcr
sub
pop
shr
shl
inc
cmc
mov
xchg
pop
stos
cli
jo
mov
movs
jecxz
pop
and
ror
push
jno
mov
jg
(bad)
in
jbe
sub
cmps
fstp
or
or
pop
pop
sar
jbe
iret
and
test
pop
jns
pop
xchg
call
jo
pop
jg
add
xor
and
pop
(bad)
in
pop
daa
pop
(bad)
(bad)
(bad)
(bad)
jp
arpl
nop
scas
rcr
cmc
jb
jns
jmp
mov
push
test
mov
push
leave
aad
jns
clc
adc
add
or
retf
idiv
int3
fdiv
(bad)
(bad)
(bad)
call
(bad)
ins
adc
ds
and
mov
add
test
pop
(bad)
cmp
adc
std
(bad)
sub
mov
sbb
daa
jae
push
xor
xchg
outs
(bad)
(bad)
(bad)
(bad)
in
pop
xchg
cmp
xchg
xor
sbb
inc
into
inc
gs
xor
cli
mov
mov
mov
(bad)
js
cmp
cmp
mov
stos
add
aam
rcr
sub
(bad)
(bad)
(bad)
push
add
ret
mov
lods
fwait
or
std
scas
ret
addr16
or
icebp
pushf
das
jle
mov
in
mov
into
loop
rol
lahf
sub
es
cmp
(bad)
(bad)
cmp
and
xor
inc
mov
push
imul
call
jne
pop
fcomp
std
push
rcr
aam
lahf
mov
xchg
gs
dec
jge
mov
xchg
dec
sbb
xchg
jne
jmp
mov
sti
jmp
pop
js
mov
inc
(bad)
(bad)
out
cli
dec
push
call
mov
cmp
sub
or
ss
and
add
jb
push
std
fisttp
das
sbb
fcomp
scas
and
adc
mov
and
stos
out
mov
loope
pop
sbb
call
xor
push
popa
jp
push
fidiv
add
clc
mov
call
push
(bad)
(bad)
inc
jg
dec
jg
movs
push
popa
mov
jno
cmp
iret
sbb
fdiv
mov
lods
scas
or
arpl
(bad)
mov
inc
fadd
jno
xlat
(bad)
repnz
sar
mov
aam
aad
nop
out
sti
addr16
data16
xchg
es
(bad)
(bad)
jg
cmp
out
lods
or
lods
fnstenv
jl
stos
mov
(bad)
inc
mov
aad
lahf
adc
and
shl
xchg
cwde
stos
mov
stos
enter
(bad)
(bad)
call
aam
ss
push
pop
mov
push
mov
xlat
cmps
das
pop
ret
loopne
mov
in
jg
xor
test
lods
xchg
mov
je
int3
push
and
jmp
(bad)
(bad)
(bad)
inc
(bad)
in
out
mov
jns
in
push
test
cmp
sub
fwait
inc
sar
(bad)
inc
ins
and
xchg
jbe
xchg
xchg
dec
and
jb
ins
push
xchg
dec
mov
fcos
mov
sub
jne
outs
dec
sub
cmp
ja
and
(bad)
push
jmp
sbb
fs
(bad)
push
pop
jmp
adc
mov
gs
cmp
mov
lahf
(bad)
das
enter
adc
xor
or
dec
repnz
lds
movs
retf
fld
hlt
(bad)
(bad)
(bad)
dec
stos
sub
pushf
sub
push
dec
fidivr
xor
in
pop
inc
ja
out
sub
fcmovnbe
sub
(bad)
sahf
pop
icebp
push
into
lock
and
out
ja
xchg
mov
mov
or
inc
sbb
hlt
inc
or
lods
frstpm(287
enter
(bad)
dec
call
add
jmp
mov
mov
pop
scas
(bad)
(bad)
(bad)
out
sub
push
pop
sbb
sti
dec
jge
out
lds
imul
adc
push
lea
pop
and
(bad)
sahf
add
sub
jns
hlt
and
sub
fidiv
ret
mov
xor
(bad)
(bad)
mov
out
out
or
xor
(bad)
mov
ret
xchg
jbe
inc
fstp
(bad)
fwait
popa
cld
mov
push
js
ins
outs
shl
mov
mov
mov
xor
imul
(bad)
push
jp
call
gs
call
pusha
call
idiv
(bad)
(bad)
(bad)
call
mov
lss
add
je
mov
nop
sti
pop
and
jl
pop
and
dec
aad
xor
out
movs
xor
sub
mov
outs
adc
pop
or
sbb
stos
cmps
sub
jl
std
dec
pop
push
push
not
lea
jns
ds
jne
hlt
(bad)
(bad)
jg
movs
mov
stos
add
imul
js
test
adc
mov
test
movs
or
fnstenv
mov
(bad)
jmp
sar
out
mov
mov
test
adc
and
out
add
mov
das
daa
loope
dec
push
mov
jbe
lods
mov
pop
(bad)
mov
mov
adc
outs
pop
dec
xor
dec
les
movs
jp
adc
stos
pusha
jecxz
and
and
data16
scas
daa
jns
out
dec
and
(bad)
(bad)
dec
lods
add
adc
test
pop
ja
in
xor
push
xchg
adc
ins
fisttp
clc
(bad)
(bad)
fnstsw
repz
in
mov
jp
push
cld
jne
lods
mov
add
dec
pusha
pop
push
dec
sahf
and
rcr
xchg
mul
jnp
or
clc
jmp
mov
cmp
das
sar
dec
pop
add
icebp
jp
xchg
popa
cs
enter
in
cs
iret
push
inc
pop
inc
cld
fwait
gs
push
xchg
mov
sbb
and
rcl
jg
xor
or
dec
dec
pop
dec
jne
out
push
scas
add
push
or
(bad)
mov
clc
(bad)
(bad)
call
push
sbb
rcr
xor
cmp
mov
mov
out
dec
test
fwait
mov
jmp
iret
in
je
jno
inc
das
loope
ja
test
dec
pop
sub
clc
mov
dec
ret
pshufw
fidiv
cs
push
mov
retf
sahf
adc
jl
call
imul
pop
jns
and
adc
jmp
stc
(bad)
call
loopne
mov
(bad)
outs
out
xor
sub
xor
(bad)
(bad)
inc
dec
xlat
out
retf
jle
nop
push
dec
pop
dec
sub
ret
xor
(bad)
(bad)
(bad)
dec
loopne
xor
jne
dec
je
or
cmps
fcomp
movs
test
xor
cmp
rol
pop
or
sahf
xor
dec
das
xchg
(bad)
(bad)
push
test
iret
int
into
push
fmul
cmp
xchg
xor
xor
enter
iret
dec
ja
or
(bad)
in
(bad)
jmp
popf
adc
outs
lea
inc
mov
outs
sub
mov
rcr
(bad)
push
jp
adc
pop
add
jmp
cwde
pop
fwait
push
mov
mov
or
(bad)
mov
mov
aaa
rol
in
sbb
pushf
pop
rcr
rcr
lea
mov
sub
jo
adc
or
lds
sub
je
lods
dec
dec
aad
mov
mov
and
movs
mov
jmp
fadd
inc
ins
push
leave
cmp
sbb
pop
xchg
out
movs
dec
mov
out
cmps
test
jbe
mov
fimul
imul
add
push
mov
enter
test
lock
lock
(bad)
adc
jg
pop
mov
mov
inc
add
cld
cmp
mov
std
arpl
inc
lea
(bad)
push
pop
out
sbb
iret
push
inc
pop
inc
ja
xor
cmp
test
lock
adc
adc
in
ftst
(bad)
and
clc
shl
mov
in
sub
js
frstor
ds
repnz
(bad)
mov
adc
cmp
popa
mov
mov
lods
stos
loope
popa
test
cld
retf
or
xchg
push
lea
fadd
cmp
lock
jae
pop
hlt
xchg
(bad)
in
(bad)
jmp
inc
xchg
movs
cmp
addr16
ficomp
jbe
aad
adc
sbb
mov
aas
int
(bad)
fild
push
cld
(bad)
cmp
dec
js
out
outs
into
or
mov
mov
fdivr
(bad)
mov
faddp
rcr
ffree
cwde
inc
add
adc
add
sbb
mov
leave
sub
or
aaa
add
inc
adc
xlat
retf
lods
sbb
cmp
(bad)
(bad)
fild
sub
mov
das
leave
icebp
sub
clc
push
clc
jb
jns
pop
ja
(bad)
(bad)
jmp
push
jmp
jge
sub
add
mov
mov
in
fld
cld
mov
stos
jnp
shr
in
jmp
call
and
xor
fisubr
outs
pop
inc
(bad)
in
push
fstp
push
outs
aam
jg
add
neg
call
and
jo
inc
sub
rol
push
retf
mov
pop
mov
std
push
stos
pop
push
(bad)
cdq
mov
sti
or
sub
(bad)
(bad)
jge
mov
inc
out
jmp
sub
mov
shl
mov
mov
push
dec
sti
adc
mov
(bad)
jmp
adc
aas
push
fdivr
out
xchg
daa
fbld
outs
cmp
movs
arpl
out
or
repnz
inc
mov
fwait
and
sbb
mov
or
aam
xchg
xchg
and
in
(bad)
cmp
or
jno
(bad)
(bad)
(bad)
inc
mov
mov
cmp
jnp
jge
add
loop
add
add
js
mov
sub
in
pop
sub
jp
mov
repnz
add
ins
pop
outs
call
aaa
jp
inc
mov
xlat
inc
shr
fisttp
dec
repz
fwait
inc
mov
pop
mov
cmps
mov
push
adc
inc
cmp
push
cmc
(bad)
jg
adc
sbb
push
dec
xchg
and
mov
push
adc
and
call
or
out
xchg
rcl
cli
add
lods
xlat
cs
dec
sbb
add
pop
cmp
pop
sub
jae
(bad)
(bad)
dec
sar
add
cmc
lea
inc
iret
cmc
jecxz
inc
inc
sbb
pop
popf
pop
jmp
dec
in
and
xchg
sar
cmp
jl
sbb
sub
ret
movs
retf
adc
jmp
imul
or
(bad)
(bad)
(bad)
(bad)
mov
jmp
std
jg
push
add
in
sub
fstp
(bad)
pop
(bad)
(bad)
(bad)
(bad)
jge
mov
ins
pop
sub
les
mov
sbb
or
fisttp
(bad)
jmp
cmps
and
sub
pop
loopne
mov
jmp
fisub
mov
and
arpl
(bad)
(bad)
(bad)
fdiv
movs
aad
gs
and
xor
push
and
popf
fcmove
and
xchg
cmps
(bad)
(bad)
(bad)
jmp
cld
pop
adc
jmp
mov
push
push
pop
xchg
mov
mov
(bad)
(bad)
dec
mov
es
js
push
or
mov
and
popa
addr16
adc
dec
fisttp
stos
clc
cmp
retf
mov
movs
pop
clc
sahf
ret
or
(bad)
jg
dec
fild
fadd
test
(bad)
mov
mov
inc
fcomp
shr
and
(bad)
(bad)
dec
push
daa
xor
jecxz
dec
pop
xchg
mov
mov
inc
inc
mov
jmp
mov
adc
push
mov
fadd
mov
add
push
mov
mov
popf
mov
sub
std
mov
(bad)
(bad)
dec
and
call
mov
jb
cmps
dec
pop
push
push
sahf
ja
cld
std
aam
daa
js
adc
(bad)
fisttp
inc
mov
jle
pop
(bad)
mov
shl
cmps
or
push
rcr
aam
push
mov
ja
arpl
dec
dec
(bad)
retf
clc
mov
jmp
xchg
into
popa
rol
mov
mov
add
adc
fild
pusha
je
ss
sub
call
test
scas
jbe
xchg
out
push
mov
pop
xchg
jmp
loopne
xchg
cmps
sub
xchg
mov
sahf
(bad)
fcomip
jmp
dec
mov
addr16
nop
pop
xchg
mov
mov
inc
cmp
(bad)
(bad)
mov
stos
or
cdq
(bad)
or
cs
std
pop
push
lock
add
and
mov
fstp
(bad)
std
(bad)
jg
xchg
cmps
ret
mov
ins
sbb
xor
and
inc
mov
jle
iret
xor
call
sbb
call
push
ja
dec
popa
pop
lods
inc
dec
adc
xchg
mov
mov
pop
pop
and
aas
mov
imul
sti
jbe
cmp
(bad)
nop
movs
fldcw
je
xor
push
and
jle
sti
neg
sti
push
push
or
jmp
enter
out
int3
push
mov
arpl
(bad)
(bad)
inc
inc
xchg
xor
mov
js
pop
movs
cdq
mov
fistp
cmps
scas
(bad)
(bad)
(bad)
push
int3
xchg
cmp
scas
ds
mov
das
xor
fmul
je
jmp
jmp
add
ret
jl
mov
loope
fsubr
xchg
xor
aaa
test
jmp
rcr
cmp
lods
aad
lahf
sti
add
and
jmp
and
fidivr
ins
aas
jp
mov
not
(bad)
loope
int
dec
(bad)
(bad)
mov
fsubrp
inc
lea
int
sahf
(bad)
call
jbe
fist
jb
(bad)
(bad)
inc
aas
fwait
std
(bad)
cmp
or
xchg
popf
repnz
out
and
movs
fcmovnbe
shr
jmp
retf
xor
stc
(bad)
out
and
aaa
xor
mov
dec
out
jne
sar
(bad)
(bad)
mov
shr
aas
aaa
mov
in
sbb
dec
call
sbb
cli
outs
inc
fcmovbe
mov
pand
outs
(bad)
(bad)
(bad)
push
lahf
int
pop
push
mov
stc
(bad)
repz
std
or
daa
jne
or
cmc
fwait
add
(bad)
test
sti
dec
fld
mov
dec
dec
inc
sub
mov
arpl
repnz
int3
cdq
push
fcmovb
add
fisttp
sub
stos
cmp
das
xchg
mov
inc
jmp
test
ficom
xor
fucom
sbb
cmp
jns
adc
jmp
in
mov
cmp
xchg
std
pop
jb
pop
mov
iret
push
mov
arpl
sti
mov
xor
(bad)
(bad)
jg
lds
mov
or
(bad)
stos
outs
xor
fnstenv
(bad)
cmp
xchg
cmp
or
dec
cld
retf
mov
js
push
js
adc
xor
ret
mov
fbstp
xlat
mov
scas
(bad)
out
sbb
(bad)
(bad)
(bad)
mov
xor
push
test
int
dec
into
ret
popa
shr
fidiv
outs
aad
or
(bad)
(bad)
inc
int3
or
cdq
add
mov
xor
int
fldenv
test
test
cmp
(bad)
call
add
and
jmp
imul
shl
pop
hlt
(bad)
in
cld
xchg
cld
shl
aad
gs
and
jmp
rcr
cmps
dec
xchg
sar
inc
and
pop
mov
fs
(bad)
and
mov
adc
sbb
sar
in
cmp
mov
push
inc
xchg
or
pop
xchg
cld
inc
nop
jb
cld
(bad)
(bad)
(bad)
(bad)
push
es
xor
call
movs
add
or
in
cmp
and
cli
(bad)
dec
nop
aad
xor
push
xor
pop
imul
sbb
loopne
dec
lahf
mov
mov
sti
lds
xchg
push
inc
aas
(bad)
(bad)
(bad)
mov
add
inc
jbe
xlat
jge
fldenv
jmp
cli
(bad)
mov
mov
mov
xchg
jl
xor
icebp
sub
fld
dec
cmp
fs
jecxz
cmp
sub
nop
ret
pushf
popa
dec
outs
dec
mov
dec
mov
fs
lahf
mov
or
clc
inc
std
sub
jle
xor
les
xor
sahf
jp
(bad)
(bad)
call
inc
int
cmp
int3
push
dec
inc
icebp
inc
test
pop
jb
ret
out
mov
(bad)
jmp
pop
fsub
xchg
icebp
mov
imul
add
rol
(bad)
(bad)
jns
repnz
jle
clc
sbb
shl
rcr
call
repz
mov
into
fist
sub
and
ffree
es
clc
test
scas
adc
pop
cmp
(bad)
cmp
jmp
sub
cld
mov
and
lds
pop
cld
fbstp
or
imul
(bad)
gs
outs
test
cmps
push
dec
add
dec
inc
push
and
inc
aaa
(bad)
(bad)
cmp
fnsave
icebp
sub
pop
mov
call
push
ret
ret
(bad)
mov
retf
dec
mov
push
ror
es
mov
dec
(bad)
(bad)
(bad)
(bad)
jmp
or
push
popf
cmps
push
nop
icebp
cld
adc
retf
jecxz
sar
dec
fldenv
dec
dec
adc
in
clc
mov
aad
cmps
(bad)
pop
jbe
inc
inc
fs
lock
in
or
sbb
(bad)
movs
shl
mov
pop
(bad)
inc
xchg
xor
push
fisub
sub
movs
add
scas
pop
out
(bad)
(bad)
jmp
gs
adc
mov
imul
jp
mov
xor
cs
dec
sub
sbb
(bad)
fimul
dec
inc
mov
adc
xchg
clc
cmps
jbe
(bad)
outs
mov
fwait
je
repnz
inc
push
pop
arpl
test
(bad)
call
test
pop
les
mov
aas
cmp
add
nop
mov
pop
mov
mov
addr16
(bad)
jg
pop
push
mov
push
push
sti
imul
dec
mov
(bad)
(bad)
call
mov
jmp
aam
dec
out
jbe
and
add
cdq
idiv
(bad)
call
ret
movs
rol
icebp
dec
in
dec
and
in
push
jmp
cmp
scas
clc
shl
or
mov
jnp
jecxz
add
mov
xchg
out
imul
test
imul
cmp
(bad)
(bad)
(bad)
fnstenv
js
cmc
rol
jp
adc
mov
ins
push
loop
cmp
fimul
daa
mov
(bad)
mov
mov
into
fcom
push
out
fdiv
gs
fidivr
mov
adc
sub
(bad)
push
fild
call
jmp
mov
(bad)
(bad)
(bad)
jg
adc
jecxz
retf
or
and
jmp
dec
stos
jmp
mov
jmp
pcmpeqb
jno
ds
fisubr
out
mov
xchg
push
movs
mov
sub
jno
dec
aaa
pop
(bad)
(bad)
(bad)
inc
imul
cmps
or
adc
adc
retf
les
inc
jb
and
push
(bad)
(bad)
call
pop
mov
sub
xor
ins
sar
sbb
jmp
(bad)
and
into
mov
daa
fld
pop
mov
cmp
add
call
punpcklbw
jmp
imul
jg
(bad)
(bad)
call
sub
(bad)
out
or
add
mov
mov
scas
loope
pop
fisub
(bad)
test
pop
icebp
(bad)
call
add
out
cmps
push
push
fcomp
push
jg
imul
add
out
push
rcl
aaa
lods
aas
xor
shr
(bad)
(bad)
(bad)
push
cmp
mov
sbb
inc
push
jl
(bad)
xchg
outs
jecxz
movs
test
xchg
push
(bad)
call
mov
nop
mov
sub
push
sub
dec
pop
aam
movs
pop
cmp
ins
mov
push
sbb
mov
pop
(bad)
xchg
mov
shl
clc
ret
scas
push
pop
mov
or
clc
addr16
(bad)
mov
repnz
push
out
or
cmp
dec
loop
(bad)
out
fistp
mov
mov
lods
aaa
adc
mov
(bad)
mov
(bad)
das
cmp
inc
scas
(bad)
(bad)
(bad)
add
xchg
inc
fisub
lock
mov
xchg
repz
jle
cmp
pop
jns
xchg
fist
mov
stc
(bad)
imul
xchg
pop
jae
cdq
dec
seta
dec
or
push
sbb
or
(bad)
cmp
pop
xchg
or
inc
xor
test
push
imul
push
mov
sbb
dec
or
inc
pop
pop
or
pop
sub
int3
jnp
inc
test
repnz
fstp
cld
nop
mov
xor
(bad)
mov
lahf
push
mov
adc
in
or
cld
cs
test
or
(bad)
repz
xlat
add
(bad)
jmp
inc
fcom
xchg
lods
movs
scas
push
lods
or
pop
movs
and
inc
or
into
retf
int3
jp
push
sbb
fild
or
jp
xor
test
(bad)
(bad)
mov
in
or
scas
movs
(bad)
retf
or
pop
div
adc
loope
(bad)
(bad)
(bad)
push
out
sbb
pop
sub
mov
jg
pop
addr16
lods
and
ja
clc
(bad)
dec
lods
out
and
sbb
adc
adc
ret
fs
push
std
sbb
sub
idiv
scas
pop
or
lock
push
add
xchg
in
and
cmc
(bad)
jg
mov
pusha
push
test
rcr
(bad)
das
jo
(bad)
inc
sbb
dec
cmp
sti
je
in
aad
fcmove
aas
bound
sbb
(bad)
(bad)
push
push
retf
rcr
in
xor
push
push
dec
dec
arpl
mov
gs
(bad)
call
pop
mov
call
or
jmp
imul
cmc
mov
test
jmp
aam
cs
and
push
pop
sar
cli
mov
push
cmp
or
in
(bad)
(bad)
(bad)
push
mov
lds
pop
dec
pop
or
pop
pushf
loope
pop
dec
pusha
daa
sbb
jmp
add
ja
stos
(bad)
ret
add
xor
ds
xchg
call
std
jmp
out
scas
mov
arpl
fidiv
inc
xlat
(bad)
dec
xor
ss
xchg
xchg
fwait
cmp
cmps
inc
xchg
inc
push
outs
(bad)
(bad)
(bad)
fist
sahf
lea
inc
mov
cdq
in
dec
adc
test
inc
hlt
fisttp
jp
lods
pop
xor
nop
adc
(bad)
dec
mov
test
popf
pop
rcl
rcr
inc
aad
call
push
mov
sbb
mov
pop
retf
icebp
adc
call
xchg
pmaddwd
pop
mov
jns
retf
jecxz
inc
lahf
push
aas
test
nop
idiv
(bad)
call
pop
fisub
mov
stc
lock
fisubr
adc
mov
call
pusha
push
mov
adc
mov
mov
cs
xchg
mov
push
in
push
sbb
jne
jp
call
loop
inc
ds
ins
imul
cmps
push
jns
(bad)
(bad)
(bad)
jmp
jmp
pextrw
and
xchg
jae
aas
inc
ss
not
shl
jp
or
push
(bad)
jp
mov
push
je
and
bound
jae
dec
cmp
out
das
or
mov
mov
neg
inc
push
adc
add
add
in
ins
xchg
jmp
add
je
jmp
adc
xchg
mov
mov
fs
(bad)
(bad)
dec
jae
fcomip
push
push
pop
push
mov
mov
js
ret
cmp
sahf
push
div
(bad)
(bad)
jmp
test
daa
push
or
dec
fsub
pop
jno
aam
push
cdq
(bad)
bound
mov
call
push
je
inc
into
jg
iret
out
xor
data16
imul
xlat
nop
popa
pusha
mov
mov
outs
adc
adc
inc
sub
cmp
pushf
adc
cmp
test
enter
cli
call
push
movs
leave
lods
mov
cmps
pop
inc
iret
xor
(bad)
dec
fwait
iret
daa
aam
adc
add
xchg
mov
inc
outs
sub
xlat
dec
inc
xchg
adc
adc
dec
pusha
adc
clc
fmul
stos
jae
aaa
dec
call
call
arpl
(bad)
jge
mov
fldcw
or
and
dec
inc
stos
(bad)
(bad)
(bad)
jmp
popf
push
mov
fdivr
gs
or
pop
xchg
adc
xchg
xor
fs
aad
(bad)
(bad)
jmp
mov
xor
mov
stos
ret
into
cli
dec
push
pushf
pop
dec
xor
sub
sbb
mov
pusha
aas
(bad)
out
nop
pop
aaa
xchg
cmps
jg
mov
push
add
push
movs
and
xchg
pop
sti
retf
add
(bad)
fistp
ss
mov
cmps
xlat
repnz
lahf
xchg
add
push
(bad)
(bad)
(bad)
jmp
push
jecxz
call
or
add
div
xchg
fs
iret
cmp
enter
inc
sbb
cmp
jge
and
bnd
inc
rcr
mov
cld
(bad)
call
pusha
mov
pop
xchg
inc
mov
add
pop
fst
outs
jmp
mov
push
push
add
bound
fs
and
add
xchg
sub
and
(bad)
(bad)
(bad)
ficomp
shl
adc
ret
lods
and
sbb
sbb
and
jg
sbb
repz
loopne
push
in
mov
lock
or
out
mov
pusha
dec
aad
(bad)
push
inc
(bad)
clc
gs
add
add
mov
cs
sub
adc
mov
fadd
jmp
jae
xor
sub
push
clc
(bad)
(bad)
cmp
sbb
(bad)
arpl
push
mov
jmp
push
jmp
into
retf
(bad)
(bad)
call
call
mov
pop
rcr
sub
inc
ss
xchg
push
add
pop
lock
adc
popf
sar
xor
out
jmp
xor
jo
icebp
mov
loop
xor
push
cwde
cmc
(bad)
(bad)
mov
mov
add
push
jmp
ins
scas
js
inc
fsubr
test
test
das
inc
mov
inc
dec
aam
jo
mov
push
(bad)
jmp
pop
imul
ins
adc
jns
mov
cmp
test
mov
test
cs
(bad)
(bad)
jmp
je
(bad)
jmp
and
outs
in
inc
lods
sbb
(bad)
push
das
xor
dec
stos
dec
es
arpl
sti
ins
inc
ins
fistp
cld
xchg
(bad)
(bad)
(bad)
fild
jge
jg
loop
mov
or
std
jnp
mov
test
xor
(bad)
jmp
popf
adc
clc
loop
xor
or
daa
call
push
(bad)
push
jle
mov
(bad)
(bad)
(bad)
call
sahf
(bad)
lds
mov
or
push
out
fmul
mov
push
mov
call
test
add
and
(bad)
mov
add
cmp
lods
shr
es
je
enter
(bad)
jmp
fmul
add
dec
fidivr
mov
dec
movs
xchg
stc
cmp
(bad)
mov
jo
inc
sub
aas
out
and
out
push
cmp
ret
(bad)
(bad)
(bad)
std
inc
jmp
adc
push
cmp
jae
imul
sub
aaa
inc
push
(bad)
call
and
arpl
cli
sub
and
out
outs
push
xor
in
fadd
dec
mov
sar
rcl
and
and
push
aaa
clc
iret
adc
pop
pop
stc
repnz
mov
inc
jo
cmp
mul
mov
(bad)
(bad)
cmp
dec
or
xchg
mov
and
out
adc
bound
xor
scas
push
mov
add
cld
push
push
je
jmp
jmp
jno
outs
mov
test
imul
pop
(bad)
dec
sub
or
add
sbb
mov
inc
sub
sar
or
movs
or
xchg
adc
add
cmp
mov
dec
cmp
push
or
pop
jmp
int3
fmul
lock
dec
mov
xchg
sbb
in
(bad)
std
iret
cmps
mov
dec
sar
sbb
retf
ret
cmp
cmps
pop
cs
(bad)
addr16
(bad)
(bad)
call
out
mov
hlt
add
adc
movs
xor
neg
push
fs
fs
(bad)
(bad)
jmp
push
ret
cmp
shl
(bad)
rcl
jb
aad
sti
sbb
cld
outs
mov
mov
or
test
sub
jg
jbe
push
cli
lock
fimul
xchg
leave
xchg
(bad)
cwde
mov
dec
cld
call
push
(bad)
aad
mov
test
jl
push
div
xor
mov
test
xchg
out
popa
sub
enter
das
sbb
xchg
push
pop
cmp
in
jns
ficom
jmp
cli
push
iret
xchg
das
hlt
loopne
out
int3
mov
(bad)
(bad)
dec
cmp
arpl
add
pushf
pop
mov
xchg
sahf
mov
jecxz
scas
(bad)
js
test
gs
xchg
sbb
in
adc
jmp
and
jge
sbb
mov
rol
sub
jg
test
cli
movs
les
cmp
aad
push
call
push
sahf
jae
fstp
mov
push
(bad)
shr
daa
call
and
(bad)
(bad)
(bad)
jmp
adc
jl
inc
outs
(bad)
imul
imul
ss
xchg
jg
pop
sub
pop
xor
sbb
push
push
cld
pop
(bad)
cmp
hlt
mov
data16
or
jp
xor
lds
call
loopne
jns
(bad)
movs
xor
pop
(bad)
nop
push
aad
int3
push
retf
shl
(bad)
sub
in
imul
inc
cwde
inc
push
add
or
dec
add
add
(bad)
(bad)
mov
xchg
jg
test
popa
js
hlt
loope
adc
xchg
mov
pop
pop
pop
std
pop
xor
sbb
mov
scas
jle
rcl
sub
fisttp
sbb
(bad)
(bad)
(bad)
inc
fisub
test
xor
(bad)
sar
cs
xor
cmp
(bad)
(bad)
(bad)
(bad)
jmp
pop
aad
js
arpl
stos
lods
jmp
and
dec
int
in
and
sti
outs
mov
ins
adc
mov
xchg
fmul
xlat
mov
ss
inc
(bad)
lahf
push
add
adc
inc
mov
(bad)
(bad)
(bad)
mov
in
sub
ret
pop
dec
addr16
js
mov
out
test
jmp
(bad)
(bad)
call
ja
xchg
xchg
add
pop
in
outs
jno
sbb
in
fwait
repz
jns
mov
(bad)
adc
into
iret
xor
shr
lea
sbb
das
add
cld
fwait
push
and
mov
mov
cs
and
fadd
call
mov
mov
out
pop
ins
sti
(bad)
mov
daa
adc
cmp
add
test
mov
and
(bad)
(bad)
xchg
sbb
or
inc
xchg
xor
(bad)
xor
sahf
cmp
add
loopne
push
cld
push
dec
test
iret
loopne
cmc
sbb
xchg
cmps
adc
dec
mov
mov
pop
sub
(bad)
fimul
enter
mov
mov
dec
imul
xchg
shr
imul
lods
sbb
sbb
sbb
ffreep
cmp
js
xchg
mov
test
push
mov
jmp
jo
mov
push
clc
retf
out
sub
int3
jle
(bad)
(bad)
(bad)
call
(bad)
adc
mov
push
out
aas
add
mov
sub
mov
mov
sub
add
(bad)
js
sbb
cmc
lahf
inc
fist
es
retf
in
cmc
jmp
inc
adc
cmp
aas
push
and
add
cmc
std
sar
(bad)
out
xchg
pop
movs
cli
ds
mov
jae
(bad)
mov
cmp
mov
jne
icebp
mov
or
and
(bad)
(bad)
(bad)
fstp
dec
inc
scas
adc
jbe
pop
add
test
push
pop
sbb
lods
dec
xor
cmc
mov
dec
imul
pop
(bad)
(bad)
jg
out
shl
xchg
je
pop
daa
xor
js
retf
imul
(bad)
mov
shl
sar
out
xchg
xchg
jne
ret
cmp
mov
cmp
stc
call
jo
stc
xchg
mov
cdq
stos
push
loope
repz
or
cli
mov
aad
push
(bad)
inc
jb
cmp
xlat
loopne
and
ss
and
push
sub
loop
sbb
in
(bad)
out
xchg
dec
icebp
imul
adc
ins
cmps
nop
pop
dec
fist
jmp
mul
jo
fcomp
adc
adc
dec
jmp
in
dec
neg
cli
mov
jno
pop
inc
dec
(bad)
(bad)
jmp
in
iret
pop
int3
sahf
scas
(bad)
ficomp
movs
lods
sbb
es
sbb
(bad)
call
mov
fdecstp
jmp
hlt
mov
test
es
scas
xchg
inc
inc
clc
cmc
stos
ss
sub
lock
cmps
test
(bad)
in
icebp
push
aaa
cmc
dec
pop
xchg
popf
sahf
lds
pop
mov
aam
lods
jne
shl
retf
in
outs
jp
cmc
popa
ins
hlt
jmp
nop
mov
ror
jo
test
push
(bad)
out
cli
push
je
or
mov
pop
xchg
das
and
(bad)
(bad)
(bad)
dec
in
nop
xchg
mov
sysexit
mov
mov
std
pop
shl
sub
push
cmp
pop
adc
push
imul
cs
jmp
(bad)
std
push
sbb
xchg
push
or
(bad)
push
fdivr
mov
jecxz
es
fsubr
leave
movs
lods
pop
sbb
(bad)
(bad)
mov
adc
adc
jo
ins
ja
inc
xchg
scas
dec
sub
(bad)
(bad)
(bad)
call
movs
je
ins
int3
dec
cmc
push
test
repnz
shl
jnp
cmps
ret
(bad)
(bad)
jmp
dec
pop
cs
pop
pop
sbb
mov
push
xor
or
(bad)
sti
inc
cdq
mov
ins
mov
mov
pop
inc
mov
(bad)
(bad)
jmp
add
leave
daa
icebp
pushf
fwait
mov
dec
cdq
test
retf
out
das
dec
ja
pop
cmp
(bad)
xchg
fistp
adc
aam
nop
and
sar
mov
dec
rcl
dec
dec
cmp
inc
outs
(bad)
(bad)
call
jge
and
inc
(bad)
push
out
push
jne
xor
xchg
push
pop
mov
out
hlt
sar
(bad)
(bad)
call
out
push
cmp
lahf
xchg
test
pop
pushf
jo
cmp
outs
mov
lea
mov
lea
jns
bound
lea
(bad)
(bad)
jg
ja
(bad)
push
bound
sub
outs
js
(bad)
(bad)
jg
mov
aam
xor
mov
fcmovu
pop
cwde
and
add
mov
pop
cmp
sbb
popa
(bad)
jg
or
dec
pop
mov
xor
out
mov
in
dec
(bad)
(bad)
(bad)
jmp
jno
std
(bad)
ins
and
fs
and
enter
leave
stos
(bad)
cld
(bad)
(bad)
push
dec
and
cli
sub
js
jo
leave
inc
gs
popa
mov
outs
in
add
repz
xchg
jg
(bad)
cmp
xchg
xor
out
out
push
shl
push
retf
add
popf
mov
dec
adc
and
sub
or
out
jp
in
dec
movs
inc
adc
js
jmp
jbe
xor
add
jmp
popf
shr
ror
xchg
sub
aaa
or
xor
jmp
cld
pop
fstp
mov
cmp
ins
cs
or
adc
adc
add
push
pop
sub
jno
stos
in
and
add
mov
and
and
(bad)
mov
cmp
gs
dec
popf
addr16
imul
pop
push
js
mov
sbb
dec
add
cmp
movs
add
stc
pop
repz
iret
adc
into
add
push
pop
(bad)
fcomip
inc
fmul
retf
sbb
mov
pushf
push
adc
repz
or
pop
loopne
push
ins
and
lds
mov
mov
(bad)
(bad)
jmp
dec
shl
dec
jno
popf
add
sub
lods
into
mov
mov
arpl
loope
lahf
push
add
in
(bad)
repnz
jmp
sbb
mov
scas
jmp
in
in
test
loopne
fdivr
(bad)
(bad)
(bad)
(bad)
fcom
ror
fidivr
popf
(bad)
mov
fdivr
mov
movs
pop
(bad)
(bad)
std
jmp
push
cmp
sub
mov
cs
pop
in
mov
aam
jg
or
neg
sbb
pushaw
shl
(bad)
push
pusha
fild
mov
retf
jno
aas
mov
jb
fbstp
loop
add
(bad)
(bad)
(bad)
call
lods
ret
cmc
jb
retf
pop
aam
jne
(bad)
lea
xchg
sbb
hlt
or
inc
and
sbb
mov
or
cli
jo
ja
cs
scas
sub
(bad)
(bad)
jmp
iret
lods
push
and
int3
add
mov
cmc
xor
shl
cmovae
jns
push
xchg
loopne
in
call
xchg
ret
cmp
dec
push
inc
out
xor
pop
ss
pop
retf
imul
ret
sub
fucomi
(bad)
jmp
(bad)
cmps
jg
int3
call
sbb
xor
jg
lahf
sbb
cmp
call
cmp
mov
or
pop
inc
(bad)
push
enter
mov
pop
mov
icebp
or
repz
das
test
cli
enter
ffree
and
jae
jae
inc
xchg
add
mov
jge
shr
adc
push
int3
sbb
(bad)
(bad)
dec
data16
jmp
pop
loopne
mov
ja
adc
and
cmc
inc
in
dec
xchg
in
(bad)
jg
leave
mov
sub
and
fild
js
mov
pop
das
cmps
outs
(bad)
push
inc
in
push
xor
mov
les
retf
mov
(bad)
(bad)
call
aad
adc
daa
xor
sub
adc
dec
loope
retf
mov
push
mov
mov
mov
rol
dec
test
or
movs
jecxz
mov
stos
rol
cmc
mov
clc
enter
pop
push
dec
movs
(bad)
jnp
lea
test
mov
in
fs
(bad)
into
mov
(bad)
jg
or
bound
mov
adc
cwde
outs
iret
enter
call
enter
popa
add
xor
(bad)
arpl
jbe
xchg
jmp
(bad)
lahf
pop
cmp
dec
xchg
dec
sbb
pop
jg
leave
aaa
jecxz
std
sbb
(bad)
(bad)
jmp
in
int
repnz
add
cs
jle
mov
fdivr
daa
iret
inc
mov
and
lahf
push
retf
test
iret
cmp
mov
loope
(bad)
jmp
inc
inc
inc
pop
dec
xlat
(bad)
cmp
rcl
aaa
jae
pop
push
pop
or
fcomip
or
jle
cmps
ret
push
outs
push
inc
push
and
push
ds
call
push
add
xor
xchg
cmp
jecxz
dec
jb
pushf
out
fbstp
(bad)
scas
cdq
jnp
js
scas
push
sbb
leave
jb
in
call
test
addr16
fnstsw
or
sbb
fdivr
jle
xor
pxor
(bad)
(bad)
push
dec
das
retf
mov
xchg
repz
push
in
xor
or
push
call
push
xchg
pop
into
add
aam
in
data16
(bad)
(bad)
fiadd
fcmovbe
mov
dec
stos
and
xor
xor
(bad)
(bad)
call
popf
sub
push
into
xchg
jmp
neg
inc
mov
inc
xor
sub
loopne
pop
(bad)
inc
repz
cmps
neg
add
(bad)
pop
cmc
adc
(bad)
(bad)
(bad)
(bad)
cmp
mov
jg
or
movs
(bad)
out
loopne
(bad)
std
fwait
push
shl
and
(bad)
(bad)
(bad)
jmp
add
leave
push
adc
fwait
nop
ja
xor
jo
jp
arpl
cs
mov
jg
(bad)
pop
xchg
repz
icebp
call
xchg
(bad)
ds
dec
loopne
lods
add
cs
dec
pop
cli
pop
pop
inc
adc
call
(bad)
mov
imul
sub
sar
imul
(bad)
mov
push
(bad)
push
inc
push
pop
imul
repnz
(bad)
mov
mov
add
or
(bad)
mov
mov
mov
mov
jbe
mov
xor
pop
movs
shl
(bad)
dec
cmps
arpl
fsubr
dec
cmp
xchg
cmp
ret
int
shl
jmp
(bad)
dec
xor
or
nop
ret
cld
mov
movs
inc
xor
jle
(bad)
(bad)
mov
sahf
sub
mov
ret
mov
mov
fsubp
cwde
in
mov
sbb
(bad)
dec
lock
lods
test
(bad)
in
scas
(bad)
clc
jl
movs
or
lods
xor
or
call
mov
and
mov
dec
neg
pushf
pop
int3
ror
dec
adc
(bad)
jmp
or
mov
outs
mov
lahf
push
cli
push
or
xchg
clc
adc
movs
jns
mov
mov
movs
pop
push
(bad)
ins
inc
mov
(bad)
(bad)
(bad)
out
jp
push
pop
pop
or
xor
add
add
das
add
push
call
dec
mov
ds
cmps
arpl
jmp
call
loop
(bad)
cmp
adc
popa
test
or
pusha
sub
pop
push
int
mov
mov
xor
jmp
dec
mov
pushf
mov
mov
cmp
repz
add
ins
mov
movs
aam
clc
(bad)
jg
loope
scas
iret
sub
je
aas
fs
out
stos
xchg
loop
out
pop
xchg
out
inc
mov
push
(bad)
daa
dec
test
dec
cmp
and
(bad)
(bad)
out
push
xchg
dec
xchg
mov
ret
sti
(bad)
pop
push
hlt
inc
sbb
daa
dec
lods
jmp
cmp
test
lock
add
(bad)
lahf
jmp
xchg
dec
lods
mov
adc
fstp
push
inc
test
lods
fadd
push
mov
pop
dec
push
ja
pop
jae
nop
out
dec
xor
push
pop
shl
mov
(bad)
call
retf
loopne
shl
daa
sub
in
push
les
popf
add
mov
(bad)
jns
jecxz
bnd
cmp
mov
cmp
stc
jmp
pop
rcl
(bad)
call
lock
pop
lahf
into
test
mov
cmp
mov
inc
jg
rcr
(bad)
jg
or
hlt
sti
cmps
sub
mov
popf
ss
jmp
and
inc
push
dec
pushf
push
lods
cmp
(bad)
jg
mov
sub
pop
adc
or
test
repz
(bad)
jne
push
jge
call
fisubr
call
out
mov
nop
mov
scas
jmp
jmp
les
dec
mov
inc
movs
jnp
daa
sub
lds
fdivr
ja
clc
pop
ins
sbb
je
bound
into
dec
push
cli
(bad)
(bad)
(bad)
jmp
push
sbb
jp
pop
pop
and
test
aam
add
xlat
loopne
bound
call
in
cs
jmp
jae
nop
(bad)
fisttp
data16
dec
cld
xchg
stc
fidiv
mov
out
sahf
(bad)
(bad)
mov
cmp
int3
cmps
jae
jnp
repz
jg
not
jp
outs
push
cwde
out
adc
jg
jl
xor
or
and
sub
clc
(bad)
jmp
mov
xor
and
mov
aas
movs
fdivr
(bad)
xchg
sub
das
iret
outs
jb
lock
cs
inc
xlat
scas
pop
inc
mov
into
cmp
mov
sub
mov
xchg
(bad)
pop
(bad)
cld
(bad)
(bad)
jmp
daa
push
popw
sbb
clc
push
mov
mov
pop
(bad)
jmp
mov
(bad)
mov
mov
cld
cmp
xchg
dec
pop
jns
or
inc
xchg
ds
push
scas
mov
rol
mov
push
pop
or
jno
sti
mov
std
(bad)
dec
bound
pop
(bad)
loope
out
or
push
and
sub
fbld
ds
call
dec
or
add
aaa
pusha
sub
int
popf
mov
jle
fisub
mov
outs
(bad)
jmp
(bad)
(bad)
std
outs
cmp
stos
sbb
jmp
pop
mov
clc
mov
xor
add
or
jbe
(bad)
(bad)
mov
fucomi
(bad)
addr16
enter
lods
mov
push
add
inc
push
sti
inc
je
sti
mov
lods
pop
cli
or
pop
lock
cld
dec
push
(bad)
inc
lods
lds
mov
and
cmp
adc
adc
clc
xchg
fucomi
push
clc
cmps
push
loopne
mov
fwait
inc
std
pop
xchg
pop
cmps
push
pop
mov
cmp
xor
loope
popf
lahf
rol
mul
xor
jne
xchg
lea
push
(bad)
(bad)
jg
add
push
call
lods
jns
or
dec
lods
pop
(bad)
jg
push
in
push
sub
pop
dec
adc
dec
mov
sub
sbb
inc
mov
inc
inc
dec
add
imul
pop
(bad)
shl
xlat
xor
inc
sar
push
cmp
(bad)
imul
(bad)
(bad)
jg
jnp
out
cmp
pop
mov
sbb
repnz
mov
push
dec
jns
popf
pop
dec
adc
(bad)
inc
add
sbb
or
ds
loope
xor
sub
inc
sub
(bad)
(bad)
(bad)
(bad)
cmp
pop
int
ret
rol
pop
sub
cmovp
mov
sbb
cs
call
fwait
jb
jecxz
cmp
and
sbb
add
(bad)
(bad)
push
push
mov
adc
repnz
pop
repz
les
push
or
jns
(bad)
aad
xchg
and
cmp
jp
inc
and
xchg
pop
ret
lds
in
sbb
(bad)
(bad)
adc
adc
dec
jae
mov
imul
jns
jns
mov
test
popa
bound
lea
scas
xor
repz
fld
inc
sti
jmp
loopne
jge
jg
push
fisubr
sti
in
idiv
jns
or
cmp
ins
test
(bad)
and
sub
shl
pop
lods
idiv
in
jns
test
jmp
jnp
out
out
push
ja
mov
jmp
scas
lds
call
jp
hlt
test
cmp
(bad)
push
int
jl
jp
mov
mov
imul
jbe
push
sbb
das
sar
movs
sbb
add
inc
je
out
leave
mov
dec
push
cmps
cmp
std
(bad)
(bad)
jmp
jbe
stos
scas
bound
test
retf
leave
ret
aam
pop
jne
stos
xchg
retf
gs
inc
mov
and
dec
lahf
std
es
cli
out
xchg
cdq
shr
inc
sub
mov
jg
sub
pop
pop
jle
cdq
jb
mov
or
call
loopne
lea
pushf
mov
gs
ins
sbb
mov
test
xor
ins
out
out
push
xlat
aad
enter
dec
jnp
cld
jns
(bad)
(bad)
fistp
(bad)
icebp
enter
add
push
xor
dec
lea
xchg
je
shl
(bad)
(bad)
(bad)
dec
cmp
gs
div
mov
in
mov
cld
mov
repnz
sub
(bad)
(bad)
(bad)
(bad)
out
outs
sbb
mov
ror
lea
push
popf
test
xor
adc
inc
scas
push
clc
jg
dec
enter
push
xor
mov
mov
aaa
pop
(bad)
outs
retw
mov
or
jno
jmp
clc
or
hlt
loope
int
pushf
sub
clc
(bad)
mov
add
test
call
(bad)
cmp
retf
dec
push
fimul
inc
pop
imul
sbb
std
fisttp
sub
aas
mov
imul
dec
adc
fisub
mov
mov
gs
cbw
inc
test
cld
cmp
sti
out
clc
scas
mov
(bad)
cdq
fwait
idiv
scas
iret
push
cmps
int
ror
add
ins
repz
repz
push
push
pop
jo
xchg
call
jg
pop
retf
cwde
push
mov
xor
mov
adc
pop
jge
jmp
(bad)
(bad)
(bad)
inc
int3
inc
add
xor
pop
dec
fs
cdq
ds
xor
mov
sahf
sar
jmp
sbb
lock
scas
cmps
adc
adc
mov
mov
or
inc
mov
add
call
xchg
mov
retf
scas
jl
int3
mov
dec
sbb
fidivr
shl
sbb
jle
jmp
(bad)
jmp
leave
call
mov
fsubr
cs
loope
dec
xchg
shl
pop
mov
sub
sbb
call
mov
cmp
jmp
loop
cmc
pop
scas
jmp
pop
inc
(bad)
test
jbe
push
mov
sbb
add
xchg
pop
jnp
enter
(bad)
(bad)
mov
xchg
hlt
sub
retf
fyl2x
rcl
(bad)
mov
xchg
and
lock
jae
call
xchg
add
inc
inc
popa
pop
lods
pop
out
scas
int
mov
loopne
xor
jno
add
dec
js
jmp
push
std
test
(bad)
(bad)
(bad)
call
and
mov
ja
xchg
xchg
aaa
loope
xor
out
sub
xlat
(bad)
(bad)
call
je
mov
push
in
mov
in
aad
add
xor
mov
adc
movs
pop
jns
idiv
arpl
stos
inc
daa
or
inc
stc
mov
scas
xchg
test
jmp
aaa
add
movs
aad
push
mov
add
data16
mov
mov
inc
cld
mov
inc
retf
xchg
sbb
mov
(bad)
(bad)
fild
add
es
pop
test
repnz
pop
or
sahf
(bad)
mov
loope
test
pop
dec
stos
in
xor
(bad)
daa
lea
(bad)
push
ret
clc
icebp
cmp
push
test
out
lahf
xor
(bad)
mov
cmp
ja
jns
in
std
ret
sub
jecxz
aaa
cld
(bad)
loopne
lods
push
mov
(bad)
ret
in
fsubr
sahf
cld
(bad)
mov
pop
loop
and
loope
push
loope
iret
dec
jmp
arpl
mov
sbb
test
pop
push
ror
jle
out
add
outs
mov
out
mov
movs
jne
mov
dec
repz
fisub
or
mov
jnp
inc
pop
fidiv
ss
hlt
dec
push
out
pop
mov
dec
adc
jb
fmul
fnsave
cdq
cmps
mov
xchg
in
mov
(bad)
(bad)
out
sub
xchg
in
stc
fs
dec
fcom
in
add
jmp
push
call
and
cld
stc
imul
retf
fidiv
push
jb
(bad)
(bad)
(bad)
cmp
mov
sbb
rcr
out
cmp
addr16
jb
push
mov
cli
inc
outs
stc
cmp
push
rcr
and
inc
(bad)
sub
xor
push
mov
pop
or
mov
mov
or
or
out
xor
inc
dec
aaa
cmc
es
(bad)
(bad)
jmp
dec
inc
(bad)
lea
ins
sbb
and
lock
shl
dec
and
repz
pop
xor
pop
push
pusha
sbb
(bad)
jmp
(bad)
cdq
test
retf
cmp
hlt
cwde
pop
push
ja
ss
and
add
add
pop
adc
push
hlt
(bad)
jmp
jge
jmp
bound
(bad)
popf
mov
jo
push
movs
and
imul
xchg
iret
cmp
(bad)
(bad)
dec
or
adc
or
scas
jb
and
inc
int
addr16
mov
mov
or
out
xor
cmp
sti
out
mov
sbb
dec
sti
sar
and
sbb
jge
cmp
(bad)
(bad)
mov
dec
int
mov
and
imul
mov
mov
or
push
cmc
pop
mov
push
retf
push
add
(bad)
inc
fadd
or
lahf
adc
push
pop
fdiv
cwde
clc
mov
cmp
leave
cdq
adc
outs
mov
(bad)
(bad)
stc
cdq
jae
test
sub
scas
jg
es
in
rcr
and
mov
frstor
pop
mov
xor
mov
sub
cli
stos
push
and
scas
(bad)
out
or
xor
sub
in
cmp
in
mov
imul
mov
jecxz
fwait
aaa
inc
mov
call
inc
pop
ins
(bad)
leave
dec
clc
les
cli
popf
mov
imul
daa
xchg
dec
sub
out
sti
movs
cld
mov
cmp
iret
add
inc
fldcw
lahf
sub
cmc
sbb
(bad)
(bad)
cmp
mov
fisttp
cmps
push
in
mov
jne
rcr
popf
es
call
sbb
cmp
arpl
(bad)
(bad)
(bad)
jmp
sub
dec
shl
(bad)
stos
mov
push
jg
arpl
ja
shl
adc
mov
(bad)
dec
mov
sub
imul
fwait
xchg
add
shr
cld
ret
and
test
pop
mov
aaa
ja
xchg
lods
(bad)
dec
mov
jle
ja
out
es
adc
ja
cmp
std
das
adc
and
push
pusha
bnd
jg
es
adc
xchg
jg
(bad)
(bad)
(bad)
jmp
sbb
and
jmp
out
sbb
cmp
jno
aam
dec
clc
in
or
popa
lods
call
sub
sahf
mov
jae
or
mov
jge
sub
pop
pop
or
jnp
jp
shl
fld
retf
popa
dec
sub
ja
les
fcomp
jns
ret
or
mov
jae
enter
inc
push
xor
inc
ss
sbb
pop
jmp
or
hlt
loop
xor
(bad)
inc
jb
cmp
mov
jecxz
cmp
push
adc
xchg
mov
or
cmp
sub
nop
inc
sar
sar
das
push
adc
int
addr16
inc
push
(bad)
mov
mov
adc
push
aam
(bad)
(bad)
(bad)
(bad)
(bad)
in
not
mov
cmps
pop
out
jnp
jge
test
push
sub
jnp
inc
mov
mov
sub
fdiv
push
ffree
jo
mov
hlt
xlat
xchg
out
add
inc
cmp
call
and
add
(bad)
sti
imul
(bad)
inc
xor
push
ja
sbb
sbb
mov
ds
jmp
pop
push
mov
sbb
pushf
mov
outs
xchg
(bad)
mov
cwde
outs
in
out
and
inc
repnz
(bad)
(bad)
jmp
xchg
jbe
pop
test
test
xor
and
icebp
dec
mov
popa
clc
scas
(bad)
(bad)
jg
jmp
push
pop
js
cmps
sbb
xchg
fwait
out
cmc
in
(bad)
cli
ins
cmp
(bad)
fninit
xchg
push
scas
stc
je
or
sbb
pop
dec
call
xor
pop
xchg
mov
push
in
(bad)
sahf
fdivr
dec
(bad)
jp
mov
jb
mov
sub
jno
sub
retf
(bad)
jmp
cmp
retf
push
inc
xor
ret
test
push
sub
loope
sub
icebp
(bad)
(bad)
(bad)
mov
aam
scas
int
retf
mov
enter
jno
call
dec
mov
shl
inc
and
xor
out
xor
bound
clc
inc
jecxz
cmp
or
and
sbb
(bad)
mov
retf
mov
call
adc
dec
ja
(bad)
xor
jmp
(bad)
mov
inc
pop
mov
sbb
mov
and
mov
fcomp
shl
fdiv
inc
push
das
adc
out
mov
fnsave
cmp
push
jae
ins
mov
int
loop
(bad)
cmp
ja
pop
or
add
push
imul
adc
jmp
cwde
(bad)
popf
mov
mov
inc
adc
(bad)
test
inc
int3
in
sahf
pop
mov
push
xlat
fwait
aad
(bad)
jmp
cwde
scas
or
adc
out
stc
rol
dec
clc
in
pop
cmp
retf
test
mov
fmul
push
cmc
sub
mov
(bad)
(bad)
(bad)
call
pop
popf
xor
call
ret
sbb
data16
mov
rcl
cmps
jp
(bad)
(bad)
(bad)
push
pop
rcl
and
popf
cwde
sahf
mov
push
cdq
cwde
je
xchg
cmc
lods
ret
stos
dec
(bad)
(bad)
(bad)
jmp
lods
pop
scas
in
aam
mov
aam
or
dec
add
xchg
and
out
jmp
(bad)
mov
aad
and
shr
and
and
jmp
add
cwde
and
jg
dec
mov
push
(bad)
cmp
test
(bad)
(bad)
inc
ds
cmp
aad
mov
mov
retf
addr16
mov
enter
(bad)
(bad)
mov
dec
jae
push
movs
cmp
xor
xor
aaa
(bad)
ficom
inc
cdq
(bad)
(bad)
(bad)
dec
das
and
ds
fsubr
repnz
pop
pop
xor
mov
push
dec
aad
aam
sub
(bad)
out
clc
push
push
mov
sbb
and
or
cli
mov
or
inc
(bad)
(bad)
(bad)
call
or
test
popa
lods
push
aas
xor
ins
or
dec
sbb
sbb
(bad)
ja
rol
pop
xchg
jl
lods
fisttp
call
fistp
(bad)
pushf
jmp
xor
ss
mov
jmp
(bad)
(bad)
inc
ret
call
hlt
cmp
sbb
pop
pop
movs
mov
fnstenv
aaa
inc
sar
sub
inc
bound
jge
inc
xchg
(bad)
cli
mov
(bad)
sbb
pop
push
mov
fild
scas
inc
sbb
ret
call
icebp
idiv
adc
xchg
lods
fistp
enter
ret
inc
imul
sub
xor
sub
adc
sar
(bad)
(bad)
(bad)
(bad)
mov
in
jmp
into
call
pop
shl
xchg
cmp
mov
mov
sub
xchg
and
cli
fnstsw
dec
(bad)
(bad)
call
xor
jns
dec
movs
leave
push
fwait
(bad)
scas
adc
xor
add
sbb
ficom
(bad)
(bad)
(bad)
(bad)
std
and
cmp
sbb
in
int
jecxz
xchg
imul
mov
(bad)
lods
test
icebp
sub
ins
sbb
sti
mov
pop
push
lock
(bad)
(bad)
(bad)
call
xchg
daa
retf
pop
popa
xlat
ffree
je
repz
popa
cmc
jecxz
dec
aaa
neg
ja
sti
les
add
(bad)
fimul
jb
mov
cwde
mov
add
sahf
inc
adc
cmp
scas
xchg
hlt
mov
call
ss
jo
sbb
cmp
std
dec
out
sub
xor
js
sbb
loop
dec
jg
or
mov
xor
mov
mov
shl
ins
adc
push
stos
xchg
(bad)
(bad)
inc
pop
inc
xchg
and
lea
jae
cwde
xchg
(bad)
fiadd
push
lds
pop
push
sbb
fcomp
push
inc
(bad)
(bad)
(bad)
jmp
mov
loopne
out
jbe
ins
mov
cmp
add
sbb
imul
(bad)
push
in
inc
adc
cmps
push
in
pop
and
jecxz
pop
pxor
jns
adc
(bad)
(bad)
(bad)
mov
mov
nop
in
lock
inc
imul
xchg
mov
add
xchg
lods
(bad)
cld
out
and
out
test
push
jmp
loope
jno
push
push
adc
rol
call
dec
adc
add
imul
pop
out
pusha
cmp
jmp
xchg
dec
sub
ins
jb
into
mov
je
cmp
and
(bad)
jg
mov
call
jo
push
sub
pusha
stos
mov
addr16
enter
inc
mov
xchg
fisttp
pop
mov
out
cwde
fs
and
jmp
or
mov
xor
out
les
push
xor
fidiv
es
and
call
mov
and
(bad)
push
(bad)
(bad)
mov
nop
adc
cmp
repnz
jmp
mov
(bad)
outs
hlt
js
jge
shl
pusha
dec
aas
and
std
mov
sbb
ret
push
loopne
lods
enter
(bad)
(bad)
jmp
xor
jmp
in
or
js
mov
retf
(bad)
jnp
xchg
xchg
lock
shl
cmp
adc
mov
sbb
xor
cwde
out
cmp
mov
xor
jns
loopne
push
sub
jg
jb
xor
out
je
jp
(bad)
fdiv
shl
add
adc
call
test
jg
(bad)
nop
mov
(bad)
call
xchg
xchg
dec
jg
sbb
push
xlat
push
xchg
or
aad
(bad)
int
dec
(bad)
(bad)
(bad)
inc
add
mov
call
int
inc
js
dec
stos
mov
dec
mov
xor
ss
(bad)
jmp
movs
mov
inc
repz
add
sub
scas
pop
nop
mov
sbb
sbb
xlat
mul
call
mov
jecxz
jg
(bad)
inc
add
push
push
push
sbb
inc
mov
mov
data16
sub
push
or
adc
inc
and
es
sub
mov
out
clc
mov
xor
scas
not
and
(bad)
retf
aam
aas
sub
cmps
leave
jg
(bad)
call
lods
test
lods
xor
or
xchg
int
fst
mov
pop
xchg
out
out
sti
add
jae
test
xchg
daa
xadd
daa
xchg
cdq
xor
mov
mov
test
mov
and
jnp
sahf
hlt
push
xor
das
mov
ja
dec
or
into
dec
push
sti
nop
cmps
(bad)
(bad)
(bad)
(bad)
cmp
sub
ins
xchg
(bad)
repz
shl
ss
sbb
xor
(bad)
(bad)
(bad)
jge
and
sub
daa
jnp
and
xchg
jo
dec
addr16
mov
add
xor
imul
leave
(bad)
pop
std
(bad)
call
das
pop
ins
mov
out
adc
pushf
je
dec
mov
enter
(bad)
(bad)
push
pop
aam
imul
dec
pusha
add
jnp
cs
pop
pop
push
pushf
(bad)
leave
pop
call
cli
pop
hlt
(bad)
scas
cli
dec
out
mov
or
ror
mov
ret
fcomi
(bad)
call
xchg
mov
pop
aaa
ds
div
(bad)
(bad)
fisttp
and
jmp
jecxz
(bad)
(bad)
push
std
popa
mov
or
dec
dec
sbb
idiv
add
xor
dec
fcmovnbe
scas
adc
nop
fstp
je
inc
jmp
pop
adc
jo
pop
mov
push
addr16
(bad)
(bad)
dec
xlat
pusha
sahf
int
in
std
jno
pop
sbb
xchg
mov
out
movs
pop
pop
inc
push
dec
jg
hlt
mov
das
pop
and
mov
mov
aad
maxps
adc
xchg
mov
jno
(bad)
(bad)
push
add
add
iret
jmp
jb
jle
ds
pop
les
retf
lods
stc
push
(bad)
(bad)
jmp
popa
jo
iret
arpl
(bad)
test
cmc
movs
pop
or
cmps
(bad)
pop
(bad)
(bad)
mov
mov
neg
push
inc
mov
or
data16
mov
shl
mov
nop
xchg
test
(bad)
in
dec
cmps
(bad)
std
jne
add
sub
or
cmp
sub
lods
aad
pop
mov
xlat
in
xchg
mov
xlat
jnp
fadd
aad
mov
ins
cmps
push
shr
mov
pop
popa
in
call
(bad)
jmp
mov
sbb
out
ret
mov
sub
pop
pop
lods
push
mov
push
(bad)
(bad)
inc
mov
leave
sar
inc
jb
mov
test
popa
mov
xchg
aam
(bad)
(bad)
inc
pop
pop
int3
cmp
jae
push
lds
pop
pop
cmp
or
xor
(bad)
(bad)
inc
jno
cli
xor
jnp
test
push
and
push
mov
cli
arpl
xor
(bad)
(bad)
call
cmp
and
and
sub
pop
lock
pop
(bad)
fst
aad
sbb
jmp
and
mov
in
out
mov
xchg
cdq
jbe
mov
and
jns
add
fucom
sbb
popa
je
add
add
dec
adc
push
sub
mul
push
test
dec
out
add
les
(bad)
(bad)
jg
xchg
sub
or
jbe
pop
sbb
mov
ret
and
push
xor
lock
xor
(bad)
mov
(bad)
call
mov
cmp
sti
push
test
xor
neg
add
mov
scas
add
test
(bad)
pushw
test
inc
mov
jg
or
jb
pop
ja
jmp
push
retf
cmps
add
(bad)
cmp
or
out
dec
xchg
mov
(bad)
or
inc
jp
mov
scas
mov
ss
les
js
(bad)
(bad)
inc
repz
test
inc
aas
hlt
cdq
sti
test
jnp
jmp
dec
pop
sub
lods
mov
scas
adc
jmp
fldenv
cmp
je
push
in
xchg
(bad)
jmp
sbb
out
lods
iret
jbe
ins
call
outs
retf
or
(bad)
mov
scas
dec
cmp
push
fs
mov
cli
(bad)
fild
test
pop
mov
add
stos
leave
out
jmp
jmp
das
ds
fnstsw
inc
jno
inc
(bad)
jg
(bad)
call
push
or
jne
popf
and
out
jge
push
xor
jl
xlat
or
test
(bad)
(bad)
(bad)
jmp
loop
popa
call
fnstsw
xchg
push
sub
inc
cmp
fcom
(bad)
(bad)
(bad)
jle
xor
or
cmps
call
mov
sbb
cmp
imul
mov
idiv
les
aam
sti
mov
inc
addr16
sbb
dec
imul
cli
xchg
stos
iret
sub
test
(bad)
sub
clc
movq
push
aas
cmp
(bad)
inc
mov
js
repnz
aad
fwait
call
fdiv
adc
sub
or
fimul
lar
push
fcom
sbb
jnp
push
fstp
mov
bound
and
adc
adc
pop
mov
mov
mov
(bad)
(bad)
cmp
fadd
cwde
fisttp
out
nop
ins
ss
pop
jno
lsl
xor
(bad)
(bad)
(bad)
call
mov
pop
mov
mov
aaa
mov
cli
les
pop
(bad)
fiadd
sbb
or
push
repnz
dec
pop
popf
imul
jg
popa
cld
sub
into
bound
push
ss
inc
jne
cmp
rcr
nop
mov
mov
gs
imul
xor
cmp
mov
jns
pop
retf
test
or
pushf
push
fwait
aam
sub
and
cs
rcl
or
inc
cmp
ss
xchg
dec
mov
sub
shl
push
test
push
sbb
call
jmp
fiadd
push
adc
sub
inc
push
pop
psubw
inc
inc
lock
add
hlt
pushf
pusha
lock
jecxz
push
push
out
arpl
xchg
scas
loope
xchg
mov
inc
pop
iret
loopne
stc
mov
pop
cmc
mov
xchg
rcr
and
enter
call
pop
movs
sbb
add
pop
fsubr
cmp
repnz
mov
loop
fadd
or
sub
and
cs
call
(bad)
dec
scas
fild
int
adc
int3
retf
pusha
pushf
push
das
das
push
add
frstor
inc
(bad)
(bad)
(bad)
call
jnp
out
cwde
popf
es
xchg
xor
call
icebp
pop
lods
push
js
jbe
(bad)
out
clc
jmp
aad
nop
sbb
ret
jbe
push
mov
pop
ja
repnz
icebp
cmp
sbb
movs
and
mov
sub
adc
sbb
movs
les
movs
push
(bad)
shl
ja
into
sbb
push
push
xchg
out
or
push
pop
xor
jmp
movs
call
jae
aad
dec
cmp
(bad)
(bad)
(bad)
jmp
idiv
push
rep
(bad)
lock
dec
or
les
test
test
xchg
lock
(bad)
jmp
mov
pop
pop
add
cmp
enter
jno
dec
inc
xchg
push
jno
push
mov
inc
add
pop
icebp
(bad)
jl
inc
cmps
pop
call
outs
cli
(bad)
(bad)
(bad)
(bad)
fistp
test
cmp
jle
stos
push
push
sub
fcomp
mov
sub
cmp
test
(bad)
fxtract
icebp
and
add
or
cmp
lahf
mov
mov
movs
jmp
loope
xchg
retf
(bad)
(bad)
fistp
xchg
inc
test
add
pop
pusha
and
mov
outs
or
hlt
retf
add
cli
enter
cmp
adc
(bad)
xchg
push
test
jmp
(bad)
call
loope
test
cmps
outs
bound
dec
loop
jno
cmps
mov
movs
inc
jae
fs
jmp
cli
(bad)
mov
js
pop
xchg
std
jb
fcomp
or
cmp
xchg
xor
(bad)
(bad)
stc
cmp
hlt
inc
jg
jg
mov
imul
(bad)
fdivr
(bad)
call
xchg
mov
sbb
cmp
daa
pop
test
mov
(bad)
sti
pop
mov
mov
xchg
hlt
loop
ficom
jno
fdiv
push
adc
dec
out
enter
xchg
vmovaps
(bad)
call
(bad)
cmps
mov
jecxz
stos
cmp
ret
push
sbb
mov
rcr
sar
in
mov
cmps
inc
std
in
cmp
xabort
sar
xor
arpl
jmp
jge
mov
xchg
mov
stos
or
ror
lahf
(bad)
rol
out
in
mov
std
jbe
mov
ds
arpl
pop
inc
fcomp
sub
in
pushf
icebp
stc
add
div
gs
scas
or
scas
icebp
mov
cwde
(bad)
fist
ret
dec
fst
enter
sti
out
sbb
mov
sbb
(bad)
(bad)
jmp
mov
cmp
(bad)
sbb
xlat
cdq
(bad)
(bad)
push
xchg
mov
in
pop
lock
mov
mov
aas
jmp
cmp
fcomip
(bad)
cmp
idiv
pop
jno
sar
lods
pop
repz
(bad)
lods
call
jo
mov
dec
stos
pop
jmp
stc
adc
cmps
(bad)
push
das
cdq
and
lahf
fldenv
dec
cli
jge
and
jns
(bad)
call
(bad)
cmp
push
imul
stc
test
int
mov
(bad)
(bad)
(bad)
fisttp
push
mov
lock
ficom
(bad)
(bad)
(bad)
jmp
mov
sbb
(bad)
(bad)
fldenv
repz
sub
fild
les
out
fwait
jno
jbe
cmc
(bad)
(bad)
push
aam
stc
dec
mov
add
or
sbb
(bad)
cmps
cmp
clc
ja
sar
jmp
ins
retf
push
repz
ins
ds
cmp
cmp
mov
stos
dec
mov
add
aaa
sub
sub
int3
cmps
ins
add
jbe
stos
inc
loop
mov
mov
jge
fsub
ret
push
les
movs
inc
fimul
jno
or
inc
push
cmp
lods
fwait
mov
cli
(bad)
(bad)
in
lds
jne
je
cwde
sub
stos
xchg
mov
(bad)
inc
adc
loopne
lahf
out
xor
sti
dec
lds
aam
mov
arpl
cld
(bad)
push
loope
je
movs
jae
fadd
lock
xor
sub
or
xchg
gs
call
ds
call
(bad)
(bad)
jg
dec
push
dec
ins
ja
bound
das
(bad)
pushf
(bad)
xor
jmp
in
leave
cmp
dec
sbb
(bad)
jmp
inc
stos
fst
and
outs
ins
or
pop
sbb
or
(bad)
xlat
mov
ret
mov
dec
dec
(bad)
(bad)
(bad)
call
and
push
dec
mov
jno
push
js
dec
xchg
outs
jno
lahf
in
jg
dec
lock
pop
cld
dec
lahf
inc
mov
mov
inc
outs
mul
call
and
pop
or
add
push
mov
rol
lods
nop
lea
cmp
(bad)
mov
xchg
jg
call
jl
dec
xchg
je
sbb
out
mov
sub
std
and
mov
jecxz
out
stos
jecxz
and
outs
mov
(bad)
mov
scas
mov
std
jne
mov
cmp
mov
xor
shr
mov
sti
push
inc
mov
rcl
mov
or
push
sbb
cmp
addr16
iret
and
mov
dec
mov
xchg
and
or
add
(bad)
(bad)
jg
inc
and
(bad)
repnz
test
jmp
xchg
sar
loopne
or
mov
(bad)
push
icebp
test
cmp
sti
jg
icebp
in
sahf
pushf
retf
loop
imul
stos
popf
and
addr16
cmp
sub
push
cmp
adc
je
inc
xor
test
icebp
mov
ret
dec
mov
add
mov
daa
repnz
dec
adc
push
lock
cmc
repz
(bad)
dec
pop
cli
mov
cmp
sahf
xchg
(bad)
(bad)
(bad)
fcmovnb
mov
fst
jecxz
fcomp
dec
mov
dec
loopne
mov
(bad)
pusha
jmp
rcl
mov
xor
add
shl
outs
add
pop
push
iret
imul
hlt
nop
lock
call
scas
pop
lock
mov
mov
jecxz
push
rcr
(bad)
mov
pop
mov
(bad)
das
es
std
stos
movs
lahf
fld
mov
sub
call
or
xor
xchg
popf
or
xchg
pop
test
(bad)
jg
lock
lods
test
mov
inc
sbb
fcomp
sbb
pop
push
(bad)
(bad)
(bad)
inc
mov
fmulp
ins
loope
nop
fcom
add
and
mov
shl
xchg
jmp
scas
fstp
ja
jmp
mov
retf
jmp
inc
pushf
cmp
mov
pop
pop
mov
xchg
fnstsw
add
ja
cwde
mov
mov
jae
push
add
jp
adc
add
sbb
out
cld
(bad)
dec
lods
fdiv
sub
mov
inc
iret
push
leavew
mov
push
pop
and
xor
inc
add
cmc
(bad)
(bad)
inc
jecxz
mov
ins
mov
cmp
cmp
fcomi
retf
cmp
js
lea
sbb
fbld
jl
mov
push
xor
(bad)
(bad)
(bad)
mov
or
out
cmp
jb
pop
xor
sub
comiss
sti
sub
(bad)
(bad)
call
outs
xor
push
mov
rcl
xchg
test
cld
pop
push
jge
fwait
add
mov
add
pop
cmc
cdq
je
xchg
inc
lock
jb
mov
adc
gs
cmc
(bad)
jmp
repnz
xchg
add
mov
xchg
add
sbb
imul
add
jae
add
lds
xor
or
cld
jmp
(bad)
jecxz
jmp
hlt
sub
(bad)
in
ret
test
jmp
pop
mov
(bad)
push
lea
pop
lock
push
xchg
jmp
jb
or
sub
push
mov
popf
(bad)
sub
repnz
(bad)
(bad)
cmp
add
push
or
adc
ds
cmp
adc
mov
movs
call
mov
out
push
pop
push
pop
xor
leave
mov
call
mov
ret
mov
xor
mov
fisttp
daa
mov
push
daa
mov
(bad)
push
pop
daa
ja
lock
(bad)
mov
dec
jmp
in
retf
(bad)
leave
call
mov
sti
inc
mov
outs
retf
es
(bad)
mov
fstp
xchg
arpl
fisubr
cs
call
mov
fist
jge
sbb
dec
int
sti
mov
xor
inc
pop
xchg
ins
(bad)
mov
mov
fstp
mov
mov
push
lock
mov
scas
not
mov
js
(bad)
(bad)
jge
fnstcw
hlt
stos
push
mov
or
scas
jmp
cs
mov
pop
mov
push
xchg
icebp
stc
sub
stc
cmps
in
popa
test
and
mov
xchg
fdiv
fild
fcomip
push
stos
sub
div
sub
loopne
xchg
xor
jecxz
mov
ret
repz
mov
pop
or
or
or
jmp
(bad)
adc
loopne
jb
dec
cmp
(bad)
(bad)
push
or
pop
gs
xchg
in
dec
jmp
sub
jne
mov
mov
add
and
(bad)
iret
movs
icebp
push
sbb
in
cmp
cmps
xor
(bad)
(bad)
jg
sub
add
pop
and
icebp
outs
pusha
jnp
popa
mov
add
ror
pop
jp
fs
dec
xor
jle
jg
mov
cmc
xchg
stc
pop
imul
cli
imul
mov
je
jmp
jns
(bad)
sahf
mov
adc
xchg
push
adc
jbe
add
loop
dec
jecxz
and
(bad)
mov
scas
test
test
pop
mov
outs
dec
xchg
int
gs
in
test
sub
(bad)
fild
lods
jge
push
add
or
cmc
test
cmp
pop
pop
ud0
jbe
add
jge
cdq
or
fwait
mov
ja
cmp
jmp
pop
cli
out
je
fcomp
lock
jbe
mov
arpl
push
data16
pushf
(bad)
(bad)
sub
(bad)
(bad)
call
into
xchg
popf
mov
sbb
je
in
push
mov
add
jmp
test
xchg
adc
sbb
in
fimul
sub
hlt
pop
push
iret
sbb
adc
add
add
cwde
test
inc
add
adc
adc
(bad)
scas
loop
(bad)
jmp
fisubr
dec
fs
daa
test
add
in
or
mov
ss
push
retf
mov
scas
loope
or
std
pop
inc
jnp
icebp
mov
hlt
(bad)
mov
add
jno
popf
in
out
push
dec
cmp
pushf
lods
xchg
push
mov
(bad)
mov
push
out
ss
out
loopne
jg
repz
stc
adc
jl
mov
inc
push
xchg
(bad)
retf
cli
int
(bad)
push
cld
xchg
fld
cmp
clc
xor
mov
inc
mov
cmp
cwde
jl
mov
cs
gs
cmp
sar
inc
out
(bad)
mov
pop
dec
jge
ret
or
xchg
call
mov
std
jmp
fwait
gs
cmc
call
sub
out
rol
adc
sub
out
hlt
cwde
jns
(bad)
inc
pop
rol
mov
cmp
iret
cmp
sahf
lahf
jnp
push
push
pop
icebp
dec
fcmovu
sbb
mov
aas
out
push
xlat
mov
pop
xlat
mov
or
push
iret
add
cdq
xchg
or
clc
sbb
icebp
cmp
cmp
std
pop
fisttp
test
mov
xchg
sub
pop
(bad)
jmp
(bad)
(bad)
cmp
adc
cmp
mov
mov
adc
pop
inc
(bad)
jb
rcr
push
rol
(bad)
(bad)
call
xchg
fnstsw
xor
repnz
das
inc
push
sbb
cmp
ins
sbb
xor
(bad)
(bad)
mov
int3
jne
shr
mov
enter
ret
cs
cs
inc
(bad)
(bad)
call
les
inc
mov
push
mov
outs
sbb
push
jne
std
cmp
push
xchg
xchg
test
ja
or
sub
in
in
jne
loopne
ja
push
inc
outs
add
pusha
aam
gs
and
out
push
(bad)
(bad)
inc
add
loope
jns
or
and
sahf
mov
(bad)
call
outs
cli
sub
mov
cmps
sub
sbb
inc
hlt
jecxz
jo
pop
jae
xlat
loope
mov
or
inc
das
xlat
sti
add
std
jg
pop
mov
mov
sti
stos
push
ret
out
pop
int
repz
push
jecxz
clc
cmp
jge
jae
cld
jbe
test
lds
mov
mov
mov
std
or
fst
outs
fstp
push
int
arpl
cmp
idiv
mov
or
inc
in
jg
sbb
sub
(bad)
(bad)
jmp
pop
or
dec
pop
ins
in
in
xchg
pop
and
fld
out
loop
(bad)
(bad)
dec
inc
shr
adc
mov
ror
(bad)
jge
(bad)
mov
ret
clc
inc
pop
rol
mov
xchg
or
mov
jle
scas
imul
add
or
iret
or
(bad)
call
or
mov
int3
aad
pop
push
jns
xchg
es
dec
push
or
mov
out
clc
sbb
enter
sub
ror
mov
inc
test
sbb
loopne
out
movs
sar
wbinvd
fs
loop
call
call
push
aam
loopne
adc
lock
push
clc
sbb
fwait
das
and
xchg
cs
pop
out
jbe
mov
cmp
jle
std
les
inc
inc
push
lahf
daa
pop
test
(bad)
(bad)
dec
sar
popf
sahf
pop
mov
in
push
into
sbb
rol
shl
enter
push
or
cwde
call
cmp
sbb
(bad)
call
jle
repnz
movs
fs
outs
addr16
imul
and
enter
and
mov
aaa
fwait
aas
shr
jecxz
and
data16
mov
lds
cmp
dec
xlat
pop
push
push
push
and
jmp
test
les
fnclex
imul
push
adc
adc
fidiv
lock
push
pop
xchg
(bad)
(bad)
mov
out
xor
inc
dec
push
mov
xchg
mov
inc
leave
jbe
cmp
shr
std
retf
inc
fsubr
out
xchg
dec
call
dec
inc
ror
or
mov
mov
xchg
(bad)
jle
inc
push
pop
pop
cli
(bad)
(bad)
(bad)
dec
xor
sub
and
ds
imul
xor
jne
jge
jle
sti
das
cld
(bad)
jmp
pop
sub
inc
pop
xchg
lods
(bad)
nop
int3
push
pop
outs
rcr
dec
pop
cld
fwait
and
jge
(bad)
les
inc
xchg
mov
inc
cld
(bad)
push
add
jo
push
(bad)
xchg
sti
mov
mov
and
inc
mov
jmp
xor
in
cmp
mov
dec
enter
inc
cli
sar
xor
inc
mov
movs
fld
outs
adc
sub
clc
(bad)
push
rol
xor
loopne
add
jnp
(bad)
ss
jmp
push
stos
in
cmp
outs
xor
je
adc
xor
pop
in
lds
iret
sub
adc
add
mov
ror
inc
(bad)
addr16
fsub
xchg
mov
mov
inc
shr
inc
mov
(bad)
call
rol
cmp
add
sub
inc
mov
(bad)
dec
fs
pop
das
out
sbb
out
sbb
cmp
cld
sub
cmp
cmp
pop
add
mov
push
inc
push
scas
add
in
ja
clc
cld
imul
ficomp
pop
push
ins
jmp
clc
mov
(bad)
cmp
cli
sub
out
stc
push
nop
(bad)
sbb
pop
popa
aas
out
jae
xor
pop
hlt
ins
dec
push
mov
add
and
cmps
jl
(bad)
call
pop
xor
pushf
xchg
lea
std
add
int
sub
cli
jg
and
sub
or
das
sub
out
mov
js
jo
xchg
(bad)
cmp
pop
jg
retf
(bad)
or
inc
enter
mov
jmp
xor
jge
repz
push
pop
daa
push
fiadd
shl
pop
dec
fisubr
in
leave
fsub
sbb
dec
cmp
leave
sub
mov
push
or
retf
xor
scas
mov
lods
repz
movs
gs
mov
adc
cli
push
mov
out
ror
mov
jae
aad
adc
jo
jae
pop
dec
sar
and
or
call
test
(bad)
(bad)
fucomi
jbe
sti
add
sub
cli
mov
shl
lahf
mov
lock
inc
inc
icebp
cwde
xchg
push
movs
cmps
sbb
lahf
lea
retf
(bad)
(bad)
(bad)
(bad)
call
pop
sti
adc
lods
mov
pop
int3
cmc
pop
pushf
sub
outs
scas
mov
xchg
mov
mov
(bad)
jmp
adc
sbb
mov
jo
xor
sub
loope
(bad)
imul
cdq
xor
adc
sbb
enter
aad
xor
(bad)
repz
push
loop
push
fstp
retf
out
sbb
sahf
mov
pop
push
sar
mov
stos
jmp
push
out
aas
sub
jmp
adc
mov
xlat
inc
sub
je
test
push
bound
cmp
jecxz
xchg
add
xchg
and
(bad)
stos
lock
mov
mov
int3
cmp
cli
xor
loopne
pop
and
push
or
ret
mov
ins
dec
loopne
sbb
lahf
dec
push
in
das
jmp
neg
xor
and
clc
sub
in
push
out
jnp
push
test
inc
push
repz
jmp
test
pop
pop
xor
(bad)
xchg
mov
mov
sub
stos
js
daa
pop
out
cmp
pusha
in
mov
inc
mov
push
push
sar
popf
inc
push
cmp
xor
fcmovne
ins
js
lock
or
push
adc
jle
xchg
rcl
and
sub
fld
repz
push
shl
dec
jecxz
mov
mov
sbb
lock
xor
jmp
cmp
aaa
mov
push
inc
idiv
sub
(bad)
(bad)
jmp
sub
iret
xchg
sbb
mov
frstor
dec
idiv
std
(bad)
inc
adc
pop
bnd
call
mov
xor
ja
sbb
adc
cld
(bad)
push
push
cmp
add
(bad)
pop
xchg
in
neg
mov
xor
inc
lahf
repnz
xchg
(bad)
add
ficom
imul
jge
sub
leave
stos
sbb
pop
retf
mov
fsub
je
mov
(bad)
jo
(bad)
xchg
push
aas
pop
std
(bad)
(bad)
(bad)
aas
push
jge
nop
add
dec
scas
shl
and
ror
std
sub
call
jge
fs
fisub
pop
xchg
dec
dec
inc
test
mov
fcom
call
jl
aam
int3
jecxz
cmps
imul
mov
(bad)
dec
in
out
sub
pop
mov
std
stos
sar
(bad)
call
imul
xchg
sbb
js
ror
aam
sub
outs
imul
aas
dec
fwait
data16
ret
shl
(bad)
(bad)
dec
jbe
sbb
cmp
jo
loope
mov
ficomp
jmp
loope
ins
test
ret
sbb
call
std
pop
test
xchg
xchg
hlt
pop
xor
mul
movs
sub
sbb
or
add
push
xchg
cmp
push
add
xchg
out
xchg
out
inc
loop
push
inc
dec
adc
mov
mov
sar
(bad)
jmp
test
stc
pusha
(bad)
aam
add
clc
(bad)
(bad)
mov
push
clc
dec
out
daa
inc
mov
cmp
fwait
leave
in
js
aam
cmp
das
cmps
mov
mov
or
fist
(bad)
(bad)
mov
xor
sar
sub
pop
fs
xor
sub
(bad)
call
jecxz
lock
mov
xchg
jb
pop
mov
std
std
jmp
rcr
aas
or
js
or
and
inc
retf
add
push
sbb
jle
imul
xlat
in
loope
loop
(bad)
(bad)
(bad)
call
cmp
cmc
(bad)
adc
leave
adc
push
lahf
cmp
push
add
hlt
fdivr
cmp
sar
dec
add
dec
fsub
adc
push
int
xchg
shl
frstor
jnp
inc
mov
sar
inc
test
in
out
repnz
ja
inc
call
jbe
xchg
retf
fldenv
jle
mov
xchg
sbb
ret
inc
and
sbb
sbb
call
std
mov
cmp
bts
test
xor
and
(bad)
push
shl
loop
mov
xchg
cmc
xchg
adc
xor
sbb
push
shl
pusha
stos
(bad)
(bad)
push
(bad)
mov
int
js
lea
xlat
stos
arpl
mov
pop
(bad)
(bad)
(bad)
call
adc
addr16
or
dec
xlat
sub
(bad)
js
jecxz
add
sahf
mov
daa
push
cmc
or
mov
mov
mov
fidivr
cli
mov
(bad)
dec
mov
sbb
pop
imul
pop
(bad)
(bad)
mov
dec
dec
hlt
xchg
adc
mov
xchg
ss
cmp
cmps
jmp
cli
jnp
sbb
jnp
xchg
dec
loop
nop
pusha
mov
fld
ja
aad
fild
int3
enter
and
push
sbb
cmps
jbe
xchg
xchg
(bad)
inc
and
jg
cmps
add
push
loope
in
out
ss
pop
push
inc
inc
std
and
(bad)
(bad)
dec
pop
jmp
lock
aas
dec
or
int
dec
add
adc
ins
repz
cs
adc
jl
lock
mul
mov
(bad)
jg
sbb
sub
sbb
adc
mov
ja
(bad)
out
sar
sbb
xchg
xchg
sbb
push
pop
retf
push
out
cwde
outs
repnz
sub
mov
jecxz
mov
mov
fcom
sahf
and
sti
pop
adc
popf
or
(bad)
cmp
test
arpl
push
or
(bad)
call
and
push
mov
(bad)
lock
idiv
call
(bad)
cs
stos
push
mov
and
pushf
cmp
repnz
cmp
aaa
sar
cwde
out
jg
push
sar
and
mov
and
out
xchg
sub
or
or
jmp
ror
cmp
enter
pop
sub
push
imul
fisttp
(bad)
jle
js
pop
lods
jmp
cmp
dec
jmp
inc
popf
jp
call
cmp
xchg
sbb
add
arpl
idiv
add
mov
cmp
mov
cmp
jge
or
and
ins
add
fs
add
cmp
movs
mov
ret
(bad)
push
lods
and
sub
fistp
ins
fmul
mov
inc
loope
(bad)
(bad)
(bad)
jnp
jg
fs
xchg
mov
(bad)
jp
dec
sub
jle
fs
gs
jl
inc
call
dec
pusha
mov
mov
mov
out
pop
add
xor
jl
(bad)
(bad)
mov
xchg
fbstp
ins
fisttp
mov
xchg
call
(bad)
ins
xor
(bad)
inc
stos
pop
push
or
pop
dec
push
xchg
in
jg
out
and
jne
cmps
xchg
(bad)
(bad)
(bad)
(bad)
std
lock
jbe
cmps
add
or
in
xchg
xor
inc
sub
daa
es
mov
inc
dec
adc
push
sub
cpuid
inc
sti
fs
mov
mov
(bad)
call
fisub
sbb
sti
sbb
dec
inc
cmp
xor
popa
pop
std
ins
rol
movs
push
sar
(bad)
(bad)
mov
fldenv
adc
(bad)
fist
repz
cdq
xor
push
mov
mov
cld
(bad)
movs
xchg
push
xchg
je
jmp
(bad)
aaa
cld
jmp
mov
adc
adc
and
js
outs
pop
sbb
shr
mov
mov
mov
mov
add
pop
gs
call
jo
jns
in
cmpxchg
xchg
or
loope
jg
(bad)
fincstp
mov
loope
add
dec
mov
cli
adc
mov
popf
call
(bad)
call
dec
loopne
sub
jle
(bad)
dec
mov
add
imul
push
loop
lods
call
inc
jbe
mov
out
movs
adc
in
cmp
push
dec
shr
jge
adc
xchg
mov
inc
test
(bad)
push
test
test
mov
sub
out
push
iret
sbb
push
inc
cmp
loopne
push
mov
pop
or
(bad)
inc
mov
jmp
xor
mov
call
xchg
push
jns
stc
rcr
not
xchg
scas
fsub
mov
push
xchg
aad
(bad)
(bad)
(bad)
mov
rol
cmp
jecxz
dec
or
test
xlat
ret
call
(bad)
in
and
ror
dec
fcom
mov
xor
(bad)
(bad)
jg
xchg
mov
mov
rol
mov
push
je
add
cmp
jns
jmp
mov
je
aas
inc
jb
mov
cli
mov
xor
test
in
arpl
pop
fwait
(bad)
(bad)
call
dec
stos
out
nop
xchg
push
out
test
push
das
or
add
(bad)
jmp
fisttp
push
sar
(bad)
scas
movzx
(bad)
dec
mov
test
call
hlt
add
jbe
ins
mov
push
movs
add
jo
xor
hlt
dec
mov
retf
adc
fld
pop
sub
(bad)
outs
fwait
stos
sub
jo
std
call
mov
and
push
sub
call
push
mov
cmp
inc
or
aad
dec
push
popa
bound
dec
inc
imul
lods
je
xchg
mov
hlt
inc
adc
sbb
dec
in
in
inc
jbe
(bad)
(bad)
(bad)
mov
les
adc
icebp
mov
ins
add
fadd
inc
add
add
adc
xchg
pop
imul
add
sub
adc
imul
leave
xchg
stos
pop
cdq
push
sub
xchg
push
push
clc
push
jle
and
mov
xchg
mov
pop
shl
jne
inc
mov
mov
stc
dec
(bad)
(bad)
call
lahf
gs
movs
mov
and
xchg
and
pop
xchg
cli
jle
mov
nop
test
fild
imul
clc
mov
push
sbb
sar
inc
push
pop
sbb
mov
(bad)
(bad)
inc
popf
xchg
ret
scas
mov
ret
test
aad
sbb
xchg
imul
pop
fdiv
jl
in
out
(bad)
(bad)
mov
mov
(bad)
jae
dec
mov
bound
dec
sahf
mov
or
(bad)
(bad)
(bad)
fidiv
(bad)
repz
movs
int3
sbb
jp
into
mov
fmul
mov
out
mov
cmps
icebp
jmp
(bad)
(bad)
(bad)
rcl
das
iret
xchg
mov
(bad)
call
arpl
add
sbb
jnp
mov
xlat
cli
dec
into
nop
jle
add
out
cmp
(bad)
jmp
cmp
sahf
cmp
jno
sti
les
add
mov
push
xchg
dec
adc
mov
jmp
inc
jnp
xchg
or
dec
das
sub
jecxz
add
and
dec
xor
mov
outs
mov
add
call
mov
neg
sub
adc
cmps
ss
xchg
cmp
xchg
arpl
fidiv
pop
inc
adc
lea
cmp
mov
inc
xlat
loopne
sbb
lods
push
jp
mov
popf
mov
mov
aam
xchg
pop
add
mov
mov
cmp
add
add
scas
mov
aad
mov
pop
loopne
push
test
arpl
pop
sub
push
xor
and
mov
data16
add
pusha
inc
repz
(bad)
(bad)
(bad)
(bad)
mov
pop
sbb
mov
and
nop
jg
or
lock
adc
(bad)
(bad)
(bad)
(bad)
call
inc
xchg
scas
pop
jno
aad
mov
aad
addr16
std
mov
mov
xchg
mov
(bad)
fnsave
pushf
pop
leave
outs
inc
(bad)
fs
and
xchg
clc
mov
scas
sbb
dec
sahf
jno
das
push
inc
push
loop
dec
cmp
cmp
push
movs
dec
stos
mov
and
imul
(bad)
mov
dec
ret
mov
gs
adc
imul
enter
shl
sbb
or
rol
les
(bad)
aad
push
or
jmp
mov
mov
mov
mov
(bad)
in
mov
cmp
xchg
push
dec
es
jp
test
loope
and
cmp
mov
jmp
mov
cmc
call
mov
xor
ret
(bad)
(bad)
(bad)
inc
pop
in
or
push
(bad)
sub
sbb
outs
jnp
pop
call
and
and
(bad)
(bad)
(bad)
mov
xor
mov
cmp
mov
in
nop
push
adc
loop
cmp
(bad)
call
std
imul
lea
and
dec
loop
aas
js
mov
lea
in
push
pop
or
cld
push
mov
sub
in
(bad)
call
test
add
les
xlat
jl
pushf
and
(bad)
call
sub
pop
push
cmp
jge
or
add
dec
dec
pop
clc
jmp
push
adc
es
mov
(bad)
(bad)
(bad)
push
call
mov
jecxz
jbe
es
push
push
xor
xchg
fist
sbb
cmp
(bad)
(bad)
(bad)
cmp
xchg
mov
xor
add
inc
outs
loopne
or
fmul
daa
out
mov
imul
sar
add
add
js
repnz
cmp
push
cmp
push
jbe
xor
mov
(bad)
(bad)
(bad)
call
jns
sub
xor
cmp
das
ins
cmp
pop
xor
jmp
(bad)
call
in
cmp
cmp
scas
jge
mov
pop
cmp
inc
in
in
pop
pop
xor
or
scas
xchg
jmp
pcmpeqb
hlt
pushf
pop
(bad)
cmp
hlt
mov
icebp
aaa
ret
in
push
pop
lahf
movs
cmp
(bad)
dec
fld
cli
nop
aaa
out
pop
enter
jmp
pop
imul
jmp
dec
inc
fild
ss
or
add
mov
and
jmp
ins
out
inc
retf
psrlw
mov
jmp
jmp
and
out
and
loopne
ins
fsubr
sub
shl
std
bound
inc
cmps
(bad)
(bad)
mov
ins
pop
ja
cmp
inc
(bad)
(bad)
mov
std
cs
imul
in
xchg
sar
lock
call
jle
test
neg
jmp
cmc
sbb
mov
loopne
out
add
(bad)
in
ror
dec
jle
stos
(bad)
fbld
in
out
sbb
jp
pop
shl
or
lods
cmp
or
cmc
jno
xchg
fwait
mov
cmp
dec
jg
mov
xchg
xor
mov
aad
jmp
sbb
ja
or
imul
clc
cli
(bad)
(bad)
(bad)
jmp
sti
xor
psubusw
sub
std
dec
enter
shl
jp
ficom
jae
(bad)
(bad)
mov
out
scas
inc
neg
fwait
inc
not
and
inc
sbb
xlat
in
(bad)
(bad)
(bad)
(bad)
ds
inc
mov
push
sub
pop
mov
or
push
dec
push
xor
movs
cmps
cmp
inc
fcmovnbe
test
test
(bad)
(bad)
(bad)
(bad)
push
in
or
ds
sti
and
jb
retf
push
fidiv
add
inc
(bad)
inc
(bad)
loopne
mov
mov
neg
pop
push
std
sbb
mov
xchg
(bad)
jno
sti
into
mov
jle
adc
add
xchg
gs
jge
adc
repz
dec
xchg
rol
retf
jl
scas
mov
aad
sub
jmp
clc
and
push
cmp
pop
push
jae
popf
(bad)
(bad)
(bad)
inc
daa
sbb
pop
pop
mov
mov
xchg
pop
loope
push
enter
std
std
(bad)
(bad)
inc
shl
cmp
(bad)
fsubr
dec
mov
dec
test
push
cmp
add
jg
add
fidivr
loope
jmp
or
pop
lock
sbb
retf
fwait
cmps
(bad)
xlat
inc
push
fmul
int3
in
clc
je
arpl
retf
dec
push
inc
into
mov
(bad)
(bad)
(bad)
(bad)
sti
out
mov
scas
xor
add
sub
adc
sahf
rol
mov
out
aad
(bad)
(bad)
mov
push
outs
repz
mov
imul
push
test
mov
push
std
dec
rcl
cmp
push
out
cmp
popf
popf
pop
push
mov
and
(bad)
jmp
mov
mov
mov
movs
and
push
daa
mov
addr16
pop
repnz
into
ret
outs
pop
lahf
icebp
(bad)
xchg
mov
mov
and
push
lods
mov
cmp
test
mov
cdq
inc
(bad)
(bad)
jg
fcmovu
(bad)
shl
mov
adc
ja
push
dec
fsub
pop
addr16
inc
jb
loopne
jle
popa
je
inc
inc
jmp
sbb
pop
sub
(bad)
(bad)
aaa
xor
arpl
pusha
sub
test
arpl
call
push
fcom
xor
adc
xchg
test
outs
xchg
outs
and
xchg
mov
lds
inc
dec
or
xchg
or
mov
cmp
mov
adc
(bad)
dec
push
dec
adc
cdq
das
mov
retf
enter
push
imul
sbb
pop
add
mov
sub
std
xchg
(bad)
(bad)
jmp
(bad)
sub
das
mov
mov
jmp
sti
ret
mov
mov
cwde
(bad)
(bad)
dec
cwde
retf
loope
pcmpgtb
xchg
xor
lock
jb
cmc
inc
xor
(bad)
mov
mov
lea
cmps
movs
scas
ret
cmps
pusha
xor
(bad)
mov
(bad)
jae
(bad)
adc
xchg
enter
cmp
imul
(bad)
dec
daa
pop
test
cmp
dec
or
sbb
push
(bad)
adc
pop
mov
mov
cli
(bad)
(bad)
(bad)
(bad)
cmp
int3
mov
lods
rcr
pop
xchg
iret
nop
test
sahf
pop
popa
clc
test
stos
mov
std
jge
add
cld
imul
mov
out
in
jmp
or
(bad)
out
or
bound
sub
jmp
inc
movs
nop
dec
(bad)
jmp
cmc
test
jae
jo
or
jl
or
enter
mov
(bad)
(bad)
call
add
inc
inc
not
mov
sub
dec
jg
or
mov
mov
(bad)
call
xor
test
inc
icebp
rcr
cdq
cld
xchg
sbb
rol
outs
(bad)
call
fcomp
fwait
adc
sub
out
inc
sub
fbld
shl
pop
ret
xchg
(bad)
call
inc
xlat
in
adc
jl
test
call
fisttp
es
int
pop
cmp
pop
fcmovb
xchg
mov
mov
pop
fstp
jb
xor
jb
mov
mov
stos
adc
push
in
and
inc
adc
pop
add
jg
or
scas
and
mov
(bad)
(bad)
push
xchg
in
push
or
jnp
sbb
das
mov
add
adc
sub
das
adc
and
in
vmovlps
inc
pop
mov
(bad)
in
mov
mov
in
shl
rcr
adc
mov
jg
(bad)
push
mov
jmp
jge
jno
sbb
mov
push
je
imul
xchg
xor
ret
mov
and
hlt
xchg
(bad)
fcomip
jmp
mov
add
mov
and
and
add
push
arpl
mov
xor
popf
sub
aas
cld
xchg
(bad)
push
xlat
repz
loope
test
daa
bound
sbb
enter
cmp
push
jbe
adc
add
(bad)
(bad)
(bad)
mov
or
xor
std
push
cmps
mov
jle
fsub
bound
or
jmp
dec
sub
je
shl
xchg
cmp
enter
and
repz
cmp
jge
sub
and
jmp
retf
cli
(bad)
or
(bad)
inc
es
cmps
xchg
loopne
sub
popa
aad
fimul
ins
ins
sbb
push
loop
xchg
fs
mov
cmp
sti
inc
cmps
ret
rcl
fsubrp
nop
fdivrp
(bad)
(bad)
jmp
mov
sub
pop
(bad)
and
inc
inc
cmp
fsub
movs
hlt
jmp
ins
add
mov
shl
mov
xchg
test
shl
xchg
test
jmp
fcmovbe
ret
pop
aam
movs
cmp
(bad)
(bad)
(bad)
mov
popa
cmp
push
mov
jl
pop
xchg
std
dec
or
mov
jle
in
ja
(bad)
(bad)
dec
mov
mov
or
aam
push
in
retf
rol
jbe
std
stos
gs
movs
(bad)
sbb
(bad)
(bad)
call
aam
test
aas
in
nop
inc
(bad)
or
repz
gs
das
cli
inc
mov
cmp
retf
pop
inc
dec
shl
and
pop
lods
mov
(bad)
(bad)
push
(bad)
clc
test
retf
sub
fistp
mov
push
xchg
cmc
(bad)
jmp
es
rcr
jp
mov
push
cmp
out
inc
dec
std
inc
xchg
mov
test
sbb
rcr
add
les
pop
sti
xchg
(bad)
(bad)
fcomip
sub
mov
push
std
jmp
push
dec
(bad)
mov
daa
(bad)
inc
lahf
ficomp
rcr
push
(bad)
out
mov
mov
imul
cs
fnstenv
in
pop
retf
in
jmp
mov
lock
mov
push
xchg
mov
ins
xchg
(bad)
(bad)
jg
mul
aad
(bad)
mov
out
jo
lahf
std
pushf
sub
dec
push
sahf
addr16
sub
push
das
cs
fwait
dec
fistp
dec
ds
inc
(bad)
(bad)
(bad)
call
pop
inc
pusha
je
dec
mov
mov
jp
dec
pop
adc
mov
pop
sbb
ss
(bad)
(bad)
fcomip
fldenv
pusha
jg
jns
push
cdq
dec
inc
int3
inc
push
popa
dec
fisubr
jmp
test
(bad)
call
cmps
movs
mov
call
or
call
cmps
ss
fcomip
and
and
cmps
xor
mov
outs
adc
dec
cmp
add
sbb
or
outs
ins
inc
int3
(bad)
cli
jbe
and
enter
sar
(bad)
mov
jge
xor
(bad)
mov
out
pop
scas
test
scas
push
es
(bad)
mov
inc
xor
sar
int3
loope
cdq
idiv
jno
jg
dec
inc
jo
call
outs
add
dec
xchg
add
pop
fwait
repnz
jb
jno
jo
(bad)
mov
(bad)
push
test
mov
push
jp
jge
repz
lods
pop
mov
shl
ins
jae
pop
push
jnp
mov
(bad)
sar
(bad)
(bad)
(bad)
fnsave
jmp
out
mov
add
jbe
in
push
dec
inc
rcl
mov
bound
mov
mov
push
xor
push
rcr
movs
and
std
fwait
mov
pop
add
jmp
pop
(bad)
popa
sub
dec
(bad)
(bad)
jg
inc
adc
mov
lahf
mov
je
aaa
test
aaa
inc
pop
push
dec
xchg
retf
sbb
repnz
dec
adc
test
adc
mov
xchg
enter
loope
or
mov
bound
outs
das
push
fcomip
mov
adc
xchg
mov
mov
mov
outs
add
add
pop
in
aad
cmc
adc
std
inc
fwait
clc
(bad)
(bad)
mov
mov
fstp
xchg
and
mov
(bad)
(bad)
dec
dec
(bad)
mov
pop
aaa
enter
dec
js
retf
or
imul
mov
mul
cli
jmp
xlat
xchg
xor
mov
(bad)
mov
inc
xchg
adc
fidiv
out
sub
sub
cmp
paddsb
ins
mov
loop
or
sahf
out
movs
mov
(bad)
mov
jb
jmp
(bad)
push
les
dec
mov
xor
cmp
sub
retw
adc
je
cmp
cwde
cmp
iret
jns
iret
cdq
or
lods
mov
xchg
(bad)
(bad)
(bad)
jg
popf
xchg
pop
mov
add
mov
pop
stos
jle
sub
adc
jle
jae
mov
(bad)
(bad)
(bad)
cmp
call
les
mov
stos
push
(bad)
(bad)
mov
jmp
xchg
xchg
rcr
outs
aad
xor
mov
scas
clc
inc
(bad)
jmp
cld
pop
sub
rcr
xchg
test
popa
gs
sbb
dec
ret
retf
aad
push
call
cmp
pop
xchg
push
xchg
or
rcr
inc
xchg
pop
(bad)
inc
xchg
pop
and
xchg
sbb
(bad)
stc
clc
push
clc
jmp
xchg
rcr
out
xchg
xor
clc
(bad)
std
(bad)
adc
scas
cmps
xor
repz
mov
cli
idiv
mov
pop
(bad)
fcomp
test
sub
jl
(bad)
in
dec
je
xchg
sub
imul
dec
mov
xor
cmp
mov
xor
sub
xor
pop
inc
mov
cmp
cs
jle
inc
das
pop
jnp
fst
(bad)
fiadd
retf
imul
popa
cli
daa
mov
inc
ins
pushf
ja
sahf
or
loope
cs
pop
push
mov
cld
out
pop
pushf
fistp
(bad)
(bad)
(bad)
(bad)
out
stos
jae
xchg
popf
fucomip
jge
sbb
xchg
pop
jg
(bad)
loopne
call
data16
das
cli
dec
mov
sub
mov
fwait
xchg
sub
rcl
fs
gs
mov
xchg
or
adc
bound
in
adc
(bad)
(bad)
jmp
push
dec
and
loopne
(bad)
(bad)
mov
repz
or
jo
sub
pop
popf
out
stos
(bad)
inc
sub
xlat
push
inc
fs
jmp
add
jmp
cmps
mov
cmp
(bad)
shl
fnstenv
jnp
mov
mov
je
or
lock
and
xchg
in
mov
hlt
cmp
adc
push
mov
xchg
pusha
lock
sbb
adc
mov
call
aad
(bad)
(bad)
push
sub
aad
inc
push
test
jmp
mov
idiv
pop
mov
mov
adc
mov
dec
aaa
mov
arpl
push
sbb
test
retf
jge
jnp
mov
sub
jle
mov
xor
pop
(bad)
(bad)
jmp
neg
mov
push
pop
in
sbb
dec
push
out
jmp
test
inc
push
add
call
pop
mov
rol
(bad)
(bad)
(bad)
(bad)
jmp
lock
shl
jmp
lods
lods
movs
outs
xor
(bad)
aam
fnstenv
cwde
(bad)
fmul
jg
add
movs
add
xchg
xor
popa
and
xor
das
lods
(bad)
or
adc
arpl
aad
jecxz
aaa
in
cld
jmp
adc
mov
cmp
cmc
or
movs
loop
shl
adc
(bad)
(bad)
inc
lds
pop
fadd
pop
mov
int
mov
cs
ret
dec
xlat
inc
adc
push
lock
lea
std
divps
mov
(bad)
xchg
scas
daa
repnz
sub
(bad)
jmp
call
sub
jb
mov
aad
cmp
dec
jg
xor
add
(bad)
jmp
into
retf
aam
push
sbb
or
pop
sbb
mov
and
mov
dec
mov
cs
push
das
mov
jecxz
repnz
pop
add
gs
repnz
mov
xchg
(bad)
(bad)
(bad)
dec
mov
xchg
sbb
sub
(bad)
sub
ror
je
mov
jmp
lods
sahf
in
lods
add
mov
add
jbe
loop
xchg
ret
out
shufps
xlat
pop
ror
inc
lods
mov
(bad)
(bad)
inc
call
in
icebp
das
fsubr
mov
xchg
retf
sub
pop
aas
rcl
adc
ins
xor
push
push
or
and
pop
cmp
(bad)
dec
js
in
and
jle
mov
iret
ja
pop
ins
in
sub
ja
(bad)
jg
(bad)
pop
daa
fisub
jecxz
xor
into
out
or
fbld
call
fild
(bad)
jg
adc
aas
daa
sbb
movs
pop
push
bnd
(bad)
(bad)
inc
mov
add
pop
loop
lea
adc
fadd
aas
loope
sar
cmp
adc
push
xchg
repnz
sbb
dec
sub
fcmovu
add
cmc
mov
jmp
mov
and
xor
mov
mov
pop
loopne
(bad)
dec
inc
(bad)
mov
into
shl
or
aad
repnz
daa
gs
xchg
mov
dec
mov
jmp
hlt
(bad)
(bad)
dec
mov
dec
idiv
mov
pushf
ret
sub
and
or
into
xchg
xor
sar
mov
mov
ins
out
adc
dec
or
(bad)
jo
mov
(bad)
call
cmp
ja
and
pop
mov
pop
cmp
jmp
cmp
adc
jmp
add
push
test
call
and
jno
(bad)
mov
in
xor
xchg
stos
adc
pop
xor
scas
fwait
(bad)
(bad)
(bad)
call
pop
mov
push
mov
iretw
pop
test
out
call
sub
(bad)
mov
push
stos
fimul
stos
cmp
fnstenv
hlt
sbb
mov
pop
cmp
test
test
dec
jnp
and
inc
jge
into
(bad)
(bad)
(bad)
push
bound
pop
in
xchg
js
jp
add
push
mov
and
lock
bound
jae
mov
cmp
aaa
(bad)
(bad)
(bad)
inc
int3
sbb
(bad)
mov
or
xor
retf
push
int
nop
cmps
mov
(bad)
jmp
adc
retf
push
push
pop
mov
push
popa
xchg
or
scas
inc
pop
adc
das
scas
mov
cdq
xchg
cmp
dec
dec
pop
loopne
sahf
push
iret
stos
push
hlt
pop
cmp
mov
jg
sbb
adc
and
cdq
cwde
pop
or
push
cli
adc
xchg
pop
stc
mov
or
xchg
out
mov
dec
adc
and
xchg
(bad)
aam
cmp
not
(bad)
loope
(bad)
(bad)
inc
jl
mov
cwde
add
sbb
movs
cmc
int
cld
fcomi
mov
rcl
rcr
int3
fcomip
push
adc
rol
cmp
outs
and
fs
(bad)
mov
arpl
adc
jno
(bad)
fdivr
scas
stos
repz
xchg
(bad)
(bad)
(bad)
(bad)
cmp
loopne
jl
cmp
jne
dec
out
int
and
stos
or
sub
xlat
sar
addr16
adc
fninit
push
xor
std
add
repnz
(bad)
mov
mov
xchg
std
push
cs
push
or
inc
pop
hlt
jg
ss
aad
xor
dec
shl
adc
loopne
mov
push
inc
fidivr
(bad)
jmp
dec
into
std
jmp
movs
out
out
mov
enter
xor
cwde
ror
cmp
add
retf
jp
fwait
add
jmp
js
(bad)
mov
(bad)
add
inc
or
jg
call
pcmpgtb
pop
add
lahf
rcr
lock
mov
dec
or
clc
enter
idiv
fmul
leave
adc
sbb
mov
or
aaa
push
ret
bound
pop
pop
cs
test
(bad)
(bad)
call
arpl
sbb
add
pushf
sbb
sbb
(bad)
fild
or
add
loope
(bad)
jl
pop
out
mov
pushf
inc
mov
test
mov
(bad)
jmp
push
cmc
hlt
gs
repnz
inc
out
int3
add
les
inc
(bad)
(bad)
mov
data16
push
mov
in
or
dec
test
xor
(bad)
push
push
xchg
dec
aad
ret
sub
or
dec
mov
das
adc
sahf
inc
add
(bad)
jne
ffree
fld
pop
inc
sar
dec
out
pop
and
sbb
ret
std
pop
xlat
mov
mov
mov
adc
push
sub
push
(bad)
icebp
(bad)
call
fist
mov
js
scas
aam
xor
call
(bad)
(bad)
jg
mov
pop
adc
pop
es
sti
fidivr
mov
pop
pop
lea
int3
jmp
ss
iret
popf
jnp
mov
jnp
mov
mov
pop
and
outs
inc
cli
out
loope
cld
jo
and
sar
jg
aas
std
loope
adc
(bad)
mov
stc
xchg
cld
jmp
xchg
adc
sbb
shl
push
cmp
loopne
jae
dec
mov
jp
mov
call
sbb
jg
jl
retf
scas
pop
retf
cmps
pop
scas
pop
in
xchg
icebp
xchg
jg
in
in
das
sar
pop
cmp
cs
sti
mov
mov
(bad)
scas
sbb
sbb
(bad)
sti
leave
jmp
xchg
std
int3
mov
into
push
cmp
pop
jae
call
mov
mov
(bad)
push
jl
gs
call
mov
mov
jecxz
dec
jne
sar
call
sub
push
jecxz
mov
sahf
mov
jecxz
cli
aas
sub
mov
jp
inc
stos
mov
stc
cmps
(bad)
fucomip
adc
inc
jecxz
and
(bad)
(bad)
dec
(bad)
clc
inc
(bad)
add
scas
out
sub
xchg
mov
daa
stos
mov
jmp
(bad)
(bad)
(bad)
(bad)
fmul
cmp
xor
push
cmps
mov
sub
fadd
mov
call
lock
call
lds
jne
imul
outs
ds
out
sub
pop
xor
dec
jmp
clc
cwde
jbe
sbb
cwde
add
cld
fwait
loop
movs
cmp
(bad)
inc
xchg
outs
jnp
adc
or
bound
fcmovbe
inc
mov
(bad)
std
loopne
out
and
je
mov
mov
mov
xor
xchg
pop
add
mov
mov
cmps
jmp
jo
jbe
xor
(bad)
dec
mov
dec
das
outs
cmp
inc
jmp
mov
aad
xor
cdq
mov
(bad)
sbb
ret
cs
pop
xchg
jnp
and
bound
mov
inc
loop
mov
into
in
int3
cmp
cmp
movs
cmps
and
(bad)
aam
jg
(bad)
jmp
div
das
jecxz
add
ficom
je
cmp
push
dec
leave
sub
rcr
hlt
pushf
mov
(bad)
cmc
popa
popf
pop
(bad)
(bad)
push
push
and
ss
movs
sbb
test
jnp
adc
rol
clc
inc
jl
jg
call
fsubr
cs
pop
int
ins
mov
adc
xchg
inc
ds
out
mov
jg
fxtract
test
in
(bad)
xor
int
mov
movs
push
sub
cmps
(bad)
sar
les
loop
jmp
es
rcr
movs
mov
cld
pop
dec
inc
in
dec
outs
cmps
and
and
(bad)
mov
fstp
pusha
ss
ret
mov
jbe
outs
retf
lods
enter
loopne
ins
aas
mov
(bad)
xchg
push
popf
js
movs
cmp
lods
mov
jno
fldl2e
mov
push
pop
sbb
push
ja
in
xchg
ss
cdq
inc
mov
repnz
sahf
ficomp
push
imul
cmp
(bad)
jmp
call
repnz
in
mov
addr16
scas
(bad)
call
es
mov
push
sub
cmps
aas
mov
addr16
lods
(bad)
(bad)
(bad)
jg
push
pusha
ret
aaa
fcmovnbe
xchg
test
xor
(bad)
push
jb
jbe
push
cmc
sub
or
jmp
mov
inc
stos
xor
fwait
aad
add
fcomp
popa
xlat
dec
cdq
sub
jmp
dec
add
sar
pop
adc
inc
jae
retf
push
jbe
hlt
sub
inc
cli
stos
push
and
outs
dec
and
add
cmp
out
push
inc
xchg
or
add
xor
(bad)
(bad)
mov
pop
sbb
sub
sub
jae
xor
nop
ss
vunpcklpd
dec
(bad)
(bad)
(bad)
jmp
idiv
mov
push
mov
movs
and
sub
ds
(bad)
and
ret
stos
push
shr
adc
jge
adc
pop
and
jge
mov
jbe
mov
pop
pushf
and
shr
mov
cld
mov
aam
ret
loope
mov
push
xchg
jb
or
push
sbb
(bad)
(bad)
(bad)
in
movs
test
outs
fwait
cwde
scas
jb
inc
mov
hlt
and
scas
scas
not
pop
lahf
dec
test
add
(bad)
xchg
test
retf
cli
mov
jl
(bad)
(bad)
dec
mov
cmps
and
push
(bad)
and
pop
and
lahf
nop
jne
nop
lods
dec
and
sub
inc
ins
jecxz
(bad)
(bad)
fisubr
mov
add
retf
xchg
mov
cmp
mov
adc
adc
bound
in
rol
pop
ror
xchg
inc
xchg
sti
cli
adc
or
cli
or
call
or
scas
clc
movs
dec
push
int
push
dec
pop
popf
push
test
retf
stc
cmc
pop
push
add
mov
or
add
jns
idiv
fist
inc
cmp
xor
mov
adc
les
dec
add
(bad)
(bad)
(bad)
call
push
ins
pop
repnz
xor
mov
(bad)
aad
repnz
mov
jg
clc
ds
push
sub
daa
dec
clc
push
inc
xor
(bad)
(bad)
out
mov
mov
cld
add
shl
and
mov
xlat
xor
aad
push
sahf
mov
das
jae
add
xor
shl
(bad)
(bad)
jmp
mov
clc
nop
mov
neg
xor
leave
mov
retf
sbb
(bad)
aaa
dec
cmps
lea
dec
loope
jmp
mov
jmp
retf
and
xchg
pop
mov
sub
cmp
(bad)
mov
push
shl
mov
inc
mov
add
and
mov
sub
jmp
sbb
repnz
mov
gs
mov
std
(bad)
sub
cli
adc
jb
cmc
mov
scas
or
(bad)
xchg
xor
inc
push
and
div
call
loopne
inc
(bad)
mov
ins
pop
rcr
test
data16
mov
inc
scas
mov
ror
xchg
repz
or
(bad)
(bad)
(bad)
(bad)
jle
scas
mov
test
hlt
fs
dec
scas
fldcw
(bad)
xchg
cmc
pop
mov
into
out
aaa
jmp
out
mov
adc
mov
cmp
retf
int3
aad
adc
sub
inc
outs
int
(bad)
(bad)
inc
cmps
std
loope
std
sar
call
mov
(bad)
call
mov
mov
mov
add
mov
add
jmp
pop
adc
popa
cs
jb
mov
jge
nop
cli
mov
call
inc
add
sub
in
inc
xor
push
mov
cs
push
xor
mov
push
sbb
ins
(bad)
std
(bad)
sbb
(bad)
sbb
lahf
rcl
jecxz
bound
hlt
loop
xrstors
cmc
(bad)
jmp
ss
sub
mov
mov
(bad)
icebp
push
push
fcomp
sbb
es
sbb
mov
jg
pop
mov
mov
or
or
pop
mov
jg
call
(bad)
outs
xchg
jg
cmp
pop
sub
adc
jg
fadd
adc
jmp
mov
in
mov
jnp
mov
(bad)
dec
cli
jp
inc
jae
(bad)
dec
popf
add
mov
and
push
test
inc
xchg
cli
dec
adc
rol
sbb
lea
xor
jge
jmp
cld
call
pop
hlt
inc
mov
mov
add
or
shr
push
hlt
push
and
mov
mov
jg
dec
add
mov
cmc
jne
int
(bad)
(bad)
(bad)
ds
out
cmp
mov
adc
sbb
repz
out
aad
adc
push
not
xchg
jmp
jp
cmp
(bad)
(bad)
(bad)
jmp
add
ins
add
movs
add
iret
mov
add
int
fstp
jno
(bad)
push
lahf
mov
jnp
mov
fidiv
jbe
ins
test
mov
inc
ins
push
ins
cwde
pop
faddp
xchg
ret
mov
icebp
xor
dec
dec
mov
stos
mov
cmp
xor
fld
xor
sub
jg
nop
and
int
sar
jmp
or
into
(bad)
jmp
pop
jnp
pop
or
ss
pusha
xchg
jmp
adc
sub
adc
mov
pop
pusha
adc
retf
dec
inc
jge
mov
repz
inc
addr16
in
mov
add
nop
fidivr
out
(bad)
(bad)
(bad)
fadd
jecxz
out
stos
xchg
fistp
dec
fmul
data16
xchg
xchg
add
rcr
(bad)
(bad)
call
mov
fsub
(bad)
pushf
pop
pushf
adc
call
rcl
adc
daa
inc
add
pop
div
inc
jo
xchg
xchg
mov
add
outs
add
xlat
shr
imul
iret
mov
ficomp
jmp
sar
mov
scas
in
add
stos
push
cdq
push
mov
(bad)
jmp
out
lds
popf
pop
test
xchg
cmps
(bad)
(bad)
inc
lods
pop
aam
or
ret
fidivr
xor
repnz
dec
and
shl
dec
cmp
movs
loop
div
(bad)
(bad)
dec
call
fidivr
nop
das
and
sti
jmp
jmp
std
imul
mov
pop
(bad)
push
(bad)
stc
fild
push
rol
call
mov
(bad)
popa
mov
lahf
test
(bad)
fcomp
cdq
fcom
dec
sbb
mov
aas
enter
jae
leave
jmp
inc
push
mov
outs
xor
xchg
xor
addr16
pop
add
out
and
ror
(bad)
(bad)
push
mov
inc
sub
out
lods
test
push
mov
mov
lock
cwde
mov
daa
push
or
lods
cmp
inc
mov
pop
nop
aam
mov
mov
push
pop
or
xchg
(bad)
call
sahf
pop
dec
in
push
fsub
cmp
mov
ins
pop
idiv
mov
fadd
iret
mov
(bad)
dec
fcom
(bad)
stos
fdivr
retf
rcr
or
clc
cmp
jmp
cmp
add
mov
pop
dec
loope
sbb
ficomp
fstp
or
(bad)
jge
adc
or
mov
hlt
mov
in
xor
call
outs
jno
dec
or
pop
cli
xchg
or
nop
fcom
test
add
jb
pushf
cmc
daa
xor
mov
mov
ss
in
or
call
test
inc
fild
cld
leave
xor
fdivp
pop
mov
push
hlt
pop
in
clc
retf
(bad)
sub
popa
aaa
cld
das
adc
sbb
ja
fisttp
aam
jmp
sti
jmp
cld
dec
fistp
fsubr
(bad)
sub
push
inc
dec
or
je
mov
pop
pusha
jmp
adc
in
xchg
test
xor
sbb
(bad)
dec
inc
cmps
or
add
imul
mov
fcmovbe
push
mov
jmp
pop
stos
out
nop
add
pop
(bad)
in
(bad)
dec
mov
stos
(bad)
int3
jo
pop
mov
jge
sbb
jle
ins
rcl
adc
jmp
retf
mov
pop
push
sbb
dec
inc
in
in
adc
fcmove
mov
dec
inc
sub
call
dec
pushf
cdq
add
sub
push
push
leave
or
fiadd
nop
push
push
cld
(bad)
fcomp
and
mov
clc
shl
(bad)
mov
push
les
adc
jecxz
icebp
jmp
push
mov
leave
jbe
mov
cmps
hlt
leave
jmp
ss
sbb
ret
sub
jnp
mov
in
push
(bad)
(bad)
(bad)
jmp
mov
cwde
icebp
jge
sti
out
pop
xor
sbb
sub
mov
cli
outs
push
scas
jbe
jmp
ins
call
mov
jo
shr
(bad)
(bad)
(bad)
inc
inc
adc
and
add
or
inc
pop
fnstsw
ror
cs
push
xlat
cli
and
jnp
nop
in
lock
mov
hlt
sbb
lahf
sar
pop
cld
inc
arpl
mov
or
push
test
push
aas
or
dec
and
(bad)
(bad)
jmp
pop
lds
mov
inc
cmc
xlat
mov
mov
xchg
cmc
pop
xchg
xchg
adc
(bad)
(bad)
jmp
push
xlat
inc
add
mov
(bad)
movs
fstp
loopne
mov
jl
gs
(bad)
(bad)
push
xor
add
pop
pop
lahf
pop
lea
sub
iret
jge
mov
(bad)
add
add
outs
in
mov
clc
(bad)
push
aam
ins
rcr
cmp
mov
inc
xchg
idiv
jmp
cmc
std
fadd
enter
inc
cmp
cmp
adc
xor
aad
xchg
or
(bad)
(bad)
inc
sbb
mov
sti
mov
dec
sub
shr
popf
ficom
jne
arpl
dec
xor
sub
xlat
jge
(bad)
xor
cmp
(bad)
(bad)
jmp
xor
outs
mov
jbe
cmps
call
mov
pop
ins
push
hlt
push
mov
popa
mov
stos
arpl
imul
loop
(bad)
call
cmc
push
stos
cmp
mov
push
arpl
or
(bad)
jecxz
lock
push
cld
mov
and
(bad)
mov
sahf
cld
or
mov
test
call
rcr
loope
xlat
out
and
hlt
jge
in
cld
or
(bad)
push
xor
mov
jae
cmp
pop
js
pop
mov
(bad)
(bad)
(bad)
(bad)
cli
lock
retf
xor
jmp
call
into
retfw
ja
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
push
imul
lods
idiv
in
cmp
retf
mov
sbb
and
inc
inc
mov
out
and
das
pop
sub
inc
jge
in
mov
inc
rol
jl
stos
sti
outs
jg
push
jmp
xchg
pop
cmp
jbe
and
jbe
stc
fcomp
icebp
ja
cmc
pop
(bad)
(bad)
(bad)
(bad)
jp
(bad)
pop
pop
(bad)
dec
fild
in
es
push
sahf
ins
or
pop
loope
ins
jnp
bound
std
(bad)
(bad)
(bad)
(bad)
fisubr
inc
ss
(bad)
leave
jnp
fdiv
(bad)
mov
jb
xor
(bad)
mov
mov
jmp
mov
out
jle
in
sbb
cmp
rcr
push
lock
xchg
dec
xor
fist
icebp
(bad)
call
add
cmp
jbe
dec
aas
xor
(bad)
lods
mov
cld
cdq
aas
push
loope
(bad)
(bad)
(bad)
call
std
popf
fs
xchg
add
cmps
lods
stc
sub
push
mov
lods
push
(bad)
cmp
nop
push
jne
lahf
dec
lds
movs
out
dec
ja
lea
jmp
les
popf
gs
retf
xor
dec
fnsave
cmc
div
inc
mov
inc
xor
cmp
cmc
push
(bad)
aam
lods
aas
(bad)
(bad)
(bad)
(bad)
jg
fisubr
jo
sbb
jg
(bad)
sbb
pop
in
mov
std
and
dec
dec
out
jmp
call
sub
jl
ror
or
fs
jp
or
psubb
dec
jmp
push
push
mov
jae
sbb
inc
xor
bound
jb
(bad)
(bad)
out
cli
ins
adc
xor
jge
adc
cmc
test
loop
lock
xchg
lds
fwait
jno
jle
inc
mov
xor
jne
dec
push
scas
jmp
sub
xlat
mov
fimul
aam
xor
(bad)
(bad)
push
addr16
or
ficomp
rol
cdq
adc
push
aas
pop
jmp
jno
(bad)
(bad)
inc
call
dec
popf
popa
mov
push
in
mul
pop
sahf
inc
xchg
jg
mov
arpl
(bad)
(bad)
jmp
add
mov
push
pop
and
(bad)
cmp
mov
loopne
push
les
js
(bad)
call
sysenter
mov
retf
js
gs
lods
dec
add
dec
in
cmp
fcmovnb
pop
dec
jbe
jge
jo
pop
(bad)
(bad)
(bad)
cmp
add
aad
jbe
pop
cld
ja
out
stos
dec
mov
add
rol
aad
mov
jmp
mov
shl
mov
mov
leave
fwait
pop
pop
ja
jle
(bad)
(bad)
push
es
inc
movs
cli
mov
inc
scas
cmp
sbb
(bad)
rcl
addr16
cmc
fwait
and
lea
movs
mov
test
sbb
xor
jne
aam
sub
out
(bad)
(bad)
inc
cmp
xchg
jecxz
dec
in
pop
(bad)
xchg
leave
or
inc
sar
and
add
ss
mov
mov
push
jnp
mov
(bad)
push
retf
cmp
pop
(bad)
cmp
(bad)
leave
test
xor
jecxz
mov
test
or
icebp
call
psubw
dec
repnz
sub
push
in
and
cwde
and
shl
push
into
pop
ins
push
hlt
push
pushf
fist
fst
ja
sbb
mov
sbb
cli
ins
lea
lods
pushf
mov
ja
xor
sbb
xchg
lods
mov
pop
lock
pop
out
(bad)
(bad)
inc
shr
repz
stos
push
jecxz
(bad)
dec
push
xor
push
(bad)
jmp
mov
rol
or
jo
ja
mov
les
(bad)
(bad)
(bad)
call
jecxz
mov
xchg
xchg
jmp
xchg
or
clc
test
dec
pop
mov
xchg
outs
xor
xor
jno
(bad)
(bad)
(bad)
call
push
pop
in
ja
mov
les
mov
push
fmul
dec
sbb
sbb
jns
sub
mov
pusha
pop
in
fwait
dec
and
pop
jns
mov
retf
clc
jmp
out
adc
outs
aas
adc
mov
push
fwait
stc
retf
push
add
test
dec
test
sbb
ds
(bad)
(bad)
jmp
add
fnstcw
fst
outs
and
mov
push
cmp
movs
call
cmp
sbb
(bad)
(bad)
fld
pop
aad
mov
mov
scas
loop
mov
pop
cli
ja
aas
mov
(bad)
(bad)
(bad)
dec
ja
jne
and
inc
push
cld
and
mov
dec
mov
jecxz
test
or
scas
popa
push
jmp
lods
or
repnz
ret
fadd
push
cmc
sub
mov
push
cmp
sub
pop
xchg
xchg
push
mov
dec
call
mov
pop
jmp
and
xchg
push
dec
stos
add
xchg
icebp
pop
cmp
dec
sub
xchg
cmp
retf
ret
les
(bad)
mov
out
and
aas
sub
xlat
mov
xor
cmp
dec
nop
iret
ds
jae
and
inc
mov
pop
or
mov
mov
jne
stos
xlat
adc
pop
sub
(bad)
jmp
(bad)
fcmovu
xchg
les
xchg
jns
push
hlt
sub
jge
mov
outs
adc
mov
scas
int
adc
xor
cmp
outs
inc
mov
(bad)
jge
ja
test
(bad)
stc
popa
jg
es
xor
imul
push
hlt
push
in
mov
adc
test
dec
lods
jg
(bad)
dec
fstp
jle
sbb
mov
adc
fisttp
std
imul
std
(bad)
(bad)
jmp
mov
sti
cmp
jecxz
inc
inc
out
mov
sbb
aad
leave
fcomip
sbb
sub
and
cmp
jo
mov
test
popf
pop
fsubp
outs
xlat
(bad)
(bad)
(bad)
push
mov
sub
lea
push
pop
mov
(bad)
clc
sahf
push
fcomip
push
jb
(bad)
(bad)
call
cmc
mov
or
add
(bad)
push
sub
add
pop
mov
(bad)
push
pop
dec
retf
pop
mov
bound
jmp
sub
pop
cs
(bad)
(bad)
mov
mov
out
cmps
cmp
dec
pop
push
xor
mov
call
imul
out
mov
nop
or
test
or
call
push
into
jns
jecxz
lahf
les
xor
loop
call
or
cli
stc
or
in
inc
test
test
add
lea
jnp
inc
mov
shl
inc
das
sar
sti
mov
ss
fisttp
ss
and
(bad)
dec
inc
movs
pop
cmp
xchg
in
jae
jp
jns
jne
call
sbb
pop
xor
out
ror
jle
dec
icebp
imul
in
(bad)
frstor
xchg
es
mov
loop
mov
addr16
jp
in
retf
jg
(bad)
(bad)
dec
mov
sahf
inc
lahf
mov
(bad)
jl
mov
dec
rol
and
or
add
and
push
push
or
popa
inc
push
(bad)
(bad)
(bad)
inc
mov
inc
(bad)
pop
inc
arpl
arpl
movaps
sbb
call
dec
outs
in
test
pop
pusha
adc
pop
and
xchg
in
add
pop
jmp
test
into
mov
mov
hlt
mov
ins
add
out
xor
and
in
and
pop
stc
and
cmp
pop
test
mov
cmps
addr16
imul
test
mov
adc
sub
(bad)
(bad)
clc
call
lods
aam
or
nop
(bad)
sub
pusha
jae
jmp
and
aad
pop
mov
scas
sub
mov
les
(bad)
jg
cdq
data16
jo
int
xor
mov
adc
jecxz
fwait
mov
cli
(bad)
(bad)
jmp
mov
adc
imul
icebp
in
in
(bad)
or
sub
sub
jmp
mov
sbb
add
popf
lahf
(bad)
dec
jbe
xchg
sub
pop
cmp
das
jbe
mov
dec
arpl
pminsw
cmp
shr
stos
aad
leave
leave
(bad)
(bad)
(bad)
dec
mov
mov
inc
stos
(bad)
jnp
test
cmp
push
jnp
adc
repnz
lock
(bad)
(bad)
cmp
imul
imul
mov
loop
sahf
shr
sbb
sbb
(bad)
(bad)
fistp
mov
push
cmp
call
rcr
call
lea
scas
lds
lds
call
cli
addr16
xchg
pop
sbb
(bad)
(bad)
(bad)
jg
popf
jecxz
imul
sbb
retf
jnp
fidivr
popf
cwde
push
push
out
(bad)
jmp
sar
pop
dec
sti
inc
jne
xchg
out
pop
aam
stc
push
ins
mov
nop
in
jb
out
push
mov
mov
repnz
clc
(bad)
pop
(bad)
movs
repnz
lock
xor
int3
mov
fadd
jmp
add
sti
jmp
lahf
pop
push
clc
cld
into
imul
test
push
out
cdq
sar
inc
call
icebp
addr16
mov
(bad)
jge
mov
hlt
(bad)
call
repnz
ficomp
imul
inc
(bad)
xor
jl
(bad)
or
add
in
rol
call
rcl
pusha
cmps
in
jg
xchg
sbb
(bad)
mov
fidiv
cmp
mov
pop
sub
or
pop
xor
(bad)
(bad)
jmp
(bad)
and
push
sahf
outs
or
stos
shl
push
jl
stc
neg
cmp
mov
add
ss
jge
dec
loop
xor
or
(bad)
(bad)
jmp
cmc
and
cmp
cmp
dec
es
add
int
arpl
iret
sbb
popf
fild
daa
shl
pop
sbb
lea
shr
push
icebp
mov
and
mov
push
and
clc
pop
ins
pop
fist
sti
xor
les
ret
mov
(bad)
inc
jo
inc
cmps
frstor
adc
lahf
lods
int3
daa
aaa
cmps
dec
adc
jbe
(bad)
ins
(bad)
(bad)
mov
in
dec
das
in
sub
(bad)
inc
loopne
aas
push
in
pop
jne
(bad)
call
int
rcr
or
(bad)
(bad)
push
xchg
repz
repnz
ss
jb
dec
inc
inc
push
mov
jmp
(bad)
mov
jle
dec
mov
js
fidiv
aaa
std
jmp
push
out
(bad)
(bad)
dec
(bad)
je
mov
mov
dec
(bad)
aam
stc
movs
jb
lahf
retf
bound
sbb
js
and
sbb
mov
shl
leave
aas
jmp
sar
(bad)
(bad)
(bad)
mov
mov
xchg
idiv
dec
cli
inc
stc
push
retf
cli
call
lahf
(bad)
(bad)
(bad)
inc
jmp
sbb
ins
mov
(bad)
shl
shl
jns
lahf
in
cmp
adc
add
push
gs
int
sub
aaa
and
call
adc
(bad)
jg
and
sahf
or
xor
call
loopne
bound
sbb
fbstp
outs
and
mov
jnp
dec
add
inc
push
mov
(bad)
jmp
add
pop
push
jg
jl
jno
test
mov
pushf
(bad)
xor
sub
(bad)
(bad)
dec
shr
push
fst
pop
mov
mov
mov
mov
mov
cli
dec
mov
pop
and
(bad)
(bad)
call
cmp
out
sub
mov
inc
cmp
xchg
jns
aaa
jmp
lds
mov
loope
call
mov
push
adc
sbb
stos
or
mov
push
je
call
das
aaa
out
lahf
mov
(bad)
jo
mov
jecxz
(bad)
inc
mov
(bad)
cmp
pop
jae
fcomip
(bad)
mov
lds
daa
(bad)
inc
inc
cs
push
add
xor
dec
fidivr
sbb
jmp
sbb
pop
in
inc
sar
mov
xor
call
jmp
xchg
mov
xlat
lea
dec
es
leave
adc
das
inc
js
sahf
dec
sbb
pop
inc
ja
add
inc
ds
push
pusha
mov
sbb
cmp
xchg
fwait
pop
call
jl
push
add
mov
fsubr
lea
xchg
push
nop
fs
dec
fs
imul
icebp
add
pop
mov
jmp
call
(bad)
(bad)
mov
inc
rcl
mov
(bad)
fistp
xchg
and
ss
dec
inc
cmp
inc
pop
push
push
pop
rcl
jge
rcr
jge
(bad)
(bad)
mov
call
loope
(bad)
out
jmp
fcomp
and
mov
dec
xchg
xchg
push
rol
inc
fiadd
sar
call
rcl
add
sub
in
les
or
outs
jp
pushf
mov
push
(bad)
dec
in
inc
adc
aad
in
rcl
and
push
adc
dec
mul
ins
ss
(bad)
call
std
jae
inc
and
xor
pop
inc
fwait
icebp
cmp
in
adc
dec
ds
(bad)
(bad)
call
sbb
fwait
in
jle
int
mov
sbb
dec
pop
in
mov
jl
loope
mov
pop
xor
sar
stc
xchg
add
fldenv
(bad)
(bad)
mov
sbb
nop
xchg
std
mov
pop
xor
dec
jnp
cmp
in
lahf
xor
jl
jg
sub
jmp
(bad)
(bad)
inc
repnz
data16
popf
or
ins
stos
sahf
mov
xor
pop
fnstsw
(bad)
(bad)
(bad)
push
rcr
arpl
cmp
rcl
cdq
mov
out
rcr
add
(bad)
call
fs
cwde
xor
aam
les
push
addr16
out
add
jmp
add
(bad)
(bad)
call
bound
ds
sbb
int3
mov
mov
out
cmp
push
shr
call
std
inc
cmp
mov
fcomp
cmp
popa
call
sar
(bad)
push
mov
jnp
dec
out
mov
fwait
cmc
sahf
das
lods
jg
mov
mov
nop
(bad)
(bad)
(bad)
inc
pop
cwde
in
addr16
xor
add
xlat
fs
xchg
sub
sti
or
inc
cmp
popf
jl
cmps
inc
rcl
aas
push
sbb
ins
call
push
push
(bad)
cmc
(bad)
out
clc
adc
daa
sbb
xor
adc
retf
outs
lods
pop
mov
add
push
ja
xor
xchg
pop
push
es
jmp
mov
frstor
push
pop
mov
cmp
push
mov
add
movs
clc
ins
add
test
in
addr16
push
shl
mov
out
push
mov
inc
cli
add
add
jbe
jmp
pop
and
out
mov
std
mov
pushf
xchg
hlt
mov
(bad)
arpl
sahf
dec
cmp
addr16
fidiv
inc
std
(bad)
(bad)
inc
jne
cli
and
push
xchg
iret
outs
cmp
sahf
xchg
jae
sub
sbb
adc
sbb
aaa
mov
out
clc
jmp
push
inc
lods
dec
cmp
pop
or
jmp
jp
call
cdq
adc
into
(bad)
call
call
retf
adc
mov
lods
call
callw
jbe
enter
(bad)
(bad)
call
into
inc
lds
in
push
add
mov
nop
icebp
ja
dec
cmp
pusha
add
mov
and
cli
(bad)
fxch
push
pop
or
mov
leave
(bad)
xchg
cmp
das
movs
ss
popa
mov
call
fcomp
or
and
pusha
cmp
add
(bad)
pop
jnp
xchg
popf
and
setbe
mov
push
jg
fnstenv
das
mov
jl
mov
mov
imul
jge
jmp
push
in
cdq
ja
dec
jg
fs
arpl
mov
xchg
mov
(bad)
(bad)
fist
icebp
inc
test
outs
icebp
push
adc
xor
mov
mov
jbe
jle
inc
cmc
and
or
mov
xchg
(bad)
jmp
rol
test
imul
sub
xchg
(bad)
(bad)
fisttp
std
jns
outs
repnz
stc
mov
(bad)
in
jne
adc
fs
(bad)
push
push
(bad)
mov
sbb
mov
jecxz
cmp
mov
loop
xchg
dec
(bad)
(bad)
(bad)
jmp
leave
call
nop
enter
jmp
cmc
push
jecxz
mov
imul
dec
(bad)
push
lds
mov
mov
push
cld
in
jmp
icebp
dec
cmp
adc
in
xor
scas
inc
(bad)
adc
jmp
jnp
jne
in
mov
xor
out
stos
sub
call
push
jns
mov
loop
shl
ds
(bad)
(bad)
(bad)
(bad)
jp
inc
pop
mov
and
xchg
mov
aam
mov
ja
inc
pop
arpl
(bad)
(bad)
(bad)
jmp
adc
mov
movs
or
pop
or
or
nop
cmp
jg
lea
sbb
pop
imul
aam
movs
mov
das
sub
(bad)
(bad)
call
scas
pop
cmps
clc
pop
mov
mov
in
and
cwde
and
inc
bound
pop
mov
je
pop
hlt
jmp
retf
out
hlt
in
test
mov
mov
ret
mov
(bad)
(bad)
(bad)
push
movs
dec
fld
and
cmp
cmp
mov
ss
mov
inc
iret
adc
(bad)
(bad)
jmp
es
add
xchg
aad
popa
fdivr
xchg
into
iret
and
pushf
lods
out
pop
sub
inc
aam
data16
jmp
lahf
cli
(bad)
(bad)
dec
jns
mov
pop
sbb
add
neg
sub
mov
js
push
std
dec
push
mov
mov
stos
(bad)
iret
inc
jmp
call
cmp
clc
pop
cmp
loop
in
fcmovne
int3
jecxz
jg
or
lea
push
stc
lods
pusha
xor
sbb
mov
jmp
pop
lods
xchg
jno
inc
sahf
test
pop
mov
rol
jl
pushf
mov
ja
stos
push
test
outs
(bad)
xchg
mov
jp
sbb
push
xchg
or
call
cmp
jb
sbb
push
push
mov
(bad)
(bad)
call
popf
aad
jg
ret
or
and
jno
fcmove
mov
jbe
jbe
push
and
and
inc
cld
arpl
jecxz
sub
mov
ds
stc
gs
or
call
mov
pop
repnz
mov
cld
jne
js
jno
out
and
inc
xchg
xor
push
call
jnp
mov
leave
and
xchg
fdiv
fwait
and
hlt
jmp
arpl
clc
fcomip
pop
push
mov
scas
repz
rcr
push
mov
push
cld
scas
xchg
(bad)
jmp
sub
push
ret
ins
scas
dec
mov
fwait
mov
pop
aam
(bad)
(bad)
jmp
xchg
imul
sbb
push
fisttp
movs
jl
sub
into
in
(bad)
(bad)
push
add
lods
sbb
(bad)
fld
mov
pop
jmp
ror
(bad)
(bad)
(bad)
call
push
test
lahf
in
lods
cmp
fsub
jne
ret
les
sbb
int
ins
stos
jmp
inc
out
pop
cmps
jo
int
lock
cli
xor
xchg
das
xor
iret
xchg
cdq
or
and
pop
sar
(bad)
jmp
sub
xor
cs
cld
data16
scas
push
mov
push
jae
(bad)
mov
(bad)
cmc
pusha
or
and
xor
jae
add
push
xchg
(bad)
(bad)
call
ja
xor
mov
int
retf
stos
mov
push
out
rcr
(bad)
fcom
xchg
shl
int
mov
jnp
mov
push
test
gs
test
push
ins
fld
gs
jmp
xchg
cmps
push
aam
pop
(bad)
dec
addr16
out
jnp
mov
adc
sti
stos
dec
ret
cmc
arpl
js
in
pop
push
or
sti
rol
repnz
sub
ret
(bad)
mov
and
adc
(bad)
jmp
jmp
cli
pop
adc
add
mov
xchg
lds
dec
aam
loope
cmp
call
lock
pop
hlt
jmp
sub
xchg
shl
ror
mov
ret
loopne
jno
push
add
pop
push
xlat
sbb
inc
(bad)
push
xchg
inc
sbb
(bad)
xchg
mov
cld
jo
call
pop
out
jge
sub
sbb
movs
loopne
nop
(bad)
call
call
mov
je
imul
mov
adc
adc
add
(bad)
sbb
(bad)
fdivr
(bad)
jg
mov
cwde
ret
cwde
loope
(bad)
das
ficom
xchg
dec
mov
aaa
lock
call
mov
gs
loope
add
pop
jp
dec
loop
stc
cld
(bad)
(bad)
push
sbb
xchg
fwait
cld
cld
ret
dec
mov
inc
in
push
mov
iret
xchg
sbb
neg
mov
cmps
mov
push
push
add
das
aaa
sbb
mov
(bad)
(bad)
jmp
cmp
adc
pop
adc
inc
stos
push
daa
int
out
and
fidiv
(bad)
call
test
bound
inc
lods
(bad)
call
sub
dec
rcr
add
sbb
lock
dec
mov
sbb
cmp
jae
jge
dec
pop
inc
push
mov
adc
inc
lods
mov
dec
nop
loopne
in
cmc
in
(bad)
(bad)
(bad)
(bad)
clc
add
pminub
and
sub
add
xlat
clc
mov
fild
lahf
(bad)
(bad)
(bad)
call
sbb
adc
fisubr
jne
mov
cs
jne
push
leave
in
ret
mov
mov
dec
xor
xchg
and
pop
(bad)
(bad)
(bad)
jmp
fdivr
daa
(bad)
fucomp
out
mov
adc
in
rcr
sub
data16
sbb
push
test
and
aaa
or
inc
dec
(bad)
(bad)
push
test
div
sahf
gs
popf
adc
push
inc
cld
pop
sbb
mov
mov
mov
push
dec
adc
(bad)
jmp
outs
(bad)
mov
enter
add
mov
cdq
jb
int
mov
call
mov
(bad)
call
or
dec
arpl
(bad)
add
push
(bad)
push
cld
scas
call
clc
test
inc
push
push
(bad)
pusha
arpl
jmp
fild
daa
fidiv
mov
aas
xchg
out
pop
mov
pop
lock
xchg
dec
pop
(bad)
and
retf
(bad)
jmp
xchg
mov
adc
jp
fld
fs
shr
add
add
in
push
jmp
sahf
push
test
fdiv
push
xor
in
jg
(bad)
push
xchg
xchg
mov
xor
and
popa
push
movs
enter
test
fcom
cli
(bad)
jmp
stc
hlt
jl
cmps
sbb
fucom
int
inc
cmp
cmp
(bad)
(bad)
jmp
test
arpl
es
shl
add
mov
clc
out
xor
(bad)
(bad)
(bad)
(bad)
mov
test
out
lea
adc
fmul
lods
ret
lods
adc
xor
dec
pusha
sahf
(bad)
fisttp
imul
jo
gs
(bad)
out
retf
xchg
ror
lea
(bad)
(bad)
(bad)
jmp
mov
mov
fcomp
fdivr
movs
xlat
ret
sti
loopne
arpl
pop
and
inc
sbb
sbb
ja
aad
jmp
xor
loope
mov
xchg
(bad)
repz
mov
dec
adc
idiv
cwde
cmp
sub
add
(bad)
jl
sbb
pop
(bad)
loop
stc
jmp
fs
es
loopne
bound
dec
xchg
xor
shl
add
mov
pop
aas
push
adc
push
scas
cli
test
or
jmp
dec
mov
push
rol
inc
call
dec
or
inc
sub
mov
and
jnp
sti
sub
mov
lock
adc
inc
xor
and
imul
and
imul
cdq
test
sub
pop
pop
fisubr
inc
(bad)
jg
add
aas
test
call
inc
cmp
(bad)
inc
in
data16
mov
daa
repz
pop
addr16
ds
aas
(bad)
(bad)
(bad)
fistp
movs
lea
xor
xchg
inc
popa
jnp
int3
movs
in
xor
jle
(bad)
(bad)
mov
movlps
sbb
sub
sub
fidivr
xchg
and
xchg
xchg
cld
(bad)
(bad)
inc
leave
cmp
jne
add
sti
loop
pop
in
(bad)
cdq
aaa
pushf
push
push
add
fs
stc
dec
push
sbb
mov
mov
jmp
int
out
call
sub
inc
pusha
sbb
mov
popf
nop
mov
push
mov
mov
pop
mov
jecxz
loopne
es
jmp
mov
xchg
cs
arpl
(bad)
jge
js
(bad)
test
imul
inc
mov
sbb
outs
clc
out
out
(bad)
jg
add
loopne
scas
frstor
(bad)
aas
iret
out
sub
out
cmp
jecxz
pop
cmps
dec
jo
xchg
fild
rcl
jne
lds
mov
jg
in
test
jp
imul
repz
jmp
(bad)
fbld
in
ins
push
and
mov
sar
(bad)
dec
stos
clc
scas
(bad)
xchg
fisttp
mov
test
out
(bad)
mul
scas
mov
dec
cmp
retf
cli
jmp
js
push
add
cdq
xchg
mov
cli
jmp
xor
ret
fcom
pop
mov
mov
test
je
xchg
(bad)
(bad)
(bad)
inc
movs
sub
xchg
mov
add
int3
in
mov
fld
mov
(bad)
call
cmc
mov
mov
les
dec
mov
fdiv
cmp
sbb
dec
fnstenv
(bad)
call
dec
mov
repnz
pusha
pop
in
in
retf
cld
push
shr
pop
sbb
scas
pop
mov
iret
sub
(bad)
push
std
sti
icebp
and
add
push
xchg
jno
das
xor
enter
push
repnz
mov
iret
std
sub
(bad)
idiv
push
in
adc
jg
or
mov
pop
in
dec
jmp
inc
dec
iret
push
fs
sti
sbb
test
cmp
mov
mov
jg
inc
cld
sahf
jae
add
mov
scas
std
cmp
outs
clc
inc
outs
popa
lea
arpl
(bad)
retf
sbb
dec
js
inc
sbb
inc
imul
mov
or
xor
(bad)
(bad)
(bad)
mov
stos
cmps
pop
xchg
mov
adc
push
sub
mov
push
fadd
xor
js
(bad)
dec
push
mov
call
pop
mov
(bad)
(bad)
(bad)
push
fsub
loop
js
push
aas
das
inc
cmps
mov
and
scas
pop
pop
sub
movs
pop
in
mov
int
dec
fdivr
(bad)
(bad)
inc
mul
sbb
(bad)
mov
leave
xchg
ja
sub
or
xchg
inc
mov
(bad)
jmp
scas
leave
mov
and
xchg
sbb
sub
aad
or
pop
jmp
jmp
mov
and
(bad)
(bad)
cmp
dec
ds
mov
cdq
stos
lds
dec
cmp
cmp
js
(bad)
(bad)
(bad)
ds
inc
xchg
clc
add
into
pop
jbe
mov
cmp
mov
and
push
aaa
jl
mov
add
adc
lods
xchg
(bad)
(bad)
(bad)
(bad)
cld
imul
(bad)
fcom
jmp
mov
push
sub
inc
xchg
lods
js
popa
xchg
xchg
or
call
xchg
shl
mov
cmp
mov
add
(bad)
(bad)
call
popf
xchg
aad
pop
jge
in
or
pop
jns
movs
ins
pop
sub
icebp
enter
push
dec
clc
call
jmp
repz
cmp
bound
in
fst
dec
in
and
scas
ror
jb
pop
add
dec
jo
dec
cmp
(bad)
(bad)
(bad)
(bad)
out
and
and
or
mov
mov
adc
test
mov
cmp
(bad)
fisttp
xor
ds
in
fcom
pop
mov
test
stc
inc
pop
xchg
jmp
lods
sub
(bad)
jg
das
es
mov
(bad)
xchg
jnp
mov
mov
ss
(bad)
cmp
stos
push
push
sub
jne
hlt
cmp
rol
dec
push
jmp
jbe
rcr
es
(bad)
call
into
push
cmps
or
stos
mov
ja
js
pop
ins
push
icebp
(bad)
mov
cmp
fldcw
(bad)
call
(bad)
add
dec
push
jae
push
sahf
add
fwait
mov
pop
cli
call
and
(bad)
(bad)
xchg
sub
adc
popw
pop
mov
jmp
sar
push
mov
mov
out
or
lods
jo
jle
push
push
mov
sbb
push
std
push
sub
or
fs
mov
cmp
lock
mov
in
adc
(bad)
jmp
dec
mov
push
lock
pusha
iret
mov
hlt
sub
mov
xchg
xchg
scas
add
sub
(bad)
mov
mov
or
jg
jecxz
call
scas
xor
xchg
push
push
(bad)
add
loop
inc
lea
cmps
add
fdiv
mov
scas
push
lods
inc
jns
mov
add
cmps
lds
iret
(bad)
(bad)
call
inc
xor
cmp
mov
xor
in
cld
and
popa
push
mov
sub
(bad)
(bad)
(bad)
dec
xchg
into
lods
cwde
pop
mov
imul
clc
cmp
and
sub
mov
and
fwait
dec
loop
add
das
jle
mov
dec
mov
out
loope
xor
sar
pop
fdivr
aaa
std
dec
hlt
cmp
and
aas
mov
out
jle
fwait
daa
aas
(bad)
dec
cld
pushf
pop
addr16
mov
stos
xor
push
aad
add
adc
repz
(bad)
mov
fsubr
jns
sbb
fcmovnbe
jmp
lds
push
push
or
mov
popf
inc
sahf
sar
(bad)
add
(bad)
call
or
daa
push
jle
es
movlps
sbb
mov
push
xor
(bad)
(bad)
jmp
push
dec
fs
dec
xchg
xchg
fbstp
push
jo
cmps
and
xor
inc
int3
dec
mov
ss
(bad)
jmp
mov
pop
sub
push
aas
mov
shl
jno
or
in
sar
(bad)
(bad)
mov
pop
xor
das
mov
sahf
jns
push
push
jb
lahf
xchg
arpl
xchg
and
(bad)
(bad)
(bad)
(bad)
jle
jmp
pop
mov
icebp
(bad)
test
cli
and
adc
dec
sbb
loope
(bad)
jmp
pop
push
push
push
mov
pop
dec
mov
xchg
mov
sub
(bad)
(bad)
call
(bad)
repz
out
fisttp
pop
mov
sti
sub
jl
scas
ins
mov
or
sti
imul
dec
jmp
shl
test
add
jnp
aam
inc
mov
xchg
add
xor
adc
add
(bad)
inc
push
xor
xor
and
sbb
push
cwde
mov
jno
fst
push
xchg
js
mov
(bad)
(bad)
inc
fisttp
pop
sbb
xchg
(bad)
and
scas
(bad)
pop
and
sub
mov
cwde
mov
xor
cs
stc
dec
adc
mov
inc
cmc
jecxz
(bad)
(bad)
(bad)
jmp
outs
xlat
pop
jecxz
and
retf
in
out
imul
pop
cwde
adc
nop
cmp
(bad)
(bad)
mov
(bad)
iret
in
in
popa
push
movs
imul
inc
push
sbb
add
imul
adc
(bad)
(bad)
(bad)
fistp
fcom
or
adc
test
inc
add
in
test
(bad)
call
push
dec
mov
(bad)
mov
jb
pop
push
into
aad
(bad)
(bad)
jg
test
leave
xlat
xor
push
xchg
inc
pop
sbb
inc
lods
and
(bad)
(bad)
(bad)
jg
popfw
mov
pop
(bad)
cld
inc
mov
sub
int
test
or
nop
sar
cmp
data16
xor
push
and
sub
aaa
nop
or
in
mov
add
adc
aaa
push
adc
(bad)
fbstp
movs
call
fst
jg
pop
mov
inc
xchg
cmp
js
ins
stc
mov
lods
ror
or
(bad)
(bad)
dec
out
test
xchg
test
ret
push
jnp
loop
jae
mov
xchg
push
int3
mov
inc
data16
test
xchg
jmp
push
jle
lods
dec
lds
iret
addr16
cli
adc
mov
cmp
and
dec
je
push
in
dec
js
rol
adc
mov
dec
les
inc
(bad)
cmp
sbb
sbb
out
ret
shr
les
rcr
adc
call
movs
lods
outs
dec
mov
inc
cmps
push
cmp
lds
in
add
mov
xchg
cmc
push
dec
loope
mov
pop
pop
pop
xchg
xor
cwde
cdq
clc
(bad)
call
lds
dec
test
xlat
clc
adc
or
mov
xchg
mov
add
xchg
ds
adc
sub
push
and
xchg
(bad)
(bad)
mov
sbb
ret
mov
sub
repnz
xrelease
(bad)
test
mov
leave
mov
clc
adc
pop
pushf
and
(bad)
(bad)
(bad)
inc
fdivr
fcom
mov
popf
pextrw
push
retf
sub
nop
or
(bad)
(bad)
(bad)
(bad)
inc
pushf
ret
jmp
lods
stos
rcl
mov
and
inc
xor
lods
dec
mov
js
mov
jecxz
shr
inc
(bad)
(bad)
push
iret
ja
stos
xor
into
mov
adc
in
les
push
loopne
adc
(bad)
jmp
or
std
or
test
pop
das
loopne
mov
(bad)
(bad)
jmp
xchg
shr
or
adc
test
scas
inc
add
in
jae
push
lea
lds
mov
add
scas
gs
pop
sub
cmp
add
jno
push
push
mov
scas
sbb
fldenv
call
jmp
iret
scas
jb
mov
mov
das
add
mov
fistp
(bad)
int3
ret
mov
push
out
or
mov
out
jmp
out
xchg
cwd
dec
lods
cli
cmp
sar
xchg
push
das
xchg
mov
enter
xchg
stos
sub
xchg
add
adc
mov
push
hlt
call
push
lods
into
adc
rcr
jmp
dec
call
outs
xor
shl
mov
test
push
enter
mov
(bad)
std
repnz
xor
retf
jbe
sbb
jl
call
jmp
dec
push
lds
mov
not
fimul
xor
int3
jmp
add
jne
call
repz
pop
or
cmp
xchg
inc
mov
(bad)
jmp
jne
scas
mov
test
fdivr
(bad)
(bad)
call
push
aas
lods
cmps
movs
out
push
xor
mov
retf
cmp
or
je
and
adc
mov
mov
ja
mov
push
and
jg
xchg
inc
xor
lock
(bad)
pop
pusha
inc
ss
jl
push
int
(bad)
mov
mov
inc
xchg
mov
outs
mov
jp
out
jb
jae
iret
push
cli
cmps
ficom
push
gs
pop
loopne
mov
and
cmp
cmp
mov
push
repz
clc
arpl
cmp
jp
std
int
xchg
out
fdivrp
jg
or
adc
call
es
push
add
retf
cmc
(bad)
cld
jge
pop
out
outs
sub
lea
lock
sub
lods
in
repnz
push
std
loope
(bad)
(bad)
jmp
inc
xlat
ja
sahf
xchg
fisub
rol
nop
repz
xor
jo
sbb
adc
jecxz
xchg
aad
pushf
repz
or
cmp
int
out
push
push
adc
(bad)
jmp
cmc
push
ret
sbb
adc
rcpps
push
nop
xchg
rcl
ret
xchg
shl
push
mov
stos
pushf
inc
dec
jmp
jecxz
cmp
lock
inc
mov
out
fsubp
sbb
(bad)
(bad)
in
test
and
dec
jno
mov
(bad)
idiv
(bad)
jmp
adc
popf
cmc
je
imul
cmp
icebp
xchg
vcvtsd2ss
xlat
cs
fs
mov
call
add
rcl
or
lahf
jg
inc
mov
test
out
inc
inc
jo
(bad)
pop
mov
cmc
lock
pop
(bad)
(bad)
(bad)
dec
mov
mov
push
sti
or
mov
push
inc
or
inc
ud0
(bad)
call
loope
xlat
mov
xor
or
jne
js
ja
cmp
mov
in
add
ds
aas
cmovbe
(bad)
dec
fdiv
aaa
scas
xchg
jmp
sbb
pop
call
jmp
add
xchg
hlt
mov
pop
pcmpeqw
mov
sbb
adc
les
(bad)
mov
retf
jle
test
(bad)
fistp
ds
and
add
sbb
iret
movs
dec
test
das
mov
mov
loopne
popf
iret
add
leave
push
(bad)
(bad)
(bad)
jmp
test
mov
(bad)
mov
adc
mov
pushf
call
jns
fdivr
cmc
ja
(bad)
aad
stos
ror
dec
mov
(bad)
call
add
mov
add
into
inc
mov
or
xchg
(bad)
xor
test
enter
shl
stos
das
cli
push
ret
mov
inc
in
mov
es
push
push
lock
xor
push
je
and
sub
retf
iret
jno
cmp
mov
mov
jbe
jecxz
fwait
sub
adc
inc
nop
inc
pop
inc
push
mov
xchg
xor
mov
push
in
lahf
mov
pushf
or
mov
lahf
inc
cld
(bad)
call
bound
mov
dec
jecxz
mov
lock
(bad)
jbe
push
retf
mov
mov
lahf
repz
xor
(bad)
(bad)
dec
push
jne
mov
push
pop
jo
dec
(bad)
ds
clc
icebp
ins
lock
jmp
(bad)
jmp
loope
mov
mov
mov
in
and
jg
pop
sbb
mov
jg
sahf
outs
xchg
jno
fyl2x
das
jg
cmp
test
fwait
mov
xchg
dec
(bad)
data16
push
aam
pop
mov
sub
mov
fisttp
(bad)
(bad)
(bad)
mov
clc
xchg
(bad)
pushf
xchg
push
idiv
movs
mov
std
mov
mov
sub
sti
and
cli
pushf
mov
int3
ds
lahf
push
std
pop
jg
(bad)
mov
int3
(bad)
fs
xor
mov
inc
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
or
adc
adc
loop
(bad)
push
jns
mov
loope
aas
pop
and
(bad)
das
inc
dec
inc
ins
and
imul
stos
scas
test
adc
out
cmps
add
mov
dec
xor
adc
lahf
ss
je
(bad)
cmp
aad
lods
neg
(bad)
jg
js
sub
mov
pop
stc
mov
adc
in
mul
adc
xchg
(bad)
jp
sub
in
pusha
out
xchg
jmp
push
je
jl
jb
addr16
pop
ins
mov
mov
(bad)
(bad)
cmp
das
clc
or
bound
shl
inc
test
sub
(bad)
(bad)
(bad)
call
push
mov
test
mov
mov
and
cli
cmp
(bad)
jmp
(bad)
test
fidivr
pop
add
(bad)
(bad)
(bad)
out
mov
cmps
std
div
bound
loopne
sbb
in
sbb
scas
sbb
mov
(bad)
(bad)
jmp
(bad)
xor
arpl
addr16
add
arpl
lea
mov
push
movs
push
or
inc
into
sbb
sbb
(bad)
mov
pop
pusha
dec
and
push
out
xchg
fcom
(bad)
(bad)
dec
shl
mov
jl
daa
pop
xchg
xchg
sub
push
rcr
fild
(bad)
push
(bad)
das
call
in
push
adc
(bad)
(bad)
call
jns
xchg
(bad)
mov
xchg
mov
cmps
jbe
push
push
adc
ret
jne
shr
clc
(bad)
jmp
popf
or
ja
scas
sti
cdq
jmp
jns
ss
lods
pop
pusha
fdivr
inc
outs
jmp
mov
xor
dec
fmul
xchg
jg
call
mov
enter
lods
outs
sub
data16
aaa
clc
outs
div
hlt
sar
sbb
call
aaa
sub
mov
(bad)
(bad)
push
lahf
retf
ficomp
data16
test
ret
inc
(bad)
das
mov
(bad)
jg
cs
mov
dec
es
mov
into
cmp
mov
call
pop
jecxz
or
daa
ss
sbb
push
das
push
js
or
outs
dec
gs
pop
hlt
(bad)
(bad)
cmp
in
ss
and
ds
cmp
ss
jmp
jmp
sub
es
rcr
add
sti
(bad)
jg
push
add
adc
nop
popf
(bad)
mov
aaa
jecxz
test
pop
pop
scas
mov
(bad)
(bad)
(bad)
push
push
jbe
mov
jae
dec
pop
push
addr16
push
add
(bad)
(bad)
(bad)
(bad)
aad
push
int
and
mov
outs
gs
mov
mov
cli
(bad)
xchg
fwait
popa
or
mov
inc
inc
pop
mov
daa
ret
imul
jmp
cmps
js
movs
vprotq
retf
pop
outs
xchg
or
in
dec
lock
cld
mov
adc
popf
sbb
mov
stos
clc
mov
pop
mov
aas
mov
sbb
inc
stc
xchg
pop
and
js
das
cmp
(bad)
jmp
adc
mov
lahf
add
fwait
loop
out
ret
sub
call
fadd
(bad)
mov
pop
fild
test
out
cmps
(bad)
in
add
std
(bad)
(bad)
jmp
pop
dec
addr16
xchg
fbstp
sub
xchg
mov
pop
mov
inc
cmp
rcr
sub
cld
inc
mov
mov
hlt
mov
mov
mov
out
dec
pop
ret
xchg
gs
(bad)
or
es
jge
out
retf
cmp
aaa
xchg
mov
mov
jnp
dec
push
cld
les
xlat
out
mov
xor
scas
retf
in
mov
in
inc
fidiv
cld
clc
dec
out
outs
adc
(bad)
xchg
jae
jge
add
in
fld
or
shl
jmp
repz
adc
(bad)
(bad)
dec
add
xor
and
dec
inc
jb
or
xor
out
add
pop
mov
dec
repnz
inc
loopne
or
scas
popa
cld
(bad)
mov
mov
in
mov
ret
mov
push
sub
shr
(bad)
fild
adc
mov
call
das
retf
stos
add
(bad)
(bad)
inc
scas
mov
dec
jl
jg
pop
dec
je
les
sub
aad
mov
(bad)
cmps
jp
lahf
mov
jecxz
mov
mov
cmps
rep
movs
popa
sub
jno
cwde
ja
pusha
(bad)
(bad)
(bad)
jmp
cwde
push
jae
xor
scas
enter
pop
or
addr16
mov
retf
(bad)
mov
jb
mov
push
fcmove
sub
call
add
push
and
lds
push
dec
(bad)
cmc
sbb
sbb
jg
or
iret
or
fcom
xchg
cmps
mov
mul
(bad)
jmp
dec
je
leave
fwait
dec
jns
dec
outs
or
call
(bad)
(bad)
(bad)
fistp
cs
mov
jmp
xor
loopne
outs
xor
scas
xchg
call
cmp
mov
push
xor
mov
and
mov
fdiv
cmps
daa
(bad)
in
sbb
xor
push
pop
mov
ret
icebp
iret
(bad)
(bad)
(bad)
(bad)
cmp
and
gs
aaa
fwait
jne
ins
xor
das
inc
lock
jbe
mov
(bad)
(bad)
(bad)
std
inc
pop
mov
(bad)
sub
repnz
pop
and
aas
not
loop
pop
jb
jns
push
std
inc
adc
aaa
sub
outs
rcr
in
push
mov
rcl
jae
mov
mov
cmp
sbb
sbb
pop
push
repnz
js
mov
cli
mov
hlt
(bad)
(bad)
fstp
inc
lahf
aas
into
sbb
sti
into
enter
push
add
mov
iret
(bad)
(bad)
jmp
lock
daa
dec
mov
xor
mov
fbstp
outs
sbb
and
dec
fs
push
fwait
sahf
(bad)
movs
cwde
pushf
pop
ins
cld
call
dec
mov
push
mov
push
jno
jae
xor
push
dec
jp
(bad)
(bad)
inc
cs
addr16
popf
push
outs
sbb
cmp
sub
adc
call
(bad)
(bad)
(bad)
fucom
sbb
lds
(bad)
in
xchg
xor
pop
adc
mov
push
dec
fdivr
push
xchg
add
iret
push
int
ja
lahf
shr
xor
mov
mov
cmps
(bad)
push
mov
and
stos
jb
fsubr
retf
adc
pop
aaa
mov
sbb
and
in
or
xchg
sub
inc
push
xor
adc
lods
pop
call
adc
pusha
scas
(bad)
(bad)
(bad)
jmp
inc
(bad)
(bad)
jns
ins
rcl
adc
ret
scas
jns
movs
pop
jns
adc
test
outs
aam
or
(bad)
dec
in
out
popf
adc
inc
jmp
shr
adc
test
add
dec
xchg
xchg
in
mul
push
mov
out
cli
stc
mov
sbb
mov
dec
mov
rol
inc
(bad)
repnz
mov
rep
push
loop
push
push
sub
xchg
jle
jnp
aad
mov
xchg
ja
xchg
dec
xor
xor
scas
cli
scas
loop
fwait
dec
push
pop
sub
stc
mov
jnp
xor
xchg
and
mov
sar
mov
(bad)
pop
or
(bad)
call
ins
mov
xchg
daa
pop
(bad)
retf
dec
mov
call
pushf
push
adc
imul
xlat
mov
lds
dec
not
mov
cmp
xor
sub
mov
jno
pop
or
xor
mov
rol
cmc
xchg
call
call
add
adc
addr16
mov
xchg
jae
fiadd
jmp
out
xor
call
xchg
popa
mov
push
xchg
jle
mov
mov
int3
je
push
(bad)
(bad)
jg
out
inc
out
inc
xor
test
dec
movs
pop
das
pop
pop
(bad)
mov
dec
js
std
(bad)
(bad)
call
add
in
xchg
imul
push
sar
mov
(bad)
jo
(bad)
jg
gs
or
mov
jge
icebp
xchg
movs
xchg
ja
xor
sar
dec
imul
cmp
xor
cs
loop
(bad)
(bad)
fistp
mov
int
test
mov
jecxz
mov
cwde
out
lods
cwde
push
sbb
(bad)
(bad)
cmp
je
sub
aad
xor
mov
(bad)
(bad)
dec
mov
movs
sbb
test
xchg
jno
shl
mov
(bad)
inc
cld
test
je
adc
sar
ret
xchg
jmp
dec
jg
jecxz
push
jno
mov
xchg
jle
in
xlat
dec
imul
(bad)
mov
dec
inc
enter
jmp
adc
dec
lahf
sub
dec
jecxz
ss
push
xchg
retf
in
jo
out
movs
(bad)
dec
cs
cmc
dec
retf
adc
or
mov
test
jle
mov
xchg
or
dec
stc
idiv
jg
xchg
fnsave
mov
aam
out
mov
cs
sub
gs
idiv
xlat
dec
nop
cmp
push
and
daa
jns
push
call
pop
lods
xchg
jae
call
in
in
nop
jmp
scas
xchg
cmp
(bad)
(bad)
call
xchg
out
push
push
hlt
lock
jg
in
loop
aas
mov
push
pop
add
xchg
sub
std
jmp
(bad)
(bad)
(bad)
jmp
adc
icebp
or
out
movs
jle
into
cdq
lea
mov
in
mov
sub
(bad)
(bad)
jmp
repz
add
inc
lods
cmp
not
aaa
cmp
in
pusha
aaa
jmp
(bad)
in
push
or
xchg
mov
pop
or
jmp
jbe
push
outs
jle
cmp
jnp
(bad)
mov
xchg
jbe
(bad)
mov
push
cmp
movs
or
cmps
and
mov
inc
mov
(bad)
(bad)
(bad)
fisttp
scas
jae
fimul
adc
cmp
cmp
stos
dec
mov
mov
adc
out
cmp
stos
imul
cmps
mov
imul
mov
imul
sbb
loop
pop
sar
(bad)
mov
cwde
and
sbb
mov
pop
test
repz
inc
in
sbb
iret
pushf
aaa
sub
mov
mov
or
loop
lahf
add
test
(bad)
mov
fstp
xchg
rol
cmp
sub
scas
sub
stos
in
es
(bad)
(bad)
jmp
in
icebp
(bad)
(bad)
push
dec
push
out
push
dec
hlt
push
mul
pop
dec
cmp
sbb
call
inc
xchg
sub
mov
sbb
jmp
ss
(bad)
dec
mov
loopne
out
les
jle
inc
xor
adc
sub
mov
(bad)
jmp
or
jmp
xchg
ret
cmp
mov
(bad)
(bad)
call
sbb
rcl
fs
adc
dec
sbb
das
ror
ins
jecxz
push
fst
jp
loopne
inc
bound
pop
fwait
dec
jg
(bad)
call
xchg
(bad)
xor
vcmpps
dec
shl
inc
cld
push
(bad)
(bad)
(bad)
push
push
jge
jae
sbb
and
fwait
mov
pop
rol
dec
sahf
iret
lods
in
inc
mov
jnp
pop
pusha
jge
sbb
(bad)
(bad)
(bad)
inc
push
mov
push
cmps
lea
movs
in
pop
push
(bad)
retf
or
mul
popf
icebp
repz
dec
push
(bad)
std
out
imul
cmp
mov
(bad)
(bad)
(bad)
push
cmp
call
test
movs
ds
daa
mov
mov
daa
dec
call
hlt
xor
and
dec
fild
lahf
push
lods
cmp
imul
aaa
(bad)
(bad)
(bad)
jmp
mov
sti
pop
fadd
mov
xor
xchg
sbb
cdq
adc
adc
popa
mov
push
out
sti
jb
out
mov
xchg
les
std
inc
shr
popa
std
lods
(bad)
(bad)
(bad)
jmp
idiv
jno
jo
sbb
jbe
jae
push
inc
(bad)
pop
(bad)
(bad)
ja
clc
(bad)
call
cmp
mov
cmp
pop
jbe
icebp
sbb
sub
lea
pop
sub
dec
xchg
mov
in
inc
cmp
xor
inc
cmp
(bad)
(bad)
inc
lds
add
cmc
add
out
out
(bad)
fistp
fsubr
xor
fdiv
(bad)
mov
aaa
in
ds
or
adc
push
ins
pop
cmp
call
cld
(bad)
(bad)
(bad)
cmp
popf
push
icebp
fnsave
dec
sub
pop
sbb
mov
xchg
pusha
movs
(bad)
xor
cmps
push
pop
jecxz
inc
in
imul
(bad)
call
(bad)
mov
add
cmps
out
repz
cmps
push
(bad)
outs
adc
jmp
cmp
repz
mov
out
clc
or
mov
pop
scas
or
(bad)
(bad)
push
ds
cld
push
xchg
and
retf
xchg
dec
jno
sbb
aaa
hlt
loop
retf
addr16
std
retf
(bad)
dec
fnstenv
pop
pop
loopne
sbb
bound
cmp
dec
mov
inc
fisttp
out
sbb
jmp
jge
add
cwde
jne
push
repnz
(bad)
jmp
(bad)
sbb
or
mov
xor
in
cmp
jp
cmp
cld
(bad)
(bad)
jg
cmp
shl
mov
mov
stc
jae
movs
jbe
xor
xchg
mov
cld
pop
jb
mov
pop
fcmovnb
pop
inc
neg
pop
pop
or
rol
xchg
dec
mov
(bad)
jmp
test
shl
call
mov
xor
arpl
mov
or
mov
test
xchg
shr
fs
out
ins
sbb
or
adc
shl
jg
mov
(bad)
mov
sti
inc
scas
imul
jge
cmp
pop
xor
(bad)
(bad)
(bad)
(bad)
stc
inc
(bad)
es
xchg
pop
mov
lahf
lea
cdq
pop
imul
je
push
mov
cmc
(bad)
jmp
xchg
aad
pop
sbb
out
xchg
xchg
mov
out
int3
xchg
mov
cli
(bad)
(bad)
jp
xchg
gs
push
mov
mov
fmul
pop
jmp
dec
and
out
das
loop
aas
jo
mov
mov
mov
ins
lahf
jmp
mov
jns
xor
scas
lahf
fild
(bad)
retf
pop
sub
xchg
ja
daa
dec
cwde
xlat
(bad)
mov
or
jge
je
fucomip
adc
mov
xchg
out
data16
(bad)
(bad)
jg
pop
inc
lods
call
mov
aad
mov
sbb
dec
fisubr
push
add
call
pop
pop
out
test
pop
xlat
jge
out
pop
xchg
movs
icebp
jg
enter
sbb
nop
jbe
popa
call
test
sub
stc
sbb
sti
test
ss
cli
push
cmp
push
es
inc
and
jno
xor
fs
nop
mov
push
fs
dec
into
sub
and
pop
(bad)
es
mov
hlt
nop
and
aam
cli
push
sub
loopne
adc
mov
adc
outs
fdiv
sbb
out
into
pop
mov
push
dec
xchg
into
ds
(bad)
(bad)
(bad)
call
dec
push
addr16
or
jg
jmp
(bad)
xor
call
fisttp
int
js
(bad)
jmp
iret
mov
push
mov
bound
add
in
pushf
repz
adc
cld
push
jl
cmps
mov
nop
stc
pop
shl
jg
jmp
(bad)
jecxz
mov
int
pusha
jb
jmp
out
imul
inc
or
mov
cmp
push
push
arpl
sub
adc
lahf
sub
mov
(bad)
cmp
(bad)
(bad)
std
jp
push
jle
(bad)
icebp
cmp
mov
bnd
push
cmp
(bad)
(bad)
dec
mov
fcomp
cmp
xor
or
int3
enter
push
sub
xchg
loop
nop
inc
and
pop
rcl
cmp
fist
fs
(bad)
(bad)
(bad)
jg
in
cmp
push
into
cmp
xchg
arpl
dec
gs
fimul
das
push
pop
pop
push
stos
ret
sar
and
ret
jmp
xor
(bad)
cmp
(bad)
(bad)
(bad)
fistp
jecxz
sub
fld
mov
add
pop
lock
jmp
outs
in
loope
xor
loopne
iret
push
jnp
(bad)
sub
(bad)
call
sbb
test
loop
sub
inc
stc
scas
aas
jg
adc
hlt
(bad)
jmp
(bad)
in
in
inc
(bad)
jg
xlat
outs
lock
scas
mov
not
jno
dec
jb
les
pop
cli
cli
stc
fmul
mov
enter
(bad)
jg
icebp
jmp
fimul
call
fldcw
(bad)
repnz
adc
movs
(bad)
jmp
xor
movs
fld
(bad)
mov
xchg
sbb
xchg
dec
test
in
and
add
mov
push
(bad)
scas
mov
fdiv
pop
loope
adc
mov
not
inc
cli
(bad)
(bad)
(bad)
jg
or
shl
popa
cld
sub
lods
mov
pop
sbb
jns
out
fsqrt
jmp
sbb
sti
cmp
popf
popf
in
js
push
aad
test
hlt
jg
mov
stos
arpl
lahf
jmp
call
xor
icebp
sbb
fidivr
dec
dec
outs
xlat
jno
dec
or
in
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
add
mov
jno
stos
ret
and
xchg
sbb
xchg
icebp
inc
dec
movs
in
inc
(bad)
push
pop
mov
(bad)
(bad)
dec
int
pop
jecxz
inc
or
pushf
out
bnd
mov
cmp
xchg
mov
sbb
fistp
push
loop
cmc
sbb
fucomp
retf
or
add
lock
cmp
jnp
mov
(bad)
pop
and
popa
aad
inc
mov
(bad)
in
cmp
xchg
and
add
das
pop
and
out
(bad)
sbb
jne
shl
shr
push
xchg
mov
(bad)
inc
pop
inc
ret
dec
push
sbb
(bad)
cmp
and
ret
xor
(bad)
(bad)
dec
cmps
jns
xchg
scas
mov
(bad)
pop
cvtps2pi
ins
movs
shl
out
push
xchg
push
xchg
cli
dec
and
in
mov
pop
mov
and
(bad)
(bad)
(bad)
push
dec
(bad)
out
jp
pusha
sub
jb
dec
hlt
xchg
fwait
add
daa
(bad)
nop
sub
add
inc
xor
cld
mov
mov
fdivr
sub
push
ss
mov
(bad)
sar
adc
sbb
es
(bad)
(bad)
(bad)
call
push
and
int3
mov
js
fs
ret
jae
fsubrp
mov
push
inc
std
das
add
out
retf
outs
sbb
(bad)
jg
mov
add
push
leave
mov
and
xchg
mov
das
test
dec
pop
fcmovbe
mov
jmp
ficom
sbb
hlt
cmp
(bad)
retf
dec
adc
add
lods
out
test
push
xlat
jmp
pop
and
and
cmps
shl
stos
fdivr
(bad)
dec
pop
repnz
sbb
loop
or
cmp
fidivr
call
inc
inc
pop
sub
push
rol
lods
xchg
cmc
(bad)
push
ret
jle
jb
loop
xchg
jg
(bad)
(bad)
ins
outs
add
in
pop
mov
mov
push
icebp
cld
dec
fs
mov
sti
ret
sub
mov
scas
repnz
jg
and
xchg
pop
imul
cmp
rcr
jmp
push
push
ror
into
(bad)
(bad)
(bad)
call
lahf
push
add
or
jmp
sub
stos
inc
lahf
out
pop
and
stos
jno
mov
retf
gs
(bad)
push
call
inc
mov
daa
pop
lods
std
add
call
bound
add
mov
aad
mov
(bad)
(bad)
mov
mov
sub
xchg
xor
pop
add
xchg
test
xchg
(bad)
jg
jmp
rcl
dec
jl
and
and
das
test
mov
add
add
(bad)
jmp
mul
nop
ins
repz
mov
arpl
test
in
mov
fisubr
call
mov
ds
sub
ret
call
in
dec
sub
verr
pushf
call
adc
mov
adc
mov
dec
ss
xchg
out
dec
int3
jmp
out
lea
dec
js
xchg
inc
popf
add
xor
cld
fs
(bad)
(bad)
mov
jmp
jno
dec
cmp
add
imul
std
(bad)
(bad)
(bad)
mov
std
mov
das
in
imul
xchg
test
jns
xor
sub
mov
sbb
mov
clc
push
mov
iret
(bad)
fcomip
call
test
mov
pop
outs
stos
jle
ss
cmp
fdiv
jmp
push
lds
sar
or
mov
mov
jno
call
sub
or
jg
cli
fdivr
pop
shl
inc
movs
fisttp
jae
stc
cmp
inc
fxch
icebp
xchg
inc
(bad)
(bad)
(bad)
jmp
mov
adc
(bad)
mov
int3
cmp
pop
dec
jg
sbb
aas
stos
scas
pop
cmp
(bad)
mov
cmp
pop
inc
rcl
cmp
loopne
out
or
and
stos
mov
jp
je
mov
sub
loope
sbb
sbb
sbb
les
(bad)
jg
inc
adc
jnp
inc
dec
mov
in
sahf
push
cmp
cli
mov
jb
pop
fistp
mov
jmp
scas
int3
cli
jge
in
xchg
clc
inc
(bad)
inc
and
clc
sub
inc
and
lods
xor
jg
fistp
repnz
mov
adc
aas
(bad)
daa
push
mov
scas
push
out
test
sti
(bad)
sbb
ins
shl
xchg
call
shl
push
push
pop
stc
xchg
das
(bad)
scas
inc
dec
add
fmul
scas
mov
xchg
test
(bad)
(bad)
(bad)
dec
scas
cli
inc
dec
fild
adc
nop
es
(bad)
jns
fwait
push
push
(bad)
xchg
cli
inc
mov
dec
in
loop
jg
(bad)
(bad)
jg
sub
pusha
addr16
pop
(bad)
jns
and
jge
cmps
inc
add
es
xchg
adc
bound
mov
jg
jge
cmp
and
jne
fs
ja
test
xchg
call
pop
pop
push
sbb
sbb
gs
stc
or
cwde
and
push
call
shl
xchg
stos
in
fs
test
mov
xchg
fstp
pop
lods
call
xchg
or
push
jo
std
push
dec
add
push
shl
and
cld
aas
(bad)
retf
xor
fcomip
jg
(bad)
push
push
pop
sbb
and
adc
xor
jnp
add
dec
mov
das
mov
icebp
daa
ret
add
inc
pop
add
jge
call
scas
lock
hlt
pop
out
fdivr
(bad)
jmp
or
repnz
mov
cmps
cli
inc
jne
aaa
mov
add
(bad)
(bad)
dec
inc
cdq
adc
fisubr
icebp
bound
scas
repz
or
jnp
jmp
adc
jge
sbb
(bad)
and
mov
in
pop
pop
jle
in
dec
inc
pushf
mov
sahf
das
inc
rol
repz
lds
in
(bad)
(bad)
(bad)
dec
movs
jg
sbb
addr16
call
jmp
add
ret
jo
pop
adc
in
sub
(bad)
jmp
fcomp
jle
inc
aad
loop
push
sub
out
adc
fwait
add
outs
rcl
pop
dec
ins
call
jmp
push
jb
adc
outs
sbb
fdivrp
call
inc
in
test
lods
enter
jmp
mul
lahf
push
jle
loopne
call
mov
out
gs
das
xchg
mov
mov
sar
and
mov
mov
mov
jmp
hlt
mov
pusha
je
fmul
push
mov
dec
adc
(bad)
push
cmp
ins
in
bound
jmp
xor
inc
in
repz
dec
inc
imul
xchg
inc
call
std
dec
dec
(bad)
jmp
cli
mov
imul
das
jae
enter
and
ins
repnz
pop
pop
cld
fisubr
(bad)
in
cmp
lock
(bad)
(bad)
push
daa
xor
(bad)
(bad)
(bad)
(bad)
(bad)
imul
aas
sbb
ret
loopne
jecxz
inc
jmp
mov
(bad)
aas
int
outs
clc
jmp
cmps
(bad)
sbb
sub
dec
mov
cmp
fidivr
(bad)
(bad)
mov
pop
mov
das
stos
std
je
cli
and
rol
(bad)
jg
adc
ins
iret
sub
mov
(bad)
cmp
dec
outs
jno
(bad)
(bad)
jmp
mov
mov
loop
jb
mov
fs
sbb
popa
xchg
pop
mov
lea
(bad)
(bad)
inc
jmp
les
cdq
iret
adc
sbb
xor
sahf
icebp
fbstp
(bad)
(bad)
stc
es
xchg
stos
test
mov
jb
pop
pextrw
xchg
inc
mov
jg
(bad)
(bad)
mov
sub
dec
add
jb
xchg
mov
(bad)
sub
fisubr
lea
or
js
mov
push
cli
or
(bad)
(bad)
call
ret
jmp
test
cmp
enter
imul
in
sub
add
cmp
(bad)
jecxz
cmp
out
adc
and
scas
add
jmp
stos
ins
loope
pusha
inc
pusha
cmps
lock
dec
fsubr
(bad)
(bad)
(bad)
jmp
dec
ins
sub
mov
jge
inc
ins
sbb
cmp
add
(bad)
retf
imul
sbb
xchg
in
ja
sub
(bad)
(bad)
jmp
jb
xchg
fucomip
std
js
mov
(bad)
cmp
push
dec
out
sub
xchg
fisttp
jle
mul
inc
rcr
call
sbb
jno
adc
in
dec
pop
fsub
(bad)
(bad)
fbld
stc
(bad)
and
lock
xor
push
mov
aaa
mov
and
call
outs
lods
vorps
mov
fucomip
mov
jmp
loop
ret
bound
call
jne
jg
jg
(bad)
push
lods
cmp
cdq
xchg
dec
jnp
stos
sub
outs
nop
jns
mov
mov
adc
inc
sti
pusha
ret
jae
pinsrw
shr
(bad)
mov
(bad)
std
push
dec
cli
mov
dec
cli
add
int3
cmc
jne
and
(bad)
(bad)
(bad)
inc
and
or
and
ins
retf
leave
loopne
int3
mov
retf
mov
sbb
pop
cmps
aas
cdq
leave
mov
call
mov
xchg
xchg
ret
push
lahf
(bad)
(bad)
(bad)
(bad)
aas
xchg
rep
outs
cs
jmp
movs
in
mov
xchg
pop
sub
xchg
mov
repnz
movs
push
(bad)
ffreep
(bad)
das
jp
push
arpl
hlt
sub
add
ds
imul
push
out
test
cmp
fldenv
(bad)
fcomip
(bad)
jns
pop
mov
adc
(bad)
stc
sub
scas
jmp
xchg
sbb
icebp
(bad)
inc
(bad)
in
push
test
xchg
and
js
mov
dec
and
push
inc
add
fmul
push
mov
nop
add
mov
fimul
ret
xor
cli
in
sar
into
jbe
in
cmp
sub
mov
mov
(bad)
inc
mov
cmps
push
stc
push
add
or
popa
test
pop
jae
sbb
(bad)
push
adc
jns
lock
lahf
push
loop
scas
adc
stos
mov
sbb
inc
mov
pop
pop
sbb
xchg
sti
sub
sub
cmc
mov
(bad)
call
jnp
cmp
clc
jle
hlt
clc
xor
or
add
(bad)
dec
adc
and
jp
into
xchg
jno
pop
push
out
es
std
fcos
(bad)
mov
stos
mov
mov
jge
push
push
es
(bad)
jg
jmp
mov
dec
cld
sbb
dec
push
mov
inc
cmc
add
mov
jbe
xlat
push
fwait
outs
push
pop
lock
jmp
pop
jb
lds
les
rcl
dec
sbb
call
sbb
test
lods
call
inc
icebp
gs
mov
aaa
sbb
inc
jmp
cs
fmul
dec
outs
xchg
add
lods
push
add
js
retf
sbb
add
mov
lods
ret
push
dec
(bad)
add
jb
(bad)
(bad)
out
and
jnp
(bad)
cld
icebp
sti
in
mov
xor
pop
out
outs
cli
(bad)
jmp
xor
and
lahf
inc
and
cld
gs
(bad)
inc
xor
retf
repz
cmp
clc
lods
(bad)
(bad)
(bad)
fbstp
push
sbb
adc
jb
test
mov
cmps
add
mov
(bad)
(bad)
jmp
jno
sbb
mov
(bad)
sub
pusha
lods
sbb
cmp
mov
dec
fs
call
jne
xchg
fidiv
add
ja
xchg
daa
pop
fwait
push
aad
push
std
fdivr
lock
xchg
dec
or
out
(bad)
(bad)
jg
xor
pushf
jae
in
dec
mov
jmp
pop
fbstp
std
jo
(bad)
(bad)
mov
ja
lds
mov
cwde
(bad)
cmp
das
sti
and
push
stos
aaa
retf
jnp
pop
call
std
dec
cmp
mov
mov
mov
fstp
(bad)
sbb
cmp
mov
inc
fcom
std
(bad)
cmp
and
(bad)
(bad)
mov
popa
int3
pop
rcr
adc
inc
or
enter
ret
jl
inc
pop
(bad)
cwde
cmp
jmp
xor
loop
and
pop
out
mov
dec
neg
xor
imul
ret
icebp
dec
add
mov
cmp
scas
(bad)
ins
clc
(bad)
push
out
int
popf
out
daa
mov
stos
sub
xchg
int3
mov
inc
(bad)
ins
cwde
iret
fld
adc
and
outs
mov
(bad)
mov
mov
stos
popa
add
push
push
js
(bad)
(bad)
jmp
sar
sub
ja
mov
jmp
in
sub
mov
sti
dec
cld
jg
mov
sub
idiv
dec
dec
ret
jae
add
(bad)
(bad)
jg
call
or
fisttp
mov
call
out
or
ja
fisttp
adc
pop
(bad)
(bad)
push
rol
fistp
not
dec
mov
cmc
aas
jb
(bad)
(bad)
call
fs
stos
and
dec
je
out
xor
jnp
pop
arpl
cmps
(bad)
out
jb
clc
cmp
aaa
mov
jns
push
jbe
pop
sub
(bad)
(bad)
call
xlat
int3
(bad)
call
xor
xchg
sub
push
lods
shl
cdq
xchg
xchg
cmp
sbb
(bad)
push
std
daa
xlat
dec
add
fisub
into
(bad)
in
test
movs
imul
push
mov
call
shl
sub
mov
call
ror
test
adc
outs
stos
push
fiadd
in
adc
pop
lock
cld
scas
dec
test
ret
lock
dec
adc
cmp
in
dec
in
idiv
lods
ins
mov
call
ja
push
das
cli
add
(bad)
adc
cmc
in
push
mov
xlat
(bad)
adc
sti
inc
mov
mov
mov
(bad)
(bad)
push
push
xchg
in
jne
iret
call
dec
cmp
sub
test
cs
aad
inc
(bad)
mov
dec
xchg
outs
sub
adc
es
(bad)
loop
hlt
mov
iret
mov
std
jg
mov
mov
push
xor
cmp
cwde
push
les
inc
loop
mov
jne
sbb
mov
into
sbb
jne
jnp
mov
scas
mov
jg
inc
push
sar
push
xchg
jecxz
pop
adc
in
(bad)
(bad)
call
fmul
repz
cmp
cs
add
call
push
cdq
xor
in
(bad)
(bad)
call
retf
loopne
loop
sub
(bad)
mov
pop
mov
mov
(bad)
pop
dec
mov
inc
jg
repz
cmp
cld
aas
movs
xlat
inc
out
scas
dec
mov
jg
(bad)
(bad)
(bad)
dec
add
gs
xchg
push
jae
adc
or
pop
repz
sbb
push
xor
in
or
push
xchg
dec
jg
mov
ja
cmp
(bad)
(bad)
push
sahf
pop
aas
cmp
sahf
and
sub
leave
sub
inc
(bad)
shl
mov
std
cmps
sbb
cmps
xchg
icebp
arpl
xchg
jg
nop
pushf
fild
jge
ds
cmp
push
mov
(bad)
mov
xchg
jg
push
outs
(bad)
(bad)
cld
jae
lds
push
into
dec
jno
test
(bad)
in
(bad)
call
call
in
sbb
outs
stc
cmps
es
clc
dec
xchg
fistp
xor
pop
xor
sar
adc
fild
call
cmc
lahf
loopne
mov
clc
jge
xchg
push
nop
(bad)
xchg
ins
retf
mov
fistp
cdq
cmps
loope
lods
mov
jb
(bad)
(bad)
(bad)
call
out
loope
cmp
scas
jnp
lods
dec
clc
imul
in
lods
xchg
sbb
nop
jp
mul
mov
cs
mov
(bad)
(bad)
jns
stos
cld
repz
addr16
fnsave
jns
jg
call
jp
cmp
cdq
xchg
(bad)
inc
ins
mov
jno
adc
aad
push
(bad)
dec
loop
loopne
shl
mov
call
(bad)
ins
adc
(bad)
loope
cmp
mov
fist
arpl
cmps
or
dec
ja
sar
retf
sub
xlat
xor
or
xchg
sub
(bad)
jnp
enter
adc
test
pop
ins
loopne
cmp
rcl
shl
test
shl
popa
xchg
call
(bad)
call
dec
pop
(bad)
mov
pop
mov
xor
inc
(bad)
inc
push
mov
mov
or
fs
(bad)
(bad)
dec
aaa
fwait
mov
es
int3
lods
cmp
mov
inc
push
dec
jnp
jmp
gs
(bad)
(bad)
call
idiv
or
int
bnd
xchg
sbb
dec
pop
dec
sbb
sbb
or
or
jmp
(bad)
jns
adc
aad
and
ja
(bad)
inc
or
in
aad
dec
push
das
or
inc
mov
pop
fwait
pop
out
(bad)
stc
bound
(bad)
jg
sti
mov
dec
lods
and
push
shl
dec
adc
dec
in
movs
(bad)
mov
pop
mov
push
add
(bad)
jmp
jnp
loope
xchg
inc
sub
pop
gs
in
jmp
fs
lods
jbe
xchg
add
int
aas
cmp
(bad)
inc
add
aad
fld
arpl
mov
mov
xor
xchg
pop
das
sub
bnd
push
pop
pop
xchg
outs
or
test
cwde
cli
jo
and
jp
sar
jecxz
or
shr
loope
sbb
cmp
adc
mov
pop
movs
add
hlt
(bad)
inc
jns
xchg
push
xchg
mov
inc
scas
mov
jmp
adc
cmp
(bad)
sub
clc
fisub
test
cmp
push
hlt
cli
jle
addr16
mov
imul
push
outs
dec
pop
jae
lods
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
arpl
lock
mov
push
fild
mov
mov
add
ja
stos
mov
arpl
das
(bad)
(bad)
cmp
dec
test
xchg
push
ror
bound
or
pop
add
(bad)
(bad)
jno
scas
mov
inc
(bad)
pop
(bad)
cwde
inc
xchg
jmp
cmps
sub
jmp
mov
adc
adc
and
ss
jbe
xchg
push
out
adc
jmp
mov
xor
cld
data16
jmp
(bad)
jmp
cdq
sar
fstp
js
(bad)
stos
scas
call
push
sbb
(bad)
(bad)
call
dec
retf
das
retf
add
out
mov
and
mov
test
cdq
outs
add
int3
adc
jg
(bad)
jmp
cmp
fldpi
movs
cmps
mov
es
cmp
jmp
add
pop
jp
jmp
inc
mov
xchg
add
sub
xor
(bad)
call
sbb
outs
sub
or
imul
or
scas
mov
test
jmp
icebp
push
adc
aad
mov
xor
xchg
(bad)
pop
pop
ss
rcl
pop
call
inc
xchg
je
repnz
shl
(bad)
(bad)
(bad)
fbld
fcomp
outs
pop
jae
jae
jno
xchg
push
add
cmp
pop
push
sub
mov
stc
cmp
std
jl
pusha
movs
cmc
mov
fist
rcr
(bad)
(bad)
dec
nop
imul
or
xchg
xchg
or
jl
psubb
sbb
xchg
outs
fdiv
and
mov
movs
test
pushf
scas
mov
(bad)
popa
call
xor
xchg
mov
popa
into
jnp
sbb
cmp
ins
loop
and
out
rol
mov
xchg
clc
jmp
enter
test
fs
lock
dec
sbb
inc
loop
sbb
retf
jle
(bad)
dec
adc
cdq
mov
cmc
js
cwde
(bad)
mov
ret
mov
es
pop
call
(bad)
(bad)
(bad)
movs
xchg
in
xor
pop
mov
adc
clc
adc
or
xchg
jmp
imul
fisubr
into
and
das
push
jnp
mov
or
loopne
fst
nop
or
or
sub
test
(bad)
lods
cmps
cmc
push
out
xchg
mov
loop
aam
adc
inc
sar
(bad)
dec
mov
outs
je
sub
push
cmc
sub
movs
lods
add
stos
hlt
(bad)
(bad)
(bad)
jg
aam
aam
push
pop
inc
outs
and
jmp
push
dec
shl
sbb
xor
cld
dec
cs
mov
push
jmp
(bad)
(bad)
(bad)
inc
(bad)
fmul
jmp
iret
xchg
xchg
inc
mov
lds
stos
(bad)
out
mov
fisubr
inc
push
rcr
cmc
mov
ja
repnz
mov
call
arpl
repnz
(bad)
cdq
pop
mov
ja
stos
(bad)
adc
xor
out
push
iret
sbb
retf
(bad)
(bad)
(bad)
jmp
mov
push
xchg
cwde
mov
sub
or
in
add
add
dec
inc
(bad)
movs
aad
cmp
clc
sahf
pusha
mov
retf
in
es
hlt
std
(bad)
jg
push
jp
mov
stos
xor
or
je
imul
cwde
mov
mov
out
mov
test
dec
mov
enter
sub
gs
pop
push
ins
and
adc
cmps
dec
jb
pushf
sbb
stos
lahf
(bad)
(bad)
(bad)
push
cs
test
cmp
jnp
jbe
stos
sub
movs
(bad)
(bad)
(bad)
call
(bad)
fcmove
ret
mov
xor
jae
lea
add
sar
(bad)
(bad)
inc
ja
arpl
or
ss
shl
cmps
sub
sahf
into
pop
stos
rcr
(bad)
(bad)
call
jmp
mov
retf
or
(bad)
add
jg
sub
popa
(bad)
in
adc
cli
pop
hlt
shl
push
mov
xchg
outs
xor
jmp
pop
add
xor
xchg
mov
outs
cli
loope
(bad)
(bad)
(bad)
(bad)
mov
icebp
jno
sub
cmc
jge
inc
pop
aaa
add
gs
mov
sbb
pop
mov
push
push
scas
repz
add
fsub
add
dec
movs
xchg
mov
jb
popa
retf
xchg
cmp
out
xor
test
xchg
inc
jmp
stos
pop
pusha
rol
pop
hlt
(bad)
(bad)
dec
inc
pushf
sbb
pop
shl
bound
loope
fmul
cdq
or
jns
daa
std
add
pop
pop
popf
push
adc
or
sbb
cld
(bad)
call
lods
scas
cs
and
clc
pop
jle
repz
call
mov
es
dec
dec
(bad)
cmp
inc
sbb
pop
das
call
(bad)
mov
out
call
ror
inc
out
call
cs
repz
icebp
push
push
std
fld
jecxz
jge
dec
aas
iret
das
jnp
or
sbb
mov
pop
mov
jmp
in
je
mov
fiadd
jmp
inc
xchg
fmulp
out
gs
mov
frstor
cmp
std
(bad)
mov
dec
clc
add
pushf
loop
cmps
push
sub
xchg
jmp
mov
rcr
(bad)
(bad)
jmp
repz
mov
pop
xchg
mov
jbe
leave
aas
push
out
pop
(bad)
(bad)
(bad)
(bad)
cmp
and
jmp
imul
in
pop
rcl
dec
xchg
inc
ja
lods
push
jge
std
(bad)
(bad)
out
mov
dec
loope
data16
inc
in
int3
in
xchg
jg
test
sar
jmp
xor
retf
mov
inc
repz
pushf
inc
cld
mov
push
push
mov
out
mov
daa
jg
jg
sbb
not
push
sub
mov
popf
xor
(bad)
(bad)
(bad)
dec
into
xchg
jmp
clc
mov
pop
mov
lods
dec
add
adc
mov
xchg
les
dec
xchg
call
adc
jl
push
dec
sti
pop
sahf
mov
jo
xor
jae
sbb
call
stos
(bad)
sti
inc
popa
inc
sbb
outs
movs
movs
(bad)
(bad)
jg
xor
test
push
ret
pop
xchg
xchg
(bad)
jmp
clc
call
mov
push
pop
push
fld
dec
xor
pop
data16
pop
pop
xor
(bad)
(bad)
(bad)
(bad)
pop
shl
mov
shl
xor
push
(bad)
mov
jecxz
icebp
xchg
test
(bad)
call
shl
dec
.byte
