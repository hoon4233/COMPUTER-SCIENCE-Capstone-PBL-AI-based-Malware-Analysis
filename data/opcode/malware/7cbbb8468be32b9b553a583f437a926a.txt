mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
adc
add
or
cwde
or
or
jbe
pop
stos
add
cli
mov
test
je
cmp
je
int
add
add
push
cmp
je
lea
rol
mov
pop
push
les
push
add
or
inc
add
push
and
pop
pop
ret
push
or
call
or
mov
add
leave
mov
sub
es
cmp
jmp
test
or
pop
cmp
jne
mov
cmp
inc
ins
ret
enter
mov
push
push
aaa
or
lock
add
popa
dec
and
mov
push
lahf
mov
pusha
xchg
mov
ret
lock
and
stos
in
jb
push
dec
pusha
cmp
add
psadbw
lock
mov
push
pop
pop
sub
xor
ja
mov
and
adc
mov
pop
sub
or
dec
add
aaa
jmp
repz
loopne
xor
(bad)
push
pusha
inc
jmp
mov
push
add
add
xor
clc
push
(bad)
cmp
push
xor
repnz
push
inc
in
mov
dec
int3
xor
cmp
sahf
or
xchg
ror
inc
rcl
or
aas
push
dec
mov
imul
dec
pop
in
add
jnp
adc
jne
int3
or
lock
dec
test
add
aaa
sar
add
push
add
xchg
ds
pop
cwde
add
xor
or
dec
or
cmp
ja
push
push
mov
jmp
lods
fwait
lock
lea
lahf
xchg
and
je
or
or
or
mov
sar
stos
(bad)
jb
xor
push
mov
dec
popf
push
dec
push
inc
adc
call
loop
add
mov
mov
aaa
cmp
or
push
cmp
retf
popa
inc
xor
add
mov
jge
pop
cmp
mov
lock
mov
add
adc
mov
jmp
mov
cmp
pop
mov
sahf
add
sbb
enter
mov
sub
adc
xor
sbb
cld
or
sbb
fnstcw
jge
push
inc
ret
push
jno
sub
jle
add
jl
es
pusha
out
adc
pusha
push
pop
mov
and
push
mov
dec
cmp
xchg
icebp
in
test
xor
into
add
jno
pop
add
pop
sar
je
or
sub
or
jae
in
mov
mov
xor
inc
add
mov
sub
jmp
add
fld
mov
and
(bad)
adc
sub
lea
or
add
add
add
retf
add
cmp
lods
mov
int3
loope
mov
(bad)
stc
pop
pop
pop
mov
das
mov
and
lods
mov
mov
xchg
inc
add
mov
cdq
add
mov
pop
hlt
sub
mov
loop
clc
push
mov
pop
clc
xchg
add
dec
out
adc
inc
mov
inc
xor
fdivr
inc
push
lea
pop
inc
sub
push
pop
adc
jns
pop
(bad)
(bad)
cld
jl
xor
inc
scas
jno
clc
mov
pop
leave
cmc
push
mov
(bad)
inc
je
jle
jl
imul
call
jle
jge
fsub
dec
or
test
rcr
adc
daa
aas
sbb
push
jbe
sbb
pop
je
mov
xchg
aaa
add
stos
std
or
loopne
dec
push
add
mov
sub
aam
ror
sti
jbe
xchg
cmp
pop
adc
cs
push
cdq
push
add
push
pop
mov
pop
add
pop
mov
int3
pushf
push
mov
add
retf
mov
sub
cmp
mov
xchg
sub
dec
sbb
lea
cmps
xor
stc
mov
or
or
adc
add
add
push
push
sub
push
add
push
lahf
or
call
pop
pop
loop
xlat
les
in
mov
shl
(bad)
jbe
jno
inc
gs
sbb
pop
loopne
in
shr
xor
mov
and
add
cmp
jae
push
pop
sub
cmp
ja
or
in
cmps
arpl
inc
jecxz
hlt
dec
add
jae
jmp
mov
pushf
into
inc
lock
mov
inc
dec
in
loop
pop
sbb
sub
bound
outs
mov
pusha
(bad)
sub
dec
ins
sbb
adc
jns
push
cmps
sbb
not
test
xchg
inc
xor
push
mov
pop
mov
dec
cmp
mov
repz
push
cmp
cmp
push
push
mov
call
int
(bad)
jle
cmp
cmps
loope
xchg
inc
pop
or
(bad)
jmp
mov
or
ret
loopne
cwde
cmp
jle
add
jno
or
add
jge
int3
popa
sub
cmc
adc
push
mov
lea
stos
cmp
hlt
cld
add
dec
sub
and
pop
leave
ror
add
data16
cld
lods
test
push
push
mov
xchg
ins
push
cmp
(bad)
xchg
push
dec
arpl
cwde
ins
or
inc
xlat
dec
sbb
or
xor
push
pop
ja
pop
call
jmp
xor
or
cmp
jae
mov
(bad)
push
into
xchg
cdq
or
dec
add
sar
(bad)
sbb
pop
neg
cli
mov
xchg
dec
adc
add
sti
mov
xchg
(bad)
imul
mov
jbe
push
dec
pop
inc
inc
jbe
jno
xchg
pop
bound
xchg
popa
in
test
mov
bound
data16
xchg
aas
cmps
add
xor
push
dec
ja
or
sub
add
fcomp
or
jge
sub
inc
adc
fiadd
or
ja
hlt
movs
sahf
(bad)
rol
cmps
dec
or
cmps
(bad)
pop
es
and
sub
or
and
in
ja
push
gs
cmp
cmp
sbb
ja
sub
cmp
sbb
ins
cmp
jne
push
add
ror
pop
inc
pop
mov
sub
jmp
adc
or
test
sbb
aaa
jg
or
dec
sbb
cmp
adc
inc
push
or
sub
push
add
push
push
push
int3
cmp
ins
and
or
ret
push
call
movs
pop
loopne
add
jno
dec
mov
fldcw
out
retf
stos
ds
jl
aas
ficomp
stc
loop
scas
mov
stos
mov
(bad)
sub
mov
xchg
pop
add
or
(bad)
lock
dec
sbb
mov
add
(bad)
jmp
clc
retf
mov
jmp
jo
cld
ins
pop
out
lock
out
lods
fwait
leave
ds
fldenv
or
dec
mov
pop
test
add
jae
das
inc
cmp
and
cwde
xchg
mov
sub
push
and
cmp
mov
sub
jo
popf
je
movs
mov
shl
rcl
and
mov
or
push
loopne
cmps
les
mov
pop
mov
aas
scas
into
in
in
loop
in
fs
movs
lea
jne
mov
ins
or
push
adc
cmps
gs
add
nop
cmps
dec
mov
ins
mov
es
je
call
inc
in
ds
pop
jecxz
and
call
sti
or
mov
add
sub
xor
out
push
or
inc
enter
mov
arpl
push
mov
std
inc
rcl
sub
pop
jl
in
sbb
cmp
mov
and
and
clc
add
inc
push
mov
aas
sbb
pop
fmul
lahf
push
pop
add
enter
(bad)
inc
sub
mov
inc
mov
cmp
icebp
add
pop
push
xchg
je
adc
mov
fcmovbe
inc
pop
cli
mov
fcomp
xor
out
inc
data16
or
shr
add
into
mov
rcr
sar
loope
shl
and
xchg
cs
jbe
inc
pop
pop
ret
(bad)
bound
push
shr
jo
in
shl
or
add
xchg
pop
cli
inc
not
and
and
fmul
int3
xor
sbb
cmp
je
add
arpl
cmp
jb
inc
fcom
add
mov
ret
mov
shl
add
jmp
lods
loopne
push
add
fldenv
ret
jmp
sti
imul
adc
dec
imul
xchg
les
add
js
call
cmp
je
lock
add
imul
out
inc
ja
mov
mov
(bad)
cmp
je
and
daa
mov
into
aad
mov
inc
mov
mov
mov
jbe
or
pop
jmp
push
push
sub
and
stos
cmp
nop
xor
dec
mov
(bad)
cwde
cmp
xchg
(bad)
fst
fstp
dec
jns
push
or
jge
add
mov
cmp
adc
sub
imul
add
add
mov
cwde
rol
or
add
push
add
fdivrp
push
adc
and
add
push
pop
ja
xor
das
dec
sbb
push
rol
pop
in
mov
pop
xchg
mov
outs
xor
enter
rcl
cwde
mov
pop
xchg
fwait
push
pop
cmp
rcr
dec
push
dec
ror
jo
mov
mov
cmc
out
or
stc
or
mov
xchg
xor
mov
pop
cli
push
xchg
inc
out
adc
adc
jns
mov
pop
movs
inc
jp
inc
sbb
push
pop
fs
adc
mov
dec
leave
imul
xchg
sub
dec
daa
jl
push
push
cmp
test
add
lea
test
mov
idiv
push
in
arpl
or
xlat
sub
pop
dec
nop
lea
mov
repnz
or
(bad)
retf
sub
xchg
xor
mov
sar
sbb
inc
push
(bad)
push
sbb
or
out
pop
ins
jno
fwait
lds
fnsave
test
dec
dec
ins
sbb
sti
pop
sbb
jb
mov
adc
loopne
lahf
and
icebp
pop
(bad)
fdiv
rol
sub
push
inc
jge
int3
add
scas
inc
add
push
add
test
sbb
add
icebp
addr16
add
inc
add
add
(bad)
loopne
push
jmp
jns
cmp
aam
adc
loopne
sbb
cmp
cmp
jae
push
xchg
fisttp
sub
fs
or
mov
sub
call
clc
inc
mov
cmp
or
and
popf
fdivr
retf
xchg
jecxz
sbb
or
cmp
jge
jg
pop
or
fcmovbe
mov
push
mov
shl
lock
push
xor
cmp
cdq
jne
scas
lock
out
xchg
repnz
scas
pop
add
iret
add
add
jmp
iret
dec
cwde
pop
push
js
cld
or
ins
cwde
jo
icebp
dec
mov
push
push
ret
cwde
mov
or
test
xor
std
cmp
push
push
hlt
xor
ja
jge
call
mov
loope
loop
cld
stc
test
(bad)
adc
or
imul
mov
mov
cmp
cmp
xor
jmp
push
push
pop
cmps
sub
push
mov
pop
sbb
(bad)
leave
xor
fst
push
int
xor
lahf
pop
pop
test
push
xchg
inc
pop
inc
xor
xchg
mov
out
adc
fisttp
stos
sub
test
jne
call
inc
mov
inc
and
or
push
movs
js
push
adc
mov
xchg
or
sbb
inc
loopne
mov
sar
inc
adc
dec
ror
xor
jb
je
mov
aad
sub
dec
or
dec
and
add
lea
dec
neg
jo
in
and
stc
scas
push
xchg
add
pop
fcomp
cmp
je
mov
or
stos
clc
cmp
jbe
mov
mov
push
cdq
and
adc
sub
xor
push
out
je
push
dec
xor
or
dec
adc
pop
pop
mov
imul
ins
imul
xor
xor
mov
out
push
ds
in
je
enter
cmp
lods
test
mov
nop
fisub
dec
jp
inc
sbb
std
pop
push
adc
pop
fwait
shl
xor
sub
xor
sub
or
test
mov
push
mov
call
ja
cdq
xor
push
outs
aad
pop
sub
loop
fcomp
aaa
xchg
sbb
scas
cmp
dec
js
shl
clc
sub
mov
fs
mov
mov
and
fcmovb
xor
or
sbb
adc
hlt
xor
iret
test
movs
jne
(bad)
mov
pop
lds
dec
sbb
push
xor
div
or
jb
repz
mov
(bad)
(bad)
pusha
fdiv
push
jae
sbb
inc
pop
cmp
push
jno
inc
js
adc
adc
adc
cmp
clc
push
push
fst
dec
test
sub
jbe
sbb
(bad)
call
arpl
mov
mov
dec
lds
jns
test
dec
mov
movs
cmp
or
shr
xor
cmp
sbb
js
push
sub
sbb
mov
add
sub
add
enter
jl
and
popa
fmul
xchg
pop
js
push
cmp
ins
or
mov
popa
(bad)
push
mov
sbb
adc
movs
push
and
cmps
xor
cmp
mov
cmp
xor
push
dec
shr
loopne
test
mov
bound
pop
and
add
add
mov
adc
dec
mov
xchg
dec
mov
adc
xchg
push
or
clc
and
inc
jae
or
add
sub
daa
xchg
jmp
shr
or
int3
mov
mov
or
loop
cmp
(bad)
out
push
inc
push
movs
scas
mov
push
mov
add
xchg
add
pop
retf
and
stc
mov
jmp
fdivr
jbe
movs
(bad)
xor
or
xchg
imul
pop
pop
mov
and
fcom
inc
jno
cmp
cmp
pushf
imul
int
in
pop
mov
jbe
mov
push
push
fiadd
add
xor
repz
ja
or
jmp
sub
push
cmp
cli
jnp
les
adc
rcl
ret
gs
add
mov
xchg
jmp
pop
ds
ss
or
sub
xchg
lea
out
cmp
rol
jecxz
in
push
xor
cmp
push
add
mov
movs
push
mov
sbb
popf
mov
sub
sbb
stos
add
or
add
sub
mov
mov
xchg
in
xchg
or
and
sbb
mov
mov
movs
cwde
das
xor
daa
mov
push
sub
mov
dec
cmp
adc
sub
popa
inc
or
ret
and
into
xor
push
addr16
mov
xchg
loop
sub
mov
cmp
inc
das
jp
clc
xor
cld
and
std
test
jecxz
jnp
cld
push
pop
pop
je
sub
ss
fst
sar
jp
je
mov
and
(bad)
adc
jg
or
lds
xchg
sbb
mov
jnp
sbb
(bad)
mov
lock
mov
adc
or
xchg
mov
xchg
mov
and
mov
push
std
or
lods
push
jnp
xchg
mov
push
aam
pop
adc
cmp
pop
cs
or
pushw
test
cmp
pusha
add
push
loopne
xor
fs
sbb
cmp
and
js
push
push
push
and
shr
mov
mov
cmp
jb
inc
cmp
jb
or
daa
(bad)
(bad)
cmp
das
in
sbb
add
inc
push
stos
and
aam
and
or
arpl
gs
jecxz
and
ins
cmp
add
jbe
mov
arpl
imul
sbb
or
mov
and
sbb
pop
adc
in
inc
mov
ins
jb
mov
sub
arpl
dec
mov
and
mov
adc
xchg
dec
adc
jbe
outs
sbb
pop
icebp
aad
and
inc
inc
pop
mov
xchg
aad
inc
inc
mov
xchg
push
adc
adc
or
and
push
push
daa
inc
cmp
enter
add
fcmovu
cmps
into
jg
je
sbb
jle
mov
jmp
inc
and
mov
sub
aas
sbb
push
or
cwde
test
jbe
sbb
lea
or
aam
hlt
push
sub
add
daa
mov
pop
sub
and
sub
push
rcr
mov
add
(bad)
cmp
sbb
push
cmc
call
sbb
or
rcr
jmp
sti
and
push
add
sbb
or
and
scas
mov
adc
add
jo
adc
cmp
add
mov
je
or
fadd
xchg
movs
push
fmul
jge
and
jno
in
push
into
test
das
hlt
test
xor
les
mov
repz
sbb
dec
jecxz
mov
lds
ss
pop
adc
arpl
mov
icebp
dec
(bad)
mov
mov
cmp
ds
sub
in
add
mov
pop
add
or
inc
push
push
adc
fwait
clc
bound
mov
sahf
hlt
or
je
add
dec
xchg
int3
shl
pop
fwait
dec
sbb
rcl
sbb
push
call
sbb
sbb
push
ror
sub
mov
icebp
jecxz
stos
dec
jmp
add
adc
jne
mov
adc
add
inc
xchg
fmul
fwait
jo
pop
in
adc
fisttp
test
cdq
shl
push
adc
shr
sar
shr
inc
or
add
cwde
(bad)
cld
adc
psrlw
loopne
into
sbb
retf
push
inc
mov
dec
add
aad
xor
adc
xor
push
xor
and
and
jle
nop
popf
mov
sbb
inc
mov
ds
sar
cs
(bad)
or
cld
add
iret
pop
mov
xchg
cmc
outs
xchg
adc
in
sub
push
add
xchg
xchg
retf
(bad)
nop
js
add
push
jb
or
lahf
add
jmp
ins
fidiv
push
adc
dec
popa
sub
adc
sbb
or
xor
ror
mov
mov
jp
ror
pop
enter
mov
popf
ss
or
mov
arpl
int3
xor
mov
dec
or
not
push
in
pop
sub
xchg
shl
and
pop
daa
in
sbb
jle
dec
push
sbb
xor
mov
add
adc
lea
movs
ret
dec
xchg
ret
sbb
ins
fs
scas
cmp
push
push
jb
cs
push
inc
(bad)
stos
das
(bad)
jg
das
mov
fs
jo
cmps
jge
or
pop
push
push
mov
or
adc
retf
scas
gs
mov
or
je
cmps
loope
ror
cmp
mov
(bad)
adc
aad
int
add
lea
sbb
(bad)
and
sbb
mov
sub
add
dec
leave
add
xor
cld
xor
sub
xchg
mov
mov
retf
xor
dec
sub
push
sub
pop
es
push
mov
mov
out
push
mov
out
jbe
inc
push
add
xor
cdq
jno
xor
shl
xor
mov
push
adc
mov
add
clc
add
out
rcr
mov
(bad)
xchg
sub
andnps
push
push
fwait
jl
pop
outs
shl
add
push
ret
or
add
movs
inc
lods
add
lea
adc
cli
inc
sti
dec
int3
xor
push
mov
add
clc
jne
xor
add
jbe
das
sbb
jno
leave
pop
mov
add
shl
and
sub
mov
ins
sbb
rol
xchg
mov
push
fisttp
xchg
mov
dec
lock
push
lods
lea
or
mov
mov
mov
sub
jne
jle
push
xor
shl
jp
pop
inc
leave
adc
ja
push
pop
test
inc
retf
xor
lock
outs
(bad)
inc
sub
push
int3
push
push
stos
mov
arpl
push
or
push
adc
shl
mov
cmp
loope
scas
sub
mov
mov
jmp
rol
cmp
lock
push
fimul
test
fs
dec
(bad)
jmp
fldenv
cs
mov
aam
add
fwait
add
in
ds
not
jecxz
sbb
xor
push
movs
or
jmp
sbb
mov
pop
data16
jae
stc
ds
popa
xor
pusha
stos
loopne
jae
pushf
fsub
push
or
shl
call
mov
push
mov
popa
lock
jnp
mov
sub
mov
arpl
push
int
jb
imul
nop
inc
int3
adc
pop
pusha
(bad)
enter
shl
and
add
je
push
pop
adc
rol
or
call
or
or
push
push
mov
or
xor
call
fisub
or
push
test
jne
push
push
adc
or
call
or
pop
push
pop
add
(bad)
add
push
dec
movzx
lea
jne
test
mov
inc
imul
mov
push
out
push
push
cmp
sbb
les
ds
popa
mov
pop
pusha
shl
mov
xor
inc
in
sub
push
mov
push
fild
loopne
fwait
xchg
inc
dec
movs
mov
lods
popf
arpl
jns
cdq
dec
popa
or
ds
sub
push
inc
das
push
sub
add
xor
adc
rcl
jbe
retf
push
fadd
movs
leave
and
pop
daa
sub
inc
jl
jne
(bad)
pop
xor
inc
xor
test
shl
daa
dec
in
movs
ror
push
or
pop
xor
cld
je
cmps
leave
inc
cld
mov
sub
das
or
mov
dec
ins
add
ficomp
div
(bad)
and
(bad)
push
sub
retf
fistp
or
push
or
or
add
add
add
clc
cmps
jb
aam
jge
into
retf
dec
or
test
int3
mov
mov
mov
sub
mov
push
cmp
inc
jae
xor
jno
add
mov
ret
pusha
sbb
inc
adc
imul
inc
inc
pop
mov
jno
jp
outs
mov
out
sub
in
fwait
add
pop
push
and
rcl
test
cmp
mov
jbe
retf
lds
lds
sbb
fisttp
mov
xor
mov
push
mov
pop
daa
sub
cmps
sub
and
cdq
(bad)
adc
pop
push
xlat
pop
push
xor
data16
push
cmp
push
mov
lods
dec
mov
fcomp
mov
je
mov
inc
mov
cli
jmp
je
xor
add
adc
pop
pop
add
loop
pop
or
xor
in
cmp
mov
aas
pop
add
in
icebp
test
stc
test
inc
pushf
jg
mov
movs
ret
push
xor
loope
pusha
imul
or
adc
xor
mov
cmp
lea
xor
sbb
push
push
pop
rcl
jo
ret
jne
lea
dec
push
in
push
xchg
cs
sbb
inc
ja
xor
sbb
test
into
xor
ror
(bad)
ret
mov
ins
adc
aas
bound
jb
cmp
mov
fcom
push
push
push
test
adc
loop
dec
mov
sbb
mov
xchg
lods
xchg
push
xchg
or
in
inc
out
aad
push
adc
cmc
push
enter
jmp
cs
(bad)
fist
mov
mov
push
lods
jecxz
xchg
rol
je
lea
push
call
jmp
cdq
test
jbe
cmp
adc
pop
repz
mov
add
add
xchg
test
or
xor
mov
stos
inc
cld
stos
push
fwait
enter
enter
ds
ds
or
mov
clc
cli
mov
and
push
test
add
pop
jns
stos
and
(bad)
xor
outs
mov
dec
sbb
arpl
or
gs
xchg
aas
icebp
push
push
jae
clc
jne
(bad)
xor
push
mov
mov
test
ror
sbb
adc
das
push
xchg
iret
test
mov
mov
(bad)
fs
or
add
dec
ja
xor
push
add
or
stos
mov
pop
addr16
shl
add
and
add
add
or
mov
inc
hlt
stos
scas
ins
sbb
xchg
push
fild
jnp
xchg
clc
(bad)
frstor
hlt
int3
rcl
sahf
mov
sbb
fnsave
bound
aas
dec
(bad)
clc
or
add
mov
popf
pop
cmps
or
mov
mov
test
add
movs
dec
sub
jne
outs
xor
fwait
stos
(bad)
mov
icebp
fs
sbb
inc
inc
or
aad
stc
adc
xor
add
and
adc
or
push
mov
inc
bound
fadd
add
cmps
shl
add
jae
cmp
pop
add
cmp
or
or
mov
out
shl
pop
or
dec
pop
mov
xchg
test
or
jnp
push
push
pop
sbb
jae
push
retf
pop
fidivr
pop
or
mov
pop
adc
add
add
stos
jg
lea
mov
loop
mov
and
xor
sub
inc
adc
hlt
imul
cmps
and
adc
adc
xor
rcl
and
ret
pop
ror
data16
clc
mov
pop
stos
clc
inc
jmp
xchg
movs
jo
leave
jge
add
push
popa
adc
inc
call
xchg
xchg
hlt
int3
(bad)
sbb
je
fwait
inc
mov
shl
mov
push
pop
dec
adc
in
bound
or
cmps
aam
pop
icebp
rol
xor
ja
fisubr
xchg
inc
cs
setge
int3
xchg
pop
inc
xor
leave
adc
mov
jecxz
or
add
cmp
jle
and
(bad)
push
xchg
retf
cmps
or
fidiv
pop
sbb
aaa
jmp
mov
fidivr
jmp
or
addr16
rol
mov
aaa
stc
lock
xchg
inc
leave
test
call
cmp
call
or
jae
or
retf
mov
xor
pop
jl
cmp
(bad)
idiv
push
adc
jno
ins
pop
lock
jge
fs
xchg
push
jns
movzx
leave
dec
push
ins
popf
call
mov
enter
sub
dec
add
int3
arpl
das
or
mov
setnp
ss
mov
(bad)
test
mov
and
and
cmp
arpl
xchg
push
jbe
add
mov
cmp
(bad)
dec
push
jmp
cmp
xchg
mov
xchg
push
mov
xlat
inc
mov
add
xor
mov
test
push
mov
or
push
lahf
(bad)
loop
mov
shl
mov
and
add
push
mov
call
mov
mov
lea
push
jmp
adc
inc
pop
pop
jo
pop
jge
frstor
(bad)
or
mov
cmp
pop
jecxz
mov
dec
loope
test
xchg
pop
cwde
movs
push
push
push
les
jl
jmp
iret
pop
fsubr
pusha
fs
xor
xor
arpl
dec
or
sar
push
pop
dec
adc
lahf
out
enter
arpl
push
cmovbe
inc
or
push
xchg
adc
sub
cmp
je
sbb
sub
push
pop
jg
cmc
das
push
add
in
mov
and
rcl
jnp
loop
aaa
pop
add
int3
and
push
lods
adc
sub
inc
fiadd
pop
mov
dec
mov
mov
mul
jl
push
inc
adc
lock
mov
js
icebp
je
push
push
ret
(bad)
lahf
stc
mov
jmp
out
inc
sbb
adc
test
sub
cmp
retf
fsubr
fistp
push
add
je
or
adc
pop
adc
sbb
sub
adc
ds
ret
sub
dec
fwait
or
loop
push
cwde
scas
and
xor
xor
or
out
or
pop
icebp
add
pop
mov
mov
bound
dec
mov
mov
lea
mov
pop
lock
bound
pop
js
test
test
mov
sbb
push
jae
and
sub
in
dec
push
push
push
cmp
jge
mov
adc
or
pop
jmp
mov
sbb
imul
xchg
and
inc
je
push
or
lea
cmp
sar
push
mov
bound
int3
jnp
add
ins
test
out
push
xor
aam
lock
pop
lods
xor
(bad)
pop
pop
pop
mov
xchg
mov
jmp
cmp
je
jecxz
adc
or
or
mov
lahf
and
mov
cmp
loopne
cwde
movs
jp
movs
jae
aam
push
mov
(bad)
push
jne
inc
and
mov
ss
jmp
lahf
test
loop
or
inc
fwait
add
inc
adc
xchg
pop
or
cmp
fiadd
ins
or
es
add
pop
rcl
or
fdivr
or
push
dec
repz
fdivr
sub
test
jno
inc
adc
push
or
inc
mov
movs
adc
sbb
dec
inc
fadd
loop
dec
dec
or
mov
or
movs
jp
cs
loop
add
movs
pop
ret
xor
pushf
pop
xor
add
or
in
mov
cmp
adc
adc
mov
add
leave
inc
xor
cmc
xor
in
mov
push
fmul
xchg
or
mov
je
add
mov
mov
mov
mov
(bad)
xor
mov
mov
push
ins
adc
nop
pushf
and
jne
lea
adc
dec
pop
adc
sbb
icebp
aam
push
fs
retf
jno
aas
push
cdq
(bad)
pusha
mov
adc
bound
cdq
jl
sub
or
test
and
ins
ret
lea
push
cwde
cmp
inc
sub
pop
xor
fwait
mov
das
(bad)
jl
mov
cld
mov
iret
aas
scas
mov
call
js
mov
mov
pusha
ds
mov
add
call
popf
jmp
pop
mov
jno
push
xchg
stos
pop
push
mov
add
(bad)
jl
and
mov
add
mov
inc
mov
mov
push
mov
js
jg
sahf
xchg
push
fld
(bad)
push
add
pop
fwait
pushf
gs
add
clc
jmp
nop
jno
mov
mov
jle
mov
and
xor
mov
push
inc
push
or
pop
adc
add
xor
xor
sub
fiadd
xor
adc
push
add
sqrtps
dec
adc
movs
and
bound
pop
mov
pop
outs
or
ret
iret
iret
fs
mov
leave
test
lahf
push
mov
mov
cmc
movs
pop
xor
mov
pop
cli
adc
xor
push
daa
out
cmp
or
and
cmp
xlat
enter
repnz
dec
cdq
mov
sbb
loopne
pop
hlt
adc
mov
inc
jecxz
push
or
je
test
adc
(bad)
scas
scas
mov
pop
sbb
mov
push
hlt
cmp
adc
loop
fs
inc
sub
out
jl
loopne
cmp
je
push
cmps
pusha
cmp
dec
cmps
imul
sbb
cmp
packsswb
fwait
xor
inc
or
mov
adc
call
loopne
sub
xor
retf
mov
les
inc
cmp
es
jle
cmp
jg
dec
mov
lds
fimul
retf
jb
daa
inc
push
jne
sbb
es
dec
movs
inc
xchg
and
cwde
ret
xchg
jmp
pop
aaa
mov
in
push
pop
xor
cs
pop
lea
push
mov
inc
jge
test
cmp
ret
add
inc
and
ds
or
adc
add
sub
xor
adc
cmp
test
and
neg
addr16
jae
add
ror
sub
mov
jmp
call
repnz
xor
cmp
dec
loope
push
xor
mov
cmp
sbb
jae
pop
jmp
add
sub
push
ss
test
add
sbb
jno
add
cmp
(bad)
mov
dec
enter
fadd
xchg
pop
out
mov
pushf
fiadd
gs
es
icebp
dec
xchg
je
scas
mov
popa
in
inc
adc
mov
jmp
test
sub
adc
push
sub
add
sahf
sbb
repz
add
repnz
xchg
mov
retf
dec
xor
jg
push
loope
pusha
sub
add
sub
or
dec
(bad)
nop
sbb
ds
jae
add
mov
mov
call
inc
icebp
xchg
push
test
je
mov
into
stos
cmp
inc
cmp
(bad)
sti
mov
sbb
inc
jns
xor
jne
xor
or
jmp
mov
pop
mov
or
xor
idiv
push
push
mov
adc
lea
dec
ss
adc
adc
pop
mov
xchg
jmp
cmp
cld
daa
inc
jo
ins
in
xor
and
jecxz
mov
inc
daa
sub
pop
xor
ror
push
pushf
push
add
gs
mov
mov
and
ret
pop
adc
push
or
and
pop
mov
scas
stc
xor
pop
mov
cmp
jae
add
xchg
jecxz
ret
dec
dec
mov
cdq
fcomip
pop
push
push
mov
sub
fisub
dec
mov
cwde
icebp
(bad)
mov
add
jmp
test
dec
dec
dec
xor
sbb
sbb
ret
shr
sbb
adc
push
pop
jmp
shl
and
add
mov
jbe
add
and
jne
fmul
adc
jbe
push
push
out
loope
mov
scas
inc
mov
jne
and
inc
mov
jle
and
std
stos
and
and
xor
pop
dec
sbb
jne
adc
(bad)
test
pusha
pop
(bad)
lock
cmp
add
addr16
cmp
sub
fiadd
sbb
pusha
lea
push
and
mov
mov
pop
fmul
fidivr
mov
mov
inc
mov
or
fs
xor
dec
shl
jo
icebp
cmp
sbb
adc
mov
leave
mov
pop
cmp
pop
xchg
lea
int
shr
adc
inc
gs
jp
pop
cmc
loop
movs
bound
cwde
sahf
mov
inc
cmps
stos
cdq
mov
mov
xchg
imul
clc
cmp
add
fs
lea
mov
and
and
sub
push
sbb
push
push
xchg
shl
inc
xchg
shl
dec
retf
push
mov
jge
imul
pop
jne
movs
loope
add
push
and
sub
rol
jle
or
pop
or
lea
push
mov
push
inc
daa
jae
mov
xor
pop
add
jb
jge
(bad)
fwait
mov
je
sub
iret
adc
pop
jecxz
dec
pop
mov
push
adc
xor
dec
ror
jne
mov
add
jne
add
and
icebp
in
xor
jbe
mov
lods
out
pop
call
dec
pop
inc
cs
test
and
mov
sub
adc
xor
popf
ins
push
and
sbb
add
and
pop
retf
loop
pop
mov
or
lock
or
mov
hlt
push
lea
adc
cmc
rol
push
test
inc
dec
mov
cmp
cwde
in
test
push
xchg
hlt
mov
lea
test
mov
repnz
mov
dec
inc
xchg
cli
mov
push
mov
imul
add
into
and
lock
in
mov
mov
add
(bad)
lea
out
add
aam
jge
stos
jb
daa
cmp
cdq
add
scas
or
out
test
add
lock
imul
cmp
clc
sub
pop
xor
lods
push
aas
or
push
push
pop
inc
ror
cmp
dec
je
add
push
cwde
adc
jne
add
inc
in
ja
enter
shr
xor
adc
mov
or
xor
pop
inc
inc
add
inc
loopne
dec
inc
ins
xor
mov
fsub
add
fcom
loopne
mov
ins
xlat
stos
inc
hlt
pop
cld
sub
ins
and
rep
lods
sbb
pop
xor
push
xor
push
jp
mov
pushf
(bad)
je
stc
mov
pushfw
lock
xchg
int
adc
push
mov
sar
add
shr
mov
lahf
pop
inc
fldcw
push
sti
test
inc
or
mov
mov
aaa
sub
adc
imul
dec
les
add
mov
test
pop
sub
jmp
xchg
fdiv
enter
js
mov
mov
ret
cmp
mul
and
push
mov
jmp
inc
(bad)
icebp
mov
add
es
ret
add
fstp
jl
mov
inc
je
jb
dec
inc
pop
das
inc
cli
pop
pusha
data16
dec
push
into
push
retf
jmp
dec
mov
mov
jnp
xchg
sub
stos
fild
out
into
mov
loope
pop
sbb
leave
mov
jmp
pop
or
push
in
pop
ret
sbb
sub
adc
dec
loope
inc
push
adc
pop
cmp
mov
xchg
je
rcr
loope
movs
pop
push
push
sub
(bad)
xor
add
rcr
jmp
add
ja
fadd
and
test
(bad)
sbb
adc
xor
icebp
and
pop
outs
stos
or
xor
(bad)
add
mov
xchg
cmp
push
push
mov
mov
add
xchg
mov
cmps
int3
sub
adc
inc
ja
xor
add
retf
stos
jecxz
(bad)
pop
dec
enter
inc
daa
pop
cdq
xor
cld
and
mov
pop
cmp
adc
and
les
mov
mov
or
mov
in
dec
pushf
ror
pop
stos
movs
or
mov
das
movs
pop
adc
push
jae
in
aas
or
pop
fsubr
push
pop
mov
jl
ret
xchg
lock
xchg
mov
movs
les
fwait
push
bound
js
out
push
repz
test
cmp
sbb
push
popa
adc
popa
(bad)
enter
movs
ins
jmp
or
push
xor
push
bound
pusha
sub
add
mov
test
add
ror
je
mov
pop
stos
sub
inc
scas
dec
retf
sub
push
push
ror
and
inc
push
inc
inc
popa
push
lds
addr16
jge
and
dec
add
cmp
in
rol
or
hlt
sub
jmp
dec
sub
and
add
xor
jmp
shl
lods
nop
sbb
xor
mov
push
ret
pop
cld
and
(bad)
imul
xchg
mov
das
sbb
mov
ins
pop
lock
mov
loopne
lea
dec
pop
ins
jne
mov
push
pop
movs
rcl
call
ud2
xchg
pusha
sbb
pop
cmp
dec
adc
or
addr16
cmp
mov
inc
push
cdq
adc
sti
mov
sbb
in
(bad)
sbb
push
inc
test
add
add
push
mov
movaps
and
xchg
enter
movs
pop
je
mov
adc
loopne
mov
and
je
cmp
leave
inc
pop
or
in
leave
jb
and
mov
jo
push
gs
pusha
test
lods
jge
push
push
push
test
das
mov
dec
imul
or
int3
push
mov
cmp
dec
jp
sub
or
test
push
mov
add
mov
add
push
adc
adc
adc
push
div
adc
and
ret
mov
push
outs
fisttp
js
popf
fcomp
aad
xor
imul
test
push
out
inc
out
dec
push
mov
xor
in
outs
add
sbb
fs
jbe
mov
bound
xor
mov
cmp
rol
cwde
adc
adc
jmp
sbb
add
inc
mov
cli
in
imul
aad
cmp
add
mov
jecxz
adc
sti
clc
(bad)
(bad)
out
addr16
outs
dec
jecxz
ins
fadd
leave
int3
scas
call
(bad)
aaa
ins
or
xor
mov
lahf
sbb
jne
retf
and
push
or
jne
push
out
in
cdq
push
leave
lods
pop
mov
cmp
in
inc
or
xor
inc
ins
dec
es
lahf
adc
mov
push
ss
aam
mov
int
stos
(bad)
mov
pop
aam
jmp
push
(bad)
jp
arpl
mov
or
ins
dec
(bad)
xchg
xor
push
sub
adc
push
mov
sbb
mov
mov
lods
aam
test
add
movs
dec
(bad)
clc
sub
das
sbb
leave
mov
loopne
or
adc
arpl
sbb
or
loopne
xchg
pminub
push
fwait
loopne
cmp
mov
and
outs
and
sbb
push
adc
mov
xor
xor
xchg
ins
test
iret
xor
dec
and
push
fmul
clc
inc
test
ins
inc
push
mov
add
aam
sbb
jecxz
mov
inc
lods
retf
add
jb
push
fs
adc
ins
sbb
es
loopne
or
xchg
jo
fst
pop
sbb
jle
ins
mov
dec
dec
push
sbb
iret
mov
jmp
call
push
add
cmp
and
xor
pop
push
call
(bad)
mov
push
cli
lock
rol
or
add
lods
pop
and
popa
repz
arpl
inc
cld
cmp
(bad)
mov
sub
sar
aaa
push
test
in
out
imul
loop
inc
test
stos
pop
mov
dec
ds
test
cmc
out
push
sbb
sbb
mov
or
test
loope
push
or
cmp
js
shr
xor
sub
fld
sub
adc
add
sub
dec
jae
xchg
or
pop
xchg
or
dec
add
pop
mov
pop
test
sub
gs
cmp
pop
jle
sbb
add
pushf
inc
mov
in
xchg
test
add
or
in
stos
and
fnstcw
rol
lea
mov
inc
(bad)
push
dec
or
push
and
xchg
push
(bad)
data16
or
jno
sbb
jmp
lods
imul
loope
mov
inc
xor
cmp
jle
inc
jo
adc
inc
call
push
icebp
inc
xchg
pop
aaa
in
rcr
sahf
mov
sub
and
fld
mov
and
imul
cmp
push
push
shr
mov
sub
scas
xchg
and
mov
pop
xor
pop
mov
in
jne
mov
inc
inc
mov
inc
and
std
or
(bad)
mov
jne
aam
jmp
dec
mov
push
jmp
push
bound
sub
enter
sbb
cmps
mov
adc
and
in
pusha
call
out
cdq
push
add
sbb
sub
(bad)
jmp
cmps
xchg
mov
add
jnp
shl
enter
fadd
jge
add
ss
ds
popf
ja
or
ja
xor
inc
popa
pop
inc
in
and
daa
int
inc
jbe
jl
sub
fisub
inc
jg
mov
sti
hlt
xchg
sub
cmp
mov
jmp
pop
(bad)
std
xchg
mov
in
sbb
(bad)
in
int3
adc
mov
(bad)
mov
pop
inc
cmp
mov
popa
cwde
push
sub
xchg
cmps
fstp
mov
xor
lock
push
outs
pop
mov
adc
lea
inc
in
mov
stos
push
or
xchg
add
pop
mov
or
test
jecxz
push
les
pop
or
jne
aam
jb
xchg
cmp
cld
retf
sbb
adc
cmp
push
push
lea
sbb
mov
adc
lods
data16
sub
dec
ret
mov
call
dec
and
dec
(bad)
in
xchg
push
mov
es
xor
mov
cmp
and
shl
pop
or
mov
adc
mov
push
pop
mov
movs
pusha
xchg
cmp
retf
dec
mov
pop
cwde
sbb
imul
adc
inc
and
xchg
cmps
out
clc
add
mov
sub
cmp
stos
mov
jo
jle
push
or
rcl
or
adc
scas
pushf
dec
jle
es
xchg
push
jecxz
or
jmp
lea
repz
pop
mov
pop
or
ds
xor
mov
stos
xchg
popa
out
jb
pop
adc
or
into
add
mov
lea
sub
ds
cmp
je
push
jmp
mov
push
add
(bad)
cmps
mov
cmp
ret
lods
rcl
(bad)
jae
jmp
adc
add
xor
jbe
jo
sar
dec
sbb
retf
push
imul
cmp
(bad)
push
and
mov
loope
push
push
inc
xchg
(bad)
push
ja
fmul
push
cdq
cwde
adc
lea
push
push
xor
xor
xchg
and
sub
xchg
ret
sub
test
push
and
lods
bound
push
lock
xor
stos
jne
mov
push
dec
xchg
and
shl
xor
pusha
mov
pusha
inc
cmp
je
xor
ss
and
mov
stos
sub
aaa
dec
cmps
xchg
push
sub
loop
add
inc
movs
add
fisub
retf
sar
cwde
ins
and
jbe
popf
popa
mov
(bad)
jns
mov
jge
pop
or
xor
push
je
ss
mov
ins
jle
cs
inc
cli
adc
ins
test
enter
lds
jbe
es
push
mov
jne
popa
xor
daa
lea
dec
dec
adc
into
je
cmp
mov
pop
mov
cmp
inc
es
mov
sahf
out
add
add
xor
add
pop
jmp
inc
adc
pop
jb
mov
mov
in
pxor
retf
retf
adc
ror
jle
adc
pop
out
cdq
fcom
js
push
aas
push
jne
push
push
mov
pop
pusha
sub
mov
or
inc
test
cmp
push
dec
call
(bad)
lock
les
adc
mov
add
int3
je
or
mov
clc
mov
dec
aaa
or
push
movs
jns
enter
mov
push
inc
in
sub
inc
int3
xor
cmp
int
sub
les
inc
out
dec
jb
sar
outs
loopne
stos
popf
clc
dec
in
add
add
ret
and
stos
xor
and
jne
push
not
sbb
xchg
jae
mov
add
mov
test
mov
addr16
adc
push
in
mov
sbb
sbb
into
adc
push
mov
sbb
pop
mov
adc
mov
dec
in
sbb
pop
push
jae
scas
popa
jl
fdiv
dec
in
push
xor
or
push
loope
jne
loopne
jb
les
cmp
dec
jg
fs
push
pop
hlt
xor
jns
lahf
sub
in
or
xchg
mov
push
stos
xor
or
jns
hlt
push
mov
popa
and
add
in
and
xchg
fnstcw
loopne
adc
jmp
repnz
ror
and
dec
pop
sub
inc
jae
adc
stos
sub
call
mov
outs
jne
stos
mov
mov
sar
lods
and
loope
jae
sahf
std
adc
icebp
dec
and
repnz
inc
gs
mov
stos
mov
push
or
cmp
sbb
add
lods
sbb
fwait
push
fwait
xchg
mov
sbb
push
push
not
xor
xor
into
push
jbe
push
ins
outs
sti
mov
dec
pop
add
fist
or
and
xchg
push
add
and
push
add
xchg
lods
pop
mov
es
in
add
test
bound
push
sbb
sbb
xchg
out
scas
mov
lds
jno
and
add
test
xchg
in
std
ffree
xor
mov
(bad)
mov
jge
mov
call
push
aam
or
push
mov
or
dec
aam
jo
jmp
cmp
fisttp
mov
cmp
sbb
loopne
xchg
push
aam
mov
rcr
cmp
int
fwait
ins
jbe
or
neg
in
cld
jae
sti
push
jbe
retf
and
push
or
fmul
push
xchg
inc
mov
call
lahf
popf
pop
adc
mov
movups
ds
jecxz
and
ror
mov
cmp
and
adc
into
mov
out
adc
or
mov
or
adc
jno
rcl
mov
in
inc
inc
sbb
push
pop
in
outs
xchg
jns
dec
ins
retf
loop
xchg
xor
xor
mov
scas
cmp
jle
push
stos
js
pop
push
mov
dec
jmp
adc
dec
adc
push
jmp
jle
xor
or
fisubr
mov
call
mov
dec
fnstenv
sbb
adc
jecxz
cmp
mov
xchg
adc
or
in
pop
cwde
cmp
lods
into
mov
or
addr16
dec
mov
mov
cmp
dec
inc
js
dec
push
popf
sbb
cmp
xchg
in
or
xchg
mov
cmp
enter
cmp
sbb
je
adc
in
push
popf
push
push
xor
push
xchg
or
mov
pop
fsub
leave
popf
sbb
jp
pop
pushf
xchg
mov
push
mov
xor
push
xchg
push
sbb
rol
mov
call
sub
dec
adc
inc
inc
push
jp
mov
adc
push
mov
push
mov
mov
out
pop
out
repz
mov
mov
rol
sbb
push
mov
lea
add
and
dec
dec
mov
xor
mov
and
push
or
push
add
mov
add
mov
or
mov
mov
add
pop
push
(bad)
jno
or
add
sub
ud2
push
inc
cmp
jno
push
dec
push
(bad)
cwde
pop
sub
cmp
jecxz
pop
mov
or
add
mov
mov
dec
ror
xor
stc
ins
jno
add
xor
ret
xor
push
sub
mov
or
xor
js
cmp
inc
pop
les
mov
dec
and
mov
scas
jne
ret
cmp
jg
call
mov
pop
and
adc
add
jne
push
xchg
or
mov
lock
sbb
add
add
push
mov
inc
pop
add
jnp
into
sbb
add
arpl
pop
imul
add
mov
imul
xor
push
push
cld
xor
and
(bad)
std
xor
or
add
add
push
jne
or
or
adc
adc
imul
adc
pop
cs
ss
dec
lea
mov
mov
cmp
pop
pop
sbb
mov
adc
pop
jecxz
fsub
jmp
cmp
mov
dec
adc
push
out
adc
adc
or
add
add
push
fdivr
add
mov
mov
and
add
leave
(bad)
shr
xor
mov
stos
adc
aaa
popf
leave
rcr
repz
sub
aam
into
pushf
add
fwait
daa
push
push
push
lea
cwde
aam
daa
cli
xor
(bad)
sub
(bad)
xor
sub
dec
inc
and
dec
xor
mov
dec
inc
pop
or
add
sbb
jne
jmp
or
inc
adc
leave
mov
not
mov
cmps
lea
ret
leave
jne
inc
or
lea
nop
inc
daa
fadd
test
jmp
gs
mov
test
mov
mov
pop
lea
xchg
inc
push
sbb
jge
pop
and
ficom
popf
je
(bad)
mov
test
loop
mov
fistp
loope
mov
cmp
or
icebp
mov
sbb
fisubr
add
inc
xor
and
push
jae
mov
(bad)
popa
add
mov
loop
test
lea
clc
mov
mov
add
lea
leave
xor
clc
add
pop
mov
jge
jle
dec
xchg
inc
ret
add
lea
xchg
jl
push
(bad)
cli
xor
pop
dec
mov
adc
rcl
stos
adc
cs
les
dec
or
mov
push
pop
enter
jne
push
js
xchg
dec
pusha
pop
ror
or
enter
ret
cld
mov
xor
jp
and
jmp
add
out
aas
ror
fwait
and
adc
push
jo
jo
jmp
and
dec
add
aaa
pop
add
mov
sub
dec
shl
or
inc
cmp
out
inc
dec
jle
scas
xchg
das
add
add
lea
pop
inc
mov
add
add
ret
jns
pusha
xchg
pop
inc
pop
mov
and
test
mov
mov
or
push
cmp
int3
adc
hlt
add
ret
dec
add
mov
inc
dec
mov
enter
cld
ds
ins
data16
sbb
ret
push
retf
jmp
jmp
shr
leave
mov
xor
or
pusha
jmp
or
pusha
out
push
inc
(bad)
repz
sub
call
pusha
out
push
xor
ret
mov
add
enter
dec
xchg
mov
dec
dec
sti
mov
cmp
dec
test
cmp
push
and
push
jnp
lock
loop
jecxz
adc
call
fcomp
dec
cmp
dec
add
mov
push
mov
xchg
jg
in
add
inc
and
mov
mov
add
sub
inc
cwde
push
add
rol
jmp
rol
lea
mov
jns
xchg
test
pop
and
mov
adc
call
inc
ins
push
inc
or
test
bound
outs
clc
push
inc
push
mov
pop
xchg
ins
test
push
int3
mov
sbb
rcl
rcr
xor
ror
sbb
adc
mov
push
call
push
dec
mov
xlat
mov
sub
inc
(bad)
mov
(bad)
(bad)
cld
jmp
outs
xor
pusha
lods
(bad)
cmp
sbb
or
mov
mov
cmp
std
cmp
jbe
jno
int3
xor
arpl
jo
mov
mov
dec
cdq
xchg
(bad)
pop
sbb
out
int3
fwait
in
inc
ret
push
ins
xor
mov
hlt
fcmovne
test
xor
sub
adc
ins
jp
cld
call
ror
shl
sahf
pop
rcr
nop
xor
cmps
mov
(bad)
cmp
cld
xchg
cwde
pushf
ror
sbb
push
and
(bad)
jno
inc
fbld
jne
lods
push
lea
popf
lahf
fnsave
fdiv
and
xlat
mov
sbb
(bad)
enter
(bad)
int3
cmc
aad
aaa
ja
stc
rcl
aam
shl
sbb
jne
in
xor
cs
repz
int
mov
mov
test
popf
adc
xor
or
add
xor
mov
test
mov
test
jb
pop
adc
xchg
cdq
adc
mov
sbb
cmp
ret
or
pop
add
dec
les
enter
mov
mov
jno
mov
mov
enter
jnp
fcomp
retf
cdq
retf
clc
rcl
stos
es
rcr
add
cmps
xor
adc
enter
or
add
rcl
aaa
sbb
or
xor
dec
xor
dec
or
imul
ret
mov
fcomp
cmp
scas
dec
ss
clc
cmp
repz
or
jecxz
adc
int3
xor
jo
mov
imul
cwde
data16
push
shl
inc
dec
xor
rcr
sbb
inc
ja
cmp
mov
fsubr
or
or
bnd
(bad)
or
sub
mov
cwde
aaa
push
jne
push
out
in
dec
test
mov
inc
ret
sbb
mov
cmp
pop
icebp
xor
fbld
pop
jnp
inc
cld
outs
cli
and
jle
mov
mov
test
enter
(bad)
xor
xor
es
pop
adc
pop
ja
lahf
int3
xor
hlt
ins
out
adc
adc
push
les
xor
retf
mov
jmp
pop
data16
jo
ins
inc
int3
out
mov
sbb
ds
test
mov
cmp
fdiv
cmp
sar
pop
jmp
cld
jmp
jmp
fs
(bad)
sahf
ror
test
test
xchg
rol
lea
pop
ins
xchg
leave
enter
add
dec
fisubr
out
fs
jecxz
retf
push
xor
mov
or
call
or
and
lock
nop
addr16
xor
xor
mov
xor
push
inc
popf
sbb
std
popf
ins
dec
out
adc
adc
mov
push
pop
aam
mov
and
xor
xor
pushf
mov
arpl
je
icebp
les
jl
repz
add
scas
aad
sbb
int
mov
add
or
aad
aas
in
mov
push
fwait
mov
in
push
inc
mov
in
js
mov
xlat
nop
push
js
inc
dec
fdivr
mov
int
xchg
push
mov
and
mov
mov
add
jl
mov
out
push
out
xor
push
add
add
in
mov
pop
js
fcom
mov
adc
adc
xchg
clc
call
mov
bound
cmps
or
sbb
push
xchg
adc
aam
cli
or
jnp
movs
imul
xor
mov
mov
xor
mov
jle
ret
jmp
mov
imul
ret
adc
xchg
jle
outs
dec
xchg
cmp
jmp
gs
sbb
xchg
(bad)
cmp
pusha
cmp
repnz
pop
pop
xor
inc
call
push
lea
push
adc
ja
jle
add
mov
mov
(bad)
cmp
xlat
sub
xor
fwait
popf
adc
sbb
xor
push
call
test
jmp
mov
repz
mov
scas
mov
or
scas
sar
mov
and
sub
out
std
xor
jns
(bad)
push
cmp
mov
mov
ja
inc
push
adc
mov
mov
test
cmps
inc
(bad)
mov
dec
cmp
aas
(bad)
push
push
pop
scas
mov
mov
fs
dec
adc
cmps
push
fld
sbb
mov
(bad)
push
lds
mov
mov
add
daa
jle
push
jmp
lods
shr
pop
xchg
inc
not
mov
mov
les
(bad)
adc
fs
adc
xor
mov
mov
jae
enter
add
jb
or
das
inc
jb
xor
pop
mov
sub
test
es
add
and
je
push
pop
sub
je
pop
or
or
(bad)
(bad)
es
pop
outs
cs
ror
shl
lods
call
pop
out
stc
mov
pusha
scas
and
sbb
sub
xchg
clc
pushf
xchg
pop
arpl
pushf
addr16
or
mov
add
cmp
or
rcr
sbb
mov
leave
push
add
iret
jl
lea
inc
xchg
cmp
jge
mov
xor
test
shl
ror
movs
mov
mov
leave
xor
xor
cmp
jmp
add
push
cmp
jne
inc
sbb
add
mov
mov
jl
inc
fisttp
jb
call
xor
fidivr
inc
cwde
scas
push
mov
xor
jmp
add
call
sbb
repz
sahf
addr16
add
nop
and
fxtract
pop
pop
xchg
or
add
push
lea
cmp
cmp
mov
sbb
pop
push
push
lds
or
loopne
lods
sar
jge
lea
push
mov
(bad)
push
imul
repnz
cmp
adc
mov
xor
add
lea
shl
add
dec
push
sbb
mov
adc
mov
inc
add
adc
jne
pop
rol
movs
pop
mov
out
mov
cmp
xchg
mov
lea
push
out
rcr
scas
adc
adc
and
inc
mov
and
jo
retf
cmp
mov
inc
sub
lea
shl
lods
scas
push
imul
sub
xor
stos
sbb
ins
cmp
sti
mov
pusha
retf
jo
mov
fwait
rcr
jmp
cli
pop
shl
rcl
aas
in
out
cmp
ret
es
out
int3
pop
ja
lahf
int3
cmp
(bad)
int3
push
fs
xor
int3
xlat
push
dec
imul
(bad)
xchg
ret
data16
jmp
repz
aam
cmp
sbb
imul
out
push
pop
aad
jne
fdivr
fnop
aam
mov
jmp
fcomp
mov
jecxz
(bad)
jmp
in
aam
mov
pop
(bad)
stos
or
(bad)
lock
clc
cld
mov
pop
retf
pop
xor
ds
add
add
lods
push
popf
or
std
in
push
call
cmp
mov
repz
(bad)
sbb
and
cmp
mov
pop
cvtpi2ps
mov
sbb
pusha
sbb
aas
mov
mov
mov
sbb
inc
cmp
xchg
mov
dec
adc
inc
test
test
add
cmps
push
jmp
xchg
out
stos
shl
pop
inc
scas
jae
sahf
shl
int3
in
clc
xor
popf
stos
or
dec
adc
test
or
retf
pop
ret
xchg
or
or
clc
xchg
stos
out
scas
sub
push
es
xor
test
xchg
dec
xor
lods
fwait
mov
call
mov
cmp
enter
dec
or
xchg
or
adc
and
inc
xor
add
or
or
mov
arpl
lds
cdq
rol
retf
iret
repnz
cmp
add
lods
mov
pop
mov
(bad)
(bad)
fimul
in
outs
add
push
cdq
mov
ret
adc
xchg
mov
(bad)
call
(bad)
or
lea
gs
or
jb
imul
daa
test
and
mov
(bad)
sbb
in
cs
les
or
inc
jmp
mov
cld
mov
movs
push
mov
mov
mov
mov
xchg
push
pop
mov
xchg
xchg
in
cwde
pop
xor
cmp
dec
xor
xor
xor
loope
sbb
mov
pop
pushf
stos
scas
lods
imul
daa
jae
(bad)
enter
jecxz
mov
sub
call
loopne
jle
cmp
or
(bad)
adc
xchg
mov
pusha
int3
cmps
adc
out
int3
adc
std
imul
fimul
popf
and
mov
in
lds
push
push
sub
cmp
into
inc
xchg
les
cmp
or
push
stc
stos
test
mov
enter
ds
pusha
inc
mov
sbb
retf
hlt
retf
ja
sub
xor
add
mov
ret
retf
cmp
pop
(bad)
lea
(bad)
int
xor
sbb
sbb
jp
xchg
pushf
aam
cwde
push
mov
push
in
adc
iret
and
mov
(bad)
std
repnz
adc
call
test
stc
(bad)
push
retf
cmp
(bad)
sbb
mov
mov
int3
je
imul
push
jl
xor
mov
or
xor
pushf
xor
push
push
aam
shl
aas
push
jns
push
cmp
scas
xchg
mov
dec
jle
jle
mov
xor
add
ret
es
int3
stos
sti
out
aad
scas
popa
cwde
pusha
sti
push
adc
ret
and
xor
or
int
lods
mov
xor
lods
sbb
and
mov
pop
ret
mov
and
cmp
je
jnp
cs
inc
add
sahf
mov
push
cmps
mov
and
jne
pop
fadd
inc
jb
(bad)
fstp
mov
adc
cmp
jbe
pusha
sub
mov
mov
push
ret
or
add
push
xor
or
enter
pop
sub
mov
arpl
js
or
sub
and
mov
inc
inc
ds
dec
test
or
mov
and
lds
xor
nop
sbb
loopne
pop
mov
ds
add
mov
fidiv
push
push
push
mov
jo
add
aas
add
dec
push
(bad)
retf
int3
les
jge
nop
leave
jmp
clc
ret
mov
pcmpeqw
mov
xor
es
jp
or
aad
add
retf
push
stos
cmp
push
inc
jmp
inc
add
mov
pop
inc
rol
out
sbb
pop
jmp
stc
mov
leave
(bad)
out
xor
jbe
or
ja
mov
or
sbb
lods
(bad)
push
(bad)
neg
inc
sar
mov
pop
gs
lods
sub
jo
(bad)
stc
sub
rcl
dec
enter
call
xor
and
dec
test
add
inc
xlat
mov
pop
or
pop
adc
mov
sbb
mov
sub
mov
mov
adc
sub
inc
dec
push
lods
jle
cmp
xchg
mov
jecxz
pop
cmps
sbb
push
data16
cmp
rol
je
retf
ret
fadd
push
xchg
js
jmp
pop
inc
mov
pop
jmp
mov
popa
or
dec
or
outs
fdivp
repnz
retf
ins
inc
shl
push
sbb
call
test
pop
jb
and
popf
loop
inc
leave
xchg
out
push
inc
cmc
pop
aam
loope
scas
sbb
bound
push
sbb
push
push
test
enter
mov
movs
dec
sub
lea
push
out
mov
popa
nop
xor
xor
ror
mov
mov
mov
pop
xchg
mov
cdq
jo
mov
out
retf
pop
mov
call
inc
inc
adc
push
shr
push
test
vpsubusb
js
cwde
enter
pop
movs
mov
inc
or
out
call
push
or
adc
mov
(bad)
data16
nop
or
mov
push
mov
lods
je
push
lea
dec
sar
push
adc
adc
push
das
dec
or
xor
les
xchg
sbb
cmc
or
adc
xchg
adc
mov
and
out
(bad)
inc
outs
sub
rol
dec
or
push
push
push
push
mov
fimul
pop
popa
xchg
push
adc
jmp
and
iret
loope
xchg
xchg
mov
or
xor
xor
fld
inc
rcl
xor
cmp
adc
mov
xchg
cmp
(bad)
dec
xor
adc
mov
(bad)
push
xor
lock
add
fnstenv
add
xor
mov
add
adc
sbb
test
xchg
addr16
pop
mov
jmp
movs
pusha
jne
dec
pop
cli
or
mov
mov
dec
sbb
sub
pop
fs
xchg
imul
fwait
inc
jne
scas
xor
loope
aam
int
mov
and
adc
xchg
fistp
fcomi
bound
xchg
mov
push
imul
add
add
jp
mov
scas
retf
daa
jno
add
rol
mov
mov
mov
mov
xchg
jg
mov
xor
ret
cwde
mov
push
ret
mov
inc
cs
push
pushf
jae
pushf
std
bound
adc
or
jmp
call
aaa
xchg
inc
bound
retf
cmp
js
nop
add
cmp
dec
push
es
xor
add
iret
imul
pop
and
pop
sub
add
adc
dec
aam
add
leave
xor
adc
push
pop
cwde
int
iret
or
popf
sub
pop
(bad)
sbb
test
lds
mov
or
mov
jb
bound
pop
and
mov
cmp
jae
jne
push
ins
ret
push
push
dec
sub
jne
(bad)
loopne
std
mov
loop
jae
xchg
mov
mov
(bad)
xor
push
and
std
xchg
pop
leave
sbb
stos
ins
xor
fmulp
movs
aas
sub
xchg
or
pop
out
fdivr
push
push
cwde
mov
push
push
add
sub
out
cld
add
jne
into
ds
cld
add
cld
mov
inc
or
mov
add
jne
dec
inc
jne
out
push
sbb
sti
call
jmp
lods
push
mov
ja
fwait
lods
(bad)
fisttp
push
popf
cmc
xor
into
mov
jne
push
push
push
and
in
dec
dec
add
vsubps
pop
hlt
jne
push
inc
add
mov
inc
sbb
mov
push
push
mov
or
imul
sbb
xchg
dec
loopne
inc
aam
dec
xchg
add
add
(bad)
jp
pop
inc
push
dec
in
scas
aad
div
sbb
or
in
fiadd
inc
pop
xchg
shr
scas
mov
fimul
adc
in
mov
adc
call
pop
(bad)
test
jbe
pop
in
or
jecxz
or
mov
scas
mov
or
sbb
xor
cmp
aam
mov
push
mov
test
mov
xchg
jnp
xor
sbb
pop
into
mov
mov
and
sti
iret
push
pop
jbe
aam
add
dec
mov
add
or
jns
xchg
push
loopne
push
xchg
mov
mov
sbb
or
add
push
add
push
inc
dec
mov
lods
mov
pop
adc
dec
pop
int3
add
push
jg
out
ins
jb
ret
(bad)
hlt
movs
loopne
mov
mov
pop
(bad)
push
nop
outs
data16
movs
adc
mov
je
mov
xchg
into
push
fcom
lahf
and
inc
sub
adc
or
ret
je
test
mov
ss
add
sbb
push
inc
fidivr
cmp
or
stos
jmp
rcl
inc
ret
nop
jb
dec
shl
lea
cdq
(bad)
xor
leave
and
mov
cpuid
jno
xor
pop
mov
mov
dec
xor
test
out
test
add
or
mov
les
adc
xor
pop
fmul
push
mov
add
push
pop
es
lea
adc
push
mov
jbe
add
into
pop
sbb
ins
add
mov
mov
jmp
add
sub
lods
int
xor
stos
inc
std
les
stos
add
push
push
nop
lahf
mov
or
int
into
mov
mov
sub
in
add
or
les
jmp
cmp
or
pop
movsx
xchg
jbe
xor
rcr
mov
sar
sar
jbe
inc
add
mov
mov
xchg
mov
sbb
xchg
inc
outs
inc
add
push
sar
or
mov
inc
adc
out
push
loopne
inc
dec
push
mov
ror
sbb
fidiv
sub
cmp
ja
inc
sub
push
xor
add
std
enter
jge
sbb
fsubr
and
add
ja
mov
jmp
or
aad
test
es
lea
mov
push
aas
inc
or
sahf
shl
mov
dec
xchg
add
add
jb
xor
and
add
push
or
sub
jmp
jmp
pop
or
inc
mov
mov
ror
or
or
mov
jmp
sar
or
ret
add
jp
mov
(bad)
ss
movs
mov
mov
add
xor
dec
xlat
call
shr
mov
test
adc
pop
inc
push
cmp
jge
nop
mov
push
dec
push
add
push
adc
fsubr
pop
and
ficomp
(bad)
shl
sub
arpl
sub
fst
inc
inc
jns
fistp
mov
add
dec
mov
xchg
fcomp
pop
add
add
stos
xchg
mov
mov
sbb
(bad)
push
test
pushf
jle
inc
hlt
sub
cwde
outs
leave
in
jle
imul
add
xchg
shr
lds
cmp
enter
test
mov
mov
(bad)
mov
adc
ds
repnz
pop
das
jne
loope
fld
push
call
outs
call
daa
xchg
add
cmp
jl
lods
push
pop
adc
or
or
xor
xlat
lea
scas
mov
cmp
push
lods
pop
xor
push
inc
sub
outs
loope
(bad)
push
aas
je
sbb
lahf
cmp
(bad)
pop
jno
inc
sbb
inc
xor
aas
xor
sub
push
int
xchg
mov
das
add
sbb
push
(bad)
mov
mov
retf
stc
sub
jno
pop
ror
ficom
out
inc
xor
cmp
arpl
pop
jne
mov
movhps
inc
int
nop
and
ins
(bad)
loopne
mov
leave
add
mov
push
push
add
gs
cs
(bad)
push
push
in
rol
mov
inc
lea
adc
jg
mov
add
dec
dec
cmps
sub
cdq
mov
xor
mov
sub
pop
or
push
jp
push
push
mov
jp
cmc
cmp
sbb
push
das
xchg
adc
ss
adc
movs
aad
fstp
sub
pop
ret
aam
push
jmp
push
inc
pop
daa
or
fldcw
mov
outs
dec
cli
jne
push
or
out
into
sbb
dec
mov
retf
cmp
jge
stos
pusha
sub
int
dec
(bad)
adc
into
cmp
add
push
xchg
lea
outs
nop
push
cmps
mov
fs
(bad)
das
or
sub
icebp
imul
pop
dec
retf
or
pushf
cld
add
push
loop
int3
or
and
adc
rcl
arpl
sbb
adc
fisub
add
ds
adc
jecxz
push
stos
pop
mov
(bad)
jnp
mov
iret
inc
or
les
iret
adc
cmps
sbb
add
stos
cmps
retf
ret
xchg
and
dec
aaa
push
mov
pop
mov
inc
daa
and
adc
cli
push
movs
cmp
imul
shr
cmps
adc
mov
adc
std
je
jmp
pop
add
leave
jne
mov
mov
add
jae
sbb
mov
shl
inc
dec
adc
xor
stc
or
mov
xor
inc
push
add
jle
push
and
sbb
xchg
inc
sbb
push
shr
push
adc
lods
fist
pop
add
in
xor
cmps
adc
or
inc
fs
push
ds
cmp
pop
mov
mov
out
pushf
cli
test
outs
sub
sub
or
nop
idiv
inc
mov
inc
mov
cdq
push
sub
movsx
or
add
das
xor
cmp
jmp
mov
stos
inc
mov
scas
push
shl
dec
jg
loope
jae
imul
jg
add
push
jp
xor
inc
push
call
das
lods
ficomp
push
push
push
push
inc
shr
or
pop
or
cmc
repz
cwde
or
jne
test
cmps
sti
push
sub
jg
cs
ins
cmp
push
push
or
mov
aam
and
sub
lds
jmp
stos
adc
cwde
das
adc
push
jb
outs
push
push
adc
pop
retf
mov
mov
cmp
outs
adc
mov
sub
dec
loop
lea
mov
shl
gs
add
ret
jle
jo
adc
sahf
lods
jno
sub
in
push
mov
mov
mov
mov
add
cld
je
lods
fwait
mov
add
(bad)
push
mov
and
push
mov
jb
loop
outs
loop
cmp
dec
and
leave
arpl
js
dec
pop
mov
xchg
push
cmp
repnz
and
nop
xor
or
mov
sti
or
cld
sub
movs
(bad)
and
jecxz
push
movs
pop
cmp
dec
or
mov
xchg
xor
enter
rol
mov
test
inc
fisttp
loopne
inc
adc
add
je
mov
rol
and
xor
inc
adc
inc
test
mov
inc
mov
or
and
and
mov
jmp
cmp
pushf
rol
arpl
or
add
xchg
ret
adc
inc
push
mov
push
daa
jne
cmp
sbb
rol
call
cmp
mov
jmp
pop
(bad)
adc
dec
ss
xor
and
or
jmp
add
add
mov
shl
not
and
pop
jge
and
push
cwde
mov
repz
cmp
int3
push
xor
add
push
int3
inc
out
mov
mov
cmp
pop
dec
inc
push
dec
xor
or
fdivr
xlat
aas
mov
jnp
dec
outs
xchg
int3
shl
xor
add
or
shr
jle
jbe
adc
nop
or
ins
mov
mov
aam
shl
dec
mov
sub
or
adc
adc
leave
xor
push
push
push
pusha
inc
in
dec
fcom
jle
push
mov
add
push
add
lock
add
push
push
mov
pop
pop
and
mov
add
test
push
push
test
outs
xchg
push
adc
test
add
stos
push
cld
jmp
sub
shr
cmp
hlt
mov
dec
test
movs
jmp
push
pop
push
inc
mov
and
inc
cmp
in
ja
jecxz
test
xor
daa
mov
jge
mov
cmp
and
and
or
ja
mov
enter
add
mov
mov
mov
rcl
adc
dec
ret
sar
jb
push
sub
xor
push
call
cmp
mov
add
rcr
ret
push
mov
and
add
iret
push
lea
test
add
iret
dec
ret
adc
ror
sbb
add
dec
sub
xor
inc
popf
or
shr
dec
adc
pop
inc
ret
cmp
push
and
inc
daa
push
mov
jmp
(bad)
std
push
sbb
push
jb
(bad)
lock
or
out
sub
pop
in
push
mov
xchg
mov
outs
pushf
rcr
push
rcr
xchg
sub
dec
inc
repz
sbb
or
sbb
cmp
pop
push
sub
mov
dec
push
sbb
sub
adc
out
aam
lods
int3
pusha
push
les
sub
adc
sbb
xor
mov
and
ja
mov
lea
cmp
icebp
icebp
out
mov
inc
dec
jmp
mov
adc
and
lahf
mov
push
add
test
mov
dec
shl
push
call
in
mov
cwde
sbb
inc
or
or
aad
pop
in
enter
adc
fwait
and
jp
sub
aas
lds
mov
or
std
xlat
aam
or
sti
and
jmp
add
xchg
lock
fbld
in
shl
test
push
les
shr
lea
sub
mov
dec
daa
push
lds
add
arpl
rcl
stc
or
push
push
or
add
inc
mov
in
push
adc
cmp
cwde
cmps
in
sub
imul
out
lock
cwde
pop
mov
dec
pop
(bad)
cmps
scas
mov
shl
andnps
mov
test
xchg
pusha
je
add
cmp
sub
push
cdq
pop
pushf
and
or
ror
pop
jns
push
sbb
and
adc
ss
or
sbb
test
loope
xlat
pop
or
bound
sub
jle
sbb
pop
and
adc
das
in
push
mov
or
gs
and
pop
mov
sub
push
pusha
adc
ret
mov
mov
jbe
jmp
or
mov
ror
jbe
and
push
pop
inc
xchg
(bad)
cmp
pop
and
lahf
jmp
dec
sbb
inc
add
add
sub
push
push
add
mov
and
adc
sub
sub
xor
call
call
mov
or
test
adc
sub
mov
movs
jae
or
or
xor
xor
jae
xor
sub
dec
pusha
je
dec
sbb
adc
ins
call
cld
es
(bad)
pop
inc
xchg
mov
jae
push
out
inc
imul
jmp
sahf
das
out
repz
sub
repz
push
movs
mov
inc
adc
scas
adc
jp
push
cwde
ss
or
or
mov
stos
dec
repnz
xchg
or
in
popf
lods
xchg
cmps
in
inc
mov
arpl
cmp
dec
pop
sub
push
sar
inc
out
fdiv
or
and
dec
(bad)
hlt
mov
outs
in
div
gs
xchg
fwait
retf
jp
jge
outs
dec
jl
mov
pop
sub
clc
jmp
rcr
ret
jle
leave
retf
inc
sti
dec
adc
mov
imul
mov
xchg
lods
push
mov
in
stos
push
inc
sbb
xchg
sub
clc
fwait
xor
adc
and
icebp
pminsw
dec
sbb
dec
adc
mov
pop
in
and
imul
imul
nop
scas
push
add
loope
and
in
gs
mov
and
adc
sbb
xchg
call
dec
add
xor
add
dec
aad
push
fbstp
sbb
push
push
xchg
sub
jne
add
sbb
dec
cmp
mov
dec
push
sbb
xchg
xor
popf
ret
adc
and
cmp
push
push
xchg
push
(bad)
(bad)
mov
xor
push
jo
mov
pusha
pushf
add
lock
cmps
inc
add
inc
inc
cmp
jne
mov
call
ss
inc
fs
add
add
mov
shr
add
mov
in
mov
and
jae
mov
push
pop
xor
pushf
out
repnz
lds
loop
movzx
push
mov
pop
js
and
xchg
mov
in
or
add
fsub
mov
movs
jne
xor
jp
inc
mov
cmc
jge
push
pop
sub
push
lea
pop
rol
mov
mov
dec
in
dec
xchg
leave
mov
mov
shl
push
in
and
jecxz
sbb
gs
nop
jmp
daa
cmp
inc
cmp
jl
pop
mov
add
jge
sub
push
mov
jne
call
mov
cli
pop
adc
push
mov
cli
shl
dec
sub
movs
add
push
lock
adc
call
pop
add
stos
jmp
int3
out
dec
int3
neg
xor
xor
ror
mov
daa
mov
test
add
or
push
es
enter
mov
or
mov
call
push
retf
mov
mov
push
sub
test
push
xor
ror
mov
shl
outs
push
adc
(bad)
jns
lds
and
je
iret
jmp
jne
push
mov
in
jmp
inc
cli
inc
cmp
pushf
mov
pop
stos
cmp
jne
cmp
out
shl
add
pop
lahf
push
and
jle
aam
adc
(bad)
cli
es
pop
sbb
ret
push
push
mov
add
pop
push
pcmpeqw
or
xchg
or
aas
inc
mov
cmp
repnz
cmps
jmp
popf
mov
fwait
adc
sbb
xchg
inc
mov
leave
ins
cmp
mov
imul
je
jge
mov
push
xor
mov
aaa
cmps
bound
jnp
stos
lock
fldcw
aam
les
sub
jl
mov
push
or
adc
pop
mov
xor
sub
lds
push
hlt
jae
fcom
pop
pop
dec
loopne
inc
push
xor
jmp
push
out
mov
test
mov
bound
add
xchg
iret
cld
iret
(bad)
stc
add
mov
bound
xor
cmps
lods
and
or
and
or
loop
add
xchg
and
mov
(bad)
(bad)
jl
add
push
fwait
mov
shr
call
inc
ret
pusha
imul
sub
add
cs
add
fdivr
rcl
xchg
push
(bad)
push
xchg
or
pop
or
xor
adc
idiv
pusha
mov
add
sbb
mov
sbb
aam
inc
mov
xchg
call
push
and
or
leave
lahf
pusha
pop
sub
cmps
data16
push
xchg
sbb
aas
jle
sbb
imul
pop
push
test
add
shl
add
add
aam
push
mov
repz
inc
inc
aad
adc
cmp
addr16
sbb
bound
retf
push
loop
sahf
xor
pop
pusha
lods
sbb
inc
test
lock
xor
inc
sbb
push
les
retf
inc
cmps
mov
xor
stos
sbb
mov
push
cmp
je
cmc
add
test
je
or
aam
push
mov
sbb
push
push
out
mov
add
jle
cmp
add
in
dec
or
push
retf
inc
es
aaa
or
vmovmskps
mov
sub
adc
retf
enter
mov
mov
call
xchg
jne
and
push
enter
mov
add
xor
pop
xchg
stc
inc
rol
enter
mov
ins
mov
jb
sbb
sar
es
mov
dec
xchg
sbb
inc
pop
inc
pop
pushf
jecxz
jg
mov
pop
or
cmc
retf
push
mov
mov
inc
nop
and
sbb
je
cmp
je
leave
add
movs
add
or
push
xor
add
lods
gs
pop
scas
test
push
add
pop
pop
mov
xor
dec
add
inc
sub
sar
int3
mov
cmp
(bad)
mov
str
mov
pop
push
push
push
push
sub
stc
dec
loopne
and
and
es
and
pop
and
or
cmc
xor
jae
sahf
or
pop
ins
and
adc
jmp
movs
adc
push
push
sub
cwde
or
jne
les
jp
push
mov
ret
rol
lods
dec
loope
and
sar
add
or
dec
movs
sar
jae
push
std
add
push
push
data16
jle
pop
ret
mov
cmp
jne
xor
inc
hlt
pop
sub
cmp
dec
jo
add
inc
and
push
xchg
add
add
xchg
push
mov
xor
mov
sbb
cmp
popa
dec
or
ss
pop
cmp
adc
and
mov
push
mov
ss
sbb
ret
sbb
sub
sbb
fs
das
repz
in
aad
push
mov
test
sub
lea
sbb
pop
icebp
sbb
pop
push
les
fldenv
pushf
xchg
fmulp
movs
pushf
test
bound
cmc
add
add
sub
sbb
aaa
gs
out
in
js
cwde
inc
jp
loop
mov
into
sbb
mov
or
and
test
mov
cwde
test
sbb
int3
cmp
jp
dec
daa
movs
or
lahf
ret
pop
fldenv
cmp
mov
cmps
jns
out
xor
jle
mov
cs
mov
sbb
sub
fnstcw
and
pop
aad
mov
and
mov
mov
sahf
fsub
test
mov
and
mov
push
cmp
mov
cmp
je
cmp
jne
(bad)
dec
adc
sub
shl
shl
sbb
or
pop
mov
push
push
iret
dec
jne
addr16
pop
jb
adc
push
push
mov
mov
add
nop
mov
push
sub
sub
inc
sbb
push
inc
xor
movs
frstorw
dec
enter
mov
adc
mov
rcr
dec
or
jge
jbe
sub
mov
push
push
je
push
jle
icebp
sbb
cmp
mov
add
pop
int3
push
mov
add
xchg
sub
imul
das
xor
sbb
or
and
push
dec
arpl
pop
cmp
rcl
into
push
xor
aam
(bad)
mov
add
lods
cmps
jl
or
push
push
add
add
inc
call
mov
xor
cmp
add
stos
pusha
push
mov
ins
push
ret
clc
and
adc
ret
es
and
dec
push
xchg
(bad)
imul
clc
jmp
out
out
add
adc
fmul
mov
enter
mov
ret
pop
mov
jge
stos
sbb
in
rcl
mov
in
inc
lods
dec
mov
outs
and
sub
mov
mov
hlt
mov
push
jmp
shl
mov
inc
xchg
inc
in
push
jnp
push
or
rcl
inc
cmps
(bad)
push
jmp
mov
sbb
loope
in
push
xchg
xor
jmp
cmp
xor
mov
mov
dec
sahf
add
lock
retf
mov
andps
push
adc
jne
push
pop
pop
add
stc
clc
jg
pusha
pop
js
clc
adc
inc
sbb
call
and
dec
add
test
add
repz
fucomp
fnstsw
test
jnp
sbb
fcom
inc
jne
fxch
ret
sub
clc
xchg
fchs
jmp
mov
loop
cmp
shr
fiadd
je
push
jmp
cmp
add
jae
fdivr
add
fcom
adc
mov
jnp
fstp
fxch
rcl
inc
int3
add
jl
mov
sbb
add
sti
or
cli
sahf
and
add
(bad)
fld
add
movaps
int
inc
cmp
push
push
movs
nop
inc
inc
stc
mov
push
sub
pop
cmp
pop
sub
mov
mov
fnstcw
(bad)
cdq
je
in
int3
xor
mov
sub
push
scas
fwait
aad
adc
sub
in
lods
or
cmps
pop
push
mov
or
push
iret
in
fadd
jae
iret
call
jmp
iret
and
popf
jae
push
cli
push
or
xchg
sbb
pop
je
rcr
push
iret
mov
js
mov
cmp
js
inc
loope
je
int
stos
shr
mov
adc
cmps
jge
in
cmp
push
ds
jl
mov
dec
movs
jns
mov
popa
push
mov
aam
mov
adc
test
inc
bound
scas
jg
sbb
cmp
sub
and
adc
adc
cmp
jle
icebp
in
mov
xor
es
loop
push
adc
push
dec
in
(bad)
ja
jbe
aad
loop
pop
jne
mov
xor
inc
popa
in
jmp
or
fwait
sbb
and
and
xchg
cmp
xchg
loope
dec
in
in
fs
adc
jo
daa
daa
or
sub
movs
fwait
int
mov
or
data16
in
les
add
cmp
xor
lock
mov
add
push
sub
cmp
(bad)
cmp
and
clc
mov
shr
sub
cmp
popf
push
push
les
push
mov
stc
(bad)
les
pop
call
bound
sti
add
adc
dec
or
mov
imul
jmp
outs
test
mov
add
or
ret
cli
fisttp
xchg
sub
movs
pop
ret
stc
adc
mov
xor
mov
inc
data16
pop
and
mov
pop
fnstsw
mov
mov
(bad)
push
test
xchg
mov
fld
sbb
pop
add
fst
add
mov
pop
push
and
push
mov
ins
push
les
and
(bad)
out
loopne
or
mov
ffreep
jecxz
mov
jbe
lea
push
dec
(bad)
add
add
int3
add
and
mov
test
rep
cli
xchg
ror
ror
pushf
rol
add
push
arpl
fcmovnbe
and
sub
scas
ss
sub
(bad)
mov
in
mov
adc
test
sbb
icebp
push
xor
fneni(8087
stc
and
jmp
das
adc
unpckhps
jns
movs
(bad)
lock
pop
lods
iret
add
clc
aaa
lds
xchg
pop
icebp
xchg
inc
fmul
pop
call
jle
push
cmps
push
in
and
in
jno
or
or
mov
in
inc
fst
shr
inc
inc
push
push
add
xor
test
mov
cmp
mov
dec
mov
xchg
retf
or
mov
push
inc
mov
inc
loop
(bad)
mov
sbb
inc
aam
cmp
call
push
xchg
lods
sbb
fldenv
adc
push
or
pop
(bad)
stc
fcmovne
or
mov
pop
out
or
loopne
enter
mov
mov
and
call
call
and
mov
test
push
xor
pop
and
in
inc
or
add
or
add
and
movs
scas
inc
fsubr
sbb
popa
mov
ror
mov
outs
xor
sbb
dec
es
cmp
xchg
ror
out
pusha
xor
sbb
inc
jmp
pop
inc
push
pop
inc
test
jb
inc
inc
jne
pop
pop
add
pop
ret
xchg
xchg
xor
push
add
leave
or
add
mov
ds
mov
and
pop
mov
jo
or
out
(bad)
pop
cmp
je
adc
cdq
pop
das
je
or
or
js
test
pop
dec
or
fxch
sub
or
movs
in
xchg
and
stos
push
and
dec
add
movs
jne
test
push
lds
sbb
xor
mov
cmp
push
jne
fwait
cmp
pop
jo
cdq
inc
leave
adc
push
mov
push
jmp
inc
jge
enter
pushf
dec
add
mov
jl
aam
int
stos
fimul
icebp
jne
ret
inc
push
inc
in
jmp
cmp
cmp
sbb
mov
mov
push
or
mov
int
pop
push
shr
push
xor
pop
and
mov
and
push
push
push
dec
inc
(bad)
ret
jl
or
cmp
aad
adc
cmp
cmp
xor
dec
add
cmp
push
push
mov
dec
cmp
nop
and
cmp
and
or
sbb
sub
xlat
imul
mov
mov
jmp
push
repz
xor
cli
and
lds
mov
repnz
in
loop
(bad)
push
enter
sub
inc
push
xor
push
xchg
(bad)
in
ss
setg
sbb
cmc
or
or
inc
dec
xlat
es
ficom
dec
jne
sbb
movs
xchg
push
push
dec
lea
push
adc
xlat
sbb
jl
pop
push
frstor
cmp
and
jmp
loopne
sub
push
mov
frstor
aaa
mov
loope
scas
shl
add
mov
add
mov
or
jmp
shl
rol
dec
jns
test
pop
mov
retf
adc
add
inc
ret
adc
jmp
add
pusha
sub
in
mov
jmp
fstp
add
jnp
movs
shl
test
and
popa
sbb
mov
mov
adc
mov
mov
mov
movs
dec
sub
push
or
inc
sub
mov
push
cmps
imul
push
sti
cmps
inc
imul
xchg
and
adc
stc
repz
jg
cmp
jns
scas
sti
mov
pop
iret
(bad)
stos
rcr
sbb
rol
mov
xchg
mov
es
push
enter
iret
inc
add
and
xchg
or
inc
ret
rcr
add
push
add
ret
and
jo
and
push
add
xchg
and
cmp
inc
leave
pop
sbb
jae
add
retf
pop
pop
or
hlt
push
stos
pop
dec
test
test
test
or
lods
popa
sub
les
jmp
loope
push
push
lods
or
clc
rcr
push
push
mov
hlt
push
arpl
in
test
jns
arpl
jl
sar
and
loop
hlt
mov
sub
mov
sub
nop
mov
mov
mov
fist
rcl
sbb
jae
movs
mov
dec
popf
lock
cmp
cli
test
push
jge
stc
shl
sub
je
cmp
inc
(bad)
jl
add
cmp
mov
arpl
inc
jecxz
jb
out
adc
xchg
or
(bad)
ja
jne
mov
test
dec
int3
repnz
add
mov
mov
mov
and
xchg
dec
fidiv
push
dec
push
fs
mov
pop
xlat
push
mov
sbb
mov
mov
xchg
push
add
or
adc
out
inc
dec
add
mov
mov
pop
pop
add
test
mov
jmp
in
xchg
mov
jmp
bound
inc
and
lods
mov
xchg
inc
push
jne
pop
mov
or
or
sub
cmp
mov
or
mov
shl
nop
pop
pop
cmp
inc
add
xor
mov
test
pusha
mov
int3
dec
cmp
leave
scas
sbb
fwait
into
scas
adc
mov
push
mov
enter
or
push
sub
pushf
in
xlat
es
or
adc
xor
int3
push
adc
mov
pop
jl
adc
lock
jne
push
mov
push
int
jl
sbb
adc
or
(bad)
into
sbb
inc
pop
dec
gs
jmp
pop
mov
fdivr
ret
jnp
sar
loope
out
ins
sbb
or
ins
mov
pop
bound
inc
stos
inc
inc
mov
push
out
out
sub
inc
outs
pop
pop
imul
mov
sub
mov
cdq
mov
pop
retf
div
daa
icebp
daa
mov
or
out
(bad)
mov
or
pop
mov
push
mov
adc
push
xor
and
mov
sbb
pop
(bad)
daa
test
pop
popf
test
dec
hlt
adc
push
stos
jmp
pop
test
sub
mov
or
sahf
imul
push
xchg
sbb
mov
sti
sub
mov
or
push
push
in
fs
lds
lock
dec
push
mov
xchg
popa
hlt
mov
js
clc
mov
xor
fisttp
adc
push
popf
xor
je
into
jmp
xchg
xchg
ss
and
adc
xchg
das
sbb
or
es
and
enter
jns
iret
push
dec
daa
je
fwait
test
jle
jle
out
loop
adc
push
movs
mov
and
push
retf
or
stos
fisubr
fucomi
cmp
stc
stos
loope
sub
cmc
inc
mov
push
into
push
dec
sbb
cmp
pop
call
mov
dec
push
xor
jb
or
ret
push
daa
xchg
jae
push
and
pop
dec
cwde
mov
nop
neg
rcl
test
lock
mov
(bad)
in
fld
orps
and
ret
cmp
adc
jge
lock
jge
ret
ds
jmp
jo
adc
push
xchg
mov
mov
xor
adc
fcomp
pop
and
aam
mov
pop
and
mov
or
inc
xor
call
xor
and
jne
mov
add
nop
loopne
add
sub
sbb
in
or
cmp
push
jae
or
add
push
push
mov
and
fsub
mov
clc
sub
inc
add
and
pop
test
out
and
test
out
jl
fs
or
mov
add
inc
mov
js
adc
fstp
js
cmp
fild
sbb
xor
jmp
je
fcmovnb
loope
in
push
mov
das
mov
(bad)
lock
pop
fbld
or
cmp
iret
sahf
or
add
(bad)
call
dec
loop
mov
lea
ins
call
test
inc
jo
push
movs
sub
arpl
out
xor
or
cwde
dec
stc
pop
loope
push
(bad)
test
mov
add
add
xor
(bad)
mov
jg
dec
fdiv
dec
ret
add
lahf
out
ins
inc
mov
(bad)
xor
lods
loope
xor
jmp
stos
push
retf
sbb
or
or
les
fsub
push
les
xchg
mov
les
sbb
mov
inc
int3
or
lods
inc
dec
sar
pusha
and
std
adc
mov
shl
es
push
mov
jle
mov
mov
mov
inc
ror
push
and
xchg
aad
adc
popf
sbb
xchg
mov
stos
(bad)
fist
sub
js
ja
push
clc
pop
pop
xchg
mov
jg
test
bound
imul
push
call
cmp
or
retf
aam
jmp
aam
jns
iret
push
in
enter
mov
ss
sub
inc
push
(bad)
mov
add
popf
push
xor
icebp
cmp
test
in
aam
lds
lds
out
inc
ds
icebp
add
sbb
push
xchg
cmp
mov
push
mov
dec
xor
jmp
jmp
inc
std
mov
pop
xor
lahf
mov
sub
loop
cmp
mov
fsubr
dec
int
xor
push
fcmovnb
mov
push
sbb
rcl
xor
xor
mov
xchg
mov
sub
out
inc
cmp
cmps
push
popf
test
stos
inc
xor
or
sbb
nop
(bad)
test
stc
fcmovnb
test
xor
repnz
pop
push
push
xlat
cs
push
sbb
inc
je
popf
into
lods
inc
inc
mov
inc
mov
add
pop
mov
mov
mov
inc
push
xchg
pop
in
sub
adc
adc
and
pop
leave
or
popa
jnp
cmps
sub
dec
pop
add
mov
jno
fsubr
pusha
in
jecxz
or
inc
fst
dec
pusha
push
out
mov
mov
or
(bad)
xchg
add
mov
loopne
repz
rcl
mov
or
pop
push
xchg
mov
(bad)
mov
push
sar
test
push
mov
inc
imul
or
sub
sahf
into
sbb
adc
mov
movs
int3
ret
jmp
movs
dec
pop
loope
add
mov
push
pop
sbb
cmc
adc
movs
ins
add
xor
adc
mov
sbb
mov
jecxz
(bad)
add
imul
or
jnp
push
mov
js
sbb
mov
mov
daa
xlat
inc
or
pop
mov
rcl
mov
dec
jmp
jns
or
sbb
push
addr16
mov
lea
daa
dec
pop
sbb
mov
jb
pop
inc
es
dec
or
cwde
or
push
sbb
add
sbb
add
hlt
mov
stc
fmul
pop
imul
cmp
push
sub
mov
cmp
push
jmp
dec
lock
cwde
mov
or
pop
mov
jno
xchg
push
icebp
sbb
and
jns
xor
xor
jmp
add
push
inc
push
dec
sahf
mov
popa
mov
int
mov
add
push
push
lods
push
lea
and
or
and
in
sar
sbb
sbb
dec
cwde
icebp
shl
jmp
mov
jb
enter
jb
inc
xchg
ficomp
sbb
mov
and
jp
out
pop
push
je
add
and
push
adc
fsub
jb
test
xor
xchg
and
add
sub
xor
mov
enter
je
nop
push
add
dec
retf
or
sub
sahf
xchg
lock
or
ret
push
(bad)
aaa
mov
pop
and
retf
sub
xchg
out
cs
sub
or
mov
es
jno
push
cs
jge
into
das
push
das
mov
movs
inc
xor
inc
xchg
sub
jmp
test
dec
dec
movs
and
xor
or
in
pop
sbb
or
loopne
xor
adc
pop
pop
add
clc
jmp
add
mov
fsubr
add
mov
push
popf
les
rol
idiv
das
je
jne
dec
call
sbb
sub
stos
outs
mov
call
mov
push
inc
mov
movs
(bad)
data16
adc
or
iret
jnp
xchg
rcl
test
adc
sub
inc
mov
jp
push
cmp
xor
or
outs
pop
mov
and
loop
jmp
cmp
jmp
ret
adc
adc
lahf
push
add
aas
int
test
gs
cdq
(bad)
inc
inc
inc
and
mov
xchg
push
cmp
ret
(bad)
imul
lea
push
jne
sub
push
arpl
push
xor
pop
sbb
sbb
fld
push
mov
ret
call
shl
xchg
mov
retf
les
push
xchg
mov
mov
jl
pop
sub
sete
mov
lods
or
push
es
fsubr
dec
sahf
adc
jecxz
out
adc
jle
inc
movs
ret
stos
add
fwait
int3
mov
add
inc
pop
xchg
test
pop
sti
daa
and
inc
xor
jle
movzx
adc
mov
cmp
jne
loope
mov
add
ja
mov
sahf
je
mov
push
fld
(bad)
(bad)
sub
test
inc
or
add
pop
loopne
jmp
jne
inc
cmp
adc
xor
sbb
sub
imul
popf
dec
jmp
loopne
mov
jne
mov
loopne
jl
ja
add
jmp
repz
jo
(bad)
mov
mov
in
jmp
jl
mov
cmp
(bad)
mov
add
data16
call
add
inc
gs
dec
into
mov
mov
sub
mov
cs
and
rol
xchg
push
in
cmp
je
stos
jne
inc
lods
aad
das
adc
dec
jns
mov
jmp
push
in
icebp
mov
dec
lahf
and
dec
ror
push
imul
js
call
(bad)
xor
jne
push
mov
mov
repz
sub
pop
push
sti
mov
or
xchg
pop
ret
cmps
or
jecxz
sahf
push
mov
retf
sbb
sub
pushf
and
push
push
push
mov
jle
sub
mov
mov
mov
ins
push
arpl
dec
pop
inc
ret
ret
mov
xor
adc
fst
enter
or
mov
mov
sbb
cmp
inc
inc
push
pop
push
push
lods
or
jmp
les
xor
mov
pop
mov
and
mov
jbe
mov
xor
bound
adc
jne
push
push
push
push
mov
dec
aad
mov
xchg
mov
jmp
repz
push
pusha
xor
xchg
mov
test
mov
push
sar
jecxz
(bad)
cdq
int3
cld
push
adc
mov
sub
in
ds
cmp
leave
jmp
inc
adc
dec
in
mov
add
jne
das
pop
xor
cmp
ss
or
mov
jb
adc
les
mov
loop
ficomp
mov
mov
xlat
dec
hlt
jns
cmp
xor
adc
mov
ret
ja
test
xchg
lock
jnp
shl
push
rcl
dec
cmp
cmp
sbb
ror
push
push
adc
push
(bad)
ror
sar
push
ret
mov
jmp
inc
std
push
sub
jecxz
add
inc
push
dec
pop
dec
dec
sub
inc
fimul
mov
jae
or
test
xor
sub
lods
je
adc
lods
shl
xor
xor
push
lds
mov
pop
mov
add
sub
or
sahf
push
inc
rol
xlat
mov
test
push
mov
sbb
lds
imul
mov
arpl
mov
or
dec
push
inc
gs
xchg
stos
dec
push
or
inc
push
(bad)
jns
add
adc
or
xchg
jge
dec
out
and
mov
mov
mov
pop
push
and
imul
je
fs
push
mov
or
movs
inc
scas
xchg
outs
pop
jns
bound
cmp
push
into
xchg
loopne
sbb
jno
mov
aam
je
cmp
cwde
popf
sub
dec
jmp
fmul
push
push
push
xor
jno
ins
sub
inc
loope
jmp
cmp
cdq
rcl
add
jae
pushf
mov
push
mov
inc
mov
jbe
sub
jl
jl
adc
addr16
cmp
mov
or
cmp
mov
mov
cmp
adc
mov
cli
xchg
push
jp
dec
int
push
xor
test
add
int
lea
push
add
mov
arpl
call
add
add
mov
mov
arpl
mov
(bad)
lock
push
ret
fcomp
mov
sbb
add
mov
pop
fwait
pop
xor
dec
cmp
xchg
shr
xor
sub
pop
mov
sbb
dec
mov
inc
adc
and
inc
add
aas
dec
dec
in
push
stos
ret
add
pusha
hlt
add
pop
cli
pusha
inc
mov
mov
pop
xchg
add
adc
push
pop
push
ret
mov
push
dec
mov
cdq
inc
inc
xor
add
pop
mov
inc
or
xchg
inc
mov
adc
shl
fwait
jne
or
push
or
cdq
imul
test
jmp
aad
test
sbb
mov
push
lahf
mov
xchg
aas
(bad)
pop
push
imul
cld
push
mov
into
sub
adc
inc
push
inc
dec
or
jmp
push
dec
mov
xchg
inc
xchg
and
gs
xchg
add
push
mov
inc
retf
pop
imul
pusha
inc
inc
xor
jmp
xor
push
jmp
punpckhwd
fistp
adc
les
sub
enter
dec
ret
imul
dec
stc
and
adc
clc
jmp
pop
xor
and
push
jge
push
mov
xlat
push
test
xor
mov
cmp
test
sahf
sbb
cmp
popa
and
inc
je
or
and
inc
add
inc
mov
push
dec
push
lahf
or
adc
adc
cmp
dec
mov
xor
das
sbb
jmp
or
adc
xchg
retf
pop
adc
sbb
ins
push
retf
push
cmc
or
out
bound
push
cld
push
xchg
into
add
movs
ins
nop
xor
sahf
push
lds
xchg
ret
je
jne
mov
push
xchg
or
ret
sbb
jno
jne
shl
inc
and
jmp
and
pop
out
add
add
pop
or
std
sub
or
mov
imul
and
mov
bound
(bad)
jne
jne
mov
neg
pushf
fs
pusha
cs
push
xchg
adc
pop
push
popa
add
(bad)
pusha
adc
inc
test
cmp
mov
fistp
jl
cmp
mov
xor
js
test
mov
add
inc
add
mov
add
mov
push
pop
inc
(bad)
mov
cmp
pop
rcr
xor
jmp
push
xor
lea
cmp
jne
cmp
nop
test
add
mov
and
cmp
mov
jmp
cmp
jne
cmps
xchg
call
sbb
cmps
loopne
(bad)
jmp
push
jbe
nop
jl
adc
add
mov
loopne
(bad)
inc
mov
adc
mov
sbb
in
pop
in
or
jns
sub
add
cmp
test
push
dec
adc
lea
push
enter
jg
add
test
out
adc
in
pop
xor
xor
mov
sub
push
mov
(bad)
and
jne
mov
cmp
mov
enter
je
jne
(bad)
pop
pop
jge
inc
push
add
jmp
add
movs
cmp
ror
popf
adc
test
adc
cmp
mov
scas
xor
add
or
xchg
aas
not
jp
cli
lahf
clc
jle
push
add
inc
mov
add
cmps
and
sbb
dec
mov
nop
in
add
movs
arpl
pop
mov
push
inc
adc
pop
clc
cmps
jmp
xchg
arpl
mov
mov
inc
(bad)
cmp
and
adc
mov
sbb
mov
mov
push
movs
rcr
call
fisubr
lods
and
and
push
pushf
dec
and
cmp
dec
mov
dec
jp
fadd
and
ror
jl
scas
loop
add
imul
cmp
ret
leave
fs
jmp
adc
jg
stos
inc
shr
sbb
sub
sbb
push
pusha
ds
hlt
and
mov
mov
xor
push
adc
stos
pushf
sbb
les
inc
mov
xchg
push
aas
jmp
jbe
dec
and
pusha
and
test
cmp
inc
and
sub
je
dec
je
or
xchg
jne
adc
jmp
push
cmp
je
mov
(bad)
push
cwde
push
out
mov
dec
and
sub
mov
pusha
das
sub
dec
mov
nop
jmp
xor
sbb
and
adc
out
(bad)
setbe
out
push
leave
and
inc
xchg
push
dec
out
das
add
push
push
fdivr
jp
inc
pop
(bad)
sub
imul
fs
ror
mov
stc
dec
dec
scas
mov
and
sti
xchg
in
arpl
or
fdiv
add
scas
sub
add
loop
aam
call
test
fisttp
sbb
fild
mov
gs
stc
dec
pop
and
ror
ins
push
lds
jnp
ja
jbe
sub
xchg
or
mov
stos
push
push
pop
mov
or
mov
sub
enter
lea
xor
lea
jbe
or
dec
and
inc
sub
dec
cmps
add
cmps
sbb
sar
dec
repnz
push
push
push
dec
sbb
inc
rcl
add
lods
or
cmp
add
lock
stc
mov
inc
cld
mov
push
cmp
and
xor
pop
cs
inc
mov
test
xchg
ja
adc
pop
leave
pop
dec
sbb
mov
cmp
mov
or
sub
addr16
ret
mov
xchg
push
xor
sbb
test
inc
fstp
in
or
addr16
pop
pop
push
inc
movs
and
cmp
xor
cli
call
cwde
test
and
test
xor
lock
adc
call
xor
mov
and
sbb
(bad)
push
in
cmc
mov
in
loop
push
out
push
data16
sbb
mov
mov
push
mov
sbb
cmps
in
sbb
inc
xchg
clc
js
dec
adc
dec
repz
bound
jo
mov
movs
call
lds
das
ret
ins
jp
enter
cmp
pop
adc
in
in
cmp
je
mov
retf
aad
lahf
push
or
push
and
mov
ret
xchg
out
dec
fcom
sub
sub
stos
adc
jne
dec
sahf
add
adc
emms
daa
sar
xchg
xor
mov
sar
add
and
push
dec
sub
aam
int3
dec
shl
or
mov
fdiv
mov
(bad)
or
xchg
dec
das
cwde
outs
add
inc
sub
cwde
dec
or
aad
pop
add
mov
call
push
and
push
pop
sbb
mov
mov
aam
inc
mov
dec
js
aam
in
fxch
pop
fs
xor
adc
pop
mov
dec
imul
cld
ins
imul
das
push
inc
sbb
lock
into
cmp
dec
mov
mov
outs
ins
iret
fstsw
cmc
push
dec
sub
ds
mov
dec
lock
dec
scas
maskmovq
movs
dec
pop
dec
xchg
mov
mov
gs
jle
xchg
fst
icebp
dec
enter
in
add
cmp
pop
jo
jo
js
cmp
lds
stc
outs
popf
or
jbe
lods
lods
cmp
call
jg
sub
loope
cmps
icebp
clc
dec
int3
dec
mov
in
or
push
push
dec
ret
xchg
jmp
nop
add
outs
push
je
pusha
push
inc
mov
inc
mov
mov
push
mov
push
pop
inc
sub
add
mov
scas
mov
ret
jge
inc
push
and
inc
jmp
sub
jmp
push
mov
cmc
add
call
or
sbb
clc
pop
xor
pop
sub
adc
xchg
sub
xchg
and
vsubpd
jmp
xchg
mov
and
cmp
jg
mov
mov
mov
rcl
jp
sar
popa
add
je
not
inc
and
sbb
xchg
dec
in
inc
repz
mov
in
push
xchg
int3
in
jno
sbb
push
repz
dec
ins
mov
repz
retf
sbb
jmp
mov
fmul
lods
aad
push
icebp
adc
dec
rep
or
inc
push
pop
test
jle
pop
mov
jne
retf
push
call
sbb
por
btr
dec
cwde
verw
mov
mov
fs
and
mov
add
dec
lea
mov
(bad)
scas
jmp
xor
pop
push
(bad)
add
out
jno
mov
push
cs
mov
mov
fcom
fcom
mov
xchg
rcl
pop
pop
inc
stos
in
(bad)
or
test
data16
xlat
add
push
mov
add
pop
sar
or
xchg
sub
sbb
stc
mov
daa
mov
sbb
cmp
int3
push
retf
sbb
dec
shl
dec
inc
mov
add
mov
jmp
addr16
aad
add
ja
push
add
dec
or
jmp
mov
mov
adc
or
push
ja
adc
push
jge
test
nop
push
push
mov
fs
push
(bad)
pop
jmp
or
sar
jae
aam
sbb
mov
das
sbb
mov
cmp
xor
adc
push
push
lods
jae
retf
popa
shl
push
pop
arpl
(bad)
fwait
inc
jb
push
sub
lahf
call
das
sub
sub
cmp
xor
add
push
push
retf
dec
cmp
mov
sbb
or
in
pop
mov
test
mov
and
jle
sar
cmp
pop
adc
aaa
aas
inc
shr
and
pop
sub
popf
mov
lods
mov
inc
pop
pop
mov
fistp
xor
push
pop
icebp
xchg
pop
and
aas
(bad)
loopne
std
cmps
sub
pop
mov
in
aas
jbe
je
popf
pop
jp
add
or
pop
fild
rcl
push
mov
mov
test
pop
inc
cmp
push
inc
out
rcr
adc
sbb
lea
adc
push
or
jge
std
cmp
and
inc
dec
cmps
fdiv
and
popf
sar
test
bound
repz
push
dec
mov
or
mov
dec
inc
cmp
scas
inc
sysret
mov
or
add
jl
das
adc
mov
dec
sbb
xchg
(bad)
fisttp
out
adc
out
jb
sub
jnp
dec
mov
cmp
jle
fsub
in
add
mov
jae
in
(bad)
push
addr16
dec
ret
jbe
aaa
rol
inc
mov
jmp
mov
leave
call
ret
jne
and
cmp
inc
in
mov
(bad)
push
jecxz
imul
push
push
test
mov
je
adc
scas
sahf
pop
adc
or
adc
jmp
push
jmp
jmp
push
pusha
outs
xor
inc
repnz
mov
in
mov
mov
fcom
xchg
mov
data16
frstor
call
add
mov
mov
rcl
jmp
push
push
xchg
enter
call
xchg
mov
pop
loopne
movs
data16
or
dec
aam
dec
or
jne
jbe
ja
cmp
fimul
add
(bad)
shl
movs
call
cmp
in
movs
rcl
mov
int3
add
fidiv
movs
mov
test
fidiv
(bad)
aam
mov
lods
sub
or
inc
xor
aam
mov
movs
ret
mov
inc
mov
or
cwde
dec
ret
mov
jle
add
or
(bad)
retf
xchg
add
fcomp
fisttp
(bad)
jns
add
dec
loop
push
or
add
xor
imul
cwde
cli
add
push
adc
clc
test
(bad)
scas
push
fistp
lea
push
push
sbb
popa
icebp
pushf
xchg
pusha
inc
xor
pop
(bad)
std
movs
test
imul
retf
or
(bad)
jmp
mov
cmp
inc
fist
mov
(bad)
retf
pushw
inc
cmps
and
or
cwde
cld
sub
mov
dec
xor
nop
lods
mov
or
sbb
adc
js
ins
pop
push
mov
js
cmp
ja
ret
jne
cmp
mov
jge
in
inc
pop
sti
and
mov
lahf
mov
in
cmp
fadd
cmps
ret
sti
or
inc
sub
(bad)
jo
mov
scas
add
in
adc
in
inc
jae
nop
push
in
or
adc
fistp
cmps
test
mov
pop
push
xchg
inc
test
(bad)
pop
and
push
xchg
mov
loopne
sbb
pop
inc
ss
dec
in
in
in
jecxz
scas
dec
cmps
push
jle
fldenv
mov
mov
mov
xor
and
rcr
shl
lods
mov
pop
retf
rcr
rcl
or
xor
sbb
xchg
xlat
and
dec
add
mov
adc
add
stos
lahf
or
pop
jge
jae
or
pop
sbb
loopne
push
xchg
loopne
call
xchg
push
mov
pop
rcr
pop
dec
int3
and
add
test
mov
cwde
add
inc
cmp
retf
inc
push
ret
sahf
(bad)
xlat
sbb
add
xchg
or
dec
ret
mov
mov
and
cmp
xchg
stos
stos
mov
push
add
xor
jmp
shr
mov
xor
std
stos
jecxz
scas
or
adc
clc
mov
leave
push
call
(bad)
in
mov
mov
lods
sub
jecxz
xchg
call
int3
test
popf
aaa
bound
data16
cld
aas
stos
jecxz
lods
lods
cmc
mov
(bad)
fldenv
or
sbb
or
lock
push
and
inc
loopne
fadd
jne
sti
loopne
gs
and
in
mov
call
mov
iret
or
ins
cmc
fcomp
or
cli
arpl
add
add
adc
jbe
loopne
loopne
xor
adc
xchg
or
sbb
adc
push
dec
loopne
add
mov
jne
and
inc
bound
sbb
enter
nop
hlt
sub
cmp
js
push
repnz
mov
stos
fsub
cmp
cdq
or
sti
add
(bad)
enter
add
sub
pop
ficom
add
(bad)
xor
test
pmullw
bound
add
pop
mov
dec
inc
stos
mov
and
loope
test
sbb
mov
pop
push
jmp
push
stos
ret
add
jge
mov
pop
or
pop
add
cli
mov
daa
or
pop
push
icebp
adc
cmp
pop
loope
xchg
lea
push
mov
pop
sbb
or
push
pop
push
(bad)
cdq
bound
dec
pop
xor
out
sub
test
ss
jnp
ins
push
dec
add
cmp
jmp
cmp
dec
aaa
and
inc
sub
or
je
push
and
add
jo
(bad)
and
mov
inc
pop
push
sub
add
push
inc
mov
gs
xor
sbb
bound
adc
and
ret
push
and
or
push
and
inc
aad
push
sub
stc
pop
adc
mov
mov
cmp
inc
mov
adc
mov
clc
jmp
pop
pop
dec
cmp
je
pop
push
push
ja
test
add
push
rcl
xor
enter
cmp
mov
loope
loopne
push
je
mov
adc
and
pushf
int3
push
(bad)
push
xchg
ins
push
enter
fldenv
or
push
cmp
fnsave
pusha
lds
xchg
mov
test
je
shl
add
jp
add
cwde
call
pop
add
movs
mov
lea
xchg
mov
inc
pusha
xlat
xor
(bad)
xor
adc
jae
adc
call
int3
mov
es
mov
out
push
pop
push
daa
mov
add
(bad)
jmp
push
pop
push
rol
push
sbb
leave
jmp
sub
int3
adc
xor
xchg
ret
jmp
pop
ja
int3
push
clc
sbb
push
mov
mov
enter
jl
add
mov
test
mov
sub
sbb
nop
mov
adc
xchg
cs
push
xor
loope
call
mov
dec
inc
xor
pop
adc
ds
push
xlat
and
mov
xchg
cmp
add
aam
inc
loop
mov
xchg
cwde
push
push
dec
cmp
jl
jnp
push
fdivr
sub
cld
mov
pop
in
fist
mov
mov
imul
cmc
outs
mov
cld
call
lods
inc
xchg
add
aam
sbb
mov
mov
sbb
stc
int3
adc
in
cmp
cmp
xlat
sub
xchg
cmp
out
mov
pop
mov
xor
nop
mov
or
fld
mov
push
cmp
fimul
inc
stos
adc
cmp
jmp
outs
adc
jp
ror
pop
test
inc
sub
movs
je
cmp
mov
cmp
jns
or
shr
inc
adc
fcom
push
push
dec
jno
bound
add
(bad)
mov
cmp
out
adc
movs
retf
test
gs
and
sub
xchg
mov
sub
jecxz
jb
aam
mov
icebp
emms
inc
xchg
xchg
(bad)
(bad)
arpl
iret
pop
test
sbb
je
push
stos
je
xor
fbstp
and
jmp
pop
jl
cdq
je
test
add
jmp
pop
test
aam
cld
sub
cmp
loop
test
adc
sub
sbb
adc
xor
outs
sbb
push
jb
mov
mov
pop
cmp
pusha
push
pop
jnp
test
xchg
and
mov
inc
add
dec
mov
mov
mov
sbb
daa
je
sar
test
leave
(bad)
fcmovnbe
cmp
xor
push
adc
xchg
mov
or
or
dec
sub
cmp
sbb
push
fidivr
sub
cmp
daa
xchg
adc
js
je
inc
call
vhsubpd
js
add
fld1
fstp
test
sub
dec
(bad)
sbb
inc
out
call
rcr
fsub
pop
jecxz
or
push
add
icebp
push
adc
out
and
sub
push
loope
push
mov
cld
fdiv
add
imul
or
sub
cmps
lsl
pop
pop
leave
ret
xchg
cmp
scas
pop
movs
pop
pop
adc
push
test
pop
inc
pop
xor
adc
adc
mov
add
jne
stos
callw
pop
shr
xchg
mov
lods
scas
retf
shl
cld
enter
(bad)
mov
cld
in
adc
and
sub
hlt
cli
ds
mov
pop
icebp
sbb
aam
call
mov
adc
test
dec
mov
fcmovbe
adc
or
sub
and
push
imul
and
dec
imul
mov
adc
add
fmulp
xchg
cli
out
iret
(bad)
lods
pop
adc
jl
movs
(bad)
push
inc
inc
mov
cmp
cld
add
popa
sbb
retf
sbb
ins
ds
inc
and
mov
sub
clc
jecxz
push
dec
push
ror
nop
ror
adc
mov
xchg
mov
stc
or
cmp
cmps
push
nop
fs
push
cmp
xchg
aad
cmp
mov
or
out
inc
or
int
adc
jle
pop
and
mov
mov
and
adc
or
xor
dec
sbb
dec
push
rcl
mov
je
sub
jle
pop
or
rol
(bad)
mov
or
or
fist
test
push
and
add
cmp
loop
(bad)
jmp
jae
ficomp
mov
retf
dec
xor
aaa
push
push
inc
pop
test
adc
add
add
inc
sbb
imul
fdivr
loopne
pop
repz
xchg
adc
std
jecxz
and
mov
and
cmp
sbb
add
mov
aam
add
and
iret
pop
mov
popa
scas
xchg
mov
mov
pop
xor
xor
push
push
popa
pop
xor
ror
or
test
inc
aad
out
les
push
popf
bound
arpl
xchg
mov
push
sbb
jge
lock
out
test
sbb
lds
push
adc
sti
nop
test
adc
mov
xchg
pop
imul
mov
push
mov
xchg
push
call
sub
mov
dec
mov
xchg
int3
add
adc
or
cmp
dec
dec
mov
ret
int
sub
push
gs
loopne
push
inc
dec
adc
pop
jne
lods
outs
add
jmp
repnz
lea
mov
jae
add
push
(bad)
sub
dec
jns
inc
lock
jge
test
ja
retf
pop
ins
and
scas
pusha
push
push
out
push
mov
(bad)
lock
add
add
jb
push
sbb
push
push
and
or
(bad)
retf
and
jge
iret
or
or
push
xor
sub
sbb
or
mov
jo
sbb
and
cmp
test
inc
mov
push
mov
js
add
adc
test
add
lea
dec
dec
add
or
mov
pusha
fild
cmp
push
and
stc
aam
(bad)
xchg
inc
add
lea
mov
push
cmp
add
jo
test
xchg
jmp
mov
or
inc
mov
inc
mov
ret
jo
retf
js
jmp
cli
fisubr
cmp
out
fmulp
lea
xor
fadd
and
jns
pop
sbb
icebp
sbb
retf
mov
jbe
push
das
xchg
cmp
jno
sub
mov
psllw
sub
sub
fs
inc
and
cmp
ds
jnp
and
mov
mov
jge
pop
fnstsw
cmp
cli
push
mov
sti
into
out
in
and
lock
(bad)
cmp
xchg
dec
les
push
std
and
and
fwait
imul
xor
jmp
nop
mov
and
and
ins
cmc
jmp
nop
arpl
push
es
and
ss
pop
popf
xor
jmp
adc
cmp
(bad)
inc
adc
cmp
out
jne
and
xor
jle
add
push
dec
les
add
jbe
fld
mov
xor
lea
dec
jb
inc
idiv
or
scas
cli
(bad)
je
pop
popa
fsub
and
mov
call
in
xor
add
dec
lock
adc
mov
add
push
mov
add
add
icebp
pshufw
das
push
mov
or
aam
call
push
add
xor
and
sbb
retf
mov
pop
xlat
rcr
aam
sbb
push
popa
mov
rcl
lds
jno
pushf
call
push
add
sbb
and
ja
add
retfw
mov
stos
adc
sub
jge
movs
sar
jno
push
enter
push
inc
sti
jecxz
fmul
pop
test
frstor
clc
mov
movs
test
push
sbb
(bad)
out
(bad)
push
push
leave
cmps
inc
jmp
pop
mov
in
leave
cmp
aad
pop
shl
jecxz
lds
iret
dec
xchg
bound
rep
jp
ins
cmps
scas
mov
ret
jge
je
cmp
fmul
mov
or
movs
ins
adc
je
stos
loope
pop
out
(bad)
and
xchg
popa
and
loopne
or
sub
xor
push
sbb
pop
fsub
mov
(bad)
movs
mov
movs
mov
mov
leave
add
aad
mov
ins
dec
pop
push
mov
and
loope
and
fcomp
aas
(bad)
test
enter
mov
imul
pusha
sub
pop
push
aas
push
adc
sbb
jle
div
ret
pop
xchg
mov
pusha
sub
pop
aas
sahf
mov
cmp
pushf
adc
xchg
cld
jmp
push
jne
jp
into
push
retf
dec
mov
sbb
jne
stos
loopne
test
mov
das
test
push
jl
and
clc
stos
stos
pop
or
ja
ss
mov
cmps
lea
bound
sub
cmp
dec
add
and
dec
and
xchg
xor
or
jmp
fdiv
jae
mov
jmp
test
int3
push
inc
and
iret
mov
push
shr
sbb
adc
mov
xchg
bound
dec
out
fld
in
adc
jo
mov
je
mov
loopne
inc
add
call
inc
push
jne
and
les
xor
leave
test
aad
popf
lds
les
addr16
test
xchg
ds
pop
lock
and
xchg
clc
jno
mov
dec
dec
repz
mov
add
repz
stos
sbb
adc
gs
inc
test
mov
out
lock
scas
je
cmp
adc
jmp
ds
ficom
and
jb
cld
scas
outs
(bad)
lahf
mov
sbb
rcl
mov
aas
jl
mov
and
add
out
aad
pop
mov
and
xor
mov
(bad)
xchg
stos
cdq
bound
dec
scas
xchg
jmp
pop
jg
fstp
inc
fldz
mov
mov
enter
rcl
mov
int
out
fs
push
int
xchg
jmp
add
sbb
arpl
test
je
and
pushw
jo
push
(bad)
mov
pop
and
cmp
cwde
mov
and
jo
mov
push
jmp
mov
sbb
sbb
mov
cmc
ror
jo
or
push
cmp
repnz
(bad)
in
ins
jmp
sbb
enter
push
call
shr
jmp
call
push
mov
pop
sub
pop
out
ret
int
mov
aas
pop
push
(bad)
jbe
pusha
mov
cmp
inc
and
nop
cmp
mov
mov
aam
push
cmp
(bad)
jmp
sbb
enter
push
mov
inc
mov
cmp
lods
adc
inc
mov
dec
cmp
push
add
inc
fwait
mov
fdiv
das
pop
and
push
xor
sbb
fisttp
cmp
pop
mov
mov
push
push
mov
movs
loope
cli
or
dec
dec
mov
(bad)
ds
mov
inc
adc
je
fstp
out
jp
pop
xchg
mov
xchg
imul
pusha
ret
push
jns
push
jnp
fisub
xor
test
mov
xor
(bad)
test
es
jmp
fadd
cmps
stos
push
mul
and
and
sbb
leave
std
enter
push
movs
movs
inc
mov
mov
aas
mov
(bad)
mov
test
xor
sub
test
mov
data16
xchg
pop
cmp
xor
lahf
add
push
or
cmp
into
(bad)
out
push
ror
movs
jno
or
xchg
fwait
pop
jo
dec
enter
inc
div
xchg
cmp
lahf
cdq
and
in
mov
xchg
out
pop
loopne
cdq
sbb
je
inc
mov
and
add
or
sbb
daa
adc
push
inc
push
adc
std
lock
ins
out
push
adc
inc
leave
outs
aad
inc
push
mov
nop
xchg
inc
and
push
call
call
or
pop
jns
xchg
mov
call
push
ds
inc
push
or
or
bound
ja
xor
inc
cli
inc
clc
adc
mov
js
cmps
das
int
aam
and
adc
adc
jo
adc
cmps
inc
jecxz
sbb
adc
cli
clc
adc
jno
xor
retf
int3
clc
movntq
out
mov
fnsave
jo
pusha
test
mov
jo
mov
pop
scas
(bad)
cwde
test
into
loopne
mov
and
mov
sub
dec
int
lds
adc
mov
add
bound
pop
sti
dec
xchg
jbe
test
cs
lock
repz
push
stos
mov
stos
call
outs
dec
add
jmp
push
out
dec
mov
test
jo
rcr
stos
mov
fsub
sbb
enter
jg
enter
int3
and
inc
xchg
inc
lods
push
push
inc
mul
ds
sub
loopne
and
push
nop
stos
jecxz
ds
daa
shr
xchg
mov
xchg
xchg
mov
adc
jno
or
inc
ds
sub
scas
mov
and
xchg
loopne
retf
xchg
or
push
mov
cmp
xchg
add
aam
loope
jmp
ja
enter
push
enter
push
mov
mov
cmp
push
sahf
scas
arpl
sub
aam
cmps
test
add
in
dec
jne
sbb
mov
outs
fcmovnbe
jns
test
pushf
es
add
cmc
add
or
lock
icebp
les
xchg
push
dec
gs
rcl
ins
rcr
push
mov
mov
imul
inc
int3
adc
mov
(bad)
dec
jecxz
or
push
lods
mul
fiadd
and
jl
lods
psubusb
popa
push
push
push
xlat
mov
ins
lods
jo
hlt
sub
in
xor
or
lea
lods
add
int3
cli
inc
or
sbb
ror
sbb
clc
or
and
inc
(bad)
and
add
(bad)
push
xchg
add
dec
mov
add
jmp
ror
(bad)
retf
stos
jl
or
cmps
mov
or
jns
mov
add
sub
arpl
or
ins
call
fdiv
call
aas
movs
jnp
test
cmp
sahf
xchg
push
or
(bad)
mov
jl
in
or
mov
clc
sub
xchg
sub
adc
or
sbb
in
sbb
push
enter
fnstsw
(bad)
sahf
fld
(bad)
xchg
fstp
adc
xchg
cwde
shr
xor
cld
mov
or
jo
jne
in
xchg
jns
fwait
int
xor
add
add
push
inc
pop
pop
fcomp
fdivr
and
mov
test
inc
inc
nop
mov
inc
cmp
lods
dec
adc
mov
cmp
mov
test
icebp
mov
sub
mov
push
xor
shl
retf
fisttp
ret
test
sub
push
push
add
sbb
sub
cld
imul
and
popf
popf
add
mov
dec
or
xor
sub
rcr
mov
test
out
aad
push
add
rcl
cmp
sbb
ret
arpl
mov
adc
popf
push
pop
into
les
push
lds
sbb
adc
jecxz
repz
mov
push
shl
mov
pusha
(bad)
fmul
xor
or
adc
dec
ja
mov
and
clc
gs
add
push
fidivr
jg
inc
rcr
scas
xchg
cs
sbb
enter
mov
jbe
dec
shr
scas
pop
xchg
sbb
or
mov
xchg
aas
xchg
ret
(bad)
push
leave
jmp
outs
(bad)
jp
push
mov
and
inc
call
inc
mov
and
cmps
pop
mov
(bad)
mov
(bad)
aad
(bad)
fld
stos
aam
pop
(bad)
mov
mov
adc
mov
sub
xchg
sub
push
or
fidivr
push
pop
(bad)
mov
mov
cmp
test
jecxz
sub
push
lea
sub
and
mov
or
retf
mov
stos
aaa
add
loop
pop
aaa
mov
adc
retf
dec
pop
dec
adc
mov
and
sub
loop
cld
mov
jbe
or
push
outs
xchg
int
xor
dec
and
div
and
wbinvd
inc
push
ret
ror
rcl
and
and
mov
mov
adc
out
les
call
add
loopne
and
jg
and
adc
daa
test
leave
test
jle
sub
push
push
cmp
ret
call
push
add
jbe
mov
in
add
mov
mov
push
push
aam
lea
xor
mov
or
mov
mov
in
js
or
add
test
dec
lea
add
pop
pop
adc
xor
ja
dec
cmp
scas
xchg
stos
mov
loop
mov
jge
invd
and
sub
adc
jo
add
pop
cmp
and
add
int
push
sar
in
sbb
xor
inc
dec
ror
(bad)
push
out
retf
call
inc
push
jg
inc
mov
test
(bad)
(bad)
mov
mov
addr16
adc
mov
add
(bad)
out
sbb
das
adc
hlt
jns
sti
lock
sbb
rol
push
xor
rcl
push
or
adc
dec
cwde
pop
dec
out
mov
mov
pop
inc
popa
pop
mov
mov
adc
mov
fdiv
or
mov
mov
sbb
cwde
dec
cmp
loopne
mov
push
fsub
outs
mov
adc
add
shr
clc
mov
in
fmul
int3
mov
lods
popa
mov
mov
jl
aam
test
dec
pushf
into
or
push
clc
mov
clc
adc
ret
jne
pushf
mov
repz
mov
sbb
out
jo
fdiv
mov
clc
sbb
xor
clc
mov
sbb
mov
push
jae
cmp
sbb
call
push
xor
mov
add
icebp
and
sbb
loope
and
ret
mov
movs
daa
mov
mov
cwde
pop
sbb
sub
sbb
lds
dec
mov
cmp
and
and
and
lock
or
and
ins
mov
mov
pushf
and
movs
pop
xchg
(bad)
xchg
add
into
add
sbb
dec
cs
sub
mov
ins
add
cdq
adc
jbe
xchg
sub
mov
sbb
cmps
xor
xor
pop
and
lods
adc
adc
fsub
mov
mov
inc
sbb
mov
push
fild
push
jo
cld
pop
push
ss
in
dec
push
pusha
into
into
iret
cmp
push
or
add
mov
add
cs
lds
mov
mov
pop
jge
jmp
scas
or
aaa
inc
push
jl
add
pop
cmp
jmp
mov
mov
aam
lea
jp
pop
or
cdq
push
pop
cmps
in
or
hlt
je
push
out
sub
xchg
js
rol
inc
cs
jbe
int3
lea
int3
fisub
lods
or
ins
jmp
(bad)
cld
jp
(bad)
xchg
stos
pop
ins
(bad)
fcom
mov
test
mov
jne
mov
or
outs
pop
and
or
mov
jo
rol
inc
(bad)
lods
lods
mov
sti
shr
pop
sbb
ret
lock
mov
jl
js
shr
fcomp
push
out
js
jns
cli
movs
pop
mov
inc
or
mov
xchg
pop
dec
xor
jge
sbb
add
fcom
leave
jae
lds
xchg
aas
int3
aam
lds
inc
imul
inc
jmp
cdq
dec
inc
loope
leave
in
pop
push
clc
sbb
push
lock
push
push
cmp
test
or
fs
mov
cmp
mov
ret
push
aaa
stc
mov
ret
add
test
push
pop
sbb
mov
iret
repnz
retf
adc
test
inc
fcom
ret
gs
adc
add
ins
rol
push
mov
and
cmp
push
cmp
shr
ja
jno
mov
(bad)
je
push
mov
fadd
mov
push
cmp
sbb
adc
pop
sbb
mov
aam
add
call
fild
push
inc
or
cmps
ja
mov
adc
test
mov
or
pop
mov
test
mov
sub
and
push
test
mov
cmps
(bad)
arpl
sti
movs
js
sbb
mov
sub
std
aam
jg
(bad)
pop
inc
mov
iret
out
push
pop
test
xor
lahf
sbb
sar
out
call
and
or
cmps
je
ficomp
cmp
fsubr
test
shr
mov
fnstsw
cli
pushf
pop
inc
jg
mov
pop
push
test
and
cmp
push
aam
cmp
out
push
add
adc
inc
test
push
lods
and
and
push
and
pop
adc
adc
jle
xor
daa
push
mov
pop
lahf
push
test
std
sub
call
stos
pop
out
sub
dec
and
mov
sub
iret
cmp
enter
dec
lea
inc
fidiv
and
pop
aam
mov
test
sar
(bad)
ja
sub
push
inc
(bad)
push
push
pop
and
ror
hlt
cmp
test
je
leave
and
pushf
adc
add
cmp
jne
mov
add
push
(bad)
dec
mov
mov
je
enter
xchg
jne
mov
jno
enter
pop
or
cmp
in
sahf
inc
jmp
mov
push
(bad)
in
add
push
cmps
and
jne
pop
xchg
ins
dec
add
mov
push
mov
jns
adc
call
xor
xor
sbb
fisubr
xor
xor
sub
mov
mov
imul
xchg
pop
pcmpeqb
ja
iret
cmp
jb
push
mov
cmp
(bad)
sub
enter
lahf
mov
xchg
inc
mov
jecxz
je
hlt
push
stos
into
sahf
push
fmul
lods
sub
rol
mov
sbb
ror
mov
int
fdiv
jae
mov
sbb
add
fisub
int
push
dec
mov
enter
pop
aad
test
mov
cmp
mov
jecxz
int3
or
jo
sbb
out
mov
cmp
mov
cmp
scas
jecxz
scas
adc
push
xlat
loope
bswap
retf
in
into
jmp
adc
inc
push
mov
je
adc
ficom
iret
adc
inc
dec
add
xchg
push
mov
adc
cmp
adc
call
xor
inc
add
arpl
sbb
pushf
aaa
push
ror
test
xchg
hlt
add
ja
call
jns
fstp
adc
neg
inc
or
nop
add
xor
push
pop
(bad)
sbb
sbb
xchg
ja
sbb
push
xchg
cmp
and
adc
and
leave
sbb
lahf
inc
dec
xchg
pop
dec
leave
clc
inc
sub
or
push
sub
dec
lahf
fidiv
rcl
pusha
lock
push
pop
in
inc
jo
adc
out
iret
sub
sbb
push
scas
or
push
clc
into
call
jmp
dec
fmul
push
and
jmp
or
and
mov
into
nop
xor
mov
lods
or
mov
cmp
mov
lea
add
pop
adc
and
outs
xchg
in
inc
nop
ins
jle
out
push
stos
or
rol
pop
std
mov
div
or
or
sbb
jns
or
push
push
sar
and
inc
jns
or
push
shr
pop
sbb
or
sub
scas
cld
mov
adc
rol
clc
bound
push
rol
mov
js
clc
icebp
sub
pop
je
fild
scas
xor
pop
out
mov
or
sar
adc
add
or
mov
pusha
sub
sbb
push
jne
jo
xor
jecxz
push
dec
push
pop
pop
inc
test
add
jmp
ins
repnz
popf
push
test
hlt
inc
adc
rcl
jae
sbb
cmp
add
cmp
sub
adc
(bad)
jmp
pop
shr
mov
pop
in
sub
fs
cmp
or
inc
cmp
and
mov
scas
lds
add
fcomp
les
mov
fdiv
pop
add
mov
push
or
adc
std
push
inc
test
int3
lahf
in
(bad)
sbb
push
dec
inc
movs
retf
mov
push
pushw
jge
jmp
xor
popf
adc
rcl
sar
cdq
test
add
(bad)
dec
fst
loopne
adc
sar
test
stos
cmp
dec
sbb
cmp
jge
mov
jne
call
mov
cmp
or
and
out
cmp
jbe
sub
jns
cmp
mov
out
sub
int3
fnstcw
add
cmp
pop
jmp
outs
inc
mov
test
add
js
outs
retf
cli
sbb
or
call
pop
out
jno
in
or
rol
ja
scas
add
aas
or
push
mov
nop
cmps
and
jbe
add
cwde
lds
in
jbe
rol
(bad)
jp
adc
test
jg
sbb
int3
push
rcr
pushf
xlat
jno
adc
pop
ret
adc
add
push
or
sub
sub
sbb
sub
dec
dec
sbb
mov
mov
push
and
cld
fwait
add
arpl
jne
add
aad
pop
or
push
mov
and
pop
in
pop
add
dec
lds
stos
push
pop
push
sub
add
pop
and
imul
and
dec
push
out
inc
sub
bound
mov
pop
push
lahf
cmps
sub
and
add
cmps
push
lock
lahf
push
rcl
popa
in
in
mov
mov
push
mov
pop
movs
movs
pop
movs
adc
std
mov
add
daa
and
mov
test
push
push
and
js
fcom
outs
lods
int3
std
aam
ins
pop
test
clc
lea
inc
les
sub
or
or
xor
es
jb
inc
les
aad
jno
pmullw
adc
rol
adc
adc
sti
test
popa
loop
or
push
inc
adc
or
cmps
fild
sbb
or
cli
push
cmc
fld
ja
adc
sub
sti
popf
adc
cmp
mov
in
enter
push
fmul
cld
push
push
inc
push
adc
and
or
and
nop
or
ins
call
call
push
cmp
pop
sbb
mov
mov
mov
enter
bound
sub
sbb
inc
push
mov
js
repnz
and
lods
call
jne
cmp
jne
mov
outs
cli
push
bound
es
inc
(bad)
cmp
call
mov
ds
and
xchg
fmul
sbb
retf
push
dec
mov
fcmovnu
fsub
adc
mov
(bad)
pop
inc
(bad)
not
test
nop
xor
neg
mov
push
pop
xor
jbe
adc
push
mov
pop
cmp
shl
dec
xchg
and
mul
shl
lds
and
xor
inc
inc
ss
ins
js
sbb
nop
pushf
push
xchg
loop
xor
add
push
loop
push
in
rcl
mov
mov
xchg
dec
inc
pop
push
sub
xor
or
or
mov
call
xchg
add
jns
add
pop
js
je
xor
push
rcl
push
std
push
mov
lea
cmp
scas
dec
es
and
je
aas
repnz
add
inc
inc
inc
inc
jmp
cmp
not
push
aam
push
outs
pop
and
(bad)
sar
fsubr
cdq
test
and
mov
(bad)
dec
fist
or
jbe
push
test
test
mov
mov
or
cmc
add
xor
add
push
jecxz
cdq
sbb
push
fisub
sti
cmp
test
test
push
leave
sbb
nop
cmp
sub
jne
(bad)
xor
ss
(bad)
push
inc
in
dec
iret
stc
push
push
cmp
add
pop
push
xchg
add
inc
aad
into
cmp
inc
(bad)
add
aad
gs
push
pop
scas
lds
mov
or
mov
jecxz
inc
cmp
rol
sar
adc
pop
push
lea
add
xor
push
push
test
jle
lea
fs
ds
add
push
jo
jb
add
xor
arpl
inc
sub
retf
jl
sbb
pop
imul
leave
sub
retf
inc
or
jno
or
test
test
cmp
je
mov
xor
hlt
mov
iret
push
adc
push
xchg
add
cmp
push
and
push
dec
or
xor
mov
inc
push
push
add
les
cmp
jge
mov
xchg
add
push
fs
push
call
rcl
jg
popa
outs
loopne
push
retf
adc
inc
cld
mov
pop
and
push
mov
adc
mov
adc
add
cmp
jle
neg
cmp
add
xchg
daa
je
jl
jmp
enter
xchg
xchg
add
cmp
shl
je
and
call
test
pop
jne
mov
cdq
or
and
lds
ins
dec
and
ds
les
in
xchg
dec
fld
lds
or
call
pushf
push
pop
inc
sti
fsub
xchg
fs
push
retf
call
add
stos
xor
call
rep
and
dec
xchg
aam
push
xchg
mov
push
je
push
add
dec
jmp
mov
cmp
jle
addr16
jns
cwde
pop
xor
out
je
sbb
sbb
sahf
in
das
push
movs
xor
push
cli
sbb
ror
stos
adc
xor
push
xlat
mov
xchg
pop
and
popa
push
adc
xchg
sbb
rcl
int
fsubr
es
loopne
pop
add
repnz
adc
movs
jge
xor
mov
cmp
add
jae
loopne
add
jne
adc
rol
dec
loope
mov
push
pusha
push
in
sub
jne
sbb
push
lock
pop
(bad)
sub
push
jne
icebp
sahf
fisttp
xor
mov
mov
into
and
mov
dec
neg
int
std
mov
add
add
cmp
pop
aas
pop
(bad)
push
idiv
inc
int3
jmp
jg
out
in
sub
push
cli
sub
movs
or
lea
dec
mov
mov
test
xor
test
mov
mov
jne
add
or
jne
cmp
enter
cmp
xor
push
fldenv
mov
inc
sbb
xlat
add
sub
sbb
push
call
xlat
dec
add
dec
ja
adc
aam
stc
pop
loopne
mov
and
int3
add
sub
imul
pop
xor
add
cld
lods
(bad)
fstp
or
mov
inc
and
mov
sbb
in
dec
jmp
jne
adc
dec
push
popa
das
hlt
push
adc
cmc
sbb
pop
push
add
hlt
mov
pop
mov
inc
movs
rcr
and
xor
push
sub
dec
push
xor
js
loop
shr
cmp
pushf
lock
sbb
loopne
stos
iret
dec
mov
push
mov
stos
mov
sbb
push
popf
mov
leave
aaa
xor
imul
les
or
ret
dec
addr16
pop
neg
in
pusha
or
mov
push
xor
mov
nop
cmp
push
add
inc
jp
or
aaa
les
lods
imul
add
dec
cwde
mov
mov
dec
sub
pushf
mov
xor
test
cmps
jbe
xchg
mov
cmps
add
inc
push
rcl
popf
mov
cdq
sbb
cmp
cvtdq2ps
inc
adc
stos
movs
pusha
(bad)
mov
es
popa
dec
mov
test
cs
dec
jae
mov
xor
rol
sub
jne
and
adc
mov
call
and
js
js
js
cld
icebp
jmp
mov
push
or
out
dec
mov
sbb
mov
aaa
jmp
pop
sbb
rcr
out
jne
call
and
dec
dec
adc
dec
inc
push
pop
inc
aam
test
mov
mov
push
faddp
xchg
add
das
sub
popa
sbb
mov
xor
mov
jle
adc
add
mov
enter
cmp
ja
movsx
sub
adc
cli
daa
xor
push
jmp
inc
or
and
xchg
ins
and
shl
and
pop
stos
enter
add
mov
shl
and
add
test
pop
setne
inc
stc
rol
jns
adc
dec
inc
xor
call
or
xor
and
je
sbb
adc
test
mov
xor
dec
adc
daa
and
shl
mov
xor
cmps
xchg
dec
lock
cmp
das
inc
jb
cdq
ret
cmp
xor
mov
outs
adc
nop
movs
pop
mov
jle
push
in
ins
sub
xchg
out
pop
or
pop
push
mov
adc
hlt
add
sub
gs
and
pop
sbb
or
pop
sbb
pcmpeqd
clc
cmp
adc
mov
push
mov
jp
push
aaa
mov
adc
cwde
movs
mov
or
scas
inc
mov
jmp
ror
push
push
dec
or
ret
jge
push
sbb
std
sub
fstp
leave
mov
adc
daa
add
adc
pop
pop
push
adc
xlat
nop
xchg
mov
push
inc
ret
rcl
jmp
push
add
jnp
dec
xchg
retf
and
push
dec
push
push
push
ss
push
push
cmp
sti
cld
sub
add
and
fidiv
(bad)
and
jbe
mov
add
nop
mov
pop
rol
or
xlat
call
push
mov
adc
pop
add
(bad)
test
xchg
popf
aam
jmp
repnz
jne
cli
dec
add
cmp
push
mov
test
(bad)
test
fcomp
pop
sar
mov
retf
jmp
push
inc
mov
push
stos
or
mov
not
mov
pop
(bad)
xchg
and
lock
inc
in
sbb
imul
rep
pop
add
(bad)
in
lock
mov
push
enter
sbb
add
push
push
ins
adc
add
inc
test
pop
mov
fst
mov
sub
fcom
or
cmp
outs
sbb
jno
sbb
repnz
mov
adc
add
add
fnsave
sbb
jno
dec
and
dec
and
pop
data16
push
inc
push
(bad)
jecxz
ja
mov
in
or
inc
and
std
add
jle
xor
sbb
mov
pop
cdq
repz
movlps
inc
or
fsub
inc
pop
pop
push
push
add
rcr
mov
mov
mov
enter
adc
pop
pop
mov
add
stos
stos
rcr
xchg
(bad)
mov
call
mov
pusha
jnp
inc
or
push
xchg
dec
dec
test
push
and
xor
retf
inc
retf
or
sbb
add
mov
mov
cmp
addr16
test
pop
les
xchg
sbb
fild
dec
or
mov
mov
pop
jmp
jmp
add
mov
in
fucom
push
loope
jge
sbb
test
add
add
cmp
push
stc
cmp
ja
cmp
jae
daa
cmp
or
scas
push
mov
test
enter
mov
sbb
sub
inc
add
push
into
sbb
in
mov
cmp
or
push
mov
scas
dec
adc
mov
idiv
xor
fld
push
mov
in
mov
jne
or
or
(bad)
stc
cld
test
shl
push
fwait
in
pop
dec
mov
adc
rcr
dec
cwde
jge
and
xlat
cmp
add
sub
push
mov
ret
dec
adc
or
jmp
not
not
and
and
sbb
cmc
xchg
adc
push
popf
push
push
inc
mov
and
dec
dec
call
xchg
or
adc
adc
push
mul
adc
jne
jecxz
add
inc
inc
cmp
jb
cmp
sub
into
pop
jl
dec
sub
mov
xchg
dec
retf
es
lahf
add
movs
add
jae
jle
ja
push
aas
mov
sahf
out
inc
sbb
mov
pop
hlt
cmp
sub
push
dec
mov
mov
jno
push
lea
int3
adc
and
xchg
movs
mov
mov
ins
adc
sbb
push
cmp
aaa
mov
inc
or
jp
or
add
into
mov
pop
jns
push
inc
adc
or
in
push
or
mov
xor
mov
pop
in
repz
or
push
lock
call
cld
movs
push
xor
and
mov
rdmsr
rol
outs
push
sbb
inc
xor
push
pushf
movs
sub
ss
je
pop
dec
jmp
pop
push
dec
pop
or
js
pop
push
sub
xchg
adc
gs
add
retf
xchg
imul
(bad)
retf
imul
lock
bound
test
push
mov
jmp
jl
rcl
rcr
adc
and
sub
ins
adc
or
adc
shr
mov
add
or
mov
mov
push
loop
push
retf
(bad)
xor
pop
and
push
sub
stos
xchg
(bad)
push
add
xchg
mov
push
retf
mov
cmc
adc
loop
mov
pop
cwde
nop
mov
xor
je
aas
add
fst
cdq
pop
adc
fst
cmps
and
movs
push
icebp
add
mov
adc
jle
call
sbb
add
cdq
out
mov
add
dec
fisttp
rol
jmp
inc
sbb
data16
sub
sub
mov
jo
fcmovu
or
repnz
inc
adc
pop
sbb
push
js
jmp
cmp
or
or
push
cmp
jne
sbb
or
push
pop
inc
push
inc
inc
adc
popa
pop
jmp
sti
out
dec
bound
rol
adc
aas
test
loop
ror
call
retf
je
push
cmp
xor
inc
lods
or
ret
mov
movs
clc
push
pop
mov
fimul
pop
movs
icebp
xor
mov
push
add
pop
dec
pop
in
fdiv
ja
jo
inc
adc
add
mov
out
mov
push
push
retf
push
into
lahf
and
mov
jne
sub
adc
mov
xor
ja
add
jb
shl
add
or
sub
cmps
mov
cmps
inc
rcl
cmp
xchg
xchg
xor
lods
and
mov
push
sub
adc
and
add
test
lds
pop
inc
mov
jnp
mov
dec
inc
enter
pop
adc
test
xor
adc
and
add
add
dec
or
popa
hlt
add
test
scas
test
sar
sbb
jecxz
push
xchg
shl
push
stos
jb
dec
mov
jnp
sub
iret
jmp
inc
(bad)
ror
jle
cdq
retf
nop
stos
ret
sbb
cmp
adc
push
fisttp
sub
bound
inc
push
push
cwde
retf
push
sbb
or
mov
lea
icebp
lods
sbb
mov
call
call
jne
cmp
mov
adc
jb
je
outs
inc
fistp
xchg
or
add
sub
jmp
push
int
ret
xor
xchg
lock
cmc
ins
push
add
mov
jmp
xchg
rcl
retf
inc
dec
mov
mov
adc
das
push
sbb
add
xor
and
fadd
mov
inc
daa
xchg
icebp
gs
or
imul
iret
cmp
and
fnstcw
(bad)
loope
outs
(bad)
jmp
jmp
pop
dec
fst
jg
loope
mov
not
ret
in
push
cmp
lock
sbb
nop
adc
pop
sub
mov
cli
sub
pop
repz
push
push
loopne
sub
scas
mov
sub
mov
pop
int3
xchg
movs
call
(bad)
into
cmp
inc
mov
ret
mov
iret
mov
(bad)
mov
add
mov
iret
xchg
cmp
jp
mov
aad
test
cmc
adc
sub
mov
test
push
jb
jbe
repnz
push
add
pop
imul
mov
dec
add
add
jl
js
int3
leave
add
shl
movs
retf
mov
or
sti
sti
sub
mov
inc
or
or
and
mov
xchg
ror
(bad)
(bad)
mov
add
pop
movs
cmp
jl
xchg
cld
and
call
cmp
jle
lock
and
push
js
out
adc
jg
mov
inc
inc
cmp
and
shr
or
xor
lea
cmp
add
cmp
dec
cmc
loopne
into
or
cmp
imul
add
cmp
je
or
ret
jmp
mov
call
ror
adc
shr
test
jo
mov
imul
xchg
mov
sub
aas
mov
call
jns
push
pop
push
and
mov
(bad)
test
test
mov
out
addr16
or
xor
adc
and
mov
add
fucomp
adc
xchg
ss
push
dec
dec
loop
mov
repnz
or
test
mov
mov
mov
cs
sbb
mov
or
and
cmp
xchg
mov
adc
repz
or
sub
cmp
inc
sub
je
cmp
mov
mov
inc
inc
cmp
cmps
rol
xor
jmp
jmp
cmp
movs
fs
test
rol
es
fiadd
nop
push
mov
fmul
mov
mul
or
stos
popa
pusha
cld
add
sbb
fs
push
cld
add
cmp
adc
ja
inc
fcmovne
lods
dec
mov
xchg
outs
test
or
test
frstor
fcomp
enter
jb
add
inc
stos
pop
and
jle
adc
pop
sbb
jne
arpl
mov
dec
inc
shl
pop
or
cmp
push
sub
adc
mov
dec
mov
jmp
pop
adc
retf
bound
inc
addr16
mov
rcl
add
xor
mov
ds
xchg
push
inc
xchg
sub
push
jp
enter
mov
cmp
jp
jl
push
adc
add
in
shl
cmp
add
adc
adc
hlt
jle
jne
inc
jmp
mov
cmp
ds
push
sbb
mov
movs
inc
retf
mov
add
and
je
daa
nop
ror
imul
in
pop
daa
add
int
out
or
cmp
adc
movs
fwait
pop
mov
imul
fimul
mov
jns
pop
pop
add
and
cmp
add
mov
jle
mov
aaa
and
add
(bad)
or
push
add
stos
arpl
out
push
shl
xor
popf
sub
les
xchg
mov
aaa
pop
add
stos
cdq
pusha
dec
mov
xor
or
jae
cwde
int
stos
neg
push
or
pusha
test
jl
pop
add
jb
cmp
popf
aaa
sub
adc
sbb
cmp
mov
in
(bad)
mul
inc
and
adc
adc
pop
(bad)
dec
or
push
jg
rol
loope
add
fadd
and
add
lds
add
and
or
ffreep
mov
xor
fdiv
jg
enter
ds
sbb
pop
dec
mov
retf
ret
les
xchg
and
cmp
lds
sahf
sbb
jb
loope
xchg
add
std
xor
or
cmp
retf
mov
sub
xor
das
jo
and
sub
push
push
repnz
push
push
push
mov
and
xor
mov
pop
jmp
mov
pop
adc
xchg
cmp
push
aam
inc
adc
mov
cwde
mov
sbb
sub
sub
or
sbb
or
or
jne
inc
add
pop
cmp
pop
fs
sbb
mov
adc
mov
push
lea
xchg
xor
rcr
adc
rcr
and
jmp
lea
jp
mov
add
enter
(bad)
fsubr
into
dec
stos
cdq
data16
neg
mov
or
sub
pop
inc
jp
push
mov
jg
cmp
pop
mov
xor
push
out
jb
outs
sub
push
bound
jns
push
mov
push
jb
adc
vminpd
sub
addr16
or
mov
xchg
retf
and
push
cmp
xchg
adc
sar
gs
inc
sbb
inc
adc
and
aam
add
les
jmp
mov
sbb
dec
sbb
rol
jmp
xchg
or
or
dec
imul
enter
and
or
ds
mov
jmp
rcl
mov
pop
out
jmp
(bad)
in
in
sub
and
pop
mov
push
adc
jmp
call
stc
push
sbb
and
fs
aam
xchg
cmp
xchg
ds
xchg
ror
dec
xchg
test
or
xchg
(bad)
gs
bound
push
cdq
mov
je
mov
imul
xor
xchg
cmc
add
ror
add
jmp
(bad)
cld
pop
cmp
push
fadd
test
add
jns
xchg
xor
test
add
or
je
jge
mov
mov
mov
push
test
cmp
das
push
lahf
and
mov
(bad)
jae
sub
in
call
mov
inc
dec
mov
mov
and
nop
adc
add
int
std
add
or
sub
push
into
jmp
and
push
or
jnp
pop
fnsave
hlt
and
(bad)
mov
or
daa
bnd
add
and
mov
inc
and
push
inc
pop
pusha
je
push
push
mov
inc
fstp
xchg
dec
sub
mov
and
std
pop
xor
and
or
movs
addr16
jmp
sbb
cmp
dec
je
adc
dec
fiadd
jae
cmp
jmp
jne
dec
mov
dec
or
fidiv
sub
jmp
and
data16
pop
or
cmp
pop
mov
cmp
or
mov
test
clc
mov
add
cmp
jae
ss
mov
jge
mov
inc
or
or
xchg
mov
and
pop
dec
les
bound
cmp
adc
loop
jge
add
fldcw
xor
stos
dec
push
ins
(bad)
shl
xor
fld
jo
inc
fstp
and
mov
leave
xor
adc
jmp
and
movs
mov
adc
sbb
inc
sbb
adc
add
cmp
pop
or
inc
jmp
push
cmp
jb
xchg
jl
lods
inc
cmp
push
mov
sub
fcompp
fwait
dec
cmps
add
(bad)
sub
sbb
sub
ja
mov
loop
mov
lock
test
dec
fimul
push
sub
jae
adc
push
or
push
or
test
inc
pushf
into
push
or
mov
(bad)
add
push
cdq
jo
hlt
push
add
es
or
push
cwde
mov
push
xchg
push
fild
loop
daa
mov
or
rcl
mov
sub
cld
or
pop
(bad)
ds
dec
ja
push
fadd
pusha
or
xchg
or
push
pop
mov
mov
loop
cwde
adc
retf
or
push
push
add
out
xor
mov
mov
sbb
add
add
push
pop
sbb
cmp
popf
dec
or
jbe
xchg
add
pushf
xchg
dec
popf
mov
mov
ja
sub
imul
iret
es
jmp
or
ins
fnstsw
push
aam
stos
push
cmps
rcl
xor
pusha
jmp
push
dec
push
ss
and
sbb
daa
add
adc
js
add
sbb
aas
dec
lods
outs
(bad)
dec
mov
dec
mov
enter
inc
and
push
jl
test
dec
sbb
push
mov
add
jg
cmps
inc
fisubr
cmp
rol
in
test
mov
push
sub
adc
jmp
dec
pop
cmp
fcomp
xor
sbb
cmp
add
dec
stc
clc
addr16
and
pop
fsqrt
dec
or
aam
xor
sub
push
adc
add
out
sti
movs
movs
add
movs
mov
cld
into
call
push
stc
sbb
call
repz
out
fistp
sbb
nop
xchg
clc
clc
sbb
xor
push
adc
nop
ret
or
pop
hlt
(bad)
cmp
ret
xchg
add
add
xchg
pusha
pop
sbb
test
push
imul
add
leave
push
out
cs
mov
and
xor
ret
adc
imul
cmp
push
jmp
sbb
pop
jmp
mov
push
mov
add
repnz
aam
jle
jle
add
lds
add
mov
ins
sbb
jmp
fs
ins
pop
ds
outs
inc
xor
icebp
icebp
sbb
icebp
stc
sbb
je
rol
je
outs
icebp
stc
jmp
ds
push
sar
adc
adc
fcomip
stc
adc
lock
sbb
clc
cld
mov
cld
mov
out
pop
dec
sbb
sbb
clc
out
jl
sbb
js
dec
jl
(bad)
out
add
mov
neg
and
cmp
and
icebp
sbb
mul
sbb
and
and
icebp
stc
and
ret
pop
mov
inc
and
ds
imul
cmc
mov
enter
pop
shl
ins
mov
les
sbb
test
hlt
sub
je
xchg
loopne
mov
call
call
adc
fild
icebp
icebp
cs
loope
cmp
das
sbb
in
repnz
sbb
xor
xchg
ss
aaa
cmp
and
ja
cwde
mov
sbb
push
push
cs
mov
sbb
adc
and
mov
je
scas
jle
sub
ds
or
aad
(bad)
push
push
into
or
inc
movs
ins
inc
push
sub
or
sub
adc
xor
mov
mov
mov
call
out
pop
xor
add
add
lock
push
sub
xor
inc
fist
stc
sub
lea
push
lea
dec
or
lea
lods
lods
test
fdivr
retf
mov
popa
add
sub
ds
and
test
call
xchg
add
and
scas
add
stos
cmps
add
mov
out
cmp
or
push
pop
or
xchg
dec
sbb
inc
cmps
mov
aaa
jb
sub
add
or
push
push
out
test
ss
sub
mul
dec
cdq
or
das
fs
xor
retf
adc
mov
retf
cwde
add
popf
sub
scas
push
test
cs
test
fwait
movs
adc
push
sub
rol
in
xchg
stos
test
dec
sub
xchg
push
test
xchg
sbb
movs
push
mov
(bad)
xchg
ret
ret
inc
inc
push
add
ins
pop
inc
movs
xor
ss
jmp
pop
aas
test
sub
xchg
and
adc
imul
cli
jmp
mov
movs
les
add
dec
pop
mov
(bad)
and
rol
or
add
pop
lods
stos
or
sbb
add
mov
xor
xchg
cmp
outs
ret
cmp
in
inc
mov
dec
cmp
stos
retf
sub
jp
or
mov
push
push
ins
ret
fcomp
push
sbb
push
sbb
xchg
test
lds
sub
jecxz
rcl
sub
cmp
inc
fdiv
push
jmp
dec
adc
enter
mov
sub
sub
retf
dec
cmp
test
sub
adc
lods
dec
lock
push
mov
add
test
sub
xor
cmp
popa
sbb
jbe
xchg
push
(bad)
lock
in
add
leave
cmps
xor
jno
shl
test
fsub
adc
or
out
dec
dec
test
push
ins
xchg
dec
and
inc
xor
ss
retf
data16
xchg
call
out
pushf
push
out
inc
pop
add
jmp
mov
dec
shr
add
aas
and
ins
test
ret
push
mov
js
fucomip
xor
jb
outs
push
stos
test
and
sub
neg
inc
push
add
xor
xor
test
jne
push
out
cmp
sub
inc
xchg
je
je
addr16
movs
ins
pusha
jge
add
movs
dec
adc
push
xor
ror
xchg
fmul
sbb
inc
mov
je
in
add
fucom
(bad)
scas
push
xor
xor
js
or
test
adc
cmp
mov
cmp
ds
push
aam
fwait
mov
shr
xchg
pop
pop
popfw
cmps
cmp
mov
es
inc
nop
mov
shr
mov
adc
jmp
inc
mov
std
push
ror
pop
leave
rol
mov
jmp
push
jge
pop
add
inc
mov
xor
(bad)
call
call
or
add
shl
cmc
and
cmps
sub
nop
cmp
pop
xchg
or
xor
lock
push
inc
imul
inc
pop
xor
inc
test
xor
sub
xchg
(bad)
int3
lock
int3
adc
mov
mov
and
push
sub
mov
cmp
sbb
and
daa
jmp
mov
rol
jmp
sbb
rol
shr
mov
adc
loop
sub
and
aam
dec
les
push
call
pop
popf
add
repz
lar
out
nop
nop
dec
xor
scas
es
pop
shr
xchg
sbb
cmp
push
sbb
xchg
popa
test
cli
sbb
inc
push
adc
test
sub
xchg
jo
or
enter
(bad)
sbb
xchg
test
lea
mov
sbb
(bad)
retf
ret
dec
push
jo
add
cmp
mov
lds
inc
sub
in
or
push
jmp
adc
sbb
aas
and
sahf
dec
fidiv
sbb
xor
inc
mov
sahf
pop
aam
push
mov
sbb
gs
mov
cdq
sbb
cmps
jl
cli
movs
inc
add
adc
inc
push
call
dec
mov
mov
mov
cdq
or
sti
jle
cmp
jne
jb
popa
loop
push
mov
push
in
in
push
push
push
dec
xor
test
in
push
lods
dec
cmp
jne
nop
jle
fiadd
hlt
les
enter
jge
pop
or
and
pop
inc
cmovns
inc
jmp
inc
and
(bad)
iret
add
sub
add
pushf
movs
sbb
mov
xchg
dec
movsx
inc
cwde
mov
jg
inc
add
sub
aam
add
sub
pop
out
push
dec
xor
lea
pop
rcl
adc
aam
mov
xchg
jno
pusha
mov
xor
or
je
sahf
cmp
pop
and
xchg
jne
xor
xor
or
out
lds
xor
xor
xchg
mov
pop
pop
sbb
xchg
mov
sub
je
dec
je
dec
dec
lods
dec
loope
mov
xor
dec
fadd
or
mov
xor
in
fimul
mov
hlt
mov
dec
int3
add
cdq
cli
mov
adc
cmp
push
les
clc
sub
call
inc
out
int3
lods
add
(bad)
cmp
je
iret
and
dec
mov
jmp
test
adc
int3
mov
add
test
cmp
xchg
sub
cmc
add
add
ja
push
jmp
push
cmp
adc
xchg
in
dec
xchg
lods
test
outs
cwde
push
add
jmp
adc
adc
pop
and
inc
and
scas
movs
ins
xchg
gs
in
add
cmp
mov
jae
adc
mov
call
test
dec
mov
sub
jno
mov
jns
add
or
pop
popf
div
pop
fisttp
add
or
into
or
xor
push
sbb
sub
(bad)
sti
daa
ret
sahf
xlat
test
dec
les
sub
mov
leave
test
les
dec
mov
sbb
icebp
jb
cwde
xor
cs
pop
add
and
lock
lock
mov
pop
sbb
mov
stc
mov
sub
inc
push
fs
mov
fs
xchg
mov
add
fwait
cmp
adc
push
(bad)
pop
fisttp
jnp
mov
mov
loopne
xor
mov
adc
loopne
add
test
push
dec
mov
fisub
ror
jge
mov
les
jb
pop
sub
and
daa
int
sub
sub
call
mov
mov
lock
in
movs
or
cwde
add
adc
fadd
fucomip
push
jb
ret
rcr
inc
sti
clc
(bad)
(bad)
xchg
shl
loop
(bad)
xchg
xchg
sub
push
dec
or
dec
dec
push
or
imul
dec
lods
fisttp
or
imul
scas
cmp
imul
push
or
in
push
xor
jl
mov
or
cmp
jmp
test
(bad)
aad
push
push
cmp
jmp
and
push
mov
icebp
stc
dec
les
sub
cmp
mov
sub
lock
clc
aas
jg
jnp
inc
or
and
push
daa
jle
add
movntps
mov
sub
dec
add
xor
fst
or
adc
daa
loope
dec
sbb
in
sar
stc
jmp
and
xchg
or
xchg
rcl
(bad)
hlt
pop
jmp
add
cmps
or
xchg
mov
jno
movs
cdq
in
ss
xchg
cmp
jge
es
fdiv
call
cmp
dec
fwait
test
mov
jnp
call
dec
inc
push
sbb
or
dec
jne
adc
nop
in
push
icebp
add
icebp
sbb
je
mov
mov
fwait
loop
fs
mov
xchg
sub
sbb
rcr
mov
retf
push
xor
jb
lea
inc
(bad)
mov
daa
sbb
pushf
imul
fldcw
sub
push
ds
mov
pop
jne
ins
(bad)
loop
pop
sbb
mov
jl
and
cwde
xor
xchg
aas
push
push
shl
lods
mov
les
in
lahf
xor
or
mov
les
das
pusha
sbb
inc
sub
or
sbb
pop
sub
test
pop
out
push
ret
inc
cmp
add
ret
and
push
push
and
imul
dec
jl
mov
ret
cmp
or
cmp
jmp
push
call
or
pop
jmp
push
add
push
jmp
sbb
psubusb
push
and
push
pushf
add
push
jmp
movzx
push
pop
les
sub
sbb
rol
imul
enter
arpl
jmp
mov
out
push
iret
push
call
jecxz
pop
pop
mov
add
mov
jne
push
fmul
popa
inc
add
push
xor
cdq
mov
lock
popa
inc
loope
and
inc
xchg
daa
push
jg
imul
or
mov
cdq
and
adc
neg
jo
test
jmp
je
sbb
rcl
add
js
pop
mov
cmp
(bad)
push
arpl
and
mov
mov
cmp
repnz
add
xchg
dec
and
lds
mov
stos
lock
(bad)
and
arpl
sub
lods
lea
xchg
test
stos
pop
or
sub
push
les
dec
sbb
adc
or
pop
add
mov
add
cmp
jae
cdq
sub
in
mov
rcr
cmp
test
mov
inc
or
sub
jmp
imul
pop
popf
and
retf
gs
pop
std
into
loope
mov
sub
cmp
loopne
cld
repz
mov
mov
jmp
les
enter
sbb
push
scas
(bad)
jae
ja
mov
nop
and
sbb
out
pop
gs
and
pushf
(bad)
mov
ror
sub
inc
in
rcl
mov
loope
iret
(bad)
fsub
add
inc
(bad)
or
jne
cmp
sub
pop
call
sbb
xor
xor
gs
jno
movs
or
sbb
je
dec
lds
inc
shr
push
sbb
adc
push
dec
leave
fsubr
dec
mov
jp
sbb
call
mov
test
mov
mov
stos
lds
dec
xor
sbb
adc
and
xchg
mov
dec
inc
mov
push
push
xchg
adc
pop
lods
jno
pop
or
mov
jmp
adc
add
bound
out
(bad)
jb
cld
cmps
std
sub
jl
jnp
jge
fsubr
sti
je
push
push
push
shl
jmp
dec
inc
aad
push
and
or
leave
add
in
dec
jae
dec
and
(bad)
sbb
xchg
inc
test
adc
imul
mov
adc
out
cmp
push
inc
sub
or
pop
sub
cmp
jae
push
push
repnz
jl
test
ret
sub
mov
in
sahf
push
adc
push
movs
mov
and
iret
push
pop
cmp
push
adc
sub
mov
fdivr
xor
aad
push
add
cdq
out
push
or
test
rol
mov
test
and
or
cmp
inc
fs
xchg
sub
add
pop
imul
dec
inc
inc
or
mov
cld
rol
adc
xor
add
lods
retf
jnp
jle
fisttp
sbb
and
push
rcl
mov
push
adc
sbb
sbb
xor
push
je
xchg
push
mov
inc
add
or
jno
arpl
add
add
pop
js
shl
adc
or
cld
and
xor
pop
and
add
mov
loope
xor
pop
inc
je
mov
inc
xor
or
mov
xchg
into
sbb
pop
jne
push
jmp
jbe
add
sbb
dec
add
in
sbb
in
(bad)
jle
add
and
sbb
out
ds
mov
loopne
inc
mov
xor
push
lock
nop
jg
push
cmp
mov
aam
jmp
movs
loope
or
mov
nop
hlt
jle
and
push
call
dec
mov
pop
xor
sbb
scas
fs
icebp
loope
lods
jmp
in
xor
arpl
movs
add
pop
or
movs
gs
dec
xor
push
in
mov
adc
or
and
push
or
(bad)
xchg
push
cmp
shl
sub
add
add
cmp
jae
jns
shr
or
cmp
jae
add
pop
dec
add
jae
jno
inc
jecxz
xchg
mov
push
push
test
cmp
xor
pop
ss
pushf
sub
loope
stc
popa
sub
add
lods
adc
mov
pop
pop
fwait
pushf
lods
push
fild
nop
popf
jo
jae
mov
mov
push
add
xchg
pop
push
mov
cdq
into
and
aad
inc
scas
pop
aad
popf
daa
mov
add
xor
inc
nop
xor
shl
pushf
pusha
sub
inc
xor
std
ja
jmp
mov
dec
test
jae
or
call
jbe
mov
xor
add
ins
adc
xor
stos
sbb
add
push
arpl
imul
push
sub
adc
or
xchg
jne
sbb
jne
xchg
cwde
fadd
fcom
jb
pusha
push
daa
dec
push
pop
sti
test
push
mov
movs
pop
jae
(bad)
sbb
xor
jo
mov
mov
pop
mov
xor
imul
mov
ror
fild
scas
mov
test
xchg
and
repz
les
sub
add
mov
jp
ds
fs
into
nop
gs
mov
(bad)
movs
or
add
add
adc
loopne
push
sbb
gs
aam
leave
and
push
cmps
sbb
jmp
push
mov
pop
push
cdq
aaa
mov
and
dec
cmp
in
xor
ja
pop
add
or
or
bound
jne
(bad)
dec
xchg
cmp
sub
mov
mov
shl
popf
adc
push
push
sub
fcmovnb
sahf
and
sti
xchg
and
test
jo
inc
int3
jge
and
add
push
xchg
lock
js
mov
add
dec
fdiv
ss
test
rcl
cmp
or
sbb
inc
test
dec
sbb
adc
loop
pop
push
or
inc
icebp
inc
fcmovne
clc
rol
cmps
adc
push
je
push
push
push
inc
jle
and
xchg
mov
in
and
cdq
js
out
inc
inc
inc
mov
mov
mov
out
dec
inc
je
dec
shl
cdq
sub
cmc
fsub
into
push
mov
retf
xor
pop
sub
push
lahf
pop
sbb
sahf
cmp
aad
pop
dec
pop
movs
xchg
pop
mov
add
mov
jbe
inc
cmp
adc
or
lds
xchg
lds
jno
mov
add
aad
rcr
lods
icebp
push
inc
jb
scas
push
inc
cmps
jp
and
outs
cmp
xor
fldenv
or
hlt
dec
add
lahf
inc
lahf
lods
xlat
sub
or
push
push
adc
pop
fs
mov
mov
sbb
dec
add
jle
je
push
mov
pop
in
push
add
xor
cmp
jne
cmps
dec
in
push
inc
loope
adc
cwde
push
adc
cmp
xlat
cmps
dec
xchg
adc
icebp
outs
mov
and
retf
pop
push
cmp
fst
or
xchg
push
mov
or
dec
pop
scas
movs
mov
jo
into
rcr
adc
add
ja
add
inc
push
and
fld
movs
fwait
push
dec
pop
add
out
inc
enter
push
retf
inc
adc
jecxz
mov
dec
dec
clc
add
in
fldenv
add
test
add
and
test
xor
or
dec
retf
and
pop
movs
or
test
or
gs
jae
pusha
adc
or
or
mov
xchg
mov
dec
aas
adc
add
or
call
jge
sbb
xor
stos
call
inc
add
jmp
dec
not
push
push
pop
iret
mov
sbb
mov
add
aad
or
or
pop
outs
inc
fdiv
leave
enter
sub
adc
xor
sbb
add
push
dec
pop
aad
test
jge
add
test
fisubr
add
aas
jecxz
pop
rol
pop
sbb
les
scas
or
ror
push
push
mov
dec
add
or
jmp
imul
jge
mov
xor
cmc
pop
xor
and
push
push
stos
lods
jno
push
stos
popa
jb
(bad)
sbb
add
pusha
cmp
je
adc
mov
mov
pop
sub
test
setne
int3
dec
jmp
push
xor
pop
je
movs
sbb
mov
inc
popf
mov
and
xor
lods
inc
test
je
shr
push
xchg
pop
movs
push
lods
mov
pop
lods
ja
mov
aaa
mov
cmp
je
push
inc
inc
ins
(bad)
lds
sub
mov
sub
shr
pop
dec
in
and
or
idiv
mov
les
adc
rcr
clc
jmp
jo
ror
shr
rol
fisub
lods
push
add
pop
and
mov
cmps
popa
xchg
xor
mov
xchg
push
pusha
xchg
dec
clc
inc
adc
addr16
add
cwde
mov
fist
push
popa
ds
cwde
clc
mul
adc
push
pop
in
je
shr
jp
dec
ret
jne
rol
sbb
mov
pop
test
jne
fwait
add
ror
dec
in
mov
imul
mov
pop
dec
mov
sub
sbb
enter
fdivr
(bad)
fist
lock
bound
sbb
push
push
xor
dec
xor
dec
pop
and
(bad)
int3
shr
inc
clc
and
adc
dec
push
dec
add
mov
mov
push
das
test
push
fcomp
daa
xor
movs
jo
aas
pop
fist
jmp
pushf
sub
in
in
jge
push
inc
leave
xchg
push
pusha
or
mov
sbb
mov
mov
or
mov
cli
pop
or
xor
adc
cmp
mov
mov
scas
sub
inc
in
retf
shr
in
mov
mov
push
cmp
sahf
push
push
shl
fisub
dec
bnd
add
daa
inc
dec
ins
xchg
loop
fisttp
xchg
dec
repz
in
or
mov
and
sbb
retf
add
inc
jle
je
aad
dec
sbb
push
jo
pop
mov
mov
test
pop
jne
pop
test
jne
enter
cs
cmp
je
cmp
mov
add
sub
jl
ds
cmp
je
test
add
sbb
je
stos
and
and
je
cmp
cmp
js
sub
loop
sbb
add
and
das
jne
cbw
das
movs
jmp
hlt
adc
outs
fs
(bad)
mov
pusha
sub
push
push
push
retf
inc
sub
mov
mov
mov
push
push
add
push
cld
push
mov
mov
movs
enter
push
mov
rcr
or
pusha
rcl
inc
retf
ja
in
ret
iret
add
sbb
inc
or
add
push
push
pop
sbb
clc
sub
fldenv
sub
js
in
and
cmp
fld
sbb
into
ret
shr
gs
aad
rcr
leave
les
dec
fst
sbb
(bad)
dec
and
xchg
(bad)
out
or
nop
stos
pop
xor
rcl
jge
push
into
dec
call
or
dec
inc
call
xor
cmp
sub
daa
and
mov
xchg
cmp
add
(bad)
js
push
rol
xchg
loopne
bound
push
mov
inc
push
stos
xchg
arpl
sbb
add
mov
pop
lahf
dec
movs
loopne
cmp
mov
or
pusha
add
dec
mov
test
adc
retf
adc
sub
fsubp
jnp
and
lock
sub
inc
push
add
pop
push
cli
adc
cmp
sbb
xchg
popf
fwait
push
rcl
xor
add
inc
jecxz
fld
add
fs
mov
call
das
pop
outs
in
push
sub
aaa
mov
pop
adc
lods
inc
sub
cld
push
sbb
push
add
std
push
dec
cs
mov
je
mov
imul
repnz
out
out
mov
(bad)
test
in
stos
mov
es
call
(bad)
loopne
sbb
jmp
add
inc
or
mov
ficomp
(bad)
sahf
mov
movs
mov
call
ret
jl
dec
sub
pushf
add
adc
sub
jo
cmps
or
push
push
lock
push
sbb
mov
in
enter
in
shl
inc
movs
dec
pop
cli
(bad)
pusha
dec
adc
test
in
lahf
lds
mov
jmp
and
cmp
xor
out
push
adc
stc
inc
inc
fdiv
inc
push
adc
add
lea
aam
dec
xor
cmp
pop
aam
dec
adc
push
dec
push
and
add
fwait
test
push
sbb
adc
js
push
push
loopne
aam
sub
mov
cmp
je
push
pop
ja
mov
nop
add
rol
popf
add
std
push
mov
or
ss
push
add
cli
std
les
pop
fdivr
in
in
or
jmp
or
push
lea
push
out
gs
add
clc
ret
mov
xchg
inc
mov
sbb
push
nop
popa
or
in
in
shl
sub
dec
push
and
(bad)
sub
and
nop
in
inc
bound
shr
loop
push
adc
push
xchg
lahf
or
push
fstp
jle
dec
es
sbb
popf
mov
dec
inc
jge
jbe
xor
repnz
jl
xchg
adc
jle
mul
mov
inc
fwait
add
mul
rcl
push
clc
or
nop
(bad)
(bad)
and
scas
push
or
aam
mov
inc
mov
mov
sbb
fst
xor
fadd
add
mov
imul
nop
mov
bound
rol
mov
cmps
mov
sbb
jne
push
mov
sbb
ret
sbb
inc
int3
xor
test
add
or
nop
inc
jl
jne
dec
add
retf
lock
xchg
add
jmp
mov
sub
push
sbb
cld
add
xchg
mov
dec
or
xor
or
test
dec
xchg
push
ror
and
lea
push
and
out
add
call
push
sub
push
inc
into
add
jnp
inc
xor
das
ret
pop
in
mov
lods
add
sub
push
test
xchg
adc
xor
gs
call
scas
pop
inc
rcl
mov
popf
test
ins
or
test
jmp
dec
adc
adc
xor
retf
das
mov
ss
fldcw
mov
add
xor
sub
ja
sbb
add
or
push
xchg
ins
dec
add
push
or
push
fwait
jp
lahf
sbb
test
push
or
push
enter
mov
push
mov
xchg
sub
push
in
test
cmp
add
mov
cs
inc
repnz
mov
aad
aad
(bad)
mov
pop
sub
addr16
and
push
test
jb
lea
and
ss
add
sub
fidiv
imul
mov
test
xor
fwait
push
loop
into
cmp
add
and
sbb
cmps
mov
or
push
test
mov
or
cli
push
js
and
cmp
fdiv
pushf
sbb
add
stos
shl
mov
or
inc
dec
sub
cmp
xchg
sub
and
mov
jbe
mov
xor
mov
les
imul
add
inc
push
les
jecxz
mov
push
pop
adc
mov
cmp
pushf
or
mov
mov
int3
xchg
ja
fnstenv
gs
inc
lahf
lock
pop
enter
adc
xor
dec
and
test
ror
jne
sbb
leave
or
jbe
(bad)
nop
or
mov
ja
je
push
mov
nop
or
cmp
pop
mov
push
sub
pop
pusha
(bad)
adc
je
imul
fs
(bad)
dec
je
mov
cmp
dec
and
arpl
div
add
pop
xor
jl
xor
xor
and
pop
cmp
jle
and
cwde
xchg
jno
mov
mov
daa
adc
adc
jnp
mov
inc
popf
inc
or
add
fisttp
lds
and
sbb
mov
loope
jo
and
cmp
push
jg
cmp
inc
push
mov
adc
push
lea
jno
inc
and
dec
nop
test
inc
jne
cmp
push
cmps
adc
jle
cmp
add
push
mov
call
rcl
lahf
pop
xor
call
sbb
and
sbb
lea
mov
push
cmp
rcr
push
pop
retf
fistp
push
and
inc
sbb
cmp
push
jae
sub
out
mov
test
pushf
cld
addr16
cmps
in
jmp
inc
aas
out
add
push
or
cld
scas
or
sub
push
and
inc
inc
cmp
scas
fmul
test
mov
add
scas
call
xor
mov
inc
stos
dec
out
jge
ss
inc
inc
pop
xor
popf
imul
lods
jns
int3
call
into
xor
push
int
inc
stos
push
out
jb
push
aad
mov
(bad)
hlt
int3
adc
pop
add
push
stos
jge
add
jae
push
in
jae
or
mov
xchg
push
daa
test
and
call
pushf
adc
and
mov
mov
or
test
pop
cmc
sbb
add
shl
push
dec
les
or
mov
mov
xchg
xor
and
(bad)
or
fwait
cmc
lea
in
inc
add
xchg
jmp
push
shl
movs
jmp
mov
lea
or
rcl
push
pop
cmp
push
and
inc
pop
popf
push
xchg
pop
int
or
push
pusha
punpckhbw
or
push
mov
fdiv
push
mov
in
pop
pop
inc
jmp
xor
jnp
xor
and
mov
and
add
push
(bad)
aad
and
out
lods
inc
cmp
rcr
sahf
inc
inc
fild
push
fisub
test
rol
loop
push
mov
(bad)
movs
pop
hlt
mov
push
push
movs
pushf
std
test
and
add
mov
pop
adc
aad
fisub
and
pop
sub
std
xor
mov
inc
les
add
call
mov
stos
dec
js
nop
enter
cmp
shl
mov
(bad)
jae
xchg
test
cmp
mov
xchg
das
inc
sub
ins
push
dec
out
inc
mov
test
je
mov
pusha
pop
mov
push
adc
add
xor
inc
shl
mov
imul
push
mov
mov
xor
sbb
adc
out
or
push
mov
mov
mov
jno
adc
cwde
adc
es
call
xor
push
cmp
pop
in
daa
jne
jp
mov
cdq
xchg
in
sub
test
das
cwde
push
imul
sub
dec
xor
test
lods
push
movs
dec
int
pop
push
dec
lds
cmp
push
xor
leave
rcl
aas
adc
or
or
inc
add
daa
xchg
adc
sti
test
push
jmp
les
and
idiv
call
pop
or
rcpps
push
(bad)
and
push
jne
xor
pop
cmps
movs
call
adc
cmps
mov
lea
dec
sub
rcl
leave
dec
pop
push
mov
xlat
cmp
loope
daa
test
in
cmp
mov
adc
pop
sbb
cs
pop
or
mov
or
mov
or
push
dec
jo
pop
pop
(bad)
sub
por
dec
scas
imul
imul
pop
mov
jg
pop
popa
popf
dec
dec
inc
or
push
push
or
push
mov
ins
cmc
or
cs
push
cmp
sbb
mov
xchg
ror
jmp
mov
imul
and
adc
adc
imul
mov
xchg
mov
minps
mov
repz
(bad)
loope
add
sbb
fsub
sub
push
push
sbb
cdq
movs
dec
inc
mov
push
inc
xchg
xchg
(bad)
cmps
lods
and
add
sar
mov
inc
repnz
or
inc
add
or
enter
cmps
or
adc
or
dec
adc
adc
xor
add
rcl
sub
sbb
cmp
pop
push
cmp
je
or
dec
sbb
mov
adc
pop
xor
add
and
or
sub
push
add
mov
test
add
lods
mov
xchg
pushf
inc
test
enter
push
pop
adc
pop
stos
rdmsr
jbe
rcl
push
jne
mov
js
mov
adc
mov
or
jp
test
mov
cmp
test
jle
push
adc
xlat
mov
or
inc
int3
push
add
push
mov
inc
add
mov
mov
movs
seto
(bad)
in
xor
sub
sub
outs
adc
xor
cmp
push
pop
push
adc
mov
cmp
add
push
repz
add
dec
pop
fadd
mov
mov
push
test
inc
mov
movs
cmp
les
push
adc
or
movzx
jmp
in
ret
sbb
and
mov
fld
sbb
ret
push
std
call
(bad)
adc
add
lods
and
stc
xchg
push
inc
ror
xchg
adc
mov
mov
sbb
mov
outs
mov
push
mov
test
(bad)
jmp
cmp
retf
adc
in
xchg
mov
(bad)
push
xor
fmul
jbe
rcl
push
xchg
cmp
mov
add
mov
dec
call
in
pop
add
mov
mov
in
push
jle
out
cmp
push
mul
ror
add
js
xor
xchg
jmp
adc
fisub
inc
and
sbb
pop
rcl
mov
jno
xchg
(bad)
outs
daa
sar
xor
adc
scas
cmp
pop
enter
test
push
jle
jmp
shl
pop
jbe
jne
mov
dec
push
jmp
jnp
test
inc
(bad)
mov
in
int
add
js
push
out
in
or
jmp
sbb
je
or
in
pop
push
dec
rcr
rcr
xor
dec
in
add
iret
test
lods
cwde
addr16
fsub
inc
cmc
xchg
xor
je
mov
inc
sub
mov
stos
fs
mov
clc
cdq
adc
push
and
aam
test
mov
cdq
and
sub
in
push
repnz
dec
dec
int3
xchg
test
sti
jne
mov
das
rol
or
int3
lock
cmp
sub
out
add
je
test
ds
or
shl
pop
test
pop
test
pop
lods
push
sub
jg
outs
cdq
inc
add
cdq
lock
fs
jae
mov
jmp
cwde
in
push
ss
sbb
jmp
ja
(bad)
fisttp
and
mov
int
inc
jno
jge
sub
clc
inc
loopne
inc
test
sar
lea
rol
loop
lea
outs
lock
push
cwde
clc
rol
push
arpl
mov
adc
aam
rcl
and
pmulhuw
or
push
add
into
movs
mov
enter
dec
pop
mov
(bad)
add
push
pop
jge
pop
lock
in
outs
js
sahf
adc
push
inc
ret
adc
mov
pop
mov
xor
mov
xor
(bad)
shl
xor
lahf
inc
xor
pushf
cmp
push
mov
or
mov
dec
dec
xlat
setno
movs
push
sbb
aam
push
xchg
inc
sbb
pushf
sbb
or
in
or
out
add
js
pop
lahf
add
movs
loopne
loop
pop
add
xor
cld
dec
xchg
push
es
mov
in
cmp
imul
je
fwait
stos
or
push
add
mov
mov
jp
and
jo
mov
bound
add
clc
mov
(bad)
les
add
mov
shl
inc
mov
dec
push
lea
sub
xor
call
shl
out
pop
ret
push
mov
or
and
adc
adc
add
push
add
data16
push
dec
sti
fld
pop
sete
push
push
push
pop
dec
pop
and
cmp
gs
xor
push
aad
sub
cmp
xchg
stc
add
and
pop
adc
je
pop
das
dec
fcom
xor
ds
adc
mov
lods
sub
pop
rcl
sbb
lahf
jb
push
mov
pop
loopne
inc
loopne
xchg
mov
sub
cld
or
adc
inc
push
inc
jmp
jno
sbb
in
sbb
xchg
xchg
jne
or
add
(bad)
or
pop
mov
mov
cdq
jns
push
shl
leave
dec
xchg
je
inc
mov
xchg
or
shl
pop
xchg
pop
add
jne
dec
shl
mov
push
sbb
mov
adc
enter
sar
test
add
jge
jle
push
and
rol
pop
je
sbb
xchg
adc
nop
sub
les
jbe
pop
mov
nop
add
sub
rcr
xchg
inc
enter
mov
(bad)
pop
rcl
jl
xchg
adc
int3
cdq
pop
mov
scas
push
mov
add
pop
or
sub
mov
fstp
iret
in
add
(bad)
out
or
jns
enter
sbb
(bad)
(bad)
jb
or
js
jmp
test
xchg
int
jmp
cmp
dec
dec
or
push
push
pushf
pop
aam
push
mov
imul
or
sbb
pop
mov
call
sub
or
mov
or
lock
adc
dec
pop
mov
(bad)
movs
inc
cmp
mov
jle
push
cmps
mov
movs
or
dec
inc
inc
adc
or
mov
xor
sub
inc
lahf
(bad)
cwde
ret
push
xor
cmps
xchg
push
mov
inc
sbb
inc
out
inc
sbb
mov
aaa
adc
push
mov
and
sbb
xchg
sub
jne
xor
(bad)
pop
xchg
addr16
sbb
mov
sbb
mov
pop
xchg
cmps
xchg
std
push
pusha
xor
int
mov
in
adc
inc
cwde
sbb
test
mov
add
loop
(bad)
mov
movs
clc
sbb
mov
sub
in
push
in
pop
outs
inc
aam
and
fcomp
mov
jo
mov
pop
mov
jge
lods
xlat
lea
add
mov
push
and
(bad)
jmp
scas
call
dec
pop
push
ror
mov
inc
(bad)
movs
or
xchg
cdq
fadd
fimul
aad
jbe
mov
dec
into
mov
rcl
sbb
fmul
inc
dec
push
xor
movs
sub
xor
add
aam
or
cmp
jb
adc
dec
and
adc
test
je
push
add
arpl
js
jmp
or
retf
loope
jno
push
xchg
out
xchg
push
mov
(bad)
lahf
fs
mov
dec
not
sbb
les
mov
or
inc
mov
adc
push
inc
out
inc
test
push
lahf
inc
sbb
lea
push
cmps
push
jb
mov
out
mov
pop
stc
stos
sbb
and
mov
cdq
lds
(bad)
repz
cmp
sub
test
cmps
scas
mov
or
sbb
push
les
push
das
ret
push
mov
dec
mov
push
mov
cmp
or
dec
or
add
adc
sub
pop
ret
aas
dec
jle
dec
lds
test
inc
adc
repnz
fucom
mov
add
mov
add
xor
cs
jmp
cdq
adc
(bad)
xchg
imul
xchg
ror
adc
sub
fadd
popf
sub
push
sysret
and
cmp
(bad)
scas
jmp
inc
push
push
adc
jae
mov
pop
push
pop
test
shr
test
jne
(bad)
sub
leave
push
pusha
enter
pop
xchg
mov
dec
in
movs
and
imul
aam
mov
cmp
jbe
or
jmp
(bad)
call
shl
test
inc
dec
jne
cmps
repnz
mov
fild
xor
add
das
sub
add
clc
iret
ror
(bad)
lahf
retf
adc
clc
dec
inc
cmp
add
xor
push
or
sbb
aam
lods
jmp
push
fwait
jne
sbb
cmp
mov
xor
sbb
or
xchg
mov
gs
rsqrtps
cwde
push
cwde
movs
lods
mov
es
inc
mov
dec
jb
test
stos
mov
out
mov
jne
(bad)
pusha
push
cld
push
mov
dec
xchg
cmovb
arpl
(bad)
into
cmp
sub
test
clc
cmp
add
pop
lods
cli
mov
test
adc
mov
cmp
dec
pushf
lds
xchg
xchg
mov
(bad)
push
mov
ins
rcr
add
sbb
or
in
add
add
es
clc
ret
cmovle
add
into
push
cmps
stos
ret
mov
pop
push
cdq
or
sub
fiadd
pop
je
or
mov
cwde
push
aaa
js
out
push
movs
adc
arpl
add
pop
cs
pop
dec
add
mov
lock
rol
jmp
mov
mov
cdq
push
jecxz
add
addr16
adc
in
mov
lea
mov
and
push
ret
mov
and
jge
ss
xchg
xor
(bad)
or
ins
push
cmp
rol
rol
ins
jne
pop
pop
sar
mov
push
push
add
cmp
or
xor
mov
xor
fmul
leave
out
adc
mov
push
pop
lods
leave
daa
xchg
retf
inc
ins
add
push
cmp
cmp
je
icebp
cmps
outs
mov
cmp
mov
and
dec
sub
sub
mov
mov
xchg
shl
and
inc
push
lods
test
rcl
push
pop
daa
jae
add
xchg
pop
sbb
mov
jb
lock
add
pop
mov
and
test
aam
out
repnz
jne
push
test
cwde
mov
jne
movzx
pop
fcomp
fs
push
retf
ins
adc
sbb
mov
stos
mov
and
jmp
and
cmp
pop
mov
push
and
or
inc
dec
or
sar
lock
out
cmp
cmps
div
dec
dec
mov
dec
and
xchg
mov
rcl
adc
mov
jecxz
pop
or
xor
push
add
mov
cli
je
je
push
adc
jg
je
dec
je
mov
sbb
int3
enter
test
test
push
dec
ss
push
or
sub
sbb
cmp
add
je
dec
jne
xor
xchg
jmp
add
xlat
ror
lahf
das
dec
add
mov
mov
add
push
inc
int3
pop
xchg
xor
jle
outs
cmp
cmp
sub
mov
ret
(bad)
leave
sub
jbe
ret
clc
cld
inc
inc
xor
js
cmp
or
inc
or
mov
push
sbb
pop
inc
xchg
add
mov
jecxz
in
jb
lahf
xchg
xor
lds
daa
retf
inc
cmp
pminub
mov
or
mov
and
ret
(bad)
jecxz
add
dec
add
mov
push
push
and
push
mov
jg
sub
lock
xor
mov
adc
sub
aas
dec
jl
push
jns
lds
cli
jne
jmp
cmp
mov
into
iret
jno
cmp
icebp
mov
push
jg
jmp
and
xchg
jne
js
or
fadd
ins
loop
push
xor
stc
adc
xchg
mov
and
fxch
inc
mov
add
popa
or
stc
add
ins
mov
popf
add
mov
mov
dec
pop
push
cmp
lds
(bad)
iret
outs
call
add
int3
mov
shl
add
or
mov
out
xor
or
dec
pop
and
sbb
xchg
adc
inc
xchg
jb
adc
pusha
or
ds
aam
mov
or
je
mov
or
mov
mov
sbb
mov
pop
pop
inc
sti
add
sub
push
mov
pop
stc
inc
stos
inc
and
jmp
imul
mov
mov
dec
(bad)
dec
sub
mov
inc
mov
adc
cdq
add
add
push
lock
mov
js
sahf
inc
shl
cmp
jae
stc
push
sar
xor
lods
pop
or
sub
dec
daa
adc
ficom
cmps
js
and
xor
inc
shl
out
out
add
push
add
inc
adc
mov
adc
or
jge
sbb
lea
mov
add
cmp
je
mov
xchg
cld
ret
pop
popa
rcl
push
icebp
adc
and
push
stc
mov
sbb
mov
or
call
test
sub
fidiv
mov
xor
adc
dec
add
jne
les
dec
cmp
or
mov
cmp
je
mov
push
push
or
and
lock
mov
cmp
push
fs
mov
jmp
sub
mov
call
outs
test
or
lea
add
rep
mov
inc
mov
aam
sbb
rcl
std
cmp
inc
sbb
rol
fisttp
mov
popf
es
cmc
xor
aaa
sbb
ret
add
mov
xor
add
outs
lods
enter
mov
adc
push
repz
leave
ins
retf
sub
xchg
fmul
lds
push
in
adc
or
adc
pusha
xor
(bad)
push
inc
sar
enter
(bad)
sar
cmp
dec
jge
and
retfw
retf
inc
int
cmp
cwde
mov
in
cmp
imul
cmp
ins
mov
mov
repz
xchg
mov
cli
jne
or
sbb
in
add
nop
mov
movs
(bad)
and
xchg
push
clc
inc
mov
add
in
mov
sbb
xchg
rol
sar
mov
sub
or
addr16
pop
je
sbb
fsub
push
sub
and
xrelease
push
mov
movs
verr
loopne
enter
les
xor
pop
mov
push
mov
inc
push
jge
lock
mov
enter
daa
enter
pop
mov
rcl
and
dec
cdq
mov
add
fadd
js
xchg
jp
lods
adc
push
stc
mov
mov
mov
jmp
sahf
fldenv
adc
mov
dec
add
sub
and
les
idiv
add
scas
enter
out
and
pop
inc
retf
push
xchg
cli
(bad)
xor
xchg
mov
sbb
mov
xchg
lods
push
add
push
(bad)
in
add
xchg
pop
or
and
xor
xchg
or
pusha
fnsave
ret
sub
movs
or
pop
add
dec
push
and
js
mov
sub
mov
dec
or
or
xchg
js
sub
shl
push
mov
jae
rol
or
ss
add
jmp
sbb
in
movs
push
cmp
jmp
mov
mov
and
add
fdivp
out
sub
fldenv
xor
add
inc
les
pop
mov
add
xor
inc
xchg
out
adc
push
(bad)
and
in
les
and
aas
adc
mov
mov
adc
test
jno
sbb
adc
add
sub
push
test
push
push
sbb
jns
dec
dec
outs
jne
mov
das
sub
push
addr16
xor
cmp
lea
test
xchg
fsubr
jbe
push
sar
mul
shl
mov
cmp
add
mov
sbb
xchg
push
test
sbb
and
sbb
add
leave
xchg
sub
or
inc
cld
cdq
ja
push
rol
dec
adc
push
das
mov
push
and
stos
push
pop
xor
lock
aaa
push
cmp
je
test
jne
or
and
inc
xchg
or
sub
inc
jb
or
and
or
push
(bad)
xor
jne
test
cwde
xchg
inc
adc
push
mov
dec
sbb
pop
inc
inc
sbb
(bad)
cwde
test
push
into
pop
jne
sub
js
push
mov
mov
adc
sbb
movs
in
jns
int3
stos
in
sbb
scas
lock
je
xchg
es
pop
pop
out
mov
cmp
sbb
mov
ret
cmp
sub
xchg
ror
push
jmp
push
dec
pop
push
or
push
push
push
(bad)
adc
xor
sbb
imul
adc
cdq
inc
mov
test
into
xchg
add
xor
mov
shl
sub
ds
js
cwde
dec
adc
cdq
mov
lods
push
nop
popa
or
inc
cmc
jbe
(bad)
(bad)
xor
jp
adc
xor
dec
jge
aas
cmps
or
adc
in
and
push
jno
jb
or
fcomp
movs
data16
sub
push
hlt
test
inc
dec
fs
les
stos
and
fimul
test
aam
cdq
sbb
add
retf
ret
pop
pop
leave
lds
cmp
call
fimul
into
pushf
pop
push
push
out
fstp
adc
ret
inc
popf
xchg
or
mov
je
inc
stc
jno
push
mov
adc
adc
imul
jne
pop
jo
jne
sbb
aad
lds
pop
mov
cs
or
punpcklwd
imul
test
xlat
sbb
xchg
bound
mov
in
push
fdiv
push
inc
jne
jmp
popf
fwait
cwde
mov
add
inc
sub
xchg
pop
mov
pop
sub
call
or
nop
inc
stc
mov
sub
mov
(bad)
cmc
and
and
jle
sub
je
aas
mov
cmp
xor
cmp
sar
cmp
mov
mov
push
xor
ret
sbb
push
(bad)
test
push
pop
and
xor
xchg
jle
aam
sbb
jecxz
mov
jmp
test
dec
ds
iret
mov
enter
jecxz
test
cmp
and
jp
and
mov
pop
ror
dec
dec
sbb
adc
mov
xchg
add
ror
dec
lods
xor
or
sbb
push
outs
mov
daa
and
dec
jno
inc
and
ret
cdq
or
and
icebp
dec
or
jge
test
and
mov
add
add
sbb
sub
out
pop
cwde
pop
or
and
mov
mov
add
xor
and
movs
adc
nop
cwde
sbb
loopne
int3
call
jnp
or
in
and
cmp
stc
pusha
sub
jns
popf
xchg
into
add
ret
sub
inc
fs
sar
enter
pop
add
add
pop
inc
fidivr
fimul
add
sbb
js
shr
sub
sbb
inc
add
les
inc
or
xor
dec
dec
pop
not
and
sbb
movs
adc
stos
pop
sub
mov
rol
sbb
dec
adc
gs
int3
mov
add
push
ficom
es
add
jne
mov
dec
sub
sbb
push
enter
and
iret
dec
xchg
pusha
push
sbb
and
cmp
xlat
movs
push
adc
leave
xchg
lds
dec
lahf
and
movs
mov
push
jge
mov
in
call
mov
sbb
or
mov
or
int3
mov
inc
(bad)
cli
in
sub
imul
test
leave
aad
pop
adc
add
dec
mov
mov
jne
fiadd
pop
jnp
or
adc
push
lds
xchg
mov
sbb
inc
inc
lds
lock
or
fs
add
aad
push
stos
push
dec
cs
test
leave
sub
lea
js
sahf
inc
cmps
push
or
shl
fst
jle
ins
push
nop
ror
and
jns
xchg
nop
add
adc
(bad)
and
fyl2x
lea
int
dec
iret
popf
pop
pusha
inc
add
and
xor
mov
adc
imul
sbb
dec
adc
bound
rol
push
mov
retf
or
or
jecxz
mov
jno
int3
xchg
or
pop
pop
sub
add
mov
shl
xchg
loop
sub
add
jne
enter
dec
xor
mov
iret
outs
push
jp
cmp
add
pusha
sub
jge
sbb
xor
sar
nop
adc
enter
leave
inc
or
das
push
push
push
sti
push
add
int3
mov
cmp
addr16
imul
mov
add
lods
pop
add
mov
cmp
je
inc
jne
sbb
jae
or
add
lock
add
cmp
je
dec
loop
idiv
dec
jg
retf
jmp
retf
cmp
add
jg
cmp
push
loop
push
jae
ins
shl
jmp
dec
(bad)
jno
enter
in
cmp
inc
arpl
adc
fsubp
fisttp
je
adc
push
cmp
(bad)
cli
ror
movs
or
ror
jmp
cmc
clc
stos
addr16
ret
add
js
mov
inc
inc
dec
xchg
jl
and
pop
inc
repnz
jle
mov
adc
cmps
inc
pushf
(bad)
fs
push
dec
and
jno
pop
add
repz
adc
in
add
push
jmp
ficom
inc
pop
inc
std
inc
dec
lahf
test
mov
inc
sub
adc
add
js
or
or
and
push
mov
add
jne
xor
jns
add
inc
mov
aad
aad
dec
fisub
stos
jmp
inc
adc
sub
sahf
in
inc
dec
std
push
xchg
mov
inc
add
out
mov
aad
imul
add
loop
and
fimul
lahf
mov
and
daa
or
pop
inc
jbe
dec
xchg
outs
xchg
cmp
mov
push
mov
jmp
ficom
idiv
adc
jle
in
dec
pop
or
xchg
sbb
std
inc
stc
imul
ins
scas
test
adc
push
pop
push
mov
in
retf
sbb
rcr
je
sub
aas
pushw
mov
scas
inc
jg
adc
add
jne
sub
push
out
add
fcom
mov
rcl
clc
sar
add
retf
dec
push
sbb
shr
cdq
or
rol
retf
sub
sbb
retf
fnstcw
sub
add
(bad)
rcl
mov
cwde
mov
fsubr
or
sub
or
ror
test
hlt
imul
xchg
push
jo
shl
pop
push
dec
sub
inc
js
mov
push
pop
in
add
nop
pop
add
pop
xchg
sbb
mov
mov
pop
icebp
jmp
inc
sub
and
xchg
push
jmp
(bad)
or
lods
sub
sub
call
mov
sti
and
push
sub
adc
gs
push
or
mov
sub
mov
js
adc
adc
loope
pop
inc
and
arpl
mov
jge
(bad)
jne
and
and
ja
xor
mov
sbb
cmp
in
xchg
ds
xor
adc
ins
push
and
arpl
in
ja
push
js
sbb
es
in
aad
mov
push
mov
xchg
add
mov
in
mov
or
int3
in
push
and
(bad)
push
sbb
adc
push
int3
std
adc
ficom
cmp
mov
add
lods
push
(bad)
fld
ret
mov
push
mov
loopne
mov
add
lahf
jne
fmul
js
jbe
or
lds
and
inc
sub
sub
or
sahf
lods
or
loop
push
out
sbb
mov
jns
add
(bad)
and
or
call
loopne
adc
and
push
jmp
lahf
lahf
cmp
or
shl
fisttp
out
push
fst
cmp
les
std
call
cmps
xchg
(bad)
push
std
dec
adc
mov
ss
retf
xchg
pop
xchg
retf
inc
dec
sbb
xchg
repz
xor
sti
nop
add
fs
loopne
mov
pop
dec
ds
push
add
out
or
call
mov
loop
adc
mov
xor
mov
in
addr16
cmc
fldcw
and
sub
imul
in
sub
mov
and
and
out
pop
or
std
sub
jae
xor
hlt
mov
sbb
enter
push
xor
aam
inc
mov
add
xor
add
add
xchg
adc
xchg
sub
fwait
je
les
push
mov
inc
cmps
arpl
pushf
test
cmp
mov
push
adc
popf
pusha
daa
leave
cmp
inc
in
in
ret
mov
movs
sub
or
and
int
mov
test
stos
push
jle
push
push
popf
fiadd
test
(bad)
and
push
stos
inc
cmp
cmc
icebp
loopne
scas
sub
cmp
push
adc
lods
lea
add
call
and
add
jg
in
add
or
es
movs
ss
test
and
ja
call
(bad)
sbb
adc
xchg
jl
add
add
mov
in
sub
cmc
sub
loope
ins
jno
call
xchg
test
daa
push
push
jnp
mov
clc
xchg
test
in
in
es
addr16
add
call
jmp
hlt
imul
out
add
rol
mov
adc
push
mov
inc
mov
icebp
imul
cmp
or
sub
sub
xor
pop
add
call
cdq
gs
pop
xchg
or
cmps
cmp
ja
call
sub
stos
leave
or
dec
mov
inc
(bad)
push
dec
pop
rcr
leave
mov
jle
jns
jmp
sub
scas
cmp
push
fdivr
fisub
aas
or
and
scas
or
cmps
nop
pop
aaa
cmp
mul
imul
out
jp
mov
and
pop
pop
inc
dec
adc
dec
mov
dec
jmp
arpl
retf
or
jmp
jle
xor
jmp
pop
(bad)
add
fmul
jmp
push
add
mov
or
xor
adc
test
jecxz
push
add
in
mov
addr16
sub
xor
and
int3
icebp
jp
pop
shl
(bad)
(bad)
push
int
or
nop
xor
enter
and
push
jge
bound
add
pop
or
ret
or
(bad)
cmp
les
repnz
addr16
add
dec
sbb
iret
rcl
mov
imul
push
or
xor
or
add
cmp
adc
dec
push
or
loop
mov
sbb
inc
add
push
fs
lds
sub
lods
in
push
punpckhbw
cdq
adc
adc
outs
test
sub
mov
movs
loop
adc
inc
in
stc
mov
or
jge
repz
mov
gs
dec
jecxz
sub
aaa
lods
inc
jecxz
adc
mov
adc
sub
sbb
popw
retf
shl
xchg
push
pop
xchg
xor
or
push
push
add
mov
or
sbb
mov
inc
or
push
js
add
fld
fstp
inc
imul
xor
pusha
xchg
fisub
pop
xchg
sub
icebp
cld
sbb
outs
int3
int
add
dec
push
pop
mov
sub
fs
adc
mov
jns
sub
sbb
aaa
sbb
push
sbb
mov
mov
enter
into
sub
mov
out
fwait
mov
popf
ja
je
fsub
mov
pop
xor
xchg
into
movs
fwait
push
and
retf
mov
mov
mov
mov
pop
lahf
jg
mov
push
or
inc
rcl
cli
inc
(bad)
clc
popa
push
pop
mov
inc
movs
sbb
sar
xchg
int
mov
lock
pop
or
daa
enter
lock
dec
mov
in
push
les
pop
and
mov
mov
sub
sbb
rol
daa
mov
inc
enter
push
push
cmp
xchg
int3
jmp
fcom
pop
sbb
stc
cdq
and
xor
popa
mov
aas
push
(bad)
test
sbb
add
xor
jg
jge
push
add
add
dec
add
ins
lahf
add
sbb
xor
sbb
add
sub
loopne
dec
cwde
fs
add
fadd
mov
mov
dec
sbb
cwde
shl
jnp
lea
popf
and
fdiv
sub
mov
cmp
mov
or
push
test
pushf
out
stos
pop
test
gs
call
ja
adc
xor
jnp
mov
ss
adc
out
adc
cmp
or
ds
push
jmp
adc
outs
fiadd
(bad)
adc
(bad)
lds
movs
push
dec
mov
sbb
ja
jg
iret
cwde
and
xor
std
and
enter
adc
push
xor
popa
test
mov
test
push
icebp
out
or
pop
inc
cmp
adc
(bad)
push
shr
ror
outs
xor
das
lea
aam
das
iret
jmp
or
push
sbb
dec
add
sbb
add
sbb
cmp
push
outs
pop
inc
add
jmp
(bad)
add
xor
fldenv
test
loopne
cmps
mov
arpl
cmps
sahf
cmp
in
mov
jae
pop
mov
dec
repnz
push
scas
in
or
jne
inc
out
cwde
xor
scas
add
push
add
add
lock
(bad)
inc
(bad)
lahf
or
mov
or
sar
cmp
pop
mov
pushf
or
adc
mov
jp
popa
stos
mov
push
sub
dec
inc
push
js
loopne
and
ror
popf
xor
cmp
adc
mov
test
xchg
clc
push
loop
sbb
je
call
sub
or
pop
and
mov
repnz
push
mov
retf
jecxz
jns
or
mov
(bad)
mov
into
xchg
mov
or
ins
xor
xchg
push
clc
das
scas
cmps
jg
lea
sbb
pop
je
mov
mov
or
jo
dec
sub
cmp
dec
gs
les
aaa
add
sub
adc
adc
pop
dec
sbb
leave
dec
mov
or
rcl
or
xor
xor
ds
sub
xor
pushf
call
aas
dec
inc
or
into
mov
es
retf
push
mov
inc
(bad)
push
mov
cmp
add
hlt
loopne
and
jne
push
fwait
mov
and
sub
push
(bad)
neg
ins
dec
loopne
and
or
sbb
test
cmp
jp
dec
shl
jns
pop
push
aas
out
fmul
aaa
cmp
clc
push
cmp
pushf
aaa
push
sbb
push
mov
push
inc
push
sahf
sbb
xchg
nop
xchg
mov
sbb
cmp
push
mov
push
sbb
or
mov
push
sub
jl
and
push
test
data16
jae
lds
sbb
in
cmp
sbb
mov
(bad)
sub
imul
inc
cmp
lods
push
lds
ds
pop
mov
shr
push
mov
sbb
xchg
jne
push
fnsave
or
xchg
mov
stos
add
mov
mov
mov
xor
stos
sahf
push
or
(bad)
xor
int
xor
cmps
mov
sbb
imul
cld
sbb
mov
je
adc
inc
ret
adc
imul
and
push
sbb
test
sub
mov
aad
gs
inc
pusha
fimul
pop
cmps
fcomp
mov
int3
adc
cmp
mov
ret
rcr
xchg
add
sbb
sbb
push
pop
js
scas
sbb
sub
add
sbb
dec
pop
enter
int3
or
lods
and
cmp
leave
out
call
xor
es
pop
push
adc
jmp
and
cmp
pop
adc
dec
push
push
push
ret
cmp
or
lea
mov
cmp
test
push
lock
inc
mov
in
push
cmp
popf
sbb
in
retf
jae
or
retf
push
sti
enter
fcmovu
xchg
or
xchg
mov
sub
das
fwait
sub
push
adc
or
call
jbe
pop
push
loope
aam
and
and
xchg
adc
pusha
mov
fistp
(bad)
push
mov
mov
xor
jmp
gs
inc
sub
iret
dec
mov
sbb
fsubp
sbb
adc
loopne
in
in
adc
push
psllw
mov
inc
test
in
xchg
mov
out
lahf
push
adc
fadd
inc
cmp
push
and
(bad)
jle
jge
jns
mov
into
test
movs
jp
add
or
mov
movs
sub
push
add
retf
sub
mov
mov
xchg
rol
addr16
call
sub
cld
inc
pop
mov
push
mov
movs
sub
(bad)
std
add
push
mov
cmp
jg
call
popa
in
rol
pop
rol
push
stc
push
call
sbb
shr
mov
inc
dec
aam
mov
jg
push
push
sub
dec
jo
mov
jne
xchg
xchg
jmp
add
mov
fld
inc
add
mov
push
inc
and
test
add
daa
push
mov
jb
aas
inc
xchg
inc
push
ror
pushf
xor
push
enter
sub
mov
bound
mov
xchg
loope
mov
scas
jns
push
xor
loop
add
mov
lods
dec
adc
leave
cmove
push
xor
inc
xchg
push
call
pop
or
and
data16
sbb
sbb
arpl
and
mov
stos
int3
xor
aas
loope
test
pop
aas
mov
sbb
aas
jp
cmps
xchg
pop
sahf
nop
mov
sbb
mov
adc
int3
jmp
adc
in
sub
dec
retf
loop
mov
sbb
inc
mov
xchg
xchg
cmp
fst
stos
inc
call
xchg
pop
sbb
into
popa
push
outs
adc
and
int3
lds
xchg
xchg
mov
jo
into
xchg
push
in
je
or
retf
les
xor
or
into
ins
loop
sbb
jl
in
add
adc
jmp
sti
or
and
test
xor
(bad)
add
inc
push
xlat
arpl
inc
vmread
enter
dec
inc
ret
sbb
sbb
and
inc
mov
addr16
pop
add
(bad)
jg
mov
fwait
cmp
xchg
mov
mov
push
aaa
xchg
cmove
push
mov
repnz
les
rep
fs
loopne
sbb
inc
adc
or
dec
mul
seto
mov
push
icebp
mov
sahf
and
sbb
xor
jns
and
sbb
xor
(bad)
and
je
adc
in
sbb
push
inc
das
push
movs
inc
sbb
jo
rcr
push
test
mov
fs
int3
cli
mov
out
clc
and
inc
lds
jo
int
aaa
test
add
imul
pop
xor
pop
mov
push
add
in
push
sbb
ss
or
dec
push
xchg
pop
pushf
mov
add
push
inc
sahf
or
arpl
xor
dec
pop
jmp
add
mul
push
jnp
inc
push
mov
adc
cmps
call
es
hlt
lds
push
out
push
(bad)
pop
sbb
mov
lods
inc
ins
loope
dec
jl
push
scas
call
daa
js
in
sbb
es
stc
fcomp
inc
enter
and
(bad)
es
loope
pop
sbb
dec
inc
sti
lods
sub
mov
daa
inc
out
repnz
cmp
enter
push
ffreep
jmp
sub
daa
push
cmp
cmp
jbe
call
cmp
sub
pop
or
in
shr
or
sahf
into
push
push
cs
and
mov
ss
rdtsc
inc
fild
xchg
movd
and
push
loop
xor
cmp
cs
cmp
pop
sbb
and
lock
sub
push
xor
ss
lods
dec
sub
enter
fs
ficom
and
and
fisttp
jge
shl
mov
in
push
mov
push
and
cwde
xor
out
ins
js
aam
shr
(bad)
movs
fimul
push
stc
outs
shr
cmp
cmp
push
sbb
test
adc
or
clc
sub
xchg
sbb
mov
mov
and
hlt
inc
add
shr
inc
adc
xor
fistp
call
sub
popa
je
cli
aas
push
jno
inc
push
pop
xlat
jns
paddsb
mov
mov
repnz
jne
push
adc
jno
lods
push
adc
adc
mov
adc
sbb
push
rol
sub
xor
cmp
mov
adc
repz
mov
ret
push
mov
sbb
inc
or
jge
inc
jp
jae
stc
jne
add
inc
sbb
pop
pop
or
ja
pop
and
pop
push
aad
or
add
mov
dec
or
pushf
pusha
imul
andps
xchg
shr
add
mov
pop
push
push
daa
xchg
nop
xchg
lods
pop
shl
push
mov
js
push
hlt
xchg
xor
sub
mov
les
mov
push
lods
fcomp
adc
add
xor
nop
push
push
dec
movs
int3
out
sub
jge
inc
lahf
fadd
push
stc
pop
pop
push
and
loop
push
jl
xor
inc
lea
aam
sub
pop
mov
xchg
std
and
pushf
outs
and
add
dec
sti
push
sub
scas
push
retf
popa
jno
or
imul
ret
mov
lds
push
jmp
ret
fdiv
repnz
sub
add
inc
mov
je
jae
sub
or
popf
push
es
or
data16
push
sbb
pop
inc
jnp
cmc
lods
adc
mov
sar
test
cwde
enter
mov
push
enter
or
push
outs
cmps
adc
dec
sbb
xor
sub
stos
xchg
pop
cmp
jmp
outs
and
ret
add
dec
dec
movs
jecxz
xor
cmps
scas
movs
ret
in
adc
je
mov
push
push
push
push
mov
stos
or
sti
movzx
push
xchg
cmc
imul
dec
sbb
adc
test
dec
(bad)
pushf
stc
cld
xchg
test
mov
(bad)
push
rol
cmp
inc
lds
shr
(bad)
and
or
cdq
nop
pop
mov
mov
push
sub
push
sar
add
add
cmps
or
cs
in
jge
inc
xchg
mov
fnstenv
or
push
ss
(bad)
pop
pop
or
mov
mov
sbb
jle
or
aam
jnp
adc
pop
adc
or
mov
push
fist
mov
add
push
xchg
jne
pop
cmc
enter
jb
cmp
stos
or
jp
das
and
ja
loop
(bad)
(bad)
fsub
xchg
pop
add
fs
movs
push
(bad)
sbb
cmp
sbb
movlhps
xchg
push
mov
out
retf
add
mov
xchg
nop
sbb
dec
nop
icebp
sbb
cmps
mov
or
cmp
adc
sub
push
jge
call
add
and
cmp
scas
cmp
sbb
xchg
stos
push
dec
xchg
pop
stos
push
dec
cs
jb
call
sbb
jmp
dec
sub
sbb
sub
or
mov
xor
push
out
add
mov
loope
fadd
add
test
and
mov
and
fcomp
add
fmulp
dec
js
aad
mov
jmp
dec
lea
pop
dec
stos
xchg
test
add
add
inc
adc
stc
pop
or
push
popa
xlat
les
add
inc
dec
clc
hlt
adc
dec
mov
sub
lock
or
into
enter
push
in
dec
cmc
mov
or
loope
sub
dec
xchg
dec
xchg
mov
add
jne
add
jp
and
nop
jmp
cmp
pop
pop
and
cwde
and
xor
mov
pushf
mov
xor
cwde
cmp
sbb
aad
mov
pusha
jge
add
inc
xor
add
or
xor
test
test
xchg
sbb
add
pop
enter
sub
add
or
jmp
jne
and
sbb
pop
and
push
pop
cmp
add
xchg
(bad)
mov
or
adc
or
lds
mov
push
stos
(bad)
gs
cmp
pop
add
outs
push
retf
mov
js
or
nop
inc
push
pop
jne
movs
or
repnz
adc
popa
imul
push
pusha
call
movs
je
pop
fs
cmp
inc
ss
dec
and
or
fidiv
xchg
cmp
xchg
fdivr
adc
jne
test
sbb
sbb
nop
or
je
dec
test
aaa
adc
mov
sub
xor
inc
test
cmp
sub
das
out
test
pop
jmp
inc
jge
add
dec
ss
jge
mov
mov
lds
scas
push
cmp
xor
sbb
mov
stos
pop
sub
pop
cmp
dec
adc
adc
jle
inc
mov
add
jne
je
mov
add
cmp
dec
je
push
fiadd
xchg
mov
cmp
jne
jne
add
xchg
jl
and
cmp
jmp
sub
mov
adc
xor
push
inc
inc
out
cwde
mov
xchg
je
test
shr
adc
fs
cmp
sbb
or
adc
xor
ret
dec
in
movs
enter
mov
retf
fs
xor
into
pop
fld
dec
jg
inc
retf
bound
mov
xchg
add
in
add
cdq
xchg
jge
pop
dec
jle
and
enter
mov
cwde
push
fmul
ror
(bad)
jl
jg
popa
or
mov
add
aam
push
cmp
dec
sbb
je
dec
pop
inc
cmp
ret
push
(bad)
push
mov
cmp
adc
leave
mov
xor
jno
call
fdivp
jae
cwde
push
pop
cmp
mov
(bad)
in
mov
add
dec
mov
jge
ds
lds
jne
cmp
cmp
mov
pop
inc
pop
adc
jl
retf
mov
inc
mov
addr16
movs
jecxz
push
dec
adc
mov
jnp
mov
cmp
pop
ret
jne
pop
jb
or
je
jae
enter
retf
ret
xchg
cmps
adc
xlat
jp
pop
mov
sbb
push
sbb
xor
xchg
cwde
je
fadd
ins
sbb
dec
pushf
mov
outs
iret
jne
add
jae
pushf
jge
mov
inc
adc
push
push
jge
push
iret
mov
dec
call
add
mov
and
sub
xchg
popa
clc
imul
nop
inc
push
imul
and
les
and
js
je
fnsave
mov
(bad)
popf
or
sahf
xchg
leave
retf
add
add
push
fstp
inc
clc
pop
jmp
inc
add
push
push
push
inc
rcl
lahf
adc
push
mov
or
push
jae
push
add
cdq
pushf
or
add
pop
sub
push
mov
retf
and
jle
inc
or
ret
push
iret
or
fild
mov
lds
push
cmps
aaa
inc
ror
xlat
adc
rcl
jl
push
pop
retf
loop
ror
sub
push
into
mov
jge
push
push
js
push
repnz
add
into
jle
push
pop
push
dec
dec
jne
pop
jp
push
movs
call
pop
or
add
push
inc
adc
push
call
in
call
in
repz
push
and
pop
fstp
lea
bound
adc
dec
or
mov
stos
inc
and
popf
inc
fdivr
add
xor
inc
cli
xchg
loope
adc
popa
lock
push
add
sbb
fwait
pop
cmp
sub
test
fcom
sbb
stc
aad
push
cmp
lahf
add
pop
and
in
mov
mov
push
test
lods
pop
push
int
inc
addr16
dec
or
int3
xor
add
mov
jge
sub
and
push
cmp
bnd
sbb
push
xor
call
test
mov
aam
xchg
daa
push
addr16
mov
push
cmp
rcr
cld
pop
push
repnz
cmc
and
hlt
jp
pusha
xchg
mov
xor
scas
dec
dec
(bad)
xchg
cdq
dec
inc
ret
push
add
pop
sub
push
xchg
sbb
push
push
or
push
mov
or
jp
cwde
je
dec
or
inc
pop
in
sbb
repz
cmc
or
sbb
int3
xor
adc
jmp
sub
push
push
inc
ret
inc
shl
movs
fdiv
xchg
dec
push
sub
ror
test
outs
loope
adc
(bad)
lea
cmp
mov
or
mov
fs
dec
nop
in
push
mov
jmp
movs
adc
adc
fdivr
xor
xchg
push
pop
push
push
push
mov
push
sub
or
cmp
pushf
(bad)
and
arpl
dec
cmc
mov
nop
mov
pop
(bad)
add
(bad)
xor
push
lea
push
test
pop
imul
add
(bad)
push
ja
std
inc
stos
push
sbb
push
dec
ret
lahf
test
je
icebp
xor
adc
pop
fnsave
aam
and
adc
and
in
adc
cmps
inc
mov
push
fs
or
dec
mov
call
lock
sub
pop
ins
dec
and
jge
pop
push
sbb
jno
lds
and
and
inc
(bad)
push
xor
movs
pop
(bad)
ins
sub
sbb
mov
test
test
xchg
jmp
nop
cli
dec
cmps
dec
hlt
cmp
and
xor
dec
mov
jne
push
int3
xor
jmp
inc
call
shr
add
or
mov
aam
jmp
shl
mov
into
jbe
push
push
mov
mov
and
inc
in
or
or
faddp
outs
add
cmp
add
jo
cmp
ja
push
adc
enter
mov
inc
add
les
sub
dec
enter
sbb
mov
mov
dec
jecxz
stos
rcr
mov
lock
(bad)
push
mov
out
mov
mov
sub
cmp
rol
sub
jae
int3
retf
ins
push
cmps
call
push
inc
les
jge
sub
mov
enter
xchg
mov
popf
mov
cmp
test
(bad)
lods
or
je
adc
nop
add
cmp
dec
or
mov
jmp
mov
fs
lea
in
pop
adc
ss
jecxz
(bad)
out
int3
(bad)
enter
dec
std
mov
rcl
mov
lods
enter
mov
or
sar
inc
add
lock
cmp
jno
sar
mov
aaa
in
lock
retf
mov
cmp
test
or
mov
xor
aaa
mov
cli
sar
sbb
sbb
arpl
cmp
push
mov
sbb
lods
test
pusha
pop
sti
mov
push
mov
iret
jecxz
dec
mov
mov
jns
and
adc
and
add
mov
add
xchg
push
mov
loope
daa
(bad)
lods
pop
fstp
push
cs
in
mov
mov
out
sbb
mov
ja
out
movs
mov
cmp
pusha
popf
test
fstp
lods
jg
call
inc
mov
push
(bad)
jns
leave
pop
cdq
push
shl
dec
xchg
mov
mov
loope
mov
or
les
cmp
push
and
fnstsw
pop
jmp
cmp
add
push
test
inc
fptan
loope
inc
add
bound
jp
cmp
push
push
jbe
add
xchg
test
push
int3
pop
sub
mov
retf
daa
adc
mov
xchg
or
rcl
dec
push
add
cmp
int3
push
pop
movs
int3
cmp
pop
aaa
cmp
(bad)
aaa
test
inc
dec
push
dec
or
push
pop
push
cld
mov
adc
jmp
test
dec
in
push
inc
cwde
sbb
out
mov
int
mov
mov
lock
add
fwait
cmp
daa
push
int3
push
(bad)
pop
sub
or
shr
cmps
cwde
push
or
jb
sub
lods
adc
pop
mov
cmps
bnd
mov
nop
or
stos
div
or
inc
xor
cli
dec
add
dec
jmp
jnp
in
test
sbb
push
push
push
ds
ss
add
push
popa
nop
sbb
adc
icebp
cmp
add
push
gs
mov
fs
cld
sbb
pop
stos
test
jne
inc
nop
cmps
test
add
movs
jae
add
add
sti
add
fucompp
cli
cmps
ins
rcl
sub
mov
mov
push
and
shr
stc
rol
mov
mov
fisttp
mov
movs
cmp
ret
or
fwait
add
fcom
jno
inc
leave
stc
rsm
cld
mov
in
and
icebp
rol
sbb
fiadd
dec
cmps
push
cmc
sub
adc
pop
push
fwait
push
xchg
cld
or
mov
adc
push
ret
add
mov
imul
inc
push
ins
and
(bad)
adc
push
in
cs
ror
fist
adc
je
cmp
inc
mov
xchg
sub
adc
adc
xchg
xchg
push
mov
push
pop
lea
(bad)
push
rol
ss
or
jb
xchg
call
pop
and
lods
pop
xchg
dec
test
adc
div
popf
fs
daa
movs
and
jl
mov
in
push
push
jb
pop
cwde
push
adc
or
call
and
fld
xchg
(bad)
jmp
into
fimul
(bad)
mov
push
or
mov
pop
fiadd
mov
lds
push
out
add
jp
inc
dec
ss
adc
pop
mul
and
mov
ja
add
jo
js
out
or
lock
(bad)
or
call
xchg
pop
or
ret
jmp
rol
sbb
dec
mov
fs
inc
or
shl
mov
jnp
mov
pop
add
push
adc
fisub
mov
fiadd
add
pop
mov
cmp
loopne
dec
mov
scas
mov
movs
push
into
xchg
xor
in
add
jae
or
test
push
ins
or
and
push
ret
fdivr
stos
mov
test
adc
in
shr
fs
push
enter
jnp
mov
int3
leave
mov
inc
pop
add
aam
lods
test
add
inc
sub
sbb
push
pushf
dec
lock
test
push
push
jl
cmp
sub
jo
adc
fwait
lods
fsubr
pop
and
pop
(bad)
aaa
jmp
inc
movs
xor
adc
pop
retf
xor
addr16
push
mov
mov
jno
mov
leave
out
sbb
popf
cbw
cld
loope
adc
into
sbb
mov
pop
test
in
jbe
push
jae
je
adc
jne
aam
fcom
pop
lea
or
shl
ds
add
std
jae
inc
push
fcom
mov
inc
into
mov
test
movs
adc
inc
mov
push
push
test
add
or
xor
sbb
rcl
out
jl
enter
cmp
jo
mov
or
mov
aam
inc
push
mov
mov
icebp
push
mov
push
lea
xor
int3
jb
clc
cmp
add
scas
mov
push
loop
add
imul
lea
test
xchg
dec
ja
inc
imul
dec
cmp
xlat
xor
xor
clc
sub
gs
test
mov
cmp
mov
xor
mov
xor
lea
xchg
or
dec
push
hlt
or
or
ins
mov
rcr
shr
pop
pusha
stos
fprem
js
mov
out
pop
push
or
fdivr
dec
mov
mov
push
or
arpl
push
mov
je
adc
pusha
cmp
fild
fstp
push
mov
pop
pop
(bad)
pop
sub
es
mov
or
inc
sbb
invlpg
ucomiss
addr16
push
and
loop
inc
icebp
aad
inc
mov
sub
int
popa
test
fcmove
popf
dec
pop
fsub
test
pop
pop
lods
sar
imul
adc
push
and
nop
aam
pop
popa
clc
sbb
inc
sub
add
push
sbb
sbb
push
push
xchg
std
push
add
push
cmp
test
push
push
out
stos
enter
fs
adc
xor
test
adc
call
punpckhdq
mov
add
mov
push
adc
data16
add
stc
add
or
test
inc
push
mov
push
mov
sbb
push
pop
xchg
inc
or
ss
retf
or
ds
je
push
jecxz
sub
add
and
loopne
cmc
icebp
jno
jne
call
mov
mov
fst
mov
add
inc
push
xor
jne
out
or
add
push
mov
enter
dec
fnstenv
push
add
(bad)
mov
adc
mov
daa
jne
pusha
ror
pusha
fild
mov
xor
add
mov
inc
sbb
shl
je
mov
aam
mov
push
sub
dec
repz
int
lea
repnz
iret
in
dec
inc
sti
push
adc
adc
push
mov
xchg
mov
pop
stc
les
mov
cmp
aaa
add
pop
mov
mov
test
push
jnp
and
jns
cmps
in
and
ret
adc
pop
movs
jmp
push
loope
cmps
inc
popa
pushf
mov
dec
sbb
and
pusha
cmp
pusha
cmp
mov
test
inc
shl
shr
setb
les
mov
xchg
and
test
(bad)
in
cmp
xchg
sub
xor
into
mov
add
in
cmp
or
into
mov
adc
mov
in
cmp
sbb
cmp
into
and
into
mov
in
pusha
das
fs
push
iret
into
mov
inc
je
js
in
cmp
dec
jl
adc
into
mov
pop
mov
repz
cmp
gs
addr16
cmp
iret
into
imul
repz
mov
cmp
iret
test
lods
xchg
mov
into
mov
xchg
mov
mov
mov
cmp
into
mov
mov
mov
repz
cmp
mov
cmp
into
(bad)
(bad)
into
mov
in
loopne
in
in
cmp
iret
call
iret
into
mov
out
hlt
icebp
clc
cmp
sti
cld
add
add
pop
into
mov
in
add
or
in
cmp
iret
or
adc
adc
into
mov
sbb
and
cmp
and
and
cmp
into
mov
cmp
in
cmp
push
xor
cmp
iret
into
pop
cmp
inc
addr16
mov
in
inc
outs
dec
jne
cmp
iret
dec
jnp
jg
iret
into
mov
test
pop
repz
cmp
xchg
pusha
cdq
mov
push
repz
cmp
mov
mov
cmp
iret
into
mov
into
mov
in
test
mov
in
cmp
iret
mov
nop
fist
cwde
jmp
repz
cmp
repz
inc
(bad)
mov
or
lods
or
jns
sahf
mov
mov
mov
sub
fnstcw
cmp
cmp
inc
jbe
popf
addr16
dec
rcl
out
jns
push
fcomp
jns
sahf
popf
pop
loopne
in
popf
addr16
call
jns
sahf
lock
addr16
cld
lea
repnz
cmp
xchg
add
or
or
adc
adc
sbb
into
lds
iret
and
into
mov
in
sub
sub
in
cmp
iret
xor
xor
cmp
into
mov
cmc
cmp
inc
jns
push
sbb
dec
adc
sbb
jbe
push
sub
pop
sahf
popf
addr16
pusha
cmp
jns
cmp
jbe
popf
addr16
je
addr16
jns
pop
jl
cmp
popf
jno
jae
ja
addr16
mov
jbe
xchg
xchg
cwde
mov
out
mov
jns
mov
mov
popf
addr16
mov
addr16
jns
xlat
mov
sahf
popf
in
icebp
enter
out
int3
sti
sar
in
cmp
sahf
aam
add
or
iret
into
mov
pavgb
in
in
cmp
sbb
and
into
mov
sub
in
cmp
inc
cld
inc
add
sahf
popf
addr16
dec
add
or
fnstcw
pop
or
adc
sahf
popf
addr16
sbb
sbb
and
popf
popf
sub
out
xor
jbe
cmp
cmp
inc
sahf
popf
addr16
inc
iret
dec
out
jns
aad
loope
jmp
sahf
popf
addr16
std
pop
push
add
cmp
into
or
ins
adc
jo
je
in
cmp
iret
js
jl
or
mov
das
test
repz
cmp
push
mov
gs
into
mov
ja
xor
cmp
iret
into
xchg
test
lods
lahf
into
mov
in
mov
mov
in
cmp
iret
mov
iret
into
mov
mov
in
cmp
retf
int3
iret
rcl
cmp
into
mov
aad
(bad)
out
repz
sbb
pop
push
in
out
jns
or
jbe
popf
addr16
pop
cld
and
in
and
hlt
add
into
mov
das
or
cmp
inc
adc
cmp
into
mov
dec
sbb
mov
in
cmp
push
and
sub
iret
into
gs
xor
mov
in
xor
cmp
cmp
inc
mov
repz
in
cmp
mov
cmp
into
mov
int
shl
fldenv
cmp
iret
into
icebp
ins
div
(bad)
mov
in
je
js
pop
jbe
popf
inc
jl
sbb
out
jns
daa
mov
mov
sahf
popf
inc
nop
dec
xchg
dec
popf
addr16
cwde
push
pushf
push
fnstcw
sahf
mov
sahf
popf
addr16
lods
jae
out
jns
jns
mov
addr16
out
jns
mov
mov
popf
ret
ror
aam
popf
addr16
fmul
(bad)
fnstcw
sahf
loopne
in
call
jmp
in
lock
add
(bad)
into
mov
adc
jns
sahf
add
or
or
popf
addr16
adc
adc
fnstcw
aas
sbb
push
jbe
popf
and
pop
addr16
jns
pop
sub
xor
sahf
popf
imul
out
cmp
inc
lahf
fnstcw
sahf
inc
movs
dec
lods
dec
sahf
popf
addr16
push
mov
jbe
pop
retf
pop
(bad)
popf
addr16
frstor
out
jns
jmp
jbe
popf
cmc
je
js
or
mov
call
in
cmp
iret
test
mov
repz
cmp
xor
cmp
into
mov
dec
movs
dec
mov
in
cmp
push
lods
pop
mov
cmp
into
pop
mov
mov
in
mov
cmp
iret
les
into
mov
fwait
shl
cmp
cmp
into
mov
ftst
jecxz
repz
cmp
jmp
out
lock
iret
into
cmc
hlt
idiv
std
jecxz
icebp
in
cld
adc
add
pop
cmp
into
mov
and
xor
cmp
cmp
into
dec
sbb
popa
into
mov
in
and
addr16
cmp
iret
sub
jne
iret
into
mov
jnp
jg
repz
cmp
cmp
dec
xchg
mov
in
cmp
cdq
push
lahf
push
cmp
iret
into
test
into
mov
in
pusha
mov
cmp
push
iret
into
mov
in
out
repz
cmp
in
jl
xor
inc
(bad)
mov
add
mov
fnstcw
sahf
mov
popf
addr16
cwde
sub
mov
sahf
popf
addr16
lods
push
addr16
jns
pop
mov
mov
outs
mov
addr16
les
jbe
int3
cdq
rcr
out
fdivr
jbe
loopne
in
jbe
popf
addr16
out
jns
jmp
cmp
or
mul
fnstcw
or
or
or
adc
addr16
jns
inc
sbb
jns
sahf
popf
pop
and
ins
popf
addr16
sub
ja
jns
sahf
xor
popf
addr16
cmp
inc
out
jns
popf
inc
mov
mov
sahf
popf
addr16
mov
fnstcw
(bad)
pop
jecxz
jns
sahf
popf
in
jmp
icebp
popf
addr16
push
cmp
sahf
jo
or
into
mov
(bad)
adc
pop
test
mov
cmp
into
mov
sub
in
cmp
aas
cwde
dec
pushf
cmp
iret
into
push
mov
mov
in
test
lods
test
cmp
iret
mov
mov
mov
lea
cmp
cmp
into
mov
(bad)
ror
mov
in
cmp
int
rcr
cmp
iret
into
aad
fnsetpm(287
in
mov
in
call
cmp
iret
lock
hlt
(bad)
clc
push
push
cld
pop
xchg
add
cmp
iret
add
or
or
into
mov
das
adc
cmp
sbb
push
cmp
into
mov
pop
and
mov
in
cmp
imul
cmp
iret
into
jne
jge
xchg
mov
in
cmp
inc
xchg
in
cmp
iret
inc
fwait
dec
mov
iret
into
mov
mov
mov
cmp
pop
rcr
iret
into
mov
(bad)
repz
cmp
out
ins
stc
jo
popf
inc
mov
out
jns
or
jbe
popf
test
mov
addr16
jns
inc
nop
inc
xchg
jns
sahf
popf
dec
cwde
dec
pushf
push
popf
addr16
mov
jns
sahf
test
lods
imul
mov
mov
mov
jbe
popf
les
addr16
jns
mov
mov
popf
rcr
rcr
fstp
jmp
jbe
call
iret
into
mov
psubb
cmp
pop
cld
and
stc
and
add
or
fnstcw
sahf
or
adc
adc
popf
addr16
sbb
out
jns
jae
jns
jnp
sahf
popf
sub
addr16
jns
xchg
xor
cmp
sahf
popf
popf
cmp
inc
movs
popf
addr16
inc
scas
dec
mov
jns
sahf
dec
mov
popf
addr16
pop
out
out
jns
icebp
pusha
repz
cmp
adc
repz
cmp
adc
cmp
into
sub
into
mov
in
test
pop
in
cmp
iret
mov
arpl
cwde
outs
pushf
repz
cmp
and
fwait
lods
mov
mov
iret
into
mov
cmps
mov
cmp
ret
rol
sar
iret
into
mov
xlat
int3
out
repz
cmp
out
aam
fcomp
sbb
or
jns
sbb
jbe
popf
addr16
sub
sub
fnstcw
xor
aaa
cld
cmp
mov
add
into
mov
in
or
jno
cmp
iret
adc
jns
iret
into
mov
jge
(bad)
and
in
cmp
xchg
and
sub
sub
xor
xor
cmp
cmp
cmp
into
int
rol
mov
in
dec
std
dec
pop
adc
popf
inc
push
or
fnstcw
daa
pop
sub
popf
aaa
fs
push
fldcw
dec
fnstcw
sahf
je
js
jl
popf
addr16
sub
fnstcw
ins
mov
xor
xchg
mov
fnstcw
xchg
pushf
xchg
mov
popf
movs
lahf
test
popf
addr16
lods
mov
jbe
mov
mov
addr16
shr
out
jns
in
enter
cmp
aam
adc
repz
cmp
and
das
loopne
cmp
into
xor
cmp
inc
into
mov
in
in
dec
lock
in
cmp
iret
hlt
imul
cld
addr16
mov
jno
sti
jne
jns
sahf
popf
lea
cdq
or
popf
addr16
adc
jbe
sbb
popf
addr16
and
sub
fnstcw
jecxz
out
add
mov
mov
in
cmp
pop
inc
pop
inc
cmp
iret
into
and
into
mov
in
push
aaa
push
cmp
pop
inc
pop
inc
pusha
iret
into
mov
dec
fs
push
gs
addr16
cmp
into
mov
jge
jg
repz
cmp
add
into
xchg
mov
repz
nop
mov
mov
cwde
rcr
int
xlat
test
je
cmp
lods
pop
push
mov
popf
addr16
mov
mov
sahf
mov
cmps
fs
enter
and
leave
jmp
sahf
popf
fadd
dec
addr16
jns
push
in
call
ins
in
outs
lock
addr16
hlt
xchg
clc
xchg
in
cmp
cld
lahf
add
test
repz
or
cmp
cmp
into
mov
rcr
mov
in
cmp
(bad)
sub
iret
into
in
jmp
in
into
mov
in
xor
cmp
jbe
sbb
inc
packuswb
fnstcw
and
dec
jns
sahf
popf
xor
push
pop
popf
addr16
pop
arpl
jns
sahf
pusha
jnp
lea
popf
addr16
ins
fwait
jo
fnstcw
lahf
je
js
jbe
popf
addr16
cmp
leave
mov
mov
sahf
popf
aad
loope
jmp
cwde
repz
cmc
call
jmp
mov
adc
cmp
cmp
into
mov
inc
ror
in
cmp
dec
enter
cmp
into
shl
ja
mov
in
fdivr
jg
cmp
iret
loopne
in
call
fwait
in
popf
lock
cmp
cmps
hlt
lods
clc
mov
sar
mov
or
rol
jns
sahf
and
popf
addr16
or
adc
fnstcw
sahf
adc
sbb
sbb
popf
addr16
and
and
call
adc
iret
into
mov
xor
mov
in
cmp
inc
cmp
inc
cmp
iret
into
push
inc
pop
dec
jns
mov
in
dec
adc
push
xchg
pop
cdq
pop
iret
into
mov
mov
in
cmp
stos
push
push
xor
iret
je
js
jl
cmp
sbb
sbb
add
jbe
popf
addr16
and
jns
sub
jbe
popf
xor
popf
addr16
mov
mov
fnstcw
sahf
mov
sahf
popf
addr16
les
jbe
int3
imul
shl
cmps
fsubr
fsub
cdq
popf
addr16
in
call
in
aad
addr16
lock
hlt
jecxz
jns
sahf
clc
repz
sti
add
inc
(bad)
mov
inc
sahf
popf
and
out
adc
sbb
fnstcw
sahf
sbb
and
sahf
popf
addr16
sub
out
jns
push
xor
gs
popf
cmp
jae
out
jns
jg
or
sahf
popf
xchg
dec
popf
push
cmps
popf
addr16
push
mov
jbe
pop
shl
fs
popf
addr16
push
js
div
sbb
adc
iret
into
mov
sbb
repz
cmp
sub
into
xor
repz
xchg
dec
cwde
xlat
int3
xchg
rcr
mov
sub
movs
sub
cdq
into
mov
in
mov
mov
iret
mov
iret
into
mov
leave
enter
in
cmp
repz
aam
std
dec
xchg
sbb
sbb
and
repz
cmp
and
xor
into
mov
aas
lock
sub
mov
into
mov
push
cld
pop
sub
cs
arpl
into
mov
imul
cmp
jne
jnp
jge
iret
into
mov
xchg
mov
in
cmp
xchg
and
sub
iret
into
lahf
sub
xor
xor
cmp
cmp
inc
xlat
inc
iret
into
mov
fisttp
dec
icebp
in
cmp
cmc
push
stc
push
add
cmp
(bad)
shr
push
inc
leave
in
jo
push
dec
push
jns
sahf
popf
adc
and
ins
sub
fnstcw
sahf
je
js
jl
arpl
dec
inc
or
cmp
fmul
(bad)
arpl
mov
pushf
lods
mov
mov
shr
sbb
fnstsw
call
add
inc
push
call
jb
mov
pop
push
ins
sbb
push
fild
pop
push
cs
les
xor
dec
cmp
mov
imul
int
sar
les
ror
rcl
cmps
div
int3
(bad)
xor
add
xchg
cdq
not
add
adc
movsx
mov
add
inc
xor
inc
inc
mov
cmp
add
xchg
and
push
push
and
sbb
and
imul
push
stc
push
add
(bad)
rol
add
lea
or
push
xchg
dec
xchg
popa
lock
or
sub
mov
rcr
es
sub
lods
push
cwde
mov
mov
add
jne
push
test
dec
retf
cmps
les
in
dec
sub
sbb
movs
mov
lock
pop
cwde
bound
in
sub
or
test
popa
push
jmp
mov
add
push
call
inc
push
cmp
adc
aad
and
add
repnz
mov
jno
mov
inc
add
ss
rcr
sub
cmp
sub
ja
xchg
xor
dec
push
push
cdq
mov
sbb
dec
outs
je
scas
and
shr
pop
push
nop
retf
xor
lods
cdq
jg
sti
daa
fwait
push
adc
loop
add
pop
mov
dec
clc
mov
jne
cmps
arpl
jo
scas
ret
jo
and
push
push
xchg
and
pop
pop
dec
pop
rol
pop
mov
push
popf
add
jbe
fdiv
jno
scas
loopne
nop
dec
inc
jae
fs
(bad)
call
mov
inc
xor
mov
cwde
dec
add
xor
sbb
mov
ins
or
inc
in
gs
nop
ret
inc
ins
adc
xor
rol
rol
pop
add
jle
dec
or
xor
test
cmp
jl
and
mov
je
mov
(bad)
test
fiadd
popf
not
les
push
and
fdiv
mov
ins
xchg
xchg
mov
inc
inc
jae
add
sbb
pop
lods
or
sub
ss
xor
in
arpl
arpl
cld
cld
push
or
arpl
sub
push
imul
fild
jmp
sbb
les
add
push
and
scas
movs
enter
sbb
loopne
pop
and
add
sbb
adc
and
pop
aad
add
aaa
add
ins
adc
xor
xchg
add
jmp
cmp
jae
push
push
dec
fs
mov
sub
dec
loop
jb
cpuid
ds
sub
add
jb
adc
fisub
mov
pusha
fcomp
retf
int
push
fdiv
fisttp
out
popf
and
xchg
imul
cld
pop
ror
push
rcl
mov
call
out
stos
jns
sbb
pop
lds
ret
pop
fidivr
add
adc
icebp
dec
loop
sbb
fadd
push
jb
fsubr
or
in
push
in
outs
mov
and
(bad)
leave
clc
leave
and
jne
cld
fs
push
cld
add
rol
add
dec
pop
and
inc
mov
arpl
cmp
pop
and
mov
inc
pop
enter
jge
in
xor
mov
xor
pop
shl
sbb
mov
push
xor
or
js
jmp
dec
add
nop
shl
or
xchg
(bad)
jmp
sbb
test
sub
inc
sub
dec
push
push
and
jno
dec
shl
out
dec
test
pop
test
push
add
mov
inc
add
(bad)
xlat
inc
jmp
mov
movs
into
adc
inc
xchg
cmp
push
pop
jp
arpl
pop
mov
enter
push
jmp
inc
inc
fcomp
cs
int3
jg
imul
adc
idiv
push
xor
(bad)
mov
jmp
std
(bad)
add
or
sahf
cwde
push
fcomp
je
or
or
xor
addr16
nop
ins
inc
ret
jae
push
aaa
aas
adc
fnstenv
fdivr
cmp
mov
push
mov
test
or
mov
and
lods
and
mov
lds
lods
fs
stc
mov
fstp
pop
pop
fcom
xchg
sub
fadd
mov
dec
cmp
cli
shr
cmp
leave
jo
outs
add
xlat
cmp
int3
(bad)
jl
out
add
push
jge
movs
in
sub
rcr
cmp
add
pop
retf
adc
stc
ins
mov
add
adc
jmp
or
adc
lods
test
cmps
jbe
fisub
dec
in
xor
add
bswap
sbb
in
sub
aas
inc
mov
and
or
pushf
push
mov
mov
(bad)
adc
fidivr
pop
xor
je
cdq
lock
in
stc
and
ja
xor
popf
stos
cmps
cmps
mov
cdq
repnz
and
adc
jbe
add
push
in
mov
or
arpl
pushf
icebp
xor
add
loope
adc
or
test
pusha
jbe
sbb
or
jbe
or
int
jbe
popa
mov
pop
fdiv
call
dec
cmp
xchg
bound
cmps
nop
sbb
ret
inc
aas
or
inc
loopne
das
call
cmp
push
adc
ds
adc
mov
test
add
mov
add
mov
sbb
add
push
lock
mov
mov
cmp
mov
sub
call
pop
jo
out
inc
pusha
mov
dec
or
cmp
mov
mov
lea
xchg
sub
add
js
or
push
push
cmp
push
bound
ret
je
(bad)
jnp
movs
ins
add
sbb
add
sub
jl
sub
add
push
inc
mov
add
cmp
and
fwait
test
call
jmp
or
xchg
fld
ja
mov
xchg
jo
cmps
or
jle
mov
out
loop
mov
mov
push
add
adc
mov
jns
test
dec
mov
stos
mov
test
push
xchg
test
xchg
mov
xchg
data16
aam
aaa
xor
test
jecxz
xchg
aas
sar
add
mov
jns
(bad)
mov
jg
ds
push
xchg
outs
xchg
not
push
push
mov
add
add
enter
adc
sub
or
xor
mov
dec
sar
or
mov
add
ret
repz
inc
(bad)
in
adc
dec
adc
mov
stos
push
pop
jne
push
mov
cmp
jne
pop
xor
jns
adc
or
push
scas
aam
mov
imul
adc
add
nop
rcr
mov
and
jne
add
ret
push
nop
xor
inc
adc
push
lea
sbb
xchg
mov
dec
ins
rcr
add
je
xchg
push
fiadd
test
loope
cmps
jl
push
and
push
hlt
mov
test
push
scas
test
movs
fidiv
sub
jo
dec
sbb
scas
inc
and
and
mov
test
scas
test
aam
jmp
aam
pop
adc
and
mov
push
inc
popf
lock
test
jne
adc
and
jns
jg
push
push
push
stos
inc
cs
mov
push
lea
mov
mov
mov
mov
cli
cmp
scas
repz
retf
xor
retf
daa
sbb
mov
jl
ja
and
pop
jl
sbb
jl
mov
lds
jnp
sbb
sbb
jge
and
xlat
loop
call
rcl
sub
sbb
inc
pusha
adc
jo
sbb
mov
and
sub
sbb
xor
inc
sahf
jne
cmp
add
movs
and
mov
xchg
lea
out
je
(bad)
add
or
mov
je
stos
jecxz
or
loop
imul
push
lods
ja
jno
adc
mov
mov
adc
adc
(bad)
pop
ja
adc
cld
jno
push
in
cld
jno
sbb
sbb
imul
lock
into
push
mov
sbb
icebp
(bad)
test
icebp
(bad)
sbb
sbb
nop
and
push
mov
(bad)
enter
mov
js
mov
sub
and
out
or
jle
mov
addr16
(bad)
jecxz
pusha
or
jmp
sub
sub
jno
cld
popa
sub
jmp
mov
mov
test
mov
push
(bad)
mov
xor
add
jne
or
mov
mov
cmp
and
push
pop
or
mov
push
push
push
mov
dec
sbb
sbb
lahf
test
sbb
pop
fsub
outs
lds
pop
pop
into
cld
inc
push
sub
mov
out
adc
adc
cmp
adc
out
inc
adc
gs
aam
xchg
fs
or
enter
and
lods
imul
or
inc
aam
retf
jp
retf
nop
inc
sub
cmp
test
push
out
add
push
mov
pop
xchg
push
cmps
adc
cwde
fstp
adc
out
mov
cli
push
or
xchg
dec
push
or
mov
inc
(bad)
inc
pop
adc
inc
daa
rcr
add
xor
inc
or
stos
pushf
push
rol
test
xchg
cmp
leave
adc
jns
or
jb
mov
and
jmp
push
cmps
pusha
mov
adc
jp
sbb
data16
pop
pop
xor
mov
or
pop
lods
sbb
mov
les
add
js
push
jb
(bad)
out
mov
lock
adc
cmp
adc
push
jecxz
or
clc
dec
xchg
hlt
test
loop
xchg
mov
dec
sub
push
push
xor
loope
xchg
sbb
adc
mov
fist
fidivr
and
aas
arpl
nop
or
mov
cmp
sub
cmp
fisttp
cmp
mov
or
push
mov
cvttps2pi
pusha
(bad)
fnstsw
cmp
cmps
fyl2xp1
lahf
xor
imul
aaa
rcl
popf
jne
mov
jnp
adc
mov
nop
pop
mov
adc
adc
div
pop
or
sbb
mov
mov
cmp
push
int
sbb
movs
lds
sbb
rol
enter
fmul
and
inc
mov
mov
paddq
cmp
push
mov
pop
shl
(bad)
push
out
inc
and
and
and
sbb
repnz
(bad)
jns
push
mov
xchg
push
es
jmp
mov
sub
sahf
mov
mov
mov
ss
daa
es
daa
push
adc
cld
xor
enter
jne
das
xor
mov
mov
mov
xor
xor
jge
xor
sub
das
cs
dec
sbb
xor
adc
dec
dec
loop
or
dec
dec
jbe
retf
imul
inc
sbb
jne
ret
jno
xchg
xor
cmp
sbb
and
std
and
adc
xor
xor
or
jne
mov
inc
popf
mov
push
push
retf
ds
push
mov
mov
ror
test
test
data16
cmp
popf
adc
lods
mov
enter
cmp
mov
rol
inc
pushf
push
sub
sbb
out
addr16
dec
lods
dec
inc
mov
cmp
xor
cmp
cmp
lods
pop
inc
mov
push
sti
or
je
gs
dec
rcpps
jp
and
movs
fdiv
cmp
xor
mov
aam
sbb
mov
movs
test
leave
hlt
or
ins
xchg
mov
or
jmp
aaa
popf
mov
into
dec
push
fadd
ret
ror
mov
jecxz
dec
push
push
push
cmp
pop
sbb
mov
retf
shr
push
push
push
mov
rol
retf
outs
popa
addr16
or
inc
sbb
sub
or
adc
movs
xchg
fcomp
stc
sub
jl
in
push
enter
jmp
mov
mov
push
sbb
xor
pop
inc
test
(bad)
jne
pop
push
movs
leave
push
in
inc
pop
mov
mov
sub
fld
pop
enter
pop
rcr
retf
ret
pop
push
dec
fsubr
aad
or
push
aam
xor
add
inc
pop
pusha
sbb
popf
mov
jno
mov
pop
lds
cmp
fs
push
adc
arpl
inc
fdiv
pop
xor
sbb
xchg
pop
aad
or
mov
popf
add
call
or
fwait
xor
push
arpl
and
xchg
inc
mov
mov
mov
test
push
cmp
test
imul
mov
mov
outs
mov
mov
gs
call
out
out
inc
fsubr
mul
mov
mov
cmp
icebp
addr16
adc
rol
lds
(bad)
jno
sbb
sub
mov
lods
lods
in
mov
jno
mov
cmp
pushf
jbe
mov
mov
shr
je
test
sub
jbe
inc
xchg
xchg
jb
in
aas
iret
repz
xchg
jo
sti
call
add
push
mov
xlat
js
xor
fsubp
adc
mov
add
add
pop
aas
stc
push
mov
jns
lahf
pop
inc
cmp
dec
enter
ins
das
stc
rcl
push
lahf
aad
stos
fiadd
enter
(bad)
shl
jge
jbe
xor
add
fdiv
inc
icebp
jle
aad
jmp
pop
xlat
jno
add
icebp
enter
out
test
(bad)
movs
add
push
loope
jge
out
sub
push
test
imul
mov
push
mov
enter
xchg
dec
xchg
inc
popa
and
ret
js
add
mov
aam
nop
clc
lods
repnz
push
mov
push
cmp
mov
push
jecxz
mov
or
cmps
mov
out
sub
or
stos
shl
stos
or
inc
stos
pop
lods
ret
loope
cmp
push
stos
xlat
mov
jnp
iret
test
jb
xor
jo
add
scas
push
xchg
loope
scas
arpl
loope
cmp
mov
scas
ins
mov
sbb
xchg
dec
mov
scas
leave
mov
mov
loope
cmp
les
fsub
cmp
mov
and
or
sbb
pushf
push
adc
cmp
inc
dec
lea
push
xchg
or
push
bound
pop
push
cmp
or
lock
add
push
ret
add
iret
cmp
fstp
xchg
or
pop
jne
lods
je
add
jp
outs
or
es
jo
aas
cwde
mov
rcl
add
pop
inc
(bad)
bound
rcr
pop
jo
mov
mov
sti
and
retf
add
dec
pop
retf
shl
lea
cmp
lds
test
push
xor
xchg
mov
or
cmp
jo
aam
nop
mov
loop
adc
xchg
push
push
retf
sbb
lea
call
out
jge
xchg
out
scas
movs
ss
test
jo
movs
movs
in
sbb
in
pusha
add
and
add
mov
aaa
test
add
adc
mov
fild
pop
or
cmp
and
pop
imul
sub
inc
mov
leave
mov
adc
push
imul
lea
push
mov
call
sti
push
push
gs
xor
adc
repnz
shl
data16
push
jge
adc
push
repnz
dec
xchg
push
add
push
adc
pop
fiadd
push
mov
cmps
ficomp
push
in
sbb
xchg
mov
inc
push
pop
jo
das
xchg
rol
mov
(bad)
and
push
fs
pop
mov
js
in
fstp
sbb
push
stos
and
inc
stos
add
jl
and
cs
lods
gs
mov
mov
sbb
sub
mov
add
(bad)
movs
mov
mov
inc
jbe
and
pop
cmp
popa
inc
jo
dec
push
rol
jle
xchg
dec
in
jmp
js
push
in
lods
sahf
inc
test
daa
test
xchg
or
mov
cmp
sbb
mov
add
jp
or
adc
or
retf
push
out
sahf
inc
shl
test
fwait
shl
mov
pop
inc
aam
fadd
cwde
arpl
adc
push
and
stos
xchg
push
fisub
pop
cmp
pop
mov
push
push
sahf
push
push
into
lahf
test
test
push
aam
mov
and
xor
and
xchg
xor
dec
push
sub
and
jbe
mov
mov
shl
push
mov
shr
rep
adc
data16
inc
xor
lea
and
xor
imul
jp
sub
fdivr
int
inc
jl
add
test
mov
and
add
aad
inc
add
dec
retf
sub
mov
push
inc
push
cwde
(bad)
push
test
sub
and
inc
inc
ja
push
or
adc
push
loopne
cdq
xlat
push
add
sar
sar
adc
inc
inc
jno
movs
pop
stos
outs
repnz
push
mov
or
mov
test
xchg
or
mov
jmp
inc
add
ret
scas
cwde
mov
cmp
add
lods
icebp
mov
sub
dec
push
call
call
pop
add
pop
dec
inc
mov
(bad)
push
scas
outs
and
xchg
jl
stos
lods
pop
xchg
fdivp
or
jp
add
call
test
stos
push
and
stos
mov
sub
dec
es
mov
push
call
xor
pop
jmp
xchg
outs
adc
(bad)
aas
adc
jns
xchg
xchg
jle
retf
ffreep
sbb
jmp
sbb
imul
test
das
xor
xor
add
push
sbb
fnsave
loopne
adc
lods
inc
mov
dec
mov
(bad)
push
add
pop
sbb
xchg
mov
sbb
sub
sub
push
daa
add
mov
div
push
dec
(bad)
lock
lock
je
ror
add
dec
or
lahf
xchg
(bad)
repnz
popa
bound
or
lea
arpl
ret
add
mov
in
fidiv
outs
or
mov
or
mov
cmp
out
or
fdiv
scas
and
fcom
sbb
add
adc
push
adc
pop
mov
bound
out
fs
das
adc
sahf
call
jg
adc
repz
mov
xchg
xchg
xchg
mov
es
adc
mov
sbb
xor
push
xchg
pop
add
outs
sbb
cli
(bad)
stc
movups
pusha
jnp
inc
push
adc
jge
stos
lds
add
xor
adc
dec
imul
push
mov
(bad)
adc
shl
mov
lahf
in
clc
or
add
or
retf
push
mov
repnz
push
rcl
arpl
push
xor
(bad)
ror
mov
dec
cmp
push
cmp
cmps
std
push
sub
adc
call
mov
add
jmp
stos
xchg
add
push
bound
pusha
mov
mov
adc
sar
add
aad
scas
repnz
rcr
mov
jecxz
jmp
pusha
jb
sbb
mov
push
or
fstp
or
add
(bad)
xchg
cmp
ja
je
sub
fs
or
je
(bad)
shl
or
pop
or
inc
imul
or
cmp
pcmpgtb
inc
jae
mov
or
xchg
hlt
sub
sub
push
cmp
xchg
jmp
push
push
sbb
je
xor
test
call
repnz
lock
mov
or
xchg
or
and
add
popa
lock
inc
mov
xchg
test
imul
cwde
nop
popf
or
adc
(bad)
sub
jmp
(bad)
push
std
push
mov
add
cmps
pop
fwait
movs
repz
push
pop
dec
jecxz
xchg
and
mov
jne
pusha
push
sbb
cmps
outs
adc
test
or
in
into
adc
mov
mov
cmp
and
jno
or
repz
enter
add
mov
xor
pop
nop
sbb
fs
or
in
dec
sahf
test
add
and
or
lea
mov
or
sub
jns
pop
rol
xor
nop
movs
xchg
inc
test
sbb
push
into
adc
adc
movs
add
or
jg
jb
fbstp
call
es
add
lods
dec
popf
jmp
and
push
mov
jg
adc
popf
cmp
and
or
lea
add
pop
mov
xchg
add
xchg
(bad)
push
dec
mov
mov
test
scas
mov
lds
dec
ret
pop
xchg
jo
ror
enter
push
sub
aam
sbb
int3
sub
or
mov
sbb
adc
push
repnz
into
xchg
push
adc
test
ins
test
in
lods
jb
test
call
mov
adc
or
push
push
and
inc
push
retf
xchg
daa
mov
mov
test
mov
stos
rcl
mov
push
or
loop
inc
lock
adc
sbb
push
add
or
sbb
push
into
jecxz
adc
xor
ins
sub
(bad)
or
and
int3
mov
cmp
dec
test
cwde
dec
jb
aam
mov
jnp
popf
mov
mov
and
popa
cmp
ret
xlat
test
test
jmp
jne
jmp
mov
mov
clc
dec
cwde
sbb
int3
jo
cmp
xchg
ja
mov
cmp
sbb
and
dec
mov
sub
imul
into
and
dec
or
neg
push
add
push
mov
sub
inc
sbb
adc
imul
jmp
movs
dec
inc
(bad)
sub
and
cmp
lea
inc
fisubr
add
(bad)
add
out
test
push
test
lods
icebp
movzx
pushf
cmp
mov
dec
mov
adc
mov
sub
jae
cdq
cld
mov
mov
push
add
stc
push
ret
xchg
jl
addr16
(bad)
xor
dec
dec
cdq
push
in
inc
and
je
push
push
adc
or
out
cmp
adc
cmp
fldenv
cs
test
int3
retf
push
dec
cmp
call
fs
jmp
jmp
iret
aas
(bad)
lds
mov
mov
es
imul
xor
test
lods
leave
dec
push
mov
bound
xchg
fist
mov
popa
(bad)
cld
test
daa
jbe
pop
cwde
addr16
sbb
pusha
sub
add
add
sbb
loop
mov
cmps
les
out
push
(bad)
(bad)
fsub
es
(bad)
ror
rcr
inc
jge
stos
je
and
jno
add
jns
add
xchg
dec
push
push
inc
sub
test
fisub
add
in
or
rcr
fadd
test
mov
or
leave
mov
jno
in
imul
adc
cmp
je
rol
sub
imul
xor
and
sahf
and
aam
jmp
imul
je
or
mov
stos
loop
sub
fwait
cmp
enter
ss
sti
cmp
add
data16
push
(bad)
cmp
stc
scas
pushf
sub
mov
or
stos
stos
int3
mov
or
retf
sub
adc
dec
and
and
inc
xor
aad
retf
pushf
push
aam
mov
jo
fs
or
jb
mov
sub
inc
je
dec
je
sub
jne
or
add
js
or
lds
mov
and
and
sbb
leave
or
and
sub
in
lods
mov
test
push
test
and
push
mov
das
loop
cmp
(bad)
sub
or
loop
(bad)
call
fsub
mov
sub
push
popf
ret
jmp
inc
sub
adc
(bad)
or
mov
fwait
or
cmp
xchg
xchg
jmp
mov
mov
outs
sub
(bad)
fbstp
inc
mov
in
leave
xchg
fsub
addr16
sub
lock
mov
xchg
adc
les
xor
push
adc
shl
inc
test
pop
mov
adc
mov
jno
xchg
movq
cwde
aaa
mov
das
inc
mov
jns
(bad)
rcl
jno
jae
enter
popa
nop
shr
or
ffree
pop
add
mov
push
pop
div
jae
adc
(bad)
xchg
mov
adc
push
hlt
pushf
jns
dec
ror
cmps
js
sbb
adc
add
sbb
into
ss
fxch
or
adc
and
sub
movs
add
sub
xor
(bad)
int3
or
add
or
std
sub
aas
inc
adc
arpl
push
jmp
js
loop
rcr
push
add
push
nop
mov
sahf
jmp
popf
bnd
sub
and
(bad)
in
adc
jb
dec
mov
add
rcl
in
out
push
in
repz
add
cmp
repz
movhps
sub
xor
neg
aas
push
mov
mov
in
add
lahf
jmp
outs
sbb
pusha
pop
sbb
sbb
jne
cld
inc
repnz
push
jo
std
(bad)
inc
cmp
enter
and
push
add
inc
push
fist
mov
mov
loopne
or
jns
aad
fmul
ror
test
push
adc
fidivr
mov
jno
inc
loopne
addr16
ret
mov
out
or
add
fcomp
fucomi
adc
mov
inc
test
and
mov
test
test
xchg
push
mov
and
xor
inc
or
shl
sahf
test
push
adc
scas
xchg
push
inc
pop
mov
jae
dec
(bad)
int3
mov
inc
mov
test
pop
pop
xlat
sti
pop
sbb
popaw
loope
popa
out
lods
mov
mov
imul
add
mov
jb
pop
add
adc
call
xor
sbb
xchg
mov
jo
mov
test
in
js
ja
pop
call
hlt
or
cmps
add
into
xchg
pop
iret
mov
mov
mov
mov
adc
add
dec
add
mov
sar
add
arpl
jns
push
cli
add
ins
sbb
sbb
push
ins
fdivr
mov
adc
add
rcl
push
sub
retf
adc
movs
add
pushf
or
int3
fisttp
sbb
sub
mov
nop
add
mov
sub
lds
in
push
xor
dec
fwait
sbb
mov
mov
adc
hlt
or
or
or
les
in
ja
inc
push
seto
test
inc
int
adc
push
xor
sub
xchg
dec
or
jge
sub
adc
jg
fdiv
scas
test
xor
adc
in
inc
jne
(bad)
jl
mov
jl
loope
test
push
jl
pop
sbb
test
pop
add
inc
jmp
sub
sbb
jae
cmps
push
mov
xchg
inc
dec
jmp
arpl
or
ja
(bad)
or
jmp
add
adc
jno
mov
lods
xor
adc
push
adc
or
dec
add
stos
pop
or
xchg
xchg
push
lods
or
in
js
setge
push
adc
retf
mov
mov
int
or
inc
jbe
shr
inc
jb
jne
sub
push
ja
jno
mov
mov
jbe
dec
xor
cli
in
sbb
cmp
cmp
jne
nop
sbb
rcr
jb
ds
pusha
das
std
rcl
jmp
in
movs
das
push
test
test
add
push
cmc
xchg
dec
call
repnz
loop
jbe
add
jbe
mov
call
push
ins
add
test
jg
scas
les
add
mov
or
cmp
dec
pop
add
shl
push
add
xor
repnz
mov
adc
push
mov
push
mov
mov
mov
movs
addr16
jl
pop
xchg
dec
xor
dec
push
or
enter
dec
xor
pop
hlt
mov
lea
jnp
adc
sub
add
(bad)
inc
and
or
mov
nop
loop
cwde
call
rcr
mov
push
dec
mov
sub
mov
icebp
mov
loop
cmps
loopne
data16
enter
mov
or
dec
les
push
dec
pop
mov
sti
inc
(bad)
push
jecxz
dec
out
dec
lods
mov
inc
sbb
adc
inc
bound
pushf
mov
cmp
adc
add
retf
ins
dec
pusha
pop
call
dec
inc
xchg
mov
lods
test
jo
pop
push
or
jecxz
sbb
(bad)
or
cdq
and
test
stc
mov
popa
(bad)
les
push
jno
fisub
add
jl
push
iret
iret
mul
(bad)
enter
mov
mov
in
mov
(bad)
ffree
jg
jns
mov
mov
in
les
push
mov
daa
add
les
push
loop
cwde
dec
push
repnz
mov
sbb
jecxz
xor
inc
inc
(bad)
xchg
nop
sbb
add
lds
adc
call
mov
push
test
retf
or
mov
and
fs
dec
test
xor
js
cwde
inc
inc
pop
lock
xchg
ret
cmp
aam
shl
dec
adc
test
xlat
inc
push
and
or
mov
dec
adc
(bad)
jge
retf
imul
repz
repnz
retf
inc
or
jecxz
or
or
add
push
cdq
sbb
sbb
or
dec
xchg
cmps
mov
dec
adc
retf
retf
lds
dec
sbb
jge
or
test
in
dec
mov
shl
or
push
cmp
and
aad
cmc
push
je
clc
lock
fadd
mov
test
int
adc
push
pop
scas
jbe
pushf
add
aam
movs
xchg
mov
mov
adc
add
add
cmps
mov
mov
call
shl
out
imul
mov
enter
test
js
hlt
jmp
pop
hlt
push
(bad)
lods
mov
xchg
inc
sbb
or
mov
out
inc
jl
clc
mov
cmp
jg
xor
ins
sbb
add
inc
cmps
inc
inc
push
(bad)
(bad)
adc
clc
adc
jne
mov
test
or
fisub
dec
mov
inc
add
ss
inc
xchg
and
xlat
and
push
or
add
outs
dec
jae
mov
mov
lahf
pusha
mov
push
in
adc
mov
mov
inc
sub
pop
xchg
xchg
popa
dec
add
push
ins
das
dec
es
repz
sbb
out
enter
add
jne
mov
and
cmps
lock
inc
(bad)
sbb
push
enter
pop
sbb
push
cmp
cli
mov
sbb
jne
cmp
jo
push
lea
push
cmps
into
lock
lods
inc
mov
xchg
or
gs
and
jne
pushf
inc
sbb
bound
dec
inc
rol
inc
cmp
pop
cmps
mov
das
xchg
gs
sahf
push
dec
xchg
add
sub
rcr
lds
gs
cmp
(bad)
add
jbe
jge
aam
adc
push
leave
adc
mov
jge
fmul
scas
sbb
mov
mov
dec
int3
push
add
push
mov
inc
fcom
adc
pop
pop
adc
mov
push
push
clc
or
add
mov
inc
sub
or
stos
and
ret
mov
cmp
ins
adc
scas
inc
not
and
mov
xor
cmp
xchg
add
mov
sbb
cmp
je
dec
dec
mov
inc
push
cmp
add
pop
mov
mov
sbb
mov
dec
fwait
pop
in
cli
jne
mov
inc
fild
cwde
dec
fucomip
xchg
pop
(bad)
js
call
inc
nop
int3
cwde
push
push
dec
push
call
sbb
xor
clc
inc
push
cli
cmp
adc
adc
repz
sub
xchg
into
aaa
js
mov
enter
jle
jne
cmp
pop
sbb
les
bnd
imul
mov
(bad)
sub
jae
cmp
xchg
and
cli
jb
mov
pusha
test
adc
lds
pop
iret
aaa
adc
ds
popa
xor
add
xor
in
retf
push
sbb
ja
mov
inc
pusha
pop
mov
pop
add
std
push
ret
adc
jne
sub
dec
les
mov
mov
sbb
sub
or
and
xor
je
retf
mov
mov
loopne
or
nop
stc
das
lock
sqrtps
(bad)
fist
fst
lock
pop
in
sub
fwait
loop
add
dec
dec
sbb
xchg
mov
in
(bad)
cmp
movs
lods
add
fimul
xchg
iret
jnp
mov
das
and
in
std
mov
and
leave
push
push
and
push
mov
xchg
rcr
sub
mov
push
add
cmp
das
gs
clc
aaa
or
and
loope
pop
inc
movs
dec
or
jle
mov
add
push
dec
ret
fsub
retf
es
mov
push
mov
ja
and
push
mov
xor
sbb
push
(bad)
dec
aam
xchg
push
inc
sub
jmp
push
xchg
and
push
lds
loope
jecxz
icebp
or
imul
mov
dec
lods
je
pop
or
mov
and
cmp
fld
push
xchg
mov
pop
std
test
xchg
stc
push
cli
cmps
adc
mov
(bad)
out
push
xchg
and
aam
add
mov
ror
push
cmp
cwde
xchg
cmps
xchg
gs
or
xchg
add
add
cmp
jb
push
pop
jmp
rcl
dec
mov
mov
in
sub
inc
jne
lahf
loopne
add
push
add
add
push
adc
add
dec
sbb
xchg
and
(bad)
cmp
mov
adc
inc
fdivr
popf
add
jne
add
inc
daa
or
add
stc
sub
mov
loopne
pusha
jle
in
adc
inc
or
mov
push
xchg
sbb
add
pushf
add
push
test
jb
add
xor
jae
mov
and
jmp
das
fwait
add
in
inc
or
bound
sbb
pop
or
js
lods
ja
dec
cmc
ret
adc
sbb
ficomp
test
push
aaa
add
inc
mov
xchg
shl
add
dec
sar
lock
test
or
hlt
xor
lods
push
inc
push
push
mov
lds
shl
mov
cwde
shl
sub
in
pop
pop
mov
xchg
mov
call
cld
add
imul
add
add
mov
in
sbb
fld
xchg
add
push
cmp
xchg
push
pop
into
cmp
fsubr
push
add
add
mov
push
fs
push
lods
jno
hlt
pusha
stc
das
jns
dec
test
test
lock
das
xchg
xor
mov
dec
and
rol
or
mov
je
and
pop
adc
shl
call
push
push
add
jmp
add
mov
xor
jg
mov
ret
jecxz
mov
cli
mov
jne
fdiv
and
fistp
sub
ss
push
test
pusha
retf
test
mov
xor
or
pop
push
jmp
xor
aaa
push
mov
adc
mov
mov
pusha
adc
(bad)
repnz
clc
sbb
cmps
lock
push
or
and
add
dec
xchg
(bad)
or
push
repz
rcr
push
and
mov
xchg
or
sbb
pop
in
mov
and
data16
mov
(bad)
fist
mov
sti
(bad)
xchg
cmps
es
out
sbb
dec
idiv
out
call
jb
out
sub
arpl
daa
xlat
icebp
sbb
cld
stc
addr16
sub
push
call
cmc
sub
call
sub
dec
call
jecxz
imul
sbb
test
or
in
mov
or
jge
sub
inc
aam
add
ins
pop
cmc
push
fild
stos
push
or
jbe
or
and
lds
movs
ins
mov
xchg
jns
mov
repnz
adc
and
push
in
xchg
out
ret
push
call
mov
adc
stc
mov
push
fcom
adc
call
mov
cmp
das
pop
adc
mov
aam
push
and
cmp
add
test
inc
out
inc
adc
ficom
in
xchg
sub
push
repz
xchg
sbb
not
adc
mov
dec
pop
loop
sbb
pop
lds
(bad)
sub
adc
sub
sar
jns
movs
pop
ins
mov
gs
clc
adc
in
jbe
and
and
sbb
mov
sub
jne
mov
call
enter
test
hlt
xchg
push
cmp
icebp
addr16
cmp
inc
adc
stos
fcom
mov
repnz
ds
inc
inc
mov
aam
test
xor
and
pop
inc
pop
int3
movs
push
push
popa
mov
or
icebp
fcmovnbe
cwde
dec
jnp
jmp
mov
pop
xchg
inc
jl
call
sub
push
inc
mov
adc
mov
inc
inc
cld
mov
movs
popa
jns
lds
mov
bound
jne
je
sahf
int3
adc
fist
jg
push
push
jb
rcl
xchg
add
dec
jp
adc
push
inc
mov
fdiv
ins
xor
out
inc
mov
add
aam
fstp
in
mov
or
daa
ins
ins
fisttp
fwait
dec
(bad)
adc
repnz
fisubr
or
xchg
stc
lea
and
movs
test
dec
add
stos
lods
pop
out
sub
(bad)
pop
mov
inc
mov
jbe
imul
lods
cwde
sbb
add
test
push
inc
mov
add
add
pop
rcl
ss
mov
inc
into
dec
sub
mov
push
add
mov
inc
adc
stos
cmp
lea
sub
aaa
dec
cmp
retf
mov
jl
adc
int3
fidiv
cmp
ret
stos
xchg
or
icebp
mov
inc
add
jle
fidiv
jmp
mov
dec
and
sbb
cmp
xchg
xor
xor
out
inc
sbb
xor
rol
push
mov
push
imul
mov
pop
iret
movs
push
les
movs
pop
repz
bsf
xchg
mov
rol
cmc
idiv
icebp
mov
and
cmps
xchg
adc
or
ror
add
test
mov
adc
mov
cs
mov
adc
pop
or
push
adc
jmp
push
push
aaa
sub
das
inc
adc
sub
sbb
or
adc
cdq
add
add
sbb
adc
test
jmp
dec
idiv
sub
pop
sbb
jge
mov
sbb
mov
jns
(bad)
fld
test
mov
lods
mov
jne
mov
or
xor
mov
pop
ret
test
mov
sub
in
adc
mov
in
mov
push
fild
mov
inc
sar
sbb
jecxz
shr
fsub
stc
push
loopne
or
adc
loopne
mov
cs
int3
adc
or
shr
adc
jmp
rcl
push
sbb
pop
or
mov
push
bound
push
push
mov
sub
and
mov
dec
push
or
or
sub
push
inc
cdq
cmp
inc
add
cmp
gs
or
movsx
pusha
test
add
in
pop
mov
inc
push
sub
pop
popf
mov
repnz
call
xchg
retf
sub
jae
push
mov
sub
xor
js
call
jno
or
adc
retf
sub
pop
mov
add
nop
push
es
sbb
ror
mov
movs
dec
adc
push
imul
push
add
or
int
add
cmp
or
gs
or
and
xchg
xor
sub
mov
cmp
std
repz
mov
xor
into
cmp
mov
aas
je
dec
retf
cdq
in
setne
cs
lods
and
sub
mov
inc
std
and
jg
adc
push
stc
inc
and
cmps
sub
inc
test
jb
or
adc
jno
or
and
adc
push
mov
dec
out
and
aam
sub
cwde
nop
(bad)
clc
adc
adc
imul
adc
xor
mov
sbb
sbb
push
adc
xchg
cmp
sbb
and
sub
sub
or
inc
add
adc
pop
push
mov
loope
repz
int3
pop
adc
adc
icebp
pop
and
fistp
and
jmp
mov
stc
push
les
rcl
sbb
and
out
add
fldenv
shl
xlat
scas
push
or
(bad)
push
xchg
dec
in
cmp
jmp
mov
xor
inc
push
call
pop
data16
add
in
cwde
xchg
inc
mov
or
call
dec
sub
stos
ja
sub
inc
ficom
push
xor
test
xor
pop
iret
cmp
dec
sub
enter
adc
pop
fwait
cmp
xchg
cmc
inc
xchg
or
adc
sbb
aas
push
mov
loopne
push
fisubr
mov
push
jo
mov
or
retf
pop
or
push
push
in
inc
lahf
xor
push
xor
push
inc
pop
jne
mov
lods
push
adc
jl
inc
scas
push
xor
ret
dec
sbb
sub
push
mov
enter
xchg
and
loop
or
mul
(bad)
inc
cmps
ja
fiadd
add
and
jge
nop
sbb
scas
mov
mov
add
mov
stc
(bad)
aam
lods
xchg
std
imul
sbb
pop
nop
nop
push
mov
dec
rol
lods
sbb
pop
daa
adc
fsub
add
dec
jno
or
stos
int
add
or
fst
(bad)
lea
sub
ror
loopne
pop
les
push
push
bound
inc
out
(bad)
and
test
and
inc
adc
pop
push
jns
xor
adc
and
mov
repnz
jnp
test
scas
dec
stos
xchg
cmp
shl
push
jmp
add
add
jmp
dec
inc
in
jmp
jne
inc
test
adc
sbb
or
in
jmp
lock
add
and
push
sub
inc
js
sub
add
mov
pop
ins
jmp
push
lds
mov
mov
and
push
pop
aas
inc
dec
loope
or
ss
push
dec
sbb
test
icebp
inc
nop
aas
cmp
sub
ds
lods
add
retf
ret
pusha
cli
call
jns
call
ds
in
push
ret
mov
mov
jb
and
inc
lahf
push
inc
lahf
pop
rcr
add
inc
sub
sub
and
cmp
(bad)
sub
pop
adc
cli
or
out
add
dec
test
sub
popa
pop
das
fsubr
cmp
jbe
addr16
inc
inc
or
popa
inc
fs
sar
dec
stc
test
xchg
aam
test
enter
stos
dec
mov
icebp
dec
push
mov
repz
push
xchg
inc
je
jo
push
imul
add
aam
ret
pop
inc
push
add
add
push
test
test
and
or
mov
mov
mov
adc
push
mov
(bad)
into
leave
pushf
sub
mov
rol
or
add
mov
adc
stos
fs
push
adc
jl
sub
or
inc
push
cli
push
test
jmp
ret
jmp
push
jno
inc
mov
mov
adc
out
cdq
scas
sbb
je
lea
adc
and
imul
lock
out
or
pusha
push
outs
xchg
rcl
cmp
jp
or
inc
sbb
mov
mov
push
pop
lds
push
push
push
jle
adc
fisubr
test
(bad)
sbb
aam
(bad)
pop
push
and
in
jle
and
ror
stos
xchg
dec
sahf
inc
mov
or
lods
add
aad
call
jbe
arpl
mov
mov
adc
add
add
xchg
sub
inc
cmp
mov
jle
sub
or
mov
jbe
add
sub
push
sub
adc
add
jns
les
ins
sub
add
daa
cmp
ret
push
mov
push
std
mov
push
and
cmp
pop
inc
add
mov
mov
sub
xchg
mov
mov
add
movs
xor
pop
sbb
mov
dec
push
xchg
inc
inc
ret
imul
sbb
inc
or
cmp
xor
sti
cmp
push
xchg
pushf
sbb
add
mov
fld
add
movs
movs
movs
cmp
sbb
jbe
dec
pop
pop
sbb
and
push
sti
fyl2xp1
jno
mov
mov
mov
jmp
mov
cmp
pusha
paddb
test
cmp
pusha
movs
ret
xor
dec
into
scas
and
rcl
into
push
add
jle
mov
push
sar
movs
mov
add
jo
shl
cwde
lods
mov
add
mov
mov
jmp
xchg
cmp
pop
cmp
sub
mov
in
or
shl
dec
or
je
cmp
jecxz
jl
add
push
test
addr16
test
and
test
add
push
mov
lods
inc
(bad)
fldcw
sbb
(bad)
or
sti
in
or
sub
inc
or
mov
mov
add
pop
out
cmp
add
loopne
hlt
enter
pop
inc
leave
push
repnz
mov
daa
xor
fs
push
ss
into
ins
mov
retf
ss
out
test
sbb
jbe
hlt
cmp
adc
ins
dec
cwde
inc
inc
push
xchg
cmp
inc
ins
je
xchg
jecxz
mov
jecxz
mov
inc
pop
mov
aad
pop
add
push
sbb
xor
push
xchg
xchg
mov
sub
vpshlb
(bad)
push
and
add
icebp
mov
dec
push
test
mov
bound
push
cs
xchg
push
cmp
push
push
dec
ror
mov
sub
push
push
int3
int3
sbb
dec
dec
push
xlat
and
mov
or
or
das
scas
pop
clc
sub
or
push
shr
inc
cld
or
or
mov
mov
and
push
(bad)
push
mov
mov
dec
js
punpckhbw
mov
push
sbb
cmp
sub
sbb
dec
jl
mov
call
pop
xor
adc
adc
ss
dec
push
je
icebp
jecxz
enter
and
enter
mov
es
sbb
in
sbb
sbb
sar
pop
ss
fadd
mov
jecxz
lea
or
push
cwde
ja
outs
pop
(bad)
and
or
mov
(bad)
and
or
aaa
add
sti
inc
sbb
jnp
and
sbb
addr16
test
push
pushf
es
hlt
dec
mov
xchg
mov
data16
fimul
inc
es
mov
xchg
lds
call
mov
stos
lea
into
mov
mov
push
cmp
jns
jecxz
xor
and
pop
mov
xor
mov
xlat
sbb
inc
pop
mov
sbb
int
test
outs
(bad)
repz
pop
jno
mov
enter
jge
jns
push
dec
adc
into
jecxz
cld
adc
adc
test
sbb
sub
push
into
xor
call
into
jecxz
jecxz
dec
loop
inc
adc
or
ja
xchg
stos
mov
in
mov
or
jae
or
(bad)
iret
jae
cmp
cld
pop
sahf
jae
push
add
cld
add
xchg
mov
add
adc
inc
call
cmps
mov
push
add
push
mov
inc
jecxz
sbb
les
push
or
sbb
pop
add
repnz
add
push
rcr
ins
mov
push
dec
pop
or
(bad)
fwait
mov
popf
sub
ret
sub
xchg
repnz
add
mov
mov
clc
push
imul
xor
das
fpatan
add
and
add
icebp
xchg
rol
pop
enter
add
fstp
sub
fsub
add
mov
mov
xchg
add
das
push
lods
iret
retf
push
pusha
jmp
push
xchg
and
pop
sub
retf
or
in
(bad)
scas
sbb
dec
ja
add
add
sub
fwait
les
mov
and
repz
rcr
(bad)
or
add
push
xor
push
pusha
mov
jg
ret
adc
enter
add
push
popa
sub
loopne
mov
sbb
push
or
into
xchg
cmps
mov
sbb
dec
xchg
loop
in
clc
mov
mov
mov
fs
cmps
and
cmp
push
push
xchg
out
pop
push
lods
mov
pop
fcomp
inc
push
or
cmp
retf
xchg
xchg
cdq
sub
push
stos
les
pop
or
call
jmp
adc
or
ret
cwde
pop
mov
(bad)
jbe
push
loope
loop
or
xchg
repz
sub
pop
or
add
in
sbb
push
cmp
daa
push
je
mov
in
(bad)
mov
call
outs
fdivr
aad
jmp
addr16
add
cwde
mov
push
and
xchg
push
inc
cdq
xor
add
push
jge
loop
jmp
push
inc
push
icebp
or
adc
mov
fild
push
mov
mov
(bad)
pop
retf
sti
out
retf
arpl
inc
dec
sbb
add
test
addr16
ja
inc
adc
cmp
lds
hlt
(bad)
jmp
xchg
mov
cmp
loope
mov
inc
sbb
and
or
pop
mov
mov
repz
out
xor
nop
movs
xchg
xor
inc
cwde
pusha
push
and
jecxz
dec
mov
nop
movs
pop
cmp
mov
push
push
cmc
add
lock
push
jg
sub
cmc
fimul
ja
jae
adc
aam
xor
jns
add
rcl
ja
xchg
pop
aad
ror
lods
mov
int
lds
ror
jge
inc
outs
fs
push
mov
cli
or
fprem
xchg
shl
addr16
xchg
fnstsw
inc
shl
sub
mov
lea
out
pop
fisub
jb
and
add
pusha
stos
lahf
fs
sbb
icebp
mov
and
push
mov
inc
stos
into
dec
lea
sbb
int3
inc
sbb
lahf
mov
mov
mov
movs
shl
xor
sbb
cmp
sub
mov
lea
adc
jp
sbb
push
xor
mov
test
xchg
sbb
sub
mov
test
jge
adc
push
xlat
sti
nop
jmp
and
or
lahf
test
add
mov
cmp
jl
jmp
cmp
in
dec
or
out
mov
repz
cwde
add
or
pop
hlt
test
fisub
lods
add
pop
retf
pop
hlt
mov
dec
and
mov
mov
xchg
adc
xor
ror
popf
imul
add
or
mov
cdq
(bad)
test
out
pop
pop
inc
test
xor
cmp
mov
push
out
or
push
xchg
add
into
(bad)
and
ss
lea
into
aad
sti
xor
test
push
xchg
xchg
sbb
dec
add
xor
mov
ficom
mov
sub
inc
or
xor
xor
add
mov
adc
loopne
add
test
js
inc
cmp
jb
pop
xor
faddp
dec
adc
test
inc
xor
les
pop
inc
jge
test
mov
lock
mov
cld
push
test
mov
mov
cld
xor
cwde
ror
or
add
test
es
retf
mov
xchg
in
push
lock
aas
(bad)
pop
mov
fcomp
mov
es
mov
inc
inc
rcl
aaa
not
pop
sti
add
push
popa
es
pop
mov
gs
sub
or
or
jmp
push
inc
jnp
bound
aam
dec
gs
mov
and
inc
std
mov
in
mov
push
fstp
mov
mov
popf
push
and
push
mov
cmp
and
cmp
or
pop
pop
div
mov
sub
inc
xor
mov
mov
xchg
dec
xor
mov
adc
mov
pop
(bad)
(bad)
test
mov
ror
xchg
mov
dec
jmp
add
and
in
push
mov
xchg
xor
and
int3
jb
push
inc
mov
cmp
add
mov
or
(bad)
je
ret
and
arpl
jge
add
mov
fdiv
jmp
les
out
inc
mov
sbb
and
xor
lock
jle
add
addr16
jbe
mov
mov
jmp
dec
cwde
mov
push
mov
xchg
adc
xor
imul
pop
inc
mov
test
shr
mov
and
mov
mov
jle
sub
dec
jbe
inc
sub
xor
adc
repz
mov
cmp
xor
sub
lock
or
mov
push
lods
ror
aas
or
push
adc
mov
test
mov
sub
mov
push
jbe
stc
enter
call
push
inc
mov
arpl
mov
lahf
enter
sbb
mov
je
jmp
push
iret
pop
addr16
mov
test
inc
pushf
mov
lock
or
jne
push
and
leave
je
aad
ret
icebp
xchg
call
mov
(bad)
jmp
pop
jne
inc
(bad)
les
mov
(bad)
call
mov
scas
cmps
and
jns
cld
(bad)
sub
lods
push
sbb
pop
out
enter
mov
xor
out
sub
mov
inc
lea
dec
add
sub
xchg
sub
ror
rcl
sbb
sbb
mov
sbb
sub
cmp
into
fsubr
enter
pop
sbb
nop
call
(bad)
shr
pop
gs
outs
or
lds
push
pop
sub
jae
stc
std
pop
and
cli
test
lods
sub
aaa
add
ret
inc
push
push
gs
inc
dec
lock
daa
ret
pop
mov
movs
or
pushf
mov
jnp
add
popa
test
pop
dec
sbb
sub
scas
enter
and
adc
pushf
in
and
inc
add
loopne
inc
push
push
or
cmps
test
bound
jmp
push
push
leave
add
sar
and
sar
adc
mov
(bad)
std
or
neg
stc
ftst
ins
add
sbb
jno
pop
and
jmp
push
aaa
cdq
xor
or
inc
jmp
sar
pop
mov
mov
or
in
and
add
dec
jbe
push
lds
pop
push
inc
push
mov
movs
clc
mov
add
mov
movs
push
cdq
push
push
fcom
aad
add
cdq
add
jae
jb
jmp
cmp
shl
call
scas
and
inc
js
mov
mov
inc
inc
out
xchg
or
test
and
mov
mov
js
adc
add
inc
add
pop
jno
inc
xor
fisub
add
add
add
and
pop
jno
sub
mov
push
push
jmp
push
mov
add
sub
imul
pop
sbb
add
sub
lods
sbb
mov
fsub
mov
call
push
arpl
dec
xchg
je
push
loope
test
adc
xchg
xchg
add
mov
ja
push
dec
xchg
or
xchg
shl
push
(bad)
lock
repz
js
mov
shl
or
cmp
push
ror
bound
jmp
cpuid
mov
imul
lahf
push
cmc
add
call
pop
into
loop
mov
push
jo
into
repnz
cmp
(bad)
xor
ds
mov
retf
and
inc
or
call
mov
xchg
add
lds
inc
mov
pop
push
fadd
or
inc
push
lods
inc
mov
mov
or
ret
xchg
fist
je
sub
fcomp
xor
test
add
mov
sub
add
adc
retf
push
pop
mov
sub
push
push
pop
rol
nop
push
push
jmp
push
push
and
push
fs
push
test
mov
jbe
adc
stos
adc
jg
or
out
mov
imul
fnstsw
and
cmp
es
rol
jne
push
ret
xchg
enter
push
(bad)
push
jbe
(bad)
addr16
ret
adc
aam
ja
push
inc
mov
mov
dec
dec
loopne
xor
sub
xor
xor
sub
mov
cwde
push
mov
shl
mov
pop
jae
mov
imul
push
jnp
push
xor
mov
repnz
in
push
(bad)
inc
mov
sbb
mov
clc
imul
test
aam
jne
push
shr
push
mov
jl
push
jle
sti
mov
cld
repz
(bad)
sbb
xor
aas
pop
cdq
pop
lock
in
mov
nop
aam
pop
mov
in
nop
mov
sbb
test
xchg
add
scas
repz
sbb
arpl
add
or
pop
repz
mov
lock
out
leave
mov
mov
jnp
mov
dec
cmp
adc
and
js
js
pop
test
rcl
loopne
inc
mov
hlt
rcr
stc
jo
shl
js
add
loop
test
sbb
pop
sbb
out
cli
pop
pop
rcl
aam
jae
out
lea
add
ficomp
mov
adc
fdivr
jns
sar
outs
cmp
dec
cmp
jb
(bad)
push
add
xchg
mov
sbb
inc
pop
jge
add
or
inc
push
hlt
das
dec
(bad)
jb
sub
enter
push
sub
dec
lea
adc
mov
ss
sub
fcomp
retf
sbb
jb
cmp
add
mov
mov
push
mov
jae
les
jns
mov
pop
mov
aad
(bad)
(bad)
xor
xor
xlat
sbb
xchg
ds
sbb
inc
xor
add
adc
or
push
pop
scas
mov
sbb
call
ja
xor
sbb
pushf
pop
sbb
retf
push
movs
mov
aas
xlat
ss
in
sahf
mov
test
lahf
jg
rol
cdq
es
int3
in
(bad)
xchg
dec
scas
in
inc
jne
cmp
lods
and
mov
aam
test
neg
scas
inc
(bad)
push
dec
jo
xchg
or
mov
sti
cmp
stmxcsr
xor
adc
mov
loope
mov
gs
sbb
and
push
dec
mov
sbb
cmp
push
es
adc
dec
jmp
test
dec
sbb
je
inc
mov
push
pop
inc
cmp
cmp
je
loopne
pop
sub
push
pop
call
je
xchg
call
cmp
cmp
mov
jp
es
xor
jne
xchg
cmp
add
inc
add
push
dec
pop
or
lahf
push
mov
je
mov
sub
cdq
mov
xchg
and
add
int
fiadd
push
jns
cmp
xchg
push
mov
fstp
sub
test
push
add
adc
mov
add
adc
js
daa
mov
inc
jl
ror
push
push
push
fld
and
ins
fsub
(bad)
shl
pop
sbb
jle
test
or
add
loopne
or
xchg
xor
popa
cmp
cdq
mov
push
add
pop
test
or
sub
jmp
cmps
xor
xchg
jmp
mov
pop
movs
pusha
add
cmps
adc
push
xlat
cmp
popf
mov
lods
mov
or
push
dec
cmp
xchg
add
call
pop
add
add
inc
and
mov
or
mov
sub
jmp
xor
mov
sub
sti
jno
cmp
mov
xchg
or
or
test
pop
fdiv
push
je
mov
jmp
mov
jne
push
sub
add
or
fwait
add
lea
push
add
aam
ret
cmp
mov
push
push
pop
inc
push
rcl
and
cmc
mov
and
scas
shl
popf
lods
repz
fwait
cmps
and
ds
mov
xlat
sbb
push
sub
fcom
pop
out
call
and
adc
dec
cwde
adc
out
mov
jmp
pop
mov
mov
je
xor
inc
pop
xchg
cmp
cwde
repnz
(bad)
mov
(bad)
mov
les
cmp
std
push
xchg
cmc
and
or
lods
in
repnz
add
jmp
pop
or
cmp
je
test
mov
push
sbb
sub
cmps
sbb
cmp
and
ficom
xchg
fiadd
push
push
dec
pushf
mul
cs
xchg
jmp
sbb
sbb
(bad)
mov
push
jl
inc
xchg
mov
jmp
(bad)
cld
inc
xor
(bad)
cmp
jp
mov
loope
movs
and
dec
aam
arpl
push
rol
jb
jmp
dec
icebp
les
mov
push
addr16
jne
push
or
and
repz
rcl
ins
in
cs
ror
rcl
xchg
xor
or
test
xor
mov
jg
push
jne
jp
inc
cld
and
dec
add
inc
jle
stos
push
sbb
std
test
in
loopne
add
inc
sub
fimul
xor
mov
sbb
jl
sub
or
add
sbb
push
pop
xor
push
push
or
xchg
push
cwde
mov
pusha
pop
mov
mov
cmp
(bad)
ins
add
xchg
dec
ja
mov
test
add
idiv
jne
mov
inc
sub
fsub
add
rol
pop
test
push
mov
out
push
ret
or
call
inc
xchg
sub
push
jmp
push
test
(bad)
call
gs
mov
add
rol
lods
mov
inc
leave
xor
in
xor
or
loop
or
and
xchg
mov
ret
outs
je
xor
test
outs
jmp
lahf
jns
sbb
es
mov
push
and
nop
iret
sar
or
cli
aas
nop
nop
mov
lods
lahf
adc
pop
movs
pusha
prefetcht1
xor
nop
jo
jmp
adc
jno
jae
test
push
in
lock
daa
in
cmp
and
es
test
sbb
cmp
adc
add
xchg
mov
inc
out
push
jo
lds
lea
pop
mov
movs
jae
mov
test
sbb
xor
sahf
sub
push
into
lock
lds
cld
lods
int3
add
mov
mov
sub
jo
(bad)
push
adc
cmp
(bad)
stos
in
push
ins
mov
inc
cld
push
push
mov
mov
cmps
and
mov
mov
inc
or
sbb
ins
mov
mov
stos
sub
xor
and
scas
push
mov
fisub
pop
mov
add
pop
out
je
outs
push
test
in
dec
add
pop
inc
mov
cdq
loopne
jmp
outs
cmps
mov
cmps
fld
sub
movs
sbb
dec
xchg
gs
dec
(bad)
aaa
mov
cmp
lods
add
iret
cwde
xchg
push
stos
push
fild
je
sub
cmp
cmp
test
mov
push
inc
pop
jl
jo
add
sar
test
add
test
call
sbb
mov
xchg
push
jb
in
imul
sub
in
add
mov
and
outs
sbb
push
xor
int
push
and
stos
ror
mov
mov
in
in
nop
xchg
cwde
pushf
sub
repnz
mov
adc
jo
inc
ret
jle
jle
je
sbb
ds
push
and
cld
jb
xchg
or
daa
add
stos
sub
xor
inc
xchg
out
push
sub
xor
jecxz
stos
fwait
jmp
scas
jge
jecxz
dec
(bad)
movs
mov
aas
pusha
and
adc
sbb
out
lds
or
cld
sar
in
or
xor
dec
dec
push
xor
adc
inc
fsub
clc
add
aas
cmp
dec
je
or
mov
add
push
aam
jmp
jl
sub
lahf
add
mov
mov
xchg
cmps
adc
test
into
adc
stos
jno
in
mov
int3
ficom
or
pop
mov
lods
mov
inc
test
add
inc
(bad)
nop
aas
adc
push
push
ret
repz
sbb
sbb
gs
stc
pop
cmp
(bad)
xlat
in
sbb
clc
call
test
fs
inc
aam
in
loopne
mov
push
pop
xlat
jp
xchg
dec
das
loope
or
pop
lea
mov
push
das
xchg
sub
mov
ss
inc
inc
shl
repnz
mov
mov
addr16
push
xor
add
shl
push
add
retf
or
or
ins
pop
sub
mov
test
mov
jns
call
loope
aas
mov
call
call
rol
cmp
lds
mov
sahf
sti
call
push
in
out
mov
mov
test
pop
or
sub
mov
cmp
rcl
and
shr
or
ret
or
lock
icebp
js
mov
add
das
mov
and
jmp
add
call
xchg
dec
test
jno
pop
mov
mov
cld
inc
cmp
xchg
and
enter
and
sub
dec
add
mov
mov
std
jecxz
hlt
je
mov
loop
inc
cmp
or
fldcw
popf
or
sbb
dec
push
xor
sar
push
mov
stos
imul
xchg
sub
hlt
mov
mov
les
pop
and
shl
push
or
out
call
ss
mov
pop
push
jl
jmp
(bad)
test
add
rol
js
repz
adc
je
jecxz
mov
mov
and
cmps
repnz
mov
sub
loopne
cmc
adc
add
cmp
mov
jle
push
lea
and
fstp
or
jne
push
loope
fisttp
inc
push
and
sbb
mov
stc
mov
cmp
jl
pop
push
push
mov
add
add
clc
and
and
sub
or
add
or
mov
jae
push
dec
adc
mov
push
mov
rcl
cli
add
jmp
cmp
jae
sbb
cmp
inc
inc
cld
dec
mov
add
add
jb
pop
sub
sar
xor
sub
adc
push
and
mov
mov
mov
sub
push
and
xchg
ret
mov
or
add
push
add
movs
push
popf
jne
fs
push
jnp
(bad)
pop
addr16
and
imul
popf
or
fcmove
call
or
enter
and
mov
je
push
mov
or
jne
mov
xor
retf
push
inc
push
or
ror
enter
fmul
test
and
jmp
jmp
mov
jb
ret
fild
popa
shr
pop
loop
jge
push
idiv
push
xchg
xchg
cmp
imul
pushf
and
nop
adc
fld
jno
add
mov
ss
and
inc
adc
jne
call
cmp
mov
push
push
push
cmp
push
fsubr
push
shl
ss
add
add
ror
inc
xor
(bad)
jp
nop
or
out
fnstenv
sub
jno
and
inc
popf
pop
xor
or
add
test
shl
shl
sbb
dec
rcr
test
adc
cmp
jbe
add
fs
mov
in
xlat
inc
mov
mov
(bad)
or
mov
repz
rcl
stos
dec
test
push
inc
or
ret
gs
and
add
data16
xor
pusha
sahf
stos
or
lahf
mov
adc
push
jge
test
xchg
mov
inc
ret
mov
push
xchg
retf
add
adc
push
repz
add
mov
cld
cdq
clc
inc
cmp
dec
es
in
sahf
pop
pop
sti
mov
mov
sbb
sub
add
repnz
fisub
push
ss
inc
push
inc
bound
nop
loop
cs
push
cmps
and
push
mov
fdivr
idiv
mov
and
adc
xchg
sub
jmp
adc
add
and
xchg
ror
or
sub
and
or
push
stos
and
popw
test
dec
or
nop
push
aaa
and
or
imul
mov
sub
mov
pushf
mov
jmp
lea
jp
xchg
jmp
or
add
jmp
retf
xchg
adc
push
mov
pop
push
xor
cmp
inc
or
and
rcl
pushf
dec
sbb
sti
push
loop
in
popa
mov
push
arpl
jo
add
or
loopne
cld
xchg
mov
retf
jmp
loop
xor
test
push
inc
add
sbb
dec
and
movs
in
mov
mov
clc
adc
jmp
pop
xor
in
fsub
xor
add
in
mov
lods
add
into
add
inc
xor
add
(bad)
dec
and
and
cwde
sbb
cmp
je
dec
rcr
outs
push
push
imul
and
test
add
add
mov
dec
or
lods
sbb
mov
icebp
jb
jle
mov
test
sub
push
xchg
pop
sbb
dec
pop
clc
pop
fxtract
adc
frstor
or
test
cmp
or
in
or
stc
pop
ret
mov
xlat
icebp
or
or
popa
sub
adc
push
inc
mov
ret
jnp
inc
xchg
pop
in
lea
mov
je
stc
xchg
push
mov
je
in
cld
sub
test
xlat
mov
mov
xchg
jno
or
cmp
xlat
mov
or
pusha
sub
push
ds
jb
mov
inc
fcmovnb
(bad)
in
ja
shl
pop
movs
mov
hlt
test
call
push
in
jne
stc
or
fadd
cs
ror
pop
mov
rol
xor
push
fs
movs
loop
jae
mov
cld
inc
jo
sbb
pop
dec
or
into
cmp
or
xchg
cmps
xor
in
movs
scas
movups
in
out
mov
mov
les
enter
cwde
and
push
retf
inc
pop
popf
mov
arpl
xchg
push
mov
and
call
add
xchg
push
push
adc
mov
mov
sub
jl
mov
sub
push
xor
push
cdq
sbb
(bad)
cli
pop
out
ins
inc
lods
retf
adc
dec
sbb
dec
aaa
int
push
leave
adc
dec
lods
xor
mov
enter
or
(bad)
mov
mov
test
clc
mov
mov
push
in
mov
sub
mov
xor
push
sub
and
sti
sub
or
jmp
push
sbb
(bad)
out
mov
inc
dec
das
movs
dec
das
(bad)
frstor
ins
vcmppd
inc
das
add
or
adc
setb
sbb
les
scas
push
xchg
aam
lea
jl
nop
loopne
sub
stos
adc
inc
mov
jae
dec
xor
dec
mov
xchg
int3
inc
mov
int3
int3
add
test
cmp
jns
loope
mov
adc
push
cmp
mov
in
push
jb
mov
cmc
les
imul
inc
jnp
dec
nop
dec
fcomp
push
mov
pop
mov
mov
pushf
cmp
icebp
dec
adc
adc
int3
pusha
add
sar
js
mov
leave
push
arpl
cmps
sbb
sbb
pop
(bad)
lds
pusha
mov
add
retf
cmps
xchg
loopne
or
add
mov
pop
push
enter
jecxz
stc
shl
or
xchg
ficomp
push
or
sub
arpl
push
dec
pop
mov
adc
sbb
jb
and
add
pusha
inc
jmp
push
jns
push
cmp
push
xchg
popf
or
mov
xchg
xor
push
and
push
rol
retf
add
inc
add
mov
rol
add
popa
iret
call
sbb
xor
add
in
into
xchg
or
push
mov
cmp
ja
or
loop
mov
push
enter
or
imul
xlat
aaa
push
out
in
in
mov
or
and
push
mov
outs
in
inc
mov
mov
inc
xlat
sbb
jle
xor
sub
push
mov
sbb
adc
dec
sbb
mov
mov
or
data16
and
mov
or
int
jo
mov
pop
movs
mov
jno
pusha
dec
adc
pop
cli
outs
ror
push
dec
cmp
push
jmp
stos
aad
or
pop
lds
mov
push
sub
push
mov
cmp
aas
into
int3
add
in
je
mov
xchg
movs
ds
push
or
mov
push
adc
mov
loope
into
into
js
push
gs
nop
out
push
pop
icebp
fdiv
adc
ficomp
fwait
push
jns
mov
cdq
pop
test
sbb
xor
dec
mov
add
push
sbb
leave
pop
ss
int
movs
sbb
mov
cmp
push
movs
or
cmps
(bad)
dec
sbb
in
arpl
adc
and
popa
push
(bad)
push
push
shl
test
mov
mov
repnz
out
or
stos
sbb
pushf
add
addr16
add
movs
dec
sub
movs
inc
imul
add
push
push
inc
or
sbb
mov
add
fdiv
inc
adc
fwait
and
(bad)
xor
or
add
cwde
cmp
fld
in
xchg
adc
mov
cmp
ja
cmp
mov
gs
and
mov
jecxz
mov
movs
push
pop
cmps
std
mov
push
fs
je
mov
pop
dec
or
xor
adc
push
aaa
dec
or
cmp
and
repnz
push
fcomp
sub
adc
jg
stc
sub
lea
inc
mov
pop
add
dec
jne
pop
inc
dec
inc
adc
dec
dec
or
and
ror
add
sub
push
mov
mov
fild
sbb
jmp
cld
into
push
sbb
mov
movs
mov
jmp
test
out
xor
push
cmp
mov
fisub
push
aad
mov
ja
cli
or
lahf
add
retf
(bad)
pushf
idiv
push
mov
test
hlt
add
mov
cmps
add
sub
and
sbb
test
dec
pop
pop
mov
mov
pop
enter
sbb
add
pop
daa
stos
test
jecxz
in
push
push
shl
inc
xchg
pushf
sahf
and
mov
cmp
or
mov
shr
inc
dec
mov
mov
add
pop
movs
inc
push
mov
mov
cld
or
push
fstp
in
retf
movs
(bad)
int3
and
and
cmp
or
inc
push
xchg
cli
mov
rcl
sar
mov
stos
push
mov
push
adc
push
xchg
ins
test
xor
add
sbb
cmp
popf
cmps
jb
shl
aas
out
push
mov
add
add
cmp
xchg
movs
jmp
addr16
test
das
push
xchg
out
xlat
add
add
dec
daa
mov
je
adc
inc
leave
or
inc
mov
jmp
push
inc
cmp
push
xchg
fidiv
pop
sbb
cmp
sub
inc
fsubr
push
or
jo
mov
scas
inc
push
push
cwde
out
sbb
loopne
or
test
repnz
jbe
out
and
and
mov
(bad)
xlat
retf
cmps
adc
sub
call
leave
push
cwde
jae
jmp
adc
dec
xchg
adc
adc
add
jl
dec
fwait
xlat
dec
and
into
lods
push
cmp
mov
push
movs
mov
adc
adc
cld
test
out
lea
or
test
imul
ror
mov
aas
ins
popa
adc
sub
jnp
or
mov
add
test
test
cmp
cmp
xor
pop
add
xor
sub
mov
sbb
inc
inc
or
js
add
inc
xchg
shl
pop
push
int
mov
inc
mov
jle
push
push
mov
pop
je
push
inc
inc
jae
xor
jmp
aam
add
aas
xchg
and
fwait
mov
test
xor
mov
push
(bad)
sbb
stos
out
(bad)
or
fisttp
mov
mov
push
test
cli
pushf
adc
fistp
add
xchg
std
cmp
or
lock
(bad)
sbb
mov
or
push
ins
mov
add
mov
push
cli
call
int3
das
lods
inc
mov
or
pop
adc
push
mov
and
call
movs
sbb
(bad)
xchg
cdq
push
jae
aam
mov
adc
loope
shl
out
mov
loopne
adc
inc
das
or
scas
inc
push
scas
xchg
in
pop
movs
stos
dec
aad
test
fist
add
sbb
fistp
and
push
rcl
push
dec
mov
stos
popa
inc
lock
pop
out
mov
xchg
fild
xchg
push
gs
add
push
inc
scas
popa
mov
fidiv
push
or
data16
xchg
mov
mov
push
push
and
lsl
sbb
call
test
sbb
or
inc
in
popf
xchg
not
(bad)
sbb
mov
inc
mov
mov
and
shl
into
ds
sbb
call
and
add
inc
push
imul
add
xor
in
stc
mov
inc
cmp
in
(bad)
inc
rcpps
and
mov
call
into
fs
je
dec
stos
in
push
pop
mov
leave
push
paddq
xor
aam
push
inc
aam
jb
cld
sub
xchg
ror
setg
jae
adc
mov
jp
inc
pop
mov
mov
arpl
xor
push
repnz
xchg
xor
adc
cwde
adc
mov
cmps
jecxz
xor
scas
pop
push
mov
push
cmp
fcom
add
stos
imul
push
mov
or
(bad)
into
xchg
or
ja
in
push
dec
push
mov
mov
call
inc
jmp
adc
rol
dec
or
test
jecxz
push
dec
jno
xchg
jge
xor
mov
mov
or
xchg
ds
out
jmp
adc
xor
popa
pop
mov
push
pop
or
dec
(bad)
cmps
ror
fcomp
cli
push
inc
cmp
into
in
leave
jle
adc
push
push
(bad)
jns
enter
mov
or
mov
inc
rep
retf
cmp
mov
out
rol
cwde
addr16
out
mov
push
rcl
dec
rol
mov
es
pop
pop
ds
nop/reserved
xor
adc
xchg
push
or
jp
pop
cmp
fwait
mov
iret
xchg
pop
das
pop
iret
aam
iret
jnp
cmc
xor
pop
or
ret
jno
or
in
xchg
adc
fs
adc
xor
pop
iret
adc
or
add
sbb
repnz
cmc
mov
or
xchg
jp
sbb
dec
les
or
aam
popf
fdiv
inc
xchg
push
sbb
daa
and
out
and
shl
xchg
inc
push
mov
jmp
or
add
adc
push
pop
mov
or
push
push
jns
pop
cmp
imul
jb
in
lea
push
add
adc
jmp
sbb
cld
(bad)
repz
cmp
in
mov
clc
pop
mov
adc
out
retf
xchg
pop
in
movs
mov
mov
popf
xchg
push
pop
mov
mov
sbb
out
in
inc
jecxz
push
in
das
mov
or
pop
push
add
mov
or
jge
movs
mov
mov
xlat
push
in
cmps
add
jg
inc
retf
add
imul
push
test
xchg
push
push
push
xchg
ret
add
xor
push
stos
sbb
sub
cmp
clc
push
xchg
inc
push
cmc
xchg
mov
gs
sub
sbb
cmp
xor
(bad)
jp
cmps
rcl
mov
push
jp
add
bound
adc
pusha
sub
push
jbe
dec
in
mov
fdivr
push
or
mov
mov
push
mov
mov
inc
retf
sub
and
stos
popa
jge
push
inc
jmp
adc
les
and
adc
lods
pop
popa
and
jnp
or
rcl
fs
mov
mov
pop
lock
pop
push
inc
stos
ins
inc
mov
inc
sti
xor
rcl
jnp
leave
cdq
movs
mov
sti
add
push
adc
or
lea
jle
(bad)
pop
cmp
mov
push
inc
ficomp
mov
push
jnp
mov
lea
stos
adc
inc
(bad)
(bad)
movs
clc
jnp
mov
pop
inc
mov
xchg
and
mov
rol
adc
push
aam
pop
sub
jne
mov
int
push
cwde
cs
and
sub
or
add
sub
inc
mov
loop
xor
movs
cmp
mov
jle
adc
cmp
scas
adc
cmp
(bad)
adc
push
inc
mov
jmp
aad
dec
les
pop
mov
sahf
xlat
pop
int
dec
mov
pushf
add
mov
mov
mov
pop
ret
into
dec
fwait
sbb
sbb
in
mov
lds
xchg
push
push
cmc
cmp
and
xchg
add
mov
cld
sub
sub
lea
pminub
scas
jae
popf
fs
mov
scas
mov
cdq
xor
inc
adc
hlt
adc
mov
cmp
sar
pop
(bad)
mov
test
jbe
(bad)
adc
js
(bad)
das
mov
mov
jnp
je
dec
out
xlat
and
xchg
pop
cmps
adc
sub
xor
add
mov
fcomi
jne
push
test
or
or
nop
sti
inc
xor
add
mov
stc
into
inc
sub
add
sub
movs
aam
rep
dec
out
test
mov
in
push
(bad)
sbb
mov
mov
sahf
xor
sti
xor
adc
hlt
cmp
or
js
mov
test
es
std
jne
xchg
pop
cdq
add
aam
loope
mov
jne
inc
mov
pop
add
loope
out
mov
mov
and
call
ja
addr16
lahf
hlt
int3
and
aas
mov
sub
jle
dec
xchg
sbb
add
es
dec
mov
stos
jmp
xchg
das
jae
push
adc
adc
lahf
push
jno
sub
sub
push
inc
test
out
jg
adc
pop
mov
jge
add
cmp
rcr
pop
in
retf
or
mov
mov
push
mov
push
movs
les
and
je
inc
ret
sub
nop
sub
movs
lds
(bad)
xor
into
inc
pop
test
xchg
mov
xor
lahf
adc
push
cmp
xor
test
adc
pop
cmp
fadd
add
push
mov
in
test
into
ret
mov
mov
adc
sbb
je
push
rcl
push
xchg
ins
repz
dec
mov
jge
mov
xor
scas
push
mov
mov
xchg
movs
mov
mov
cmp
and
(bad)
ret
lods
arpl
mov
or
cld
mov
loope
ins
std
call
and
xor
nop
pop
inc
stc
loop
jmp
(bad)
ret
lea
cmp
ret
out
mov
mov
icebp
je
inc
iret
pop
xchg
push
xchg
mov
inc
cmps
xor
xchg
dec
int3
sbb
pushf
mov
adc
repnz
(bad)
out
and
mov
push
shl
test
dec
int3
mov
adc
repz
fdiv
cmps
repz
pop
and
dec
sar
and
pop
in
jge
jbe
inc
test
push
mov
clc
hlt
xor
test
sbb
leave
and
dec
fimul
sub
push
shl
and
adc
mov
lahf
stc
add
scas
pusha
mov
inc
add
adc
inc
mov
push
and
adc
int
add
sbb
sbb
stos
sbb
jmp
add
pop
pop
xchg
stos
aad
test
cmp
ja
test
popf
inc
add
mov
ds
jbe
jae
xor
in
jecxz
bound
imul
push
adc
adc
data16
mov
sbb
mov
out
sbb
(bad)
sbb
pop
cmps
mov
xchg
jmp
mov
jmp
(bad)
out
sub
adc
mov
jmp
mov
inc
imul
outs
mov
(bad)
push
or
mov
jg
fiadd
out
jae
sti
jb
cmps
not
loop
(bad)
jmp
push
adc
es
int3
aaa
xor
dec
(bad)
sub
sub
dec
icebp
repz
push
inc
and
inc
sub
pop
cmp
sahf
add
and
mov
ins
jb
mov
jmp
cli
and
cdq
and
movs
sub
jne
jo
(bad)
je
or
mov
popf
pusha
xor
cld
popf
and
mov
je
into
and
sub
add
pushf
jns
pop
mov
push
je
imul
xchg
pop
sub
pop
mov
jmp
test
cmp
stos
jmp
daa
mov
sub
and
loope
or
out
lock
addr16
lahf
push
push
push
dec
std
inc
push
std
push
test
loope
or
mov
(bad)
mov
add
xchg
mov
pop
idiv
enter
push
mov
bnd
xchg
popf
inc
movs
ret
mov
jbe
jae
xor
mov
jbe
jae
mov
mov
jnp
mov
mov
jmp
sub
rcr
shr
adc
pusha
pop
xor
mov
pop
lds
aaa
test
and
jmp
fwait
outs
or
(bad)
adc
in
or
inc
or
push
xlat
ficom
xchg
jg
mov
pop
and
fistp
aam
ins
out
inc
mov
adc
add
jmp
lods
dec
and
push
into
add
nop
jle
adc
in
mul
mov
xchg
pop
retf
inc
hlt
(bad)
rol
pusha
cmp
out
jmp
cmp
push
mov
mov
inc
sbb
fcmove
fdivr
mov
xlat
push
dec
retf
fisttp
xchg
add
lea
mov
and
std
or
mov
add
pop
fs
ins
jmp
outs
sub
rol
cmp
je
sbb
ja
push
cdq
inc
popa
leave
sti
mov
adc
sbb
pop
add
pop
cmp
and
and
inc
and
mov
mov
adc
mov
cdq
adc
inc
add
sub
mov
mov
ins
or
mov
sub
daa
xor
and
(bad)
test
loope
bnd
rcl
ja
movzx
push
les
in
stos
pop
icebp
inc
sbb
int3
or
push
and
add
mov
aad
adc
inc
or
outs
cdq
retfw
jbe
add
shr
sub
cmp
jbe
test
pop
or
js
adc
fld
lods
adc
pop
adc
ret
mov
mov
adc
push
cmp
rcr
inc
xchg
xor
mov
xchg
adc
test
dec
jno
arpl
cmp
bound
cmp
cmps
dec
aaa
dec
jne
fimul
pop
sub
int
or
xor
and
xchg
lods
sbb
aad
sbb
jo
xchg
mov
add
pop
cmp
and
lds
push
daa
sbb
adc
shl
dec
jnp
call
xchg
pop
push
inc
sbb
sub
sub
dec
xor
dec
add
add
loope
push
cmp
push
fwait
addr16
int
xchg
popa
push
sub
xor
ret
mov
mov
and
sub
push
push
pusha
sub
ret
cmp
inc
jbe
and
xchg
ins
push
xchg
xor
fucomi
fidivr
int
lock
pop
cmc
cmp
mov
lahf
xor
movs
push
sbb
daa
add
push
push
adc
xchg
sbb
mov
push
mov
adc
or
ja
pop
(bad)
mov
mov
or
movs
xor
test
nop
mov
cmp
movs
cmp
mov
mov
loopne
mov
lea
push
shl
jge
cli
or
dec
dec
inc
aas
sub
mov
xchg
lds
push
pop
movs
lock
add
push
lea
cmc
add
pop
clc
cmp
jno
or
mov
sbb
jbe
add
mov
or
sub
add
mov
out
mov
shl
cmp
xor
fcom
test
mov
add
shl
or
hlt
inc
jmp
jne
test
cmp
xchg
pop
and
inc
mov
dec
xchg
cwde
or
shl
inc
(bad)
test
lock
or
not
clc
sub
cmp
push
sbb
push
push
loopne
jg
sahf
fmul
int3
dec
and
xchg
test
pop
rcr
stos
push
es
dec
call
test
mov
inc
adc
push
push
enter
pop
rol
rcl
and
add
cmp
int
dec
clc
adc
sbb
call
loopne
and
xor
fsub
add
lock
in
hlt
cmps
mov
add
inc
push
sbb
inc
jb
adc
xchg
adc
xor
fisub
ja
or
lea
lock
add
lock
and
aad
jmpw
mov
xor
inc
aad
dec
outs
loopne
add
dec
and
add
sub
sar
sub
mov
rcr
push
inc
ds
pop
cmp
(bad)
and
pop
jg
popf
pop
pusha
or
movs
cmp
xor
dec
dec
or
aam
enter
jae
adc
push
setb
dec
and
aas
fadd
popf
clc
jmp
sub
add
sbb
loopne
mov
add
sub
add
call
cli
test
mov
loopne
inc
shl
daa
mov
outs
in
shl
push
push
(bad)
shl
fild
call
add
jb
push
ja
int3
jb
add
mov
call
sahf
add
je
adc
dec
and
ss
into
lock
sub
out
dec
and
cwde
cdq
icebp
cmp
mov
pop
xor
jne
(bad)
fmul
push
ficom
add
inc
sbb
mov
mov
add
pop
xor
daa
or
dec
sbb
jne
fdiv
dec
test
push
(bad)
and
mov
sbb
mov
xor
sub
or
sub
mov
adc
sub
xor
je
dec
js
or
mov
dec
pop
or
dec
scas
sti
mov
mov
sub
iret
repz
cld
or
(bad)
cmp
jmp
push
mov
mov
push
xor
inc
adc
cmp
sub
dec
gs
pop
mov
mov
adc
adc
rcr
add
inc
pop
cwde
and
fstp
or
xor
push
jne
inc
iret
neg
cmp
sub
push
push
mov
xor
jecxz
out
cmp
daa
inc
pop
popf
pop
cld
je
fcomp
repz
pop
push
mov
(bad)
xchg
mov
fsubrp
mov
sbb
bound
pushf
sbb
push
leave
jns
fmul
push
adc
test
push
adc
add
or
inc
add
cmps
cmp
dec
inc
lock
bound
sbb
int3
js
xor
add
enter
ror
sub
jo
pop
sub
xor
mov
cmps
add
adc
adc
into
lea
call
inc
inc
or
adc
out
or
xor
ret
ror
adc
leave
jmp
test
or
add
cs
add
inc
push
loope
dec
add
sub
inc
mov
je
(bad)
pop
mov
dec
imul
sbb
into
ficomp
test
lods
jmp
test
xor
xchg
out
es
jb
outs
push
sub
fadd
mov
retf
into
mov
push
jp
mov
imul
xor
fisub
loopne
pop
sbb
ins
or
pop
ss
mov
sbb
sbb
push
add
hlt
mov
cmp
jae
xchg
jno
pop
mov
jb
enter
js
jbe
sub
or
outs
hlt
mov
mov
inc
inc
xor
jne
sub
inc
sbb
push
mov
dec
ror
icebp
les
jmp
popa
(bad)
int
mov
mov
mov
inc
data16
jno
cmp
gs
ret
sbb
pop
outs
sub
dec
sbb
shr
data16
dec
stos
ret
jl
ds
fadd
jecxz
mov
jo
mov
mov
cmp
dec
inc
(bad)
(bad)
xlat
pusha
adc
rcr
inc
xor
inc
sbb
dec
xlat
enter
push
sbb
call
sbb
mov
sub
dec
jo
sub
add
xor
push
and
gs
ds
cmp
in
into
shr
mov
enter
dec
enter
retf
add
xor
data16
cli
aas
(bad)
fdivr
lock
rcr
adc
mov
dec
not
mov
test
cmp
mov
add
shr
push
sbb
fsub
cwde
daa
add
or
add
dec
fiadd
lock
sub
dec
adc
test
rol
add
xchg
ror
pop
je
xor
xor
push
mov
and
mov
ror
add
rol
push
add
rol
mov
jmp
push
rcr
pop
push
jp
or
xchg
or
and
jo
icebp
xor
rol
pusha
push
jnp
cdq
xor
fs
xchg
or
pop
sub
rcr
jg
sub
inc
or
inc
mov
(bad)
nop
sub
push
daa
jae
pop
push
mov
adc
sub
xchg
inc
daa
jb
ret
jae
imul
add
sub
sub
add
pop
add
(bad)
jle
jle
add
add
jle
jle
push
pop
or
jle
or
or
je
jle
push
psrad
inc
test
jne
je
pop
xor
xlat
lock
sbb
dec
mov
mov
mov
mov
mov
div
jns
mov
mov
ja
cmps
shl
or
push
jle
imul
pop
call
sbb
xor
retf
push
add
or
ret
jno
add
xchg
and
mov
push
mov
into
sub
adc
and
pop
adc
movs
cmp
sbb
or
sub
je
pop
mov
loop
or
inc
lahf
dec
scas
add
loope
data16
cdq
(bad)
pop
add
nop
(bad)
out
adc
cmps
arpl
test
je
(bad)
mov
cmp
jne
or
test
lock
xor
sbb
jne
and
jmp
xchg
fadd
loopne
push
jmp
mov
aaa
gs
or
inc
or
nop
xchg
xchg
or
cmp
and
push
adc
xor
cmp
fsubrp
pusha
xor
dec
test
cmp
bound
mov
pop
jmp
or
(bad)
dec
push
lds
push
mov
je
add
shr
push
enter
push
jne
xor
mov
mov
icebp
test
adc
xor
mov
add
jb
add
mov
or
outs
xor
xlat
and
add
push
pop
push
push
push
cwde
xor
inc
(bad)
push
and
add
fs
jo
mov
push
mov
push
cmp
add
js
xchg
sub
mov
inc
push
inc
call
and
add
les
movs
(bad)
dec
mov
outs
push
sbb
mov
add
adc
xor
adc
or
adc
lods
iret
and
add
inc
cmp
je
cmp
xchg
mov
cdq
inc
xchg
retf
(bad)
xor
mov
aas
cmp
rcr
adc
push
push
or
pop
outs
cli
test
test
and
add
jne
push
push
rcr
xchg
das
cwde
lods
push
jmp
fwait
pop
test
cmp
test
sti
cld
xchg
or
sub
jne
mov
js
inc
adc
sub
push
add
dec
and
jmp
sbb
jmp
sub
adc
cmp
jbe
cmp
add
test
cmps
jecxz
(bad)
(bad)
sub
enter
mov
adc
pop
dec
inc
jmp
push
leave
pop
loop
add
loopne
(bad)
pop
add
push
mov
rol
or
cld
call
pop
je
enter
or
add
pop
or
inc
fs
sar
in
ret
imul
movs
xchg
push
pop
adc
add
mov
adc
lahf
pop
retf
ror
push
test
pusha
jnp
push
mov
mov
inc
sub
inc
cmp
ja
sub
scas
mov
add
test
je
push
add
push
cmp
jl
jle
mov
adc
xor
and
lock
or
inc
jg
jbe
lea
jne
push
push
jbe
and
outs
xchg
push
fild
fsub
sbb
enter
and
sub
push
sub
leave
or
push
or
fnsetpm(287
and
add
loop
dec
hlt
mov
cmp
aas
mov
push
clc
bound
bound
mov
mov
mov
sar
mov
jbe
push
add
lea
jmp
or
add
cmp
cmp
jne
jecxz
and
add
add
jge
fadd
mov
xor
dec
out
xor
jno
mov
push
bound
pop
dec
aad
hlt
push
icebp
add
out
mov
add
lock
pop
les
loopne
or
shr
inc
mov
ret
or
sub
loop
add
imul
push
cmp
mov
sti
call
adc
inc
sub
adc
call
scas
adc
adc
jo
cli
je
push
mov
add
push
dec
add
shl
cld
cdq
into
jecxz
movs
dec
mov
mov
xor
lahf
mov
ret
cmp
jne
test
out
inc
mov
rcl
mov
rcl
scas
rcl
scas
jnp
cmp
fdivr
xor
adc
enter
add
cmp
jne
jae
mov
add
sbb
push
push
add
mov
sti
je
nop
or
sub
add
or
adc
sbb
or
pop
int3
inc
bound
fidiv
push
icebp
scas
outs
mov
and
lods
stc
or
pop
loope
sbb
jne
pop
mov
push
cmp
xchg
or
out
jne
and
popf
mov
pop
rol
push
loopne
sub
icebp
jae
mov
push
movs
dec
sub
and
adc
sub
(bad)
stos
pop
push
cmp
and
pop
adc
lea
rep
push
mov
int
cld
pop
mov
fcomp
call
add
retf
push
cmp
xor
mov
inc
js
sub
push
test
aaa
retf
ins
shl
and
or
bound
or
lods
inc
cmp
or
cdq
nop
pushf
jmp
adc
inc
add
repz
rcr
push
dec
fadd
into
adc
dec
adc
sub
inc
(bad)
and
push
das
or
js
ins
test
jae
add
test
pop
adc
add
inc
mov
cmp
sub
aad
clc
push
int3
mov
loope
push
mov
xor
test
je
shl
loope
and
shl
and
push
inc
sub
cmp
cs
in
or
push
loope
xchg
gs
push
mov
or
jbe
mov
retf
or
pop
cmp
add
pop
xchg
jne
xlat
je
test
sbb
fbstp
sub
jne
or
call
stos
cli
ret
cmp
adc
mov
cwde
pop
cld
mov
mul
aaa
fnstcw
into
xchg
outs
sar
jle
dec
inc
int
add
pusha
cdq
and
js
inc
cmp
push
xchg
pusha
push
xor
and
fild
icebp
or
push
dec
test
sbb
jl
xchg
test
inc
pop
pop
sbb
aad
push
test
xchg
or
push
and
mov
adc
xchg
cmps
les
ret
inc
or
jb
cld
jnp
jno
xchg
cmp
push
xchg
adc
add
sub
mov
sar
or
enter
or
add
jmp
mov
sub
dec
add
movs
mov
pop
jmp
add
hlt
xor
int3
or
ret
sbb
cs
push
bnd
stos
lea
or
loope
or
cld
and
and
mov
loop
mov
and
dec
inc
lock
loop
dec
push
int3
sti
mov
jp
lea
dec
std
mov
add
mov
pop
shl
push
and
mov
movzx
inc
push
or
movs
pop
je
pusha
popa
adc
das
je
or
sti
clc
xchg
mov
or
mov
(bad)
rol
xor
mov
jl
aad
lea
cmp
mov
push
dec
inc
lds
cmp
mov
je
mov
sub
sub
fsubr
inc
jno
or
add
mov
popf
inc
xchg
stc
or
xchg
mov
(bad)
and
sub
scas
push
jge
push
pop
cs
loope
cmp
inc
and
adc
pop
js
jp
push
sub
pavgw
arpl
push
or
mov
stos
mov
mov
rcr
iret
lock
dec
mov
loope
ret
push
mov
fs
xchg
mov
je
shl
ret
iret
jmp
adc
xchg
add
lea
adc
test
inc
adc
inc
imul
dec
rol
add
lock
cmp
add
in
mov
cmp
add
inc
inc
jmp
push
adc
lock
cvtps2pi
and
adc
jl
jge
je
pop
dec
mov
pop
pop
add
repnz
rol
pop
mov
call
ins
add
and
mov
add
in
add
cli
pop
xor
out
movs
fmul
mov
jne
imul
add
add
dec
xor
jmp
mov
popf
dec
stc
sub
je
adc
(bad)
jb
sub
mov
add
pop
aas
or
out
dec
sub
cli
add
mov
push
je
in
in
pop
into
xchg
sub
popf
push
push
mov
outs
call
nop
jns
pop
sbb
ror
fcomp
je
mov
xor
test
into
cmp
(bad)
mov
mov
xchg
add
add
loop
int3
adc
mov
addr16
xchg
sbb
push
xchg
jmp
xor
jl
add
xor
pop
sbb
scas
test
shl
mov
loop
cmp
out
add
or
rol
cmp
inc
dec
add
and
and
bound
loope
fist
enter
inc
mov
xlat
push
pusha
loop
pop
in
dec
out
xchg
(bad)
mov
sti
inc
dec
fs
dec
loopne
add
xchg
sbb
sbb
mov
sbb
push
inc
add
cdq
pop
push
(bad)
inc
push
sar
call
xchg
mov
push
xor
mov
inc
in
stos
imul
adc
sub
push
push
aas
xchg
rcr
mov
cmp
shl
setne
sbb
lahf
adc
and
movups
into
jmp
inc
adc
(bad)
mov
fdiv
in
or
adc
pop
dec
and
lds
jbe
test
out
rcl
sub
dec
mov
mov
adc
ss
mov
mov
sub
loop
adc
mov
leave
sub
movs
add
mov
cmp
mov
inc
inc
call
jne
mov
(bad)
je
push
add
add
lahf
clc
std
add
add
inc
ins
popf
mov
fs
xchg
adc
dec
stos
add
sub
cmp
push
cdq
mov
push
xor
popf
jecxz
movlps
mov
hlt
cmp
out
repnz
jmp
jmp
cmp
push
jl
in
jo
movs
adc
enter
outs
shl
ret
fxch
cmp
push
xchg
or
mov
nop
cmp
fmul
sbb
inc
adc
and
cmp
inc
sbb
xor
shl
lods
popa
das
dec
repz
movs
cmp
sar
lea
loope
xchg
jb
or
movs
cwde
popa
or
push
stos
mov
xor
push
add
push
sub
adc
mov
mov
mov
aam
mov
xchg
sub
rcr
add
loopne
ret
in
sbb
je
mov
popa
jo
push
or
rol
bound
inc
adc
shl
loop
es
inc
shl
adc
adc
daa
loopne
dec
or
and
inc
sbb
adc
dec
and
adc
ins
push
leave
jne
inc
add
mov
mov
inc
dec
call
jp
adc
out
repnz
push
call
cld
add
add
cmp
bound
inc
cwde
inc
mov
mov
xchg
fiadd
fadd
pop
jne
sahf
aam
add
adc
push
or
push
or
pop
jbe
into
into
mov
cmp
add
loopne
inc
or
mov
xor
and
jbe
fcomp
out
shl
in
push
inc
mov
sub
ins
push
push
inc
mov
sub
ja
dec
lock
sub
jae
call
test
inc
sub
js
dec
dec
cmp
call
lock
jne
inc
jno
push
xchg
push
dec
pop
inc
xlat
stos
cli
int3
jns
sub
sub
or
gs
shl
cmp
int
or
jp
xor
and
mov
mov
inc
cwde
je
jmp
dec
rol
jne
xor
push
mov
mov
and
daa
fistp
or
(bad)
out
mov
dec
mov
or
xchg
lods
xchg
push
and
movs
dec
xor
cwde
push
xchg
aam
inc
sub
gs
fst
inc
mov
std
jmp
sbb
lds
xchg
or
pusha
dec
pop
jbe
sub
mov
repz
je
push
pop
imul
retf
inc
add
sub
mov
add
xor
mov
aaa
or
add
(bad)
cmp
(bad)
jno
mov
dec
add
loope
cmp
add
add
add
in
sbb
sub
movs
loope
push
xor
(bad)
adc
push
pop
and
rcl
inc
xor
repz
push
or
aam
push
pop
or
je
jmp
xchg
stc
movs
outs
or
add
mov
sub
add
inc
mov
lods
push
lods
sti
stc
jp
pop
xchg
mov
push
lock
cmp
pminub
add
or
or
jb
lea
dec
fld
xor
aam
sahf
and
add
je
mov
test
pop
dec
mov
adc
push
inc
sbb
in
xor
sar
inc
pop
loope
mov
add
pop
sub
ss
xor
(bad)
out
add
sub
(bad)
pop
xor
loopne
inc
ret
imul
(bad)
sbb
push
leave
pop
jl
nop
les
xchg
inc
call
cdq
(bad)
fist
mov
fldcw
mov
test
and
mov
push
and
mov
and
or
push
stos
push
xchg
test
retf
cmp
cmp
sbb
push
push
jno
fst
xor
aad
xchg
fwait
xor
inc
and
lods
inc
sub
inc
test
and
add
and
inc
test
loopne
je
addr16
repnz
xor
push
and
and
clc
arpl
mov
arpl
pop
inc
mov
dec
mov
mov
rcl
add
and
(bad)
sar
je
ret
sub
cmp
mov
or
dec
mov
dec
or
mov
hlt
daa
lock
sub
js
addr16
imul
jno
scas
pop
jo
push
add
inc
std
cwde
pop
cmp
inc
pop
sbb
adc
(bad)
push
test
test
xchg
ficom
push
dec
and
add
xchg
dec
and
jecxz
sbb
dec
in
add
dec
enter
fcomp
push
adc
or
dec
xor
or
into
in
or
cmp
out
cmp
jmp
mov
pop
push
cmp
or
cmc
push
and
jle
adc
push
adc
dec
or
adc
xchg
xor
inc
sub
mov
lds
test
and
dec
out
fwait
jmp
and
sbb
sub
cmp
or
jb
popf
mov
test
adc
push
push
xchg
mov
jae
and
or
xchg
das
adc
pop
mov
and
pop
add
sub
pop
leave
addr16
mov
jmp
add
mov
je
lea
aam
dec
sbb
and
icebp
popf
mov
mov
add
or
inc
adc
jmp
pusha
and
rcl
adc
sbb
push
push
mov
push
add
jmp
jge
pop
push
lea
(bad)
enter
repnz
push
imul
pop
dec
mov
xor
push
aam
in
push
pop
test
inc
cwde
(bad)
sub
push
add
or
jle
ins
jmp
pop
xor
aam
in
push
push
and
sub
jmp
leave
jecxz
cdq
sub
xchg
inc
jns
pop
loope
icebp
jns
adc
test
cmp
leave
outs
lods
rcl
pop
sbb
inc
inc
sar
es
add
mov
ins
or
adc
test
and
mov
push
stos
mov
jle
out
ins
sbb
jne
ja
call
das
test
mov
daa
pop
into
mov
cmp
stos
adc
add
jmp
pop
out
mov
mov
jns
cmp
or
add
lods
repz
ds
retf
sub
dec
add
adc
xor
mov
mov
xchg
rcl
xchg
fadd
es
cmc
push
xchg
icebp
jae
adc
bound
lods
adc
ror
fdiv
icebp
push
out
mov
cmp
mov
xchg
dec
adc
pop
hlt
mov
dec
adc
cmc
bound
adc
movs
pop
in
inc
add
and
pusha
adc
dec
adc
mov
add
add
loope
inc
cmp
je
mov
sub
in
lods
inc
pop
stos
sub
adc
sub
inc
sbb
stos
inc
jae
dec
sbb
repnz
jp
xchg
dec
loopne
or
xor
pop
div
adc
jae
fmul
mov
imul
sub
ret
and
(bad)
push
push
add
pop
add
call
scas
and
pusha
mov
add
or
cmps
jmp
pusha
(bad)
fnsave
xor
ret
or
and
mov
mov
mov
xchg
stc
or
sub
jns
xor
or
shr
push
inc
mov
in
mov
dec
cs
or
dec
pop
mov
js
pop
(bad)
sbb
push
retf
xchg
inc
lea
adc
mov
add
pop
adc
std
mov
leave
je
mov
repz
add
in
enter
add
lahf
jne
fild
sub
sahf
stc
add
femms
mov
imul
xor
xchg
push
pop
mov
cmps
(bad)
xor
imul
mov
xchg
mov
(bad)
and
ret
dec
or
cmp
test
push
jecxz
sahf
(bad)
popa
mov
jns
xchg
jge
aad
movzx
gs
adc
out
cli
movs
inc
push
xchg
into
xchg
add
push
push
pusha
or
add
call
mov
dec
push
add
stos
pop
dec
push
dec
cmps
sbb
clc
mov
push
lea
dec
out
bound
adc
cmp
sub
std
cwde
cmps
jp
adc
fimul
xchg
cmps
sbb
cmp
fnstcw
shl
aam
dec
dec
jne
jae
jp
ins
data16
mov
add
sub
inc
sbb
hlt
dec
leave
push
xor
push
pop
lea
sti
push
rep
cmps
call
inc
fisubr
mov
dec
jl
pop
dec
lock
in
retf
push
fcom
push
not
jb
add
pop
les
dec
cmp
je
jl
add
stc
mov
push
and
in
or
lfs
test
aaa
dec
pop
lock
cmp
dec
push
rol
lds
dec
dec
mov
dec
pushf
fadd
punpckhdq
dec
inc
mov
sbb
icebp
adc
retf
add
loop
xor
xchg
rcl
mov
test
mov
push
inc
and
and
inc
rcl
jmp
sbb
inc
inc
nop
and
call
mov
mov
add
jmp
xchg
mov
xchg
mov
bound
mov
pop
jo
add
xor
or
add
and
call
xchg
cmp
dec
xor
sub
fmul
lock
jne
js
(bad)
lds
lea
cmp
ja
in
aad
mov
mov
push
push
xchg
mov
xlat
push
add
mov
cmp
xchg
add
push
cmp
pushf
ret
rcr
das
mov
xlat
sbb
mov
or
adc
enter
add
jle
lods
sub
daa
(bad)
pop
add
int3
push
push
pop
xchg
mov
jae
(bad)
mov
push
cmp
jbe
mov
xchg
popf
mov
adc
add
jle
sub
cmp
dec
inc
outs
pop
add
je
inc
sub
das
and
int3
inc
add
mov
cmp
jle
fcom
fwait
sub
dec
mov
daa
cmp
mov
add
loopne
sub
jl
push
sbb
cmp
pop
shl
les
movs
out
dec
jle
dec
inc
mov
adc
ret
adc
or
push
add
push
pop
adc
push
xlat
gs
inc
pop
pop
or
scas
and
sbb
(bad)
jp
cmp
fbstp
jmp
add
push
cmp
je
adc
xchg
pop
inc
xor
jb
ss
jno
fst
les
and
fcomp
sub
adc
in
clc
mov
jmp
imul
je
lea
jp
adc
lahf
adc
xchg
sbb
cmp
outs
sbb
lds
sbb
xchg
mov
and
jle
(bad)
lea
cmps
pop
pushaw
cmps
push
adc
jge
test
hlt
dec
push
or
push
cmp
in
xor
adc
pop
and
sbb
push
ror
cdq
nop
xchg
jmp
vprotq
ror
xor
push
popa
cmp
dec
push
mov
mov
add
or
adc
xlat
mov
dec
gs
je
pop
mov
push
add
cmp
call
ror
lds
enter
inc
mov
inc
out
dec
movs
inc
sub
cmp
jge
push
cli
jns
ss
icebp
push
repnz
(bad)
jnp
mov
and
clc
(bad)
jg
sub
push
sbb
dec
xor
sbb
push
push
aam
dec
cmp
enter
dec
imul
add
xchg
fwait
loope
or
test
lea
retf
adc
cli
lea
and
ds
loop
xchg
je
jne
xor
data16
adc
inc
mov
inc
push
or
add
push
in
xchg
pop
les
and
call
test
mov
push
dec
sub
sbb
add
jns
inc
inc
dec
fcom
rol
jne
stc
dec
(bad)
sbb
jb
adc
and
sahf
cmc
adc
rcl
int3
rol
lds
push
xchg
sbb
and
cld
and
pop
push
scas
in
lods
lds
add
outs
push
cmp
inc
rol
sub
sar
pop
adc
int3
mov
mov
sbb
shl
mov
cmp
push
int
mov
pop
mov
int
pushf
fcomp
xor
out
fsubr
ror
jmp
mov
push
adc
nop
and
push
inc
loopne
mov
stos
jl
cmp
xor
jle
lods
mov
mov
cwde
jbe
leave
bound
icebp
jne
jne
adc
leave
sbb
push
mov
movs
js
sub
add
lea
call
aam
pop
jns
cmp
adc
mov
mov
sub
push
mov
sub
les
push
inc
mov
stos
adc
sbb
jmp
xor
jnp
nop
(bad)
adc
out
xchg
jae
in
xchg
ss
shr
adc
push
push
pop
inc
inc
push
call
push
add
pushf
in
les
dec
xchg
xor
stos
xchg
jmp
lock
jmp
cdq
movs
dec
aas
in
cmp
aad
ja
(bad)
cli
fdivr
mov
pop
push
mov
adc
daa
sbb
xor
call
pop
das
mov
sub
mov
adc
gs
(bad)
les
push
pop
inc
inc
dec
jo
xchg
jns
push
add
icebp
gs
les
addr16
and
call
in
mov
pop
adc
jmp
add
mov
leave
dec
pusha
rcr
add
(bad)
and
and
add
jbe
inc
lds
and
pop
stc
inc
inc
pop
pop
lahf
and
fcmovbe
test
pop
pop
sbb
mov
pop
mov
adc
sub
mov
or
retf
mov
cmp
jne
dec
inc
and
sar
and
sbb
nop
or
test
dec
retf
push
and
fsubr
sub
shl
sub
sbb
ror
inc
cmp
jg
aam
xchg
(bad)
in
and
out
mov
push
inc
sub
mov
sbb
test
cmp
adc
push
in
adc
push
outs
ficom
shl
stos
imul
pop
aas
push
scas
xchg
out
dec
push
in
push
dec
cs
test
push
push
sub
cmp
mov
jg
test
daa
sti
sub
and
xor
je
mov
inc
sbb
or
sub
lds
mov
push
in
adc
out
test
ins
cmp
xor
in
push
out
mov
arpl
and
xchg
pop
popf
and
loopne
ret
(bad)
outs
jb
and
mov
inc
outs
jne
test
rol
(bad)
(bad)
out
sbb
add
mov
mov
mov
rol
mov
xor
pop
fsubr
push
dec
dec
in
stos
cmp
test
adc
lds
xchg
out
lods
into
jmp
into
jmp
dec
push
cmp
jbe
ror
push
popa
sub
cmp
cmp
aaa
xchg
or
add
in
fimul
add
inc
push
add
or
xor
add
call
push
push
push
ss
xchg
adc
shr
repnz
mov
leave
addr16
fs
inc
cld
push
out
pop
push
add
outs
rcl
dec
je
lock
push
cmp
push
fdiv
mov
cli
movq
push
pop
push
jne
adc
ins
stos
or
out
pcmpeqd
push
popa
mov
add
imul
add
sbb
enter
adc
sti
cmps
xchg
repnz
adc
and
adc
shl
pop
add
pop
inc
xchg
mov
mov
add
stc
cmps
mov
mov
mov
pop
inc
in
push
cmp
xchg
adc
leave
push
loope
fcmovu
out
inc
sub
or
pop
pop
pop
fsubr
or
data16
fsubr
inc
mov
and
adc
movs
xchg
(bad)
clc
loope
push
int
mov
stos
add
and
(bad)
stc
sbb
cmp
cmps
movs
xor
add
bound
lods
mov
dec
pushf
push
imul
dec
lea
js
or
cwde
mov
cmp
cmp
inc
or
pusha
adc
fmul
inc
mov
add
mov
imul
(bad)
fsub
fcomp
outs
xchg
ror
dec
adc
adc
pop
icebp
mov
mov
xchg
cwde
inc
push
ficomp
outs
mov
int
movs
sar
repz
es
mov
mov
(bad)
mov
xor
and
xor
sar
push
lea
js
mov
mov
add
inc
mov
dec
cdq
push
pushf
dec
loop
sbb
add
xor
push
mov
sub
ror
push
add
loope
das
test
adc
push
mov
inc
push
retf
dec
dec
or
fdiv
pusha
jge
mov
jno
add
aaa
push
pusha
mov
shr
push
push
inc
inc
xchg
call
jmp
sahf
(bad)
sti
xchg
movs
mov
fsub
mov
cmp
(bad)
jb
loope
push
test
hlt
jae
mov
and
and
shr
and
push
push
or
test
xor
outs
fldenv
lea
or
test
ret
loopne
dec
push
mov
ret
je
sbb
pop
sub
dec
jne
test
or
and
pop
sub
sub
push
shr
dec
xor
imul
add
inc
cmp
icebp
in
xor
dec
retf
push
pop
jl
je
xchg
mov
outs
add
loop
jmp
push
lea
test
imul
xor
mov
inc
sub
data16
gs
loop
dec
mov
push
movs
or
loope
and
inc
das
cmp
fcomp
dec
xchg
xor
and
(bad)
call
xchg
pop
pushf
(bad)
push
mov
arpl
dec
add
out
cmp
in
imul
loope
test
test
cmp
(bad)
ret
cwde
mov
inc
retf
cmp
jbe
sbb
add
lds
cli
sbb
mov
dec
lock
push
cdq
les
adc
jbe
mov
fsubr
add
mov
aam
mov
in
sbb
js
std
mov
add
push
pop
fiadd
mov
sub
inc
and
daa
push
rcl
xor
mov
adc
jne
dec
mov
adc
sbb
pop
sub
les
loope
mov
in
dec
pop
push
les
arpl
enter
jmp
or
mov
rcr
sbb
sbb
adc
popf
mov
(bad)
cmps
outs
dec
lahf
xchg
lock
inc
dec
aam
sub
xchg
neg
inc
add
test
arpl
push
enter
or
repnz
dec
jb
mov
and
or
push
in
adc
fs
pop
addr16
adc
into
cmp
(bad)
in
jmp
mov
shl
jmp
lock
adc
call
xor
jmp
jmp
jo
lods
mov
into
nop
test
in
shl
sbb
ror
or
mov
cmc
in
xor
xchg
jo
arpl
cmp
je
rcl
xchg
inc
mov
mov
inc
push
sub
mov
push
pop
test
dec
cmp
add
sbb
or
xchg
bnd
pusha
inc
adc
(bad)
dec
fs
mov
bound
mul
cmp
cmp
push
jl
push
dec
cmp
test
call
mov
outs
repnz
cwde
retf
stc
sar
in
inc
mov
push
js
pop
sti
push
and
pop
cmc
in
arpl
ins
pop
test
push
mov
imul
les
add
adc
push
fcmovne
fsub
pop
out
push
add
push
dec
cwde
mov
mov
call
sub
pop
dec
push
sub
add
outs
mov
jno
inc
sbb
hlt
push
jl
cmps
inc
mov
out
inc
adc
inc
daa
adc
fisubr
add
pop
jmp
mov
call
js
scas
push
ret
sub
int3
adc
push
movs
add
adc
pop
aam
out
push
ins
sub
jo
cmp
ret
(bad)
dec
out
mov
and
es
call
scas
repz
and
cmp
add
sti
mov
in
dec
push
cmp
call
in
cmp
dec
(bad)
jne
aam
sti
mov
iret
cdq
mov
out
repz
adc
adc
dec
out
mov
xor
pop
int3
sbb
inc
xor
idiv
ja
adc
xchg
add
in
sbb
sbb
in
out
ficomp
sbb
jns
jne
cwde
test
fidivr
xlat
sbb
mov
sub
sub
add
add
call
push
sub
push
mov
jne
add
dec
push
mov
lods
ret
cli
mov
inc
jmp
int
ret
push
mov
test
(bad)
jne
shl
cdq
mov
cmps
sbb
xchg
clc
ror
pop
push
loop
adc
out
fstp
sub
or
(bad)
xor
or
sub
ins
cmp
pushf
jecxz
out
push
(bad)
fdivr
lea
mov
lds
fdiv
push
shl
mov
pop
dec
or
or
js
test
mov
test
popf
das
dec
ror
test
xchg
adc
add
out
adc
mov
mov
in
push
fs
fadd
inc
push
and
repnz
je
xchg
les
adc
adc
adc
cmps
xor
pop
sbb
xor
sbb
gs
hlt
pop
inc
or
sbb
add
lea
mov
or
test
push
dec
repnz
daa
nop
push
stos
inc
fiadd
rcr
fidivr
aad
inc
aad
dec
jne
movs
push
dec
pop
xchg
adc
sub
push
xchg
mov
add
push
mov
push
ins
cmp
add
popa
push
add
add
nop
or
mov
jge
outs
lods
dec
cs
and
jge
jmp
push
sbb
mov
pop
(bad)
fimul
jmp
push
dec
movs
sbb
push
mov
test
sar
lds
inc
lods
dec
not
or
push
adc
mov
pop
fmul
data16
daa
aas
or
xor
mov
fisttp
or
mov
movlps
push
inc
inc
inc
mov
push
mov
mov
and
mov
jno
xor
hlt
xor
fiadd
aam
push
mov
outs
popa
push
xchg
xchg
sub
aas
ins
inc
mov
jo
and
sub
mov
pop
and
and
push
lds
xor
ins
jmp
pop
call
mov
sub
mov
xor
enter
sub
in
sbb
out
imul
inc
xchg
adc
jl
test
test
adc
cmp
xor
aam
push
shr
inc
aas
clc
jns
mov
pop
or
sub
mov
add
test
push
dec
and
inc
lahf
inc
adc
ja
jns
adc
pop
int
lock
cmp
jo
fdivr
out
adc
cmp
repz
mov
adc
mov
out
cmp
repz
enter
cmp
enter
adc
loopne
scas
leave
cmp
sbb
and
jnp
gs
out
push
arpl
or
mov
or
and
mov
push
push
lods
sbb
push
pop
out
shl
int
hlt
cmp
dec
pop
dec
loop
inc
aas
add
mov
movs
or
int3
pop
xchg
or
daa
cmp
pop
or
hlt
adc
xchg
or
push
mov
xlat
out
test
lahf
adc
ret
iret
fs
or
cmp
mov
jmp
push
sti
test
and
adc
or
jmp
or
and
push
gs
mov
mov
cld
lea
sbb
mov
xchg
pop
(bad)
xchg
in
mov
movzx
jmp
push
jbe
adc
dec
adc
out
cmp
add
adc
add
and
ret
xchg
mov
sub
mov
xchg
loopne
push
or
pop
cli
cld
scas
mov
push
call
or
xor
xor
stos
pop
or
adc
jo
bound
cmp
push
jp
mov
or
fisttp
lods
test
sub
mov
ss
push
mov
loope
add
lods
mov
test
mov
mov
aad
not
inc
addr16
inc
outs
xchg
shl
and
gs
adc
rcl
repz
dec
pushf
aaa
hlt
or
mov
lods
clc
adc
lods
hlt
add
scas
push
and
add
sar
mov
imul
dec
je
adc
push
adc
dec
xchg
test
jecxz
mov
(bad)
enter
sahf
adc
fwait
jmp
sbb
lea
push
xor
push
int3
mov
imul
push
push
mov
call
pop
mov
xchg
adc
fwait
sbb
daa
jno
xor
outs
mov
cmp
jb
clc
mov
jbe
adc
mov
push
call
mov
cld
(bad)
call
push
(bad)
stc
iret
push
pop
mov
jbe
adc
sbb
add
sbb
cmp
sub
sub
sti
xchg
sub
or
or
in
add
aam
shl
adc
retf
jge
js
cmp
inc
adc
ins
cwde
test
inc
xor
adc
rcr
je
mov
out
in
dec
add
inc
lock
adc
xchg
cld
dec
inc
or
push
add
push
mov
mov
test
ds
mov
inc
fld
jl
mov
sbb
inc
(bad)
dec
ins
repnz
imul
dec
dec
in
push
es
pusha
inc
mov
add
gs
xor
xor
jne
das
movs
mov
jmp
pop
push
pop
fld
jae
sub
push
push
or
pop
sbb
or
or
sbb
mov
daa
gs
and
sub
dec
mov
or
out
loope
jae
add
jp
sbb
add
leave
int3
xor
jae
cmp
fbld
or
mov
mov
shr
pop
inc
sahf
xor
(bad)
and
xor
leave
or
pop
pop
retf
or
jl
imul
iret
adc
test
mov
fisubr
mov
and
popf
loope
dec
out
push
lock
clc
pop
daa
pop
mov
sti
out
adc
adc
pop
mov
mov
jae
stc
adc
repnz
push
out
push
movs
or
add
sbb
push
sub
movs
or
out
pop
inc
hlt
jae
xor
mov
sub
pop
mov
hlt
push
pop
js
cwde
or
enter
xchg
dec
sbb
dec
xor
push
adc
pop
fbld
dec
mov
imul
clc
push
mov
hlt
clc
jge
loop
mov
pushf
dec
jo
lea
out
retf
hlt
int3
inc
ja
clc
jo
mov
pop
popf
ja
addr16
sbb
pop
xor
inc
xor
push
mov
rol
out
add
cmps
sbb
jmp
stos
mov
pop
xchg
dec
imul
repz
stos
loopne
rcr
mov
mov
dec
in
adc
xchg
lock
ins
lock
sbb
mov
mov
fisttp
call
inc
and
inc
jp
mov
adc
sub
inc
or
adc
aam
xchg
jne
les
ins
xor
and
or
ja
stc
mov
mov
dec
push
(bad)
fstp
adc
cmp
jmp
inc
cs
ret
rol
ja
sbb
aas
mov
(bad)
std
movzx
mov
cmc
scas
xchg
popf
sbb
mul
(bad)
(bad)
sbb
push
inc
add
jp
jbe
lds
scas
cli
push
push
or
sbb
in
inc
mov
push
leave
lds
or
repz
xor
cmc
dec
fild
sub
dec
xchg
add
add
sbb
and
lock
mov
push
cld
jmp
push
fwait
or
mov
xor
cmp
and
add
jne
pusha
add
add
ds
out
cli
fwait
nop
sahf
sub
test
pop
cmps
mov
fcom
shl
push
imul
adc
push
sub
or
jo
xchg
cmp
inc
out
mov
sub
ss
imul
not
xor
dec
stos
cmp
mov
sub
adc
ret
jne
xchg
fisub
(bad)
pop
xor
xchg
int
sbb
shl
add
popa
rcr
dec
add
int3
push
dec
in
mov
xor
push
imul
ja
(bad)
xchg
mov
mov
cmp
sub
sub
es
adc
mov
pop
and
mov
pusha
dec
(bad)
aam
xlat
rol
xlat
mov
mov
or
retf
or
repz
sar
cdq
aas
push
out
outs
stos
add
adc
jg
fs
push
test
out
xor
sahf
movs
xchg
add
adc
push
fcmovnb
clc
or
dec
fcomp
push
add
mov
(bad)
mov
sub
jg
repnz
sahf
push
inc
xor
mov
or
pop
imul
sbb
aad
clc
push
pop
xor
(bad)
sub
pop
or
or
push
gs
add
iret
sar
cmp
(bad)
adc
test
cmp
test
sbb
adc
mov
adc
ins
sub
lods
inc
xor
gs
or
jmp
sub
inc
push
or
leave
add
(bad)
cli
(bad)
sub
push
movs
mov
fwait
dec
retf
sub
cmps
pop
xor
sti
test
lods
jg
push
xchg
popf
mov
mov
ja
mov
fcom
aam
ret
js
ror
mov
add
mov
retf
push
les
fwait
popf
mov
imul
(bad)
les
xchg
add
mov
mov
lea
inc
leave
push
int
hlt
inc
add
pop
push
gs
mov
add
add
test
xchg
pop
int3
inc
sbb
mov
jmp
ret
aad
mov
cmp
icebp
mov
les
arpl
xrelease
(bad)
fisubr
mov
out
cmp
add
sbb
mov
pop
mov
ror
sbb
in
cmp
cwde
mov
push
cwde
pop
call
xchg
popf
add
iret
ror
inc
sub
cmp
je
jnp
cli
xchg
call
add
hlt
inc
retf
(bad)
(bad)
out
pop
mov
cmp
ja
push
(bad)
mov
add
lock
push
and
cs
or
xor
push
xor
push
xchg
popa
adc
cdq
jbe
cmp
sub
fisttp
add
pop
xor
imul
push
sub
mov
fst
(bad)
pop
dec
mov
mov
rcr
sahf
xor
cli
push
sub
and
pop
sti
inc
ins
and
or
cmp
mov
test
jle
add
mov
or
add
loopne
cmp
mov
adc
jne
jno
xchg
(bad)
call
in
push
(bad)
not
sub
xchg
mov
sub
data16
xlat
xor
cdq
push
push
add
xor
in
lahf
sar
call
(bad)
cmp
test
add
in
adc
cmp
xor
add
repz
dec
mov
sbb
dec
out
mov
inc
adc
push
xlat
mov
jmp
push
(bad)
outs
jmp
test
shl
sub
push
mov
nop
push
sub
mov
mov
ret
mov
cmp
dec
jns
shl
test
das
inc
js
xor
xor
add
xor
xor
mov
mov
add
jnp
mov
pop
movs
mov
or
push
inc
xchg
outs
xchg
adc
retf
mov
or
iret
sti
mov
mov
sub
mov
sub
push
(bad)
shl
data16
idiv
mov
js
mov
push
dec
mov
xchg
sbb
jg
js
push
je
mov
mov
sbb
(bad)
cmp
dec
and
dec
push
pusha
hlt
bound
push
mov
xor
sti
mov
mov
or
pop
push
or
or
mov
xor
sub
push
mov
mov
pop
retf
adc
ret
out
stos
in
mov
nop
inc
or
in
lahf
or
dec
retf
xor
push
adc
in
(bad)
cdq
and
fadd
lock
dec
bound
aad
cli
(bad)
(bad)
movs
je
daa
test
sbb
sub
jle
jb
addr16
mov
test
sar
rol
(bad)
mov
sti
jmp
adc
rcl
jae
inc
(bad)
call
push
shl
mov
or
and
loop
jecxz
pop
inc
cmps
mov
pushf
test
xchg
mov
(bad)
imul
xchg
cmp
mov
or
adc
rcl
bound
repnz
in
out
dec
push
cmp
cmp
adc
cmp
fcomip
cmp
add
sbb
dec
jo
push
mov
lea
sub
xchg
daa
push
pop
push
adc
adc
pop
fs
std
fs
inc
pop
inc
cdq
clc
rcr
xor
test
outs
in
xor
les
into
test
xor
mov
xchg
inc
arpl
test
mov
jp
push
aaa
inc
push
je
pusha
xchg
jno
dec
dec
inc
in
out
mov
xor
bound
xor
mov
xor
test
adc
sub
jmp
jmp
and
xor
add
lods
inc
ret
ins
pop
jmp
leave
or
xchg
sbb
push
or
lds
adc
fidiv
in
xchg
js
push
je
test
or
enter
fld
sbb
inc
jle
pop
dec
cmps
cwde
inc
add
enter
jo
push
cld
mov
in
pop
push
mov
mov
sbb
cmp
and
sti
and
sti
inc
in
test
and
je
sub
cmc
and
ins
mov
cwde
std
adc
pusha
push
aam
ret
or
out
mov
push
adc
je
mov
imul
and
cdq
jno
adc
dec
adc
movs
xor
ins
or
sbb
add
popf
mov
xchg
and
lods
mov
mov
mov
xor
jecxz
dec
gs
sbb
jbe
or
dec
das
sub
mov
repnz
mov
(bad)
fbstp
xlat
mov
ins
dec
mov
mov
xor
mov
or
cmp
add
xor
pop
(bad)
shr
call
mov
popa
movs
xchg
dec
mov
add
in
das
iretw
push
inc
and
iret
or
stos
inc
sbb
add
mov
sbb
mov
adc
adc
fistp
cli
sub
rol
and
push
in
add
and
pop
dec
mov
adc
ret
jmp
je
stc
mov
adc
cmp
scas
repz
cmp
add
leave
mov
sbb
jne
xor
and
loope
add
or
or
sub
aas
xor
push
test
adc
mov
aam
movs
inc
inc
xlat
jno
mov
test
mov
rol
push
mov
add
push
(bad)
mov
jmp
call
cmp
push
cmp
fs
mov
int3
fs
mov
push
test
mov
pusha
sub
test
push
cld
or
out
mov
sahf
sub
fwait
int3
lea
adc
and
shl
(bad)
mov
ror
int3
pop
je
(bad)
and
je
dec
cmp
xchg
pop
jne
sar
nop
add
inc
les
adc
popa
and
retf
mov
mov
not
cmps
in
pop
pop
push
rcr
add
js
and
or
jge
xchg
retf
inc
(bad)
and
loopne
mov
mov
pop
int
lock
push
cmp
scas
or
ret
test
fs
push
mov
inc
ret
(bad)
sub
fwait
mov
jle
push
jmp
test
add
ins
cs
cmp
cdq
pop
inc
or
leave
inc
cmp
dec
stc
ret
push
es
inc
and
fnstsw
sahf
cmp
sub
mul
xor
inc
jns
pop
cld
ins
push
es
in
add
add
push
inc
arpl
add
in
push
(bad)
scas
neg
fdivr
mov
push
push
in
adc
aam
es
sub
std
mov
push
jne
cli
test
ds
add
(bad)
(bad)
push
cmp
sub
or
les
sub
rcl
ins
fldcw
enter
adc
retf
cmps
in
adc
mov
push
mov
dec
add
dec
cli
nop
repnz
(bad)
push
add
push
xor
sub
pop
add
and
enter
dec
or
mov
push
inc
stos
iret
push
adc
add
fs
leave
add
and
inc
sbb
fstp
cmp
es
call
or
js
inc
xor
mov
sahf
xchg
movs
xor
or
es
xchg
aam
ds
push
cmp
cdq
dec
sbb
idiv
mov
lahf
dec
xchg
aam
jecxz
(bad)
out
loop
jmp
arpl
mov
push
cmp
pop
nop
sub
retf
push
xchg
mov
push
or
push
and
inc
jmp
gs
mov
jae
mov
dec
sbb
cld
stos
xchg
scas
mov
cs
jl
jge
dec
sub
adc
adc
mov
test
and
ins
mov
inc
xor
(bad)
fs
repz
add
sbb
retf
in
or
leave
pop
inc
bound
scas
inc
imul
mov
jno
or
push
rcl
xlat
or
imul
in
push
int3
jecxz
out
pop
in
push
push
in
es
inc
je
sub
pop
cwde
add
je
xor
add
adc
out
jns
dec
ret
xor
xchg
pop
pop
sbb
cs
mov
and
stos
movs
test
aam
push
xchg
icebp
sub
or
and
ret
add
(bad)
mov
int
xor
dec
and
jno
xor
cwde
cmp
sub
jne
jecxz
int
jl
cld
mov
mov
pop
mov
inc
mov
cmp
and
aam
ins
sbb
sahf
push
mov
test
jl
sahf
adc
dec
lock
push
cmp
mov
out
sbb
push
cdq
xor
inc
sbb
mov
in
xor
scas
fsubr
repnz
push
mov
into
call
lods
and
stos
xchg
mov
add
jae
pushf
into
stos
inc
add
cmp
sti
scas
xor
and
add
jne
jae
push
push
call
pusha
aam
cmp
hlt
imul
add
or
js
jne
jmp
inc
leave
lods
movs
jmp
aas
adc
push
call
aas
adc
or
loope
jnp
pushf
cdq
in
hlt
test
sbb
mov
pop
inc
enter
je
test
bound
imul
push
and
xor
cli
push
ret
mov
mov
pop
and
or
dec
push
test
jne
das
jae
mov
jge
cmc
cs
xchg
and
int3
in
mov
or
pop
enter
pop
mov
or
mov
push
fist
adc
stos
(bad)
push
mov
mov
cwde
enter
adc
movs
pop
xor
je
sub
add
push
adc
enter
test
jno
test
cwde
je
sub
fprem
pop
add
xor
movs
xchg
or
out
fst
jge
pop
retf
or
pop
or
jg
cmp
adc
cwde
push
push
(bad)
nop
imul
test
add
mov
mov
rol
cwde
jb
repnz
and
ret
lock
adc
adc
mov
sbb
pop
ficomp
cld
dec
scas
mov
cmp
popa
xor
inc
inc
mov
daa
mov
popa
dec
and
dec
fisubr
dec
sub
dec
ror
pusha
pop
stos
push
push
sbb
mov
or
dec
and
cmp
and
cmp
cmp
test
mov
jno
mov
loopne
sbb
arpl
dec
pop
pop
mov
test
xor
push
or
or
(bad)
mov
dec
pop
sar
push
push
stos
add
push
push
out
pushf
sub
xor
xchg
std
mov
mov
inc
and
add
cdq
cmp
lods
pop
sbb
(bad)
cmps
cmps
mov
hlt
xor
in
adc
xchg
les
fdivr
adc
cmp
icebp
cmp
out
inc
ror
mov
mov
mov
push
add
sbb
mov
data16
push
dec
xor
pop
cmp
cmp
lds
jae
push
(bad)
out
call
in
add
jne
push
jl
jmp
cmp
fwait
nop
pop
push
rcl
cli
pop
xchg
outs
repz
ficomp
pop
popf
into
mov
leave
cmps
or
dec
popa
sbb
push
sbb
jl
push
popa
cli
rcr
mov
pop
hlt
dec
xchg
jle
xor
xchg
jnp
add
mov
and
mov
and
add
add
(bad)
and
xor
push
fldcw
aam
sbb
popa
jo
add
inc
add
aad
sahf
pop
hlt
sub
adc
shr
adc
sbb
inc
adc
div
je
loop
and
aam
stos
fs
mov
sbb
lock
xchg
out
push
push
mov
sbb
das
dec
cs
dec
sahf
mov
enter
or
iret
mov
out
push
jmp
mov
jmp
loope
and
mov
inc
lds
shr
xchg
push
xor
push
jl
pop
dec
push
adc
arpl
lahf
loopne
or
rcr
rcl
test
push
inc
inc
xchg
xchg
mov
xchg
icebp
test
sub
add
(bad)
inc
jmp
and
push
je
ret
mov
jne
bound
je
es
dec
rcl
mov
push
sub
aam
and
nop
jge
inc
inc
ret
fisub
mov
adc
mov
or
clc
cmp
adc
sbb
jge
das
adc
retf
adc
push
nop
je
in
add
clc
(bad)
mov
(bad)
and
in
and
lods
ret
push
jno
and
dec
adc
push
jne
ins
sbb
push
pop
mov
pop
aas
ret
add
sub
mov
push
add
xor
daa
dec
jnp
adc
mov
sub
mov
hlt
mov
mov
ins
sub
loop
push
mov
sub
add
lea
scas
and
sbb
sub
cmp
mov
and
dec
or
or
mov
mov
pop
mov
and
mov
int3
iret
lahf
pop
or
mov
mov
mov
xchg
and
idiv
rcl
es
clc
cmp
shr
adc
je
fisttp
arpl
ins
lock
cmp
movs
mov
in
ret
inc
sbb
mov
inc
icebp
data16
(bad)
push
or
and
inc
or
lods
mov
sub
sub
jo
add
cmp
add
push
push
in
in
shl
lahf
mov
mov
ret
(bad)
(bad)
outs
retf
or
fidiv
nop
cmp
and
cli
sbb
sub
cmp
jno
fcom
add
repnz
stc
in
mov
sub
jb
in
jecxz
(bad)
imul
movs
or
outs
adc
cmps
cld
or
push
adc
jl
pop
test
test
xor
mov
repnz
sub
or
pop
sub
rcl
aam
gs
popa
sbb
dec
je
inc
mov
in
mov
neg
mov
icebp
or
xchg
int3
cs
inc
mov
in
out
xor
adc
jo
or
sub
jne
mov
in
or
cwde
mov
add
mov
and
pushf
in
push
ret
adc
inc
jns
cwde
in
out
jne
in
fiadd
sbb
cmp
push
mov
inc
dec
loop
inc
pushf
fwait
mov
in
lea
shr
jl
mov
dec
add
xor
bound
fisttp
dec
jge
cmp
inc
in
inc
sahf
retf
js
mov
jl
xchg
jno
ins
jle
dec
push
stos
sub
jmp
test
out
in
cld
mov
mov
popa
jmp
mov
sti
and
and
pop
push
enter
xor
(bad)
test
jp
pop
sar
inc
jbe
xchg
and
inc
inc
sub
sbb
mov
mul
xchg
test
jmp
adc
loopne
or
and
cmp
xchg
push
(bad)
cld
shl
xor
mov
loop
mov
in
hlt
imul
mov
aas
push
and
mov
sbb
ds
mov
cmp
push
retf
aaa
adc
adc
(bad)
cmp
pop
and
xchg
and
int
test
dec
adc
adc
aaa
mov
jmp
or
mov
int3
and
repnz
mov
dec
inc
and
fnstcw
pop
fcom
fucom
mov
inc
fdivr
inc
sub
inc
pop
mov
shr
sub
data16
dec
jne
push
mov
jno
fst
rcr
fmul
lds
or
loopne
adc
dec
xchg
cmps
inc
ja
sbb
jmp
inc
inc
call
lds
arpl
mov
mov
int
movs
xchg
(bad)
call
xchg
sub
pop
inc
mov
pop
lock
or
xchg
and
les
sbb
int
popa
fistp
outs
ds
ins
push
hlt
cli
mov
sti
js
retf
aas
hlt
cld
push
hlt
bound
push
out
add
mov
hlt
icebp
add
or
daa
pusha
mov
adc
mov
push
mov
inc
and
mov
leave
fist
or
or
and
push
cmp
mov
mov
call
dec
test
(bad)
mov
lods
test
dec
cmp
or
test
cmps
push
in
mov
mov
jmp
sbb
rcl
retf
jnp
fsub
mov
test
pop
adc
fwait
inc
movs
adc
sbb
sub
stc
xchg
adc
lea
movs
rol
inc
mov
mov
mov
mov
jne
push
mov
and
stos
push
mov
mov
bound
or
and
jno
xchg
pop
pusha
sbb
jge
push
or
jmp
inc
daa
and
dec
xor
pop
aas
inc
call
pop
mov
pop
call
xor
into
adc
stos
sub
add
pop
jnp
mov
push
add
sub
mov
lock
xor
jo
jmp
sar
lods
stc
sbb
or
lods
pop
hlt
push
inc
jb
sbb
add
arpl
pop
inc
sbb
sub
ret
inc
hlt
cmp
jne
sbb
fcomip
jmp
xchg
ror
mov
mov
loope
je
and
adc
pop
jb
add
add
dec
ds
enter
aas
inc
cs
sub
push
mov
adc
add
stc
aam
xchg
xchg
sbb
dec
and
inc
into
enter
stos
out
dec
sbb
pusha
es
dec
xchg
add
out
xchg
jg
std
mov
jbe
or
xor
jmp
adc
xchg
or
retf
int3
clc
lea
out
sbb
jle
mov
cmp
push
cmp
aam
mov
pop
inc
push
add
sbb
lods
rcl
adc
jnp
xor
nop
dec
sub
xchg
dec
cmc
loopne
(bad)
lods
add
cmp
cmp
pop
jnp
iret
mov
xor
hlt
out
daa
and
xor
xchg
pop
js
sbb
mov
mov
pusha
add
shl
rcl
addr16
shl
sub
or
or
jp
sbb
add
adc
sbb
nop
cmp
int
test
ja
mov
mov
aam
les
in
jecxz
sub
les
mov
lock
push
das
push
inc
pop
sbb
push
out
sub
pop
jle
movs
sub
mov
dec
adc
inc
cld
add
pop
or
xchg
out
xchg
adc
inc
or
dec
fdivrp
dec
cmp
lea
clc
mov
jae
sub
in
cmp
push
xchg
mov
imul
push
sbb
and
mov
ret
and
popa
lahf
not
mov
dec
jne
ror
cmp
in
call
and
jp
out
rcr
xchg
pop
and
imul
add
cmp
out
nop
mov
rcl
imul
loopne
cwde
iret
inc
jbe
arpl
dec
sti
push
int3
add
push
aas
dec
sbb
xchg
jmp
cmp
fisttp
inc
lock
mov
stc
pop
cmp
outs
cmp
sar
(bad)
out
sbb
clc
dec
les
jae
jns
pop
push
int3
mov
mov
push
pop
cmp
sub
add
fsub
out
xor
mov
adc
shl
jge
xchg
push
pusha
and
call
in
in
and
gs
fwait
jb
mov
pop
sub
jnp
fist
es
sub
pop
fld
sbb
mov
or
mov
ins
jp
or
test
or
(bad)
int3
sub
repz
lds
sub
aam
inc
in
xchg
data16
lods
inc
in
sar
or
fcomp
sbb
nop
mov
add
fs
xchg
adc
imul
aam
mov
mov
sbb
dec
push
ret
sbb
std
and
lock
mov
xchg
add
jmp
sub
imul
mov
neg
sbb
push
and
movs
add
cmp
dec
and
jae
enter
xchg
enter
imul
das
popa
cmp
data16
dec
out
mov
adc
or
pop
popf
cmps
mov
jns
cmp
xlat
hlt
push
cli
cdq
nop
aaa
add
leave
pop
call
cmc
or
fnstenv
pusha
js
or
test
lds
cmp
or
lock
(bad)
lock
adc
mov
je
add
lock
shl
push
push
xor
sbb
xor
adc
adc
sub
loope
jmp
je
and
in
clc
mov
dec
cmp
cmp
das
push
cmp
mov
call
xor
add
xchg
cmp
xor
push
and
sbb
ss
xchg
xor
or
jae
sbb
xchg
sahf
add
or
bound
dec
sub
stc
mov
inc
fs
dec
(bad)
jg
rcr
dec
push
cmps
or
fidiv
add
cmp
jne
add
push
mov
mov
mov
mov
sub
inc
aaa
dec
jo
adc
mov
add
retf
ins
in
or
xchg
jl
inc
jp
dec
push
jmp
rol
mov
fiadd
(bad)
and
mov
xchg
ds
adc
adc
xor
push
gs
shl
sub
xchg
pop
cli
add
add
pop
movs
dec
jbe
inc
retf
lock
aaa
ja
mov
inc
sub
and
fwait
mov
jns
cmp
xor
rcr
test
sub
inc
test
aam
repz
push
(bad)
ficomp
out
adc
pushf
adc
jae
lea
xchg
cmp
jns
xlat
push
sti
popf
fsub
pop
xchg
ret
mov
mov
sbb
or
dec
adc
and
pop
inc
adc
je
test
xchg
movs
enter
push
jno
in
or
fcomp
cdq
adc
pop
push
or
pop
gs
push
sub
(bad)
jae
rcl
(bad)
ror
ret
ror
push
daa
mov
out
mov
dec
adc
push
dec
dec
dec
retf
adc
or
dec
mov
in
test
imul
dec
les
xor
rol
jmp
fisub
mov
(bad)
neg
mov
mov
jnp
mov
mov
add
fsub
dec
push
xchg
add
jns
stos
(bad)
add
out
xor
mov
inc
pop
ret
push
cdq
movs
sub
imul
push
push
call
mov
es
ins
inc
push
or
cmp
(bad)
sub
cmps
dec
fcmovnb
mov
movs
jo
addr16
mov
out
hlt
xor
pop
out
jns
xor
cmp
push
push
pushf
mov
pop
les
in
cli
(bad)
jo
cmp
xor
pop
sbb
mov
iret
ss
addr16
add
in
jl
push
or
rol
xchg
aaa
test
loopne
mov
ret
sahf
cmp
push
inc
cld
xchg
cmp
and
cmp
ror
or
(bad)
and
jmp
mov
inc
sbb
sub
test
sti
inc
push
and
test
adc
jb
inc
nop
mov
push
mov
mov
leave
sbb
ror
add
ss
mov
(bad)
cs
repz
adc
sahf
jne
xchg
adc
adc
mov
addr16
adc
xor
leave
nop
xchg
dec
dec
js
mov
(bad)
(bad)
xchg
push
or
sub
jae
push
push
sbb
or
mov
add
aad
loop
pop
loopne
adc
pop
mov
(bad)
loop
lea
xor
push
sbb
and
inc
inc
and
retf
mov
or
xchg
aam
and
add
cmp
shl
dec
(bad)
mov
inc
xlat
sbb
jmp
aaa
movs
fimul
test
addr16
or
dec
mov
dec
push
repz
mov
cwde
and
jnp
shl
shl
and
cmps
test
sbb
fldcw
or
or
fimul
das
fs
jno
leave
mov
shl
cmps
add
dec
dec
call
jbe
sbb
mov
sub
xor
mov
stos
or
add
out
movs
es
js
xchg
xchg
mov
pushf
jmp
cmp
mov
mov
aad
test
lock
jo
clc
inc
test
arpl
add
sti
mov
mov
jbe
lods
add
test
push
mov
lahf
push
imul
or
adc
push
ins
add
jbe
push
ud2
shl
mov
mov
gs
and
out
gs
xchg
test
mov
xor
sbb
sbb
cdq
jp
xchg
cmc
mov
sbb
sub
nop
adc
shr
test
(bad)
imul
rcl
xor
xor
and
lea
jnp
push
lea
lea
mov
in
out
lods
mov
cld
dec
pop
cwde
push
push
into
shl
and
sbb
inc
jmp
fwait
dec
mov
enter
pop
and
add
xchg
and
mov
cwde
fstp
(bad)
fisttp
or
mov
retf
or
push
test
outs
mov
ja
dec
into
sub
push
dec
je
pop
adc
inc
xor
xor
push
or
and
in
cwde
pop
scas
mov
loopne
cwde
pop
test
push
sbb
cmp
and
mov
cmp
ss
mov
aam
adc
(bad)
mov
imul
mov
adc
mov
sbb
dec
mov
(bad)
aad
xor
cmp
adc
dec
and
repz
lds
movs
ret
add
xor
cmp
imul
add
ja
and
mov
and
test
cwde
cmp
lahf
or
pop
dec
add
xor
xor
fadd
int
push
mov
adc
test
les
push
or
jg
ins
or
mov
adc
stc
mov
pop
cmp
ins
pop
add
mov
mov
ja
test
mov
in
in
mov
mov
xchg
fnstenv
add
leave
mov
test
ret
(bad)
clc
mov
mov
stc
int3
fdiv
xchg
mov
in
pop
pop
imul
xor
jg
jmp
jg
xchg
sbb
cli
ja
mov
stc
mov
jecxz
mov
scas
push
dec
scas
inc
add
and
icebp
aam
xchg
stos
leave
dec
(bad)
inc
fstp
das
call
and
xchg
lods
add
call
imul
push
mov
les
shr
inc
sar
stos
inc
lods
and
mov
mov
push
inc
add
fisubr
sbb
jne
push
lea
add
push
dec
retf
pop
call
daa
(bad)
mov
cs
pop
push
dec
cmc
dec
and
dec
push
stos
arpl
ss
cmp
sbb
jge
stc
mov
xchg
adc
ds
out
mov
cmps
sbb
aas
adc
fbld
sahf
jp
test
mov
mov
js
(bad)
push
jmp
retf
xor
ds
add
add
out
lock
push
aam
mov
push
mov
out
adc
mov
retf
(bad)
push
leave
mov
jns
rcl
xor
jmp
add
jmp
adc
push
cmc
repnz
mov
cwde
call
cmp
xlat
mov
cmovs
sbb
cld
jmp
and
mov
imul
fadd
sbb
add
dec
mov
nop
pop
or
sahf
xlat
fisub
call
dec
and
(bad)
jle
dec
or
or
mov
cwde
add
shr
dec
mov
adc
out
pop
aad
mov
in
mov
add
leave
cmp
xchg
cmps
jae
iret
inc
cli
outs
sub
addr16
iret
xor
movs
or
and
adc
jns
sbb
and
sub
aam
adc
cmps
or
or
imul
jne
sub
sub
xchg
mov
cmps
test
mov
shr
push
ror
sbb
add
cmp
mov
pushf
mov
imul
jmp
sbb
inc
cli
inc
mov
cwde
dec
cdq
jne
ins
sub
loop
push
inc
inc
and
mov
add
arpl
mov
inc
xchg
je
jmp
bound
das
cmp
test
test
je
aaa
and
sbb
xor
mov
pop
and
cmp
retf
mov
push
lds
cmp
add
test
push
push
and
nop
pushf
adc
in
iret
fiadd
inc
cmp
mov
iret
inc
in
cmps
gs
cmp
sbb
push
inc
xchg
jne
mov
jnp
pop
pop
call
data16
pop
jmp
jmp
push
pop
jp
and
stos
mov
push
and
cdq
mov
retf
cmc
vmread
xchg
mov
cdq
xchg
adc
mov
inc
inc
adc
add
stos
in
add
fmul
lds
jns
imul
sub
cwde
stos
jb
dec
lea
stos
jmp
fmul
pop
dec
add
mov
jns
jg
lods
shl
movups
cmp
imul
repnz
and
and
call
sub
iret
jb
fnstsw
xor
ins
lock
mov
inc
sub
inc
inc
enter
sbb
push
and
rol
push
in
imul
dec
aam
and
xchg
test
mov
sub
push
dec
push
mov
xchg
mov
add
sbb
cmp
nop
in
mov
pushf
cwde
outs
add
cmp
and
hlt
cmp
movs
and
adc
call
push
dec
fs
or
xor
mov
fidivr
sbb
call
push
popa
push
popa
and
ror
int
push
call
adc
sbb
mov
popf
shl
cwde
repnz
xchg
imul
nop
or
mov
mov
xor
out
lea
mov
inc
int
and
and
cwde
or
stos
jl
js
push
and
and
xchg
jmp
clc
adc
dec
mov
loopne
fdiv
jne
cwde
ins
fcomp
aam
inc
aas
in
in
pop
ret
std
cwde
adc
dec
sbb
leave
jne
mov
mov
adc
cdq
add
and
pop
or
adc
repz
std
in
mov
or
mov
dec
xlat
mov
sbb
or
inc
adc
cdq
xchg
xor
pop
pop
push
fsub
xor
pop
push
sub
adc
movs
movs
into
imul
xchg
mov
xor
loop
and
cmp
sbb
add
mov
sbb
lea
mov
and
xchg
xor
inc
pop
cmps
add
(bad)
leave
pop
or
add
xor
movs
sub
lds
in
call
mov
mov
dec
jne
pusha
or
cli
clc
into
lea
and
cmps
fwait
dec
popa
cs
pop
retf
jnp
sbb
jbe
call
clc
aam
dec
sub
cmp
push
cmp
jmp
and
in
xchg
lock
je
push
push
and
xchg
lea
fdivr
xchg
shl
push
retf
jmp
push
mov
std
xchg
call
dec
jmp
cmps
and
inc
add
call
xchg
test
mov
ret
sbb
cmp
dec
pop
out
test
jp
aad
push
pop
xor
nop
mov
rcr
sub
mov
les
mov
imul
into
adc
jne
nop
lock
ins
shr
bound
and
cmovne
mov
cwde
in
out
jge
or
fisubr
ins
cdq
or
jge
push
bnd
dec
pop
adc
sbb
and
inc
mov
push
mov
imul
dec
clts
popf
add
fwait
push
jg
cmc
sbb
fst
and
sub
cmp
mov
sbb
test
dec
sar
sbb
adc
out
xchg
pushf
dec
rcr
push
jl
jmp
pop
daa
jb
or
and
jo
loopne
rcl
je
(bad)
sub
or
push
fcmovne
loopne
cmp
sar
cmp
jmp
push
adc
aas
jbe
and
mov
sbb
push
or
adc
dec
push
sub
pushf
dec
mov
int3
in
popf
fisttp
ins
(bad)
push
sbb
add
xlat
xor
mov
sub
shl
push
retf
add
shl
sub
dec
jne
xchg
inc
or
jno
ret
pop
out
pop
fbld
adc
outs
dec
dec
sub
scas
mov
je
lods
fstp
repnz
enter
xor
ror
addr16
pop
mov
loope
je
inc
icebp
push
pushf
fld
cmps
dec
sub
sbb
adc
imul
pop
sti
jmp
jmp
ins
shl
push
cli
cmp
out
or
fcomp
sub
test
mov
push
mov
inc
shl
jb
clc
push
mov
loope
je
data16
fcom
mov
rol
dec
push
push
and
mov
cmp
jb
or
cmps
ficom
dec
mov
xor
movs
mov
adc
push
in
jge
inc
outs
test
or
jbe
add
or
push
pop
addr16
call
sub
je
add
push
rol
movs
and
shr
sub
or
xlat
inc
lods
sbb
mov
mov
jmp
jp
inc
jae
adc
sub
leave
sub
fs
mov
ss
test
pop
jne
pop
or
or
clc
or
add
sbb
in
sub
add
(bad)
call
push
inc
or
or
xchg
fadd
cmps
push
dec
pop
test
xor
imul
push
loopne
pop
jne
mov
and
into
or
enter
jne
sbb
push
dec
loope
adc
test
cmp
inc
sub
or
cmc
sub
enter
sar
cli
and
(bad)
ror
aas
add
cdq
mov
and
pop
mov
mov
xchg
push
int3
jmp
jle
loop
push
cdq
push
cmp
mov
jmp
jge
sub
push
mov
mov
mov
aam
leave
mov
mov
fwait
mov
push
cwde
sbb
gs
enter
dec
iret
mov
dec
imul
(bad)
sbb
cmp
test
mov
mov
pop
xor
push
inc
cmp
push
shl
call
lods
arpl
lods
mov
inc
or
push
mov
mov
push
xor
and
inc
fwait
xchg
outs
inc
mov
cmp
in
push
xchg
cmc
vpmacssdql
xor
jmp
(bad)
xor
and
es
scas
or
mov
daa
mov
mov
cdq
fadd
jmp
mov
inc
outs
test
leave
dec
sub
out
test
lea
adc
and
cmp
pop
add
add
dec
jl
js
mov
out
cwde
sub
pusha
repnz
out
sub
int3
mov
add
inc
or
into
lea
dec
dec
or
jae
gs
test
dec
rcr
dec
jnp
das
jnp
ret
jmp
scas
pushf
mov
cli
xchg
mov
out
je
fs
aas
arpl
xor
xor
mov
push
int
dec
(bad)
hlt
(bad)
in
fist
or
pop
dec
les
test
je
test
data16
adc
and
pop
out
pop
mov
loope
sub
mov
mov
mov
sbb
push
mov
mov
add
popf
add
pop
test
add
add
inc
xor
lahf
mov
fidiv
push
push
cmp
in
mov
ja
xor
xchg
lock
mov
jb
test
xchg
scas
test
ss
icebp
adc
push
and
mov
popf
test
call
push
mov
mov
sub
call
push
jmp
cmc
mov
rcl
sar
add
lea
shl
in
or
loop
sub
xchg
cmp
lds
or
jmp
mov
push
push
xchg
pop
imul
test
and
(bad)
xor
es
mov
lock
mov
mov
jecxz
inc
clc
test
into
push
retf
xchg
in
in
add
mov
cmp
js
scas
sbb
js
add
jnp
test
inc
jecxz
pop
mov
dec
sub
rol
rcl
jecxz
cmp
dec
push
cli
cmp
mov
sar
fsub
rcl
sub
test
in
mov
ds
inc
leave
imul
lods
pop
and
movs
xor
cmp
inc
mov
mov
call
push
adc
ss
(bad)
mov
das
mov
sahf
test
shr
add
ror
mov
add
into
aas
inc
and
sub
inc
daa
jg
cmpps
jl
into
jmp
in
or
je
jns
push
add
loop
pop
mov
stos
sub
dec
imul
jo
push
xor
ins
std
call
cmps
retf
inc
pop
mov
test
and
xchg
mov
inc
mov
and
lahf
dec
add
cmp
jne
aaa
xchg
xchg
mov
scas
lds
mov
test
push
imul
sub
aas
mov
lods
dec
add
sahf
out
cmp
or
jmp
outs
out
es
lea
or
test
mov
or
push
popf
cmps
or
xchg
pop
cld
cmp
mov
test
cmp
or
mov
add
call
adc
xchg
and
inc
out
dec
rol
in
fdivr
mov
aaa
(bad)
adc
lods
neg
ss
or
jmp
push
fsub
adc
mov
addr16
dec
sar
xchg
sub
xchg
add
mov
xchg
cmp
dec
aaa
cld
cdq
mov
leave
(bad)
jns
pop
pop
fcmovne
push
mov
push
dec
dec
inc
out
enter
add
pop
je
or
adc
dec
cmp
fs
xchg
in
cmp
ror
loop
and
sub
dec
xor
xchg
daa
hlt
leave
mov
cmps
jmp
jne
cmps
movs
repnz
in
xchg
push
fcomp
out
(bad)
mov
inc
sbb
mov
mov
fucomi
pop
xchg
loopne
mov
push
mov
mov
dec
mov
jns
jmp
(bad)
adc
adc
dec
fadd
retf
mov
popa
repnz
or
inc
fwait
and
ret
ret
scas
fwait
sbb
sti
cmp
xchg
aaa
outs
data16
cwde
(bad)
dec
stos
pop
jmp
push
mov
cdq
int
mov
sar
or
add
inc
xchg
(bad)
movs
stos
mov
fimul
and
push
mov
mov
daa
xchg
clc
daa
fs
push
push
dec
fwait
call
js
in
push
sub
mov
push
ds
sbb
sub
aaa
repz
imul
shr
jmp
inc
push
sub
outs
(bad)
mov
jae
inc
sub
sub
retf
or
stos
repz
mov
in
ret
dec
jnp
shr
in
in
ins
stos
enter
pop
jl
sahf
mov
add
mov
out
jle
xchg
jmp
push
ins
test
aaa
jns
fld
dec
mov
sub
test
xchg
test
inc
cmp
push
rcl
into
pusha
or
or
pusha
mov
xchg
retf
jne
sub
or
cmp
pop
mov
cmp
pop
mov
je
lea
mov
je
mov
ins
sbb
int3
inc
fiadd
jg
jmp
fdivr
mov
xor
out
sbb
add
jmp
hlt
add
push
pusha
jmp
mov
lock
mov
je
ret
retf
xchg
test
dec
jns
push
gs
lods
outs
test
push
adc
std
sub
push
cmp
add
xchg
mov
iret
inc
add
mov
popf
pusha
cmp
and
in
movs
rcl
or
sbb
jmp
xchg
push
jae
not
and
mov
std
arpl
mov
cwde
mov
mov
test
jge
cli
xor
adc
jg
add
pop
mov
(bad)
cmp
lea
push
cmp
mov
mov
mov
adc
jp
daa
sub
shl
pushf
mov
mov
push
(bad)
cs
adc
xor
jecxz
jl
sbb
jl
inc
and
in
push
inc
jl
mov
sub
retf
ds
div
push
mov
inc
les
call
lahf
sbb
sub
push
cmp
adc
lods
hlt
lock
ins
lock
dec
xchg
dec
loop
popa
icebp
and
mov
add
movs
mov
test
shl
lods
xchg
inc
out
jnp
call
fs
inc
fprem
test
push
lea
aam
xcrypt-ofb
cmps
sub
push
aam
clc
and
clc
fwait
and
inc
enter
in
push
jmp
mov
jno
mov
sar
inc
jmp
pop
push
and
fwait
(bad)
rol
fsub
adc
push
leave
adc
add
imul
adc
xchg
xor
sbb
lds
dec
pop
sbb
out
popf
popf
aam
aam
addr16
sbb
fcomp
js
dec
mov
test
inc
fiadd
add
mov
enter
pop
int3
int3
int3
sbb
test
add
(bad)
fstp
pop
fs
cmps
or
adc
xchg
rcl
test
sbb
sbb
jl
push
fwait
xchg
js
ss
push
cmp
enter
bt
sub
cli
mov
lods
and
lea
leave
push
cmps
xrelease
adc
xchg
mov
movs
mov
mov
xchg
lods
cld
mov
popf
je
jo
mov
icebp
ins
arpl
xchg
cmps
jo
or
dec
push
jne
adc
jne
test
add
imul
addr16
mov
cli
(bad)
popa
push
pusha
push
mov
push
sbb
sar
push
bound
gs
loopne
jbe
push
ins
inc
popf
je
repz
and
mov
shl
xor
push
dec
dec
int3
xchg
outs
pop
test
lahf
mov
out
inc
retf
std
push
add
and
aas
mov
and
test
jae
lock
nop
sub
leave
xchg
xchg
xor
retf
mov
into
movs
sbb
xchg
out
xchg
pop
aas
push
ret
fwait
mov
mov
adc
sar
xor
cmp
cmove
idiv
sbb
inc
push
lds
enter
inc
iret
into
into
xchg
sbb
jo
cmp
in
test
mov
ret
sub
sbb
xchg
mov
cmp
je
jo
cmps
mov
mov
push
inc
shl
or
repz
jnp
jmp
or
dec
in
xchg
push
mov
rol
jp
ss
cmp
test
jae
jno
pusha
mov
stos
or
shr
adc
inc
or
repz
and
std
sbb
cmp
sub
xor
mov
arpl
dec
out
arpl
push
jnp
jg
dec
jp
add
cmp
inc
ficom
mov
and
cli
push
inc
aaa
adc
cmp
data16
add
jne
ds
in
and
inc
mov
sub
rcr
jne
popf
jge
nop
mov
std
or
(bad)
in
xchg
jno
call
sahf
mov
mov
sahf
add
or
cmps
test
lds
adc
in
adc
shr
push
sbb
xchg
add
pop
mov
cmps
mov
mov
push
or
ins
test
sbb
adc
mov
adc
adc
adc
test
jne
push
pop
lds
add
aam
push
rcr
daa
push
lods
(bad)
mov
fcmovne
inc
mov
hlt
mov
add
inc
pop
and
cmp
sub
loope
cld
push
inc
fild
cmp
push
mov
xchg
int
daa
out
push
clc
popf
push
push
shr
ins
sub
jmp
add
enter
shr
jne
xchg
inc
adc
call
and
je
xor
mov
loope
stos
cwde
fld
inc
and
jb
ret
and
mov
adc
loope
mov
adc
(bad)
jo
add
cmps
and
imul
pop
jno
pushfw
cmp
movs
push
mov
or
call
add
outs
clc
inc
jo
lock
pop
dec
fcom
push
adc
mov
(bad)
int3
jo
nop
std
push
pusha
in
dec
push
aas
and
sbb
or
sub
jl
imul
pop
add
adc
fnstsw
cs
or
scas
mov
inc
pop
dec
cmps
push
xchg
addr16
and
shl
add
test
clc
xchg
retf
loopne
movs
sub
jecxz
push
push
hlt
cmp
push
push
imul
adc
jno
push
pop
jo
adc
add
pop
inc
add
pushf
mov
ins
pop
jo
xor
retf
stc
hlt
mov
dec
and
fmul
inc
xor
jae
or
jno
jl
mov
xor
mov
dec
mov
sbb
add
or
pop
xor
jae
and
sbb
scas
xlat
xor
xor
add
inc
cmp
xchg
cmp
test
inc
sub
mov
xor
add
xor
(bad)
and
cmp
sub
ja
fild
adc
or
dec
or
shr
push
jg
addr16
rcl
or
mov
dec
(bad)
xchg
sbb
push
rcl
xor
adc
or
add
mov
or
mov
xchg
fidivr
add
inc
and
clc
jl
xor
mov
jbe
xchg
and
loope
call
push
sub
leave
jne
fwait
and
lea
jecxz
or
fcom
jmp
mov
xor
push
dec
les
and
mov
add
or
sbb
aaa
jp
out
loop
nop
fwait
mov
les
(bad)
in
add
mov
inc
test
push
or
or
sahf
and
aam
pusha
and
dec
inc
out
ret
sub
rol
in
mov
inc
push
fs
push
cli
call
dec
jno
sbb
inc
and
dec
xor
int3
aam
out
ss
fdivr
push
mov
pop
push
or
adc
mov
lock
dec
cmp
or
in
cmp
dec
cmp
cli
push
dec
jecxz
clc
(bad)
fadd
dec
test
in
lea
push
cmp
mov
cli
push
(bad)
mov
daa
or
cmp
and
rcl
mov
aam
retf
xchg
shr
dec
hlt
and
xor
and
xchg
push
fiadd
sbb
(bad)
(bad)
jl
dec
mov
adc
int3
adc
test
(bad)
enter
cld
mov
mov
mov
mov
cld
xchg
adc
cmp
dec
fst
pop
in
sub
int3
push
jp
sti
pop
mov
push
retf
adc
sahf
fwait
xor
fnstsw
call
jnp
inc
and
test
xlat
mov
sbb
in
or
lods
or
(bad)
push
imul
adc
test
stc
sbb
sub
call
or
add
bound
cdq
or
data16
shl
aam
(bad)
out
pop
hlt
dec
inc
lods
rcl
mov
movs
fcmove
and
xor
add
or
mov
jnp
int
add
loop
je
push
and
sub
jbe
ret
jne
mov
pop
lods
ror
push
bound
cmp
or
jne
pop
inc
call
pop
sub
arpl
or
hlt
mov
jmp
push
cmp
cmp
pop
aam
sub
xor
xor
and
push
imul
or
je
sub
add
xor
xor
mov
sbb
fld
xor
es
outs
retf
mov
push
idiv
xor
mov
cmp
mov
pop
mov
add
inc
data16
ret
jmp
cdq
push
test
jmp
into
cld
or
fs
in
ret
xor
(bad)
lods
adc
push
pop
add
push
mov
xchg
(bad)
jb
or
mov
adc
xchg
mov
adc
js
add
pusha
mov
movs
std
xor
or
push
ins
jmp
adc
ja
pop
and
inc
hlt
popf
jecxz
push
push
jmp
repz
(bad)
mov
js
mov
pop
or
cld
test
sbb
cmp
leave
nop
xchg
js
push
sar
sar
dec
and
cmp
dec
adc
ja
mov
cwde
out
push
pop
arpl
add
jp
xchg
cmp
jne
cmps
ins
add
push
daa
enter
arpl
lahf
hlt
push
mov
sbb
inc
push
cwde
lock
not
fdivr
outs
iret
pusha
pusha
jmp
ja
sbb
mov
in
pop
and
mov
ret
adc
inc
mov
push
fisttp
enter
les
xchg
(bad)
xchg
dec
neg
xor
dec
or
adc
test
push
push
cdq
test
inc
jle
sub
xor
push
push
push
imul
lahf
mov
cli
pop
add
aaa
movs
adc
mov
dec
sti
sbb
stos
jne
int
mov
pop
hlt
enter
dec
inc
pop
push
or
loope
sar
and
inc
aaa
call
rol
pop
pop
adc
ja
cmp
jmp
xor
or
call
push
into
ja
das
cmp
js
and
xchg
mov
loope
fild
test
loop
fisttp
pop
out
push
cmc
dec
push
fiadd
cs
mov
xchg
rcr
mov
cmp
cmps
retf
jmp
movs
dec
ret
in
jbe
push
int
aad
sbb
jp
aam
and
rol
and
cmp
movs
es
dec
dec
cmp
sub
dec
scas
mov
push
ins
inc
push
ds
pop
aam
sbb
push
cmp
dec
pop
mov
(bad)
pop
jle
pop
stos
retf
out
daa
mov
retf
jmp
or
in
fld
lahf
cli
es
push
inc
push
fld
jnp
fdiv
lahf
adc
mov
sbb
scas
loope
cmps
lock
dec
leave
mov
add
or
jne
mov
fsub
adc
es
jmp
mov
adc
xlat
inc
loopne
retf
loope
cmp
add
push
push
xchg
add
loop
jg
mov
xchg
mov
jg
mov
retf
ret
dec
xchg
pop
out
cdq
jmp
pop
mov
and
ins
call
xchg
jb
leave
data16
into
sahf
inc
sbb
dec
push
cmp
jmp
mov
sbb
xor
xchg
retf
jmp
inc
or
push
xor
jnp
adc
dec
xor
hlt
imul
fiadd
in
jmp
push
je
sbb
popf
int3
fsubp
mov
fsub
xchg
out
push
lea
jmp
and
shr
in
add
and
lds
jne
push
loop
imul
or
inc
repz
cmp
inc
je
xor
retf
jg
sbb
sub
pop
(bad)
or
nop
and
mov
push
(bad)
mov
push
xchg
mov
push
mov
(bad)
jns
mov
(bad)
sar
and
and
add
xor
add
mov
and
out
sbb
fmul
jae
xchg
cld
jnp
pop
or
push
mov
pop
inc
cmp
hlt
sbb
ja
sahf
inc
xchg
push
nop
ins
retf
cmps
dec
xchg
clc
mov
leave
inc
mov
lods
jne
movs
gs
push
dec
sub
loop
inc
gs
ds
push
fst
or
mov
test
cmps
or
push
inc
push
sub
mov
xchg
xchg
mov
pop
jb
or
shr
mov
sbb
test
sbb
call
es
push
sbb
es
mov
add
js
call
push
mov
cmps
push
sbb
xor
dec
add
retf
ds
mov
xchg
ret
dec
push
adc
mov
push
retf
repnz
or
loop
je
pusha
xchg
inc
xor
daa
push
movs
ficomp
imul
xchg
inc
cmp
cmp
inc
in
adc
repz
test
pop
sub
ret
sbb
(bad)
mov
aas
mov
inc
mov
sar
adc
push
sar
lahf
out
xor
fsubrp
nop
neg
sub
inc
mov
sub
push
repz
or
inc
sub
daa
stos
xchg
cli
(bad)
and
sbb
inc
or
pop
pop
sbb
jecxz
imul
test
arpl
mov
mov
jne
push
daa
or
inc
push
xor
xchg
nop
and
test
rcr
es
mov
cdq
cmp
inc
inc
scas
es
adc
mov
add
inc
sbb
or
adc
sti
fwait
cwde
retf
lods
ja
push
sbb
sub
xchg
fcomp
(bad)
iret
mov
cli
call
push
sbb
dec
xchg
jb
mov
adc
jl
push
xor
inc
pop
push
(bad)
jns
xchg
shr
sbb
sahf
xchg
stc
outs
(bad)
shl
clc
fdivr
rcr
outs
dec
iret
dec
test
jbe
or
sti
ins
call
sub
iret
push
cdq
cmp
(bad)
mov
adc
repz
xlat
sbb
bound
add
rcl
lea
pop
imul
cld
and
pop
pop
lds
add
adc
xchg
xor
sub
xor
cmp
(bad)
and
jp
icebp
sub
or
movs
mov
sbb
sbb
or
js
and
cmp
inc
or
fcmovu
adc
int
push
fwait
and
push
sti
xor
cdq
xor
fwait
jnp
addr16
add
shl
push
loop
call
inc
jl
lock
xor
test
xchg
aas
out
clc
push
cmp
mov
sbb
or
and
mov
cmp
es
sub
sub
inc
movzx
stc
pop
pop
push
mov
xor
xchg
dec
xor
push
enter
movs
mov
(bad)
retf
and
push
aas
test
sti
fcom
mov
repz
adc
sar
mov
mov
mov
sub
fimul
aad
sbb
add
mov
dec
xlat
or
adc
(bad)
and
fisttp
mov
xchg
or
sub
jp
adc
cmp
pusha
mov
mov
dec
cmp
fisub
das
(bad)
neg
cmp
pop
inc
fadd
in
push
mov
cmps
dec
rcl
sahf
inc
adc
push
pop
repz
jp
xchg
push
and
jbe
mov
inc
dec
stos
pop
cwde
leave
aam
adc
jo
fwait
xor
add
mov
mov
push
ins
cmp
adc
or
cmp
test
in
sahf
fmul
fnstenv
lock
xchg
daa
or
dec
popa
adc
add
fwait
push
(bad)
xor
mov
popa
and
sbb
adc
(bad)
lods
add
xchg
push
mov
or
mov
jno
xor
lea
shr
mov
sbb
scas
cwde
jle
retf
xchg
cli
repnz
outs
fsubr
popf
xchg
or
xor
cmp
icebp
push
mov
mov
into
lods
mov
xchg
sbb
push
aam
inc
fs
cmp
mov
inc
xor
es
xor
xchg
in
sub
pushf
es
call
sbb
xlat
and
es
mov
mov
sbb
inc
nop
ret
jnp
mov
mov
and
inc
dec
xor
push
dec
lock
and
lea
jno
dec
sbb
in
adc
adc
or
pop
cmp
xchg
and
dec
cmc
call
pushf
hlt
test
xchg
lock
retf
aam
into
sbb
jae
inc
pop
je
dec
ins
mov
jae
ss
push
and
or
data16
das
inc
je
clc
jne
sub
and
ins
data16
scas
repz
mov
out
fwait
jnp
out
push
fsub
test
shr
nop
pop
js
int3
dec
mov
sbb
adc
cmps
push
call
mov
sub
mov
mov
adc
jg
fsub
and
pop
(bad)
push
push
jmp
mov
mov
arpl
jns
cmp
cmp
scas
loopne
test
jmp
jmp
in
adc
inc
jmp
jns
adc
sar
cmc
inc
inc
(bad)
jge
and
mov
dec
inc
mov
adc
sub
cmc
mov
adc
shl
xor
sbb
fist
jnp
dec
jns
inc
loop
adc
scas
or
int3
xchg
cwde
mov
jne
mov
mov
sub
cmp
pusha
cmp
mov
in
pop
xor
dec
push
gs
mov
(bad)
(bad)
xchg
enter
pop
xchg
xor
sbb
enter
sub
inc
fidiv
dec
mov
and
and
test
sub
mov
in
push
xor
rol
(bad)
sub
mov
xsha256
xor
add
push
pop
cli
test
sub
mov
jmp
push
(bad)
out
mov
nop
sub
test
cmp
sbb
lock
int
jl
out
xor
dec
push
lods
pop
call
js
mov
and
fbld
and
dec
sub
outs
imul
push
mov
xchg
ret
xchg
add
fwait
xor
or
outs
push
jl
retf
mov
cs
test
cmp
stc
test
push
je
cli
inc
mov
sub
sub
push
retf
(bad)
stos
dec
mov
les
push
iret
adc
out
sbb
add
stc
and
add
cmp
sbb
dec
cld
sub
or
lock
sub
push
jbe
je
sub
dec
xor
push
xchg
lock
adc
push
mov
ja
mov
jecxz
pop
push
clc
int
pusha
fs
add
xchg
hlt
sub
adc
fdiv
ret
cli
(bad)
cmp
sub
add
mov
dec
ss
fsub
mov
push
and
in
sbb
xor
or
jmp
and
ins
clc
and
rcr
sbb
push
xor
xor
pop
lahf
jmp
sub
mov
stc
outs
push
push
dec
mov
add
mov
clc
outs
repnz
inc
out
cwde
mov
aaa
adc
push
push
mov
jbe
mov
push
stos
cmp
inc
pop
(bad)
adc
mov
setno
mov
test
xchg
imul
dec
mov
and
lods
outs
and
or
in
add
cmp
jne
add
or
jae
sub
mov
jl
add
push
stos
aad
mov
mov
out
sbb
popf
jg
xchg
xchg
cmp
xchg
daa
sub
xor
shl
pusha
movs
cwde
(bad)
mov
in
jle
scas
or
dec
push
xor
and
jmp
retf
or
xor
or
daa
gs
xlat
dec
mov
je
inc
bound
dec
adc
imul
jne
push
sub
dec
xchg
mov
js
cmp
test
fcomp
sub
and
mov
push
push
imul
sar
mov
push
ret
mov
not
sbb
sbb
dec
leave
out
lea
shl
lock
add
int3
inc
rol
pop
pop
sahf
adc
loopne
sub
pop
adc
add
and
inc
mov
mov
mov
xor
(bad)
popf
xchg
cmp
cmp
push
call
add
jle
cld
imul
out
outs
adc
sub
xor
xor
aad
imul
xor
les
mov
lahf
inc
push
mov
cli
push
in
mov
push
mov
xchg
or
and
(bad)
jle
adc
pop
adc
adc
push
sbb
or
inc
xor
sbb
test
lock
inc
pop
or
add
xor
icebp
and
ins
add
pop
jmp
or
pop
add
add
or
cs
test
xor
sub
push
cmp
ins
or
fdiv
test
adc
mov
mov
out
inc
enter
xor
mov
mov
lock
jl
scas
and
int
shl
ins
xlat
test
je
mul
mov
inc
or
outs
mov
or
sub
jmp
fidiv
sar
dec
mov
xchg
xor
mov
mov
jo
addr16
sbb
xor
and
retf
pop
pop
jmp
nop
ins
fabs
movs
retf
fisttp
mov
ret
push
xchg
push
dec
mov
xor
pop
ds
movs
popf
xchg
movs
pop
inc
mov
jg
out
and
add
sahf
xchg
fwait
mov
lods
icebp
std
fsubr
sub
and
rcl
inc
or
push
adc
call
addr16
xor
xlat
push
push
movs
(bad)
push
jl
sbb
jg
cmp
ret
adc
cmps
idiv
mov
xchg
cmp
addr16
push
mov
shl
dec
in
je
and
push
push
add
pop
add
int3
nop
or
(bad)
pop
push
inc
int3
ror
push
and
jge
or
movs
mov
or
inc
jbe
(bad)
fisttp
push
xor
xor
retf
int
mov
cmp
inc
scas
mov
inc
es
adc
cmp
jae
rcr
jmp
or
push
mov
aam
mov
popf
mov
ins
(bad)
xchg
jo
push
sub
inc
imul
je
and
jno
dec
rcl
or
dec
fucomi
cmp
push
shr
sbb
setb
jae
(bad)
out
dec
mov
mov
(bad)
les
test
cmp
ret
xchg
pop
jae
enter
cmp
jno
fucomi
les
sbb
mov
lock
fisttp
mov
call
daa
lea
int
cli
and
mov
jmp
mov
or
mov
cmp
ss
outs
cmc
mov
jb
push
std
or
addr16
(bad)
fdiv
mov
nop
cmp
int3
leave
sbb
pop
pushf
je
pop
dec
sbb
sbb
dec
nop
sbb
mov
adc
push
ds
inc
adc
ins
ror
push
xchg
cmp
fidivr
xchg
dec
data16
adc
mov
fidivr
or
and
pop
sti
popf
int
adc
xor
loopne
adc
test
dec
cmp
lock
loope
inc
xchg
cmps
lock
lock
jae
dec
pop
retf
rcr
xor
add
and
pop
mov
push
mov
jno
mov
ret
out
jmp
sub
pop
jmp
dec
push
jnp
sub
test
xor
inc
inc
cmp
test
jmp
fwait
mov
adc
push
xchg
jmp
stos
add
push
jmp
adc
push
lahf
nop
push
rol
neg
aad
inc
stos
adc
scas
(bad)
inc
sbb
push
pop
jge
fcmovbe
inc
sbb
ret
xchg
sub
pop
fild
call
push
mov
adc
jp
xchg
not
fdivr
(bad)
pushf
ror
into
xchg
pop
rcr
dec
or
test
daa
ret
shl
xchg
sub
cmp
inc
rol
ror
(bad)
jns
out
jne
xor
nop
imul
dec
fild
and
jno
xor
and
int3
lock
fs
cli
pop
sub
jl
hlt
jns
xor
cmp
and
mov
add
mov
out
daa
cwde
(bad)
loopne
in
jns
mov
mov
cli
shl
mov
push
xchg
call
fild
adc
in
cmp
rol
jne
movs
mov
fsubr
retf
mov
push
scas
mov
sub
mov
jnp
pop
into
adc
aaa
add
adc
icebp
jo
push
inc
xchg
mov
jbe
push
and
or
outs
adc
push
cmp
mov
adc
mov
rcr
sbb
mov
push
xor
js
mov
loop
sbb
xor
pop
dec
mov
daa
sub
adc
imul
(bad)
cmps
adc
das
push
mov
ds
mov
ret
xor
mov
cmps
xor
add
lods
push
mov
jo
mov
mov
bound
sbb
adc
loop
test
ja
adc
cmp
fist
call
(bad)
fsub
mov
cmp
sbb
movs
movs
jg
mov
cmc
or
call
mov
mov
cmp
imul
loope
sub
fstp
sar
jo
outs
lods
jae
pop
push
add
mov
dec
sub
jmp
jnp
cmps
or
test
adc
shl
dec
add
ret
jmp
inc
pop
push
mov
movs
dec
adc
xchg
or
cmps
jmp
adc
ds
pop
xchg
xor
mov
push
fisubr
pop
(bad)
test
repnz
rcr
sub
dec
loopne
and
idiv
mov
mov
(bad)
cli
adc
aam
(bad)
call
push
mov
jb
cmp
rcr
push
xor
not
inc
mov
test
ret
shl
mov
inc
sbb
fwait
mov
dec
jnp
rcr
xchg
jmp
stos
sbb
jne
mov
jb
jecxz
push
adc
add
adc
sub
ror
sbb
sbb
push
or
and
push
jmp
(bad)
fidivr
jmp
jne
fxch
adc
mov
repz
call
cmc
dec
jp
repz
out
pop
mov
or
outs
or
adc
dec
shl
add
out
push
inc
jb
ja
call
test
inc
repz
nop
push
xchg
dec
mov
mov
adc
or
test
in
push
or
lock
aam
es
mov
inc
sub
sbb
mov
mov
cmp
into
loopne
shr
sbb
jmp
bound
cwde
lock
sbb
cli
xchg
lock
and
js
clc
mov
sub
jae
clc
jo
repnz
jmp
ins
mov
jge
xor
pop
mov
dec
inc
jne
push
add
xchg
pop
inc
jg
enter
cli
sar
xor
in
sbb
mov
gs
je
aam
cmp
ret
and
mov
jle
pushf
inc
call
mov
lods
push
xchg
dec
adc
push
push
pop
test
addr16
jae
outs
ror
push
retf
cld
movs
lods
push
xor
int3
idiv
add
leave
fcomp
loop
das
pop
push
xor
cdq
jl
(bad)
iret
fst
aad
mov
mov
lock
and
pusha
in
into
jmp
adc
add
icebp
jmp
xchg
stos
xchg
mov
shl
pop
sub
mov
pushf
frstor
adc
int3
cdq
mov
ficomp
sbb
push
xchg
and
push
and
mov
or
and
adc
ret
fst
inc
(bad)
xchg
cmp
outs
pop
ja
xchg
jl
sub
add
jl
and
adc
add
mov
nop
dec
fsub
test
adc
and
inc
fadd
push
inc
jo
(bad)
repnz
cs
cwde
mov
inc
dec
retf
test
int3
jae
retf
ret
cmp
sub
fwait
and
sub
rcl
inc
(bad)
sub
(bad)
add
popa
xchg
or
lea
cmp
enter
and
inc
nop
sbb
xor
pop
sbb
dec
or
adc
in
jnp
adc
jae
dec
in
outs
and
and
and
xor
jns
retf
jnp
mov
ins
mov
je
dec
jno
and
jmp
push
mov
xchg
adc
push
or
fisttp
arpl
mov
stos
fwait
inc
xchg
push
bound
ss
jl
(bad)
mov
fcom
xor
aam
mov
jns
push
les
add
push
sbb
sbb
sbb
dec
sbb
mov
or
pop
adc
mov
leave
sbb
push
xor
int3
in
pusha
imul
jns
jp
add
push
mov
jmp
fdiv
jne
int3
dec
xchg
inc
xor
dec
pusha
jmp
cwde
mov
sbb
mov
test
pushf
xlat
call
loope
je
loopne
iret
adc
loop
and
cmc
das
mov
test
add
(bad)
inc
jne
daa
xchg
lahf
sbb
add
jg
retf
sti
mov
cmp
sub
xor
sbb
retf
sbb
push
push
mov
lods
ja
movs
mov
enter
mov
or
inc
xor
sbb
loop
push
inc
add
(bad)
pop
aam
repz
cmp
gs
xchg
and
sbb
pop
pop
mov
or
jg
into
cli
sub
lock
les
sbb
pop
inc
js
dec
and
imul
push
push
xchg
mov
inc
(bad)
movs
jo
jg
jecxz
cmp
mov
lds
test
sbb
and
sub
mov
aaa
sub
jno
xor
fadd
mov
popa
inc
push
ja
(bad)
adc
add
popa
add
rol
pop
or
sbb
fcom
jle
imul
fs
inc
mov
retf
adc
mov
in
cmps
dec
sahf
loop
xlat
clc
(bad)
or
mul
test
outs
cmp
(bad)
and
outs
or
mov
pop
sti
ja
push
aas
add
test
pop
fdivr
cmp
and
cmp
aas
dec
and
in
fdiv
and
stos
lea
enter
test
adc
inc
sbb
add
mov
push
retf
xchg
mov
or
push
rol
cmp
imul
call
daa
and
lods
fisub
pusha
push
dec
test
push
cmp
mov
mov
fst
dec
dec
pushf
mov
out
sub
xchg
aas
mov
mul
pop
sar
ret
test
fld
sub
je
rol
imul
pop
adc
mov
(bad)
sub
add
inc
fdiv
or
imul
inc
std
movs
mov
movs
mul
bound
or
add
popa
ja
push
or
add
les
stos
cmp
push
sub
adc
cmp
xor
enter
mov
retf
or
fadd
dec
dec
stos
jo
ret
in
push
jno
mov
cs
push
cmp
pushw
lock
xor
or
lock
lods
xlat
jno
lock
bound
sbb
and
add
inc
jmp
sbb
outs
jne
add
shl
or
stos
(bad)
(bad)
sub
in
jnp
mov
enter
in
inc
mov
test
int3
push
jns
sbb
retf
push
rcl
pop
cmp
and
dec
test
push
shl
and
xchg
imul
mov
int3
adc
call
or
xor
pop
push
in
inc
mov
adc
dec
(bad)
ret
es
and
push
sbb
sub
bound
test
(bad)
xchg
sub
inc
sbb
xor
bound
mov
xor
loope
dec
sbb
dec
or
out
cwde
test
jmp
sub
loopne
push
xchg
aad
test
repz
cmp
loop
add
inc
je
jmp
fcom
dec
mov
mov
dec
fcom
inc
mov
and
push
push
ret
add
test
mov
push
pop
and
aaa
dec
inc
and
jns
cmp
sbb
arpl
call
adc
daa
xchg
dec
cwde
inc
push
jp
popf
imul
cmp
push
dec
fs
fcmovb
xchg
xchg
mov
cmp
dec
sub
pop
pop
js
push
cmps
pop
lods
jns
dec
mov
or
mov
sahf
push
(bad)
retf
sbb
dec
aam
pusha
adc
fcmovb
(bad)
or
enter
cmp
sbb
pushf
mov
dec
out
test
or
push
out
mov
rcr
clc
test
sub
es
cwde
xchg
xor
fsubr
sbb
cmovns
adc
neg
in
sbb
nop
cmp
xchg
pop
push
bound
xchg
daa
inc
sbb
xchg
push
out
xor
std
mov
inc
cwde
jne
btc
xchg
add
imul
mov
data16
xchg
sub
mov
dec
sbb
xchg
mov
pop
ret
sbb
dec
shl
xchg
pop
es
jmp
or
push
push
push
jno
pop
fld
out
pop
jmp
jnp
mov
test
(bad)
fiadd
mov
rcr
mov
mov
pop
add
mov
cli
mov
cli
fild
lds
je
shld
jg
inc
mov
jmp
dec
mov
hlt
push
and
nop
test
inc
xchg
inc
test
or
loope
sbb
bound
sub
or
cmp
js
js
pop
je
or
je
pop
and
sbb
sbb
jbe
cmc
scas
xchg
cwde
shl
fidivr
push
add
or
inc
aad
mov
push
in
(bad)
cmc
jg
test
arpl
clc
inc
pop
pushf
fnsave
test
or
or
fidivr
les
jns
out
scas
outs
xchg
lods
mov
mov
pop
mov
sahf
dec
jmp
push
inc
inc
test
mov
sbb
pop
mov
or
mov
mov
pop
arpl
dec
xor
adc
or
leave
adc
adc
and
jmp
popf
popf
fldenv
jmp
nop
sbb
cmp
div
addr16
call
adc
shl
dec
(bad)
stos
jge
stos
push
push
sbb
and
test
jmp
mov
adc
cmps
sub
sub
in
test
int
jae
jge
in
pop
mov
rcl
dec
push
pop
test
cmp
sub
es
and
inc
push
mov
retf
pop
xchg
std
sub
movups
add
jp
arpl
xchg
jle
inc
jns
call
cdq
fld
add
cmp
cmp
adc
jne
xchg
sahf
addr16
add
jge
loop
xor
push
leave
into
repnz
push
in
repnz
add
jecxz
(bad)
xor
iret
aam
outs
enter
fimul
inc
inc
sbb
push
push
push
sbb
push
mov
in
push
and
jmp
fisub
call
add
int
sbb
and
retf
dec
jmp
stos
movs
mov
sbb
clc
imul
vcvtpd2dq
xchg
fdivr
push
ret
jl
movs
fcmovnb
mov
sbb
sbb
jmp
jmp
jmp
pop
retf
loop
test
push
mov
movs
test
or
(bad)
or
lea
je
mov
mov
or
or
dec
inc
or
add
mov
std
mov
push
push
inc
adc
and
pop
cmp
xchg
mov
(bad)
adc
addr16
sahf
stos
push
jo
call
add
lock
mul
add
sub
lock
jmp
pop
mov
push
mov
sbb
jle
aam
push
leave
fmulp
stc
and
ficom
jle
and
mov
jne
or
pop
inc
mov
and
(bad)
push
push
test
add
push
aam
and
loopne
cmc
mov
sahf
adc
cwde
xchg
add
and
lahf
in
mov
push
ror
movs
sub
mov
imul
adc
rcr
sbb
jmp
loope
push
je
rcr
dec
sahf
add
cmp
add
pop
xchg
or
fucomi
mov
jo
pop
imul
cmps
xor
inc
and
jmp
pop
jmp
push
popf
repz
rol
hlt
aas
push
or
fwait
push
fidivr
sbb
mov
int
enter
sbb
jle
jno
inc
xor
push
push
add
aaa
jmp
loopne
lods
sti
sub
retf
mov
mov
jae
shl
push
imul
add
add
and
add
outs
adc
inc
scas
and
jmp
push
test
ret
or
jmp
imul
adc
push
out
(bad)
bound
fstp
or
pop
addr16
jne
clc
clc
xchg
pop
leave
(bad)
adc
sti
ror
adc
aaa
or
push
jge
test
jne
inc
or
push
pop
jo
and
jnp
fbld
enter
ror
mov
mov
mov
dec
or
lock
mov
lock
and
imul
add
adc
rcl
popa
not
add
sbb
cdq
pop
cmp
or
ror
adc
movs
ins
retf
push
inc
in
add
or
sub
mov
scas
nop
sub
add
inc
sbb
mov
call
or
mov
push
ficom
add
cwde
cli
sub
xchg
mov
mov
retf
cmp
push
scas
jo
push
jnp
dec
loop
aad
lds
fnsave
sbb
sar
dec
mov
loopne
test
xor
es
push
arpl
pop
adc
lods
cld
loopne
jecxz
add
jmp
sahf
(bad)
xor
adc
shl
sbb
retf
pop
dec
jmp
mov
inc
fcom
retf
test
adc
arpl
pop
in
mov
or
aam
in
adc
data16
test
cmp
sub
pop
xor
sbb
push
daa
scas
lds
dec
inc
mov
xor
jb
inc
cmp
call
lods
add
scas
mov
inc
movups
add
dec
pop
call
ret
cmp
xor
push
(bad)
inc
lock
add
jecxz
mov
mov
clc
jbe
out
clc
push
clc
ret
movs
and
mov
shr
push
sub
mov
pop
sub
retf
inc
mov
pop
nop
gs
add
sub
cdq
adc
pop
sub
(bad)
jl
mov
jnp
addr16
mov
stos
inc
frndint
into
pop
mov
out
sar
jmp
jmp
(bad)
and
xchg
stc
pop
cmc
pop
jg
fwait
inc
dec
jmp
js
das
mov
cli
sbb
push
jb
inc
add
je
retf
or
dec
mov
push
cmc
or
pop
out
aas
gs
sar
cmp
xor
cmc
cmp
and
push
adc
mov
aaa
mov
sbb
into
mov
sar
push
adc
xchg
sti
jo
call
mov
adc
ror
jmp
mov
into
retf
mov
mov
inc
mov
push
inc
clc
into
cmc
or
xor
jne
fcom
adc
mov
fimul
inc
or
add
dec
sub
mov
or
pop
push
mov
jecxz
dec
sub
mov
mov
aam
out
or
shl
mov
dec
ret
mov
push
std
scas
outs
add
ret
data16
repnz
out
add
jae
in
(bad)
mov
aad
cmc
mov
xor
or
(bad)
lods
sahf
add
addr16
push
sub
test
lods
pop
rcr
sub
or
stos
and
js
mov
mov
xchg
cmp
popf
fst
or
mov
jo
mov
mov
add
mov
mov
add
stc
popf
add
adc
scas
add
jmp
mov
std
add
mov
inc
or
dec
test
push
out
in
push
pop
int
add
sbb
clc
ins
stos
fs
mov
movs
div
or
add
xchg
stc
mov
mov
in
cmps
mov
dec
int3
push
movs
and
dec
mov
mov
mov
(bad)
(bad)
aaa
stos
pop
add
xor
jmp
jnp
sub
js
or
ja
cwde
xchg
inc
imul
js
fisubr
push
or
push
pop
call
das
dec
xchg
(bad)
dec
pop
sub
int3
imul
out
fwait
jne
jg
inc
jb
int
ror
scas
outs
jmp
jmp
xor
jg
aad
test
pop
mov
mov
jg
(bad)
aas
jns
push
arpl
adc
std
adc
out
pop
loopne
mov
out
cmps
jnp
es
je
or
fbstp
push
and
cmp
jp
jmp
adc
outs
(bad)
pop
cmp
out
sbb
or
pop
cmp
mov
addr16
inc
inc
arpl
into
je
sbb
inc
test
push
sub
lock
pop
push
(bad)
lock
add
je
add
(bad)
and
daa
inc
push
sahf
hlt
popf
mov
add
push
int3
arpl
adc
addr16
stos
ret
sbb
jle
dec
ins
in
sbb
lea
xor
adc
mov
push
inc
lea
loope
and
adc
push
retf
sub
adc
xchg
jecxz
sub
dec
test
or
and
xchg
mov
test
cmp
jae
sbb
or
jge
cmovns
rcr
adc
adc
je
cmp
cmp
push
inc
xchg
pop
sbb
pop
test
push
stos
sub
std
fs
hlt
hlt
hlt
sar
aas
imul
inc
mov
lods
nop
(bad)
rep
hlt
xchg
fld
aad
dec
and
adc
or
jb
mov
ss
mov
jl
(bad)
in
jbe
ja
push
out
in
in
inc
and
in
(bad)
xchg
inc
int
mov
push
xchg
sbb
movs
imul
mov
out
scas
jbe
in
int3
inc
cmp
xchg
cmp
push
xchg
call
sbb
jp
adc
dec
pusha
call
mov
add
and
xchg
or
je
cmp
xchg
xor
int
mov
jmp
call
fucomi
cdq
aam
xor
mov
adc
loop
ins
sbb
xchg
ins
jo
push
movs
iret
je
ss
mov
sbb
adc
mov
or
js
jno
lock
dec
ss
and
pop
jg
int3
int3
jmp
(bad)
fstp
ja
or
add
jle
nop
lds
popa
xor
out
dec
(bad)
jecxz
push
xor
fs
icebp
shl
cmp
dec
daa
dec
loope
inc
test
aaa
out
or
jne
adc
xor
mov
(bad)
daa
mov
dec
shl
das
sub
mov
stos
cmp
pop
test
sub
movups
out
out
jge
lods
stc
sbb
inc
in
cmovb
dec
sbb
add
outs
xor
bound
push
es
inc
inc
xor
inc
retf
jg
call
out
mov
inc
push
inc
dec
int3
test
pop
xor
sbb
je
jns
not
test
push
data16
mov
sbb
and
retf
mov
push
xor
cdq
mov
push
out
push
ja
enter
(bad)
nop
jns
or
mov
jecxz
lea
and
dec
(bad)
hlt
mov
ror
mov
scas
push
push
cld
inc
test
push
pop
push
mov
or
push
cmp
hlt
jmp
hlt
xor
in
dec
push
sbb
cmp
in
outs
sbb
lods
and
dec
aad
xor
adc
stos
xor
add
fadd
fsub
loope
or
mov
dec
jbe
arpl
xlat
sbb
dec
jle
inc
jmp
xlat
push
aad
jns
lea
fstp
mov
adc
push
into
clc
adc
pop
(bad)
dec
les
jne
fisttp
cmp
jmp
inc
or
mov
aaa
add
fisttp
sbb
mov
lock
add
mov
sahf
mov
test
mov
push
jne
push
push
inc
icebp
sti
pop
xchg
xor
(bad)
in
popf
test
mov
fadd
xor
ror
loope
or
push
sub
int3
pop
movs
or
or
sti
sub
sbb
das
adc
(bad)
sbb
pop
push
cmc
mov
sub
hlt
inc
dec
xor
dec
xchg
fdivp
cmc
inc
les
sbb
xor
mov
inc
ss
adc
outs
dec
inc
in
inc
mov
dec
xchg
jle
add
sbb
neg
das
push
or
inc
enter
xor
ffreep
sar
add
xor
movs
or
jmp
jmp
jmp
dec
ja
retf
les
aas
add
(bad)
mov
shr
push
xor
adc
xor
daa
cli
sub
mov
pop
mov
adc
fsubr
pop
mov
(bad)
ja
repz
test
(bad)
int3
xor
(bad)
fst
adc
dec
pop
xor
pop
push
lods
push
pop
pop
push
sti
pop
test
push
sub
int
pop
movs
mov
adc
(bad)
xor
cmp
xchg
ficom
loopne
pop
mov
stos
mov
mov
call
pop
mov
pop
dec
or
adc
std
es
stos
adc
lods
pop
inc
push
retf
mov
jmp
push
cmp
in
mov
in
icebp
in
push
pop
sub
ds
(bad)
jmp
adc
shl
pop
hlt
or
scas
(bad)
aas
scas
hlt
cmp
xor
jl
push
in
in
push
sti
loope
es
mov
pop
rcr
lsl
sub
mov
sub
xchg
xchg
mov
ins
xchg
pop
cmp
add
lds
mov
sub
jno
push
ins
add
xor
imul
push
cmp
sub
xchg
outs
sbb
fdivr
ss
inc
jne
gs
sbb
in
mov
mov
test
dec
jne
stos
jg
pushf
push
sbb
xchg
mov
call
aad
and
sub
adc
(bad)
aam
(bad)
aas
sub
mov
pop
outs
ret
movs
sub
fs
add
adc
mov
icebp
or
mov
daa
adc
shl
ds
pushf
lods
ja
and
nop
fisttp
push
jb
add
sar
ret
xor
sub
clc
shl
sub
add
pop
or
jne
ds
ror
mov
jbe
rcr
adc
clc
shl
pop
add
jmp
lea
mov
and
je
test
inc
sbb
mov
add
and
not
push
ins
popf
xchg
jo
xchg
xor
jmp
adc
(bad)
mov
xor
dec
dec
retf
mov
aaa
test
jmp
push
jp
icebp
(bad)
retf
push
mov
or
push
lods
shl
add
push
dec
ds
lea
scas
dec
mov
lds
outs
add
loopne
mov
ror
push
and
mov
xor
dec
dec
push
test
or
jl
xor
dec
(bad)
(bad)
rcr
ds
push
or
jno
inc
cmp
je
push
sub
test
sahf
mov
mov
jmp
call
push
jmp
das
push
and
dec
mov
dec
gs
fsub
test
jo
stos
lods
aam
mov
addr16
push
xchg
(bad)
push
dec
cmps
loop
push
xchg
cmp
sar
lea
sbb
je
es
sub
(bad)
rcl
cmp
mov
scas
cmp
(bad)
imul
mov
mov
(bad)
stos
imul
jae
popf
or
sub
push
and
fwait
in
pushf
mov
ins
mov
gs
mov
(bad)
jge
sub
mov
cwde
sbb
mov
lods
movs
and
jb
(bad)
xlat
test
fimul
mov
mov
sti
push
cmp
shl
das
mov
rcl
lea
mov
mov
enter
inc
sub
cdq
adc
inc
push
push
inc
mov
sub
add
mov
dec
xchg
mov
mov
mov
push
xor
in
xor
test
dec
ja
push
xor
dec
aam
jle
inc
outs
test
mov
pusha
jl
cmp
and
loopne
loopne
stos
clc
ja
pop
xchg
bound
sub
jne
fwait
shl
mov
mov
enter
cmp
(bad)
xor
adc
or
jbe
xchg
test
add
mov
adc
xchg
ret
cmc
mov
arpl
dec
in
jne
adc
sbb
arpl
adc
pushf
sub
mov
jne
push
fst
pop
dec
(bad)
icebp
adc
mov
mov
enter
jmp
int
mov
mov
das
sub
push
sbb
mov
aam
mov
bound
push
and
(bad)
jo
push
je
repnz
nop
and
dec
call
mov
and
(bad)
mov
mov
loopne
test
jmp
nop
mov
scas
outs
add
sbb
rcl
int
push
pop
ret
lahf
sbb
sti
iret
mov
ins
pop
sbb
std
adc
push
test
add
call
test
es
pop
dec
and
call
popa
fwait
mov
adc
popa
shr
and
or
push
repz
fxch
dec
int3
test
rcl
(bad)
in
in
sub
(bad)
xchg
xchg
xchg
push
bound
cmp
movs
dec
jae
pop
sub
push
xor
push
dec
push
dec
dec
push
cdq
push
add
mov
(bad)
lock
fiadd
xor
int3
pushf
jle
push
push
pop
sbb
cmps
pop
mov
mov
jg
add
jg
push
mov
sbb
inc
and
cwde
adc
test
xchg
cwde
push
int3
dec
popa
bswap
adc
dec
sar
xchg
js
clc
jo
inc
dec
js
sub
jmp
mov
out
mov
jo
stos
retf
dec
cdq
sti
cmps
jl
int3
fisub
(bad)
mov
cld
and
mov
stc
(bad)
sub
sar
sbb
bound
repz
sub
mov
inc
and
xchg
data16
jo
xchg
stos
and
pop
mov
retw
fst
sbb
ror
sbb
sahf
add
popf
pop
mov
pusha
adc
sbb
test
xor
test
jp
ror
ror
(bad)
mov
icebp
xor
movs
stos
cmp
adc
sbb
out
clc
hlt
jge
pop
into
xchg
pop
ror
loope
inc
call
movs
jb
pop
cmp
shr
dec
push
cli
rcr
sbb
and
ror
sub
and
int3
or
retf
rcr
jae
in
pop
xor
gs
pop
aas
and
ja
xchg
fldenv
scas
xor
mov
push
pop
and
xchg
push
sbb
dec
mov
and
xchg
push
jmp
sbb
cli
sbb
dec
pop
sub
dec
jo
adc
cmp
outs
lea
popa
shr
retf
mov
push
mov
adc
and
sbb
mov
iret
push
sub
push
mov
out
retf
test
dec
sbb
cmp
adc
xchg
mov
or
jl
movs
xchg
cmp
(bad)
fiadd
dec
(bad)
dec
or
and
js
out
rol
push
adc
jbe
xchg
add
and
adc
cmp
out
mov
xchg
jno
and
in
jns
rol
shr
or
jmp
or
add
adc
xor
mov
loop
nop
pusha
adc
sbb
sub
dec
cmps
xor
fwait
aas
push
mov
loopne
xchg
sub
ror
aam
xor
(bad)
lock
sub
or
push
sub
mov
push
imul
aad
mov
and
pop
jmp
outs
hlt
jno
mov
aaa
add
inc
push
sub
arpl
out
xchg
jmp
lods
add
xor
inc
hlt
repz
ret
and
mov
inc
js
push
neg
jmp
fs
mov
enter
popf
sub
cmps
and
sbb
inc
and
push
jbe
adc
movs
imul
aaa
dec
xchg
fmul
pop
push
int
mov
mov
(bad)
push
push
mov
dec
lock
enter
and
adc
and
inc
and
inc
ret
aam
or
dec
jmp
call
in
fwait
sub
or
das
mov
inc
mov
sub
xchg
xlat
test
dec
div
rcr
push
xchg
mov
xchg
das
sbb
jmp
xchg
xchg
ja
cld
fisttp
and
cmp
sar
pop
push
xchg
sub
imul
jnp
or
add
sbb
call
nop
sbb
jge
mov
jl
jne
clc
jns
pop
jl
cmp
lahf
shl
out
dec
dec
add
mov
jns
iret
sub
sub
mov
cld
mov
mov
lea
fist
jb
and
leave
mov
shl
fdiv
pop
movs
scas
mov
add
add
cmp
jmp
and
push
pop
adc
push
imul
test
std
and
and
push
cwde
xchg
hlt
repnz
movs
mov
cs
sbb
clc
dec
je
push
clc
scas
dec
sbb
cld
mov
add
mul
cwde
ss
and
sub
or
dec
cmp
push
daa
(bad)
adc
inc
mov
ins
imul
inc
les
jns
adc
add
test
jmp
xchg
fsub
(bad)
hlt
imul
in
mov
jne
or
push
sub
pop
jmp
cmp
ja
repnz
adc
add
movs
jno
and
xor
push
or
add
add
jge
mov
int
dec
adc
leave
cli
(bad)
xor
pop
je
jl
cmp
aam
sbb
dec
aam
push
retf
jl
test
je
push
fmul
test
iret
and
iret
or
bound
enter
adc
push
dec
cli
ins
mov
and
mov
jb
push
mov
and
push
inc
shr
inc
mov
jno
mov
cmc
fs
jne
xchg
sub
leave
jmp
sbb
shr
and
fisub
or
int3
lds
pop
bound
sub
rol
bound
add
hlt
test
scas
adc
or
inc
and
inc
mov
sbb
ret
push
dec
fisttp
leave
hlt
das
adc
test
dec
pop
call
call
sbb
push
out
xor
sub
cmp
pop
fnsave
popf
jne
dec
dec
push
sar
adc
push
mov
dec
shl
mov
cmp
mov
pop
mov
mov
mov
dec
jne
and
pop
push
lods
inc
and
push
dec
mov
cld
adc
adc
cmp
add
(bad)
and
dec
pop
add
jg
dec
sbb
xor
les
sbb
inc
int
out
lahf
push
or
adc
adc
lock
push
xor
jne
push
lahf
sbb
jge
jne
pop
jle
scas
and
xchg
sbb
push
pop
sbb
adc
sub
aas
dec
push
dec
jbe
adc
or
and
push
jno
enter
or
loopne
push
jne
mov
mov
push
pop
retf
or
retf
push
and
stos
call
sub
imul
sar
mov
sti
inc
ficom
jg
sub
pop
iret
xor
pop
std
push
and
test
dec
je
push
shl
and
gs
pop
adc
je
mov
nop
xchg
mov
push
retf
or
lea
push
jmp
jge
retf
jbe
cwde
adc
jns
and
or
push
mov
sub
bound
and
arpl
mov
mov
or
add
dec
lods
shl
push
sub
loopne
sbb
or
(bad)
pop
or
call
pop
fs
adc
or
dec
push
mov
push
pop
push
push
adc
add
sbb
xchg
popa
(bad)
mov
jmp
inc
and
test
pop
enter
xor
stc
cmp
push
mov
xchg
jne
outs
mov
xor
repnz
call
or
sti
push
mov
div
sahf
stc
mov
dec
imul
ja
call
sar
xor
lods
cmp
mov
and
sub
aaa
push
sbb
jp
pop
xchg
dec
xchg
jge
es
in
jl
call
adc
dec
push
jmp
add
or
retf
xor
inc
inc
enter
test
call
pop
out
pop
shl
arpl
lock
ins
sbb
and
pop
es
fisttp
shr
repnz
retf
jo
sub
mov
pop
popa
sub
push
push
jno
sub
cmp
leave
dec
sub
das
call
push
push
add
fcmovnbe
scas
cld
imul
inc
and
push
in
shr
ret
shl
pusha
inc
sub
ja
or
xchg
mov
imul
xchg
aaa
dec
jae
dec
pop
push
xchg
sbb
lods
cli
pop
sub
mov
das
mov
icebp
out
dec
std
adc
push
and
gs
push
adc
pop
rcl
or
jg
inc
sub
pop
(bad)
dec
cmp
sub
dec
into
jl
or
into
movs
push
inc
enter
and
xchg
(bad)
dec
test
cmp
xor
call
xor
xchg
push
xor
pavgb
xchg
sub
hlt
inc
test
sar
mov
js
cwde
mov
add
jae
movs
fimul
stos
cld
lods
or
or
add
pop
jecxz
push
and
sahf
add
push
pop
adc
(bad)
push
lds
xchg
xchg
xchg
mov
sbb
loope
lds
in
popf
xchg
cmp
mov
inc
xor
pushf
and
imul
push
push
jbe
dec
sbb
mov
xlat
test
inc
outs
ins
cdq
or
fcomp
mov
pop
fs
mov
fsub
sub
popa
lds
and
push
fwait
adc
push
icebp
cmp
pushf
test
mov
push
rcl
inc
fadd
xchg
stos
pop
inc
mov
cmp
rcl
fxch
leave
into
int3
sti
sub
xchg
ret
xchg
push
jmp
xchg
mov
fwait
jmp
nop
xlat
push
push
loopne
shr
fdiv
mov
mov
jmp
in
jae
lds
push
ret
adc
cmp
mov
xchg
fwait
je
mov
dec
and
mov
fisttp
inc
sysexit
add
aad
pop
(bad)
shl
mov
sub
adc
adc
enter
cmp
push
fimul
dec
movs
enter
(bad)
jmp
adc
ret
pop
es
in
ror
ss
jg
je
test
mov
sub
stc
gs
scas
sub
loopne
jmp
push
mov
jno
jp
or
mov
jmp
popa
mov
sub
add
adc
dec
das
loope
xor
je
push
or
movs
jl
jbe
and
pop
ret
jne
cmp
jbe
push
and
xchg
mov
push
lea
repnz
sbb
imul
rcl
aam
push
fwait
or
push
mov
xchg
dec
xchg
pop
cmp
push
xchg
test
mov
(bad)
sbb
in
lahf
inc
or
cmp
sti
dec
retf
in
adc
jbe
aam
dec
or
cmp
pop
pop
in
test
add
popf
shl
clc
adc
and
mov
or
enter
sub
jno
mov
push
add
or
fsubr
inc
cmp
pop
inc
cmp
cwde
or
mov
or
adc
test
jne
test
push
adc
sub
pop
inc
push
pop
or
jle
pop
mov
mov
je
push
inc
xchg
loop
data16
dec
ja
jne
sbb
shl
push
rol
aaa
pop
imul
push
pop
push
jp
(bad)
jne
aas
dec
adc
hlt
dec
popa
push
or
jnp
retf
mov
icebp
jb
int3
sahf
mov
sbb
xor
pop
ds
loope
retf
jnp
cmp
cmp
push
pop
daa
movs
cmp
mov
pushf
push
std
(bad)
rcl
sub
and
mov
mov
push
not
cld
cs
jno
push
adc
fs
inc
jbe
lea
jb
mov
or
sub
ins
fwait
inc
js
pop
sbb
sbb
jne
sbb
stos
daa
test
dec
push
push
ja
dec
dec
xchg
adc
mov
xchg
pop
mov
adc
les
je
cmp
ss
push
push
sub
xchg
xor
ins
rol
mov
sti
and
or
or
or
adc
lods
adc
push
or
or
add
xchg
and
mov
and
push
xor
enter
mov
movs
inc
loopne
xor
lock
test
dec
jae
fcom
clc
test
enter
sbb
or
xchg
pop
dec
and
mov
stos
scas
inc
cmp
ret
lods
push
or
loop
push
jnp
hlt
xor
pusha
dec
inc
mov
push
call
sbb
inc
mov
mov
icebp
pop
or
bound
std
pop
aas
rol
sbb
xor
mov
mov
or
pop
pop
cmp
rcr
shr
sbb
movs
pop
or
stos
shr
adc
mov
hlt
cmp
in
dec
sbb
xor
addr16
cmp
push
loop
jo
jg
mov
popf
ret
and
or
nop
xchg
and
sub
mov
pusha
push
scas
rcl
cmc
jne
xor
dec
push
or
xor
jecxz
enter
rol
add
inc
(bad)
jmp
mov
in
xor
out
pop
call
(bad)
sbb
or
test
adc
mov
jbe
adc
xor
or
mov
nop
bound
cmps
test
xchg
sbb
setno
fld
cmp
xchg
js
js
push
inc
sar
sub
xor
mov
fist
aad
dec
inc
mov
or
xchg
xor
adc
in
mov
and
(bad)
push
add
push
push
sbb
loopne
xchg
les
mov
mov
inc
loopne
dec
sbb
jmp
push
pushf
dec
add
jne
push
mov
xor
arpl
sub
inc
jno
or
or
mov
xchg
dec
mov
push
or
neg
pop
xchg
jb
sub
xchg
cld
push
xchg
cmp
add
retf
mov
xor
loop
out
nop
les
test
popf
push
aam
std
and
test
arpl
and
mov
mov
addr16
and
dec
jmp
out
jl
and
mov
mov
jo
inc
or
icebp
mov
mov
je
sti
mov
cmp
out
pop
inc
js
aad
(bad)
les
jo
jl
inc
xchg
jle
nop
outs
add
lea
adc
add
mov
cdq
sub
in
inc
dec
rol
xor
test
call
mov
scas
dec
jge
jmp
inc
push
movs
jnp
sbb
ins
stos
xchg
fdiv
or
jns
mov
xor
je
dec
mov
sub
std
adc
bnd
push
add
jne
fwait
push
dec
(bad)
hlt
mov
scas
add
test
sub
pop
jp
dec
es
pop
(bad)
cwde
aam
jp
cmc
ret
test
jno
add
js
pushf
test
ja
pop
lds
sar
adc
mov
rcl
mov
mov
hlt
mov
mov
add
and
and
mov
inc
bound
push
sub
or
lods
(bad)
add
lea
cmps
push
dec
call
sub
push
cmp
mov
jne
adc
cmps
push
imul
adc
dec
mov
add
jne
push
fwait
xchg
mov
fild
sub
jmp
adc
or
mov
rol
inc
dec
aam
fmul
into
sti
or
popf
xlat
xchg
push
mov
inc
jne
lods
inc
daa
adc
sbb
clc
test
mov
mov
mov
and
mov
cli
sbb
cwde
pop
cwde
jb
jp
or
mov
sbb
scas
inc
pop
leave
push
xor
cmps
outs
xchg
fs
jae
push
sbb
add
stc
sub
pop
push
or
jecxz
mov
fs
sti
or
enter
add
sbb
call
lock
inc
jno
js
pop
inc
jmp
std
xor
cmps
mov
mov
xor
sbb
inc
xchg
in
push
jne
data16
inc
add
adc
mov
cmp
push
push
ror
(bad)
mov
sub
repz
and
mov
cdq
clc
mov
push
jmp
mov
push
leave
push
adc
dec
sbb
mov
clc
movs
ins
sub
sub
gs
sub
pop
inc
idiv
gs
sub
sbb
dec
cmp
ja
push
xor
add
sub
das
cmps
fisub
pop
add
add
cmps
loopne
scas
push
inc
push
push
push
xchg
ds
mov
es
fiadd
adc
stos
mov
dec
std
lods
in
movs
in
sbb
in
xchg
and
je
inc
mov
xor
adc
clc
jmp
xor
bound
adc
sub
pop
adc
(bad)
xchg
ror
xchg
sub
or
shr
pop
inc
adc
xchg
and
push
stos
push
or
adc
and
xor
pop
xor
test
jge
lods
cmp
sahf
and
popf
enter
fisub
or
jg
xchg
inc
push
and
mov
jbe
mov
loop
xchg
mov
sar
mov
imul
mov
add
inc
ror
push
retf
imul
test
int3
mov
inc
adc
sbb
cmp
sub
cmc
add
nop
pop
xchg
xchg
inc
add
lods
xor
push
cs
loop
icebp
mov
sbb
xchg
cld
xlat
adc
sbb
sahf
test
dec
sub
cmp
or
in
fbld
cmp
test
mov
pop
jecxz
popa
in
inc
or
dec
adc
dec
aam
jecxz
sahf
jp
add
mov
js
cmps
enter
pop
enter
and
clc
xor
xchg
xchg
in
call
add
dec
jl
ss
lahf
add
or
dec
sahf
push
js
push
retf
rol
inc
clc
mov
mov
jnp
lods
or
xor
fbstp
adc
jne
gs
or
(bad)
cmc
(bad)
jmp
hlt
adc
sub
push
cs
cmp
mov
sub
enter
mov
cmp
movs
mov
sbb
add
adc
cmp
sub
clc
stc
int3
outs
push
cld
inc
xor
imul
add
test
xor
and
stos
push
je
sub
pop
jp
dec
mov
daa
cmp
int3
shl
xor
mov
dec
jbe
sbb
xor
xor
inc
xor
cmp
ja
cmp
jmp
pop
xchg
lds
ins
inc
adc
mov
in
mov
retf
in
nop
mov
inc
mov
and
jle
adc
imul
popf
push
retf
sbb
inc
adc
mov
or
in
and
sub
push
or
in
cld
or
hlt
fcmovnb
dec
out
adc
shl
shl
mov
dec
rol
inc
add
adc
call
aam
xchg
cmp
std
sahf
mov
add
retf
dec
inc
sti
jne
and
(bad)
jmp
rcr
int3
out
push
or
not
push
aad
and
test
jp
mov
stc
mov
add
jmp
fnsave
rcr
sar
dec
daa
push
xlat
and
shl
pop
jno
cwde
imul
dec
cwde
add
inc
outs
clc
dec
and
out
push
inc
cdq
jmp
push
or
inc
and
pop
dec
aam
push
xchg
fimul
xor
es
push
call
clc
adc
or
pop
mov
sti
mov
or
repnz
lock
add
pusha
sub
sub
push
popa
scas
push
inc
popa
mov
cmp
jp
hlt
mov
jle
fmul
or
xor
and
dec
add
addr16
pop
imul
shr
push
cmps
or
cmp
out
xor
or
pop
push
les
pop
jmp
pop
jge
cld
clc
fnstsw
sbb
adc
arpl
bound
xchg
lock
pop
test
pop
pop
icebp
dec
std
mov
and
movs
sub
jle
cmp
mov
fcomp
or
call
in
jo
sbb
cmp
dec
test
xchg
sub
test
dec
xchg
adc
add
repz
rcr
push
fsub
ja
cld
dec
cmp
jne
ss
mov
into
popf
pop
push
adc
bound
jno
push
mov
lahf
xor
and
jo
and
sar
nop
retf
sub
mov
or
push
test
and
dec
dec
push
jne
inc
arpl
fsubr
push
push
ror
sbb
mov
shl
adc
lock
mov
fisubr
stos
pop
test
aad
imul
movs
call
pop
rcl
stc
fidivr
push
or
(bad)
pop
inc
aas
inc
xchg
mov
inc
mov
shl
jne
sbb
pop
sub
add
push
jns
xchg
dec
mov
sbb
int3
cmp
div
or
sub
and
test
add
test
mov
mov
cld
push
xchg
jmp
pop
lods
not
inc
mov
pusha
pop
cmp
push
add
xor
add
jmp
cmp
jne
cmp
jb
movs
or
or
in
mov
add
pop
sti
inc
cs
push
cmc
jno
stc
pusha
inc
add
test
sub
mov
les
daa
and
sbb
daa
stos
hlt
dec
bound
or
push
add
mov
mov
dec
or
adc
mov
ret
scas
xchg
ss
sbb
jae
cdq
sbb
add
and
xchg
pop
cmps
imul
dec
jne
popa
nop
leave
popf
sub
or
sub
jmp
cld
add
add
mov
xchg
or
jne
cmp
fstp
adc
mov
cli
cld
add
adc
pop
leave
push
mov
add
je
add
pop
dec
dec
je
jle
push
add
adc
pminsw
or
and
adc
add
jbe
and
ja
gs
es
push
adc
pop
sbb
jb
push
movs
icebp
arpl
adc
or
lea
xchg
mov
shl
or
pop
sub
xor
add
test
rcl
pusha
mov
xchg
bound
imul
sar
test
mov
mov
xor
test
jmp
dec
cmp
mov
and
jo
mov
or
sahf
dec
dec
inc
int
jae
popf
jg
imul
ss
pop
adc
xor
loopne
jmp
dec
add
movs
sub
push
inc
lds
jg
add
pop
popf
xchg
xor
lahf
gs
inc
fnstcw
adc
pop
mov
(bad)
sbb
pop
inc
xor
dec
xchg
movs
inc
repz
cmp
jge
cmps
mov
lahf
add
gs
ret
jmp
sub
lds
inc
aas
push
add
hlt
cmp
inc
repnz
aaa
nop
sbb
or
lds
pop
mov
jle
sub
push
cmps
xor
cdq
sub
push
enter
fstp
sub
pop
fs
add
or
mov
mov
add
inc
lods
out
or
mov
add
xchg
inc
xchg
mov
or
sbb
aam
dec
xchg
mov
push
mov
adc
pop
mul
call
popf
jne
cmc
lea
xchg
add
nop
push
dec
mov
into
xor
adc
xchg
ret
or
in
gs
test
scas
or
jecxz
pop
inc
inc
adc
sbb
adc
mov
adc
pop
les
push
icebp
and
dec
test
shl
movs
cmp
dec
pusha
lods
pusha
fwait
jp
retf
pop
mov
cmp
addr16
cmp
cmp
add
fs
(bad)
cmp
(bad)
xchg
mov
push
sub
push
test
lea
ror
sub
cmps
cmp
add
add
jbe
dec
sub
(bad)
jmp
cmc
shl
push
and
enter
shr
sub
out
les
push
jae
mov
iret
jae
add
fucomip
jecxz
es
xchg
inc
ror
add
fwait
mov
cmp
mov
inc
es
jp
and
adc
xor
aad
mov
repnz
mov
xlat
lods
bound
rol
pop
and
fstp
adc
cmp
dec
push
sbb
xchg
retf
dec
inc
push
jecxz
adc
push
mov
es
dec
pop
shl
dec
or
inc
xchg
xchg
les
adc
pop
sbb
in
fidiv
retf
xor
ss
ds
jmp
ins
out
ret
cs
inc
push
jl
jnp
into
dec
(bad)
(bad)
jo
leave
retf
shr
inc
loop
push
es
mov
or
in
xchg
(bad)
mov
outs
or
push
cmp
cmp
arpl
add
xor
push
(bad)
or
mov
int3
sbb
in
sub
(bad)
pop
cmp
push
stc
(bad)
jmp
or
(bad)
in
iret
mov
push
aad
lahf
inc
je
loopne
je
xor
ins
test
pop
cmp
mov
sbb
lock
cmps
(bad)
cmps
dec
sbb
fmul
and
test
mov
xchg
ficom
retf
fwait
mov
(bad)
rcl
pop
and
push
fucomi
inc
mov
ror
movzx
pop
cmc
mov
sbb
cmp
xchg
or
iret
xchg
and
aad
aas
adc
stc
mov
inc
(bad)
retf
add
mov
jns
add
cmps
ins
cmp
inc
add
jns
ret
ins
cmp
cmp
push
push
stos
and
iret
mov
sahf
out
push
cmp
sbb
jns
ret
lods
mov
jns
fsubr
dec
lods
pusha
xchg
jno
iret
rep
(bad)
clc
adc
out
xchg
stos
test
scas
jecxz
iret
jecxz
mov
jns
(bad)
icebp
adc
jl
cmp
mov
cmps
test
lock
jo
sbb
mov
mov
mov
mov
mov
xchg
loope
mov
mov
mov
mov
jo
sbb
mov
mov
mov
mov
(bad)
dec
add
mov
lahf
adc
mov
fs
cmps
mov
mov
xchg
gs
imul
jae
arpl
into
push
jne
out
add
cmp
or
cmps
lahf
mov
adc
adc
xchg
adc
jno
cmps
stc
xchg
jmp
push
ror
daa
daa
adc
mov
lods
call
mov
or
lds
adc
dec
jns
and
sub
and
xor
cdq
pop
xchg
enter
inc
dec
push
mov
hlt
pop
or
(bad)
sbb
int3
lods
hlt
jno
and
dec
add
mov
mov
pop
xor
inc
loope
(bad)
and
inc
or
test
into
dec
hlt
call
lock
push
mov
repz
dec
pop
pop
sbb
test
adc
jl
not
push
sbb
enter
in
call
mov
hlt
dec
shl
inc
sbb
fmul
or
push
shl
test
movs
mov
test
add
mov
or
cmp
outs
je
pop
sbb
daa
popa
jnp
xor
cmp
dec
or
adc
push
stos
je
fild
inc
add
jno
imul
push
pusha
aam
push
mov
clc
test
jo
out
jnp
adc
xchg
(bad)
es
xchg
out
lock
push
xor
ror
lds
xchg
lea
sbb
adc
dec
adc
out
or
neg
add
dec
in
dec
popa
mov
add
int3
push
adc
pop
enter
out
mov
aaa
dec
pop
or
je
mov
jno
retf
sbb
call
mov
iret
mov
push
stos
mov
in
ret
aas
and
pop
add
enter
xchg
mov
sbb
sub
bnd
movs
sub
rcl
repz
sbb
(bad)
sub
in
dec
fcmovu
mov
push
sub
enter
mov
jb
sbb
and
push
inc
fs
stos
stos
ret
cs
mov
adc
in
adc
test
jg
and
loope
add
or
and
mov
pop
push
(bad)
lock
mov
shl
dec
stos
test
pop
push
test
or
hlt
dec
movs
cmp
or
push
mov
sbb
push
rol
jne
fmul
call
xor
aam
push
aad
cmp
push
cmp
sbb
xchg
sbb
jmp
and
repz
jb
dec
aam
imul
loop
pusha
test
popa
add
int3
ror
icebp
mov
pop
shr
lock
fisubr
adc
pop
popa
xor
shl
jle
scas
push
mov
sbb
add
sub
xchg
or
loopne
adc
scas
jmp
and
cmp
jne
mov
jecxz
pop
or
stos
cmc
add
jmp
aas
movs
mov
add
bound
inc
push
mov
sub
xchg
and
imul
xchg
adc
mov
fcmovu
scas
jmp
sub
push
dec
xchg
psubsw
pop
push
mov
add
mov
xchg
sbb
cs
jmp
bound
or
dec
xchg
inc
icebp
add
or
sbb
push
cmp
add
jno
ss
cdq
mov
sub
mov
pop
enter
jne
repz
or
mov
jnp
xchg
mov
(bad)
add
int3
test
cmp
adc
push
jne
ja
out
cmp
jge
add
dec
data16
add
push
adc
sub
inc
lahf
push
ins
jmp
jge
test
das
or
mov
clc
push
jae
hlt
lock
mov
je
fnstsw
mov
jg
and
xchg
lea
jbe
jbe
jmp
int3
test
movs
movs
cdq
dec
lds
je
sbb
data16
test
retf
push
mov
pushf
mov
push
aam
cmps
mov
sbb
sub
add
mov
push
iret
adc
aad
adc
inc
outs
daa
pop
dec
pop
lds
mov
xchg
sub
push
dec
xchg
ins
fwait
in
ror
bnd
xchg
sub
push
mov
or
inc
pop
add
rol
jge
sub
je
lods
bound
dec
mov
jmp
test
mov
gs
and
out
in
cmp
dec
mov
fcmovnb
pop
dec
mov
jns
pop
and
and
inc
adc
inc
es
cs
in
rcl
and
dec
push
pop
push
cmc
and
sub
nop
popf
adc
pop
jb
cmp
sub
arpl
adc
arpl
push
ret
lods
push
mov
lahf
push
leave
in
inc
fld
imul
rcl
aam
jmp
xor
and
xchg
add
mov
adc
out
dec
sub
or
mov
js
adc
or
mov
xor
ret
and
int3
xchg
mov
fst
inc
cld
out
lahf
push
sub
popf
test
test
dec
sbb
xor
addr16
adc
sahf
or
push
mov
in
hlt
dec
jbe
aam
mov
and
leave
sub
jmp
arpl
adc
push
pop
adc
mov
inc
ret
cdq
ror
or
xor
dec
mov
pop
or
cli
adc
xor
stos
inc
nop
fcmovnb
neg
push
test
les
add
pop
rol
mov
mov
and
push
fiadd
adc
cs
movs
jo
dec
cmp
mov
cwde
dec
mov
push
jne
adc
icebp
push
push
adc
xchg
add
jp
mov
jnp
dec
mov
lea
sbb
mov
xchg
int
lods
add
(bad)
adc
test
inc
or
and
adc
mov
outs
adc
(bad)
faddp
or
cld
mov
mov
push
(bad)
iret
dec
mov
mov
fidivr
in
pop
hlt
jne
popa
sub
ror
daa
retf
push
cmps
in
test
push
jmp
dec
loop
sub
repz
mov
inc
mov
inc
mov
inc
add
jl
push
inc
sub
test
sar
adc
std
mov
rcl
cld
mov
jge
ds
cld
mov
push
ds
in
cmc
mov
mov
mov
cwde
or
and
push
add
retf
jg
mov
jge
dec
jge
jb
add
and
lea
test
cmp
fisub
enter
sti
xor
scas
pop
xchg
mov
push
sub
add
loopne
push
popa
mov
nop
cmps
call
pop
mov
xor
sub
push
mov
push
lea
loope
dec
ins
(bad)
std
sub
push
mov
std
inc
dec
outs
inc
movs
add
daa
in
ins
mov
fisttp
ret
push
or
nop
scas
dec
rol
je
sbb
push
mov
pusha
and
in
rol
xor
fcom
push
mov
leave
jb
cmp
retf
sbb
and
xchg
dec
xchg
mov
pop
call
(bad)
cmp
cmp
mov
jb
mov
mov
or
inc
adc
dec
adc
mov
jmp
outs
lods
xlat
sub
inc
cmp
jae
shl
xor
pop
add
mov
mov
dec
cmp
jmp
rol
test
mov
push
(bad)
inc
pop
frstpm(287
bound
stos
(bad)
and
fidivr
adc
and
retf
xchg
inc
add
cs
mov
bound
cmp
bound
lahf
mov
fld
leave
lods
retf
outs
inc
or
ror
and
in
mov
mov
pop
mov
mov
or
mov
sbb
test
mov
or
dec
out
pop
or
or
fwait
jns
or
adc
push
in
adc
cmp
bndldx
and
dec
mov
mov
sub
sbb
loop
lods
lock
xchg
dec
cmp
dec
push
add
inc
dec
adc
out
test
cmp
inc
test
lods
push
iret
stos
iret
jecxz
movs
dec
bound
nop
add
ret
inc
xchg
sub
retf
mov
or
jb
les
push
aam
sub
call
xchg
mov
movs
pop
mov
dec
pushf
movs
mov
add
mov
test
add
lea
dec
test
and
push
loop
aad
movs
xchg
add
popa
xchg
or
jmp
cmp
xor
mov
loope
je
popa
or
mov
add
mov
adc
and
mov
sbb
int3
rol
dec
pop
ins
fist
mov
test
cmps
test
mov
popf
mov
fnstenv
cmp
push
imul
push
and
inc
xchg
rcl
ins
int3
popf
ins
mov
enter
mov
mov
(bad)
inc
mov
dec
mov
in
lods
push
push
lods
bound
das
inc
addr16
jne
stc
das
dec
dec
fs
sbb
fs
loop
dec
rcr
sub
push
lea
pop
je
ror
xchg
(bad)
aaa
shl
inc
xlat
push
arpl
mov
es
retf
fidiv
aad
(bad)
or
sbb
add
inc
lea
cmps
lahf
inc
push
dec
enter
inc
mov
mov
push
out
xor
cmp
jns
or
mov
cmp
call
in
mov
fadd
or
adc
cmp
add
xchg
sub
int
call
and
or
mov
pusha
in
into
xchg
pusha
and
iret
mov
in
push
call
mov
adc
cli
dec
enter
inc
push
or
mov
pop
and
test
mov
mov
sbb
sar
push
xchg
sub
cmp
add
idiv
aam
or
movs
cmp
jne
fdivr
inc
sbb
mov
fwait
push
sub
sbb
(bad)
xchg
cs
test
hlt
adc
and
mov
cmp
mov
mov
clc
mov
lods
mov
loopne
xor
jmp
lods
xchg
(bad)
aam
push
adc
je
aaa
imul
xor
dec
nop
fimul
add
icebp
jle
mov
mov
popf
es
or
mov
test
je
fisubr
mov
jnp
jnp
aad
sub
sahf
adc
add
(bad)
xchg
inc
xor
and
adc
dec
lea
adc
mov
dec
dec
or
in
fld
rcl
push
inc
jecxz
addr16
fwait
xchg
out
dec
sbb
xchg
xchg
mov
pushf
mov
stos
ins
push
mov
mov
(bad)
in
lea
test
mov
or
lea
popf
fild
test
mov
jne
sbb
imul
push
enter
aam
popf
imul
jne
jo
push
jg
dec
or
xchg
fs
ins
jo
sbb
push
push
push
or
mov
pop
pop
cmps
stos
push
mov
push
pop
pop
mov
ds
and
jmp
fmul
xchg
push
and
fisttp
add
xor
(bad)
inc
das
dec
sbb
push
stc
pop
pop
push
push
adc
and
jmp
push
into
cmps
iret
ins
ror
shl
js
(bad)
and
jo
push
mov
(bad)
fcom
inc
ret
xor
test
push
and
leave
sti
int3
mov
adc
push
adc
cmc
adc
mov
loopne
sub
adc
mov
cmp
add
nop
push
cmc
test
dec
jbe
add
test
mov
sub
xor
shr
dec
add
or
pop
and
or
adc
int3
(bad)
cwde
in
inc
push
div
or
xchg
loopne
cwde
mov
and
ret
jnp
fbld
mov
movs
mov
adc
cmp
stos
dec
fucomp
sbb
cmp
scas
dec
(bad)
fistp
cmp
mov
in
mov
popa
fistp
push
sbb
adc
(bad)
rcl
sbb
pop
xor
ins
pop
(bad)
rol
popa
mov
(bad)
sbb
pop
push
cmc
retf
push
pop
ret
repz
push
icebp
ret
mov
sub
pop
xchg
adc
inc
cmp
adc
stos
mov
adc
fisttp
std
into
into
mov
sbb
and
jmp
mov
cdq
jg
or
jmp
inc
xchg
hlt
rcl
cwde
out
fld
cmp
adc
adc
jmp
jns
and
xchg
mov
pop
jge
lods
repz
int
add
sti
push
stos
cmp
mov
and
add
push
xchg
sti
ret
neg
cmp
movs
cmp
ds
stos
hlt
hlt
clc
(bad)
push
(bad)
pop
stc
mov
les
clc
fbstp
mov
(bad)
lods
push
or
loopne
push
movs
push
xchg
call
lock
call
push
inc
cld
pop
adc
icebp
orps
pop
imul
pop
jmp
adc
fimul
add
inc
mov
call
jne
lods
std
in
out
stc
and
add
push
xchg
fs
or
(bad)
pusha
xor
out
imul
inc
sbb
enter
sub
mov
mov
lods
adc
sub
inc
int3
xchg
lods
fbstp
inc
dec
aad
div
jno
mov
push
(bad)
sti
pop
push
push
jne
ffreep
cmp
cmp
ds
jne
jl
rcl
or
sbb
and
xchg
js
push
inc
sub
stc
jne
jge
xor
xlat
xor
(bad)
xchg
cmp
xchg
jmp
aas
cmp
cmp
or
adc
and
dec
or
div
fst
(bad)
pop
sbb
and
mov
mov
push
iret
mov
dec
and
push
ffree
mov
and
push
pusha
call
pop
iret
jb
pop
mov
cli
popf
or
(bad)
into
into
adc
test
iret
adc
ds
jp
imul
jb
or
movs
iret
fbld
mov
jmp
or
and
bound
lock
jne
or
add
xorps
sub
mov
pop
loop
push
add
pop
jno
push
and
sar
adc
test
cmps
sub
repnz
mov
pop
pop
retf
daa
xor
sti
popf
mov
push
test
push
xor
fidiv
loop
jb
mov
ins
nop
dec
add
inc
push
ja
add
daa
sub
and
clc
inc
lea
mov
cmc
dec
dec
stos
inc
popw
sbb
adc
stos
ins
ins
push
mov
and
push
xor
push
mov
in
mov
sbb
push
jmp
mov
xchg
ficomp
or
mov
adc
imul
sub
dec
sub
leave
jle
scas
push
test
jge
pop
xchg
enter
and
mov
add
fsubr
cmps
in
test
sbb
in
repnz
and
movs
scas
test
aam
add
adc
nop
add
pop
or
inc
mov
pop
movs
cmp
jb
mov
xchg
ret
sub
fdiv
xor
jne
push
and
sub
outs
mov
mov
dec
and
add
fdivr
and
in
mov
push
xchg
shr
(bad)
or
mov
(bad)
movups
aam
adc
arpl
test
or
xor
add
push
fs
adc
mov
sub
push
or
add
repnz
add
xor
add
inc
mov
and
adc
int3
push
hlt
ins
dec
or
mov
sub
movs
fmul
and
gs
sub
sub
in
mov
mov
and
jmp
and
idiv
xor
ds
mov
mov
bound
push
jno
sti
mov
sub
pusha
jnp
fs
mov
das
push
out
sub
pop
push
dec
jbe
jg
mov
jmp
into
or
jne
imul
hlt
outs
push
je
jp
call
into
adc
mov
dec
xor
mov
add
mov
cmp
push
add
sub
mov
lock
clc
addr16
push
hlt
cmp
jle
jp
adc
cmp
jge
lds
lea
clc
enter
imul
pusha
push
rcl
dec
jo
push
adc
hlt
or
add
aas
adc
daa
and
mov
lahf
je
push
add
pop
(bad)
retf
adc
pop
add
ja
ins
dec
xchg
or
inc
scas
imul
xchg
mov
adc
repz
and
cmp
adc
sub
scas
test
cmp
test
add
pop
gs
inc
clc
sbb
mov
mov
fwait
pusha
cmp
pop
cmp
mov
pop
add
sub
lock
inc
mov
call
inc
adc
sbb
inc
xor
out
js
pop
je
iret
adc
adc
iret
sub
iret
iret
ja
dec
pop
mov
dec
cmp
dec
xchg
cmp
js
mov
out
or
and
mov
pop
cmp
and
sub
sbb
int3
mov
loope
dec
fdiv
les
ror
enter
call
or
stc
push
push
and
mov
jle
push
loope
es
mov
adc
outs
jno
adc
gs
(bad)
xchg
jne
lods
push
fsubr
push
hlt
mov
xchg
jo
in
xchg
xchg
mov
add
pop
call
sub
push
call
xchg
and
mov
aas
in
(bad)
out
add
mov
in
xchg
add
mov
mov
and
loope
inc
popa
daa
retf
inc
std
pop
and
xor
dec
sahf
out
cld
lock
mov
push
push
loope
js
and
hlt
loopne
push
push
pop
inc
cwde
inc
mov
add
adc
push
mov
dec
or
sbb
sbb
sbb
loop
das
pop
ins
popf
mov
arpl
(bad)
xor
mov
push
popa
dec
mov
pop
rol
cmp
imul
inc
imul
push
mov
push
or
add
push
(bad)
lods
mov
sub
pop
fwait
cmp
xchg
pop
sbb
and
adc
inc
fst
sub
inc
inc
out
call
hlt
sete
rcl
jne
dec
pop
mov
dec
sti
jne
cmp
pop
or
xchg
lods
(bad)
cs
inc
mov
lods
cmp
jo
inc
(bad)
adc
mov
clc
mov
shl
add
cwde
xor
dec
dec
add
imul
jns
iret
hlt
cmp
movs
aam
sub
loopne
sub
push
mov
push
jno
adc
jle
movs
dec
adc
inc
hlt
inc
call
sbb
push
mov
mov
sahf
ja
xor
cmp
daa
mov
and
mov
cli
and
fs
stc
cld
adc
push
(bad)
dec
(bad)
adc
mov
push
loopne
test
push
inc
fcom
in
daa
cs
mov
push
shl
or
dec
xchg
or
pop
retf
adc
pop
adc
outs
push
aaa
push
jmp
cmp
test
aas
pop
je
adc
cs
push
jmp
cmc
lods
push
inc
lock
or
or
inc
aam
and
data16
pop
repnz
pop
inc
lods
nop
push
leave
lock
pop
mov
call
mov
xor
add
call
and
movs
shl
stos
mov
and
push
mov
push
mov
not
and
and
int3
push
sub
stc
push
fidivr
xchg
sub
inc
(bad)
in
mov
xor
mov
dec
push
jge
dec
fstp
sbb
loopne
je
enter
or
rol
lock
xor
sub
pop
adc
xchg
cmp
inc
cmp
push
retf
xor
std
fwait
dec
arpl
cmc
sbb
jl
inc
inc
sbb
add
cmp
not
push
lods
ret
mov
jl
das
or
push
push
addr16
add
ja
push
daa
arpl
mov
hlt
fisttp
inc
mov
pop
aad
or
aas
shl
pop
sbb
imul
cs
adc
sub
add
dec
dec
loope
add
dec
out
jmp
in
jne
add
and
jl
data16
add
jp
pop
add
jbe
je
inc
or
out
adc
out
jbe
and
lods
jmp
add
mov
add
hlt
and
out
pop
sahf
add
xchg
mov
cmp
js
xchg
retf
loope
add
stc
stc
ror
or
rcl
into
push
sbb
push
mov
mov
cli
ds
stc
push
and
in
inc
adc
jne
enter
mov
push
cmp
xchg
shr
sbb
and
and
mov
push
and
call
cmps
sbb
push
sti
lods
xchg
push
test
popf
pushf
lea
push
imul
es
pop
fidivr
add
sbb
into
fucomp
loope
sub
jb
test
rol
stos
test
push
xchg
or
fldcw
push
xor
xchg
mov
and
cmp
cmp
aam
sub
std
push
lds
ins
push
pop
ins
sbb
jmp
fcom
jae
retf
inc
cmp
sub
push
pop
mov
push
cld
xchg
xor
xchg
dec
pushf
adc
sar
retf
in
dec
inc
mov
cmp
xchg
and
rcr
add
jecxz
adc
bound
add
call
jmp
jmp
push
mov
xor
or
sub
pop
nop
mov
mov
outs
loopne
les
jo
aam
cli
push
push
lea
jg
xchg
(bad)
out
sbb
adc
xchg
mov
add
shr
loopne
(bad)
sub
aaa
test
adc
dec
mov
xor
enter
sub
jg
mov
test
out
adc
or
mov
ret
mov
inc
jmp
sub
and
push
pop
adc
sbb
fs
push
retf
cmps
add
sahf
xchg
adc
jg
fbld
ror
cs
dec
(bad)
dec
push
(bad)
bnd
cld
mov
dec
std
lahf
mov
jg
sti
sbb
or
pop
(bad)
xchg
sbb
mov
cli
push
cwde
fidivr
sar
fisub
popa
and
cmp
ins
push
xchg
mov
push
xchg
sub
dec
sbb
xchg
jge
inc
in
stos
(bad)
dec
fdivr
xor
adc
enter
repnz
adc
mov
push
in
push
sar
test
or
ss
fdivr
xor
inc
sbb
imul
pop
push
sub
push
jae
mov
mov
or
lahf
stos
dec
mov
rol
das
adc
call
popa
fs
les
(bad)
mov
xchg
pop
repnz
dec
gs
inc
mov
sub
in
int
xchg
push
jbe
push
inc
or
out
jl
js
test
dec
(bad)
jnp
or
add
add
iret
or
nop
cwde
push
mov
mov
scas
pop
mov
addr16
ins
add
add
xchg
and
retf
pop
pop
pop
iret
add
push
dec
cdq
cmps
jp
jmp
fstp
enter
adc
xor
and
or
retf
loop
xchg
cld
test
or
add
and
push
or
pop
sbb
aas
std
scas
jmp
cli
repz
call
cmp
push
test
add
pop
out
outs
mov
sub
repz
repz
hlt
aaa
mov
pop
int3
xchg
inc
cmp
scas
sbb
adc
cmp
bound
sbb
xchg
push
in
fsubr
inc
in
addr16
out
icebp
xlat
mov
out
cmp
mov
sub
pop
pop
stos
mov
je
nop
hlt
cmp
sub
xchg
sub
lods
jecxz
inc
sbb
in
in
call
or
aas
pop
and
scas
adc
xchg
sub
and
sub
xchg
nop
jae
mov
pop
cmp
dec
mov
inc
jmp
outs
dec
cmp
into
and
sti
sub
mov
mov
cli
lahf
xor
sub
test
call
sbb
mov
xchg
call
std
push
(bad)
daa
or
sbb
jle
adc
cwde
icebp
cld
mov
or
daa
cs
adc
add
hlt
adc
jmp
dec
add
cmc
aaa
add
sub
or
fidivr
or
addr16
push
lock
push
imul
les
pop
adc
inc
mov
pop
ror
mov
iret
or
inc
dec
in
or
inc
ror
(bad)
sbb
mov
stos
(bad)
jmp
cmp
cmp
push
push
rcr
or
lods
mov
adc
sti
inc
test
fisub
sub
xchg
lds
test
(bad)
(bad)
loopne
sub
sbb
pop
or
add
adc
mov
std
cmp
xchg
xchg
(bad)
or
push
data16
enter
sub
pop
les
pop
or
jmp
fsub
mov
aaa
fdivr
or
dec
push
jge
pop
nop
imul
pop
xchg
out
mov
cmc
or
pop
(bad)
fldenv
js
out
jl
mov
cmc
or
xchg
xor
repz
retf
sub
jno
in
jecxz
mov
shl
mov
adc
enter
addr16
or
xchg
mov
sti
xchg
inc
js
out
sbb
or
ds
lods
in
call
sbb
lea
or
and
(bad)
rcr
(bad)
jl
fdivr
dec
pusha
jne
pusha
neg
psadbw
gs
push
pop
xor
call
mov
sbb
test
sbb
mov
js
iret
dec
xlat
push
jecxz
adc
aam
push
sbb
shl
mov
or
adc
in
into
or
jb
ja
int
icebp
fdiv
push
pop
fiadd
mov
pop
rcr
push
mov
add
ror
jmp
cli
xchg
idiv
xchg
adc
enter
clc
data16
jg
inc
jne
out
adc
pop
adc
stos
mov
fst
std
add
retf
sbb
mov
inc
ja
mov
aam
dec
push
cwde
(bad)
dec
xor
fwait
xchg
jo
je
out
adc
fst
or
xor
cmps
adc
call
add
cld
cmp
push
je
push
adc
adc
(bad)
inc
sbb
repz
pop
rcl
mov
xor
je
mov
adc
mov
mov
shr
adc
stos
push
hlt
dec
je
movs
add
jns
pop
clc
mov
or
mov
ja
or
les
and
cdq
and
jbe
sbb
cmp
or
out
jmp
cmp
test
je
sub
or
xor
ja
dec
lods
aas
test
cli
cmp
cmc
fldenv
call
cmp
inc
fwait
push
push
aaa
push
adc
fs
pop
cli
mov
enter
jne
jo
sub
or
cli
std
xchg
and
(bad)
jne
bound
or
stos
pop
popa
scas
jg
push
mov
or
data16
mov
add
jb
inc
out
ins
sbb
pop
sub
jge
cmc
icebp
and
repnz
dec
xor
cld
(bad)
out
jmp
push
pusha
push
jb
dec
xor
cli
js
mov
or
cmp
or
mov
adc
test
into
nop
xchg
xor
push
push
push
(bad)
jecxz
inc
mov
jg
sub
cmp
(bad)
pop
ja
aas
cmp
sub
xor
sub
dec
jmp
mov
lea
xchg
xor
inc
out
push
stos
or
movaps
in
mov
cmp
and
jno
pop
mov
jmp
cdq
push
push
xchg
jmp
ja
(bad)
out
jbe
jbe
sub
stc
adc
inc
sub
add
mov
mov
add
mov
(bad)
std
mov
dec
or
sub
mov
jns
dec
repz
jmp
aaa
scas
push
mov
xor
test
adc
adc
xchg
dec
ret
inc
aam
int3
dec
jmp
sbb
repz
inc
adc
popf
mul
shl
xchg
jg
add
jns
outs
or
push
dec
xlat
mov
outs
in
jl
sbb
addr16
cmp
(bad)
fbstp
jg
je
sar
imul
dec
mov
out
xor
test
push
add
(bad)
idiv
cmc
xor
(bad)
xchg
je
jmp
sub
arpl
cmps
jnp
(bad)
and
out
cwde
xchg
nop
and
dec
fistp
stos
(bad)
imul
mov
push
jnp
fstp
(bad)
sti
or
push
mov
je
and
sub
aam
adc
pop
xor
xchg
adc
push
push
(bad)
call
test
push
push
jp
sub
sub
out
jp
or
aas
xor
add
repz
push
enter
fs
mov
and
push
and
dec
call
ret
movs
call
or
adc
retf
sbb
arpl
mov
xor
mul
iret
sub
into
fcomip
dec
inc
xor
and
cli
es
jns
scas
and
inc
leave
jae
push
push
cdq
rcr
mov
pop
jl
xchg
das
fidivr
inc
inc
fwait
inc
xchg
ja
push
and
sti
sub
sti
call
ret
mov
movs
test
mov
call
repz
and
js
jecxz
xchg
add
and
sbb
lock
mov
ror
add
mov
pop
mov
cmp
jmp
aam
and
into
pop
les
nop
cmp
add
or
and
call
fsub
inc
xchg
jmp
inc
pusha
test
inc
sub
stc
dec
or
cli
xlat
sti
pop
sub
adc
push
mov
mov
outs
sbb
(bad)
fwait
hlt
(bad)
shr
in
cmc
jo
fmul
repz
jmp
mov
fidivr
call
arpl
repnz
dec
jns
dec
(bad)
movs
(bad)
jmp
(bad)
dec
add
sbb
adc
js
rcr
out
ret
cmp
cmp
jecxz
mov
pusha
cmp
inc
push
sub
xchg
shr
jmp
jp
adc
jmp
pusha
inc
scas
jg
addr16
mov
lods
mov
call
xor
push
addr16
gs
sbb
and
adc
aam
inc
jg
mov
lahf
push
test
mov
xchg
(bad)
sbb
imul
xlat
adc
and
push
jmp
mov
out
shr
dec
jg
sbb
pop
or
test
lea
aad
hlt
sbb
fdiv
add
clc
cmps
push
and
xchg
adc
shl
dec
retf
sbb
sub
xchg
nop
iret
mov
push
inc
stos
push
fdiv
push
movs
lock
inc
inc
fmul
fdivr
mov
gs
loop
popa
dec
lea
push
xor
je
and
fnsave
mov
mov
in
mov
mov
repz
xlat
aaa
pop
adc
push
cmp
les
outs
add
pop
cmp
xor
mov
out
push
into
pop
cmp
sub
es
shl
adc
ds
jecxz
inc
repnz
mov
xor
test
fcom
ins
sbb
fwait
movs
inc
not
ror
xor
xchg
push
jmp
movs
or
mov
and
xor
scas
fild
lods
pop
mov
jne
jmp
(bad)
cli
addr16
outs
sub
and
add
mov
std
stc
adc
cld
call
dec
add
cmp
mov
stc
pop
adc
pusha
dec
imul
inc
push
ror
inc
xor
je
test
sbb
or
(bad)
push
scas
xchg
movs
enter
xchg
or
adc
je
(bad)
xor
inc
xor
les
or
or
mov
add
jae
mov
push
jge
mov
push
cwde
enter
cmp
pop
sub
and
push
mul
std
dec
nop
test
dec
sbb
jb
add
jmp
jmp
push
out
dec
push
test
inc
inc
jmp
cld
push
nop
iret
dec
test
pop
add
loop
inc
mov
dec
and
inc
es
push
mov
and
je
or
push
or
test
movaps
dec
sub
dec
inc
fimul
dec
add
shl
inc
inc
inc
outs
push
popa
sbb
mov
icebp
movs
cld
and
pop
push
mov
push
dec
adc
pop
and
sub
jbe
popf
and
in
sbb
jmp
jmp
inc
outs
sbb
mov
in
mov
mov
or
push
fdivr
adc
fidivr
ins
adc
mov
mov
jmp
xor
les
cmovl
neg
je
cmps
inc
dec
sub
dec
adc
xor
cwde
mov
push
adc
pop
push
int3
mov
out
sahf
int
adc
xchg
push
dec
xchg
xchg
dec
std
sub
dec
inc
cwde
hlt
add
mov
or
adc
cmp
inc
ret
or
int3
inc
or
aaa
jmp
or
(bad)
retf
fdivr
shl
ror
jg
add
mov
dec
stc
mov
dec
(bad)
jecxz
push
xor
in
push
jmp
and
call
and
xchg
scas
in
pmaxub
sbb
jle
scas
lock
sbb
jmp
adc
pushf
pop
cmp
xor
int3
xor
(bad)
ss
sbb
lock
clc
jo
xor
lods
mov
fisttp
xchg
call
(bad)
aas
and
push
test
jnp
push
cmp
mov
and
cmp
mov
popa
popf
rcl
mov
jne
xor
add
aaa
add
xor
push
jg
jl
inc
add
mov
mov
inc
push
adc
push
loop
and
or
dec
jnp
sub
sbb
push
push
cmp
(bad)
stos
dec
add
sbb
data16
dec
dec
or
adc
mov
jp
inc
pop
xchg
out
and
iret
lds
mov
add
outs
or
imul
and
call
mov
mov
pushf
out
lea
add
ftst
add
adc
mov
lods
add
sub
sub
push
retf
push
push
dec
add
pop
xchg
retf
retf
sub
imul
jne
stos
sbb
adc
lea
in
inc
fs
test
fdivr
jnp
out
pop
mov
into
fwait
adc
cmp
jl
ret
fdivr
push
pop
jne
pop
xchg
mov
int3
or
mov
cmp
bound
cmp
call
repz
jne
cmp
lock
stc
sbb
jmp
ret
pop
sbb
mov
sbb
add
and
dec
push
ins
inc
cdq
xchg
sub
adc
xor
inc
dec
f2xm1
gs
int
xchg
sub
test
inc
add
enter
pop
add
lea
sub
fidivr
nop
popa
aam
inc
sub
jne
pop
ss
mov
mov
pop
repz
cs
dec
adc
and
iret
cmps
pop
xor
fs
(bad)
mov
dec
inc
and
imul
pop
stc
sbb
mov
and
jns
or
inc
outs
and
mov
or
mov
dec
hlt
fsubr
adc
fadd
fst
xchg
cmp
sub
mov
adc
outs
inc
aaa
fmul
mov
mov
ja
fisubr
bnd
inc
fild
test
sbb
aaa
jmp
fbld
mov
sbb
push
jno
cmp
sete
sbb
cs
enter
lds
imul
cmps
out
iret
mov
and
push
and
adc
jmp
mov
push
aas
xor
mov
dec
jmp
jge
movs
mov
stos
add
in
or
mov
adc
mov
shl
jno
jmp
call
mov
xchg
push
pushf
sbb
or
in
or
jle
int
out
mov
or
ja
std
jnp
lahf
and
aaa
test
fwait
das
movntps
neg
rcr
aas
push
test
or
cmp
jg
sbb
pop
dec
jmp
sbb
push
push
outs
adc
mov
inc
mov
outs
fs
inc
jns
dec
adc
call
mov
movs
div
lods
or
pop
cwde
(bad)
std
and
loope
je
mov
ja
sub
test
xlat
(bad)
out
push
dec
std
inc
pop
inc
jnp
gs
lahf
lea
jmp
cwde
gs
sbb
add
(bad)
js
aad
cmp
pop
pusha
out
sub
test
and
jb
(bad)
mov
call
mov
pop
adc
xor
add
ins
push
aam
adc
into
pop
pusha
cmp
addr16
fsubr
pusha
cmps
mov
pop
mov
jne
dec
or
pop
jne
dec
push
adc
stos
mov
iret
into
das
test
enter
repz
mov
jns
inc
cmp
mov
je
pop
inc
aas
std
sbb
dec
shl
xchg
jmp
call
xor
xor
test
sub
cmp
mov
dec
fwait
and
sbb
pop
inc
jnp
(bad)
mov
dec
mov
jmp
sahf
jnp
and
or
mov
mov
sub
jbe
xor
aaa
and
daa
cmc
push
lods
in
cmp
fist
addr16
call
test
iret
movs
adc
adc
push
push
add
sub
fisttp
lods
jge
mov
xor
(bad)
xchg
xlat
pusha
adc
adc
or
mov
iret
dec
mov
sbb
fucomi
into
lahf
cdq
cmp
neg
js
push
cwde
push
add
int3
into
call
add
jg
in
sub
ds
lods
into
repz
jne
mov
fisttp
movs
cmp
cwde
xchg
sub
mov
out
jg
movs
nop
in
into
sti
test
pusha
mov
and
(bad)
aad
push
adc
adc
retf
rcl
test
xor
mov
fild
push
jle
out
popf
mov
inc
dec
popf
(bad)
mov
mov
test
mov
inc
add
or
dec
inc
add
cmp
outs
adc
mov
cdq
pop
aaa
dec
sbb
in
mov
push
jno
and
mov
add
repnz
pop
jecxz
cmps
dec
rcl
iret
cli
std
and
and
mov
std
je
repz
addr16
scas
adc
xlat
fwait
ds
or
adc
pop
mov
sar
push
inc
sub
arpl
jg
jbe
pop
add
fist
mov
mov
push
lods
xor
loop
int
adc
adc
inc
sub
shl
fmul
out
les
popa
mov
gs
clc
push
or
std
or
sti
cli
popf
call
or
popf
pop
add
mov
mov
aad
push
cli
cdq
hlt
mov
int3
out
stc
lods
push
push
(bad)
enter
das
cmp
and
ficomp
aad
ficom
or
add
mov
pop
(bad)
xchg
mov
cmp
mov
dec
xlat
stc
aas
bound
xor
xlat
stos
ja
jmp
repnz
test
or
call
cmc
xadd
push
cmps
arpl
je
xchg
fistp
inc
movs
(bad)
xor
mov
sti
sbb
mov
in
lahf
xchg
retf
jmp
into
mov
dec
ja
retf
sar
adc
je
mov
test
nop
jne
lahf
movs
jmp
je
cmp
ror
lods
cs
fstp
mov
dec
adc
jg
fbld
fldlg2
je
xchg
xor
loope
sbb
jne
pop
dec
ja
dec
push
mov
clc
lock
test
cmps
and
test
dec
mov
add
stos
ja
sbb
cmp
pop
in
sti
cmp
push
cdq
aad
sti
daa
push
adc
mov
jnp
xchg
jg
ror
or
xor
repz
cmp
mov
neg
jg
xor
pop
scas
pop
jmp
shl
lods
adc
(bad)
(bad)
dec
xchg
pop
pusha
fbstp
jmp
mov
nop
mov
pop
and
call
clc
nop
add
addr16
cdq
movs
adc
mov
dec
add
test
stos
jne
in
push
sub
sub
daa
push
add
lock
lock
lock
ds
mov
pusha
fs
push
test
je
mov
pop
mov
xchg
add
call
cdq
repz
popf
push
xchg
or
jbe
mov
or
jnp
(bad)
xchg
sbb
enter
jl
stos
int3
fabs
mov
fcmovnbe
pop
or
fyl2xp1
fyl2xp1
cmp
imul
stc
fyl2xp1
fwait
loopne
in
rcr
stc
sti
call
add
adc
fs
retf
dec
mov
add
mov
ins
jmp
add
pop
pop
dec
jg
gs
push
pop
jnp
loopne
fcomp
and
dec
and
dec
mov
pop
imul
movs
fwait
mov
in
sub
jge
sti
outs
popa
or
push
imul
cmc
adc
jg
adc
push
push
test
and
sbb
arpl
pop
lock
or
xchg
or
aas
sbb
push
pop
repz
loopne
popa
in
dec
inc
pop
arpl
mov
and
mov
xchg
adc
test
inc
jle
pushf
out
jmp
mov
push
inc
sbb
in
push
mov
jp
inc
pop
ror
pop
pop
arpl
lods
or
pop
sbb
pop
add
cmp
out
adc
jae
int3
fld
cmp
adc
js
retf
or
cmovbe
fsub
inc
cmps
jne
dec
leave
les
retf
stos
mov
mov
jl
mov
call
cmp
les
call
je
stos
push
adc
cwde
iret
(bad)
fisub
push
sub
cld
sub
fcomp
addr16
je
icebp
jb
push
mov
enter
push
add
dec
sub
dec
inc
lock
bound
push
adc
ins
or
fwait
or
pop
sbb
(bad)
mov
jns
retf
dec
pop
sub
push
sub
push
push
inc
bound
mov
dec
add
inc
daa
jmp
ret
aaa
data16
adc
and
leave
loopne
lock
pop
inc
test
enter
sti
xor
mov
shl
inc
leave
push
sti
inc
cmp
daa
jmp
test
mov
hlt
xor
in
sub
or
(bad)
hlt
enter
mov
loopne
imul
push
or
mov
enter
es
jecxz
lahf
sbb
cmp
pop
fist
enter
jb
cmps
js
daa
jl
push
cmp
and
sar
add
sub
or
fstp
jnp
mov
mov
fdivr
popf
int3
or
das
or
xchg
sbb
push
int3
cdq
add
dec
dec
pop
clc
sbb
sub
push
dec
clc
pop
mov
inc
pop
out
add
pushf
pop
xchg
hlt
mov
bound
cmp
xor
dec
or
adc
push
dec
(bad)
mov
sub
dec
pop
sub
ficomp
or
sub
push
jno
push
nop
cli
adc
shr
push
dec
shr
xchg
pusha
pusha
or
ret
mov
mov
(bad)
sub
inc
sub
in
add
or
in
cmp
push
cdq
mov
stos
scas
push
cmp
ret
pushf
aam
aas
and
or
aam
add
cmps
ret
cmp
iret
mov
or
mov
imul
fidivr
rcl
call
and
movs
jno
and
inc
xor
xor
sub
or
and
mov
dec
imul
mov
add
inc
in
and
mov
ja
call
loopne
inc
idiv
inc
neg
sub
inc
xlat
das
es
and
and
push
and
adc
in
mov
push
dec
retf
add
pop
pop
inc
mov
xchg
les
popf
adc
les
rcl
pop
test
add
adc
and
jno
data16
test
retf
js
stos
(bad)
lea
pop
test
jnp
push
inc
test
xchg
add
sub
jno
mov
mov
les
sbb
out
mov
into
mov
mov
ret
je
adc
and
cmc
pop
in
jge
inc
dec
sub
mov
data16
arpl
mov
and
xor
std
xchg
rcr
pushf
mov
xor
popf
xor
scas
les
mov
or
xor
or
inc
fs
xor
mov
push
push
sub
cdq
sub
push
xchg
jb
pop
sbb
pop
push
xor
push
cmp
aam
pop
pop
xor
sbb
test
mov
jo
bound
xor
push
jle
cs
push
and
lea
pop
das
mov
aad
pop
nop
or
mov
js
js
push
mov
sar
mov
xchg
sar
jnp
push
jle
push
cmp
stos
fs
stc
loop
je
mov
pusha
retf
pop
xor
sub
lahf
jle
or
int3
inc
xchg
adc
mov
mov
push
jno
dec
sbb
sbb
test
jle
sub
sub
jmp
adc
movs
xor
shl
and
jb
and
adc
dec
(bad)
test
jne
add
imul
jb
and
push
bound
rol
inc
mov
mov
pop
cmps
dec
lds
adc
(bad)
dec
nop
add
add
sahf
lock
imul
inc
jae
iret
dec
push
loopne
push
and
out
jmp
xchg
or
or
js
jmp
fldcw
repnz
push
sbb
stos
add
dec
xchg
fsubr
int3
and
dec
mov
and
sbb
mov
mov
dec
lds
or
popf
test
jmp
push
in
or
out
test
push
dec
push
dec
xchg
dec
inc
dec
std
pop
and
test
mov
retf
xor
or
adc
pop
lds
push
fwait
sub
imul
imul
push
pop
mov
mov
mov
or
lds
jb
test
jo
aaa
aaa
sbb
mov
add
jo
ret
or
push
test
add
dec
or
mov
mov
dec
jbe
mov
inc
outs
shl
and
fwait
dec
aam
fsub
inc
cwde
adc
lds
jecxz
mov
or
or
sti
popf
(bad)
xchg
xchg
and
iret
enter
jo
(bad)
or
jne
adc
outs
xchg
cmp
dec
xchg
sti
push
rcr
(bad)
ins
add
pop
dec
mov
xchg
sbb
mov
pop
and
inc
or
aad
test
cld
push
lock
adc
nop
adc
mov
dec
adc
mov
or
adc
out
push
(bad)
adc
jmp
inc
xchg
retf
xchg
jns
mov
xchg
push
adc
test
xor
ja
add
mov
inc
mov
jb
jne
mov
push
xchg
jns
inc
std
adc
mov
inc
dec
rcr
xchg
stos
adc
std
adc
sbb
jae
sub
jo
pop
sbb
sub
and
icebp
in
push
retf
in
xchg
xchg
rcr
push
gs
xor
mov
jns
ret
rcr
cmp
cs
jle
adc
out
leave
mov
rcr
pop
xchg
es
push
bound
pushf
sbb
and
or
nop
or
and
or
push
mov
in
sub
pop
nop
in
pop
inc
jle
lea
push
test
adc
lea
or
sub
nop
push
loope
lds
add
out
lods
adc
fs
dec
nop
inc
xchg
add
jnp
shr
imul
jae
dec
pushf
jg
(bad)
jg
shr
imul
rcl
mov
xchg
xchg
jle
mov
or
inc
jo
shl
ins
sbb
sub
movs
lahf
mov
sar
lea
push
aam
jo
mov
ret
out
adc
push
lock
sub
shr
mov
adc
(bad)
fadd
xor
and
repz
sbb
mov
inc
loope
pushf
ficomp
jno
in
push
ss
scas
or
mov
add
(bad)
or
test
pop
inc
hlt
mov
scas
int
lds
push
lea
cmp
test
dec
mov
loop
sub
cmp
xchg
inc
inc
inc
(bad)
pop
out
cmp
mov
mov
lods
xchg
out
test
dec
arpl
inc
sahf
cdq
fnsave
fdivr
push
sbb
add
sub
dec
xchg
mov
daa
lods
in
dec
jne
and
and
jmp
push
adc
xlat
add
xchg
push
inc
sub
or
sbb
or
and
adc
sub
xor
outs
ror
or
jmp
adc
jp
shr
nop
cmp
shr
xlat
loope
pusha
fdivr
popa
int3
ja
jno
daa
mov
mov
adc
ja
aam
xchg
push
adc
retf
push
dec
cdq
dec
adc
cmp
ja
je
xchg
mov
les
sub
sahf
adc
pushf
jl
and
es
repz
push
adc
jo
fidivr
xchg
sbb
in
sbb
sub
dec
cld
xchg
xlat
cwde
mov
xchg
mov
pop
pop
xor
push
adc
jb
or
jae
ror
cmp
push
call
sbb
inc
(bad)
adc
ret
sbb
std
sbb
push
sbb
loop
mov
fs
in
(bad)
fisubr
adc
call
xlat
ror
push
mov
sub
fisubr
and
xor
ss
mov
adc
adc
sbb
pop
add
push
je
fwait
xchg
xchg
cs
in
jne
iret
ss
mov
fwait
mov
sub
xchg
adc
jge
cs
arpl
scas
mov
jmp
mov
jmp
dec
pushf
mov
sbb
in
jmp
inc
call
mov
xchg
and
es
popa
dec
pop
aad
or
pop
retf
inc
push
cwde
(bad)
test
push
cs
nop
push
(bad)
fidiv
xchg
(bad)
int
mov
dec
xchg
ins
loope
dec
sbb
rol
cmp
cmps
je
xor
repnz
dec
loope
adc
mov
adc
push
sar
push
xlat
mov
call
mov
mov
pop
bound
outs
xor
mov
pop
clc
nop
xchg
sub
mov
xchg
call
push
adc
inc
push
rol
add
(bad)
push
or
leave
jne
cwde
lods
inc
ins
jge
push
adc
jle
xor
js
retw
lock
add
jmp
cld
aaa
test
and
jae
or
mov
lds
enter
add
test
jb
pop
push
cmp
mov
clc
lods
fldz
or
inc
jmp
xchg
pop
std
stos
hlt
add
or
test
test
aaa
std
call
fdivr
sub
lods
outs
add
mov
push
push
int
mov
iret
into
mov
jno
cmps
xchg
xchg
sub
shl
and
and
adc
ds
push
dec
aad
mov
pextrw
nop
add
dec
int3
add
cdq
test
in
add
aad
mov
jg
push
inc
dec
mov
pop
call
xor
lds
inc
in
jl
call
xor
mov
fistp
jmp
pop
or
mov
dec
in
cmp
dec
mov
ficomp
mov
enter
dec
aaa
xchg
test
lds
or
jno
int3
ss
push
or
mov
sub
test
mov
dec
push
xor
push
jmp
sahf
mov
cmps
push
dec
mov
jmp
add
loop
into
mov
fdiv
adc
add
arpl
gs
sub
mov
mov
iret
pop
and
lock
stc
push
icebp
or
add
gs
or
pmulhuw
movzx
cmp
push
or
cmp
push
mov
and
or
test
call
stc
add
xor
sub
dec
sbb
in
dec
icebp
cmp
mov
push
loopne
cmp
jnp
clc
xchg
pop
cmc
outs
mov
fcom
repz
or
test
jbe
popa
das
jl
mov
sbb
or
out
mov
dec
jmp
inc
inc
loopne
scas
inc
(bad)
and
dec
sbb
sbb
clc
cmp
jmp
dec
repz
cmps
jmp
test
hlt
mov
cmp
fs
in
sub
stos
cmp
jmp
pop
in
or
cmp
rol
adc
rcr
sbb
inc
and
leave
or
sub
jl
test
push
cmp
inc
adc
xor
mov
sub
mov
mov
repnz
adc
cmps
inc
inc
lock
iret
xchg
test
sbb
xchg
mov
in
les
cmp
and
loopne
inc
adc
or
movs
xor
data16
mov
lock
movzx
arpl
add
std
pop
add
add
inc
call
push
jne
mov
push
test
push
adc
hlt
fdivr
dec
push
xchg
or
or
pop
nop
inc
adc
in
mov
cmps
sbb
mov
clc
pop
call
push
sbb
push
mov
cmp
pusha
inc
inc
dec
fxtract
adc
push
sub
jge
jne
retf
push
fisttp
stos
iret
jmp
fcomip
inc
iret
push
out
jbe
cmovs
mov
sub
mov
shl
test
and
and
inc
jno
and
imul
pop
fs
adc
ss
out
movs
adc
fwait
cmp
sub
xor
hlt
(bad)
xor
or
mov
or
clc
cmps
cmp
push
fsub
mov
xchg
cmp
mov
fisttp
(bad)
mov
adc
test
and
stc
mov
sbb
stos
scas
lods
cmp
lods
cmps
jmp
push
dec
jl
arpl
inc
adc
mov
(bad)
push
and
sahf
arpl
hlt
dec
ret
push
push
add
mov
(bad)
rcl
lea
cmp
sub
lock
mov
ss
sar
cdq
out
es
add
lock
push
test
add
mov
mov
sub
adc
cs
mov
cmp
push
repz
mov
hlt
sbb
mov
sti
dec
js
retf
cmp
xchg
or
test
in
and
inc
jmp
mov
clc
or
fst
or
add
inc
std
add
adc
xchg
shl
push
std
push
push
test
stos
arpl
push
bound
mov
lods
test
push
out
jmp
jecxz
adc
push
(bad)
mov
out
add
mov
mov
test
dec
call
in
dec
popa
push
aam
mov
jmp
xchg
test
push
dec
add
pushf
inc
mov
push
aas
adc
and
push
dec
mov
dec
mov
in
fwait
push
sbb
je
push
pop
cli
xchg
and
or
js
aam
and
cli
mov
push
data16
xchg
inc
je
call
test
add
not
int
push
adc
ret
retf
cs
ret
jmp
sub
jno
stos
cdq
loope
movs
ins
popf
test
jp
or
and
ret
arpl
push
dec
adc
dec
movs
call
stc
add
ja
aas
jno
fdiv
rcr
sti
add
aam
adc
push
cmp
xchg
loopne
retf
leave
dec
ins
(bad)
xchg
sub
scas
xor
inc
out
fsubr
adc
les
jp
dec
stos
or
add
or
and
in
adc
xchg
ins
adc
add
push
pop
xchg
jne
cmc
sar
inc
xor
cmps
mov
push
adc
add
pushf
jl
sub
and
sub
loope
lahf
or
ret
mov
xchg
xchg
jae
sar
dec
mov
sub
cmp
push
aad
jmp
dec
and
movs
jmp
or
addr16
std
lods
push
pause
push
mov
sbb
mov
icebp
ret
or
jb
outs
push
sub
sub
inc
and
xor
sbb
call
add
hlt
retf
jl
cli
push
mov
test
or
int
cmp
jl
sbb
into
out
push
sti
pop
mov
(bad)
out
ja
dec
fisubr
stos
sbb
pop
loop
jge
sub
out
test
mov
adc
in
mov
add
push
mov
xchg
xor
call
push
push
sbb
(bad)
popf
std
inc
sbb
mov
mov
popf
add
loope
xchg
mov
sar
pop
test
inc
fmul
inc
cmps
jle
fild
mov
addr16
push
inc
mov
and
inc
data16
push
cmp
ror
sub
xor
push
xor
fdivr
mov
add
and
cmp
pop
retf
ins
bound
or
inc
ins
(bad)
cmp
sub
mov
xor
xor
in
jne
sub
aaa
sbb
jmp
push
dec
dec
fist
xchg
adc
push
mov
dec
inc
xchg
loop
outs
stos
inc
lods
sbb
loope
nop
mov
push
adc
adc
mov
xor
in
test
sbb
fisub
movs
in
mov
test
jne
xor
inc
push
sbb
sub
and
adc
nop
adc
add
adc
fwait
jns
aas
enter
sbb
xchg
dec
sbb
push
cs
push
dec
and
ret
jle
int
and
fimul
data16
xchg
sub
and
and
cmp
inc
mov
cs
aam
or
jno
mov
xchg
xchg
adc
mov
out
sbb
out
pop
out
and
inc
push
in
inc
jmp
mov
fs
xor
xchg
push
fndisi(8087
mov
sbb
cmp
mov
ins
pop
mov
add
mov
fild
jecxz
js
adc
adc
jnp
lahf
inc
test
dec
cmp
jne
inc
fs
xor
xchg
jb
and
mov
inc
into
les
xchg
cwde
xlat
and
mov
dec
lea
addr16
add
arpl
cmps
mov
sbb
cli
xchg
cmp
les
or
icebp
ds
imul
jo
mov
adc
jne
jns
mov
es
mov
xor
mov
xor
(bad)
imul
inc
popa
inc
unpckhps
cld
jb
mov
or
mov
xchg
pop
sub
sub
or
sub
nop
jne
push
sub
pop
es
fldenv
mov
and
(bad)
lock
cwde
and
push
push
push
mov
sub
jg
cld
es
mov
mov
xlat
mov
mov
mov
sbb
dec
sbb
dec
sub
xor
bswap
adc
cmp
and
(bad)
adc
or
xchg
adc
(bad)
adc
cdq
inc
mov
cdq
pop
movs
in
push
sub
xchg
pusha
idiv
dec
mov
xlat
movs
push
cmps
dec
gs
cld
mov
scas
loopne
xor
rol
sub
inc
mov
aam
cmp
rcl
std
add
dec
xchg
addr16
pushf
xchg
movs
push
or
push
sbb
mov
adc
stos
dec
and
adc
dec
stc
retf
pop
inc
mov
mov
add
inc
stc
addr16
inc
push
mov
das
pop
pop
mov
inc
jae
adc
mov
add
cmp
push
je
mov
pushf
mov
add
jmp
push
push
daa
inc
ror
addr16
call
je
adc
pushf
dec
sbb
sub
pop
pop
xchg
lahf
dec
push
cmp
sbb
sbb
push
push
xor
aad
sbb
dec
int
fstp
das
xor
imul
(bad)
movs
jmp
adc
or
fild
ror
(bad)
imul
fcomp
int3
int3
adc
or
push
adc
pop
jg
mov
sahf
stos
ja
shl
push
enter
jmp
test
rep
mov
inc
rcr
fist
stos
cmp
loop
pop
mov
pop
mov
mov
sahf
add
dec
cli
ja
int3
shl
adc
adc
mov
test
mov
pop
test
(bad)
jg
dec
and
lods
inc
xchg
and
scas
and
test
cmp
inc
and
push
or
push
jge
scas
mov
fmul
push
fucom
lods
push
push
jbe
fwait
dec
dec
mov
lahf
adc
dec
not
jno
popf
mov
adc
mov
jno
mov
bnd
movs
sbb
rcl
dec
in
ins
movs
or
lods
inc
pop
ins
and
or
pushf
addr16
dec
or
leave
jo
ror
bound
cmp
test
or
jae
xchg
push
fst
imul
hlt
sbb
mov
push
sbb
loope
pop
xchg
jb
daa
push
mov
adc
imul
popa
aam
movs
cmc
(bad)
std
cdq
repnz
push
adc
sub
ret
fidivr
scas
xor
popf
int3
xchg
jp
dec
aam
push
call
in
out
and
push
mov
pop
inc
(bad)
nop
push
je
jmp
je
xchg
sub
push
mov
add
inc
int3
cld
sbb
pop
dec
and
push
(bad)
and
xor
ss
add
pop
lock
push
call
cmp
lods
icebp
popa
stos
mov
cwde
dec
xchg
mul
out
or
sbb
aam
mov
mov
sbb
test
ficom
out
fsubr
pop
fmul
mov
add
nop
inc
push
jno
js
rcr
mov
test
popf
and
sti
dec
adc
jne
fild
cmp
ret
xor
mov
mov
hlt
iret
dec
test
push
cmc
mov
sbb
mov
jno
lock
dec
and
push
inc
xor
in
inc
sti
(bad)
jmp
adc
(bad)
out
cdq
ins
cmp
push
aas
xor
xor
or
addr16
mov
cmp
call
jecxz
movs
lock
mov
repz
add
out
adc
jmp
mov
push
not
stos
mov
fwait
xchg
les
or
hlt
loopne
imul
cwde
enter
les
(bad)
pop
rcr
cmc
pop
fcomp
out
sbb
in
rcl
mov
sahf
test
dec
add
int3
leave
lea
test
add
dec
sbb
sbb
push
addr16
xor
dec
shl
movs
pop
call
mov
inc
ins
mov
mov
inc
xchg
fwait
adc
mov
lods
sbb
mov
enter
xchg
add
mov
in
add
out
mov
push
mov
mul
pop
cs
aas
or
sub
lds
lahf
cmps
cmp
and
and
mov
sbb
in
mov
add
popf
pusha
cwde
push
mov
add
dec
dec
mov
jnp
or
iret
fcomp
leave
or
fisubr
jns
test
outs
sub
add
xchg
fcmovb
test
(bad)
push
mov
adc
sub
sbb
mov
enter
pop
and
enter
mov
xchg
mov
and
mov
jmp
test
ds
(bad)
(bad)
xchg
lods
jecxz
adc
ret
and
mov
push
inc
hlt
mov
adc
cmp
mov
mov
or
sub
jg
jl
in
dec
out
mov
es
sub
into
pop
sbb
and
out
inc
adc
arpl
pop
stos
pop
es
or
aas
sub
outs
push
(bad)
or
outs
shr
(bad)
mov
fisub
mov
mov
push
(bad)
pushf
lds
or
jne
adc
jo
jnp
jne
jecxz
jge
cld
add
add
lea
push
arpl
je
pop
data16
or
fcomp
add
std
push
adc
sbb
sub
xchg
aam
mov
and
fstp
jmp
adc
pop
dec
neg
fucom
(bad)
in
inc
jmp
mov
and
jae
test
xchg
in
or
xor
fisubr
add
dec
lahf
pop
fcomp
dec
and
imul
inc
or
xchg
mov
or
sbb
rol
mov
adc
xor
imul
call
aam
adc
es
pop
data16
jbe
call
adc
or
mov
xlat
(bad)
adc
jmp
mov
std
and
aas
cld
test
lds
gs
or
pop
test
hlt
mov
gs
nop
xor
(bad)
std
test
std
adc
mov
arpl
xchg
cmp
jg
retf
xchg
fcomp
in
movs
jno
movs
inc
adc
das
xor
pop
push
inc
mov
test
outs
or
push
mov
add
(bad)
sub
mov
inc
cld
mov
and
xor
mov
int3
jno
push
or
or
cmp
outs
jmp
mov
jl
xor
mov
fst
add
and
(bad)
popf
rol
sub
ja
nop
push
mov
fistp
mov
push
jge
(bad)
daa
add
test
push
push
lods
mov
dec
jl
int3
mov
mov
jmp
in
test
ret
sar
push
xchg
dec
mov
xchg
push
mov
add
dec
(bad)
lods
inc
cmc
les
lods
hlt
sub
push
mov
inc
inc
sbb
push
mov
bound
stos
fstp
push
jae
sub
pop
gs
mov
cmc
lods
int3
test
test
mov
std
dec
cmp
xor
sbb
cmp
jmp
addr16
jns
add
add
jno
enter
or
les
dec
mov
icebp
add
xchg
cmps
mov
cli
jne
xchg
pop
pop
test
pop
dec
imul
inc
(bad)
aam
xor
dec
xor
or
pop
jbe
and
inc
nop
jmp
sbb
mov
fst
addr16
addr16
jge
and
aam
sub
div
adc
int3
jb
cmp
push
adc
pusha
add
and
adc
aam
add
or
mov
pop
add
lods
mov
inc
cmp
inc
mov
cmp
dec
dec
gs
jnp
pop
or
jnp
call
into
mov
add
adc
mov
mov
and
or
jmp
xchg
stos
fnstenv
push
xor
mov
or
jne
jno
cmps
inc
pop
sub
add
and
ret
sbb
inc
pop
cs
xchg
xor
and
adc
jge
mov
sbb
jb
mov
int3
sbb
xor
xchg
dec
pop
inc
dec
shl
mov
les
sub
cs
out
pusha
or
nop
push
add
inc
push
sti
nop
push
push
jmp
push
fst
jecxz
dec
xchg
out
mov
cmp
imul
pusha
ss
mov
dec
inc
leave
hlt
vpor
cmp
imul
icebp
and
cmp
mov
mov
dec
movs
test
adc
pop
call
mov
mov
mov
dec
retf
and
leave
out
adc
cmp
loopne
loopne
jge
mul
imul
cmp
or
cmc
sub
sub
mov
sub
popf
loope
adc
xor
lods
jne
jns
or
xchg
dec
cdq
add
clc
push
cmp
mov
shl
je
cmps
lods
dec
movs
push
(bad)
pop
mov
fldenv
push
or
mov
or
xor
fisub
cdq
pop
gs
(bad)
and
mov
outs
mov
daa
push
shl
fwait
pusha
(bad)
cmc
adc
mov
xor
or
push
jne
mov
mov
retf
movs
movs
push
jmp
neg
dec
dec
dec
aam
dec
popf
dec
aam
cmp
out
add
(bad)
jmp
aam
mov
mul
inc
call
and
inc
sub
pop
cmp
cmc
push
mov
or
mov
sub
xchg
arpl
fcom
dec
mov
ins
shr
inc
mov
cmp
mov
loopne
jno
push
neg
daa
inc
adc
dec
call
daa
sub
xor
jl
pop
pop
mov
and
sub
sub
aaa
in
push
lock
jmp
sbb
ret
jnp
gs
xchg
xchg
test
jp
fucomi
adc
(bad)
jmp
sub
es
cwde
jne
cdq
sbb
or
pop
and
imul
push
adc
mov
cmp
xchg
bound
mov
pop
add
mov
cmp
ins
adc
mov
mov
cmp
nop
loope
pop
adc
leave
jne
adc
mov
in
loop
push
sub
or
or
repz
jno
adc
push
xchg
adc
mov
add
test
mov
push
xor
and
push
sbb
lods
rcr
inc
add
dec
xchg
push
mov
loop
cmc
fdivr
xor
inc
pop
cmp
add
test
es
sbb
gs
sub
ja
(bad)
(bad)
(bad)
push
pushf
dec
add
shr
ret
cli
or
aad
or
push
and
movs
fist
pop
mov
push
aas
lods
fld
fwait
scas
out
xor
cmp
stos
and
sub
mov
dec
push
inc
pop
out
movs
adc
retf
inc
stc
mov
fcomi
mov
dec
pop
mov
iret
add
mov
es
dec
or
sti
sub
frstor
es
sub
imul
ja
xlat
sbb
inc
pusha
cmp
mov
mov
(bad)
(bad)
fild
mov
mov
nop
test
in
mov
mov
add
cmps
js
cmp
sbb
mov
xchg
cwde
jbe
adc
pop
bound
push
fwait
dec
ds
and
(bad)
fst
sti
sti
adc
mov
and
not
mov
or
lods
pop
sti
xor
outs
int
mov
in
xor
add
add
add
mov
(bad)
pop
jae
push
popf
cmps
dec
dec
add
add
or
dec
add
test
aam
xor
leave
mov
push
mov
stos
clc
cmp
pop
fild
mov
and
mov
pop
inc
test
add
std
icebp
loope
cwde
mov
jl
and
mov
cmp
push
xor
cmps
dec
add
test
bound
cmp
jo
bound
daa
jne
or
push
xor
and
push
dec
mov
sub
mov
sti
movs
or
push
inc
ror
xchg
add
push
popa
cmp
sub
push
push
int3
imul
push
push
add
shr
lock
jl
and
and
dec
pusha
pop
cmp
cmp
mov
dec
retf
sub
stos
or
dec
call
push
cmp
clc
sub
pop
addr16
add
pop
test
mov
int
inc
mov
push
mov
xor
inc
or
push
jge
test
nop
or
mov
jecxz
in
push
rol
jns
dec
jae
mov
pushf
in
adc
sub
mov
rol
call
(bad)
les
pushf
jl
jmp
leave
fmul
call
push
aad
call
inc
hlt
aas
stos
std
or
and
sti
xchg
mov
or
pop
xor
dec
fdiv
dec
pop
xlat
mov
outs
(bad)
cwde
ins
mov
mov
ins
push
pop
dec
push
(bad)
inc
sbb
mov
pusha
aaa
leave
push
(bad)
aam
nop
pop
pop
mov
cmp
enter
aas
push
cmps
push
or
and
add
sbb
arpl
fimul
inc
or
ja
jmp
in
hlt
add
mov
dec
mov
test
and
jne
imul
jns
mov
push
inc
in
cmp
dec
add
cmps
or
mov
push
call
push
out
or
lods
mov
pop
pop
lea
daa
xchg
xchg
jp
(bad)
std
gs
pop
or
fstp
sbb
add
call
sbb
adc
or
sub
stos
or
xchg
sub
or
icebp
jne
or
cmp
dec
ins
fimul
cmp
sbb
or
cdq
inc
sub
xor
dec
pop
jl
mov
frstor
xor
dec
es
imul
es
aaa
test
ins
mov
jne
sbb
retf
or
pop
ss
test
lea
push
dec
retf
xchg
mov
ja
rcl
unpcklps
retf
dec
pop
mov
push
repnz
imul
push
push
or
mov
add
mov
jp
xor
add
adc
xchg
add
sbb
adc
fdivrp
add
inc
adc
inc
pop
in
popa
fiadd
mov
mov
shr
push
push
jne
pop
adc
adc
and
mov
jl
mov
or
mov
daa
fidivr
and
(bad)
call
loopne
xor
pop
and
fsub
int3
cld
lods
cmp
sub
mov
mov
test
sbb
mov
ins
inc
test
cmp
js
add
mov
dec
dec
lea
pop
sahf
inc
xchg
sbb
sbb
pushf
dec
sbb
sbb
inc
shufps
sub
sbb
push
or
adc
lahf
inc
jbe
push
sub
cmp
jmp
or
inc
dec
ret
adc
data16
or
mov
mov
jne
out
push
int3
push
mov
loop
out
cmp
sbb
cmp
sub
mov
mov
ret
mov
xor
pop
and
cmp
test
jno
or
push
aaa
dec
inc
xchg
cwde
add
and
mov
sbb
push
sub
pusha
pusha
xor
mov
add
addr16
add
and
lods
xor
retf
push
dec
xchg
adc
and
add
mov
and
add
cmp
or
in
jge
xchg
ror
cmps
adc
or
cmp
adc
mov
aam
push
pop
ss
mov
push
cs
clc
movs
(bad)
adc
jae
lahf
enter
scas
cmp
mov
push
es
or
or
or
mov
nop
xor
and
iret
inc
dec
(bad)
dec
ficomp
dec
fidivr
xor
add
xor
leave
xchg
test
fsub
js
dec
lods
xchg
std
mov
cmp
xchg
and
je
lock
lea
sub
(bad)
cld
scas
push
dec
push
pop
icebp
and
inc
movs
mov
xchg
jmp
jge
dec
ret
cmp
fmul
sub
(bad)
pop
test
sbb
inc
mov
inc
or
enter
sub
and
mov
mov
mov
mov
test
xor
jge
test
dec
sbb
inc
sbb
aas
jp
das
mov
sub
ss
push
rcr
ins
xchg
sub
outs
pop
and
in
sbb
test
adc
gs
loope
push
ficom
sub
das
(bad)
and
(bad)
jmp
jo
sti
sub
out
sbb
and
add
jb
inc
adc
ss
js
mov
adc
call
inc
(bad)
dec
lea
cmp
adc
inc
push
es
call
sbb
push
push
jmp
xchg
mov
(bad)
sub
sbb
loopne
lea
mov
dec
mov
mov
xlat
add
xchg
mov
cwde
and
mov
inc
add
cmp
pop
adc
dec
jge
add
jns
test
in
and
clc
cdq
pop
add
push
cmp
scas
fistp
fnstcw
pop
xchg
mov
xchg
rcr
xor
test
mul
cmps
imul
fist
push
push
push
xor
mov
fwait
inc
push
add
sbb
invd
sbb
je
inc
out
dec
pop
push
or
pop
shl
test
or
adc
adc
sbb
xor
jmp
sbb
inc
aad
sahf
je
push
jmp
jo
ja
fsubr
push
adc
and
push
hlt
outs
ficomp
mov
out
push
stos
mov
jo
cmp
push
in
mov
cmp
cs
add
add
add
test
push
add
and
xchg
pop
pop
xor
fidiv
mov
sbb
call
mov
das
in
mov
mov
rcl
cli
and
mov
mov
push
movs
pop
mov
not
mov
cmc
adc
mov
js
lods
les
(bad)
or
mov
push
pop
mov
mov
dec
pop
mov
sub
mov
daa
mov
inc
das
push
loop
xor
arpl
mov
xor
xlat
push
test
(bad)
cmp
test
mov
jo
jbe
adc
lds
adc
inc
adc
dec
fnsave
adc
fimul
test
jecxz
stos
add
push
mov
les
dec
fld
shr
sbb
push
enter
addr16
pop
jno
test
fs
push
lods
les
sub
cmp
push
sub
jmp
std
sub
push
inc
cmp
push
mov
jl
imul
mov
sbb
cmp
inc
inc
inc
sbb
mov
pop
mov
mov
dec
int
nop
jge
enter
and
ror
cmc
je
sbb
xor
rcl
mov
push
je
mov
push
int3
mov
inc
or
popa
inc
sub
push
cmp
cld
inc
(bad)
stos
mov
mov
in
fmul
fdiv
fsub
fsubr
sub
jmp
shr
push
in
mov
lahf
xchg
and
add
or
xor
fs
adc
xchg
gs
(bad)
leave
mov
adc
aam
loopne
inc
in
xor
(bad)
pusha
and
test
cmp
and
lods
cmp
or
push
adc
push
or
mov
repnz
adc
sar
loopne
aad
xor
xchg
or
mov
sub
es
and
int3
add
cmp
jb
out
mov
data16
or
pop
lds
enter
iret
movs
xlat
cmp
push
and
les
push
lea
test
gs
dec
stos
cmp
nop
outs
push
aam
adc
cmp
sbb
cs
push
pop
push
int3
mov
pusha
mov
call
fwait
sub
adc
loope
iret
test
lea
shr
and
ins
es
inc
dec
sbb
inc
dec
rcl
or
jmp
mov
sub
mov
jl
loopne
arpl
xor
adc
jnp
nop
push
xor
ds
push
mov
popf
out
inc
mov
mov
fnstcw
stos
xor
or
shl
les
enter
or
mov
xor
outs
jp
xor
mov
cmp
mov
jge
push
sub
mov
sub
mov
cmp
pop
sub
inc
dec
adc
push
lea
(bad)
sbb
ins
idiv
sbb
mov
add
in
push
mov
cmp
and
add
leave
lock
fisubr
test
(bad)
sti
add
mov
cmp
push
retf
cmp
in
test
movs
mov
xchg
jge
add
mov
sbb
push
adc
or
inc
add
or
and
fld
cmp
mov
jnp
jge
fwait
push
dec
retf
xchg
arpl
cmp
cmp
fwait
xchg
stos
push
inc
imul
cmp
jo
mov
xchg
cmp
int3
cmp
sbb
xchg
push
out
cwde
jne
fsubr
mov
inc
cmp
lea
mov
inc
popf
add
or
jae
mov
and
push
or
and
sbb
(bad)
call
out
sub
mov
push
mov
jmp
std
adc
sub
(bad)
xchg
add
(bad)
add
in
out
push
test
cmps
or
mov
and
mov
mov
out
inc
push
dec
jmp
mov
push
gs
iret
adc
and
mul
icebp
into
cli
in
loope
mov
adc
or
mov
xlat
cs
sbb
gs
in
push
mov
hlt
js
cmp
addr16
(bad)
(bad)
dec
add
fsincos
sub
movs
sbb
push
xchg
rcl
mov
sbb
sbb
into
cmps
cmp
xor
inc
movs
retf
push
mov
jecxz
cmp
mov
lds
mov
mov
jno
lods
lock
cdq
or
adc
adc
push
pushf
or
in
lods
push
jge
mov
or
jno
and
sub
dec
pop
aam
jns
push
and
sub
hlt
mov
dec
add
dec
sbb
push
or
and
cmps
push
and
movs
add
sbb
shl
gs
adc
hlt
fcom
adc
fcom
loop
inc
xor
push
sbb
(bad)
mov
and
enter
or
or
push
aaa
adc
dec
push
cmp
push
or
lahf
sub
in
pop
mov
sbb
sbb
fucom
or
dec
leave
add
sbb
xor
out
sub
sti
pop
stc
fisub
ja
dec
or
xor
xor
mov
mov
and
out
ss
(bad)
xchg
aaa
jb
sbb
mov
mov
jne
sub
sub
or
mov
cmp
popf
(bad)
movzx
test
jne
into
xchg
adc
sbb
and
addr16
sub
out
add
das
pop
enter
push
dec
inc
mov
xchg
cmp
jbe
push
jge
adc
(bad)
lahf
ja
mov
ret
xor
fstp
(bad)
adc
ja
ror
and
inc
and
and
pushf
or
mov
cmps
adc
lss
cmp
cmp
test
jge
(bad)
idiv
fiadd
inc
jnp
xchg
sub
dec
jge
jbe
es
adc
mov
adc
dec
enter
dec
xchg
sub
pop
xchg
mov
mov
xchg
cvtpi2ps
add
pop
xor
fnstsw
iret
mov
cli
cwde
clc
push
cmc
sub
adc
dec
xor
inc
mov
pop
and
xchg
enter
dec
adc
fbld
test
adc
xchg
or
stos
mov
inc
les
out
addr16
jnp
or
inc
jge
arpl
add
xor
data16
push
sub
sbb
and
test
mov
xchg
adc
mov
pusha
inc
add
inc
pushf
mov
mov
es
mov
call
popa
jmp
ret
pop
lods
cdq
jmp
jmp
enter
jmp
jmp
pop
jmp
clc
pusha
ins
ror
inc
jmp
cmp
jmp
xor
xor
jmp
test
mov
mov
jmp
xchg
arpl
xor
ret
inc
jns
out
push
popa
jo
mov
lods
mov
jecxz
sahf
call
adc
push
daa
xor
inc
dec
inc
cmp
pushw
add
in
add
or
or
or
adc
lock
push
adc
adc
std
ja
add
pop
sbb
sbb
mov
and
jns
add
sti
xchg
mov
sub
and
ror
pop
dec
fldenv
fnstcw
xchg
cmp
and
mov
je
add
je
test
sbb
jmp
sub
in
pop
push
xor
pop
in
or
in
adc
rcr
inc
shl
add
pop
inc
fsubr
js
sub
push
cmp
sub
rol
lds
add
inc
imul
jns
push
outs
pop
test
add
cli
push
repnz
stos
mov
bnd
test
out
inc
aam
push
push
adc
cmps
mov
and
not
sbb
xchg
aam
test
sub
push
dec
adc
inc
jp
pop
neg
mov
out
ret
pop
mov
add
mov
outs
inc
fs
fwait
icebp
mov
push
and
fwait
cld
add
lods
xor
or
retf
mov
pop
jmp
in
jb
mov
popf
enter
hlt
push
add
cmp
call
nop
sbb
sbb
(bad)
test
loop
mov
fucomip
xor
push
jno
and
mov
lods
sub
push
adc
loope
int
cmc
jae
inc
outs
cmps
cmp
pop
push
mov
scas
test
xchg
imul
dec
add
hlt
fs
pop
stos
sbb
je
in
adc
in
jnp
out
rcr
xchg
or
or
(bad)
adc
sti
mov
xor
test
push
in
imul
call
cld
loope
and
pop
jecxz
adc
les
mov
jecxz
jmp
pop
cdq
dec
clc
add
clc
add
out
clc
add
(bad)
rcl
cld
cmp
xor
retf
xor
mov
loop
mov
dec
mov
js
scas
lds
xchg
dec
dec
or
shr
mov
sub
je
cmps
mov
and
mov
call
jmp
(bad)
push
mov
sub
cdq
test
sbb
mov
out
mov
addr16
cmp
aam
pop
push
mov
or
cs
push
inc
outs
mov
stos
nop
jmp
out
shl
sub
add
inc
push
lea
jle
push
mov
mov
or
scas
add
call
mov
push
out
and
adc
mov
lahf
js
retf
add
mov
sbb
cmp
leave
scas
rcr
test
or
leave
cmp
add
add
int
fdivr
les
jge
cs
int3
retf
lds
clc
add
and
dec
adc
fiadd
cmp
or
mov
mov
push
add
push
mov
out
inc
jg
rcr
out
mov
icebp
and
add
inc
jmp
mov
adc
bound
mov
lock
aaa
fcomp
and
ins
sub
pop
or
cmp
dec
pop
pusha
fwait
ror
cmp
aam
jmp
scas
and
and
inc
icebp
mov
test
add
and
jg
sub
push
mov
mov
mov
add
rcr
jno
mov
xchg
pop
fbld
mov
cmp
sub
mov
movs
bound
retf
ins
xor
and
fnsave
addr16
fstp
jle
cmps
inc
hlt
cmp
loopne
and
je
and
push
stos
inc
clc
push
test
dec
test
dec
mov
shl
push
bound
jbe
push
mov
test
cmp
test
cmps
out
mov
cli
stc
mov
pop
ret
add
cmp
jne
inc
pop
leave
xor
sti
lds
cmp
add
(bad)
jne
cmp
and
lea
jge
dec
xchg
sbb
enter
inc
pop
fisub
ret
aam
push
or
sbb
mov
lea
push
fldl2e
lds
mov
push
sub
xchg
push
sub
or
sub
push
js
jmp
dec
fistp
data16
mov
cmp
cld
test
and
jl
sbb
push
push
ret
mov
inc
and
adc
in
and
cmp
in
arpl
push
mov
or
or
cmp
push
test
dec
add
mov
cmp
dec
push
add
fbld
push
cmp
mov
addr16
or
push
sbb
add
sbb
sub
sti
sub
push
add
sub
push
rcl
push
jo
adc
mov
inc
lock
mov
ret
adc
xchg
jae
add
stos
loop
mov
jecxz
jg
enter
sbb
(bad)
in
adc
lods
ins
test
movs
lods
mov
push
cmp
jbe
int
or
pop
(bad)
jno
or
aas
push
movs
add
add
sbb
arpl
mov
jnp
add
jle
mov
push
dec
jle
dec
sbb
fstp
ficom
jno
add
and
mov
scas
fcomp
fsubr
repz
or
adc
mov
or
hlt
std
movs
out
lods
repnz
sub
or
mov
test
cmp
lock
cmps
adc
lahf
sub
dec
push
cmc
aas
mov
sahf
inc
push
retf
cmp
sbb
pop
jnp
mov
sbb
in
in
fucomi
jecxz
movs
pusha
pop
adc
je
fild
add
or
movs
mov
sub
mov
sar
fld
fdiv
vpor
dec
cmps
push
stos
and
retf
(bad)
jecxz
cwde
and
loopne
jmp
cld
jecxz
xchg
cs
sub
xor
mov
cwde
xchg
pop
pop
neg
inc
and
mov
xchg
int3
ret
xchg
retf
xchg
mov
aad
dec
adc
imul
in
ins
jo
dec
adc
push
jbe
pop
(bad)
ins
mov
xlat
adc
ror
mov
sbb
jle
lds
imul
bound
or
or
ret
jno
push
jbe
sub
popa
(bad)
mov
pusha
or
rol
push
xchg
lahf
popf
popf
jge
enter
jne
adc
ins
test
sub
shl
sbb
or
sahf
mov
pop
cdq
cmp
sbb
jp
inc
lea
cmc
or
push
call
(bad)
repz
or
pop
vpshufd
add
scas
add
(bad)
or
or
loop
enter
iret
and
adc
or
or
add
push
push
adc
pop
or
push
enter
and
std
dec
test
into
clc
pop
pop
and
push
test
inc
and
mov
clc
xor
sub
data16
in
push
sub
jle
adc
xor
ja
adc
cmp
mov
adc
inc
or
sbb
and
sbb
inc
push
hlt
jecxz
in
in
or
hlt
mov
cmp
cld
cdq
call
mov
mov
add
mov
push
sbb
push
in
retf
mov
mov
cmps
jb
pop
inc
xor
push
inc
or
(bad)
repnz
rcr
adc
mov
sub
stc
in
int3
xchg
dec
inc
mov
dec
jo
test
push
mov
dec
mov
cmps
mov
fwait
xchg
div
and
imul
pop
dec
xchg
mov
add
push
scas
subps
cmc
int
add
sbb
mov
repnz
fadd
adc
popf
ds
adc
movs
xor
inc
mov
(bad)
jbe
inc
in
addr16
int3
int3
ret
outs
aam
inc
or
in
sbb
mov
rcl
push
and
sub
xchg
inc
int3
inc
fwait
and
scas
dec
repnz
pop
push
mov
and
cwde
retf
pushf
push
push
sub
pushf
fstp
inc
mov
es
dec
xchg
dec
or
xchg
sub
mov
cmp
sub
fucomi
pop
push
add
xchg
pop
adc
jmp
inc
jmp
or
ror
push
call
or
loopne
shr
xor
(bad)
jecxz
mov
inc
adc
xchg
loopne
mov
shl
xor
adc
call
and
out
push
test
xchg
repz
fcom
imul
or
mov
xchg
and
(bad)
or
out
leave
push
jmp
add
or
test
add
pop
mov
mov
push
pop
movs
or
jmp
movs
dec
pop
data16
inc
stos
pushf
in
adc
jnp
fist
add
inc
stos
popf
dec
push
aam
jp
pop
jns
repnz
push
or
inc
adc
in
mov
push
mov
mov
push
inc
xchg
add
jb
sub
jmp
or
sti
mov
push
fisttp
inc
add
cmp
ss
sbb
daa
xchg
lea
int3
sub
xor
mov
xor
jg
mov
push
dec
add
cmp
jnp
popf
std
push
add
aas
push
ins
call
mov
sub
(bad)
out
imul
bound
push
lea
mov
shr
xor
mov
nop
lea
or
cmp
mov
mov
ret
out
adc
jmp
push
shl
repnz
test
push
in
inc
adc
aam
pop
rcr
xor
loopne
retf
cmp
lods
sti
data16
mov
mov
push
ret
add
xchg
aam
lds
jne
popa
dec
adc
lods
ret
aam
or
sbb
sbb
es
xchg
call
or
jmp
push
add
fdiv
iret
sub
test
sbb
adc
test
scas
es
dec
pop
retf
ret
cld
add
call
retf
or
or
jne
lock
(bad)
push
lock
push
or
xchg
repnz
jne
mov
or
icebp
xchg
jnp
or
push
jne
test
inc
sub
xor
add
lea
add
inc
ds
mov
or
ret
jle
movs
push
push
daa
or
pusha
test
jmp
jne
icebp
add
fisttp
(bad)
fstp
add
xor
stos
adc
cmp
test
stos
or
fs
adc
jp
mov
fmul
or
add
adc
int3
mov
push
add
pop
inc
stos
push
adc
ja
cmp
pusha
sbb
sbb
or
shl
xor
jne
jp
ds
jmp
mov
fadd
sub
sbb
aad
inc
inc
cmp
mov
xchg
inc
mov
push
(bad)
push
imul
push
dec
fwait
test
(bad)
int
cmp
and
ror
mov
sbb
mov
xlat
mov
inc
xchg
aam
and
arpl
mov
sbb
fidivr
jmp
inc
ins
(bad)
push
sub
dec
inc
inc
and
int3
lea
lock
fnstsw
jmp
push
dec
inc
rcl
bnd
jmp
lock
mov
push
cmp
into
push
jl
cmp
sbb
stc
clc
jne
mov
sahf
pop
add
dec
xchg
push
ret
imul
or
pop
scas
inc
(bad)
push
or
xor
cld
mov
inc
dec
xor
sub
jnp
dec
mov
add
push
lds
push
hlt
dec
jne
out
cmp
ret
icebp
sbb
dec
repz
dec
adc
out
cmp
adc
push
push
push
popa
ror
pop
or
hlt
or
loope
xor
sbb
sub
(bad)
fs
adc
iret
int
adc
popf
sbb
adc
out
pop
or
(bad)
cmp
or
and
and
push
int
and
das
sub
test
cmc
add
fs
xchg
add
nop
sub
lahf
pusha
fiadd
inc
loope
mov
call
or
mov
mov
and
in
jmp
push
imul
(bad)
loopne
pushf
cmps
cmp
inc
sub
not
js
mov
cmp
mov
adc
push
adc
adc
clc
in
sbb
push
and
push
sbb
inc
or
dec
or
aad
or
push
or
or
ins
ins
ins
sub
xor
mov
dec
stos
sbb
cdq
mov
dec
xchg
pop
pop
jmp
aas
pop
shl
inc
in
cmp
or
aam
mov
fs
push
inc
and
push
sbb
jmp
mov
pop
and
scas
pop
stos
sub
jmp
mov
jmp
outs
inc
cdq
call
retf
sbb
or
mov
fmul
cli
inc
nop
mov
add
movs
in
iret
test
sbb
fist
cmp
xchg
out
pop
adc
mov
nop
mov
sbb
js
or
inc
imul
cmp
push
pusha
aaa
jo
inc
xchg
adc
in
in
lods
call
or
and
dec
push
cwde
dec
and
cmp
xchg
movs
shr
xor
adc
dec
adc
jge
jp
pushf
add
fisubr
jmp
or
(bad)
arpl
rcl
or
lock
stos
in
mov
in
xor
rcr
inc
sar
sar
xor
outs
mov
cmc
and
fadd
movups
or
dec
jnp
and
jb
jo
cmc
jle
sahf
push
xchg
stc
(bad)
push
adc
mov
jae
push
cmps
cld
push
adc
mov
xchg
shl
sysenter
sub
(bad)
fadd
and
repnz
test
mov
add
mov
push
aas
retf
int
xchg
fdiv
sbb
sub
movs
jbe
lock
test
pop
inc
sar
out
or
mov
aaa
dec
mov
mov
dec
jmp
fisttp
loop
adc
sbb
or
sub
mov
mov
in
outs
sub
adc
and
(bad)
push
je
add
mov
xchg
jne
in
mov
loopne
aam
cmp
loopne
cwde
push
cwde
into
es
pop
pushf
adc
adc
jnp
or
fcom
pop
push
frstor
in
fcomp
jmp
lahf
fstp
add
jmp
push
sbb
lock
rcr
fnstsw
in
ficom
jl
push
cmp
stc
imul
bound
adc
test
retf
imul
cmp
sub
mov
pop
jns
mov
bound
lods
add
jo
out
mov
add
and
sub
or
sti
dec
frstor
aaa
add
pop
mov
mov
mov
stos
cmp
jnp
mov
push
dec
sbb
in
test
cs
sti
and
dec
xchg
loop
pop
into
into
sbb
imul
xchg
push
inc
push
sar
sbb
daa
fcos
jmp
and
inc
(bad)
mov
adc
xchg
dec
sbb
stos
ja
fbld
cmp
or
imul
inc
adc
dec
or
cmp
dec
fucomi
in
dec
mov
and
fmul
call
cdq
inc
dec
inc
js
dec
inc
add
and
and
loop
je
sbb
nop
push
ss
les
movs
ins
lds
adc
inc
xor
lea
mov
jno
enter
enter
and
sub
sub
sar
sub
sub
push
jmp
sub
sub
out
add
cmp
shl
fisttp
inc
aam
pop
lock
mov
xor
inc
dec
sub
push
xchg
cmp
sub
sub
out
sub
xchg
pop
jns
scas
and
pop
pop
add
add
bound
pushf
add
add
pop
sbb
and
cli
addr16
call
ins
loopne
cld
pop
jmp
cs
(bad)
in
pop
cmps
adc
add
xor
mov
push
test
and
push
and
adc
dec
test
pop
imul
pop
jge
test
shr
and
icebp
clc
and
rcr
cdq
inc
push
adc
push
jb
dec
retf
push
(bad)
mov
xchg
repz
addr16
enter
int
enter
xor
pop
xchg
call
in
push
dec
cmp
out
and
f2xm1
inc
mov
adc
les
jns
ret
(bad)
int
fucomip
adc
mov
stc
dec
push
xchg
mov
xor
outs
lods
push
mov
mov
je
gs
test
add
loope
and
fdiv
adc
jle
in
add
in
rol
lods
xor
jecxz
ins
mov
mov
pcmpgtd
or
jne
or
sub
or
cwde
sbb
push
jne
jne
dec
(bad)
ins
jae
mov
stos
fstp
inc
pop
sub
leave
std
sub
test
mov
xchg
or
pop
mov
mov
inc
in
sbb
mov
aam
enter
adc
add
loop
sbb
dec
sbb
mov
push
sub
jns
ss
jae
test
jns
xchg
add
add
sub
add
push
clc
mov
sub
fisttp
in
fidivr
in
xor
bound
nop
ret
push
sbb
push
mov
mov
xchg
sub
je
call
lahf
in
aad
xchg
lock
fdiv
ins
dec
push
(bad)
retf
dec
popf
jmp
je
cwde
mov
inc
sub
imul
sub
inc
cs
lea
jbe
mov
adc
dec
loopne
xlat
mov
stos
je
xchg
add
mov
inc
push
aas
xlat
aas
mov
and
mov
mov
test
push
stos
mov
test
mov
add
mov
xor
cli
xchg
stos
xchg
enter
dec
inc
call
aas
push
or
shl
aas
sub
fdiv
aas
adc
lods
sbb
mov
aaa
xchg
enter
sbb
lea
sub
add
push
test
jg
or
int3
xor
fstp
mov
xchg
adc
cmp
pop
(bad)
scas
jg
sub
mov
and
daa
sub
add
lds
push
push
push
add
(bad)
ds
xor
xor
jle
icebp
pop
xchg
xor
dec
mov
add
outs
cli
jns
push
into
scas
mov
(bad)
movs
addr16
cmp
(bad)
out
gs
daa
into
outs
movs
and
clc
or
cli
mov
mov
mov
sbb
int
add
or
lahf
or
dec
addr16
rcr
cmp
mov
js
push
sub
pop
or
jbe
inc
ret
add
(bad)
cmc
or
or
adc
out
add
sub
push
add
test
push
shl
push
aam
xor
push
nop
mov
mov
inc
lods
std
icebp
repnz
hlt
inc
and
mov
or
aas
add
jmp
sub
cld
ret
and
inc
inc
xchg
jmp
adc
mov
inc
icebp
push
add
and
jnp
js
add
retf
inc
fdiv
xchg
push
push
push
push
xchg
rcl
movs
jbe
cli
add
mov
fsubr
addr16
aas
jmp
xor
sti
ja
call
or
repnz
mov
mov
sar
pop
and
add
dec
mov
jmp
shl
pop
enter
mov
inc
cmp
fild
movs
int
sub
lods
mov
hlt
push
fsqrt
xor
and
hlt
movs
xchg
sub
pusha
hlt
in
push
inc
inc
test
sbb
jge
jo
inc
aas
and
jne
mov
cld
and
icebp
bound
jp
rcl
inc
cmp
adc
push
nop
fwait
push
cmp
xor
xchg
inc
fdiv
adc
in
stos
mov
movs
jle
mov
mov
add
mov
jmp
fbld
stos
outs
sbb
xchg
pop
xor
daa
sbb
and
(bad)
sbb
and
jecxz
dec
inc
or
jp
push
add
cdq
test
test
pusha
or
fwait
div
mov
mov
inc
in
std
psadbw
adc
(bad)
mov
cmc
dec
adc
xor
and
mov
call
adc
sbb
lahf
mov
sub
(bad)
(bad)
call
sub
call
jo
push
shr
pop
xor
push
adc
push
inc
ss
jp
jg
inc
xchg
push
push
in
push
jecxz
push
pop
or
dec
fld
call
push
mov
xchg
xor
and
out
add
adc
xor
aas
clc
cmp
cmp
xchg
cmc
(bad)
fucomip
push
pushf
jae
fldl2t
(bad)
jmp
ins
lock
or
imul
sbb
jg
xchg
movs
inc
adc
add
cmp
adc
push
push
jnp
mov
sti
xchg
cmps
cmps
xor
jp
mov
xor
idiv
mov
stc
jne
(bad)
mov
jmp
outs
out
jg
pop
sti
jmp
std
mov
xchg
(bad)
dec
push
imul
pop
mov
add
je
or
add
popa
(bad)
lds
inc
clc
adc
push
push
call
mov
(bad)
ss
pop
dec
or
das
dec
dec
dec
adc
push
adc
cmc
push
dec
mov
xchg
loope
push
add
add
fwait
jle
pop
fnsave
xor
add
pop
stos
sbb
xchg
push
cli
adc
cmp
les
push
cmp
add
sbb
std
lods
add
push
(bad)
mov
jle
xor
ret
sub
jg
adc
dec
sub
cmp
ds
push
dec
xchg
mov
cdq
popf
popf
(bad)
in
lock
iret
and
mov
inc
loopne
nop
in
lock
dec
addr16
mov
pop
mov
stos
mov
mov
nop
push
aad
add
xor
and
jge
jmp
mov
add
sub
mov
std
arpl
popf
adc
les
and
cmps
or
mov
mov
inc
cmps
pop
jns
adc
pusha
push
pushf
inc
xchg
push
(bad)
retf
neg
mov
adc
leave
push
not
and
push
and
or
or
sub
adc
popa
xor
add
je
adc
loopne
add
push
push
mov
popa
lds
push
aas
stos
ds
cmp
popa
sub
test
stos
push
inc
dec
bound
sub
sbb
inc
inc
leave
inc
mov
push
test
cmp
das
aad
mov
or
xchg
pop
add
mov
xor
pop
out
pop
je
jp
adc
jne
and
mov
push
and
and
mov
or
addr16
ss
stos
(bad)
popf
and
call
cld
xchg
sub
dec
or
pop
sub
xchg
inc
push
push
dec
test
xor
dec
inc
push
fstp
add
push
cmp
sbb
in
xor
js
cmp
leave
shl
mov
sbb
in
lock
dec
push
mov
jne
imul
pop
dec
mov
movs
je
out
push
or
mov
inc
add
mov
push
out
jae
jl
mov
out
rol
call
(bad)
mov
jl
sub
inc
pop
pusha
ret
mov
xchg
xor
mov
pop
adc
retf
jl
pop
xchg
inc
mov
cmp
fst
mov
std
inc
adc
imul
jbe
or
push
fild
(bad)
test
pop
jb
mov
shr
dec
int3
loop
cmps
sub
mov
pusha
pusha
pushf
pop
lock
movs
and
jo
mov
mov
mov
sub
sub
(bad)
repnz
adc
mov
lock
std
jp
xor
inc
(bad)
mov
xchg
test
fwait
test
nop
fidivr
jae
in
leave
cmp
pusha
retf
test
inc
dec
call
sar
mov
mov
packssdw
pop
rcl
sbb
mov
push
cmc
enter
mov
or
in
stos
jb
fdiv
xchg
data16
fist
jbe
or
add
inc
repz
mov
fnstcw
add
mov
enter
shl
dec
or
enter
lock
push
sub
push
shl
sub
test
seta
(bad)
mov
add
mov
sub
ret
ins
mov
cmp
nop
(bad)
jmp
cmps
sbb
fmul
inc
pop
inc
arpl
aas
test
adc
stos
mov
dec
aam
push
fistp
jle
mov
shr
repz
clc
(bad)
loopne
call
(bad)
les
adc
cmp
inc
add
dec
lea
cwde
push
je
mov
mov
sub
push
pop
add
movs
mov
push
les
mov
mov
mov
pop
leave
jecxz
les
mov
and
test
in
cmps
xchg
cmc
das
and
xor
mov
fld1
and
imul
lahf
push
dec
nop
in
sub
push
inc
movs
adc
add
call
sahf
adc
and
mov
push
lea
pop
or
mov
xchg
pop
ret
test
inc
sub
adc
scas
rcr
rcr
test
or
test
std
sbb
or
push
adc
mov
cmps
mov
mov
leave
sar
sub
xchg
je
(bad)
rcl
inc
sar
fs
pop
daa
sahf
push
cmp
lods
xor
mov
jbe
fidiv
and
test
adc
sub
jns
jp
mov
xor
fiadd
or
cwde
add
jle
test
xchg
aam
sar
daa
lea
or
in
mov
lods
inc
pop
sub
or
or
jne
inc
cld
loopne
(bad)
mov
inc
xchg
sub
xor
cmp
in
jae
inc
push
pusha
xor
sub
dec
dec
add
je
and
sub
dec
dec
lock
adc
mov
sar
push
push
sbb
ret
add
loopne
add
or
ja
sub
or
loope
push
mov
and
or
dec
or
add
repz
mov
pop
data16
or
rol
sbb
adc
inc
dec
xchg
inc
fst
pop
push
add
(bad)
cld
xchg
cmp
and
mov
xchg
rcl
mov
lea
sub
inc
pop
xor
(bad)
mov
mov
cmp
pop
pop
jbe
js
jmp
dec
jae
dec
pusha
adc
mov
inc
push
repnz
adc
int
repz
(bad)
or
fidiv
push
das
fs
push
dec
xchg
mov
(bad)
mov
outs
in
jo
fs
xchg
xor
mov
or
jns
add
adc
push
dec
call
jmp
lods
ja
test
xchg
inc
out
sbb
(bad)
ds
mov
test
cmp
icebp
mov
mov
cld
add
cmp
mov
or
push
xchg
ret
loop
adc
jb
jecxz
add
pop
pop
loope
test
pop
push
add
sbb
xor
dec
test
bound
lods
jnp
pop
inc
shr
sub
or
pop
loop
jne
push
inc
jmp
shl
add
mov
mov
and
inc
push
adc
hlt
mov
dec
movs
push
push
popa
push
dec
std
adc
lock
jle
ds
shl
mov
push
data16
retf
add
or
xchg
push
in
rcl
xchg
pop
inc
and
clc
sbb
outs
stos
xor
jnp
xor
in
add
call
add
inc
lock
cdq
idiv
sbb
inc
sti
mov
dec
je
fs
jb
cmps
pop
jbe
xchg
stos
and
ret
ret
push
fmul
adc
sti
jge
(bad)
add
push
sub
int
push
xlat
mov
in
cmps
push
rcl
xor
cmp
and
push
cmp
imul
icebp
mov
jp
test
jmp
outs
stos
push
mov
aam
pop
jp
mov
mov
jmp
xlat
adc
cli
into
adc
or
call
or
push
(bad)
mov
xchg
rol
mov
add
push
or
clc
push
push
sbb
mov
pop
push
ss
mov
icebp
out
add
and
or
inc
popf
jo
add
push
mov
sbb
stos
jl
sub
pop
inc
hlt
jg
inc
add
aam
cmp
sti
inc
mov
and
and
sub
scas
pop
xor
adc
cmp
or
cmp
and
out
scas
or
pop
fs
adc
xchg
ret
xchg
push
or
mov
test
movs
mov
sbb
ficomp
inc
sub
mov
mov
js
jne
xchg
nop
js
inc
pop
shl
push
loope
push
and
adc
(bad)
aaa
test
push
shl
or
sbb
sahf
xchg
jmp
scas
cmp
push
jmp
stc
or
push
pop
mov
mov
mov
or
dec
dec
rol
and
movq
sbb
imul
fiadd
pop
and
sub
dec
fild
xor
push
stos
mov
ins
mov
xor
aaa
mov
movs
adc
jl
or
mov
jmp
add
sahf
mov
sbb
pop
push
in
jp
and
add
test
sub
pop
cmc
lahf
(bad)
adc
fcmove
mov
adc
push
jns
(bad)
push
and
mov
popf
imul
or
adc
es
push
mov
xchg
loope
stos
lea
mov
test
and
sub
aad
in
jge
push
push
and
jmp
mov
movs
jg
sub
xchg
retf
sub
retf
out
xchg
mov
and
adc
push
rcr
xchg
pop
call
stc
xor
pop
mov
or
push
loopne
sbb
xor
or
stos
outs
stos
and
inc
(bad)
cwde
test
clc
add
lods
mov
or
aad
mov
adc
sub
mov
fcomp
jbe
xor
jae
sbb
call
shr
mov
stos
push
ja
sbb
push
xor
xor
repz
xchg
movs
shl
and
add
add
cmp
aam
pop
out
jno
cli
hlt
(bad)
xchg
mov
push
jmp
sub
mov
cmp
jnp
stos
dec
cmp
imul
jp
gs
repz
and
in
xchg
loopne
xchg
push
scas
xchg
lods
data16
sbb
retf
imul
xor
hlt
hlt
jmp
xor
xor
and
call
jle
add
aas
sbb
lahf
cdq
aaa
repz
jo
sbb
je
push
mov
frstor
ja
xchg
dec
inc
and
xor
leave
or
push
dec
gs
xlat
out
(bad)
mov
adc
outs
ficom
xlat
jmp
jne
jl
add
inc
inc
cmp
aaa
add
in
add
adc
xor
inc
in
mov
lds
xor
aaa
test
bound
xchg
hlt
test
inc
push
jge
jge
ret
mov
and
inc
lods
dec
sub
or
push
add
sar
push
jb
xchg
(bad)
jl
xchg
inc
stos
jp
imul
inc
add
iret
inc
retf
push
in
or
dec
sbb
and
outs
inc
push
in
jmp
sbb
dec
sbb
enter
(bad)
cmc
shl
xor
pop
stc
enter
push
mov
mov
add
pop
xchg
jmp
clc
pushf
adc
cmp
rol
les
loopne
loopne
and
cmps
adc
or
outs
ja
xchg
loop
hlt
ins
inc
and
rcl
mov
xor
stos
lea
nop
sub
dec
inc
mov
adc
adc
cmp
or
mov
lods
dec
out
dec
push
adc
pop
sub
aam
mov
rol
cmp
int3
cmp
movs
bnd
sbb
ror
inc
cdq
sub
push
mov
lock
xor
push
adc
mov
sub
loopne
les
shl
je
ins
inc
adc
mov
inc
sub
push
add
fdiv
aam
mov
into
clc
pusha
cwde
loope
inc
add
dec
int3
fwait
add
std
sub
mov
push
les
clc
and
inc
rcl
inc
nop
xchg
cdq
xor
mov
test
dec
xor
enter
push
adc
cmp
leave
(bad)
out
mov
loop
in
push
cdq
ret
fcom
pusha
jmp
dec
leave
mov
js
add
inc
push
mov
jl
call
cli
int3
pop
cmp
jp
mov
mov
or
mov
pop
mov
(bad)
xchg
pop
cmps
or
cmp
daa
inc
fisubr
mov
xchg
test
xor
cmp
(bad)
dec
mov
inc
div
inc
mov
(bad)
jmp
xor
js
cs
jbe
rcr
sub
pcmpeqw
sbb
sub
das
js
call
xor
cdq
push
call
add
nop
mov
mov
xchg
or
mov
push
cmp
mov
or
pop
xlat
cmp
cld
dec
and
and
jne
sar
add
xor
or
stos
add
(bad)
clc
sbb
cld
jl
out
aam
pop
fdivr
test
adc
std
mov
push
xor
fsubr
das
pop
jb
dec
sbb
ins
loopne
pusha
lock
and
ins
sti
add
add
mov
or
inc
jmp
ins
pop
mov
stos
inc
cwde
xchg
xor
adc
loopne
mov
dec
ins
(bad)
or
aam
inc
add
sbb
xchg
sub
push
push
and
add
and
inc
in
xor
jns
pop
mov
mov
dec
push
(bad)
push
mov
jmp
mov
mov
xchg
popf
pop
inc
inc
dec
adc
icebp
push
dec
pop
stos
movs
xor
inc
mov
push
add
loopne
pop
sbb
pop
sbb
loop
pushf
out
(bad)
les
push
call
add
sub
xchg
std
pop
mov
dec
les
outs
jl
and
inc
xchg
mov
inc
je
in
ins
mov
aad
pop
imul
mov
call
movs
push
enter
pop
xchg
adc
and
sbb
bound
jo
int3
cmp
jmp
push
mov
cmps
push
mov
pop
ror
cli
pop
movs
push
call
scas
pusha
clc
pop
jmp
test
stos
arpl
pop
ror
adc
cmp
jne
adc
mov
or
add
dec
xor
stos
inc
push
cmp
or
pusha
ja
fmulp
add
xor
cmc
(bad)
jmp
addr16
outs
dec
retf
leave
pop
and
por
sub
xchg
sub
cmp
sub
into
mov
dec
pop
dec
mov
inc
cmp
push
stos
iret
nop
inc
mov
test
fstp
cli
ret
fbstp
bound
call
push
dec
rcr
sar
addr16
push
(bad)
add
inc
sbb
shl
pop
sahf
sub
cmps
jne
enter
clc
mov
nop
loop
dec
daa
cmp
and
dec
jmp
and
dec
or
push
cmps
ds
aad
xor
sub
adc
dec
movs
leave
pop
add
mov
clc
push
dec
and
retf
add
sbb
mov
add
scas
daa
inc
xchg
mov
pop
cld
push
push
jmp
cld
push
in
add
clc
jnp
pop
mov
xchg
sbb
jmp
sahf
ss
sub
into
dec
je
adc
dec
fsub
pop
push
cmp
fisttp
sbb
cld
sub
xor
adc
inc
dec
jnp
dec
jb
js
popa
jo
push
dec
mov
adc
or
lods
adc
and
dec
std
mov
fistp
mov
imul
and
hlt
cmp
push
push
test
add
(bad)
mov
and
data16
inc
movs
psrld
adc
and
out
ja
and
add
push
and
test
push
sub
lock
loopne
or
aad
mov
clc
movs
and
ret
dec
clc
dec
sub
sbb
je
(bad)
push
xchg
mov
push
test
cmps
fild
mov
(bad)
mov
sbb
or
or
inc
inc
push
adc
cmp
fwait
mov
icebp
(bad)
push
ins
push
ss
cwde
adc
popa
aad
push
and
mov
sbb
push
leave
nop
call
and
out
mov
in
jl
gs
call
(bad)
mov
xor
(bad)
cs
pop
jmp
dec
jns
les
sub
shl
into
ja
pop
mov
ror
repnz
clc
fild
fistp
xor
or
stos
ins
push
mov
in
data16
push
lds
mov
jp
mov
pop
mov
mov
xchg
mov
jns
adc
sahf
rcl
push
(bad)
sub
pop
push
push
popf
and
mov
mov
shr
and
mov
and
push
mov
lods
inc
mov
jne
stos
retf
dec
xor
inc
adc
int
dec
push
or
add
sub
leave
pop
mov
and
mov
add
pop
add
jmp
sbb
push
add
mov
jnp
int3
or
and
add
(bad)
push
gs
hlt
xor
vpaddb
div
and
or
push
xlat
nop
je
fst
push
mov
movs
scas
ds
mov
inc
nop
push
out
movs
dec
not
rcl
jmp
test
jg
and
inc
pusha
push
es
cmp
fadd
jb
mov
inc
test
pusha
jl
ds
out
mov
div
clc
outs
mov
or
cmp
movs
mov
aam
jl
inc
mov
sub
das
push
aaa
push
repz
rcr
or
repnz
sub
ror
in
add
ins
inc
inc
dec
push
test
cmp
sbb
xchg
mov
scas
lea
outs
add
push
push
sub
xchg
mov
sahf
dec
movs
add
les
sub
in
ins
hlt
sub
fstp
or
cmovs
nop
xor
mov
and
sete
inc
mov
pop
movs
bound
sbb
add
icebp
mov
mov
dec
ins
and
dec
cmp
out
mov
jae
xor
pop
inc
cs
push
xchg
aad
inc
lods
mov
adc
push
adc
inc
sub
dec
sbb
daa
xchg
adc
dec
jp
and
in
jne
push
mov
jb
jmp
inc
fdiv
cmp
cmp
mov
inc
lds
mov
jge
inc
enter
clc
sub
and
dec
cwde
push
test
dec
push
int3
ror
or
and
cdq
push
outs
or
push
and
jmp
test
into
aad
inc
and
adc
push
movs
jbe
push
jl
int3
adc
add
xor
push
sub
mov
test
jne
and
or
cli
xchg
arpl
pop
push
stos
mov
ja
add
(bad)
cs
cwde
repz
dec
nop
mov
jmp
in
sbb
xor
push
or
xchg
xor
loope
sub
and
mov
mov
push
xor
cwde
in
cmc
jo
call
xchg
jg
add
inc
jo
cmps
test
mov
push
inc
xchg
or
repz
sbb
mov
fst
loope
pop
jg
add
int
push
shr
in
(bad)
in
or
in
add
and
pop
dec
or
xor
retf
inc
mov
call
dec
(bad)
in
mov
dec
push
dec
fs
popf
ins
test
mov
out
mov
adc
clc
and
mov
inc
or
std
cs
xor
jmp
pop
add
inc
es
xchg
fstp
jp
lar
das
jne
pusha
and
mov
dec
pop
mov
in
add
inc
mov
mov
push
dec
xchg
stos
loope
sub
dec
std
inc
push
(bad)
test
sub
or
call
mov
inc
adc
fmul
push
cwde
imul
mov
push
or
jecxz
mov
jno
lock
movs
mov
sub
xor
cdq
inc
push
jae
outs
sub
in
sbb
test
shl
pop
xor
fmul
ret
push
mov
mov
stc
push
and
dec
pop
push
nop
add
push
icebp
push
(bad)
pop
push
aas
jp
retf
jae
es
out
sbb
mov
je
push
cmp
outs
push
push
push
push
je
sub
mov
push
push
rcl
push
xchg
movs
ror
out
jno
cmp
jge
stc
add
xor
stos
test
test
int3
push
les
test
mov
scas
pop
dec
pop
shl
and
mov
or
and
and
xlat
push
xor
xchg
push
inc
inc
xchg
(bad)
pop
jbe
fnsave
jo
adc
sub
movs
(bad)
xchg
push
jo
je
mov
push
pop
dec
fwait
mov
and
movs
xchg
popa
inc
jg
mov
mov
push
mov
ins
leave
call
aam
mov
push
das
jp
je
mov
push
jbe
mov
add
jmp
in
cld
mov
adc
adc
cmp
cdq
add
xchg
push
mov
lods
enter
inc
push
or
push
test
dec
mov
test
loop
cmp
mov
dec
fstp
ror
dec
inc
cld
cmp
pop
push
ds
cmps
dec
divps
inc
adc
cmp
mov
inc
jl
cmc
pop
stos
cmp
push
xchg
xchg
test
daa
and
sahf
push
jns
lock
leave
mov
inc
or
sar
push
out
popf
cmp
imul
lods
loopne
mov
adc
gs
jge
nop
in
fnstenv
mov
jae
pop
push
in
xor
jl
xor
xor
push
and
in
inc
outs
jns
jne
xor
jb
jmp
retf
movs
imul
hlt
push
iret
inc
repz
das
push
pusha
jge
out
ficomp
jmp
movs
sbb
stos
push
test
mov
test
nop
fmul
int3
mov
inc
fstp
ins
scas
adc
das
jo
mov
pop
sub
ins
and
push
sbb
mov
imul
xor
data16
inc
and
or
xchg
mov
xor
out
dec
or
arpl
lods
or
loopne
lea
add
jne
femms
and
push
mov
and
dec
adc
nop
xchg
retf
add
cld
mov
mov
inc
push
lods
sub
rcl
popf
and
push
add
xor
push
push
add
push
xor
or
mov
pop
and
aaa
push
cdq
test
in
or
add
inc
adc
jg
push
pusha
aaa
pop
shr
sub
outs
lea
inc
mov
sqrtps
int3
sbb
cmp
jno
(bad)
ja
xchg
movs
jge
mov
rcl
nop
mov
inc
inc
mov
push
dec
sub
xchg
inc
retf
(bad)
xchg
ins
popf
outs
hlt
pop
and
mov
xor
div
sbb
ja
push
outs
add
sbb
ja
or
jno
mov
xor
sbb
mov
mov
mov
dec
sbb
int3
pop
aaa
push
imul
test
hlt
popf
sub
add
dec
call
mov
aaa
ret
adc
push
xchg
pop
xchg
cmps
adc
call
jg
int3
xchg
jle
in
mov
xchg
les
sub
sbb
into
fdivr
sub
sub
mov
pop
push
icebp
push
in
fwait
movs
xor
outs
mov
lods
add
and
adc
add
mov
aas
jge
pusha
push
les
push
add
inc
fcmovne
std
lahf
cmc
cli
inc
rcr
inc
xchg
cmps
gs
mov
aam
sub
ins
cwde
jge
jmp
add
and
mov
movs
mov
sub
jg
or
mov
mov
mov
cmp
jl
shl
push
ins
mov
mov
cld
jmp
sbb
aad
mov
adc
aam
push
dec
inc
jmp
push
pusha
mov
loopne
mov
sbb
adc
jg
xchg
mov
movs
(bad)
in
sar
xchg
adc
cwde
stos
jg
cli
bound
pop
fst
(bad)
xchg
pusha
mov
cmps
(bad)
sub
imul
mov
xchg
jmp
test
sub
xor
inc
call
test
dec
sub
inc
inc
fild
xchg
add
(bad)
mov
sub
retf
mov
fild
add
jb
lea
xchg
sub
sbb
addr16
jne
push
jno
add
in
pop
pusha
sub
or
leave
xchg
mov
mov
inc
retf
test
call
sub
lods
mov
ja
stos
xchg
in
mov
lods
and
sahf
adc
ror
xor
pop
cmps
out
jb
mov
int3
jo
xor
not
add
or
add
nop
lea
fld
test
dec
push
mov
(bad)
sbb
mov
int
pop
add
sbb
xchg
mov
or
ficom
dec
xor
pop
push
dec
jp
(bad)
cmps
cmc
cs
jmp
das
push
or
ins
scas
fidiv
fild
test
sbb
pop
xor
jecxz
in
inc
inc
cmp
dec
cmp
cmps
(bad)
pop
push
sar
out
adc
adc
push
ss
(bad)
(bad)
in
mov
cli
addr16
call
ss
cld
stc
loope
fwait
or
fs
into
out
cdq
je
cld
aad
scas
add
ja
jns
fidiv
mov
dec
pop
enter
rol
inc
popf
jo
pop
mov
mov
pop
(bad)
enter
addr16
jl
mov
fcom
aas
icebp
fild
pusha
jb
mov
sub
rcr
gs
mov
and
pop
adc
int3
push
adc
sub
and
sbb
mov
ds
aas
jmp
in
in
jecxz
test
sar
add
push
cld
hlt
call
xlat
mov
retf
cli
fst
mov
cmp
sbb
test
call
in
sti
jmp
aam
aad
add
lock
add
or
dec
cld
mov
mov
aad
inc
out
mov
loop
add
or
mov
inc
psrlw
sahf
movs
mov
pop
stos
out
in
ds
repz
pusha
jmp
jge
pop
add
sub
shl
(bad)
xchg
push
sar
(bad)
daa
hlt
dec
(bad)
sbb
(bad)
xchg
sub
or
scas
imul
and
dec
retf
xchg
mov
(bad)
xchg
dec
ror
(bad)
sub
cwde
pop
and
les
dec
push
loop
cli
or
inc
pop
iret
lods
add
xor
fimul
in
call
xchg
jmp
iret
cld
hlt
sub
push
and
push
sub
int
popf
mov
mov
scas
dec
cld
jle
push
inc
dec
inc
int3
pop
scas
fisub
xchg
inc
pop
scas
out
mov
adc
inc
out
or
pop
(bad)
pop
add
jno
nop
mov
movs
inc
mov
add
iret
mov
add
sti
cmc
pop
sbb
es
daa
dec
ja
or
and
ins
jne
js
je
mov
fsub
add
addr16
iret
mov
jmp
xlat
xchg
sub
int3
push
pushw
das
mov
arpl
out
mov
and
pop
cmp
mov
fiadd
push
xor
rcl
push
push
xchg
sar
sti
cmp
cmp
outs
or
mov
sti
fwait
je
push
aas
mov
in
retf
sub
scas
jo
test
dec
and
ret
pop
mov
cmps
scas
jecxz
fwait
jmp
fisubr
dec
jg
ret
fiadd
nop
ret
push
jmp
pop
jbe
ins
dec
mov
hlt
cmc
dec
inc
jne
mov
xchg
push
(bad)
dec
or
fnstsw
pusha
fidivr
pop
jne
add
xchg
out
push
sbb
mov
and
outs
jl
cmp
imul
jle
push
jp
in
out
fild
adc
outs
pop
add
addr16
mov
clc
pop
(bad)
adc
sbb
xchg
xchg
xchg
mov
or
cmp
push
xchg
fcom
in
or
jg
inc
xor
xor
punpckhbw
jnp
das
xor
push
push
dec
xor
pop
inc
stos
int3
hlt
mov
(bad)
and
and
out
iret
add
inc
jge
test
shl
sysret
inc
fwait
adc
(bad)
fs
and
cmp
cdq
dec
(bad)
std
dec
or
cmp
add
pushf
ror
mov
jecxz
stc
out
hlt
or
jecxz
int3
push
add
hlt
cmp
push
jmpw
lahf
sbb
inc
icebp
ins
ins
pop
addr16
xchg
xchg
mov
sahf
dec
xchg
push
je
ins
sbb
sbb
inc
rcr
and
jge
or
pushf
pushf
imul
js
mov
scas
inc
movs
jo
jae
inc
test
push
enter
push
mov
mov
or
mov
mov
sbb
loope
test
xchg
mov
mov
or
xchg
movs
call
and
sbb
push
dec
in
js
sbb
cld
retf
js
push
in
pop
xchg
sbb
rcr
fcom
jmp
xchg
or
mov
inc
test
test
test
jp
and
fbld
cld
jo
mov
fdivr
jmp
and
rcl
cmp
movs
sti
mov
jle
or
fild
(bad)
loopne
neg
dec
sub
(bad)
cmc
(bad)
mov
inc
jg
push
sub
loop
fucomi
mov
jnp
add
push
jecxz
test
xor
jp
pusha
cld
dec
xor
mov
xchg
mov
scas
push
xchg
push
jp
mov
xlat
lods
push
loop
mov
pop
inc
imul
lock
add
inc
pop
loop
push
mov
repz
fwait
sbb
sub
add
mov
add
dec
jns
mov
dec
outs
and
push
sahf
inc
adc
ds
dec
sub
pop
gs
adc
sbb
aam
dec
je
add
jge
xchg
out
xchg
fist
or
outs
enter
push
shl
scas
and
gs
xchg
jae
daa
push
loopne
fsub
add
xor
(bad)
xlat
inc
sub
das
or
inc
retf
sub
inc
push
fmul
retf
cs
retf
add
sar
xchg
mov
lods
or
push
in
sub
add
push
jecxz
not
mov
fild
add
aam
inc
fmul
xor
cmp
stos
dec
jmp
push
int3
mov
pop
test
nop
jns
adc
test
push
inc
add
xchg
out
out
sub
inc
rcl
push
call
push
ret
push
pop
stc
(bad)
js
add
dec
pop
push
call
cmp
sub
clc
mov
retf
adc
ins
call
call
fld
les
stos
lods
addr16
xchg
popa
(bad)
cmps
pop
test
mov
pushf
or
push
inc
fidiv
xlat
es
xchg
mov
push
test
ss
(bad)
pop
ds
lds
les
aam
and
pop
add
inc
mov
(bad)
cmp
jge
inc
push
repz
sahf
jb
int3
xor
push
movs
sbb
or
jl
js
cmp
pop
(bad)
lock
jae
sbb
or
out
mul
cmps
aaa
and
lods
or
jne
test
jbe
test
retf
ins
xchg
es
sub
bound
inc
repz
cwde
mov
push
push
and
bound
and
sbb
pop
not
mov
mov
xchg
mov
cwde
push
mov
add
aam
jmp
mov
sub
mov
popf
lahf
ss
push
cli
lahf
stos
(bad)
stos
addr16
adc
mov
lahf
inc
sub
mov
call
sahf
or
test
test
aad
shr
xchg
pop
fistp
dec
dec
xor
sub
dec
sbb
adc
dec
add
adc
stos
or
push
gs
sub
mov
dec
gs
xchg
lock
adc
pop
mov
(bad)
aas
inc
mov
dec
xchg
inc
icebp
ja
loopne
lods
test
cmc
or
xor
xchg
mov
lods
ja
and
js
or
faddp
loopne
xchg
jmp
out
stc
add
scas
sbb
imul
test
inc
repz
sbb
push
push
mov
mov
mov
sub
mov
fstp
cli
adc
stos
nop
dec
ret
push
xchg
lea
dec
aam
sub
mov
stos
nop
cmp
pop
and
or
mov
add
fwait
shr
mov
movs
jg
sub
adc
mov
lds
loope
inc
or
(bad)
ret
std
lea
push
mov
xor
inc
loopne
retf
pop
cmp
jb
pop
sti
add
mov
cmps
push
xchg
lds
sub
mov
test
fimul
test
outs
loopne
and
cmc
mov
cmp
sbb
adc
jbe
lea
outs
push
inc
or
sbb
ret
ins
in
push
add
shl
outs
(bad)
or
test
jb
sbb
xor
addr16
loope
jle
sub
clc
jnp
sub
cmp
sub
das
mov
sub
jle
pop
mul
mov
loop
les
fwait
mov
jl
adc
add
ret
and
clc
fadd
mov
xor
pop
fmul
jno
sub
mov
inc
outs
std
lods
adc
mov
and
adc
and
inc
aaa
cmp
dec
add
outs
inc
in
mov
push
push
clc
adc
imul
out
mov
inc
je
clc
push
scas
cmp
lahf
call
push
mov
in
in
outs
call
or
stc
sahf
or
mov
push
sub
adc
hlt
lea
push
and
fdivp
push
push
(bad)
data16
mov
cld
(bad)
repnz
push
jne
or
add
adc
stos
xor
push
sub
and
push
data16
inc
cmp
cmp
mov
sub
mov
in
add
xor
inc
pop
clc
jl
adc
add
gs
mov
add
pop
inc
hlt
mov
xor
push
test
push
add
test
mov
ins
test
fwait
cmp
adc
mov
in
sbb
inc
and
sub
std
cli
sbb
stos
dec
(bad)
inc
inc
jg
mov
ret
sub
mov
pop
mov
add
add
dec
shl
inc
clc
push
dec
dec
imul
addr16
mov
(bad)
ins
in
hlt
xchg
test
xchg
ja
and
std
mov
icebp
and
push
xchg
mov
cwde
cmp
push
ins
cld
push
xor
mov
adc
inc
sub
loope
aas
adc
sub
pusha
scas
and
pop
mov
test
sub
outs
mov
les
inc
inc
dec
mov
test
sub
shl
rol
aad
inc
xchg
pop
shr
xchg
push
std
inc
xor
sub
hlt
push
inc
dec
and
addr16
and
lods
push
sbb
adc
push
fs
pusha
aam
mov
movaps
push
sub
jae
pop
xchg
nop
ja
retf
lds
or
push
ret
push
lods
daa
imul
xor
xchg
in
(bad)
adc
jecxz
or
push
test
and
push
push
push
inc
lea
adc
(bad)
fsubr
dec
inc
mov
jne
inc
movs
jmp
sub
lods
sbb
mov
or
jle
xchg
cli
mov
icebp
movs
retf
test
popf
xchg
jmp
xor
sub
movs
ins
mov
aam
push
nop
and
mov
cmp
leave
lods
sbb
pop
push
retf
lea
push
mov
pushf
lea
rep
movs
mov
mov
sub
pop
jl
dec
fidiv
ins
jmp
ret
daa
push
sbb
pop
mov
shr
push
xor
push
mov
jb
sub
add
xor
sbb
lahf
jmp
adc
fcom
adc
cmps
loopne
mov
adc
stos
mov
mov
add
ror
jge
pop
push
shl
dec
pop
mov
push
es
push
pop
repnz
xchg
(bad)
std
outs
stos
or
mov
sbb
std
add
mov
inc
dec
push
xchg
outs
xchg
popa
(bad)
(bad)
pop
call
push
sub
mov
xor
mov
push
das
push
test
clc
or
inc
mov
leave
adc
jmp
inc
cmp
or
xchg
cmp
push
fcom
dec
mov
jmp
push
inc
adc
fcom
add
icebp
cmp
fist
and
jno
xchg
call
mov
jmp
jne
shr
in
in
add
mov
sub
jmp
scas
fisttp
loope
inc
das
mov
push
movs
std
imul
addr16
or
jb
test
push
call
mov
sub
and
shl
xchg
inc
(bad)
mov
aaa
inc
les
pop
and
rcl
(bad)
adc
push
outs
aam
mov
daa
xchg
std
cmp
pop
jb
cwde
sub
mov
jmp
lea
aam
jnp
rcl
mov
push
cmp
mul
push
mov
jne
int3
test
movs
xchg
xchg
or
test
(bad)
ins
jb
push
xor
xchg
sub
je
bnd
int3
out
inc
clc
sub
cmp
enter
or
lahf
and
call
mov
and
clc
add
adc
cmps
jne
add
pop
mov
fdiv
push
sub
and
or
or
ins
add
and
call
add
in
or
call
xchg
sub
test
adc
in
xor
jns
cld
adc
out
jbe
fist
and
xor
pop
inc
icebp
(bad)
lock
xlat
pop
clc
mov
in
lea
rep
xor
loop
adc
add
je
add
es
cld
or
inc
das
loopne
mov
and
inc
scas
movs
or
ja
lds
push
push
sti
in
push
add
pusha
jb
cli
pop
inc
xchg
sub
in
or
push
mov
loop
sub
dec
lds
aam
adc
test
test
jo
add
ficom
inc
push
mov
xor
mov
mov
jo
fstp
jbe
sbb
bound
inc
test
movs
push
adc
push
ret
jmp
aaa
push
dec
and
mov
shl
mov
add
mov
es
outs
sub
fnstsw
pop
inc
pusha
int
test
in
push
sub
or
bound
mov
pop
mov
jae
dec
sub
aas
inc
adc
push
into
mov
dec
adc
sub
xor
mov
pop
pop
hlt
adc
jl
hlt
push
adc
jmp
dec
mov
mov
ret
fsubr
iret
xchg
xor
adc
xor
push
call
sub
push
hlt
push
push
push
pop
xor
xor
push
ds
or
mov
mov
push
sub
int3
int3
xlat
aas
movs
push
xor
jp
dec
sbb
dec
movs
enter
cmp
inc
bound
pop
pop
dec
lods
ror
jl
test
adc
push
test
or
retf
inc
enter
enter
mov
adc
aaa
mov
and
xchg
mov
and
in
jmp
inc
jae
xchg
clc
rcr
adc
cmp
xchg
imul
xor
and
inc
xor
lea
mov
sbb
popf
daa
pop
movs
add
or
xchg
es
js
mov
and
cs
xor
add
sub
fs
inc
and
das
xor
sahf
loopne
fs
push
jns
aam
and
stc
ficomp
inc
push
lea
and
clc
fldcw
sbb
test
jecxz
jno
int3
int3
fld
mov
sbb
std
inc
dec
fs
adc
ins
mov
jl
adc
adc
and
mov
adc
sub
(bad)
sbb
push
out
mov
ret
adc
inc
dec
add
dec
xor
and
pushf
fdivrp
sbb
out
enter
shl
cwde
push
and
sbb
cmp
cmp
fsub
mov
mov
pop
mov
into
sub
pop
push
mov
mov
das
inc
cmp
icebp
or
lods
and
adc
daa
arpl
adc
add
push
movs
dec
stos
push
aaa
sub
add
jl
push
sbb
jle
sub
jmp
add
xchg
cmp
jbe
push
call
jbe
or
mov
gs
sub
xchg
cwde
dec
rol
inc
cmps
xchg
ror
xchg
mov
test
push
or
pop
and
add
push
push
sar
ret
adc
lods
mov
push
xchg
sub
mov
mov
add
add
sbb
jmp
add
retf
dec
sbb
std
scas
or
(bad)
icebp
pop
push
xor
in
mov
(bad)
shr
jmp
dec
nop
xchg
inc
push
fild
jns
jno
dec
dec
sub
xchg
adc
lods
retf
and
bnd
pop
xor
jae
adc
js
test
sub
jl
jne
or
inc
imul
pusha
mov
sbb
mov
xchg
xchg
out
push
leave
int3
xlat
xor
mov
mov
mov
cmp
jmp
ds
shl
(bad)
(bad)
fwait
test
popf
test
call
ficomp
nop
or
int
lock
inc
mov
movs
lock
test
and
add
jne
fs
push
cmp
cmp
inc
add
adc
cli
pop
loop
push
ins
mov
ret
jno
adc
mov
mov
pushf
ret
and
push
repnz
hlt
cs
ins
xor
and
adc
xchg
jbe
adc
cmp
pop
xchg
or
call
xchg
out
dec
and
js
mov
and
add
and
mov
nop
cmp
call
sub
mov
or
xchg
cmp
cmp
push
pop
jb
pop
adc
push
fs
pop
mov
adc
retf
inc
mov
cld
call
nop
pop
scas
xchg
call
jb
sti
push
shr
or
jp
inc
mov
mov
and
dec
lods
les
mov
mov
(bad)
fcomp
arpl
nop
jmp
sub
sub
xor
jbe
sub
nop
int3
pop
or
lahf
sub
or
push
push
adc
and
mov
movs
ds
inc
imul
repz
jg
adc
dec
fmul
std
cmp
add
fs
xor
xor
aas
sbb
mov
pop
movs
test
add
and
jno
sub
sahf
push
test
mov
mov
add
sbb
xchg
dec
adc
loop
push
adc
jmp
add
retf
pop
test
retf
or
cmc
out
mov
rol
aaa
test
aas
sub
addr16
lods
mov
test
in
add
nop
fstp
jg
inc
scas
mov
xor
push
push
push
or
cwde
fcomp
loope
mov
inc
repnz
mov
fsincos
mov
mov
out
mov
out
mov
xor
out
xor
add
add
ja
jno
inc
dec
dec
fdiv
sbb
lds
cmp
mov
jmp
xchg
cmp
in
jecxz
test
mov
ds
pushf
mov
in
test
mov
sti
in
mov
mov
iret
rol
in
mov
ds
rcl
fdiv
loopne
rcl
in
call
mov
sti
in
data16
clc
jge
mov
cld
add
add
fldenv
or
fldenv
jge
sbb
addr16
jge
and
sub
jge
fnstenv
xor
jge
fldenv
inc
inc
neg
addr16
dec
dec
push
fldenv
jge
pop
pop
pusha
addr16
jge
fs
fnstenv
js
neg
addr16
test
je
pusha
mov
aam
stc
xor
jmp
pop
pop
call
dec
pop
jp
dec
inc
(bad)
mov
push
adc
mov
sub
inc
imul
leave
lds
sbb
out
imul
fnstcw
dec
aas
aas
dec
pushf
jb
out
mov
(bad)
repnz
dec
or
mov
cwde
xchg
shr
ins
fsubr
aam
sbb
(bad)
push
or
or
outs
retf
mov
aaa
frstor
shl
adc
dec
xchg
pusha
cmp
or
push
in
inc
or
imul
xchg
mov
in
rcr
add
aaa
xchg
xor
sbb
xor
mov
pushf
aas
add
(bad)
into
out
nop
in
bound
aam
sub
cmps
fcomip
or
inc
and
sbb
iret
add
pop
fadd
mov
pop
fs
addr16
pop
or
add
cmc
and
push
jge
dec
dec
inc
int
stos
xchg
gs
xchg
push
mov
repz
int3
push
lock
imul
test
add
pop
call
dec
rol
sub
inc
jmp
ror
sbb
adc
jne
cmp
mov
pop
dec
mov
retf
(bad)
jmp
(bad)
cmps
stos
mov
in
mov
mov
cmp
and
mov
lds
mov
inc
sub
cmp
pop
mov
std
aas
push
xchg
xchg
(bad)
in
fcomp
dec
xor
push
das
fld1
dec
aam
inc
outs
push
xchg
mov
adc
pusha
cmps
aaa
les
push
mov
push
ret
leave
and
cwde
fsubr
dec
repz
inc
ins
pop
(bad)
nop
(bad)
cwde
dec
leave
push
push
stos
push
or
dec
add
icebp
addr16
sti
adc
pop
pop
mov
xchg
add
bnd
sub
inc
ret
cli
sub
sbb
mov
test
ja
and
in
and
mov
mov
mov
leave
xor
jnp
xor
je
or
mov
add
ins
cld
jmp
xor
cmp
and
adc
std
syscall
sub
loop
xor
repz
mov
adc
test
push
push
cmps
mov
rol
ret
dec
jnp
or
repnz
(bad)
and
xchg
inc
push
or
ret
das
add
or
mov
in
push
xchg
repnz
mov
rcr
inc
cmp
lock
cmp
sbb
ss
js
push
inc
push
ret
or
add
std
(bad)
jmp
sub
or
adc
repz
adc
dec
aad
hlt
lods
mov
cli
les
je
ins
leave
pop
add
aad
and
int
dec
jne
xchg
mov
dec
out
or
enter
mov
jae
xor
dec
lock
movs
xchg
adc
into
push
movs
je
or
and
or
sbb
ret
fcom
mov
sbb
mov
mov
jmp
loop
out
cmp
in
push
xor
adc
hlt
mov
sub
sub
xor
fidivr
adc
mov
in
outs
push
lods
fcomp
test
cdq
jmp
jg
sahf
add
or
push
mov
add
jp
in
lock
ficomp
and
fs
imul
xor
xor
cmp
mov
dec
xchg
mov
mov
ins
cmp
or
sti
pop
cli
xchg
call
aam
leave
test
cli
leave
daa
pop
aam
ss
adc
or
adc
test
sbb
mov
retf
sub
addr16
xor
ds
add
push
int
mov
add
fbld
xor
jecxz
mov
dec
cmp
adc
push
inc
xor
sub
retf
jnp
stos
push
push
push
xor
sbb
or
xlat
sub
bound
sub
fstp
xor
(bad)
dec
jmp
dec
add
push
xor
fcomp
or
jno
xor
xchg
sub
lods
xchg
dec
imul
xor
enter
push
jmp
push
mov
add
inc
xor
cmc
loopne
ja
sbb
mov
sub
ins
ret
imul
push
icebp
fdivp
repnz
clc
std
aaa
dec
cdq
int3
popf
fbstp
cwde
cmp
xor
cmp
jns
and
push
and
aas
test
add
xor
push
push
cmp
inc
mov
fldcw
mov
adc
push
cmp
daa
adc
mov
jne
fcomp
enter
xchg
push
enter
pop
inc
pop
xor
aam
mov
ss
adc
push
jnp
xor
xchg
fdiv
bound
jle
(bad)
je
jnp
lea
push
fcmovbe
dec
inc
cdq
mov
arpl
fwait
cmps
mov
xchg
int3
test
sub
mov
(bad)
cmps
jne
mov
xor
jns
cmp
outs
add
jp
inc
adc
dec
daa
movs
dec
call
inc
in
cwde
popf
sub
ror
inc
int3
push
mov
stc
adc
dec
in
cmc
cs
(bad)
lahf
inc
add
lods
adc
shl
(bad)
sbb
call
loopne
jl
add
ret
or
in
xchg
push
in
pusha
hlt
icebp
adc
or
mov
jmp
mov
cmp
add
mov
or
fist
jl
push
lock
push
lock
inc
push
push
ror
fadd
daa
(bad)
jmp
cmp
mov
lock
push
mov
inc
cmp
aaa
xor
pusha
mov
ins
mov
sahf
mov
sub
js
pop
dec
mov
sbb
repz
lods
xchg
enter
test
xlat
inc
and
dec
nop
test
push
fdiv
xchg
jmp
cwde
daa
pop
sbb
shl
adc
mov
rol
or
xor
retf
push
mov
dec
adc
ret
imul
add
cli
adc
cmps
xor
je
(bad)
enter
jae
enter
(bad)
push
shl
add
dec
js
cmp
leave
(bad)
and
bound
retf
adc
xchg
push
cmp
ret
xchg
dec
xlat
pop
mov
ret
inc
jnp
cmp
arpl
lock
mov
cld
mov
ror
out
stos
les
les
xor
inc
in
sub
xchg
fadd
(bad)
(bad)
loope
lock
test
adc
sbb
rcr
sar
sbb
ror
mov
sti
jecxz
add
neg
rol
ss
push
jmp
or
pop
mov
and
or
mov
cli
int
push
clc
arpl
and
imul
push
jne
stc
pop
dec
ret
push
or
mov
dec
in
xchg
push
add
or
xchg
dec
lock
nop
ins
cmp
mov
js
mov
shr
sbb
and
jne
out
push
xchg
and
repnz
retf
mov
mov
or
iret
and
mov
ror
inc
aam
shl
out
hlt
out
push
loop
sub
xchg
adc
out
aaa
push
mov
jle
or
retfw
push
mov
clc
push
clc
(bad)
in
imul
add
pop
xchg
scas
fldenv
cmp
sbb
enter
hlt
dec
and
ror
push
xor
aam
xchg
aam
rcl
cmps
stos
ins
jmp
inc
jmp
outs
imul
push
or
imul
aam
int
sub
dec
sub
fiadd
and
push
(bad)
pop
ret
inc
jae
jp
jmp
jmp
pop
in
dec
sub
mov
sbb
sub
lods
movs
xor
inc
(bad)
xchg
inc
or
mov
je
push
jbe
mov
xor
mov
xor
adc
int3
add
xor
or
add
fsub
mov
shr
outs
and
mov
mov
inc
inc
pusha
retf
inc
(bad)
cs
call
je
test
data16
jg
popa
nop
mov
call
in
jmp
rol
aam
fsub
jl
xchg
mov
inc
dec
out
ret
adc
fs
test
jno
loopne
jmp
sti
inc
sub
or
les
jmp
and
sbb
lds
stos
and
jl
sbb
aad
(bad)
adc
pop
inc
add
icebp
ja
sub
xchg
pop
add
fld
test
cmp
adc
add
add
cdq
sub
in
add
imul
adc
xchg
xchg
inc
xor
scas
pop
add
pop
je
cmp
and
idiv
xchg
sub
fwait
cld
inc
int
mov
sub
sub
adc
adc
push
adc
ss
jmp
push
adc
push
mov
cmc
jp
push
gs
jbe
and
es
jne
add
out
and
dec
adc
dec
push
in
mov
fdivr
inc
adc
sub
mov
and
pop
sbb
or
aam
cmp
inc
push
movs
test
arpl
or
jmp
iret
(bad)
xor
inc
mov
jle
or
repz
push
or
cld
mov
push
fsub
les
push
cmps
push
and
adc
sti
sub
add
scas
js
aad
mov
pusha
movs
xchg
pop
jb
clc
lock
sbb
jmp
cld
test
stos
dec
rol
inc
std
dec
stc
jmp
or
sbb
cmc
mov
lea
add
add
or
xor
jmp
inc
or
scas
push
add
and
fwait
lahf
xchg
mov
daa
(bad)
mov
inc
mov
add
retf
adc
pop
(bad)
int
xchg
clc
adc
xchg
mov
xchg
adc
pop
jae
and
pop
and
ins
add
and
movs
mov
dec
ret
stos
adc
rcr
mov
es
call
call
cmps
jns
xor
xchg
inc
mov
or
xor
inc
scas
gs
mov
mov
jnp
sub
push
xchg
cld
mov
sub
jecxz
stos
repz
mov
or
push
in
scas
pop
mov
cdq
or
mov
or
dec
inc
retf
bound
or
or
shr
or
nop
xchg
clc
(bad)
push
dec
shl
add
je
sbb
stc
push
jmp
(bad)
(bad)
cld
push
sar
and
mov
in
push
dec
push
ds
push
ret
ds
xor
mov
add
push
push
aas
adc
adc
jnp
push
lea
call
push
xor
sbb
into
jae
js
inc
test
push
fld
inc
jmp
xchg
xchg
(bad)
sbb
cmp
popa
(bad)
fwait
push
cmps
sub
mov
cmp
ror
xor
xor
xchg
sub
leave
push
lods
and
xchg
fcomi
jns
cmc
pop
lea
stos
dec
inc
or
pushf
lea
xchg
enter
xchg
call
add
sbb
inc
and
mov
movs
mov
dec
jmp
jmp
lods
fild
and
and
lea
inc
xor
lods
xchg
cmps
push
push
pop
or
jae
push
mov
mov
add
movs
push
rcl
or
inc
adc
hlt
ss
xor
or
out
dec
ret
rol
push
into
sub
sbb
cld
xor
cli
std
and
aas
pop
jb
adc
bound
cmp
pop
imul
mov
push
adc
ss
dec
fidivr
popa
inc
bound
test
push
sub
dec
lock
mov
inc
and
lock
pushf
jns
jp
add
inc
jmp
inc
xor
mov
inc
adc
mov
scas
lds
mov
mov
ret
pusha
add
jb
push
inc
adc
das
mov
mov
or
inc
jmp
mov
jmp
outs
inc
mov
or
cdq
dec
dec
pop
bound
sbb
mov
adc
adc
aam
repnz
dec
and
int
xchg
pop
outs
fwait
jae
jb
mov
sub
adc
dec
sahf
push
pop
and
and
popa
bound
rcl
leave
add
cmp
jne
(bad)
iret
out
or
adc
pop
add
movs
lods
cmp
push
lea
cwde
and
rol
jnp
jne
inc
jae
mov
mov
add
push
(bad)
push
fsubr
mov
xor
(bad)
test
jl
clc
or
sub
push
lea
xchg
cmp
sbb
adc
test
mov
and
stos
mov
and
cmc
bound
pop
sbb
jne
add
xchg
call
pop
iret
in
ret
and
xor
dec
leave
push
sbb
inc
jns
mov
cmp
cdq
ja
int
outs
mov
and
lock
stc
aaa
fisubr
pop
jno
push
cdq
xor
and
dec
push
inc
arpl
mov
sub
inc
mov
(bad)
lds
and
jecxz
mov
imul
push
push
imul
loop
xor
loop
mov
cmp
mov
mov
(bad)
cld
scas
inc
fisub
push
jecxz
daa
adc
add
movs
lods
test
cmp
jo
dec
adc
pop
xchg
xor
mov
cmp
cmp
les
and
add
retf
mov
fnsetpm(287
mov
loopne
pop
movs
jmp
push
lods
fisubr
inc
das
test
adc
shr
jg
push
loope
or
mov
ins
sbb
push
into
arpl
ret
mov
pusha
scas
sub
sub
(bad)
fsub
(bad)
sbb
push
pop
sti
sbb
into
xor
les
repz
or
sub
pop
adc
jge
and
daa
in
mov
rol
fiadd
and
into
loop
cmp
je
stc
jmp
mov
ror
lea
pop
fld
push
inc
int3
jecxz
(bad)
xchg
sub
add
xor
xor
inc
push
or
sub
test
add
mov
pusha
sub
inc
sub
pop
cmp
into
xor
div
xlat
adc
fcmovb
xchg
data16
ds
xchg
or
mov
fist
fmul
int
adc
xor
mov
mov
rcr
push
add
xchg
mov
mov
test
add
xchg
add
mov
jne
push
enter
movs
lea
jp
jb
push
aaa
mov
mov
or
and
mov
and
aam
jns
fadd
jmp
jnp
fiadd
mov
mov
dec
retf
loope
lds
call
add
ret
in
push
es
stos
cmp
(bad)
into
aaa
mov
dec
dec
ss
sub
xor
in
xchg
pusha
ret
and
sbb
and
sbb
cmp
or
les
repnz
int3
push
cmps
out
shr
bndldx
leave
cmps
stc
mov
push
xchg
cmps
fsubr
inc
jmp
sub
push
sar
sub
sub
pop
adc
jge
lock
or
enter
ficomp
leave
stc
push
inc
ja
lock
mov
fist
std
adc
jmp
dec
clc
repnz
mov
pusha
mov
sub
aaa
or
dec
lds
mov
cld
or
push
or
push
and
sub
in
and
outs
adc
sub
lock
pop
sbb
mov
xchg
lock
pushf
pop
inc
or
in
push
lock
lock
fst
push
dec
jnp
cmps
dec
jmp
add
mov
ret
push
sbb
cwde
mov
and
mov
xor
push
add
jb
jp
mov
out
jne
add
neg
jb
dec
gs
mov
pop
sub
and
les
xor
xor
xchg
arpl
xchg
aam
add
jmp
sub
ret
or
(bad)
sbb
or
mov
arpl
dec
hlt
sub
xor
sahf
sub
lahf
pop
adc
cld
push
mov
cld
rol
adc
imul
aas
mov
cwde
in
data16
cld
adc
pushf
lds
jle
inc
cmp
sub
loopne
neg
cdq
push
pop
lods
and
xor
shl
inc
xchg
test
loop
push
mov
cmp
call
push
nop
je
cmp
mov
pop
and
lahf
dec
pop
sub
shr
ds
test
inc
xchg
cld
cld
call
cld
cld
cld
push
lods
clc
sub
rcr
mov
inc
mov
ss
and
loopne
popf
xlat
mov
add
loopne
icebp
push
pop
loopne
mov
shl
jmp
mov
pop
ja
jno
push
push
and
imul
xchg
loopne
sahf
lods
dec
loopne
jmp
cmp
dec
enter
push
sub
jne
cmp
push
mov
int3
(bad)
dec
enter
clc
pop
dec
clc
inc
fld
scas
ins
popf
outs
push
dec
(bad)
lods
(bad)
in
sub
jne
push
inc
retf
fcmovbe
jbe
test
inc
fidivr
stc
push
mov
xor
pop
imul
sbb
ret
mov
(bad)
mov
or
or
xor
mov
lods
lahf
nop
call
add
addr16
mul
je
push
push
mov
jp
inc
into
loopne
jae
gs
(bad)
shl
or
xor
adc
iret
loopne
ds
inc
loopne
push
dec
mov
rcl
mul
out
xor
int3
aaa
mov
mov
outs
sub
mov
dec
and
xor
jmp
push
addr16
sub
out
retf
xor
sbb
mov
std
je
jns
arpl
lea
pop
out
inc
mov
mov
sub
inc
or
dec
mov
inc
push
in
jmp
push
and
sub
inc
and
jecxz
jge
push
sbb
and
xchg
imul
add
les
mov
adc
xchg
sbb
rcr
in
jge
and
mov
xor
in
clc
add
sbb
je
stc
or
mov
push
cli
or
ss
(bad)
sub
cmc
retf
je
loopne
nop
mov
mov
in
push
call
test
mov
jmp
push
and
jg
je
pop
lock
popa
dec
nop
int3
or
and
sbb
xchg
mov
jmp
test
pop
push
mov
push
in
shl
or
and
cmp
inc
bnd
push
or
fbld
and
fdiv
sub
je
inc
adc
push
push
cmp
mov
add
hlt
pop
pop
and
in
push
mov
mov
std
jl
sub
inc
jne
jmp
inc
idiv
ret
cmp
push
xor
sub
(bad)
je
push
rol
dec
sub
jecxz
push
inc
cli
pslld
loope
add
fadd
mov
xchg
inc
cli
sub
fs
add
push
sbb
leave
pop
movs
push
cmp
aad
enter
mov
adc
xor
jmp
test
cmp
outs
push
scas
inc
(bad)
cmp
fmul
mov
mov
jo
or
inc
mov
inc
inc
cwde
out
push
sbb
stc
push
mov
fucomi
sub
je
push
and
pop
pop
jo
pop
lea
push
dec
ins
mov
sbb
ja
dec
xor
lock
test
mov
mov
or
xchg
das
inc
jmp
inc
add
daa
jl
xchg
jmp
mov
adc
xor
and
jne
call
pop
jp
dec
add
nop
nop
int
ret
sub
pop
mov
or
out
mov
xor
dec
cmp
mov
add
jecxz
push
nop
mov
aam
jl
sbb
pop
cmp
mov
mov
jmp
cmp
ins
jmp
mov
adc
pop
xchg
les
mov
adc
add
sahf
mov
sub
int
(bad)
in
mov
push
ja
test
and
dec
sub
test
xor
dec
or
jmp
mov
xor
or
sub
pop
push
cs
xchg
push
adc
test
add
mov
ror
and
les
fisubr
in
jmp
push
sub
sbb
jb
add
or
or
dec
(bad)
aam
les
aaa
int3
jns
or
jo
ret
mov
aam
sbb
or
mov
sahf
jne
adc
bound
ins
dec
mov
mov
(bad)
sbb
cmc
movs
sbb
and
dec
adc
jb
imul
or
lea
mov
jmp
or
lock
xchg
arpl
xchg
mov
mov
and
push
movs
push
adc
adc
nop
aam
add
ja
and
aam
je
adc
je
cmp
lods
movs
cmp
call
push
std
test
aad
icebp
sbb
rcr
jmp
pop
iret
push
and
fcom
in
ret
rol
sahf
mov
lods
loop
mov
imul
clc
nop
ins
push
inc
ja
rcr
rcr
jne
(bad)
popf
jne
lods
mov
jno
jns
out
test
mov
mov
je
ja
cmc
sbb
popf
push
test
sbb
jne
cmovs
clc
push
adc
outs
movs
dec
xor
mov
add
jmp
push
lods
nop
sub
push
ret
jmp
cld
(bad)
bound
js
test
dec
nop
in
jo
xchg
sub
sub
(bad)
jecxz
pop
sub
shl
push
xchg
push
sub
push
retf
add
add
or
or
or
std
jg
push
test
bound
clc
xchg
or
mov
inc
or
sbb
adc
in
nop
sbb
rol
jmp
mov
stos
gs
rcl
inc
out
push
cld
cmps
dec
mov
inc
dec
mov
xchg
and
lds
mov
aaa
add
lds
sbb
mov
sbb
mov
inc
push
sub
mov
xchg
adc
std
push
jmp
pop
pop
inc
inc
fld
sbb
sbb
fucomi
adc
cdq
add
inc
lea
jmp
mov
mov
mov
in
cmp
and
jmp
test
ret
sub
inc
out
cmp
popf
je
mov
mov
jmp
int3
push
inc
mov
ss
sub
nop
std
cmp
pop
int
psubq
or
push
mov
gs
mov
and
shl
jno
pop
add
inc
add
jecxz
jmp
pop
adc
cmp
test
js
sub
adc
int
je
test
cmc
das
sbb
mov
adc
scas
and
jae
(bad)
sbb
jle
add
in
adc
sub
inc
xor
or
pop
jmp
add
aaa
dec
add
mov
popa
fmul
imul
add
cs
sub
jbe
test
add
arpl
enter
and
xchg
dec
test
inc
add
add
enter
mov
push
fmul
push
fwait
mov
inc
cmc
fsubr
mov
in
add
pop
and
xor
nop
push
fist
cmp
mov
and
aam
mov
movs
(bad)
mov
mov
adc
aam
aas
adc
xor
mov
push
test
rcr
or
imul
mov
mov
cmp
das
mov
push
and
stos
retf
inc
sbb
jg
cld
push
push
or
add
add
push
and
mov
pop
ja
aam
push
sub
mov
je
mov
pop
adc
popf
inc
test
sbb
adc
lock
push
push
adc
mov
lds
dec
mov
inc
mov
nop
aad
xor
shl
sti
test
jmp
in
in
sahf
rcr
stc
pop
out
les
inc
test
ss
push
test
inc
inc
imul
push
in
mov
js
and
mov
inc
xor
sub
add
dec
lods
mov
popf
sbb
bound
push
mov
jmp
mov
mov
mov
push
xor
mov
ins
push
movs
movs
cmp
push
dec
ficom
xchg
cwde
nop
xchg
dec
add
push
pop
xchg
aas
adc
or
xchg
jge
push
scas
inc
mov
jmp
and
mov
cmp
test
jmp
outs
dec
xor
aaa
sub
mov
cmps
or
jae
cmp
test
lds
je
cld
mov
cld
lods
adc
jo
loopne
push
inc
xor
mov
cmp
pop
or
fs
cmp
mov
and
retf
mov
inc
mov
dec
adc
adc
shr
mov
ret
rol
jle
pusha
cld
pushf
mov
adc
rol
push
dec
jae
fs
fld
and
in
inc
adc
jle
mov
push
add
xchg
pop
mov
or
xlat
xchg
mov
push
xor
push
push
push
mov
bound
jge
cmp
xor
cmc
push
sub
or
fwait
xchg
(bad)
sbb
or
sbb
mov
xchg
cld
or
in
in
cmp
(bad)
mov
mov
pop
mov
push
(bad)
leave
push
push
not
and
inc
mov
sub
loopne
loope
xor
gs
retf
dec
test
(bad)
xchg
push
mov
fld
mov
or
sub
sbb
inc
push
je
(bad)
push
inc
in
in
jne
enterw
sbb
mov
in
jge
int3
or
pop
sti
push
std
sbb
add
sub
push
movs
ret
xor
cmp
jbe
ins
pop
loope
or
cmp
dec
cmp
loop
mov
jo
xor
or
inc
dec
and
jns
dec
cmp
inc
shr
push
xor
and
push
lods
arpl
jb
push
inc
xchg
loopne
ret
fimul
clc
add
clc
cmp
and
loopne
ss
add
jae
xchg
push
cmp
mov
add
int3
clc
inc
jmp
test
dec
mov
jne
xor
ins
cmc
das
fdivr
jmp
push
mov
in
sahf
mov
lahf
and
jp
dec
push
adc
mov
xchg
sub
cmp
xchg
inc
xor
inc
sbb
xchg
movs
in
add
or
jg
adc
sbb
mov
call
or
ja
xor
movs
add
jl
jg
xor
or
rcl
add
mov
imul
xchg
or
in
push
sar
std
dec
call
lahf
out
and
mov
push
dec
scas
sbb
sbb
dec
cmp
lahf
je
dec
nop
adc
out
cmp
fbld
pop
and
jmp
rcr
sahf
or
xor
xor
jnp
fcom
call
jns
mov
mov
xchg
adc
sbb
push
out
stos
or
jne
or
xor
inc
popa
mov
call
sbb
pop
xchg
dec
pusha
sar
sbb
xchg
lds
add
mov
push
mov
mov
sub
xor
sub
xchg
and
in
push
add
lods
cli
inc
inc
jmp
push
or
adc
adc
mov
mov
push
cmp
xchg
test
sub
cwde
ror
xor
xor
mov
adc
inc
cmp
out
ja
cmp
inc
xor
pop
lods
sub
pop
push
xlat
xor
mov
mov
xlat
jns
pop
inc
and
and
and
fidivr
add
jne
rol
gs
cld
sub
sbb
mov
xor
loope
sbb
call
add
out
and
sub
ins
sub
sbb
and
inc
in
add
lahf
adc
jmp
pop
jns
dec
retf
xor
outs
push
gs
sub
movs
es
sbb
add
shl
xor
xchg
xchg
cmp
cmp
xchg
mov
addr16
loopne
int
rcr
lds
push
retf
push
mov
dec
cmp
pop
lahf
push
mov
test
push
in
xor
loop
out
jae
das
inc
inc
cmp
jae
sbb
jo
or
movs
fmul
cmp
hlt
dec
dec
pop
xchg
ficomp
xchg
out
push
add
fisub
(bad)
in
call
loopne
sbb
dec
cld
jmp
(bad)
outs
jns
cmp
push
js
push
sub
mov
dec
add
pop
cld
shl
dec
jmp
imul
inc
add
ins
xchg
jb
je
and
test
pop
push
pop
call
xchg
mov
leave
sub
cmp
inc
jbe
rcl
push
int
xchg
in
cld
sub
ja
and
ss
xor
clc
ins
pop
xchg
pusha
sub
jno
cwde
in
xor
jmp
push
sub
mov
call
jbe
push
jmp
sbb
mov
and
in
sub
sar
push
jg
loop
sub
retf
mov
cmps
jle
fisubr
rep
adc
dec
cs
mov
scas
ins
pop
fwait
adc
cdq
xor
sbb
xchg
add
and
sub
and
xchg
mov
push
(bad)
cmp
mov
xlat
stc
mov
or
pop
ins
pop
(bad)
adc
cmp
dec
pop
leave
in
movs
push
das
in
xor
inc
jmp
imul
in
fs
push
or
lahf
adc
sti
inc
ret
sbb
sbb
dec
or
in
nop
xchg
xor
cmp
dec
mov
ins
fucomi
scas
sub
loope
add
ins
sbb
les
call
or
mov
in
test
mov
mov
movsx
adc
mov
sbb
mov
mov
mov
mov
(bad)
jmp
cmp
out
mov
fs
adc
push
shl
add
loop
and
mov
(bad)
test
add
aas
mov
ja
jb
stc
and
mov
or
mov
jnp
out
add
lea
repz
das
scas
hlt
scas
and
(bad)
push
cdq
mov
mov
or
dec
leave
mov
psrlw
mov
cmp
in
push
jns
push
lds
sbb
iret
push
push
neg
add
adc
movs
jmp
xor
dec
or
pop
pop
cld
xor
pop
mov
test
mov
ja
cdq
enter
jmp
cmc
ds
(bad)
ja
out
inc
adc
fadd
rcl
(bad)
jg
dec
pop
inc
(bad)
and
cmps
pusha
nop
aad
enter
and
mov
inc
call
push
je
es
mov
mov
in
cmp
(bad)
pop
pop
or
cmp
jmp
pop
(bad)
jmp
push
jg
or
imul
ins
fbstp
add
push
sti
pop
stos
pop
(bad)
imul
out
test
es
pop
imul
(bad)
jmp
out
push
inc
or
int
lods
push
add
int3
or
sbb
pop
nop
mov
adc
jp
adc
xor
pop
pop
inc
mov
push
sbb
adc
jg
sbb
adc
mov
stos
or
out
jp
sti
and
dec
shr
xor
adc
jns
outs
aad
push
dec
push
stos
push
retf
xchg
in
mov
fmul
sbb
rcl
retf
imul
rcl
shl
jg
or
sti
xor
rcr
inc
push
cmp
xchg
mov
adc
push
pop
mov
xchg
lahf
inc
adc
inc
pusha
jbe
sbb
push
jmp
mov
clc
xor
push
sbb
mov
and
pop
in
mov
jle
ins
add
adc
xlat
icebp
fsub
jae
adc
xlat
inc
movs
in
xchg
fbld
not
xchg
xchg
popf
mov
and
test
enter
push
inc
popf
sub
or
inc
rcl
push
inc
mov
mov
fs
xor
int3
pop
aam
pusha
fbld
int
stos
jecxz
inc
into
pop
dec
aam
dec
jae
mov
adc
add
popf
sbb
push
sar
sbb
sbb
jp
dec
pop
and
adc
daa
sbb
in
push
or
mov
loopne
cmps
fild
and
inc
mov
and
fmul
xor
or
jge
or
sbb
fbld
pop
addr16
out
aam
cs
cmp
call
mov
push
push
repz
push
(bad)
jmp
pop
adc
xchg
call
arpl
inc
mov
jo
out
inc
daa
dec
push
leave
mov
movs
imul
imul
ins
dec
mov
adc
cmp
inc
dec
push
popf
add
and
pop
fistp
adc
test
aam
sub
push
je
shl
add
fwait
es
or
jmp
mov
sbb
out
push
das
and
sahf
rcr
outs
lock
div
cli
aad
mov
stos
and
sbb
mov
xchg
mov
push
push
push
mov
sub
push
ret
idiv
daa
xor
ins
jnp
add
inc
adc
idiv
mov
ja
rcl
and
cmp
in
retf
sbb
push
fmul
pop
mov
in
sub
jns
mov
inc
out
push
inc
push
loopne
add
cmp
je
inc
sbb
mov
fs
das
mov
in
add
jg
popf
repnz
loope
lea
dec
aad
dec
test
mov
or
cmp
or
sub
inc
idiv
jle
xchg
lea
push
inc
sbb
pop
and
outs
mov
push
loope
inc
stos
iret
and
cld
and
imul
daa
add
and
jge
xchg
mov
push
sub
push
push
push
xchg
mov
add
(bad)
adc
mov
lods
lahf
addr16
cdq
dec
mov
out
jmp
popa
inc
push
mov
iret
mov
ret
xor
jbe
or
dec
sbb
sbb
xor
sub
arpl
sbb
pop
adc
mov
dec
mov
lea
jge
or
stos
movs
push
clc
sub
idiv
mov
jo
je
dec
inc
out
jae
jmp
push
fwait
xchg
cs
add
or
cmp
fmul
mov
and
inc
hlt
jmp
dec
xor
push
jl
xchg
or
es
and
cwde
hlt
out
movs
cmps
data16
outs
dec
xor
push
cmc
dec
stos
or
in
dec
stos
scas
jp
add
movaps
jmp
sub
xor
faddp
mov
jg
cmp
and
cmp
or
cs
cmp
(bad)
out
dec
pushf
sbb
cld
scas
xor
add
and
popf
or
or
out
jb
xor
lock
mov
test
add
and
lods
cs
ins
std
dec
sti
inc
sub
dec
stc
icebp
mov
cld
cmp
jmp
cmp
or
nop
and
bound
pop
xchg
xor
and
sbb
das
or
cmc
push
in
lods
ins
add
sbb
mov
mov
mov
push
pop
fild
cmp
add
fcom
sub
jae
mov
add
or
je
mov
xchg
fstp
mov
loopne
and
ficom
push
sub
fwait
sbb
dec
sbb
movs
data16
inc
push
lldt
mov
hlt
push
shl
or
pop
mov
fadd
mov
jecxz
add
cmp
test
cmps
add
leave
adc
movs
or
xor
push
imul
push
mov
push
lods
xor
cdq
dec
lock
sub
retf
dec
jo
test
push
imul
stos
aam
push
dec
int3
lock
mov
jbe
jp
mov
sub
adc
sbb
mov
jle
mov
inc
clc
jbe
pop
push
jg
and
xchg
fisubr
mov
or
or
cmp
or
xchg
aaa
xchg
shr
adc
push
int
pop
retf
ja
add
pop
dec
pop
cld
pop
mov
push
push
ret
test
(bad)
mov
cli
addr16
jg
out
pop
je
out
(bad)
nop
lods
adc
and
cmp
cli
pop
movs
fmul
cmc
pop
jg
or
inc
mov
test
push
jge
or
mov
or
sub
push
jnp
dec
aad
sar
mov
push
or
jnp
mov
xchg
pand
mov
pop
push
imul
ins
cmp
sub
inc
or
arpl
pop
inc
cmp
xor
sbb
adc
push
add
sbb
aaa
add
jp
fbstp
add
mov
test
or
mov
sub
xor
push
push
and
outs
push
inc
ja
xchg
mov
pusha
inc
fs
out
sub
adc
or
adc
fs
sbb
sbb
xor
add
or
std
rcl
adc
adc
and
push
jmp
ret
in
inc
fsubr
cmps
(bad)
int3
fdivr
xor
cmp
sub
adc
or
push
sub
jge
mov
(bad)
das
movs
sub
adc
in
ins
pop
test
push
int3
adc
jl
jno
outs
pop
adc
gs
fild
popw
pop
fisub
jmp
rcl
jg
pop
push
inc
push
or
xchg
stos
jmp
ror
xor
dec
or
(bad)
xchg
shl
add
add
xor
mov
mov
mov
and
cmp
inc
int3
cmp
stos
pop
push
and
dec
lea
adc
cmp
or
and
in
nop
cwde
xchg
repnz
cwde
inc
xchg
int3
les
gs
xor
dec
adc
jae
stos
jl
imul
mov
pop
fnstenv
jmp
sbb
jae
add
mov
jle
xchg
ins
cmps
jmp
add
mov
test
inc
add
inc
and
sub
cmps
adc
mov
shl
xchg
jo
mov
cdq
inc
inc
ja
enter
ins
ins
jb
or
xor
es
jmp
call
jb
test
imul
shl
aad
mov
xor
inc
sub
jb
aas
cmps
in
in
imul
in
les
imul
push
mov
push
push
iret
test
and
add
shl
adc
mov
and
mov
lds
iret
cmps
or
sub
cmp
mov
sub
movs
retf
adc
or
lods
inc
sub
adc
push
(bad)
(bad)
pop
push
add
pop
sub
xor
inc
(bad)
fld
jp
sahf
out
test
cmp
sbb
cld
repz
add
add
retf
add
sbb
xor
pop
sar
and
cdq
dec
test
jl
push
pmaxub
inc
imul
or
or
adc
dec
sti
push
inc
stos
mov
or
add
fdivr
xor
fst
leave
dec
dec
jle
sub
jmp
adc
or
cmp
sub
mov
(bad)
scas
adc
jmp
and
xlat
mov
add
std
lea
add
inc
mov
inc
push
(bad)
fstsw
and
repz
sbb
pcmpgtb
push
lea
out
mov
push
mov
jb
std
sub
adc
stos
xchg
cmp
test
hlt
das
inc
data16
and
loop
nop
stos
push
in
xchg
sub
cld
gs
inc
mov
and
hlt
jb
and
inc
xor
gs
dec
sbb
(bad)
push
movs
xlat
jns
inc
jmp
and
dec
or
fs
push
lahf
dec
fucomi
sahf
push
push
test
sub
es
repnz
cld
std
scas
mov
mov
mov
push
or
pushf
push
mov
mov
fwait
cli
mov
clc
lods
call
enter
je
mov
mov
cli
imul
data16
inc
xor
out
leave
ja
jg
(bad)
js
fldcw
pop
or
sar
adc
nop
and
mov
aam
cmc
pop
fist
push
in
mov
jge
dec
mov
dec
(bad)
fistp
xor
adc
call
xchg
pop
movs
dec
inc
and
mov
xchg
sti
movs
fldenv
cmp
fist
sbb
inc
fisttp
dec
pop
sub
fnsave
(bad)
mov
test
adc
jmp
loopne
sub
pop
jle
hlt
imul
retf
jb
enter
adc
cmp
push
mov
jno
jbe
push
adc
retf
add
or
pop
cwde
je
push
sub
repnz
in
cmp
jae
in
inc
hlt
fcom
js
push
jmp
add
push
cmc
mov
xor
mov
ja
fs
cmp
inc
std
jbe
mov
mov
and
cld
push
xchg
add
add
cwde
fdivr
cdq
xor
or
xchg
jno
aad
xchg
pop
pop
push
mov
or
test
ds
mov
inc
mov
fwait
cwde
add
add
xchg
loope
(bad)
(bad)
test
(bad)
in
or
mov
call
or
inc
inc
or
ss
outs
call
jbe
push
rcl
cwde
jmp
sar
push
call
adc
cli
jge
cs
sar
push
js
adc
and
jg
(bad)
jmp
mov
jmp
sbb
popf
push
test
push
xchg
add
pop
mov
rol
jg
je
jmp
int3
aam
dec
sub
push
jp
or
jl
push
or
test
cmp
jo
lds
je
or
aam
dec
pop
clc
movs
push
xchg
fwait
cmps
pop
xor
mov
loop
loop
push
jnp
ret
adc
pop
call
stos
pop
xchg
cmps
adc
in
cwde
iret
push
imul
or
jmp
adc
adc
mov
or
or
mov
dec
clc
sbb
xchg
mov
add
jno
pop
lods
cwde
enter
test
pop
adc
mov
popa
movs
sub
movs
mov
jp
je
fdivr
ins
cmp
cmp
call
jo
stos
in
pushf
or
adc
call
mov
sub
pop
and
add
or
xchg
in
mov
or
retf
add
dec
mov
push
mov
push
pop
or
sub
dec
(bad)
mov
inc
outs
or
lods
push
adc
hlt
jae
je
mov
fs
call
push
push
and
retf
test
and
add
(bad)
sbb
lea
iret
repz
fwait
add
fcomp
adc
jmp
push
std
lods
adc
cmp
sbb
jnp
ss
push
push
sbb
add
mov
sbb
or
cmps
sub
ds
add
bound
mov
jecxz
dec
jnp
arpl
add
sub
mov
hlt
cmp
sub
mov
ds
nop
(bad)
mov
or
ja
int3
xor
push
pop
mov
and
jle
or
or
xor
add
loopne
lea
or
jl
cmp
add
add
imul
adc
repnz
jne
rol
pop
or
inc
pop
out
or
jg
mov
or
add
sti
jge
mov
xlat
cmp
jns
xchg
push
add
ds
or
data16
or
jne
outs
mov
loop
pusha
cmp
jmp
icebp
jno
sbb
dec
inc
cmp
ss
cmps
lea
(bad)
(bad)
(bad)
adc
sub
sti
push
and
lahf
jge
iret
popa
shl
iret
repz
fsub
in
mul
jns
mov
sub
cmp
push
pop
jns
out
outs
js
mov
mov
sahf
out
sahf
rcr
out
cli
cmp
repz
push
sbb
sub
repz
repz
dec
push
pop
push
jb
xchg
cmp
scas
mov
cmp
repz
hlt
inc
(bad)
or
sbb
sub
ss
jmp
xchg
shl
dec
push
lods
and
pop
retf
stos
push
mov
add
adc
adc
sbb
dec
sbb
loope
add
sbb
and
and
and
sub
dec
sub
sub
add
xor
bound
xor
ss
mov
cmp
fs
rol
cmp
ds
lods
pop
jbe
inc
dec
inc
inc
cld
js
loop
inc
inc
inc
add
dec
dec
dec
inc
sbb
out
pusha
and
adc
sub
jne
push
fsubr
mov
push
nop
stos
add
adc
sahf
cmp
rcr
xchg
xor
sub
and
xchg
push
(bad)
pop
and
mov
inc
stc
je
mov
xchg
cmp
je
sub
jne
or
shl
lea
daa
sub
xor
cmc
dec
ror
sbb
ficomp
aam
add
pop
xor
push
dec
popa
out
adc
mov
fwait
sbb
imul
cwde
and
sub
add
or
dec
xor
pop
sub
(bad)
mov
cmp
inc
inc
mov
add
xchg
mov
cmps
shl
sbb
mov
dec
imul
adc
cmps
(bad)
fdiv
pop
jbe
loopne
adc
jmp
aam
dec
clc
push
retf
ret
mov
test
cmp
inc
aaa
push
push
hlt
fidiv
inc
mov
cmp
out
sub
or
xchg
push
adc
add
mov
cdq
or
clc
scas
fisub
and
sbb
sub
and
mov
in
in
in
push
daa
pop
int
aaa
jmp
pop
test
cmps
xor
xor
test
or
mov
jns
out
test
je
test
sub
mov
lods
rol
loop
aam
dec
rcl
inc
popf
add
push
dec
xchg
jne
outs
test
pusha
xchg
mov
ja
call
jb
mov
pushf
mov
mov
cmp
test
in
push
loop
scas
ins
jmp
dec
pusha
inc
ins
push
pop
addr16
push
cld
mov
dec
adc
mov
push
ror
pop
mov
jne
retf
jne
push
iret
push
movs
pusha
loop
imul
push
xor
sub
inc
cmp
fst
(bad)
rcl
mov
rcl
in
bound
int3
stc
cmp
xor
into
jmp
mov
push
inc
ins
push
mov
mov
outs
(bad)
je
movs
popa
cmp
(bad)
retf
repz
pop
enter
lds
test
rcl
sub
div
rcl
mov
xchg
or
icebp
push
retf
xchg
mov
push
mov
push
imul
mov
adc
in
dec
sbb
push
test
jmp
mov
inc
loope
pop
push
(bad)
pop
and
pusha
lock
stos
in
aad
test
mov
fadd
push
or
jge
xor
add
push
jg
mov
mov
xor
or
mov
or
stos
adc
and
xchg
into
or
sar
add
mov
xchg
and
pop
cmp
push
inc
sbb
clc
dec
and
pushf
mov
push
sbb
add
add
in
or
add
mov
int3
popf
mov
sahf
and
mov
sbb
cmp
xor
pushf
and
out
mov
mov
jge
movs
out
sub
dec
aad
inc
push
inc
jl
pop
mov
js
dec
sub
add
jg
adc
sub
cmp
sub
adc
lock
outs
xor
xor
push
fist
sub
cmp
jbe
cmp
cmps
xor
push
fidivr
neg
inc
movs
jmp
push
sbb
or
mov
mov
in
aaa
mov
je
add
jecxz
or
jo
mov
dec
or
jo
stc
lods
pop
push
sar
or
sub
add
pop
sub
push
xchg
or
sbb
add
fild
add
push
or
retf
jb
aas
enter
push
test
xor
and
fnstenv
xchg
or
je
test
xchg
into
inc
fld
int3
ror
push
je
inc
int
adc
mov
mov
xchg
mov
(bad)
std
inc
cdq
cwde
lds
add
and
or
xchg
sub
dec
mov
sub
or
shl
bnd
jne
adc
ror
in
xchg
adc
xchg
cmp
or
jmp
cmp
mov
dec
and
mov
movs
addr16
add
add
loopne
je
pop
pop
pusha
fwait
cli
cmp
clc
lea
ds
push
je
adc
mov
sbb
and
or
mov
outs
jge
jb
sbb
inc
outs
lock
mov
gs
push
lods
iret
push
jne
mov
pop
jmp
pop
sub
loopne
pop
sbb
push
pop
ror
fidivr
dec
xor
cwde
mov
adc
add
inc
push
jle
inc
jne
push
inc
mov
sub
sub
cmp
sbb
push
aam
shl
inc
and
test
addr16
sub
cli
nop
fistp
xchg
xchg
jg
sub
jmp
mov
mov
xchg
lock
outs
loopne
push
mov
mov
fs
rcl
adc
mov
and
xor
or
ret
pusha
add
das
or
xor
dec
add
sbb
add
pusha
pusha
adc
shl
mov
sub
pop
repnz
or
retf
and
or
and
mov
shl
popf
or
jp
cmps
mov
leave
bound
inc
and
mov
lahf
and
xlat
and
push
test
push
push
xor
mov
sub
pop
adc
xchg
mov
sub
enter
fsub
pop
dec
mov
rcl
push
pop
mov
jle
cmp
mov
jge
nop
aam
retf
adc
or
rcl
push
dec
(bad)
cli
daa
add
or
adc
sbb
in
jmp
cmp
movs
dec
sbb
inc
inc
adc
mov
jg
inc
jne
addr16
mov
push
pop
pop
not
mov
je
jmp
fs
dec
mov
xchg
xor
xor
add
dec
stc
jg
test
(bad)
jns
jl
mov
jbe
fdivr
dec
clc
sub
cmovno
retf
push
sub
es
pop
or
fst
retf
mov
push
xchg
jle
retf
nop
rcl
and
push
out
pop
pop
xchg
xchg
mov
out
mov
pop
jo
inc
mov
mov
mov
inc
retf
add
cld
pop
push
mov
test
cmp
push
push
jne
aas
loopne
xchg
push
popf
aad
inc
repz
ret
jo
aad
into
scas
jg
nop
jg
xor
in
sbb
cwde
push
jmp
mov
out
adc
mov
fcomp
inc
push
addr16
mov
loope
in
inc
adc
sub
push
pop
inc
idiv
cs
mov
jae
adc
mov
mov
sub
repnz
in
mov
ret
lods
mov
movs
jmp
mov
dec
aam
cmp
xchg
push
loope
inc
(bad)
pop
mov
push
adc
dec
sbb
cmp
cld
icebp
into
or
sahf
sar
dec
enter
rcl
sbb
cmp
lock
int
into
test
cmp
sbb
div
jbe
aam
bound
dec
pop
loopne
adc
mov
inc
lods
sub
push
dec
and
test
push
icebp
sub
(bad)
rol
mov
int3
cli
je
arpl
ins
add
inc
movs
pop
pop
icebp
gs
loop
inc
mov
mov
mov
cmp
fstp
adc
mov
ins
sbb
pop
cs
je
xchg
or
jne
and
cs
xor
push
jecxz
shl
jecxz
inc
xor
aaa
jecxz
jecxz
sub
bound
pop
add
call
xchg
cli
lea
cmp
and
xchg
jmp
popf
add
dec
push
inc
inc
adc
movs
push
add
pop
hlt
lea
mov
sbb
sbb
jbe
rol
in
and
pushf
enter
mov
push
pushf
or
inc
adc
sbb
or
mov
jmp
dec
call
arpl
sub
cld
inc
loope
jl
scas
add
or
mov
add
dec
xchg
and
dec
dec
out
xor
movs
dec
pop
lods
cld
push
es
sub
pusha
inc
(bad)
mov
push
push
data16
sbb
ja
das
xchg
adc
lea
jge
jmp
ins
xchg
or
sub
fld
cld
dec
es
mov
cmp
mov
cmp
pop
es
cmp
sbb
cmp
lea
jp
nop
inc
in
ss
jmp
adc
enter
dec
xchg
inc
inc
mov
in
in
mov
or
sbb
sbb
mov
inc
(bad)
xor
jp
or
push
xchg
dec
loop
push
push
or
mov
leave
in
jl
sbb
sub
mov
sub
pop
movzx
test
and
aas
fidivr
(bad)
(bad)
out
jp
and
addr16
nop
nop
add
cli
xchg
stos
fs
mov
xchg
adc
ret
lea
sbb
shr
dec
iret
xchg
mov
add
mov
dec
enter
dec
mov
jb
and
mov
jne
mov
shr
data16
pop
or
rcl
mulps
jmp
push
xor
test
push
cmc
adc
ins
(bad)
mov
div
xor
adc
inc
test
pop
loopne
mov
std
adc
test
in
adc
push
(bad)
out
(bad)
dec
or
mov
xchg
mov
pop
sub
pusha
push
push
sub
int3
call
cmps
fs
and
cmp
jb
push
add
xchg
sti
(bad)
retf
sbb
ja
sahf
cmovns
adc
dec
mov
and
test
inc
in
cdq
sub
push
in
je
int
cmp
push
adc
add
mov
inc
mov
mov
cmp
or
pop
adc
mov
mov
cmp
push
je
jmp
call
dec
shl
fsub
mov
dec
dec
mov
xor
pop
adc
dec
or
jne
push
push
push
ret
es
xor
push
jl
add
push
int3
push
or
ins
repnz
sbb
add
jne
push
and
ins
push
or
and
pop
imul
mov
dec
int3
mov
fcom
sub
(bad)
test
xchg
mov
shl
mov
sbb
inc
aam
jno
push
int
lea
or
push
mov
sbb
inc
mov
add
xlat
push
inc
inc
add
daa
adc
arpl
mov
add
xchg
sbb
lahf
lds
stos
adc
pushf
rol
sti
call
add
test
pop
lds
pop
push
mov
aad
test
xor
cmp
adc
gs
jbe
push
adc
inc
pushf
sbb
dec
mov
int3
inc
in
ja
xchg
xor
cs
adc
adc
in
jp
sbb
pop
xchg
outs
push
pop
or
dec
xchg
xlat
stos
and
push
rol
pop
pop
repnz
fcom
fiadd
mov
pop
js
pop
adc
or
mov
cmp
xchg
or
xor
cmc
add
adc
mov
and
movs
or
xlat
jne
fmul
sbb
mov
(bad)
adc
pop
mov
xchg
cmp
repnz
je
jno
adc
push
inc
xchg
or
xchg
add
retf
push
ja
ss
bound
cmp
sbb
pop
inc
lahf
or
mov
pop
or
mov
pop
cmps
dec
into
adc
aas
and
xor
fwait
mov
pop
push
pop
and
sub
dec
jno
(bad)
inc
pop
(bad)
sub
in
mov
pop
xor
mov
mov
or
in
add
xchg
movs
push
popa
dec
jecxz
jns
shl
pop
or
inc
cwde
dec
cwde
dec
outs
daa
ret
xor
daa
retf
adc
out
sbb
je
hlt
sub
add
(bad)
mov
test
iret
mov
movs
dec
cwde
push
scas
mov
lods
cld
sbb
test
hlt
mov
mov
mov
mov
test
mov
loopne
pop
popf
ins
retf
loope
jns
add
push
push
or
ins
cmps
pop
ss
ins
(bad)
pop
clc
jne
das
push
pushf
cmps
fcmove
hlt
cmp
pop
movs
int
lods
ud2
mov
mov
xor
sub
pop
sbb
adc
cld
or
or
sbb
retf
sub
cdq
xchg
in
and
pop
xchg
xor
or
imul
ins
test
jnp
rcr
xchg
clc
jne
cdq
jnp
cmp
mov
data16
lock
mov
sar
push
or
lock
mov
push
add
std
xor
jecxz
aaa
sbb
pop
add
aam
jnp
inc
xor
push
xor
push
cmp
jnp
push
repnz
int3
inc
std
ja
mov
add
add
cwde
add
iret
nop
in
loope
mov
mov
(bad)
push
and
sbb
push
rol
pushf
or
jnp
enter
retf
test
xor
push
sahf
add
and
or
add
js
push
lea
outs
lea
push
add
cmp
add
sub
nop
sub
cmps
daa
adc
xor
pop
xchg
pusha
jmp
aad
jns
xor
popa
nop
loope
(bad)
jae
enter
repnz
nop
dec
adc
adc
dec
and
mov
mov
ret
inc
(bad)
imul
xor
aad
ja
aas
imul
jp
xor
push
imul
xchg
mov
js
dec
jmp
adc
hlt
sub
fist
iret
dec
inc
mov
mov
ret
outs
js
cmp
jle
test
inc
imul
mov
out
cmps
dec
icebp
add
xor
adc
lahf
jnp
dec
add
jmp
cmp
push
mov
inc
xor
adc
mov
adc
inc
test
adc
test
push
mov
dec
push
push
and
push
adc
aad
mov
adc
xchg
scas
inc
dec
xlat
mov
add
jno
xchg
cmps
pop
push
push
shl
push
imul
cli
call
or
mov
sub
sbb
and
jl
adc
add
jae
cmp
cmp
jmp
imul
add
test
daa
adc
call
jne
(bad)
cmc
(bad)
mov
mov
xor
adc
repz
inc
sahf
mov
imul
shr
pop
dec
cmp
ins
fadd
mov
repz
or
or
and
dec
inc
retf
xor
mov
mov
jg
xchg
fwait
jle
inc
stos
ins
(bad)
fs
ds
jle
push
and
mov
cdq
mov
push
jmp
push
jb
mov
inc
cmp
or
in
std
movlps
sub
sub
retf
test
xor
sbb
dec
or
call
stos
inc
lea
pushf
nop
retf
test
jle
add
sbb
retf
inc
mov
or
and
mov
test
mov
pop
sbb
lods
popf
mov
jo
repnz
adc
inc
movs
xchg
call
mov
lds
ja
popf
add
mov
leave
and
ds
and
adc
in
adc
int
mov
(bad)
dec
loop
aam
push
mov
mov
push
sgdtd
xor
imul
sub
shl
iret
and
mov
pop
add
jae
push
int3
cmp
add
mov
mov
adc
add
push
or
or
shl
mov
push
inc
push
sub
xor
inc
adc
xchg
dec
xchg
xor
jl
mov
je
push
outs
and
adc
cmp
add
(bad)
push
mov
(bad)
mov
add
daa
adc
inc
mov
xor
pop
and
jb
jmp
jge
jecxz
dec
lods
(bad)
dec
mov
cmc
cmp
pop
outs
shr
sub
not
movs
iret
xlat
mov
(bad)
hlt
movs
ficom
(bad)
and
test
and
mov
fsubr
in
inc
xor
cld
pushf
ss
mov
fmul
and
jecxz
sbb
xor
pop
xor
xchg
mul
xor
mov
mov
push
xchg
jns
pop
ficomp
push
bound
add
das
fs
js
(bad)
nop
mov
sub
and
hlt
jb
pop
mov
dec
push
and
or
add
mov
jge
push
call
push
ins
out
jb
and
adc
add
cmp
push
mov
cmp
add
mov
jns
dec
adc
inc
mov
push
and
mov
push
retf
sub
fwait
inc
add
and
cmp
test
adc
sar
or
test
dec
pop
push
xchg
loope
aas
mov
xchg
add
xchg
sub
mov
dec
sub
jmp
jmp
adc
sub
and
test
rol
sbb
mov
jmp
dec
sub
xchg
ret
adc
fnsave
scas
ja
jge
cmc
jg
xlat
add
push
xchg
mov
fisub
dec
fst
jo
adc
jbe
add
stc
pop
mov
xchg
push
push
adc
dec
xchg
call
adc
gs
and
into
(bad)
xchg
and
clc
dec
dec
sub
jmp
addr16
adc
add
shr
mov
mov
imul
mov
sbb
lahf
add
cmps
add
mov
rol
cld
out
push
enter
outs
mov
mov
ja
dec
retf
sub
xchg
data16
aam
inc
sti
jmp
mov
mov
push
retf
push
lea
(bad)
mov
test
push
push
adc
pop
or
stc
aaa
stc
je
ss
pop
sbb
mov
add
mov
mov
cs
out
mov
push
dec
dec
mov
sbb
xchg
fldenv
push
jno
inc
sub
fsubr
and
xchg
shl
jae
or
sub
push
test
dec
xchg
xchg
dec
jmp
inc
cdq
xchg
and
and
repnz
lods
cmp
cmp
mov
add
sub
dec
inc
scas
jg
loop
sbb
jmp
and
xchg
push
inc
stos
les
and
cld
xor
mov
xor
loop
sub
or
cmps
bound
retf
xor
mov
push
mov
loopne
ja
jb
jae
repnz
and
addr16
ret
ins
mov
aam
mov
or
out
push
mov
adc
scas
mov
test
sub
sub
adc
jbe
push
hlt
jne
pushf
jo
sbb
test
rcl
cmp
shr
adc
add
sbb
test
xchg
daa
sar
and
sub
adc
sub
mov
add
pop
cmp
or
int
cli
fisttp
popf
ja
mov
loop
xor
dec
mov
sub
push
adc
addr16
xor
ret
stos
cmp
leave
inc
cmp
repnz
test
mov
inc
add
shl
aaa
mov
fs
mov
cmps
adc
nop
push
arpl
inc
(bad)
or
lds
pop
sbb
mov
es
sahf
inc
mov
test
add
hlt
xor
xor
and
jne
sub
(bad)
hlt
pop
jne
push
movs
push
lods
cmps
sbb
es
jmp
jne
fldenv
xchg
push
or
inc
add
push
sbb
or
xchg
adc
call
xchg
inc
inc
adc
mov
lock
jl
add
data16
stos
cmp
scas
mov
sbb
outs
adc
std
mov
cld
ror
inc
adc
push
or
lahf
sub
inc
inc
sbb
sub
sbb
pop
push
ror
shl
sub
cmp
es
jnp
adc
repnz
sbb
mov
mov
mov
cmp
ss
call
adc
sbb
add
push
test
cmp
mov
fbstp
inc
push
stc
mov
call
or
mov
sbb
or
cmp
mov
and
dec
inc
ret
shl
rol
xchg
bound
or
push
mov
pushf
mov
scas
lds
add
push
pop
and
xor
outs
loope
je
xor
jo
mov
jb
sub
ret
push
push
clc
das
aaa
sub
je
sbb
push
cdq
sub
jmp
cmp
add
call
or
jb
sub
mov
aam
or
jne
jbe
repnz
inc
or
retf
sub
or
lahf
test
pop
cwde
xor
int
cmps
mov
cmp
rcr
xchg
and
add
inc
out
push
mov
sub
or
std
or
mov
push
xor
popa
sub
addr16
sbb
out
enter
and
rol
out
sbb
add
jno
xchg
mov
repz
shr
and
jne
call
mov
sbb
push
adc
lar
hlt
pop
push
enter
or
retf
push
xchg
call
add
pop
loope
clc
add
mov
sbb
push
add
xlat
sub
sar
pop
nop
cwde
inc
(bad)
pop
iret
jmp
(bad)
xor
int3
popf
aas
jo
das
push
call
push
rcr
pop
cld
pop
add
push
ja
sub
xchg
test
mov
or
pop
mov
bnd
jnp
or
cmp
add
adc
cmp
pop
(bad)
out
nop
mov
push
and
or
enter
call
dec
fidiv
xor
cdq
jmp
xor
mov
xchg
mov
int3
out
sbb
pop
test
push
xor
mov
inc
jg
inc
pop
push
xor
inc
cmp
aaa
jecxz
cld
out
loop
adc
lock
jmp
push
cld
mov
add
shl
cwde
movs
mov
into
pop
add
and
push
xchg
or
popa
sub
gs
dec
ins
fadd
push
stos
and
mov
test
cdq
push
mov
adc
add
push
pop
fild
(bad)
ds
xor
sub
sub
(bad)
jmp
push
mov
dec
adc
or
jmp
dec
dec
mov
dec
cmovl
dec
jp
adc
sub
mov
jl
adc
push
inc
sti
in
dec
mov
ins
cli
pop
cmp
xor
add
sub
inc
push
mov
mov
or
stos
mov
push
std
lods
and
sub
adc
ja
push
cld
mov
inc
push
push
mov
outs
ficom
es
dec
je
jnp
fidivr
aas
int
adc
pop
inc
jle
lea
sbb
add
or
and
xlat
inc
sub
ror
inc
add
pop
xchg
xchg
xor
dec
push
(bad)
cmp
sbb
jne
sbb
fs
cmp
imul
push
dec
sub
inc
fist
mov
retf
fistp
and
bound
push
out
in
pop
in
movs
dec
dec
mov
xchg
gs
hlt
rcl
mov
clc
xchg
(bad)
pop
or
sub
das
call
aam
inc
inc
daa
bound
xor
sbb
out
jne
cdq
mov
mov
push
retf
mov
adc
cmp
rcl
imul
cmp
ins
mov
pop
pop
mov
add
add
adc
pushf
mov
cmp
mov
pusha
nop
or
fdivrp
inc
adc
xchg
push
push
pop
add
mov
ins
sub
push
loopne
xchg
sbb
test
xchg
push
lock
inc
sar
lock
push
jno
cdq
mov
pop
imul
ffreep
enter
sub
int
mov
repnz
das
lahf
sub
dec
es
jge
mov
aam
inc
mov
es
in
jae
out
adc
or
cmp
fs
daa
(bad)
cdq
and
ds
nop
pushf
cmp
inc
and
mov
movs
cwde
push
cs
inc
add
xor
add
ja
popf
push
cmps
xor
xor
gs
pop
in
or
call
hlt
add
shl
or
sahf
call
(bad)
pop
xchg
push
push
xor
mov
sub
push
repz
push
ja
aam
add
pop
cmp
jle
in
push
push
(bad)
loop
sbb
cli
cwde
test
out
mov
jno
push
imul
add
mov
adc
mov
inc
sar
xor
add
aas
jl
jmp
sub
xlat
mov
into
cli
clc
clc
in
in
in
repz
in
(bad)
out
mov
pop
es
dec
mov
jnp
inc
mov
movs
(bad)
push
fldcw
adc
mov
or
aad
xor
dec
jmp
pop
xchg
mov
xchg
(bad)
adc
sbb
add
sub
dec
or
or
add
mov
rcl
mov
scas
ds
mov
fs
jmp
adc
adc
cs
xchg
scas
sahf
fisub
mov
lock
imul
fimul
mov
mov
(bad)
call
dec
or
enter
sar
jnp
(bad)
fcom
lds
jecxz
mov
lock
push
push
nop
xor
mov
or
push
clc
cdq
and
jmp
mov
(bad)
out
jmp
stos
(bad)
sub
sub
or
pop
(bad)
out
push
stos
call
sahf
adc
sbb
shr
inc
out
xor
cld
idiv
adc
inc
ror
sub
jmp
jnp
adc
sti
cmp
fcomp
jnp
fstp
xchg
arpl
xchg
add
movs
int3
cmc
push
jmp
pop
or
sahf
xchg
mov
sub
(bad)
aaa
test
imul
push
nop
in
pop
xor
jne
les
cmp
jns
inc
les
jmp
sub
inc
mov
movs
sahf
sbb
jg
pop
addr16
adc
scas
cmp
adc
stos
adc
or
test
xor
push
ins
loopne
dec
mov
scas
cdq
push
push
popf
aad
push
stos
adc
jle
xor
cdq
aad
and
sbb
jnp
push
inc
popf
sahf
mov
xlat
or
std
dec
cdq
ror
or
adc
(bad)
sbb
or
mov
adc
out
iret
or
cmp
pop
pop
xchg
mov
std
mov
mov
and
add
sti
lods
repz
xchg
xchg
mov
mov
cmps
add
out
lock
loope
mov
and
mov
sti
sbb
sahf
mov
retf
xchg
bound
dec
inc
inc
popf
pusha
jmp
bound
pop
mov
dec
movs
sahf
sub
adc
xor
mov
pop
mov
mov
mov
sub
cld
mov
test
dec
(bad)
dec
inc
test
adc
icebp
mov
inc
dec
inc
movs
jge
(bad)
in
mov
cs
inc
lahf
or
or
push
xlat
xor
int3
(bad)
jmp
cmp
aas
cmp
add
in
xchg
and
and
rcl
lods
push
push
mov
xor
sbb
and
retf
cmp
push
add
and
add
retf
pop
and
mov
sub
repz
fmul
push
fdivp
popa
adc
in
ins
daa
sub
adc
mov
mov
push
shr
fimul
jmp
cmp
or
call
std
adc
cmp
push
push
xchg
or
gs
push
push
add
and
mov
add
sub
pop
dec
and
sbb
lds
popa
adc
dec
jno
inc
mov
xchg
and
movs
xor
ret
mov
dec
call
aam
in
into
sbb
stc
adc
or
retf
add
push
ins
push
push
inc
adc
pop
cmp
lods
out
push
mov
pop
sub
mov
inc
stos
dec
inc
cwde
or
nop
loop
inc
sbb
sbb
mov
dec
stos
mov
sar
mov
clc
sub
mov
inc
adc
and
and
shr
les
inc
add
add
movs
add
add
test
and
add
and
or
pop
dec
fisttp
push
dec
imul
cmp
xor
iret
xchg
adc
cmp
ins
fld
adc
xor
xor
sbb
xor
nop
or
jae
dec
add
out
loop
add
mov
jmp
test
or
fist
dec
and
inc
add
loop
jne
out
test
xchg
push
mov
dec
add
bound
(bad)
fdivr
rcl
out
adc
ror
je
gs
pushf
jae
popf
shr
push
cmp
ror
push
adc
push
push
add
or
stos
fsub
das
mov
xor
dec
retf
xchg
add
mov
in
in
loop
repnz
rcl
outs
rol
push
cmp
in
jg
popa
mov
jnp
mov
fwait
adc
lods
popf
cmp
adc
add
or
xor
sbb
adc
push
in
xor
shl
push
xchg
mov
pop
add
cli
into
add
dec
inc
int3
pop
add
dec
add
jbe
add
cmp
xor
cmc
fs
cmp
push
jl
and
push
jb
lods
mov
cmp
bound
loopne
jmp
and
add
mov
sub
popa
sbb
dec
cmp
mov
retf
jmp
xor
sub
mov
sbb
jae
jmp
dec
sbb
js
outs
into
retf
out
push
shr
push
scas
sbb
enter
add
jmp
add
mov
xor
pop
je
adc
xchg
xor
je
sar
adc
mov
icebp
mov
icebp
inc
and
jmp
pop
mov
push
in
out
out
clc
leave
cmp
sub
les
cmps
arpl
mov
add
mov
(bad)
cmp
push
movs
adc
add
jg
xchg
sbb
inc
cmp
mov
jae
mov
or
jmp
add
loope
adc
inc
jle
push
test
into
xor
movs
and
add
int
call
(bad)
push
sub
jle
bound
pop
xor
test
push
xchg
fs
rcr
or
lods
nop
sub
iret
mov
hlt
out
sub
adc
push
stos
push
jmp
pop
push
adc
xor
std
and
sub
sti
sbb
mov
jle
shl
xchg
mov
das
movs
and
dec
std
js
mov
add
push
sbb
dec
pop
sub
mov
jge
add
or
xor
addr16
bound
sub
or
dec
pop
xor
xchg
das
test
or
call
pop
cwde
add
pop
ret
rdtsc
loopne
jmp
mov
lods
mov
mov
dec
push
push
ret
aam
in
or
cld
dec
inc
add
xchg
movs
adc
xchg
cmp
inc
fadd
aas
je
dec
loope
ds
push
pop
add
add
cwde
cmp
stos
jg
sub
in
call
sti
pop
xor
sub
xlat
in
adc
call
xchg
push
gs
lods
add
xchg
mov
push
imul
ret
add
and
loop
iret
inc
cdq
call
xor
dec
mov
jge
mov
cli
in
sbb
add
add
sub
pop
sub
xchg
xor
pushf
mov
and
and
lods
mov
or
in
out
push
sti
sub
sbb
mov
aad
(bad)
adc
in
sub
pushf
cmp
dec
inc
fdiv
or
push
and
adc
sbb
(bad)
and
cmp
xor
push
adc
or
pop
push
repnz
xor
mov
aad
mov
sbb
mov
hlt
movs
enter
xchg
mov
or
adc
js
cwde
iret
loopne
dec
lea
and
cwde
movs
inc
push
idiv
jge
out
cmp
mov
out
pop
or
into
shr
jg
dec
call
mov
xor
shl
test
or
bound
push
scas
jg
nop
push
out
scas
test
movhps
push
dec
inc
jne
mov
into
sub
movzx
add
lods
sbb
mov
mov
in
mov
add
adc
cmps
lods
int3
mov
add
inc
or
fst
test
in
mov
push
icebp
cwde
sti
mov
inc
mov
and
loop
bound
aam
and
imul
and
sti
push
or
adc
mov
pop
or
nop
sub
xlat
pop
aas
shl
push
xor
pop
mov
cmp
inc
in
adc
ret
mov
das
bound
jno
sub
dec
rcl
and
cmp
inc
add
(bad)
mov
mov
sub
loopne
popf
push
loopne
dec
hlt
xchg
retf
mov
imul
daa
sub
inc
mov
in
or
push
xor
cmp
test
jne
adc
xchg
nop
loopne
inc
and
out
jb
sar
(bad)
daa
pop
sahf
mov
or
pop
stos
imul
mov
(bad)
hlt
hlt
sbb
hlt
or
jle
je
xchg
inc
outs
mov
cld
ins
add
aas
stos
outs
cld
idiv
cs
fisttp
mov
jb
sub
push
inc
popa
loopne
clc
lea
adc
jns
clc
cld
lods
addr16
pusha
shl
xchg
sahf
mov
sub
daa
stc
sti
fstp
cli
cmps
xchg
sub
sbb
add
inc
sbb
jns
ret
add
dec
sbb
push
or
aam
dec
jmp
leave
iret
addr16
fidiv
fsubr
sbb
mov
xor
dec
xor
stos
sahf
push
add
mov
pop
outs
inc
sbb
mov
fisttp
jbe
mov
repnz
push
pop
cmc
cmovs
xchg
bound
xor
dec
or
jne
or
fisttp
out
push
sub
cmp
mov
aas
xor
inc
stc
xor
add
push
push
nop
loopne
or
sti
xchg
xchg
stos
bound
xchg
shl
sbb
jmp
iret
ror
cmps
nop
ds
(bad)
test
xor
mov
mov
sar
mov
and
inc
and
jmp
mov
nop
mov
or
mov
sti
aas
xor
in
aam
pop
sub
cmp
fild
dec
loope
mov
or
mov
push
pop
cmp
and
fnstsw
adc
jmp
xlat
push
fs
dec
cli
dec
and
cs
lds
push
scas
push
fnsave
out
mov
(bad)
push
jmp
cmp
jbe
inc
cwde
xchg
xlat
and
dec
mov
xlat
aaa
adc
xor
sbb
test
fcmove
mov
push
in
ins
repz
jecxz
movs
push
push
add
mov
xchg
lds
jge
inc
hlt
pop
(bad)
xchg
je
push
jne
sbb
cli
xchg
push
cmc
pop
push
lahf
sbb
inc
inc
adc
push
into
sub
xor
fdivr
fbstp
sar
pusha
in
ins
jb
adc
out
sbb
mov
push
pop
test
inc
or
xor
mov
mov
cmc
cmp
sbb
sbb
cmps
and
cmc
or
cld
mov
sbb
sar
pop
or
sbb
test
imul
out
pop
test
mov
stos
addr16
mov
mov
push
iret
inc
icebp
push
xor
repz
test
(bad)
fdivr
pop
push
and
adc
(bad)
cmp
sub
dec
lods
mov
push
sahf
inc
retf
adc
adc
fadd
(bad)
mov
(bad)
es
mov
xor
cmp
jecxz
fwait
and
inc
test
mov
xlat
in
jae
test
pop
inc
dec
adc
bnd
jl
(bad)
lahf
mov
sti
xor
fcom
dec
hlt
inc
movs
pop
aas
iret
aam
jno
xchg
shr
and
mov
movs
mov
dec
aam
mov
inc
dec
sti
xor
add
cld
sub
xor
jbe
hlt
retf
es
cmp
popf
aas
addr16
fsub
hlt
inc
outs
push
sub
mov
mov
sub
mov
push
mov
in
jne
pop
push
jmp
cdq
mov
lock
mov
test
aam
enter
add
xchg
call
xchg
add
loope
call
rcl
(bad)
(bad)
out
inc
out
lahf
jg
and
shr
scas
test
hlt
inc
dec
lahf
sub
jg
sub
dec
push
and
daa
imul
in
or
xchg
and
lods
cld
sub
test
addr16
jmp
dec
push
pop
xor
sub
dec
and
cmps
pop
push
sub
push
add
fnstenv
push
sub
imul
cld
dec
dec
xchg
pop
lahf
or
lods
mov
call
jg
push
pushf
sbb
mov
mov
movs
pusha
mov
cdq
xor
aad
pop
neg
stc
retf
jp
outs
mov
xor
ins
cwde
sub
retw
div
sub
fnstsw
sub
call
js
dec
and
sub
inc
aaa
inc
adc
loopne
jecxz
add
or
or
mov
in
ja
jmp
push
mov
clc
test
aad
jae
jg
jns
in
and
shl
leave
out
out
xchg
scas
jbe
in
bound
mov
fs
(bad)
out
sub
rcl
call
add
ins
inc
push
pop
outs
clc
dec
jbe
popf
jae
popf
inc
push
popf
inc
or
dec
pop
test
push
popf
inc
retf
mov
ds
xor
emms
cld
(bad)
sub
or
xor
movs
test
lock
ins
jo
sub
loope
(bad)
es
loop
enter
clc
lea
mov
nop
repnz
js
shl
fwait
push
add
retf
cwde
or
push
add
outs
test
frstor
mov
imul
pusha
lock
jnp
push
push
mov
(bad)
fwait
mov
imul
sbb
out
std
jmp
inc
jns
dec
std
cs
in
outs
ret
push
xchg
pop
jno
pop
das
loop
inc
dec
movs
arpl
jp
mov
mov
(bad)
(bad)
(bad)
mov
mov
(bad)
jnp
mov
je
scas
ds
cli
sar
stc
jl
repz
stos
outs
xchg
jmp
std
jns
ficomp
aad
je
mov
outs
sub
ja
das
je
and
(bad)
push
(bad)
stos
cmp
je
sti
jo
loop
ss
mov
inc
adc
xor
pop
cli
pop
fwait
xor
mov
add
xchg
int3
mov
clc
xor
push
leave
jns
mov
clc
mov
movs
pushf
inc
pop
out
or
in
clc
imul
push
lock
dec
fnstenv
shr
jmp
call
adc
je
jg
loope
add
ficomp
je
jno
std
mov
aam
je
dec
je
mov
es
sbb
or
popf
ja
push
loopne
movs
and
mov
mov
aad
sbb
xor
jmp
pop
div
das
inc
inc
jne
popf
in
in
in
ins
std
addr16
in
push
dec
out
push
xor
stos
outs
add
jne
fist
retf
xchg
aam
lahf
dec
dec
in
jmp
div
xor
adc
pop
cwde
mov
dec
or
nop
dec
pop
and
test
or
dec
inc
pop
add
adc
inc
sbb
push
xchg
push
mov
leave
sbb
mov
(bad)
cli
xchg
cli
cmp
xchg
(bad)
jmp
inc
and
in
aaa
int
sub
loop
jo
cli
xchg
jp
dec
in
mov
inc
mov
xor
jg
inc
scas
ja
push
jp
mov
mov
sub
push
mov
aad
or
add
dec
jl
or
es
xchg
stc
bound
xchg
or
jnp
call
xor
or
dec
shl
sbb
cmp
and
xor
mov
leave
retf
cs
jne
je
inc
ins
cdq
mov
in
test
daa
push
sub
add
sub
outs
pop
mov
movs
dec
push
test
adc
push
loope
clc
and
ins
push
mov
clc
popf
push
dec
xchg
clc
jge
adc
cmps
pusha
loopne
lds
xor
xchg
mov
rcl
(bad)
xchg
jg
dec
jp
or
mov
movs
jne
or
xchg
cmp
sbb
inc
std
fnsave
sub
aam
push
xor
sub
inc
test
xor
adc
sub
int3
loop
push
inc
xchg
loop
fsub
adc
inc
call
cmp
je
xchg
inc
pop
mov
add
mov
inc
or
cmp
push
inc
stc
or
add
add
add
std
xlat
daa
push
jmp
jb
and
lock
mov
mov
(bad)
in
jbe
push
xor
imul
movs
enter
inc
(bad)
dec
adc
leave
push
push
jmp
inc
clc
push
adc
fbld
cmc
sub
call
push
cmp
fbstp
mov
pop
jmp
aam
push
mov
pop
sub
out
dec
dec
test
and
or
mov
mov
inc
adc
xchg
rcl
or
iret
pop
repnz
jae
push
jle
hlt
push
arpl
icebp
stos
push
xchg
jg
test
cmp
mov
sbb
sub
sub
cmps
inc
add
jmp
inc
enter
dec
mov
adc
or
leave
add
mov
pop
jns
sub
push
mov
sub
push
adc
or
adc
jne
sbb
push
mov
ds
out
sub
sub
ins
inc
test
xor
jmp
fst
movs
je
in
sar
ss
clc
and
sub
clc
out
pop
mov
pop
add
fwait
popf
sbb
ins
pop
std
push
or
sub
addr16
cmp
xchg
xor
mov
call
bound
int3
adc
pop
in
jmp
gs
mov
sub
je
lea
cdq
icebp
or
je
retf
dec
sub
es
arpl
xchg
inc
scas
inc
mov
inc
or
push
cs
pop
icebp
cli
xchg
mov
(bad)
xchg
in
ja
stos
mov
sbb
mov
cmc
jns
mov
inc
jne
aad
sbb
aas
mov
nop
repnz
std
dec
aam
or
or
movzx
aad
sbb
adc
ror
dec
mov
mov
fdivr
inc
jae
out
add
mov
pop
lahf
je
sbb
out
rcl
pop
sbb
sbb
aas
pushf
pop
jmp
dec
call
mov
retf
sti
pop
inc
aam
inc
out
or
das
in
pop
adc
inc
mov
ret
rol
fsubr
jns
data16
pop
ret
add
mov
iret
dec
push
add
jge
outs
push
push
scas
mov
push
add
test
cwde
push
xchg
scas
retf
scas
push
clc
cmc
enter
mov
pop
out
ret
out
jae
dec
mov
lds
pop
or
aam
inc
mov
shr
test
mov
in
adc
lea
js
push
xor
cld
adc
dec
sub
jo
xor
xchg
sbb
inc
or
jmp
jg
in
mov
inc
sbb
fldenv
call
js
add
fiadd
mov
ins
inc
cmc
lods
add
adc
push
adc
data16
pop
mov
and
cmp
jne
xor
rcl
adc
jp
cmp
ds
out
sar
leave
scas
fisub
xchg
inc
jmp
lds
mov
es
lock
adc
jae
xchg
fild
icebp
mov
xchg
mov
lods
retf
loope
mov
hlt
inc
mov
popa
mov
mov
lock
inc
sub
jmp
loop
mov
adc
scas
addr16
xor
and
jb
inc
inc
std
sbb
xor
jg
xor
(bad)
out
call
aas
(bad)
lods
iret
call
xchg
cmp
sbb
jno
out
rcr
repz
into
dec
adc
shr
push
lahf
jge
popa
inc
sbb
cwde
xor
adc
add
shl
dec
sahf
sub
and
stos
push
cs
call
nop
fidivr
dec
test
(bad)
les
mov
arpl
dec
out
mov
sbb
jmp
cld
add
pop
push
push
or
nop
or
jmp
push
hlt
dec
in
(bad)
cs
retf
test
and
mov
sub
fwait
dec
nop
cld
mov
mov
jl
adc
sub
mov
add
or
jmp
inc
jb
repnz
xor
mov
mov
xlat
mov
xor
jg
aaa
adc
mov
cmp
jecxz
stos
call
inc
fsubr
jns
mov
push
push
sub
aaa
cld
fild
dec
lds
xchg
xchg
cli
cmp
adc
fdiv
push
fsub
push
outs
mov
imul
std
aad
and
jg
xor
inc
xchg
xchg
aas
sub
in
aaa
in
fisttp
and
ret
cmp
into
pop
std
movs
add
shr
stos
jmp
loopne
inc
pop
mov
xchg
loopne
dec
loop
stos
mov
inc
xor
lea
dec
mov
xor
popa
aas
push
sub
cmp
pop
mov
test
xchg
mov
(bad)
movs
in
fwait
adc
sub
mov
cmps
div
fnstenv
or
pop
xor
mov
inc
push
sbb
ins
dec
mov
sbb
push
mov
fwait
shr
push
jp
retf
mov
xchg
dec
sbb
ja
ret
and
sub
fnsave
pop
cs
je
cmp
cmp
sub
sbb
fiadd
dec
jnp
in
mov
pop
or
mov
loopne
xchg
lock
xchg
jmp
aaa
pop
repz
xchg
mov
lds
cmc
sti
fwait
xchg
inc
add
call
(bad)
call
fmul
out
clc
fsub
arpl
cmps
fs
and
in
fcom
in
push
call
pop
and
jle
mov
test
xchg
cmp
dec
jp
sbb
mov
mov
dec
in
sbb
nop
fcomp
fdiv
jb
test
add
lahf
sar
fsub
pusha
adc
es
or
aaa
mov
xor
pop
or
mov
iret
mov
fimul
(bad)
xchg
push
enter
jmp
jae
mov
inc
xchg
fs
dec
sbb
retf
leave
push
or
shr
outs
inc
jg
adc
mov
clc
fwait
stos
cmp
bnd
outs
push
scas
jo
(bad)
jne
xor
dec
(bad)
push
cmp
sub
xchg
outs
push
mov
sahf
mov
call
shl
mov
mov
fbstp
shl
pop
xor
aas
sbb
out
ret
or
inc
push
sti
or
lods
sbb
sbb
push
sbb
dec
loopne
fwait
add
xchg
or
mul
cmp
dec
and
xchg
shl
dec
pop
sti
jmp
imul
sahf
push
outs
jo
inc
inc
clc
out
jle
and
cmp
xor
sub
imul
jmp
xchg
(bad)
aad
fwait
sbb
int3
xlat
aaa
retf
xchg
aad
movs
stc
cmc
sub
cmps
out
add
jg
mov
lock
ss
(bad)
movs
enter
inc
or
aaa
sub
pop
and
xor
cli
sbb
or
cmp
lock
retf
and
loop
mov
gs
mov
movs
xchg
pushf
xchg
imul
push
add
dec
adc
cmc
mov
icebp
sti
aam
mov
inc
xor
adc
loop
jge
(bad)
jae
out
out
cmp
adc
sub
jne
and
dec
leave
sbb
jge
jae
push
xor
mov
outs
adc
cmp
leave
add
das
sub
adc
and
or
push
adc
inc
dec
test
loope
add
cmp
mov
cmp
int
jae
les
aam
cld
push
cmp
or
(bad)
sbb
xchg
sub
ins
xchg
sub
ror
xchg
fstp
jmp
mov
mov
je
in
out
push
dec
push
cmp
mov
fild
enter
or
add
inc
dec
out
or
icebp
test
mov
lds
(bad)
repnz
inc
pushf
sub
sub
adc
push
iret
sub
and
aaa
or
cmp
mov
add
movs
jne
push
pop
or
pop
push
and
lea
fild
xchg
xor
test
push
push
adc
adc
dec
xlat
inc
popa
mov
std
xor
je
(bad)
or
mov
lods
call
dec
or
mov
push
and
test
add
or
in
mov
retf
inc
inc
test
sbb
and
cmp
pop
shl
sbb
xor
outs
mov
movzx
cwde
adc
in
pop
and
push
sub
and
pop
push
adc
add
retf
adc
fld
push
dec
sbb
adc
jns
nop
mov
cmp
and
in
aaa
jmp
enter
add
xchg
(bad)
int3
push
dec
or
or
mov
adc
(bad)
mov
test
push
fcom
sbb
dec
cld
mov
nop
sbb
shl
mov
xchg
cmp
xchg
xor
inc
call
inc
adc
jmp
cs
push
pop
inc
cli
ja
out
mov
sbb
inc
clc
fstp
mov
in
jmp
mov
add
cmp
shr
sbb
add
adc
and
jmp
js
shr
mov
jl
leave
mov
dec
pop
stc
fmulp
push
xor
(bad)
movs
mov
fwait
jne
pop
daa
imul
enter
or
or
jae
jns
adc
test
or
pop
sub
retf
lea
push
mov
mov
in
inc
or
push
or
sar
sub
jmp
sti
(bad)
into
fucomip
das
(bad)
jbe
retf
pop
mov
and
popa
jmp
mov
push
mov
dec
fiadd
mov
sbb
push
lea
jecxz
inc
and
test
mov
dec
test
outs
sub
shl
mov
mov
xchg
test
add
mov
fnstenv
mov
and
add
inc
or
mov
sub
loop
lods
mov
cwde
je
push
mov
inc
je
push
mov
mov
xor
sub
push
sbb
test
mov
xor
lods
mov
push
into
sbb
xor
push
mov
push
fs
sbb
or
push
xchg
add
and
pop
je
shl
push
fsubr
xor
and
fist
and
dec
aad
mov
inc
lea
shr
outs
mov
ret
jmp
push
mov
and
cmp
int3
mov
dec
dec
outs
les
inc
cli
xor
enter
movs
enter
dec
mov
inc
inc
ins
push
enter
xchg
int3
mov
cmp
adc
rcl
aaa
jmp
movs
pusha
dec
xchg
retf
adc
ja
dec
and
imul
push
cdq
xchg
lds
inc
retf
test
cmc
jl
mov
add
cmp
push
push
inc
xchg
into
mov
nop
retf
mov
pushf
jge
push
inc
fld
push
inc
add
mov
mov
popa
mov
retf
sub
ja
fstp
and
xchg
inc
sub
push
mov
mov
dec
push
dec
add
or
xor
jecxz
cmp
and
cwde
cwde
add
sti
sub
pop
clc
push
(bad)
sbb
test
fstp
mov
mov
jmp
dec
fisubr
ret
push
mov
movs
jnp
xchg
xchg
arpl
pop
dec
cs
push
dec
movsx
jo
cmps
and
pushf
mov
jmp
mov
cmp
mov
and
inc
ret
sbb
mov
movs
stos
and
mov
push
call
sbb
sbb
iret
repz
outs
mov
ficomp
dec
xor
out
clc
js
repnz
dec
test
push
dec
dec
push
sbb
xchg
adc
rcl
push
mov
icebp
cmp
push
add
(bad)
push
fstp
ret
mov
int
imul
mov
jns
(bad)
icebp
adc
pop
and
inc
clc
jns
out
bound
mov
repz
jecxz
adc
fld
mov
out
adc
sbb
inc
adc
clc
mov
dec
out
addr16
dec
jnp
pop
sub
or
jmp
xchg
mov
mov
cli
dec
add
clc
push
(bad)
cmps
xor
xchg
cmp
and
sbb
in
add
iret
leave
jne
neg
cmp
imul
lods
adc
jnp
mov
es
popa
inc
dec
repnz
pushf
mov
cdq
loop
push
in
lds
stos
pop
pop
inc
mov
or
inc
sar
pop
xor
(bad)
sub
add
and
fwait
sahf
stos
inc
imul
dec
loop
xor
stos
fisub
call
xor
pop
stos
idiv
pop
(bad)
mov
adc
mov
jmp
call
xchg
dec
lds
or
lock
ja
ror
ret
push
call
cmp
sub
fdivrp
test
fimul
dec
fisttp
push
pop
aaa
ja
pop
or
jmp
or
retf
(bad)
inc
das
dec
fistp
cmc
lea
repz
add
mov
test
pop
out
test
and
jl
addr16
push
mov
inc
jecxz
xor
clc
sar
add
xchg
bt
cli
mov
push
rcr
stc
mov
inc
(bad)
test
lds
push
ret
xor
sub
mov
dec
mov
mov
xchg
outs
adc
dec
hlt
and
in
test
loope
mov
dec
or
mov
pop
cmp
push
xchg
jecxz
mov
(bad)
mov
cwde
movs
xchg
xor
js
add
jge
stos
sbb
push
mov
or
cwde
out
or
fcmovnb
mov
pop
push
mov
jmp
cmp
sbb
in
or
test
or
(bad)
cmp
scas
cmp
(bad)
cmc
inc
dec
mov
push
jno
fisub
ja
or
inc
loop
test
push
in
jmp
dec
in
push
movs
inc
and
add
inc
sbb
jbe
push
sbb
jle
lea
loop
xchg
mov
mov
jmp
jmp
mov
aas
and
jno
or
lds
jge
jns
or
xlat
pop
xchg
add
(bad)
mov
push
cmp
aad
adc
cmp
jne
inc
push
dec
test
and
jae
xchg
jne
fmul
inc
push
cwde
inc
dec
or
test
int
fsub
dec
rcr
out
mov
and
adc
mov
mov
sbb
mov
mov
xor
cs
imul
pop
mov
mov
fcom
adc
dec
aam
dec
jbe
aam
in
rcr
sub
jge
dec
fcmove
pop
add
inc
push
mov
fdiv
xor
jge
mov
cmps
scas
inc
nop
mov
jo
xchg
pop
mov
into
in
mov
test
jmp
mov
push
(bad)
dec
fdivr
and
jge
rcl
mov
sbb
mov
test
push
aas
or
jne
xor
pop
pop
mov
push
push
jmp
ret
fmul
test
or
jp
add
ret
push
push
cmps
imul
je
clc
test
or
mov
pop
add
into
add
or
or
mov
scas
std
(bad)
pop
add
dec
clc
ins
in
cld
push
adc
or
sbb
and
aam
repnz
mov
xor
add
call
mov
cmps
test
dec
adc
fwait
das
imul
cs
call
es
in
xor
call
loopne
or
cmp
cmp
push
ret
test
stc
jo
paddd
sbb
sbb
sub
push
(bad)
and
hlt
mov
cmc
dec
adc
sub
addr16
ret
and
test
xchg
mov
sbb
push
std
jns
dec
pop
xchg
je
mov
or
push
ja
push
sub
aad
jge
mov
(bad)
push
sub
cmp
shr
and
or
xchg
and
jp
jmp
and
xor
ins
dec
sbb
xor
dec
xlat
mov
dec
push
adc
dec
or
pop
stc
inc
adc
(bad)
mov
pusha
cs
pop
inc
lods
pushf
sbb
(bad)
cmps
sbb
sub
push
xchg
add
xor
loop
clc
mov
mov
mov
push
jne
fs
push
cmp
ret
mov
push
adc
ins
pop
inc
test
mov
outs
xchg
scas
mov
ins
and
mov
jne
jl
push
jnp
je
and
mov
dec
push
adc
jmp
cmp
sbb
jb
test
mov
and
cmp
sahf
shr
jmp
sub
mov
shr
add
xor
stos
jne
push
addr16
dec
sub
sbb
adc
cwde
(bad)
iret
push
and
aas
dec
xor
sub
or
clc
lahf
adc
sub
dec
sti
das
lahf
adc
imul
or
push
lock
outs
(bad)
cmp
retf
aam
rol
aas
and
dec
mov
mov
mov
adc
test
movs
in
add
mov
pusha
inc
jge
push
fbstp
(bad)
(bad)
dec
sub
dec
icebp
or
aas
ss
repnz
mov
shr
ins
ins
jg
int3
std
lahf
std
int
and
mov
jae
xor
stc
mov
inc
mov
pop
lahf
rcl
popf
or
dec
scas
jno
(bad)
pushf
imul
add
pop
neg
mov
popf
push
ss
cdq
aad
and
aas
fisub
ins
inc
dec
mov
pop
adc
sbb
out
out
adc
sti
xchg
ins
mov
dec
add
imul
in
jo
ins
ret
pop
daa
pop
retf
inc
sbb
(bad)
xor
xchg
mov
or
or
push
push
inc
inc
rcr
dec
sti
jg
inc
ret
inc
push
xor
push
sti
pop
mov
outs
ror
mov
xchg
pop
add
mov
addr16
das
and
jl
adc
mov
mov
xchg
jbe
das
dec
add
mov
xchg
shl
push
mov
fsub
push
retf
sub
dec
pop
inc
cld
add
push
or
sub
xor
sub
inc
jle
stc
call
inc
and
mov
xor
aam
inc
stos
pusha
push
daa
add
bnd
outs
mov
loope
pop
push
mov
sbb
xcrypt-ofb
cmps
sub
mov
mov
in
enter
sub
nop
inc
xor
loopne
inc
repz
xchg
pop
jne
(bad)
fstp
out
fs
in
call
and
scas
es
jg
lds
jp
mov
daa
and
faddp
mov
mov
fistp
jmp
push
movs
pusha
ds
dec
push
gs
push
pop
xchg
in
sar
dec
inc
fs
add
xchg
mov
retf
cmp
je
dec
dec
xchg
fdiv
inc
mov
mov
mov
nop
mov
(bad)
(bad)
mov
mov
and
dec
leave
gs
adc
jmp
mov
aam
into
add
cmp
shl
into
sub
fiadd
xlat
icebp
push
addr16
in
sahf
mov
fisttp
pop
pop
(bad)
or
gs
fsub
or
xchg
nop
sub
(bad)
test
loop
imul
fdivr
aam
mov
or
adc
or
rol
cmp
mov
fnstcw
inc
inc
adc
aam
pop
pop
inc
inc
(bad)
sahf
stos
lock
pop
(bad)
adc
mov
(bad)
cmps
test
outs
loopne
call
xor
xchg
xchg
addr16
bound
in
mov
gs
das
and
adc
or
or
dec
int3
bound
out
mov
jmp
jb
mov
cli
pop
mov
mov
ja
leave
mov
arpl
add
les
cmp
rol
push
cmc
cmp
stos
jge
mov
test
inc
fbld
jp
add
mov
and
sub
clc
mov
pop
adc
int3
jno
cmc
mov
mov
inc
push
je
test
inc
or
stc
and
retf
rol
xor
xchg
cdq
or
cmp
dec
leave
sbb
pop
stc
inc
jl
pop
out
pop
push
(bad)
(bad)
or
call
inc
hlt
push
test
or
mov
daa
ins
or
cmp
mov
push
adc
mov
pop
inc
dec
xchg
pop
je
mov
adc
hlt
hlt
mov
ja
dec
addr16
xor
mov
ja
mov
add
sldt
xor
dec
cmp
test
in
sbb
fs
ds
sub
fprem
clc
or
mov
adc
mov
out
inc
mov
movs
nop
es
push
or
icebp
stos
jge
mov
in
xor
dec
push
sbb
adc
dec
daa
iret
outs
sub
iret
adc
mov
push
(bad)
sub
pop
or
call
rcr
mov
push
in
sub
test
and
test
add
xchg
xchg
movs
add
pop
mov
push
aad
inc
dec
(bad)
shl
test
fstp
mov
cmps
mov
and
daa
sub
push
add
add
inc
fisttp
ret
adc
push
or
jne
push
mov
or
mov
stos
shl
cmp
and
add
mov
pop
retf
arpl
pop
adc
enter
inc
lds
add
sub
jl
pop
test
jp
push
add
aas
push
aad
push
retf
adc
std
dec
inc
mov
aas
inc
mov
push
add
rcr
push
es
test
dec
and
inc
xchg
mov
js
dec
stos
pop
jmp
and
pop
jne
cmps
aad
or
dec
mov
ins
stos
jbe
nop
cmp
out
xor
sub
fsub
adc
sbb
xchg
push
out
adc
sub
stos
cdq
push
inc
xchg
(bad)
lds
mov
aad
adc
out
jmp
jae
(bad)
dec
dec
out
sub
mov
cld
les
aaa
or
add
adc
add
data16
fs
jmp
rcl
xor
outs
fwait
popf
cmp
jle
cmp
leave
mov
jno
lock
repnz
adc
and
mov
in
ret
add
or
ds
test
popa
push
push
or
jne
cld
dec
mov
jg
adc
push
cmp
sti
xchg
pop
add
cdq
aad
fmul
mov
aam
mov
ficomp
or
out
xor
or
arpl
dec
adc
or
xlat
xchg
xor
sub
push
enter
inc
or
enter
bound
nop
test
call
dec
inc
dec
cld
inc
or
and
xchg
pop
enter
cmps
jl
and
mov
adc
adc
ins
inc
sahf
dec
test
or
cmp
aaa
xor
loopne
stc
dec
and
sbb
popa
sub
inc
adc
cmp
inc
test
clc
rcl
sub
push
in
repz
ret
nop
into
ret
sub
lock
cld
jle
test
rcr
xchg
hlt
sub
ja
cwde
and
cmp
xchg
push
adc
ret
inc
hlt
xchg
xor
vsqrtps
mov
mov
inc
pop
nop
inc
mov
add
call
enter
sbb
mov
push
(bad)
fstp
mov
call
dec
repz
clc
mov
mov
xor
mov
push
popf
popa
lods
mov
push
mov
test
je
push
add
or
pop
mov
aam
add
cmp
mov
dec
push
rcr
(bad)
pop
hlt
dec
js
and
dec
in
sahf
mov
mov
and
mov
jmp
mov
es
adc
arpl
outs
dec
iret
sbb
call
jecxz
inc
test
xchg
jmp
or
jb
inc
adc
mov
xchg
and
inc
xor
cmp
int3
dec
sbb
les
sub
iret
adc
or
test
pop
ficom
pop
sub
popf
dec
lds
jnp
and
or
lahf
jbe
sub
inc
xchg
inc
sbb
imul
xchg
jp
test
jne
sub
ins
ror
or
add
shr
mov
jecxz
add
and
jmp
jb
stos
dec
lahf
inc
rol
push
das
mov
nop
inc
dec
jne
dec
clc
jp
inc
in
std
cmp
push
inc
mov
push
retf
sub
clc
dec
pop
cs
dec
inc
add
sbb
adc
push
sub
stos
imul
fimul
ja
fs
ss
cmp
(bad)
adc
pop
add
mov
jmp
cmp
int3
fwait
out
ja
call
fidivr
xchg
ret
adc
mov
xor
mov
push
inc
add
ror
fisttp
jbe
mov
push
push
fisttp
jnp
test
inc
xchg
ja
ret
scas
mov
aam
dec
xchg
sub
clc
mov
movs
mov
movs
xchg
sahf
inc
dec
jnp
xor
jns
or
cmp
sbb
add
push
pop
rcr
or
sbb
inc
sub
adc
or
and
push
imul
mov
ficom
and
adc
adc
iret
test
inc
dec
jmp
or
dec
jae
adc
inc
mov
hlt
popa
jmp
scas
or
hlt
ja
sub
test
pop
cmp
inc
or
daa
xchg
ds
fld
inc
cwde
es
jl
movs
add
jne
sub
test
pop
inc
fadd
je
lock
test
mov
sar
or
lock
scas
sbb
jne
stc
sbb
inc
inc
inc
or
imul
dec
xchg
je
lds
retf
xchg
dec
and
movs
and
xor
jns
adc
out
add
or
movs
cwde
sbb
mov
fist
or
bound
mov
push
jnp
or
mov
jns
fwait
mov
xchg
xchg
fiadd
xor
or
mov
inc
test
jne
xchg
sahf
xlat
bound
push
pushf
aaa
push
cwde
in
inc
mov
pushf
jo
(bad)
jmp
or
cs
in
je
mov
add
(bad)
cmp
dec
inc
iret
add
outs
scas
je
aas
mov
frstor
mov
mov
inc
and
test
jmp
jge
add
daa
call
adc
shl
mov
inc
int
mov
pop
retf
xor
adc
iret
fild
into
cmp
jl
sbb
in
mov
lock
into
clc
rcl
(bad)
cld
iret
in
xor
or
jne
mov
aaa
xchg
jnp
jecxz
sub
push
or
dec
adc
push
pminub
mov
jg
in
mov
(bad)
in
test
scas
pop
adc
movs
sub
jo
and
sub
xor
xchg
cmp
xchg
push
sub
hlt
lds
lahf
cmovne
push
pop
dec
in
test
aas
xchg
fisttp
jge
or
std
dec
mov
jmp
inc
or
fdiv
jle
or
test
out
call
cmp
sub
or
int3
cld
mov
add
push
test
lahf
ja
into
pop
jecxz
pop
idiv
test
dec
stos
jg
test
cdq
add
mov
pop
ret
lea
inc
imul
icebp
repnz
jno
cmps
dec
fcom
adc
add
stos
jne
inc
adc
pop
xchg
jg
cld
cdq
lods
(bad)
sub
movs
aad
jle
add
jns
ret
lahf
mov
aas
shr
mov
dec
add
mov
mov
retf
fild
movs
xlat
jns
and
push
mov
or
xor
je
cmps
or
imul
sbb
push
mov
sub
test
(bad)
xor
and
push
movs
rcpps
je
adc
ss
mov
xlat
or
xchg
cli
fwait
js
jno
xor
inc
out
imul
jp
dec
aad
iret
sti
cdq
cld
add
xor
add
jmp
std
or
sahf
mov
xchg
out
cld
pop
test
cld
cli
xchg
push
mov
and
sub
or
jle
push
test
aas
push
loopne
xchg
mov
xor
fwait
adc
cli
pop
push
shl
mov
inc
or
xor
mov
pop
adc
jne
mov
lods
dec
call
push
mov
push
sub
push
adc
push
xor
jmp
jo
test
add
xchg
and
push
mov
mul
arpl
pop
sar
sub
lods
cmps
pop
pusha
cwde
out
push
mov
jmp
inc
ins
into
xchg
test
jge
iret
adc
mov
(bad)
sub
arpl
sub
test
(bad)
push
xchg
inc
repnz
lea
or
mov
mov
xchg
mov
test
inc
jg
fnstenv
cli
mov
dec
inc
jns
(bad)
mov
lds
stos
movs
gs
or
loop
arpl
and
add
jg
dec
inc
es
(bad)
cmp
ja
sub
out
jge
xor
test
sub
mov
and
mov
inc
pop
bound
fwait
or
in
(bad)
dec
les
ficom
test
fdivrp
inc
and
or
leave
(bad)
push
nop
lahf
call
sahf
xchg
test
cmp
or
pop
xor
xchg
mov
or
sub
(bad)
sbb
mov
push
jae
sbb
nop
mov
outs
lods
jecxz
enter
sub
push
rcl
movups
dec
xchg
sahf
loopne
push
push
adc
dec
mov
add
mov
adc
push
in
shr
and
retf
mov
dec
mov
icebp
and
(bad)
dec
and
inc
int
inc
mov
xor
pop
sti
jo
sbb
adc
xor
ins
dec
dec
adc
inc
mov
add
and
jmp
push
mov
mov
push
adc
push
cmp
push
mov
sbb
mov
and
je
push
jle
jge
loop
inc
mov
dec
ret
lods
aaa
movs
mov
sub
xor
add
gs
dec
jmp
lea
(bad)
retf
mov
and
js
lea
jns
dec
add
mov
rol
sub
in
or
pop
test
sub
xor
dec
pushf
mov
dec
leave
push
push
dec
stos
mov
stos
lods
inc
add
xor
xchg
nop
or
jne
cdq
mov
inc
sub
and
jg
push
cmp
retf
adc
movs
mov
test
mov
inc
lock
dec
sub
(bad)
adc
jge
push
and
mov
push
mov
inc
sti
or
std
lea
push
add
sbb
les
push
adc
fsubrp
das
test
icebp
inc
or
test
push
enter
add
xor
fdivr
stos
xor
cli
pop
push
repnz
xchg
mov
mov
cmp
daa
add
fcomp
aad
adc
sbb
scas
ss
shr
sub
or
cmps
xor
adc
dec
lock
imul
les
pop
ficom
xor
pop
dec
in
mov
pop
fwait
adc
in
std
inc
cwde
dec
jnp
push
in
int
mov
or
jp
dec
cwde
(bad)
push
add
add
aam
sub
inc
inc
ins
and
and
int
push
ins
mov
sub
pop
dec
sub
sbb
imul
out
dec
jb
mov
aaa
mov
mov
(bad)
loop
lock
call
ror
lds
into
imul
dec
adc
(bad)
js
in
inc
ror
mov
aaa
ins
outs
pop
xchg
sub
add
xchg
fstp
pusha
dec
cmp
mov
outs
adc
inc
adc
adc
stc
push
imul
or
in
pop
inc
sub
nop
sar
sbb
xchg
cmp
sbb
ins
call
or
push
inc
sub
push
xchg
test
xchg
(bad)
call
pop
data16
pop
xor
fsub
mov
mov
repnz
push
or
dec
dec
dec
inc
std
push
and
mov
push
test
push
xchg
mov
xor
fwait
call
push
push
adc
pop
push
pop
cmp
enter
and
fsubp
dec
inc
mov
push
adc
aam
mov
aam
movs
aaa
cmp
fdivr
xchg
adc
add
cmp
jl
or
in
mov
(bad)
in
ins
push
ins
in
rcl
shr
lds
inc
adc
jmp
xchg
xor
std
sbb
adc
xchg
rcr
or
or
popa
sar
or
mov
or
inc
add
out
adc
lods
loop
and
pop
mov
cmp
test
jge
push
jns
int3
add
or
test
or
xor
inc
push
shr
movs
lods
mov
scas
call
fiadd
or
test
push
pop
nop
in
leave
xchg
adc
inc
pushf
pop
aam
and
repnz
inc
jmp
lods
test
mov
mov
into
lock
jmp
sub
ds
sbb
dec
leave
mov
jmp
in
mov
mov
pop
(bad)
(bad)
mov
and
jmp
add
sbb
inc
mov
jno
int
aas
pusha
mov
jmp
push
loop
clc
jmp
mov
hlt
into
std
push
push
or
test
pop
mov
sbb
enter
sub
inc
xor
or
test
inc
mov
jmp
mov
cmps
sub
xchg
in
sbb
add
or
fild
mov
push
movs
jmp
int3
inc
imul
mov
mov
or
shl
dec
cmp
or
jo
daa
movs
cmp
mov
in
repz
(bad)
push
movs
data16
mov
sub
sub
push
pop
add
and
dec
(bad)
dec
enter
inc
test
int3
sbb
add
xchg
cmp
sbb
mov
ins
loop
push
push
test
sub
(bad)
ins
xchg
sub
mov
clc
xchg
retf
or
pop
and
nop
or
pop
add
pushf
sahf
and
jmp
jg
adc
mov
mov
popf
jge
xchg
rol
scas
add
sub
ja
lea
jnp
cmp
add
aas
xchg
inc
or
mov
mov
clc
add
push
js
ss
mov
int3
cwde
pop
test
add
rcl
jae
cld
imul
or
push
dec
jecxz
dec
fld
ror
adc
sbb
les
pop
aaa
adc
outs
xor
je
xor
test
adc
ja
cmp
pop
jbe
pusha
daa
jmp
jo
inc
xor
dec
in
fs
cmp
jae
inc
sbb
cli
fisub
int3
jns
mov
or
inc
test
jae
add
ss
ins
xor
jmp
push
mov
pop
sub
cmp
or
dec
call
mov
pop
mov
or
leave
enter
dec
rcl
inc
test
inc
popf
mov
mov
mov
mov
fild
cmps
(bad)
into
xor
lahf
imul
lea
jmp
add
push
nop
fld
ja
add
test
les
(bad)
lock
inc
fld
jmp
sti
out
addr16
dec
outs
cwde
mov
add
jae
stos
js
lock
push
movs
dec
movs
int3
pop
push
xor
sub
push
icebp
mov
mov
mov
fcomp
adc
or
inc
fs
push
jbe
scas
adc
mov
(bad)
and
and
mov
popa
adc
test
lods
sar
rcr
push
xchg
or
and
enter
jge
test
lahf
push
mov
xchg
sbb
adc
bound
jb
cmps
add
movs
imul
push
mov
mov
cli
mov
dec
mov
xor
call
inc
fldcw
inc
test
pop
sub
popa
jnp
call
pop
jo
push
dec
mov
lods
jbe
in
pop
addr16
pop
push
mov
jmp
mov
test
ins
inc
or
stos
pop
jmp
dec
dec
or
test
jb
(bad)
fiadd
mov
sub
jmp
xchg
jmp
sub
dec
or
sub
sub
push
aam
push
test
inc
add
add
and
pop
or
movs
push
dec
addr16
scas
xchg
or
lea
test
rsm
jns
mov
push
jb
inc
mov
mov
pop
fiadd
add
stos
add
lods
xor
repz
mov
popa
stc
mov
in
ret
mov
ds
out
call
and
dec
and
push
inc
mov
pop
out
lods
adc
or
(bad)
and
movs
dec
adc
cmps
and
mov
jge
inc
jmp
hlt
dec
inc
adc
dec
push
fsubr
test
shl
xor
enter
inc
movs
fisubr
cli
std
cs
fcomp
fist
fimul
inc
(bad)
sbb
imul
into
pop
and
jmp
mov
daa
sahf
and
in
xor
push
out
pop
pop
sub
and
push
or
sbb
sub
inc
and
inc
mov
push
xor
movs
fisub
and
addr16
ds
je
xchg
cmps
and
add
pop
iret
sub
jg
and
les
gs
adc
mov
fmul
sahf
jne
test
and
out
add
xor
inc
or
xor
call
sbb
out
in
mov
dec
imul
and
push
adc
sub
shr
icebp
lahf
xchg
gs
loop
jnp
or
and
or
or
inc
add
cmc
xchg
mov
ror
stos
sbb
adc
int
call
aas
cmp
add
retf
add
dec
mov
push
ret
inc
inc
inc
or
loopne
call
int3
int3
movs
sar
mov
cmp
xchg
fdivr
mov
add
test
cmp
add
lods
addr16
xchg
cdq
inc
push
(bad)
not
imul
push
in
or
xchg
out
in
add
mov
xchg
int3
mov
fsub
push
and
mov
loope
and
idiv
jg
mov
add
stos
dec
idiv
adc
or
xchg
jno
clc
jbe
adc
and
pushf
inc
out
jb
jle
or
addr16
dec
stos
mov
imul
add
xlat
mov
or
inc
sub
jmp
bound
push
jae
lods
cdq
add
add
adc
jmp
push
pop
add
mov
push
ret
inc
add
jmp
pop
dec
adc
push
or
adc
push
sub
push
dec
pop
mov
adc
rcr
xchg
xor
push
and
sub
aas
sub
push
xchg
cmp
xor
daa
retf
ficom
xor
and
and
cmp
fs
sahf
adc
sub
out
cmps
cmp
iret
add
fisub
loope
push
(bad)
sub
sub
int3
or
imul
and
add
data16
ja
mov
sub
loope
inc
and
adc
les
jmp
cld
push
mov
cmp
dec
test
xor
adc
inc
push
xchg
mov
or
test
clc
mov
adc
imul
xchg
fisttp
retf
or
cmp
add
fchs
adc
add
pop
out
xor
mov
(bad)
(bad)
mov
cmp
add
(bad)
pop
push
fst
adc
fcom
push
push
and
xchg
cmps
mov
test
in
pop
xchg
and
pusha
push
sbb
cmps
mov
fld
lahf
jge
and
fidivr
adc
inc
mov
test
in
or
dec
adc
outs
mov
leave
add
fcmovnbe
adc
mov
cld
jmp
xor
sbb
inc
push
iret
cmp
pushf
adc
fimul
sbb
movs
inc
and
mov
int
jmp
arpl
jno
mov
mov
ja
mov
adc
(bad)
cmp
mov
popa
(bad)
pop
inc
inc
sub
sbb
inc
adc
mov
fwait
and
push
sub
out
sub
js
and
mov
inc
sbb
lahf
cld
outs
push
sub
inc
imul
repz
and
sub
mov
enter
add
cmp
lods
int3
push
adc
push
xor
adc
or
inc
push
shr
ins
int
and
xchg
sbb
jmp
dec
sbb
je
add
jae
push
jmp
mov
int3
add
jnp
adc
push
test
cmp
xor
data16
or
push
cmp
xchg
pop
sub
xor
cs
xor
inc
push
sub
(bad)
stos
push
mov
xor
retf
jno
nop
mov
mov
push
xchg
push
inc
cli
and
cmp
lods
mov
aam
push
scas
call
ss
rol
shr
cmp
movs
jg
dec
ins
cmp
adc
inc
int3
fbstp
and
int3
mov
inc
cmps
fs
push
dec
sub
fs
add
push
xor
xor
repz
xor
xor
jle
sub
clc
iret
call
or
(bad)
cmp
inc
sub
cwde
test
jl
mov
and
std
dec
jmp
(bad)
mov
adc
xchg
ds
mov
mov
mov
jmp
loop
push
push
fmul
mov
dec
add
inc
fwait
int
adc
lods
or
mov
add
jmp
adc
xor
out
cmps
aaa
out
and
(bad)
cdq
pop
cwde
sti
jmp
leave
push
and
or
hlt
loope
cld
ror
aam
mov
nop
xchg
mov
push
inc
stos
ror
dec
push
shl
or
mov
or
mov
mov
push
add
push
loope
mov
adc
jg
ret
cld
(bad)
lahf
adc
jge
or
fwait
or
dec
add
cmps
cmp
fcomp
push
cmps
or
or
push
mov
sbb
mov
inc
xor
in
cmp
fmul
outs
pop
mov
daa
xchg
jns
push
jecxz
sub
inc
(bad)
loopne
xchg
mov
push
and
pop
mov
jbe
scas
icebp
mov
dec
dec
jp
lock
and
ja
cmp
pop
adc
popf
fisttp
icebp
es
adc
fistp
fiadd
ds
fiadd
mov
cmp
(bad)
in
imul
sbb
xor
stos
xor
pop
mov
pop
and
lahf
mov
fst
xor
sub
outs
jb
add
push
mov
je
inc
or
(bad)
stc
out
add
adc
jne
or
dec
cmp
retf
and
xchg
pusha
shl
into
lock
fs
dec
gs
xor
inc
push
test
mov
jae
mov
stos
retf
sub
lds
push
inc
ror
out
loope
clc
push
inc
gs
addr16
or
dec
or
dec
ret
mov
dec
xor
sbb
fdiv
gs
lock
and
push
sbb
ins
add
cmps
imul
sub
dec
test
adc
loope
mov
sub
loopne
sbb
mov
sub
pop
pop
pop
add
mov
sub
dec
retf
frstor
push
mov
mov
fs
cmp
cs
add
cli
mov
adc
sbb
and
jb
adc
or
shl
sub
add
je
nop
dec
pop
xor
(bad)
pop
movs
pop
and
mov
sahf
adc
or
xor
mov
ret
fld
or
je
rcr
sub
mov
fcos
pop
mov
jmp
loope
adc
jmp
jmp
js
add
adc
daa
mov
retf
icebp
leave
test
inc
imul
or
or
dec
and
push
push
inc
and
push
and
xchg
mov
mov
dec
or
fild
fisub
pop
mov
mov
inc
mov
xor
adc
jne
ret
push
ins
stos
or
mov
mov
pop
jne
pcmpeqd
sub
dec
sub
cmp
xchg
repz
push
dec
add
fnstsw
pop
jae
add
out
pop
imul
(bad)
inc
ret
mov
or
mov
pop
imul
mov
fld
and
inc
jge
cmp
adc
retf
mov
pop
inc
xchg
xchg
mov
retf
rol
mov
cmp
inc
pop
inc
js
and
cmp
les
push
iret
xchg
push
dec
fidiv
add
dec
imul
movs
ins
(bad)
jmp
mov
push
sti
jb
ja
call
dec
iret
(bad)
in
cdq
push
xchg
push
test
lahf
mov
sub
pop
jb
(bad)
nop
add
adc
pop
push
ficomp
xchg
push
in
sbb
mov
adc
dec
cmp
mov
fist
push
(bad)
and
in
inc
or
inc
not
mov
loope
xchg
xor
push
mov
pop
lds
add
sti
and
into
adc
xor
sti
idiv
or
inc
xlat
test
outs
push
std
mov
mov
xor
dec
rcr
fist
jmp
xlat
pop
xlat
std
or
sbb
dec
(bad)
test
sti
pop
rcr
fist
test
jg
hlt
jmp
adc
int
push
push
aas
adc
std
mov
jne
call
shl
xchg
enter
or
test
pushf
test
add
adc
fild
test
or
jmp
jmp
int
leave
stos
clc
nop
loope
push
cwde
ror
cmps
hlt
push
ret
retf
jmp
stc
inc
(bad)
cmc
std
add
jmp
adc
xor
pop
test
adc
xchg
cs
fmul
jmp
scas
mov
cmps
mov
es
scas
add
mov
mov
les
int3
fsub
call
push
add
add
das
ror
popa
add
pop
sbb
cmp
sti
inc
or
mov
xor
mov
jnp
add
ja
cmp
push
stos
lahf
xchg
mov
xor
inc
xchg
jb
cmp
inc
movs
xchg
les
pop
jmp
fmul
sbb
push
inc
adc
push
enter
sub
enter
out
mov
jge
pop
test
mov
loopne
inc
mov
sbb
adc
mov
in
dec
rcl
adc
sbb
ret
jnp
and
sub
cvtps2pd
sub
adc
adc
(bad)
push
call
jle
mov
fwait
pop
jmp
push
mov
and
movsx
data16
mov
mov
ror
adc
lods
inc
mov
dec
mov
das
xchg
popa
and
clc
sub
mov
or
mov
inc
and
popa
sub
inc
mov
bound
or
mov
push
sbb
push
lock
inc
cmp
sbb
leave
int3
add
pop
inc
jo
push
push
cmps
xchg
and
mov
rcl
inc
sbb
sub
sub
xchg
jmp
mov
loop
jmp
std
mov
mov
jmp
ds
adc
adc
mov
test
ret
ins
cmc
add
ds
sub
imul
or
sub
and
mov
xchg
xchg
(bad)
pop
adc
xor
hlt
add
mov
sub
adc
add
mov
pop
dec
int
adc
or
jmp
mov
sbb
or
sbb
in
aas
jne
stos
add
cmp
or
retf
pop
fiadd
data16
fadd
fldenv
xor
sbb
mov
xchg
mov
cmp
xor
or
sbb
and
sub
xchg
dec
dec
add
stos
mov
mov
add
(bad)
(bad)
xor
bound
gs
(bad)
jne
mov
xlat
loop
cdq
push
add
inc
shr
xor
mov
dec
call
inc
adc
ret
push
hlt
jp
adc
repz
fstp
std
dec
xchg
ror
or
xor
sub
call
sub
pop
add
repnz
inc
mov
addr16
inc
out
dec
fs
into
add
aaa
jp
popf
jl
dec
ficom
xchg
ja
fisttp
adc
mov
adc
pop
xchg
rol
cmp
loop
xchg
and
loopne
push
mov
lea
dec
(bad)
or
pop
in
call
dec
xchg
int3
jo
mov
aam
push
inc
xlat
(bad)
dec
retf
and
(bad)
arpl
push
or
mov
push
ja
sub
adc
pop
mov
fs
mov
pop
push
mov
test
mov
test
and
mov
sub
fidivr
inc
mov
fdiv
movs
out
dec
mov
or
cwde
(bad)
sbb
push
xor
out
pop
jmp
xchg
add
or
fcmovnb
(bad)
mov
(bad)
jl
or
push
std
pop
movs
mov
adc
add
scas
pusha
mov
mov
cmp
lds
pop
jns
mov
adc
push
and
daa
push
pop
mov
inc
lock
addr16
jmp
rol
ins
add
jbe
pop
call
sti
cmp
inc
cwde
xchg
sub
xor
adc
xchg
rcr
pop
mov
rcr
popa
mov
iret
and
jmp
aaa
inc
xlat
mov
mov
aas
or
(bad)
retf
bnd
aad
or
sbb
add
push
or
inc
inc
rcr
add
inc
dec
inc
and
or
jno
mov
nop
inc
out
xor
mov
jne
dec
jmp
aad
inc
xor
dec
fiadd
retf
in
mov
ss
neg
add
rol
mov
and
hlt
jnp
cmp
push
sub
push
and
xchg
dec
adc
or
or
int3
pop
and
aas
adc
add
pop
or
xchg
dec
fisub
gs
inc
adc
adc
movs
push
mov
push
or
dec
dec
sbb
fsub
push
push
push
xchg
std
and
sbb
stc
add
and
adc
jnp
add
lea
add
xchg
cli
pop
aaa
jne
add
imul
fstp
lods
add
mov
sub
push
mov
mov
test
stos
inc
add
fldl2e
in
inc
mov
in
test
daa
sbb
fist
jno
sbb
lock
or
scas
xor
pop
in
pop
push
jbe
push
or
clc
sub
fsub
add
push
mov
jp
dec
dec
jle
sbb
sbb
jg
icebp
sti
inc
sbb
add
mov
dec
cli
test
call
or
xchg
sub
pop
mov
mov
dec
call
les
loop
push
stc
xlat
mov
ret
add
repnz
jae
pusha
fcomp
sbb
dec
stos
inc
sbb
xchg
cld
jno
sbb
in
sbb
dec
xor
adc
xor
rcr
xor
or
inc
mov
cmc
adc
or
inc
and
lea
mov
dec
js
add
or
hlt
call
jmp
enter
nop
shr
jle
pop
add
dec
mov
and
inc
inc
xchg
or
call
xlat
add
jae
jb
ins
sbb
out
test
fs
sub
cmp
imul
jns
add
neg
xor
push
xchg
push
jae
in
jmp
and
dec
loope
xor
sub
and
(bad)
cmp
cmp
dec
mov
mov
aas
lea
in
adc
pop
cld
xor
dec
(bad)
shl
push
xor
and
mov
je
sbb
repz
in
pop
xchg
inc
mov
in
ja
pop
test
cmp
dec
test
out
cld
sbb
mov
xor
idiv
inc
mov
std
push
movs
xor
xor
inc
push
lods
outs
fnstcw
aam
retf
cli
pop
mov
adc
test
cmp
mov
xchg
lods
mov
enter
lock
xor
mov
gs
push
and
mov
xchg
add
pop
fidivr
and
ret
lock
mov
or
adc
idiv
adc
in
adc
aam
movs
cwde
cmp
aas
add
sti
push
cmps
and
out
sub
mov
sub
int3
ret
mov
mov
add
sbb
add
or
mov
leave
test
sti
sbb
sub
and
adc
sbb
mov
pop
icebp
or
fucomi
(bad)
fist
sub
add
adc
hlt
push
xchg
jo
mov
hlt
sti
push
cmp
xor
inc
xchg
mov
pop
sub
xor
mov
(bad)
jg
or
cmp
mov
adc
sub
and
mov
add
test
dec
push
hlt
sub
cmp
add
icebp
cmp
add
jmp
add
mov
inc
scas
push
(bad)
cmps
loopne
fld
push
cmp
nop
sub
hlt
ins
jne
push
int
sbb
or
mov
aad
mov
(bad)
test
fistp
repz
pop
popa
jp
ja
jecxz
fild
jmp
fs
fistp
cmp
cmc
cs
sub
cmp
add
pop
mov
in
or
clc
cld
xchg
mov
sub
jne
ins
movs
xor
mov
adc
mov
jmp
retf
ins
or
pop
movs
ret
popa
inc
add
add
jnp
stos
push
(bad)
cmps
dec
xchg
mov
jge
adc
(bad)
(bad)
jmp
and
retf
mov
adc
retf
or
test
dec
std
scas
push
inc
leave
or
bound
addr16
cmps
les
dec
sbb
cld
dec
sbb
rcl
repz
pop
fist
mov
xchg
xchg
aaa
mov
cli
das
cmp
lods
push
cmps
inc
nop
(bad)
or
push
stos
mov
shl
popf
jne
test
inc
je
jge
fld
add
pop
jg
das
mov
add
pop
xor
xchg
add
sahf
or
cld
out
pop
adc
or
jecxz
mov
and
and
sub
cdq
push
iret
(bad)
cld
test
popa
jp
mov
je
adc
pop
xor
imul
jne
and
mov
xor
adc
sub
sub
xchg
sbb
push
je
and
leave
mov
dec
lods
or
mov
pushf
mov
pop
pop
xor
jnp
cdq
pop
sbb
mov
cmp
xchg
test
fxch
jmp
call
adc
jbe
push
add
mov
add
dec
add
jle
push
loop
mov
dec
adc
push
or
mov
mov
jle
hlt
jnp
imul
ins
mov
retf
jge
into
clc
sbb
pop
inc
sub
dec
dec
pop
ins
jmp
inc
fbstp
and
cmps
mov
or
cmp
dec
mov
and
das
mov
xor
jno
push
popf
mov
in
and
ret
inc
add
xchg
sbb
dec
pop
sub
in
(bad)
adc
sbb
dec
add
fidiv
movs
push
jo
mov
adc
inc
test
xor
ins
in
sub
hlt
dec
stos
and
hlt
inc
inc
xchg
xor
ds
sbb
or
cmp
iret
sbb
push
retf
mov
fs
test
xlat
sbb
sbb
loopne
jmp
adc
push
(bad)
int3
ror
push
mov
rcr
adc
adc
div
in
adc
leave
and
sbb
or
(bad)
jne
fmul
xor
loop
dec
hlt
and
inc
xor
fsubr
push
push
xchg
fcom
sub
push
or
and
sbb
jmp
test
push
(bad)
adc
sbb
inc
cmp
dec
ds
mov
loopne
add
je
cld
xor
push
sbb
jmp
inc
xor
mov
xchg
fidivr
sbb
(bad)
sbb
xor
mov
ror
mov
dec
fisttp
out
inc
shl
dec
jge
adc
jnp
clc
dec
mov
xchg
(bad)
(bad)
and
es
inc
fs
ins
add
or
imul
push
push
push
xor
or
dec
sub
xchg
out
fwait
sub
shl
pop
int
mov
add
dec
pusha
cwde
pop
mov
mov
adc
mov
dec
xchg
push
int3
dec
or
add
pop
jae
sub
sahf
or
adc
dec
push
xchg
ss
and
pop
movs
cld
pop
xor
push
and
(bad)
stc
and
add
arpl
mul
les
or
shl
mov
or
movs
out
mov
push
es
xor
adc
ja
jbe
mov
test
xchg
push
aad
es
dec
(bad)
xlat
mov
stos
addr16
stc
sub
cmp
or
and
or
mov
int3
or
adc
call
cmp
adc
in
outs
push
add
fisttp
and
fsub
jge
int3
loopne
xchg
and
sbb
inc
dec
xlat
mov
mov
jmp
add
add
jmp
adc
push
sub
(bad)
icebp
pop
dec
sub
sbb
push
push
inc
or
out
xchg
mov
es
sub
lods
(bad)
out
dec
out
and
dec
leave
xchg
bound
into
mov
fs
cmp
jae
mov
add
push
and
nop
into
stos
(bad)
xchg
fisub
mov
(bad)
test
in
movs
pop
ins
pop
out
or
xor
or
(bad)
(bad)
adc
or
data16
push
lds
mov
xchg
pop
rol
imul
inc
jnp
push
cmp
pop
push
lea
lea
add
pusha
push
jns
xchg
add
cmps
add
push
push
jle
jle
adc
test
pop
mov
das
lea
add
call
and
inc
enter
mov
in
xchg
test
icebp
and
mov
add
xchg
add
adc
les
add
jmp
push
pushf
adc
(bad)
jno
xchg
mov
fild
mov
or
push
mov
sbb
ror
xchg
sub
xor
inc
push
push
or
add
or
shl
mov
mov
or
test
enter
dec
push
mov
mov
xchg
cli
inc
cmp
(bad)
push
rol
nop
(bad)
xchg
xor
sub
mov
repnz
xchg
and
mov
and
pusha
repnz
in
repnz
inc
inc
add
inc
mov
push
mov
push
ret
in
adc
call
pop
ror
mov
adc
shr
xchg
pop
cmc
or
lea
ds
adc
xchg
mov
fucomi
cmp
mov
pop
ins
adc
sbb
cmp
mov
dec
loopne
daa
loop
bound
push
aad
arpl
icebp
je
dec
into
adc
adc
jne
mov
pop
inc
xchg
stc
jg
mov
in
pop
mov
movs
add
adc
pop
mov
setne
push
push
mov
fwait
cld
cmp
mov
in
push
rol
pop
clc
jecxz
(bad)
(bad)
jne
add
sbb
call
fidiv
idiv
cld
mov
je
cld
fwait
aaa
(bad)
bound
jmp
mov
stos
dec
xor
fisttp
push
push
xor
sub
cli
cmps
jmp
inc
clc
xor
jl
icebp
jnp
jmp
or
pop
jmp
xchg
loop
mov
dec
sti
movs
xor
inc
cmp
pop
dec
inc
daa
cmp
inc
inc
adc
aad
ret
and
mov
push
cwde
xor
xor
pop
jmp
push
(bad)
ins
add
std
cli
pop
push
enter
or
leave
cmp
ror
je
aam
pop
in
stos
test
add
inc
and
push
jmp
xchg
dec
add
fist
(bad)
push
dec
ja
push
sbb
cld
xchg
imul
mov
inc
xchg
fisttp
sub
pusha
imul
movs
ins
sub
out
(bad)
adc
sub
idiv
push
fisubr
lea
dec
fnstcw
inc
loop
adc
pop
ret
cmp
fwait
and
inc
lock
pop
xchg
push
adc
jae
mov
cmps
cli
sub
push
cdq
fdivr
mov
sub
mov
pop
mov
je
push
or
jb
in
xor
ret
aaa
fcmovnb
les
push
lds
push
mov
lods
mov
pop
sub
mov
push
push
data16
mov
inc
push
les
inc
jne
movs
push
mov
pop
sar
mov
cmp
xchg
clc
clc
or
sbb
mov
pop
or
dec
jbe
dec
dec
add
ins
int3
stos
enter
dec
mov
add
enter
xchg
enter
rol
add
mov
or
retf
jmp
nop
daa
lods
ins
mov
mov
leave
xchg
shl
dec
sub
sub
xor
pop
icebp
popa
mov
imul
or
sub
add
arpl
cmp
inc
loopne
cmp
mov
rcl
push
adc
jo
mov
jp
shl
inc
outs
int3
jno
fldenv
ins
test
xor
lahf
pop
dec
jg
and
in
pop
iret
push
jmp
jge
or
or
dec
inc
repnz
scas
dec
or
nop
push
inc
push
pop
inc
mov
xchg
inc
jae
and
push
dec
adc
jmp
ret
mov
ds
adc
stos
je
dec
loopne
movs
pop
lea
test
sbb
pop
sbb
push
xchg
sbb
dec
xor
sbb
inc
inc
push
push
or
adc
and
lods
add
xchg
dec
push
cli
cdq
nop
inc
call
int
pop
add
xchg
dec
jg
lds
in
je
cmp
out
adc
dec
lock
cmp
jne
sbb
test
fdivp
jmp
movs
mov
lea
pop
mov
lock
dec
xlat
stc
mov
inc
push
jmp
aad
inc
jl
push
push
inc
push
and
xchg
or
stc
cmp
data16
add
xor
xchg
loope
sbb
mov
je
jmp
int3
sbb
or
pop
(bad)
sbb
fsubrp
xchg
call
push
sub
std
sbb
fcom
sub
sbb
mov
mov
adc
scas
mov
jmp
push
int
or
cmp
cld
fild
sbb
add
or
adc
out
cmc
dec
and
cli
scas
mov
mov
xchg
ficom
cmp
sbb
outs
dec
mov
repz
out
jmp
sti
inc
adc
jg
push
ficomp
fdivr
sub
push
pushf
push
push
dec
sbb
push
arpl
mov
inc
dec
mov
mov
clc
add
outs
jmp
and
jmp
test
enter
push
test
sbb
stc
adc
ret
mov
jne
xchg
outs
sub
pop
nop
dec
js
add
(bad)
push
adc
adc
es
icebp
or
sar
xor
daa
(bad)
sub
adc
jmp
sub
mov
ror
jge
stc
outs
shr
call
xor
rcr
mov
xchg
push
cmp
movs
dec
in
cwde
cmp
mov
and
mov
sti
and
adc
xchg
lods
shl
hlt
push
clc
pop
in
push
sub
pop
adc
stos
sub
adc
sub
sbb
cmp
sub
mov
inc
mov
inc
in
add
sub
xchg
data16
inc
dec
lock
xor
xchg
daa
lock
int
push
retf
retf
sub
or
fiadd
xchg
test
fbld
dec
dec
out
xchg
int
dec
mov
pop
inc
push
in
xor
mov
mov
test
inc
jne
fmul
mov
rol
rcl
clc
jno
add
jecxz
mov
test
ror
mov
mov
sub
sub
je
(bad)
sbb
ret
adc
fsub
dec
popf
jne
jl
aas
and
dec
xchg
or
pop
stc
mov
sbb
and
sbb
and
cmp
outs
loop
mov
jp
cmps
cwde
xchg
int3
and
xchg
test
fs
les
mov
aam
enter
outs
mov
push
and
xor
adc
cmc
les
jns
push
push
push
push
enter
shl
popa
xlat
and
xchg
inc
sbb
outs
xchg
xor
add
mov
mov
jle
(bad)
and
jne
iret
xor
add
sbb
jmp
pusha
sub
xor
(bad)
in
xor
test
sub
and
test
jge
add
ret
mov
mov
aas
add
sbb
rcl
pop
jae
xchg
xchg
mov
jecxz
jae
push
cmp
mov
in
mov
mov
repnz
xchg
(bad)
call
inc
fnstcw
ins
sbb
mov
icebp
sub
sub
push
test
add
adc
push
jmp
pop
mov
stos
sub
leave
mov
and
and
sbb
out
push
aas
sbb
jge
icebp
adc
add
iret
mov
pop
inc
cdq
jg
and
dec
fiadd
inc
dec
les
cmp
in
loopne
sar
int
dec
cmp
sub
movs
add
gs
cmp
xchg
push
shl
nop
add
into
les
adc
mov
jle
jmp
gs
push
inc
xchg
jmp
sbb
push
idiv
into
movs
and
mov
ret
call
jmp
sbb
mov
xor
and
scas
xor
mov
cmp
cs
add
sbb
or
push
or
test
fist
cld
inc
push
lds
sub
or
add
push
je
(bad)
out
inc
dec
push
add
out
fld
xor
daa
jae
adc
push
sbb
mov
clc
sub
in
push
jg
and
adc
push
nop
xchg
adc
ss
test
push
aam
xchg
(bad)
test
xor
pop
cmp
scas
outs
mov
test
out
aad
bound
push
dec
fild
cld
inc
test
cli
in
sub
dec
data16
cmc
push
xchg
push
mov
scas
push
lods
ins
push
push
mov
or
cmp
adc
in
add
push
inc
xchg
sar
addr16
mov
adc
cmp
mov
sub
adc
test
out
add
sub
and
dec
lds
xchg
call
loope
push
xchg
adc
jmp
or
lahf
jbe
data16
mov
dec
add
adc
test
in
pop
jmp
cdq
std
sbb
sbb
stos
add
push
xor
pop
add
cmp
cli
sti
jl
cmp
es
mov
dec
or
or
mov
aad
sub
jg
push
push
sbb
adc
icebp
and
inc
pop
or
dec
cmps
ins
jecxz
jge
out
mov
add
cmp
and
ins
test
out
pop
or
push
fist
sbb
pop
lea
lods
or
data16
shr
dec
adc
mov
mov
nop
stos
xchg
dec
push
cmc
or
pop
test
dec
inc
xchg
ss
or
daa
dec
mov
fdivr
cmp
add
inc
mov
add
inc
fist
cld
cmps
inc
inc
mov
and
xchg
jg
int3
jmp
and
xchg
xchg
jge
add
jmp
ficom
xchg
jle
daa
js
les
out
adc
mov
sub
inc
call
test
inc
and
dec
mov
or
push
mov
les
sar
add
push
movs
inc
int
push
sub
aam
adc
clc
push
cmp
loop
pop
in
bound
sub
jmp
inc
inc
sbb
inc
in
mov
xor
shr
xchg
mov
and
clc
add
xchg
push
xor
test
adc
fild
adc
add
pusha
jmp
push
iret
adc
adc
pop
aaa
add
pop
in
fnstenv
sbb
xor
lods
jl
mov
sbb
adc
lds
or
retf
push
mov
mov
and
shl
sar
call
fstp
or
xchg
push
or
pop
add
adc
or
jmp
into
mov
mov
jg
adc
scas
adc
lods
(bad)
test
shl
xor
inc
add
pop
and
jae
add
jmp
or
or
push
gs
adc
add
inc
adc
ja
dec
fbld
cmp
and
js
mov
xor
xor
push
inc
dec
xor
inc
xor
out
nop
les
or
dec
cmp
call
xchg
out
pop
popa
int
fnstcw
inc
push
dec
mov
xchg
add
scas
call
cmp
test
rol
enter
mov
in
xor
dec
dec
mov
pop
jge
fdivr
rol
add
xor
jo
hlt
shl
popf
imul
or
mov
or
icebp
addr16
pop
js
jl
inc
mov
stc
jl
xor
mov
xchg
sub
leave
(bad)
iret
fs
pusha
stc
icebp
in
push
jg
ins
ins
ins
inc
mov
cmps
call
sub
push
or
adc
push
adc
mov
not
(bad)
or
push
jno
jge
cmp
push
push
outs
pop
neg
jmp
push
mov
mov
sbb
add
pop
push
lock
lea
test
dec
xor
sbb
loopne
jmp
aad
pop
out
add
push
jecxz
mov
dec
push
pop
pop
arpl
inc
dec
push
xchg
xor
pop
call
mov
(bad)
cld
mov
push
test
xchg
fimul
cmp
iret
xor
shl
adc
push
rcr
push
call
and
adc
jmp
push
mov
mov
adc
add
(bad)
mov
sbb
pop
mov
adc
sub
mov
mov
fwait
pop
jecxz
cli
push
inc
outs
mov
hlt
sub
iret
adc
inc
dec
sub
loope
ficomp
jg
call
stos
sub
adc
aam
call
jne
and
ror
add
sub
or
jmp
test
sbb
inc
and
inc
jmp
dec
imul
aaa
call
cld
and
mov
push
pop
out
sbb
jg
inc
push
add
in
push
cmp
pop
push
pop
outs
movs
sahf
dec
push
(bad)
scas
xchg
or
mov
xor
inc
cmp
test
nop
shl
or
dec
inc
loope
add
ret
or
cmp
xlat
aaa
movs
cmp
mov
sub
cmp
ins
sub
or
les
shl
cmp
or
mov
mov
jmp
in
and
sbb
and
xor
push
mov
jo
pop
push
push
jmp
adc
es
mov
jle
dec
(bad)
or
outs
jno
ds
std
dec
add
jmp
and
fcomp
sub
lods
bound
fist
int3
shl
dec
fcomp
pop
cmp
or
xchg
cdq
add
scas
movsx
cmp
mov
adc
xor
dec
fadd
ins
pop
lds
xor
jl
xchg
mov
fs
and
pop
dec
xor
or
loope
je
pop
movs
jmp
jle
adc
fst
xor
cmp
jne
(bad)
and
mov
js
pop
jbe
push
cli
pop
dec
into
inc
nop
jno
cdq
push
inc
cmp
xor
or
cmp
dec
stc
popa
fist
push
adc
dec
jo
xchg
cmc
out
rol
mov
mov
pop
cmp
inc
mov
dec
aas
adc
xchg
mov
xor
cmps
and
js
or
cmp
push
push
mov
xor
and
sub
inc
cli
mov
push
inc
retf
sub
adc
gs
jb
into
sub
fs
sbb
sahf
sub
dec
jg
sub
pop
stos
sub
cmp
stos
pusha
(bad)
fild
push
pop
adc
je
xchg
fs
and
ucomiss
(bad)
loope
enter
dec
jmp
mov
or
inc
test
hlt
sbb
push
sub
hlt
push
dec
bound
dec
sahf
cmp
xor
lock
in
lock
fcom
ins
pop
mov
and
adc
pop
push
cmp
mov
int3
popf
or
or
add
pop
lods
cmp
mov
cmp
fxch
sbb
sti
js
shl
jne
xor
repnz
les
sub
jne
jae
push
or
pop
int
call
test
sub
jne
lock
fwait
shr
in
in
jecxz
in
in
fs
fisttp
ins
pop
lds
imul
sbb
fs
arpl
test
sub
in
dec
jae
std
sbb
and
and
push
pop
clc
push
dec
neg
cmp
jb
ja
test
dec
(bad)
jmp
rep
adc
push
bound
push
or
mov
in
adc
adc
clc
mov
lds
jae
and
clc
adc
je
inc
inc
push
cmp
cmp
shl
mov
cmp
rcl
shl
cmp
mov
push
add
pop
ss
loop
aam
or
sbb
rcr
rcl
ja
pop
out
rcl
lods
cwde
adc
rcr
mov
and
sbb
jg
mov
inc
inc
adc
push
(bad)
fstp
mov
jge
icebp
ror
adc
pushf
sbb
or
mov
movs
adc
fcom
sbb
adc
adc
mov
cdq
add
adc
arpl
lea
cmp
(bad)
or
inc
stos
fdivr
adc
retf
mov
sar
dec
dec
lea
jg
sbb
push
call
sbb
inc
test
(bad)
ffreep
add
ja
call
les
jne
fisttp
and
ret
xchg
mov
xchg
xchg
shr
sti
pop
xor
push
lds
fist
cmp
fadd
xchg
sbb
add
jo
mov
dec
stos
and
xchg
mov
mov
xchg
mov
ret
sbb
adc
and
cmc
sbb
fldz
fstp
sub
fst
inc
or
mov
jb
popa
push
lods
test
xor
fstp
or
clc
jmp
popf
jns
and
jge
mov
xor
mov
or
and
jg
jmp
(bad)
stc
mov
cmp
add
jmp
mov
mov
mov
adc
and
pop
call
mov
push
sti
adc
push
xchg
push
(bad)
bnd
shr
enter
jnp
sub
dec
ins
inc
add
das
mov
dec
test
imul
(bad)
xchg
mov
mov
mov
sub
or
dec
mov
jne
push
mov
in
and
aaa
rcr
test
pop
or
push
and
xor
push
adc
jle
jmp
dec
jmp
xor
mov
and
loopne
sub
or
fisub
dec
push
pushf
ja
stos
fwait
jmp
sub
mov
lds
sahf
xchg
clc
mov
adc
jmp
mov
mov
xlat
scas
adc
and
dec
mov
jbe
sub
or
add
or
je
jmp
cdq
mov
lods
jmp
add
repz
sub
jmp
mov
fcomi
shl
xchg
in
cli
fisttp
mov
bswap
sub
(bad)
cmp
sbb
sti
cli
nop
sub
ror
sub
addr16
or
mov
das
popa
pop
je
test
fld
jge
cli
and
mov
sub
ficom
xchg
in
jae
push
sti
retf
adc
push
es
fdiv
push
mov
test
lea
js
mov
bound
cmc
fisubr
ror
test
dec
imul
int
repnz
cmp
push
(bad)
jmp
sbb
test
hlt
stc
push
int
mov
loopne
jg
xchg
int3
int3
in
retf
sub
sub
push
les
lea
ins
pop
movs
lea
out
xor
or
repz
stos
or
jne
pop
outs
cmps
mov
inc
jb
(bad)
jmp
mov
mov
push
(bad)
scas
(bad)
dec
sbb
jecxz
ror
fcomp
loop
fdiv
retf
sbb
pop
mov
cmc
fiadd
adc
xor
sahf
pop
add
adc
inc
pusha
ds
fs
rcl
pop
in
or
push
and
and
xchg
ss
fdiv
(bad)
repnz
aam
add
loope
das
ret
enter
inc
ret
pop
popa
jl
push
cld
and
pop
iret
inc
pop
test
shl
popa
stos
add
pop
(bad)
in
push
outs
and
test
xor
cmp
sbb
push
cmp
ss
dec
pop
test
idiv
push
mov
in
sahf
push
repnz
dec
retf
imul
inc
push
mov
cmp
fcom
rcr
jns
cmp
imul
fucompp
lds
pop
leave
mov
lea
scas
jecxz
adc
adc
gs
out
pop
cmp
mov
lods
popf
test
mov
int
test
inc
xchg
lahf
(bad)
idiv
mov
adc
or
repz
aam
sbb
imul
jae
sbb
call
sbb
enter
sar
sbb
std
inc
xchg
jb
adc
aas
mov
icebp
dec
retf
fwait
jle
jmp
cmp
dec
jmp
out
or
adc
inc
mul
and
out
cmc
and
add
sbb
das
dec
sbb
sbb
xor
add
enter
or
jle
fsub
push
lods
jno
pop
popa
int3
add
sub
xchg
adc
in
nop
sbb
adc
xchg
inc
adc
rol
out
pop
or
mov
je
cmp
sbb
add
xchg
and
movs
pop
scas
ja
add
test
cmps
xchg
mov
add
xchg
or
adc
movs
mov
dec
fadd
add
in
daa
int3
dec
out
sbb
push
std
sub
ss
dec
and
push
fisttp
aaa
or
leave
mov
sbb
xor
push
outs
repz
sub
hlt
xchg
xchg
sub
mov
or
sti
sbb
or
add
hlt
jb
or
pop
xor
std
mov
cmp
lea
in
dec
mov
mov
sub
inc
adc
jl
call
push
inc
sub
adc
mov
mov
xchg
or
or
xchg
dec
jmp
pop
or
cmps
ins
adc
ror
mov
(bad)
jle
cwde
out
cmp
xor
sbb
(bad)
and
je
or
fsubr
fwait
push
leave
jle
xor
ret
stos
jb
sar
test
sub
jp
dec
jge
fcomp
or
and
popf
xor
and
add
cdq
jp
jle
(bad)
iret
ds
xchg
retf
pop
and
mov
dec
and
xor
dec
sti
add
fist
push
inc
and
cmp
inc
adc
add
mov
or
fadd
pop
cmp
and
loop
cmp
in
pop
dec
nop
ss
cs
mov
add
jne
add
test
retf
mov
leave
jecxz
and
jne
jmp
xchg
push
push
add
inc
sbb
stos
icebp
in
call
push
dec
retf
cmps
inc
aad
mov
jge
dec
or
inc
mov
lea
mov
ret
sbb
adc
pusha
adc
std
sahf
and
mov
adc
jae
sub
inc
mov
sti
add
xor
fdiv
test
ja
fisub
jmp
mov
je
scas
call
(bad)
icebp
mov
loopne
cmp
sar
and
mov
jb
add
(bad)
cmp
and
mov
and
movs
and
add
jbe
add
jne
adc
sti
push
push
push
or
jmp
ja
enter
adc
adc
sbb
adc
pop
iret
add
clc
jno
mov
cld
xor
push
movs
jo
sahf
test
xchg
retf
cmp
adc
jno
and
jno
push
mov
fdiv
mov
retw
push
dec
dec
inc
imul
pop
sub
inc
call
or
adc
mov
int
dec
dec
jbe
cmp
inc
lds
push
cdq
cld
mov
dec
test
push
mov
add
int3
(bad)
bound
lock
(bad)
mov
nop
movs
push
pop
sbb
sbb
std
jno
test
push
nop
pushf
xor
push
push
mov
lods
jbe
mov
mov
xor
push
mov
or
idiv
popf
jg
and
jl
push
popf
cld
aaa
int3
cmovb
xor
pop
xchg
push
adc
int
seto
dec
push
or
jg
inc
or
mov
std
jg
and
(bad)
xchg
or
jp
sub
pop
adc
mov
sbb
mov
lock
sahf
sub
sbb
sbb
add
jmp
mov
fcmovbe
movs
nop
icebp
pop
sub
ins
pop
add
mov
and
js
mov
enter
(bad)
popf
adc
pop
and
cmp
(bad)
mov
adc
cmps
adc
outs
addr16
into
mov
jecxz
(bad)
adc
adc
popa
jl
shl
adc
sbb
jne
in
sbb
mov
mov
push
mov
enter
pop
sbb
lods
sub
sbb
lods
lods
jge
mov
mov
retf
(bad)
std
push
dec
jo
xor
test
ins
sub
and
pop
adc
sar
inc
jae
jmp
mov
stos
and
shl
add
lea
shl
fs
cmp
fmul
ins
mov
pop
push
xchg
rol
test
mov
add
inc
ins
inc
jmp
adc
pop
push
sar
push
enter
cs
add
xchg
int3
retf
hlt
jmp
jmp
or
mov
xor
push
and
repz
add
pop
xlat
(bad)
jmp
lea
inc
in
in
cmc
or
sub
ja
lea
xchg
rcl
das
sbb
ror
ins
stos
loope
int
dec
ins
adc
hlt
in
sub
add
or
pop
(bad)
pushf
mov
(bad)
fs
movs
div
xchg
push
push
xchg
out
test
mov
mov
cmc
mov
(bad)
adc
inc
sub
sbb
push
jnp
(bad)
sub
(bad)
adc
xor
jmp
test
inc
dec
stc
out
push
inc
or
loopne
stos
mov
mov
fs
or
sbb
jb
dec
or
out
push
or
inc
lds
or
in
inc
loopne
mov
mov
out
dec
std
xor
mov
sbb
or
xor
xchg
xor
mov
jecxz
mov
sahf
adc
stos
imul
enter
std
sub
inc
cmc
push
push
cli
pop
adc
je
ja
fcmovnu
jmp
jg
mov
jbe
xchg
pop
sbb
fadd
in
ja
or
lock
jg
mov
inc
cld
mov
add
rcr
inc
sub
cmps
call
movs
(bad)
jg
in
in
or
ins
test
mov
and
lods
out
xchg
aam
sbb
cmc
mov
dec
or
or
jnp
push
inc
jmp
dec
sub
dec
sbb
stos
sbb
cmps
ds
add
mov
sub
pusha
mov
mov
gs
sub
fisttp
add
ins
bound
mov
fisttp
jmp
sub
iret
sbb
inc
nop
fldcw
dec
lea
jecxz
dec
push
movs
jns
fsubr
mov
test
test
in
and
sbb
jp
sbb
xor
push
nop
(bad)
mov
ss
or
iret
and
lods
jge
jae
cmp
rcl
adc
push
sub
and
jne
push
lea
je
mov
push
in
fild
dec
sub
jmp
mov
jmp
adc
rcr
add
or
inc
pop
xchg
mov
cld
adc
nop
mov
and
imul
stos
pop
add
xchg
imul
inc
movs
and
call
sahf
push
push
gs
test
int3
mov
fldenv
arpl
adc
aam
mov
hlt
cmp
hlt
jmp
add
push
adc
mov
mov
mov
add
loope
xor
ret
xor
xchg
xchg
or
mov
fisttp
jge
dec
je
adc
imul
push
sub
mov
push
dec
and
sar
bound
dec
es
jne
add
sti
std
xchg
test
sbb
sahf
out
sbb
ds
dec
xchg
mov
push
and
popf
inc
mov
(bad)
inc
repz
stos
and
adc
pop
stos
or
inc
icebp
sub
fldenv
push
xchg
in
dec
mov
test
push
cmp
push
pop
mov
push
xchg
ja
jb
sub
idiv
out
adc
sbb
sbb
adc
jmp
pop
mov
adc
inc
in
call
jmp
mov
ficom
jmp
push
arpl
mov
and
fdivp
ret
inc
int
pop
rcl
jmp
mov
dec
in
push
dec
pusha
stos
ins
movs
pop
mov
and
add
in
or
sbb
inc
call
push
cld
outs
out
mov
and
ds
addr16
add
inc
iret
jecxz
cmp
repnz
jecxz
cmp
daa
or
sbb
or
clc
jmp
repnz
mov
retf
mov
or
test
jg
and
adc
test
cld
fiadd
fcos
call
dec
sub
add
cpuid
ja
stos
inc
or
and
arpl
adc
imul
push
dec
lea
push
sti
inc
mov
mov
xchg
sub
(bad)
push
lea
inc
stos
test
jb
cmp
fs
push
dec
and
(bad)
push
pop
cmps
in
or
cmp
iret
push
adc
mov
add
lods
(bad)
push
sbb
ja
dec
fadd
add
icebp
lahf
dec
outs
or
hlt
add
mov
jp
adc
inc
mov
mov
inc
push
or
in
or
inc
add
adc
inc
add
mov
stc
dec
xchg
push
push
or
xchg
dec
xchg
ja
in
clc
stos
ja
sbb
inc
adc
int3
loop
sbb
sbb
rol
jo
sbb
sub
jmp
xchg
mov
sub
sub
xor
and
shl
or
stos
inc
rcl
jp
mov
clc
sahf
movs
loop
or
push
iret
enter
cmc
pop
sbb
in
dec
mov
test
(bad)
and
push
push
in
movs
inc
scas
sbb
sub
dec
jae
sbb
dec
push
int3
es
and
jo
test
and
and
push
push
sub
cmc
dec
mov
and
in
and
jno
pop
push
adc
push
ins
in
xchg
add
inc
loop
jo
pop
fld
and
sahf
cld
xchg
dec
push
lods
adc
add
add
cmp
call
jne
sbb
ins
push
leave
sbb
shl
sbb
xchg
mov
add
mov
and
push
dec
cmp
cmp
dec
je
data16
mov
retf
adc
pushf
test
jle
test
fst
inc
test
or
mov
dec
mov
mov
jmp
fcomp
cmp
inc
mov
push
push
dec
call
add
ins
test
push
push
mov
xor
fwait
aad
dec
pop
jge
sbb
dec
movs
or
sbb
inc
push
fstp
xchg
xchg
mov
or
rcl
add
retf
push
nop
mov
cmp
and
loopne
dec
aas
push
repz
push
mov
push
sub
outs
jmp
jmp
sbb
sar
and
fld
ret
js
movs
mov
mov
test
push
aad
or
aam
pop
(bad)
mov
dec
inc
cmp
mov
jg
dec
nop
push
test
leave
cld
fcom
(bad)
dec
cmp
cdq
or
mov
xor
xor
icebp
jae
add
sti
sbb
(bad)
jmp
unpckhps
stos
data16
movs
xchg
mov
sbb
add
sbb
adc
jb
cmp
push
ret
xchg
into
xor
and
rcl
and
add
inc
sti
or
dec
dec
fisttp
dec
cld
jno
imul
daa
cmps
imul
add
call
or
mov
xor
adc
cwde
mov
ret
ret
into
pop
inc
std
xor
push
cmc
aaa
loop
inc
test
xlat
cmovb
xor
mov
bound
sub
imul
pinsrw
sub
sahf
daa
hlt
push
dec
imul
test
daa
mov
(bad)
das
xchg
sbb
imul
mov
xor
push
cmp
into
dec
mov
lock
adc
dec
sub
xor
sbb
push
mov
jns
xchg
popa
dec
sbb
xchg
or
push
repz
push
or
xchg
mov
sbb
or
xchg
loopne
pop
mov
shl
imul
and
fcom
xchg
ret
inc
fisttp
shr
push
push
and
push
cmp
sub
sti
pop
cmc
push
inc
pop
dec
sub
mov
xchg
cmc
scas
xchg
or
fwait
mov
out
into
push
and
push
out
dec
pushf
sub
das
aam
adc
xor
cmp
mov
add
rcl
shr
cmp
int
dec
ja
jb
aaa
mov
ins
and
push
mov
push
xchg
cmps
dec
cdq
pop
adc
adc
lock
mov
movs
clc
fwait
jmp
inc
add
dec
sbb
mov
sub
jno
xor
push
adc
dec
inc
jnp
int
and
retf
in
xchg
mov
mov
fdivr
mov
sub
push
sub
mov
(bad)
xor
lods
fwait
imul
stos
mov
mov
int3
sub
inc
loopne
and
das
pop
fwait
or
xchg
ret
push
mov
jae
ins
fmul
mov
mov
add
cwde
add
mov
aam
mov
lods
dec
mov
fwait
data16
push
imul
sti
(bad)
cwde
adc
scas
ja
jns
int3
cmp
xor
inc
dec
dec
dec
push
cmc
ins
sbb
imul
adc
and
push
mov
aas
out
pop
mov
inc
test
movs
je
movs
inc
push
mov
mov
(bad)
mov
cmp
sub
adc
dec
and
lahf
add
int3
ds
and
stos
inc
add
mov
xchg
inc
jno
add
or
pop
mov
and
into
push
sti
push
out
adc
leave
inc
jge
gs
call
adc
lea
sub
(bad)
les
scas
cdq
mov
push
ret
and
push
or
ins
and
sub
fcmovnbe
inc
jg
or
push
adc
mov
and
ret
mov
xchg
icebp
jb
sub
icebp
inc
pop
jge
out
add
push
pusha
sub
mov
mov
out
leave
sub
or
cdq
mov
es
or
hlt
cwde
mov
push
adc
pop
mov
ins
mov
and
or
add
xor
imul
sbb
sbb
cmps
arpl
push
pop
push
mov
jnp
fcomp
adc
inc
mov
mov
and
xchg
nop
fwait
retf
inc
fist
push
jg
fistp
inc
or
sub
dec
fwait
ret
fs
(bad)
or
add
ins
dec
push
sub
mov
dec
pop
mov
push
push
dec
or
inc
cmp
or
cmp
push
cmp
xchg
sbb
or
lods
xor
sbb
cmp
setne
mov
add
rol
mov
push
je
mov
je
add
mov
add
loopne
mov
mov
add
xor
xor
addr16
lock
add
mov
in
inc
inc
mov
pop
adc
daa
inc
bswap
lea
popf
jne
or
rol
std
std
dec
in
addr16
xchg
xor
jo
mov
or
stos
cld
push
je
aaa
push
cmp
and
push
adc
and
test
mov
sbb
cmp
retf
sub
adc
out
cmp
clc
sub
(bad)
jmp
add
aas
add
push
mov
ds
and
dec
and
iret
mov
int3
outs
push
retf
jnp
mov
push
fdiv
push
inc
jo
and
jb
xor
into
in
sbb
icebp
mov
aam
mov
ja
jne
pop
cmp
ror
or
inc
stos
push
addr16
loope
or
data16
mov
adc
xor
add
cld
jmp
inc
leave
push
pop
pop
pop
xchg
int3
inc
stos
jg
adc
push
xchg
jne
imul
mov
mov
jnp
inc
addps
loop
les
push
adc
cmp
rcl
sbb
cmps
inc
xchg
(bad)
mov
dec
out
add
dec
xlat
fbld
inc
mov
jle
push
sbb
or
add
jo
dec
inc
(bad)
xchg
xor
shr
jle
or
push
gs
and
pop
jno
and
push
sbb
ins
adc
gs
xchg
inc
or
les
(bad)
in
out
sbb
cld
adc
mov
push
lods
or
mov
sar
dec
ins
inc
mov
popa
loope
cmps
and
test
dec
nop
mov
jne
ins
dec
mov
mov
rcr
fisttp
cmc
lods
mov
lods
mov
retf
or
push
je
add
inc
adc
mov
mov
push
ds
fcomp
sbb
sbb
popf
add
add
mov
inc
push
aam
inc
int3
xchg
mov
enter
xchg
pop
sahf
mov
loopne
mov
mov
stos
pop
mov
mov
rol
movs
xor
loop
mov
(bad)
or
push
scas
movs
dec
ficom
xchg
ror
sbb
sub
into
test
sub
dec
adc
sbb
adc
lar
mov
sub
scas
adc
xchg
mov
mov
push
add
dec
hlt
fidivr
cmp
and
lods
inc
stos
nop
add
mov
dec
nop
add
add
jge
sub
add
inc
(bad)
sti
xchg
xchg
or
fs
sbb
xor
(bad)
mov
mov
div
ret
pop
mov
jb
nop
or
dec
mov
sbb
call
dec
add
mov
ss
jge
(bad)
pop
or
push
cmp
or
or
push
fist
stos
inc
mov
retf
iret
(bad)
int3
jne
mov
dec
test
cwde
aaa
mov
icebp
test
lahf
pushf
dec
les
mov
jbe
or
adc
add
ret
inc
cmp
dec
fs
ds
mov
sub
rcr
dec
pop
fwait
and
push
iret
das
dec
lock
jmp
cwde
pop
xor
jb
pop
or
outs
push
icebp
dec
retf
sbb
adc
cli
movs
xor
stos
jo
jnp
mov
mov
(bad)
push
sub
push
cmp
je
inc
jle
cdq
sbb
or
retf
add
and
jae
inc
or
cdq
push
out
or
xor
in
outs
rcl
jmp
test
mov
sub
ret
in
retf
push
sub
lods
imul
xor
jmp
ror
add
mov
inc
paddw
aad
pop
cdq
xor
xor
and
push
test
mov
or
add
pop
dec
sub
mov
mov
(bad)
fisubr
xor
enter
mov
mov
daa
push
inc
mov
mov
or
or
test
sub
ins
or
fist
mov
shl
push
or
repz
pop
mov
sub
dec
sbb
add
dec
ds
xor
adc
cmp
outs
in
sbb
mov
or
add
hlt
fimul
adc
fist
or
mov
mov
pop
and
test
pop
pop
adc
imul
xchg
loopne
push
mov
call
int3
push
pushf
leave
imul
mov
mul
test
imul
cmps
imul
fist
ss
bound
clc
inc
jbe
add
sbb
inc
adc
adc
ret
lahf
add
push
mov
adc
sar
stc
mov
push
dec
ret
pop
adc
xchg
jb
sbb
adc
and
lods
into
pop
rcl
cmp
adc
cld
push
stos
jge
(bad)
inc
mov
cmp
fstp
cmc
push
or
data16
pop
mov
ror
adc
jne
cmp
clc
hlt
int3
inc
ja
add
movs
lahf
lahf
out
lock
sbb
ins
cmp
adc
imul
loopne
sub
in
inc
test
mov
je
cld
add
lea
in
pop
(bad)
mov
jecxz
dec
dec
mov
mov
fild
lock
adc
mov
test
gs
mov
ins
dec
hlt
jl
retf
stos
push
enter
jl
sar
lods
test
xor
add
push
sub
jge
add
test
(bad)
outs
mov
or
pusha
clc
repz
xchg
push
and
sbb
dec
and
mov
pop
cmp
cmp
arpl
or
test
sub
repnz
sub
jo
bswap
push
or
push
mov
mov
jae
inc
or
dec
(bad)
push
pop
cmp
add
and
push
test
jmp
xchg
jae
lock
add
dec
pop
prefetch
inc
call
inc
push
pop
adc
and
dec
sub
les
add
fmul
cmps
push
inc
xchg
mov
push
mov
dec
and
neg
sbb
cmp
ss
and
test
dec
jg
inc
imul
ins
sub
jb
mov
mov
mul
call
mov
in
mov
adc
add
push
sbb
xchg
and
and
adc
jne
(bad)
inc
test
arpl
push
sub
sub
or
xchg
sbb
mov
add
cld
dec
rcr
mov
inc
daa
and
add
mov
inc
ficom
add
sahf
or
adc
mov
and
dec
or
je
sub
mov
cmp
and
jns
add
add
push
push
cmp
test
ret
push
clc
push
mov
push
inc
sti
sub
adc
dec
(bad)
ins
mov
test
xor
jae
push
push
sbb
stc
and
cwde
or
loopne
push
scas
or
inc
movs
inc
add
push
shl
add
ja
push
push
dec
(bad)
(bad)
jg
adc
jecxz
jmp
pusha
scas
stos
pop
xor
push
xchg
xchg
or
jge
adc
in
cmp
mov
test
add
sub
or
cmp
mov
add
call
adc
push
inc
xor
add
sbb
sar
in
cmp
clc
sbb
push
pop
(bad)
clc
fist
jnp
ins
in
stos
ins
jmp
mov
and
push
adc
pop
nop
dec
inc
shl
or
ret
and
inc
ror
dec
loopne
push
inc
mov
push
cwde
ror
add
lea
push
xchg
mov
sar
(bad)
ror
ins
pop
push
scas
push
lahf
push
call
popf
inc
and
dec
cmp
xchg
lods
mov
lahf
jb
retf
movs
or
in
repz
and
add
jo
das
std
pop
ins
(bad)
inc
aas
idiv
(bad)
jl
adc
jbe
cmp
cmc
mov
push
and
ins
(bad)
(bad)
sbb
cmp
xchg
mov
hlt
and
shr
ret
adc
or
adc
mov
sbb
adc
pop
xchg
inc
and
daa
mov
mov
arpl
lods
cwde
mov
inc
(bad)
sub
pop
xor
push
inc
inc
dec
sbb
adc
xchg
lea
dec
jp
loopne
pop
xchg
fsub
mov
mov
mov
sub
repz
stc
jecxz
xchg
and
fistp
call
cmc
iret
out
fcomp
dec
push
or
mov
movs
aam
(bad)
imul
retf
jg
cmp
out
or
test
shr
xor
xlat
jmp
adc
or
dec
sbb
pop
loopne
mov
jmp
ins
mov
inc
movs
jnp
(bad)
sbb
pop
stos
push
or
or
lock
dec
push
adc
inc
retf
add
mov
and
xchg
adc
pop
cmps
or
dec
xchg
adc
add
les
mov
xchg
call
jbe
popf
mov
loop
pop
(bad)
lods
lods
pushf
pop
out
add
add
rol
dec
add
loope
and
dec
bound
push
push
add
(bad)
mov
outs
rcl
push
adc
inc
mov
jb
sbb
mov
mov
cmp
mov
pushf
popf
xchg
xchg
and
adc
add
xor
push
ret
jns
mov
push
scas
push
stmxcsr
sub
sbb
xchg
fnstcw
mov
out
push
and
clc
jg
fs
bound
add
movd
sub
mov
popa
sbb
jle
test
adc
rcl
retf
adc
dec
cmp
xor
xor
sbb
ret
(bad)
retf
test
ret
sub
jnp
mov
je
and
dec
adc
adc
mov
pop
ds
xor
mov
xor
dec
jo
mov
ret
push
(bad)
loope
and
ins
mov
addsd
pop
push
xor
add
sub
push
sti
sub
pop
iret
inc
or
mov
imul
add
inc
scas
ja
fmul
push
inc
add
ins
xor
stos
push
inc
(bad)
mov
pusha
xchg
pop
pop
sbb
pusha
rcl
mov
stos
ins
js
je
add
je
xchg
iret
shl
in
xchg
or
addr16
inc
in
leave
ret
mov
mov
add
jp
xchg
pop
je
jno
into
fsub
lock
fldenv
sub
sbb
jl
adc
ins
mov
mov
add
sar
(bad)
sbb
icebp
add
adc
outs
ror
sbb
pop
neg
fisubr
test
sub
out
sbb
les
xchg
cmp
pop
push
hlt
mov
sbb
cmp
lahf
mov
inc
xor
add
cmp
jb
sbb
inc
sbb
jb
adc
neg
xor
loopne
ror
sbb
test
rcl
and
add
rep
or
mov
jmp
mov
dec
test
ret
dec
or
adc
and
inc
fistp
ja
popa
cmc
adc
rol
adc
cmps
out
sub
mov
nop
mov
jl
test
or
add
das
inc
popf
dec
inc
bound
movs
xor
xchg
rcl
leave
and
push
cmp
cmp
mov
adc
cmp
ret
add
or
push
ds
dec
shr
adc
int3
mov
xor
jmp
pop
cmp
cmp
cmp
cmp
sbb
pop
(bad)
mov
and
cmp
jmp
in
mov
test
cmps
adc
mov
add
xchg
pushf
mov
push
movs
xchg
mov
aam
xchg
push
out
div
xor
add
xor
pusha
sar
sbb
ja
ss
call
sub
jmp
(bad)
int
adc
arpl
add
pusha
inc
clc
push
xor
test
int3
jmp
fwait
in
dec
test
dec
adc
mov
or
dec
ror
pop
inc
push
sbb
call
cmps
dec
popa
mov
cmp
push
or
ins
push
add
inc
inc
push
(bad)
loopne
add
and
mov
sbb
and
les
add
or
or
sti
dec
jo
pop
cld
add
cmp
leave
add
mov
push
shr
mov
icebp
jle
movzx
and
add
jns
mov
push
cmp
mov
xchg
cmps
xchg
add
push
mov
dec
pop
sbb
or
pop
sub
sbb
test
or
pushf
sub
(bad)
jmp
cmp
push
and
jmp
icebp
push
enter
pop
addr16
cmp
mov
icebp
jg
add
(bad)
mov
push
sbb
sbb
push
or
or
jge
retf
and
sbb
push
add
(bad)
mov
xor
sbb
jbe
mov
add
mov
add
adc
mov
mov
dec
or
sub
je
sbb
push
or
test
dec
es
inc
push
clc
sbb
test
in
or
cmp
cli
pop
dec
lods
or
call
xchg
and
adc
add
dec
add
sub
sub
sub
sub
in
jmp
movs
icebp
inc
(bad)
std
int3
dec
or
out
pop
inc
add
in
sbb
lods
adc
sbb
xchg
xor
in
sub
xchg
lea
icebp
xchg
sahf
cld
int3
fsubr
sbb
jne
pop
sub
mov
adc
sub
sub
mov
cmp
pop
loope
nop
mov
cmc
cmp
pop
mov
movs
push
cld
cld
jmp
ret
pop
adc
sbb
fs
lahf
out
pop
sub
mov
sub
jne
popf
add
inc
sbb
mov
ret
and
cdq
mov
es
sahf
(bad)
push
call
push
or
jmp
repz
adc
jecxz
aas
adc
sbb
or
mov
push
jno
gs
add
adc
sub
push
psubd
popa
cmp
jmp
out
sbb
lock
cmp
sbb
sbb
adc
das
jne
jno
lahf
std
jno
inc
adc
js
stc
pop
pop
or
or
jno
hlt
(bad)
sub
add
movs
fcomip
aas
outs
sbb
xchg
sbb
jae
adc
mov
adc
or
clc
call
or
iret
add
call
ret
icebp
jno
push
test
sbb
push
push
jp
fwait
mov
(bad)
jecxz
adc
xor
mov
(bad)
clc
push
or
(bad)
pop
out
push
push
mov
add
cmp
icebp
adc
jno
hlt
sbb
push
cld
mov
adc
cli
jecxz
adc
pinsrw
cmp
loope
or
jno
(bad)
hlt
pop
pop
xchg
xor
jl
icebp
pop
cmp
je
add
ror
fsubr
cmp
xor
add
xchg
lock
lahf
add
inc
lock
and
add
loope
sub
stc
xchg
and
push
xchg
mov
xchg
sub
xchg
xchg
stos
xchg
xlat
xchg
add
push
xchg
inc
xchg
pop
xchg
loope
xchg
mov
ss
jo
sbb
bound
setbe
xchg
push
xchg
loope
cwde
rcl
aad
adc
cwde
sbb
adc
push
mov
ins
pop
mov
dec
lock
dec
(bad)
xchg
enter
repnz
int3
lock
aad
mov
inc
inc
lock
or
mov
add
data16
aaa
movs
test
cmp
adc
adc
lock
shl
daa
jb
sub
xor
arpl
and
loopne
xor
xor
add
mov
and
fwait
into
mov
xchg
or
sbb
xor
mov
mov
sub
cmp
lea
stc
pop
cmp
sbb
push
hlt
test
jne
xchg
sub
movs
and
enter
pushf
or
dec
adc
add
cwde
cld
xor
sbb
ins
push
cld
add
fiadd
test
jb
rcl
jp
push
add
ret
and
pop
inc
adc
sub
lods
fiadd
jmp
push
sub
ds
sub
imul
jge
push
movs
mov
add
mov
xor
xchg
rcr
movs
or
adc
xchg
and
call
dec
fucomip
test
or
add
(bad)
dec
jmp
push
mov
mov
jne
in
je
mov
xchg
lods
(bad)
push
stc
cli
call
pop
fs
popa
je
cmp
ret
push
mov
loopne
jne
inc
rcr
clc
mov
std
jne
test
jns
cld
loopne
loop
(bad)
mov
and
in
mov
aam
xchg
mov
(bad)
fdivr
or
dec
rcr
iret
loopne
je
fcomp
ret
xor
adc
push
pushf
push
sub
call
mov
in
test
fadd
cmp
nop
js
mov
push
sbb
push
nop
(bad)
xchg
ins
pop
pushf
rol
mov
mov
mov
jmp
add
ret
mov
mov
adc
cmp
mov
jb
add
movq
fiadd
stc
pop
rcr
xchg
in
loope
lahf
daa
push
or
xor
adc
dec
mov
jne
inc
fsub
jb
fild
sub
inc
or
mov
xchg
push
adc
fimul
outs
sbb
adc
dec
dec
adc
(bad)
cmp
cmp
arpl
fadd
inc
fst
pop
loopne
push
dec
fldenv
mov
push
mov
in
enter
jbe
lock
jp
call
or
clc
gs
loope
mov
xor
mov
out
sub
movs
adc
aaa
adc
adc
retf
adc
mov
cmp
sbb
int
mov
push
xor
sub
or
mov
(bad)
loopne
dec
adc
call
add
dec
mov
loopne
push
aas
adc
hlt
fdiv
dec
cmp
push
mov
call
loopne
xor
inc
sti
inc
mov
ret
cmp
dec
add
jnp
and
fisubr
push
add
mov
xchg
dec
imul
push
cmp
or
retf
sub
sub
push
mov
out
xor
jl
mov
cdq
or
cmps
rol
out
test
hlt
sub
sub
xchg
inc
dec
xchg
push
sbb
xchg
ins
stos
or
in
in
fisub
cli
push
mov
adc
retf
jne
nop
mov
fstp
jge
mov
nop
xor
mov
xchg
and
mov
push
clc
icebp
inc
mov
mov
jmp
retf
dec
enter
cli
mov
int3
aas
jo
call
xchg
mov
pusha
add
and
push
or
fwait
dec
jno
(bad)
retf
sub
ss
pop
push
jle
and
fdivr
sbb
mov
mov
adc
adc
leave
jl
dec
ds
mov
lds
push
pop
sar
mov
add
addr16
xor
fistp
xor
dec
xchg
into
push
lea
call
call
add
repnz
add
and
call
cmp
or
call
jno
xchg
sub
jne
mov
xchg
adc
xor
cmp
or
aaa
jae
push
and
pop
adc
sub
dec
cmp
jp
sbb
and
jne
and
inc
cs
or
push
xor
repnz
cs
jl
not
push
push
xor
sub
mov
cmp
ja
cld
mov
test
(bad)
sahf
retf
lock
jnp
ins
out
bound
stos
xchg
adc
adc
les
nop
push
fwait
mov
jp
in
add
push
pop
xor
and
sbb
sbb
adc
push
sbb
mov
pop
mov
ds
and
dec
mov
movs
ds
test
add
or
das
fist
es
sbb
mov
cmp
ds
xchg
fs
clc
sub
loope
push
adc
aaa
jle
call
std
lahf
or
sbb
clc
lock
pop
pusha
push
adc
mov
iret
add
pop
or
mov
xor
ja
push
lods
nop
call
and
xchg
sbb
(bad)
lock
icebp
xchg
push
adc
push
mov
xchg
xor
push
ret
xchg
int3
jecxz
or
(bad)
sbb
popf
inc
addr16
fdivr
or
test
xchg
dec
sub
dec
inc
and
lds
nop
test
sbb
sub
add
neg
test
retf
ja
(bad)
mov
lock
nop
jmp
jl
ins
cmps
loopne
std
ins
dec
std
mov
jb
and
pusha
in
outs
and
jmp
sub
sub
daa
and
cmovp
nop
bound
nop
jae
test
movs
dec
inc
cli
xchg
sahf
std
pushf
mov
dec
and
cmp
pop
jmp
add
push
xchg
pop
adc
pop
sbb
cdq
sub
xchg
loope
pop
or
bound
adc
daa
xor
retf
adc
xor
mov
test
push
in
add
add
arpl
sub
and
jmp
or
add
imul
pop
jl
add
mov
push
xor
setno
adc
loop
ins
add
inc
jmp
rcl
push
mov
xchg
test
jbe
fistp
cdq
je
sbb
movs
test
ds
ret
cmp
push
sub
or
adc
test
adc
aas
clc
pop
mov
push
push
retf
shl
adc
stos
jl
xor
push
jmp
adc
jne
jl
jno
cld
sub
rdtsc
push
fmul
ror
call
or
gs
add
lods
sub
add
add
mov
adc
jb
push
movs
xchg
add
dec
nop
add
icebp
xor
test
mov
cwde
lods
(bad)
dec
mov
or
xchg
fnstcw
ins
or
jmp
iret
push
jl
jmp
add
jmp
jmp
jl
add
lock
aas
pusha
(bad)
in
dec
xchg
stos
addr16
leave
push
rcl
cmp
cmp
push
rol
std
sub
push
xor
cmp
add
je
stos
repnz
dec
out
or
jmp
pop
ret
push
or
leave
inc
stc
stos
jmp
jl
(bad)
xchg
cmp
stos
mov
ins
or
leave
into
sbb
xchg
push
popf
mov
and
test
and
add
jge
add
ret
pop
adc
or
retf
arpl
sar
test
and
sub
sbb
cmps
into
lock
call
adc
dec
dec
(bad)
data16
cmp
push
mov
adc
ja
mov
and
jb
push
jmp
pop
dec
xor
ret
push
cmovb
and
test
mov
enter
mov
test
(bad)
rol
pop
dec
aam
sub
xor
and
inc
fiadd
push
or
mov
add
in
sbb
xchg
mov
or
push
aas
adc
dec
and
mov
jno
or
jp
inc
in
jl
dec
in
push
aam
add
add
cmc
mov
in
aam
cld
sub
pop
aad
push
enter
sub
dec
mov
or
pop
es
in
das
xor
enter
mov
ins
adc
std
mov
mov
std
cmp
inc
jns
mov
imul
loop
mov
or
dec
push
push
xlat
mov
adc
dec
sbb
test
and
cmp
data16
ja
push
or
xchg
and
mov
mov
add
movs
stc
mov
rcr
xchg
or
lahf
mov
sbb
sub
sar
mov
or
pop
xor
daa
and
repz
leave
push
jmp
mov
fs
js
bound
inc
test
(bad)
movs
mov
jae
jecxz
daa
or
dec
aaa
and
mov
test
cmps
jno
sub
lods
push
dec
sti
mov
jmp
xor
pushf
test
fs
aam
ret
inc
sub
and
cwde
stc
dec
adc
in
sar
dec
xor
xor
loopne
sti
adc
jmp
push
add
fimul
mov
or
xchg
jne
hlt
push
std
jg
repnz
repz
mov
pop
add
inc
jge
in
sbb
pop
rol
icebp
(bad)
in
outs
rcr
jnp
call
ret
push
push
ins
mov
inc
and
hlt
inc
(bad)
movs
mov
clc
add
push
mov
inc
nop
sbb
mov
jmp
mov
jmp
loopne
movs
push
call
rol
mov
cmps
push
dec
push
dec
shl
cmps
inc
or
cs
dec
add
ret
push
test
dec
or
adc
repz
sub
jg
adc
gs
or
jne
xor
sub
call
aam
das
inc
out
adc
call
xor
dec
loope
lods
fist
push
jmp
push
shl
ins
add
stos
mov
or
push
dec
inc
lods
fwait
or
mov
sahf
sub
loopne
minps
push
inc
or
adc
xchg
loopne
xor
xor
cmp
cmp
xchg
je
sbb
adc
in
adc
int3
lods
and
repz
hlt
scas
push
ja
sar
fcmovbe
mov
mov
leave
xchg
out
jno
and
xor
loope
call
push
pop
sahf
push
pop
push
movs
xor
lods
ret
fisttp
add
or
test
sub
add
aam
sub
xchg
sbb
dec
daa
adc
jne
xchg
fidivr
test
in
cdq
jle
add
xor
stc
or
adc
loope
lds
push
xlat
cmp
(bad)
(bad)
jmp
xlat
(bad)
sbb
movs
push
(bad)
movs
adc
inc
lea
pop
into
sbb
gs
scas
lods
popa
push
inc
push
call
retf
mov
ror
jae
and
or
inc
add
jge
cmp
mov
mov
aam
enter
cmp
add
xchg
ror
push
pop
or
nop
jmp
lods
je
lods
push
mov
popa
adc
imul
dec
mov
push
aaa
add
and
call
nop
pop
add
inc
imul
lea
dec
fadd
adc
hlt
stos
fwait
or
arpl
sub
or
push
dec
cwde
mov
adc
mov
xchg
push
les
ins
sub
repz
pushf
bound
add
out
sbb
stos
inc
inc
imul
lods
or
xor
fiadd
into
mov
addr16
pusha
xlat
popa
mov
lea
mov
or
jmp
ds
adc
add
popa
xor
jne
pop
adc
popf
aas
inc
xor
cld
push
fs
or
dec
or
xlat
int3
fadd
and
sbb
adc
sub
mov
xchg
or
and
sub
test
mov
std
aas
add
push
xor
in
shl
push
mov
or
dec
mov
rcr
push
in
or
mov
loope
gs
inc
xor
clc
cmp
push
dec
adc
mov
inc
sub
inc
dec
or
mov
push
cmps
int3
aam
(bad)
push
inc
adc
cmp
adc
inc
adc
inc
scas
pop
aam
sbb
mov
mov
in
cdq
inc
sbb
ins
or
add
ss
fadd
in
add
popf
dec
shl
jmp
mov
out
inc
sbb
test
sar
lea
inc
aaa
adc
mov
cmp
rdtsc
jmp
sbb
in
jmp
sahf
rol
cmp
inc
inc
in
retf
loope
dec
std
lods
xchg
xchg
test
push
jno
fcmovbe
cwde
sbb
test
mov
pop
mov
btc
sbb
adc
fstp
mov
addr16
xor
imul
ret
sahf
es
xlat
sub
dec
adc
xchg
mov
mov
push
test
and
or
cmp
rol
(bad)
cmp
jbe
out
out
adc
stc
jb
mov
and
mov
pop
pop
jne
enter
sub
add
adc
pusha
fwait
mov
or
push
or
and
add
nop
mov
mov
jb
in
test
add
sub
cmp
test
(bad)
push
cmps
out
mov
cwde
(bad)
sub
add
and
mov
mov
mov
mov
add
jne
xchg
(bad)
int3
retf
bound
into
add
add
nop
xor
es
sub
call
jns
ror
sar
inc
sahf
out
sub
in
call
jns
lock
hlt
clc
adc
jbe
dec
arpl
rcr
sbb
sbb
cmp
sbb
fmulp
ret
nop
outs
jp
test
hlt
call
mov
lea
cmp
bound
into
and
std
cld
mov
enter
pop
xchg
gs
call
sub
nop
mov
pop
push
retf
fadd
mov
jmp
inc
retf
out
(bad)
shl
cmp
mov
pop
jecxz
bound
jns
mov
nop
int
in
leave
sbb
(bad)
out
out
js
jmp
push
cmp
jae
pop
fs
je
pop
addr16
repz
repnz
sbb
jns
out
adc
or
ss
sahf
or
add
pop
cmp
cld
mov
sahf
ret
mov
enter
(bad)
mov
sub
push
jnp
out
sub
cmp
(bad)
test
pop
jno
sub
loope
icebp
hlt
push
adc
pop
push
push
repz
jmp
inc
scas
leave
pop
push
cmp
sub
push
sub
inc
add
and
mov
inc
pushf
inc
cmp
cli
xchg
cmp
sbb
mov
adc
mov
stos
outs
fidiv
pop
jnp
mov
push
pop
clc
and
aam
push
and
dec
sub
jne
push
jmp
adc
sbb
sbb
sti
push
(bad)
sbb
mov
repnz
call
daa
fild
cmps
sub
into
jecxz
push
mov
hlt
mov
pop
in
lods
jl
mov
jne
mov
popa
pop
xor
add
pop
adc
sbb
aad
or
in
(bad)
add
push
and
add
aaa
inc
sti
cwde
mov
mov
and
aaa
and
mov
cmp
mov
mov
sbb
in
in
cmp
cmps
mov
retf
test
popa
mov
push
popf
mov
mov
dec
sar
add
add
jmp
leave
lahf
dec
mov
push
add
or
inc
xchg
ins
dec
data16
adc
aad
mov
pop
cwde
sar
rcl
(bad)
in
mov
dec
cwde
movs
jg
(bad)
adc
jp
push
pop
ja
cld
fdivr
push
into
std
push
cld
imul
pop
imul
mov
mov
test
cdq
lahf
and
leave
jmp
loopne
je
xchg
setns
fild
mov
gs
jg
movs
cwde
daa
add
add
fisttp
mov
mov
xor
je
ret
cmp
jmp
adc
sti
shl
jo
sub
adc
sbb
sub
add
push
inc
jne
add
repnz
ret
in
or
retf
mov
stc
xor
and
loope
sbb
cld
jmp
xor
je
shr
or
jp
in
pop
lea
push
mov
(bad)
pop
inc
mov
pop
fsincos
sub
xchg
inc
or
push
jo
or
sti
xchg
js
or
adc
mov
ins
(bad)
push
xor
push
jmp
push
imul
pushf
mov
or
dec
or
add
jmp
mov
sbb
xchg
mov
(bad)
mov
jae
mov
pop
leave
stos
repz
xchg
test
shr
stos
mov
mov
add
les
test
adc
pop
cmp
in
out
pop
and
cli
or
mov
mov
inc
ss
fadd
adc
jl
ret
imul
adc
mov
mov
sbb
int
test
xchg
rol
add
mov
nop
add
adc
push
fdiv
je
sbb
push
jae
jns
lods
imul
ret
call
and
test
retf
daa
xchg
mov
sbb
push
sub
popf
jmp
or
mov
xchg
lods
mov
mov
add
ins
mov
sub
adc
sbb
and
cmp
sub
mov
mov
jg
scas
jne
sti
adc
xchg
mov
sub
mov
test
push
jp
lea
stc
(bad)
iret
mov
test
inc
add
xchg
jno
and
addr16
dec
xchg
xchg
jecxz
sbb
sub
mov
out
inc
rcl
push
xchg
cmp
leave
add
adc
retf
xchg
movs
lds
int3
pushf
sbb
mov
jg
push
jne
fwait
mov
(bad)
rol
mov
and
inc
je
inc
inc
jmp
or
sub
inc
movs
sub
and
inc
and
inc
and
popf
inc
inc
sub
push
push
sub
mov
mov
mov
je
jbe
mov
movs
dec
je
inc
fnstsw
sbb
sub
push
push
repz
movs
and
mov
sar
ins
cmp
aas
jbe
jo
dec
imul
dec
sti
cmps
push
jne
mov
pop
push
out
xlat
adc
adc
cmp
mov
jns
cmps
test
shl
(bad)
jne
xchg
push
test
icebp
(bad)
sar
pop
retf
iret
jbe
into
push
mov
sub
int3
into
ds
sub
pop
or
shl
mov
test
clc
stos
pushw
mov
mov
pop
push
cmps
mov
loopne
add
xchg
mov
push
dec
or
or
add
lock
mov
pop
sub
test
add
aad
or
mov
pop
pop
pop
xchg
stos
jns
and
mov
fst
mov
movs
(bad)
je
addr16
push
dec
adc
add
mov
or
mov
jge
jl
add
dec
test
fbld
or
fs
push
adc
sub
shl
jmp
aam
retf
push
clc
mov
dec
xor
xchg
scas
cmc
sub
in
call
and
jno
and
inc
(bad)
mov
push
jmp
sahf
and
fs
in
int3
push
fimul
xor
cld
iret
mov
or
mov
or
inc
xor
retf
loopne
mov
pop
and
mov
pop
sub
sbb
and
xlat
jbe
adc
cld
push
sbb
cmp
clc
push
sub
ja
jecxz
(bad)
(bad)
push
and
inc
int
mov
or
pop
mov
mov
sbb
ret
test
fcmovnu
cs
adc
xor
fwait
pop
and
mov
inc
push
scas
fadd
jb
mov
inc
jmp
jb
popa
push
xchg
adc
test
sar
test
popa
jge
cld
lods
sbb
mov
rcr
popa
mov
xchg
cmp
sahf
cdq
jb
cmp
push
sub
ret
nop
jg
add
in
mov
lahf
and
stos
repz
daa
xor
cmp
sahf
fcmovnbe
mov
adc
arpl
dec
icebp
adc
test
push
shr
daa
pop
jg
lods
push
call
or
jmp
dec
xchg
shl
inc
lahf
mov
(bad)
or
xchg
out
jge
int3
clc
inc
mov
pop
sbb
aam
adc
movs
clc
inc
inc
hlt
inc
sti
inc
and
repz
cs
call
or
add
enter
mov
push
enter
popf
cld
or
fist
jl
or
cmc
pop
shl
lock
sub
sbb
ja
leave
fist
fisubr
push
outs
stos
sbb
xor
add
pop
lock
pop
jp
imul
(bad)
and
mov
add
mov
ja
lock
pop
mov
(bad)
ss
scas
stos
add
aad
cmp
or
in
(bad)
rol
pop
or
push
aam
or
or
inc
fucomip
call
cmc
mov
fist
adc
cmps
push
ret
and
arpl
shr
jmp
rcr
push
rcl
sub
shl
aas
push
out
rol
or
jg
jl
sub
push
inc
pop
in
sub
loope
xlat
pop
stos
mov
push
sub
call
aas
and
pop
cld
jb
(bad)
int3
retf
es
dec
hlt
hlt
xchg
es
xlat
hlt
mov
xor
jnp
add
jns
test
fidivr
or
cld
inc
setne
jne
inc
dec
cmp
xchg
es
je
push
xchg
int3
sub
pop
call
add
sbb
imul
dec
add
sub
xchg
pop
jb
sbb
mov
inc
jg
pushf
sbb
(bad)
sti
cmps
(bad)
out
stc
xchg
xchg
ss
int
push
(bad)
clc
jbe
jmp
addr16
push
mov
jae
movs
cwde
ins
retf
push
fwait
mov
sub
sbb
inc
in
call
mov
ret
out
xchg
pop
in
sbb
hlt
push
inc
xchg
test
ss
mov
test
push
xchg
out
call
test
fsub
mov
call
(bad)
xchg
jmp
out
inc
pushw
test
adc
push
push
mov
ins
popf
mov
jl
test
sbb
pusha
dec
mov
js
cmp
add
jo
movs
xor
aam
dec
movs
jle
adc
(bad)
mov
mov
jp
bound
cmp
int3
dec
or
rcl
push
cmp
aam
adc
stos
push
pop
jge
test
mov
aaa
and
shl
das
add
jbe
cmp
adc
aas
jne
mov
adc
adc
push
popa
imul
inc
(bad)
jle
and
or
rol
mov
hlt
cld
lea
push
imul
jecxz
or
call
xor
mov
mov
aas
(bad)
sbb
jp
mov
(bad)
ror
call
mov
jge
push
push
stc
xchg
test
(bad)
lahf
aas
das
mov
lock
add
(bad)
lods
lods
pop
mov
cwde
popf
ret
jecxz
push
cmp
cmp
push
inc
sub
xchg
std
and
xor
arpl
jle
dec
add
je
dec
xor
movs
jmp
(bad)
iret
test
mov
ds
sar
fmulp
jmp
inc
push
(bad)
jl
daa
pushf
into
cmc
sbb
jmp
jmp
or
and
inc
inc
fisttp
fld
ror
pop
cwde
push
iret
sbb
cwde
jmp
xchg
lds
push
jmp
scas
jno
test
jnp
pusha
push
mov
push
cwde
cmps
dec
xchg
ss
adc
shr
loopne
dec
pop
in
jne
xchg
mov
jmp
ds
aad
mov
inc
xor
or
dec
jmp
adc
push
mov
cmp
ins
int
xchg
call
cwde
out
mov
push
ficomp
popa
ret
xchg
int
inc
xchg
popf
push
call
popf
sbb
addr16
adc
or
push
xchg
bnd
(bad)
sbb
push
mov
mov
leave
mov
clc
in
mov
aas
in
test
iret
jmp
je
adc
aad
test
cld
xchg
pushfw
fsub
dec
dec
out
test
and
pop
xchg
movs
adc
and
mov
popa
cld
jbe
mov
jmp
dec
aas
lea
mov
test
mov
cmps
(bad)
push
in
mov
out
jecxz
push
call
mov
mov
jecxz
(bad)
jo
jmp
inc
fiadd
and
mov
or
pop
fisttp
iret
xor
je
cmp
jnp
and
sbb
movs
es
fcom
dec
movs
call
cmps
lods
into
inc
popa
xchg
sbb
xchg
cmp
ja
enter
inc
jmp
mov
ss
(bad)
push
fcom
adc
jbe
fstp
sbb
popf
sbb
and
adc
popf
popf
and
hlt
jp
add
lods
in
retf
test
(bad)
aam
in
jmp
jecxz
sub
addr16
jge
mov
jae
inc
sub
inc
xchg
pop
push
inc
push
jmp
enter
or
adc
or
mov
outs
jp
dec
add
movs
fist
ins
inc
pop
jne
in
push
or
lock
pop
popf
jne
cs
adc
xor
in
pop
push
cmp
xchg
stc
inc
sbb
mov
imul
rcl
mov
jle
cmc
xchg
aam
adc
popa
xor
stos
ror
jmp
into
scas
and
ss
sub
mov
dec
loope
cli
sub
sbb
in
test
out
inc
fs
cmp
jmp
sub
push
jg
fist
ret
jae
cmp
jno
adc
movs
addr16
(bad)
adc
cmp
out
inc
or
jmp
xchg
jmp
jae
shl
xchg
cmc
and
das
fwait
sub
in
test
adc
or
fidivr
mov
push
and
and
je
xor
add
scas
je
fcom
mov
and
dec
fcomp
stos
clc
(bad)
jmp
inc
mov
jae
jmp
test
push
out
shl
mov
fwait
push
enter
enter
cmp
xor
lea
ins
pusha
dec
test
fcom
or
in
loopne
mov
aam
adc
aad
add
mov
pop
xchg
mov
ret
sub
jmp
mov
adc
dec
loopne
ror
call
mov
les
push
mov
jge
dec
test
stos
(bad)
mov
retf
movs
mov
pushf
inc
cmps
stos
sbb
and
fwait
pop
push
cmp
clc
jecxz
retf
adc
add
rol
jl
pop
test
ja
push
mov
jmp
pusha
mov
or
jbe
pop
jg
xchg
je
popf
add
xor
jmp
xlat
(bad)
neg
loop
out
ss
ja
data16
sub
add
sub
pop
repz
cld
add
pop
and
mov
mov
jg
cmp
iret
and
test
add
imul
jmp
adc
imul
shl
adc
test
adc
jg
jmp
cwde
sbb
fimul
push
hlt
cs
mov
and
xor
daa
cmp
in
sbb
ret
lds
adc
inc
jp
and
mov
test
add
adc
mov
inc
test
sbb
in
xlat
xor
imul
std
or
inc
dec
push
lods
sbb
xchg
movs
push
jl
mov
pop
cmp
jb
mov
es
fdivr
fiadd
push
dec
mov
adc
dec
outs
call
sub
retf
add
loopne
cmps
xchg
mov
xchg
add
fldcw
loopne
je
mov
or
ror
loop
shr
dec
mov
call
mov
mov
pop
cmp
mov
and
jne
xchg
cmp
cmp
dec
(bad)
jmp
ror
add
sbb
mov
jecxz
jle
retf
repnz
dec
(bad)
es
and
adc
jbe
mov
pusha
pop
push
lods
rcr
mov
mov
jmp
adc
xor
xchg
mov
(bad)
(bad)
xchg
les
and
mov
call
or
pop
xlat
ins
cmp
rdmsr
cwde
(bad)
mov
in
popa
sbb
inc
fcmovnu
adc
mov
(bad)
cli
test
fcomp
mov
mov
seto
mov
call
jae
test
or
and
(bad)
aad
push
add
cmp
add
movs
jl
jp
inc
cmp
mov
hlt
cmp
cld
push
push
mov
push
dec
or
dec
retf
inc
mov
push
inc
or
fistp
xchg
mov
aam
lods
mov
and
or
mov
inc
test
test
mov
mov
(bad)
mov
lea
dec
loop
mov
jmp
and
inc
jb
adc
outs
movs
test
add
in
cdq
cmp
cmp
loopne
call
add
pop
sub
add
sbb
mov
or
mov
aad
add
loopne
sub
jmp
add
setnp
aaa
inc
or
clc
fimul
or
xchg
aam
(bad)
xor
je
sub
mov
inc
aam
or
mov
dec
int
or
sub
jmp
and
adc
je
jno
or
mov
into
mov
add
fisttp
adc
adc
cmp
into
or
xchg
cld
lods
adc
adc
test
add
inc
add
inc
clc
mov
movs
sbb
push
cld
or
fnop
adc
mov
out
push
mov
jae
aas
(bad)
sbb
sbb
sbb
cmp
sahf
std
dec
xchg
jne
icebp
sbb
cdq
xor
add
ins
cmps
dec
mov
mov
mov
jmp
sbb
sub
push
lahf
daa
leave
sbb
shl
xchg
call
add
or
jbe
cmp
push
push
sub
push
adc
sahf
fisubr
inc
push
adc
dec
les
and
fs
es
or
jne
popf
sbb
dec
out
popf
aad
fmul
cmp
mov
movs
jg
jl
fs
rol
sub
in
cmp
add
jl
jg
repnz
aam
outs
inc
xchg
jbe
popa
ds
ins
and
or
push
sbb
jnp
sub
into
cmp
push
and
mov
push
gs
ja
lock
adc
push
sbb
rcr
mov
mov
jl
and
add
inc
xor
xchg
cdq
sbb
add
sub
mov
sbb
or
les
push
inc
and
stc
inc
adc
mov
cdq
dec
aam
push
adc
mov
xlat
sub
dec
lods
pop
retf
xor
imul
xchg
mov
cmp
cwde
ja
cwde
sbb
sbb
cmps
popa
push
popa
sahf
test
aam
das
inc
push
cmp
call
push
cld
mov
dec
cmp
pop
sub
test
push
fld
dec
out
dec
xor
int3
push
cli
aam
add
lods
mov
call
pusha
adc
push
mov
mov
cmp
jae
push
out
cmp
pop
push
addr16
add
mov
imul
ss
xchg
add
pop
jl
jg
fwait
cli
sub
xchg
xchg
cmp
add
cdq
or
mov
cmp
sub
mov
sbb
sub
(bad)
pop
cdq
dec
das
(bad)
mov
ret
loopne
adc
call
jmp
push
jg
add
sbb
fmul
dec
dec
pusha
sbb
xchg
adc
jnp
rol
adc
sahf
mov
dec
rol
jmp
add
dec
cmp
xor
adc
push
sbb
std
inc
sub
and
adc
icebp
add
add
mov
sub
add
fidiv
lgs
imul
add
push
inc
xor
gs
push
ss
pop
adc
imul
lds
fisub
adc
jnp
adc
dec
(bad)
adc
push
fmul
or
in
mov
or
mov
idiv
pop
mov
mov
(bad)
inc
add
jg
fld
or
iret
adc
sbb
adc
movs
hlt
aam
in
adc
fdiv
das
popa
stc
movs
(bad)
in
cmp
clc
or
or
sub
mov
shl
cwde
pop
xchg
mov
cmp
test
je
inc
mov
add
or
push
mov
push
int
adc
and
div
retf
in
sub
push
ret
iret
xor
pop
push
ror
je
je
or
out
jne
pop
pop
pop
lea
dec
inc
cld
cmp
je
test
fisttp
out
cmp
test
je
xchg
push
xor
adc
fadd
aam
xchg
pop
jno
push
in
test
cmps
std
cld
add
jmp
sti
push
inc
clc
mov
scas
addr16
pop
in
push
stc
repz
sub
adc
jmp
pusha
imul
mov
nop
mov
mov
or
or
jle
mov
dec
and
add
leave
adc
add
pop
shl
add
fisub
mov
or
add
loope
stc
movsx
inc
jno
addr16
inc
clc
dec
loope
(bad)
push
(bad)
loope
test
int3
adc
pusha
push
int3
mov
rol
pop
shl
push
push
mov
mov
mov
cmp
rcl
aam
xchg
sar
xor
scas
xor
dec
rol
js
dec
push
xor
nop
jmp
xchg
jecxz
or
jbe
loope
mov
mov
dec
jmp
lds
addr16
push
cmp
mov
shl
jl
clc
sub
jo
pop
and
push
(bad)
jmp
or
aad
jbe
call
cmp
pusha
dec
or
cmp
ins
inc
xor
mov
cwde
mov
clc
xor
lds
enter
test
cmps
cld
(bad)
mov
jmp
fs
xor
pop
loopne
cld
stc
sub
push
xchg
jo
stos
jmp
loope
out
or
mov
call
push
jecxz
inc
sbb
(bad)
pop
pop
clc
adc
fcom
in
pop
hlt
imul
sahf
jg
jecxz
(bad)
call
or
fs
jb
int3
adc
nop
sub
ss
jne
pop
addr16
inc
imul
push
jmp
imul
push
and
(bad)
jmp
mov
test
in
push
push
aam
pop
shl
je
inc
(bad)
lea
mov
outs
mov
shl
cmp
pop
je
fild
xor
fadd
mov
pusha
xchg
rcr
jmp
adc
mov
jmp
inc
push
cdq
js
push
inc
nop
neg
cmp
ja
pushf
mov
and
xchg
fnstsw
adc
xchg
dec
or
push
add
add
imul
cwde
sbb
add
popf
(bad)
cmps
dec
bnd
scas
or
dec
mov
je
add
push
ins
out
retf
inc
sub
loop
mov
in
scas
and
mov
or
cmc
mov
test
addr16
dec
fs
add
dec
jae
jno
jecxz
je
push
sbb
or
nop
bound
pop
pop
pop
mov
es
xor
inc
jecxz
(bad)
std
ds
sub
enter
mov
fs
dec
leave
and
cmc
setb
inc
add
sti
add
dec
imul
leave
push
outs
test
or
jge
xor
mov
adc
or
frstor
imul
mov
test
cs
nop
pop
fcomp
jmp
add
gs
fs
push
and
mov
pop
and
retf
xor
sbb
cmp
xchg
xlat
das
push
jne
imul
lods
add
jmp
xchg
mov
out
sbb
or
pop
xor
and
out
das
add
shr
test
inc
mov
sbb
call
in
or
sub
das
or
adc
adc
adc
movs
rcl
mov
(bad)
ror
push
jmp
mov
inc
movs
inc
jne
mov
adc
or
cmp
dec
int3
sub
cld
mov
repz
inc
sub
xor
inc
(bad)
test
mov
ror
aad
push
icebp
in
push
pop
jp
enter
ret
add
adc
ret
add
popa
rcl
out
add
xchg
bound
js
hlt
andps
push
xchg
inc
test
retf
or
lock
sub
mov
dec
or
jmp
add
scas
es
sbb
mov
inc
adc
add
and
mov
and
(bad)
push
out
dec
xchg
cmp
and
or
sub
xor
out
fs
push
dec
sbb
pop
sbb
push
and
dec
mov
cli
ret
test
call
enter
in
fiadd
or
test
jno
bound
out
stos
jb
cmps
push
pop
pop
inc
mov
cld
(bad)
leave
push
mov
test
xchg
mov
dec
aam
add
popf
fcomip
pop
mov
retf
pop
jae
xchg
sub
in
adc
cmp
sbb
cld
push
repnz
push
dec
or
or
sbb
and
inc
(bad)
mov
dec
push
pop
inc
adc
and
sub
ret
sub
mov
ret
push
shl
lahf
in
dec
add
and
or
add
cdq
and
adc
in
sub
cmps
and
sbb
sub
mov
loop
fld
add
cld
sub
mov
ins
add
sub
xchg
inc
inc
outs
xchg
in
sbb
aam
in
push
inc
xor
sbb
and
xor
and
nop
scas
scas
rcl
adc
pop
shl
sub
add
fadd
rcl
mov
inc
(bad)
inc
test
pop
xor
mov
xor
call
jbe
dec
enter
add
mov
je
loope
cmp
jae
and
jmp
movsx
and
in
and
loopne
movs
push
push
or
cmp
sub
fbld
sbb
jle
add
movs
pop
xor
dec
(bad)
loopne
fs
addr16
cmp
sub
cmps
mov
daa
js
or
sbb
or
cdq
add
sbb
jo
add
dec
add
cs
and
pop
(bad)
fidivr
stos
pop
(bad)
push
jmp
sub
call
ror
inc
mov
mov
xchg
sbb
rcl
or
add
push
psubsb
sbb
cmp
clc
sbb
jbe
add
movs
sbb
jae
std
nop
jmp
cwde
in
dec
jbe
gs
daa
stos
push
push
stc
aad
cwde
dec
jbe
xchg
xchg
inc
jmp
retf
xor
inc
gs
mov
and
pushf
shr
mov
adc
out
and
push
xchg
sub
fst
add
and
xchg
or
gs
xor
and
pushf
and
adc
mov
sub
and
je
adc
jge
dec
dec
dec
out
sbb
inc
cmp
add
in
and
or
cmp
sbb
dec
iret
lahf
sub
push
mov
jmp
in
(bad)
sub
mov
outs
fadd
pushf
cs
sbb
(bad)
out
xor
jg
lea
cmp
lea
pop
gs
gs
fld
mov
push
xor
and
fimul
or
cmp
adc
pop
adc
adc
or
clc
xchg
loop
inc
dec
pop
jbe
pop
cmp
gs
sub
sbb
adc
mov
test
je
jb
sub
fisubr
mov
adc
fwait
mov
clc
movs
mov
adc
mov
sbb
dec
leave
mov
mov
sahf
xor
test
mov
sti
sub
cwde
sbb
and
xor
sbb
pop
or
cwde
repnz
sbb
push
iret
push
popa
leave
pusha
hlt
push
sbb
rcr
jbe
mov
mov
in
cwde
stos
dec
mov
push
retf
sbb
sub
adc
sbb
dec
sub
pushf
test
and
adc
jae
adc
inc
gs
cmps
sbb
enter
cld
pop
sbb
push
int3
mov
cmp
inc
push
aad
scas
xchg
pushf
aam
push
out
pushf
push
popf
xchg
push
hlt
imul
sbb
cmp
cs
xor
sbb
xchg
mov
push
dec
sbb
fwait
lahf
sbb
cmp
stos
sbb
sbb
adc
xchg
ss
xchg
das
imul
adc
shl
outs
mov
mov
pop
pop
ret
clc
jecxz
and
adc
popa
add
pop
xchg
push
xor
and
fsub
push
inc
mov
iret
es
pop
mov
repnz
mov
add
mov
dec
in
rol
adc
push
js
jmp
scas
or
jg
xor
xchg
mov
data16
mov
loope
mov
jmp
fisttp
sub
push
or
push
jg
or
mov
bound
je
test
and
das
mov
hlt
int3
stos
jg
jne
sti
sub
sbb
sbb
sub
push
mov
sbb
ins
jmp
xchg
jns
xchg
addr16
ja
in
inc
popf
retf
in
and
cmps
nop
retf
call
mov
pop
push
xor
cmps
mov
dec
lods
(bad)
xor
sbb
enter
nop
push
add
nop
in
dec
loopne
push
loop
push
lock
imul
mov
jb
jg
nop
mov
retf
or
jnp
pop
dec
std
enter
sub
js
sub
jp
sahf
and
push
inc
push
pop
xor
push
in
jge
sbb
(bad)
in
in
jns
pop
in
ret
fst
loope
jmp
popf
loopne
loopne
inc
or
xor
inc
in
nop
and
mov
jmp
add
or
mov
inc
fist
pop
retf
mov
or
(bad)
fsub
jno
xor
dec
sub
dec
pop
xor
test
jne
cmp
cli
(bad)
iret
das
rcr
ds
mov
sub
add
and
sub
push
sbb
jo
adc
mov
fst
int3
jl
daa
ins
xchg
jmp
pushf
or
rol
xor
(bad)
mov
jge
xchg
imul
xor
push
dec
adc
mov
add
enter
or
loopne
shr
xlat
xchg
daa
shl
hlt
cmp
xor
adc
sbb
push
push
dec
or
sti
mov
or
adc
push
clc
adc
stos
jg
adc
leave
sbb
iret
adc
push
cmp
fwait
daa
jne
or
push
or
sbb
push
fdivr
push
sub
add
js
xchg
mov
call
jbe
mov
sub
ins
or
and
push
test
and
and
jo
ss
sbb
inc
loopne
or
push
bound
rcl
into
pop
xchg
xchg
imul
xor
gs
aam
push
push
pop
fwait
mov
push
xor
lahf
mov
pop
xchg
ret
add
and
xchg
les
aaa
fs
cmp
loop
pop
fmul
mov
sbb
ja
test
push
cmp
retf
pop
aas
rcl
mov
cmps
inc
cs
mov
pusha
ror
or
test
or
cmovo
add
sahf
sbb
adc
push
or
push
ficomp
stos
push
out
lahf
dec
cwde
add
sbb
and
jl
scas
push
pop
lea
imul
call
pusha
retf
push
lods
pusha
and
inc
out
or
jmp
and
and
shl
jmp
push
in
aaa
rol
in
pop
and
add
lahf
test
sub
test
push
and
pop
cs
and
loope
fld
cmove
(bad)
cvtpi2ps
pushw
movs
push
or
dec
mov
outs
aam
jecxz
jmp
inc
imul
int
and
sar
xchg
aas
jno
cmp
push
push
cmp
scas
aam
lds
daa
or
in
dec
pop
sbb
xchg
cdq
inc
movs
adc
or
and
sub
and
xchg
inc
inc
outs
inc
jbe
mov
stos
jecxz
xchg
mov
mov
or
popa
adc
sbb
mov
leave
xor
pop
movs
or
mov
sub
mov
adc
and
jbe
int
add
jg
rcl
mov
dec
or
mov
mov
je
add
sub
and
xor
add
dec
mov
xchg
inc
loope
push
jmp
sbb
xor
out
das
inc
and
ds
and
mov
cmp
mov
sub
xor
sahf
mov
mov
int
xchg
gs
xchg
pop
jge
or
jo
mov
ja
jmp
mov
in
push
mov
and
mov
loop
enter
rcr
jmp
(bad)
dec
adc
sub
stos
in
push
mov
stos
sub
adc
movs
xor
jge
jbe
xchg
push
lods
sbb
or
sub
dec
in
loopne
jl
out
stos
mov
jp
push
jg
dec
push
mov
push
cwde
dec
daa
push
ins
sbb
not
test
sar
jecxz
ss
mov
xor
push
adc
ja
loope
cmp
cmp
daa
inc
js
(bad)
jmp
jmp
lods
mov
fdivr
lock
in
or
lods
mov
fadd
push
je
in
adc
aaa
je
adc
add
mov
retf
es
aad
lahf
inc
in
inc
jmp
or
mov
adc
xor
repnz
inc
mov
push
in
xchg
cmp
xchg
nop
mov
inc
(bad)
popf
sbb
cmps
cmp
sub
dec
in
lods
jae
sbb
adc
aas
sub
mul
sbb
fistp
scas
push
pushf
and
jle
mov
stos
cld
mov
cmp
je
inc
mov
sub
fs
mov
jecxz
push
cmp
add
or
arpl
sbb
mov
mov
add
add
test
jecxz
pop
cwde
cwde
cwde
or
cli
fsub
mov
stos
je
inc
xchg
aaa
mov
in
rcl
add
push
cdq
push
popa
mov
or
or
xchg
inc
sub
xchg
outs
jae
inc
enter
stc
mov
loopne
jne
cdq
adc
dec
aam
jno
loop
push
idiv
fmul
into
jmp
mov
aas
shl
mov
clc
or
push
repnz
sbb
adc
mov
mov
dec
push
and
adc
movs
and
mov
sub
push
leave
mov
fstp
icebp
push
out
mov
retf
lahf
scas
push
out
push
scas
mov
dec
cmps
add
mov
push
inc
xchg
test
fsub
(bad)
popf
outs
mov
je
sub
mov
int3
lea
dec
jmp
cmp
mov
mov
int3
mov
pop
enter
and
dec
inc
sbb
inc
cs
or
mov
cmp
jno
adc
movs
mov
cmp
xchg
push
imul
adc
fiadd
repz
and
div
mov
enter
pop
retf
xchg
cmp
stos
adc
js
into
cmp
js
add
adc
pop
jnp
(bad)
out
sbb
push
cmps
adc
jmp
xor
jmp
mov
inc
push
loopne
fsubr
aad
sbb
jns
add
adc
mov
mov
gs
mov
cs
bound
and
pop
fcmovnu
xchg
xchg
mov
sbb
xchg
xor
std
push
sub
(bad)
in
in
push
addr16
in
fs
sbb
jge
in
push
sub
sbb
je
push
les
inc
sar
xor
ins
inc
in
and
stos
jbe
pop
je
aam
icebp
cmp
jmp
gs
jmp
pusha
adc
mov
jbe
sub
sbb
mov
push
jnp
je
push
mov
loop
pop
fs
retf
push
adc
retf
mov
pop
push
push
xchg
mov
and
addr16
mov
repz
ss
or
pop
rcl
leave
imul
xor
or
call
out
ja
cmp
mov
xchg
mov
push
hlt
cs
dec
mov
adc
pop
xchg
add
mov
sbb
or
fwait
push
dec
pop
and
xchg
xchg
adc
popa
add
lock
cmp
sbb
mov
idiv
sahf
cmp
ds
inc
cmp
(bad)
jecxz
and
(bad)
fmulp
loope
inc
xchg
aaa
out
xchg
popa
cmp
pusha
cmp
sbb
pop
aas
jne
ret
inc
push
inc
and
loope
pop
jo
ds
pop
add
add
sbb
pop
add
pop
push
pop
pop
pop
or
clc
call
or
xor
adc
das
sbb
push
or
dec
ins
cmc
sbb
xor
push
sub
inc
out
push
rol
pusha
imul
popf
adc
dec
inc
cmp
jmp
cmp
push
dec
retf
xor
add
sbb
sub
add
or
xchg
inc
dec
rol
xchg
adc
xor
or
dec
imul
mov
test
jne
adc
add
mov
popa
push
arpl
add
or
aad
or
sub
jbe
cld
mov
fistp
dec
xor
jno
jle
ja
adc
or
add
inc
inc
hlt
jae
cmp
mov
mov
jb
mov
mov
scas
xor
in
inc
or
xchg
mov
or
mov
mov
arpl
sbb
mov
aas
or
sbb
inc
adc
jp
xchg
and
or
push
adc
ret
or
shl
sub
pop
dec
(bad)
add
sar
sbb
jae
ficom
sbb
sub
push
fmul
(bad)
dec
fiadd
test
pop
and
add
retf
dec
sbb
dec
aad
es
dec
movs
imul
inc
add
rol
inc
dec
or
lods
dec
mov
add
and
int3
sub
or
xchg
stos
leave
shr
cld
and
sbb
adc
movs
nop
jbe
bound
adc
or
sbb
mov
or
sub
mov
xor
mov
cmps
imul
sbb
add
sub
xchg
xchg
retf
imul
cld
xor
rcr
or
add
pop
push
sub
and
cmp
xchg
and
jb
movzx
mov
xchg
push
push
int
ret
shl
and
aaa
xchg
fld
cmp
ins
mov
dec
(bad)
jmp
inc
(bad)
cdq
mov
mov
cmp
cmp
mov
nop
cmp
popa
inc
pop
enter
mov
cmps
jns
inc
rcl
dec
add
mov
jmp
js
push
dec
mov
push
icebp
push
dec
out
repnz
mov
cmp
ins
lods
stc
dec
out
in
cmp
test
addr16
push
push
and
push
pop
pop
inc
rcr
add
dec
hlt
push
aaa
or
fwait
mov
add
jo
mov
cmp
jg
dec
movs
mov
or
xchg
lods
add
dec
xchg
(bad)
jmp
fidivr
add
inc
outs
ins
add
data16
xor
sub
jbe
lahf
cmp
test
pop
xor
jmp
push
movs
aam
cdq
xor
lock
mov
pop
dec
sbb
and
xor
and
push
jne
and
push
cmp
sub
outs
xchg
leave
inc
sti
test
popf
retf
fwait
xchg
in
inc
dec
enter
fld
mov
pop
das
xor
cmp
shl
hlt
pushf
adc
jmp
imul
hlt
sbb
cmp
push
lea
pushf
push
lds
cs
push
imul
cmc
pop
test
cmps
aam
xor
fidiv
push
pop
push
xor
aam
lds
inc
cmp
sub
jmp
push
push
or
mov
jp
push
mov
inc
cld
pop
nop
inc
dec
cmp
cld
sub
add
iret
repz
loop
dec
jno
or
dec
add
jmp
in
push
add
add
add
inc
out
popf
add
push
jno
mov
nop
and
dec
repz
lds
dec
cmp
adc
jmp
mov
fbstp
adc
pop
pusha
dec
ror
mov
pushf
mov
push
jmp
cmp
push
shl
les
gs
push
cmp
aad
jnp
push
enter
pop
fsub
add
pop
cs
sub
hlt
jbe
push
sbb
inc
sub
jnp
push
sar
lea
fiadd
push
in
lea
and
mov
(bad)
or
into
mov
sub
loopne
pusha
(bad)
mov
cmps
in
fsub
and
xor
push
enter
jl
add
or
xor
dec
ror
cli
ret
sbb
inc
dec
popa
xor
jg
test
mov
or
pusha
pop
loope
sar
test
out
hlt
inc
frstor
xor
and
js
inc
les
std
mov
xor
push
and
fdivr
add
sbb
popf
fmul
cdq
push
inc
(bad)
imul
or
popa
push
cmp
cmp
retf
push
movs
jns
cli
push
test
imul
sub
mov
sbb
pop
out
in
out
call
movs
cmp
dec
sar
je
mov
and
dec
xor
stos
or
dec
je
inc
or
push
jno
xor
fsubr
rcr
cmp
and
mov
loop
inc
xchg
into
mov
enter
sbb
mov
dec
repz
dec
mov
push
into
mov
movs
xchg
inc
jg
mov
ficomp
daa
xchg
fld
scas
xor
cmps
adc
fsubr
xor
loopne
pop
jae
add
pop
aam
jmp
jmp
or
aaa
sahf
add
or
shl
lods
enter
inc
cdq
test
and
and
dec
jp
adc
xchg
cmp
inc
or
test
mov
jo
inc
cli
xchg
dec
push
(bad)
leave
mov
inc
mov
outs
sub
or
inc
and
jbe
es
cli
popa
ins
push
sbb
in
in
jecxz
lods
xor
adc
sub
xor
or
mov
inc
dec
fcomp
mov
aam
or
sbb
add
mov
dec
jbe
les
adc
mov
or
or
(bad)
xor
jg
adc
push
es
add
shl
mov
aaa
mov
ror
fimul
data16
add
inc
inc
mov
inc
mov
mov
fiadd
rol
or
xchg
pop
cwde
mov
cmp
jle
or
pop
sub
fs
add
mov
mov
cmp
movs
lods
push
and
rcl
dec
mov
push
xchg
cdq
cdq
inc
mov
sbb
mov
mov
mov
xchg
pop
xor
es
fldenv
dec
pop
das
or
mov
adc
aam
xor
jnp
ret
cmp
cmp
fs
push
nop
cs
jae
sub
popa
add
add
cmp
and
mov
mov
ret
adc
nop
fwait
add
adc
test
or
dec
les
or
ficomp
mov
clc
out
mov
pop
jl
inc
inc
or
mov
dec
mov
les
jmp
mov
and
cli
inc
inc
add
popa
inc
jb
je
int
push
mov
dec
pop
sbb
fist
mov
add
pop
jge
cs
rcl
sub
repz
ja
xchg
mov
push
out
mov
push
adc
movs
xor
loopne
xor
add
ins
and
mov
mov
jge
mov
fdivr
sub
jo
push
int3
and
jecxz
loop
lea
inc
xor
sbb
test
cmp
mov
sbb
ja
out
stos
mov
fldenv
(bad)
cmp
enter
push
sub
mov
cmps
out
inc
jbe
pop
(bad)
fimul
(bad)
adc
loop
inc
mov
inc
xchg
mov
xor
sbb
push
std
bound
sahf
sahf
cs
mov
(bad)
in
in
inc
xchg
cmp
aam
(bad)
jecxz
int3
in
test
push
movs
ins
mov
inc
aam
mov
rcr
mov
sbb
stc
cmp
pop
xor
gs
mov
gs
add
hlt
push
mov
retf
or
push
inc
leave
fcom
leave
add
pop
test
mov
jae
rcr
xchg
xchg
addr16
mov
xor
push
dec
test
and
dec
test
pop
cmp
xor
sbb
sub
xchg
jnp
mov
test
popa
hlt
jne
xor
mov
jb
inc
cmp
or
pop
fmul
push
enter
cmps
adc
xor
jmp
push
fnstenv
xor
and
das
inc
adc
ret
mov
out
adc
mov
pop
and
and
sbb
pop
enter
dec
jmp
ror
xchg
std
push
fdiv
adc
mov
sub
jle
push
sub
xor
push
dec
push
jp
push
sbb
and
cmps
test
shl
je
push
push
push
mov
push
cdq
or
iret
inc
ror
mov
pusha
dec
cmps
cwde
mov
rol
xchg
push
cmp
nop
xor
cmp
dec
sbb
adc
inc
adc
rcl
mov
loop
jnp
cli
loopne
pop
cmp
or
enter
iret
jmp
dec
xchg
rcr
xor
add
(bad)
leave
xlat
inc
out
arpl
mov
pop
sbb
stos
fs
push
outs
jnp
mul
adc
cld
addr16
sub
xor
inc
jmp
iret
inc
or
stos
push
sub
in
test
mov
mov
add
inc
jb
movs
aam
inc
cmp
or
cmps
mov
ins
pop
xchg
in
mov
pop
dec
mov
clc
mov
sub
dec
aaa
enter
xchg
dec
add
jne
ins
scas
addr16
mov
or
sub
pop
fsubr
adc
cld
ss
repz
stos
aam
out
pop
push
adc
or
mov
pop
shl
or
sbb
sbb
mov
adc
in
std
scas
hlt
mov
sub
ror
mov
ins
adc
xchg
sahf
fidivr
inc
call
push
pop
add
inc
test
pop
sub
sub
adc
jle
stos
jg
push
xor
mov
mov
(bad)
enter
jmp
fistp
shr
popf
push
mov
in
fst
jp
mov
mov
jns
pusha
push
adc
or
adc
adc
add
iret
es
xchg
pusha
sub
stos
call
dec
int3
inc
das
bound
adc
and
dec
jne
mov
stos
inc
inc
(bad)
leave
adc
es
add
ret
pop
jne
mov
or
xchg
adc
push
icebp
loop
jne
add
nop
clc
ins
cmp
lods
mov
unpcklps
sbb
or
push
dec
adc
inc
jl
add
adc
cmp
out
jp
xor
or
out
dec
mov
test
cmp
aaa
in
jmp
int
fst
in
cmp
lods
dec
push
jb
add
jb
les
xor
or
ja
push
movs
jle
push
aas
sub
sub
call
xor
mov
and
mov
mov
jne
in
inc
mov
mov
jb
xor
inc
fiadd
push
inc
and
fadd
ja
add
loop
test
jbe
mov
shl
lea
cli
jae
(bad)
fld
and
push
out
push
jno
daa
sub
shl
fsub
ror
jge
and
mov
add
and
lock
push
add
cs
push
fwait
mov
mov
mov
inc
pop
and
lds
inc
pop
mov
js
sbb
jl
sbb
cmps
popa
sub
ret
mov
stos
stos
sub
and
sbb
pop
cdq
xor
neg
cs
add
mov
dec
neg
dec
adc
adc
mov
xor
js
or
imul
shld
js
mov
and
push
fild
add
inc
stos
xor
push
adc
or
push
dec
sbb
inc
rcl
leave
push
and
pop
sbb
push
push
push
and
cmp
pop
hlt
adc
mov
inc
cmp
xor
cmp
rcl
push
inc
daa
or
jnp
test
add
push
sbb
jmp
and
int3
je
retf
out
push
(bad)
icebp
aaa
or
mov
jg
loopne
loopne
(bad)
test
fwait
sbb
(bad)
mov
push
inc
mov
sub
test
or
jmp
pop
retf
mov
mov
pop
jmp
mov
scas
add
mov
pop
cs
jo
popa
cdq
mov
stos
jecxz
mov
pop
jbe
dec
pop
jg
push
ins
pop
movs
push
shr
sbb
xor
sub
jno
push
repnz
mov
mov
fidiv
aas
push
imul
rcl
nop
(bad)
aad
adc
nop
or
mov
and
push
(bad)
xchg
xchg
push
jmp
add
jne
cmp
inc
loop
or
(bad)
loop
adc
cmp
xor
pop
mov
mov
lock
xor
cmps
add
mov
dec
pop
scas
ss
cmp
outs
inc
clc
mov
cwde
jns
mov
into
shl
cmp
xchg
xor
mov
push
sbb
jge
imul
call
rol
push
ss
xchg
xor
cmp
dec
xor
fisubr
xchg
nop
dec
push
pop
and
jo
add
data16
add
or
out
xor
out
sar
in
enter
jp
cmp
add
je
jmp
clc
add
loop
add
pop
add
scas
mov
and
mov
mov
scas
sbb
jg
sbb
jp
pop
aam
lock
and
loope
shl
fprem1
xor
mov
mov
mov
clc
pop
arpl
dec
jo
xor
dec
loop
rol
and
jmp
sub
outs
add
add
jmp
push
adc
add
(bad)
adc
inc
adc
pop
inc
mov
cld
sub
nop
fistp
sbb
adc
cmp
test
dec
scas
mov
ret
movs
and
aas
jge
stc
dec
cmp
inc
inc
(bad)
clc
mov
(bad)
inc
(bad)
(bad)
jmp
cmps
xchg
sbb
popa
shl
mov
and
dec
out
call
or
jnp
dec
push
push
pusha
sbb
mov
jmp
adc
mov
dec
fsub
sub
mov
call
out
loopne
pop
das
jnp
mov
cs
test
push
inc
das
gs
push
in
ret
in
rcr
dec
retf
lods
sbb
jp
add
fisubr
add
push
jg
push
repz
push
call
or
movs
sub
ds
aam
jno
out
aam
fidiv
sbb
or
mov
mov
push
xchg
leave
xchg
rcl
adc
add
push
adc
dec
push
pop
fwait
ror
popf
in
inc
jmp
test
and
dec
and
imul
jmp
pop
and
dec
dec
add
rol
xchg
jl
shl
inc
enter
jbe
stos
dec
jl
ficom
add
fmul
push
int3
dec
fcom
in
jbe
jne
mov
pop
cli
les
push
fst
push
lea
in
pop
push
mov
not
outs
mov
test
or
outs
shl
inc
and
mov
push
sub
jmp
sahf
popa
cmp
das
dec
adc
or
nop
(bad)
fadd
inc
pop
rol
cwde
and
sub
fcom
push
(bad)
xchg
add
pop
adc
adc
test
outs
adc
adc
scas
adc
mov
test
xor
add
adc
adc
adc
cs
cdq
dec
or
clc
stos
les
test
push
(bad)
fadd
mov
sbb
fdiv
push
fisttp
test
sbb
aam
dec
inc
int3
hlt
ins
mov
call
(bad)
call
and
adc
arpl
sbb
jne
pop
xor
pop
mov
ror
cmp
add
lds
call
nop
inc
int
ror
jb
dec
aaa
sub
xor
std
cmps
mov
dec
out
pop
int
test
xor
fdiv
cmp
ins
int
fdiv
or
pop
enter
mov
pop
jo
in
stos
xchg
push
mov
int3
xchg
test
dec
jb
xchg
mov
in
push
push
movs
mov
and
fmulp
call
imul
jp
aad
inc
xor
movs
mov
sbb
jne
nop
mov
add
or
cmp
or
je
mov
xor
add
or
or
adc
jne
add
mov
pcmpeqw
pushf
inc
pushf
mov
nop
(bad)
adc
inc
lock
ret
add
add
movs
mov
out
pop
shl
fadd
xchg
daa
mov
movs
mov
into
bnd
mov
jmp
xor
(bad)
adc
enter
bound
das
add
ret
cmp
and
add
and
pop
pop
adc
in
jl
inc
xchg
add
outs
retf
xor
jmp
popf
cmp
and
sbb
push
jns
jmp
inc
(bad)
rol
std
jmp
ds
add
je
mov
add
pop
daa
popf
add
add
fild
mov
sar
loope
test
je
gs
mov
adc
adc
pop
popa
mov
outs
xor
push
iret
mov
and
aam
push
push
sub
imul
or
jg
adc
sbb
push
sahf
aas
sub
mov
ss
mov
fisttp
sub
or
in
sub
outs
shr
movs
jmp
xchg
(bad)
fild
inc
inc
ror
in
sbb
cmps
add
xchg
movs
mov
jle
(bad)
push
push
into
inc
mov
outs
lea
xor
cli
sbb
xor
mov
jg
inc
cld
and
mov
pop
xchg
stos
and
xchg
or
sub
into
ficom
int3
int3
xor
imul
cmp
jle
fdivr
mov
or
loopne
movs
leave
xor
in
movs
in
mov
test
icebp
cld
sub
mov
or
jne
mov
and
push
test
sbb
dec
mov
repz
(bad)
jecxz
mov
cmp
test
jmp
add
xchg
sub
les
add
(bad)
jmp
xor
xchg
cmp
shl
imul
dec
(bad)
lods
mov
cld
dec
adc
in
outs
ret
jnp
rcl
mov
ja
mov
in
cmp
std
hlt
in
bound
xor
xchg
out
pop
call
imul
mov
push
mov
cmps
stos
inc
daa
les
ds
clc
fwait
cmp
adc
sub
loopne
mov
out
(bad)
aad
xor
mov
mov
sub
inc
dec
push
add
mov
add
push
scas
xchg
inc
bound
or
pop
fsubr
push
in
cmp
loope
addr16
hlt
dec
aas
(bad)
jmp
jmp
jmp
and
adc
cmp
sahf
mov
or
or
ss
cmp
adc
xchg
mov
movs
into
in
ficom
sbb
mov
mov
std
mov
addr16
fsub
js
sub
or
xor
jmp
mov
or
jb
pop
xchg
xchg
mov
and
repnz
sub
sub
dec
shr
adc
add
rol
in
cmp
pop
int
sbb
pop
pusha
out
nop
cmp
dec
cmp
clc
test
add
sti
fnsave
enter
add
dec
push
mov
adc
bound
push
pop
ficom
clc
jae
loopne
(bad)
not
sub
mov
jb
add
push
mov
add
mov
or
aad
push
or
pop
push
xchg
enter
ror
mov
or
xchg
push
sbb
xor
jbe
sub
add
loopne
and
test
jbe
sub
mov
push
and
pop
sub
outs
pop
and
pop
push
mov
dec
outs
ins
mov
inc
jb
push
cmp
adc
jne
test
adc
sbb
and
push
inc
sahf
fstp
add
dec
jge
(bad)
shl
ficom
popa
mov
fisubr
dec
jmp
lea
cmp
sbb
into
outs
movs
sbb
cmp
cmp
adc
loopne
sub
loope
in
push
(bad)
push
sub
mov
lods
and
adc
pushf
fisubr
xchg
jmp
cmc
jae
xor
sbb
(bad)
daa
and
sar
pop
scas
maskmovq
div
ins
stos
pop
sub
sbb
xor
or
sbb
xchg
ficom
dec
aam
push
and
dec
adc
sub
mov
push
jo
aaa
jmp
adc
fs
or
or
and
jb
retf
push
mov
hlt
push
mov
pop
icebp
bnd
mov
outs
xor
mov
sbb
jnp
push
mov
stos
ja
addr16
inc
cwde
into
sbb
push
push
mov
aam
daa
cmp
imul
outs
test
icebp
aaa
punpcklwd
outs
test
(bad)
fiadd
push
punpcklwd
(bad)
stc
xlat
ss
fdiv
test
xlat
push
fist
dec
mov
xchg
push
test
jnp
mov
int3
in
cvtpi2ps
ror
mov
sub
xor
nop
jecxz
xor
xor
cld
mov
(bad)
cmp
fist
or
fs
cmc
mov
jmp
mov
in
add
xor
jge
sbb
pop
daa
hlt
sti
pop
ror
xchg
mov
mov
clc
add
push
pushw
cmps
mov
aam
sti
(bad)
inc
push
adc
push
push
add
push
inc
in
sub
mov
mov
and
cli
aam
out
dec
inc
adc
xchg
xchg
adc
inc
dec
loopne
test
ja
xor
div
jle
or
iret
les
fstp
push
mov
mov
and
mov
rcr
shl
in
adc
push
xor
aam
aad
stos
sbb
and
push
and
dec
jae
push
xchg
jne
inc
sbb
cdq
inc
movs
push
hlt
pop
jo
push
leave
test
mov
mov
cdq
xor
mov
jbe
and
push
jb
xor
xchg
lahf
jnp
add
mov
xor
fsub
scas
inc
mov
push
push
adc
ss
adc
fstp
bound
cwde
in
sub
enter
pushf
sub
dec
dec
rcl
out
adc
loop
push
cmp
xchg
xor
pop
adc
sub
inc
(bad)
jnp
imul
and
or
je
xchg
clc
fcomp
aam
mov
push
popa
push
les
push
inc
and
ror
mov
(bad)
fdivp
push
or
push
hlt
ins
mov
mov
mov
pushf
mov
cmp
call
pop
pop
dec
push
les
sub
add
dec
sbb
gs
xchg
lds
test
sub
(bad)
(bad)
dec
sub
pop
inc
dec
or
outs
push
mov
jns
sub
sub
xor
clc
cmp
push
aad
sahf
mov
inc
cmp
sbb
mov
into
loop
mov
xor
je
mov
cmc
mov
push
retf
dec
ja
(bad)
ftst
movs
or
adc
in
push
push
ret
jmp
test
push
data16
cmp
popf
cmp
arpl
dec
cmp
jmp
cmp
inc
sub
ja
xor
int
dec
or
mov
mov
test
cmc
lods
cwde
in
inc
jmp
inc
and
movs
mov
or
add
mov
add
xchg
out
mul
push
lods
mov
push
sub
sbb
mov
inc
mov
or
inc
sbb
sub
clc
inc
jbe
sbb
ror
sub
xor
jle
(bad)
shl
mov
and
ins
push
clc
sub
and
push
clc
push
addr16
sub
jns
fidivr
jns
ret
and
jo
hlt
adc
out
cwde
ss
in
push
xchg
pop
gs
push
stc
mov
and
stos
and
adc
mov
dec
jle
sbb
stc
jns
test
ds
inc
inc
test
out
sar
lods
sub
into
iret
jl
or
das
sbb
(bad)
les
ror
je
cld
adc
out
jecxz
mov
inc
test
test
lea
stos
push
fistp
out
int3
xor
(bad)
mov
ss
fsubr
adc
mov
mov
mov
enter
mov
test
test
xchg
cmp
sub
lock
stos
cmc
rol
mov
ret
mov
pop
scas
vpcmov
js
je
das
les
push
xor
or
test
fmul
jg
mov
cwde
in
mov
(bad)
inc
test
mov
dec
mul
mov
inc
cmp
add
cmp
sti
mov
nop
xor
jmp
dec
push
cmp
mov
cmp
jae
lds
adc
and
shld
shl
rcr
loope
shl
ret
mov
lods
rcl
hlt
popf
push
jmp
push
push
push
xor
or
rol
add
adc
fdiv
ficomp
cmp
push
ja
mov
dec
loopne
sbb
mov
xchg
jecxz
icebp
pop
adc
in
cs
jmp
push
or
xor
shr
rcr
shr
rcr
or
jne
sbb
lock
enter
cmc
out
shl
cmp
or
cmp
dec
pop
mov
add
xchg
test
and
pop
pop
pop
sbb
and
add
sbb
or
pop
cmps
iret
stos
push
dec
pop
sub
fild
(bad)
mov
xchg
add
adc
repnz
add
bound
push
or
clc
jmp
icebp
outs
movs
adc
mov
push
sub
mov
int
sbb
and
pop
call
xchg
xchg
test
ins
retf
xor
push
jno
or
sbb
mov
or
retf
push
sub
stos
pop
mov
xor
adc
push
cmp
adc
jns
call
add
or
aas
jecxz
call
fiadd
cmp
adc
sbb
in
arpl
popa
mov
sub
mov
push
push
cwde
or
sub
je
fdiv
sub
fistp
mov
fcmovnu
push
bound
or
mov
fsubr
into
and
pop
cdq
or
lods
sahf
rcr
xor
sub
mov
bound
in
movs
pop
sbb
out
sub
add
push
dec
xor
es
add
lea
jmp
xor
jns
adc
and
fsub
mov
xlat
xchg
cmps
mov
pop
xor
cli
adc
mov
and
add
into
inc
and
test
mov
add
retf
mov
jae
mov
sbb
test
(bad)
movs
add
fmul
dec
mov
jmp
shl
adc
and
sub
int
and
adc
mov
sub
mov
sti
xchg
test
sub
enter
sub
cli
push
add
and
jmp
push
push
imul
je
sub
push
nop
or
pop
dec
je
or
in
test
push
fimul
xchg
pop
dec
sbb
mov
sub
dec
xchg
aad
adc
adc
ret
shl
inc
fadd
inc
add
in
or
xor
mov
shl
sub
inc
inc
dec
adc
rol
mov
std
and
xchg
fwait
in
sub
pop
push
lods
fimul
sub
sbb
adc
cmps
mov
jl
bound
add
mov
sub
and
sub
push
or
cmp
inc
inc
stos
lds
jno
sub
je
jmp
fisub
sub
or
sbb
jno
sbb
bound
mov
push
pop
outs
push
push
sti
(bad)
or
mov
or
jmp
not
inc
or
repnz
add
ins
mov
pop
test
pop
sub
sub
pop
fidiv
cmp
popf
bound
push
cmp
jbe
mov
ins
mov
sbb
or
lods
jbe
inc
clc
call
mov
add
mov
jae
aam
cmp
dec
rcl
retf
xchg
pop
cmp
sbb
jae
xor
jae
inc
cmp
adc
pusha
ret
cmp
test
pop
mov
icebp
jmp
cmp
and
pop
inc
or
sahf
mov
jnp
clc
pop
cmps
xlat
cmp
imul
int3
iret
add
jle
std
pusha
inc
dec
fnsave
lods
dec
add
jns
adc
or
push
mov
test
cmp
push
pop
or
out
sub
and
push
and
push
mov
fcom
sbb
mov
adc
jne
adc
jnp
lea
jmp
fisub
mov
test
cmp
add
inc
fwait
pop
xchg
xor
stos
bound
and
(bad)
or
sbb
dec
add
pop
mov
xlat
mov
or
pop
push
pusha
adc
stos
ins
popa
xchg
pop
(bad)
push
inc
dec
imul
pop
jbe
out
inc
inc
loop
or
fwait
xor
fmul
fdiv
fdivrp
or
into
jmp
push
scas
inc
push
out
loopne
stos
inc
pop
loopne
ror
dec
popa
xchg
call
add
fistp
jb
sub
pop
pop
mov
loopne
adc
push
idiv
je
and
mov
ins
aam
pushf
test
in
or
imul
and
cmp
mov
jp
call
test
jmp
mov
cmp
mov
cmc
femms
je
mov
cmp
cmp
jp
(bad)
sub
push
fsub
pushf
add
adc
xchg
cmp
aad
stos
int
push
out
cld
int3
clc
jnp
aad
ins
ins
push
dec
enter
add
jae
and
je
cmps
test
jmp
repz
cmp
popa
scas
repz
sub
jns
adc
stos
add
mov
mov
je
jb
mov
jmp
add
xor
push
sbb
jno
or
inc
cmp
jno
or
cmp
adc
dec
cmp
ss
fwait
push
(bad)
loopne
or
and
add
int3
scas
dec
mov
jecxz
inc
push
sub
iret
and
ins
aam
xchg
arpl
lods
sbb
fwait
aaa
es
adc
or
popa
in
mov
loopne
jge
popa
sub
ja
adc
cmc
mov
dec
adc
rcr
mov
loopne
gs
enter
cmp
addr16
xor
xor
or
mov
fidiv
lds
push
cdq
neg
push
or
mov
cdq
mov
ds
mov
xchg
dec
in
jecxz
jmp
add
jns
inc
adc
(bad)
jmp
cmp
push
push
dec
test
lds
pusha
adc
fwait
cmc
sub
push
sbb
sbb
js
lea
in
add
add
add
int3
add
push
in
adc
inc
xor
push
mov
mov
push
inc
xor
ret
addr16
and
and
dec
adc
mov
clc
mov
dec
cmp
pop
in
add
mov
push
and
add
repnz
mov
dec
pop
cmp
ins
movs
pop
xchg
inc
scas
pop
ds
int3
out
push
or
add
mov
inc
fsub
push
cmps
test
mov
mov
inc
cmp
push
pop
ins
push
test
enter
push
lds
jmp
inc
and
stc
mul
mov
clc
cmc
loopne
fsub
daa
xchg
loopne
ins
adc
push
test
push
and
clc
cmp
frstpm(287
dec
ret
test
add
arpl
mov
test
hlt
cmp
daa
dec
cmp
mov
xchg
test
cmp
jno
cmp
xchg
jmp
mov
test
into
popa
adc
pop
mov
mov
mov
mov
pop
ret
je
fwait
push
arpl
or
push
hlt
push
cs
(bad)
adc
cmp
add
pusha
sub
data16
scas
push
cmps
jl
icebp
cmps
movs
push
call
cmps
loope
and
push
push
out
sub
jmp
add
stos
aad
in
test
and
cmp
push
sub
or
mov
ror
or
aam
nop
addr16
inc
push
ret
test
je
(bad)
add
add
mov
cld
inc
add
inc
loopne
in
cdq
mov
push
mov
push
xchg
shl
push
push
mov
ficom
mov
dec
fsub
popa
sbb
cwde
inc
mov
ficomp
lds
or
sub
mov
sbb
mov
inc
(bad)
data16
add
out
push
nop
mov
movs
bound
push
cli
push
mov
or
fiadd
and
add
clc
push
(bad)
or
inc
ins
not
and
jmp
int
call
shl
cmp
xor
or
rcl
jmp
sub
out
and
loopne
xchg
in
cmp
push
xchg
fdivr
jmp
or
je
inc
and
dec
jmp
out
lea
mov
daa
test
cmp
aaa
push
mov
jge
inc
adc
pop
aas
and
push
pop
je
pusha
aas
add
nop
fist
sub
mov
xor
movs
jge
cmp
ficom
loop
jbe
or
fidivr
les
ds
sti
daa
stos
ins
jns
jg
(bad)
jmp
xchg
dec
das
add
jg
xor
push
int
sbb
jns
fimul
mov
in
or
scas
pop
mov
sub
or
xchg
pop
iret
mov
test
lea
mov
fxch
push
or
call
lock
loop
xchg
mov
shr
add
ret
xchg
pop
push
leave
sub
jns
push
xor
jle
sbb
xor
(bad)
push
fcomp
std
add
pop
push
mov
retf
mov
out
pushf
scas
enter
add
xchg
push
repnz
repnz
pushf
pop
lea
(bad)
jle
rcr
data16
test
arpl
pop
and
mov
(bad)
test
push
inc
rol
es
mov
push
out
std
or
ret
cmp
sub
fcmovb
shr
gs
push
ss
jne
cmp
mov
cwde
scas
adc
gs
jno
ins
push
inc
mov
ss
mov
aaa
jnp
cmp
lock
lahf
sti
cdq
repz
stos
fimul
js
jg
mov
jb
movs
clc
push
pop
mov
jecxz
push
sahf
movs
jecxz
jae
jns
sar
inc
mov
xor
les
ror
fimul
pop
sub
sbb
dec
jecxz
xchg
sbb
arpl
stos
cmp
movs
hlt
addr16
dec
iret
mov
cmp
and
jmp
sbb
pop
cmp
stc
sbb
outs
sti
adc
aas
xchg
mov
push
mov
adc
inc
push
mov
imul
not
inc
imul
mov
jg
je
cwde
inc
sbb
sub
ret
enter
mov
pop
std
(bad)
mov
das
jg
fs
dec
xchg
and
jno
lea
dec
sbb
lods
cmp
mul
mov
xor
pop
out
mov
int3
push
mov
loopne
retf
shl
outs
mov
push
out
mov
mov
and
jge
mov
(bad)
test
sbb
pop
lods
adc
dec
sbb
sbb
aas
movs
inc
mov
mov
ins
call
sub
(bad)
mov
add
outs
and
repnz
ds
xor
rol
mov
adc
mov
inc
bound
jae
xor
in
in
push
ret
fild
punpckldq
cmp
dec
movs
ins
or
mov
pop
lea
js
add
rcl
and
push
pop
loope
adc
outs
fwait
or
pop
into
lods
jp
jmp
in
xor
mov
jae
push
stos
outs
and
fs
loope
pop
sub
sub
push
stos
push
push
ins
mov
lods
(bad)
(bad)
rcr
imul
(bad)
ds
fcmove
loopne
push
aad
shl
out
ror
ror
or
add
jecxz
lock
and
mov
xchg
(bad)
hlt
dec
cmp
shl
pop
xchg
jg
sbb
push
jo
clc
pop
xchg
push
push
dec
mov
xchg
ds
stc
out
mov
sar
adc
mov
sahf
pop
rep
jb
pminsw
mov
call
(bad)
mov
test
mov
(bad)
clc
add
xlat
pop
cmps
jae
push
or
dec
push
nop
jg
dec
fnstcw
pushf
mov
lods
out
lahf
push
das
push
cmps
mov
xchg
adc
cmp
mov
inc
retf
stos
daa
dec
jb
addr16
mov
adc
sahf
pop
mov
jns
xchg
sbb
pop
adc
push
(bad)
pop
repnz
cmp
xlat
add
call
push
or
or
popf
movs
(bad)
(bad)
pop
cmp
mov
adc
push
cmc
cmp
es
jae
call
mov
add
fnstcw
sti
int
sub
sub
lahf
fsubr
and
xchg
adc
fild
sbb
mov
dec
cld
cmp
inc
xlat
movs
sub
out
cld
test
pop
mov
std
pcmpeqw
pop
dec
(bad)
dec
sbb
mov
test
pop
stc
jecxz
(bad)
je
mov
out
test
test
jne
fst
mov
lahf
lods
jle
gs
mov
aad
and
add
xor
fisubr
mov
pop
mov
retf
(bad)
adc
adc
push
add
mov
arpl
pop
dec
test
add
sbb
dec
push
add
fcmove
and
inc
and
inc
xor
out
addr16
push
(bad)
lods
jle
pushf
jg
xor
sbb
loop
mov
loope
pop
test
sub
enter
jns
lods
icebp
cmps
xor
daa
inc
xchg
mov
push
or
push
xchg
inc
inc
push
jmp
frstor
dec
xor
enter
icebp
ins
xor
xor
mov
scas
das
cmc
nop
mov
push
lods
push
add
jns
not
lods
rep
xchg
das
lds
push
lea
inc
sbb
push
cmp
into
out
shl
out
mov
out
cmp
aas
dec
cdq
xor
mov
stos
dec
dec
adc
inc
dec
in
nop
sub
mov
or
loope
dec
push
ss
push
xchg
inc
add
shl
adc
inc
push
cld
adc
push
inc
push
cmc
jl
xchg
jae
pop
adc
inc
mov
rcl
mov
lea
addr16
bound
pop
add
fmul
dec
cld
add
adc
retf
in
add
mov
or
test
mov
cmps
adc
or
and
test
add
mov
mov
cmp
aas
mov
cmp
push
xor
call
adc
inc
sub
or
(bad)
xor
dec
jmp
test
jmp
adc
xchg
test
(bad)
je
add
popa
shl
loope
mov
add
movsx
adc
fmul
xchg
add
mov
fidivr
jb
test
mov
imul
xor
icebp
sub
add
or
and
imul
or
or
cld
mov
inc
int
dec
cmps
or
xor
jg
loope
leave
jle
push
out
sar
or
(bad)
(bad)
push
sub
adc
bound
adc
inc
test
mov
ret
call
cmp
push
movs
lods
dec
inc
xor
test
(bad)
mov
push
js
jp
les
add
fcmove
sub
repz
or
cwde
mov
stc
sahf
js
adc
test
add
jle
add
push
xchg
sub
dec
mov
add
imul
mov
sbb
inc
rol
and
sub
sub
mov
lock
pusha
adc
jmp
and
xor
push
adc
shr
retf
adc
or
call
popa
mov
mov
sub
ja
xor
add
cmp
sbb
and
and
push
mov
push
(bad)
dec
push
in
clc
ins
pop
add
loopne
js
jbe
cmp
push
movs
add
jge
aas
(bad)
mov
inc
push
mov
nop
test
push
inc
ins
cwde
stc
cmp
adc
leave
push
adc
jmp
pop
push
sti
bnd
je
enter
in
inc
js
sbb
ror
cmp
fs
cdq
or
add
movs
mov
sbb
jg
sbb
push
xor
jne
data16
pop
sub
lea
or
mov
movs
jle
cmp
push
dec
sbb
add
inc
push
or
xor
es
cdq
cmps
inc
sub
pop
arpl
aam
adc
xor
xchg
jmp
call
imul
int3
jp
aam
fdiv
and
cdq
sbb
rcr
leave
shl
xchg
inc
inc
adc
rol
dec
pop
mov
add
and
hlt
arpl
ins
ficom
inc
push
push
jmp
jne
lahf
rcl
mov
call
jo
(bad)
daa
jmp
jmp
mov
ret
and
jns
inc
and
loopne
imul
lods
dec
add
add
push
ins
not
and
mov
and
jmp
sbb
dec
icebp
add
push
xor
add
add
sbb
push
jp
jle
xor
inc
push
inc
ret
adc
xor
hlt
mov
add
adc
add
inc
ins
push
mov
push
mov
shr
add
or
adc
push
jge
inc
imul
jge
inc
shr
hlt
sahf
add
sbb
and
mov
dec
fs
dec
push
xchg
xchg
xchg
and
sub
cdq
add
mov
sub
mov
jl
adc
inc
or
lea
(bad)
jb
inc
jo
lds
add
xchg
add
add
jle
lods
push
loop
dec
inc
addr16
shr
lods
pop
inc
scas
pop
adc
push
push
je
add
jg
add
add
jmp
jmp
cmp
dec
add
ret
inc
and
test
or
mov
jmp
mov
test
inc
xor
dec
push
xchg
and
adc
or
rcl
lahf
fld
lock
(bad)
mov
mov
pop
jg
mov
aad
call
or
adc
inc
es
lds
jb
pusha
push
mov
mov
fwait
cmp
add
mov
(bad)
xchg
inc
jmp
jmp
dec
ss
push
fistp
cmp
push
pop
retf
jne
push
xchg
xor
jmp
ffreep
sub
inc
stos
mov
sub
xchg
loope
in
inc
pusha
hlt
push
shl
adc
cli
xchg
scas
jne
inc
ret
stos
dec
or
mov
ins
test
mov
xchg
data16
ins
mov
in
jecxz
push
adc
inc
inc
sub
rol
int
push
jmp
cli
stos
mov
push
outs
call
and
iret
push
aam
mov
push
popf
fs
fldenv
cli
rcr
cdq
xchg
sub
es
cmps
(bad)
jne
inc
and
int3
pop
sbb
jmp
push
hlt
cmp
std
nop
adc
mov
je
out
and
sub
sub
push
jg
jge
test
outs
push
mov
fmul
loopne
mov
and
push
push
push
mov
push
(bad)
sar
ins
cwde
call
aad
lods
mov
push
and
jmp
xchg
call
call
sub
cmc
xor
xlat
fscale
or
fidivr
and
(bad)
out
cmp
call
jecxz
mov
outs
cmc
sub
retf
loopne
or
jne
jne
xchg
push
cmp
mov
mov
mov
cmps
out
(bad)
hlt
sub
or
out
cmp
mov
ror
cli
jbe
mov
xchg
pop
mov
push
jno
fnstenv
popf
rol
sahf
les
mov
or
int3
nop
dec
(bad)
push
bound
add
lock
mov
data16
outs
aam
sbb
push
jmp
xor
jo
or
jg
or
dec
test
test
pusha
je
adc
fwait
mov
adc
in
mov
loope
inc
or
pushf
cmp
neg
imul
dec
adc
lds
adc
es
jne
push
jb
mov
fs
retf
jg
mov
push
daa
mov
jecxz
dec
adc
hlt
je
adc
mov
fdivr
leave
les
jg
cmc
sub
dec
in
and
cdq
aas
out
call
cld
repz
mov
shl
cmp
or
xchg
jmp
(bad)
xor
adc
push
add
jp
call
cmp
push
or
push
jmp
sahf
in
xchg
lods
outs
pop
and
xchg
dec
test
jae
in
fsubr
and
mov
cmps
mov
mov
xlat
jmp
or
lahf
adc
push
and
xor
loopne
pop
shr
or
bound
mov
ins
cmp
test
mov
aam
test
xchg
dec
or
and
pop
add
push
sub
(bad)
push
scas
pop
ficom
outs
push
push
retf
adc
adc
sti
sbb
jne
sub
or
cdq
std
pusha
xor
rcr
outs
cmp
pop
push
dec
mov
adc
neg
or
out
jge
jne
mov
das
ret
(bad)
in
add
or
or
fldenv
dec
mov
in
fs
sar
push
test
into
ret
iret
lods
or
arpl
pop
es
push
retf
int
xlat
and
push
mov
ja
push
cli
mov
cmp
jmp
mov
mov
out
jg
shl
dec
push
or
imul
push
inc
loopne
sub
xor
(bad)
adc
mul
bound
mov
dec
stc
push
(bad)
jno
js
mov
cmp
inc
dec
stos
mov
and
daa
ja
mov
jmp
and
aam
push
aad
jmp
push
popf
dec
xchg
dec
push
xchg
dec
loopne
pop
xor
arpl
xchg
dec
(bad)
call
ret
nop
int3
icebp
push
lods
out
and
stos
push
jmp
add
jne
mov
repnz
jmp
jmp
(bad)
sbb
and
call
sbb
mul
(bad)
push
add
and
pop
rcr
outs
xchg
fsub
and
fbld
fdivr
dec
nop
jmp
jnp
retf
test
and
out
add
add
out
pop
test
popf
bound
or
out
hlt
sbb
jo
xor
rcr
imul
adc
and
dec
jp
outs
cmp
cmp
inc
ins
cmps
test
dec
or
fidivr
fistp
inc
test
div
stc
pop
inc
or
mov
nop
mov
aaa
xchg
push
add
bound
inc
cdq
leave
fist
add
cmp
mov
add
dec
pop
fmul
sub
inc
lds
push
loopne
mov
cs
push
and
dec
xchg
sbb
out
dec
mov
loopne
fsubr
or
sti
jo
test
cmp
ret
data16
popa
or
jmp
loopne
stos
imul
or
test
test
retf
test
retf
mov
xchg
jmp
pop
mov
mov
imul
mov
arpl
enter
sti
call
stos
mov
jecxz
ins
jg
jnp
test
mov
fisubr
sub
xchg
xor
add
add
scas
and
dec
ret
or
and
push
in
shl
pop
push
sbb
pop
inc
and
sub
push
movs
lea
retf
push
int3
mov
gs
sub
mov
sar
or
fldcw
pop
jmp
mov
stos
(bad)
xor
mul
and
push
push
or
stos
popa
das
push
inc
xchg
xchg
mov
mov
call
push
mov
pop
sbb
or
fwait
ja
add
adc
cmp
test
jl
es
jne
fcomp
pusha
jge
jg
push
push
imul
mov
sahf
mov
push
sar
sub
push
mov
push
sti
mov
es
fimul
jmp
mov
outs
xchg
rcl
or
push
loop
in
loope
push
fisubr
jmp
cmp
mov
daa
push
pusha
jp
add
and
mov
fwait
inc
and
jnp
jle
add
add
in
cmp
push
loop
adc
pop
cmp
outs
hlt
jnp
fstp
mov
jno
test
fs
fdiv
fistp
xor
xor
push
outs
fwait
cmp
fild
dec
mov
fimul
jge
push
shl
mov
xor
test
jge
and
test
xchg
cmp
mov
cmp
and
add
jmp
and
push
pop
test
push
ficom
push
push
loope
jne
fsubp
jae
jp
mov
adc
bound
scas
push
mov
add
sub
(bad)
into
ficom
inc
add
dec
gs
xchg
outs
nop
(bad)
add
sub
fisttp
jb
lea
xor
mov
(bad)
gs
imul
xchg
inc
mov
add
pop
imul
inc
xor
aas
ins
xor
xor
movzx
and
retf
mov
jmp
xchg
and
test
cmp
nop
shl
les
lock
dec
rcl
push
clc
sar
mov
sub
test
test
push
ret
add
or
aam
or
add
adc
jne
jae
test
pop
leave
outs
push
cmp
mov
xor
popa
mov
jge
mov
mov
add
jmp
add
or
cmp
dec
div
mov
test
lods
fwait
mov
mov
dec
pand
pushf
cdq
cmp
(bad)
sar
and
mov
add
xor
mov
sub
inc
pushf
xchg
dec
shl
mov
push
fdivr
xlat
shl
mov
mov
les
jbe
fmul
rcl
movhps
aaa
xor
or
test
data16
sbb
fwait
mov
leave
in
add
inc
or
lea
mov
shr
fdivr
mov
cmp
(bad)
ret
movs
shr
test
lods
jns
jo
retf
or
clc
cmp
mov
add
push
dec
nop
test
fbstp
stc
sar
mov
push
aad
jecxz
push
adc
xor
inc
add
sub
je
std
dec
sub
fldenv
mov
jle
mov
sub
rcl
xchg
fidivr
out
jb
sub
jge
push
js
inc
in
push
mov
cmps
adc
push
clc
sub
dec
sbb
(bad)
inc
mov
adc
sub
call
icebp
dec
add
test
pop
rol
sbb
out
mov
mov
hlt
call
adc
push
scas
mov
scas
and
(bad)
pop
mov
inc
jno
adc
inc
inc
push
pusha
je
movs
fsubp
ret
sbb
jmp
push
sbb
inc
xlat
push
push
rcr
hlt
push
dec
cwde
mov
xchg
fmul
pushf
sbb
pop
inc
ror
mov
xor
hlt
dec
fistp
mov
test
add
je
dec
mov
or
and
sahf
sub
(bad)
add
or
xchg
mov
adc
leave
sub
mov
loope
loop
add
cwde
lock
add
pushf
mul
test
stos
cmps
les
call
jbe
pop
dec
cmp
pop
enter
stc
test
fcom
mov
add
rcr
jns
and
xchg
fwait
push
and
cmp
sbb
sbb
(bad)
adc
xchg
popa
cdq
stos
or
pushf
dec
loopne
jge
xchg
inc
adc
cmc
call
(bad)
push
lods
and
inc
mul
test
sub
ret
pop
push
jno
push
xlat
mov
lods
dec
cdq
and
push
movs
in
shr
ror
and
or
retf
adc
inc
adc
xchg
mov
add
cmp
adc
sbb
stos
and
xchg
adc
jecxz
dec
or
jno
stos
and
addr16
xor
adc
ror
inc
mov
pop
ja
or
mov
sbb
jno
retf
or
outs
sub
retf
nop
cld
mov
movhps
push
idiv
pushf
pop
xor
and
cmp
scas
jbe
and
xchg
cmp
or
adc
fs
daa
dec
out
adc
(bad)
adc
push
pop
daa
mov
popa
je
xor
pop
sbb
(bad)
(bad)
imul
hlt
inc
adc
pop
xchg
or
mov
pop
mov
dec
lods
push
rcl
stos
cdq
xor
lds
dec
neg
xchg
and
jae
push
xor
push
cli
cs
push
fcomp
dec
pop
pop
fsub
adc
dec
dec
mov
sub
fwait
xchg
sub
es
adc
mov
aas
inc
sbb
xchg
shr
bound
jmp
add
xlat
mov
ret
adc
cmp
fsubr
sub
cmp
(bad)
mov
or
push
aaa
sub
jmp
xchg
leave
mov
xor
dec
mov
and
stos
pop
test
test
js
adc
push
rcl
leave
dec
inc
push
popa
dec
sbb
jl
xchg
pushf
mov
sub
mov
push
mov
inc
push
mov
or
retf
xchg
loop
dec
ins
cmp
cmp
sub
pop
mov
cmp
inc
inc
test
xor
fld
pop
cmp
jb
pop
and
test
inc
outs
pop
or
or
mov
je
je
inc
sbb
test
xchg
cdq
xor
stc
lods
jbe
lods
mov
mov
in
adc
and
xor
mov
add
add
push
xor
add
cmp
dec
cmp
fnstcw
movs
xor
mov
outs
sub
sub
and
lods
movs
xchg
sub
cmp
push
sbb
and
adc
loope
cli
jmp
mov
arpl
fcmovu
ret
xchg
inc
sbb
movs
xor
push
or
out
mov
and
jne
sbb
int3
dec
loopne
ror
and
(bad)
int3
mov
pop
rol
ret
jne
dec
sbb
in
call
mov
xor
in
pop
mov
and
pop
adc
movs
xchg
bound
add
or
sbb
lahf
fwait
jne
mov
xor
or
inc
sbb
jne
jne
(bad)
es
xchg
test
jns
jae
sub
push
inc
adc
test
pop
and
sbb
sti
sti
popf
and
je
dec
lea
push
add
push
push
frstor
and
xchg
icebp
mov
mov
adc
push
sti
xchg
xchg
into
popa
je
lahf
cmp
mov
jp
adc
jns
xchg
or
test
and
and
(bad)
pop
pop
add
pop
inc
call
call
lock
fisubr
ret
imul
les
or
add
cmp
outs
jno
adc
inc
push
xor
loopne
or
and
mov
sbb
xor
jmp
sub
fdiv
xchg
xchg
fmul
cmp
jle
mov
ins
fsub
and
nop
sub
test
mov
pop
push
ret
mov
sub
sub
and
clc
mov
mov
icebp
test
mov
das
jmp
jmp
repz
movs
dec
push
xchg
outs
test
cs
mov
mov
xlat
add
pop
xchg
enter
fwait
mov
int3
cmp
(bad)
retf
mov
push
nop
shr
sub
jnp
into
mov
push
movs
mov
sub
int
pushf
add
xchg
inc
jbe
lods
add
push
jne
mov
out
sbb
stc
xor
call
dec
xor
pop
and
fldenv
fucomp
pop
push
mov
jmp
int3
inc
cdq
add
clc
int3
pop
dec
lock
mov
xor
mov
dec
inc
sub
add
mov
mov
sub
pop
adc
adc
pop
push
or
cld
jmp
dec
push
xchg
add
or
pop
inc
jb
daa
inc
add
push
mov
xchg
jmp
pop
and
imul
inc
mov
add
inc
add
push
add
xchg
enter
mov
fs
mov
inc
ror
add
cmp
ss
pop
mov
bound
or
pop
or
mov
add
and
mov
lods
push
inc
cwde
pop
ror
test
(bad)
push
or
imul
je
imul
push
inc
imul
mov
mov
in
add
and
call
sub
push
xchg
pop
call
lahf
nop
nop
pop
mov
jle
add
cmp
movs
mov
mov
enter
adc
pop
inc
push
or
and
scas
cmps
mov
inc
push
test
mov
or
or
inc
popa
xor
jle
pusha
push
aaa
pop
inc
hlt
call
or
pushf
inc
and
push
imul
and
pop
push
retf
push
mov
cmc
inc
repz
pop
into
fdivr
dec
retf
sbb
outs
jbe
mov
clc
jmp
xor
nop
push
aam
stos
hlt
push
sub
inc
pop
hlt
or
dec
repnz
mov
mov
sub
adc
aam
mov
out
outs
sub
adc
call
es
mov
je
pop
test
inc
or
dec
aad
iret
mov
inc
xor
or
outs
cmove
jne
mov
jmp
jmp
push
mov
dec
add
psubsw
dec
retf
dec
inc
dec
cmp
push
xor
jb
enter
inc
push
out
outs
sub
jns
xchg
adc
ret
push
out
(bad)
pop
shl
retf
push
mov
or
outs
cwde
push
(bad)
loopne
dec
xchg
add
mov
and
rcl
adc
xchg
ror
enter
cmp
mul
and
addr16
inc
in
enter
sub
repnz
imul
ror
adc
cmp
lock
inc
or
fcomp
hlt
sub
fsub
fmul
in
mov
pop
or
and
sub
rol
mov
sbb
repnz
hlt
inc
jno
inc
jecxz
jl
mov
sub
inc
cwde
or
enter
sti
int3
mov
push
das
test
pop
mov
pop
and
jne
or
ror
push
aaa
xor
adc
lods
dec
aad
and
loop
inc
bound
cli
xchg
push
push
sbb
sahf
mov
push
push
test
mov
je
sub
sbb
and
mov
inc
ins
sub
cmp
pop
xor
add
push
je
cmp
dec
jne
rol
frstor
clc
imul
loopne
adc
dec
imul
add
clc
dec
out
pop
push
mov
push
sbb
nop
mov
push
adc
mov
int3
loopne
int
fs
shr
fyl2xp1
or
cmps
xchg
cmp
lods
mov
pushf
pop
xchg
ror
fnsave
ins
cmp
mov
add
add
and
and
shl
push
xor
push
add
and
neg
jne
rol
or
mov
fistp
push
mov
xchg
retf
jmp
fmulp
jmp
inc
add
mov
sub
or
lods
or
(bad)
repz
jmp
or
dec
cwde
push
xchg
inc
add
in
xchg
shl
mov
and
add
shl
push
dec
lea
gs
dec
jb
mov
adc
add
jmp
sub
int3
mov
inc
inc
loope
pop
and
int3
dec
test
in
jle
xchg
aad
(bad)
dec
jne
xor
add
ja
cwde
adc
call
inc
push
sub
dec
dec
xor
daa
imul
sbb
add
fdiv
ds
ficom
or
inc
jmp
or
cmps
lds
daa
and
scas
inc
add
sub
lods
pushf
add
xchg
cmp
or
sub
cmps
push
cs
add
sub
leave
inc
in
add
jns
movs
cwde
and
push
inc
or
dec
adc
or
jge
lods
push
data16
sar
fcomp
nop
ret
jae
and
mov
ins
hlt
inc
xor
mov
lea
fs
ja
jmp
mov
imul
sub
outs
dec
retf
pop
xor
test
add
sbb
and
rol
jmp
mov
nop
pop
stc
xchg
rol
sub
call
mov
mov
dec
add
sahf
and
sbb
cmp
mov
nop
nop
test
cmc
adc
cdq
ja
cld
jle
or
adc
adc
push
mov
mov
std
dec
xchg
and
enter
(bad)
xchg
bnd
and
imul
inc
adc
call
pop
in
icebp
and
push
test
loop
fnsave
and
push
mov
pop
(bad)
sbb
jnp
(bad)
cmp
jp
pusha
test
push
pop
or
cmps
mov
push
int
jg
(bad)
mov
jmp
test
ins
out
add
cmps
mov
xlat
cli
jne
mov
inc
fldenv
out
dec
sub
push
repz
push
shl
xchg
aam
mov
sbb
neg
int
sub
sar
sub
loop
mov
jmp
(bad)
lods
pop
adc
xchg
push
push
mov
sub
dec
or
adc
rcl
or
xchg
fldenv
inc
add
mov
in
jecxz
or
add
mov
xchg
mov
add
and
xadd
idiv
mov
sti
mov
ret
inc
jg
in
cmc
xor
addr16
or
icebp
popa
jmp
fdiv
cmc
ds
add
mov
and
cmp
sbb
in
ja
popf
and
push
fisub
rcl
sub
scas
mov
int3
push
xor
test
nop
inc
jne
out
aam
xor
inc
popf
shl
push
mov
and
ja
repnz
out
mov
dec
push
mov
test
loope
inc
fcom
lods
nop
inc
dec
xor
call
outs
shl
retf
pop
cwde
mov
or
inc
or
xor
fs
jg
sub
pop
mov
fiadd
cmp
cli
add
push
push
push
shl
cmp
call
(bad)
out
fnsave
lock
mov
pop
sbb
in
lds
inc
lods
outs
mov
adc
or
outs
test
clc
pusha
cmps
sub
lahf
sub
cmps
push
dec
sbb
call
adc
imul
out
and
pop
dec
sub
or
xchg
dec
xlat
cmp
lds
mul
push
and
xchg
xchg
gs
dec
das
dec
dec
call
or
lds
push
mov
xor
cwde
xor
(bad)
in
xchg
cli
pop
xchg
fadd
push
lods
jmp
cs
in
mov
in
dec
push
mov
in
push
sub
dec
add
push
xchg
jbe
and
retf
loop
in
sub
add
sub
loop
xor
push
push
xchg
xor
mov
xor
mov
or
adc
cwde
inc
rcr
push
adc
icebp
push
(bad)
xchg
call
pop
aaa
sub
clc
jge
pusha
aam
cdq
cs
mov
mov
adc
pop
push
fcomp
dec
mov
inc
xchg
ins
push
fnstenv
add
push
gs
mov
test
pop
mov
ret
jmp
dec
pop
mov
sub
adc
sub
(bad)
outs
adc
add
leave
push
xchg
js
in
enter
test
aam
adc
jmp
out
inc
ss
std
js
push
add
mov
aam
or
dec
cmps
in
push
inc
cld
xor
fsubr
mov
dec
movs
mov
fadd
test
add
mov
adc
push
retf
dec
arpl
inc
inc
mov
leave
pop
xor
(bad)
cmps
rcl
mov
and
out
jo
add
fsubr
stos
push
daa
fisubr
mov
imul
lea
pop
es
mov
inc
leave
or
push
sub
cwde
jmp
jns
inc
pop
push
or
ja
add
fstp
add
cmp
jae
nop
movs
inc
fcmovb
jle
adc
cmc
push
jb
jmp
sbb
daa
dec
pop
cld
les
inc
(bad)
ds
out
cwde
jae
pop
leave
add
push
inc
stc
repnz
sti
(bad)
stc
into
jnp
push
pop
pop
lock
jae
inc
or
imul
mov
das
or
data16
jge
push
sbb
in
jmp
add
loop
xor
inc
add
mov
jne
or
xchg
stc
clc
enter
mov
imul
mov
mov
cmp
ins
push
and
add
inc
jl
data16
push
out
cmp
call
push
stos
mov
adc
push
add
mov
sub
(bad)
scas
fmul
mov
(bad)
mov
aam
mov
push
hlt
test
xchg
sub
dec
mov
(bad)
xor
push
fwait
sbb
clc
push
ja
jmp
sbb
daa
add
mov
lea
lds
xchg
pushf
out
inc
sti
mov
adc
adc
jb
sbb
es
sahf
mov
popa
in
jno
loope
or
test
mov
jnp
cmc
add
mov
ss
sbb
lods
dec
jle
out
test
ins
or
jmp
xor
adc
inc
gs
dec
pop
xchg
outs
cwde
inc
daa
fnsave
bound
jmp
ror
jae
jge
retf
mov
add
in
xor
dec
pop
push
enter
pop
std
sub
and
mov
dec
and
dec
cmp
push
mov
adc
sbb
lea
push
out
sbb
mov
out
dec
jne
mov
ret
xchg
rcr
movs
push
xchg
rcl
and
fiadd
jne
sbb
je
xchg
xor
cld
or
cld
popf
iret
lds
aaa
dec
push
jnp
xchg
dec
pusha
xchg
or
adc
or
jns
adc
mov
movs
xchg
jne
cwde
xor
mov
(bad)
(bad)
cdq
and
in
push
fcom
in
sbb
add
sub
push
sub
sbb
xor
cmp
test
jne
ret
aad
add
cmp
or
add
and
cmp
push
or
je
daa
bound
in
inc
les
push
inc
(bad)
call
jae
and
pushf
(bad)
mov
and
shr
inc
adc
adc
add
cmp
jl
xchg
push
and
or
bndstx
jmp
pop
mov
jno
into
cmp
dec
dec
mov
ret
cmp
or
xchg
(bad)
xor
vmwrite
add
adc
cmp
xchg
cmp
sbb
movs
ds
cld
call
sub
nop
dec
mov
leave
mov
mov
outs
or
inc
in
dec
out
imul
dec
lahf
fcom
mov
fcmovbe
out
push
fld
push
(bad)
mov
je
rcr
fsubr
out
mov
test
push
mov
idiv
push
cwde
dec
aam
cmc
mov
fadd
jo
cmp
call
or
mov
add
pop
xchg
sub
add
pop
inc
adc
dec
ret
mov
sbb
cld
cmc
xorps
xor
stos
outs
adc
mov
imul
inc
jmp
add
jp
lahf
pop
shl
push
ret
fwait
xchg
add
dec
mov
sbb
stos
or
call
or
or
jmp
dec
ins
leave
repz
iret
iret
cmp
or
add
fstp
mov
nop
clc
adc
into
cli
or
cmps
mov
push
pop
jg
push
mul
add
call
outs
mov
sub
xchg
lahf
(bad)
cmp
or
clc
fadd
mov
mov
pushf
sbb
mov
stos
aam
cli
adc
shl
test
push
pop
imul
pop
xor
push
cmp
sub
aam
movs
xor
jp
in
loop
sub
push
sbb
sti
push
mov
rol
and
test
add
or
loopne
pushw
loope
or
sbb
stos
fcmovbe
xchg
xor
in
jg
sub
jp
inc
jp
stos
test
bound
fld
or
push
pop
test
mov
test
sub
lods
or
inc
jl
dec
dec
pop
call
fsubr
inc
jbe
mov
arpl
loopne
push
call
xchg
fidivr
lahf
mov
and
dec
jbe
cmp
cmp
inc
inc
test
lahf
sub
shl
xor
adc
jg
jl
inc
sbb
push
mov
mov
repz
jl
je
iret
es
xchg
jbe
inc
sahf
mov
loope
pop
push
out
add
cmp
outs
stc
adc
mov
cs
cwde
sub
inc
ins
ss
ret
cmps
imul
and
add
clc
sub
push
nop
sbb
jp
in
add
nop
hlt
add
mov
inc
add
cdq
outs
pop
pushf
inc
push
adc
loop
add
jl
outs
xor
icebp
ins
loop
sub
adc
aam
inc
or
js
sub
add
inc
test
(bad)
push
mov
in
add
shl
ins
pop
mov
xor
xchg
lods
mov
or
add
out
sbb
(bad)
push
dec
or
lods
shl
test
pop
xchg
movs
aaa
nop
sahf
mov
add
dec
push
int
mov
add
adc
push
and
call
test
es
mov
cmp
les
rcl
call
jmp
add
(bad)
in
xchg
nop
or
adc
xchg
or
inc
xor
jo
push
add
into
mov
inc
push
or
jmp
dec
pop
pusha
inc
mov
add
sar
in
je
ds
xchg
sub
nop
lea
add
dec
lahf
rcl
ja
push
adc
repnz
add
jns
add
aam
xchg
push
ja
cmp
sub
test
or
mov
mov
mov
xchg
inc
neg
inc
inc
test
sbb
add
inc
mov
nop
mov
adc
(bad)
not
(bad)
pusha
aam
and
dec
add
test
sub
sar
xchg
xor
xor
adc
xchg
and
push
pop
jno
bound
dec
in
add
lock
and
mov
movaps
jmp
push
pop
push
xchg
pop
add
in
mov
ror
dec
jge
mov
pop
cmp
pop
test
cld
and
or
sub
nop
inc
and
dec
cwde
bound
mov
mov
cmp
mov
cld
mov
pusha
or
retf
or
or
add
adc
shl
or
add
leave
cmp
daa
shr
mov
or
inc
movs
lds
cmc
inc
push
outs
scas
ins
sbb
adc
pop
test
cmp
fs
aam
jmp
xchg
rol
mov
inc
inc
test
imul
xchg
adc
mov
adc
jns
pop
xchg
or
nop
clc
mov
loopne
push
push
in
test
fst
mov
xchg
add
add
test
push
pusha
mov
pop
add
fmul
cld
or
pop
push
or
iret
xchg
lock
cdq
or
jae
sub
aaa
movs
push
sar
into
inc
and
aad
or
cmp
push
inc
inc
push
jmp
mov
pop
enter
or
cmp
cmps
adc
xor
jne
inc
push
adc
retf
adc
clc
ret
movs
(bad)
lds
aam
inc
mov
mov
outs
jb
mov
mov
loop
sub
je
sbb
jo
cld
and
fmul
push
push
xor
xchg
ror
jo
rcr
rcl
or
pop
out
inc
sub
outs
in
adc
jae
adc
push
and
jle
cmp
inc
fisub
lahf
add
mov
push
dec
push
les
jb
cmp
mov
fs
aam
mov
push
repz
or
shl
daa
cmp
cmps
ret
sbb
es
add
push
push
addr16
iret
fisttp
push
xor
mov
push
xchg
aam
das
sbb
test
into
mov
and
xor
fcom
mov
fcom
push
sub
js
add
xchg
pop
xchg
and
jmp
or
cmp
dec
and
sbb
or
mov
xor
mov
mov
cld
cmp
movs
stos
add
dec
or
(bad)
hlt
push
fstp
gs
mov
and
or
pop
or
nop
test
xor
push
pop
aas
sub
cmp
dec
add
icebp
in
pushf
les
add
and
std
pop
push
mov
adc
movs
bnd
push
inc
add
xchg
movs
movs
int
mov
gs
pop
and
call
icebp
test
mov
enter
or
sbb
nop
dec
and
out
mov
inc
sub
or
mov
sbb
mov
xor
sbb
push
sub
sub
ins
pop
or
inc
in
popa
in
call
mov
pop
cwde
retf
xchg
jmp
push
sub
addr16
mov
pop
xor
mov
or
cdq
pop
push
vmovlps
pop
sahf
in
shr
fist
push
xchg
dec
inc
ret
pop
xchg
std
lods
jmp
inc
jns
push
sbb
ins
gs
inc
push
inc
mov
mov
xchg
sbb
xor
mov
das
add
bound
adc
cdq
pusha
sbb
jp
sbb
or
push
dec
inc
nop
mov
je
test
fcom
jl
pop
retf
and
push
adc
sub
dec
sbb
cmp
jmp
or
dec
push
jmp
sub
mov
fidiv
pop
rcl
into
test
dec
fs
or
xlat
or
ins
push
and
pop
or
mov
mov
xchg
dec
ds
push
mov
sar
addr16
xchg
test
je
dec
mov
or
mov
inc
adc
in
rol
xchg
or
and
push
cmp
fwait
imul
add
gs
add
sbb
push
xor
test
add
add
popa
test
(bad)
mov
cmp
add
add
lods
test
or
and
mov
fnstcw
and
sti
icebp
cmp
retf
mov
push
retf
clc
aam
pop
dec
aam
out
test
cmp
mov
arpl
dec
nop
or
inc
nop
jge
or
nop
ins
or
and
nop
in
nop
push
out
pushf
pop
xor
test
test
ror
test
and
jno
pushf
mov
dec
push
push
adc
sub
in
test
fnstcw
sub
jp
jle
inc
xchg
jmp
push
mov
push
adc
mov
jb
mov
cmp
push
add
lds
(bad)
imul
adc
sbb
loope
mov
mov
fcom
jne
ds
adc
pop
xchg
push
mov
(bad)
nop
lods
or
inc
sub
mov
test
mov
add
(bad)
in
sbb
push
mov
jmp
test
stos
jne
xor
cmps
fdiv
or
dec
xchg
or
loope
out
cmp
arpl
jno
into
add
fsub
dec
enter
repnz
dec
or
adc
xchg
pusha
ss
xlat
mov
fmul
mov
fisttp
dec
mov
xchg
in
or
ror
ins
mov
push
adc
rcr
push
enter
push
(bad)
add
lods
add
retf
lds
add
mov
or
rcr
ror
mov
xchg
inc
rol
fsubr
or
sbb
push
lahf
jnp
mov
or
mov
pop
pop
sbb
jl
push
shr
add
sbb
push
sub
sbb
(bad)
cmp
sub
nop
mov
push
(bad)
(bad)
jb
out
jmp
jno
pop
and
sub
clc
sub
push
mov
mov
mov
aaa
inc
push
pop
mov
loopne
add
and
dec
inc
test
or
mov
and
stc
mov
dec
mov
mov
inc
adc
pop
je
es
dec
add
and
stos
out
jno
sub
push
sti
idiv
ja
inc
and
bnd
inc
adc
je
shl
es
dec
in
push
fisub
pushf
inc
or
aas
inc
outs
push
and
mov
das
ror
add
and
jmp
dec
xchg
test
dec
push
inc
fild
xchg
jo
adc
pop
inc
call
test
call
or
(bad)
fist
adc
push
mov
xlat
pop
leave
movs
shl
or
sub
sar
add
fidiv
or
mov
mov
adc
aad
test
pop
pop
and
mov
push
in
sub
cmp
retf
addr16
xor
push
push
(bad)
xlat
rol
push
ficomp
mov
pusha
mov
(bad)
cs
jmp
inc
push
and
mov
hlt
push
mov
jecxz
gs
sub
movs
jno
adc
cwde
pop
clc
cmps
dec
push
lods
dec
iret
cwde
aaa
aam
jns
and
pop
sub
xchg
into
add
pop
mov
push
jmp
scas
outs
and
addr16
mov
adc
and
jne
pushf
pop
push
and
xor
stos
push
in
push
jp
mov
cwde
cld
and
xchg
enter
dec
fs
inc
enter
mov
xchg
xchg
or
mov
and
mov
xor
cmp
inc
ins
cmp
inc
(bad)
loopne
sahf
dec
push
fisub
jns
loope
dec
jp
hlt
imul
push
xor
retf
pop
ret
sbb
or
in
xchg
sbb
push
sub
pushf
fst
movs
sub
je
shl
push
stos
(bad)
cmp
test
xor
push
mov
(bad)
clc
dec
sbb
inc
hlt
jmp
adc
jmp
lods
add
dec
sub
cmp
mov
(bad)
mov
cmp
jecxz
cmp
inc
inc
mov
dec
cmp
loopne
jne
xor
cld
movaps
mov
imul
dec
sub
loopne
xor
push
inc
test
push
mov
fs
pop
lea
sbb
in
lds
push
xor
and
rcl
mov
mov
retf
jbe
and
push
mov
adc
enter
shr
push
aas
push
add
retf
inc
push
bound
fld
push
popa
mov
lock
lods
xchg
rcl
mov
mov
ins
adc
adc
pushf
lods
add
or
xor
bound
imul
mov
sbb
sbb
hlt
sar
xchg
psubq
cmp
out
sub
clc
cmps
(bad)
mov
pop
jno
xchg
iret
and
sbb
push
pop
mov
cmc
sub
pop
jae
push
(bad)
sub
mov
pop
(bad)
adc
adc
adc
aam
or
or
call
inc
pop
jno
or
adc
xchg
inc
fs
xchg
jbe
into
sbb
jle
in
enter
push
mov
test
das
inc
imul
stos
pop
push
add
imul
mov
ret
pop
in
mov
mov
inc
jmp
pop
mov
sbb
mov
aam
or
mov
xchg
inc
movs
js
pushf
mov
in
leave
jecxz
push
xor
inc
push
loope
nop
outs
xor
mov
push
mov
mov
or
push
lock
or
sbb
jge
push
imul
mov
iret
(bad)
in
cwde
ins
push
push
push
clc
jp
cmp
push
fs
pop
xor
mov
push
test
adc
into
mov
jb
lahf
cmp
sbb
clc
push
sti
xchg
push
dec
test
dec
push
push
repz
jl
mov
in
push
mov
cmp
ins
push
aam
mov
popa
lods
lahf
mov
sbb
(bad)
js
push
pusha
pop
push
dec
rcl
mov
dec
xor
in
jns
mov
lods
mov
in
xor
dec
imul
mov
xor
mov
sahf
ret
jb
nop
in
mov
adc
fdivp
ins
in
jnp
jns
retf
popa
in
hlt
cld
idiv
jecxz
push
or
daa
je
lods
mov
inc
dec
push
jnp
ret
pop
ins
push
stos
popa
int
push
push
shr
adc
ins
cld
push
add
sahf
enter
(bad)
jnp
add
cmp
pop
mov
pop
fdiv
xchg
xor
mov
fiadd
add
mov
ja
inc
pop
inc
imul
pop
cmp
shl
sbb
mov
call
js
sub
adc
and
ret
out
les
sub
sar
push
mov
pusha
in
jge
mov
and
jmp
adc
push
adc
mov
mov
xor
mov
mov
pushf
sbb
cmp
ins
pushf
pop
mov
(bad)
cwde
push
jmp
mov
mov
add
sbb
mov
test
ror
addr16
add
leave
jns
out
inc
sub
xchg
fadd
fmul
or
pop
loopne
dec
push
mov
push
and
xchg
test
dec
mov
or
test
sbb
test
push
sti
add
or
pop
loopne
lods
jmp
xchg
lods
add
or
mov
adc
sbb
and
das
adc
push
and
push
push
shl
pop
leave
inc
jmp
cdq
push
or
cmp
push
or
and
dec
daa
mov
or
pop
sub
or
push
or
jge
cmp
sub
xchg
or
dec
neg
ret
pusha
or
and
loop
clc
push
int3
mov
mov
adc
dec
(bad)
add
mov
xchg
mov
mov
repz
mov
int3
aad
xor
push
or
adc
xchg
sbb
sar
in
jmp
int3
movs
dec
cmps
xchg
ins
mov
or
les
jle
pop
mov
dec
push
sub
mov
mov
shl
or
and
push
imul
sub
dec
fild
push
mov
jno
adc
ret
mov
aaa
push
sub
or
int
jne
rcl
in
scas
test
in
jne
test
int
cli
fs
ret
or
imul
add
mov
mov
sub
ret
test
icebp
mov
push
inc
cmc
push
or
imul
imul
movs
mov
and
push
or
fs
adc
int3
sub
arpl
rcl
pop
inc
pop
dec
push
gs
les
dec
mov
or
adc
les
mov
test
jae
test
mov
in
xchg
mov
jns
dec
pop
inc
jg
daa
and
sub
imul
or
or
dec
push
cmp
and
aad
aam
cwde
movs
push
shl
sar
jmp
lods
loopne
movs
dec
out
dec
add
push
sbb
cmp
jno
in
aam
bound
mov
jno
fst
jb
jmp
pop
add
cmp
dec
adc
dec
and
repz
or
sbb
pop
cmp
sub
and
or
mov
jne
mov
int3
mov
ss
mov
sbb
mov
fld
aam
inc
add
and
inc
xor
inc
or
sub
imul
push
in
mov
or
cdq
adc
mov
out
retf
in
sub
enter
mov
mov
or
js
mov
pop
test
pop
xor
ret
cmp
lods
add
sbb
add
test
mov
inc
jg
or
mov
addr16
idiv
jae
retf
and
mov
jb
dec
cmp
fcomp
cmp
jb
movs
sar
rcl
or
push
aaa
push
and
retf
mov
(bad)
push
pop
push
fcom
cmp
cdq
mov
je
inc
(bad)
cmp
jno
fcom
fild
pop
inc
inc
push
pop
xor
je
push
mov
fimul
test
je
sub
inc
sub
xchg
sub
aam
xchg
div
inc
dec
lea
pop
inc
xor
add
aam
and
cmp
mov
call
cmp
xchg
push
movs
jmp
aas
or
lock
aaa
xchg
add
adc
adc
jmp
cmp
out
leave
jecxz
push
pop
arpl
mov
outs
xor
sub
jbe
pusha
xor
cmp
imul
jne
push
enter
inc
push
xor
xor
sub
mov
popa
dec
xor
(bad)
dec
sub
ror
fs
mov
or
mov
movs
je
rol
mov
enter
fsubr
arpl
les
jmp
loopne
cmp
mov
jb
jno
clc
xor
outs
popf
je
jnp
add
add
test
fnstenv
adc
add
(bad)
sbb
add
pop
leave
jmp
mov
and
out
add
push
mov
add
data16
cld
jmp
mov
cmp
nop
jne
add
pushf
inc
movs
nop
call
mov
or
call
push
enter
cs
mov
pop
jb
pop
ins
fldenv
push
cmp
dec
in
jmp
(bad)
sub
sbb
leave
add
mov
sub
and
or
jmp
and
and
test
test
je
mov
dec
xchg
enter
xchg
mov
adc
ret
jmp
adc
stos
int3
push
or
out
stos
outs
xchg
sub
pop
mov
mov
mov
or
or
mov
pusha
in
mov
aam
push
push
mov
push
(bad)
push
sub
icebp
sar
shl
ins
sbb
movs
jl
pop
push
dec
stos
sub
push
lea
jp
fiadd
push
cmp
mov
xchg
inc
jecxz
xor
push
leave
sbb
cs
dec
popa
xchg
imul
adc
cwde
ja
(bad)
popw
cwde
xchg
arpl
xchg
mov
cmp
test
test
jp
xchg
dec
test
mov
mov
rcl
push
test
pusha
mov
mov
jo
mov
test
jl
mov
jo
cmp
jg
xchg
fld
jns
bound
push
mov
push
xlat
daa
xor
lea
xchg
aaa
imul
movs
pop
int3
mov
mov
push
outs
mov
adc
xor
mov
xchg
xor
ror
movs
sub
push
jl
(bad)
and
or
movs
inc
mov
cmp
xchg
(bad)
and
in
inc
pop
icebp
shl
test
scas
ins
movs
movs
loop
sub
enter
pushf
or
rol
out
stos
jp
mov
jns
dec
scas
inc
mov
bound
sahf
inc
inc
add
enter
jmp
mov
or
or
push
mov
add
sar
rcl
call
inc
call
dec
add
stc
sbb
push
cmp
(bad)
(bad)
xchg
cli
push
sub
sub
int3
sbb
into
mov
mov
xchg
inc
adc
ds
sub
in
cmp
sub
sub
aam
and
sub
call
ins
jne
sti
adc
(bad)
nop
add
adc
add
add
mov
stc
xor
sbb
out
sub
jne
addr16
jne
xor
(bad)
xchg
or
adc
push
xlat
push
mov
xchg
mov
sub
cmp
push
outs
xor
mov
js
or
inc
xchg
lea
and
dec
bound
mov
sbb
fdivr
and
push
mov
lea
mov
aaa
push
or
mov
push
lea
loop
xor
jne
pop
push
jmp
jmp
frstor
rcr
xchg
sahf
test
xlat
add
dec
mov
int3
cmp
push
inc
jl
push
push
mov
test
jge
mov
lea
(bad)
lea
sar
ficom
fxch
pop
ins
or
sub
int3
cmp
ret
jns
bound
fs
js
inc
and
fist
push
add
jmp
add
add
addr16
mov
and
or
jno
data16
pop
mul
push
stos
sub
les
pop
push
call
adc
and
retf
jg
sub
mov
or
pop
mov
push
mov
cmp
ins
xor
inc
in
popa
lea
dec
push
mov
inc
jge
cdq
cmp
stos
add
leave
mov
inc
xchg
push
xchg
repnz
out
jmp
jmp
adc
pushf
imul
in
mov
test
lahf
mov
push
mov
pop
push
lea
leave
retf
xchg
mov
mov
push
mov
dec
pop
sub
popa
sbb
sbb
cmp
xchg
jl
inc
sub
mov
inc
mov
pop
pop
bound
jmp
test
adc
cwde
cmp
ss
mov
mov
fs
loopne
ror
add
xlat
sub
(bad)
inc
or
lds
push
shl
(bad)
aam
inc
and
mov
fwait
mov
je
or
in
sub
sbb
test
addr16
mov
and
pop
inc
jno
ds
inc
into
nop
and
mov
dec
or
mov
cmps
dec
pop
xor
in
pop
rol
fnstcw
mov
mov
inc
xchg
bound
mov
mov
sti
movs
jns
rep
xor
ret
inc
mov
(bad)
(bad)
les
add
adc
inc
(bad)
ficom
adc
mov
xor
pop
movs
fcom
js
std
in
call
jne
cmp
add
jo
push
mov
test
shl
or
addr16
lahf
push
xor
loope
sub
push
push
or
mov
test
or
xchg
stos
in
mov
and
(bad)
lds
push
cmp
mov
pop
and
inc
push
mov
xor
add
sbb
pop
call
bnd
mov
add
aaa
sbb
lahf
inc
cwde
test
retf
inc
je
test
ficomp
sbb
push
dec
jl
cmp
sbb
pop
mov
push
xor
sbb
jno
shl
inc
inc
fs
ret
shl
jae
sub
neg
mov
test
pop
pop
jne
(bad)
xchg
jmp
stc
cmp
pop
in
es
stc
shl
bound
xchg
jmp
jl
sbb
mov
xchg
ret
add
fisttp
test
push
cwde
push
or
mov
icebp
xor
jl
rol
mov
test
jecxz
cdq
test
lock
pop
push
sbb
mov
fstp
test
pop
mov
inc
out
ins
cmp
lock
ins
add
fwait
cld
mov
jb
mov
pop
mov
mov
fcom
sbb
fs
or
je
inc
xor
xor
mov
dec
fdiv
xchg
(bad)
add
mov
and
sub
dec
in
xor
mov
popf
inc
sbb
je
iret
out
fidiv
mov
pop
call
loope
dec
mov
stc
or
ret
add
sbb
push
mov
(bad)
sti
adc
in
xchg
dec
sbb
jne
adc
je
jne
mov
movs
dec
add
inc
mov
imul
lds
dec
loopne
addr16
xor
inc
inc
jle
add
rol
xor
dec
jecxz
or
add
dec
cmp
int
test
jns
clc
push
add
aaa
mov
ins
jmp
stc
sbb
push
cdq
sbb
data16
pop
jns
and
push
or
movs
jl
push
nop
cmp
cmp
mov
jecxz
nop
pop
push
fs
repz
stos
jecxz
push
(bad)
and
jp
clc
data16
push
xchg
fs
adc
inc
fucom
sbb
dec
jle
add
mov
in
sub
ret
xor
out
repz
cmp
rol
add
or
addr16
loope
jnp
jle
in
retf
cmp
dec
addr16
ins
mov
cmp
xchg
mov
ins
mov
add
add
push
add
inc
mov
add
push
push
adc
pop
or
xchg
loop
pop
or
push
or
and
addr16
sbb
jne
cmc
daa
imul
or
xor
mov
push
mov
xor
cmp
xor
or
xor
or
dec
jo
test
jle
mov
jmp
test
popf
repz
and
xchg
iret
mov
aas
sub
cld
imul
push
adc
jecxz
icebp
aas
clc
arpl
hlt
je
mov
mov
jmp
aad
push
cmp
mov
arpl
inc
pushw
aas
jo
mov
test
lock
cmp
sub
sub
or
pusha
popa
shl
push
and
xchg
xor
cs
and
test
or
imul
je
out
mov
xlat
inc
mov
and
inc
cmp
mov
fcomp
ja
and
clc
jne
jae
sub
enter
retf
ja
mov
mov
ds
test
fdivp
out
shl
in
data16
mov
mov
sbb
ja
int3
sbb
mov
push
(bad)
dec
bound
mov
aas
cld
jg
data16
dec
adc
inc
popf
sbb
jne
lock
test
nop
xchg
nop
push
pop
aad
fwait
adc
jl
ja
lahf
out
mov
push
cmp
in
dec
xchg
adc
(bad)
icebp
adc
test
fsub
test
mov
dec
mov
jmp
test
(bad)
jmp
out
add
mov
cmps
mov
cmp
mov
jmp
dec
xor
stos
mov
mov
jl
popf
and
in
rcr
stos
retf
(bad)
std
push
xchg
cmp
fsubr
xchg
scas
iret
xlat
icebp
out
outs
jecxz
out
adc
dec
xchg
ror
ret
std
out
mov
jb
gs
je
movs
xchg
in
mov
or
push
xor
xchg
adc
dec
leave
inc
movs
push
fmul
lods
(bad)
sbb
or
(bad)
jmp
mov
push
xor
call
bound
push
or
xor
cmps
cmp
jecxz
ficom
popf
test
jecxz
jns
ja
push
adc
sub
int
jecxz
js
js
mov
cmp
jns
jns
push
xchg
jl
jns
jp
jle
loope
cmp
stc
jl
jns
jle
jnp
sbb
xchg
jle
jle
jp
jle
push
in
jo
mov
movups
popf
add
mov
bound
push
les
push
aas
or
mov
jnp
xchg
mov
cdq
sub
or
sub
aas
mov
adc
jmp
outs
and
sahf
out
mov
mov
add
add
cli
cmps
pusha
or
jnp
add
out
fstp
fnstsw
loope
lock
ret
loope
jg
jmp
out
cmp
repz
jg
jns
out
add
out
out
lock
out
sahf
out
repz
stos
xchg
jns
stos
lods
lods
scas
lock
call
cmc
div
clc
xchg
(bad)
loop
stc
cli
out
sti
ror
popa
jno
rol
rcl
or
repz
aad
xlat
and
adc
adc
add
push
push
sub
inc
add
fsub
fs
ret
jg
je
or
in
or
inc
mov
add
nop
call
das
sub
into
inc
mov
ja
inc
xchg
mov
or
jne
push
mov
pop
mov
loop
xor
fld
enter
test
imul
cmp
inc
enter
mov
sbb
add
jno
sbb
add
dec
mov
lea
and
mov
add
shl
les
dec
add
add
cmp
aad
enter
cmc
icebp
jns
shl
mov
pop
add
mov
sbb
adc
call
pop
mov
add
rol
icebp
mov
add
call
push
jae
cmp
mov
mov
or
mul
mov
icebp
rcl
add
pop
aad
jno
sbb
daa
mov
pop
dec
sbb
dec
xor
popf
not
mov
test
push
jne
je
sbb
in
(bad)
fst
cmp
mov
jecxz
or
push
js
push
lods
and
jecxz
add
call
xor
pop
mov
push
stc
inc
mov
sbb
std
mov
xor
adc
(bad)
add
pop
(bad)
mov
ja
cmp
sbb
push
cmc
mov
lods
or
push
mov
dec
(bad)
mov
clc
int
and
push
jb
push
add
mov
and
mov
mov
or
mov
loope
jg
sub
xchg
fsubr
and
inc
arpl
inc
sbb
add
inc
(bad)
add
xor
dec
inc
jns
adc
push
mov
push
enter
into
dec
adc
add
jbe
aam
push
sbb
cmp
pushf
cld
and
dec
pop
inc
push
sbb
leave
jmp
lock
pop
repnz
fild
mov
and
jmp
lock
aas
adc
pop
push
je
adc
add
push
fstp
mov
jmp
fnstenv
mov
enter
push
lock
les
xchg
test
call
sbb
ss
sbb
hlt
xchg
mov
rcl
push
and
jbe
sbb
xor
or
mov
fnsave
and
xor
push
and
test
and
sub
clc
gs
or
sbb
sar
add
mov
or
js
or
push
call
jle
inc
or
add
jnp
add
push
dec
jmp
inc
pop
dec
xlat
jg
or
and
ret
test
jb
sub
mov
int
mov
and
cmp
call
enter
mov
mov
fcom
and
or
es
cmp
inc
mov
and
xor
mov
cmps
mov
test
jmp
push
jmp
test
mov
sbb
and
adc
ja
sub
lahf
mov
cmc
scas
xchg
jp
inc
and
push
(bad)
fidivr
or
and
or
cmp
jmp
cmp
hlt
fisttp
stos
push
(bad)
hlt
mov
pop
push
xchg
or
addr16
repnz
pop
and
push
xor
and
cmps
mov
jae
adc
push
push
call
cmp
push
in
test
push
in
les
xor
fsub
jae
ja
ret
jne
(bad)
push
dec
ja
inc
add
or
dec
dec
fimul
loopne
sub
sub
inc
mov
sub
add
add
adc
jnp
test
add
xchg
add
xchg
adc
loopne
stos
nop
lock
retf
or
inc
adc
adc
ja
fidivr
cmp
push
or
inc
inc
aam
and
push
nop
pop
jns
push
and
cmp
ins
or
js
mov
add
cmp
hlt
les
dec
fcomp
pop
jg
dec
int3
int3
xchg
enter
outs
stos
sub
call
inc
ins
or
push
ds
aam
push
les
fst
nop
ror
and
mov
in
push
and
adc
sbb
fwait
fs
mov
pop
mov
or
jne
cmp
mov
sub
sub
mov
inc
rcl
out
fnstcw
adc
sbb
imul
mov
push
xor
or
cmp
mov
mov
ja
push
rcr
push
nop
add
stos
dec
sub
cli
cmp
test
mov
inc
mov
and
push
or
je
cmps
add
dec
int3
sbb
jns
fst
push
adc
shr
adc
cmp
inc
add
(bad)
shr
stc
shl
cmp
sbb
es
adc
push
mov
or
push
pop
xchg
xchg
dec
retf
inc
add
movs
shl
xchg
xchg
and
out
mov
inc
push
or
and
sti
push
dec
test
mov
sbb
aam
test
jle
bound
mov
imul
cdq
mov
sbb
clc
mov
mov
xchg
movs
jp
pop
xchg
lahf
adc
jmp
mov
add
push
sub
out
iret
les
addr16
hlt
lods
daa
adc
dec
repz
mov
(bad)
or
mov
js
outs
jg
das
test
dec
push
(bad)
clc
in
outs
adc
pushf
ror
pushf
dec
dec
add
mov
mov
jp
retf
loop
and
test
fdiv
sub
fisttp
cmp
add
add
mov
mov
mov
adc
mov
sbb
sub
pmaddwd
in
sub
xor
jg
mov
or
sub
add
cmp
mov
loope
sbb
gs
cmp
hlt
add
push
ficomp
rol
push
inc
add
xchg
icebp
fisttp
jmp
inc
rol
and
mov
jmp
rcr
popa
jmp
out
mov
mov
(bad)
mov
xor
xor
or
dec
and
scas
je
xchg
push
jo
shl
test
out
xchg
push
bound
out
push
jmp
add
dec
mov
popf
pop
adc
mov
dec
or
jg
mov
xor
add
loop
inc
or
or
jbe
add
jecxz
nop
xchg
movsx
cmp
dec
call
popf
mov
inc
mov
fcomp
jge
cwde
pop
stos
and
and
mov
cmp
retf
inc
cld
inc
adc
clc
cmp
test
data16
in
adc
rol
mov
inc
aad
mov
adc
add
and
push
inc
daa
stos
nop
mov
mov
push
mov
sub
jle
fstp
retf
data16
(bad)
push
mov
fcom
cmc
dec
jae
jmp
cmp
das
cmp
jecxz
aas
mov
add
dec
shr
repnz
fwait
es
aad
nop
dec
stc
scas
sub
sbb
in
xchg
test
adc
jmp
and
cmp
jo
in
dec
dec
sub
jbe
push
mov
in
adc
adc
ins
lahf
pop
jmp
sub
mov
jmp
(bad)
fst
les
es
cmps
xor
int
xor
and
dec
jb
push
xrelease
mov
(bad)
outs
inc
rol
jmp
jmp
es
push
inc
cdq
and
aam
in
test
rcr
adc
adc
ror
jno
mov
dec
dec
mov
cld
or
sub
sub
jbe
pop
mov
mov
and
fst
push
pop
std
add
jecxz
sti
push
mov
neg
sbb
shr
pop
pop
mov
xchg
xchg
in
mov
mov
mov
stos
repnz
sub
jp
dec
jne
adc
rcl
adc
inc
add
pop
in
stos
xor
jmp
jo
lds
mov
dec
push
and
test
rcl
xchg
std
dec
xor
sub
cli
push
add
adc
out
(bad)
cmp
fsub
in
push
jnp
push
xor
dec
inc
in
dec
out
sub
or
sub
dec
fsub
fild
loopne
repz
pop
push
hlt
fs
aam
out
push
in
call
cdq
push
je
or
or
in
rol
and
adc
and
movs
loope
sub
shl
ds
jmp
mov
stos
sub
jg
push
sbb
repz
cmp
or
inc
xor
leave
mov
push
call
cmp
add
sub
mov
mov
adc
retf
inc
or
dec
push
and
cdq
adc
xor
cmp
push
jl
int3
jmp
xchg
sub
add
pop
popf
push
push
cwde
inc
daa
inc
cmp
push
cmps
adc
sub
jnp
jle
inc
xchg
clc
test
rol
mov
mov
movs
inc
in
shl
mov
outs
mov
xchg
mov
inc
(bad)
pop
lods
jecxz
popf
ja
cmps
call
in
in
dec
repz
xlat
pushf
dec
std
cwde
add
fcomp
cmp
test
cmp
sbb
mov
mov
jno
mov
or
pushf
mov
adc
xor
in
loop
add
dec
push
fmul
push
je
adc
ret
cld
jl
repnz
fstp
adc
es
js
fcomp
imul
(bad)
mov
pusha
popa
pop
xor
inc
(bad)
es
in
or
int3
fdiv
or
aas
and
xchg
inc
inc
jne
mov
(bad)
shl
lds
jnp
mov
dec
call
xchg
pop
sbb
xchg
jmp
imul
call
push
pop
jle
ins
mov
and
jnp
and
test
pop
mov
or
inc
cmc
je
sbb
cwde
stos
cmp
push
sbb
and
mov
add
or
int3
hlt
inc
inc
push
push
xchg
test
xchg
jmp
fist
sbb
ficomp
scas
jecxz
fdivr
pop
ja
std
std
std
dec
jne
mov
jp
std
xor
imul
jmp
mov
pop
retf
mov
mov
inc
aaa
test
pop
sub
lds
xchg
or
jge
xchg
adc
mov
fwait
inc
(bad)
push
add
fnstcw
xchg
push
test
ja
ins
(bad)
lea
dec
push
or
(bad)
push
cmp
adc
nop
call
push
or
push
cmps
nop
add
mov
shr
test
mov
out
lea
push
xchg
fisubr
jb
jp
sub
and
mov
and
mov
popa
mov
popa
xor
lea
fst
cdq
mov
mov
rcr
push
mov
jl
inc
jno
jecxz
cli
mov
ret
mov
adc
es
in
sbb
xchg
sbb
pop
sub
xchg
test
fwait
xchg
shr
mov
xchg
mov
test
mov
add
shl
retf
jns
popa
je
xchg
hlt
xor
js
mov
inc
movzx
push
dec
dec
cdq
xchg
mov
pushf
js
push
inc
sbb
mov
add
xchg
dec
jmp
cli
xchg
dec
jecxz
xacquire
xchg
pop
sbb
sbb
leave
cwde
daa
ins
add
push
xor
sbb
out
inc
push
ins
aam
sub
std
nop
cmp
mov
enter
push
mov
push
pop
inc
pop
xchg
mov
xchg
mov
add
lea
jmp
push
rol
jmp
dec
cmp
and
movs
jmp
lahf
out
sub
xchg
mov
mov
adc
movs
jp
out
stos
sbb
sbb
lea
arpl
add
cwde
sbb
mov
ins
mov
adc
(bad)
stos
push
ror
xor
push
call
cmp
dec
clc
clc
xor
clc
sbb
xor
mov
sbb
jne
ds
xchg
adc
xchg
test
mov
add
sbb
leave
lahf
lods
inc
inc
pop
pop
jne
int
jne
xor
push
stos
jge
push
xor
call
pushf
and
cmp
stos
rol
cmps
std
dec
mov
pop
lahf
outs
push
pop
adc
jmp
add
shr
xor
dec
hlt
(bad)
push
xchg
hlt
jmp
mov
mov
sbb
mov
inc
and
pop
adc
pop
push
ins
cli
adc
or
push
adc
pop
add
scas
dec
add
xchg
(bad)
mov
das
and
mov
push
int
es
mov
mov
mov
dec
mov
and
cwde
stos
cs
in
in
pop
jl
or
loopne
jl
stos
xchg
loopne
stos
mov
idiv
rcr
stos
cmps
mov
mov
push
lock
mov
mov
je
mov
push
js
add
jl
jnp
stc
adc
and
mov
jb
mov
mov
or
imul
sbb
sbb
leave
sub
push
xor
pop
jnp
enter
inc
sub
jb
addr16
leave
mov
xchg
int
les
xchg
mov
movs
(bad)
popf
mov
pop
in
ja
sbb
inc
out
in
cld
dec
outs
icebp
dec
sbb
xchg
lods
dec
mov
push
dec
fild
(bad)
cmc
sbb
je
xchg
imul
sub
or
mov
stos
(bad)
pushf
mov
lods
dec
out
test
shl
inc
jae
call
stc
into
ds
mov
cmp
ret
push
leave
out
xchg
and
xchg
jmp
icebp
je
jg
and
mov
xor
pusha
fs
inc
enter
inc
and
cmps
cwde
rol
jnp
push
jmp
push
sbb
xchg
stos
aam
retf
mov
push
je
pop
xor
sub
push
es
or
push
xchg
push
clc
sbb
dec
loope
test
xchg
xor
pop
push
outs
into
repnz
xor
stc
repz
pop
or
sub
mov
sub
mov
lds
mov
push
js
xor
test
jl
stos
movs
cmp
cmp
cld
scas
mov
lods
dec
popa
stos
rcl
stos
in
push
xchg
call
nop
adc
xchg
(bad)
mov
stos
xchg
iret
hlt
dec
mov
iret
out
int
popa
stos
shl
lea
push
ret
push
movs
into
movs
inc
repz
fsubr
scas
pop
stos
pop
xchg
je
jb
push
jae
fidivr
addr16
test
loope
enter
pop
xchg
push
in
push
dec
enter
jbe
in
stos
xchg
jecxz
stos
adc
outs
pop
(bad)
sbb
pop
rcl
push
sub
sub
ss
jmp
dec
add
div
sub
mov
fdiv
arpl
mov
or
push
dec
mov
test
les
shl
pop
xor
cmp
cmps
rcr
xchg
and
cmp
sar
adc
(bad)
jmp
push
push
mov
xchg
and
push
je
push
xchg
push
mov
and
or
jle
jne
xchg
fmul
dec
inc
repnz
pop
mov
jmp
scas
dec
hlt
popf
push
call
xor
test
dec
xor
or
dec
inc
xchg
jl
(bad)
shr
rcr
(bad)
and
sbb
sbb
jns
scas
jo
mov
mov
mov
mov
mov
mov
cmp
out
mov
mov
mov
mov
mov
mov
adc
jo
aam
icebp
mov
mov
mov
push
xchg
jg
sub
ins
mov
mov
(bad)
mov
mov
mov
mov
push
xchg
mov
mov
jo
xor
rsm
mov
jo
sbb
pop
and
stos
pop
sbb
inc
cld
popf
inc
or
or
adc
cmp
ficom
xchg
and
xchg
xor
fidivr
jmp
jmp
das
test
pop
inc
cdq
mov
xor
sub
mov
ss
cmp
sar
mov
add
je
sub
push
scas
sti
aad
sbb
sub
cmp
inc
add
fsubr
ror
rep
lods
and
neg
add
ret
dec
mov
lods
lock
enter
push
lods
jmp
(bad)
jge
jnp
or
mov
pop
pxor
jmp
xor
retf
nop
jg
inc
adc
rcl
mov
xor
rcl
rcl
jo
mov
dec
jne
jp
mov
or
movs
stos
sbb
or
jp
scas
arpl
dec
jp
ja
push
or
push
adc
and
fwait
call
mov
and
push
xchg
mov
inc
or
shl
icebp
cmp
jmp
mov
lods
jne
fld
cmp
out
ret
int3
call
adc
or
mov
arpl
loope
jg
adc
retf
mov
inc
and
call
push
mov
sub
cmp
xchg
je
int3
jb
adc
mov
inc
call
movaps
adc
add
(bad)
jns
in
push
lock
xchg
xor
adc
cmovns
sbb
ret
jecxz
mov
xchg
push
mov
fbld
push
int3
test
int3
mov
fsub
cmp
pop
loope
std
mov
jne
add
pop
inc
scas
push
pusha
cmp
push
xor
inc
sbb
in
mov
jo
sub
mov
mov
push
jne
in
jecxz
dec
jmp
pop
(bad)
push
mov
aam
and
and
call
shl
fnstcw
jecxz
test
and
dec
xchg
int3
adc
pop
add
test
jae
adc
pop
and
or
nop
stos
test
leave
adc
mov
mov
test
add
push
sub
imul
jne
cmp
lods
xor
adc
mov
sub
inc
sub
push
add
out
or
sbb
mov
push
dec
push
adc
push
add
push
adc
add
dec
push
mov
jp
jmp
add
jge
ss
mov
mov
push
enter
cmps
jnp
add
cmp
js
push
mov
int
add
outs
mov
scas
sbb
inc
sub
mov
sub
pop
mov
sub
mov
jae
mov
int3
sbb
jmp
lahf
adc
mov
in
push
push
movs
adc
or
mov
sub
cwde
jno
gs
addr16
(bad)
inc
(bad)
lahf
out
add
arpl
xchg
xchg
push
addr16
jmp
jmp
cld
jne
lds
add
in
aam
sub
aam
push
fld
inc
rcl
cmps
jmp
in
int
push
jmp
mov
xchg
or
mov
inc
clc
add
sbb
sub
adc
ror
les
test
pop
ffree
inc
sbb
sub
das
fs
jnp
or
sub
shl
inc
push
mov
dec
hlt
inc
adc
mov
push
push
add
and
sbb
lods
mov
shl
or
lock
jmp
adc
adc
jmp
mov
ror
dec
mov
call
lea
cmp
mov
in
into
or
jae
add
and
jne
test
jae
test
adc
shr
retf
das
jg
xor
inc
je
or
call
arpl
and
clc
pushf
inc
int
push
adc
pop
gs
inc
int3
sbb
pop
sbb
std
xchg
xchg
in
ins
mov
pop
mov
push
out
sbb
xchg
dec
sbb
mov
addr16
xor
test
(bad)
leave
fucom
gs
jae
pusha
add
retf
or
loope
push
(bad)
out
iret
mov
and
sub
jmp
xor
adc
fisttp
adc
out
mov
dec
or
in
add
loopne
jmp
cmp
dec
jmp
or
shl
mov
cmp
and
rcl
mov
jmp
jae
sub
adc
loopne
xchg
mov
lock
int3
mov
ja
retf
add
or
adc
shl
dec
iret
or
inc
test
mov
test
dec
in
(bad)
pop
sbb
jge
mov
xor
stc
mov
mov
inc
pushf
or
aam
or
add
mov
sbb
sahf
add
add
fdivr
add
cld
pop
sbb
inc
add
push
dec
rcl
mov
cmp
mov
mov
test
fisub
add
cmp
mov
mov
push
inc
sub
xchg
shl
cmc
fst
jl
mov
add
jmp
jmp
push
mov
mov
jmp
adc
sub
stos
adc
fadd
xchg
gs
lea
sub
or
in
and
stos
mov
sti
add
in
data16
(bad)
retf
push
outs
mov
test
sub
mov
and
adc
add
jbe
dec
xchg
mov
sti
mov
mov
neg
adc
in
scas
aam
lods
in
push
mov
xchg
lea
or
mov
jbe
sbb
in
mov
push
ja
inc
and
aam
cdq
push
and
xor
pop
hlt
test
bound
dec
sti
clc
jb
enter
jmp
aam
push
pop
mov
ins
mov
std
je
inc
add
dec
icebp
xchg
mov
or
clc
mov
push
mov
fwait
push
jb
nop
lods
jns
add
dec
pop
clc
test
scas
xor
and
cmp
adc
imul
add
sbb
addr16
inc
adc
add
sub
jne
(bad)
adc
retf
mov
lods
cmp
mov
addr16
je
and
daa
mov
inc
cs
jne
push
pop
pop
add
mov
dec
xor
jmp
cmp
ins
and
dec
dec
out
clc
mov
fisubr
cwde
leave
(bad)
cmp
or
xor
loope
mov
lds
or
add
push
out
shr
mov
out
adc
shl
jnp
ret
push
inc
nop
inc
cmp
dec
cmp
sbb
jno
enter
mov
sub
pushf
adc
call
and
pop
sti
jo
ret
inc
inc
enter
loop
scas
sbb
dec
cmp
pop
inc
sbb
inc
sub
mov
cld
jno
gs
adc
mov
cmp
loop
push
and
or
push
in
nop
fcom
mov
xlat
retf
push
sbb
cmp
(bad)
fldenv
shl
mov
sub
call
sub
nop
sbb
int
cmp
push
loope
push
jle
push
xor
add
dec
xor
add
push
cmp
and
inc
movs
cmovo
adc
dec
aad
dec
test
fwait
mov
in
sbb
test
jmp
int3
push
(bad)
repnz
fst
dec
jno
inc
mov
xchg
push
ja
je
dec
shl
data16
cmp
ja
data16
leave
sub
popf
adc
push
dec
and
sbb
ins
retf
dec
mov
dec
(bad)
jae
dec
dec
add
push
adc
jbe
test
out
mov
sar
(bad)
out
fmul
cmp
hlt
inc
ret
mov
or
sub
lock
cmc
dec
inc
lock
or
cmp
jge
and
xchg
dec
and
inc
std
cdq
push
add
fcom
cmp
jecxz
fdiv
dec
cmp
mov
test
cmp
cmp
dec
jns
or
fimul
outs
sub
ss
cmp
cld
in
retf
xor
sar
popa
dec
mov
push
dec
ja
cmp
push
cmp
jl
or
in
gs
jmp
in
repnz
sbb
out
aam
(bad)
sbb
outs
xchg
test
lahf
and
or
mov
mov
sub
aad
or
cmp
or
mul
enter
leave
push
stc
mov
xor
int3
scas
outs
enter
imul
add
or
cld
cdq
sar
add
ins
jnp
retw
sub
push
cdq
xor
dec
mov
movs
cmp
out
sti
sbb
arpl
and
push
imul
shl
or
mov
inc
xor
sbb
sub
test
or
xchg
stc
sahf
cwde
or
adc
add
xor
sub
xor
pop
xchg
inc
sub
xchg
pop
mov
add
mov
nop
inc
mov
cmp
and
sub
jmp
fld
xor
jne
loop
loop
mov
inc
nop
je
pop
stos
stos
cmp
jg
aad
push
mov
inc
or
loopne
jmp
and
rol
add
adc
dec
out
add
pop
adc
push
cwde
mov
inc
xor
test
and
icebp
add
mov
int3
xchg
and
int3
xor
mov
clc
add
test
outs
shl
aas
jbe
dec
xchg
push
movs
push
mov
xchg
(bad)
pusha
jnp
and
and
mov
(bad)
or
not
aam
push
add
mov
add
dec
pop
mov
add
nop
repnz
mov
bound
pop
inc
pop
stc
mov
push
call
jno
mov
cs
xchg
inc
movs
loope
add
xchg
mov
jno
xchg
jb
mov
push
call
lods
push
in
inc
pusha
cmps
push
dec
sub
shl
sub
outs
add
lods
es
mov
dec
cmp
pop
and
fs
push
in
inc
jl
pop
rol
fsub
mov
inc
mov
stc
cmp
fistp
es
mov
mov
(bad)
cmp
(bad)
rcr
aam
ds
mov
sar
adc
inc
mov
loop
clc
mov
and
les
ror
lds
rcr
mov
rol
popf
rcl
shl
mov
hlt
hlt
sub
in
test
hlt
hlt
xchg
mov
add
mov
lods
jne
jo
add
enter
(bad)
fmul
jmp
jne
add
inc
inc
xor
inc
cmps
push
pop
lods
lock
sub
test
cdq
mov
enter
ror
mov
xor
add
mov
fwait
xor
adc
xor
rcr
cmps
or
fisubr
scas
sbb
jb
sub
retf
out
pushw
mov
mov
add
fistp
mov
mov
and
ds
(bad)
inc
or
xchg
shl
push
add
push
add
push
in
pusha
or
imul
push
in
jne
out
enter
jmp
mov
lea
mov
sub
cmp
sbb
nop
sti
adc
jne
mov
hlt
inc
or
es
jno
jns
push
imul
push
fld
or
dec
lods
gs
and
pushf
leave
or
xchg
mov
cs
outs
xor
in
inc
adc
loopne
fwait
mov
jbe
cdq
loop
adc
out
je
mov
mov
push
(bad)
cmp
test
inc
push
imul
addr16
dec
ret
and
call
inc
retf
das
dec
adc
popa
jp
or
mov
sub
mov
or
and
and
push
outs
push
inc
push
and
ret
add
pop
in
(bad)
fcomi
test
dec
cdq
mov
fbld
add
inc
adc
rcl
or
xchg
push
sub
jmp
push
ins
ja
popf
loop
movs
dec
clc
jne
push
pop
(bad)
pop
push
js
cmp
fbstp
xor
mov
dec
and
(bad)
adc
lods
sub
(bad)
jmp
mov
rol
lods
sub
or
push
adc
push
aaa
cdq
je
out
or
jne
mov
or
jne
sar
out
into
dec
nop
mov
into
jne
(bad)
dec
fcomp
jmp
cmp
(bad)
jno
ret
push
enter
mov
dec
ins
pop
mov
push
xchg
jno
adc
xchg
int3
int3
jmp
inc
loop
cld
inc
retf
xchg
fld
sub
sbb
mov
lock
xlat
dec
push
sub
jne
cmp
sbb
int3
fdiv
mov
fcomp
int3
popa
and
ret
dec
imul
cmp
mov
fsub
pop
xlat
sbb
jmp
mov
cmp
shl
xor
popf
or
test
jb
repz
and
cmp
sahf
icebp
lock
dec
cmps
inc
xor
dec
push
mov
push
rcl
in
lock
dec
popf
jne
fsub
jge
push
sbb
rcr
ror
inc
cdq
mov
adc
or
add
dec
addr16
cmps
enter
div
jmp
inc
cld
cmps
jae
jmp
push
xchg
and
cmp
ret
je
mov
ja
or
frstor
adc
push
jmp
push
mov
loop
cmp
mov
or
cli
adc
and
mov
and
movs
int3
add
imul
ret
jbe
adc
les
popa
add
ret
das
mov
or
jecxz
test
leave
out
jbe
and
adc
push
and
push
sbb
adc
movs
adc
call
cld
cmp
xor
mov
addr16
test
cld
adc
sub
adc
nop
xor
adc
and
daa
fcomp
xchg
loope
imul
lea
mov
movs
pop
aas
jge
sbb
test
ins
(bad)
mov
xor
jmp
test
loop
add
and
hlt
rol
ss
movs
push
call
fxtract
add
and
repz
jb
xor
cmps
or
pop
data16
cld
ja
mov
cmp
push
iret
push
shr
lock
sub
xchg
sub
dec
inc
push
dec
shl
dec
fsubr
(bad)
lods
push
shl
pop
inc
in
call
aad
nop
aad
and
push
mov
cwde
cld
xchg
mov
inc
or
pop
in
mov
inc
imul
fdivr
mov
push
or
loopne
push
or
sbb
cmp
inc
add
xor
into
or
xchg
cs
add
arpl
dec
xor
js
cmc
sub
pop
int
push
pop
inc
or
sbb
mov
sbb
loopne
mov
push
call
push
xor
xor
cmps
or
pushf
mov
ins
icebp
pop
or
add
mov
cmp
mov
jo
fist
pop
xor
xchg
clc
add
out
sbb
lea
into
(bad)
pushf
pop
(bad)
(bad)
fdivr
fmul
dec
pop
call
clc
xchg
bound
xlat
cdq
(bad)
cdq
test
lods
xchg
mov
mov
movs
lea
iret
movs
mov
or
fcomp
mov
mov
fiadd
inc
in
hlt
outs
addr16
cdq
test
inc
call
call
ja
mov
and
std
out
xchg
jecxz
stos
sbb
(bad)
mov
mov
clc
or
push
jbe
lea
mov
out
outs
stc
sbb
sbb
ins
xor
out
cld
inc
mov
shl
jmp
gs
stos
dec
push
cld
cmp
or
fcmovbe
loope
xchg
lea
mov
out
jns
sbb
leave
imul
and
(bad)
aam
gs
(bad)
adc
sbb
cmp
pop
fstp
(bad)
(bad)
div
xchg
mov
enter
inc
rcl
(bad)
xchg
rcl
xor
push
daa
xlat
push
add
imul
cli
daa
sbb
mov
aam
sbb
das
xchg
sub
and
test
aam
fstp
addr16
ja
aam
cwde
scas
push
xor
enter
inc
lock
es
pusha
imul
sub
test
adc
mov
mov
push
or
sbb
or
push
setb
dec
xchg
enter
xor
movs
ins
xchg
cdq
aas
enter
jmp
gs
dec
cmps
adc
pusha
mov
push
xchg
mov
sbb
mov
add
lahf
daa
sub
retf
test
retf
test
xchg
mov
pop
jge
mov
test
add
imul
dec
stos
sub
cld
(bad)
adc
inc
loopne
dec
push
cmp
or
add
movs
fisub
sbb
fadd
in
sar
sti
xor
xor
imul
mov
jbe
xor
mov
cmp
cli
xchg
mov
(bad)
lea
pop
aas
push
outs
or
imul
xor
lea
add
adc
popf
rcl
stos
dec
hlt
stc
add
xor
dec
cmp
(bad)
clc
sub
and
outs
dec
xchg
shl
int
outs
fadd
stos
fdivr
sbb
idiv
mov
enter
inc
sbb
mov
lods
fsubr
xor
or
xor
sub
nop
scas
lods
cmp
fsub
sar
adc
lods
mov
push
cmp
mov
jb
rol
clc
adc
inc
mov
xchg
push
aam
mov
xor
push
mov
adc
(bad)
aam
fidiv
push
xchg
loopne
(bad)
and
test
sbb
jp
hlt
sub
pop
cmp
jno
(bad)
das
lods
loope
cdq
rol
(bad)
and
add
out
shr
icebp
movs
inc
xlat
mov
xchg
add
jmp
inc
(bad)
xor
fwait
pop
adc
dec
popf
sbb
mov
lods
or
cmp
add
mov
push
dec
sahf
icebp
adc
xchg
mov
sar
loope
add
lods
and
ins
daa
es
push
inc
popa
or
je
mov
lahf
add
cmp
loopne
nop
mov
loopne
mov
fisttp
int3
cmp
push
dec
out
ds
mov
mov
imul
inc
and
ret
adc
jne
add
cmps
pop
sbb
sub
dec
nop
xor
sub
bndstx
fs
xchg
add
jne
mov
into
jg
sbb
icebp
mov
add
or
or
in
add
add
inc
pop
adc
shr
add
sbb
or
in
mov
mov
jmp
cmp
adc
inc
or
neg
in
mov
fisttp
push
fst
in
cdq
cli
and
sub
push
dec
or
add
fld
lds
sbb
sbb
cmps
xor
rol
jmp
cmp
mov
cmp
fs
pop
adc
or
inc
add
lods
pop
jmp
lea
movdqa
dec
adc
and
and
icebp
call
pop
outs
data16
(bad)
jecxz
outs
outs
jbe
jle
add
sbb
addr16
jg
push
jg
pusha
jg
jo
mov
adc
add
icebp
dec
movs
sti
xor
jmp
(bad)
aad
jl
jmp
fimul
cmp
test
jnp
xchg
(bad)
out
clc
inc
movs
inc
popf
clc
xchg
clc
into
sbb
jnp
push
pop
out
test
sub
int3
jne
push
mov
cmp
test
mov
ss
adc
jmp
cld
adc
add
cmp
out
mov
test
lock
cmp
adc
or
shl
out
movs
test
rol
rcl
push
lea
xchg
or
jmp
cmp
scas
jl
adc
push
or
call
movs
push
add
cmps
jmp
or
icebp
mov
test
mov
inc
test
xchg
aaa
xchg
or
jmp
not
push
jno
stos
in
xchg
aaa
xchg
adc
adc
pop
jns
test
hlt
es
nop
neg
inc
mov
xchg
inc
das
sbb
adc
cmps
dec
movs
pusha
jmp
lea
test
enter
loopne
sahf
aaa
push
mov
and
mov
(bad)
aas
(bad)
sbb
mov
jp
jmp
inc
(bad)
sub
in
mov
fdivr
dec
dec
movs
sbb
in
mov
or
cmp
and
mov
push
imul
js
mov
jmp
mov
jae
in
fmul
mov
cmp
cmp
jo
jmp
in
lods
cmp
add
fwait
dec
int
(bad)
cmp
enter
xchg
ins
movs
iret
je
mov
mov
mov
cmp
aam
sbb
ds
out
xchg
fs
jp
(bad)
jmp
push
int
jns
sub
ja
inc
push
cdq
jno
and
pop
push
fiadd
retf
pop
jge
adc
pop
repnz
outs
mov
sub
jns
fdiv
jnp
das
outs
and
dec
movs
pop
ja
adc
out
test
jp
mov
dec
dec
cdq
mov
inc
into
retf
dec
out
in
in
dec
movs
xchg
add
xor
jbe
dec
movs
inc
xlat
(bad)
ja
inc
inc
icebp
fldenv
inc
inc
inc
inc
sbb
inc
inc
adc
clc
in
outs
and
and
jge
fnsave
(bad)
push
inc
cmp
fist
pop
and
xor
xchg
into
mov
xor
mov
cmp
rcl
sub
je
jecxz
mov
mov
pop
inc
push
pop
aaa
xchg
pop
mov
xor
sub
cmp
(bad)
test
inc
gs
mov
or
mov
lea
jo
and
loop
test
add
jne
and
add
mov
jecxz
bound
xor
add
push
pusha
nop
sar
dec
add
cli
add
ja
cmp
cld
dec
std
push
sti
repz
jecxz
inc
cmp
mov
sahf
(bad)
loop
cld
xor
push
ds
pop
xchg
xor
(bad)
aas
push
dec
fisub
pop
mov
repnz
push
xchg
pop
sbb
iret
out
in
add
fwait
add
xchg
add
(bad)
stc
cmc
das
pusha
adc
adc
xchg
in
xor
sub
jle
mov
mov
xor
clc
aas
push
pushf
test
xchg
inc
fsub
xchg
(bad)
sti
pop
jmp
nop
and
lea
pop
mov
cld
and
cs
je
sub
cmp
pushf
dec
into
or
int
mov
adc
sub
mov
movs
adc
xchg
add
lea
jne
or
inc
or
inc
sbb
inc
inc
add
aas
in
adc
das
mov
adc
fistp
xchg
or
xchg
adc
fstp
dec
leave
daa
adc
add
mov
sub
mov
outs
mov
add
xchg
mov
xor
in
inc
mov
repnz
cmp
mov
(bad)
out
and
(bad)
jo
test
push
cmp
lods
ins
fs
xchg
pop
call
data16
clc
mov
inc
int3
rol
xor
push
pop
mov
leave
mov
mov
add
cmps
adc
fdivr
sbb
loop
push
xor
and
add
push
clc
add
out
lods
add
hlt
or
sbb
or
push
movs
dec
xchg
or
mov
push
jge
shl
xchg
sbb
loope
sub
jg
push
pop
adc
dec
sub
jb
dec
pop
xchg
push
dec
mov
fnstcw
sar
pop
sbb
push
inc
ret
lds
push
mov
data16
cmps
push
cwde
jp
dec
stos
and
ins
pop
push
xchg
or
add
cmp
nop
push
and
add
retf
(bad)
sbb
add
push
mov
(bad)
lock
pop
mov
ds
sbb
sbb
stos
cmp
out
adc
and
push
mov
sub
or
movs
dec
retf
mov
inc
mov
or
adc
inc
xchg
pop
pop
add
and
pop
adc
jge
or
pmaxub
or
out
call
push
push
push
adc
sub
or
mov
clc
sar
daa
sub
into
mov
sub
sti
xchg
call
out
jbe
mov
add
loope
push
push
adc
and
jne
dec
jmp
retf
adc
cmp
xchg
fcompp
sbb
pop
(bad)
fld
jo
push
pop
jp
mov
jp
adc
mov
test
aad
cmps
cmps
div
and
add
xchg
test
hlt
or
mov
and
xor
sbb
aad
sbb
pop
mov
and
je
iret
or
dec
sub
and
fisttp
rcl
jnp
mov
cmps
mov
in
sbb
ja
mov
xchg
xchg
shl
jnp
inc
rol
test
iret
nop
test
in
add
or
call
dec
cmp
xor
mov
ins
inc
xchg
inc
sbb
dec
and
mov
cmp
(bad)
pop
nop
jmp
jno
sub
lock
je
mov
fiadd
jnp
daa
in
fdiv
adc
push
retf
or
sbb
mov
or
sbb
and
add
and
stos
aam
test
xchg
add
(bad)
and
ror
push
push
add
push
ror
pop
je
ds
xor
fadd
pop
jg
ret
(bad)
sub
retf
sub
jmp
add
fisubr
cmps
pop
push
pop
mov
nop
fs
shl
add
leave
cmp
pushf
stos
adc
out
mov
aas
push
data16
mov
adc
aam
stos
loope
add
movs
push
mov
push
out
int3
call
push
adc
adc
sbb
fld
jmp
and
loop
fnsave
sub
mov
add
xchg
stos
jns
pop
push
movs
and
sbb
mov
dec
cmp
dec
inc
inc
cmp
and
dec
jmp
inc
stos
outs
push
in
cwde
dec
pop
or
(bad)
mov
adc
xchg
sbb
test
or
shr
rol
jae
push
or
aas
push
and
push
popa
dec
inc
push
jae
cmp
adc
mov
test
cmc
cs
lock
repnz
imul
adc
dec
mov
mov
lods
sbb
dec
aam
inc
xchg
xchg
add
nop
les
imul
inc
ror
and
jnp
jmp
xor
adc
test
pop
les
jmp
jmp
cmp
adc
jo
xor
cmp
ror
(bad)
dec
sbb
jmp
enter
sub
cmp
mov
ret
lods
add
pop
daa
and
in
push
fs
and
sahf
pop
add
lods
adc
popa
(bad)
cld
sub
xchg
adc
cmps
push
sub
mov
add
and
mov
hlt
jle
and
push
jl
jg
movs
call
dec
shl
sbb
dec
dec
pop
out
sbb
push
push
push
sub
std
test
movs
cld
into
mov
clc
mov
cmps
push
mov
mov
jno
imul
xor
lods
bound
jno
ror
push
xor
add
inc
adc
cmp
jle
test
lods
(bad)
sbb
push
adc
sbb
ds
retf
ret
xchg
sub
xchg
adc
mov
mov
mov
cmp
arpl
je
adc
in
mov
mov
inc
mov
dec
jae
pop
out
xchg
das
mov
mov
inc
jl
or
mov
fild
jbe
movs
mov
dec
nop
dec
xchg
icebp
ret
cmp
xor
sub
push
stos
sbb
dec
int
pop
xchg
test
out
sbb
jge
shl
xchg
mov
cmps
and
rcl
push
push
push
stc
popa
les
or
xor
or
sub
sbb
(bad)
je
xor
cli
and
jbe
lea
mov
xchg
ret
mov
adc
jnp
inc
and
mov
int3
add
enter
add
or
lods
dec
push
ret
js
add
add
inc
add
je
and
mov
sub
enter
push
push
and
fcmovnb
lds
add
dec
mov
push
mov
push
sbb
push
shr
push
push
ror
push
mov
xor
xor
xor
xor
push
xor
cmp
mov
mov
out
arpl
stos
xor
inc
dec
addps
ins
mov
sbb
push
je
movs
mov
adc
jecxz
scas
ds
(bad)
push
or
mov
or
mov
sti
sub
adc
push
cmp
push
not
push
inc
push
call
cmp
sbb
sbb
sbb
call
dec
pop
jp
movs
call
inc
outs
cli
sbb
mov
push
and
lods
jg
loop
and
inc
push
loopne
pushf
jp
pop
fld
aam
nop
xchg
test
xchg
movs
dec
sbb
sub
pushf
test
adc
and
mov
call
stos
adc
cmp
pop
test
add
mov
dec
shl
ret
out
mov
retf
mov
test
scas
inc
mov
xchg
rcr
xor
adc
inc
or
imul
jns
popf
ror
adc
pusha
sbb
cmp
adc
sar
xchg
dec
xor
mov
inc
sub
mov
dec
pop
adc
or
and
pushf
mov
fcom
mov
sti
in
sub
adc
cs
aas
adc
stc
das
cmp
inc
or
cmp
enter
packssdw
adc
into
and
adc
push
and
mov
pusha
lods
pusha
stos
ins
inc
adc
jg
xor
push
cs
xchg
loop
fsub
jne
aaa
or
fstp
sbb
test
xor
mov
sub
enter
add
imul
or
mov
dec
mov
mov
adc
jno
mov
es
or
push
fisttp
fwait
push
xor
mov
add
push
push
mov
mov
xor
les
xor
rcl
rcl
call
sub
jmp
jg
add
jmp
sub
cmp
ins
pop
inc
push
mov
(bad)
cs
pop
jne
sub
fwait
cmp
leave
mov
inc
cmp
sahf
retf
(bad)
sub
add
rcr
in
hlt
sti
mov
inc
hlt
out
cmc
dec
sbb
dec
sti
icebp
mov
push
jnp
call
push
dec
in
pop
cdq
mov
adc
dec
mov
jns
and
and
cmp
lods
retf
pop
mov
add
inc
clc
push
cmps
push
or
cdq
xchg
xor
cmp
xchg
mov
mov
mov
fs
push
mov
imul
jne
add
repnz
inc
movs
repz
push
pop
jle
sub
xchg
jb
je
and
mov
sub
inc
nop
je
cmps
push
movs
jae
aad
fs
into
in
ror
repz
or
add
std
cld
lods
add
sbb
(bad)
sub
jo
pop
xchg
dec
pushf
adc
xchg
add
or
mov
inc
sbb
inc
jge
test
jge
addr16
dec
bound
mov
adc
lds
mov
push
je
inc
stos
es
rol
mov
shl
jge
sbb
mov
push
add
in
sbb
loopne
les
retf
adc
stc
call
xlat
inc
pop
or
fistp
jle
inc
sub
mov
test
js
add
gs
movs
and
cmp
or
enter
and
sbb
movs
adc
inc
dec
int3
test
push
jmp
xchg
loopne
mov
and
jge
jge
hlt
movs
out
lea
and
xchg
ja
repz
js
mov
mov
and
ja
adc
push
ror
or
popf
push
clc
sbb
or
ins
ins
push
mov
imul
(bad)
mov
jmp
adc
cmp
lock
out
sub
push
or
inc
dec
sbb
sbb
mov
mov
js
add
pop
push
adc
mov
movs
adc
inc
sbb
stc
add
stos
ret
add
add
out
fs
popf
popf
test
push
in
jb
or
in
jle
mov
or
jmp
add
adc
in
imul
loopne
inc
and
popf
and
or
jne
mov
xor
and
pusha
or
and
xor
ins
dec
retf
inc
fnstcw
lods
cmc
rcr
mov
sub
and
enter
into
mov
into
movs
stc
mov
add
imul
inc
mov
mov
pop
es
mov
jb
xchg
jmp
mov
cmp
mov
mov
mov
mov
lods
test
inc
inc
repnz
cmc
scas
and
out
mov
pushf
and
test
repz
(bad)
pushf
rcr
jmp
mov
scas
jg
mov
loopne
sub
call
popf
sbb
imul
cld
cmp
jle
mov
and
lahf
mov
adc
pop
sbb
adc
add
fmul
and
adc
jno
mov
sbb
mov
les
xchg
push
adc
sub
ret
dec
sub
sub
xor
sbb
adc
adc
popf
push
or
adc
es
arpl
sbb
xchg
add
out
push
adc
sar
mov
sub
cli
and
pop
push
add
pop
dec
or
xor
jecxz
inc
mov
(bad)
adc
movs
ficom
(bad)
mov
mov
mov
jge
push
push
jns
mov
adc
or
and
add
push
clc
nop
call
pusha
sbb
adc
push
repnz
inc
and
ret
jg
jge
scas
dec
mov
jnp
popa
shl
jae
leave
cwde
dec
and
mov
add
xor
jmp
push
out
(bad)
xor
lds
lds
or
mov
movs
cmp
xlat
shr
adc
or
xor
sub
or
jae
push
add
stos
test
out
xchg
sub
inc
sub
push
adc
adc
add
sub
pop
cmp
and
retf
out
add
adc
arpl
int
cli
jmp
dec
add
or
pop
or
mov
xlat
inc
mov
xor
dec
(bad)
sub
ror
out
xchg
cmp
mov
outs
pop
xchg
or
movs
sub
and
clc
jle
stos
cld
cli
test
jmp
inc
std
push
push
hlt
xlat
jbe
sbb
sub
add
and
js
mov
int
je
mov
test
add
pop
pop
add
gs
xchg
addr16
cmp
fwait
inc
lock
mov
push
jbe
cmp
pop
stc
popa
test
and
mov
xchg
imul
jb
and
out
fnstcw
retf
and
lock
xor
fwait
addr16
pop
or
and
rcl
push
dec
sub
sbb
dec
fwait
ja
mov
pop
sbb
adc
and
imul
add
jne
nop
sub
push
test
mov
push
addr16
sbb
rcl
lods
fdivr
inc
jns
sub
fsubr
fisttp
push
aas
inc
adc
je
adc
hlt
fcom
mov
sub
xchg
dec
test
dec
push
inc
adc
jmp
ins
add
inc
mov
test
inc
bound
mov
ror
fsubr
jb
int
push
fild
push
and
xchg
lock
dec
inc
cmp
sub
inc
rcr
loopne
inc
test
xlat
xor
jo
(bad)
dec
mov
scas
cwde
(bad)
lods
pop
out
call
pop
(bad)
xchg
lods
push
sbb
mov
add
clc
jmp
sub
lea
leave
push
mov
jmp
fdivr
mov
(bad)
pop
mov
and
ficom
dec
xchg
push
cmp
adc
das
dec
pop
mov
fincstp
(bad)
push
jo
push
shl
jl
out
mov
jl
mov
shl
sar
mov
dec
sti
inc
fidivr
lea
sub
cmp
mov
pop
das
fdivr
js
pop
loope
add
in
push
jmp
int3
mov
mov
arpl
or
xchg
int3
or
bound
inc
cmp
inc
mov
xor
and
or
in
in
test
or
add
aaa
inc
mul
add
ins
pop
dec
or
push
ret
add
nop
out
les
cmp
mov
inc
adc
mov
adc
test
jo
stc
or
(bad)
push
fnstenv
mov
mov
fxch
xchg
gs
cmp
push
xor
xor
mov
and
mov
shl
and
ret
inc
add
add
sub
test
inc
or
fcom
adc
std
retf
jle
out
nop
jmp
sub
ss
jbe
pop
bound
sub
arpl
mov
dec
(bad)
ficomp
jmp
xchg
mov
and
stos
leave
xchg
mov
int
movs
(bad)
jmp
retf
enter
sub
js
xchg
and
and
pop
int3
cmps
ins
mov
mov
ins
push
mov
push
inc
mov
inc
add
nop
add
lea
push
cs
jp
pop
sub
pop
pop
rcl
pop
xor
or
xchg
cmps
stos
sbb
movs
mov
xor
and
push
nop
imul
hlt
inc
xchg
test
popf
push
clc
xchg
mov
and
mov
mov
mov
push
rcl
add
add
jne
mov
mov
sbb
hlt
jmp
adc
aaa
dec
aam
push
adc
jo
ror
popf
adc
cmp
es
cs
adc
addr16
nop
fadd
test
test
push
mov
jne
lea
dec
or
xchg
mov
xchg
mov
push
mov
lea
adc
pop
lock
mov
adc
mov
inc
jl
lea
sub
shr
xchg
push
or
inc
retf
ret
mov
inc
dec
cmc
out
mov
popa
hlt
mov
sub
int3
sub
push
(bad)
(bad)
mov
adc
cmps
lock
inc
adc
push
arpl
hlt
add
outs
push
sub
mov
jmp
dec
mov
adc
sub
add
xor
xchg
xlat
and
repnz
sbb
pop
test
pushf
lods
and
cmp
sub
test
xor
pop
pushf
push
xchg
cwde
daa
outs
push
sub
sbb
rcl
sbb
in
loopne
cmp
jbe
into
(bad)
cld
leave
nop
mov
outs
test
and
add
jb
icebp
push
lods
addr16
push
xchg
out
out
mov
sub
sar
sub
add
test
retf
pop
pop
mov
cmp
je
ds
cmp
mov
sub
test
scas
and
xor
cmp
inc
outs
push
test
cmp
jl
ins
cmp
aas
mov
sub
sub
push
popf
jnp
xchg
push
xchg
mov
movs
test
mov
cwde
cmp
adc
loop
and
in
xchg
jo
inc
jmp
sub
shl
test
pop
pop
adc
rcl
sbb
dec
cmp
xor
cmp
jb
adc
sub
push
ins
sar
jmp
cwde
mov
push
out
comiss
aas
cmp
and
xor
mov
ror
pop
retf
adc
push
inc
push
push
in
push
jmp
mov
in
push
sbb
mov
ds
jmp
sbb
lahf
push
sub
cdq
xor
pop
add
pop
mov
pusha
aad
loopne
push
test
pushf
fwait
or
fwait
cmp
xchg
push
call
adc
sub
sahf
into
sub
or
dec
cdq
pop
adc
test
and
aas
xchg
enter
or
into
je
xchg
push
jmp
test
or
push
scas
int
daa
pop
(bad)
xchg
mov
enter
sub
or
sub
enter
xchg
add
stos
xchg
repz
dec
fmul
(bad)
cwde
inc
inc
lahf
mov
pushf
sbb
push
stos
xchg
daa
sbb
into
fmul
mov
in
adc
mov
(bad)
jno
je
(bad)
neg
dec
cdq
movs
sbb
cmp
push
call
cmps
inc
(bad)
adc
aaa
ja
dec
mov
clc
mov
or
mov
pusha
out
(bad)
fucomi
out
jnp
fiadd
lods
pop
adc
lea
sar
add
jne
les
loope
je
fs
jb
test
cmp
add
aas
lods
xchg
xchg
jp
addr16
mov
xchg
lods
mov
ss
fcom
sub
inc
and
xchg
mul
add
sbb
push
sar
or
pop
test
inc
inc
sub
mov
cdq
rcl
or
nop
mov
adc
sub
(bad)
adc
mov
aaa
adc
ror
add
mov
shl
inc
daa
xchg
out
add
sbb
push
sar
or
mov
fs
cld
lods
loope
xlat
jmp
sub
jne
out
dec
pop
jno
and
jne
rol
ficom
dec
test
inc
dec
fisubr
inc
leave
push
out
add
pusha
sbb
xchg
xchg
cmp
das
repz
add
lods
inc
rcr
enter
mov
cwde
dec
pop
or
nop
rcl
inc
or
mov
(bad)
cmps
dec
sub
mov
and
dec
dec
or
push
outs
xchg
add
mov
mov
aam
push
sub
jmp
xchg
cmps
push
in
pop
jb
inc
outs
mov
sbb
xchg
stos
fs
call
add
or
cmps
push
push
dec
cs
in
call
jecxz
mov
mov
pop
jns
push
xchg
sub
lock
pop
jp
sbb
sti
ja
sahf
and
xchg
dec
lds
push
push
mov
and
test
xor
mov
jge
jmp
pop
dec
pop
sub
cmp
jmp
sbb
xchg
sti
shl
pop
sbb
jne
into
mov
sar
xchg
sbb
cmp
or
test
push
sub
and
jmp
push
retf
test
cmp
or
call
mov
mov
pop
inc
jnp
cs
inc
jge
push
sbb
mov
je
je
stos
addr16
ja
add
aam
pop
add
jbe
or
rcl
sbb
sbb
or
and
out
stc
pushf
aam
jne
pop
mov
push
add
push
or
stos
push
cmp
les
or
or
pop
cmp
loop
cld
cwde
adc
pop
jmp
stos
aam
test
pusha
cmp
div
mov
add
mov
hlt
and
call
xor
xchg
push
pop
in
ds
xchg
pushf
xchg
dec
xor
push
push
data16
xor
in
push
jp
addr16
movlps
or
inc
xor
out
mov
sbb
sbb
scas
ja
jp
dec
jle
sub
inc
adc
arpl
inc
adc
jne
mov
dec
inc
sbb
add
jb
lock
mov
adc
mov
sub
xchg
add
lahf
sub
pop
xor
les
inc
push
fisttp
pop
stos
mov
jne
aas
in
test
dec
aam
sub
outs
push
mov
lods
inc
mov
push
shr
stos
mov
test
push
(bad)
pop
mov
push
sbb
in
mov
jo
pop
inc
adc
ja
mov
iret
popf
mov
out
inc
push
fiadd
enter
ret
test
inc
cdq
(bad)
pop
jns
and
lds
jae
inc
repz
(bad)
cmp
dec
inc
cmp
dec
or
xchg
push
repnz
out
sub
sbb
or
mov
mov
push
mov
sbb
xor
and
test
test
adc
adc
loop
xchg
(bad)
leave
lahf
xchg
add
fnstsw
xor
(bad)
out
outs
jbe
int3
mov
mov
int3
(bad)
jecxz
jnp
call
dec
jmp
dec
xchg
cmp
mov
je
jno
repz
dec
rcr
popw
adc
std
jno
lods
lods
pop
leave
push
int
add
fwait
adc
jmp
js
push
or
jae
push
nop
mov
mov
and
fidiv
push
test
sbb
mov
rcr
adc
sbb
adc
cdq
add
mov
stc
(bad)
mov
test
push
mov
sub
(bad)
out
mov
rol
psubusw
add
push
dec
jno
lods
call
test
fimul
add
or
mov
and
xor
jl
mov
jb
push
jmp
pop
adc
and
jecxz
fst
push
push
cmp
mov
add
xor
inc
jbe
add
loope
jne
out
(bad)
xchg
mov
scas
jnp
mov
lahf
es
je
push
xor
sahf
add
mov
cmp
movs
mov
xchg
es
(bad)
cld
dec
in
enter
cs
nop
jae
jl
rol
sbb
jbe
xor
add
test
fcomp
pop
mov
popa
mov
enter
ins
jne
xor
cli
push
xor
or
je
jp
bound
in
xchg
inc
in
sub
mov
jne
stos
inc
arpl
mov
inc
popf
add
scas
sub
retf
cdq
or
jmp
jnp
xor
sti
mov
mov
int3
cmp
xchg
or
fnstenv
and
push
nop
inc
mov
jge
xchg
jge
test
and
lahf
and
xor
clc
or
add
dec
push
push
mov
clc
add
mov
mov
jbe
inc
es
movs
out
mov
loopne
loopne
dec
aam
(bad)
cmp
inc
and
inc
mov
sbb
inc
(bad)
sbb
add
add
xor
jno
push
jp
int3
fdivr
test
push
xchg
sub
fwait
repz
xor
popf
lods
es
in
xor
add
inc
mov
(bad)
dec
je
dec
repz
cmps
cli
int
sub
pop
icebp
sub
ret
jbe
pop
jmp
cmp
dec
push
xor
xor
add
push
(bad)
in
jmp
mov
push
pop
fwait
outs
cmps
loop
les
xchg
aas
ror
dec
inc
(bad)
adc
sub
or
in
mov
int3
and
out
lock
xor
and
jmp
icebp
inc
dec
mov
fiadd
push
mov
xchg
(bad)
add
movs
add
sbb
pusha
jmp
shl
jmp
cmps
addr16
mov
and
stc
jg
les
mov
push
add
call
add
(bad)
dec
mov
jl
fcomp
mov
arpl
add
mov
adc
(bad)
movs
push
xor
ins
movs
xchg
mov
xor
jecxz
repz
pop
cld
shr
pusha
mov
or
call
sbb
ins
adc
aam
rcr
or
xchg
ret
pop
sbb
xor
push
adc
push
mov
mov
push
mov
mov
push
sti
shl
popf
inc
(bad)
out
or
and
sar
pop
pop
lods
scas
fidiv
and
clc
inc
add
dec
int3
sti
push
jae
mov
adc
xor
dec
retf
adc
or
jns
sub
movs
or
jns
xchg
addr16
ja
push
push
push
(bad)
cmp
ds
push
pop
xor
pop
add
jo
fidivr
inc
(bad)
mov
lds
test
nop
in
xchg
neg
mov
pop
dec
aad
rcr
in
mov
dec
add
jl
sbb
into
mov
aam
xor
pushf
sbb
jbe
and
sar
mov
clc
leave
xor
inc
mov
adc
fcom
bound
pop
dec
rsm
sub
aam
and
mov
outs
hlt
inc
fbld
mov
dec
sbb
push
mov
inc
in
xchg
dec
jge
mov
push
sub
and
bound
mov
dec
sbb
inc
enter
adc
jbe
loop
jno
jmp
(bad)
les
pushf
sbb
pop
jmp
arpl
push
or
jnp
jecxz
push
add
dec
leave
and
mov
rcl
sbb
jmp
data16
(bad)
out
stc
cmp
push
sbb
(bad)
adc
loopne
push
push
xlat
push
push
xor
stos
lods
dec
adc
or
aaa
add
cmp
push
sub
or
ss
rol
or
mov
xchg
push
mov
int3
xchg
inc
inc
addr16
retf
adc
je
xor
daa
aad
adc
xchg
inc
test
and
sub
adc
iret
xchg
cld
scas
aas
jb
add
push
xchg
sti
bound
test
in
or
push
xor
fucomip
inc
adc
xchg
adc
out
es
out
clc
adc
scas
cmps
cmp
sbb
cmp
in
mov
hlt
jecxz
ins
jl
retf
xor
into
adc
mov
mov
addr16
(bad)
add
lods
nop
test
push
lods
sub
mov
xchg
and
push
fdivr
cdq
pop
ja
ret
and
mov
inc
push
xor
adc
add
push
dec
pop
cs
xchg
fst
and
cmp
push
repnz
popf
mov
add
outs
push
fnstsw
daa
lahf
push
and
jmp
ins
mov
add
popf
and
movs
sub
popf
add
ja
(bad)
push
inc
push
push
cmp
add
push
mov
pop
add
dec
cmps
cmp
daa
push
jno
jno
pop
popf
cmc
jno
add
lods
adc
dec
ficomp
sbb
mul
sub
enter
push
or
div
(bad)
adc
jbe
add
dec
inc
hlt
push
mov
retf
sub
push
cli
sub
adc
adc
dec
fmul
push
pushf
in
or
mov
inc
inc
sbb
cs
push
adc
sub
add
popa
(bad)
jns
xchg
sbb
shl
repz
lods
cmc
pop
pusha
xchg
mov
cmp
pop
arpl
or
jmp
or
or
jmp
syscall
push
pop
or
or
or
dec
adc
push
enter
lea
xchg
and
in
int3
pop
mov
pop
enter
xchg
shr
leave
inc
ret
push
jb
lahf
sub
mov
adc
test
fs
jle
adc
sbb
inc
mov
dec
retf
pop
mov
popa
sbb
mov
(bad)
cwde
adc
mov
in
dec
pop
cdq
pop
push
and
mov
add
push
jl
xchg
scas
mov
mov
in
cmps
nop
adc
inc
jae
mov
xchg
push
ja
sahf
outs
mov
pusha
or
add
jnp
ds
or
mov
dec
loopne
push
inc
add
je
lock
lods
and
ins
js
or
inc
imul
fcomp
cmp
and
addr16
jg
mov
sub
mov
lea
add
loope
push
inc
popf
mov
pop
cmp
push
mov
stc
dec
jbe
add
add
and
xchg
xchg
frndint
call
fs
xchg
pop
inc
loop
addr16
adc
(bad)
in
jmp
mov
call
xor
jae
push
and
inc
inc
cmps
add
or
jno
push
enter
xchg
je
and
clc
adc
mov
stos
push
test
push
mov
cld
sub
add
or
sahf
inc
jne
je
cs
clc
sahf
xchg
push
je
fxch
in
add
jg
sahf
dec
fld
std
mov
(bad)
jmp
add
jl
pop
add
push
pop
pop
out
fsubr
arpl
aad
fldcw
daa
stos
arpl
es
int3
icebp
stos
stc
add
mov
sub
inc
push
push
adc
dec
mov
push
dec
xor
jnp
data16
and
pop
dec
outs
dec
cmp
inc
push
mov
out
jmp
or
lar
push
sub
push
or
outs
and
bound
add
xchg
and
mov
in
sub
jmp
stos
xchg
js
adc
adc
add
mov
sub
sbb
mov
inc
mov
or
int3
loopne
mov
arpl
fcom
mov
sub
mov
push
fist
push
adc
(bad)
cmp
or
adc
mov
movs
arpl
mov
icebp
jnp
or
push
xor
in
adc
xchg
jae
push
inc
jae
loop
xchg
or
xchg
jo
and
fs
pop
push
aam
hlt
ja
add
loope
fwait
xor
bound
push
inc
clc
cmp
adc
dec
xor
(bad)
mov
pusha
dec
mov
adc
and
mov
jl
xchg
add
inc
data16
or
and
push
mov
xor
dec
push
push
nop
and
mov
inc
mov
mov
leave
mul
mov
rcl
cmp
movs
sub
and
sub
mov
cmp
cmp
popa
imul
push
inc
enter
(bad)
aam
xchg
xchg
adc
and
mov
dec
xchg
and
push
jnp
mov
cmps
jmp
pusha
sahf
cmp
mov
add
cmp
aad
push
pop
sub
mov
and
(bad)
xor
or
xor
dec
adc
xor
dec
or
jae
mov
jmp
mov
lds
jbe
popf
repnz
loopne
mov
adc
scas
loopne
cmp
popa
imul
out
mov
lods
sbb
pushf
dec
xchg
jl
loopne
aas
push
xlat
call
xor
inc
aam
aam
pop
out
mov
dec
dec
jmp
rol
inc
mov
fwait
cmp
mov
das
daa
mov
jno
or
push
or
pop
outs
pushf
push
jno
mov
xchg
cdq
fstp
mov
jl
aam
les
nop
inc
adc
ins
mov
jle
jecxz
push
push
xor
xor
in
movs
or
addr16
sub
adc
xchg
cmp
or
pop
jg
stos
sbb
push
and
addr16
test
mov
jno
in
cmps
stc
ret
mov
or
adc
es
cmp
mov
movs
push
fdivrp
arpl
pop
out
aam
cmp
mov
daa
stos
mov
inc
lds
cmp
or
out
dec
xor
xor
push
(bad)
xor
sbb
call
(bad)
pop
adc
or
sub
sbb
sub
and
cmp
add
fcom
das
pusha
leave
loop
test
adc
add
cmp
mov
out
push
sbb
fwait
pushf
pushf
mov
cdq
shl
push
sub
cmp
pusha
pushf
mov
adc
lods
cld
push
jmp
lea
xchg
inc
jle
sbb
les
stos
test
pop
nop
neg
sub
add
add
jbe
push
or
lds
sahf
pushf
inc
sti
nop
bound
sbb
mov
movs
sbb
movs
cmp
jge
xor
jp
pop
nop
sub
fmul
push
fimul
xchg
mov
sar
xor
in
xchg
loope
call
call
hlt
jne
mov
sub
fs
out
dec
and
fadd
sub
and
int3
sub
jnp
out
xor
cmp
rol
test
pop
adc
test
cmps
dec
adc
enter
inc
add
push
ja
fmul
rcr
and
nop
les
push
push
jo
jno
sbb
(bad)
mov
bound
test
iret
jecxz
xlat
in
sub
pop
push
iret
jecxz
in
jno
pop
pop
mov
add
add
add
jmp
out
not
mov
nop
dec
mov
add
outs
cvttps2pi
add
cmp
jae
jae
nop
push
and
mov
retf
les
jnp
ret
sbb
jge
adc
or
mov
mov
je
push
fs
or
ja
jb
add
lods
push
or
rcl
lods
cmp
add
xchg
je
call
test
in
fisubr
or
and
add
xchg
and
cmp
mov
(bad)
cli
popa
out
out
lea
jnp
in
mov
dec
sub
into
mov
jno
fadd
push
or
xchg
mov
push
push
or
adc
pop
push
dec
movs
lods
lahf
xor
shl
shl
and
xchg
jae
mov
test
dec
rol
shl
push
xor
xchg
loopne
gs
sub
sbb
std
mov
aad
push
jle
sub
jmp
or
and
cmp
mov
fistp
mov
test
mov
adc
mov
adc
and
mov
and
fcom
pop
nop
mov
dec
mov
xchg
dec
or
jb
sar
add
and
xor
sub
or
mov
sub
dec
inc
(bad)
ss
add
add
xor
clc
jbe
repz
or
sub
adc
scas
sub
mov
xchg
movs
clc
mov
push
fwait
int3
shl
pop
popa
lea
les
mov
dec
mov
cmp
xchg
mov
cmp
ins
lahf
cmps
inc
cmc
aaa
retf
sub
xor
or
imul
test
int3
loop
rcl
imul
dec
arpl
mov
pushf
xor
mov
pop
xchg
jge
adc
nop
(bad)
push
outs
add
adc
aam
sar
fisttp
imul
jge
fcomp
xchg
sbb
(bad)
into
repz
cmp
call
and
loop
leave
cli
and
adc
cmp
cmp
cmps
pop
outs
add
(bad)
jne
xchg
popa
xchg
or
fdivrp
cmps
jecxz
cmp
xor
push
loop
mov
loop
sub
int
loop
or
enter
sbb
mov
test
arpl
jmp
fcmovu
out
cmp
jmp
inc
(bad)
dec
imul
sbb
push
push
or
inc
stos
call
retf
dec
or
ss
es
inc
shl
cmp
jo
adc
loop
outs
test
add
push
dec
sbb
and
popf
retf
clc
add
mov
xor
push
cmp
jecxz
hlt
pop
jmp
cwde
adc
(bad)
push
pop
mov
outs
fcmovnbe
cmp
cli
enter
sar
inc
or
mov
jne
jns
cdq
and
mov
mov
jmp
clc
xchg
add
int3
cwde
repz
dec
jp
cwde
mov
push
jne
inc
cwde
add
mov
sar
mov
dec
xchg
movs
xchg
es
sbb
dec
sbb
ja
mul
cmp
xchg
es
cmps
cmp
into
enter
movs
add
stc
test
lea
and
xchg
sub
dec
jecxz
mov
xchg
sub
sbb
dec
adc
leave
jmp
cmp
in
cmp
stos
call
stos
dec
push
push
dec
push
popa
inc
jne
lock
ret
jns
push
xchg
sub
xor
push
pop
(bad)
jge
cwde
cwde
dec
sar
xchg
and
dec
xchg
mov
lods
inc
push
ss
push
mov
nop
ss
sbb
out
call
jecxz
mov
(bad)
sub
push
xchg
mov
adc
pop
jne
add
xlat
xor
xchg
xchg
mov
dec
repz
fldenv
or
lock
aam
in
mov
xchg
imul
cmp
dec
xchg
pop
jge
push
inc
ucomiss
or
xor
push
fldcw
pushf
xor
jmp
dec
xlat
adc
mov
xchg
dec
cmp
nop
jo
mov
(bad)
xchg
loope
cmp
jmp
cmp
add
xchg
test
out
jne
xchg
xchg
pop
outs
js
out
in
cmp
aas
dec
sbb
inc
loope
aad
int3
test
test
(bad)
dec
and
shl
push
in
push
mov
scas
rol
call
or
inc
adc
jge
cmp
sti
xchg
pop
xor
sub
lock
lods
(bad)
enter
lock
pop
or
ja
pop
or
jbe
mov
lock
out
lods
arpl
or
(bad)
ds
or
or
cmp
sbb
or
out
(bad)
loope
or
(bad)
pop
or
ja
(bad)
pop
or
or
pop
addr16
or
or
or
div
jmp
cmp
push
fimul
shl
vmread
pop
sbb
dec
adc
lods
lds
mov
pop
jmp
inc
sub
jle
sbb
xchg
mov
xor
mov
xchg
imul
sbb
xchg
mov
mov
push
sub
jge
mov
push
(bad)
fild
stos
mov
mov
jno
add
xor
add
pop
dec
add
cmp
outs
fist
adc
cmp
mov
jne
push
repnz
jb
stos
adc
or
add
adc
push
push
mov
mov
push
sub
adc
add
mov
mov
ret
test
je
mov
or
repz
pop
pop
ret
dec
add
dec
(bad)
jne
lea
mov
test
pop
and
mov
sti
inc
and
add
je
jmp
add
xor
mov
or
inc
lea
cmps
lds
ret
mov
dec
or
fwait
push
popf
inc
shl
or
and
jmp
movs
xchg
pop
addr16
mov
cmp
popf
out
inc
cmps
adc
or
add
adc
or
cdq
(bad)
jg
sub
dec
stos
sub
push
repnz
mov
xor
jmp
pop
call
push
je
call
or
add
loop
or
dec
test
or
popf
(bad)
xor
add
fcomi
fs
push
(bad)
je
pop
push
jle
call
cmp
adc
dec
inc
inc
add
in
ins
test
out
jg
add
mov
mov
dec
sbb
mov
inc
je
popa
sub
push
iret
jno
xlat
cmp
test
jmp
inc
enter
test
(bad)
mov
dec
fimul
and
aas
push
xor
mov
ins
jnp
and
lods
mov
push
push
adc
xchg
mov
cdq
xor
xchg
fdivr
test
xchg
idiv
and
in
test
dec
je
mov
lock
rol
mov
test
mov
inc
xor
mov
jne
mov
inc
xor
div
push
dec
mov
and
test
fcom
mov
pop
jne
adc
sbb
and
push
jp
adc
mov
push
jno
rol
push
adc
adc
pop
adc
nop
int3
lock
imul
cmp
xchg
push
std
xor
lock
pop
test
lea
jp
xchg
test
les
js
pop
xchg
nop
xchg
(bad)
shl
or
mov
fmulp
les
xchg
mov
mov
pop
nop
push
inc
loop
mov
pop
inc
(bad)
mov
and
push
push
push
cdq
mov
adc
mov
lahf
and
cmp
lds
push
and
and
add
cdq
dec
lds
jo
sbb
and
aaa
jecxz
pop
push
mov
scas
inc
sub
mov
push
outs
or
sbb
jmp
adc
push
dec
sub
mov
bound
cmp
ja
arpl
dec
das
mov
jl
add
es
aam
and
mov
ror
cld
ret
xchg
mov
and
add
shr
adc
and
sbb
pop
scas
xchg
outs
push
and
xchg
cmp
ror
jmp
mov
inc
and
or
dec
cmp
fidiv
test
or
fucom
aas
jmp
ret
add
je
push
push
dec
hlt
and
inc
stos
push
dec
cmps
cmps
add
push
sub
cmp
add
push
movs
mov
rol
mov
mov
xchg
mov
dec
jo
add
clc
(bad)
push
mov
cmp
movs
push
xor
and
pop
sbb
push
fs
es
imul
push
pop
ffreep
mov
sub
ret
or
xchg
mov
test
pop
sbb
ficomp
or
cld
daa
and
mov
or
mov
sub
inc
cmp
fimul
dec
mov
push
or
xchg
cli
fcomp
push
stos
pop
and
sub
not
loope
jle
xor
cld
aas
and
add
cmps
xor
sub
dec
dec
das
mov
mov
and
lds
cmp
jbe
clc
or
dec
shr
add
add
inc
(bad)
lea
inc
dec
int3
sahf
push
sub
dec
inc
les
adc
gs
mov
cmp
inc
and
sub
xchg
mov
fstp
cmovnp
les
int3
jae
scas
stos
sbb
or
inc
inc
fwait
popa
dec
and
movs
cmp
shl
popa
jmp
je
xchg
adc
and
jne
lods
jnp
fs
add
and
lock
and
xchg
in
dec
sbb
fs
sub
test
(bad)
ret
mov
cdq
add
ins
inc
in
adc
inc
cmps
xchg
add
(bad)
adc
(bad)
aas
mov
jb
and
aaa
inc
or
push
mov
int3
jb
sub
mov
(bad)
movs
iret
mov
and
mov
fadd
test
addr16
fnstenv
add
ins
cwde
mov
push
xchg
adc
test
sbb
and
call
aad
mov
loopne
in
adc
aas
adc
mov
scas
push
mov
sub
push
mov
add
cmp
mov
js
jbe
mov
and
ret
mov
imul
jge
xor
movhlps
lock
sbb
nop
xchg
xor
mov
ss
add
lea
lea
sbb
out
xchg
and
xchg
pop
inc
stos
or
sub
cmps
pop
in
push
sbb
fcomi
jne
xchg
mov
ret
into
inc
inc
or
push
cmps
pusha
adc
or
or
(bad)
fstp
xor
xor
pushf
std
jno
xor
call
pop
pushf
and
and
(bad)
mov
sub
sub
(bad)
cmp
jecxz
xor
(bad)
mov
into
xor
sbb
cmp
jecxz
cmp
mov
into
inc
inc
sti
jecxz
pop
dec
aas
into
(bad)
cmp
dec
jecxz
(bad)
mov
dec
pop
dec
into
(bad)
cmp
pop
dec
pusha
in
(bad)
mov
dec
fs
push
cmp
mov
into
jo
je
cmp
jecxz
js
jl
sbb
sar
into
jle
sub
ds
in
in
iret
aas
mov
in
iret
into
mov
inc
in
iret
into
(bad)
xchg
inc
cwde
iret
into
(bad)
in
sub
mov
movs
sub
iret
and
mov
mov
add
and
xor
and
or
push
xchg
test
mov
out
inc
add
das
mov
dec
adc
sbb
daa
stos
mov
stos
mov
push
repnz
push
inc
sbb
cmp
inc
jne
inc
inc
jne
inc
jne
dec
push
inc
jne
inc
push
pop
pop
push
inc
jne
pusha
fs
inc
jne
ins
jo
jne
inc
je
jl
adc
mov
or
nop
scas
repz
repz
repz
xor
rcl
cwde
or
into
adc
cdq
mov
jne
push
sbb
xor
gs
mov
xor
lea
mov
(bad)
mov
je
or
mov
push
pop
ror
adc
movs
inc
sbb
outs
or
push
in
or
mov
adc
and
daa
xchg
test
jmp
scas
(bad)
dec
nop
xchg
gs
sbb
in
adc
mov
mov
push
call
ucomiss
mov
out
mov
ins
lods
push
icebp
add
xchg
mov
hlt
xchg
enter
cmps
lea
add
sub
movs
mov
adc
test
or
lahf
enter
or
pop
push
jge
movs
fs
nop
es
iret
jmp
mov
mov
ja
push
mov
mov
test
scas
(bad)
mov
inc
push
pop
mov
xchg
mov
addr16
or
xchg
xor
adc
cmp
push
aam
xor
in
inc
sbb
jg
dec
inc
shl
or
test
aam
or
ret
add
mov
mov
pusha
mov
movs
mov
adc
jmp
mov
adc
pop
cmp
je
add
push
fwait
sbb
xor
adc
push
aad
add
mov
inc
dec
inc
fs
dec
in
ficom
cdq
sbb
add
enter
fs
sbb
mov
push
inc
mov
loopne
(bad)
jmp
jnp
sub
jmp
ins
add
mov
lods
sbb
xor
int
es
jns
inc
imul
and
rcl
or
hlt
movs
cld
mov
outs
lea
adc
adc
push
mov
into
(bad)
sbb
cmp
pop
addr16
and
push
inc
xchg
fldcw
sbb
jno
mov
sbb
addr16
sub
jno
(bad)
fldcw
sub
std
cs
das
add
pusha
mov
xor
jle
jne
pop
repz
std
lea
call
ss
mov
stc
movsx
test
cwde
mov
adc
adc
xlat
mov
inc
add
pop
pop
inc
movs
imul
mov
in
inc
test
test
jecxz
aad
mov
mov
mov
mov
mov
lock
and
fisubr
sti
mov
xchg
inc
pop
rcl
mov
dec
rol
icebp
adc
adc
in
mov
jge
mov
inc
pop
rcr
hlt
jno
shl
and
mov
push
fiadd
inc
test
push
movs
xor
jmp
mov
in
xchg
imul
pop
cmp
es
and
add
inc
push
jmp
dec
sub
ins
sub
inc
sbb
add
pop
scas
mov
nop
dec
adc
sbb
xchg
inc
inc
push
cmp
sbb
mov
push
or
ret
xor
mov
adc
mov
inc
test
mov
shl
inc
and
pop
or
inc
test
(bad)
add
ffree
lods
or
mov
movs
cmp
add
jge
ins
test
or
push
dec
mov
fiadd
mov
mov
jp
pop
or
mov
fs
ins
dec
add
es
sbb
gs
sub
push
push
push
xor
test
or
cld
mov
xchg
and
fcom
repz
aad
bound
mov
add
stc
inc
push
test
(bad)
push
call
mov
xchg
inc
test
popf
sbb
push
mov
outs
test
(bad)
scas
fild
jnp
or
mov
mov
ror
mov
stos
mov
adc
push
push
fild
bound
sub
cmp
push
sub
adc
int
dec
addr16
es
adc
into
cwde
pop
repnz
retf
push
add
les
adc
push
add
stos
inc
sub
and
cdq
call
cwde
add
mov
adc
or
jmp
mov
mov
push
arpl
(bad)
push
xchg
fidiv
mov
inc
push
inc
sbb
push
push
test
jmp
daa
push
in
out
mov
sub
sub
push
pop
adc
and
int3
fldcw
pop
add
out
or
add
sti
ins
ret
test
pop
rcl
mov
mov
nop
mov
daa
sbb
dec
out
pop
or
popa
mov
add
imul
mov
jmp
cwde
xchg
mov
xlat
push
aad
lods
pop
add
sub
nop
add
dec
adc
add
dec
dec
inc
xor
pusha
adc
mov
retf
dec
xor
or
dec
dec
lock
mov
enter
pop
inc
dec
mov
push
or
pop
dec
mov
inc
(bad)
jmp
add
(bad)
cdq
mov
mov
inc
mov
sub
lea
push
and
outs
xchg
adc
xchg
xchg
xor
add
jb
movs
sbb
inc
cmp
lea
fs
mov
jmp
adc
leave
repnz
cld
(bad)
xchg
push
jbe
mov
push
dec
xor
jo
jne
aad
adc
(bad)
lods
rcr
retf
or
cmp
fstp
dec
adc
adc
data16
cmp
mov
(bad)
add
enter
repnz
adc
xor
or
(bad)
mov
inc
dec
mov
push
mov
mov
and
sbb
retf
popa
pop
push
aam
inc
cld
sbb
inc
mov
mov
pop
xor
pop
xchg
push
cmp
push
mov
cwde
and
inc
int
arpl
or
out
rol
or
int
loope
lods
sub
pushf
jo
mov
inc
repnz
ins
(bad)
data16
sbb
mov
cmp
loop
xor
or
jno
jmp
dec
scas
out
clc
push
jne
adc
and
stc
jne
xchg
adc
fst
xor
ins
pushf
leave
xchg
mov
fdiv
in
in
mov
aad
loopne
and
mov
ds
aad
mov
xchg
cmp
inc
cmp
ror
scas
(bad)
adc
add
call
pusha
adc
sub
cwde
pop
jb
sub
push
rcr
jne
cmp
out
popa
test
push
dec
push
les
add
pushf
mov
repz
add
mov
xchg
jl
adc
dec
add
cmp
arpl
ror
jns
add
into
jmp
push
jae
inc
ins
sub
dec
ds
popf
xlat
pop
sahf
cdq
jg
adc
mov
dec
les
mov
rcr
jmp
ret
push
xor
adc
push
add
xor
and
mov
inc
bound
stc
or
jne
mov
mov
jmp
inc
push
test
ds
ins
and
pop
ins
rcr
and
push
or
or
mov
clc
and
jbe
or
jmp
adc
inc
ret
inc
fadd
rol
jmp
retf
adc
mov
outs
test
and
sbb
and
test
shl
in
daa
jne
adc
mov
or
je
bnd
sub
xor
sub
or
popa
outs
cmp
cli
lock
aad
push
mov
push
sti
xchg
fadd
sub
mov
dec
mov
inc
xor
cmp
jg
fsubr
mov
sbb
mov
inc
jg
pop
mov
ss
sar
inc
xchg
cld
jmp
mov
call
push
leave
loop
sub
popa
pop
jle
and
jp
sbb
stos
or
or
test
xchg
push
lds
pop
push
push
inc
dec
jge
pop
sbb
sbb
push
mov
and
push
mov
cmp
xchg
daa
mov
sbb
test
icebp
hlt
pop
cdq
push
(bad)
jmp
pop
or
mov
lods
sbb
adc
jnp
adc
inc
xor
fs
jnp
push
xchg
push
dec
inc
and
scas
adc
sahf
fdiv
mov
mov
adc
jbe
in
dec
stc
lods
ins
adc
xchg
inc
push
ret
std
(bad)
cmp
outs
push
and
mov
aam
scas
or
add
and
mov
ret
jmp
in
out
sub
call
add
stos
push
dec
mov
movs
in
and
push
sub
xlat
lods
(bad)
fldcw
inc
pop
test
sar
and
retf
out
enter
sbb
out
or
mov
and
mov
adc
mov
les
rol
lahf
adc
push
mov
inc
mov
(bad)
scas
es
shl
push
mov
mov
mov
mov
cmc
test
mov
sub
add
add
mov
mov
gs
dec
ja
sub
adc
pop
sub
cwde
imul
js
mov
gs
mov
jbe
mov
mov
inc
add
test
add
out
xchg
jmp
je
aaa
inc
int3
mov
xlat
(bad)
fcomp
add
jno
mov
push
or
hlt
sbb
pop
xchg
add
sub
add
gs
add
stos
adc
mov
or
push
mov
fdiv
dec
and
retf
in
add
dec
out
inc
mov
test
jp
dec
aad
adc
fldcw
sbb
sbb
or
fidiv
pop
and
mov
je
push
scas
cmp
mov
cld
sub
into
in
mov
dec
cmp
stos
pop
dec
adc
jne
(bad)
aas
and
and
sti
pop
add
mov
popf
dec
adc
sbb
xor
cwde
movs
lds
mov
inc
push
dec
scas
ficom
dec
stos
lods
test
repnz
xor
mov
pop
rol
push
je
jmp
push
mov
dec
in
mov
test
cmp
test
mov
push
push
mov
lock
cmp
or
or
adc
or
cmovp
add
ins
xchg
in
push
das
push
sbb
popa
cmps
dec
(bad)
pop
loopne
fist
popa
inc
ror
loopne
icebp
int3
or
fadd
jmp
(bad)
sar
xor
nop
push
cmps
xchg
test
fwait
test
fld
pop
push
shr
adc
sti
fsub
sub
fwait
push
cmp
(bad)
(bad)
and
add
cmp
(bad)
ret
inc
or
sub
inc
aam
adc
scas
dec
pop
das
js
mov
or
sbb
inc
int
rdpmc
fisubr
js
push
push
push
push
push
push
jecxz
inc
or
outs
pop
cmp
jae
out
or
adc
pop
cmp
mov
js
lods
xchg
(bad)
fld
sbb
push
repz
cmp
push
push
pop
mov
movaps
or
cmc
mov
adc
push
lock
and
scas
ret
pop
push
mov
lods
lds
mov
inc
aam
retf
stos
lods
or
retf
sbb
sar
ret
mov
sub
(bad)
icebp
ret
out
push
xchg
and
ror
call
(bad)
imul
aad
or
mov
inc
rol
mov
jmp
adc
jl
mov
pop
adc
clc
fwait
loope
je
push
bound
shl
push
add
add
push
xor
loop
dec
push
stos
inc
aad
pop
and
(bad)
xchg
cmp
jecxz
adc
push
adc
mov
push
and
loopne
lea
inc
or
push
push
or
sub
mov
out
ins
dec
(bad)
fadd
inc
mov
sub
inc
retf
cmp
jl
sub
cmp
lea
mov
mov
dec
jecxz
or
jns
in
mov
pop
and
inc
dec
rol
and
mov
and
jo
xor
xor
fadd
xchg
jb
or
push
or
xor
xchg
enter
push
mov
mov
add
inc
add
imul
pop
pop
cs
rcr
shl
push
add
int
jmp
shl
jns
mov
dec
push
fistp
hlt
std
mov
gs
mov
inc
xlat
fmul
rcr
nop
leave
mov
ja
sub
push
push
xchg
sub
(bad)
std
jmp
call
xchg
pop
mul
add
test
mov
adc
icebp
xor
xchg
dec
dec
mov
push
nop
in
mov
xlat
into
je
loope
imul
out
adc
sub
or
push
je
add
jl
push
aam
cmps
lock
xchg
push
jmp
mov
jns
or
jp
jb
xlat
pop
adc
test
rcl
loopne
mov
sub
adc
std
jbe
xchg
push
push
push
inc
cmp
dec
scas
je
push
sub
mov
and
outs
xchg
cwde
push
inc
adc
dec
cli
pop
adc
or
into
push
pushf
pop
mov
and
pushf
pop
sub
je
push
popf
aam
mov
mov
or
dec
cmp
add
je
cdq
movs
push
jb
or
inc
loope
push
adc
fild
add
sub
movs
fwait
movs
sub
cwde
ins
cdq
inc
movs
neg
daa
test
sub
adc
push
aaa
es
int3
test
cmp
pop
pop
out
fcomp
cmp
and
cld
pop
inc
ror
push
popa
scas
in
pop
adc
adc
jmp
xchg
mov
push
or
nop
fsub
and
les
xchg
inc
and
sbb
fadd
xlat
mov
mov
sbb
lock
inc
mov
mov
xchg
nop
push
and
add
aad
sub
mov
pushf
mov
jno
ror
inc
dec
and
es
cmp
fistp
stos
lds
fnstcw
mov
xchg
xor
mov
jl
inc
adc
test
push
add
(bad)
int
jmp
test
cli
fdivr
add
pop
jmp
mov
jecxz
nop
push
inc
pop
sbb
adc
je
(bad)
push
dec
jmp
(bad)
retf
dec
je
rcl
xchg
dec
imul
repnz
xchg
push
xchg
mov
icebp
add
out
ja
or
nop
sub
aam
adc
add
repnz
add
dec
js
or
adc
mov
xor
mov
ret
retf
push
sahf
and
jnp
stc
or
retf
sti
or
pop
mov
and
shl
std
test
mov
ficom
fwait
inc
mov
dec
ret
push
mov
xchg
or
popf
ficom
(bad)
cmc
enter
xor
xor
or
jb
or
jno
les
add
add
push
push
and
inc
jno
xor
je
and
cmp
add
inc
retf
jmp
or
jmp
xor
inc
xor
xor
cld
mov
or
mov
mov
scas
jns
leave
mov
inc
sub
mov
imul
mov
in
cmps
adc
adc
cwde
or
loopne
mov
dec
add
add
sub
imul
popf
loop
push
sbb
add
pop
or
(bad)
mov
pusha
ja
pop
in
pusha
loope
into
stos
adc
add
pop
push
jmp
and
loop
mov
sub
gs
lds
adc
fstp
inc
std
xchg
pusha
pusha
dec
pop
stc
xlat
cmp
sbb
add
pop
bound
dec
push
and
call
call
or
add
inc
nop
pop
sti
sbb
shr
cld
shr
imul
or
call
out
fild
xor
push
xor
ja
in
iret
add
sbb
std
adc
push
sbb
(bad)
pop
pop
or
jmp
jne
add
leave
cld
leave
leave
pop
fsub
mov
ss
fs
push
aas
inc
in
or
out
test
stos
add
in
sbb
je
jo
sbb
inc
push
fstp
dec
and
jmp
jecxz
or
fld
sbb
(bad)
mov
cmp
retf
jecxz
adc
jg
pop
pop
fisttp
iret
stos
in
inc
and
aas
sbb
mov
sbb
xor
cld
imul
jae
xlat
fld
sbb
mov
add
add
test
retf
cmc
je
or
mov
or
fnstcw
sub
je
or
(bad)
mov
cmp
into
inc
pop
es
sbb
into
push
or
add
imul
xchg
dec
mov
fstp
(bad)
into
aas
cmp
shr
add
sar
add
fstp
sbb
enter
mov
lds
jmp
rcr
fs
call
sbb
inc
jno
cmp
mov
jno
cli
xchg
or
cmp
lock
push
retf
adc
xor
(bad)
sub
mov
fmul
xchg
xor
mov
sub
mov
push
xchg
sbb
push
adc
pop
out
in
dec
sub
jecxz
push
dec
leave
adc
hlt
cmp
add
es
jb
cmp
adc
stc
call
push
or
popf
xchg
xlat
movs
pop
mov
test
jmp
add
mov
inc
adc
jmp
or
push
fprem1
xchg
std
sub
xchg
add
sub
adc
xchg
sbb
out
fwait
push
cmp
mov
and
sbb
lea
fcom
mov
sub
std
adc
and
sbb
sbb
inc
in
(bad)
int
push
and
stc
sub
inc
push
mov
add
ficom
ds
ror
or
and
add
rol
push
jle
add
jmp
add
(bad)
jmp
out
lea
jae
and
dec
or
mov
cmp
lock
push
test
enter
into
add
gs
jmp
inc
sbb
mov
dec
pop
cdq
sub
xor
push
aam
sub
add
bound
sbb
call
jg
adc
(bad)
jnp
inc
mov
ficom
in
inc
xchg
popa
movs
xor
xchg
xlat
aas
movs
jge
mov
lock
or
pop
mov
cmp
mov
cmp
and
push
mov
ja
sub
push
sub
test
ret
jae
cmps
je
inc
dec
mov
(bad)
ret
dec
add
or
mov
xchg
lock
sahf
or
mov
jne
rol
loope
lods
dec
sub
cdq
call
rcl
fiadd
xchg
and
jp
jne
aam
inc
mov
loope
xchg
dec
mov
ins
jns
or
enter
mov
dec
push
sub
fnstcw
push
push
xchg
mov
jb
out
push
and
mov
movsx
sub
push
or
push
addr16
and
inc
loopne
ja
fnclex
icebp
ja
jbe
fld
mov
out
nop
sbb
(bad)
shl
retf
clc
fldcw
dec
dec
pop
clc
nop
mov
mov
push
xor
fwait
icebp
push
pop
sbb
fwait
push
mov
aam
fwait
pop
xchg
lods
gs
cmp
fcmovnu
xor
cli
add
call
and
outs
add
jmp
xor
out
pop
add
mov
je
stos
inc
pop
addr16
stc
cmp
test
push
push
lods
in
adc
and
into
add
push
or
loope
outs
test
aam
dec
clc
lods
or
idiv
or
sbb
(bad)
loopne
lock
inc
or
test
adc
inc
inc
or
imul
add
imul
nop
movs
xor
movs
cmps
imul
clc
jecxz
sub
jnp
adc
das
mov
in
push
outs
cdq
jmp
jmp
mov
mov
rcl
lods
retf
xchg
inc
pop
and
dec
stos
lea
clc
and
pop
in
call
sbb
retf
mov
rcl
mov
rcr
sbb
jmp
push
xchg
sbb
jnp
jmp
les
push
enter
lock
sbb
jle
rol
mov
jmp
push
mov
push
dec
push
cmc
cmp
push
loop
adc
mov
sub
push
sub
push
sbb
cmps
push
inc
mov
loop
xor
fs
lock
imul
or
cmp
retf
test
call
fnstcw
sbb
call
push
enter
ss
aam
neg
cld
mov
jb
ds
(bad)
xchg
std
(bad)
ds
cld
mov
cld
xor
inc
and
jle
(bad)
and
(bad)
inc
ftst
les
hlt
or
in
add
mov
out
mov
fwait
and
call
jb
ds
xor
jl
push
push
fnstenv
xchg
push
sbb
pop
push
arpl
adc
aas
adc
xchg
stc
dec
cmps
add
mov
iret
push
xchg
jmp
jge
leave
push
scas
add
adc
sub
mov
jo
std
mov
aaa
lds
mov
cld
pop
leave
push
aam
push
add
retf
xlat
test
cmc
sub
or
xchg
mov
test
fild
xchg
popf
dec
jae
xlat
sti
pop
icebp
lods
jmp
in
adc
jl
cmp
das
and
pop
(bad)
ja
call
xor
jp
sbb
test
and
in
add
cmps
es
int
int
push
pop
pop
mov
stos
xchg
out
out
stos
clc
mov
lock
sub
ins
stos
push
(bad)
xchg
add
dec
jmp
mov
push
shr
push
push
cld
movs
(bad)
xchg
xor
aaa
and
mov
mov
aam
pushf
les
cmp
mov
out
pop
shr
adc
or
je
jnp
shl
sbb
inc
xchg
clc
cmp
pop
hlt
into
mov
into
je
inc
mov
bound
fnstcw
shr
pushf
or
jno
adc
jbe
test
stos
push
add
adc
dec
or
stos
lds
sub
cmp
adc
clc
mov
cld
or
xor
push
(bad)
mov
cmp
inc
cmps
lahf
jg
(bad)
and
mov
sub
ins
inc
pop
test
into
pushf
sub
inc
sub
hlt
and
sub
(bad)
jne
ret
int
bound
push
sub
mov
int3
sub
adc
jo
mov
or
sbb
mov
pop
xor
cmp
inc
cwde
pop
loop
or
int3
mov
mov
push
in
mov
jno
sub
int3
clc
rcl
cld
je
bound
push
in
hlt
jb
mov
dec
or
std
dec
sub
cmp
and
das
sbb
test
sub
cwde
cmps
sahf
scas
jl
mov
mov
push
test
add
mov
hlt
outs
jp
fs
popa
stc
mov
fcomp
or
push
mov
loop
in
adc
and
push
aam
mov
out
jecxz
aam
push
(bad)
clc
sbb
test
xchg
(bad)
sbb
add
dec
pusha
sbb
adc
xchg
jmp
sahf
push
cmp
inc
dec
xchg
xor
jno
aam
mov
(bad)
pop
div
push
adc
xor
mov
xchg
inc
jge
or
mov
pop
std
inc
aam
mov
inc
xchg
fld
jns
call
jmp
mov
arpl
dec
stos
fs
mov
sbb
inc
retf
pop
push
cmc
pop
loop
imul
add
punpckldq
and
enter
pop
or
fmulp
fnstenv
out
retf
push
xchg
sbb
xchg
ror
xchg
adc
cwde
xchg
xchg
pop
sbb
xor
inc
repnz
icebp
pop
jmp
int
data16
sub
jae
cmp
inc
ins
mov
addr16
pushf
(bad)
into
or
or
push
dec
push
push
mov
lmsw
(bad)
jecxz
mov
dec
test
test
push
mov
adc
jge
jo
pop
mov
or
pop
shl
test
loope
js
mov
mov
dec
xor
cmp
sbb
pop
ret
cld
test
sbb
outs
icebp
in
and
call
push
leave
out
cmp
int3
push
aam
xor
bnd
xor
fild
call
and
test
mov
cmp
ret
xchg
sbb
je
cmp
(bad)
pushf
add
lock
pop
add
pop
add
sub
das
fmul
jmp
sub
mov
mov
add
mov
xchg
mov
shl
cmps
xor
jno
xor
je
push
in
xor
mov
push
sbb
xor
dec
push
mov
mov
dec
test
in
pusha
retf
push
stos
ins
(bad)
jbe
test
call
test
in
dec
cmp
aas
or
adc
nop
enter
test
bound
rcl
add
ror
call
jmp
cmp
and
adc
cmp
push
adc
out
push
test
jne
leave
and
sar
mov
(bad)
loopne
clc
scas
add
inc
adc
pop
push
push
test
jns
push
shr
lea
into
ret
rol
or
or
or
fld
enter
jmp
idiv
pop
push
das
sub
or
and
sar
test
xchg
xchg
jge
adc
inc
in
sti
test
int
mov
dec
loopne
pop
movs
xor
add
dec
or
dec
(bad)
cld
shr
test
dec
mov
adc
inc
mov
dec
leave
mov
loopne
adc
jae
lahf
fnstcw
jo
mov
outs
lock
loop
jmp
push
or
loop
add
cmp
push
dec
xchg
dec
jmp
add
loope
dec
push
pop
push
mov
add
das
cmp
sbb
(bad)
cmp
cmp
mov
repnz
iret
lods
addr16
push
inc
xor
jae
mov
loopne
cmp
je
jo
les
mov
and
pushf
aam
movs
out
push
(bad)
mov
adc
cmp
push
xor
fs
xor
push
and
enter
sub
repz
sub
sbb
(bad)
(bad)
pop
mov
ds
jmp
jg
mov
imul
inc
add
xor
jmp
mov
pop
inc
add
add
or
jmp
push
(bad)
fcomp
jmp
inc
lds
add
mov
add
mov
sub
push
inc
xor
mov
cdq
test
cmp
xchg
lods
movs
call
and
shl
mov
aas
je
mov
popa
sub
inc
mov
dec
adc
inc
int3
cmp
and
lea
push
sub
add
xchg
xchg
push
xchg
retf
inc
add
dec
cmps
mov
and
stos
and
xchg
imul
sub
dec
cmps
mov
cmp
nop
sub
fbld
xchg
dec
or
ds
imul
sub
(bad)
clc
test
jl
mov
push
cmps
push
xchg
ins
xlat
popa
and
loop
cmp
xor
test
or
mov
jle
cmp
rsqrtps
test
mov
mov
sbb
pop
mov
ss
xor
je
add
mov
aaa
neg
mov
repnz
shl
outs
push
loop
cmp
bound
cmp
dec
test
mov
inc
mov
data16
push
add
cmp
add
pop
cmc
test
xor
adc
pcmpgtb
or
add
jne
or
dec
out
mov
mov
mov
or
dec
jmp
dec
std
call
jl
mov
sbb
nop
call
test
arpl
or
sbb
sub
jp
sub
jmp
daa
add
out
jg
inc
sub
xchg
or
enter
and
sbb
cmc
jp
push
daa
add
and
shl
mov
jg
enter
fwait
or
jl
xlat
and
jne
ins
sbb
test
aas
(bad)
shl
pop
in
enter
mov
scas
mov
inc
sahf
xor
and
repz
xchg
imul
xchg
fiadd
test
xchg
or
mov
adc
call
jle
or
xchg
ror
mov
(bad)
dec
cmp
cld
psrad
add
iret
add
add
ds
jae
dec
cmc
add
mov
jb
add
retf
stc
or
iret
inc
sub
fldcw
bound
jmp
adc
push
test
cmp
cmove
int3
cmp
cmp
push
call
daa
add
pushf
neg
into
add
ds
cmp
push
push
pop
mov
stos
jp
mov
adc
dec
inc
dec
jns
imul
xchg
stos
inc
pop
lds
loope
leave
adc
jmp
push
mov
shl
push
pop
add
dec
imul
add
je
mov
cmp
pop
inc
pop
add
push
mov
dec
mov
call
inc
dec
sbb
push
cli
pop
adc
sbb
popf
jmp
inc
pop
adc
rol
xchg
dec
jae
(bad)
or
adc
test
mov
cld
idiv
fwait
mov
retf
pop
mov
adc
lock
movs
add
push
adc
bnd
nop
outs
fadd
jmp
pop
adc
shl
inc
fbstp
cmp
jl
cmp
xchg
mov
sbb
jmp
inc
pop
xor
jmp
and
les
mov
test
add
fwait
push
repz
mov
jmp
jg
mov
xor
and
out
cli
jle
xchg
inc
xchg
enter
hlt
sub
push
int3
jg
out
dec
clc
cmp
cwde
cdq
or
mov
imul
adc
or
jmp
aam
repz
pop
fprem
clc
lea
int
mov
(bad)
aaa
rcr
clc
jbe
jno
jae
arpl
sbb
(bad)
dec
mov
jne
clc
ins
sub
dec
shr
not
mov
xchg
add
mov
dec
imul
xchg
mov
lahf
dec
mov
lods
fld
sar
call
and
cmps
test
adc
jmp
sti
stos
pusha
cmps
call
jbe
les
cld
cmp
cli
pop
inc
or
xchg
lea
add
shl
mov
jge
xor
or
sub
push
pop
fsub
jmp
in
ds
add
xchg
jge
sub
dec
jl
retf
aas
icebp
out
mov
aam
es
aam
aam
frstor
jae
push
lods
push
not
xor
jl
ja
aam
xor
mov
out
(bad)
les
inc
cmc
xchg
xor
mov
or
shl
call
ss
dec
shr
call
popf
pop
push
clc
dec
cmps
sbb
inc
inc
aas
ds
cld
test
lahf
popf
jne
mov
or
repz
xchg
push
icebp
and
iret
and
fcomp
jnp
sar
cmp
pusha
cwde
ins
mov
ltr
jnp
add
in
jg
call
movs
adc
mov
mov
xor
push
int3
stos
fiadd
inc
push
fs
or
cmp
inc
(bad)
es
lock
das
sub
sub
int
add
push
call
shl
dec
push
inc
xchg
cmps
add
ds
adc
clts
mov
fs
into
sub
xchg
add
xor
stos
mov
add
inc
xlat
and
or
stc
fadd
fidiv
and
test
jge
test
fdivrp
lods
jb
pop
test
dec
in
gs
mov
imul
ret
fwait
push
add
fs
dec
fisubr
push
inc
movs
sbb
pop
inc
dec
call
cmc
test
xlat
jmp
movs
mov
loope
jl
repnz
jae
mov
pop
mov
movs
inc
inc
cmp
add
call
sub
sub
push
push
ror
dec
pop
shl
cmps
mov
rol
sub
dec
lock
or
test
push
or
rcr
jp
inc
aam
push
push
jne
ret
sub
and
cwde
adc
dec
inc
and
cmc
sbb
adc
mov
test
push
inc
mov
jmp
mov
out
push
cmp
loopne
mov
loopne
mov
in
loop
mov
and
and
imul
and
mov
popf
pop
xchg
adc
leave
and
cld
in
pop
cmp
hlt
sbb
(bad)
and
hlt
jmp
xchg
retf
sub
and
mov
retf
inc
cwde
out
sbb
and
cwde
fcomip
or
loop
adc
sub
mov
lock
sbb
and
add
rcl
cmps
mov
dec
retf
adc
or
in
inc
repz
xlat
lock
jecxz
mov
lods
adc
bound
xchg
ds
data16
or
jl
ret
adc
add
inc
loop
jmp
push
inc
scas
outs
push
inc
(bad)
aaa
hlt
and
add
sub
add
rcr
cwde
sti
sub
scas
fldcw
or
sti
mov
cld
adc
lods
cld
mov
mov
and
nop
clc
sub
call
push
fs
xor
dec
and
mov
(bad)
call
mov
jo
inc
imul
jno
sbb
dec
popa
clc
add
dec
xchg
inc
jl
xor
mov
jne
mov
in
jmp
ret
and
ret
pop
addr16
mov
call
mov
jbe
hlt
add
leave
out
and
sub
inc
test
sbb
jbe
sub
inc
data16
out
sub
nop
in
mov
ins
aaa
js
into
cmp
adc
push
and
adc
vaddpd
cmp
call
sbb
int3
test
mov
ins
fldcw
test
test
std
inc
imul
jne
jmp
push
jo
aaa
push
mov
xchg
push
fbld
or
mov
push
rol
inc
lods
js
mov
sub
add
push
cld
mov
lods
movs
int3
or
jge
sar
ret
inc
jb
add
scas
xchg
idiv
iret
stos
jmp
xor
sub
cmps
mov
dec
mov
aaa
shl
xchg
adc
adc
pop
inc
ret
ins
call
mov
adc
rol
mov
iret
fidivr
lds
(bad)
cld
mov
inc
in
and
mov
mov
adc
ror
cmp
popa
rol
(bad)
iret
repz
(bad)
enter
sub
sti
retf
aas
mov
dec
xchg
adc
pop
or
adc
xor
in
cdq
ret
mov
pop
add
in
sub
fadd
sbb
inc
add
inc
add
in
inc
clc
sub
jne
inc
and
mov
inc
push
mov
hlt
dec
jmp
sub
mov
mov
or
stos
and
cli
test
movups
inc
jne
mov
adc
push
das
adc
dec
je
cmps
adc
jne
in
inc
adc
lods
adc
inc
(bad)
shr
call
adc
add
xor
(bad)
leave
clc
bound
daa
je
mov
mov
pop
scas
es
mov
add
dec
(bad)
pop
adc
and
inc
sbb
mov
gs
fstp
js
les
push
sahf
mov
or
adc
cli
or
jmp
mov
jmp
dec
mov
or
sar
enter
mov
sub
cmp
lock
push
sbb
mov
mov
xchg
scas
nop
stos
cld
and
push
test
shl
sub
fmul
ss
test
push
mov
cmp
jl
bound
or
mov
adc
data16
aam
xchg
shr
mov
push
mov
add
popa
adc
add
jg
fldenv
inc
or
sub
and
sub
mov
ror
and
mov
mov
js
call
xchg
jmp
fdiv
xchg
or
or
inc
sbb
nop
dec
cli
cdq
mov
mov
jge
into
mov
jle
sub
xchg
in
add
mov
mov
popa
dec
sub
and
rol
mov
lds
test
ins
ror
push
int3
push
in
cld
(bad)
in
inc
sbb
movzx
in
lea
clc
xor
dec
xor
mov
aaa
dec
jecxz
inc
xor
rcr
xchg
mov
clc
jb
pop
adc
xchg
cmp
cwde
adc
and
lods
push
cmp
mov
xor
add
sub
add
jmp
loop
xor
mov
or
fucomip
iret
xor
sbb
sub
add
rol
icebp
mov
pop
inc
dec
xor
mov
mov
or
inc
repnz
fsubr
push
repz
and
sub
push
out
inc
push
ds
cmp
xchg
jp
mov
dec
sbb
scas
lods
fcomp
nop
dec
nop
adc
cmp
retf
into
sub
div
dec
into
sub
mov
cmovno
outs
xchg
movs
adc
ins
les
inc
fidivr
and
push
mov
push
mov
cmp
out
mov
rcl
movs
(bad)
xchg
push
test
je
inc
retf
cmp
xor
xor
ret
mov
mov
push
or
dec
div
cmp
and
aaa
int
cld
not
lds
sub
cmp
popf
loop
je
adc
(bad)
mov
clc
and
push
and
je
and
jno
retf
push
cmp
mov
ret
(bad)
scas
mov
sbb
cs
mov
mov
cld
sub
mov
aas
adc
stos
outs
add
ffreep
ja
push
scas
movhps
pusha
jmp
test
adc
or
inc
out
sar
prefetcht1
outs
xlat
dec
pusha
pop
out
fiadd
ja
(bad)
or
daa
pop
cmp
adc
add
push
mov
jbe
jns
test
jne
fwait
mov
ret
aad
sub
bndldx
add
add
js
scas
in
pop
jg
cmc
dec
pusha
popf
imul
rcl
test
fwait
sar
retf
dec
jmp
clc
mov
into
cmp
fist
and
push
loope
inc
inc
stc
int3
sub
cmp
push
cmp
loope
jbe
push
or
into
nop
test
(bad)
inc
loope
add
lahf
cdq
and
push
pusha
push
push
push
jge
and
sar
or
mov
push
sub
mov
fidivr
popf
dec
xor
sbb
fwait
mov
adc
xor
sar
out
mov
jo
in
sti
sub
fdivr
and
not
push
sti
fwait
shl
add
cmp
cld
test
push
rcr
cmp
mov
shl
arpl
push
out
fwait
shr
lahf
aam
xor
(bad)
test
out
jnp
in
mov
sar
cmp
test
repz
xchg
les
out
cld
outs
add
or
test
and
aaa
sub
cld
jb
add
xchg
and
and
xchg
dec
adc
jno
call
aam
xchg
sti
lods
mov
rol
jg
jno
fild
test
and
inc
adc
mov
add
cmc
int3
mov
cdq
shl
jg
sbb
test
sub
outs
mul
inc
pusha
add
loope
adc
mov
jne
daa
xor
or
and
sbb
cmp
shl
adc
fwait
sar
mov
dec
dec
inc
sbb
push
add
fmul
gs
sub
sbb
jmp
out
pusha
jp
cwde
mov
(bad)
leave
xor
or
inc
test
push
addr16
mov
sahf
int
xchg
adc
xchg
xor
sub
into
fild
jnp
push
fbstp
mov
imul
fisttp
push
jp
or
scas
cmp
scas
pop
cmp
sub
mov
mov
mov
xlat
sub
fs
pop
add
or
pushf
sbb
mov
adc
into
mov
in
cmp
aam
aam
lods
call
mov
jmp
push
movs
mov
xchg
sub
dec
outs
push
xor
test
jno
sub
hlt
pop
xchg
hlt
xor
out
jmp
ss
cmp
pop
mov
stc
popf
rep
lock
push
lahf
ins
sub
test
outs
in
pop
jnp
outs
or
xchg
mov
lock
call
push
lock
or
nop
(bad)
sbb
popf
pop
push
sbb
in
js
outs
lea
xor
xchg
es
and
dec
dec
push
pop
in
les
sub
adc
gs
fiadd
mov
xchg
mov
nop
pop
in
and
mov
fisttp
stos
add
xor
push
ror
fisub
push
push
fs
test
mov
aam
out
push
cld
and
clc
add
and
adc
push
loop
ds
test
mov
dec
add
je
jnp
dec
adc
ficomp
in
mov
(bad)
cmps
mov
test
sbb
cmp
cli
cmc
mov
adc
mov
pop
add
cmp
rol
sub
mov
push
adc
mov
jnp
mov
or
and
cmp
or
test
push
sub
lea
mov
adc
mov
cmp
mov
adc
xchg
push
adc
mov
push
push
push
push
mov
cld
movs
ins
inc
in
and
push
xor
outs
dec
mov
ins
daa
mov
add
lea
test
add
push
in
sub
nop
cmp
ret
sti
outs
inc
dec
sbb
mov
add
inc
inc
mov
push
pop
bound
pop
and
push
push
adc
sub
sub
push
aas
inc
rol
or
aam
xchg
int
imul
jo
lea
xchg
loopne
push
test
sbb
pushf
mov
push
xchg
ret
dec
cmps
rol
int3
and
push
push
push
call
push
cdq
hlt
add
in
sub
je
xor
or
add
fcomp
ret
js
xchg
dec
loopne
sbb
sbb
push
add
jb
nop
test
fidiv
movs
cmp
popa
inc
and
add
das
and
mov
inc
test
jne
sub
pop
xor
stc
hlt
mov
cld
clc
or
xor
repz
mov
inc
test
sub
lea
dec
add
enter
sub
add
mov
rep
cwde
das
loopne
mov
cmp
mov
adc
lock
mov
adc
add
dec
jae
xor
daa
ret
push
mov
xchg
add
outs
add
sbb
and
push
in
mov
or
jl
push
and
fwait
adc
sub
in
or
mov
mov
scas
pop
mov
pop
or
pushf
push
and
and
pusha
cmovb
and
cmp
(bad)
shl
push
or
push
sar
and
pop
adc
out
mov
and
clc
xor
movs
mov
in
mov
ret
lea
push
pop
xchg
mov
in
xor
cmps
sbb
sub
leave
test
cmp
in
adc
pop
nop
lods
call
mov
adc
mov
loopne
cmp
mov
xchg
ds
retf
sub
int3
mov
mov
or
push
inc
inc
jmp
lea
or
sbb
pusha
jns
add
add
add
cmp
cs
jge
sub
sub
sbb
test
and
and
ficom
retf
mov
jp
push
or
mov
dec
and
or
in
adc
adc
mov
retf
push
and
shl
sar
and
seto
sub
jmp
dec
mov
sbb
mov
push
retf
bound
push
push
add
jae
jbe
adc
cmp
adc
and
xor
je
sub
clc
and
add
add
or
and
push
cmp
cmp
test
xor
pop
repz
mov
ins
daa
call
pop
fimul
add
cmps
add
inc
xchg
sbb
hlt
adc
push
sub
sub
fnstenv
fimul
pop
stos
mov
and
repz
dec
pop
rcl
js
sub
test
retf
dec
cdq
inc
or
lods
mov
sbb
jne
push
add
add
mov
std
out
and
loop
and
leave
pop
sbb
add
cmp
xor
aaa
enter
sub
xchg
push
test
push
ins
enter
push
imul
xchg
pop
cmp
adc
ins
sub
sbb
or
nop
add
jmp
adc
sbb
jmp
retf
push
inc
cmp
xchg
je
inc
jl
adc
nop
(bad)
xor
ret
xchg
dec
or
scas
pop
mov
xor
cwde
and
loop
fiadd
lods
or
rol
sub
or
(bad)
fwait
movs
mov
mov
xchg
xchg
and
adc
push
dec
lods
sbb
xchg
pop
ins
pop
add
jp
call
mov
add
push
jne
add
repz
mov
pusha
inc
push
pop
inc
lea
mov
lea
push
pusha
lods
hlt
inc
je
mov
es
repnz
xor
add
ret
fiadd
ret
ins
dec
or
cmp
fild
cdq
outs
mov
mov
xlat
add
mov
push
add
lea
push
add
in
add
dec
add
lods
addr16
jecxz
add
jg
repz
rcr
enter
and
sbb
into
hlt
cmc
jns
imul
sbb
rcr
sbb
push
dec
inc
std
xor
xchg
cmp
mov
ficomp
int3
adc
xor
and
mov
cmp
or
xchg
inc
cmp
push
and
push
dec
hlt
xchg
leave
imul
adc
ds
stos
ds
mov
inc
xchg
retf
nop
xchg
jmp
icebp
in
pop
xchg
adc
mov
dec
pop
das
ins
les
or
fst
repnz
scas
test
outs
push
add
test
fldcw
daa
test
test
inc
add
int3
jmp
aad
mov
loop
add
push
add
gs
ins
mul
lods
cmp
or
push
sub
cld
inc
xor
enter
jecxz
(bad)
mov
cli
ja
aaa
jmp
jp
mov
sbb
add
inc
dec
sbb
test
sub
gs
add
cld
mul
inc
jb
sub
rcl
or
cmps
cmp
les
or
les
stos
sbb
pop
popf
pop
(bad)
fucomi
sbb
sbb
cmp
inc
push
xor
xchg
scas
mov
adc
(bad)
mov
push
sbb
sub
nop
add
push
jbe
and
lahf
dec
mov
push
(bad)
xor
and
ret
add
add
and
rol
and
and
add
int3
not
or
pop
ds
xchg
jmp
fnop
sbb
repz
mov
sar
jg
mov
jmp
and
mov
inc
xor
and
int3
clc
pop
or
nop
jno
or
cmp
mov
xchg
jl
xor
push
push
jg
dec
mov
jb
add
adc
aas
cmp
and
test
adc
jne
push
cmp
or
je
adc
hlt
cdq
dec
mov
aaa
es
dec
popa
les
ret
dec
fwait
pop
push
or
retf
add
shl
retf
jg
jl
jae
fucomi
sub
enter
clc
hlt
push
mov
add
scas
jge
push
or
push
mov
cdq
and
adc
xchg
les
fs
(bad)
cmp
mov
ins
and
mov
inc
mov
inc
push
jnp
cmp
movs
sti
adc
movs
pop
aam
push
jne
inc
adc
dec
adc
xor
enter
dec
jmp
bound
clc
mov
cmp
push
mov
sub
dec
out
mov
(bad)
(bad)
imul
inc
outs
jns
xor
scas
inc
call
push
xor
xchg
leave
hlt
xchg
retf
xlat
js
or
and
push
shl
test
fbld
hlt
movs
add
inc
jb
rcl
out
push
or
dec
test
arpl
retf
out
or
scas
sahf
push
adc
mov
push
add
mov
cmps
push
lods
call
xor
popa
push
push
push
or
je
add
mov
mov
add
or
mov
fadd
sbb
rol
add
mov
out
push
cmp
add
add
out
mov
or
add
add
xor
or
push
or
rol
stc
(bad)
xchg
push
adc
inc
mov
sbb
or
cmp
rcl
mov
sbb
push
test
adc
pop
js
je
sar
push
add
add
cmp
iret
add
stos
xor
lds
ror
lea
or
pop
sbb
repnz
xor
test
jbe
add
push
inc
adc
repnz
sub
cmp
add
or
cmp
jb
les
add
cmp
test
cwde
test
pusha
dec
inc
jnp
hlt
sub
add
add
and
idiv
(bad)
je
push
jno
add
sub
push
push
and
mov
shr
pop
pop
xor
xchg
jne
call
cmp
xor
add
inc
xor
xlat
les
fist
add
jne
pop
add
and
sub
add
xchg
das
fdiv
mov
push
cmp
cld
cmp
fmul
inc
or
or
pop
xor
xchg
loope
inc
push
cwde
shl
mov
ret
jne
add
imul
sar
iret
jb
jne
in
call
add
pop
jae
lea
lahf
mov
mov
push
xor
popf
adc
dec
fcom
fcom
push
sub
dec
sbb
ds
clc
add
jbe
cmp
jb
inc
cmp
test
or
mov
adc
int
xor
repnz
aam
icebp
sub
inc
call
cmp
sub
sub
dec
sti
in
pop
sub
popa
je
arpl
je
(bad)
xor
xor
enter
test
add
js
addr16
gs
cld
and
adc
push
bound
adc
push
push
xor
sub
sbb
sub
or
cdq
stos
nop
sbb
push
push
sub
mov
mov
mov
push
cmp
or
pusha
push
or
sub
push
push
fdivr
or
or
xchg
jmp
(bad)
clc
verr
mov
loop
aam
push
push
dec
mul
cld
jne
sub
pop
cmp
adc
ror
push
int
add
lea
adc
inc
or
shr
pop
cs
and
inc
pop
dec
pop
jg
xchg
or
mov
add
cld
or
imul
jnp
mov
ds
lock
mov
loope
fidiv
shl
daa
bound
(bad)
ja
jo
sbb
cmp
cmc
push
inc
push
sbb
sahf
cmp
std
in
pop
in
repnz
rcl
mov
sbb
push
outs
(bad)
jg
xchg
adc
push
int
les
adc
push
inc
jno
cmp
jo
push
ins
jns
jl
(bad)
mov
(bad)
pop
cs
mov
sahf
add
cmovb
push
sub
mov
mov
mov
jp
mov
sbb
mov
or
cmp
mov
ins
mov
or
sbb
outs
mov
jbe
pop
test
pop
ret
sbb
xbegin
mov
in
bound
cmp
pop
aas
mov
xor
add
(bad)
push
pushf
jne
push
shl
inc
and
and
je
cmps
mov
inc
inc
dec
or
mov
xchg
inc
out
mov
xor
fstp
cwde
loopne
shl
push
push
test
xchg
push
sub
loope
xchg
mov
shl
mov
shr
jmp
icebp
adc
xchg
cwde
mov
cmp
sbb
adc
mov
jp
retf
add
sub
call
adc
dec
add
add
jmp
mov
xor
adc
fst
mov
les
or
adc
retf
(bad)
enter
ret
xchg
nop
lods
adc
dec
jge
and
hlt
or
jl
xor
mov
stc
sub
cld
add
inc
ins
mov
sub
aad
(bad)
pop
outs
sti
mov
mov
push
(bad)
sahf
jmp
cwde
add
rcl
xor
ins
push
xchg
add
scas
popf
aaa
inc
mov
retf
mov
(bad)
sbb
or
adc
test
and
test
and
adc
mov
cld
mov
push
pushf
cmp
sar
jne
jmp
nop
and
je
in
xor
mov
inc
dec
cld
pop
push
mov
addr16
rcl
stc
add
mov
call
adc
add
or
cmp
push
xchg
and
test
push
test
clc
ror
ret
movs
jp
sub
nop
cmp
xchg
add
out
cmovg
push
xchg
fnsave
sub
jecxz
mov
add
cmp
cli
and
xchg
xor
cmp
xor
and
xor
fst
push
jb
inc
out
aaa
push
jmp
cmps
lds
push
mov
or
hlt
mov
outs
fadd
call
add
sub
jmp
mov
push
inc
pop
adc
(bad)
push
mov
sbb
sbb
push
push
pop
jnp
cmp
sbb
fcmove
jmp
lea
mov
arpl
rcl
rep
sbb
sbb
add
(bad)
or
push
hlt
mov
or
push
mov
mov
push
loopne
out
xchg
mov
mov
sub
dec
push
sbb
mov
jne
xor
xor
mov
enter
iret
stos
adc
hlt
or
add
dec
mov
inc
mov
fs
adc
dec
aad
pop
push
aam
jne
sub
inc
mov
mov
sub
cmps
add
retf
mov
mov
inc
mov
mov
js
jl
daa
sub
inc
jmp
mov
ins
cmp
aas
add
dec
xchg
int3
test
jle
sub
pop
fmul
add
dec
add
xchg
xor
pop
pop
lea
(bad)
lock
das
call
test
sub
add
inc
ins
ins
outs
arpl
popa
push
add
jae
and
mov
into
(bad)
nop
dec
xchg
jg
sbb
retf
inc
pop
mov
cmp
mov
dec
std
sub
mov
or
test
cpuid
data16
xor
sub
inc
fbld
out
shr
and
or
outs
xlat
clc
sbb
leave
in
sbb
or
lods
into
mov
ror
ret
cmp
cmc
dec
inc
dec
inc
sub
aaa
fisttp
mov
and
push
nop
rol
das
jns
inc
in
aam
cmps
addr16
inc
dec
test
std
fsub
xor
hlt
cmp
mov
pop
call
test
xor
int3
xchg
andps
inc
pop
fst
(bad)
fldcw
adc
inc
inc
push
push
push
jne
cmp
mov
jo
inc
mov
movzx
add
sbb
push
mov
xchg
push
scas
retf
pop
pop
stos
out
out
inc
ficomp
jae
aas
fld
pop
sub
fcom
movs
in
push
xchg
push
add
std
ins
fisttp
jb
add
and
cmp
repnz
jbe
or
dec
push
xor
imul
pushf
or
dec
pop
mov
pushf
sbb
or
mov
sti
cmps
fcomp
sbb
jno
jae
and
and
aam
orps
adc
scas
jg
test
mov
jbe
and
test
xchg
sti
cmps
inc
mov
cmp
sbb
add
mov
and
adc
mov
sub
inc
mov
inc
add
fidiv
les
push
dec
jl
sbb
mov
cwde
sub
jbe
add
jge
jnp
mov
sub
dec
fs
lahf
cmp
and
sub
xchg
jle
or
and
cmps
bound
mov
adc
adc
xchg
fcmovnbe
stos
stos
sub
ja
push
stos
mov
cmps
daa
push
jmp
cmp
movs
dec
nop
or
sbb
adc
jne
enter
sbb
mov
mov
mov
pop
retf
test
cmps
int3
inc
fiadd
scas
jge
inc
fld
jne
mov
rol
ss
and
sub
xlat
mov
mov
sub
ins
and
add
inc
test
je
push
mov
mov
rep
mov
mov
cmp
inc
xor
mov
addr16
and
div
nop
add
mov
jle
test
mov
(bad)
mov
cmp
or
popf
cmp
sbb
dec
outs
xchg
sbb
invd
push
push
mov
inc
add
cmp
jl
adc
dec
sub
(bad)
dec
popa
xor
push
inc
add
retf
(bad)
clc
dec
cmp
jne
cmp
sbb
out
sbb
inc
sbb
push
sbb
push
push
mov
sub
inc
or
cld
inc
xor
mov
add
jne
mov
iret
test
dec
adc
cmp
push
or
sbb
xor
lods
add
nop
or
in
push
(bad)
pop
lds
lock
jne
jbe
loopne
sub
dec
pop
pop
pop
sar
jne
outs
or
add
(bad)
and
jp
sbb
pop
push
je
push
stos
push
mov
rcl
dec
sar
and
scas
ja
ret
fs
sbb
jno
cmp
jmp
adc
xchg
push
mov
push
(bad)
cs
mov
je
pop
je
sahf
les
shr
mov
adc
sbb
adc
adc
call
cs
call
lea
dec
cmp
jne
xor
push
int
arpl
in
test
mov
mov
mov
adc
push
(bad)
jns
dec
adc
cmp
mov
jmp
lock
aas
int
(bad)
jne
lods
sar
fdiv
push
jmp
jecxz
imul
neg
out
cmp
nop
gs
sbb
push
iret
sbb
in
mov
sub
mov
sub
sbb
outs
loope
inc
retf
cmc
cdq
push
addr16
add
in
cld
pop
stos
or
adc
movs
sbb
adc
pop
xor
std
and
inc
int3
int3
or
pop
(bad)
inc
dec
jmp
adc
pop
adc
jmp
ds
in
lock
lea
jg
mov
stos
sbb
in
pop
test
mov
ret
sar
mov
lahf
test
bound
movs
sbb
test
sbb
shl
xor
adc
(bad)
shr
fcomp
push
aam
les
mov
out
fsubrp
xchg
xor
loopne
movlps
mov
icebp
lock
(bad)
mov
lock
sbb
imul
adc
ja
in
or
dec
call
mov
ficom
push
outs
shl
sbb
push
(bad)
lahf
fcom
js
lahf
sbb
retf
inc
jne
out
(bad)
sbb
cli
out
xchg
lahf
cli
xlat
mov
xchg
xor
jns
in
les
mov
loop
lds
xor
adc
push
cs
adc
loopne
lods
outs
hlt
adc
outs
cdq
les
adc
sub
dec
loopne
xor
outs
mov
das
cmp
sub
icebp
add
mov
dec
retf
repnz
imul
mov
in
xchg
mov
jmp
cmp
add
and
add
test
mov
(bad)
sbb
adc
xor
and
jb
fbstp
push
jne
pusha
push
(bad)
sbb
mov
sbb
sbb
pop
movs
(bad)
mov
sub
pop
scas
mov
cld
mov
out
shl
scas
aaa
popf
rcr
icebp
loop
clc
cli
nop
iret
push
bound
and
push
std
imul
leave
outs
sbb
sbb
and
xor
(bad)
cmc
call
fmul
sbb
push
mov
ja
dec
add
in
lahf
or
in
xchg
leave
nop
out
nop
nop
mov
fbld
(bad)
mov
ja
in
in
in
ja
jge
repnz
push
stc
js
or
jle
jne
mov
and
stos
jl
bnd
sbb
clc
sub
aas
sub
imul
and
in
and
pop
pop
xor
jmp
xchg
push
sub
lods
loopne
popf
mov
sbb
jmp
dec
push
rol
fidiv
jmp
or
sub
cmp
sub
imul
sbb
(bad)
jecxz
lock
test
sbb
stc
push
movs
cmp
cmp
cld
ds
das
addr16
clc
and
in
sub
xlat
int3
imul
jno
sub
or
inc
pop
in
add
cli
pop
div
cmp
imul
push
cmp
jae
movs
or
rcr
sbb
sub
jmp
ror
dec
int
inc
clc
mov
(bad)
and
add
pop
xchg
sub
and
sub
call
shl
jb
xchg
push
ret
sub
jecxz
or
mov
sub
jo
mov
adc
nop
shl
les
mov
outs
mov
pushf
les
pop
sub
mov
(bad)
jecxz
xlat
xchg
mov
lods
jmp
sub
push
lahf
sbb
adc
scas
int3
sbb
push
mov
sub
adc
ds
stc
shl
mov
pushf
sub
repnz
mov
or
repz
xchg
and
push
cmp
rcr
aas
enter
daa
mov
pop
mov
and
add
and
add
sub
enter
(bad)
dec
pop
rol
cmp
xor
and
pop
pop
pop
dec
popf
pop
cmp
add
pop
scas
mov
push
pop
loop
fsubr
sbb
out
(bad)
stc
cmp
mov
or
mov
out
test
das
icebp
scas
movs
mov
inc
push
(bad)
iret
arpl
fadd
xchg
out
sar
ror
fbld
xor
mov
jo
mov
call
fdivrp
(bad)
(bad)
(bad)
gs
popa
mov
add
ins
jnp
lock
aam
test
xchg
dec
inc
mov
or
dec
repz
in
stos
lods
or
adc
add
xchg
sbb
ror
cli
adc
cmc
cs
dec
sbb
fdivr
push
push
lea
(bad)
icebp
xor
push
push
inc
mov
call
ret
shl
mov
aas
aas
out
mov
scas
div
mov
cmp
adc
mov
add
jp
icebp
push
push
cld
sub
ret
mov
mov
jmp
loopne
ds
cwde
fsubr
mov
dec
xchg
arpl
cmp
fdivr
pop
xor
dec
fadd
pop
(bad)
mov
or
xchg
ja
push
sub
sbb
adc
sub
sub
test
lods
push
sub
rcl
xor
loopne
cdq
pop
xlat
jo
inc
adc
cmp
imul
pop
iret
pop
lods
mov
cmp
iret
mov
xchg
ret
loopne
add
(bad)
rcl
fdiv
xchg
lods
aaa
push
jp
jno
sub
hlt
loope
ins
add
or
xchg
js
movs
cli
xchg
and
dec
sub
pusha
into
cmps
mov
or
mov
mov
mov
mov
adc
adc
mov
pop
shl
jns
cmp
pop
fistp
sbb
out
inc
jmp
inc
cmp
nop
int
(bad)
jb
mov
not
sub
push
in
sub
stos
leave
jnp
dec
push
jb
xchg
loopne
jg
sbb
ja
ins
cmp
pusha
call
cmp
adc
lea
mov
cli
mov
les
jbe
js
pop
(bad)
dec
loope
or
jl
test
or
outs
or
lea
ds
and
jp
pop
pop
in
mov
xchg
sub
pusha
aas
xchg
inc
test
push
in
inc
inc
popa
rol
fsubr
out
adc
icebp
cmp
or
(bad)
jo
hlt
add
shl
(bad)
jb
in
jl
cmp
xchg
push
cmp
ror
mov
fcom
movs
enter
stos
ret
inc
inc
sbb
in
loop
pop
jo
add
pop
fwait
lds
shl
add
cdq
adc
dec
sub
imul
sti
loopne
xor
add
jbe
inc
or
bound
aaa
jg
mov
mov
lea
jne
pushf
fld
retf
jb
pushf
pushf
push
daa
int
jmp
out
ficomp
xchg
inc
aad
mov
in
les
xor
cmp
and
inc
leave
lea
sub
mov
adc
jae
ins
mov
inc
cld
sbb
lods
mov
cmp
cwde
pushf
xchg
push
popa
or
jmp
inc
mov
adc
movs
dec
sbb
or
sbb
mov
int
shl
call
sub
inc
push
or
sub
inc
pop
mov
pop
shl
in
inc
xchg
xor
mov
sbb
xchg
push
xor
dec
add
pop
ror
fadd
aad
jo
mov
pop
inc
sub
dec
xchg
ja
sbb
aam
adc
cmp
mov
mov
(bad)
call
and
jl
jae
add
popf
adc
cmp
jmp
fs
sbb
aas
gs
inc
sbb
dec
mov
adc
mov
ret
push
mov
loop
test
call
sub
sub
or
stc
call
push
mov
aad
push
pop
pop
pop
mov
enter
mov
retf
ss
stos
fnsave
cs
fs
das
adc
(bad)
mov
leave
jg
mov
sub
ds
pop
xchg
push
out
cmps
mov
pop
push
fstp
(bad)
jns
mov
push
inc
dec
es
out
aam
mov
shl
ins
mov
lahf
daa
aas
je
sbb
scas
mov
adc
sub
and
test
(bad)
call
jp
test
push
mov
xor
or
repnz
aam
aam
sub
loopne
outs
cmp
(bad)
out
inc
sub
cmp
std
(bad)
imul
call
and
int3
cmc
mov
mov
mov
sub
xor
arpl
lea
cld
push
mov
push
into
or
push
addr16
mov
enter
ficomp
xchg
xchg
repnz
fidivr
xchg
outs
sub
inc
call
push
jb
jne
enter
addr16
push
xor
loop
pop
cmps
cs
(bad)
cmp
shr
jae
jne
movs
push
aad
rcr
popf
xor
aam
shr
aaa
ins
mov
enter
or
sar
push
(bad)
movs
mov
imul
(bad)
(bad)
les
lds
into
push
lock
sbb
xchg
out
imul
iret
pop
pop
mov
mov
ins
push
stos
bound
sbb
mov
cmp
aam
xchg
adc
enter
psubsb
pop
mov
mov
dec
pop
adc
mul
xor
fdiv
sahf
shr
dec
fcmove
inc
or
in
pushf
out
mov
or
ret
lahf
xchg
js
or
jge
jno
pushf
fcmove
push
iret
or
lea
in
int3
out
xchg
xchg
nop
inc
adc
loope
mov
popf
mov
add
pop
xor
ins
lahf
push
aas
xchg
dec
inc
mov
sti
mov
sub
lea
push
pop
(bad)
movs
inc
sti
push
pushf
ins
xor
dec
jno
sbb
rcr
mov
mov
in
xor
push
outs
inc
cmp
push
pop
cwde
or
sbb
int3
jbe
xchg
mov
xor
cwde
nop
lea
scas
mov
loopne
push
mov
dec
pop
push
dec
js
jmp
aad
stos
inc
inc
fisttp
sub
xor
pop
inc
push
sbb
es
cmps
push
neg
arpl
mov
mov
jne
mov
mov
sbb
mov
mov
jl
loop
jb
arpl
xor
mov
jmp
div
lods
mov
or
add
sub
jg
pop
ficom
sbb
mov
dec
adc
bnd
cwde
xlat
stos
fwait
pop
push
in
jae
cwde
ins
arpl
aam
(bad)
in
movs
(bad)
lds
lock
push
mov
and
inc
cmp
lods
mov
push
lea
(bad)
mov
aas
scas
jp
rcr
call
sub
sbb
(bad)
jl
sahf
sbb
push
pop
ins
or
adc
sub
arpl
push
test
add
and
pop
enter
rol
nop
cmp
mov
fsub
(bad)
data16
mov
gs
rcl
xor
mov
mov
jmp
dec
lock
loop
pop
scas
sbb
inc
xor
popf
enter
lods
leave
imul
repz
mov
mov
aam
pop
xchg
cmp
addr16
mov
cmps
add
push
in
repnz
xor
es
pop
mov
cli
test
and
in
cs
mov
sub
leave
sbb
dec
jmp
frstor
dec
loope
push
xchg
ds
and
push
retf
mov
rcr
mov
adc
xchg
add
pop
stc
movs
mov
sti
sub
imul
pop
and
imul
fidivr
push
jne
push
push
inc
mov
adc
(bad)
jb
jno
mov
push
(bad)
sub
jle
mov
in
xchg
push
jne
mov
ins
jns
mov
xor
pusha
xchg
leave
xor
sub
imul
(bad)
mov
xchg
fst
xor
inc
jle
into
jb
and
clc
cmp
cs
push
cmp
and
mov
test
iret
sbb
sbb
lock
call
sbb
cwde
ret
cld
jl
mov
mov
cmp
pop
inc
cmp
(bad)
xor
outs
sbb
aas
aas
aas
xchg
mov
nop
sub
(bad)
and
adc
mov
jle
and
jb
aad
nop
lods
and
mov
sbb
jle
fild
cmps
int3
out
lods
aad
xchg
repz
(bad)
sbb
xor
xchg
lea
repz
sub
jp
popa
and
(bad)
in
(bad)
daa
xor
outs
xor
inc
cmp
dec
cli
or
ss
xor
and
rol
jne
and
outs
arpl
out
in
lahf
addr16
outs
je
jp
inc
clc
sbb
jne
mov
cmp
push
hlt
outs
pop
into
push
mov
dec
jo
data16
repz
stc
fisttp
pop
mov
jmp
cwde
retf
out
jo
mov
cmps
dec
xor
adc
stos
js
adc
movs
jle
dec
iret
xchg
fs
nop
iret
jns
ins
and
icebp
enter
pusha
push
mov
loopne
and
daa
inc
xchg
xor
lock
push
sub
test
mov
mov
cmp
mov
test
or
add
(bad)
(bad)
mov
ror
jo
lods
rcr
and
(bad)
adc
icebp
xchg
ret
or
je
cmps
ret
xor
or
je
and
jmp
lahf
aam
clc
(bad)
in
sub
add
daa
scas
sbb
out
out
inc
sub
jne
jns
mov
ret
jne
pusha
push
ret
sub
inc
sub
or
jmp
cmp
loope
enter
xchg
push
xor
cmp
pushf
popa
hlt
loopne
mov
je
jbe
adc
push
fnsave
ja
mov
mul
mov
in
mov
cmp
jne
mov
aam
les
sahf
jae
jmp
gs
mov
adc
outs
stos
sbb
dec
mov
push
clc
icebp
adc
jne
or
cmp
cwde
and
mov
fwait
jne
pop
pop
mov
(bad)
scas
loopne
mov
sbb
mov
jl
inc
neg
jmp
in
sar
(bad)
mov
pop
aam
sbb
in
popa
xsha1
cmps
int3
add
push
mov
scas
lock
scas
sbb
or
(bad)
js
jge
add
mov
in
add
(bad)
sub
loopne
fdivr
into
jmp
and
dec
cmc
mov
lods
(bad)
mov
sahf
sub
add
in
lds
mov
test
push
jb
pop
leave
and
jge
jmp
pop
stos
pop
jmp
(bad)
push
adc
in
cdq
lock
fsubr
pop
std
int3
jle
jae
aam
outs
jp
std
mov
push
jecxz
pop
sbb
std
push
or
push
push
sub
xchg
or
jg
cmp
push
and
movs
mov
iret
pop
and
dec
aas
pop
or
pop
xchg
and
rol
cmc
lahf
jne
ret
or
dec
adc
je
mov
jp
jb
sbb
test
aas
push
in
fist
daa
sub
mov
sub
inc
test
popf
mov
movs
fs
pop
mov
cmp
dec
mov
mov
inc
or
mov
push
pushf
mov
inc
or
ins
xchg
cmp
movs
call
cwde
xor
dec
mov
jo
sub
xor
sub
inc
in
sub
push
pop
dec
imul
xchg
cmp
adc
mov
test
jmp
pop
ins
test
sub
stos
mov
les
mov
lods
stc
popa
call
(bad)
mov
in
dec
test
cdq
fmul
test
and
jno
enter
push
(bad)
push
ret
dec
std
mov
mov
push
push
je
or
push
aam
jecxz
mov
rol
call
aad
xchg
cmps
push
dec
inc
inc
ins
xchg
movs
mov
shr
mov
mov
inc
fisttp
xchg
fidiv
mov
and
jno
mov
pop
push
std
shl
or
daa
dec
pop
call
adc
mov
sub
pusha
mov
or
sbb
add
jae
rcl
movs
mov
arpl
mov
push
inc
cmps
lods
addr16
outs
push
mov
icebp
and
pusha
test
push
fiadd
(bad)
in
(bad)
cmp
mov
into
xchg
push
fsubr
mov
sar
out
mov
mov
popf
dec
or
test
out
jo
lahf
aam
clc
cld
add
cmp
fild
add
icebp
stos
in
xchg
mov
popf
aad
enter
ret
(bad)
shl
push
fmul
pop
fnstenv
outs
add
adc
fmul
ins
xchg
xchg
cmp
fcmovb
aad
int3
push
gs
add
lock
shl
pop
pop
mov
aad
stc
lods
mov
cdq
push
pop
rcr
push
lock
adc
sahf
mov
dec
cwde
cmps
dec
mov
adc
pushf
pop
adc
jns
test
or
mov
enter
pusha
repnz
push
add
in
arpl
cmp
mov
retf
and
sub
push
add
out
pop
daa
iret
mov
and
inc
scas
je
shl
pop
inc
pop
cmps
mov
enter
push
xchg
and
dec
jne
fild
ins
jbe
xor
cmps
rcr
add
pop
retf
mov
inc
mov
aam
pop
lds
(bad)
call
mov
shl
pop
loope
ret
pop
lea
xchg
cmp
in
out
mov
(bad)
in
inc
inc
and
movs
adc
add
mov
(bad)
in
jne
(bad)
not
stos
inc
nop
lods
fcomip
xchg
sub
mov
mov
sbb
(bad)
or
sbb
or
(bad)
jnp
xchg
mov
mov
xor
inc
inc
mov
xchg
push
call
inc
xor
xchg
lds
pop
xchg
pushf
pushf
imul
sbb
jno
xchg
adc
idiv
and
js
arpl
jecxz
movs
xchg
xchg
test
leave
cmp
mov
sub
xchg
push
lds
aam
in
jl
test
cli
les
cmp
push
and
mov
mov
or
jmp
test
dec
inc
push
inc
mov
stos
jmp
in
inc
cli
xchg
cmps
inc
mov
jle
or
cmp
rcl
mov
cmp
in
adc
in
test
lahf
add
js
(bad)
mov
lea
jmp
loope
lea
dec
sbb
pop
mov
xor
xchg
adc
pop
sbb
sbb
popa
xor
mov
icebp
mov
test
jb
cdq
int
pop
sub
cwde
push
(bad)
int3
mov
outs
and
push
out
add
sbb
mov
nop
jp
cmps
inc
mov
xchg
xchg
mov
jbe
dec
xchg
pop
int
add
fbstp
sub
call
and
rcr
or
aas
rcl
xchg
(bad)
out
xor
test
lods
xor
pop
fidiv
or
push
add
in
sbb
sub
(bad)
cs
mov
fs
clc
or
cmp
adc
fdiv
dec
loope
mov
or
sbb
mov
dec
sbb
lahf
cmps
repnz
or
ins
das
inc
push
xchg
dec
xchg
mov
dec
dec
jo
xlat
push
(bad)
shl
mov
jmp
mov
adc
cld
push
ds
jle
pusha
lahf
les
scas
jno
xchg
shr
push
mov
inc
call
pop
std
ds
daa
push
mov
xchg
aam
mov
xchg
mov
lea
aam
shl
(bad)
movs
(bad)
repz
and
fdivr
enter
xor
cmp
lea
adc
jmp
sbb
(bad)
fimul
into
test
pop
sbb
mov
and
aaa
call
mov
mov
inc
xchg
nop
jnp
sbb
xchg
je
outs
sbb
(bad)
aad
add
add
xchg
dec
lock
mov
jo
push
sub
(bad)
mov
mov
xchg
jb
loopne
adc
dec
mov
or
mov
xchg
xchg
sbb
movs
adc
imul
ds
jl
mov
popf
ficom
push
fdivr
mov
rol
lahf
nop
sbb
popa
mov
adc
sbb
mov
retf
lds
cmps
mov
fidivr
icebp
fsub
inc
sub
mov
mov
mov
xor
xor
and
mov
stc
scas
pop
fs
mov
fist
pop
imul
daa
push
xor
cmc
(bad)
push
stos
jo
cmp
add
lea
sbb
fcom
sbb
or
retf
jno
jmp
movs
mov
in
test
aaa
test
mov
mov
stos
shl
aam
mov
push
in
pop
xchg
xor
push
ins
push
scas
sbb
sub
mov
sub
call
dec
aam
ss
mov
sbb
jmp
adc
push
adc
inc
lods
xchg
lods
adc
jmp
bound
mov
mov
aas
lods
aam
or
mov
inc
outs
push
pusha
mov
popa
jb
not
ja
imul
adc
pop
dec
scas
or
sahf
pop
(bad)
xlat
mov
js
jmp
mov
mov
sbb
imul
(bad)
jmp
mov
sub
mov
inc
mov
cs
jl
xor
rol
cwde
ficomp
stc
push
(bad)
sahf
dec
sbb
mov
fdiv
or
clc
mov
jmp
pushf
pusha
dec
or
add
bound
mov
aas
dec
pusha
scas
push
lea
pop
in
dec
(bad)
in
test
dec
mov
punpckhwd
fcmovbe
jecxz
inc
retf
push
cld
loop
mov
xor
or
ins
addr16
mov
in
mov
and
pop
xchg
mov
or
sbb
call
push
mov
imul
fcom
(bad)
addr16
mov
adc
mov
push
jns
ja
test
clc
jmp
mov
mov
nop
outs
xor
(bad)
sub
mov
dec
(bad)
and
shl
mov
adc
cmp
icebp
in
enter
cmps
stc
add
mov
fdivr
push
aaa
aam
push
mul
stc
cmp
jb
mov
shl
lea
nop
sahf
xchg
aas
push
or
fs
ud2
test
sti
test
jno
sub
mov
xor
add
push
dec
mov
add
lea
call
mov
mov
mov
movs
mov
add
icebp
dec
outs
pop
mov
or
pop
inc
and
push
ins
in
xchg
fwait
push
call
(bad)
js
data16
mov
dec
jmp
cmp
je
sbb
inc
(bad)
or
nop
int
adc
shl
mov
dec
dec
stos
lock
retf
xchg
mov
outs
aam
push
sbb
mov
daa
mov
pushf
or
mov
pop
inc
enter
xchg
cmp
xor
sbb
loope
inc
adc
cld
mov
enter
cmps
ret
adc
cmp
xchg
pop
sar
cmp
sbb
lock
push
xchg
int3
lds
jl
fcmovnbe
dec
(bad)
sub
scas
movs
je
or
lods
dec
mov
test
dec
ds
sub
and
mov
out
test
sub
cs
xchg
pop
rcr
pusha
loopne
stos
jg
sbb
and
retf
pop
pop
test
xor
mov
sbb
in
pop
fmul
mov
fs
mov
jge
jns
popf
jmp
stc
(bad)
sti
icebp
xchg
mov
dec
mov
(bad)
popf
sahf
mov
scas
jp
enter
inc
mov
adc
jmp
ret
cmp
lods
xor
sti
mov
outs
in
mov
popf
imul
popa
out
(bad)
stos
arpl
(bad)
jecxz
mov
ficomp
push
push
(bad)
nop
pop
es
mov
and
mov
lods
xor
push
jle
mov
es
popa
and
(bad)
cmp
xor
addr16
jp
mov
(bad)
ins
(bad)
retf
xbegin
pop
pop
cmp
idiv
(bad)
and
push
aad
idiv
dec
push
mov
outs
(bad)
and
addr16
scas
cwde
(bad)
hlt
mov
xchg
mov
and
sub
jmp
test
xor
movs
mov
mov
fnsave
test
mov
enter
js
scas
push
outs
ins
sub
scas
fdivr
loop
je
push
jne
cmps
mov
cmc
mov
sub
dec
bound
push
les
xchg
jge
ret
inc
inc
cs
push
jp
movs
imul
sbb
repz
mul
mov
pop
loopne
or
cmp
push
retf
aad
popa
or
(bad)
movs
ja
leave
mov
repnz
in
mov
jmp
or
mov
in
xor
sub
repz
add
lods
js
xor
imul
call
jge
nop
js
add
mov
xchg
lahf
scas
scas
movaps
repnz
fisttp
in
in
les
les
sti
stc
adc
lock
xor
push
cmp
xchg
or
cwde
and
out
mov
mov
test
push
cli
jp
std
test
jbe
ins
add
pop
push
jecxz
into
sub
sahf
xchg
shl
arpl
and
test
js
mov
sub
and
fstp
and
pop
scas
das
rcr
cld
enter
(bad)
repz
sub
stc
fs
mov
xchg
pop
movs
mov
push
pusha
mov
add
pop
fs
dec
(bad)
les
jb
mov
inc
pop
inc
mov
in
movs
and
push
cmp
cli
lods
bound
stc
mov
(bad)
mov
gs
dec
int
mov
rsqrtps
or
pop
sbb
sahf
mov
sbb
nop
sar
movs
and
fs
jbe
mov
test
(bad)
aam
jecxz
sbb
aam
int
test
xchg
movs
ror
and
jge
lock
popf
push
cs
clc
jmp
leave
imul
mov
xor
fs
sub
mov
fs
fldcw
movs
push
push
ja
movs
push
int
mov
sahf
pop
lahf
jl
push
gs
dec
xchg
inc
mov
push
jmp
push
push
xchg
je
sbb
hlt
(bad)
cli
mov
lea
mov
imul
push
jle
jo
mov
add
iret
cdq
push
mov
lea
popf
fnsave
push
cmp
xchg
out
lods
and
inc
test
(bad)
pop
test
mov
jno
push
pop
xor
(bad)
jmp
inc
out
fdiv
enter
sbb
xchg
ins
ins
mov
data16
movs
and
sbb
fsub
xor
stos
jmp
sar
stos
sub
int
inc
sbb
bound
fidivr
ror
scas
jg
cdq
ret
ins
cmp
(bad)
xlat
call
movs
jle
setns
test
cmp
jbe
xchg
iret
lods
hlt
scas
push
int3
mov
dec
in
mov
sti
pop
cmp
and
jne
cmp
and
and
dec
int3
jecxz
(bad)
xlat
cld
jmp
add
mov
scas
out
rcr
leave
iret
xchg
fxch
cmp
sti
lods
lods
fimul
inc
fcmovu
ss
fild
or
je
loopne
mov
mov
sar
dec
shr
mov
std
xor
push
fcomp
mov
test
int3
(bad)
and
xor
and
mov
loop
pop
cdq
test
int3
adc
xor
(bad)
add
mov
dec
je
push
not
scas
enter
add
ficomp
push
sbb
adc
sub
das
imul
fmul
sub
xchg
adc
and
push
jecxz
sub
(bad)
mov
enter
(bad)
mov
imul
imul
push
shr
sbb
sbb
or
je
sub
sbb
(bad)
pop
ss
jbe
fdivp
fcmovbe
push
mov
nop
xor
mov
test
arpl
jp
mov
leave
jae
sub
xor
pop
xor
cmps
cmp
movs
out
cdq
pop
into
int3
(bad)
fsubrp
test
(bad)
in
js
pushf
adc
jo
inc
dec
mov
(bad)
loopne
sub
ja
xchg
push
in
push
mov
cdq
lods
mov
xchg
cmp
fld
cmp
jae
loopne
div
xchg
cmp
dec
inc
pusha
out
(bad)
adc
ds
mov
mov
pop
xor
mov
loopne
adc
test
sahf
xor
xchg
jmp
(bad)
sbb
sbb
mov
adc
std
cmp
js
movs
sub
xchg
(bad)
jecxz
cmp
(bad)
(bad)
(bad)
gs
iret
push
cmp
cmp
cld
(bad)
fdiv
mov
enter
ja
or
enter
jmp
or
mov
push
retf
enter
(bad)
or
mov
dec
pop
push
jae
sbb
retf
pop
scas
xchg
xor
mov
dec
and
adc
mov
jmp
push
add
mov
sub
(bad)
dec
out
cmp
push
add
(bad)
rep
and
sbb
mov
mov
aam
aam
test
jmp
push
and
dec
imul
cmp
loop
mov
xchg
ret
pop
fidivr
std
add
mov
mov
dec
lahf
mov
pop
xchg
mov
int3
stos
jp
out
or
in
cs
push
cmp
push
fnstsw
stos
fs
test
mov
dec
retf
ret
sbb
inc
jo
jg
outs
xchg
xlat
in
int3
dec
cli
int
pop
out
cdq
push
mov
outs
add
stos
ret
pop
cld
jmp
push
adc
add
xchg
iret
(bad)
inc
mov
xlat
mov
lahf
dec
mov
adc
dec
cmp
rcr
rcl
std
sub
mov
pop
xor
mov
mov
mov
out
push
push
call
xchg
adc
jns
xor
stos
mov
lds
adc
xchg
paddusw
movs
sub
mov
push
and
(bad)
js
pop
ins
ins
jbe
and
mov
jmp
int3
jne
xchg
and
jl
cmps
sub
cwde
mov
xchg
aam
sub
mov
(bad)
lods
in
cmp
loop
cmp
movs
push
mov
or
or
mov
cmp
sbb
jo
sbb
stc
js
(bad)
cli
rcl
lock
push
cmp
imul
or
inc
mov
pop
cs
mov
call
add
xor
cmps
repz
xchg
mov
pusha
bnd
dec
adc
repnz
or
lods
sbb
aad
inc
inc
enter
xchg
int3
enter
mov
push
cld
push
adc
jl
dec
sbb
mov
and
hlt
pusha
adc
ins
dec
in
into
adc
shr
and
push
(bad)
push
loopne
lods
mov
cld
hlt
test
call
mov
repz
aaa
adc
xor
inc
xor
xchg
popf
sbb
aas
stos
int
lods
inc
in
shr
fs
cmp
in
cwde
xchg
cdq
add
call
adc
dec
sbb
movs
adc
mov
jno
add
loop
push
clc
pop
loopne
call
int3
mov
in
aam
movs
jb
jb
rcr
mov
fistp
dec
push
jmp
repz
pop
jno
or
adc
mov
rol
mov
dec
sbb
imul
adc
mov
out
mov
cmp
add
pop
jns
xor
mov
or
lods
test
fdivr
or
movs
mov
dec
mov
mov
fs
fiadd
stos
arpl
ret
mov
jb
mov
in
retfw
enter
rcr
xor
pusha
iret
add
fld
pop
std
lods
or
cli
push
pop
jmp
lea
(bad)
int3
(bad)
mov
ins
int3
cli
cmps
sub
pop
pushf
movs
jecxz
lds
pop
iret
add
jecxz
out
cmp
mov
push
enter
add
pop
add
mov
lock
ds
cld
scas
pop
cmp
or
or
(bad)
pop
jnp
cmp
fwait
jne
cli
psubusw
not
rcl
xchg
aaa
push
(bad)
mov
icebp
mov
or
int
sbb
aam
inc
idiv
test
aas
jge
add
push
cmp
mov
cmp
add
pop
xchg
sub
(bad)
repnz
js
or
mov
push
push
fxch
mov
jne
fadd
adc
dec
jmp
or
movs
mov
and
rcl
fadd
inc
arpl
or
movs
add
add
loopne
cmps
retf
add
sub
adc
inc
sub
lea
pop
inc
jnp
inc
jne
(bad)
leave
xchg
cmp
imul
fisub
cs
cwde
(bad)
push
add
cmp
aam
push
lods
adc
ins
jns
shl
ja
popf
mov
cmp
icebp
pop
and
add
dec
mov
sub
test
gs
mov
data16
enter
aam
xchg
adc
scas
mov
jmp
add
push
ja
push
stos
pushf
test
add
sbb
xor
fdivr
test
cmp
or
pop
fmul
outs
lahf
mov
retf
jg
or
(bad)
clc
mov
cld
retf
hlt
jecxz
or
pushf
pop
repz
xlat
xor
adc
call
xor
in
mov
int
leave
cmp
jne
or
mov
test
in
cmp
xchg
mov
loop
inc
pop
enter
je
loop
dec
les
xor
std
pop
adc
jne
int3
loop
jle
jns
xchg
mov
and
fs
in
cmp
iret
lock
pop
or
dec
xchg
mov
add
mov
clc
ins
in
call
cld
call
in
aas
add
cdq
dec
cdq
clc
aad
or
xor
xchg
add
fdiv
push
sub
in
test
mov
push
xchg
(bad)
test
adc
test
lea
mov
or
js
mov
inc
out
ins
mov
mov
mov
pop
and
pop
sub
xchg
and
js
dec
push
cdq
call
das
test
cld
ret
mov
fstp
pop
push
pop
mov
or
sbb
pop
fst
cli
sub
add
mov
das
std
adc
jmp
adc
outs
sub
add
fdecstp
add
lock
cmp
dec
push
push
mov
js
sub
int
lods
jb
outs
and
rep
ds
out
test
test
imul
in
dec
retf
fcomp
xor
daa
and
or
fiadd
adc
mov
inc
sub
sbb
sar
cmp
jge
lock
int3
adc
pop
or
xchg
add
or
sbb
cs
xor
push
mov
int3
adc
jb
nop
mov
outs
sbb
les
push
xchg
pop
adc
sbb
sbb
dec
imul
popa
inc
ja
mov
and
mov
adc
push
jo
cli
dec
sub
cmovo
fs
sbb
js
adc
int3
mov
sub
inc
inc
or
popa
jmp
imul
pop
adc
and
add
xor
sub
jl
push
push
(bad)
jp
cmp
sub
cmp
gs
les
mov
add
and
test
dec
pop
int3
xchg
adc
shl
jne
sahf
fadd
inc
mov
or
mov
aaa
ret
push
out
loopne
(bad)
cmp
push
push
icebp
punpcklwd
hlt
lea
sbb
ins
sbb
rcl
scas
sbb
mov
das
jmp
push
sub
mov
fsubr
xchg
out
fisubr
cmp
mov
jnp
je
sbb
arpl
inc
scas
adc
pop
movs
jmp
mov
mov
lahf
pop
les
lds
cwde
mov
scas
mov
aaa
mov
pusha
nop
xor
and
sahf
xchg
adc
mov
cwde
aas
(bad)
jmp
(bad)
js
imul
gs
pop
sbb
xchg
cld
faddp
mov
xor
out
cdq
pop
xor
stc
mov
(bad)
stc
imul
mov
in
repz
rcl
sbb
or
in
dec
adc
mov
out
test
or
pop
mov
lock
mov
addr16
and
shl
xchg
sbb
push
sti
out
or
mov
sbb
or
or
xchg
xchg
dec
xor
ret
(bad)
fisubr
mov
or
addr16
add
lea
repnz
mov
pop
mov
cld
int3
fs
mov
fcom
sbb
xchg
dec
pop
scas
loopne
test
and
mov
mov
call
add
push
inc
out
mov
add
push
cmp
mov
adc
xlat
xor
clc
out
and
xor
xor
sbb
pop
adc
sub
loop
and
mov
in
sbb
test
xchg
push
rol
jg
loopne
mov
and
movs
mov
mov
scas
outs
or
dec
pop
jmp
test
sbb
jmp
or
sub
mov
fabs
and
(bad)
jmp
and
jno
jbe
push
dec
push
retf
rol
and
jne
repz
and
jno
xchg
inc
sahf
out
test
(bad)
push
bound
loop
int
inc
jl
fsubrp
ins
xchg
inc
shr
xchg
popf
mov
mov
dec
inc
cli
in
fcomp
dec
shl
sbb
(bad)
test
xor
out
pop
arpl
sub
push
(bad)
mov
js
sub
or
ins
std
jp
repnz
add
daa
lea
ja
mov
out
mov
and
ins
sbb
in
loopne
cmp
inc
push
es
dec
and
jg
retf
scas
addr16
jge
sbb
das
sub
push
jnp
loopne
repz
mov
push
fstp
mov
ret
mov
jle
or
push
fild
pop
mov
out
imul
mov
mov
lds
mov
std
mov
repz
movs
in
and
ret
and
fmul
cwde
mov
xor
in
and
popf
fdiv
dec
clc
inc
mov
ret
xchg
or
movs
popf
push
ja
sub
gs
xor
jno
sbb
fadd
sbb
lods
sbb
mov
push
(bad)
ins
pop
into
fs
push
push
test
jo
mov
jg
call
or
lea
and
stos
and
(bad)
bound
mov
aas
xchg
aas
jmp
scas
jae
or
(bad)
out
sbb
out
inc
stos
pop
(bad)
sar
sub
frstor
int3
popa
mov
dec
mov
adc
adc
popa
(bad)
mov
add
loop
inc
arpl
push
dec
aam
inc
pop
dec
das
jno
pop
mov
addr16
es
dec
xchg
ds
sub
mov
inc
fxch
jmp
les
jbe
scas
outs
and
sub
mov
cmps
or
cwde
push
cs
cmp
cmp
fild
fidivr
sub
xchg
nop
mov
mov
leave
mov
(bad)
pop
push
xor
mov
pop
les
xor
xor
and
in
inc
xor
mov
mov
prefetcht1
jnp
jmp
xor
pop
inc
xchg
repnz
sbb
mov
push
mov
jnp
clc
lea
inc
retf
(bad)
xchg
mov
sub
pop
adc
xor
es
aas
xchg
aam
mov
and
dec
add
cmp
sbb
xor
fmul
ja
je
sub
idiv
inc
iret
fcomp
fwait
xchg
cmp
adc
imul
arpl
push
leave
repz
aam
xor
pop
push
cmps
cmp
adc
ja
sub
ins
sbb
inc
nop
cmp
mov
popf
test
or
jne
call
xchg
jg
pop
int3
dec
inc
sar
xchg
sbb
icebp
sbb
sbb
jnp
cmp
ret
dec
xor
xor
jae
fsubr
into
push
in
cwde
sar
xor
jo
loope
mov
mov
adc
mov
test
mov
adc
dec
(bad)
outs
nop
jne
jne
jb
dec
call
jg
ss
jmp
lods
pop
les
dec
hlt
scas
xchg
cmps
push
out
sbb
inc
fstp
cmp
or
mov
aas
mov
push
push
(bad)
sbb
bound
test
std
add
sar
in
sbb
in
adc
mov
ss
aaa
lahf
dec
jmp
fcomp
mov
cdq
out
sbb
aaa
movs
into
(bad)
in
jnp
fsubr
add
mov
mov
jmp
out
jb
cmp
or
xor
inc
in
mov
cmp
sbb
jl
dec
fist
aaa
aas
pushf
and
jno
enter
fdivrp
mov
pushf
mov
lahf
in
sub
xchg
dec
sub
sbb
or
add
fs
jmp
ret
cmp
retf
dec
xchg
stos
push
and
bound
pop
xchg
inc
hlt
jo
lahf
pop
inc
jp
out
pop
xor
inc
push
fadd
in
inc
cli
clc
popf
sar
xlat
inc
jecxz
cs
dec
and
jg
in
ins
xchg
cmp
or
mov
ret
out
sub
sub
push
call
bound
xor
pop
fimul
or
push
sti
add
xchg
pop
aam
mov
inc
cmp
add
gs
(bad)
jmp
lods
test
shr
cmp
fdivr
out
mov
leave
ret
ds
mov
call
cld
push
fwait
cwde
ds
add
push
aas
aas
test
ds
adc
inc
cwde
sbb
mov
dec
int
xlat
outs
sbb
mov
xor
ins
test
inc
xchg
lea
(bad)
pop
mov
or
into
mov
dec
je
lock
and
cmp
mov
in
sti
data16
lock
iret
movs
and
push
nop
xchg
xor
ret
inc
pop
aam
sbb
test
lods
inc
dec
mov
call
pop
sub
xchg
hlt
and
sbb
push
je
cmp
call
hlt
scas
and
aaa
jecxz
aam
mov
std
mov
inc
push
sub
(bad)
sub
jge
mov
mov
lods
ins
inc
stos
push
xchg
shr
int3
std
xor
test
sbb
dec
add
pop
inc
mov
dec
in
cmps
xchg
or
or
and
out
loopne
clc
dec
xchg
or
cmc
cmc
push
jecxz
inc
adc
jge
xor
push
sub
fs
mov
and
jp
mov
sbb
mov
inc
cli
push
xor
fistp
xchg
ja
cld
jo
or
cmp
jg
lods
ins
jg
retf
sub
inc
popf
neg
cli
hlt
dec
inc
mov
adc
adc
hlt
jle
xchg
dec
jecxz
xor
ja
jns
push
fild
nop
jnp
test
cld
int3
lock
loopne
test
idiv
mov
pop
test
fisttp
rcl
mov
push
imul
adc
ja
sbb
cmps
jg
retf
sbb
jge
dec
xlat
aas
les
jge
xchg
inc
xchg
push
call
mov
fcomp
popf
and
fwait
int3
xor
push
mov
or
pop
jmp
push
sti
inc
jb
stos
pop
mov
dec
inc
rol
aam
push
jecxz
or
sub
dec
(bad)
fild
(bad)
clc
xchg
addr16
and
aas
push
sub
dec
loope
push
cwde
mov
jge
sbb
call
(bad)
xor
fist
adc
and
call
xchg
not
out
fldcw
mov
shl
sbb
fiadd
fnstsw
stc
xchg
xor
mov
ret
into
stos
ror
fnstcw
sbb
xchg
stos
enter
dec
pop
and
sbb
dec
jmp
in
dec
fldcw
sbb
and
cli
lods
xlat
mov
mov
ja
std
or
retf
jmp
cmp
in
loopne
pop
call
fstp
pop
jp
and
test
mov
or
or
sbb
inc
in
rcl
inc
mov
pop
dec
cmps
xchg
mov
push
addr16
cwde
dec
pop
fsubr
retf
or
push
xlat
mov
cmc
into
clc
in
lock
leave
jmp
nop
dec
enter
xor
sub
iret
je
pop
jmp
xlat
lea
mov
inc
mov
dec
call
(bad)
sbb
and
adc
sahf
ror
inc
and
retf
and
push
cdq
sub
ret
pop
(bad)
in
adc
out
xchg
in
mov
sbb
call
sub
test
dec
rcr
dec
xor
push
fdivr
or
mov
push
aam
out
lods
mov
sbb
cld
icebp
inc
or
and
mov
mov
xlat
aas
mov
pop
cs
mov
add
push
adc
pusha
add
arpl
push
mov
paddusb
push
ret
mov
and
add
push
in
mov
cmps
push
hlt
adc
push
mov
push
ja
sub
xor
popf
ja
jns
ss
cmp
jns
inc
or
movs
push
into
int3
jl
mov
stos
fadd
in
push
shl
into
or
les
aad
push
dec
adc
cmp
loope
sub
jmp
mov
test
scas
test
popf
push
ret
jecxz
sahf
int3
push
adc
inc
test
or
pop
push
out
and
push
add
sub
fcmovne
sti
es
sbb
jne
push
nop
mov
inc
mov
push
ret
add
add
enter
into
mov
add
mov
add
adc
(bad)
(bad)
push
rol
sbb
arpl
mov
cmp
lods
mov
adc
(bad)
es
jne
mov
xor
scas
out
push
push
retf
cmp
cmp
fiadd
sbb
addr16
retf
cmp
popf
ja
jns
pop
inc
ja
jns
bound
ins
(bad)
jns
popf
xchg
jbe
jo
popf
ja
cmp
push
push
mov
loope
imul
sahf
into
stos
push
out
mov
lods
repz
mov
out
lods
repz
mov
mov
push
mov
cmp
rcl
fidiv
push
popf
jns
por
mov
in
hlt
stos
pop
ficomp
in
into
mov
cmp
aam
arpl
lock
stos
or
addr16
mov
enter
(bad)
and
sub
ja
jns
xor
cli
lahf
add
lock
cmp
and
inc
push
sub
arpl
pop
jle
push
push
cld
and
ret
jmp
pusha
fiadd
inc
sub
mov
cmps
test
xchg
repz
push
or
fimul
cmp
loopne
std
push
clc
mov
push
cli
iret
and
pop
fst
out
hlt
inc
add
mov
hlt
sub
jmp
(bad)
mov
jo
pusha
push
pop
mov
inc
stos
lock
fs
cmc
add
mov
les
add
add
push
sti
mov
or
ds
gs
in
push
push
cmp
mov
mov
mov
or
out
test
mov
cmp
mov
out
mov
fsub
loope
and
and
(bad)
jge
or
sbb
jge
fsubr
xor
mov
xor
xor
jp
xchg
mov
mov
gs
int
jo
call
iret
jns
(bad)
mov
shl
mov
jno
sbb
jbe
cmc
rcl
aaa
adc
(bad)
mov
out
das
or
mov
mov
mov
stc
pusha
pop
jg
sbb
push
push
sti
les
mov
jbe
or
stc
dec
and
push
xchg
fldpi
fndisi(8087
push
xchg
lea
in
(bad)
cld
dec
neg
sbb
call
or
jg
fdivr
push
fnstsw
cs
push
add
mov
jnp
stos
aam
repnz
push
xchg
aas
push
std
or
pop
in
std
push
outs
or
cmps
bndstx
fstp
jmp
data16
sub
fwait
dec
push
(bad)
outs
shl
add
ins
aas
cli
outs
loop
ja
icebp
cmp
in
dec
or
mov
int3
mov
sti
lar
or
mov
ins
std
cmp
and
fadd
lods
addr16
fidiv
call
mov
scas
outs
loope
xor
mov
lock
loope
cmp
lock
add
ds
out
sbb
(bad)
cmp
mov
out
mov
or
jecxz
cmp
adc
ds
test
cwde
ds
mov
out
mov
out
mov
sub
jecxz
cmp
xor
xor
jge
out
or
cmp
sub
je
inc
(bad)
cmp
dec
fadd
jge
pop
dec
push
in
ja
ins
push
les
dec
sbb
pop
repnz
jnp
movs
mov
inc
call
jg
(bad)
xor
adc
mov
rcl
adc
and
push
or
add
adc
or
inc
ss
push
push
jne
or
push
jnp
xor
ja
cld
mov
jne
je
cmp
(bad)
and
and
dec
repz
xchg
shr
stc
mov
pop
mov
mov
sti
repnz
jmp
sub
or
mov
cmp
mov
(bad)
xchg
sub
xlat
int3
push
mov
cdq
fadd
popf
jne
enter
leave
adc
push
dec
push
push
sub
mov
mov
test
(bad)
in
mov
jp
lods
xor
mov
mov
(bad)
rcr
ret
dec
(bad)
imul
pop
cld
sub
rcr
adc
xchg
js
cmp
lods
push
nop
inc
cmp
lods
mov
inc
cmp
lods
mov
xchg
push
cmp
mov
cmp
je
mov
cmp
dec
mov
shl
data16
push
(bad)
out
hlt
sub
mov
lods
mov
cmp
lock
movs
into
cmp
loopne
sbb
mov
ret
sub
jb
test
xor
jle
mov
or
mov
(bad)
clc
jg
hlt
imul
jecxz
(bad)
out
shr
hlt
cmp
fs
jmp
fs
cmp
xchg
(bad)
clc
sbb
cli
pop
cld
or
cdq
clc
mov
push
mov
push
mov
jge
sbb
out
lock
lock
jns
(bad)
xchg
cld
fisttp
pop
std
fwait
test
test
or
jmp
push
jg
into
(bad)
cld
fbld
cmc
mov
dec
push
mov
sub
and
mov
mov
mov
push
std
xor
jp
cli
jge
cli
jge
sti
imul
add
jle
cvttps2pi
sbb
ret
add
push
push
add
push
add
pop
sahf
(bad)
icebp
cmp
pop
loopne
pop
inc
pusha
or
loopne
pop
dec
retf
pop
and
jno
iret
pusha
and
inc
pusha
mov
jns
and
iret
repz
inc
pusha
and
loopne
pop
xor
xrelease
push
jo
jns
out
mov
lock
repz
xor
nop
mov
(bad)
icebp
cmp
lock
push
js
out
jo
mov
lock
cmp
jecxz
jo
add
out
sahf
out
dec
fs
sahf
out
sahf
cmps
mov
iret
repz
sub
ins
xor
iret
rep
mov
out
sahf
(bad)
xor
jb
sahf
out
sahf
test
loope
push
lock
repz
and
dec
bound
iret
repz
movs
mov
sahf
(bad)
icebp
pop
push
sub
jns
out
xchg
lods
ret
repz
xor
iret
repz
jb
shl
jns
out
push
pusha
and
jecxz
push
and
nop
out
sbb
rol
and
cmps
out
sahf
and
mov
iret
mov
inc
pop
loop
sahf
pusha
and
outs
lock
dec
(bad)
fdivp
sub
xchg
dec
rol
(bad)
iret
adc
dec
jne
pop
or
dec
xor
adc
fidiv
dec
inc
xchg
ds
dec
inc
add
xchg
je
xor
shr
cmps
in
pop
ins
jbe
xor
iret
inc
jb
arpl
add
out
sub
inc
dec
push
fmul
push
bound
and
imul
outs
xor
repz
popa
sub
add
add
(bad)
lock
dec
add
sbb
cmp
inc
dec
and
shr
cmc
sbb
cmps
lea
jmp
add
popa
call
push
cs
jae
xor
cs
in
dec
arpl
jb
mov
data16
xchg
std
data16
(bad)
mov
je
dec
retf
gs
fisub
cs
imul
in
pop
imul
daa
xchg
in
je
mov
sub
jns
mov
cmp
inc
jb
rcl
add
jb
addr16
ins
and
ins
gs
sub
sub
arpl
sub
je
jae
add
push
je
and
xor
pop
test
data16
arpl
adc
gs
cs
inc
ins
push
ja
sub
(bad)
cmp
and
or
mov
sub
jns
ret
je
and
mov
mov
cmp
mov
sbb
(bad)
mov
jne
outs
mov
and
jmp
inc
outs
and
fmul
out
cmp
int
mov
je
xchg
leave
mov
outs
fnstenv
inc
fistp
adc
jg
data16
pop
imul
outs
je
ja
int
pop
ss
jmp
das
ins
arpl
xchg
in
ds
mov
jo
jle
pop
sub
mov
cdq
sbb
fs
pop
adc
sub
leave
sar
mov
stc
dec
push
xlat
fs
int3
sub
(bad)
mov
es
jne
outs
iret
jbe
sub
(bad)
pop
outs
or
push
ss
jne
and
adc
je
mov
call
jns
cmps
sub
icebp
popf
push
sub
xlat
nop
xor
loop
ins
mov
cld
fld
cmps
push
and
and
repnz
mov
data16
cmc
xchg
jb
pop
cmp
and
jnp
sub
xor
sbb
ins
fbstp
adc
fidivr
dec
movs
out
imul
mov
and
push
jne
sbb
mov
and
gs
mov
cmps
dec
(bad)
lods
popf
ins
sbb
cmc
inc
cmps
jge
pop
popa
jb
jns
inc
(bad)
shl
lods
repnz
push
je
pop
leave
cmc
stos
rcr
cli
fs
jnp
fmul
fld
pop
ss
mov
ja
std
fs
mov
cmps
push
nop
fnsave
(bad)
cmp
sbb
shl
aas
fnsave
mov
dec
dec
arpl
dec
repz
mov
(bad)
add
add
sbb
sbb
inc
mov
jmp
add
push
mov
mov
sub
rcr
push
mov
cmp
add
pop
mov
pop
cmp
ins
and
sub
pop
xchg
sbb
lods
or
jbe
arpl
add
je
jb
push
and
ins
outs
outs
jo
add
imul
and
mov
adc
bound
jb
jo
and
fsubr
xchg
add
mov
movs
dec
stos
daa
(bad)
mov
sub
jmp
cmp
out
xchg
scas
mov
push
dec
stos
cmps
push
ins
sub
(bad)
ja
pinsrw
xchg
scas
push
jns
mov
jl
and
inc
jae
stos
ins
rep
leave
mov
mov
xor
inc
jmp
nop
fidiv
jo
pop
movs
jbe
cmp
movs
jg
outs
pop
mov
out
adc
jns
pop
mov
movs
arpl
scas
lods
adc
jg
fs
iret
xchg
push
mov
add
ins
jb
push
push
push
and
sbb
test
outs
sub
ja
xchg
jo
push
push
ja
mov
imul
jne
jo
jb
jo
arpl
scas
push
push
jne
arpl
sbb
je
imul
sbb
jo
je
push
sub
or
lds
jmp
ins
popa
outs
imul
jbe
les
jne
or
jno
mov
test
pop
push
retf
iret
jl
je
mul
out
add
outs
stc
mov
add
pop
sbb
das
dec
pop
add
imul
xlat
dec
leave
sti
es
adc
jae
iret
cmps
dec
xor
hlt
imul
sahf
retf
add
push
or
add
ret
cmp
dec
push
inc
mov
push
ja
sub
and
inc
push
inc
push
inc
pop
inc
gs
ins
fld
pop
push
jns
je
scas
adc
pop
push
ins
jno
mov
push
dec
inc
inc
dec
inc
push
sbb
inc
arpl
push
retf
add
xor
jae
test
push
popa
jb
gs
xchg
repnz
mov
sub
fcom
mov
outs
xor
mov
pop
push
push
lea
jne
jb
outs
mov
ins
push
dec
hlt
inc
ja
lea
hlt
inc
imul
(bad)
push
push
inc
dec
pop
add
outs
gs
xor
cs
xchg
mov
xchg
adc
retf
or
sbb
mov
outs
fld
loopne
dec
dec
inc
dec
push
push
pop
jae
mov
jb
mov
ins
ins
outs
gs
addr16
in
iret
fwait
loopne
xor
outs
js
jmp
(bad)
and
es
push
push
test
push
pushf
inc
mov
push
dec
mov
data16
jae
ins
les
ret
pop
jne
push
out
js
ins
outs
stc
jle
adc
gs
jb
test
sub
je
sub
xchg
sub
rcl
jns
(bad)
jecxz
dec
pop
shr
push
push
aad
(bad)
jmp
ret
mov
push
std
pop
jo
sbb
loope
inc
pop
clc
push
sbb
push
(bad)
jecxz
mov
push
xor
jo
push
push
dec
add
jae
adc
stos
cs
xchg
test
adc
xor
sbb
inc
sub
lock
movs
and
mov
pop
int
xchg
jae
dec
aad
scas
push
popa
cmp
push
jmp
inc
xlat
jne
inc
dec
mov
jo
xchg
in
std
xor
imul
sbb
sub
push
sahf
(bad)
int3
iret
or
add
push
(bad)
jecxz
sub
dec
hlt
jl
test
rcr
jne
scas
call
pop
lods
push
fdivr
inc
ja
xchg
out
dec
outs
jbe
push
ins
xchg
and
sar
je
sbb
(bad)
sub
xor
push
dec
sub
jmp
jge
mov
in
cwde
push
fwait
inc
test
xor
dec
push
xor
retf
pop
push
inc
mov
sub
dec
and
cmp
pop
inc
dec
dec
push
or
sub
dec
inc
and
xor
shl
push
jb
dec
dec
cmp
daa
and
daa
sub
(bad)
sti
push
dec
cdq
dec
ret
mov
sub
call
or
bound
push
push
sar
dec
jne
xchg
cmps
loop
cmps
and
std
mov
shl
fwait
cmps
shl
scas
push
pop
mov
sti
add
xor
adc
ds
xor
frstor
cld
loope
data16
sub
fidivr
cmp
mov
pop
inc
xchg
dec
xchg
es
je
jo
dec
out
jae
inc
inc
cmp
inc
retf
push
dec
dec
pop
inc
addr16
jmp
mov
sub
in
call
dec
aam
fisub
cmps
push
push
popa
jbe
ja
and
fisub
js
push
fs
mov
pop
inc
(bad)
lahf
in
mov
xchg
ins
push
pop
bound
cmp
bound
sbb
(bad)
test
sbb
mov
cmc
call
lods
add
cmc
rcl
dec
mov
out
and
jae
sub
js
push
pop
outs
ja
in
xchg
nop
inc
in
outs
outs
pop
mov
mov
inc
jae
or
jb
dec
cs
ror
add
push
or
outs
scas
adc
xor
fs
inc
pop
inc
push
sub
jns
dec
inc
push
rcl
xchg
inc
xchg
or
pusha
mov
dec
pop
push
inc
xor
add
or
js
jle
push
sub
jbe
jae
out
or
retf
mov
int3
dec
jae
(bad)
adc
lock
mov
jb
mov
(bad)
xor
ins
adc
and
ins
cdq
shr
movs
push
push
(bad)
push
jns
shl
xor
ins
pop
fs
gs
addr16
pop
pop
jp
sub
jae
xchg
stos
dec
pop
mov
jl
xchg
dec
mov
and
pop
xchg
add
mov
pusha
outs
jae
mov
mov
xlat
test
jp
cmp
pop
bound
dec
or
jb
jl
test
cmp
pop
pop
js
push
push
inc
aas
pop
push
push
inc
push
dec
push
pop
push
out
imul
push
dec
dec
pop
sar
neg
sbb
sbb
inc
pop
push
inc
cmps
div
popa
repnz
pop
xor
enter
imul
shl
stos
arpl
in
fist
sahf
lds
movs
loop
sub
push
hlt
jmp
ins
and
mov
ficomp
mov
mov
test
jbe
gs
inc
jl
sbb
shl
or
in
or
push
inc
push
loop
jnp
dec
xchg
gs
pusha
push
push
add
fwait
jl
xchg
cli
pop
push
push
dec
mov
dec
repnz
push
cmp
mov
(bad)
shr
inc
out
shl
and
sub
cmp
leave
popa
jo
mov
mov
je
xchg
add
dec
push
cmp
stos
(bad)
jns
gs
aam
inc
push
cli
(bad)
mov
xlat
test
xor
std
jnp
cmp
sub
cmps
jns
in
mul
mov
dec
call
outs
fldcw
arpl
dec
xchg
xor
lods
(bad)
xlat
gs
push
(bad)
xor
xor
adc
ins
cli
push
out
popa
mov
jle
inc
pop
mov
js
xchg
sub
mov
cs
push
ja
fild
ret
pop
push
inc
adc
cmp
pop
inc
jle
xchg
stc
or
cs
idiv
xor
sub
repz
das
sub
add
test
ja
repnz
add
(bad)
xlat
stos
jbe
or
cli
pop
inc
add
add
lock
aam
scas
pushf
movs
jb
mov
xchg
es
test
jno
xor
sbb
add
jmp
mov
or
pop
mov
sub
das
test
add
and
mov
add
add
retf
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
add
add
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
or
add
add
ficomp
fneni(8087
xor
or
and
ret
bound
enter
aad
add
dec
add
ins
push
hlt
jmp
sbb
mov
rcr
pop
dec
mov
add
add
test
xor
sbb
adc
mov
push
sub
mov
add
mov
cdq
sub
push
push
or
xor
movs
cmp
repz
sti
jl
cmp
fwait
das
inc
(bad)
fsubrp
retf
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
add
fldenv
jbe
mov
and
xchg
push
aam
pop
int3
pop
gs
ins
jo
push
add
add
std
in
mov
push
cmps
lea
add
pop
add
shr
pop
add
add
aas
lar
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
lods
je
add
add
out
xor
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
sub
add
(bad)
sar
call
hlt
pop
(bad)
xor
add
add
pusha
push
jg
sbb
jp
xchg
leave
pushf
out
mov
sub
mov
add
add
jmp
cmp
push
cdq
popa
pop
sub
mov
imul
xchg
lds
arpl
repz
jnp
imul
int3
repz
xchg
xor
(bad)
xlat
stos
out
add
sbb
cli
pop
inc
jns
out
lock
aam
scas
pushf
out
sahf
out
jb
mov
sahf
out
sahf
xchg
es
idiv
out
int3
xor
in
jno
push
sahf
out
xor
(bad)
and
sbb
cmp
repz
add
mov
out
jmp
mov
or
sbb
repz
rep
pop
mov
cmp
(bad)
mov
jecxz
sub
and
in
sahf
out
sub
mov
push
sahf
out
retf
mov
in
sahf
out
shr
stos
sti
xor
cmp
test
sahf
pop
nop
stc
jg
sahf
out
push
cmp
test
out
sahf
out
inc
(bad)
xchg
popf
sahf
out
sahf
cmp
mov
sbb
and
out
sahf
out
ror
or
xor
xchg
cmp
popa
icebp
pop
les
repnz
sbb
popa
icebp
pusha
or
and
nop
mov
repz
out
mov
iret
repz
fneni(8087
xor
or
leave
mov
xor
ret
out
sahf
lods
bound
out
jns
enter
jo
pop
in
repz
add
test
cmp
jmp
retf
(bad)
mov
and
cmp
cmps
mov
call
cmp
pop
dec
mov
iret
repz
mov
dec
inc
shl
mov
cmp
push
popa
xor
repz
rcr
int
cwde
adc
sbb
rcr
xchg
iret
repz
fwait
push
xchg
into
inc
sar
and
mov
jae
mov
imul
inc
cdq
jns
out
sub
rcr
inc
push
push
push
dec
dec
iret
sbb
xor
leave
and
xor
cmp
int3
jl
out
xor
fwait
push
in
xor
pop
cmps
sbb
les
aam
jmp
pushf
xchg
cmps
jae
leave
loope
out
ret
push
into
push
xchg
sbb
jo
inc
ret
sub
int
cdq
repz
cmp
jbe
enter
ins
scas
sbb
jae
jb
mov
into
test
mov
fst
pop
push
push
sub
pop
mov
pusha
retf
dec
mov
dec
std
in
int3
rol
ficom
push
sbb
loopne
lea
add
(bad)
mov
les
in
adc
das
jb
push
xor
dec
mov
lock
mov
pop
jb
xchg
imul
mov
jb
jmp
sub
xchg
sbb
jae
or
enter
lods
xchg
ret
inc
cmp
outs
call
jne
cwde
jecxz
cmp
jno
daa
jae
sub
bound
mov
push
sbb
push
into
or
xchg
sbb
in
dec
jb
xchg
ret
shl
je
pop
fld
dec
jae
int
call
xchg
mov
cmp
xor
cmp
adc
or
in
pusha
mov
fldenv
sbb
cmp
xchg
jl
inc
jae
xor
cmps
mov
inc
scas
push
mov
cmc
enter
lock
sbb
add
aad
sbb
retf
pushf
pop
mov
loope
mov
inc
push
or
add
add
lock
arpl
clc
jl
test
ja
cdq
idiv
(bad)
push
repnz
add
or
fisubr
mov
vandpd
xor
add
add
addr16
out
inc
add
add
mov
xlat
bound
stos
out
jbe
call
sbb
jge
xchg
cli
cli
add
add
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
mov
scas
jmp
add
in
jb
fwait
rol
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ss
add
pop
jle
aas
inc
cmc
div
add
xor
pop
push
movs
movs
hlt
shl
in
stc
icebp
icebp
or
jno
add
add
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
mov
gs
ret
ret
pop
xor
sbb
add
add
aaa
xchg
xchg
mov
das
call
and
adc
sbb
loop
int
jmp
add
add
dec
daa
daa
imul
jne
adc
or
sbb
sub
je
sbb
add
add
sbb
mov
pop
out
pop
mov
push
div
cmp
add
add
(bad)
(bad)
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
mov
jp
shr
sub
and
pusha
jecxz
cld
add
add
pop
jns
mov
mov
pop
in
aam
push
(bad)
retf
retf
inc
addr16
cmp
dec
dec
ficomp
add
aam
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
add
xlat
xor
push
adc
inc
iret
jmp
add
push
(bad)
jg
and
add
inc
and
test
jecxz
push
push
repz
mov
inc
rol
xchg
lods
and
add
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
adc
xor
(bad)
inc
add
add
std
repz
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
add
add
mov
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
add
out
sbb
sub
jae
xchg
shl
sbb
dec
shl
and
push
sub
add
add
jle
nop
nop
stos
or
inc
retf
out
sub
mov
cmp
(bad)
jns
pop
pop
add
add
loop
or
sbb
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
fisttp
push
add
add
or
and
mov
ret
mov
lods
lods
out
les
cmps
cmp
xchg
add
sbb
movs
shl
in
bnd
mov
out
enter
aaa
aaa
pop
call
mov
add
add
dec
dec
ror
test
mov
push
push
cli
repz
hlt
pop
iret
jmp
add
scas
hlt
jp
scas
scas
jmp
outs
mov
add
outs
pop
cs
sbb
and
cmps
cmps
icebp
jae
add
add
mov
xchg
mov
retf
call
fnstsw
je
ds
pop
and
mov
add
add
mov
loopne
jo
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadd
add
add
add
test
push
push
adc
popa
popa
mov
scas
push
push
stc
imul
rcr
add
adc
sbb
loope
cmp
clc
clc
adc
cwde
cwde
mov
add
add
adc
xor
imul
pop
mov
cmps
sub
push
push
and
add
add
jmp
into
dec
stos
push
push
call
sub
(bad)
jp
mov
or
add
add
mov
xor
push
ret
sub
sub
add
(bad)
movups
mov
test
push
cld
ins
mov
push
cmp
test
out
sahf
mov
push
add
jge
(bad)
out
inc
out
sahf
out
inc
xchg
sahf
leave
or
addr16
jns
out
jmp
jns
out
scas
push
inc
sahf
out
sahf
add
hlt
xor
sahf
out
or
out
sahf
out
gs
sub
lgs
ss
jns
out
cmp
sbb
jns
out
je
sub
sahf
out
sti
test
sahf
out
into
jnp
jno
cmc
fiadd
out
repz
imul
iret
in
mov
iret
repz
aam
dec
imul
cmp
repz
vandnps
repz
xchg
iret
adc
cmp
mov
cmp
repz
cmp
add
shl
iret
repz
sbb
ins
dec
adc
cmp
repz
iret
repz
cmp
add
repz
out
xchg
mov
repz
jle
iret
repz
or
sar
iret
repz
loop
jbe
push
repz
repz
push
fisttp
ins
iret
repz
in
outs
out
cmps
cmp
repz
movs
aaa
mov
inc
repz
repz
mov
fs
repz
loopne
cli
pop
and
scas
mov
sbb
mov
cmp
rep
jb
icebp
(bad)
iret
repz
push
and
cmp
repz
fadd
cmp
repz
repz
adc
iret
repz
pop
daa
mov
iret
repz
mov
cmp
cmps
mov
xchg
and
repz
(bad)
js
(bad)
clc
repz
repz
xor
iret
repz
mov
cmp
repz
cld
(bad)
cmp
repz
repz
repnz
cmp
lds
add
cmp
repz
xlat
stos
jbe
xor
iret
repz
jge
pop
inc
iret
repz
lock
aam
scas
cmp
repz
movs
jb
mov
repz
repz
es
test
xor
in
cmp
repz
fdiv
adc
iret
repz
sbb
iret
call
repz
daa
mov
or
sub
sbb
iret
repz
mov
cmp
repz
jecxz
test
dec
call
xor
cld
mov
out
sahf
out
retf
mov
jns
dec
pop
iret
shr
jns
out
stos
sti
inc
dec
xor
inc
stc
add
sahf
out
sahf
cmp
test
mov
inc
(bad)
xchg
popf
cmp
out
sahf
out
mov
and
sahf
out
sahf
push
ror
or
sahf
out
adc
pop
xchg
inc
pop
out
sahf
out
cmps
jle
fs
out
sahf
pop
sbb
cmp
and
nop
mov
jns
out
out
mov
jns
pop
or
loopne
jns
out
cmp
dec
push
and
out
sahf
out
shr
sahf
xchg
in
out
jns
out
aaa
ins
(bad)
aad
test
ins
push
hlt
jmp
scas
or
jns
cs
mov
out
sahf
out
fnsave
sahf
out
sahf
mov
jns
out
mov
dec
add
push
out
sahf
out
xor
out
sahf
rcr
out
cwde
adc
mov
push
xchg
into
sahf
out
sahf
push
sub
mov
mov
out
sahf
out
cdq
sub
jns
push
mov
sahf
out
ja
repnz
jns
out
add
(bad)
sahf
out
sahf
xlat
stos
jbe
cmp
jns
jge
pop
inc
lock
sahf
out
aam
scas
pushf
sahf
out
sahf
movs
jb
mov
jns
out
xchg
es
test
xor
in
jno
out
sahf
fdiv
adc
out
and
sbb
sahf
out
adc
jns
daa
mov
or
sub
sbb
mov
push
cmp
mov
sahf
out
sahf
jecxz
test
shl
and
mov
push
sahf
out
retf
mov
out
sahf
out
shr
stos
sti
sahf
out
sahf
inc
dec
xor
jns
add
cmp
out
sahf
out
push
mov
jns
xchg
popf
cmp
mov
mov
and
push
out
sahf
out
int
adc
sahf
out
sahf
pop
xchg
inc
pop
les
out
cmps
jle
fs
sbb
jns
out
pusha
or
and
nop
mov
sahf
out
out
mov
out
sahf
out
loopne
cmp
sahf
out
sahf
dec
push
and
ret
out
shr
jns
out
out
aaa
ins
sahf
out
sahf
(bad)
aad
test
jns
hlt
jmp
out
mov
out
sahf
sbb
mov
call
fnsave
mov
out
jo
mov
sahf
out
sahf
dec
add
push
popa
jns
out
xor
sbb
sahf
loope
cwde
adc
(bad)
out
push
xchg
into
push
sub
jns
out
mov
jns
mov
jns
out
cdq
sub
add
and
push
hlt
cmps
push
jle
gs
sbb
movs
ret
cmp
pop
xchg
cmp
add
add
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
dec
and
lds
add
loope
retf
xlat
xor
pop
dec
and
add
add
jmp
ret
das
jne
or
imul
mov
pop
out
xchg
pushf
xchg
mov
ins
jp
xchg
push
pop
fcmovbe
mov
and
dec
loopne
sub
ret
hlt
mov
cdq
add
add
pop
imul
jno
mov
mov
data16
cmp
sbb
adc
xor
push
jg
mov
ja
mov
and
pop
pop
sbb
ins
xchg
clc
mov
jae
and
add
jecxz
(bad)
push
push
stos
sub
mov
add
lds
shl
or
and
push
in
push
sbb
sub
add
add
pop
repnz
imul
int
add
bound
les
push
popf
mov
dec
add
add
jmp
or
out
stos
pop
jno
push
mov
and
add
mov
fnstsw
add
inc
xchg
push
lea
add
aam
add
add
push
adc
and
mov
inc
int3
fstp
call
mov
retf
cmp
out
(bad)
inc
psubsw
test
add
add
add
add
push
adc
ins
pop
jb
std
push
(bad)
sti
jne
aad
add
add
ss
fldenv
cmps
and
ss
addr16
push
out
mov
xchg
rol
add
add
fwait
xchg
sahf
add
dec
popa
fsub
mov
sbb
sbb
loop
mov
in
and
inc
add
add
push
or
mov
lods
sub
push
test
enter
test
cdq
fnstsw
test
cmc
mov
pop
sti
jle
or
xor
inc
sub
and
fdiv
arpl
xor
add
add
retf
test
adc
adc
test
jge
mov
xor
(bad)
sub
push
das
dec
fdiv
push
in
ja
jecxz
sub
add
mov
cli
inc
jmp
mov
mov
jge
fsub
xor
add
add
(bad)
fnstcw
rol
mov
mov
cmps
cmc
or
fidiv
mov
add
add
in
js
or
push
jle
(bad)
test
call
add
cmc
lahf
pop
add
add
mov
outs
aad
test
enter
adc
jge
call
cmp
add
add
or
sbb
in
call
out
outs
gs
jmp
jle
mov
call
add
add
(bad)
ss
jmp
(bad)
xor
xor
movs
xchg
xor
dec
mov
aaa
cld
or
loopne
shl
icebp
add
dec
inc
in
(bad)
jg
push
push
pop
xchg
imul
jbe
(bad)
add
add
lea
mov
int3
stos
dec
push
in
add
sahf
shl
sbb
sub
mov
popf
pop
jmp
mov
jae
or
mov
sbb
push
jmp
(bad)
inc
adc
add
mov
mov
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
add
add
pop
push
bnd
sbb
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
add
add
cmp
sub
mov
ret
jb
loop
or
cmp
mov
or
add
or
(bad)
mov
pushf
fs
rcl
xor
ins
pop
je
mov
sahf
out
sahf
ret
xchg
retf
icebp
stos
jns
out
xchg
push
not
sahf
out
or
sahf
cwde
loope
adc
(bad)
out
jmp
sub
shr
inc
push
sahf
out
sahf
imul
pop
data16
out
mov
and
out
sahf
out
sbb
pop
sbb
mov
loop
jns
out
sub
add
sahf
out
mov
out
sahf
lock
sahf
out
mov
out
sahf
out
push
push
stc
cmp
scas
inc
mov
outs
jns
out
jmp
int3
ja
out
sahf
out
cmp
inc
jmp
leave
add
out
dec
sti
push
push
daa
fs
sahf
out
sar
mov
sahf
out
sahf
rcr
sahf
out
push
or
inc
sbb
out
mov
out
sahf
mov
jns
out
xor
fsubr
retf
sahf
out
inc
and
sahf
out
sahf
adc
repz
jns
out
shr
and
out
sahf
out
fsubr
mov
(bad)
ss
sub
jns
out
movs
in
fwait
(bad)
out
pop
cmc
mov
sahf
test
jns
out
jnp
hlt
add
out
or
fxch
sahf
out
sahf
aam
scas
xor
jns
out
shl
mov
dec
out
sahf
out
push
das
lea
out
sahf
push
(bad)
sbb
jg
pop
jae
pop
out
sahf
out
xor
mov
out
sahf
mov
sahf
out
cmp
aas
jns
jmp
xchg
sahf
sub
jb
mov
out
inc
jno
pushf
nop
popa
out
sahf
out
je
cmps
gs
out
sahf
movs
pop
imul
sahf
out
add
ins
jbe
xlat
out
sahf
out
inc
mov
jns
push
shl
jns
out
stc
pop
pushf
jp
and
sahf
out
imul
jns
ds
lods
lods
jns
out
cmp
xor
out
sahf
out
mov
out
sahf
ins
clc
rol
(bad)
jns
out
stos
sub
jnp
xchg
jns
out
push
sbb
sahf
out
sahf
repnz
mov
jns
push
push
loope
in
out
sahf
out
lahf
adc
sahf
add
jns
out
adc
inc
out
sahf
out
pop
out
or
sahf
out
sahf
push
add
out
jb
cmp
cmp
out
sahf
out
push
cs
out
sahf
xchg
xchg
lds
dec
jns
out
sbb
out
sahf
out
test
sbb
sahf
out
sahf
frstor
cmc
cmp
out
jle
(bad)
cld
icebp
fsub
jns
out
and
and
sahf
out
sahf
xor
sahf
out
jecxz
mov
jns
out
sub
dec
rcr
or
out
mov
adc
jns
out
imul
jns
sub
jns
out
mov
outs
out
sahf
out
iret
call
jns
or
xchg
jns
out
mov
fcomp
ficom
(bad)
mov
out
sahf
dec
add
mov
jns
out
push
jmp
sahf
out
push
inc
popa
or
out
sahf
adc
daa
leave
in
sahf
out
mov
jae
aaa
int
jns
out
outs
fcomi
les
inc
ret
and
jns
add
jns
out
pop
push
hlt
inc
sahf
out
sahf
pop
daa
stos
popf
cli
jns
out
jecxz
jbe
add
out
sahf
out
xor
out
sahf
jmp
out
ror
out
sahf
out
loopne
ret
out
sahf
pop
mov
sahf
out
into
fistp
push
push
fs
sahf
out
or
jns
fidivr
dec
pop
jns
out
push
jmp
lds
sub
jns
out
add
iret
jns
out
sahf
pop
imul
out
cmps
cs
and
sahf
out
jno
and
sahf
out
sahf
ds
les
jns
out
push
cwde
mov
jns
out
sbb
jl
sahf
out
sahf
test
sub
jns
out
pop
push
test
sahf
out
pop
or
out
sahf
out
fwait
rcr
jns
out
adc
out
sahf
out
mov
icebp
jne
out
sahf
cdq
jg
jb
jns
out
sti
inc
and
in
out
sahf
out
xchg
(bad)
dec
mov
stc
sub
out
shl
jns
out
jge
dec
cmp
aam
jp
jns
out
lods
cmp
jle
out
sahf
out
cmp
pop
rcr
and
sahf
out
cmp
pop
call
(bad)
mov
out
sahf
lahf
mov
aas
movs
jns
out
mov
add
jns
out
int
dec
out
sahf
out
sahf
stos
xchg
shr
jns
out
gs
mov
sahf
out
adc
xlat
mov
clc
adc
out
inc
shl
adc
mul
jns
out
cmp
out
sahf
and
sbb
out
or
retf
sahf
jp
out
ins
mov
jle
jne
sbb
(bad)
xchg
retf
hlt
cmc
sbb
and
xlat
mov
mov
xlat
retf
push
jbe
mov
jge
pop
call
xchg
pop
jge
call
sub
mov
xchg
and
fisubr
ficomp
jne
sbb
push
imul
cmp
adc
lods
inc
in
cmp
out
jge
add
shl
dec
xchg
mov
sbb
fld
jmp
pop
inc
je
mov
ins
test
mov
mov
jmp
inc
mov
jae
xlat
and
bound
adc
sbb
mov
stos
test
aam
xor
inc
sub
test
add
mov
outs
xor
push
test
inc
call
ja
jle
or
mov
in
ds
sub
xchg
hlt
push
mov
test
jp
push
jmp
inc
jae
push
out
add
popf
pop
in
cmp
out
xchg
je
(bad)
fisubr
popa
out
adc
sbb
and
(bad)
fucompp
xor
(bad)
jmp
pop
test
xlat
dec
jp
inc
jmp
push
and
shr
test
xor
jle
je
dec
aam
xor
sub
pop
daa
in
neg
stos
xlat
jno
fisub
push
mov
fs
xchg
jbe
mov
jmp
aaa
dec
movs
out
test
dec
aam
test
xchg
or
pushf
mov
dec
retf
jbe
dec
aad
xor
push
push
sbb
mov
adc
xor
inc
mov
jns
into
pop
aas
push
stos
(bad)
dec
aam
aam
fist
sbb
mov
adc
dec
fisub
push
fist
je
mov
arpl
shr
mov
mov
xchg
hlt
lahf
mov
imul
cmps
call
add
into
or
lahf
dec
fdiv
popa
(bad)
test
xor
cli
daa
inc
pop
pop
jmp
cmp
mov
fisttp
inc
sbb
pop
push
call
(bad)
xchg
fld
cs
and
sub
xlat
add
cli
or
fucomip
mov
mov
sbb
sbb
xchg
imul
xor
cmps
xchg
jge
push
shl
les
mov
cmp
push
add
inc
jmp
out
or
psrld
ss
(bad)
push
cmp
push
fild
cmp
movs
not
stos
(bad)
mov
sbb
out
xchg
jp
push
jmp
test
out
mov
jne
push
inc
add
push
call
out
mov
mov
(bad)
push
jp
inc
jmp
fist
cmp
mov
(bad)
adc
push
fbld
psubusw
dec
mov
mov
sbb
and
jp
shr
inc
pop
hlt
pushf
test
jnp
mov
aam
xor
and
mov
jnp
dec
dec
dec
inc
call
dec
cmp
dec
fidivr
push
push
cmp
inc
jmp
push
xchg
jbe
(bad)
aam
xor
xchg
or
in
je
mov
inc
and
inc
lahf
fbld
mov
jge
scas
xlat
or
xchg
xor
mov
push
fldcw
fs
or
inc
call
movs
test
mov
jg
popa
out
xchg
nop
pop
es
gs
add
xor
sbb
mov
jge
jle
xchg
jp
inc
call
inc
jge
push
hlt
popf
dec
fdivr
push
cmps
or
sahf
movs
repz
pmullw
imul
jmp
pop
adc
cmp
call
test
test
ja
scas
xchg
mov
dec
pop
in
cmp
test
mov
outs
retf
xchg
jp
daa
in
xor
jecxz
movs
dec
adc
cli
sub
jge
inc
imul
cmp
jmp
mov
fcom
cmp
dec
iret
inc
jp
lods
in
ss
push
mov
in
call
add
lods
in
cmp
test
dec
dec
mov
sub
jbe
psubusb
push
scas
jmp
mov
inc
out
movs
mov
push
gs
cmp
shr
push
mov
ja
sahf
not
aas
inc
mov
xor
popa
adc
mov
ja
pop
mov
jmp
test
inc
or
xchg
jbe
mov
jnp
pop
and
or
call
sub
mov
jg
into
scas
add
scas
jmp
mov
movs
test
mov
arpl
push
scas
xchg
inc
pop
sti
std
push
call
test
cs
mov
dec
inc
sub
call
ins
enter
mov
inc
out
(bad)
or
adc
sbb
xchg
and
push
daa
jmp
scas
add
push
or
jns
dec
cmps
dec
mov
push
mov
adc
cli
or
jg
push
(bad)
adc
pop
mov
ja
dec
xchg
xchg
cli
(bad)
(bad)
xor
(bad)
movs
fld
aam
movs
pop
xlat
inc
jnp
cmps
call
adc
cs
jbe
psrlw
dec
test
lahf
mov
inc
ret
je
(bad)
shl
bound
in
neg
movs
jmp
sbb
in
cmp
fld
pop
stos
fdivr
jle
dec
cli
dec
xchg
xor
sbb
(bad)
aam
and
in
cmp
movs
fist
mov
popa
xor
jge
jmp
adc
sti
dec
aam
cmp
xchg
out
adc
daa
inc
cmc
pop
test
jno
(bad)
lahf
test
xor
xlat
inc
cmp
(bad)
fsub
popa
(bad)
adc
sbb
jle
cmc
cmp
xor
add
neg
pop
or
sti
dec
shr
cmp
rol
test
dec
mov
jge
adc
inc
fidiv
cmp
imul
ss
dec
iret
repz
inc
pop
push
ins
gs
repz
ja
cdq
or
mov
repz
ror
ret
cld
cmc
cmp
repz
out
xor
and
cmp
repz
push
or
cmp
jp
push
repz
dec
stos
mov
iret
repz
repz
jmp
repz
fdiv
fs
jecxz
mov
or
pop
and
or
jnp
push
inc
cli
cmp
mov
sub
into
and
dec
aam
xor
add
scas
jmp
mov
movs
shl
push
scas
xchg
cmp
aaa
inc
pop
test
push
adc
sbb
inc
mov
dec
mov
inc
jbe
(bad)
shr
inc
out
and
sbb
adc
sti
push
shl
dec
xchg
and
mov
jns
scas
add
or
jmp
test
push
adc
push
mov
(bad)
adc
or
in
cmp
fild
pop
(bad)
fidiv
popa
call
xor
pop
and
dec
aam
xor
inc
adc
cmps
call
addr16
cli
psrlw
aaa
dec
imul
inc
sbb
mov
jne
push
scas
mov
cmp
sbb
push
fldcw
imul
in
cmp
stos
fld
cli
dec
fdivr
fs
dec
inc
sbb
mov
ins
cmp
aam
cmp
(bad)
fist
mov
popa
movs
push
fist
cli
xcrypt-ofb
cmps
jmp
cs
pop
dec
aam
ret
sub
popf
daa
jmp
adc
inc
mov
inc
lahf
test
neg
push
or
mov
popa
(bad)
jmp
cmp
test
xlat
add
xor
imul
cmp
dec
sar
dec
dec
sti
mov
test
or
sar
pusha
dec
jbe
stos
out
jno
adc
add
jmp
mov
add
push
or
xor
xor
out
mov
mov
cmp
inc
inc
inc
out
jp
nop
push
add
sti
arpl
sub
test
jne
not
xor
arpl
bound
xor
gs
xor
adc
inc
pop
data16
dec
cmps
out
adc
xor
add
cmp
fs
data16
xor
xor
xor
(bad)
xor
arpl
aaa
arpl
sub
or
xor
sbb
xor
mov
outs
add
or
les
fadd
add
adc
jae
das
das
jae
ins
outs
outs
ins
gs
jns
adc
pop
or
jne
ins
mov
mov
inc
push
push
gs
bound
push
and
dec
push
pop
ins
add
shl
xor
pop
fs
xor
inc
cli
es
adc
add
push
push
pop
pop
pop
pusha
outs
jo
ja
daa
cs
add
imul
dec
pop
pop
push
sub
(bad)
ror
ds
add
pusha
add
outs
jbe
and
sub
inc
add
sbb
dec
push
pop
outs
jae
es
sub
inc
dec
push
pop
pop
arpl
jl
cmp
dec
and
ins
je
jl
sti
add
add
dec
dec
push
pop
popa
imul
das
cmp
push
js
sub
cmp
dec
dec
push
pop
pop
add
jbe
sub
cmp
jne
sub
or
push
aaa
dec
pusha
add
inc
push
pop
pushw
jns
jp
and
cmp
jnp
cdq
add
pusha
cmp
push
push
pop
pop
push
and
das
xor
ds
push
pop
mov
and
and
dec
call
and
cmp
lea
push
push
jbe
daa
inc
add
dec
pop
push
sub
dec
dec
push
add
int3
and
cmp
inc
push
add
stos
xor
and
ss
dec
dec
dec
push
gs
xor
pop
data16
and
pop
arpl
dec
push
push
test
sub
or
add
push
bound
inc
pop
and
aas
inc
out
add
and
rol
inc
dec
dec
push
add
push
les
addr16
and
cmp
ret
pop
imul
jns
mov
xor
jne
dec
add
adc
pop
imul
dec
push
add
mov
sub
xchg
sbb
iret
xor
inc
dec
xor
push
jno
pop
shl
cmp
add
or
ja
js
pop
add
es
mov
inc
add
fild
imul
xor
sub
popa
push
pop
int
and
xor
cmp
inc
or
push
pop
pop
imul
pushf
sbb
pop
imul
fwait
and
mov
daa
daa
das
push
out
aad
sar
xor
push
popa
jo
pusha
dec
mov
inc
dec
cwde
add
data16
xor
push
pop
push
add
call
and
loopne
jae
jae
inc
mov
push
adc
jb
jp
ror
pusha
(bad)
jno
jl
jg
pop
stos
sub
dec
je
mov
add
xor
cmp
xor
leave
out
pop
jb
sub
aas
dec
das
jno
ins
mov
dec
jge
(bad)
or
cs
loop
inc
int
dec
addr16
enter
pusha
jl
pop
nop
sub
push
popa
and
lods
ret
cmp
pop
pusha
xrelease
repnz
push
call
pop
outs
jp
sub
cmp
push
pop
arpl
and
daa
xor
rol
adc
aas
pop
pop
pop
mov
cmp
imul
ret
add
xor
cmp
dec
dec
push
popa
ins
fdiv
ret
and
sar
cmp
mov
xor
push
(bad)
sbb
mov
imul
(bad)
or
dec
bound
xor
push
inc
ins
pop
pusha
imul
das
xor
adc
movs
popa
mov
cs
gs
mov
add
pop
data16
sub
add
push
xchg
sbb
push
dec
pop
pop
mov
hlt
cs
ja
inc
pushf
inc
adc
add
and
dec
sbb
pop
imul
and
xor
xchg
ins
adc
sub
cmps
add
jl
inc
dec
int
cwde
push
and
pop
pushf
xor
addr16
xor
inc
sub
mov
fistp
xor
mov
jbe
aaa
dec
jno
scas
loopne
inc
push
mov
loope
jl
inc
inc
push
xchg
lods
pop
outs
mov
out
adc
add
dec
dec
clc
push
call
cmp
cmp
inc
dec
arpl
sub
or
pop
test
imul
push
pop
push
loopne
sub
sub
xor
mov
dec
sub
pop
xchg
inc
xor
outs
je
jp
loop
leave
gs
pop
aaa
int
repz
inc
aas
add
popa
or
fsubr
jo
add
inc
les
fs
jp
sub
and
push
mov
call
rcl
jbe
and
aas
inc
inc
xchg
adc
sub
mov
sub
pop
push
xor
push
push
xor
sub
es
sbb
xor
dec
push
add
push
dec
bound
push
sar
adc
and
dec
xchg
shr
xor
inc
sbb
hlt
mov
xchg
and
pop
movzx
xor
xor
or
inc
dec
push
outs
or
retf
push
push
xor
fnsave
ds
fidivr
inc
inc
icebp
push
rol
adc
sbb
inc
dec
dec
jo
rcl
or
jp
shl
rol
mov
push
add
daa
sub
sub
pop
arpl
arpl
inc
dec
or
jns
sub
adc
pop
popa
and
ret
inc
pop
sbb
pushf
hlt
jae
data16
sub
mov
icebp
sbb
int3
or
pop
pop
imul
push
ins
jae
jnp
cs
pusha
sbb
xchg
push
pusha
icebp
lea
cmp
xor
push
push
sub
cmp
inc
dec
push
mov
fdivr
test
dec
pusha
pop
sub
outs
jl
xor
cmp
jnp
pop
js
jmp
imul
(bad)
in
mov
arpl
outs
sbb
and
xchg
int
push
inc
add
arpl
popa
je
dec
popa
(bad)
pop
bound
mov
sbb
jecxz
add
xor
scas
gs
pop
mov
scas
mov
adc
test
imul
sub
dec
push
add
mov
xchg
clc
and
ror
js
outs
pop
ret
and
and
dec
icebp
(bad)
loope
sbb
xchg
out
push
sbb
push
imul
fsub
mov
fld
bound
das
clc
inc
or
push
fdivr
dec
js
dec
ret
fs
or
or
push
pop
addr16
inc
retf
mov
mov
and
jo
cmp
jmp
cwde
push
mov
inc
ds
shl
popa
pop
sub
aas
dec
add
inc
pusha
mov
lock
jbe
sub
adc
outs
loope
xchg
jno
pop
popa
loope
dec
mov
xchg
lods
push
or
jge
xchg
and
mov
dec
pop
out
ins
or
inc
pop
repnz
call
das
bound
cdq
aam
es
cmps
inc
pop
sub
adc
inc
out
mov
fs
mov
cdq
xchg
bound
pop
aam
outs
dec
mov
xchg
xchg
cmps
add
daa
sub
and
xor
je
das
les
pop
and
cmp
in
dec
push
xlat
xor
bound
sub
cmp
xchg
inc
scas
pop
arpl
xor
sub
and
mov
aam
mov
mov
es
mov
bound
and
pop
mov
cmp
aas
jae
mov
imul
cmp
jb
pop
cmp
test
das
ss
jnp
sbb
sbb
xchg
inc
jecxz
lods
jmp
xchg
dec
inc
arpl
jge
inc
mov
add
inc
mov
repz
and
retf
push
push
call
push
jb
push
and
pop
pop
dec
mov
jb
ins
sbb
sub
loopne
xchg
int
pop
or
jno
sub
sbb
ret
jo
shl
mov
add
ds
push
pop
data16
cdq
js
jl
and
fs
adc
and
dec
ds
and
int
adc
mov
ds
fcom
add
mov
xor
mov
xor
push
pusha
push
add
push
mov
in
mov
xlat
mov
fsub
or
jo
ins
xor
inc
push
mov
cmp
test
(bad)
xor
pop
shl
xchg
cdq
inc
test
movs
jge
shl
mov
popa
data16
cmp
sub
retf
xor
shr
push
push
or
add
dec
push
gs
and
mov
(bad)
outs
push
or
xor
cmp
dec
xchg
xor
in
out
pop
addr16
repnz
adc
push
pop
sub
inc
inc
add
nop
add
sub
xor
xor
adc
pop
ins
je
mov
mov
jne
ins
aad
mov
inc
adc
mov
outs
and
cmp
jle
xchg
ins
stos
arpl
fst
add
push
mov
jg
into
and
and
jb
dec
push
in
mov
xchg
aam
and
shr
mov
pop
int3
aad
cmc
dec
mov
leave
mov
push
outs
gs
sbb
push
call
jp
fnstenv
fadd
xor
cmps
dec
inc
jle
in
dec
cmp
stc
pop
mov
sub
mov
pop
push
retf
cmp
add
movs
push
lds
cld
and
stc
and
and
stos
pop
rcr
adc
cmp
adc
int
jb
gs
aam
xchg
push
imul
mov
and
jo
cmp
call
jecxz
jne
sub
sti
jns
out
jmp
shl
add
into
or
push
push
add
dec
jne
pusha
cmp
and
outs
ja
sub
dec
mov
data16
xor
pop
pusha
popa
addr16
jne
mov
and
add
and
push
pop
pusha
or
jo
jge
dec
dec
push
pop
bound
push
lods
or
inc
inc
dec
dec
push
push
and
and
ret
inc
ret
sbb
add
push
das
aaa
cmp
and
push
push
push
call
and
popa
pusha
ins
add
movnti
(bad)
clc
mov
xchg
stos
daa
and
and
add
dec
mov
xor
loopne
and
pushaw
addr16
or
push
xor
add
push
test
xor
ins
jb
sub
cmp
dec
push
push
push
pop
add
mov
dec
push
push
outs
jo
jnp
cmp
xor
aaa
or
push
push
xchg
inc
add
pop
arpl
pusha
cwde
add
cmp
push
pop
jp
xor
inc
inc
adc
lods
lock
inc
cmp
loop
mov
push
add
xor
ins
jae
sub
mov
mov
cdq
push
mov
ins
mov
pop
pusha
outs
jnp
sub
adc
add
jge
sub
inc
dec
pop
arpl
jns
iret
add
addr16
ret
es
push
lods
inc
dec
dec
pushw
mov
push
pop
in
dec
adc
jne
call
add
jnp
xor
aas
inc
dec
(bad)
or
push
cs
push
inc
inc
ins
sub
stos
test
rcl
fcom
fs
cs
push
push
pop
bound
and
pop
stos
lea
jae
sub
cmp
add
daa
daa
cmp
shl
inc
inc
dec
jns
ins
shl
inc
dec
add
sub
jnp
sub
gs
jge
xor
int3
ins
outs
hlt
push
sbb
ss
pop
mov
repz
pop
sbb
and
sub
inc
jno
fwait
bound
cld
mov
not
sbb
mov
inc
pop
nop
outs
je
mov
aad
jg
inc
push
xor
push
mov
sbb
push
pop
inc
mov
push
js
add
add
cs
ds
dec
pop
pop
or
add
jno
and
or
xor
cmp
push
sar
xor
iret
lock
popa
push
and
or
hlt
cmp
aas
push
pop
je
jge
and
leave
dec
enter
push
pop
sbb
xlat
jp
nop
aaa
rol
jae
mov
push
or
jne
and
sub
cmps
out
fmul
jge
and
push
adc
xor
push
inc
dec
mov
and
inc
loopne
adc
dec
push
pop
les
std
mov
jne
and
add
jb
inc
dec
add
lock
jb
enter
pop
ins
jp
xor
inc
xchg
sub
cmp
xor
and
push
je
outs
add
or
jae
sub
inc
dec
pop
adc
or
jo
bound
add
jge
outs
xchg
fiadd
and
and
or
sub
inc
push
cmp
pushf
dec
je
mov
add
cld
push
push
out
and
xor
pop
xor
or
cmp
dec
cmp
pop
arpl
(bad)
jbe
sub
xor
jne
and
xor
(bad)
fsub
pop
adc
shl
daa
inc
cmps
xor
sbb
inc
ins
inc
or
mov
cli
(bad)
adc
sub
stos
sub
jo
and
add
call
aad
cld
daa
jne
dec
jp
add
daa
sub
xor
dec
xor
outs
mov
ja
adc
jo
push
push
inc
push
pushf
(bad)
pop
(bad)
sahf
popa
push
xor
add
push
das
cmp
sar
es
mov
push
fild
add
xor
lea
cdq
or
fsubr
and
pop
pop
push
call
xchg
lock
push
push
cwde
cmp
das
ror
add
inc
rcl
data16
dec
pop
mov
xor
push
xchg
popa
and
arpl
lea
push
pop
jae
icebp
add
or
sub
cmp
push
mov
adc
jp
sbb
pop
xor
add
or
test
add
xchg
adc
mov
and
loopne
aam
mov
ror
imul
xor
dec
jno
sub
sub
add
mov
mov
jno
pusha
and
fld
cmp
and
push
mov
leave
push
push
pusha
cli
out
xchg
jo
dec
jecxz
cmp
pusha
xchg
push
xchg
sbb
xlat
test
cs
js
cmp
and
ret
popa
lock
adc
enter
push
(bad)
jae
shl
in
sbb
js
xor
and
out
sbb
jecxz
mov
adc
sbb
jecxz
jo
inc
icebp
mov
repnz
shl
inc
lock
mov
adc
jecxz
in
sub
loope
push
mov
adc
fadd
adc
mov
jo
ror
scas
sbb
add
xor
lock
push
(bad)
or
sbb
xchg
inc
sub
sub
loope
add
nop
or
push
out
inc
cmc
pop
dec
sbb
out
jo
sbb
call
pusha
push
aad
(bad)
or
ror
popa
loop
inc
push
push
(bad)
aas
mov
cdq
jo
jl
push
xor
leave
imul
push
and
gs
and
out
mov
mov
cld
ins
mov
out
nop
pop
data16
sbb
jno
add
adc
rol
jo
inc
int
int
vcmpps
pop
js
mov
ins
xor
pop
mov
cld
inc
ss
loop
shl
and
xor
jno
sbb
xor
xor
cld
ds
or
imul
xor
jmp
test
mov
retf
mov
in
mov
ret
icebp
jle
in
push
nop
mov
cmp
push
xchg
push
xchg
adc
sbb
xchg
inc
mov
mov
mov
idiv
jno
cmp
cmp
jno
jo
aaa
jae
push
icebp
push
pop
pop
mov
sbb
(bad)
scas
mov
jne
push
ret
ret
inc
jnp
mov
(bad)
jecxz
cdq
inc
call
in
mov
pushf
cmp
out
xor
jo
add
ret
loope
cmp
mov
xor
mov
test
push
mov
loopne
add
inc
daa
inc
xor
jne
push
jecxz
es
jb
mov
or
inc
fsub
sub
xchg
add
sbb
adc
arpl
inc
push
push
cmp
mov
push
inc
or
dec
add
pop
cs
out
cmp
push
jno
(bad)
pop
jl
and
and
jp
sub
das
push
push
pop
data16
cmp
adc
mov
pop
push
dec
add
add
dec
push
push
pop
imul
inc
dec
bound
xchg
push
xor
add
push
pop
push
ror
jl
xor
pop
shl
and
ss
mov
cmp
inc
xor
ret
fs
sub
adc
mov
xor
mov
imul
mov
addr16
fstp
es
add
or
lock
inc
dec
ins
jo
mov
inc
cwde
sbb
in
push
popa
popa
iret
push
call
and
retf
jle
stc
or
or
es
push
jne
js
add
dec
push
arpl
xor
addr16
inc
push
pop
cmp
xor
cmp
arpl
aaa
push
add
inc
pop
mov
jae
daa
loope
(bad)
add
or
push
pop
outs
js
fldenv
sub
shr
dec
scas
clc
or
sahf
sar
jo
jge
inc
sti
(bad)
lock
push
pop
dec
push
mov
sub
xor
pop
jo
dec
pop
ins
ja
and
dec
push
push
inc
mov
je
jne
aaa
inc
dec
push
cmps
jne
xor
inc
rcr
jge
xor
pop
fs
sbb
mov
sub
sub
pop
adc
jnp
out
jg
aas
push
add
fcomp
cmp
pop
adc
add
xor
dec
mov
jno
inc
pop
rcr
xor
ins
xor
inc
inc
inc
xchg
jnp
daa
test
cmp
sub
aas
dec
pop
jo
popf
popa
jno
sbb
pop
mov
push
call
cdq
sbb
test
and
inc
pusha
add
xor
push
sub
bound
sbb
jb
js
(bad)
sbb
movs
inc
arpl
sub
add
cmp
inc
push
pop
jno
or
inc
dec
push
test
ffree
gs
fist
add
push
push
or
es
cmp
or
adc
inc
push
test
ins
js
into
push
dec
jo
inc
dec
dec
enter
ins
jns
push
hlt
and
inc
jmp
jle
dec
pop
pop
clc
lds
xchg
xor
inc
shl
or
mov
ror
bound
inc
inc
inc
add
imul
xchg
ja
frstor
jmp
xor
or
pop
push
leave
adc
sub
sbb
pop
xor
xor
inc
ret
fwait
sbb
ins
sub
outs
sti
pop
xchg
mov
movs
popa
push
pop
mov
jp
scas
add
sbb
das
cmp
jo
mov
inc
inc
out
dec
popa
dec
mov
jno
or
push
pusha
push
ja
sub
push
push
bound
xchg
leave
aas
inc
dec
push
push
daa
je
out
dec
shr
or
cmp
and
dec
sahf
mov
int
pop
xor
fdiv
and
push
jbe
and
ss
shl
or
or
aaa
inc
imul
call
popa
add
or
fwait
fs
jns
xor
xor
movs
push
push
mov
xchg
dec
push
xchg
push
aam
call
gs
add
cdq
inc
mov
(bad)
bound
dec
xor
mov
pop
int
or
sbb
jnp
dec
int
and
repnz
push
sub
and
jnp
ins
or
cmp
push
(bad)
in
pop
(bad)
sbb
cmps
sbb
lods
imul
nop
imul
je
or
sbb
inc
sub
mov
imul
mov
and
lods
dec
int3
xchg
enter
mov
cmp
push
and
cdq
or
cmp
div
sbb
and
data16
ja
(bad)
shr
imul
popa
test
push
ret
xor
sbb
loopne
pop
xor
sub
fcom
sbb
sbb
in
and
pop
cmps
ins
push
mov
arpl
sbb
sub
mov
adc
dec
pop
and
addr16
inc
dec
or
add
bound
xor
enter
retf
jno
cmp
and
sub
gs
add
daa
mov
outs
jae
sbb
je
add
jbe
rcl
ret
pop
ret
je
popf
imul
inc
cmp
jge
dec
lock
pop
xchg
sbb
ror
imul
inc
mov
dec
sbb
add
hlt
int
xor
push
push
cmp
xor
xor
and
leave
pop
pusha
mul
mov
sub
into
mov
mov
jnp
sbb
push
les
call
ins
and
pop
ds
pop
jge
js
mov
cmp
jl
enter
inc
mov
shr
ror
js
das
stos
das
xchg
(bad)
jge
and
jl
xor
sub
xchg
xor
mov
lds
rol
std
push
xor
xor
add
or
inc
int3
pusha
ins
shl
push
rcr
js
js
xor
dec
ss
jnp
(bad)
mov
mov
and
mov
push
fs
xor
adc
loop
dec
adc
inc
push
sbb
add
inc
cmp
fiadd
fcom
inc
push
fadd
sbb
or
push
inc
dec
call
call
adc
setne
sub
dec
sahf
js
clc
xchg
push
mov
push
cmp
sub
dec
lods
inc
inc
sbb
and
jnp
rol
int3
dec
fiadd
ins
sbb
cmp
or
rcr
jne
sub
loop
pop
mov
mov
pop
sub
xchg
mov
movs
mov
and
xor
out
jmp
popa
xchg
call
icebp
inc
cmp
push
call
ret
cmp
bound
and
sbb
mov
inc
in
adc
mov
xchg
inc
dec
mov
(bad)
xor
mov
jg
push
mov
adc
xor
cli
pop
mov
daa
test
and
sahf
mov
ins
test
addr16
jno
ins
sbb
dec
dec
and
add
sbb
cmp
cmp
gs
cmp
ds
jl
repz
cmps
inc
mov
das
mov
loope
sbb
push
inc
xor
jmp
cmp
lock
inc
lods
les
mov
shr
cmp
nop
cmps
call
(bad)
xor
inc
mov
or
jnp
jmp
mov
dec
imul
dec
inc
xor
sbb
or
and
add
es
bound
bound
ret
pop
inc
xor
inc
outs
jb
inc
cmp
mov
adc
sbb
sub
inc
jne
into
call
popf
mov
jge
push
test
pop
sbb
xor
movs
push
int
in
rcl
fs
xor
iret
sub
shl
nop
daa
jecxz
dec
ja
outs
test
sub
repz
popa
inc
repz
sub
inc
or
mov
cmp
add
jbe
xor
inc
inc
dec
dec
add
adc
cwde
outs
or
jbe
loope
repz
mov
sub
adc
adc
(bad)
xor
cmp
or
push
inc
imul
cmps
js
daa
or
push
mov
sbb
pusha
call
inc
and
jo
sbb
je
stc
xchg
fcom
sbb
mov
and
xor
outs
and
retf
cmp
ror
dec
dec
dec
adc
pop
xor
and
pop
popa
ror
stos
icebp
dec
inc
popa
leave
inc
xchg
add
dec
rol
add
inc
pop
adc
imul
dec
inc
inc
mov
mov
aas
ins
ins
push
fwait
rcl
imul
pop
inc
pop
and
into
clc
inc
inc
mov
xor
mov
test
pop
jne
push
es
xor
push
jge
jbe
jb
sahf
jl
cwde
rcl
sbb
(bad)
fist
data16
sub
mov
je
pop
and
test
mov
or
pop
(bad)
mov
jno
push
enter
in
pop
adc
and
enter
sub
cmp
inc
or
xor
in
sbb
xor
ja
and
rol
pop
js
fimul
pop
or
(bad)
leave
scas
bound
xchg
ret
aas
dec
sub
lahf
jp
and
or
jmp
rcl
and
sbb
aaa
inc
adc
loope
outs
or
mov
jp
push
pop
arpl
and
and
xor
movs
jb
and
mov
inc
call
dec
sti
leave
or
jge
xor
xchg
and
sbb
int
push
or
push
aas
dec
pop
push
aad
pop
imul
pop
xor
(bad)
jne
outs
or
mov
pop
push
movs
lahf
push
fmul
and
and
dec
adc
xchg
add
inc
movs
and
sub
xchg
sbb
push
xlat
pusha
xor
(bad)
sub
cld
push
fimul
dec
ret
and
cmp
add
inc
inc
push
xor
mov
pop
arpl
jp
sub
daa
outs
je
adc
mov
mov
sbb
jns
out
out
sub
call
or
adc
jbe
adc
imul
cmps
loop
inc
pop
repnz
jo
add
push
mov
xchg
and
add
cmp
sbb
push
inc
dec
cmp
sbb
add
lds
jmp
push
les
shl
icebp
mov
dec
call
pop
scas
xor
xor
push
or
cmp
dec
shl
dec
jge
js
sub
repnz
jmp
inc
loopne
imul
jae
jp
es
xchg
mov
mov
push
push
mov
sub
add
jns
cmp
sbb
sub
pop
mov
inc
pushf
sub
dec
test
sbb
push
mov
cwde
ins
int3
cmp
inc
xchg
or
dec
pop
push
cmp
push
out
and
inc
add
push
cmps
fdivr
ror
inc
push
pop
push
mov
adc
sub
iret
push
arpl
fs
dec
jne
nop
scas
pop
fs
retf
and
cmp
adc
daa
sub
push
push
add
(bad)
xchg
pushf
pop
in
icebp
xor
inc
add
dec
push
imul
cmps
cmp
inc
call
nop
sub
arpl
and
pop
data16
jmp
xchg
pop
popa
cwde
push
pop
push
data16
or
bound
outs
xor
xor
jl
push
bound
xor
inc
out
mov
add
aaa
push
xor
inc
xor
sub
inc
mov
xchg
lds
adc
pop
mov
xor
push
sub
cli
dec
fiadd
mov
inc
push
sbb
and
mov
inc
popf
test
addr16
sub
outs
push
xchg
iret
xchg
imul
ror
sub
lds
lahf
or
dec
mov
lods
pop
sub
xchg
or
in
sub
in
xor
mov
add
xor
cmp
push
add
xchg
pusha
mov
sbb
mov
lahf
je
cwde
push
push
sbb
enter
loopne
cmp
daa
bound
inc
test
inc
into
jmp
pusha
imul
jl
cmp
js
repz
mov
setno
xor
int
sbb
and
ds
add
cmp
js
xor
pop
pop
gs
pushf
or
jne
inc
push
xchg
dec
mov
pop
cmps
test
sbb
aas
popa
enter
sub
pop
addr16
pop
cwde
mov
or
jg
mov
stos
inc
push
jp
cmps
jmp
and
adc
jge
arpl
jbe
push
call
or
cmp
test
mov
sub
dec
pop
add
push
xchg
xor
cmp
and
fimul
mov
mov
or
add
fs
cmp
mov
and
jb
inc
scas
mov
test
cmp
fs
cmp
mov
add
push
es
test
sub
pop
retf
jne
mov
adc
ins
lea
in
add
push
pop
cmp
pop
xchg
pop
mov
sbb
pop
data16
leave
pop
inc
movs
popf
mov
pop
adc
dec
adc
mov
xor
add
cmps
fwait
adc
ja
push
pushf
xchg
xchg
cs
xor
sub
sti
pop
mov
imul
loope
add
push
sub
add
dec
xor
in
push
sahf
and
xchg
mov
sub
ins
sub
ins
jge
xor
pusha
mov
or
sahf
xor
pop
pop
sahf
push
mov
sub
add
jl
pop
push
int
stos
mov
push
es
dec
or
cdq
inc
imul
sub
lods
(bad)
shr
bound
jp
or
pop
inc
pop
pop
fs
and
sar
mov
push
and
pop
cwde
test
pop
adc
stc
push
outs
jae
xor
cdq
into
fwait
or
add
jnp
mov
pushf
cmp
cmp
or
or
jb
xchg
sbb
fs
cmp
mov
rol
push
xor
imul
ret
inc
or
test
ins
jno
cmp
push
push
out
imul
sub
shr
sbb
dec
test
jnp
add
test
cdq
adc
nop
adc
dec
je
xor
mov
inc
jns
jno
push
cwde
rcr
push
ret
jl
mov
xchg
adc
test
arpl
xchg
pop
imul
leave
pusha
mov
push
pop
xor
jg
adc
in
mov
adc
arpl
sub
cmp
xor
mov
and
dec
clc
xchg
push
pop
jnp
inc
test
sub
push
lds
in
add
call
fadd
cmps
push
xor
mov
adc
dec
fcom
jl
adc
fiadd
aam
(bad)
ja
(bad)
push
or
fstp
jp
test
add
sub
inc
mov
jecxz
das
fwait
in
push
dec
push
lods
ja
cmps
or
xor
mov
in
xchg
outs
xchg
jg
lahf
retf
imul
cwde
repz
rcl
out
fdiv
push
or
xor
dec
and
sbb
sbb
fcom
cwde
outs
push
pop
fnstenv
mov
in
xchg
gs
es
in
fs
jbe
retf
sub
or
xor
xchg
or
sbb
call
cmps
or
(bad)
retf
pop
gs
mov
sbb
cmp
mov
daa
ror
sbb
jbe
adc
cmps
inc
pop
test
or
add
ret
ret
ins
mov
inc
inc
ret
push
dec
fst
mov
push
sbb
mov
cs
ss
mov
jae
aaa
(bad)
sub
daa
int3
sub
ins
add
xor
or
sbb
retf
sbb
inc
dec
jb
jle
or
cmp
cmp
add
imul
cmp
fs
push
fsubr
out
xor
push
pop
push
test
pop
push
push
jge
test
inc
and
adc
push
popa
je
mov
aad
jl
sub
call
dec
sub
adc
inc
xchg
inc
(bad)
or
xor
das
push
lock
or
pusha
xchg
addr16
in
ret
or
call
sbb
pop
add
and
xor
push
push
add
dec
push
add
out
push
addr16
cmp
fstp
jo
bound
(bad)
pusha
sub
pop
outs
test
ss
push
pop
xchg
push
mov
mov
test
inc
fdiv
out
mov
and
cmps
inc
aam
test
pusha
movs
int
ja
enter
pop
dec
ja
adc
test
imul
out
xchg
mov
int3
sbb
sub
out
mov
fimul
icebp
scas
cmp
add
aaa
inc
aam
fwait
aaa
mov
pop
leave
mov
outs
pop
adc
inc
push
ret
pop
je
jnp
loop
add
cmp
pop
and
fld
lods
or
loopne
add
push
test
xchg
mov
(bad)
je
xchg
xor
sbb
mov
push
lock
cmp
or
jb
xor
xor
pushf
inc
jle
lods
inc
cli
js
addr16
mov
pop
fadd
out
push
or
ins
cld
loop
aam
cmp
fcmove
jnp
aas
(bad)
sti
cmp
push
mov
jo
repz
sti
pusha
cmps
cmp
icebp
loope
idiv
mov
jo
pop
add
dec
sub
mov
xchg
ret
dec
mov
jecxz
mov
sar
adc
sbb
retf
push
add
pop
(bad)
ins
int3
shl
xor
cmp
jmp
cmp
jne
shl
cmp
call
mov
jle
jle
mov
ret
bound
jae
jns
pusha
xchg
mov
pop
out
push
popf
push
popa
stc
push
mov
xor
adc
pushf
dec
xlat
add
jle
adc
jnp
stos
in
inc
ds
fimul
mov
aam
push
pop
xor
mov
and
in
add
push
dec
stc
ret
jae
test
and
sbb
cmp
out
mov
push
sub
or
push
xor
call
leave
jmp
and
add
popf
or
test
ret
outs
jo
mov
leave
jb
stos
jbe
inc
nop
mov
fnstsw
mov
cmp
das
cmp
int
cmp
sar
je
cmc
mov
push
pop
adc
pop
ins
inc
pop
xchg
xor
mov
lea
mov
mov
add
inc
imul
test
fstp
pop
xchg
sbb
mov
sti
daa
shr
sbb
pop
xchg
push
(bad)
out
mov
cmp
lods
jge
jge
xchg
dec
jo
adc
ins
popa
jo
jae
je
mov
cmp
popa
js
outs
jb
inc
ins
inc
test
cli
imul
mov
js
jne
sbb
xchg
or
imul
jae
jp
ds
jb
sbb
and
pop
addr16
je
or
dec
push
push
pop
ins
cmp
ret
cmp
and
xchg
jge
push
mov
or
pop
outs
push
lds
xchg
push
pop
ins
jb
jge
ss
mov
dec
pop
pop
bound
jnp
xor
cmp
out
mov
mov
jno
jns
or
sar
js
in
xchg
adc
push
dec
mov
dec
push
and
jb
and
sub
aas
aas
inc
dec
push
xchg
jo
jae
sahf
add
cmp
arpl
and
lahf
add
imul
aad
xor
pusha
jno
adc
xor
mov
add
inc
dec
pop
cmp
dec
mov
shr
lock
and
pop
popa
outs
jns
xor
dec
dec
dec
push
push
inc
and
cmp
xchg
jp
(bad)
xor
dec
sbb
sub
sbb
pop
popa
jne
adc
and
push
std
mov
push
and
dec
xchg
and
mov
and
sub
inc
inc
fadd
addr16
jbe
add
cmp
fs
cs
cmp
pop
or
sub
mov
add
js
sub
xor
arpl
push
sbb
cmp
dec
movs
aad
cmp
je
jns
and
inc
add
bound
xor
inc
lock
xchg
or
loop
imul
push
or
fs
jne
and
pop
test
fs
jmp
sub
dec
dec
jb
fwait
push
pop
xor
mov
bound
xor
out
pushf
push
sub
cmp
outs
jae
jl
pop
popa
pop
pop
(bad)
mov
and
xchg
xchg
add
outs
ja
cmp
add
pusha
imul
repz
inc
push
push
and
pop
inc
mov
push
adc
dec
push
push
pop
bound
and
xor
outs
es
sub
jo
iret
sbb
pop
push
push
add
test
push
dec
in
and
mov
and
out
add
xor
cmp
ds
vmovss
adc
addr16
pop
test
mov
cmp
inc
inc
sub
imul
fwait
sub
arpl
push
enter
cmc
cwde
popa
push
pushf
mov
or
sub
and
cs
inc
out
outs
popf
dec
in
cmps
sub
cmp
or
fs
ret
inc
and
jbe
ins
jge
mov
sbb
xchg
nop
movs
sbb
inc
and
inc
inc
and
loopne
jno
pop
mov
mov
inc
out
push
mov
xchg
inc
sub
ss
xchg
and
sbb
sub
out
call
xor
add
ret
es
mov
xchg
ja
es
mov
gs
int3
or
dec
fild
inc
test
push
inc
mov
mov
jecxz
lock
addr16
or
pop
push
xchg
mov
mov
xor
push
cwde
push
jae
dec
push
imul
std
and
pop
sub
xor
mov
movs
dec
ret
std
in
arpl
iret
inc
xor
add
push
jne
pushf
test
pop
dec
fbld
jne
dec
fiadd
xchg
xor
cmp
mov
pushf
and
adc
add
daa
pop
fs
sbb
inc
pusha
inc
mov
mov
inc
mov
sub
xor
aaa
push
sbb
std
aad
push
das
xor
push
jae
es
dec
movs
adc
mov
cmp
dec
rol
xchg
xor
pusha
ins
inc
xor
pop
movs
rcr
into
and
mov
push
sbb
sbb
ds
and
push
pop
lods
add
pop
mul
adc
pusha
pusha
add
and
out
xchg
mov
loop
stc
xor
sbb
pop
push
das
in
mov
sub
cmp
push
adc
xor
push
pop
shl
in
fiadd
inc
push
jle
daa
lds
stc
nop
cmp
sub
movs
shl
or
ins
enter
and
in
jbe
xor
mov
push
sbb
push
inc
or
cs
dec
push
mov
push
and
int3
mov
sub
data16
leave
pop
lea
cmp
xchg
in
inc
pop
mov
(bad)
push
add
and
push
jmp
push
rcr
aaa
push
dec
(bad)
cmp
pop
sub
pusha
psraw
jl
sub
add
mov
data16
cld
fwait
imul
xchg
sahf
push
inc
mov
cmp
fild
fst
outs
jge
hlt
mov
inc
sbb
or
hlt
bound
push
or
ins
adc
push
jno
xchg
arpl
mov
mov
sbb
and
add
xor
adc
xor
and
mov
adc
jne
test
or
adc
sub
add
addr16
jle
int
jns
xor
dec
push
cmovo
jne
or
ja
mov
scas
inc
dec
cmp
dec
and
push
test
movs
fwait
lds
adc
ret
data16
dec
js
popaw
and
push
dec
rol
cwde
retf
jbe
sub
add
mov
push
xor
jecxz
mov
and
pop
adc
je
pop
mov
jns
cmp
lods
push
imul
mov
inc
fld
dec
jno
dec
and
cmp
pusha
mov
sbb
leave
dec
pop
cdq
fcom
gs
(bad)
and
adc
in
and
xchg
je
je
mov
es
pusha
dec
or
and
push
push
bound
cmc
dec
jl
test
push
enter
add
cmp
mov
xlat
or
jp
cs
call
xor
movs
pop
dec
ret
or
je
and
sub
test
retf
scas
jno
add
or
sbb
aaa
inc
cwde
or
nop
inc
xor
pop
sub
mov
pop
pop
imul
add
jp
(bad)
inc
inc
push
iret
inc
ins
pop
cli
mov
in
pop
dec
into
cmp
imul
aas
rcl
sbb
scas
enter
sub
ud1
inc
int3
inc
or
pop
ins
cs
dec
jae
push
adc
cmps
inc
cmps
ins
cmp
adc
xor
adc
xor
pop
jge
pop
add
repz
sub
jmp
movs
push
and
inc
dec
sbb
mov
shl
adc
push
call
rol
test
mov
inc
ins
inc
jo
outs
popf
add
inc
out
and
cdq
cmps
jl
outs
mov
pop
iret
or
mov
mov
mov
test
and
and
(bad)
inc
xchg
mov
(bad)
xchg
std
add
jg
in
push
adc
std
stos
xchg
imul
mov
jmp
xor
cmps
sub
inc
and
and
xchg
lock
bound
mov
adc
cmp
arpl
cmp
sbb
or
jb
pop
scas
mov
xchg
ss
jb
cmp
xor
out
lahf
add
sub
push
lea
jmp
dec
fs
sbb
dec
add
fbstp
mov
jno
jns
and
jno
(bad)
das
jbe
cmp
ss
arpl
gs
cmp
pop
push
and
repnz
pop
or
adc
sub
inc
je
aas
mov
sub
mov
outs
fisubr
jbe
inc
mov
aas
and
and
adc
lds
mov
push
cmps
push
or
movs
outs
and
dec
dec
repnz
sub
pop
pop
addr16
and
sub
push
push
cmp
jl
fs
les
and
loopne
jge
ins
sub
dec
jae
scas
out
dec
push
add
push
jecxz
push
ins
fstp
push
jmp
add
sbb
jnp
inc
outs
je
sub
pop
repnz
mov
xchg
add
dec
sub
rcl
dec
dec
jno
dec
ss
jmp
pop
jecxz
imul
jo
dec
and
cdq
pop
pop
ins
cmps
and
lods
xchg
lods
and
in
shl
das
test
and
stc
xor
pop
inc
pop
and
and
mov
mov
test
mov
mov
js
add
jp
test
dec
add
pop
push
jnp
push
pop
jb
fisubr
add
push
mov
nop
inc
(bad)
aad
inc
mov
ret
inc
mov
bound
pop
ret
rol
dec
inc
dec
pop
cmps
fldcw
iret
pushf
xchg
sub
jnp
jne
sub
cmp
shr
dec
inc
test
sub
inc
loopne
shr
aaa
imul
fcmove
mov
movs
pop
movs
pop
movs
jmp
je
adc
enter
arpl
or
adc
sub
jge
adc
cmp
and
push
ds
ja
into
mov
xor
ret
outs
js
stos
inc
imul
dec
mov
pop
mov
dec
inc
inc
sbb
xchg
les
stos
in
add
dec
dec
mov
sbb
js
(bad)
fcmovb
and
add
daa
cwde
icebp
sub
mov
add
int3
(bad)
js
data16
or
dec
cmp
sbb
sub
inc
mov
adc
pop
mov
mov
dec
mov
shl
popf
fst
xor
mov
addr16
inc
push
push
push
jae
xor
sbb
or
adc
loopne
gs
addr16
clc
daa
daa
(bad)
and
mov
sbb
cli
inc
ins
add
bound
jnp
pop
jnp
ins
xchg
sti
dec
inc
loopne
pop
cmps
push
pop
in
clc
dec
das
push
aas
mov
ror
into
inc
adc
push
dec
cmp
or
adc
bound
in
fisub
push
pop
adc
mov
rcl
mov
cmp
mov
and
les
cdq
jp
and
cmp
mov
pop
jno
mov
sub
push
popa
cmp
jns
ss
nop
and
enter
mov
and
loopne
loope
pusha
bound
iret
adc
mov
fimul
dec
or
jo
daa
inc
add
cmp
inc
leave
cs
mov
inc
popa
push
add
add
cmp
sbb
push
retf
mov
mov
xor
test
jb
and
add
inc
movs
mov
inc
push
cs
call
test
inc
inc
push
out
push
mov
mov
fsubr
xor
and
pop
jmp
outs
in
fild
push
imul
push
rcl
(bad)
les
push
push
movs
mov
pop
popa
push
retf
inc
test
pop
cmp
mov
cmp
arpl
pusha
jbe
leave
or
test
pop
imul
or
mov
mov
sub
add
sbb
sub
or
pop
in
push
pop
bound
xchg
hlt
lds
xchg
fisub
push
out
nop
bound
inc
xor
push
sub
pop
dec
test
or
lahf
rcl
mov
out
push
mov
and
dec
inc
xor
push
cmp
xchg
adc
stc
or
pop
push
and
sbb
cmp
fs
lock
sub
hlt
fsubr
mov
call
push
(bad)
lds
nop
test
cmp
jmp
push
sub
push
test
and
cmc
sub
in
and
add
cdq
stos
test
nop
xchg
xchg
aaa
jmp
ss
mov
sub
test
xor
push
adc
imul
cwde
jne
add
js
gs
sbb
ins
outs
(bad)
loope
mov
xor
shr
test
push
hlt
stos
mul
das
dec
adc
inc
pop
imul
ins
cmps
add
ins
sub
aad
jb
push
inc
pop
ds
and
cmp
and
cs
test
inc
xor
nop
cmp
add
pusha
push
and
xor
sbb
sbb
sbb
xor
lods
xchg
xchg
jl
dec
sub
enter
in
pop
inc
mov
bound
mov
dec
test
xchg
cmp
imul
jecxz
mov
pop
ss
add
arpl
pop
retf
pusha
or
ins
pusha
mov
loope
xor
or
cmp
adc
loopne
jl
inc
and
sbb
ret
cmp
inc
(bad)
aaa
mov
pop
jl
enter
sbb
and
movs
in
mov
jge
sbb
dec
call
xor
xor
xchg
bound
dec
fwait
adc
mov
dec
pop
dec
jle
sub
adc
push
cmc
fstp
scas
mov
mov
outs
mov
sub
cmp
int3
sbb
inc
xor
push
pop
push
or
push
imul
aaa
inc
dec
fidivr
test
jmp
lock
push
jb
adc
xchg
sub
xor
jge
sub
add
into
adc
push
add
lea
out
jl
cmp
pop
mov
dec
out
pop
push
mov
ret
pop
das
sub
cld
fbstp
pop
aam
mov
mov
loopne
dec
cmp
pop
pushf
jg
sar
loope
sub
jp
sbb
pusha
rcl
test
pop
cmp
loope
and
imul
nop
fcom
adc
mov
ror
add
and
pop
jnp
push
push
je
dec
push
pop
mov
adc
retf
aas
inc
xchg
xor
push
adc
inc
loop
mov
(bad)
pop
xor
dec
arpl
and
inc
cld
inc
shl
sub
or
ins
inc
mov
xor
or
call
test
adc
dec
call
jns
scas
call
daa
add
repz
xor
call
jg
mov
out
lea
mov
sub
pusha
pusha
imul
sub
push
and
cwde
add
addr16
fwait
sub
sub
cmp
loope
mov
ja
pop
js
add
and
cmps
xchg
(bad)
cmp
push
or
sub
or
inc
les
xchg
jae
pop
push
push
pop
inc
fwait
sub
xor
xor
xchg
push
or
pop
test
movnti
xlat
mov
das
pushf
mov
loopne
dec
retf
mov
es
call
hlt
and
and
call
ja
and
cmp
sub
pop
shr
jbe
pop
jg
lods
xchg
push
pushf
mov
or
xchg
xor
pusha
das
out
and
dec
imul
push
shl
inc
mov
js
or
add
jb
mov
dec
mov
mov
add
mov
pop
mov
pop
jmp
sbb
cwde
xor
and
inc
lock
imul
outs
ss
ins
inc
ins
jmp
lds
repz
cwde
cli
(bad)
push
test
sahf
loope
movs
inc
inc
mov
inc
cwde
inc
mov
mov
mov
mov
dec
xchg
add
mov
jae
xor
adc
ss
jp
fild
xor
adc
add
ds
loopne
sub
movs
fs
fadd
repz
sar
sub
cmp
mov
ds
mov
popf
icebp
and
push
js
loop
and
xchg
dec
dec
dec
add
scas
adc
mov
sbb
and
in
sub
inc
dec
push
add
mov
push
and
and
mov
adc
push
sbb
aaa
adc
push
mov
lea
fild
fbld
push
and
ins
ror
aas
aam
adc
inc
sbb
dec
xchg
bound
test
mov
jb
les
or
stc
cmps
ret
push
aas
inc
mov
jge
add
and
cmp
dec
dec
sbb
push
pop
addr16
daa
(bad)
push
dec
jne
sub
or
repz
adc
sub
mov
data16
sub
call
lods
xchg
jmp
data16
dec
dec
rcl
or
inc
clc
xchg
int3
jbe
add
loop
cmp
dec
sahf
loope
jo
inc
jmp
sbb
push
add
sub
adc
mov
push
jg
push
gs
add
push
data16
sub
pop
(bad)
icebp
cld
jecxz
sbb
xchg
jmp
scas
outs
repnz
rcl
cmp
sbb
xchg
mov
push
jg
push
mov
mov
mov
push
add
push
clc
pop
xor
sbb
fadd
and
and
ret
stos
cwde
ins
and
cmps
popa
ss
inc
dec
dec
push
and
and
popa
sub
wbinvd
ja
aaa
and
pop
mov
pop
and
cmps
rcr
mov
dec
mov
sub
idiv
cdq
stos
in
pop
sub
dec
adc
pop
nop
or
fst
push
inc
aas
mov
jp
addr16
push
test
push
push
dec
push
mov
mov
pusha
rol
stos
add
nop
jno
int3
ds
jo
inc
inc
mov
shl
addr16
and
xor
push
pop
and
rcl
mov
bound
dec
and
jge
xor
adc
add
jbe
div
or
cmp
repnz
dec
jp
jns
or
cmp
mov
das
into
sti
push
dec
mov
push
push
xor
arpl
imul
aas
mov
fld
bound
jbe
add
and
stos
add
dec
xor
loope
push
std
add
dec
imul
mov
pop
lock
sub
sub
xor
movs
movs
jno
nop
inc
xor
fs
loopne
gs
jno
xchg
mov
(bad)
mov
xchg
cmp
daa
adc
mov
and
and
pop
fdivr
jl
bound
lock
dec
ss
arpl
pop
or
(bad)
mov
addr16
pop
and
test
int3
fisttp
ins
pop
jo
inc
shl
inc
dec
jne
or
push
pusha
xchg
pop
nop
jge
addr16
inc
sub
inc
pop
movs
dec
sbb
add
mov
fs
mov
and
je
fs
shl
retf
pusha
mov
in
inc
jo
es
dec
lds
and
call
sahf
rcl
cmp
pushf
sub
cmp
sbb
scas
imul
and
add
push
arpl
mov
cmp
test
dec
mov
retf
mov
push
jecxz
pusha
imul
mov
and
dec
lahf
push
or
enter
ds
mov
test
jnp
gs
adc
xor
sbb
sub
pop
inc
dec
mov
push
movs
xchg
xchg
jl
mov
sbb
jno
ins
mov
rcl
xor
pop
cdq
icebp
pop
and
outs
jmp
adc
pusha
arpl
pusha
call
sub
sbb
test
push
int3
inc
adc
adc
pop
pushf
mov
push
sub
push
das
shl
cmp
push
and
and
cmp
pop
fs
push
bound
or
fst
cmc
repnz
mov
inc
push
mov
dec
mov
and
mov
shr
es
outs
dec
pop
retf
push
adc
add
cmp
ins
jne
popf
les
adc
out
leave
dec
dec
test
push
push
mov
je
jb
je
push
outs
and
je
es
xchg
ins
xchg
les
fst
mov
fwait
cmp
inc
addr16
push
adc
push
cmps
pop
outs
jne
inc
mov
adc
ss
lods
cmps
adc
pushf
or
and
cs
or
inc
test
cmp
into
test
or
outs
daa
push
movs
xor
call
add
rcr
adc
int
inc
adc
pop
arpl
pop
int
out
ja
ret
cmp
dec
push
dec
sar
xor
jmp
xor
sub
pop
pop
dec
mov
inc
ficomp
stos
add
push
lea
jo
data16
and
sub
std
popf
inc
push
popf
enter
sbb
push
pop
test
jp
lds
adc
out
xor
and
mov
adc
pop
jns
(bad)
dec
pop
ret
and
movs
rol
push
push
pop
cmps
je
jl
push
and
mov
xchg
addr16
mov
inc
sbb
in
aas
arpl
inc
dec
loope
adc
add
rol
dec
pusha
push
(bad)
cmc
dec
and
mov
push
stos
(bad)
(bad)
adc
fst
xchg
loop
sub
add
mov
mov
cdq
xor
mov
pop
mov
call
push
inc
add
dec
cmp
jnp
aaa
enter
cmp
cmp
das
inc
test
ss
call
sbb
inc
in
or
pop
pop
outs
test
je
das
mov
adc
pop
push
test
loop
aaa
and
inc
pop
dec
pop
arpl
(bad)
adc
dec
and
pop
push
mov
add
aam
gs
add
ja
dec
mov
adc
js
ret
pop
inc
push
je
jb
jno
sbb
pop
pusha
test
jne
les
lods
jmp
dec
xchg
fs
mov
push
adc
cmps
and
leave
inc
inc
mov
xor
push
pop
add
sub
inc
mov
push
cs
jbe
and
fwait
pop
pop
inc
mov
inc
rol
jnp
adc
jp
and
inc
test
dec
outs
les
xlat
sub
mov
pop
stos
inc
push
mov
into
lock
jle
sbb
cmp
sbb
push
popa
jo
es
xor
xchg
and
adc
mov
inc
dec
repnz
jmp
adc
test
and
loopne
gs
dec
cmps
xor
cld
sub
push
push
xchg
or
(bad)
mov
inc
arpl
mov
xor
jmp
pop
cmp
jg
add
inc
inc
daa
jmp
xchg
das
test
xchg
mov
rcr
jbe
into
int3
cmp
enter
inc
pop
sbb
xor
cld
and
mov
out
mov
das
jns
jno
mov
in
(bad)
ins
ss
call
les
pop
outs
ja
xchg
cmp
dec
xor
(bad)
mov
push
or
ins
je
mov
cmp
loop
jl
mov
jge
dec
add
pop
arpl
jns
mov
shl
xor
rcl
pop
mov
or
mov
mov
js
jp
cmp
pop
aas
sub
sub
mov
call
sub
sub
push
imul
mov
adc
dec
icebp
data16
add
sbb
ins
je
movs
jmp
in
mov
sub
inc
dec
cmp
popa
adc
cmp
cli
inc
out
and
push
add
pop
sub
push
mov
fwait
adc
xchg
xchg
clc
and
pusha
xor
fist
mov
xchg
jmp
sub
xor
inc
adc
ins
sar
(bad)
cmp
xchg
leave
xlat
arpl
mov
jo
sbb
and
xchg
mov
cs
sbb
inc
inc
inc
xchg
and
xor
pop
adc
in
nop
lock
inc
dec
push
pop
jge
inc
ins
jge
scas
and
pusha
mov
outs
dec
jbe
dec
cmp
mov
and
js
fnstenv
jge
gs
or
fnstcw
jb
push
sub
ds
les
sar
int
inc
mov
test
push
mov
xchg
pusha
and
mov
and
imul
jne
dec
movs
push
cmp
xor
sbb
mov
imul
shl
sub
xchg
adc
push
dec
push
mov
inc
aaa
xor
and
popa
or
pop
or
(bad)
sub
pop
cdq
xlat
call
pusha
mov
dec
ins
inc
sbb
mov
imul
out
and
and
mov
push
popa
addr16
lods
xchg
std
ror
xor
or
push
push
gs
pop
shl
sbb
mov
je
lods
xchg
ins
jne
mov
adc
adc
rcl
addr16
addr16
mov
rcl
jno
xchg
cdq
imul
(bad)
test
mov
add
xchg
mov
mov
push
lock
sub
mov
mov
and
sub
(bad)
fisubr
in
adc
es
in
xor
push
loop
cmp
or
retf
add
push
push
sub
adc
test
stc
adc
xchg
sub
popf
popa
fidivr
pop
popa
lahf
jmp
leave
xchg
shl
and
xor
lahf
pop
aas
mov
lods
es
daa
in
pop
or
mov
scas
jns
movs
or
push
push
cmp
dec
cdq
imul
sub
jne
or
cmp
mov
outs
rcl
cmps
dec
push
pusha
push
lea
leave
cmp
aaa
jno
cmc
pusha
xchg
movs
cwde
xchg
add
add
bound
dec
xor
and
int3
sub
xchg
add
pop
cmps
mov
xor
dec
and
or
jno
shr
xchg
ins
mov
inc
mov
ficom
xor
sub
push
rol
sbb
mov
and
fisub
repnz
push
inc
sbb
out
xor
pop
pop
stos
inc
bound
xor
inc
imul
mov
adc
(bad)
dec
xor
cdq
push
mov
push
cmp
mov
inc
int
pop
sbb
rcl
cwde
or
ret
inc
pop
fidivr
xchg
cmps
(bad)
stos
(bad)
retf
arpl
push
mov
and
mov
sub
call
les
adc
sub
sub
inc
ret
loopne
rcr
xchg
pop
fstp
test
test
movs
hlt
mov
xchg
addr16
jg
out
or
adc
call
add
fs
push
pop
sub
fiadd
je
js
push
and
jle
repnz
push
inc
push
add
(bad)
icebp
je
sub
outs
std
xchg
scas
add
pop
adc
dec
sub
hlt
dec
dec
pop
jb
mov
outs
pushf
pop
ja
pop
addr16
imul
jae
or
test
fisub
pop
inc
and
cwde
push
inc
cmps
mov
lods
movs
mov
icebp
or
ret
sub
push
fs
dec
loope
mov
jae
xchg
xor
loopne
dec
mov
and
stos
(bad)
pushf
test
popa
ins
xchg
mov
retf
sub
mov
jp
mov
xchg
sub
dec
dec
pop
jns
test
push
inc
adc
mov
daa
sub
movs
js
push
sbb
and
cmp
inc
and
inc
cmp
inc
dec
cs
les
push
test
cmp
inc
push
(bad)
data16
sub
inc
gs
sub
inc
sub
das
cmc
push
ins
les
daa
enter
inc
sbb
sub
xor
int3
jg
pusha
inc
pop
jl
xchg
into
jnp
sbb
ins
add
push
dec
rcr
xor
jecxz
out
dec
inc
adc
les
sub
out
push
xor
adc
fimul
shr
and
or
xor
push
pop
add
mov
jnp
inc
inc
push
sub
cmp
or
ins
fisttp
arpl
in
outs
xor
(bad)
sbb
test
es
mov
out
ret
cmp
shl
bound
sbb
xor
xor
and
inc
xchg
pushw
or
adc
jns
or
(bad)
or
and
sbb
push
rcl
inc
add
xor
or
and
leave
je
cwde
xor
xor
cmp
xor
xchg
loope
inc
sahf
mov
cmps
push
sbb
dec
and
shl
adc
popf
popa
ins
ss
mov
data16
xor
sar
dec
mov
pop
rol
xor
push
mov
icebp
dec
jb
or
xor
push
add
ret
and
push
adc
or
mov
mov
cmp
xchg
lds
ret
sub
scas
jns
cmp
fwait
xor
mov
xchg
xor
push
xchg
pop
mov
or
jecxz
inc
sbb
xlat
call
mov
add
call
mov
xor
and
dec
bound
ins
jecxz
cmp
xchg
in
dec
ins
inc
sti
jmp
xchg
imul
push
cmc
dec
loopne
dec
sbb
and
pop
add
jno
aaa
inc
inc
cmp
inc
push
(bad)
jb
dec
inc
adc
shl
push
lods
sub
dec
gs
jmp
call
and
leave
push
add
sar
inc
fnstsw
inc
add
push
out
xchg
push
pop
test
pop
sub
xchg
(bad)
and
xor
or
ins
fild
and
adc
rcl
cld
jb
xor
or
sub
cmps
ja
add
sbb
retf
and
or
cmp
jns
mov
mov
sub
pop
ds
dec
xchg
add
jnp
ss
xor
enter
das
jmp
test
push
xor
and
mov
inc
push
add
xor
repnz
add
or
xor
add
xchg
add
xchg
inc
popa
pop
jb
xor
jae
test
pop
or
jo
push
gs
les
sbb
cmp
arpl
xchg
adc
cmp
pop
inc
in
adc
inc
loop
addr16
adc
mov
jns
or
push
div
aam
loopne
jnp
cmp
jae
xor
rcl
cmp
cmp
mov
and
sar
sbb
cmp
mov
inc
xchg
push
adc
mov
pop
xchg
scas
pusha
or
mov
shr
test
mov
pop
jmp
aas
test
mov
mov
loope
sub
cs
add
scas
aam
xor
mov
ins
inc
bound
jnp
ss
add
dec
aas
mov
xchg
push
add
pop
cs
inc
dec
cmp
mov
xor
sub
jmp
jnp
mov
jne
out
inc
pop
fidivr
scas
js
push
movs
cwde
jne
sub
lds
rcl
dec
das
ficomp
sub
xor
stos
ins
(bad)
or
sub
push
mov
jmp
jmp
xor
retf
popf
jno
xlat
pop
cmps
popa
mov
outs
add
into
xchg
cld
mov
dec
push
scas
fbstp
push
xor
pop
not
dec
out
aad
sub
stos
mov
dec
test
jne
imul
movs
push
aad
imul
pop
cmc
sub
pop
jg
pminub
push
sar
mov
dec
pop
shl
sub
sub
popa
bound
js
and
jb
or
sub
push
rcr
inc
outs
add
sub
push
int
add
and
daa
and
mov
and
stos
test
pop
or
cmp
das
xor
call
ja
dec
push
push
cld
inc
or
adc
pop
gs
ja
sub
mov
dec
push
inc
push
push
pop
dec
add
add
mov
dec
outs
jnp
inc
das
test
nop
inc
or
push
popf
sbb
nop
push
sahf
je
dec
add
mov
cs
adc
jno
shl
inc
pop
cmp
sub
movs
lahf
daa
enter
sbb
fstp
shl
mov
cwde
add
sub
movs
jo
pop
sub
aam
push
pop
inc
cdq
inc
xchg
outs
pop
xchg
and
and
popa
les
inc
outs
jae
daa
and
inc
inc
mov
push
inc
test
movs
hlt
xchg
mov
jns
fs
data16
test
inc
dec
inc
sbb
aaa
popa
jnp
or
ds
xor
xchg
jb
push
call
arpl
int
lods
cs
xor
dec
mov
sti
inc
and
stos
mov
std
xor
adc
jb
test
and
or
sub
or
inc
cwde
mov
es
push
dec
inc
add
arpl
mov
aas
adc
dec
nop
mov
or
fild
test
adc
mov
cld
push
pop
add
movs
fs
cmp
jae
push
pop
test
imul
cmps
push
ins
cwde
mov
mov
dec
push
bound
cwde
mov
sti
and
push
daa
bound
fs
sub
nop
pop
repz
jnp
sub
nop
xor
jno
xchg
and
push
pop
push
and
mov
addr16
cmp
inc
sbb
push
fs
push
sub
pop
shl
es
adc
push
xlat
sub
xor
inc
push
pop
pop
mov
imul
add
rcl
xor
test
addr16
and
out
xor
cmp
push
mov
test
inc
sbb
pop
outs
ja
inc
inc
cs
fs
dec
ret
push
push
je
adc
mov
outs
loopne
clc
sub
xor
dec
sbb
ins
xor
rcl
dec
popf
sub
movs
aad
inc
dec
lods
inc
sub
jmp
and
or
das
aaa
inc
inc
call
and
or
mov
sub
imul
mov
scas
arpl
and
add
sbb
call
push
and
and
inc
and
cwde
xchg
jge
and
xor
and
pop
imul
aas
inc
cmp
push
xchg
aaa
scas
pop
pushf
fs
mov
pop
test
inc
adc
cmp
lock
inc
out
xor
lea
adc
or
jo
(bad)
iret
push
dec
pop
gs
mov
es
dec
arpl
cmp
test
add
dec
movs
push
jnp
fs
outs
adc
cmp
sti
test
xchg
imul
mov
gs
test
sub
or
sbb
pop
and
cmp
in
dec
and
clc
inc
les
lods
aas
or
les
ins
jnp
aaa
les
dec
jge
fisttp
mov
(bad)
sar
nop
cld
add
loopne
push
jb
das
xor
add
popa
arpl
xor
push
push
adc
or
xchg
sbb
sub
add
jle
pop
jne
mov
dec
xor
cmp
js
add
imul
push
xchg
and
dec
mov
lods
popf
fs
xchg
mov
push
pop
mov
ror
mov
js
mov
dec
scas
adc
push
sub
xor
mov
aas
dec
test
cmp
add
das
pop
inc
cmps
jne
es
xor
sbb
jge
ins
inc
test
int3
jnp
push
(bad)
adc
ds
fdivr
pop
imul
sbb
xor
nop
js
cmp
jno
push
ins
xchg
cmp
out
add
sub
adc
push
ss
xor
adc
xor
pop
cmp
fs
icebp
js
mov
pop
jne
xchg
data16
scas
add
imul
dec
mov
movs
sub
jo
jl
and
call
cld
push
dec
dec
sbb
adc
mov
xor
lds
push
inc
in
arpl
retf
xor
xor
cld
ret
mov
outs
lods
inc
adc
fs
cld
inc
push
sub
xor
fsub
test
add
lds
test
sub
and
dec
mov
pop
pop
mov
aas
or
jb
xchg
inc
and
pop
addr16
bound
pusha
js
dec
data16
push
dec
mov
inc
mov
test
cs
xor
xchg
cld
sub
add
jmp
ds
cmp
inc
inc
cmp
cmps
push
push
addr16
mov
in
xchg
in
aas
inc
push
mov
jle
jg
and
adc
in
gs
popa
cmp
pop
mov
mov
mov
pop
sub
ins
cmp
cmc
das
js
xor
jnp
ret
outs
mov
shl
add
bound
lea
nop
ins
les
pushf
inc
push
mov
test
cmp
mov
xor
or
aaa
push
loopne
jo
push
std
or
push
sub
or
cmp
jge
call
inc
gs
add
cmp
in
inc
pop
pop
jp
mov
fs
xor
mov
cmp
and
les
cmp
icebp
or
pop
cmp
call
iret
dec
test
adc
sub
cmp
arpl
in
enter
adc
dec
sub
movs
push
xor
dec
jae
jg
gs
fistp
inc
xchg
adc
mov
popa
or
cmps
pop
inc
pop
jmp
popf
push
push
jnp
push
sti
push
jns
mov
cmp
inc
mov
ds
mov
adc
cli
pop
outs
mov
xor
push
in
sbb
pop
or
nop
pusha
push
add
xchg
inc
test
sub
add
pop
data16
add
es
das
cmps
aam
shr
mov
xlat
or
add
sub
xor
les
add
mov
inc
test
aas
and
add
dec
push
outs
jns
push
stos
lea
icebp
dec
jbe
inc
pop
js
aaa
nop
mov
daa
dec
cmp
add
into
arpl
rol
dec
fist
out
push
adc
xchg
ds
and
dec
add
inc
inc
daa
mov
inc
inc
shr
ins
repnz
and
jno
xor
push
mov
inc
bound
mov
sbb
jl
mov
sub
inc
ss
xchg
je
mov
scas
dec
xor
inc
movs
cwde
inc
imul
push
daa
push
xchg
std
and
dec
pop
inc
cmp
and
xor
sub
retf
push
rcr
push
pop
ins
les
js
pop
adc
add
add
lahf
or
xchg
ja
dec
adc
fs
adc
mov
xor
inc
scas
mov
inc
inc
and
mov
pop
or
test
test
sar
pop
sub
adc
fisub
mov
sub
xchg
movs
sbb
bound
dec
or
inc
push
cli
push
test
xchg
call
jecxz
movs
or
movs
or
dec
push
sub
adc
mov
repnz
in
sbb
xor
test
in
push
and
xchg
ins
add
mov
and
(bad)
test
sbb
xchg
iret
cwde
daa
xor
inc
fs
xchg
gs
cmp
push
ss
xor
push
jno
mov
xor
pop
pop
mov
les
jbe
outs
dec
jbe
fsub
retf
loope
sub
push
sbb
pop
push
jae
sub
push
inc
les
mov
jo
aas
inc
pop
bound
cmps
loop
outs
mov
xchg
or
push
xor
jbe
add
push
in
push
mov
in
inc
dec
fidivr
sub
mov
out
jae
rol
sbb
pop
ret
dec
dec
popa
bound
sub
or
movs
and
inc
push
(bad)
push
pop
pop
or
or
jmp
fst
xchg
add
js
into
mov
sub
cmp
xor
inc
pop
adc
and
jae
mov
lahf
ds
xchg
fs
retf
aaa
xchg
push
int
fmul
(bad)
or
jns
inc
xor
pop
lods
add
add
hlt
add
adc
int
dec
xchg
push
inc
mov
aas
shr
or
inc
pushf
inc
sbb
test
mov
cmp
pop
fnstcw
bound
cmp
test
rcl
bound
and
xchg
jo
test
stos
test
mov
hlt
pop
out
add
outs
adc
xchg
cld
inc
mov
xor
jbe
push
inc
mov
data16
(bad)
out
adc
sub
jb
arpl
inc
push
and
dec
push
imul
xchg
or
jo
es
fisttp
jb
sbb
gs
dec
adc
ret
mov
inc
xor
in
or
adc
jbe
xor
mov
pop
push
arpl
movs
(bad)
adc
or
imul
xchg
cs
outs
xchg
test
jge
lahf
adc
dec
push
xor
dec
mov
dec
int3
xchg
sar
fisubr
jns
adc
outs
or
push
or
ins
mov
and
dec
sbb
pop
push
hlt
xor
sub
imul
and
sub
mov
inc
xchg
or
inc
enter
fs
aas
out
imul
pop
jl
mov
test
and
cli
xor
sub
test
mov
mov
adc
mov
mov
dec
repz
xchg
ja
ret
dec
cld
cmps
xor
and
xchg
or
mov
cmp
push
dec
and
jae
dec
xor
sbb
test
cmp
xchg
dec
add
sbb
xchg
push
in
pop
sub
icebp
mov
pop
outs
dec
mov
mov
data16
dec
add
cmp
dec
test
cli
pop
inc
jno
imul
or
and
test
jb
and
retf
adc
jae
push
xor
sub
ins
inc
xchg
mov
inc
test
mov
nop
mov
imul
cmp
inc
or
pop
add
jl
pop
test
aas
lds
and
daa
sbb
sahf
dec
xchg
push
addr16
add
test
cld
inc
mov
gs
and
fsub
lods
xchg
lea
jae
sbb
xchg
jo
movs
push
push
mov
movs
add
pop
test
out
lock
rcr
js
xchg
mov
jecxz
movs
push
cs
push
iret
stos
and
out
dec
pop
shl
loopne
xchg
xchg
adc
jp
sub
popa
ins
and
sub
inc
mov
pop
imul
dec
xor
cmp
and
inc
push
pop
mov
rcr
imul
push
jg
cld
nop
dec
pop
scas
test
or
mov
outs
movs
or
popa
xor
add
pop
jecxz
sbb
push
sbb
inc
dec
call
push
inc
pop
adc
cmc
inc
push
inc
les
sub
and
lea
xor
shr
or
sub
xchg
pop
adc
adc
pop
bound
adc
mov
retf
data16
or
mov
inc
das
dec
pop
stc
in
dec
hlt
inc
push
jns
jge
and
inc
cmp
push
or
xor
bound
fimul
cdq
push
mov
and
or
cmp
add
push
push
xor
xor
es
mov
xor
mov
push
push
push
pusha
dec
inc
xor
addr16
xchg
cs
add
xor
rol
imul
xor
lods
push
das
pop
(bad)
push
inc
pop
pop
int
sub
das
loopne
nop
xor
push
mov
mov
pop
mov
inc
addr16
cmp
jns
dec
mov
push
fcom
dec
mov
and
mov
jo
lods
push
cmp
mov
jns
int
inc
inc
data16
adc
inc
jno
out
inc
jb
mov
xchg
sub
outs
and
test
jle
js
mov
inc
cmp
xor
add
push
sbb
(bad)
or
dec
add
mov
test
out
jne
sbb
xor
inc
xchg
mov
or
pop
inc
xchg
sub
jbe
enter
mov
and
dec
inc
cwde
mov
add
push
adc
inc
push
add
xor
dec
arpl
dec
and
jae
sbb
mov
inc
mov
and
out
aam
cmp
adc
inc
push
cld
add
jae
ins
fadd
fidiv
sbb
pop
and
pop
jl
and
cmps
pop
pop
pop
inc
sbb
mov
test
and
adc
inc
mov
bound
lds
xchg
inc
data16
xor
mov
shl
aam
mov
xchg
jle
cmovl
popa
fld
jg
inc
jne
xlat
movs
repz
daa
push
adc
cmp
push
sub
hlt
nop
dec
jbe
inc
mov
sub
in
inc
mov
lock
imul
imul
inc
stos
jbe
out
inc
cmp
ds
mov
sbb
mov
jbe
imul
mov
add
xor
xchg
jbe
cmp
ret
shl
adc
jmp
sar
add
sbb
push
jp
inc
stc
ss
push
cwde
inc
pop
inc
add
(bad)
ror
ret
mov
inc
xor
cmp
sahf
rcl
call
xchg
mov
xor
ror
mov
push
popa
lsl
fisub
inc
pop
stos
or
and
nop
push
or
xor
xchg
inc
push
or
mov
adc
cmp
pop
fsubr
fild
add
loopne
bound
(bad)
pop
jl
dec
movs
fdivr
push
sub
inc
xchg
inc
addr16
push
inc
fs
aam
(bad)
pop
inc
test
xchg
pop
push
shr
les
bound
pop
fcom
pop
mov
cli
xchg
xchg
int3
call
mov
stos
fsub
push
imul
bound
push
pop
inc
clc
xchg
inc
push
pop
into
or
xchg
xor
into
ret
pop
movs
sbb
inc
mov
xor
xor
cmp
or
push
ret
sub
inc
add
cmp
and
mov
sbb
popf
push
pop
xchg
xchg
mov
enter
lds
mov
outs
pushf
mov
jnp
call
dec
and
dec
inc
jge
or
jmp
push
pop
fs
adc
out
mov
sbb
enter
mov
and
jo
shl
push
push
mov
xchg
inc
inc
data16
lock
jnp
sub
and
push
pop
or
ror
xor
jo
or
enter
aaa
inc
push
rol
repnz
(bad)
sub
xor
sbb
inc
mov
cmp
cdq
outs
inc
ins
stc
sbb
push
mov
cmp
or
pop
fs
mov
jge
out
jl
pop
mov
and
cld
and
xchg
imul
scas
inc
pop
lahf
movs
int3
nop
push
inc
cwde
loopne
inc
push
xor
enter
cli
leave
mov
daa
rol
push
cmp
pusha
pop
xor
cmp
inc
cmp
inc
pop
xchg
dec
adc
rcl
xchg
enter
jae
hlt
das
mov
jmp
out
xor
pop
mov
xlat
inc
mov
mov
mov
push
dec
jecxz
adc
or
ds
pop
mov
and
retf
xchg
and
in
retf
shl
lds
icebp
pusha
in
cmp
push
and
retf
mov
mov
(bad)
fsub
out
imul
stc
(bad)
hlt
or
xor
push
(bad)
or
popa
push
jo
mov
dec
xor
or
int3
arpl
xchg
imul
es
popa
cli
addr16
xchg
stos
aam
scas
fcom
dec
jecxz
aaa
cmps
mov
pop
cmp
or
daa
cs
aaa
and
into
adc
and
push
out
push
and
push
pop
and
ss
sub
sub
mov
adc
jno
xor
xor
sub
jbe
inc
js
xor
jnp
aaa
lds
(bad)
sbb
or
and
push
xchg
in
inc
mov
push
adc
dec
mov
rcl
ret
pop
mov
inc
jmp
push
in
adc
jl
xchg
inc
push
rcl
arpl
sub
dec
shl
arpl
push
jl
pushf
push
and
mov
sub
ficom
cwde
mov
imul
jb
cmp
inc
inc
aam
ss
and
dec
pop
sbb
jp
(bad)
xor
stos
xor
cld
aam
(bad)
jl
mov
bound
adc
adc
xchg
inc
mov
stc
xchg
cmp
data16
push
cdq
outs
scas
push
test
mov
fs
outs
pop
gs
leave
inc
sbb
dec
cmp
pop
add
es
int3
aaa
or
cmp
sub
pop
ret
aam
shl
loope
xor
inc
xor
xchg
test
jg
shl
sub
push
mov
or
popf
pop
sti
xor
dec
int
jnp
sub
add
adc
(bad)
push
xchg
xlat
in
popa
jns
std
push
sub
sbb
add
xor
push
mov
inc
xchg
pop
dec
and
ror
jns
xor
inc
xchg
add
out
xchg
jl
mov
inc
jae
icebp
ss
adc
jp
cld
xor
inc
ror
enter
lock
in
push
dec
inc
pop
xchg
pop
cmp
pop
cli
nop
push
push
retf
mov
fdivr
push
mov
push
pusha
test
pop
sub
push
int
jp
ins
adc
out
mov
sbb
dec
inc
and
outs
dec
rol
arpl
ins
mov
mov
xchg
pusha
dec
imul
mov
or
iret
fnstenv
sti
movs
pop
inc
rcr
jnp
mov
and
mov
inc
int
stos
xor
xchg
mov
sbb
xor
cmc
inc
loop
outs
mov
aaa
lock
ins
aas
dec
ret
dec
pop
mov
push
dec
cmp
add
test
mov
sbb
and
in
mov
push
(bad)
nop
jl
inc
daa
jnp
test
sub
jno
mov
cs
loop
outs
lods
adc
xchg
dec
stos
popa
or
xchg
push
sbb
and
mov
fwait
je
xor
xchg
fs
in
das
sbb
test
jns
shl
sar
cdq
loop
imul
cmp
ins
pop
sbb
fcom
jns
test
sbb
cmp
jo
outs
jmp
add
cmp
xchg
and
or
fldcw
ins
ja
out
add
xor
or
dec
push
stos
xor
test
out
xchg
inc
movs
mov
xor
push
adc
and
sbb
sbb
inc
fwait
and
test
iret
test
xchg
ins
adc
push
sar
add
imul
dec
dec
pop
push
test
imul
cmp
outs
xchg
inc
sub
pushf
dec
xor
add
xor
(bad)
lahf
pop
dec
jb
outs
jne
and
cmps
inc
and
dec
sub
xor
in
in
inc
ret
add
adc
mov
pop
and
bound
(bad)
out
mov
mov
sub
popa
or
sub
dec
out
dec
mov
xor
and
jnp
mov
mov
cmp
pop
dec
fcmovne
cmp
dec
rcl
jns
addr16
mov
fidiv
retf
adc
cmp
cmp
test
add
fistp
es
fwait
push
xchg
mov
mov
pop
arpl
rol
(bad)
hlt
or
cmp
mov
inc
sti
aas
or
and
ret
fwait
xor
sti
mov
imul
adc
and
ins
dec
aaa
mov
ret
shr
outs
stos
jno
and
inc
stos
loopne
shr
enter
ret
or
or
jb
test
int3
ss
add
cs
shr
vmread
lods
mov
and
test
arpl
add
inc
xchg
daa
mov
arpl
inc
inc
lods
int3
stos
das
movs
add
xor
imul
lods
mov
adc
mov
gs
(bad)
cmp
and
push
ins
jb
in
(bad)
out
movs
jns
xchg
jo
xor
or
add
cmp
sbb
(bad)
call
outs
(bad)
push
outs
and
pop
jno
mov
sbb
inc
test
cmp
adc
cmp
int3
aas
or
xchg
jge
je
out
push
test
movs
popa
dec
push
push
stos
in
nop
jg
sbb
test
sbb
mov
sub
fsub
sub
cmp
mov
rol
jns
out
push
test
mov
pop
jbe
add
leave
leave
cmp
test
push
pop
sti
adc
cmp
jae
add
cmp
pop
fs
dec
xor
outs
dec
pop
les
fimul
scas
adc
and
test
push
popa
xor
cwde
pusha
jae
xchg
(bad)
int3
adc
inc
(bad)
aad
sbb
arpl
(bad)
stos
jo
sub
xor
xor
and
repnz
data16
rol
call
dec
cmp
xor
push
imul
fisub
xchg
popa
add
data16
and
dec
or
mov
mov
aam
sub
xor
ins
and
inc
ret
das
mov
sub
or
ins
push
mov
dec
aas
pushf
test
cmp
or
push
cs
push
enter
stos
jo
aad
pop
daa
(bad)
pusha
outs
in
push
pusha
test
xchg
cmp
mov
push
jbe
jae
jno
jbe
add
fimul
jmp
jnp
je
jnp
test
aad
mov
pop
popa
and
sub
in
xchg
dec
jbe
pop
xchg
pop
inc
pop
xor
out
es
fs
pop
pop
jae
or
sahf
xor
mov
xchg
loop
push
and
xchg
add
nop
sub
cmp
dec
push
pop
and
test
call
sbb
pop
and
mov
fiadd
enter
cwde
add
cmp
sub
dec
jae
inc
pusha
shr
dec
mov
jae
test
js
jbe
pop
cs
nop
add
fs
shld
fs
aaa
fild
inc
sbb
inc
cwde
outs
mov
bound
push
mov
inc
dec
(bad)
xor
mov
xor
xchg
jmp
call
dec
(bad)
mov
and
ja
mov
lods
xor
mov
mov
rol
cmp
test
or
mov
arpl
inc
fisubr
rcl
inc
ja
inc
dec
mov
jo
sub
aas
adc
ss
jbe
add
aas
(bad)
xchg
js
jp
adc
mov
mov
test
mov
aad
push
cdq
jno
add
xor
js
dec
mov
jecxz
loope
and
mov
xchg
pop
lds
aam
imul
push
movs
lahf
xor
ror
loop
rcl
push
mov
jb
xor
or
push
hlt
cwde
(bad)
es
xor
call
and
mov
lea
shl
shl
sbb
and
push
scas
or
push
add
dec
mov
pop
push
dec
sbb
(bad)
adc
movs
sbb
pop
(bad)
adc
sbb
push
sbb
popa
push
jae
inc
xchg
out
test
pop
je
jo
les
dec
sahf
mov
imul
mov
movs
int3
cmp
push
xchg
das
sbb
sbb
or
xor
xchg
inc
jle
cwde
es
add
or
dec
push
pop
sbb
push
inc
jno
adc
aas
pop
test
add
cmp
ja
dec
jp
mov
lds
xor
ins
inc
pop
pop
xchg
aam
and
shr
fstp
push
pop
inc
outs
stos
int
and
xchg
pusha
aad
sbb
adc
push
jge
pop
fwait
jns
rcl
pop
loop
js
sbb
inc
fidiv
cmc
out
and
inc
enter
(bad)
jl
gs
cwde
test
jp
in
sub
mov
cld
xor
xchg
ins
or
jp
scas
add
pop
pusha
imul
es
inc
push
test
mov
pop
sar
xchg
cmp
push
xchg
dec
outs
imul
shl
outs
(bad)
dec
mov
and
cmp
popa
nop
and
ror
xor
sub
add
or
add
jmp
jno
out
mov
aas
dec
bound
pop
xor
mov
xor
xor
adc
xchg
popa
dec
sub
xor
jae
loopne
imul
inc
pop
(bad)
sub
pop
adc
sub
sbb
push
call
and
jae
mov
cmp
pop
es
loope
pop
pop
push
ficom
sub
inc
or
sub
inc
xchg
cmps
mov
pop
sub
jo
hlt
jbe
and
enter
in
push
mov
xchg
jp
cdq
int3
mov
xor
pop
ins
int3
cmp
push
call
jbe
dec
jmp
xchg
jbe
jae
xchg
jb
xor
lods
xchg
jnp
xor
ja
xor
sub
push
faddp
leave
pop
enter
add
xchg
dec
cmp
mov
pop
xor
lods
pop
push
dec
pop
leave
push
xchg
pop
call
je
xor
add
ds
or
pop
dec
xor
dec
pop
mov
outs
dec
scas
es
xor
push
jmp
add
test
jns
mov
or
test
inc
sbb
test
test
xchg
fs
dec
add
adc
icebp
push
mov
(bad)
aaa
and
bound
aad
jns
add
pushf
movs
sbb
pop
sub
sub
pop
ret
pop
ins
or
push
inc
pop
fs
push
sub
movs
sbb
sub
jnp
aad
aas
pusha
adc
das
icebp
and
cmp
add
mov
or
(bad)
sub
and
add
and
mov
or
addr16
mov
cmps
sub
sub
out
lock
xor
xchg
cdq
das
bound
pusha
xchg
and
(bad)
sbb
inc
xchg
adc
and
fxtract
mov
sub
xchg
or
arpl
dec
mov
push
dec
ss
mov
inc
push
inc
ret
mov
jge
sbb
outs
mov
xchg
leave
dec
mov
sbb
mov
das
cmp
shl
out
mov
pop
les
fstp
jbe
and
and
and
and
aas
fst
lock
and
mov
bound
fadd
sub
mov
push
mov
xchg
push
jl
mov
xlat
sbb
daa
add
jg
jb
(bad)
js
jmp
ror
jae
mov
xchg
add
push
cmp
inc
ror
or
xor
pop
mov
jl
in
mov
or
call
push
or
in
popf
arpl
xor
xchg
out
cmp
es
and
mov
daa
sbb
dec
cli
gs
inc
and
in
adc
je
dec
push
add
clc
xchg
ret
or
sub
mov
je
popa
push
inc
je
or
fmul
add
adc
(bad)
xchg
jnp
inc
(bad)
popa
sbb
push
mov
xchg
outs
adc
mov
or
loop
dec
xor
sahf
sub
adc
das
les
xchg
inc
fs
outs
inc
out
pop
add
mov
ret
dec
enter
or
adc
jnp
in
jae
test
cmc
imul
push
push
cmp
retf
es
test
dec
push
mov
fdiv
es
imul
cmps
sbb
icebp
pushf
sub
and
mov
pop
outs
xchg
imul
sub
dec
xor
push
fnstsw
pushf
sub
scas
push
sbb
data16
das
xor
cs
aaa
add
and
dec
mov
in
int3
inc
aas
dec
cmp
push
bound
add
and
das
adc
jge
repnz
stc
pop
imul
mov
int3
ins
push
mov
and
lds
repz
sbb
jmp
sub
pop
inc
es
sub
pop
pop
mov
xchg
sbb
iret
inc
dec
cmovbe
jb
fsubr
cmp
add
leave
pushf
neg
cmp
pop
enter
retf
popa
and
fisub
ss
pop
inc
push
cmp
ror
cmp
push
cdq
in
mov
xor
cmp
xor
jmp
test
nop
jb
sbb
dec
in
and
lock
xor
adc
xor
movs
sub
imul
adc
adc
arpl
enter
inc
dec
jne
sub
das
pushf
push
(bad)
not
jge
dec
mov
arpl
and
xor
add
ins
mov
popa
pop
jg
fist
ins
adc
dec
in
call
or
pop
and
mov
shl
xor
sub
pop
cmps
inc
rol
test
or
sub
in
push
int3
adc
and
cmp
fs
mov
xchg
sbb
xchg
cdq
dec
push
and
shr
stos
or
and
fstp
cs
leave
cmps
mov
mov
cmp
popa
mov
es
dec
test
sub
or
fsubr
daa
sub
(bad)
xchg
inc
xchg
sub
push
jl
add
fimul
xor
adc
shr
and
push
push
sar
xor
cmp
mov
xchg
sub
unpcklps
add
repnz
js
jbe
xchg
in
mov
inc
push
arpl
and
xor
jecxz
mov
pop
mov
cs
adc
jns
lock
inc
fisttp
outs
add
sub
xor
mov
sbb
xor
and
xchg
movs
pop
mov
mov
or
test
(bad)
cdq
push
call
sbb
xchg
cmp
sub
test
mov
mov
out
int3
mov
inc
adc
xor
pop
cmp
test
push
xor
push
dec
jl
add
push
stc
cmps
(bad)
dec
pop
inc
jg
add
cmp
test
aaa
fstp
xchg
xchg
cmps
shl
jnp
and
cmc
arpl
call
sub
push
mov
and
or
add
push
push
sbb
adc
jae
lods
fidivr
outs
dec
mov
cmp
or
fstp
pop
addr16
jle
push
inc
sbb
(bad)
ret
sub
popa
inc
test
or
push
fdivr
inc
in
add
xchg
pop
mov
inc
ins
add
inc
pop
sbb
dec
sbb
sahf
ins
and
shl
mov
add
loopne
mov
sub
inc
lock
cmp
fbstp
mov
les
(bad)
and
test
xchg
pop
dec
inc
pop
in
xor
inc
enter
popf
stos
dec
sbb
dec
sbb
cmp
pop
xchg
ret
cmp
mov
(bad)
cwde
push
and
sahf
popa
mov
cmp
mov
aas
xchg
xor
dec
and
or
mov
cmp
xor
stos
and
imul
(bad)
arpl
add
push
gs
and
mov
xor
cwde
js
jl
mov
or
in
dec
mov
sti
xor
and
shl
shl
push
call
retf
inc
cmp
and
push
adc
inc
jmp
push
push
xor
sub
in
add
dec
dec
mov
in
ds
lds
mov
sar
cli
inc
inc
nop
dec
aad
xor
inc
ins
push
adc
push
out
or
aad
and
mov
(bad)
cmp
pushf
dec
sub
adc
jmp
or
inc
loope
hlt
push
or
pop
xor
(bad)
ja
int
test
push
dec
mov
inc
cmp
add
sub
xchg
and
and
inc
sbb
adc
imul
out
and
and
cmp
es
fldenv
in
push
dec
push
cmp
pop
push
inc
dec
mov
fsub
push
push
cmp
inc
mov
imul
daa
xor
push
imul
inc
imul
pop
sub
dec
fs
or
add
aas
movs
(bad)
or
cs
rcl
and
imul
sbb
xchg
in
push
push
and
test
pop
jnp
fdiv
push
scas
mov
xchg
inc
cmp
mov
jmp
cmp
test
mov
jge
stc
or
xor
call
push
icebp
cs
into
mov
and
jo
mov
inc
and
push
adc
(bad)
jno
out
push
sbb
sub
repz
inc
loope
aas
lea
xor
test
jo
cmp
and
push
ins
inc
mov
push
iret
inc
dec
shr
rol
(bad)
scas
push
imul
mov
xchg
cmp
pop
xor
pop
das
mov
push
mov
add
add
xor
data16
fsubr
xor
adc
adc
imul
and
and
repz
fwait
inc
(bad)
jge
and
lods
ss
pop
(bad)
cld
mov
mov
ins
pop
shl
(bad)
xchg
jo
je
sub
mov
xor
fisubr
push
mov
scas
and
popf
dec
mov
icebp
push
mov
push
add
cmp
test
jb
sub
dec
outs
sbb
pusha
pusha
mov
xor
bound
in
jl
fwait
mov
aaa
push
popf
and
in
mov
or
add
jb
inc
xchg
ror
and
dec
sahf
xchg
and
xchg
xor
in
jne
mov
je
aas
xor
int
jl
push
sub
rcr
(bad)
mov
cmps
call
push
pop
and
sub
in
hlt
mov
push
and
jns
mov
jnp
cdq
popa
or
outs
imul
push
jb
fidiv
call
sub
fcom
sbb
and
dec
or
adc
loopne
mov
nop
mov
push
dec
sbb
push
das
cs
daa
add
dec
add
push
pop
sub
aas
jl
sub
lock
cmp
push
ret
fbld
adc
(bad)
(bad)
arpl
ror
pop
sbb
push
icebp
cld
clc
pop
iret
dec
cwde
cwde
adc
lds
int
add
dec
jecxz
(bad)
cmc
inc
xchg
jnp
(bad)
pop
adc
add
imul
inc
pop
push
xchg
add
outs
push
dec
sub
outs
sar
inc
shl
es
popa
retf
popf
ja
push
or
or
add
sub
dec
(bad)
fwait
inc
pop
arpl
or
jge
push
imul
sbb
mov
test
and
push
add
mov
inc
fisub
xchg
adc
inc
sub
imul
mov
inc
and
ret
sub
xor
inc
imul
or
adc
jmp
push
gs
add
adc
jge
push
adc
xor
(bad)
out
jl
dec
(bad)
addr16
xchg
adc
dec
sub
fmul
add
ds
fisub
pop
sahf
inc
cmc
dec
out
pop
mov
out
mov
outs
mov
shl
cmp
sti
(bad)
movs
sahf
test
adc
jne
add
in
js
cli
cli
pushf
or
ffree
xor
shr
push
jecxz
pop
add
out
xor
mov
aad
ja
push
cmp
xchg
stos
mov
push
and
gs
sti
xchg
pop
or
push
cmc
cli
fwait
pusha
push
call
sar
(bad)
add
mov
cmps
and
or
pop
jo
jb
je
jbe
sub
xor
dec
jo
bound
dec
sub
stos
nop
push
push
pop
test
sub
pop
stos
sti
xchg
push
repnz
and
lods
cli
inc
cmps
test
push
mov
daa
cmp
idiv
in
jns
enter
fucomip
and
push
xchg
sbb
adc
sub
adc
sbb
pusha
(bad)
pushf
stos
push
scas
add
out
jmp
mov
mov
mov
popf
fs
das
inc
mov
push
into
pop
imul
and
test
fwait
(bad)
fbld
sti
sbb
inc
add
xchg
hlt
or
popa
mov
loope
cmp
sahf
sbb
mov
xchg
pop
ja
mov
vpshufd
fdiv
clc
jae
sbb
or
mov
pop
mov
ds
cdq
repz
mov
sub
xchg
push
imul
ret
pop
cmp
addr16
cmps
hlt
(bad)
in
iret
mov
lds
loope
add
jge
sub
imul
lods
xor
popf
fs
sub
dec
cmp
push
mov
mov
and
jb
sub
cmp
imul
lds
es
xor
dec
or
jge
mov
sub
sub
cmp
pop
jp
pop
pop
int3
and
jmp
pop
pop
pusha
ins
je
adc
pop
clc
rol
push
sbb
es
fidiv
adc
and
inc
sbb
jmp
xor
rcr
cmp
xlat
xchg
push
js
xor
add
je
sub
push
add
lods
ja
adc
std
pushf
or
sub
pop
add
push
(bad)
add
loopne
jge
call
push
inc
jb
out
mov
add
mov
mov
jmp
push
out
push
xor
cmp
adc
cmovns
sbb
or
dec
ds
fsub
sbb
pushw
cmc
sbb
cmp
push
pop
mov
(bad)
or
inc
jl
int3
ins
push
sbb
or
jl
and
icebp
aaa
cmp
cmp
dec
mov
stos
or
fadd
leave
movs
loope
push
retf
test
sub
sbb
xor
adc
ins
add
jle
daa
inc
xor
cmp
gs
or
push
es
adc
push
mov
and
jb
pop
add
and
push
pusha
mov
or
test
inc
int3
xchg
rcl
jbe
sub
test
cmp
addr16
add
sub
arpl
ret
imul
adc
inc
dec
xor
jp
ds
push
pop
push
jo
jnp
cmp
dec
outs
sahf
mov
dec
dec
jns
movs
sbb
cmp
xchg
jp
mov
data16
lods
cmp
inc
mov
call
mov
mov
pop
bound
dec
mov
dec
cmc
iret
adc
add
cmp
adc
jbe
stos
jno
cmp
add
fs
and
mov
call
jne
dec
push
or
(bad)
lock
popa
jb
mov
jae
push
and
out
push
push
jb
inc
shr
mov
push
ja
and
(bad)
dec
adc
push
mov
dec
in
push
popf
inc
inc
mov
sub
push
add
mov
or
jns
adc
vpcompressb
sbb
jo
and
push
pop
and
arpl
sbb
or
and
mov
adc
aam
push
sbb
sub
nop
and
xchg
sub
jl
or
and
daa
ss
xor
(bad)
addr16
xor
push
adc
mov
movs
shl
outs
pop
add
popa
enter
mov
scas
and
enter
add
outs
imul
mov
add
mov
pop
sub
dec
mov
ret
pop
push
inc
sbb
adc
shr
sub
adc
cmp
mov
dec
cmp
or
std
sub
inc
add
pop
add
cs
pop
add
dec
jns
and
jb
ret
push
push
inc
leave
outs
mov
imul
push
inc
dec
push
or
mov
or
les
das
xor
mov
lock
cmp
inc
mov
cmp
enter
or
xchg
daa
xchg
and
out
jecxz
inc
mov
loope
js
int3
xchg
iret
and
dec
push
lods
fidivr
jmp
adc
fs
lea
sub
adc
push
or
test
dec
xor
js
cmps
push
btc
leave
xor
cmp
ins
dec
fimul
jg
cmp
mov
sub
jo
and
dec
and
adc
mov
and
add
aas
sub
xchg
pop
pop
mov
and
pop
lds
and
das
pop
iret
and
cld
jo
imul
xchg
xchg
xor
outs
in
mov
cmp
xlat
push
inc
inc
mov
mov
inc
pop
add
pop
xchg
addr16
jns
pushf
test
test
xchg
or
ds
stos
push
and
adc
pop
pop
jecxz
push
inc
jno
ret
mov
cmps
cmp
mov
sub
dec
jbe
ins
push
adc
in
or
inc
out
mov
data16
mov
std
xchg
les
xor
(bad)
cwde
sub
call
fdiv
lahf
inc
push
(bad)
call
les
mov
dec
xor
sbb
dec
push
inc
js
and
inc
lahf
inc
xchg
cli
cld
xor
shl
jmp
dec
je
and
sbb
adc
mov
xor
pop
sub
push
jb
stos
sub
enter
sub
and
push
xchg
and
addr16
ja
adc
xchg
aas
or
mov
push
mov
and
and
jo
inc
pusha
add
mov
stos
shl
pop
imul
test
mov
sub
adc
arpl
les
cmp
sti
mov
cmp
das
test
xor
pop
inc
xchg
sub
push
push
push
leave
or
fs
mov
mov
pop
aaa
lds
retf
mov
fstp
mov
scas
xor
adc
call
nop
int
jo
inc
dec
call
mov
popa
es
mov
aas
sbb
ins
ins
es
rcl
in
pop
adc
jne
jbe
xchg
xchg
in
pop
imul
es
fnstenv
test
inc
push
mov
mov
bound
das
test
push
push
mov
push
sub
mov
pusha
inc
stos
pop
repnz
movs
xchg
jbe
cwde
jp
(bad)
push
js
pop
push
cwde
push
ja
xor
jbe
inc
pop
gs
dec
lods
test
xchg
sahf
test
push
jbe
mov
inc
jb
push
ins
iret
adc
ficom
js
pop
inc
sub
xor
lods
cmp
pop
pop
les
pop
xchg
or
cld
pop
popa
mov
inc
xchg
jno
cmp
or
in
jns
das
xchg
adc
sub
imul
or
and
or
push
mov
cmp
or
enter
jl
fstp
repnz
add
dec
push
pop
push
jecxz
push
jbe
cs
push
(bad)
mov
mov
and
jp
arpl
aad
xor
shr
daa
inc
ror
xchg
dec
push
fidiv
and
inc
sub
push
and
xchg
xchg
iret
ror
in
mov
es
pop
inc
and
inc
dec
ss
ss
fs
xor
mov
jnp
pop
cmp
and
in
mov
imul
push
push
and
cmp
mov
cmps
retf
inc
mov
mov
jp
outs
cmp
sbb
xor
mov
push
inc
sbb
adc
mov
pop
sti
cmp
adc
xchg
or
scas
push
jnp
in
pushf
mov
xchg
shl
sbb
call
or
ins
inc
inc
dec
mov
add
mov
outs
lahf
mov
mov
shl
lds
mov
ret
bound
cmp
dec
xchg
les
les
inc
jnp
sbb
xchg
xchg
xchg
dec
push
add
push
pop
arpl
arpl
sti
pushw
push
mov
inc
loop
rcl
stos
inc
and
ins
sahf
push
clc
mov
fadd
stc
jge
dec
enter
sub
jp
pop
xor
test
dec
pop
push
jmp
push
jecxz
shl
ins
jnp
mov
fcom
xor
mov
xor
dec
cmp
push
aam
jp
ficom
adc
test
lahf
and
mov
cmp
int3
mov
dec
outs
sub
add
mov
adc
mov
inc
dec
pop
add
xlat
push
ins
dec
iret
adc
push
pcmpgtd
dec
add
push
mov
aam
inc
sbb
(bad)
cld
and
movs
sbb
add
test
pop
pop
arpl
les
xchg
cwde
cwde
adc
test
push
push
xchg
jo
sahf
jecxz
fadd
xor
daa
fst
xor
leave
adc
pop
xchg
adc
push
dec
and
inc
dec
adc
lea
push
or
sub
jge
lea
mov
jmp
dec
gs
xchg
les
fild
pusha
inc
adc
inc
jle
add
jns
sub
pushf
xchg
out
sub
push
arpl
push
lds
pop
mov
ret
push
sub
stos
dec
je
jmp
ins
lock
or
and
or
and
mov
ds
js
dec
fdiv
jmp
cdq
mov
cmp
int3
loop
pop
bound
xor
inc
outs
push
sub
cmp
fs
or
dec
jnp
(bad)
fwait
nop
and
ja
pusha
adc
mov
pusha
and
xchg
jge
and
pop
jae
sub
xchg
xchg
ror
push
cmp
popa
cld
pop
lahf
add
shl
or
loope
ja
dec
dec
or
test
mov
pop
mov
je
push
sbb
mov
or
shl
and
push
inc
xor
jb
inc
dec
add
inc
and
and
mov
jmp
jo
xor
inc
mov
arpl
inc
arpl
push
add
rcl
mov
push
dec
jmp
cmps
in
jmp
sbb
adc
mov
pop
add
jl
dec
pop
sbb
lods
add
cmp
or
ins
sbb
xchg
imul
outs
push
and
outs
xchg
adc
adc
xchg
js
pop
push
call
enter
lods
add
and
xchg
aam
movs
ret
push
repnz
xlat
sti
xchg
movs
xchg
mov
jns
rol
popa
sub
or
(bad)
arpl
retf
xlat
or
sub
pop
int
jp
sbb
xor
mov
sub
xor
and
pop
ficom
sbb
cmp
rcl
test
inc
movs
cwde
cld
sub
jecxz
and
inc
or
lds
dec
mov
addr16
cwde
(bad)
aam
dec
mov
dec
inc
mov
add
loope
push
pop
dec
cmp
sub
cmp
loopne
mov
dec
int3
cmp
ret
test
rcl
xchg
or
and
ss
jno
xor
dec
mov
ja
push
jle
xor
xor
dec
dec
dec
scas
shr
jb
mov
and
inc
xchg
rcl
dec
push
pop
pop
popw
or
jno
mov
arpl
inc
jb
or
mov
stos
xchg
(bad)
xor
push
add
inc
in
adc
das
push
pusha
xchg
call
aaa
adc
and
mov
dec
imul
jno
loopne
jnp
cmp
mov
fs
push
sub
adc
pop
and
repz
jb
dec
aaa
push
mov
outs
sub
xchg
dec
cmp
fs
jecxz
movs
and
cmp
xor
jg
adc
xor
jbe
or
lds
cmp
ret
xor
fs
inc
sub
and
cmp
or
out
jae
sub
inc
mov
bound
mov
ficom
call
adc
inc
fdivr
add
ss
in
pushf
test
jno
adc
push
add
movs
cmp
es
mov
mov
dec
jle
js
pop
mov
sbb
sub
pop
cmp
pop
dec
mov
or
inc
pop
sub
cs
push
rcr
mov
bound
bound
sub
xor
jb
outs
and
je
ja
sbb
shr
leave
xchg
jno
inc
adc
and
or
dec
jno
std
je
icebp
push
in
sub
xchg
lods
and
inc
outs
daa
cs
sbb
push
cwde
imul
xor
and
adc
fmul
cli
adc
cmps
mov
mov
imul
out
mov
dec
dec
dec
call
sub
ja
in
cmp
dec
dec
sbb
add
rcl
bound
popf
dec
in
and
sahf
aam
push
add
loope
push
lahf
jbe
outs
ds
cmp
pop
and
dec
icebp
xchg
loope
add
inc
inc
dec
adc
jns
test
and
dec
mov
xor
xor
fs
dec
cmp
dec
push
jae
ret
ins
xor
sub
or
cmp
xor
sub
or
popa
and
mov
adc
fs
inc
cmp
and
popa
pushaw
push
retf
xor
data16
lea
dec
inc
popa
and
dec
shr
and
inc
xor
jns
outs
xor
adc
addr16
push
fldcw
add
cmp
xor
rcl
(bad)
push
push
fisub
adc
push
call
(bad)
dec
lea
xor
pop
aad
fs
int
inc
push
js
lea
pusha
pop
lds
arpl
mov
inc
mov
jg
sbb
ja
sbb
rol
call
fadd
mov
push
ss
dec
imul
int
ss
in
jo
into
or
cli
inc
push
sbb
into
push
jmp
dec
fabs
sbb
pop
push
mov
sbb
fist
push
js
adc
xchg
dec
jae
and
fs
adc
lahf
inc
mov
pop
movs
lahf
jno
sub
adc
mov
or
mov
jecxz
out
sbb
cs
popa
dec
mov
jmp
and
and
xchg
sbb
cmp
xlat
inc
pop
xor
inc
mov
ins
lea
dec
les
cmc
mov
inc
sbb
in
in
pushf
retf
push
xor
and
sub
mov
pop
popa
jo
jmp
in
add
mov
inc
jl
rol
jge
cmp
mov
adc
sub
xchg
arpl
pop
cmps
dec
xchg
cld
lods
shl
stc
mov
adc
pop
repnz
mov
enter
mov
retf
push
imul
daa
sub
data16
and
xor
xor
inc
add
movs
test
sub
dec
sub
and
in
mov
pop
sub
cmps
add
cmp
gs
adc
ja
in
and
pusha
push
stos
dec
fist
test
outs
inc
ficom
aaa
dec
dec
ja
mov
lea
inc
mov
add
test
fidivr
movs
fs
mov
aaa
(bad)
shr
and
add
retf
adc
fild
out
ins
jo
xor
jnp
cmp
and
fist
test
mov
or
fwait
add
repz
bound
dec
xor
mov
int3
xor
add
jae
pop
mov
mov
cmp
daa
jp
add
adc
inc
dec
add
dec
les
es
and
xchg
mov
jno
test
ret
aaa
int3
mov
inc
bound
pop
in
and
xor
mov
cmp
gs
ret
inc
pop
pop
lods
inc
shl
retf
sbb
dec
xor
or
rcl
jb
nop
and
sub
or
jp
push
lods
jae
adc
clc
pop
ins
dec
pop
sbb
push
pusha
fs
push
inc
pop
xchg
inc
inc
push
add
shl
lea
or
sbb
cmp
lods
inc
push
push
je
push
add
test
outs
jnp
inc
enter
in
jb
cmp
push
mov
add
inc
inc
fs
inc
fisubr
inc
mov
push
enter
dec
sub
add
in
cli
mov
adc
sbb
mov
shr
ss
mov
fs
inc
inc
mov
push
xor
ds
cmp
aam
xor
es
and
push
pop
adc
push
mov
or
jbe
add
and
mov
popf
cmps
dec
rcr
imul
dec
sbb
dec
and
inc
dec
pop
jp
sbb
sub
daa
inc
dec
inc
pusha
fmul
les
outs
ret
cmp
hlt
mov
mov
add
adc
add
lds
pusha
pop
je
data16
sub
fwait
in
or
sahf
add
bound
xor
imul
xor
push
pop
inc
arpl
xor
xor
lock
jo
and
stos
xchg
inc
xor
inc
rol
ror
or
ins
xor
cmp
xchg
inc
outs
pop
dec
call
in
xor
int3
xor
shl
movs
cmp
dec
mov
dec
arpl
jbe
nop
nop
jg
call
iret
and
adc
mov
pop
je
mov
pop
jge
xchg
bound
in
jb
les
stos
inc
xchg
sahf
sbb
inc
push
dec
cmp
sbb
dec
pop
pop
inc
jno
sbb
pop
jge
push
pop
test
outs
push
daa
(bad)
and
sahf
and
xor
xor
mov
pop
ds
mov
(bad)
push
push
pop
xchg
fdivr
lock
mov
bnd
mov
xchg
xchg
or
dec
arpl
cmp
popa
out
and
push
ret
push
jne
ficomp
lds
xor
cmp
enter
and
mov
inc
inc
pushf
outs
rcl
sbb
fisub
cmp
inc
inc
fbstp
je
gs
dec
push
lock
mov
loope
inc
pusha
ins
sub
bound
sub
jecxz
dec
push
call
mov
aaa
icebp
stos
mov
fcmovnb
clc
push
mov
jmp
inc
mov
adc
jge
cdq
sub
sbb
mov
scas
jmp
mov
xor
fs
and
sbb
or
js
sub
out
push
pop
pusha
sbb
inc
in
ss
and
lods
sub
inc
push
loope
adc
pop
and
and
push
push
push
mov
inc
sahf
mov
jne
dec
dec
jle
and
dec
xor
shr
and
mov
xor
xor
jmp
dec
fild
call
xchg
jo
bound
xchg
fisubr
push
and
xor
loop
popf
inc
stc
adc
cmp
adc
or
and
cmp
popa
jge
mov
cdq
(bad)
push
int
sbb
and
ja
and
fisttp
jge
and
sbb
in
pop
rol
loope
and
arpl
push
and
gs
popa
and
lahf
inc
shr
or
cmp
or
jb
ins
mov
dec
mov
sub
aas
ja
shl
les
in
mov
out
dec
inc
inc
dec
rcl
(bad)
jo
push
sbb
cwde
outs
movs
xor
mov
aam
xor
inc
leave
push
xor
add
out
sbb
add
add
jo
cmp
aad
movs
fnstenv
sbb
adc
fs
xchg
mov
out
jne
loop
sti
push
sub
cli
jle
mov
dec
sub
mov
dec
pushf
pop
jmp
ret
popa
pop
or
call
(bad)
and
icebp
inc
sbb
inc
xchg
inc
retf
mov
test
cmp
pop
mov
inc
inc
sbb
imul
and
inc
inc
sbb
das
xor
cmp
movs
outs
add
loopne
push
inc
add
push
pop
jp
add
dec
dec
push
pop
pop
xchg
jo
retf
push
xor
inc
loope
imul
movs
mov
push
cwde
inc
(bad)
jmp
add
dec
add
dec
push
sbb
dec
mov
and
xchg
jbe
adc
adc
popf
xchg
mov
inc
push
sub
mov
cmp
push
mov
(bad)
mov
movs
and
je
cmp
mov
add
mov
xor
inc
push
and
mov
adc
(bad)
nop
arpl
test
push
cld
push
gs
adc
push
lock
or
xor
push
push
add
xchg
pop
rcl
fidivr
and
cld
sub
add
mov
fdiv
sbb
ins
xchg
jge
inc
sti
cmps
fs
arpl
inc
lds
and
add
movs
add
test
dec
arpl
mov
xchg
push
outs
lahf
arpl
add
dec
dec
dec
adc
xchg
xor
mov
arpl
or
sub
pop
mov
sbb
xor
ret
out
push
push
push
sub
lahf
movs
xchg
ja
ss
pop
retf
leave
nop
inc
adc
je
adc
or
jb
gs
xor
mov
adc
cwde
xor
sub
bound
xchg
dec
dec
dec
mov
and
fdivr
in
dec
int
dec
aad
mov
imul
and
je
inc
lea
dec
dec
xor
xor
or
outs
jbe
xchg
mov
sbb
dec
inc
push
adc
rol
and
push
jmp
ss
nop
sub
sbb
mov
push
pop
xor
adc
jno
adc
push
xor
push
inc
mov
movs
jb
pusha
sbb
jo
sub
mov
and
add
push
adc
inc
dec
push
pop
pop
xor
push
daa
sub
and
push
adc
adc
adc
xchg
inc
gs
add
sbb
xor
xchg
cmp
leave
movs
loop
add
dec
push
or
aaa
xor
popa
and
test
js
add
ss
loopne
adc
add
pop
jl
sub
adc
sbb
inc
and
stos
mov
inc
xor
and
sbb
repnz
jmp
dec
mov
jns
pop
add
and
fimul
pmaxub
(bad)
adc
daa
pop
retf
inc
mov
sub
dec
(bad)
inc
mov
cmp
pop
fs
cmp
cmp
push
rol
jge
es
push
mov
lea
movs
sahf
xchg
push
sbb
out
fs
sub
shl
in
stos
or
pop
xor
dec
ror
gs
add
sub
xor
jne
rcl
cmp
sub
inc
pop
or
jp
sub
les
mov
xchg
jmp
dec
and
adc
adc
jp
test
push
pop
ins
jb
sbb
push
addr16
add
or
ss
adc
dec
pop
pop
cmp
push
lds
fmul
pop
test
sbb
pop
sub
ss
les
dec
mov
in
xchg
inc
test
pop
mov
inc
jl
push
push
mov
test
cmp
loop
pusha
cmp
or
pusha
cwde
addr16
mov
leave
out
lods
test
test
(bad)
and
xor
sbb
and
jns
and
push
dec
and
and
push
dec
add
mov
jecxz
daa
cs
aam
pop
add
std
push
mov
add
jge
punpcklwd
sub
fidivr
dec
pop
je
lds
gs
and
cmp
mov
fld
jecxz
sti
daa
and
inc
sbb
mov
add
gs
sub
push
ins
jb
or
mov
out
js
sub
adc
loop
stos
cdq
and
rcr
jnp
add
stos
add
dec
dec
adc
pop
dec
push
mov
in
cmps
and
inc
mov
scas
mov
mov
adc
dec
ins
int3
std
fs
cmp
gs
mov
js
and
mov
test
inc
xor
lahf
ret
test
mov
cmps
fisub
or
and
dec
inc
clc
or
jae
jle
sbb
xor
bound
mov
mov
sub
adc
pop
jge
inc
sahf
sar
fs
push
call
jl
into
(bad)
sub
mov
aad
jp
sub
cmp
sbb
call
mov
addr16
xor
shl
mov
pushf
push
movs
dec
add
dec
push
arpl
add
mov
dec
dec
sbb
xor
xor
repnz
pop
xchg
repnz
js
imul
xchg
sub
daa
sub
add
add
pop
or
fadd
push
daa
and
lods
push
cmp
mov
xchg
sub
pusha
nop
inc
in
push
lea
xlat
ins
(bad)
mov
aad
xor
enter
cwde
or
enter
and
lods
movs
(bad)
and
jae
repnz
mov
xor
xchg
jl
xor
pmulhw
mov
xchg
xchg
movs
sbb
xor
clc
dec
sub
xchg
or
inc
enter
aad
aas
bound
and
xor
ins
hlt
push
inc
int3
lea
in
inc
add
push
xor
lahf
test
dec
dec
rol
mov
and
cdq
or
js
hlt
int3
adc
pusha
add
jno
sub
xlat
xor
cmp
inc
and
ret
fmul
adc
icebp
inc
in
repnz
inc
cdq
add
mov
imul
addr16
ins
cdq
sub
or
sub
stos
pop
iret
and
mov
fsub
adc
push
xor
mov
test
lods
sub
cmc
mov
jb
in
mov
pop
fadd
and
dec
gs
mov
mov
gs
xor
jmp
cmp
xchg
cli
push
inc
icebp
(bad)
push
add
push
pop
adc
push
ds
xchg
cwde
out
imul
outs
mov
sub
sbb
enter
xchg
xor
or
lods
movs
jne
inc
mov
mov
inc
fst
enter
lods
mov
nop
or
pop
fwait
fwait
adc
pop
xchg
retf
push
shr
add
push
xor
pop
sti
inc
aad
jno
inc
mov
daa
push
sbb
inc
bound
les
bound
inc
in
les
jns
sub
cmp
addr16
pop
and
add
add
jns
ret
push
adc
dec
pop
push
sbb
arpl
jle
out
movs
pop
dec
adc
xchg
dec
ins
add
cmp
dec
ins
cmp
es
and
pop
push
and
mov
test
pop
dec
jne
fsub
(bad)
les
call
push
inc
ficomp
stos
jl
sub
mov
add
pop
jnp
jmp
test
or
jp
ss
xor
sbb
inc
adc
adc
sbb
mov
dec
adc
cmp
adc
xor
popa
mov
and
or
into
test
xor
nop
jo
mov
ficomp
shl
iret
pusha
into
add
sbb
cmps
push
enter
not
dec
push
popa
ins
and
push
push
stos
dec
mov
arpl
push
and
cmp
das
stos
or
jnp
aam
cmp
push
mov
inc
ror
sbb
test
and
(bad)
rcl
cdq
ss
pop
shl
mov
aam
(bad)
jge
add
ret
jl
bound
xor
loopne
pop
and
xchg
ins
sub
add
stos
lods
ins
adc
(bad)
cmp
cmp
jnp
and
and
sbb
push
pop
test
out
jae
test
xor
jae
xor
sbb
nop
dec
push
inc
cmp
sbb
push
inc
dec
pop
adc
jae
sub
and
inc
sbb
sub
jecxz
push
rcl
pop
push
inc
add
rol
xor
add
push
fdiv
arpl
sub
push
fisub
cmp
pusha
neg
les
inc
dec
push
mov
ds
xchg
sub
inc
mov
xchg
popa
xchg
add
data16
xor
pop
jl
pop
test
jge
inc
pop
int3
and
(bad)
fs
rol
sbb
add
pop
aam
push
inc
and
mov
call
mov
push
ficom
sbb
mov
or
inc
add
push
sub
sub
sahf
or
dec
xor
pop
outs
dec
iret
and
cmp
xor
xchg
sub
sub
adc
das
pushf
mov
aam
out
hlt
test
sub
xor
lds
mov
jb
int3
mov
xor
sub
pop
push
dec
add
arpl
movs
test
and
fdivr
cmp
sbb
sub
pushf
cmps
fcom
push
out
rcl
aam
push
dec
test
test
jne
xchg
pusha
repnz
and
push
pop
ret
int3
movs
test
in
cs
mov
add
add
cmp
push
cs
xor
or
int3
dec
int3
ror
dec
cmps
popa
cmc
enter
push
sbb
jne
outs
and
cmp
xchg
push
pop
bound
push
or
sub
xor
outs
pop
and
pop
mov
or
pop
add
jo
add
add
pop
push
cwde
dec
xchg
push
out
add
test
fisub
dec
les
scas
mov
es
add
pop
adc
or
ins
mov
push
or
int3
popa
jo
sbb
dec
adc
stos
sub
mov
pop
es
icebp
popf
jl
mov
push
cmp
push
and
ins
mov
mov
es
inc
or
sbb
jae
sub
xor
lea
imul
inc
cld
jo
cmp
xchg
cli
mov
cmp
pop
push
fbld
adc
or
mov
das
cmp
add
cwde
lock
pop
test
mov
xchg
inc
mov
sbb
jp
dec
pop
cmp
sub
cli
mov
dec
mov
sub
push
pop
loop
inc
ds
aaa
dec
inc
cmc
enter
inc
outs
sbb
adc
mov
inc
dec
pop
push
dec
or
imul
adc
cmp
cld
arpl
mov
inc
ds
movs
cwde
xchg
ins
test
dec
add
dec
inc
mov
call
clc
xchg
or
add
jnp
sar
sub
data16
call
rol
mov
(bad)
dec
inc
clc
xchg
jp
cdq
adc
xor
gs
popf
push
inc
pop
ror
pop
inc
int3
pop
inc
inc
loop
pusha
mov
add
addr16
xchg
aam
outs
jns
inc
iret
fs
and
int
adc
push
mov
jg
adc
rcl
mov
add
xchg
jno
inc
xchg
sub
adc
aam
pushf
mov
xor
cli
or
xchg
pushf
pop
jbe
xchg
stc
adc
mov
mov
rol
jbe
sub
jae
mov
sti
mov
sbb
cmp
sbb
push
inc
jmp
push
ror
shl
jb
bound
das
and
xlat
imul
addr16
xchg
lea
xor
adc
shr
sub
cmp
lock
and
popf
sub
ret
nop
mov
mov
add
ror
jge
push
cmp
mov
xchg
sub
sub
jge
imul
mov
and
ins
ds
cmps
sub
xchg
cli
imul
adc
sub
pop
adc
inc
sbb
inc
cdq
and
inc
or
xor
or
shl
imul
or
ret
arpl
add
das
cmp
in
sbb
pop
sub
dec
pop
sub
push
imul
cmp
jno
and
jns
packssdw
xlat
ret
push
mul
stos
enter
es
inc
or
or
mov
push
test
dec
push
xor
add
mov
mov
jo
add
lods
inc
pop
je
fs
adc
push
sub
jno
mov
and
and
mov
xchg
pop
and
push
pop
aam
cmps
bnd
ss
dec
adc
inc
add
inc
ja
sar
ins
pop
adc
shl
push
movs
inc
dec
push
adc
and
xor
jo
pop
bound
jae
aam
add
mov
jb
dec
xchg
nop
or
aaa
sub
imul
gs
and
sub
outs
gs
arpl
add
popa
and
sub
fcmovne
cmp
xchg
sbb
dec
push
pop
jo
out
sub
ret
js
or
aad
push
gs
sbb
xor
and
inc
cmps
or
ins
jbe
pop
movs
pushf
cmp
ret
pop
bound
sbb
push
int3
not
cmc
gs
inc
adc
std
push
jp
or
xor
inc
mov
sbb
sbb
test
dec
jno
or
fidiv
bound
fwait
cwde
xlat
dec
arpl
stos
aas
adc
add
fisub
jno
ret
das
mov
xchg
ja
icebp
push
add
push
cmp
cdq
paddsw
inc
inc
mov
mov
daa
aam
sub
ror
inc
lods
push
shl
cmp
adc
or
imul
fsub
adc
jns
arpl
and
sbb
loop
dec
ins
add
nop
xor
pusha
inc
arpl
(bad)
mov
aaa
fs
sbb
call
xchg
push
sub
pop
dec
mov
jno
adc
inc
ins
pop
and
sub
and
xor
imul
cmp
aas
adc
sbb
test
lods
lods
ret
xor
xor
adc
sub
mov
mov
sub
aad
dec
enter
inc
fisub
pusha
adc
mov
push
mov
pop
cmp
fiadd
enter
dec
or
xor
mov
inc
mov
push
fild
dec
jo
repnz
add
or
cmps
sub
loop
fsub
int3
adc
pop
call
or
adc
inc
(bad)
outs
js
es
push
neg
xchg
xor
cmp
jmp
xor
fsubr
sbb
lahf
mov
and
adc
add
dec
jl
inc
outs
push
add
outs
dec
adc
pusha
push
or
push
jge
push
pusha
in
mov
outs
adc
mov
or
jp
mov
mov
sbb
sbb
retf
sub
jns
jg
xchg
fst
xor
mov
mov
dec
inc
inc
push
and
jbe
inc
mov
pop
cmp
(bad)
push
ret
nop
ds
mov
adc
test
fild
dec
imul
jne
rol
ds
and
push
dec
inc
mov
sub
pop
data16
stos
sbb
repnz
and
rcr
ret
add
push
aam
or
mov
pusha
dec
mov
cmp
test
ss
pop
pop
jno
mov
lock
mov
sub
add
xchg
inc
shr
arpl
icebp
xor
xchg
dec
push
sub
push
mov
or
inc
push
push
adc
dec
push
and
out
jno
add
jbe
adc
inc
cwde
xchg
sub
adc
xor
xchg
and
dec
mov
mov
add
push
outs
xor
mov
call
mov
(bad)
xor
cmp
into
mov
lods
fst
mov
in
inc
mov
ret
sub
jns
test
or
inc
enter
jge
sbb
pop
pop
xchg
scas
repnz
sub
nop
jle
inc
ret
pushf
dec
adc
fisub
or
xor
pushf
and
and
xchg
mov
and
cdq
int3
ja
lods
dec
fimul
mov
dec
fidiv
jb
enter
pusha
jl
or
xor
aam
ror
push
sub
call
out
shl
sub
mov
sub
cmp
jns
hlt
xor
mov
int
push
ss
inc
xchg
jle
enter
addr16
ror
dec
pop
sub
dec
movs
pop
repnz
push
pop
push
mov
fimul
retf
nop
sub
imul
and
inc
cmp
sbb
es
shl
mov
adc
sbb
popa
es
xor
sub
inc
xor
nop
and
xor
jne
popa
pop
dec
xor
fidivr
sti
dec
or
mov
sub
movs
cmp
xor
arpl
dec
jb
mov
bound
mov
or
dec
xor
and
inc
ins
test
xchg
in
sub
test
mov
adc
(bad)
in
jge
mov
and
mov
jb
cld
imul
push
rcl
inc
sbb
adc
jl
dec
nop
jle
cmp
pop
sbb
cmp
pop
mov
(bad)
bound
das
dec
fs
mov
adc
int3
and
add
sbb
or
mov
cmps
enter
ret
push
push
add
sbb
add
xor
push
lds
jo
xchg
outs
or
jo
push
adc
xchg
div
xor
push
pop
pushf
jo
jno
push
xor
sub
jmp
scas
sbb
aaa
push
aas
lea
ja
aas
xchg
(bad)
data16
and
and
mov
addr16
and
mov
scas
loop
push
xchg
cmp
repz
mov
sbb
popf
inc
sub
pop
push
sbb
pop
push
push
or
xor
or
data16
inc
dec
sub
hlt
popf
dec
push
cwde
and
sub
imul
sti
or
sub
adc
push
adc
test
loope
jae
pop
imul
xchg
dec
and
xor
and
jg
js
fs
push
pusha
cdq
mov
push
js
mov
dec
pop
ins
push
sbb
sbb
jns
idiv
cmps
shl
pop
pop
push
and
add
push
in
cmps
jno
je
(bad)
adc
push
sbb
and
mov
and
dec
xor
jp
xchg
aas
pop
aam
stc
and
sbb
add
mov
push
sar
es
sub
push
push
lahf
retf
cmp
pop
push
nop
std
or
and
add
ret
inc
adc
xor
in
leave
sub
dec
pop
out
and
xor
(bad)
popa
push
push
or
push
and
test
xor
mov
ja
int3
bound
in
inc
and
aaa
jmp
push
jp
mov
mov
and
mov
imul
lds
push
dec
imul
push
and
mov
pop
dec
les
pop
into
outs
jae
sbb
in
jp
retf
inc
arpl
mov
popa
nop
aaa
(bad)
cld
or
adc
aaa
int
add
lock
inc
add
rol
mov
or
test
ins
jae
dec
in
aaa
inc
push
cdq
inc
fldenv
test
or
push
outs
loop
dec
mov
adc
inc
pop
ret
sub
pop
add
or
cmp
inc
lahf
inc
ins
sti
rcl
dec
xchg
test
push
cwde
jp
rcr
sub
mov
or
adc
or
adc
mov
or
push
pusha
lahf
or
and
add
or
xchg
lods
cld
or
push
imul
push
or
sbb
dec
inc
mov
rcl
push
pop
dec
adc
inc
sbb
stos
mov
ins
jge
pop
pusha
mov
and
mov
and
and
fisttp
adc
sub
inc
ror
cwde
and
add
out
popa
mov
cmp
fdivr
push
rcr
jp
inc
shr
mov
sahf
loop
nop
jp
cmp
test
xor
inc
and
xchg
ins
enter
pcmpeqw
test
outs
sub
dec
mov
dec
or
push
mov
mov
and
inc
fs
(bad)
out
xchg
ficom
dec
rcr
and
push
aam
jmp
cmp
(bad)
pop
leave
cmp
test
sti
push
rol
xor
push
in
mov
mov
xchg
mov
call
arpl
inc
pop
xchg
enterw
or
push
shl
cmc
cs
inc
inc
cmp
imul
sub
and
call
jnp
enter
push
xor
loopne
outs
daa
jns
add
sti
or
(bad)
icebp
xchg
dec
pcmpgtb
add
inc
sub
jecxz
lds
xchg
sub
dec
fisubr
push
ins
mov
xor
addr16
cmp
ror
jb
dec
ret
sbb
cmp
gs
jmp
int
lds
shl
dec
in
test
cld
and
adc
xchg
cmp
sub
in
inc
shr
neg
mov
inc
pop
xor
add
xor
movs
xor
cs
out
rcr
push
aaa
jae
cmp
popa
pop
fiadd
inc
mov
cmp
cmp
xor
sbb
popa
pop
inc
dec
and
xchg
mov
xor
or
and
stos
(bad)
cmp
xor
cwde
iret
imul
shl
adc
and
adc
mov
dec
inc
dec
es
rol
push
cs
and
xchg
xor
xor
sbb
inc
fdiv
cmps
xchg
repnz
aad
or
and
pop
xor
xor
xor
in
dec
add
ins
cmp
(bad)
mov
adc
cmp
mov
popa
or
test
arpl
popa
mov
push
inc
push
cwde
sti
dec
add
cdq
mov
sbb
cmovo
adc
and
adc
and
adc
lods
imul
jb
mov
cmp
sub
fs
push
call
push
pop
push
lea
push
in
repnz
bound
or
addr16
cmp
sub
mov
xor
jo
push
xor
cmp
sbb
lds
adc
sbb
sub
stos
imul
sub
es
push
mov
aas
pop
popa
xchg
jp
into
sub
add
xor
pushf
ret
fcom
test
lock
stos
jns
xchg
and
pusha
cwde
add
test
cmp
dec
push
js
out
fsub
cmp
loop
sub
xlat
cld
push
cmp
call
lahf
test
cmp
jno
sahf
dec
xrelease
loop
and
pop
dec
pop
mov
push
or
dec
sbb
inc
jno
mov
mov
jns
dec
fisub
or
push
adc
xor
dec
cmp
cmp
and
arpl
mov
and
cmp
pop
(bad)
gs
sub
pop
sub
pusha
std
mov
inc
fisub
mov
(bad)
aaa
sbb
les
scas
repnz
adc
lock
imul
test
ret
jb
imul
cdq
and
sub
rcr
sbb
sub
inc
dec
and
and
mov
adc
push
mov
icebp
add
and
add
inc
(bad)
imul
inc
nop
mov
shl
fnstenv
or
loop
adc
cdq
sub
add
aad
fisub
sub
cld
sub
ins
sub
jmp
arpl
xchg
lock
out
hlt
mov
xchg
shl
and
(bad)
and
retf
and
jge
neg
jl
cmpps
mov
jge
xor
rcr
lea
mov
popa
mov
sub
dec
ror
test
arpl
xchg
mov
add
and
dec
jl
sbb
test
sub
les
dec
fidiv
enter
aaa
inc
add
sub
pop
gs
xor
push
xor
or
cmp
in
aaa
push
ins
test
inc
mov
les
and
inc
test
sub
sbb
jp
dec
enter
data16
test
jo
xchg
cmps
dec
push
xor
inc
inc
adc
les
imul
cmp
clc
fcmove
inc
inc
inc
imul
imul
xchg
dec
ror
or
(bad)
cs
inc
int
out
lea
mov
mov
mov
xchg
cwde
adc
test
push
jb
sub
dec
aam
cmp
jmp
inc
mov
daa
pop
jns
or
adc
cmp
imul
mov
dec
repnz
aam
xor
nop
ds
in
add
push
mov
les
das
adc
adc
and
sbb
imul
dec
xor
jg
adc
bound
mov
dec
pop
and
push
imul
or
sbb
sub
add
(bad)
pushf
add
xor
cmp
popa
arpl
adc
adc
cmps
dec
push
cmp
pop
es
loope
imul
lods
cmp
mov
in
cmp
sub
mov
and
jl
push
mov
xor
fisub
sub
and
and
bound
rol
inc
pop
es
jge
sbb
inc
inc
push
add
jmp
fsub
sub
mov
and
xor
(bad)
aam
push
mov
adc
(bad)
adc
push
push
jl
shl
mov
sar
xor
mov
data16
mov
add
mov
mov
xchg
xor
ja
adc
jp
add
cmp
arpl
stos
inc
push
pop
jp
cs
jecxz
and
ss
xchg
into
adc
ins
enter
cmc
adc
cmc
(bad)
and
and
dec
movs
xor
mov
push
lea
sub
push
ficom
jle
stos
and
in
inc
fs
nop
push
adc
cmp
shl
mov
jae
or
repz
sbb
scas
sub
sbb
rcl
pop
jae
mov
jmp
call
daa
inc
sbb
dec
mov
mov
push
dec
fild
pusha
ins
xchg
fist
add
xor
mov
ins
sub
mov
and
test
jb
sub
ins
das
shl
das
xor
sub
dec
leave
(bad)
cwde
xchg
adc
cwde
xor
push
xor
xchg
fdiv
sbb
push
and
mov
jae
idiv
push
inc
es
push
push
js
cwde
repnz
test
pushf
retf
mov
lods
sub
fs
add
adc
push
add
xchg
fmul
hlt
adc
adc
fwait
retf
cmp
and
adc
es
shl
scas
sub
push
(bad)
mov
adc
outs
push
xchg
bound
adc
mov
adc
jnp
mov
pop
or
inc
push
jno
imul
push
jns
push
pop
mov
test
fisttp
int
push
ret
add
pusha
test
adc
daa
push
lods
bound
sub
push
repz
push
mov
add
and
cmp
pop
adc
inc
push
sbb
dec
adc
and
cmp
and
mov
mov
xor
mov
push
xor
cli
and
sbb
inc
icebp
pop
or
jb
push
adc
mov
dec
sbb
sbb
call
and
cmp
loopne
stos
add
mov
adc
push
sbb
retf
push
inc
dec
push
inc
inc
mov
or
mov
hlt
jo
or
xor
gs
cmc
and
sbb
arpl
std
inc
xor
and
data16
cmp
pusha
inc
pop
retf
add
pop
outs
cmp
clc
retf
jl
adc
and
call
gs
sub
fisubr
pop
ret
jns
test
and
jnp
and
jl
outs
aaa
cld
xchg
sbb
xchg
sbb
xor
stos
mov
push
add
xor
push
add
test
arpl
test
adc
or
loop
push
adc
sub
scas
in
or
pop
and
and
push
sbb
arpl
in
push
or
pop
imul
inc
inc
scas
fwait
(bad)
out
or
int
or
xlat
sti
pop
sbb
add
enter
xor
sub
push
mov
movs
out
pop
push
lock
retf
les
pop
and
sub
push
pop
loop
rol
jb
imul
pusha
cwde
push
xchg
fs
sub
or
hlt
xor
push
cdq
push
les
add
fwait
pop
je
or
push
bound
jnp
imul
outs
jno
clc
cmps
retf
sub
xchg
mov
and
dec
ss
mov
test
dec
pop
and
jae
adc
push
arpl
mov
and
iret
dec
sub
rcl
mov
jp
imul
inc
push
test
xchg
xchg
dec
mov
das
xor
bound
repz
jbe
pop
arpl
push
mov
push
es
mov
mov
test
mov
mov
es
lds
iret
lods
loope
loop
rcr
mov
xchg
imul
xor
mov
repz
mov
and
adc
test
das
xor
push
out
call
cmp
cmp
and
nop
and
mov
and
dec
and
inc
mov
mov
cmp
mov
into
add
lds
inc
jo
into
les
stos
cmp
xor
and
dec
mov
xchg
ret
jnp
xor
int3
push
retf
push
loope
adc
pop
inc
dec
ret
ins
and
daa
inc
pushf
inc
and
cmp
dec
jb
jl
sar
jle
mov
adc
loopne
rcr
xor
and
mov
ss
rol
xchg
inc
jnp
push
sub
adc
add
sub
push
stos
shl
push
jb
push
jno
add
test
and
shr
out
inc
sub
mov
jl
loop
push
xor
rcr
xor
add
dec
int3
test
mov
mov
pusha
ins
xchg
jo
pop
dec
or
pop
pop
jle
movs
jle
cmps
adc
mov
mov
inc
pusha
push
inc
sub
jge
(bad)
mov
push
push
les
inc
daa
and
movs
cwde
inc
and
adc
inc
les
dec
jb
prefetch
and
and
and
enter
mov
cmps
mov
adc
shr
mov
cmc
pop
jno
dec
int3
mov
out
ret
cmp
es
loop
leave
push
imul
dec
sub
addr16
adc
push
in
pop
inc
dec
jb
inc
sbb
mov
mov
cwde
and
and
cwde
out
in
(bad)
aas
jbe
ds
push
cmp
inc
push
inc
dec
mov
and
sar
and
xlat
ret
and
retf
or
pusha
pop
push
push
adc
cmp
mov
and
sub
pop
ret
dec
push
and
push
les
lods
je
rol
push
lods
push
gs
xor
dec
outs
jp
push
mov
aam
cs
pusha
sbb
push
out
xor
mov
ja
sub
adc
leave
and
push
push
mov
and
ret
scas
adc
and
aam
mov
jbe
mov
icebp
jo
sub
dec
push
rcl
jl
dec
push
mov
sbb
sub
xor
and
pop
push
inc
adc
fcom
xor
(bad)
dec
test
ins
mov
and
in
or
pop
mov
xchg
cs
push
bound
mov
add
mov
cld
movs
pop
sbb
loope
sub
and
pop
mov
mov
shl
out
mov
aaa
xchg
gs
inc
xchg
sbb
inc
imul
add
aas
mov
jno
ds
sbb
and
sub
sar
sbb
adc
sbb
inc
pop
(bad)
pop
daa
fiadd
stos
dec
add
fs
xchg
dec
xor
pop
lds
xchg
ins
dec
stos
and
push
add
int3
mov
xor
pop
add
dec
push
sahf
lea
inc
adc
dec
imul
call
push
and
mov
pop
or
inc
or
inc
xor
sub
or
cmp
mov
jb
js
inc
mov
cmp
or
out
(bad)
xchg
push
pop
inc
pop
mov
inc
out
push
jns
popf
push
rol
js
add
add
cdq
adc
pop
and
xchg
dec
pop
loopne
sbb
sbb
or
das
push
lods
and
jns
ficom
sbb
and
mov
or
pop
add
or
jbe
mov
xor
or
pop
xor
dec
push
test
dec
add
dec
jg
sti
ins
xchg
push
test
inc
fild
xor
cmp
in
jo
jb
addr16
mov
fisub
leave
jp
cmps
and
cmp
dec
push
or
sahf
add
mov
and
push
test
mov
push
push
pop
ror
dec
or
or
sar
shl
aad
sub
in
sub
inc
and
dec
sbb
adc
inc
fs
int3
mov
add
inc
sbb
and
adc
add
sub
add
mov
pushf
xchg
sbb
jnp
retf
add
xchg
rol
sbb
push
bound
ud2
xor
cmp
sub
jns
retf
cmp
call
xor
sbb
ficomp
pop
pusha
xor
int3
aaa
movs
loopne
jmp
mov
xor
popa
outs
adc
ror
mov
and
xchg
addr16
and
in
jbe
clc
test
mov
or
adc
sbb
dec
mov
mov
and
dec
cmp
rol
jno
pusha
punpckldq
pop
xor
and
lds
push
cli
push
test
es
push
sbb
out
mov
mov
push
je
mov
shl
sub
push
xchg
xor
jae
cmps
test
pop
jnp
fild
xor
xchg
xchg
aas
jmp
outs
adc
cmp
cmp
or
add
cwde
fs
and
sbb
pop
pop
cmc
(bad)
dec
mov
sub
lods
and
dec
jae
test
jb
ja
mov
mov
jp
add
scas
pop
(bad)
cmp
arpl
and
or
push
call
test
dec
nop
imul
mov
dec
sub
push
push
daa
inc
inc
cmp
xchg
mov
add
loope
cmp
pop
push
test
adc
sub
xor
in
test
pop
and
inc
mov
pusha
stos
imul
adc
hlt
and
test
mov
sub
fsub
pop
addr16
dec
add
xchg
inc
sub
mov
inc
sbb
lds
ins
mov
jbe
inc
cmp
pop
push
fdivr
loopne
dec
dec
hlt
dec
(bad)
inc
add
mov
sub
inc
xor
cmps
loop
mov
js
pop
xchg
pop
adc
mov
arpl
ins
cmp
xor
inc
add
push
pop
adc
(bad)
rcr
test
mov
bound
in
inc
outs
sbb
cmp
aas
adc
push
nop
xchg
sbb
dec
arpl
dec
mov
sbb
dec
and
sbb
ret
push
pop
ins
push
in
dec
mov
fidiv
inc
jne
jno
jle
stos
mov
and
push
rcl
push
dec
xchg
cmp
or
loopne
hlt
mov
push
dec
dec
or
dec
das
xor
jns
xchg
mov
js
dec
and
pop
ja
int
mov
rcl
lock
arpl
rcr
pop
arpl
rcr
mov
dec
xor
bound
mov
ret
les
in
enter
sbb
icebp
pop
std
pop
mov
mov
sub
sbb
ins
ror
adc
arpl
ins
shl
int3
add
cmp
cs
mov
popa
rcl
dec
inc
es
pop
sub
mov
and
or
addr16
mov
out
mov
adc
mov
stc
jne
dec
mov
not
add
ins
jle
ja
out
(bad)
adc
adc
sub
pusha
pusha
clc
or
ins
adc
movs
rcl
mov
loope
aas
cdq
sbb
dec
outs
cmps
mov
xchg
or
xor
mov
sbb
inc
dec
push
inc
sbb
jno
dec
add
push
outs
and
iret
xor
icebp
mov
movs
sub
js
mov
adc
ds
out
stos
xor
push
lods
jnp
or
jo
jns
sub
cmp
inc
or
inc
mov
mov
push
rol
sub
jbe
mov
je
mov
fwait
mov
mov
rol
or
and
add
test
cmp
push
push
test
mov
and
inc
mov
and
movs
sub
dec
data16
retf
inc
add
dec
imul
xor
add
adc
or
das
mov
jo
xchg
daa
mov
xchg
mov
aas
sub
xchg
test
jno
fwait
pop
ins
not
ror
cmp
call
test
xor
inc
ja
imul
cmp
dec
jl
or
jbe
push
or
(bad)
cmp
and
enter
mov
add
adc
sub
hlt
lahf
pop
sub
dec
sub
inc
adc
scas
xchg
inc
outs
dec
jno
mov
xchg
ret
retf
mov
push
ret
sbb
mov
mov
ins
ss
enter
mov
movs
nop
jp
and
mov
xor
add
mov
mov
sbb
adc
popa
daa
das
cwde
arpl
nop
mov
mov
dec
adc
aaa
aaa
dec
jp
adc
fild
call
or
dec
bound
jp
ret
lds
enter
jbe
shl
xchg
outs
jne
in
push
fs
stos
cld
jno
push
movs
mov
inc
push
into
add
jb
pop
test
jns
mov
je
xchg
rol
outs
jo
xor
mov
and
mov
mov
out
daa
mov
mov
or
sub
pop
(bad)
loop
sub
rep
test
jge
call
cmp
ficomp
rcl
cmp
in
push
stos
push
aaa
jmp
cmp
mov
cwde
and
ins
or
inc
xchg
xor
xor
mov
inc
mov
mov
scas
inc
xor
push
sbb
pop
xchg
daa
ret
dec
sub
(bad)
in
rol
pop
and
and
mov
mov
add
cmc
stos
inc
xor
and
pop
push
sub
dec
sbb
xchg
shr
sub
and
call
mov
mov
aas
out
push
lock
jmp
push
cmp
dec
and
les
mov
pusha
mov
or
dec
pop
and
jl
pop
xor
retf
mov
daa
sbb
cld
nop
outs
xor
jae
and
sub
loopne
aam
call
mov
xor
and
inc
push
push
mov
jg
pop
push
inc
push
sbb
jb
cwde
dec
movs
push
fldenv
xchg
test
gs
adc
(bad)
cmp
and
in
outs
shr
retf
and
inc
cmps
jge
(bad)
adc
sub
enter
mov
and
mov
dec
popf
mov
push
xchg
sub
mov
pushf
xchg
sub
pop
fs
adc
xor
xor
inc
loope
gs
dec
dec
push
inc
movs
test
or
ins
test
leave
push
sub
inc
test
aas
sub
sbb
dec
cmp
xchg
jp
xor
push
not
add
pop
and
xchg
cmp
pop
adc
fisub
icebp
lahf
popa
inc
stos
adc
repz
mov
fnstenv
in
or
mov
sub
shr
(bad)
mov
stos
adc
pop
and
ss
cwde
jns
cmp
mov
test
add
pop
imul
or
adc
inc
or
ja
mov
jge
rcr
test
and
dec
xor
outs
and
arpl
jno
add
push
add
sub
cld
xchg
shr
push
adc
sub
rcr
in
sbb
aas
dec
sti
mov
mov
shl
jno
mov
push
pop
imul
iret
or
inc
mov
imul
xor
and
jmp
ss
mov
mov
ror
lds
ss
add
mov
sub
frstor
push
xor
or
jo
dec
dec
mov
mov
inc
xchg
bound
fcmove
inc
es
es
pop
fstp
xchg
jecxz
cs
inc
mov
pop
in
pop
and
test
sbb
sbb
and
imul
jge
ror
and
loop
sub
repz
xor
adc
and
push
rcl
mov
push
loope
dec
inc
(bad)
imul
add
inc
aad
adc
mov
and
mov
fwait
movs
fs
movs
ja
push
and
adc
and
push
gs
cmps
in
and
xchg
xor
nop
dec
push
sub
push
imul
add
or
pop
and
dec
aam
stos
or
xchg
push
call
jae
cmc
inc
lods
dec
sbb
jp
dec
jbe
pop
mov
and
shr
outs
sub
push
into
dec
les
sbb
dec
aas
dec
adc
lahf
test
or
dec
and
sbb
call
add
xor
inc
out
pop
adc
sub
and
imul
mov
dec
nop
inc
inc
inc
pushw
out
call
mov
inc
add
(bad)
enter
clc
push
pop
scas
push
cmc
out
hlt
or
jo
daa
xor
jmp
(bad)
cld
dec
pop
(bad)
adc
mov
cmp
push
jb
fdiv
push
imul
mov
lds
and
fs
add
cmp
outs
pop
retf
add
sub
cmp
test
adc
test
jns
push
dec
mov
mov
sbb
test
dec
xchg
pop
pop
xchg
push
icebp
sub
xchg
cwde
aas
cdq
js
xchg
push
inc
dec
sbb
inc
stos
dec
aam
mov
enter
cmc
pop
add
cmp
adc
dec
dec
rol
sbb
shr
push
push
popa
xor
push
xor
adc
and
addr16
dec
in
add
(bad)
test
or
and
lods
sub
adc
fisub
das
inc
fsub
and
mov
xchg
mov
test
push
mov
sahf
add
sub
xchg
test
ss
inc
and
push
xchg
int3
jae
popa
pop
adc
outs
jno
cmp
add
mov
ss
dec
outs
cmp
test
push
maxps
adc
mov
sar
adc
fs
lds
loop
sbb
mov
sbb
jno
add
xchg
push
xchg
push
je
clc
push
jae
mov
push
mov
(bad)
xchg
push
outs
das
shl
push
dec
xor
inc
pop
pop
in
add
daa
not
mov
sbb
test
es
imul
xor
cmovne
inc
sbb
push
push
and
es
cwde
push
add
mov
daa
inc
mov
jge
or
and
xor
inc
bound
dec
popa
cs
dec
es
add
gs
dec
xlat
push
movs
mov
test
addr16
es
mov
push
push
jl
dec
sub
sub
ret
lods
dec
cmps
push
push
dec
shl
movs
les
fistp
dec
adc
and
xchg
icebp
pop
adc
sub
sub
xor
addr16
push
pushf
jnp
out
test
add
pop
xchg
xor
inc
pop
mov
ss
sub
cmp
push
pusha
daa
or
and
enter
imul
sbb
fimul
sub
push
sub
push
xchg
movs
xor
(bad)
and
dec
push
mov
(bad)
lahf
xchg
(bad)
mov
dec
nop
cmp
sbb
bound
inc
test
xchg
xor
std
jbe
push
cmc
sbb
jb
arpl
ja
shr
inc
jnp
mov
nop
(bad)
sub
ss
add
sub
cmp
push
sti
sub
dec
das
ds
arpl
push
mov
mov
add
pop
adc
ret
and
sub
mov
add
or
adc
movs
add
hlt
and
jnp
scas
push
ds
dec
shl
inc
adc
sub
mov
aad
xor
int
push
xor
pusha
repz
mov
and
pusha
add
push
pop
xor
aaa
inc
inc
inc
xchg
les
inc
sub
jo
push
pusha
push
in
shr
leave
loope
dec
aas
and
mov
jb
cmp
(bad)
dec
add
inc
fisub
mov
push
xchg
lea
cmp
jbe
sub
pop
in
xchg
pop
mov
xor
mov
or
push
pop
ret
or
test
shl
lods
xor
lea
xor
dec
adc
fdiv
cmp
fs
es
shl
adc
add
inc
push
retf
or
(bad)
sbb
inc
ss
mov
repz
call
loop
mov
cmp
or
push
call
mov
mov
push
hlt
sbb
(bad)
jmp
ret
rcl
and
rcr
and
inc
rol
scas
lds
ret
outs
lock
xor
adc
cs
inc
lods
sub
add
je
ror
add
enter
pushf
mov
stc
push
jae
ins
add
ret
mov
xchg
jae
adc
push
and
movs
pop
sbb
sbb
es
or
daa
inc
popf
adc
inc
mov
das
stos
enter
pop
ror
jno
sbb
outs
adc
(bad)
hlt
and
mov
sbb
jae
inc
dec
out
xor
add
js
ins
loope
xor
imul
sbb
mov
outs
push
adc
dec
cdq
jge
push
pop
in
loop
inc
xchg
lds
adc
addr16
cdq
pop
mov
aas
dec
dec
sub
mov
aam
xor
or
and
outs
imul
imul
cmp
jge
dec
sub
sbb
or
cmp
mov
pop
stos
jb
je
hlt
xor
call
pop
aas
xchg
rcl
sbb
inc
ins
sub
outs
sbb
mov
jl
ins
sub
daa
sub
mov
test
and
xchg
cdq
sub
bound
test
sbb
pop
ja
shr
pop
and
pop
les
stc
inc
scas
neg
jl
sar
xchg
mov
xchg
cmp
stos
sub
jae
add
adc
das
(bad)
clc
ja
ficomp
adc
jae
jmp
popf
inc
cs
dec
inc
movs
jb
jl
fs
pop
add
inc
sysenter
ret
dec
test
jmp
sub
sub
test
and
push
daa
and
inc
xor
push
cmps
pop
mov
cld
or
test
sbb
in
or
aaa
(bad)
jmp
xor
sbb
bound
jb
xor
clc
inc
push
jae
or
inc
dec
pusha
adc
sbb
push
bound
push
mov
inc
int
push
rcr
xchg
jo
cld
or
addr16
and
out
xchg
dec
push
and
inc
pop
leave
cmp
loope
(bad)
inc
cld
adc
stc
xchg
inc
push
int
sbb
adc
dec
stc
xchg
push
inc
dec
mov
ins
pop
jb
leave
adc
retf
adc
pop
es
cmp
inc
xor
inc
ins
adc
aam
ss
jae
inc
jp
mov
dec
pushf
inc
test
hlt
or
aaa
pop
test
clc
adc
push
adc
push
and
mov
stos
or
jne
push
arpl
xchg
imul
or
and
popa
lea
fidivr
stos
scas
out
mov
scas
and
data16
sub
xchg
adc
mov
sbb
jmp
add
or
fadd
dec
sbb
jae
popf
mov
xor
dec
call
stos
das
push
pop
leave
pop
jmp
add
jg
aas
xchg
push
jne
cmp
je
movs
loop
cmp
into
jns
sub
inc
push
jns
and
push
inc
bound
repnz
les
inc
mov
push
push
shl
push
and
cs
jp
enter
rcr
adc
sub
xchg
jbe
es
mov
add
das
out
xor
inc
scas
test
xor
mov
xchg
xor
xchg
repnz
and
inc
test
dec
sub
outs
jns
inc
mov
cmp
cmp
dec
and
adc
(bad)
push
or
arpl
rcl
in
dec
popa
enter
push
and
call
or
and
sbb
mov
outs
and
pop
pop
xchg
jle
inc
lahf
and
aam
repz
pop
xchg
pop
leave
fcom
or
xor
out
or
or
dec
sub
jge
pop
and
out
and
fdiv
cmp
jne
inc
sub
lods
cwde
pop
popa
popf
jae
xor
push
cwd
mov
ss
test
aam
cli
xor
mov
jne
adc
add
mov
sub
mov
pusha
xor
pushf
xor
sub
enter
mov
ficom
sbb
or
dec
sub
dec
add
hlt
add
sub
mov
dec
imul
pop
adc
ins
xlat
call
js
shl
mov
mov
or
je
in
cdq
nop
or
xor
xor
ins
shr
mov
sub
jno
add
cs
dec
jns
imul
add
adc
or
data16
mov
ret
cdq
xchg
or
sub
adc
xor
das
mov
add
xor
int
das
jnp
dec
shr
adc
sbb
cs
xchg
inc
inc
mov
jle
sub
adc
cwde
sub
and
mov
xchg
loope
cmp
shl
cmp
cmp
mov
dec
xor
mov
mov
fs
int3
ss
std
sbb
and
and
mov
mov
xchg
jmp
icebp
daa
add
loope
cld
xchg
inc
mov
lock
fwait
dec
xor
seto
ins
push
adc
sub
cwde
test
sbb
fcom
push
rcl
xor
ds
and
push
sub
sub
test
mov
sbb
daa
sub
das
inc
xor
inc
fwait
pusha
push
lds
mov
pop
arpl
xchg
in
inc
xchg
sub
add
push
xor
mov
mov
jae
sub
push
mov
sbb
mov
jns
lock
es
or
push
jecxz
sbb
outs
sub
mov
push
push
or
test
xor
arpl
addr16
push
sub
dec
xchg
daa
bound
push
jne
and
xor
inc
cmp
dec
popa
aad
(bad)
sub
pop
cmps
add
or
ror
inc
sub
(bad)
sub
jp
mov
ror
adc
mov
sub
push
push
push
sti
xor
aas
mov
inc
jge
jp
(bad)
popa
imul
pop
clc
mov
test
adc
dec
js
lea
inc
jmp
inc
inc
cwde
inc
mov
mov
bound
and
repz
sub
xor
cli
outs
js
xchg
pop
xchg
inc
(bad)
sbb
mov
xor
and
aaa
pop
inc
stc
push
shl
and
imul
sub
lea
sar
jg
lock
adc
pop
push
sub
pop
mov
ins
gs
xor
int3
cmp
xchg
mov
movs
mov
sbb
pop
jns
xchg
dec
mov
jnp
int3
or
inc
rol
dec
or
mov
fs
jb
aas
leave
inc
cwde
xchg
popa
es
inc
mov
outs
daa
int3
or
or
adc
cmp
mov
jb
xchg
jno
inc
aas
fimul
jge
and
out
nop
pusha
inc
and
das
leave
mov
push
test
add
es
mov
out
nop
push
jo
fsub
add
xchg
mov
test
inc
add
imul
sbb
and
or
xchg
int
out
sbb
adc
mov
adc
test
popf
sub
push
sub
inc
add
ret
inc
dec
push
lods
adc
xlat
mov
sbb
push
ror
push
(bad)
mov
push
push
dec
icebp
cwde
sbb
mov
jp
mov
mov
popa
gs
in
enter
ret
push
adc
div
(bad)
inc
leave
jne
dec
xor
imul
repnz
arpl
sbb
and
or
pop
inc
nop
bound
test
enter
adc
inc
inc
push
sub
(bad)
or
nop
jl
inc
xor
outs
xor
and
fiadd
pop
inc
int3
add
nop
mov
mov
rcl
out
shl
xor
push
gs
and
dec
lods
xor
add
jbe
fsubr
ret
push
xor
jae
push
das
add
and
or
cmp
mov
movs
arpl
or
cmp
dec
xor
lds
mov
mov
inc
sbb
fld
sub
retf
mov
adc
test
mov
das
and
and
mov
pusha
and
dec
jbe
mov
sub
dec
push
pop
dec
in
fsub
sbb
add
add
dec
or
dec
dec
xchg
neg
ins
xor
fadd
inc
sbb
adc
stos
push
arpl
adc
cld
adc
rol
cmp
leave
push
push
call
jmp
xor
mov
inc
or
sbb
push
call
cmp
aaa
dec
add
enter
push
xor
and
in
xor
jecxz
lds
sub
test
inc
sub
ficomp
push
arpl
lds
jno
xchg
and
or
cld
or
(bad)
sahf
xchg
gs
adc
adc
sub
inc
movs
cmp
test
and
dec
in
fldenv
and
inc
ror
sbb
push
or
cmp
sub
push
(bad)
cwde
add
std
mov
inc
push
aas
or
shl
dec
shr
mov
ficom
js
pop
rol
pop
push
or
sub
into
add
add
dec
adc
adc
jnp
cmp
cwde
aad
jbe
ret
shl
xor
ss
cmps
adc
das
push
aad
dec
mov
inc
out
sbb
fsub
and
inc
or
stos
add
(bad)
clc
cmps
ja
and
xor
sbb
mov
enter
dec
ins
push
sub
gs
sbb
inc
aam
cmps
dec
imul
js
retf
adc
arpl
mov
int3
mov
ret
je
ins
ror
or
sub
call
mov
xchg
sub
xchg
or
aaa
cmp
mov
pop
pusha
mov
rcl
pop
jle
mov
and
push
push
pusha
adc
fcmovnbe
or
popa
fs
inc
mov
dec
repnz
jle
jecxz
dec
and
test
jp
int3
inc
mov
and
sbb
pop
push
pushf
sbb
sbb
cmp
add
adc
int3
mov
jb
xchg
je
mov
jmp
or
and
inc
sbb
loope
and
(bad)
movs
adc
xchg
push
mov
cmp
fwait
jno
mov
loopne
js
ret
xor
and
sbb
push
xor
cmp
and
sub
mov
fs
xor
adc
mov
push
retf
push
inc
jb
test
mov
push
push
or
adc
sbb
ss
xor
ficom
mov
cdq
xchg
sbb
hlt
adc
sbb
push
push
jno
push
popa
rcr
scas
xor
jns
sahf
dec
adc
push
sub
pop
movs
loope
jmp
xchg
cdq
jbe
pop
retf
add
mov
add
and
and
cmp
and
push
push
or
xchg
sti
cmp
push
mov
inc
jmp
or
rcl
cmp
cdq
inc
adc
add
adc
cmp
fcom
sbb
mov
xchg
pop
mov
xchg
inc
add
out
inc
push
adc
idiv
xchg
jb
enter
shr
xchg
je
adc
sbb
cmp
mov
imul
jae
sbb
test
ins
and
daa
ret
test
push
fisub
mov
xor
or
aaa
cmp
adc
inc
xor
imul
pop
aaa
cli
stos
cmc
xchg
and
pusha
xchg
sbb
mov
test
cmps
mov
or
jne
and
jae
retf
sub
inc
adc
inc
or
aas
aas
imul
pop
test
inc
dec
dec
cmps
adc
xor
adc
add
data16
test
inc
stc
pop
xchg
test
cmp
and
and
and
inc
or
mov
and
popa
inc
movs
sub
pop
ins
aaa
lock
pop
dec
ds
sub
scas
sub
lahf
test
mov
inc
sar
sub
adc
and
aas
lea
fs
icebp
push
mov
adc
enter
enter
cmps
cmp
jmp
test
mov
mov
arpl
add
adc
ins
je
xchg
js
daa
push
jmp
add
mov
push
into
gs
nop
jbe
and
push
pushfw
int3
adc
and
cmp
mov
sub
les
imul
push
jbe
scas
push
and
dec
or
dec
cmp
cdq
add
sbb
dec
xor
cmp
jns
dec
inc
outs
jae
mov
mov
dec
push
enter
jbe
inc
sbb
pop
fcom
jne
popa
add
and
dec
mov
dec
xor
cmp
mov
mov
push
and
sub
xchg
imul
call
xor
dec
adc
xor
xor
movs
adc
xchg
test
cli
dec
xchg
loopne
fwait
rol
ret
mov
and
pop
stc
sub
loopne
xchg
inc
mov
je
mov
jnp
les
and
inc
pop
push
mov
js
sbb
xor
popf
and
push
je
cld
inc
les
retf
call
xchg
adc
bound
cmp
add
xor
es
inc
pusha
cmps
dec
push
push
sbb
ins
jp
push
push
dec
mov
rcl
aaa
es
add
popa
push
jne
push
adc
inc
push
rol
in
adc
das
add
adc
pop
xor
arpl
(bad)
popa
cdq
fnsave
xor
pop
outs
mov
and
sar
sbb
cwde
je
out
sti
inc
cmp
std
sub
and
jp
push
mov
pushf
push
adc
stos
test
xchg
loope
mov
clc
inc
sub
shl
ins
mov
mov
gs
popf
cwde
dec
std
push
and
bound
adc
bound
ror
dec
add
dec
imul
lods
mov
ja
pusha
mov
mov
out
mov
nop
push
push
sub
fldenv
inc
retf
cli
sbb
sub
movs
mov
push
nop
(bad)
inc
xor
sbb
pop
rol
push
mov
inc
dec
aas
adc
or
mov
scas
movs
js
dec
sub
stos
cmps
xor
xchg
and
retf
sbb
and
sub
jb
and
and
dec
mov
push
xchg
jmp
lock
cdq
cmps
jns
aam
jl
inc
add
int3
shr
inc
cmp
add
sahf
mov
sub
ret
push
adc
push
pop
inc
dec
xchg
pop
push
aaa
call
jmp
inc
mov
or
ins
and
adc
dec
(bad)
clc
inc
xor
pop
jno
icebp
inc
xor
out
inc
cdq
dec
sub
les
cmp
sub
sub
jno
(bad)
adc
adc
xchg
(bad)
test
or
sub
mov
push
mov
and
mov
jns
jae
dec
adc
sub
mov
xlat
mov
aaa
fadd
sbb
dec
int3
adc
call
and
sbb
xor
fisttp
pop
enter
and
xor
outs
jo
test
cmp
pop
imul
movs
hlt
adc
outs
dec
mov
or
dec
out
sub
rol
pop
nop
adc
ja
inc
push
jne
jbe
aam
sub
dec
pop
jl
test
push
dec
push
sub
mov
sbb
int
dec
in
ror
add
xchg
or
rcr
les
popf
pop
pusha
and
or
mov
sub
(bad)
add
mov
sub
sub
ins
cmp
js
aaa
cmp
scas
sbb
cmps
adc
adc
xchg
push
stc
aaa
ror
push
inc
mov
inc
cwde
inc
adc
jns
inc
mov
jns
in
test
inc
mov
pusha
push
pop
push
add
jge
push
add
mov
adc
push
popa
mov
retf
adc
adc
ss
and
jnp
adc
push
scas
cmp
sbb
jno
ret
sbb
sbb
outs
push
repz
push
or
dec
xchg
dec
call
mov
das
dec
cmp
xchg
jo
sub
xchg
shl
sbb
ror
cmp
inc
in
and
mov
sub
xor
inc
mov
mov
enter
jns
xor
and
push
xchg
push
push
call
dec
cmp
mov
jge
mov
(bad)
mov
mov
and
test
(bad)
xor
xor
inc
sbb
mov
loope
adc
retf
cs
(bad)
adc
pop
jo
push
outs
test
call
push
push
and
test
and
sbb
push
jbe
shr
mov
xor
and
xor
and
out
xor
outs
adc
jns
aam
push
jb
dec
cmp
outs
sub
xor
and
cwde
test
pop
cmp
xchg
push
mov
mov
(bad)
inc
stos
in
(bad)
(bad)
cmp
(bad)
pushf
add
xchg
inc
les
xchg
inc
or
sbb
mov
push
jo
sub
sbb
mov
aaa
push
fiadd
push
mov
pusha
and
clc
xor
mov
les
xchg
imul
test
jge
xchg
adc
inc
aad
imul
cmp
xchg
push
das
mov
aaa
dec
dec
mov
dec
mov
push
rol
int
dec
test
test
outs
cdq
push
jnp
push
and
bound
sub
ins
xchg
pop
inc
push
and
test
cmp
in
icebp
cmps
std
push
sub
sti
sub
jnp
inc
xchg
scas
xchg
xor
sbb
daa
fwait
sbb
ret
pop
jb
and
adc
adc
mov
pop
or
cdq
cwde
sbb
xlat
retf
dec
xchg
pop
arpl
ja
adc
dec
sub
or
inc
mov
mov
push
in
sub
inc
jg
xor
dec
mov
push
inc
aad
daa
dec
(bad)
rcr
gs
sbb
les
and
das
xor
call
push
test
or
and
cld
and
xor
inc
xchg
push
adc
jne
ja
test
xchg
daa
mov
(bad)
ror
xor
and
cmp
push
xor
movs
sbb
rol
jl
adc
and
neg
test
push
pop
lock
pop
pop
fdiv
shr
aaa
je
add
shl
or
xor
push
push
mov
mov
cmps
cmp
fild
sub
xchg
xor
or
loop
aas
xchg
test
xor
sub
inc
ss
mov
out
sub
jno
jne
ins
mov
mov
or
gs
dec
and
xchg
aam
imul
shl
xor
mov
es
xchg
sbb
inc
pop
and
cwde
js
sub
or
push
fst
(bad)
sub
pop
loopne
js
push
inc
in
cmp
sbb
inc
push
pusha
inc
push
adc
sub
jne
xchg
xchg
and
sbb
scas
bound
mov
inc
xor
adc
imul
inc
inc
test
out
push
movs
sub
pop
pop
jl
sub
or
out
bound
push
movs
cmp
sub
dec
jl
adc
sub
dec
int3
mov
sub
adc
sub
and
sbb
push
movs
stos
xor
ret
das
push
xor
mov
dec
das
jl
xchg
sbb
arpl
sbb
jnp
test
ins
in
jbe
mov
pop
dec
call
inc
mov
daa
push
adc
and
xor
inc
xchg
outs
cmp
jb
dec
push
shr
add
sub
arpl
adc
ret
js
mov
ins
mov
mov
mov
bound
lea
push
xor
pop
je
mov
sub
dec
inc
sbb
outs
pop
push
pop
or
xor
mov
sbb
ja
sbb
or
aas
imul
jae
inc
enter
dec
shl
or
sub
xchg
adc
jge
call
inc
sbb
adc
or
pop
in
cmp
inc
cdq
mov
adc
xor
pusha
pop
addr16
inc
xor
xor
inc
dec
pop
pop
leave
push
xor
inc
das
push
jecxz
mov
cmp
pop
dec
push
inc
xor
inc
push
push
and
inc
arpl
lock
mov
inc
and
inc
bnd
push
jmp
xchg
into
rol
repz
iret
rol
sub
cs
neg
not
jo
push
sbb
lds
mov
mov
dec
or
mov
xchg
jle
aaa
loop
fisub
clc
sbb
hlt
pop
adc
ds
push
push
rol
or
vfrczps
ins
push
inc
aam
dec
aas
push
fnstcw
mov
push
(bad)
ins
sub
or
int
fsub
sub
imul
daa
test
xchg
and
arpl
bound
loop
pusha
xchg
test
sub
jnp
stos
call
sbb
repz
xor
push
inc
arpl
jae
push
nop
pusha
fcomp
jno
fs
sbb
push
jne
movs
sbb
movs
adc
and
jnp
enter
push
mov
fmul
xchg
jmp
adc
add
cmps
leave
pop
and
add
and
ss
xchg
mov
aad
ror
jecxz
stc
cwde
or
test
cmp
jmp
test
add
bound
adc
mov
dec
call
adc
xor
popa
pop
retf
arpl
sub
xchg
idiv
sub
cs
outs
test
sbb
ja
xlat
xor
movs
xlat
jne
sub
test
jmp
les
pushf
xlat
lds
xchg
jns
rol
xor
jmp
cmps
mov
inc
and
(bad)
fimul
pop
mov
test
mov
push
das
xor
and
scas
adc
add
arpl
sub
imul
push
aaa
push
outs
inc
sbb
push
aaa
movaps
dec
dec
les
jecxz
sub
or
and
movs
and
adc
push
cmp
add
je
popa
jae
cs
xchg
jns
sub
cmps
neg
out
jecxz
sbb
js
imul
jb
imul
or
sub
sub
jmp
jge
test
inc
aaa
dec
adc
fwait
cmp
xchg
adc
nop
jno
mov
or
shr
cmp
pushf
adc
dec
ja
add
xor
mov
or
ja
out
cmp
icebp
xor
test
xor
pop
push
dec
add
punpckldq
pop
xor
add
fidivr
pusha
xchg
lea
sbb
dec
inc
mov
int3
xchg
(bad)
outs
sub
test
bound
js
or
pop
mov
mov
les
sub
add
js
stos
xchg
call
ss
test
dec
add
bound
jnp
push
outs
lds
inc
repz
ret
jp
mov
adc
jo
xor
and
into
inc
dec
inc
dec
push
addr16
retf
add
xor
xor
inc
xor
jo
push
bound
cs
fs
test
push
es
dec
pop
cmp
push
add
dec
dec
xor
fcom
or
and
int
inc
dec
push
out
inc
and
aas
xor
dec
outs
and
jb
add
fld
fld
ror
sub
les
xor
jns
aaa
stc
(bad)
stc
add
loop
gs
inc
or
adc
ror
sbb
inc
test
inc
or
xchg
and
or
and
in
shl
xchg
cmp
push
dec
sub
daa
cmp
and
arpl
inc
xor
inc
inc
sti
test
inc
and
xchg
sti
pop
xor
cmp
dec
sbb
pop
and
adc
jge
out
mov
inc
adc
ret
imul
inc
cmp
push
cwde
adc
mov
fmul
xchg
test
inc
xor
scas
(bad)
mov
pushf
push
test
inc
test
pop
inc
test
xor
jge
inc
push
movs
(bad)
mov
cwde
sub
pop
arpl
es
call
pusha
push
into
push
sbb
stos
lea
xor
inc
or
gs
call
or
jae
adc
test
push
sub
xor
push
mov
sub
movs
fimul
cmc
ins
mov
pop
cmps
jo
fmul
sub
cli
adc
into
sbb
xor
pop
(bad)
add
cmp
movs
jb
mov
pushfw
into
add
push
call
add
nop
cmps
aaa
cld
nop
sub
and
cmp
push
sbb
and
repnz
mov
xchg
jo
inc
movs
in
sbb
xchg
inc
pusha
aaa
inc
push
sbb
and
cmp
and
push
pusha
and
gs
int3
mov
dec
cs
jmp
sub
add
nop
jno
xchg
push
inc
sub
xor
jg
dec
dec
mov
or
push
sub
dec
jae
test
dec
mov
mov
mov
inc
sbb
dec
lods
or
adc
inc
test
adc
ds
rcr
jne
bound
pop
test
push
push
enter
and
xor
pushf
or
xlat
and
xor
mov
inc
pop
and
inc
out
adc
mov
jp
bound
inc
add
gs
or
inc
push
inc
fsub
inc
dec
and
xor
shl
adc
xchg
jnp
es
add
xchg
dec
sar
xor
pop
in
sub
xor
rcl
cmps
add
bound
cwde
push
adc
push
add
ds
sahf
push
push
and
sub
loope
mov
push
add
adc
popa
push
sahf
xchg
xor
dec
mov
lds
ins
mov
pop
or
loope
or
neg
gs
inc
inc
mov
call
inc
or
aas
(bad)
icebp
dec
pusha
push
ins
ins
mov
push
mov
out
and
xchg
mov
loopne
int3
mov
pop
dec
les
ror
mov
lds
sub
sub
inc
xor
push
aas
dec
sbb
jb
movs
sub
ror
(bad)
jl
cs
dec
and
jb
icebp
pushf
and
not
push
ret
cmp
ds
in
add
pushf
test
stos
push
jmp
inc
mov
mov
mov
mov
push
mov
add
adc
push
shl
popa
test
push
movs
sbb
sbb
pop
dec
data16
inc
mov
sbb
cmps
lahf
mov
fst
ret
gs
and
and
xchg
enter
fld
pop
or
aas
into
jno
outs
pop
call
pop
(bad)
js
jns
dec
push
push
jns
xor
mov
xor
mov
(bad)
fs
adc
jae
pop
mov
sub
and
push
push
fidiv
adc
xlat
cmp
ds
adc
or
fwait
movs
jp
ret
test
push
aas
test
test
rcr
ds
arpl
push
call
xchg
xor
mov
mov
aad
add
dec
xor
cmc
dec
test
jo
cs
cmc
cmps
push
bound
and
sub
and
push
jmp
leave
mov
dec
rcl
je
inc
xchg
jno
in
bound
pop
xor
xchg
pop
sub
aas
daa
dec
arpl
mov
xor
pop
pop
fwait
movs
lods
test
push
sub
inc
and
call
call
sub
sub
test
sub
inc
xchg
mov
cmp
mov
and
and
mov
jnp
fwait
adc
cmp
and
sub
xchg
aam
and
xchg
ins
push
and
int
test
(bad)
sub
mov
mov
les
in
cmp
jmp
cmp
(bad)
out
lahf
adc
xor
enter
and
inc
aaa
xor
xchg
jl
xchg
(bad)
jo
jbe
aas
sub
test
aam
int
and
push
mov
and
inc
mov
mov
pop
push
pop
adc
xor
sub
xor
jle
nop
dec
cmp
cmp
jo
adc
sbb
pop
dec
adc
inc
dec
or
pushf
jg
jge
dec
push
cmp
and
enter
inc
into
lea
cmps
and
sub
call
data16
mov
mov
xor
cmps
mov
aaa
push
jno
retf
sub
xor
push
enter
cmp
cmp
call
cmp
sub
inc
mov
pop
and
dec
or
nop
mov
cmp
mov
ins
mov
mov
nop
stc
pusha
sub
jbe
les
and
adc
cdq
xchg
(bad)
stos
outs
sub
dec
popa
cmp
popa
test
mov
mov
imul
jp
add
ret
jl
sub
push
mov
call
pop
push
call
xchg
lahf
stos
pop
inc
mov
xor
test
loope
cmp
or
int3
push
push
xor
mov
shr
movs
push
add
or
aaa
mov
mov
pop
or
adc
pop
test
push
xor
cmp
xchg
je
pushf
sbb
aas
push
lds
dec
repz
repz
fist
retf
sti
cmp
or
test
sub
rcl
inc
xor
inc
ins
mov
arpl
push
mov
xor
dec
push
dec
adc
or
adc
jmp
(bad)
nop
mov
xor
mov
imul
(bad)
and
es
dec
mov
mov
jb
aas
shl
sbb
xor
and
add
es
cmp
push
and
sahf
hlt
sub
test
das
popf
(bad)
aas
add
cli
push
dec
inc
addr16
and
cmp
shl
jle
jnp
icebp
adc
sbb
jae
pop
mov
retf
cmp
and
mov
xor
movs
pop
pushf
int
shl
loope
dec
jb
popa
ss
xor
cmps
jo
push
cmp
inc
mov
xchg
or
inc
adc
loopne
or
inc
test
sbb
xor
and
add
es
xor
jno
in
or
ins
mov
scas
push
inc
lds
xor
add
(bad)
mov
icebp
or
and
ret
sbb
mov
lea
mov
pop
push
cs
sbb
jb
push
daa
xor
addr16
rcl
xchg
mov
test
dec
sbb
ins
imul
dec
inc
ret
xor
test
cwde
sub
xor
push
pop
xchg
cmp
xchg
bound
push
inc
cdq
cmp
out
or
xor
aad
dec
mov
mov
fldenv
out
xchg
mov
inc
cmp
ja
js
and
mov
int3
cmps
add
jne
and
inc
bound
outs
mov
test
add
and
jg
sub
sub
push
sbb
ss
sbb
retf
sub
push
imul
fwait
add
dec
outs
adc
dec
ret
xor
dec
push
fimul
xchg
and
add
pop
mov
inc
cmps
pop
dec
mov
loop
in
dec
fs
or
inc
inc
xchg
stc
mov
rcr
loopne
push
shr
or
test
lock
popa
mov
ss
and
imul
and
inc
or
adc
or
gs
and
sub
sbb
inc
dec
sbb
jmp
repz
or
stc
pop
dec
inc
pop
lds
shl
das
daa
bound
jb
jb
xchg
in
nop
cmps
inc
call
inc
aam
xchg
sub
xor
inc
and
ret
jnp
xor
sub
ja
lahf
jo
imul
push
jge
add
or
sub
push
dec
out
mov
and
xchg
xchg
pusha
daa
pop
jb
dec
loope
cmp
sbb
mov
mov
addr16
and
xchg
in
dec
xor
dec
and
mov
mov
cld
and
add
inc
call
fs
dec
pop
adc
xchg
dec
(bad)
dec
pop
popa
or
stos
(bad)
jne
add
xor
je
cwde
add
loop
(bad)
outs
jl
mov
and
push
nop
or
jne
mov
jns
xor
or
xor
push
cmps
or
repz
aad
or
xchg
adc
adc
sti
mov
add
rol
dec
push
mov
adc
aas
lds
call
jle
movs
cmp
adc
adc
pop
and
dec
jb
or
inc
and
mov
inc
sub
rol
mov
pusha
and
or
cmp
test
jp
popf
mov
push
movs
scas
test
bnd
push
mov
xor
cmp
dec
or
popa
mov
fbld
retf
mov
xor
je
sahf
and
push
inc
xor
enter
xchg
popa
popa
mov
inc
mov
dec
xchg
repnz
mov
add
push
xchg
sub
push
mov
mov
cmps
inc
xor
pop
add
fdivr
inc
imul
cmp
push
test
cmps
sub
aas
push
les
inc
pop
or
sub
(bad)
(bad)
enter
and
and
test
repnz
enter
and
fs
and
sub
test
scas
push
les
mov
dec
xchg
and
or
test
mov
test
inc
ins
mov
sub
inc
and
int3
jae
cdq
dec
and
mov
and
aam
repnz
mov
and
pop
leave
pop
push
xor
or
fisubr
rcr
cmps
inc
push
pushf
pusha
sahf
aas
add
retf
mov
adc
inc
sar
sub
sti
cmp
das
jb
or
aad
dec
pop
jbe
pop
inc
mov
dec
dec
fidivr
inc
imul
mov
lock
pop
shr
inc
inc
lea
dec
mov
jo
push
shl
loopne
inc
sub
pop
adc
jle
aas
jp
jnp
movs
inc
fimul
lahf
pop
pop
jle
cmc
inc
xor
es
fidiv
jnp
xchg
sbb
and
sub
xchg
jb
inc
inc
mov
dec
inc
movs
jbe
(bad)
(bad)
xchg
retf
popa
cmp
and
or
sar
sub
aas
cmps
xor
jmp
sbb
ins
popa
outs
mov
pop
test
mov
cmp
inc
xor
sbb
inc
out
call
mov
pop
imul
xchg
pop
pop
push
mov
pop
pop
pop
pop
in
or
and
jle
and
js
daa
mov
xchg
dec
dec
or
add
test
inc
add
sub
xor
or
or
out
sbb
pop
movs
ds
aaa
push
inc
xor
rol
sub
pusha
mov
cmp
das
lea
js
fist
inc
adc
sub
pop
and
and
ins
in
add
xor
leave
mov
sub
mov
repnz
xchg
outs
sub
in
add
or
arpl
pop
mov
push
idiv
and
sbb
sahf
dec
add
push
sub
test
pop
test
fs
dec
test
xor
aam
mov
sub
int
(bad)
sahf
and
mov
or
loopne
push
imul
sub
repz
hlt
mov
test
push
lock
push
mov
enter
into
mov
and
daa
or
and
test
sbb
adc
and
jmp
jnp
xchg
xchg
mov
loope
push
mov
cmp
ins
shr
pusha
jp
sub
and
sbb
push
lock
xor
adc
test
inc
xor
pop
ins
inc
add
cs
xchg
std
pushf
or
cdq
sbb
test
or
in
inc
inc
repnz
cdq
pop
aad
sub
cmps
ret
sahf
cmp
in
sub
stos
adc
xchg
add
imul
pop
push
lea
lds
(bad)
imul
and
jmp
test
lds
rcl
pop
dec
nop
jp
jmp
and
fstp
jb
hlt
fsub
adc
lds
data16
data16
ret
push
call
push
mov
dec
(bad)
pop
mov
ins
data16
inc
jecxz
inc
sbb
out
pop
inc
and
les
sti
dec
jnp
push
je
sub
imul
xor
fs
jns
pop
test
popa
pop
sub
adc
dec
inc
pop
mov
aas
cmp
sti
test
cs
retf
fidivr
int3
nop
daa
mov
loope
dec
adc
pusha
cli
xor
hlt
pop
and
sub
enter
ror
fwait
outs
scas
adc
or
pop
sbb
xlat
mov
or
inc
inc
mov
cmp
(bad)
shl
add
mov
test
mov
and
out
arpl
push
shr
dec
jp
xor
adc
nop
inc
push
lock
sub
mov
jl
dec
dec
push
add
jl
std
and
dec
mov
scas
and
jno
movs
jl
mov
test
es
and
sbb
dec
and
xor
sbb
push
mov
dec
es
in
inc
pop
popa
jmp
and
sub
push
cmc
mov
cmps
cs
xchg
dec
dec
int3
fs
pop
push
mov
mov
and
xor
mov
or
adc
sub
pusha
rol
inc
cmps
scas
cwde
ss
ret
les
jl
div
imul
jl
mov
push
dec
and
and
fwait
iret
mov
add
jb
arpl
or
outs
sbb
aas
arpl
mov
mov
jae
aaa
pop
aam
mov
jp
inc
stc
cs
inc
or
arpl
arpl
xchg
(bad)
jnp
adc
rcr
daa
repz
mov
jg
or
aam
mov
pop
into
sub
xor
or
imul
jo
inc
sbb
and
and
add
and
bound
call
outs
jae
mov
sbb
and
test
cs
jne
rcr
imul
and
out
fild
jno
dec
cmp
test
mov
js
out
mov
jb
pop
mov
jl
xlat
jo
cmps
inc
cwde
sub
outs
sbb
pop
fs
fimul
ins
push
cli
pop
lock
jo
imul
jo
bound
push
add
inc
out
enter
pop
sub
cs
jbe
jo
test
inc
je
xor
mov
pop
xor
and
test
inc
pop
or
mov
jo
das
push
sub
daa
dec
outs
mov
dec
gs
addr16
outs
jmp
loope
inc
sbb
int3
dec
xchg
(bad)
aas
pop
dec
cs
outs
dec
xchg
ss
fs
mov
sub
cmp
jne
scas
leave
(bad)
dec
mov
sti
ins
sbb
out
mov
inc
mov
fistp
bound
gs
movs
stos
pop
test
mov
jae
jg
(bad)
cmp
mov
aaa
mov
test
jecxz
mov
pop
and
movs
scas
ja
xor
push
xlat
and
inc
or
and
push
ins
daa
test
icebp
cmp
int
inc
push
in
fldcw
xor
sbb
dec
or
sbb
inc
and
sbb
mov
jnp
pop
add
loope
outs
bound
pop
sti
in
arpl
push
xlat
retf
movs
retf
or
call
inc
js
shr
xor
add
add
xor
fs
imul
xor
data16
bound
jno
push
outs
and
add
loopne
push
jbe
imul
gs
push
pop
imul
outs
adc
add
xor
pop
dec
and
inc
xor
imul
dec
mov
xchg
lods
mov
inc
mov
mov
pop
cld
mov
add
mov
(bad)
jo
inc
dec
inc
and
sbb
ss
mov
add
stos
dec
inc
dec
out
(bad)
adc
mov
in
sub
arpl
mov
xor
test
mov
cmp
pop
ins
outs
sub
(bad)
je
cmp
dec
sbb
inc
jnp
mov
enter
outs
arpl
dec
and
movs
inc
add
pop
pop
jae
ins
pop
sub
xor
xor
gs
gs
xor
popa
popaw
xor
xor
add
cmp
cmp
cmp
add
xor
arpl
bound
pop
inc
and
arpl
add
add
and
cmp
and
movs
cmps
add
in
call
push
mov
mov
jae
push
fisub
ins
jae
mov
pop
add
aaa
jbe
jnp
ins
outs
fs
(bad)
pop
sub
jae
inc
shr
imul
retf
jns
add
gs
push
fmul
fisttp
cmp
je
jo
stos
push
mov
pop
adc
iret
jae
jae
hlt
popf
dec
jge
mov
pop
ins
je
je
ins
and
add
pop
fcmovnu
push
out
popf
ja
scas
test
in
and
mov
shl
pop
popa
jo
scas
shl
out
mov
call
outs
popa
into
xor
retf
inc
and
je
dec
ins
xor
adc
jo
je
repz
ja
cmp
mov
push
sub
push
test
cmps
and
jl
pop
retf
leave
pop
mov
or
(bad)
dec
mov
repz
and
and
inc
jecxz
addr16
xchg
aad
jae
mov
div
in
mov
in
addr16
ds
mov
retf
imul
mov
(bad)
push
jmp
mov
push
gs
ds
inc
(bad)
movs
and
and
addr16
gs
jno
imul
data16
dec
aam
arpl
sub
mov
sbb
cmc
sbb
popf
popf
sbb
fnstcw
and
gs
hlt
aas
cmp
popa
popa
push
or
cmp
xchg
mov
fnsave
jo
enter
pop
movs
dec
add
lea
jbe
push
imul
xor
fcom
mov
xor
jp
sar
adc
or
sub
sub
out
test
scas
retf
jbe
inc
gs
gs
xlat
pop
(bad)
outs
jmp
stos
ret
inc
jno
jno
into
rol
xchg
inc
aaa
xchg
imul
and
fadd
in
or
stos
(bad)
out
cmc
icebp
scas
sti
(bad)
push
inc
ja
lods
inc
mov
(bad)
arpl
push
sti
jge
push
not
adc
in
inc
addr16
popf
mov
ret
je
mov
xchg
out
mov
pop
push
inc
mov
adc
pop
retf
xlat
cmp
rcl
repnz
push
inc
fbld
pop
imul
mov
add
cmps
mul
push
fwait
push
scas
add
pop
push
and
dec
aaa
pop
jbe
push
test
inc
pop
inc
push
push
ds
inc
cmps
call
push
jmp
add
pop
dec
inc
dec
dec
pop
dec
inc
inc
stos
mov
add
push
push
dec
inc
(bad)
push
dec
inc
pop
inc
dec
inc
test
(bad)
fcomp
jno
push
loop
shl
aam
data16
imul
pop
push
lea
push
sbb
or
ret
outs
arpl
imul
or
bound
out
loop
jecxz
inc
popa
mov
jae
arpl
push
jp
ins
gs
jns
test
popa
dec
push
and
(bad)
mov
jnp
mov
outs
inc
repnz
gs
push
in
mov
xor
and
and
sbb
sbb
cld
leave
mov
sahf
(bad)
call
add
add
mov
sbb
mov
jg
repz
jo
(bad)
(bad)
jmp
cmp
(bad)
(bad)
jmp
jne
jp
movs
popa
lea
sub
adc
and
jo
jb
sbb
push
bound
cmp
inc
jo
xchg
mov
push
outs
popa
push
xchg
lods
pusha
pop
mov
add
repz
pop
sar
mov
jo
or
jle
jle
or
outs
sar
mov
add
repz
pop
sbb
retf
pause
push
cmp
jns
jle
cmp
push
adc
sub
or
push
add
mov
aas
push
adc
jecxz
out
jmp
je
out
out
enter
out
out
test
test
out
call
arpl
mov
jle
jl
lahf
lahf
jg
fcom
ins
sub
xchg
lahf
sub
or
pop
jle
mov
cld
cld
lahf
add
jle
dec
jle
jb
les
jle
jle
bound
movs
add
jle
add
jle
jle
pop
sbb
jp
aam
jle
jle
push
mov
jle
jle
mov
add
push
push
sar
call
cld
cld
cld
cld
int3
pcmpgtd
cld
cld
cld
cld
lods
push
xchg
cld
cld
cld
in
or
cld
cld
cld
cld
pushf
arpl
cld
cld
cld
cld
fcomp
outs
cs
cld
cld
cld
mov
lahf
hlt
cld
cld
int
xor
push
adc
jno
lahf
lahf
lahf
jg
popa
and
add
out
pop
sbb
stc
cmp
imul
or
dec
repnz
adc
add
lahf
lahf
pop
push
retf
out
gs
out
test
pop
jle
stc
stc
sbb
jg
cmp
lahf
lahf
lahf
mov
out
lahf
cli
push
adc
(bad)
stc
stc
stc
jae
(bad)
jle
jle
arpl
cmps
add
inc
out
out
lahf
lahf
sbb
stc
out
imul
stc
stc
stc
stc
or
jle
push
pop
ja
stc
out
aaa
into
addr16
stc
stc
stc
stc
scas
pop
xchg
jle
stc
out
pop
pop
lahf
lahf
lahf
jg
jg
fsubp
out
out
das
mov
out
dec
(bad)
(bad)
cld
sti
push
ror
cld
iret
mov
(bad)
cld
shl
dec
test
jmp
aas
(bad)
mov
iret
lds
cld
xchg
aad
aas
dec
push
int
aas
push
lods
in
popf
push
aas
(bad)
fnstsw
std
ret
mov
jecxz
sar
cld
iret
push
repz
stos
jmp
repz
call
aas
mov
(bad)
cld
cmps
out
(bad)
cld
iret
call
mov
aas
dec
test
(bad)
out
lahf
daa
push
aas
fistp
cli
add
mov
and
aas
pop
adc
data16
pop
and
xor
add
pop
inc
outs
je
inc
pop
add
dec
(bad)
sti
jle
cmp
sub
inc
add
jno
push
rol
mov
out
inc
aam
pop
push
popa
mov
xor
push
xor
ja
mov
inc
icebp
adc
int
(bad)
mov
jmp
xchg
(bad)
or
call
(bad)
fscale
and
and
and
cs
and
cmc
xor
inc
dec
popa
jb
and
ins
repnz
add
or
out
leave
dec
or
sbb
(bad)
sbb
jle
jmp
xlat
and
xor
push
out
in
sbb
jns
ja
das
test
pop
lahf
cmp
(bad)
stc
out
add
stc
mov
mov
fidiv
inc
std
xor
jge
xor
in
inc
jmp
rol
fs
repnz
repnz
xor
repz
repnz
test
ss
push
push
inc
out
dec
lods
stos
scas
aam
push
out
adc
or
loopne
in
xchg
xor
ja
popa
push
out
mov
add
add
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
sub
mov
sub
mov
sbb
dec
jno
repz
test
add
add
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
add
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
shl
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
add
add
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
mov
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
push
add
add
mov
push
movs
in
lahf
xor
mov
js
stc
add
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
add
add
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fld
add
add
adc
mov
mov
bound
ficom
gs
aam
pop
popa
add
fcomp
mov
into
cmp
mov
inc
movs
fisttp
xchg
add
adc
(bad)
shl
jmp
outs
xor
mov
add
add
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
add
add
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
add
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
add
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
pusha
sub
pop
push
or
push
in
dec
xchg
daa
scas
mov
add
add
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
add
(bad)
loopne
ror
add
ficom
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
add
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
add
add
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
rol
add
add
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
add
add
cmps
call
ret
shl
sbb
ret
es
pushf
mov
push
or
or
addr16
jb
push
add
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
add
and
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
add
mov
out
jo
ud0
cmp
pop
or
sbb
add
call
(bad)
clc
sar
imul
js
add
add
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
add
add
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
add
add
repnz
retf
mov
cmps
mov
sar
sub
push
mov
add
add
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
sub
repz
inc
lock
or
popf
outs
outs
addr16
jae
xchg
add
add
movs
test
mov
out
bound
int3
addr16
fisubr
pop
sub
sbb
in
(bad)
gs
adc
adc
and
push
jmp
pop
sti
jno
dec
mov
repz
sti
add
gs
jne
mov
push
push
cs
pop
mov
jb
pop
test
mov
jo
call
mov
ins
repnz
push
jns
jb
inc
bound
jae
push
push
mov
cwde
inc
ins
outs
arpl
ins
fdivr
cs
dec
cmp
arpl
test
jge
jmp
xor
ja
test
mov
jp
sub
and
dec
loope
jae
test
mov
cmp
jae
fdiv
pop
mov
inc
push
bound
sbb
nop
in
mov
push
loopne
sbb
call
aam
push
dec
imul
xor
mov
ss
mov
and
call
pop
int
push
adc
inc
and
add
jno
movs
xlat
xchg
fs
mov
sub
outs
and
cmp
repz
imul
xor
lahf
jmp
jae
cmp
fdiv
in
jnp
stc
pop
and
mov
shl
enter
push
jae
sahf
ret
mov
add
mov
fbstp
movs
leave
mov
xchg
xor
pop
sti
nop
pop
pop
sbb
shl
pop
repz
and
xchg
sbb
xchg
ins
mov
inc
xchg
pusha
fwait
and
stos
aam
mov
pop
daa
push
dec
dec
add
mov
dec
popa
(bad)
test
sub
int3
mov
cmps
jno
ds
js
sub
push
jne
idiv
mul
adc
xor
adc
and
xchg
shl
fild
cmp
arpl
popa
lea
gs
mov
int3
inc
cmp
jnp
dec
push
adc
sub
retf
jae
push
mov
or
and
fstp
popa
lahf
mov
imul
sbb
add
inc
(bad)
rcr
adc
cmps
push
jae
je
dec
fcom
add
in
ss
mov
mov
pop
imul
dec
jecxz
lods
pop
mov
xchg
les
push
leave
push
or
xchg
pop
sub
dec
push
xor
xor
add
mov
cmp
inc
inc
sub
sub
and
inc
aaa
inc
sub
int3
inc
ss
xor
cmp
xor
bound
shl
jo
ins
ret
pusha
mov
xor
mov
dec
fsubr
daa
mov
js
push
popf
xor
add
sub
sbb
idiv
call
sbb
xor
cmp
push
xor
out
pop
cmp
cmp
xor
int
pop
xor
into
(bad)
xor
test
pop
inc
inc
inc
bnd
loopne
inc
xor
ror
add
fwait
lods
test
cmp
inc
aaa
inc
xor
push
jbe
xor
pop
pop
or
aaa
xor
out
out
inc
daa
pop
lock
cmp
xor
pushaw
inc
int3
adc
test
cmp
dec
xor
mov
pusha
adc
ss
dec
mov
xor
xor
inc
or
cmp
xor
int3
je
xor
inc
xor
dec
jo
cmp
sbb
stc
std
xor
adc
mov
mov
rol
das
ins
or
aaa
enter
jmp
cmps
xchg
jp
xchg
push
add
je
cmp
lods
add
mov
jne
lds
pop
aaa
fs
dec
jae
xor
sti
xor
push
repnz
movs
pop
mov
jae
gs
jp
adc
and
sub
aaa
sub
bound
fld
xchg
add
jp
pop
mov
push
fidivr
jne
push
pop
push
cs
jnp
dec
aad
fdivr
jbe
ss
call
js
pop
cmps
ja
jb
fucom
fidiv
mov
addr16
outs
dec
in
jae
jle
imul
ins
leave
xlat
fs
(bad)
jo
mov
fisttp
repz
ins
popa
arpl
test
les
sbb
popa
jb
outs
je
push
jo
jge
dec
jns
jo
push
fs
je
imul
jbe
jae
and
xchg
or
dec
inc
inc
popa
lahf
test
and
jmp
int
inc
push
js
ss
leave
mov
mov
inc
dec
xchg
shl
and
dec
iret
outs
arpl
popa
cld
aam
dec
inc
jb
and
xor
dec
or
inc
mov
fs
dec
clc
cmc
mov
push
aas
pop
arpl
jmp
repz
or
sbb
test
lods
cmp
and
in
push
mov
(bad)
sbb
sbb
jecxz
and
adc
inc
pop
jbe
lds
repnz
and
inc
jae
inc
je
popa
gs
lods
push
(bad)
fimul
adc
adc
or
mov
xchg
jecxz
lock
inc
icebp
xchg
xchg
mov
data16
pop
cs
dec
icebp
cmp
xor
adc
call
fsub
(bad)
icebp
cmp
in
and
jb
out
sahf
dec
rol
add
add
add
cmp
repz
iret
repz
movs
out
loop
iret
jecxz
cmp
sbb
add
sub
std
retf
repz
add
jecxz
sbb
or
xor
add
and
add
cmp
stc
sub
inc
pop
adc
rcr
or
and
iret
imul
mov
in
sub
lock
retf
jecxz
sbb
std
add
std
add
sbb
pop
out
pushf
adc
call
cmp
repz
repz
(bad)
icebp
cmp
(bad)
call
mov
sahf
sahf
xor
adc
in
jo
mov
repz
clc
daa
rcl
neg
sahf
out
cmp
pop
jns
out
lock
movs
std
sar
sahf
out
in
push
or
push
(bad)
std
push
push
cmp
sahf
out
add
or
ret
jns
(bad)
icebp
adc
ret
mov
jns
out
rol
les
cmp
xor
lds
repz
test
je
cmp
in
add
repz
jecxz
or
repz
js
movs
adc
push
(bad)
repz
clc
add
add
jns
add
jns
cmps
ja
hlt
lea
add
jns
sahf
add
(bad)
jecxz
push
mov
imul
clc
ins
and
repz
jecxz
push
push
cmp
mov
data16
lock
arpl
iret
cmp
adc
dec
iret
retf
jns
retf
repz
fsub
jno
iret
arpl
out
sub
loope
jge
out
out
(bad)
jecxz
pop
out
jmp
or
pop
push
loop
pop
icebp
cmp
(bad)
push
or
js
in
or
mov
out
mov
in
ror
call
lock
adc
in
jns
pop
or
dec
jns
out
int
ins
add
jns
out
pop
mov
jmp
ret
out
or
jo
pop
sahf
out
xchg
or
push
jecxz
pop
jns
or
mov
xor
cmp
add
add
leave
repz
or
push
sbb
xor
(bad)
jecxz
adc
push
push
mov
icebp
cmp
push
lock
iret
jecxz
sub
sbb
push
cmp
push
pushf
inc
add
cmp
pushf
add
adc
dec
iret
(bad)
repz
adc
or
(bad)
bnd
or
adc
addr16
push
add
jo
out
sub
mov
lock
(bad)
loope
push
adc
or
dec
add
xchg
out
je
mov
mov
or
jno
dec
adc
pop
iret
repz
add
pushf
dec
out
repnz
int3
or
push
and
pusha
cmp
jecxz
adc
jns
(bad)
repz
(bad)
stos
out
dec
push
(bad)
jecxz
push
add
add
adc
cmp
sub
jecxz
add
nop
repz
sahf
out
les
hlt
cmp
iret
or
jns
retf
jecxz
jmp
repz
arpl
cmp
loopne
or
push
sub
out
sahf
or
jo
xchg
out
mov
aam
addr16
repz
clc
pop
sbb
out
iret
movs
add
je
sahf
ins
add
push
jns
mov
mov
add
sbb
xchg
out
push
adc
and
sbb
(bad)
jecxz
cmp
cwde
sbb
rcr
sbb
in
sbb
add
mov
mov
sub
icebp
cmp
enter
loope
clc
das
and
(bad)
mov
jecxz
sbb
add
(bad)
loope
push
in
sbb
repz
sbb
mov
push
mov
sbb
sbb
jecxz
cmp
lds
daa
or
cmp
xchg
rcr
cmp
jno
sub
pop
inc
lods
adc
jno
or
pop
sbb
retf
dec
or
mov
and
dec
sub
fistp
pop
sub
popa
outs
retf
push
pop
js
outs
push
push
push
imul
inc
jge
push
aaa
fidivr
inc
dec
push
jp
sar
loope
mov
add
ds
xor
cmc
mov
jmp
mov
mov
cmps
inc
sar
repz
fst
popa
mov
outs
cmp
popf
push
or
inc
inc
dec
sub
pop
cmps
xor
mov
inc
dec
(bad)
dec
outs
retf
push
inc
xchg
fucom
cld
push
push
leave
sub
sub
div
call
lahf
inc
dec
inc
es
lods
xor
lds
pop
inc
outs
in
outs
out
jno
stos
push
ins
pop
mov
inc
dec
jnp
gs
outs
sar
test
dec
cmp
pop
dec
mov
add
inc
(bad)
push
inc
mov
mov
cmp
push
adc
retf
push
je
jmp
loop
push
sbb
mov
push
mov
cmc
push
mov
xchg
cli
xchg
stos
xchg
inc
in
loop
outs
dec
lods
lods
jb
inc
adc
mov
ss
mov
sbb
adc
mov
std
ret
cld
mov
pop
inc
inc
jnp
sub
stc
jp
in
ja
sub
loop
dec
fild
(bad)
pop
push
in
cmps
fisttp
xchg
and
mov
push
out
leave
push
pop
push
mov
in
sbb
dec
test
dec
rcl
ffreep
xlat
int3
push
into
aaa
neg
mov
jl
pop
cli
inc
sub
inc
push
jne
jmp
fadd
push
jns
pop
cli
popf
mov
mov
dec
push
mov
stos
inc
mov
mov
pop
int
pop
lods
dec
jl
cmp
mov
imul
(bad)
je
sub
ins
pop
push
out
push
ins
mov
(bad)
ds
into
addr16
(bad)
mov
mov
stos
push
inc
jmp
int3
mov
sub
sahf
sbb
cmps
adc
inc
mov
dec
fdiv
stc
imul
jecxz
inc
push
fild
in
inc
(bad)
rcl
aaa
push
mov
mov
out
lods
aad
mov
out
sbb
cmc
cwde
(bad)
scas
call
jnp
cmps
push
test
jae
push
fisttp
pop
repnz
idiv
movs
adc
jne
movs
push
iret
push
jge
ds
add
aam
fimul
(bad)
stc
mov
add
out
fisttp
cmp
cmp
mov
stc
sahf
ins
mov
adc
fisttp
pop
cmp
xchg
das
dec
xlat
jmp
ja
inc
movs
dec
retf
push
push
iret
daa
pop
div
mov
sahf
test
ins
scas
not
cmps
into
push
mov
jae
inc
inc
push
out
arpl
ins
pop
fnstcw
push
add
pop
push
leave
test
cmovl
xor
mov
pop
stc
cmc
(bad)
ins
push
inc
mov
mov
in
cmps
jl
jbe
jle
xchg
dec
mov
inc
push
mov
pop
das
push
mov
aad
cdq
mov
test
aad
scas
ficomp
scas
fst
out
cld
dec
bnd
scas
push
test
push
dec
out
push
jecxz
jl
call
push
push
in
shl
pop
dec
ja
jp
pop
ds
push
(bad)
stos
push
dec
into
push
scas
mov
push
mov
sbb
mov
out
(bad)
dec
xor
jle
retf
xor
je
xchg
out
mov
push
lds
out
mov
ins
bound
xchg
pop
dec
(bad)
push
inc
in
repz
mov
add
ja
neg
jne
cwde
inc
dec
imul
dec
dec
in
enter
jecxz
pop
rol
pop
push
jmp
fnstsw
scas
outs
fidivr
mov
lods
jae
adc
sbb
mov
outs
pushf
fbstp
iret
cmp
stos
push
push
cmc
aas
retf
push
add
ret
or
jae
mov
out
push
pop
add
push
(bad)
jg
das
pop
and
sbb
lds
(bad)
pop
push
jno
push
hlt
jle
shld
(bad)
aam
jb
loop
out
(bad)
fdivp
test
push
mov
mov
jns
es
imul
popf
sbb
sar
mov
sub
in
mov
pop
outs
loope
call
sub
(bad)
dec
push
out
push
push
cli
fucomp
pop
jle
pop
or
fidiv
popa
movs
aad
test
pushf
sub
fnsave
xlat
js
pop
fstp
(bad)
hlt
cld
mov
shl
fdivr
jb
shl
out
jmp
mov
jmp
mov
lods
sbb
push
xchg
out
mov
jo
in
(bad)
add
mov
mov
lods
fwait
inc
icebp
cmp
dec
aad
sub
xor
out
not
aas
push
(bad)
jbe
aas
cs
aas
cwde
cmps
push
out
push
jge
mov
cli
mov
retf
mov
xchg
mov
mov
inc
outs
mov
mov
mov
push
inc
mov
ins
in
cmp
stos
mov
dec
xchg
out
popa
int
data16
js
fstp
imul
ins
pop
inc
push
enter
aad
scas
push
jecxz
sbb
xor
inc
push
mov
in
inc
push
inc
test
fucom
inc
dec
mov
push
sahf
sbb
and
unpcklps
aad
vandps
jae
push
dec
fbstp
ds
jns
xor
dec
push
stos
repz
cld
sahf
push
dec
fild
inc
dec
mov
movs
jle
pop
mov
fnstsw
aaa
xor
jae
jns
imul
cld
pop
cmps
iret
push
mov
pop
mov
inc
mov
add
gs
mov
pop
int
lods
fistp
iret
ss
int3
and
xchg
pop
inc
mov
ret
inc
jecxz
push
iret
ja
dec
ins
push
jmp
popa
out
jno
mov
xchg
call
xchg
mov
mov
push
inc
cli
xor
(bad)
cmps
jg
aaa
frstor
gs
test
cmps
lahf
dec
iret
pop
imul
into
dec
dec
outs
inc
jmp
jno
pop
inc
xchg
ja
hlt
push
sbb
into
fist
popf
dec
xchg
aad
scas
out
fbstp
sahf
out
popf
ficom
into
aaa
push
out
cmc
push
idiv
bound
mov
sti
jbe
ror
das
jmp
push
mov
jmp
into
push
dec
mov
movs
hlt
js
loop
mov
rcl
out
aaa
sub
repnz
xchg
push
jmp
cli
mov
and
ror
rcr
idiv
imul
sub
test
out
mov
mov
pop
mov
mov
in
cli
push
jge
sub
(bad)
cs
xor
xor
cmps
test
mov
inc
inc
mov
(bad)
jecxz
sahf
into
outs
daa
mov
aas
mov
outs
mov
outs
inc
push
dec
pop
or
dec
sub
xlat
sti
rcr
xchg
(bad)
push
call
int3
(bad)
inc
leave
lea
sub
dec
xchg
btc
mov
inc
mov
std
ror
ds
ja
mov
mov
pop
cli
mov
push
dec
push
push
jne
cmps
cmps
gs
adc
push
mov
imul
xor
cmp
icebp
xor
push
ss
retf
retf
je
adc
call
cmp
push
inc
and
arpl
xor
jb
adc
or
xchg
push
push
mov
mov
inc
call
mov
xor
mov
mov
movs
push
ret
and
test
add
out
leave
ret
dec
aad
mov
out
mov
inc
iret
fcmovne
mov
jmp
inc
push
not
pop
push
cwde
dec
dec
sbb
mov
jne
dec
leave
int
(bad)
ret
cmps
adc
mov
sbb
pop
sub
inc
mov
inc
jne
dec
retf
inc
leave
ret
cmp
fistp
clc
fist
jmp
add
out
mov
dec
jno
bound
jp
push
sti
xchg
aaa
and
hlt
inc
xchg
sahf
cmps
fucomp
outs
mov
pop
and
lods
cmp
lahf
mov
xchg
xchg
mov
jno
xchg
push
scas
popf
mov
xchg
push
jb
jns
jnp
pop
aad
imul
pop
add
inc
xor
pop
push
push
retf
jg
and
mov
cmp
add
adc
js
sub
push
add
test
pop
xchg
nop
sbb
xchg
repz
shr
retf
popa
cmp
mov
add
call
push
xchg
and
add
retf
imul
js
int3
add
cld
xor
sub
dec
retf
jecxz
add
fs
in
dec
str
jecxz
(bad)
and
mov
and
pushf
fsubp
mov
cmp
jnp
add
repz
add
sub
out
cmp
das
retf
mov
push
xchg
mov
sbb
je
bound
sub
icebp
mov
xchg
call
push
mov
sub
pop
add
dec
retf
jecxz
add
inc
inc
(bad)
retf
jb
dec
jl
call
pop
mov
sbb
arpl
fld
add
pop
out
nop
or
xchg
pop
inc
mov
test
hlt
in
test
push
push
cwde
das
xchg
jp
out
jne
mov
sub
jp
fnsave
push
pop
sti
sbb
sub
sahf
das
cli
pop
sub
push
push
mov
sahf
imul
cmp
cmp
dec
fnstsw
mov
dec
jmp
mov
outs
pop
in
(bad)
out
ds
cmps
xchg
out
popf
mov
cwde
je
jmp
(bad)
fs
cmp
ja
sar
sti
jecxz
push
cmc
neg
cwde
jmp
cwde
jmp
ror
mov
mov
or
iret
push
mul
dec
dec
xlat
jmp
jne
jmp
addr16
push
push
cmp
shl
pop
aad
stos
sti
cld
(bad)
jp
push
push
in
jg
(bad)
stc
out
push
stc
addr16
not
push
retf
push
stc
push
aaa
or
cs
cmp
sub
xchg
cmp
add
lods
popf
and
nop
jno
cmc
xchg
aad
inc
ds
lods
arpl
push
jbe
sbb
mov
jge
jp
add
jecxz
push
jle
mov
popf
div
fwait
pop
fst
imul
popf
adc
ja
clc
fwait
lods
jae
push
push
inc
pop
push
sub
push
mov
ins
cmps
xchg
fstp
add
outs
mov
pop
mov
push
call
add
(bad)
sbb
arpl
mov
imul
imul
push
sub
ins
loop
bt
fdivr
and
test
mov
inc
cmp
cs
in
pop
fmul
(bad)
jae
mov
pop
cmp
jae
or
jo
fist
xor
pop
or
nop
popf
inc
popa
out
cmp
inc
add
out
popf
push
pop
loope
add
ficomp
xor
sub
out
(bad)
pop
test
xchg
nop
dec
jo
sub
out
inc
movs
std
pop
mov
push
pop
fild
inc
jle
inc
sti
jne
xchg
out
sub
and
imul
sub
pop
icebp
jb
fcom
aas
add
mov
add
xchg
jle
rol
mov
gs
xor
ror
dec
mov
xor
rcl
jo
mov
int
jb
push
jno
mov
push
push
jo
jmp
int
jne
mov
xor
cmp
sub
sbb
jne
gs
mov
test
add
adc
jae
sti
sahf
mov
shr
std
jo
sbb
sar
jne
shr
seto
and
dec
adc
outs
shl
inc
jo
jb
je
les
inc
dec
sub
loopne
imul
dec
push
les
push
sub
pushf
outs
add
jne
je
das
add
sub
and
jg
loope
xlat
mov
popa
or
pop
push
sbb
inc
xor
popf
(bad)
loope
cmps
push
fs
stc
repz
imul
mov
data16
imul
fcomp
pushf
or
pop
add
outs
dec
jae
dec
popa
jae
and
je
jae
mov
xchg
mov
popa
ins
jae
pop
mov
jo
test
fwait
jp
retf
loop
inc
ja
push
or
ins
iret
or
aaa
push
aam
lods
addr16
dec
out
jnp
lahf
mov
jecxz
jo
inc
jb
xchg
imul
sub
out
dec
retf
out
loop
inc
push
bound
mov
sbb
je
in
aam
jne
sub
imul
push
or
fisubr
dec
mov
jo
nop
jns
xor
arpl
adc
add
std
or
fsub
nop
and
(bad)
lds
test
push
imul
adc
mov
int
in
mov
inc
dec
popa
int3
inc
cmp
fidivr
call
and
inc
in
imul
js
stos
lahf
cwde
jns
and
pusha
scas
inc
ins
sub
ja
add
js
and
iret
adc
cli
fs
imul
ins
shl
daa
jb
outs
ja
cmps
movs
dec
dec
fnstsw
mul
ja
adc
and
dec
daa
mov
sub
jne
xchg
dec
mov
rol
dec
dec
test
outs
aas
or
inc
pop
movs
xchg
xchg
adc
in
fnstcw
rcl
jno
sub
lods
sub
jnp
add
dec
jae
mov
std
outs
add
ins
jns
push
scas
cmp
push
leave
pop
nop
in
rcl
pusha
xor
xor
ins
movs
inc
mov
push
outs
imul
outs
adc
cmp
and
and
sbb
daa
int3
inc
cwde
(bad)
arpl
adc
pop
sbb
adc
mov
js
mov
lock
dec
mov
vcvttsd2si
pop
pop
pop
inc
dec
stc
pslld
ins
sti
out
mov
inc
fs
addr16
inc
sub
inc
push
xor
push
push
mov
mov
lods
push
jbe
push
fsubr
mov
aas
xchg
outs
xor
test
mov
xchg
adc
inc
loope
test
mov
cmp
arpl
add
scas
call
mov
cmps
push
jo
data16
push
mov
cmp
addr16
or
call
arpl
add
movs
addr16
xor
push
push
xor
repnz
fimul
in
xchg
popf
xor
push
cmp
dec
cmps
jg
add
mov
(bad)
(bad)
push
enter
inc
mov
pop
push
ins
in
jbe
push
lds
sub
push
mov
dec
pop
dec
test
cld
les
xor
into
ret
xlat
loope
add
push
inc
pop
not
and
mov
add
pop
add
les
js
inc
xor
test
push
cmp
mov
lds
movs
and
repnz
push
inc
pop
xchg
out
mov
mov
mov
aam
pop
xchg
ffree
in
dec
inc
retf
push
cdq
mov
xlat
add
jae
cmps
add
mov
xchg
scas
dec
push
push
cwde
mov
fidivr
pushf
ins
mov
push
imul
es
mov
jmp
push
addr16
movs
imul
xchg
inc
pop
(bad)
nop
fs
push
popf
xchg
imul
mov
cmp
push
dec
or
lods
outs
jecxz
lea
cmp
outs
lds
jg
ror
add
imul
pop
sar
push
xlat
mov
jae
fild
arpl
inc
in
bound
mov
push
dec
dec
test
imul
cmp
jne
and
xchg
shl
sahf
rcr
pop
add
ins
push
sbb
dec
imul
pop
out
xor
out
ret
imul
ret
into
jecxz
jne
pop
or
std
pop
aad
pop
xchg
arpl
aam
inc
jae
pop
gs
add
cdq
ja
jo
cmp
or
test
pop
cdq
dec
gs
sub
dec
popa
ins
in
test
addr16
outs
les
hlt
fdiv
jp
sub
sti
xor
movs
pop
int3
mov
js
pop
dec
xchg
bound
adc
fs
push
or
out
test
mov
mov
sbb
inc
push
dec
inc
sub
nop
call
aad
pop
retf
scas
sub
clc
mov
mov
js
out
fstp
es
mov
sbb
and
add
iret
aas
iret
repz
jg
nop
pop
and
sbb
aas
sbb
jne
push
ror
sbb
adc
jbe
cld
jecxz
jo
arpl
mov
les
sbb
stc
(bad)
ror
sub
scas
imul
cmp
pop
sbb
cmp
lock
and
xor
out
inc
xlat
jno
pop
push
hlt
adc
retf
aas
mov
ret
pop
lahf
xlat
loop
inc
push
es
es
add
stc
inc
mov
xor
(bad)
outs
pop
xor
cwde
mov
jno
call
std
imul
iret
imul
shl
(bad)
icebp
jp
or
(bad)
cmp
jnp
cwde
xlat
mov
sub
cwde
jecxz
sahf
shr
xchg
fwait
add
fdiv
fwait
cwde
and
mov
idiv
pop
out
or
jmp
mov
out
or
jnp
out
sub
adc
add
add
out
push
push
inc
jmp
pushf
jns
pop
mov
std
inc
jmp
inc
clc
sbb
clc
mov
cmp
(bad)
jo
loopne
scas
(bad)
std
call
jno
loope
xchg
pop
pop
dec
mov
jb
fcomp
or
push
mov
ret
mov
mov
cmp
dec
mov
inc
test
retf
push
mov
add
xor
fistp
push
outs
jne
jb
xchg
fdivr
hlt
imul
jns
rcr
xchg
inc
bound
outs
data16
out
adc
in
push
inc
arpl
cwde
adc
popa
outs
gs
sub
mov
jge
retf
add
arpl
iret
sub
dec
xor
gs
popa
sub
sub
mov
arpl
lea
push
jbe
bound
fnstcw
xchg
fs
jb
add
pop
adc
movs
mov
sub
adc
jecxz
mov
imul
repnz
jo
fwait
adc
or
jns
and
outs
dec
retf
iret
imul
dec
test
add
jg
arpl
jle
sub
bound
inc
cdq
sti
push
xor
into
ins
popa
jns
sti
dec
and
gs
cmp
jne
gs
push
retf
retf
push
bound
sbb
sub
sar
pusha
not
pusha
repz
addr16
scas
or
int3
jae
popa
pop
je
cmp
adc
dec
and
xchg
lea
popf
cmp
push
out
(bad)
lea
push
sub
push
inc
push
ins
pop
xor
je
add
pop
adc
rol
jp
xor
xchg
std
lods
ins
cmp
retf
add
in
sub
push
sub
sub
mov
(bad)
xor
imul
fidiv
mov
loope
cs
jo
adc
inc
idiv
cmc
les
(bad)
jge
mov
fist
cs
mov
push
cmp
add
mov
jo
inc
ds
jp
mov
sbb
jo
inc
fimul
ret
xor
fmul
dec
inc
jle
adc
xlat
and
adc
ja
pop
pop
pusha
xchg
sbb
pop
and
cmp
sub
sti
ins
rcl
jge
dec
push
mov
add
add
jle
lock
adc
mov
mov
enter
adc
lock
movs
add
push
subps
out
pop
xchg
out
mov
ds
je
das
xor
fs
nop
mov
dec
inc
or
jle
push
inc
dec
dec
xor
inc
dec
dec
inc
stc
test
pop
mov
and
ja
imul
and
and
or
xchg
shl
sbb
mov
sub
or
ins
rcl
mov
jo
dec
push
cmp
push
adc
call
inc
nop
jo
mov
mov
test
xlat
and
nop
dec
jbe
out
mov
xor
call
js
je
push
jecxz
addr16
arpl
pusha
adc
imul
jne
push
cwde
movs
or
gs
adc
test
jmp
out
arpl
jmp
ret
loopne
and
cdq
xor
repz
mov
jnp
dec
push
es
sub
jo
cwde
ins
sub
in
bound
dec
cmp
pop
mov
dec
inc
mov
test
jmp
cmp
dec
in
sub
cmp
ins
fs
mov
test
pop
xor
fcmovu
and
push
outs
js
dec
jns
inc
pop
out
sbb
push
std
sbb
leave
(bad)
test
lods
outs
inc
js
push
dec
mov
push
repnz
cmp
jne
dec
int3
pop
xchg
inc
jns
mov
aam
sahf
mov
push
mov
dec
aaa
dec
cmp
gs
dec
xor
aad
iret
aaa
cmp
mov
arpl
mov
sub
out
sbb
dec
push
jmp
or
call
mov
lahf
movs
inc
or
fwait
push
or
dec
or
mov
jp
enter
xor
hlt
push
push
mov
sbb
gs
cmps
jnp
arpl
xchg
idiv
add
push
push
dec
inc
pop
outs
into
mov
shl
lods
hlt
mov
(bad)
int3
arpl
aam
jo
sbb
mov
xor
ror
fst
loope
mov
aaa
push
fist
sbb
(bad)
mov
mov
js
pop
adc
mov
in
mov
loope
in
and
out
popa
sahf
js
sbb
sub
jmp
sub
jmp
fild
mov
dec
and
dec
push
dec
xor
mov
repz
je
inc
dec
push
xchg
and
test
aad
inc
data16
inc
mov
pop
add
push
push
imul
in
(bad)
xchg
idiv
cdq
pop
xlat
mov
adc
add
repnz
jl
jae
adc
cmp
push
inc
mov
rol
adc
in
mov
xchg
shl
jle
pop
retfw
cmp
outs
loop
inc
retf
xchg
aad
push
dec
dec
stos
lock
mov
xor
and
stos
daa
bnd
retf
xchg
bound
push
lds
or
xor
sbb
jo
ja
outs
sub
test
mov
outs
loope
lahf
and
loopne
pushf
call
outs
loop
imul
lea
hlt
pushf
(bad)
mov
sub
mov
shl
sub
cmp
push
add
or
inc
inc
push
push
push
inc
dec
push
inc
dec
pop
daa
jmp
aam
test
add
inc
sbb
pop
push
dec
fbld
mov
sub
in
adc
(bad)
jmp
mov
retf
(bad)
pop
outs
jo
jle
fstp
push
dec
cmp
and
sbb
scas
inc
cmp
out
outs
mov
push
and
cmp
ins
and
dec
mov
outs
add
(bad)
gs
adc
ins
jno
data16
adc
dec
je
ins
push
jl
adc
push
sub
(bad)
test
pop
cmp
xlat
loop
push
popf
xor
out
xor
jle
xor
loop
sbb
mov
stc
xlat
adc
adc
xchg
icebp
cld
jecxz
das
loopne
icebp
sbb
mov
inc
xchg
imul
std
jecxz
and
push
sbb
pusha
mov
and
xor
adc
xor
sbb
mov
imul
lahf
push
push
(bad)
sahf
in
pop
xlat
sbb
stos
mov
add
ror
in
jle
pop
into
scas
mov
inc
push
enter
loop
mov
push
fs
mov
fiadd
icebp
add
dec
shr
jae
jb
cmp
pusha
add
lock
jl
xor
pop
or
fs
(bad)
inc
ins
sub
sbb
sbb
cmp
ins
xchg
call
leave
jae
gs
push
mov
aas
mov
push
shr
adc
aas
mov
lds
daa
gs
dec
cmc
(bad)
dec
jne
sbb
inc
cld
push
mov
jecxz
push
div
cld
addr16
add
dec
cmc
dec
repnz
aaa
outs
sbb
push
sbb
je
aam
ds
fidivr
jae
stos
jbe
push
mov
(bad)
in
and
sar
in
xlat
dec
dec
push
dec
outs
pop
mov
xor
push
mov
stos
imul
outs
inc
push
add
popa
cmp
or
stos
fwait
jno
or
dec
inc
sub
add
mov
and
and
pop
and
adc
cmp
in
popa
or
jmp
cli
push
push
xor
hlt
xor
push
jb
cdq
push
dec
(bad)
inc
bound
push
jne
test
ins
xor
cmps
jae
(bad)
adc
call
cmp
fisttp
xor
rcl
(bad)
mov
add
sbb
inc
ret
mov
out
sub
pop
sar
sahf
loopne
pop
cld
jae
cmp
sbb
push
mov
inc
mov
pusha
jae
in
retf
jo
repz
(bad)
push
adc
lock
nop
repz
jnp
loopne
cmp
mov
rol
(bad)
ret
(bad)
and
pusha
sbb
into
mov
or
sub
(bad)
mov
push
shr
pusha
inc
push
mov
sub
dec
mov
ja
cmp
cmp
ret
adc
test
scas
call
ins
pop
aam
add
jge
mov
xor
sub
sbb
jb
inc
test
jg
xchg
les
mov
xchg
inc
add
gs
pop
inc
dec
inc
jae
dec
sti
mov
loop
sti
imul
inc
add
xor
add
jne
xchg
mov
fwait
adc
sub
sub
cmp
jnp
or
mov
(bad)
mov
xor
repz
stos
push
or
out
or
mov
fs
dec
jo
push
cdq
mov
fs
push
push
push
cmp
in
fisub
sub
dec
inc
xor
xchg
cmps
sti
and
cmp
mov
pop
xchg
and
ret
and
fdivr
xchg
cmps
aad
mov
xchg
mov
jns
inc
enter
sbb
scas
lods
xchg
push
ret
stc
sub
push
fwait
xchg
dec
mov
fs
or
stos
xor
ret
frstor
inc
loope
popf
and
and
inc
adc
stos
addr16
out
add
retf
mov
ja
fstp
movs
xchg
push
repnz
repnz
dec
jmp
push
sub
movs
test
jecxz
mov
sub
pop
mov
mov
mov
js
sbb
pusha
push
push
(bad)
repz
sbb
stos
cwde
add
cmp
jecxz
mov
ja
push
(bad)
jo
cmp
shl
pusha
scas
mov
lock
mov
sub
ret
ret
shl
(bad)
mov
cmp
inc
jb
int3
loope
call
adc
pop
in
clc
js
retf
pushf
int3
cld
fimul
lds
jl
jl
shl
cmp
retf
aam
fucom
mov
in
xor
cmp
add
int
adc
popa
cmp
loopne
cmp
arpl
mov
cmp
adc
add
(bad)
gs
add
cmp
repz
xor
mov
inc
and
add
fild
mov
mov
sub
imul
mov
jns
inc
lods
xchg
jo
out
shr
xchg
retf
mov
jge
sbb
adc
jno
xchg
shl
lock
fnstenv
dec
mov
adc
push
mov
ins
(bad)
and
mov
mov
push
xchg
pusha
mov
mov
mov
mov
push
mov
mov
lock
mov
ret
in
push
retf
icebp
nop
mov
test
bound
jae
sahf
mov
inc
shl
mov
mov
mov
loope
mov
out
(bad)
push
mov
xor
cmp
and
mov
and
call
inc
and
jo
sbb
shl
mov
daa
rol
sub
sub
das
outs
iret
xchg
ret
sti
mov
and
lock
inc
dec
dec
ins
out
rol
ss
ins
popa
arpl
bound
out
mov
and
rcl
mov
sub
xchg
push
pop
test
sbb
in
jno
sub
stc
stc
and
mov
retf
ja
and
test
push
sbb
mov
rol
retf
jmp
test
inc
outs
loopne
push
adc
add
ret
pop
mov
enter
xor
dec
ja
jae
imul
stc
fdivr
push
dec
jae
or
imul
les
js
jae
xchg
das
outs
jne
xchg
rol
cmp
(bad)
cmps
xchg
jo
loopne
sar
lock
adc
lods
in
sahf
sub
inc
ja
sbb
pop
push
mov
outs
xchg
mov
mov
outs
push
pop
ret
outs
mov
xchg
retf
jae
pop
jmp
bound
xchg
(bad)
retf
inc
and
sub
dec
pop
js
repz
cwde
stos
stos
cmc
sub
loope
scas
ins
repnz
mov
dec
mov
jb
pop
aas
and
ins
jne
outs
lods
ror
popa
adc
or
inc
ficom
test
and
bound
dec
neg
inc
push
or
dec
dec
push
dec
xchg
or
dec
push
imul
sbb
add
xlat
pop
xchg
adc
dec
sub
imul
retf
and
popa
clc
les
retf
cmp
arpl
imul
sub
hlt
inc
je
imul
adc
jbe
sub
jb
mov
fild
test
stos
ins
lds
sub
fwait
mov
push
or
mov
sbb
dec
pop
adc
loop
push
inc
dec
dec
inc
dec
or
scas
and
dec
inc
inc
and
cmp
inc
inc
dec
dec
inc
scas
add
dec
dec
push
imul
dec
dec
push
push
push
inc
inc
dec
push
or
xchg
inc
inc
push
dec
push
movs
pushf
adc
bound
dec
mov
out
and
bound
sub
repnz
cmp
fs
test
push
and
stos
rcl
jno
jb
mov
aad
push
mov
dec
icebp
push
les
mov
push
dec
ins
add
cmp
out
iret
inc
in
ret
sbb
aam
mov
or
in
jne
or
xor
or
sub
xchg
xchg
jo
xchg
xchg
scas
ds
addr16
mov
push
retf
fbstp
or
outs
and
outs
movs
test
push
not
jb
sub
(bad)
cmp
inc
or
cld
pop
and
ds
repz
inc
cmp
and
xchg
test
sbb
mov
ins
mov
push
xor
call
inc
push
push
das
jg
popf
call
mov
mov
cmp
mov
fild
mov
pop
addr16
retf
enter
cli
(bad)
cld
add
pop
aad
sahf
stc
pop
mov
jl
outs
xchg
push
mov
mov
mov
neg
fdivr
push
out
mov
jl
push
retf
arpl
xor
jl
lods
jmp
loop
fs
stos
push
mov
cmps
mov
pusha
jb
cdq
cdq
pop
cwde
je
or
and
mov
cs
mov
cmp
inc
and
pusha
stc
ja
es
or
inc
jmp
pop
and
xor
in
dec
jns
or
ds
sbb
pusha
dec
dec
jae
cmp
call
push
(bad)
popa
loope
push
mov
pop
inc
mov
jno
nop
rol
jns
in
pusha
sbb
xchg
sbb
adc
pop
scas
and
scas
retf
and
mov
cmp
sti
das
adc
sbb
(bad)
stos
mov
mov
jno
je
jmp
imul
test
ins
cmp
mov
jbe
cld
and
ins
xchg
pop
or
pop
sub
repz
mov
je
jns
nop
test
jo
dec
and
cld
adc
into
adc
lods
or
mov
jmp
test
pop
and
leave
out
lock
push
xchg
cmp
cmp
cld
lock
loop
ret
inc
mov
(bad)
in
cld
jne
inc
jl
ds
pop
sbb
dec
jl
lea
pop
je
xchg
cld
aad
or
or
and
dec
fsub
mov
mov
aaa
js
sar
retf
mov
out
adc
cmp
dec
jg
sar
push
mov
mov
jmp
sub
test
cmp
push
into
test
mov
inc
dec
xor
cmps
outs
sbb
add
dec
dec
push
or
push
rcl
push
outs
mov
js
test
pop
jb
mov
fdiv
mov
ja
dec
sti
scas
xor
adc
outs
inc
ret
sbb
jns
inc
in
mov
and
cmp
push
mov
xchg
sub
in
frstor
jbe
fadd
cmp
sahf
sub
jle
sub
aas
and
dec
and
mov
mov
cwde
xchg
jns
or
sbb
ss
fnstcw
inc
push
jb
sub
nop
push
mov
dec
(bad)
sub
inc
mov
jnp
nop
std
adc
rcl
jno
fdiv
inc
stos
pop
dec
push
xchg
icebp
cmps
inc
retf
cmp
xlat
mov
int3
mov
mov
fcmovnb
call
repz
dec
(bad)
mov
add
push
cmp
ja
repz
nop
call
enter
jo
ins
popa
je
pop
aam
push
add
pop
in
dec
inc
push
movs
arpl
cdq
push
jne
xor
mul
jno
ins
fldenv
dec
mov
inc
test
sbb
cdq
push
scas
inc
ins
jno
sub
aad
hlt
movs
pop
in
arpl
mov
inc
nop
mov
mov
add
xor
cli
es
test
jmp
in
fsubr
stos
cmp
mov
popa
xchg
xchg
aam
sub
mov
test
cmp
adc
fs
sub
test
jb
push
mov
sub
inc
push
cmp
sbb
stos
push
jecxz
cmp
xlat
retf
push
(bad)
(bad)
pop
gs
imul
inc
mov
jle
mov
mov
das
inc
jne
imul
xor
ficomp
mov
dec
xchg
stos
sahf
test
scas
dec
sbb
(bad)
sbb
cmp
repz
mov
jmp
ins
sbb
or
in
fadd
clc
jg
sub
imul
xor
rol
(bad)
jecxz
inc
and
pop
add
mov
jnp
mov
jo
add
(bad)
icebp
inc
xchg
shl
jecxz
add
rol
jo
sbb
mov
or
push
(bad)
and
xor
lock
popa
mov
bound
cmp
call
(bad)
into
jecxz
or
bound
pop
repz
fdiv
xchg
xor
lock
shl
dec
xchg
out
push
out
xchg
xor
push
ds
stc
xlat
cmp
adc
pusha
xor
mov
cld
jge
nop
arpl
mov
jmp
sbb
cs
inc
gs
adc
outs
rcr
fs
push
pop
iret
jnp
jo
shl
cmp
sbb
std
push
clc
ins
addr16
inc
pushf
ins
cmp
dec
fisubr
pushf
and
fs
sub
iret
mov
retf
push
adc
sbb
dec
dec
dec
inc
inc
inc
ins
fwait
add
push
inc
dec
and
xlat
test
sahf
dec
imul
cmp
(bad)
cmovb
push
dec
and
xchg
xchg
dec
imul
dec
out
imul
ins
in
pop
ror
data16
push
jmp
mov
shl
add
imul
scas
mov
sahf
mov
sbb
mov
das
imul
inc
adc
push
out
frndint
daa
dec
je
pushf
ja
sbb
lds
adc
dec
cli
pop
retf
call
in
lods
push
sbb
jmp
call
push
es
test
xlat
inc
dec
dec
push
or
adc
bound
imul
jns
sub
outs
test
iret
inc
jns
jp
lods
cmps
ficomp
mov
ja
lods
dec
push
dec
inc
push
jnp
xor
stos
das
mov
adc
arpl
daa
xor
cmp
and
jb
ror
pusha
call
dec
ret
jns
loop
ret
and
mov
les
push
mov
fstp
inc
and
outs
fdivr
sub
pop
test
sti
mov
or
leave
iret
and
pop
inc
pushf
pop
fidivr
sbb
std
popa
or
sbb
jb
inc
arpl
and
ins
xchg
inc
addr16
push
js
or
pop
lds
shl
ss
sar
mov
and
imul
ret
cmp
loop
inc
ror
stos
arpl
inc
shr
add
inc
popf
mov
shr
movs
out
sbb
mov
sbb
xlat
pop
(bad)
jecxz
sbb
test
jecxz
sub
repz
je
pop
iret
and
xor
jmp
pop
sub
sbb
hlt
rcl
call
arpl
mov
mov
cdq
jmp
jo
xchg
adc
xor
inc
popa
push
jmp
cdq
jae
adc
inc
test
jo
int
sbb
jmp
neg
sub
cmp
popa
dec
mov
mov
push
lods
pop
and
inc
sub
outs
add
mov
and
mov
cwde
fwait
adc
push
xchg
sub
movs
push
mov
jns
enter
pushf
inc
stos
xchg
pop
push
ret
mov
inc
pop
popa
nop
rcl
les
and
and
push
mov
(bad)
pop
test
sub
pandn
xor
mov
jp
add
cmp
aad
and
jbe
fisub
sar
dec
je
fdivr
xchg
out
dec
icebp
dec
add
dec
mov
inc
mov
inc
add
outs
jo
lods
jmp
rol
sahf
xchg
arpl
adc
inc
inc
adc
inc
jp
das
sub
cmovnp
and
ds
mov
popa
add
pop
adc
mov
ret
and
mov
sahf
out
test
push
mov
pop
pusha
mov
cmp
mov
repnz
push
xor
and
ja
fnclex
js
mov
and
fidivr
sbb
pop
pop
jg
fs
mov
and
ficom
inc
and
jae
xor
pop
dec
out
movs
les
and
adc
iret
mov
aaa
outs
enter
add
ins
outs
jae
pop
loop
arpl
jbe
(bad)
add
jo
and
clc
ins
or
cmps
clc
lods
jmp
dec
dec
add
xchg
std
jae
inc
xor
popa
mov
ds
fucomi
(bad)
je
push
sbb
je
(bad)
mov
or
popa
mov
sbb
fild
mov
repnz
mov
leave
inc
iret
and
pop
lahf
push
fsub
mov
js
cmp
xor
pop
sbb
jo
lock
aam
imul
test
xor
xchg
shl
pop
jecxz
mov
shl
xchg
add
jp
dec
clc
js
xor
or
dec
dec
or
cdq
adc
pushf
inc
xchg
cmp
cmp
loope
xchg
inc
inc
adc
dec
cmp
xchg
nop
inc
adc
je
loopne
pushf
jae
inc
dec
add
inc
test
adc
mov
push
rcl
mov
je
jb
mov
gs
pop
mov
retf
push
(bad)
push
bound
test
pop
repnz
dec
loope
and
ror
sub
mov
outs
jp
mov
cmp
mov
je
push
stc
lock
leave
or
or
jmp
cli
inc
enter
xchg
js
and
rol
clc
pusha
push
and
add
ins
dec
xchg
adc
stos
das
aad
xor
lock
pushf
xchg
clc
push
nop
push
sbb
loope
pop
cmp
push
(bad)
cmp
dec
inc
loope
mov
(bad)
push
repz
jecxz
pop
pusha
pop
(bad)
test
xor
push
jae
sub
mov
adc
jb
stos
push
fimul
(bad)
sub
sub
mov
movs
fs
xchg
or
arpl
into
dec
mov
xor
and
add
mov
adc
mov
cwde
loopne
(bad)
mov
rcr
dec
test
inc
hlt
repz
inc
daa
push
fs
cmp
loopne
es
inc
pusha
icebp
mov
inc
xchg
dec
pushf
stos
ret
inc
enter
xor
mov
jp
push
inc
out
mov
mov
shr
fdivr
ret
inc
outs
inc
jae
int
cmp
jecxz
sbb
mov
mov
jno
(bad)
fnsave
movs
add
mov
jne
and
in
add
jne
xor
add
jbe
hlt
je
(bad)
mov
dec
bnd
mov
adc
jae
cmp
arpl
popf
adc
dec
cmp
das
dec
int3
or
inc
inc
in
and
enter
jecxz
aaa
dec
adc
imul
jo
inc
cdq
or
int
jo
popa
dec
cwde
popa
stc
fisub
stos
sbb
dec
pop
inc
push
jp
imul
xor
adc
jmp
xchg
leave
and
inc
cmp
loope
sub
sub
fcmovnb
xchg
xor
cdq
pop
jne
jp
sub
adc
dec
outs
je
xor
pop
packuswb
and
outs
(bad)
popa
dec
sbb
cmp
sahf
out
push
dec
xor
sbb
idiv
out
lock
in
gs
outs
test
enter
leave
sbb
push
mov
pop
mov
dec
jae
(bad)
test
sti
inc
pusha
mov
stos
ja
mov
push
aaa
inc
repnz
(bad)
and
xchg
out
pop
fnstsw
sub
dec
xor
xor
imul
mov
add
aad
dec
jb
hlt
lods
xchg
xchg
xor
std
sbb
cs
add
mov
push
test
pop
inc
ins
sbb
jmp
(bad)
cmp
ins
movs
jb
out
mov
inc
push
movs
jne
dec
inc
sub
es
inc
xchg
mov
movs
or
and
lods
inc
mov
adc
jl
in
mov
jecxz
xchg
push
out
and
dec
jae
add
cmc
arpl
int
mov
or
sbb
enter
xchg
push
sub
fild
or
xor
ret
mov
adc
retf
inc
stc
ins
or
dec
not
push
in
push
add
xor
inc
or
mov
enter
imul
cmp
jle
cmc
inc
mov
and
jp
pusha
push
or
push
leave
retf
add
popa
lahf
push
adc
popa
or
mov
mov
pop
inc
mov
mov
(bad)
arpl
push
dec
sahf
cmp
cmc
cs
sbb
mov
out
mov
and
cmps
cmps
lods
jge
sub
dec
push
cmp
inc
pop
inc
iret
ret
inc
inc
xchg
jo
push
push
push
push
sub
cmp
inc
push
inc
push
dec
dec
ins
dec
mov
clc
inc
dec
push
inc
push
dec
push
inc
mov
dec
dec
dec
push
jl
dec
or
push
inc
jae
outs
cwde
dec
dec
push
dec
inc
pop
dec
sar
push
dec
inc
inc
nop
cli
mov
push
push
out
xor
dec
dec
dec
mov
cld
mov
dec
pop
inc
push
mov
into
aaa
pop
dec
mov
(bad)
mov
dec
test
popa
inc
jns
movs
sbb
jmp
push
inc
mov
ins
fistp
shl
xor
out
jle
inc
dec
inc
dec
push
push
xchg
xchg
push
mov
jmp
dec
jns
mov
test
dec
inc
add
jae
jg
jo
dec
inc
dec
push
push
inc
inc
push
mov
inc
into
adc
pop
push
movs
inc
cli
sbb
js
pop
inc
push
adc
pop
mov
push
cmp
aaa
rcr
inc
push
inc
dec
push
iret
bound
jge
cmp
push
push
cmp
int3
jnp
and
push
push
je
jae
imul
inc
inc
inc
dec
int
arpl
rcl
fdivr
out
ja
mov
clc
sbb
push
xchg
ins
fstp
stc
je
dec
add
pop
dec
inc
push
sahf
cmps
aad
test
dec
iret
mov
inc
dec
mov
mov
inc
inc
jmp
je
inc
dec
xor
jnp
imul
xchg
ja
sahf
data16
jnp
push
inc
jnp
call
(bad)
int
js
mov
fdiv
push
popa
ins
mov
cmc
push
sub
and
pop
dec
sbb
sub
cs
lahf
xchg
repz
inc
pop
add
push
inc
pop
sbb
jmp
or
pop
out
jnp
pop
inc
xor
inc
xchg
inc
cmp
iret
pop
push
sbb
jmp
pop
out
div
xchg
popf
jmp
call
push
adc
inc
adc
jmp
aas
inc
sbb
arpl
ins
int
pop
repz
push
jg
out
push
dec
dec
lds
jmp
jl
imul
in
push
sub
and
dec
dec
jp
aam
mov
xchg
pop
xchg
out
push
popf
and
and
scas
sar
jp
jg
out
xor
std
mov
xchg
popa
push
pop
push
add
shl
lds
lods
mov
add
not
mov
lods
imul
test
stc
sbb
pop
outs
mov
inc
jmp
jg
icebp
out
vmulsd
cmp
mov
into
aas
scas
dec
dec
outs
mov
or
inc
fild
pushf
xor
lahf
pop
loope
and
ret
imul
adc
popa
xor
add
scas
push
jnp
pop
dec
push
ss
push
mov
pop
mov
call
pop
fwait
mov
sub
mul
je
xor
inc
mov
mov
daa
push
sbb
or
dec
in
dec
and
inc
mov
dec
mov
xlat
inc
out
sub
mov
mov
je
sbb
outs
jae
inc
jmp
popa
test
dec
out
sahf
push
in
aas
daa
fs
inc
cmp
push
in
idiv
push
in
jecxz
repnz
out
mov
sbb
xchg
cmp
lea
mov
jns
xchg
sti
cmp
inc
inc
shr
push
jnp
pop
call
in
pushf
es
inc
dec
sbb
push
jecxz
inc
in
mov
xchg
push
cli
fild
fidiv
movs
cmp
jno
jbe
(bad)
fimul
cmp
dec
sar
mov
xor
fadd
dec
ror
test
imul
dec
dec
imul
inc
jnp
mov
jmp
inc
xor
stos
push
mov
test
out
add
sahf
out
pop
test
je
out
sahf
or
pop
or
sahf
out
dec
or
cmp
adc
jno
(bad)
rcl
clc
test
out
sahf
out
adc
adc
sahf
push
mov
test
xchg
call
repz
repz
pop
iret
repz
ss
aaa
xor
(bad)
in
cmp
sbb
cmp
sbb
cmps
sbb
enter
pop
jns
(bad)
repnz
cwde
and
jecxz
push
cmps
and
hlt
mov
push
and
and
(bad)
jecxz
cmps
daa
cmp
cmp
inc
sub
sbb
sub
je
cmps
das
cmps
jno
mov
xor
(bad)
jecxz
pop
cmps
cmp
inc
jl
and
cmps
icebp
cmp
test
cmp
xchg
icebp
add
mov
and
int3
movs
jno
sbb
movs
movs
movs
cmps
je
(bad)
jecxz
movs
cmps
and
movs
test
pop
add
repnz
cmp
xor
cmp
rol
cmp
or
clc
movs
or
sahf
out
sahf
adc
adc
adc
out
rcl
adc
adc
pushf
push
nop
pop
jl
out
sahf
pop
ins
and
or
cmp
cmp
arpl
icebp
cmp
repz
adc
cld
mov
add
add
jns
enter
test
sahf
out
or
jns
out
and
out
sahf
inc
and
and
jns
sbb
or
clc
mov
sub
xor
in
or
ror
(bad)
jmp
bnd
add
add
jns
out
js
or
or
sub
out
or
add
iret
jecxz
fmul
les
iret
repz
lods
adc
repnz
je
mov
jecxz
mov
sbb
mov
mov
out
mov
pushf
into
adc
sbb
scas
hlt
mov
xlat
loopne
enter
(bad)
popa
add
cmp
jl
(bad)
jecxz
cmp
ins
mov
inc
push
jp
dec
sahf
out
sub
dec
cmp
xchg
out
sub
xor
mov
push
lahf
jge
(bad)
in
in
jl
jns
xlat
repnz
xor
cmp
sar
mov
in
add
xchg
out
adc
xchg
xlat
bnd
(bad)
mov
jmp
sahf
(bad)
mov
and
sub
cmc
push
fs
cwde
sub
inc
xor
loop
aas
mov
xor
dec
aas
mov
outs
lods
jns
mov
xchg
mov
adc
sub
scas
cmp
jae
push
push
mov
jae
mov
leave
add
out
movs
loop
cmp
fs
pop
out
jmp
push
mov
jl
icebp
gs
(bad)
call
mov
shl
jo
and
dec
dec
mov
cmp
push
korb
xor
aad
xchg
or
pop
out
js
add
push
dec
dec
pop
xor
dec
and
or
gs
std
fist
xchg
jb
test
pop
pop
pusha
(bad)
or
and
fadd
push
inc
cmp
jno
js
stc
pop
shr
sbb
cmp
sbb
pop
mov
stc
pop
push
in
and
jo
bnd
mov
xor
jle
mov
hlt
outs
pop
push
sub
les
xchg
call
dec
xchg
jg
out
xor
xor
push
xchg
sbb
shl
xor
test
(bad)
sub
cmps
sbb
mov
xor
mov
rol
xor
add
mov
mov
jo
xchg
icebp
cmp
jo
add
(bad)
pushf
mov
mov
xchg
add
inc
mov
stc
imul
cmps
adc
jp
cmps
into
movs
push
or
call
fistp
dec
xor
cvtpi2ps
ja
xchg
xor
mov
xchg
sbb
push
fimul
sub
inc
sub
inc
dec
(bad)
fs
test
sub
sbb
xchg
xlat
xlat
jne
leave
jle
ins
xchg
mov
ins
bound
push
imul
xlat
jl
ins
adc
mov
repnz
jnp
mov
pop
idiv
or
jg
push
and
xchg
adc
and
data16
cli
xor
aaa
cs
sbb
adc
xchg
mov
mov
loop
xchg
inc
inc
jae
push
sub
enter
(bad)
out
pop
test
push
cli
push
mov
out
or
aas
xchg
ins
dec
fwait
bound
pop
jo
(bad)
and
not
ror
cmp
mov
cmp
adc
dec
lahf
leave
arpl
ins
imul
cmps
popa
jmp
not
dec
sbb
fiadd
in
shr
js
fnstcw
adc
jnp
jmp
sub
mov
mov
sbb
inc
or
adc
pusha
adc
fst
mov
cmps
and
pop
xlat
push
mov
wrmsr
out
dec
sti
adc
or
arpl
pop
mov
pop
xor
xor
jo
sbb
inc
hlt
(bad)
fist
sbb
sbb
std
nop
clc
sar
sub
push
jo
push
test
sub
push
mov
inc
xchg
jmp
aad
in
lods
mov
addr16
inc
push
gs
bnd
cwde
pushf
inc
daa
arpl
das
or
dec
cmp
mov
add
push
inc
mov
bound
push
outs
loop
jl
clc
loopne
loopne
or
mov
mov
inc
push
(bad)
ins
loop
pusha
push
push
(bad)
jge
sbb
adc
adc
adc
sub
jno
mov
mov
mov
xor
nop
sbb
xlat
mul
sbb
inc
mov
xchg
cmp
mov
push
test
and
loope
dec
je
fisubr
and
push
dec
inc
mov
repnz
outs
stc
fist
jo
aam
ja
add
mov
and
test
cdq
loope
sub
and
push
xlat
ret
icebp
lods
jecxz
dec
sar
nop
xor
pop
push
xchg
cmp
xchg
icebp
test
lock
mov
pusha
inc
pop
movs
cmp
cmp
test
rol
sub
fsub
js
jl
jnp
sub
pop
mov
push
jo
mov
inc
push
ins
add
push
inc
fimul
aaa
sbb
dec
xor
push
pop
and
mov
inc
inc
call
and
fcom
cmps
push
xchg
outs
push
xchg
cmp
enter
dec
cmp
nop
adc
or
xchg
xchg
jmp
fbld
mov
and
jbe
cmp
jb
sbb
dec
inc
in
pushf
jecxz
xchg
pop
mov
jno
nop
pop
adc
aas
dec
repnz
adc
xor
hlt
imul
stos
jns
hlt
jp
dec
sar
mov
xchg
int3
jbe
and
cmps
or
popa
and
jbe
add
outs
pop
mov
mov
lods
mov
jmp
(bad)
(bad)
int
add
push
retf
(bad)
jb
cmps
and
div
or
adc
push
mov
jb
mov
repz
ja
mov
dec
sti
xchg
xor
ins
dec
sub
xchg
inc
pusha
sub
call
or
rcr
fcom
jge
add
popf
push
fist
and
clc
mul
mov
mov
push
push
shr
jno
or
jno
push
sub
sti
mov
jo
push
jne
push
mov
push
adc
aam
or
popa
mov
bound
shr
jae
sbb
pop
and
mov
int
test
fsub
ret
sbb
xor
inc
pop
xchg
dec
sbb
clc
mov
repz
psraw
test
movs
push
ja
xchg
dec
enter
lock
mov
push
fisttp
cmp
push
mov
jle
popa
adc
fist
mov
jge
nop
mov
inc
je
(bad)
cmp
inc
das
lahf
dec
mov
xchg
xchg
jns
sti
push
test
pusha
lds
cdq
jae
ds
pusha
mov
inc
push
gs
jge
fild
scas
mov
xchg
neg
(bad)
in
xchg
loope
xchg
adc
cmp
(bad)
popf
or
ins
je
pop
out
mov
pop
(bad)
push
xchg
adc
mov
push
out
test
cmp
aam
cs
cmp
lds
inc
push
popa
jne
and
mov
addr16
data16
popa
addr16
inc
enter
mov
cmp
pop
and
dec
rcl
aas
and
rol
dec
add
gs
jo
dec
(bad)
dec
fldenv
jmp
xchg
stos
push
pop
sub
mov
stc
dec
es
pop
scas
es
retf
(bad)
inc
sbb
mov
xor
shr
out
mov
xchg
xchg
sbb
arpl
cwde
dec
adc
mov
mov
ds
repz
fstp
retf
out
sahf
sub
iret
mov
xor
into
or
les
inc
in
push
(bad)
fldenv
mov
popf
sbb
sti
sbb
jbe
fild
xchg
vcvttss2si
stc
pop
retf
and
pop
dec
add
cmps
sahf
mov
enter
into
push
sbb
jmp
mov
mov
imul
xor
mov
and
test
cmp
sar
(bad)
loope
push
mov
clc
xchg
(bad)
push
enter
(bad)
mov
dec
mov
test
cmp
cmp
(bad)
repz
mov
mov
div
scas
mov
fisttp
movs
out
ror
push
lods
retf
fsub
jns
aas
ins
retf
js
pushf
(bad)
into
jnp
add
push
and
repz
push
mov
sar
dec
or
pop
xlat
mov
sub
xchg
add
sti
mov
jns
jne
add
jo
push
or
mov
dec
dec
inc
ins
mov
je
jecxz
addr16
shl
scas
inc
cld
xor
add
dec
pop
aam
aad
dec
fnsave
cmp
push
jnp
adc
and
outs
pop
push
icebp
inc
sar
and
add
sbb
or
push
nop
repnz
cmps
add
or
ret
or
test
enter
pusha
cdq
ins
jae
data16
gs
icebp
or
and
mov
mov
jecxz
mov
mov
mov
mov
add
jo
inc
mov
lock
and
dec
test
adc
push
ins
jns
out
mov
dec
sub
outs
rcr
and
bound
inc
or
inc
mov
mov
in
adc
pop
xchg
and
es
adc
aas
mov
ja
out
sti
pushf
(bad)
xor
mov
lahf
xchg
pop
rcl
fadd
and
jo
jb
mov
ins
or
mov
outs
je
jg
mov
ret
ss
mul
inc
int
mov
mov
xchg
mov
lds
push
jecxz
pop
mov
push
sbb
mov
mov
stc
cld
or
loope
inc
shr
pop
and
mov
cld
daa
cmp
fcmove
test
or
jo
dec
movs
push
mov
push
mov
sub
ret
ins
addr16
(bad)
mov
(bad)
retf
retf
sahf
adc
mov
push
mov
hlt
jp
push
jmp
cmps
push
aad
mov
into
fld
ds
inc
push
xor
call
mov
mov
sub
dec
(bad)
adc
loopne
ja
add
bound
mov
jne
loop
ret
ja
repz
movs
lods
sub
ins
pop
les
sbb
outs
je
and
test
push
out
sbb
iret
ror
out
and
hlt
sahf
scas
fst
mov
bound
xchg
shr
jmp
jae
lock
aam
ret
loop
aad
xchg
sub
in
add
jo
push
int3
jmp
bound
(bad)
retf
ins
pop
cwde
or
adc
xchg
sub
fwait
sub
arpl
ins
mov
pop
add
ins
pop
js
ss
xchg
outs
sbb
imul
inc
jmp
xor
int3
jnp
sub
and
pop
aas
push
add
dec
lock
jne
pop
push
ja
ins
mov
dec
popa
cs
mov
pop
mov
cmp
mov
pop
cdq
scas
and
sub
scas
sbb
mov
add
daa
imul
xor
arpl
cwde
cmp
test
or
or
dec
cli
mov
dec
xor
arpl
adc
ret
xlat
push
stc
loopne
jo
or
rol
or
inc
xor
jecxz
push
ret
loop
test
fmul
and
popa
iret
popa
mov
aad
adc
aam
fnsave
test
ret
loop
ins
cmp
sbb
sti
add
sahf
inc
into
fwait
jmp
adc
cmp
jae
sbb
idiv
daa
or
cmp
rcl
out
jo
adc
int
addr16
sub
adc
mov
lods
addr16
adc
lds
inc
fnstenv
mov
popf
add
and
xor
push
clc
pop
popa
gs
test
iret
(bad)
popa
jb
aas
aas
xchg
ja
jb
pop
ja
cld
mov
rcr
leave
pop
add
and
or
or
or
clc
or
pop
sub
mov
inc
sub
sbb
pop
push
adc
adc
femms
or
add
jno
add
stc
fbstp
(bad)
cld
addr16
push
fld
adc
add
and
mov
mov
or
inc
mov
and
mov
adc
inc
jo
push
mov
int
lods
dec
cmp
mov
push
jmp
push
inc
rol
ins
push
(bad)
pop
sldt
mov
sbb
test
xor
pop
add
icebp
sbb
cwde
mov
sub
retf
mov
repnz
rcl
mov
dec
fld
sbb
cld
inc
ret
push
mov
add
mov
mov
mov
jl
pop
sar
cmps
stos
fcmovne
adc
mov
cld
addr16
mov
cmp
mov
push
inc
push
push
add
pop
and
jg
sub
add
out
add
loopne
mov
xor
or
jnp
icebp
stc
sub
mov
add
int3
push
and
pop
sbb
cmp
sub
and
mov
dec
(bad)
fsub
push
ror
adc
push
iret
(bad)
bound
jg
add
push
and
lea
iret
repnz
(bad)
jge
lahf
jg
stc
jle
popf
addr16
out
jno
xchg
or
fild
mov
cld
addr16
cwde
call
jg
mov
pop
ins
jg
stc
out
add
nop
mov
out
jg
jns
fs
jg
adc
sbb
pop
push
mov
stc
out
mov
stc
out
xchg
xchg
test
out
jg
xchg
loope
add
ror
jl
dec
add
rcr
movs
aas
(bad)
cld
repz
test
(bad)
cld
repz
test
iret
aas
data16
pop
repz
aas
call
mov
mov
cld
repz
repz
mov
scas
cld
repz
aas
mov
mov
repz
aas
(bad)
mov
(bad)
cld
mov
cld
repz
stc
iret
repnz
stc
out
jg
adc
or
add
mov
cld
add
inc
movs
out
hlt
aam
xlat
cmp
mov
pop
test
jne
jno
out
lds
pop
aam
ja
pop
or
imul
adc
mov
out
data16
sbb
and
xor
xchg
sub
cmps
sbb
jne
push
scas
outs
in
xor
xor
pop
jmp
inc
addr16
adc
xchg
outs
jb
inc
std
add
addr16
dec
retf
and
and
dec
push
fcom
outs
jb
dec
test
or
mov
imul
les
pop
pop
or
inc
jne
in
bound
cmp
aas
inc
pop
iret
lods
ret
pop
push
push
dec
add
jb
cwde
out
in
outs
pop
jle
add
jp
fstp
je
pop
jns
or
inc
inc
jmp
inc
adc
push
aam
fwait
into
push
jae
int
inc
std
inc
dec
ins
jo
clc
cmp
outs
fidivr
fisub
test
xlat
inc
xchg
neg
pop
xchg
out
adc
fsubr
xchg
enter
cmc
bound
xchg
stos
call
dec
sbb
movs
in
enter
dec
push
inc
push
dec
dec
jg
pop
repnz
aas
jp
xor
cli
call
add
add
pop
adc
jo
pop
rol
cmp
retf
das
pusha
ror
addr16
call
inc
jo
jae
sbb
inc
add
ja
fsubr
pushf
add
sar
push
push
out
jb
push
in
adc
mov
je
sub
sub
mov
add
sub
adc
or
add
rcl
cmp
outs
sub
dec
jge
jge
lods
je
cmp
leave
mov
mov
push
adc
xchg
and
hlt
add
int
sbb
nop
mov
popf
(bad)
and
sbb
jae
ja
adc
cmps
inc
cmp
sub
inc
dec
push
call
outs
and
mov
lds
cmp
sub
jb
mov
movs
call
mov
mov
and
pop
fld
inc
jo
gs
les
outs
frstor
arpl
out
sub
imul
inc
stos
ins
dec
mov
jnp
jb
imul
add
dec
rcr
and
clc
cmp
cmp
ficom
jnp
fdivr
outs
ficom
inc
jo
add
mov
rcr
fnsave
adc
ja
ror
cmps
loop
mov
scas
jns
test
sub
jae
add
xor
(bad)
fcomip
pop
loope
fisttp
xor
pushf
xchg
pusha
push
xlat
and
xchg
lds
sub
cld
lock
inc
not
adc
push
or
cmovnp
and
rcl
xchg
push
sbb
add
call
icebp
adc
addr16
lock
add
call
je
push
add
xor
push
pusha
jl
mov
push
xor
sub
xlat
cmp
mov
mov
push
sub
outs
(bad)
add
adc
jne
fs
mov
ror
cmps
fwait
xchg
inc
repz
cli
pop
inc
ins
pop
add
jo
adc
out
mov
and
fadd
aas
sbb
mov
push
cmp
jmp
ins
pop
cmp
retf
test
adc
add
test
inc
popa
retf
and
jae
push
retf
dec
sub
fidivr
sub
adc
push
xchg
dec
add
xor
sahf
mov
stos
xchg
ffree
sub
and
sbb
fild
imul
cmp
cmp
sub
push
jg
and
scas
mov
xor
push
cs
sti
or
aam
push
iret
in
pop
les
push
sbb
sbb
xchg
adc
stc
push
jns
mov
int
and
or
into
popa
popf
and
or
dec
sbb
movs
cmovo
and
mov
ins
rol
xchg
xor
retf
add
test
call
push
xor
imul
jle
call
mov
dec
shl
cmp
cmp
sahf
push
popa
jne
iret
cmps
idiv
sbb
cli
xchg
xchg
dec
popf
mov
scas
push
mov
inc
in
imul
dec
mov
add
fldcw
inc
es
jbe
mov
pop
fwait
in
bound
fbstp
pop
xchg
scas
(bad)
arpl
ret
sub
arpl
out
aad
jnp
push
mov
in
sbb
jae
push
std
jg
idiv
gs
cmp
jmp
sar
scas
pop
(bad)
add
jmp
fiadd
outs
push
adc
push
lock
push
mov
iret
jno
xchg
pop
and
cli
jo
inc
stos
jp
cmp
fild
inc
pop
test
cmc
stc
add
pusha
stos
pop
test
add
into
gs
push
div
ds
jge
jbe
clc
pop
pop
mov
mov
leave
mov
mov
lods
push
push
fidiv
inc
shr
push
fs
push
inc
xor
movs
mov
dec
outs
outs
pop
test
push
push
test
loope
inc
lds
mov
sbb
adc
icebp
cmp
or
cld
sti
push
nop
lahf
push
and
test
add
cli
xchg
jp
int
repnz
xchg
add
dec
jne
mov
xor
aaa
or
mov
mov
dec
in
daa
movs
imul
mov
in
movs
cmp
push
inc
cmp
pop
mov
js
dec
sub
call
arpl
xchg
mov
cmps
or
mov
pop
loop
ret
pop
mov
int3
pop
jbe
and
das
xchg
cli
and
movs
push
mov
push
ficom
bnd
inc
imul
repz
js
dec
add
inc
cmps
scas
mov
fnclex
and
dec
sti
xor
push
push
sbb
sahf
push
mov
adc
add
inc
adc
icebp
mov
add
outs
dec
mov
add
aad
or
test
dec
add
add
(bad)
dec
aaa
jmp
jno
sub
or
mov
bound
ins
inc
jmp
repnz
mov
sar
push
sti
sbb
inc
pop
outs
adc
inc
movs
jbe
mov
sub
fdiv
sbb
pop
sub
mov
xchg
push
jae
imul
dec
jnp
and
sub
out
mov
sub
aam
enter
ror
jne
pop
ds
jae
inc
mov
ins
pop
movs
push
aad
mov
enter
jns
push
les
lds
mov
in
inc
xchg
add
test
psrld
rcr
inc
dec
push
push
push
push
push
adc
inc
mov
inc
fstp
stc
adc
data16
popa
outs
imul
jmp
mov
mov
sbb
xchg
leave
pop
dec
icebp
imul
stos
test
xchg
adc
adc
jne
and
push
clc
mov
daa
bound
je
pop
gs
shl
push
jb
add
sub
mov
fadd
dec
cs
mov
pop
pop
stos
push
cwde
ins
fcmove
xor
jg
xor
aad
aad
stos
cdq
sbb
cmps
adc
ret
rcr
ins
stc
sub
pop
nop
cmp
push
mov
outs
push
out
ja
sbb
test
(bad)
or
sbb
sbb
bnd
das
shl
fs
jmp
jp
add
je
inc
dec
inc
inc
ret
fs
pop
arpl
movs
mov
mov
fimul
xor
jnp
cmp
sub
inc
inc
inc
push
inc
repnz
mov
lea
(bad)
cmp
dec
dec
or
stos
dec
push
shl
aam
inc
gs
sbb
mov
cmp
out
xchg
fimul
sub
cmp
push
cmp
stos
sbb
test
and
pusha
cmp
data16
pop
dec
jle
adc
add
inc
or
stos
push
inc
adc
and
out
inc
jae
inc
mov
in
xchg
int
xchg
nop
(bad)
push
xchg
mov
sbb
mov
jmp
xor
fidiv
lea
adc
inc
mov
retf
add
sub
or
and
xlat
lds
mov
dec
and
lea
(bad)
ret
sbb
xchg
dec
cmp
xor
repnz
data16
ins
outs
(bad)
mov
bound
sub
inc
adc
inc
mov
ds
xchg
jae
jae
fbld
sar
inc
and
dec
cmp
jmp
inc
sbb
or
inc
mov
gs
cmps
lods
cmp
jge
cwde
pop
stos
jnp
adc
out
pop
test
mov
sub
in
mov
rcl
lods
fs
sahf
dec
sub
push
xor
mov
sub
pop
mov
(bad)
ja
imul
mov
movs
scas
stos
imul
xchg
dec
pop
enter
fdivr
xchg
lods
aam
daa
call
outs
imul
mov
call
mov
int
lds
bound
repz
lods
jae
jno
mov
add
push
dec
ja
scas
vpshufd
aaa
lods
aad
and
and
sbb
lods
mov
adc
lea
dec
add
mov
movs
mov
and
mov
xor
fidiv
push
fild
ror
cld
mov
out
pop
movs
test
rcr
xor
jo
icebp
fbstp
hlt
je
test
cmp
pushf
xchg
jg
push
jle
inc
jnp
fbstp
adc
inc
sbb
sar
clc
div
mov
mov
adc
inc
and
pop
adc
jp
cmps
inc
mov
int
jae
in
jge
(bad)
lds
ds
jns
xchg
in
je
stc
cld
je
cmp
cwde
cwde
jmp
jle
xchg
int3
ret
push
dec
movs
mov
out
pop
xor
xlat
in
js
hlt
ss
jecxz
out
fdiv
and
jecxz
push
out
add
push
rcl
int
or
inc
cmp
push
and
pop
add
(bad)
xchg
ret
aad
push
and
imul
push
mov
cmc
stos
test
popa
mov
inc
xchg
sub
sub
mov
out
imul
ja
mov
jp
dec
add
pop
icebp
arpl
push
sub
in
(bad)
aad
retfw
test
mov
arpl
xchg
out
mov
sbb
sub
inc
ins
mov
mov
jmp
gs
add
jb
xor
shr
push
out
cdq
sub
inc
hlt
loope
cmp
or
retf
mov
test
dec
inc
out
out
icebp
inc
dec
nop
inc
xor
jae
push
jge
cmp
scas
mov
ja
popf
sub
gs
ja
inc
push
dec
pop
or
mov
repnz
mov
and
int
cs
push
test
xor
test
ja
data16
rcr
and
and
lods
jb
fdiv
jge
aaa
ins
std
inc
lea
sti
cmp
movs
repnz
mov
cwde
add
stc
or
push
mov
daa
imul
mov
ret
idiv
sub
xor
cmp
ins
loope
in
in
out
push
sbb
sub
std
mov
arpl
dec
mov
mov
outs
mov
mov
inc
mov
imul
adc
in
jge
stos
jnp
sub
cmp
pop
lea
dec
idiv
or
retf
sub
(bad)
push
adc
cwde
mov
push
ins
xchg
scas
pop
into
out
cmps
sti
stos
dec
inc
ficom
adc
mov
fstp
inc
dec
test
leave
cmp
repnz
and
movs
nop
daa
daa
stos
jb
aaa
sub
ret
inc
jae
mov
dec
push
stos
pop
mov
jbe
test
jl
test
mov
dec
dec
cmp
cmp
xchg
sub
dec
and
add
push
or
inc
inc
arpl
bound
outs
jbe
and
in
push
inc
popf
ins
push
lock
add
addr16
jne
and
ins
cwde
xchg
cmp
inc
jo
pop
or
jo
xchg
add
bound
call
hlt
lods
out
dec
rcl
shl
es
jns
lahf
not
cmp
mov
popa
icebp
sbb
fs
inc
push
shl
push
push
lahf
push
gs
jo
cmp
outs
outs
popa
std
pop
or
jne
sti
mov
jecxz
cmp
jge
cli
dec
mov
movs
xlat
pushw
mov
inc
pop
loopne
es
sub
inc
push
test
popa
adc
xor
push
push
jo
in
sub
xor
or
cs
jnp
shl
cwde
aam
or
bound
mov
cdq
sbb
fist
aaa
mov
inc
arpl
push
and
(bad)
sbb
aad
adc
ins
mov
add
std
ret
add
adc
jge
sar
jge
lahf
or
iret
mov
movs
mov
retf
dec
aad
add
ret
lea
xlat
xchg
dec
push
cmc
test
idiv
jne
cld
and
xchg
mov
out
dec
inc
push
(bad)
ja
aad
out
in
xor
xor
idiv
call
ja
xchg
(bad)
cld
mov
out
in
(bad)
outs
xor
rcr
add
neg
in
ja
call
loope
mov
jp
pop
and
pop
dec
shl
retf
pusha
push
push
(bad)
rol
fbstp
das
ins
xlat
cmp
jb
and
dec
inc
into
fwait
jb
gs
test
inc
pop
daa
push
hlt
movs
data16
mov
xchg
pop
pop
add
sbb
and
lods
imul
xor
jp
enter
pop
rcl
sub
mov
aam
xchg
out
(bad)
mov
enter
lods
or
aam
outs
ins
stc
jmp
and
cmp
shr
jecxz
arpl
cli
xor
mov
test
and
xchg
jmp
aas
mov
ret
sub
ret
jnp
out
out
in
pop
sub
add
int3
(bad)
xchg
push
bound
add
jne
add
movs
mov
in
ds
out
fild
test
xlat
adc
int3
pop
xlat
sub
sub
out
aad
xor
xor
or
cmp
inc
jbe
in
imul
repz
fucomp
retf
mov
jb
cmp
popa
jmp
xor
xor
jecxz
pop
outs
jmp
add
xor
nop
test
sti
jnp
inc
sti
iret
hlt
sbb
xor
outs
mov
mov
mov
push
xchg
inc
mov
xlat
clc
jg
pop
sub
mov
push
and
rcr
cmp
jecxz
in
jg
mov
push
xlat
sub
mov
inc
push
mov
and
xor
dec
add
pop
push
jmp
mov
imul
mov
push
lods
jp
out
push
fnstcw
lods
out
pop
or
mov
popa
pop
jo
js
adc
push
add
dec
and
mov
dec
cmc
(bad)
ds
movs
cmp
adc
in
xor
shl
jo
cmp
mov
pop
aam
test
inc
sub
and
inc
dec
push
and
jb
inc
sbb
push
repnz
bound
dec
cmp
push
test
retw
ins
dec
dec
and
dec
jmp
lea
stos
lods
xchg
mov
xor
cmp
pop
fsub
retf
sub
sub
lods
pop
inc
aaa
and
cmp
in
popf
add
or
outs
(bad)
cld
add
dec
mov
pushf
or
ror
xchg
add
inc
inc
mov
rcl
ja
adc
jo
fmul
xchg
push
outs
shld
retf
test
jns
out
call
bnd
push
movs
lods
or
movs
jbe
mov
adc
std
xchg
aam
dec
adc
jge
and
sub
mov
fld
and
pop
mov
cmp
pop
imul
or
cwde
mov
jno
sbb
pop
jle
sub
nop
iret
mov
pop
xchg
sub
inc
imul
cmps
fmul
data16
dec
fidivr
push
mov
cs
add
fiadd
stos
push
aad
jns
lods
call
test
idiv
inc
push
in
xchg
mov
mov
cmp
cs
adc
ret
fs
pop
(bad)
sti
sar
mov
out
dec
gs
ja
sub
add
jmp
push
add
fs
es
push
ja
dec
xchg
adc
pop
inc
(bad)
pop
xor
jg
call
ja
mov
mov
and
out
mov
scas
arpl
fst
jb
popf
inc
sti
fwait
dec
xchg
scas
sbb
adc
mov
and
int3
xchg
popa
pop
xchg
ins
xor
xchg
mov
movs
dec
jns
repz
gs
mov
retf
cmc
adc
jbe
xchg
jmp
inc
inc
lds
nop
lods
push
mov
shr
mov
test
std
daa
sti
cwde
outs
imul
hlt
cmp
adc
adc
pop
lea
push
stc
outs
xchg
mov
jae
and
fnsave
std
dec
out
retf
in
mov
div
data16
dec
xchg
test
fbstp
sub
inc
dec
xor
scas
out
and
jns
loop
jnp
adc
fidivr
push
mov
shl
test
jb
xchg
sahf
(bad)
adc
hlt
(bad)
xchg
nop
retf
cli
lea
aas
out
mov
test
cmp
imul
dec
sbb
cmps
mov
xlat
push
mov
int
dec
or
out
sub
cmp
mov
enter
push
cmp
in
push
push
jb
aad
fiadd
into
imul
adc
cmc
cmp
pop
xchg
arpl
popa
(bad)
mov
shr
sbb
fucom
jle
out
push
sbb
add
jge
xor
test
sub
jns
xor
outs
test
shl
cmc
out
push
aam
cmp
fsubr
cld
mov
in
je
dec
add
or
jb
(bad)
addr16
out
dec
xlat
cmp
fbld
and
dec
movs
out
push
fcmovnbe
dec
push
add
jae
xor
test
lahf
adc
mov
in
push
adc
lods
pop
push
jnp
adc
adc
(bad)
cld
cmp
out
and
imul
mov
out
pushf
jp
push
gs
add
lods
sub
dec
ds
mov
add
test
into
scas
repz
add
repz
stos
mov
rcl
push
add
arpl
and
xor
push
std
fwait
stos
fstp
mov
in
adc
jnp
aad
call
add
stos
add
add
add
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
add
add
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
fadd
add
add
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
mov
mov
std
(bad)
push
add
and
add
push
pop
sbb
sbb
sbb
push
pop
add
or
and
sahf
adc
inc
das
(bad)
daa
nop
add
cmp
or
pop
inc
sar
pusha
jnp
jge
jg
cdq
stos
cli
push
add
stos
out
cmps
jbe
aas
jae
pop
(bad)
push
jbe
mov
pusha
imul
data16
and
cwde
jmp
xor
fwait
pop
xor
push
enter
jo
inc
shl
mov
mov
push
dec
inc
dec
dec
dec
inc
push
inc
push
pop
pop
mov
shr
add
dec
dec
inc
push
inc
mov
sbb
xor
test
and
xchg
test
push
shl
sub
shr
test
xchg
jecxz
mov
dec
aad
mov
daa
xor
ror
dec
lods
ins
push
jo
ss
pop
ins
sti
adc
icebp
pop
pop
jle
test
ja
lahf
sub
pop
scas
push
dec
xchg
imul
mov
in
cmp
cmp
push
cmp
xchg
out
xchg
cmps
dec
or
sub
xchg
jbe
cli
cmps
aad
mov
loope
sbb
out
das
sbb
sub
add
sub
sbb
jg
push
pop
loope
pop
retf
repz
or
jae
mov
scas
js
sbb
(bad)
cmp
mov
stos
bound
adc
das
pop
lds
mov
fnstenv
cmc
out
push
dec
stos
aam
dec
shr
and
pop
arpl
and
std
add
xlat
jp
sub
test
adc
enter
inc
stc
retf
daa
mov
ds
sub
into
sti
push
xchg
lahf
fild
frstpm(287
(bad)
mov
dec
mov
adc
lahf
int
sbb
fnstsw
out
clc
cmp
dec
movs
mov
jmp
mov
mov
and
push
icebp
loop
adc
call
sub
pop
sub
jmp
mov
in
ins
sub
xchg
outs
inc
jmp
mov
jge
clc
lahf
push
cmc
stc
jle
jl
xor
cdq
stos
sti
xor
repz
repnz
fidiv
mov
dec
jecxz
fcomp
dec
and
jge
scas
imul
fst
sub
jmp
xchg
es
or
xchg
xor
cmp
ins
test
and
arpl
imul
outs
call
movs
cmps
and
pop
ins
outs
nop
or
popa
mov
inc
add
sar
sub
inc
mov
xor
dec
repz
cmc
cmps
cmc
cmp
cli
push
arpl
push
push
ja
jl
pop
in
je
sbb
xlat
dec
pop
out
or
push
mov
test
ins
mov
stos
xor
sti
dec
adc
push
repz
inc
inc
cli
push
cmc
mov
mov
ins
xchg
stos
sahf
stos
push
(bad)
mov
add
ror
add
ret
xchg
(bad)
fidiv
jns
popf
ja
nop
xchg
xchg
lea
xor
jbe
out
test
jo
neg
(bad)
and
xchg
fs
sbb
ja
fs
jbe
(bad)
out
popa
jb
jbe
int
jge
pop
rcl
dec
cmp
imul
inc
and
dec
rcl
test
dec
adc
jecxz
and
pop
or
mov
bound
(bad)
std
xchg
inc
xor
mov
int3
add
cmps
(bad)
fiadd
jne
jle
pop
js
sub
cmps
or
jae
push
dec
push
push
add
(bad)
jmp
dec
dec
inc
ret
jmp
sub
push
rol
push
sub
xchg
mov
and
nop
call
(bad)
add
ja
mov
movs
punpcklwd
or
ret
dec
push
pop
test
test
cmp
inc
pop
dec
aam
adc
xchg
sbb
mov
ins
jns
mov
fisubr
pop
mov
sahf
retf
xchg
int3
(bad)
xor
dec
and
jbe
xchg
imul
push
loopne
sub
and
ins
or
out
jo
dec
retf
ds
inc
pop
jo
cmps
sub
icebp
xor
and
les
dec
bound
xor
inc
aam
repnz
adc
lods
nop
bound
jmp
sub
test
mov
mov
inc
dec
je
cmp
ret
gs
in
imul
adc
aam
(bad)
sub
in
call
das
arpl
dec
jns
mov
test
into
popa
addr16
int
mov
fldenv
dec
es
dec
popa
imul
mov
sub
test
ins
test
adc
xlat
dec
std
mov
mov
xor
push
push
pop
jp
pushf
sahf
sbb
mov
out
xor
fwait
xchg
sub
fcomip
shl
cwde
adc
rcr
jns
aaa
aas
rcl
jnp
push
outs
(bad)
aad
call
pop
xor
push
inc
xrelease
mov
out
add
data16
sar
mov
cmp
shr
push
gs
outs
fs
mov
add
gs
(bad)
sar
ins
test
cmps
jae
ins
(bad)
call
cli
retf
arpl
in
xor
inc
fxch
lods
mov
push
fnstenv
mov
jne
cmps
push
retf
push
aaa
(bad)
rcl
and
outs
daa
popa
xchg
jne
retf
sub
repnz
pop
scas
inc
mov
shr
lods
(bad)
(bad)
fstp
es
pop
and
mov
mov
dec
and
adc
lods
push
iret
push
inc
jg
pop
iret
test
pop
inc
jbe
add
rol
jmp
fnstenv
gs
or
jp
js
sti
dec
repz
jno
jmp
jb
push
hlt
xchg
inc
repnz
or
rcr
mov
sub
rcr
and
lahf
cli
repz
arpl
out
or
icebp
clc
out
pop
test
mov
mov
inc
imul
unpcklps
dec
inc
in
popf
or
push
cli
xor
xor
jmp
push
movs
sar
jmp
pop
push
not
xchg
fcmove
in
inc
ror
mov
test
add
dec
test
jb
push
and
xchg
(bad)
dec
xchg
out
cmp
sub
shr
and
xor
add
add
imul
inc
repnz
dec
adc
repz
sbb
enter
push
jbe
ins
pop
in
mov
sbb
add
aas
inc
outs
js
scas
inc
mov
imul
dec
jmp
xchg
dec
sar
add
xchg
cmps
jle
jbe
repnz
pop
out
aas
mov
add
jae
cld
mov
add
out
pop
xchg
(bad)
jmp
jge
inc
out
lea
xor
push
aas
sub
mov
aaa
xchg
cld
inc
in
test
jmp
adc
std
dec
sub
mov
popf
adc
xchg
xor
jnp
adc
sti
jns
dec
call
mov
retf
mov
lock
clc
pop
cwde
lock
jg
jmp
cmp
jg
push
sub
retf
jno
add
sbb
pusha
inc
mov
clc
ret
movs
add
jle
pop
retf
outs
push
inc
cmp
mov
sahf
xchg
aam
or
push
cwde
xor
inc
lahf
mov
into
xor
jo
popa
das
fiadd
addr16
(bad)
lods
addr16
dec
mov
and
mov
mov
imul
xor
pushf
push
jo
push
and
imul
retf
aaa
lods
push
cmp
add
int
(bad)
inc
dec
jae
adc
push
sbb
mov
inc
dec
xor
push
push
ins
mov
scas
cmp
mov
xchg
pushf
retf
sub
sub
mov
in
jle
sub
(bad)
mov
enter
sub
ds
sti
rcr
(bad)
sub
ins
and
hlt
outs
add
xor
in
outs
arpl
jns
push
push
adc
imul
cld
sbb
pop
jle
xor
xchg
mov
cmp
popa
fnsave
lods
data16
popf
jp
dec
enter
sub
outs
test
inc
add
sub
push
add
pusha
add
add
add
push
add
add
pop
lds
push
add
cmp
pop
or
aaa
add
and
and
rol
stos
or
pusha
loop
push
mov
ror
pop
in
sub
or
out
inc
test
in
sbb
jae
shl
enter
add
xchg
and
xor
mov
stos
ins
bound
or
lea
hlt
mov
xchg
cmp
push
sti
dec
call
and
sub
adc
mov
add
ins
test
adc
xor
sub
push
sbb
out
push
push
mov
mov
mov
and
pop
add
adc
sbb
mov
ja
scas
pop
int3
pop
dec
add
mov
jae
je
mov
xor
mov
fcmovbe
and
test
ja
retf
cmp
push
jmp
dec
xor
inc
and
test
inc
aas
bound
inc
xlat
fs
sbb
loop
cmp
addr16
mov
mov
out
test
inc
inc
push
inc
push
dec
cs
ror
xchg
pop
sub
inc
sub
aad
push
nop
jae
mov
lods
outs
add
dec
addr16
dec
stos
jo
mov
dec
xchg
jle
cli
sbb
test
je
jae
or
or
mov
pop
jmp
jecxz
mov
adc
jmp
dec
push
mov
call
repnz
inc
pop
jp
dec
not
push
pop
mov
test
jmp
fnsave
inc
xlat
test
popa
jb
or
stc
lahf
jno
shl
or
sbb
movups
(bad)
sbb
repz
push
sbb
jns
pop
test
mov
nop
or
inc
mov
inc
pop
mov
jae
cld
mov
inc
ficomp
sbb
jbe
or
xor
mov
mov
adc
imul
push
call
bound
out
pop
addr16
rcr
iret
add
test
pop
sbb
je
and
sub
push
sub
sbb
xor
jg
xchg
mov
or
lods
sub
fistp
jle
sub
rcr
cmc
sub
int3
outs
xchg
xchg
cmp
pop
ins
bound
out
sub
and
dec
pop
adc
out
sub
sti
sbb
cmps
dec
and
cmp
dec
mov
retf
call
inc
jmp
in
adc
imul
aaa
adc
xchg
jmp
es
mov
or
shr
sbb
xlat
or
std
out
jp
call
mov
repz
sahf
and
iret
add
push
ins
pop
mov
in
inc
dec
jmp
xchg
das
push
mov
pop
ss
arpl
mov
inc
sub
cmp
and
inc
pop
stos
sbb
into
inc
imul
inc
dec
cmps
push
sbb
xchg
jecxz
mov
cmp
pop
fbstp
out
xchg
mov
std
pop
addr16
fisttp
push
cmp
push
pop
fbstp
xor
(bad)
add
test
int3
dec
cmp
icebp
mov
hlt
sbb
aaa
add
adc
pusha
sti
push
push
mov
ret
xchg
sub
mov
pop
imul
pop
xlat
retf
push
dec
out
call
pop
popf
retf
nop
jl
stos
adc
adc
pop
cmp
ja
inc
mov
in
stos
mov
test
push
retf
inc
inc
push
cmp
adc
dec
xchg
out
ins
icebp
xor
jmp
add
enter
out
fistp
mov
mov
stos
enter
pop
pop
inc
retf
ja
sub
push
jmp
scas
int
mov
ins
mov
rol
cmp
aas
and
outs
ins
(bad)
ret
imul
xchg
stos
sub
inc
xor
je
pop
imul
outs
popaw
cs
sbb
dec
jnp
js
outs
jbe
jo
data16
sub
jb
sti
into
mov
jb
arpl
retf
gs
jp
push
or
addr16
dec
into
inc
ins
and
fnstenv
clc
leave
xor
or
arpl
imul
push
loope
lds
dec
mov
jae
imul
leave
es
jo
dec
hlt
pushf
jbe
jp
dec
out
movs
mov
sahf
add
outs
(bad)
iret
and
pusha
fcomp
cmps
sbb
pushf
bound
in
cmp
clc
aad
fs
sbb
or
fs
or
and
inc
or
and
xchg
or
addr16
jne
shl
es
fcmovnu
mov
cmp
icebp
loop
jae
cmp
sti
add
imul
gs
(bad)
jae
test
inc
mov
pop
cmp
int3
arpl
or
imul
mov
imul
fisttp
jb
cmp
sbb
inc
imul
ror
ins
jne
sbb
cs
je
mov
shl
popa
jne
inc
jmp
xor
push
push
int
mov
sbb
out
bound
sub
aam
out
mov
lods
jg
jns
ret
aam
pop
movs
scas
push
mov
mov
retf
loop
gs
mov
popf
imul
mov
dec
fild
xor
in
cwde
jnp
arpl
dec
dec
and
je
call
shl
out
pop
loop
fiadd
test
ins
jo
jp
mov
dec
pushf
ret
jmp
test
ss
jmp
cmp
mov
test
adc
ret
into
(bad)
(bad)
in
inc
add
js
mov
dec
dec
inc
add
inc
add
pop
dec
add
cmp
dec
add
push
add
mov
mov
rep
repnz
aaa
popa
(bad)
repnz
add
pushf
mov
stc
add
lds
clc
xchg
call
dec
add
pop
xchg
(bad)
jbe
xchg
jno
test
mov
(bad)
loop
push
(bad)
in
pop
pushf
inc
mov
daa
push
xor
jbe
mov
test
clc
xchg
jo
lahf
lock
push
arpl
dec
push
add
movs
dec
xchg
mov
push
inc
push
icebp
fmul
push
iret
fiadd
jns
dec
mov
pop
pushf
adc
rol
mov
add
xchg
inc
mov
out
cmp
mov
enter
cmp
dec
sub
mov
xchg
(bad)
loop
jbe
jbe
out
imul
outs
cmp
iret
dec
in
mov
jno
pop
add
push
xor
jno
xchg
je
(bad)
jae
xchg
mov
xchg
add
sbb
mov
cld
nop
push
hlt
nop
mov
inc
in
nop
call
pop
xchg
pop
neg
int3
(bad)
pop
cmp
push
(bad)
mov
mov
pop
lods
pop
test
push
arpl
test
add
hlt
pop
jl
add
push
xlat
xchg
pusha
nop
dec
cld
cld
pop
ds
inc
xor
(bad)
push
push
dec
jae
jnp
and
clc
cmp
hlt
or
adc
add
or
adc
add
or
or
call
(bad)
int3
jo
xchg
aam
push
in
imul
xlat
or
jmp
mov
nop
shl
fidivr
imul
and
jo
mov
fs
push
ret
test
shl
fisttp
push
add
rcl
inc
xor
push
mov
mov
xlat
or
add
scas
call
shl
test
nop
dec
(bad)
mov
mov
push
adc
aad
push
xor
stos
call
lds
push
jnp
jb
inc
cmp
stos
jge
mov
adc
jnp
push
shl
add
ds
out
fidivr
mov
adc
inc
inc
int3
rcl
(bad)
xchg
mov
dec
push
ins
pop
movs
daa
push
or
inc
dec
imul
jns
(bad)
cmp
cmp
or
jnp
cmp
push
sbb
retf
jecxz
cmc
pusha
or
pop
shr
arpl
push
sub
nop
inc
ins
mov
add
dec
loopne
jo
xor
pop
pop
and
pusha
cmp
iret
mov
and
jb
gs
lods
jb
inc
push
pop
stos
mov
rol
pusha
gs
jbe
imul
jl
imul
arpl
pop
adc
cmp
cld
sahf
repnz
hlt
(bad)
mov
or
sar
push
inc
inc
dec
mov
jbe
mov
xor
stc
icebp
push
sti
inc
mov
or
inc
inc
dec
jne
out
jmp
pop
out
in
cmp
std
outs
out
(bad)
mov
pop
ret
and
pop
(bad)
sbb
jo
mov
xchg
pop
retf
popa
(bad)
ins
push
sahf
call
test
xlat
dec
popf
stc
jmp
pop
pusha
int
and
jmp
mov
shl
movs
outs
sbb
xchg
(bad)
push
shl
cmp
jl
cmp
xchg
lds
sahf
out
sub
sub
push
cmp
add
push
cmp
pusha
cmp
test
dec
push
sub
(bad)
add
mov
mov
mov
fwait
xchg
(bad)
jmp
pop
jne
and
pop
outs
jb
xlat
(bad)
fdiv
cmp
(bad)
xchg
add
ja
fst
jb
jmp
mov
jbe
jae
arpl
data16
jecxz
sbb
mov
cld
mov
jns
out
sar
movs
cld
pushf
repz
(bad)
loopne
lods
nop
jp
iret
nop
cwde
mov
test
test
iret
rep
push
fs
bnd
sub
pop
sahf
neg
push
out
push
retf
push
dec
dec
inc
cli
es
mov
jo
adc
jns
out
xor
sub
and
repz
popa
sbb
adc
out
cmp
or
cld
mov
jns
fadd
mov
out
fs
and
loopne
(bad)
repz
repz
(bad)
icebp
cmp
sub
adc
sahf
in
out
sahf
fmul
lods
mov
jecxz
cmp
call
call
movs
xchg
dec
jne
aam
mov
(bad)
jmp
enter
pop
mov
jns
outs
lods
add
mov
js
cmc
pop
call
jae
(bad)
push
xor
daa
retf
jo
mov
mov
push
pop
into
std
pop
cmp
jae
fs
retf
jno
fbld
and
sbb
mov
shl
mov
bnd
sub
mov
repnz
dec
mov
and
jg
repnz
jne
fild
sub
in
add
inc
std
mov
jnp
adc
inc
in
jg
repz
cmp
rcl
jmp
xor
mov
addr16
lea
add
in
sub
sub
loop
in
rcl
popa
mov
adc
or
add
push
aas
mov
pop
fisttp
fbstp
sub
sub
sub
push
mov
xchg
jns
mov
xchg
aad
pop
xchg
mov
xchg
int3
sub
push
and
mov
stc
dec
mov
push
mov
cdq
ja
pop
push
sub
retf
cmp
mov
push
pop
fild
jae
mov
xor
mov
test
das
fld
ja
mov
stos
sbb
in
js
dec
scas
and
pop
xlat
add
dec
dec
push
jbe
in
stos
push
jne
mov
inc
mov
push
xor
push
mov
and
rcl
std
cmps
sbb
sbb
inc
jae
retf
lods
jl
jmp
fisubr
cmps
test
mov
(bad)
jnp
outs
bound
ja
repz
fdiv
xchg
shr
dec
adc
dec
inc
dec
jmp
mov
or
sub
dec
stos
dec
inc
xor
push
sub
and
add
inc
int3
dec
lahf
or
ins
stos
push
out
shl
jb
enter
inc
push
stc
addr16
out
push
and
inc
popa
cmp
add
cmp
lahf
aad
mov
fs
push
jmp
leave
sub
test
dec
sub
cmps
adc
add
inc
jle
cmc
mov
outs
ret
xchg
dec
imul
mov
add
and
jns
inc
mov
push
sub
jb
test
cvtpi2ps
test
jmp
adc
sbb
imul
push
outs
xchg
xchg
rol
test
sub
xchg
fisub
in
jae
gs
mov
mov
adc
jae
data16
and
in
mov
outs
sub
jns
xchg
ds
sub
das
xchg
call
inc
mov
xor
(bad)
retf
jl
push
enter
gs
and
push
and
add
mov
imul
cmp
fwait
cmp
gs
cmp
push
rol
data16
sbb
jno
fidivr
xor
xchg
data16
adc
cs
loop
push
jl
lock
lods
mov
mov
test
jbe
call
popa
cmp
fstp
popa
cmc
mov
mov
jb
enter
cmp
adc
adc
mov
mul
imul
jecxz
and
mov
shr
scas
pop
scas
cmp
jns
push
xor
(bad)
adc
popf
pop
repnz
hlt
daa
add
out
lahf
icebp
loopne
shl
xchg
js
enter
dec
imul
mov
sub
and
and
sub
stos
push
lea
dec
push
out
or
lock
retf
push
fs
dec
inc
pop
in
mov
xor
and
ins
popf
and
adc
neg
sub
xor
and
jno
push
and
xchg
lds
imul
and
cmp
mov
adc
mov
pop
repz
mov
fdiv
sbb
xchg
push
(bad)
stc
imul
ds
xor
lahf
jo
imul
cmp
pop
mov
cmp
mov
or
outs
or
cwde
adc
lods
adc
fcmove
sub
ins
ins
mov
ja
bound
add
inc
dec
jb
jecxz
xchg
and
or
retf
enter
xchg
scas
inc
scas
jmp
fucomip
cmp
sub
iret
enter
retf
push
ja
or
dec
dec
dec
push
push
and
cmp
je
pop
test
push
popfw
dec
inc
inc
dec
loop
sub
xor
mov
fst
xor
lods
xor
mov
ss
jmp
test
push
pop
ja
outs
test
push
ins
or
mov
dec
retf
inc
dec
gs
mov
fild
inc
js
stos
inc
xlat
cmp
push
sbb
pop
repz
bound
xor
cmp
xchg
push
push
xlat
mov
mov
dec
imul
jnp
push
xor
clc
mov
mov
cmp
push
outs
pop
adc
mov
cmp
fucomp
sbb
out
outs
dec
(bad)
mov
push
push
xor
je
xchg
dec
movs
std
shl
add
mov
dec
sbb
add
dec
jnp
pop
out
mov
outs
sbb
jmp
push
gs
imul
sub
rcl
cmps
into
je
or
xor
xor
sar
sbb
jo
push
ds
xchg
or
jmp
sub
mov
cli
sub
(bad)
sar
push
add
nop
add
dec
fdivr
inc
call
pop
sar
cmps
mov
and
mov
mov
xchg
lock
add
and
xlat
into
add
dec
mov
lods
inc
cld
call
adc
mov
ins
ror
add
imul
jno
hlt
dec
call
push
mov
ds
xor
add
adc
add
xor
mov
mov
iret
or
jbe
mov
add
or
mov
xchg
outs
js
loopne
clc
nop
inc
cmp
add
cwde
dec
addr16
out
lods
jno
mov
lahf
sub
mov
add
pop
mov
dec
jo
std
push
xchg
ja
mov
cs
(bad)
repnz
push
add
shl
popf
push
sbb
lock
cmps
inc
pop
fwait
cmps
stc
sbb
out
add
sbb
pop
cmp
dec
sbb
movups
dec
shr
xchg
retf
dec
sbb
fnstenv
add
mov
sti
ins
into
icebp
stos
test
xor
mov
nop
mov
add
add
shl
in
inc
in
retf
ret
clc
cdq
inc
xlat
mov
mov
dec
xchg
clc
add
mov
pop
ret
call
jmp
xor
mov
mov
cli
add
retf
repz
add
nop
jl
stc
out
out
pushf
rcl
(bad)
out
pushf
shl
mov
fcom
mov
icebp
loope
mov
fild
cld
in
shl
pop
add
pop
es
je
call
(bad)
stc
(bad)
icebp
sbb
mov
mov
test
jmp
adc
cwde
stc
jl
cmp
fwait
jle
inc
jle
jg
rcl
call
xchg
jae
mov
repz
add
lods
enter
push
and
cmp
pop
fild
aaa
ja
mov
mov
sahf
mov
hlt
add
cmp
aas
cmp
(bad)
rcr
int3
cmp
aaa
push
mov
xchg
addr16
iret
in
call
add
rcr
mov
pop
fist
cmc
or
xchg
fdivrp
mov
aam
inc
ret
mov
ror
dec
mov
daa
cli
iret
or
or
scas
pusha
push
aas
scas
cmp
push
sbb
div
int
loop
sahf
cmps
xchg
test
in
rol
mov
shr
jl
add
outs
xor
xlat
ret
jne
mov
ret
mov
out
or
call
pop
xchg
icebp
mov
dec
(bad)
sbb
push
adc
inc
jl
ret
mov
in
jecxz
add
aaa
sub
fcomip
sub
les
mov
add
pop
or
mov
or
mov
jns
jl
movs
xchg
out
retf
mov
pushf
mov
mov
lods
enter
in
outs
pop
mov
imul
dec
adc
hlt
loopne
and
sbb
mov
ret
mov
dec
cmp
iret
add
lds
sbb
lods
jb
fist
xchg
mov
mov
mov
aas
xchg
mov
out
lahf
out
clc
call
cmps
(bad)
out
lods
sub
mov
mov
fild
shl
pop
push
add
je
cld
pop
in
test
lods
(bad)
push
xchg
loope
(bad)
or
mov
int3
(bad)
stc
jo
sbb
mov
inc
rcl
in
cmp
fdivr
in
hlt
idiv
popf
inc
jl
ins
or
cld
xchg
mov
(bad)
xor
jl
or
sbb
pusha
add
xlat
jns
xor
cwde
stc
scas
xchg
out
test
jle
iret
cli
inc
jecxz
jg
dec
xchg
movs
add
cld
loope
clc
adc
sub
inc
enter
(bad)
fistp
inc
jmp
imul
pusha
enter
aam
movs
cmp
mov
jmp
stos
js
cld
ins
jae
or
sbb
xor
cmp
popf
(bad)
(bad)
cdq
js
cwde
dec
leave
cli
sbb
cmp
ins
out
idiv
cwde
cdq
cmp
inc
add
jmp
mov
mov
repz
hlt
leave
jno
call
xor
xchg
retf
call
inc
push
repz
inc
into
retf
mov
inc
xchg
jl
(bad)
std
imul
shl
dec
cmp
repz
shr
retf
iret
aas
aaa
cli
iret
ja
jle
icebp
cmp
retf
mov
adc
retf
int
arpl
sahf
out
dec
push
jl
and
out
call
iret
fwait
xchg
test
jno
ret
clc
test
aam
fucomip
sbb
repnz
push
add
fdiv
lahf
in
add
hlt
mov
and
hlt
jge
cwde
je
stc
(bad)
int3
add
dec
push
add
dec
ja
xor
jmp
outs
cwde
fcmovnbe
(bad)
in
retf
inc
adc
fs
mov
aam
mov
out
xor
inc
test
retf
test
scas
adc
and
je
call
call
out
xchg
push
pusha
ins
retf
inc
cmp
jg
push
int3
pushf
in
push
(bad)
cmps
int3
mov
jmp
jo
in
hlt
dec
sbb
cmp
stc
in
cdq
xor
fidivr
push
mov
jl
xor
cmp
out
out
mov
jle
pusha
enter
sahf
fsub
pusha
enter
inc
std
mov
xor
test
iret
in
add
pop
jo
test
cmp
cld
pusha
int3
lods
repz
cmp
enter
cld
repz
in
clc
or
adc
cld
repz
in
clc
adc
cmp
jo
inc
rcl
sub
mov
sahf
mov
jns
stc
popf
xor
jns
add
cld
push
std
jl
add
sub
mov
ror
xchg
jge
outs
(bad)
pop
push
add
mov
sub
(bad)
repnz
sahf
aaa
add
fsub
iret
out
add
fwait
or
fiadd
sub
mov
pop
aam
pop
inc
jns
in
pop
add
push
scas
(bad)
push
xchg
outs
add
mov
push
ret
jmp
fistp
add
pushf
cld
push
std
and
popa
pusha
iret
loope
dec
pushf
imul
(bad)
std
jl
pushf
mov
aaa
jl
shl
mul
test
jae
cmps
test
lods
out
pop
(bad)
std
inc
add
aaa
add
clc
loop
mov
adc
sub
movs
clc
jecxz
lea
aam
call
aas
adc
popf
retf
hlt
cmp
add
test
cmc
push
retf
mov
cmp
pop
sahf
mov
les
in
(bad)
retf
jns
pop
mov
outs
sahf
adc
pushf
outs
fwait
lock
pop
adc
dec
shl
cmp
add
inc
stc
out
xchg
inc
iret
out
cld
jns
mov
xchg
push
movs
repnz
addr16
jl
arpl
xchg
sbb
ret
icebp
(bad)
(bad)
lock
or
outs
pushf
jl
arpl
icebp
(bad)
lock
sahf
cmp
mov
push
push
jae
hlt
jl
js
out
retf
add
sahf
fild
pushf
(bad)
lahf
out
pop
xor
push
jge
pushf
mov
xor
call
mov
loope
aaa
push
int3
mov
adc
sbb
xlat
(bad)
xchg
es
cmps
iret
xchg
mov
dec
adc
fsub
dec
xlat
fwait
cmc
or
xlat
fsub
mov
lods
stc
popf
ja
mov
(bad)
cmp
sbb
clc
or
xchg
icebp
jl
adc
xor
icebp
fistp
pop
push
fdivr
out
jg
fidivr
sub
xor
addr16
pushf
test
out
aaa
ins
fsubr
inc
(bad)
mov
int
jge
test
cmp
sub
iret
sar
push
fst
fxch
jae
ret
and
cmp
std
jl
inc
adc
mov
pusha
mov
pop
push
js
call
mov
out
js
xchg
out
mov
popf
out
in
mov
aam
xchg
cwde
xor
retf
jg
xor
sahf
test
iret
inc
ficom
int
dec
sahf
retf
mov
push
outs
pop
test
xor
pop
mov
sbb
or
out
jne
pop
iret
aas
mov
ja
xchg
cmp
push
(bad)
cs
(bad)
out
add
imul
mov
mov
xchg
fldenv
iret
in
add
aas
iret
jg
lock
cmp
cld
rcl
jmp
fmul
cwde
div
cmp
imul
jge
mov
mov
jge
ds
pushf
movs
jl
and
dec
imul
stc
add
jns
sub
test
iret
(bad)
add
aam
cmp
stc
call
cmp
push
jg
fisttp
mov
test
pop
pushf
js
int
jg
(bad)
int3
js
out
retf
test
aam
sti
sub
xlat
movs
out
movs
inc
hlt
sahf
movups
or
repnz
push
iret
jecxz
sahf
jo
push
fbstp
or
imul
out
or
adc
int
mov
xor
idiv
xchg
daa
sahf
sub
loope
add
call
pushf
clc
fiadd
and
cmp
pop
fild
mov
adc
jne
jl
adc
mov
mov
dec
hlt
jge
iret
and
out
cwde
xchg
scas
(bad)
aam
in
push
test
dec
add
pop
repz
(bad)
pop
dec
loopne
idiv
pop
jne
and
out
mov
jns
stc
pushf
lods
mov
push
cmp
adc
sti
stc
push
iret
call
add
retf
fmul
test
pop
xchg
out
js
mov
fistp
call
test
stc
shl
mov
ja
test
enter
loop
loop
loop
cmp
xlat
push
cmp
mov
cmps
in
pop
add
mov
ins
mov
in
cmp
add
lods
stc
out
iret
mov
lahf
fild
ret
icebp
or
sbb
stc
(bad)
imul
and
repz
jecxz
jecxz
ins
and
mov
addr16
cmp
lods
iret
out
cld
repz
into
repz
in
mov
jl
cld
or
clc
out
push
push
add
test
or
fs
jg
in
in
in
(bad)
int
fs
lahf
cmp
in
leave
repz
leave
movs
add
iret
jnp
ret
aam
ret
loop
cmp
add
sbb
pusha
dec
pop
mov
cdq
dec
inc
inc
(bad)
loopne
(bad)
rcr
cmp
dec
aas
mov
aaa
or
jl
shl
sti
xchg
mov
fidivr
scas
jge
add
jns
dec
xor
lock
jo
add
adc
sub
mov
test
icebp
sbb
adc
pop
xchg
jns
test
jp
cwde
xchg
inc
out
test
cmp
fsubr
out
fdiv
add
(bad)
enter
xchg
clc
and
adc
cmps
or
out
mov
sbb
push
imul
add
mov
dec
out
out
xor
dec
mov
mov
fsub
dec
ja
adc
mov
scas
int
call
cwde
sub
out
jo
cld
cmp
dec
call
idiv
cwde
enter
sbb
dec
fcomp
push
mov
out
fidivr
in
call
mov
or
sbb
out
fdivr
mov
add
dec
repnz
cwde
add
stc
out
sar
xchg
out
xchg
cmp
iret
add
jne
out
out
imul
iret
repnz
cmp
jns
sub
xchg
div
inc
push
mov
jl
inc
jmp
jge
std
retf
test
neg
pop
xchg
iret
xchg
mov
enter
jmp
neg
sahf
or
dec
mov
inc
stos
mov
out
cwde
ins
out
jnp
add
xchg
ja
stos
sub
jmp
sub
loope
jmp
jmp
out
sbb
stos
repz
sbb
jmp
cld
in
ss
adc
adc
sbb
xchg
in
xor
push
in
(bad)
std
mov
mov
mov
call
scas
mov
pop
cld
loope
test
mov
stos
push
(bad)
pop
xchg
add
inc
gs
scas
adc
cmps
inc
push
xchg
in
sbb
jge
jcxz
retf
jae
hlt
add
hlt
pminsw
stc
iret
jp
pop
aas
dec
test
jo
lods
mov
jo
mov
cld
or
mov
(bad)
cld
in
loopne
out
jecxz
xchg
dec
out
pop
out
loopne
hlt
jge
fwait
xchg
out
cld
mov
clc
sub
add
fld
cld
pop
cmp
mov
cld
ins
jecxz
call
aam
icebp
ins
xchg
fmul
mov
and
xor
sti
jle
sbb
ss
lods
jo
jns
xor
ja
jo
mov
cmc
cld
ins
repz
loope
(bad)
repz
lock
sub
fucomip
mov
in
outs
mov
fs
jns
add
mov
imul
repz
test
enter
repz
les
clc
repz
loope
or
sbb
cld
jecxz
xchg
clc
sub
jmp
icebp
dec
icebp
mov
icebp
scas
sti
jl
aam
sub
mov
inc
popf
retf
jge
mov
add
int3
icebp
mov
icebp
and
scas
(bad)
stc
scas
xchg
sbb
repnz
xor
jge
std
sbb
inc
jb
repz
mov
repnz
repz
mov
pop
je
mov
int3
fdivr
fsubrp
aaa
pop
or
or
xchg
xor
xchg
idiv
(bad)
out
sbb
jns
pop
xor
jns
je
xor
jns
stc
fs
mov
int3
fdiv
idiv
jge
add
lds
hlt
sbb
jmp
stc
inc
pushf
iret
in
sti
add
pop
push
sbb
mov
dec
jle
mov
aas
dec
sahf
add
xchg
into
dec
call
hlt
mov
xchg
sub
add
mov
test
neg
addr16
(bad)
xor
dec
push
ret
loope
push
cmc
fs
jo
call
scas
arpl
std
jg
das
aas
dec
pusha
or
out
xchg
(bad)
aam
(bad)
repz
cld
cmc
pusha
les
sbb
fdiv
mov
sub
iret
sti
test
or
div
jp
mov
imul
(bad)
repz
jle
sub
xchg
jmp
and
stc
addr16
mov
push
(bad)
or
sub
daa
dec
or
or
and
pop
or
mul
jb
mov
cli
call
adc
test
popf
add
not
loop
out
mov
cld
loopne
mov
(bad)
repz
rol
sbb
sub
out
ja
loope
clc
les
(bad)
mov
jns
xor
jecxz
out
cld
push
mov
cli
(bad)
mov
mov
retf
xor
mul
ror
add
jg
adc
and
xor
cli
mov
jae
jb
pusha
repz
repz
jo
test
iret
aas
mov
into
cmp
mov
jg
dec
or
gs
sbb
aas
mov
repnz
(bad)
sahf
ret
test
(bad)
push
mov
jecxz
mov
sbb
fnstsw
in
retf
outs
fadd
pop
fstp
xor
mov
into
repz
sti
sti
sti
(bad)
sbb
ins
mov
les
mov
movs
mov
mov
popa
std
pop
mov
cld
int3
fdivr
dec
(bad)
push
aas
movq
mov
(bad)
jg
iret
cld
cld
xor
dec
xor
aas
(bad)
mov
cld
cld
test
out
mov
mov
jnp
mov
cld
repz
or
sbb
xor
cmp
mov
lock
std
adc
cmp
pop
or
nop
pushf
mov
xchg
out
fild
mov
int3
push
fdiv
shl
std
inc
leave
jl
rol
fcmovu
sub
sub
icebp
pop
push
aaa
pop
cmp
jne
push
push
push
xchg
inc
das
jmp
jo
fidiv
arpl
movs
(bad)
jo
jge
out
add
repnz
lods
aam
dec
inc
hlt
mov
lods
jmp
sahf
loopne
push
ins
jecxz
or
loopne
hlt
jge
add
mov
retf
les
mov
mov
sub
(bad)
jns
dec
mov
jecxz
hlt
dec
test
pop
xchg
push
push
movs
mov
div
leave
jae
scas
idiv
sub
add
push
add
pusha
jo
push
cdq
repz
cmp
sti
stc
test
repnz
call
cmp
mov
jg
mov
and
data16
sar
leave
loope
jmp
add
idiv
adc
iret
mov
call
les
lods
and
in
mov
jmp
cwde
push
inc
dec
pushf
xchg
les
fidivr
or
loopne
cmp
gs
mov
dec
fistp
adc
add
(bad)
jl
imul
outs
pop
pushf
mov
mov
cmp
push
jecxz
cmp
fucom
jo
or
sbb
lds
std
cwde
sbb
pop
sbb
ret
xlat
call
push
out
push
cs
ins
call
and
dec
pushf
mov
jns
(bad)
repz
ins
xor
sahf
out
fld
ins
push
cmp
repz
push
outs
mov
sbb
outs
pop
jnp
cmp
(bad)
repz
xchg
out
inc
jo
cmp
jecxz
lods
in
jno
ja
cmp
(bad)
repz
dec
jb
mov
fnstcw
(bad)
icebp
adc
hlt
jno
(bad)
jecxz
jne
lahf
es
jno
mov
(bad)
imul
js
repz
jns
mov
jns
(bad)
push
jp
nop
stos
into
iret
repz
xchg
std
mov
jns
data16
cmps
in
sub
iret
repz
fwait
shl
sub
mov
jns
frndint
pop
jg
jae
cmp
repz
mov
cmp
out
jo
or
sahf
(bad)
icebp
pop
test
nop
mov
cmp
out
sbb
jns
iret
out
xchg
icebp
cmp
jno
out
mov
jecxz
sahf
mov
in
out
sbb
mov
ret
push
cmp
dec
mov
(bad)
repz
mov
cmp
out
mov
pop
xor
lock
out
cmps
retf
inc
jecxz
cmp
test
xor
test
xchg
jecxz
cmp
jg
ret
xchg
aaa
xchg
and
sbb
test
call
cmp
dec
jns
xchg
cwde
mov
(bad)
and
jno
xchg
or
xor
jns
push
into
sahf
dec
lahf
mov
repz
dec
je
mov
sbb
mov
cmp
jecxz
loop
mov
jns
iret
repz
sbb
js
out
mov
add
iret
inc
mov
stc
sbb
mov
jns
aas
bound
iret
repz
and
test
js
out
stos
inc
mov
jecxz
stos
jns
iret
jecxz
enter
cmps
repz
out
add
jecxz
push
mov
inc
out
cmp
xchg
scas
adc
cmp
add
fisttp
mov
mov
(bad)
repz
mov
sbb
repz
jno
lds
mov
mov
jns
cmps
loope
mov
cmp
repz
inc
mov
icebp
cmp
jecxz
jne
jecxz
mov
pop
xchg
(bad)
mov
iret
mov
sbb
dec
mov
push
mov
mov
mov
xor
xchg
add
iret
jecxz
push
push
out
out
sbb
ret
sub
stc
push
(bad)
repz
mov
push
lds
(bad)
jecxz
mov
jae
js
(bad)
repz
(bad)
test
jns
iret
jecxz
jmp
leave
test
jno
(bad)
jecxz
retf
push
int3
xchg
js
(bad)
jecxz
int
cmp
shl
iret
sbb
(bad)
jecxz
pusha
rol
rcr
ret
icebp
cmp
cli
inc
aam
aad
mov
jno
fadd
(bad)
cmp
jno
mov
xlat
sbb
repz
xor
cmp
cmp
fdivr
dec
(bad)
lock
fbstp
fwait
js
(bad)
repz
fistp
(bad)
jecxz
inc
loopne
ret
cmp
(bad)
loope
out
or
push
mov
iret
repz
push
call
mov
call
jmp
inc
jmp
lahf
ret
push
(bad)
and
stos
in
cmp
(bad)
push
out
adc
out
adc
das
loope
sahf
out
into
stc
and
out
sbb
xchg
jne
movs
cmc
add
(bad)
jecxz
ret
clc
pop
xchg
repnz
dec
mov
cli
inc
icebp
cmp
repz
retf
(bad)
xor
jns
mov
lds
or
sub
push
les
jecxz
mov
repz
jecxz
add
mov
retf
out
add
aaa
sahf
out
sahf
pop
jg
mov
cmp
jecxz
jmp
add
icebp
cmp
repz
mov
jecxz
sahf
(bad)
pop
mov
repz
jb
mov
cmp
out
cmp
int
or
arpl
jecxz
sbb
cmp
sti
retf
or
pop
push
xchg
ds
js
iret
std
js
in
pop
adc
out
push
(bad)
push
adc
enter
cmp
or
cmp
dec
adc
jecxz
adc
cmp
xchg
mov
push
inc
cmp
out
addr16
in
pop
je
cmp
inc
test
push
(bad)
repz
dec
sbb
add
mov
mov
icebp
mov
hlt
cmp
js
loope
fcomi
in
repz
sub
mov
sbb
and
jecxz
arpl
int3
sub
(bad)
icebp
cmp
hlt
cmp
iret
jecxz
fmul
and
jo
enter
icebp
dec
and
mov
adc
push
sahf
rol
es
jns
out
mov
repz
pop
mov
out
push
inc
js
ror
sub
(bad)
repz
js
adc
cmp
cmps
out
push
push
ret
and
or
js
mov
jnp
jecxz
cmp
cmp
jmp
xchg
sahf
das
das
jae
mov
imul
cmp
xchg
xor
mov
out
sbb
push
xor
nop
xor
push
call
xor
cwde
xor
xchg
loope
xor
xor
cwde
xor
jo
sbb
xor
xor
xor
xor
push
xchg
push
xor
mov
cmp
xor
push
ss
cmp
xchg
ss
and
push
aaa
fadd
adc
dec
cmp
cmp
sti
cmp
cmp
cmp
cmp
xchg
loope
cmp
cmp
cmp
jo
sbb
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
loope
cmp
cmp
cmp
push
xchg
cmp
ret
loope
ds
sar
add
cs
jo
sbb
pop
aas
xchg
aas
(bad)
aas
sti
aas
inc
inc
push
xchg
loope
inc
movs
inc
aam
add
loope
cmp
inc
fs
xchg
inc
rol
sbb
xchg
inc
inc
push
inc
ret
loope
cmp
pusha
inc
add
fadd
sbb
xchg
inc
cmp
cwde
inc
rcr
jb
out
push
div
enter
sahf
clc
xor
mov
sbb
inc
dec
test
sbb
sbb
dec
cmp
nop
mov
sbb
repz
cmovl
cmp
jecxz
jl
loopne
dec
out
sahf
(bad)
cmp
mov
mov
pusha
jl
not
pop
imul
andnps
repz
je
ins
add
cmp
add
aam
fabs
adc
inc
mov
enter
test
scas
ins
fldenv
adc
jecxz
lea
sar
es
ins
in
or
inc
pop
sbb
mov
out
in
jns
cs
mov
out
add
fisttp
push
xor
fidivr
pop
xchg
add
mov
jg
outs
sub
loopne
jns
out
push
pop
jbe
jne
sbb
retf
repz
jecxz
jl
outs
pop
aas
scas
ins
icebp
pop
xor
aas
mov
adc
mov
adc
sbb
jne
out
and
aas
jecxz
iret
repz
dec
jmp
or
stc
mov
fs
fcomi
cmp
je
jl
cmp
cmp
(bad)
sub
pop
inc
add
imul
mov
add
cmc
outs
cmps
int
addr16
sahf
clc
add
adc
jl
ret
js
adc
xchg
sub
and
sub
fadd
mov
or
into
jl
dec
or
ins
idiv
xchg
leave
pop
pop
xor
ja
jo
(bad)
jns
movups
adc
mov
int
aas
aas
push
or
aaa
mov
mov
popf
ret
pop
das
pop
in
retf
lahf
lahf
adc
sar
es
jl
ret
aad
adc
fisubr
cmp
or
retf
sahf
iret
mov
add
rol
adc
mov
cmp
push
pop
adc
outs
xor
iret
(bad)
cmp
fs
repz
(bad)
cld
int3
mov
add
adc
and
iret
cmp
ins
repz
jmp
mov
test
xor
sbb
(bad)
lock
fbld
sub
mov
out
repz
sbb
pop
outs
pop
pop
sbb
(bad)
jns
aas
iret
neg
add
out
mov
iret
(bad)
in
mov
hlt
ds
xchg
ret
jg
jne
sbb
outs
mov
outs
push
outs
add
mov
cdq
or
ret
xchg
pop
outs
pusha
outs
push
cwde
xchg
sbb
cld
sbb
loope
(bad)
js
dec
jbe
scas
ins
icebp
or
jmp
fnstenv
xchg
outs
scas
mov
xchg
pop
idiv
inc
mov
pop
bound
dec
outs
sbb
in
sahf
or
(bad)
loop
bound
jo
sti
jp
out
add
push
push
xchg
icebp
sub
bound
or
jb
push
mov
loope
movs
js
mov
jle
pop
std
or
idiv
lahf
sbb
scas
adc
enter
aaa
sbb
(bad)
mov
fisttp
xor
rcr
mov
cmp
and
dec
sbb
mov
inc
inc
xchg
popa
mov
clc
out
and
pushf
sbb
mov
call
icebp
into
iret
iret
ror
in
sbb
int3
loope
pop
add
pop
(bad)
iret
ficomp
ins
clc
push
push
outs
adc
sbb
jb
jb
loope
das
add
adc
sub
enter
in
or
mov
mul
xlat
xchg
ins
cmp
(bad)
in
jge
test
lea
adc
jb
xchg
mov
shl
leave
(bad)
in
fsub
sahf
aas
retf
xlat
call
js
or
jae
sub
sahf
out
or
or
ins
je
iret
repz
cmp
je
shl
aas
mov
pop
cld
jae
out
loop
add
ja
clc
cmp
jl
fdivrp
stc
ins
je
pop
test
out
(bad)
fnstcw
fsub
push
pop
hlt
pop
shr
sbb
ja
jmp
mov
cmp
adc
jl
shl
pop
fild
ret
jne
cmp
push
pop
and
sub
jns
nop
and
lock
dec
jne
jne
jne
mov
mov
jg
ss
adc
xchg
dec
out
pop
jle
cld
lods
or
and
(bad)
jecxz
or
les
jne
jne
jne
xchg
ret
in
jne
jne
xor
sbb
jbe
sahf
cmc
cld
cld
push
push
call
jbe
jbe
pop
ss
in
jg
push
lea
dec
and
arpl
loope
jbe
xchg
repz
cmps
scas
mov
repz
mov
cld
mov
cmp
push
ds
cli
jbe
ja
aas
aas
aas
and
xor
aas
aas
aas
aas
inc
dec
push
pop
add
ss
into
dec
and
mov
ja
ja
repz
cmps
ja
add
(bad)
sub
xchg
loop
sahf
or
or
ja
dec
xchg
add
retf
(bad)
movs
icebp
cmp
or
mov
nop
cmps
add
js
es
xchg
js
js
sbb
xchg
and
push
test
sub
js
pop
pop
and
js
add
mov
dec
and
mov
inc
call
and
gs
mov
mov
int
add
js
jae
imul
cmps
lahf
mov
bnd
sahf
lods
or
cmp
pop
test
sbb
add
jns
in
jl
and
xchg
lock
jns
jns
jno
(bad)
jns
iret
mov
jmp
call
es
fwait
pop
call
fmul
jmp
add
loope
test
pop
jp
repz
xor
or
dec
loope
pop
or
std
mov
cmp
shl
(bad)
jnp
jp
in
imul
pop
pop
add
lock
cwde
daa
pmovmskb
jmp
jo
(bad)
jp
daa
jmp
in
or
lahf
ja
xchg
sub
shl
inc
xlat
aam
or
clc
pop
mov
jnp
clc
lock
jnp
jnp
cmps
jbe
int3
icebp
pop
and
sub
enter
cmp
enter
push
retf
pop
sbb
ret
xchg
jl
jl
sbb
inc
mov
sub
sub
and
inc
xchg
lock
cld
sub
and
pop
retf
mov
sbb
sahf
in
sub
adc
jno
jge
push
test
sbb
jge
stc
out
retf
jl
push
mov
mov
ss
lods
lock
mov
cmp
das
icebp
(bad)
xchg
mov
out
pop
mov
shl
cmp
xchg
mov
in
jge
sub
aas
daa
cwde
gs
jae
xchg
push
test
sub
sub
stos
mul
clc
sub
fnstsw
movs
clc
adc
fwait
xchg
cld
pop
mov
ret
dec
arpl
sub
clc
imul
jp
push
sub
add
test
inc
sub
cmp
jmp
(bad)
fnstenv
jle
iret
mov
jle
imul
cwde
pop
cld
xchg
xlat
mov
or
(bad)
repnz
or
repz
hlt
dec
stc
add
pop
jg
repz
sahf
cmp
stc
lahf
out
hlt
imul
aas
fisubr
cs
popf
(bad)
jns
mov
jp
ja
aam
aas
adc
cld
arpl
cwde
stc
clc
adc
sub
add
cmp
mov
das
aam
int3
sbb
ja
pusha
das
test
jge
out
jo
out
dec
call
sbb
lgs
fcmovnb
jp
sbb
ret
push
sub
add
jns
adc
add
jns
cs
cmps
loope
push
cmp
dec
movs
cmp
inc
inc
adc
out
lods
pop
xor
xor
sub
jl
sbb
imul
add
inc
cld
repz
clc
addr16
xor
cld
loope
jg
jb
and
(bad)
aas
sub
jecxz
xor
pop
xor
js
mov
pop
cmp
inc
(bad)
loope
sub
adc
sub
sbb
pop
inc
repnz
sub
mov
shl
ja
jecxz
xor
mov
daa
imul
or
div
add
loope
add
adc
(bad)
xor
mov
mov
repz
gs
jne
repz
push
jge
test
pop
loope
sub
jge
adc
in
sahf
(bad)
adc
push
retf
fbstp
sahf
out
enter
out
repnz
jecxz
ret
sahf
push
neg
jae
push
cmp
adc
sbb
out
pop
mov
sub
daa
cmp
cmp
sub
mov
sahf
xlat
mov
iret
repz
fs
ins
xor
pop
hlt
dec
ins
or
mov
loope
or
xor
xchg
test
inc
(bad)
cmps
jnp
ds
mov
retf
mov
pop
mov
mov
sbb
or
cmp
repz
fmul
in
iret
iret
repz
(bad)
fdivr
cmp
and
mov
je
mov
pop
jnp
inc
clc
ret
xchg
xor
test
ja
ret
jne
lock
push
sbb
enter
ret
(bad)
xor
pop
test
dec
jae
cmove
inc
xor
out
mov
(bad)
mov
stc
movs
push
push
jecxz
jle
cld
stos
and
mov
add
jge
mov
out
sub
out
adc
ss
sbb
push
int3
lods
stos
jp
psrad
out
stc
test
cld
sub
add
vmovsd
ins
push
call
cmp
jl
iret
jecxz
test
pop
jle
ds
dec
cmp
(bad)
cmc
push
add
out
mov
add
aas
jbe
push
popf
neg
aam
jg
jne
mov
jns
fild
iret
inc
fnstsw
jg
inc
xchg
add
cmp
repz
adc
sub
(bad)
in
pop
xchg
cld
cmp
je
jl
std
fs
loope
xor
cmp
cmp
cmp
cmp
mov
nop
xchg
cld
icebp
dec
gs
gs
mov
cmp
pusha
stc
stc
icebp
jne
ret
retf
rol
out
stos
addr16
xchg
push
cmp
jg
xchg
sbb
out
fs
push
in
imul
in
or
xchg
ret
push
xchg
xchg
xchg
push
call
push
push
xchg
sar
sar
cmp
pop
xchg
ret
pop
ds
xchg
cmp
out
sbb
mov
mov
cld
sar
push
ror
inc
mov
repz
ins
cmp
or
movs
xchg
and
icebp
push
imul
loope
lock
cmp
cmp
cmp
mov
mov
xlat
fild
lock
ins
fs
cmp
or
xlat
add
loope
jg
sbb
ret
xchg
cmp
mov
movs
cmp
cmp
mov
lock
push
mov
sub
loope
sbb
pushf
ds
scas
ret
push
nop
or
loop
out
mov
cmps
retf
mov
mov
mov
jecxz
loope
pop
je
lods
aas
sbb
xlat
loope
aas
inc
ds
pop
inc
lods
arpl
(bad)
outs
out
div
je
dec
or
jl
sbb
retf
(bad)
sub
cmp
jecxz
or
rol
cmp
jne
(bad)
mov
mov
inc
push
mov
jno
loope
(bad)
and
push
jb
push
outs
sbb
jp
out
int
stos
lock
mov
cmp
dec
xchg
or
inc
jbe
jbe
pop
outs
sbb
inc
(bad)
jo
scas
clc
inc
call
pop
mov
mov
jne
ds
fisttp
inc
mov
iret
jp
xor
push
or
es
sub
fist
call
icebp
out
adc
cmp
mov
push
inc
jl
mov
or
arpl
loope
xchg
fimul
or
sbb
cmp
mov
sub
ret
push
pop
inc
nop
mov
lock
cwde
mov
cld
cld
mov
ret
mov
ja
sbb
pop
jg
jle
push
mov
or
out
in
inc
mov
inc
mov
out
test
(bad)
and
mov
mov
mov
ss
xor
xor
cmp
arpl
cmp
inc
aas
jle
aad
inc
fprem
lock
mov
jne
std
cld
jl
mov
out
add
(bad)
sub
ins
jle
mov
iret
(bad)
inc
into
(bad)
iret
iret
iret
iret
loope
(bad)
loope
iret
iret
iret
icebp
icebp
icebp
stc
iret
(bad)
pop
add
jo
sbb
(bad)
mov
cmps
test
mov
cld
inc
cmp
mov
call
or
pop
mov
inc
push
fprem
aas
inc
lea
sti
pop
dec
lea
stos
loope
(bad)
icebp
loope
and
lea
outs
adc
jl
ja
xchg
pop
cmps
mov
fisttp
mov
lea
inc
loope
adc
jmp
inc
mov
inc
adc
xchg
pop
fmul
lock
mov
outs
pop
or
sbb
int3
inc
mov
(bad)
push
mov
mov
iret
sbb
jl
mov
mov
push
clc
ret
(bad)
mov
xchg
mov
or
cmp
pop
mov
nop
popa
mov
jno
dec
xchg
ret
xchg
cld
cmc
xchg
mov
dec
aas
pop
xchg
cld
cld
cld
(bad)
xchg
sahf
cmps
scas
popa
adc
cld
mov
popf
clc
jo
stos
ror
dec
lock
mov
mov
dec
sbb
cld
fistp
(bad)
and
stos
(bad)
mov
mov
movs
scas
retf
jns
out
ficomp
mov
iret
cmp
inc
or
ins
shl
add
lock
dec
cld
mov
mov
loop
and
aas
clc
pop
sbb
arpl
fisubr
or
jmp
push
aas
xchg
loope
ret
dec
clc
gs
jbe
lods
loope
sbb
dec
sbb
dec
mov
jl
nop
in
nop
cmc
nop
mov
iret
mov
push
mov
in
cld
sti
cmp
adc
and
xor
gs
cmp
imul
cmp
add
jnp
test
lock
fist
sbb
xchg
aas
stc
mov
cmps
shl
stc
enter
leave
repz
repz
sti
adc
sbb
stc
jno
inc
sub
xchg
out
ret
cmp
inc
test
scas
dec
mov
mov
xchg
jnp
loop
dec
xchg
rol
lods
push
out
pop
sahf
out
add
pop
scas
imul
imul
cwde
xchg
mov
pop
lds
aad
lods
dec
js
out
pop
pop
push
jle
out
rcr
cld
loope
pop
ds
or
adc
cmp
ret
xchg
cld
hlt
(bad)
test
adc
mov
(bad)
lahf
cmp
aaa
js
loop
add
xchg
inc
lahf
sbb
inc
xchg
dec
xchg
imul
mov
ja
jecxz
ja
enter
push
xchg
jl
push
push
and
pop
scas
jae
push
mov
xchg
xchg
stc
icebp
loope
mov
rcl
(bad)
stc
jmp
retf
scas
int3
pop
xchg
sub
movs
push
adc
shl
hlt
push
mov
push
mov
jl
sbb
in
xchg
xor
xchg
push
xchg
fiadd
mov
cmp
cs
ss
iret
repz
inc
dec
or
cmp
repz
or
mov
or
push
adc
in
mov
out
adc
adc
aas
into
addr16
into
xchg
ja
je
dec
push
jl
push
push
sbb
push
loope
pop
ds
xchg
ficom
xchg
lock
(bad)
lock
xchg
das
xchg
fwait
into
pop
fist
push
dec
inc
clc
fsub
push
jge
pop
xor
mov
push
inc
sub
dec
push
pop
xchg
sub
mov
xchg
iret
arpl
cmp
fbstp
jp
shl
xchg
xchg
lock
pop
mov
xchg
lods
xchg
out
jg
mov
(bad)
fdivrp
clc
out
out
inc
rcl
loope
sbb
mov
nop
push
adc
sbb
cmp
loope
xor
aas
(bad)
dec
push
pop
xchg
fs
iret
repz
test
loope
sbb
cmc
or
xor
loopne
sbb
push
test
arpl
iret
je
mov
xlat
mov
out
rcr
pop
iret
enter
(bad)
lock
fcom
aad
ret
sbb
jl
sbb
lds
dec
or
jle
push
add
pop
ds
or
adc
dec
or
xchg
xchg
xor
std
push
push
iret
mov
jmp
jno
jecxz
sahf
add
pop
xchg
pushf
(bad)
(bad)
mov
pop
mov
inc
inc
fidivr
push
mov
sbb
inc
jno
les
adc
nop
pop
scas
and
sbb
out
clc
mov
pop
mov
pop
jns
fucomip
push
cld
pop
stc
icebp
or
and
sub
iret
arpl
or
jns
sub
adc
sub
mov
in
push
jge
jns
out
test
(bad)
(bad)
and
(bad)
jecxz
rcr
not
into
(bad)
mov
cmp
cmp
rep
pop
cwde
pop
add
cld
or
mov
pop
div
loop
test
adc
sbb
sbb
pop
(bad)
jl
pop
js
arpl
fdivr
in
enter
cmp
repz
loope
jmp
iret
repz
or
in
fcomip
clc
jmp
push
sub
mov
pop
popa
jmp
push
pop
mov
out
jb
sub
and
cmp
adc
out
ror
call
gs
jne
jle
js
jge
in
(bad)
sub
mov
nop
jg
iret
(bad)
cwde
or
mov
push
test
mov
(bad)
push
js
mov
xchg
call
cld
fninit
jmp
jle
cld
cld
sti
add
jle
sbb
sub
out
xor
aas
and
out
sahf
out
and
pop
jmp
push
mov
sub
mov
test
lock
cld
repz
push
(bad)
cld
pop
jmp
lods
push
mov
sub
inc
inc
jmp
cmp
sbb
test
fwait
test
fwait
mov
lea
test
xor
ficomp
fwait
hlt
fwait
psraw
jnp
pop
pushf
ret
cld
adc
xchg
sahf
xor
jns
wrmsr
arpl
mov
cmp
repnz
adc
adc
out
pop
xchg
xchg
repz
lahf
cdq
sbb
scas
mov
div
cmp
push
retf
loop
rcr
in
lock
js
sti
and
iret
repz
sbb
daa
sub
iret
iret
repz
cmp
cmp
pop
push
pop
cmp
arpl
push
jne
repz
repz
mov
xchg
iret
repz
xor
xor
(bad)
cs
cmp
jg
adc
xchg
xor
adc
pusha
jmp
jmp
and
cmps
inc
and
push
mov
or
sti
pop
pusha
add
popf
icebp
arpl
mov
add
stc
stc
stc
icebp
or
sbb
stc
stc
stc
stc
sub
cmp
out
stc
stc
dec
push
pop
adc
adc
jns
sub
jl
pop
out
sahf
out
sbb
jns
sbb
(bad)
jns
sbb
jle
pop
add
(bad)
icebp
jno
push
sub
call
aam
ret
rcl
popa
dec
xchg
mov
aas
xchg
inc
lahf
xchg
arpl
loope
lahf
push
jmp
mov
push
lahf
push
outs
xchg
fsub
lahf
cs
cmp
cmp
inc
lahf
jno
fnsave
xor
cmps
lock
sbb
sbb
lock
jmp
ret
xchg
lahf
call
clc
jp
jecxz
arpl
enter
inc
push
ds
pop
inc
arpl
pop
arpl
(bad)
lock
jle
or
loopne
(bad)
mov
sti
xchg
iret
lahf
lds
sbb
cmp
call
mov
xor
mov
out
repnz
shl
xor
repz
cmp
iret
adc
adc
repz
rep
push
jbe
jle
repz
sbb
pop
(bad)
cs
sahf
cmps
cmp
repz
mov
sti
movs
test
loope
xchg
add
sbb
mov
inc
mov
cld
imul
or
ja
inc
ret
xchg
push
sub
gs
gs
ret
sbb
outs
sub
neg
pop
stos
lods
call
fmul
mov
jle
shl
mov
lds
mov
stos
cwde
in
enter
jmp
dec
(bad)
repz
ds
clc
lahf
clc
and
sub
dec
loope
xor
clc
push
pop
out
push
jnp
sbb
mov
out
(bad)
(bad)
mov
add
pushf
cld
iret
fadd
sbb
push
cmp
push
push
sbb
icebp
imul
pushf
jmp
loopne
movs
setnp
push
(bad)
jge
fild
(bad)
out
adc
(bad)
repz
stos
jne
lahf
test
inc
sbb
push
mov
jmp
mov
sar
bound
movs
jb
repz
jp
or
(bad)
pop
cmp
(bad)
jbe
repz
add
scas
(bad)
sub
dec
(bad)
ret
sbb
sbb
pop
jmp
push
adc
push
imul
cld
iret
pop
sbb
repz
lods
jge
(bad)
sub
repz
iret
xchg
mov
ror
sti
inc
iret
sbb
dec
jle
repz
ds
xchg
add
mov
cmps
ds
push
out
repz
loop
jg
add
popa
cmps
imul
jns
call
out
imul
cld
pop
push
jl
bnd
ret
mov
(bad)
in
out
es
out
leave
xlat
add
lahf
adc
sbb
and
adc
jl
sub
xor
aas
xchg
aas
mov
adc
out
inc
std
mov
clc
(bad)
lea
movs
lods
cmp
repz
mov
mov
jg
int
jns
out
push
fld
in
cmp
scas
in
or
inc
mov
stc
std
or
jnp
test
in
outs
pop
test
cmovg
test
jl
pushf
loope
test
cld
pop
movs
lods
ret
jg
scas
outs
fsubr
sar
adc
jg
mov
mov
aas
sub
jge
sar
inc
std
jo
stos
pop
mov
adc
jb
mov
test
inc
jge
mov
mov
or
aas
inc
stos
push
stos
out
aas
push
push
push
(bad)
mov
in
lock
iret
pop
xor
xchg
stos
jg
iret
repz
xchg
pop
mov
shl
cmc
mov
shl
dec
sahf
or
out
repz
add
lods
adc
(bad)
push
mov
(bad)
mov
lods
inc
lods
jecxz
ret
lods
push
lods
popa
jle
je
xchg
xchg
lahf
add
or
mov
mov
mov
mov
pushf
push
mov
jmp
ja
outs
in
cmc
std
(bad)
mov
shl
lahf
xchg
les
jae
(bad)
loop
repnz
xor
out
cmp
dec
cmp
repz
dec
push
push
pop
pop
repz
repz
outs
or
jge
jbe
xor
(bad)
stos
ins
cwde
jae
jae
les
mov
xlat
out
leave
add
aam
jp
lock
or
les
pop
popa
sub
mov
push
je
mov
lock
add
mov
popa
xchg
pop
xlat
mov
fsubp
ret
xchg
aaa
scas
aas
scas
adc
push
bound
lock
pop
(bad)
movq
jp
mov
mov
or
mov
mov
lahf
and
sbb
mov
test
mov
fidiv
enter
ror
mov
enter
cmp
scas
cld
pushf
clc
fwait
sti
add
jo
inc
scas
call
mov
add
inc
icebp
jae
jp
scas
dec
jle
(bad)
jb
mov
or
movs
jge
mov
movs
jbe
jmp
lock
push
ja
scas
leave
nop
jl
shr
repz
jmp
cld
mov
ins
sub
ds
mov
mov
sub
xchg
inc
cmp
inc
lods
xchg
ja
fsubr
jne
jl
movs
xchg
aas
adc
mov
test
mov
add
(bad)
inc
stos
jnp
ins
hlt
in
mul
aam
sbb
clc
jns
mov
scas
xchg
jl
js
aam
xor
pusha
js
lock
push
js
mov
pop
popf
out
dec
mov
div
in
xor
ret
xchg
outs
mov
mov
mov
in
cmp
xchg
out
fs
(bad)
mov
or
ret
lahf
sub
jp
xchg
lock
jns
mov
mov
mov
loope
mov
mov
repz
pop
aas
inc
add
aam
mov
mov
pop
pop
mov
or
jmp
int3
push
ins
jp
iret
mov
out
int
iret
xchg
aad
mov
clc
add
pop
mov
adc
pop
bound
adc
mov
add
inc
ret
xchg
push
mov
mov
xchg
test
mov
fbld
aad
jnp
jl
gs
jnp
dec
mov
jnp
loope
jne
jnp
mov
lock
lahf
mov
mov
mov
test
jl
fidiv
xchg
(bad)
mov
lock
jl
jl
mov
out
(bad)
mov
inc
dec
cmp
mov
lock
pop
mov
mov
mov
loop
xor
cmp
in
mov
addr16
pop
xchg
cld
push
nop
mov
jge
pop
xchg
pop
ds
mov
mov
dec
mov
emms
clc
jns
xchg
inc
jle
sbb
in
lock
clc
or
mov
and
ds
lds
outs
mov
stc
jl
xchg
(bad)
in
mov
pop
addr16
popf
xchg
inc
jg
pop
ss
loopne
jns
mov
add
data16
in
mov
push
cmp
xchg
inc
xor
jg
arpl
mov
js
ret
xchg
fbld
mov
mov
mov
addr16
loope
mov
dec
ja
sbb
out
iret
mov
jmp
sahf
or
xchg
mov
pusha
or
ror
dec
out
repz
(bad)
inc
ins
mov
fidiv
jle
add
or
ret
ret
or
adc
sbb
iret
and
call
sub
pop
push
(bad)
out
sti
dec
push
sub
lahf
or
sbb
cmp
mov
sti
add
jp
lock
cmp
cmps
aad
cmp
and
mov
mov
mov
mov
(bad)
lock
mov
mov
mov
lock
fnsave
mov
lahf
(bad)
pop
push
or
lods
xor
cmp
test
push
sbb
mov
inc
xor
mov
call
test
mov
cs
xor
mov
and
mov
sub
test
ins
stos
out
and
mov
sahf
out
out
rol
pushf
cld
pop
fsubrp
sbb
les
das
inc
dec
sbb
arpl
add
mov
inc
loope
mov
sub
test
test
ds
(bad)
mov
mov
mov
or
mov
clc
cld
mov
add
ret
jl
emms
test
pop
ds
mov
push
mov
push
mov
mov
push
push
mov
lahf
iret
mov
mov
out
jge
add
mov
lahf
fadd
and
in
test
icebp
mov
mov
mov
cld
call
fidivr
nop
xchg
mov
or
adc
mov
mov
jl
inc
mov
popf
ret
pop
mov
fsub
inc
out
adc
pop
xchg
cdq
clc
push
and
mov
cld
sahf
cmp
xchg
sahf
cmps
lahf
cld
(bad)
scas
cmps
and
jb
repnz
das
ds
xlat
pushf
xchg
test
jmp
lods
mov
lods
jg
hlt
(bad)
(bad)
int
cld
add
(bad)
lock
or
adc
pop
ds
mov
daa
jmp
neg
test
(bad)
(bad)
fsub
repnz
jp
jecxz
sahf
out
add
retf
xor
aaa
stos
mov
xchg
pop
call
mov
nop
out
ds
lock
mov
mov
imul
imul
out
jns
pushf
in
pop
ds
and
mov
mov
iret
xor
pop
push
out
repnz
push
sahf
out
sahf
or
imul
cld
pop
jbe
mov
jns
out
xchg
adc
sahf
lods
adc
retf
adc
ret
out
mov
ret
ret
sbb
fnstcw
jl
rol
cs
pushf
adc
mov
xlat
ss
mov
test
push
pop
jmp
add
fprem
pushf
test
aas
jp
cmp
aas
in
test
push
mov
push
sbb
(bad)
loope
sub
pop
xor
cmp
cmp
dec
repz
scas
pop
or
mov
adc
ret
xchg
jmp
mov
sar
out
pop
shr
push
aas
aas
idiv
pop
shl
adc
ror
or
nop
mov
ja
pop
fmul
jns
add
pop
sahf
out
add
clc
clc
icebp
pop
xor
iret
mov
pop
jl
call
imul
pop
sub
xor
repnz
loope
rol
mov
(bad)
push
test
ud0
shl
ret
xchg
shl
lods
shl
xchg
(bad)
rcl
ffree
push
sbb
inc
jno
mov
push
pushf
mov
ret
jle
inc
ret
push
(bad)
repnz
pop
add
ins
sahf
out
outs
jns
cmp
(bad)
aas
retf
iret
(bad)
scas
mov
out
jns
mov
(bad)
add
fiadd
ret
scas
jns
outs
inc
(bad)
stos
scas
mov
loope
sbb
mov
call
ret
cmp
push
pop
push
ret
pop
gs
fcomip
rep
jne
jle
jle
mov
cmp
add
nop
in
out
fabs
jmp
ret
fs
(bad)
fsub
ret
xchg
les
les
out
out
test
push
mov
in
ret
jg
jg
xchg
cmps
(bad)
clc
lock
loope
(bad)
(bad)
(bad)
(bad)
iret
xor
ficom
cmc
les
fmul
(bad)
jno
jl
iret
mov
aam
in
jge
clc
lock
adc
ins
out
ds
je
jl
and
test
mov
(bad)
loop
jecxz
lds
movs
or
mov
stc
das
fwait
out
jo
(bad)
(bad)
mov
loopne
push
pop
mov
(bad)
push
in
fsubp
stc
add
enter
fwait
jecxz
or
sub
(bad)
ds
clc
push
pop
stos
push
xchg
inc
xchg
mov
(bad)
mov
nop
xchg
push
es
sub
mov
lea
inc
aam
jg
mov
pop
mov
repz
sti
add
ds
and
(bad)
icebp
xchg
pop
adc
sbb
and
cli
fbld
enter
mov
mov
mov
adc
sbb
(bad)
xlat
lea
pop
dec
(bad)
push
(bad)
pop
pop
xor
icebp
mov
xor
scas
into
(bad)
sti
xchg
xchg
arpl
or
loope
xlat
loope
(bad)
mov
xchg
(bad)
(bad)
mov
mov
out
(bad)
out
adc
pop
xchg
mov
inc
mov
or
xchg
repz
int3
(bad)
in
push
jnp
(bad)
repz
in
in
mov
cld
lock
lahf
add
or
mov
bswap
adc
pop
pop
(bad)
loop
sbb
push
retf
repz
sbb
(bad)
imul
xor
mov
adc
push
enter
iret
lahf
in
outs
ja
repz
cmp
jg
push
(bad)
(bad)
mov
cmp
xchg
rcl
ret
icebp
aas
iret
add
push
leave
push
leave
cmp
lahf
xchg
xchg
ret
lahf
arpl
scas
repz
hlt
clc
pop
repz
cmp
adc
cmp
cwde
loopne
lock
xchg
rcl
jecxz
dec
leave
push
dec
out
pop
jl
pop
ret
(bad)
imul
ins
leave
mov
leave
jge
adc
sbb
int
jae
ret
push
or
jae
lods
cwde
pop
stos
ja
pushf
cwde
maxps
leave
mov
jge
ret
xchg
sbb
jg
pusha
test
scas
push
pop
out
les
jo
push
leave
aas
jl
lock
leave
push
retf
lock
neg
xchg
dec
call
add
sub
xor
xchg
lock
retf
dec
retf
loope
push
retf
fs
lods
outs
hlt
call
mov
cdq
bndstx
icebp
sti
jmp
jb
mov
call
fwait
jnp
cmp
cld
loope
xchg
sbb
xchg
jle
idiv
push
retf
xor
push
retf
iret
repz
push
es
jns
sub
or
jns
out
or
or
out
packssdw
stc
stc
mov
adc
imul
adc
mov
mov
jns
sbb
sbb
sbb
repz
pop
int3
aam
fsub
jns
jmp
and
and
cmp
xchg
hlt
cld
and
sahf
(bad)
loop
or
and
jnp
adc
stc
sub
repz
in
sub
cmp
(bad)
dec
test
aas
or
add
jne
push
fbld
popf
pop
xchg
jo
popf
clc
pushf
loope
xchg
jae
jnp
or
int3
lahf
gs
cld
cmp
inc
loop
and
icebp
test
sub
lea
push
sbb
sahf
mov
push
aam
imul
xchg
jns
sub
mov
pop
test
stc
movs
scas
aas
and
div
sbb
(bad)
mov
out
enter
int
pop
sahf
pop
out
sub
pop
ds
xor
push
int
mov
fmul
int
adc
jg
sahf
push
add
adc
addr16
int3
(bad)
xlat
mov
mov
xor
ss
and
int
add
cwde
push
adc
dec
sub
(bad)
es
push
mov
and
or
loope
popa
int
int
js
enter
or
mov
in
mov
xchg
int
xchg
pop
(bad)
repnz
shr
shl
int
jns
out
mov
pop
(bad)
movq
mov
adc
push
js
or
pop
pop
mov
dec
push
xor
jnp
hlt
aam
mov
lahf
ret
in
cld
pop
ds
not
lahf
inc
dec
into
jmp
adc
call
into
and
jmp
iret
and
into
xor
jg
(bad)
lock
or
or
inc
or
mov
not
(bad)
sbb
inc
mov
inc
xor
adc
sbb
iret
mov
jle
jp
jo
xchg
(bad)
js
or
mov
nop
and
iret
repz
jne
loope
int
or
pop
mov
pop
mov
ror
mov
or
into
jl
pop
ds
jmp
repz
sti
into
(bad)
loop
or
iret
or
jns
out
add
cmp
inc
ss
gs
inc
sbb
mov
xlat
ror
mov
imul
outs
iret
movs
lock
jbe
jle
xchg
jns
mov
mov
xchg
out
sahf
out
sahf
or
jns
mov
mov
adc
adc
adc
pop
adc
adc
lock
xor
jecxz
add
adc
mov
lahf
rcr
ret
or
adc
sbb
cmp
(bad)
and
sub
sar
rol
sar
lock
dec
rcl
pop
rol
jecxz
pop
retf
adc
cmp
dec
fcmovb
gs
out
mov
adc
rol
in
xchg
pushf
aas
aas
aas
iret
add
push
rol
xchg
pop
int3
rcl
rcr
repz
(bad)
mov
lahf
mov
adc
mov
out
out
out
shl
neg
pop
not
push
sbb
jmp
xchg
sbb
sbb
js
loope
sbb
push
push
pop
cmps
int3
jecxz
mov
(bad)
and
and
imul
inc
and
das
mov
add
xchg
fist
hlt
movs
and
cmp
shl
rol
rol
xchg
pop
push
dec
rcl
pop
sar
lock
shr
jbe
adc
mov
push
stc
stc
stc
stc
movups
add
jns
out
adc
pop
sahf
adc
pop
ja
mov
sbb
sbb
sbb
sbb
jns
in
pop
sahf
pop
and
hlt
iret
repz
and
mov
shl
sar
imul
stc
mov
adc
xor
fwait
shl
fwait
shl
sub
mov
icebp
xor
cs
sub
repz
arpl
xor
xor
iret
push
movs
pop
loop
loope
dec
and
mov
mov
pusha
out
mov
daa
sbb
adc
adc
arpl
mov
add
repnz
repz
mov
in
jecxz
xor
iret
iret
repz
add
iret
repz
or
adc
repz
sbb
adc
adc
xor
js
inc
cmp
adc
rcl
jmp
loope
and
jns
loope
and
xor
lods
mov
fdiv
int3
test
push
int3
imul
mov
cmp
add
pop
adc
mov
or
lock
fdivr
iret
rep
enter
jecxz
sub
in
les
xor
push
cmp
ins
stos
inc
stos
adc
add
movq
lock
cmp
ins
daa
mov
mov
daa
sub
lods
mov
cmp
(bad)
cmp
(bad)
lods
stos
int3
aam
aam
aam
jne
clc
ins
aam
jl
jl
jg
repz
mov
pushf
pop
(bad)
sub
or
cld
mov
(bad)
repnz
in
xchg
xchg
in
aam
aam
add
jle
aam
ud0
and
call
sub
sub
cld
pop
(bad)
popf
push
pop
ret
pop
inc
cld
jne
shr
cs
lods
js
aad
push
lods
inc
(bad)
pop
sub
add
lea
pop
xor
cwde
aad
cmp
jmp
mov
lock
(bad)
mov
aad
aad
adc
ret
repz
cmp
sahf
sti
add
sub
xor
(bad)
mov
pop
lea
gs
js
or
scas
lods
scas
dec
mov
sbb
scas
ret
(bad)
push
push
aas
jl
gs
ins
(bad)
jne
aas
jl
lock
test
(bad)
(bad)
int3
mov
adc
mov
dec
js
mov
scas
arpl
cmp
retf
pop
mov
ror
inc
repz
(bad)
sahf
pop
mov
fcom
xchg
lahf
mov
call
mov
loope
add
or
adc
sbb
xchg
inc
xlat
arpl
cmp
xchg
mov
mov
cmp
cmp
lahf
adc
inc
dec
xlat
das
ret
xchg
push
xlat
pop
xlat
ret
xchg
mov
jno
adc
loop
ds
out
xlat
mov
cld
loope
pop
xchg
xlat
cdq
xlat
ja
pop
retf
sbb
repz
jno
mov
mov
push
(bad)
push
xor
retf
call
push
mov
lds
mov
lahf
lahf
pop
mov
mov
out
fsub
jns
out
pop
in
or
adc
mov
xlat
jecxz
loope
pop
fsubr
fidiv
stc
xor
out
fild
aaa
or
loope
pop
fcomp
fsub
fsubr
pop
imul
fadd
lock
fcomp
in
std
pushf
ins
xchg
pop
retf
scas
jne
in
sahf
dec
add
(bad)
aam
(bad)
cmp
mov
repz
out
cld
push
pop
or
enter
dec
inc
hlt
dec
mov
mov
mov
ja
in
add
jl
mov
cmps
fldcw
mov
div
xchg
mov
sub
into
push
(bad)
repz
pop
sahf
pop
loope
or
repz
icebp
or
or
icebp
mov
mov
shr
addr16
adc
xor
out
add
cmc
pushf
jmp
test
repnz
push
and
pop
sub
xor
fist
nop
pop
fisub
push
and
(bad)
mov
icebp
xchg
push
cmp
inc
mov
jl
pop
movs
fisubr
sub
jmp
ins
push
(bad)
fiadd
cld
addr16
fidiv
sub
and
xchg
mov
jge
pop
jb
addr16
xor
cmp
popa
mov
repnz
add
add
mov
sbb
arpl
shl
and
clc
mov
cld
mov
jecxz
jnp
sbb
mov
or
loop
or
adc
push
fsub
jns
out
cs
lahf
in
dec
or
fimul
xlat
mov
jnp
ret
xchg
je
jl
mov
(bad)
call
mov
mov
lock
pop
pusha
mov
cmp
add
pop
mov
iret
int
add
(bad)
or
jg
repz
and
jns
xor
push
inc
cmp
pushf
jnp
fnsave
frstor
mov
xchg
fnstsw
mov
movq
mov
mov
mov
jne
xor
and
(bad)
sbb
lock
(bad)
mov
fst
fnstsw
(bad)
retf
xchg
test
xor
cmp
inc
mov
loope
xlat
loope
mov
movq
lock
ficom
loope
mov
aam
jl
enter
mov
leave
add
dec
ficom
pop
ficom
pop
jle
fidiv
sbb
fidiv
aas
(bad)
clc
lock
nop
out
pop
loope
push
mov
les
icebp
loope
jo
mov
(bad)
stc
stc
rcr
lahf
lea
mov
jecxz
jmp
xchg
jnp
(bad)
sti
and
jae
add
or
sahf
pop
out
sbb
and
cs
jns
sub
inc
add
pop
out
popa
dec
fist
jg
ret
xchg
popa
fild
push
xchg
fs
cmp
aas
pop
(bad)
stos
or
ret
xchg
fistp
xchg
cmp
loope
xchg
iret
(bad)
fisttp
xchg
inc
adc
push
xchg
ja
mov
adc
in
mov
fdivr
repz
or
add
dec
inc
cmp
jecxz
loopne
loopne
loopne
lock
std
xchg
jl
jge
sbb
es
mov
mov
mov
pop
loopne
cld
xchg
jg
ins
loopne
loopne
nop
jge
test
(bad)
loopne
loopne
sbb
mov
daa
mov
jecxz
int3
stc
stc
mov
cld
fnstsw
or
cmovae
adc
test
out
xchg
xor
cmp
adc
xchg
inc
loope
loope
loope
out
loope
loope
or
fisub
loope
pop
jl
je
jl
iret
repz
test
mov
cmp
repz
lahf
push
cmps
pop
scas
repz
repz
repz
retf
sbb
cmp
repz
in
in
pop
cmc
push
cmp
repz
and
loop
pop
jnp
adc
sbb
jle
ret
loop
loop
iret
ret
mov
mov
test
pop
test
adc
mov
inc
pop
jecxz
jmp
xor
mov
dec
and
sub
add
adc
inc
ror
out
mov
loop
outs
and
jl
pop
loop
(bad)
loop
mov
jns
mov
jns
lahf
mov
jns
out
test
ja
sahf
mov
repz
adc
adc
adc
jns
sub
xor
ds
jecxz
xchg
pop
adc
sbb
and
sub
mov
jg
xor
cmp
nop
mov
push
jecxz
loope
xchg
popa
jecxz
jecxz
dec
repz
es
xchg
sub
sub
jns
(bad)
sub
jmp
pushf
sub
xchg
out
mov
pushf
das
leave
xor
jns
(bad)
xor
xchg
(bad)
jmp
(bad)
jecxz
jns
(bad)
jmp
jecxz
pop
in
cmp
inc
push
cmp
cmp
mov
in
dec
in
arpl
sub
cmps
jecxz
cdq
in
sub
xchg
push
pop
jecxz
cdq
jns
in
cmp
in
div
cmp
dec
mov
mov
sti
(bad)
ficom
repz
pop
test
jge
iret
rcl
aaa
repz
in
int
dec
push
int3
repz
icebp
pop
sbb
dec
fild
in
jno
pop
adc
add
sbb
jecxz
fwait
in
in
cmp
in
shl
int3
in
in
dec
fs
call
addr16
mov
in
int3
cmp
push
imul
jno
ins
in
pop
xchg
jg
mov
test
mov
jae
xlat
jmp
std
and
out
loope
jno
pushf
pop
in
jns
jp
inc
(bad)
shl
jnp
sahf
lahf
pop
mov
sbb
call
out
out
jg
jecxz
inc
call
out
out
repz
xchg
cmp
mov
mov
mov
div
mov
jno
sbb
out
out
mov
inc
xlat
push
shl
test
mov
out
push
fsub
xor
cmp
movlps
and
out
out
jns
repz
iret
add
movs
lods
out
jg
sub
rcr
xchg
cdq
(bad)
jns
std
rcr
jmp
nop
ret
jg
pop
loopne
xor
jl
lock
call
lock
pop
call
jl
mov
out
loop
sbb
enter
repz
loopne
clc
lahf
out
push
add
or
sbb
jmp
push
inc
xor
sbb
enter
hlt
cld
jl
dec
push
js
mov
sahf
out
mov
push
jbe
cmp
sar
jmp
into
lea
int3
into
mov
ja
test
int3
xchg
leave
cld
cld
cld
clc
mov
ret
retf
cld
cld
cld
cld
rcr
jecxz
icebp
cmp
push
sti
(bad)
ror
retf
xlat
or
mov
sub
xor
stc
mov
lock
inc
dec
adc
in
push
cld
arpl
mov
xchg
ja
cld
retf
(bad)
fisttp
xchg
jmp
xchg
les
sbb
adc
div
ja
adc
les
fcmovnbe
in
dec
mov
mov
(bad)
jle
dec
mov
outs
mov
sbb
iret
jmp
out
xchg
xchg
hlt
cmp
neg
pop
retf
bextr
sahf
xlat
repnz
mov
addr16
out
sub
neg
jg
xor
jmp
pop
test
xor
out
lods
int3
int3
int3
call
and
int3
lock
xchg
jg
xchg
(bad)
jmp
xor
clc
xchg
jmp
jmp
dec
retf
std
test
jle
jle
fucom
in
mov
lahf
inc
in
or
clc
adc
(bad)
arpl
fcmovnb
xchg
push
in
pop
in
(bad)
in
sahf
out
add
add
jmp
in
jecxz
not
in
lods
push
fisttp
fistp
mov
dec
into
pop
sti
test
aas
sbb
adc
add
into
repz
icebp
in
mov
add
repz
(bad)
out
out
fucom
loop
or
mov
in
sub
mov
(bad)
push
in
sbb
sub
push
adc
addr16
adc
push
xchg
out
sub
mov
int
xor
arpl
sbb
jp
jne
inc
pop
(bad)
jecxz
js
push
repz
in
add
xchg
in
jg
pop
(bad)
call
mov
out
out
vpmullw
jnp
out
add
pop
inc
mov
popf
sub
or
push
jno
imul
sar
jge
loope
shr
gs
pop
inc
add
jl
sbb
or
adc
sahf
imul
ds
and
repz
in
inc
or
js
mov
mov
mov
xchg
call
mov
stc
ss
movs
jmp
setae
clc
lock
mov
jbe
jle
xchg
lock
push
out
mov
xchg
nop
jl
sahf
out
cmps
out
scas
out
icebp
loope
xchg
out
iret
repz
arpl
or
iret
push
lock
stc
mov
std
pop
ficom
xchg
imul
adc
cmp
out
loope
sbb
rcl
clc
ret
fist
jmp
inc
out
je
pop
xchg
mov
mov
adc
pop
cmps
dec
rol
xchg
dec
cmp
inc
out
dec
out
pop
ds
push
push
out
pop
out
lahf
pop
mov
pusha
out
jb
out
sahf
lahf
or
jns
call
lahf
lahf
mov
ret
adc
cld
pop
fidiv
cmps
icebp
(bad)
out
fmulp
mov
jae
out
cmps
xchg
mov
dec
loope
or
and
test
cmp
mov
sar
icebp
mov
mov
ja
(bad)
rcl
(bad)
lahf
and
pop
ds
jp
dec
lock
lock
pop
mov
add
and
sbb
jb
fcmovnbe
ss
jle
jle
mov
(bad)
xchg
xor
mov
xchg
pop
mov
jmp
mov
les
cmc
sbb
pop
ds
adc
sbb
inc
aad
enter
aad
cmp
les
jle
test
lahf
inc
aas
int3
xchg
iret
repz
sub
icebp
dec
icebp
clc
push
or
icebp
bound
push
js
lds
jl
mov
mov
jns
or
or
in
jmp
clc
pop
cmp
or
adc
cmps
and
mov
ss
inc
sub
cmps
cmp
mov
sbb
repz
ins
sbb
adc
cdq
icebp
repz
movs
and
rcl
iret
rep
cmp
cmp
dec
daa
pop
sub
jns
sub
cld
cmp
lahf
xchg
xchg
clc
fdiv
repz
jle
mov
jns
aas
retf
ror
(bad)
cmp
xchg
out
loope
ss
add
fdivr
les
jecxz
cmp
sahf
out
cmp
cmp
xchg
xlat
pop
hlt
pop
ds
push
hlt
push
hlt
push
hlt
sahf
jg
movaps
xor
mov
cld
pop
(bad)
sub
cmp
mov
ss
fwait
dec
hlt
push
hlt
(bad)
jg
sahf
and
in
out
popf
mov
retf
(bad)
(bad)
cmp
ss
repnz
imul
push
cmc
push
cmc
or
ds
push
cmc
push
cmc
es
loop
or
jns
out
adc
jns
out
dec
push
push
pop
pop
cld
pop
sahf
out
sbb
iret
(bad)
test
xchg
pushf
or
test
add
fnstcw
jl
pop
(bad)
inc
sbb
cmc
aam
add
pop
fsub
cmc
fadd
inc
dec
or
jp
mov
push
mov
xlat
xor
mov
xchg
mov
out
jl
sbb
pop
cld
aas
mov
std
das
ds
sub
or
test
xchg
mul
dec
imul
neg
div
div
addr16
stc
jns
test
imul
call
lods
adc
ret
adc
adc
fist
stc
jmp
sbb
dec
icebp
cmp
sbb
mul
ret
jmp
push
not
neg
idiv
sub
imul
lds
repnz
cmc
and
mov
das
jnp
pushf
shl
repz
ins
div
cmp
lds
jecxz
call
mov
(bad)
iret
push
loope
div
jg
aas
mov
mov
neg
es
out
add
sbb
mov
inc
mov
jbe
jno
or
clc
iret
repz
loop
add
clc
movs
mov
xchg
fprem
mov
mov
lock
sar
add
jg
cmp
inc
lods
adc
xor
(bad)
mov
fidivr
jl
ror
stc
jmp
aad
sub
ins
jl
inc
aam
in
hlt
mov
faddp
xchg
xchg
stc
arpl
fs
lock
stc
jbe
cmp
mov
repz
stc
stc
mov
push
sti
jmp
cli
cmp
repz
fadd
ficomp
mov
fs
out
jecxz
fbstp
popf
sub
jmp
ret
xchg
pop
cmp
dec
fistp
(bad)
out
sbb
iret
add
retf
mov
fistp
push
pop
or
rcr
out
sub
lahf
sbb
idiv
(bad)
mov
sub
repnz
and
mov
sbb
inc
loopne
call
aas
adc
sti
mov
fiadd
inc
call
cld
xbegin
sti
pop
ret
xchg
imul
ret
jmp
clc
(bad)
sti
fwait
sti
jne
(bad)
loop
or
jne
mov
pop
daa
hlt
fs
std
stc
stc
stc
icebp
loopne
lock
ds
clc
add
or
push
cld
clc
lock
and
sub
aaa
jns
out
or
dec
out
sahf
out
pop
or
jns
outs
vmwrite
test
out
adc
xchg
mov
sahf
(bad)
popf
push
(bad)
pop
out
sahf
out
sbb
sbb
sahf
out
sahf
sbb
sbb
sbb
jbe
and
std
adc
ret
xchg
pop
push
std
sub
xor
aas
std
jl
lock
std
push
std
pusha
std
popf
loope
and
jbe
(bad)
clc
call
sub
jge
call
jg
(bad)
(bad)
jecxz
loop
(bad)
cld
add
clc
outs
adc
sub
jl
push
jl
push
jecxz
stos
sahf
xchg
and
ds
jo
jecxz
inc
lock
pop
dec
(bad)
push
(bad)
pop
(bad)
pusha
(bad)
loope
xchg
cmp
pop
jg
icebp
cdq
jbe
mov
xor
in
jne
sbb
in
push
loope
add
jecxz
jecxz
xchg
push
jecxz
enter
dec
div
jecxz
les
lea
iret
(bad)
jle
in
lock
lahf
sti
mov
jle
push
call
inc
loope
xchg
and
sub
jns
sub
aaa
inc
(bad)
iret
(bad)
in
outs
adc
out
mov
adc
adc
cmps
push
mov
sub
pushf
sbb
cmp
loop
(bad)
jmp
pop
hlt
jmp
ret
pop
jle
xor
call
popf
dec
adc
in
test
pusha
xchg
sub
ficom
jbe
mov
hlt
mov
retf
repz
ja
stc
jns
pop
data16
mov
sub
leave
repz
or
xor
icebp
clc
lock
cmp
test
jmp
pop
mov
repz
(bad)
cmp
in
sbb
add
and
xchg
or
adc
sbb
dec
add
or
sub
out
lahf
pop
inc
les
cmc
cmp
cmp
fadd
out
out
sub
pop
push
(bad)
pop
out
add
jnp
pop
mov
aas
xchg
mov
imul
neg
pop
je
jb
cmp
pop
add
in
jbe
pop
ret
pop
dec
cmp
fdiv
mov
loope
pop
inc
call
xchg
pop
(bad)
pop
add
ins
add
jmp
ret
jne
jge
test
pop
iret
iret
(bad)
lea
call
(bad)
jmp
adc
push
add
xchg
das
add
aas
out
pop
mov
mov
stc
jg
pop
cwde
jmp
aad
loopne
push
xchg
clc
add
dec
inc
push
loope
cmp
dec
jmp
nop
mov
mov
inc
call
clc
or
pop
icebp
loope
push
inc
jmp
jmp
ja
popf
inc
cwde
jmp
inc
aas
jl
jecxz
add
adc
mov
inc
dec
in
pop
and
(bad)
cld
push
cld
mov
ret
add
mov
in
mov
jne
cld
call
out
adc
and
int3
mov
push
js
dec
(bad)
out
sbb
ja
cmp
or
sbb
mov
out
or
aas
out
jo
dec
repz
stos
mov
jg
and
out
jmp
ds
cmp
dec
out
pop
out
fsub
jmp
mov
mov
mov
std
jp
push
push
(bad)
scas
mov
push
loope
lock
ins
push
icebp
loope
push
jo
xor
scas
mov
xor
iret
cmp
fsubr
mov
and
shl
jne
int3
sub
sbb
arpl
ss
icebp
rol
lahf
dec
icebp
push
push
push
or
mov
lods
rol
call
test
adc
inc
stc
mov
push
dec
push
mov
out
in
je
sti
nop
clc
jl
push
bnd
aad
jmp
mov
xchg
repnz
repnz
jo
rol
repz
repnz
mov
mov
inc
cmp
test
fadd
ja
dec
repz
push
in
push
mov
arpl
out
std
add
pop
aad
out
sub
mov
and
(bad)
repz
pop
out
pop
div
push
call
aam
scas
into
and
(bad)
sub
adc
loope
cmp
dec
hlt
in
pop
or
dec
out
clc
fild
add
idiv
loope
retf
out
cdq
retf
(bad)
jnp
lods
std
in
ds
sbb
and
add
cmc
or
ds
lock
cld
fs
(bad)
out
lock
cmc
je
mov
cmp
xchg
pop
test
fsub
cmp
cmp
mov
pop
mov
xchg
or
aas
retf
pushf
pushf
or
std
xchg
mov
cmp
aas
and
ins
not
mov
inc
in
mov
sbb
ret
inc
or
cmp
repz
inc
or
push
out
sahf
pop
pop
or
adc
loopne
push
shl
(bad)
out
clc
js
div
jmp
movq
mov
xchg
or
inc
xchg
jle
out
pop
mov
cld
retf
or
out
fwait
(bad)
iret
fninit
or
jae
xchg
xchg
ja
in
div
dec
or
or
nop
pop
das
or
or
xchg
add
xor
ja
sub
je
cmp
add
aas
ss
sbb
mov
sbb
mov
pop
mov
cld
cmp
ss
cld
(bad)
repz
out
in
cmc
std
pop
clc
pop
icebp
add
iret
repz
adc
jns
pop
sub
mov
inc
add
and
push
lock
clc
and
dec
mov
xchg
pusha
jb
ds
or
shl
add
repz
or
sahf
cmps
mov
aas
aas
iret
repz
repz
adc
adc
(bad)
jecxz
(bad)
std
adc
or
sahf
out
sbb
or
sbb
repz
cmp
iret
repz
sbb
repz
pop
bound
jne
cld
cld
cmp
jge
lea
push
mul
xchg
or
sbb
clc
mul
iret
out
mov
push
adc
fidiv
pop
sti
scas
stos
mov
dec
sbb
call
cmps
bound
fadd
(bad)
sub
push
or
loope
scas
es
stc
stc
mov
inc
push
pop
xchg
out
stc
push
repnz
mov
mov
mov
push
lahf
or
stos
or
jle
test
or
loope
mov
or
test
mov
cld
inc
cld
mov
or
jle
lock
(bad)
jecxz
pop
ds
int3
scas
or
std
aad
dec
ret
xor
adc
scas
arpl
cld
in
cld
inc
clc
jg
iret
dec
push
push
nop
in
jl
pop
repnz
sar
dec
outs
mov
inc
xchg
ja
setb
(bad)
pop
inc
jg
scas
lods
scas
xchg
ja
and
cld
std
jne
push
push
enter
jle
clc
lock
addr16
jg
imul
adc
mov
not
inc
add
jl
test
idiv
div
out
mov
xor
jl
fisttp
in
stos
out
imul
hlt
ins
stos
outs
(bad)
mov
xor
mov
(bad)
jl
lock
pand
repz
stos
ret
xchg
(bad)
mov
clc
cmp
pop
psraw
pop
ds
punpckhwd
jno
pop
mov
push
mov
aam
mov
mov
push
and
add
mov
mov
scas
push
xor
movs
dec
(bad)
cld
loope
xchg
setl
movs
cmovae
int
aad
lahf
aad
scas
inc
aaa
fisttp
in
aas
aas
xchg
cmc
cld
cmp
iret
add
sbb
mov
add
jne
pop
add
gs
(bad)
mov
add
adc
jmp
retf
push
mov
xor
xor
pop
hlt
mov
add
sub
out
push
xchg
outs
shr
add
mov
in
scas
or
(bad)
mov
inc
add
xchg
mov
pop
inc
xchg
jecxz
jecxz
ret
lahf
popf
xchg
div
rep
lods
xchg
das
and
mov
xchg
imul
xor
int
icebp
loope
or
adc
adc
ret
pop
jg
dec
mov
jl
dec
add
add
ret
(bad)
iret
jmp
or
adc
mov
cld
loope
adc
adc
sbb
adc
adc
lock
cmp
inc
adc
push
scas
loope
jg
nop
mov
getsec
and
cld
add
jl
push
enter
jae
lock
pop
jnp
adc
adc
retf
fwait
adc
cwde
stos
adc
jl
lock
mov
nop
jb
retf
nop
mov
test
pop
aaa
cli
jnp
push
pop
aas
aas
idiv
push
adc
arpl
cmp
push
cmp
hlt
fidivr
adc
mov
adc
push
dec
add
pop
adc
adc
mov
mov
jo
push
fs
dec
les
mov
mov
cdq
xchg
aad
hlt
jmp
xlat
cmp
xlat
aaa
mov
sbb
push
add
pop
pushw
adc
push
das
ds
call
pop
stc
stc
lahf
aaa
mov
jmp
popa
loop
lahf
push
sar
mul
ret
aas
pop
dec
adc
adc
stos
lock
mov
mov
adc
out
test
es
adc
retf
lahf
lds
xchg
retf
xlat
leave
cmp
(bad)
(bad)
xchg
out
sti
mov
ret
sbb
sub
cmp
jg
outs
loop
outs
fcom
push
adc
test
jle
add
fadd
stc
aad
enter
pop
inc
jo
sbb
and
scas
sahf
aas
mov
xchg
pop
push
mov
jo
cwde
or
(bad)
cld
cld
clc
(bad)
adc
lods
mov
repz
(bad)
pop
mov
pop
pop
sti
loop
fdivr
push
leave
iret
(bad)
in
dec
ins
hlt
dec
rol
(bad)
jge
(bad)
push
or
and
scas
imul
sbb
or
sbb
out
stc
loope
pop
sahf
aas
mov
push
jmp
xchg
outs
mov
or
and
dec
repz
sub
sbb
call
mov
stos
enter
call
div
cmp
push
add
sbb
gs
or
or
ret
and
(bad)
(bad)
aam
or
(bad)
aas
mov
push
mov
sub
iret
mov
jg
lock
pop
sbb
sbb
(bad)
movaps
mov
int
loop
adc
or
mov
mov
dec
push
push
mov
dec
ret
push
sbb
std
or
jl
sbb
out
sbb
in
stc
popf
out
sbb
mov
je
iret
mov
mov
push
sahf
loope
adc
jl
icebp
js
fmul
lahf
dec
in
mov
xchg
repnz
call
sbb
sbb
sbb
pop
(bad)
or
(bad)
xlat
mov
imul
xchg
sbb
sbb
mov
int3
(bad)
sbb
sbb
cmp
jle
sbb
pop
fistp
cmp
inc
iret
iret
iret
iret
dec
push
pop
fs
iret
iret
iret
ins
je
test
iret
iret
iret
mov
iret
lods
mov
(bad)
iret
iret
iret
iret
int3
aam
in
(bad)
iret
iret
in
hlt
cld
sbb
(bad)
sub
cld
xor
xor
adc
or
jne
fcom
enter
movs
add
fisttp
call
mov
sbb
sbb
clc
lock
sbb
sahf
lahf
out
inc
push
push
push
sbb
pop
or
mov
sbb
lds
test
inc
cmp
movs
sbb
aaa
fild
dec
or
adc
clc
push
inc
not
mov
adc
sbb
fcomp
sbb
les
outs
test
push
add
or
jmp
or
inc
retf
repz
dec
push
push
subps
xchg
pop
fs
adc
jl
mov
iret
test
repz
lods
sbb
rcl
fdivr
adc
sub
cld
sbb
mov
mov
rol
std
into
lock
adc
ja
fidiv
or
pushf
mov
icebp
jmp
adc
loopne
cmp
in
loopne
xchg
clc
and
mov
adc
ds
push
mov
push
xor
out
jns
or
sar
mov
jns
ss
push
inc
inc
push
out
lods
ds
adc
xor
mov
cmps
jg
je
aad
mov
or
repz
pop
iret
cmp
vpextrw
mov
mov
add
mov
mov
xchg
sub
xchg
sub
mov
fisub
pop
icebp
mov
ja
stos
mov
and
test
inc
push
sbb
mov
push
(bad)
jl
in
pop
jg
aas
out
mov
imul
xchg
lock
clc
(bad)
mov
popa
retf
jnp
sub
test
and
ja
inc
push
pop
add
jge
ja
push
and
xor
frstor
sahf
outs
frstor
inc
fcom
and
mov
sbb
jno
or
(bad)
mov
jo
stos
cmp
dec
sbb
mov
and
lds
jge
iret
stos
call
pop
scas
call
out
idiv
jl
clc
sbb
addr16
and
fwait
push
in
test
fnstcw
jl
ret
test
int3
sbb
adc
sbb
sub
cmc
dec
retf
fnstcw
jmp
add
rcl
idiv
fdiv
jmp
ret
jne
sbb
and
mul
jg
xor
xchg
lahf
xchg
jmp
les
lahf
add
nop
mov
js
inc
sbb
xchg
fsubp
lods
ins
dec
in
mov
lock
arpl
cmp
repz
add
add
add
sub
aaa
fdivrp
jo
and
sbb
imul
add
inc
pop
pop
xchg
and
out
repz
je
or
jnp
inc
test
cmp
inc
shl
gs
adc
cmps
(bad)
lock
inc
fs
and
jmp
cmp
clc
or
sbb
or
xchg
inc
jge
fiadd
cmps
xor
clc
push
pop
out
mov
aad
or
add
scas
xchg
(bad)
ret
sbb
push
push
out
jecxz
push
mov
jp
mov
jecxz
cmc
mov
repz
lock
sbb
jecxz
sar
pop
add
lock
sti
daa
adc
movlps
push
daa
fs
repz
push
add
adc
arpl
lods
mov
icebp
jge
jbe
push
cld
movs
sbb
stos
data16
mov
out
lock
and
jo
not
faddp
xchg
push
push
js
or
xchg
and
sub
and
retf
(bad)
shl
jg
mov
and
lahf
mov
mov
sbb
ret
jg
jge
xchg
sbb
test
(bad)
rcr
ds
(bad)
aas
mov
and
inc
mov
sbb
and
and
out
lock
lods
and
shl
pop
ds
fsub
xor
cld
and
and
cmp
pop
iret
bound
mov
push
push
out
jmp
repz
call
cmp
dec
div
add
inc
icebp
add
or
pop
inc
clc
sbb
inc
test
ja
out
push
nop
jge
stc
lahf
jl
test
hlt
xor
push
pushf
ret
sbb
in
jne
xlat
loope
and
out
push
fsubr
scas
jecxz
popf
sbb
jl
dec
and
nop
and
add
sub
and
mov
cmp
enter
push
ja
out
in
push
mov
cmp
in
xor
je
push
cmp
cld
mov
push
sti
cli
shl
pushf
lods
lods
cmp
or
jnp
out
sbb
and
sbb
hlt
add
or
scas
loope
sub
retf
jg
sub
ja
(bad)
mov
out
fdivrp
jo
mov
mov
sti
sub
scas
out
adc
jnp
(bad)
jnp
scas
out
(bad)
sbb
pushf
pop
fsubp
outs
(bad)
xchg
fisttp
and
mov
arpl
aad
xchg
data16
or
pop
sub
jae
pop
dec
sub
sub
xor
cmps
pop
es
mov
mov
enter
cwde
sub
xchg
imul
jmp
cmp
les
repz
mov
mov
enter
icebp
repz
stc
stc
stc
icebp
adc
stc
stc
stc
inc
dec
push
clc
(bad)
sbb
cwde
sbb
inc
cs
ret
(bad)
(bad)
jg
cs
in
add
cmp
popa
cmc
iret
sbb
lods
or
sbb
sub
imul
or
mov
jne
out
call
jne
fmulp
fdivr
push
cli
pusha
das
push
push
mov
cwde
das
repz
cmp
mov
leave
scas
add
lock
neg
mov
dec
loope
mov
ins
xor
mov
mov
iret
leave
repz
xor
jnp
sub
xor
pusha
xor
test
imul
jp
data16
ja
cmp
cmps
pusha
dec
fs
je
test
mov
rcl
div
in
sbb
ja
mov
js
mov
loope
aad
adc
inc
xor
xlat
cmp
and
sahf
sbb
pop
inc
ins
jo
ret
sbb
cs
pop
sbb
jnp
lahf
ja
fsubr
js
mov
mov
das
cmc
cld
rol
push
dec
in
push
mov
jge
out
std
jl
adc
fist
cs
add
das
mov
scas
mov
jge
sbb
(bad)
ret
sbb
add
push
loope
xchg
xor
out
idiv
push
rcl
sbb
aaa
(bad)
fsubr
mov
mov
cld
movs
jecxz
add
cwde
xor
xor
xor
xor
loop
cmp
inc
stc
stc
lahf
mov
jo
in
stc
stc
stc
or
xor
test
mov
jl
outs
cmp
lock
xor
xor
jnp
into
mov
icebp
jns
call
enter
gs
es
add
icebp
sbb
stc
mov
shl
jne
out
repnz
xor
fdiv
sbb
add
cld
xlat
lds
fcomi
aas
out
loopne
icebp
jl
dec
add
out
pop
inc
enter
mov
xchg
lock
jl
mov
xor
icebp
mov
ins
lea
aam
arpl
mov
inc
mov
fsubp
out
mov
jmp
ds
xor
cmps
leave
test
loop
aas
fcom
jns
enter
gs
adc
scas
aad
and
mov
ss
ss
mov
inc
aaa
xor
retf
jle
pop
not
jnp
sar
jl
enter
(bad)
in
std
pushf
jbe
iret
iret
mov
loope
sbb
cmp
cmp
aaa
cmp
cmp
test
repz
cmp
js
int
(bad)
mov
push
(bad)
mov
cld
iret
cmp
call
jnp
jl
sub
and
repz
cld
push
add
jmp
inc
rcl
aas
test
shl
retf
push
in
popf
iret
and
and
cmp
add
sbb
mov
hlt
pop
mov
mov
mov
fiadd
push
stc
mov
in
ins
adc
mov
clc
mov
jg
ds
jmp
dec
add
rcr
jae
mov
push
(bad)
adc
add
push
inc
sub
pusha
iret
repz
test
out
ret
daa
(bad)
ss
push
(bad)
cmp
add
inc
cmp
mov
xchg
inc
mov
shr
pop
jo
imul
clc
cmp
addr16
(bad)
lods
retf
cmp
jmp
mov
adc
dec
scas
ret
xchg
cmp
cmp
dec
or
pusha
cmp
cmp
mov
int
mov
mov
cmp
pop
pop
cmps
fisub
add
mov
adc
loope
or
cmp
push
cmp
push
imul
mov
pusha
scas
into
cmp
imul
jo
cmp
or
push
pop
dec
ds
sar
icebp
jl
nop
ds
(bad)
sti
mov
and
sub
out
das
out
call
out
sbb
add
repnz
sbb
ror
lds
pusha
aas
lock
mov
aad
aas
out
clc
and
rcl
(bad)
mov
fsubp
sbb
mov
out
mov
stc
sbb
add
dec
sub
rol
dec
sbb
jmp
stos
loop
sbb
push
(bad)
repz
out
cld
iret
cmp
je
jg
icebp
aas
mov
(bad)
jns
push
clc
add
(bad)
jecxz
inc
mov
fsub
inc
mov
loopne
fsubp
jge
icebp
xor
add
inc
cmp
daa
stc
icebp
inc
inc
fistp
sbb
inc
sbb
mov
cmc
cmp
sahf
outs
add
call
out
mov
(bad)
cmp
(bad)
adc
mov
emms
lods
cmp
enter
in
(bad)
and
ja
cmp
inc
xor
test
jno
dec
ins
js
out
jne
mov
mov
sbb
rcl
ficom
push
or
dec
push
inc
jecxz
(bad)
neg
fdivr
fs
xlat
aaa
icebp
mov
jns
pop
mov
fadd
jl
mov
xor
inc
stos
loope
jge
cmp
inc
retf
(bad)
enter
rol
je
ja
(bad)
clc
pop
daa
jp
test
pop
stos
cmp
loop
jl
add
inc
pusha
mov
inc
cmp
jne
bound
popa
fdiv
fidiv
mov
nop
add
mov
xchg
mov
xchg
rcl
jmp
call
(bad)
jecxz
shr
inc
(bad)
jmp
loope
inc
xlat
jg
ds
dec
cmp
pop
fstp
mov
mov
(bad)
bnd
jae
jecxz
sahf
add
(bad)
sbb
mov
clc
dec
mov
popa
adc
fcomp
or
jne
out
inc
pop
mov
mul
loopne
jl
push
pop
fdivr
data16
fadd
sbb
adc
jp
gs
add
sub
repz
jmp
cmp
test
jecxz
xor
inc
fdiv
lahf
pop
add
call
mov
lahf
pop
mov
sahf
(bad)
cmp
dec
lds
jno
dec
xor
push
(bad)
lods
pusha
pop
mov
iret
fadd
iret
jle
dec
call
xor
test
jo
dec
adc
add
fidivr
inc
and
out
dec
dec
dec
lock
retf
lahf
clc
sbb
push
out
lahf
cmps
(bad)
sub
dec
push
pusha
repz
mov
jo
sub
pop
(bad)
fcmovnb
pop
loopne
idiv
outs
mov
xchg
push
fmul
dec
sbb
clc
lock
dec
sub
dec
daa
cdq
cmps
cmp
out
leave
sti
dec
stc
stc
icebp
pop
push
dec
mov
in
sahf
in
cmp
add
cmp
repz
in
pusha
movs
mov
shl
and
dec
out
mov
sbb
or
and
cmp
mov
inc
clc
sbb
dec
cmp
add
dec
call
inc
xor
icebp
(bad)
jle
iret
pop
fcom
out
clc
je
gs
push
fcmovne
mov
mov
mov
mov
and
jg
mov
pop
mov
(bad)
icebp
(bad)
aas
int3
es
mov
mov
ret
clc
cmp
aas
cmp
enter
cld
sti
sar
dec
dec
(bad)
outs
mov
clc
(bad)
pop
lods
push
rcl
aas
aam
adc
gs
std
sbb
lahf
fwait
push
sbb
icebp
xchg
and
enter
das
jnp
push
and
jmp
cld
lea
sub
jecxz
call
sub
pop
jg
test
push
inc
fisttp
jecxz
clc
cwde
sbb
in
ins
xor
out
clc
inc
jne
sbb
add
les
out
sub
out
sbb
loope
sahf
les
movs
jecxz
jg
push
cmps
cwde
cli
stos
(bad)
pop
(bad)
jae
scas
mov
pop
mov
mov
clc
jecxz
in
scas
jg
(bad)
pop
xchg
adc
daa
mov
sub
dec
jge
mov
mov
into
hlt
fisubr
fdiv
loope
fistp
fnstsw
in
xchg
int3
jecxz
in
std
sub
push
push
retf
inc
mov
push
loopne
test
mov
std
std
add
ret
repnz
int
(bad)
jg
jmp
call
xchg
add
add
push
sub
loop
or
pop
fbld
imul
movs
or
ins
push
ds
rcr
mov
inc
aad
push
add
fsubr
sub
out
or
fild
mov
aas
cld
inc
push
sar
mov
fs
cmp
inc
pop
fdivr
(bad)
(bad)
pushw
pop
push
mov
dec
mov
pop
push
or
ret
push
adc
out
cmp
(bad)
clc
ret
(bad)
pop
mov
pop
jg
loope
push
ret
enter
mov
lds
sbb
and
pop
arpl
iret
mov
lock
(bad)
movs
fadd
cmp
mov
dec
xor
cmp
mov
push
mov
fisttp
jae
fcom
mov
xor
dec
push
push
mov
ret
jmp
mov
pop
(bad)
outs
loop
cmp
cld
(bad)
aas
inc
sahf
push
xchg
out
cmp
out
pop
xchg
iret
or
loop
jg
in
int3
mov
mov
fucom
push
popa
pop
in
pop
in
inc
lock
fwait
stc
cmp
dec
fcom
jmp
sti
pop
cmp
icebp
into
(bad)
in
loop
call
xchg
push
arpl
xchg
push
in
pop
cld
pop
or
or
adc
pop
mov
lahf
pop
cmp
jne
sub
adc
pop
lods
arpl
call
cmps
test
jno
arpl
ret
loope
jp
je
pop
push
jl
mov
dec
pushw
jle
ja
cmp
loope
arpl
jg
loope
(bad)
bound
jg
pusha
arpl
jns
fsub
cmp
loope
test
add
jo
xor
loop
push
ja
ja
push
ja
(bad)
aam
mov
push
and
sbb
cmp
loopne
pop
add
cmp
cmp
arpl
xchg
sbb
(bad)
hlt
jae
gs
test
cmp
xchg
mov
in
iret
repz
jp
jnp
sub
cmp
repz
rol
mov
xchg
sar
mov
mov
sahf
out
push
sub
or
repz
jg
fmul
je
jns
out
adc
cmp
and
iret
cmp
ins
sar
cmp
jle
mov
repz
rcr
call
out
and
dec
pop
jo
loope
jecxz
jg
cmp
loope
jmp
jecxz
addr16
test
jle
repz
rep
mov
jns
iret
repnz
push
es
out
sahf
inc
push
bound
jns
out
nop
mov
repz
jecxz
xchg
cmp
repz
push
pop
push
xchg
sbb
repz
(bad)
out
or
sbb
inc
pop
push
out
pushf
sbb
sub
jo
jns
(bad)
pusha
inc
sub
adc
repz
fcmove
cmp
repz
movs
xchg
push
icebp
cmp
repz
sub
add
outs
out
sahf
(bad)
fmul
mov
jns
xchg
sub
cmp
adc
lock
loopne
cmp
repz
call
dec
xor
sahf
(bad)
icebp
cmp
push
clc
ins
loopne
jns
out
mov
pop
out
sahf
out
inc
xor
sbb
repz
mov
cmp
mov
push
icebp
cmp
repz
xor
push
cli
push
jns
(bad)
out
ret
sahf
out
sahf
cwde
mov
pop
js
out
dec
inc
sbb
out
imul
(bad)
stos
nop
js
repz
pop
dec
xor
or
push
jns
out
mov
xor
cmp
addr16
iret
repz
mov
mov
push
inc
les
xchg
pop
and
sub
lds
add
or
mov
cmp
mov
jae
or
or
push
sar
repz
xchg
ins
loop
in
jl
jle
jae
retf
cmp
sbb
repz
bound
fdiv
cmp
jle
enter
pop
sub
jg
jg
jg
repnz
outs
jle
out
cmp
nop
jb
js
out
sahf
pop
dec
ds
sahf
out
push
cwde
movs
scas
rcl
cmp
jae
jb
jae
cmp
jecxz
dec
pop
data16
repz
mov
(bad)
repz
in
cld
or
cld
jno
(bad)
icebp
cmp
ficomp
je
cmp
(bad)
icebp
cmp
jno
(bad)
jo
fdivr
sahf
out
enter
dec
je
jns
iret
repz
shl
lods
out
sahf
out
mov
inc
out
sbb
sbb
je
mov
(bad)
jecxz
sahf
shl
not
jne
push
(bad)
repz
ss
loopne
aam
sahf
out
(bad)
mov
xchg
jecxz
sahf
out
sub
add
jns
repz
fmul
mov
cwde
cmp
repz
js
pop
push
ds
iret
repz
add
js
jns
mov
enter
js
xchg
out
sahf
out
jb
pop
dec
(bad)
jecxz
sahf
cmp
adc
ja
cmp
repz
(bad)
mov
nop
jp
cmp
repz
dec
cmp
out
cmp
adc
lock
into
sahf
out
sahf
ret
nop
cmp
jns
bound
sub
repz
jecxz
jne
aam
scas
iret
repz
call
out
adc
jno
test
test
sbb
cli
test
test
test
ret
loope
test
push
test
jne
cmp
test
test
test
lods
adc
mov
pop
mov
jbe
mov
jge
mov
jns
stos
sbb
idiv
icebp
cmp
rol
repnz
jecxz
fdiv
fs
cmp
repz
cmp
adc
jle
loop
ret
lock
push
icebp
repz
add
or
xchg
push
and
push
out
stos
ret
and
xor
add
pop
sbb
arpl
and
mov
add
jae
sbb
add
jp
xor
test
nop
sbb
dec
leave
push
inc
mov
enter
fs
xchg
or
jb
rcl
test
xchg
and
and
sub
cmps
hlt
xlat
jmp
std
push
rol
dec
jae
gs
mov
or
sub
gs
stc
adc
dec
cmps
mov
dec
add
js
in
rcl
mov
cld
mov
jae
into
rcl
lods
test
lods
adc
popa
rcr
add
lds
nop
push
xor
cdq
jmp
enter
cmc
fstp
sub
mov
and
adc
fidivr
ins
xlat
mov
hlt
lock
leave
fs
imul
repz
push
or
xor
aam
push
sub
add
sbb
aam
test
or
dec
cli
stos
xor
push
ins
outs
ins
dec
sub
or
jp
gs
adc
push
outs
push
or
test
pop
mov
inc
or
or
jne
mov
stos
push
in
addr16
test
pop
aas
stos
push
add
arpl
outs
pop
movaps
push
or
in
push
xchg
mov
mov
push
sbb
inc
retf
lds
sbb
imul
push
or
mov
and
add
adc
dec
xor
jo
ret
xchg
and
lods
fld
mov
mov
sbb
imul
jl
adc
pop
or
xor
add
fninit
add
into
gs
(bad)
xor
xchg
xor
or
xchg
lea
push
mov
idiv
loop
jno
pop
xchg
xchg
jecxz
add
imul
jae
shr
sub
xchg
or
inc
outs
retf
(bad)
out
nop
dec
or
xchg
cmp
shl
sahf
imul
xchg
iret
lods
jae
retf
fnstenv
cmp
sbb
mov
aaa
jne
out
xor
sbb
fbstp
stos
xchg
arpl
jno
add
mov
jne
sti
add
xor
into
outs
pop
(bad)
jno
test
mov
inc
lea
push
mov
shr
rcl
(bad)
leave
dec
std
or
jae
sub
stc
mov
mov
in
icebp
adc
add
push
pop
xchg
mov
(bad)
pop
mul
jge
xor
das
fsub
jbe
in
icebp
bound
xchg
loopne
lods
sub
fs
xor
adc
stos
aaa
add
sbb
sub
mov
push
cmps
mov
mov
push
iret
mov
inc
xchg
pusha
jg
test
xlat
pop
sbb
lods
pusha
stos
sbb
fwait
test
stos
mov
push
loope
and
std
mov
test
out
mov
dec
push
sub
clc
in
jo
mov
xchg
test
daa
mov
push
cmp
adc
or
push
test
pop
add
mov
dec
fs
jno
mov
enter
push
push
inc
xchg
je
inc
jae
pop
outs
push
imul
add
pop
(bad)
int
push
ficom
test
or
gs
and
jb
mov
js
neg
push
mov
arpl
clc
xor
scas
mov
adc
inc
sub
cdq
xor
(bad)
adc
cmp
or
popa
adc
arpl
add
cmps
stos
test
(bad)
adc
int3
jae
adc
add
(bad)
mov
out
aad
mov
cli
add
mov
push
xor
mov
sub
dec
stos
sbb
pop
xchg
pop
fstp
push
and
pusha
pushf
cmp
dec
ss
test
test
lds
stos
sub
xchg
cmps
push
or
mov
add
(bad)
xchg
mov
mov
push
retf
int3
retf
inc
sahf
or
pop
dec
pusha
(bad)
mov
and
mov
(bad)
imul
sbb
add
pop
or
cmp
aad
push
jb
mov
in
jae
mov
es
sbb
loope
test
add
xchg
icebp
inc
lods
jnp
rep
add
iret
inc
aam
outs
leave
xchg
or
or
fidivr
mov
cmps
adc
add
add
les
pushf
inc
push
sbb
jmp
sbb
imul
sub
jp
fisub
sub
das
mov
or
sbb
ins
popf
add
mul
shr
enter
pop
inc
push
into
dec
push
mov
jo
lahf
pushf
dec
add
sbb
jecxz
add
mov
xchg
xchg
cmp
adc
mov
inc
mov
mov
jg
movs
lods
dec
std
cmps
mov
int3
pop
mov
arpl
fidiv
scas
xlat
and
cwde
stos
dec
add
shl
ins
push
push
fsubr
add
sub
inc
add
push
push
cmps
jno
daa
(bad)
push
mov
xchg
cwde
cdq
jb
xchg
cmps
or
data16
retf
movs
push
mov
es
dec
aaa
out
dec
test
dec
or
or
jl
inc
mov
out
dec
inc
repz
sub
inc
sub
sti
imul
lds
xchg
xchg
je
mov
add
repnz
retf
mov
shr
jno
cmp
sbb
(bad)
pop
sbb
xor
js
ret
push
xor
bound
dec
gs
push
inc
and
dec
leave
cmp
dec
pop
xchg
leave
cmp
or
pop
cmps
sti
call
sub
mov
and
xchg
in
sahf
int
pop
add
cmps
lds
or
in
mov
iret
or
(bad)
arpl
stc
(bad)
in
daa
xchg
jecxz
add
and
pop
arpl
pop
imul
rcl
dec
lahf
sbb
push
outs
jmp
push
shl
jo
cmp
or
lds
rcl
sbb
popa
stos
aaa
loope
test
mov
jg
aam
adc
mov
rcl
adc
sbb
mov
fld
push
dec
pop
sbb
push
ins
addr16
mov
cmps
dec
lahf
gs
sbb
int
in
jno
popa
adc
cmps
jne
pusha
or
adc
add
scas
outs
adc
icebp
or
nop
inc
stos
xchg
(bad)
bound
xor
jae
ja
in
xchg
jae
inc
(bad)
shl
enter
or
dec
dec
dec
jmp
outs
mov
jmp
mov
imul
clc
int
sbb
inc
xor
shl
ret
push
add
data16
leave
ds
dec
jno
fdivr
xchg
sbb
jb
xchg
sbb
sbb
pop
push
xor
jbe
out
repz
test
scas
lods
jne
dec
mov
mov
(bad)
xor
pop
(bad)
mov
sbb
iret
push
(bad)
lods
ret
xor
jne
mov
repz
adc
adc
dec
inc
retf
bound
shl
push
xchg
add
or
sub
mov
mov
lods
mov
data16
fs
clc
jl
jmp
xor
mov
push
stos
pop
ins
stos
pop
rcl
ss
jne
push
adc
in
inc
add
test
(bad)
jae
xchg
sbb
xor
inc
xor
dec
cs
stc
jg
jecxz
fldl2t
jo
inc
ja
push
stos
fisttp
mov
pop
out
retf
inc
icebp
mov
mov
nop
inc
mov
mov
nop
loop
push
pop
dec
ins
xchg
inc
pop
out
adc
je
inc
scas
mov
rcl
das
mov
jno
and
cmp
int3
ins
adc
mov
push
add
pop
int3
ficom
imul
pop
or
gs
stos
loop
cwde
call
icebp
sbb
pop
movs
jae
jb
or
nop
and
pusha
movs
cmp
push
jns
ins
mov
xchg
(bad)
or
xchg
cmp
movs
pop
add
ins
push
ffreep
jb
adc
seta
inc
aam
mov
fwait
mov
cmp
aaa
xchg
pop
mov
cmp
lods
pop
(bad)
sbb
jns
jb
jo
inc
adc
adc
sub
cmps
pop
mov
dec
ins
in
(bad)
dec
dec
inc
mov
add
mov
push
imul
test
inc
cmp
or
mov
bound
dec
aad
retf
ds
hlt
sub
js
retf
addr16
jbe
daa
fwait
test
out
pushf
or
int
push
adc
pop
xor
aad
sbb
fsubr
xchg
sbb
data16
cld
fwait
das
adc
jp
cmps
sti
shr
out
cmp
inc
aas
aam
inc
in
push
jne
or
repnz
fdivr
addr16
mov
lds
and
xchg
leave
sbb
in
test
test
sub
cmp
or
jae
mov
ins
cmp
lock
call
movs
movs
data16
icebp
mov
js
pop
mov
xchg
addr16
cwde
dec
(bad)
outs
adc
xchg
add
adc
xchg
into
cmps
ret
pop
ins
mov
dec
mov
out
push
push
mov
or
jmp
outs
mov
cmp
loop
xor
xor
hlt
add
or
retw
mov
sbb
adc
push
or
mov
imul
retf
mov
js
jbe
push
data16
push
jmp
add
cmps
adc
inc
test
pop
mov
sub
stos
test
dec
jns
push
lods
leave
out
dec
xchg
xchg
sar
movs
jns
dec
mov
xor
dec
push
sbb
cmps
jo
mov
inc
(bad)
ins
jmp
add
dec
and
popf
cmps
jnp
pop
popf
leave
and
cmps
arpl
sbb
mov
jl
dec
inc
in
and
xor
dec
dec
dec
outs
stos
xor
inc
inc
push
push
sub
retf
jb
fwait
mov
xor
ret
inc
and
je
jmp
xor
push
jb
inc
sbb
mov
mov
jns
dec
inc
(bad)
into
xchg
jns
pop
inc
jo
outs
mov
int3
sub
outs
cwde
push
jbe
and
div
gs
imul
sahf
and
stos
imul
ins
arpl
inc
push
repnz
aad
mov
add
out
mov
cmc
cmp
add
push
inc
mov
stos
mov
sti
sub
mov
inc
popa
shl
arpl
aad
jae
push
fadd
stos
mov
mov
cli
push
scas
lea
mov
fsub
mov
imul
pop
push
test
fwait
into
and
outs
sub
sub
pop
dec
xor
sbb
addr16
pop
push
jno
xchg
dec
cmp
pushf
push
and
cmps
mov
jg
jmp
mov
or
sbb
cmp
jne
repnz
inc
arpl
push
mov
add
xor
jecxz
inc
mov
popa
jbe
xchg
push
or
cwde
test
data16
mov
cmp
sub
dec
jb
and
(bad)
pop
pop
dec
cmp
(bad)
mov
fucom
cld
xchg
pop
dec
out
and
pop
sar
fmulp
xor
ds
mov
xchg
or
popa
pop
lds
je
dec
jecxz
add
int
push
push
call
sub
push
mov
pop
ret
repnz
dec
dec
push
fwait
mov
push
xor
push
cmps
ror
adc
movs
push
mov
xchg
fld
int
icebp
dec
xor
dec
sbb
dec
sub
das
cmps
mov
add
add
jle
lock
push
test
fs
xor
(bad)
push
inc
push
cmp
push
dec
aas
int
sti
dec
mov
lahf
mov
cmp
cmp
push
xor
or
add
add
cmps
adc
dec
xchg
ret
mov
cmps
jg
sti
inc
out
inc
jae
iret
and
inc
push
pop
hlt
pop
cwde
fwait
push
(bad)
data16
or
dec
mov
inc
imul
stc
dec
dec
jmp
int3
or
lds
cwde
mov
mov
push
cli
in
dec
xor
mov
inc
rcr
int
call
popa
fldenv
xchg
mov
jno
outs
outs
movs
mov
push
cmp
sub
(bad)
sub
cmp
in
mov
movs
test
mov
adc
push
in
cmps
(bad)
fucom
jg
rol
es
or
stc
mov
xchg
add
ja
jl
or
xor
cmp
ficom
xor
cmp
xor
fst
mov
and
leave
jb
popa
pop
ret
sub
adc
and
rcr
outs
push
dec
es
mov
scas
mov
test
dec
mov
test
add
scas
inc
xlat
inc
inc
es
pop
int
cmp
fnsave
imul
in
std
hlt
mov
outs
adc
add
loope
dec
dec
es
hlt
mov
mov
mov
in
mov
popa
popa
movs
add
or
mov
in
add
test
push
int
movs
hlt
mov
dec
cmp
adc
lahf
call
repnz
inc
adc
das
add
dec
inc
dec
xor
mov
or
cmp
mov
fisubr
repz
mov
lods
imul
adc
xchg
xor
pop
scas
sbb
mov
push
icebp
add
or
out
push
in
jmp
test
ficom
and
or
js
sahf
imul
shl
push
jae
inc
fcom
je
xor
mov
dec
cs
inc
push
bound
and
aad
xor
in
sub
fnstsw
std
outs
rol
dec
push
and
mov
std
test
in
hlt
ja
cmp
or
je
outs
pop
jb
movs
mov
mov
data16
ins
leave
jmp
push
push
push
cmp
retf
fwait
repnz
imul
aas
and
dec
aaa
scas
imul
inc
dec
ds
push
mov
out
adc
pop
jb
sub
outs
mov
inc
inc
push
sub
add
jb
xchg
addr16
jae
fwait
inc
sahf
jge
dec
in
cld
iret
retf
idiv
mov
scas
jae
xor
fs
jle
popa
push
test
xor
cmp
ss
xchg
sti
pop
fwait
push
stc
pop
dec
aas
(bad)
dec
hlt
mov
jo
in
fcomp
movs
mov
cwde
mov
out
sahf
out
dec
cmp
and
jecxz
sahf
adc
hlt
lahf
call
cmp
test
test
cmp
repz
xor
or
sahf
in
jno
xchg
inc
dec
adc
mov
push
and
test
mov
inc
aaa
addr16
dec
push
inc
push
inc
clc
popa
push
dec
sti
xchg
stos
popf
dec
xchg
icebp
push
das
fsubr
ja
sbb
imul
jmp
xchg
ret
or
mov
stos
shr
fcomp
data16
jmp
ret
mov
mov
enter
xlat
jmp
inc
xlat
jbe
dec
mov
mov
shr
out
cwde
push
aam
into
adc
shr
xlat
pop
push
scas
lds
jecxz
outs
ins
xchg
push
inc
pop
dec
add
push
jne
out
movs
pop
bnd
push
test
out
jg
stos
stc
sbb
cmp
push
push
fiadd
(bad)
mov
shl
(bad)
inc
ins
(bad)
pushf
add
out
adc
imul
adc
enter
mov
jb
dec
imul
retf
push
add
sub
push
mov
(bad)
xor
inc
(bad)
inc
shl
and
or
cmp
cs
xchg
pop
xor
pop
outs
outs
fs
jmp
push
pop
popf
mov
gs
dec
mov
cmp
retf
inc
sbb
out
sahf
push
pop
dec
xchg
jl
idiv
imul
fst
jo
int3
std
fstp
inc
fwait
cmc
andps
sbb
call
fs
xor
jnp
and
mov
cmp
test
retf
sub
ja
fsubr
and
test
addr16
fbld
dec
data16
cli
dec
daa
pop
mul
repz
sbb
jae
xchg
(bad)
clc
call
add
mov
test
dec
dec
nop
cwde
imul
jp
sub
sbb
or
push
add
inc
xor
inc
loope
push
push
sub
(bad)
xchg
clc
cmps
test
inc
jo
dec
gs
stc
ins
fidivr
test
mov
repnz
(bad)
jnp
fld
mov
jnp
mov
push
mov
and
imul
scas
hlt
or
add
push
test
cwde
cmp
and
sahf
mov
jns
or
dec
xor
aad
aaa
aad
or
fmul
dec
xor
dec
repnz
sub
mov
loope
movs
pop
fistp
mov
sti
shl
mov
dec
pop
ds
mov
sub
repz
pop
je
mov
(bad)
icebp
cmp
hlt
adc
sub
sahf
xor
cmp
jb
push
jae
jmp
push
add
in
dec
in
outs
xchg
data16
enter
addr16
xor
neg
inc
mov
or
mov
xchg
sbb
mov
imul
repz
xor
sbb
inc
lahf
mov
push
and
mov
mov
jno
xchg
shl
iret
arpl
or
test
push
loope
mov
icebp
cmp
repz
adc
cmpps
xchg
inc
shl
retf
and
jo
inc
cmp
xchg
stos
pop
nop
lods
cmps
in
fs
loope
test
push
test
push
test
arpl
mov
inc
inc
pushf
add
push
pop
pop
cbw
shl
push
test
push
div
cdq
aas
aas
jb
pop
(bad)
aas
adc
pop
mov
dec
inc
test
dec
inc
(bad)
std
jno
push
pop
inc
and
neg
imul
sbb
pop
in
inc
inc
or
pop
dec
push
dec
dec
push
pop
mov
inc
xor
push
je
xchg
js
cmp
in
ja
jbe
out
sahf
out
jae
jno
sahf
out
sahf
outs
outs
ins
ins
imul
jns
imul
iret
nop
pop
movs
sahf
out
push
rcl
clc
cmp
repz
pop
sub
push
rep
shl
adc
mov
inc
push
ins
fsubr
sbb
dec
enter
sub
sbb
lea
mov
iret
xor
mov
xlat
pop
adc
mov
arpl
loop
bound
pop
mov
add
pop
retf
dec
imul
pop
imul
repnz
cmp
xchg
xchg
dec
out
mov
jge
add
mov
daa
int3
xor
imul
fdiv
push
ret
retf
lods
out
dec
addr16
popf
outs
jne
adc
pop
out
dec
jns
jnp
imul
push
aaa
pusha
and
pop
in
add
rcr
call
fwait
ds
pop
lea
ins
bound
dec
lods
sub
out
jbe
xor
jns
dec
or
imul
out
call
pop
xchg
(bad)
and
inc
movs
push
inc
push
push
mov
sbb
inc
inc
jae
jg
aad
xchg
pop
sub
xchg
je
jp
in
in
das
sbb
sbb
jns
sbb
aad
lods
stos
das
rcl
test
cli
hlt
mov
xchg
jae
fnstsw
or
fucomp
pop
xor
xchg
sub
ret
inc
(bad)
xchg
mov
xor
test
dec
stos
add
xchg
(bad)
xor
sbb
arpl
fnsave
jbe
xchg
inc
inc
and
ins
push
xchg
sar
test
push
popa
imul
xchg
or
(bad)
repnz
test
push
xchg
mov
fiadd
mov
cmps
repnz
push
dec
push
inc
inc
inc
add
dec
jg
dec
inc
push
dec
inc
pop
jmp
xchg
push
int
inc
inc
push
inc
mov
lods
(bad)
inc
je
push
mov
jo
ins
ins
lods
sbb
dec
jae
pop
in
in
(bad)
jmp
lods
sub
mov
jp
repnz
mov
int
xor
dec
retf
imul
inc
mov
ds
add
jae
dec
ins
out
push
fldenv
mov
jmp
into
dec
inc
shr
test
mov
cmp
push
icebp
jbe
stc
dec
pop
in
and
push
cmc
fimul
mov
fistp
inc
movs
lea
imul
mov
js
pushf
sub
inc
mov
retf
or
js
outs
push
inc
daa
fwait
push
je
cmp
shl
out
and
jmp
dec
or
or
xchg
pop
mov
in
inc
dec
in
jecxz
ror
xchg
in
(bad)
inc
jecxz
cmp
aad
sbb
cs
ins
sub
gs
std
arpl
int
jmp
or
cwde
mov
dec
jne
into
icebp
jge
inc
hlt
test
push
iret
out
repz
ret
sbb
adc
jmp
(bad)
nop
sbb
xor
inc
mov
shr
adc
mov
push
cmp
adc
inc
push
fidivr
std
sbb
sar
jl
sti
add
add
pushf
pop
sbb
mov
fimul
mov
scas
div
loop
shl
jae
lea
add
inc
jmp
fist
xor
inc
mov
test
sub
push
inc
adc
adc
xchg
dec
fwait
xor
add
mov
ficom
add
imul
inc
outs
shl
ins
sti
es
xor
inc
mov
xchg
cmp
add
rcr
lock
dec
inc
inc
icebp
div
lods
jns
fldcw
dec
arpl
iret
inc
add
ja
and
mov
jg
fist
call
out
push
out
fidiv
call
mov
xor
inc
inc
push
inc
mov
aaa
das
xchg
xchg
add
dec
dec
out
mov
(bad)
and
or
push
shr
sti
adc
adc
out
sbb
int
cmp
push
or
sbb
inc
cmps
scas
sub
mov
out
fwait
push
jmp
std
popa
add
adc
std
inc
(bad)
pop
jnp
adc
dec
and
sub
mov
out
mov
dec
movs
fild
add
ret
dec
stos
ins
pop
jo
mov
and
in
hlt
cld
sahf
out
sbb
fmul
sbb
push
fucomi
jns
xor
sub
sub
adc
cmp
push
xor
daa
inc
push
cs
cs
popa
jne
sub
cdq
stos
call
mov
jne
mov
push
push
push
push
dec
inc
dec
push
push
call
jmp
ins
add
inc
cs
add
sbb
pop
push
ror
or
mov
outs
loopne
jo
loope
cwde
jae
pop
sub
pop
ret
add
mov
mov
mov
int3
adc
xor
shl
movs
jg
add
mov
or
shl
push
add
enter
sahf
out
mov
out
sahf
mov
jns
out
jo
push
jns
out
push
push
dec
dec
xchg
out
sahf
inc
cmp
sub
(bad)
repz
sbb
or
and
sbb
hlt
and
and
and
and
and
ret
loope
and
inc
adc
push
lock
shl
push
dec
and
mov
inc
push
adc
push
retf
mov
out
or
out
sti
repnz
or
and
sub
pop
sub
repnz
in
out
inc
inc
push
xchg
pop
retf
out
push
daa
jmp
aas
push
pop
push
jle
fild
cdq
pop
xchg
xchg
nop
icebp
inc
jb
mov
mov
fiadd
or
mov
movs
sahf
popf
cld
frndint
mov
cld
cmps
mov
call
fidivr
or
xor
imul
popf
add
in
dec
outs
or
add
shl
push
shr
jg
sar
dec
and
inc
dec
dec
xchg
fsubr
stc
mov
fild
js
imul
or
sub
loope
ins
push
ins
ins
sbb
arpl
inc
or
jns
jl
dec
adc
repz
out
cld
push
les
iret
repz
pushf
sbb
push
(bad)
repz
add
in
pop
cmp
dec
and
and
data16
in
push
jns
jp
cmp
inc
data16
shl
data16
and
mov
aam
test
add
xchg
aas
sbb
dec
mov
jns
cmp
pusha
stc
adc
in
jmp
push
mov
or
out
in
ss
aad
jmp
arpl
mov
test
or
loopne
(bad)
stos
cmps
fbld
add
jle
cld
test
shl
(bad)
fild
cmp
mov
pop
shl
mov
cli
(bad)
stos
jle
(bad)
outs
ret
push
add
sub
pop
fisubr
xor
fcomp
loopne
xor
adc
jl
int
cmp
data16
push
iret
add
cmc
sbb
sub
into
rcl
repz
outs
mov
adc
pop
movs
imul
xor
mov
push
ret
(bad)
mov
(bad)
sub
(bad)
push
repz
xchg
push
add
cli
pop
std
cld
add
leave
gs
cmp
mov
mov
inc
or
xchg
xor
sbb
clc
nop
adc
dec
dec
(bad)
mov
cmp
icebp
xor
je
xchg
repnz
dec
ins
pop
inc
repz
or
jg
ret
xchg
lahf
push
xchg
es
and
push
iret
repz
xchg
mov
repz
les
lock
out
sub
call
cmp
jns
retf
lods
setl
retf
repz
fsub
arpl
adc
mov
sahf
out
xchg
or
repz
push
retf
repz
rcl
jns
out
sbb
push
inc
mul
and
cwde
and
and
movs
test
xor
adc
sbb
scas
out
jg
jne
mov
(bad)
cmp
aam
fdivr
add
push
shl
push
add
fwait
inc
or
jg
pop
lods
ret
cmp
inc
enter
or
mov
imul
push
ret
lsl
push
and
adc
mov
sbb
sbb
into
sbb
ror
and
sahf
mov
add
add
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
lock
add
adc
mov
dec
js
add
add
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
add
add
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
add
add
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
inc
in
xchg
cmp
xor
dec
cmps
in
add
add
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
addr16
dec
add
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
les
add
or
aas
jno
or
mov
mov
aas
pop
fs
dec
lea
aas
ret
shr
mov
icebp
add
add
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
add
add
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
add
add
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
add
add
popa
push
pop
sar
jl
mov
das
lea
mov
inc
add
add
aas
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
add
add
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
add
add
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
add
add
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
add
add
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
add
add
(bad)
std
or
ficomp
frstor
pusha
or
loop
or
sbb
out
arpl
add
add
sub
jp
sub
adc
or
cmp
aam
add
xor
aaa
mov
cli
scas
sti
jno
add
add
mov
fs
nop
cdq
out
inc
mov
xchg
or
fldl2e
mov
push
sub
add
add
and
xor
jae
test
ret
jle
sbb
cwde
add
add
fsub
inc
leave
retw
cli
xchg
aam
jecxz
cmp
inc
pop
xor
aaa
shl
and
add
add
xchg
scas
xor
fs
fisub
clc
inc
add
mov
push
and
movs
and
cwde
fwait
pusha
xor
add
add
jp
sub
imul
fsubr
inc
ins
sbb
addr16
push
outs
pusha
ja
add
add
push
or
or
(bad)
pop
retf
pop
mov
push
mov
xor
pop
enter
fild
mov
sbb
add
(bad)
pop
mov
out
cwde
ins
iret
pop
jle
adc
mov
xchg
mov
(bad)
cmp
or
out
ss
jb
jmp
xchg
loopne
mov
scas
push
xor
adc
xchg
dec
mov
rcl
das
dec
add
add
cdq
sub
xchg
mov
lds
int3
scas
jg
pop
ja
mov
dec
ja
loopne
push
dec
out
adc
ins
mov
out
xchg
repnz
jb
fs
hlt
add
add
inc
jmp
add
sbb
push
inc
sar
lods
xchg
and
mov
and
fidivr
imul
push
rol
xchg
adc
add
mov
pop
outs
xchg
cld
jmp
adc
aas
adc
push
mov
and
add
rcr
stos
test
adc
mov
daa
movs
add
add
je
nop
cmps
pop
repz
fidivr
imul
jne
push
add
ds
dec
sahf
mov
sub
or
dec
dec
loop
xchg
aam
jno
iret
add
add
je
loopne
outs
xor
pop
aaa
mov
mov
cmps
pop
sbb
sbb
add
pop
xchg
in
aas
xchg
push
(bad)
jmp
inc
add
loop
(bad)
dec
cmps
es
inc
pop
and
add
mov
test
push
pop
push
jmp
hlt
add
add
xchg
adc
jp
or
push
mov
push
ror
(bad)
in
inc
and
adc
mov
jg
add
add
mov
xchg
mov
cmps
fdiv
add
dec
sti
add
jmp
mov
add
add
cmp
mov
into
and
lods
arpl
pop
repz
adc
(bad)
mov
add
or
xchg
ficom
scas
fs
mov
(bad)
out
shr
aas
mov
mov
add
add
das
ins
push
sbb
xor
mov
inc
fsubr
retf
call
push
out
xchg
fldcw
add
cdq
(bad)
mov
jno
jbe
jle
pushf
add
jns
xchg
pop
xchg
lahf
dec
jb
mov
add
adc
rcl
pop
in
adc
fwait
push
cmovne
ror
add
add
xchg
pop
je
in
or
mov
pop
push
lds
mov
fiadd
add
mov
mov
mov
pop
ret
mov
mov
gs
dec
push
mov
mov
cmps
mov
out
pop
mov
ret
bsf
xchg
mov
fwait
js
aam
sbb
repz
clc
sbb
iret
sub
shr
movs
test
add
add
sbb
pushf
xor
jl
out
add
leave
xchg
test
adc
rol
stos
and
jp
pop
in
jg
and
cwde
(bad)
lds
pop
fdivr
fsub
cmp
aad
int3
sub
sbb
mov
repz
out
sub
imul
add
add
lea
cs
pop
dec
out
shr
jne
add
mov
leave
out
add
cli
dec
cmp
lahf
and
jle
movs
cli
test
in
dec
cmp
cs
pop
es
repz
dec
inc
add
sub
cwde
call
sbb
jnp
pop
pop
xor
add
jbe
jle
(bad)
jg
dec
push
cli
stos
add
add
retf
loop
leave
sub
sbb
jmp
ror
jbe
cmc
sahf
adc
(bad)
push
push
adc
add
inc
add
push
dec
cs
(bad)
(bad)
(bad)
jl
xchg
test
fbstp
sbb
add
add
imul
sub
int3
(bad)
adc
or
repnz
pop
and
add
(bad)
mov
or
add
xchg
in
xor
mov
xchg
outs
(bad)
ins
mov
pusha
cs
mov
add
movs
scas
scas
cmc
pushf
jge
add
das
pop
and
mov
pusha
in
pop
sub
aaa
cmp
lds
or
pop
mov
outs
dec
pushf
cli
pop
repnz
pop
push
add
jmp
add
loopne
dec
ja
sub
xlat
xlat
gs
fld
add
add
cmp
adc
test
sub
ins
loopne
add
and
pop
lods
mov
and
cmp
(bad)
clc
daa
es
and
fwait
inc
cmp
jmp
add
retf
push
inc
or
push
call
jae
imul
cmp
mov
(bad)
nop
icebp
and
cli
out
add
sar
jge
pop
pop
mov
pop
jmp
cmp
push
int3
in
inc
xor
add
add
inc
jno
les
jns
jae
in
xchg
add
cli
imul
ins
pop
in
mov
int3
xchg
pop
add
or
sti
dec
or
not
add
add
jbe
jmp
cli
pop
sbb
les
sub
movs
mov
add
add
push
mov
add
dec
adc
fcom
adc
jbe
movlps
es
into
jg
add
add
add
cmp
inc
je
inc
outs
or
int
leave
cmps
ja
(bad)
(bad)
push
popa
adc
add
xchg
jo
add
xor
adc
ja
stos
icebp
xor
cmp
add
and
mov
loopne
inc
cdq
xlat
pop
inc
cwde
test
xor
sbb
jb
mov
xchg
and
cld
sbb
jg
pop
xor
dec
or
(bad)
out
int3
outs
repnz
add
lds
push
jb
jne
jmp
les
arpl
add
add
outs
imul
ret
mov
add
add
or
out
pusha
and
icebp
xchg
imul
push
repnz
add
push
add
xchg
cmp
out
mov
dec
pop
add
add
mov
push
into
and
std
xchg
es
pop
mov
inc
ss
aad
lock
das
rol
add
sbb
xchg
push
dec
jp
hlt
js
loopne
cmps
jg
xchg
pop
popf
es
jbe
fs
cmp
add
add
mov
and
push
movs
les
and
test
push
ret
or
xor
rcl
jle
mov
or
adc
xor
imul
enter
add
mov
retf
mov
in
adc
(bad)
movs
cdq
and
add
mov
arpl
inc
mov
mov
inc
mov
std
pushf
cld
mov
sbb
inc
pop
inc
pop
add
jle
xlat
stc
mov
jo
cmps
push
aas
mov
jl
add
imul
leave
add
jle
xor
pop
loope
add
add
outs
pop
outs
arpl
(bad)
cmp
int
push
test
es
ja
sub
rol
add
add
adc
sbb
xchg
popa
add
cmp
call
in
add
icebp
cmp
add
pop
jb
mov
xchg
mov
mov
mov
mov
clc
jl
add
add
lea
and
push
lds
jbe
mov
outs
add
add
aad
rcr
dec
leave
shl
xlat
bound
das
(bad)
sub
sub
or
pop
mov
arpl
sahf
adc
add
scas
shl
mov
lods
test
pop
or
inc
stos
repnz
pop
cli
add
add
in
(bad)
jns
dec
and
ins
ja
das
or
lea
test
xor
add
adc
push
outs
repnz
leave
add
jp
add
pop
adc
xchg
mov
cdq
add
add
aaa
(bad)
pop
sti
jbe
dec
mov
rol
test
push
add
pop
jmp
dec
test
out
and
mov
and
add
inc
loopne
add
add
inc
into
sar
xchg
pusha
sbb
aad
xor
mov
imul
add
add
adc
jle
ins
repnz
(bad)
pop
lods
inc
adc
popf
fsub
int3
mov
call
add
xchg
fisttp
je
iret
cmp
pop
add
add
add
jge
lods
jne
mov
call
cld
push
shr
mov
int
mov
add
inc
fsubrp
and
dec
cmp
mov
dec
cmp
add
add
jge
mov
xor
in
cld
sbb
mov
out
jmp
add
ss
jmp
inc
inc
(bad)
xchg
pop
jmp
(bad)
rcr
xchg
add
imul
(bad)
cmp
cs
cmp
add
popa
aam
movs
mov
stos
ror
mov
pop
mov
ds
or
xchg
and
add
in
sbb
pusha
ins
push
fs
mov
xor
int
int
add
add
xor
and
mov
mov
(bad)
pop
push
clc
enter
add
add
jl
ss
sbb
mov
stos
jmp
retf
adc
test
add
xor
xchg
xchg
pop
xlat
jmp
pop
outs
dec
in
add
add
test
sub
das
loopne
fsub
imul
ror
mov
ror
in
push
loopne
add
add
daa
lea
cmps
and
mov
test
jb
mov
leave
inc
xor
in
out
push
dec
mov
sbb
or
and
popf
sub
rcr
pop
les
into
add
bound
adc
aaa
in
cwde
aad
mov
mov
and
add
imul
popa
sub
shr
and
add
add
sti
xlat
cmp
out
adc
ins
inc
adc
xchg
adc
inc
repnz
cmps
sub
add
popa
or
inc
cmps
aaa
(bad)
mov
add
push
sub
out
cs
je
push
add
add
stc
xchg
scas
out
push
inc
outs
into
and
outs
cwde
mov
mov
jmp
arpl
mov
sahf
inc
ins
arpl
push
inc
add
inc
mov
stos
sbb
sbb
es
add
pop
aaa
lods
xchg
adc
(bad)
in
or
cmps
cmp
movs
jl
mov
xchg
std
mov
add
xlat
or
xchg
add
add
shr
not
out
iret
movs
cmp
sbb
xchg
sbb
jo
cmps
lds
sub
outs
call
push
jmp
sahf
fld
add
inc
ds
ins
(bad)
int3
lods
mov
mov
aam
xor
je
fdivr
jno
add
add
and
sahf
popf
mov
push
repz
bound
rcr
std
inc
xor
mov
jo
aas
mov
movs
aaa
jmp
inc
mov
cmc
or
xor
jne
add
add
or
mov
aam
das
(bad)
and
dec
add
mov
call
mov
add
add
je
fmul
sub
pop
ret
inc
mov
sub
sub
xchg
cmp
or
add
clc
mov
neg
xchg
push
xlat
(bad)
mov
push
and
push
cmp
add
mov
sahf
push
jmp
test
add
lock
enter
(bad)
fisttp
jnp
mov
jns
pop
xor
jge
pop
mov
mov
add
add
stc
leave
push
mov
mov
leave
das
pusha
outs
js
loopne
sbb
lea
dec
ds
add
fmul
mov
pop
sub
mov
add
pop
hlt
popa
jnp
jb
fmul
retf
add
cdq
pop
xchg
push
push
inc
add
add
mov
inc
out
push
(bad)
fld
add
add
dec
jmp
daa
mov
adc
jmp
or
fsubr
loop
xor
add
pop
daa
xor
jo
mov
mov
pop
or
rol
test
push
mov
lods
add
add
xlat
and
sahf
push
inc
sbb
aas
push
in
xor
cmp
ss
fwait
mov
ret
xor
and
iret
mov
ds
mov
xlat
add
dec
imul
add
outs
xchg
mov
pusha
add
add
jle
outs
sbb
outs
int
int3
add
sub
stc
adc
mov
pusha
mov
lea
jo
ret
sbb
out
add
test
out
in
adc
rol
nop
mov
add
add
mov
or
outs
adc
push
shld
push
lahf
jp
outs
in
sub
add
add
xchg
(bad)
out
push
mov
aas
pushf
mov
push
inc
adc
push
dec
mov
cdq
or
add
xor
sub
jg
repnz
xor
and
add
(bad)
cmc
js
and
lods
jns
jge
mov
mov
push
mov
lods
pop
mov
add
add
shr
int3
inc
stos
int
fcomp
add
sub
sbb
js
mov
aas
add
xchg
jmp
push
jo
test
add
push
out
int3
test
xchg
shl
ret
fcom
jmp
add
add
mov
(bad)
shl
outs
nop
cmp
mov
ins
fistp
test
fcmovb
addr16
add
dec
sub
sbb
dec
mov
add
add
(bad)
js
cmp
in
mov
pop
(bad)
scas
pop
aam
sub
add
jo
das
adc
add
add
xchg
mov
test
outs
add
cs
aaa
mov
sbb
sub
sti
lea
add
movs
call
int
ss
push
loop
or
sahf
enter
push
add
enter
jecxz
jmp
inc
loope
fisub
add
push
stos
mov
in
call
add
add
and
fist
icebp
test
rcr
in
scas
and
sub
stc
(bad)
fimul
adc
test
imul
bound
inc
test
bound
retf
jmp
pop
jmp
sbb
add
cmps
stc
nop
out
adc
cmps
and
or
cli
xor
mov
and
sti
xor
add
inc
xlat
adc
add
add
call
aaa
cmp
in
dec
xor
sti
sbb
inc
pand
xchg
inc
push
or
nop
or
add
int
fnstcw
cwde
lods
mov
add
push
mov
add
pushf
sbb
fisubr
js
arpl
push
jmp
add
retf
jp
clc
and
outs
cmc
jno
pop
add
add
mov
cmp
cli
and
adc
jl
sbb
imul
dec
add
xchg
xchg
mov
mov
cmp
add
jbe
scas
ret
jl
test
fwait
ins
sub
mov
push
cmc
sahf
push
inc
das
add
inc
ret
or
add
add
fcomp
sub
ds
push
cdq
cmp
add
add
mov
cld
push
pusha
div
(bad)
outs
add
add
sahf
pop
vucomiss
adc
shl
inc
add
neg
outs
pushf
ror
sbb
neg
and
inc
xlat
lock
cmc
sub
sub
add
add
mov
mov
xor
or
out
mov
aad
mov
sahf
add
add
add
div
add
mov
dec
xor
sbb
out
retf
add
sar
outs
dec
dec
jne
or
ss
jl
cmp
cmps
shl
lock
add
inc
and
add
addr16
push
retf
jmp
add
add
in
mov
adc
mov
or
inc
or
cmps
(bad)
adc
div
popf
or
out
mov
add
add
lods
pop
xor
mov
test
and
jl
ror
cmps
or
test
test
int
add
sbb
stc
test
push
pop
pop
pop
into
xor
add
aaa
stc
and
cmps
int
dec
sbb
mov
mov
add
test
jl
sbb
lods
in
ficomp
mov
out
lahf
cmc
arpl
jmp
(bad)
cld
cli
cwde
ss
dec
mov
add
lea
mov
in
cmp
ret
(bad)
pusha
popf
mov
retf
test
xchg
xlat
lea
cmp
inc
scas
(bad)
push
push
cmp
jmp
mov
pop
rol
neg
sbb
pusha
dec
sub
add
rol
adc
xchg
push
leave
sub
add
je
lock
fsub
scas
mov
test
or
add
dec
in
lods
test
push
push
lds
sbb
xor
add
add
xchg
cmp
(bad)
ins
or
mov
lock
xchg
jae
addr16
out
push
jg
xchg
push
inc
mov
into
sub
cmp
in
arpl
aas
ds
sbb
push
(bad)
lock
inc
shr
call
int
add
add
jb
mov
dec
cmps
rol
xor
fcomip
lea
mov
xlat
dec
or
jb
add
add
pop
push
xchg
adc
aam
js
int3
jb
sbb
add
mov
sti
xor
add
add
call
jg
ins
cmp
fsub
cmp
into
daa
cs
inc
add
add
out
xor
iret
add
je
cli
ret
inc
push
repnz
add
add
arpl
and
mov
(bad)
stos
inc
jmp
add
mov
dec
mov
and
add
cmc
mov
lds
and
add
add
sub
test
leave
xchg
mov
lahf
jmp
sub
add
push
mov
or
xchg
cwde
add
xchg
xor
jbe
mov
add
add
enter
inc
xchg
sahf
leave
or
mov
mov
cdq
pushf
xchg
jbe
dec
add
add
and
dec
cs
cmps
cs
push
mov
in
add
or
or
shr
inc
add
arpl
dec
push
mov
add
data16
mov
retf
add
add
push
inc
(bad)
mov
and
and
add
xor
or
loop
sbb
frndint
or
inc
add
add
sub
stos
cmp
repnz
lods
or
rol
mov
pop
mov
test
test
cdq
dec
push
div
rcr
push
popf
cmp
add
cmc
dec
outs
sbb
jmp
inc
jo
js
add
pusha
mov
iret
into
xchg
and
xor
add
jmp
add
jge
xchg
in
test
mov
cmp
cmps
pusha
add
shl
mov
call
movs
xor
pop
mov
loop
sub
push
cmc
inc
and
je
pop
mov
fs
mov
add
xchg
(bad)
rcl
mov
(bad)
push
mov
add
mov
sbb
test
cmc
sub
and
add
daa
dec
jae
add
or
(bad)
sub
push
(bad)
pop
loop
sub
dec
add
inc
ds
mov
adc
xor
pop
outs
xor
sbb
add
xor
sar
pop
test
add
cmp
add
add
nop
sahf
mov
ds
addr16
pop
data16
setae
(bad)
fcmovnu
gs
test
cdq
and
add
add
sbb
mov
mov
jge
std
xchg
xchg
mov
cmp
add
mov
shr
add
mov
dec
pop
shl
xchg
push
add
push
mov
jmp
or
fld1
add
mov
xor
add
adc
movs
add
add
push
stc
adc
fwait
in
lock
cs
jae
cli
mov
out
or
(bad)
retf
add
add
mov
int3
inc
mov
jbe
jge
push
jbe
add
add
mov
add
cmp
pop
lock
push
xor
pop
imul
jns
xor
aam
add
add
add
add
in
mov
push
cli
pop
sub
xor
in
retf
(bad)
hlt
cmps
add
add
sti
hlt
jo
dec
inc
rol
test
(bad)
out
retf
loopne
add
add
xchg
ss
inc
sub
fst
mov
add
int3
aad
stos
lock
add
inc
iret
ins
lahf
retf
int3
mov
in
sub
push
sub
movs
or
popf
jp
jge
int3
inc
outs
mov
add
add
test
rol
fwait
sub
cmp
cmp
adc
pop
pop
dec
or
mov
outs
add
adc
test
xor
add
sbb
sbb
cmps
xchg
add
nop
repz
shl
or
add
sahf
retf
rcl
clc
aaa
cmp
pop
pop
add
loopne
push
repnz
pop
mov
sbb
jl
pop
add
add
pop
into
js
adc
xor
loop
fsubp
stos
lea
or
dec
mov
add
add
mov
mov
mov
dec
cli
call
retf
jle
add
add
mov
popf
jecxz
test
pushf
push
es
sub
sub
ror
scas
pop
add
add
aad
test
out
(bad)
int
(bad)
xor
xchg
jae
cmps
xchg
xor
sar
iret
sbb
cwde
rcr
shr
repnz
push
loope
scas
mov
add
shl
(bad)
fisttp
mov
and
xchg
mov
ins
jb
(bad)
dec
add
add
(bad)
mov
xchg
(bad)
rol
push
test
ror
ror
add
sbb
cmp
xchg
and
test
mov
je
adc
cld
stos
add
or
cwde
push
in
cmp
xchg
test
add
add
imul
push
and
clc
pop
shr
stos
(bad)
jns
push
adc
inc
pusha
jl
cmp
imul
js
jo
jmp
push
xchg
add
add
retf
scas
adc
js
xchg
mov
ins
dec
mov
(bad)
mov
mov
(bad)
mov
popf
fdivr
xchg
ins
fdivr
mov
ret
sub
clc
pusha
and
in
cli
xchg
mov
shl
cmps
jae
mov
add
inc
mov
pop
or
scas
cs
or
pop
cli
or
pop
cs
pusha
add
add
adc
in
lea
push
pop
leave
repz
(bad)
loop
push
test
add
sbb
sbb
jl
popa
push
inc
das
(bad)
and
add
ss
push
jno
call
fsub
mov
lock
add
test
jg
bnd
jg
and
xor
mov
mov
ffreep
mov
aam
sbb
xchg
lds
add
shr
test
or
shl
adc
mov
jle
lea
and
xlat
push
sbb
gs
dec
and
cmp
lds
dec
daa
add
add
sub
inc
cdq
and
cmps
mov
es
fwait
(bad)
les
add
add
and
sbb
mov
mov
xchg
lahf
test
push
mov
xchg
adc
outs
test
add
add
fs
xor
adc
ja
and
or
jb
adc
xor
stos
out
jle
and
push
fstp
mov
add
add
add
mov
repz
add
push
jno
jae
lock
jae
rcl
cmc
(bad)
mov
sub
add
add
jp
dec
push
inc
xchg
daa
(bad)
jle
and
fwait
mov
jmp
add
aaa
push
xor
into
xor
xchg
jo
and
inc
test
adc
imul
dec
pop
out
push
jmp
call
mov
mov
or
xor
add
scas
sbb
lds
push
pop
in
add
repnz
stos
sbb
add
loop
jb
push
add
out
sbb
mov
inc
repnz
sahf
mov
adc
add
jae
mov
arpl
lods
imul
repz
sar
push
lods
inc
lods
icebp
xchg
les
call
xchg
in
pop
dec
push
and
fdivr
lods
stos
arpl
stc
sub
scas
test
add
in
cmps
out
jo
xchg
outs
pop
sbb
pusha
sbb
repz
jmp
pushf
outs
pop
mov
cmp
jnp
sub
mov
sbb
and
add
cmps
adc
add
add
jbe
dec
jg
pop
ret
inc
cli
test
imul
loope
in
or
push
add
add
out
(bad)
mov
adc
imul
jmp
add
add
lods
and
fcom
add
pop
mov
mov
loope
in
push
add
out
jecxz
int3
popa
add
adc
repnz
aam
mov
or
and
add
jmp
(bad)
int3
or
das
xlat
data16
mov
add
inc
out
cmp
stc
mov
stc
test
cmc
out
push
add
in
sar
pop
cmp
ret
add
cmp
push
in
jns
or
outs
cmp
inc
les
das
out
add
lock
retf
or
out
jl
jecxz
sbb
ror
dec
(bad)
sbb
adc
ins
mov
add
jp
ins
push
(bad)
ror
sub
popa
xchg
dec
ja
cmp
cmp
add
ins
call
pop
lea
xchg
aaa
add
add
loopne
aas
push
mov
movs
dec
icebp
rcr
add
add
pop
xlat
scas
pop
inc
cdq
and
xchg
mov
and
int
call
aas
sti
sar
xchg
gs
sbb
add
mov
test
push
sub
add
ins
or
jno
mov
dec
mov
ins
retf
(bad)
dec
mov
add
inc
cmp
push
cmp
cmp
fsubr
add
push
fcos
(bad)
(bad)
cmc
fidiv
dec
xchg
jns
out
adc
stos
sbb
mov
sbb
mov
add
pop
mov
and
inc
adc
icebp
inc
les
sti
sub
add
js
push
loope
sub
add
test
mov
ret
mov
cwde
inc
mov
jmp
push
std
fdivr
and
mov
cmp
rep
mov
or
stos
pop
sub
mov
movs
or
repz
addr16
fcomp
clc
fild
ins
stc
mov
ja
movs
adc
xchg
hlt
mov
mov
add
mov
xchg
(bad)
jns
std
inc
adc
add
ror
or
dec
das
loopne
shl
xchg
(bad)
sbb
test
sub
jp
inc
loop
arpl
sbb
add
push
retf
push
xchg
jne
inc
popa
or
test
shr
fucomp
(bad)
and
cmp
adc
pop
inc
add
add
add
mov
ss
push
push
test
sub
int3
xchg
jp
add
add
daa
push
inc
ret
dec
pop
push
sbb
ins
push
or
push
(bad)
adc
mov
sbb
add
add
movs
mov
cmps
int3
das
and
fisttp
outs
imul
leave
xor
pusha
inc
xchg
xchg
jp
test
add
xchg
add
sub
test
dec
xor
dec
arpl
add
std
jne
sub
aaa
ss
mov
cli
mov
add
ins
sbb
mov
mov
mov
add
add
(bad)
aam
lods
add
in
in
rcr
shl
xor
mov
add
lock
pop
test
stos
or
jl
ss
mov
mov
sub
cmp
iret
xchg
fs
pop
(bad)
adc
xchg
push
mov
aam
add
add
out
pop
cmp
(bad)
hlt
or
scas
sub
leave
enter
jmp
add
mov
jle
sbb
pushf
out
outs
nop
mov
or
sub
push
clc
xor
test
clc
add
pop
add
lds
jle
lds
mov
or
mov
stos
push
cmp
jbe
adc
pop
xchg
jns
test
adc
add
adc
jl
pop
add
add
jp
xchg
jns
fiadd
and
(bad)
sub
or
push
cwde
cmps
pop
add
add
mov
pop
xchg
push
mov
push
push
add
sub
or
outs
add
inc
xor
cmps
jge
cmp
jl
cmp
mov
call
adc
fistp
in
xor
sub
push
add
add
(bad)
je
push
idiv
sub
lds
adc
jge
or
je
nop
inc
adc
add
sub
out
jae
cwde
ins
mov
and
shl
mov
loopne
jnp
aas
dec
dec
xchg
cld
bound
call
xchg
fadd
clc
mov
mov
push
add
add
sbb
fidivr
pop
bound
mov
retf
mov
retf
repz
shl
add
scas
lods
pop
fcmovu
in
sub
push
data16
add
inc
sbb
adc
xor
adc
cmp
std
xchg
mov
loop
fcom
loope
or
mov
add
pusha
adc
mov
pop
les
mov
mov
or
iret
cli
jae
mov
imul
cmps
test
out
inc
fdivr
mov
cmps
mov
test
cmp
xchg
add
xchg
add
and
sub
sbb
add
(bad)
mov
xchg
inc
sbb
add
mov
add
sub
xchg
and
or
pop
mov
mov
mov
enter
sub
stos
out
push
outs
test
call
call
mov
jae
call
loope
mov
add
aaa
movs
repnz
xchg
push
jl
pop
jns
aad
add
add
retf
and
iret
push
xchg
std
dec
jge
add
pusha
jmp
or
sub
enter
cdq
pushf
ja
cmc
(bad)
and
add
add
push
int3
call
out
stc
or
mov
fwait
jmp
sbb
mov
dec
push
add
add
or
js
push
icebp
arpl
inc
(bad)
lods
or
sti
shl
pusha
in
mov
imul
mov
add
add
cmp
sbb
mov
outs
lds
inc
inc
xchg
jg
jnp
adc
mov
push
aaa
mov
add
xor
aam
mov
xor
pop
push
sub
jno
inc
fild
mov
sub
jo
stos
movs
inc
mov
popa
sub
call
inc
mov
out
test
fnsave
inc
adc
bound
cmp
and
or
lea
mov
sub
adc
sbb
mov
or
sub
and
add
add
sub
loopne
jle
das
shl
leave
into
stc
mov
push
(bad)
or
sub
adc
add
movs
adc
out
daa
int
neg
cmp
out
out
into
inc
inc
cld
add
movs
or
inc
jl
xor
ins
or
mov
std
pop
std
cli
mov
hlt
cmps
(bad)
in
add
mov
aaa
sahf
into
mov
enter
mov
add
add
retf
adc
push
mov
push
stos
pop
inc
in
pushf
pop
aas
out
mov
dec
add
add
js
popf
enter
pop
or
add
jl
mov
mov
aaa
daa
dec
mov
inc
sub
add
lock
add
(bad)
and
pop
xchg
cmps
std
cmc
pop
fidiv
sbb
or
out
mov
shl
mov
pop
push
jb
in
dec
pop
loope
cmps
imul
ret
sub
xchg
inc
pop
xchg
mov
add
out
adc
dec
mov
and
ror
sub
ds
inc
push
sti
jmp
pusha
and
add
xchg
test
lea
inc
xchg
lea
add
add
in
inc
ss
call
ss
pop
(bad)
mov
xlat
xchg
add
add
adc
into
repnz
add
dec
mov
mov
mov
or
dec
mov
mov
xchg
fist
iret
adc
add
das
inc
jp
aas
push
cmps
cmp
aam
adc
ror
cmp
cmps
jl
ins
sahf
out
data16
ja
and
ret
add
adc
bound
shl
aam
int
lock
ret
sub
add
add
(bad)
push
dec
mov
ds
cmps
dec
or
cmps
shl
or
mov
xchg
or
fs
add
add
and
jecxz
jns
pop
push
fistp
idiv
sar
fs
addr16
inc
dec
push
add
add
js
ret
dec
jbe
pop
or
pop
shl
push
jns
(bad)
xchg
js
int3
mov
sub
sbb
add
add
in
jg
add
push
ficomp
lahf
pop
pop
pop
dec
jp
jns
xchg
loope
inc
push
(bad)
aas
jbe
cmps
add
push
clc
sbb
add
mov
sti
mov
(bad)
rcr
add
inc
fiadd
add
xchg
out
or
mov
call
inc
xchg
cmp
lahf
sub
push
mov
int3
mov
dec
push
leave
pop
push
or
xor
add
add
fdiv
idiv
mov
int
push
mov
fsub
mov
add
add
jnp
push
(bad)
movaps
add
add
mov
adc
xchg
(bad)
fidivr
retf
add
add
loope
mov
cmps
jp
movs
lds
mov
cwde
nop
mov
fs
dec
cwde
adc
push
stos
add
loopne
mov
jg
pop
pop
movs
hlt
xchg
add
add
in
scas
sub
aaa
xor
test
and
cmp
fild
dec
and
js
out
add
add
dec
lea
pop
ins
fs
dec
sub
shr
dec
jae
adc
sub
retf
push
in
inc
dec
add
pusha
dec
mov
add
add
push
aas
jmp
jg
jns
stc
out
sub
rcl
add
push
or
sub
dec
cdq
test
aas
xor
dec
adc
test
add
cmp
pop
data16
fwait
add
add
or
xor
mov
repz
add
add
rcl
or
push
pop
or
sub
ins
add
add
inc
je
inc
cmp
or
mov
lock
and
pop
or
imul
xchg
pop
add
add
test
cmp
sahf
inc
out
xor
inc
add
sbb
scas
dec
add
and
add
cmp
hlt
dec
jl
mov
cmp
stos
out
mov
add
jge
xchg
and
enter
hlt
bnd
loope
cmp
add
ror
enter
daa
dec
dec
mov
mov
add
xchg
ins
push
mov
add
clc
ret
ds
stos
jle
xor
enter
rcl
call
loope
fld
pop
jle
movs
add
cwde
mov
(bad)
adc
and
xchg
pop
popa
daa
out
add
add
cmp
inc
cmps
aaa
clc
push
add
shl
out
popf
jbe
out
cld
mov
cmps
adc
jb
mov
adc
add
cdq
pusha
mov
scas
and
inc
add
add
adc
retf
fidiv
cs
inc
or
push
and
bound
fbld
and
or
add
xchg
adc
push
jnp
(bad)
and
cmp
sub
movs
rol
js
sub
add
adc
xor
jno
push
cvtps2pd
rol
fisttp
cdq
repz
cmp
addr16
sub
push
or
imul
mov
fmul
das
ror
add
add
dec
fsubr
rcl
retf
leave
pusha
sbb
jge
aaa
nop
sbb
sbb
add
add
aas
inc
sahf
pop
fcmovnbe
fidivr
add
mov
sbb
jl
int
fdiv
pop
sar
add
inc
cs
xor
repz
or
pusha
mov
push
mov
jno
push
push
fist
xlat
sub
jno
xor
pop
int
hlt
add
add
push
mov
cmp
cdq
adc
iret
mov
(bad)
mov
gs
pop
int3
test
add
push
jae
fldcw
mov
mov
add
leave
add
xchg
int
xchg
js
repnz
add
add
jmp
lods
cmps
mov
sub
add
cwde
lahf
out
cmp
mov
adc
sub
adc
dec
es
pushf
or
or
add
add
pop
fidiv
xchg
ret
push
or
scas
mov
out
lahf
jnp
add
add
into
retf
hlt
or
cld
hlt
push
jne
int
mov
nop
scas
push
cmp
and
add
loopne
lods
jle
dec
mov
fbstp
and
movs
cli
test
or
add
jns
sub
sbb
lds
into
cdq
or
fwait
or
mov
sbb
dec
shr
and
mov
dec
pop
sub
adc
outs
cmp
jmp
fisubr
pop
add
add
sbb
in
xor
lds
sub
xor
adc
gs
inc
cmp
add
add
arpl
aas
jge
cmp
cmps
dec
jb
mov
cs
test
push
and
aad
dec
add
test
test
inc
push
hlt
cmp
mul
add
add
fs
or
loop
push
dec
pop
arpl
out
xchg
jg
add
cwde
lods
xchg
add
or
mov
aad
ss
scas
sub
mov
add
ss
lods
arpl
in
add
and
arpl
lds
shl
mov
or
mov
data16
dec
or
jmp
shr
ins
pop
add
add
ins
ret
dec
push
nop
test
add
cmp
inc
cmps
bound
or
stc
jne
hlt
jl
pop
adc
stc
rol
fst
bound
lods
dec
sbb
fiadd
cwde
mov
fcom
sub
inc
imul
add
(bad)
imul
ss
xchg
in
cwde
lods
sbb
add
mov
(bad)
add
(bad)
xchg
aad
add
add
fucomi
push
cmps
jg
add
add
add
mov
sub
dec
movs
sub
je
sahf
jo
inc
imul
je
js
mov
cdq
sldt
add
jae
inc
lock
js
and
jb
mov
ror
dec
and
jmp
jmp
test
xchg
jge
dec
test
leave
sub
retf
mov
outs
pop
adc
test
mov
push
jecxz
xor
ins
add
mov
xchg
jmp
jg
sub
pop
outs
cld
and
movs
sbb
adc
xchg
ret
and
add
pop
add
dec
add
add
ds
test
popf
sub
lock
add
add
sbb
add
shr
dec
(bad)
xor
mov
dec
sar
push
jl
stc
ins
shl
push
push
or
stos
add
push
dec
ror
xabort
push
(bad)
call
add
imul
xchg
xchg
das
kortestw
pop
pop
mov
add
mov
mov
jne
aam
mov
inc
popa
adc
pop
dec
jb
(bad)
cmp
fwait
push
mov
call
lea
jg
cld
clc
aad
gs
add
cwde
add
push
inc
mov
sbb
push
aaa
aaa
push
add
add
add
push
pop
xchg
adc
xchg
retf
sub
fild
shl
in
xor
push
jnp
cmc
push
inc
pop
jg
fidiv
cmp
cmp
lahf
mov
ror
in
mov
mov
push
rol
add
popa
clc
pop
pop
mov
js
loop
inc
sti
ss
fadd
scas
sub
outs
push
adc
sbb
test
push
adc
dec
pop
popa
retf
mov
lods
rol
mov
pop
cwde
jo
xor
in
inc
popa
mov
add
add
mov
scas
mov
fwait
cmps
ficom
in
cmps
mov
jae
test
in
ficom
add
jp
xlat
adc
mov
push
hlt
dec
add
add
or
pop
imul
shl
and
(bad)
push
dec
dec
popf
xor
or
add
add
lds
sti
sub
sub
or
ficomp
popf
in
ret
stos
aaa
and
mov
xchg
or
add
and
dec
sbb
sub
jmp
inc
inc
add
add
into
cmp
inc
and
add
into
repnz
mov
pop
mov
je
push
mov
dec
jmp
mov
add
fiadd
out
dec
repnz
dec
mov
add
test
ret
and
leave
and
(bad)
popa
add
mov
sbb
jb
push
and
vpmadcswd
jge
pop
cmp
pushf
fstp
inc
dec
adc
outs
add
(bad)
div
pop
cdq
mov
add
shr
xlat
xor
stc
push
push
outs
pushf
pop
mov
leave
mov
(bad)
(bad)
jl
xor
add
mov
les
test
mov
push
lea
add
add
(bad)
mov
mov
or
arpl
and
test
mov
jg
xchg
aad
add
add
xchg
mov
fld
cmp
mov
xchg
jno
into
in
xchg
bound
push
push
aam
pop
add
(bad)
ds
pop
rol
jae
mov
add
pop
nop
call
fnsave
xor
push
add
add
push
punpckhbw
in
in
imul
add
add
fnstsw
sub
jnp
mov
add
cmp
push
add
pop
add
push
lods
dec
iret
fs
scas
push
(bad)
icebp
repnz
xor
jno
sbb
sti
pop
xchg
add
add
(bad)
or
mov
pusha
mov
call
icebp
test
jb
add
add
adc
sar
test
xchg
xchg
stos
sahf
jno
leave
retf
jmp
aas
jg
add
add
push
jae
and
xchg
xchg
mov
push
popa
fdivr
out
pop
and
cmp
add
add
shr
in
and
shl
add
sbb
or
sbb
fadd
sbb
int
add
add
les
and
dec
or
mov
jne
iret
jne
xor
mov
cwde
mov
add
add
xchg
(bad)
fnsave
dec
inc
scas
add
(bad)
fistp
and
add
enter
pop
ins
sbb
add
rol
xor
dec
sub
inc
inc
cmp
push
arpl
sbb
repnz
jle
inc
rol
add
dec
mov
mov
add
shl
arpl
and
xor
dec
sub
or
rol
and
adc
repnz
dec
adc
mov
mov
fcomp
add
rcl
inc
mov
sbb
add
lods
not
add
loope
in
(bad)
cmp
adc
pop
ins
xlat
cdq
mov
cmp
push
retf
xchg
adc
in
push
(bad)
retf
add
movs
mov
add
add
add
mov
mov
popa
pop
in
in
and
push
test
or
xor
in
pushf
cmp
add
sahf
fimul
jp
xchg
push
inc
push
add
mov
fsub
add
add
(bad)
int3
mov
ss
ja
inc
add
add
pop
shl
repz
xchg
xchg
xchg
xor
mov
inc
cmc
(bad)
dec
(bad)
mov
cli
lea
add
add
in
dec
fdiv
jbe
je
dec
in
int
dec
and
xor
js
clc
add
add
xlat
or
outs
stc
inc
jle
jae
add
jl
sar
jle
pop
aam
and
pop
add
or
mov
jne
daa
xchg
movs
shl
rcr
dec
sub
cdq
ss
sbb
push
je
jge
fs
ins
daa
test
pusha
into
jl
add
add
leave
dec
pushf
cld
jp
jmp
cmp
xor
stc
and
mov
pop
leave
loope
inc
add
(bad)
xchg
push
mov
gs
adc
push
adc
xchg
xor
adc
pop
pop
mov
mov
jo
mov
ds
jns
add
sub
xchg
test
stos
xlat
push
(bad)
or
add
(bad)
push
cmps
sub
mov
iret
nop
add
add
push
retf
xor
in
test
pop
mov
pop
mov
jo
mov
jo
add
mov
mov
cmp
popa
add
call
mov
out
retf
xor
pop
popf
mov
push
fisttp
xor
or
into
add
icebp
add
add
aam
pop
bound
xchg
and
jne
xor
mov
dec
jge
ss
jle
add
add
or
loope
movs
bound
xlat
in
ins
or
sbb
idiv
fidivr
mov
js
add
add
or
sbb
pop
pushf
cwde
pop
inc
fdiv
pop
mov
in
jb
add
add
into
jno
scas
xlat
lods
sbb
push
mov
hlt
fnstenv
jge
adc
pop
add
adc
mov
mov
shl
es
mov
add
cdq
xor
mov
jecxz
lds
add
enter
lahf
pop
xchg
and
(bad)
int
rol
push
adc
add
add
pop
xchg
mov
in
sbb
ins
sub
mov
xchg
fnstcw
add
add
ins
je
fstp
xlat
test
mov
push
add
add
rcl
sbb
xor
test
add
add
mov
ds
clc
icebp
loope
and
dec
push
jmp
sti
aad
adc
icebp
rcl
xchg
dec
int3
jmp
mov
add
mov
add
add
jnp
out
retf
cld
jg
xor
aaa
sub
(bad)
retf
stos
ins
sbb
(bad)
out
add
add
push
(bad)
or
ret
or
add
xor
cmps
xchg
aas
ins
adc
add
sub
ret
and
fwait
jne
sbb
inc
pop
add
sahf
mov
pushf
xchg
pop
js
fwait
stos
xchg
fisttp
cmps
xlat
inc
(bad)
popf
test
mov
sub
add
outs
mov
jns
ret
and
mov
xor
add
cmps
outs
into
add
cmp
cdq
nop
pop
shl
lds
sbb
mov
push
sbb
add
add
cli
aas
dec
sti
seta
add
sbb
jne
add
ins
pushf
xchg
and
mov
adc
add
add
inc
call
fbstp
dec
clc
xor
adc
pop
pop
iret
xchg
sub
xor
fst
add
sbb
stos
je
popf
push
scas
lahf
and
in
mov
add
add
out
mov
dec
mov
push
add
ins
mov
imul
cs
inc
inc
add
inc
pop
jl
daa
adc
dec
fpatan
sub
ins
xchg
pop
jmp
adc
or
ret
add
(bad)
(bad)
call
mov
sub
pop
(bad)
push
sub
jae
mov
cld
add
pop
sub
xchg
cmc
cmp
or
push
popa
jmp
mov
mov
add
sar
add
lock
inc
movs
add
cmps
mov
add
add
xor
cdq
pop
daa
jns
stos
sti
adc
jmp
stos
es
jne
gs
das
adc
xor
mov
stos
in
xchg
dec
add
sub
out
loopne
aad
lahf
aad
cmps
es
stos
mov
xor
add
fsubrp
rol
(bad)
jbe
mov
and
and
mov
xor
add
add
out
in
popf
es
in
push
xchg
add
push
adc
sbb
add
add
out
movs
sub
dec
mov
add
add
lock
push
pushf
jo
in
aad
(bad)
lock
cmps
sub
mov
stos
and
mov
test
push
or
push
add
jo
cmp
mov
das
sub
loop
ja
ds
cmps
inc
idiv
add
dec
mov
add
add
dec
scas
pop
mov
push
sub
push
sub
cmps
jge
mov
mov
sti
jnp
add
add
repz
jnp
push
jp
jmp
jge
(bad)
xchg
or
iret
add
addr16
mov
sub
inc
test
sbb
(bad)
cmc
push
mov
adc
or
sbb
dec
ins
cmps
(bad)
ds
add
add
das
sub
addr16
dec
mov
cmp
mov
loop
add
push
dec
or
daa
push
retf
cmps
cdq
sub
rcl
lea
cmc
xchg
add
or
mov
in
sbb
or
add
push
xor
data16
lods
sub
cmps
rol
add
bound
mov
test
ss
icebp
adc
add
cdq
push
mov
mov
or
enter
out
pop
xor
in
adc
fisub
cmp
mov
clc
xchg
xlat
jmp
movs
add
adc
jp
jge
les
add
add
sub
and
imul
push
daa
add
add
jnp
cli
inc
clc
(bad)
mov
cmp
xchg
popf
xchg
popa
push
pusha
inc
loop
mov
xor
pushf
pop
adc
ja
mov
add
lods
retf
popf
cs
sub
add
jecxz
mov
lock
push
ror
add
add
add
adc
or
or
addr16
ss
dec
mov
add
sub
push
sbb
mov
inc
xlat
mov
out
xchg
gs
mov
mov
add
add
and
arpl
mov
cmps
mov
mov
mov
out
xchg
aas
repnz
adc
scas
scas
mov
push
pop
cs
add
xchg
push
or
add
mov
popa
in
mov
mov
mov
jle
cmp
push
add
add
lock
push
mov
pushf
stos
xchg
pushf
les
jmp
aam
sbb
ror
add
add
add
stos
loopne
xchg
lea
jns
call
repnz
xchg
daa
cmp
xlat
sbb
or
push
loope
mul
jb
fisubr
add
adc
dec
(bad)
adc
xor
in
aad
shr
les
jle
aam
push
adc
jp
or
cmp
cli
test
pop
sub
mov
add
add
mov
lahf
jl
xor
sub
je
loope
mov
mov
add
cmps
sti
(bad)
xchg
xchg
imul
xchg
(bad)
mov
add
add
fadd
sbb
jmp
dec
sbb
jg
lea
push
rcr
xchg
dec
imul
push
add
loope
pop
cmps
inc
enter
sbb
daa
sbb
fxch
(bad)
lods
aas
xor
rol
adc
add
call
push
fmul
pop
hlt
sti
sbb
inc
call
popf
in
push
(bad)
shr
mov
add
add
jecxz
jecxz
xchg
dec
jo
call
or
in
inc
add
and
retf
mov
add
push
add
cdq
mov
rol
xor
cmp
outs
call
das
les
add
add
mov
add
shl
or
jo
pop
lahf
and
mov
add
add
pop
jo
fiadd
clc
or
pop
add
mov
(bad)
std
inc
inc
add
mov
or
sub
add
in
adc
mul
sub
add
pop
mov
and
bound
lahf
mov
and
xor
add
pop
add
pop
mov
mov
xchg
fdivr
push
cli
sub
push
mov
or
stc
add
add
arpl
mov
loop
aad
imul
mov
jbe
popa
call
outs
and
add
add
fs
or
bnd
xchg
nop
adc
xchg
xchg
(bad)
jp
adc
imul
add
add
and
cmp
mov
cmp
call
ins
push
xor
pop
clc
or
add
add
std
inc
push
in
lods
inc
in
jg
icebp
mov
les
mov
retf
mov
add
shr
jb
add
nop
and
call
sbb
ficomp
rol
add
add
scas
jbe
std
jmp
enter
sbb
jns
mov
inc
movs
pop
cli
push
fidiv
add
sub
mov
mov
mov
shr
add
mov
add
push
add
add
fldcw
mov
add
js
sbb
shr
stc
mov
mov
mov
(bad)
fbld
sbb
add
test
xchg
mov
mov
mov
lock
add
loopne
daa
inc
or
out
sbb
sbb
pop
push
add
fs
loop
adc
movs
xchg
repnz
add
dec
xchg
enter
xchg
das
cs
add
add
cmp
int
mov
dec
mov
shl
xor
xchg
jge
add
shl
dec
je
push
and
nop
sar
or
mov
add
add
xor
or
aam
outs
js
mov
cld
pop
xlat
mov
std
repz
outs
add
add
je
stc
push
iret
dec
mov
cmp
shl
stos
add
cmps
inc
pop
fcom
cmp
dec
popa
or
add
xlat
cmp
sub
pop
mov
or
adc
jge
in
jo
nop
cwde
add
mov
xor
or
ins
sub
add
dec
test
dec
mov
jns
jmp
sahf
fadd
cmp
add
hlt
fsub
push
sub
fs
mov
add
fcompp
inc
sbb
xor
push
(bad)
push
jp
sti
in
push
out
shl
push
cmp
add
add
aaa
jecxz
xchg
and
(bad)
jge
ds
pop
jns
in
cwde
push
adc
mov
sbb
sbb
cmp
syscall
xchg
mov
sub
div
sbb
add
add
stos
in
call
pushf
arpl
cmp
scas
push
std
shl
mov
nop
push
xchg
mov
shl
iret
addr16
jp
inc
lods
or
add
add
lds
ja
inc
xchg
lods
push
cmp
jp
(bad)
adc
add
lahf
add
add
iret
loop
fsub
xchg
and
mov
add
and
push
das
ret
push
inc
fist
xor
add
xor
add
test
cmp
dec
mov
sub
in
repnz
in
aaa
fild
std
dec
mov
into
aas
in
dec
xchg
sub
sub
dec
fst
mov
jecxz
int3
out
cld
push
sub
(bad)
test
ins
adc
sbb
dec
int3
shl
nop
jmp
sbb
add
add
xor
xor
shl
data16
inc
mov
test
add
push
push
cmp
xor
add
adc
sbb
and
in
sub
imul
add
mov
enter
jmp
adc
sub
jmp
cdq
xchg
push
push
and
push
dec
xor
add
add
mov
inc
imul
push
dec
cmps
jnp
push
adc
mov
xchg
mov
add
mov
pop
es
fmul
add
xor
sub
jno
cld
movs
in
sbb
jmp
adc
add
shl
ret
repz
xchg
push
mov
imul
mov
call
inc
stos
adc
add
push
scas
(bad)
push
xchg
dec
repnz
(bad)
mov
lds
xchg
mov
add
repz
call
jnp
add
cld
xchg
xchg
add
mov
ins
repz
add
mov
or
jecxz
cld
add
add
(bad)
and
sbb
adc
and
mov
push
ror
mov
mov
push
add
into
clc
jno
dec
jbe
jb
neg
jbe
cmc
push
popa
add
add
sub
stc
pushf
out
xlat
inc
jb
adc
inc
fs
movs
bound
test
xchg
clc
sub
add
add
sahf
push
mov
enter
dec
jg
sbb
nop
push
mov
pop
cmc
push
push
dec
adc
dec
mov
cdq
dec
add
in
popa
mov
cmc
sbb
sar
adc
ins
call
xlat
add
add
(bad)
fisubr
shr
sbb
jge
mov
or
cmp
out
dec
mov
outs
sub
mov
mov
add
add
scas
xor
out
cmp
mov
ds
fsub
pop
call
push
jae
add
push
neg
mov
sbb
rcr
lea
daa
pop
pop
xchg
outs
fdiv
call
addr16
dec
push
and
and
cmp
xchg
xor
add
xchg
ja
ffreep
pop
mov
add
jo
sub
mov
adc
ficom
call
add
test
mov
daa
sbb
mov
add
ret
jecxz
mov
inc
add
fstp
add
add
ret
aaa
push
clc
and
shr
cli
bound
pop
jle
mov
add
cwde
outs
clc
jg
popa
retf
rol
lods
pusha
add
mov
daa
loopne
movs
arpl
lar
aad
mov
and
aad
pop
mov
(bad)
pop
es
add
fiadd
pop
pop
xor
mov
cmp
fdiv
cld
and
scas
mov
add
dec
mov
stc
xchg
mov
aam
dec
push
xacquire
pop
inc
jno
mov
in
shr
mov
add
mov
mov
je
pop
push
mov
pop
mov
add
add
icebp
scas
lock
in
je
pop
(bad)
in
les
mov
nop
jns
inc
xchg
jmp
nop
ins
pop
jne
add
add
imul
jmp
mov
add
add
shl
pop
and
jp
cmp
fnstsw
dec
stos
gs
in
scas
jecxz
lods
mov
arpl
xchg
mov
jmp
sub
pop
aad
add
add
(bad)
cmps
inc
aad
xchg
cmp
(bad)
loop
jae
lods
jmp
test
pop
fs
inc
adc
add
add
mov
pop
or
mov
popw
jo
jmp
xchg
lea
wrmsr
or
mov
imul
aaa
adc
inc
mov
adc
add
mov
scas
push
mov
rol
add
add
mov
aam
scas
cwde
xchg
inc
push
shl
outs
fs
imul
add
add
push
mov
adc
in
jno
gs
dec
popf
scas
cs
cmps
jb
jns
enter
test
test
cmp
adc
jmp
push
test
gs
inc
cmp
sub
add
add
push
mov
or
leave
dec
lods
pusha
cld
shl
scas
sub
pop
repnz
adc
add
add
loope
cli
or
mov
pop
jecxz
shr
mov
and
add
add
mov
add
add
and
cwde
loopne
sub
sbb
dec
and
retf
fstp
(bad)
out
and
add
jb
popa
mov
sub
int
dec
xor
and
fwait
jb
sub
push
xor
mov
popf
and
dec
fisttp
adc
xor
add
fs
mov
jl
jl
sub
add
add
out
out
jbe
scas
xor
stos
shr
(bad)
add
xchg
fidivr
fstp
add
jge
gs
add
or
in
mul
push
imul
jp
add
add
call
enter
lods
scas
sbb
enter
and
lock
cmc
mov
je
push
imul
mov
scas
add
add
dec
leave
cmp
and
shl
(bad)
lods
mov
add
pusha
call
or
or
mov
add
jno
inc
sub
xchg
jg
les
mov
mov
bound
shr
mov
andnps
add
add
push
aaa
inc
pop
lock
inc
int3
jns
push
ret
and
push
in
pop
es
and
add
add
iret
sbb
ss
loop
push
nop
push
test
add
in
mov
and
dec
arpl
mov
sti
out
jmp
ret
mov
mov
jmp
aam
js
sbb
add
js
(bad)
xor
inc
xchg
sub
sbb
add
add
inc
inc
repnz
(bad)
scas
xchg
cmp
sub
dec
adc
int
and
(bad)
jg
jbe
inc
out
add
add
lods
cmps
mov
lods
fadd
sbb
dec
cmc
add
fs
cmp
je
mov
xor
shr
mov
xchg
lods
sti
cs
shl
add
inc
ret
inc
xchg
test
cmp
mov
or
stos
cmps
int3
and
ja
mul
mov
sbb
pop
jmp
xchg
mov
outs
add
outs
mov
xor
rcl
mov
add
add
sahf
and
sti
and
call
or
push
cmp
nop
inc
add
or
push
dec
adc
scas
retf
jge
mov
mov
add
add
sbb
rcl
xchg
jo
xor
xor
xchg
pop
xor
sbb
pop
sahf
or
inc
or
add
pop
push
das
xchg
ins
mov
aaa
dec
pop
aaa
imul
aaa
jne
add
out
mov
add
add
imul
add
icebp
xlat
std
cmp
adc
int
lea
imul
cmp
lds
dec
push
jmp
add
call
push
or
in
leave
ror
rol
mov
fisttp
fdivr
dec
or
in
add
add
imul
sub
xchg
retf
adc
jle
push
xchg
mul
push
jno
inc
push
test
stos
shl
mov
xchg
jns
icebp
icebp
add
mov
inc
cs
sbb
push
sub
aaa
mov
add
xchg
pusha
bound
stos
sub
xor
ret
in
add
add
cs
ja
ror
xchg
js
or
pop
xchg
mov
in
retf
call
add
add
bound
xor
add
scas
popf
xchg
add
add
stc
or
cmp
dec
sub
popf
mov
fdiv
add
in
mov
retf
aam
imul
pop
cmps
sbb
or
jo
add
popa
lods
das
test
stc
mov
jle
add
add
test
push
pop
lea
cmp
add
daa
in
outs
pushf
jmp
sar
ins
aas
popf
scas
mov
lahf
ret
int3
xor
add
cmp
inc
dec
or
add
add
push
or
jmp
mov
fcmove
dec
cwde
mov
notrack
jmp
add
js
add
mov
fiadd
pop
sub
dec
adc
pop
sub
ret
ja
inc
rcr
sbb
inc
xchg
mov
xor
add
jns
in
mov
movs
out
mov
lea
add
add
mov
jecxz
test
(bad)
push
mov
xor
cmp
add
jo
sub
imul
shl
mov
mov
xor
xor
jb
sbb
inc
enter
inc
repnz
adc
add
cmps
outs
pop
add
or
xchg
adc
ja
jp
pushf
jl
add
add
loopne
pop
jb
xor
xor
mov
or
push
mov
add
add
rcr
xor
adc
mov
xchg
xchg
popa
dec
(bad)
sub
dec
sbb
inc
dec
push
imul
add
add
lock
ja
mov
(bad)
mov
stos
in
and
scas
cmp
outs
xor
sub
sub
sub
shr
adc
retf
repz
test
add
shl
push
mov
fnsave
xchg
xchg
add
ins
adc
add
jne
pushf
cwde
(bad)
mov
call
pop
(bad)
push
xchg
shr
leave
add
add
stos
inc
jae
mov
test
push
(bad)
pop
cmc
mov
mul
jb
shl
hlt
or
push
sub
mov
adc
enter
aam
jp
or
mov
sub
lods
loop
sbb
cmc
or
mov
retf
xchg
pop
xchg
add
xor
call
ins
das
jmp
push
mov
add
fst
cmp
jmp
aaa
and
add
lea
add
xchg
add
add
inc
mov
mov
inc
cwde
sub
dec
inc
adc
xor
aas
inc
mov
in
sub
add
add
mov
iret
lods
pusha
arpl
inc
call
out
adc
mov
(bad)
cld
add
mov
not
cwde
fidivr
inc
dec
sahf
js
bound
dec
xor
leave
add
add
dec
pop
inc
and
lods
pop
out
xchg
mov
in
push
xchg
test
je
pop
pushf
or
add
add
xchg
cmc
mov
sti
cmc
aad
inc
fwait
out
pop
es
dec
fcomi
fidiv
lahf
into
pop
push
add
add
jecxz
dec
das
sub
popf
xchg
fiadd
push
add
inc
push
je
imul
add
sbb
xchg
dec
dec
pop
cmp
adc
pop
fiadd
add
or
dec
sbb
mov
xor
add
sar
mov
loopne
xchg
fbstp
pop
imul
add
and
push
mov
pushf
out
inc
(bad)
loop
push
sti
adc
(bad)
ficomp
jp
jmp
or
mov
pop
mov
xchg
mov
cli
add
add
call
leave
pop
sti
add
push
cmp
xor
mov
jecxz
bound
cmps
or
lds
xor
in
xchg
mov
pop
add
sahf
into
ds
leave
xor
es
push
das
loope
aas
inc
dec
loopne
scas
inc
pop
xchg
mov
sub
add
neg
dec
stos
std
adc
in
stos
sti
add
add
outs
or
fist
xor
jl
lods
lock
(bad)
jns
adc
lods
punpcklbw
add
jae
(bad)
or
leave
pop
dec
test
inc
adc
add
inc
cmp
das
push
ss
cmp
mov
add
sub
push
jnp
pusha
cmc
pop
(bad)
cmps
fdiv
mov
sbb
add
cli
mov
cli
mov
jo
es
inc
rol
add
add
fwait
icebp
sub
dec
or
adc
jl
add
add
addr16
inc
add
add
iret
lahf
rcl
add
adc
std
jne
call
jnp
add
in
jae
push
inc
xor
add
pop
sbb
add
add
add
push
and
or
bound
retf
ror
pop
inc
pushf
sar
out
in
cmp
adc
add
nop
ror
int
push
xchg
xchg
dec
push
add
push
fs
aad
sahf
int
(bad)
frstor
arpl
movs
fcomp
adc
stos
mov
add
lock
dec
inc
retf
or
or
outs
add
hlt
xchg
mov
sti
push
stos
scas
add
add
stos
dec
or
push
test
cmp
pop
imul
sub
daa
lea
add
lea
fcmovb
xor
mov
(bad)
dec
dec
movs
in
mov
outs
dec
pop
sbb
push
jg
push
add
xor
cmc
pop
movs
arpl
jg
cli
fsub
cwde
push
add
or
xor
lock
sti
out
int
ret
and
sbb
int3
push
mov
cmp
cmp
add
add
add
les
(bad)
sti
vaddsubpd
popf
xor
jno
and
xor
mov
sub
add
add
mul
dec
adc
and
adc
xchg
add
add
fiadd
imul
repnz
ja
mov
stc
into
std
leave
loopne
sbb
push
and
add
pop
cmp
lods
sbb
add
popf
inc
xor
add
pop
pop
sbb
add
xchg
sub
loope
test
xor
jne
push
fcmovnu
rol
add
add
and
movs
and
popa
addr16
dec
jl
pop
dec
aam
sbb
dec
mov
adc
add
add
and
push
xchg
pusha
and
rcr
ret
or
pop
lods
mov
sbb
cmp
cmc
add
mov
call
loopne
jmp
xor
sub
dec
pop
scas
rcl
pushf
call
push
cmp
stos
pop
or
or
add
sar
stos
les
jno
pop
clc
cs
push
add
mov
movs
or
fldlg2
dec
pop
add
push
call
sbb
rol
leave
aad
or
imul
mov
fimul
xlat
leave
pop
dec
lock
cmc
jbe
and
and
cdq
xor
das
fs
add
add
adc
fdivr
push
xchg
cwde
dec
and
mov
scas
xor
stc
int
retf
inc
mov
in
add
mov
fbstp
inc
dec
cli
add
popf
lods
sub
pop
adc
add
add
sub
stos
retf
(bad)
sub
cld
push
pop
dec
mov
es
pop
or
fadd
add
pop
fldenv
shl
ret
or
idiv
add
xchg
or
popa
jae
stos
sub
movs
ins
jae
and
and
pop
mov
add
add
add
cmp
jmp
adc
push
mov
fst
test
cli
jmp
add
add
std
outs
ret
jmp
xchg
mov
nop
imul
inc
pop
cdq
sbb
or
int
add
inc
push
pushf
push
xchg
rol
mov
mov
mov
add
jge
cdq
jg
pusha
repz
loope
add
enter
(bad)
fistp
and
xchg
xor
and
inc
ret
inc
mov
mov
sbb
mov
hlt
lea
test
xchg
sahf
leave
lahf
adc
sub
xchg
out
add
add
scas
xchg
in
mov
add
or
add
call
repnz
test
pop
sbb
jg
lar
in
or
in
xchg
mov
outs
bound
cmp
sub
add
and
mov
push
add
add
jp
aas
ja
inc
add
jge
pushf
int3
lods
out
std
add
fdiv
inc
mov
jmp
fwait
mov
(bad)
out
add
add
neg
bound
add
cmp
iret
jp
bound
fidivr
cld
movs
into
and
add
add
arpl
int
imul
push
jns
dec
dec
jnp
cmp
in
imul
popf
aam
push
mov
add
xor
or
scas
fcomp
add
xchg
dec
add
xchg
popa
cwde
xor
adc
or
shl
arpl
jno
adc
sbb
int
into
inc
push
pop
test
add
add
xchg
loopne
mov
sub
lds
dec
mov
popa
repnz
add
add
push
pop
rol
data16
mov
and
add
push
mov
cmp
cld
dec
jb
xor
add
add
in
imul
fwait
cmp
jl
mov
test
add
scas
mov
mov
add
adc
xor
jb
push
sub
int3
cmc
imul
push
sbb
push
xlat
loopne
mov
xor
cwde
and
add
outs
sbb
adc
mov
daa
xor
test
jbe
test
(bad)
lds
push
push
das
out
pop
mov
leave
add
dec
in
(bad)
push
jl
and
add
add
in
sub
icebp
loop
imul
cmp
lea
pop
sbb
shl
lds
mov
lea
lods
loopne
(bad)
xchg
dec
pop
arpl
dec
jg
push
sbb
dec
lock
add
in
add
aad
outs
add
or
dec
jmp
mov
lods
(bad)
out
push
jl
sub
add
outs
sbb
jno
xor
sbb
fisubr
mov
or
std
pop
bound
add
add
shl
imul
or
add
lods
jecxz
pop
lods
int3
sub
stc
mov
add
push
inc
and
in
dec
sbb
adc
and
fst
std
frstor
adc
int3
stos
sub
int3
push
jae
dec
sbb
retf
fmul
adc
out
add
mov
xchg
add
jbe
ret
ror
add
fisttp
sub
adc
and
je
call
xor
adc
mov
add
add
cmp
stos
ja
xor
and
inc
stos
dec
mov
xlat
test
pusha
into
and
add
add
mov
lods
shl
jo
xchg
data16
mov
sbb
(bad)
xchg
sar
xchg
cmp
or
cmp
inc
or
mov
jns
add
stos
clc
rol
adc
mov
pop
add
lea
jnp
mov
xchg
ficom
push
int
pop
sub
loopne
push
xor
add
or
xchg
ret
xchg
fwait
push
add
mov
xor
ret
add
outs
cmp
jmp
push
hlt
dec
sub
call
push
ds
add
add
mov
icebp
push
and
pop
dec
inc
push
and
fnstcw
punpcklwd
mov
mov
sahf
icebp
test
aaa
movs
addr16
clc
push
push
mov
in
dec
jg
into
add
mov
and
mov
push
jg
aaa
inc
sub
fcom
add
shl
sub
mov
xchg
pop
shl
and
xchg
cwde
and
loopne
add
add
popa
jbe
push
jae
dec
out
lea
mov
(bad)
call
ins
fwait
cli
lock
rcr
test
and
shr
mov
dec
into
cmps
mov
(bad)
xchg
repnz
mov
shr
mov
jp
jb
push
mov
inc
add
add
adc
sub
ds
cli
das
xchg
scas
shl
add
rcl
enter
pop
xor
adc
add
dec
pop
sub
repnz
mov
xlat
call
cmp
movs
xchg
jo
cmp
rcl
jmp
inc
mov
test
test
add
shl
sub
mov
mov
add
add
mov
dec
mov
cmp
(bad)
sbb
mov
(bad)
xchg
hlt
xor
rcl
int3
mov
or
data16
add
pop
adc
inc
mov
mov
test
pop
mov
in
add
and
jnp
add
add
adc
je
mov
cmp
sbb
add
ins
call
pop
jb
jno
call
sbb
mov
(bad)
ficom
jge
jecxz
add
add
fs
xchg
hlt
jmp
arpl
lods
dec
in
lea
rcr
xor
or
xchg
lock
ret
dec
ds
xor
cs
fwait
add
add
dec
inc
or
(bad)
aam
sbb
add
imul
cmps
jle
add
mov
push
daa
addr16
repz
loopne
fsubr
add
add
inc
fs
das
sub
int
and
adc
movs
push
not
cmp
imul
fstp
add
add
shl
jp
cmps
jns
dec
cmp
stos
scas
gs
(bad)
out
add
mov
retf
jo
add
mov
cmp
sbb
add
push
pop
cmp
mov
pop
or
inc
test
push
ja
popf
ss
leave
mov
stos
popf
jno
fdiv
nop
sbb
mov
add
mov
and
adc
cld
test
fdiv
cwde
fucomi
loopne
xor
add
push
ret
xchg
push
xchg
mov
sub
icebp
xchg
pop
add
xchg
add
add
rcr
mov
push
bound
add
imul
test
or
and
mov
je
mov
add
repnz
pop
sbb
call
mov
in
sbb
lods
movs
add
add
test
mov
and
mov
pop
jae
fdivr
mov
cmps
push
(bad)
out
pop
xor
jmp
ss
lahf
shl
(bad)
retf
nop
cmp
outs
test
pop
add
loopne
add
add
xchg
dec
mov
push
add
sub
mov
lds
popf
jns
add
add
mov
mov
cmp
cmps
add
mov
ins
fucomp
int
xchg
ret
mov
loopne
add
das
push
(bad)
push
clc
jg
aaa
pop
stc
les
sbb
bnd
pop
xchg
add
add
dec
ret
pop
repz
or
stos
add
pop
fdivr
loope
fisub
pop
add
add
mov
out
call
inc
out
out
mov
dec
push
lods
and
das
jne
loop
sub
push
add
add
jne
push
jg
js
and
sbb
dec
and
and
popa
jne
montmul
cmps
add
inc
dec
xchg
retf
sub
sub
mov
xchg
add
add
ins
push
rcl
xor
push
add
jmp
sub
test
(bad)
add
add
jp
mov
mov
retf
mov
repnz
fwait
fwait
or
neg
enter
mov
xchg
add
add
and
mov
jmp
daa
mov
shl
jg
jbe
loop
xchg
retf
add
stos
mov
aam
ror
xchg
retf
jecxz
pusha
mov
xor
dec
inc
test
pop
mov
pop
jmp
add
add
test
pushf
jo
mov
std
nop
in
mov
mov
mov
loope
call
inc
add
sbb
mov
test
sar
mov
cmc
stos
mov
retf
cmc
ins
fisubr
jg
xchg
sbb
(bad)
fcmovu
cmp
loop
retf
pop
and
ret
jg
inc
add
add
cmp
xchg
and
mov
inc
xchg
add
or
fcomp
mov
inc
pushf
popf
push
dec
add
inc
xlat
dec
or
or
push
outs
dec
dec
sahf
add
adc
pop
stos
jne
adc
jg
adc
add
add
mov
or
movs
mov
(bad)
fs
jg
inc
mov
fcmovu
xchg
xor
mov
sbb
push
lods
in
sub
dec
push
je
aaa
test
sti
loop
xor
add
xor
push
mov
add
(bad)
in
sub
enter
add
or
jo
add
int
cdq
push
cmp
dec
bound
mov
xor
fild
add
mov
push
push
push
gs
mov
jns
jae
or
aas
pop
sub
jbe
repz
add
xor
(bad)
into
stc
mov
movs
or
add
sub
arpl
(bad)
mov
in
xchg
adc
clc
out
pop
add
push
dec
xchg
rcr
jp
jo
icebp
mov
pusha
dec
add
dec
push
aaa
ret
adc
stos
stos
test
inc
add
add
aad
test
sti
sub
xor
mov
push
mov
inc
icebp
ins
or
add
mov
stc
push
pop
icebp
aam
add
xchg
out
inc
aaa
sti
adc
push
sub
lods
mov
add
add
sar
cdq
mov
sbb
pop
clc
jbe
mov
xor
shl
repnz
mov
xor
add
jmp
pop
test
rcl
dec
add
xor
add
inc
xor
or
mov
or
jecxz
push
(bad)
mov
add
add
xor
loopne
fwait
movs
jecxz
and
jno
aad
pop
arpl
push
mov
outs
jge
fmul
push
loopne
mov
pop
aaa
push
shr
adc
add
add
add
inc
mov
jmp
push
lock
in
cld
jp
or
add
add
ss
fidiv
jp
xor
cmp
shr
aaa
adc
rol
add
(bad)
push
call
sub
add
lea
retf
pop
ja
sub
add
add
out
pushf
jecxz
sar
and
rcr
cld
xor
dec
pop
or
iret
sbb
in
inc
add
add
xchg
jae
jae
fstp
xchg
add
add
jecxz
push
aaa
rcl
les
adc
push
push
dec
push
ds
lahf
pop
neg
sbb
dec
push
add
add
and
cmp
xchg
mov
or
int3
int3
(bad)
or
push
mov
out
mov
xchg
fld
pop
add
js
xor
imul
or
mov
in
mov
sub
stos
jmp
add
jae
sbb
or
lods
add
add
leave
or
dec
dec
sti
and
pop
mov
dec
outs
pop
sbb
xchg
ficomp
cmp
add
add
sbb
jae
dec
mov
mov
push
imul
clc
neg
loopne
jmp
add
pop
cs
inc
arpl
sbb
dec
inc
call
pushf
mov
in
into
aad
sub
push
gs
cmp
pop
not
and
adc
into
add
icebp
enter
lock
ss
clc
inc
add
inc
fsubr
or
int
jae
add
xchg
add
popf
iret
shl
fwait
(bad)
jo
add
bound
add
dec
call
pop
shl
lea
add
pusha
cmp
push
pop
int3
fiadd
add
ret
popf
cmovg
add
repz
inc
aaa
imul
add
rol
xor
movs
retf
je
jmp
pop
add
jo
imul
aad
enter
out
rcl
or
add
in
mov
retf
in
call
add
add
test
dec
scas
les
out
inc
or
sub
xchg
add
adc
(bad)
xor
fsubr
add
outs
arpl
add
cmp
mov
hlt
les
test
sbb
jno
popf
cli
sahf
mul
push
dec
add
mov
jp
add
add
add
shr
data16
repz
jl
adc
pop
adc
loopne
and
add
daa
add
push
aas
sbb
inc
xor
bound
dec
call
add
add
not
sbb
xlat
adc
fs
sub
outs
jnp
mov
in
add
add
inc
cmps
data16
push
or
push
int3
jb
(bad)
(bad)
lea
xor
add
add
test
pop
cmp
rol
stos
fmul
mov
and
push
scas
fwait
rcr
add
jb
cmps
push
stos
arpl
(bad)
dec
out
fdiv
loopne
sbb
pop
cli
scas
add
sbb
jb
pushf
add
mov
and
dec
jo
mov
mov
das
int
sbb
pop
dec
jl
add
or
out
jns
mov
ins
sub
add
fwait
and
add
jecxz
imul
out
nop
scas
outs
lds
into
ds
retf
aam
xor
add
xor
and
dec
inc
lds
hlt
mov
push
and
rol
mov
retf
push
inc
loopne
add
adc
aad
or
outs
add
dec
pop
push
dec
add
add
jmp
neg
inc
popf
pop
mov
jae
stos
xchg
xlat
test
frstor
fs
jnp
push
pop
leave
jle
or
add
add
in
adc
loopne
jns
jae
movsx
or
pop
jo
xor
bnd
mov
add
add
ret
add
adc
ds
fs
pop
and
shl
sldt
add
xchg
and
jl
cmp
daa
and
push
inc
cmps
sub
sub
add
add
xchg
dec
aad
pop
pop
adc
push
xchg
xor
inc
jle
popa
inc
enter
sub
cli
sub
add
mov
push
dec
inc
(bad)
fisub
icebp
dec
test
and
pop
fs
push
scas
mov
add
xchg
cmps
pop
nop
stc
adc
or
arpl
jg
loope
adc
add
add
inc
(bad)
cmp
stos
xor
jge
pop
add
dec
mov
pop
mov
xchg
loope
jns
add
add
pushf
push
adc
xor
outs
stos
sub
hlt
pop
scas
ins
push
enter
add
push
inc
add
fwait
ins
out
in
mov
push
mov
int3
fadd
mul
sbb
and
and
jmp
fist
pop
push
mov
pop
cmp
mov
repnz
or
shl
mov
mov
xor
cli
xchg
hlt
add
add
loopne
jno
jle
xlat
xlat
(bad)
cld
ds
lods
sahf
pusha
stos
rol
lahf
push
pop
and
mov
leave
add
add
dec
(bad)
int3
fild
cmps
pop
out
cmp
and
lods
or
adc
lahf
add
dec
pop
push
inc
add
add
add
dec
(bad)
mov
cwde
add
adc
sbb
cmp
add
add
pop
(bad)
push
out
add
pop
add
or
jge
jmp
fld
cdq
push
sahf
outs
pusha
xchg
out
fnsave
aam
add
cwde
xchg
jge
cmp
je
inc
sub
es
test
pop
gs
rcr
nop
xor
xchg
mov
jmp
mov
add
add
mov
jno
and
call
in
ret
dec
cmp
sub
add
stc
fadd
jmp
mov
cld
mov
add
mov
test
loopne
push
ss
inc
fbstp
gs
addr16
sbb
add
test
or
or
pusha
ds
ja
popf
dec
jne
push
add
cli
and
sub
fsubr
mov
fiadd
add
adc
pop
mov
retf
test
stos
xor
nop
and
xor
mov
mov
popf
test
add
ja
push
movq
jge
mov
mov
rep
jmp
fisubr
sbb
add
add
inc
pop
pop
sub
cmp
pop
pop
imul
ds
fimul
or
sbb
sbb
jmp
mov
lods
inc
cmp
push
(bad)
jmp
sbb
cs
lods
shl
mov
add
add
mov
inc
out
push
sub
mov
aam
packuswb
adc
movs
fsubr
push
pop
imul
add
cmp
mov
pusha
add
add
mov
cmp
in
mov
push
add
add
popa
gs
xchg
repz
movs
jne
mov
mov
(bad)
ja
mov
add
or
dec
pushf
or
xor
mov
(bad)
pop
sub
sbb
es
dec
adc
cwde
mov
fistp
mov
cld
adc
add
add
sbb
xchg
push
ja
jo
xchg
enter
mov
movs
(bad)
mov
xchg
stos
dec
mov
dec
and
add
add
mov
pop
and
mov
(bad)
mov
aaa
dec
mov
add
lods
dec
repnz
xchg
mov
add
xor
cli
mov
mov
add
sahf
test
jp
xor
add
xchg
int
add
adc
ja
inc
shl
add
inc
adc
imul
and
adc
add
add
fs
outs
xor
cmp
push
adc
dec
and
mov
loop
pop
sti
pop
add
add
ja
cli
push
aas
xchg
pushf
pop
xchg
cmp
mov
sbb
mov
mov
and
push
jae
add
add
push
and
jl
or
xchg
pusha
jp
jle
dec
sti
sbb
mov
sti
add
cmp
mov
out
cmc
sbb
cmps
sub
in
xor
fadd
or
add
add
push
stc
adc
sub
cdq
inc
add
jbe
inc
aam
push
inc
cmp
icebp
mov
mov
adc
fst
lock
cmc
fldcw
dec
cmc
je
icebp
add
mov
popa
push
pop
mov
ins
or
mov
addr16
dec
arpl
jo
cdq
leave
sbb
daa
dec
gs
mov
adc
push
dec
add
fnsave
cmp
or
xor
das
push
add
add
or
pop
cdq
enter
fdiv
and
push
call
test
aad
mov
xor
jg
ds
aas
jno
adc
rcr
sbb
add
sahf
fwait
shl
xor
sub
movs
pop
add
add
mov
sub
sbb
les
fisubr
push
add
call
iret
(bad)
icebp
mov
add
add
stos
ret
xor
cld
adc
sbb
cwde
clc
mov
popa
leave
add
std
jns
add
fldcw
jge
rcr
push
in
mov
add
add
fwait
pcmpgtd
aaa
movs
pop
ret
sub
and
mov
push
jb
mov
add
mov
pushf
sbb
sbb
dec
cld
inc
in
popf
shl
mov
scas
test
pop
add
add
mul
cmp
sub
mov
scas
ja
jp
xchg
xor
movs
lods
popa
mov
adc
add
addr16
jmp
push
jg
out
xchg
jp
das
adc
cli
or
out
add
adc
inc
or
lods
add
add
xchg
mov
sbb
mov
and
repz
adc
push
jo
adc
mov
inc
pop
xchg
rcl
lds
js
add
stos
push
stos
jmp
arpl
fmul
xlat
lock
add
add
push
fs
push
inc
mov
jp
or
xchg
mov
adc
inc
(bad)
in
push
add
loopne
push
xchg
sub
pop
shr
fiadd
add
add
sbb
add
pusha
cmp
jb
in
pusha
jb
and
push
pop
inc
jge
add
int
sub
xchg
fadd
xor
mov
add
mov
sub
sbb
or
mov
cmp
mov
sbb
dec
shl
cmp
sub
add
out
sub
enter
inc
rol
add
push
inc
and
pushf
cmp
es
cmp
nop
test
pop
xchg
inc
(bad)
imul
int
popf
ins
add
add
shr
mov
inc
pop
inc
sti
inc
push
mov
out
ins
mov
lock
jo
add
and
shr
fmul
fs
dec
push
add
cwde
or
pop
xchg
imul
mov
or
push
add
add
push
arpl
push
bound
lds
inc
adc
xchg
xchg
add
test
dec
in
sbb
add
popf
xor
inc
icebp
push
call
icebp
sub
mov
xor
add
add
mov
loopne
imul
adc
nop
in
add
add
mov
pop
imul
test
lock
adc
dec
std
add
sbb
add
add
shl
aam
cmp
imul
dec
and
add
stos
jae
xor
imul
add
inc
sbb
int
mov
ret
repnz
idiv
mov
ins
inc
add
test
add
add
xchg
fwait
mov
sar
xlat
(bad)
push
in
lods
adc
pop
pop
mov
and
ror
add
je
adc
jmp
add
addr16
lods
test
aaa
in
aam
xchg
push
add
dec
or
ret
xor
lahf
mov
add
add
call
into
xor
into
sar
adc
in
mov
movs
jge
int3
sbb
imul
xchg
fs
jge
jge
cmp
(bad)
sbb
dec
add
arpl
pop
inc
pop
push
push
inc
jbe
(bad)
and
add
jne
out
or
adc
xor
mov
out
add
add
add
lahf
fbstp
sub
addr16
cmp
dec
inc
ins
sbb
retf
sbb
push
add
xchg
clc
into
not
mov
stos
rol
add
add
jo
pop
jl
aaa
daa
push
xor
cmc
cld
dec
xor
rcl
cmp
in
sub
pop
pusha
add
add
iret
fcmovbe
sahf
por
push
and
cmps
imul
jnp
sahf
shl
ficomp
xor
add
bound
mov
xor
dec
cld
cmps
cdq
pop
cwde
mov
add
ror
pop
test
je
fnstsw
jl
push
es
int
mov
fucomip
lods
imul
mov
ins
int3
loopne
aas
je
das
fimul
add
leave
xor
sub
or
mov
mov
add
add
dec
inc
xchg
push
adc
lock
aam
mov
inc
int3
xchg
jae
sbb
idiv
add
add
cmp
fadd
and
pushf
adc
or
hlt
or
push
push
add
add
out
xor
movs
adc
in
cdq
cdq
movs
mov
and
push
mov
dec
sub
push
fwait
scas
mov
cmp
sub
xor
xor
retf
add
add
jo
push
arpl
xchg
xor
mov
jmp
movs
pop
add
clc
jnp
das
mov
loop
movs
lahf
add
mov
sub
repnz
stc
xchg
cmp
push
add
adc
fcmovne
ss
sbb
loopne
add
fmul
mov
mov
push
inc
dec
stc
jge
cmp
add
add
scas
mov
call
mov
jmp
popa
sub
xchg
mov
pop
xchg
adc
add
or
jg
cmp
mov
sub
jp
and
lods
add
inc
(bad)
mov
pop
push
add
add
push
sub
adc
mov
mov
cli
mov
(bad)
xchg
movs
jp
in
add
push
xchg
cmp
int
and
or
dec
inc
xchg
inc
add
add
cmps
cmp
mov
cli
jo
push
add
int3
mov
add
out
addr16
or
add
add
or
sub
out
fsub
ror
push
inc
jecxz
adc
rcl
jo
out
mov
push
icebp
jnp
add
add
pusha
cmp
pop
scas
addr16
aam
jl
test
mov
add
add
addr16
arpl
adc
fdiv
sub
jmp
inc
je
aad
lea
repnz
add
push
jmp
mov
cmp
mov
add
aad
xchg
loop
push
popf
imul
popa
cmps
retf
pop
jae
add
bound
mov
mov
jge
lahf
dec
push
push
ret
pop
add
add
sbb
mov
inc
fst
movs
ins
shl
out
fwait
loope
mov
push
jmp
jmp
ror
sbb
add
and
mov
jecxz
and
ins
repz
mov
add
in
jl
jno
jg
leave
ss
test
dec
imul
xor
cli
stos
(bad)
aad
shl
add
popf
push
sub
sbb
sahf
dec
add
add
push
repz
mov
stos
sub
xor
in
pop
stos
shl
sbb
cmps
rol
xchg
(bad)
aaa
sbb
push
fldcw
add
xchg
add
add
aas
pop
push
nop
sub
and
adc
sub
push
bound
add
out
imul
jmp
scas
mov
cdq
add
push
add
push
pop
jg
add
les
jae
aam
mov
out
fild
outs
add
add
pop
movs
sbb
mov
addr16
loope
pop
cmps
and
or
cdq
push
fadd
add
inc
push
sub
inc
lea
mov
out
sbb
outs
and
pop
gs
in
bound
leave
adc
shl
add
add
call
xchg
mov
aad
or
cs
imul
call
mov
mov
leave
jne
pop
pop
jne
imul
add
mov
mov
outs
sub
ds
ins
sbb
add
aam
sub
cmc
adc
jno
mov
gs
jge
inc
sbb
shl
sahf
cmp
mov
add
xor
jg
pop
cld
stos
bound
clc
sbb
out
daa
inc
add
add
in
xor
adc
icebp
fsub
adc
or
lods
adc
mov
dec
inc
mov
mov
jb
sbb
lock
lods
xchg
int3
jl
outs
xchg
add
add
hlt
inc
mov
ins
sub
push
push
in
xor
jmp
fiadd
jle
inc
je
lods
pusha
addr16
add
sub
cmp
sbb
aad
mov
and
or
adc
(bad)
adc
cdq
imul
add
add
stos
std
test
loope
(bad)
sti
xor
out
inc
iret
div
out
push
jns
fistp
(bad)
dec
push
push
add
add
push
or
icebp
gs
enter
inc
mov
lds
add
nop
jmp
cmp
xchg
and
mov
imul
sbb
add
add
rcr
mov
push
xchg
pop
xchg
jae
leave
(bad)
outs
or
sub
loopne
add
test
push
stc
popa
sub
sub
std
sub
mov
jge
imul
jno
(bad)
push
bound
add
add
addr16
shl
out
cmp
in
clc
adc
ficom
das
xor
jb
dec
icebp
pushf
shl
add
inc
push
push
cmps
daa
in
mov
int3
pop
sub
push
adc
cs
ins
loope
add
adc
add
retf
pop
cmp
jp
daa
or
mov
mov
lods
mov
sbb
and
pusha
in
outs
dec
loope
inc
sub
shr
std
mov
add
add
in
sahf
aas
mov
and
out
ins
inc
xor
pop
xchg
cmp
inc
in
add
pop
jl
mov
add
inc
mov
out
(bad)
shl
cli
add
add
bsr
fwait
sub
adc
lea
dec
popf
jle
outs
mov
(bad)
jmp
push
add
inc
add
add
mov
pop
cs
pop
popf
mov
mov
inc
mov
mov
test
jl
sub
or
jno
add
add
je
pop
imul
mov
mov
inc
sti
jne
inc
mov
lods
lods
push
push
cmp
scas
imul
les
jmp
xchg
dec
rol
js
mov
lea
xor
test
add
movs
jmp
movhps
push
dec
fild
push
cli
mov
add
add
sub
test
test
sub
and
mov
add
mov
push
push
pusha
add
adc
retf
jg
aad
ret
jp
frstor
jp
jne
adc
and
not
push
mov
or
add
ds
rol
push
call
sbb
push
leave
retf
mov
push
aad
xor
dec
and
add
jmp
mov
ins
or
and
or
add
add
test
fistp
mov
int
sar
(bad)
out
xchg
mov
add
jb
jns
xchg
xchg
aam
inc
ret
add
add
jmp
xor
xor
dec
xchg
ins
and
cmp
add
ror
and
loop
mov
cmp
pop
call
neg
scas
pop
xchg
sbb
test
jp
pop
icebp
add
sbb
inc
sar
in
xlat
mov
outs
popa
add
mov
ret
jmp
shr
sub
or
jp
jbe
add
push
popf
pop
aaa
dec
dec
out
inc
inc
push
push
das
xor
pop
or
rcl
loop
mov
popf
loopne
or
add
sbb
es
cmp
sub
inc
and
fiadd
or
cld
not
add
xor
out
mov
inc
xchg
out
xor
sub
or
add
add
push
(bad)
shr
add
sub
mov
add
add
mov
mov
and
adc
adc
adc
xchg
out
pop
(bad)
jmp
pop
cld
add
pushf
or
es
and
jge
lods
jbe
sub
(bad)
jmp
add
add
ret
inc
dec
jne
ret
xor
xor
add
push
sahf
lods
xchg
daa
xchg
xor
repnz
call
jl
jbe
push
dec
add
sub
lds
mov
mov
add
add
jle
mov
pop
jp
dec
and
or
fsubr
in
dec
dec
mov
add
add
movs
in
nop
sbb
push
xchg
jl
mov
adc
and
mov
sti
inc
out
and
add
mov
aaa
fwait
mov
and
mov
add
mov
dec
mov
add
sbb
lock
fimul
or
add
jg
repnz
xchg
ficomp
adc
clc
je
(bad)
or
add
add
repnz
cmp
pop
rcl
stc
or
mov
out
imul
inc
retf
xchg
add
into
mov
pop
or
adc
loop
add
lods
xchg
and
push
push
in
ja
mov
add
das
dec
call
stc
mov
enter
add
xlat
mov
mov
and
sub
pop
mov
add
mov
out
in
mov
push
cmp
dec
leave
xchg
jp
inc
jb
mov
mov
push
add
push
inc
xchg
scas
fild
jnp
xchg
sbb
mov
out
add
add
and
cs
aam
push
aad
cli
cwde
imul
xchg
lea
movs
sbb
enter
add
add
jns
pop
stc
mov
(bad)
cmp
lods
retf
popa
push
mov
sets
outs
imul
pop
jmp
in
jge
mov
(bad)
pop
push
xchg
pop
dec
call
cld
push
add
daa
jge
call
mov
fdivr
test
add
mov
adc
add
add
lea
mov
adc
(bad)
cwde
not
pop
into
mov
sbb
mov
stos
cs
retf
mov
sbb
(bad)
std
mov
push
mov
mov
and
scas
into
sbb
mov
sub
add
add
jb
test
fiadd
repnz
popa
cmp
mov
ja
pop
push
add
add
adc
adc
in
int
aaa
jecxz
jmp
es
jge
cli
cmp
add
ficomp
mov
xor
mov
(bad)
xchg
ret
push
xor
pusha
call
(bad)
rcr
xor
shr
loope
loope
sbb
mov
jae
shl
aad
push
sbb
aam
xor
(bad)
add
dec
pop
cld
sbb
cmp
scas
stos
inc
cvtps2pd
add
add
pop
outs
ret
mov
mov
dec
cld
cmp
mov
jp
xlat
out
sub
push
hlt
add
add
jae
jmp
pop
js
adc
mov
fwait
jo
fistp
outs
fstp
add
lods
int3
push
jle
pop
sub
shl
les
add
adc
mov
in
rcl
loope
jmp
mov
push
in
sbb
xchg
aad
add
add
pop
or
lods
sub
xor
pop
xlat
out
scas
mov
xor
pop
add
add
out
out
mov
jne
adc
and
dec
ja
add
mov
fwait
or
and
cmp
sbb
and
addr16
imul
dec
daa
xor
mov
mov
leave
addr16
add
add
test
mov
movs
jmp
cmp
and
jecxz
sub
add
add
imul
push
outs
aas
cmp
(bad)
aad
cmp
push
pop
mov
movs
adc
test
sub
(bad)
cmps
mov
iret
pop
jp
ret
pop
daa
sbb
pop
inc
leave
add
add
xor
mov
add
xchg
pop
jmp
jg
pop
fisttp
pop
shl
ror
adc
sub
or
jnp
and
add
add
(bad)
shl
xchg
test
and
dec
(bad)
in
dec
and
jo
mov
push
jp
push
xchg
fadd
add
add
sahf
fs
mov
push
lods
loope
adc
or
push
mov
jle
add
add
jo
push
jns
rcl
nop
jp
test
icebp
pop
cwde
ret
outs
repnz
xor
xor
(bad)
mov
movs
aas
mov
lds
add
jne
sub
mov
add
add
call
stc
clc
mov
pop
jae
jecxz
dec
xor
stos
sbb
mov
add
inc
xchg
cli
push
mov
add
add
lods
fwait
cmp
shl
arpl
dec
xor
stos
call
add
hlt
adc
jmp
mov
xlat
mov
loop
adc
dec
add
add
sub
lds
mov
(bad)
fsub
scas
cmps
(bad)
fsub
test
or
add
lods
out
jae
dec
inc
call
sti
outs
and
inc
aaa
bndldx
lds
rcr
pop
add
add
xchg
adc
in
dec
shr
xchg
mov
add
add
imul
xchg
mov
mov
nop
sbb
push
ret
cs
add
add
inc
loopne
cli
lahf
xlat
push
inc
test
outs
outs
(bad)
cmp
sbb
jo
jns
mov
add
test
enter
mov
add
inc
lea
push
and
rcl
xchg
xchg
fld
mov
jg
test
js
fwait
inc
mov
inc
add
lock
add
pusha
mov
add
mov
iret
dec
dec
mul
add
adc
(bad)
pop
rcr
dec
dec
not
inc
add
xor
mov
and
dec
or
add
add
bound
data16
retf
mov
add
je
les
rcr
push
(bad)
jo
mov
retf
push
out
lock
add
je
mov
xchg
shl
xchg
jb
add
add
sub
jo
push
dec
repz
(bad)
pop
sti
test
cmp
add
mov
lods
inc
scas
xor
sahf
movs
in
inc
xor
int3
popa
mov
add
retf
iret
call
xchg
pushf
and
mov
add
jno
repnz
fbstp
(bad)
or
add
dec
add
mov
rol
sti
add
add
loop
cmp
out
aas
out
sub
push
dec
scas
data16
int3
pop
movs
mov
popa
shr
loopne
add
enter
ret
sub
sub
xor
add
fadd
rcr
out
xor
inc
out
xchg
rcr
mov
jmp
add
xchg
inc
int3
mov
mov
mov
stos
add
add
jae
mov
push
das
scas
xchg
jmp
cmps
ret
and
add
xchg
loopne
sbb
addr16
sbb
pop
lods
xor
jne
(bad)
int
cmovo
add
inc
pop
shl
or
out
aad
add
popf
in
enter
mov
dec
shl
cmp
add
add
cli
xchg
outs
fisttp
ins
jo
popa
in
pop
cld
dec
add
pop
pop
cwde
ss
cmp
add
les
std
icebp
aas
push
cmp
fldenv
test
sbb
push
popa
xor
add
clc
outs
std
fidivr
inc
inc
bound
movs
adc
jmp
xchg
fld
movs
out
frstor
out
stos
aas
jmp
fild
sub
fstp
cmp
clc
loope
mov
jge
mov
fiadd
or
movs
add
jbe
jb
pop
test
xor
clc
inc
add
jmp
inc
mov
jl
lods
(bad)
sbb
add
mov
mov
push
outs
call
adc
call
sub
push
outs
(bad)
movs
and
mov
enter
rol
cwde
mov
test
push
mov
mov
sub
jg
mov
ss
call
addr16
jmp
mov
lock
mov
cmps
or
xor
fcomp
(bad)
(bad)
imul
add
das
shl
push
pop
ja
dec
mov
jae
xor
lods
add
add
in
inc
cmp
jno
add
add
and
and
movs
clc
or
and
mov
mov
jmp
shl
sbb
scas
sub
sbb
jns
sub
push
test
cmp
test
mov
sub
adc
add
mov
or
push
test
popa
clc
dec
movs
(bad)
jge
dec
push
add
jmp
and
sub
xlat
jb
add
shl
cld
enter
ss
jmp
(bad)
mov
mov
das
mov
inc
or
adc
xor
sub
add
movs
pop
lods
and
push
js
sub
sub
dec
mov
call
adc
test
movs
jb
add
add
mov
or
inc
sbb
mov
inc
in
xchg
call
std
js
mov
sbb
mov
out
cwde
out
fwait
pop
ss
leave
xchg
inc
stc
sub
add
mov
loope
sub
pusha
lds
add
add
outs
imul
xchg
and
in
retf
inc
ins
in
test
add
jns
xor
add
cmps
add
call
adc
sahf
dec
jg
lods
fs
push
mov
sbb
or
dec
aad
jae
cmp
mov
dec
add
and
sbb
xchg
dec
xor
and
jmp
cmc
add
or
pop
and
dec
test
jecxz
xchg
xor
sbb
es
icebp
pop
push
out
jle
repz
div
test
add
add
mov
xchg
inc
fsubr
mov
xor
and
lods
push
stos
xor
push
add
add
fwait
int3
mov
push
or
movs
mov
mov
and
int3
imul
scas
adc
xlat
push
clc
and
lds
inc
cld
(bad)
aam
add
in
push
dec
jmp
add
add
stos
icebp
rcr
shr
nop
hlt
and
sub
mov
ins
ret
test
ds
out
test
es
inc
hlt
xchg
les
(bad)
repnz
lds
cmp
mov
add
out
or
imul
sub
xor
add
add
(bad)
repnz
cwde
jmp
mov
pop
cmp
adc
lods
aam
sbb
add
jbe
fsub
or
dec
pop
(bad)
cmp
loope
js
shr
repz
aam
mov
ds
ja
sub
add
jmp
iret
inc
pop
aas
std
jp
outs
dec
push
mov
add
add
repnz
jge
loop
push
shl
cmps
push
ss
xchg
lahf
add
add
sub
add
icebp
adc
add
add
rol
aad
or
ret
mov
dec
jle
or
fst
aad
adc
xor
add
dec
push
add
ds
out
fisttp
add
cdq
(bad)
xchg
stc
xchg
arpl
es
mov
clc
cmovne
rcl
or
in
in
push
xchg
leave
and
es
cmp
add
add
add
jle
out
xchg
ins
add
clc
dec
das
pop
adc
aad
push
pop
pop
lods
clc
add
aas
aas
jecxz
frstor
mov
add
push
mov
sbb
add
add
inc
jno
push
ffreep
dec
pop
aaa
push
sub
mov
mov
xor
add
push
add
test
pop
mov
push
or
push
(bad)
nop
push
add
and
inc
aaa
cli
push
test
cld
pop
cwde
stos
mov
stc
xor
push
xor
int
scas
arpl
fadd
sub
mov
add
dec
sahf
xchg
lahf
int
pop
scas
inc
fsub
pop
pusha
imul
xchg
pop
les
iret
lock
loopne
mov
add
add
push
mul
cmp
cmps
mov
pop
jge
iret
sahf
xlat
push
scas
push
call
add
cmp
(bad)
cmp
pop
in
test
push
and
(bad)
retf
mov
ror
les
xor
pop
mov
mov
jo
jmp
nop
ret
jp
daa
enter
pop
mov
mov
inc
hlt
addr16
pop
pop
inc
xor
test
inc
adc
inc
add
add
into
loopne
outs
not
xor
test
mov
add
jbe
outs
mov
mov
push
sar
add
arpl
sub
sub
movs
push
(bad)
data16
lds
(bad)
and
jnp
add
(bad)
popa
shl
add
pop
(bad)
xchg
sub
sub
xlat
sub
dec
inc
push
inc
pop
add
jmp
and
dec
cmp
mov
cmp
fmul
test
les
lock
cdq
or
add
add
dec
hlt
(bad)
out
xchg
inc
ss
and
sti
rol
add
push
add
lds
nop
test
lahf
jo
rol
dec
repz
mov
mov
and
add
sub
cmc
cs
scas
setns
les
aam
pop
rol
adc
jp
sub
std
rcl
push
jmp
cmp
push
mov
bound
lahf
jg
xlat
jns
mov
xchg
idiv
stc
rol
sti
and
add
fwait
push
data16
sub
mov
add
movs
cmp
mov
or
in
int3
dec
loope
lock
bound
bound
add
cwde
mov
cmps
mov
and
out
and
lds
rcl
in
test
cwde
add
add
adc
dec
mov
cmp
xor
and
outs
and
sar
add
push
add
test
mov
push
cmp
mov
scas
pop
add
add
sbb
sub
nop
xor
or
push
xor
xor
mov
xchg
out
sbb
data16
in
fmulp
sbb
pop
adc
loope
and
int3
leave
dec
fs
in
mov
mov
fs
outs
lods
(bad)
loop
xchg
mov
jae
outs
jo
fisttp
add
add
cdq
jbe
pop
sub
fnstcw
inc
outs
jg
sbb
jbe
push
cli
stc
xchg
int3
and
and
xor
add
add
pop
sub
ret
dec
mov
retf
(bad)
pushf
daa
mov
push
add
popf
adc
jecxz
add
add
ror
or
pushf
int
xor
sbb
push
sub
xlat
test
lds
ret
mov
add
add
out
popf
mov
fistp
or
int
push
sub
adc
hlt
add
pop
or
lods
add
sbb
sbb
inc
jns
dec
pop
call
repnz
add
add
cmps
aaa
xlat
lea
imul
mov
jbe
add
pop
sub
xchg
test
xor
add
int3
mov
test
mov
mov
repnz
push
jb
je
lods
sub
add
add
sbb
cmp
dec
lods
cli
inc
retf
dec
jns
jnp
movs
sub
push
call
mov
inc
into
xchg
loope
sbb
test
out
jbe
es
(bad)
addr16
add
add
xchg
inc
mov
sbb
sbb
add
mov
js
push
add
add
(bad)
in
(bad)
mov
push
es
jle
out
loope
add
add
(bad)
fwait
cdq
inc
cmps
mov
stos
or
fistp
inc
cmp
add
sahf
sub
xor
movs
js
mov
out
popa
add
sbb
xor
push
mov
mov
jecxz
test
add
add
mov
sub
jnp
test
xchg
mov
add
add
(bad)
das
loope
call
sti
cs
int3
retf
fld
push
push
add
xchg
rol
add
add
test
out
sub
(bad)
dec
addr16
jle
jns
and
sbb
add
add
push
stos
xor
lods
pop
rcl
ds
lds
lock
ret
add
add
int3
mov
push
inc
cmp
mov
outs
push
loopne
mov
cmc
stc
retf
add
add
add
xchg
pushf
mov
push
mov
ins
sub
fimul
mov
daa
sahf
into
rol
mov
xchg
out
jae
cmp
into
jb
cmps
sbb
sub
add
ins
mov
icebp
enter
in
enter
add
add
cmp
sbb
or
cwde
dec
ficom
cmps
mov
sbb
aas
push
push
(bad)
shl
popf
add
add
fldenv
dec
xor
aaa
pushf
xor
push
dec
scas
fist
aaa
(bad)
in
retf
mov
xlat
inc
cmp
add
add
and
rcr
adc
mov
cmp
xchg
mov
ja
ja
arpl
inc
stos
jns
push
syscall
xor
stc
sar
pusha
add
dec
dec
loop
push
add
(bad)
sub
or
or
jecxz
cmps
cmp
xchg
jle
stc
xor
push
inc
jmp
add
add
adc
je
fsubr
aam
rol
mov
mov
sub
and
add
add
(bad)
dec
mov
popa
and
add
add
pusha
fisubr
cmp
repnz
movs
mov
dec
mov
add
cmp
sub
push
xchg
push
jecxz
add
add
bound
push
popa
adc
inc
jg
jle
movs
xchg
jae
jg
mov
hlt
bound
mov
lock
push
sbb
adc
add
clc
mov
outs
movs
lods
cs
jge
popa
pop
mov
popa
or
and
popf
fbld
sbb
mov
and
add
dec
pop
cmp
scas
ret
sub
into
sub
add
test
inc
pop
cmps
push
mov
sub
popa
and
add
add
xchg
inc
lock
mov
dec
cmps
shr
fst
sti
repnz
add
add
inc
cmps
sbb
jb
popa
mov
sbb
xor
xor
cmp
pop
ds
cmps
in
cwde
xor
dec
inc
sbb
cmp
mov
mov
add
adc
(bad)
jns
push
(bad)
popf
(bad)
je
iret
and
in
daa
lea
sar
test
sar
dec
outs
xchg
mov
mov
in
add
push
in
rol
ins
add
sahf
add
pusha
add
and
jae
xchg
sti
add
(bad)
or
ds
mov
daa
mov
sbb
nop
push
add
xor
sahf
lea
loope
ins
xor
add
inc
cmp
ins
and
pop
cmps
adc
pop
mov
inc
jbe
push
test
call
fs
add
aaa
scas
not
aaa
adc
add
pop
pop
retf
inc
xor
add
add
mov
arpl
add
cmps
xchg
aaa
std
mov
xchg
jae
xchg
xor
imul
push
add
sahf
and
ret
imul
stos
sub
sub
add
add
(bad)
xadd
mov
popa
sbb
sbb
mov
cmp
add
xchg
mov
jmp
mov
repnz
test
mov
or
stos
stos
pop
imul
add
pop
loope
stos
mov
mov
pop
pop
inc
je
mov
inc
loop
xchg
test
cmps
and
add
inc
call
les
push
gs
add
add
push
push
jno
inc
outs
cld
test
shl
loope
dec
mov
fwait
cs
retf
or
push
cmp
andps
xor
add
jp
jg
aas
je
ret
in
add
out
cwde
or
add
(bad)
sahf
or
cmps
pop
sbb
sub
pop
fwait
ret
jae
daa
xchg
or
push
add
(bad)
jb
mov
shl
cmps
adc
mov
jmp
add
add
mov
pusha
pusha
inc
shl
xchg
out
(bad)
mov
leave
popf
add
cmp
scas
adc
or
fild
add
aad
arpl
add
add
adc
cwde
in
mov
scas
fwait
xchg
xor
mov
scas
test
jmp
push
iret
pop
add
add
cmp
dec
sbb
fldcw
add
push
push
mov
into
add
inc
mov
js
pop
add
jmp
cdq
aaa
loopne
repz
mov
nop
out
fild
rcl
add
or
popf
dec
pop
fmul
adc
pop
jmp
add
add
lods
mov
mov
hlt
add
int
test
das
leave
lods
add
popa
enter
add
mov
int3
imul
push
paddsw
arpl
mov
mov
jmp
pop
ret
add
jae
sbb
fidiv
xor
add
adc
js
inc
mov
xlat
and
push
(bad)
(bad)
icebp
shl
adc
mov
imul
lea
add
enter
fdivr
sbb
loop
inc
arpl
mov
xor
mov
in
(bad)
mov
mov
imul
vxorps
sub
out
dec
jmp
fiadd
cmp
in
dec
xchg
into
sahf
ss
or
add
and
cmps
shr
ret
imul
xchg
scas
int
add
sbb
int3
push
scas
jmp
mov
adc
push
adc
hlt
rcl
dec
les
jp
add
add
div
jo
push
(bad)
lock
jmp
daa
sub
lock
push
add
xchg
xchg
push
sub
pop
mov
and
and
aad
pop
sbb
retf
add
add
aam
mov
xchg
cdq
iret
or
inc
jmp
ja
retf
aam
jecxz
lods
cmp
and
add
int3
inc
adc
push
jae
retf
add
add
and
mov
sbb
fcom
add
scas
stos
push
rcl
and
das
xlat
ret
add
add
stos
mov
mov
rcl
or
add
jno
jle
and
icebp
mov
aad
mul
loop
mov
shl
rsm
dec
fidivr
call
push
add
hlt
or
in
ret
aaa
xchg
cs
jno
add
add
ins
(bad)
es
cmps
mov
int3
test
pop
dec
mov
out
push
adc
jbe
add
sar
int3
add
aas
mov
pop
jge
pop
mov
fs
outs
adc
push
js
xor
jge
sbb
test
mov
adc
add
aam
sub
sbb
cli
adc
fnstcw
jecxz
xchg
mov
ficom
add
xchg
and
add
mov
or
rol
das
jmp
dec
sbb
in
push
mov
(bad)
mov
jg
aam
mov
cmp
pop
jg
and
inc
cmps
lods
pop
stc
jecxz
fsubr
mov
inc
add
sahf
adc
cmp
adc
test
stos
cdq
add
sbb
add
icebp
mov
cwde
cld
dec
nop
jnp
rol
sar
xchg
dec
call
lea
add
gs
sub
ds
adc
lock
push
mov
jnp
xchg
mov
mov
pop
ror
cmc
mov
cmps
aaa
sbb
gs
inc
aaa
pop
add
add
jecxz
ret
inc
dec
int3
xchg
mov
dec
and
add
jecxz
int
les
add
add
cmp
push
cmp
push
(bad)
addr16
xchg
and
adc
enter
adc
add
inc
ficom
hlt
in
sahf
fcomp
or
push
add
shl
mov
dec
pop
cmp
jne
sub
cdq
add
rcr
stos
lock
mov
inc
outs
test
ror
push
ret
call
cwde
adc
xchg
xor
add
outs
xor
cmp
ror
add
gs
cmp
ret
mov
cmp
mov
mov
jne
add
movs
fucomp
xor
jmp
cwde
xchg
and
jge
add
cli
cmp
enter
arpl
or
ror
jp
lods
cmps
(bad)
xchg
add
and
int3
imul
adc
pop
and
mov
add
retf
std
jne
pop
inc
and
jge
add
add
outs
and
xchg
cmp
mov
mov
imul
push
add
or
sti
sub
out
jle
test
mov
fisubr
clc
std
mov
pop
pop
jmp
add
int
cmp
pushf
cwde
test
mov
into
imul
jmp
xchg
xor
(bad)
iret
add
fstp
aaa
aaa
add
add
jne
sub
xchg
call
(bad)
push
mov
(bad)
out
mov
push
jp
not
cmp
add
add
pop
int
mov
scas
and
retf
shl
dec
cdq
test
ja
push
cmc
stos
sbb
mov
adc
add
test
aaa
ss
sahf
jecxz
aam
cwde
ss
movs
fld
sub
test
xor
ins
and
add
add
loop
dec
mov
dec
(bad)
cmp
mov
jge
mov
daa
jns
pop
mov
jne
add
add
add
mov
dec
addr16
mov
jne
add
jnp
pop
inc
pop
int3
push
mov
xlat
repnz
in
or
pop
mov
push
add
jmp
inc
test
add
inc
mov
jmp
mov
mov
mov
mov
sbb
cmp
out
popa
ins
les
inc
mov
add
inc
push
add
lods
inc
sahf
call
mov
dec
add
loopne
pop
(bad)
out
xor
xchg
jp
rol
pop
add
mov
sub
mov
mov
jmp
lahf
cmp
add
add
or
shl
sub
push
movs
add
xchg
mov
dec
add
test
mov
lods
in
inc
add
aas
xor
pop
shr
test
inc
inc
add
sub
es
inc
out
push
sbb
add
sub
mov
cmc
adc
lods
(bad)
fisubr
retf
add
mov
fadd
add
add
jno
retf
dec
iret
pop
add
add
cmp
xchg
lea
jno
mov
(bad)
fdivr
fadd
and
fiadd
int3
xlat
add
add
push
pusha
push
add
div
push
lock
shl
cmp
xor
mov
fwait
test
popf
jp
adc
in
loopne
scas
loopne
dec
aad
push
or
imul
add
add
aas
mov
shl
ret
nop
sub
mov
aaa
into
add
jp
mov
cwde
outs
add
mov
mov
dec
inc
pop
stc
or
jl
aam
rcl
and
push
sub
push
sub
adc
xor
inc
add
push
ror
pusha
push
cwde
xchg
adc
xchg
adc
add
mov
jg
lods
inc
test
pop
rcl
add
lods
jl
mov
pop
mov
fild
fwait
mov
jb
les
add
daa
inc
ins
dec
add
lock
jo
test
cs
or
sti
into
stos
push
sbb
inc
(bad)
out
(bad)
jl
add
arpl
jo
jbe
pop
daa
add
data16
outs
pop
pop
inc
add
add
call
or
data16
xchg
push
ja
les
jmp
adc
arpl
push
hlt
and
add
cld
in
icebp
jle
fs
das
adc
add
add
jge
stos
arpl
pop
jl
cwde
sbb
leave
push
icebp
add
xor
sub
push
rol
mov
add
ss
sar
cmp
(bad)
jb
cmp
and
daa
add
adc
push
ins
fwait
mov
lock
add
or
dec
pop
scas
frstor
jo
or
dec
cmp
fadd
ret
sub
cmc
add
pop
jno
add
jnp
jmp
mov
call
or
mov
sub
or
aam
add
add
jns
loop
imul
gs
addr16
xchg
xchg
add
das
push
dec
bound
out
push
(bad)
into
inc
add
add
test
mov
cmp
(bad)
jo
xchg
mov
ret
inc
dec
sbb
jge
pop
test
add
out
(bad)
je
pop
pop
add
outs
mov
mov
add
add
test
inc
or
push
aad
inc
pop
jge
stos
mov
aad
stos
add
mov
jno
adc
ins
dec
mov
adc
mov
add
add
sub
jle
daa
mov
iret
push
mov
lea
sub
pusha
retf
sbb
add
xor
inc
repz
sub
(bad)
loop
add
add
in
popf
dec
outs
push
xor
in
and
aad
call
jb
lock
cmp
adc
push
push
je
(bad)
call
add
or
pop
dec
push
aaa
xor
loop
xchg
add
sar
adc
enter
mov
bound
mov
or
bound
jbe
data16
(bad)
cld
and
mov
into
dec
cs
sub
lock
xchg
and
add
cmp
arpl
aam
adc
adc
sahf
push
xchg
sbb
and
mov
jp
into
ror
jl
ins
pop
cmps
mov
sbb
iret
jne
add
add
fistp
adc
retf
dec
in
in
push
mov
mov
push
pop
jge
mov
in
and
loopne
add
(bad)
cmp
cld
mov
push
jb
inc
mov
in
test
rcl
ds
inc
shl
cmc
vmread
push
inc
dec
pop
test
in
add
add
popf
stc
pop
ds
jge
mov
cmp
les
mov
jmp
dec
js
sbb
sbb
add
add
add
cdq
aam
mov
ins
movs
mov
xor
push
lock
daa
retf
into
cmp
pusha
movs
add
add
adc
lahf
jle
sar
dec
jmp
mov
adc
or
mov
add
pusha
add
add
icebp
test
dec
test
lock
add
mov
jl
not
or
push
mov
sbb
add
repz
iret
retf
mov
jl
inc
push
in
cmc
add
add
retf
lock
mov
js
aaa
int
xor
pop
adc
or
call
or
pop
(bad)
shr
call
movs
retf
add
xchg
out
pop
xor
neg
push
mov
adc
std
int
inc
loopne
lahf
(bad)
add
add
add
test
test
cmps
movs
outs
sub
imul
daa
jbe
add
add
(bad)
cmps
sbb
adc
fist
add
add
loope
sbb
fbstp
(bad)
shl
dec
dec
dec
adc
dec
mov
aaa
add
js
cdq
dec
mov
push
xor
je
mov
add
add
jo
push
add
imul
xchg
popa
cmp
movs
sbb
jmp
push
xchg
push
mov
add
rcl
add
jmp
stos
push
rcl
and
cmp
dec
mov
popa
fld
ficom
add
test
mov
or
add
add
or
ret
shl
mov
dec
loope
dec
xor
xchg
push
popa
inc
mov
cmp
add
add
ins
push
inc
in
(bad)
jmp
lahf
push
jmp
test
inc
int
call
gs
cwde
mov
push
outs
cs
lea
outs
cmp
mov
mov
jg
imul
add
add
cmp
pop
out
fwait
jae
jp
nop
loope
out
outs
rcr
add
add
mov
sub
mov
sbb
inc
mov
push
mov
add
add
iret
push
sbb
loope
cli
fcmove
xchg
dec
clc
xor
push
stos
inc
cwde
rcl
clc
xchg
push
and
cmp
lahf
jnp
jns
add
fucom
dec
mov
add
push
cmp
popa
pop
jle
stos
xor
add
add
(bad)
jg
xchg
test
or
ret
sub
stos
push
lahf
jmp
int3
inc
mov
push
adc
add
add
jns
ss
pop
loope
stos
add
sbb
adc
add
adc
adc
adc
dec
cli
add
add
adc
les
ret
retf
hlt
outs
push
outs
dec
adc
mov
add
hlt
clc
cmps
pushf
push
inc
push
push
arpl
lods
add
clc
scas
stc
ror
push
jb
add
lock
shl
in
lahf
(bad)
dec
pop
mov
sub
add
cs
jle
xor
mov
mov
out
xchg
jl
adc
adc
hlt
lahf
enter
sbb
fldcw
aas
mov
cs
retf
push
xor
cmp
inc
sub
mov
mov
add
js
sti
mov
adc
push
leave
outs
jae
call
loope
add
add
add
mov
jae
inc
sar
push
mov
xchg
and
pop
lea
ja
xlat
adc
popa
int3
cmc
push
ins
ror
add
sub
or
xchg
movs
jge
lods
xchg
add
mov
shl
jnp
and
pop
data16
add
cmp
movs
mov
in
bound
push
call
xchg
popf
add
icebp
push
jmp
adc
add
add
push
ficomp
stos
outs
lods
add
adc
sub
popa
mov
add
add
or
lock
inc
call
cdq
and
sub
add
add
not
push
(bad)
mov
stc
or
test
mov
test
sub
ret
popf
sbb
add
imul
dec
sbb
ret
push
or
sbb
add
adc
add
sbb
je
out
aas
xlat
cmc
xchg
mulps
add
add
test
outs
test
jbe
mov
jns
and
mov
adc
fmul
jp
push
add
mov
push
jne
int3
add
add
jns
sub
push
pushf
mov
add
and
fnsave
std
add
add
xchg
jnp
jno
and
jne
inc
pop
mov
inc
xchg
inc
pop
popf
fs
sub
stc
enter
add
in
and
adc
dec
pop
mov
jnp
fbld
jecxz
les
out
sbb
add
fnsave
mov
adc
adc
pushf
jns
add
add
retf
leave
xchg
mov
aaa
cs
std
mov
push
fnstsw
call
lods
jp
cmp
add
push
add
dec
xchg
push
in
pop
lea
and
ror
jbe
xor
add
test
in
add
xlat
push
sbb
add
add
adc
movs
xor
ds
and
repz
inc
inc
cld
cmp
add
bound
xor
cdq
cdq
sub
movs
rol
add
jae
adc
dec
add
add
lods
mov
les
jne
ss
xor
ret
imul
xchg
pop
outs
adc
add
add
xchg
popa
xor
loopne
sub
pusha
add
push
xor
aam
xchg
xor
jo
sub
add
push
pop
jmp
push
cli
and
fst
xor
inc
xor
add
add
in
std
movs
jmp
scas
pop
mov
mov
lods
repz
xchg
xchg
inc
lahf
xor
add
add
clc
add
mov
inc
mov
or
mov
imul
je
add
lods
add
fst
rol
out
mov
cmps
adc
dec
jle
cld
loope
ret
push
add
or
mov
test
mov
loop
xchg
mov
inc
mov
ja
dec
and
xor
add
mov
inc
mov
xor
gs
(bad)
out
inc
fsubr
mov
in
into
daa
rol
sbb
inc
or
adc
outs
out
fwait
std
ret
mov
sub
add
add
clc
cmp
retf
mov
loopne
enter
shl
test
add
jbe
sbb
lahf
or
add
xor
sar
cmp
fadd
ret
clc
mov
add
inc
push
jns
pop
fcomp
ret
dec
mov
jns
cdq
pop
mov
aad
in
jae
rcl
jns
pusha
jne
mov
int3
xchg
push
cmp
add
(bad)
adc
imul
into
mov
inc
sti
(bad)
jle
mov
add
js
test
cmp
sub
(bad)
dec
loopne
sbb
in
push
shr
jae
sahf
add
push
pusha
jecxz
fadd
int3
add
sar
or
inc
mov
out
mov
pop
xchg
add
or
jmp
jno
scas
or
iret
push
fcomp
mov
add
or
jno
xor
mov
in
jecxz
imul
pop
fsubr
sti
inc
add
push
add
jno
xlat
cmp
in
jge
add
gs
add
shl
dec
(bad)
mov
cli
pusha
dec
push
sbb
jbe
ss
pop
(bad)
inc
pop
sub
adc
ror
push
popa
inc
jo
jge
les
dec
stc
and
add
mov
gs
in
test
das
inc
or
add
enter
mov
retf
cmp
xchg
icebp
(bad)
je
jns
cmps
xchg
sbb
xchg
xchg
adc
adc
rol
not
and
out
jmp
add
imul
es
fwait
loope
addr16
icebp
add
add
rcr
(bad)
mov
icebp
dec
das
xchg
(bad)
pop
cmp
mov
push
or
lds
(bad)
out
dec
push
adc
pop
push
mov
cmp
fs
lahf
push
jne
jl
add
add
add
loope
pop
aad
adc
dec
pop
into
data16
xchg
push
jg
jo
pop
add
adc
stos
xor
adc
or
inc
mov
add
add
jmp
fcomp
push
sbb
shr
mov
sbb
ret
and
mov
das
loopne
adc
add
add
push
jb
neg
fdiv
popa
add
push
sub
test
dec
pop
scas
add
dec
data16
add
cmp
fstp
dec
and
inc
daa
aam
call
mov
xlat
(bad)
fdivr
lds
add
outs
pop
mov
dec
ds
jge
cmp
or
test
add
daa
lahf
lods
data16
imul
and
data16
push
add
add
or
fwait
adc
inc
push
stos
mov
add
outs
(bad)
add
sbb
lods
push
aad
xchg
mov
inc
mov
mov
dec
lock
dec
nop
or
pop
push
push
outs
out
shr
jns
add
add
(bad)
hlt
push
repz
add
scas
fwait
cmps
(bad)
xor
adc
in
rcl
pop
jb
inc
add
add
scas
xlat
popa
inc
sahf
sub
push
mov
out
sbb
loope
test
pop
push
scas
mov
adc
(bad)
icebp
inc
add
ja
sub
add
add
std
out
xchg
sub
popf
loopne
jg
xchg
jb
pop
inc
and
or
and
add
add
push
mov
das
push
imul
in
cmp
repz
into
mov
in
sti
rol
or
loopne
mov
dec
daa
push
out
stos
popa
rol
enter
add
mov
mov
jl
dec
repnz
je
bound
pop
movs
and
add
inc
push
mov
fistp
or
and
or
rol
add
imul
outs
jg
sbb
xchg
add
add
inc
xchg
adc
(bad)
push
fild
mov
mov
xor
retf
std
add
movs
aas
(bad)
imul
loopne
aas
xor
add
add
xchg
inc
packsswb
sti
push
mov
or
push
movs
repnz
cs
out
(bad)
pop
dec
or
xchg
in
mov
mul
add
and
data16
add
ds
inc
repz
bnd
in
cmps
dec
cmp
add
pop
mov
call
bound
sahf
sti
rcl
or
sbb
mov
add
mov
xor
fs
jno
inc
(bad)
shr
test
xchg
sub
sub
push
xchg
xchg
mov
mov
movs
add
add
bound
ror
cld
dec
in
sbb
cmp
out
fcom
sbb
das
mov
ins
fwait
stos
mov
pop
sub
push
xchg
jnp
popf
cmp
fild
add
add
sar
call
out
and
shl
pop
aas
sub
jl
and
add
popa
shl
add
add
pop
or
sbb
scas
push
add
fcom
loopne
mov
in
mov
out
pop
lods
rcl
test
xchg
or
movs
sub
hlt
movs
cs
add
adc
cmp
add
jne
pop
fiadd
ja
gs
int3
pop
xor
sahf
pop
adc
lods
int
ret
push
add
add
xchg
js
daa
mov
cld
mov
(bad)
adc
mov
aam
sub
or
add
add
fcomip
sbb
pop
das
jg
or
mov
lods
jno
or
sbb
aad
data16
add
cs
or
xlat
inc
popf
push
out
push
inc
and
inc
sub
pop
mov
sbb
addr16
adc
xchg
popf
bound
or
add
xor
mov
xchg
or
sub
rol
mov
test
add
add
data16
jo
pusha
mov
add
int3
imul
cmps
mov
dec
dec
loop
in
sti
imul
add
add
arpl
int3
jns
inc
int3
data16
cmp
rcl
dec
sub
out
adc
call
call
bound
sti
mov
and
add
cmc
jnp
ds
adc
add
jmp
cmp
test
pushf
add
add
and
fld
sbb
and
and
mov
mov
xor
stc
mov
rol
pop
lds
mov
jl
add
lods
add
loope
cmp
xchg
inc
push
add
add
add
add
jnp
and
shl
sti
adc
xor
sar
imul
jnp
add
mov
add
hlt
dec
xchg
jmp
jo
add
add
dec
ds
loop
ds
ins
cmp
cdq
ds
stos
inc
sahf
mov
cmps
cli
dec
xchg
mov
xor
stos
cs
scas
test
add
outs
fadd
imul
add
dec
stos
jg
scas
nop
imul
mov
pop
mov
pop
ret
jb
sti
movs
push
movs
(bad)
add
add
je
sbb
sbb
outs
mov
cmp
ja
inc
adc
popa
adc
add
add
cmc
or
cmp
adc
mov
xchg
enter
jno
push
jecxz
jbe
add
add
fisub
add
add
mov
sbb
mov
inc
sbb
mov
stos
aas
sbb
add
mov
(bad)
outs
(bad)
iret
xchg
(bad)
cmp
and
add
pop
jae
int
stos
shl
adc
add
add
das
mov
xlat
ds
push
mov
scas
cld
mov
mov
xchg
xlat
in
scas
aam
add
jmp
jmp
test
dec
mov
jl
push
pop
add
add
mov
(bad)
in
xlat
fs
push
bound
push
inc
cwde
add
ss
int
arpl
add
and
clc
rol
xor
or
pop
pop
dec
dec
test
mov
sbb
add
mov
fdivp
mov
enter
imul
add
mov
ds
sar
mov
test
xchg
mov
mov
sbb
popa
int
cmp
bound
pop
inc
push
test
inc
bound
jo
cmp
dec
mov
cmps
jnp
stc
fisub
dec
into
es
int
sub
imul
mov
mov
add
pusha
or
cld
fst
push
add
mov
add
add
mov
aad
aad
push
cmp
and
dec
repz
sti
sbb
lds
add
add
jmp
es
pop
pop
pop
push
pop
out
dec
xor
xchg
pop
xor
or
cmp
popf
add
add
pop
jb
inc
in
sbb
cs
out
sar
retf
and
arpl
out
sbb
mov
add
dec
mov
(bad)
jns
add
xchg
and
add
lds
dec
sti
cli
cmp
jp
sahf
(bad)
daa
lds
mov
or
jge
sbb
bound
mov
mov
ins
sub
inc
inc
mov
add
add
cli
sbb
test
pop
cmps
jge
xor
ficomp
stos
lock
test
sbb
stc
aaa
fnsave
xlat
fimul
cli
and
cs
sub
adc
push
inc
inc
cdq
xchg
jmp
sbb
pusha
push
je
add
pushf
jecxz
mov
add
dec
and
ficomp
xchg
push
or
mov
ds
sbb
add
stos
and
pop
mov
outs
sub
add
add
ins
xchg
cwde
adc
bound
mov
fsubr
xor
cmc
sub
add
fidivr
jbe
shl
cmp
into
xor
retf
xchg
lea
out
add
xor
push
retf
test
cmp
rol
mov
add
add
pop
add
jp
dec
or
test
pop
lock
cmp
scas
das
jno
add
add
cmps
cmc
mov
scas
jbe
mov
pusha
nop
dec
jecxz
pop
cmps
test
test
add
fwait
xchg
add
or
dec
cmc
cdq
sub
add
pop
iret
sub
aas
add
add
add
dec
inc
dec
or
xchg
push
addr16
pop
lods
mov
fwait
cs
xchg
stos
and
add
test
mov
aam
pop
(bad)
(bad)
popf
iret
mov
add
add
cmps
pop
mov
jae
push
lock
stc
ret
or
shl
sub
add
add
push
sbb
sub
push
adc
fwait
pop
push
xor
fnstenv
aas
adc
imul
add
inc
add
mov
push
test
sbb
call
xchg
adc
gs
shl
push
push
fsub
idiv
gs
jb
mov
mov
mov
fld
add
add
mov
xor
jnp
push
xor
out
popf
pop
and
inc
or
add
add
call
jecxz
inc
arpl
fstp
xchg
add
xchg
xor
fnstcw
add
add
outs
pop
push
xchg
and
sbb
repz
stc
sahf
test
inc
(bad)
sbb
xchg
mov
sar
add
test
push
push
sbb
addr16
popa
push
mov
mov
and
repnz
nop
push
stc
das
shr
dec
mov
xor
cmp
in
fld
jp
data16
adc
add
xor
fistp
push
mul
xlat
out
pop
(bad)
call
push
ror
add
mov
imul
adc
add
dec
adc
pop
(bad)
jns
mov
in
push
mov
xor
inc
leave
jecxz
inc
push
jle
out
xchg
xor
add
add
mov
out
es
or
iret
xchg
jp
pop
or
pop
adc
add
jns
shl
lods
add
imul
dec
jo
and
add
add
ja
jl
cmp
sbb
adc
retf
fsubr
call
loop
scas
mov
adc
cmp
push
mov
or
pop
ret
lock
add
lods
in
mov
fs
and
dec
or
add
add
add
imul
inc
not
imul
xchg
jno
lock
mov
sub
or
add
dec
sbb
clc
rcr
mov
mov
push
mov
adc
dec
ret
cli
add
dec
mov
call
out
push
(bad)
jg
in
in
ins
pop
cmp
sbb
add
mov
sbb
dec
jge
out
jg
cli
sti
mov
jnp
mov
or
cmp
push
cs
add
bound
adc
out
xchg
adc
add
sbb
sbb
aad
jmp
jge
inc
mul
push
cmps
fcomp
mov
push
add
pop
ret
repz
mov
push
push
push
retf
add
add
adc
lds
jge
pop
xchg
cwde
xchg
xlat
mov
js
jns
les
add
fsub
xor
add
add
mov
jp
mov
inc
iret
(bad)
and
inc
(bad)
pop
aam
add
add
mov
fiadd
dec
popf
pop
mov
ins
xchg
mov
fs
pop
xchg
sub
out
xchg
(bad)
or
loope
cdq
xor
(bad)
jne
scas
fsubr
mov
sahf
jnp
jbe
or
ret
mov
add
mov
xor
xchg
jmp
(bad)
mov
sub
repnz
imul
cld
mov
and
or
xor
cwde
jmp
mov
sbb
imul
in
jp
fisttp
mov
fsubr
retf
cmp
add
stos
jp
or
test
(bad)
jle
dec
push
add
mov
adc
inc
adc
aaa
cli
cmp
add
add
div
pop
inc
and
xchg
pop
and
xor
out
aad
inc
shr
add
inc
add
and
cmp
add
(bad)
fisubr
jge
dec
arpl
add
fst
mov
push
and
loope
fmul
call
loop
add
inc
sbb
pop
in
and
int
in
push
or
aaa
xchg
sbb
inc
and
add
sub
and
and
adc
sbb
xchg
dec
add
cmps
adc
lods
fcmove
sbb
out
fdivr
add
bound
test
lahf
sub
in
mov
mov
and
retf
dec
dec
into
movs
mov
add
jmp
sbb
adc
mov
mov
xchg
sbb
jne
and
add
ins
outs
adc
jge
push
repz
add
add
int3
dec
mov
mov
ficom
mov
stc
lea
push
jo
push
retf
add
dec
fs
lock
std
ret
fcom
aam
mov
add
add
mov
mov
xchg
pop
add
sub
inc
in
outs
mov
jmp
out
pop
mov
lea
xchg
popa
lea
(bad)
sbb
(bad)
add
pop
or
rcr
pusha
add
lahf
cmc
leave
inc
fiadd
cmc
(bad)
push
pusha
scas
ins
stos
cmc
sub
ror
xchg
mov
adc
imul
clc
add
add
add
imul
sub
and
adc
xchg
aam
les
add
jle
ret
mov
push
imul
call
xor
dec
repnz
nop
xchg
add
scas
cmp
ror
pop
cmp
in
xchg
add
rol
ins
dec
or
pop
loope
or
add
jne
push
push
or
mov
xor
add
inc
inc
dec
dec
les
jmp
addr16
in
sti
movs
jnp
xchg
pop
call
jge
test
and
imul
add
xchg
pop
pop
jmp
mov
sub
hlt
pop
loopne
stc
fadd
shl
add
add
into
add
enter
jmp
lock
cmp
jl
mov
pushw
add
or
(bad)
(bad)
icebp
dec
push
sub
xchg
sbb
pop
and
je
aaa
xor
test
pop
aaa
jg
ror
arpl
pushf
enter
mov
(bad)
add
pop
lds
cwde
stos
mov
cmp
add
and
sbb
mov
cmp
add
ret
push
lea
xor
add
add
les
out
pop
mov
(bad)
in
lods
mov
js
arpl
add
mov
pop
mov
mov
xor
daa
dec
es
cs
sahf
(bad)
mov
pop
jecxz
out
or
ins
lock
cmp
mov
inc
dec
add
cld
jle
or
rcl
(bad)
add
add
cmps
js
loope
push
ror
fs
adc
jg
add
push
shl
fistp
push
dec
dec
add
add
inc
f2xm1
call
fimul
adc
xor
add
mul
ja
dec
scas
pop
stos
call
push
add
inc
pop
dec
lock
pop
jmp
add
add
inc
out
(bad)
jns
loop
loope
out
shr
(bad)
cld
(bad)
icebp
mov
bound
fiadd
add
add
repz
(bad)
(bad)
push
mov
adc
movs
xchg
and
movs
bound
movs
cwde
xchg
pop
cs
add
add
in
sbb
sbb
ret
add
and
mov
inc
pop
add
jg
rcl
popf
in
ficomp
and
sub
add
or
int3
mov
(bad)
inc
sub
xchg
sti
add
popa
cld
aas
sbb
jecxz
sti
daa
mov
pop
jle
sbb
ins
mov
call
and
add
outs
cld
fdiv
aaa
mov
(bad)
rcr
lock
movs
pop
adc
adc
jno
add
or
jg
inc
inc
stos
rol
cmps
(bad)
hlt
out
add
add
mov
mov
mov
sbb
jge
cmp
nop
loopne
in
inc
sti
(bad)
repnz
inc
js
retf
mov
or
pusha
int
xor
lods
rol
dec
jb
sbb
add
add
loop
icebp
sbb
pop
scas
ja
pop
cmc
jp
sub
and
cdq
adc
cmp
test
cdq
mov
data16
mov
add
mov
aas
ja
(bad)
je
adc
adc
mov
xor
push
cmc
pop
xor
add
add
mov
movs
or
adc
or
sbb
mov
adc
adc
mov
mov
push
and
add
or
mov
push
lock
in
int
inc
dec
ja
add
mov
pop
test
pop
dec
or
nop
jl
ds
dec
jmp
mov
popf
adc
jle
pushf
jmp
add
sti
inc
rcl
add
add
adc
jp
jnp
jmp
xor
inc
dec
sub
pop
lahf
es
sub
nop
das
mov
add
add
add
jne
mov
push
retf
cmp
data16
lock
ins
mov
add
(bad)
lds
cli
jno
and
jbe
push
and
and
arpl
mov
popa
xchg
enter
adc
add
pop
dec
adc
add
add
add
fwait
pop
ror
adc
add
repnz
sbb
popa
adc
arpl
ins
jbe
not
add
add
and
js
stc
mov
aam
loopne
jg
div
adc
add
js
sahf
test
loop
loop
hlt
and
call
add
mov
fild
movs
adc
addr16
jnp
fwait
movups
add
clc
ret
xchg
mov
xor
out
sahf
adc
add
dec
int
jbe
pop
adc
(bad)
daa
inc
mov
lods
push
adc
dec
inc
pop
into
add
add
fs
fild
mov
adc
(bad)
mov
xor
repz
inc
(bad)
vpinsrw
or
sbb
repz
jo
add
add
ret
pop
into
hlt
sbb
cmps
pop
int
(bad)
cld
pop
mov
ja
in
add
loopne
pop
push
adc
outs
test
xchg
xchg
bound
add
add
retf
sar
sbb
mov
inc
dec
js
xchg
shl
push
sub
add
mov
xchg
mov
add
inc
jl
outs
sub
add
ss
jge
jl
push
jge
sub
jmp
add
and
sbb
push
mov
jl
jno
cwde
and
add
daa
popa
adc
dec
(bad)
(bad)
jmp
cdq
dec
pop
test
push
pop
and
fcomp
int
add
and
mov
out
ds
sbb
dec
add
add
add
inc
jnp
cs
rcl
(bad)
mov
mov
sbb
sbb
and
add
icebp
daa
pusha
out
xor
add
sbb
clc
outs
aam
add
add
add
(bad)
mov
pop
mov
inc
lods
xchg
push
pusha
loope
mov
adc
add
push
pop
std
mov
cmps
pop
add
add
js
into
and
xchg
out
ror
enter
test
arpl
push
jae
xor
add
sti
push
in
sbb
xchg
repnz
mov
push
or
add
add
xor
loop
mov
and
sub
or
arpl
into
mov
lock
nop
adc
lds
sub
stc
out
(bad)
imul
xchg
gs
sbb
fcmovbe
inc
xchg
icebp
fadd
push
push
fdiv
mov
test
cdq
inc
je
dec
inc
(bad)
mov
sbb
add
dec
outs
shr
push
xchg
out
sbb
or
add
inc
cmp
imul
(bad)
gs
add
fidivr
or
xchg
jae
sub
(bad)
mul
stc
fs
pop
jb
jge
lock
push
fadd
add
add
outs
pop
mov
jecxz
and
scas
jmp
retf
xchg
sub
outs
mov
es
sbb
push
xor
adc
scas
imul
push
add
gs
sti
cdq
mov
xchg
inc
pop
call
sbb
mov
cmp
dec
out
stos
test
push
movs
(bad)
xor
fadd
add
cwde
push
mov
pushf
sub
mov
mov
xor
aad
sub
mov
enter
add
xchg
(bad)
mov
imul
push
add
push
inc
mov
test
movs
xor
dec
and
mov
idiv
jne
in
sbb
iret
add
fsubr
lods
jne
movs
retf
adc
dec
add
add
mov
push
movs
cmp
enter
jno
add
mov
sbb
push
pop
daa
cmp
mov
cmc
add
add
pop
mov
jp
daa
loope
(bad)
xlat
sbb
cwde
adc
inc
sbb
imul
jp
xor
lods
arpl
jge
add
add
xchg
inc
not
ins
xchg
or
loopne
mov
inc
xchg
jg
hlt
adc
stc
call
adc
aas
and
cmp
out
aaa
test
add
add
mov
jb
xor
daa
or
mov
sbb
loope
stos
into
ins
add
add
jg
jb
fisubr
lock
jno
stos
inc
stos
pop
jne
mov
inc
gs
xor
pop
jecxz
push
push
add
add
jo
or
inc
add
mov
pop
xchg
lods
ret
int3
lahf
cwde
cmps
add
xor
dec
push
add
jns
pop
sub
sub
setg
add
mov
inc
sbb
inc
add
sub
stos
not
xchg
and
and
rcl
jo
add
add
mov
jmp
mov
mov
mov
push
add
mov
addr16
in
mov
jge
in
pop
add
add
inc
sbb
sub
dec
mov
mov
and
add
xlat
sub
xchg
or
stos
arpl
call
or
rcr
add
add
mov
repz
xor
imul
mov
sbb
jl
or
add
add
push
lahf
push
jne
cli
push
call
push
repz
popf
js
push
inc
cli
jbe
pop
loop
jmp
and
add
add
movs
mov
pop
cmps
sbb
mov
push
push
pop
cmp
mov
pop
lea
sbb
lea
add
dec
push
clc
pushf
lahf
pop
test
add
add
fbld
clc
inc
stos
(bad)
dec
jae
jle
fcomi
gs
xor
and
or
fdivr
cmp
jo
fild
inc
rcl
sti
inc
lea
in
add
add
aad
mov
lahf
aaa
(bad)
xor
xchg
test
mov
mov
sbb
fst
sbb
sbb
popa
sbb
cmp
sti
sbb
jl
ds
cld
pop
add
daa
add
xchg
push
call
add
rcl
xchg
sbb
cmp
cmp
fdivp
add
fwait
mov
mov
test
or
mov
mov
and
add
mov
cmp
nop
cmp
or
push
clc
mov
gs
mov
imul
jmp
cmp
stos
add
add
pop
movs
dec
dec
pusha
std
aaa
xchg
and
cmp
(bad)
xchg
push
push
jl
cmp
pusha
pop
cmp
dec
push
add
add
cld
lods
call
cmp
mul
inc
jne
xcrypt-ctr
cmps
pop
call
cdq
jnp
inc
adc
adc
outs
push
mov
aam
fnstcw
add
add
sub
outs
pop
xor
pop
or
aaa
dec
sub
int
sub
imul
aaa
in
add
add
push
adc
sub
push
shl
push
mov
add
add
lods
xor
xor
daa
jb
aaa
inc
mov
outs
jnp
pop
sub
jo
push
xlat
add
add
leave
(bad)
jo
shl
lods
into
call
mov
into
fwait
push
aas
stos
das
add
pop
shr
mov
pop
cmp
movs
xchg
sbb
repz
add
popf
(bad)
sbb
inc
add
add
aas
mov
mov
dec
pop
(bad)
out
loope
push
add
add
(bad)
push
bound
jbe
push
int3
push
mov
stos
lock
dec
add
cmps
sub
mov
mov
add
and
mov
push
sahf
dec
arpl
push
add
add
pop
adc
xchg
inc
rsm
mov
adc
add
test
adc
add
adc
and
das
(bad)
call
clc
mov
stos
push
cmp
leave
enter
hlt
add
add
clc
add
cdq
clc
sbb
add
add
xor
dec
ud0
jg
popf
(bad)
push
or
fldcw
push
inc
ror
sar
retf
jno
mov
pop
jo
pop
cmps
mov
add
xor
push
xchg
and
add
or
add
add
sub
call
adc
add
cmps
add
pusha
jge
cmp
jmp
or
xchg
and
add
adc
fiadd
lahf
stc
es
repz
mov
add
add
repz
je
jmp
push
in
les
mov
add
lahf
call
pop
sahf
and
add
and
cmp
out
xchg
les
add
into
and
inc
sub
fsub
nop
movs
enter
push
add
movs
mov
ror
pop
in
retf
xchg
nop
mov
fld
add
add
sub
jge
xchg
jle
ret
mov
mov
ffreep
rcr
or
and
add
sbb
mov
or
ret
mov
pop
mov
add
or
jmp
lds
fmul
das
arpl
push
in
xor
or
add
push
xchg
add
(bad)
pop
mov
mov
jp
push
pop
pop
pop
mov
xchg
mov
mov
loopne
push
ds
cmp
cli
test
pop
add
add
out
mov
or
js
jg
ja
stc
dec
adc
pop
clc
arpl
jl
jae
adc
add
push
sbb
mov
mov
jo
add
stc
(bad)
and
add
add
loop
xor
arpl
sub
mov
xor
dec
scas
fidiv
mov
or
pop
rcl
jge
add
add
sub
fwait
dec
imul
or
pop
pop
jge
add
jae
lds
xchg
dec
fcmovnbe
add
int3
or
ror
add
dec
dec
scas
movs
mov
push
rol
add
lods
loop
cmp
mov
sahf
sar
loopne
jmp
inc
test
xchg
add
add
fcom
push
pop
ret
add
mov
out
arpl
add
add
ds
out
and
mov
push
mov
retf
(bad)
(bad)
mov
inc
sbb
dec
cwde
sahf
add
add
call
cmp
mov
aam
inc
cmps
pop
pusha
pop
or
(bad)
cmp
mov
add
add
inc
(bad)
mov
mov
sbb
mov
jg
(bad)
ins
stos
leave
idiv
push
ss
imul
retf
push
jo
add
add
fadd
mov
or
add
sub
mov
daa
jmp
ins
icebp
add
add
dec
xchg
fadd
ficom
mov
loopne
aaa
cmp
xchg
mov
out
add
add
ret
adc
dec
jo
cli
inc
mov
cmp
pop
jnp
jecxz
mov
dec
sbb
add
pop
scas
dec
jne
adc
retf
add
mov
jmp
cli
cmp
mov
pop
clc
add
shl
popf
nop
out
fst
cmp
iret
add
add
pop
cmp
sbb
cmp
addr16
idiv
adc
(bad)
outs
push
cmp
add
ret
mov
jae
pusha
or
jle
pop
(bad)
sbb
add
cmp
jne
sbb
cld
movs
loope
dec
and
scas
ror
mov
das
push
xchg
inc
stc
adc
add
ret
add
add
inc
and
push
mov
pop
inc
jbe
fnstsw
push
ins
mov
push
push
adc
mov
sub
int3
shl
pusha
mov
add
mov
adc
or
push
jl
sub
or
mov
cmp
lods
fcmovnb
add
add
das
push
mov
in
xchg
adc
push
mov
je
into
add
ja
mov
cli
jp
sub
je
hlt
sbb
jne
call
add
stc
jmp
in
add
pop
iret
xor
dec
cdq
nop
xor
jmp
xchg
mov
xchg
add
call
cwde
lods
and
cmps
add
mov
enter
xor
pop
jne
dec
pop
add
add
mov
mov
addr16
mov
push
inc
cwde
outs
jge
jg
mov
loopne
adc
ja
les
pop
mov
add
adc
mov
outs
lods
loopne
add
popf
call
loopne
add
dec
sbb
add
add
(bad)
outs
or
aaa
dec
xchg
punpckhbw
push
fcomp
inc
xchg
mov
jp
add
or
ror
mov
or
add
cmp
es
int
ins
push
in
jb
stos
adc
add
xchg
cmps
jne
push
sti
adc
xor
(bad)
test
gs
mov
add
sbb
out
cmp
int3
(bad)
mov
pusha
xchg
dec
cmp
add
add
iret
ja
aam
inc
inc
inc
xor
mov
outs
iret
mov
xlat
jl
jecxz
add
add
mov
jo
push
ficom
pop
fnstenv
sub
xchg
adc
or
sub
jl
jae
loop
push
add
add
push
xchg
push
rcr
and
dec
add
mov
fnstenv
iret
add
add
callw
mov
daa
or
add
and
scas
cmc
mov
jnp
lods
add
add
pop
in
enter
cmps
test
jmp
sbb
addr16
pop
fld
sbb
mov
ror
sub
mov
fs
movs
adc
add
out
sub
push
xchg
jge
adc
adc
xlat
add
mov
adc
pop
(bad)
arpl
daa
xlat
xchg
adc
add
add
push
push
mov
xchg
fsub
int3
aas
mov
inc
add
xor
add
push
add
add
sub
xchg
out
pop
dec
cdq
inc
or
cdq
add
in
mov
popf
fld
dec
sbb
sahf
dec
enter
std
(bad)
push
sub
add
stos
inc
or
jmp
fstp
add
mov
movs
rol
scas
ficomp
mov
push
and
cmp
add
add
inc
xchg
std
pop
jmp
pop
sbb
or
cmp
mov
lea
push
pop
lods
and
je
add
int
lock
add
inc
cdq
jb
stos
lea
mov
pop
add
add
pop
jl
imul
sahf
add
inc
mov
popa
js
popa
das
not
mov
xchg
call
add
cmp
jbe
in
xchg
pop
out
xlat
mov
mov
dec
push
stos
xlat
adc
imul
repz
pushf
or
out
test
idiv
ins
cdq
push
ficom
add
add
imul
(bad)
(bad)
enter
repz
adc
or
xchg
out
xchg
cmp
ins
mov
enter
add
add
lods
(bad)
push
nop
repz
mov
inc
mov
(bad)
fldenv
icebp
repnz
add
test
fstp
mov
pop
pop
jmp
mov
add
jge
push
add
jmp
pop
xchg
sub
adc
add
add
loop
xlat
or
test
leave
add
fldcw
icebp
fcmovnu
fmulp
xchg
xlat
(bad)
aas
xor
nop
dec
add
or
dec
icebp
sti
xlat
popa
inc
(bad)
mov
inc
mov
pushf
ret
inc
pop
cwde
sbb
push
sub
add
clc
jbe
lds
daa
pop
int3
add
xor
or
jle
mov
inc
add
dec
cmp
sbb
xor
jae
add
add
inc
lods
mov
jb
push
sub
cmp
pop
outs
std
inc
sub
dec
in
shl
add
push
popa
sahf
fbstp
test
call
or
mov
mov
das
add
jl
ins
pop
jl
sbb
cmp
push
add
adc
mov
icebp
cmc
inc
inc
mov
add
pop
xor
movs
or
push
add
jp
xchg
retf
xchg
mov
(bad)
shl
das
cmps
ret
add
add
and
cmps
mov
or
rcr
(bad)
push
nop
sub
int
add
add
cld
push
cdq
into
call
mov
add
data16
into
add
jl
sub
sbb
sti
gs
mov
or
xor
fistp
imul
inc
xchg
add
add
stos
mov
out
and
cmp
test
ss
xor
push
jg
pop
test
add
xchg
push
aas
ds
sub
mov
add
and
jno
loope
sbb
mov
sub
push
dec
cmp
add
xor
jnp
sbb
leave
and
inc
test
test
jno
pop
push
jg
add
add
clc
push
pop
dec
xor
gs
adc
or
adc
xchg
mov
shl
iret
movs
in
mov
push
xor
push
jae
sti
push
add
clc
add
stos
pushf
int
ss
enter
add
inc
call
inc
call
aas
retf
dec
add
add
pushf
stc
and
pop
ins
rcr
les
mov
or
mov
xor
and
add
add
or
data16
jne
outs
jb
shl
add
jecxz
xlat
xchg
mov
pop
mov
ins
or
sbb
mov
or
sub
mul
dec
cmps
add
inc
dec
imul
xchg
iret
fcmovnbe
aas
pusha
dec
fisubr
add
sub
inc
push
xchg
(bad)
sar
mov
out
pusha
sub
push
add
add
out
loope
js
ins
int3
pop
inc
cmp
or
pop
(bad)
dec
lds
stc
cmps
mov
add
push
fsubp
imul
leave
clc
xchg
mov
dec
retf
adc
add
shl
pop
cmp
pop
mov
and
jno
mov
xor
add
add
aam
mov
jo
pusha
aam
(bad)
mov
push
daa
cmp
add
or
fchs
call
add
ret
outs
push
cmps
mov
out
outs
arpl
jge
mov
fptan
loope
daa
xor
or
pop
or
ja
adc
add
imul
mov
add
add
xchg
das
jmp
adc
std
sub
dec
test
add
mov
or
xchg
and
xchg
dec
hlt
(bad)
add
inc
iret
xchg
mov
loop
add
fwait
pushf
mov
and
cli
stc
dec
cmc
call
add
enter
pop
(bad)
push
mov
mov
dec
xchg
add
aad
call
push
shl
xchg
and
pop
adc
add
inc
jno
mov
out
aad
dec
push
jmp
jmp
cli
jne
fcmovnbe
add
sahf
std
shl
lahf
jne
add
add
fidiv
or
test
fldenv
hlt
cmp
sar
inc
sub
jmp
push
int
inc
cmp
clc
mov
or
or
or
add
in
xchg
out
xchg
xchg
pop
mov
mov
jnp
cdq
mov
add
inc
ret
mov
in
pop
ins
jbe
xor
or
mov
idiv
add
lds
imul
cmp
dec
fcomi
mov
lods
ss
or
add
add
pusha
ja
jmp
or
neg
pop
mov
lods
sub
sar
js
scas
mov
add
inc
add
pop
mov
(bad)
xor
add
or
mov
mov
push
add
add
jmp
mov
repnz
xor
sbb
xchg
jne
movs
cmp
add
or
or
add
std
add
loopne
pop
fcom
retf
icebp
lods
push
pop
jp
test
lahf
cmc
lods
(bad)
mov
add
daa
mov
or
lods
push
cmp
iret
inc
push
ficom
or
jg
jo
xchg
ja
out
mov
rcl
int
sub
add
adc
jb
push
sahf
or
xchg
xchg
test
add
inc
rol
popa
loope
jb
pusha
sbb
xchg
das
mov
ret
cld
jae
add
cmp
cs
push
and
cmp
xchg
fsqrt
jb
xor
push
xor
shl
daa
mov
clc
xor
lods
sbb
shl
add
mov
popf
adc
pop
xchg
ret
test
ss
adc
adc
sbb
mov
jmp
mov
fiadd
fdivrp
iret
adc
inc
sbb
or
push
add
scas
leave
cmp
ret
fbld
add
add
xchg
je
shl
addr16
mov
jb
xor
add
sub
jle
push
add
adc
addr16
or
(bad)
out
jb
repnz
cld
fisub
add
fwait
mov
ret
mov
inc
jmp
daa
les
adc
add
push
dec
cmp
or
or
loopne
jo
jle
inc
push
mov
mov
add
cmp
mov
adc
fnsave
push
adc
cld
add
add
into
pop
ins
xchg
mov
pop
push
ds
cmps
fmul
mov
mov
loopne
int
mov
fisubr
jmp
add
add
outs
or
mov
icebp
jae
repnz
aaa
lods
cmp
repz
mov
pop
leave
inc
inc
adc
dec
jno
and
add
add
or
push
aam
push
sub
outs
ja
push
mov
mov
pop
in
push
or
add
shl
ret
or
call
xor
add
add
(bad)
bnd
in
and
inc
outs
mov
sub
add
sbb
bound
add
pusha
nop
in
sub
icebp
std
rol
pop
test
adc
rcr
or
add
pop
out
loop
mov
sar
arpl
xor
xchg
push
mov
add
rcl
sub
leave
lds
push
and
popa
daa
shl
mov
adc
repnz
add
add
mov
cdq
mov
push
dec
cmp
int3
in
lds
push
sbb
pop
pop
das
mov
and
jecxz
arpl
hlt
sub
xor
push
add
ret
mov
add
ror
xchg
dec
adc
pushf
loope
(bad)
jb
ds
mov
rcr
adc
add
xor
aam
sub
add
(bad)
mov
adc
clc
dec
sbb
add
and
loope
lea
fs
adc
es
cwde
inc
add
xlat
pushf
mov
js
dec
bound
jbe
push
mov
add
and
(bad)
scas
mov
jp
jmp
mov
stc
jno
fbstp
add
scas
mov
cmp
add
add
or
xchg
or
pushf
jge
sub
outs
sbb
add
sbb
cmc
mov
push
mov
add
add
cmps
out
and
rcr
(bad)
bound
mov
mov
(bad)
xor
jo
add
add
pop
cmp
cmc
push
data16
mov
sbb
daa
popa
cli
jecxz
jecxz
pop
jns
jecxz
add
add
and
xor
pushf
jecxz
out
and
cmp
out
fistp
mov
push
es
mov
add
shr
fld
dec
daa
add
div
gs
test
xchg
addr16
add
lea
std
sub
jl
inc
jo
add
outs
mov
add
sbb
imul
add
add
stos
pop
xor
call
pop
ja
jae
add
add
sbb
loope
fwait
and
add
sbb
xor
fiadd
add
sar
(bad)
cmp
xchg
adc
fstp
inc
(bad)
pop
aam
jle
add
pop
inc
push
movs
jle
das
(bad)
dec
adc
cmp
add
mov
sub
dec
pop
retf
push
add
or
sbb
add
sahf
mov
inc
call
mov
popf
into
hlt
scas
mov
cwde
mov
arpl
push
push
pop
sub
add
fnstenv
test
outs
xor
and
mov
and
add
inc
clc
cs
ja
(bad)
mov
mov
add
jo
test
repnz
dec
mov
enter
mov
mov
movs
ds
in
loopne
add
jle
sbb
pop
leave
les
add
add
mov
sub
jnp
les
jmp
icebp
fwait
stc
cmp
enter
outs
add
xor
cld
add
out
pop
jo
nop
(bad)
xchg
(bad)
adc
fist
add
or
adc
jle
iret
push
movs
sbb
jnp
ja
fwait
fwait
in
out
xchg
aam
mov
shl
add
jo
in
out
addr16
mov
jnp
das
movs
aaa
nop
sub
xlat
add
add
mov
ins
mov
fisttp
pusha
popf
bound
cdq
pop
xor
das
mov
mov
add
test
mov
sbb
sbb
or
mov
cmp
mov
es
xor
push
in
pop
xor
test
jo
and
(bad)
(bad)
jo
pop
cmp
sub
stc
mov
std
jne
adc
add
enter
push
add
pop
mov
mov
cwde
mov
sbb
adc
push
stc
aas
inc
ror
sub
add
jmp
inc
and
add
mov
mov
cli
clc
mov
lock
(bad)
in
call
inc
movs
xor
call
out
pop
xchg
test
aam
popa
push
ret
cmp
pop
imul
add
add
adc
pop
push
addr16
mov
adc
test
out
xchg
cmp
xlat
test
cmp
add
or
jns
or
add
out
pop
add
add
or
pushf
push
xor
int
sbb
das
hlt
inc
leave
imul
shl
int
xchg
add
mov
pop
jp
out
enter
fs
nop
xchg
add
add
lahf
inc
sti
add
push
div
or
test
cwde
repz
int3
int
loopne
jnp
mov
push
add
jae
lahf
pop
sub
loope
es
cmp
imul
dec
popa
xor
cs
dec
dec
pop
and
xor
xor
add
add
jmp
retf
push
fmul
push
cdq
xlat
out
or
add
add
pusha
or
push
mov
inc
je
aam
lahf
or
jmp
test
add
adc
int3
shr
xor
cld
in
jg
xchg
outs
sbb
sbb
ins
sbb
iret
test
add
outs
jb
mov
in
or
add
add
mov
aad
fwait
dec
mov
and
mov
aad
fcmovnu
mov
jnp
pusha
dec
mov
push
hlt
in
or
iret
mov
pop
ror
mov
mov
dec
xor
push
push
(bad)
add
add
adc
jmp
and
stos
call
fwait
mov
xor
ret
mov
test
jmp
add
add
ins
adc
jo
push
jmp
aad
and
in
test
mov
cmp
sub
jno
cmp
int
mov
pop
jmp
cwde
pop
add
inc
aad
(bad)
int3
out
add
pushf
jns
adc
add
add
add
sbb
mov
call
es
sub
dec
in
dec
and
dec
ins
fsub
mov
sub
and
and
test
push
jnp
add
and
pop
xchg
jno
add
(bad)
pop
push
and
dec
adc
add
dec
dec
shr
fld
cmp
mov
add
enter
fdiv
xchg
dec
test
mov
add
add
add
out
idiv
ffreep
cmps
pop
mov
mov
pop
(bad)
outs
add
add
test
cmps
mov
dec
adc
test
repnz
lahf
push
lock
cmps
imul
and
add
add
and
pop
imul
pop
out
std
popa
inc
xchg
jp
jae
inc
mov
lock
scas
push
dec
shl
inc
pushf
mov
cmc
dec
pop
mov
and
stos
xor
add
cli
loopne
add
xchg
in
jmp
loop
in
jns
scas
out
bound
add
sbb
cmp
mov
lahf
xchg
cmps
dec
jno
ffree
fstp
add
add
jno
push
js
xor
in
clc
sub
arpl
or
add
sar
push
dec
ds
fbstp
mov
sub
mov
call
mov
and
xor
jo
int
adc
dec
rol
popa
popa
sahf
es
or
add
add
cmp
jne
in
mov
mov
shr
add
(bad)
add
xor
xchg
and
les
mov
into
jmp
nop
pop
add
or
or
test
and
mov
add
add
adc
hlt
pop
mov
shl
inc
pop
push
(bad)
push
adc
xor
mov
add
add
jne
sub
jbe
inc
pop
cli
mov
adc
in
or
cmc
aaa
jno
mov
push
mov
add
sub
xor
xor
add
add
ret
push
mov
lods
dec
test
add
clc
js
cmp
add
add
outs
and
sub
dec
xor
xor
pop
or
call
adc
mov
add
pop
xchg
mul
lahf
repz
pop
arpl
leave
pop
pop
mov
bound
add
add
adc
out
push
cmps
xlat
or
imul
sahf
xchg
adc
out
mov
cs
xchg
xchg
cdq
pop
leave
pusha
mov
dec
add
cmps
enter
stos
inc
aaa
int
jle
jae
jge
into
push
fwait
push
xlat
sbb
std
add
add
xchg
cmp
(bad)
push
rcr
enter
inc
dec
push
daa
ret
xor
mov
pop
sub
mov
(bad)
hlt
inc
jmp
popf
ins
dec
xchg
and
ss
push
or
call
std
sbb
cmp
or
xchg
rcr
mov
inc
mov
sub
add
add
push
mov
(bad)
and
ss
or
add
lds
inc
pop
fcomp
out
add
or
out
ss
stos
sub
stos
adc
xchg
xchg
add
add
add
inc
nop
test
cmp
scas
and
xchg
out
jb
and
or
sar
aaa
jbe
pushf
or
cmp
cmp
mov
leave
push
aas
loopne
add
add
cmp
sub
dec
fmul
xor
inc
adc
sub
xchg
xor
add
add
sti
push
lahf
mov
jecxz
sbb
or
add
ds
mov
jne
or
jbe
add
add
jnp
sbb
xor
cld
les
bound
in
mov
or
add
pop
sub
add
push
stos
and
fiadd
xchg
jnp
lock
call
in
arpl
lods
xor
add
cld
or
imul
jo
lods
xchg
mov
add
aaa
adc
mov
pop
ja
fadd
add
and
imul
push
mov
xor
cmp
add
add
jmp
add
scas
xchg
sub
mov
(bad)
and
mov
retf
add
lods
or
lods
dec
into
add
add
lock
lods
mov
pushf
jne
outs
and
inc
(bad)
ds
daa
call
add
add
in
rol
das
add
repnz
nop
mov
ret
mov
mov
jp
jb
add
add
fwait
inc
sub
push
mov
push
lahf
sub
xor
gs
mov
dec
inc
pushf
xchg
and
add
add
push
xchg
inc
mov
pop
and
jge
in
push
lock
iret
(bad)
movd
inc
ins
clc
mov
add
and
add
jecxz
out
inc
cmp
or
lods
pop
push
fidiv
sub
or
test
push
mov
adc
rol
imul
push
outs
mov
xchg
xor
pop
xor
mov
inc
adc
push
xchg
ins
add
mov
xor
popf
mov
mov
add
mov
lds
add
add
aam
pop
icebp
mov
mov
cmp
ja
xor
add
cmp
mov
ins
jecxz
cmp
add
add
cmps
arpl
pop
mov
and
je
adc
dec
inc
sub
outs
xor
cmp
add
popa
xor
and
push
add
dec
add
call
xchg
fild
push
dec
lds
in
push
adc
add
push
pop
call
xchg
(bad)
mov
sbb
xchg
scas
adc
jne
loope
add
xor
pushf
cmp
and
ss
push
scas
rcl
adc
pushf
ins
ins
mov
add
movs
and
fwait
adc
outs
pop
mov
mov
dec
sub
jmp
outs
add
and
sub
mov
pop
sub
xchg
ficom
add
sbb
dec
imul
sbb
add
add
push
icebp
pop
ror
lods
jl
aaa
dec
push
aaa
or
cmp
retf
or
add
and
imul
cmp
je
add
dec
pop
pop
gs
cdq
imul
jecxz
xchg
pop
add
cdq
push
fnstcw
ds
jb
jne
xchg
or
push
sbb
lds
retf
pop
pop
cwde
nop
sbb
scas
cmp
inc
jo
test
jmp
hlt
sub
adc
scas
popa
xchg
dec
add
adc
add
add
mov
push
je
adc
xchg
jecxz
xchg
nop
add
add
push
pushf
popf
retf
mov
sub
fadd
mov
pop
clc
in
dec
test
add
ins
es
es
jb
jle
jbe
or
add
cmps
lea
lahf
in
add
loop
pop
cmc
stos
jp
add
inc
xchg
xor
or
out
pushf
mov
test
xchg
sub
daa
imul
add
add
add
fidivr
ss
jbe
xchg
inc
jo
fs
push
cmp
sub
and
dec
pop
add
in
adc
pop
aaa
lods
retf
outs
arpl
jecxz
addr16
sbb
add
add
sbb
mov
jno
leave
cmp
inc
add
adc
(bad)
pushfw
mov
fucom
mov
lea
add
mov
jmp
pop
into
sub
xchg
retf
movs
jg
xchg
mov
xchg
jl
sbb
mov
scas
sbb
push
test
jne
in
seto
xor
mov
shl
dec
scas
gs
jl
mov
call
mov
mov
add
into
out
nop
cmp
int3
jb
jle
dec
add
into
inc
ss
lds
repnz
leave
sbb
nop
jns
mov
add
in
iret
ds
ror
inc
in
retf
icebp
push
add
add
frstor
pop
popf
loopne
(bad)
push
xchg
fldcw
jmp
inc
mov
adc
cmp
adc
out
imul
xchg
or
sbb
js
and
(bad)
or
mov
add
or
cmp
add
xlat
xor
test
int3
mov
jmp
sub
sbb
ss
ds
ins
sub
xor
aad
stos
pandn
sbb
stc
out
mov
lahf
add
leave
mov
aas
cli
data16
push
mov
fdivr
jmp
adc
sahf
sub
outs
inc
shl
add
add
call
mov
pop
mov
mov
add
fisub
add
add
(bad)
bound
or
or
stc
pop
rol
leave
add
loopne
jnp
pop
mov
pop
or
adc
inc
add
add
xlat
add
loopne
iret
inc
ret
push
cmps
ret
adc
jmp
retf
sahf
ds
bnd
inc
dec
mov
mov
pop
jb
xchg
int
(bad)
jne
add
rol
cli
repz
pop
sahf
lods
jb
les
pop
sub
add
inc
sub
(bad)
dec
mov
(bad)
sbb
push
iret
out
xchg
cwde
push
mov
sub
mov
fs
pop
gs
sbb
jp
add
add
stos
mov
je
and
xchg
mov
sub
add
cmp
xor
pop
repnz
dec
cmc
shl
inc
lods
mov
(bad)
fwait
add
add
call
inc
jmp
adc
scas
es
jp
retf
add
add
movs
hlt
mov
adc
inc
ins
ja
xor
and
fadd
aas
inc
push
xor
add
and
xlat
sahf
loope
jno
adc
fdiv
mov
add
push
pusha
loopne
fiadd
iret
dec
or
adc
or
mov
xor
push
add
fcomp
ret
jge
adc
shl
sbb
and
mov
and
mov
adc
ss
stc
imul
loope
inc
add
les
mov
lods
iret
inc
pop
add
add
cmp
das
adc
dec
je
fstp
das
ss
iret
mov
and
fnstenv
or
mov
mov
enter
hlt
(bad)
jg
arpl
std
mov
push
mov
add
test
int3
retf
add
hlt
jge
rcr
mov
ss
std
add
sub
dec
sbb
and
cdq
rcr
add
scas
test
jle
(bad)
pop
call
fstp
dec
add
add
push
xchg
jmp
adc
xor
sub
xor
jl
cmp
add
cld
daa
les
xchg
pop
cmc
or
test
xchg
movs
es
fadd
add
add
ret
push
dec
adc
dec
fistp
xchg
inc
inc
adc
mov
jmp
push
xchg
into
scas
sar
add
out
push
add
adc
stos
push
test
leave
cmp
imul
pop
push
sbb
and
cmp
add
mov
in
ss
adc
add
add
mov
push
in
or
ja
sbb
and
dec
test
mov
out
xor
or
test
popa
pop
add
xlat
popf
cli
dec
cmp
add
add
inc
add
xor
push
jecxz
das
call
add
mov
mov
add
and
push
mov
pop
sub
xor
mov
add
sub
fist
sub
(bad)
dec
mov
iret
add
add
ds
pushf
sbb
jne
in
jmp
jo
dec
aaa
in
mov
add
and
add
add
imul
add
add
adc
inc
cs
mov
call
xor
gs
dec
mov
pop
ret
arpl
xor
lods
push
lahf
test
jo
adc
sub
add
add
sbb
mov
pop
fistp
stc
scas
outs
ret
mov
or
add
je
ret
mov
jp
or
sti
mov
xchg
add
add
push
sub
and
into
imul
sub
in
ror
je
add
loope
nop
add
mov
cdq
mov
popa
add
sbb
cmp
call
mov
add
pop
mov
sub
mul
pusha
pop
dec
nop
xchg
out
shr
and
cs
add
fcom
add
daa
idiv
add
outs
leave
ja
stc
mov
pop
jg
lock
xchg
xchg
sub
mov
inc
inc
pop
cwde
xchg
fwait
nop
outs
add
out
call
cmps
int3
sahf
out
sar
jae
inc
cmp
add
push
mov
mov
mov
pop
ja
push
bound
add
add
and
cmp
call
or
retf
out
es
fst
stos
mov
std
daa
gs
pop
aas
loop
add
add
sbb
mov
sub
fcomip
pop
xchg
movs
pop
mov
repz
sti
mov
add
inc
imul
jnp
test
adc
jno
mov
test
test
stos
cmp
fidiv
sub
mov
rcr
stc
gs
es
and
jns
loope
add
add
ss
add
test
(bad)
xchg
loop
je
sub
cdq
inc
scas
mov
push
scas
add
adc
push
pop
mov
gs
push
loop
jnp
mov
jl
in
sub
cmp
and
mov
(bad)
div
dec
in
add
shl
mov
xor
test
adc
xchg
in
xchg
mov
xchg
imul
or
cwde
and
call
jl
inc
fcmovnbe
cs
adc
cs
cmp
add
add
push
xor
mov
dec
adc
pop
jbe
or
cwde
adc
add
or
mov
cs
fbstp
mov
hlt
adc
jg
and
jp
stc
(bad)
cmps
mov
adc
add
push
mov
int
and
mov
iret
dec
xchg
cmp
add
jge
jno
push
and
push
mov
dec
fld
in
add
jle
nop
push
push
and
call
fcomip
jbe
repnz
add
add
sbb
jecxz
add
cmps
shl
retf
jns
or
data16
add
jecxz
es
or
pop
or
repnz
retf
jne
jne
cli
cdq
rol
add
in
icebp
pop
movs
repnz
data16
and
adc
mov
or
add
cli
sahf
stos
push
shl
ss
into
shr
mov
add
sbb
add
inc
lahf
sbb
sub
dec
pop
shl
aaa
sub
imul
cmp
jl
fwait
inc
adc
add
sar
jp
cmc
or
cs
jno
or
xor
add
(bad)
jbe
xchg
dec
ins
add
add
cmc
mov
and
jp
dec
cmps
mov
mov
cmp
jle
xchg
xchg
inc
xlat
add
add
scas
adc
shl
int
sbb
cmps
sbb
adc
inc
outs
retf
clc
shl
inc
rcr
xor
sub
icebp
add
add
cmps
test
out
dec
loop
stc
sbb
cwde
mov
je
mov
(bad)
into
inc
jb
jb
(bad)
inc
add
ja
fwait
cmps
es
mov
mov
jo
push
push
cmp
inc
out
jno
enter
lods
xchg
stc
sbb
add
add
inc
sar
mov
cmc
retf
sbb
jmp
xchg
rcl
mov
cs
mov
leave
sahf
jmp
or
add
push
out
shr
mov
mov
and
daa
in
mov
xlat
rcl
mov
mov
add
add
scas
jae
daa
or
cmp
mov
push
loope
scas
adc
mov
popf
sub
rcl
push
(bad)
arpl
jecxz
or
add
aad
icebp
in
imul
loope
movs
mov
ins
cmp
je
sti
mov
retf
xlat
lds
into
iret
jns
addr16
xor
add
jl
je
dec
dec
push
sub
xor
leave
neg
mov
mov
and
and
add
add
cwde
and
ins
cdq
sahf
dec
(bad)
(bad)
xor
pop
mov
push
and
ins
sbb
add
ret
sbb
dec
(bad)
(bad)
sbb
imul
int3
(bad)
pop
data16
mov
add
sub
lock
dec
mov
mov
in
dec
mov
add
rol
add
sbb
fdiv
ins
fs
or
cld
jp
push
push
test
cli
sar
mov
fld
mov
mov
add
and
sti
(bad)
nop
xor
inc
cdq
pop
addr16
inc
aad
pop
lea
xor
dec
and
push
push
fcomp
leave
push
xor
add
test
repnz
add
sub
stos
xor
pop
das
xor
int
xor
mov
(bad)
stos
test
xlat
adc
mov
mov
push
and
mov
adc
test
mov
out
jp
xchg
add
cmp
sub
stc
js
push
mov
jnp
add
cmp
cdq
dec
test
or
out
xor
call
mov
stos
xor
(bad)
xor
cmps
hlt
and
(bad)
fld
add
add
add
pop
sub
cld
retf
mov
or
fsub
add
add
int
inc
and
dec
fidiv
xchg
lock
pushf
out
adc
aam
add
add
mov
dec
arpl
and
loope
or
xor
pxor
push
sub
add
sahf
or
xor
xchg
movzx
js
mov
xor
add
add
xchg
and
ja
sub
mov
outs
or
retf
std
or
mov
jne
add
add
xchg
rol
bound
push
(bad)
hlt
call
jae
stc
pushf
pop
mov
add
and
add
mov
xor
xor
ins
sbb
leave
(bad)
xchg
(bad)
mov
and
add
add
push
xlat
xor
ins
or
fld
cmp
enter
sub
pop
add
add
pop
sub
ret
cld
fcomp
cld
repz
test
xlat
lahf
leave
jmp
inc
xor
pop
aas
stc
jae
in
jo
fild
and
add
add
add
cld
pop
dec
inc
lock
in
push
imul
mov
mov
shl
xchg
mov
mov
mov
test
adc
outs
push
push
fsub
inc
movs
out
mov
add
xchg
sti
pop
mov
xor
dec
xor
sbb
mov
add
add
xor
loopne
inc
pop
fstp
ins
mov
neg
dec
in
xchg
movs
mul
add
leave
mov
inc
cmp
xchg
pushf
inc
fisubr
out
std
mov
dec
lea
xor
xchg
pop
jecxz
add
test
dec
adc
xchg
jb
pop
ffreep
pop
or
ret
fmul
push
jns
pop
int3
or
sub
adc
add
repz
add
add
icebp
or
xor
clc
xor
fild
or
stos
push
sub
mov
add
jg
dec
jle
xchg
xlat
sub
or
lahf
popf
add
ds
ja
retf
retf
bnd
mov
add
sbb
(bad)
mov
or
pop
outs
leave
push
or
jecxz
pop
xlat
cmps
add
lock
mov
fdivr
test
fwait
add
add
clc
dec
push
mov
loop
push
sub
cmps
mov
jo
adc
sub
pop
or
add
or
jmp
and
jbe
sahf
pop
push
add
loopne
mov
adc
pop
push
pop
mov
fcomp
or
jecxz
xchg
sbb
fld
add
add
add
mov
or
es
cmp
inc
pop
cmp
cld
shl
push
add
add
lods
adc
cmp
push
pop
jl
stos
mov
fsub
jo
in
pusha
or
int3
mov
add
push
mov
stos
popa
and
cmp
dec
std
mov
pop
sub
out
inc
mov
(bad)
out
mov
dec
cmp
movs
mov
jbe
shr
pop
fst
mul
mov
es
dec
in
xor
fbstp
inc
scas
rol
out
jns
scas
mov
inc
or
add
add
loopne
dec
jns
inc
fnop
neg
es
xor
xor
push
gs
or
add
jg
xchg
jmp
add
jno
and
mul
push
loop
jne
and
and
gs
push
push
push
dec
test
xor
scas
stc
xlat
ret
dec
mov
push
xor
add
add
sahf
add
iret
jge
mov
cmp
lea
dec
inc
test
jl
add
add
add
fist
test
sbb
adc
adc
stos
pusha
pushf
outs
cmp
add
add
jno
add
inc
add
push
mov
pusha
dec
xor
in
add
inc
or
js
out
pop
xlat
shl
das
and
in
mov
xor
fild
or
sbb
lea
arpl
test
push
ins
mov
pop
popa
(bad)
out
dec
pop
mov
xchg
or
adc
stos
enter
ins
rcr
add
push
lock
add
add
jb
mov
and
call
call
dec
data16
pop
arpl
or
jl
mov
nop
xchg
mov
mov
sbb
pusha
xchg
lds
ins
ret
add
bt
loopne
or
adc
pop
sti
mov
in
xchg
push
add
add
scas
pop
call
dec
mov
pop
in
shl
stc
jbe
jle
jg
inc
lds
add
sub
dec
fmul
outs
fidivr
add
xchg
sbb
cmp
and
add
add
pop
mov
mov
mov
xchg
ret
scas
or
push
pop
mov
lock
add
lods
jp
xchg
mov
add
mul
adc
add
out
jmp
inc
mov
mov
ins
dec
shl
mov
add
and
cmp
(bad)
ds
fs
xchg
loopne
idiv
ss
adc
mov
add
(bad)
stc
enter
mov
pusha
xor
xchg
cmp
cmp
and
add
add
test
adc
push
mov
dec
mov
int3
repnz
add
test
(bad)
lods
shr
mov
pop
cmc
jmp
fimul
arpl
mov
add
pop
pusha
je
mov
or
shl
lock
or
ja
add
push
sbb
add
add
fistp
cli
mov
rcr
xchg
and
or
(bad)
fdiv
mov
xor
in
add
add
sub
not
scas
loope
into
mov
lock
fbstp
add
fst
mov
push
fsubr
mov
jp
test
scas
mov
mov
adc
add
mov
les
add
mov
dec
dec
lock
imul
add
mov
repz
lds
add
add
addr16
scas
jmp
mov
movs
adc
push
pop
bound
add
loop
lock
pop
add
jae
(bad)
cmps
ficomp
loopne
or
shl
sbb
add
add
idiv
mov
js
and
pop
sahf
xchg
push
js
call
out
or
nop
jmp
mov
mov
push
ret
stc
imul
push
jmp
call
leave
and
or
mov
cmp
add
mov
jecxz
or
cli
test
sub
add
mov
mov
ds
mov
jp
fild
add
push
dec
and
jecxz
push
sub
cli
loopne
gs
mov
retf
sbb
das
sar
fwait
push
shr
lds
add
rcl
jne
mov
inc
push
sbb
inc
cmp
jmp
rcr
retf
push
jae
xor
add
mov
jbe
or
stc
jmp
xor
jl
mov
add
and
std
adc
inc
shl
inc
push
sub
ret
sti
cmc
add
mov
push
pop
push
retf
sahf
leave
mov
push
repnz
or
sbb
in
xor
dec
or
out
das
mov
cmps
add
add
mov
xor
adc
out
ficom
cmp
jle
aaa
mov
or
jbe
push
jb
setae
aas
in
add
add
xor
sbb
mov
or
fsubr
jmp
inc
mov
add
add
sbb
das
arpl
pop
xor
push
leave
shl
mov
mov
retf
mov
sbb
and
cmp
shr
add
add
sar
dec
mov
in
call
test
loope
cmps
sbb
add
daa
add
add
xor
mov
sar
or
push
add
inc
icebp
xor
lahf
adc
fld
pop
inc
sub
sbb
clc
add
xor
adc
shr
stos
cs
outs
add
add
mov
add
adc
mov
test
mov
aad
ret
pusha
(bad)
rol
add
sub
out
cmp
ins
fcom
cmps
cli
inc
dec
test
ror
nop
pop
sbb
add
add
fs
shr
call
fld
sahf
sti
imul
pop
outs
test
and
jae
dec
jbe
add
in
inc
lock
lock
retf
xor
pop
fwait
mov
add
add
sub
add
adc
outs
push
mov
int
mov
inc
or
add
add
cs
push
inc
icebp
call
hlt
cli
inc
pop
cmp
mov
push
or
jmp
scas
xor
stos
aas
adc
imul
lds
mov
ret
add
add
repz
out
jo
xchg
push
jbe
cwde
stos
push
mov
push
es
ss
xchg
xchg
adc
add
mov
cmp
jns
jge
pop
add
add
pop
add
or
sti
(bad)
jbe
mov
push
cmp
xor
mov
or
add
retf
and
pop
dec
mov
mov
fidiv
add
shr
adc
cmp
adc
sbb
push
loope
inc
int
cmp
add
dec
mov
inc
loopne
ins
xor
add
add
and
pop
jmp
lock
fistp
jmp
repz
dec
jbe
mov
bound
cmp
push
cmp
adc
add
inc
out
ja
sar
and
out
push
lock
pop
add
xor
fnstsw
cmp
iret
pop
lahf
sbb
dec
xchg
ds
adc
add
add
cmp
out
xchg
aam
test
inc
int
mov
push
out
and
mov
or
(bad)
(bad)
enter
add
add
outs
push
rcl
mov
xchg
push
int
ret
lock
mul
or
jmp
jo
mov
add
cld
sbb
xor
push
jno
adc
lods
mov
push
mov
fnstsw
sub
add
add
jo
leave
mov
div
js
add
push
adc
or
mov
popa
data16
(bad)
mov
shl
cmp
pop
xchg
test
xchg
pop
jo
int3
mov
mov
das
scas
in
push
mov
mov
pop
xchg
xor
add
or
dec
and
jno
mov
ret
cmc
and
dec
dec
add
add
mul
sar
popf
pop
int3
fwait
push
jl
sub
mov
xchg
mov
int
xchg
ret
cmp
add
ret
cmp
mov
(bad)
fldcw
sub
js
daa
aad
aad
dec
inc
mov
adc
add
add
ja
xchg
dec
lock
lea
dec
js
push
enter
sbb
add
xchg
jbe
cmp
dec
add
cmp
lods
movs
ins
stc
mov
fisttp
jl
or
fbstp
iret
sub
and
adc
sbb
jecxz
cmp
or
jb
jbe
add
rcr
cmp
pop
push
out
nop
call
jmp
int3
inc
xlat
xchg
add
hlt
out
or
mov
sub
(bad)
out
lea
lds
imul
pop
outs
cld
add
jp
pop
dec
jne
out
outs
push
cli
pop
xor
add
ss
dec
outs
iret
std
ret
int3
xchg
inc
xor
fsubr
das
and
add
dec
pop
xchg
xchg
enter
sub
and
jne
stos
mov
xchg
xchg
aas
sbb
ret
dec
push
mov
inc
cli
cmp
add
sbb
adc
sub
in
int
rcr
(bad)
arpl
add
add
pop
jmp
sbb
adc
jmp
loopne
push
inc
loop
push
dec
dec
std
add
add
sahf
sbb
es
inc
das
out
retf
int
outs
lock
leave
(bad)
add
add
push
out
(bad)
sbb
test
mov
popa
xor
xor
imul
jge
les
add
add
outs
stos
sub
mov
mov
sbb
xor
and
fwait
mov
sbb
add
add
xor
inc
ins
jp
add
lock
jb
clc
jle
test
push
retf
movs
mov
mov
and
add
popa
jae
idiv
lock
scas
cdq
shl
adc
add
add
rol
dec
adc
cmp
fistp
pop
enter
pop
pop
xor
das
jmp
jle
adc
dec
sbb
jle
loope
sub
pusha
sub
dec
mov
in
imul
sbb
inc
call
pop
add
add
mov
inc
pop
test
fcomi
or
iret
mov
jle
(bad)
dec
stos
sub
add
outs
push
mov
mov
mov
fcom
add
add
add
je
nop
mov
xor
jl
or
sub
inc
adc
add
add
inc
sub
nop
mov
sbb
adc
xchg
in
mov
ret
mov
adc
add
xchg
cmc
dec
das
push
xor
jns
in
mov
push
add
add
adc
push
repnz
out
push
or
enter
cwde
or
xor
mov
dec
loop
in
sub
add
adc
jbe
pop
imul
rcl
or
sbb
add
xor
fwait
test
mov
inc
ins
inc
jle
push
mov
inc
add
add
mov
mov
ins
xor
sbb
add
adc
xchg
push
gs
es
sbb
add
add
shr
outs
or
and
add
cmps
mov
push
fadd
xor
add
mov
aaa
loopne
pop
sahf
inc
arpl
ins
in
mov
add
add
outs
fidivr
lds
add
out
push
clc
mov
add
dec
test
loopne
movs
pop
shl
sbb
je
inc
push
mov
cwde
fwait
or
add
mov
out
fstp
push
sbb
sub
jmp
sbb
xor
jg
in
mov
pop
pop
aam
or
or
add
add
sbb
rol
in
arpl
add
or
push
clc
push
gs
mov
cmp
xchg
jo
add
dec
add
or
test
ret
xchg
add
fld
add
cld
(bad)
adc
stos
and
leave
lds
dec
push
or
add
add
push
dec
icebp
retf
bound
stos
into
xor
push
repnz
inc
arpl
add
xchg
or
add
cmp
cdq
sbb
pop
push
jno
ins
and
add
inc
cmp
push
inc
(bad)
shr
repz
out
mov
add
adc
iret
and
cmp
push
or
dec
mov
les
fwait
cld
xor
mov
xor
fnstcw
add
add
xchg
out
xor
push
int
push
in
and
xor
cmp
cmp
inc
add
add
mov
outs
adc
push
push
or
sub
cwde
push
jg
jl
div
out
cmp
pop
add
in
popa
inc
ret
fwait
mov
jg
int3
arpl
pop
mov
add
popf
mov
fs
dec
or
mov
outs
and
(bad)
mov
mov
add
pusha
sub
cmp
or
jnp
add
imul
mov
loop
retf
sar
add
add
in
xchg
inc
mov
sar
xchg
adc
push
push
xchg
adc
sub
push
pushf
sub
cld
push
add
push
dec
not
mov
enter
or
add
cmp
xchg
test
in
sub
push
or
outs
mov
lahf
add
add
add
mov
popa
out
cmp
mov
push
add
add
xchg
push
jle
int
fs
cmc
lds
adc
and
add
mov
ins
xor
call
mov
push
add
add
fnstsw
(bad)
div
cmps
retf
pusha
in
stos
dec
out
addr16
ja
and
mov
lds
rcr
add
add
xchg
scas
adc
lock
mul
mov
rcl
jmp
icebp
pop
movs
in
cli
arpl
test
lea
jo
ins
setp
xor
push
xor
mov
test
cmp
mov
fldenv
or
push
lods
and
call
jg
cmp
aad
inc
add
add
xchg
inc
push
je
xchg
sub
adc
iret
pop
leave
pop
jecxz
xor
add
not
fwait
lea
mov
xchg
stos
pop
call
push
dec
add
push
cmps
pop
pop
aas
inc
dec
xlat
jb
lock
mov
loopne
xchg
les
adc
add
movs
nop
mov
aas
sbb
add
(bad)
mov
lods
ins
adc
loop
add
add
retf
xor
(bad)
fidiv
test
xor
ins
mov
mov
jge
jp
je
fisttp
add
test
mov
scas
mov
mov
es
add
add
rol
call
scas
shr
add
pop
and
pop
retf
adc
aas
sar
test
inc
leave
ss
pusha
into
idiv
sub
ds
add
rol
and
sbb
push
xor
jl
cmp
push
pop
shl
pusha
or
push
pop
add
add
jle
pop
mov
pop
sbb
xchg
push
push
leave
mov
xor
push
test
cli
cmp
mov
cs
push
adc
adc
add
add
imul
dec
push
jg
xchg
mov
es
movs
add
add
xchg
imul
fcmove
into
sub
xlat
jge
sahf
mov
mov
outs
hlt
adc
ds
mov
(bad)
mov
inc
sbb
or
test
jge
sbb
rdseed
pop
inc
es
or
fidiv
out
lods
adc
mov
mul
fwait
lods
mov
retf
inc
mov
adc
adc
mov
add
mov
sbb
retf
(bad)
in
xor
cmp
popf
inc
jne
push
sub
add
add
xor
(bad)
cmp
cmps
add
(bad)
xchg
cmp
jecxz
push
inc
lds
add
add
movs
jmp
mov
cwde
inc
cwde
xlat
(bad)
mov
pop
xor
cwde
push
add
sub
mov
adc
fcomp
jns
sub
add
add
xor
and
cmp
outs
lahf
mov
xchg
test
xchg
add
nop
dec
cmp
dec
lahf
inc
inc
inc
adc
cmp
jecxz
or
and
or
jo
loopne
pushf
sbb
adc
add
add
xchg
jl
xor
arpl
mov
push
inc
and
or
std
es
sar
pop
fldcw
add
popa
int3
retf
nop
(bad)
jo
aam
pushaw
push
add
add
leave
push
fist
sub
out
popa
cmp
inc
movs
adc
add
push
xchg
sbb
cmp
xor
inc
pop
call
loopne
test
add
cmp
mov
mov
jbe
add
add
lock
ret
or
repz
cmps
ja
cmp
cmp
jns
and
fs
adc
add
add
sub
aas
retf
add
inc
adc
jo
sahf
add
test
(bad)
loop
pop
add
push
adc
mov
push
jns
mov
fdiv
mov
ja
sbb
lea
xor
mov
xor
adc
jmp
outs
test
dec
jnp
add
add
push
xchg
pop
dec
dec
mov
jno
es
jbe
mov
int3
mov
add
sar
cwde
ss
cmp
shl
cmp
sar
jne
test
rol
add
push
jns
and
push
data16
pop
cmp
mov
mov
into
test
sbb
iret
xor
add
add
mov
int3
enter
sub
mov
(bad)
fcomp
out
or
sahf
addr16
mov
and
add
rcr
mov
add
pop
pop
and
je
add
add
add
pusha
imul
add
add
mov
fnstenv
cmp
test
push
out
add
and
pop
cmp
shl
add
push
cwde
cmp
sti
xor
pop
or
test
add
es
or
in
mov
jo
out
xchg
sub
repnz
jmp
add
add
push
mov
loopne
bound
outs
or
shl
dec
jp
add
add
outs
push
imul
jbe
(bad)
mov
and
cmp
jmp
mov
call
xchg
sar
sbb
and
dec
jl
shl
add
fisttp
gs
add
mov
inc
mov
add
rol
leave
push
xor
sbb
movs
ret
ret
add
add
fs
aaa
pop
inc
arpl
jbe
fistp
test
ja
lods
cmps
mov
pusha
or
fsub
inc
or
jl
mov
adc
add
rep
sbb
sub
into
imul
(bad)
mov
dec
in
push
ret
in
jnp
pushf
and
les
(bad)
jmp
daa
push
or
loop
fwait
push
hlt
neg
pop
int
iret
add
test
lods
mov
pop
add
add
xlat
loopne
(bad)
div
in
mov
xchg
hlt
hlt
mov
sub
or
add
adc
and
jne
fisubr
pusha
sbb
outs
loopne
xchg
jne
js
add
test
nop
add
sub
es
into
stos
hlt
add
inc
(bad)
aaa
add
add
dec
sbb
pop
push
push
sub
mov
mov
add
add
mov
mov
in
clc
mov
pop
jmp
xchg
stc
popf
xor
inc
sahf
or
loopne
add
sub
jb
sbb
jmp
outs
fistp
add
add
add
fild
bound
cmp
sub
std
lods
scas
rol
add
in
aaa
das
daa
push
arpl
cmp
jg
fisttp
fdivp
shr
xor
dec
mov
out
retf
adc
sbb
push
jp
scas
and
ja
out
inc
push
mov
pop
repnz
rep
cwde
cmp
or
adc
add
add
xor
xor
or
xchg
mul
jne
pop
adc
add
mov
and
rol
pop
and
repz
mov
dec
sbb
add
and
idiv
cmp
inc
js
xor
pop
jecxz
retf
jno
add
add
inc
mov
mov
push
pop
inc
(bad)
(bad)
enter
push
inc
sub
bound
mov
rcl
sub
add
xor
gs
mov
pushf
cdq
scas
js
aad
lods
mov
mov
or
mov
mov
adc
add
add
loopne
cmps
loopne
test
mov
outs
nop
sbb
das
sbb
div
xchg
and
jmp
jae
add
add
xchg
fwait
xchg
ds
shl
cmps
iret
sbb
sub
and
inc
sub
mov
mov
inc
mov
cli
sub
add
pop
xchg
into
imul
movs
push
push
add
add
cmps
mov
lods
and
setns
lods
sub
mov
xchg
out
add
out
(bad)
js
ficom
dec
push
sahf
and
and
cmps
stos
adc
adc
adc
les
jae
add
add
rcl
sub
pusha
stc
fs
enter
xchg
pop
jnp
pusha
fs
pop
into
mov
or
test
xchg
les
addr16
imul
les
leave
mov
mov
test
push
cmp
cmp
mov
adc
add
aad
add
add
add
cmps
mov
mov
test
out
into
outs
gs
add
rcl
ins
push
sub
pusha
adc
test
mov
test
add
lahf
(bad)
pop
sbb
add
jl
sar
jg
adc
inc
pop
add
add
out
fiadd
inc
call
mov
scas
out
ss
add
adc
cmc
mov
cmp
or
push
shr
inc
add
stos
or
ins
mov
cwde
shl
fs
mov
les
out
or
cmp
add
add
ret
add
in
pop
int3
push
xor
repnz
mov
cli
fadd
add
mov
pop
rcl
outs
xor
in
add
add
and
xor
addr16
pop
sahf
sub
mov
fwait
pop
add
shl
not
add
(bad)
mov
xor
addr16
enter
add
add
mov
scas
or
jno
jl
popf
(bad)
mov
mov
push
mov
test
add
or
sub
mov
pop
out
ss
fdivr
inc
adc
aam
fistp
pop
in
mov
xchg
movs
mov
into
out
mov
mov
cwde
add
sub
cmp
add
xchg
inc
pop
ins
cli
and
dec
popf
or
pop
push
sbb
mov
pop
inc
adc
add
das
jnp
push
xor
add
add
jmp
sbb
movs
push
inc
test
test
fimul
(bad)
scas
sub
or
add
sub
imul
push
loop
add
add
stos
data16
dec
scas
pop
and
mov
sbb
adc
inc
and
pop
add
add
pop
ins
int
pop
push
dec
rcl
mov
(bad)
hlt
cmps
ins
xor
jl
jns
dec
fist
xor
add
add
daa
fnstenv
mov
das
les
lods
mov
dec
jnp
xor
mov
xchg
les
loop
add
inc
jle
or
fld
and
adc
movs
sti
jmp
or
lock
cmp
call
cs
call
push
mov
add
add
dec
mov
sti
adc
cdq
imul
add
fadd
rcr
out
xchg
add
push
sar
add
add
scas
les
aaa
int
adc
and
push
out
add
outs
adc
xor
add
and
or
pop
cmc
in
repz
jge
lock
repnz
sbb
or
adc
mov
lock
sbb
add
out
push
sbb
sub
lahf
mov
int
test
mov
xor
sbb
iret
adc
xor
inc
hlt
sbb
(bad)
cwde
pushf
add
add
sbb
ror
test
mov
adc
push
inc
jge
xchg
sar
sbb
or
cmc
mov
add
add
jb
lods
clc
cld
or
mov
sub
int
test
(bad)
sub
aaa
mov
outs
or
add
(bad)
xor
and
(bad)
mov
out
jnp
xchg
sub
push
adc
add
mov
in
jne
out
push
(bad)
jg
mov
cmp
jp
fsin
jns
add
add
cwde
pop
sar
repz
add
sub
mov
je
mov
add
cmp
mov
(bad)
stos
jmp
add
pop
add
add
jmp
mov
jl
lock
jmp
fld
jmp
in
add
call
mov
sub
mov
xchg
and
xchg
jg
je
xor
push
add
mov
scas
xor
cvtps2pi
test
add
jmp
cmp
jb
add
pop
inc
add
mov
or
mov
add
fist
jle
ret
jbe
retf
das
pop
sahf
test
mov
dec
inc
test
sbb
xchg
dec
loopne
and
push
(bad)
cmp
push
cs
lahf
inc
push
sbb
add
add
cmps
repz
enter
push
sbb
popa
inc
inc
push
dec
and
lock
(bad)
add
add
or
not
aas
mov
test
(bad)
mov
sub
sub
add
push
inc
out
jp
xchg
sub
xor
into
mov
adc
add
fstp
xchg
sbb
gs
ins
jecxz
jae
sbb
rol
inc
std
sbb
sub
add
add
pusha
ds
jmp
das
cs
or
mov
retf
iret
push
add
mov
mov
rcr
sbb
repz
add
out
pop
pop
mov
sbb
fsub
add
dec
fwait
xor
mov
mov
pop
xlat
nop
in
lock
jp
jmp
test
xchg
add
add
cmp
test
push
(bad)
retf
sbb
jno
add
xchg
lods
push
adc
add
add
inc
mov
or
test
lea
std
cli
xchg
xchg
inc
repnz
popa
fdivp
xor
add
add
mov
cmp
pushf
inc
ror
jb
scas
sub
out
mov
mov
movs
pop
add
add
inc
xchg
mov
dec
sub
add
imul
aad
movs
cmp
mov
jp
mov
xchg
pop
fwait
adc
pop
daa
int3
sbb
xor
je
xchg
mov
shl
and
jg
mov
add
fiadd
je
xchg
xchg
imul
icebp
(bad)
pop
cdq
popf
mov
jmp
cmps
xchg
int3
cmp
xchg
add
add
out
js
hlt
call
pop
les
leave
and
fdivr
leave
retf
mov
add
add
jmp
jo
or
dec
mov
lds
xchg
(bad)
pop
cmps
dec
into
pushf
nop
lahf
addr16
mov
xchg
jo
out
lods
scas
into
mov
add
add
adc
sub
lods
mov
cmps
aas
and
adc
add
add
jge
xchg
add
add
push
sbb
call
fild
mov
xlat
std
ret
inc
push
mov
add
add
sub
mov
jle
(bad)
xlat
pop
nop
and
test
add
add
xor
icebp
mov
jno
mov
js
shl
jecxz
inc
xor
sahf
ins
loope
repnz
add
pop
or
shr
xor
popa
mov
xor
jno
fisubr
retf
lock
inc
adc
shl
xchg
or
test
sbb
add
push
dec
push
sti
fucomp
inc
cmp
adc
ficomp
out
jnp
loop
add
xor
sbb
mov
push
adc
enter
(bad)
mov
xchg
jne
cwde
lds
mov
sbb
movs
fwait
pop
adc
pop
(bad)
ret
aas
icebp
add
add
or
push
dec
xchg
pop
add
rcr
cs
fld
lea
xchg
add
pop
shl
mov
mov
and
add
add
arpl
sub
mov
add
adc
loopne
mov
fs
lea
nop
ds
and
add
mov
pop
mov
ja
out
nop
add
add
pop
call
mov
jp
icebp
adc
xchg
gs
cmc
inc
cli
mov
adc
sub
test
push
sbb
lds
jp
mov
xchg
inc
and
inc
sbb
in
vpaddsb
add
scas
xchg
add
add
pop
loopne
and
test
js
xor
aam
dec
scas
xchg
inc
add
add
mov
jp
fimul
and
in
loop
inc
cmp
js
inc
mov
arpl
add
lock
xchg
jnp
or
adc
cmp
push
add
add
scas
cli
xchg
fbld
mov
stos
mov
and
out
xchg
out
lods
mov
or
scas
out
and
add
clc
scas
xchg
aas
push
movs
mov
sub
outs
xor
daa
pop
adc
add
xchg
dec
icebp
jne
mov
stos
cli
imul
add
add
mov
or
paddusb
add
pop
pop
aad
push
es
outs
jae
stos
push
add
add
iret
ss
jge
pop
jl
imul
popa
add
fstcw
das
sub
into
std
add
outs
fdiv
push
bound
sub
sahf
adc
push
add
dec
or
xor
inc
xlat
push
(bad)
(bad)
fnsave
shl
mov
push
cmp
fst
(bad)
test
dec
imul
pop
movs
cld
mov
pop
stos
pop
inc
xor
add
add
fidivr
imul
xchg
xor
sbb
inc
iret
fisub
dec
(bad)
clc
icebp
sub
test
add
inc
ss
(bad)
in
inc
fbld
ja
shl
retf
xor
add
call
into
in
stos
or
mov
sub
add
mov
jle
xor
movs
sbb
mov
add
add
inc
sbb
cwde
lahf
pop
in
add
adc
adc
imul
xchg
out
add
add
pop
test
jnp
mov
out
enter
repnz
sub
jb
jnp
cmp
dec
add
add
scas
call
sbb
out
sbb
mov
cmps
dec
hlt
add
dec
in
shl
mov
add
ss
push
push
mov
mov
add
arpl
out
sbb
fld1
add
outs
dec
xchg
(bad)
cmp
and
or
outs
add
aaa
sub
sub
adc
inc
fidiv
into
add
add
cs
dec
movs
jbe
jne
loop
xchg
enter
inc
ja
push
jge
(bad)
test
cmp
mov
add
inc
sub
loopne
icebp
cmp
out
push
sti
add
sti
sbb
(bad)
test
sbb
stos
or
add
pop
push
fwait
or
hlt
mov
je
leave
mov
sbb
xchg
clc
sar
jp
add
mov
dec
shl
ds
inc
gs
mov
sub
add
pop
outs
adc
cmp
movs
xor
or
add
add
je
pop
lock
jne
fst
fcmovne
mov
push
mov
out
jae
push
cmp
inc
xor
or
inc
xchg
scas
stos
(bad)
lds
(bad)
cmp
in
lock
mov
cld
imul
add
add
xchg
aad
int
dec
push
adc
gs
push
cs
aaa
rcl
mov
add
arpl
push
shl
jle
pusha
cmp
add
inc
dec
cmp
sub
xor
aaa
add
add
sbb
xchg
movs
cld
sbb
cli
lock
(bad)
jecxz
in
nop
add
add
fst
es
add
add
mov
loope
fs
cdq
or
popf
xchg
inc
add
inc
xchg
inc
jbe
rcr
add
daa
pop
pop
xchg
add
sbb
mov
ins
add
test
xchg
mov
add
jbe
arpl
cld
cmc
push
idiv
sub
lds
jo
adc
icebp
iret
mov
and
or
lahf
ret
cmp
inc
push
or
mov
jo
or
jl
jnp
add
add
add
mov
jae
aad
outs
std
sbb
ror
sbb
push
movs
sahf
scas
mov
adc
add
add
dec
sti
movs
pusha
lea
fmul
inc
cmp
sbb
sahf
and
ds
inc
lea
add
mov
faddp
(bad)
pop
icebp
imul
(bad)
and
mov
push
and
adc
add
adc
add
add
call
gs
ficomp
pop
cli
daa
cdq
inc
shr
sub
or
lock
invd
add
add
mov
dec
fcomp
dec
push
repnz
add
imul
leave
inc
xchg
je
mov
pusha
adc
jo
in
sub
int3
jbe
test
pop
xchg
add
add
mov
adc
(bad)
mov
add
(bad)
std
cmps
mov
out
out
dec
xor
jmp
push
mov
add
rol
xchg
fwait
stos
mov
xchg
mov
inc
ficom
cmp
mov
ins
enter
test
add
add
sub
pop
cmp
shr
dec
jo
mov
cmc
or
sbb
add
xchg
xchg
mov
bound
add
fisubr
add
cld
movs
sub
jmp
jmp
sbb
cmp
add
xchg
jae
jecxz
cmp
add
mov
push
add
add
mov
out
fcmove
or
aas
iret
dec
and
xchg
fdivr
and
add
xchg
mov
test
push
mov
push
outs
mov
shl
outs
mov
add
cmp
out
push
add
add
dec
stos
jecxz
imul
xor
into
mov
xlat
jnp
in
push
std
arpl
lods
int
xchg
mov
pushf
add
fnstenv
mov
add
lahf
or
xchg
pop
push
dec
(bad)
sub
in
and
jb
add
ret
mov
add
jl
ds
sar
xor
aaa
(bad)
mov
push
push
ss
or
sti
jl
mov
mov
adc
out
cmp
aaa
add
add
cmp
call
and
mov
ja
jmp
xor
sbb
sbb
add
pop
cdq
js
jmp
test
test
push
int
ret
and
fs
pop
dec
fdivrp
dec
call
scas
mov
ja
repnz
add
dec
daa
ds
mov
cld
jle
and
mov
add
add
inc
adc
enter
stc
fldcw
inc
iret
jg
add
adc
test
mov
add
add
adc
jge
shl
jmp
xchg
ins
sbb
arpl
cmp
fs
in
xchg
mov
add
mov
and
enter
jb
sbb
and
mov
sti
jmp
add
ret
in
mov
lea
mov
test
add
jns
jo
aam
mov
in
push
sti
add
neg
dec
(bad)
sub
add
dec
inc
add
xchg
xor
repnz
fadd
add
dec
movs
inc
dec
retf
out
iret
or
cld
adc
add
je
or
(bad)
out
add
add
inc
call
fnsave
add
bound
sbb
movs
(bad)
xchg
xlat
stos
pushf
adc
pusha
cmps
jle
call
dec
lds
fisub
push
pop
mov
jmp
shl
lods
adc
movs
xchg
les
add
test
sub
lods
mov
add
mov
pusha
push
int
inc
mov
or
add
pop
push
cmp
fisubr
adc
sahf
sbb
stos
sbb
sbb
xor
sbb
add
cmps
mov
mov
xchg
out
mov
call
fimul
add
add
pushf
add
add
lea
or
sahf
mov
stc
mov
add
add
fld
sbb
fwait
mov
js
xor
repz
and
aas
ror
rcl
sahf
scas
pop
inc
sar
ret
add
add
pushf
xor
inc
(bad)
jb
pop
mov
in
out
and
imul
cmp
add
(bad)
imul
xchg
fsubr
xlat
pop
addr16
cmp
xchg
add
add
stos
das
in
dec
test
dec
ins
or
add
retf
cmp
add
add
add
movs
inc
sbb
push
popa
cmp
adc
bound
mov
inc
mov
mov
sbb
add
in
xlat
xchg
nop
or
xor
sbb
pop
(bad)
cmp
int
and
jl
mov
jnp
loop
addr16
into
lods
adc
add
out
jno
cmovo
add
sbb
sbb
sub
jnp
push
or
inc
or
add
mov
mov
sahf
mov
sbb
sub
and
hlt
or
or
fbld
test
movs
jns
nop
dec
or
pop
jecxz
movs
aas
in
or
add
add
adc
idiv
push
outs
add
pop
xor
push
inc
xlat
dec
cmp
(bad)
movs
iret
(bad)
bound
and
data16
push
inc
into
pop
adc
xchg
rcr
pop
mov
call
mov
add
inc
cmp
int
repz
mov
dec
das
sbb
jg
add
mov
jno
(bad)
cmp
stos
cmps
lods
mov
ror
add
add
inc
jg
loopne
cmc
mov
dec
dec
pusha
ins
pop
std
xchg
lods
dec
xchg
mov
aaa
in
ror
add
mov
les
sbb
fisttp
add
fs
add
add
jnp
popf
dec
imul
ja
pop
rol
aam
or
mov
jo
pop
add
(bad)
push
out
jmp
adc
dec
add
add
jbe
jns
fsubr
add
adc
ds
inc
pop
imul
sbb
add
add
pop
mov
lahf
loop
sbb
pop
into
or
jns
loopne
or
xchg
add
and
pop
cmp
mov
lods
jb
xor
push
out
adc
add
icebp
sub
jno
leave
ja
sub
pop
add
ret
xchg
dec
inc
add
sbb
mov
cmps
mov
add
add
stos
xchg
repz
xchg
jmp
cmc
mov
sub
and
cmp
add
add
mov
jle
mov
jno
adc
movs
sbb
mov
mov
mov
xchg
pop
scas
or
add
scas
clc
pushf
jecxz
rcl
das
pop
lea
pusha
iret
frstor
fistp
inc
adc
ja
dec
jbe
add
iret
adc
stos
xor
push
adc
add
xchg
jnp
daa
mov
neg
clc
cmp
add
add
movs
xor
inc
arpl
int3
xchg
pop
pop
imul
pushf
jno
xchg
ds
add
inc
or
outs
rcr
retf
add
add
inc
nop
xor
add
xor
push
das
mov
mov
aaa
mov
cmc
(bad)
jmp
inc
bound
adc
add
clc
into
cld
add
add
sub
lock
add
add
pop
pop
inc
and
adc
cmps
pop
xchg
mov
mov
push
leave
add
add
cmp
and
scas
adc
pop
dec
or
sub
std
sub
mov
xchg
add
add
cmp
popf
push
dec
add
scas
jno
loopne
cmps
or
rcl
bound
inc
inc
sbb
add
add
pop
mov
add
psrad
adc
or
add
mov
push
mov
outs
les
or
add
add
or
dec
retf
sbb
xchg
popa
outs
loop
lock
rcl
sbb
add
inc
clc
push
inc
mov
dec
xlat
sbb
loopne
cmps
movs
mov
mov
add
rol
xor
xchg
fstp
aam
cli
or
push
mov
shl
add
add
lods
adc
and
lods
retf
ins
jns
mov
iret
sbb
push
add
mov
cmp
or
cmp
int3
ds
sbb
mov
fistp
out
push
mov
add
jl
inc
jno
sbb
mov
les
mov
sgdtd
aam
fadd
lods
and
cmp
dec
mov
loopne
xchg
enter
test
and
inc
mov
mov
call
mov
add
cdq
adc
xor
sbb
retf
xchg
test
add
inc
sbb
pushf
add
mov
and
pop
pop
movs
jae
jo
cmp
add
bnd
push
mov
jge
sub
xchg
stos
inc
mov
mov
and
mov
out
add
or
mov
inc
cdq
jmp
enter
test
cmps
gs
push
bound
mov
add
repz
and
fimul
mov
imul
jecxz
into
pop
dec
cmp
inc
push
add
mov
aam
sbb
(bad)
popf
fild
retf
push
sbb
add
inc
xchg
pop
stos
mov
nop
enter
xor
push
aas
enter
and
add
mov
push
pop
nop
leave
cmps
push
mov
add
jl
loop
sbb
(bad)
cmps
add
test
pop
jno
out
sar
lds
add
jle
and
js
push
jnp
push
adc
dec
mov
icebp
jmp
cwde
jg
add
add
call
mov
scas
push
movs
fdiv
rol
(bad)
xchg
push
das
xor
pop
add
xchg
popa
in
inc
enter
inc
call
add
add
(bad)
ins
lods
loop
mov
les
inc
pop
out
dec
dec
cmp
(bad)
daa
ins
xlat
pop
fwait
lods
or
xchg
push
adc
mov
and
rol
add
fld
mov
push
leave
lea
loopne
add
or
ret
cmps
scas
ret
inc
inc
add
cs
add
add
ror
test
movs
adc
movs
xor
jne
aad
mov
inc
out
mov
add
std
sbb
test
scas
xchg
or
add
mov
mov
xchg
mov
pop
or
cdq
inc
add
jbe
mov
mov
adc
rcr
ds
mov
das
call
(bad)
test
(bad)
repnz
jnp
mov
jno
int
lods
and
mov
or
xchg
ficomp
pop
(bad)
div
xchg
stos
add
add
shl
inc
push
retf
shl
sahf
rol
fnstcw
ret
or
xchg
in
dec
out
push
and
add
jno
xor
inc
adc
test
cli
ds
sbb
add
xor
(bad)
cmp
lahf
lods
pop
push
add
add
retf
jno
cwde
inc
inc
lods
in
int3
cmp
dec
and
sub
sub
arpl
mov
fstp
jp
add
or
jno
sub
call
add
add
or
pop
icebp
xchg
xlat
inc
add
cs
inc
xlat
lahf
mov
out
ficomp
add
cmp
fstp
lods
shl
xchg
inc
movs
mov
push
sbb
(bad)
retf
mov
or
add
add
repnz
mov
add
pop
or
pop
test
fild
cmp
sbb
dec
loop
cwde
xchg
add
fcmovnu
push
fs
xchg
loope
js
rol
inc
call
int3
sbb
pushf
jmp
mov
sbb
out
xor
arpl
xor
add
add
inc
cmp
sub
(bad)
int
pushf
and
and
push
scas
mov
sti
cdq
dec
push
jecxz
mov
cmp
leave
stc
pop
rol
mov
push
pop
and
sti
xor
cld
cmp
add
add
inc
add
xor
cmp
sbb
bound
push
dec
dec
mov
fild
jb
gs
cmps
push
mov
ja
mov
pop
xor
add
out
je
mul
xchg
jge
(bad)
cmp
sbb
push
add
pushf
test
add
or
inc
sub
mov
xor
add
add
jno
hlt
ins
leave
stos
lahf
mov
push
(bad)
jnp
cmp
cmps
out
sub
sahf
popf
icebp
enter
(bad)
(bad)
push
popa
add
mov
cmp
push
or
jl
fdiv
fwait
mov
jp
xchg
mov
test
stos
and
mov
push
lea
and
add
sbb
lahf
test
test
imul
add
adc
mov
mov
push
syscall
inc
ja
das
cmp
cwde
pop
or
clc
lods
push
add
add
mov
fsubp
jns
test
jmp
pop
xor
dec
(bad)
mov
add
add
pushf
push
sub
push
push
addr16
mov
pop
enter
sbb
mov
pop
mov
add
add
cmp
stc
call
js
ja
cs
add
pop
out
push
dec
popf
add
retf
sbb
mov
dec
out
or
mov
add
dec
not
je
cmps
cs
pop
push
add
add
or
loopne
jg
ja
jecxz
test
cmp
lods
pop
jmp
mov
xor
add
push
add
push
and
fsub
add
sbb
sub
add
rol
cmp
pusha
mov
add
add
add
mov
sub
pop
jl
rcl
cdq
cmp
stos
sbb
xchg
lds
add
xor
cmova
bound
inc
out
cs
pop
loopne
add
adc
dec
add
add
(bad)
adc
in
jg
add
cmp
ins
mov
movs
push
dec
je
lods
push
adc
sbb
add
inc
xor
call
xor
adc
sub
cmp
hlt
or
adc
pop
and
rol
enter
fadd
inc
xor
dec
add
hlt
rol
add
add
xchg
rol
dec
xchg
jle
sub
adc
movs
xchg
add
add
mov
pop
bound
cli
adc
add
outs
xchg
and
inc
add
int3
stos
test
int
mov
mov
ds
inc
add
add
push
sti
mov
and
lock
shl
and
pop
and
dec
cld
jmp
xor
jo
mov
daa
lods
das
pushf
sub
add
out
push
lods
mov
dec
xchg
cs
or
ror
mov
add
add
clc
leave
cmp
fadd
(bad)
jmp
pop
fidivr
add
in
inc
gs
inc
adc
add
or
outs
xchg
mov
(bad)
sub
lock
jno
add
jl
adc
stc
mov
add
aaa
xchg
inc
ret
xchg
add
test
mov
ja
test
xchg
out
add
add
ror
push
int3
cmps
mov
and
jle
jle
dec
xlat
repz
jmp
fild
jnp
add
hlt
test
mov
test
rol
retf
add
aam
rcl
sbb
push
into
adc
add
add
loop
push
jae
xor
xor
sub
js
ret
xchg
ror
add
add
dec
aas
sub
sbb
repz
and
mov
add
xchg
mov
stc
int3
push
mov
xchg
sbb
mul
jb
or
jb
mov
ins
inc
and
add
add
adc
shl
test
mov
fwait
push
sub
sub
stos
sub
dec
cmps
mov
inc
aaa
add
add
jge
mov
call
imul
add
inc
add
outs
sbb
xor
pusha
sub
pusha
add
inc
add
out
iret
test
loop
add
add
cli
in
popf
xor
inc
pushf
or
sub
outs
sbb
mov
or
in
inc
dec
jae
jno
push
cmps
jnp
add
add
enter
xchg
ds
mov
mov
call
jg
mov
inc
arpl
je
mov
and
add
dec
ja
shl
ja
dec
xor
enter
push
add
add
sub
sahf
push
in
ins
and
jmp
fcom
pop
ins
iret
cmp
add
stos
fs
sub
pop
imul
xchg
add
add
jle
or
pop
popf
jne
xchg
mov
repz
call
push
mov
and
shr
cli
stc
jae
cmp
mov
xchg
cmp
push
pop
or
sbb
dec
popa
xor
(bad)
in
add
xchg
in
sbb
adc
(bad)
mov
add
add
mov
int
jmp
in
stos
sti
div
rcr
aam
in
push
sub
lea
movs
mov
jnp
mov
pop
push
pop
mov
sbb
push
push
dec
icebp
pop
pop
js
pusha
and
and
mov
push
push
inc
xor
jle
stos
and
dec
inc
in
mov
ror
call
mov
add
aam
jp
add
add
(bad)
pop
repnz
cmps
outs
ja
cmp
arpl
arpl
and
add
arpl
push
leave
xchg
scas
jne
or
or
sbb
adc
int3
add
add
add
and
and
sahf
out
pop
ins
add
lods
das
mov
and
add
jbe
sbb
pushf
mov
xor
push
iret
popa
int3
into
mov
and
into
pushf
xlat
sbb
add
leave
push
pop
arpl
dec
jl
mov
jmp
cmc
dec
retf
cdq
dec
jecxz
sub
or
add
adc
(bad)
pop
fistp
mov
mov
sbb
adc
add
cmps
pop
sub
sbb
inc
cli
pop
mov
gs
or
add
(bad)
mov
jmp
pop
repz
or
add
mov
(bad)
out
mov
fdivr
add
adc
xchg
cmp
adc
fwait
mov
mov
and
fst
push
ins
js
stos
push
inc
sbb
add
add
inc
icebp
sub
inc
sub
data16
repnz
(bad)
jl
shl
pop
adc
fs
xor
add
pop
xchg
in
cli
rol
(bad)
repnz
cdq
jnp
sub
arpl
pop
adc
inc
mov
(bad)
nop
fsub
mov
lahf
xlat
call
dec
arpl
pop
mov
dec
sbb
aaa
shr
outs
add
add
rcr
cmp
inc
dec
inc
xchg
outs
jp
add
push
inc
mov
sub
sbb
dec
adc
scas
ret
or
fist
mov
or
add
or
cmp
inc
push
sub
jae
es
jns
sbb
adc
sbb
shl
sbb
fst
call
add
pop
jmp
jno
ds
pop
push
dec
push
cmp
push
pop
rcr
pop
add
add
loop
jo
loopne
lock
sub
cmp
(bad)
sar
inc
gs
(bad)
dec
enter
inc
nop
inc
out
aam
pop
sar
data16
ret
mov
test
leave
dec
loope
cmp
js
dec
or
fs
push
xchg
sub
mov
nop
jl
add
jg
arpl
clc
pop
js
xchg
addr16
adc
add
add
and
pop
push
loop
sbb
sbb
aas
jmp
xor
lldt
jb
pop
add
inc
imul
pusha
jne
and
sub
inc
inc
or
mov
pop
adc
mov
pusha
sar
cld
xchg
lea
loope
inc
jmp
sub
cdq
add
ret
add
pavgb
dec
cli
loop
cmp
mov
movs
addr16
add
movs
jae
mov
mov
cmps
shl
xchg
sar
xchg
scas
xchg
sahf
xchg
into
xchg
mov
cmp
jns
cdq
dec
retf
imul
iret
jecxz
add
add
cmp
jbe
dec
retf
sar
iret
jnp
push
cmp
iret
scas
cld
cld
cld
cld
loope
into
repz
or
add
cmp
fist
out
sbb
popf
fs
xchg
cmp
ret
std
adc
mov
retf
stc
jo
and
add
test
jge
xchg
dec
sbb
cmp
jae
popa
dec
cmps
in
ds
pop
pop
loopne
dec
cmc
pop
cmps
jae
test
ret
loope
cmp
inc
adc
and
inc
sbb
add
out
add
adc
aas
pop
movs
sbb
loopne
jmp
repz
iret
popa
jno
out
inc
cld
clc
add
loopne
iret
enter
test
jl
xor
inc
and
cmp
retf
and
sbb
adc
ja
or
and
ja
clc
enter
push
mov
ret
shl
cmp
xchg
aas
pop
test
call
fnsave
or
test
mov
aas
dec
mov
pop
inc
(bad)
loopne
pop
repnz
and
and
mov
scas
out
inc
adc
adc
sti
fisubr
add
in
sbb
inc
fbld
and
mov
inc
gs
loopne
test
pusha
out
loopne
jnp
pop
mov
pop
aas
jg
xchg
jno
iret
add
ds
sbb
iret
bswap
mov
cmp
xor
ins
adc
or
shr
add
int
xor
adc
adc
dec
retf
imul
mov
mov
pop
jne
in
rcl
(bad)
icebp
(bad)
adc
push
ret
jg
aas
clc
push
jo
lock
pavgb
imul
dec
stc
mov
(bad)
jg
in
mov
out
popf
fidivr
sbb
lahf
(bad)
shr
xchg
pop
xchg
or
fbstp
xor
shr
gs
xchg
pop
in
inc
out
inc
jnp
xchg
mov
mov
or
inc
xor
ja
inc
inc
and
je
out
cmc
xor
mov
(bad)
into
cmps
sahf
movs
loope
mov
mov
fisub
jl
ret
cmp
cmp
sbb
dec
shr
xlat
sar
jne
fcom
jmp
push
aad
scas
outs
aad
idiv
xor
sub
enter
push
pop
data16
aaa
cmp
mov
stos
sar
xor
mov
fimul
mov
sbb
jge
mov
or
xor
and
add
ret
dec
cmp
push
jo
push
adc
pushf
movs
rol
or
jo
or
mov
int3
fcom
jns
test
ja
mov
fiadd
ds
(bad)
push
repz
neg
sub
out
lea
(bad)
daa
int
pop
xchg
std
cmp
fimul
mov
xchg
iret
mov
dec
mov
mov
adc
imul
sub
or
xor
js
stc
mov
out
fcomp
lock
jbe
leave
or
retf
or
enter
sbb
xchg
test
adc
jae
mov
xchg
lds
addr16
xchg
pop
test
gs
push
adc
mov
add
xor
sbb
xor
ss
sub
retf
xor
leave
bound
in
xchg
xor
sbb
pop
mov
adc
push
or
sbb
mov
inc
jmp
cmps
out
push
mov
add
pop
jl
outs
fldz
push
adc
mov
popf
push
sub
sahf
cmp
jo
addr16
jae
repz
dec
sbb
std
arpl
inc
mov
add
add
mov
popa
xor
test
add
pop
jecxz
nop
add
inc
xor
fwait
push
mov
loope
inc
test
mov
pop
push
pusha
jle
cld
add
js
mov
outs
push
fistp
les
loopne
add
add
dec
ja
fnsave
push
jnp
jmp
pop
stc
es
pop
sbb
mov
mov
add
sub
pop
mov
dec
add
xor
mov
mov
and
inc
es
ds
push
mov
and
add
xchg
mov
pop
sbb
aam
lds
movs
sub
cs
xchg
ret
sub
cdq
aas
adc
ror
in
adc
push
test
ror
sti
jb
imul
push
push
fwait
lahf
nop
sub
pushf
nop
push
cmp
dec
mov
mov
adc
and
fiadd
jmp
dec
jb
add
(bad)
mov
and
into
test
cmc
jne
imul
or
cmp
cmps
fisttp
ins
push
inc
les
dec
cs
int
inc
out
adc
jnp
sar
push
stos
std
mov
fs
mov
outs
fucomi
push
inc
(bad)
imul
adc
push
(bad)
adc
les
sbb
test
pop
sub
adc
jae
push
jl
adc
int3
mov
and
popa
cmp
and
adc
dec
jns
sub
sbb
mov
fild
std
lods
ret
adc
mov
mov
dec
and
in
pop
dec
push
mov
aaa
jmp
mov
mov
jne
xchg
adc
xchg
add
hlt
sbb
dec
jmp
movups
rcr
xor
inc
hlt
or
xor
xchg
aad
push
sbb
push
jmp
xchg
inc
sub
sbb
push
sub
xor
in
sti
push
into
sub
add
inc
(bad)
sub
jb
sahf
jns
sub
or
inc
push
outs
inc
adc
call
sub
mov
lahf
cmps
sbb
xor
mov
and
jae
jnp
mov
xchg
pop
inc
outs
dec
sbb
mov
or
adc
into
mov
ins
out
call
fisubr
or
jae
fisub
int3
jmp
fisub
xor
idiv
test
jns
or
sbb
and
add
rcl
pop
adc
ret
je
pop
dec
pop
mov
push
addr16
(bad)
ja
mov
sahf
dec
mov
inc
stos
mov
xor
xor
out
iret
ss
div
fisub
mov
lahf
popa
xchg
dec
pop
or
movs
enter
cmp
cmp
xor
inc
cmp
sbb
xchg
(bad)
lods
push
mov
push
fs
fistp
das
adc
mov
retf
mov
leave
arpl
inc
sub
imul
mov
push
xor
int
add
in
in
dec
pop
push
call
fldcw
sub
push
int
pop
mov
jns
imul
icebp
xchg
sub
dec
scas
sbb
jno
cmc
mov
adc
jge
pop
pop
mov
mov
sub
ss
adc
adc
sub
pop
mov
sbb
cwde
sub
cmp
je
repz
jmp
loopne
add
mov
pop
sti
jae
mov
jbe
nop
and
xlat
inc
inc
xchg
sub
ins
sbb
mov
outs
mov
jne
arpl
ss
xchg
and
lea
inc
push
xor
mov
(bad)
pop
cld
pop
fistp
or
out
cli
jne
ins
pop
jo
xchg
or
add
pop
retf
sbb
xor
lahf
das
call
xor
inc
pop
xor
imul
stc
out
pop
or
push
es
xchg
fxch
stc
push
and
xor
fild
dec
xchg
dec
inc
xlat
ficomp
retf
(bad)
cmps
push
pusha
pop
xlat
call
add
fcmovnbe
xor
push
mov
sub
sub
cmps
pop
lahf
pop
mov
ins
dec
(bad)
mov
jg
sbb
xchg
xor
cmp
jae
jg
popa
cmp
cmps
sti
pop
dec
loop
inc
xor
push
repnz
mov
stos
mov
retf
jns
jp
inc
cmp
sbb
stos
sahf
cmc
mov
dec
mov
xchg
dec
in
push
push
xor
push
dec
imul
mov
int
pop
pop
rcl
call
call
push
repnz
mov
jecxz
daa
rcl
mov
push
push
imul
aad
outs
jnp
and
cmp
jno
jb
mov
(bad)
dec
dec
int
jnp
push
mov
daa
add
pop
dec
push
out
retf
adc
inc
and
outs
sahf
fstp
and
sbb
aad
(bad)
in
xlat
jo
jl
test
jmp
push
jmp
and
add
sbb
pop
fldenv
pop
cmc
mov
cs
hlt
call
lods
fld
xor
and
addr16
jns
lea
fisub
dec
pop
fist
cmp
int3
rcl
mov
cmp
rol
dec
adc
ror
add
mov
repz
sbb
adc
mov
out
popf
inc
fnstenv
mov
cmp
or
add
cmp
repz
nop
mov
adc
add
mov
dec
add
mov
shr
loopne
push
sbb
sar
iret
adc
add
adc
sub
in
add
jge
pop
add
(bad)
fcom
pop
add
dec
fld
add
add
