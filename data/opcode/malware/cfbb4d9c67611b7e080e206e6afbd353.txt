xchg
sahf
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
jo
add
and
jb
outs
addr16
add
add
add
and
add
add
add
inc
push
dec
inc
add
add
add
add
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
daa
add
add
add
jle
add
xchg
sub
add
add
add
sub
add
jmp
add
sbb
add
add
add
and
add
sub
add
add
add
std
push
add
add
add
xchg
add
add
push
add
add
add
les
add
jno
add
add
add
inc
add
mov
add
add
add
jnp
xor
xor
aaa
xor
xor
sub
sub
sub
cmp
cmp
bound
add
gs
ja
fs
push
jns
xor
push
ja
push
jne
inc
xor
dec
inc
inc
push
push
js
fs
dec
ins
push
push
xor
jns
push
ja
dec
dec
inc
xor
js
pop
xor
pop
push
jbe
xor
push
push
xor
cmp
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
je
daa
push
cmc
popa
or
sub
sub
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
daa
add
add
add
mov
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
xlat
clc
mov
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
dec
jp
fcmovb
std
(bad)
jle
pop
jmp
cld
or
xlat
clc
xor
repnz
mov
sub
push
repz
clc
(bad)
jle
(bad)
sbb
scas
cmc
imul
jg
scas
icebp
imul
cld
aas
not
(bad)
loopne
pop
fwait
cld
fidivr
pop
inc
out
jge
jge
sahf
jg
xlat
(bad)
xor
aaa
ds
push
ficomp
ins
out
out
jno
mov
mov
cmp
icebp
pop
xor
sbb
fistp
(bad)
jmp
lods
test
jecxz
movaps
jl
iret
outs
ss
ss
xor
imul
mov
cld
imul
int3
adc
call
ins
jg
repz
out
cld
fidivr
xlat
cld
xor
ja
jle
pop
cmp
inc
jnp
lahf
mov
repz
and
mov
(bad)
call
addr16
std
cld
lahf
je
(bad)
cmp
cld
mov
inc
mov
(bad)
mov
aas
dec
cli
(bad)
inc
inc
jg
mov
(bad)
out
mov
std
scas
sti
xor
ficomp
ds
call
(bad)
xor
lahf
xor
out
jg
(bad)
aas
cmps
(bad)
ja
(bad)
aas
dec
ins
jle
cli
stc
pop
sar
jg
pop
push
push
fistp
cld
sbb
loopne
(bad)
(bad)
mov
hlt
mov
xor
fist
movs
(bad)
push
(bad)
(bad)
mov
(bad)
dec
jmp
arpl
jnp
(bad)
sti
hlt
inc
inc
hlt
jmp
cmp
jmp
pop
int3
idiv
cld
sub
xlat
(bad)
std
jg
cs
out
clc
leave
das
sti
pop
jle
dec
inc
(bad)
jecxz
(bad)
fcmovnu
in
jle
pop
(bad)
cs
repnz
jbe
cld
jnp
retf
outs
clc
leave
mov
lahf
cld
imul
hlt
cmp
jmp
mov
out
repnz
cld
jecxz
retf
out
cld
leave
aas
cld
cmp
paddb
mov
out
repnz
jg
std
cld
pop
jle
(bad)
xchg
mov
scas
std
pop
jle
dec
dec
fild
stc
ins
js
or
cmp
popa
jle
cli
jmp
inc
sar
jmp
mov
les
sbb
jl
das
push
in
and
jle
ret
and
jle
ret
test
(bad)
daa
jmp
out
repnz
cs
out
repnz
cs
out
repnz
jge
iret
(bad)
cs
cld
lahf
push
(bad)
std
cmp
retf
test
jge
(bad)
cs
daa
push
and
xor
imul
jmp
mov
out
repnz
jg
scas
jmp
aas
test
dec
das
std
repz
std
pop
into
dec
hlt
mov
stos
mov
and
aas
jmp
xchg
pop
out
mov
lds
ja
sub
jle
in
jne
jg
std
sahf
(bad)
xchg
hlt
shr
and
std
cmp
repnz
rcr
mov
loop
jg
(bad)
(bad)
popf
in
pop
pavgb
(bad)
loopne
mov
outs
add
neg
sar
pop
xchg
scas
(bad)
mov
or
shr
mov
pop
enter
push
xlat
mov
lock
(bad)
sahf
(bad)
loopne
movs
stc
out
repnz
(bad)
cs
sbb
sti
dec
dec
imul
sar
repnz
outs
dec
pop
shr
jg
mov
mov
adc
lahf
add
xchg
ja
cmp
xor
inc
inc
dec
fs
rcr
cmc
outs
or
jg
(bad)
dec
push
jle
mov
sbb
or
adc
mov
movs
or
fild
push
mov
test
and
scas
repz
mov
pop
cld
cmps
inc
mov
cli
jne
mov
xlat
ret
sbb
(bad)
mov
cld
push
(bad)
(bad)
imul
pop
std
out
jmp
out
jmp
jge
(bad)
inc
mov
sbb
dec
test
popf
fistp
stc
pop
call
sbb
aaa
mov
or
lods
icebp
into
scas
dec
jg
icebp
xor
mov
loopne
out
adc
mov
jecxz
(bad)
loopne
mov
test
pop
shr
sub
call
mov
clc
(bad)
outs
neg
cmp
xchg
imul
sar
(bad)
sar
cmc
cmc
out
pop
mov
cli
idiv
mov
mov
xchg
imul
and
sub
in
icebp
cmp
xchg
mov
out
lock
scas
cli
popf
pop
mov
cmps
fcomip
xchg
call
sti
popf
call
repnz
out
dec
mov
xor
not
clc
xchg
mov
cld
xchg
and
mov
cld
mov
cmps
in
lahf
lds
add
std
dec
sar
inc
jmp
ds
ins
sar
add
fprem
jnp
pop
fwait
dec
jmp
sbb
jg
shr
sahf
inc
call
xchg
movs
mov
mov
inc
scas
icebp
lods
fild
xor
mov
shr
shl
idiv
jle
fcomip
xlat
addr16
cld
cmp
test
stc
xlat
and
cli
xor
out
cld
sbb
mov
into
lahf
cld
out
mov
ja
in
push
cld
iret
mov
mov
fisttp
call
jl
pop
call
imul
cmps
jmp
scas
ins
push
mov
mov
dec
sahf
pop
mov
call
(bad)
sbb
hlt
scas
ret
retf
inc
pop
outs
inc
xchg
pop
cmp
add
sbb
aas
shl
mov
aas
clc
fnstsw
hlt
fild
test
imul
jle
pop
cmp
sbb
cmp
std
jp
cli
xor
imul
xor
imul
test
aaa
call
aaa
push
dec
mov
jg
outs
push
inc
add
jg
inc
hlt
neg
(bad)
imul
(bad)
cmp
xlat
clc
push
std
jmp
(bad)
(bad)
xor
std
(bad)
out
movs
(bad)
inc
hlt
(bad)
mov
(bad)
push
mov
scas
test
sbb
call
and
retf
jg
fucomip
mov
cmc
push
ficom
cmps
jecxz
stc
ins
dec
jns
cmps
movs
mov
retf
fcomip
xchg
dec
stc
(bad)
in
jle
fisttp
push
jl
dec
jg
push
lock
mov
xor
mov
push
pop
push
stos
fisttp
dec
imul
cmp
xchg
push
ja
cmp
cld
push
lahf
cld
(bad)
mov
out
clc
leave
jg
fstp
cld
push
lahf
cld
cmps
cmp
mov
mov
xor
(bad)
mov
or
outs
mov
int3
and
dec
jg
cld
stc
xchg
aaa
cmp
scas
popa
data16
clc
jmp
jmp
sbb
test
scas
neg
inc
dec
inc
mov
or
xor
in
and
imul
gs
in
and
ret
mov
jno
sbb
call
scas
adc
and
(bad)
jg
std
dec
hlt
(bad)
aas
mov
jg
fild
push
call
repnz
(bad)
mov
jne
mov
in
dec
jg
push
or
int3
cs
stc
or
(bad)
sti
fild
jle
std
fs
sbb
pop
dec
mov
pop
cld
or
arpl
ss
cmc
or
inc
push
mov
outs
dec
das
sti
sbb
retf
mov
outs
iret
sbb
shl
mov
outs
dec
jg
fstp
(bad)
neg
(bad)
mov
lahf
stc
imul
loope
inc
retf
into
outs
iret
or
aaa
jmp
jnp
stc
ss
(bad)
dec
pop
inc
pop
lock
hlt
jg
(bad)
fild
xchg
(bad)
dec
(bad)
out
mov
mov
(bad)
jg
(bad)
pop
sar
jmp
ret
(bad)
in
call
jae
imul
cld
int
retf
ret
inc
push
sbb
and
(bad)
fistp
jmp
mov
sub
or
out
push
cld
mov
xor
outs
inc
sahf
les
sahf
les
sahf
les
leave
mov
fbstp
std
ins
test
adc
fcmovne
scas
psubsb
(bad)
mov
adc
pop
add
push
call
test
dec
dec
dec
cld
mov
inc
xor
dec
ds
out
jle
dec
(bad)
jmp
pop
pop
(bad)
fisttp
jle
out
cld
leave
push
cmp
(bad)
jbe
cld
aaa
mov
hlt
hlt
cmp
xchg
jmp
jge
(bad)
xchg
mov
(bad)
jns
sub
in
shr
std
xor
lock
jg
in
fist
jecxz
dec
shl
call
(bad)
call
pop
gs
sub
mul
stc
das
call
adc
neg
push
imul
ja
jae
(bad)
jg
jo
stc
mov
imul
in
hlt
(bad)
in
xlat
adc
(bad)
sar
mov
jle
or
mov
inc
jl
aaa
retf
(bad)
sbb
adc
std
xor
sbb
cmp
stc
jmp
sbb
int
stc
pop
jg
dec
(bad)
cmp
fidivr
mov
lahf
xchg
dec
cli
pop
xchg
call
cmp
(bad)
xchg
jg
mov
mov
and
aaa
jmp
lahf
(bad)
in
jg
fucomip
mov
or
xor
lods
dec
lea
std
xlat
clc
in
jle
out
jmp
mov
loope
call
cld
mov
call
pop
adc
outs
bnd
cmp
or
mov
stc
retf
test
(bad)
and
popf
aas
stc
iret
jg
dec
(bad)
xchg
fcomip
xchg
push
mov
(bad)
pop
mov
lahf
jne
jle
hlt
pop
cmp
fistp
outs
hlt
arpl
pop
mov
pop
inc
push
retf
mov
mov
jg
(bad)
mov
aas
out
icebp
hlt
repz
pop
mov
jg
jmp
add
hlt
jge
or
and
dec
sub
ja
xchg
(bad)
cld
sub
aaa
fdivrp
lea
cld
pop
clc
repnz
pop
inc
xor
xor
add
dec
shr
pop
jecxz
dec
neg
iret
lahf
mov
add
(bad)
xlat
jmp
jmp
pop
retf
pusha
repnz
cld
push
mov
sub
(bad)
xlat
mov
cld
sbb
sbb
out
inc
mov
out
sahf
sub
ins
cli
addr16
test
addr16
in
mov
sar
add
push
sub
fcomip
mov
sti
fistp
mov
std
jmp
cmps
(bad)
push
inc
repz
sbb
and
(bad)
neg
hlt
(bad)
jg
(bad)
call
fcomip
mov
std
in
dec
aas
bound
cmp
cmp
fwait
call
mov
out
jle
inc
adc
dec
jmp
cld
fist
aas
std
fsub
dec
(bad)
call
lods
imul
inc
arpl
dec
aam
test
movs
neg
adc
std
cmps
lahf
cld
push
mov
jecxz
stc
mov
jne
std
hlt
pop
sbb
jmp
sub
outs
and
inc
rcr
cmp
pop
imul
mov
mov
dec
aam
mov
xchg
(bad)
jp
jecxz
jle
dec
fs
into
outs
mov
fs
call
hlt
(bad)
aas
xchg
dec
icebp
imul
mov
lahf
mov
repz
xlat
inc
(bad)
jecxz
shr
repz
(bad)
fwait
(bad)
js
popa
arpl
jl
inc
repnz
or
push
sub
and
std
lahf
shr
call
outs
neg
ss
jmp
arpl
in
into
shl
xchg
repz
aas
(bad)
jbe
iret
jle
inc
loope
imul
cmps
dec
(bad)
fist
xchg
std
mov
xlat
or
sti
ja
lods
adc
and
stc
ins
in
dec
xchg
cmp
adc
cli
xlat
sub
gs
mov
mov
lahf
jp
std
dec
jg
fstp
jl
cmp
je
repz
sbb
mov
cmps
(bad)
call
mov
add
mov
push
cli
sub
mov
jae
(bad)
out
sti
sub
fisttp
cmps
(bad)
ja
ret
xchg
outs
or
push
inc
adc
xchg
pop
icebp
cmp
pop
jle
dec
(bad)
fcmovnu
icebp
xchg
(bad)
jmp
jg
fcomip
aaa
jmp
and
out
hlt
pop
out
push
cld
pop
in
pop
cld
scas
movs
mov
mov
outs
and
pop
mov
outs
push
loope
jle
dec
(bad)
jmp
icebp
xchg
jmp
xlat
jmp
packsswb
or
xor
fstp
mov
popf
(bad)
xchg
and
daa
and
outs
neg
imul
fisttp
lock
icebp
fstp
clc
in
test
mov
call
pop
cli
mov
mov
mov
add
jg
inc
movs
jg
or
or
outs
mov
fwait
dec
(bad)
sar
jg
and
cmp
aas
out
adc
int3
cmp
mov
idiv
cld
xchg
mov
out
adc
push
mov
outs
dec
ins
(bad)
in
(bad)
xchg
pop
add
inc
jg
dec
(bad)
mov
fcomip
mov
in
jle
mov
mov
sbb
aaa
sti
xor
mov
loopne
sbb
(bad)
dec
add
sub
sti
pop
lock
jg
xchg
jecxz
in
pmaxsw
(bad)
mov
mov
not
in
jmp
lds
enter
cld
rcl
hlt
fidivr
and
out
jae
call
imul
cwde
test
inc
inc
add
add
(bad)
mov
aaa
js
cmp
cmp
xchg
adc
fisub
ins
cli
or
adc
add
idiv
stc
mov
outs
clc
leave
scas
clc
popf
cmp
jle
xor
fwait
push
cmp
or
loopne
mov
sbb
xor
dec
sahf
and
cld
jbe
adc
inc
inc
add
inc
jl
test
jg
imul
lahf
mov
cmc
out
inc
mov
hlt
xlat
jo
xchg
(bad)
cmp
jmp
xchg
mov
xor
and
movs
loope
jg
mov
mov
ficomp
cli
lahf
bound
dec
xor
jmp
retf
jmp
jl
jnp
hlt
stos
ins
mov
mov
shr
mov
jg
(bad)
cld
cmovne
sbb
test
add
out
(bad)
mov
sbb
mov
repz
ss
cmps
jg
inc
cli
out
bound
push
fbld
shl
sbb
cmp
lea
pop
jg
xchg
int3
out
push
mov
pop
scas
jle
fcomip
arpl
std
dec
(bad)
mov
cld
jecxz
jo
and
int
or
ins
(bad)
movs
fucomip
xchg
pop
cmc
or
stc
pop
jg
div
(bad)
mov
sbb
pop
in
ja
not
jg
push
movs
js
mov
mov
mov
call
sti
cmp
fwait
mov
mov
jg
mov
pushf
hlt
lahf
pop
xor
(bad)
mov
call
aas
clc
xor
jle
sbb
jg
mov
mov
sbb
les
imul
in
inc
add
retf
jle
jno
jg
cli
aas
mov
hlt
repz
mov
idiv
dec
mov
cld
xlat
fs
jl
push
(bad)
sbb
dec
cld
push
mov
(bad)
xor
adc
mov
dec
inc
sbb
inc
enter
pop
(bad)
pop
push
xchg
neg
movs
(bad)
dec
fisttp
daa
call
std
call
cmps
jg
fcomip
ja
ja
push
clc
push
jo
jg
mov
bound
cld
mov
ss
lahf
cmp
jle
jmp
sti
sbb
repnz
nop
cmp
bswap
aaa
push
addr16
pop
(bad)
pop
cwde
stos
jmp
ja
in
cld
popf
cmp
daa
stos
inc
cmp
aas
stc
popf
aas
stc
movq
cmp
icebp
pop
popa
outs
loopne
movs
jg
std
mov
jcxz
(bad)
(bad)
fisubr
fisttp
loopne
push
mov
or
mov
sar
mov
std
push
jg
(bad)
fcmovnu
sti
mov
in
movs
mov
(bad)
xlat
fisttp
(bad)
cmc
xchg
or
jle
daa
test
xchg
std
das
mov
pop
mov
movs
out
cmp
sti
sti
call
dec
iret
dec
call
or
inc
and
pop
stc
movd
and
xor
push
dec
xchg
repnz
jle
hlt
mov
pop
test
in
sar
(bad)
call
outs
repnz
jle
fwait
jg
cli
fist
(bad)
fist
jae
aas
call
stc
aas
sar
imul
lahf
jmp
xchg
hlt
fnstcw
cli
(bad)
cli
xlat
nop
pop
pop
cs
adc
sbb
cld
mov
repnz
cld
sbb
(bad)
ja
sub
fldcw
jmp
jle
xlat
pop
rcr
ins
imul
mov
add
lea
in
add
aas
stc
das
jg
jb
adc
aam
arpl
or
or
jg
loop
fistp
fcomip
ja
in
movs
fild
cmp
xchg
push
push
call
cld
xlat
call
dec
jg
pop
cmc
pop
dec
les
daa
dec
out
inc
sub
sbb
enter
cdq
inc
(bad)
fist
xchg
(bad)
in
pop
push
cmps
loopne
movs
xor
(bad)
and
lahf
add
aas
lds
fbstp
sbb
ja
jmp
test
aas
adc
stc
ins
adc
pushf
and
(bad)
sti
in
cld
cmc
sar
call
adc
cli
gs
fistp
in
out
inc
imul
dec
pop
dec
nop
out
pop
cmp
pop
(bad)
mov
jae
jmp
cld
cmps
jg
scas
imul
and
scas
xchg
jno
sar
loop
je
repz
xchg
movd
pop
cmps
mov
std
xor
call
repz
cwde
loopne
mov
idiv
ror
fistp
(bad)
cli
hlt
repz
mov
stc
outs
sar
jg
pop
push
jle
fbstp
or
repz
mov
sub
mov
or
loop
mov
xchg
adc
push
adc
loopne
les
mov
fnstsw
xlat
call
stc
clc
xlat
or
(bad)
scas
and
rol
outs
repz
adc
cld
(bad)
les
add
dec
pop
clc
cli
dec
push
add
lahf
cld
fwait
mov
clc
leave
mov
loope
and
cmp
push
xchg
jg
ja
sub
inc
in
pop
test
(bad)
push
push
dec
clc
ja
xor
add
fist
dec
call
pop
out
jb
jg
pop
sar
lods
mov
dec
mov
sbb
aaa
std
in
jmp
leave
and
fcomip
xchg
push
ja
in
sti
sbb
jge
mov
aam
mov
pushf
jb
add
imul
pop
stos
mov
xor
inc
or
adc
xor
ret
xchg
mov
out
dec
or
stos
sub
test
in
retf
pop
pusha
and
cs
mov
(bad)
jg
out
mov
jmp
imul
xlat
jle
hlt
outs
or
jg
pop
enter
pop
sbb
shl
ret
mov
outs
mov
inc
je
cmc
pop
pop
fdivr
push
sti
les
(bad)
(bad)
jecxz
lea
fucomip
mov
clc
int
dec
shl
or
mov
pushf
(bad)
(bad)
mov
jg
std
test
dec
mov
clc
pop
sar
call
jmp
lahf
std
popa
hlt
(bad)
mov
repz
out
jge
cli
imul
xor
std
jecxz
xchg
and
jle
in
and
imul
repz
add
inc
jmp
add
jg
stc
add
sub
daa
pushf
push
std
xor
fild
push
jmp
xlat
adc
inc
jbe
imul
lock
clc
sub
jnp
dec
repnz
xor
repz
mov
and
mov
outs
test
pop
movs
adc
outs
call
std
out
cld
sbb
fisttp
sahf
dec
test
adc
xor
out
xchg
leave
mov
inc
pop
ja
retf
out
dec
out
or
icebp
std
(bad)
xchg
mov
dec
sub
adc
enter
repnz
xchg
sub
dec
lahf
cld
sub
inc
out
and
push
mov
ror
adc
dec
cmc
jg
pop
cld
dec
lahf
cld
cmps
mov
out
hlt
leave
mov
out
nop
enter
(bad)
mov
in
mov
inc
cmp
clc
repz
rcr
(bad)
push
js
mov
cld
ins
sar
nop
dec
jmp
cli
addr16
pop
into
jl
div
inc
(bad)
(bad)
push
mov
cld
or
mov
in
sti
aas
xchg
icebp
sti
int
mov
jge
fwait
call
mov
cld
xchg
xchg
sar
push
mov
pop
out
and
iret
mov
xchg
mov
mov
fst
into
mov
jg
or
std
cmp
ret
inc
call
sbb
imul
outs
(bad)
(bad)
sbb
push
pop
fs
jg
(bad)
mov
adc
into
mov
jo
out
std
pop
in
cmp
stc
inc
into
repnz
and
jg
push
outs
aas
stc
lahf
inc
ja
inc
pushf
push
cli
mov
imul
cmp
mov
(bad)
pushf
pop
inc
loop
les
mov
lahf
cld
imul
sub
inc
lods
lock
aas
xor
ret
lahf
jmp
cli
jmp
mov
loop
xchg
or
inc
cld
jbe
push
and
xchg
call
std
call
enter
cld
jbe
in
inc
and
sub
mov
xchg
nop
push
and
or
(bad)
xchg
push
mov
dec
xchg
push
loopne
push
aaa
out
or
jae
jmp
pop
adc
imul
idiv
xor
(bad)
mov
mov
test
jmp
mov
xor
repz
xlat
xchg
mov
cld
cld
scas
es
jmp
cli
in
scas
and
jnp
jge
out
xchg
movs
pushf
push
mov
adc
cld
stc
pop
or
shl
jg
outs
push
mov
stos
push
(bad)
xlat
fist
sub
jmp
jecxz
jge
jmp
dec
out
(bad)
xor
leave
scas
and
dec
(bad)
(bad)
jge
or
pushf
sbb
call
hlt
mov
std
xlat
nop
push
dec
adc
pop
xchg
cld
sbb
(bad)
call
loope
jmp
ret
aaa
(bad)
in
cli
pop
jle
(bad)
xchg
mov
mov
xchg
push
cmp
clc
jno
jecxz
jl
leave
dec
cmps
pop
dec
xor
retf
enter
hlt
jg
stos
fisttp
cmp
mov
lea
fistp
jle
cmps
pop
jle
rcl
out
repnz
jg
pop
std
scas
movs
jo
pop
loop
push
into
js
xlat
out
adc
icebp
ja
inc
mov
inc
sbb
cmc
ja
cmp
or
fsub
push
cmps
xor
shr
mov
cli
pop
(bad)
sbb
fs
(bad)
call
cld
inc
hlt
(bad)
jg
(bad)
inc
(bad)
push
scas
and
jg
std
pop
mov
mov
call
fistp
test
loop
daa
jg
leave
icebp
scas
repz
lahf
mul
lahf
in
sti
xor
cmp
test
xlat
cmp
xor
fild
out
fistp
sub
adc
not
(bad)
es
jmp
cld
mov
xchg
jbe
sbb
ss
ret
sahf
jg
mov
aaa
mov
sbb
js
jbe
and
aaa
daa
stos
(bad)
sbb
aam
ss
stos
mov
sub
cmp
(bad)
jbe
cld
push
ror
retf
hlt
cmc
outs
ret
or
gs
out
adc
hlt
pop
mov
not
mov
sub
push
imul
jg
mov
jmp
sti
imul
cmp
cld
xor
cli
(bad)
fcomip
imul
loope
cmp
adc
push
std
xor
std
xor
(bad)
xor
mov
mov
xchg
mov
aas
stc
retf
inc
jbe
dec
icebp
outs
imul
cmps
xchg
js
jmp
shl
mov
neg
xchg
push
dec
push
or
std
into
mov
idiv
in
shr
int3
cli
fwait
std
mov
std
fist
mov
push
enter
fneni(8087
in
lahf
mov
xor
inc
jmp
jecxz
inc
adc
outs
clc
cmp
cmps
jo
shl
mov
test
in
call
or
outs
sbb
lock
cmc
imul
xchg
popa
sbb
sub
xlat
(bad)
sbb
jmp
sub
jg
aaa
mov
aaa
(bad)
in
std
pop
jle
(bad)
xchg
mov
or
cld
sbb
aam
cs
push
cld
hlt
fwait
nop
cwde
inc
sbb
std
mov
lods
cld
xchg
sub
ins
es
aaa
psadbw
fcomp
add
clc
lea
jle
cmp
cmp
cmp
mov
jp
mov
mov
inc
idiv
cld
in
lock
jg
cmp
jb
out
jecxz
clc
(bad)
cs
dec
call
ins
xchg
(bad)
(bad)
add
jg
jbe
jg
call
xor
inc
mov
(bad)
stos
call
mov
loopne
ss
inc
std
and
cmp
push
mov
out
push
sbb
call
adc
repz
(bad)
fldcw
rcl
jge
or
mov
jmp
mov
repnz
test
dec
mov
stc
pop
inc
pop
das
inc
cdq
pop
cmps
pop
dec
jmp
bsf
add
mov
sbb
jo
enter
inc
xchg
jmp
xlat
jo
out
cli
jmp
std
(bad)
in
xlat
loopne
lahf
fnstsw
loopne
xchg
test
pop
leave
daa
(bad)
std
out
dec
jmp
sub
sti
lea
and
(bad)
leave
jge
ins
ds
aaa
jle
dec
(bad)
push
call
and
sub
lahf
cld
inc
mov
stc
sahf
jg
jns
jg
loop
sbb
xchg
mov
dec
stc
cmc
pop
inc
dec
mov
xchg
or
fist
push
iret
in
(bad)
mul
jp
xlat
mov
test
cld
fist
(bad)
in
(bad)
mov
cld
fwait
in
(bad)
stos
xchg
loopne
sahf
ds
mov
mov
repnz
jg
or
aaa
and
cld
int
stc
idiv
dec
(bad)
in
(bad)
xchg
jg
mov
in
push
dec
jg
mov
cmc
call
mov
add
aas
mov
sbb
mov
dec
in
xchg
fucomip
ja
jecxz
addr16
fist
loopne
inc
rcr
push
call
jg
repz
inc
jg
fmul
out
mov
and
dec
(bad)
cmp
mov
xor
pop
jle
jb
jg
cmp
add
jns
std
aas
mov
bound
in
lock
ss
inc
js
iret
add
outs
adc
cmps
mov
lahf
shr
(bad)
aas
xchg
dec
jecxz
mov
mov
aas
popf
jle
movs
add
jmp
mov
cld
mov
push
mov
add
pop
lock
stc
test
push
movs
jnp
fbld
out
mov
int
sbb
mov
out
pop
inc
sub
stos
jmp
xor
(bad)
(bad)
jg
retf
out
call
cli
cmc
(bad)
rcr
fdivr
pop
shl
and
fcomip
xlat
sti
sbb
push
inc
hlt
sti
scas
imul
std
xor
mov
mov
mov
cld
(bad)
dec
mov
or
sbb
icebp
adc
hlt
push
xor
mov
push
pop
sub
popf
mov
call
pop
jmp
mov
jle
xchg
cmp
inc
sti
fistp
leave
lahf
and
jg
cli
aas
push
(bad)
jg
pop
adc
scas
(bad)
cmp
xchg
aas
jbe
mov
add
or
icebp
push
sar
aas
mov
pushf
inc
stc
mov
pop
sub
das
pop
adc
(bad)
mul
push
loop
pop
adc
sti
and
push
jge
scas
push
movs
imul
push
cli
jecxz
daa
jle
cmps
dec
jmp
neg
outs
stc
jmp
mov
sub
jne
jp
push
leave
pop
cmp
jmp
cmc
adc
mov
fistp
mov
out
out
sub
jo
fdivr
dec
(bad)
cmps
ffreep
call
ja
in
dec
(bad)
std
fild
fbld
(bad)
mov
std
xchg
lahf
lods
call
jle
fbld
pop
std
xchg
mov
cld
cs
call
add
mov
repnz
out
hlt
jg
sar
add
in
jmp
sub
pop
adc
sbb
xor
push
rcr
enter
mov
(bad)
push
(bad)
pop
mov
gs
adc
retf
jg
and
mov
icebp
aas
clc
popf
sub
imul
into
mov
clc
mov
add
daa
jbe
in
cmps
(bad)
inc
jg
dec
and
aam
mov
inc
mov
mov
out
mov
rol
mov
repnz
test
inc
ret
sbb
jp
aas
inc
(bad)
inc
(bad)
in
mov
inc
(bad)
fisttp
(bad)
outs
dec
add
inc
mov
outs
inc
ins
pusha
dec
sub
movs
mov
adc
sub
rol
sub
mov
ins
aas
stc
das
jle
outs
xchg
in
xchg
out
scas
and
add
sbb
xchg
and
aaa
cmps
jmp
mov
inc
dec
push
push
push
std
dec
(bad)
xor
mov
cmp
mov
add
(bad)
push
jle
scas
sub
xchg
adc
xchg
aaa
shl
jg
std
(bad)
mov
call
sub
xor
hlt
scas
clc
ror
cld
sbb
icebp
ja
push
ja
jns
xor
dec
(bad)
out
(bad)
fstp
test
mov
dec
jb
mov
out
inc
xchg
idiv
nop
in
xchg
mov
outs
sti
leave
aas
inc
(bad)
loop
stc
in
jg
pop
out
push
test
push
dec
(bad)
shr
mov
call
js
aaa
jmp
jg
ins
and
(bad)
fwait
mov
hlt
cmp
jbe
push
es
mov
cmp
das
clc
in
sti
in
ds
(bad)
jg
dec
inc
mov
es
(bad)
mov
xchg
fimul
pop
or
mov
jle
sbb
popf
and
or
adc
dec
cld
leave
call
xor
idiv
cmp
stc
xlat
dec
xor
mov
jmp
xlat
sti
ins
dec
push
mov
and
sbb
pop
pushf
aas
adc
sbb
outs
sar
nop
rcr
loop
cli
or
ja
(bad)
ss
(bad)
scas
(bad)
push
div
(bad)
out
(bad)
jl
(bad)
mov
mov
jle
hlt
dec
and
lea
mov
ffreep
js
(bad)
jmp
(bad)
jmp
daa
dec
cli
pop
add
fdivr
into
ins
and
push
jg
scas
and
jg
scas
and
jno
int3
pop
jmp
out
rcr
push
(bad)
jg
imul
cli
movs
push
sub
jmp
mov
mov
mov
stc
mov
(bad)
movs
pop
inc
dec
in
sar
or
jle
or
int3
pop
loope
fadd
bnd
sbb
pop
fmul
call
push
mov
add
lock
(bad)
sbb
cld
fistp
rol
sbb
jle
outs
stc
xor
sbb
aas
(bad)
xor
mov
repz
inc
int
and
cli
arpl
or
ret
pop
cli
aas
jl
call
mov
icebp
cli
shr
aas
movs
(bad)
jmp
mov
imul
sbb
rol
lds
xchg
cld
sbb
add
into
mov
(bad)
mov
dec
mov
cli
(bad)
jmp
xor
ja
lahf
std
es
xchg
and
or
inc
aas
call
mov
and
cld
ja
pop
dec
std
pop
std
in
imul
cmp
lock
add
sbb
xchg
cdq
and
out
push
(bad)
stc
aaa
loop
xchg
dec
add
fild
vpandn
test
popa
sbb
out
inc
jmp
lahf
cld
out
int
dec
das
clc
in
dec
jmp
mov
mov
leave
xor
repz
aaa
jmp
sbb
pop
add
jnp
jnp
rol
and
mov
cld
adc
stc
pop
cld
fisubr
(bad)
xlat
cld
ins
jle
pop
div
jle
pop
out
mov
sub
xlat
jmp
movs
cli
cmc
jle
out
inc
in
neg
jnp
jmp
mov
call
nop
mov
call
outs
(bad)
clc
scas
movs
bound
sti
out
repnz
repnz
hlt
outs
mov
sti
and
mov
jbe
(bad)
aaa
dec
xchg
inc
hlt
(bad)
aas
cmp
(bad)
std
sbb
call
js
fstp
std
imul
iret
out
clc
pop
xchg
xor
sbb
ja
out
mov
js
pusha
int
cld
push
aam
dec
jmp
stc
push
mov
shr
add
stc
ss
ja
sub
(bad)
fist
jmp
int
fcmovne
fcomip
xchg
push
mov
lods
adc
fldenv
cld
pop
repnz
sub
mov
jle
pop
add
ror
inc
call
push
(bad)
nop
(bad)
call
pop
jo
fwait
jmp
adc
hlt
(bad)
fist
mov
(bad)
fcmovbe
(bad)
pop
inc
aas
jg
(bad)
push
jnp
sti
out
sti
xor
jle
mov
call
sub
out
dec
aas
jg
scas
sub
(bad)
jmp
loope
dec
mov
pop
mov
xchg
jmp
(bad)
xlat
call
out
call
stc
outs
call
and
(bad)
fisub
cld
mov
(bad)
call
outs
movs
xor
(bad)
sbb
jo
jle
adc
push
xor
std
das
cld
xor
jmp
loope
daa
hlt
jmp
(bad)
out
cld
sbb
add
add
jmp
mov
mov
mov
cli
arpl
jg
jmp
pusha
idiv
pop
sar
leave
fdivr
mov
ins
jg
mov
outs
dec
sub
mov
data16
cld
dec
and
call
jecxz
(bad)
mov
not
(bad)
mov
mov
in
sti
in
ds
fwait
jmp
fstp
fstp
push
nop
sub
dec
enter
adc
std
cmp
aam
xchg
mov
cld
add
(bad)
data16
(bad)
das
clc
mov
cld
sbb
dec
inc
inc
push
dec
stc
(bad)
sahf
test
xchg
push
leave
push
test
dec
dec
mov
mov
mov
add
daa
jmp
out
movs
or
icebp
sbb
xor
push
shl
retf
fisttp
sub
outs
and
cld
fstp
das
rcl
sbb
sub
cld
push
lahf
cld
cmp
or
jg
test
nop
xor
retf
mov
lahf
pop
push
sbb
idiv
pop
retf
pop
cmc
clc
jne
pushf
cld
cs
pusha
(bad)
fldenv
sub
jg
pop
jecxz
les
jg
lods
outs
call
add
or
mov
jle
or
push
inc
inc
clc
ja
mov
inc
jg
mov
scas
sti
out
inc
mov
sar
ret
adc
addr16
jne
imul
movs
cli
xor
outs
shr
jmp
mov
or
and
std
cli
jmp
call
jg
out
bnd
daa
inc
push
mov
imul
cmp
retf
jle
shl
das
ret
jbe
call
sub
outs
mov
push
js
in
rol
jmp
test
shl
ffreep
pop
dec
adc
cwde
jnp
pop
stc
aad
push
cld
fsubr
outs
clc
add
jmp
rcr
sti
int
sbb
std
out
dec
inc
cmp
icebp
add
adc
outs
cmc
lods
fist
mov
cld
int
fwait
sub
pop
mov
mov
or
sbb
inc
add
stc
mov
push
cmp
and
clc
jne
jmp
xlat
jo
int3
out
lock
mov
neg
daa
mov
xchg
push
lahf
cld
iret
mov
mov
lahf
cld
cmp
push
add
mov
cld
add
stc
xor
in
mov
std
cld
xchg
jle
jmp
jmp
push
mov
clc
pop
sar
jg
std
(bad)
xor
lahf
test
add
ror
call
ja
loop
xchg
jle
lahf
clc
imul
push
std
(bad)
imul
mov
cli
mov
jg
cli
cld
mul
and
dec
aas
call
add
hlt
repz
lahf
pop
ror
aas
inc
jne
(bad)
cli
imul
pop
and
cmp
mov
dec
pop
pop
push
xchg
call
cli
stc
jmp
retf
mov
pop
push
fwait
jg
mov
leave
sti
mov
repnz
cmp
sub
std
xchg
or
out
mov
xor
(bad)
xor
(bad)
mov
(bad)
jg
(bad)
jg
(bad)
(bad)
mov
into
jmp
cmc
imul
sbb
(bad)
mov
xor
test
out
dec
sbb
fwait
push
mov
movs
arpl
jecxz
in
movs
adc
and
in
mov
xor
lahf
cld
sar
jmp
pop
and
inc
sub
stc
jnp
xchg
dec
aas
stc
cmp
std
sub
jle
pop
lahf
cld
xor
(bad)
nop
hlt
jmp
inc
cli
jne
xchg
aas
xchg
(bad)
xor
std
sub
icebp
daa
jg
test
mov
xor
(bad)
out
repnz
nop
stc
xlat
pop
inc
jmp
pop
or
sub
sahf
and
clc
jne
jle
jo
inc
cmc
bound
sti
fist
in
dec
stc
mov
sbb
outs
cld
mov
jp
sbb
mov
repnz
jg
ja
in
sti
popf
ds
xchg
inc
out
pusha
cld
not
icebp
(bad)
ss
(bad)
push
in
push
retf
cli
fbld
mov
sub
ds
out
pop
retf
mov
imul
ds
xchg
(bad)
std
xor
(bad)
aaa
inc
aas
mov
lea
icebp
(bad)
iret
inc
retf
and
dec
call
mov
out
ret
pop
dec
mov
mov
fwait
adc
jno
mov
(bad)
push
(bad)
push
inc
cwde
(bad)
aas
sbb
out
mov
and
inc
fcmovb
pop
test
enter
mov
retf
inc
pop
jmp
dec
mov
pop
cmp
aaa
cld
mov
mov
clc
sbb
aam
shl
lock
jmp
(bad)
lock
bound
ret
push
pop
fcmovb
dec
mov
dec
ret
cmp
sbb
daa
jle
out
add
clc
xor
std
ds
lock
jmp
cli
xor
inc
mov
xor
lock
loopne
fisttp
outs
arpl
rcr
stc
jmp
inc
lock
pop
inc
cli
jnp
pop
cli
shr
icebp
xlat
cmp
mov
xchg
mov
jmp
(bad)
out
dec
inc
bound
inc
sub
fstp
sbb
out
mov
(bad)
fcomip
pop
mov
inc
jecxz
cmp
mov
cmp
fistp
pop
nop
cld
cld
dec
mul
lods
and
jg
jp
push
jge
mov
adc
dec
mov
cli
jg
mov
test
dec
call
(bad)
fist
add
mov
(bad)
lock
cmp
jg
leave
ret
dec
jmp
xchg
and
pop
or
loop
je
inc
jmp
hlt
out
std
sub
(bad)
sub
int3
jg
jl
cmovns
(bad)
cmp
jl
ins
mov
stos
cld
jp
imul
add
repnz
mov
movs
stos
aas
or
inc
stos
aas
sbb
inc
mov
mov
push
dec
std
cs
shl
mov
(bad)
cs
mov
movs
jg
pop
stc
fild
dec
shr
jg
outs
(bad)
push
je
dec
cdq
lds
adc
jle
pop
sub
int
popf
(bad)
and
xor
adc
mov
adc
scas
movs
cmp
pusha
dec
inc
sti
sti
in
cmp
jmp
pop
inc
adc
cmc
scas
and
outs
lock
leave
scas
mov
(bad)
fistp
or
xor
(bad)
sti
pop
inc
(bad)
adc
sahf
pop
inc
(bad)
sar
cli
(bad)
aas
dec
(bad)
mov
cmc
fisttp
loopne
es
repnz
cld
xor
pop
daa
bnd
xor
cmp
aas
mov
hlt
repz
loopne
sbb
jge
div
pop
jge
pop
std
into
movs
lahf
jg
dec
(bad)
in
fcomip
xchg
jg
and
pop
stc
in
jg
pop
out
ja
or
xchg
and
pusha
aam
and
cli
xlat
nop
or
ja
or
and
mov
push
sti
dec
jg
add
mov
dec
(bad)
stos
fcomip
xchg
(bad)
cld
ja
in
stc
movs
add
xlat
sbb
stc
arpl
jg
cmps
pop
and
mov
xchg
std
jbe
cdq
aas
xchg
mov
jmp
int3
ficomp
mov
add
mov
sti
cmpps
ja
std
adc
sti
aas
mov
movs
jg
scas
xor
ds
retf
lock
jle
stc
out
jb
xor
sub
adc
cli
xchg
add
xchg
push
jg
(bad)
pop
push
dec
mov
cmps
push
aad
clc
imul
and
sahf
mov
pop
(bad)
fst
dec
lahf
cld
mov
xlat
dec
jg
mov
lahf
cld
xor
loope
aaa
ret
xchg
loope
inc
push
and
sbb
inc
xchg
jg
scas
sub
mov
xchg
aas
out
add
call
jnp
cs
fdivr
mov
jmp
std
push
in
std
pop
mov
repnz
fistp
rcr
mov
(bad)
cld
std
repnz
adc
out
fdivr
mov
push
jle
dec
cmp
movs
aam
pop
sti
cmp
std
cmp
std
cmp
(bad)
mov
xchg
cld
(bad)
cmp
out
jg
sub
add
fisubr
cld
dec
aas
jmp
cmp
add
lock
inc
(bad)
(bad)
xor
(bad)
fucomip
xlat
push
fistp
cld
ficom
sub
icebp
mov
out
shr
pop
pop
js
lahf
dec
icebp
lock
sar
out
call
push
jmp
mov
(bad)
jg
(bad)
dec
sbb
ja
sbb
pop
mov
and
xor
xor
jg
adc
mov
sub
and
cld
call
jle
adc
pop
inc
dec
lods
fbstp
dec
push
mov
mov
or
pop
(bad)
sbb
push
loopne
push
push
popf
cld
or
jmp
pop
pop
stc
lea
test
repnz
cld
ins
xor
fdivrp
sub
into
stc
ins
movs
inc
dec
push
sbb
sbb
shr
xor
and
fwait
jge
aas
cld
jbe
shl
(bad)
(bad)
lods
jo
xor
pushf
repz
xchg
jb
cmp
dec
push
mov
jg
sbb
(bad)
imul
cmp
and
mov
xor
jg
je
outs
stc
arpl
rol
cli
jg
retf
scas
call
cli
jmp
sbb
add
or
dec
mov
daa
clc
repz
push
and
scas
adc
push
dec
(bad)
stc
pop
sar
imul
outs
call
cli
jmp
test
stc
add
and
(bad)
sbb
jle
shr
aas
sbb
clc
mov
jg
cmps
lahf
adc
jae
jnp
iret
fist
out
call
std
not
xchg
xchg
or
sti
cdq
pop
dec
push
xor
and
loope
cld
mov
scas
cmps
inc
dec
cs
pop
rol
ja
jg
out
cmps
mov
or
inc
and
sbb
(bad)
jmp
neg
ror
pop
hlt
jg
mov
sahf
dec
xchg
mov
cs
ret
cli
int
stos
push
mov
fmul
(bad)
jle
pop
and
sub
cld
sbb
jecxz
scas
xor
push
push
hlt
ja
clc
pop
xor
ret
jmp
mov
(bad)
mov
xchg
test
pop
pusha
cmp
(bad)
adc
(bad)
into
jg
js
lahf
mov
(bad)
add
or
push
xor
pop
mov
or
out
lock
pop
mov
outs
mov
jge
jmp
loopne
jo
cmp
scas
mov
mov
mov
pop
jb
sti
fist
mov
xchg
dec
into
dec
cld
inc
leave
inc
repz
icebp
pop
nop
frndint
dec
mov
inc
jb
(bad)
sbb
mov
call
(bad)
mov
and
dec
adc
adc
les
mov
push
adc
and
mov
outs
repz
mov
xor
fist
es
mov
popa
enter
sub
xlat
aas
adc
or
xor
xchg
(bad)
mov
icebp
arpl
neg
add
sub
or
dec
dec
idiv
dec
xchg
lahf
add
enter
xchg
fistp
adc
mov
in
bnd
dec
jg
pop
mov
movhps
(bad)
cs
mov
std
push
(bad)
in
lock
mov
xor
ins
inc
jbe
stc
or
jg
loopne
xor
(bad)
jns
fbld
das
call
sub
sub
cwde
jle
xchg
mov
fcomp
cs
iret
and
pop
jg
pop
psubd
lahf
mov
loope
sti
ins
sub
mov
cmps
mov
inc
and
arpl
hlt
xchg
mov
sbb
cmp
inc
ret
es
inc
call
or
outs
mov
bound
pop
icebp
pop
popa
add
add
scas
mov
sti
mov
(bad)
loopne
jns
cmp
jg
lods
aas
add
(bad)
sub
test
pop
sti
aad
fdivr
dec
cld
xor
pop
mov
out
sahf
(bad)
gs
sbb
daa
jb
jmp
inc
cli
fild
movs
jg
pop
pop
fmul
repz
hlt
aaa
sti
xor
pop
(bad)
imul
push
call
outs
aad
ror
xchg
cwde
jecxz
out
cld
lods
mov
(bad)
pop
not
mov
push
cmps
lahf
cld
mov
jmp
add
sbb
cld
ja
sub
das
mov
add
retf
inc
ins
xchg
push
jl
push
mov
adc
push
out
sub
sbb
ret
dec
out
push
dec
dec
jmp
in
out
jb
movs
mov
mov
or
retf
(bad)
sar
std
xlat
add
xchg
fcomip
ja
int
push
neg
popa
rcl
inc
in
loopne
adc
pop
std
sbb
jg
(bad)
call
cmps
push
call
xchg
jmp
addr16
nop
stos
jg
xlat
adc
pop
pushf
(bad)
mov
ins
sub
jle
fild
imul
loop
mov
(bad)
popf
jle
fist
neg
cmp
xor
push
lahf
cld
ja
adc
push
shl
icebp
std
sub
push
fisub
stc
in
std
sbb
pop
dec
addr16
inc
cmp
sti
int
lea
lock
call
mov
mov
imul
jg
call
aad
dec
xor
pop
(bad)
test
(bad)
mov
pushf
cmp
(bad)
xchg
(bad)
cld
mov
in
stc
ins
aas
stc
movq
aas
(bad)
aaa
les
dec
cli
fstenv
mov
inc
out
std
aaa
dec
pop
ret
jmp
or
xchg
(bad)
popa
jl
int
mov
int3
adc
pop
repnz
inc
mov
dec
popa
enter
xchg
cld
into
aam
jae
xchg
xchg
ja
std
pop
adc
or
adc
cmc
cmp
lea
call
pop
loope
push
sub
mov
(bad)
lds
mov
add
push
(bad)
sbb
movs
jg
(bad)
aad
(bad)
mov
call
dec
adc
shl
(bad)
cld
arpl
jns
jo
out
and
push
inc
jg
and
inc
lahf
cld
ins
mov
mov
int3
icebp
or
shl
jmp
and
clc
lea
jle
dec
(bad)
jmp
(bad)
mov
lea
pop
sbb
outs
sbb
mov
xor
mov
sti
ins
ds
out
jle
dec
push
ja
mov
xchg
lods
pop
cli
sbb
sub
(bad)
out
out
hlt
pop
(bad)
clc
outs
(bad)
jecxz
loope
(bad)
push
clc
lahf
movs
mov
or
jg
pop
fadd
push
cld
sti
outs
call
jbe
int
stc
jecxz
test
fild
rol
mov
dec
(bad)
leave
call
std
call
loop
dec
in
jle
(bad)
mov
sub
jg
loope
in
fisttp
mov
in
std
sbb
jecxz
call
das
clc
in
call
bound
add
cli
cmps
sar
adc
dec
shl
out
out
test
jmp
mov
mov
daa
jae
outs
add
adc
les
call
cmc
xchg
test
dec
loope
outs
mov
jl
push
mov
aaa
std
xlat
add
lahf
or
out
ja
int
aaa
sahf
or
shl
scas
and
test
std
cwde
(bad)
pop
addps
ins
or
(bad)
idiv
(bad)
mov
add
stc
cmp
xor
fist
aas
jmp
adc
pop
movs
push
sbb
fstp
(bad)
dec
lahf
cld
push
mov
dec
in
es
neg
xor
add
and
jg
fisttp
int3
jbe
sub
push
adc
bound
pop
mov
mov
cld
data16
push
jg
mov
repnz
xchg
mov
addr16
mov
mov
jmp
test
std
xlat
dec
call
dec
int
imul
mov
out
(bad)
fwait
(bad)
out
mov
mov
adc
(bad)
std
sbb
push
sbb
bound
test
(bad)
xchg
mov
(bad)
out
mov
std
cmp
jmp
jmp
mov
imul
dec
hlt
jg
in
mov
in
clc
in
jg
fucomip
aaa
dec
add
neg
(bad)
sbb
loopne
es
mov
lea
jle
out
stc
loopne
pop
push
mov
std
cmp
(bad)
inc
nop
jno
sbb
fcomip
pop
(bad)
out
nop
sbb
mov
push
push
mov
aad
loope
(bad)
mov
aas
test
(bad)
mov
int
lahf
inc
aas
jmp
pop
add
cmp
push
mov
das
cli
int
(bad)
push
or
aaa
clc
xor
(bad)
cmp
sbb
bound
jg
xchg
mov
cld
data16
int3
std
mov
jg
cmps
dec
enter
stc
idiv
dec
(bad)
in
fistp
outs
(bad)
cmp
pop
pop
loopne
fistp
push
std
mov
pop
dec
(bad)
mov
neg
mov
cmps
and
aas
stc
sbb
jg
add
leave
jg
popa
shr
mov
hlt
xor
fistp
std
(bad)
rcl
push
mov
into
gs
cdq
inc
das
lods
inc
dec
jg
mov
inc
dec
retf
jle
push
push
jg
clc
out
jnp
cmc
outs
outs
(bad)
mov
fidivr
hlt
aaa
inc
jmp
or
das
and
mov
mov
sub
popf
cmps
leave
scas
movs
jo
jnp
mov
xchg
hlt
arpl
lock
dec
mov
xchg
(bad)
cmps
sbb
out
dec
out
call
(bad)
cdq
clc
loopne
test
sti
clc
aaa
call
dec
mov
cmp
dec
pop
inc
cmp
sub
sbb
dec
push
stos
sbb
mov
aas
stc
mov
mov
ins
push
or
(bad)
aas
stc
push
lds
inc
(bad)
jmp
(bad)
inc
outs
repz
(bad)
push
mov
stc
(bad)
xlat
adc
repnz
xchg
pop
pop
jl
aad
adc
out
inc
mov
mov
stc
ins
movs
out
ret
call
pop
leave
jmp
mov
jae
xor
lods
fcomip
mov
cli
int
js
adc
dec
(bad)
(bad)
mov
ret
adc
inc
stc
lods
(bad)
mov
popf
jg
fistp
jle
jmp
mov
push
std
jbe
mov
test
repnz
inc
(bad)
jmp
xchg
ins
std
scas
xor
(bad)
jne
icebp
in
xlat
xchg
test
jg
scas
daa
dec
mov
jae
(bad)
cmp
std
pop
sar
jmp
pop
js
hlt
fucomi
neg
test
push
hlt
fstp
(bad)
fild
xchg
mov
fdivr
or
sbb
loop
(bad)
fwait
(bad)
sbb
sub
mov
fbld
std
cmp
sbb
aas
(bad)
xor
mov
(bad)
mov
shl
mov
dec
aas
call
dec
adc
jg
imul
out
inc
aas
jg
cli
cld
jmp
outs
cli
sti
outs
cmps
(bad)
cmp
mov
cli
in
fbld
(bad)
inc
mov
mov
clc
xor
lea
jle
(bad)
stc
hlt
dec
std
dec
movs
iret
(bad)
adc
(bad)
mov
cli
mov
fs
mov
idiv
dec
dec
sar
sub
dec
std
cld
mov
sub
out
mov
inc
lahf
call
repz
stc
jne
stc
xchg
cld
lea
mov
inc
inc
cli
in
outs
sti
jne
popf
icebp
in
fcomip
mov
jge
icebp
cmc
(bad)
mov
hlt
xlat
mov
or
jmp
in
jg
cli
inc
sbb
movs
call
mov
movs
call
push
out
jnp
jge
pop
mov
test
pusha
jg
or
cmps
in
(bad)
push
repnz
sub
ficom
dec
(bad)
cld
or
std
daa
sub
in
inc
jmp
jg
out
cld
leave
fisttp
add
jmp
xor
lods
je
xchg
mov
movs
mov
push
and
in
(bad)
lods
(bad)
and
fild
leave
pop
inc
icebp
rcr
retf
ins
jg
out
jb
loopne
rcl
xor
adc
test
xchg
pop
arpl
(bad)
xlat
adc
or
jnp
dec
dec
bound
cmp
arpl
adc
movs
and
js
xor
ficom
or
mov
std
dec
lahf
cld
xor
in
(bad)
push
retf
xor
pop
or
ja
dec
pop
retf
cmc
cmp
movs
jg
pop
stos
(bad)
popf
cmp
inc
es
and
cld
sbb
jg
sbb
jmp
cli
sub
leave
fcomip
jmp
ss
pushf
xor
addr16
(bad)
ss
neg
adc
mov
in
mov
push
push
scas
push
stc
cmp
dec
in
not
call
sbb
(bad)
clc
(bad)
inc
and
mov
bound
call
fbld
std
mov
call
cld
sbb
imul
jg
mov
fbld
mov
fild
movs
push
sar
div
das
movs
mov
js
xlat
fsqrt
lea
cmps
(bad)
lock
ss
addr16
(bad)
cmp
div
xchg
mov
call
mov
sar
mov
outs
lock
jmp
scas
mov
sub
jmp
fs
jg
inc
cmp
xchg
shr
leave
push
jmp
mov
into
outs
stc
or
mov
lahf
cld
out
xor
bsf
dec
mov
outs
mov
(bad)
adc
ja
mov
in
add
mov
das
mov
mov
jae
mov
ins
mov
pusha
dec
jmp
mov
repz
jmp
les
aad
(bad)
jnp
xor
pop
xor
jle
sti
aam
ja
pushf
pop
inc
pop
and
lods
call
bound
fcmovnbe
scas
cld
ffreep
cmp
arpl
push
cli
cvtdq2ps
dec
fcom
inc
xchg
test
inc
cli
mov
std
cmp
cs
mov
jmp
xlat
jmp
pop
mov
cmc
rcr
psubb
adc
not
fldcw
fwait
popf
fist
cmc
ja
pusha
stc
mov
dec
test
popa
std
sahf
aas
cmc
mov
mov
cld
fwait
retf
or
(bad)
out
jo
in
cmp
dec
mov
imul
call
fwait
lea
(bad)
push
push
mov
mov
sub
cwde
dec
pop
jmp
jg
(bad)
fwait
sub
xor
(bad)
jg
arpl
dec
jg
cmp
mov
xchg
cmp
(bad)
(bad)
sub
sti
imul
cmp
imul
jg
imul
call
jmp
adc
iret
sar
inc
call
movs
lahf
push
std
jmp
rol
js
mov
call
in
aas
stc
arpl
mov
sub
pop
inc
inc
sbb
mov
xchg
pop
jle
scas
loope
iret
cmp
(bad)
in
pop
inc
ins
xor
jnp
or
lods
mov
jle
dec
(bad)
out
(bad)
xchg
jmp
ja
das
xchg
mov
(bad)
in
mov
in
es
repz
adc
(bad)
fcomi
leave
mov
cmps
(bad)
stc
(bad)
mov
xchg
cmp
mov
jle
cmp
add
cmp
cmp
test
test
in
std
ss
adc
std
mov
add
in
(bad)
fsub
call
outs
scas
add
add
stc
pop
arpl
sti
ins
cmp
popf
aas
stc
dec
jle
dec
inc
mov
dec
sub
or
outs
or
jg
out
mov
sbb
idiv
add
repz
outs
add
rol
cmp
jg
(bad)
arpl
into
out
repnz
ja
mov
and
std
cmp
mov
(bad)
cld
sti
cmps
mov
dec
push
inc
(bad)
iret
outs
mov
xchg
inc
call
(bad)
data16
iret
outs
clc
fld
dec
push
adc
out
jmp
xor
pushf
test
out
enter
xor
cmp
test
jmp
push
lds
cmp
idiv
int
aas
jbe
jg
loope
pop
jecxz
mov
aaa
pop
jmp
jmp
dec
dec
out
mov
sub
xchg
mov
mov
ins
or
std
into
aam
dec
call
nop
std
into
pop
mov
pop
cld
out
ss
jno
pop
addr16
jle
leave
cmp
(bad)
cmp
pop
repz
jg
jb
jg
(bad)
mul
fadd
das
stc
xor
(bad)
rcr
mov
out
cld
xor
call
(bad)
(bad)
xchg
mov
(bad)
(bad)
xchg
test
mov
pop
idiv
in
test
pop
(bad)
(bad)
jle
dec
dec
(bad)
mov
clc
int
jp
sub
cld
xchg
mov
and
push
fs
ror
sar
bnd
into
pmaxsw
xchg
lock
sti
fucomip
xchg
jmp
ja
in
cld
int
cmp
cmp
shl
lahf
jmp
cmc
test
jg
icebp
mov
std
daa
jg
ret
aas
mov
cmp
pop
imul
lock
adc
stc
dec
aas
clc
jne
jmp
stos
xchg
lahf
aas
loopne
inc
dec
jg
pop
inc
add
or
sub
call
(bad)
push
jle
pop
cld
sbb
jl
jg
cmp
rcr
lahf
std
mov
iret
jg
fcomip
psubb
outs
dec
lahf
xor
mov
sbb
loope
inc
test
fild
xchg
xor
xor
mov
sub
in
jo
xor
lea
loope
or
neg
cdq
jb
mov
in
ja
fisub
mov
sub
adc
cmp
adc
jg
or
cwde
cdq
inc
sub
cmp
sahf
jno
loope
mov
(bad)
mov
(bad)
sbb
aad
mov
out
aad
dec
mov
arpl
jbe
(bad)
(bad)
clc
imul
idiv
cs
sbb
push
mov
pop
cld
sbb
sti
in
dec
mov
mov
mov
in
(bad)
fbstp
jecxz
and
ja
mov
inc
cli
xchg
mov
out
adc
lods
(bad)
mov
hlt
(bad)
clc
sbb
les
lods
mov
loope
cmps
mov
push
stos
sahf
inc
idiv
mov
mov
outs
sub
in
test
mov
sbb
div
in
sti
or
xchg
jo
data16
cmc
jle
hlt
test
imul
push
fisub
(bad)
(bad)
retf
out
cwde
(bad)
jmp
fwait
lock
or
mov
pop
sar
int3
sar
outs
(bad)
and
and
clc
std
or
mov
inc
cld
pop
mov
jmp
jmp
push
inc
jo
cmp
scas
ror
push
inc
cli
dec
mov
sub
mov
cld
rcr
jb
fwait
dec
dec
mov
outs
inc
xchg
std
jae
mov
add
mov
mov
nop
notrack
hlt
imul
inc
jb
pop
shl
inc
call
hlt
(bad)
out
jg
jle
ror
lahf
jg
imul
es
cli
xchg
jmp
jmp
push
out
push
std
ss
sub
idiv
jo
ret
jmp
jge
(bad)
dec
(bad)
fild
movs
test
mov
out
dec
mov
aaa
ror
call
dec
sti
dec
sar
fist
sub
cld
push
test
jmp
push
cli
std
mov
cli
stc
pop
adc
psubsw
pop
sti
jne
jns
aas
(bad)
cmp
loope
jmp
cli
std
outs
mov
(bad)
iret
arpl
stc
dec
jmp
(bad)
jecxz
out
movs
ss
shr
addr16
call
jge
es
mov
call
dec
shl
mov
js
fdivp
sti
outs
dec
out
pop
ror
test
sub
add
push
sti
fild
stc
std
jmp
sti
retf
push
jnp
sti
mov
or
lahf
inc
(bad)
or
repz
pop
arpl
std
and
addr16
fild
call
out
jo
retf
jmp
inc
fbld
inc
aas
aas
mov
out
jg
jg
dec
mov
(bad)
pusha
call
add
jg
int
ss
push
fisttp
xor
(bad)
aas
mov
sti
xchg
push
sti
pop
cmps
mov
mov
jge
out
inc
lahf
call
jo
inc
cli
stc
or
out
pop
hlt
sti
lahf
dec
in
cmps
ds
jbe
sti
daa
call
test
and
jmp
std
(bad)
cmp
lahf
enter
addr16
jmp
scas
dec
out
dec
aas
jg
jge
inc
adc
lds
cld
(bad)
cmp
stc
aas
sar
mov
(bad)
lods
test
pop
dec
lahf
push
jle
iret
jle
mov
or
icebp
jg
pop
mov
pop
dec
push
jle
add
das
dec
mov
es
jp
icebp
(bad)
hlt
dec
jmp
(bad)
fisubr
repz
jo
sub
(bad)
jmp
cli
(bad)
out
imul
repz
pop
inc
cmp
pop
repnz
xchg
mov
jg
scas
and
imul
xor
hlt
(bad)
jg
xlat
nop
(bad)
out
mov
(bad)
lahf
sar
jmp
(bad)
inc
pop
jmp
mov
xlat
clc
dec
call
or
lahf
xor
scas
jno
(bad)
call
std
(bad)
jmp
jmp
mov
clc
xor
sar
(bad)
(bad)
inc
call
dec
(bad)
call
std
dec
cmps
(bad)
call
(bad)
push
(bad)
inc
aas
push
in
jns
(bad)
mov
jmp
sub
xchg
dec
(bad)
jg
pop
mov
and
(bad)
jmp
hlt
jmp
call
jg
(bad)
jmp
(bad)
jg
std
jmp
jle
std
dec
mov
adc
push
in
aas
xchg
inc
faddp
adc
dec
sub
fwait
push
repnz
daa
dec
xlat
loop
jg
ja
mov
int
jmp
mov
call
repnz
cmps
jg
jle
and
fidivr
mul
sar
dec
mov
push
mov
(bad)
repnz
push
outs
in
mov
xchg
mov
pop
xlat
jg
out
repnz
(bad)
in
call
cmp
movs
xor
fistp
mov
pop
loope
sub
sbb
in
jnp
rcr
mov
inc
out
repz
lock
repnz
inc
mov
(bad)
(bad)
pop
je
xor
cmp
jecxz
loopne
(bad)
(bad)
das
movd
cli
icebp
or
jle
sar
add
xlat
ret
shr
das
(bad)
(bad)
out
sbb
div
inc
les
ffreep
outs
jg
jle
pop
icebp
fistp
(bad)
jno
inc
mov
in
loopne
les
aas
pop
sbb
aad
jno
lock
or
aas
pop
out
sub
mul
pop
(bad)
(bad)
loopne
(bad)
xor
mov
aam
jecxz
cmp
icebp
inc
jbe
jecxz
mov
mov
add
xchg
pop
ffreep
(bad)
fucomip
loopne
aas
ds
pop
mov
js
xor
(bad)
fild
jmp
mov
(bad)
(bad)
loopne
add
xor
shr
out
pop
cld
call
hlt
sar
clc
in
das
(bad)
outs
inc
into
pop
jmp
jle
ds
call
notrack
lock
mov
cld
test
jg
sbb
in
fisttp
cmp
loope
mov
clc
in
iret
ret
clc
loopne
mov
sbb
ror
aas
or
dec
(bad)
icebp
jecxz
fcomip
nop
mov
ss
stc
loope
fstp
mov
adc
sub
or
lea
in
idiv
xor
std
inc
pop
sar
fwait
pop
inc
xchg
test
sar
push
mov
jmp
or
cli
(bad)
aas
dec
(bad)
jmp
call
(bad)
(bad)
xor
jmp
(bad)
jmp
sbb
fwait
sar
jg
cli
jmp
mov
push
pop
das
imul
mov
call
std
adc
jecxz
cli
pop
jle
repnz
jle
repnz
mov
jg
outs
movs
jg
ds
xchg
sar
dec
sar
adc
xor
idiv
cs
aas
stc
cmp
aas
lock
mov
add
in
dec
dec
pop
repnz
add
jle
out
jle
addr16
cs
dec
(bad)
adc
mov
dec
cld
clc
ret
sar
xchg
jle
cld
add
xchg
aaa
xchg
scas
fist
lock
bndldx
dec
call
jl
add
sbb
jl
pop
pop
in
push
jmp
fistp
js
pop
mov
mov
dec
inc
jecxz
adc
push
clc
icebp
jmp
inc
mov
pop
ret
pop
mov
retf
xlat
out
jl
sub
imul
(bad)
paddd
js
lock
loope
ss
xlat
out
mov
jae
jmp
dec
cli
jecxz
and
lock
movs
and
movs
push
jg
dec
(bad)
jae
aad
dec
jmp
repnz
push
test
(bad)
mov
adc
mov
cmc
adc
push
xchg
mov
out
daa
jg
outs
test
scas
sti
pop
jle
push
inc
and
ja
adc
xchg
aas
jmp
cli
in
call
jl
daa
xchg
arpl
(bad)
push
mov
(bad)
cmps
or
pop
dec
push
inc
pop
out
lock
scas
fdivr
into
pop
outs
icebp
(bad)
outs
shl
mov
jno
out
repnz
cmc
loopne
cld
clc
in
loopne
clc
icebp
stc
shl
ins
pop
cmp
(bad)
icebp
sar
clc
icebp
jmp
shr
aas
mov
cmp
int
(bad)
outs
jae
sbb
mov
popa
stc
outs
xchg
(bad)
jne
push
mov
fidivr
hlt
outs
pop
push
cli
lahf
jg
mov
dec
and
mov
ins
(bad)
cmp
jg
fist
icebp
(bad)
icebp
fs
jg
dec
xchg
mov
es
pop
mov
cmps
pushf
(bad)
call
jmp
stc
int
in
dec
clc
cmp
(bad)
jmp
cld
std
inc
aas
idiv
pop
test
jne
sub
dec
push
lahf
sbb
fdivr
in
call
mov
fwait
hlt
cmps
lods
arpl
xchg
cld
out
push
mov
pop
mov
fist
sahf
ds
int
(bad)
in
or
in
mov
xlat
sar
pop
(bad)
cld
jg
jb
repz
jg
in
mov
pop
mov
jle
fist
xchg
call
dec
fucomip
mov
gs
mov
idiv
add
cld
cmps
push
xchg
add
or
lahf
repnz
jns
in
ja
popf
adc
pop
inc
jg
fbld
lahf
or
jle
fisttp
jmp
call
push
ret
lock
std
addr16
jecxz
xadd
test
xchg
fistp
repnz
rcl
push
std
icebp
cmp
std
scas
mov
push
and
clc
idiv
fs
pop
std
dec
clc
jecxz
mov
in
ja
scas
movs
jmp
inc
(bad)
mov
hlt
clts
xchg
(bad)
cdq
pop
dec
or
pop
inc
jmp
sbb
push
rcr
xlat
cli
int
inc
dec
js
out
loope
xchg
out
and
inc
fsub
loopne
mov
inc
mov
fsub
jmp
add
inc
cli
xchg
hlt
mov
jae
repz
sti
in
and
aas
call
jp
mov
pop
jmp
cld
icebp
mov
cli
shl
adc
aam
out
rcr
clc
jecxz
bswap
lahf
cmc
mov
adc
cld
or
(bad)
xchg
inc
jecxz
outs
(bad)
jle
out
lock
(bad)
mov
lock
sub
mov
adc
out
cmp
mov
mov
mov
and
mov
nop
stos
fcomp
push
leave
out
jb
mov
fs
sbb
(bad)
addr16
mov
pop
mov
das
jg
xchg
ins
clc
ins
(bad)
js
mov
std
ins
jle
scas
iret
mov
push
xchg
cli
inc
push
js
mov
inc
std
mov
jne
mov
popf
jge
push
fcomp
mov
stc
mov
add
sbb
jmp
in
ffreep
xor
inc
clc
jge
pop
jns
rcl
(bad)
jg
enter
out
jmp
arpl
jg
lahf
or
dec
or
jmp
stos
cmp
cli
pop
std
push
mov
jns
call
adc
jmp
hlt
ret
push
addr16
ins
paddusb
inc
pop
cld
mov
inc
push
cld
mov
vmovsd
call
xor
rcl
jo
xlat
adc
pop
mov
pop
jg
mov
jle
imul
sar
sbb
clc
scas
inc
jecxz
inc
jl
mov
(bad)
cld
or
stos
mov
movs
jg
mov
dec
or
xchg
(bad)
std
jno
out
std
(bad)
hlt
shr
call
iret
lock
fwait
(bad)
repz
sub
or
(bad)
xor
std
out
(bad)
fidivr
jns
cmp
mov
mov
mov
cmp
icebp
pop
jl
mov
xchg
dec
or
and
call
jle
mov
mov
push
mov
lahf
cld
mov
inc
cmp
cmc
xchg
jp
std
ja
add
fcomp
fsub
sti
sar
dec
pop
(bad)
sbb
inc
loop
sti
or
xchg
jge
xchg
fsubp
(bad)
(bad)
jnp
sbb
repz
jp
and
sti
fistp
movs
dec
inc
mov
idiv
xchg
fisttp
push
dec
fild
jnp
neg
add
iret
adc
add
cmp
cmp
neg
add
arpl
mov
sub
dec
je
sub
(bad)
das
rcr
sar
cli
mov
cmp
push
cwde
jg
(bad)
clc
int
dec
inc
loopne
dec
jle
(bad)
aaa
test
dec
call
fst
lods
(bad)
jnp
xchg
mov
cmp
xchg
dec
push
cwde
out
xor
dec
test
mov
movs
mov
xor
mov
jg
jge
aad
ror
jbe
(bad)
cld
ja
out
shl
test
and
pop
jg
jg
cli
cld
scas
inc
ret
fild
std
stc
clc
jecxz
cmc
fdivrp
jecxz
sub
call
fidivr
lahf
cld
add
addr16
into
out
or
das
inc
retf
add
mov
jb
jmp
add
hlt
jmp
xchg
jg
outs
inc
jb
sbb
jb
aas
xor
out
repnz
cli
(bad)
aas
inc
jg
push
push
push
jg
jg
test
iret
(bad)
and
int3
mov
outs
in
jmp
(bad)
out
clc
int
xchg
fild
cmp
pop
add
(bad)
cmp
arpl
cmp
jmp
imul
push
das
cdq
jmp
cmp
bound
jg
mov
movs
jg
movs
xchg
cmp
jmp
arpl
ss
push
std
sahf
lahf
adc
jg
je
das
(bad)
aaa
add
sahf
cdq
jg
xor
cmp
fwait
call
inc
movs
cwde
les
or
clc
fild
cmc
mov
clc
outs
cmp
cli
push
mov
test
pop
cld
or
stc
lahf
(bad)
(bad)
test
jle
out
fsub
mov
das
mov
cld
mov
imul
test
mov
(bad)
js
jmp
push
fst
mov
imul
sahf
ds
int
jmp
out
mov
and
aaa
dec
jg
fild
mov
addr16
cli
mov
fadd
fucomip
xlat
ror
nop
in
dec
jle
fnsave
or
sbb
fbstp
fwait
dec
dec
dec
or
cmp
and
(bad)
cmp
(bad)
pop
lahf
and
repz
jmp
std
(bad)
jle
leave
(bad)
std
pop
hlt
(bad)
(bad)
mov
xchg
mov
shr
movs
pop
aam
ja
cmp
sub
stc
in
test
add
fld
leave
scas
clc
ins
ds
pop
jle
dec
inc
(bad)
xchg
(bad)
out
mov
in
(bad)
ins
jg
(bad)
mov
xor
mov
repz
std
sbb
or
(bad)
push
sbb
jle
repnz
dec
(bad)
xchg
fisttp
pusha
jle
dec
(bad)
stos
fisttp
aas
fdivr
mov
outs
(bad)
jo
mov
sub
out
add
sub
rep
(bad)
fwait
shl
mov
fnstcw
and
std
push
mov
movs
dec
cmps
lods
fild
jbe
arpl
adc
cli
out
call
cli
fnstsw
(bad)
mov
je
outs
fwait
dec
test
inc
xor
fistp
add
mov
or
dec
mov
hlt
cli
imul
out
mov
ror
shl
sbb
fstp
jle
test
(bad)
out
outs
inc
pop
jp
std
lahf
mov
sti
out
movs
fisttp
(bad)
call
hlt
sbb
inc
out
hlt
repz
or
inc
hlt
into
das
mov
std
ffreep
div
fnstsw
aas
jmp
aas
sub
or
mov
ror
lahf
inc
jg
mov
sti
mov
sbb
pop
rcr
call
std
dec
cli
jle
jg
aam
xchg
shl
or
std
cmp
mov
repz
ins
jle
cli
(bad)
and
iret
push
aam
(bad)
stc
cmc
gs
iret
call
inc
clc
cld
and
fucomp
dec
aas
call
stc
fist
jg
notrack
(bad)
outs
hlt
fnstcw
jnp
call
jmp
cli
std
fbld
sbb
std
dec
mov
std
pop
call
(bad)
push
hlt
sti
scas
movs
(bad)
add
(bad)
call
(bad)
fbld
xchg
jl
xchg
in
iret
push
push
xchg
sub
mov
(bad)
imul
lds
aas
mov
xchg
sub
mov
ret
jae
dec
call
cli
(bad)
out
std
imul
fistp
inc
call
call
mov
push
call
mov
leave
mov
fstp
imul
outs
sti
xor
mov
jg
retf
jg
(bad)
(bad)
out
call
cs
mov
inc
(bad)
jmp
xor
mov
outs
dec
pop
xlat
fistp
gs
aas
std
in
and
dec
push
and
(bad)
pop
jle
xchg
sbb
adc
push
xchg
dec
std
daa
jle
and
cld
cmps
xchg
in
js
pop
mov
cs
adc
cmp
jle
retf
mov
pop
mov
pop
retf
xchg
std
adc
(bad)
xchg
aas
xchg
jg
mov
aas
es
mov
in
clc
pop
jle
sbb
and
(bad)
(bad)
pop
jl
pop
lahf
dec
push
call
xchg
lods
ror
into
or
ss
in
clc
sub
sbb
mov
sar
jnp
fnclex
(bad)
out
jo
fwait
std
fisttp
inc
lock
cld
aas
push
in
jg
aaa
cmp
cli
fnstcw
mov
sbb
aam
and
dec
sub
mov
and
sti
and
sti
mul
jmp
in
outs
adc
adc
or
stc
addr16
dec
dec
(bad)
mov
push
jb
inc
pop
(bad)
mov
jg
dec
(bad)
ss
sar
xchg
push
cli
jmp
xchg
fistp
gs
jle
xchg
mov
out
outs
out
es
push
push
clc
das
cld
push
jns
loope
cmps
adc
out
inc
sub
add
sub
jle
dec
dec
xchg
fdivrp
pop
jmp
call
out
repnz
cld
cmp
ret
fcomip
mov
ins
mov
imul
stos
imul
(bad)
sbb
call
aaa
dec
jg
fcomip
ja
not
xor
push
cmp
and
mov
out
dec
aas
imul
jl
fld
push
mov
push
push
jg
jg
push
fsubp
cld
push
hlt
shr
movs
(bad)
cmp
loope
ret
xor
call
mov
cld
xor
(bad)
jg
retf
shr
and
psrld
std
(bad)
es
fistp
cmp
pop
add
outs
stc
fist
and
fwait
cmps
jg
pop
sti
shl
sbb
cdq
(bad)
scas
(bad)
sti
adc
test
mov
pop
mov
inc
idiv
lock
add
outs
mov
mov
cli
std
jae
popa
cli
jns
jg
outs
inc
jmp
rcr
mov
nop
lahf
fwait
jle
std
(bad)
(bad)
call
inc
or
fucomi
dec
mov
std
in
cwde
push
in
stos
(bad)
mov
int
sub
push
(bad)
sti
add
jmp
add
mov
loopne
or
pop
stc
push
nop
cs
outs
xchg
aas
sbb
mov
jmp
dec
jl
fild
ret
cli
sub
pop
lea
(bad)
lock
(bad)
mov
jecxz
loopne
movs
push
pop
xor
jg
sub
add
pop
jl
aas
inc
scas
adc
neg
push
test
pop
cld
inc
xor
call
in
fcomp
push
nop
fldl2t
mov
jmp
mov
ins
movs
(bad)
out
xacquire
sbb
call
shl
sti
aaa
jmp
pop
sub
mov
loope
push
cmp
dec
jl
jecxz
popf
loopne
rol
jg
sar
add
pop
shl
les
jg
jbe
jo
cmp
dec
stc
es
dec
add
fild
jge
push
neg
fstp
imul
test
push
xor
int
retf
dec
push
xchg
or
mov
outs
jb
out
jle
hlt
test
cmc
fimul
inc
dec
movups
es
(bad)
(bad)
in
scas
cld
mov
out
std
out
jmp
mov
sub
int3
(bad)
fisttp
xchg
cmp
jle
dec
or
lahf
mov
jg
dec
(bad)
sti
sub
idiv
fsub
add
dec
cmp
cmp
or
jg
pop
jmp
mov
jle
add
mov
stc
mov
dec
push
sbb
pop
push
(bad)
ss
mov
cdq
cmp
std
jmp
mov
mov
mov
(bad)
cs
aad
mov
(bad)
fld
das
sti
pop
jmp
ins
add
mov
mov
pop
cmp
fild
retf
jg
int3
cmc
dec
jmp
fdivrp
inc
rol
sub
pop
mov
std
shl
jle
fistp
shr
movs
mov
fisubr
inc
mov
fld
test
das
lock
outs
out
neg
jge
pop
std
xchg
or
push
sub
outs
std
movs
pusha
rcr
test
div
mov
cdq
std
sbb
call
cli
(bad)
mov
jle
pop
adc
pop
hlt
sti
jg
xlat
adc
push
sar
xor
xor
sar
jle
inc
aas
icebp
cld
xor
xlat
clc
popf
jg
lahf
and
xor
int
loop
inc
pop
mov
call
mov
(bad)
cli
jle
(bad)
dec
jmp
cdq
pop
in
mov
outs
dec
(bad)
cld
fist
stc
outs
jle
dec
dec
pop
lock
jg
fstp
pop
push
cld
pop
mov
out
clc
leave
mov
inc
mov
mov
jmp
ror
sbb
pop
cld
mov
push
mov
out
cld
leave
jg
mov
jg
dec
and
cld
sbb
inc
push
repz
enter
daa
dec
outs
repz
jg
cmp
ja
mov
shr
pushf
(bad)
arpl
inc
jecxz
clc
ins
or
lahf
dec
sar
(bad)
xchg
jmp
test
mov
adc
pop
xor
jl
add
mov
dec
enter
dec
inc
add
lahf
add
(bad)
ja
call
xor
int
sub
fsubrp
out
sahf
mov
ins
sbb
std
pop
lods
aam
mov
ds
push
mov
dec
mov
jnp
and
pop
inc
fistp
mov
(bad)
sub
rcr
inc
out
(bad)
cld
xor
sar
(bad)
sar
(bad)
js
call
(bad)
sbb
das
loop
in
jg
push
mov
leave
(bad)
fwait
mov
and
lods
cdq
stos
pop
inc
ins
(bad)
hlt
pop
lock
scas
cli
add
std
daa
mov
aas
std
or
(bad)
xchg
jmp
mov
sub
test
jmp
mov
in
jmp
mov
in
and
repnz
mov
mov
test
repnz
jbe
cld
aaa
mov
repz
jg
pop
lock
pop
cld
out
cmps
add
out
mov
mov
mov
dec
adc
pushf
fnstsw
out
xlat
adc
das
mov
std
lahf
inc
(bad)
call
rep
jns
leave
(bad)
fwait
mov
(bad)
mov
std
scas
and
outs
inc
in
(bad)
push
bound
aas
ror
dec
mov
mov
in
mov
cmp
xchg
(bad)
out
cmps
sbb
lds
jnp
popf
leave
sbb
or
(bad)
(bad)
cs
pop
std
fistp
std
gs
test
clc
leave
jg
fwait
dec
lock
cli
cmp
nop
idiv
or
loop
jo
mov
add
dec
jmp
fwait
imul
icebp
aam
(bad)
mov
int
adc
mov
jle
jnp
aad
xchg
cmps
(bad)
mov
aaa
lahf
xor
inc
lds
test
jg
(bad)
outs
push
push
push
jg
pop
dec
or
cld
mov
pop
mov
aaa
and
jae
rcr
xor
rcr
mov
ins
ret
aaa
cmps
xchg
(bad)
cmc
fucomip
xchg
pop
icebp
fisttp
stos
cld
(bad)
stos
add
dec
(bad)
rcr
out
mov
(bad)
in
jle
mov
mov
aam
inc
mov
pushf
sub
fstp
dec
lahf
cld
xor
call
sbb
inc
inc
test
(bad)
fstp
mov
(bad)
mov
out
clc
leave
jg
cmp
(bad)
aaa
fmul
mov
sub
std
cmovno
sbb
popf
jl
or
daa
pop
and
(bad)
stos
xor
std
out
cld
pop
push
mov
xchg
mov
jecxz
mov
xchg
adc
das
(bad)
xor
push
ret
in
adc
stos
mov
call
dec
out
aas
dec
(bad)
dec
test
cmp
xchg
pop
std
ss
std
fwait
jg
or
in
jb
outs
imul
pusha
add
jmp
add
imul
nop
and
or
add
icebp
leave
jg
fstp
pop
xchg
mov
jmp
outs
test
repnz
push
in
loop
hlt
ja
or
daa
lods
sbb
xor
dec
hlt
(bad)
xlat
adc
push
(bad)
out
dec
and
fist
in
stc
sbb
add
aas
clc
mov
dec
(bad)
cmps
fist
aaa
mov
out
hlt
leave
jg
(bad)
fnsave
inc
js
xlat
mov
repnz
(bad)
in
sbb
jns
stos
sar
xor
loopne
ret
outs
mov
retf
inc
into
fldcw
and
mov
int
xor
cbw
leave
jg
pop
xor
pop
aas
cdq
(bad)
fsqrt
xchg
xchg
sub
outs
or
or
xchg
outs
sbb
hlt
cld
addr16
call
jno
(bad)
fwait
mov
cld
pop
sar
dec
fbstp
nop
jle
fbld
sub
shr
addr16
xchg
adc
pop
call
mov
mov
mov
inc
test
in
dec
movs
lahf
js
cli
pop
dec
es
jmp
fild
add
xor
push
out
shl
hlt
aaa
xchg
rcr
(bad)
jg
(bad)
jmp
loopne
inc
and
mov
rcr
xlat
adc
mul
adc
add
jg
std
pop
imul
cmps
iret
dec
cli
aas
push
mov
std
jg
lahf
std
shl
aas
inc
out
std
shl
sti
pop
dec
xor
jmp
in
cmp
xchg
mov
aam
scas
mov
pop
mov
inc
call
aas
inc
lahf
jg
aas
push
stc
(bad)
push
lahf
mov
xor
hlt
lahf
ror
inc
push
(bad)
dec
call
jmp
jl
jg
inc
popf
jle
jmp
push
call
call
out
aas
xchg
(bad)
call
jmp
mov
cli
stc
(bad)
xchg
aas
stc
cmp
xchg
aas
jge
pop
ror
in
mov
lea
xor
jmp
outs
mov
std
push
cmps
dec
call
hlt
push
(bad)
jmp
adc
cld
sbb
scas
and
dec
sti
xor
sar
jmp
cli
(bad)
fisttp
(bad)
cmp
(bad)
jg
scas
and
shr
sti
dec
pop
cld
pop
enter
imul
inc
neg
fs
daa
(bad)
cmp
cdq
and
fistp
push
or
mov
and
scas
stc
lea
pop
repz
mov
mov
xor
mov
leave
fcomip
or
stc
imul
lahf
cld
xchg
in
jmp
adc
cld
mov
jg
sti
lahf
cld
test
jmp
jns
sbb
loopne
aas
hlt
ja
cmp
popf
xor
jmp
cld
push
pop
sbb
clc
dec
push
jle
aas
push
sbb
pop
iret
icebp
jecxz
adc
mov
mov
cld
vmovq
in
jns
cmp
mov
aas
popa
fbstp
xchg
cmp
icebp
jnp
jbe
add
std
repnz
outs
jge
(bad)
dec
movs
or
or
sub
xor
(bad)
cmps
inc
mov
dec
mov
int
jbe
inc
mov
inc
mov
cmp
jbe
shr
ja
fidivr
in
jle
retf
and
clc
mov
cmp
cld
lods
or
das
and
pop
adc
(bad)
xchg
jmp
ja
sub
outs
rcr
pop
movs
lahf
jmp
lahf
cld
arpl
xchg
mov
mov
fdivr
out
lock
pop
sub
fdivr
repnz
jg
scas
mul
lahf
int
call
xor
loopne
inc
push
in
or
outs
cld
or
inc
jmp
clc
in
aaa
jmp
jg
movs
inc
(bad)
pop
addr16
inc
clc
lahf
ds
push
lock
call
mov
jmp
jg
jno
(bad)
(bad)
xchg
sub
inc
fisub
std
ins
dec
sub
aas
dec
scas
lods
mov
scas
pop
xchg
push
pop
jg
hlt
ja
pop
inc
mov
pop
inc
sub
fcomi
(bad)
outs
sbb
loopne
outs
dec
jge
mov
(bad)
dec
std
data16
add
ret
clc
ins
call
mov
(bad)
fucomi
iret
pop
lock
das
sti
popf
sbb
mov
cld
sti
mov
dec
call
mov
cmc
jmp
mov
mov
jmp
jg
jl
call
in
lahf
neg
daa
movs
dec
rcr
cmp
cli
adc
mov
mul
loop
in
ror
movs
add
adc
stc
push
repnz
sti
mov
or
ja
aaa
mov
xchg
outs
adc
std
mov
xchg
(bad)
cli
stos
loopne
dec
out
dec
inc
shr
mov
adc
sbb
cmp
sub
adc
test
inc
mov
fwait
pop
call
ins
shr
xor
pop
mov
int
inc
cmp
dec
sar
and
xchg
or
xchg
xchg
jg
jge
push
sar
fdivr
sbb
xchg
ret
scas
fist
lock
sub
std
pop
mov
jmp
std
ja
jg
clc
and
repnz
call
call
xor
mov
or
lds
sbb
and
(bad)
push
clc
sti
pop
push
mov
(bad)
dec
add
out
in
or
data16
aaa
mov
push
loop
fild
int3
bnd
and
pusha
jmp
(bad)
mov
pop
out
xor
clc
or
bound
xchg
popa
cld
cs
fisttp
fsubr
ins
cmp
repz
enter
mov
(bad)
fucomp
cwde
push
pop
pop
repnz
gs
mov
test
add
clc
jmp
xchg
aas
(bad)
cmp
xchg
(bad)
in
jle
mov
stc
fist
popf
pop
jecxz
stc
xor
inc
(bad)
jg
(bad)
jmp
call
scas
and
call
outs
jl
pop
xchg
imul
xor
cmp
out
mov
mov
and
pop
jge
mov
(bad)
fild
loopne
fcomip
in
shr
jle
inc
(bad)
aaa
es
neg
dec
movs
xor
dec
(bad)
xchg
fucomip
xchg
push
ja
in
sti
popf
ds
mov
mov
ins
mov
sbb
push
hlt
ret
sbb
icebp
and
call
cmp
xorps
sub
pop
call
pop
mov
dec
jle
mov
(bad)
push
push
add
add
inc
push
pop
jmp
ja
idiv
inc
cmp
pop
adc
(bad)
jmp
sub
lock
inc
retf
cli
xor
arpl
hlt
aas
push
mov
dec
(bad)
mov
jg
sbb
mov
pop
ret
jno
lods
cwde
sbb
fbstp
and
pusha
or
push
std
lahf
push
lahf
mov
mov
js
loope
inc
enter
and
and
cmps
in
clc
xor
call
cli
stc
(bad)
call
mov
(bad)
fstp
rcr
out
std
(bad)
xchg
and
lea
inc
xlat
ret
xchg
adc
inc
ror
xor
mov
xchg
dec
je
loop
enter
pop
into
(bad)
xchg
jg
ja
in
cld
in
jg
rcr
xchg
cmp
xchg
cwde
(bad)
xchg
ret
rcr
xlat
mov
adc
(bad)
ja
data16
dec
cmp
inc
jbe
aas
and
daa
xor
in
std
ss
cld
dec
mov
sahf
or
sti
pop
std
mov
outs
or
clc
aaa
(bad)
clc
mov
push
(bad)
jecxz
xchg
xchg
rcr
push
movs
cmp
xor
xchg
and
(bad)
sbb
add
jecxz
mov
das
stc
in
in
lahf
out
jle
jns
ja
or
ret
outs
(bad)
jecxz
inc
jmp
push
cli
std
mov
inc
das
cmc
aas
std
fiadd
jle
dec
retf
repnz
lock
aas
stc
imul
add
lds
cmp
int
or
jmp
(bad)
cmps
sar
call
aas
adc
sbb
nop
icebp
in
nop
fs
lahf
imul
jae
aas
(bad)
in
pop
add
fbstp
jns
fild
inc
push
xor
inc
and
dec
dec
mov
aaa
xchg
pop
std
in
jg
addr16
js
mov
out
push
lds
dec
mov
dec
repnz
push
lahf
cld
(bad)
mov
mov
scas
vandpd
cli
mov
in
stc
ins
ds
das
fnstenv
(bad)
clc
scas
loope
std
sbb
xchg
retf
fistp
lods
aas
hlt
xlat
nop
cmc
xor
jg
std
dec
xor
call
les
jmp
jno
sbb
cld
sub
xchg
lahf
cld
pop
mov
fs
mov
out
sti
sbb
sub
repz
mov
xchg
lahf
jmp
lahf
div
or
adc
cmp
or
inc
cdq
sub
mul
or
jmp
loope
test
repnz
push
cld
pop
(bad)
sbb
scas
pop
adc
add
jmp
inc
jg
dec
jge
aas
jmp
lods
fucomip
mov
fisubr
cmp
fucomip
mov
ds
imul
jle
out
hlt
leave
(bad)
cli
(bad)
dec
jg
dec
(bad)
jnp
icebp
ja
outs
(bad)
in
leave
out
mov
jg
call
cmp
popf
dec
imul
and
adc
mov
cmp
aas
(bad)
std
mov
jg
std
xchg
cld
es
jg
sub
std
out
mov
loope
add
inc
mov
(bad)
fs
jle
in
ret
aam
adc
shr
call
repz
aam
std
div
jl
(bad)
(bad)
sahf
movs
(bad)
push
fs
cld
mov
stc
jne
or
stc
int
inc
push
fwait
inc
cmps
mov
shr
dec
cmps
icebp
mov
test
mov
xor
arpl
mov
lock
xchg
or
mov
cld
outs
hlt
div
std
fcomi
inc
hlt
sti
imul
out
mov
or
cld
std
jle
loope
aas
cmp
ss
(bad)
mov
cli
(bad)
out
mov
aas
test
(bad)
movs
lds
inc
jg
mov
jle
not
jg
fcomip
aaa
cmp
jg
cmp
sbb
inc
mov
jge
mov
fs
jle
mov
sbb
cmps
je
jmp
stos
(bad)
sbb
lahf
sar
mov
bound
(bad)
mov
call
xor
in
mov
sub
mov
retf
repnz
xchg
jb
test
test
xlat
sub
sub
out
xchg
imul
je
jle
dec
(bad)
out
fucomip
xchg
mov
jle
pop
lahf
in
aaa
cmp
repz
imul
fild
xor
and
int3
jg
jp
test
cmp
fwait
mov
cld
not
std
push
lahf
cld
stos
mov
icebp
push
sub
cld
movsx
daa
(bad)
in
out
hlt
leave
jg
mov
aas
sti
add
cwde
jg
pop
push
mov
mov
mov
daa
out
std
unpcklps
test
sbb
cli
mov
ret
hlt
iret
(bad)
pop
cmc
imul
jmp
dec
dec
(bad)
pop
push
(bad)
fisub
jbe
inc
cmps
in
mov
xchg
add
mov
(bad)
cs
dec
mov
lods
lds
jg
dec
dec
outs
pop
pop
and
jne
repz
out
dec
xlat
dec
dec
std
(bad)
(bad)
aas
sbb
adc
ret
or
adc
mov
daa
push
and
into
out
dec
or
push
pop
mov
inc
ds
in
add
xlat
mov
cmp
jne
ret
(bad)
xlat
std
adc
into
mov
aaa
cmp
mov
adc
xchg
push
dec
mov
pop
cli
pop
dec
pop
fcos
icebp
aaa
clc
(bad)
scas
icebp
cmp
cld
cmp
and
hlt
jae
imul
mov
shl
loop
inc
jg
xor
dec
jg
fcomip
xlat
clc
sbb
popw
std
out
adc
int3
icebp
and
outs
popa
mov
add
mov
aad
lock
lea
push
xor
out
cmps
js
jge
std
jae
sbb
std
mov
xlat
addr16
lock
xchg
mov
stc
aaa
cli
in
std
sbb
fwait
dec
jle
out
lock
das
call
out
inc
jge
jle
ss
icebp
fsubr
repnz
scas
icebp
adc
cld
imul
cmp
outs
enter
jmp
loop
(bad)
in
cmp
scas
sub
sar
imul
pop
std
add
(bad)
(bad)
fldcw
push
aam
xor
pop
jecxz
jl
out
(bad)
sbb
(bad)
adc
pop
test
pop
push
cld
mov
jmp
or
xchg
aas
sti
ja
jg
mov
cld
aaa
arpl
adc
das
aad
outs
mov
dec
loop
cld
imul
fwait
(bad)
push
and
mov
push
dec
xchg
fcmovu
pushf
movs
div
jmp
pop
xchg
fidivr
fcomip
aaa
sti
sbb
jg
stc
cmc
ja
cmp
or
stc
dec
test
das
push
pop
jmp
inc
mov
clc
fwait
mov
cmc
fstp
std
ss
pop
std
mov
retf
out
int3
jle
outs
test
adc
not
jmp
jmp
sub
jp
scas
(bad)
adc
rcr
outs
std
dec
mov
push
cmps
shl
cld
push
cli
jg
ins
sahf
aas
repnz
adc
test
dec
cmc
idiv
div
(bad)
mov
in
aas
stc
fstp
fistp
jle
jnp
repz
movs
inc
jg
mov
in
cdq
cmps
pop
jmp
cmc
aas
(bad)
in
jg
pop
sti
int
sub
push
mov
aaa
stc
sub
into
mov
jg
xchg
(bad)
jmp
mov
mov
dec
mov
xchg
(bad)
jmp
lock
mov
xchg
cli
xor
mov
ins
mov
or
outs
jmp
and
jg
std
std
mov
pop
adc
inc
test
dec
(bad)
jmp
cli
(bad)
aas
inc
(bad)
(bad)
(bad)
dec
inc
mov
mov
(bad)
(bad)
cmp
mov
cld
call
repz
out
iret
cmps
iret
(bad)
jle
stc
icebp
scas
sub
dec
cmc
scas
and
jle
fild
sti
int
or
or
gs
icebp
scas
and
sbb
adc
sub
or
(bad)
clc
mov
repz
jp
aas
movs
iret
(bad)
pop
(bad)
out
jg
or
mov
stc
or
jecxz
mov
pop
and
repz
cs
out
cld
pop
es
ret
shl
cwde
mov
and
sbb
mov
mov
jbe
sub
imul
jmp
lock
jg
cmp
push
mov
mov
popa
cli
sbb
fcmovbe
idiv
das
rcl
das
and
fist
cmc
outs
repnz
mov
scas
adc
(bad)
std
cs
fdivrp
sbb
cmp
dec
bnd
lock
test
aas
(bad)
ss
mov
jb
in
cli
sbb
push
in
clc
cmp
pop
out
mov
cmc
mov
jae
jae
inc
fbstp
push
sub
retf
pop
push
idiv
dec
dec
hlt
sti
out
in
clc
mov
iret
(bad)
xlat
fbld
es
cmc
jle
fnstsw
xlat
jmp
std
aas
loope
dec
jg
adc
jg
(bad)
mov
push
fcmovnu
loopne
cli
ins
test
pop
(bad)
or
stc
in
test
sbb
jle
clc
fcomi
cmp
in
stc
leave
lods
inc
cmp
movs
xlat
pusha
ins
and
mov
jo
sti
mov
or
stc
popf
mov
sbb
mov
jmp
inc
cld
pop
add
mov
push
mov
and
jge
daa
adc
ja
add
push
mov
fisubr
scas
and
lahf
loope
or
xor
push
dec
loopne
stc
xor
jle
fcomip
ja
sub
jle
mov
loopne
jge
fwait
push
ret
aas
jmp
ret
jge
fwait
mov
sti
popf
mov
icebp
mov
sbb
outs
push
inc
mov
mov
sub
dec
cld
das
xor
mov
xchg
icebp
pusha
or
and
adc
std
jne
test
loop
and
mov
popf
jle
(bad)
inc
cmp
push
adc
notrack
jg
mov
or
dec
ret
iret
fcomip
mov
lods
jle
fcomip
ja
movs
cli
(bad)
stos
ds
inc
pop
leave
jmp
push
sysret
nop
xchg
mov
inc
push
fnstsw
hlt
xlat
outs
hlt
fwait
inc
cmp
jp
mov
sub
ret
add
sbb
and
pop
lods
call
jle
dec
jle
out
push
imul
push
pop
lds
cmp
sbb
fistp
int
out
loopne
jae
paddw
mov
stc
imul
out
call
std
(bad)
(bad)
xor
pop
jecxz
cmps
(bad)
push
dec
scas
and
nop
out
sti
xor
sar
jecxz
sbb
mov
xchg
aad
popf
leave
aam
(bad)
pushf
retf
clc
or
icebp
cwde
jle
cmps
and
cli
xor
xlat
add
std
into
pop
mov
and
mov
outs
repz
jg
pop
jmp
add
daa
call
das
and
repnz
lea
jmp
arpl
mov
mov
pushf
fisub
lea
xchg
dec
idiv
adc
(bad)
jnp
add
push
fsub
dec
out
dec
loopne
loop
(bad)
xchg
sbb
shr
jle
dec
(bad)
repz
xchg
inc
fs
aam
outs
add
(bad)
dec
(bad)
or
nop
xchg
mov
jno
mov
bound
xor
loopne
push
cli
loope
lds
jg
scas
test
cmp
pop
add
mov
push
mov
jg
dec
call
adc
push
jb
stos
lahf
loope
nop
enter
add
mov
(bad)
xchg
mov
jmp
sti
popf
jg
mov
adc
cmc
out
dec
aam
xor
nop
jle
out
icebp
jg
(bad)
xchg
mov
inc
fwait
or
jmp
(bad)
movs
mov
jbe
or
mov
sub
retf
inc
adc
cmc
and
repnz
sub
test
stc
xchg
call
cld
retf
jle
push
dec
clc
sbb
(bad)
mov
xlat
nop
jne
repz
imul
xlat
call
lock
jle
(bad)
mov
pop
ds
jmp
repz
aam
test
ja
call
xacquire
and
fucomip
xchg
jmp
ja
jo
aaa
sti
in
sti
in
jg
fcomip
ja
sub
mov
mov
cmp
jg
ja
inc
dec
jecxz
arpl
cmp
ds
mov
sti
popf
dec
out
mov
icebp
cmp
xor
(bad)
scas
jno
pushf
arpl
pop
and
mov
test
mov
sahf
add
addr16
push
jg
mov
jmp
cli
neg
mov
bsr
sbb
(bad)
imul
mov
cli
int
jns
arpl
push
mov
mov
mov
(bad)
sti
jle
jno
(bad)
es
in
lahf
push
xor
xor
shr
or
repnz
(bad)
lahf
cld
jne
ret
outs
cld
leave
pop
and
and
js
ja
(bad)
push
mov
jg
xchg
or
sar
data16
and
jg
fstp
out
or
(bad)
aaa
cli
add
push
jmp
or
out
fld
(bad)
mov
fsubp
out
cld
es
cld
push
js
(bad)
fcom
cli
adc
mov
out
lock
jg
mov
mov
jg
pop
sub
aas
lds
out
scas
icebp
shr
sar
dec
jle
repnz
cwde
(bad)
jmp
lods
mov
sbb
in
out
mov
jg
xlat
adc
xchg
fabs
in
aas
in
adc
ja
sti
pop
cli
add
mov
pop
dec
jmp
fisttp
mov
sbb
jmp
add
mov
jg
adc
test
mov
in
std
ins
ds
(bad)
jle
dec
(bad)
std
fucomip
xchg
jg
cli
clc
ins
enter
call
cli
sti
daa
push
sti
jae
cmps
adc
mov
ret
shr
fwait
nop
mov
cld
mov
add
sbb
jle
(bad)
mov
cld
xlat
mov
je
(bad)
xchg
leave
outs
scas
ins
loopne
mov
dec
jmp
call
or
lods
cmp
scas
(bad)
cmp
aas
or
out
lahf
and
fmul
fimul
cwde
jmp
sar
cmp
jle
shl
lock
inc
jg
push
cmc
out
neg
xchg
movs
push
jle
dec
(bad)
ss
and
and
in
pop
(bad)
cmp
jecxz
push
ss
sub
pop
aad
sbb
ret
xchg
lock
mov
(bad)
(bad)
nop
mov
leave
jg
cmp
add
cmp
push
mov
and
leave
jg
data16
(bad)
repz
fild
sbb
xor
imul
mov
xor
xor
dec
repnz
dec
(bad)
es
jl
out
imul
in
std
dec
lahf
cld
xchg
xchg
int3
cld
sbb
add
jg
dec
(bad)
repz
cli
sub
popa
pop
daa
and
vdivsd
std
ins
mov
cmp
push
and
scas
jg
sbb
ja
ins
jmp
les
aas
or
dec
aam
xlat
movs
cmps
enter
add
xchg
inc
ja
sbb
xchg
lahf
imul
cdq
movs
jg
mov
sbb
lahf
jmp
xchg
std
leave
hlt
(bad)
aas
xchg
jmp
call
jmp
(bad)
push
(bad)
out
cmc
imul
fistp
push
call
and
cmp
(bad)
push
mov
sub
sub
repz
neg
(bad)
in
les
inc
pop
jmp
pop
jo
fadd
fistp
and
or
out
or
xor
outs
or
lock
add
add
lahf
(bad)
out
jmp
pop
pusha
sar
inc
jmp
rcr
nop
xchg
(bad)
in
dec
pop
cld
(bad)
jmp
loop
mov
call
ds
lea
cli
ss
call
shr
pop
ror
pop
inc
lahf
das
jg
mov
dec
mov
imul
pop
and
adc
(bad)
mov
jmp
movs
(bad)
hlt
imul
outs
shr
(bad)
adc
stc
mov
xlat
test
ss
shr
add
cmps
loopne
ret
push
mov
or
inc
aas
jno
imul
xlat
ds
inc
lock
stos
out
mov
sbb
out
inc
xor
sbb
clc
pop
jl
lahf
(bad)
imul
out
inc
jmp
mov
xor
aas
repz
xchg
mov
cld
jmp
arpl
stc
std
in
cmp
pusha
push
aas
(bad)
xor
cmp
fild
stos
mov
mov
(bad)
and
push
and
int
inc
jnp
mov
lahf
xchg
pushf
(bad)
jae
(bad)
repz
xchg
mov
out
lock
mov
test
ins
hlt
xchg
jae
movs
stc
sub
jl
pop
and
mov
(bad)
hlt
aaa
add
jl
and
inc
dec
cmp
imul
xchg
pop
dec
fcmovne
pop
lock
push
sbb
push
sbb
fisttp
test
lahf
std
into
mov
cld
test
in
cmps
add
ja
mov
ficomp
cmps
inc
push
sbb
neg
cld
mov
fwait
mov
mov
mov
cmc
sar
add
(bad)
pop
hlt
iret
push
test
es
mov
ins
sub
bound
cmp
push
xchg
adc
cld
push
hlt
sti
ja
out
push
mov
xchg
add
jge
(bad)
(bad)
jmp
jle
cli
cld
das
mov
repnz
out
lahf
cmps
lahf
jnp
dec
mov
sbb
or
(bad)
ja
addr16
std
(bad)
cld
xlat
adc
(bad)
pop
call
dec
or
call
inc
jg
cmps
(bad)
dec
hlt
sti
inc
hlt
repz
movs
idiv
std
pop
dec
std
xor
in
in
xlat
adc
out
mov
mov
stc
jmp
fistp
ds
scas
jg
jmp
adc
cld
test
jg
add
adc
jg
mov
outs
jnp
cmp
xor
movs
aaa
push
push
std
test
shr
call
inc
inc
mov
std
jmp
std
jg
(bad)
aas
push
(bad)
jg
std
jg
imul
mov
clc
xchg
sbb
adc
(bad)
lahf
cld
mov
xchg
push
sub
ja
cwde
adc
mov
xor
in
push
bnd
inc
leave
mov
xchg
in
stc
mov
add
dec
mov
icebp
xlat
push
sbb
push
shl
sbb
add
cmp
cli
sar
dec
(bad)
adc
test
retf
fcomip
ja
sbb
inc
pop
ss
imul
and
xchg
inc
mov
loopne
inc
jmp
(bad)
cmps
in
frstor
call
push
adc
and
retf
mov
out
hlt
leave
aas
dec
and
dec
(bad)
mov
or
xchg
cld
lahf
sub
pop
push
xchg
jg
xchg
jnp
dec
jg
lods
xchg
cld
inc
xchg
inc
sti
in
aas
stc
push
jg
dec
(bad)
movs
fucomip
xchg
jg
inc
cld
dec
push
lahf
cld
adc
mov
mov
cli
cmc
mov
pop
mov
or
jg
(bad)
(bad)
in
clc
out
fbld
test
sahf
mov
outs
mov
mov
sbb
dec
inc
(bad)
scas
(bad)
aas
js
push
outs
jmp
call
sbb
pop
out
cld
xor
loopne
repz
stos
sub
das
test
xlat
inc
xchg
stc
mov
(bad)
sub
or
scas
clc
aas
nop
sbb
inc
or
jmp
in
cmp
test
add
fisttp
xor
xor
cld
or
mov
xchg
mov
jp
popf
mov
popf
dec
scas
sub
std
cmp
icebp
mov
pop
push
mov
cld
out
neg
mov
clc
dec
sub
sbb
ja
(bad)
mov
int
sti
aas
mov
sti
in
sar
hlt
cli
outs
iret
mov
das
rol
imul
(bad)
(bad)
jg
mov
mov
push
cmp
sub
(bad)
pop
sub
fdivrp
ins
cmc
mov
mov
repz
jg
call
rcpps
jecxz
adc
xchg
or
in
mov
(bad)
push
sar
mov
scas
icebp
imul
aas
data16
jg
movs
mov
fistp
shr
jmp
sbb
sgdtd
jge
and
xchg
and
(bad)
jg
jmp
mov
push
inc
cli
or
jo
and
shr
mov
add
adc
cmps
js
jle
jp
loop
and
pushf
lahf
cli
fist
inc
loopne
mov
gs
and
pop
or
jg
jecxz
stos
jg
pop
div
push
jg
push
and
xchg
add
aas
(bad)
(bad)
jg
scas
popa
sar
add
scas
out
or
or
or
jg
dec
mov
sbb
movs
(bad)
enter
icebp
jmp
std
inc
add
in
xchg
push
jnp
out
call
es
imul
(bad)
jmp
pop
sbb
call
and
std
fistp
icebp
ja
sub
(bad)
jp
in
lock
clc
mov
sub
inc
in
cmps
mov
std
sbb
pop
(bad)
fnstcw
std
imul
pop
jmp
aam
lock
pop
inc
ret
push
aas
daa
in
cs
idiv
call
cmp
pop
jg
jge
mov
sbb
ror
call
cmc
fist
out
cli
xor
movs
inc
xchg
(bad)
xchg
dec
dec
mov
push
pop
xlat
fisttp
aaa
std
in
dec
movs
pop
xlat
xchg
xchg
and
mov
neg
jge
aas
xchg
inc
hlt
cmp
and
pop
retf
je
mov
mov
fisubr
clc
sub
ja
ja
push
cmp
(bad)
scas
and
sub
jle
pop
cs
(bad)
jns
xchg
sahf
popa
ja
ja
sub
fist
push
jo
sbb
mov
xchg
mov
into
cmp
fistp
(bad)
mov
int
out
bnd
push
sub
xor
js
arpl
idiv
inc
xor
out
psadbw
outs
lods
cmp
push
(bad)
in
cmp
mov
inc
xchg
sahf
mov
or
fistp
jl
fild
xor
scas
sub
jmp
lahf
jmp
ja
mov
dec
aas
inc
(bad)
in
out
or
sti
or
(bad)
es
repz
dec
loope
and
lahf
std
es
hlt
cmp
and
(bad)
dec
(bad)
push
int3
adc
stc
rcr
pop
push
cmp
cmp
js
pop
(bad)
and
hlt
jg
cmp
scas
and
and
sbb
imul
(bad)
jg
mov
in
dec
mov
int
sub
pop
fdivrp
repz
ins
cli
(bad)
mov
jle
fcomip
mov
clc
add
outs
(bad)
lds
loope
or
xlat
fdivr
sub
push
cmp
mov
and
xlat
push
fild
mov
daa
mov
daa
(bad)
fsubr
clc
in
push
push
jle
push
push
xchg
ret
aas
clc
lahf
nop
stos
aad
push
pop
fld
add
add
jbe
shr
inc
iret
mov
(bad)
das
dec
into
jmp
push
mov
(bad)
mov
mov
movs
add
push
dec
or
mov
sub
jle
ins
pop
push
retf
hlt
div
fistp
out
lahf
xchg
mov
pop
cli
dec
sbb
(bad)
jg
ins
call
or
and
add
rcr
jmp
pusha
fwait
lock
hlt
jecxz
pop
mov
outs
stc
pop
push
test
dec
imul
dec
pop
imul
sar
addr16
call
test
clc
xor
outs
(bad)
ds
std
test
mov
pop
dec
cli
jmp
mov
jg
std
cld
pop
call
jmp
call
or
mov
inc
call
jmp
call
icebp
scas
shl
push
std
cld
dec
call
div
loop
jge
xlat
shr
aas
inc
out
cld
jns
mov
jmp
cmp
std
dec
movs
(bad)
call
(bad)
call
mul
adc
es
out
out
push
jge
aas
adc
hlt
repz
mov
mov
or
dec
lahf
jg
jge
pop
sar
pop
push
fistp
jg
shr
(bad)
hlt
(bad)
(bad)
call
sti
(bad)
call
jg
jg
xchg
hlt
jae
out
jle
shr
movs
out
inc
fisttp
std
mov
adc
dec
neg
pop
push
sti
sar
pop
shl
or
jmp
idiv
arpl
call
cli
(bad)
aas
dec
fistp
jg
shr
push
std
jl
jg
jmp
dec
cmp
push
sti
fisttp
ret
push
lock
mov
cmps
test
jmp
mov
ror
jg
jle
dec
(bad)
out
out
push
rcr
jg
std
std
pop
push
mov
hlt
fstp
aas
inc
pop
sbb
fdivrp
xchg
mov
aas
pop
jmp
imul
mov
jg
(bad)
(bad)
cmp
or
jmp
jg
xor
std
push
movs
(bad)
inc
mov
hlt
push
xlat
nop
les
imul
fcmovne
cld
sbb
sbb
inc
or
pop
icebp
imul
outs
mov
(bad)
jg
xlat
nop
inc
test
mov
jmp
(bad)
inc
cli
(bad)
jg
(bad)
(bad)
out
jle
leave
dec
inc
pop
and
push
inc
pop
cdq
(bad)
mov
xchg
pop
push
div
(bad)
jnp
(bad)
aas
cmps
(bad)
mov
icebp
mov
iret
lock
inc
push
shl
or
mov
test
mov
test
cmp
retf
mov
jg
iret
cld
cs
ds
daa
sub
inc
jle
lahf
(bad)
in
clc
pop
(bad)
lahf
cld
cmp
bnd
cs
out
repnz
jg
aaa
cld
cmp
(bad)
stc
sub
shl
xchg
push
and
pop
cld
mov
pushf
(bad)
clc
xchg
aas
and
aas
test
clc
aas
adc
std
in
clc
pop
jle
rol
cld
js
lock
arpl
loopne
icebp
arpl
lds
aas
repnz
aas
cs
(bad)
(bad)
(bad)
loopne
les
mov
pushf
int3
std
pop
jle
shr
pop
pop
sbb
push
pop
mov
pop
mov
clc
or
dec
mov
in
push
lds
fs
call
(bad)
cmp
aas
clc
(bad)
jecxz
sar
xchg
lock
cmp
cmps
icebp
mov
jecxz
loopne
lds
clc
xor
clc
jmp
jbe
dec
dec
leave
in
lock
xchg
jb
lahf
or
div
cmp
jg
mul
mov
hlt
inc
xor
push
xlat
nop
mov
pop
hlt
call
imul
sti
std
jmp
xchg
cs
jmp
cli
jg
imul
out
(bad)
xor
jle
sbb
ja
adc
cs
icebp
pop
inc
xor
(bad)
jg
data16
adc
clc
(bad)
lahf
cld
retf
mov
push
ds
cmps
leave
xchg
jecxz
retf
dec
jle
ud0
(bad)
aas
stc
sti
leave
(bad)
cld
fnstsw
outs
call
ds
fwait
jg
mov
sahf
data16
leave
pop
icebp
fstp
xchg
(bad)
cs
jg
out
mov
leave
lahf
dec
push
in
stc
mov
test
jg
out
repnz
aas
div
cld
in
cld
pop
retf
rcr
in
sbb
xor
xchg
inc
call
inc
and
cld
scas
mov
(bad)
jae
mov
out
adc
(bad)
fist
(bad)
jmp
fdivr
push
(bad)
jmp
mov
jle
bound
fldenv
jg
outs
sti
leave
fisttp
cli
aaa
dec
lahf
cld
jne
jecxz
jg
mov
retf
jmp
cmc
out
cs
mov
lahf
dec
cld
mul
rol
js
and
das
and
sti
push
fsubr
aaa
adc
sti
sbb
fcomip
(bad)
or
mov
or
outs
xchg
mov
sar
daa
icebp
rcr
add
in
sub
add
std
pop
ds
pop
jle
leave
out
push
bound
loopne
fist
ret
das
cld
iret
mov
stos
pusha
scas
inc
movs
stos
jle
mov
cmps
jg
push
imul
(bad)
std
fbld
repz
fidivr
cli
fld
addps
add
in
xor
jmp
fsubrp
mov
ins
push
movs
xlat
gs
xchg
push
cli
add
hlt
retf
(bad)
aas
ret
pop
lock
cld
fisttp
inc
cmc
(bad)
pop
mov
aam
scas
(bad)
(bad)
push
cld
pop
ds
aaa
(bad)
jl
cmp
jl
clc
mov
leave
jg
jmp
(bad)
aas
dec
adc
xchg
ds
mov
inc
scas
std
into
fisubr
icebp
mov
shr
popf
cdq
loopne
aaa
(bad)
pop
mov
popa
mov
repz
dec
inc
sub
jecxz
mov
int
call
mov
outs
add
out
pop
std
sub
out
(bad)
sti
aaa
clc
lods
or
mov
out
aaa
aad
(bad)
jge
add
mov
std
sub
mov
mov
or
inc
lahf
(bad)
lods
clc
hlt
mul
mov
sbb
outs
loope
sti
(bad)
retf
xchg
std
(bad)
cmps
add
jmp
repz
movs
mov
mov
clc
std
jg
xchg
sub
jecxz
sti
ins
jle
fisubr
cmp
icebp
int
inc
mov
ds
in
test
loop
pop
dec
cmc
push
sub
jb
jle
adc
and
(bad)
mov
jmp
jecxz
xor
sbb
retf
push
mov
sub
imul
(bad)
jmp
outs
rol
(bad)
cld
stc
hlt
ror
ficomp
jle
sub
(bad)
fsubr
arpl
and
stos
hlt
out
add
ss
pop
mov
out
adc
neg
shl
pop
xor
and
clc
sbb
mov
out
cmp
(bad)
jg
and
movs
mov
(bad)
sbb
cmp
mov
rcl
sahf
lods
and
frstor
push
cmp
cld
jne
xchg
imul
(bad)
or
call
jg
(bad)
(bad)
movs
add
daa
cld
popf
aas
std
fwait
(bad)
mov
jl
pop
(bad)
mov
call
loope
in
js
(bad)
cdq
push
stc
scas
sti
(bad)
hlt
mov
cld
cs
fisttp
pop
cld
or
mov
pop
ret
clc
(bad)
(bad)
shl
mov
enter
mov
cmp
mov
scas
jmp
dec
add
cdq
fs
outs
add
sbb
xchg
rcl
cmp
mov
xchg
lahf
(bad)
sbb
jno
outs
dec
das
std
fstp
jo
shl
aaa
imul
pop
stc
outs
ret
xchg
mov
outs
cmc
jg
jp
lds
xchg
nop
cld
mov
inc
dec
jle
pop
out
aaa
push
stos
call
sbb
pop
xchg
cld
pop
cwde
lock
pop
bound
jle
dec
or
pop
add
inc
mov
aaa
idiv
int
mov
data16
pop
inc
jmp
xor
std
mov
pop
cld
sar
hlt
out
ror
(bad)
out
jmp
shl
xor
repnz
dec
jg
jl
pop
jecxz
sub
mov
and
sar
mov
inc
fadd
mov
into
clc
jmp
imul
ss
cld
add
mov
ins
push
push
arpl
icebp
imul
sbb
fcomip
xlat
nop
rcl
sbb
jl
imul
aas
mov
mov
jg
int3
bound
(bad)
imul
push
std
dec
stc
xor
cmps
cli
stc
in
sub
push
dec
xor
aas
push
jg
(bad)
call
push
lahf
cld
popa
mov
(bad)
sbb
sbb
lods
(bad)
outs
jmp
ja
(bad)
sbb
call
leave
scas
jno
xlat
inc
push
in
cmp
xlat
cmp
adc
outs
jg
dec
(bad)
sub
adc
xchg
(bad)
clc
mov
in
and
clc
ja
(bad)
inc
cdq
idiv
mov
push
mov
clc
cmp
pop
mov
xchg
sbb
aaa
xchg
add
mov
sub
mov
lock
and
icebp
pop
repz
mov
dec
into
ret
into
ret
pop
push
loope
mov
(bad)
jle
bound
xor
mov
hlt
jmp
inc
mov
repnz
loope
jmp
das
std
in
mov
jl
push
repnz
mov
scas
clc
ins
hlt
in
(bad)
jl
add
std
pop
xor
and
lahf
int
push
jg
xchg
repnz
cld
lods
jle
fucomip
mov
call
jo
pop
or
cli
adc
sbb
sbb
mov
push
into
mov
outs
cmc
pop
add
outs
out
ds
jmp
cdq
les
in
aaa
dec
jmp
inc
inc
test
fnstenv
mov
mov
iret
jg
(bad)
dec
sar
dec
pop
mov
clc
in
jg
stc
(bad)
out
push
dec
fist
push
cmc
(bad)
call
std
call
(bad)
(bad)
cli
mov
and
daa
jg
outs
(bad)
pop
sahf
bound
push
cwde
add
in
add
xlat
nop
stc
stc
fucomp
call
xchg
enter
fild
lock
pop
ja
movs
xchg
fild
aaa
daa
out
clc
lea
stc
ja
fwait
dec
dec
(bad)
xchg
jg
pop
jl
das
shr
fisubr
std
sbb
fbld
test
nop
jg
pop
inc
clc
xchg
in
rep
ja
sub
(bad)
push
bound
jmp
ja
inc
neg
mov
aaa
sti
in
(bad)
ins
adc
retf
push
out
int3
(bad)
mov
sahf
iret
mov
add
loopne
cmps
cmps
jg
cmps
mov
push
jg
mov
std
das
mov
sti
mov
cmp
fwait
xor
jecxz
std
jg
xchg
mov
cli
jmp
aad
sub
repz
call
sub
aaa
jae
dec
mov
sub
daa
fbld
pop
clc
xor
sti
xor
call
std
call
(bad)
xor
ins
shl
cmps
sbb
fs
call
(bad)
fcomip
imul
(bad)
movs
xchg
cmp
aaa
cmps
dec
loopne
dec
shl
mov
cmp
push
shl
xlat
or
clc
push
cwde
mov
push
cmps
mov
mov
stc
xchg
(bad)
clc
ja
in
adc
inc
xchg
fild
adc
lock
cmovne
xor
mov
jg
clc
pop
in
repz
shr
dec
push
es
jmp
cmps
aaa
xor
outs
(bad)
dec
retf
xchg
push
xor
adc
lods
dec
stos
es
lahf
cmps
pop
rcr
adc
dec
cmps
ud0
pop
or
mov
push
sub
jg
aas
div
ja
mov
xchg
jg
leave
fcomip
cmp
push
shl
data16
or
nop
(bad)
aaa
hlt
iret
(bad)
lahf
or
in
cli
(bad)
in
sar
lahf
cmp
pop
xchg
sar
xchg
mov
jl
ja
js
mov
loope
cmp
les
mov
pop
mov
retf
pop
dec
jg
adc
cmc
cmps
adc
jg
lds
retf
(bad)
hlt
(bad)
(bad)
jmp
(bad)
hlt
jg
jge
dec
aas
xchg
mov
sar
pop
shl
jo
dec
add
cmps
dec
les
stc
retf
call
sub
retf
xlat
xchg
pop
ror
inc
mov
stc
xor
(bad)
jmp
aas
jg
std
jmp
clc
xor
push
or
inc
std
(bad)
hlt
call
out
pushf
push
imul
fucomip
xlat
mov
cld
sbb
xor
sar
jg
pop
inc
push
addr16
and
out
add
inc
jno
outs
inc
bound
test
test
and
xchg
fild
xor
lds
mov
jnp
mov
(bad)
das
clc
in
std
add
sub
jg
inc
mov
js
adc
jmp
mov
call
cmp
and
dec
and
jg
cmp
shl
out
inc
dec
lahf
mov
out
cld
leave
mov
lahf
call
cmp
mov
xchg
hlt
repz
movs
ja
inc
mov
jmp
and
outs
dec
lahf
cld
imul
inc
inc
dec
call
stc
jg
pop
fiadd
popa
cld
ficom
mov
out
clc
xor
or
jmp
dec
stc
sbb
mov
stc
jmp
popa
pusha
mov
xchg
aad
out
in
repnz
loope
(bad)
and
pop
imul
stos
lods
fisttp
out
in
mov
hlt
aaa
sar
(bad)
outs
std
jno
mov
scas
dec
out
clc
movs
mov
div
outs
xchg
pop
stc
cmc
nop
aaa
cld
jne
and
dec
shl
pusha
je
adc
inc
jbe
xchg
mov
jle
add
add
jmp
mov
mov
loopne
(bad)
mov
cmp
cld
arpl
pop
add
jg
pusha
push
fucomip
aaa
(bad)
(bad)
mov
(bad)
out
ror
(bad)
outs
lahf
cld
cmp
mov
retf
jle
dec
(bad)
daa
jb
fwait
pop
pop
cmps
mov
jle
(bad)
jmp
fucomip
pusha
repnz
pop
jg
(bad)
movs
jg
mov
mov
mov
pop
mov
pop
jle
fbld
jg
(bad)
aaa
(bad)
fld
inc
repnz
pusha
cli
(bad)
jle
sahf
and
(bad)
out
dec
xor
outs
ret
cmp
aaa
loop
rol
std
or
pop
enter
mov
jle
or
std
mov
mov
cwde
cmp
cli
and
cld
lods
sub
add
jle
add
jg
xor
addr16
les
inc
adc
mov
loope
arpl
fdivp
xchg
fldcw
pop
jle
fwait
jg
cli
fcmovnbe
stos
dec
imul
dec
or
clc
mov
adc
scas
and
mov
or
movs
(bad)
aas
stc
xor
xlat
nop
fild
imul
enter
cli
imul
std
idiv
daa
jg
sub
jno
gs
in
shl
xlat
call
call
jl
mov
call
aaa
and
repz
icebp
cld
push
movs
js
imul
cmps
lahf
cld
jmp
frstor
dec
out
hlt
leave
mov
jnp
clc
popf
mov
repnz
xlat
jo
add
mov
inc
mov
sti
and
cmp
repz
mov
push
mov
cmp
add
mov
jge
ror
mov
adc
xchg
(bad)
das
push
cmp
jle
sti
mov
arpl
std
xor
jbe
in
outs
dec
pop
dec
adc
cmps
cdq
mov
cli
int
pop
out
mov
dec
sbb
fcomip
ja
int
xchg
cli
in
jg
lods
dec
(bad)
sahf
(bad)
sub
mov
push
js
cld
ss
stc
pop
bnd
mov
out
cld
out
lods
les
out
xlat
clc
xor
int
stc
cmp
out
jecxz
pop
mov
xchg
jg
mov
in
std
mov
cld
scas
mov
(bad)
jmp
jg
into
test
hlt
imul
(bad)
mov
xchg
mov
pop
lahf
jg
mov
pop
dec
rcl
mov
cld
jmp
push
ds
jnp
or
outs
stc
lods
(bad)
pop
cmps
and
ins
cmp
xchg
imul
std
mov
loopne
shl
pop
mov
push
std
push
mov
mov
xchg
hlt
(bad)
fild
(bad)
jg
pop
push
fcomp
fidivr
loop
jg
xlat
adc
(bad)
out
or
lahf
scas
jg
sbb
(bad)
icebp
idiv
call
sbb
mov
bnd
push
cmc
sub
fmul
out
jg
les
test
or
out
(bad)
sbb
lea
gs
mov
sub
addr16
fcmovnu
stc
xchg
call
xchg
in
ja
retf
idiv
xchg
gs
pop
aas
stc
movq
lods
xor
scas
lahf
cld
pop
mov
xchg
call
fs
adc
dec
outs
test
not
pop
or
jg
lds
jae
jl
cmp
mov
pop
jb
mov
pop
mov
clc
fld
add
out
inc
cld
ss
cld
data16
cld
pop
mov
daa
jg
aas
push
sub
pop
push
std
add
shl
call
imul
std
cmp
push
sahf
jo
add
mov
cmp
adc
and
xchg
jmp
mov
jle
std
loopne
cmps
movzx
push
(bad)
dec
push
in
pop
inc
xchg
aaa
clc
int
sbb
std
(bad)
xor
add
cmps
icebp
xlat
sti
ins
(bad)
mov
(bad)
mov
push
in
aaa
shl
dec
dec
fstp
cld
popf
jmp
ja
fwait
inc
mov
call
mov
xchg
push
mov
call
shl
enter
dec
jnp
cld
add
pop
(bad)
les
cmps
fwait
xchg
hlt
(bad)
das
std
lea
mov
ds
int
cmp
or
push
xchg
push
icebp
cmps
push
pop
jg
std
call
fistp
std
lahf
lods
or
mov
in
(bad)
mov
out
push
std
cld
fwait
jmp
cmps
pop
cld
xchg
dec
dec
(bad)
ja
sub
and
and
sbb
mov
sub
cmp
int
inc
repz
fwait
sar
adc
inc
xchg
push
clc
lea
stc
aaa
jle
dec
(bad)
push
push
retf
movs
test
fistp
cmp
jno
jmp
sub
outs
lahf
mov
fs
inc
jbe
inc
inc
jmp
icebp
jg
fstp
inc
add
les
inc
push
ror
mov
repnz
jg
inc
rcr
add
cmp
dec
rcr
fild
enter
xchg
pop
xor
mov
mov
loopne
std
jne
jae
ins
mov
inc
pop
mov
clc
cli
jg
mov
das
icebp
loop
test
jg
cld
(bad)
hlt
mov
sar
jg
sub
pop
retf
lock
mov
jg
inc
mov
mov
jg
jno
xor
mov
push
mov
aas
pop
jg
sbb
outs
sti
mov
mov
xor
cmp
mov
push
(bad)
test
sub
mov
xchg
pusha
sti
outs
popa
sbb
loopne
movs
fsub
loop
push
loop
std
movd
aas
xchg
inc
in
pop
add
xchg
xchg
sbb
out
out
sub
push
std
dec
push
aas
not
adc
jmp
std
sbb
scas
loopne
sub
xor
jmp
out
xlat
adc
xchg
icebp
arpl
push
montmul
cmps
add
xchg
mov
leave
lahf
cmc
fwait
inc
or
pop
pusha
fnstcw
sub
mov
outs
and
scas
inc
outs
inc
sbb
aaa
and
push
and
push
std
in
movs
(bad)
jmp
sbb
mov
push
test
or
fldcw
loopne
fild
sbb
push
mov
cmps
std
lods
aas
stc
pop
jle
daa
(bad)
in
out
dec
ins
stc
fwait
jge
lahf
std
mov
or
loope
and
(bad)
mov
cli
ja
in
clc
sbb
bound
dec
or
xor
pop
push
movs
jmp
test
call
hlt
vmptrld
call
mov
rep
sbb
leave
xchg
cmps
or
jle
jl
dec
(bad)
outs
(bad)
pop
pop
loopne
aas
adc
xor
daa
icebp
neg
mov
std
popf
or
fild
repnz
icebp
and
lds
lds
stos
mov
sar
call
sti
out
bnd
iret
pop
pop
xor
inc
in
mov
call
outs
or
mov
sub
jnp
push
dec
push
(bad)
cld
call
pop
mov
aaa
stc
sub
jg
mov
add
pop
iret
scas
lods
aas
div
jne
in
repnz
jmp
sbb
sahf
mov
stc
or
mov
jmp
jecxz
sub
aas
dec
inc
mov
out
push
scas
push
push
mov
popf
add
mov
repz
aad
inc
lock
fs
stc
aaa
std
mov
pop
(bad)
jp
mov
popa
sti
call
out
stc
arpl
out
rol
jg
adc
(bad)
dec
cmp
rcr
fwait
mov
hlt
dec
inc
xor
ffreep
jge
pop
push
outs
mov
mov
mov
jno
mov
push
(bad)
ins
jg
pop
lahf
cmp
inc
fcomip
popa
ds
xor
jle
sbb
outs
std
jbe
scas
(bad)
push
cli
jne
dec
repnz
sti
in
jle
dec
dec
fcomip
xchg
(bad)
std
ja
in
(bad)
jbe
cld
jb
push
daa
fwait
lods
outs
jmp
std
outs
std
(bad)
call
jg
add
std
or
(bad)
push
jg
stc
xchg
bound
mov
(bad)
fcomip
xchg
mov
jg
out
std
mov
fsubp
sub
xchg
and
iret
jg
mov
repz
or
inc
repnz
leave
iret
adc
das
mov
in
jmp
xchg
cld
mov
pop
and
(bad)
jne
cmc
das
std
mov
mov
mov
std
mov
jb
jle
dec
ffreep
and
call
xchg
adc
lods
and
imul
fimul
call
div
call
stc
daa
jmp
inc
rcr
jg
std
cld
std
call
adc
das
mov
(bad)
fisubr
sti
pop
hlt
adc
std
mov
push
loop
(bad)
xor
aas
jmp
dec
hlt
dec
cli
stc
shr
xchg
sar
imul
out
xchg
arpl
(bad)
pop
clc
imul
(bad)
mov
lea
push
mov
call
jmp
outs
sar
inc
mov
inc
(bad)
aas
inc
jg
jg
cmps
mov
leave
dec
mov
mov
rol
inc
mov
and
push
(bad)
mov
jmp
call
out
inc
and
(bad)
jge
scas
dec
xchg
mov
(bad)
call
clc
in
movs
in
jg
(bad)
dec
xchg
cmp
xchg
sub
outs
jge
mov
cs
lahf
cld
lea
mov
xor
retf
loopne
call
das
int
xchg
lock
push
int3
mov
jnp
xchg
out
repnz
(bad)
cmp
cmp
mov
fist
inc
dec
pop
mov
pop
xchg
inc
cli
popf
enter
lahf
cld
stos
mov
out
jb
xchg
jg
mov
in
(bad)
in
mov
pop
stc
jg
inc
repnz
enter
(bad)
repz
mov
scas
fcomip
xchg
jg
mov
in
std
sbb
xchg
jg
in
fnstsw
mov
sbb
jmp
inc
mov
outs
jge
scas
cli
popf
adc
fisttp
jle
hlt
xchg
add
dec
test
test
or
inc
jle
pop
cdq
aas
cwde
pop
cld
pop
int3
(bad)
mov
cld
pop
mov
cmc
jmp
fsubr
repnz
rcl
ds
adc
mov
std
jg
call
jmp
fwait
xchg
add
xor
ins
retf
xchg
jg
lods
cmc
rol
rol
out
mov
out
jg
jno
leave
arpl
std
jmp
std
mov
or
mov
cmc
sbb
and
pop
mov
loopne
clc
aas
js
inc
and
(bad)
(bad)
scas
cmc
arpl
fbld
add
inc
pop
cld
or
ins
jg
ja
clc
std
idiv
pusha
cli
jecxz
cli
jecxz
inc
sub
cmp
ins
sar
(bad)
jg
outs
(bad)
jmp
mov
pop
add
cli
iret
or
mov
jmp
jb
in
mov
and
jle
sbb
(bad)
rcr
mov
stc
jg
pop
cmc
mov
mov
mov
sahf
mov
cli
in
sar
ret
cmp
push
(bad)
repnz
and
das
(bad)
cmp
lock
xor
outs
mov
dec
cld
cs
add
aaa
xlat
ja
mov
sub
(bad)
shl
fcmovnb
pop
sti
stos
cmp
xchg
ret
adc
pop
hlt
jle
out
push
hlt
jmp
(bad)
(bad)
cs
dec
cli
out
mov
push
jmp
jmp
mov
cld
fild
push
jmp
dec
cld
out
sbb
cld
imul
call
(bad)
pop
jmp
cld
lea
add
leave
fisttp
rcl
mov
leave
scas
loope
push
or
sbb
(bad)
aaa
adc
repnz
push
rol
retf
in
dec
ins
xor
repz
inc
mov
lock
jo
xchg
cld
es
cld
push
mov
and
mov
and
test
pop
in
sti
outs
std
jp
cmp
ss
cld
stc
mov
std
push
mov
ficomp
cld
out
xor
xor
(bad)
and
or
clc
or
scas
and
lds
or
std
jmp
dec
ret
scas
sub
sti
xor
add
xor
out
mov
jg
leave
jbe
or
push
std
(bad)
outs
cld
call
in
adc
das
clc
sub
sbb
mov
shl
(bad)
jle
mov
(bad)
(bad)
cmp
xor
into
scas
adc
sub
into
std
dec
push
ds
mov
aas
stc
gs
das
pusha
bound
adc
jg
pop
mov
xchg
jmp
repnz
push
call
loopne
mov
ud0
mov
jbe
sar
add
mov
mov
(bad)
or
aad
mov
test
xor
lods
sub
jl
lahf
dec
int
jmp
out
inc
fst
pop
and
popf
add
push
fwait
jg
fwait
sar
in
stc
popf
fs
cmp
out
xor
add
fild
cmp
loopne
stc
sbb
imul
stc
arpl
arpl
xor
xchg
fild
out
popf
sbb
sub
test
mov
repnz
stc
int
sbb
(bad)
mov
dec
fild
enter
jnp
repnz
test
fbld
xchg
loop
out
sbb
out
das
movs
out
jle
(bad)
xlat
sti
or
ja
ins
jle
pop
ja
ja
sbb
test
outs
jb
inc
jb
sbb
(bad)
cli
jmp
pop
mov
mov
mov
imul
out
in
aaa
dec
dec
jl
lahf
cld
call
(bad)
fucomip
xlat
adc
cld
(bad)
std
mov
scas
and
jg
dec
mov
cmp
xchg
repz
jle
aaa
xchg
ret
arpl
outs
sti
imul
aaa
movs
xchg
outs
test
adc
ja
jne
cli
or
outs
stc
sbb
push
push
xchg
fwait
push
pushf
(bad)
fistp
sub
nop
int3
repnz
and
pushf
dec
cld
das
adc
cld
push
cld
fucomp
les
dec
mov
ins
adc
xor
jo
mov
call
mov
xchg
cld
pop
pop
stc
sbb
(bad)
pop
stc
(bad)
jg
nop
stc
lea
pop
test
jmp
aas
(bad)
xchg
jb
cld
shr
fnstsw
adc
iret
push
push
xchg
pop
test
iret
aas
mov
dec
(bad)
call
std
out
ret
jg
dec
call
push
xchg
mov
imul
and
mov
aas
lea
jmp
int
or
mov
inc
(bad)
xor
loope
loope
xor
aam
add
imul
lahf
sub
mov
inc
dec
loopne
and
clc
int
or
mul
mov
stc
xchg
jg
ja
mov
idiv
jge
imul
xchg
mov
loope
jl
ud0
in
lock
fisttp
in
jmp
jb
test
inc
mov
mov
retf
mov
xor
out
and
sub
test
outs
stc
leave
jg
mov
fist
mov
(bad)
mov
pusha
dec
push
jle
dec
(bad)
xchg
fucomip
xchg
push
mov
in
sti
popf
aas
stc
mov
mov
xchg
fs
(bad)
hlt
lea
cmps
aaa
jle
outs
xchg
out
or
xor
jg
(bad)
repz
repnz
rcl
repnz
mov
mov
sar
push
fimul
iret
fild
jg
std
shr
inc
inc
jecxz
ds
jnp
adc
jge
outs
mov
aam
add
outs
jl
cmps
mov
cmc
mov
(bad)
sar
xchg
mov
(bad)
cld
cmp
stos
call
pushf
(bad)
aas
cld
ss
outs
sti
sbb
cs
fldenv
xchg
call
std
(bad)
and
xchg
fs
je
lds
(bad)
jmp
out
jg
sar
ja
fistp
cli
jge
jno
adc
std
jmp
cli
std
iret
movs
out
(bad)
aam
pop
and
(bad)
daa
sbb
push
std
repnz
adc
(bad)
pop
shl
adc
cld
popf
test
std
push
hlt
mul
and
call
std
inc
sar
retf
jmp
jmp
jge
call
dec
test
aas
icebp
arpl
(bad)
jge
(bad)
iret
mov
notrack
call
jns
(bad)
push
hlt
(bad)
call
std
and
repz
movs
lahf
das
call
lahf
inc
out
cld
mov
cwde
call
sar
call
sti
sub
pop
jmp
lahf
dec
mov
outs
movs
idiv
sbb
stc
fwait
push
fstp
std
pop
dec
(bad)
jmp
repz
out
dec
lahf
aas
add
aam
jg
mov
push
test
sti
int
(bad)
fisttp
inc
sbb
out
jg
jge
dec
ins
call
cli
sti
ja
iret
inc
xor
adc
hlt
sti
pop
inc
lahf
call
repz
cmps
lahf
imul
sti
mov
jmp
call
sbb
outs
inc
std
call
stc
outs
hlt
jmp
pop
push
or
jmp
(bad)
push
adc
jmp
std
xor
xlat
scas
dec
aas
mov
(bad)
call
(bad)
call
fldenv
out
das
mov
fisttp
mov
out
fist
std
bound
jnp
fwait
and
push
jge
outs
shl
clc
dec
lahf
mov
fbld
jmp
aam
mov
jg
(bad)
(bad)
jmp
sti
fistp
push
mov
fnstcw
loopne
mov
(bad)
jg
mov
(bad)
aas
mov
jle
cli
in
aas
mov
(bad)
inc
pop
shl
and
jnp
idiv
push
std
sub
(bad)
xchg
cli
stc
fwait
call
(bad)
cmp
popf
jg
jle
cmp
(bad)
div
neg
dec
jg
inc
out
std
out
aam
push
jle
mov
sar
xchg
jle
ja
(bad)
cli
std
mul
inc
std
pop
adc
mov
xchg
hlt
dec
add
lahf
daa
js
lock
mov
das
cdq
xchg
mov
mov
pop
cmps
lahf
jg
sar
call
cmp
mov
jg
pop
xor
xor
imul
cli
jae
xlat
or
mov
cli
call
xchg
inc
mov
std
xor
jmp
xlat
nop
ins
rcr
inc
(bad)
call
jg
scas
and
scas
sti
xor
push
hlt
(bad)
jg
xlat
nop
fsubr
jg
(bad)
jmp
jg
jno
push
pop
out
xlat
xchg
add
popa
in
ja
dec
test
sub
scas
call
(bad)
call
cmc
pop
(bad)
call
mov
jge
(bad)
cli
call
inc
div
sar
loope
and
inc
std
(bad)
aas
cmps
(bad)
push
call
imul
inc
(bad)
dec
(bad)
mov
cmps
(bad)
jmp
dec
push
jmp
daa
mov
cmp
jnp
(bad)
jg
cli
(bad)
cmp
mov
jg
sahf
(bad)
popa
hlt
(bad)
aas
cmp
in
call
sahf
pop
dec
rcl
fbld
(bad)
inc
mov
jmp
sti
fisttp
xchg
fs
mov
and
icebp
mov
jg
push
in
jmp
gs
mov
das
jmp
mov
std
mov
or
pop
jg
ja
jg
jle
int
leave
(bad)
cli
(bad)
fldenv
jg
cli
addr16
mov
ds
or
aas
add
retf
out
stc
leave
lahf
cli
mov
clc
mov
div
std
ds
and
pop
lahf
cld
mov
lahf
and
loop
xchg
mov
jle
sbb
mov
mov
ror
es
loopne
ds
movs
stc
pop
cmps
pop
inc
clc
jno
lock
ds
ror
jnp
dec
(bad)
mov
js
pop
les
jge
adc
clc
icebp
sbb
mov
pop
sbb
(bad)
jns
cli
outs
icebp
ror
addr16
icebp
adc
in
dec
jle
outs
loopne
mov
clc
loopne
cmp
(bad)
icebp
jecxz
aas
clc
pop
(bad)
das
cmp
xchg
pop
pop
cld
cmc
clc
mov
clc
sub
inc
ret
mov
mov
pop
push
lahf
or
pop
cld
xchg
clc
mov
lock
loope
dec
sbb
jecxz
outs
jg
jecxz
jbe
push
(bad)
inc
xor
lock
fbstp
scas
pop
das
icebp
rcr
cs
sbb
aas
cmp
shl
adc
pop
jecxz
aas
adc
mov
ds
popf
icebp
jecxz
cmp
ins
lock
fwait
retf
add
cmp
(bad)
push
(bad)
ja
leave
cmc
shr
cld
(bad)
pop
outs
paddd
clc
mov
clc
test
jmp
std
loopne
imul
cmp
jle
sti
in
retf
popf
cmp
data16
cwde
sbb
mov
(bad)
mov
adc
lock
outs
sbb
dec
add
pop
mov
inc
(bad)
cmp
adc
(bad)
aaa
ds
loopne
mov
fstp
cld
test
jecxz
outs
jecxz
aas
pop
pop
sbb
mov
add
in
jecxz
aas
sbb
jmp
pop
(bad)
(bad)
jecxz
fisttp
aas
jle
sbb
aas
jle
fcomip
xlat
sti
pop
jle
push
push
mov
push
pop
mov
in
and
sbb
(bad)
shr
xlat
nop
dec
out
shr
jmp
std
(bad)
cmp
push
(bad)
mov
call
pop
sar
jmp
call
dec
inc
iret
add
xlat
sar
jmp
pop
inc
pop
push
xor
aas
icebp
imul
iret
mov
call
(bad)
jg
(bad)
jmp
(bad)
cmp
(bad)
pop
call
dec
pop
loopne
and
fucomi
dec
inc
std
fstp
shr
lahf
cld
das
sub
daa
jmp
push
loopne
jg
mov
dec
(bad)
jp
cli
outs
jmp
(bad)
stc
xlat
sar
mov
or
mov
jmp
out
hlt
dec
(bad)
(bad)
mov
jecxz
and
(bad)
jl
cli
pop
movs
push
mov
fisttp
daa
loop
pop
fwait
dec
clc
icebp
xchg
clc
add
mov
pop
xchg
adc
lock
div
jecxz
loopne
jle
push
pop
pop
loopne
jno
or
sahf
push
cld
push
clc
xor
sbb
or
jmp
outs
les
mov
jle
cld
cwde
sbb
cmps
clc
icebp
cld
loopne
ror
aad
lea
adc
pop
cld
mul
loope
cmp
aas
mov
cmp
cmp
push
mov
cdq
into
cli
outs
cld
mov
lods
dec
(bad)
sti
fist
fsub
adc
lahf
rcl
and
dec
(bad)
sahf
mov
not
lahf
cld
mov
xchg
mov
dec
(bad)
cs
sahf
push
lahf
cld
cmp
out
push
(bad)
sbb
std
in
mov
repnz
xchg
daa
call
daa
jg
out
lock
lahf
idiv
(bad)
outs
test
aas
stc
ja
(bad)
in
call
aas
stc
mov
mov
in
rcr
cld
repz
pop
test
das
and
loop
outs
and
push
clc
xor
js
pop
mov
icebp
or
jle
cld
clc
repnz
jl
xchg
scas
push
mov
cld
arpl
mov
call
dec
jl
xchg
adc
clc
ds
(bad)
aaa
mov
arpl
psubsw
sar
jns
ja
std
mov
jg
lahf
std
and
(bad)
mov
clc
sbb
fbstp
dec
bnd
mov
xchg
cmps
push
std
mov
sub
mov
jns
dec
shl
pop
mov
outs
dec
dec
stc
pop
push
repz
cld
cs
imul
inc
(bad)
jmp
daa
jg
add
jmp
(bad)
sar
in
fild
xchg
or
pop
scas
dec
test
(bad)
jnp
dec
out
sub
sar
imul
mov
push
retf
call
inc
mov
es
(bad)
cs
retf
or
xchg
(bad)
xor
(bad)
(bad)
out
sar
jp
inc
cli
xor
imul
xor
mov
shl
mov
or
js
outs
(bad)
out
fwait
pop
cmps
fcmovnu
pushf
mov
xlat
call
jg
ins
idiv
xor
call
inc
out
fisttp
scas
sar
jmp
dec
lahf
std
mov
in
cmc
cli
jnp
mov
das
mov
dec
jmp
mov
out
rol
jmp
mov
hlt
lahf
movs
iret
fcomp
sub
repz
call
add
inc
dec
(bad)
or
sti
mov
sbb
(bad)
inc
outs
std
push
hlt
rcr
(bad)
or
int
fdivr
div
outs
(bad)
and
test
sbb
das
or
(bad)
xlat
fild
add
cli
fnstsw
shr
jmp
in
clc
lahf
test
cld
sahf
mov
(bad)
in
jp
mov
pop
(bad)
out
addr16
mov
stc
out
cli
lahf
xchg
mov
pop
jg
jnp
inc
mov
js
(bad)
test
cld
jae
lds
adc
fisubr
movd
loopne
clc
push
out
xor
mov
shr
xor
mov
ds
mov
pop
cld
xchg
in
fistp
in
jle
pop
jl
(bad)
dec
mov
mov
jge
mov
jp
ds
aaa
shr
mov
xlat
out
imul
hlt
call
fstp
dec
push
mov
pop
movs
jg
push
cmc
pop
sbb
mov
xchg
repnz
inc
je
pop
call
enter
das
outs
data16
daa
lock
cmc
leave
(bad)
in
repz
addr16
pop
ror
lea
and
mov
(bad)
jle
out
mov
iret
mov
jg
nop
out
stc
pop
test
cld
std
mov
jg
lahf
std
cs
jmp
lahf
(bad)
pop
cmc
in
daa
sbb
jmp
cld
xchg
clc
loopne
xchg
(bad)
stc
ja
out
mov
imul
jmp
lea
idiv
mov
inc
inc
loopne
push
add
dec
(bad)
ds
cmps
enter
addr16
in
and
les
and
idiv
inc
std
(bad)
jecxz
add
pop
jmp
inc
pop
cli
lods
lock
leave
out
jmp
sbb
call
cld
mov
sar
nop
dec
jle
ins
icebp
out
dec
or
or
xchg
sub
xchg
ret
mov
cmp
inc
fsub
ja
xlat
sbb
inc
jmp
xor
test
outs
xchg
xchg
std
data16
syscall
in
add
aaa
icebp
and
icebp
loope
sbb
dec
popf
sbb
sub
jp
(bad)
std
lahf
(bad)
mov
(bad)
pop
and
add
iret
adc
(bad)
adc
das
add
fistp
lock
(bad)
out
add
and
or
pop
adc
add
daa
pusha
jg
add
inc
(bad)
mov
jnp
out
jg
dec
loope
std
arpl
xor
in
push
xor
jmp
push
and
scas
jmp
ja
call
mov
mov
mov
or
adc
pop
cmp
std
call
jmp
movs
std
push
hlt
jg
popa
add
mov
dec
call
or
adc
aam
inc
jmp
repnz
jg
and
fdivr
mov
inc
cmp
fwait
mov
das
add
or
add
call
pushf
or
loope
mov
loope
jg
mov
sub
xlat
aas
std
jne
aaa
mov
pop
cli
mov
xor
and
das
ror
nop
sti
(bad)
push
pop
mov
xchg
sbb
hlt
or
or
mov
mov
and
mov
sar
inc
nop
xchg
rcl
or
jle
add
out
jb
inc
scas
popf
inc
pop
mov
in
pop
xor
add
pop
sbb
sti
dec
movd
inc
add
mov
push
lods
out
std
es
jmp
dec
hlt
cmps
sar
mov
inc
jl
addr16
mov
(bad)
sbb
loopne
aas
out
nop
lods
(bad)
out
and
push
inc
div
and
jg
dec
(bad)
ss
jb
fs
scas
popa
test
sbb
sbb
add
out
inc
ins
(bad)
movs
(bad)
xchg
pop
inc
data16
ja
aad
fucomip
xchg
(bad)
(bad)
ja
in
stc
in
jle
fnstsw
mov
sub
jg
fbld
hlt
mov
rol
xor
lea
stc
pop
jle
dec
(bad)
fcmovnu
(bad)
xchg
(bad)
jmp
(bad)
inc
dec
outs
repz
(bad)
clc
fstp
std
ss
cld
xlat
mov
xchg
iret
inc
(bad)
pusha
icebp
pop
adc
adc
in
outs
sar
pop
out
xlat
clc
outs
jle
xchg
(bad)
xlat
cli
mov
icebp
out
add
aas
push
out
mov
js
or
and
inc
rcl
cmp
mov
push
iret
mov
hlt
mov
(bad)
dec
hlt
jmp
mov
dec
cli
stc
cmps
(bad)
cmp
out
aas
test
(bad)
call
cld
xchg
hlt
repz
movs
iret
dec
jbe
out
jg
xlat
xchg
xchg
test
cli
xlat
xchg
adc
sti
dec
jmp
sti
shr
jg
std
push
shl
jg
jge
(bad)
call
xchg
pop
jns
(bad)
push
call
call
call
lahf
std
imul
jmp
std
call
jne
xor
out
call
jge
out
loopne
test
call
sub
out
mov
(bad)
imul
mov
inc
mov
mov
cmp
call
js
and
xor
cmp
pop
jp
(bad)
scas
and
mov
cli
jmp
xchg
js
imul
jle
imul
pop
inc
inc
aam
(bad)
mov
cli
jg
(bad)
jg
(bad)
call
cli
call
mov
ret
add
fcomip
xchg
jmp
mov
in
cld
pop
imul
sub
cld
cmps
paddd
movs
jg
ja
in
and
clc
xchg
enter
jle
dec
ds
cmps
test
aas
idiv
hlt
mov
xchg
sti
sti
ja
neg
std
int
adc
cmc
adc
cld
aad
retf
std
dec
(bad)
jb
jbe
loop
in
daa
jg
inc
clc
mov
or
xchg
aas
stc
ja
in
and
std
arpl
mov
dec
and
cmp
in
jg
pop
lahf
xchg
stos
adc
test
lea
xor
(bad)
(bad)
xor
std
push
addr16
xlat
fucomip
loopne
mov
outs
or
inc
sbb
aaa
and
out
int
(bad)
sti
mov
repnz
xchg
jne
xlat
sub
cld
xchg
leave
push
std
out
xchg
mov
in
dec
(bad)
jno
arpl
xor
jg
imul
mov
mov
inc
(bad)
push
cmp
inc
xor
jg
ja
mov
pop
jl
scas
inc
mov
ins
mov
and
repnz
neg
daa
jg
shl
out
and
fbld
stc
ins
cmp
inc
std
cmc
jle
jg
stc
ins
jle
(bad)
sti
hlt
scas
cld
aas
mov
jp
(bad)
imul
inc
push
(bad)
std
jg
call
push
ret
lods
mov
out
repz
push
pop
push
jle
(bad)
jmp
cld
std
inc
aas
inc
jle
outs
je
cmps
xlat
sub
std
adc
lock
icebp
fwait
jns
pushf
mov
push
cli
mov
sub
pusha
loope
jge
sbb
cmc
and
(bad)
and
sbb
inc
hlt
aaa
xlat
push
jg
jl
retf
sti
sbb
jle
scas
push
xchg
xchg
cli
push
push
cld
sbb
lock
sar
sub
inc
lea
out
in
cmp
aaa
jg
popf
loopne
iret
adc
cli
pop
jg
mov
das
std
sar
clc
sub
inc
cli
jne
repz
out
xchg
jl
call
push
push
mov
cld
xchg
rcl
stc
shl
pop
nop
pop
(bad)
fld
mov
aad
idiv
xchg
std
scas
or
jb
jle
cli
in
mov
aad
cli
(bad)
mov
jle
outs
repz
sti
pop
sub
cli
cmp
retf
cs
ret
hlt
iret
xchg
mov
mov
push
loopne
imul
mov
xor
aas
xchg
mov
mov
pop
xor
rol
jmp
out
xlat
push
sbb
mov
sub
xchg
ja
push
xchg
(bad)
mov
pop
out
shr
aaa
stc
in
push
cli
(bad)
or
push
jle
and
popf
adc
jmp
or
idiv
xor
cld
add
out
lods
sar
xchg
cmp
dec
cwde
jae
cld
fld
pop
inc
cld
sbb
xor
aaa
mov
clc
psrlq
sti
inc
hlt
int
sahf
dec
inc
mov
dec
mov
ins
shr
add
sahf
jg
mov
lea
sbb
adc
int3
repz
inc
(bad)
jmp
jg
push
jb
(bad)
call
aad
clc
sbb
hlt
leave
lahf
stos
fbld
pop
(bad)
in
mov
ja
jmp
dec
ins
(bad)
mov
pop
push
loop
leave
fist
cmp
mov
push
cli
sbb
xchg
fsubr
leave
scas
clc
in
aas
stc
pop
jle
push
scas
mov
das
shr
shl
mov
outs
sti
leave
(bad)
clc
fstp
(bad)
mov
cld
xlat
mov
mov
addr16
call
jmp
scas
icebp
xchg
(bad)
(bad)
jmp
push
mov
fcomip
aaa
and
vmread
mov
cld
dec
ds
imul
jle
outs
dec
dec
xlat
outs
(bad)
out
xchg
mov
jg
mov
ja
add
stc
ret
dec
inc
lea
or
call
push
in
std
jp
(bad)
push
rcr
cmp
cdq
fnstsw
adc
or
cmp
cld
sub
aas
and
mov
dec
inc
sbb
sub
cmps
(bad)
push
sti
scas
dec
aas
jg
xor
mov
in
movs
(bad)
call
std
std
jnp
cmp
icebp
mov
(bad)
jg
xor
sbb
rcr
sbb
xchg
cs
or
inc
or
jmp
xchg
(bad)
xor
pop
ret
mov
lea
and
fstp
in
dec
jle
adc
fisttp
or
sbb
mov
xor
jg
test
jg
pop
mov
(bad)
ja
in
clc
in
aas
stc
addr16
dec
(bad)
sub
loop
dec
jle
(bad)
mov
lea
and
mov
jg
mov
add
cdq
mov
les
std
(bad)
push
cmp
cmc
outs
icebp
leave
push
cmp
stc
das
jg
dec
out
xchg
lahf
cld
inc
fs
mov
cdq
call
push
mov
stc
out
dec
mov
out
hlt
leave
jg
cmp
std
dec
fs
and
pop
mov
mov
sub
outs
bnd
mov
sti
pushf
bound
add
cld
sbb
mov
sub
mov
ja
ja
cld
pop
int3
add
push
std
stc
imul
mov
psllw
adc
mov
cli
sbb
stc
mov
or
add
outs
jo
jb
cli
mov
test
or
imul
(bad)
clc
cwde
push
repnz
pop
cmc
imul
ins
sub
cld
es
xlat
shl
pusha
adc
imul
in
popa
loop
cs
xor
cs
les
lods
lock
inc
(bad)
pop
and
pop
inc
fadd
cmp
lock
or
cli
lea
dec
cmp
pop
jl
retf
jle
dec
(bad)
daa
call
cld
in
leave
and
lea
stc
movq
dec
(bad)
cmp
call
std
dec
hlt
sar
daa
pop
adc
rcr
call
clc
mov
(bad)
xor
xor
imul
test
stos
fucomip
loopne
shr
mov
inc
rcl
mov
test
stc
fist
aaa
cld
(bad)
les
fsubrp
int3
push
push
lods
pop
dec
(bad)
dec
mov
(bad)
test
mov
fisubr
leave
jg
cmp
or
mov
jecxz
push
jmp
fcmovu
out
push
or
add
mov
lea
clc
popf
hlt
popf
jnp
out
bound
xor
xlat
loop
add
fdivr
inc
or
mov
out
mov
lea
adc
inc
(bad)
sbb
adc
cli
cmp
jle
out
sbb
(bad)
jg
sbb
add
(bad)
call
(bad)
hlt
call
push
xor
xchg
cmps
es
push
adc
and
(bad)
fbld
repz
sbb
std
(bad)
jle
adc
cmp
les
test
mov
(bad)
inc
pop
ja
mov
fist
leave
jg
fucomi
and
xor
outs
and
xor
fdivr
rcl
sbb
hlt
add
clc
pop
mov
or
(bad)
sbb
add
imul
out
clc
mov
(bad)
in
ja
in
cli
add
mov
push
(bad)
mov
out
shl
and
(bad)
mov
jge
(bad)
inc
mov
ret
daa
call
outs
inc
pop
inc
adc
xchg
fisttp
cmp
add
mov
enter
(bad)
jg
outs
scas
das
jge
jg
xchg
(bad)
cwde
stc
fild
jg
(bad)
mov
pusha
mov
dec
xor
icebp
jmp
sbb
scas
lds
jg
outs
stc
jmp
out
into
sub
xchg
jmp
xlat
nop
in
jg
xlat
nop
mov
call
sbb
dec
jg
popa
(bad)
call
mov
cmp
(bad)
jmp
(bad)
jmp
std
(bad)
out
mov
out
cld
sbb
mov
in
repz
lahf
repz
adc
adc
mov
movs
clc
jne
pop
xchg
cmps
fistp
and
outs
inc
add
outs
inc
inc
xchg
push
inc
hlt
arpl
in
jg
ja
jle
je
sbb
xlat
arpl
mov
xor
xlat
scas
jae
sbb
out
outs
mov
repz
fwait
dec
xchg
mov
in
stc
ins
sbb
xor
out
dec
xchg
push
mov
daa
(bad)
cmp
repz
lock
popa
jecxz
int3
clc
or
mov
sar
dec
inc
or
jg
out
jmp
push
call
jmp
out
cs
pop
mov
enter
mov
fcomip
imul
stos
(bad)
(bad)
cmp
jmp
mov
das
in
mov
repnz
(bad)
in
(bad)
mov
(bad)
sbb
inc
xchg
fcomip
xlat
adc
dec
mov
icebp
(bad)
xchg
loop
cmp
aaa
and
in
jecxz
(bad)
jecxz
mov
jmp
fbstp
sar
mov
dec
jae
aad
adc
cmp
xchg
rcr
lock
push
mov
clc
jne
jo
repnz
jle
dec
(bad)
cmps
fisttp
daa
jmp
jnp
out
js
stc
xlat
or
xchg
sub
sti
punpckldq
xlat
adc
rcr
jmp
jge
(bad)
xor
push
sub
iret
cld
xlat
nop
cmc
pusha
and
shl
jg
and
(bad)
mov
aas
sti
aaa
cmp
cwde
inc
cmp
sbb
lea
repnz
out
inc
add
scas
mov
pminsw
cld
push
ret
sbb
cmp
aaa
add
(bad)
neg
rol
test
mov
push
mov
push
and
sbb
cld
movsx
xchg
(bad)
xchg
(bad)
in
ja
xor
stc
inc
das
enter
mov
cs
pop
div
mov
out
sub
(bad)
mov
xlat
das
sti
in
or
jg
inc
or
mov
push
dec
and
sbb
dec
inc
int3
or
hlt
(bad)
mov
add
out
xchg
out
fild
jmp
(bad)
jg
std
lahf
in
push
aas
jg
mov
sub
sub
cli
jg
(bad)
jns
ja
lea
loop
mov
(bad)
ja
mov
jle
xor
xchg
cmp
sahf
and
add
fistp
sti
sbb
fisttp
in
(bad)
aaa
adc
xor
sbb
das
fs
(bad)
mov
cmp
repz
stc
out
jle
dec
(bad)
jmp
push
or
inc
sub
neg
imul
mov
and
scas
inc
retf
stos
(bad)
fsubr
(bad)
xor
pop
push
(bad)
jmp
(bad)
pop
sar
jg
cli
sti
pop
mov
pop
aam
js
(bad)
jg
scas
and
cli
xlat
nop
ja
mov
mov
lea
vcvtsi2ss
xor
xchg
stc
cmp
loopne
push
shl
dec
cld
pop
xchg
vcvtss2si
stc
outs
jle
push
mov
and
xchg
std
sub
cmps
fmul
outs
inc
dec
repnz
outs
fwait
cld
into
(bad)
rcl
jle
xchg
mov
sar
aas
sti
ins
add
jg
pop
cld
leave
das
sti
ins
ds
lahf
jle
dec
(bad)
sti
(bad)
xchg
jmp
pop
jl
pop
(bad)
jbe
cld
addr16
(bad)
fld
iret
mov
cli
mov
sub
je
ins
(bad)
fdivr
mov
out
(bad)
data16
std
cmp
jmp
shl
loopne
adc
jns
lahf
pop
inc
cwde
push
dec
or
jg
std
jmp
aam
rol
fidivr
repz
adc
int3
jp
cdq
cmc
ja
int3
mov
sti
(bad)
(bad)
mov
les
pop
jg
or
ret
rol
outs
dec
add
xor
clc
outs
and
mov
push
arpl
jg
xor
aaa
push
lock
adc
pop
mov
or
outs
retf
sbb
mov
scas
jg
jae
inc
jge
pop
sti
xlat
clc
mov
dec
jge
aas
adc
jno
lock
or
lock
inc
hlt
(bad)
fisttp
(bad)
hlt
xor
jg
std
call
std
xor
jg
sar
ja
(bad)
jmp
ins
iret
jle
loope
and
dec
in
adc
icebp
pop
(bad)
jmp
scas
sub
and
lahf
fucom
fucomip
loopne
adc
mov
mov
mov
ret
aaa
jmp
retf
adc
call
fdivr
in
daa
aas
(bad)
mov
cmp
es
cld
xchg
mov
cld
clc
fistp
mov
icebp
mov
sub
outs
dec
aas
getsec
xchg
mov
pop
cli
aaa
xchg
clc
loope
in
ret
mov
fucomp
std
pop
jle
mov
jle
dec
jle
inc
sbb
mov
lock
in
lock
xchg
xor
out
and
mov
jmp
push
sahf
test
push
stos
mov
and
pop
mov
outs
xchg
and
aaa
jae
loop
out
mov
jb
outs
test
sbb
fbld
xchg
ja
dec
push
push
stc
mov
aas
jg
push
mov
sub
addr16
test
aaa
pop
(bad)
pop
int3
push
int3
pop
mov
in
xlat
xor
cld
call
int3
fucomp
icebp
imul
pop
inc
out
or
call
imul
jg
(bad)
call
(bad)
call
sti
ja
lahf
rcr
js
adc
cmp
(bad)
push
pop
mov
js
pop
push
(bad)
(bad)
inc
fwait
clc
and
scas
hlt
cmp
push
mov
jae
push
test
pop
and
or
inc
pushf
push
dec
xor
xor
(bad)
stc
(bad)
sub
cld
int
pop
cld
cmp
xor
clc
aas
std
pop
sbb
shr
test
or
or
jo
jmp
cmp
int
sbb
in
dec
sbb
lahf
xchg
mov
pop
adc
sti
mov
(bad)
das
push
ins
sub
cmp
pop
lock
outs
das
jmp
xchg
fild
dec
xchg
addr16
dec
cmp
and
mov
dec
repnz
dec
mov
jmp
mov
xchg
cld
mov
shr
enter
ret
cmp
ss
sar
stc
xlat
in
inc
mov
neg
sahf
clc
mov
add
lods
pop
push
fs
repz
(bad)
out
sbb
pop
jg
scas
and
clc
arpl
lds
dec
jg
scas
and
sbb
das
std
xor
inc
sahf
sar
jmp
dec
jmp
mov
rcl
shr
sbb
xor
out
lods
jno
xor
stos
jle
daa
jmp
out
dec
or
mov
clc
pop
adc
cld
jnp
add
xor
push
sbb
xchg
lahf
cld
ror
repz
sbb
push
push
nop
inc
sub
outs
xchg
or
pop
imul
cld
cmp
mov
outs
dec
jl
fwait
jg
out
mov
cli
adc
jbe
xor
loop
fisttp
dec
inc
fist
popf
adc
cmp
data16
test
out
inc
(bad)
jl
sub
outs
repnz
cld
sbb
repz
jb
inc
inc
cli
ins
cwde
xor
xor
out
push
xabort
mov
cmp
jmp
cli
lahf
pushf
fidivr
js
dec
add
dec
push
cli
test
(bad)
call
inc
cmps
call
call
jle
dec
sub
jb
in
(bad)
xor
xor
call
call
stos
ret
ror
stc
aas
pop
fild
aas
and
add
test
ret
pop
cld
dec
vmread
rep
cld
sbb
and
fiadd
cmp
xor
and
nop
mov
dec
jecxz
and
loope
adc
fistp
cmp
lahf
cld
movs
dec
jle
leave
push
std
into
mov
cmc
sbb
jp
outs
test
add
retf
shr
add
ror
mov
fwait
add
fld
leave
in
sti
fwait
enter
(bad)
leave
jg
cmp
sti
xchg
jb
and
or
loopne
out
leave
outs
sub
xchg
pop
mov
mov
out
icebp
or
pop
fcom
retf
rcr
inc
in
ja
pop
jle
sbb
in
movaps
fild
pop
and
repnz
push
xchg
mov
stc
pop
dec
and
mov
std
lahf
loopne
pop
add
cli
add
jmp
or
test
jle
std
shl
mov
imul
rcl
jns
int3
(bad)
dec
inc
push
loop
mov
lock
mov
fbld
jo
sub
jg
(bad)
(bad)
jnp
call
std
mov
clc
popf
ror
ins
mov
sar
xor
cli
add
idiv
cld
imul
(bad)
xor
out
jmp
(bad)
les
jmp
lahf
cld
ja
mov
daa
push
outs
dec
jg
fstp
out
or
fist
leave
aas
scas
cmp
xchg
push
push
clc
clc
int
mov
sbb
rcr
add
xchg
lock
out
inc
mov
(bad)
push
les
mov
leave
mov
lahf
leave
cmps
and
sub
aas
stc
iret
jg
daa
dec
out
cld
leave
jg
js
jbe
sub
fidivr
xchg
out
adc
and
stc
in
fldenv
push
mov
inc
leave
shl
and
je
lods
aam
cmps
adc
cmp
adc
mov
lock
(bad)
dec
adc
add
add
loopne
ret
sub
idiv
xchg
jle
jg
push
and
popa
mov
cld
out
xchg
dec
xor
(bad)
adc
xlat
adc
clc
adc
jg
cli
call
scas
(bad)
dec
mulps
sar
(bad)
out
sub
jl
ret
xlat
and
clc
and
ret
cmp
daa
fst
jmp
fs
movq
and
dec
cmp
mov
sbb
repnz
retf
inc
jbe
push
and
add
mov
xor
mov
movs
das
inc
fisttp
(bad)
out
push
aas
stc
aaa
sti
in
sti
add
das
loopne
out
pusha
push
and
cmc
fisttp
repnz
sub
adc
add
pushf
in
and
cs
ins
into
cwde
movs
jle
out
push
dec
push
(bad)
sbb
dec
lock
inc
adc
xchg
lods
jge
xchg
mov
xchg
aas
repz
sar
sti
mov
jno
fs
out
(bad)
xor
(bad)
jge
jae
(bad)
jmp
xlat
nop
sub
jle
jecxz
xchg
jmp
scas
and
add
stos
icebp
cld
addr16
mov
dec
inc
dec
shl
push
inc
mov
ret
outs
(bad)
cld
mov
inc
out
and
adc
hlt
repz
std
in
pop
xor
cmp
outs
inc
push
xchg
mov
scas
add
hlt
sbb
fisttp
out
shl
adc
sti
arpl
xor
jns
mov
xchg
push
pushf
sub
pop
shr
sub
add
cmp
(bad)
and
xor
scas
xchg
(bad)
ja
std
hlt
scas
cmps
jg
(bad)
xor
std
inc
ss
jle
loope
out
(bad)
sbb
mov
loope
jl
push
(bad)
sbb
inc
xchg
sub
add
inc
shl
dec
frndint
(bad)
mov
mov
jg
jo
cli
imul
or
mov
dec
clc
fsub
movs
or
mov
xor
les
cmp
xor
mov
shl
sbb
mov
stos
mov
clc
(bad)
jl
push
cmp
(bad)
test
mov
mov
jle
mov
loopne
and
fldcw
mov
aad
mov
add
mov
push
fsubr
clc
retf
adc
cmp
stc
xor
fimul
jle
(bad)
sti
(bad)
movs
inc
pusha
idiv
mov
retf
xor
enter
ret
scas
enter
mov
aas
(bad)
sbb
(bad)
in
dec
mov
out
clc
leave
mov
iret
push
adc
xor
rol
fs
xchg
dec
mov
retf
sub
jnp
das
mov
stc
pop
dec
test
pop
adc
movs
or
je
or
adc
cli
in
fs
xor
movs
jl
inc
outs
jnp
jg
arpl
jnp
test
std
daa
and
or
iret
jmp
and
cli
mov
gs
inc
sar
iret
(bad)
lahf
or
gs
jmp
inc
sbb
repz
outs
cmps
lahf
jg
scas
and
xor
hlt
xlat
xchg
iret
nop
aas
add
jge
jmp
imul
(bad)
pop
in
jg
jle
cmps
hlt
(bad)
aas
or
call
adc
nop
call
jle
loope
(bad)
fisttp
es
sbb
xchg
jg
pop
and
xchg
pop
pop
jne
xlat
nop
in
cwde
aaa
xchg
or
jle
lock
xchg
mov
dec
repnz
cwde
xchg
pop
inc
push
into
outs
iret
pop
nop
int3
into
mov
icebp
ja
adc
fwait
jg
dec
adc
cld
arpl
dec
sti
xlat
jmp
jbe
jmp
sbb
jg
pop
and
sub
pop
xor
fs
or
pop
mov
neg
retf
jmp
mov
popa
shl
test
ins
mov
pop
push
sbb
xchg
jmp
pop
jl
lahf
dec
lahf
cld
inc
mov
mov
cld
or
cmc
(bad)
enter
loop
cld
es
inc
mov
push
pop
cmc
cld
add
pop
dec
mov
add
dec
out
pop
dec
mov
add
(bad)
dec
loope
mov
or
in
inc
jo
pop
std
xchg
jg
pop
out
std
dec
jle
hlt
outs
shr
mov
cli
retf
lock
dec
std
adc
xlat
pushf
iret
cmp
xor
outs
adc
ret
jg
out
rol
push
mov
jmp
pop
std
movs
mov
mov
call
xor
xlat
adc
loope
ret
and
fdivrp
in
xor
repz
clc
jb
and
imul
test
jb
inc
mov
xor
fisttp
jmp
sub
xor
jg
or
jg
or
aas
push
jle
(bad)
jmp
xchg
inc
or
ins
or
idiv
lock
int3
mov
xchg
pop
jmp
xor
pop
neg
xchg
inc
lahf
jl
(bad)
ss
inc
in
mul
cld
daa
mov
pop
push
enter
loope
imul
jmp
mov
test
and
(bad)
mov
jl
push
fsub
stc
pop
jb
jo
sar
add
inc
mov
or
nop
ja
fiadd
cmp
mov
scas
and
pop
jmp
call
cld
int3
outs
mov
outs
shl
(bad)
pop
in
fnstcw
lea
loope
add
outs
imul
loop
das
jmp
pop
ret
add
es
cli
out
lock
push
cmp
pop
shr
into
out
add
bound
call
icebp
cmp
dec
in
jmp
add
add
je
and
in
out
or
ja
xor
std
in
and
(bad)
or
icebp
aaa
cld
in
sti
ins
test
jg
mov
mov
addr16
ins
(bad)
idiv
cli
ins
ds
ja
xchg
fbld
stc
popf
mov
xchg
push
mov
adc
loope
fwait
mov
push
cmps
add
adc
jg
fild
xchg
jl
cmp
pop
sub
add
rcr
scas
sti
imul
mov
into
or
(bad)
in
scas
and
(bad)
imul
dec
cld
test
pusha
mov
cld
xlat
adc
jg
ja
pop
inc
cmp
and
not
pop
sti
xor
rol
jmp
out
(bad)
inc
xlat
sti
jle
retf
xchg
outs
inc
je
xor
shl
(bad)
data16
cld
sbb
icebp
mov
xchg
mov
stos
sbb
add
stc
ja
mov
mov
inc
js
cmp
mov
sub
cld
aaa
mov
out
clc
leave
jg
fwait
cld
cmp
out
inc
sub
call
pop
jmp
fs
jle
jb
cld
neg
jg
mov
retf
popa
jb
ins
dec
into
sub
int3
push
xor
inc
push
(bad)
xor
cmp
mov
push
sti
xor
(bad)
fbld
dec
push
in
(bad)
(bad)
ss
xchg
pop
std
xchg
test
out
ja
and
into
mov
add
push
add
std
lea
std
mov
push
mov
pop
jmp
mov
xlat
xchg
mov
ja
scas
jg
dec
or
mul
stos
fistp
mul
mov
(bad)
sti
fucomip
xchg
inc
mov
out
(bad)
jmp
or
imul
stos
imul
gs
mov
xchg
dec
std
sbb
jmp
sti
cmp
lods
call
and
fild
addr16
hlt
imul
(bad)
cmps
mov
in
mov
sbb
mov
mov
xchg
loopne
inc
xchg
sub
xchg
out
mov
std
(bad)
aas
mov
sbb
sub
in
mov
ror
pop
out
aaa
stc
mov
icebp
cmp
repz
sbb
jg
xchg
inc
or
mov
sets
aas
daa
pop
repnz
enter
jg
jle
dec
lods
mov
and
lds
cmp
xchg
cmps
mov
sti
ret
add
lahf
std
imul
outs
sti
or
jno
rcl
shr
(bad)
adc
pushf
sbb
inc
cmp
dec
movs
(bad)
dec
cmps
add
pop
test
in
std
mov
rol
inc
jae
cmp
inc
(bad)
cld
mov
std
(bad)
jg
cmp
ja
adc
jb
dec
ds
(bad)
adc
outs
rcr
aaa
push
test
icebp
aaa
and
xor
pop
lods
cmc
(bad)
adc
push
jnp
mov
dec
lods
mov
jmp
mov
repz
and
jne
xchg
(bad)
cli
xor
pop
inc
loop
mov
cmp
stc
imul
push
(bad)
jmp
sbb
fisttp
out
mov
repz
push
nop
mov
(bad)
sti
in
aas
stc
fist
dec
dec
jmp
mov
or
cmc
mov
jle
fcomip
and
jge
pushf
repz
xchg
(bad)
mov
out
mov
inc
push
cld
mov
int
xor
idiv
or
movs
out
jle
call
jecxz
jne
(bad)
(bad)
xlat
aam
jg
push
add
stc
(bad)
idiv
lahf
(bad)
pop
(bad)
sbb
sbb
or
mov
pop
jp
(bad)
push
daa
jg
cmp
rcl
dec
mov
sbb
jg
fcomip
loopne
mov
cld
scas
mov
add
sti
sbb
cmps
dec
(bad)
rcr
leave
jg
cmp
or
fbstp
stc
popf
jg
adc
xlat
std
jne
(bad)
inc
cld
je
ret
outs
call
push
sbb
retf
out
in
xchg
push
cld
loop
iret
add
aas
cmps
xor
pop
pop
lock
pop
xchg
inc
ins
repz
xchg
jno
cdq
imul
sar
fucomip
clc
icebp
cld
xchg
mov
xchg
sti
pop
imul
fnstsw
rcl
movs
adc
lahf
cld
jge
rep
clc
leave
(bad)
cmp
aas
jge
neg
cld
in
and
push
hlt
jg
mov
pop
aam
push
cmp
movs
popf
adc
or
lods
jo
stc
mov
outs
mov
into
jecxz
into
inc
xchg
fild
jnp
inc
cli
sub
mov
push
mov
fcomip
aas
stc
xor
sbb
sub
pop
mov
adc
pop
dec
(bad)
(bad)
jmp
adc
sti
sub
cs
aaa
(bad)
fmul
mov
std
icebp
mov
lea
(bad)
in
cmp
and
mov
cld
pop
xor
push
mov
fsub
enter
icebp
jnp
out
mov
add
(bad)
ja
pop
mov
add
jmp
in
mov
addr16
jmp
inc
push
ds
call
in
clc
stc
mov
jg
(bad)
(bad)
das
popf
test
xor
dec
or
iret
mov
das
ret
std
in
inc
add
div
inc
inc
dec
loopne
cdq
mov
sub
call
(bad)
cmp
pop
jmp
int3
(bad)
retf
push
or
inc
out
popa
xor
pop
(bad)
xor
std
sbb
inc
hlt
mov
out
pop
cld
xor
cli
adc
cmp
push
cld
mov
ja
imul
push
fcomp
test
sti
fld
pop
clc
(bad)
fnstcw
stc
sbb
mov
mov
and
sub
test
loope
rcr
mov
mov
cld
mov
sti
mov
push
into
or
cwde
(bad)
movs
std
jg
push
cmc
rol
scas
jle
into
xchg
into
jmp
and
sar
jmp
and
inc
(bad)
push
jg
mov
(bad)
jmp
jg
leave
cmps
scas
call
lods
xor
fcomip
xchg
mov
jg
dec
dec
scas
mov
stc
xor
sbb
mov
cmps
(bad)
sub
into
outs
repnz
jg
fist
and
jl
out
cld
neg
outs
mov
adc
pop
pop
cmp
push
hlt
cmp
mov
jle
pop
cmc
outs
ret
stc
push
sub
lock
pop
scas
dec
pop
inc
outs
ds
lods
inc
mov
xchg
ret
sar
stc
mov
jo
mov
inc
(bad)
mov
jle
xchg
and
loopne
pop
ret
leave
fistp
aas
jg
aas
retf
mov
mov
inc
mov
add
xchg
in
pop
adc
aas
(bad)
ja
push
sti
cmp
mov
push
das
adc
pop
lods
in
sbb
ins
loop
ins
aas
cmps
jb
or
mov
enter
xor
and
and
cmp
jne
pop
cld
xor
aas
clc
xor
mov
out
rcpps
icebp
pusha
inc
dec
pop
inc
jl
jl
das
popf
mov
mov
frstor
cld
fwait
std
sbb
hlt
fist
stc
(bad)
cmp
in
aam
ret
push
adc
jmp
stc
rcr
lahf
fcomip
loopne
call
aaa
jns
jg
aas
sub
jns
mov
(bad)
cs
push
cli
hlt
ja
icebp
(bad)
ficom
mov
icebp
(bad)
shl
std
jno
fcom
inc
(bad)
sbb
jmp
cli
in
inc
out
pop
pusha
mov
pusha
mov
shl
out
mov
jl
and
pop
dec
push
sti
stos
jle
jbe
imul
icebp
cmp
xor
mov
(bad)
(bad)
pop
dec
shl
aas
xchg
and
ret
int3
fistp
push
jmp
xchg
inc
jno
scas
stos
and
(bad)
std
jmp
jno
pop
stc
push
call
and
xchg
adc
and
and
sar
shr
lds
sbb
mov
mov
push
xlat
pop
das
adc
fisttp
outs
push
adc
ret
stc
in
adc
aas
fcom
(bad)
jb
(bad)
std
or
popf
jp
mov
lock
lock
dec
retf
xchg
loopne
xor
pushf
mov
pushf
and
in
enter
mov
pop
sub
cwde
stos
aas
pop
(bad)
or
xor
hlt
(bad)
jg
xlat
adc
mov
hlt
pushf
and
cmps
ficom
pushf
rol
(bad)
xor
or
stos
ret
fild
test
pop
sti
in
and
clc
out
or
fisttp
add
dec
(bad)
div
adc
bound
or
out
and
outs
ret
mov
xchg
fucomip
ja
rcl
cli
imul
sub
aas
sbb
ror
dec
std
sbb
adc
sbb
pop
pop
stc
push
movs
cmp
fdivrp
xchg
mov
jg
cld
inc
in
sub
mov
out
les
mov
es
add
or
add
loopne
das
test
mov
mov
jecxz
and
push
aas
push
mov
out
sub
cld
xlat
popf
jno
(bad)
mov
pop
fidivr
xor
gs
cmp
xchg
clc
or
jle
(bad)
in
jmp
xor
add
xor
out
cld
imul
jle
(bad)
std
add
stc
das
rol
repnz
xchg
xor
outs
clc
leave
jg
or
mov
enter
nop
jo
jle
xor
push
clc
sbb
pushf
(bad)
popf
inc
fucomp
or
div
enter
and
lds
jg
fild
in
sbb
sbb
push
cmps
shl
mov
call
scas
and
loopne
sti
xor
movs
push
push
pextrw
cs
and
xchg
clc
mov
lea
stc
sub
(bad)
call
and
push
retf
movs
dec
call
sbb
jmp
(bad)
xor
cli
test
sub
movs
arpl
repnz
jmp
rcr
out
cli
(bad)
mov
xor
jg
(bad)
xchg
mov
xchg
lods
repnz
outs
neg
jg
out
jmp
mov
pmullw
sahf
aas
pop
dec
cdq
clc
dec
cmc
xor
sub
add
mov
movs
or
jnp
fwait
inc
jge
lods
mov
push
mov
test
(bad)
outs
jle
into
pop
or
(bad)
retf
movs
lahf
or
(bad)
jmp
arpl
loop
fs
push
in
std
cmp
push
jmp
fsub
fild
imul
shld
dec
je
clc
aas
in
ret
lahf
cld
imul
lock
push
mov
(bad)
cli
xor
jo
(bad)
mov
cld
sbb
jge
lock
jecxz
das
jecxz
addr16
xchg
or
jg
or
stc
das
jle
push
or
ja
jle
pop
imul
cmp
popf
and
jle
or
cmp
cld
in
mov
sub
and
pop
xchg
add
out
xlat
nop
in
daa
jle
repz
inc
cmp
repnz
ins
push
xchg
jmp
stc
popf
cdq
loope
daa
sahf
into
fucomip
xchg
jmp
ja
jno
nop
add
stc
inc
mov
jg
cmp
xor
push
ror
lock
(bad)
mov
pop
xor
rcr
dec
js
(bad)
call
push
sbb
stc
cmp
mov
les
sub
lock
std
pop
xchg
xchg
scas
jle
push
dec
bound
sub
call
das
pusha
cmp
pop
clc
sbb
rol
jl
inc
aas
call
mov
vshufps
sbb
(bad)
jmp
stc
fistp
mov
mov
aaa
cld
dec
in
and
outs
fwait
rcl
dec
jmp
adc
inc
in
add
mov
or
pop
outs
sub
ret
xor
and
push
push
int3
sub
sbb
pop
repz
sbb
cli
neg
movs
jecxz
mov
pop
jp
xor
clc
jnp
(bad)
sbb
and
inc
sahf
aas
(bad)
pop
lock
push
inc
and
aas
std
jbe
cld
idiv
das
clc
in
movs
test
enter
mov
clc
sbb
mov
icebp
ss
fld
fstp
mov
inc
xor
out
outs
mov
xor
mov
mov
dec
pop
ret
stc
enter
adc
add
sub
jg
sub
pusha
setae
adc
push
bound
push
std
dec
call
inc
into
aaa
push
nop
std
cmp
cmp
dec
push
push
(bad)
push
jle
es
ja
mov
(bad)
(bad)
fnsetpm(287
xchg
jle
clc
(bad)
jmp
cdq
in
sbb
cmp
out
fbld
adc
mov
rcr
inc
xor
or
ds
jle
mov
pop
and
cmc
(bad)
cld
push
mov
shl
xor
cmc
(bad)
call
dec
mov
jge
out
ins
sub
dec
das
(bad)
out
in
mov
stc
or
jmp
scas
loope
scas
xchg
sbb
(bad)
cwde
(bad)
mov
(bad)
push
cwde
mov
das
xor
hlt
cmp
lahf
cld
in
and
mov
or
cli
pop
adc
jle
daa
jg
scas
and
call
ss
mov
cli
cmp
pop
jg
call
in
pop
(bad)
push
data16
mov
sbb
pop
sti
cld
sbb
(bad)
call
out
outs
push
and
popa
dec
push
mov
aas
imul
aas
mov
inc
jmp
std
stc
jmp
out
js
movs
fild
fisttp
jg
rol
dec
cmps
ficomp
std
(bad)
out
xchg
idiv
jg
cmps
xchg
(bad)
call
test
inc
sar
not
mov
pop
jnp
ja
repnz
xor
dec
pop
mov
scas
mov
push
dec
call
ja
loop
xchg
movs
out
jle
ret
sbb
and
test
std
jp
inc
movs
std
(bad)
jbe
out
out
movs
(bad)
push
mov
cmc
jg
pop
das
sti
pop
jle
int3
jmp
or
leave
scas
repz
cld
mov
fwait
dec
xor
mov
je
xchg
in
rcl
lock
jg
cld
dec
fbstp
je
ins
fisttp
jmp
stos
sub
lock
loope
ret
mov
(bad)
lock
rcl
jg
out
jg
xlat
stos
out
fmul
fild
loopne
xchg
(bad)
fidivr
outs
(bad)
cmc
sub
mov
out
call
shl
jne
addr16
push
cmps
(bad)
fistp
data16
clc
std
xlat
sar
pop
pusha
cli
pusha
push
cli
dec
ror
fbld
dec
stc
mov
inc
push
lahf
push
jg
mov
arpl
or
sti
cdq
push
dec
lock
dec
fdivr
not
jnp
xor
inc
popa
fs
fldenv
adc
fcmovnu
push
in
retf
daa
pop
fdivp
in
iret
mov
inc
stc
les
xchg
fisttp
stc
cmp
lahf
mov
(bad)
out
pusha
clc
in
out
hlt
loope
ret
out
call
call
push
sbb
or
mov
loop
push
sbb
xchg
icebp
cmp
cwde
lahf
clc
out
pop
call
pop
mov
(bad)
cmp
cwde
mov
jecxz
jl
pop
jmp
ret
pop
push
in
cmp
ins
repz
inc
add
fiadd
rcr
push
adc
push
enter
mov
mov
add
fistp
aam
in
dec
mov
xor
jmp
repz
add
js
cli
clc
in
movs
(bad)
sub
push
dec
inc
cld
push
(bad)
jg
jmp
data16
xor
xchg
outs
dec
sub
mov
dec
iret
mov
rcr
mov
(bad)
xor
push
xor
or
lods
sti
call
push
jle
ror
xrelease
pop
inc
jg
pop
jecxz
(bad)
mov
(bad)
mov
pop
(bad)
pop
mov
add
rcl
hlt
cmp
not
jge
fiadd
shl
mov
jge
ss
jge
jno
mov
sahf
das
jge
rol
aas
cmp
hlt
sub
fsubrp
mov
(bad)
xchg
(bad)
(bad)
das
sub
jge
mov
imul
mov
repz
stos
push
pop
or
sti
push
mov
sub
(bad)
push
aad
scas
pop
std
jp
repz
rcr
jmp
repnz
jmp
stos
cld
stc
rol
jle
iret
ss
(bad)
loope
ret
pop
jle
cmp
sub
iret
jle
ret
addr16
push
lahf
std
mov
mov
lea
and
jecxz
stc
sbb
aaa
push
jg
push
sub
(bad)
call
mov
jg
std
(bad)
xor
jae
(bad)
fbld
jmp
jg
or
cmps
ror
dec
repz
cld
in
cmps
sar
jmp
(bad)
jmp
jns
mov
hlt
(bad)
jg
test
repz
std
call
outs
repz
(bad)
cmp
mov
loopne
jbe
(bad)
jle
mov
cld
pop
(bad)
sbb
xchg
add
or
xor
idiv
or
and
lahf
(bad)
fistp
sti
pop
jg
fist
lock
stc
in
movs
clc
out
cld
pop
jle
dec
clc
es
lock
in
aas
stc
ja
mov
icebp
scas
push
mov
mov
out
repnz
jge
dec
rcl
(bad)
fsubr
hlt
sbb
push
or
cmps
sbb
xlat
out
pop
mov
xor
addr16
(bad)
out
repnz
sub
fcomip
xchg
(bad)
stc
ja
aad
(bad)
mov
test
outs
int3
mov
cmp
sar
xchg
std
ss
cld
dec
mov
das
clc
in
stc
ins
or
lea
stc
psrlq
dec
lock
(bad)
pop
mov
mov
std
mov
xchg
ret
mov
jne
add
cld
dec
add
test
cmp
jle
hlt
addr16
mov
hlt
fcmovne
inc
(bad)
(bad)
or
sbb
push
jmp
out
jp
jae
(bad)
pop
icebp
repz
(bad)
jmp
cli
dec
mov
lock
idiv
call
imul
dec
out
mov
(bad)
(bad)
sbb
jg
hlt
jecxz
adc
jg
hlt
iret
and
loop
call
mov
aas
inc
mov
mov
jmp
out
mov
neg
jg
lds
dec
pop
clc
xlat
cld
or
stc
jne
xchg
fistp
std
jmp
cmps
std
cmp
cli
popf
jg
pop
div
push
push
jnp
imul
cld
or
inc
scas
and
jle
dec
mov
dec
dec
sub
call
cld
sbb
retf
call
mov
jecxz
mov
jg
popf
js
xchg
push
cmp
mov
mov
pop
stc
sub
xlat
push
(bad)
add
inc
dec
leave
aas
dec
jb
cmps
sar
call
std
lahf
sti
imul
mov
(bad)
call
shl
cmc
scas
sub
add
cmp
jmp
fwait
icebp
imul
hlt
fst
hlt
sti
mov
imul
idiv
aam
aaa
mov
pop
jns
mov
hlt
(bad)
call
call
(bad)
jg
(bad)
(bad)
jnp
mov
cmps
lahf
push
(bad)
pop
inc
mov
pop
dec
mov
loopne
lahf
(bad)
(bad)
in
pop
dec
loop
jg
mov
mov
hlt
(bad)
aas
sbb
inc
hlt
repz
movs
(bad)
dec
fcmovnb
in
xchg
mov
out
repnz
das
mov
daa
cmps
mov
fld
imul
cmp
mov
mov
and
jmp
into
scas
and
mov
setne
push
mov
hlt
jg
out
push
mov
mov
imul
jle
shl
mov
and
pop
jge
out
(bad)
cs
out
repnz
cld
stos
mov
inc
sar
or
jg
dec
(bad)
mov
in
stc
in
cli
pop
jle
dec
jno
jl
ja
fistp
fcomip
mov
dec
mov
std
in
and
sti
mov
outs
jge
out
cs
out
repnz
jmp
xor
pop
inc
aam
out
or
stc
xor
jecxz
mov
mov
cmps
sub
push
sub
idiv
loope
inc
or
ja
cmp
sbb
jl
movs
lahf
adc
sub
fwait
xchg
ins
mov
fbld
cwde
fucomip
xchg
jg
hlt
int
clc
mov
std
pop
jle
daa
jmp
call
xchg
aas
sbb
hlt
leave
push
or
jmp
jmp
jmp
aas
stc
ja
add
push
test
repz
ror
(bad)
cdq
fild
(bad)
push
cmp
xor
dec
mov
addr16
aaa
jle
(bad)
aaa
mov
jle
xlat
sti
push
jg
call
mov
inc
jg
push
or
scas
jmp
cld
out
mov
or
jg
aas
push
jle
ins
hlt
pop
jecxz
dec
push
adc
inc
push
sti
aas
cld
out
into
mov
in
xlat
sti
ins
jg
aas
cmc
aaa
cli
mov
out
mov
mov
aaa
fwait
cld
push
mov
ins
shl
jg
pop
cli
dec
mov
pop
mov
jle
out
in
aas
cmp
std
xchg
mov
clc
sub
xlat
sti
adc
cmc
jle
fistp
stc
pop
out
push
mov
cli
xadd
mov
cli
xchg
inc
xchg
sbb
cs
rcr
mov
cli
sti
aaa
push
repz
(bad)
jle
(bad)
aaa
clc
mov
(bad)
std
cmc
jg
(bad)
xlat
(bad)
(bad)
lahf
call
sbb
cld
cmps
inc
mov
(bad)
(bad)
jnp
jg
aad
mov
out
std
xchg
mov
mov
loopne
clc
mov
sti
pop
jbe
(bad)
pop
lea
cli
cmp
xlat
jg
scas
xchg
out
lea
cmc
jg
int
fucom
mul
mov
pop
(bad)
cmp
(bad)
xlat
stc
dec
mov
push
loop
push
mov
stc
rcr
sub
and
mov
clc
xor
(bad)
dec
hlt
sti
out
cmc
imul
loop
mov
jmp
mov
mov
push
std
push
(bad)
(bad)
jns
call
call
dec
inc
repz
ror
outs
sar
(bad)
nop
(bad)
dec
(bad)
jg
std
push
hlt
jg
xlat
cmp
hlt
repz
push
cmp
push
push
mov
dec
pop
lds
out
mov
jmp
cmp
popf
add
aaa
daa
jmp
hlt
xchg
push
mov
in
and
dec
cmp
addr16
xor
sbb
sbb
(bad)
push
retf
inc
aam
and
(bad)
div
add
dec
add
fcomi
outs
xor
outs
inc
clc
cmps
loope
stc
dec
jg
cmp
call
inc
push
ret
sub
aaa
and
(bad)
ss
mov
lock
dec
jle
out
or
daa
add
(bad)
leave
mov
stc
outs
inc
clc
inc
test
leave
mov
outs
or
and
(bad)
inc
pop
punpcklwd
mov
pop
dec
je
dec
neg
cld
inc
pop
mov
and
data16
mov
ds
gs
out
nop
enter
movs
xchg
leave
hlt
cmp
daa
inc
dec
clc
pop
inc
xor
sub
stos
mov
(bad)
stos
pop
ret
cld
gs
std
cmp
jg
scas
popa
clc
jmp
mov
(bad)
fisttp
(bad)
fidivr
fs
and
adc
push
call
lods
lock
jg
std
pop
stos
(bad)
mov
test
std
retf
jmp
hlt
fwait
sar
dec
ins
call
maxps
xchg
ret
pop
sahf
leave
fcomip
aaa
cmp
fstp
leave
retf
pusha
or
add
push
xor
mov
cld
xor
in
fdivr
xor
sbb
fistp
call
mov
outs
jg
call
jge
outs
dec
lahf
cld
imul
inc
or
pop
adc
adc
jmp
call
clc
popf
icebp
retf
aas
imul
neg
inc
jg
mov
scas
and
std
gs
call
jg
or
pop
adc
cld
cmps
mov
dec
or
cld
fwait
mov
in
outs
sti
leave
scas
and
and
clc
pop
jle
dec
(bad)
fcmovnu
stc
xchg
(bad)
jmp
aas
stc
dec
jle
dec
inc
fcomip
xchg
jg
xor
sbb
std
jnp
pop
mov
lock
in
pop
push
dec
mov
mov
scas
and
iret
les
cmp
jmp
adc
ins
scas
add
pop
(bad)
lahf
mov
std
pop
call
les
jbe
outs
adc
hlt
jg
xor
fild
sbb
fld
jle
lock
test
pop
sar
lahf
sar
jg
(bad)
inc
std
les
push
imul
(bad)
call
hlt
pop
sar
call
icebp
imul
call
cmp
cmc
(bad)
call
mov
lods
jns
jle
pop
ret
clc
loopne
xor
inc
inc
call
imul
mov
stos
movs
push
sub
add
lahf
mov
sar
pop
jge
lahf
adc
out
dec
movs
popf
jle
mov
mov
hlt
leave
aas
and
cld
idiv
inc
(bad)
cmp
jmp
repz
lock
add
ss
leave
out
push
inc
lahf
cld
scas
mov
adc
pop
adc
call
icebp
call
jmp
pop
(bad)
out
mov
jcxz
jl
lahf
(bad)
ss
aaa
and
popa
pop
jle
test
push
stos
cli
stc
popf
frstor
jb
repnz
push
ins
mov
sbb
and
stc
mov
mov
pop
fwait
mov
inc
sar
pop
aas
and
pop
les
xor
stc
push
dec
adc
dec
(bad)
stc
std
xor
inc
cmps
cld
int
xchg
(bad)
(bad)
imul
(bad)
in
pop
inc
faddp
add
jge
inc
aas
dec
rcl
hlt
(bad)
mov
add
imul
pop
xor
cmps
stos
pop
jle
pop
mov
jle
mov
or
cli
(bad)
std
pop
inc
jb
adc
xchg
(bad)
cli
sbb
lods
std
push
mov
inc
push
dec
fadd
cmp
xor
call
out
clc
leave
mov
cmps
mov
out
mov
pop
cmps
lahf
push
xchg
das
shr
jle
ins
stos
scas
popa
jle
nop
loopne
loopne
cld
mov
sub
cmp
xlat
dec
out
mov
xchg
xor
aas
inc
sbb
(bad)
test
pusha
das
(bad)
das
pop
sar
in
stc
ins
fdivr
jle
cbw
fcomip
xchg
jg
shl
add
pop
dec
pop
xchg
movs
add
lea
mov
or
popa
sar
dec
in
shl
aaa
adc
std
in
std
daa
push
das
dec
in
call
xchg
jl
cli
in
dec
mov
pusha
mov
mov
das
ret
xchg
std
enter
call
(bad)
call
fadd
imul
mov
mov
cli
add
or
hlt
sti
lahf
dec
aas
jg
cli
dec
pop
jmp
inc
test
sub
sti
imul
sbb
adc
lahf
mov
or
out
push
shl
rcl
nop
stos
cmp
sub
es
xchg
out
cld
sbb
sub
jl
seto
add
neg
add
push
movs
stc
ja
and
ss
cld
jnp
frstor
push
int
mov
es
sub
cmp
or
call
xor
pop
es
arpl
and
iret
out
inc
jl
sbb
fbld
aaa
mov
mov
outs
sti
leave
mov
lahf
(bad)
sbb
push
adc
std
daa
jmp
outs
iret
pop
out
sti
in
and
and
cli
syscall
sets
out
pushf
xor
dec
push
rcr
inc
(bad)
cmp
stos
pop
stc
cmp
dec
xor
xor
ja
sub
jmp
cmp
or
(bad)
jg
aam
sbb
test
fiadd
rcr
xchg
lahf
mov
(bad)
pop
inc
(bad)
aas
stc
xor
jg
mov
jg
std
cld
or
sahf
stc
(bad)
scas
sub
jbe
push
call
xchg
ffreep
cmp
scas
jmp
js
jmp
scas
dec
(bad)
call
xor
mov
sbb
arpl
dec
pop
pushf
icebp
scas
and
xor
(bad)
dec
push
cld
ja
sub
into
outs
sti
leave
jg
cmp
(bad)
ds
aaa
jle
or
jg
or
jg
dec
(bad)
pop
inc
cmp
loopne
(bad)
fld
sub
scas
xor
cmp
fwait
pop
sti
lea
(bad)
jle
ret
lods
lock
adc
(bad)
out
cmp
das
and
cld
lea
stc
idiv
xchg
cmps
mov
jl
aas
cld
into
lahf
cld
mov
jecxz
call
das
and
jle
lods
loope
xchg
cli
pusha
dec
jle
in
adc
repz
sub
add
js
fadd
sar
mov
fist
sti
in
pop
and
ins
jae
dec
outs
scas
jg
add
xor
lods
popa
jbe
btr
xchg
fbld
push
cmc
imul
sbb
sub
retf
inc
pop
cli
call
cmp
sti
pop
stc
imul
adc
inc
inc
daa
cld
mov
dec
scas
and
jecxz
mov
and
sti
scas
and
out
sub
cmp
data16
in
test
jle
(bad)
aaa
cmp
retf
sti
inc
and
or
or
sbb
jge
mov
and
stc
ins
dec
dec
jg
leave
pop
dec
cld
inc
mov
int
mov
lock
stc
pop
jle
loop
inc
jecxz
stc
or
mov
add
sbb
(bad)
xor
mov
sub
mov
outs
dec
popa
fldcw
leave
jg
fcmovnbe
push
dec
xor
leave
daa
(bad)
(bad)
outs
or
daa
mov
jg
sbb
xor
fnstsw
jecxz
or
mov
out
(bad)
(bad)
jecxz
xor
pop
add
outs
icebp
leave
(bad)
cli
cmp
mov
test
push
cmp
mov
rol
jnp
xchg
hlt
aad
or
fsubr
xlat
std
mov
pop
xor
mov
out
std
xor
lahf
jg
scas
and
add
add
jbe
cli
pop
sahf
or
shr
imul
dec
rol
xchg
sar
call
jp
ss
sub
mov
pop
mov
dec
in
(bad)
mov
push
xchg
add
aad
jmp
leave
das
sti
in
sub
cld
in
xchg
cli
popf
ds
dec
jle
lea
jle
dec
xor
cmps
movs
pop
jle
loop
inc
loop
std
or
(bad)
das
add
hlt
retf
jg
mov
icebp
mov
int3
jg
call
(bad)
out
daa
dec
cmp
es
out
inc
popf
(bad)
sbb
add
jecxz
adc
adc
or
and
(bad)
xchg
call
dec
jmp
hlt
leave
jg
fist
mov
jae
mov
(bad)
xor
adc
cmp
lock
jns
ds
das
sti
in
adc
push
sub
cli
hlt
ja
mov
dec
xor
dec
jmp
mov
ss
jmp
ss
sahf
loope
out
rcl
ffree
sbb
jle
gs
shld
xor
shl
fcom
(bad)
jg
cli
jmp
mov
(bad)
cli
call
mov
enter
clc
cmps
scas
rcl
sbb
jmp
test
dec
out
fistp
(bad)
sbb
movs
inc
leave
mov
lock
dec
mov
fwait
nop
fwait
lds
outs
inc
repz
sub
mov
adc
and
mov
jno
das
and
hlt
mov
icebp
gs
icebp
pop
jle
inc
push
aam
outs
inc
call
nop
data16
ins
leave
xor
int
pop
jg
dec
(bad)
fstp
mov
mov
lock
jmp
ja
std
inc
into
int
inc
stos
in
and
add
pop
mov
stc
std
xchg
cmp
les
xor
int
mov
stc
or
pop
inc
sub
hlt
xlat
dec
jmp
popf
push
and
mov
cld
mov
loope
aas
jmp
sub
mov
sbb
leave
in
sub
loopne
jle
(bad)
cld
sbb
aas
and
repnz
adc
add
(bad)
(bad)
popa
xor
and
call
imul
pop
add
add
repz
std
or
or
les
call
mov
test
mov
push
jle
or
(bad)
fcmovnu
jmp
and
pop
push
jge
mov
push
mov
outs
inc
cdq
cmc
pop
sti
in
adc
(bad)
fist
fsubp
jmp
push
inc
mov
or
sub
sub
in
mov
dec
sub
push
xor
nop
clc
icebp
(bad)
add
mov
adc
(bad)
std
outs
dec
lods
jle
(bad)
(bad)
call
std
dec
adc
or
ret
fistp
stc
in
clc
movs
fist
loop
or
addr16
hlt
dec
jle
outs
iret
dec
pusha
aaa
jle
mov
clc
mov
sbb
xchg
(bad)
jecxz
pop
or
in
cmp
jmp
pop
(bad)
xlat
inc
jmp
imul
jge
add
cs
sbb
xchg
sar
xchg
aas
jle
out
js
inc
out
adc
fistp
pop
push
bnd
inc
call
std
call
mov
cwde
call
das
std
adc
les
inc
jl
out
jle
cmc
daa
dec
pop
nop
mov
mov
outs
ret
inc
pusha
xor
rcr
dec
push
inc
jg
dec
(bad)
sub
test
or
xchg
jmp
push
lea
cmp
dec
mov
jg
cs
(bad)
ds
outs
dec
imul
daa
mov
(bad)
outs
sub
cmp
add
std
out
cmps
pop
loope
ss
icebp
daa
jle
out
fist
(bad)
les
lods
sub
test
mov
in
jg
(bad)
shr
repnz
jmp
adc
and
call
cmps
cli
cwde
dec
scas
sub
leave
iret
dec
jb
mov
or
movs
repz
xor
(bad)
das
mov
xor
cld
xchg
mov
mov
jl
mov
add
ror
add
inc
pop
cld
test
movs
pop
retf
lea
stc
ret
xor
clc
jae
stos
popa
cld
cmp
lods
pop
and
pop
xor
in
ror
vcvtdq2ps
stc
(bad)
jle
and
outs
cli
leave
mov
cmc
pop
push
outs
jmp
movs
(bad)
outs
inc
inc
cmps
mov
jmp
pmuludq
call
add
and
jmp
mov
sar
fisttp
in
mov
jmp
addr16
aaa
sti
in
mov
fist
(bad)
popf
or
enter
add
scas
je
jg
jae
sub
ret
repz
repz
jle
jge
add
lds
pop
sub
mov
add
repnz
idiv
pop
icebp
dec
(bad)
pop
int3
sar
out
into
sub
lahf
(bad)
xor
lahf
mov
and
pop
std
sbb
jp
and
(bad)
dec
sbb
sbb
(bad)
cli
imul
call
(bad)
jg
std
(bad)
out
sti
xor
cld
xor
jmp
dec
rcr
imul
and
mov
scas
std
cmp
mov
xchg
test
dec
and
push
nop
adc
leave
jg
fstp
push
inc
inc
sbb
pusha
cld
jg
push
jg
scas
fucomip
xlat
call
aad
scas
das
dec
add
(bad)
cmp
jns
pxor
xor
and
or
stc
lahf
jle
dec
(bad)
sti
pop
inc
sub
(bad)
cmp
and
scas
mov
mov
call
pop
jns
scas
sbb
into
imul
(bad)
cli
jecxz
popa
repnz
int3
xchg
push
adc
cmc
pop
inc
push
imul
jmp
inc
add
push
cli
(bad)
out
dec
(bad)
dec
jle
push
movs
jmp
scas
and
outs
std
sbb
cld
popf
mov
and
(bad)
fcomip
imul
(bad)
fisttp
(bad)
fcomi
jnp
pop
in
dec
(bad)
mov
mov
mov
jle
pop
(bad)
cwde
pop
push
add
fucomip
xlat
or
sub
in
outs
stc
jmp
push
out
les
(bad)
fwait
jge
(bad)
dec
lahf
cld
xlat
mov
fdiv
adc
out
lock
cli
dec
jl
fst
sbb
pushf
jmp
data16
jg
add
push
sahf
mov
ja
jg
shl
stc
ins
cmp
call
jle
hlt
paddd
std
mov
sti
xor
aas
call
adc
xchg
inc
popf
std
stos
pop
inc
es
xor
repnz
jg
scas
and
pop
test
pop
mov
xchg
inc
xor
pop
lock
dec
into
push
ret
(bad)
repz
std
inc
sbb
push
into
(bad)
aaa
bnd
mov
mov
aas
cli
xor
inc
sahf
fld
mov
xchg
sub
sub
inc
xor
mov
leave
mov
iret
std
dec
lahf
cld
rol
xchg
mov
and
jg
mov
std
xchg
jge
scas
xchg
out
pop
cld
sbb
loope
ins
pop
leave
cld
in
dec
scas
std
(bad)
movs
xlat
jle
xor
mov
and
dec
scas
clc
ins
jns
icebp
pop
dec
mov
nop
stc
(bad)
(bad)
fistp
stc
sbb
fbld
enter
cli
dec
test
xor
loop
loop
(bad)
repnz
cmp
clc
gs
dec
mov
cld
xchg
adc
mov
cld
sbb
shr
inc
(bad)
xor
(bad)
stc
mov
shl
or
pop
ds
imul
std
cld
mov
inc
jmp
or
xor
or
push
mov
jnp
jg
xchg
(bad)
pusha
out
fild
pushf
(bad)
mov
push
add
jecxz
mov
add
cmp
inc
in
cld
push
and
mov
std
pop
adc
mov
push
mov
xchg
test
iret
adc
cld
xchg
or
test
mov
shr
stc
out
test
lock
jg
xchg
sahf
push
fistp
out
les
rcr
xor
xor
aas
inc
out
xchg
std
mov
sub
stos
push
div
dec
mov
stos
inc
mov
mov
fadd
add
dec
mov
loop
xor
popf
(bad)
retf
sbb
push
test
jge
ja
imul
pop
and
out
sti
pop
jle
(bad)
mov
cmp
out
cmps
out
ins
dec
in
loop
cli
xor
inc
(bad)
adc
pop
(bad)
imul
in
mov
retf
js
repz
(bad)
sbb
jge
jo
outs
jle
loope
call
jge
(bad)
(bad)
mov
ud0
push
sahf
clc
popf
mov
and
lea
dec
push
call
loop
dec
push
adc
ja
in
mov
(bad)
jg
mov
movs
sbb
push
or
adc
popa
xor
inc
outs
into
outs
sub
mov
scas
cmp
outs
mov
fist
push
jno
jg
fist
push
jno
out
mov
fdivr
fsub
call
outs
dec
fdivr
inc
test
outs
dec
cli
jecxz
enter
jle
in
in
push
popa
test
cs
pop
daa
cld
mov
clc
fsub
idiv
mov
int
outs
mov
mov
fistp
adc
mov
pop
jp
shr
clc
loop
inc
xchg
arpl
inc
pop
add
add
push
jmp
loopne
lods
out
stos
pop
inc
(bad)
outs
mov
call
mov
jg
scas
and
and
(bad)
imul
int3
out
stc
imul
imul
ret
out
mov
ss
push
dec
jg
jle
or
rcr
mov
scas
xchg
push
jmp
fistp
fdivp
outs
clc
leave
jg
cmp
pop
dec
dec
pop
cld
dec
call
jbe
cmp
push
cmps
cmp
in
outs
mov
add
lods
cld
fld
stos
jle
into
cwde
adc
std
cmps
mov
call
add
fcom
xor
in
sbb
jle
lods
enter
sub
mov
mov
lahf
test
stos
jns
je
outs
daa
mov
repz
(bad)
clc
mov
lock
(bad)
cs
adc
in
push
jge
ins
enter
pop
pop
inc
xchg
jmp
pop
inc
clc
add
adc
(bad)
cmc
scas
sub
loopne
call
inc
loopne
pop
test
das
(bad)
sbb
xor
pop
lock
out
mov
sub
(bad)
das
std
popa
adc
dec
pop
in
mov
pop
mov
cli
add
rcl
pop
ds
cld
push
mov
mov
fisttp
mov
xchg
loopne
mov
xchg
jg
pop
adc
(bad)
stos
das
jle
loop
inc
add
(bad)
je
out
aaa
in
sti
stc
push
fist
mov
adc
pop
inc
push
and
dec
adc
mov
xor
xor
mov
pop
push
push
adc
sub
cld
test
iret
lods
jae
mov
mov
jb
pop
xchg
sti
in
mov
rol
cwde
pop
(bad)
pop
nop
in
pop
mov
sub
scas
mov
push
xor
ss
aaa
cmp
inc
std
sbb
mov
(bad)
adc
out
outs
mov
fcomip
paddd
invlpg
in
rol
add
inc
add
pop
mov
shr
lahf
cmp
dec
clc
mov
cld
dec
xchg
push
inc
jle
adc
icebp
daa
add
push
sub
scas
leave
nop
sbb
jmp
sbb
gs
push
js
aad
or
fnstsw
dec
cmp
lea
stc
pop
jle
jno
mov
jmp
clc
mov
outs
repnz
in
adc
add
pop
jg
cmc
imul
dec
(bad)
mov
jg
aad
push
add
jle
imul
pop
(bad)
fist
pop
icebp
retf
movs
push
sahf
xor
cld
retf
fwait
cmp
aas
jle
sub
and
aad
arpl
std
out
and
sub
jg
jle
xor
pop
xchg
cld
sbb
arpl
add
xor
jae
jl
cmp
cdq
sbb
rcr
aaa
jle
std
or
aaa
adc
sbb
lock
mov
cld
cwde
clc
sbb
dec
xchg
sbb
xchg
xor
inc
movs
push
xchg
(bad)
fstp
(bad)
into
and
sti
dec
sub
scas
std
ss
cld
retf
mov
arpl
xor
inc
mov
loopne
fbld
xchg
sbb
add
(bad)
test
imul
sbb
fisttp
repz
add
xchg
dec
std
std
mov
jge
adc
cwde
push
movs
inc
xchg
fistp
icebp
mov
(bad)
in
jg
pop
sti
dec
jle
in
ja
xor
fisttp
pop
mov
xor
bound
scas
std
jmp
mov
fwait
cld
mov
fwait
cld
cli
jmp
out
es
cld
out
or
cld
cwde
pop
retf
jae
add
icebp
inc
std
call
cmps
jmp
ret
jg
std
jl
sub
or
sub
mov
cmps
or
inc
mov
or
dec
(bad)
std
dec
jg
out
mov
sbb
mov
imul
sbb
mov
ds
add
mov
out
sub
fwait
xchg
cli
(bad)
lods
dec
(bad)
call
jecxz
cmp
std
lea
div
sti
in
(bad)
ins
mov
imul
inc
jecxz
cld
xchg
pause
das
sbb
sbb
inc
leave
cmp
pop
loopne
cld
xchg
(bad)
out
sahf
mov
add
loope
cld
into
lods
inc
jle
pop
fld
ret
icebp
cmp
xchg
call
dec
jle
in
ja
lods
inc
aas
hlt
daa
inc
jne
xor
into
mov
add
cmp
add
shl
mov
sar
out
add
jg
(bad)
pusha
icebp
inc
mov
mov
(bad)
push
xlat
in
in
xor
xor
test
xor
push
repz
push
jmp
stc
xor
mov
in
mov
mov
mov
xchg
sub
or
enter
adc
std
cld
xchg
(bad)
sub
mov
add
mov
ds
mov
push
fiadd
(bad)
fcomip
xlat
or
cli
ja
or
xor
jae
stc
mov
sahf
or
outs
mov
or
fistp
in
(bad)
in
ds
push
jle
or
or
pushf
(bad)
sti
jmp
xor
mov
stc
scas
ror
inc
outs
and
pop
into
out
rcr
cld
out
aaa
fs
loop
in
jecxz
call
sub
and
fild
push
jecxz
sbb
fidivr
js
inc
mov
jle
sub
or
mov
shl
out
inc
rol
pop
mov
fdiv
sbb
dec
cmp
sti
dec
jmp
loope
pop
out
clc
xchg
jge
sar
mov
fsubp
xchg
leave
scas
mov
dec
(bad)
jmp
inc
cmps
pop
mov
jbe
mul
daa
jg
cdq
addr16
js
(bad)
and
rol
repnz
pop
lods
mul
xchg
aas
hlt
mov
push
repnz
sub
icebp
sub
push
push
shl
call
mov
cld
mov
xchg
mov
pushf
cld
mov
xchg
cld
mov
adc
clc
in
js
adc
or
mov
sub
shr
sbb
mov
std
(bad)
lahf
cld
inc
mov
ja
mov
add
and
icebp
cmp
pop
cld
adc
jg
test
fistp
scas
sti
jmp
mov
xor
jno
lods
sar
ret
jle
scas
pusha
(bad)
out
stc
in
xor
inc
lods
psrld
jp
outs
sbb
inc
inc
bswap
mov
or
out
repz
(bad)
call
loop
inc
xchg
and
lock
jle
jns
xchg
xor
outs
rcl
jb
sti
ja
stc
pop
mov
xor
push
xchg
pop
cld
call
cld
test
(bad)
popa
push
clc
int
pop
jle
scas
push
mov
mov
clc
dec
inc
punpcklbw
rol
inc
jge
pop
jmp
mov
ins
mov
jle
pushf
dec
(bad)
loope
std
or
stc
popf
icebp
or
pop
jb
leave
out
idiv
(bad)
jmp
hlt
aaa
daa
lods
dec
sbb
fist
pop
cld
inc
mov
neg
add
lahf
(bad)
jg
aaa
dec
jmp
mov
repz
in
add
inc
fistp
jg
inc
jns
je
cmp
push
shr
ss
stos
clc
xor
clc
popf
iret
sbb
jge
mov
mov
xor
addr16
scas
sub
add
aas
adc
loopne
stc
mov
dec
dec
jg
fistp
(bad)
std
cmp
mov
xlat
sar
call
aas
hlt
cmp
add
test
xlat
nop
inc
sbb
xlat
xchg
mov
std
jg
imul
dec
sar
cmps
mov
push
mov
shl
lahf
fistp
icebp
mov
and
or
(bad)
in
movs
cmc
mov
call
dec
popa
dec
dec
sahf
pop
ret
bound
popa
scas
std
mov
(bad)
jge
scas
adc
daa
pop
idiv
outs
mov
add
ja
push
mov
pushf
dec
out
cwde
fcomip
xchg
jmp
ja
lods
cld
pop
shr
add
jmp
(bad)
jmp
call
xchg
push
(bad)
and
ja
lea
call
cmp
dec
jg
inc
adc
mov
or
loope
scas
mov
add
jbe
out
mov
(bad)
mov
imul
inc
(bad)
fcomip
imul
or
mov
idiv
push
std
(bad)
fbld
sub
jmp
mov
push
mov
pop
sbb
fwait
(bad)
sbb
fimul
sub
lock
call
pusha
lods
sahf
cmp
xchg
(bad)
ins
cmp
xor
cmps
cmp
call
out
fwait
pop
jne
addr16
xchg
mov
adc
sbb
mov
mov
inc
repz
pop
inc
add
retf
mov
mov
add
js
dec
scas
repz
retf
and
call
sub
pop
sub
cmp
xor
dec
scas
sub
sub
(bad)
jg
(bad)
(bad)
lahf
jle
xor
add
call
scas
and
pop
jg
(bad)
pop
shl
imul
mov
lea
jle
push
mov
jo
outs
imul
repz
xchg
mov
(bad)
dec
xor
ins
neg
xor
xor
or
jmp
(bad)
lods
fistp
xchg
jg
in
add
les
je
popf
daa
cmp
call
push
jle
jb
jle
retf
pushf
call
lock
scas
jg
or
dec
fistp
jo
outs
dec
lods
push
xchg
fucomip
xchg
pop
icebp
or
fnstsw
sbb
iret
loop
call
and
sub
sti
sub
jmp
fistp
mov
clc
mov
cld
push
cmp
jmp
aas
(bad)
pop
std
xor
and
imul
cmp
dec
jg
jae
out
cld
sbb
mov
cmps
clc
sbb
loop
jns
sub
add
inc
fcomp
mov
aas
inc
xchg
std
(bad)
aaa
mov
push
add
imul
(bad)
mul
jae
push
pop
rcl
ret
dec
or
mov
(bad)
mov
fs
mov
push
or
sub
cld
movsx
jmp
jg
loope
iret
jle
and
jmp
ror
(bad)
sbb
repnz
arpl
sbb
call
mov
inc
dec
das
call
loopne
mov
ret
mov
xor
xor
push
call
loop
cli
ins
sbb
fldln2
stos
add
call
xchg
fs
fmul
sbb
(bad)
mov
(bad)
xchg
(bad)
clc
ja
in
clc
in
sub
sti
pop
push
xchg
out
aaa
jmp
pop
std
sbb
cmps
sub
fwait
mov
mov
mov
adc
ds
(bad)
outs
mov
jmp
cmp
cwde
inc
dec
pop
cmc
ja
ret
dec
(bad)
xchg
(bad)
in
aaa
stc
jne
fucomp
ja
pop
mov
std
imul
sub
into
cld
out
(bad)
stos
sbb
repz
fldenv
clc
(bad)
xor
(bad)
cmp
aas
mov
cmps
aad
xor
outs
dec
loopne
clc
xor
(bad)
mov
call
lds
data16
push
rcr
sahf
xchg
mov
dec
cmp
(bad)
outs
neg
dec
(bad)
sar
popf
loop
fnstsw
xlat
call
xchg
sbb
xchg
push
icebp
outs
(bad)
out
and
sbb
xchg
mov
or
shr
aaa
push
in
xchg
sub
adc
(bad)
fild
xchg
dec
adc
out
clc
leave
jg
fstp
or
pushf
(bad)
ficom
pop
imul
adc
out
and
inc
cmp
aas
add
mov
or
dec
icebp
pop
(bad)
mov
pop
inc
aas
xchg
aaa
inc
(bad)
xchg
adc
sbb
xchg
jmp
dec
(bad)
mov
dec
mov
mov
jg
pop
sub
add
cld
xchg
inc
sbb
int
dec
pop
adc
hlt
movs
adc
xchg
(bad)
xor
mov
dec
repnz
and
sahf
cli
in
(bad)
dec
lahf
cld
(bad)
mov
daa
dec
pop
rol
xlat
out
hlt
leave
mov
inc
inc
jb
push
inc
xchg
sub
out
and
cmp
(bad)
pop
sub
call
inc
call
enter
dec
xchg
or
and
out
(bad)
test
bound
loop
adc
daa
(bad)
std
outs
dec
dec
or
call
fs
jle
inc
mov
es
pop
jp
jecxz
sub
jg
outs
jae
fmulp
das
cmps
xchg
add
(bad)
clc
pop
cld
icebp
jg
and
mov
test
in
out
xchg
ins
std
scas
adc
stos
xchg
outs
dec
scas
(bad)
add
jg
xor
pop
lea
addr16
outs
rol
call
mov
cmc
addr16
sbb
out
mov
or
clc
mov
push
(bad)
sbb
pop
jg
scas
and
pop
retf
inc
lods
mov
xor
cmc
das
std
mov
jns
push
inc
cmp
ret
cld
sbb
sahf
in
lock
mov
jle
xchg
fld
icebp
in
dec
pop
std
outs
dec
mov
mov
in
cli
add
sub
and
setp
fisttp
and
xor
cld
into
mov
or
(bad)
mov
or
add
(bad)
xchg
call
cmc
or
inc
dec
push
cwde
repz
lahf
inc
retf
xchg
cld
push
leave
out
int3
lods
or
adc
push
lahf
cld
scas
mov
add
mov
cmp
jg
inc
std
push
pusha
mov
push
cli
push
sar
pop
jg
scas
shl
imul
push
popf
sub
pause
in
aas
loop
nop
js
idiv
xor
inc
adc
repz
icebp
imul
rcr
adc
pop
popa
(bad)
mov
xchg
pop
sub
sub
jg
out
test
jle
outs
(bad)
mov
(bad)
cmp
scas
mov
not
mov
loopne
lahf
dec
les
and
ret
(bad)
hlt
outs
sub
mov
ja
in
daa
sbb
pop
mov
dec
mov
sbb
retf
call
(bad)
outs
imul
mov
sub
add
pop
shl
push
sti
pop
enter
dec
push
and
push
jg
dec
(bad)
std
fist
push
or
ret
daa
call
out
hlt
leave
jg
cmp
stc
iret
jle
pop
test
cld
xchg
mov
dec
xor
(bad)
icebp
cmp
xor
ja
xchg
or
movs
jne
fistp
js
jmp
xor
and
clc
popf
cwde
and
push
lahf
lods
push
jo
std
idiv
xor
scas
adc
jmp
sbb
and
(bad)
or
in
nop
xchg
clc
gs
retf
jns
aas
in
nop
ja
pop
or
call
lahf
int3
add
ins
nop
imul
xchg
xchg
jle
pop
mov
add
xor
and
lock
call
jg
icebp
mov
fist
xchg
jg
mov
in
mov
hlt
leave
aas
das
sbb
call
clc
sub
pop
push
mov
push
mov
cmc
fwait
jl
pop
inc
pop
and
inc
inc
mov
daa
xchg
clc
out
jg
cdq
xchg
fucomip
xchg
jmp
ja
in
std
sbb
es
in
xchg
add
cwde
pop
pop
sar
test
and
lock
cmp
cmp
push
push
add
mov
data16
std
mov
sub
add
dec
fwait
outs
cli
mov
or
xchg
repnz
sub
loopne
adc
add
lahf
stc
xor
bnd
(bad)
jg
(bad)
jmp
(bad)
fucomi
(bad)
jg
scas
and
in
scas
sub
sbb
clc
sbb
cmps
call
movs
hlt
(bad)
aas
cli
xlat
xchg
cmc
or
mov
repz
call
rol
jge
dec
jg
jmp
xchg
or
imul
rcr
or
adc
(bad)
call
test
fs
jg
inc
cld
in
jne
jle
jno
mov
std
xchg
sar
movs
scas
call
popf
jg
ja
in
and
(bad)
xchg
jg
mov
sti
pop
jle
in
(bad)
gs
cmps
cwde
pop
jle
push
enter
jns
sbb
test
fistp
fs
jle
into
mov
jle
add
popf
iret
shr
enter
sar
loop
(bad)
xchg
inc
sbb
push
ins
or
shl
scas
shr
sti
mov
and
mov
das
daa
or
cmps
fisttp
(bad)
xor
fs
hlt
jg
and
jmp
fsubr
pop
xchg
stc
ja
dec
(bad)
pop
mov
scas
xchg
inc
mov
(bad)
(bad)
add
out
aad
call
jne
pop
jg
scas
popa
in
(bad)
leave
popa
and
cdq
jo
and
pop
std
sbb
outs
mov
xlat
idiv
fistp
clc
adc
jecxz
nop
(bad)
fcomp
hlt
neg
imul
out
or
out
cli
push
fldenv
(bad)
fcomp
xchg
xlat
inc
lea
(bad)
mov
mov
pop
mov
clc
pop
(bad)
jmp
out
adc
int3
fild
(bad)
sbb
out
in
ret
pop
adc
out
mov
xor
inc
ds
mov
fs
aas
stc
scas
jle
dec
mov
hlt
out
mov
jne
retf
dec
lahf
cld
iret
mov
mov
sub
ds
syscall
or
scas
jae
xor
cmp
scas
rcr
mov
rcr
push
stos
sbb
dec
fld
icebp
out
sub
mov
(bad)
jle
scas
std
jmp
jmp
cli
addr16
call
cld
mul
aas
and
xchg
cmp
add
scas
and
imul
inc
(bad)
jg
scas
and
adc
xchg
(bad)
jo
loopne
inc
imul
inc
add
add
sub
sar
(bad)
xor
xchg
fucomip
xchg
aas
or
xor
push
imul
or
inc
sbb
movs
mov
inc
ret
das
mov
xchg
fist
(bad)
pop
and
dec
mov
jle
jb
jg
jb
sbb
lods
or
push
cli
adc
pop
inc
add
adc
rcl
dec
dec
sbb
aas
jle
pop
pop
sti
lea
in
aaa
cli
in
call
dec
inc
cmp
mov
dec
sar
mov
cli
mov
in
clc
popf
dec
retf
cld
fsub
jmp
out
inc
retf
stc
in
xchg
fist
in
icebp
fstp
inc
adc
pop
pusha
clc
fcomi
cmp
and
mov
repz
dec
(bad)
adc
repz
mov
test
sar
jg
hlt
add
aad
loopne
fs
fucomi
(bad)
push
mov
stos
inc
pop
push
push
sbb
out
jle
mov
ja
sub
xlat
xchg
pushf
or
xlat
adc
cmc
pop
(bad)
xor
mov
push
jmp
fisttp
call
std
call
mov
repz
std
xor
hlt
(bad)
jg
xlat
adc
cmp
jns
dec
push
lahf
arpl
dec
cmp
(bad)
add
out
dec
(bad)
mov
dec
(bad)
(bad)
cmp
jmp
mov
push
(bad)
mov
into
sub
fwait
int3
sar
jl
leave
jg
fstp
lahf
push
loop
cld
sub
mov
xchg
sbb
aas
inc
xor
(bad)
cld
mov
cld
add
jg
outs
sti
leave
fcomip
mov
ins
mov
(bad)
scas
jle
outs
ret
xor
jmp
aam
xor
push
xor
aaa
mov
test
add
ror
mov
add
neg
push
clc
cmc
fstp
lahf
std
push
(bad)
in
mov
into
xchg
clc
jmp
cmps
dec
(bad)
xchg
fild
(bad)
outs
dec
ret
dec
jp
ja
out
inc
outs
shr
leave
jg
fist
pop
sti
in
(bad)
sbb
dec
adc
xor
sar
stos
scas
mov
jmp
nop
test
clc
std
add
in
inc
add
(bad)
leave
mov
cdq
adc
das
(bad)
pop
mov
mov
sbb
dec
pop
xchg
std
ins
aas
stc
pop
jg
pop
repnz
std
and
and
jecxz
mov
inc
mov
in
in
xlat
mov
mov
sti
sti
adc
lock
rcr
xlat
or
shl
hlt
ja
mov
imul
pop
mov
int3
hlt
mov
sbb
push
not
adc
call
mov
mul
sbb
cld
xor
lahf
mov
pop
call
call
out
cmc
das
std
sbb
outs
dec
cld
cmc
fwait
(bad)
bound
(bad)
out
xlat
jo
fisttp
sbb
mov
jo
jg
repz
mov
outs
inc
add
outs
cli
leave
jg
fist
das
repz
outs
adc
cld
imul
pop
mov
jmp
dec
xor
sbb
mov
cli
xor
dec
icebp
mov
std
mov
or
sbb
call
jbe
or
(bad)
in
mov
dec
lock
sti
leave
jg
fist
leave
adc
fnsetpm(287
mov
aad
xchg
inc
outs
dec
inc
or
or
cmps
out
lock
addr16
dec
add
xchg
ja
mov
cld
ins
cmc
iret
adc
lock
popf
jle
lahf
fdivrp
ffreep
and
jecxz
sti
mov
xor
out
pop
into
xlat
loope
stc
cmp
test
inc
clc
add
push
jg
ds
pop
or
hlt
scas
lods
mov
cli
jg
imul
mov
mov
lahf
lock
loopne
add
jbe
(bad)
mov
jge
adc
fisttp
lds
lods
loopne
test
(bad)
std
pop
cmp
add
lods
inc
cmp
mov
pop
dec
stc
in
mov
jle
loop
pop
and
ins
mov
jle
loop
fistp
or
ja
adc
fcomi
outs
call
or
mov
in
cmp
daa
cld
cmp
das
mov
mov
dec
xor
xlat
out
sar
inc
lock
lahf
mov
xor
repz
cli
popf
ds
mov
cdq
fist
add
(bad)
in
lds
mov
mov
mov
arpl
push
mov
or
sbb
ja
pop
loopne
add
icebp
imul
jmp
pop
xchg
fsubr
std
mov
mov
fwait
dec
and
jmp
and
mov
nop
call
leave
out
cdq
mov
loopne
xchg
data16
pop
shl
pop
std
call
repz
push
repnz
cwde
cld
jg
iret
bound
cmp
dec
enter
jle
(bad)
sbb
js
mov
imul
xor
out
cmc
daa
inc
out
inc
xchg
xlat
outs
dec
xchg
xlat
(bad)
int
pop
push
dec
or
mov
leave
repz
(bad)
jnp
push
clc
jg
push
inc
sub
stos
xor
jmp
inc
push
xchg
and
mov
sub
iret
fidiv
and
xchg
jno
iret
(bad)
mov
pop
adc
ins
and
sub
cld
mov
jle
jno
enter
shl
test
in
xchg
scas
mov
push
shld
leave
pop
fcom
in
(bad)
call
mov
sbb
stc
paddd
stc
xchg
mov
(bad)
xor
cdq
ins
or
add
cld
repz
xor
aaa
scas
cmc
fnstsw
test
scas
jle
popa
push
sbb
out
scas
sub
std
fstp
jmp
sbb
das
mov
in
sti
xor
popa
mov
test
mov
xchg
pushf
call
in
xchg
jb
hlt
pop
das
hlt
shl
xchg
sahf
xor
outs
inc
mov
jmp
int3
out
enter
jnp
jns
(bad)
repz
push
mov
xchg
call
pop
mov
nop
mov
test
outs
cli
in
js
mov
jg
pop
adc
ins
fabs
cli
sbb
mov
std
inc
push
mov
inc
shl
push
cwde
ins
test
fist
add
in
ret
dec
jns
(bad)
fld
aas
stc
sub
(bad)
out
cmp
and
push
fcmovnu
clc
push
xchg
nop
je
add
pop
and
mov
mov
fcos
xchg
(bad)
sbb
inc
pop
pop
rcr
aas
scas
jl
push
mov
out
jmp
popf
sbb
(bad)
jae
(bad)
dec
mov
jmp
push
jle
cdq
or
xchg
cld
push
and
mov
push
and
mov
add
jo
jg
jb
jg
repnz
jg
repnz
jg
dec
dec
rol
inc
shl
sub
inc
cld
mov
sub
mov
ss
pop
sar
(bad)
sbb
popa
loope
mov
iret
cmc
aaa
and
mov
cdq
fcomp
xchg
inc
mov
clc
lea
ret
mov
add
int3
add
pop
cmp
pop
pop
mov
stc
pop
jg
outs
repz
mov
jg
xor
push
pop
cld
cs
jg
icebp
(bad)
mov
or
aaa
xor
adc
in
nop
xchg
inc
pop
adc
(bad)
rcr
jl
mov
dec
shr
mov
(bad)
fcomip
imul
xor
cli
xor
jg
scas
and
loop
cli
xor
xchg
pusha
and
jae
mov
and
(bad)
fild
jmp
pusha
mov
push
push
and
jle
aas
aaa
xlat
cmc
sbb
ja
cmp
xor
xor
add
fild
dec
cli
aas
das
mov
sub
pop
jle
outs
std
mov
push
jno
aas
(bad)
cmp
iret
cld
neg
cld
mov
data16
fnstsw
dec
les
sbb
enter
ret
sub
mov
ret
fimul
ret
daa
jle
ret
and
movs
inc
cmp
(bad)
push
stos
cmps
jle
dec
dec
fisttp
rcl
shl
das
std
inc
ins
dec
dec
repz
cld
dec
aam
aaa
movs
xchg
mov
loopne
cmp
cld
fisttp
cs
popf
xor
sbb
aaa
movs
mov
fs
fstp
sub
and
arpl
push
loope
ja
xchg
sti
sti
jle
loop
inc
sub
or
retf
mov
pop
mov
adc
stos
jg
jmp
sbb
pop
pop
or
xchg
repnz
(bad)
sar
add
xor
pop
adc
xchg
test
cld
sbb
jg
and
or
xchg
(bad)
pop
inc
bnd
rcr
push
repnz
lods
adc
rcr
cmc
xlat
or
push
xor
mov
push
cli
pop
and
sub
daa
or
retf
jg
ds
ret
xchg
jg
ja
add
mov
mov
daa
cld
loop
or
pop
mov
xchg
(bad)
(bad)
jle
je
xor
jmp
pop
adc
add
jno
out
sub
(bad)
mov
sahf
jo
or
movs
arpl
adc
pop
movs
das
or
or
(bad)
xlat
std
dec
enter
lea
scas
and
div
icebp
(bad)
cld
into
mov
stc
gs
mov
out
dec
mov
aaa
dec
xchg
jg
dec
cld
cmp
loop
std
xor
test
jmp
cmc
enter
out
iret
inc
mov
xchg
mov
iret
pusha
mov
imul
repz
jle
pop
adc
mov
add
cld
xchg
(bad)
jl
das
enter
mov
adc
into
inc
push
xchg
aas
stc
xor
xor
inc
cld
data16
bound
hlt
xchg
(bad)
cld
ja
mov
outs
inc
jbe
aaa
jmp
(bad)
sbb
addr16
jle
jb
sbb
clc
pushf
mov
pushf
inc
popf
je
cmp
pop
jl
add
pop
pop
add
pusha
int
and
and
jecxz
fs
cmps
call
hlt
int
movs
xor
sbb
jo
popf
leave
aaa
inc
imul
add
out
jg
pop
pop
out
dec
jns
jg
out
test
fdivr
mov
push
les
fs
dec
aas
sbb
into
(bad)
hlt
rcl
loope
test
mul
jg
xor
sti
xor
inc
ret
sti
xor
add
in
repnz
daa
sub
aas
hlt
test
cmps
hlt
(bad)
fisttp
pop
test
mov
jg
das
ror
daa
repnz
jle
popa
xchg
jecxz
add
jle
or
into
rol
jmp
pop
jle
mov
mov
mov
dec
jg
mov
jae
inc
jg
dec
(bad)
movs
fucomip
xchg
jg
ds
cmps
add
mov
std
inc
jp
jle
lahf
jp
add
pusha
pop
repnz
xor
push
(bad)
adc
ror
les
xor
jle
idiv
pop
xchg
pop
(bad)
pop
inc
imul
cmp
xor
pop
stos
sbb
cmp
and
mov
pop
jecxz
pop
or
cld
push
cli
push
adc
mov
out
lock
cli
jg
add
xchg
push
push
out
add
mov
jg
scas
lds
jg
fcomip
mov
jne
repz
out
mul
pop
cmps
(bad)
jmp
mov
pop
inc
cmps
imul
xor
call
jmp
xor
jo
jg
cli
mov
imul
repnz
sar
inc
jmp
cli
pop
jle
fcomip
xlat
stc
in
dec
mov
cmp
mov
repnz
cmp
std
(bad)
outs
or
sub
out
jle
mul
mov
repnz
nop
(bad)
dec
dec
jecxz
out
icebp
jg
dec
(bad)
cmc
(bad)
xchg
jg
mov
jle
out
jmp
pop
push
out
xlat
sti
xor
mov
int
cmc
sub
dec
and
add
stc
in
or
push
nop
cmps
clc
popf
cmp
dec
stos
sti
and
xchg
data16
in
(bad)
in
ds
dec
inc
pop
call
inc
sbb
out
repnz
push
jmp
add
jle
jns
scas
fs
std
retf
jle
adc
add
push
lds
shr
fild
cmc
pop
pusha
mov
jle
pop
div
push
sub
mov
(bad)
push
scas
and
repnz
sti
xor
(bad)
sbb
sbb
jg
(bad)
call
mov
push
hlt
(bad)
mov
inc
fdiv
ja
lea
pop
not
mov
out
cld
jne
pop
adc
add
call
xlat
outs
dec
stos
xor
fdiv
pop
mul
sbb
sbb
cli
cmps
mov
mov
sti
out
repnz
push
stos
hlt
inc
addr16
push
adc
clc
jne
outs
push
call
lahf
push
pushf
addr16
mov
adc
mov
pushf
sub
or
ds
pop
inc
jmp
push
push
xchg
test
ja
dec
in
ret
mov
sbb
add
fnstcw
loopne
push
ins
aad
cli
imul
mov
outs
pop
and
cmc
data16
rcr
jecxz
cmp
(bad)
div
pop
push
popf
cld
out
scas
jno
jo
mov
xor
std
mov
adc
mov
sbb
ins
(bad)
retf
fistp
dec
loope
mov
fist
stos
dec
lock
cmp
fist
jne
icebp
fisub
jbe
push
jle
fisttp
stc
pop
jg
mov
repz
lock
mov
stc
pop
jle
daa
(bad)
in
out
and
into
out
enter
xchg
fcomp
sti
mov
retf
pop
ret
out
lock
scas
cld
ins
mov
shl
adc
outs
icebp
out
mov
test
xchg
jle
loop
ins
mov
ja
cs
inc
icebp
lds
neg
pushf
or
cmps
in
sar
jg
cli
call
(bad)
cdq
mov
stos
mov
xor
hlt
(bad)
mov
stc
jmp
dec
mov
mov
stos
cld
xor
xor
mov
and
jmp
std
jmp
cli
stc
dec
call
sub
dec
jg
or
jmp
outs
je
jge
or
(bad)
fwait
test
cmps
jmp
imul
outs
adc
mov
out
(bad)
out
and
pop
repnz
dec
dec
dec
mov
sti
popf
sub
idiv
push
inc
out
aaa
movs
mov
aas
stc
cmp
(bad)
rcr
call
cdq
leave
mov
adc
fist
test
pop
lds
push
pop
sbb
cmp
and
push
repz
xlat
aas
and
ret
data16
mov
ja
clc
inc
xchg
mov
cmp
in
sti
add
das
clc
in
enter
imul
or
(bad)
clc
mov
push
cld
dec
aas
stc
ja
add
mov
das
dec
jle
fist
sbb
pop
cld
ds
mov
call
stc
retf
dec
jmp
icebp
xor
mov
pop
mov
fisttp
clc
std
aaa
fbstp
stc
pop
sub
cld
dec
shl
outs
addr16
loop
xchg
mov
bnd
inc
dec
inc
mul
adc
hlt
push
sar
out
mov
clc
loopne
ret
pop
imul
xlat
stc
xor
mov
adc
or
jp
mov
call
and
fcomip
imul
mov
xor
std
jae
or
(bad)
jmp
dec
popa
adc
or
mov
mov
pop
imul
jg
cli
sbb
xlat
xchg
cwde
bts
cli
dec
fadd
xchg
xor
(bad)
mov
mov
imul
icebp
shr
cmp
jmp
shr
pop
sti
popf
lea
pop
jns
sti
(bad)
ins
dec
xchg
std
mov
cld
retf
mov
out
clc
leave
aas
sti
fstp
adc
arpl
mov
(bad)
cmc
pop
pusha
into
sti
xor
mov
in
xlat
sbb
adc
jo
js
repz
sub
sbb
(bad)
neg
mov
adc
or
cli
mov
js
std
mov
int3
(bad)
daa
inc
out
dec
sub
retf
pop
and
in
in
ds
mov
dec
fmul
not
jp
sub
jg
jl
fwait
jo
dec
hlt
cmc
(bad)
jmp
xlat
in
ja
push
xlat
dec
cmp
push
out
test
adc
sar
out
jae
gs
aas
adc
mov
test
in
push
mov
dec
add
std
pop
push
rol
jg
scas
and
fst
scas
sub
je
lea
imul
(bad)
sbb
call
out
jle
ror
movs
retf
jmp
scas
cmp
jle
xchg
(bad)
sbb
or
ret
pop
lock
scas
cld
sbb
(bad)
test
and
hlt
fwait
nop
sub
lods
sub
sti
mov
dec
outs
inc
jp
mov
nop
jmp
xor
xchg
sub
pop
sub
mov
inc
jg
pop
add
adc
and
cld
movsx
xchg
push
ja
out
mov
fwait
jg
out
std
add
cli
cmps
mov
and
(bad)
pop
jo
mov
loope
sub
out
xor
popf
dec
add
in
imul
lds
sub
cmp
mov
mov
ja
cdq
and
imul
lock
rcr
jmp
mov
inc
(bad)
and
cld
pop
dec
std
cld
(bad)
cli
stc
js
sub
jmp
xlat
adc
pop
jmp
push
aas
jg
pop
push
push
ret
add
repnz
sar
stos
pop
inc
jl
jl
(bad)
(bad)
sbb
inc
std
xor
lahf
movs
(bad)
(bad)
jge
(bad)
mov
fucomp
repnz
out
xor
inc
dec
mov
stc
pop
clc
pushf
jl
sub
fsubr
xor
fwait
retf
xchg
(bad)
outs
dec
jg
cmp
(bad)
jbe
enter
hlt
std
mov
xor
shr
mov
std
into
aam
aaa
add
fistp
cmp
std
xchg
sbb
cld
cwde
inc
add
mov
mov
mov
arpl
sub
cmp
push
cld
mov
out
rol
sbb
vcomisd
jns
lahf
sub
aam
or
aas
sbb
pushf
fcomp
cmc
idiv
xor
mov
add
les
in
scas
and
fdivrp
sti
cmc
(bad)
jg
std
call
retf
fdivr
pop
inc
out
std
pop
cli
arpl
popa
inc
pop
ss
stc
xor
lock
and
jg
(bad)
cld
aaa
adc
std
dec
aas
stc
pop
pop
ret
movs
call
and
add
push
cli
in
test
clc
inc
add
mov
pop
ss
mov
(bad)
in
add
out
dec
pop
and
jmp
aas
imul
cmp
mov
outs
dec
lahf
dec
xchg
pop
inc
inc
dec
mov
outs
imul
sub
sub
ss
scas
and
mov
cs
jg
xlat
adc
pop
clc
jmp
sbb
add
mov
stc
shl
cmps
push
in
jmp
jnp
lods
(bad)
xchg
pop
icebp
cmp
jb
out
dec
mov
cld
es
xchg
(bad)
sbb
xchg
js
pop
(bad)
ins
sub
cmp
xor
repz
pop
inc
inc
and
adc
pop
jle
lods
imul
call
cmps
xor
adc
jbe
call
ds
scas
jle
inc
lods
lahf
cld
(bad)
mov
cld
cli
(bad)
bnd
mov
or
(bad)
fild
std
dec
pop
pop
std
mov
shl
fdivrp
(bad)
cld
(bad)
mov
jo
sbb
cld
pop
call
scas
inc
loope
scas
xchg
(bad)
adc
jmp
adc
aas
add
cld
ja
sbb
mov
dec
adc
sahf
push
mov
dec
aas
sub
loope
dec
fild
inc
(bad)
dec
jg
jae
outs
neg
jmp
mov
ss
std
cmp
or
add
retf
outs
inc
ins
cld
fwait
xchg
jg
nop
mov
stc
pop
pop
hlt
daa
rol
pop
adc
std
xchg
or
jle
mov
mov
loopne
stc
dec
test
inc
cwde
fcmovnu
int3
in
jle
test
sbb
jmp
xlat
addr16
(bad)
test
ret
daa
dec
out
inc
xor
jne
scas
std
imul
inc
out
cwde
gs
scas
icebp
iret
(bad)
sbb
or
clc
adc
lds
inc
(bad)
retf
jg
jle
push
cli
push
jl
les
(bad)
std
sbb
repnz
xor
hlt
push
sar
and
xchg
dec
stos
rol
cmp
cwde
jne
out
inc
mov
out
push
out
dec
jmp
xchg
pop
sub
fcmovbe
mov
jmp
add
fild
pop
mov
gs
lock
or
dec
jg
cli
ss
pop
xchg
jno
paddd
cmp
test
pop
dec
(bad)
loope
loop
(bad)
pop
out
pop
jne
pop
(bad)
cmp
inc
mov
out
out
sbb
aaa
std
aaa
or
arpl
(bad)
cmp
inc
sub
xchg
mov
push
(bad)
mov
cli
adc
sar
jmp
cwde
xor
stc
xor
hlt
(bad)
jg
scas
loopne
call
sub
mov
jmp
and
clc
aaa
xchg
add
sbb
add
fisttp
sar
or
push
push
jle
mov
mov
xchg
xchg
xlat
xor
bnd
(bad)
test
mov
and
in
jg
pop
jecxz
push
(bad)
std
in
lods
retf
lock
cld
sbb
inc
sahf
and
adc
test
xlat
jg
dec
dec
std
push
mov
cmc
imul
dec
xchg
fnstsw
(bad)
dec
and
repz
test
je
lods
jmp
sub
(bad)
(bad)
aaa
cld
sub
adc
mov
jle
cmc
or
arpl
or
(bad)
dec
dec
pop
inc
dec
(bad)
cld
xchg
jg
mov
jle
mul
mov
mov
mov
xor
out
sti
in
cld
ins
dec
mov
cwde
sar
inc
xchg
(bad)
cli
jle
jno
jle
dec
xchg
shl
leave
inc
xor
fcomip
jg
mov
mov
pop
(bad)
clc
mov
sub
push
mov
mov
fdiv
or
adc
pop
push
jg
dec
or
(bad)
xlat
nop
jns
or
push
dec
pop
stos
call
jge
das
std
xchg
int3
gs
mov
lock
into
xchg
popf
imul
fadd
clc
sbb
cld
test
(bad)
jge
lahf
std
or
pop
jne
mov
fist
outs
outs
pop
push
or
call
aaa
loopne
jg
out
int3
mov
ja
jo
loopne
dec
cld
cmc
jg
mov
aaa
(bad)
mov
push
cli
mov
adc
ss
js
mov
call
pop
std
xor
int3
lock
mov
mov
out
scas
sub
inc
lods
popa
std
(bad)
hlt
inc
pop
push
jb
call
cwde
dec
les
fs
movs
mov
rol
cli
mov
sti
(bad)
shl
jmp
js
jle
pop
jecxz
jo
cs
test
cwde
mov
pop
sub
xchg
mov
dec
sti
pop
stc
add
int
call
mov
sar
add
ret
das
dec
movs
outs
push
or
push
jo
ja
sti
dec
sbb
inc
clc
das
imul
into
cmp
leave
sub
mov
inc
inc
ss
push
in
sti
in
pop
xor
inc
pop
test
popa
nop
data16
or
xchg
cmp
stc
ins
xchg
(bad)
mov
sbb
out
push
cmp
push
xor
test
xchg
xlat
mov
mov
(bad)
aaa
xchg
pop
cld
ror
mov
into
in
add
mov
dec
(bad)
popa
adc
push
into
out
cmc
imul
xor
fidivr
and
cld
scas
hlt
(bad)
(bad)
aaa
mov
daa
scas
xlat
jle
pop
ret
in
xor
mov
pop
sub
mov
adc
mov
mov
xchg
fisttp
xchg
(bad)
cld
mov
in
stc
sbb
daa
dec
fwait
cld
out
cwde
cmc
arpl
int3
pop
repz
std
mov
cdq
gs
sbb
in
cld
add
mov
jle
dec
(bad)
rcr
pusha
(bad)
sar
or
loop
jmp
pushf
inc
int3
dec
jmp
mov
in
je
add
test
xor
bound
mov
repz
jmp
sti
jecxz
push
mov
outs
mov
jle
(bad)
mov
pop
cmc
imul
pushf
sub
mov
retf
scas
and
mov
shl
dec
cmps
(bad)
dec
mov
popa
repnz
aas
stc
sub
xchg
loopne
(bad)
bound
mov
repz
add
gs
stc
out
jle
mov
clc
(bad)
ds
(bad)
jo
pop
outs
dec
ret
dec
mov
pop
mul
pusha
jle
call
cmp
sbb
push
jnp
inc
int
not
add
cmc
scas
fst
lahf
mov
sti
aaa
sbb
cld
dec
sub
(bad)
std
cli
jg
and
adc
clc
xor
(bad)
sbb
jg
cli
std
aas
hlt
imul
lock
icebp
imul
jge
lahf
dec
pop
inc
adc
sbb
mov
stos
add
retf
aaa
mov
retf
xor
mov
or
and
lahf
cld
sti
mov
mov
outs
stc
leave
mov
cmps
scas
push
mov
inc
jmp
or
adc
dec
mov
mov
and
xor
sub
std
jbe
dec
out
ja
in
add
sbb
aas
jg
pop
nop
ret
fwait
jg
xor
inc
xlat
and
mov
ret
hlt
iret
(bad)
sbb
mov
pop
adc
aaa
call
repnz
fwait
repz
std
sbb
cmp
sbb
mov
fisttp
(bad)
fisubr
hlt
das
std
xor
jl
shl
fucomip
xlat
jo
loope
cld
inc
in
add
into
ins
inc
mov
nop
adc
sub
pushf
jecxz
sbb
jae
add
jg
call
mov
inc
out
dec
add
mul
xor
mov
shl
jg
xlat
adc
adc
cmp
aam
out
stos
in
mov
(bad)
scas
and
jg
cmps
jb
sbb
call
(bad)
xor
fcom
mov
cmp
fucomip
sub
adc
sti
in
xor
mov
in
(bad)
xchg
jg
push
inc
jle
inc
cmp
sub
or
shl
xor
mov
inc
(bad)
std
(bad)
cmp
cmp
cld
jbe
mov
mov
or
mov
idiv
mov
js
cmp
jmp
sti
in
in
mov
jmp
and
jl
(bad)
mov
std
scas
sub
icebp
jg
pop
jmp
jge
sub
leave
jg
scas
and
std
inc
push
retf
fcomip
imul
pop
std
sbb
(bad)
xor
(bad)
aas
cmc
imul
sar
jmp
in
repnz
mov
loope
enter
ins
lock
sti
outs
int3
jno
mov
in
mov
pushw
test
clc
lods
fbld
xchg
xor
add
les
lock
call
mov
std
cli
lods
stos
nop
cmp
in
dec
jp
ror
mov
sti
scas
sti
imul
mov
add
popf
inc
or
nop
lock
mov
imul
(bad)
call
(bad)
pusha
nop
dec
xchg
push
jns
aas
in
xlat
adc
js
imul
mov
lods
adc
sbb
scas
and
cli
jmp
in
icebp
outs
hlt
leave
pop
mov
xchg
adc
inc
rol
int3
into
scas
and
mov
sbb
and
mov
jmp
stc
ins
aas
stc
push
call
movs
in
cmp
inc
jmp
ja
ret
clc
xlat
push
push
xlat
xchg
int
and
(bad)
loope
mov
cmp
sub
outs
and
leave
in
dec
or
iret
gs
out
xchg
push
ins
push
mov
or
mov
dec
jle
outs
mov
scas
repz
mov
and
aaa
mov
xchg
cmc
movs
inc
icebp
inc
or
adc
scas
xchg
pop
nop
mov
aas
mov
mov
repnz
outs
cld
jg
push
call
(bad)
jg
imul
adc
xchg
and
dec
cld
xor
aas
clc
xor
std
adc
jmp
std
cmc
loop
jg
idiv
dec
mov
shr
xlat
stc
xor
xchg
(bad)
lock
aas
loope
sti
in
cmps
imul
sub
dec
inc
fucomip
xchg
(bad)
out
ja
or
cld
sbb
imul
pop
xchg
inc
or
cld
popf
jg
sub
je
retf
sub
add
cmps
pop
jae
sbb
das
ret
nop
stc
mov
jg
int3
test
movs
icebp
(bad)
ss
inc
loopne
cmp
(bad)
imul
cli
pause
(bad)
(bad)
jge
jmp
cmp
dec
(bad)
cmp
data16
js
idiv
leave
pop
repz
stc
fisttp
cmc
nop
jl
idiv
jmp
mov
outs
sti
leave
dec
adc
add
inc
stc
jg
ret
pop
cli
mov
cmp
clc
sbb
stc
cmp
xor
test
jl
das
std
or
les
dec
(bad)
(bad)
(bad)
xchg
(bad)
std
mov
les
pop
mov
lahf
rep
cmp
call
lahf
or
pop
int3
or
jne
popf
sbb
idiv
xchg
(bad)
(bad)
pop
(bad)
sbb
es
jle
shr
jg
mov
push
std
lea
pusha
lahf
cld
jne
int
clc
leave
pop
aad
dec
out
retf
cli
imul
sbb
add
(bad)
xchg
push
pop
mov
cmps
mov
add
pushf
jnp
dec
aas
stc
xlat
movs
pop
dec
lea
jmp
pop
sbb
ins
dec
dec
stos
pop
mov
add
mov
push
jle
(bad)
in
xchg
xchg
(bad)
hlt
fist
outs
in
and
push
add
xlat
xor
icebp
(bad)
popf
icebp
rcr
and
mov
xchg
jg
push
imul
(bad)
sub
inc
xlat
adc
outs
hlt
repz
outs
loop
xor
in
(bad)
iret
outs
clc
sbb
(bad)
dec
les
(bad)
jle
or
dec
shl
leave
jg
xor
pop
push
in
sub
inc
xor
sub
arpl
mov
scas
loopne
sti
loopne
hlt
iret
mov
(bad)
lds
cld
push
push
(bad)
stc
mov
jg
mov
jge
xlat
sub
call
scas
and
xlat
cli
jg
sti
xchg
(bad)
data16
ret
dec
(bad)
ss
leave
lahf
cld
lea
mov
jle
pop
inc
or
pushf
lahf
(bad)
aaa
stc
or
cmp
int
arpl
pop
inc
fcmovb
jge
add
adc
outs
repnz
mov
or
loopne
xchg
bound
mov
cld
adc
(bad)
cmc
in
mov
in
adc
jbe
adc
out
int3
inc
mov
std
pop
mov
pushf
fild
hlt
mov
cmc
fbstp
arpl
out
xor
cli
out
clc
xor
scas
(bad)
jle
inc
dec
std
push
lahf
jge
xlat
cmp
in
ss
inc
push
(bad)
cmp
sub
or
sbb
leave
imul
inc
xchg
pop
cmc
fist
les
add
xor
shl
jo
outs
retf
mov
stos
xchg
sbb
dec
std
sbb
or
mov
cli
sbb
int3
fwait
mov
adc
cli
scas
push
cmovno
in
cld
leave
cli
call
inc
cmpxchg
pop
loope
cli
xor
(bad)
push
or
mov
inc
shl
not
lock
stc
call
(bad)
cmp
lock
ss
cld
idiv
or
ret
sbb
and
icebp
jg
xlat
cli
mov
ins
sub
fbld
stc
inc
inc
xlat
inc
je
in
test
call
and
pushf
sub
or
add
jle
loope
(bad)
xlat
nop
test
inc
(bad)
call
(bad)
mov
aas
mov
aaa
jle
fucomip
xchg
mov
xor
push
mov
sub
(bad)
and
sub
test
xchg
sbb
push
mov
in
ja
mov
jnp
sbb
stc
cmp
pop
dec
jg
imul
loop
fbld
jle
(bad)
xor
mov
js
push
adc
xor
and
push
out
xor
imul
std
sbb
int3
inc
jle
sbb
lahf
inc
paddw
xchg
xor
mov
shl
sub
pop
mov
cld
xlat
jo
(bad)
(bad)
xlat
jo
ret
je
out
int3
aam
cmc
repnz
std
into
lahf
cld
idiv
fdiv
lock
and
sahf
sar
in
stc
or
jl
hlt
retf
outs
mov
aaa
jle
rcl
adc
bnd
mov
and
mov
outs
inc
jmp
pop
jmp
clc
mov
pop
fdiv
mov
add
popa
and
mov
shl
(bad)
mov
add
sbb
add
std
mov
clc
cmp
mov
out
hlt
leave
(bad)
(bad)
cmp
push
call
xchg
pop
das
sti
pop
jle
in
aas
push
clc
mov
sub
ret
rol
xchg
mov
out
add
popf
cmp
addr16
aad
stc
xchg
dec
shr
lods
fild
in
(bad)
out
xlat
or
push
sar
hlt
(bad)
aas
call
(bad)
sar
addr16
fstp
and
popf
(bad)
call
popf
mov
out
mov
jle
out
cld
push
in
adc
jle
dec
and
push
sbb
rol
leave
jg
xor
es
scas
inc
pop
repnz
das
mov
mov
repz
sbb
sti
mov
call
std
mov
xchg
fwait
cmp
lock
int3
aaa
cmp
out
(bad)
xor
mov
(bad)
(bad)
cmps
cld
sbb
cld
std
das
std
pop
int3
fdiv
call
loopne
scas
mov
xor
pop
add
xor
icebp
push
scas
(bad)
in
mov
loope
and
(bad)
(bad)
inc
add
mov
jno
out
ret
(bad)
bound
fild
in
cmps
inc
sub
(bad)
jae
cmp
sbb
dec
jle
pop
and
clc
in
push
mov
cmp
std
std
mov
inc
in
enter
mov
ins
xchg
fbld
mov
std
sbb
and
fs
sub
cwde
(bad)
(bad)
or
cli
or
mov
shr
hlt
pusha
hlt
sub
xchg
les
cld
xor
and
dec
jg
or
(bad)
out
ins
mov
fistp
sti
sti
lahf
call
and
mov
js
lock
pusha
xor
in
xlat
adc
stc
dec
hlt
daa
mov
fbld
xlat
fistp
es
cmc
mov
xor
cld
or
ret
fild
jg
cmp
dec
mov
fisttp
inc
xor
out
sbb
scas
pop
(bad)
fistp
adc
dec
adc
dec
bound
fcmovnu
inc
arpl
fwait
mov
repz
(bad)
pop
daa
sbb
xchg
(bad)
jmp
call
mov
icebp
das
cld
sbb
psubb
iret
pop
inc
(bad)
push
or
daa
imul
das
fist
xlat
sbb
jecxz
cli
xor
pop
mov
xlat
fistp
jle
dec
(bad)
xchg
(bad)
xchg
push
mov
mov
jg
sbb
sub
fwait
hlt
or
in
mov
iret
xchg
call
rol
clc
sti
mov
mov
es
pop
cli
pop
sar
pop
jg
les
outs
lock
cdq
ror
repnz
cbw
jae
add
cld
das
sar
js
mov
mov
ffreep
hlt
and
cld
mov
mov
bound
in
dec
adc
jg
pop
mul
xlat
mov
(bad)
mov
test
outs
fdiv
fs
call
adc
adc
js
das
push
outs
cld
iret
loopne
cmp
mov
cld
sbb
lds
cli
addr16
call
dec
(bad)
jmp
jne
xchg
(bad)
out
jle
pop
inc
jl
jg
out
add
jge
sbb
cld
push
ffreep
bound
jmp
inc
loop
stos
nop
inc
cld
ins
cmp
hlt
xlat
jg
ret
dec
out
sub
and
(bad)
push
mov
stos
clc
cmp
or
xchg
(bad)
xor
ret
jmp
lods
fist
call
out
sti
xor
mov
jge
call
loop
std
xchg
cmp
ja
shl
jbe
jg
stos
das
jg
push
inc
(bad)
in
movs
xchg
mov
repnz
es
idiv
out
add
stc
cmp
in
(bad)
hlt
shr
jg
(bad)
in
pop
mov
in
dec
mov
mov
scas
lock
fcomip
xlat
jo
adc
inc
sbb
call
sbb
pop
jae
sbb
pop
mov
je
popf
cmp
clc
scas
and
pop
(bad)
pop
int
mov
fnstsw
pop
mov
mov
adc
in
jg
mov
aaa
jbe
mov
dec
stos
pop
mov
(bad)
out
ja
jmp
jle
push
leave
cmp
xchg
push
sub
imul
std
or
mov
(bad)
(bad)
jnp
mov
cmp
pop
stos
push
and
mov
sti
xchg
cmc
push
in
jg
scas
and
js
add
mov
or
rcl
sar
inc
mov
in
cli
in
std
ss
std
imul
nop
cld
into
movs
push
sbb
add
mov
push
fisttp
mov
ds
pop
std
sbb
mov
pop
mov
scas
icebp
fwait
js
add
(bad)
mov
add
adc
sub
add
out
lock
call
(bad)
mov
mov
sbb
in
add
jg
movs
sub
or
sbb
mov
sub
cmc
push
repnz
jno
cli
ret
ss
stos
aas
jmp
push
cwde
inc
push
enter
jp
enter
and
cld
das
(bad)
(bad)
cld
push
mov
adc
pop
imul
push
add
daa
jle
mov
js
pop
jg
mov
std
and
sub
mov
out
inc
push
in
sahf
dec
stos
fucomip
xchg
jmp
ja
in
cld
sbb
out
shr
arpl
jmp
test
pop
cs
and
rcr
add
xchg
leave
popf
jne
add
cld
lds
push
loope
shl
loop
jl
out
xor
enter
(bad)
mov
and
icebp
cmp
jl
jg
mov
leave
sub
mov
xlat
call
in
(bad)
popf
ds
das
jle
jb
sbb
sbb
mov
hlt
outs
sub
add
add
jae
dec
jns
push
repnz
push
test
cmp
xchg
or
push
push
dec
push
mov
jl
xlat
nop
adc
adc
xlat
jo
mov
push
or
xor
jno
outs
sti
leave
jg
add
and
pop
push
pusha
mov
inc
cld
jbe
jb
bound
(bad)
psrad
and
sbb
jecxz
sub
nop
test
(bad)
aas
xlat
iret
lock
lock
ja
mov
mov
outs
cld
leave
pop
dec
add
(bad)
scas
mov
stos
mov
cld
(bad)
scas
mov
inc
xchg
stc
loopne
mov
repnz
call
and
icebp
cld
push
hlt
(bad)
mov
stc
cmps
cld
sbb
cmp
adc
pop
inc
js
pop
cli
(bad)
cdq
pop
sub
icebp
idiv
into
sbb
xor
jle
cld
and
stc
ins
cmp
clc
fistp
sub
or
fistp
jle
iret
and
inc
ret
mov
jecxz
retf
or
ret
popa
mov
jge
and
(bad)
loopne
fistp
and
inc
cmovo
add
in
nop
pop
mov
scas
mov
add
jbe
or
loopne
cwde
outs
inc
ins
repnz
add
retf
fld
out
loopne
push
add
dec
sar
ret
outs
add
inc
adc
or
ret
out
add
sti
imul
je
dec
je
scas
cmc
imul
fild
adc
out
loopne
pop
push
dec
xor
sbb
shr
sub
(bad)
outs
xchg
jl
(bad)
ins
std
push
pusha
mov
jle
push
loopne
sbb
(bad)
stc
das
std
xchg
int3
mov
(bad)
push
imul
mov
and
inc
imul
sahf
jg
lahf
adc
stc
leave
aas
pop
xchg
hlt
dec
xchg
jbe
in
rcr
std
fcmovbe
adc
inc
aas
dec
lock
ds
xor
(bad)
std
fstp
push
sbb
enter
neg
es
cld
mov
xchg
jg
xlat
stos
sahf
add
outs
cmps
push
jmp
stc
cmc
hlt
idiv
lahf
out
jg
out
sbb
daa
clc
xchg
mov
jecxz
lahf
mov
(bad)
fistp
std
sti
pop
cli
addr16
aas
stc
xchg
je
shl
clc
sti
xchg
sub
stc
cmp
jmp
pusha
pop
js
dec
pop
ds
(bad)
xchg
(bad)
pop
hlt
icebp
fld
out
(bad)
fild
movs
aam
xor
icebp
fistp
pop
movs
popf
mov
cld
push
mov
enter
fucom
or
imul
pop
inc
mov
sub
dec
sar
clc
or
(bad)
hlt
stc
(bad)
(bad)
test
popf
sbb
clc
xchg
(bad)
jns
hlt
iret
push
movs
and
cmp
sar
int3
ret
stc
sbb
mov
add
fs
add
pop
or
(bad)
cmc
(bad)
mov
icebp
das
jp
mov
pop
clc
sbb
pop
imul
retf
pop
pushf
out
int3
sbb
std
mov
sar
or
dec
ins
std
pop
add
in
shl
and
mov
xchg
mov
clc
test
push
lods
push
outs
jge
hlt
adc
ss
fstp
dec
js
jg
jle
jl
in
xchg
adc
mov
dec
rcl
or
xor
das
std
sub
pop
je
int3
cmp
scas
loope
iret
cld
push
pop
dec
stos
mov
pop
shl
ja
jp
jge
in
cmp
jne
lea
dec
jmp
dec
push
inc
aas
inc
pop
pmaddwd
jg
pop
xor
cld
dec
jle
(bad)
xlat
gs
mov
ja
mov
aad
mov
cld
sti
dec
sub
clc
pop
and
std
mov
fidivr
or
fsubr
enter
xor
cmp
sti
mov
jle
ds
in
jmp
cmp
jmp
jae
xlat
xor
mov
jns
aad
and
or
or
hlt
cdq
sub
sub
jp
fild
popf
retf
dec
inc
jle
xchg
xchg
scas
js
fs
sbb
std
pop
call
mov
or
ja
gs
test
imul
dec
push
cmc
icebp
fisttp
cmp
jmp
lahf
cmps
dec
repz
jg
fcomip
(bad)
mov
movs
adc
(bad)
icebp
jnp
push
(bad)
daa
cli
jg
xchg
call
(bad)
jg
jge
mov
push
iret
add
jbe
arpl
inc
daa
mov
pop
jmp
push
cmp
in
scas
mov
stos
fdivr
push
cmp
inc
jns
xchg
and
aad
xor
jne
add
mov
dec
call
imul
mov
aaa
inc
xchg
pop
cli
test
pop
ja
jae
cmc
cmp
cdq
stc
out
repnz
in
popf
mov
jne
inc
mov
mov
jg
sbb
jle
push
nop
jmp
push
push
call
(bad)
dec
cli
icebp
sub
(bad)
mov
fdivr
push
mov
fisttp
mov
(bad)
xlat
xchg
nop
repz
cld
xor
stc
scas
sub
(bad)
inc
hlt
repz
cli
jno
push
stos
loope
stc
in
gs
loopne
jo
lods
fucomip
xlat
lock
xor
loope
and
sbb
and
cmc
nop
and
cs
pop
dec
jle
mov
in
cli
ror
mov
gs
jmp
in
mov
std
lahf
sti
in
ds
cmps
add
cld
pop
jle
fucomip
loopne
mov
cld
cli
(bad)
scas
inc
jns
pop
inc
stc
dec
jg
xchg
inc
stc
in
jg
pop
mov
jg
leave
inc
inc
jg
pop
test
in
cli
sbb
movs
(bad)
cld
outs
sti
leave
jg
cmp
cld
cs
das
pusha
cwde
jg
inc
imul
fdivr
cld
xchg
inc
popa
adc
mov
and
or
loopne
jo
dec
ds
pop
jg
outs
hlt
in
jmp
push
ret
pop
cli
xchg
(bad)
(bad)
lahf
sub
and
outs
dec
jmp
pop
adc
hlt
jmp
pop
arpl
pop
jmp
clc
mov
sub
jge
dec
xchg
push
popf
fistp
(bad)
std
jmp
xlat
adc
sub
mov
ror
das
std
jl
repz
fwait
add
cli
std
push
(bad)
jp
jg
loop
clc
xchg
(bad)
and
xchg
push
mov
add
or
pop
pushf
(bad)
xlat
call
sbb
and
ja
or
out
dec
inc
dec
dec
add
push
in
cli
in
mov
pop
dec
ja
in
cld
popf
aas
stc
out
mov
aaa
les
iret
mov
or
xchg
cmc
xlat
loopne
mov
fwait
adc
(bad)
(bad)
lahf
cld
das
mov
(bad)
dec
(bad)
fcmovnu
adc
es
aas
and
push
cli
cmps
call
jmp
pop
adc
fild
dec
(bad)
mov
pop
xor
mov
xchg
sbb
jmp
in
(bad)
out
les
stc
(bad)
pop
(bad)
(bad)
adc
cmp
sahf
clc
outs
or
fild
call
pop
mov
in
pop
pop
stc
loope
sti
xor
jg
jp
(bad)
adc
call
jle
jne
out
std
jmp
jmp
dec
cwde
cld
inc
lock
(bad)
call
dec
aas
dec
stc
imul
aas
sbb
pop
inc
rcl
loopne
lock
iret
scas
sub
dec
push
dec
(bad)
outs
sub
push
(bad)
sub
mov
cli
dec
ffreep
ja
sub
aam
dec
enter
fs
pop
test
fist
les
leave
mov
outs
dec
daa
dec
out
repnz
jle
das
rol
cld
xor
(bad)
cs
adc
cli
lahf
add
popa
cmp
loope
jbe
or
inc
bound
in
and
scas
jle
fisttp
in
cli
in
ds
test
addr16
aam
aaa
xchg
xor
(bad)
(bad)
in
mov
in
cmps
dec
(bad)
std
(bad)
xchg
jg
mov
ins
js
inc
sub
aaa
pop
jmp
repnz
inc
lahf
std
pop
mov
stos
sbb
mov
mov
loopne
(bad)
fcmovnu
es
aas
jg
dec
add
std
pop
fwait
clc
in
sar
or
sub
stos
(bad)
mov
cmps
lock
scas
repz
mov
jle
push
movs
ret
sti
push
imul
jg
rol
movs
xchg
add
out
sub
cld
pop
mov
jg
xchg
mov
mov
rol
dec
mov
ficomp
inc
repnz
push
sbb
(bad)
(bad)
xlat
adc
sbb
dec
(bad)
mov
cmp
outs
and
pop
mov
mov
rcl
push
ja
in
cli
ins
xor
cld
fcmovnb
cmp
cmp
das
xchg
(bad)
stc
out
jnp
or
or
shr
ja
das
dec
pop
cmp
popa
xor
aaa
cmp
(bad)
xor
mov
add
add
aaa
in
pop
(bad)
retf
jmp
mov
enter
lds
out
pop
lock
outs
test
imul
sbb
(bad)
or
call
jg
popf
shl
daa
(bad)
das
dec
gs
cli
retf
xchg
(bad)
(bad)
repz
(bad)
push
hlt
jp
outs
sar
pop
jg
mov
stc
div
std
sbb
add
dec
push
jecxz
xchg
(bad)
(bad)
cmp
and
(bad)
(bad)
cmp
repz
(bad)
mov
hlt
(bad)
mov
cld
call
repnz
pop
inc
aas
jmp
inc
jmp
call
call
jg
cli
call
call
(bad)
inc
jmp
inc
jmp
call
push
cli
call
imul
mov
mov
mov
inc
mov
je
adc
xor
lock
push
pop
mov
xor
movs
(bad)
aas
add
xlat
(bad)
mov
mov
mov
mov
mov
xchg
jg
ja
xchg
stc
int
gs
bound
(bad)
ja
aas
stc
cmps
jg
dec
dec
cli
icebp
(bad)
cld
cs
out
hlt
leave
fild
loope
repnz
rol
fisttp
push
and
adc
jmp
xor
sub
push
dec
add
call
(bad)
jnp
retf
das
clc
in
cli
ins
ds
xlat
jg
out
add
jecxz
and
xchg
jl
aas
std
push
lahf
cld
idiv
mov
jg
fstp
dec
lahf
cld
inc
mov
mov
push
cld
jle
fucomip
loopne
inc
repz
lock
leave
jmp
idiv
std
mov
sahf
xchg
lea
(bad)
mov
enter
(bad)
clc
cmp
cmp
(bad)
dec
mov
in
cmp
leave
jg
fld
movs
jg
inc
jmp
mov
call
(bad)
lahf
dec
jle
inc
adc
lock
jmp
dec
push
xlat
jb
shl
lock
dec
cdq
mov
xor
mov
call
mov
inc
push
mov
addr16
jmp
cmp
std
rcr
je
jg
xchg
icebp
imul
jg
scas
and
dec
fist
call
out
je
jle
xchg
(bad)
xor
int
jmp
ja
ror
sbb
idiv
in
daa
mov
cmc
aas
xchg
sbb
out
push
(bad)
xchg
call
(bad)
std
fild
in
fsubr
nop
out
adc
push
test
call
push
pop
cdq
lock
out
repnz
std
inc
pop
jg
mov
mov
stos
dec
jnp
mov
mov
stc
sti
fild
cld
test
aas
test
idiv
adc
inc
into
or
loopne
pop
adc
int3
idiv
sub
push
aad
(bad)
in
push
loop
fist
push
ja
mov
xor
retf
xchg
mov
cmp
cs
icebp
jg
dec
cld
pop
mov
loop
std
xor
loope
out
or
test
sub
jl
aas
call
or
pop
jp
cmp
jg
pop
lock
retf
out
(bad)
cmps
iret
jg
pop
push
clc
add
test
jmp
and
nop
(bad)
sbb
add
mov
(bad)
scas
ror
sub
mov
adc
fisttp
loope
dec
sub
cli
in
sub
cli
sbb
or
aas
and
dec
jle
cmp
adc
mov
cmp
push
mov
jg
xor
dec
xlat
xor
(bad)
jg
push
cmp
into
xchg
jmp
daa
mov
lahf
test
jl
(bad)
into
lahf
cld
xchg
mov
out
hlt
leave
jg
or
stc
(bad)
xchg
fisttp
push
mov
push
adc
cmp
leave
lea
out
pop
add
adc
std
adc
mov
cmc
(bad)
mov
xchg
jle
(bad)
cmovle
mov
out
adc
(bad)
mov
test
test
rcl
jle
xlat
xchg
clc
call
jmp
cmc
loope
push
mov
xlat
adc
sbb
and
je
les
inc
je
lahf
jnp
xchg
cmp
xor
and
std
mov
cld
dec
lahf
cld
cmps
les
jmp
jno
mov
loop
jg
call
add
(bad)
aaa
and
cld
lahf
and
clc
in
jmp
div
mov
xchg
outs
cli
in
aas
stc
out
jle
repnz
outs
dec
or
aaa
cld
in
jmp
adc
loop
(bad)
in
cld
jbe
sar
mov
sar
mov
xchg
cmc
adc
in
(bad)
shl
cmps
lods
push
and
das
icebp
psllw
(bad)
cli
(bad)
mov
mov
popf
sbb
push
bound
or
jmp
sub
es
pop
pop
jle
jne
(bad)
push
xlat
in
stc
mov
adc
test
out
dec
mov
(bad)
repz
rol
rcr
pop
std
sbb
adc
hlt
scas
and
jp
imul
ss
jg
mov
xchg
sbb
ins
cld
fmul
scas
jno
cld
mov
mov
iret
fild
jns
mov
add
ds
(bad)
pop
cli
in
movs
leave
call
(bad)
jmp
pop
(bad)
jg
push
clc
ins
jg
enter
fild
ins
inc
(bad)
or
loopne
in
clc
xchg
les
add
repz
sbb
push
mov
outs
mov
sbb
jle
or
adc
or
or
outs
das
inc
out
idiv
mov
outs
hlt
jnp
pop
adc
retf
cmp
ins
data16
mov
scas
and
and
in
outs
retf
pop
out
cld
push
mov
xor
repz
(bad)
jle
pop
out
push
xor
pop
dec
(bad)
(bad)
sti
jmp
aas
imul
outs
mov
std
call
in
mov
out
in
pop
mov
dec
mov
xchg
sti
fbld
xchg
dec
inc
cs
jl
inc
std
fsubr
imul
(bad)
outs
mov
repnz
cld
xchg
mov
xchg
std
scas
and
pushf
ins
mov
(bad)
jle
lahf
std
or
fcomip
xchg
jmp
mov
in
std
sbb
sti
in
jecxz
js
pop
mov
call
rol
call
fdivrp
lea
stc
adc
daa
inc
outs
sub
outs
dec
jg
fisttp
sbb
dec
rcr
in
stc
cmc
jg
pop
das
sti
pop
mov
jle
fistp
mov
hlt
xchg
pop
icebp
or
in
mov
xchg
xchg
cwde
(bad)
data16
xlat
pop
add
pop
cld
cdq
call
cld
sar
and
inc
stos
(bad)
(bad)
es
cmps
adc
mov
inc
dec
xlat
out
repnz
xchg
mov
sahf
inc
add
(bad)
adc
(bad)
dec
(bad)
jg
(bad)
dec
mov
fild
call
jmp
jmp
jmp
mov
hlt
pop
adc
(bad)
mov
aas
stc
dec
jg
xor
neg
std
sbb
jle
fcomip
xlat
gs
cld
dec
int3
in
or
dec
out
cld
leave
jg
push
imul
mov
sub
xchg
cld
pop
mov
dec
outs
scas
out
adc
push
pop
mov
std
cmp
aas
dec
push
std
mov
ja
scas
(bad)
cmp
and
xor
mov
or
jno
pop
icebp
xlat
pop
cmc
imul
cmps
std
sbb
mov
and
imul
icebp
scas
sub
mov
and
hlt
fcomp
mov
imul
sbb
(bad)
(bad)
(bad)
imul
lds
imul
sar
ror
jmp
mov
call
mov
hlt
into
dec
push
sub
aam
inc
or
mov
xchg
jo
push
iret
pop
sbb
ja
in
cld
add
dec
test
not
fwait
dec
pop
push
cdq
sbb
adc
pop
lea
xor
ins
push
cdq
fist
in
mov
fwait
push
in
push
call
jge
cld
mov
dec
cli
add
mov
out
dec
cs
and
(bad)
xor
hlt
retf
xrelease
(bad)
shr
mov
cmp
or
and
shr
daa
cli
push
jl
fist
std
popf
sbb
fistp
std
retf
mov
mov
outs
addr16
lahf
dec
out
mov
hlt
stc
jecxz
sti
xor
or
and
idiv
sbb
paddw
lock
xor
loope
mov
outs
(bad)
jmp
in
and
mov
jg
call
clc
rcl
(bad)
inc
sbb
out
sbb
icebp
stc
inc
ror
popf
cmp
outs
scas
cmp
push
cmp
mov
push
dec
and
cli
int
scas
sub
stc
cli
mov
inc
(bad)
jne
clc
pop
es
stc
out
cmp
xchg
xchg
xchg
movs
fisttp
shr
sbb
fwait
sbb
(bad)
mov
cld
popf
leave
call
jmp
gs
jg
dec
(bad)
cmps
fldenv
inc
(bad)
jnp
loop
cmps
lahf
(bad)
stc
out
int3
or
ja
movs
add
in
xchg
lods
and
fwait
test
lods
mov
mov
mov
out
out
into
mov
mov
retf
aas
test
xchg
(bad)
outs
hlt
iret
(bad)
aas
add
push
sti
gs
jecxz
in
stc
inc
nop
jns
xor
xchg
jecxz
cmp
cmp
sbb
out
jle
pop
test
je
pop
rcr
lock
icebp
adc
call
mov
pop
into
mov
dec
shr
sar
rcl
fisttp
xchg
pop
pop
cli
sub
enter
in
jo
pop
inc
or
mov
adc
push
mov
push
int3
sbb
push
(bad)
sbb
sbb
jmp
push
xchg
xchg
stc
int
dec
inc
sub
jle
dec
inc
pop
cmp
mov
cli
ins
aas
stc
out
jg
ret
xor
sbb
xor
mov
ffreep
scas
or
add
mov
or
sbb
out
std
sbb
xchg
push
and
daa
dec
dec
jo
push
jne
das
jle
push
adc
in
std
pop
rcl
mov
pop
std
add
mov
jg
(bad)
jmp
jle
jno
es
fnstcw
mov
call
adc
imul
(bad)
jmp
inc
adc
pop
in
not
adc
clc
sbb
aaa
and
pop
or
enter
inc
(bad)
call
mov
or
(bad)
(bad)
cld
fcmovnbe
mov
push
inc
mov
loop
mov
pop
jg
dec
(bad)
fstp
out
xchg
jg
mov
in
addr16
xor
cmp
mov
dec
cld
pop
mov
xchg
mov
std
outs
enter
add
aas
(bad)
ror
std
clc
outs
jmp
ret
daa
push
je
scas
lds
popa
push
rcr
fdivrp
pop
js
enter
loopne
std
mov
pop
adc
jno
fxtract
(bad)
mov
mov
aaa
arpl
(bad)
hlt
pop
inc
fcom
aas
repz
sar
ret
or
jno
loopne
pusha
inc
rcr
std
xor
sar
repz
(bad)
jo
ds
sub
out
retf
add
(bad)
shl
scas
jno
jg
fdivr
out
int3
jns
or
call
out
sti
in
aas
stc
(bad)
jg
mov
add
ja
jo
rol
fst
jmp
mov
adc
cmp
lods
stc
mov
jmp
cmp
or
fistp
call
or
push
out
aaa
jmp
push
hlt
les
dec
(bad)
jmp
jg
pop
add
jg
std
sti
xlat
rcr
inc
push
and
push
(bad)
sbb
cmp
call
out
aad
jl
not
mov
add
(bad)
jg
fcomip
xchg
aas
xchg
push
jmp
ror
neg
jmp
std
stc
pop
or
fild
sti
mov
mov
push
jl
jmp
adc
jge
pop
shr
arpl
repnz
mov
cmps
and
fwait
call
lock
scas
mov
xchg
add
aas
sti
xor
mov
idiv
xlat
nop
pop
jg
xchg
cli
fnstcw
dec
fcomip
(bad)
xchg
pop
inc
xchg
xor
fisubr
imul
lahf
cld
or
cdq
cmp
dec
jle
cwde
xor
call
add
mov
iret
jno
jmp
jg
sbb
outs
sti
sbb
jl
jg
mov
sahf
lock
mov
iret
inc
sahf
xchg
fimul
sar
pop
mov
(bad)
push
mov
call
xchg
addr16
js
jecxz
xchg
adc
shl
pop
retf
mov
mov
hlt
(bad)
jg
jg
sub
inc
cli
data16
ss
pop
(bad)
fstp
mov
les
ucomiss
mov
movs
je
sbb
jg
aaa
cmp
icebp
jg
in
jg
out
mov
dec
clc
neg
int
in
arpl
mov
mov
call
in
fisttp
inc
sar
(bad)
(bad)
call
inc
ds
stos
inc
js
(bad)
jmp
aaa
add
daa
xchg
mov
xchg
mov
popf
ds
fist
retf
push
and
jecxz
push
out
les
rcr
repnz
push
push
in
sbb
outs
hlt
sbb
inc
jmp
jle
(bad)
stos
mov
dec
call
neg
push
(bad)
(bad)
ja
push
mov
dec
or
or
retf
scas
icebp
sti
call
adc
popa
cmp
xchg
mul
std
call
rcr
popa
xchg
sub
cmps
inc
rol
inc
mov
popf
jg
dec
dec
std
ja
xchg
std
ss
xchg
scas
popa
addr16
mov
cmps
dec
sbb
dec
xor
rol
(bad)
sbb
lds
jle
mov
pop
cmps
shr
mov
hlt
(bad)
jg
jg
dec
stc
fld
out
lock
mov
iret
shr
adc
cld
iret
mov
mov
lahf
cld
cmp
cmp
(bad)
aam
push
mov
and
push
pop
sub
xchg
sbb
add
dec
(bad)
mov
je
xor
lock
jp
popf
pop
dec
cli
in
aad
dec
ds
dec
add
out
inc
cmp
sbb
lods
jno
and
fild
ins
rcr
adc
jecxz
adc
add
jge
(bad)
mov
(bad)
jbe
pop
mov
mov
popa
pusha
lock
jg
xlat
nop
and
je
push
mov
pop
sar
(bad)
fcomp
add
add
push
jg
dec
mov
stc
or
cmps
fcomip
xchg
mov
xor
jmp
mov
cld
xor
dec
and
pop
inc
repnz
dec
(bad)
fcmovnu
dec
(bad)
out
jg
pop
test
mov
rcr
pop
and
enter
outs
jg
pop
fdivr
popf
shl
mov
rcr
aaa
pop
retf
cmp
mov
and
dec
aas
retf
inc
fdivr
aas
(bad)
mov
jg
nop
inc
inc
stos
aas
mov
inc
stc
cmp
and
and
push
lahf
jge
(bad)
jmp
std
jb
aaa
mov
mov
add
jg
lea
mov
daa
jmp
out
dec
push
aad
inc
sbb
sti
fild
loope
inc
xchg
cmps
xchg
in
and
div
cld
in
std
in
shl
mov
sbb
shr
lods
adc
enter
xchg
(bad)
cli
bound
call
dec
ret
pop
ja
push
mov
cld
imul
jecxz
movs
cli
jmp
daa
inc
and
push
(bad)
stc
out
std
popf
in
mov
sti
xor
(bad)
test
(bad)
fdiv
dec
jg
cmp
xchg
or
aas
neg
repnz
fadd
or
in
les
jb
add
stc
mov
in
sti
dec
jle
adc
adc
(bad)
retf
mov
sub
push
push
or
int3
jle
cdq
pop
call
dec
jg
ror
(bad)
cmps
jl
(bad)
call
test
fimul
(bad)
xlat
nop
inc
popf
ins
out
ins
ins
cmps
cs
jo
sti
sbb
cld
arpl
cmps
adc
mov
pop
sti
add
hlt
movnti
xchg
lock
jno
inc
ja
sbb
dec
jmp
cwde
outs
mov
aaa
rcr
ins
sub
lock
std
dec
inc
pop
cld
cmp
mov
mov
mov
or
stc
fistp
cmp
sar
jmp
loop
fist
sbb
sbb
dec
sbb
outs
add
cmp
cwde
jg
call
stc
jae
inc
xchg
aas
adc
fxch
and
les
jge
(bad)
cld
into
hlt
out
hlt
mov
sbb
or
mov
mov
(bad)
sbb
stos
jle
pop
xchg
arpl
cmp
inc
push
push
sbb
outs
xchg
cld
dec
outs
sahf
das
fnstsw
jbe
out
push
cs
and
popw
clc
ja
arpl
push
xor
jg
out
and
lock
fs
cld
jmp
aas
loope
dec
(bad)
jge
or
sar
das
hlt
outs
cld
aas
cmps
jmp
jmp
push
sar
jl
or
or
stos
cli
fucomip
xchg
mov
and
stc
add
adc
fistp
ret
outs
sub
enter
loope
out
mov
adc
hlt
xlat
rcl
push
cwde
mov
aad
clc
cmp
call
loop
loopne
cmp
cli
mov
dec
clc
sbb
xchg
lahf
shr
sahf
lahf
lock
lods
cli
push
xchg
retf
dec
call
xor
clc
aas
call
(bad)
jg
(bad)
(bad)
std
rol
cmp
ds
lock
in
xchg
jmp
jecxz
jmp
outs
test
std
cmp
ss
xchg
adc
cmp
cmp
lods
push
xor
aas
pop
dec
out
and
dec
xor
daa
std
call
fistp
inc
std
mov
shr
in
pop
sbb
jle
sbb
call
fmul
pop
mov
adc
ss
cli
xor
add
ins
add
enter
imul
ja
in
in
icebp
mov
and
repz
mov
out
inc
dec
aad
enter
repnz
retf
shrd
mov
movd
repnz
inc
cli
stos
sar
jmp
shl
sbb
sub
aas
(bad)
(bad)
xor
and
call
dec
in
pop
jecxz
cli
aas
mov
jmp
cwde
jno
push
mov
enter
sbb
aas
stc
outs
jle
dec
dec
fistp
adc
sti
xchg
sub
imul
aas
xor
mov
dec
int3
mov
out
repnz
(bad)
(bad)
xchg
(bad)
fldcw
cli
xor
imul
inc
xchg
add
aas
push
(bad)
mov
inc
fwait
mov
lea
in
aas
arpl
shr
lahf
inc
cmps
loop
in
push
sub
mov
(bad)
call
mov
adc
xchg
inc
xchg
jno
in
mov
xchg
pop
out
popa
enter
mov
inc
test
ret
pop
mov
lea
cwde
xlat
xchg
mov
(bad)
fadd
leave
mov
push
ins
xor
jg
jmp
sbb
cld
or
inc
push
sub
(bad)
lea
(bad)
jle
dec
(bad)
jae
idiv
xor
sahf
jmp
ja
sbb
bnd
(bad)
sar
retf
sbb
jb
inc
repnz
aas
or
pop
push
cmp
(bad)
(bad)
stc
dec
push
jle
loopne
and
dec
scas
add
cmp
xor
sbb
sbb
(bad)
xor
in
or
push
cld
in
xchg
sti
ins
cmp
movs
adc
icebp
sbb
gs
and
neg
inc
in
jmp
addr16
adc
inc
addr16
popa
jg
or
icebp
add
push
push
jg
cmps
jg
(bad)
mov
bound
jle
sahf
add
xchg
mov
inc
(bad)
cmp
jmp
std
adc
ret
jg
imul
xlat
adc
mov
in
pop
mov
fistp
lock
(bad)
in
jg
into
mov
test
(bad)
sti
sbb
and
popa
xchg
nop
call
push
adc
data16
rol
jle
outs
retf
retf
and
data16
call
lods
lock
sar
pop
jg
cs
std
cwde
sar
mov
mov
cli
psubd
dec
push
jl
icebp
scas
and
xchg
(bad)
push
cli
loope
aam
lock
dec
mov
jmp
(bad)
(bad)
sti
in
pop
sbb
adc
mov
mov
dec
cli
out
mov
gs
nop
xor
xor
call
mov
aas
in
jle
in
jle
xchg
(bad)
fisttp
sahf
repnz
lods
stc
movs
pop
cmp
sub
sbb
xor
xchg
xor
into
xlat
loop
add
mov
push
jg
addr16
add
icebp
and
inc
jmp
and
dec
mov
nop
scas
or
fnstcw
jecxz
shl
test
cmps
hlt
(bad)
dec
dec
leave
outs
call
push
fs
mov
scas
cld
(bad)
pop
cld
mov
xchg
mov
movd
mov
inc
out
cmps
jecxz
fisubr
cmps
lahf
loope
add
repz
iret
repnz
stc
popf
pop
(bad)
xor
cmps
leave
imul
scas
(bad)
mov
shl
ror
add
rcr
mov
sar
nop
rol
or
jmp
call
scas
or
dec
(bad)
dec
fild
fistp
sar
sar
mov
imul
cmp
lea
ja
scas
lea
add
mov
add
push
ja
popf
dec
leave
daa
jg
xchg
dec
repnz
fcomip
imul
pop
and
in
add
pop
test
ja
shr
test
lea
jle
jmp
jmp
icebp
jmp
pop
cli
jge
fdivrp
icebp
jl
(bad)
inc
std
dec
mov
stc
or
sti
pop
jle
pusha
and
out
out
les
fdivrp
std
mov
mov
or
mov
in
lock
dec
enter
fistp
hlt
mov
sbb
jmp
hlt
pop
mov
outs
test
out
call
std
push
fisttp
cmp
xchg
mov
push
fnstsw
pop
jecxz
in
hlt
popa
call
stos
pop
test
(bad)
repz
shl
(bad)
out
sub
out
fild
xchg
xchg
mov
xor
mov
shr
sar
jecxz
sbb
jle
leave
xchg
add
mov
leave
aas
sti
(bad)
idiv
fsubr
xchg
outs
add
aas
and
(bad)
(bad)
xchg
adc
push
inc
repz
(bad)
push
imul
cli
mov
sti
pop
mov
dec
mov
loopne
outs
test
fidivr
outs
retf
xchg
div
popf
mov
dec
js
xchg
call
not
scas
(bad)
cmp
xor
push
fwait
call
outs
les
(bad)
xchg
dec
dec
jne
mov
addr16
dec
cld
xlat
std
ss
aad
cmp
mov
or
xor
(bad)
xrelease
cs
push
ret
fwait
and
adc
cld
(bad)
ins
(bad)
imul
xchg
outs
loop
fisttp
cmp
imul
mov
ds
gs
pop
cli
dec
rol
outs
stos
jl
retf
int3
repnz
mov
xchg
nop
test
lock
div
push
ficomp
(bad)
xchg
(bad)
jle
(bad)
mov
aad
call
fucomip
jecxz
or
cld
add
rcl
(bad)
mov
inc
cli
movs
push
cmc
cmc
cmps
lds
pop
push
jmp
xor
(bad)
xchg
mov
inc
cs
mov
icebp
sti
in
jle
and
std
ja
sub
cs
add
jge
cmp
(bad)
scas
mov
cld
dec
mov
(bad)
cmc
inc
mov
data16
stos
pusha
sahf
bound
push
mov
clc
(bad)
mov
cmp
adc
fs
push
add
stos
push
cmp
add
jp
loopne
jl
push
mov
jle
push
jmp
(bad)
and
int
mov
jg
leave
mov
stc
in
cld
xor
sbb
mov
sbb
jmp
add
out
inc
(bad)
jmp
std
(bad)
loop
jl
dec
popa
jmp
movs
ds
cli
fisttp
mov
daa
jg
push
or
mov
mov
sbb
jbe
push
div
jb
pop
repz
push
mov
aad
call
repnz
mov
or
aas
stc
imul
sub
ficomp
out
xchg
cld
ja
call
imul
xchg
push
adc
xchg
xor
outs
dec
(bad)
fisttp
leave
jmp
pop
arpl
(bad)
sub
mov
pop
and
out
cmp
clc
jne
mov
out
xlat
nop
push
out
mov
icebp
jle
rcl
mov
push
scas
mov
xor
fisubr
inc
sti
shr
test
(bad)
(bad)
jmp
iret
sbb
aaa
stc
cmc
jg
pop
das
sti
pop
jle
in
push
hlt
and
or
movs
cli
add
inc
push
hlt
addr16
out
sti
ja
mov
popw
or
lea
sbb
fwait
clc
popf
cmc
int
push
fbld
cwde
fnstsw
loop
fdivrp
(bad)
mov
mov
(bad)
pop
loope
out
out
ja
pop
mov
inc
popf
inc
inc
sti
cmp
icebp
cmp
xchg
lock
out
dec
out
jecxz
idiv
xor
sub
dec
mov
and
aaa
loopne
xlat
out
jecxz
sub
aas
sahf
add
outs
out
jecxz
cwde
jno
push
dec
adc
mov
js
in
bnd
std
push
sbb
es
loope
jae
xor
mov
ficomp
pop
test
and
aaa
cmp
data16
setg
(bad)
movs
aam
add
loopne
push
mov
pop
mov
add
call
out
jmp
(bad)
repz
loope
int
jecxz
inc
adc
repz
mov
cld
xchg
ds
pusha
imul
sbb
in
int
mov
dec
test
sbb
xor
setle
(bad)
(bad)
in
test
jp
in
cld
mov
aas
xchg
xchg
and
mov
sbb
pop
mov
aaa
mov
pop
push
cwde
dec
inc
push
mov
mov
add
push
sbb
dec
mov
out
pop
and
inc
cmp
(bad)
(bad)
das
std
out
inc
xchg
mov
or
fild
call
push
mov
call
sti
mov
lock
jecxz
imul
imul
aam
add
xor
iret
out
xchg
lahf
(bad)
sbb
sbb
out
hlt
xor
clc
in
mov
inc
lock
mov
push
cmp
xor
xchg
pop
mov
lahf
cli
sub
imul
fwait
pop
adc
mov
cmp
mov
jg
xor
popa
push
clc
cld
imul
hlt
sti
psubsb
jns
mov
jg
jle
fnstcw
pop
cli
popf
mov
cli
(bad)
jg
jg
mov
(bad)
(bad)
in
mov
stc
imul
hlt
stc
outs
push
xchg
sar
jg
pop
push
adc
das
call
inc
sbb
xchg
cwde
sub
dec
aad
fs
sub
inc
pop
add
xchg
mov
mov
and
xchg
jne
lea
sub
push
jmp
fwait
dec
(bad)
adc
cld
aas
mov
dec
mov
jecxz
stc
dec
ds
push
jle
fucomip
xchg
jg
ja
in
ds
addr16
dec
dec
in
dec
xchg
add
dec
dec
js
inc
xor
mov
xor
scas
and
std
cmps
mov
jg
jmp
call
fucomp
inc
mov
cmp
(bad)
jecxz
stc
xchg
jmp
ja
enter
ret
scas
clc
ins
or
mov
sbb
outs
inc
dec
xchg
dec
(bad)
arpl
in
fist
xor
outs
neg
inc
add
into
pop
inc
mov
add
dec
jecxz
or
sbb
xor
lock
jle
stc
sub
pop
dec
(bad)
cmp
addr16
addr16
xchg
scas
jle
pop
aas
sti
repz
es
outs
(bad)
(bad)
xchg
mov
pushf
and
repz
sbb
(bad)
(bad)
fcomip
(bad)
call
jmp
jo
xor
std
(bad)
aas
mov
(bad)
jg
xlat
nop
jmp
jg
std
call
mov
jg
scas
xor
xchg
xchg
cli
mov
inc
push
movs
mov
sbb
xor
mov
(bad)
cmp
pop
push
push
leave
(bad)
jmp
repnz
jle
mov
(bad)
mov
xchg
dec
(bad)
stos
fist
repnz
push
lahf
cld
pop
mov
int
mov
cmp
clc
mov
jle
mov
popf
(bad)
mov
mov
adc
push
bound
pop
add
lea
xchg
(bad)
xchg
jmp
ja
cmp
adc
or
fistp
in
cli
popf
aas
stc
iret
mov
lock
dec
push
ja
xlat
ror
adc
ror
cmp
inc
sar
mov
das
in
into
xor
daa
cwde
xchg
arpl
mov
(bad)
out
out
sub
call
and
aaa
sar
jmp
(bad)
fisttp
jmp
(bad)
dec
(bad)
fcomip
xlat
nop
pop
jg
fstp
push
pop
fidivr
mov
lea
fcomip
xlat
std
in
xchg
inc
cmp
xchg
out
xchg
mov
(bad)
sbb
(bad)
aaa
cli
sub
mov
lock
das
and
cld
inc
cwde
fist
cli
int
stc
ja
imul
repnz
push
jmp
aam
push
hlt
popa
les
arpl
mov
test
dec
ds
pop
jle
dec
inc
fucomip
xchg
(bad)
out
mov
in
(bad)
sbb
(bad)
jg
and
stc
outs
ret
retf
jmp
mov
scas
add
outs
ret
pop
call
lods
outs
sbb
mov
pop
scas
mov
int3
lods
loopne
sub
jmp
jg
scas
and
xor
xor
scas
mov
cmps
xor
mov
scas
icebp
dec
std
sbb
mov
(bad)
xor
(bad)
dec
les
fistp
xchg
sbb
inc
mov
fwait
fs
in
adc
inc
(bad)
jg
je
das
mov
push
push
or
and
loope
and
(bad)
jg
mov
aam
scas
in
retf
cli
std
pusha
xchg
or
xor
xchg
sbb
xchg
pop
test
stc
lahf
jle
pop
ds
int
(bad)
lahf
cld
out
sbb
out
push
mov
mov
jge
lahf
inc
jnp
inc
xor
call
dec
ret
sti
repz
sub
sub
test
(bad)
pop
call
mov
lahf
(bad)
mov
jg
and
(bad)
aas
adc
mov
xchg
(bad)
test
repz
outs
sar
stos
cld
repz
cmps
(bad)
jmp
nop
jnp
inc
imul
add
mov
js
push
sub
ja
(bad)
jg
pop
(bad)
(bad)
jle
(bad)
mov
xchg
push
jle
stos
inc
pusha
daa
mov
dec
in
bnd
jl
xchg
rcr
icebp
(bad)
jbe
cld
push
mov
les
sbb
mov
std
inc
fiadd
adc
mov
ins
dec
(bad)
cld
xchg
test
call
jg
lahf
cld
neg
mov
xchg
mov
lods
sahf
std
or
fcomip
xchg
(bad)
in
mov
in
(bad)
into
sar
xchg
clc
cmp
aas
jle
inc
iret
hlt
xchg
loopne
pop
clc
sti
lahf
test
ds
(bad)
dec
aad
fild
push
ret
push
xor
adc
loop
sahf
pand
clc
out
icebp
imul
(bad)
pop
imul
pop
jle
imul
fsubr
pop
stos
fist
mov
(bad)
lahf
cmc
imul
sbb
imul
jg
adc
jle
fstp
bound
add
outs
ds
pop
inc
inc
mov
scas
and
add
xor
or
dec
mov
cld
xchg
sbb
dec
(bad)
jge
test
ss
iret
mov
dec
mov
shl
cld
xchg
sbb
fist
mov
es
gs
lahf
mov
clc
jnp
das
mov
icebp
fwait
jl
retf
jle
mov
inc
in
lock
rol
pop
mov
inc
cs
or
mov
(bad)
fild
aas
mov
in
ret
pop
lahf
call
jl
mov
jg
and
sbb
mov
pop
(bad)
sti
jg
inc
jle
mov
mov
adc
mov
lea
jle
add
and
mov
shr
lds
imul
test
cmp
xor
jg
std
(bad)
out
cld
xor
cld
iret
hlt
(bad)
in
xlat
adc
call
cli
(bad)
jg
adc
inc
mov
sti
xor
adc
adc
or
scas
jae
adc
push
stc
popf
fld
mov
fisttp
arpl
ss
mov
jle
in
inc
pop
mov
mov
inc
and
sub
inc
aam
aaa
push
cmps
out
push
adc
cld
cld
data16
cld
aaa
mov
jmp
(bad)
mov
adc
outs
repz
jg
cmp
ret
ror
jg
fistp
in
outs
dec
scas
clc
sbb
adc
stos
call
iret
arpl
(bad)
(bad)
mov
adc
mov
push
int3
aad
repnz
pop
mov
repz
inc
fild
sbb
adc
lock
std
sbb
or
cmc
imul
mov
scas
scas
lahf
jecxz
fwait
jmp
jne
out
lock
dec
jno
push
mov
movs
fbld
and
std
cmps
lahf
cld
iret
mov
push
adc
lahf
(bad)
jbe
sar
adc
ins
fdiv
fild
inc
pushf
mov
xchg
mov
mov
xchg
out
ja
in
(bad)
ins
adc
std
in
sub
xchg
std
fbstp
out
imul
lahf
xchg
dec
push
cli
test
call
ja
mov
pop
cdq
clc
xor
push
cld
call
mov
mov
(bad)
mov
cmps
iret
sbb
stc
dec
jmp
sti
mov
mov
test
and
imul
hlt
(bad)
fist
ror
stc
scas
icebp
das
ins
xor
dec
sub
xor
mov
push
movs
je
fwait
popa
not
scas
and
dec
es
jmp
(bad)
sbb
mov
dec
repz
jmp
ss
cld
inc
mov
call
mov
in
(bad)
in
dec
int
cs
cld
xor
jge
(bad)
in
outs
clc
cmp
inc
pop
(bad)
cmp
stc
out
aad
fsubr
imul
add
xlat
nop
js
out
leave
out
repnz
cld
inc
pop
jg
fdivr
call
clc
adc
cmc
aas
cld
sbb
outs
(bad)
lods
fistp
shr
xor
cld
inc
in
ins
cld
into
(bad)
lock
cld
xchg
mov
out
pusha
pushf
outs
shr
dec
jle
fucomip
loopne
mov
mov
stos
inc
or
int
bnd
adc
scas
mov
(bad)
(bad)
mov
retf
outs
test
cld
idiv
icebp
jg
or
lock
lahf
rol
cli
mov
aas
pop
dec
pusha
sbb
(bad)
ja
pop
jle
cld
stos
int
xor
dec
jg
loope
mov
in
lahf
rcr
repz
(bad)
fisttp
std
fbld
jl
sbb
xor
mov
call
call
pop
inc
js
scas
cmps
iret
dec
ret
call
jg
std
jmp
scas
sub
cli
addr16
aas
cdq
dec
jg
std
(bad)
ds
jmp
hlt
(bad)
mov
call
xor
lahf
inc
(bad)
fbld
adc
jmp
es
sbb
jns
aaa
test
inc
xchg
mov
and
out
iret
call
movs
loop
xchg
fisttp
push
sbb
nop
push
dec
jmp
mov
int3
fs
dec
dec
neg
jge
das
adc
cld
repz
aas
dec
das
std
ret
mov
mov
fbld
js
dec
mov
or
jo
inc
and
jnp
sar
sub
cld
mov
mov
fild
jl
shl
shr
dec
clc
movs
lahf
cld
fstp
sub
icebp
cmp
cli
sbb
pop
cld
data16
cld
inc
aam
aaa
std
in
(bad)
sbb
xchg
push
inc
icebp
ja
jle
jle
aaa
pop
(bad)
sti
popf
(bad)
or
(bad)
mov
lea
jle
xor
dec
fdivr
cli
mov
(bad)
xchg
jmp
pop
lock
(bad)
dec
mov
std
mov
cld
idiv
dec
test
in
inc
adc
mov
int3
icebp
fisttp
jae
aaa
inc
vcvtsd2ss
mov
xchg
(bad)
sub
mov
out
std
add
jle
je
cld
ss
lock
scas
sub
xchg
scas
sub
sbb
ret
dec
add
xchg
cmp
imul
fcomp
call
ja
mov
ins
and
dec
or
and
ins
mov
leave
cmps
cmps
sbb
dec
jp
mov
xor
jmp
jge
out
adc
jmp
jno
mov
push
ins
jmp
jmp
ins
clc
mov
fdivr
clc
mov
adc
hlt
sub
mov
outs
pusha
add
retf
call
lahf
cld
pop
mov
ror
cmp
repz
jbe
inc
fsub
adc
xchg
fdivrp
sahf
stos
mov
sahf
or
movs
cmps
in
paddb
fist
loopne
xor
jl
inc
mov
pop
nop
inc
dec
movs
jg
std
mov
aas
adc
mov
out
clc
dec
or
out
add
fadd
xchg
lock
shr
push
in
mov
movs
jg
std
xor
cmp
add
xchg
fwait
sti
add
loope
aas
out
nop
sbb
js
cmp
mov
sbb
pop
xlat
cwde
push
cli
stc
mov
pop
jecxz
sti
xor
scas
shl
ja
or
mov
scas
mov
xchg
dec
sar
xchg
inc
clc
sub
in
jg
dec
(bad)
xchg
fisttp
(bad)
clc
lea
out
aaa
and
icebp
fcomip
fsub
mov
aam
push
hlt
push
cmp
(bad)
sbb
sbb
ins
push
pop
and
and
in
xchg
cmp
out
ror
int3
aaa
mov
popf
fistp
(bad)
xchg
pop
mov
dec
out
cld
mov
(bad)
cs
inc
push
hlt
mov
and
neg
mov
fbld
loope
out
xor
(bad)
cli
sbb
jg
call
fdivrp
call
jmp
popf
icebp
imul
push
out
inc
xchg
cli
sbb
imul
stc
std
mov
sub
dec
test
mov
xor
loopne
call
aam
sar
lahf
std
call
(bad)
pop
inc
test
pop
fisub
clc
sbb
inc
mov
cdq
or
cli
ret
pop
shl
repz
outs
dec
adc
into
push
xchg
retf
cmp
rcr
imul
mov
sti
hlt
arpl
in
xchg
jg
ja
pop
(bad)
icebp
clc
popf
jg
call
std
xlat
cmp
fdivrp
dec
stc
icebp
mov
mov
pushf
sbb
outs
cli
leave
jg
fstp
lahf
xchg
out
inc
pop
stc
out
std
add
inc
lods
daa
dec
leave
outs
and
aad
inc
jl
arpl
pop
aas
inc
jl
mov
push
test
sbb
clc
daa
rcl
pop
fist
ins
mov
cld
mov
push
out
mov
clc
gs
rcr
mov
adc
cmc
aaa
dec
mov
(bad)
(bad)
xchg
les
out
scas
icebp
jg
call
jg
scas
and
retf
jmp
dec
cmp
ja
aas
add
pop
mov
call
jmp
fnstsw
cmp
fadd
and
sbb
jle
pop
imul
(bad)
and
out
mov
adc
test
out
mov
in
(bad)
mov
mov
lahf
aam
int
mov
clc
in
dec
dec
cld
ss
mov
dec
cld
arpl
or
sbb
sbb
loopne
cmp
lods
inc
xchg
xor
(bad)
jle
in
push
mov
adc
dec
clc
fwait
adc
(bad)
(bad)
les
fisubr
mov
adc
fcomip
xchg
(bad)
cli
ja
loopne
jle
movq
pop
inc
setp
adc
dec
retf
mov
jne
pop
push
pop
nop
test
push
clc
jg
jle
mov
push
fcompp
push
mov
mov
jl
ja
cmp
sub
(bad)
mov
fdivr
ss
fsubr
jg
xlat
nop
(bad)
out
cmp
(bad)
aas
icebp
imul
mov
out
cmps
(bad)
cdq
cld
mov
aas
inc
pop
inc
xchg
lds
inc
std
stos
pop
inc
hlt
add
(bad)
jmp
pop
loopne
(bad)
aaa
mov
in
dec
lock
xor
xchg
jl
cs
js
fdivr
sbb
jns
mov
xchg
icebp
(bad)
enter
ds
ja
mov
cmp
cli
xchg
jle
in
jo
pop
mov
jg
fnstenv
test
std
jg
sbb
mov
dec
rcr
cwde
fsub
mov
in
jmp
enter
and
xchg
jmp
leave
jg
mov
aas
fwait
or
jns
scas
cld
mov
ins
adc
inc
rcr
cli
adc
das
sbb
dec
pop
jbe
mov
hlt
imul
loopne
stc
xor
jg
adc
push
(bad)
repz
fyl2xp1
retf
cmc
out
repnz
jg
int
(bad)
jg
push
pop
(bad)
mov
fistp
xchg
mov
iret
dec
ret
imul
mov
test
fdivr
push
sti
fwait
nop
xchg
sti
dec
ds
lahf
jg
scas
jno
call
stc
movd
or
add
lahf
shl
mov
adc
ss
xor
cli
or
jmp
mov
jae
cmp
ds
mov
dec
dec
cld
(bad)
dec
mov
adc
mov
pop
mov
imul
cmp
ret
dec
(bad)
(bad)
dec
mov
adc
ret
mov
pop
cld
push
aam
(bad)
(bad)
xor
pop
inc
bound
dec
jmp
dec
jle
adc
(bad)
call
cwde
ficomp
fiadd
jle
cli
push
xlat
xchg
xor
push
cli
ds
call
ds
xor
test
fadd
sti
ds
std
jg
xlat
jo
(bad)
pop
inc
pushf
aam
and
and
jg
push
dec
add
outs
dec
(bad)
icebp
outs
hlt
leave
mov
inc
or
daa
push
outs
sti
leave
aas
inc
call
and
stc
outs
sub
aaa
pop
repz
scas
nop
out
and
cld
rol
std
mov
sub
std
or
std
neg
sub
pop
lock
jg
cmp
cmp
sbb
jmp
xchg
jmp
out
inc
in
jle
ror
pusha
cli
jle
push
arpl
stc
cmp
fisub
les
adc
call
ret
inc
jo
nop
sahf
(bad)
bound
jg
(bad)
cmc
jg
in
or
in
xchg
stc
cld
in
mov
jmp
inc
pop
mov
aad
fild
aad
dec
mov
(bad)
ret
jg
repz
mov
sbb
repnz
loopne
(bad)
clc
xlat
adc
jmp
push
sti
xor
mov
push
rol
(bad)
mov
mov
call
ins
jle
std
in
scas
bound
aas
cmp
addr16
sti
xor
(bad)
fistp
outs
out
sub
daa
dec
outs
repz
jg
cmp
out
std
mov
in
js
icebp
push
stos
(bad)
xor
xor
add
or
push
cmc
mov
arpl
push
cmp
mov
mov
and
ret
imul
ja
test
cli
pop
ret
hlt
cld
push
lock
int
lea
or
cli
lahf
sub
movs
dec
jle
fild
sar
pop
inc
repnz
mov
add
jo
out
mov
(bad)
push
push
mov
mov
mov
out
clc
sbb
jbe
hlt
dec
pop
jecxz
cwde
and
mov
ss
and
imul
jle
and
outs
mov
(bad)
sar
inc
mov
pop
mov
sbb
fistp
push
stc
jno
xchg
jo
push
repnz
ds
mov
out
ins
aas
stc
outs
dec
movs
adc
sub
(bad)
cmp
cmp
icebp
sbb
in
jle
mov
shl
out
scas
sub
loope
ror
loope
pop
pop
pop
push
pop
or
and
pushf
out
cld
imul
(bad)
(bad)
(bad)
aas
call
pop
sar
jmp
cmps
loop
std
jbe
mov
jge
outs
in
xchg
cmp
and
push
xchg
push
idiv
ja
in
fistp
jle
mov
jg
jb
jg
dec
(bad)
in
(bad)
xchg
jg
mov
in
push
sub
mov
int3
shr
cmc
std
ja
inc
(bad)
arpl
popf
jg
(bad)
idiv
cmc
fistp
dec
cmp
mov
mov
mov
call
std
sti
mov
cwde
dec
loope
std
ss
mov
(bad)
repz
pop
lock
int
mov
in
lock
aad
mov
mov
jmp
add
inc
hlt
fsubr
mov
sbb
pusha
daa
loopne
adc
clc
pop
and
out
pop
repz
(bad)
jmp
sbb
rcl
data16
(bad)
in
xlat
adc
lahf
cli
xor
mov
push
mov
jns
xchg
dec
out
bnd
bound
in
shr
pop
loope
mov
loop
jno
ja
call
lahf
in
(bad)
jle
add
icebp
mov
or
jle
repz
sbb
mov
or
pop
xor
mov
fldenv
call
cmps
cmp
ins
mov
std
std
out
xchg
mov
pop
pop
mov
mov
pop
nop
and
ds
outs
jle
dec
dec
pop
lock
jg
cmp
cwde
inc
jmp
imul
or
mov
dec
std
add
jg
imul
dec
jl
(bad)
xor
dec
and
xor
fbld
cmp
aas
inc
jmp
mov
add
hlt
adc
inc
jb
nop
mov
sahf
(bad)
(bad)
sti
call
and
sbb
cli
or
lock
jg
add
add
cmp
pusha
jg
push
pusha
pop
pop
jmp
push
in
push
sbb
sbb
bnd
sbb
fwait
adc
lods
adc
aam
enter
(bad)
mov
in
lock
mov
mov
cli
push
enter
mov
aad
(bad)
fidivr
pop
shr
cmp
lods
fwait
sbb
mov
inc
(bad)
xchg
jg
std
sbb
(bad)
call
std
call
call
(bad)
mov
pop
jle
scas
movs
ins
mov
xchg
aam
inc
repz
mov
sub
push
pop
push
push
test
push
pop
cmp
push
repnz
pop
jl
lea
(bad)
es
icebp
lahf
adc
mov
std
push
lahf
cld
jmp
xor
aas
inc
xchg
out
inc
xchg
es
repnz
mov
mov
(bad)
fucomip
sub
jg
sbb
mov
repnz
dec
cmp
cmps
and
jmp
dec
sar
hlt
int
cmps
dec
pusha
test
into
dec
pusha
xchg
cdq
push
stc
ins
and
pusha
(bad)
cwde
pop
mov
lods
fist
cwde
sub
inc
cdq
pop
leave
cmp
fwait
and
test
dec
loope
fdivrp
pop
or
(bad)
sar
pop
daa
or
mov
cmp
mov
mov
mov
cli
call
pop
repnz
push
jb
fild
adc
jmp
cli
call
and
pop
dec
(bad)
call
out
pop
imul
jg
std
add
cmps
std
sbb
pusha
pop
icebp
cld
sub
repz
setns
xchg
fucomip
xchg
aas
adc
cmc
das
out
xor
cwde
call
push
xlat
call
inc
sbb
loope
int
jmp
nop
mov
(bad)
ds
out
imul
jg
or
mov
ins
mov
das
clc
in
(bad)
sbb
add
or
(bad)
xchg
sub
je
sub
cwde
sbb
dec
dec
(bad)
mov
or
jbe
cwde
cld
cmps
adc
cld
data16
adc
add
cmc
fild
lods
iret
xchg
jno
ins
test
fwait
dec
(bad)
jge
in
loopne
repnz
and
jl
jmp
mov
or
cdq
(bad)
ffreep
mov
push
enter
jmp
es
pop
mov
loope
gs
ret
hlt
ret
loop
fdiv
xlat
(bad)
sbb
pop
std
and
pop
push
in
shr
mov
jg
cli
jmp
imul
aas
sbb
(bad)
sbb
xor
cmps
adc
sbb
stc
mov
fadd
stos
(bad)
lods
pop
inc
repnz
enter
hlt
(bad)
mov
shl
shl
fnstsw
cld
imul
sar
in
mov
pop
icebp
pop
stos
xchg
repz
and
stc
leave
mov
cld
(bad)
lahf
cld
imul
daa
(bad)
cld
outs
sti
leave
aas
inc
push
cli
dec
push
cmp
and
std
ss
sti
fcomi
outs
(bad)
in
jmp
pop
outs
or
or
mov
fist
rol
and
pop
repz
adc
fcom
xor
outs
daa
retf
and
icebp
sbb
out
std
dec
lahf
cld
fild
lea
mov
data16
inc
outs
mov
hlt
arpl
sti
pop
stos
std
popf
fdivr
mov
jmp
and
or
jg
outs
xchg
loopne
pop
loope
lahf
mov
fsub
jg
clc
leave
mov
sbb
fistp
xchg
(bad)
jmp
adc
add
add
shr
sar
jg
in
lock
xlat
adc
add
add
icebp
fwait
lock
rcr
movs
out
(bad)
and
(bad)
sub
pop
inc
jg
pop
cmp
push
jmp
mov
cmp
cld
fs
cwde
xchg
std
in
test
mov
push
test
out
mov
cmps
dec
inc
fild
test
mov
in
xchg
aaa
cmps
sar
mov
in
push
cmp
jmp
jg
scas
push
or
call
into
push
(bad)
ins
aad
dec
in
push
add
out
inc
pop
repz
std
cs
push
push
(bad)
sub
stos
mov
repz
jmp
pop
(bad)
popf
aas
stc
(bad)
adc
mov
stc
mov
lods
in
ja
adc
in
mov
pop
(bad)
fistp
jmp
inc
jg
jg
scas
dec
xchg
sti
ja
lahf
lods
dec
int3
(bad)
sbb
lahf
mov
sbb
scas
and
ret
stc
jmp
xlat
nop
test
jg
jns
xor
add
inc
(bad)
sti
jnp
or
(bad)
jg
dec
(bad)
ins
hlt
ud0
bound
into
fbld
std
outs
inc
mov
inc
repz
outs
and
rcl
inc
rcl
scas
add
mov
mov
cld
in
inc
out
mov
push
in
mov
mov
fist
daa
inc
out
cwde
cld
into
call
lahf
sbb
in
jg
or
movs
pushf
xchg
iret
cld
int
add
ja
cmp
(bad)
lds
neg
lock
cld
cli
mov
cs
xchg
aam
sub
jg
add
das
ret
xor
(bad)
bnd
clc
imul
bnd
mov
cli
cmp
fldcw
push
inc
or
call
imul
xlat
cld
sbb
jg
xlat
adc
stc
xor
(bad)
cli
pop
inc
mov
jae
std
outs
shl
arpl
jg
fistp
movs
movs
cmp
inc
xor
loope
sbb
sub
pop
lock
jg
cmp
xchg
ds
mov
sbb
sbb
mov
or
xchg
inc
add
mov
jg
ss
mov
push
scas
and
cdq
addr16
pop
jecxz
push
sahf
std
pop
jle
retf
mov
ja
jp
outs
jecxz
clc
xor
mov
hlt
(bad)
mov
ret
cli
call
imul
push
sub
jle
jns
rcr
cwde
cmc
aas
mov
and
cld
pop
jge
cmc
or
mov
mov
fnstsw
(bad)
ins
mov
fwait
and
pop
mov
xchg
int3
retf
cs
out
hlt
leave
jg
sub
loopne
xchg
pop
out
jecxz
xlat
repnz
push
aaa
sbb
and
pop
inc
pusha
jg
dec
or
push
pushf
ins
(bad)
in
add
jg
ins
or
in
cmp
sti
in
stc
dec
into
inc
jge
jno
mov
jmp
imul
jmp
dec
sub
inc
imul
sbb
jg
icebp
cld
mov
(bad)
ja
lods
mov
addr16
jle
fwait
(bad)
cli
std
jg
mov
jg
mov
loope
aas
inc
mov
pop
cmp
sbb
(bad)
mov
add
(bad)
dec
imul
aam
mov
push
push
jge
(bad)
sbb
ret
inc
lock
repnz
jbe
mov
inc
mov
or
mov
shl
inc
dec
xchg
icebp
jg
dec
hlt
add
cld
in
outs
jg
out
fild
push
jl
mov
dec
jg
pop
jecxz
xor
ds
xchg
rcl
and
sbb
shl
(bad)
dec
std
sbb
or
shr
shr
adc
loopne
lahf
(bad)
out
cmps
sbb
pop
pop
iret
pop
jmp
pop
push
mov
cdq
test
xchg
sub
std
push
fs
jle
dec
(bad)
mov
mov
dec
(bad)
cmc
fcomip
xchg
jg
mov
jle
out
jmp
dec
shr
ror
jns
cmp
imul
lods
or
hlt
cld
lea
repz
in
(bad)
das
adc
push
inc
jmp
mov
hlt
cmp
(bad)
add
fistp
mov
test
mov
and
mov
sbb
push
ficomp
add
std
pop
mov
add
hlt
scas
sar
dec
jle
mov
js
jbe
add
xchg
jg
scas
and
xlat
fcomip
xlat
adc
jg
mov
ja
lea
xor
sbb
push
jns
push
data16
stos
mov
fwait
lock
and
sub
out
movs
(bad)
(bad)
mov
ss
sub
add
jge
cmp
out
pop
jl
pop
dec
icebp
jg
jbe
sub
cmp
sub
sbb
(bad)
jg
ss
das
cld
jne
lea
clc
test
scas
popa
cld
ret
xlat
nop
clc
adc
cmc
sbb
dec
mov
sub
(bad)
jmp
fcmovbe
pop
clc
imul
ror
aas
repnz
adc
add
or
inc
les
js
lahf
add
jl
jg
div
xor
repnz
or
ret
das
xor
mov
loop
pop
mov
mov
pop
nop
adc
int
push
inc
lahf
cld
xchg
mov
fistp
mov
sahf
(bad)
sub
add
inc
cld
push
xchg
xchg
jle
scas
jns
push
loop
xchg
jne
jmp
(bad)
nop
icebp
add
ret
mov
sub
inc
icebp
push
pushf
into
es
and
fdivr
cdq
cmp
retf
inc
and
not
inc
pop
lods
adc
mov
lea
jb
sti
fcomi
pop
(bad)
mov
push
mov
mov
add
adc
cli
adc
push
inc
inc
rol
jg
ret
les
pop
inc
(bad)
cld
ins
push
test
fst
jmp
or
jae
mov
hlt
xlat
xor
aas
(bad)
sbb
fnstsw
mov
xchg
jp
xor
jmp
cld
xor
rcr
xchg
mov
scas
sub
xor
jg
popf
idiv
cli
xlat
adc
ret
jg
std
dec
call
out
mov
push
push
lods
adc
enter
popf
lahf
sar
out
(bad)
sbb
sti
lods
xor
push
xchg
fistp
inc
mov
dec
loop
cmp
sar
cmp
leave
mov
dec
sar
inc
jle
aas
and
out
jg
ret
inc
lea
pop
movs
repz
push
les
out
int3
(bad)
mov
aas
mov
adc
sbb
std
(bad)
inc
dec
pop
mov
or
xchg
mov
jbe
shl
xor
out
leave
ss
xchg
push
cli
retf
sar
lds
lods
lock
mov
cmc
mov
cs
(bad)
jmp
dec
mov
jmp
add
pushf
ret
mov
les
std
call
sar
mov
pop
inc
sub
(bad)
dec
ret
repz
adc
jmp
sbb
xor
ficom
xor
add
lds
leave
dec
cmp
fdivr
ja
in
clc
add
add
int
sub
ret
daa
mov
pop
xor
(bad)
loopne
inc
dec
ds
ins
mov
outs
xor
outs
repz
(bad)
mov
push
jg
jmp
call
jno
adc
nop
sti
sbb
(bad)
fucomip
xchg
call
pusha
loopne
clc
in
nop
mov
mov
out
pop
jmp
test
js
stc
daa
iret
and
add
mov
xlat
adc
imul
sahf
mov
adc
jno
mov
sub
mov
outs
call
jle
aaa
test
sar
(bad)
aaa
push
inc
jg
fist
dec
sub
into
adc
std
(bad)
lahf
cld
ja
ret
daa
push
out
cld
leave
jg
cmp
lahf
(bad)
not
inc
stos
rol
scas
(bad)
outs
dec
dec
mov
mov
loopne
xchg
or
mov
sbb
retf
lock
hlt
out
cli
mov
xor
jmp
xchg
mov
out
or
(bad)
(bad)
pop
out
imul
pop
mov
movs
sbb
lahf
movs
(bad)
dec
mov
ret
and
xchg
sbb
fsubr
(bad)
(bad)
lahf
call
xor
lahf
cld
mov
in
ja
bound
jge
(bad)
std
test
(bad)
sti
(bad)
xchg
jmp
mov
mov
and
pop
dec
cmp
(bad)
sti
popf
jle
adc
jno
in
(bad)
push
dec
(bad)
outs
mov
scas
loopne
lahf
xor
(bad)
bound
pop
mov
outs
xchg
lahf
pop
out
clc
popf
(bad)
cld
cld
cwde
retf
add
std
cmc
daa
mov
imul
std
std
mov
jle
pop
leave
cmpxchg
or
lods
sahf
leave
cmp
in
jle
pop
enter
and
xchg
pop
sbb
outs
inc
and
js
mov
popf
jle
js
add
cli
out
mov
sub
inc
nop
sbb
test
in
ja
cmp
ficom
clc
mov
inc
out
mov
cmp
in
aas
jne
icebp
(bad)
scas
cld
xor
sti
or
enter
std
imul
test
repz
movs
mov
stc
sbb
les
fwait
mov
mov
or
fistp
rcl
cli
in
fist
loopne
arpl
fstp
cmp
add
jb
sbb
mov
inc
test
pop
jnp
jg
mov
ds
imul
dec
cld
imul
jg
repz
std
out
cwde
dec
xor
cli
xchg
jle
or
or
add
sbb
jbe
jp
xor
(bad)
mov
call
push
xchg
test
div
movs
mov
js
(bad)
fild
push
xchg
xor
xor
loop
nop
nop
mov
dec
nop
(bad)
xor
xchg
enter
ja
adc
adc
mov
pop
xchg
stc
pop
and
cmc
cmp
sbb
mov
mov
cld
mov
mov
out
stos
(bad)
inc
sbb
adc
iret
jns
mov
cwde
jge
loope
stc
ja
xor
push
lahf
cld
out
pop
icebp
stc
popf
cmp
sti
cmp
cwde
jg
ss
icebp
ja
mov
jmp
xor
shr
jle
push
mov
pop
jmp
leave
jg
leave
(bad)
mov
lock
cld
fist
aas
fidivr
jle
jecxz
push
fistp
test
call
(bad)
xor
jg
fld
(bad)
ds
cmp
sti
sbb
daa
rcr
adc
test
fmul
xchg
pop
and
ror
pop
loopne
and
pop
repnz
ret
or
jae
out
push
stos
adc
mov
stc
sbb
(bad)
pop
mov
fistp
test
loope
clc
lock
loope
mov
pop
mov
fst
(bad)
cmp
pop
push
daa
fsubr
loopne
and
mov
loop
add
adc
and
std
bnd
pop
stc
cmp
fild
std
fstp
(bad)
mov
call
jnp
mov
(bad)
(bad)
clc
xlat
call
cli
imul
jg
jle
(bad)
mov
mov
cwde
jns
in
in
cmp
jae
inc
add
popa
mov
pusha
cmp
clc
cmp
in
std
in
jne
and
movs
leave
outs
dec
jg
cmp
lahf
sub
push
inc
std
xchg
mov
cmc
sbb
jl
jg
and
mov
(bad)
fbstp
mov
scas
jle
mov
mov
call
sbb
in
lahf
hlt
imul
bound
or
clc
idiv
ins
push
std
cmp
inc
dec
lods
mov
out
in
cmc
ja
retf
jmp
jl
jae
cmp
mov
lds
out
jmp
sub
jmp
mov
(bad)
inc
pop
std
sbb
lahf
dec
(bad)
dec
cli
call
cli
imul
pop
arpl
xchg
sahf
repz
leave
mov
jnp
fistp
(bad)
ins
clc
cli
pop
rcr
fldcw
in
jecxz
(bad)
in
pop
cmp
xor
pop
in
xchg
push
int
cmp
aaa
jg
inc
dec
in
add
sub
cli
out
ss
jmp
sbb
iret
outs
call
dec
not
or
cmc
inc
(bad)
hlt
sti
sar
mov
hlt
dec
fucomip
xchg
jg
fcomp
jle
pop
inc
je
stc
push
lahf
cld
aad
add
xchg
dec
sbb
sub
fcmovnbe
bound
jno
jb
pushf
jp
sbb
mov
call
dec
imul
mov
leave
fcmovnb
enter
jg
std
jmp
xchg
(bad)
call
in
jmp
popf
(bad)
aaa
(bad)
in
cld
sbb
bound
jle
cmp
cld
mov
addr16
jmp
jg
scas
and
out
cld
xor
(bad)
jl
dec
hlt
lock
lahf
add
pop
add
dec
hlt
fild
dec
arpl
shr
mov
xor
cwde
test
jle
mov
cmp
xchg
rcr
inc
fistp
(bad)
lock
and
jmp
popf
nop
ins
jns
mov
jg
fs
dec
arpl
repz
jbe
xor
std
sbb
pop
pushf
jg
cld
repz
(bad)
(bad)
add
fistp
aas
lock
or
pop
mov
retf
jle
mov
(bad)
(bad)
jecxz
enter
iret
mov
jmp
loop
rcl
mov
(bad)
(bad)
sbb
es
or
push
stc
jle
pop
jmp
add
push
inc
mov
mov
in
std
sub
adc
in
lock
rcr
out
rcl
sbb
sbb
dec
xor
mov
sbb
mov
out
movs
(bad)
push
cli
sti
out
sti
imul
out
lock
std
imul
(bad)
movs
xchg
(bad)
(bad)
std
lea
push
(bad)
(bad)
sti
cmp
outs
shl
popf
fsub
and
cli
ins
cwde
push
mov
outs
repz
jg
cmp
popf
popa
xchg
push
repz
inc
jle
mov
sti
fwait
test
out
int3
lea
and
push
inc
stc
outs
mov
jg
hlt
xchg
sub
retf
mov
popf
mov
push
mov
sar
mov
jle
fild
retf
outs
mov
lahf
(bad)
call
jle
clc
xchg
adc
clc
mov
or
test
nop
pop
push
lahf
adc
adc
inc
add
(bad)
hlt
sub
retf
sub
ds
bound
fistp
aaa
lods
loop
inc
(bad)
aaa
imul
mov
sub
cdq
jecxz
inc
hlt
retf
shl
jns
movs
lahf
pusha
lods
popa
push
rol
out
adc
jg
jbe
in
fistp
shr
mov
pop
std
into
stos
mov
cmp
mov
(bad)
xor
jns
sbb
sbb
rol
inc
call
jmp
into
and
mov
lds
xchg
and
fist
je
pop
int3
xor
pop
jl
mov
imul
adc
jg
mov
(bad)
pop
js
xchg
inc
mov
xor
sub
mov
mov
repz
out
push
mov
jmp
shl
sub
dec
scas
add
sbb
mov
clc
cmp
mov
and
jo
jg
xchg
mov
mov
or
or
fistp
xchg
cmc
mov
lods
mov
das
jle
sbb
mov
outs
dec
jl
imul
addr16
addr16
mov
daa
jmp
fisttp
ret
out
out
mov
cmp
scas
and
(bad)
push
mov
jmp
(bad)
cmp
and
dec
cld
dec
lock
xor
xchg
fwait
dec
jmp
or
jg
and
xchg
js
cmc
ja
xor
rcr
and
mov
retf
pop
xchg
call
dec
xchg
and
call
(bad)
sbb
(bad)
clc
or
rol
repz
jg
imul
cld
xchg
fwait
jmp
pushf
lock
popf
cdq
push
jg
test
repz
jmp
les
adc
sub
cmc
int
cmovl
cmps
(bad)
sbb
or
pop
cmp
pop
out
std
imul
out
cld
ins
dec
mov
fisttp
xchg
pop
jecxz
(bad)
xor
hlt
xor
ds
lahf
cld
imul
mov
mov
hlt
xor
loope
pop
jmp
inc
xchg
mov
fincstp
aas
out
ja
xchg
clc
fcomi
and
push
pusha
in
jmp
and
int
mov
shl
pop
aas
popa
ficom
fwait
std
cmp
pop
bound
outs
cmps
mov
scas
std
jmp
jg
dec
cli
mov
add
call
(bad)
jg
imul
jno
aas
pusha
mov
inc
inc
xor
shl
pop
cli
scas
cli
jno
pop
(bad)
jle
call
ret
xlat
out
call
jle
mov
push
jecxz
and
shl
daa
retf
mov
sti
pop
mov
mov
adc
out
fild
inc
int
das
jecxz
popf
jle
fbstp
shr
pop
(bad)
mov
into
pop
inc
jg
lahf
repnz
sbb
jle
not
xchg
mov
cmp
in
ins
jl
fisttp
cld
push
add
mov
popf
jecxz
int
int3
dec
in
(bad)
mov
shl
mul
fbld
(bad)
fwait
xor
jg
es
mov
xor
into
das
sti
jne
lea
(bad)
jg
xchg
(bad)
aas
hlt
xlat
adc
leave
sar
lahf
cli
xor
pop
cli
sbb
cld
mov
test
pop
dec
dec
(bad)
mov
aaa
add
and
jg
ins
ds
out
jmp
stc
ins
les
out
and
hlt
mov
das
xchg
(bad)
(bad)
jle
mov
ja
stos
stc
sbb
out
inc
outs
movs
scas
call
addr16
aam
(bad)
fmulp
cmps
hlt
jmp
adc
iret
hlt
mov
jmp
mov
stc
imul
mov
pop
push
jne
sti
hlt
gs
mov
jne
iret
push
jno
repnz
pop
stc
imul
xchg
push
scas
and
movs
stc
ret
jle
xchg
adc
xor
push
jmp
dec
jmp
clc
xor
test
lods
fild
(bad)
clc
cmp
(bad)
mov
daa
inc
outs
dec
lods
and
xchg
fistp
jg
leave
outs
jmp
outs
mov
mov
jg
in
jg
mov
(bad)
xlat
xchg
jmp
xchg
(bad)
mov
test
repz
loop
inc
(bad)
call
(bad)
sbb
xchg
scas
(bad)
ja
out
and
clc
dec
cmc
xor
xchg
and
cld
outs
mov
pop
jle
mov
std
sbb
jnp
mov
daa
adc
jg
push
adc
test
cli
fstp
pop
std
jbe
cld
sti
add
ja
js
mov
outs
bnd
es
pop
std
jo
pop
xlat
sub
pop
addr16
shr
retf
mov
sti
fwait
cld
cmp
iret
or
add
(bad)
imul
repz
jg
add
in
ret
jl
outs
std
sti
test
jp
sbb
dec
lahf
repz
imul
mov
sti
ds
stc
stos
inc
dec
dec
push
retf
pop
and
ja
dec
or
xchg
in
scas
test
ret
jle
and
sti
mov
pop
and
jg
cmps
cld
das
xor
push
cmp
std
sbb
out
test
out
(bad)
into
or
sbb
inc
fdivrp
popf
ret
pop
not
clc
pop
jle
push
xchg
mov
or
jmp
push
rcr
arpl
(bad)
sbb
shl
sbb
mov
jmp
js
or
dec
in
inc
retf
jle
(bad)
ds
out
dec
das
call
(bad)
(bad)
in
ja
in
push
cwde
mov
push
sbb
pop
push
sar
or
test
pop
ja
ss
in
fisttp
icebp
scas
shl
jmp
icebp
rol
and
call
mov
mov
fsub
repz
sbb
jle
rcr
icebp
cmp
in
mov
je
lds
fsubrp
xchg
rcr
in
vcvtsd2si
lock
push
ficomp
fsubr
mov
mov
ja
mov
adc
cmp
jmp
and
jecxz
cli
imul
cmp
ja
jnp
ja
mov
jmp
cmc
rcr
sub
add
sub
fistp
popf
sbb
cld
or
outs
cli
imul
call
jb
inc
jecxz
fist
push
dec
cmp
xlat
fcomp
call
cld
pop
mov
pop
sar
int
fst
je
movs
hlt
dec
(bad)
mov
js
dec
and
jle
add
or
jg
scas
mov
inc
ret
scas
jg
mov
rol
ror
push
rcl
not
cmp
aam
cmc
icebp
cmp
mov
or
mov
(bad)
scas
ret
inc
das
push
cwde
cmp
cmp
sti
xor
and
repz
mov
int3
jle
lahf
jb
cld
ss
jle
inc
xchg
dec
(bad)
ss
jmp
adc
retf
(bad)
imul
scas
inc
repz
mov
in
mov
daa
mov
xor
in
cld
mov
in
lods
aas
push
pop
cld
dec
xor
ja
(bad)
repnz
dec
hlt
out
scas
mov
icebp
cmp
rol
fisttp
or
test
xor
lods
aas
push
fst
pop
jg
clc
or
mov
idiv
fcomp
out
jg
mul
(bad)
shl
and
(bad)
ffreep
int3
std
pop
pop
int3
std
lds
bound
lock
pop
out
(bad)
js
fidivr
icebp
mov
popa
clc
in
cli
mov
in
jmp
jmp
sbb
stc
jmp
iret
jg
pushf
push
(bad)
daa
jg
xchg
pop
jbe
or
loopne
jg
ret
lock
adc
out
std
sbb
inc
hlt
mov
add
jmp
cli
neg
cli
ret
add
mov
rcl
inc
mov
popf
cwde
adc
aas
stc
imul
aas
adc
adc
daa
jg
scas
and
jbe
imul
jg
movs
jmp
cmps
dec
rol
cmc
lock
jp
addr16
in
aas
stc
(bad)
mov
mov
movs
call
mov
out
or
repz
fld
push
dec
dec
(bad)
mov
jle
sub
scas
mov
or
jns
pushf
repnz
mov
aaa
push
xchg
call
mov
imul
fs
sti
jle
data16
enter
sub
mov
sar
in
out
ret
hlt
ret
repnz
sbb
movs
jecxz
(bad)
jle
in
out
push
sar
stos
fs
jg
dec
aas
sub
jg
imul
sar
ret
test
sti
pop
(bad)
std
mov
inc
push
std
xor
inc
mov
sbb
js
(bad)
adc
out
call
mov
lahf
leave
xor
jge
fisubr
loopne
fild
add
mov
xor
(bad)
jmp
inc
dec
cmp
push
pusha
(bad)
not
sub
aas
jmp
push
sub
xor
xor
cld
xchg
push
data16
nop
mov
sbb
lods
inc
adc
(bad)
data16
sbb
xor
fdivr
popa
je
fistp
fwait
xchg
xor
mov
arpl
mov
in
repz
push
sbb
push
paddd
xor
xor
push
jbe
pop
push
push
cld
popf
add
jp
in
xlat
push
push
mov
add
add
mov
nop
lock
cld
in
lods
or
xor
push
jmp
lds
xchg
jmp
(bad)
mov
rcl
call
pop
in
call
jmp
aaa
inc
mov
mov
scas
pop
std
stc
lods
pushf
jg
jmp
in
jg
hlt
jmp
aam
imul
mov
and
not
aad
shl
jg
(bad)
pop
enter
repnz
leave
pushf
lea
jle
out
inc
shr
xlat
jo
xchg
fistp
(bad)
jno
repz
stc
xor
(bad)
jne
sbb
mov
and
(bad)
in
and
add
or
fs
scas
and
loop
adc
jge
fs
jnp
retf
jle
ret
cmps
jg
dec
pop
inc
and
dec
(bad)
push
std
call
std
(bad)
cmp
push
(bad)
push
std
lahf
sar
jmp
xchg
and
xor
fistp
(bad)
pop
xchg
pop
push
pop
call
outs
stc
xor
push
jmp
daa
cld
sbb
lds
sar
lea
ss
cmp
rol
pop
or
repz
das
pusha
jg
inc
iret
fisttp
movs
or
pop
paddd
addr16
pcmpgtd
mov
jp
fcom
add
dec
cdq
fcomp
aas
push
jmp
push
cld
imul
or
iret
(bad)
aas
test
mov
in
jmp
fcomp
lock
jo
imul
std
pop
inc
repnz
pop
inc
sbb
cmp
icebp
imul
push
aaa
out
push
in
icebp
out
int3
jae
inc
xchg
inc
push
mov
idiv
ret
sbb
and
lock
imul
add
mov
mov
jecxz
inc
repnz
(bad)
mov
lods
dec
or
sub
cld
mov
sub
dec
cwde
adc
cmp
loop
scas
and
stc
add
xchg
xor
mov
push
into
outs
lock
push
imul
outs
iret
pop
movs
fistp
enter
fild
sub
pop
retf
stc
inc
cld
sti
scas
pusha
mov
dec
stos
fist
push
shl
xchg
pop
in
add
or
sbb
and
or
ins
mov
xchg
dec
(bad)
call
jle
outs
sub
dec
pop
inc
in
arpl
aas
retf
hlt
xlat
nop
mov
adc
push
xchg
cmps
cld
jge
or
or
adc
jge
cmps
test
pop
call
cs
xchg
mov
test
jns
or
stc
scas
jg
dec
dec
cli
in
aas
adc
leave
pop
pop
call
jg
pop
cmps
clc
sbb
dec
mov
dec
dec
xchg
(bad)
pop
mov
mov
mov
mov
(bad)
sbb
mov
sahf
mov
adc
arpl
mov
cli
sbb
pop
sub
fcmovnu
pushf
or
std
sbb
fbld
pop
xchg
repnz
ja
in
cli
popf
jns
clc
ja
mov
addr16
in
xor
imul
fisttp
or
pop
sbb
out
test
push
(bad)
cld
imul
mov
lahf
jne
or
dec
jg
scas
and
adc
ret
add
cld
push
xchg
das
cmp
jle
adc
add
cmps
dec
clc
dec
jns
or
imul
lahf
cld
dec
mov
cld
in
cld
in
imul
mov
icebp
test
aaa
in
adc
adc
push
mov
push
push
mov
add
outs
jle
jmp
icebp
sub
test
xor
(bad)
dec
cld
(bad)
xchg
popa
repz
jnp
(bad)
dec
mov
and
call
aas
std
pop
(bad)
ins
jle
dec
adc
sbb
retf
jg
cdq
cmp
adc
pop
cld
ss
fnstcw
outs
(bad)
sub
ret
jg
push
jg
fs
sbb
and
clc
fld
in
not
sub
rcr
xlat
jg
push
int
fdiv
aaa
outs
fcomp
lock
mov
dec
std
cmp
xor
pop
inc
push
int3
fstp
imul
ret
mov
in
lods
sub
aas
iret
mov
icebp
daa
nop
jmp
adc
or
rcr
xchg
jmp
pop
jl
pop
(bad)
mov
iret
or
ja
aad
pop
(bad)
cld
sbb
jae
mov
xchg
jne
pop
cs
lock
rcr
or
sub
xchg
aaa
outs
mov
mul
pop
call
mov
nop
loope
loopne
adc
pop
call
and
repz
(bad)
push
pop
test
inc
(bad)
out
out
lahf
mov
jmp
cmp
fcmovnb
xlat
cli
popf
lea
cli
lahf
sar
pop
mov
and
mov
or
movs
aas
call
(bad)
mov
jge
cmp
mov
pop
sti
xor
repnz
push
enter
imul
adc
lea
pop
std
or
ret
idiv
icebp
call
pop
int3
sahf
(bad)
sub
ins
arpl
aad
nop
pop
and
push
call
sar
cmp
(bad)
dec
mov
sub
imul
addr16
add
mov
mov
dec
pushf
inc
jne
jb
or
jb
xlat
dec
jg
lock
sub
mov
lea
(bad)
jg
imul
(bad)
mov
std
and
out
aad
mov
call
mov
jge
push
sub
clc
fild
stos
loope
and
rol
lods
mov
mov
push
add
mov
adc
lock
cld
add
or
clc
jg
pop
(bad)
fldenv
loope
push
mov
inc
jge
sbb
retf
jg
cdq
pop
int3
xor
(bad)
stc
(bad)
sbb
aas
push
mov
mov
(bad)
cld
xchg
clc
fcmovnu
push
sbb
(bad)
fcmovnb
out
pop
out
outs
outs
or
out
ror
and
sbb
push
daa
jp
mov
inc
scas
ffreep
out
jg
mov
pop
jb
sbb
jg
pop
sub
ja
jmp
pop
stc
mov
pop
sbb
jle
sahf
xchg
mov
dec
jg
inc
(bad)
leave
(bad)
hlt
out
jo
cmc
xor
jns
jb
int
push
outs
ret
imul
ret
das
icebp
jb
mov
pop
ds
cmp
push
add
(bad)
popa
test
fild
jne
aaa
inc
popf
daa
cmp
sbb
(bad)
out
test
pop
cli
ret
pop
and
and
out
outs
and
ja
test
outs
std
push
pop
pop
stc
aas
cld
xor
call
and
(bad)
sbb
xor
cld
pop
mov
mov
movzx
loopne
jo
fdivrp
in
rcr
loope
mov
mov
mov
mov
in
stc
ins
aas
stc
das
jg
loop
xchg
cmp
mov
mov
mov
adc
mov
gs
std
(bad)
ja
cli
mov
scas
and
jge
aas
jmp
or
cld
cmp
sbb
xchg
jg
jle
das
std
adc
psubd
(bad)
outs
std
imul
por
jo
enter
mov
(bad)
arpl
daa
(bad)
fucomp
and
(bad)
jbe
pusha
mov
neg
add
std
into
bound
jns
div
mov
jmp
jge
retf
jl
mov
sti
xor
mov
mov
or
jnp
cmps
jmp
xchg
sub
xor
fbstp
ja
repz
mov
rol
jg
das
clc
in
stc
ins
aas
stc
pop
jmp
movs
cmc
rcr
call
movs
cmc
push
xchg
cmp
add
loopne
stos
mov
inc
mov
inc
sbb
std
and
jmp
in
add
sub
imul
mov
scas
inc
das
call
cli
repz
movs
(bad)
push
xlat
nop
jns
inc
mov
lods
ins
(bad)
mov
(bad)
(bad)
(bad)
dec
ret
dec
(bad)
push
sub
mov
mov
hlt
jmp
fucomip
aaa
in
nop
mov
retf
sub
out
hlt
leave
jg
fstp
pop
shr
mov
mov
sbb
rcr
mov
jb
cs
adc
cli
ja
in
outs
(bad)
xchg
int3
or
ja
sub
movs
inc
loopne
stc
imul
jg
mov
scas
jle
nop
aas
or
call
das
hlt
in
dec
sbb
adc
test
out
jmp
(bad)
clc
popf
cmp
rcr
fldcw
cli
mov
(bad)
cmp
xchg
(bad)
xchg
push
mov
sar
sbb
adc
repz
xor
adc
pop
adc
clc
fcmovnb
sbb
clc
fcmovnb
xlat
xor
loopne
popf
inc
lock
clc
lea
push
dec
in
loope
std
imul
mov
inc
mov
sti
cmp
cld
fdivrp
sbb
and
(bad)
sbb
addr16
push
das
mov
out
ja
push
in
(bad)
out
sbb
dec
jl
aas
lock
add
jle
sub
sub
loop
repnz
push
sti
in
leave
xor
(bad)
(bad)
mov
adc
pop
pop
jg
sbb
movs
aas
xchg
push
sti
ins
jg
dec
dec
fist
std
mov
ss
push
(bad)
pop
ss
xchg
loop
call
mov
cdq
jl
jp
mov
jb
imul
aas
movs
mov
jg
mov
pop
lods
push
jle
pop
ret
mov
outs
(bad)
leave
daa
and
jg
dec
(bad)
(bad)
xchg
push
ja
jnp
adc
or
fdiv
or
clc
sbb
call
cwde
jno
mov
in
outs
icebp
push
mov
(bad)
cmc
jle
push
xlat
shl
jnp
adc
or
scas
and
lock
in
inc
push
pusha
and
iret
pop
dec
(bad)
call
(bad)
aad
out
out
jl
sbb
or
aas
cli
sbb
shr
mov
shr
add
dec
mov
arpl
fist
and
cmp
call
in
jecxz
cmps
call
ret
lahf
add
lock
xchg
les
cld
loope
dec
les
sbb
xor
sar
repnz
xchg
(bad)
jg
(bad)
inc
fwait
stc
es
sbb
dec
in
mov
(bad)
mov
pop
jl
(bad)
dec
lahf
cld
xlat
movs
add
jae
leave
jg
inc
jg
in
ja
lock
add
sbb
push
stc
sbb
das
rol
adc
pop
test
cld
jne
dec
aam
(bad)
cwde
(bad)
xor
jmp
jg
scas
and
das
xor
aas
push
xchg
das
std
or
out
mov
lock
mov
je
jg
icebp
add
xchg
mov
jl
lahf
dec
movs
hlt
sbb
cmp
sbb
scas
adc
js
add
mov
stc
mov
push
adc
cmp
or
lock
add
arpl
jg
pop
pop
js
rcr
(bad)
call
call
add
mov
pmulhuw
pop
cli
adc
cli
jae
fwait
inc
jecxz
sbb
scas
ret
pop
(bad)
rol
mov
jle
outs
jmp
and
in
(bad)
fninit
jae
add
ja
pop
loopne
dec
(bad)
add
das
xchg
inc
icebp
sti
jle
sbb
cld
fidivr
jnp
jmp
xlat
nop
cmc
add
cmc
call
sti
shr
rcr
daa
mov
push
lock
cdq
sub
mov
adc
fs
fwait
dec
(bad)
jmp
or
outs
hlt
leave
pop
cli
or
inc
pop
push
push
pop
sub
js
cld
rcr
push
fdivr
mov
lahf
xor
(bad)
aaa
clc
xor
(bad)
out
aam
lock
imul
add
pop
sub
sbb
dec
out
pop
mov
(bad)
jmp
jle
out
loopne
pusha
in
add
cdq
xchg
cwde
cld
sbb
sbb
xchg
sti
mov
or
lock
lea
cld
in
and
push
stc
ins
js
or
bnd
cmc
ss
test
dec
jle
cwde
mov
aad
sub
cld
cld
pop
xor
add
ds
dec
jmp
jg
icebp
imul
jmp
sar
(bad)
in
pop
inc
in
iret
clc
xor
arpl
cmps
jle
xchg
pop
cmp
rcr
push
(bad)
outs
je
bound
nop
mov
(bad)
xlat
rcr
repnz
mov
ret
jbe
mov
in
std
ins
ds
scas
jle
dec
(bad)
repz
xchg
inc
or
jecxz
lock
push
loope
or
ret
fild
mov
jb
sub
aaa
jns
sub
push
mov
jg
lods
rcr
outs
cmps
jg
scas
popa
ds
mov
popf
in
(bad)
in
xlat
call
inc
inc
rcr
stc
or
rcr
clc
sbb
sar
rcr
cdq
(bad)
inc
retf
shr
pcmpgtw
dec
xchg
mov
cli
ja
in
clc
sbb
leave
sbb
and
test
sbb
(bad)
mov
xor
jge
mov
fidiv
repz
fs
ror
cmp
cld
dec
stos
sub
xlat
nop
mov
jo
imul
xor
mov
jb
xchg
push
clc
imul
sbb
push
movs
lds
movs
jne
js
lea
mov
ss
sbb
add
jecxz
loop
shl
mov
cmp
cmps
mov
mov
(bad)
cmp
out
and
add
mov
pop
cli
shr
adc
fisttp
lds
sbb
loop
sti
xor
out
xor
inc
outs
mov
cmp
sti
iret
sar
repz
das
std
jmp
loopne
gs
mov
xor
or
test
imul
push
push
hlt
(bad)
jg
or
jmp
mov
cs
lahf
inc
jecxz
daa
outs
neg
jmp
pop
cs
in
mov
stc
jne
xchg
jmp
in
(bad)
add
outs
les
xchg
or
sbb
movs
mov
ss
(bad)
repz
out
aas
add
jg
(bad)
mov
popa
(bad)
lods
sbb
dec
adc
clc
mov
mov
pusha
xlat
cwde
jle
dec
add
aaa
(bad)
sbb
push
mov
fild
jge
sub
mov
lds
clc
mov
xchg
hlt
repz
js
inc
popf
fst
mov
daa
sahf
and
cmp
(bad)
dec
es
in
xchg
dec
(bad)
cmp
gs
clc
(bad)
adc
test
fdivrp
mov
adc
jp
cmp
pop
mov
sar
dec
repnz
xor
sar
aaa
std
(bad)
pop
js
call
and
stc
xchg
mov
fsubp
xchg
mov
stc
cmp
jmp
retf
jge
iret
icebp
sti
cmp
mov
jle
mov
fnstcw
mov
mov
paddb
adc
in
fdivr
dec
jne
jg
scas
and
pop
loop
icebp
or
call
sub
popf
into
out
js
and
ds
xchg
test
js
and
in
gs
fild
ds
retf
rcl
call
adc
cli
std
dec
jg
sbb
call
sub
sti
jg
push
int3
fcomip
imul
cmp
mov
jle
adc
jle
movs
(bad)
jg
(bad)
(bad)
mov
or
loop
dec
(bad)
cmp
repz
cmp
push
leave
daa
jg
outs
sub
jg
xor
(bad)
pop
mov
hlt
leave
lahf
std
imul
(bad)
cli
lds
shl
(bad)
cli
idiv
dec
mov
out
shl
out
mov
stos
cmp
inc
pop
mov
ins
sar
adc
dec
dec
adc
jg
das
adc
hlt
leave
aas
test
cli
imul
xlat
dec
adc
push
std
sahf
xor
mov
icebp
cmp
jg
fidivr
dec
mov
jmp
(bad)
idiv
xchg
mov
cwde
push
loopne
pop
inc
jg
(bad)
dec
xchg
push
cmovle
in
pop
push
inc
hlt
repnz
sahf
mov
(bad)
jbe
fmul
inc
mov
adc
mov
pop
xchg
js
pop
cld
ins
sbb
aas
cmc
imul
pop
jg
inc
sbb
xchg
loop
cmc
mov
cwde
lods
pop
lea
mov
enter
or
(bad)
call
jg
pop
or
cmc
fisttp
sub
jg
ror
jle
aas
cs
(bad)
(bad)
xor
ret
add
cs
jg
mov
jno
std
int
mov
repz
(bad)
call
lahf
repz
sbb
int3
arpl
xchg
dec
cdq
shl
lds
cmp
ja
mov
sbb
cmp
icebp
xchg
sti
cmp
sub
or
jle
into
ret
xor
inc
mov
mov
movs
lock
push
aam
out
shl
dec
mov
pop
std
ins
sub
sbb
icebp
push
or
inc
pop
and
lahf
das
int
adc
mov
into
and
dec
jge
xor
dec
xor
mov
(bad)
shl
xor
cdq
mov
std
div
ja
push
cmc
ja
in
scas
mov
xlat
nop
jno
push
push
pop
or
mov
sahf
ret
pusha
scas
(bad)
jns
(bad)
mov
cs
or
mov
out
dec
out
jg
sti
xor
push
cld
mov
out
fsubr
out
adc
sti
das
cld
ss
and
and
sti
ja
repnz
xchg
mov
aas
and
cmp
mov
xchg
sti
pop
cli
imul
adc
or
ja
hlt
push
call
mov
ret
mov
das
std
jne
fisub
jle
xchg
pop
sahf
mov
mov
(bad)
call
retf
cld
mov
movs
mov
cld
(bad)
popa
pop
mov
fdivrp
jnp
and
es
sbb
clc
imul
inc
(bad)
jp
div
fistp
jg
out
inc
pop
(bad)
(bad)
mov
or
push
(bad)
fild
cs
jno
cli
clc
popf
cmp
in
scas
(bad)
jle
mov
clc
jb
idiv
das
std
dec
jmp
pop
mov
popa
aas
call
cmp
stos
inc
mov
inc
jg
outs
(bad)
out
ja
aaa
jg
(bad)
xlat
cld
pop
cmovle
pop
xchg
pop
jns
cli
iret
jg
(bad)
ja
(bad)
jle
pop
mov
call
stc
aad
lock
imul
pop
mov
ins
push
mov
mov
fnsave
sbb
mov
in
out
clc
sbb
stc
loopne
out
cli
pop
outs
dec
mov
clc
ja
pop
jle
fcomip
xlat
cld
arpl
jle
fcomip
push
outs
dec
mov
cmp
(bad)
xlat
cld
test
das
fnstsw
cli
stos
jg
fucomip
ja
fstp
xchg
pop
repz
cmp
mov
sti
je
aaa
cld
out
out
lock
lods
jo
imul
aam
scas
fdivr
or
call
idiv
xor
jecxz
std
out
or
(bad)
fwait
lahf
dec
(bad)
in
out
clc
arpl
dec
fstp
sbb
out
xor
jg
mov
(bad)
call
mov
dec
(bad)
pop
stc
fwait
addr16
(bad)
sbb
mov
cld
sbb
hlt
xlat
lahf
cmc
fwait
call
sbb
rol
mov
cli
xor
fistp
(bad)
mov
jg
std
pop
adc
out
ret
mov
int
call
call
cli
sti
out
and
(bad)
out
cmp
xor
in
push
(bad)
pop
stc
sbb
jmp
xchg
jmp
das
jle
jg
ja
cmc
imul
pop
mov
les
jmp
stc
cmp
xlat
cld
adc
jle
ja
(bad)
fwait
test
outs
std
mov
shl
mov
pop
cld
es
fistp
lock
pop
add
cmc
mov
fisttp
inc
mov
cmp
pop
jle
(bad)
ja
cmps
mov
(bad)
fadd
ja
mov
cmp
in
stc
imul
lock
dec
outs
sbb
fidivr
fcom
sti
fisttp
cmp
mov
jo
ja
out
cmc
scas
add
dec
inc
cmc
(bad)
lahf
pop
cld
mov
repz
and
mov
dec
fcomi
daa
mov
mov
sub
ds
xor
clc
ja
xlat
jle
fisttp
(bad)
fistp
out
mov
mov
xchg
mov
in
shr
ret
es
je
jg
out
mov
pop
mov
xlat
outs
(bad)
mov
fisttp
aaa
jg
cmp
cmp
cmp
sbb
cld
fwait
mov
(bad)
cmp
mov
fwait
(bad)
inc
(bad)
push
mov
mov
lds
jg
ror
scas
(bad)
fdiv
(bad)
cld
fldcw
cmp
mov
jmpw
sbb
out
dec
jg
jno
jg
pop
hlt
dec
adc
inc
pushf
jbe
sbb
jmp
call
jg
pop
mov
shr
jg
dec
jg
outs
inc
dec
jg
out
clc
jmp
call
push
(bad)
jecxz
cmps
push
inc
int
daa
dec
jmp
ret
jecxz
repz
aas
clc
jge
dec
jg
cmp
xor
pop
dec
js
aad
mov
jmp
addr16
ret
pop
dec
mov
dec
pop
cld
jle
sbb
mov
pop
and
inc
(bad)
in
outs
mov
test
rcr
mov
inc
in
scas
stc
xlat
sbb
jmp
repz
pop
dec
jmp
out
clc
out
xlat
cld
sub
mov
cmc
lahf
fstp
repz
dec
jmp
out
pop
shl
mov
cmc
(bad)
mov
call
rcr
jle
jmp
pusha
push
ror
(bad)
mov
and
movs
xor
mov
repz
jmp
call
icebp
xchg
cld
push
(bad)
jmp
jg
cmp
xor
ss
pop
jmp
mov
lock
out
out
lock
cld
mov
mov
stc
pop
call
in
cmp
arpl
imul
icebp
in
pop
adc
jge
cld
xchg
adc
jmp
(bad)
in
idiv
xor
aam
add
std
cmp
scas
push
mov
cld
es
(bad)
mov
dec
aas
clc
cs
(bad)
cmp
fsubrp
cli
lahf
ror
jg
ja
call
arpl
pop
sar
call
call
int
pop
inc
jge
inc
xor
loope
jnp
aas
sti
aaa
aas
loop
fstp
ins
jmp
mov
test
cmps
and
jge
mov
cmp
mov
std
push
movs
pop
(bad)
daa
jmp
mov
mov
cmp
test
aaa
and
(bad)
cld
out
cld
repz
mov
retf
jg
push
outs
std
ins
loop
rcr
cmc
sbb
and
xor
in
cld
int
out
mov
cmc
jg
popf
clc
ins
(bad)
std
push
mov
cmp
fistp
out
out
jo
jg
outs
(bad)
in
ja
mov
sbb
jmp
and
pop
lock
scas
jle
aas
sti
loopne
(bad)
jmp
and
sti
pop
dec
mov
jg
out
cmp
xor
mov
(bad)
loop
cmc
mov
out
iret
pop
cmp
sbb
ja
inc
mov
(bad)
fcmovnu
cld
and
ds
sbb
add
repnz
mov
sub
loop
std
int
aas
call
sbb
sbb
out
aas
idiv
jle
aas
scas
jle
lahf
adc
sbb
xchg
fild
fistp
fistp
(bad)
out
addr16
aas
lds
outs
idiv
jl
aas
fsqrt
sbb
fdivr
les
xchg
data16
mov
mov
jecxz
xchg
jg
outs
cmc
in
cli
sub
mov
jle
mov
cmp
bnd
clc
fwait
pop
xor
xchg
fcomip
ja
mov
cld
pop
jle
mov
jnp
std
imul
pop
mov
mov
outs
stc
cmp
sar
jecxz
inc
fbstp
xchg
pop
sti
xor
sti
mov
adc
push
out
clc
lods
pop
repz
cmp
es
ss
jae
pop
mov
xor
icebp
in
ja
cld
call
jecxz
icebp
std
popf
pop
jnp
lock
scas
repz
(bad)
in
xor
xchg
in
jmp
sub
(bad)
mov
adc
iret
and
mul
lahf
jg
not
and
hlt
jecxz
retf
imul
push
(bad)
fisttp
enter
(bad)
xor
jmp
repz
daa
xor
jg
xlat
nop
pushf
xor
inc
fwait
pop
xlat
mov
pop
push
aas
adc
ror
iret
call
clc
pop
call
dec
jle
jg
xlat
clc
imul
in
jg
xor
xlat
sti
xor
lahf
(bad)
jg
mov
mov
xlat
cld
xlat
jmp
call
call
clc
aas
jle
pop
call
cli
cmc
jle
(bad)
xlat
cli
pop
call
ret
mov
jg
iret
jmp
(bad)
std
jle
inc
cs
ja
leave
ffreep
sub
lahf
std
mov
fwait
pop
jecxz
clc
mov
rol
inc
idiv
cli
not
sti
xor
(bad)
sbb
out
cmc
arpl
movs
mov
mov
(bad)
jp
(bad)
out
sti
imul
cmc
scas
std
pop
shr
jg
(bad)
(bad)
addr16
jg
(bad)
sti
mov
mov
xchg
cs
sti
pop
cld
sbb
call
scas
repz
xlat
cli
dec
jle
(bad)
xlat
fld
es
push
mov
cld
xchg
mov
cld
scas
mov
ret
pop
not
mov
mov
paddb
pop
out
sti
xor
mov
jecxz
cld
xor
hlt
stc
fwait
jle
mov
pop
cli
jne
(bad)
jg
jmp
jnp
out
das
sti
jne
or
push
mov
(bad)
dec
mov
cmc
lock
retf
pop
out
(bad)
and
sti
xchg
(bad)
jp
stc
div
mov
pop
push
fwait
pop
not
inc
sbb
cli
(bad)
jle
pop
out
xlat
mov
cli
std
out
(bad)
cmc
jg
cli
neg
pop
jecxz
(bad)
cli
dec
mov
mov
jle
aaa
add
call
fild
mov
shl
push
inc
mov
clc
in
(bad)
mov
std
(bad)
loope
mul
imul
cld
stc
aas
inc
jmp
mov
call
or
pusha
add
in
mov
mov
out
cli
sbb
jg
outs
or
std
cmp
pop
aam
xlat
stc
dec
icebp
leave
pop
cld
fwait
add
aas
int3
(bad)
inc
pcmpeqd
imul
mov
cld
or
dec
mov
pop
pop
jle
outs
dec
cmp
jmp
lahf
enter
adc
std
mov
mov
cld
(bad)
mov
dec
cld
fucomp
imul
cmp
xlat
pop
mov
xlat
pop
call
loopne
pop
cmps
mov
(bad)
cli
cld
xlat
das
cld
xor
jmp
ja
mov
std
xchg
inc
(bad)
aas
pop
(bad)
std
ins
call
dec
(bad)
std
stos
stc
fistp
cmc
xchg
fistp
out
out
icebp
out
pop
inc
cwde
loop
xchg
aas
(bad)
fnstsw
outs
inc
lahf
std
imul
mov
imul
xchg
fsub
mov
sub
les
aas
dec
(bad)
(bad)
call
mov
lock
std
pop
push
pop
jecxz
xlat
push
(bad)
jle
xchg
jnp
and
xlat
cmp
pop
cld
cmp
cmp
adc
das
in
pop
mov
push
in
mov
std
aad
ds
fsubr
(bad)
cld
pop
arpl
dec
aad
xlat
pop
repz
lds
mov
std
out
clc
sbb
lahf
cmc
or
scas
mov
sub
stc
mov
cmc
xlat
call
jg
(bad)
cmc
aaa
cli
xchg
cld
cmc
xchg
call
mov
std
sbb
ror
mov
jmp
cmps
mov
dec
jp
jg
or
mov
ds
xor
mov
jg
int
(bad)
dec
call
cld
xlat
cld
pop
jg
adc
cli
out
pop
fwait
xchg
clc
jmp
sti
scas
stc
out
das
mov
leave
pop
jg
scas
jno
jae
clc
test
fstp
stc
imul
scas
icebp
inc
gs
xchg
mov
jecxz
push
jmp
out
(bad)
mov
repnz
mov
leave
pop
jg
imul
cli
fnstsw
jg
xlat
cli
clc
xlat
clc
xchg
(bad)
xor
jmp
scas
std
sbb
ficomp
(bad)
retf
jg
(bad)
stos
jg
(bad)
xlat
mov
push
(bad)
(bad)
xor
test
std
jb
jmp
clc
jne
xlat
outs
lock
jle
fnstsw
xlat
push
lds
pop
mov
std
xchg
mov
jg
imul
aas
xchg
jmp
cmp
test
out
iret
(bad)
xor
std
cmc
aaa
call
mov
(bad)
cli
adc
pop
std
imul
mov
pop
fidiv
shr
(bad)
cmp
lock
jle
xlat
ds
xor
cmp
push
jg
sbb
mov
fcomip
xlat
jns
imul
lahf
xor
mov
sahf
xchg
cmps
call
xchg
sub
pop
std
cmp
jge
jmp
(bad)
xor
leave
scas
jno
inc
(bad)
cli
adc
aas
std
xlat
cmp
xor
xlat
pop
jmp
xchg
mov
fucomip
mov
out
outs
stc
jne
clc
xor
fstp
std
jmp
cld
xor
scas
sti
jmp
ret
mov
addr16
in
fucomip
xlat
std
addr16
lahf
cld
xor
jmp
cld
jne
in
out
stc
xor
scas
(bad)
xlat
std
mov
popf
fcomip
xlat
clc
lods
mov
mov
cld
dec
iret
or
leave
jle
hlt
test
mov
jmp
iret
mov
(bad)
pop
retf
mov
pushf
call
(bad)
fisubr
and
cmc
jmp
mov
mov
sub
icebp
pop
jl
(bad)
cli
inc
mov
ss
icebp
jge
jmp
(bad)
sbb
mov
fstp
imul
mov
scas
sti
dec
jg
mov
std
push
mov
cld
arpl
cld
cmc
mov
scas
sti
inc
(bad)
sbb
es
push
mov
(bad)
(bad)
xor
cmc
push
(bad)
mov
(bad)
std
sbb
push
(bad)
cli
mov
std
adc
jg
es
jmp
out
repnz
std
sar
fucomip
pop
(bad)
cli
idiv
not
std
xor
fnstsw
ret
xor
cld
outs
cli
xlat
jg
jmp
popa
mov
cld
dec
jae
fstp
mov
pop
mov
(bad)
mov
sbb
fnstsw
scas
fnstsw
xlat
sti
jmp
fnstsw
hlt
scas
(bad)
xlat
sti
sti
jg
mov
repnz
out
imul
std
(bad)
mov
cld
jbe
cld
inc
jl
jmp
popf
mov
mov
cli
jne
sahf
pop
arpl
pop
sbb
push
mov
cld
dec
mov
mov
jmp
jmp
out
aas
cli
imul
(bad)
cld
cmc
not
dec
jle
jg
xlat
clc
or
push
lahf
stc
xor
repz
pop
inc
jg
jb
jmp
es
addr16
stc
pop
jmp
mov
mov
fisubr
jg
mov
pop
out
ja
mov
das
clc
cmc
mov
pop
dec
scas
test
sti
std
jmp
cld
cmc
(bad)
jp
std
cmc
pop
jmp
test
scas
icebp
pop
jmp
(bad)
aas
rcr
mov
cmc
mov
xchg
call
push
imul
repnz
cmc
jmp
add
jg
dec
mov
std
pop
cli
xlat
lahf
stc
jmp
cmp
retf
pop
jg
scas
dec
pop
call
cli
jmp
std
jne
xor
xlat
mov
xor
jg
(bad)
cli
das
jle
dec
repnz
(bad)
stc
jmp
out
hlt
xlat
pop
cmps
jg
dec
mov
xor
cmp
cli
jmp
das
xchg
mov
pop
rcr
xchg
(bad)
cmc
pop
cld
push
jg
lea
pop
retf
call
scas
aas
mov
cli
xchg
fnstcw
rcr
mov
fwait
std
xchg
out
fucomip
xlat
jmp
jle
aad
ins
(bad)
cli
cmp
xlat
clc
out
pop
xor
stc
scas
jmp
pop
outs
(bad)
sub
jg
xlat
sbb
dec
repnz
(bad)
xor
xlat
out
cmc
jmp
pop
mov
stc
jmp
clc
xor
pop
std
sbb
or
jmp
sti
xor
aas
std
xor
cli
fistp
aas
icebp
xlat
jmp
jle
aas
call
xor
(bad)
cli
xlat
clc
mov
cmp
xchg
jle
mov
(bad)
cmc
pop
imul
pop
jecxz
sti
mov
scas
neg
cld
jp
retf
scas
icebp
pop
std
movs
repnz
mov
sti
sub
aas
call
fwait
jle
(bad)
in
xlat
clc
sar
dec
inc
mov
jmp
call
mov
sbb
ret
mov
cld
arpl
cld
cmc
pop
inc
jg
scas
imul
call
adc
(bad)
cmp
call
jmp
jg
stc
jmp
clc
cmc
jg
pop
repz
xor
push
mov
ds
cmp
clc
jle
pop
out
ja
xor
(bad)
cli
out
sbb
dec
jg
fcomip
out
xor
jg
fnstsw
out
aaa
je
sub
int
jmp
xor
std
into
movs
dec
push
dec
fwait
cld
cli
cmp
leave
pop
mov
outs
jo
xlat
cld
mov
or
in
std
jne
std
xor
(bad)
cli
sbb
xlat
jnp
imul
dec
jecxz
loopne
scas
stc
sbb
repz
jle
(bad)
xlat
dec
inc
jmp
cld
jne
int
out
jmp
out
in
sti
stc
scas
stc
(bad)
imul
imul
addr16
out
push
inc
iret
jg
outs
call
xlat
scas
sti
jmp
stc
cmc
pop
(bad)
call
out
leave
outs
lock
xlat
jl
out
leave
pop
jmp
jmp
lahf
inc
repnz
fistp
stc
outs
lock
cld
call
stc
or
out
sti
dec
in
stc
scas
push
mov
out
xor
jmp
clc
cmc
inc
cld
cmps
dec
xor
aas
std
sbb
out
neg
pop
jg
jmp
retf
(bad)
pop
stc
stos
(bad)
mov
jg
cli
xlat
jl
aas
enter
scas
test
repz
sti
lahf
in
jmp
pop
rep
cli
pop
in
mov
jg
pop
repnz
mov
std
push
jg
scas
stc
mov
mov
pop
dec
call
cli
mov
aaa
clc
jecxz
int
call
pop
xchg
aam
stc
xlat
cld
sti
(bad)
outs
stc
jmp
and
lock
call
imul
jg
scas
sti
idiv
jp
(bad)
scas
stc
(bad)
mov
jmp
sub
imul
mov
cld
fcomp
neg
cld
test
repnz
jg
jmp
xchg
mov
(bad)
imul
jmp
outs
lock
cld
call
pop
mov
cld
xor
pop
(bad)
cli
aas
dec
cli
(bad)
cli
pop
jae
aaa
xchg
mov
aas
cld
or
int
sub
into
aas
neg
push
jg
scas
stc
out
aaa
xor
jg
outs
lock
call
or
out
std
xor
(bad)
cli
xchg
jg
fnstsw
(bad)
(bad)
loope
repz
cli
sub
xlat
clc
int
in
pop
sti
xor
(bad)
cli
in
jle
cmc
scas
dec
std
call
mov
dec
fcmovne
pop
mov
jg
jg
xlat
cld
fistp
stc
jmp
clc
cmc
dec
mov
mov
cld
cmp
enter
scas
imul
jp
(bad)
scas
stc
sbb
mov
xlat
daa
mov
aas
cli
xor
aaa
cli
jne
lods
fnstsw
aas
sti
xor
xchg
iret
jle
(bad)
(bad)
xlat
pushf
inc
add
imul
mov
std
jp
retf
scas
repz
ja
cld
cmc
mov
jne
neg
cld
pop
in
xchg
mov
xor
scas
aas
loopne
clc
lahf
jg
pop
jecxz
cli
repz
(bad)
cli
mov
xlat
std
mov
lods
aas
in
ja
mov
aas
imul
std
pop
jg
out
cs
fnstcw
fsubr
stc
jmp
push
nop
(bad)
cmc
xchg
call
dec
jmp
std
stc
mov
(bad)
fsubr
jg
int
(bad)
pop
hlt
fstp
cmps
jg
or
pop
cld
fsubr
std
aad
(bad)
out
dec
(bad)
gs
xlat
out
imul
push
jp
aaa
mov
mov
xchg
cli
xlat
lahf
dec
cmp
(bad)
jle
jg
(bad)
cli
(bad)
jg
aas
lock
clc
mov
jmp
fist
loopne
cmps
mov
pop
clc
or
std
inc
(bad)
cli
sar
pop
jmp
movs
push
hlt
scas
mov
test
mov
mov
jmp
stc
or
mov
xchg
mov
scas
jg
sub
call
mov
ja
pop
(bad)
cli
sub
ret
hlt
scas
mov
scas
inc
cli
inc
xchg
call
retf
(bad)
scas
repz
ja
cwde
(bad)
cmc
(bad)
push
push
inc
stc
xchg
jbe
scas
jmp
(bad)
mov
mov
imul
dec
mov
std
push
lahf
retf
dec
repnz
(bad)
fsubr
imul
pop
inc
jg
scas
sti
(bad)
pop
jg
and
stos
std
cmc
(bad)
fwait
pop
sti
popf
jle
jg
mov
cmc
ja
mov
scas
cmc
das
sbb
scas
idiv
imul
mov
daa
jg
scas
sti
lods
pop
jmp
jnp
jg
inc
jbe
cld
imul
cmps
mov
(bad)
mov
std
mov
mov
jne
mov
mov
sub
xlat
std
mov
fucomp
and
fucomip
stc
imul
das
or
jmp
cli
jecxz
xor
push
pop
hlt
rcl
jg
cmc
jle
pop
stos
std
or
jmp
cli
cmc
push
int
cdq
adc
push
leave
retf
pop
jmp
jnp
xor
sub
jmp
xchg
mov
jg
push
push
dec
pop
push
push
mov
pop
stc
cmc
daa
mov
xor
pop
jg
out
sub
rcr
jmp
mov
enter
pop
out
xlat
cli
xchg
jle
(bad)
cli
fisubr
cli
xlat
cli
sti
mov
in
cld
cli
mov
jle
xor
jmp
pop
(bad)
cli
mov
(bad)
(bad)
nop
pop
jmp
sti
std
dec
jg
cli
scas
repz
std
pop
(bad)
fsubr
das
jg
adc
cld
mov
(bad)
fcomip
pop
enter
scas
jnp
stc
adc
jmp
xchg
mov
jno
cmps
std
pop
call
inc
(bad)
cli
out
xchg
addr16
lahf
stc
imul
push
stc
jmp
cli
or
scas
cmc
dec
int
scas
(bad)
aaa
cld
test
(bad)
mov
(bad)
cli
fwait
leave
mov
mov
in
mov
jmp
add
dec
jle
fucomip
inc
(bad)
cli
adc
mov
hlt
scas
aas
sti
xlat
js
jmp
and
jg
xor
jg
scas
cmc
jl
jg
(bad)
std
and
jg
aad
or
and
jg
cmc
mov
(bad)
fld
pop
aas
sub
sar
jmp
and
jg
inc
fsubrp
pop
repnz
outs
in
aas
sub
repnz
std
shl
xlat
mov
lea
xor
imul
dec
(bad)
xchg
pop
jmp
sar
scas
and
mov
inc
ds
pop
repnz
cli
xlat
pop
repnz
xchg
fisubr
xchg
mov
mov
std
jmp
dec
jle
std
cmc
pop
jmp
jg
pop
jg
and
shr
mov
jmp
aaa
jp
(bad)
sahf
sub
jmp
dec
(bad)
popa
jmp
fucomip
(bad)
or
pop
mov
adc
out
hlt
scas
lahf
(bad)
jne
shl
sahf
(bad)
cmc
(bad)
inc
sub
cmp
or
(bad)
jmp
or
xlat
outs
aam
pop
mov
rcr
std
imul
std
mov
cli
scas
hlt
scas
(bad)
xlat
std
xlat
jmp
xchg
dec
xchg
push
mov
rcr
push
sub
lahf
and
dec
icebp
jmp
gs
jg
cmps
mov
xchg
mov
repnz
fistp
mov
pop
jmp
cli
movs
cmps
in
clc
sbb
jne
(bad)
mov
push
mov
std
push
jg
cld
cmc
out
std
mov
mov
pop
jg
pop
and
push
mov
(bad)
scas
cmc
out
(bad)
xor
scas
cmc
cmps
std
xor
push
std
imul
mov
std
gs
cmp
std
pop
jg
lahf
and
pop
mov
(bad)
jecxz
push
stc
daa
retf
pop
mov
jmp
jmp
clc
or
lahf
std
mov
cld
sbb
xlat
scas
dec
xchg
repnz
cli
mov
jg
xor
jmp
xlat
pop
std
jmp
icebp
arpl
imul
repnz
jl
jg
xlat
cli
(bad)
inc
stc
mov
pop
sti
movq
(bad)
jg
(bad)
std
daa
mov
sbb
mov
mov
mov
repnz
pop
(bad)
fstp
jg
std
or
cld
imul
jg
cld
cmc
aaa
std
push
pop
and
stos
(bad)
jp
jmp
push
cld
xchg
inc
jmp
cli
or
(bad)
clc
mov
mov
neg
cld
stos
pop
idiv
(bad)
mov
popf
mov
jg
das
jle
xlat
cli
mov
aaa
std
jmp
clc
or
jne
in
fucomip
outs
xor
jg
pop
inc
jle
outs
(bad)
in
cmps
neg
jmp
inc
mov
mov
ud0
jg
pop
jnp
ja
pop
mov
std
(bad)
xlat
dec
jmp
stc
jmp
sti
cmc
(bad)
scas
pop
push
mov
jle
mov
jle
pop
out
xchg
mov
lahf
(bad)
cmc
jg
pop
sti
jg
mov
xlat
cld
or
(bad)
mov
mov
inc
jg
cld
cmc
(bad)
cli
iret
jg
(bad)
xlat
push
std
add
xlat
idiv
aas
loopne
fdivr
mov
mov
push
(bad)
cli
jge
fnstsw
lock
clc
in
jle
bswap
pop
idiv
aas
icebp
aaa
mov
xchg
scas
jg
in
fistp
inc
in
jmp
jp
jle
aas
in
pop
xchg
mov
ret
pop
sti
out
sti
(bad)
in
fcomip
aaa
cli
pop
jle
mov
(bad)
int
(bad)
mov
std
outs
std
adc
xlat
fistp
(bad)
mov
jg
jg
lahf
xor
clc
mov
out
sti
cmps
or
jg
scas
repz
(bad)
xor
scas
sti
pop
(bad)
cmp
jg
stc
adc
jg
imul
repnz
out
inc
jno
out
sti
imul
out
fdiv
ret
(bad)
xlat
(bad)
idiv
jne
(bad)
fbstp
imul
mov
xlat
aas
hlt
sbb
aaa
pushf
(bad)
fisub
mov
lea
mov
dec
cli
xlat
pop
(bad)
imul
cmc
das
clc
mov
scas
std
sti
dec
repnz
gs
lods
cld
mov
and
mov
dec
stc
imul
repnz
lahf
lock
mov
jno
xlat
pop
std
imul
xlat
clc
push
in
mov
hlt
xlat
pop
(bad)
cli
fnstsw
fucomip
xlat
das
jg
dec
(bad)
cmc
adc
popa
imul
div
(bad)
cmc
jg
jp
pop
std
cmc
jnp
jmp
xlat
aas
inc
and
jg
mov
xchg
fild
or
jne
inc
jg
hlt
scas
jg
stc
popf
jmp
cli
push
xchg
(bad)
xlat
sub
cmps
cld
cmc
jmp
xchg
jmp
mov
pop
repnz
mov
xor
aas
dec
(bad)
cli
movd
popf
jg
(bad)
cli
lea
fild
cmc
jg
inc
mov
jmp
dec
out
std
jbe
scas
ret
pop
(bad)
fdiv
xlat
jle
out
leave
pop
mov
(bad)
mov
cld
sti
cmp
pop
out
jmp
aas
jmp
ja
ret
ja
test
xchg
xlat
out
hlt
sbb
mov
push
call
push
jg
scas
dec
in
aas
loopne
xchg
mov
pop
(bad)
fidivr
std
and
sti
in
sub
out
mov
std
xchg
mov
hlt
(bad)
pop
cld
cli
jg
scas
std
xor
mov
sbb
jmp
nop
mov
cld
jmp
xchg
mov
mov
or
(bad)
sti
scas
in
jg
mov
jle
pop
retf
pop
jg
outs
jo
sbb
inc
mov
pop
mov
aaa
clc
dec
jg
fnstcw
jg
fnstsw
push
(bad)
fidivr
jg
jg
sub
stc
jmp
in
aas
call
movs
pop
push
push
(bad)
cmps
pop
sti
iret
sti
pop
in
dec
jle
(bad)
clc
(bad)
(bad)
(bad)
pop
sti
dec
cli
pop
in
cmp
pop
sti
(bad)
sti
lahf
in
(bad)
(bad)
retf
out
push
(bad)
cli
pop
jg
pop
and
pop
jg
ja
mov
cmc
aad
sti
pop
std
cmp
fsubr
retf
jmp
sar
int
(bad)
cdq
pop
out
sti
mov
test
popa
(bad)
lock
push
mov
int
push
mov
mov
mov
jle
sbb
jmp
idiv
hlt
mov
scas
test
(bad)
mov
lahf
imul
std
xchg
retf
pop
mov
call
pop
sti
ja
aad
xlat
lahf
inc
push
call
pop
sti
(bad)
sar
call
pop
sti
mov
pop
jecxz
stc
mov
hlt
xlat
jle
jg
pop
jg
scas
icebp
psrlq
xchg
(bad)
cmc
xlat
call
call
scas
repz
(bad)
fidivr
jmp
sbb
fnstsw
aas
std
mov
sub
jmp
push
out
xchg
mov
cmp
pop
repz
mov
(bad)
cli
jmp
mov
aaa
cli
jne
ins
jmp
fbld
xlat
std
dec
jg
fistp
loop
ss
xchg
aam
out
sar
dec
mov
cmc
mov
pop
stc
dec
jg
mov
jg
mov
jle
stc
imul
frstor
cwde
out
hlt
scas
(bad)
xlat
std
imul
enter
jg
stc
scas
sub
arpl
jmp
sar
sbb
mov
jmp
pop
dec
xor
adc
std
outs
cli
xlat
scas
sti
sbb
xor
xlat
out
sti
jmp
pop
jg
repnz
rcr
mov
(bad)
loope
add
pop
cmp
lock
jge
xlat
les
mov
mov
pop
cli
imul
mov
inc
cld
(bad)
(bad)
(bad)
fstp
sub
std
or
(bad)
out
aam
iret
out
jg
jg
(bad)
dec
neg
pop
dec
sti
xchg
fbld
cld
stc
pop
dec
stc
pop
pop
(bad)
fdecstp
fistp
push
pop
add
scas
(bad)
ss
pop
in
std
out
inc
clc
repz
repz
shr
pop
repz
test
jp
loope
pshufw
ins
sti
mov
xchg
scas
test
not
out
jle
outs
(bad)
jmp
mov
or
xchg
mov
int3
dec
add
loope
out
push
push
and
gs
data16
test
ror
hlt
loop
in
sub
and
or
out
jg
idiv
cmc
mov
cmp
rcl
(bad)
cmp
mov
idiv
jne
out
scas
fucomi
imul
fidiv
or
push
or
cmp
mov
out
dec
lock
mov
sti
scas
adc
(bad)
(bad)
xchg
pop
xor
pop
jg
and
ret
std
(bad)
mov
add
lahf
and
pop
imul
aaa
repz
lahf
pusha
aas
stc
jne
mov
jo
mov
test
js
xlat
rcr
and
daa
xchg
daa
jg
ins
outs
jle
cs
jle
aaa
mov
sub
jmp
stc
das
idiv
push
(bad)
mov
repnz
push
lahf
pop
inc
sub
(bad)
rcr
xor
jecxz
mov
lock
mov
lock
jnp
(bad)
jp
fidiv
jle
(bad)
iret
adc
jge
adc
imul
ins
in
aas
fld
aaa
neg
clc
outs
stc
mov
fucomip
mov
retf
lds
mov
jmp
movs
lahf
(bad)
jne
imul
in
jg
cli
test
dec
jbe
out
adc
out
lahf
sti
sbb
fnstsw
jg
outs
xor
fild
out
(bad)
popf
mov
jle
mov
outs
je
imul
ds
ins
lahf
outs
jg
mov
addr16
inc
in
adc
inc
or
mov
aaa
repz
mov
(bad)
out
shl
cli
cli
repz
adc
(bad)
mov
sub
pop
fsubr
jg
jg
cmp
aad
mov
(bad)
js
add
jp
dec
fs
cmp
out
jge
push
repz
add
jmp
mov
mov
push
data16
clc
retf
jg
aaa
pop
dec
iret
sbb
int
push
jg
ins
(bad)
jmp
fisubr
jmp
stc
push
jo
push
or
mov
jl
leave
scas
mov
jae
and
mov
idiv
xlat
pop
clc
adc
imul
(bad)
cmp
leave
and
stos
jg
xchg
sbb
dec
gs
lahf
mov
dec
mov
sti
cld
das
out
sti
(bad)
in
scas
idiv
stc
adc
sbb
mov
sub
xchg
loope
stc
push
shl
(bad)
jl
repz
fwait
aas
jmp
mov
pmulhuw
idiv
jg
scas
mov
cmc
je
mov
idiv
sbb
lahf
retf
pop
cld
vdivps
adc
xor
mov
out
mov
and
dec
cdq
or
repz
out
test
sbb
adc
stc
cld
iret
out
add
xlat
in
les
(bad)
cli
fdiv
aaa
pusha
or
push
int3
mov
gs
cmc
sbb
outs
mov
ficom
cwde
aas
adc
or
mov
outs
out
lock
push
jge
stc
je
inc
sub
xchg
aas
lahf
aas
adc
stos
mov
sbb
xchg
clc
cmc
pop
retf
pop
les
out
popf
rcl
std
push
mov
push
xor
push
jp
in
test
aam
mov
cmc
fadd
sub
(bad)
xlat
cmps
lods
and
pop
cld
pop
xchg
mov
js
mov
jg
scas
mov
xor
aas
fwait
loope
pop
mov
out
jl
in
push
call
xchg
jnp
jge
push
cmp
dec
cmps
jne
in
pop
jmp
das
ins
clc
int
je
mov
jg
imul
aas
icebp
std
push
mov
call
jo
aas
(bad)
cmp
daa
mov
mov
(bad)
mov
iret
out
test
ds
jle
jg
mov
fwait
mov
lock
mov
sbb
mov
or
push
cmps
test
repz
rcr
jg
jl
popa
outs
pop
mov
mov
xor
fstp
in
jge
mov
rcl
lahf
sbb
and
fs
jmp
sub
stc
pop
lock
xor
or
lahf
xchg
mov
xchg
fst
int
mov
cwde
popf
jg
jmp
xor
cwde
cmp
repz
(bad)
iret
adc
add
jmp
jp
or
sbb
jle
pop
jae
jge
add
pop
sbb
scas
std
pop
out
mov
xor
fdecstp
fist
add
loope
cdq
jno
fistp
hlt
lods
fwait
shl
xchg
pop
lock
(bad)
aas
(bad)
in
idiv
xchg
fyl2xp1
fwait
stc
xchg
mov
cld
or
daa
ds
cmps
imul
cwde
fstp
xchg
jno
imul
jg
adc
inc
icebp
push
repz
xchg
rcl
jo
xchg
pop
outs
fcomi
mov
push
mov
mov
loopne
push
jmp
add
daa
std
sub
scas
scas
inc
fcomp
std
cmc
adc
jge
sti
out
or
jo
xchg
aaa
push
xchg
mov
xchg
in
imul
sub
mov
movs
out
neg
dec
mov
icebp
addr16
test
ret
adc
pop
daa
nop
mov
xor
outs
std
pop
mov
sar
scas
out
jmp
jae
dec
(bad)
mov
mov
jecxz
sbb
push
jecxz
out
add
retf
push
(bad)
fst
mov
pop
(bad)
data16
imul
(bad)
push
out
neg
retf
daa
xor
xor
jg
std
mov
fwait
mov
icebp
das
out
test
jg
jg
rcl
or
lahf
std
imul
mov
jnp
sbb
out
pop
(bad)
div
stc
xor
stos
stc
mul
mov
sti
xlat
mov
lods
ja
out
std
imul
mov
aaa
sar
sbb
pop
jg
mov
mov
xlat
cli
cmps
jmp
cli
xchg
fistp
stc
idiv
call
scas
std
arpl
xlat
cld
xor
call
mov
fidivr
(bad)
fidivr
std
mov
push
(bad)
std
into
scas
stc
pop
(bad)
(bad)
call
sbb
shr
movq
sti
arpl
mov
xchg
jg
jg
xlat
std
xor
xlat
cmp
cmc
(bad)
js
div
xlat
sti
lahf
jle
jg
xlat
cld
jge
mov
mov
cli
imul
xchg
(bad)
jge
std
(bad)
mov
std
imul
pop
out
pop
cld
jp
hlt
scas
stc
addr16
jp
pop
out
pop
(bad)
xor
lds
(bad)
jg
(bad)
in
xlat
mov
call
(bad)
cli
xlat
cld
lea
jg
xlat
(bad)
scas
jg
fild
int
in
inc
mov
xchg
pop
dec
fistp
imul
mov
std
stos
pop
arpl
jmp
(bad)
sbb
scas
icebp
pop
cld
cli
dec
scas
test
(bad)
sti
pop
cld
jp
out
cmc
ud0
inc
scas
mul
(bad)
mov
scas
icebp
out
(bad)
cli
(bad)
jmp
sbb
std
scas
(bad)
mov
outs
lock
cli
mov
sbb
adc
fwait
call
scas
jle
pop
clc
jmp
ret
mov
leave
scas
(bad)
sti
rcr
outs
cli
div
mov
loop
cli
repnz
into
push
cmp
xlat
enter
cld
xlat
inc
sti
aas
stc
xlat
clc
imul
call
clc
add
out
xlat
cli
fstp
stos
pop
mov
pop
jnp
arpl
scas
stc
pop
(bad)
fsubr
mov
mul
and
fwait
and
loopne
in
(bad)
sbb
out
jae
(bad)
cld
pop
imul
dec
(bad)
and
ja
(bad)
(bad)
xor
inc
ds
(bad)
cmps
pop
div
push
sahf
cld
inc
aas
not
call
mov
jg
scas
stc
xchg
jg
inc
(bad)
mov
pop
sti
mov
out
repz
dec
(bad)
ficomp
sti
jge
int
cmp
inc
jg
clc
xor
sti
cld
pop
mov
sar
arpl
jle
aaa
pushf
daa
mov
scas
jg
xchg
mov
stc
adc
ret
aas
mov
pop
sar
cmp
ds
mov
int
icebp
aaa
cld
shr
fistp
jmp
clc
sti
jg
aas
sub
mov
(bad)
xchg
fcomip
das
movs
jg
sbb
jnp
imul
mov
out
(bad)
sbb
and
icebp
imul
jg
mov
hlt
sbb
lods
leave
popf
pop
repz
aaa
cli
inc
xchg
aas
stc
xlat
cli
jge
mov
(bad)
xor
sar
rcr
mov
mov
jg
jg
cmp
mov
pop
mov
sbb
retf
leave
(bad)
imul
mov
add
ror
(bad)
stc
outs
hlt
lahf
and
retf
jg
push
stc
cmps
jg
pop
out
aaa
(bad)
lahf
imul
inc
out
(bad)
aaa
jle
fcomip
xlat
cmp
lea
fcomip
xlat
cld
mov
jg
(bad)
aaa
cld
stos
jg
fucomip
aaa
(bad)
popf
jle
jg
xlat
cld
mov
ret
mov
(bad)
xor
(bad)
and
out
cmc
xchg
inc
scas
jg
fstp
scas
stc
lea
(bad)
out
stc
lea
fcomip
outs
(bad)
mov
repz
psubb
iret
std
(bad)
pop
mov
sbb
iret
fcomip
xlat
enter
repnz
lock
mov
dec
(bad)
stc
inc
outs
cld
inc
sar
psubd
daa
jle
fcomip
aaa
stc
mov
fwait
cld
or
out
mov
xchg
aas
in
aaa
cld
inc
mov
ja
or
jnp
es
outs
js
xlat
cmp
dec
(bad)
push
cli
test
dec
clc
dec
(bad)
xchg
fist
mov
loopne
jg
(bad)
pop
jmp
daa
jle
sar
lahf
mov
mov
int3
sub
dec
jg
jg
aaa
cld
xchg
jg
aas
out
stc
psubw
(bad)
cli
aaa
cld
xchg
int3
clc
aas
cld
imul
out
repz
cli
dec
inc
fcomip
jg
xor
dec
(bad)
mov
out
in
push
fwait
mov
pop
sti
iret
(bad)
mov
loope
in
dec
pop
mov
jecxz
cld
dec
jle
fucomip
out
(bad)
xor
xlat
sti
lea
aaa
stc
lea
jg
xlat
cli
int
rcr
repnz
cli
mov
dec
jg
fucomip
(bad)
xor
lea
in
dec
jg
pop
cmc
imul
dec
(bad)
xor
pop
(bad)
cli
mov
mov
xor
push
mov
inc
mov
pop
std
cmps
mov
call
cli
sbb
mov
dec
mov
pop
inc
xor
test
mov
(bad)
fcomip
xlat
sti
idiv
icebp
scas
icebp
imul
mov
xor
aad
je
imul
mov
inc
(bad)
mov
inc
inc
xlat
fistp
jg
cli
(bad)
out
dec
(bad)
call
mov
jg
mov
loopne
clc
and
aas
in
clc
or
mov
jg
(bad)
xlat
cld
sbb
repz
call
int
repnz
cld
jmp
int
lock
cld
push
jg
fcomip
xlat
cli
cmps
jle
(bad)
clc
xlat
cli
sub
xlat
(bad)
mov
idiv
imul
mov
hlt
xlat
cdq
(bad)
cmp
clc
jne
sbb
clc
jne
mov
(bad)
in
xlat
jg
imul
movs
aas
ficomp
pop
call
jg
scas
cmc
imul
mov
(bad)
jg
imul
mov
xlat
movs
lahf
aas
imul
std
xor
sbb
sbb
lods
xchg
scas
icebp
cmps
repz
fcomip
xlat
clc
retf
mov
cli
imul
stc
imul
mov
mov
pop
pop
fistp
imul
cld
repz
jle
mov
call
pop
mov
imul
repz
std
sbb
in
sahf
pop
xchg
je
sahf
ffreep
sti
sub
xor
mov
mov
out
mov
xlat
js
aas
jg
mov
mov
ror
pop
lahf
(bad)
std
or
std
hlt
cmp
call
aas
std
imul
push
xchg
(bad)
clc
mov
popf
mov
lahf
sub
jne
ds
call
fidivr
outs
mov
push
push
int
pop
push
das
sbb
sar
into
scas
mov
lds
ins
jne
outs
cmp
retf
pop
jecxz
pop
das
repz
scas
mov
repnz
aas
xchg
pop
jg
mov
push
jg
int
gs
imul
jg
pop
inc
(bad)
call
aas
popf
dec
pop
cli
cmc
das
cmps
(bad)
push
hlt
(bad)
mov
sar
call
call
(bad)
(bad)
cmp
addr16
cdq
lahf
sub
fst
into
mov
scas
jno
sub
jecxz
sbb
int
mov
dec
push
daa
gs
das
pop
add
inc
fimul
jns
cld
sbb
mov
icebp
pop
repnz
sbb
imul
cmps
pop
stc
not
in
jmp
add
mov
mov
or
rcr
aas
iret
(bad)
dec
repz
pop
sub
imul
aas
pop
xchg
jmp
out
mov
repz
pop
jl
mov
(bad)
loope
iret
repz
cmp
(bad)
xor
push
cld
imul
jg
sub
stc
out
inc
or
inc
jmp
sub
stc
scas
inc
add
or
push
retf
imul
push
mov
and
mov
call
and
pop
mov
(bad)
xlat
clc
test
cdq
cmp
mov
outs
scas
push
stc
scas
icebp
mov
jae
jmp
mov
test
mov
cmc
jmp
xchg
dec
cmp
rep
(bad)
test
pushf
sbb
mov
ja
dec
outs
sbb
iret
jmp
xor
icebp
movs
push
xor
mov
add
call
dec
stos
mov
cs
xchg
lds
shl
icebp
fldenv
mov
add
std
xchg
cli
jp
push
mov
popa
je
int3
mov
hlt
lods
xlat
stc
je
pop
in
cmc
pop
pop
pop
mov
mov
cmps
push
stos
adc
loopne
aaa
jae
in
int3
add
pop
std
imul
adc
fwait
aad
or
idiv
jge
ds
adc
mov
adc
into
xchg
xor
sub
pop
jle
enter
retf
out
bound
retf
jle
(bad)
neg
cmc
jle
mov
scas
das
dec
lock
in
pop
mov
ror
imul
sub
jge
mov
inc
stc
in
leave
mov
mov
sub
jmp
sahf
push
add
add
cwde
das
mov
dec
push
jne
ins
add
sbb
into
into
data16
jnp
mov
push
loop
jecxz
jp
movs
pop
mov
call
lock
pop
aam
aam
(bad)
clc
fwait
in
pop
and
(bad)
(bad)
pop
add
jg
cld
clc
retf
jg
rcl
pop
add
pop
sub
das
xchg
cdq
dec
sbb
test
(bad)
fild
dec
xor
int3
icebp
ja
fist
int3
iret
stos
jl
les
aaa
std
sbb
dec
xchg
das
es
std
std
push
add
mov
in
adc
lea
and
icebp
mov
sbb
popf
jg
mov
push
fild
sbb
mov
rep
add
stos
jle
xchg
jne
xor
scas
adc
std
cmc
js
popf
std
sbb
xchg
mov
fcmovnu
pop
hlt
adc
cmp
mov
mov
int
push
adc
retf
adc
xor
mov
pop
jecxz
jle
pushf
out
dec
ror
stc
imul
cli
xor
cmc
cmp
loope
mov
mov
cmp
pop
jmp
std
or
cld
aad
cli
imul
scas
xlat
adc
xchg
adc
push
jmp
cmps
mov
and
pop
xor
cwde
jmp
(bad)
cs
icebp
idiv
sbb
cmps
dec
mov
cmc
mov
jle
pop
push
movs
xor
(bad)
pusha
loope
imul
push
stc
icebp
aaa
test
mov
out
xchg
std
xlat
clc
sub
outs
repz
jmp
test
out
pop
cmc
imul
add
jl
test
mov
out
std
popf
cld
push
dec
sub
psrlq
out
adc
bound
fstp
sub
(bad)
jb
aam
jge
lock
and
aas
clc
pop
in
fbld
(bad)
mov
aam
fwait
in
pop
cs
retf
lds
clc
retf
in
mov
inc
mov
jb
repnz
xchg
pop
nop
test
shl
leave
int3
cs
aam
and
add
outs
add
add
add
push
bound
clc
pop
ror
aad
ss
aaa
pop
dec
jecxz
outs
(bad)
mov
int3
push
dec
push
lsl
mov
ins
pusha
cmps
call
nop
xor
pop
retfw
nop
push
ret
sub
xor
scas
(bad)
retf
xchg
or
in
mov
ror
inc
icebp
mov
xchg
mov
stc
push
fwait
aas
sub
jb
es
test
mov
inc
ins
std
mov
lods
test
jno
repnz
das
imul
daa
xchg
cmp
add
pushf
fmul
mov
cmp
mov
pop
xor
cli
outs
xor
out
lds
sahf
iret
sub
cs
sbb
inc
iret
cld
in
dec
sub
cli
iret
sub
dec
(bad)
pop
jle
stos
clc
sti
out
lods
repnz
sti
das
and
div
popa
push
enter
scas
dec
std
call
mov
stos
ret
cmp
in
fild
or
push
cmp
sbb
enter
push
or
lods
retf
xchg
daa
adc
push
jo
mov
inc
and
les
or
cmc
int3
inc
stos
(bad)
aad
add
xlat
repz
xchg
imul
or
rcl
gs
jmp
pop
test
push
jnp
mov
or
imul
push
jecxz
add
jl
dec
adc
mov
ror
push
fcomp
mov
call
dec
cmp
mov
sub
xor
push
and
(bad)
jge
mov
pop
inc
mov
mov
cli
out
hlt
add
xchg
imul
les
movs
rcr
mov
xchg
push
xor
pop
popa
fisub
pop
loope
nop
or
(bad)
es
xlat
and
in
scas
sub
mov
mov
cmp
xor
jecxz
fwait
arpl
pushf
mov
in
imul
jp
mov
jne
iret
imul
test
inc
xor
pop
inc
nop
aam
fs
mov
mov
daa
pop
add
fdiv
out
das
push
ins
or
in
adc
push
pop
cli
adc
(bad)
cld
sbb
and
sbb
inc
jae
(bad)
lods
sub
pop
les
mov
addr16
test
stos
fs
mov
cmp
xchg
in
int3
jae
or
mov
or
popf
jb
jg
stos
sbb
rcl
stc
ins
test
mov
push
mov
cli
push
adc
inc
adc
xlat
(bad)
adc
fist
popa
inc
add
scas
test
mov
lea
or
mov
xor
icebp
mov
sbb
cdq
mov
inc
stos
lods
js
(bad)
add
lds
call
inc
jg
outs
std
or
std
repz
jg
xlat
inc
(bad)
jg
imul
jg
movd
lahf
cld
in
idiv
mov
fwait
jle
(bad)
paddb
push
in
scas
cmc
jmp
es
std
pop
mov
(bad)
jp
lds
cli
jmp
(bad)
dec
std
push
(bad)
xlat
std
cmc
jg
pop
div
shl
movs
mov
cld
fucompp
scas
ror
fild
outs
lock
std
push
mov
mov
fwait
std
es
cld
call
add
add
leave
outs
inc
ins
jg
pop
call
clc
mov
sbb
jle
jne
mov
xlat
sti
cmc
jg
(bad)
ja
or
fwait
cld
mov
cmp
push
mov
cld
pop
mov
std
fnstsw
xlat
ret
call
stc
popf
jle
(bad)
fstp
aaa
stc
dec
jle
(bad)
cld
idiv
repz
hlt
iret
outs
repnz
cld
out
jle
cmp
cld
push
mov
test
add
es
cld
es
shr
div
stc
popf
xor
jne
out
imul
call
es
jle
pop
sti
popf
jg
(bad)
xlat
std
sub
(bad)
aaa
loopne
jg
mov
mov
int
loop
outs
(bad)
nop
sbb
into
mov
inc
xchg
movs
sub
in
cli
lea
in
stc
in
jle
xor
in
jle
pop
lahf
mov
mov
cmc
xchg
fucomip
mov
(bad)
sub
stc
mov
cmps
call
out
inc
loopne
popf
pop
call
and
scas
cmc
pop
pushf
std
push
addr16
clc
mov
lods
(bad)
(bad)
jle
pop
sti
sub
push
inc
popa
out
(bad)
cli
ja
mov
call
outs
repnz
inc
pop
hlt
addr16
cli
stos
fistp
div
loop
cld
repnz
sti
cmp
pop
repnz
outs
icebp
sti
cld
es
iret
outs
call
lahf
(bad)
sti
pop
ret
mov
dec
jecxz
add
sar
idiv
call
popa
mov
stc
mov
jecxz
sti
xlat
cld
or
icebp
jmp
scas
inc
add
div
inc
jns
mov
and
lea
pop
sti
dec
jle
cmc
outs
bnd
pushf
rcr
mov
clc
cwde
ficom
cmp
mov
loop
or
sti
psllw
outs
inc
scas
push
pop
loop
and
call
leave
daa
mov
nop
push
cmp
(bad)
jle
popa
push
inc
xor
shl
xlat
out
jl
lods
jg
fisttp
ret
jg
inc
mov
xlat
cli
dec
movs
movs
add
mov
adc
lock
outs
repnz
std
pop
add
(bad)
sar
xor
push
mov
adc
call
fnstcw
mov
int
cmps
pop
not
push
das
dec
aaa
clc
xor
(bad)
psubd
jg
pop
sti
in
jle
fistp
in
(bad)
mov
dec
push
pop
or
iret
scas
neg
cld
ss
cld
push
mov
std
aad
(bad)
fbld
fwait
pop
lahf
inc
jecxz
(bad)
jne
lods
fucomip
mov
xor
pusha
fcomp
scas
cld
es
neg
cld
cli
mov
mov
jp
mov
pop
hlt
pop
adc
mov
call
psllq
scas
sti
jmp
icebp
outs
hlt
imul
jg
std
out
aaa
stc
mov
les
adc
(bad)
out
xchg
inc
retf
push
repz
les
hlt
jecxz
clc
lea
inc
cld
stc
outs
daa
aas
jle
fisttp
mov
cmp
dec
stc
sub
jg
aad
cmp
arpl
outs
(bad)
sub
aaa
clc
dec
mov
sub
out
inc
sbb
jae
jns
jne
inc
jmp
cld
mov
fs
pop
jecxz
push
hlt
mov
mov
jmp
in
clc
cmp
outs
(bad)
imul
mov
xchg
mov
stc
cmc
jg
pop
xchg
test
lds
push
jp
xor
and
in
dec
inc
sti
pop
sti
xor
pop
std
es
aaa
iret
jle
aas
call
std
pop
pop
push
stc
lea
mov
sti
mov
jge
shl
xlat
clc
jne
mov
fwait
stc
call
clc
jne
cmps
fisttp
jmp
scas
std
jmp
call
mov
cld
call
cmp
dec
mov
jns
and
cmp
(bad)
xlat
clc
cmc
mov
or
cmps
fucomip
xlat
clc
or
mov
std
test
push
jg
jg
pusha
jg
mov
scas
icebp
fbld
push
and
or
in
in
mov
ins
mov
cli
dec
jle
pop
add
push
popf
dec
sar
aaa
fs
cld
inc
jmp
adc
repz
addr16
jecxz
ss
and
or
ja
fild
aam
push
out
jg
pop
repz
jge
mov
clc
(bad)
lock
jle
test
clc
aaa
(bad)
fistp
outs
or
mov
jmp
fcmovb
out
add
sbb
out
inc
mov
xlat
cmps
(bad)
jmp
and
mov
hlt
pop
mov
outs
(bad)
jmp
outs
jg
call
lock
mov
scas
sti
fwait
pusha
jbe
pop
(bad)
cmp
clc
(bad)
jne
mov
jg
jg
jmp
lock
std
jbe
add
int3
and
mov
loopne
cld
xor
xchg
(bad)
xlat
mov
lea
or
push
(bad)
(bad)
(bad)
fisubr
add
imul
cmp
pusha
cmp
stos
mov
cli
lods
add
(bad)
es
pop
fscale
push
jno
fild
push
mov
dec
add
lds
pusha
adc
mov
push
jp
jp
out
add
daa
nop
xchg
mov
or
clc
xor
int
loopne
pop
sar
in
jg
sbb
std
(bad)
cdq
cmp
jg
mov
test
sub
bound
(bad)
loopne
aad
sti
mov
hlt
add
cmp
jl
xchg
(bad)
jmp
outs
ss
mov
scas
cmc
fwait
inc
jle
xchg
pop
xchg
pop
loopne
cli
pop
and
div
inc
xchg
dec
jle
jo
cmps
cli
xlat
ret
iret
mov
repz
dec
jo
jle
pop
not
and
(bad)
stos
xchg
hlt
xlat
popa
adc
or
loope
(bad)
jne
fld
hlt
mov
inc
mov
lahf
mov
pop
out
aaa
clc
jne
cmp
repz
(bad)
movs
shl
and
mov
lahf
shl
std
xchg
push
push
or
cwde
idiv
clc
(bad)
jle
sti
lods
cmp
cld
pop
pusha
xchg
cld
(bad)
add
lock
(bad)
frstor
mov
int
aas
cs
mov
std
int
loopne
popf
mov
inc
clc
cmp
dec
mov
xchg
ja
mov
mov
sbb
outs
sar
aaa
stc
mov
mov
imul
jg
cli
in
clc
popf
jg
cli
jmp
ja
out
xlat
ret
cld
ret
mov
movs
mov
pop
push
and
inc
repnz
cmp
sub
aas
dec
push
test
pop
pop
dec
out
add
nop
in
ffreep
fisubr
mov
int
std
cmp
sti
imul
xor
popa
pop
jmp
ret
scas
icebp
imul
retf
sbb
mov
xchg
out
(bad)
push
shl
fnstsw
aaa
pusha
pop
xchg
data16
loopne
fisttp
or
(bad)
repz
cld
repnz
mov
hlt
fwait
lock
je
inc
cmp
xor
or
loope
aas
clc
mov
cmc
loopne
cld
inc
jg
add
(bad)
jg
hlt
xlat
sti
xor
push
pusha
(bad)
jle
lock
cdq
xor
mov
(bad)
scas
stc
imul
mov
dec
pop
sahf
jl
imul
fbld
pop
cdq
mov
or
leave
push
stc
mov
stos
in
cwde
shr
test
mov
imul
(bad)
movs
stos
dec
(bad)
dec
and
repz
and
xor
into
push
lahf
pop
xchg
std
mov
or
clc
xor
jle
sahf
hlt
repz
lahf
mov
std
call
clc
cld
(bad)
jns
mov
lahf
jecxz
mov
jmp
cli
(bad)
jg
pop
std
fidivr
lahf
leave
pop
mov
(bad)
fidivr
mov
sti
mov
pop
mov
clc
sbb
outs
daa
pop
out
cld
sbb
jle
(bad)
mov
in
jle
pop
lock
pop
mov
mov
(bad)
mov
cld
sbb
ja
jg
outs
clc
sbb
cmps
mov
std
push
mov
outs
repz
(bad)
stc
lods
jg
(bad)
jg
fcomip
out
outs
sti
or
fcomip
mov
sbb
mov
jne
mov
jle
fisttp
mov
jle
sti
aaa
call
mov
pop
jg
fucomip
ja
add
lock
cli
jne
std
fcomip
mov
lods
jg
fucomip
aaa
(bad)
sub
ja
sbb
mov
sbb
mov
icebp
(bad)
mov
add
dec
not
sti
lea
(bad)
ja
call
ins
dec
retf
mov
mov
(bad)
(bad)
jmp
out
mov
push
int
inc
inc
mov
std
xchg
neg
std
push
mov
mov
mov
call
std
outs
cli
fwait
cld
idiv
std
mov
icebp
arpl
push
jmp
icebp
(bad)
outs
mov
push
(bad)
pop
std
mov
(bad)
pop
std
dec
mov
jecxz
out
aaa
stc
ins
jg
fucomip
mov
jle
(bad)
aaa
jmp
mov
popf
jle
(bad)
ja
dec
jg
(bad)
aaa
(bad)
sub
mov
jg
(bad)
(bad)
jg
fisttp
jmp
mov
cld
mov
std
xchg
jle
pop
cld
mov
dec
mov
mov
mov
sbb
ret
out
(bad)
jmp
fsubr
sbb
mov
cli
fwait
jmp
mov
std
push
mov
std
cs
std
mov
repz
cld
ins
jle
pop
push
jle
aaa
(bad)
jne
sbb
lea
(bad)
mov
add
test
fcomip
ja
pop
jg
push
jmp
sti
(bad)
ja
lea
(bad)
aaa
sti
sub
ja
popf
jg
(bad)
mov
dec
sub
or
mov
lods
jg
outs
(bad)
cmp
out
in
(bad)
mov
xchg
(bad)
aaa
std
add
mov
or
xlat
dec
jle
(bad)
mov
add
clc
aaa
std
popf
sbb
push
js
mov
add
shr
jmp
push
xor
fcomip
aaa
cli
int
sti
fucomip
aaa
(bad)
in
jg
fbstp
std
popf
jg
shr
fist
or
dec
jg
(bad)
mov
in
aas
mov
fld
jecxz
mov
(bad)
sti
call
imul
mov
test
loope
cld
sbb
out
lds
fwait
std
cmps
mov
cld
fsubr
jmp
push
mov
cld
cs
cli
in
jg
pop
out
dec
jle
(bad)
mov
sub
mov
pop
ja
mov
out
outs
mov
loopne
cli
sub
(bad)
into
mov
idiv
bnd
sbb
(bad)
ja
(bad)
fbstp
aaa
sti
sbb
ja
test
std
out
cmc
outs
stc
pop
(bad)
jbe
jg
pop
xor
ins
jle
fcomip
mov
pop
push
jmp
push
shr
clc
fnstsw
fistp
pop
out
sbb
mov
daa
mov
or
addr16
push
mov
cld
sbb
dec
outs
(bad)
fwait
std
cmps
mov
popf
mov
sbb
pop
mov
cld
jbe
repz
sahf
inc
in
hlt
ja
inc
jl
or
or
ror
mov
cmp
jns
cmc
lock
cmp
ret
mov
popf
jg
fucomip
mov
dec
jle
fbstp
or
lea
pop
lock
pop
ins
in
inc
fwait
(bad)
push
mov
dec
fucomp
clc
shr
fstp
(bad)
push
mov
mov
clc
je
retf
icebp
stos
repnz
dec
aam
in
lahf
(bad)
jnp
aad
cmp
(bad)
sbb
dec
outs
jns
idiv
push
(bad)
(bad)
hlt
lods
fbstp
jmp
xacquire
mov
fyl2xp1
std
jle
(bad)
pop
mov
mov
sbb
mov
dec
lock
repnz
cs
outs
idiv
ss
sbb
aaa
(bad)
in
jg
fistp
arpl
in
mov
fwait
(bad)
ss
std
mov
mov
lods
jle
hlt
mov
pop
ds
sbb
cli
fnsave
(bad)
pop
(bad)
popf
jg
(bad)
outs
cmc
cmp
jle
loope
mov
jnp
clc
call
jle
(bad)
aaa
jmp
mov
sub
jecxz
bnd
pop
mov
pop
jg
fucomip
ja
lods
jle
fcomip
mov
in
jg
fucomip
ja
fnstsw
fistp
jmp
jb
cld
fld
fcomip
psubq
sbb
hlt
lahf
repnz
ud0
sub
daa
jg
pop
stc
stc
out
std
xchg
pop
jg
pop
push
idiv
ret
iret
(bad)
lock
push
push
jg
outs
neg
popf
outs
sbb
cli
jl
clc
add
stc
mov
(bad)
sbb
cmps
fstp
outs
clc
pop
dec
(bad)
mov
repz
cli
(bad)
into
jmp
mov
(bad)
fsubr
cmp
sti
dec
jle
fcomip
aaa
std
ins
dec
add
pop
lock
outs
cli
pop
call
cld
cld
pop
cld
dec
(bad)
in
jg
sti
mov
mov
cli
popf
inc
mov
cmps
daa
mov
jg
(bad)
ja
ins
jle
fcomip
mov
sub
aaa
stc
lods
jg
(bad)
pop
cld
into
aas
ds
ins
jg
(bad)
jle
fucomip
ja
sub
mov
sbb
ds
test
jmp
jg
shr
ss
mov
(bad)
mov
push
cld
cmp
lods
cmps
das
out
dec
lahf
mov
fincstp
pop
std
xor
repz
paddd
mov
cmp
cld
scas
call
jle
(bad)
ja
lods
jg
cmp
hlt
sti
cld
dec
and
test
out
mov
fwait
inc
jg
ja
jae
mov
fnsave
mov
out
xchg
mov
ss
clc
aaa
and
mov
cld
mov
(bad)
mov
std
push
mov
std
push
mov
push
int3
clc
cmp
into
mov
jle
(bad)
mov
in
jle
fucomip
aaa
call
call
dec
add
fucomip
into
cmps
mov
cmp
pop
(bad)
outs
fisttp
cld
ja
xor
sbb
pop
dec
mov
std
into
mov
std
(bad)
mov
inc
pop
jg
fistp
std
sbb
jle
fistp
xchg
ret
fucomip
jmp
inc
out
jb
stc
stc
lahf
lock
jl
(bad)
jecxz
jg
pop
icebp
jmp
dec
jmp
ret
pop
stc
mov
adc
fistp
pop
jg
lahf
inc
shl
dec
out
cli
in
cld
(bad)
ja
jg
das
clc
fs
dec
call
mov
std
out
hlt
mov
mov
jg
mov
(bad)
aaa
stc
in
jle
fucomip
mov
lods
jle
(bad)
aaa
stc
lea
(bad)
mov
popf
jle
fcomip
ja
jg
fucomip
pop
nop
repnz
jne
jecxz
in
xlat
dec
mov
clc
mov
in
jle
(bad)
ja
adc
imul
mov
dec
jle
fcomip
mov
test
jle
cmp
in
clc
in
jg
(bad)
jecxz
fistp
cld
jecxz
(bad)
sbb
cmp
popf
mov
std
xchg
mov
jle
fcomip
aaa
std
lods
jle
(bad)
mov
sbb
fistp
mov
sbb
jbe
mov
outs
(bad)
cmp
add
fcomip
shl
iret
dec
leave
pop
repnz
jmp
xchg
rcr
clc
mov
clc
jecxz
pop
std
mov
sti
sbb
xchg
std
and
stc
out
push
(bad)
aam
pop
cli
jecxz
cmps
mov
std
mov
out
(bad)
push
iret
jg
aas
loop
cli
ins
jle
call
icebp
out
(bad)
into
aas
mov
cmp
clc
std
hlt
pop
jle
(bad)
dec
(bad)
lea
(bad)
aaa
dec
jle
(bad)
aaa
cld
sub
mov
pop
icebp
sbb
push
mov
dec
mov
xchg
ds
lods
jle
(bad)
mov
ins
rcr
mov
repz
inc
mov
cmp
mov
rol
mov
cmps
outs
(bad)
sbb
jge
rol
aas
(bad)
pop
jle
addr16
jnp
mov
call
idiv
jp
mov
in
jg
fucomip
ja
ins
jg
(bad)
mov
sbb
xchg
(bad)
jg
pop
lock
fucomip
ja
mov
mov
fnstcw
clc
sub
(bad)
cmc
cld
repnz
mov
(bad)
outs
stc
xchg
stc
outs
jge
in
jmp
(bad)
mov
popf
jg
(bad)
xchg
pop
cld
sar
dec
out
push
inc
hlt
idiv
mov
pop
mov
fbstp
daa
out
(bad)
sahf
mov
std
or
out
nop
out
(bad)
neg
jle
(bad)
idiv
(bad)
ja
out
jl
(bad)
pop
inc
xchg
stc
icebp
(bad)
pop
jl
pop
jle
mov
outs
call
dec
mov
call
aad
cmc
pop
push
mov
sti
lods
jle
fcomip
aaa
inc
sbb
push
pop
lahf
cld
idiv
fnstsw
std
ins
jg
into
das
sbb
push
pop
lea
jg
in
sti
mov
fstp
std
call
in
std
dec
mov
pop
mov
(bad)
mov
ins
jg
fcomip
mov
ins
jg
(bad)
mov
dec
jg
fucomip
ja
in
jle
fucomip
ja
sbb
lea
cld
mov
clc
sub
(bad)
mov
aas
jns
or
jbe
jg
xlat
xchg
pop
hlt
loopne
mov
jmp
out
ja
in
jle
fucomip
mov
add
(bad)
(bad)
cmp
clc
fucomp
in
jge
lods
xchg
fistp
inc
lds
cld
cmps
fnstsw
hlt
aaa
(bad)
in
jg
out
clc
icebp
stos
fcomip
ja
cld
aaa
(bad)
in
(bad)
jg
(bad)
leave
outs
dec
mov
lahf
call
(bad)
cmps
mov
aaa
(bad)
sub
loop
aaa
cli
dec
movd
aaa
jns
fwait
(bad)
push
mov
cmp
dec
jg
fcomip
hlt
aaa
(bad)
in
iret
jle
(bad)
mov
(bad)
mov
repnz
(bad)
pop
jl
mov
pop
mov
mov
sub
pop
cmps
das
jmp
jle
(bad)
scas
scas
jg
fucomip
retf
(bad)
ja
icebp
pop
push
inc
mov
fwait
add
and
fisttp
mov
fcomip
ja
in
mov
popf
ds
lods
jg
(bad)
aaa
stc
lods
ds
in
aas
jle
pop
std
idiv
cmp
sub
jo
sti
pop
ds
fsubrp
cld
icebp
dec
movs
mov
outs
stc
jnp
push
mov
fistp
(bad)
out
in
fucomip
mov
clc
pop
(bad)
cmps
movd
cli
dec
ds
jmp
mov
cmps
mov
jle
(bad)
rcr
cmp
(bad)
outs
repz
(bad)
jbe
jg
(bad)
fstp
std
mov
outs
repz
pop
mov
std
mov
mov
push
mov
outs
std
fstp
scas
jle
(bad)
daa
jle
pop
lock
stc
in
pop
cld
ss
ja
leave
(bad)
mov
mov
loope
std
mov
out
stc
repnz
call
jnp
(bad)
mov
ja
jmp
fcomip
mov
(bad)
(bad)
jbe
xlat
outs
std
fstp
lahf
cld
ins
jle
push
add
mov
in
mov
jmp
bnd
stc
(bad)
jbe
jle
(bad)
aad
call
clc
lods
jle
scas
jle
into
dec
dec
mov
pop
std
mov
(bad)
(bad)
jmp
lods
in
ds
jmp
jle
call
daa
jl
in
iret
stc
in
pop
jno
jnp
push
jecxz
pop
cmp
(bad)
lods
(bad)
jecxz
cld
push
mov
loopne
(bad)
sub
aaa
jmp
cmc
out
aad
jge
(bad)
ss
rcr
(bad)
hlt
xlat
stc
int
repz
jmp
cld
or
aaa
sti
xor
dec
jle
pop
div
stc
sbb
stc
mov
jne
jmp
push
mov
std
inc
mov
cld
xchg
inc
mov
xchg
pop
jmp
std
sub
mov
xor
clc
cmc
sub
(bad)
aaa
dec
jle
dec
jle
fbld
xlat
cld
cmc
jle
pop
out
mov
cli
mov
xchg
(bad)
cld
mov
mov
in
mov
(bad)
xlat
cld
mov
out
aaa
std
add
idiv
outs
sti
jmp
mov
pop
std
scas
mov
jg
pop
push
pop
sti
xor
aaa
cld
in
jg
pop
jo
call
jle
pop
sti
popf
fnstcw
stc
icebp
(bad)
rol
mov
pushf
cld
out
idiv
outs
lahf
call
rol
psrld
(bad)
loopne
jmp
mov
sti
aas
std
stos
(bad)
mov
lahf
aaa
jg
out
mov
in
psubb
(bad)
jle
(bad)
aaa
clc
cmc
jg
pop
call
sti
sub
aaa
push
in
fucomip
xlat
std
lea
(bad)
mov
popf
jle
fcomip
mov
cmc
jle
fcomip
xlat
(bad)
cmc
jle
pop
repz
push
jle
fcomip
mov
mov
cmc
mov
test
jg
fcomip
ja
jne
in
aaa
sti
jne
in
(bad)
jle
(bad)
aaa
and
jecxz
dec
xchg
pop
jmp
clc
dec
jg
in
dec
sbb
push
mov
sbb
std
mov
popa
gs
jbe
loope
xchg
cld
es
std
jp
pop
repnz
xchg
sbb
add
repnz
inc
mov
inc
mov
retf
(bad)
std
xchg
inc
(bad)
scas
fwait
cld
cs
mov
mov
pop
(bad)
fsubr
pop
(bad)
mov
or
cli
(bad)
inc
(bad)
cld
mov
sbb
aas
jno
retf
aas
(bad)
mov
pop
cmps
dec
(bad)
fsub
mov
(bad)
nop
jg
idiv
adc
repz
das
call
das
jg
pop
jl
out
loope
icebp
xchg
mov
scas
call
scas
jmp
fldcw
sbb
cmps
mov
mov
(bad)
mov
pop
cld
jp
icebp
outs
icebp
jmp
mov
std
out
(bad)
scas
dec
mov
idiv
outs
mov
cld
jp
loope
stc
arpl
cld
xchg
cld
mov
mov
call
(bad)
aaa
(bad)
sbb
clc
add
or
fcomip
ja
(bad)
loop
(bad)
cmp
ret
(bad)
jne
mov
lea
fucomip
ja
in
jle
mov
shr
mov
call
lds
fwait
std
cs
mov
(bad)
sub
leave
(bad)
inc
mov
cld
xchg
jmp
nop
cli
cmp
outs
pop
aas
cld
dec
jg
icebp
das
cld
test
out
mov
adc
outs
mov
cld
jns
sti
push
call
outs
jmp
retf
in
pop
push
out
aas
jl
stc
idiv
cs
out
daa
mov
cld
fidivr
std
out
jmp
xchg
test
scas
stc
arpl
(bad)
fsubr
cld
repz
sbb
scas
imul
fsubr
mov
push
mov
xlat
jmp
xlat
std
jne
cs
fucomip
mov
jne
xchg
(bad)
aaa
sbb
dec
jle
(bad)
jle
pop
out
aaa
stc
mov
fstp
sti
mov
in
xlat
cld
xor
ja
mov
mov
cld
push
mov
cld
out
aad
lock
pop
int
jmp
in
cld
lea
(bad)
xlat
dec
jg
pop
sti
int
xchg
icebp
into
cmps
mov
(bad)
std
es
(bad)
mov
nop
xchg
push
cli
cmc
jle
(bad)
aaa
clc
lods
jle
(bad)
jecxz
mov
outs
(bad)
(bad)
jp
icebp
outs
ja
out
out
xchg
outs
call
(bad)
jecxz
(bad)
pop
cmp
sbb
jmp
dec
std
lea
into
out
div
jle
iret
cld
das
lahf
cld
mov
cli
pop
(bad)
in
mov
mov
in
cli
jmp
idiv
(bad)
fwait
std
cli
test
outs
clc
sbb
cmp
(bad)
mov
cmc
jle
in
sti
mov
std
pop
jmp
stc
in
jg
pop
jo
stc
popf
ds
sub
or
pop
mov
outs
cmc
cmp
fnstcw
pop
sti
aaa
(bad)
mov
dec
mov
jp
jmp
dec
mov
std
cmps
leave
outs
cli
fwait
xchg
retf
jmp
out
inc
mov
hlt
jmp
(bad)
mov
std
jbe
into
outs
std
cmp
mov
clc
retf
repnz
(bad)
mov
xchg
je
aaa
std
pop
rcr
repnz
mov
mov
mov
mov
(bad)
fsubr
sbb
inc
mov
(bad)
cli
mov
xchg
test
cli
(bad)
jmp
out
fistp
(bad)
jg
cmp
xchg
mov
in
(bad)
es
std
xchg
mov
sahf
std
add
hlt
dec
mov
push
jg
out
jns
dec
inc
pop
cmc
scas
std
loop
in
jg
(bad)
sahf
pop
mov
mov
lahf
cli
sub
aaa
cld
cmc
jg
fbstp
stc
or
aaa
cld
cmc
jg
fcomip
mov
ins
xchg
pop
lahf
jb
mov
out
mov
in
jmp
mov
pop
std
into
leave
das
clc
icebp
(bad)
ja
mov
es
(bad)
xchg
mov
repz
aas
(bad)
mov
repnz
jne
jge
mov
outs
neg
std
jp
in
out
lock
sbb
inc
mov
ds
jge
popf
(bad)
ja
(bad)
in
lahf
mov
(bad)
pop
in
inc
(bad)
cmp
dec
cld
popw
(bad)
lea
(bad)
xlat
dec
mov
jle
fucomip
mov
pop
mov
movd
popf
in
sti
icebp
outs
jge
sbb
mov
fucomi
jbe
idiv
sbb
jmp
push
mov
inc
dec
stos
(bad)
rcr
aaa
clc
pop
jg
pop
sti
ja
sub
repz
jmp
mov
aas
cmc
js
(bad)
cmp
not
mov
fcomip
into
rcr
sti
cmc
jg
(bad)
(bad)
jle
(bad)
aaa
(bad)
in
jg
(bad)
ja
popf
jg
fcomip
aaa
std
or
inc
test
out
mov
jne
mov
cld
xlat
dec
stc
lea
in
icebp
(bad)
mov
cmc
mov
inc
jg
pop
sti
(bad)
cld
adc
lahf
mov
loop
ret
iret
mov
(bad)
fnstsw
(bad)
jge
fucomip
mov
clc
dec
jle
pop
out
mov
ins
jle
outs
in
ds
into
mov
ds
notrack
ja
repz
cmps
cld
out
lock
xchg
(bad)
ja
je
fstp
cmps
scas
inc
dec
mov
sti
(bad)
test
cmp
push
mov
push
mov
call
jmp
mov
std
idiv
ja
mov
add
sbb
out
sti
lods
sub
mov
outs
repnz
inc
mov
cld
mov
mov
repz
std
dec
lahf
std
mov
retf
out
repnz
inc
sti
clc
xchg
(bad)
mov
mov
clc
mov
dec
jg
hlt
mov
test
inc
in
cli
int
(bad)
xlat
sti
mov
fstp
(bad)
jle
(bad)
pop
cld
into
scas
jg
lahf
cld
sti
(bad)
loope
call
xchg
jmp
in
aas
sti
xlat
(bad)
cmc
jg
scas
clc
jmp
cli
jmp
cli
dec
mov
cmps
cmps
dec
(bad)
cmp
je
jmp
(bad)
mov
hlt
aas
jmp
(bad)
and
addr16
test
mov
jg
lahf
(bad)
push
std
aam
pop
sti
(bad)
div
lahf
int
mov
jmp
vpxor
call
(bad)
call
ja
out
aas
div
jl
cmps
ds
in
ficomp
lock
addr16
scas
cmps
adc
mov
cmp
cmps
mov
jge
lods
mov
std
jbe
shr
fwait
(bad)
push
aas
xchg
cld
cmps
mov
cld
fwait
std
(bad)
mov
mov
dec
stos
jnp
dec
bnd
inc
mov
(bad)
mul
cmp
mov
pop
jl
jl
lods
je
ja
lea
mov
fstp
cld
cmps
mov
(bad)
jp
imul
(bad)
pop
mov
leave
out
lahf
gs
cli
inc
mov
cmp
jecxz
loope
mov
hlt
rcl
mov
xchg
jns
hlt
fldenv
call
cld
jmp
(bad)
loop
in
stc
pop
inc
lahf
stc
ret
call
xchg
xchg
aaa
xchg
lahf
cli
(bad)
pop
dec
ds
stc
stos
mov
call
repnz
std
les
dec
outs
(bad)
hlt
(bad)
stos
stos
mov
in
dec
xchg
repz
aaa
jmp
mov
or
mov
fstp
inc
mov
xlat
inc
icebp
out
mul
pop
cmp
mov
sti
lea
fild
(bad)
into
scas
repz
mov
(bad)
fidivr
(bad)
es
jl
daa
sahf
pop
fistp
div
xchg
fwait
std
mov
std
outs
icebp
cmp
dec
mov
(bad)
cmp
imul
inc
dec
jg
cmp
jecxz
ret
out
clc
or
pop
lock
out
repnz
scas
pop
dec
out
(bad)
cs
jle
(bad)
ja
popf
leave
xor
fucomip
ja
push
hlt
mov
lods
jg
(bad)
ja
pop
aas
cli
add
mov
inc
aas
dec
jle
hlt
(bad)
jg
std
popf
out
out
jge
paddb
rcr
cmc
(bad)
out
scas
mov
stc
lahf
std
lahf
popf
std
int3
aas
popf
push
out
mov
dec
sti
pop
fstp
idiv
stc
mov
ja
jno
jae
(bad)
jle
(bad)
aaa
and
call
adc
ja
jnp
xor
std
push
mov
iret
inc
scas
jmp
outs
clc
adc
cmp
push
daa
aas
xchg
jl
jmp
jp
mov
std
push
mov
shl
in
(bad)
std
into
mov
jecxz
loopne
jecxz
loope
(bad)
pop
movs
mov
fldcw
pop
and
lds
imul
outs
inc
sub
pop
daa
mov
adc
(bad)
popf
jg
outs
sbb
mov
in
ja
in
ja
sti
or
xlat
std
dec
xchg
pop
sti
mov
lea
pop
sub
dec
jle
fucomip
ja
sbb
std
lea
(bad)
aaa
call
aaa
std
in
jle
in
std
ins
out
jge
sti
(bad)
es
jl
xchg
std
icebp
scas
jmp
jg
idiv
xchg
(bad)
std
lahf
cli
jecxz
(bad)
xlat
jg
mov
leave
cmc
fcomip
aas
cld
loop
jmp
cmp
arpl
(bad)
and
popf
jle
std
(bad)
ja
stc
test
mov
out
cmc
inc
cmps
lahf
cld
sar
fidivr
cmc
movq
stc
aas
hlt
dec
dec
jg
out
clc
or
mov
mov
in
jg
mov
in
(bad)
mov
call
sbb
std
fwait
cld
mov
outs
stc
mov
repnz
rol
mov
std
fsubr
mov
jl
xchg
std
fsubr
mov
std
jne
mov
mov
sbb
ret
leave
ret
das
jle
dec
dec
jg
pop
mov
sti
or
(bad)
mov
pop
jg
(bad)
mov
in
jg
mov
lods
jg
(bad)
mov
or
aaa
cld
lods
jg
mov
mov
(bad)
out
lock
xchg
sbb
fwait
inc
jg
idiv
push
(bad)
repz
das
cld
out
fstp
retf
pop
jg
push
push
std
out
std
std
sti
pop
iret
test
pop
repnz
adc
das
cli
movs
jg
fistp
sti
(bad)
mov
(bad)
stc
(bad)
(bad)
fnstsw
aas
std
movq
cli
aas
jnp
test
fistp
loop
mov
das
cld
fnstsw
aas
repnz
(bad)
push
scas
fwait
jg
icebp
outs
mov
sbb
fcomp
outs
stc
pop
aas
cld
lods
jg
fucomip
mov
mov
in
pop
inc
mov
mov
mov
std
pop
cli
pop
dec
leavew
scas
popf
cld
mov
imul
lock
out
neg
std
scas
cmp
stc
std
out
int
repz
ja
repz
outs
dec
mov
jg
in
cld
sub
cmc
pop
(bad)
cs
call
mov
clc
aaa
mov
mov
jle
fucomip
ja
cli
dec
aas
sbb
xchg
jmp
jle
pop
fistp
cmps
stc
dec
(bad)
jns
(bad)
std
pop
cld
jnp
mov
mov
daa
cld
xor
jmp
std
mov
jle
iret
cmp
dec
(bad)
clc
fstp
stc
ja
mov
jmp
lahf
(bad)
jae
repnz
fstp
fnstsw
setg
out
test
mov
lahf
cli
pop
das
cmps
jg
pop
(bad)
cld
fld
cmc
pop
pop
(bad)
jp
shl
lock
mov
fisttp
cld
fsubr
leave
outs
dec
jg
(bad)
aaa
(bad)
jne
ret
(bad)
xlat
dec
(bad)
out
pop
(bad)
in
xchg
cld
out
icebp
outs
neg
cli
mov
out
cmp
lods
out
jge
fstp
in
mov
js
imul
loopne
stc
pop
cld
jp
loope
cli
jmp
xchg
in
cld
idiv
std
push
mov
and
imul
inc
loope
lock
inc
mov
mov
and
(bad)
clc
ins
inc
idiv
mov
jnp
pop
cmps
fisttp
jae
cmp
mov
stc
in
idiv
(bad)
stc
pop
dec
jmp
fistp
div
out
hlt
idiv
cwde
mov
mov
mov
std
hlt
outs
jl
popf
jg
xchg
inc
jg
pop
cmc
pop
lods
fdivrp
cmps
dec
(bad)
(bad)
lods
stos
out
(bad)
jg
pop
lock
jg
pop
std
ret
call
mov
mov
popf
(bad)
paddd
mov
(bad)
mov
jmp
mov
mov
outs
repz
pop
push
mov
lods
jg
outs
hlt
imul
out
repnz
push
mov
fstp
or
sub
fucomip
fisubr
mov
imul
or
inc
jmp
cmps
mov
out
cli
fwait
std
sbb
push
call
sbb
cmc
jle
in
mov
(bad)
out
shr
fwait
cld
cmps
mov
call
mov
xchg
arpl
sbb
je
stc
int
repz
cld
xchg
call
int
xchg
(bad)
jbe
shr
lock
mov
cld
aam
out
repz
cld
ds
pop
std
int3
pop
mov
cmc
pop
jecxz
das
clc
add
retf
pop
jg
inc
std
pop
pop
cs
jl
hlt
in
mov
pop
std
push
ja
mov
lock
stc
retf
(bad)
sar
(bad)
scas
lahf
stc
xchg
mov
pop
(bad)
mov
gs
(bad)
call
ret
dec
jmp
mov
cmp
mov
ja
jle
fcomip
xlat
clc
cmc
jg
aaa
and
dec
jmp
xchg
mov
sti
cmc
jle
(bad)
jle
fcomip
mov
dec
jg
(bad)
aaa
clc
popf
jle
fucomip
mov
xchg
fcomip
xlat
std
sub
ja
popf
jg
dec
mov
xchg
(bad)
aaa
dec
jle
(bad)
xlat
cmps
mov
arpl
cmps
mov
cld
int
(bad)
inc
mov
xchg
xbegin
cli
lods
fucomip
mov
pop
jle
fbld
ja
cmp
(bad)
xlat
sti
lea
(bad)
mov
lods
jle
fcomip
ja
fidivr
out
pop
jo
jecxz
jg
pop
test
out
ds
sti
pop
sahf
dec
(bad)
in
dec
inc
fucomip
ja
in
ja
int
xchg
hlt
ja
cli
jge
aas
sub
fucomip
aaa
(bad)
(bad)
ja
mov
mov
(bad)
ud0
out
jg
out
jmp
retf
(bad)
clc
aas
repz
rep
out
jle
cmc
xlat
jl
jnp
mov
repnz
push
mov
std
jp
repz
std
push
mov
(bad)
(bad)
std
xor
xlat
cld
mov
pop
cld
imul
mov
std
sbb
aaa
cld
pop
rcr
ja
sbb
mov
neg
ja
sbb
ja
xor
xlat
std
cmc
jg
inc
push
clc
xchg
or
inc
and
inc
out
jle
lea
fucomip
xlat
sti
int
xchg
cld
ja
repz
std
clc
fsubrp
jle
lock
call
std
(bad)
mov
push
mov
shl
std
leave
xlat
(bad)
(bad)
popf
jg
aas
in
jmp
stc
(bad)
xchg
repz
cmps
inc
std
out
(bad)
pop
push
mov
jle
clc
mov
ja
cmp
cli
cld
idiv
arpl
mov
in
sti
(bad)
mov
in
(bad)
addr16
mov
jg
lahf
clc
stos
(bad)
mov
cld
(bad)
jg
pop
repz
cld
les
clc
outs
cmp
call
cmps
stc
lahf
std
fwait
std
(bad)
ja
mov
daa
stc
pop
jle
fcomip
xlat
jmp
mov
int
ret
fcomip
mov
daa
jmp
aaa
sti
dec
jg
fucomip
aaa
stc
xor
cmc
jg
fistp
ja
popf
jg
fcomip
ja
mov
inc
enter
in
outs
repz
cld
(bad)
mov
std
xchg
mov
cmp
aaa
mov
(bad)
push
mov
movs
mov
jo
hlt
fist
jmp
out
std
inc
mov
std
push
mov
(bad)
es
mov
mov
std
inc
mov
fdecstp
mov
inc
aas
mov
sub
shl
rcr
xchg
jg
daa
mov
ja
jns
cld
(bad)
out
mov
rcr
jmp
idiv
sbb
rcr
call
jnp
jg
fcmovnu
jg
daa
(bad)
fcos
aam
std
(bad)
push
aas
clc
sbb
div
mov
aas
(bad)
pop
jg
adc
outs
std
jmp
(bad)
fstp
inc
outs
clc
(bad)
push
test
cld
push
aas
neg
scas
(bad)
jmp
xor
enter
inc
movs
push
cli
fild
xchg
sbb
sbb
(bad)
mov
dec
sub
outs
inc
pop
imul
sti
cmc
sub
lods
pop
out
aaa
dec
jle
push
pop
cld
out
icebp
outs
(bad)
fwait
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
fbld
neg
addr16
das
xlat
aas
push
mov
out
std
sahf
nop
xchg
stos
cmps
lahf
sbb
mov
mov
sahf
cmp
call
stc
pop
dec
icebp
popf
cmp
aas
cmc
sti
jl
pop
mov
lock
das
(bad)
xchg
aaa
outs
(bad)
out
clc
pop
sti
cmps
(bad)
lock
jmp
pop
(bad)
scas
pop
cld
idiv
pop
xchg
aas
cli
lahf
cli
in
xchg
pop
lock
mov
repz
xlat
and
(bad)
loop
scas
inc
pop
add
cli
jne
sbb
jg
pop
repz
stc
cmc
jle
pop
out
cli
lea
mov
sub
clc
cmp
cmc
jle
(bad)
mov
jg
cdq
sbb
int
rcr
cld
mov
sub
push
mov
mov
ins
sub
pop
push
(bad)
cli
ja
lods
adc
mov
adc
nop
mov
mov
(bad)
call
mov
pop
repz
std
(bad)
cli
(bad)
cmp
push
jg
fcomip
daa
cld
dec
mov
neg
fistp
cli
ins
jg
mov
fidivr
cld
jmp
call
repnz
cmp
pop
clc
in
ror
(bad)
repz
das
jmp
fdivrp
gs
fistp
dec
dec
push
jg
mov
xchg
(bad)
stc
out
hlt
pop
jl
or
fist
sub
mov
movs
icebp
fist
mov
cld
xlat
sti
lea
pop
movs
and
mov
dec
jmp
jle
(bad)
aaa
std
lods
jg
fucomip
mov
in
jle
fcomip
aaa
cmps
mov
xchg
cld
int
fcmovnu
div
mov
fsubr
aaa
mov
arpl
(bad)
aaa
stc
cmc
jg
dec
stos
call
leave
outs
icebp
pop
std
(bad)
mov
mov
lds
cld
dec
mov
jg
or
jle
mov
add
std
push
jle
jp
test
sti
mov
ds
push
div
push
cmp
add
out
cld
les
xlat
mov
(bad)
pop
cld
sahf
lahf
jge
(bad)
mov
xlat
out
stc
(bad)
scas
ja
out
loope
inc
call
jg
jg
adc
jg
inc
jg
jg
cmp
push
pop
mov
adc
and
outs
neg
scas
repz
rcr
repz
movlhps
or
popf
(bad)
aaa
and
ins
jle
(bad)
mov
ins
jg
fcomip
aaa
sti
mov
in
aaa
cmps
sub
xlat
es
clc
or
fs
popf
jg
adc
aaa
dec
jle
in
dec
pusha
jg
(bad)
mov
sar
mov
mov
std
(bad)
mov
cld
cmps
mov
mov
imul
std
cmp
in
clc
fsubrp
cld
pop
cmps
idiv
(bad)
ins
test
pop
cmps
push
pmaxsw
xchg
scas
jle
ret
inc
das
jle
jmp
push
pop
cld
ja
jp
in
ins
stc
mov
cmps
ja
(bad)
out
push
out
call
jnp
out
in
mov
push
call
imul
sbb
std
fwait
dec
mov
daa
mov
jmp
fistp
aaa
dec
jg
fcomip
aaa
and
mov
in
outs
clc
shr
neg
fistp
std
cmp
lahf
push
daa
pop
mov
stc
or
lock
outs
dec
ss
cld
xor
popf
test
mov
lock
ins
jle
dec
mov
es
dec
pop
std
(bad)
mov
test
(bad)
in
ds
jmp
cli
in
std
jp
loopne
and
pop
jle
cmc
cmp
call
cli
ja
(bad)
out
aaa
(bad)
popf
jle
mov
inc
aas
stc
jnp
hlt
out
sti
xchg
mov
stc
lahf
pop
(bad)
cmp
into
xchg
out
ror
inc
iret
into
out
inc
mov
mov
scas
mov
aas
repz
stc
aas
(bad)
in
jmp
mov
loopne
std
or
loop
(bad)
(bad)
jle
(bad)
aaa
cld
int
(bad)
fucomip
aaa
call
mov
mov
xchg
fucomip
aaa
clc
dec
jg
pop
repz
sti
or
or
mov
lods
imul
push
xchg
stc
into
out
scas
repz
(bad)
push
mov
inc
jp
nop
push
push
inc
cmp
(bad)
mov
loope
stc
pop
adc
imul
repnz
es
inc
sub
scas
repz
mov
std
out
jle
fsubrp
icebp
stc
fld
pop
(bad)
mov
outs
lock
mov
test
mov
lds
out
std
scas
pop
cld
fidivr
xor
jno
mov
retf
xchg
fistp
cmc
mov
jne
stc
adc
pop
outs
jmp
aas
lock
sti
out
(bad)
out
xlat
dec
inc
int3
jle
dec
cmp
mov
lahf
popf
push
dec
loop
(bad)
sti
aas
jns
xchg
mov
inc
mov
mov
loope
neg
ror
retf
scas
call
ss
neg
sbb
call
push
mov
aas
stc
sub
jecxz
mov
jle
in
std
jne
loopne
sub
stos
mov
in
sbb
inc
test
scas
dec
push
nop
daa
test
dec
(bad)
xlat
cmps
xchg
lds
pop
std
push
mov
mov
cld
into
mov
hlt
imul
mov
cld
push
mov
call
or
pop
daa
aad
shr
lock
mov
out
xchg
daa
mov
xor
out
std
push
fistp
std
pop
stos
mov
(bad)
dec
pop
jg
loope
iretw
jle
pop
xor
jae
test
xchg
(bad)
fisubr
jge
clc
cmps
jle
fucomip
pop
cld
mov
shr
cmp
inc
mov
outs
div
outs
(bad)
pop
rol
adc
fldcw
sbb
out
in
(bad)
std
push
mov
std
cmps
mov
xchg
es
cmc
jg
fucomip
aaa
cli
in
jg
(bad)
(bad)
jg
outs
idiv
xlat
pop
daa
sub
mov
jge
out
jg
sbb
push
mov
mov
std
out
in
repnz
ss
outs
icebp
pop
nop
jbe
pop
cli
mov
and
and
cld
mov
retf
(bad)
cmps
pop
fcomi
mov
xlat
stc
jne
pop
repz
stc
cmc
jg
pop
not
sti
mov
popf
pop
call
sti
jne
mov
inc
mov
inc
mov
(bad)
cli
and
mov
push
in
jle
jg
push
(bad)
jle
mov
stc
std
out
inc
mov
lahf
std
scas
das
jmp
sbb
(bad)
stc
mov
mov
jnp
pop
(bad)
mov
jg
(bad)
pop
cld
jp
xor
call
jne
shr
daa
mov
sti
mov
in
aaa
mov
sbb
inc
mov
std
jp
add
pop
out
mov
sub
pop
sti
xlat
mov
fwait
cld
xchg
or
xlat
outs
xchg
cld
push
mov
std
data16
lock
clc
jne
jge
(bad)
shl
lock
into
pop
std
dec
aas
(bad)
icebp
das
clc
fucomp
adc
jg
pop
out
movs
(bad)
std
fcmovb
pop
mov
mov
cld
out
leave
outs
hlt
pop
cld
inc
leave
outs
neg
outs
repnz
mov
pop
dec
push
ficomp
outs
call
xchg
mov
cld
push
mov
jle
fbld
cld
(bad)
cmc
hlt
mov
out
mov
std
in
das
int
jmp
mov
or
pusha
gs
aaa
and
dec
call
cld
in
enter
mov
(bad)
cmp
(bad)
cli
or
cld
out
xlat
sti
cmc
jle
sbb
add
stc
(bad)
inc
in
shr
outs
cmc
(bad)
es
push
jne
sbb
mov
ins
mov
add
repz
out
imul
clc
shl
icebp
mov
jg
popf
pop
xchg
rcl
xchg
cld
es
jae
ja
popf
ds
jg
(bad)
jle
fucomip
aaa
push
repz
sti
(bad)
push
jg
mov
out
lock
fcmovnu
popf
std
int3
lahf
hlt
shr
(bad)
nop
aas
out
std
xor
fist
inc
aam
outs
lock
push
mov
cld
jmp
xchg
jg
out
outs
clc
fwait
(bad)
cli
les
pop
aam
dec
pop
out
inc
(bad)
(bad)
sub
cld
(bad)
mov
cld
mov
icebp
outs
neg
adc
(bad)
mov
mov
dec
xor
jno
xchg
lahf
pop
stc
mov
adc
out
scas
inc
outs
sar
jg
inc
sahf
adc
icebp
imul
mov
mov
repnz
aas
mul
add
fstp
aaa
clc
sbb
mov
call
(bad)
fucomip
iret
stc
ficomp
(bad)
pop
sti
mov
(bad)
inc
icebp
sti
xchg
(bad)
pop
mov
mov
clc
aaa
jmp
je
sbb
data16
push
jl
mov
div
stc
lods
jle
fistp
and
test
cli
pop
xor
outs
cli
fwait
std
cmp
mov
std
mov
ret
outs
repnz
shr
loope
sti
fwait
cld
out
or
mov
movs
or
fucom
aaa
movs
xchg
xor
in
jle
(bad)
mov
in
imul
std
jmp
stos
cli
jmp
out
icebp
leave
std
mov
or
xlat
and
imul
cld
jmp
push
mov
inc
shl
jmp
(bad)
loopne
retf
inc
push
jo
idiv
pop
cld
adc
(bad)
inc
jg
daa
mov
arpl
adc
(bad)
pop
inc
test
lahf
xor
(bad)
outs
inc
mov
div
sti
mov
jg
sbb
jmp
hlt
(bad)
jbe
(bad)
out
clc
mov
mov
mov
popf
mov
or
sbb
dec
jle
fisttp
lea
fcomip
aaa
mov
outs
cmc
fwait
xchg
and
pop
cmp
mov
and
sar
shl
stc
jmp
xchg
(bad)
mov
(bad)
out
sti
outs
sahf
pop
cld
jne
(bad)
mov
dec
sti
(bad)
jmp
iret
dec
jg
aas
loop
jge
cld
jge
(bad)
leave
fucomip
mov
call
fstp
call
(bad)
ds
fst
sub
aas
neg
inc
leave
outs
repz
cmps
mov
cld
fwait
cld
cmps
aas
neg
push
mov
bound
xchg
repz
call
cmps
mov
(bad)
aaa
dec
jg
(bad)
mov
sbb
ja
lods
call
dec
mov
fistp
aaa
mov
xlat
clc
mov
idiv
(bad)
aaa
dec
mov
cld
mov
int
xchg
fisttp
retf
hlt
jmp
jp
std
scas
movs
xor
or
inc
inc
(bad)
pop
imul
mov
out
lahf
icebp
pop
(bad)
mov
neg
aas
(bad)
lahf
cld
(bad)
fdivr
stc
das
jmp
xchg
cld
inc
mov
sar
std
mov
jb
mov
jnp
jno
repnz
cld
dec
inc
aas
sub
cmc
adc
hlt
mov
lea
and
(bad)
jg
pop
jge
icebp
outs
cld
cmp
outs
cld
pop
(bad)
ss
jge
fwait
push
jp
mov
sbb
jmp
or
int
dec
clc
sbb
ja
dec
jle
fistp
hlt
mov
aaa
cld
int
xlat
pop
call
daa
(bad)
mov
shl
dec
rol
adc
or
popa
les
aaa
test
pop
pop
(bad)
jle
(bad)
pop
jle
jnp
add
in
imul
test
into
push
addr16
or
fistp
out
call
cld
aas
(bad)
jg
push
icebp
cmp
jmp
scas
mov
(bad)
mov
loope
fcmovnu
(bad)
fisub
imul
call
(bad)
in
fnstsw
aaa
test
clc
pop
ds
or
xchg
jp
pop
sub
clc
sbb
inc
inc
rcr
call
jmp
repz
hlt
rol
mov
jae
shr
pop
inc
aas
neg
jle
(bad)
out
mov
sti
mov
sti
sub
xlat
sti
jne
jge
(bad)
xlat
push
mov
mov
jle
pop
out
sti
or
(bad)
cmp
xchg
mov
jmp
mov
push
(bad)
mov
cdq
jmp
lahf
icebp
dec
std
scas
jg
(bad)
pop
(bad)
adc
dec
jp
pop
dec
pop
(bad)
into
jg
pop
(bad)
cmp
(bad)
jg
pop
sti
dec
sub
call
std
cmp
pop
lahf
push
cld
fnstcw
lahf
daa
clc
xchg
repnz
xor
pop
shr
inc
jg
inc
repnz
ja
mov
mov
dec
loope
cld
fwait
std
call
jg
fisttp
daa
sar
dec
jg
dec
cmps
cld
(bad)
leave
outs
lock
cld
sbb
jle
fcomip
mov
sbb
mov
lods
fcomip
mov
cmp
lahf
loop
jb
jle
sahf
test
xlat
cmps
cwde
loope
nop
(bad)
std
cli
mov
bnd
push
mov
jne
xchg
hlt
ja
jp
pop
fdivrp
jge
cmp
pop
jnp
cmp
xchg
jne
push
jg
dec
(bad)
stc
(bad)
ficomp
lock
pop
mov
lahf
cmp
push
jecxz
(bad)
mov
dec
push
pop
jle
xor
(bad)
movs
and
xchg
(bad)
jp
loope
shl
xlat
stc
xor
test
aaa
cli
lea
add
imul
mov
adc
cld
push
mov
scas
mov
std
sub
fwait
cld
xchg
aad
lock
pop
cld
fwait
sar
push
int
jae
dec
hlt
imul
push
enter
mov
std
push
repnz
outs
hlt
imul
mov
outs
std
dec
pop
mov
mov
mov
in
icebp
mov
(bad)
movd
fbstp
mov
clc
mov
cld
push
mov
sbb
(bad)
sub
xchg
fucomip
aaa
dec
sub
icebp
stc
jne
sbb
aaa
cli
sub
cli
lea
push
inc
push
aaa
clc
xor
push
imul
pop
push
call
add
jle
fcomip
(bad)
jle
fist
outs
repnz
dec
mov
(bad)
ja
dec
dec
fidivr
sub
mul
pushf
jle
add
cli
cld
mov
arpl
cld
es
xchg
cs
jecxz
clc
lods
jle
fistp
sbb
test
sti
lods
jle
(bad)
mov
pop
xor
ins
mov
pop
(bad)
loopne
jmp
inc
pop
inc
jg
mov
shl
sti
maxps
loop
out
sbb
jle
sti
jecxz
mov
test
ja
in
jle
fcomip
ja
jle
fucomip
xlat
dec
push
jb
sbb
xchg
mov
adc
mov
cs
xor
std
push
in
jmp
arpl
enter
pop
jle
mov
push
sbb
int
push
dec
imul
sub
fisttp
fwait
std
inc
in
adc
jns
mov
(bad)
mov
cmp
daa
cld
mov
int
neg
std
ss
adc
loope
mov
(bad)
mov
cmp
(bad)
aam
clc
jg
jmp
std
push
das
clc
ja
out
hlt
push
cld
mov
lock
mul
ja
std
shr
fdivr
icebp
fcomip
mov
popf
or
pop
das
stc
sub
dec
jg
in
sti
cmc
enter
enter
xchg
outs
stc
sbb
inc
mov
or
xor
(bad)
mov
push
jle
pop
not
and
cdq
jl
pop
lahf
cwde
and
fcomip
pop
cld
clc
out
hlt
or
aaa
stc
lea
jb
jle
fucomip
aaa
xchg
(bad)
std
out
jmp
outs
hlt
sbb
mov
mov
push
cld
inc
test
and
cli
xchg
outs
movs
add
jg
fcomip
mov
int
fucomip
mov
adc
stc
int
stos
fucomip
mov
sub
mov
test
mov
(bad)
aad
repnz
(bad)
adc
push
pop
std
stos
inc
lahf
sti
scas
cld
neg
loop
ins
hlt
popf
push
fcmovnbe
ret
out
scas
jg
outs
sbb
outs
call
outs
clc
fwait
std
ret
mov
cli
push
out
(bad)
std
ss
(bad)
std
(bad)
mov
retf
outs
inc
sbb
adc
sbb
push
mov
ja
shl
outs
std
mov
(bad)
jp
push
aam
lock
sbb
(bad)
loopne
pop
lock
aad
icebp
(bad)
inc
adc
es
shr
add
outs
stc
fwait
jmp
adc
mov
std
mov
ret
scas
or
xor
(bad)
push
std
cmp
cld
xchg
mov
push
mov
aaa
cli
sub
add
outs
jmp
pop
aas
icebp
out
jmp
(bad)
call
in
in
pop
cmc
ins
jg
sbb
jnp
push
(bad)
cmp
cld
xchg
mov
cld
mov
cli
leave
outs
(bad)
jmp
fsubr
cli
sbb
out
fld
(bad)
mov
xor
lock
out
out
lock
cmp
(bad)
ja
jp
jnp
idiv
cmc
jle
mov
mov
inc
mov
loope
ss
xchg
in
mov
mov
aaa
clc
lea
mov
(bad)
fld
in
mov
mov
cld
mov
jns
mov
fwait
pop
clc
mov
mov
fcomip
icebp
hlt
mov
neg
(bad)
loope
leave
in
cmp
jg
jl
leave
out
neg
jge
stc
outs
hlt
fcmovnu
stc
cmc
jle
pop
out
mov
jne
std
pop
jmp
aaa
cld
int
mov
mov
sbb
aaa
(bad)
(bad)
jle
cld
out
xlat
push
lock
scas
inc
loope
xor
outs
icebp
pop
std
out
repz
repnz
stc
(bad)
out
inc
and
out
lock
xchg
and
xchg
imul
outs
repz
dec
mov
inc
sub
pop
cmps
hlt
shr
(bad)
into
mov
std
idiv
xor
loope
jns
mov
xchg
fucom
sbb
jle
(bad)
mov
popf
aas
mov
jbe
jnp
pusha
cld
stc
in
mov
xchg
jmp
jle
jmp
(bad)
shl
mov
out
into
jmp
clc
out
pushf
cld
out
outs
lock
sbb
out
(bad)
sbb
es
leave
outs
jge
pop
dec
push
stc
fild
or
arpl
mov
mov
loopne
int
xchg
cmp
pop
jmp
cld
lods
jle
mov
out
stc
or
out
mov
mov
sub
cld
dec
jg
fcomip
aaa
and
movs
adc
fld
dec
ret
cld
push
mov
retf
inc
fild
jg
mov
mov
and
or
call
std
lahf
push
xchg
cmc
in
jmp
inc
mov
sahf
xchg
nop
cld
test
scas
sti
sbb
scas
leave
outs
cli
mov
loope
icebp
cmp
cld
mov
(bad)
movs
cmp
jg
mov
jnp
mov
cmp
fcomip
mov
mov
setg
fistp
shr
mov
push
leave
loopne
stc
arpl
cld
cmps
mov
or
(bad)
cmp
pop
out
stc
or
repz
and
neg
jmp
and
(bad)
pop
(bad)
je
mov
int3
shr
sbb
stc
leave
mov
sti
fstp
std
fcmovnu
std
mov
neg
neg
loop
push
std
jle
shr
mov
outs
stc
mov
out
cld
sbb
cmps
mov
dec
mov
cli
popf
jle
fucomip
ja
iret
dec
inc
and
sar
cmp
scas
inc
push
inc
mov
fucomip
mov
sub
hlt
maskmovq
test
xchg
nop
and
stc
fidiv
pop
cld
jp
leave
outs
stc
sbb
retf
adc
in
and
dec
sub
stos
div
stc
or
lea
mov
mov
call
cld
repnz
inc
cdq
sbb
ja
fisttp
mov
sti
jmp
cld
mov
jle
jnp
sbb
cmp
ins
mov
jg
fild
(bad)
jle
test
outs
imul
jp
xchg
(bad)
push
mov
fwait
push
mov
dec
pushf
mov
outs
mov
push
push
out
add
enter
jle
(bad)
jle
(bad)
ds
jle
fist
xor
aas
inc
std
aaa
dec
jg
pop
lock
mov
nop
fcomi
fwait
(bad)
data16
fild
aaa
std
sub
fisttp
ja
lods
jg
loop
sbb
js
repz
jmp
jle
aam
outs
stc
pop
(bad)
cs
ja
hlt
lds
lahf
call
std
fild
mov
mov
or
(bad)
ja
int
in
pop
push
(bad)
aaa
cmps
adc
(bad)
std
inc
mov
sub
pop
rol
(bad)
call
jo
or
push
dec
icebp
fwait
std
idiv
xchg
(bad)
(bad)
jg
scas
sti
pop
cld
idiv
jg
(bad)
mov
imul
(bad)
sbb
cli
leave
outs
icebp
arpl
jg
dec
ds
(bad)
adc
xchg
nop
cld
mov
cli
or
jg
fcomip
mov
pop
jg
(bad)
jle
out
mov
xchg
adc
lods
xor
test
push
jmp
fdivr
jmp
pop
mov
inc
mov
retf
xor
mov
jg
fild
aaa
jmp
xor
mov
shr
(bad)
cmp
cld
(bad)
ja
rcr
mov
aaa
cld
mov
pop
retf
mov
mov
and
(bad)
ja
popf
mov
test
mov
jle
(bad)
mov
mov
neg
test
cmc
xlat
sti
dec
jle
fucomip
mov
popf
cld
fwait
push
not
dec
jle
pop
(bad)
jl
inc
xchg
mov
outs
stc
leave
das
clc
test
(bad)
jg
(bad)
mov
pop
jg
(bad)
xlat
push
outs
rcl
cld
popa
mov
and
(bad)
adc
loop
outs
leave
mov
fwait
cld
call
lahf
es
leave
outs
mul
icebp
out
hlt
arpl
aas
dec
cwde
cld
push
mov
xchg
fucomip
push
lds
(bad)
fsubr
std
fwait
(bad)
push
jmp
cli
call
std
xlat
popa
and
cld
ins
jle
outs
ins
dec
test
gs
nop
bound
jmp
imul
mov
dec
jle
pop
out
aaa
and
add
add
cmc
outs
neg
repnz
call
std
fnstsw
(bad)
mov
and
jp
cmps
dec
sub
in
nop
movs
clc
or
mov
adc
sbb
sti
mov
std
inc
mov
cld
cmp
clc
mov
std
fucomip
xlat
cli
cmc
jle
pop
sti
aaa
clc
ins
dec
xor
sbb
pop
das
mov
lahf
(bad)
fld
jmp
or
ins
mov
xchg
bound
jle
call
jg
ins
out
cmc
jmp
dec
movs
mov
jns
fild
jmp
xchg
or
scas
ret
jmp
adc
outs
cld
pop
jmp
mov
add
leave
inc
(bad)
cmc
(bad)
inc
stos
xchg
leave
popa
jnp
arpl
(bad)
push
jmp
inc
stc
pop
jecxz
cld
lea
pop
jmp
clc
jne
std
(bad)
xlat
sti
xor
std
mov
shr
cli
out
bnd
inc
pop
std
push
mov
inc
adc
std
cmp
out
mov
scas
call
add
pop
mov
push
sahf
clc
xchg
mov
xchg
test
imul
mov
ss
(bad)
ss
push
xchg
cmc
xchg
push
popa
xchg
in
mov
xor
pop
sti
mov
pop
inc
mov
adc
adc
pop
not
sti
ins
mov
icebp
pop
shr
jle
(bad)
xchg
push
test
adc
jecxz
cli
xor
xlat
clc
xor
xlat
clc
xor
aaa
cli
dec
mov
in
aaa
mov
movq
fcomip
icebp
outs
cli
fcmovnu
sti
int
mov
jmp
in
std
jp
xor
sbb
xchg
fistp
stc
icebp
pop
sti
dec
pop
and
mov
mov
(bad)
sbb
shl
xor
cdq
cld
inc
mov
inc
(bad)
loopne
hlt
and
sti
aaa
(bad)
mov
cli
pop
test
mov
jae
in
xlat
cmps
movs
or
jmp
aaa
dec
jg
push
cmps
and
mov
xchg
inc
inc
cli
mov
cli
in
cli
xor
xlat
clc
xor
jg
fistp
aaa
jmp
mov
sbb
ja
mov
xlat
cld
jne
sub
imul
adc
(bad)
jp
xchg
dec
mov
shr
stc
add
stc
jge
out
xlat
clc
xor
mov
pop
out
push
push
retf
iret
fisub
shr
sub
ds
call
(bad)
dec
fwait
ss
into
mov
pop
out
jge
popf
aaa
pop
std
push
inc
mov
call
mov
ds
push
sar
enter
xor
mov
aad
push
(bad)
sub
xchg
mov
pop
pushf
out
sti
xchg
jle
add
dec
sub
ins
mov
cmp
or
jge
cs
jne
vpsllw
push
shr
cmc
rcr
rcl
jmp
cmp
les
jp
aaa
fwait
jl
scas
test
test
cmp
fxch
mov
and
or
sahf
sbb
jge
jecxz
stc
gs
cmps
and
lods
cmp
push
outs
repz
mov
cmps
jns
sbb
jmp
sbb
fisttp
ss
cmc
mov
pop
and
out
sbb
push
aas
jge
mul
repz
not
pop
jle
cld
std
imul
mov
adc
adc
jp
jg
cld
aas
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
